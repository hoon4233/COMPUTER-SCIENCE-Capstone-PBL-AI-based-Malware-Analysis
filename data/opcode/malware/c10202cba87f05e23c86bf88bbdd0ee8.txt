sub
or
aaa
and
movs
fisubr
push
cmps
sbb
and
je
rcl
aas
punpckhdq
fsub
js
fld
cmp
pop
adc
jnp
fist
test
and
add
imul
sub
fild
sahf
mov
fild
sbb
sub
daa
jns
and
mov
stos
imul
ret
jmp
es
outs
das
mov
sbb
mov
loope
cld
jno
and
mov
repnz
adc
push
mov
mov
inc
je
outs
test
shl
inc
les
add
lods
push
inc
jns
adc
pop
aas
shl
xor
xor
div
dec
xor
jg
dec
fld
push
cmp
es
hlt
inc
int
xchg
lds
inc
sub
pop
sar
fiadd
out
mov
pop
or
adc
dec
call
mov
pop
(bad)
jbe
mov
cmp
sahf
add
movs
cmp
je
mov
pop
jmp
call
daa
sahf
mov
loop
add
pushf
sub
(bad)
jbe
shl
in
adc
cmp
mov
js
pop
and
rol
test
inc
int3
or
mov
or
call
inc
ds
jnp
mov
(bad)
arpl
jnp
cmps
mov
add
dec
inc
pop
call
mov
cmc
xor
cwde
inc
in
in
out
fsubr
mov
inc
addr16
mov
mov
jae
fidivr
inc
inc
enter
aad
mov
hlt
xor
outs
call
rcr
add
jge
shr
lea
cmps
fsub
stos
out
jne
rcl
xchg
js
mov
and
(bad)
inc
call
jnp
push
or
push
or
movs
out
fist
ins
mov
call
(bad)
lea
push
das
mov
mov
dec
movs
adc
jnp
xor
cmp
fs
or
fiadd
mov
sub
sbb
sbb
aas
or
pusha
dec
retf
xchg
inc
outs
sbb
xchg
imul
mov
mov
lds
dec
xchg
adc
arpl
in
sub
movs
dec
pop
pop
lods
mov
cwde
popf
cld
and
push
test
push
lock
outs
stos
mov
(bad)
scas
mov
popf
(bad)
add
(bad)
jb
inc
ins
(bad)
out
stos
dec
and
mov
jb
mov
mov
js
stos
inc
inc
jecxz
shl
fwait
bound
(bad)
stos
daa
fisubr
add
xor
jnp
or
adc
arpl
je
sub
movs
sub
sbb
and
adc
push
imul
rol
mov
das
jae
dec
inc
mov
mov
lds
inc
add
scas
in
test
mov
jno
call
movs
sub
popf
cs
xor
lds
sahf
test
sub
mov
jbe
(bad)
aam
mov
pushf
inc
push
lods
(bad)
shl
push
push
mov
ret
(bad)
pop
cmp
or
and
and
cld
leave
cmc
out
test
lods
and
ror
test
dec
inc
in
push
jns
and
icebp
jge
xor
popf
cmp
xor
stos
dec
mov
or
retf
movs
loope
out
jmp
inc
mov
cmp
push
out
add
push
jl
movs
ins
cmp
popa
cs
inc
and
push
fwait
stos
add
popf
cli
aad
and
mov
das
pop
dec
ficomp
jb
pop
jmp
fucomip
jns
xor
pop
cdq
push
test
inc
iret
in
sub
out
push
fs
movs
mov
retf
jecxz
push
ds
jmp
outs
daa
stc
adc
cdq
rcr
cwde
sbb
and
pop
shl
les
mov
mov
add
mov
mov
adc
sbb
lods
sbb
mov
ins
call
lock
dec
add
jne
sbb
outs
aam
or
add
stos
and
mov
pop
adc
call
or
pop
lds
or
jp
or
js
test
sbb
sbb
pop
adc
cmp
sub
in
mov
push
lods
(bad)
sbb
jnp
sub
cmps
push
xchg
adc
aas
or
es
rcl
mov
std
adc
mov
and
loop
pop
mov
jae
jp
or
ins
in
ret
pop
and
test
mov
dec
int
pop
cmp
push
inc
and
fisubr
inc
jmp
sbb
jp
jbe
xor
je
xor
cmp
pop
pop
pushf
dec
inc
push
dec
jmp
jnp
push
(bad)
adc
dec
movs
aad
cli
stos
inc
cdq
pop
scas
std
lea
mov
cmp
jo
sub
sti
cmp
inc
lahf
xchg
mov
add
xchg
jecxz
mov
imul
inc
xor
sar
test
mov
rol
aam
aam
js
push
xor
inc
xlat
xchg
inc
dec
push
rol
adc
jl
mov
jb
or
cmp
les
mov
shl
sbb
mov
inc
out
les
ffree
push
shl
cmp
xchg
inc
in
into
push
bound
fst
pop
mov
sub
cwde
or
cmp
mov
mov
sar
adc
lods
xchg
pop
dec
inc
mov
or
hlt
aaa
and
xor
xor
xchg
mov
cli
int
das
sbb
dec
retf
imul
xchg
xor
shr
push
xlat
mov
add
cmp
enter
dec
rcr
adc
(bad)
mov
pop
mov
dec
sbb
neg
xor
or
rol
jp
js
adc
and
jg
and
in
sub
jl
mov
pop
push
rcr
jo
jecxz
inc
test
cdq
mov
cmp
rcr
(bad)
push
cmp
mov
push
sti
mov
je
cs
ss
pop
push
xlat
adc
adc
mov
xor
(bad)
je
sub
outs
push
pop
mov
jmp
xor
inc
inc
aas
out
movs
xchg
jmp
pop
pop
std
test
jp
movs
inc
jp
sub
mov
out
mov
pop
sub
jo
pop
fisttp
leave
cmp
out
xchg
leave
cwde
cmp
enter
mov
nop
inc
push
out
and
popf
imul
outs
mov
pop
and
sar
cmp
cmps
mov
xor
test
dec
mov
sbb
ss
cwde
dec
imul
shr
dec
push
add
out
rcl
cmp
xchg
or
movs
jb
mov
fwait
dec
aad
(bad)
loope
pop
dec
jne
xchg
adc
enter
in
les
jle
fcomp
arpl
ds
jle
fadd
and
pop
and
push
div
cli
nop
xchg
retf
inc
adc
inc
jb
mov
cwde
scas
adc
dec
es
jmp
mov
data16
ins
xlat
inc
mov
cmp
pop
pop
inc
(bad)
fdiv
mov
jbe
and
fild
xor
stos
pop
ret
jl
sub
inc
mov
clc
hlt
sbb
(bad)
in
jno
push
push
gs
(bad)
cwde
jnp
inc
jmp
mov
jb
loope
and
cmp
pop
and
idiv
xchg
lock
push
div
jmp
or
add
and
cmp
jo
add
imul
ins
std
int
cmp
pop
lea
pop
adc
push
popa
push
cs
das
pop
int3
mov
xor
in
sub
mov
jne
out
les
test
cli
mov
lds
in
mov
js
inc
sbb
cmps
mov
movs
mov
push
bound
cmp
cmps
mov
aas
sbb
jle
fs
int
mov
or
bound
inc
ins
movs
sti
inc
repz
pop
cmp
push
(bad)
mov
inc
mov
pop
mov
push
add
mov
add
dec
xor
mov
add
out
div
push
adc
out
ja
popf
fsub
jle
mul
jmp
(bad)
daa
(bad)
in
pop
cld
clc
(bad)
or
out
dec
cmp
leave
stos
ret
inc
(bad)
in
bound
pop
iretw
cli
std
shr
jmp
in
jne
test
cmps
mov
(bad)
loop
sub
mov
or
push
dec
jmp
icebp
lods
pop
inc
cmp
jge
repnz
adc
jo
mov
mov
cmp
adc
ins
pushf
ds
inc
shl
das
xchg
loop
push
call
ds
fst
mov
lods
xchg
push
jl
sbb
rcr
outs
inc
dec
mov
cmp
out
in
mov
lods
hlt
or
popf
lds
aas
cld
ror
inc
add
sar
pop
cmp
push
mov
ja
mov
cs
sbb
adc
out
lods
mov
call
bound
sbb
sub
gs
cmps
and
jge
mov
es
cmp
adc
jnp
pop
rcr
in
cdq
ins
push
jl
pop
loopne
sahf
mov
jecxz
cmps
xchg
cwde
mov
jnp
and
stc
sub
and
jle
mov
xchg
sub
xchg
sbb
mov
push
ds
neg
inc
and
inc
mov
jl
pop
or
and
in
aas
test
push
retf
and
in
and
fs
mov
push
mov
inc
imul
sub
out
fsubr
div
es
pop
loop
cmp
movs
in
mov
ret
test
cmp
mov
add
scas
fadd
mov
pop
jmp
push
out
dec
xor
push
arpl
mov
fucom
cmc
jmp
inc
cdq
addr16
aam
push
std
cmp
cmp
sahf
adc
jl
(bad)
test
push
cwde
or
scas
movs
lock
mov
dec
cmc
pop
sar
call
sbb
frstor
xchg
out
loope
inc
xor
int
out
dec
push
dec
hlt
dec
sub
les
loope
into
(bad)
xchg
mov
mov
cdq
push
mov
adc
mov
sbb
in
retf
dec
test
ret
out
or
sub
test
xor
std
pop
leave
sub
push
sub
jns
and
lods
scas
add
add
add
xor
mov
pop
jns
jl
ret
or
dec
xchg
push
push
push
jp
std
xchg
std
inc
daa
adc
clc
nop
fs
sbb
fild
fild
scas
push
add
and
sub
test
cld
sahf
push
loope
jg
test
xchg
pop
das
popf
mov
add
ror
inc
jmp
jnp
inc
pop
pop
out
cmp
ins
xor
movs
pop
(bad)
(bad)
cmc
mov
mov
inc
inc
test
leave
inc
inc
mov
adc
lds
jl
pop
mov
out
retf
push
xchg
dec
pop
test
add
add
push
(bad)
leave
sbb
xchg
addr16
mov
call
js
ror
jl
lock
mov
fcmovb
jge
std
xor
pop
(bad)
cmp
mov
cmp
add
inc
jmp
dec
lahf
call
test
xor
in
int3
cmps
sbb
dec
or
ins
adc
mov
jbe
push
xchg
imul
inc
push
retf
mov
and
adc
cs
dec
in
pop
jp
jp
inc
add
mov
adc
xchg
or
sbb
ins
push
retf
test
ret
inc
rcr
inc
stos
jecxz
adc
cmp
jno
and
jg
push
loope
es
push
push
lods
sbb
jno
dec
fcom
pop
mov
jbe
clc
int
push
adc
pop
and
pop
ins
or
in
mov
pop
jl
mov
das
mov
mov
sub
pop
fs
clc
xor
xchg
into
xor
xlat
call
in
inc
stos
mov
cmps
test
sbb
push
jle
push
aad
test
push
sti
pop
xor
(bad)
bound
in
out
popa
daa
pop
jl
or
fwait
ja
mov
enter
mov
jnp
mov
mov
or
lods
jl
pop
dec
test
sbb
or
outs
add
(bad)
xchg
fst
push
dec
hlt
retf
and
dec
icebp
mov
mov
stos
fidiv
leave
popf
add
jns
pop
xchg
and
or
add
hlt
push
mov
mov
call
cmp
jg
mov
sbb
mov
sbb
xchg
jge
test
fild
pop
mov
push
adc
mov
add
sbb
push
popf
sar
stc
mov
fucomip
call
push
mov
pusha
dec
bound
cvttps2pi
inc
xor
mov
pop
lahf
push
dec
(bad)
gs
out
inc
pop
and
inc
mov
inc
cmc
pop
scas
inc
femms
push
in
imul
call
stos
jb
or
mov
pop
jbe
add
ja
pcmpeqd
dec
pop
inc
pusha
in
jge
mov
jb
push
pop
add
adc
cwde
xchg
inc
jno
sbb
scas
(bad)
test
bound
aas
pusha
pop
add
mov
mov
xchg
add
sti
push
or
ja
cmps
adc
add
ja
pop
test
popf
or
mov
or
inc
sub
cli
xlat
mov
push
imul
xchg
(bad)
jmp
scas
or
xor
mov
mov
dec
dec
sbb
cmp
js
push
mov
pop
inc
mov
mov
mov
xor
sub
jle
pop
(bad)
cdq
adc
scas
jl
pop
ins
inc
cld
call
dec
shl
mov
out
sub
icebp
mov
mov
push
rcl
aad
lock
loope
shr
in
test
aas
iret
shl
dec
data16
cmp
cdq
cmps
fmulp
pushf
stos
imul
fsub
dec
push
jmp
mov
ret
test
rcr
fs
cdq
imul
pushf
fimul
sub
icebp
jmp
fldlg2
mov
push
jp
mov
sub
aaa
rcr
fst
sub
movs
pop
call
mov
cmp
dec
fiadd
push
jae
bound
pushf
cmp
sub
xlat
outs
mov
sub
mov
mov
xchg
std
push
ror
loopne
call
cmps
xor
xor
ds
fcmovb
(bad)
mov
jp
loope
daa
mov
test
adc
dec
inc
sbb
fidiv
and
fisub
mov
clc
push
inc
xor
sti
out
mov
mov
loopne
jne
push
imul
call
cmc
(bad)
ja
rcl
test
xchg
call
sbb
mov
push
sub
mov
and
je
jp
out
hlt
xor
jmp
retf
mov
in
std
sbb
or
imul
jbe
fs
inc
out
xor
xchg
sbb
icebp
adc
xor
out
cmc
pop
mov
pop
pop
jp
dec
(bad)
dec
shl
ins
cmc
pop
jae
adc
shl
mov
push
jbe
pop
aam
cmp
xchg
cmp
sub
xor
pusha
sbb
cdq
cli
push
fs
sbb
cmps
adc
cs
call
xchg
pop
pop
push
mov
outs
push
cmc
(bad)
scas
mov
xor
jne
add
scas
loop
sti
scas
mov
fisttp
xchg
add
leave
rcl
push
stos
aad
sub
sub
aad
adc
fsub
inc
xchg
fdivr
inc
pop
(bad)
or
push
ds
jbe
jecxz
inc
movs
mov
pop
cmp
repnz
aad
fdiv
mov
jno
xchg
stos
jmp
dec
(bad)
stc
mov
neg
daa
xor
shl
cmp
push
sub
shl
mov
pop
or
test
dec
mov
arpl
lds
push
hlt
dec
clc
stc
push
ins
pop
lea
jno
dec
call
pop
test
add
dec
cs
or
retf
and
outs
inc
in
sar
dec
pop
(bad)
sbb
out
(bad)
pop
pop
or
out
inc
call
lahf
xor
push
ins
popf
sar
adc
and
fsubr
adc
xchg
fwait
mov
popf
adc
mov
xlat
idiv
aaa
push
xchg
shl
test
cmp
shl
stos
lods
mov
inc
mov
mov
jmp
push
jbe
pop
push
mov
fwait
xor
sub
adc
in
jbe
jbe
bound
mov
mov
out
cmp
dec
cmp
add
cmp
imul
or
pop
and
xchg
mov
mov
(bad)
shl
sub
jmp
mov
cs
cmp
inc
pop
jns
and
rol
push
(bad)
enter
outs
cmp
into
xor
jmp
pop
or
lods
imul
and
jnp
mov
sub
jle
ds
call
add
xchg
scas
mov
adc
ins
movs
adc
sbb
add
add
and
push
mov
aad
scas
jp
jge
sahf
cs
ja
aaa
fs
pushf
test
out
push
add
repz
sub
arpl
pop
scas
mov
stos
and
sbb
adc
call
push
push
inc
adc
xchg
ds
rcr
adc
xor
pop
dec
jne
add
add
pop
push
ja
minps
mov
inc
adc
push
sbb
xchg
pop
sbb
pop
mov
jg
das
adc
adc
inc
add
pop
sub
and
xchg
cwde
mov
pop
daa
push
sbb
cmc
inc
cmp
jbe
cmps
dec
mov
in
popa
(bad)
jecxz
xor
jbe
mov
pop
int3
call
push
inc
test
fwait
hlt
ja
push
enter
jp
iret
sahf
loop
push
xchg
rol
push
sub
and
or
cmp
out
sti
dec
sbb
mov
rcl
rcr
cmp
and
xor
pop
es
idiv
jne
mov
jo
test
inc
jle
mov
pop
add
aaa
cmp
jmp
rol
test
rcr
add
or
sub
les
push
hlt
adc
test
int
stos
jecxz
clc
pop
cmp
int3
dec
cmp
aad
imul
aam
mov
push
clc
jae
mov
or
arpl
or
loopne
pop
add
cmp
cmps
in
jecxz
mov
sbb
cmp
or
cmp
loopne
cld
scas
jge
pop
jp
mov
mov
cli
bound
cwde
pop
rol
or
mov
fdiv
xor
mov
imul
cmc
add
mov
fisttp
stos
xchg
sub
fist
xor
inc
leave
shr
dec
mov
inc
iret
arpl
lea
or
xor
add
mov
xor
jle
mov
mov
inc
es
sbb
mov
jns
test
or
aas
test
inc
inc
xchg
(bad)
hlt
add
dec
test
sbb
mov
inc
mov
adc
test
fs
pop
mov
sub
shl
rol
mov
dec
adc
xor
mov
pop
jp
jg
test
dec
out
push
sbb
sub
call
mov
(bad)
mov
dec
xchg
adc
xor
outs
data16
sub
nop
push
(bad)
scas
pop
push
daa
imul
or
sbb
test
ret
test
jmp
mov
mov
or
dec
push
or
or
adc
jne
and
sar
mov
fs
rcr
or
xor
aam
jl
mov
lahf
gs
inc
adc
xchg
ins
out
adc
lds
jb
or
das
ret
jp
mov
ins
sbb
xor
push
jmp
sbb
and
test
adc
or
ror
cld
mov
mov
mov
test
clc
(bad)
push
inc
fldenv
sub
dec
sbb
movs
add
mov
stc
fstp
inc
adc
in
jmp
pop
add
mov
sbb
retf
in
xchg
aaa
push
xor
sti
sbb
mov
or
test
lock
mov
mov
jns
and
pop
cli
push
add
sub
loopne
dec
movs
icebp
imul
imul
cld
in
lea
fwait
xor
sti
and
aad
mov
and
hlt
iret
push
sub
stos
mov
retf
add
sbb
mov
fsub
ror
loope
enter
call
ds
jae
and
fidiv
or
scas
pop
std
ret
cmp
loopne
retf
in
jge
pop
or
mov
scas
test
lods
mov
inc
mov
shl
jmp
test
es
test
cwde
out
sub
or
and
pop
dec
sub
inc
push
stos
aas
movs
ds
mov
push
mov
shr
jmp
xchg
cmp
mov
pop
jge
addr16
js
fsubr
push
mov
add
dec
cmp
mov
sub
push
add
ins
imul
pop
pop
shl
xor
loopne
ret
je
lods
cmps
mov
mov
in
lods
inc
call
mov
cdq
dec
enter
test
jns
inc
jns
sbb
or
fldcw
ss
xchg
add
add
scas
sub
jns
fiadd
jne
adc
xor
lea
or
or
push
imul
adc
and
icebp
call
jnp
imul
cs
cs
mov
jmp
mov
jecxz
es
std
ins
mov
stos
and
pop
jo
sub
adc
inc
or
sub
dec
jl
mov
fwait
scas
bound
pop
xchg
add
lock
sar
lods
ins
loope
(bad)
icebp
out
and
scas
pop
(bad)
test
push
mov
in
inc
xlat
sub
and
pop
dec
mov
jmp
or
daa
arpl
cmp
push
clc
popa
movs
push
rol
inc
lods
stos
sub
or
adc
retf
xor
jmp
and
adc
out
stc
ins
test
cdq
jmp
or
in
jmp
ins
inc
or
add
fld
lods
sti
pop
dec
fldcw
lds
mov
push
ror
pop
std
xor
xor
lods
shl
mov
sub
sub
mov
sbb
sar
(bad)
mov
or
hlt
sahf
pop
jne
nop
push
or
std
inc
cwde
js
pop
daa
movs
mov
mov
jns
cmps
pop
xchg
pop
xchg
les
(bad)
(bad)
jmp
mov
add
sub
sti
je
inc
cwde
mov
adc
pop
pusha
pop
dec
or
sbb
retf
jmp
movs
xlat
jnp
and
add
cmp
ret
outs
jnp
xchg
dec
lahf
inc
jl
adc
and
outs
jmp
lock
jo
mov
test
(bad)
and
mov
pop
inc
mov
ins
pop
daa
cmp
cmc
outs
xlat
mov
mov
xchg
inc
pop
imul
pushf
xchg
adc
call
inc
xchg
test
xchg
sub
icebp
cmp
in
test
mov
out
xorps
adc
cmp
retf
cmps
xchg
push
inc
inc
es
mov
xor
shr
mov
(bad)
int3
sub
cld
jnp
xor
mov
mov
dec
call
and
mov
aam
cwde
addr16
daa
adc
sbb
cld
jbe
cmp
(bad)
cld
pusha
cmp
mov
jecxz
out
cld
jae
add
repz
rcl
adc
adc
mov
xor
pop
inc
movs
push
movs
sub
stos
hlt
sbb
cmc
shr
cmp
gs
xor
stos
dec
or
cmp
(bad)
pop
mov
xlat
or
sub
ss
jne
cmp
(bad)
cmp
ds
or
inc
je
pop
or
enter
adc
(bad)
xchg
sub
sbb
sub
push
scas
mov
fisubr
ins
ins
js
adc
test
sub
fidivr
pop
mov
imul
mov
mov
fiadd
mov
ror
xor
cmp
in
inc
aaa
and
gs
or
push
jmp
inc
add
mov
and
out
pop
ss
out
sub
cs
add
jle
jo
xor
mov
ret
mov
sub
adc
push
push
xchg
mov
sahf
scas
inc
add
outs
sub
mov
xor
pop
call
sbb
dec
frstor
div
jnp
stc
mov
adc
xchg
ret
aaa
jp
imul
mov
dec
(bad)
loope
jge
adc
push
pop
push
cld
lds
out
stc
test
add
movs
int3
adc
mov
dec
inc
pop
mov
movs
xor
lds
mov
mov
or
push
pop
push
xchg
inc
pop
cwde
aam
pop
sbb
mov
ror
pop
rol
scas
add
jl
daa
stc
sbb
test
scas
and
pop
push
(bad)
lds
ja
jge
in
cmp
xor
scas
mov
stc
outs
arpl
xor
call
jmp
inc
inc
push
push
loope
out
and
loope
pop
add
repnz
(bad)
dec
inc
inc
push
outs
lds
movs
sub
call
fcomp
movs
push
fmul
add
and
jbe
and
cs
and
call
sbb
inc
dec
cld
jle
xchg
(bad)
jge
jne
sbb
jne
cmp
jnp
popa
cmc
movs
fisubr
sub
dec
jg
out
inc
dec
out
push
adc
push
sub
push
inc
fisubr
ins
sub
sbb
js
js
retf
cs
pop
dec
jl
shl
fs
mov
push
pop
cmp
push
inc
push
push
mov
imul
xlat
jmp
push
push
lds
xor
mov
das
dec
jnp
cmp
cmp
pusha
xor
out
scas
jbe
shl
hlt
sbb
push
mov
sub
and
ins
and
sbb
dec
dec
mov
mov
(bad)
enter
or
(bad)
pop
pop
imul
mov
inc
sbb
dec
mov
ds
cmps
fldcw
jns
and
js
movs
cmp
ret
stos
mov
mov
outs
out
xchg
mov
std
jg
div
leave
enter
scas
ss
scas
(bad)
mov
cld
xchg
pop
pushf
shl
push
call
add
and
(bad)
ss
push
aas
sar
dec
jmp
jb
and
push
dec
xchg
imul
pop
xchg
xor
and
pop
stos
pop
mov
sub
push
hlt
jecxz
push
leave
push
adc
repz
shl
jno
inc
push
dec
movs
shl
in
ins
sub
mov
sbb
push
lods
sub
bound
lock
ss
cmc
hlt
stos
inc
hlt
add
ins
lds
mov
sbb
pop
mov
inc
in
add
arpl
mov
or
mov
je
out
ror
mov
repz
inc
jo
jns
ins
pop
lock
popa
push
into
nop
dec
sbb
push
sbb
clc
add
pop
cmps
push
test
adc
sbb
loopne
(bad)
pusha
xor
add
test
shl
pop
stos
sbb
outs
imul
jmp
mov
jb
shl
pop
jmp
addr16
inc
(bad)
mov
mov
faddp
lds
sub
mov
cmp
je
out
pop
jae
iret
cs
add
add
fs
add
mov
and
mov
(bad)
mov
mov
pop
jb
daa
cmps
enter
adc
outs
mov
and
pop
mov
push
jge
jne
fcmovb
rcl
lds
inc
not
xchg
cmp
es
retf
push
cli
inc
jge
push
add
loop
jle
xchg
inc
inc
inc
movs
movs
cmps
addr16
sbb
dec
lock
push
movs
pushf
jge
mov
push
imul
inc
adc
call
outs
in
push
inc
push
jae
push
jae
lea
stc
jnp
or
or
out
adc
mov
leave
jno
out
cld
popa
and
int3
jbe
push
push
es
xor
mov
adc
cmp
ret
movs
aam
scas
fsub
cmp
sub
cs
inc
mov
adc
adc
inc
inc
pop
test
and
pop
addr16
xchg
lods
push
scas
outs
je
push
sub
out
sub
loopne
mov
jecxz
inc
mov
aad
addr16
mov
ret
pushf
xor
and
xor
jmp
or
enter
rol
inc
cmp
jge
xchg
jge
jg
or
jbe
mov
fdivr
jne
mov
pop
cmp
stos
dec
mov
(bad)
rol
fwait
mov
ret
mov
in
loopne
sbb
ja
pop
dec
mov
and
add
add
call
jl
into
(bad)
mov
push
jnp
dec
push
outs
adc
push
(bad)
cmp
mul
jmp
inc
daa
dec
push
in
les
ja
daa
fwait
mov
add
pop
(bad)
retf
movs
inc
xchg
sub
sub
mov
pop
fcom
sub
inc
test
jne
mov
out
imul
xchg
dec
and
inc
fadd
call
xor
fbstp
lea
out
adc
mov
loop
stos
jg
cmp
fdiv
aad
(bad)
cmc
xchg
and
fwait
jno
xchg
out
inc
jg
xor
push
inc
sub
mov
sub
mov
add
cwde
inc
adc
inc
adc
mov
push
mov
jmp
mov
shl
push
mov
adc
aad
pusha
inc
cdq
mov
call
inc
cmp
or
scas
push
ret
leave
cmp
data16
adc
inc
ja
xlat
mov
imul
xor
xchg
das
lock
push
mov
dec
cs
jnp
inc
jle
call
cwde
adc
arpl
adc
js
retf
addr16
mov
aam
enter
fdiv
aas
loope
xchg
xor
icebp
cmp
cs
push
mov
pop
movs
mov
jmp
push
xchg
in
mov
adc
add
(bad)
xchg
js
retf
push
jnp
mov
je
mov
xchg
xchg
jo
(bad)
jnp
inc
sub
fsub
lods
leave
push
jb
and
fs
ins
rcr
dec
imul
das
fmul
pop
jmp
push
mov
retf
dec
and
inc
push
dec
mov
mov
ret
pop
pop
jne
cmp
lds
retf
lock
fdivr
xchg
das
inc
ret
call
jecxz
(bad)
jmp
and
cmp
out
inc
pop
jg
sbb
ficomp
pop
out
fmul
mov
xor
cmps
fisttp
jp
gs
aas
fwait
mov
loope
mov
adc
jp
(bad)
sti
mov
and
inc
pop
pop
in
push
pop
inc
inc
pop
(bad)
sti
add
cs
ja
mov
xor
cmp
nop
rcl
ja
add
mov
jl
enter
test
(bad)
bound
push
mov
inc
xchg
pop
stc
arpl
sub
push
pop
and
dec
shr
cmc
aad
jno
(bad)
inc
lds
mov
or
and
mov
ror
sbb
mov
stc
bound
fst
jo
xchg
or
sub
imul
js
cmp
aas
mov
mov
lods
mov
mov
pop
cmp
adc
sub
sbb
jo
icebp
lea
lds
mov
iret
inc
push
add
xor
mov
jns
cmps
outs
mov
cld
je
inc
or
add
xchg
test
pushf
or
mul
sbb
es
or
jbe
mov
imul
(bad)
lock
mov
loop
push
(bad)
adc
lock
pop
jp
inc
js
in
add
and
xor
mov
ja
dec
inc
scas
loop
mov
ror
add
pop
movs
out
push
repnz
rol
rol
aas
adc
data16
add
rcr
std
pop
test
(bad)
fistp
jl
mov
pop
shl
push
xor
push
jmp
imul
and
test
push
movs
or
or
and
sti
bound
add
pop
mov
lods
imul
jecxz
inc
(bad)
div
aaa
mov
xchg
xor
xchg
mov
imul
mov
sub
inc
cmp
cmp
mov
mov
inc
cwde
push
xrelease
inc
je
adc
cdq
xor
fiadd
cli
or
dec
addr16
cmp
daa
lahf
call
pop
xchg
or
push
stos
nop
and
enter
add
mov
mov
jge
call
push
sub
cmps
je
mov
fisub
ror
loope
mov
jne
sbb
jae
retf
adc
inc
push
mov
mov
dec
repnz
fild
xor
leave
xchg
pop
jae
test
or
lods
or
mov
push
pop
or
mov
or
retf
lods
adc
dec
sub
dec
push
icebp
push
std
ins
add
rol
push
inc
lds
bound
(bad)
jmp
or
and
sub
aaa
icebp
xor
inc
jne
push
mov
pop
movs
pop
fstp
push
cwde
and
mov
movs
sub
push
shl
ror
cmp
xchg
cmp
mov
pop
add
and
outs
xchg
xchg
xor
pop
in
sbb
les
adc
push
fcos
les
dec
xchg
pop
sbb
ins
mov
mov
mov
adc
mov
push
pop
test
(bad)
fadd
push
lock
in
outs
(bad)
addr16
push
fdivr
mov
retf
je
ret
addr16
lods
repz
cmp
or
dec
dec
adc
fcom
rol
xchg
mov
sub
(bad)
or
push
sti
(bad)
jmp
mov
das
jp
(bad)
jmp
bound
jo
inc
(bad)
pop
jns
cmp
or
xor
pop
mov
out
jbe
pop
pop
in
xchg
lods
jnp
mov
xchg
dec
mov
pop
sub
fcomp
inc
dec
inc
bswap
inc
ss
outs
mov
dec
mov
test
ror
xchg
out
mov
jmp
jo
xchg
rol
push
ins
daa
sub
jl
gs
test
push
inc
inc
data16
jle
lock
movs
xlat
cwde
sub
mov
ja
jmp
mov
sub
push
sub
sub
dec
dec
retf
addr16
pop
loope
jmp
scas
arpl
std
jecxz
mov
pusha
repz
mov
dec
das
cmc
jnp
pop
mov
mov
dec
mov
push
retf
nop
hlt
add
add
or
pop
and
xchg
mov
dec
lock
push
mov
mov
jp
jns
ds
lea
mov
cmps
in
push
jp
inc
cmp
jo
mov
loopne
jb
mov
loop
out
pop
mov
das
hlt
stc
and
adc
fld
mov
push
pusha
nop
jle
jo
fbstp
sub
pop
data16
cmp
dec
pop
dec
int
dec
dec
pop
push
inc
fldenv
push
out
and
scas
sbb
xor
std
mov
xor
sbb
xor
icebp
push
pusha
adc
ins
cmp
scas
out
(bad)
push
aas
(bad)
sti
inc
mov
icebp
cmps
push
movs
fidivr
xor
mov
sub
inc
ds
xor
push
(bad)
dec
clc
push
dec
in
xor
push
xor
imul
sbb
sti
fbstp
dec
adc
push
jo
cli
inc
sub
stos
mov
push
ja
mov
mov
sbb
mov
mov
or
mov
fist
mov
or
jo
leave
jns
in
pop
ror
mov
cmp
clc
enter
pusha
pop
sar
jb
dec
mov
ds
inc
imul
fwait
and
mov
icebp
lds
inc
out
pop
jl
mov
sbb
popf
dec
das
mov
add
pop
push
mov
pop
xchg
pop
jg
inc
push
dec
pop
mov
xchg
inc
aas
pop
push
js
(bad)
mov
pop
lods
mov
pop
push
and
les
clc
call
push
xor
pop
add
(bad)
mov
mov
idiv
xchg
jp
clc
dec
aad
cld
xor
pop
mov
call
mov
sub
pop
es
xchg
scas
jmp
sub
jmp
in
mov
adc
push
sub
or
cmc
xor
adc
call
push
retf
cld
push
pop
mov
cmp
inc
cdq
enter
inc
jo
cwde
xchg
mov
ror
push
mov
push
das
cmps
movs
or
sub
fidivr
mov
pslld
push
ss
push
les
sub
cmc
call
add
retf
adc
jmp
(bad)
std
cmps
xor
and
xor
jle
cdq
push
aas
mov
push
bound
jae
push
daa
pop
sahf
push
inc
mov
push
dec
and
sti
test
mov
cmps
inc
mov
inc
ins
fldcw
jb
pop
and
pop
outs
cmps
popf
mov
rol
(bad)
mov
xchg
inc
out
push
sub
xchg
mov
sbb
stos
ss
pop
mov
stos
mov
push
rcl
adc
std
push
lods
and
cmps
outs
add
dec
(bad)
jmp
ds
sub
and
cli
xchg
test
mov
cmp
mov
loop
and
add
movs
aad
daa
aas
dec
jle
push
mov
stos
dec
mov
cmp
nop
out
xchg
mov
mov
cmp
cmc
mov
sub
lods
sahf
mov
mov
push
mov
fs
lods
(bad)
sub
das
xchg
mov
aaa
and
gs
mov
jns
jo
cdq
(bad)
sub
push
cmp
out
add
call
cmps
cmp
sub
sbb
mov
push
dec
or
hlt
pusha
out
xor
cmps
cmp
jns
(bad)
test
or
push
and
iret
mov
inc
stos
push
mov
test
xor
imul
xlat
sar
jne
call
or
adc
add
loopne
mov
mov
mov
cmovo
inc
and
sahf
push
inc
jbe
sub
popa
call
mov
mov
mov
pop
in
lds
push
pop
imul
mov
(bad)
and
pop
xor
sar
call
out
fcomp
cmp
push
jmp
dec
cmp
xor
repnz
in
mov
(bad)
xchg
cmps
push
ins
ins
inc
popa
scas
jmp
ins
pop
pop
stc
push
test
mov
pusha
retf
out
and
ins
fstp
arpl
daa
push
call
gs
dec
fstp
je
fimul
adc
dec
pop
and
adc
cmp
movlps
jnp
rol
jmp
mov
pop
repz
sbb
std
fst
inc
sub
jmp
jecxz
scas
jmp
xor
pusha
cli
scas
cmc
(bad)
aam
pop
push
push
popf
add
out
leave
adc
push
fild
mov
xlat
not
jmp
push
mov
add
sub
and
fidivr
jmp
or
or
or
xor
mov
hlt
mov
call
inc
mov
mov
mov
popa
jo
imul
retf
push
lods
cwde
inc
sub
sbb
cwde
jecxz
or
ins
sbb
cdq
inc
push
ja
(bad)
clc
pop
rcl
jl
jg
pop
mov
adc
lods
pop
(bad)
test
push
fwait
movs
mov
movs
mov
mov
xor
sahf
xchg
adc
dec
inc
(bad)
mov
ins
in
sahf
jle
and
mov
mov
add
mov
lds
jg
push
mov
rol
add
pusha
idiv
aam
inc
pop
fsub
xchg
dec
ins
outs
push
cmp
aas
or
int
or
je
pop
nop
das
xor
arpl
enter
or
jno
xor
push
jbe
mov
imul
cdq
stos
push
cmps
add
repnz
movs
repz
adc
sldt
cdq
test
pop
lea
dec
sub
stos
jle
dec
ror
mov
sbb
pop
or
jg
int3
add
mov
(bad)
pop
lods
sub
push
(bad)
ret
loopne
mov
add
sti
hlt
fiadd
push
jge
fsubr
out
sbb
enter
inc
(bad)
sbb
jl
pop
cmc
jne
push
adc
adc
adc
push
jmp
add
or
pop
into
cli
adc
dec
cdq
retf
and
cmp
fidivr
stos
dec
adc
das
retf
jmp
sub
jmp
mov
jg
sbb
lods
aas
sbb
scas
sub
ins
mov
fdivr
shr
xchg
mov
inc
aaa
rcl
mov
sub
push
cdq
adc
les
push
ss
lods
icebp
ja
cmps
xchg
pop
cli
ret
aas
adc
loopne
pop
daa
cmc
sub
inc
cdq
add
adc
stc
or
mov
xor
mov
jno
imul
inc
sbb
call
inc
push
dec
pop
cmp
popa
jbe
xchg
and
mov
cwde
xor
(bad)
cmp
mov
(bad)
jmp
adc
repz
lea
dec
das
shl
aas
jns
gs
lods
movntq
jecxz
jge
repz
fucom
retf
xchg
xor
add
daa
dec
lea
rol
sbb
cwde
push
sub
and
push
sub
push
adc
xor
add
mov
push
push
(bad)
(bad)
adc
out
aam
sbb
fcomp
cmps
xchg
sar
sub
or
sbb
mov
prefetch
mov
pop
inc
in
inc
mov
ret
(bad)
cmp
sbb
xor
xor
loop
retf
shr
and
dec
push
sub
mov
cmp
mov
cs
aam
xor
mov
push
and
adc
inc
cmps
pop
push
mov
xor
xor
jecxz
ins
mov
fisub
shr
sub
mov
fnstsw
cs
ja
cmp
lds
je
sbb
les
lahf
mov
mov
cmps
pop
push
(bad)
fsubp
cmp
mov
pop
clc
cmc
push
fwait
and
xchg
in
adc
or
in
inc
push
mov
repz
xor
arpl
cld
imul
pusha
fcmovb
into
jae
out
push
jbe
xor
xchg
test
shl
mov
sbb
xor
fnstenv
push
xchg
movs
adc
cld
xor
sub
sub
cmp
outs
outs
add
mov
test
fs
jbe
aas
dec
and
test
pop
or
jne
xor
cmp
cmp
popa
inc
jecxz
cmp
pop
xchg
pop
fcomp
dec
jle
adc
add
aad
cmp
in
inc
or
inc
pop
or
mov
mov
cmp
pushf
push
cmps
mov
sbb
es
mov
movs
dec
out
retf
push
(bad)
and
xchg
push
loope
xor
addr16
loop
mov
clc
les
ss
bndstx
cmps
icebp
loope
jecxz
xchg
dec
adc
rol
push
ja
imul
mov
repnz
(bad)
jp
pop
imul
mov
mov
push
movs
outs
jg
cld
stc
adc
jle
call
push
ins
clc
pop
xor
adc
mov
push
call
aam
cld
ss
mov
pop
push
inc
xchg
push
xor
xchg
mov
scas
mov
and
test
mov
fstp
addr16
hlt
push
xor
call
sbb
das
jg
cmp
sahf
les
inc
sub
and
cwde
pop
(bad)
retf
add
aas
pop
test
mov
sub
call
int
cmp
les
clc
(bad)
and
mov
add
in
dec
sbb
dec
movs
sahf
adc
dec
pop
inc
xor
call
mov
pop
and
cld
jne
cmp
mov
jp
cmps
jne
cmps
movs
into
loopne
daa
out
sar
add
jp
ror
xchg
loope
xor
push
repz
xor
fcomp
pop
or
xor
(bad)
adc
cmp
mov
cmc
or
pop
addr16
add
stc
arpl
inc
ss
adc
mov
imul
cmp
fstp
ror
fiadd
add
ja
sub
pushf
or
movs
xor
div
aas
push
and
adc
pop
adc
mov
test
mov
dec
dec
aad
mov
push
dec
pop
repz
out
int
out
call
adc
mov
fs
jmp
pop
stc
fnstenv
sbb
mov
or
outs
inc
retf
imul
clc
fild
cld
dec
cwde
dec
push
shr
jmp
ins
pop
jae
jns
mov
push
pop
stos
push
inc
aad
rol
jge
loope
jns
mov
in
adc
push
lock
and
mov
sub
movs
dec
jae
mov
neg
add
xor
pop
and
and
and
xor
jns
and
jnp
mov
mov
jne
out
mov
sbb
data16
sub
add
mov
mov
ins
retf
ds
into
jmp
xor
mov
pop
mov
pop
push
pop
and
cld
scas
push
jmp
daa
movs
cld
into
xchg
(bad)
outs
std
adc
fidiv
xchg
mov
(bad)
sahf
std
stc
imul
inc
adc
pusha
mov
jo
xor
adc
test
push
scas
dec
adc
xchg
sar
(bad)
dec
xor
fisub
dec
repnz
and
inc
xor
mov
jmp
cli
jecxz
add
call
sub
bnd
mov
jnp
mov
dec
adc
inc
cmp
rcr
jmp
hlt
pop
sub
call
aas
or
bound
shr
mov
aad
push
mov
iret
push
xchg
and
xchg
pop
shr
adc
push
data16
cmps
in
inc
pop
and
movs
add
and
popf
jmp
xchg
cmps
lods
dec
sub
xor
out
les
inc
mov
je
inc
jp
daa
pop
inc
mov
cmp
ret
lock
fld
pop
jg
aam
ror
js
inc
sub
cmp
dec
jns
inc
fs
scas
pusha
jmp
data16
sbb
xchg
repnz
adc
ftst
stos
popf
bound
jae
movs
pushf
pusha
xor
inc
popa
test
mov
mov
sbb
sbb
out
dec
fidivr
and
sar
lods
or
sbb
jb
jmp
movs
cwde
call
pop
cmp
imul
push
mov
mov
mov
dec
adc
jb
cwde
inc
xor
mov
pop
gs
gs
add
mov
mov
in
outs
push
hlt
js
icebp
shl
push
push
out
out
stc
ret
mov
and
dec
sbb
mov
sbb
pop
call
mov
jmp
es
pop
mov
add
and
and
pop
mov
dec
jo
xlat
xor
sub
dec
mov
sub
hlt
dec
(bad)
sbb
mov
add
std
mov
xchg
cmc
pop
adc
dec
xchg
dec
dec
jnp
clc
sub
enter
std
pop
adc
jecxz
add
aaa
outs
add
push
cld
js
mov
fld
add
xchg
cdq
xchg
and
push
mov
gs
mov
add
sbb
jmp
xchg
xchg
mov
test
inc
lds
sbb
sub
(bad)
imul
mov
xor
dec
jne
sbb
push
stos
xlat
sub
sub
xor
push
xor
lock
out
or
mov
test
or
jae
sub
xor
add
ins
adc
sahf
cmc
mov
in
gs
mov
push
xchg
and
ja
rcl
shr
jbe
push
retf
mov
fmul
(bad)
aam
scas
call
push
call
cwde
daa
push
aam
mov
mov
mov
lock
jne
mov
jl
push
push
xor
mov
rcl
sbb
popf
push
cmp
gs
xlat
xor
or
dec
cmp
add
ss
mov
into
dec
pop
mov
xchg
ret
jecxz
push
pop
or
jmp
movs
sub
jecxz
push
mov
xor
pop
jnp
in
aam
arpl
mov
sar
call
sub
dec
pop
cmp
inc
call
jmp
fnstsw
gs
cli
ret
sbb
jb
pop
and
pop
sbb
push
dec
ins
bound
int3
sub
mov
ret
dec
xchg
inc
jmp
popa
fld
cmp
xchg
mov
data16
dec
sbb
dec
and
mov
add
mov
mov
mov
xchg
sub
jae
jl
iret
inc
jae
pusha
das
retf
fistp
retf
dec
sub
mov
jl
add
mov
push
ret
sub
es
cmp
xchg
push
imul
jno
mov
jge
inc
jmp
(bad)
inc
push
xchg
mov
dec
lahf
xchg
gs
cmp
mov
inc
cmp
xor
push
fdivr
cli
or
and
mov
xchg
repz
ins
sub
(bad)
sti
(bad)
icebp
sbb
xchg
cmc
inc
push
fisub
jle
jle
sbb
aas
mov
test
scas
in
mov
popa
stos
jmp
test
(bad)
inc
inc
xchg
sbb
(bad)
inc
mov
shl
je
sbb
mov
aam
sub
cdq
inc
pop
mov
mov
shl
push
push
(bad)
sti
div
ret
mov
pop
xlat
xchg
adc
into
call
and
push
jmp
dec
(bad)
cmp
scas
pusha
in
push
and
jno
pop
ret
out
(bad)
icebp
mov
mov
ds
addr16
cli
idiv
mul
push
xchg
jecxz
sar
mov
hlt
mov
sbb
jg
sub
mov
add
or
mov
ss
in
add
stos
push
std
inc
sbb
jmp
dec
push
bound
ret
xchg
dec
mov
xchg
out
dec
outs
xchg
mov
retf
cmc
repnz
xor
xchg
std
fwait
cmp
xor
ja
lods
adc
sbb
sar
out
add
dec
and
pop
inc
pop
rcl
daa
(bad)
loop
sbb
(bad)
cwde
ret
(bad)
sub
pop
scas
imul
outs
sub
loopne
hlt
outs
jno
pop
mov
mov
inc
(bad)
sahf
dec
aam
jl
sbb
inc
xchg
pop
dec
and
jmp
adc
shl
in
(bad)
sahf
jns
xor
(bad)
add
add
fs
xor
gs
dec
xchg
retf
test
inc
test
cmc
push
stc
dec
or
inc
addr16
jmp
pop
push
(bad)
out
inc
retf
mov
imul
xchg
add
nop
push
add
inc
shl
jecxz
mov
and
mov
movs
mov
xchg
mov
pop
and
mov
mov
adc
mov
adc
test
mov
hlt
imul
inc
repnz
add
inc
cmps
test
adc
cwde
clc
ins
in
test
loopne
mov
mov
xchg
gs
cmp
aam
push
mov
adc
in
(bad)
mov
pop
push
add
inc
xchg
loop
test
(bad)
dec
js
ins
(bad)
mov
xchg
loopne
ror
ret
out
lods
sub
lds
jp
mov
or
cs
fist
cmp
inc
inc
mov
jns
mov
sub
or
movd
stc
jbe
cmp
(bad)
xor
retf
sub
sar
xchg
xchg
and
shl
and
mov
dec
fist
xchg
push
js
xor
ins
push
inc
and
sbb
jne
pop
xor
mov
inc
ins
sub
fnstcw
or
call
push
cmp
dec
ret
mov
fld
(bad)
inc
push
adc
cli
fisubr
cmp
adc
xchg
out
xchg
aam
sar
sub
cmp
int
js
sbb
sbb
fisttp
and
jl
jmp
add
jnp
bound
sbb
mov
imul
and
jge
xchg
rcr
xor
push
retf
stc
pusha
(bad)
inc
stos
jns
inc
aam
fstp
ds
push
jp
jg
ret
(bad)
idiv
push
and
or
fwait
mov
fimul
test
sub
add
xchg
shr
inc
xchg
jl
and
or
pop
xchg
mov
in
mov
sub
jae
neg
test
pop
push
push
xor
call
sbb
pop
cwde
jmp
es
adc
jnp
gs
mov
fcom
scas
(bad)
pusha
push
imul
add
sub
scas
sbb
mov
loop
push
adc
xchg
ss
inc
sbb
mov
cs
jmp
cs
and
mov
es
cmp
ss
(bad)
aam
or
xor
scas
dec
pusha
push
inc
or
mov
leave
jmp
outs
loopne
sbb
xor
cmp
(bad)
sbb
mov
idiv
icebp
or
mov
mov
add
inc
push
stc
repnz
shl
cmp
sub
jmp
xor
sub
stc
jl
leave
or
sti
fdivr
in
in
or
movs
cmc
adc
push
ficom
sub
ja
fidivr
iret
mov
push
or
test
(bad)
jle
cmp
inc
sbb
ss
movs
call
and
xlat
lea
call
mov
call
daa
es
mov
out
xor
rol
icebp
add
cwde
cmp
retf
push
aaa
jle
cmp
mov
lods
inc
imul
fmul
jmp
push
xchg
adc
sbb
mov
cld
out
sbb
push
test
int3
in
jne
mov
fidivr
jmp
jbe
inc
ret
push
or
and
loopne
(bad)
mov
xchg
xchg
out
retf
jp
shr
fadd
jbe
cmp
xor
and
or
int
sub
in
enter
xor
hlt
or
xor
lahf
aam
jae
mov
aad
sub
and
hlt
jnp
inc
mov
jne
and
aaa
push
and
cmp
inc
cmp
ins
mov
je
loope
cdq
in
cmp
jp
aad
aad
jmp
fwait
jno
add
inc
ins
push
inc
cld
pop
jnp
lods
movs
sbb
jo
cmc
or
out
test
imul
dec
cld
std
rcl
call
enter
push
xchg
test
inc
out
xchg
jl
sub
test
stos
push
aas
mov
xchg
xchg
sub
push
and
push
int3
pop
rcr
jnp
popf
inc
gs
cli
xor
jnp
sbb
push
(bad)
das
(bad)
jnp
sub
inc
adc
movs
cdq
cli
adc
pop
cmp
pop
in
and
xchg
je
ret
ds
ret
or
xchg
jns
xor
pop
out
pop
cmp
movs
jmp
fcomip
call
sbb
sub
repz
sub
lods
out
vmulsd
add
push
and
daa
(bad)
xchg
mov
sbb
cld
xor
lods
sbb
dec
popf
jmp
add
test
cwde
push
sahf
mov
or
outs
es
ret
sbb
dec
add
cld
(bad)
out
sub
pop
mov
adc
aad
int3
jl
cld
pmaxub
loopne
test
adc
or
or
dec
inc
push
into
jo
xor
nop
gs
or
inc
add
pop
xlat
mov
ss
pop
xor
enter
jg
test
clc
xor
adc
xchg
and
adc
mov
iret
jl
or
mov
jg
pop
imul
sub
rol
xchg
je
shl
repnz
push
loop
stos
clc
in
iret
and
test
arpl
cld
ds
retf
and
pop
cmp
call
shr
dec
mov
scas
jo
je
ins
div
sahf
in
xchg
mov
adc
mov
pop
dec
scas
in
js
leave
into
bound
pusha
cmp
mov
mov
not
mov
mov
adc
movs
lods
clc
cli
int
adc
neg
adc
and
jl
mov
mov
mov
adc
std
add
xor
inc
mov
sbb
cld
aad
test
cmps
adc
stos
das
shl
enter
and
add
push
xor
aam
mov
gs
cmp
jnp
ds
iret
cs
add
mov
movs
stos
std
push
or
push
add
les
jb
mov
or
sbb
movs
mov
sub
ss
cmps
cmp
jl
loopne
into
ss
sub
movs
popf
dec
xor
jle
inc
push
xor
movs
mov
or
push
pop
mov
imul
mov
(bad)
xchg
dec
mov
das
fstp
sti
loopne
jbe
fcom
sub
pop
int
mov
pop
add
and
stc
and
cli
pop
xchg
inc
scas
cmps
fadd
pop
loopne
das
rcr
scas
(bad)
pop
cmp
arpl
ror
push
push
push
xor
movs
loop
mov
es
mov
loopne
movs
adc
cmps
popa
fsubr
(bad)
das
jge
and
jno
jmp
xor
pop
data16
mov
jle
dec
cmp
(bad)
push
push
cs
outs
(bad)
jbe
test
(bad)
ins
pop
stc
push
push
jl
rcr
push
in
push
xor
add
lods
xor
add
mov
std
jg
in
add
dec
hlt
pop
popf
retf
out
push
into
rol
sar
mov
call
stos
mov
into
dec
fisttp
ret
add
xchg
shr
(bad)
hlt
mov
mov
stos
push
cmp
jecxz
xchg
aad
fnsave
jmp
cld
call
or
xor
or
jge
xor
daa
inc
sahf
jb
ficomp
inc
cmps
xchg
pop
mov
sbb
push
dec
dec
loopne
dec
xor
dec
shr
push
cmc
push
mov
xchg
gs
in
push
sub
ins
xchg
leave
mov
dec
add
xchg
mov
jns
xchg
pop
fbld
jnp
xchg
movs
arpl
icebp
int3
sbb
sub
or
cs
(bad)
cmp
sti
jbe
in
(bad)
gs
inc
pop
ins
aas
mov
sub
test
and
sysret
or
gs
popf
data16
push
pushf
(bad)
mov
jbe
xchg
mov
and
and
sbb
xchg
scas
fldenv
lds
pop
cwde
cmps
mov
mov
addr16
test
sbb
sbb
ret
ja
push
std
outs
loop
(bad)
imul
cdq
mov
push
ret
jno
jb
fwait
pop
pushf
scas
cmp
pusha
cmp
in
mov
lods
fisub
into
dec
cmp
cdq
neg
jbe
xor
retf
gs
test
loope
bound
mov
mov
and
daa
mov
clc
out
cdq
fistp
cmp
repz
add
sub
fnstsw
push
out
scas
loopne
mov
in
mov
repz
jns
inc
and
popf
xchg
lds
repnz
pop
sbb
or
lock
sahf
dec
es
xor
pushf
icebp
mov
mov
cmp
rol
int
and
mov
mov
adc
jnp
xor
mov
pop
sar
test
js
jno
ror
mov
jecxz
(bad)
sti
mov
add
loopne
test
inc
(bad)
xchg
mov
cdq
mov
adc
inc
mov
cmp
ret
nop
sub
mov
test
lods
mov
icebp
sbb
pop
data16
jecxz
dec
fcom
shl
adc
out
mov
ret
out
cli
or
fild
dec
cmp
mov
in
popf
sbb
mov
mov
push
sub
mov
icebp
push
pandn
das
cmc
cmp
sbb
dec
inc
xchg
sub
mov
stos
lahf
test
jle
and
xor
and
jmp
mov
xlat
jne
mov
fstp
ja
xor
enter
inc
or
pop
and
out
adc
sub
xchg
xorps
std
and
mov
out
data16
(bad)
mov
mov
xor
stos
mov
into
or
addr16
adc
inc
sbb
daa
ins
fcom
pop
es
push
pop
mov
jns
sbb
scas
pop
dec
mov
outs
(bad)
jmp
jmp
nop
cld
out
mov
movs
adc
sub
mov
inc
or
sar
popf
mov
mov
push
mov
fstp
addr16
pop
(bad)
push
test
xor
sbb
xor
cmc
or
lahf
and
add
popa
inc
into
jge
mov
inc
push
pop
daa
ja
push
in
mov
daa
cs
and
lods
movs
popa
sbb
je
dec
push
push
int3
ins
dec
(bad)
outs
xor
jmp
push
aaa
lods
and
scas
xor
ret
pop
ret
mov
mov
std
pop
in
adc
xchg
lods
ins
or
jg
mov
aad
lods
cmp
call
mov
ret
dec
mov
out
jl
out
scas
ret
aaa
xchg
(bad)
shl
lea
push
repnz
data16
add
xor
adc
mov
sbb
fucomi
sbb
adc
cdq
push
leave
sbb
or
sti
lock
test
stos
sbb
call
mov
pop
ficomp
stos
sub
ret
xchg
fbld
addr16
pop
rcr
push
sbb
xor
dec
push
mov
add
out
gs
imul
cld
imul
(bad)
pusha
inc
loopne
inc
jg
jecxz
mov
mov
sbb
cmps
lds
mov
jb
repz
xor
mov
and
xor
pushf
aaa
or
js
imul
cmp
jecxz
or
mov
push
cmc
dec
push
arpl
pop
and
push
adc
push
mov
jbe
mov
pop
mov
or
adc
cmp
test
pushf
mov
adc
shl
in
cmp
xchg
xchg
push
(bad)
mov
inc
xchg
stos
mov
out
and
add
cwde
mov
(bad)
scas
jl
mov
push
sbb
rol
mov
sbb
cmps
sbb
das
retf
ins
(bad)
push
push
sahf
dec
lock
xchg
mov
push
dec
std
pop
sbb
std
sahf
scas
fidiv
jl
(bad)
mov
sbb
int3
repnz
dec
outs
xchg
jg
loope
dec
fs
mov
ret
mov
pop
in
call
retf
or
cwde
ficomp
push
aad
or
sub
ret
sbb
xchg
enter
scas
push
xchg
data16
push
cmp
adc
mov
or
sbb
mov
cmp
hlt
xchg
push
inc
and
sbb
pop
dec
scas
(bad)
pop
repz
dec
and
ins
push
push
add
das
mov
das
test
in
pop
mov
sar
pop
xchg
inc
xchg
xor
push
sub
shl
jge
bound
out
and
mov
fs
ins
mov
jmp
les
pop
dec
or
push
inc
mov
call
call
fcomip
xor
and
jecxz
push
sub
jbe
(bad)
test
sbb
stos
loop
cmps
dec
mov
fnsave
ds
pop
push
ja
jmp
xor
in
jnp
lds
aaa
loope
sub
and
in
fld
arpl
or
pop
push
mov
clc
jbe
enter
add
mov
cmp
std
inc
test
jbe
outs
push
popa
cmc
or
push
js
pop
dec
imul
sbb
jo
mov
dec
xchg
adc
push
jecxz
(bad)
frstor
leave
sbb
dec
fdiv
push
sub
inc
call
pop
mov
js
and
push
imul
adc
mov
shl
cmp
jmp
shl
mov
test
mov
jge
adc
ret
mov
les
mov
add
das
push
mov
jmp
jae
dec
jmp
add
pop
jecxz
daa
adc
push
std
xor
les
pop
cli
jge
mov
les
sbb
fisttp
dec
push
sar
and
out
and
jl
ins
fstp
xchg
fs
(bad)
mov
pop
cdq
in
popf
add
imul
fcom
jns
cli
les
add
inc
dec
mov
add
xchg
jne
sub
mov
mov
jge
fbld
inc
arpl
jmp
add
jne
test
into
dec
in
nop
test
xor
(bad)
cmps
lods
pusha
adc
fs
js
pop
dec
daa
movs
sbb
inc
jae
int
movs
lahf
(bad)
movs
push
mov
adc
dec
arpl
int3
jnp
pop
pop
out
lock
sbb
out
xor
and
cmp
sub
popa
stos
fs
xor
pop
cmp
into
mov
mov
lds
ds
fmul
or
in
mov
jp
dec
rcl
out
and
rcr
add
push
out
(bad)
std
imul
push
gs
or
and
sbb
mov
jnp
loop
and
mov
add
test
in
cs
pop
jae
call
lods
gs
or
(bad)
sti
add
dec
push
push
push
in
(bad)
xchg
jg
or
scas
xchg
jns
std
mov
jmp
cmp
mov
stos
add
pop
pop
cmp
add
dec
cmp
push
sub
retf
cmp
sbb
pop
das
inc
mov
push
jnp
fisub
lock
pop
test
inc
jo
mov
popf
sar
das
fmul
std
mov
push
cmps
iret
cmp
dec
pop
fist
mov
ds
adc
pop
cld
sub
add
sbb
stc
js
repz
enter
and
dec
das
push
rol
pop
retf
push
xchg
jp
pop
ins
iret
addr16
xor
jmp
pop
jg
push
xor
das
test
push
imul
push
out
test
repz
das
jmp
inc
scas
pop
jp
pop
push
mov
mov
pop
adc
or
or
imul
mov
adc
retf
pop
in
add
sbb
push
mov
leave
and
aad
movs
dec
jg
call
inc
push
daa
aad
push
js
cmp
test
mov
fistp
mov
inc
aas
pop
jle
sub
jle
dec
or
bound
sti
or
push
ret
push
mov
bound
or
enter
dec
dec
sub
sbb
or
popa
and
outs
out
xchg
mov
pop
aas
xor
pop
mov
dec
jno
mov
inc
sub
gs
xor
add
add
or
inc
ret
xlat
push
adc
arpl
sar
dec
inc
xchg
push
xor
add
mov
scas
pminub
ja
cmp
jb
test
in
adc
dec
inc
fild
(bad)
or
popf
lock
icebp
jb
aad
and
inc
sbb
mov
xor
jmp
dec
pop
into
imul
pop
loop
xchg
or
adc
push
addr16
mov
imul
xchg
xchg
test
jg
test
hlt
out
mov
xor
ficom
in
dec
shr
int3
addr16
(bad)
push
pop
rol
das
xchg
dec
and
xor
(bad)
mov
clc
mov
push
jbe
sbb
ret
arpl
mov
push
inc
lock
stos
dec
test
int
jo
jae
push
dec
inc
lds
ins
mov
mov
rcl
imul
and
icebp
in
xchg
out
cmp
cli
je
push
xor
push
repnz
inc
push
or
mov
xchg
inc
nop
(bad)
movs
or
int
and
rol
sub
loopne
je
cdq
pop
inc
rol
test
shl
xor
mov
jmp
push
xor
jg
mov
mov
sbb
jo
xchg
test
cmc
call
jae
jg
ins
(bad)
std
fidiv
mov
dec
fimul
sub
jns
add
mov
(bad)
lahf
pop
sbb
das
das
xor
jnp
test
cmp
gs
or
fst
ja
and
inc
sub
inc
add
pop
inc
mov
mov
jle
movs
adc
popa
jge
inc
aad
cs
jmp
cmc
push
ret
popf
mov
push
enter
cmp
adc
loopne
mov
sar
pop
call
lds
in
in
test
or
pop
jmp
call
sbb
push
pop
out
ins
push
imul
cmp
lods
dec
jns
and
sub
in
pushf
imul
cmc
fistp
push
cdq
mov
push
(bad)
loope
pop
mov
cs
jmp
pop
in
or
jp
lock
jecxz
mov
icebp
and
data16
mov
sub
stc
sub
not
push
bound
mov
clc
loopne
mov
mov
lods
add
dec
repz
aaa
xchg
(bad)
pop
ins
dec
imul
mov
icebp
jb
fwait
sbb
push
push
fimul
xchg
pop
les
dec
stos
push
test
js
(bad)
pop
fisttp
ins
sahf
push
xlat
jg
jno
cmp
push
adc
in
test
cmps
push
ins
mov
test
mov
xor
call
call
add
jo
lahf
sbb
fld
(bad)
jge
push
cmp
cli
inc
sahf
das
xchg
ror
inc
ja
mov
xchg
mov
rcl
mov
fistp
dec
aas
sub
pop
test
and
fsub
dec
push
jge
and
int3
ds
iret
sub
and
jns
bound
rol
out
push
imul
jge
cs
dec
movs
sbb
xor
pop
scas
xchg
call
add
dec
mov
xor
out
repz
nop
shr
mov
inc
imul
das
mov
push
push
retf
adc
repnz
test
mov
mov
sub
lock
sub
mov
push
(bad)
scas
call
and
inc
icebp
mov
(bad)
pop
dec
pop
pop
push
xor
adc
das
and
pop
retf
or
stos
xor
sbb
push
fcom
adc
pop
aaa
pop
ror
in
adc
mov
data16
leave
dec
dec
jbe
jnp
xchg
inc
lods
jne
test
inc
ds
jmp
sub
cdq
inc
cs
jmp
fcomp
into
and
cmp
dec
mov
push
inc
aaa
sub
mov
sbb
movs
sub
call
mov
outs
cmps
adc
(bad)
dec
jno
(bad)
movs
add
(bad)
dec
jbe
lock
cs
repnz
mov
mov
shr
(bad)
lds
inc
cmp
inc
mov
imul
xchg
inc
push
ret
lea
adc
push
pop
cwde
cmps
push
cmp
movs
pop
add
mov
sbb
push
jecxz
or
mov
xor
popa
push
inc
shr
xchg
or
jae
idiv
lock
add
std
pop
ds
rcl
inc
jo
sub
jnp
cmps
rcr
xor
or
daa
mov
inc
mov
int3
fild
push
push
fist
mov
mov
push
jo
xchg
pop
ud0
push
xchg
cmp
bound
mov
cmp
lods
test
inc
dec
movs
or
mov
and
sub
aas
sub
scas
call
cmp
xor
shl
cmp
repz
push
push
call
je
js
push
fadd
scas
jl
dec
fmul
cmps
xor
pop
xor
imul
xchg
xchg
inc
xchg
cmp
addr16
sar
rol
and
adc
imul
lods
add
sbb
repz
jmp
mov
or
retf
ds
gs
inc
push
adc
pop
ss
cli
push
shl
(bad)
jnp
jle
mov
xchg
mul
stc
or
rcr
inc
dec
pop
pop
std
mov
cmp
inc
mov
mov
inc
fisttp
xor
lldt
outs
call
ss
pop
mov
inc
leave
mov
ror
mov
or
nop
lahf
mov
sbb
cli
cmp
adc
push
ins
xchg
pop
pop
mov
xchg
add
stos
mov
or
ret
mov
mov
movs
cdq
jo
movs
mov
mov
and
cmps
inc
std
push
into
cmp
sub
pop
fcos
sub
sub
ss
sti
jae
push
fld
stos
mov
shr
xor
pop
sub
xchg
shl
outs
jp
push
jmp
pushf
les
dec
and
stc
leave
xchg
mov
popa
into
repnz
dec
ss
inc
mov
in
push
fwait
dec
or
outs
lea
pop
jmp
popa
add
xor
scas
mov
test
push
test
sbb
mov
mov
adc
loopne
clc
mov
(bad)
lea
jg
(bad)
scas
xchg
retf
sub
cwde
push
retf
sub
sub
es
and
cmp
shl
add
xor
retf
mov
or
loopne
or
xchg
js
and
sub
inc
pushaw
dec
push
gs
mov
out
xor
or
sbb
push
(bad)
sbb
dec
and
pop
dec
scas
(bad)
ror
bound
and
jmp
bound
mov
dec
mov
inc
and
fiadd
jo
outs
cmp
push
mov
jg
fnstcw
adc
xchg
leave
dec
shl
mov
fdiv
js
mov
cmp
add
sbb
adc
repz
fild
inc
inc
sub
push
push
mov
fnstenv
mov
pop
int
ds
cmp
lea
xchg
cmp
dec
sub
test
xor
or
inc
sub
xchg
sub
ss
mov
imul
jno
push
js
mov
xor
mov
clc
fmul
jmp
lahf
jecxz
cmp
mov
hlt
pusha
aas
jmp
mov
imul
in
mov
jecxz
ret
in
jb
adc
pop
lahf
jbe
cmp
test
push
sbb
inc
(bad)
dec
mov
adc
gs
sbb
shl
cmp
jle
hlt
mov
rol
push
cmp
das
je
leave
xor
cmps
pop
stos
inc
out
cs
or
fstp
mov
js
mov
(bad)
xor
in
jb
repnz
ss
xor
xor
cmp
mov
adc
leave
cmp
dec
push
or
sbb
idiv
jmp
daa
std
mov
fwait
out
push
es
cdq
aad
adc
jge
pushf
mov
sub
repz
out
out
jae
scas
std
(bad)
push
jne
xor
sub
mov
js
add
push
dec
cmps
fimul
xlat
and
pop
pop
popf
cmp
xor
and
fld
call
test
shr
cdq
imul
scas
push
xchg
popf
mov
(bad)
dec
mov
push
aad
or
xor
adc
inc
sub
mov
pop
cmp
xchg
jmp
mov
not
dec
mov
mov
addr16
add
test
test
push
sti
das
push
cmc
cmp
popf
fimul
and
retf
mov
add
in
bswap
out
pushf
xlat
jbe
inc
mov
jmp
js
fisttp
add
lahf
mov
sbb
ins
cmp
out
imul
fmul
and
in
push
repnz
mov
or
mov
xchg
xlat
out
mov
sub
pop
dec
fs
mov
and
out
add
xchg
dec
loop
mov
sub
daa
outs
es
sbb
repz
or
cmp
das
and
and
test
adc
aaa
xor
fisub
xchg
lahf
mov
pop
loop
xlat
clc
mov
gs
mov
jns
mov
push
scas
push
and
call
daa
mov
or
dec
clc
(bad)
push
add
rcr
or
jle
pushf
xor
jnp
js
and
out
outs
push
pop
jmp
push
jns
fild
pop
aaa
adc
into
xchg
pop
push
cmc
call
push
push
mov
and
div
repz
imul
retf
mov
push
sbb
(bad)
(bad)
rcr
scas
xchg
mov
pushf
inc
mov
dec
add
loope
mov
fcom
adc
adc
sub
xchg
jge
push
cmp
shl
cmps
pop
xchg
scas
mov
mov
icebp
xchg
xchg
loop
mov
jae
test
jns
daa
mov
sti
cmp
retf
jae
ret
pop
pusha
and
stos
in
add
js
adc
mov
jmp
jne
fucomp
sub
pop
(bad)
xor
inc
mov
fild
mov
shl
test
mov
dec
add
std
and
mov
mov
imul
daa
cld
xor
mov
stos
je
mov
xchg
in
adc
mov
add
std
outs
jmp
loop
and
ja
sub
loop
push
cmp
pop
dec
lahf
push
addr16
jmp
inc
stos
dec
sub
add
std
mov
enter
pop
sub
je
push
test
pop
je
aad
cmp
pop
aas
lds
push
movs
pop
sbb
push
add
dec
add
or
cmp
fwait
stc
mov
(bad)
adc
imul
adc
popa
ss
out
sub
pushf
aas
je
pusha
call
jno
popa
in
in
mov
rcr
mov
push
cmp
sub
sub
fucomip
push
push
pop
call
xchg
push
mov
mov
inc
jmp
push
inc
cwde
mov
popa
inc
cld
inc
cmps
stos
adc
cmp
add
bound
loopne
xor
ror
cmp
pop
adc
(bad)
fisub
mov
(bad)
push
mov
inc
sub
ror
jle
cmp
test
ins
stos
mov
in
mov
jl
stos
pop
retf
in
cmp
xchg
jmp
aad
inc
and
mov
(bad)
or
mov
iret
jle
rcr
mov
imul
pop
arpl
inc
mov
jge
mov
outs
jmp
clc
cli
imul
pop
xor
pop
out
std
mov
lods
ror
sub
jp
es
test
popa
movs
jo
fst
ret
ret
jbe
loopne
cmp
cmp
xchg
iret
sbb
adc
push
pushf
mov
pop
pop
jle
jge
push
test
push
mov
aad
push
pop
daa
repnz
or
push
xor
cwde
call
inc
push
push
aad
xchg
cmp
pop
push
adc
sar
mov
jmp
dec
inc
pop
outs
lods
mov
mov
jl
pop
xchg
outs
sub
and
rol
dec
mov
call
mov
jp
cmps
loop
mov
jmp
mov
cdq
out
imul
jmp
inc
mov
xchg
push
in
push
pushf
mov
jae
inc
test
dec
or
fsub
pusha
addr16
outs
jle
ja
pusha
ins
and
aad
dec
sar
rcr
jmp
inc
push
lahf
cmp
inc
pop
mov
and
push
stc
xchg
and
mov
dec
in
xor
je
pop
pop
addr16
cmp
sub
push
xor
jp
mov
xor
sahf
lods
nop
pop
xchg
clc
in
mov
sub
inc
push
mov
mov
sbb
push
adc
aam
push
jno
jns
movs
shr
std
nop
loopne
mov
or
sub
data16
pusha
or
mov
mov
pop
mov
pusha
pop
dec
hlt
pop
inc
xor
out
adc
popf
pop
movs
je
push
cdq
test
rcl
stos
arpl
dec
cmp
test
cmp
cmp
das
jns
popf
push
scas
ins
cmc
mov
jae
(bad)
cdq
lahf
push
imul
xlat
add
gs
into
jl
add
push
add
xchg
mov
mov
fmul
aaa
and
imul
push
fild
lea
in
std
or
mov
inc
mov
sbb
retf
inc
sahf
lahf
out
mov
(bad)
(bad)
daa
pop
std
(bad)
cmp
bound
dec
add
div
les
push
mov
in
cmpxchg
imul
mov
mov
nop
sub
stos
mov
in
popa
in
jmp
stc
mov
sbb
jae
aad
mov
fld
push
das
adc
mov
pop
cmp
rcr
sahf
aaa
lods
sahf
mov
pop
addr16
test
repz
int
xchg
push
sub
add
adc
jge
jg
icebp
pop
mov
cmp
add
les
pop
cdq
sar
scas
xchg
mov
mov
and
sub
or
adc
sbb
xor
add
mov
lahf
xchg
jmp
jb
sbb
in
and
mov
aas
sub
pop
mov
movs
(bad)
cmps
xchg
inc
jp
pop
jl
jg
mov
mov
into
xchg
cmps
sub
inc
mov
out
push
shl
jecxz
scas
xor
sbb
mov
ins
rol
in
and
mov
fist
cli
push
arpl
int
in
xor
fldenv
inc
jns
pop
add
add
bound
fs
sahf
lea
(bad)
out
pop
jmp
fiadd
call
adc
jp
mov
lods
sub
ja
call
mov
loopne
inc
out
add
adc
test
in
dec
test
xchg
add
lods
mov
pop
adc
out
cld
jmp
je
scas
scas
add
mov
push
sar
mov
ja
xor
ss
xchg
push
cmp
lea
dec
(bad)
mov
jb
inc
pop
inc
or
or
mov
push
mov
add
test
or
pop
stc
xor
and
push
pop
or
cdq
and
jae
fs
stos
popa
inc
gs
in
aad
and
pop
dec
cwde
or
pusha
mov
push
shr
sbb
sbb
jne
push
cmp
push
das
retf
and
push
mov
mov
pop
dec
xchg
push
or
inc
stc
xor
mov
call
fstp
das
rol
add
adc
mov
dec
cmps
lahf
cli
mov
adc
jle
mov
bound
dec
out
fwait
or
lds
inc
adc
inc
cdq
and
pop
mov
fist
outs
imul
xchg
(bad)
aaa
sub
or
jb
inc
out
cmps
xchg
lods
dec
xlat
popa
and
dec
xor
add
add
jbe
sbb
xchg
pop
imul
stos
cmp
ja
ins
jbe
scas
mov
jbe
mov
add
in
lock
inc
test
dec
cs
cmps
mov
mov
out
and
xor
(bad)
loop
stos
std
addr16
je
xchg
ja
adc
enter
and
sbb
pop
pop
sub
rcr
inc
xchg
sub
pop
cmps
scas
adc
shl
mov
adc
inc
sub
lahf
ret
rcr
push
and
call
and
call
retf
gs
sti
mov
pop
push
std
mov
loope
jle
and
dec
mov
test
inc
sub
and
dec
or
inc
in
scas
les
dec
imul
adc
xchg
(bad)
sbb
adc
retf
das
loope
cs
push
jl
popa
dec
gs
xchg
xchg
outs
mov
pusha
ds
stos
mov
shl
push
push
xor
lahf
bound
xchg
pop
add
xchg
in
jl
cs
cwde
bound
data16
adc
call
inc
inc
mov
xor
das
js
jge
fwait
ret
and
or
sbb
test
pop
sbb
jb
fidivr
xchg
xor
sbb
cmc
pop
add
jge
fdiv
adc
loope
cmc
jg
jnp
popf
jnp
pusha
call
ss
or
or
xor
pop
or
sahf
(bad)
mov
fs
sbb
and
dec
jle
out
mov
fistp
cs
stos
ss
leave
and
cwde
and
in
ret
clc
dec
retf
inc
mov
cwde
cmps
adc
imul
xchg
out
shl
and
dec
jg
clc
pushf
mov
shr
cwde
cmps
cmp
dec
jnp
push
cmps
fwait
movs
dec
addr16
xor
aad
xor
outs
fidivr
mov
nop
daa
mov
xor
jp
cmp
or
mov
shl
stc
mov
push
sbb
jl
adc
sahf
lods
std
imul
inc
dec
mov
(bad)
loop
push
jnp
lds
cwde
dec
xchg
je
out
int3
mov
mov
out
push
loop
cmps
popf
shr
xor
xchg
scas
sub
dec
mov
jge
out
inc
scas
sub
dec
mov
popa
adc
jbe
leave
push
aad
sbb
dec
push
out
scas
fidivr
(bad)
push
stos
mov
dec
pop
push
push
scas
sbb
in
jb
addr16
pop
pop
push
shl
ss
pop
jge
add
(bad)
shl
pusha
shl
cmp
bnd
and
scas
inc
retf
mov
push
jnp
adc
imul
jmp
pop
dec
xor
je
xchg
shl
repz
cli
imul
scas
adc
aas
pop
xchg
pop
mov
jae
mov
sbb
cmps
cwde
jmp
dec
cmp
mov
rcl
ror
ret
clc
mov
inc
mov
ret
push
int3
out
retf
popf
fadd
ss
jmp
hlt
xor
hlt
movs
jo
dec
(bad)
rcr
xor
leave
adc
pop
xor
mov
cmp
xchg
push
mov
jle
ins
pop
(bad)
retf
or
xchg
sub
movs
in
jle
cmp
std
sbb
mov
xlat
dec
and
ret
fnstsw
call
pop
fxch
mov
lock
call
xchg
stos
aas
cwde
push
or
ins
ret
ins
xor
pushf
sbb
jne
xor
dec
out
popa
(bad)
leave
mov
fs
loope
mov
jbe
aas
call
and
dec
push
lods
pop
rol
pop
adc
in
ret
ins
sahf
mov
pushf
aam
loopne
nop
mov
mov
inc
mov
mov
mov
data16
daa
(bad)
jle
aas
add
in
scas
jbe
xor
dec
xor
sub
in
cmp
jle
push
adc
inc
push
pop
or
ret
imul
add
push
(bad)
mov
repz
pop
sbb
cli
mov
enter
jle
push
mov
mov
sbb
mov
inc
mov
nop
es
in
sub
mov
xchg
sar
sub
pop
sbb
jno
adc
test
jl
mov
cli
xchg
cmp
mov
mov
repz
fistp
pop
jp
jle
mov
dec
sbb
push
pop
int
cdq
movs
pop
shl
loopne
bound
adc
movs
mov
mov
inc
pop
push
mov
js
sub
test
test
or
sbb
mov
and
sub
ja
stos
sub
fidivr
stos
out
(bad)
ins
test
ficom
sbb
cmp
sub
dec
in
repnz
mov
scas
dec
sub
out
mov
push
xchg
mov
std
stc
hlt
std
jle
mov
outs
inc
inc
adc
jg
push
out
pop
xchg
mov
dec
jp
xchg
pop
cs
gs
je
addr16
stos
mov
or
clc
xor
cs
sub
movs
adc
cmps
dec
cmp
shl
mov
adc
std
imul
cld
mov
into
sub
jp
sar
pop
movs
xor
cmps
cdq
jbe
xor
cmp
mov
outs
ret
mov
fsubr
mov
gs
add
and
std
xchg
adc
jae
test
xchg
mov
rcl
lea
ret
aad
cmp
xchg
ret
adc
inc
or
outs
shl
inc
mov
cmp
jo
aam
inc
ja
fstp
cs
pop
mov
xchg
or
inc
adc
or
pop
pop
push
mov
push
and
and
add
outs
jge
mov
add
mov
lds
fld
(bad)
push
in
sbb
mov
enter
popf
pop
adc
mov
dec
jp
loope
addr16
sbb
mov
jbe
stos
out
fs
add
cmc
push
xchg
aaa
into
pop
pop
or
icebp
aaa
fwait
sub
call
lea
inc
mov
mov
pop
xor
jmp
push
sbb
lock
ret
das
cmp
add
ret
rcl
sbb
jnp
pop
pushf
retf
sub
jge
dec
mov
imul
xor
daa
cmp
jmp
fadd
xlat
sbb
in
push
and
jl
fidivr
dec
sbb
sub
out
inc
push
mov
scas
xchg
outs
das
xchg
into
shl
adc
xchg
mov
fisubr
jns
lea
or
jmp
sbb
(bad)
mov
stc
stc
or
sbb
test
arpl
and
adc
xchg
cs
ds
fldln2
push
sbb
les
shrd
cwde
retf
lods
fiadd
mov
jns
add
xor
cld
mov
jo
les
jecxz
push
adc
(bad)
pop
inc
pushf
pop
cmp
xor
dec
cli
out
cmps
push
(bad)
xor
cli
(bad)
hlt
jle
data16
pop
push
js
mov
dec
movs
mov
in
xlat
cmp
mov
ja
xchg
das
stos
pop
jmp
aas
ficomp
jmp
scas
or
sub
and
mov
mov
mov
aad
mov
jge
les
pop
push
dec
add
mov
cmp
std
cmp
mov
out
and
or
jge
push
mov
xor
ret
cmp
jnp
jmp
in
inc
jg
dec
inc
in
sub
inc
push
scas
mov
mov
sub
mov
add
sbb
stc
mov
mov
pop
jl
xor
push
pop
cmp
or
fidivr
ss
cmps
mov
ds
dec
add
pop
scas
movs
xor
or
arpl
fisubr
das
inc
das
ja
and
packsswb
add
dec
es
arpl
addr16
cwde
mov
xor
mov
xlat
inc
xor
push
sbb
test
push
sub
push
pop
dec
jb
data16
jbe
aad
(bad)
sbb
pusha
push
inc
jb
sub
jns
ds
jnp
or
cmp
sbb
dec
sahf
aad
mov
push
mov
ret
jbe
stos
pop
retf
adc
daa
adc
js
shr
fs
in
enter
inc
(bad)
mov
retf
shr
mov
rcr
ficom
mov
cmp
outs
mov
xchg
mov
test
xor
lock
in
jp
mov
ja
scas
hlt
jl
aas
inc
push
movs
push
add
retf
sub
mov
jmp
xchg
cs
push
or
mov
or
outs
lds
stc
cmc
mov
cli
stc
inc
adc
add
jge
push
repnz
xor
xchg
xchg
ret
gs
(bad)
iret
or
jmp
cmp
call
fdivr
retf
mov
mov
push
inc
dec
mov
sbb
bt
jbe
mov
push
xor
jp
cmps
fistp
jecxz
test
or
loopne
xchg
js
mov
and
repnz
jg
in
sbb
arpl
mov
jb
or
push
ja
fadd
xchg
fwait
pop
jge
adc
mov
add
pusha
sahf
loopne
pop
js
mov
push
mov
xchg
or
pop
jbe
fadd
or
cmp
cmc
rcl
mov
cld
popf
lods
int3
mov
movs
inc
mov
mov
test
inc
fst
jp
aad
xchg
xchg
ins
es
retf
dec
jl
push
lds
scas
retf
push
ins
in
mov
(bad)
fidiv
and
add
fcom
dec
ss
mov
mov
mov
mov
mov
mov
xchg
test
pop
scas
cmp
fcomp
adc
add
ins
shl
fisttp
ss
xor
cmp
mov
or
jo
ja
jo
fbstp
ror
popa
in
es
test
mov
xor
arpl
call
int
and
sbb
and
xlat
push
cmp
sbb
and
and
mov
inc
sar
dec
xor
daa
cmp
in
sub
out
jmp
mov
not
cmps
lea
xchg
mov
inc
mov
ret
jmp
cmp
cwde
or
cs
pop
jp
jg
push
push
cmp
cmp
enter
in
sub
lods
and
and
pop
jb
adc
popa
je
jb
mov
pop
dec
xor
ins
pusha
inc
stos
pop
loopne
scas
cdq
jmp
outs
xchg
xchg
push
push
pop
icebp
imul
mov
pop
pop
inc
fidivr
cwde
sub
cs
fiadd
lods
std
fild
jns
sub
jp
sbb
iret
xchg
mov
push
sbb
iret
inc
cmp
fsubr
push
cmp
xor
mov
inc
push
sbb
cmps
and
cwde
repz
jae
clc
dec
or
and
pop
or
xor
ins
push
adc
jle
mov
popf
movs
inc
popa
ds
outs
sub
pop
lea
push
mov
je
mov
bound
pop
mov
retf
mov
cmp
jnp
inc
or
pop
addr16
icebp
mov
and
inc
fist
fs
icebp
fnstenv
xchg
xor
cmp
push
dec
dec
imul
enter
pop
lahf
inc
lea
jnp
fs
icebp
xor
mov
xor
out
enter
neg
loopne
(bad)
imul
sub
(bad)
aam
(bad)
out
jmp
add
mov
js
jge
mov
clc
sub
lods
push
das
adc
repnz
out
ror
call
push
repz
rcr
inc
popf
sub
retf
or
lods
mov
mov
pop
out
add
xchg
pushf
ss
mov
fwait
scas
push
ins
out
pop
mov
(bad)
adc
lods
and
push
inc
sub
gs
pop
adc
xchg
cmp
cli
add
movs
jno
jmp
gs
aad
shl
stos
xor
cmc
rcl
rdtsc
cmps
inc
in
pop
(bad)
cld
xor
mov
call
jecxz
pop
sub
or
cmp
or
fisub
sbb
jbe
add
lods
faddp
mov
sub
fsubr
call
dec
dec
inc
call
add
aam
sbb
and
call
adc
icebp
popa
jns
ja
cmp
stos
jmp
push
in
inc
rcl
jmp
xchg
cmp
dec
jmp
jno
dec
(bad)
psubusb
cmp
shl
out
push
mov
bound
cld
mov
or
(bad)
mov
pop
(bad)
mov
jg
xchg
into
inc
imul
jecxz
mov
addr16
inc
jo
xchg
fistp
pop
or
cmc
cmp
add
aaa
xchg
push
mov
je
(bad)
xchg
jne
xor
iret
(bad)
sbb
dec
adc
mov
sbb
push
mov
pushf
shr
icebp
out
pop
mov
jnp
sbb
(bad)
(bad)
in
scas
mov
mov
adc
in
push
push
or
fnstsw
mov
pop
cmps
sub
and
enter
cmp
mov
xor
sbb
cdq
pop
das
lds
jecxz
cmp
out
ficom
pop
or
ins
fdivr
daa
jae
out
jl
je
cmps
fidivr
add
cmp
or
sbb
(bad)
dec
push
jbe
stos
aam
call
xchg
outs
jp
div
sbb
aas
ins
sbb
mov
or
adc
stos
mov
jnp
add
sbb
jo
xor
lea
and
jmp
jnp
je
xchg
stos
adc
hlt
fild
push
icebp
pop
mov
repz
in
pop
test
sub
mov
aaa
xchg
lahf
pop
es
jo
mov
arpl
js
cmc
data16
pop
pop
mov
shl
jns
gs
(bad)
cld
stos
mov
sub
push
mov
inc
mov
adc
mov
jp
adc
pop
sub
mov
les
fisttp
add
daa
inc
pop
xchg
sub
add
in
pop
dec
dec
or
xor
cli
xchg
push
shr
in
fs
push
out
sbb
aam
out
pop
cmp
test
outs
xor
mov
or
sub
pop
xor
cmps
(bad)
aad
in
inc
sahf
mov
push
lds
sbb
xor
mov
cdq
ds
hlt
loope
xchg
sub
dec
rcr
sbb
mov
shl
arpl
pop
push
inc
lock
xor
rcl
out
dec
sub
movs
mov
jle
mov
mov
jmp
mov
rcr
pop
outs
and
addr16
rcl
push
int3
jmp
and
frstor
or
ds
xor
and
fimul
fnstsw
std
or
sub
cmp
sbb
out
mov
lea
(bad)
xor
sar
push
xchg
cs
in
add
mov
fdiv
add
mov
cld
les
addr16
add
fsubr
pop
ds
jae
pop
cs
and
imul
pop
bnd
ds
cmp
mov
inc
popa
scas
ds
out
lea
ret
loope
cwde
cmc
jmp
mov
(bad)
les
sar
adc
scas
stc
enter
and
lods
jae
(bad)
out
and
xor
mov
(bad)
pop
cld
cmp
das
cwde
clc
push
cmp
jle
xchg
pop
bound
push
pop
lock
out
cmp
addr16
into
cmp
cmp
or
pushf
jge
imul
loop
inc
mov
push
lea
ret
fbstp
dec
push
loope
fsubr
out
adc
(bad)
push
cmp
data16
sbb
test
inc
xchg
and
xor
mov
dec
push
sub
push
lahf
xchg
stos
into
or
shl
loopne
lds
and
in
push
test
dec
retf
shr
cmp
movs
sahf
repz
inc
(bad)
movs
or
xor
mov
rsm
scas
mov
push
xor
iret
js
push
(bad)
jg
sti
xchg
jno
or
mov
or
jb
push
pop
rol
xor
test
cmp
and
cmps
int
mov
xchg
imul
mul
dec
test
add
sbb
out
cmp
mov
stc
(bad)
mov
int
or
inc
jg
mov
cmps
and
or
push
pop
out
aas
imul
jns
sbb
das
(bad)
xchg
jnp
imul
xchg
mov
lods
mov
jmp
dec
shl
stos
test
(bad)
in
data16
sbb
push
mov
nop
jp
xchg
dec
cmp
cdq
pop
and
ss
sub
xchg
push
je
aam
xor
popf
push
outs
mov
out
pop
popa
pop
or
mov
push
add
jbe
(bad)
jnp
dec
scas
(bad)
jae
int
sbb
test
mov
jo
add
and
xchg
or
js
movlhps
jbe
movs
pop
cmps
aas
adc
or
push
stos
int
mov
cmp
out
dec
jmp
mov
fstp
fldenv
into
mov
jns
xchg
mov
gs
push
push
add
and
inc
aas
push
nop
cmp
xchg
dec
pop
cwde
repz
in
das
hlt
in
sbb
adc
jle
movs
std
jle
pop
lea
mov
mov
out
inc
sbb
mov
sbb
inc
aaa
and
push
fsubr
popf
movq
dec
dec
(bad)
pop
(bad)
pminsw
inc
pop
movs
push
fimul
je
test
aaa
cmp
mov
verw
mov
sub
dec
or
mov
jne
das
mov
aaa
xor
pop
pop
mov
jbe
mov
mov
push
adc
and
add
fimul
fidivr
out
push
aad
jmp
fwait
out
xchg
mov
adc
fneni(8087
add
daa
lods
sub
push
lods
addr16
les
mov
out
jae
mov
push
mov
pop
pop
or
add
std
(bad)
test
sar
test
push
sub
mov
leave
out
daa
pop
jmp
jmp
mov
cmp
adc
aam
add
test
daa
xor
das
or
xchg
icebp
inc
mov
push
push
outs
pop
scas
adc
jmp
sub
push
ror
cmp
cmps
inc
into
cmp
pushf
adc
jo
rcr
mov
xor
push
out
cwde
aad
jp
mov
sahf
inc
mov
sbb
dec
jmp
stc
pop
sub
add
pop
je
and
push
(bad)
mov
dec
fsub
out
dec
push
(bad)
inc
mov
aas
into
add
xor
inc
jns
mov
(bad)
cwde
das
mov
(bad)
mov
or
or
icebp
ja
daa
pushf
jae
dec
cmp
fbld
mov
xchg
adc
stc
bound
and
pop
sbb
pop
xchg
ficomp
leave
fsub
jne
jns
dec
cmp
ins
sub
test
adc
jnp
frstor
fld
jno
mov
stos
mov
dec
inc
adc
push
inc
mov
ins
pop
(bad)
call
les
pop
jno
ins
mov
dec
js
add
lahf
jg
add
pop
sub
daa
out
dec
pop
push
mov
test
push
jg
inc
mov
pop
test
jmp
dec
inc
dec
lods
movs
inc
jle
add
mov
dec
dec
mov
(bad)
in
leave
(bad)
pop
scas
mov
cmp
leave
jle
shl
dec
dec
inc
xchg
das
jg
mov
in
aaa
adc
js
xor
ins
sub
pop
test
enter
inc
loopne
test
mov
(bad)
es
dec
mov
hlt
lock
cwde
pop
loopne
pop
pusha
cld
dec
mov
lods
add
es
lock
xchg
(bad)
pop
cmp
dec
sbb
js
loopne
inc
adc
or
bound
dec
mov
mov
jne
jne
jl
jl
add
popa
sub
cmp
xor
jmp
imul
out
movs
jp
xor
shr
cmp
ret
(bad)
xchg
pop
sub
jmp
popf
sbb
or
push
jmp
pop
jle
out
mov
outs
aaa
cdq
das
pushf
in
jle
pop
lods
lds
adc
sub
or
ja
cmovl
or
rep
or
mov
clc
es
jne
add
je
inc
sub
retf
lods
aaa
jp
sub
sbb
sub
aaa
call
(bad)
outs
icebp
mov
jmp
rcl
mov
imul
cmp
outs
dec
mov
pop
cmp
popf
mov
pop
mov
push
or
test
inc
sub
ds
adc
sbb
cmps
cs
dec
and
add
dec
aaa
xor
mov
fs
jnp
inc
pop
popa
xchg
sub
loop
mov
add
mov
push
mov
nop
loope
pop
pop
into
je
push
retf
xor
pop
ss
outs
or
fs
cmps
test
loop
add
jl
imul
scas
scas
retf
inc
sbb
gs
dec
es
push
loopne
imul
mov
popa
push
fnstsw
call
je
xor
popf
cmp
or
int
out
mov
adc
dec
add
fs
data16
xor
icebp
aaa
or
xor
cmp
or
push
xor
(bad)
cmp
xor
and
cmp
sbb
popf
mov
call
je
shl
aaa
nop
pusha
into
sbb
xchg
addr16
xchg
cwde
add
nop
jb
fnstsw
mov
lea
add
adc
cmc
out
push
push
sub
sbb
mov
push
mov
daa
push
sahf
jbe
clc
push
outs
cmp
cmp
mov
adc
push
xor
xor
cmp
imul
cmp
gs
xor
xlat
jnp
jp
sub
cmp
aas
popa
mov
and
add
ja
mov
stc
or
inc
std
pop
jnp
sub
fcomp
pop
or
das
clc
sbb
jecxz
jb
dec
push
sub
inc
and
sbb
push
hlt
sub
in
cdq
imul
mov
cmp
mov
pop
mov
data16
dec
or
movs
push
cmp
aad
int
inc
inc
pop
add
push
sub
add
or
xor
pop
stos
data16
popf
sbb
fs
mov
outs
xchg
dec
dec
aad
push
mov
stc
jg
addr16
xor
addr16
or
xchg
popa
xchg
add
mov
retf
pop
(bad)
push
imul
dec
rol
ins
out
jge
fbld
pop
ficom
dec
pop
sbb
adc
out
pop
mov
jmp
aam
sbb
iret
xchg
pop
or
pop
xchg
shl
ds
mov
mov
dec
cmp
test
xchg
cmp
xor
and
xor
push
dec
sbb
cdq
pushf
inc
call
cmp
fistp
addr16
sbb
gs
or
dec
adc
adc
push
dec
jns
mov
mov
jbe
pop
adc
fnstcw
cmp
mov
pop
inc
(bad)
mov
fiadd
jmp
mov
les
setl
inc
test
fdivr
jecxz
bound
cmp
leave
aam
in
sbb
out
cli
push
dec
inc
cmp
xor
cmps
pop
pop
dec
fnstcw
jb
dec
sbb
test
cmc
out
aas
test
pop
adc
pop
push
sub
or
cmp
inc
and
mov
sub
or
cli
pop
stc
inc
inc
clc
ret
test
adc
push
xor
pusha
mov
dec
jae
pop
outs
nop
mov
adc
push
adc
jnp
cmc
fdivr
in
out
cmps
gs
dec
xor
retf
ja
jecxz
pushf
loope
arpl
das
pop
ret
sbb
cli
stos
ror
loopne
je
fsubr
ror
jo
sbb
mov
aas
(bad)
loopne
pop
pushf
push
add
and
adc
push
or
mov
cmps
push
sub
sbb
or
add
scas
mov
xchg
mov
movs
sbb
xor
sahf
adc
aad
imul
xlat
mov
ins
mov
pop
cli
add
jne
and
imul
push
lahf
ins
mov
inc
jnp
sar
pop
cmps
rol
out
loop
repnz
fsub
push
daa
jo
add
xor
inc
test
xchg
jmp
push
pushf
imul
imul
loopne
enter
jle
jns
and
or
ror
test
hlt
lods
(bad)
sahf
xor
ins
ret
jns
scas
xchg
(bad)
or
xchg
push
jns
movs
dec
and
fs
test
cdq
ins
add
xchg
and
(bad)
inc
dec
adc
jl
pop
out
pusha
loope
(bad)
cdq
push
popa
cmp
push
stos
lods
lahf
mov
sbb
jl
push
xlat
jae
mov
out
cvttps2pi
jbe
cmp
inc
adc
pop
lods
popa
xchg
and
scas
pop
push
mov
(bad)
jge
jecxz
rcl
jecxz
imul
fwait
scas
push
mov
fs
jb
gs
adc
sub
cmp
ds
sar
mov
(bad)
jp
sbb
arpl
sbb
inc
fsubr
xor
add
mov
adc
ins
cmp
gs
or
lock
mov
scas
sub
fs
xor
dec
pop
or
addr16
push
or
sub
arpl
shr
shl
xor
mov
sar
arpl
pop
scas
cmp
push
inc
mov
cs
cmp
inc
mov
pusha
push
mov
inc
shr
scas
gs
js
mov
icebp
pusha
jmp
out
mov
jbe
mov
or
mov
cmp
sbb
outs
scas
sbb
cmp
adc
cmp
jae
push
sbb
jl
ret
mov
test
jno
cmc
stc
inc
daa
aam
push
dec
aad
cmp
or
jnp
imul
adc
ja
scas
out
and
scas
xchg
das
daa
gs
sbb
mov
inc
sub
and
push
ins
in
stos
or
pop
lock
adc
shl
stc
ja
dec
std
pop
pop
dec
rol
mov
call
(bad)
mov
cmp
and
push
cwde
push
rol
loopne
push
sub
rol
int3
scas
mov
aaa
(bad)
data16
xchg
iret
mov
sub
fcmovnbe
mov
icebp
scas
icebp
cmp
inc
sub
push
pusha
jge
imul
and
fidivr
cmp
jne
mov
pop
and
dec
xor
jecxz
add
cmp
cmp
xchg
call
dec
inc
dec
cmp
mov
adc
daa
sub
fs
and
nop
into
jg
cmp
xor
or
dec
lock
stos
xor
outs
cmp
(bad)
cmp
sbb
stos
xchg
mov
pop
lds
jns
sub
sbb
pushf
in
and
pop
stos
inc
inc
or
xor
mov
sub
movs
movs
out
adc
mov
push
std
jbe
in
sbb
jle
and
jp
and
mov
cs
ja
pop
dec
mov
sub
movs
adc
add
mov
sbb
in
mov
xor
pop
(bad)
sbb
add
cmp
or
dec
mov
cmc
scas
popa
lock
mov
movs
mov
imul
push
ret
lods
lods
imul
lods
shl
mov
call
adc
mov
addr16
dec
ja
outs
pop
or
stos
sub
cmp
xor
pop
and
adc
pop
adc
aas
dec
inc
out
cmp
push
push
imul
dec
sbb
fsubr
in
std
xor
inc
and
jo
lds
stos
mov
loope
pop
mov
arpl
jecxz
(bad)
cwde
xor
aas
(bad)
ror
mov
popa
push
and
mov
mov
mov
xor
dec
cli
cmp
inc
mov
push
shl
dec
test
out
imul
xchg
imul
adc
into
jb
pop
aas
mov
cmp
out
sub
inc
gs
push
les
sbb
retf
ja
outs
adc
pop
out
(bad)
pop
cdq
pop
inc
inc
cmp
sbb
and
pop
pop
loop
ss
jne
xor
scas
jo
repnz
paddsw
sar
mov
inc
movs
test
push
xor
rol
dec
ret
xor
sahf
adc
jmp
daa
jmp
mov
fsub
shl
bnd
es
fisub
dec
adc
cmp
mov
sbb
imul
jns
inc
aad
mov
jmp
pop
jmp
outs
jnp
dec
repnz
sub
stos
cmp
or
dec
mov
shl
push
push
or
cmp
inc
and
mov
je
aam
xlat
push
add
pop
ins
in
cmps
pop
pop
cmps
sbb
ret
push
loope
pusha
fidivr
scas
imul
mov
inc
xlat
pop
(bad)
imul
aaa
inc
or
mov
sbb
shl
enter
out
add
movs
lds
dec
and
rol
pop
mov
pop
mov
jg
add
stos
or
aas
cli
add
push
out
ss
gs
sbb
inc
cmps
(bad)
jecxz
dec
lahf
and
sub
mov
(bad)
outs
xor
sar
das
jl
push
cmp
sar
xor
mov
push
jae
sbb
inc
imul
cli
xor
lock
xchg
scas
pop
enter
inc
leave
movs
cmp
add
aaa
cmp
movs
popf
movs
outs
add
jg
jg
inc
not
jo
lea
mov
in
inc
sub
pop
dec
xchg
(bad)
ins
mov
mov
cs
not
aas
call
je
imul
dec
fcomi
xor
mov
and
and
inc
cmp
or
mov
dec
sub
scas
jnp
inc
push
into
dec
mov
(bad)
push
stos
pop
xor
movs
stc
jle
xchg
stc
mov
retf
inc
xchg
push
call
and
xor
jmp
mov
call
je
fidivr
add
mov
jne
lea
xor
dec
js
mov
cmp
and
dec
loope
cmp
in
pop
repz
cmp
adc
cmps
pop
push
cmps
pop
gs
mov
clc
aam
sub
jo
mov
mov
pop
arpl
xchg
sbb
inc
or
outs
and
ret
or
mov
sub
cmp
xor
je
inc
cmp
xor
in
fstp
in
jmp
lods
push
jmp
and
jp
pop
jmp
rcr
and
inc
adc
ins
inc
fs
js
out
xor
or
sahf
test
mov
adc
or
mov
jge
sub
dec
push
wbinvd
push
dec
loopne
inc
xor
lods
psrlq
sti
mov
int
add
pusha
mov
jle
pop
jle
push
stos
jbe
inc
in
pop
(bad)
jge
and
dec
fsub
inc
outs
adc
cmps
mov
mov
inc
leave
dec
jmp
add
mov
out
inc
mov
sbb
nop
or
lods
jp
jg
adc
push
(bad)
push
adc
outs
jecxz
mov
mov
sbb
gs
push
leave
and
data16
push
aaa
dec
add
movs
in
dec
pop
ret
shr
xor
jmp
iret
sbb
add
test
(bad)
ins
in
fs
mov
aas
ins
daa
inc
rcr
clc
addr16
pop
adc
xor
and
pop
mov
or
arpl
fadd
daa
push
mov
and
cmp
adc
adc
rol
sub
pop
mov
mov
mov
ins
mov
mov
dec
and
nop
push
mov
ja
inc
sub
loope
cmp
sar
mov
sahf
jo
xchg
cmc
std
xor
clc
push
test
mov
aam
dec
loope
cmp
xchg
add
pop
add
or
and
jl
outs
sub
adc
sbb
jb
pop
inc
mov
sub
push
and
sub
pusha
add
pop
loop
inc
sahf
add
shl
add
loop
loope
inc
or
mov
lods
pop
jle
fsubr
mov
pop
jmp
sub
imul
sub
shl
add
jne
popf
mov
pop
retf
inc
loope
cmp
(bad)
mov
arpl
lea
dec
push
dec
xchg
pop
jmp
jmp
pop
popa
les
sbb
and
in
retf
sub
and
mov
jo
fnstcw
imul
push
out
push
jb
pop
gs
and
add
pusha
or
in
js
push
bound
ins
dec
ret
pusha
push
adc
mov
or
xor
sar
or
mov
inc
pop
sub
jnp
xchg
in
std
mov
inc
fidivr
jbe
inc
stos
js
(bad)
(bad)
inc
mov
mov
outs
cmp
sbb
leave
retf
pop
outs
dec
(bad)
and
stos
dec
sbb
out
pop
cmp
push
sub
sti
mov
sbb
inc
ja
jp
pop
and
outs
add
int
xchg
outs
add
sub
pop
in
inc
(bad)
jmp
mov
sbb
stos
and
shl
adc
or
pop
imul
int
ficom
add
sub
dec
jl
int
(bad)
cld
idiv
adc
or
gs
enter
out
inc
test
push
pop
adc
cli
or
push
in
xchg
mov
or
daa
std
out
push
pop
inc
mov
sar
or
jns
or
ins
repnz
xchg
clc
repz
cmp
xor
ret
sbb
push
cmp
cmp
test
mov
xor
push
pop
sub
movs
mov
mov
in
push
push
cmp
dec
aad
mov
mov
aad
mov
out
aam
in
mov
adc
enter
or
xor
dec
mov
xor
sar
sar
mov
sti
mov
push
popa
mov
push
jg
test
push
and
push
push
outs
pusha
aas
or
lods
pushf
add
dec
hlt
dec
cmp
loop
pop
push
push
sti
and
push
lock
neg
cmp
fisubr
mov
arpl
mov
out
mov
dec
xchg
retf
mov
add
dec
imul
cmps
adc
mov
popa
cmp
mov
pop
sahf
out
add
mov
dec
push
xlat
push
hlt
mov
loopne
lods
xchg
xchg
lea
(bad)
jb
mov
data16
stc
jo
jmp
cdq
pop
(bad)
xchg
rep
mov
adc
jbe
mov
xor
jp
mov
sahf
pop
dec
rol
inc
inc
xchg
pop
mov
and
jmp
(bad)
mov
mov
test
(bad)
cld
in
mov
idiv
or
scas
jecxz
sar
sub
lock
pop
jns
(bad)
stos
pop
arpl
push
jp
pop
movs
push
stos
fs
test
add
xor
push
xor
lock
cs
aas
stos
loopne
fstp
sbb
jecxz
clc
pop
sub
mov
jle
cli
and
ror
out
sub
lods
adc
addr16
inc
push
test
cmps
xchg
mov
ret
scas
int
adc
les
push
ret
cmp
sub
sub
fstp
(bad)
out
cmp
fcomp
int3
inc
cmps
loop
inc
mov
and
mov
sbb
sub
lods
dec
sti
or
mov
test
ja
xchg
jns
test
sbb
loope
mov
mov
push
hlt
ds
sar
fimul
mov
mov
sahf
mov
mov
mov
fisttp
add
es
mov
aam
inc
ds
pop
test
xchg
mov
or
sbb
dec
sub
mov
mov
clc
lea
stc
ds
dec
jmp
jmp
pusha
push
pushf
scas
pop
imul
pop
hlt
add
dec
sbb
sbb
inc
out
dec
lock
aas
and
(bad)
mov
mov
cli
movs
ins
xchg
hlt
test
scas
fwait
inc
xchg
inc
jns
dec
imul
call
cmp
call
xlat
rol
mov
pop
dec
popf
sbb
sbb
inc
cmc
mov
int
popf
div
cmp
shr
(bad)
int
loop
test
imul
mov
adc
push
and
gs
into
mov
pop
fbld
clc
adc
and
test
pop
inc
out
mov
dec
loop
cmp
popa
imul
loop
jb
mov
cmp
aad
popf
dec
cmps
xchg
stos
jno
push
retf
pop
and
outs
jbe
sub
push
call
in
rcr
push
push
add
je
lahf
nop
jbe
jmp
fsubp
xor
mov
or
pop
mov
xchg
xchg
push
mov
mov
push
jmp
daa
mov
fcomip
mov
sub
(bad)
movs
imul
inc
push
cmp
inc
jl
mov
imul
std
sbb
mov
je
mov
dec
pop
out
add
and
jne
dec
test
inc
mov
mov
sbb
xor
pop
jns
sbb
push
ins
int3
xchg
cmps
lods
mov
add
cld
mov
popf
sbb
ret
add
in
mov
xor
mov
ficom
ret
or
sbb
shr
jl
jne
inc
add
or
shl
mov
sbb
and
rcl
add
xor
popa
pop
cmp
cmc
mov
in
sbb
cmp
inc
retf
imul
mov
ret
cmp
push
adc
in
sub
push
cmp
sbb
stos
or
into
dec
pop
push
in
loop
xchg
dec
pop
cmp
imul
mov
sbb
sar
and
add
jmp
push
push
or
mov
repnz
mov
mov
(bad)
(bad)
aaa
or
jo
movs
stos
xchg
in
mov
push
jns
mov
pop
fs
and
shl
loop
mov
push
test
and
cmp
dec
lods
dec
jae
dec
iret
aad
xchg
add
or
push
aad
mov
xor
cmp
cmp
jg
ja
jmp
inc
jmp
mov
jmp
test
in
jmp
shl
push
add
sub
stos
inc
push
ret
lods
fcomi
or
mov
in
xchg
xor
(bad)
std
test
mov
fs
pop
cli
xchg
adc
ret
rol
adc
xor
pop
fsub
mov
jbe
add
popf
jmp
pop
je
(bad)
stos
addr16
cmp
bound
shl
dec
xchg
inc
push
xchg
sbb
stos
inc
inc
dec
test
popa
mov
cdq
sub
stos
pop
push
dec
fcomp
lea
(bad)
mov
hlt
sbb
jne
lods
jbe
test
mov
sahf
inc
push
fs
adc
or
cmp
mov
stos
ror
(bad)
imul
neg
dec
sahf
(bad)
fmul
scas
pop
or
aas
in
call
mov
lods
mov
fnstenv
enter
cmps
pop
cmp
or
(bad)
loope
mov
xchg
dec
aaa
mul
mov
pop
das
jecxz
and
aaa
adc
int
add
cmc
jmp
scas
jae
jmp
in
or
cmp
fwait
and
mov
mov
mov
scas
pop
in
mov
(bad)
fimul
retfw
(bad)
mov
or
ins
fnop
mov
les
cld
jp
mov
cmc
das
and
aad
xor
xchg
in
movs
into
mov
iret
pusha
leave
and
fimul
leave
dec
test
and
push
and
adc
(bad)
adc
add
loope
inc
dec
adc
fwait
inc
ds
adc
sar
(bad)
cmp
clc
les
sbb
cmp
iret
and
das
mov
add
fild
cli
cmp
dec
or
mov
(bad)
push
dec
fs
push
test
bnd
push
jbe
sbb
push
ror
cld
in
aam
cmp
cwde
fs
pushf
shld
xchg
mov
cmp
popf
mov
dec
and
fidivr
adc
(bad)
fnstsw
fidivr
nop
not
inc
jno
test
test
mov
pop
mov
bound
hlt
sbb
sbb
add
lds
sbb
mov
fs
es
pop
jbe
test
out
sbb
jnp
out
addr16
popf
and
jb
mov
ss
jae
cmp
adc
(bad)
mov
xor
xor
mov
push
pop
xchg
mov
(bad)
fisttp
jecxz
or
or
inc
out
or
inc
mov
mov
cmp
test
loope
test
fisubr
xchg
mov
shl
mov
imul
mov
imul
mov
and
cld
sub
jne
mov
jo
ins
outs
pop
inc
nop
ja
sub
mov
aaa
dec
enter
sar
pop
ret
mov
in
mov
popa
mov
aas
bound
xor
popa
aad
mov
push
fistp
xor
pop
pop
dec
jl
loop
cdq
mov
sub
or
lea
es
retf
cld
pop
and
mov
xchg
inc
pop
add
inc
sbb
push
pop
in
push
stos
test
jle
pop
mov
sbb
fld
cmps
fbld
mov
xor
push
pop
add
pop
pop
inc
push
ret
popa
fdiv
aas
or
popa
cmps
fistp
scas
mov
and
fucomi
sbb
ret
outs
popf
outs
loop
(bad)
pop
adc
mov
or
loopne
sbb
movs
mov
pop
sub
rcr
(bad)
mov
lock
cmp
xor
or
rcl
lock
xor
into
dec
pop
int3
leave
xchg
scas
shl
add
pop
arpl
sbb
call
add
jecxz
push
pcmpgtw
adc
popf
shr
push
pop
push
mov
jne
add
add
clc
dec
repnz
cmp
das
inc
pop
pop
push
jg
lods
sbb
loope
bswap
aas
jp
xchg
fstp
push
mov
mov
cmp
in
das
jmp
or
jne
outs
cmps
xchg
loopne
and
or
cmp
adc
retfw
and
push
pop
mov
jno
mov
cwde
sub
jge
sti
jmp
mov
sub
sahf
xor
xchg
jb
in
sbb
int
enter
gs
cmc
mov
dec
imul
jb
push
inc
arpl
je
sub
xchg
in
pop
nop
jns
and
pop
mov
into
pop
in
movs
push
jo
mov
jbe
stc
pop
shl
and
xchg
enter
fs
inc
and
out
test
lock
sub
push
inc
push
popf
push
test
sbb
xchg
mov
lods
add
mov
mov
ds
pop
(bad)
mov
jmp
push
not
es
mov
pop
jmp
pop
mov
hlt
movs
ja
adc
jnp
sub
push
jbe
cmp
xor
fnstsw
and
inc
inc
push
shl
xchg
sub
mov
movs
lahf
xor
dec
ins
movs
jo
fstp
inc
pop
push
js
rol
dec
mov
mov
dec
scas
mov
dec
test
mov
xor
push
imul
mov
xor
in
aas
aaa
mov
je
sahf
mov
lahf
mov
sub
mov
sti
xor
das
sbb
inc
mov
mov
or
fbld
nop
adc
sti
jb
stos
lods
adc
(bad)
or
inc
dec
addr16
popa
xor
jbe
out
push
pop
cmp
nop
hlt
mov
cmp
in
sbb
fidiv
mov
mov
outs
xchg
(bad)
clc
inc
jmp
xchg
sbb
inc
retf
dec
xor
ret
lods
mov
push
bswap
sbb
cmp
cmp
jle
das
pusha
mov
je
cmp
jno
add
inc
inc
sub
shl
stos
push
and
mov
jmp
mov
inc
dec
push
lods
repnz
push
push
mov
sub
out
out
test
and
arpl
retf
ret
mov
int
icebp
add
inc
jge
push
repz
stos
mov
clc
aad
inc
cmps
js
adc
not
gs
adc
mov
or
pop
inc
mov
sub
mov
mov
pop
jp
call
or
and
loope
sub
mov
jle
jne
dec
pop
cdq
add
mov
fcmovu
push
push
ja
push
aaa
adc
fdivr
jne
dec
ss
frndint
frstor
push
mov
pop
cmps
ret
out
and
popf
pop
pop
mov
scas
loope
outs
ret
xchg
and
mov
mov
sub
enter
cmp
jecxz
jbe
test
add
xchg
out
jbe
jmp
push
out
(bad)
push
jmp
cwde
fcmovnu
adc
mov
cdq
pop
jl
cld
add
inc
add
(bad)
pop
mov
clc
icebp
stos
movs
mov
movs
mov
inc
ins
dec
jmp
rcl
cmps
pop
es
test
cs
jge
test
sbb
jle
mov
jge
fcomp
adc
das
int
aas
jl
rcl
sar
call
adc
cmp
test
pop
(bad)
jnp
cmp
cmp
call
push
shl
stos
cli
call
in
addr16
aaa
lock
jg
pop
pop
pusha
ins
push
adc
mov
cmc
pop
cmp
pop
jnp
mov
jp
pop
in
outs
cmp
ds
mov
cdq
loop
xchg
pusha
and
jae
cmp
outs
cmps
pop
gs
scas
cmp
lods
cld
fwait
mov
repnz
xchg
dec
cmps
pop
mul
jle
push
dec
addr16
mov
test
push
pop
jb
sub
sub
sbb
arpl
out
cmp
js
sbb
dec
inc
and
sub
jnp
inc
test
mov
out
loop
gs
cmp
shl
mov
xchg
loope
pop
mov
retf
mov
ror
hlt
xchg
inc
pop
mov
stc
cwde
or
lds
sar
sbb
mov
pusha
aaa
out
icebp
test
push
push
fdiv
xchg
adc
xor
jns
loop
retf
or
jge
mov
loop
adc
jmp
outs
lea
ret
loopne
in
repnz
pop
jns
inc
mov
jno
or
lods
mov
cli
cmps
in
mul
outs
loopne
mov
in
jle
and
mov
test
loope
in
mov
int
sub
jle
dec
pop
(bad)
ss
ret
addr16
mov
ins
cmp
mov
xrelease
sub
arpl
mov
cmc
jge
mov
add
test
(bad)
std
lods
fwait
jno
fcmovnb
ja
jmp
inc
stos
test
dec
cmp
pop
add
cli
pusha
movs
and
pushf
fs
jmp
push
jb
jb
xor
popa
mov
nop
sbb
imul
out
sub
add
xchg
pop
jp
inc
add
ins
xor
dec
pop
sbb
clc
push
dec
pop
pop
es
mov
ss
loope
fmul
dec
icebp
dec
clc
test
jg
addr16
enter
loopne
(bad)
sbb
das
int
dec
int3
dec
inc
xchg
inc
icebp
xchg
jmp
aas
test
cmc
cmp
mov
mov
push
std
in
cmp
loope
jo
mov
in
adc
mov
mov
into
sub
fisub
loopne
mov
dec
xchg
xor
shr
add
test
(bad)
pop
in
arpl
sti
js
stc
cmp
sub
dec
shr
push
clc
sbb
call
test
pop
mov
popa
xchg
ja
imul
mov
xchg
jae
or
lods
fsubrp
push
jge
inc
lds
scas
mov
sbb
jmp
loop
imul
jmp
push
sbb
jle
add
push
sbb
jno
ds
mov
dec
xchg
push
jg
mov
adc
stc
shl
sahf
add
pop
ja
and
cli
cmp
rcr
(bad)
jmp
inc
pop
scas
inc
int
xchg
jno
call
wrmsr
mov
add
(bad)
cli
add
cmp
dec
popf
inc
div
scas
rcr
mov
pause
cmp
xor
out
sub
and
ja
push
(bad)
dec
and
ss
mov
icebp
fbld
in
jp
cvttps2pi
outs
push
shl
push
xchg
mov
lods
push
ret
adc
push
add
sbb
mov
jbe
(bad)
cmp
ja
inc
hlt
adc
inc
fmul
push
gs
loopne
scas
xor
sub
mov
mov
inc
push
dec
add
and
pop
dec
js
and
in
sub
inc
add
shl
lods
in
adc
dec
mov
push
and
pop
sub
ins
jbe
daa
mov
jg
leave
sbb
jae
pop
in
jbe
fdivr
cmp
xchg
iret
sub
dec
sub
fidiv
jbe
ret
iret
mov
mov
dec
cmp
xchg
add
scas
pusha
sbb
fs
sbb
mov
bound
retf
mov
jg
bound
out
push
in
jb
sar
inc
cmp
test
or
sbb
push
(bad)
cmp
pop
jp
jp
lahf
dec
aaa
push
leave
leave
cmp
inc
mov
call
jge
and
adc
shl
sub
lea
pop
pop
(bad)
fsubr
mov
inc
jb
xor
inc
enter
mov
dec
adc
add
mov
je
(bad)
fwait
pop
leave
or
cs
xchg
(bad)
(bad)
jmp
pushf
cmps
mov
in
inc
(bad)
je
inc
into
in
sbb
mov
hlt
cmp
xchg
frstor
(bad)
retf
std
mov
xor
shl
inc
call
jg
mov
mov
jae
dec
or
inc
es
out
hlt
sti
cmps
inc
sbb
pusha
jmp
push
stos
(bad)
cdq
inc
push
ret
sub
ss
imul
cmp
lods
sub
and
dec
adc
xlat
aaa
adc
dec
jno
jns
push
push
push
xor
mov
add
fisttp
jmp
or
dec
adc
add
adc
dec
jg
sub
mov
inc
fwait
push
in
imul
jb
jo
sub
adc
into
(bad)
add
cmp
fdiv
pop
or
rcl
xchg
iret
lock
cmp
jmp
test
pop
cwde
enter
pop
imul
popf
mov
rcr
jl
mov
sub
add
push
das
mov
push
jae
retf
aaa
pop
addr16
test
mov
es
xchg
jb
xor
pop
daa
rol
push
jge
push
loopne
jbe
fidiv
test
jne
rcr
scas
rol
bound
adc
outs
movs
ds
inc
or
sar
(bad)
retf
sbb
call
(bad)
cmps
jno
sbb
jmp
test
movs
repz
inc
test
cmps
in
sub
daa
push
cmp
inc
push
xchg
aaa
jno
popa
mov
gs
jg
fs
addr16
push
jbe
jecxz
jle
mov
rol
jge
retf
or
jne
or
imul
adc
add
cmp
sub
movs
daa
jp
adc
jle
mov
mov
and
imul
jle
inc
int
addr16
lds
ins
repnz
dec
(bad)
jns
loopne
add
sub
dec
xlat
xor
rcl
jmp
push
or
cmp
jne
mov
jge
pop
imul
cs
xlat
adc
les
call
add
inc
cmp
inc
outs
idiv
sbb
mov
xor
in
mov
xchg
jmp
leave
dec
jmp
mov
pop
gs
pop
mov
lods
push
push
push
ds
dec
cmp
mov
(bad)
inc
sbb
inc
dec
push
cmp
mov
pop
imul
sbb
pop
mov
xchg
jne
dec
or
pop
jmp
sub
mov
mov
xchg
ins
fcom
xor
add
inc
xor
jmp
leave
out
mov
out
mov
xlat
jge
cmp
sbb
jmp
xor
cdq
jge
jg
div
and
inc
mov
sbb
cli
inc
clc
stos
(bad)
xlat
mov
shl
pop
mov
cmc
(bad)
cwde
mov
adc
jnp
rcl
ret
das
out
mov
mov
push
mov
mov
push
stc
push
setne
or
sbb
(bad)
idiv
cld
push
out
inc
movs
outs
(bad)
xor
test
inc
adc
out
pop
xor
scas
jl
xlat
shr
mov
in
call
mov
mov
and
aaa
outs
fadd
in
popa
and
and
rcl
mov
jecxz
fistp
ficomp
sbb
arpl
jp
sub
push
(bad)
pop
xor
xor
pop
rcl
stos
push
inc
gs
popf
aas
jo
hlt
push
jnp
sbb
add
outs
pop
data16
lds
(bad)
imul
repz
add
jl
loope
cli
cdq
xor
mov
hlt
rcl
inc
aam
sub
out
fld
dec
sti
push
call
test
pop
xor
push
outs
pop
(bad)
cmp
cmp
pusha
hlt
pop
pop
or
or
ja
push
shl
jg
xor
dec
loopne
icebp
jmp
(bad)
mov
inc
nop
and
out
mov
je
dec
pop
fst
data16
xlat
jmp
sbb
jmp
(bad)
jg
cmp
mov
xlat
pop
xlat
lods
stc
mov
sub
mov
sbb
inc
loop
call
adc
mov
jecxz
outs
ret
mov
mov
cwde
int3
add
mov
or
jae
or
dec
jns
ins
ins
and
cmp
sub
or
xor
push
mov
int
fs
cs
jmp
adc
(bad)
mov
aam
das
xchg
ja
jae
inc
(bad)
push
jbe
and
arpl
or
jmp
jns
les
mov
pop
fcmovbe
popa
xor
sbb
cmp
mov
fwait
call
xor
push
out
imul
test
rcl
xor
ret
mov
sub
jp
and
maxps
sbb
mov
xchg
jns
stos
push
fs
je
or
inc
inc
jnp
popf
in
div
cdq
cld
mov
mov
lods
ja
adc
jmp
cdq
push
int
lds
movs
fistp
dec
sub
retf
or
bound
inc
cdq
in
jl
pop
dec
mov
inc
shl
nop
call
xor
pop
les
movs
or
jp
mov
xchg
push
lods
mov
test
in
scas
sbb
jg
dec
cmp
pop
or
push
in
aaa
lods
or
in
fs
cmp
pop
scas
movs
outs
lds
xor
fild
adc
(bad)
sub
add
int3
or
cmp
dec
or
pop
sub
jne
jnp
add
and
retf
dec
je
xchg
sahf
mov
or
push
xchg
add
mov
inc
int
mov
jnp
add
out
pop
push
loop
add
sub
cli
neg
leave
push
out
scas
movs
inc
jmp
or
fs
sbb
(bad)
inc
mul
imul
xchg
int3
daa
inc
sbb
mov
jno
das
repz
pusha
and
outs
fs
push
push
ror
add
sub
ror
inc
popa
loop
inc
aas
sbb
jnp
sar
cli
out
jmp
mov
test
add
ja
mov
xchg
pop
xchg
mov
cmp
fs
shl
inc
sbb
(bad)
iret
(bad)
push
test
mov
in
pop
pop
push
add
and
dec
fadd
push
push
rol
cmc
aad
add
cmp
sub
xor
daa
jno
adc
mov
sub
jmp
pushf
and
pop
call
call
sub
movaps
jno
in
mov
mov
jp
sub
mov
sub
loopne
pop
xor
jo
out
inc
data16
out
xchg
add
jo
mov
adc
sub
xchg
loopne
jbe
test
and
push
fiadd
cmc
pop
xchg
stos
sub
adc
fcomp
outs
je
pop
fsub
test
xchg
jp
fnstsw
or
jb
mov
jecxz
dec
sub
inc
mov
adc
sbb
add
loopne
sbb
dec
jno
into
cmps
dec
lahf
xor
into
aaa
stc
sbb
clc
scas
cwde
mov
in
cli
sub
inc
mov
inc
cmp
lahf
stos
and
sbb
pop
jge
cli
and
and
aad
cmps
fdivr
loop
jb
dec
cmp
xor
fwait
aad
out
fisubr
sbb
pop
ins
and
dec
sub
dec
lock
jmp
shl
sub
mul
cld
pop
(bad)
sbb
es
adc
ret
dec
mov
sbb
cmp
jle
jecxz
push
jl
sar
and
lods
fs
xor
clc
je
add
imul
movs
movs
retf
lds
xor
jne
push
cmp
or
cmp
xor
mov
or
mov
fld
in
mov
mov
add
sub
repz
and
ds
adc
lea
bound
add
push
pop
lahf
neg
dec
sub
scas
ficomp
jmp
imul
mov
push
test
push
pop
jmp
mov
pop
or
repnz
out
mov
sti
and
add
mov
daa
and
dec
jo
and
sar
adc
xchg
xchg
mov
shl
div
jp
outs
and
movs
sub
lods
add
jg
(bad)
dec
xchg
push
bound
ins
jmp
sub
add
jmp
ror
jbe
push
out
cs
fild
mov
sbb
in
mov
imul
test
sub
sub
(bad)
mul
mov
fstp
jmp
test
out
xor
xchg
pop
(bad)
pop
mov
jmp
inc
and
int
ret
jle
sub
jnp
test
out
sub
mov
js
ret
cmps
ror
lods
ds
cmp
outs
sub
fld
mov
cmps
bound
stos
rcl
push
int
mov
adc
imul
leave
mov
adc
daa
mov
sbb
ins
fbstp
imul
sub
lock
inc
sar
jns
push
fidiv
fs
ror
pop
dec
and
test
push
sub
cmp
sub
fidivr
xchg
push
and
call
cmps
xor
mov
js
xchg
jg
cmp
add
retf
mov
outs
cmp
pusha
pop
push
jb
inc
push
sahf
adc
or
aas
push
mov
xor
cmp
gs
inc
sub
mov
xor
shr
es
jge
jo
ins
lods
inc
and
push
jne
sub
mov
cmp
and
pop
dec
sbb
adc
push
pop
adc
mov
call
stc
mov
(bad)
fstp
stos
arpl
mov
inc
sub
sub
sub
and
adc
rdpmc
sti
pusha
loop
out
pusha
fdivp
sbb
xchg
sub
je
inc
movs
iret
stc
inc
jge
jmp
mov
rcr
jg
std
dec
mov
mov
inc
outs
int3
(bad)
sbb
push
loope
mov
dec
push
aas
mov
popa
cmp
or
dec
outs
ins
mov
fst
gs
lds
xor
lea
pop
cmp
mov
mov
cs
into
aaa
bound
add
int3
adc
je
das
pop
xchg
sbb
inc
pop
lahf
pop
jo
les
ds
xchg
out
jge
call
icebp
pop
hlt
cs
mov
inc
mov
and
js
xchg
(bad)
sahf
test
or
mov
pop
xchg
push
jmp
int3
mov
inc
das
je
fimul
pop
cmp
or
(bad)
gs
mov
shl
stos
sahf
mov
xor
add
aam
cdq
cmp
dec
pop
out
cs
sbb
xchg
add
inc
push
bswap
outs
out
aad
mov
pop
xor
in
cmp
sti
dec
mov
pop
jp
es
xchg
lods
sub
xchg
adc
fldcw
in
inc
(bad)
stos
xlat
xor
push
(bad)
fdivp
push
sub
pop
movs
cmp
mov
out
sahf
pop
push
imul
push
jle
cs
jbe
mov
inc
fst
data16
add
add
mov
or
cmovle
sbb
jp
rol
mov
mov
push
lods
ds
mov
js
mov
dec
push
jg
and
stos
outs
inc
dec
sub
xor
add
add
push
cmp
xlat
jle
cmps
xor
outs
jb
sbb
mov
(bad)
xchg
stc
or
dec
push
jmp
jecxz
jbe
cmp
cmp
jo
bound
xchg
xchg
sub
ffreep
or
jge
inc
or
into
inc
push
add
push
(bad)
retf
push
cmp
addr16
xchg
push
jp
jb
rcr
sti
out
gs
es
stos
pop
fistp
jo
cli
mov
adc
stc
movs
add
leave
mov
fs
sahf
(bad)
js
cmps
xor
xchg
in
and
or
imul
movs
ret
int
or
mov
mov
jmp
clc
fimul
aaa
and
ss
xor
inc
inc
inc
in
sub
inc
pop
ds
rol
dec
pop
fsubr
pop
lds
ins
and
cmp
pop
loop
jge
(bad)
inc
and
scas
cmp
popf
xchg
(bad)
cs
mov
nop
jg
je
(bad)
mov
(bad)
in
cmps
mov
loope
call
and
pushf
ss
sub
out
pop
das
inc
cmp
pop
cmp
push
push
sub
inc
out
mov
or
cmp
popf
mov
mov
std
mov
mov
lahf
xor
fidivr
xor
and
fs
aaa
pop
mov
add
pop
retf
jnp
mov
(bad)
ja
mov
sub
push
push
pop
inc
adc
inc
inc
retf
mov
cmp
xor
xor
bound
add
xor
outs
jmp
daa
clc
xchg
mov
in
lods
mov
sbb
mov
outs
enter
inc
(bad)
dec
jecxz
loopne
sahf
adc
mov
outs
jg
ror
out
movs
sbb
sub
call
or
inc
fadd
loope
and
dec
and
ins
dec
sti
push
add
dec
rol
(bad)
loope
jmp
scas
test
ja
cli
cmp
mov
jns
scas
(bad)
xchg
les
stc
pop
xor
adc
push
les
mov
cmp
jecxz
and
in
jmp
pop
xor
out
cmp
pop
sub
pushf
and
adc
(bad)
jmp
aas
fcomp
pop
fs
xchg
cmp
das
mov
fisub
jno
into
mov
jb
push
mov
dec
div
cmp
dec
mov
jo
sub
push
cmp
data16
sahf
cld
xchg
jg
fisub
pop
addr16
add
cli
xor
xor
push
cmp
jns
pop
cmp
(bad)
jg
xor
stos
mov
adc
ss
scas
push
repz
xor
xlat
nop
test
xor
cmp
rol
xchg
dec
in
and
jl
mov
call
ja
int3
mov
jg
enter
dec
or
lds
jns
push
test
jbe
retf
sahf
and
push
inc
adc
xor
mov
les
test
push
adc
fstp
adc
pop
sar
jle
movs
push
shl
icebp
inc
ss
add
in
or
in
into
cs
dec
xchg
and
inc
(bad)
(bad)
jmp
xchg
push
cmp
das
mov
ds
jae
jle
outs
je
jae
or
loope
loope
add
jg
pusha
or
mov
mov
ds
les
into
fsub
(bad)
fld
sbb
int
test
jg
mov
pop
pop
aaa
pop
or
ret
mov
xchg
sti
jecxz
retf
pop
sbb
jge
dec
push
and
or
pushf
mov
lea
sbb
iret
lds
sub
ja
inc
call
stos
call
stos
int3
mov
mov
jnp
mov
out
scas
cmp
dec
xor
test
and
mov
jmp
xlat
pop
clc
jae
sbb
cli
dec
add
mov
and
fiadd
idiv
mov
popa
loope
adc
mov
mov
cmp
inc
cmp
loopne
ins
inc
mov
xchg
mov
jmp
cmps
mov
gs
pop
adc
mov
hlt
jnp
adc
cmp
cmp
mov
rcl
xchg
cmp
jns
adc
mov
sub
js
sub
fldl2e
sbb
push
and
add
mov
inc
in
and
mov
jb
add
cmc
nop
mov
aas
fnstenv
cmp
rcr
sub
xchg
jmp
jg
mov
dec
inc
jo
scas
clc
cmp
shr
aad
inc
xor
mov
jl
(bad)
gs
shl
stos
aam
jmp
loop
or
popf
call
sbb
aaa
pop
adc
pusha
adc
dec
push
test
inc
mov
adc
jnp
mov
icebp
iret
and
xlat
icebp
imul
lods
rcr
add
xlat
faddp
mov
mov
loope
bound
push
mov
xor
and
(bad)
into
cdq
adc
inc
nop
mov
mov
out
cwde
mov
and
fs
push
stos
sub
cmp
dec
out
dec
mov
pop
pop
jle
push
stc
repnz
or
pop
repnz
lods
xor
inc
ins
cmp
push
push
stos
outs
ins
les
xchg
jmp
mov
jg
(bad)
sbb
rcl
fadd
xchg
xor
inc
inc
jecxz
pop
push
sub
inc
ds
jmp
jo
outs
jne
inc
jbe
sbb
popa
mov
mov
or
mov
ror
push
int
sbb
iret
sbb
and
push
or
mov
jg
jg
out
imul
clc
imul
rcl
mov
dec
pop
jae
jg
inc
stc
jg
sbb
adc
(bad)
xor
xor
jno
sub
inc
sub
sub
cmp
dec
(bad)
movs
fidivr
inc
lods
inc
cmp
cmp
imul
pop
cmp
imul
sbb
scas
imul
mov
das
mov
call
frstor
add
out
imul
addr16
push
jbe
adc
jp
cld
rcr
aad
(bad)
ss
cdq
or
mov
jbe
shl
leave
retf
xor
out
or
shr
mov
cmp
sbb
adc
jae
mov
mov
lock
std
mov
mov
inc
xlat
es
lahf
test
mov
inc
xchg
(bad)
cmc
and
(bad)
fwait
movs
and
cmovae
lds
push
jle
sub
push
pop
movs
(bad)
pusha
and
mov
cli
dec
mov
sub
xchg
xor
xchg
mov
rcl
repz
dec
mov
adc
stos
imul
mov
mov
imul
jecxz
adc
dec
jle
repnz
adc
aad
push
(bad)
xlat
cmp
ins
mov
ds
pop
scas
mov
adc
cmp
and
xor
ret
test
scas
dec
pop
lock
stos
les
ficomp
mov
lods
dec
jnp
jnp
in
inc
push
jo
mov
dec
push
cmp
or
jle
lahf
jmp
jecxz
shr
aaa
pop
mov
lods
ja
call
adc
mov
loope
loop
sti
aad
inc
aam
sub
cmps
dec
push
scas
adc
and
in
(bad)
and
ret
dec
in
sub
pop
repnz
xchg
test
sbb
jecxz
mov
test
adc
and
jne
idiv
inc
test
stc
jg
mov
outs
xchg
shl
int3
mov
sub
fiadd
sbb
fdivrp
jns
std
jne
mov
xor
jge
cmps
in
jno
sub
rcr
add
popa
sub
mov
stc
ret
lods
pop
hlt
les
xor
imul
pop
cld
int3
arpl
mov
adc
movhps
or
add
test
cwde
in
or
push
cmp
mov
scas
ss
mov
adc
pop
and
addr16
mov
or
jb
(bad)
aas
pop
mov
cwde
leave
mov
loope
mov
mov
icebp
or
xor
shl
call
in
push
mov
out
in
or
clc
in
push
mov
cmp
cwde
jg
adc
je
xchg
outs
mov
add
inc
xchg
mov
rol
cmp
ja
jge
in
add
pop
loop
lods
jmp
dec
pmaddwd
push
mov
scas
outs
push
inc
cld
xor
lods
retf
ins
push
adc
mov
adc
mov
aad
inc
test
jge
cmp
out
pop
sahf
fstp
mov
cmp
test
push
out
pop
bound
sbb
retf
scas
adc
ret
lods
or
mov
hlt
add
pop
rsqrtps
or
cmp
xchg
adc
bound
pop
(bad)
push
sbb
push
mov
jmp
push
loop
sub
rcr
push
mov
jmp
add
nop
adc
jo
push
aam
sub
(bad)
pop
dec
ins
jg
pop
mov
xor
retf
push
and
imul
or
dec
enter
adc
jno
ja
outs
dec
xchg
and
popa
bound
push
add
ja
clc
loope
sub
cmp
data16
mov
jo
fcmovne
std
repnz
mov
(bad)
in
(bad)
push
ret
sbb
push
stos
mov
fdivp
add
cmp
push
mov
jecxz
mov
sub
in
mov
fidiv
int3
jmp
js
(bad)
inc
mov
call
push
nop
nop
add
mov
push
ja
inc
shl
push
push
cmp
mov
add
and
jbe
dec
and
ins
fcmovnu
and
xlat
imul
in
adc
clc
repnz
scas
inc
cmps
pop
je
sub
sub
leave
inc
clc
add
clc
in
jne
mov
xor
mov
mov
sar
cmp
pop
call
push
push
scas
pop
jno
scas
(bad)
sub
in
sub
jae
(bad)
sti
push
out
daa
or
mov
fstp
data16
inc
dec
ds
inc
push
in
outs
sbb
scas
xchg
and
and
dec
ins
clc
test
loopne
out
inc
rcl
sub
out
and
aad
sub
push
push
into
and
lods
jo
jo
pushf
pop
nop
sahf
not
scas
push
ror
in
fsub
add
(bad)
mov
outs
mov
das
jle
outs
scas
mov
fwait
cld
js
and
(bad)
push
fisttp
mov
neg
mov
into
push
push
adc
arpl
(bad)
mov
pop
add
jo
fcom
sub
out
pop
sub
xchg
pop
pop
int
mov
pop
xor
pop
das
fmul
ror
jmp
pop
mov
jg
mov
jge
jmp
inc
pop
nop
inc
cmps
or
loop
std
mov
pushw
mov
popa
pop
dec
adc
shl
mov
mov
adc
inc
xlat
jbe
mov
mov
sub
aaa
ds
inc
pusha
jae
repnz
and
push
scas
jmp
mov
in
fst
daa
xchg
push
sbb
and
fs
push
pop
test
jne
jo
scas
and
out
daa
push
push
test
popf
in
xor
mov
jmp
mov
jmp
int
dec
pop
inc
jmp
and
pop
pop
mov
push
sti
push
dec
addr16
cmp
call
not
cwde
xor
sbb
dec
dec
outs
inc
push
pop
dec
jg
pop
rcr
in
push
lea
in
cmp
cmp
into
xor
sbb
stos
je
or
dec
test
lods
or
jp
xlat
xor
jle
add
xlat
stos
pop
jno
dec
push
xchg
rol
jecxz
push
packuswb
pop
push
and
adc
sar
ss
xchg
lds
sar
es
xlat
inc
bound
xor
jne
push
pop
scas
mov
or
pop
outs
loop
imul
xor
mov
dec
aad
xor
mov
mov
add
push
push
pop
pop
sub
sub
push
sub
jl
mov
data16
dec
mov
push
push
jmp
hlt
cmp
sbb
imul
jmp
xor
mov
pusha
adc
jno
mov
(bad)
inc
push
jmp
clc
ss
cmps
inc
aaa
dec
or
sbb
pop
pop
in
add
call
div
xlat
data16
ret
pop
out
(bad)
mov
sub
inc
in
out
xchg
cmp
sub
lahf
pop
jae
mov
mov
pop
gs
imul
pusha
scas
xlat
pop
sub
(bad)
shr
xchg
xchg
pop
scas
repz
mov
fdivr
sub
mov
std
and
(bad)
sar
(bad)
out
in
xor
dec
idiv
cmp
(bad)
popf
xor
xor
(bad)
scas
xor
or
push
imul
dec
sbb
aaa
xchg
shl
pop
mov
dec
sub
mov
popf
pushf
loope
pusha
xlat
jb
xor
clc
fcmovne
xchg
js
popf
jle
dec
or
jecxz
inc
push
dec
pop
mov
add
and
in
repnz
ins
sub
push
adc
adc
inc
imul
dec
ret
dec
mov
or
mov
fiadd
in
out
cld
pop
in
ficomp
scas
inc
inc
push
out
cli
inc
ret
mov
add
clc
daa
test
ds
sub
jle
out
dec
ss
test
cmp
bound
or
es
sub
in
jbe
jnp
test
fyl2x
inc
(bad)
mov
xchg
sub
shl
jge
and
adc
push
mov
pop
scas
fdiv
js
adc
push
add
and
jb
fild
push
std
inc
push
shl
push
mov
and
mov
out
movs
sar
cmps
or
cdq
jbe
adc
sbb
jae
push
mov
out
mov
pushf
and
jle
std
add
clc
scas
sbb
mov
retf
stos
(bad)
mov
(bad)
and
cmp
xchg
or
and
loop
call
push
jl
jns
mov
add
cmc
loop
push
lods
imul
inc
rol
jo
fcomp
inc
pusha
clc
call
xor
cmc
movs
fimul
inc
ffree
sbb
div
test
in
stos
or
jno
mov
out
addr16
inc
(bad)
bnd
loop
pop
scas
clc
pusha
mov
arpl
dec
scas
js
mov
xor
cli
outs
and
repnz
add
mov
in
shl
aad
hlt
out
push
mov
ficomp
loope
jp
push
je
jb
outs
dec
daa
mov
jmp
mov
mov
mov
mov
into
push
push
dec
pop
daa
repz
stc
inc
pop
inc
and
dec
je
sahf
or
push
xor
mov
cmp
cmp
les
push
and
dec
mov
retf
dec
inc
xchg
jg
sub
sar
xchg
test
jp
imul
cmp
inc
ins
push
add
(bad)
rol
pusha
in
pop
push
jle
add
ror
movs
xchg
fidiv
sbb
jnp
test
add
mov
and
push
jg
iret
das
jb
xchg
iret
call
in
mov
xchg
push
mov
(bad)
fld
sub
mov
test
adc
js
push
inc
adc
mov
and
xchg
fild
(bad)
sub
mov
pop
dec
mov
add
daa
jge
aaa
js
dec
retf
dec
inc
xchg
out
stc
ret
cmc
out
add
inc
adc
ins
push
aad
mov
adc
dec
add
mov
push
(bad)
xor
or
inc
sbb
clc
cmc
add
aaa
push
out
pusha
cmp
xchg
imul
jns
(bad)
idiv
js
pop
dec
sti
les
iret
dec
dec
add
mov
int3
sbb
pop
push
pop
loopne
repnz
pop
dec
fwait
and
xchg
std
adc
cmp
jbe
imul
out
mov
xchg
pop
test
fistp
xor
mov
pop
mov
popf
aad
repz
jp
or
pop
push
xchg
pusha
jb
adc
clc
movs
gs
ja
movs
mov
test
jg
cmc
das
stos
retf
call
jge
mov
das
sub
sub
mov
pop
sbb
push
and
inc
jle
in
pop
push
mov
loopne
push
push
movs
mov
inc
imul
leave
mov
sub
inc
sbb
mov
xor
sub
scas
adc
adc
mov
jns
out
les
and
and
jbe
sub
inc
sub
cld
dec
adc
clc
cmp
pop
(bad)
lock
out
mov
hlt
pusha
jmp
add
add
ret
jns
scas
mov
jnp
jmp
(bad)
sbb
pop
sbb
mov
push
mov
cli
inc
add
sub
(bad)
movs
mov
pop
stos
mov
sti
mov
es
(bad)
jle
ins
adc
xor
out
and
out
mov
fisubr
retf
ins
lahf
xor
cmp
sub
jns
push
adc
cs
in
or
or
pop
push
test
xchg
mov
aam
mov
sar
fild
dec
jmp
sbb
outs
(bad)
jno
clc
pop
xor
les
or
jo
jbe
stos
call
lods
mov
cli
xor
mov
mov
or
xchg
xor
rol
test
jg
adc
mov
mov
adc
xor
dec
xchg
repnz
add
xchg
inc
inc
aad
xor
inc
outs
jns
cwde
jg
cmp
inc
loope
cmps
mov
push
(bad)
adc
stc
call
test
repz
add
cmps
sub
sbb
test
std
jle
(bad)
shl
int
gs
cdq
shl
mov
push
add
ins
xor
cld
sbb
out
les
mov
les
pop
dec
pop
mov
adc
outs
(bad)
dec
jecxz
lods
mov
jge
and
xchg
inc
add
(bad)
into
and
idiv
cdq
retf
neg
stos
test
ret
dec
repnz
neg
sub
stos
pop
cmp
cmp
ins
shl
lahf
push
dec
and
dec
mov
pop
cmp
ret
pop
mul
retf
clc
movs
ins
or
leave
inc
int3
daa
movs
add
mov
int3
retf
jne
mov
arpl
add
aam
mov
xchg
or
dec
sti
adc
out
in
ret
sub
lods
push
inc
fdivp
adc
in
out
test
add
cmp
push
je
sbb
scas
(bad)
in
adc
sub
add
hlt
jge
pop
out
dec
cli
out
mov
jmp
sti
add
jb
jns
dec
(bad)
pop
fnstenv
jae
sbb
ins
retf
shl
(bad)
mov
icebp
jae
les
push
retf
cmps
daa
adc
push
in
nop
push
mov
test
fsubp
add
lods
les
sti
jl
xchg
and
stos
int
pop
ss
jmp
xchg
sbb
mov
xor
and
out
mov
sub
ins
jne
es
adc
pop
inc
inc
(bad)
enter
bound
xchg
sub
adc
push
ins
test
pop
jns
mov
rcr
mov
cmp
movs
mov
dec
cli
or
mov
add
mov
lds
xchg
mov
mov
fimul
and
call
std
xchg
sub
push
jbe
fld
lea
mov
ret
idiv
test
mov
scas
adc
mov
xor
pop
cmp
bound
sub
aaa
sub
xor
dec
shl
mov
ss
out
push
out
mov
jne
daa
ror
bound
fwait
mov
pushf
addr16
dec
je
sub
jecxz
xchg
(bad)
int3
sub
jnp
in
fnstsw
push
cmp
sbb
inc
xchg
add
jge
shl
push
adc
pop
aas
or
test
and
arpl
sub
push
test
in
xor
mov
repnz
xchg
dec
and
in
paddusw
add
into
xchg
add
mov
inc
xchg
and
sub
jbe
aam
jg
adc
shl
(bad)
mov
add
imul
and
lea
icebp
das
add
dec
sar
mov
leave
sub
mov
fisubr
fild
imul
stos
xchg
data16
push
in
dec
push
aas
sub
lock
jmp
xchg
call
lods
cmp
sbb
dec
jmp
js
jmp
repz
jl
mul
(bad)
mov
mov
pusha
loop
mov
add
mov
repz
push
inc
stos
pop
jns
or
retf
(bad)
pop
mov
retf
jle
daa
jmp
jae
sbb
mov
(bad)
mov
mov
imul
stos
pop
mov
lock
fdiv
mov
in
ds
dec
cs
and
or
test
mov
sub
(bad)
(bad)
pop
ja
sar
addr16
xor
inc
ss
mov
scas
jle
xor
test
call
shl
das
mov
inc
adc
cmp
rol
adc
jno
popf
push
fnstenv
pop
add
xor
push
loop
adc
mov
lds
mov
repz
dec
addr16
add
cmp
or
sbb
sub
(bad)
das
and
ror
adc
bswap
out
mov
jbe
cmc
cmp
pop
lods
pop
loop
inc
lahf
int3
sub
scas
shr
mov
pop
push
mov
lds
jp
or
xchg
mov
mov
mov
cli
call
jae
mov
xlat
fdivrp
jae
int3
mov
loope
std
sub
(bad)
mov
inc
xor
add
loope
jp
push
retf
jns
icebp
pop
cmp
ret
adc
fidiv
(bad)
xchg
stos
xor
lea
inc
out
sbb
cmp
or
or
imul
pop
xchg
sbb
mov
and
movs
sbb
cmp
mov
retf
add
jo
gs
mov
neg
cmp
cmp
sub
mov
jae
leave
int3
pushf
fisttp
sub
enter
adc
push
push
mov
and
jge
cmp
cmp
mov
daa
sti
push
xchg
and
add
add
(bad)
add
jbe
jle
xor
daa
xchg
(bad)
cmp
or
lods
pop
pop
outs
xchg
sub
cwde
mov
loopne
sub
test
out
jg
push
xlat
nop
out
and
ja
sbb
arpl
inc
cli
dec
push
call
fs
pushf
pop
cld
cmp
ret
popa
repz
call
mov
mov
fld
push
push
pop
or
(bad)
and
inc
(bad)
test
mov
and
mov
xor
lock
push
test
ja
mov
loop
xor
jmp
xor
stos
repnz
mov
pop
outs
mov
jecxz
stc
pminsw
sbb
jecxz
push
clc
xchg
mov
out
cmp
addr16
out
and
add
xchg
(bad)
jns
(bad)
inc
pop
and
scas
push
(bad)
push
sub
sub
mov
jg
or
or
mov
xor
adc
icebp
cmp
daa
cmc
and
loopne
jbe
xlat
arpl
sub
in
jne
outs
fs
mov
fcom
test
or
pop
test
inc
mov
xchg
std
jmp
mov
scas
push
or
xor
pop
inc
hlt
cld
push
fst
cmp
mov
xchg
or
xor
push
sbb
cmp
inc
cmp
daa
fwait
xlat
inc
(bad)
or
adc
fs
sub
push
xchg
push
dec
mov
popa
(bad)
ins
repz
or
in
mov
cmp
pop
ds
jne
mov
sub
pop
add
push
arpl
push
fmulp
push
stos
dec
inc
jecxz
test
sbb
les
call
mov
push
sbb
sbb
mov
leave
fisubr
enter
mov
push
mov
movs
and
aad
jp
push
test
dec
and
movs
dec
mov
mov
mov
fsub
push
sub
cmp
and
adc
lahf
jge
push
repnz
adc
inc
mov
mov
push
lahf
(bad)
dec
jno
pop
cmps
xchg
sbb
adc
push
or
push
js
xchg
loop
jbe
and
ins
lods
movs
cmp
not
jecxz
sub
dec
(bad)
dec
jmp
fs
cs
xchg
shl
inc
pop
test
into
sbb
pop
retf
xchg
jmp
out
sbb
dec
jns
fisub
stc
cmp
out
shl
inc
stos
lahf
fadd
xlat
jg
imul
or
retf
jle
sub
je
mov
(bad)
sbb
mov
jmp
add
icebp
pop
push
outs
push
sbb
das
pop
pop
mov
xchg
in
inc
popf
popa
das
mov
push
stos
nop
mov
cli
xor
fs
jmp
leave
lahf
xchg
enter
mov
or
mov
scas
mov
sub
cmps
imul
mov
dec
adc
retf
icebp
push
test
cdq
jmp
sbb
int
adc
ins
scas
rol
and
(bad)
cmp
pop
call
clc
pop
mov
xor
in
cmps
sbb
pop
mov
mov
mov
test
dec
fsub
xchg
test
and
icebp
je
sbb
pop
fld
jns
dec
adc
sbb
sldt
jnp
in
pop
imul
fmul
xchg
ror
jl
jno
int3
or
imul
push
test
repnz
xor
push
out
adc
mov
je
cld
imul
cmc
mov
dec
xor
adc
push
sbb
out
inc
mov
cmps
dec
push
and
out
fstp
dec
cmp
pop
adc
std
icebp
or
adc
xor
mov
or
xchg
xchg
add
aaa
jo
push
xchg
fs
dec
xor
arpl
push
jbe
leave
dec
add
pop
scas
sub
jecxz
sbb
in
bound
arpl
mov
add
jns
dec
inc
cmp
mov
jg
scas
push
aam
jp
inc
cmp
xor
sbb
mov
jp
mov
mov
addr16
iret
jge
cmp
jg
add
inc
or
mov
cmc
pushf
cs
jb
cwde
mov
xchg
mov
mov
sahf
pop
std
shl
mov
sub
or
scas
add
outs
xor
jae
fisubr
test
mov
mov
in
stos
pop
retf
jle
lods
xor
dec
(bad)
enter
and
stc
add
mov
es
clc
jne
test
scas
adc
and
and
cmc
push
jg
dec
cmps
loope
test
xor
pop
ja
or
lods
push
xor
stc
(bad)
call
jmp
test
fcomp
ins
jb
loop
mov
xor
mov
mov
cmp
jbe
and
xor
mov
jmp
les
stc
push
loope
cmp
and
pop
mov
ins
xchg
push
adc
fistp
shl
sub
fs
shr
rcl
fcom
cs
mov
jns
addr16
mov
mov
loope
int3
or
cwde
cwde
idiv
sub
push
(bad)
pop
adc
xchg
into
stos
jb
dec
push
les
js
shr
dec
inc
cmps
sbb
mov
xor
loop
out
jle
stos
pusha
or
cmps
shl
mov
add
cmc
fstp
repz
push
rcl
shl
int3
aam
push
movs
dec
cld
aas
mov
ret
(bad)
cmp
mov
push
mov
out
cmps
xor
mul
jmp
cmc
loope
cmps
pushf
outs
loopne
out
sbb
not
dec
pop
jmp
xchg
xor
adc
ss
mov
add
in
push
cdq
(bad)
(bad)
nop
cmp
mov
nop
(bad)
ja
jno
in
inc
add
in
mov
jno
cwde
lods
sar
lahf
mov
dec
xchg
and
icebp
jg
xor
mov
adc
lods
std
sub
inc
mov
(bad)
mul
or
icebp
arpl
cs
mov
mov
imul
mov
int3
mov
mov
pop
pop
mov
leave
and
in
and
cdq
inc
movs
imul
pop
xor
stc
inc
arpl
(bad)
neg
xor
retf
jns
cmp
jb
mov
bound
dec
pushf
jne
(bad)
scas
xchg
xor
test
(bad)
cmp
and
aaa
int
add
xor
arpl
pop
cdq
(bad)
xchg
movs
pop
xchg
inc
mov
sbb
sti
jge
xlat
jno
inc
hlt
aad
retf
xchg
mov
mov
or
mov
lock
in
cwde
dec
mov
pusha
xor
in
call
arpl
xchg
cld
call
cs
addr16
cmp
sbb
bnd
rol
data16
pop
adc
fdivr
lock
xchg
sub
and
xor
cmps
push
in
loop
retf
rcr
jl
sub
fwait
out
sub
shr
sub
mov
mov
add
rcr
sahf
imul
ret
in
loope
xor
or
push
ss
mov
add
loope
and
cmp
aas
dec
mov
popa
outs
pop
jg
mov
jbe
enter
jno
push
into
out
xor
inc
mov
pop
jne
mov
jne
call
dec
pop
(bad)
shl
sub
cmp
test
jecxz
mov
or
arpl
mov
sbb
leave
and
clc
(bad)
out
adc
jnp
gs
call
addr16
inc
adc
jae
stos
dec
sbb
out
and
lahf
xor
das
add
imul
test
aad
test
pushf
xchg
shr
(bad)
sahf
in
xor
cmp
(bad)
fidivr
daa
std
int3
add
mov
push
fcomip
pop
outs
imul
pop
or
cmps
dec
push
sbb
xlat
sub
adc
xchg
and
xor
daa
mov
jp
div
adc
enter
dec
nop
inc
dec
mov
xchg
cdq
inc
pop
retf
mov
push
cmp
mov
jmp
push
jmp
mov
repz
mov
outs
add
gs
fwait
cmps
or
test
jp
repnz
push
xor
movs
imul
xlat
dec
xchg
fild
popf
jmp
dec
push
jb
push
test
or
mov
outs
inc
jne
cmp
cmp
sub
dec
sub
add
popa
out
dec
add
inc
dec
sbb
or
jl
mov
pop
inc
les
fimul
call
jecxz
pop
push
sbb
cs
mov
retf
clc
inc
ins
mov
push
ja
out
mov
jp
fs
inc
or
add
or
mov
aam
sahf
pop
inc
js
stc
sbb
in
bound
das
push
or
xor
mov
cmps
movs
cli
pop
gs
loop
aas
test
call
sbb
adc
test
add
push
arpl
cmp
or
(bad)
inc
add
xor
shl
xchg
inc
in
cmp
retf
dec
inc
adc
test
jmp
leave
movs
dec
test
sub
iret
inc
fs
shr
sbb
(bad)
sub
shr
bound
loope
jb
pop
jle
(bad)
sub
sbb
fadd
ds
js
push
mov
enter
in
cmp
test
adc
push
sub
aam
jge
and
dec
add
repnz
sub
sbb
loop
fwait
xor
fadd
or
inc
daa
jnp
in
sbb
fsub
jbe
pushf
inc
in
sti
xor
les
pop
dec
pop
adc
leave
and
mov
imul
mov
enter
sar
outs
mov
inc
out
mov
scas
and
jmp
or
adc
test
inc
sbb
jbe
xchg
mov
dec
xchg
ret
cmc
mov
pop
add
push
push
xchg
test
or
int3
mov
int
mov
pop
ins
fist
inc
(bad)
loopne
jo
jnp
sbb
inc
repz
pop
inc
shr
mov
push
int
inc
adc
sti
inc
pop
dec
pusha
pop
iret
retf
push
bound
bswap
push
cmps
push
push
jns
lods
jl
movs
into
cli
inc
gs
mov
sub
pop
rcl
dec
jle
sub
lahf
xchg
adc
iret
inc
jp
or
cdq
movs
sub
sbb
push
inc
loop
int
mov
ja
movs
inc
jl
cld
pop
hlt
mov
xchg
dec
sbb
push
ja
mov
std
(bad)
stos
pusha
mov
idiv
pusha
aam
std
(bad)
and
imul
jmp
fcmove
inc
mov
adc
out
(bad)
jo
adc
adc
pusha
push
cmp
push
push
das
and
sub
dec
push
jl
pusha
(bad)
jle
(bad)
shr
popf
inc
xlat
stos
sub
ret
dec
jae
push
push
(bad)
scas
scas
dec
mov
mov
push
sub
popf
mov
adc
call
jmp
adc
mov
stc
sub
push
into
ins
popf
loop
mov
pop
jbe
lods
mov
jne
and
add
daa
inc
inc
jno
mov
inc
ret
xchg
add
sbb
arpl
mov
jmp
ja
jl
mov
adc
mov
in
xor
imul
push
push
mov
push
data16
aas
inc
mov
jge
xchg
pop
xor
and
fadd
inc
mov
pop
mov
lea
loope
cmp
ins
out
out
pop
fisttp
aam
inc
pop
addr16
fbstp
pusha
adc
out
mov
sbb
mov
sar
call
lds
sar
jg
and
xor
jns
cmps
pusha
out
and
in
mov
movs
push
jg
or
test
jecxz
data16
adc
jns
push
out
add
jge
pop
(bad)
and
add
movs
add
(bad)
stc
gs
and
jnp
test
sbb
movs
fchs
es
inc
mov
out
lahf
(bad)
fwait
mov
push
jnp
ret
push
mov
les
sub
out
pop
adc
out
jl
sub
cs
(bad)
inc
pushf
test
push
std
sub
adc
and
xor
mov
adc
loop
mov
sbb
mov
ret
dec
add
mov
aad
(bad)
test
test
xor
jmp
fbld
jb
fisubr
jbe
or
mov
mov
mov
fild
jl
call
scas
pop
jns
mov
jne
mov
jmp
adc
ss
addr16
sbb
jmp
or
mov
jmp
ja
pusha
popa
dec
imul
xor
xor
retf
jne
nop
aad
daa
imul
jns
dec
fwait
enter
(bad)
push
dec
jmp
jo
scas
retf
jecxz
out
(bad)
or
and
or
and
shl
jno
arpl
and
popf
mov
outs
nop
(bad)
es
icebp
sbb
bound
or
repnz
pop
mov
ds
jo
sub
repnz
add
or
leave
mov
push
xchg
ja
out
out
(bad)
inc
inc
and
inc
xlat
arpl
(bad)
dec
xchg
fs
inc
clc
sar
cmp
addr16
bound
clc
add
jmp
rcl
mov
stos
outs
imul
fadd
into
mov
cmp
arpl
out
dec
out
js
out
mov
inc
jp
mov
js
cwde
mov
call
mov
int3
sub
movs
mov
jnp
aam
inc
dec
jp
loop
dec
test
lds
loop
cdq
push
rcr
sahf
jl
stos
sbb
sub
shr
cmp
fdivrp
sahf
ret
fs
jb
bnd
lock
rcr
fstp
mov
jns
cmp
(bad)
cmp
je
pop
sub
fist
xchg
pop
pop
addr16
or
sub
cli
jecxz
jnp
or
lods
fisttp
les
xchg
xor
repnz
jo
into
test
ss
xchg
ss
mov
and
lods
dec
leave
stos
sub
sub
out
mov
xor
retf
push
mov
(bad)
jl
cs
jl
pop
ins
adc
pop
or
mov
std
add
rcr
and
scas
pop
push
mov
sbb
fld
dec
cdq
jbe
xor
sti
cmc
cmp
jnp
dec
and
int
(bad)
je
xchg
stos
arpl
mov
les
enter
dec
(bad)
in
mov
cld
daa
inc
jmp
out
push
push
push
lods
mov
loopne
(bad)
sub
mov
inc
and
or
int
jbe
jg
mov
cmps
bound
xor
xchg
test
mov
inc
scas
(bad)
iret
xor
call
pop
shl
lock
and
jp
cmp
(bad)
pop
mov
repz
data16
fcmovne
lods
add
dec
sub
dec
aam
int3
sbb
sub
push
frstor
sahf
xor
push
cli
addr16
hlt
xor
fs
(bad)
dec
mov
and
xor
add
xchg
call
jnp
push
dec
dec
cmp
jl
mov
std
push
adc
mov
out
aas
rol
xlat
arpl
push
push
imul
or
or
xchg
imul
jecxz
push
and
outs
inc
cli
push
mov
cmp
cdq
idiv
(bad)
je
pop
and
mov
jp
pop
jbe
xor
mov
cmps
cmp
xor
inc
shr
scas
fidiv
adc
mov
mov
xchg
leave
jbe
addr16
sbb
ret
inc
scas
cwde
jnp
mov
jmp
pop
add
call
(bad)
movs
sar
inc
sub
fwait
rcl
call
std
(bad)
pop
push
or
dec
mov
js
loopne
jmp
add
out
loop
push
jb
shl
mov
je
pop
mov
shl
pushf
or
push
pop
into
mov
outs
fbld
popf
neg
call
daa
push
lods
pop
jne
adc
data16
mov
mov
mov
push
gs
add
fsub
add
and
push
cdq
pop
lods
and
add
fnstsw
test
cmp
jmp
pop
jo
mov
add
loopne
popa
push
pop
mov
cdq
nop
or
xchg
xor
icebp
add
jmp
mov
out
inc
test
or
pop
cmp
lahf
fstp
adc
and
ds
push
sbb
rol
mov
push
aad
xor
jmp
jno
inc
dec
or
sbb
add
(bad)
lds
inc
mov
or
cdq
sti
jbe
jns
mov
idiv
retf
xlat
ja
fcom
test
nop
sbb
dec
pause
xchg
adc
jo
jo
jl
mov
pop
mov
call
lahf
adc
pop
or
dec
jp
push
sub
icebp
fidivr
mov
popa
std
push
push
and
loop
outs
ficomp
(bad)
mov
push
mov
nop
jmp
fldcw
in
push
jno
lods
lods
mov
xlat
pusha
test
lea
(bad)
jne
push
adc
out
adc
pop
jmp
scas
mov
push
cdq
push
jg
xlat
mov
jne
push
dec
and
outs
xor
(bad)
jl
jb
jmp
jecxz
scas
xchg
xor
shr
in
(bad)
xchg
or
cs
fnstsw
mov
inc
push
mov
sub
jae
scas
cwde
and
pop
xchg
lods
or
mov
enter
scas
fnstsw
xchg
rol
fiadd
or
jae
jg
outs
dec
jle
es
mov
outs
sub
or
dec
cwde
cmps
cli
js
add
ja
push
je
dec
in
movs
enter
std
sub
add
mov
ret
js
dec
mov
push
and
(bad)
sbb
sbb
sbb
xchg
jno
pop
retf
dec
mov
pop
rcr
repnz
jmp
jmp
aaa
fs
popa
ins
in
sub
es
jb
ret
ret
(bad)
pop
jmp
cmps
aad
xor
dec
xlat
push
lods
pop
mov
pop
sub
lods
arpl
and
repnz
mov
in
test
or
not
cmp
pop
xor
inc
cmp
ret
pop
jno
push
pop
mov
retf
(bad)
add
ss
xchg
pop
out
fmul
push
pop
cld
dec
test
mov
in
scas
inc
dec
cmp
dec
fwait
push
aas
clc
xor
mov
jo
mov
jp
and
sub
nop
mov
sbb
not
push
rcl
outs
fistp
loopne
pop
and
mov
les
xor
mov
and
cmps
pop
test
call
jbe
xlat
jle
sbb
das
inc
jo
sahf
inc
into
(bad)
push
dec
mov
dec
adc
ds
push
cs
(bad)
sub
inc
mov
xchg
test
stos
mov
ret
in
(bad)
mov
bnd
inc
dec
dec
repnz
adc
inc
sub
fistp
xor
jnp
pop
cs
retf
jo
leave
push
or
dec
into
xlat
or
adc
call
imul
xchg
rcl
out
jns
pop
std
cmp
mov
add
mov
adc
out
push
inc
dec
test
xor
sub
cld
je
nop
push
in
enter
popf
mov
dec
out
jl
lahf
and
adc
and
inc
add
add
jmp
push
ja
and
dec
mov
xlat
mov
mov
fdiv
aam
mov
inc
int3
sbb
les
fiadd
mov
(bad)
sub
jl
outs
loopne
pop
sbb
fucom
push
cmp
out
push
ins
(bad)
xchg
call
movs
mov
pop
xchg
test
mov
enter
xor
pop
mov
lds
jg
daa
dec
aaa
dec
sahf
xchg
xchg
jmp
arpl
ins
retf
dec
xchg
pop
or
(bad)
mov
sub
cmp
cs
mov
adc
jno
adc
pop
arpl
mov
repnz
addr16
pushf
icebp
cmc
and
test
das
jne
pop
fwait
or
mov
aas
movs
loopne
sbb
pusha
dec
cs
pusha
mov
xor
in
fdiv
push
scas
mov
test
je
lods
mov
pop
adc
lock
std
or
mov
lea
sub
nop
sbb
mov
nop
mov
arpl
out
loope
std
pusha
mov
pop
mov
cs
mov
inc
push
and
pminsw
lods
fwait
sub
and
push
mov
mov
adc
sub
inc
jl
fwait
mov
leave
aad
push
popa
imul
pop
hlt
pusha
sub
adc
mov
inc
and
sar
push
daa
cwde
call
mov
call
add
iret
and
cs
(bad)
and
mov
shl
jnp
mov
jne
addr16
mov
mov
pusha
scas
mov
inc
mov
clc
dec
xor
xchg
rol
and
(bad)
dec
nop
push
and
imul
inc
popf
push
mov
retf
add
rol
pop
(bad)
lahf
addr16
sub
or
repnz
sub
cmp
adc
addr16
pop
jmp
test
pusha
test
ror
pop
mov
dec
jl
jl
outs
pop
loop
pop
je
imul
int3
sbb
aad
xchg
cmp
popf
mov
sub
or
lods
or
pusha
leave
aas
ss
lea
dec
mov
sub
ret
jno
sub
aaa
push
mov
lock
pusha
jns
rcr
out
call
popf
mov
xor
adc
sti
(bad)
fucomi
xchg
jns
js
sbb
arpl
movs
push
cmp
icebp
cmp
add
ins
aad
fwait
push
jne
out
fstp
or
ss
add
sbb
fst
test
adc
cdq
mov
mov
pusha
icebp
ins
es
fadd
dec
and
cwde
scas
pusha
repnz
pusha
lahf
mov
ja
mov
push
push
repnz
xor
sbb
mov
jmp
ss
mov
sbb
push
sar
sub
jp
loope
push
ja
pop
pop
and
nop
in
and
sub
push
shl
cld
stc
adc
mov
sbb
or
sahf
xchg
xlat
out
cmp
sub
mov
inc
enter
fmul
cdq
cmp
out
cmp
addr16
mov
fs
and
bound
sub
aaa
pop
sbb
push
lahf
pop
ins
xor
scas
adc
ja
das
loop
jno
pop
scas
cmp
adc
jecxz
out
jb
movs
xor
ja
clc
dec
xchg
cmps
sub
out
cli
(bad)
ss
in
cmps
fstp
push
add
mov
addr16
add
or
xchg
and
add
popa
adc
and
aaa
out
adc
jge
leave
inc
xchg
adc
xor
shl
sub
sbb
(bad)
leave
mov
dec
imul
std
shl
sub
push
lods
in
push
(bad)
jbe
(bad)
fwait
lds
(bad)
icebp
sub
arpl
mov
adc
gs
loop
in
in
mov
aam
jbe
in
sbb
xchg
sbb
mov
jl
xchg
adc
push
push
pop
jge
pop
in
into
inc
inc
into
mov
pop
mov
and
push
mov
repnz
pop
pusha
fmul
cmp
fldl2e
mov
dec
jmp
and
sub
sahf
xchg
xor
mov
pop
inc
in
(bad)
xchg
cmp
daa
das
enter
cmp
fisub
ror
push
nop
and
repnz
pop
cmc
push
sbb
push
lahf
cli
and
jnp
pop
pop
rcr
push
mov
or
pop
movs
push
into
dec
cwde
mov
shr
add
mov
push
(bad)
cmp
dec
cs
movs
outs
cmps
xchg
push
mov
and
cmp
push
dec
icebp
clc
fisub
lods
push
mov
cmps
jbe
ins
fstp
daa
test
(bad)
das
or
cli
sbb
popa
cmp
arpl
scas
outs
ja
mov
sbb
sub
fidiv
repz
ret
out
std
cs
mov
ret
sar
inc
test
ja
or
dec
scas
add
pop
movs
les
cmp
mov
push
add
comiss
fnstcw
pop
or
scas
mov
xor
(bad)
xchg
or
jns
daa
pop
inc
es
fmul
xor
sub
inc
enter
lahf
jnp
out
mov
lock
mov
mov
jmp
dec
mov
data16
jb
iret
std
in
xor
xchg
sbb
pop
add
dec
stc
pop
pop
dec
pop
ja
dec
sbb
rcr
sub
ja
fprem1
lds
out
dec
shl
inc
dec
adc
arpl
sub
push
and
jg
mov
or
daa
xchg
inc
dec
clc
add
sub
int3
push
fmul
xor
mov
jl
addr16
inc
int3
xchg
retf
pop
test
pop
std
pusha
mov
ins
out
sar
div
sbb
out
jl
adc
popa
pop
mov
cdq
jb
aad
push
retf
lds
inc
and
sbb
outs
mov
mov
xor
int3
pop
jo
or
aad
inc
test
dec
sahf
outs
jbe
add
je
jo
fbstp
(bad)
(bad)
les
adc
jecxz
xor
jno
xor
or
mov
cs
not
outs
dec
xchg
rcl
stc
aam
xchg
fisttp
jp
ds
out
cwde
(bad)
retf
xor
movs
stos
push
add
mov
jge
pop
movs
stc
xor
fbstp
dec
or
lea
push
inc
push
and
in
and
fld
mov
outs
ins
dec
cdq
pop
pop
lea
loop
bound
xor
pop
jmp
retf
das
aad
sbb
mov
(bad)
loope
cdq
dec
or
jo
mov
loope
(bad)
pop
in
jnp
mov
and
dec
push
not
lahf
nop
sub
hlt
pop
mov
mov
lahf
xor
scas
mov
pop
in
add
mov
sub
push
in
js
leave
je
mov
outs
aam
inc
in
fs
mov
(bad)
jmp
mov
call
ret
add
movs
es
imul
mov
cmps
xchg
inc
adc
add
pop
xchg
sub
std
jmp
popa
or
mov
sahf
mov
pop
xchg
scas
cmp
stos
push
fldenv
pop
cwde
shl
push
mov
pop
lods
(bad)
(bad)
call
xor
add
sub
adc
or
add
cmp
pop
movs
mov
std
mov
jle
add
loopne
lea
scas
int
pop
sub
repz
in
mov
inc
lahf
jae
xchg
and
aad
adc
out
jnp
repz
or
fwait
inc
sub
or
jl
sub
inc
and
inc
push
mov
pop
mov
or
bound
mov
inc
jmp
int
xchg
cmp
pop
les
jnp
(bad)
fnstenv
mov
out
fs
xchg
push
stc
mov
mov
or
inc
inc
scas
sub
dec
sahf
or
mov
inc
sub
jne
push
xor
(bad)
loop
push
arpl
mov
add
add
lds
int
stos
push
data16
dec
add
sbb
pop
daa
mov
jns
push
mov
push
cld
and
mov
cmc
call
cmp
(bad)
ror
out
mov
xchg
mov
mov
bound
movs
cmp
jo
cli
pop
dec
cwde
fmul
das
add
mov
int
cmp
xor
mov
mov
test
jae
jo
scas
fs
cdq
pusha
popf
mov
dec
dec
jmp
mov
cwde
cld
mov
pop
das
and
lock
les
retf
adc
add
ja
mov
jl
fldenv
xchg
stos
imul
xchg
adc
dec
add
mov
aad
mov
out
popa
retf
call
mov
add
or
sub
xchg
(bad)
pop
dec
adc
jbe
test
test
ja
outs
outs
cmp
push
bound
jmp
pop
das
push
je
add
shl
cmp
(bad)
sub
inc
adc
inc
das
loope
pop
add
add
not
dec
pop
mov
shl
outs
xchg
test
cmp
rcr
ret
repnz
out
cwde
das
pop
adc
(bad)
js
jno
ins
or
cmp
sbb
sahf
out
dec
sahf
cmps
sbb
hlt
loopne
ja
xchg
ins
add
dec
mov
(bad)
lods
fstp
push
ss
adc
test
test
jb
jbe
clc
add
pop
inc
cdq
out
aam
rcl
jne
sub
xor
jb
or
sub
xor
sub
clc
cmc
popf
mov
fcomp
lock
lods
add
idiv
aam
ds
jmp
mov
sbb
ret
fadd
aaa
(bad)
jns
push
dec
mov
sbb
jecxz
das
(bad)
js
in
leave
mov
pop
sar
or
ror
cmp
arpl
mov
icebp
pop
push
(bad)
cmc
mov
mov
stos
cld
inc
pop
test
loope
sbb
add
mov
xchg
cli
add
mov
out
sub
lods
or
sbb
cmp
xchg
in
clc
or
out
into
cmp
(bad)
in
imul
call
mov
ss
and
cmp
cmp
gs
mov
jle
ds
mov
jecxz
sti
push
add
popa
xlat
sbb
dec
jge
hlt
and
repnz
pop
push
addr16
loope
jo
sub
rol
xchg
stos
fs
mov
jl
cmp
ja
lahf
aaa
push
pop
xchg
aaa
fisubr
or
and
addr16
adc
call
dec
lahf
enter
mov
or
test
stc
mov
add
pop
jae
imul
ins
fs
lock
bound
inc
or
test
or
or
sub
xchg
shl
pop
mov
arpl
inc
mov
aam
mov
fs
push
mov
rcr
inc
cmp
sbb
xchg
or
and
jmp
scas
cmp
mov
sbb
daa
fadd
mov
mov
sub
lea
mov
dec
out
dec
cmps
inc
pushf
pop
mov
dec
inc
cmps
xor
out
test
mov
pusha
xchg
sbb
iret
push
mov
scas
test
xchg
mov
into
loopne
(bad)
xlat
mov
and
sbb
mov
mov
inc
dec
jl
jge
mov
dec
jb
cmp
out
push
movs
adc
adc
test
push
lea
adc
xchg
mov
mov
xor
ja
or
inc
call
in
mov
test
test
shl
in
and
jg
mov
lods
adc
xchg
mov
shl
call
or
jmp
movs
xor
or
mov
jge
fdivr
aaa
mov
in
xor
inc
fild
push
nop
mov
adc
and
pop
ss
je
stos
stos
sbb
in
push
jg
popa
dec
pop
mov
xchg
popf
int3
dec
or
popf
add
mov
loop
add
cs
fld
cmp
in
daa
scas
movs
popa
mov
shl
add
lea
mov
jb
push
aaa
pop
neg
inc
xor
xchg
pusha
test
repz
xor
jg
xor
je
and
stos
or
in
lods
lods
mov
fisub
aam
or
outs
adc
out
fidiv
lahf
ficomp
cmp
aas
sub
mov
pop
and
inc
(bad)
mov
outs
popa
pop
arpl
xor
repnz
leave
lahf
cmps
mov
mov
loop
or
push
hlt
jl
(bad)
jecxz
xor
sbb
out
inc
outs
fnstcw
adc
ss
rcl
mov
sahf
xbegin
mov
clc
jle
inc
add
outs
cmp
mov
or
outs
or
scas
repz
sti
push
movs
push
pop
lock
call
add
inc
fdivrp
push
and
das
sbb
jbe
mov
and
into
imul
je
pop
or
scas
add
xchg
inc
mov
xor
sub
jbe
jg
jbe
in
in
scas
mov
fisub
push
pop
lods
mov
outs
xor
imul
jge
jmp
imul
clc
cmp
fisubr
mov
dec
xor
scas
retf
mov
jbe
sbb
xor
popa
pop
mov
jle
hlt
sub
sub
lock
stos
in
mov
popf
(bad)
adc
(bad)
int
pop
sbb
add
popf
in
femms
in
fdivr
mov
pop
jae
jo
lsl
(bad)
mov
jecxz
add
sahf
add
xchg
lea
jle
aam
xor
jns
mov
xor
mov
movs
inc
mov
push
loope
popa
popa
out
pop
rol
shl
push
jp
xor
push
sub
xor
xadd
imul
xchg
nop
popa
(bad)
cli
or
xchg
mov
div
inc
adc
enter
push
gs
push
sub
data16
call
test
xchg
inc
fs
push
dec
jl
mov
cmp
scas
loop
cmp
pop
cmc
sub
pop
lahf
xor
test
dec
jnp
imul
and
bound
push
xor
test
cmp
(bad)
fsub
or
jle
inc
push
(bad)
int3
out
or
jno
fnsetpm(287
aas
inc
or
cmp
jo
dec
pop
jg
or
cmps
popf
adc
mov
cld
ror
int3
out
sub
add
adc
cs
mov
jl
retf
pop
stos
(bad)
(bad)
sahf
sub
jg
push
(bad)
push
xchg
jge
adc
imul
mov
xor
cmc
cmp
xor
dec
xor
call
lods
push
out
imul
mov
std
mov
addr16
jl
sbb
dec
sbb
pop
call
cwde
das
sub
sbb
pop
jg
or
cmps
inc
scas
retf
push
imul
ret
xchg
nop
push
les
lea
xor
fisttp
push
adc
pusha
ins
cmp
push
xchg
jp
add
ins
or
arpl
add
push
sub
mov
daa
mov
mov
sbb
cmp
(bad)
and
fmul
fldcw
fdivrp
jmp
add
es
add
mov
js
jl
push
jp
aaa
test
dec
cmps
in
pop
xchg
and
out
xor
mov
out
mov
popa
ja
mov
or
sub
jbe
pop
loop
and
aad
ss
rol
aaa
and
fld
mov
imul
call
rcr
rol
imul
sbb
jno
ds
sub
fisttp
ss
scas
test
dec
mov
cmps
pop
mov
in
mov
arpl
(bad)
adc
inc
cmps
repz
mov
mov
pusha
cmp
pop
jle
add
inc
fmul
pop
popa
lods
jo
inc
inc
xor
bound
dec
sbb
out
int3
clc
shr
cli
out
mov
enter
cs
frstorw
pop
rcr
mov
sbb
or
addr16
ins
popf
mov
cmp
push
idiv
jns
scas
mov
mov
mov
gs
cdq
mov
shr
xchg
sar
retf
or
pop
ja
sub
xchg
mov
push
in
ins
fild
in
dec
js
es
retw
mov
sub
fcomp
sahf
clc
loope
mov
mov
nop
arpl
outs
ret
in
mov
or
imul
out
push
loop
fs
fs
cmp
lock
xor
push
in
push
pusha
icebp
mov
shl
push
std
loop
mov
loope
add
ret
out
xlat
mov
mov
popa
ja
repnz
and
pop
mov
dec
push
not
dec
(bad)
xchg
into
lods
mov
xor
adc
adc
sbb
mov
jmp
pusha
ficomp
push
xchg
sbb
das
out
shl
mov
lods
xor
outs
add
xchg
mov
jmp
lods
push
rol
xchg
inc
sub
mov
add
add
icebp
add
mov
ret
outs
stos
and
daa
push
xchg
xor
sbb
jl
iret
cmp
fcom
and
call
sbb
es
aas
xchg
jns
jecxz
stos
xlat
out
into
and
inc
leave
rol
pop
jns
mov
fld
jne
icebp
mov
ret
leave
sbb
test
mov
cmps
add
mov
stos
cli
repnz
push
and
adc
nop
cmps
movs
jl
lods
sar
movs
sub
cmp
test
sbb
cmp
inc
sub
imul
sub
cwde
inc
ss
fstp
in
xchg
js
pop
xchg
mov
fcomp
add
(bad)
std
imul
mov
(bad)
jp
mov
and
lods
test
jns
push
cs
xor
clc
loope
cs
out
mov
inc
mov
mov
jge
jae
call
jns
mov
or
lock
(bad)
xchg
sti
lock
cmps
lock
xor
(bad)
mov
dec
rcr
out
mov
leave
or
cli
(bad)
cmp
xor
(bad)
jp
(bad)
jb
fstp
aad
out
mov
sbb
jge
or
ins
sbb
mov
mov
mov
xor
push
mov
pop
jns
push
push
xor
pop
or
cld
inc
(bad)
push
adc
fcom
mov
loope
sbb
cli
jne
test
pop
inc
xor
(bad)
xor
mov
pop
jge
std
jns
push
jbe
add
bound
sub
or
inc
mov
jae
stc
in
jecxz
cwde
push
or
add
int
pop
leave
cmp
dec
or
ja
jmp
jne
pop
ja
mov
add
aas
inc
repz
sub
sub
xor
rcl
sub
inc
addr16
test
push
lock
mov
shl
pop
push
das
dec
sub
pop
mov
rcl
(bad)
mov
pop
js
das
stos
jp
ins
ins
mov
mov
jmp
jo
call
mov
inc
lea
es
pop
push
push
jp
mov
pop
sub
dec
push
outs
push
and
stos
adc
lahf
push
cli
out
push
xor
in
fwait
cmp
mov
clc
leave
fisttp
out
mov
(bad)
jp
(bad)
loope
cmps
stc
jle
test
cmp
sti
(bad)
fstp
mov
adc
mov
call
aad
ins
jle
and
add
xor
in
inc
stc
movs
push
gs
pop
test
adc
pushf
(bad)
dec
cli
ret
add
dec
push
dec
fist
mov
jo
(bad)
cmps
cmps
pop
es
cmps
add
and
aam
mov
inc
inc
sbb
sub
sub
pop
xor
dec
rcr
shr
shr
ds
dec
adc
add
mov
jmp
ja
scas
jecxz
push
daa
jg
daa
shl
movs
data16
arpl
in
test
xchg
cmp
test
jb
sbb
rcr
xchg
cs
or
dec
adc
push
test
mov
test
mov
cmps
(bad)
xor
mov
ja
xchg
aam
iret
or
in
and
push
es
in
bswap
inc
mov
fdivr
mov
stc
or
xor
je
sub
inc
bound
add
popf
out
xlat
movs
in
pop
pop
aaa
mov
das
cld
pop
jle
jnp
test
pushfw
mov
nop
xchg
lahf
je
pusha
adc
xor
push
stos
inc
pop
bound
add
push
les
push
mov
adc
sub
jp
cwde
push
add
daa
mov
adc
aas
jnp
ret
mov
xchg
and
sub
push
xchg
movs
xchg
lods
in
inc
ja
pop
mov
ror
mov
ds
stos
shr
addr16
retf
xchg
popa
addr16
imul
add
movs
ja
dec
lock
(bad)
mov
xor
shr
sbb
cdq
mov
fdiv
push
xchg
jge
pushf
iret
or
dec
add
je
fwait
adc
push
into
movs
call
push
cs
mov
sbb
scas
jbe
pop
mov
cwde
stos
ja
int3
retf
in
xchg
ja
jg
addr16
inc
or
cwde
cmp
inc
mov
mov
and
fwait
arpl
mov
sbb
jg
dec
add
xor
mov
fidiv
xlat
inc
(bad)
ss
mov
adc
push
add
and
stc
jp
jne
xlat
movs
or
scas
aas
ss
loope
sar
jmp
fs
fstp
arpl
mov
shl
and
aas
stos
adc
xor
pop
test
pop
(bad)
pop
pop
js
jmp
sti
xor
mov
adc
mov
out
jae
sbb
jae
test
sti
pop
xchg
aad
mul
mov
or
loopne
inc
push
jbe
into
lods
sbb
inc
idiv
push
mov
cmp
sbb
xchg
xchg
retf
inc
fwait
and
ja
outs
xchg
and
ror
jmp
jg
cwde
cwde
or
leave
pop
fmul
call
shl
add
sbb
cmc
add
imul
(bad)
cmp
xor
sub
(bad)
call
xor
inc
push
ret
iret
js
inc
push
or
fild
xchg
mov
shr
shl
or
mov
dec
inc
mov
icebp
sbb
add
mov
jnp
or
and
or
and
jecxz
das
add
pop
mov
js
push
cs
lea
inc
adc
leave
sbb
imul
mov
(bad)
out
mov
mov
stos
pop
lods
mov
and
imul
out
inc
jl
fwait
popa
fstp
and
fisttp
(bad)
cmp
push
jl
out
sbb
les
push
je
mov
arpl
sbb
repnz
retf
int3
sbb
mov
pop
ins
dec
aad
les
jo
icebp
movs
and
inc
les
out
xlat
call
sub
and
inc
mov
fstp
xchg
jmp
mov
mov
lea
xor
add
xor
and
pop
jmp
inc
(bad)
stos
xchg
inc
pop
mov
and
dec
push
or
dec
lea
mov
push
fmul
mov
jecxz
or
lds
xchg
mov
add
scas
pushf
push
push
sbb
xchg
sub
mov
ror
mov
addr16
jp
fwait
jge
fs
inc
push
xchg
or
push
xor
mov
jne
jo
xor
neg
sub
dec
jb
test
xor
cmp
test
push
and
scas
and
popa
sub
cmp
outs
adc
mov
and
pop
sbb
in
jmp
mov
dec
std
data16
pop
xor
ss
sub
inc
push
push
(bad)
scas
mov
xchg
inc
pushf
dec
cmp
fnsave
lods
sub
std
pop
jle
mov
xchg
lds
inc
push
and
push
ins
mov
pushf
repz
repz
push
in
sbb
scas
ficom
nop
pop
stc
xlat
mov
xlat
pop
leave
stos
popf
pop
out
push
jg
js
ds
lock
aam
add
push
sub
inc
outs
add
jmp
(bad)
outs
mov
xchg
outs
cmp
jmp
cdq
cmp
sbb
neg
lahf
jle
dec
clc
ret
add
and
or
es
push
add
mov
lea
(bad)
arpl
ret
mov
adc
sbb
jp
imul
(bad)
lahf
jle
aaa
cwde
mov
push
enter
adc
and
push
xchg
ret
dec
dec
inc
ja
mov
xor
pop
repz
jmp
lock
sub
(bad)
xchg
adc
add
cdq
sahf
lods
push
clc
div
or
leave
retf
retf
ja
jae
pop
retf
and
les
dec
movs
std
mov
mov
xor
cld
iret
pop
out
mov
pusha
outs
mov
test
or
call
addr16
retf
jg
ret
mov
dec
aaa
aas
aas
imul
xchg
test
imul
ficom
adc
sbb
push
jmp
mov
xchg
mov
fdiv
pop
movs
pop
inc
push
les
mov
jl
and
sub
dec
add
jle
xchg
bound
xchg
pop
dec
maskmovq
test
inc
mov
into
mov
sub
pop
popf
je
mov
rcr
mov
ror
test
push
sbb
aam
jno
dec
push
xor
sar
jl
pusha
xor
cmps
arpl
mov
jmp
xchg
imul
cmp
into
push
into
mov
jmp
and
cmp
cmp
ins
scas
repz
test
sbb
movs
cmp
pop
mov
jp
repnz
arpl
enter
ret
int
add
pop
cs
hlt
iret
mov
cmp
push
cmp
clc
cmp
into
xchg
mov
jns
push
stos
jne
outs
push
neg
div
mov
dec
ficomp
sub
enter
add
cmp
adc
sub
or
nop
enter
retf
dec
call
ds
shl
not
inc
mov
xor
mov
jl
mov
shr
mov
jmp
daa
mov
jg
push
cmp
into
xchg
std
push
push
cmp
jns
sbb
gs
popa
push
cmp
fxch
gs
je
ins
iret
and
into
jge
int
and
cmp
scas
pop
loop
pop
or
pop
icebp
int
cmp
cdq
ret
(bad)
js
call
repnz
mov
ss
outs
jne
je
sahf
test
add
test
retf
mov
and
(bad)
mov
inc
dec
jnp
jmp
scas
sub
pop
sbb
(bad)
lock
cs
(bad)
sbb
pop
push
inc
jb
dec
inc
mov
mul
mov
sbb
addr16
fs
out
xchg
lods
ss
icebp
leave
push
fbld
mov
ds
mov
push
xchg
mov
dec
cmp
mov
test
pop
cli
imul
fincstp
cmp
nop
pop
pop
addr16
jae
push
imul
push
or
mov
push
pop
(bad)
int
sub
jb
ins
push
ds
add
rol
sub
fs
pop
mov
cdq
outs
mov
inc
mov
add
jae
inc
cmp
xchg
je
mov
and
sub
shl
add
ds
sub
inc
fs
aaa
icebp
push
push
sbb
xchg
pop
pop
adc
push
add
mov
sbb
mov
pop
jl
sbb
xchg
cmps
or
rcl
mov
loop
sbb
mov
push
xchg
jle
stos
aas
mov
fisttp
push
mov
out
cmps
adc
rol
mov
fs
(bad)
inc
mov
shr
shr
xlat
sbb
push
sbb
and
push
ins
rol
inc
(bad)
imul
call
sbb
rcl
cs
and
jo
(bad)
cmp
dec
add
inc
aam
out
xor
dec
shr
push
sar
imul
cmp
dec
in
jge
add
cwde
add
add
out
inc
inc
jo
aaa
sahf
movs
sahf
and
push
inc
in
add
jmp
xor
xor
inc
adc
cmp
add
out
jmp
in
or
out
aas
mov
in
inc
aaa
cli
les
mov
xchg
ja
mov
cmp
sub
sbb
test
jne
idiv
jb
loopne
inc
rcl
and
xor
fild
xchg
inc
inc
mov
sub
ffree
jne
clc
test
mov
sub
jns
clc
fisub
sub
pop
sub
jle
jp
mov
push
or
adc
into
mov
(bad)
mul
xchg
push
je
or
xchg
sbb
jle
pop
ins
retf
cs
push
fadd
test
hlt
jo
sbb
jmp
shl
and
(bad)
test
add
jmp
or
out
sub
(bad)
pusha
xor
pop
enter
inc
in
popf
mov
(bad)
adc
xlat
or
sub
ficomp
cmp
cmp
in
popf
sub
loopne
pop
xchg
and
clc
inc
push
push
das
push
sar
not
rcl
or
fs
push
push
xchg
test
jle
fs
dec
inc
dec
push
xor
jle
jg
pushf
imul
mov
mov
out
int
dec
(bad)
jns
jnp
jns
inc
(bad)
push
mov
jbe
cmp
popf
cmp
hlt
(bad)
sbb
mov
cmp
leave
loope
jl
cmp
mov
mov
sbb
rol
dec
mov
xchg
mov
cmps
sub
push
add
call
and
loope
fdivr
sub
int
cmp
aas
dec
pop
movs
pop
mov
out
cmp
cvtpi2ps
sar
popf
push
jp
mov
cmp
mov
xchg
(bad)
out
mov
adc
jle
jl
inc
std
(bad)
bound
inc
mul
dec
cdq
cmps
pop
cld
pop
add
data16
jmp
mov
aad
pop
leave
in
std
adc
clc
jbe
push
fisubr
adc
retf
(bad)
jb
and
loop
aaa
cmp
not
test
ret
sub
add
add
mov
sbb
movs
imul
cwde
les
add
mov
dec
das
dec
and
ret
cmc
fstp
ror
mov
xchg
xchg
fild
inc
mov
pusha
xchg
daa
rol
add
lods
pusha
mov
call
adc
clc
repnz
inc
scas
adc
push
retf
shl
cmps
es
ret
dec
dec
add
sbb
and
mov
movs
arpl
mov
rcr
test
popa
loop
cmp
mov
push
mov
ss
call
shl
dec
out
xchg
(bad)
push
mov
inc
pop
adc
retf
push
mov
es
inc
or
jno
aad
test
jge
mov
cmp
lock
ret
(bad)
push
fmul
scas
jo
jmp
xor
sbb
pusha
adc
sbb
stos
sub
jne
jae
sti
push
call
daa
dec
mov
jne
add
mov
or
inc
pop
ja
push
or
add
jg
fild
sub
pop
fidiv
std
aad
cmp
pusha
xchg
retf
std
(bad)
push
dec
out
push
dec
pusha
sbb
iret
mov
shr
mov
mov
add
sbb
call
push
or
xor
out
push
test
in
pop
pop
dec
mov
pusha
loop
pop
and
jbe
pop
out
dec
es
out
mov
sub
add
ins
push
shr
push
sbb
mov
ss
xchg
dec
mov
jmp
fnstsw
and
fild
pop
aaa
dec
pop
lods
(bad)
cmc
jecxz
adc
cmps
or
jecxz
sbb
in
mov
inc
inc
and
and
and
pop
or
repz
out
cs
not
and
dec
nop
dec
popa
cmp
pop
outs
sub
jl
add
call
cmps
mov
xchg
pop
sub
xor
inc
jmp
retf
mov
out
mov
inc
sti
nop
dec
mov
mov
xchg
xchg
repnz
sbb
shl
out
imul
cld
dec
repnz
imul
test
adc
xchg
(bad)
stos
sbb
sub
scas
sar
in
mov
out
cmp
jmp
add
mov
lock
push
push
out
stos
movs
scas
addr16
sbb
inc
mov
leave
jle
not
xor
xor
dec
retf
repz
pop
test
ss
je
mov
mov
arpl
into
mov
jmp
adc
js
xchg
or
ret
js
push
mov
mov
shl
imul
out
mov
outs
xor
adc
jmp
xor
outs
fadd
xchg
popf
lock
push
js
sub
hlt
clc
pop
stos
(bad)
mov
outs
mov
xor
gs
dec
je
jle
push
in
jo
(bad)
jl
cmp
enter
lods
adc
lds
inc
xor
jmp
inc
arpl
dec
ret
mul
adc
push
jbe
cwd
test
ds
cmp
adc
cmc
push
enter
movs
sub
popa
jmp
and
add
int
push
xchg
xchg
imul
loop
fsub
adc
sub
shl
jecxz
inc
pusha
rcr
mov
cmp
sti
das
leave
pop
inc
mov
add
pop
ret
mov
(bad)
clc
neg
ret
pop
xor
inc
mov
stos
cmp
mov
jae
mov
shr
sub
mov
ins
lods
mov
jns
push
fidivr
sub
cld
jmp
mov
dec
inc
cmc
dec
mov
movs
inc
in
call
out
xchg
les
jmp
outs
sub
pop
mov
popf
out
mov
movs
stc
xor
adc
mov
clc
sub
ror
mov
pop
or
push
out
jbe
mov
jnp
xchg
lds
fwait
mov
push
pushf
mov
jb
and
test
imul
adc
bound
mov
stos
in
and
and
push
outs
lock
lahf
dec
bound
mov
xlat
xor
xor
push
jle
std
lods
hlt
shr
mov
xchg
ins
jbe
inc
das
cmp
shr
out
cmc
dec
shl
shl
pop
ret
pop
mov
pop
xor
icebp
jp
jg
mov
push
or
sbb
sbb
ins
outs
push
jle
(bad)
fcmovnbe
and
xchg
sub
push
call
ja
retf
test
cmp
ss
pushf
dec
mov
mov
push
lods
mov
test
lods
pop
cmp
or
pop
loopne
retf
enter
mov
pop
imul
call
add
pop
ds
je
ds
adc
out
aaa
cdq
mov
add
imul
dec
sbb
or
sahf
push
fist
or
in
fst
add
retf
mov
(bad)
fimul
inc
jbe
retf
or
sub
inc
icebp
and
fwait
jp
scas
adc
dec
movs
rcr
retf
cmp
push
rol
xor
scas
std
nop
lods
in
js
ins
cmp
pop
loopne
test
data16
push
dec
je
cmp
push
mov
shl
add
mov
or
cwde
iret
loopne
push
jmp
cmp
leave
pop
ret
dec
psubd
mov
add
stc
add
lahf
fnstcw
sbb
(bad)
ror
sub
push
cmp
sub
out
out
mov
sub
pop
mov
ins
rol
cmp
jg
and
test
and
cwde
mov
xor
or
in
mov
or
push
or
aaa
mov
jmp
jae
das
test
outs
fidivr
push
arpl
xor
je
push
fdivr
xchg
stc
mov
jnp
(bad)
js
std
pop
sub
mov
(bad)
jg
mov
and
pop
not
jl
lods
push
mov
test
sub
mov
sub
jne
movs
xlat
adc
add
cwde
sbb
outs
and
repnz
lea
xchg
adc
cmps
aad
push
cwde
adc
inc
push
xchg
jnp
push
ja
jo
call
jb
dec
pop
xor
push
repnz
iret
ret
inc
lods
cmp
sbb
pop
fs
jp
sbb
pop
popf
test
(bad)
pop
mov
stc
xor
jp
sar
push
push
push
imul
scas
out
out
inc
shl
outs
pop
mov
int
icebp
push
mov
inc
inc
inc
pop
(bad)
pop
jb
inc
sub
dec
dec
mov
(bad)
bound
sahf
rol
jl
aam
inc
js
pop
sub
xchg
jle
lds
sbb
push
jl
push
inc
rcl
(bad)
test
pop
call
fstp
hlt
out
jbe
mov
mov
or
je
movs
xor
push
fdiv
push
scas
jns
push
push
bound
les
arpl
gs
mov
repnz
push
ins
retf
jmp
into
repz
cmp
repz
sbb
add
jnp
mov
jg
inc
or
rcl
lock
dec
cmp
aad
es
or
or
mov
ins
jbe
ror
mov
or
clc
mov
inc
data16
adc
stc
les
inc
fimul
inc
or
nop
mov
sbb
lds
mov
daa
ins
xchg
pop
fwait
mov
mov
scas
jo
mov
sub
dec
dec
mov
ins
fs
push
into
push
in
pop
mov
and
fild
push
sbb
push
iret
pop
(bad)
jle
add
push
cmp
pop
lahf
push
xor
sbb
add
outs
jge
xchg
jle
inc
mov
cdq
enter
ins
pop
push
jp
adc
mov
adc
xchg
sbb
out
mov
retf
or
and
popa
mov
nop
sub
or
outs
xor
out
xchg
aaa
popa
stos
add
dec
pop
jmp
add
cmp
dec
cmps
mov
pop
xchg
push
scas
call
cli
out
add
mov
in
stos
adc
cld
push
lea
call
adc
mov
loop
lock
ds
out
xlat
test
icebp
cmps
(bad)
and
stos
(bad)
(bad)
idiv
or
sub
dec
(bad)
lds
jnp
dec
inc
inc
daa
test
xor
dec
jg
movs
pop
mov
sub
dec
cmp
cmps
pop
inc
xchg
pushf
push
aaa
daa
cdq
out
xor
mov
add
xchg
add
pop
fiadd
aad
push
dec
pop
stos
push
data16
pop
mov
(bad)
std
and
hlt
popf
out
ror
sub
sti
xor
sbb
dec
daa
cs
cmps
es
push
arpl
mov
and
mov
mov
xchg
fcomp
sub
xor
fist
pop
mov
jle
mov
or
rcl
mov
es
sub
ret
fmul
daa
int
and
or
mov
and
fld
push
dec
xor
loope
pop
mov
pop
adc
test
or
xchg
jbe
ds
les
add
in
cmp
push
in
mov
ficomp
mov
add
mov
gs
repnz
jecxz
mov
pop
push
dec
mov
mov
int3
push
pop
cs
popa
aaa
inc
sbb
outs
mov
sub
loopne
mov
push
xor
push
push
or
mov
popa
inc
jmp
mov
mov
sub
xor
sub
fsub
sbb
scas
aam
dec
ins
sub
add
lods
in
ins
push
ja
mov
push
repnz
sbb
iret
cmp
mov
dec
scas
sub
or
(bad)
iret
mov
or
xor
jmp
adc
lods
in
cmp
push
call
ja
sub
push
push
movs
xchg
jge
mov
mov
cmps
lods
ja
(bad)
(bad)
jge
xchg
loop
sti
adc
leave
mov
mov
mov
cmp
mul
xchg
cmc
pop
lds
add
test
cmp
sbb
movs
fidiv
dec
shr
add
and
jbe
or
je
push
stos
test
pop
push
and
mov
dec
outs
(bad)
gs
xlat
cmp
and
shr
cwde
arpl
push
lock
jmp
mov
jmp
pop
sbb
imul
(bad)
adc
mov
inc
jno
add
mov
sti
adc
cmp
push
push
push
pop
sub
jmp
sti
std
popf
push
push
clc
retf
pop
js
ror
test
aad
xchg
add
mov
fidiv
test
sbb
sub
push
jge
ror
pusha
or
fs
ret
fisttp
test
jmp
shl
daa
or
sub
sbb
mov
in
call
out
dec
xor
inc
jb
and
imul
or
rep
gs
in
lock
jnp
inc
enter
lahf
je
xor
push
fstp
repz
jg
scas
xor
sbb
out
scas
aam
imul
call
or
lods
adc
gs
dec
or
add
mov
inc
in
stos
stos
loop
or
scas
scas
cmp
retf
mov
xchg
cmp
fwait
cmp
fld
cli
imul
rcl
xchg
add
es
inc
push
ins
lods
sub
add
sysexit
cdq
push
lds
and
sub
test
or
mov
mov
cwde
push
in
stos
add
xor
pop
mov
lods
les
lds
mov
outs
ret
mov
(bad)
dec
std
pop
ins
xchg
or
ret
inc
rol
ret
push
mov
jg
inc
mov
ds
push
sub
mov
test
or
and
cwde
mov
cmp
retf
sbb
mov
(bad)
jge
push
sti
jnp
sub
cs
xor
add
(bad)
sbb
lahf
xor
sbb
jecxz
jp
call
push
mov
inc
clc
ins
adc
iret
mov
xchg
retf
dec
enter
sub
cmp
mov
mov
push
ds
dec
add
in
sbb
fist
js
add
sub
js
mov
jl
and
jle
and
ins
or
xchg
sub
or
pop
imul
mov
pop
imul
adc
ins
push
adc
adc
in
jle
cmp
pop
push
add
push
neg
or
pop
sbb
divps
ins
ins
dec
or
pop
dec
out
mov
jmp
std
or
icebp
ins
dec
adc
in
pop
mov
ja
mov
out
idiv
loopne
pop
xchg
mov
lock
pop
jge
loopne
test
push
repnz
cmp
outs
fcomp
inc
ror
sub
in
mov
popf
mov
pop
pushf
dec
(bad)
fld
sbb
(bad)
adc
jbe
mov
gs
and
jg
data16
cdq
js
and
pop
cs
imul
dec
jl
mov
cmp
mov
scas
sbb
aam
int3
and
pop
or
test
stc
ror
jge
pop
pop
ficom
jbe
add
test
xchg
(bad)
call
jbe
mov
popf
js
adc
xchg
mov
test
lods
ds
(bad)
nop
test
shl
pop
inc
test
mov
fdiv
js
aad
cmp
push
push
and
or
add
inc
push
pop
or
xlat
ins
mov
imul
push
fisubr
and
xor
xchg
sbb
jns
add
lds
dec
dec
rol
cmc
int3
add
(bad)
mov
cmp
mov
xchg
into
cs
xor
adc
scas
mov
and
out
cmp
aad
sub
ja
add
mov
and
test
out
fnsave
jns
mov
movs
jns
fiadd
dec
rcl
inc
cld
test
sub
or
mov
outs
adc
shl
and
fs
mov
jge
mov
push
xchg
xor
xor
outs
inc
push
mov
bound
jae
sub
mov
dec
dec
pop
popf
into
xor
cmp
or
mov
bnd
mov
jno
pop
jmp
outs
xor
fisttp
stos
cli
fisttp
add
rcr
jne
cmp
mov
mov
jmp
mov
xchg
push
sbb
sub
dec
sbb
dec
(bad)
or
or
inc
lea
push
hlt
adc
mov
add
js
dec
popa
xor
xchg
lds
inc
outs
cmp
push
clc
out
cmp
lods
fcom
(bad)
sbb
mov
mov
mov
mov
mov
xor
xchg
and
and
xchg
push
call
push
and
sbb
sub
aam
pop
out
cmp
jmp
inc
mov
add
nop
xor
sub
addr16
mov
sub
cmps
adc
bound
inc
xor
scas
and
imul
pop
mov
cwde
cmp
jmp
movs
push
mov
mov
cli
mov
jl
mov
pmaddwd
cli
(bad)
sub
movs
jns
(bad)
loope
adc
fs
pushf
stc
jno
test
xlat
popa
and
and
dec
cmp
xor
daa
in
push
adc
jno
sbb
push
retf
xor
sub
cmc
ins
or
xor
add
loope
dec
addr16
retf
sub
inc
jns
pop
daa
sub
aad
push
jae
xor
and
mov
push
xchg
in
push
adc
xor
(bad)
data16
sbb
xor
mov
ja
out
jno
and
push
les
jns
ficomp
xor
idiv
push
retf
pop
in
sti
xor
mov
jp
sbb
mov
lods
and
enter
jmp
sbb
sar
adc
sbb
mov
stos
sub
daa
movs
push
aad
cmps
es
cdq
pop
and
mov
mov
sahf
stos
sbb
lods
movs
inc
dec
out
call
daa
and
rol
inc
shl
imul
int
fimul
sub
fst
fisub
mov
sub
xlat
push
movs
loope
sahf
sbb
repnz
in
adc
mov
outs
mov
shl
pop
jmp
nop/reserved
jo
cmp
add
mov
stos
movs
or
sub
test
daa
ins
or
cmp
jno
dec
fdivp
push
retf
nop
xchg
movs
pop
(bad)
repz
ror
ss
test
js
and
pop
inc
jns
mov
ins
cwde
jmp
dec
imul
icebp
adc
mov
scas
out
mov
pop
inc
stos
inc
jne
inc
and
aam
mov
push
ja
xchg
push
out
mov
and
ror
movs
pop
fild
je
or
lods
mov
dec
xor
sub
adc
test
into
sub
jmp
jae
inc
movs
push
icebp
pop
sbb
jae
retf
call
lods
cmps
fwait
adc
inc
adc
lods
fnstcw
and
inc
adc
mov
fbld
mov
fcmovnu
xchg
push
test
es
mov
push
stos
inc
arpl
pop
popa
inc
xor
push
or
fcom
mov
out
ss
dec
cmp
call
dec
xchg
aad
call
xchg
push
pop
push
xchg
int
outs
dec
push
mov
jbe
jmp
repnz
clc
popf
sub
jmp
outs
retf
mov
movs
icebp
inc
sbb
gs
data16
ins
aad
cdq
pop
xchg
pop
lock
sbb
inc
out
add
push
and
loop
and
adc
adc
dec
pop
or
adc
add
mov
mov
ret
cmp
jbe
and
fs
mov
lods
and
rol
loop
gs
mov
out
aad
sbb
(bad)
xchg
gs
sub
sbb
les
jb
push
and
(bad)
xchg
push
push
xchg
xchg
cmp
mov
sub
in
shl
add
sub
jnp
sti
arpl
dec
rol
ret
loop
fisttp
rol
je
and
jnp
test
sbb
mov
adc
enter
jno
mov
mov
fyl2xp1
mov
inc
cmp
loope
into
clc
dec
pop
dec
mov
scas
ds
outs
imul
shl
loope
out
(bad)
sar
in
adc
xchg
ds
or
in
(bad)
in
inc
adc
imul
mov
or
bound
test
(bad)
imul
cwde
pop
in
cdq
mov
arpl
iret
sbb
aam
mov
and
lea
out
mov
pop
adc
not
popf
inc
push
pop
push
pop
jne
cdq
or
nop
data16
xor
cli
in
cmp
jns
shr
dec
dec
dec
ficomp
in
in
ins
sbb
cmp
and
popf
adc
les
mov
jp
je
ds
aaa
inc
int
repnz
and
push
xor
lds
fiadd
add
mov
inc
xor
mov
inc
stos
test
scas
push
jbe
addr16
jmp
rcr
inc
in
test
add
inc
mov
in
mov
fwait
mov
fistp
or
arpl
scas
les
loop
mov
pop
jmp
ds
sbb
mov
in
loop
dec
jmp
push
jo
xor
pop
out
test
push
jns
dec
repnz
scas
pop
addr16
mov
cmp
mov
lock
add
iret
in
and
dec
and
loope
xor
lods
mov
clc
dec
cmp
aaa
adc
repnz
ins
outs
shl
shr
and
in
sbb
pop
sbb
sbb
or
aaa
mov
mov
mov
jecxz
mov
mov
ins
popa
jbe
mov
jo
mov
cmp
fs
cmp
lock
mov
mov
shl
mov
sbb
fisttp
enter
jge
pop
or
mov
or
or
pop
push
add
and
hlt
and
adc
pop
jg
adc
sub
retf
(bad)
cmp
fnstsw
test
retf
inc
movs
icebp
jns
sub
dec
inc
xor
jl
pop
mov
lods
cwde
idiv
sub
lock
in
mov
mov
dec
test
pushf
sub
test
out
je
sbb
ss
retf
jmp
sbb
loop
loopne
cld
xchg
ss
fyl2x
push
mov
adc
adc
out
add
xchg
test
inc
and
mov
loope
pop
jb
ret
push
add
xor
out
cld
inc
pop
sub
push
jb
pop
cmp
or
stos
stos
sar
test
xor
test
rol
jl
retf
pop
je
inc
out
inc
das
sbb
data16
jne
iret
test
push
xchg
push
inc
out
cmp
cmps
add
mov
dec
pop
cs
aam
add
outs
push
sbb
(bad)
cmp
cmp
xor
dec
fnsave
test
dec
fmul
push
xor
jl
inc
popa
dec
pusha
pop
add
mov
pop
sbb
loope
mov
push
jl
push
mov
sbb
inc
jecxz
jne
xor
lods
mov
sub
sti
mov
or
adc
xchg
adc
or
sbb
popf
mov
push
cwde
inc
jle
dec
cmp
xchg
push
sbb
shl
fsubr
sbb
cmp
add
adc
jge
test
call
lar
sbb
adc
and
push
push
inc
aad
cmp
push
xor
cmp
cmp
in
scas
les
jle
test
(bad)
mov
das
add
cmc
jno
mov
mov
int
mov
xchg
call
or
jle
aas
test
stos
ja
sbb
inc
inc
fs
add
push
xor
stos
and
addr16
cmp
jp
les
pop
call
ins
arpl
outs
iret
mov
cwde
mov
cwde
jns
dec
aad
outs
jns
pop
mov
popa
sbb
pop
add
mov
outs
outs
jle
bound
adc
aam
jnp
jecxz
adc
jp
pop
lock
pusha
cmps
sub
jl
test
cmp
adc
push
ret
loop
test
mov
sub
dec
neg
inc
mov
cs
jp
ss
js
xchg
(bad)
mov
ret
imul
lods
sub
cmps
push
(bad)
movs
sbb
push
sub
les
xor
push
xlat
sbb
int
pop
jmp
cmps
dec
push
jbe
lock
sub
or
stos
cmp
cmp
jle
stos
push
les
push
add
aas
xchg
js
cmp
and
jne
cmp
cdq
bound
mov
or
test
xchg
int
sbb
inc
xor
pop
jle
popf
lods
jnp
stos
push
inc
in
movntq
out
or
dec
popf
adc
aas
icebp
mov
in
out
(bad)
retf
es
and
loope
outs
jg
pop
out
inc
arpl
xor
call
int
adc
add
xor
repz
jecxz
push
or
(bad)
jmp
pop
nop
(bad)
cmp
inc
dec
aaa
sbb
aam
into
jmp
repz
in
pop
push
and
sbb
add
adc
xor
push
aas
arpl
idiv
sub
(bad)
ret
push
sar
ja
adc
inc
dec
js
push
xchg
inc
clc
and
xchg
adc
cmps
mov
ja
dec
add
push
add
daa
cmp
jae
inc
cld
push
push
dec
xchg
mov
(bad)
scas
stos
shl
mov
cld
shr
dec
mov
sbb
mov
out
gs
call
outs
cdq
mov
loope
sub
lock
dec
and
outs
frstor
rcl
push
pop
sub
mov
rcl
and
iret
call
push
pop
cmp
jb
call
fld
sbb
dec
push
ret
xchg
push
cmc
pop
mov
stc
(bad)
(bad)
jae
lods
lea
lods
inc
scas
jnp
movs
xchg
mov
mov
lods
ins
aaa
outs
mov
leave
test
out
or
sbb
jle
adc
inc
mov
test
jmp
scas
mov
loop
xchg
pop
add
bound
adc
mov
in
in
push
or
jle
popf
(bad)
sti
dec
(bad)
fdivr
sub
sub
ins
shl
add
xor
cs
(bad)
jo
xor
add
or
jne
ins
and
dec
hlt
jnp
loop
pushf
pop
adc
xor
mov
pop
imul
dec
pop
mov
mul
cdq
faddp
push
out
ret
or
cld
ss
ds
and
jnp
pop
push
fdiv
add
or
jno
sub
mov
mov
push
mov
aas
push
in
cmp
mov
inc
xchg
fistp
nop
pop
bound
and
call
ins
jne
adc
nop
stos
ins
cwde
jmp
add
push
xchg
mov
adc
neg
imul
sbb
add
(bad)
push
xor
stos
mov
arpl
dec
inc
and
lods
lods
aad
aaa
out
in
aas
sbb
xchg
sbb
outs
cmp
cmp
data16
bound
js
bound
and
and
and
inc
jb
stos
xchg
push
retf
mov
movs
pop
ins
inc
daa
fild
aaa
lods
cdq
jmp
mov
inc
pop
xchg
daa
inc
dec
out
std
xchg
loopne
sbb
dec
pop
inc
fisub
scas
pop
data16
ficomp
cmp
jmp
(bad)
pop
jno
movs
mov
adc
cmp
cmc
push
enter
mov
cli
push
cmp
mov
push
xchg
pop
mov
sbb
adc
mov
das
ss
hlt
mov
xchg
add
dec
ret
mov
inc
cmps
jmp
add
mov
add
ins
pop
adc
fild
sbb
mov
sbb
pushf
loop
push
in
mov
addr16
je
mov
(bad)
dec
pop
sbb
fs
pop
cwde
push
mov
dec
dec
pop
test
movs
hlt
mov
and
aaa
pusha
jbe
pop
icebp
inc
push
jmp
out
outs
mov
cmps
scas
push
hlt
aas
mov
push
div
out
xor
mov
pop
push
out
jae
aam
pushf
out
dec
cmp
(bad)
test
jle
(bad)
ret
repz
jne
pop
xchg
fs
mov
dec
into
inc
lods
mov
enter
test
js
test
push
aad
cs
mov
in
(bad)
mov
fist
dec
cmps
push
or
jae
mov
test
std
xor
dec
(bad)
popa
pop
mul
(bad)
in
cmps
sar
or
add
ss
je
cmp
cmp
jp
and
pop
(bad)
inc
sub
push
mov
arpl
pop
xchg
data16
jle
mov
clc
pop
jmp
xchg
mov
xchg
mov
outs
dec
fild
adc
stos
xchg
rcr
sbb
sub
in
push
repnz
es
cmp
ror
dec
jl
sub
mov
das
xor
add
into
inc
sbb
inc
hlt
jne
sbb
dec
inc
add
shr
pop
mov
rol
cmp
or
jb
fdiv
dec
out
and
int
pop
jle
add
add
xor
push
clc
in
into
(bad)
sbb
dec
jp
cs
imul
push
cmp
pop
addr16
sar
mov
jmp
(bad)
cmp
or
sbb
cli
xor
(bad)
jp
fs
inc
dec
repz
icebp
fst
mov
inc
jnp
pop
es
inc
mov
loope
mov
mov
loopne
sub
pop
and
sub
mov
add
cmp
cmp
sbb
ret
mov
stos
dec
jae
push
pop
test
push
aas
add
fld
aaa
sub
(bad)
sbb
movs
aam
sub
push
aam
xchg
repz
ficom
test
cmc
mov
sub
push
inc
(bad)
sub
and
jbe
popa
cld
xor
mov
ret
das
mov
cmovae
jmp
ror
dec
gs
hlt
pop
sub
lea
fs
enter
ret
test
mov
adc
sub
inc
add
inc
pop
popf
mov
cmps
mov
and
pop
jb
fnstcw
lods
pop
push
mov
jnp
sbb
xor
(bad)
mov
mov
das
cli
packssdw
repz
cmp
icebp
xor
jbe
pop
pop
jnp
or
lods
or
sub
out
cmp
ins
adc
mov
dec
nop
inc
mov
fldenv
add
inc
ret
fsub
lea
xchg
xor
sbb
out
inc
mov
jl
push
pop
gs
call
inc
add
jns
inc
cs
mov
pop
outs
inc
xor
jns
mov
outs
dec
dec
es
xchg
dec
stc
jno
ja
xor
outs
pop
sti
loope
aad
jbe
loop
lods
retf
sbb
inc
add
aaa
sub
mov
rcr
xor
daa
movs
sub
(bad)
into
mov
popa
xchg
and
fwait
or
cld
and
cmp
(bad)
je
stos
std
sub
fwait
pop
sub
cmova
xchg
sbb
movs
adc
mov
xor
add
inc
fmul
(bad)
jle
inc
aad
jecxz
mov
or
dec
xchg
mov
jae
adc
add
or
loop
inc
cmps
mov
movs
xlat
inc
xchg
inc
cld
js
mov
adc
cmp
test
xor
sbb
add
mov
rol
push
scas
xor
mov
jle
int
and
ror
push
iret
pop
shr
dec
in
sbb
ret
fcom
jge
mov
scas
mov
movs
shr
sub
cmp
jl
bound
and
dec
jnp
inc
xor
cli
faddp
add
ror
sub
jns
xor
push
jbe
cmps
adc
pop
xor
sar
inc
enter
jl
ret
cli
lea
cs
add
and
aaa
(bad)
fdivr
cmc
dec
xchg
loop
xchg
pop
inc
test
sub
jge
mov
sbb
mov
inc
xor
call
in
mov
fcmovbe
xor
in
icebp
ins
jmp
cwde
jo
mov
dec
lahf
fsubr
add
push
mov
cld
ficomp
adc
jmp
inc
inc
xor
mov
xchg
dec
call
and
ds
jno
sbb
or
xor
ins
or
or
push
mov
mov
xchg
cdq
jae
ds
dec
push
sub
adc
push
dec
clc
inc
xlat
mov
pop
clc
or
sub
loop
lea
gs
adc
fbld
data16
sbb
dec
pop
jle
adc
dec
adc
ins
icebp
cmp
dec
stos
les
sbb
inc
repnz
jecxz
pop
add
mov
push
xchg
xor
or
pop
pop
retf
mov
jo
and
scas
push
movs
mov
jle
xor
ja
jge
inc
cmc
into
push
arpl
lods
add
pop
push
scas
mov
push
clc
outs
clc
ins
cmp
in
aad
xchg
iret
shl
push
push
test
and
mov
adc
aam
(bad)
loopne
cmp
inc
pop
inc
(bad)
cmp
(bad)
loop
stos
gs
sub
in
push
sub
xchg
sbb
mov
cli
sbb
ins
ret
pop
cli
lods
xor
imul
push
ins
sbb
in
rcl
xor
dec
dec
hlt
xor
addr16
ret
cmp
xchg
cli
mov
dec
pop
bound
or
jg
mov
push
xor
dec
into
dec
dec
xor
cld
cmp
stc
mov
cs
xchg
ja
mov
push
je
mov
(bad)
mov
sbb
adc
push
ins
and
inc
sbb
jle
dec
inc
jp
xlat
icebp
mov
pop
sahf
lods
sbb
adc
loop
ss
das
stos
mov
movs
cmps
push
xor
jp
pop
ds
scas
out
(bad)
nop
pop
pop
outs
push
mov
and
cdq
mov
js
jmp
pusha
push
mov
xchg
dec
push
inc
jne
test
inc
jb
cmp
stos
aaa
xchg
push
inc
xor
pop
or
mov
xor
int3
adc
ret
cmp
mov
or
iret
movs
idiv
sbb
test
jnp
jo
int3
inc
ret
pop
or
inc
icebp
cs
xchg
test
lods
jl
sub
mov
enter
and
xor
aad
xchg
sbb
(bad)
mov
cmp
ds
addr16
inc
xor
sub
mov
lock
or
scas
pop
xor
sbb
inc
jp
adc
div
inc
push
out
xchg
test
cmp
push
jge
push
mov
aas
pop
imul
aad
push
adc
dec
fdiv
out
pop
into
arpl
cmps
lock
fcmovb
pop
xlat
in
pop
arpl
jmp
movs
inc
push
add
lea
adc
hlt
icebp
mov
dec
adc
jns
jae
sbb
and
xor
aaa
(bad)
lods
jle
inc
xor
mov
inc
and
aas
jp
out
push
and
in
mov
cmp
mov
jmp
inc
xor
pop
aam
scas
cmps
call
xchg
or
cld
xchg
loop
sub
pop
test
adc
pop
into
mov
sar
je
cdq
push
sub
out
dec
sub
test
fdivr
fistp
data16
rcl
dec
mov
(bad)
clc
inc
pusha
std
pop
xor
test
arpl
jno
cmp
sbb
xchg
inc
adc
jnp
mov
cs
(bad)
gs
inc
push
push
aaa
adc
and
or
push
sar
xchg
mov
inc
lods
xlat
int3
inc
lods
sub
out
add
jbe
xor
loope
dec
mov
xor
out
nop
aad
sbb
sub
into
(bad)
out
aaa
mov
pop
jb
fwait
adc
adc
test
bound
fs
mov
std
push
cmps
add
push
push
cld
jns
movs
pop
ror
cli
mov
and
jl
mov
inc
dec
xchg
arpl
cmp
and
push
pop
add
mov
test
in
cdq
fucomi
(bad)
dec
imul
jp
push
(bad)
sahf
js
out
(bad)
dec
cmp
(bad)
int
jne
cld
and
test
jge
popa
push
in
dec
fild
out
xor
jnp
mov
inc
jp
mov
rol
push
fdiv
stos
pop
pusha
iret
sbb
mov
js
adc
mov
inc
pusha
arpl
(bad)
cmp
icebp
mov
sub
push
lock
sar
push
cmp
sub
gs
rcl
adc
mov
jno
gs
inc
pop
jecxz
xchg
add
loope
add
ja
cmc
inc
scas
mov
or
sbb
jmp
js
inc
fistp
cmp
inc
or
in
push
jns
jmp
push
sub
call
dec
push
push
sbb
shl
call
xor
sub
popf
mov
xor
loope
jle
pop
fbstp
jmp
rcl
inc
inc
xor
sbb
scas
mov
sub
outs
xor
push
jge
pop
test
xor
inc
push
ret
arpl
push
add
add
mov
adc
cmps
dec
cmp
enter
jnp
jnp
sub
dec
jmp
enter
fisttp
mov
js
in
push
sbb
std
neg
addr16
inc
mov
pop
cmps
adc
mov
imul
or
adc
loopne
mov
mov
mov
aas
cs
dec
cmp
and
leave
dec
js
mov
ret
ss
shl
adc
imul
lods
nop
loopne
test
mov
sti
xor
(bad)
loopne
push
test
add
test
loop
inc
int
pop
out
jp
stos
jp
push
sub
dec
mov
das
leave
fimul
cmp
(bad)
bound
fwait
xor
jecxz
sbb
jne
jae
cmp
and
pop
push
repnz
ins
cmp
pop
inc
fadd
sbb
mov
mov
pop
cmp
inc
mov
int3
add
lods
sub
(bad)
dec
adc
inc
jae
ja
sub
mov
and
xor
xor
nop
ss
jae
test
or
inc
out
sti
jecxz
pusha
out
cmp
in
inc
outs
jnp
and
and
sub
popf
add
jp
fmul
(bad)
dec
aas
adc
out
retf
sub
xor
sub
out
pop
xlat
or
into
adc
cmp
mov
mov
aam
imul
mov
pop
repnz
(bad)
dec
jecxz
addr16
(bad)
sar
retf
bound
adc
popa
cmp
adc
or
mov
mov
rcl
cdq
xor
add
dec
mov
imul
cmp
fcmovnbe
pop
jb
add
test
jmp
mul
sbb
add
mov
cmp
inc
inc
add
cmp
es
mov
add
mov
and
cli
and
dec
push
mov
sbb
in
mov
mov
(bad)
scas
mov
shr
and
push
dec
jmp
test
in
jmp
inc
jo
sbb
dec
sbb
lods
popf
adc
ins
or
(bad)
stc
pop
dec
mov
fdivr
jns
rol
cmp
adc
(bad)
xor
xchg
cld
das
icebp
ss
mov
jbe
enter
ret
aad
mov
dec
push
jmp
adc
inc
sbb
cdq
push
je
push
sub
pop
push
movs
inc
pop
mov
push
sub
aaa
inc
dec
in
xor
rol
lods
sub
nop
and
jnp
or
sahf
push
jno
sar
jae
sbb
or
dec
(bad)
jns
jo
lods
mov
xor
jno
movs
rol
push
out
std
or
mov
test
cmps
dec
xor
jl
mul
cmp
dec
js
jbe
or
inc
inc
ja
sar
xchg
ret
into
daa
out
jbe
arpl
sbb
imul
and
ins
dec
push
test
cmps
aam
pop
mov
lock
add
add
dec
xchg
mov
retf
jno
mov
add
sbb
out
sbb
sub
adc
sub
xchg
mov
jp
in
pop
mov
inc
dec
jecxz
aad
mov
scas
pop
cmps
mov
stc
sar
sar
nop
aaa
cmps
js
test
std
jo
cli
dec
les
movs
push
push
js
xor
fdiv
sbb
js
or
movs
pop
jbe
clc
cmp
es
loopne
ins
js
sub
pop
dec
loopne
xor
pop
rol
cmc
add
add
movs
imul
dec
jb
icebp
sub
jae
pusha
data16
cdq
js
mov
ret
push
xchg
fsub
outs
jp
scas
pop
lods
push
sahf
push
jmp
push
jle
addr16
stc
cmc
out
stos
and
jl
das
es
push
jo
mov
mov
pop
addr16
adc
(bad)
mov
jl
out
in
adc
cmp
cmp
ficomp
imul
mov
in
sbb
jae
pop
rol
and
(bad)
movs
xor
pushf
fstp
in
(bad)
test
jg
pop
es
hlt
(bad)
clc
mov
inc
mov
lods
pop
out
ins
retf
cmp
adc
xor
fcom
push
lods
aas
pop
xchg
shl
and
clc
mov
sbb
cmp
inc
dec
ja
xchg
out
cli
cdq
shr
jnp
lock
cmp
inc
and
fwait
xor
sbb
scas
jmp
sub
loope
xor
(bad)
jnp
sub
pop
mov
pop
xor
cmp
push
inc
shl
push
add
jl
mov
call
jbe
and
cmc
pop
mov
pop
lds
(bad)
inc
leave
and
dec
fdiv
addr16
mov
mov
pop
ss
cs
cmp
sti
jecxz
call
dec
in
pop
sbb
daa
fist
test
ins
xor
sub
je
adc
aaa
stos
pop
int
movs
mov
cmc
jbe
jp
ror
sub
(bad)
(bad)
outs
sub
and
cmps
sbb
and
or
dec
inc
jnp
outs
mov
pop
jg
in
retf
xor
push
or
sub
cwde
xchg
mov
outs
sahf
lds
xor
retf
ds
je
xor
outs
push
imul
dec
ret
lods
sti
push
jp
jle
pusha
mov
cmp
mov
jle
jno
xor
je
pop
test
push
stc
sub
xchg
(bad)
jb
adc
test
mov
clc
imul
jmp
pop
sbb
shl
stc
mov
fmul
in
push
in
add
imul
mov
dec
in
stos
inc
or
sbb
adc
adc
push
xor
jge
test
out
xlat
test
jns
xchg
movs
mov
dec
cmp
or
pop
add
loopne
push
cmp
call
and
sub
add
loopne
scas
push
push
lods
(bad)
sub
neg
mov
(bad)
inc
movs
fistp
cld
rcl
dec
sar
mov
mov
inc
mov
inc
xor
cmp
cld
mov
into
xor
aam
retf
jl
aad
or
sbb
inc
leave
push
or
mov
dec
mov
test
mov
les
test
mov
shl
sbb
cmp
xchg
cmp
je
xchg
mov
add
scas
pop
xchg
xor
sub
movs
cmps
mov
sub
mov
push
jb
mov
push
dec
dec
push
or
jmp
addr16
stos
and
sub
cmc
fwait
xor
inc
mov
je
ins
jns
sub
adc
imul
dec
mov
or
jp
pop
pop
mov
(bad)
sub
pop
lods
pushw
imul
and
sti
out
sbb
push
sbb
ins
mov
lods
pop
scas
push
mov
cdq
jno
jae
and
rcr
mov
leave
sti
inc
fwait
cdq
pop
xchg
rcr
jmp
or
jae
sub
jnp
repz
cmp
(bad)
push
adc
mov
inc
test
retf
sbb
pop
mov
shl
dec
mov
jmp
fld
sub
mov
adc
fnstenv
mov
and
icebp
add
add
jns
jmp
test
sub
or
ficom
retf
jb
mov
cmp
std
mov
add
add
jmp
push
test
lock
pop
push
outs
jg
cs
sub
lahf
push
jl
sti
jnp
sub
inc
idiv
shl
ja
(bad)
push
and
movs
mov
es
loop
adc
jnp
pop
fstp
mov
dec
pop
dec
ret
pop
push
cwde
ja
cli
push
je
iret
mov
call
and
dec
jl
mov
push
sahf
lods
imul
ins
fistp
fst
push
xchg
push
stos
cs
test
inc
pop
fdiv
gs
ficomp
jle
dec
add
cld
jge
xchg
out
push
push
in
mov
outs
hlt
push
xchg
push
dec
ror
les
mov
mov
je
xor
jb
sbb
mov
aas
(bad)
or
push
mov
imul
jae
sub
inc
repz
add
pop
sahf
dec
shl
mov
imul
dec
arpl
fldcw
inc
inc
mov
stc
cmp
rcl
push
cli
jno
or
sbb
xor
ins
into
mov
imul
ds
out
dec
add
loopne
loop
push
or
mov
lods
daa
dec
bound
push
jmp
sbb
ss
sbb
loopne
mov
jne
(bad)
mov
stc
jp
inc
movs
arpl
retf
cdq
lds
xchg
call
jmp
ffree
sti
ds
mov
adc
adc
test
mov
push
in
cmp
nop
mov
in
pop
mov
xchg
jmp
mov
adc
mov
aam
scas
aaa
ss
inc
xchg
add
xchg
or
repz
adc
add
mov
jno
js
or
repnz
mov
fcomip
fcomp
aad
jg
push
pusha
ss
sar
test
call
lds
dec
mov
jbe
popf
cmps
idiv
icebp
sar
movs
int
cmp
icebp
jb
sar
mov
ins
jl
not
add
pop
ins
sub
push
das
iret
cs
addr16
jno
out
cmp
ror
(bad)
cmc
inc
popf
cmp
int
xchg
push
add
mov
and
inc
in
(bad)
or
arpl
mov
bound
jb
xchg
sbb
cmc
test
inc
pop
mov
imul
push
aas
adc
adc
lods
clc
xor
xchg
das
mul
data16
cmp
mov
cmp
out
mov
pop
imul
jne
jle
dec
and
popa
dec
not
scas
inc
int3
dec
xchg
xor
dec
repnz
fstp
inc
cmp
data16
dec
lea
push
pop
adc
mov
dec
movd
ds
sar
imul
sahf
stos
test
xor
mov
out
and
or
test
nop
dec
dec
mov
aas
sbb
nop
retf
cmp
repz
adc
(bad)
movs
test
js
js
cli
clc
sar
inc
and
sub
dec
lock
mov
ss
call
ret
adc
push
test
jo
addr16
fadd
push
cli
data16
mov
mov
xlat
ds
maskmovq
neg
vmovaps
push
mov
jmp
es
shl
push
scas
push
addr16
mov
cmp
lahf
adc
mov
cwde
xor
jns
cdq
cld
fistp
jecxz
syscall
icebp
pop
dec
cmp
cdq
clc
jno
mov
xchg
cmc
mov
push
rcr
cli
stos
mov
xchg
xor
xchg
adc
or
xchg
mov
or
clc
in
push
or
in
(bad)
ds
sbb
mov
sti
add
mov
loopne
stc
das
jmp
ror
movs
into
pop
cmps
test
push
loop
sub
in
imul
xchg
sahf
popf
and
dec
xchg
(bad)
in
jb
popf
retf
push
mov
sar
bound
inc
jp
jno
repz
mov
push
repz
pop
int3
adc
mov
hlt
in
mov
std
dec
in
pop
ss
pushf
pop
add
div
call
out
dec
loop
sbb
mov
leave
add
addr16
xchg
inc
sub
stos
imul
inc
in
jns
add
in
test
addr16
sahf
mov
stos
sbb
jb
outs
push
loop
lods
pop
add
mov
adc
or
and
pop
xor
jp
sbb
mov
push
jo
fsub
mov
sbb
fisubr
out
ds
add
jae
fld
mov
jns
xchg
stos
pop
inc
sbb
cmp
xor
jl
fistp
mov
fnstcw
mov
ins
adc
mov
stos
icebp
jbe
jl
fistp
push
mov
repz
sub
adc
and
cmps
xor
xor
sti
test
xor
rcl
mov
ins
push
in
inc
aam
xchg
pushf
xor
cmc
cmp
or
pop
movs
xlat
repnz
jg
ds
jns
sar
jmp
xor
or
retf
xchg
push
in
(bad)
pop
add
add
xchg
pop
rcr
fptan
mov
jno
dec
adc
ins
dec
mov
mov
dec
jnp
or
xchg
ja
push
scas
pop
jle
stc
dec
cmp
xchg
stc
ins
mov
fwait
mov
sbb
mov
mov
add
fidivr
scas
ret
and
popa
xor
jmp
mov
test
or
pop
jne
cmps
int3
inc
es
dec
sub
pop
repnz
jns
jnp
popa
ins
div
fdivr
dec
and
push
scas
push
repz
cmp
(bad)
mov
repnz
(bad)
lds
inc
repz
dec
nop
sar
ins
mov
mov
nop
leave
and
cld
cli
jae
and
arpl
in
pop
push
dec
add
adc
and
(bad)
xor
mov
and
sti
fst
call
push
mov
pop
stc
retf
call
retf
enter
fidivr
or
mov
push
xor
sbb
scas
ret
ins
repnz
mov
shl
into
es
repnz
call
js
popf
rdmsr
pop
add
ret
aad
add
pop
xor
test
jb
pushf
shl
cmp
jp
fild
leave
xchg
sbb
mul
popa
and
jl
test
loop
mov
sub
loop
cdq
bound
push
jp
enter
enter
stos
jne
cli
(bad)
es
popf
loopne
push
rcr
push
cmp
popf
pop
lods
mov
cmps
outs
fstp
stos
data16
xchg
call
out
inc
repz
dec
gs
stos
fs
jp
out
ret
mov
dec
cwde
mov
leave
test
adc
std
js
gs
movs
fs
or
cdq
jp
aad
mov
sbb
es
and
cmp
and
repnz
pop
clc
call
clc
push
repnz
in
(bad)
sub
ret
pop
nop
pop
enter
jge
aad
dec
adc
aad
movs
adc
inc
pop
in
or
ffree
push
cmps
adc
mov
(bad)
call
and
aas
sub
or
pop
jmp
dec
sbb
inc
dec
xor
mov
xor
mov
test
ins
pop
pop
pusha
sar
jb
imul
pop
pop
pop
movsx
aad
mov
shr
dec
pop
fisttp
pop
push
not
aad
imul
loopne
test
cmp
lahf
dec
fidivr
adc
and
push
cld
test
mov
and
jnp
xchg
or
sub
cmps
mov
fistp
adc
cmp
xchg
push
mov
mov
cmp
push
sub
inc
stc
scas
sbb
stc
js
and
call
mov
outs
test
out
pcmpgtw
repz
shl
daa
mov
jae
fcomp
sbb
in
mov
push
out
add
nop
outs
mov
arpl
fisubr
jge
addr16
jmp
(bad)
fstp
push
mov
aad
nop
cmp
aam
leave
sub
xchg
loopne
jl
sahf
pop
cmp
jl
or
xlat
hlt
enter
lea
into
jbe
xlat
test
aaa
mov
frstor
pop
mov
hlt
sub
inc
lods
popa
xor
inc
xor
mov
sub
pusha
aaa
or
sar
rol
cmp
inc
and
movs
pop
fs
sub
xor
and
and
dec
gs
add
stos
test
pop
imul
call
sub
push
or
loopne
ins
(bad)
stos
mov
jnp
das
mov
adc
(bad)
xor
inc
fldenv
int
dec
call
or
(bad)
or
pop
(bad)
adc
fld
cwde
mov
push
xchg
les
mov
(bad)
hlt
xchg
jnp
push
pop
adc
push
jl
dec
lods
scas
pop
pop
sbb
adc
imul
mov
cmp
les
cmp
and
aam
(bad)
rcr
pop
repnz
mov
mov
(bad)
or
pop
shl
es
xor
hlt
movs
fcmove
outs
add
sub
shl
xor
mov
sbb
push
scas
mov
call
stc
sbb
jg
mov
arpl
mov
dec
lahf
cs
rcl
test
ds
fs
adc
dec
fadd
dec
repnz
fidivr
xchg
xor
push
push
and
pop
enter
mov
out
fucom
mov
sub
sahf
jbe
add
in
push
or
cmp
mov
cdq
sub
adc
lods
fistp
dec
jb
push
dec
in
cmps
fwait
jg
test
int3
fcom
add
rcl
rcl
adc
lds
sbb
jl
dec
inc
mov
or
inc
imul
dec
shr
mov
mov
jo
test
cld
mov
std
jno
sub
cmps
pop
retf
xor
inc
(bad)
and
jbe
stos
jecxz
add
jmp
push
pop
(bad)
jo
sbb
retf
adc
retf
leave
mov
push
shl
into
das
movs
loop
bound
push
ret
in
mov
daa
adc
ins
cmp
push
lods
push
sbb
imul
aaa
addr16
sub
mov
shr
cli
xlat
loope
es
sbb
xor
push
xlat
int3
icebp
sub
cmps
aad
jmp
push
dec
cdq
daa
arpl
adc
std
aam
neg
push
dec
pop
jnp
mov
je
repz
arpl
xchg
jns
outs
xchg
jo
jecxz
adc
fdiv
mov
call
stos
aad
jp
dec
jbe
cmp
xchg
leave
inc
test
inc
lahf
push
fisub
xor
mov
jmp
test
cmp
lahf
dec
cmc
adc
add
inc
fnstenv
cli
dec
dec
cli
int3
call
bound
(bad)
sbb
lahf
adc
aam
test
inc
das
and
jge
ret
jmp
pop
and
push
xchg
pop
and
call
pop
inc
adc
test
cmp
cmp
jo
inc
pop
push
sti
push
push
bound
mov
mov
cmp
ins
inc
mov
cwde
imul
xor
imul
test
popa
sub
cmps
stos
stos
dec
in
xor
cs
movs
xchg
pop
xchg
mov
data16
in
idiv
mov
or
xor
push
cwde
repnz
fdiv
in
mov
xor
sub
repnz
jp
je
imul
outs
cmp
sbb
xor
jge
mov
mov
adc
js
pop
push
fdivp
jg
xor
fild
add
mov
lods
cwde
daa
jmp
sub
out
jo
pop
sbb
xlat
pushf
mov
and
mov
es
fsub
mov
push
pop
inc
xlat
out
inc
neg
repnz
pop
dec
jle
and
xor
mov
sbb
adc
ror
into
jno
mov
das
cmp
outs
sub
mov
mov
daa
repz
popa
neg
xor
sbb
out
cmp
and
add
icebp
pop
imul
in
mov
int3
and
mov
rcr
inc
scas
cs
xor
push
mov
jb
enter
sbb
cmp
pop
and
fidiv
add
inc
jns
pop
sar
ror
sub
inc
push
hlt
xchg
mov
jae
dec
pushf
xchg
aaa
enter
push
push
in
inc
dec
and
(bad)
sbb
test
loop
into
sbb
test
cld
inc
sbb
cmp
cmp
ins
rol
push
cmc
jbe
icebp
add
int3
mov
dec
dec
push
dec
mov
cmp
adc
in
mov
fwait
cli
in
enter
ret
outs
js
xor
xchg
cmp
adc
push
sbb
pop
dec
lods
stc
scas
jmp
mov
imul
(bad)
push
adc
xor
sub
push
lea
dec
cld
xchg
xor
jmp
aaa
lahf
jle
fs
lds
popf
out
xor
mov
aad
sti
imul
dec
out
add
jle
dec
mov
ins
inc
and
jg
dec
and
inc
fsub
and
inc
mov
das
push
and
mov
cs
cmp
xor
pop
pop
stc
xor
adc
arpl
pop
movs
mov
pushf
add
pop
mov
push
sub
popa
cwde
push
or
lahf
out
xor
mov
jnp
call
movs
or
mov
dec
push
jbe
cld
pop
push
push
or
pop
mov
clc
fldenv
repnz
cmp
jo
pop
pop
sub
xor
cmp
sub
jg
(bad)
cmp
and
inc
fnstenv
sub
sub
mov
adc
mov
inc
sbb
jp
push
or
movs
cli
(bad)
mov
cwde
call
cmp
fsubr
cmp
outs
jns
pusha
jp
mov
fcmovb
bound
mov
fsubp
jnp
mov
mov
ins
loop
pop
aas
sbb
movs
iret
pop
cmps
cli
fstp
jb
std
jl
(bad)
adc
sbb
push
fwait
inc
cmp
cdq
dec
and
js
js
jle
xchg
dec
adc
(bad)
mov
or
push
jns
jbe
jne
push
retf
lds
test
pop
cmp
nop
jmp
fbstp
popa
push
mov
push
arpl
mov
inc
lods
sub
sar
jne
shr
push
ficomp
inc
or
mov
stc
outs
out
shl
imul
xor
pop
ret
mov
fdivr
(bad)
sub
rcr
pop
pushf
lods
in
pop
sub
mov
arpl
pop
iret
pop
jmp
xor
adc
pop
fwait
push
cmp
sahf
pop
mov
shr
jmp
xchg
jmp
jo
cmp
icebp
je
cli
fisttp
or
not
addr16
sub
xor
mov
loop
arpl
fild
cmp
cmp
arpl
sub
xchg
loop
js
mov
fst
fnsave
mov
push
push
cmp
test
push
sbb
daa
mov
out
arpl
shl
loop
push
inc
pop
popa
or
xchg
or
in
enter
retf
and
fcom
and
pop
lods
pop
xchg
add
fisttp
ins
sub
mov
outs
loop
mov
scas
push
mov
pushf
push
rol
jns
cdq
push
or
jbe
push
enter
or
mov
xor
(bad)
(bad)
jne
or
bound
mov
pop
popa
mov
out
adc
pop
mov
outs
arpl
mov
imul
push
sti
cli
jo
cmp
cs
test
jecxz
pop
dec
sbb
dec
js
push
pop
jae
cmp
scas
iret
dec
pop
xor
sti
adc
cmps
sub
sar
cmps
add
pop
xchg
clc
mov
or
xchg
jbe
ret
mov
arpl
out
mov
sbb
adc
pop
push
pop
and
cmp
xchg
mov
mov
or
mov
adc
and
scas
mov
xor
push
push
xor
aas
lea
or
or
mov
stos
test
cli
jne
fst
cdq
xlat
adc
cli
sti
push
popf
xchg
leave
jmp
fs
retf
xor
gs
mov
repz
mul
outs
ins
mov
out
pop
sub
mov
jg
dec
xor
std
lods
adc
jae
movs
aad
addr16
xor
retf
push
and
stos
leave
leave
cmp
jmp
icebp
pop
es
loope
repz
add
adc
js
sbb
inc
lock
or
or
pop
cmps
pop
in
dec
inc
jg
inc
icebp
mov
xor
dec
mov
call
ficomp
mov
and
fst
lods
iret
clc
dec
repz
cmps
dec
jg
pushf
cmp
push
lods
cmp
loope
and
(bad)
dec
adc
mov
lods
lahf
or
lahf
mov
fsubr
shl
adc
adc
xor
out
addr16
dec
push
inc
jmp
push
(bad)
push
jecxz
data16
nop
repz
push
push
(bad)
mov
addr16
mov
repz
fmul
adc
push
and
xlat
in
addr16
cld
add
jbe
xor
fdivr
in
sbb
pop
jne
mov
fimul
in
aaa
call
jne
push
out
adc
icebp
xor
mov
and
add
add
xor
aaa
call
add
scas
ss
je
add
call
std
into
or
arpl
sbb
jle
xchg
fsubr
repnz
cmp
data16
rcr
cmp
addr16
lods
test
dec
icebp
ja
test
in
pop
cmp
sar
dec
jle
adc
mov
mov
jle
push
fist
jae
jle
outs
dec
ror
repnz
xlat
pop
daa
adc
or
daa
adc
adc
shr
loop
adc
fisubr
aas
add
mov
dec
xchg
inc
push
add
sub
sbb
dec
push
jg
ds
test
add
test
cmc
pop
scas
pop
(bad)
xor
daa
and
aas
xor
mov
(bad)
xor
sub
cmp
lds
cmp
loop
ja
call
xor
mov
xor
sar
mov
mul
push
in
push
and
clc
cs
out
jbe
popf
push
push
sbb
repz
sub
lods
test
xor
je
and
jno
sub
loop
add
mov
das
xchg
mov
rcr
ud1
test
and
ja
aas
adc
adc
or
mov
aad
pop
mov
inc
fistp
cdq
xchg
push
dec
xor
adc
xlat
stos
pop
inc
stos
pop
jmp
cmps
add
fisttp
jns
cmp
pop
iret
push
scas
(bad)
cmp
mov
inc
mov
popf
sbb
(bad)
jecxz
or
dec
and
sub
xor
and
mov
xchg
mov
xor
mov
lahf
add
inc
inc
sbb
popa
je
sub
mul
mov
dec
push
jmp
sar
nop
mov
xchg
sti
ret
sbb
jb
push
int3
enter
push
ds
data16
retf
push
rcr
je
sub
(bad)
repz
movs
fdivr
mov
ret
call
inc
dec
cs
mov
or
jl
mov
ins
das
outs
ja
push
push
mov
leave
call
dec
inc
cli
retf
jmp
mov
adc
dec
mov
call
loopne
jbe
call
aaa
cmp
iret
sub
adc
addr16
sub
popa
cmp
bound
repz
push
mov
push
movs
lahf
pushf
mov
adc
call
jle
(bad)
fsub
cmp
out
pop
imul
fisubr
sbb
test
cmps
add
inc
dec
jno
cmp
pop
push
mov
shl
push
cmps
sbb
iret
jno
inc
movs
push
mov
mov
cmp
loop
call
cli
push
push
push
aam
sbb
fcom
jg
add
mov
cwde
push
xor
push
dec
sub
adc
adc
mov
scas
retf
sub
in
pop
imul
out
adc
ret
add
popa
stos
pop
push
arpl
mov
push
sbb
aaa
push
sub
push
aad
inc
sub
aas
xor
es
inc
rcr
mov
pop
int
popf
clc
push
dec
xlat
dec
xor
pusha
pop
mov
inc
jle
mov
and
lock
mov
fstp
pusha
mov
cdq
cmps
aad
imul
sbb
rol
push
mov
(bad)
loopne
adc
loop
call
pop
sub
arpl
popf
sti
mov
and
lods
or
push
fidiv
cwde
push
ins
out
cmp
inc
ret
jbe
dec
out
dec
jo
fwait
stos
jmp
cmp
jl
sbb
mov
mov
cmp
jp
mov
(bad)
in
xor
xchg
outs
cs
mov
(bad)
xchg
lahf
push
mov
test
popf
cmp
mov
mov
adc
call
je
pop
mov
add
(bad)
out
xchg
iret
mov
xchg
mov
int3
pop
push
jns
lods
mov
pop
fwait
jp
cli
jge
into
mov
mov
pop
add
pop
jl
cmp
neg
mov
sub
enter
sub
(bad)
pop
mov
out
pop
repz
mov
fst
xor
cmp
dec
mov
xchg
push
cmp
add
adc
mov
outs
arpl
adc
mov
cdq
inc
mov
fdivr
out
adc
mov
lods
sahf
fisub
dec
jns
enter
mov
out
jbe
cmp
jmp
ins
xchg
jle
mov
jecxz
arpl
jmp
push
cmp
jo
mov
xchg
xchg
rcr
int3
call
fld
les
and
or
push
jb
call
push
sbb
mov
push
sub
aas
and
sbb
rol
aaa
sub
sbb
jbe
(bad)
push
retf
sbb
dec
sbb
in
sbb
add
add
loopne
sub
xor
adc
data16
and
sub
in
ins
ds
enter
mov
push
sbb
jmp
icebp
in
std
test
xchg
dec
movs
imul
sbb
cmp
sbb
mov
xchg
mov
fcomp
shr
xchg
and
scas
mov
hlt
cmp
pop
imul
sar
dec
fcompp
jns
pop
xor
jl
sbb
fwait
shl
mov
jg
mov
mov
repz
movs
fstp
xor
cwde
push
int3
je
cmp
xor
sub
fnstcw
and
test
jmp
mov
add
stos
out
fstp
fcom
jmp
fs
cld
dec
xor
pop
and
mov
scas
movs
pop
jnp
repnz
fsub
add
in
inc
xchg
out
sbb
xchg
jmp
adc
pop
test
xchg
mov
sahf
jle
jnp
mov
jns
or
mov
pop
retf
mov
pop
mov
jb
jmp
hlt
mov
dec
(bad)
int
mov
and
sub
jne
push
mov
jge
jne
lods
bound
mov
push
and
pop
xchg
sar
adc
sub
fwait
add
int3
aad
pop
mov
fidivr
mov
stos
inc
push
call
mov
xchg
les
mov
pop
imul
jp
pop
mov
std
sbb
jge
xor
outs
scas
mov
push
shl
lods
fmul
stc
popa
dec
push
xchg
jne
push
mov
jg
out
dec
arpl
inc
cwde
inc
cmp
dec
hlt
lds
cmp
push
sbb
mov
mov
sub
cmp
and
mov
mov
bound
mov
imul
sub
xchg
or
(bad)
hlt
je
cmps
(bad)
jae
dec
outs
dec
and
push
adc
pop
test
cmp
stos
enter
push
pop
ret
pop
scas
loopne
pushf
movs
or
inc
mul
arpl
ds
push
sbb
pop
mov
sbb
xor
fmul
mov
movs
mov
test
jg
fs
push
sub
leave
dec
mov
cmp
call
inc
fcomi
xor
pop
mov
psubusb
pop
cdq
popf
imul
mov
mov
repnz
cli
loop
out
mov
mov
shr
xor
xlat
jg
fmul
or
clc
xchg
aad
cmp
mov
cld
jno
mov
ror
lods
jb
cmp
cmps
adc
out
cmps
cmp
lock
jae
push
mov
hlt
pop
aad
pop
dec
pop
adc
out
sbb
js
rcr
jecxz
pushf
stc
mov
(bad)
push
sub
outs
sahf
adc
out
adc
mov
jmp
jo
and
mov
test
out
inc
out
lock
xor
(bad)
sbb
in
mov
adc
icebp
divps
sub
clc
push
fnsave
mov
jb
inc
ret
inc
xor
aaa
popf
pop
sub
mov
repz
jb
or
mov
mov
dec
mov
jbe
push
out
push
scas
mov
sar
dec
pushf
shl
gs
xor
pushf
in
pop
loop
mov
xor
bound
enter
(bad)
mov
pushf
inc
or
aad
in
pop
pop
lahf
sub
jmp
xlat
into
push
loope
ror
xchg
dec
scas
call
or
stc
add
test
imul
dec
jmp
mov
repz
mov
mov
push
hlt
mov
xor
(bad)
popa
or
std
jle
jmp
aad
sar
mov
or
shl
ins
popf
sahf
loopne
mov
cmp
jle
js
add
jmp
fwait
ret
mov
and
(bad)
jae
jnp
pop
(bad)
cmc
mov
mov
or
clc
and
outs
sub
mov
cmp
jmp
in
xchg
scas
pop
sbb
out
pop
sbb
lds
or
int
div
xlat
sbb
ds
stc
jle
mov
sbb
add
lods
cs
sub
cs
out
inc
inc
mov
mov
xchg
test
in
mov
call
bound
loop
mov
sbb
idiv
xchg
cli
outs
push
pop
inc
and
shl
cmps
xchg
mov
mov
(bad)
push
je
mov
leave
xchg
sub
and
stc
cmp
sahf
mov
adc
adc
mov
mov
xchg
push
ret
into
xor
out
aas
adc
mov
ror
test
js
and
nop
lea
fimul
sti
(bad)
shr
call
xchg
enter
call
push
gs
pop
aaa
je
stc
inc
mov
(bad)
ja
add
jl
pushf
pop
shl
add
and
out
jno
adc
jbe
(bad)
mov
pushf
loope
pop
mov
ret
inc
push
add
lahf
jp
xor
jnp
out
loope
ret
adc
cmp
imul
(bad)
loopne
mov
cmp
frstor
mov
(bad)
retf
add
clc
mov
inc
fmul
and
jmp
call
push
adc
xor
push
inc
aad
mov
jno
nop
xchg
inc
iret
loopne
scas
mov
stc
(bad)
enter
inc
cmc
loopne
ret
repz
inc
add
(bad)
movs
push
ds
cmp
add
stos
bound
(bad)
cmps
or
mov
aas
aam
enter
dec
mov
xlat
fisubr
cmps
xchg
cmp
pop
retf
xor
xor
js
icebp
adc
hlt
and
jmp
cs
in
cmps
jge
ret
rcl
add
rcl
mov
repnz
clc
mov
mov
mov
fcom
mov
push
movs
stos
lods
shl
scas
xchg
add
jge
dec
sbb
mov
inc
fwait
out
ret
das
push
push
sub
jnp
es
inc
fst
lods
movs
popf
out
xlat
std
fild
push
cmps
sub
mov
inc
ret
into
into
jmp
test
cs
xchg
or
(bad)
dec
cs
into
bound
shr
shr
mov
mov
push
dec
je
sub
movs
leave
movs
fld
pushf
mov
pop
mov
inc
sbb
pop
mov
dec
ficomp
or
cmp
cmp
aam
es
dec
push
mov
inc
and
sahf
mov
xor
adc
jmp
inc
push
stos
mov
idiv
cmp
dec
loop
xchg
daa
mov
cdq
push
repz
jmp
xor
xchg
fstp
push
outs
and
lods
popf
int3
inc
int3
imul
dec
add
mov
xor
pop
pop
lahf
add
adc
arpl
jp
cwde
cmp
mov
addr16
pop
fist
(bad)
and
mov
sbb
mov
cmp
pavgb
jg
call
cmp
dec
jbe
xchg
mov
scas
mov
in
pop
out
fldcw
test
inc
ja
repz
jp
sbb
pop
clc
cmps
add
sti
(bad)
adc
inc
cmp
imul
jns
sbb
sub
adc
dec
add
scas
arpl
jp
fidivr
outs
rcl
xor
push
mov
cmp
mov
arpl
daa
push
cli
fild
xlat
dec
ret
inc
mov
rol
addr16
aam
jne
neg
and
stc
dec
sbb
xor
test
push
and
mov
or
inc
dec
or
jne
push
call
clc
je
mov
call
int
pop
push
outs
(bad)
xor
and
(bad)
test
mov
pop
dec
test
ja
lahf
dec
mov
shl
data16
jge
jmp
add
cmp
jns
movs
or
test
inc
stos
mov
(bad)
jb
out
cld
dec
jge
mov
and
mov
call
mov
mov
loop
(bad)
das
iret
je
sbb
cdq
pop
xchg
cmp
arpl
or
test
lahf
and
ret
jl
mov
adc
rcr
dec
cs
test
inc
fwait
and
push
cmps
sub
inc
(bad)
mov
jg
jnp
mov
jmp
mov
test
jne
xchg
out
outs
sub
push
mov
xchg
mov
pushf
mov
and
popf
sbb
and
jae
dec
and
inc
stos
ja
sub
add
push
jmp
jle
xor
or
or
rol
mov
pop
push
sbb
bound
inc
push
jb
test
ins
mov
pushw
sbb
mov
rol
mov
enter
mov
outs
or
mov
imul
xor
in
loop
push
or
aaa
and
inc
adc
xchg
int
cdq
fisttp
sbb
push
fmul
in
dec
pusha
sub
adc
pop
jae
dec
out
pop
cmp
loopne
adc
xchg
out
mov
shr
xor
scas
cld
cmp
mov
lea
push
(bad)
xchg
jae
mov
jge
jecxz
jg
les
and
in
or
cmp
(bad)
pusha
lods
push
mov
cmps
push
mov
and
nop
loop
cdq
xor
mov
adc
fdiv
pop
(bad)
jecxz
xchg
scas
mov
lahf
mov
inc
idiv
pop
xchg
test
aam
cmp
sub
and
ror
rol
leave
push
mov
cmp
or
or
mov
daa
cli
dec
mov
cmc
jle
jo
xlat
pusha
shl
dec
(bad)
sti
pop
icebp
scas
arpl
(bad)
xlat
aad
lahf
retf
xchg
mov
dec
adc
hlt
retf
leave
retf
adc
ficom
sub
mov
mov
jnp
mov
dec
xchg
xchg
mov
ror
enter
sub
stos
dec
inc
das
inc
jle
stos
pop
mov
or
cmp
fs
mov
das
test
jl
in
int3
or
enter
frstor
mov
fs
cmps
push
xor
lods
movs
cwde
cld
inc
fdiv
mov
mov
mov
pop
dec
inc
cmc
(bad)
loop
pusha
pop
pop
sahf
bound
dec
(bad)
(bad)
test
inc
cmps
js
xchg
inc
mov
arpl
lds
dec
imul
cmc
(bad)
add
and
cmp
push
daa
(bad)
or
neg
mov
jb
int
pop
scas
xor
push
test
push
cdq
fs
sbb
in
shr
pop
jge
lds
stos
mov
aad
cmc
je
add
or
repz
jle
ja
aas
rcl
dec
sub
jo
mov
inc
scas
or
adc
test
rcr
cmp
pusha
dec
sti
push
mov
mov
sbb
jg
add
in
popa
movs
(bad)
push
adc
pushf
outs
neg
stos
test
int
js
in
sbb
jg
adc
lods
dec
mov
and
inc
hlt
dec
lds
lock
outs
rol
adc
mov
popa
ret
pop
inc
add
shr
pop
dec
cmp
(bad)
sub
adc
in
mov
leave
cmps
test
or
call
sti
sub
push
xor
xor
mov
add
loope
ins
jg
xchg
movs
dec
and
addr16
push
sbb
mov
and
pop
mov
inc
sbb
jne
mov
cmp
mov
sub
loope
sub
test
mov
sub
leave
sbb
popf
ins
mov
or
out
and
stc
iret
mov
shr
mov
push
pusha
push
push
movs
iret
mov
jb
jmp
push
pop
push
int3
mov
xchg
jmp
repnz
bound
adc
scas
loope
inc
push
jp
or
out
not
jecxz
hlt
mov
stos
and
lock
neg
je
mov
pop
iret
sub
(bad)
in
scas
sbb
cmps
jp
jns
bound
test
cmp
ins
int3
fiadd
lods
shr
loop
out
and
adc
mov
hlt
pop
mov
cld
lods
mov
outs
ret
outs
mov
outs
dec
and
xchg
sbb
shl
pop
or
and
push
shl
test
test
aaa
loope
jne
xchg
leave
das
std
push
mov
pop
xor
adc
xor
dec
outs
push
push
shl
mov
pop
fwait
ja
clc
jns
push
jae
outs
jb
add
add
push
sub
pop
ss
mov
retf
ror
adc
pop
movs
push
mov
or
add
loope
das
pop
scas
jl
sub
mov
ss
xchg
test
mov
adc
fs
in
xchg
and
aaa
movs
(bad)
std
cmp
xchg
cmps
or
loopne
mov
adc
mov
imul
cmp
mov
js
lahf
aas
pop
pop
inc
ror
inc
xor
jae
mov
jg
mov
mov
cli
jo
fs
push
sub
bound
push
ins
out
std
imul
stos
or
sub
push
sbb
daa
push
lods
sub
call
dec
rcr
test
ss
sar
out
lods
js
movs
mov
cli
xor
mov
loop
enter
pop
mov
pop
inc
jo
sahf
cmp
imul
clc
icebp
imul
loopne
dec
cwde
xchg
cmps
jg
pop
int3
stos
lods
dec
rol
ror
push
xor
cmp
mov
sub
dec
jmp
push
fld
gs
cmps
jp
push
add
(bad)
daa
imul
jmp
inc
jo
mov
dec
xchg
jecxz
dec
icebp
mov
and
cmps
cmps
ret
dec
sbb
(bad)
out
(bad)
inc
jle
jbe
mov
mov
jg
jmp
repz
data16
scas
addr16
dec
call
mov
jne
pop
fst
fnstcw
jno
aas
lods
(bad)
lahf
outs
mov
add
mov
mov
sub
cmc
popa
mov
sahf
add
jmp
pop
mov
in
bnd
xchg
dec
iret
aaa
inc
aam
mov
scas
ja
pop
enter
pop
mov
mov
jae
dec
sub
jae
inc
dec
push
ret
fimul
sbb
sbb
fsub
cmp
sahf
add
xchg
cmp
sub
pop
xor
out
out
imul
cmp
cdq
bound
fistp
and
sar
sbb
cmp
mov
xchg
xor
mov
ja
sbb
sub
clc
ds
mov
jle
fmul
mov
inc
jns
dec
daa
mov
int3
cld
jl
inc
jns
and
ficom
jmp
aam
xchg
jecxz
cs
shl
(bad)
cmp
cmc
mov
fcom
sar
sbb
(bad)
xchg
or
icebp
in
adc
adc
or
mov
add
add
rcr
movs
cld
das
lock
pop
stos
jle
sahf
popf
(bad)
cmp
mov
and
cld
ja
push
dec
sub
dec
out
mov
sahf
les
aas
pop
add
pop
pop
jne
loopne
or
pop
outs
lahf
mov
arpl
repnz
mov
rcl
push
in
or
or
rcl
push
xchg
lds
loop
js
cmp
add
ss
mov
in
(bad)
and
es
adc
add
xchg
inc
arpl
and
sahf
nop
movs
jp
outs
dec
inc
xchg
adc
push
in
cmps
fisub
jns
and
jne
jae
pop
enter
popf
lods
pop
mov
in
xor
mov
mov
inc
jmp
jle
pusha
inc
ret
sub
arpl
pop
es
mov
xor
mov
xlat
imul
push
ss
jl
out
aaa
out
dec
(bad)
rcl
sub
jmp
mov
sbb
loopne
ja
into
add
mov
fnstsw
daa
jg
xor
shl
hlt
lods
lea
js
pushf
je
jae
push
sbb
pop
pop
or
mov
mov
xor
cmp
inc
xor
sbb
sar
xor
jmp
inc
js
clc
jnp
sbb
hlt
jo
test
and
xor
sub
pushf
jb
std
push
dec
mov
pop
cmp
sub
dec
or
or
jge
popa
sahf
(bad)
cmp
cmp
test
in
ja
dec
loope
sbb
xor
call
addr16
and
arpl
test
test
push
mov
loop
(bad)
mov
adc
inc
pop
bound
mov
push
retf
dec
inc
loope
dec
pop
fdivp
in
lock
adc
in
out
mov
aam
call
and
mov
aas
or
jge
and
xchg
les
sbb
cwde
jns
mov
pop
sbb
cs
pusha
jl
sti
in
(bad)
clc
sub
mov
xor
sub
cmp
mov
sbb
xor
sti
mov
pop
cmps
jno
mov
mov
hlt
fs
jecxz
xchg
push
jp
jo
inc
mov
mov
push
push
stos
inc
mov
mov
scas
out
sbb
retf
or
ret
int
pop
outs
mov
out
data16
or
inc
and
mov
addr16
imul
or
xchg
push
ja
shr
inc
push
push
js
xor
cs
jb
xchg
inc
adc
mov
in
mov
sbb
fwait
and
push
cmp
mov
scas
add
xor
push
jae
dec
mov
cmp
inc
in
cli
pop
rol
mov
mov
repnz
sub
mov
out
test
clc
mov
popf
inc
inc
stos
push
into
lea
sub
out
aad
push
idiv
pop
mov
test
jmp
and
fwait
xlat
xor
add
mov
cli
das
shl
mov
popfw
jl
shr
bound
sub
xor
retf
out
pop
pop
and
fs
stos
mov
xchg
mov
in
mov
in
and
fbstp
add
scas
xor
aaa
movs
std
movs
push
mov
out
neg
movzx
and
iret
cdq
adc
call
pop
lock
xor
xchg
mov
loopne
push
call
(bad)
popa
jl
push
jb
dec
or
cmps
sub
inc
lahf
dec
sub
in
dec
xor
pop
inc
or
sbb
cmps
cmp
cmp
cmp
jae
popa
or
sub
outs
xchg
adc
mov
retf
push
data16
addr16
fisub
pop
js
jb
popf
add
call
adc
inc
adc
pop
jg
jnp
enter
push
and
test
mov
push
xchg
jne
jge
call
icebp
mov
repnz
add
stc
addr16
lods
cmp
mov
xor
iret
mov
jmp
jae
test
mov
xchg
adc
pop
dec
add
cmps
adc
das
ds
call
mov
mov
int
pop
sub
sar
push
lahf
es
(bad)
cli
in
out
lods
push
sti
(bad)
lea
mov
push
xchg
or
inc
jg
or
imul
inc
sub
mov
jmp
cwde
ror
sub
or
aam
lea
pop
je
repnz
mov
repnz
aad
ror
(bad)
jge
fbstp
fmul
mov
push
pop
data16
xlat
test
dec
add
dec
push
cmp
and
lods
pop
mov
mov
cmp
mov
cdq
neg
mov
jmp
mov
cmp
scas
shl
add
popa
call
mov
pop
cmp
and
jno
dec
jns
fsubr
add
jmp
dec
popf
(bad)
mul
cmc
jmp
sbb
movs
dec
test
lods
ret
scas
pop
jecxz
jnp
aaa
sub
sar
xor
jmp
stos
jbe
or
mov
call
rcr
int
cmp
jo
mov
inc
int3
push
and
add
and
jmp
adc
xchg
fs
sbb
daa
sahf
ins
push
mov
cmp
xor
xchg
loope
add
or
mov
jae
cdq
in
jmp
jb
fs
lea
std
in
mov
sub
jl
(bad)
in
cli
mov
in
xor
lahf
fs
push
inc
in
fisttp
mov
js
in
lods
adc
clc
sbb
jmp
scas
pop
dec
xacquire
cmc
add
mov
ss
nop
jne
(bad)
mov
out
pop
fcomip
and
aam
clc
repz
in
sub
add
mov
jg
push
int
mov
sub
xor
loop
push
test
xor
jmp
inc
aas
jbe
mov
mov
mov
pop
jne
addr16
clc
sti
push
ds
sbb
pop
inc
fldenv
arpl
ins
iret
cmp
xor
pushf
push
jb
popa
cmps
movs
mov
nop
sub
add
add
pop
pop
and
mov
not
outs
xchg
dec
pop
enter
add
outs
mov
jne
cmp
mov
(bad)
js
pop
dec
cmp
push
jno
iret
and
push
or
mov
jns
jp
ror
in
pop
repz
hlt
jns
shl
mov
mov
pop
out
xor
fs
xchg
fiadd
icebp
mov
cmp
and
imul
pop
adc
imul
mov
or
mov
mov
sbb
mov
iret
test
dec
sub
out
dec
icebp
sbb
jmp
inc
sub
cmp
sbb
sub
push
xchg
out
jmp
not
jb
inc
pop
shr
dec
out
pop
into
les
cld
mov
xchg
and
jno
push
test
sbb
enter
loop
lds
mov
push
stos
ror
into
or
sbb
mov
xchg
push
int3
aas
add
cld
arpl
rcr
cmp
sub
mov
loopne
(bad)
pop
or
rcl
pop
or
jns
add
mov
popf
jne
and
rcr
mov
or
xchg
push
mov
pushw
inc
(bad)
jmp
mov
scas
aas
pop
int3
pusha
cmc
sub
dec
adc
push
push
lds
int3
push
sub
pop
xchg
push
in
jae
xchg
push
cmp
fs
cmp
and
repz
ficom
loop
out
sbb
in
cmp
and
pop
out
fwait
mov
pop
sub
loopne
sub
shr
sub
jmp
in
inc
pop
movs
outs
mov
test
cmc
(bad)
les
dec
and
retf
mov
or
mov
(bad)
cmps
and
jbe
ins
jae
sbb
cdq
pusha
pop
ret
pop
cmp
outs
and
cmp
mov
mov
leave
xchg
cli
pop
imul
mov
clc
pop
fild
loopne
push
ret
fwait
or
and
mov
out
adc
stos
ja
loope
imul
jno
mov
iret
ins
pop
cli
mov
sub
pop
mov
mov
test
in
pusha
and
mov
adc
pushw
fadd
repz
nop
ret
push
sbb
inc
call
(bad)
addr16
in
outs
mov
dec
ret
hlt
sbb
or
and
stos
cmp
mov
mov
mov
or
lock
push
cmps
push
add
(bad)
ja
jne
in
test
mov
test
xchg
add
dec
call
enter
idiv
sub
scas
ins
fstp
shr
outs
xlat
daa
mov
ss
mov
out
inc
pop
ss
and
mov
mov
out
sar
mov
cmp
mov
std
rcl
daa
test
jp
ror
(bad)
retf
inc
adc
pop
scas
fadd
sbb
cmp
mov
call
inc
stc
mov
iret
loope
lods
xchg
mov
cmps
xchg
inc
xor
mov
adc
retf
pop
mov
fwait
mov
imul
stc
mov
cli
push
sbb
and
push
(bad)
and
xchg
mov
pop
outs
out
retf
adc
mov
inc
js
fisub
xchg
pop
shl
pop
popa
repz
sub
mov
or
(bad)
imul
ja
outs
xchg
push
cmp
lahf
mov
push
xor
mov
mov
js
jle
cdq
rcr
xchg
inc
es
popa
mov
je
push
jno
xchg
pop
and
xchg
adc
sub
outs
pop
cmps
stc
push
cdq
mov
loope
jge
jno
aad
jae
das
dec
sub
ss
ins
(bad)
out
jle
ror
fdiv
and
fst
cs
mov
in
inc
or
stos
movs
cmc
jge
cmc
jecxz
retf
(bad)
sbb
pop
xor
add
movs
xchg
outs
sub
ret
jae
mov
sbb
push
lock
or
std
jp
cmp
(bad)
movs
pop
mov
mov
cmp
cmp
aas
in
mov
pop
adc
sub
mov
jae
sahf
aaa
or
sbb
sahf
inc
imul
adc
sbb
cmp
mov
cmp
and
push
mov
jmp
mov
cwde
cld
imul
pop
shr
sbb
cmp
fidiv
adc
(bad)
jne
scas
pop
or
jb
aas
sub
sub
shl
dec
fs
add
shld
adc
js
jge
xchg
ret
in
lods
out
lock
(bad)
cmps
and
sbb
std
cmps
or
daa
mov
jae
gs
add
std
gs
mov
les
inc
cmp
cmp
push
popf
stos
jmp
out
aaa
jo
in
out
mov
in
sub
retf
aaa
and
das
mov
push
adc
aas
cs
test
dec
push
arpl
cmps
pop
scas
sar
dec
sbb
mov
test
pop
or
mov
shr
adc
loope
shl
mov
mov
in
add
inc
xchg
(bad)
push
lea
jmp
leave
mov
jp
sbb
dec
mov
das
(bad)
and
sbb
jmp
cmp
in
adc
inc
inc
pop
out
sbb
xor
sub
dec
xor
or
mov
fs
push
inc
mov
aas
cmp
push
pusha
sti
xchg
in
xchg
xlat
imul
(bad)
sahf
es
enter
scas
mov
xor
jmp
sbb
inc
dec
fwait
add
mov
and
out
es
adc
or
cmp
pop
lds
pop
jns
or
jno
jmp
jmp
xchg
pop
pop
pop
rol
retf
(bad)
xchg
mov
cmc
or
pop
cwde
popf
mov
add
mov
pusha
mov
push
outs
inc
add
cmps
add
call
pop
retf
and
mov
mov
scas
frstor
movs
push
sbb
push
dec
nop
and
push
mov
ss
dec
pop
jne
test
sub
retf
or
sbb
rcl
xchg
pop
push
sbb
sub
xchg
retf
mov
push
xor
push
inc
iret
std
mov
push
inc
data16
cmp
rol
out
xchg
fld
xchg
not
sbb
jl
out
lea
fcomp
xlat
adc
cmp
ja
cli
sub
xchg
repnz
jle
in
cmp
mov
and
imul
in
ret
cli
ret
add
(bad)
cmp
jns
imul
sub
sub
push
fdivrp
leave
(bad)
mov
dec
stos
mov
lds
jno
cld
xor
mov
jl
and
mov
jg
xchg
dec
faddp
lea
stc
les
shl
mov
inc
hlt
dec
jge
dec
popa
test
call
push
shr
aas
jg
push
std
mov
and
sbb
aaa
push
pop
xchg
mov
lods
stos
pop
xor
mov
or
adc
jnp
arpl
inc
pop
pop
pop
cld
cmp
jge
add
or
pusha
jmp
mov
js
xor
push
mov
mov
cs
mov
sbb
sub
push
jno
aad
test
xor
dec
mov
sub
xor
dec
lea
fist
retf
leave
jb
mov
dec
cs
add
dec
pop
or
ds
mov
imul
jns
arpl
sahf
mov
pop
retf
pop
sub
pusha
data16
dec
adc
je
or
ret
push
add
(bad)
mov
mov
push
arpl
dec
dec
and
loope
jb
push
stc
xor
arpl
pop
sub
mov
sbb
mov
ret
arpl
into
sbb
mov
mov
inc
cli
ins
cmp
call
int
(bad)
mov
mov
pop
fs
inc
mov
imul
mov
(bad)
sub
dec
sbb
std
sbb
adc
out
daa
sub
dec
mov
lock
adc
or
sub
in
dec
mov
enter
(bad)
and
test
nop
mov
sbb
loopne
pop
mov
push
sub
retf
inc
(bad)
xchg
push
pop
mov
xchg
mov
and
enter
jae
and
mov
and
xchg
dec
dec
pop
pop
mov
pop
dec
jns
lods
push
sti
daa
leave
in
mov
add
(bad)
leave
aam
(bad)
cmc
fwait
mov
and
mov
std
inc
add
jne
(bad)
sbb
xor
mov
retf
and
mov
arpl
pop
sub
inc
pop
mov
jecxz
std
ins
call
popa
aas
sbb
stos
inc
mov
adc
add
jnp
inc
xchg
clc
jge
addr16
stos
rcr
inc
aaa
es
sub
jle
sbb
xchg
fwait
jb
jmp
pop
outs
push
cld
dec
iret
xchg
and
cs
push
xor
sbb
sub
or
sub
jb
mov
xor
pop
sbb
test
xchg
push
gs
pop
icebp
shr
pop
push
ret
sbb
comiss
sub
push
xor
xchg
repz
jmp
out
and
jb
xchg
pushf
xchg
lahf
fcom
cmp
mov
or
sub
(bad)
sub
mov
jne
mov
fild
push
int3
call
(bad)
(bad)
sbb
inc
mov
xchg
cdq
push
pop
in
mov
xchg
ins
std
inc
ss
bound
repnz
lods
dec
dec
cld
ret
lahf
push
cmp
es
or
push
pop
sahf
add
les
inc
jo
movs
add
mov
jno
mov
adc
sti
faddp
dec
lock
fidiv
shl
aas
mov
mov
push
into
je
sub
push
sub
ja
jne
xchg
scas
inc
sub
cmps
xchg
mov
mov
je
repz
and
out
or
cmp
jge
mov
mov
ins
fs
imul
ins
mov
mov
fstp
jb
push
push
mov
ret
pop
mov
xchg
or
fistp
adc
aas
movs
bound
imul
cs
cmps
mov
cmp
movs
push
daa
jbe
push
int
lods
add
push
mov
lock
inc
lds
inc
inc
jno
or
jae
inc
xor
xchg
imul
mov
dec
(bad)
add
(bad)
add
mov
jae
and
or
ja
dec
pop
out
stc
arpl
fidiv
xchg
and
cmp
lods
add
out
push
xor
bound
mov
mov
mov
fsub
mov
outs
cmps
mov
loopne
mov
test
cmp
lods
or
xlat
inc
xor
jb
lods
inc
and
sbb
xor
stc
out
daa
mov
xor
ror
lea
mov
or
xor
lea
mov
into
push
push
fcmovnbe
shl
mov
adc
adc
pop
hlt
aas
and
sbb
cmp
cmp
popa
mov
and
sbb
(bad)
daa
dec
push
cli
call
test
sub
or
xlat
mov
xor
push
cmps
addr16
(bad)
add
cld
test
push
adc
adc
mov
cwde
pop
adc
adc
fld
jno
add
cmp
stos
sub
outs
mov
push
jle
nop
mov
lods
mov
adc
sbb
sbb
ja
fdiv
cs
fs
ffreep
lods
xchg
jg
test
stc
add
adc
inc
dec
adc
or
pop
xchg
clc
je
add
mov
jg
jl
ja
aad
js
je
mov
push
pop
ja
xchg
das
sbb
pop
mov
mov
push
sub
sbb
sub
xor
(bad)
test
jno
mov
dec
sub
cmp
(bad)
loop
cs
mov
mov
xchg
pop
cmp
mul
adc
xor
call
popa
push
mov
mov
cmps
mov
dec
jle
fisub
scas
fwait
pop
add
popf
std
je
mov
xchg
loopne
popf
cld
shl
shr
pop
dec
dec
or
jno
mov
rcl
rcl
adc
sbb
popw
mov
popf
adc
(bad)
in
not
pop
add
pop
aaa
sub
sar
mov
cmp
repnz
scas
xor
xor
push
sub
push
cmp
mov
xor
rol
xlat
jl
cmps
pop
loope
das
jle
jle
call
ins
cmp
and
add
dec
jmp
retf
add
lods
cs
call
mov
loop
test
or
popf
add
jbe
pop
xchg
mov
mov
icebp
push
xchg
push
and
outs
inc
pop
mov
stos
hlt
dec
pop
ret
mov
test
inc
mov
cmp
in
scas
push
lock
fldcw
mov
sub
inc
clc
add
mov
scas
pop
shr
xor
push
into
jo
xchg
jbe
or
out
ins
in
pop
ins
fsubr
jmp
icebp
dec
cld
shl
js
inc
int3
jno
jecxz
jg
fs
dec
adc
test
jns
repnz
fdiv
in
push
xor
inc
mov
sbb
xor
int
mov
call
mov
retf
inc
sbb
jbe
pop
jg
xor
ds
bound
or
push
into
jl
fs
enter
inc
mov
ret
jns
ret
stc
mov
xor
dec
xchg
adc
loopne
icebp
adc
push
retf
out
mov
fs
pop
push
daa
jmp
fimul
jbe
fwait
or
add
das
sbb
dec
mov
jle
or
jne
rcr
jge
loop
fs
fsub
in
dec
xlat
ins
imul
cmp
sub
jp
ret
loop
enter
sbb
dec
sbb
push
inc
scas
test
inc
iret
data16
inc
cmp
jg
push
jb
arpl
fdivr
pop
lea
inc
or
cwde
jnp
bound
inc
je
mov
pop
and
lods
xor
mov
aam
inc
or
mov
add
or
fld
ret
jl
inc
pop
mov
packuswb
les
or
push
push
mov
shr
icebp
mov
fadd
jl
outs
jns
jecxz
jno
fadd
cs
loop
call
imul
jo
(bad)
test
or
dec
inc
shr
add
xchg
pop
pop
mov
lock
xor
cwde
loope
ds
cmp
aad
mov
jb
loopne
dec
jmp
repnz
rol
imul
push
hlt
and
pop
xchg
cmp
xchg
sar
jb
pop
pop
sahf
or
push
sub
outs
(bad)
mov
sar
add
sub
mov
mov
push
dec
mov
call
test
xchg
cdq
dec
xlat
xor
frstor
xchg
cld
adc
pop
or
fs
or
mov
loopne
js
push
xchg
push
push
fidivr
(bad)
xor
int3
pop
xchg
add
mov
mov
or
aam
mov
cmp
comiss
ds
mov
xor
ins
pushf
push
movs
mov
sbb
imul
pop
(bad)
cmps
sbb
nop
scas
mov
cmp
push
loope
repnz
jmp
sbb
repz
test
mov
ins
dec
iret
dec
dec
sbb
scas
mov
cmp
xchg
or
jmp
adc
inc
ja
push
push
add
jl
inc
push
and
fcom
shl
ds
out
add
mov
ds
ins
movups
sbb
inc
dec
mov
int3
fs
mov
cmp
push
and
add
outs
sbb
imul
mov
dec
mov
jmp
dec
lock
mov
lods
test
loope
test
cmp
outs
in
and
bound
dec
pusha
loopne
addr16
das
ds
and
sbb
je
mov
push
in
mov
fimul
pop
arpl
(bad)
gs
in
add
das
(bad)
dec
inc
ins
inc
ds
sbb
jb
jne
jb
fld
dec
pop
scas
inc
pop
cmp
ins
imul
xchg
imul
ins
mov
xor
dec
pop
ds
lds
scas
repnz
test
xor
xchg
iret
mov
cmps
fild
or
and
imul
inc
mov
ror
ins
lods
nop
gs
sub
imul
push
lea
inc
das
add
xchg
inc
pop
cld
je
pop
mov
inc
push
(bad)
cli
rcr
lea
outs
imul
addr16
pusha
pusha
sub
sub
ds
stos
xor
aaa
imul
fsub
pop
inc
repz
lock
add
inc
das
xchg
fwait
pop
mov
mov
sbb
pop
mov
test
sub
add
jle
dec
daa
or
fdecstp
addr16
cmc
jge
xchg
pop
push
mul
div
mov
sahf
mov
pop
and
(bad)
jno
jecxz
push
pop
cdq
jg
ja
popa
mov
dec
stc
mov
jecxz
mov
add
push
jl
daa
jmp
push
adc
or
mov
adc
clc
jns
dec
icebp
push
dec
(bad)
sar
in
mov
add
int3
into
mov
pop
mov
retf
inc
mov
loopne
pop
inc
(bad)
cmp
or
fdivr
in
mov
cmc
or
mov
add
daa
inc
aad
movs
sahf
inc
and
dec
push
cmp
jmp
loop
fdiv
lea
pop
cmps
xor
xor
sbb
test
mov
jbe
push
mov
mov
and
inc
fnstenv
imul
int3
cmp
inc
in
shr
or
push
dec
dec
ret
add
in
jle
jmp
ss
cmp
jge
hlt
stc
adc
mov
cmp
inc
mov
loopne
popf
mov
inc
jg
test
shr
inc
push
jbe
and
icebp
inc
sbb
je
and
fcompp
mov
sbb
push
in
(bad)
adc
mov
outs
je
mov
cmp
mov
ror
dec
cmp
jle
gs
sub
lods
retf
add
jp
bound
adc
popa
(bad)
mov
jp
cmps
movs
dec
in
mov
and
adc
sub
test
or
sub
push
push
js
add
aas
mov
in
mov
mov
jno
adc
xchg
fsubr
enter
sub
pop
add
push
inc
js
adc
je
scas
hlt
hlt
or
dec
ds
pop
scas
ins
jle
fld
pop
cmp
stos
sbb
cmp
mov
push
cmps
call
(bad)
(bad)
js
dec
cmp
add
xchg
xchg
mov
sbb
js
ds
outs
sub
jmp
ss
fcmove
inc
ins
sbb
jae
mov
mov
repnz
sbb
in
dec
adc
xchg
pop
push
or
lahf
and
mov
inc
cli
fsubr
(bad)
mov
lea
daa
jl
fmul
jmp
sub
mov
stos
cli
fld
fimul
in
retf
mov
shl
scas
mov
cmp
push
pop
fstp
das
jnp
stos
retf
cmp
push
push
sub
scas
adc
mov
xlat
mov
mov
xor
fidiv
cmp
je
xor
mov
xchg
sub
push
scas
dec
push
outs
xor
add
test
stc
xor
into
fsubrp
or
ficomp
cmp
rep
pop
and
(bad)
ja
mov
data16
imul
pop
sub
pop
cdq
push
pop
pop
daa
test
push
imul
adc
ss
inc
loopne
imul
xor
lea
mov
stc
cmc
pop
add
cmp
adc
mov
mov
shl
(bad)
in
pop
mov
adc
into
arpl
mov
xor
test
push
popa
mov
or
add
not
sbb
mov
cmps
fdiv
daa
dec
lea
fistp
xchg
lods
mov
out
xor
popa
dec
xor
ins
loope
jnp
mul
imul
pop
ret
inc
ja
pop
xchg
ror
push
jbe
addr16
rcl
imul
lods
push
pop
jg
test
(bad)
and
mov
jg
dec
in
pop
dec
cmc
mov
xlat
popa
sbb
jge
cmp
jle
mov
adc
jae
cmps
jmp
mov
loop
push
ins
xor
fnstsw
mov
xlat
(bad)
aaa
jecxz
mov
sub
test
test
xor
je
scas
imul
cmps
or
xor
call
mov
sbb
lock
addr16
out
(bad)
enter
cmp
xor
stos
int
popf
cmp
test
call
div
mov
ins
pop
sub
stos
fucomip
es
or
int3
(bad)
daa
sahf
cld
clc
jle
add
pop
leave
mov
cmps
pop
cmps
in
movs
mov
in
scas
dec
add
mov
jle
mov
ret
in
hlt
(bad)
enter
lahf
cmp
ror
mov
push
stc
mov
pop
sbb
sbb
stc
jns
in
dec
cwde
mov
jg
dec
sub
adc
add
jo
mov
test
pop
pop
jns
inc
push
sbb
add
into
or
jne
loope
jae
fsubr
ins
xchg
adc
sub
jg
imul
pop
pop
mov
xchg
mov
out
popa
mov
sub
pop
pusha
(bad)
dec
icebp
arpl
jle
xor
inc
sub
jmp
pop
push
fsubr
mov
cwde
ror
pop
cmp
jg
aas
fimul
out
jmp
and
pop
inc
or
loopne
repnz
xor
sub
in
in
pop
retf
mov
aad
push
jne
or
cld
and
inc
pop
aas
push
pop
jo
add
jb
lods
dec
in
xor
(bad)
dec
cmp
iret
push
mov
push
leave
xchg
pop
dec
stos
mov
jmp
stos
repz
stc
imul
inc
nop
adc
xor
pushf
jmp
jae
in
adc
mov
mov
pushw
mov
fistp
pop
xchg
mov
and
push
adc
scas
(bad)
loope
cmp
mov
pop
pop
cmps
mov
push
inc
cmp
shl
pop
and
xchg
dec
stos
sbb
shl
or
dec
cmp
in
jle
rcr
cmc
les
test
add
cmps
dec
xor
dec
(bad)
(bad)
mov
aaa
stos
in
inc
repz
adc
arpl
adc
xchg
jle
adc
shl
xor
mov
retf
out
inc
mov
in
push
add
(bad)
mov
neg
mov
test
sub
jae
popa
jecxz
cmp
and
(bad)
jns
cmp
popa
and
sub
mov
call
cmp
jp
sti
xchg
sbb
clc
or
mov
jp
imul
push
push
dec
std
xchg
push
pusha
(bad)
pusha
lea
cmc
lock
jmp
sub
repnz
fisttp
and
xor
iret
clc
inc
mov
xor
add
inc
pop
pop
in
test
lds
lahf
pop
mov
addr16
pop
push
pop
mov
dec
loopne
shl
adc
adc
sub
loopne
out
mov
mov
fiadd
adc
xchg
arpl
xchg
cmp
cdq
inc
push
and
pop
fadd
ret
jbe
rcl
mov
or
push
or
push
push
imul
dec
xor
shl
sbb
mov
mov
iret
sbb
inc
inc
mov
dec
cmps
cmp
mov
stos
sbb
idiv
xor
retf
mov
adc
jbe
mov
mov
lea
rcr
cld
cli
xchg
outs
add
jb
push
mov
sub
bound
inc
and
cs
loope
jmp
jb
adc
hlt
stc
mov
sub
sub
cs
jge
mov
jb
cmp
sbb
sbb
inc
stos
pop
jp
jns
mov
addr16
sbb
jne
jb
dec
cwde
jmp
popf
sti
fld
addr16
sbb
xor
xchg
rcr
repnz
in
add
jg
iret
add
mov
rcl
mov
dec
sbb
jae
jge
add
xchg
xor
mov
jl
sar
nop
dec
add
add
inc
gs
test
shl
dec
js
pop
push
mov
push
sahf
jno
icebp
sub
mov
adc
mov
jg
pop
dec
popa
gs
mov
ins
pop
dec
movs
dec
daa
js
mov
mov
lods
adc
inc
shr
mov
mov
test
push
loope
mov
test
dec
jmp
ins
cli
mov
mov
cli
out
mov
js
or
dec
call
jb
mov
and
inc
xchg
jo
and
call
(bad)
mov
ja
cmp
cmp
in
loope
div
mov
addr16
or
push
inc
repnz
aam
dec
inc
sbb
and
xor
inc
cmp
mov
loopne
xor
je
push
loope
pop
mov
mov
into
push
sub
mov
push
jnp
sbb
sub
xor
fadd
call
push
or
xchg
xchg
xor
popa
adc
add
fist
sub
in
je
mov
add
jle
pusha
push
pusha
xor
imul
movs
xchg
cmp
push
or
ja
and
cmp
jnp
imul
nop
jg
lahf
mov
test
push
sub
cs
sub
movs
mov
por
mov
lods
repnz
pop
mov
pop
dec
rcr
inc
add
and
loopne
xchg
jae
lea
clc
nop
in
xor
pop
cmp
iret
lahf
mov
call
jp
mov
into
mov
pop
loopne
sbb
push
jb
mov
jbe
push
pusha
inc
push
jae
jno
imul
jmp
int3
icebp
pop
mov
add
sti
xchg
stc
sbb
inc
cmp
aad
out
ins
inc
popa
jo
add
mov
(bad)
xor
(bad)
and
mov
cmp
and
sbb
(bad)
jae
mov
pop
dec
addr16
or
fstp
pop
outs
push
jbe
lea
repz
iret
sbb
add
mov
div
cmp
push
outs
leave
mov
pushf
cmp
inc
push
xor
out
ja
jl
jp
pop
sub
inc
adc
add
popf
jns
add
out
es
(bad)
jbe
je
loop
gs
std
xor
add
pop
call
push
inc
out
push
and
fidivr
and
packssdw
adc
in
popa
dec
or
inc
mov
jge
lahf
xchg
pop
and
push
mov
or
inc
daa
(bad)
mov
push
dec
xor
jge
add
jle
push
mov
mov
lock
push
out
sbb
cmp
xchg
aaa
adc
pop
inc
mov
leave
loopne
dec
leave
pop
mov
repnz
mov
aad
aaa
pop
add
xor
es
call
ja
or
inc
inc
xchg
es
mov
mov
shr
xor
mov
pop
jbe
loopne
dec
jo
arpl
or
lds
jo
mov
pop
push
mov
rcl
pop
jmp
mov
and
lds
out
daa
mov
cdq
sbb
(bad)
repz
mov
cmp
repnz
push
ret
and
dec
xlat
dec
repnz
cmp
or
mov
(bad)
clc
push
add
(bad)
jecxz
popa
or
pop
inc
sub
shl
inc
test
popf
mul
jmp
hlt
in
lods
mov
lds
cmp
hlt
push
xlat
add
mov
xor
cdq
or
sti
retf
mov
in
(bad)
hlt
sub
jbe
push
test
mov
inc
scas
popa
sbb
inc
movs
add
dec
dec
sub
retf
mov
jnp
jns
and
and
pusha
cld
dec
xor
jns
mov
sub
repz
outs
inc
add
movs
out
sub
sbb
ins
daa
jmp
add
pusha
cmp
nop
clc
jb
fadd
scas
add
jecxz
(bad)
pop
fnstcw
push
push
imul
inc
pop
icebp
push
jae
or
das
icebp
imul
inc
fidivr
and
gs
dec
xchg
add
pop
jne
(bad)
in
cmp
div
add
xchg
jne
jmp
mov
ret
out
sub
ficomp
ins
out
adc
xor
daa
inc
sub
les
jle
mov
add
js
sub
scas
push
inc
xor
inc
pop
dec
movs
imul
sbb
ja
fxch
ficom
and
jno
mov
jl
mov
sub
imul
(bad)
mov
bound
fldenv
push
push
lea
dec
imul
jle
xchg
loop
adc
pop
dec
ds
inc
or
repz
push
and
xor
jno
xor
xor
lock
int
mov
jne
mov
scas
retf
test
xchg
jo
aad
(bad)
cmp
(bad)
xsha256
cmps
push
je
sub
cmp
or
leave
mov
js
movs
pop
icebp
lods
stos
pop
add
aas
ss
push
je
add
xchg
pop
shr
popa
(bad)
pushf
sbb
dec
(bad)
pop
sub
inc
out
jnp
mov
retf
and
outs
js
dec
loopne
cmp
dec
push
sub
iret
lods
mov
int
and
pop
push
jge
xor
xor
ins
push
xor
(bad)
imul
jg
dec
rol
inc
(bad)
test
lods
out
adc
(bad)
adc
in
jns
xor
jmp
addr16
pop
dec
rcr
inc
(bad)
out
and
jnp
aas
xchg
je
xor
sbb
xor
fisub
or
ins
popf
jmp
leave
sub
test
or
stos
inc
sar
and
xchg
lods
cs
sub
xor
mov
ds
jle
cld
or
sub
mov
xchg
sub
mov
mov
sbb
lock
sahf
aaa
mov
call
add
pusha
fcomp
jmp
ja
sar
pop
cmp
daa
lea
je
fcom
dec
dec
jl
add
outs
mov
cmp
xchg
call
add
cmp
push
sar
add
cmp
xchg
icebp
xor
adc
mov
or
mov
imul
sbb
cmp
stos
or
jge
shl
imul
pop
or
mov
jb
fsub
(bad)
xor
mov
xchg
and
cmp
jbe
es
mov
sbb
inc
pop
push
mov
fild
ins
(bad)
or
inc
mov
mov
push
pop
jb
sbb
jb
mov
push
js
ds
inc
pop
inc
sub
enter
pop
inc
xor
add
std
xor
or
push
loop
loopne
cmps
xor
fisubr
clc
inc
into
(bad)
pop
mov
dec
stos
fmul
sti
cli
or
jae
push
(bad)
sti
(bad)
fld
xor
sbb
jb
sti
push
and
cwde
imul
adc
mov
push
sbb
sub
push
jmp
(bad)
pop
iret
ret
je
sbb
inc
dec
movs
movs
adc
add
leave
sbb
mov
(bad)
sub
xor
mov
push
or
fbstp
mov
(bad)
mov
sub
sub
loopne
dec
dec
push
jl
test
sub
clc
cmp
push
mov
leave
mov
loopne
or
lds
cmp
fbld
and
jp
pop
rcr
sub
push
fimul
push
data16
iret
sbb
scas
rcr
jmp
in
pop
(bad)
(bad)
inc
add
retf
cmps
cdq
lds
sub
add
movs
clc
jnp
xchg
push
jns
cmp
dec
dec
mov
call
mov
fisttp
inc
pop
mov
je
outs
dec
js
dec
cmp
and
pop
dec
sar
add
sbb
fimul
xchg
and
xor
cmps
shl
pop
mov
dec
fiadd
push
xor
pop
and
ret
xchg
clc
or
lds
mov
fdiv
inc
aas
mov
jbe
pop
sub
sbb
lock
pop
cs
jbe
(bad)
out
das
out
jb
bound
add
into
push
out
into
pop
les
sbb
pusha
inc
je
dec
les
jb
dec
adc
pusha
out
mov
sbb
push
pop
rcr
dec
push
call
mov
imul
call
and
aad
popf
or
ja
in
dec
push
sub
mov
repnz
fwait
jne
xor
xor
cmp
stos
add
push
popa
inc
loope
popf
neg
xchg
stos
xchg
xchg
scas
jns
sbb
je
sbb
mov
push
mov
pop
pop
push
popa
ins
lea
div
xchg
and
sub
jb
aam
lahf
jecxz
ror
push
js
add
mov
and
adc
ins
out
or
pop
xchg
mov
push
adc
out
jecxz
add
test
rol
and
mov
jns
iret
pop
test
ret
in
outs
daa
daa
fs
dec
loop
dec
mov
cmp
pop
or
mov
jle
xor
dec
push
out
or
in
adc
mov
lock
cmp
dec
xor
inc
cmp
mov
call
repnz
add
sub
jbe
popa
pusha
mov
mov
push
pop
ins
popa
push
mov
push
in
xlat
sub
jne
ficom
fsubr
cmp
(bad)
lahf
mov
add
into
sbb
out
(bad)
ret
sub
xchg
mov
mov
fadd
in
mov
ins
dec
stos
and
xor
mul
pop
fmul
pop
or
inc
hlt
sub
pushf
mov
mov
jbe
adc
fisubr
jmp
pop
add
data16
loope
popf
add
jmp
popf
or
push
fisub
pop
jne
mov
or
mov
dec
pop
xchg
inc
dec
xchg
push
out
jnp
cs
push
jae
sub
adc
dec
inc
adc
cmp
add
lods
jno
mov
inc
shr
mov
mov
jle
(bad)
out
(bad)
push
movs
xchg
adc
ds
push
movaps
test
and
inc
pop
pop
ins
fwait
cwde
mov
fld
(bad)
retf
sub
loope
pop
dec
dec
gs
std
mov
push
xor
sbb
mov
ret
aaa
sub
pop
test
popa
xor
adc
je
or
stos
inc
scas
aaa
mov
out
push
mov
jae
inc
sbb
std
lods
mov
cmp
cmp
js
adc
mov
dec
mov
add
pop
out
inc
in
mov
sbb
inc
mov
out
jp
out
inc
loope
mov
jle
fst
jbe
xchg
and
popa
in
mov
nop
pop
arpl
adc
stc
pop
in
dec
jl
gs
mov
mov
ror
add
je
imul
add
jmp
arpl
mov
call
sub
sti
xor
push
(bad)
sbb
fidivr
inc
mov
addr16
inc
out
test
jb
fadd
and
jns
dec
out
mov
add
inc
xor
test
mov
imul
shr
dec
mov
inc
ret
push
retfw
clc
push
shl
inc
mov
jl
xor
in
mov
jge
in
jns
and
out
push
(bad)
fadd
cmp
je
sbb
pop
jecxz
inc
in
(bad)
ds
jle
adc
pop
dec
jecxz
push
inc
push
out
push
leave
ins
or
enter
xlat
mov
rcr
sti
and
push
push
xor
lahf
cmp
(bad)
faddp
int
pop
sbb
(bad)
jle
pop
ss
bound
dec
retf
addr16
push
loopne
dec
out
add
and
inc
jae
(bad)
push
nop
and
adc
(bad)
and
ja
add
mov
push
es
push
sub
mov
test
sqrtps
inc
mov
pop
in
mov
push
fcom
mov
imul
inc
pop
(bad)
mov
mov
push
or
test
fidivr
cld
(bad)
fnstenv
cwde
sub
mov
aad
int3
add
in
mov
fdiv
cmp
cmp
dec
sbb
call
idiv
rcr
inc
lods
push
sub
inc
(bad)
cdq
jg
push
ja
and
dec
and
movs
pusha
cmp
xchg
adc
lds
push
les
retf
movs
xchg
jns
sub
in
fsubr
mov
xchg
jp
and
fsubp
in
adc
dec
icebp
inc
and
bound
dec
dec
push
(bad)
sbb
inc
sub
dec
outs
inc
mov
dec
and
outs
push
dec
jne
mov
adc
add
lgs
ret
dec
rcl
pop
(bad)
bound
clc
sub
in
ss
fisttp
sub
inc
test
(bad)
pusha
adc
cld
pop
dec
inc
dec
jnp
lods
cmp
adc
pop
bound
jo
inc
pop
out
sub
lods
leave
add
push
push
jb
or
mov
fwait
sbb
movhps
jne
push
jmp
dec
dec
pop
loope
pop
into
mov
mov
xchg
ret
or
xlat
js
cdq
sbb
cmp
loop
push
pop
test
sbb
imul
fdiv
push
sbb
push
pop
add
mov
mov
or
mov
mov
and
stc
jle
xor
adc
iret
mov
mov
les
jbe
mov
inc
fst
jo
push
imul
xchg
call
fsub
shl
fisttp
inc
jmp
mov
arpl
mov
aas
xor
nop
repnz
and
aas
jmp
dec
inc
sti
sbb
inc
mov
jecxz
nop
jnp
xor
pop
and
push
jns
mov
imul
lods
cmc
sbb
and
push
xor
out
outs
loop
ret
mov
sbb
sub
pop
push
scas
and
dec
daa
add
mov
loop
jmp
pop
xor
in
pop
mov
jns
jmp
cmp
iret
inc
sbb
call
fidivr
push
aad
js
jl
push
out
shl
mov
push
inc
mov
mov
jb
mov
stos
jmp
je
cs
mov
mov
mul
outs
jbe
mov
ja
outs
mov
dec
inc
psubsw
test
and
in
mov
fld
cdq
pop
inc
mov
jbe
loopne
pop
fsub
loopne
jne
test
imul
inc
xchg
push
icebp
test
mov
sub
push
mov
mov
shl
imul
repnz
push
add
or
jl
add
jo
popa
lds
dec
jno
inc
adc
xchg
cdq
pop
inc
push
push
fmul
and
sub
je
pop
mov
scas
dec
mov
addr16
lds
fwait
push
pop
mov
test
into
sub
push
ins
adc
sbb
out
scas
pop
shr
mov
xchg
jo
jg
mov
xchg
icebp
cmp
or
aam
xchg
inc
and
rol
and
daa
sahf
mov
add
mov
ret
or
stos
cli
ror
xor
push
jp
loope
sub
lahf
sahf
cdq
fistp
dec
mov
scas
movs
scas
jmp
idiv
ss
sbb
or
loope
cmp
mov
jmp
rcl
xor
or
mov
sub
es
inc
into
xor
sub
or
pop
ss
dec
and
add
mov
jmp
adc
cmp
add
call
popa
mov
and
mov
or
dec
push
sar
adc
pushf
ficomp
jne
enter
psubw
xor
jno
mov
inc
mov
div
dec
retf
and
cmc
fcomi
aaa
mov
cmp
sub
mov
pop
sbb
mov
mov
pop
jle
push
ins
scas
movs
bound
pop
lds
in
xchg
imul
push
daa
je
push
int
cli
jecxz
xchg
xchg
mov
dec
popf
sti
jae
mov
sbb
mov
outs
repnz
clc
and
(bad)
push
clc
jle
leave
in
test
mov
imul
sub
leave
je
or
(bad)
lods
shl
(bad)
mov
cmp
arpl
jl
int
xchg
ins
adc
imul
adc
jmp
adc
sub
cmps
push
je
sbb
retf
xlat
dec
out
cli
aaa
test
test
add
push
xchg
jae
mov
mov
xchg
push
pushf
sbb
cmc
rol
jne
stos
push
sar
scas
adc
xor
fdivr
mov
add
test
ds
push
stc
mov
inc
test
mov
fld
adc
jp
popa
pop
lods
rol
push
push
mov
ret
sub
aam
dec
mov
jg
lds
dec
mov
(bad)
jg
mov
add
(bad)
mov
(bad)
frstor
ja
push
jnp
sbb
sub
push
enter
ss
adc
hlt
and
xor
jle
jb
mov
ror
jb
sbb
cmp
daa
mov
dec
jnp
pop
jge
mov
mov
dec
sub
outs
lea
sub
dec
sar
js
movs
adc
jp
push
test
mov
das
ss
jmp
dec
ret
cwde
and
jmp
imul
add
in
sub
ds
push
rcl
std
xchg
daa
int
mov
call
je
outs
jge
mov
adc
shl
sub
sbb
mov
es
mov
pop
mov
retf
adc
mov
jmp
les
f2xm1
pusha
inc
and
je
mov
sub
xlat
inc
scas
(bad)
ins
mov
jmp
ret
cmp
jns
fild
mov
fldenv
test
(bad)
loopne
jno
xchg
mov
leave
shr
test
jbe
cmps
or
add
addr16
push
sub
test
int
icebp
outs
lods
ja
cld
shr
push
js
ds
jne
jl
sub
add
in
sbb
jmp
pop
sub
mov
xchg
sub
in
inc
push
lahf
inc
movs
jle
ja
inc
adc
imul
push
sbb
sub
daa
adc
jo
jno
push
popf
dec
call
add
loope
cmp
test
dec
je
pop
mov
repz
xchg
sub
jnp
stos
mov
push
fs
xchg
stos
mov
sub
mov
dec
mov
fst
das
xor
mov
cmc
mov
fst
sahf
sub
cmp
sbb
cwde
mov
test
push
clc
jb
dec
pop
ins
xlat
sbb
ret
adc
xor
push
adc
jnp
jl
and
mul
mov
fisttp
div
mov
das
int
mov
lea
inc
adc
(bad)
dec
xor
sbb
shl
or
fmul
stos
pop
mov
jmp
jnp
fwait
sbb
sub
push
cli
add
mov
mov
nop
mov
and
cmp
mov
popa
xor
nop
mov
out
std
or
fbld
cmc
jecxz
add
dec
shr
push
retf
push
mov
pop
add
dec
(bad)
repz
aas
dec
gs
mov
xchg
ss
pop
pop
jp
mov
int
inc
jnp
stc
mov
int3
xlat
fimul
(bad)
sub
sub
jnp
xchg
pop
or
out
es
fst
loopne
loop
jmp
es
xchg
icebp
mov
sar
mov
out
xlat
fld
cdq
cmp
gs
hlt
dec
pop
pop
cmp
aam
jno
(bad)
xchg
adc
xor
sub
daa
xor
loopne
cmp
push
push
retf
inc
je
mov
data16
mov
imul
ss
mov
ret
adc
pop
jmp
mov
mov
cld
xor
xchg
ret
dec
push
(bad)
cdq
loop
sub
stos
icebp
inc
dec
dec
addr16
cmp
call
jle
xor
jp
and
mov
fwait
inc
movs
enter
xchg
cmp
retf
add
jp
cmp
mov
mov
mov
mov
lods
jbe
push
ret
leave
sbb
dec
ror
cmp
xor
scas
ins
rcl
ss
jmp
popf
bound
add
test
cwde
jg
lods
sub
lods
aas
jb
ja
aaa
inc
or
ja
iret
add
jmp
daa
rcl
(bad)
mov
push
xor
sub
inc
movs
xchg
(bad)
xor
(bad)
fbld
repz
xor
lock
fdiv
std
call
dec
int
dec
add
sbb
shl
cwde
fiadd
mov
mov
call
es
mov
cmp
ins
inc
jge
stos
cmp
daa
out
adc
js
mov
(bad)
adc
cwde
loopne
rcl
js
dec
mov
mul
adc
sbb
pusha
mov
ja
ficom
(bad)
push
outs
adc
cwde
jl
data16
cld
jmp
test
xor
push
and
mov
xor
jecxz
cmp
lods
imul
push
std
push
inc
mov
sahf
inc
or
sub
sub
sbb
pop
popa
sbb
cmp
mov
or
in
daa
in
jl
push
cmp
pop
add
xor
and
sbb
iret
adc
mov
test
pop
(bad)
sbb
scas
ja
adc
cmc
pop
out
xor
repz
lea
mov
sub
and
mov
aas
adc
push
icebp
adc
cmc
pop
cs
mov
jle
or
or
sbb
mov
push
daa
inc
add
fistp
call
into
(bad)
(bad)
jnp
mov
sub
sbb
ror
jnp
loope
mov
dec
lods
test
xchg
(bad)
sub
jle
xor
repnz
shr
jge
inc
mov
cmp
test
arpl
test
pop
adc
aaa
and
gs
jo
pop
fbld
test
aad
mov
jmp
dec
out
(bad)
mov
mov
inc
call
mov
iret
inc
cmp
pop
(bad)
mov
push
xor
repnz
lea
dec
adc
popa
push
mov
push
lods
popf
ret
push
sub
hlt
push
mov
aam
mov
push
call
fist
adc
or
jecxz
jp
mov
and
and
mov
cmps
add
pop
es
jle
xchg
in
add
(bad)
sbb
loope
push
(bad)
sti
xor
inc
arpl
cdq
iret
ret
dec
mov
mov
sbb
test
xor
enter
mov
push
nop
repz
sub
jl
(bad)
out
adc
test
iret
inc
cmp
rcr
sub
add
pop
sbb
mov
cmps
push
test
dec
(bad)
or
xchg
mov
add
enter
cli
loopne
fisubr
scas
rcr
lods
aam
pop
idiv
push
sub
and
loop
mov
pop
xor
inc
push
jmp
sub
inc
push
pop
fwait
out
sub
sub
xlat
sbb
mov
stos
adc
inc
and
aam
scas
xor
leave
add
ret
cld
aas
hlt
sub
movsx
xchg
les
mov
sahf
lods
daa
inc
movs
loope
xor
test
das
adc
ror
or
in
inc
(bad)
gs
sar
mov
idiv
push
mov
stc
mov
in
icebp
mov
sar
pop
dec
je
mov
jnp
aas
pop
repz
pushf
jmp
cmps
push
mov
sub
xchg
ss
daa
icebp
inc
fs
mov
xchg
sbb
leave
pushf
jne
jecxz
test
dec
xor
test
(bad)
push
mov
cdq
mov
(bad)
jno
push
cmc
sub
add
out
clc
sub
lock
mov
push
(bad)
mov
test
fst
mov
dec
iret
mul
cdq
sbb
jo
stos
fstp
mov
push
adc
xchg
push
sbb
in
mov
test
stc
inc
jae
cmp
push
sbb
fnstenv
mov
popf
cmp
data16
ret
mov
ret
xlat
test
mov
pop
dec
(bad)
sar
retf
test
test
mov
ficom
inc
xlat
jns
dec
mov
ds
mov
int
leave
int3
enter
dec
movs
test
aas
iret
push
(bad)
(bad)
add
pop
loop
clc
imul
outs
sub
cwde
cmp
sahf
mov
popf
in
pop
fisttp
stc
lahf
push
inc
dec
sbb
mov
jne
sub
movs
dec
dec
and
mov
add
dec
mov
and
fxch
push
push
ret
sub
rcl
fdiv
inc
mov
push
aam
fcomp
pop
mov
dec
mov
push
jnp
popa
and
xor
adc
and
xor
or
push
pop
lea
mov
test
out
pop
sub
lods
call
into
call
scas
mov
(bad)
repnz
out
dec
or
mov
imul
push
cmp
mov
fwait
ins
std
retf
repz
xchg
pop
gs
dec
daa
enter
in
ds
in
cmps
or
stos
mov
mov
out
jns
xor
xlat
inc
sub
sbb
in
rcl
jg
push
or
sbb
stc
shr
call
(bad)
fdiv
rcr
dec
pusha
sbb
xor
ja
enter
mov
cmps
les
jbe
xchg
push
xchg
das
push
lock
mov
sub
sbb
pushf
adc
loope
push
adc
add
cmp
es
pop
xchg
in
xor
aad
jne
dec
ds
push
sbb
ret
out
int3
push
in
pop
or
or
add
add
inc
imul
sub
dec
inc
cmp
stos
xor
fadd
add
mov
int
mov
adc
lods
sbb
mov
adc
fsubr
and
repz
mov
cmp
loop
mov
fnstsw
sub
movs
pop
sar
and
lock
cmp
xor
das
jle
fs
xchg
cmp
outs
and
cmp
(bad)
sbb
movs
jb
adc
clc
jp
imul
ins
mov
mov
inc
xchg
mov
neg
mul
(bad)
mov
inc
test
dec
ins
jecxz
jmp
mov
cs
arpl
inc
adc
mov
imul
xor
push
sub
adc
inc
(bad)
stos
mov
rcl
sahf
cli
mov
(bad)
ins
cmp
les
pop
jle
cmp
adc
mov
inc
imul
cmps
cmp
sbb
popf
and
(bad)
mov
les
ss
mov
shr
retf
dec
xor
test
pop
scas
mov
cmp
jmp
js
push
shl
dec
pop
aad
scas
jbe
fs
mov
sub
cli
jle
enter
pusha
hlt
div
neg
inc
stos
aad
sub
and
pushf
xchg
inc
mov
xchg
xchg
std
shr
fist
test
fcomp
or
dec
sbb
test
aad
jge
mov
jg
add
lock
jle
cmp
(bad)
push
jmp
mov
hlt
adc
mov
gs
stc
idiv
sahf
es
sub
mul
cmp
sub
cmc
pusha
push
push
pushf
mov
mov
add
(bad)
or
imul
lock
loop
scas
dec
jbe
push
in
sub
adc
mov
or
es
scas
cmps
pop
add
cmp
inc
fcmovb
sbb
sbb
ins
jno
aas
imul
cli
ds
(bad)
add
sbb
sub
inc
in
sub
xor
xlat
popf
lods
mov
sbb
mov
xor
pushf
pop
call
fwait
and
dec
or
add
imul
xchg
mov
jnp
(bad)
xor
outs
fidiv
adc
std
sub
mov
scas
mov
ss
stos
add
outs
hlt
mov
add
or
scas
xlat
mov
jl
mov
stc
xor
sub
hlt
mov
sub
lods
test
and
jg
add
pop
jbe
cwde
stos
jne
adc
mov
adc
enter
jo
or
add
push
cmp
mov
mov
sti
push
add
mov
lock
clc
or
inc
cld
sub
inc
cmp
cmp
jmp
inc
push
rol
fimul
inc
pop
js
pusha
cmp
aad
dec
adc
test
pop
and
fs
ret
and
cmp
repnz
sbb
lods
(bad)
mov
outs
cmp
and
dec
movs
jbe
aam
ins
icebp
pop
adc
(bad)
dec
and
cmp
lahf
jnp
repnz
gs
mov
sbb
stc
fcom
(bad)
les
scas
mov
fist
sub
push
out
sbb
push
ret
daa
popa
pop
sbb
xchg
ins
jge
loop
jno
std
push
cld
stc
hlt
jmp
mov
repz
mov
pop
(bad)
sti
xchg
push
push
jmp
and
mov
and
xchg
ds
shl
cmp
ret
jnp
inc
test
jb
mov
les
cdq
adc
cmp
pop
ret
xor
(bad)
push
push
sbb
xchg
jbe
push
lods
stos
das
ss
retf
pusha
pusha
in
add
push
in
sbb
inc
adc
push
add
adc
sub
nop
jmp
sub
pop
adc
cmp
xchg
shr
imul
push
pusha
jnp
jno
and
pop
and
push
dec
xchg
pop
in
and
push
clc
in
sub
add
pushf
xor
iret
or
push
outs
dec
je
je
call
jg
test
inc
sbb
iret
pop
gs
xor
ss
mov
jmp
push
sub
nop
pop
push
xor
push
pop
jo
cdq
mov
jb
mov
push
inc
lahf
loopne
push
dec
push
add
in
(bad)
sbb
dec
addr16
retf
fist
cwde
test
dec
inc
out
sahf
jb
mov
add
lock
dec
scas
ret
dec
jg
push
jp
xor
add
cmp
inc
mov
pop
cmp
push
and
or
sar
sbb
mov
push
pop
leave
add
inc
push
dec
hlt
mov
mov
cmps
and
cld
mov
out
out
mov
aaa
pusha
(bad)
ins
popf
cmp
xor
dec
push
jmp
or
aas
sahf
xchg
xchg
jne
dec
mov
adc
cmps
pusha
lods
dec
sub
and
aad
je
inc
clc
mov
ds
xlat
shl
bound
stos
pop
aas
mov
mov
jnp
scas
and
dec
aaa
mov
ficom
sub
leave
lods
sbb
cs
cwde
jo
pushf
or
sbb
test
and
shl
iret
push
or
dec
inc
mov
stos
jg
and
push
jo
fnstcw
mov
mov
popa
rcr
sahf
popa
fimul
or
xor
pusha
push
push
daa
rol
mov
jmp
in
(bad)
scas
or
push
outs
les
outs
xor
sbb
mov
mov
(bad)
mov
mov
push
sar
dec
adc
pop
push
xchg
mov
push
and
jae
push
das
xchg
movs
mov
push
stc
xor
test
xchg
cs
cmp
or
and
out
add
mov
push
fnstsw
dec
xor
jns
loopne
loope
adc
adc
jle
cmp
push
sub
test
pop
in
and
movs
int
pop
sbb
(bad)
paddd
div
ds
fs
mov
sbb
sub
sbb
dec
pop
mov
test
sbb
push
pushf
aad
jge
fs
sar
adc
xor
aad
sbb
add
out
dec
ret
(bad)
lods
sub
pusha
jmp
jge
push
sub
mov
stos
adc
push
loope
and
ror
cs
pop
and
mov
pushf
js
call
xor
push
sahf
pop
mov
scas
jnp
test
mov
out
imul
stc
fwait
(bad)
cmps
or
sahf
adc
cli
imul
ret
inc
or
cli
mov
add
adc
aad
stos
fmul
ins
imul
outs
out
jle
or
push
stos
ficomp
push
mov
inc
ds
mov
inc
jmp
cmp
out
add
fs
rcr
mov
push
repz
or
dec
pop
dec
fild
outs
mov
(bad)
out
add
je
mov
adc
or
pop
sub
bound
and
sti
hlt
call
mov
std
jge
es
enter
bound
or
xchg
ret
cmp
pop
push
mov
fst
mov
jno
mov
shr
mov
jno
retf
fsubr
or
sbb
lods
cmp
loop
mov
inc
mov
and
pushf
push
add
(bad)
jle
xor
leave
mov
mov
mov
ds
inc
loope
add
or
xor
cwde
mov
dec
retf
ja
scas
scas
movs
cmps
xlat
fsubr
mov
inc
bound
pop
add
cld
xor
cmps
pop
out
sub
clc
xchg
jle
cmp
sub
inc
jnp
add
aam
adc
pop
iret
jbe
inc
inc
and
pop
cld
sbb
(bad)
or
xchg
jne
jmp
add
and
cmp
jmp
lahf
mov
push
bound
popf
repz
pop
outs
das
pop
mov
dec
and
or
adc
xchg
fnstcw
mov
aam
sti
test
sub
imul
or
mov
test
daa
pop
jnp
xchg
push
mov
mov
dec
pop
pop
hlt
aas
rcl
mov
mov
dec
jl
or
hlt
cmp
movs
(bad)
xchg
loope
ss
movs
xchg
and
aaa
out
ins
lds
mov
inc
xor
(bad)
fcom
stos
ficomp
addr16
movs
cli
inc
shr
xchg
div
pop
push
push
(bad)
dec
int
cmps
dec
cmp
and
xor
clc
jno
dec
cmc
pop
fs
mov
scas
ror
push
add
fstp
cmp
repnz
fadd
out
pop
and
movs
fcompp
jl
or
out
ret
arpl
ss
and
dec
rol
jne
xlat
push
stos
push
pop
cmps
pop
iret
mov
or
hlt
jb
dec
ins
ds
imul
xchg
bound
add
cmp
mov
dec
jo
jle
push
push
stc
gs
inc
jmp
mov
push
sub
cvttps2pi
cmp
mov
out
xor
test
add
dec
and
pop
clc
mov
or
leave
mov
aas
ror
es
xor
and
cmc
add
inc
push
pop
ret
or
repnz
sub
mov
shl
aad
lock
enter
mov
adc
add
enter
loope
jg
pusha
mov
bound
xor
dec
call
adc
dec
jmp
and
out
inc
xor
mov
test
or
xor
inc
pop
dec
clc
in
add
out
add
inc
push
xchg
add
sbb
cmps
jns
inc
mov
into
xchg
addr16
and
mov
out
cmp
in
jbe
pop
les
outs
sbb
sbb
lds
out
xor
scas
retf
mov
dec
shl
mov
push
dec
aaa
sub
(bad)
inc
outs
mov
inc
adc
dec
cs
add
scas
sub
imul
add
sbb
push
sti
cmc
dec
push
test
rcl
inc
sub
les
test
in
jp
mov
loop
sbb
retf
sub
and
(bad)
xchg
int
mov
sub
xchg
aaa
dec
nop
popa
jb
pop
jb
stos
cmp
xchg
adc
arpl
inc
outs
in
jne
and
mov
in
push
in
and
scas
mov
test
add
mov
xchg
outs
rcr
pop
std
fs
xor
inc
out
mov
in
cmp
ins
cmps
pop
neg
mov
xor
adc
mov
scas
mov
cmc
lods
outs
inc
les
pop
mov
data16
push
popa
jo
dec
jle
stc
inc
inc
xchg
xchg
adc
inc
push
repnz
jmp
ins
daa
shr
and
sub
mov
mov
cmp
lea
cmp
inc
or
fbld
in
cmp
out
fstp
cs
push
cli
test
xchg
pop
push
adc
jecxz
inc
inc
push
das
push
jno
mov
into
inc
fs
jbe
ret
mov
outs
ss
(bad)
inc
clc
dec
neg
xor
pop
sbb
lea
loope
test
sbb
jmp
inc
out
inc
adc
jp
xchg
fdivrp
jmp
adc
test
xor
(bad)
mov
mov
sub
retf
lods
cmp
cld
push
lds
lds
(bad)
fbld
std
(bad)
cmp
fnsave
cmp
in
shr
or
ins
push
dec
lods
mov
or
jb
xchg
or
xor
call
sub
mov
sbb
jo
lods
and
and
add
scas
fldcw
mov
gs
inc
ds
outs
std
jno
and
stos
add
inc
pop
test
mov
call
mov
aas
push
gs
push
mov
aas
aas
sub
ja
adc
pop
jge
mov
mov
fnstcw
popa
sub
cmc
xor
stc
ja
mov
pop
jo
lea
or
popa
and
push
enter
cmp
push
pop
sub
(bad)
mov
pop
push
or
loopne
and
xor
mov
loop
adc
lock
movs
sbb
cmp
push
(bad)
mov
fidiv
movs
mov
xchg
or
cmp
dec
call
mov
ja
loop
movs
shl
push
push
cmp
sbb
sti
inc
(bad)
int
ds
inc
(bad)
pop
adc
jle
xor
pop
call
cmp
retf
inc
cmps
in
sub
popf
sub
fnclex
daa
sbb
dec
xchg
add
mov
pop
sbb
mov
call
jnp
outs
rcl
push
adc
imul
xor
pop
jmp
cmp
push
sti
sbb
sub
aam
cmp
pop
and
fs
jae
sbb
dec
clc
add
mov
pop
outs
ds
test
mov
shr
fsub
sahf
nop
add
and
lds
mov
ds
daa
mov
cli
inc
push
(bad)
jle
mov
or
dec
push
mov
dec
and
retf
(bad)
jge
mov
mov
push
stc
push
ins
sub
inc
fadd
jmp
pop
mov
jl
bound
mov
cld
cmp
jle
mov
xor
jg
adc
push
cmc
push
pop
sub
dec
sahf
loope
cmp
xchg
fdivr
mov
xchg
aaa
xor
mov
lahf
pop
les
sbb
jo
pop
and
fwait
aaa
add
and
cli
cmp
cmps
push
cmp
push
mov
pop
inc
loopne
pop
or
fs
jle
mov
popf
and
push
mov
loope
xchg
scas
xlat
push
mov
scas
adc
js
ds
push
mov
xor
arpl
sbb
into
add
and
movs
fwait
test
sbb
and
mov
(bad)
fimul
pushf
imul
and
fisttp
mov
sub
xchg
scas
cmp
dec
lds
adc
xor
adc
inc
add
cmc
push
test
pop
push
pop
daa
add
push
mov
push
sub
aaa
stos
xor
aam
mov
call
xor
sbb
xchg
sti
in
(bad)
mov
xlat
out
mov
aad
xchg
xchg
cmc
or
xchg
addr16
push
push
cmp
xchg
xchg
or
dec
push
rol
scas
or
loope
imul
lods
btr
xor
dec
xor
(bad)
(bad)
sub
jp
retf
fstp
jle
mov
or
mov
(bad)
jo
jmp
sub
cwde
sbb
add
test
sub
lods
(bad)
js
sti
jmp
pop
mov
not
mov
out
ret
in
dec
inc
(bad)
mov
std
jmp
and
out
inc
sub
imul
add
inc
fwait
add
cmp
mov
addr16
loop
addr16
ins
stos
sti
out
pop
dec
and
dec
jbe
imul
pop
scas
inc
add
repnz
scas
inc
mov
div
jmp
sub
pop
mov
imul
cmp
js
cmp
cli
daa
mov
add
and
pop
and
push
scas
mov
sub
cmp
ja
adc
pop
or
(bad)
jns
stos
in
xor
mov
mov
outs
mov
jmp
or
jne
dec
lock
stc
add
shl
sub
sbb
enter
out
mov
mov
jmp
cmp
lds
push
cmp
ds
mov
inc
addr16
adc
cmp
push
clc
scas
add
cmp
repz
mov
bound
inc
je
outs
adc
outs
nop
aad
call
das
(bad)
push
jmp
jo
dec
js
loope
pop
iret
dec
mov
std
sbb
inc
inc
push
inc
jge
pusha
adc
outs
dec
lods
jbe
push
push
(bad)
mov
or
or
jbe
xor
mov
cmp
cmp
imul
shr
sub
ret
(bad)
(bad)
mov
xor
shl
and
mov
xor
pop
and
imul
ret
sbb
mul
xor
mov
fistp
xlat
outs
cmp
add
lock
ins
inc
imul
pop
(bad)
adc
mov
cli
imul
add
lock
scas
sub
or
dec
pop
int3
jmp
loope
xchg
mov
mov
push
xchg
add
into
gs
imul
ins
mov
pop
inc
pop
mov
lock
xchg
pop
retf
mov
repnz
mov
adc
add
adc
xor
imul
leave
ret
mov
push
fcomp
adc
js
or
movs
aad
dec
push
lahf
ins
inc
sbb
loope
inc
ret
inc
(bad)
push
mov
(bad)
jne
mov
rol
mov
sahf
adc
call
push
aas
inc
xlat
adc
mov
dec
sbb
ins
jns
outs
cmps
inc
dec
mov
push
mov
rcr
jb
jge
pop
jmp
pop
arpl
test
xchg
div
test
add
(bad)
je
pop
xchg
pop
outs
or
pop
inc
mov
int3
pop
not
test
xchg
xchg
call
dec
daa
dec
jae
popf
cmp
mov
lea
aas
ffree
xchg
cld
and
jae
dec
adc
pop
push
mov
arpl
push
fistp
loopne
ins
cmp
out
lods
dec
and
frstpm(287
inc
sub
sub
inc
inc
dec
ficomp
mov
mov
or
push
dec
mov
loope
(bad)
xchg
pop
mov
xchg
and
jnp
dec
pop
xchg
bound
inc
scas
add
in
repnz
test
inc
dec
icebp
ins
mov
mov
rcr
cmp
shr
imul
in
cmp
jp
or
stc
mov
ss
js
push
js
scas
in
jp
mov
and
setb
mov
dec
push
mov
mov
lods
inc
clc
mov
in
mov
xchg
fstp
adc
fwait
push
pop
popa
xor
jnp
xchg
or
add
or
pushf
push
pusha
adc
retf
dec
xor
sub
xor
es
sbb
xchg
push
inc
push
pop
enter
add
je
jo
in
mov
xchg
call
pushf
xor
icebp
add
push
loope
lods
imul
xchg
push
in
mov
inc
xchg
jmp
push
fbld
add
ja
pushf
pop
mov
push
pop
hlt
frstor
cli
xchg
repnz
mov
mov
mov
(bad)
dec
jmp
int3
rol
mov
xor
fbld
loope
cs
fdivr
jne
test
cmp
cld
in
fidiv
mov
xchg
addr16
(bad)
or
movs
mov
pop
xchg
shl
adc
popf
xchg
bound
mov
ins
fcomip
aaa
xor
aam
imul
or
dec
test
push
dec
pop
or
lods
jmp
sahf
cmp
and
int
sbb
and
push
cmp
xchg
aad
repnz
adc
imul
inc
dec
ds
cld
fs
addr16
(bad)
stos
jle
adc
and
fidiv
movs
pop
arpl
mov
add
fldln2
dec
xor
push
cmps
sbb
or
outs
or
push
push
neg
lds
xchg
pusha
adc
stos
in
ja
cwde
jle
std
push
pusha
les
cwde
loope
xor
push
cdq
jl
into
repz
push
aam
xchg
lea
lock
sbb
cdq
mov
cmps
pop
jle
lea
sbb
and
xchg
out
aam
ficom
jmp
pop
loopne
shr
mov
loopne
pop
push
sahf
jo
mov
cwde
sub
mov
add
mov
adc
inc
fadd
sbb
int
popa
or
push
add
clc
imul
add
inc
fld
and
mov
cmp
fld
xor
pop
ss
mov
and
xchg
mov
xchg
jne
pop
and
inc
sbb
mov
cdq
out
and
cli
sbb
jp
mov
mov
ficomp
leave
mov
movs
or
mov
add
mov
(bad)
mov
adc
sub
pop
pop
mov
adc
xor
mov
cdq
mov
fst
call
mov
add
bound
mul
fucomp
mov
jb
cmps
cli
lds
fs
sub
pop
mov
sar
jl
je
nop
jmp
or
pushf
sbb
pop
mov
xor
aaa
in
push
sub
ja
out
mov
push
or
inc
das
cld
int3
cmp
addr16
out
lea
or
push
mov
inc
mov
push
bound
pop
push
gs
jg
(bad)
(bad)
mov
jns
test
fist
stos
dec
imul
ror
out
mov
(bad)
or
dec
or
push
in
xchg
xchg
mov
fwait
dec
mov
jb
mov
icebp
rcl
adc
xchg
bound
add
addr16
jl
inc
cwde
adc
mov
push
jbe
push
repnz
push
mov
pop
sub
rol
inc
jle
pop
pop
out
xor
bound
rcl
scas
gs
ins
es
ret
sbb
dec
mov
sti
dec
call
sub
mov
mov
sub
dec
lods
jmp
xor
retf
jg
cs
hlt
xor
sub
jae
cwde
icebp
pop
push
mov
jbe
xchg
inc
ins
retf
pop
les
inc
inc
hlt
or
inc
rol
adc
ror
inc
inc
shr
inc
in
mov
jo
pop
xchg
aam
js
js
inc
cmp
popa
add
dec
out
mov
mov
ss
or
cmp
mov
outs
pushf
xor
out
fnstcw
scas
inc
out
add
ss
retf
enter
leave
(bad)
jmp
fcmovb
outs
jmp
movs
mul
push
mov
ret
je
and
bound
int3
fwait
mov
in
push
sar
jp
test
or
and
test
les
(bad)
cmps
movs
inc
xor
inc
sbb
data16
pop
cmp
pop
enter
fbld
push
aas
dec
(bad)
(bad)
jge
retf
jg
stos
xchg
call
arpl
sbb
sbb
sub
adc
jecxz
mov
push
jmp
add
add
push
(bad)
jns
sar
xor
mov
xchg
scas
daa
lods
jg
leave
in
shl
int3
(bad)
adc
addr16
ss
mov
popf
sar
cmp
and
dec
push
add
mov
xor
push
aaa
mov
xchg
cli
rcr
hlt
mov
inc
out
adc
lea
stos
mov
and
loope
call
pop
inc
or
ins
das
inc
cli
imul
(bad)
imul
je
(bad)
push
push
jns
cmp
push
inc
aas
das
xor
hlt
jo
xlat
push
lods
mov
mov
in
mov
dec
adc
mov
fstp
dec
call
xor
(bad)
mov
jmp
or
inc
jmp
sar
push
cs
cld
imul
pop
xor
mov
dec
sbb
jge
enter
xchg
shr
add
cmp
mov
(bad)
movs
test
mov
xlat
in
cmps
sub
jns
enter
data16
cmc
or
out
xchg
push
inc
pop
mov
out
and
je
cmps
mov
and
ins
xlat
jae
inc
imul
je
dec
xor
data16
les
aam
aaa
shl
adc
fldcw
mov
mov
sub
cmps
setnp
test
lock
mov
fwait
call
test
test
or
in
pop
mov
loope
sar
mov
arpl
cmp
jge
add
mov
popa
addr16
aad
push
(bad)
sbb
and
sbb
adc
repz
sub
daa
mov
push
cmp
push
dec
ds
sub
push
pop
push
retf
push
pushf
lahf
scas
repnz
jle
fld
(bad)
fistp
push
or
xlat
sbb
arpl
cmp
ss
mov
iret
and
or
scas
mov
movs
mov
(bad)
jmp
popa
sbb
push
bound
cmp
cmps
push
inc
push
lds
jmp
repz
xor
mov
inc
imul
das
jae
xlat
or
xchg
sti
mov
aas
scas
sub
pop
aaa
sbb
jg
scas
cmp
and
add
loopne
mov
ja
inc
fadd
jno
rcl
pop
inc
(bad)
sub
xor
inc
and
in
leave
sbb
pop
ins
clc
out
push
dec
fmul
fisttp
sub
adc
hlt
cld
adc
push
cdq
lods
push
jl
outs
ret
push
enter
mov
dec
hlt
into
xor
push
cli
(bad)
cld
mov
arpl
lock
xor
adc
sub
fsubr
aaa
xor
(bad)
push
inc
dec
dec
push
jne
jle
jecxz
out
jmp
mov
dec
or
popa
call
adc
call
xlat
lods
fstp
pop
push
lahf
cmp
push
(bad)
iret
jge
out
mov
or
adc
pop
xor
test
outs
ja
lods
out
ja
ins
rcl
das
mov
cli
push
inc
mov
add
sbb
mov
dec
push
jmp
xchg
xor
and
test
cs
jmp
xchg
jl
and
mov
bound
jecxz
fcom
neg
jne
aas
bnd
icebp
add
sbb
pusha
into
fs
sub
cmp
jb
out
and
jbe
sbb
jmp
into
js
xor
inc
push
xchg
movs
shl
in
sar
movs
cld
in
sbb
cmc
sti
ror
jae
add
dec
inc
cmps
dec
sbb
popa
daa
jmp
add
fadd
sub
aam
fdiv
std
mov
add
mov
xchg
test
movs
push
idiv
repz
data16
(bad)
cmp
or
fwait
push
shl
jg
and
mov
jge
int
jmp
jl
shl
lods
pop
or
clc
out
and
lods
pop
dec
add
cmp
retf
mov
(bad)
mov
test
aas
mov
jne
push
push
outs
lock
mov
stc
fbstp
into
push
stc
mov
jo
and
xor
loope
and
outs
add
xchg
stos
je
push
or
and
das
mov
push
xor
add
lds
push
sbb
js
push
or
mov
ins
mov
rol
and
pop
out
ja
sub
popf
push
icebp
pop
mov
mov
adc
jp
repz
sbb
ja
push
(bad)
mov
push
pusha
gs
push
lods
stos
cmp
push
enter
push
cmp
or
sub
jo
test
cs
mov
fbstp
inc
or
mov
sbb
jno
xchg
cld
and
jp
push
xchg
movs
push
imul
sbb
cmp
or
dec
pop
cld
and
dec
popf
inc
adc
and
imul
xchg
push
(bad)
jno
mov
daa
and
bound
in
es
loope
jge
fs
ds
inc
enter
push
push
outs
fldz
mov
fnstsw
sub
xchg
xor
jo
inc
stos
and
fidiv
jns
xchg
ret
push
or
mov
mov
sar
jecxz
xor
(bad)
mov
jo
(bad)
xor
stos
outs
loopne
jle
test
pop
fidivr
shl
(bad)
fild
mov
push
add
sti
push
aaa
sub
dec
(bad)
add
push
inc
sub
sbb
dec
stos
ins
shr
jns
popf
aad
imul
adc
push
push
mov
dec
mov
jp
xor
test
call
add
or
pop
push
imul
inc
rcl
mov
cmp
in
pop
bound
mov
sti
mov
(bad)
xchg
push
mov
ds
sahf
inc
cs
dec
imul
test
push
mov
cli
push
imul
sahf
push
jl
ins
xor
cmp
out
in
stc
fcom
add
push
push
stos
call
sub
xchg
sub
rcr
add
int
pop
sub
(bad)
test
addr16
cmp
mov
xlat
cmp
ins
enter
imul
and
call
inc
dec
mov
mov
mov
pop
in
loopne
mov
fwait
gs
mov
(bad)
aam
test
cmps
pop
mov
(bad)
ins
sub
xchg
sbb
(bad)
imul
adc
cdq
pop
mov
xor
push
jge
(bad)
cld
out
dec
stos
bound
stos
fbld
shr
mov
jb
imul
out
mov
mov
jae
jg
adc
imul
add
dec
jmp
push
pop
addr16
bnd
(bad)
jno
shr
jmp
inc
or
xchg
jae
retf
jg
(bad)
mov
jmp
aaa
js
jge
lock
cs
pushf
dec
jmp
inc
fcmove
cmps
push
cwde
xor
call
inc
or
ss
(bad)
out
inc
in
push
mov
cmc
xchg
pop
call
fidiv
xor
jbe
lahf
enter
mov
test
cmp
es
push
out
pop
jl
out
adc
aaa
add
stos
je
ret
movs
mov
xor
aaa
and
add
dec
sub
out
jne
and
mov
inc
cdq
dec
ja
dec
(bad)
mov
mov
test
inc
jle
sub
sbb
jmp
fbstp
out
sub
arpl
dec
fmul
sub
pop
into
xlat
mov
jne
js
dec
repz
ds
or
dec
jle
xchg
stos
and
xor
sub
xchg
sbb
xlat
inc
(bad)
cmp
jno
jge
mov
cmp
ja
jnp
push
cmps
test
xchg
fild
inc
push
cwde
inc
inc
and
inc
pop
gs
sbb
sar
xchg
ins
push
idiv
sub
hlt
mov
cmp
inc
sub
out
aaa
loope
(bad)
dec
mov
pop
sahf
retf
mov
pop
mov
scas
loope
jno
in
pop
call
sbb
imul
sub
mov
or
dec
mov
or
mov
sti
mov
or
cwde
pop
fidivr
adc
call
pop
mov
adc
cwde
leave
add
test
(bad)
push
inc
int
out
mov
ss
sub
daa
jp
xlat
xor
mov
xchg
mov
repnz
lahf
popa
jne
mov
fiadd
fs
inc
mov
dec
jbe
enter
xor
fiadd
(bad)
ja
push
(bad)
or
pop
mov
mov
mov
scas
fbld
sub
loop
fsub
leave
cwde
icebp
mov
xchg
aam
scas
jno
loopne
pop
pop
cmp
sbb
sbb
add
mov
pop
xchg
bound
jne
pop
jmp
(bad)
cli
xor
mov
adc
inc
inc
inc
jl
cmp
movs
xor
push
enter
push
pusha
mov
or
pop
sub
cwde
cwde
cmp
mov
js
sub
push
pop
jmp
inc
and
xlat
adc
push
mov
mov
xchg
mov
jns
data16
adc
inc
iret
into
sbb
test
inc
addr16
data16
pusha
jno
sub
adc
cld
test
fcom
pop
scas
sbb
in
xor
mov
cli
retf
aaa
in
or
les
call
lahf
pop
aam
and
inc
out
cmps
jae
(bad)
jbe
inc
push
out
ins
call
pop
aas
inc
ret
jp
(bad)
stc
cmc
outs
rcr
data16
mov
js
ins
add
(bad)
retf
aas
inc
jnp
add
and
jg
push
push
cs
sbb
aas
jae
das
cli
push
cwde
pop
hlt
(bad)
bound
in
stos
cmps
call
aam
fld
mov
push
inc
sahf
push
(bad)
dec
je
xor
inc
cwde
mov
inc
add
mov
cmp
xlat
out
adc
inc
push
dec
popf
and
in
push
jnp
jns
sbb
enter
mov
mov
or
in
int
and
xchg
and
adc
jo
fwait
push
xor
jle
mov
pop
dec
rol
int3
mov
int
fistp
lock
dec
jbe
sub
jg
hlt
lods
adc
jbe
in
sbb
jg
jle
sbb
inc
ret
cmp
sbb
ins
sub
xchg
mov
inc
or
sbb
lahf
cmp
cmp
add
mov
fwait
xchg
jne
arpl
scas
mov
or
add
sbb
pop
fistp
sub
push
cmp
arpl
fwait
jp
test
and
jg
mov
(bad)
mov
test
je
mov
hlt
sbb
add
jne
jmp
pop
(bad)
xor
js
movs
iret
xchg
adc
add
mov
js
cmps
mov
push
mov
pusha
pusha
jl
inc
or
aaa
adc
sbb
xchg
jae
(bad)
iret
xchg
imul
mov
mov
fs
int
xor
hlt
pop
pop
adc
sbb
or
dec
cmp
repnz
fst
(bad)
jo
test
ja
push
push
or
and
push
pop
in
xchg
and
popa
retf
push
dec
ins
mov
jl
ret
std
sub
rcl
int3
repz
push
test
jle
les
inc
or
or
pop
lods
dec
mov
mov
mov
scas
ins
std
mov
mov
mov
cmc
(bad)
jno
mov
jle
add
cli
push
rcr
jg
push
jbe
jl
ds
sub
inc
xchg
and
pusha
sbb
mov
loopne
jp
mov
xchg
adc
adc
pop
mov
out
xchg
fisttp
inc
xchg
sar
xor
dec
mov
stos
loope
pop
div
imul
mov
test
xor
cmp
movs
mov
scas
cmp
cmps
mov
out
jmp
mov
xor
jo
out
out
pop
pop
push
sub
adc
out
push
xchg
inc
push
imul
cmp
jmp
mov
jle
mov
dec
xchg
mov
mov
fs
and
mov
adc
push
sahf
mov
push
dec
(bad)
nop
dec
dec
sub
mov
cmp
ror
dec
dec
aas
xchg
mov
loopne
jne
jb
push
pop
inc
mov
jo
in
and
sub
pop
test
daa
xchg
add
cmp
pop
gs
je
push
push
aas
jno
jne
call
mov
push
push
cs
sbb
mov
(bad)
clc
(bad)
sti
and
sbb
je
fs
and
mov
mov
or
(bad)
mov
pop
enter
push
sbb
clc
lahf
outs
sbb
sbb
jecxz
clc
(bad)
lea
xchg
sub
jno
push
and
jb
jmp
add
retf
gs
and
pushf
ja
push
ret
pop
stc
cli
movs
xor
stos
popf
xor
pop
push
xor
gs
retf
daa
and
sub
pushf
repnz
aad
lock
loop
xlat
rol
clc
rcl
outs
xchg
pop
mov
jmp
enter
jp
jl
fsub
and
xlat
imul
jg
dec
xor
sbb
fwait
inc
rcr
lock
shr
iret
std
xor
test
icebp
aaa
inc
pop
shl
sbb
(bad)
ror
lahf
daa
push
cli
fimul
movs
sub
cwde
pop
dec
and
mov
push
fild
mov
mov
ret
in
pop
ror
addr16
pop
sub
mov
aaa
das
jnp
jne
lds
adc
mov
cmp
xlat
dec
mov
retf
ss
mov
dec
dec
out
into
je
fistp
cwde
lds
lods
vphaddubd
pusha
push
sbb
or
pop
dec
mov
sbb
xor
pop
mov
idiv
xchg
leave
sbb
int3
pop
push
lds
sbb
int
and
ss
push
leave
cmc
dec
popf
push
xchg
rcl
sub
cmp
sbb
pop
mov
dec
scas
(bad)
std
mov
mov
mov
loopne
loop
push
outs
cmp
shr
sub
cmovae
ror
mov
rcr
loope
ins
enter
dec
jecxz
jp
fmul
inc
inc
cld
jge
mov
bound
dec
fild
jle
(bad)
jle
test
mov
fmul
frstor
push
pop
xchg
xor
mov
pop
stos
or
mov
outs
add
add
pop
xchg
out
inc
xor
xor
mov
push
xor
in
popa
stos
or
cmc
xor
mov
fimul
ja
push
jo
sbb
jle
xlat
inc
test
lods
fcomi
icebp
xchg
dec
sub
and
adc
push
mov
lods
cwde
mov
push
add
dec
push
sub
or
mov
pushf
movs
pop
js
xor
push
push
cmps
cmp
jno
xchg
sbb
and
xchg
mov
adc
hlt
mov
pop
test
adc
push
mov
data16
jmp
mov
outs
push
shl
jne
inc
sbb
lds
iret
fstp
inc
cli
mov
rcl
call
(bad)
fsubrp
mov
fsub
and
push
fdiv
data16
into
adc
in
out
inc
adc
pop
addr16
pop
loopne
fcom
lods
add
and
scas
cmps
ret
sub
retf
sub
syscall
test
fsubp
jmp
pop
dec
xor
pop
stc
inc
das
mov
or
ret
sbb
jbe
inc
mov
dec
xor
mov
call
call
jl
cmp
in
xchg
push
out
cmc
(bad)
push
jns
xor
jmp
icebp
fcmovnbe
das
inc
jle
push
jb
mov
push
call
(bad)
dec
fistp
das
fist
dec
xor
cmp
cmp
pop
imul
pop
pop
mov
shl
or
inc
lock
out
ret
fcomi
movs
mov
xor
lods
pop
sub
fisttp
repz
jle
cld
iret
and
cmps
cmps
fs
loop
or
mov
int3
fwait
lods
pop
rep
or
push
popa
idiv
xchg
mov
push
cmp
adc
aad
jmp
out
jle
retf
and
xor
mov
adc
pop
sub
and
out
dec
mov
jmp
int3
(bad)
xor
inc
loope
es
mov
leave
or
in
stos
push
sub
or
inc
dec
arpl
xchg
in
mov
mov
ja
jb
test
mov
ins
mov
inc
adc
test
xchg
inc
pop
push
sti
mov
xchg
push
mov
add
or
call
mov
sar
test
enter
in
out
das
cmp
sbb
push
stc
movs
xchg
pop
scas
pushf
sahf
icebp
sti
cli
xor
fldcw
sub
aas
popa
adc
xor
popa
aad
adc
xchg
pmuludq
call
fadd
adc
mov
sub
inc
into
dec
fdivr
stos
shr
in
xlat
add
pop
dec
push
inc
cmp
mov
loop
daa
sub
aaa
fdivp
js
loope
inc
shl
mov
push
in
mov
sbb
nop
and
int3
neg
fsincos
fisttp
jmp
setg
shl
or
int
push
out
out
ss
scas
ds
mov
xor
and
inc
test
(bad)
loopne
mov
outs
xchg
stc
gs
clc
fnstcw
not
mov
lea
push
movs
call
sub
mov
gs
or
iret
jecxz
cwde
inc
loopne
mov
pop
push
add
imul
adc
and
aaa
and
add
repz
dec
pop
ror
aam
pop
repnz
aaa
adc
mov
xor
mov
inc
dec
out
fsubr
add
mov
push
inc
aam
xor
idiv
fidiv
(bad)
cld
gs
out
xchg
retf
mov
xchg
imul
mov
xchg
shl
sbb
arpl
mov
push
jmp
sub
retf
sub
pop
das
in
sub
mov
std
mov
enter
mov
cdq
pop
or
fdiv
(bad)
ds
mov
sar
sbb
xor
addr16
cmp
mov
mov
(bad)
jo
std
jno
push
sti
(bad)
clc
je
xchg
push
adc
repz
std
std
push
dec
out
mov
push
and
push
js
jae
shr
mov
imul
xchg
mov
add
adc
pop
sbb
lods
loope
shr
clc
jo
push
sbb
pop
shl
sub
mov
pop
into
inc
call
sbb
gs
pop
(bad)
int
add
push
jmp
fucomip
dec
mov
les
(bad)
sbb
add
xor
icebp
dec
xchg
mov
outs
nop
push
inc
not
jmp
pop
mov
cmp
fcmove
mov
add
ret
mov
jns
jp
cmps
dec
fld
iret
ins
in
xor
in
mov
mov
cwde
mov
mov
and
in
inc
add
(bad)
dec
dec
cmp
scas
mov
or
xchg
or
push
inc
sub
xor
popf
dec
(bad)
out
lods
call
xor
into
jg
mov
dec
and
test
out
call
iret
xchg
push
fbstp
cmp
pop
mov
(bad)
ds
cli
mov
aad
stc
and
mov
sbb
inc
mov
push
ret
push
jno
adc
sub
mov
test
dec
xor
(bad)
imul
jb
lods
lods
scas
or
xor
sar
and
ss
leave
inc
dec
xchg
cmp
mov
pop
out
jno
hlt
(bad)
adc
pop
mov
js
push
push
lahf
imul
retf
mov
cmp
cmp
dec
loop
imul
dec
bound
fistp
jns
outs
in
addr16
hlt
adc
(bad)
mov
sub
dec
enter
ss
dec
lods
xor
cmp
dec
(bad)
jbe
inc
call
cmp
leave
scas
push
ret
mov
and
jg
jbe
sbb
pop
std
add
lds
gs
ror
and
push
(bad)
call
cmp
(bad)
mov
fcom
xor
int
or
mov
sti
cmps
add
and
mov
cwde
dec
sub
shr
scas
pop
add
and
jg
push
(bad)
jge
jns
lods
sub
shl
xor
into
push
ret
fcom
and
mov
out
sub
mov
sbb
pop
sub
xor
data16
pop
aaa
mov
out
push
cmp
sub
rcl
inc
test
push
dec
xchg
clc
or
out
mov
inc
pop
es
pop
jecxz
push
jne
sub
pop
xchg
xor
shl
(bad)
jmp
cmps
mov
(bad)
out
inc
xor
mov
adc
inc
repz
les
mov
xchg
pop
not
jo
dec
dec
gs
jne
and
aas
xor
jb
adc
jge
sahf
xchg
xor
test
push
jcxz
and
movs
daa
les
pop
inc
and
rcr
or
mov
dec
js
int
xchg
call
mov
adc
ss
sahf
out
mov
cdq
push
mov
xor
ret
push
jne
ss
add
mov
dec
pop
rcl
enter
inc
fwait
pop
cmp
and
jmp
jb
xchg
adc
int3
scas
mov
mov
cdq
ins
cmp
mov
or
xor
ins
test
fist
push
lahf
mov
ins
scas
imul
lea
push
or
jb
xor
mov
or
ret
pop
rcl
call
add
mov
iret
mov
xchg
pop
ficom
lea
and
enter
std
mov
lock
dec
js
jmp
mov
test
xor
adc
pop
adc
pop
aaa
mov
jle
pop
scas
xchg
jmp
imul
ds
inc
int3
(bad)
xor
dec
imul
movs
sahf
dec
ja
aaa
push
jl
push
xor
ret
fldenv
ja
arpl
push
and
ja
adc
lahf
and
out
in
fld
mov
(bad)
sub
and
iret
mov
pop
outs
jecxz
push
sub
pushf
pop
sahf
mov
sbb
jns
int
or
ss
mov
dec
movs
push
sub
add
and
addr16
cs
jmp
and
out
fisubr
mov
adc
in
mov
inc
and
shl
push
fwait
push
xor
inc
(bad)
xor
fstp
dec
js
lahf
or
pop
sub
retf
mov
push
fiadd
iret
in
pop
sub
pop
pop
call
gs
mov
es
xor
mov
sahf
mov
retf
xor
push
add
loope
call
aas
imul
mov
popf
fimul
lea
arpl
inc
and
inc
cmc
push
mov
mov
mov
xchg
outs
mov
jle
js
jb
fmul
(bad)
cmp
jb
fcmovnbe
popf
jp
add
dec
in
imul
loopne
lods
gs
(bad)
push
imul
repnz
mov
ds
(bad)
idiv
xor
sti
loope
xor
jnp
imul
fsub
sub
in
mov
sar
jno
sbb
in
vpcmpeqw
jbe
out
pop
out
jge
inc
pop
jb
pop
xchg
push
jns
push
test
mov
mov
cmp
mov
popa
loopne
in
add
push
pop
pop
rol
cdq
(bad)
mov
add
cmp
mov
ins
imul
inc
test
mov
xor
xchg
movs
pop
sub
push
mov
dec
sub
inc
mov
or
imul
das
dec
jmp
sahf
push
imul
xchg
sbb
stc
jp
mov
push
inc
adc
mov
mov
popf
cdq
and
and
outs
out
lods
add
pop
popa
in
icebp
out
in
clc
es
pop
dec
mov
lahf
mov
push
addr16
cmp
jmp
jns
adc
mov
dec
popf
and
call
or
jle
(bad)
dec
sbb
mov
aam
pop
and
fdivr
mov
sbb
mov
gs
retf
fld
es
dec
push
dec
jnp
jge
inc
push
mov
adc
test
xor
dec
cmps
and
int
(bad)
retf
sbb
inc
aam
(bad)
adc
(bad)
repnz
mov
(bad)
lods
gs
mov
scas
or
js
xor
jmp
sbb
push
icebp
dec
jnp
jne
push
div
sub
jmp
and
sbb
pop
hlt
inc
(bad)
loopne
push
mov
sbb
xor
pop
sub
dec
mov
outs
sub
mov
ror
jmp
mov
(bad)
add
jl
mov
ret
push
iret
sub
(bad)
adc
mov
dec
test
or
jns
aad
(bad)
jmp
popf
xor
mov
push
or
ret
mov
adc
call
adc
js
cmp
jbe
or
int3
lea
inc
call
pop
mov
rol
(bad)
jbe
push
aas
sbb
mov
ret
push
fst
dec
ss
pop
mov
out
pushf
xlat
les
test
nop
jno
out
add
xchg
fidiv
or
push
(bad)
or
sbb
mov
jo
imul
sub
movhps
fnstenv
cmp
jnp
mov
mov
add
dec
pop
add
add
or
xor
dec
test
ds
sbb
jno
clc
bound
imul
sbb
(bad)
pop
pop
inc
test
bound
ja
pop
jg
pop
pop
hlt
dec
scas
js
test
mov
inc
inc
lea
jbe
aaa
sub
clc
push
push
lods
jno
jmp
popf
mov
xchg
sub
fadd
push
mov
jo
in
inc
(bad)
xor
push
imul
jecxz
stc
add
jbe
out
std
sbb
or
sub
aam
repz
or
div
mov
shufps
ficom
jnp
cmc
into
jnp
js
(bad)
ficomp
xchg
(bad)
repnz
in
inc
or
mov
xchg
push
fisttp
aaa
or
cdq
jb
cmp
adc
cld
call
push
push
jmp
sti
js
fnstcw
mov
adc
mov
mov
mov
push
mov
call
adc
push
dec
jle
or
daa
cli
imul
pop
sahf
stos
add
and
xchg
je
fbstp
leave
sub
pop
jp
inc
xchg
ins
cli
(bad)
in
add
aas
(bad)
xor
fwait
adc
push
dec
sub
or
sbb
push
cli
cli
cwde
push
loop
lea
in
ret
fild
jge
loop
(bad)
cmp
icebp
fwait
je
dec
and
xchg
dec
pushf
and
out
mov
dec
add
cmp
sahf
push
mov
mov
retf
dec
hlt
mov
(bad)
ja
xor
or
ss
ror
jns
loope
mov
inc
adc
adc
loopne
daa
mov
pushf
add
cs
sub
nop
sbb
mov
xor
cmp
push
dec
add
jge
adc
fild
popf
pop
push
fidivr
or
push
cld
(bad)
mov
adc
in
ss
out
sahf
outs
mov
push
push
sub
aad
and
pop
sub
mov
xor
adc
repnz
mov
pop
shr
push
inc
adc
cld
sub
js
inc
jb
cmp
outs
jle
popa
push
and
inc
clc
out
push
aas
arpl
fld
add
mov
pop
jo
movs
call
icebp
in
sbb
jge
jmp
sar
fdiv
(bad)
mov
aas
out
ret
inc
push
out
hlt
add
repnz
cmps
pop
cld
xchg
pop
(bad)
cmp
cmovle
cmc
mov
fs
inc
jp
int3
sub
inc
fld
push
adc
icebp
ret
mul
xor
dec
sub
std
mov
test
inc
mov
cmp
inc
std
xor
scas
adc
cmp
popf
ds
xchg
fs
aaa
and
mov
mov
mov
shr
loop
mov
repnz
and
xlat
stc
mov
jo
xchg
popa
pop
in
cli
loop
rcr
dec
(bad)
test
push
sub
loopne
jbe
and
enter
dec
fidivr
addr16
adc
addr16
sub
dec
int
sbb
pop
mov
mov
pop
xor
popa
pop
jns
xor
inc
sbb
sub
mov
and
stc
les
retf
aam
popa
(bad)
xchg
xchg
cmp
test
jmp
cwde
cwde
add
in
lds
mov
pop
jnp
jp
jmp
movs
gs
or
xchg
(bad)
(bad)
mov
push
daa
mov
fnstcw
add
ficom
dec
out
inc
jns
or
daa
cmp
sub
in
pop
sub
arpl
loope
push
(bad)
push
les
aas
lea
cmp
mov
cmp
mov
add
sti
pop
xor
cs
repz
mov
cmc
and
and
adc
test
(bad)
data16
ror
test
push
pop
out
pop
mov
cmps
pop
movs
pop
adc
push
dec
add
dec
xlat
xor
(bad)
out
in
test
cmc
sbb
jno
js
mov
push
inc
data16
and
popa
das
loopne
mov
mov
sub
cmp
dec
adc
jg
das
cmp
mul
push
out
mov
bnd
cmp
mov
push
dec
cmp
mov
adc
xor
xchg
dec
shl
out
sub
xor
imul
(bad)
sbb
cmp
test
xchg
pusha
mov
xor
xchg
mov
inc
mov
ret
out
mov
sahf
xchg
push
xchg
push
mov
in
fnsave
adc
add
xor
movs
lods
ret
cld
mov
in
inc
cmp
sub
iret
(bad)
(bad)
xor
mov
inc
inc
push
cmps
imul
call
mov
mov
xchg
stc
mov
cmp
and
pop
ja
test
mov
into
into
aam
push
shl
call
sub
jmp
out
fstp
jge
ds
and
scas
aaa
add
push
loope
or
loopne
sub
pop
xchg
ja
or
mov
and
jl
mov
add
nop
aam
inc
idiv
(bad)
and
cmp
js
popf
xor
pop
rol
xchg
jne
pmulhw
ror
xor
pop
dec
cmc
and
push
jmp
jmp
cmc
inc
mov
daa
pop
fs
ds
test
enter
in
and
imul
movs
clc
(bad)
inc
pop
jp
inc
(bad)
jbe
jns
mov
jmp
test
shl
and
into
sub
sbb
sbb
loope
lods
jg
mov
gs
and
and
in
inc
(bad)
arpl
or
js
xor
jmp
dec
inc
sub
mov
dec
and
out
das
push
push
fisubr
daa
xor
ins
and
mov
cdq
leave
mov
dec
fcomp
jbe
ss
dec
sbb
ret
js
(bad)
sbb
into
xlat
inc
push
cmps
pop
cmp
mov
fsubp
push
test
ja
shl
jae
adc
jmp
sub
or
xor
adc
ret
into
sub
mov
jnp
das
cmp
adc
test
(bad)
fst
mov
mov
jl
xchg
add
mov
retf
in
and
mov
les
ja
push
xor
out
or
stc
xchg
arpl
adc
push
adc
movs
int3
(bad)
cmp
cmp
push
dec
repz
cmc
fs
movs
hlt
mov
lahf
push
mov
dec
pusha
cmp
ja
xor
sub
ja
and
cmp
outs
add
mov
xchg
inc
jnp
shl
jp
jmp
mov
adc
inc
jmp
cmp
jne
je
sbb
mov
out
jg
ins
mov
loop
inc
cmp
popf
xor
jmp
sbb
sbb
add
or
sti
out
mov
add
mov
jns
sub
std
sub
or
cmp
and
je
or
jg
cmp
iret
ss
std
and
test
sub
clc
sub
int3
mov
jns
enter
xchg
test
shl
add
mov
mov
adc
add
stos
fiadd
and
(bad)
movs
xor
or
push
push
call
mov
outs
inc
add
pop
lahf
pop
pop
popa
popf
add
enter
mov
mov
mov
mov
pop
lea
repz
scas
mov
sti
add
test
stos
jmp
repnz
xchg
jmp
pop
enter
leave
xchg
cld
jne
pushf
xchg
fadd
outs
imul
sahf
jg
imul
ins
gs
dec
add
add
pop
mov
outs
je
mov
jle
imul
ja
mov
push
and
hlt
adc
test
push
movs
jo
leave
or
jle
call
cs
lds
xchg
sbb
mov
push
cs
cld
adc
push
sbb
and
mov
jae
mov
loop
xor
cmp
mov
mov
or
cs
xchg
dec
cmp
adc
imul
mov
or
pop
inc
lock
dec
fdivr
push
jle
or
repz
mov
xchg
mov
xor
and
mov
mov
dec
push
neg
ffreep
push
or
sub
cmps
cmp
jno
pop
imul
and
jo
xchg
mov
enter
jb
xchg
std
mov
xor
je
leave
imul
rol
sub
jp
xlat
jmp
jge
mov
in
sar
(bad)
ds
mov
inc
mov
outs
jg
mov
retf
mov
cmc
clc
xchg
in
pop
je
adc
mov
mov
pop
jo
xchg
sbb
xchg
or
pop
cmp
cmp
mov
pop
mov
test
cmp
xor
(bad)
push
ins
add
jmp
dec
sbb
ins
jb
add
jne
mov
inc
loop
mov
push
pop
hlt
sahf
jne
aad
pop
stc
and
pop
rcr
pop
sbb
jl
dec
adc
sub
mov
test
jne
mov
and
movs
call
fdivr
push
mov
mov
and
cmp
je
sub
(bad)
les
jae
call
iret
loope
adc
inc
xchg
push
js
pushf
cmp
popf
jmp
jno
add
bound
es
popa
sub
push
or
(bad)
or
xor
and
scas
jns
fadd
xor
es
es
cmp
or
(bad)
outs
stos
sub
sbb
or
sbb
mov
cmp
mov
daa
pop
movs
push
mov
push
lea
pop
mov
xlat
dec
xchg
xchg
dec
jle
sbb
cmps
call
lods
outs
shl
leave
out
inc
pop
out
sbb
add
es
loope
rol
nop
daa
(bad)
stos
inc
xor
adc
scas
ins
(bad)
sbb
call
dec
ja
mov
imul
and
xor
fist
aad
ins
mov
adc
sub
jmp
loope
inc
enter
retf
aas
jle
jle
inc
cdq
fimul
cld
add
or
out
fldenv
popa
fisub
sub
mul
pop
add
movs
lahf
jge
rcl
cmp
cmp
cmp
mov
jecxz
cmp
out
ror
push
sbb
fld
lea
outs
mov
rcl
dec
pusha
push
fidiv
cmp
xchg
ins
lock
bound
adc
and
(bad)
mov
xchg
jmp
leave
xor
mov
jbe
out
jmp
jmp
xchg
pop
or
pop
mov
xchg
dec
in
adc
fmul
gs
and
push
jle
mov
push
out
cs
sbb
mov
xor
and
inc
daa
cmp
lock
stos
lock
pop
and
aaa
mov
scas
jbe
ds
lea
addr16
adc
adc
aam
(bad)
jmp
loopne
into
cmp
sub
sar
fwait
jmp
jbe
jno
es
mov
sbb
inc
out
shl
push
call
cmp
xor
gs
cmp
imul
mov
add
add
add
scas
sbb
mov
ds
es
push
stos
mov
mov
(bad)
push
push
enter
sub
add
add
shl
daa
cs
adc
movs
mov
or
ret
(bad)
xor
jns
push
jno
adc
push
push
iret
jo
push
add
lock
jp
push
or
jno
sti
(bad)
vgetexppd
ja
jmp
mov
jmp
sbb
mov
retf
inc
jle
retf
(bad)
std
retf
mov
mov
adc
inc
mov
fbstp
dec
or
pop
call
inc
dec
ret
int
sbb
mov
daa
sbb
(bad)
(bad)
cmc
clc
retf
mov
div
pop
push
push
and
push
xchg
out
sbb
mov
scas
adc
addr16
mov
retf
stos
xor
int3
mov
lods
pusha
jno
or
and
cmp
jmp
inc
mov
shl
pop
xor
sub
movs
in
sub
add
mov
xlat
lea
push
repz
inc
pop
std
inc
stos
jmp
fist
loopne
mov
dec
dec
cmp
push
popf
inc
mov
sub
mov
fmul
arpl
add
lock
and
push
stos
push
sub
fld
mov
cmp
stos
dec
xor
clc
adc
in
sbb
jbe
push
sub
inc
test
pop
loop
into
inc
push
sub
rcr
fimul
ja
imul
jecxz
ret
mov
aad
sahf
punpckhdq
push
or
mov
(bad)
imul
xchg
aam
(bad)
xor
bound
push
dec
out
sbb
cmps
push
scas
idiv
cmp
pop
and
lahf
dec
inc
mov
out
sub
lods
loope
pop
push
inc
inc
push
jb
mov
ja
retf
push
mov
ds
sub
das
and
xor
scas
sub
mov
cmps
adc
mov
(bad)
push
mov
jle
or
scas
jl
bound
mov
and
pop
xchg
js
add
pop
repz
outs
xchg
cmc
ins
sahf
jg
aam
fldcw
jmp
daa
test
pop
jb
sub
xchg
cmps
xchg
in
and
and
fs
shr
adc
fcomp
call
shl
push
mov
int3
das
int
mov
arpl
aas
fisub
aaa
adc
(bad)
retf
call
sbb
dec
push
popf
and
push
xor
xchg
nop
mov
cmp
cmp
retf
mov
sar
mov
retf
int
cld
xor
in
xchg
jge
mov
ror
fdivr
sub
push
xchg
push
cli
push
iret
xchg
cmp
pop
mov
mov
retf
and
into
outs
cs
cdq
dec
xor
mov
sub
mov
adc
adc
dec
sub
dec
mov
(bad)
daa
imul
sub
(bad)
(bad)
in
cmps
(bad)
inc
fcomi
mov
les
pop
loopne
add
mov
sbb
daa
mov
out
mov
cmps
jp
mov
push
popf
data16
add
aam
pop
or
cmp
lods
outs
push
retf
mov
or
test
push
mov
add
loope
mov
push
test
xor
test
sbb
inc
loop
mov
adc
sbb
mov
int
jbe
aas
aam
sar
aam
xchg
jmp
jmp
mov
cmp
stos
sar
fld
adc
push
and
xchg
in
jb
in
add
addr16
xchg
xor
addr16
adc
out
dec
xchg
cmps
mov
fwait
(bad)
push
popa
ss
and
jns
jmp
jb
pusha
mov
int
out
fs
cmp
aas
iret
repnz
sbb
jno
cmp
ja
push
aam
add
push
data16
icebp
lahf
setl
mov
sbb
push
pushf
inc
mov
jns
mov
mov
gs
add
jmp
push
fbstp
xor
mov
and
xor
jne
or
std
adc
sbb
jecxz
jp
mov
pop
push
(bad)
xchg
jno
pop
addr16
movs
pop
pop
push
xor
cmp
stc
test
jb
test
jae
pusha
ss
les
ja
xchg
loopne
jae
mov
dec
inc
(bad)
mov
push
pop
cmps
adc
lods
push
sub
cli
or
xchg
mov
pop
int
push
in
(bad)
addr16
sti
cld
add
dec
ss
cli
jge
adc
bound
repnz
cmp
adc
pop
add
adc
or
clc
(bad)
divps
inc
shl
fnstsw
sub
scas
out
xor
movs
aam
in
jbe
add
int
mov
jne
pop
jp
ins
bound
ins
sub
sti
movs
test
shl
fnstsw
push
pop
icebp
sub
xchg
inc
jp
sub
out
sub
xchg
push
xchg
lods
mov
dec
push
xchg
adc
scas
mov
movs
mov
shl
out
push
rcr
stc
sbb
fdivr
les
sbb
fild
pop
(bad)
imul
push
pop
cmp
nop
pushf
not
adc
mov
jb
dec
jnp
and
add
xchg
push
adc
sbb
out
fwait
and
pop
lods
and
(bad)
jb
inc
mov
out
rcr
daa
mov
loopne
retf
stos
(bad)
sbb
jmp
ins
je
jle
mov
sar
call
jecxz
in
pop
jmp
data16
push
scas
scas
sub
add
cli
repnz
and
lahf
xor
addr16
pop
or
sahf
push
iret
pop
inc
or
inc
inc
cmp
mov
sar
inc
popf
icebp
and
out
loopne
dec
mov
bound
dec
push
imul
push
dec
mov
jl
cmp
xchg
jae
sbb
mov
fcmovnbe
and
xchg
(bad)
fdivr
scas
jne
mov
xor
inc
mov
js
cld
icebp
xor
stos
sub
scas
imul
mov
call
inc
idiv
mov
ror
sub
jg
mov
popa
cmp
lods
repnz
dec
mov
pop
jle
dec
sub
sub
cmc
jne
stc
or
push
jmp
test
ja
sub
cs
dec
mov
jle
mov
cdq
nop
sahf
jmp
outs
push
adc
dec
mov
inc
xchg
add
ror
imul
lea
fimul
cmps
imul
les
or
sub
in
mov
gs
loop
and
mov
popa
add
and
popf
out
jnp
sbb
jecxz
jecxz
aad
pop
push
sbb
lods
push
push
pushf
std
inc
pop
retf
test
adc
mov
scas
push
dec
mov
ja
pop
leave
es
push
jnp
ror
inc
jge
rol
cmp
xor
xor
mov
out
sbb
mov
add
outs
sub
push
pop
sbb
mov
push
ficom
les
mov
pop
ror
fs
call
inc
retf
xlat
rcr
(bad)
xchg
sbb
loopne
imul
idiv
push
lea
out
mov
inc
scas
js
(bad)
js
in
jge
cmps
push
cmp
pop
jae
mov
imul
inc
inc
adc
push
xor
shl
mov
(bad)
mov
ins
cdq
ret
pushf
in
enter
push
cwde
sbb
cs
cld
retf
mov
cli
push
adc
(bad)
addr16
mov
ret
cmps
sub
das
push
shl
fdivr
or
dec
inc
fisub
mov
sahf
ret
call
mov
movs
mov
inc
jg
movs
test
test
add
retf
mov
cli
ins
hlt
mov
retf
mov
shr
movs
cmp
sbb
and
jge
mov
inc
shr
pop
push
rol
fisttp
jmp
out
push
push
movs
rol
in
call
inc
jle
movs
out
xor
and
or
fild
push
fxch
sbb
in
mov
adc
adc
adc
or
cdq
movs
cdq
inc
arpl
mov
push
jl
xchg
inc
push
cmp
pop
sbb
inc
cmp
sahf
mov
loope
dec
mov
clc
or
ins
sbb
imul
lea
mov
lock
clc
cmp
popf
addr16
out
aad
mov
dec
into
aas
std
inc
sub
jns
stc
ret
dec
jle
jp
(bad)
dec
inc
mov
xor
xchg
aam
loope
push
or
fnstsw
sub
xor
mov
loop
pop
cmp
fsubr
cdq
mov
bound
fcmovb
(bad)
jl
xchg
mov
jbe
clc
pop
ret
or
jmp
test
fisub
xor
adc
call
scas
push
js
js
mov
cmp
lods
jnp
sub
add
mov
push
mov
mov
mov
bound
inc
daa
add
xchg
retf
into
test
mov
xchg
stos
dec
clc
out
retf
mov
push
xor
fs
loope
pop
push
outs
sar
or
push
aas
or
mov
aam
fadd
xor
arpl
shl
inc
mov
mov
lea
jle
mov
rcr
push
mov
out
mov
fiadd
mov
push
ret
cmp
jmp
jbe
dec
aas
mov
and
push
test
jne
popf
mov
jge
jns
add
inc
sub
aad
inc
mov
gs
es
push
mov
aam
pop
mov
fbld
lock
xor
cmp
jle
cmp
ja
adc
sbb
push
scas
clc
imul
fnsave
pop
sti
cmp
inc
inc
out
pop
dec
sti
lock
lods
cli
(bad)
sar
test
lds
stos
push
and
pushf
punpckhdq
push
into
xor
iret
daa
mov
cmp
retf
aaa
adc
shl
sbb
dec
(bad)
retf
add
jmp
jbe
cmp
ret
and
push
popf
scas
pusha
mov
leave
xchg
xor
push
inc
sbb
fimul
mov
sbb
retf
mov
ss
cmps
sbb
fnsave
cld
test
call
and
test
aad
dec
fcmovu
adc
popf
loope
cld
scas
mov
xor
dec
jmp
xor
(bad)
cmc
dec
cmp
sbb
nop
mov
sbb
jle
adc
mov
aad
pusha
ds
lds
sbb
sbb
jg
sub
test
inc
xor
add
sar
pusha
dec
outs
rcr
ret
inc
jo
xor
mov
add
bound
xchg
push
or
mov
mul
les
sub
mov
fisttp
push
lods
retf
cdq
mov
ret
and
jmp
mov
lock
ins
mov
mov
inc
mov
and
sub
(bad)
fdivr
sub
push
inc
jecxz
push
out
mov
sbb
std
je
arpl
mov
cs
sbb
aad
nop
retf
sbb
jb
loopne
xor
js
out
or
mov
mov
fsubr
mov
inc
and
cs
daa
pop
push
mov
push
call
test
inc
mov
jo
mov
aaa
jl
xlat
cmp
sbb
and
cdq
inc
dec
pop
mov
rep
xor
mov
cmp
push
pop
mov
xlat
das
cmp
stos
mov
push
sbb
clc
retf
cli
jae
cmp
add
sbb
inc
mov
xchg
jo
out
sbb
int
sar
fsub
(bad)
hlt
push
ret
je
jecxz
ss
jmp
ja
(bad)
addr16
mov
mov
add
mov
pop
jo
sbb
lea
loope
fisttp
jne
popf
cmp
add
sub
push
aam
sbb
(bad)
jge
retf
cs
scas
ss
sbb
adc
sbb
ds
int3
aas
shl
pop
and
cmps
adc
std
inc
retf
adc
cs
cwde
and
retf
aas
mov
sbb
shl
popf
push
sub
push
mov
push
adc
jge
xlat
sar
and
push
sbb
cmp
sar
adc
jbe
adc
xchg
push
xor
sbb
sbb
cwde
push
inc
or
mov
push
test
xchg
fild
xor
or
(bad)
jl
sbb
retf
jb
in
adc
fmul
daa
sti
mov
mov
jmp
cdq
or
jns
mov
sub
jecxz
jbe
icebp
retf
push
cmp
mov
leave
mov
pop
jg
stos
jno
cmp
ucomiss
cmp
pop
mov
in
adc
(bad)
das
pop
call
(bad)
mov
out
pop
mov
cmp
or
mov
jb
jae
sub
fs
jmp
movs
jmp
nop
aam
or
sti
or
push
mov
jmp
inc
in
cld
hlt
shr
and
or
es
mov
pusha
pop
pop
movs
sub
pop
cmp
dec
outs
ins
and
mov
dec
iret
mov
shr
jmp
stos
push
xor
push
ss
imul
stos
int
or
test
or
int
or
mov
mov
add
es
mov
iret
jg
popf
repnz
dec
mov
(bad)
(bad)
int3
cwde
xchg
test
shl
mov
sub
sub
pop
in
jmp
in
rcr
sub
jno
sbb
fs
mov
stos
js
aam
pop
pop
cmp
push
(bad)
inc
mov
sbb
dec
outs
jge
mov
ja
imul
dec
dec
(bad)
mov
cdq
xchg
(bad)
jmp
cmp
sbb
mov
sahf
idiv
arpl
fisub
xor
mov
gs
dec
mov
gs
call
inc
or
cwde
dec
mov
ficomp
pushf
inc
(bad)
call
jne
add
cmps
cmp
stos
mov
call
push
xor
push
imul
cmps
and
push
into
(bad)
cld
and
push
and
pop
inc
clc
sbb
inc
mov
sbb
cmc
in
add
mov
sub
jle
mov
mov
aad
sti
and
cmp
sub
dec
dec
popf
jmp
jbe
ret
adc
pop
(bad)
das
fsub
cmp
das
push
or
xor
(bad)
sbb
mov
scas
or
push
lar
xor
pushf
or
add
ja
jecxz
or
sub
fstp
jbe
pop
jg
outs
jne
fsub
or
popf
cli
dec
jbe
cmp
sbb
sub
jns
sbb
cmp
aaa
inc
fdiv
fcomp
shl
ja
mov
(bad)
jl
mov
jns
pop
(bad)
in
xor
(bad)
push
inc
push
imul
imul
add
out
pop
adc
add
dec
xchg
(bad)
cmp
sbb
adc
jge
mov
jne
jmp
xlat
fisub
add
dec
movs
outs
jbe
pop
les
pop
and
pop
out
cmc
hlt
mov
aas
adc
shr
cwd
mov
xchg
test
aaa
int
cmp
jo
call
lea
sbb
das
inc
sbb
fwait
inc
shl
sahf
jmp
sbb
loope
sub
and
cdq
ret
adc
(bad)
push
sbb
fs
sbb
je
adc
inc
xchg
and
jmp
iret
ds
xor
les
sub
pop
inc
or
movs
lods
xchg
mov
inc
sub
sub
test
pop
cmp
inc
push
sub
sbb
or
adc
pop
lock
sub
sub
aaa
and
pop
lock
out
pop
pop
cmp
mov
(bad)
mov
xchg
loope
jnp
ins
loop
pop
sub
xchg
pop
inc
and
nop
cmp
repnz
mov
pushf
(bad)
sbb
push
push
fmul
sbb
inc
loope
rol
cmps
push
pop
sbb
call
inc
lahf
push
(bad)
in
xor
or
adc
(bad)
xchg
outs
imul
ins
mov
jmp
mov
aaa
ja
mov
pcmpgtb
add
pop
add
or
and
lds
inc
xchg
fcmovne
aas
jmp
sbb
pop
jg
popf
popa
test
mov
jle
pop
les
dec
pop
ins
sub
retf
mov
je
sbb
cmp
or
movs
cld
sbb
push
arpl
data16
jbe
sbb
sub
in
cs
andnps
(bad)
cmp
jmp
outs
fwait
jge
or
outs
push
test
sbb
xor
addr16
rcl
push
sbb
ss
pop
int
push
fadd
les
pop
cld
scas
cmp
(bad)
jns
clc
pusha
sbb
mov
sub
shr
les
faddp
into
adc
adc
cmp
pop
add
sti
pop
and
dec
(bad)
jb
adc
loopne
xor
jge
mov
push
mov
cmp
dec
jge
std
pop
dec
les
pusha
fisubr
pop
jns
pushf
pop
and
neg
inc
scas
inc
pcmpgtb
inc
sub
jmp
(bad)
push
sub
pop
leave
jp
adc
dec
cli
sbb
or
sbb
push
jl
xchg
push
cmp
or
sub
adc
or
arpl
scas
mov
shl
adc
imul
cdq
je
loop
push
shr
or
lahf
call
jg
add
popa
cdq
mov
retf
imul
or
imul
cmp
ds
outs
and
sub
mov
or
inc
sbb
popf
popa
cmp
bnd
aaa
cs
mul
cli
or
dec
mov
imul
dec
das
mov
arpl
and
xor
mov
pop
into
mov
and
cmps
iret
outs
add
jl
out
rcr
push
popa
jns
cmp
or
clc
shl
jae
or
pop
cmp
push
stos
in
clc
rcpps
push
mov
es
or
mov
ja
rcl
ret
dec
mov
dec
mov
xchg
sub
pop
clc
xor
push
pop
call
push
push
sub
push
dec
push
pusha
mov
push
and
mov
mov
push
out
add
push
arpl
aaa
bound
stos
and
push
pop
fisttp
sbb
loop
call
adc
(bad)
in
push
fwait
dec
cmp
ja
and
sbb
mov
sbb
mov
in
neg
arpl
dec
out
rsqrtps
rol
mov
adc
push
mov
xchg
fnsave
xor
or
mov
jno
add
mov
push
mov
cwde
lock
mov
pop
sbb
(bad)
in
cwde
stc
or
push
or
cmps
push
mov
stos
fs
add
dec
enter
inc
mov
mov
xor
mov
dec
jg
jo
sub
sbb
or
add
ins
pop
cs
sub
inc
and
sar
arpl
jmp
sar
(bad)
in
mov
push
add
adc
aaa
push
add
(bad)
add
and
cmp
mov
mov
aaa
scas
(bad)
jecxz
stos
push
adc
test
ins
mov
mov
imul
out
sub
aad
pop
ds
adc
or
lods
gs
lock
push
xchg
ror
dec
inc
inc
stos
jecxz
pop
mov
repnz
pushf
out
xor
mov
and
xor
pushf
cmp
xchg
jg
mov
iret
dec
(bad)
mov
mov
pop
push
or
int3
jns
cmp
pop
nop
ja
popf
xlat
xchg
out
(bad)
cld
cmp
std
xor
inc
sbb
inc
call
data16
nop
imul
(bad)
scas
je
std
movs
push
icebp
and
xchg
pop
jge
xchg
pop
cs
test
sbb
imul
jb
movs
lods
jbe
std
jmp
sbb
jecxz
jne
add
stos
cmp
jbe
pop
mov
jmp
jb
test
xor
mov
dec
clts
add
inc
dec
push
fistp
push
inc
sbb
cwde
clc
repnz
and
jge
mov
mov
cmp
cmp
jnp
std
sub
jg
xchg
pushf
sub
adc
stos
pop
mov
sbb
or
push
or
or
mov
daa
push
pop
shr
jbe
arpl
jbe
loope
loopne
or
add
jbe
mov
data16
xlat
into
bound
es
add
retf
pop
and
popa
popf
sub
jo
mov
aaa
(bad)
jno
lahf
imul
dec
xchg
jno
mov
xor
jmp
mov
adc
dec
or
cmc
ins
or
cmp
push
in
sbb
lods
popa
and
or
mov
jnp
data16
ss
push
push
jp
add
outs
out
mov
add
ss
ret
pop
sahf
retf
pop
xor
(bad)
data16
dec
mov
ret
pop
pushf
loop
jnp
cs
jne
jg
fcomp
pop
jne
mov
mov
js
pop
hlt
repnz
in
cmp
or
mov
cli
adc
(bad)
jno
pop
enter
sub
fs
js
bound
add
mov
cdq
push
imul
mov
leave
cwde
push
cmc
jmp
in
imul
jno
cmp
aas
(bad)
xor
xor
cmp
sbb
sub
stos
jl
push
bound
jnp
dec
daa
pusha
test
call
push
adc
push
dec
aam
inc
inc
sub
add
rol
es
pop
jl
ins
xor
xor
sti
inc
xor
ficom
loope
jp
jb
mov
in
inc
loopne
aam
pop
push
push
popa
pop
cmc
int3
imul
pop
ds
push
aad
mov
fdivr
js
sub
push
adc
push
pop
pop
test
(bad)
outs
or
push
adc
push
(bad)
add
push
xchg
mov
xor
mov
mov
mov
jne
std
retf
xchg
int
nop
xor
sub
std
add
stos
cmp
pop
sub
in
jnp
or
loope
imul
ss
in
cmp
jne
xchg
movs
pop
mov
push
inc
ss
std
pop
fs
pop
cmp
xchg
push
mov
sub
fidiv
data16
lock
iret
cmp
mov
push
pop
add
dec
dec
cli
jp
outs
jne
data16
imul
nop
jb
pop
cmp
ds
mov
jge
mov
mov
mov
out
in
pop
pop
fbld
adc
ds
add
mov
adc
gs
out
xor
cld
inc
mov
(bad)
adc
out
adc
jae
imul
inc
mov
mov
add
mov
dec
add
mov
mov
popf
stos
clc
jnp
inc
rcr
mov
sub
xchg
sub
inc
and
xchg
sbb
cmps
push
and
les
addr16
push
push
mov
frstor
test
popa
dec
dec
cwde
xchg
pop
pop
scas
and
das
push
pop
lods
mov
jmp
jnp
ins
test
dec
in
fimul
or
pop
push
mov
cmp
and
lahf
pop
or
rcl
push
mov
repz
(bad)
sbb
dec
pop
push
push
pop
cmc
clc
or
mov
cmps
pop
xlat
or
enter
(bad)
je
fistp
sub
sub
and
in
add
push
xchg
add
inc
sti
mov
aad
bnd
loopne
sbb
xchg
fistp
popa
scas
jle
add
xor
int
sub
cmp
sub
(bad)
sub
shr
xor
mov
pop
icebp
fs
test
xor
out
ja
in
imul
pop
jecxz
jle
(bad)
add
sbb
imul
daa
cwde
out
in
push
in
and
mov
ins
jp
push
dec
push
inc
dec
jae
xor
call
ja
ret
mov
xor
mov
out
jmp
cli
cld
mov
pop
lds
sub
push
(bad)
(bad)
push
inc
xchg
dec
jge
stos
or
inc
rcl
mov
stos
fisttp
das
outs
add
pop
sfence
jmp
cld
mov
loop
jle
rcr
pop
sti
sub
sub
inc
repz
sbb
dec
arpl
mov
mov
push
jecxz
inc
and
pop
mov
pop
pushf
addr16
fmul
mov
outs
cmp
call
mov
lahf
loop
mov
dec
pop
jmp
out
retf
adc
add
cld
sti
rol
std
add
sub
jl
jmp
cs
inc
js
adc
or
xor
add
out
or
ins
push
xor
loopne
cmps
dec
jle
into
xchg
ficom
adc
outs
inc
and
mov
lds
scas
pop
xchg
arpl
retf
mov
jecxz
nop
cmp
mov
and
scas
inc
inc
jne
scas
call
sbb
jnp
jne
addr16
outs
push
stos
stos
or
pop
sub
dec
jl
out
pop
out
add
loope
enter
jbe
mov
mov
push
mov
jae
mov
lea
shl
cmp
loopne
sti
sbb
jns
psubsb
(bad)
(bad)
cmp
aad
cmp
dec
jno
cmp
mov
inc
in
cmp
and
jbe
fdivr
and
jmp
mov
jbe
push
xor
sub
mov
sbb
or
sti
jmp
mov
aad
push
or
sub
cdq
mov
add
xchg
jno
pop
rcl
jmp
add
jne
dec
or
inc
add
jb
mov
ja
sub
inc
inc
adc
test
ss
jo
inc
adc
shl
push
das
(bad)
aam
in
stc
rcl
xor
dec
xor
test
mov
mov
test
adc
mov
add
jle
hlt
pop
xor
mov
pop
xor
cs
outs
sub
ret
cmp
sbb
cmp
add
push
(bad)
and
les
adc
mov
push
and
jb
jl
(bad)
test
inc
mov
lods
dec
into
add
xor
(bad)
and
in
pop
mov
stc
test
std
sub
ja
pop
jmp
pop
addr16
push
xor
mov
aad
sub
mov
mov
jmp
test
and
stc
int
lahf
rcr
inc
loop
mov
pop
inc
cs
mov
out
sbb
stc
and
pushf
jmp
xor
and
inc
mov
and
repz
sub
xchg
pop
mov
dec
retf
sar
cli
mov
std
pop
das
jl
xchg
dec
or
jne
push
enter
(bad)
pushf
js
dec
call
sbb
call
push
lods
clc
cli
pop
jae
inc
mov
test
xlat
dec
push
je
mov
imul
dec
cmp
xor
mov
pop
dec
mov
dec
out
jns
ins
int3
push
scas
es
mov
bound
cld
mov
arpl
jle
pop
adc
mov
sbb
cld
and
mov
pop
cmp
ins
and
inc
xor
cs
dec
dec
repz
shl
xor
jecxz
push
scas
sbb
inc
push
loopne
out
ret
stos
mov
std
and
sub
inc
clc
jno
mov
mov
jp
or
jns
mov
in
cmp
jns
js
clc
dec
fdiv
test
repnz
and
ja
aam
mov
xor
pop
jmp
and
add
xchg
cmp
push
shr
pop
adc
mov
mov
popf
jl
imul
fistp
repnz
int
push
mov
ja
jle
sub
enter
mov
mov
jle
(bad)
jge
pop
sub
and
arpl
out
aaa
and
cmp
test
std
adc
rcr
test
xor
adc
jge
sti
pop
xor
xchg
(bad)
xchg
mov
arpl
sub
push
(bad)
xor
mov
fs
jmp
popa
xchg
inc
arpl
out
sbb
inc
sub
int
pop
xchg
or
add
or
retf
xchg
mov
nop
daa
cmp
hlt
inc
cmp
jns
inc
mov
in
adc
mov
jnp
jnp
mov
mov
inc
inc
arpl
push
pop
cs
pop
out
loopne
jbe
and
push
push
adc
cmps
xor
(bad)
popa
lahf
aaa
inc
pop
hlt
mov
and
mov
inc
repz
jl
pop
push
out
(bad)
jb
shl
mov
push
(bad)
jns
shl
movs
dec
es
sub
arpl
push
push
leave
and
cmp
jp
movs
das
mov
call
retf
cs
dec
sbb
in
ret
es
jp
sub
in
xchg
push
dec
mov
(bad)
std
jno
fisttp
sub
jmp
jecxz
mov
stos
or
daa
popf
in
xor
jmp
push
mov
adc
mov
test
dec
nop
jecxz
(bad)
hlt
adc
test
and
daa
in
shr
cli
pop
sbb
mov
sub
mov
cmp
jbe
mov
mov
mov
xchg
cmps
jo
popa
push
out
test
sbb
push
aaa
push
xor
cmp
es
movs
ret
and
lahf
mov
or
xor
add
repz
shl
inc
movs
div
(bad)
pop
push
cmp
push
mov
sub
mov
scas
std
mov
scas
faddp
adc
mov
mov
cmp
mov
sar
xchg
addr16
pop
pop
enter
mov
sub
and
jne
ficom
jnp
dec
test
xchg
call
leave
ret
lock
and
popf
addr16
mov
jg
inc
dec
and
je
rcr
mov
mov
dec
ds
sbb
pop
dec
or
cmp
push
stos
cmp
sbb
jbe
int
shl
fild
dec
cld
jg
xlat
into
cld
fsubr
add
xor
sub
dec
add
sub
pop
test
pushf
inc
test
xor
outs
es
mov
addr16
xor
adc
sbb
mov
sub
mov
cmp
pop
mov
ds
sub
jns
stos
data16
fld
dec
sub
push
in
(bad)
bnd
push
push
movs
cmp
jmp
aas
adc
shl
dec
pop
xor
push
and
push
jae
and
push
xchg
mov
adc
add
push
fidivr
repz
stc
jne
(bad)
mov
dec
add
dec
xor
push
scas
(bad)
or
shl
pushf
add
or
cdq
xchg
dec
rol
aas
das
add
mov
push
xor
jo
das
inc
cmp
repnz
outs
xor
das
xor
stos
std
movs
(bad)
jo
mov
pop
(bad)
in
sub
ins
(bad)
xchg
cli
fst
cmps
jne
and
mov
jp
inc
rcl
sub
pop
push
jnp
(bad)
cli
mov
sub
push
cmp
add
xchg
jecxz
shr
scas
imul
sub
call
pop
jl
xchg
jns
call
jmp
fmul
mov
imul
mov
imul
das
jbe
mov
cwde
pop
cmp
imul
lahf
pop
dec
popf
mov
icebp
scas
inc
cs
popa
jbe
ins
out
add
inc
fld
shl
popa
mov
jno
mov
jp
sbb
out
fs
fld
dec
sbb
scas
or
pop
shl
fcomp
repnz
lods
cmp
pop
aas
ror
repz
mov
es
xchg
mov
ds
mov
inc
sar
fistp
push
xor
xchg
pop
inc
cmp
call
fwait
ret
ficomp
scas
ja
pop
and
push
arpl
mov
add
es
or
iret
sub
cld
add
clc
ins
inc
pushf
test
inc
push
ror
push
mov
xor
sti
jo
imul
gs
aas
jns
sub
add
gs
or
mov
enter
sbb
xchg
mov
es
arpl
pop
es
shl
mov
icebp
xchg
es
outs
repz
mov
xchg
mov
aam
mov
cmp
dec
jbe
dec
jle
ins
ret
sbb
pop
js
cmp
out
mov
shl
push
movs
dec
inc
cdq
jle
popf
js
shl
rcr
jne
push
sti
aaa
mov
retf
out
push
sbb
jmp
popf
stc
addr16
add
mov
and
mov
mov
loope
je
or
fsub
scas
mov
outs
inc
daa
pop
retf
add
inc
or
mov
test
cmp
repnz
pop
daa
in
sbb
pusha
mov
mov
mov
inc
fcomp
mov
shl
dec
imul
or
jbe
leave
imul
addr16
and
pop
cmps
test
mov
xor
repz
pop
stos
lahf
sub
inc
ds
and
call
ds
das
cmp
jbe
mov
cld
out
mov
xchg
out
sti
xchg
rol
push
js
dec
sbb
or
in
or
inc
fisub
ror
sar
loop
arpl
jecxz
inc
in
test
outs
adc
jo
mov
and
push
idiv
mov
dec
xlat
sbb
adc
mov
stos
inc
jle
js
or
inc
sub
lock
je
aas
inc
inc
mov
add
out
jo
fld
jno
dec
jl
push
pop
sbb
push
sub
cmp
bound
mov
sbb
(bad)
push
mov
ffree
or
xchg
jecxz
jl
adc
imul
add
xor
outs
jns
push
cmc
cmp
(bad)
std
pop
dec
mov
push
mov
and
sbb
popf
ss
sbb
data16
mov
mov
test
xchg
and
jns
test
call
inc
test
out
aas
or
cmp
inc
cdq
jg
rcl
sar
imul
pushf
repnz
movs
paddb
adc
es
ror
out
xchg
pop
daa
jo
jb
in
xchg
mov
xor
mov
rol
stc
scas
pop
add
inc
pop
or
test
mov
arpl
nop
sti
xchg
out
cmp
loope
(bad)
jmp
ja
dec
rcl
mov
cmp
test
mov
dec
std
sub
cmp
les
cld
fwait
push
cmps
pop
pop
cmp
jmp
out
push
lahf
js
loop
sbb
adc
xor
daa
test
sub
int3
lods
call
jmp
sub
fucomi
adc
lock
mov
jge
mov
(bad)
jge
or
aad
and
sar
test
inc
je
cs
je
mov
retf
jl
ror
inc
inc
push
leave
mov
mov
popf
in
sbb
stos
aad
out
das
fsub
push
jns
and
pop
mov
xchg
cs
jmp
aas
jge
mov
push
xor
pop
mov
cmp
cmp
mov
adc
je
dec
gs
(bad)
imul
mov
scas
push
sub
(bad)
addr16
(bad)
addr16
shl
jae
add
jp
jge
cmp
imul
mov
push
mov
mov
ja
aam
lahf
xchg
stos
out
sub
adc
adc
fisub
sub
push
jne
shr
inc
scas
pop
cmp
(bad)
dec
or
and
jo
fwait
mov
jns
call
sti
shr
pop
push
pop
xor
arpl
lfs
mov
jle
call
sub
pop
add
test
movs
pop
loop
push
movs
clc
aad
aaa
and
popa
test
pusha
mov
inc
cmp
push
pushf
or
add
push
cmp
inc
and
dec
adc
outs
sbb
sbb
stc
sbb
adc
add
sub
leave
ja
jge
fisub
mov
iret
jnp
ins
sbb
call
pop
push
pop
add
int3
(bad)
sar
(bad)
stos
sub
xchg
cmp
sub
not
push
jns
xor
mov
jae
mov
repnz
push
xor
sub
fist
jg
dec
mov
cmp
aad
mov
pop
mov
sbb
sbb
call
les
lds
jmp
ret
adc
mov
fcomp
ds
loopne
jecxz
push
in
mov
and
sbb
cmp
pop
and
pop
(bad)
push
in
dec
and
pop
fild
xor
lds
pop
dec
pop
out
dec
shl
call
jecxz
repnz
fist
mov
in
cmps
sub
cmp
dec
add
jne
sub
mov
jge
push
inc
jle
std
retf
ins
jo
aad
lea
mov
ins
test
dec
loope
mov
lock
xchg
cwde
dec
dec
and
scas
push
mov
xchg
loop
jbe
loope
(bad)
das
retf
cmps
mov
sbb
pop
mov
add
pop
out
dec
push
(bad)
mov
jecxz
jmp
mov
inc
fs
cdq
icebp
lea
shl
mov
fsub
cmps
sub
sub
fcom
sbb
jge
dec
push
add
add
and
xchg
jl
ret
leave
ds
dec
lods
movs
and
arpl
mov
xlat
jg
inc
daa
ret
mov
sub
pop
jae
xor
int
stos
and
add
loope
lds
pop
dec
and
enter
cli
mov
jb
sahf
push
imul
retf
pop
das
pusha
scas
jb
jp
imul
sub
sbb
mov
add
imul
cmps
in
cmp
enter
mov
nop
jecxz
push
iret
push
mov
xchg
and
outs
push
cmp
push
sbb
mov
cmp
xor
and
and
dec
sbb
add
ins
and
mov
cmp
xor
daa
mov
mov
pop
inc
dec
gs
jmp
test
stos
mov
push
mov
fwait
pop
inc
repnz
sbb
push
or
pop
ret
adc
fst
pop
sub
add
mov
jp
shl
loopne
les
xor
aas
xlat
je
cmovnp
inc
sub
push
and
xor
jecxz
inc
std
and
fs
push
mov
dec
popa
lahf
jmp
jecxz
addr16
cmps
xor
sahf
mov
jg
clc
call
mov
ffree
fucomip
in
jecxz
shl
out
fs
in
mov
adc
cli
jns
pop
jmp
cs
gs
jmp
cmp
pop
jbe
in
pop
sub
push
call
xor
cli
push
stos
sub
mov
add
test
push
sub
pop
sar
loope
aas
lea
mov
cmp
je
lods
add
fld
out
mov
inc
jp
jns
pushf
(bad)
gs
xor
scas
addr16
aaa
mov
lods
xchg
inc
xchg
sbb
jmp
adc
inc
and
sub
mov
es
mov
test
retf
mov
dec
sbb
lds
je
retf
push
movs
arpl
mov
in
inc
out
div
mov
inc
inc
push
jg
mov
retf
mul
stc
cdq
inc
mov
or
xchg
jp
dec
sar
dec
sbb
and
or
mov
jmp
in
test
xlat
mov
push
repnz
xchg
aaa
pop
enter
outs
inc
rol
loop
xchg
pusha
push
jle
jne
pop
jg
inc
je
push
call
fcomp
imul
sbb
in
scas
das
(bad)
jecxz
lods
mov
inc
or
jae
xor
ja
jbe
and
sbb
jecxz
inc
int3
into
mov
stos
pop
mul
lods
inc
add
test
cmp
mov
jmp
div
xchg
jg
mov
mov
shl
cld
mov
mov
xchg
fistp
jnp
jne
in
mov
dec
inc
and
iret
sbb
or
out
mov
and
rol
inc
xchg
mov
and
mov
ret
and
push
jbe
outs
movs
repz
dec
mov
jle
jns
std
xor
ss
adc
jmp
sbb
outs
idiv
mov
ds
out
pop
pop
adc
jge
outs
sub
cmc
shl
ins
enter
out
cmp
adc
push
jns
adc
sub
mov
jae
inc
lock
sub
mov
into
inc
out
retf
xor
test
test
cmp
enter
(bad)
xlat
or
pop
imul
nop
jmp
xchg
sub
push
adc
xlat
push
clc
adc
and
xor
jge
jle
imul
movs
jnp
cmps
sub
pop
cdq
sub
stc
jl
mov
jge
sub
dec
repz
dec
sub
call
xor
xchg
lahf
pop
cmp
and
mov
stos
lods
push
adc
mov
sar
pop
or
mov
mov
adc
lea
sbb
xchg
xchg
mov
push
int3
ds
dec
into
mov
mov
xor
xchg
aas
ja
cld
and
fdivr
mov
sub
sbb
(bad)
repz
sub
jl
dec
in
add
jg
out
adc
fld
rcr
mov
lods
push
jns
sub
mov
cli
pusha
or
mov
fldenv
mov
cli
outs
inc
mov
pop
cmp
jmp
popf
pushf
sub
sub
push
call
or
ret
xor
dec
scas
jg
mov
sahf
ss
inc
(bad)
icebp
arpl
add
mov
imul
imul
(bad)
in
xor
das
clc
mov
test
push
xor
int
xchg
or
out
or
add
iret
dec
cmp
(bad)
jne
mov
test
loop
xor
loopne
retf
dec
xchg
movs
sub
aad
enter
mov
sti
lods
retf
pop
fist
loopne
out
pop
icebp
sbb
push
jbe
das
pop
jmp
and
(bad)
or
je
push
fnstenv
xor
stc
mov
cdq
or
test
rcr
add
test
cmp
dec
pop
jl
scas
mov
sahf
pop
pop
(bad)
cmps
mov
movs
cmps
fcom
inc
int3
inc
sbb
mov
fimul
sbb
test
ss
fisub
mov
neg
fbstp
rcl
imul
sbb
push
arpl
push
push
mov
inc
mov
scas
int3
mov
fld
imul
pop
xor
jnp
cmps
aad
fcom
mov
(bad)
test
ins
push
inc
cmp
sbb
jno
stos
ins
mov
je
imul
lea
movs
ror
loope
adc
sbb
pop
inc
fst
not
stc
scas
cmp
ins
adc
inc
ficom
mov
jns
mov
fdiv
loopne
mov
mov
dec
mov
inc
push
add
call
jo
cmp
aam
xchg
daa
jmp
dec
adc
inc
aas
pop
ret
or
fisubr
jl
add
xor
mov
jo
shl
push
call
shl
pop
popa
jmp
mov
inc
jg
fisubr
loope
push
es
or
(bad)
cmp
mov
push
pop
xchg
out
movaps
or
xor
movs
inc
jp
sub
add
sbb
imul
cmps
pop
(bad)
mov
rol
cli
inc
cdq
push
dec
mov
jg
ds
enter
ss
loope
(bad)
push
mov
fld
adc
mul
push
gs
add
hlt
fnstsw
inc
xchg
lods
or
dec
div
dec
in
inc
mov
call
jo
push
jg
and
int3
sub
or
inc
push
push
rol
jge
rol
jge
enter
das
mov
dec
mov
sub
mov
sar
inc
jns
out
daa
jmp
pop
out
je
mov
vmread
sbb
imul
mov
xchg
jle
and
test
pop
mov
add
(bad)
dec
inc
(bad)
sti
or
and
add
fisubr
arpl
test
pop
sbb
xor
and
jb
push
mov
or
pop
xchg
loop
add
add
sub
call
in
adc
inc
add
and
add
jns
ja
jae
retf
dec
les
pop
xor
(bad)
sub
dec
dec
pop
lahf
inc
int
mov
sbb
adc
leave
sub
stos
sub
in
(bad)
jno
dec
je
mov
div
add
loope
cmps
jnp
jb
pop
(bad)
mov
loope
dec
add
imul
stos
jb
add
sbb
outs
mov
cwde
ja
and
push
clc
imul
test
ffree
movs
mov
movs
jmp
pushf
sar
sbb
(bad)
lods
sub
pushf
dec
pop
loope
loop
inc
jge
fidiv
(bad)
scas
add
sahf
mov
loope
push
imul
clc
(bad)
dec
jmp
aas
mov
jecxz
int
popa
jo
xlat
xor
mov
push
icebp
pop
call
jae
cmp
retf
sub
add
(bad)
sub
jecxz
pop
mov
sub
jl
xchg
shr
mov
jecxz
mov
mov
daa
movs
and
outs
in
nop
xor
xchg
and
les
not
std
xchg
adc
mov
push
sbb
test
push
mov
enter
inc
sbb
jmp
ds
neg
pop
mov
lods
push
ds
or
call
or
cdq
in
mov
push
sbb
shl
or
retf
cmp
xchg
nop
test
sbb
or
nop
shl
or
out
clc
jmp
jle
cmps
pop
push
push
inc
aas
jno
fdiv
popa
es
dec
ficom
leave
sub
push
sub
lahf
mov
push
das
xchg
mov
push
je
xor
pushf
cmp
xlat
test
(bad)
jmp
xchg
xor
mov
nop
jl
adc
lods
fmul
mov
push
push
inc
mov
arpl
ins
sbb
cmp
imul
leave
xor
cwde
dec
or
repnz
mov
sub
jl
jl
adc
xor
scas
cmp
pusha
cmp
neg
lods
idiv
xchg
xor
popf
push
loop
cmp
cld
int3
push
and
pop
jg
jl
out
into
or
retf
in
mov
jns
pop
mov
mov
mov
add
into
jno
pusha
xlat
jmp
sbb
inc
dec
adc
jg
stos
pop
add
push
cmp
dec
mov
(bad)
pop
dec
popf
sub
xchg
mov
pop
imul
push
aam
scas
pop
mov
js
and
mov
pop
shl
adc
scas
nop
jbe
enter
repnz
cmp
movs
sub
out
and
stos
add
cmp
dec
icebp
mov
loopne
std
jmp
push
mov
stos
shl
in
neg
imul
shr
movs
pop
scas
fwait
lock
pop
pop
mov
jb
mov
icebp
push
imul
daa
xor
retf
fild
adc
ror
stos
dec
jg
loop
push
ins
mov
cmp
ins
pop
inc
clc
sbb
(bad)
cmp
(bad)
cmps
aam
ret
adc
and
cs
push
ret
ja
cmp
push
ins
bound
jmp
xor
mov
sub
aas
mov
mov
fdivr
xor
push
inc
and
das
mov
sar
retf
jecxz
popa
dec
pusha
mov
inc
into
dec
pop
js
dec
or
and
jbe
mov
jns
pop
sub
mov
stos
pop
lds
cmps
sti
js
psllq
sub
je
inc
cmp
jmp
bound
jne
jb
xchg
inc
xor
inc
jmp
and
push
dec
sub
loopne
mov
js
nop
mov
dec
adc
ja
jno
adc
cmp
jmp
xchg
xor
jmp
sbb
mov
(bad)
jb
leave
sub
xor
fisub
(bad)
lods
scas
add
rcr
test
or
mov
frstor
cmc
scas
sbb
into
movs
sub
inc
retf
es
cmps
inc
inc
cmp
jmp
cdq
mov
(bad)
push
ins
inc
pop
imul
pushf
fld
cmp
pop
inc
addr16
xor
daa
pop
mov
std
fiadd
xchg
(bad)
adc
cmc
popa
imul
sbb
inc
inc
sub
xchg
into
pusha
addr16
mov
xchg
lods
push
aad
and
xchg
test
mov
and
xor
mov
nop
push
sbb
test
add
sbb
xchg
adc
add
dec
push
xchg
or
sub
cmp
fisttp
jne
dec
jle
jne
jge
push
cmps
mov
cmp
xlat
jbe
inc
jae
mov
scas
sar
call
jbe
xchg
mov
bound
mov
pop
fdiv
mov
push
aaa
in
sbb
inc
call
das
mov
and
inc
je
loop
pop
sub
addr16
sahf
cmps
sbb
(bad)
fsub
ins
(bad)
aas
mov
retf
or
xor
inc
inc
mov
jne
xor
sbb
mov
jnp
aaa
sub
xchg
xlat
and
out
rcr
pop
push
adc
cdq
stos
(bad)
add
add
enter
or
or
jbe
test
mov
sub
aad
mov
cs
sub
sbb
std
or
and
sub
repz
out
shl
cmp
push
push
rcr
inc
(bad)
lds
xor
aad
pusha
mov
out
mov
add
(bad)
div
and
jo
xor
xchg
popa
popa
ficom
dec
inc
(bad)
jo
out
cwde
mov
and
sub
push
mov
loopne
cmp
fnstsw
jmp
retf
imul
retf
xor
enter
dec
ins
frstor
xor
xor
adc
jno
stc
mov
push
or
sub
das
daa
inc
ja
fisub
ds
xchg
sub
or
jg
sub
(bad)
pop
jae
pop
push
pusha
stos
loope
and
sbb
lea
and
out
je
xchg
sub
jns
mov
pop
sbb
sbb
(bad)
pop
mov
cmp
mov
adc
ficomp
aad
fistp
mov
or
mov
jbe
lds
movs
test
inc
fcomp
push
mov
(bad)
adc
mov
or
stc
out
mov
outs
lods
pop
jne
imul
ret
and
sub
sbb
fwait
cmps
jns
xor
pop
int
jp
ret
sub
sbb
cmp
jnp
jo
or
mov
loopne
sbb
dec
xor
mov
dec
cmp
test
stos
or
jae
in
shr
adc
push
jg
adc
push
ds
stos
or
jp
jne
ss
hlt
jae
cmp
ins
test
popf
icebp
or
sar
fsub
cdq
iret
movs
repz
push
cmp
test
(bad)
dec
imul
push
lods
ins
(bad)
inc
std
cmps
dec
jmp
xchg
test
mov
xor
out
xchg
addr16
jno
sub
ins
adc
xchg
adc
out
dec
shl
pop
cmp
xor
sbb
push
fmul
push
rol
or
mov
mov
adc
jnp
mov
dec
(bad)
mov
(bad)
hlt
cli
fsubr
jno
xchg
fnstenv
mov
mov
cli
retf
jne
fisubr
rcr
sbb
adc
lods
xchg
cmps
ins
ret
enter
xor
cli
sti
dec
rcr
inc
push
push
and
cdq
fs
dec
push
lods
ror
sbb
pop
jbe
loope
inc
jp
sub
fstp
xor
push
nop
sub
inc
out
div
daa
ins
mov
out
cmps
jp
cmp
mov
aam
into
and
push
pushf
fadd
out
fdiv
or
mov
out
dec
aad
es
mov
inc
sub
test
pop
or
(bad)
(bad)
jne
mov
mov
loopne
shr
mov
cmp
aas
out
ins
push
dec
pop
sti
mov
loopne
dec
dec
mov
iret
inc
cmp
dec
stc
mov
test
push
jns
aaa
sub
add
mov
push
addr16
loope
outs
mov
stc
mov
movs
in
test
hlt
mov
adc
ins
pop
mov
jge
sbb
(bad)
sub
xor
pop
sbb
sub
pop
lock
sti
js
pop
inc
jbe
fild
jne
fcmovbe
xor
pop
jp
stos
aad
test
shl
mov
call
shl
fiadd
out
jle
sti
push
fnstsw
les
mov
xchg
add
mov
fistp
scas
arpl
lahf
push
movs
cwde
dec
push
pop
sub
mov
fnstcw
or
and
imul
call
test
gs
addr16
xor
cmp
mov
cmps
pusha
popf
rol
xchg
and
xlat
mov
cmc
and
and
or
iret
in
push
dec
sbb
dec
outs
repz
jbe
jns
or
adc
sbb
imul
sbb
inc
sbb
cmp
and
jnp
not
cmc
cmps
cmp
or
jbe
movs
push
not
imul
xchg
push
pushf
and
mov
mov
dec
xchg
bound
mov
mov
dec
test
jl
mov
aam
jne
cmps
dec
pop
cmp
movs
or
xchg
pop
(bad)
pusha
aaa
sub
mul
jge
mov
push
lea
outs
loope
arpl
mov
inc
ins
adc
push
push
(bad)
jae
xchg
push
jmp
adc
mov
mov
(bad)
fs
cld
lahf
es
test
xor
adc
adc
cld
inc
test
iret
push
mov
ror
dec
nop
add
jmp
xor
into
add
pop
pop
test
mov
mov
retf
sbb
outs
xchg
imul
cmp
push
pop
jb
test
scas
push
push
mov
lahf
sub
dec
xchg
sbb
loopne
add
xchg
fst
repz
cmc
jbe
lods
les
gs
out
hlt
dec
lock
mov
lods
daa
push
or
sub
rcr
sbb
jne
leave
std
lods
and
jo
repnz
out
(bad)
mov
jne
pusha
cmps
jns
xchg
pop
mov
mov
loop
xchg
sar
push
sbb
or
dec
dec
dec
cs
test
fnstsw
in
cmp
lea
mov
mov
add
int3
push
add
sbb
je
mov
popf
jp
jae
ds
xor
lods
cmp
adc
fidiv
sub
mov
mov
imul
(bad)
and
or
add
adc
ror
sahf
and
adc
add
div
adc
cdq
add
jno
cld
xchg
add
push
adc
adc
add
mov
jmp
and
inc
shl
inc
leave
cmc
sub
call
and
mov
mov
pop
cmp
movs
and
xor
sbb
jns
idiv
add
pop
adc
dec
repz
mov
movs
pop
ins
adc
mov
xchg
les
xchg
sub
jmp
jno
cdq
es
mov
cmp
inc
add
lock
dec
mov
sbb
jg
inc
dec
cmps
test
pusha
xlat
xchg
aam
jge
rol
jae
dec
pop
and
and
sub
mov
xchg
outs
cmp
call
add
gs
dec
jle
or
sahf
out
cmp
es
add
mov
outs
gs
sti
mov
jmp
sti
pushf
jbe
mov
mov
data16
dec
lods
push
push
jns
pop
ins
ret
div
shl
pop
jmp
pusha
aaa
jbe
pop
add
sti
sahf
adc
fmul
pop
rcl
mov
push
or
mov
std
pop
pusha
shl
es
jge
(bad)
mov
sub
inc
or
ins
and
es
dec
xchg
xchg
push
mov
out
or
sbb
mov
mov
mov
cli
mov
add
lock
cmp
mov
push
(bad)
lds
mov
clc
jae
outs
test
mov
pop
mov
pop
mov
push
mov
out
jl
dec
stc
lods
jb
(bad)
jmp
in
sub
xchg
test
sub
adc
das
xchg
push
bound
fldcw
push
push
loopne
(bad)
sar
inc
test
(bad)
pop
fld
popa
pushf
ds
frstor
cdq
cmp
inc
sub
icebp
jmp
cmp
inc
aaa
adc
sbb
frstor
popa
push
push
xor
lea
in
xor
mov
arpl
mov
movs
dec
sub
mov
push
mov
mov
rcl
mov
ja
xor
fidiv
sub
add
repz
push
xchg
and
lea
dec
cmc
cmp
sar
test
mov
outs
jns
pop
out
call
stos
push
(bad)
jbe
pop
jne
shl
mov
cmp
mov
repz
mov
pop
xchg
mov
jl
pushf
sbb
push
xor
sbb
out
sub
xor
pushf
ja
inc
xor
adc
cmp
sub
adc
sub
rol
pop
es
cmc
call
adc
sbb
sbb
mov
sbb
xchg
ror
out
ss
sar
push
out
repz
fst
mov
std
xchg
jne
pusha
ins
pop
rol
cmps
pop
add
or
(bad)
mov
dec
arpl
popf
mov
add
mov
je
imul
retf
mov
jo
xchg
inc
ret
and
gs
xchg
sbb
and
mov
xchg
ds
push
fisttp
into
and
enter
pop
sub
push
ds
mov
mov
push
cmps
ins
(bad)
xlat
inc
shl
xor
xlat
addr16
mov
aam
int
jmp
xchg
cmc
pop
clc
pop
or
(bad)
mov
dec
(bad)
adc
adc
js
jns
and
jp
adc
jmp
mov
sahf
fcmovne
adc
fdivr
pop
jo
and
cmp
ja
sbb
mov
sbb
add
mov
je
add
aas
dec
mov
mov
repz
imul
dec
dec
add
lds
pop
jl
aad
pushf
inc
dec
pusha
enter
jge
out
aam
push
sti
mov
repnz
inc
xchg
dec
mov
push
(bad)
ins
pop
dec
mov
inc
pop
movs
rcl
xchg
mov
push
xchg
cmp
xor
pop
sbb
sub
sub
jp
and
jl
dec
mov
mov
xor
sti
hlt
(bad)
in
jmp
xchg
jne
mov
mov
mov
dec
inc
gs
scas
pop
and
pop
sbb
push
pop
pop
or
mov
dec
ins
inc
leave
es
jmp
mov
cwde
cdq
test
mov
fnsave
cmp
popf
adc
repz
cmp
jb
scas
test
push
cld
mov
jmp
mov
je
adc
sahf
outs
xor
pop
pop
xchg
fsubr
cs
or
sar
jns
cdq
and
jp
inc
dec
push
adc
xlat
mov
push
and
out
pop
lock
ficomp
mov
cmp
xor
pop
cs
gs
pop
into
inc
cmp
out
jg
mov
mov
cs
sbb
mov
cmp
xor
add
push
mov
popa
push
repnz
das
ja
or
xor
test
pop
sahf
leave
addr16
push
push
xchg
mov
cmps
sbb
jl
aas
mov
repz
in
and
mov
ja
add
jl
mov
pop
test
pusha
mov
out
pusha
push
mov
mov
dec
fs
call
mov
aaa
adc
sbb
sub
jecxz
lods
sbb
mov
aad
pop
jg
js
or
sub
mov
push
fwait
and
sbb
pop
das
fsub
inc
mov
and
xchg
daa
aas
xor
or
jle
cmp
adc
sahf
pop
jg
in
fisttp
out
mov
ins
jge
aad
pusha
mov
imul
cs
ins
ds
sub
leave
stos
call
les
jge
test
push
test
repz
repnz
xor
xchg
je
or
lods
xchg
or
xor
lods
adc
cmp
test
sbb
pop
loop
ds
push
push
addr16
jge
pop
inc
test
fnstcw
mov
leave
fisub
pushf
fs
jb
cmps
test
mov
bound
inc
daa
add
imul
jo
retf
add
mov
jae
sbb
jp
into
sub
pop
test
cli
jge
inc
fisubr
jo
cmpxchg
cmc
pop
iret
xchg
jnp
inc
jne
sbb
or
jecxz
(bad)
pop
push
(bad)
into
dec
and
adc
js
pop
dec
pop
lahf
movs
bound
push
mov
mov
jmp
mov
(bad)
cwde
push
fneni(8087
and
into
cmc
and
arpl
jge
sub
cmp
jp
adc
mov
jp
jmp
pushf
fucomip
(bad)
cmp
outs
shl
jne
pusha
or
call
mov
scas
in
scas
imul
(bad)
sbb
adc
adc
inc
mov
dec
dec
ins
push
les
lods
cmc
pop
call
and
retf
repnz
sub
div
push
pop
enter
pushf
inc
nop
mov
mov
call
retf
dec
fstp
sbb
ret
xchg
fimul
jle
out
xor
mov
mov
ret
or
jg
adc
mov
cmp
sub
mov
cmp
data16
movs
push
ficom
add
in
jmp
push
mov
inc
jp
inc
kunpckbw
out
(bad)
idiv
mov
jne
jle
dec
enter
gs
lds
fsubr
xchg
sbb
mov
lea
fnstcw
inc
retf
xchg
popf
test
mov
jb
in
mov
adc
cmps
jg
inc
imul
mov
fist
cmps
js
inc
inc
fcomp
push
into
jnp
jle
sar
ins
push
and
inc
repnz
cmp
jbe
mov
dec
add
or
(bad)
jge
mov
bound
call
dec
sub
sub
ror
and
add
call
add
rol
pop
jne
mov
xchg
call
cmp
cdq
and
mov
sbb
out
fs
dec
cmp
mov
mov
pop
xchg
das
cwde
sahf
cmp
push
fidivr
cli
shl
fnstsw
jmp
jl
xchg
in
gs
retf
js
call
mov
xor
jl
push
sbb
push
push
jbe
leave
test
jl
retf
not
mov
push
dec
test
inc
xor
mov
out
cli
jae
aas
xor
adc
sbb
mov
cs
js
jno
clc
and
movs
scas
xchg
mov
add
iret
add
mov
mov
or
jae
inc
xor
lods
test
nop
mov
add
push
js
mov
sbb
and
inc
dec
add
imul
mov
adc
adc
mov
pop
call
in
cmp
in
rcr
inc
test
and
sub
mov
les
daa
es
adc
inc
sub
es
in
inc
icebp
dec
mov
stos
xchg
rol
jne
popf
lods
das
js
push
cli
(bad)
movs
aaa
mov
pop
cmp
sbb
stos
adc
stos
xchg
xchg
outs
and
mov
mov
in
in
add
cmp
lods
and
ret
pop
out
inc
sub
call
lods
mov
outs
in
stc
cmp
mov
jg
jae
sbb
or
or
in
scas
xor
cs
pop
inc
jae
mov
in
jno
pusha
leave
xor
les
cmp
push
cmc
push
jb
jg
xor
push
imul
cmc
aad
js
ror
cmp
js
mov
gs
sbb
mov
add
ins
ins
lahf
sbb
cmp
icebp
js
in
cs
xchg
add
xor
cmc
inc
outs
lea
sahf
test
mov
mov
and
jmp
mov
mov
test
xchg
fist
dec
jmp
sub
imul
jp
mov
jge
jecxz
mov
(bad)
movs
xchg
imul
or
mov
sub
cmp
out
cmc
mov
xchg
mov
or
adc
or
bound
cwde
cwde
icebp
inc
xchg
sti
lods
dec
mov
stos
loop
gs
fs
push
out
xor
add
data16
repnz
or
imul
movs
xchg
and
inc
dec
cmp
es
mov
cs
inc
xchg
cmc
aad
cmp
sti
daa
repnz
test
push
add
retf
xor
daa
sub
mov
out
push
fbstp
shl
cmp
fbld
push
hlt
jl
outs
clc
pop
clc
jle
test
rcr
test
clc
mov
lds
xor
stos
das
test
ret
sub
sbb
pop
ficomp
cmps
in
movs
ja
int
inc
call
out
pop
mov
gs
sti
sub
and
jg
and
mov
shr
aaa
scas
imul
outs
lods
jo
out
aad
dec
imul
xchg
dec
xchg
int3
addr16
jnp
pushf
adc
(bad)
jns
test
into
pop
ds
inc
addr16
sub
pop
das
inc
test
sbb
and
call
lods
cmps
or
in
adc
aaa
sub
ss
jmp
aas
cli
and
jmp
pop
scas
int3
scas
jmp
arpl
xchg
mov
cmc
clc
nop
hlt
jnp
mov
daa
xor
add
mov
or
mov
bound
mov
aam
ins
fcom
les
dec
hlt
and
sub
das
sahf
push
popa
inc
jl
inc
js
xor
clc
push
ds
aad
pop
push
push
hlt
xor
or
jo
int
xchg
fmul
sahf
dec
(bad)
jmp
xchg
fadd
xchg
xchg
sub
pop
out
sub
mov
mov
repnz
rcr
imul
and
std
enter
mov
push
jl
aaa
pop
adc
xor
mov
nop
cwde
ss
clc
out
fiadd
(bad)
nop
imul
xchg
mov
clc
ja
lods
imul
loope
xchg
mov
shr
(bad)
xor
push
mov
add
cmps
inc
je
aad
mov
mov
xor
add
sbb
ins
in
cs
dec
and
pop
sbb
or
add
aas
loop
lahf
jno
mov
mov
lds
jb
pop
movs
sub
popa
daa
sbb
arpl
cs
jns
xchg
xchg
jno
and
xchg
ds
add
aam
mov
mov
pop
in
or
inc
inc
arpl
lea
pusha
test
mov
movs
call
mov
stos
jae
cmp
das
(bad)
(bad)
stc
jmp
xchg
mov
pop
and
in
clc
jle
mov
or
fild
push
mov
aaa
xchg
lock
cmps
cmps
mov
dec
outs
lods
inc
mov
sbb
add
test
pop
sar
arpl
(bad)
aaa
neg
pop
imul
lea
call
enter
pop
mov
mov
and
clc
(bad)
mov
or
xor
pop
movs
(bad)
pop
mov
scas
dec
cmp
imul
jmp
mov
ret
jecxz
pop
mov
das
ins
and
(bad)
fcmovne
jno
outs
jl
imul
jecxz
sub
jnp
push
fcomi
mov
out
movs
je
scas
jo
jnp
rcr
cmovle
jbe
push
scas
aad
retf
jno
inc
push
fdiv
and
out
in
sbb
into
leave
dec
jns
cli
jp
(bad)
jle
jne
and
aas
cs
adc
push
loop
and
fidivr
xchg
jg
(bad)
iret
fst
lock
jg
loop
ret
mov
pop
jmp
push
je
cmps
inc
mov
pop
push
imul
inc
sbb
or
lds
dec
test
repnz
sub
je
jmp
jnp
test
pop
pop
aaa
es
push
test
inc
sub
or
pop
out
add
int
jge
push
and
ins
das
mov
movs
in
add
cwde
mov
icebp
mov
(bad)
fild
ret
push
enter
fisttp
(bad)
stos
leave
mov
out
mov
jbe
xchg
in
pop
dec
inc
xchg
or
ins
cld
test
out
lea
gs
ret
mov
cli
jl
jmp
cld
repz
scas
retf
pop
jb
cmp
jo
xchg
add
mov
xchg
arpl
sub
in
imul
pop
out
and
lock
test
jge
sbb
iret
inc
mov
out
loop
stc
aaa
adc
loopne
ror
inc
scas
into
cmc
lods
push
jge
inc
adc
jb
call
in
lea
loop
push
lods
push
mov
out
jnp
sbb
arpl
mov
inc
outs
push
(bad)
in
sbb
shl
pop
push
dec
scas
test
imul
mov
dec
mov
push
add
sub
push
call
cmp
pop
cmp
sar
xor
xchg
popf
fimul
push
cs
inc
je
jb
out
stc
(bad)
cmp
mov
sbb
clc
inc
mov
out
int3
cmp
xchg
dec
cmp
sub
dec
push
repz
in
push
add
mov
jge
pop
into
dec
jbe
mov
cwde
mov
sbb
mov
cwde
sbb
cli
push
cwde
call
leave
adc
xor
inc
inc
out
mov
jb
pop
or
push
sti
outs
mov
stos
inc
jle
ficomp
and
dec
jb
ins
pop
leave
mov
cmp
sub
ficom
sub
lods
retf
mov
or
out
jl
movs
mov
call
cmp
or
xchg
jae
adc
fnstcw
addr16
rcr
push
and
les
aaa
sbb
jno
xchg
sub
cmps
push
cmp
outs
push
ficom
mov
pop
dec
fldcw
pop
std
sbb
sub
dec
inc
call
pop
jp
fist
jo
clc
jo
ds
jnp
mov
mov
mov
or
mov
push
ret
retf
loop
mov
pop
sbb
inc
push
mov
cmp
adc
ret
sub
dec
sbb
jp
push
dec
cmps
xchg
jbe
retf
inc
popf
clc
cmps
in
push
jae
mov
lds
jmp
mov
and
out
sti
ins
add
sub
in
push
mov
in
ror
sbb
aaa
push
imul
outs
dec
dec
fst
cmps
inc
xor
pop
inc
xchg
inc
xchg
sub
push
int3
enter
add
mov
push
sar
cmp
sub
je
xor
aaa
jne
cmp
jg
dec
mov
xchg
aam
mov
mov
pushf
mov
(bad)
sub
dec
jbe
fstp
inc
pop
and
lds
and
movs
dec
push
and
dec
dec
xor
mov
push
not
jmp
in
or
mov
xchg
cmps
mov
jle
jmp
sbb
test
dec
xor
xor
or
call
ja
adc
sbb
daa
inc
push
push
pop
adc
push
xor
jge
xchg
mov
lods
mov
dec
out
xchg
jmp
test
(bad)
repz
sub
cdq
inc
dec
fmul
cmp
push
inc
cli
pop
dec
ss
(bad)
adc
mov
or
lea
lods
push
xchg
loop
jo
dec
xor
xor
and
int3
jecxz
dec
sub
mov
inc
mov
mov
pop
mov
pop
dec
jno
sar
xor
pop
xor
dec
(bad)
(bad)
push
xor
mov
cli
or
push
sub
push
test
mov
aas
mov
mov
das
xor
mov
mov
pop
arpl
mov
sub
cmp
bound
mov
jp
ficom
shr
or
ds
add
lods
clc
aad
or
jmp
fs
push
ror
adc
and
add
jmp
sub
push
xchg
stos
cld
das
pop
push
adc
mov
mov
sub
xchg
repz
aad
cld
xor
xchg
shr
sbb
in
jmp
mov
add
leave
int
push
out
pop
jno
add
push
lods
int
pushf
adc
push
das
jmp
not
inc
adc
fwait
(bad)
(bad)
add
and
(bad)
pop
rcl
dec
rcl
stc
pusha
dec
movs
inc
ja
jbe
mov
pop
dec
fstp
fdiv
aaa
dec
lock
dec
inc
clc
lock
and
lea
xchg
jnp
fimul
cmp
pop
cmp
arpl
rol
fst
retf
mov
pop
jae
mov
dec
and
jne
mov
jmp
add
xor
mov
je
dec
mov
pop
jae
jg
dec
shr
add
xchg
test
(bad)
je
jns
sahf
sti
jb
cli
popa
mov
pop
adc
addr16
std
jae
mov
movs
pop
cmp
mov
popa
push
out
loopne
or
ficomp
jo
imul
pop
jno
in
cmp
push
xchg
iret
in
cld
addr16
mov
jp
sub
iret
rcr
adc
hlt
and
test
scas
jecxz
lods
pop
mov
pop
dec
mov
fadd
loope
int
pop
fnstcw
cmps
arpl
cmp
ror
mov
xlat
fstp
test
mov
jmp
xchg
jae
aam
lahf
pop
sub
fwait
pop
mov
hlt
add
mov
aam
push
dec
pop
adc
and
mov
fwait
cdq
sub
shr
dec
cmp
pop
icebp
mov
jns
jo
adc
and
repnz
mov
ins
mov
sub
pusha
loope
mov
js
loope
imul
xor
mov
mov
(bad)
popa
test
mov
or
jae
mov
mov
cmp
ss
xor
call
cmp
out
sbb
adc
jne
push
out
jle
add
sub
dec
xchg
les
adc
pop
dec
out
popf
imul
xchg
and
cmp
jmp
stc
addr16
jge
out
ss
xor
movs
ret
out
push
jne
cld
adc
adc
pop
mov
lods
pushf
jns
jmp
iret
cmp
pop
cwde
and
scas
push
test
arpl
iret
and
jns
jmp
xor
mov
jb
jp
es
xor
mov
mov
out
rol
shr
sub
dec
(bad)
sahf
adc
or
jns
sub
and
xchg
mov
imul
pop
or
les
jno
jo
int3
cmp
fbstp
data16
ins
xchg
bound
pop
mov
(bad)
nop
mov
sub
mov
std
popa
or
or
nop
mov
cmp
push
inc
outs
loope
push
or
ss
dec
sub
pop
mov
mov
mov
pushf
inc
jne
lods
jbe
and
jmp
jmp
(bad)
and
pushf
cmp
mov
inc
or
or
pusha
ret
test
and
sar
(bad)
inc
push
cmp
gs
pop
xor
xor
into
adc
jae
pop
and
call
stc
and
cmp
scas
push
fdiv
rcr
dec
adc
xor
in
iret
cmp
cld
(bad)
xchg
push
sub
call
imul
push
adc
inc
arpl
sub
not
clc
lea
ds
mov
das
jg
add
push
pop
(bad)
jb
out
pop
cld
xor
push
xchg
sbb
retf
mov
xor
fs
add
add
shl
cmp
push
push
xor
and
mov
and
push
out
test
(bad)
lock
(bad)
jg
cmc
sub
sub
dec
lahf
(bad)
ins
xor
adc
shr
add
mov
or
adc
mov
jns
push
mov
jge
fadd
push
loope
xor
shr
ss
sahf
cmp
add
add
arpl
inc
les
push
into
lahf
adc
out
jmp
sub
(bad)
stc
arpl
in
nop
adc
sub
sar
mov
inc
push
dec
mov
or
mov
outs
mov
mov
std
cli
ss
sbb
dec
retf
(bad)
xor
int
aaa
rcr
sti
cmp
pop
fldcw
lock
push
in
clc
jae
outs
js
add
lahf
mov
cmp
add
in
push
(bad)
sub
fbstp
mov
int3
jae
mov
(bad)
loopne
mov
inc
cmp
movs
mov
push
pop
outs
jnp
push
jns
mov
mov
pushf
add
mov
adc
sbb
jns
imul
xor
stos
mov
aad
sub
ins
push
mov
adc
and
addr16
fbstp
ret
pop
bound
sbb
retf
push
aaa
mov
arpl
inc
loope
adc
jg
cdq
cld
or
inc
cmp
sbb
inc
pop
test
push
sti
dec
pop
stos
pop
cmp
pop
(bad)
add
cmp
xor
add
cmp
adc
cmp
pushf
(bad)
mov
sub
je
ins
xchg
cs
leave
nop
jl
push
movs
retf
ja
dec
mov
pop
xor
gs
sub
fnstsw
test
mov
push
dec
push
dec
mov
out
pushf
add
ins
push
mov
mov
movs
jecxz
out
fld
aas
aad
inc
push
out
sub
aam
fidivr
fst
push
sub
cwde
pop
js
stos
dec
jo
stos
push
inc
sub
ja
add
das
enter
xchg
clc
inc
xchg
jno
repz
or
inc
in
mov
dec
(bad)
sub
xor
xchg
sbb
mov
adc
add
test
gs
fbstp
dec
inc
icebp
in
mov
ins
loopne
fdiv
es
cdq
out
push
bound
add
adc
fdivr
dec
aam
jo
movs
vorps
pop
sub
jle
in
(bad)
cmp
sub
sub
pop
(bad)
xor
(bad)
imul
loopne
dec
jg
xor
mov
out
mov
js
outs
mov
jg
add
mov
ret
dec
in
jne
inc
sti
clc
(bad)
icebp
jno
and
lock
push
sbb
pop
ins
clc
fdivr
mov
inc
xchg
mov
mov
mov
mov
xchg
mov
mov
xor
cli
pop
cmp
shl
fild
add
xlat
adc
mov
ins
adc
dec
clc
xchg
pusha
stos
jo
xor
hlt
pop
popa
mov
imul
pushf
or
pop
mov
xchg
in
sub
outs
xor
push
jle
sub
mov
jl
mov
sub
call
inc
rcl
dec
jae
or
popa
cmps
push
cmp
mov
mov
push
fadd
pop
loop
call
cmp
mov
test
(bad)
ja
cmps
rol
in
mov
ss
fs
xlat
jne
push
xor
lods
arpl
or
ret
push
fild
icebp
repnz
dec
(bad)
repz
ins
mov
lock
push
lock
xlat
ss
push
pop
pop
mov
loopne
jecxz
mov
aaa
xor
clc
movs
mov
xchg
retf
imul
ins
imul
iret
lahf
imul
mov
and
sbb
nop
or
inc
pusha
mov
xchg
ds
shl
pop
jnp
aam
or
(bad)
sbb
dec
sbb
xor
loopne
mov
daa
xchg
and
and
ror
retf
jl
dec
lahf
xor
push
pop
jl
inc
hlt
mov
ds
mov
cdq
mov
je
inc
movs
xchg
jne
cmp
cs
ret
ss
dec
mov
aas
dec
pop
fild
jl
mov
cld
stc
push
xor
xchg
sar
mov
ins
ficom
pop
pop
outs
sti
pop
pop
push
push
sub
pop
mov
data16
pop
pop
cmp
push
xlat
pusha
dec
add
mov
lods
cs
dec
or
jae
jb
pop
inc
add
scas
sbb
test
(bad)
push
sbb
inc
sti
lods
hlt
addr16
(bad)
push
sbb
cmp
lds
mov
shl
clc
cmps
rcl
jbe
jl
sahf
stos
pop
lds
ins
mov
pushf
push
fs
and
cmp
stc
adc
cli
adc
cmp
mov
and
rol
stos
mov
lods
mov
sbb
cmp
in
mov
sti
sbb
fs
push
cs
aaa
call
inc
pop
sbb
push
scas
adc
sbb
cwde
in
retf
test
push
push
lods
adc
scas
mov
lea
addr16
mov
call
lock
jmp
loop
sub
xor
adc
ds
and
mov
scas
inc
fwait
fwait
jne
int
movs
sahf
mov
jns
stos
jmp
xlat
movs
aad
jmp
ret
cmp
cli
in
mov
out
push
ret
sti
fst
cmovg
inc
test
mov
jmp
into
inc
jbe
cmp
push
and
mov
scas
ja
(bad)
sahf
mov
mov
or
lds
and
call
cs
gs
xor
xor
stc
sub
mov
lea
(bad)
jmp
les
div
pop
jno
jbe
sbb
cdq
clc
or
mov
inc
xchg
jns
or
js
stos
nop
mov
add
mov
jns
jp
push
dec
sub
pop
add
mov
pushf
jae
aaa
xor
mov
sbb
add
add
cmp
xchg
xor
imul
adc
sub
and
ret
mov
sub
les
or
iret
dec
lock
jmp
adc
stc
aad
enter
mov
ins
pushf
aas
out
jae
xchg
mov
inc
pop
cmp
sub
dec
mov
jnp
ds
mov
sub
jp
dec
jne
inc
inc
and
loope
ins
out
pop
ror
dec
ja
sahf
add
sbb
sbb
in
retf
jno
mov
or
push
sbb
add
cld
aam
jbe
int3
(bad)
movs
rcl
out
sub
pop
mov
fs
xchg
mov
fnstsw
mov
cdq
dec
shr
sahf
inc
ja
repz
pop
out
ins
sub
bound
(bad)
mov
dec
jb
sar
punpckldq
jmp
adc
out
push
loop
adc
fpatan
jb
(bad)
sub
or
rol
jb
jmp
xor
jns
cmp
lock
std
hlt
sbb
mov
pusha
xor
push
mov
jbe
jg
push
test
loope
sub
mov
pop
mov
jns
popf
div
jmp
or
xor
lea
lds
xor
test
or
jb
push
push
jp
fincstp
mov
aas
ret
icebp
inc
int
add
loop
and
call
mov
int
inc
push
push
adc
out
pop
dec
out
inc
push
ins
pop
int3
sub
jecxz
dec
dec
jmp
xlat
xchg
lods
mov
jg
mov
push
(bad)
adc
fistp
adc
jmp
imul
pop
mov
add
cmp
bound
xor
cmp
adc
xor
push
inc
movs
push
push
inc
jge
jae
lds
mov
dec
inc
jmp
push
sub
shr
mov
pop
in
pop
ss
in
jnp
xchg
dec
xchg
jle
scas
lea
inc
mov
xor
inc
sbb
sbb
shl
jno
aam
enter
dec
inc
repz
seto
pop
stc
fs
mov
jmp
ins
outs
sahf
mov
cmp
shr
(bad)
shl
es
push
inc
rol
push
(bad)
shr
inc
ins
ret
xchg
jecxz
imul
pop
movs
fs
outs
rcl
push
retf
(bad)
pusha
mov
and
inc
icebp
(bad)
clc
fwait
idiv
sbb
test
sbb
lea
mov
outs
inc
mov
xchg
test
mov
pop
and
add
push
pop
mov
in
nop
cmp
xor
xchg
cmp
into
push
adc
push
in
inc
cdq
add
inc
ss
adc
mov
inc
mov
and
in
jbe
in
cmps
retf
push
sub
addr16
xor
retf
dec
cld
iret
jo
mov
outs
or
lods
pop
pop
mov
xlat
adc
hlt
imul
in
sub
jge
jne
les
adc
ins
div
sar
stos
js
add
cdq
call
add
mov
mov
cmp
sar
(bad)
xor
nop
mov
and
inc
pop
push
mov
hlt
(bad)
fidiv
ror
test
mov
stc
pop
(bad)
mov
div
push
dec
push
mov
(bad)
sub
cmp
pusha
sbb
add
add
daa
jo
icebp
add
repnz
ja
sub
js
add
mov
cmp
mov
inc
iret
fisttp
inc
mov
mov
ss
xor
cmc
push
sbb
jl
loopne
push
(bad)
bound
or
movs
mov
jne
sbb
xchg
imul
cmp
push
adc
(bad)
jle
cmps
fs
dec
cdq
xchg
fisub
cmp
cwde
adc
jecxz
(bad)
aad
repnz
pop
jae
pop
test
lods
add
add
mov
cli
and
in
cdq
mov
inc
in
mov
cld
jl
fwait
xchg
fisttp
mov
jno
(bad)
jnp
sub
test
jge
cmp
jecxz
pop
jmp
mov
inc
or
icebp
jnp
std
adc
add
fdiv
sub
int3
sbb
inc
jecxz
in
push
pop
jle
into
(bad)
sti
ins
out
ret
cmp
pusha
adc
xchg
push
stc
jne
mov
cld
sub
xor
sub
mov
ins
sbb
pop
stc
mov
push
lods
push
cwde
mov
jns
sub
je
mov
and
jae
jne
(bad)
xchg
inc
movs
sbb
sbb
scas
pop
out
cs
push
xchg
pop
aaa
xchg
dec
jo
jb
push
stc
es
cmps
popf
cdq
nop
add
outs
mov
jae
lea
retf
nop
xor
fs
jne
icebp
loop
mov
mov
mov
scas
fcomp
adc
jp
cdq
xor
jbe
xor
ss
cmp
sub
add
add
pop
adc
fwait
jg
sahf
or
cmp
stos
or
ins
pushf
dec
sbb
adc
and
retf
dec
sbb
adc
sbb
pop
pushf
pop
and
addr16
lods
pop
dec
in
or
pop
xor
iret
mov
and
stos
clc
mov
mov
scas
arpl
inc
loope
movaps
into
sub
and
sub
repz
pop
and
fbld
lahf
mov
in
addr16
push
inc
inc
xchg
push
and
cmp
aaa
dec
loope
sbb
mov
dec
jcxz
shr
mov
stos
xor
inc
mov
jge
arpl
jno
sub
cmps
push
sub
jno
fsubr
xsaveopt
xor
mov
sub
ficom
jg
retf
fs
sub
leave
push
shl
sub
inc
leave
fst
cwde
data16
pop
(bad)
jmp
push
cmp
popf
out
adc
xchg
xchg
sub
push
ins
test
xor
push
jbe
aaa
arpl
jmp
out
mov
add
call
outs
in
pusha
outs
xor
inc
or
cmps
pop
stos
jns
sbb
retf
mov
xchg
(bad)
(bad)
xchg
sbb
lahf
mov
call
push
xor
mov
jbe
sbb
pop
cwde
mov
shr
jae
gs
add
and
adc
ret
adc
xor
shl
mul
shl
pop
je
nop
xchg
push
and
mov
data16
jbe
xchg
xor
cmp
xchg
inc
push
pop
aas
cs
xchg
stos
add
pop
cmps
cld
lea
add
and
shl
shl
sub
mov
mov
mov
andnps
jae
pop
imul
jmp
gs
push
jmp
sub
jns
stc
xchg
adc
enter
jg
nop
out
sbb
retf
dec
push
ins
hlt
mov
sub
sub
mov
lea
inc
jecxz
mov
in
jg
mov
xor
out
test
inc
xchg
mov
imul
adc
in
bnd
das
dec
sbb
retf
mov
and
push
cmps
inc
ret
mov
mov
popf
push
test
enter
mov
xlat
or
jo
idiv
pop
je
dec
fistp
inc
popa
add
xchg
mov
test
jle
mov
or
push
out
sahf
sbb
aam
sbb
mov
jmp
mov
stos
popf
leave
fdivr
out
push
jne
sti
movs
and
mov
sub
jne
hlt
sub
dec
dec
pop
int3
xchg
ret
arpl
or
and
test
or
ret
fnstcw
jnp
push
jp
xor
test
jp
pop
and
je
jl
sbb
sbb
lahf
xor
jmp
jne
cmps
pop
aad
cmps
call
xor
xor
pop
dec
push
shl
pop
fs
add
rol
icebp
push
mov
push
fadd
(bad)
jmp
int3
dec
imul
pop
mov
mov
loop
cmp
push
inc
lds
xlat
jae
test
push
xchg
mov
int
adc
adc
imul
gs
ret
outs
test
pop
dec
push
sbb
stos
lods
mov
cmp
sub
(bad)
call
loopne
sar
je
xor
dec
cmps
(bad)
adc
mov
sub
and
js
out
loope
retf
ror
ins
and
loop
adc
cmp
dec
xor
jl
(bad)
rcl
xchg
test
cmp
test
js
mov
les
outs
ficomp
lods
sysexit
(bad)
jns
xchg
inc
scas
pop
xchg
jns
pop
bound
push
add
jo
jle
test
sbb
loope
mov
cmc
pop
popa
call
push
movs
arpl
mov
lds
or
arpl
jl
push
rcl
fs
push
pop
push
inc
push
cmp
cmp
stc
xor
mov
dec
movs
and
int
shl
lds
enter
into
fisttp
and
mov
(bad)
mov
mov
adc
pop
lahf
jbe
mov
mov
ficom
mov
mov
xchg
add
sbb
fild
into
pop
sbb
outs
push
push
ds
mov
in
daa
imul
pop
cs
(bad)
adc
dec
cmp
jmp
or
dec
or
ja
push
jmp
inc
(bad)
fs
das
xchg
scas
mov
fsub
repz
fnstcw
pusha
sbb
das
test
adc
in
adc
mov
xor
dec
mov
or
pusha
add
nop
pop
fstp
or
ret
stos
stc
test
(bad)
mov
das
cwde
inc
ins
and
inc
xchg
xlat
sub
mov
ins
adc
test
mov
pop
test
xchg
daa
imul
xor
sbb
not
mov
mov
addr16
cmc
sbb
dec
jmp
call
aad
out
mov
push
(bad)
bound
inc
add
cmp
gs
add
lds
pop
jmp
fimul
mov
dec
(bad)
mov
xchg
scas
adc
and
mov
fidiv
ficomp
add
popf
or
cmc
mov
(bad)
loopne
test
push
sbb
sbb
pop
test
and
push
inc
mov
mov
sbb
cmps
call
(bad)
dec
adc
xor
dec
in
ss
fcom
sbb
cmp
cs
sbb
(bad)
pop
clc
fwait
loop
ja
pop
add
call
stos
cdq
dec
mov
pop
xchg
xor
stos
mov
pop
icebp
xchg
and
(bad)
cmp
push
xor
mov
jge
dec
ret
scas
addr16
unpckhps
cdq
cmc
sbb
xor
pop
dec
fsubr
nop
popf
push
jnp
imul
pop
lods
xchg
ret
xor
pop
inc
fsub
and
jbe
mov
and
push
mov
int3
dec
hlt
les
mov
jbe
cli
xor
xor
clc
sub
out
sbb
test
call
ins
stc
push
lahf
push
dec
mov
mov
rcr
add
adc
adc
cmp
push
xchg
mov
mov
adc
sub
ficom
mov
mov
jecxz
out
pop
leave
(bad)
arpl
push
jb
arpl
retf
add
and
jbe
mov
sub
mov
push
push
jge
fisub
inc
(bad)
fidiv
sbb
sub
sgdtd
outs
stos
inc
jge
pop
je
and
outs
mov
push
ds
adc
loopne
mov
lods
mov
jge
xor
data16
(bad)
ret
scas
in
call
out
daa
jmp
sub
jae
mov
xor
jg
retf
jp
jbe
mov
add
pop
xchg
cmp
fbld
add
(bad)
aad
cmp
dec
dec
jno
adc
shl
mov
xor
addr16
ficom
into
push
pushf
jecxz
add
loope
(bad)
(bad)
fst
mov
add
adc
cmp
pop
mov
std
cld
arpl
mov
or
sub
call
imul
mov
test
sti
in
jmp
not
and
jmp
sub
inc
or
jmp
iret
pmaxsw
or
(bad)
jo
bound
sbb
pop
mov
ss
call
mov
adc
xchg
cmp
rcl
pop
loopne
pusha
cmp
dec
add
or
aaa
push
repnz
jge
or
mov
push
ss
in
lods
mov
cmp
loop
or
frstor
fdiv
cmp
mov
pop
dec
stos
nop
out
clc
lahf
les
or
sub
fist
rol
(bad)
sti
es
dec
out
sbb
and
adc
sub
or
leave
xchg
sqrtps
sub
jecxz
out
jno
or
add
cwde
dec
outs
mov
loopne
pop
xchg
fs
test
dec
pop
xor
inc
sbb
adc
fstp
and
jbe
cld
sub
or
arpl
push
inc
sub
inc
sub
inc
dec
out
sub
(bad)
jmp
sub
call
stos
sub
ret
bound
jb
inc
adc
cmp
lock
fdiv
scas
(bad)
sar
mov
or
mov
or
mov
loop
fdiv
mov
ds
xor
lds
cmp
dec
push
in
in
pop
mov
sti
xchg
sbb
arpl
bound
cmp
jl
ds
sahf
dec
dec
ins
std
pop
jl
sbb
jns
cmc
shl
mov
push
mov
mov
call
and
sbb
adc
cmp
repnz
(bad)
xor
jne
xchg
mov
int3
sub
pop
les
add
cmps
mov
aad
mov
pop
inc
outs
mov
mov
adc
enter
and
aad
add
ins
lock
and
xor
sahf
ret
xor
lods
mov
push
(bad)
sbb
aas
sub
xchg
xchg
push
or
inc
push
mov
sbb
shl
inc
jnp
mov
mov
jne
pop
dec
cli
data16
jb
mov
xor
or
jmp
rol
mov
shl
and
adc
sar
adc
pop
mov
dec
or
mov
scas
jnp
push
mov
push
fdivr
mov
sbb
cli
lds
ror
push
lds
mov
sub
sbb
adc
inc
out
pop
int
out
cmps
dec
jecxz
(bad)
mov
rcr
pop
inc
pop
or
ret
add
mov
movs
mov
cld
les
add
lds
(bad)
sahf
lock
push
push
xor
mov
(bad)
(bad)
jno
pop
inc
out
jp
jns
cmp
in
sbb
je
lahf
push
jb
and
xchg
cld
xchg
dec
push
jg
data16
(bad)
mov
pop
or
adc
cmp
sbb
outs
test
ja
jmp
add
movs
shr
mov
jle
dec
fbstp
cmp
and
ds
fsub
xchg
jmp
cmp
int
sti
push
cmps
dec
cmp
mov
or
movs
xchg
pusha
pop
mov
jl
and
add
movs
pop
or
(bad)
ins
jg
jno
cs
daa
mov
in
movs
into
mov
aaa
fistp
add
sbb
pop
(bad)
mov
sar
mov
rol
rol
fs
mov
push
add
xor
jbe
adc
mov
into
or
test
cmp
xor
push
adc
sbb
inc
mov
add
ins
cmp
test
xchg
pop
ds
ds
xor
in
sub
mov
pop
xchg
xor
inc
and
and
xchg
retf
xor
out
mov
mov
xor
out
int
jne
pop
imul
rol
nop
int
mov
sar
mov
cmps
shr
shl
mov
js
fmul
je
xchg
jge
jne
mov
pop
not
in
out
loop
jecxz
cwde
fs
test
push
add
(bad)
sub
mov
jg
xlat
out
add
mov
cld
push
pop
in
loop
daa
xor
mov
(bad)
pop
cmp
cmp
jne
mov
sbb
jae
retf
push
into
cld
retf
mov
imul
push
pop
jp
jp
push
inc
aad
rcl
inc
add
popa
rcr
shl
stos
hlt
retf
and
or
popa
jp
out
lea
cmp
js
add
add
inc
inc
js
outs
push
inc
xchg
std
(bad)
cli
mov
mov
adc
(bad)
push
scas
dec
test
neg
sbb
in
sbb
ins
cmp
inc
push
imul
xlat
in
mov
cmp
outs
sub
mov
jno
push
ds
pushf
(bad)
iret
xchg
fmul
(bad)
es
data16
pop
add
(bad)
mov
out
or
push
pop
jmp
movhlps
jnp
stos
int3
pop
cmp
out
xchg
adc
arpl
mov
lods
mov
pushf
mov
ret
xchg
imul
ins
pop
jne
jb
stos
cmp
push
jp
push
(bad)
push
push
retf
lods
cwde
jns
int
pop
adc
sbb
jmp
sar
mov
cli
mov
out
(bad)
xor
mov
xchg
daa
hlt
mov
xchg
pop
inc
jp
inc
ret
ret
push
xlat
inc
or
sub
inc
push
rcl
imul
push
or
adc
into
jo
jb
xor
sub
mov
shl
bnd
test
ret
cwde
inc
mov
loop
pusha
enter
pop
idiv
lahf
bound
ja
pop
fistp
dec
into
mov
movs
sbb
adc
and
dec
fisttp
js
jp
xor
mov
sbb
push
daa
dec
xor
mov
leave
push
adc
inc
mov
mov
jb
pop
push
adc
and
(bad)
mov
mov
add
addr16
mov
mov
and
jnp
(bad)
jne
leave
test
sti
push
out
dec
push
mov
xchg
ja
push
(bad)
jno
fwait
mov
xor
loope
jle
out
push
fist
jo
or
ss
sbb
mov
jne
mov
mov
in
jp
fldenv
xchg
popa
aad
adc
(bad)
(bad)
loope
gs
xor
inc
xor
push
xor
sahf
xor
inc
jmp
jecxz
inc
sub
mov
mov
sub
nop
outs
dec
mov
test
daa
xor
call
xor
fldenv
or
call
inc
fidivr
cmp
fbld
sbb
ret
jne
inc
or
adc
pop
mov
push
mov
push
sbb
out
pop
popa
xor
cmp
aad
fdiv
jns
inc
fld
(bad)
mov
xchg
mov
dec
cdq
pop
mov
arpl
movs
sub
aas
sar
es
jp
jno
retf
ss
(bad)
or
push
push
call
test
adc
repz
dec
fisttp
das
mov
add
cmp
je
and
imul
xor
push
mov
push
xlat
mov
mov
ins
mov
(bad)
xor
lea
and
loop
mul
pusha
inc
mov
adc
test
(bad)
mov
pop
xor
sbb
sbb
into
xor
cmp
popf
ins
dec
div
(bad)
and
or
std
mov
cdq
fdivr
clc
sbb
mov
adc
mov
ss
jno
loopne
mov
jl
jmp
jbe
(bad)
or
jo
out
jbe
cmp
push
push
push
fist
stc
fstp
mov
sub
xchg
ins
cmp
sbb
push
js
inc
sub
std
jge
xor
aaa
push
xor
push
shl
inc
adc
aaa
lds
inc
aaa
inc
stos
je
jge
push
add
call
mov
sub
add
adc
mov
popa
add
aad
ins
pushf
shl
jg
sbb
pop
jmp
push
mov
sbb
cmp
aaa
xor
xchg
ja
idiv
mov
and
mov
into
jp
xor
push
xor
out
sub
aam
imul
push
mov
aad
data16
fsub
lds
xor
jnp
clc
outs
int3
iret
movs
out
jbe
pop
call
cmp
dec
in
pusha
jbe
push
or
(bad)
ja
cwde
push
arpl
jnp
mov
pop
(bad)
push
jge
clc
(bad)
cs
xchg
fidiv
lods
push
outs
xchg
cmp
sbb
and
jo
pop
add
cld
leave
lahf
or
ret
push
xchg
mov
cmp
out
pop
aaa
mov
and
cdq
mov
and
outs
fidivr
loope
sbb
shr
sahf
mov
les
adc
loopne
sub
js
jmp
inc
iret
movs
and
xor
cld
nop
and
inc
and
xor
scas
xchg
out
in
cdq
push
lahf
xor
and
dec
(bad)
js
sub
cmp
mov
pop
sbb
ja
inc
lock
adc
xor
aaa
dec
pop
jb
push
movntq
sahf
sbb
jo
and
adc
jmp
fs
mov
inc
test
jnp
or
sahf
dec
xchg
movs
popf
(bad)
sar
or
int
inc
dec
jp
aas
push
out
or
push
ins
mov
sbb
mov
pop
dec
arpl
fdiv
stos
rcl
repnz
pop
ret
mov
inc
and
shr
push
mul
sbb
sbb
aad
cmp
repz
les
out
jg
pop
test
pop
(bad)
call
sbb
pushf
arpl
dec
outs
push
xor
call
pop
mov
loope
mov
call
or
mov
jmp
add
pop
or
lods
xor
test
pop
inc
aas
movaps
loop
adc
push
stos
mov
mov
jae
cmp
js
arpl
jmp
stos
js
std
dec
cli
inc
pop
dec
gs
shl
lds
cmp
inc
and
retf
js
mov
(bad)
mov
call
and
jle
xor
div
lahf
adc
and
pusha
aaa
and
fidivr
jp
outs
mov
mov
inc
push
xor
xlat
dec
sbb
ins
sub
jge
call
adc
iret
daa
bound
ins
mov
jne
jmp
pop
inc
jno
or
sti
inc
div
sbb
arpl
imul
repz
xor
or
jne
mov
addr16
jae
repnz
call
and
push
sti
xchg
push
ret
cmps
add
mov
cmp
mov
dec
stos
ins
push
xor
dec
jno
sbb
(bad)
mov
int
test
dec
inc
push
movs
mov
mov
dec
pop
mov
pop
popw
add
or
cs
and
les
adc
bound
stos
sbb
je
push
sub
loopne
mov
mov
mov
mov
push
inc
icebp
add
jl
adc
sub
adc
sbb
jns
ret
inc
fst
fdiv
push
retf
push
scas
xor
inc
jp
(bad)
adc
shr
gs
adc
push
test
popa
loop
or
ss
shl
sbb
jmp
add
xchg
sti
out
mov
data16
stos
stc
js
int
xchg
pop
cmp
sub
dec
aas
gs
scas
test
cmp
gs
loop
pushf
adc
cwde
fadd
hlt
ja
mov
pop
ins
pop
mov
pop
jns
movs
cmps
outs
jle
cmp
xchg
inc
mov
cmp
loopne
xor
in
mov
loope
dec
popa
loopne
rcl
dec
(bad)
mov
jo
shr
mov
cmp
int3
mov
dec
jmp
pop
jecxz
(bad)
retf
sub
mov
das
das
retf
adc
cmp
add
lock
jmp
sub
movs
les
sbb
mov
daa
outs
fldcw
call
in
jns
inc
dec
pushf
jno
sub
sbb
sub
les
popa
sahf
cmp
dec
jne
xchg
ja
push
lea
xlat
bound
add
popf
or
cmc
sub
fstp
test
cmp
adc
dec
sub
pop
sbb
sub
and
call
rcl
mov
mov
pop
or
jae
jp
mov
sbb
dec
cld
jnp
test
les
pop
adc
xchg
push
hlt
cmovs
fwait
rcl
jge
add
mov
shl
jnp
cwde
sbb
mov
imul
mov
(bad)
sbb
call
sub
adc
fincstp
test
pushf
mov
lahf
pushf
mov
pop
test
mov
out
pop
xchg
xor
sub
add
cmc
jle
push
mov
jge
maxps
jne
retf
loopne
test
std
rcr
sub
mov
into
outs
enter
jnp
mov
inc
repz
popa
jmp
xor
cmp
fnstsw
int
cmps
scas
and
jne
jg
popf
mov
rcr
push
pop
pop
cmp
jno
clc
(bad)
sbb
movs
or
fsubr
push
mov
adc
aaa
fild
(bad)
xor
mov
and
inc
stos
pushf
push
jbe
sbb
inc
dec
das
neg
stos
sub
and
jnp
stc
and
retf
mov
into
mov
aas
jae
jl
sahf
mov
fisubr
mov
dec
lods
arpl
mov
mov
lahf
in
ins
pop
add
sub
mov
dec
mov
xor
mov
repz
sbb
jb
sbb
pop
dec
cli
repz
adc
imul
jecxz
icebp
ja
cmp
pop
jb
(bad)
jne
or
xor
sbb
jb
sub
and
xchg
push
cdq
mov
enter
sub
push
mov
pop
sub
ins
sar
add
adc
pop
fucomip
mov
mov
cmp
cld
pop
cmp
into
inc
mov
sbb
add
pop
mov
aaa
jmp
and
inc
xor
loop
not
addr16
nop
sbb
cld
mov
lds
dec
xor
sub
outs
arpl
aas
jmp
(bad)
outs
mov
mov
dec
int
push
pop
punpcklbw
push
ds
jae
out
aaa
retf
push
ja
mov
or
icebp
and
pop
rol
out
movs
pop
or
inc
cmp
sbb
sub
cmc
xor
jns
leave
mov
jbe
mov
out
jns
test
shl
and
xlat
mov
pop
lods
popa
add
xor
int
fwait
xor
sub
outs
jle
cmp
adc
sbb
push
and
ds
inc
xor
or
cmp
aad
icebp
aam
call
mov
(bad)
je
mov
aaa
mov
movs
xor
retf
push
inc
push
in
inc
retf
pop
cdq
pusha
loop
mov
imul
pop
adc
adc
gs
cmp
xor
push
lods
shr
sub
inc
retf
je
pop
into
std
in
xchg
shl
add
movs
jmp
js
sub
dec
pop
mov
shl
jbe
push
xor
fadd
cdq
not
imul
arpl
pop
cmp
jmp
push
mov
fnstcw
xor
jns
retf
cmp
cmc
fwait
test
stos
dec
jge
je
sbb
pop
int
inc
lods
ins
jb
cmp
cdq
mov
cmc
int
mov
sub
inc
rep
retf
das
ret
mul
mov
and
stos
popa
xchg
lds
cld
sbb
pop
rol
jecxz
sub
aam
inc
ficomp
call
push
jb
jg
cwde
out
ins
dec
or
popa
outs
shl
add
add
into
sbb
xchg
mov
sbb
loopne
pop
ins
or
icebp
outs
retf
rol
push
sbb
and
xchg
cmp
enter
mov
mov
or
xor
jmp
ja
pop
sbb
fs
cs
push
out
mov
ins
ja
mov
jae
mov
call
inc
les
and
inc
retf
inc
(bad)
sar
popa
sub
jb
xor
push
mov
xchg
cmp
pop
repz
cmc
jmp
dec
test
in
jno
les
lea
in
hlt
mov
jno
repnz
pop
add
test
fcomp
mov
lock
out
icebp
rcr
pop
les
mov
jp
pop
test
jne
or
imul
jmp
and
aaa
xor
cmps
pop
pop
les
push
in
icebp
stc
lods
imul
dec
fnstenv
sti
call
pop
cmp
hlt
jns
add
cmp
xor
add
pop
mov
jns
sub
add
mov
sbb
add
lea
test
ret
(bad)
fucom
jo
inc
pop
test
cmp
add
cmc
push
in
or
mov
(bad)
jmp
in
test
test
xchg
movs
ja
dec
push
loope
fld
retf
jae
pop
push
mov
mov
je
out
pop
addr16
loop
pushf
out
or
sbb
mov
(bad)
jmp
inc
fistp
jecxz
scas
in
cmp
or
mov
and
xor
cld
loope
sub
loope
cmova
xchg
mov
xchg
add
sahf
cdq
or
fsub
gs
les
mov
ds
jmp
or
push
js
ret
gs
xchg
imul
fdivrp
sub
iret
clc
adc
in
lea
cmps
icebp
ss
shl
cmp
xchg
add
daa
stos
dec
inc
fldlg2
mov
cmps
xor
cmp
jb
inc
int3
shr
cs
cli
add
stos
fbld
cmp
rol
movs
scas
add
retf
icebp
or
retf
adc
cmp
cmps
cwde
push
inc
dec
iret
fsub
cmp
sbb
cdq
outs
or
mov
ss
mov
xor
test
sub
pop
and
add
test
inc
push
or
jmp
cmp
dec
das
sub
outs
rcl
es
jp
stc
repz
aas
cmc
sub
popf
int
jns
push
inc
sbb
test
pop
fs
jp
into
pop
je
mov
into
pop
imul
fistp
mov
jle
cmp
mov
add
ins
jmp
pop
sbb
push
cli
cmp
adc
pop
imul
dec
pop
xor
iret
mov
dec
xor
dec
push
cmp
icebp
rol
mov
xchg
cli
mov
mov
mov
push
jmp
in
jo
adc
adc
add
movs
outs
jo
mov
ret
adc
jno
lds
dec
popa
stos
daa
adc
add
out
and
fbld
pop
xbegin
adc
dec
push
jbe
pushf
push
push
cmp
dec
pushf
pop
mov
pop
retf
mov
cmps
test
or
push
test
jmp
mov
push
xor
inc
icebp
mov
cmp
jge
xchg
in
cli
lahf
gs
add
dec
add
int3
xor
icebp
test
and
xchg
nop
dec
sub
in
in
in
mov
jbe
clc
push
inc
mov
inc
adc
fst
sbb
mov
push
pop
or
int3
sahf
ds
dec
or
into
retf
inc
lds
mov
mov
mov
enter
add
cmp
ds
pop
add
and
sub
pop
inc
dec
jno
jb
push
cmp
popw
push
inc
inc
inc
push
and
adc
dec
jmp
adc
jns
shl
add
xchg
or
add
std
adc
xchg
repnz
jne
rcl
inc
jle
sub
fs
fist
cli
dec
lds
and
test
je
xor
or
and
(bad)
call
pushf
addr16
add
nop
ret
mov
lock
jb
popf
data16
icebp
jno
outs
add
add
shr
pop
pop
fsubr
push
retf
and
mov
ja
mov
sbb
add
sub
cmp
fsub
jns
inc
add
or
mov
add
fisub
out
jp
in
xor
scas
in
xor
and
cmp
clc
call
frstor
and
dec
push
jbe
dec
mov
iret
adc
das
mov
bound
push
dec
xchg
out
pop
movs
fwait
clc
push
pop
xor
jecxz
sub
mov
imul
push
mov
cmp
fcomp
xchg
jmp
xor
push
jge
sub
cli
dec
mov
test
or
outs
mov
mul
pusha
ins
ja
dec
mov
je
push
std
or
push
jle
push
aas
jae
mov
(bad)
int
inc
movs
js
mov
push
ficom
gs
inc
cmp
add
cli
pop
ja
cs
xchg
aaa
and
push
pop
mov
jge
add
pop
jno
inc
xchg
adc
cmp
pop
lock
fidivr
dec
mov
inc
nop
xchg
sub
pop
fnstenv
out
das
imul
pop
or
mov
cli
jecxz
js
jmp
movs
mov
pop
and
dec
fnstsw
cwde
mov
mov
adc
mov
stc
pop
sbb
mov
mov
xchg
imul
popa
cmp
pop
and
sub
push
out
cmp
and
jnp
and
aad
fmul
adc
mov
add
call
pop
psllq
or
cdq
popa
add
es
lock
xchg
jbe
mov
inc
rol
ja
mov
pop
out
imul
(bad)
lods
mov
imul
jb
mov
out
inc
fisub
xor
in
adc
mov
fbld
jno
ficom
and
push
ins
inc
(bad)
fidivr
fisubr
jo
ret
jne
call
ja
sbb
enter
dec
daa
adc
out
or
sbb
das
loopne
sub
xor
mov
shufps
fstp
jne
fld
xchg
and
and
cli
xor
nop
xor
loopne
pop
jne
clc
dec
jns
leave
sub
and
cdq
jns
adc
jge
fadd
lods
popf
aaa
ds
xchg
sub
xor
xchg
lods
and
fbld
or
call
test
bound
adc
cmovbe
mul
pop
xor
mov
adc
idiv
mov
pop
inc
lods
scas
call
ja
adc
pusha
gs
jae
cs
and
shr
enter
dec
and
jmp
jbe
and
sub
dec
sbb
add
shl
and
mov
bound
cdq
or
sub
xchg
aaa
mov
sbb
test
jg
jg
jl
(bad)
scas
lea
push
scas
mov
cmps
dec
xchg
fsub
and
scas
mov
sbb
movs
stos
cmp
sub
cdq
mov
inc
pop
call
fisubr
or
shl
sar
inc
and
push
xor
jo
retf
into
cmp
sub
jg
xchg
jb
sahf
mov
pop
cmp
xchg
mov
aas
pop
outs
and
push
dec
enter
mov
cld
cmc
xor
xchg
xchg
mov
outs
push
push
pmulhuw
jo
jbe
mov
loopne
mov
jb
pop
test
(bad)
pop
(bad)
add
fsubp
outs
arpl
aaa
and
xor
adc
push
sti
pop
cmc
shl
fnstcw
xchg
cmp
xchg
sar
cs
mov
dec
push
mov
sub
cld
jge
xor
jle
in
(bad)
xor
cs
in
mov
retf
mov
sbb
mov
repz
pop
ds
out
cmps
push
repz
outs
jns
mov
sub
out
adc
add
mov
xor
add
addr16
xchg
sub
sbb
icebp
cli
shr
inc
and
mov
leave
or
xchg
loope
cs
clc
out
icebp
mov
mov
adc
test
jbe
je
scas
mov
daa
pop
inc
xor
pop
test
mov
mov
aad
sbb
rcl
mov
dec
sub
in
cmp
dec
fild
stc
dec
fdiv
sbb
add
pop
xor
into
mov
sbb
push
sub
ficomp
push
pop
gs
mov
adc
fs
sub
xor
dec
adc
mov
pop
sub
aam
mov
jle
push
mov
dec
jno
jb
xor
adc
les
mov
dec
ja
movs
or
sub
loope
fist
pop
or
cmp
arpl
push
lock
ror
adc
aas
cmps
adc
mov
into
jb
inc
dec
xlat
pop
cdq
mov
xlat
xchg
dec
and
imul
leave
pop
xor
jbe
imul
mov
push
mov
mov
xchg
sahf
ret
pushf
rol
and
jmp
jno
in
xor
mov
outs
mov
vmread
xchg
outs
add
sbb
push
lock
(bad)
in
cmps
nop
mov
inc
popa
push
dec
(bad)
cld
je
shl
xchg
shl
clc
inc
or
sub
addr16
ja
inc
(bad)
cmp
mov
imul
mov
and
add
bound
inc
push
fadd
add
xor
movs
inc
jnp
scas
jle
sub
inc
cwde
cld
jbe
dec
jge
ss
loopne
add
or
add
fidivr
jmp
sbb
stos
xor
xchg
mov
or
imul
dec
cmp
sbb
xor
sub
pop
outs
mov
je
iret
cwde
xor
fwait
imul
in
in
(bad)
loopne
cmp
pop
dec
mov
sar
sbb
jg
xchg
mov
pop
pop
xlat
clc
inc
pop
inc
ret
mov
(bad)
loop
add
pop
mov
dec
sahf
call
stos
dec
add
cmp
sbb
or
into
push
stc
jae
fidivr
jg
jb
nop
or
aam
xchg
cmp
mov
ds
push
cmp
lds
arpl
js
sub
jl
mov
ret
iret
sahf
dec
(bad)
adc
inc
cmp
mov
mov
cmp
lds
or
cmp
adc
test
pop
jnp
adc
jmp
inc
or
dec
data16
pop
loop
or
cmps
and
push
sub
mov
int
dec
and
mov
popa
jge
pusha
pop
mov
sbb
lahf
and
gs
mov
hlt
cmp
sbb
loop
dec
cmc
popa
popf
push
sub
lahf
icebp
repz
inc
pop
xor
dec
imul
push
xchg
out
sub
mov
in
and
rol
ds
dec
pop
cmp
jle
sbb
ficomp
rol
push
cmp
xor
movs
cmp
cmp
pop
fsubr
(bad)
or
xor
jp
into
jle
xchg
sub
cwde
push
add
or
or
jb
inc
fdiv
jp
push
lock
push
rcl
mov
mov
push
pop
pop
les
adc
jbe
repz
push
push
or
div
fidivr
clc
xor
xchg
cmp
adc
sahf
les
sbb
inc
and
push
call
clc
push
cmp
xchg
inc
sahf
ret
(bad)
jae
popf
and
addr16
pop
cmp
int3
data16
rol
movs
sbb
js
out
adc
scas
(bad)
rcl
add
nop
push
adc
push
imul
clc
push
pop
jmp
push
push
outs
loopne
pop
mov
sub
or
push
(bad)
stc
jmp
into
fs
add
and
ficom
pop
mov
ret
call
rol
icebp
jle
mov
call
inc
xor
and
inc
xlat
lods
and
cli
inc
inc
sbb
popa
adc
das
ins
mov
je
mov
loopne
inc
xchg
jbe
popa
push
jle
imul
inc
add
push
pushf
outs
xor
jecxz
add
mov
mov
cmp
in
mov
out
or
adc
(bad)
cmc
shl
out
adc
jne
test
stos
ds
xor
dec
leave
sar
scas
fmulp
es
outs
mov
cmp
addr16
das
add
inc
gs
adc
jp
mov
mov
jns
dec
icebp
mov
mov
aas
ins
inc
js
cmp
idiv
aaa
ror
adc
mov
jle
pop
sbb
mov
lods
sbb
repnz
lods
sub
and
fisubr
jbe
(bad)
rol
xor
cld
add
and
and
mov
push
cs
addr16
mov
cmps
imul
xchg
out
addr16
idiv
hlt
push
inc
add
aad
and
call
mov
push
or
add
mov
movs
pop
retf
dec
or
and
mov
mov
hlt
jne
sbb
lods
cmp
jo
pop
imul
inc
dec
adc
jmp
mov
inc
cmp
dec
ficomp
inc
in
imul
push
outs
stc
xchg
loope
(bad)
inc
loope
rol
inc
inc
dec
cmp
das
(bad)
nop
push
int3
sbb
test
mov
and
iret
pop
cld
pusha
xchg
jo
push
jl
mov
(bad)
int3
frstor
inc
add
or
enter
jo
popa
push
jbe
rol
test
fs
or
cmp
mov
add
in
sbb
push
inc
adc
inc
mov
hlt
icebp
cmp
adc
mov
(bad)
mov
and
dec
sbb
loope
scas
push
adc
jns
inc
into
imul
nop
das
cmp
nop
mov
mov
inc
icebp
jp
xchg
and
js
jo
lods
addr16
cmp
add
rcl
xchg
xor
pop
sar
add
call
pop
sbb
jp
out
fbstp
pop
movs
push
jb
aad
int3
mov
cwde
push
sbb
add
inc
mov
push
sbb
sbb
inc
xor
inc
jbe
pop
fwait
lods
mov
xor
mov
ret
xor
aas
inc
outs
dec
(bad)
jae
shl
data16
rol
push
fnstcw
cmp
push
adc
jb
jl
popf
ror
cld
jge
call
ror
repz
sub
repnz
lahf
cmps
push
mov
inc
bound
and
test
dec
mov
add
mov
jge
shr
ja
popf
int3
scas
jle
add
inc
ds
cmp
mov
mov
pushf
inc
inc
and
dec
movs
addr16
and
les
mov
ror
jp
cmc
xchg
and
pop
adc
sbb
dec
nop
sbb
and
adc
xor
js
adc
or
cmps
inc
jmp
lods
adc
dec
push
mov
mov
mov
mov
jl
push
xor
inc
lods
sbb
call
nop
adc
xor
mov
xchg
jns
dec
aam
retf
pop
rcr
adc
inc
push
cmp
lods
jl
fisub
stos
push
add
pop
mov
push
jno
lock
retf
inc
push
or
inc
mov
jne
mov
jmp
pop
sbb
jb
or
xchg
or
add
mov
retf
fs
inc
and
dec
mov
mov
call
pop
cmc
outs
mov
(bad)
scas
retf
ja
sbb
in
lds
cmc
pop
test
leave
push
inc
sbb
dec
adc
lock
jmp
(bad)
pusha
or
jno
fwait
dec
add
out
xor
adc
mov
inc
ret
pop
test
mov
sbb
push
(bad)
xor
call
jnp
mov
jp
pop
mov
pop
xchg
cdq
mov
cdq
push
fs
mov
mov
cmp
lea
mov
sub
xlat
mov
das
push
or
rol
rcl
push
dec
pop
xchg
or
dec
(bad)
in
inc
test
sbb
or
mov
jb
push
repz
(bad)
mov
ret
inc
lods
pop
adc
cmp
xchg
into
xchg
leave
cli
aaa
add
pop
push
pop
cmps
out
pop
dec
inc
les
add
leave
mov
fidivr
aad
xchg
mov
cmp
clc
adc
loope
ins
mov
jne
mov
ret
mov
es
or
stos
mov
loope
cmp
jg
f2xm1
pop
pop
repnz
inc
sub
stc
jp
pusha
lods
sbb
push
inc
fucom
and
shl
(bad)
inc
outs
dec
aaa
pushf
sub
mov
fidivr
or
addr16
dec
movs
fmul
dec
pop
mov
and
adc
and
add
xor
mov
outs
clc
mov
test
sar
mov
stos
out
cld
push
xchg
mov
mov
dec
cdq
sbb
outs
cwde
hlt
adc
jbe
scas
jmp
sub
nop
push
shl
push
inc
sbb
cli
cmps
fiadd
mov
dec
(bad)
cld
ins
mov
cwde
fisttp
xor
dec
cli
test
call
xor
cwde
xchg
jb
and
jbe
fsub
out
(bad)
out
out
xlat
push
cmps
or
jp
mov
int3
adc
inc
das
push
test
cmp
adc
or
fbstp
jg
xor
xor
pop
enter
cmp
lods
clc
scas
cld
sbb
in
mov
and
pop
pop
cmp
scas
pop
xor
and
pop
mov
mov
movs
(bad)
sub
lock
cmp
cmp
xchg
and
xlat
inc
rol
add
aam
and
cmps
cmp
std
data16
adc
pop
mov
and
out
push
stos
in
imul
fcomp
sbb
or
test
push
pop
rcl
adc
(bad)
(bad)
or
stos
jnp
jae
mov
mov
loope
mov
pop
pop
mov
mov
add
add
(bad)
sahf
in
xchg
jo
jle
adc
in
xlat
cmps
mov
push
mov
fs
push
jnp
ror
or
pop
sbb
popa
cmp
ret
mov
call
sub
fadd
mov
mov
mov
js
xchg
push
jle
scas
cmp
jb
jo
and
mov
mov
pop
and
cmp
arpl
adc
cmp
push
loope
fstp
out
dec
sub
xchg
xor
arpl
sbb
idiv
pop
call
test
adc
je
aas
pop
inc
xor
(bad)
fldenv
stos
mov
xor
(bad)
sar
cli
shr
scas
repz
xor
push
add
ror
pop
jne
push
sub
mov
or
inc
out
out
jp
sbb
mov
dec
data16
popa
mov
sub
push
ret
cmp
(bad)
xor
(bad)
in
cmp
ins
push
jp
dec
add
fs
addr16
xor
(bad)
pusha
retf
les
sti
es
jbe
mov
mov
and
sbb
(bad)
dec
movs
test
lds
frstor
and
adc
adc
out
fwait
mov
pop
pop
cwde
jl
push
je
cs
adc
sbb
rol
push
fnstcw
enter
ds
std
xor
and
add
icebp
cli
xor
jbe
mov
outs
fidiv
inc
rcl
outs
pop
in
iret
in
inc
mov
sbb
(bad)
aaa
cld
clc
and
sub
xor
jno
jp
ret
add
jmp
pushf
push
sbb
jo
jmp
sub
jle
add
push
jae
mov
fisubr
cmp
out
jmp
bound
and
jge
or
lock
fistp
cmp
(bad)
shr
sub
imul
add
mov
aad
adc
push
les
dec
leave
jp
adc
cli
mov
mov
push
pop
lods
push
jle
mov
mov
pop
js
(bad)
inc
mov
stos
aas
cmc
cmp
xchg
sub
pop
adc
mov
jmp
je
jmp
(bad)
popa
pop
xor
xor
push
shl
cs
jecxz
aas
sub
inc
push
dec
mov
cmp
imul
and
add
ds
sbb
push
fidiv
and
mov
aaa
mov
test
sbb
out
je
in
mov
dec
add
iret
fisubr
xor
mov
xor
enter
loop
add
mov
and
rcr
inc
mov
rcr
mov
fdivr
mov
push
fst
pop
pop
loope
sub
lods
dec
(bad)
xlat
ins
xor
mov
dec
pusha
inc
ins
(bad)
cmp
fld
inc
pop
cmc
mov
push
jbe
mov
(bad)
icebp
or
popw
ins
int
push
je
cs
sub
fs
fs
(bad)
fs
aas
shr
jle
gs
outs
repz
adc
cmps
lods
add
push
dec
outs
mov
daa
out
daa
mov
cs
jl
imul
cmp
jge
xor
out
(bad)
sysexit
push
sbb
test
mov
or
push
call
fild
xchg
sbb
ror
(bad)
jo
pushf
fdiv
fiadd
sbb
dec
fwait
clc
mov
(bad)
mov
cs
rcl
mov
data16
imul
(bad)
or
adc
jmp
or
mul
adc
mov
ins
outs
inc
outs
jle
push
aaa
pop
ror
mov
js
add
sub
nop
aam
mov
push
dec
out
add
imul
sub
sahf
sub
(bad)
out
bound
sub
jg
pop
dec
(bad)
add
cli
add
cmp
aaa
sub
aad
ficom
jmp
outs
test
adc
cs
mov
and
inc
mov
lods
dec
and
xor
add
sahf
repnz
xchg
into
sub
fbld
mov
mov
xor
sub
rol
sub
(bad)
mov
outs
adc
jne
push
jo
stos
jp
(bad)
retf
mov
(bad)
mov
fdiv
mov
and
fnstsw
call
(bad)
add
retf
imul
loope
hlt
add
ins
add
mov
(bad)
lds
outs
es
test
clc
lea
sub
push
std
fst
mov
cmp
xchg
jae
sub
sbb
sbb
jno
add
or
daa
cmps
mov
add
xor
icebp
call
add
aas
test
xchg
cwde
outs
jno
js
in
add
jp
leave
mov
sub
jae
push
xor
lds
fld
mov
sar
imul
jge
mov
movs
imul
fdiv
scas
push
or
iret
push
jmp
lock
mov
out
xchg
mov
mov
out
jle
bound
aad
retf
sub
xor
lods
xor
jp
dec
pusha
je
cmps
and
bound
jle
aad
sbb
jb
cmp
add
aaa
test
or
adc
dec
or
inc
adc
rcl
mov
aas
das
cmp
scas
cmp
sub
jmp
jbe
pusha
aad
neg
outs
xor
xor
dec
add
sub
mov
jl
stc
gs
mov
into
loope
scas
adc
adc
push
sub
inc
push
jo
add
loop
movs
adc
call
mov
jae
gs
std
leave
adc
cmp
inc
ret
(bad)
sbb
xor
ret
cmp
into
repnz
jb
pop
dec
mov
inc
dec
xor
push
and
and
fstp
pop
(bad)
push
sub
sbb
adc
inc
mov
(bad)
int
nop
out
inc
cmp
pop
push
push
ficom
pop
pop
sbb
gs
add
adc
and
jle
ss
sub
jge
sub
cmp
mov
les
stos
add
jg
aaa
test
add
in
jge
cli
in
icebp
xor
scas
jne
push
cld
jge
rol
je
ret
add
das
pop
dec
(bad)
lods
rol
scas
dec
sbb
aas
cwde
dec
leave
std
les
push
int3
mov
mov
xchg
(bad)
popf
pop
jnp
shl
lods
outs
pop
dec
cmp
xchg
leave
or
(bad)
cli
test
jbe
dec
add
pop
mov
(bad)
out
cmp
and
ins
dec
and
push
adc
sbb
push
ins
mov
(bad)
dec
call
inc
mov
(bad)
cdq
sub
sub
out
inc
pop
(bad)
retf
into
add
and
test
mov
cld
add
push
ret
lahf
push
jmp
cmp
pusha
je
jp
sub
inc
xlat
inc
int
xlat
adc
(bad)
jp
(bad)
cld
cmp
data16
sub
cmp
cwde
ja
mov
push
jmp
call
dec
aad
addr16
iret
dec
popf
xor
lods
and
or
pop
push
jp
sbb
and
jae
add
es
in
inc
leave
(bad)
cwde
mov
adc
mov
mov
adc
and
add
sub
test
call
jo
xor
push
cli
mov
pushf
xor
daa
jecxz
ins
mov
and
pop
ja
shl
in
push
sar
pop
mov
(bad)
cmps
xchg
idiv
xor
jb
mul
inc
sbb
adc
xor
(bad)
repnz
lods
mov
xor
ds
adc
xor
lods
aad
adc
jp
stos
add
leave
cmp
mov
push
test
int
retf
cmp
mov
jne
imul
dec
mov
pmaxub
ret
mov
ds
mov
pop
rcr
jb
sub
aad
mov
scas
sar
pcmpeqb
push
addr16
sub
stc
push
rol
and
adc
(bad)
pop
cmp
add
mov
mov
sub
sbb
push
xor
sbb
rcr
inc
cmps
scas
dec
aaa
cmp
fst
push
aad
cmps
add
rcl
imul
arpl
fcomp
test
push
sub
stc
outs
out
dec
fstp
push
push
sub
pop
push
adc
ret
add
push
add
or
inc
loopne
lahf
jge
add
pop
test
in
das
out
mov
nop
shl
sub
scas
je
mov
cli
in
sub
cli
inc
sub
call
(bad)
not
pop
test
and
dec
in
pop
mov
mov
pushf
cli
retf
ss
sbb
ret
fucomi
pop
add
or
adc
and
and
xor
inc
jle
push
pop
adc
push
(bad)
sbb
push
js
out
sub
and
mov
cmp
push
fst
or
call
mov
aaa
es
jns
js
scas
je
sbb
iret
sar
mov
xor
out
inc
sub
push
jle
pop
adc
cmp
xcrypt-ecb
cmps
or
xor
call
loop
adc
jl
fwait
sti
dec
jp
gs
adc
ds
enter
lods
inc
inc
push
xor
jmp
aam
mov
sbb
aas
and
fadd
and
das
loopne
mov
and
push
jns
imul
mov
inc
daa
or
leave
popf
outs
cmp
inc
mov
add
adc
fidiv
imul
mov
out
adc
fld
pop
out
or
fist
test
jle
lea
fdivp
fdiv
sbb
push
dec
stos
jmp
pop
and
xor
clc
clc
push
fnstenv
in
sbb
cdq
or
push
mov
dec
in
adc
dec
mov
mov
mov
ret
mov
inc
test
lods
pop
mov
and
jp
xor
dec
retf
lds
adc
out
push
jp
imul
imul
cmp
add
xor
ins
mov
jmp
add
sub
stos
pop
pop
or
push
lea
shl
int
dec
or
push
push
mov
(bad)
jo
jo
sbb
shl
imul
js
sbb
ds
add
push
data16
mov
out
std
hlt
xchg
shl
adc
fdecstp
cmp
xchg
je
dec
xchg
inc
(bad)
outs
pop
inc
sahf
icebp
sub
ins
adc
and
fwait
mov
loope
cmp
xchg
mov
and
rsqrtps
jno
cmc
inc
stos
or
in
add
sbb
lods
add
dec
pop
call
nop
mov
mov
xchg
sub
in
ret
jnp
sti
fdiv
js
push
fwait
dec
fistp
pop
dec
jle
push
cs
jo
movs
idiv
lea
sub
gs
aad
inc
inc
dec
inc
stc
retf
push
arpl
scas
mov
mov
sub
inc
inc
sub
sbb
out
pop
jg
xchg
fsub
ficomp
arpl
jnp
shl
fisttp
fadd
push
loopne
cmc
push
daa
fiadd
imul
retf
je
jbe
sbb
in
xor
cmp
sbb
sub
pop
xchg
in
push
out
sbb
push
mov
sbb
jl
pop
ins
icebp
test
leave
jp
pop
icebp
or
cmc
xor
cmps
(bad)
mov
mov
xlat
movs
mov
and
cmp
dec
inc
pushf
push
ds
sbb
lods
loop
push
adc
js
(bad)
addr16
je
popa
clc
cmp
(bad)
jecxz
mov
dec
cmps
add
mov
movs
dec
cmp
rcl
and
pop
int
jae
test
add
fs
out
cmp
mov
mov
mov
cmp
mov
daa
jle
scas
and
je
push
add
ins
add
sub
xor
inc
lds
not
xor
cmps
test
bnd
adc
mov
enter
addr16
push
nop
adc
xor
jle
jmp
sbb
in
sub
mov
pusha
mov
pop
sbb
or
out
retf
jo
fdiv
push
adc
(bad)
iret
sbb
mov
xchg
sbb
xchg
push
ins
jle
ins
ja
add
xlat
jae
cmp
push
sub
(bad)
iret
and
std
jg
adc
icebp
movs
popf
dec
push
or
movs
mov
mov
mov
mov
ins
cld
dec
mov
sbb
sar
push
jb
or
mov
ror
ins
push
jle
adc
cmp
inc
jl
jo
mov
or
test
xchg
test
mov
ins
mov
(bad)
aad
mov
cld
sbb
cmps
and
mov
ret
mov
imul
pop
or
xor
sub
inc
in
cmp
xchg
sbb
movs
js
ror
and
out
dec
xor
xor
mov
cmp
and
and
les
jl
pop
scas
in
sahf
pop
sahf
sub
in
loope
mov
xchg
mov
adc
call
into
adc
add
lahf
adc
or
lods
(bad)
imul
mov
adc
jo
mov
sub
jo
xor
mov
mov
sbb
ins
mul
mov
pop
xchg
adc
aad
inc
jns
pop
test
mov
aas
add
aad
scas
and
add
gs
pop
jecxz
loop
push
ror
shl
dec
mov
inc
cmc
ins
jb
xchg
jmp
lock
(bad)
mov
sbb
mov
out
movs
ds
push
cmps
imul
inc
push
dec
lds
sbb
cmp
or
cmps
cmp
ja
sti
xor
mov
test
outs
push
mov
mov
pop
sbb
push
push
jp
lahf
add
jp
xchg
mov
adc
mov
scas
pop
pcmpgtd
xchg
dec
push
pop
inc
xor
jge
mov
xchg
xchg
inc
cdq
inc
inc
call
pop
inc
dec
jo
mov
aad
fisttp
cmps
or
xchg
xor
xor
test
cmp
je
jmp
mov
test
mov
pop
add
bound
test
dec
push
push
mov
outs
cdq
aam
lahf
fcom
leave
mov
xchg
xor
sti
cmp
(bad)
lds
aaa
add
mov
fisttp
(bad)
stos
lea
lds
jp
xchg
dec
mov
daa
ja
fcomp
jg
test
inc
stos
aam
data16
jge
mov
sbb
mov
cmp
stc
inc
and
dec
dec
out
or
ins
out
shl
or
cmp
sti
cld
jne
mov
out
ins
dec
stc
leave
mov
and
in
arpl
mov
jae
mov
arpl
mov
inc
push
mov
leave
sub
mov
xchg
jnp
pop
mov
add
addr16
push
shr
mov
jno
or
pusha
mov
je
js
out
mov
mov
xchg
retf
pop
into
jo
ja
lds
or
inc
hlt
xor
aaa
aam
ss
cld
pop
or
lods
pop
sbb
cmp
and
push
leave
mov
xchg
ret
sub
data16
mov
push
dec
sbb
cmp
inc
pusha
loope
dec
push
dec
add
jle
xor
test
ret
ret
cmp
(bad)
cli
mov
in
sahf
repnz
or
inc
cmps
mov
je
jl
push
outs
pop
pushf
pop
cmp
add
xchg
clc
mul
cmp
jl
mov
cmc
int
call
adc
mov
push
xchg
mov
nop
jmp
pop
adc
inc
test
jmp
sar
sar
mov
and
xor
xor
(bad)
imul
in
fstp
or
push
clc
jge
xor
cwde
mov
dec
xchg
fwait
inc
je
adc
frndint
jbe
push
pop
(bad)
mov
jnp
push
mov
call
arpl
add
dec
dec
mov
das
imul
ja
adc
xchg
inc
push
mov
in
push
jge
xchg
mov
push
sbb
mov
fnstsw
addr16
stos
sahf
(bad)
repnz
lods
push
inc
arpl
mov
aaa
xor
jns
cs
jns
loope
jecxz
jbe
out
pushf
iret
mov
rol
cmp
mov
and
ret
sbb
mov
and
cmc
push
mov
aaa
inc
jle
adc
jne
jp
js
mov
call
and
cld
rol
mov
jb
sub
sbb
jbe
inc
out
bound
ins
xor
sahf
movs
pop
rol
cwde
seta
mov
jp
aaa
and
clc
in
mov
les
cmc
xchg
xor
cmps
in
cmps
inc
push
out
mov
popa
pop
nop
mov
fsub
xchg
cmovs
mov
addr16
or
mov
mov
cmp
push
test
jae
daa
mov
std
shl
pop
xor
cmp
jmp
ret
sbb
push
ret
push
aam
adc
mov
push
sbb
push
push
xor
call
je
cmps
cmp
jae
rol
jne
jmp
jnp
call
xor
push
sbb
add
rcl
cmp
mov
inc
(bad)
and
outs
cdq
dec
sub
dec
push
repnz
sbb
cld
ins
rcl
enter
sub
jns
out
scas
retf
mov
das
or
nop
in
ins
out
pop
jnp
cmp
imul
mov
sub
out
mov
mov
cwd
mov
sub
sub
xchg
stc
test
ss
cld
(bad)
and
pop
lds
int
mov
sbb
pop
test
out
fldenv
jle
retfw
push
dec
dec
fbstp
ds
inc
std
xor
pop
cmp
cld
push
cmc
int
adc
xor
ja
ss
mov
jle
loop
loop
fdivr
idiv
repnz
sar
mov
or
jns
mov
fsub
fcomp
movs
jmp
mov
pop
mov
inc
pushf
ins
ins
mov
imul
retf
add
sahf
xchg
cs
push
mov
std
(bad)
mov
or
sbb
pop
push
sti
xchg
jmp
jbe
sbb
cmp
scas
mov
arpl
cwde
lock
mov
inc
ret
hlt
jbe
pop
mov
fdiv
in
or
dec
outs
repz
das
push
ja
jmp
pop
push
or
fs
pushf
loop
addr16
and
jmp
sbb
add
push
sahf
js
inc
data16
dec
xor
and
xor
jmp
jge
push
popa
cwde
mov
popa
xchg
(bad)
sbb
jnp
pop
push
mov
cwde
adc
jb
pop
push
dec
sbb
cmps
movs
mov
push
pop
pusha
outs
pop
dec
xor
xrelease
test
cs
(bad)
loopne
lahf
or
mov
mov
movs
mov
fcom
add
lds
je
repnz
ja
arpl
cmp
das
lahf
add
inc
mov
xchg
cdq
cmc
add
pop
pop
retf
popa
mov
fisttp
push
push
and
cmp
in
push
jb
or
hlt
pop
(bad)
adc
sbb
adc
(bad)
lock
xor
xchg
push
ret
push
cmp
mov
pop
das
les
xor
mov
(bad)
sub
in
pop
jae
mov
dec
pusha
bound
and
cld
adc
pop
test
loope
jecxz
adc
call
ds
add
mov
shl
ss
clc
aaa
xchg
mov
mov
das
jmp
in
sbb
das
ror
stos
sub
adc
jge
adc
lahf
xchg
in
inc
bound
mov
not
arpl
movs
inc
xchg
jp
cmps
in
fsubr
rcl
inc
fstp
xor
pop
imul
repz
push
ja
mov
lock
push
fcomp
and
cdq
cmp
mov
push
dec
push
into
outs
mov
jmp
and
inc
dec
test
ja
stos
imul
jne
fiadd
and
test
add
and
loop
sub
sub
inc
sbb
xor
adc
adc
sub
inc
imul
call
mov
ret
mov
xchg
inc
mov
xchg
pop
pop
icebp
sub
lea
xchg
int3
add
sar
jg
xchg
jbe
jbe
ins
mov
loopne
jp
jno
mov
pusha
xchg
and
sar
sub
adc
or
push
(bad)
(bad)
push
pusha
xor
inc
sub
and
mov
pop
dec
pushf
cmp
mov
xor
arpl
test
out
jl
ins
xlat
jg
mov
xor
push
jne
sub
gs
shr
sbb
jg
popf
movs
js
mov
fdivr
xchg
mov
data16
push
into
sub
(bad)
pop
je
data16
or
mov
pop
aaa
sbb
xchg
in
push
ror
test
cmp
pop
or
jmp
xor
jge
mov
test
lods
add
jne
cli
outs
lods
cmc
shr
mov
fsub
and
adc
cli
js
mov
xor
sbb
mov
mov
push
das
jnp
shl
in
push
pusha
lock
jns
js
or
jne
test
ret
sbb
or
mov
cwde
add
fsub
fild
xchg
repz
imul
inc
call
call
sbb
dec
shl
adc
push
aad
sub
cmp
nop
and
je
setns
shr
mov
mov
mov
jmp
jge
pop
xchg
or
aam
lods
cmp
push
xor
push
je
or
or
mov
arpl
nop
retf
xchg
hlt
dec
imul
dec
mov
push
sub
mov
lahf
xor
ja
stos
pop
fild
push
mov
pop
xchg
sub
jecxz
pop
jmp
xor
test
dec
push
pop
push
jne
movs
pop
scas
hlt
(bad)
stos
retf
sbb
arpl
sbb
fs
shr
xchg
mov
fcmovu
xchg
jmp
test
leave
sysret
pop
das
mov
sbb
enter
mov
mov
(bad)
lock
xor
xchg
jbe
scas
pop
inc
test
or
jmp
xor
and
or
lods
repnz
mov
jp
pop
sahf
jge
outs
js
pop
dec
dec
and
outs
cmp
loope
into
cmp
dec
jmp
test
test
addr16
and
mov
arpl
mov
pushf
push
dec
jbe
jnp
and
lahf
in
loop
xor
call
stc
sub
(bad)
(bad)
or
stc
mov
dec
int
lods
or
inc
adc
pop
pop
mov
add
inc
mov
sbb
sbb
shl
jmp
gs
jge
mov
shl
fimul
jle
mov
pop
stos
push
sub
push
pop
and
or
jecxz
or
(bad)
test
div
mov
mov
inc
xor
(bad)
cmp
ins
les
movs
cmp
out
xor
mov
ins
mov
xchg
repz
xlat
rcl
mov
jb
mov
shl
adc
movs
movs
sub
fs
sub
ins
popa
imul
fiadd
ror
mov
and
pop
push
add
fwait
mov
aaa
inc
loope
and
jbe
xor
adc
mov
mov
or
aad
sub
out
cmp
call
sub
xor
data16
inc
stc
cmc
fist
xor
out
retf
cs
sub
cs
loopne
nop
pop
inc
int
push
sub
daa
icebp
mov
clc
xor
pop
sbb
inc
mov
pop
fsub
ins
(bad)
out
out
mov
mov
mov
pushf
ss
scas
mov
aas
jnp
daa
sbb
clc
adc
repz
dec
xchg
cdq
mov
sub
cmp
adc
inc
shl
mov
jmp
imul
out
cmp
(bad)
sahf
jmp
fadd
out
adc
das
mov
pop
clc
mov
and
lea
ret
js
adc
clc
fldenv
sbb
jl
dec
mov
mov
ds
dec
fimul
sbb
jl
mov
lock
shr
stos
dec
jge
sbb
mov
inc
xor
mov
sbb
xchg
pop
imul
pop
xchg
dec
pusha
int3
imul
cmp
dec
stc
push
ficomp
ins
push
ds
add
xchg
jg
sub
mov
xchg
aam
pop
jo
pop
push
or
xor
(bad)
jmp
shr
mov
je
je
push
cmps
ja
dec
and
xor
stos
stc
fisttp
dec
into
data16
std
ins
xchg
stc
fisttp
cmp
xor
mov
ror
or
mov
sbb
fisubr
or
arpl
movs
lods
ins
test
xchg
jecxz
sub
or
ret
push
push
sbb
aam
jl
jl
mov
retf
and
jmp
stos
jl
add
bound
dec
mov
jns
retf
jle
pop
sbb
imul
dec
push
cmp
dec
add
stc
inc
ja
xchg
mov
jmp
or
dec
jae
bt
mov
retf
pextrw
gs
jp
and
test
xor
cmp
inc
jmp
and
sub
cmp
test
xor
jmp
cmp
(bad)
adc
sbb
mov
sbb
jne
cmp
mov
mov
pop
xor
ds
out
cwde
sbb
pop
add
popf
mov
or
mov
sbb
mov
add
out
lds
dec
or
mov
sub
fimul
adc
xchg
mov
jo
push
fnsave
cmps
mov
mov
inc
jle
mov
es
test
mov
pop
mov
ins
cmp
inc
pop
out
mov
cmp
neg
jno
mov
push
inc
mov
mov
xchg
push
jmp
mov
retf
add
mov
lock
add
cmp
xchg
enter
pop
(bad)
addr16
dec
jp
js
push
add
or
imul
dec
xor
test
xor
pop
jg
add
arpl
scas
sub
aam
push
jnp
inc
jl
inc
das
sub
pop
neg
dec
jmp
push
data16
cmc
jp
movs
or
pop
stc
std
jle
vpaddq
inc
out
pusha
dec
aaa
push
xchg
inc
pop
mov
push
cli
mov
cdq
stos
jp
sbb
aas
shl
dec
dec
out
mov
jecxz
pop
cmp
dec
add
popf
rcr
push
movs
lods
outs
fstp
xchg
push
rol
add
(bad)
lock
xor
lods
fcmovnb
cmps
outs
mov
pop
inc
and
sahf
mov
ffree
xor
mov
aas
and
mov
aaa
and
inc
jmp
lock
or
enter
das
mov
and
fst
mov
cli
scas
inc
(bad)
cs
(bad)
dec
inc
(bad)
cli
inc
loope
call
cld
ror
adc
adc
adc
jp
dec
in
mov
ds
clc
jns
adc
cmp
sbb
push
sbb
ror
xor
sub
sub
cmps
jne
jle
sbb
neg
mov
dec
jnp
jmp
popa
cmp
jl
dec
jne
mov
xor
inc
es
dec
cmp
add
sub
fstp
out
(bad)
aam
push
call
add
(bad)
stc
in
xchg
cmp
int3
push
addr16
push
xor
mov
push
cmp
mov
xor
and
inc
inc
test
or
jmp
sar
pop
(bad)
pop
aad
shl
lock
not
xor
mov
hlt
aas
into
push
imul
or
push
and
push
dec
mov
xor
out
dec
fstp
daa
jae
xchg
cmp
movs
push
(bad)
inc
aaa
cli
push
jl
leave
add
and
jp
mov
fimul
jns
pushf
add
push
add
aad
ins
dec
push
out
cmp
jno
xchg
xchg
in
imul
mov
test
push
add
mov
fxam
stos
dec
inc
push
in
sub
cmp
outs
sbb
bound
gs
cmp
lea
cs
popf
in
rcl
call
std
jno
mov
push
fnsave
sbb
inc
lods
ret
lock
xor
jmp
mov
cmps
cmp
enter
sbb
and
ja
sbb
jo
cmp
add
inc
cmps
cmps
das
pusha
or
cs
daa
adc
mov
fisubr
data16
or
or
push
jo
pop
(bad)
dec
push
xchg
push
or
stc
mov
fld
lea
cwde
outs
adc
cmp
addr16
into
xor
xchg
dec
out
mul
int
dec
adc
dec
ja
cs
pushf
sbb
leave
(bad)
xchg
inc
inc
call
repnz
dec
gs
sub
pop
outs
and
lea
jp
and
stc
dec
jbe
jp
dec
test
mov
xchg
xchg
(bad)
loop
sub
mov
(bad)
pop
xor
aaa
(bad)
xlat
lock
into
dec
(bad)
jge
ins
mov
sub
inc
push
cld
(bad)
imul
sbb
jns
scas
out
js
icebp
rcr
loop
inc
bound
pop
dec
test
pop
jle
jecxz
mov
pop
ror
sub
xor
pop
cs
aam
cmp
sub
popa
retf
ret
aad
pop
dec
push
add
div
inc
imul
and
cmp
inc
cmp
outs
mov
xor
and
iret
pop
sahf
scas
sub
mov
retf
cmp
adc
(bad)
mov
push
dec
dec
xor
mov
test
fdivr
jbe
inc
les
(bad)
push
pop
xor
and
ret
push
inc
xor
sbb
mov
pop
sub
adc
cdq
outs
pushf
jmp
test
cpuid
ss
jmp
stos
sub
dec
leave
push
cdq
push
dec
mov
sbb
sahf
and
mov
popa
inc
sbb
pop
jmp
(bad)
hlt
cmp
adc
jnp
fcomp
mov
popf
(bad)
scas
cmp
jbe
dec
sbb
dec
adc
das
pop
pop
xor
retf
loop
popf
add
gs
bound
popa
mov
arpl
sbb
ja
mov
mov
cmp
addr16
movs
leave
pop
jns
jae
and
js
fwait
mov
lds
sbb
mov
fistp
pop
nop
cld
jae
sub
test
gs
cmps
daa
pop
jecxz
mov
scas
adc
or
loopne
inc
ins
sub
add
out
nop
xchg
dec
and
movs
cmp
mov
rcl
loope
lds
fwait
or
xor
push
adc
cld
lock
fdivr
in
cld
mov
test
dec
stos
out
cli
loopne
jl
sub
dec
ja
pop
pop
pusha
mov
mov
xor
popf
or
or
push
inc
inc
mov
shr
stos
sub
test
frstor
or
jbe
mov
dec
push
jbe
push
push
and
inc
and
pop
mov
jge
inc
and
xchg
rol
mov
sub
in
in
pop
dec
jne
(bad)
sti
jg
xor
cmp
mov
pop
inc
xor
js
aad
nop
xor
jo
stos
dec
jge
cdq
pop
cdq
cdq
mov
jb
aad
mov
shl
sbb
cmps
push
pop
inc
jp
xor
inc
mov
pop
xlat
pop
arpl
shr
inc
mov
add
add
test
mov
xchg
imul
jnp
jp
mov
cmp
xor
dec
dec
sbb
rol
gs
test
lods
mov
call
addr16
and
mov
outs
push
pop
not
cmps
pop
into
xor
pop
pusha
jb
imul
sbb
and
sbb
and
add
je
push
(bad)
mov
loop
mov
jl
xlat
push
ja
lods
xor
mov
add
imul
movs
ror
lahf
jmp
ins
sbb
in
dec
rcl
mov
mov
pop
retf
sub
or
jae
jne
inc
and
mov
aaa
xor
stos
(bad)
fild
inc
sbb
push
imul
mov
xchg
or
in
shr
in
in
jno
mov
mov
adc
(bad)
call
outs
outs
daa
push
mov
or
xchg
mov
jno
push
jbe
fistp
cmp
mov
fst
repnz
jns
stos
pop
sbb
loopne
inc
retf
jbe
mov
and
or
mov
call
js
sbb
push
(bad)
stos
cmc
mov
push
or
mov
xlat
add
jne
mov
(bad)
pop
data16
pop
mov
test
aad
mov
pop
add
pop
pop
sub
lods
outs
mov
test
test
les
mov
inc
sub
sub
jecxz
aad
and
push
je
pop
inc
add
add
xchg
pop
dec
jns
cmp
cmps
sub
adc
pop
lock
inc
mov
(bad)
pop
cmp
pop
ja
int
(bad)
mov
fwait
dec
ja
inc
inc
retf
sub
ja
aam
pop
gs
pop
jb
dec
dec
jp
sub
dec
xlat
into
mov
out
int
cli
xchg
test
(bad)
in
xlat
out
add
sahf
repz
cwde
sub
rcl
ficomp
pop
test
daa
test
aaa
jmp
jmp
lea
sbb
test
(bad)
mov
push
xor
pop
inc
xchg
fdiv
mov
xchg
out
jno
inc
mov
lods
jl
pop
fwait
jmp
pop
mov
scas
push
mov
sbb
mov
ss
rcr
shl
mov
push
jbe
mov
cmp
inc
sub
clc
sub
sbb
mov
cmp
retf
ins
imul
outs
out
sbb
xor
jne
movs
sbb
test
cdq
jecxz
or
outs
cs
loopne
daa
sub
bound
dec
out
je
popa
ins
jge
test
mov
sub
and
(bad)
adc
dec
xor
jne
push
mov
sub
cmp
ficom
(bad)
mov
mov
je
xor
jb
xchg
pop
jle
repnz
xor
xchg
inc
imul
add
or
sbb
push
das
jmp
out
pusha
mov
lea
aaa
ja
push
mov
lods
in
std
mov
or
gs
mov
test
add
sbb
je
sbb
push
fwait
push
ds
sar
pop
adc
test
add
rol
movs
mov
push
fnstenv
push
(bad)
adc
sbb
nop
or
xchg
mov
sbb
aaa
dec
and
mov
fldenv
xor
fsin
jb
xchg
fs
popf
rcl
jae
push
jp
movs
daa
dec
or
loop
imul
hlt
mov
mov
stos
mov
and
jmp
fild
mov
retf
int
(bad)
rol
cmp
inc
dec
cmp
xor
xchg
(bad)
mov
push
adc
scas
fwait
(bad)
mov
pop
dec
(bad)
pushw
jns
push
retf
loopne
outs
xchg
dec
stos
pop
(bad)
jmp
sbb
xchg
daa
jmp
sub
mov
adc
push
shr
push
pop
add
ds
sti
mov
sbb
ja
(bad)
or
pop
jge
rcl
ds
pushf
rcl
movs
outs
mov
fwait
pop
jno
(bad)
nop
inc
mov
aaa
sub
(bad)
jmp
mov
inc
mov
loop
sbb
fcmovu
idiv
fwait
mov
mov
adc
jbe
dec
sbb
popa
fdiv
scas
enter
sbb
push
push
inc
xchg
fwait
cli
xor
push
test
cli
push
jnp
cmp
rcl
outs
je
xor
ret
push
xchg
aaa
das
xlat
push
mov
mov
pop
adc
mul
jnp
sbb
sti
xchg
lea
and
dec
(bad)
jmp
sbb
aas
push
ja
or
jl
mov
push
scas
pusha
dec
xchg
mov
movs
jmp
or
stc
jnp
push
int3
cdq
mov
jns
cld
test
loope
pop
test
pushf
or
(bad)
aam
iret
outs
jne
cmps
mov
pop
sub
dec
jp
jp
ret
fdivr
sbb
inc
add
and
adc
scas
clc
pop
push
retf
scas
mov
or
dec
loopne
mov
cmp
pop
cmps
(bad)
jmp
movs
(bad)
jae
jmp
data16
sub
mov
and
mov
add
imul
xor
xchg
mov
ret
leave
push
xlat
mov
or
dec
(bad)
cmp
sub
adc
or
push
cmp
fwait
cmp
nop
pop
push
xchg
adc
repnz
adc
push
jae
or
push
mov
out
call
mov
push
jmp
test
ds
lock
pop
jne
addr16
push
(bad)
push
scas
sub
addr16
jecxz
pop
mov
push
outs
push
inc
pushf
outs
imul
xchg
adc
(bad)
das
inc
pushf
push
add
inc
adc
pop
movs
and
int3
fimul
cmp
out
imul
js
cmp
cdq
(bad)
adc
out
dec
out
lock
mov
mov
xchg
xor
loope
aam
scas
sub
lds
sub
adc
inc
pop
test
pop
dec
popa
js
loop
cmp
stos
aaa
add
sub
(bad)
js
xlat
shl
movs
sub
aaa
pop
dec
mov
in
scas
enter
jge
sbb
jmp
in
push
call
das
scas
push
aaa
mov
fs
aaa
mov
aad
lods
repnz
jmp
xor
or
mov
xor
jl
cmp
jae
arpl
lea
scas
call
pushf
scas
or
in
dec
pop
push
sub
mov
fmul
jp
ss
push
(bad)
bnd
mov
xor
jmp
dec
aas
dec
fdiv
pop
icebp
data16
xlat
(bad)
enter
xor
cmps
push
push
leave
sub
shl
push
pop
pop
push
mov
adc
inc
inc
fbld
ins
mov
inc
cmp
jo
adc
add
sub
popa
push
retf
int3
icebp
ss
movs
cmp
aam
jns
and
inc
and
jo
mov
and
lods
jae
movs
push
push
in
in
xchg
test
gs
and
adc
sub
fwait
movs
stos
out
call
js
cli
pop
dec
sub
addr16
mov
(bad)
sbb
sti
push
data16
sbb
push
cmp
or
sbb
cmp
frstor
jmp
lds
pop
xchg
inc
(bad)
test
fstp
movs
or
mov
in
mov
mov
sbb
lods
cmps
fild
xor
pusha
push
sar
cmp
je
push
xor
sub
add
in
or
adc
jnp
ja
inc
fcomi
dec
dec
out
cmp
sbb
add
adc
lock
ins
cld
sub
cmp
xor
jge
cmps
sar
xor
(bad)
push
adc
mov
call
inc
addr16
sub
jne
mov
pop
sub
in
test
outs
mov
movs
stos
pop
repnz
xchg
stos
mov
xchg
test
pop
mov
icebp
daa
dec
(bad)
add
inc
and
push
aad
loop
out
mov
sub
scas
lea
test
sbb
add
mov
mov
jg
add
cs
sbb
cdq
dec
xchg
in
in
jmp
test
pop
xchg
pop
mov
push
push
stos
dec
adc
and
pop
scas
stos
add
push
ja
inc
std
cmp
add
rcr
test
add
dec
js
jmp
pop
mov
(bad)
out
mov
xor
xchg
mov
movs
ret
pop
xchg
ja
ss
add
stc
push
ret
mov
mov
push
(bad)
stc
pop
addr16
test
in
cmp
jns
addr16
arpl
outs
or
inc
mov
pusha
jmp
int3
xor
movs
add
shl
mov
in
into
out
sub
loop
xchg
hlt
inc
or
ins
fld
mov
ret
ror
jno
cmp
rol
retf
push
sbb
cmp
mov
add
shr
in
jbe
dec
and
push
mov
(bad)
jge
popa
jmp
or
cwde
xor
in
es
ins
mov
enter
ja
mov
jmp
cmp
adc
jns
push
jbe
cmps
xchg
sbb
test
cmp
pop
dec
jg
outs
push
jae
jmp
and
mov
retf
test
sbb
mov
and
ss
into
imul
cmp
shr
ds
test
neg
mov
fwait
jmp
push
icebp
jnp
adc
rcl
mov
test
xor
lods
in
cmp
jno
daa
cli
inc
(bad)
stc
inc
sbb
fimul
mov
in
mov
sbb
(bad)
adc
loope
and
inc
(bad)
test
movs
adc
icebp
jle
adc
lods
outs
rol
in
mov
in
sub
imul
fistp
cwde
inc
push
jbe
mov
es
div
push
mov
out
js
lahf
jmp
xor
dec
sbb
fstp
imul
mov
ins
push
jbe
push
adc
ss
jmp
inc
repnz
xor
sub
jno
dec
add
dec
cld
mov
mov
mov
mov
mov
fstp
repnz
mov
inc
mov
jnp
jmp
cs
data16
xor
(bad)
idiv
push
jle
xchg
fnstcw
adc
or
retf
lock
push
cli
(bad)
sub
or
out
and
jg
ud1
xor
mov
jno
clc
fisub
loopne
add
sbb
pop
test
or
into
frstor
out
das
fmulp
scas
popf
dec
dec
lea
push
pop
jb
jno
call
pop
adc
pushf
push
sub
in
or
lock
test
fxch
push
es
or
jl
push
out
into
mov
data16
jae
es
enter
jp
fsubrp
jmp
scas
shl
call
pop
(bad)
retf
scas
dec
cs
shr
mov
ds
punpckldq
jg
adc
es
(bad)
jb
outs
jns
test
cs
xor
mov
arpl
xchg
cld
mov
mov
fistp
or
adc
adc
leave
pop
pop
cs
sahf
and
xor
mov
jmp
xor
scas
sbb
scas
imul
call
xchg
mov
(bad)
dec
imul
neg
sbb
add
jmp
jmp
es
clc
jmp
pop
jge
xor
(bad)
cmp
lds
fs
pusha
ds
jbe
adc
lods
jnp
cmp
and
aam
lods
pop
add
or
ins
retf
rcl
addr16
in
or
test
sbb
fwait
jne
inc
xchg
sub
(bad)
clc
(bad)
push
xlat
mov
les
fild
sub
out
stc
xchg
mov
and
retf
mov
nop
pop
mov
mov
mov
aas
mov
repz
in
jp
out
inc
adc
ins
cmp
imul
sub
sbb
pop
jns
cmp
inc
es
dec
xlat
xchg
shr
mov
xor
sub
dec
movs
push
rcr
dec
fsubr
pop
mov
xor
xchg
push
add
pushw
js
add
dec
outs
ret
jbe
cmps
sbb
or
or
jbe
cmp
(bad)
test
in
(bad)
loopne
pop
pop
leave
mov
jmp
ret
(bad)
imul
jmp
jmp
xchg
jbe
jb
mov
sbb
mov
mov
inc
dec
jge
adc
out
jle
mov
test
test
push
cmps
movs
xlat
add
inc
add
imul
cmp
mov
sbb
jg
and
(bad)
lods
pop
push
xor
scas
mov
aad
adc
adc
test
jge
fisubr
sub
std
cmp
dec
pop
js
sbb
(bad)
rcl
shr
imul
inc
es
fld
xor
xchg
out
jmp
push
dec
sahf
loope
fs
adc
jns
iret
pop
cmp
xchg
das
movs
pop
xor
and
inc
cmp
xor
push
adc
mov
push
stos
shr
out
mov
aam
push
jg
ds
out
jno
repnz
add
adc
je
pusha
or
sbb
sbb
adc
arpl
or
pop
adc
shl
push
mov
pop
xchg
jbe
sub
push
adc
ret
mov
sbb
push
sbb
inc
loope
fstp
int
lahf
daa
xor
mov
loop
mov
rcr
push
dec
or
pusha
fadd
dec
xor
int
shl
movs
addr16
into
push
shl
lea
xor
mov
jmp
mov
movs
sbb
loope
and
dec
out
sbb
push
mov
ss
jle
arpl
arpl
push
cmp
xchg
or
std
mov
test
inc
and
mov
ds
ins
cmp
cld
sub
and
xchg
outs
push
mov
or
sub
aad
push
idiv
inc
and
clc
repnz
mov
xchg
adc
imul
mov
(bad)
test
sbb
retf
cli
fisttp
iret
cmp
jnp
or
pop
cmp
xor
xor
leave
add
push
ja
rcl
and
add
push
or
adc
dec
sti
ds
cwde
call
dec
adc
retf
pop
sti
(bad)
retf
and
jg
add
addr16
popa
push
sub
out
aaa
ins
inc
mov
sub
cmp
dec
(bad)
fdiv
mov
cli
loopne
daa
mov
repnz
data16
xor
lea
lea
push
add
fist
mov
mov
fisub
and
mov
loope
pop
jl
daa
pop
test
sahf
jns
mov
dec
jge
xor
movs
inc
bound
addr16
mov
xor
xchg
and
and
movs
push
jne
push
sub
sbb
push
xor
outs
cmp
lea
push
jns
mov
leave
add
push
test
lods
outs
pushf
mov
add
and
cmp
gs
in
(bad)
mov
sar
adc
adc
outs
fild
pop
mov
mov
adc
dec
xchg
das
sbb
mov
pop
loope
imul
sbb
lahf
cli
and
inc
ss
rcr
test
xlat
loope
shl
adc
cmp
dec
add
dec
push
dec
test
and
push
inc
(bad)
scas
dec
ds
fs
or
leave
test
fldcw
cmp
scas
dec
mov
cmps
push
ds
cmp
div
add
pop
fs
mov
inc
dec
mov
push
data16
imul
xor
jge
rcr
jg
push
popa
popa
cld
sub
fsub
les
inc
mov
(bad)
dec
jae
out
sbb
bound
shl
xor
out
jnp
dec
mov
cmc
mov
sbb
pop
inc
xor
scas
inc
push
cld
test
jno
mov
movs
mov
popf
ins
arpl
add
sub
add
push
cmp
test
(bad)
cld
jno
ins
leave
pop
inc
fidivr
stos
push
cmps
jp
jno
pop
gs
adc
imul
sbb
push
pop
inc
add
xchg
xchg
or
lock
aad
pop
sub
jae
mov
mov
mov
neg
xlat
adc
es
push
loop
pop
mov
mul
inc
push
cmps
sub
test
pop
jb
hlt
sub
cmc
and
inc
ins
sbb
inc
xchg
ja
sub
imul
inc
mov
addr16
(bad)
jo
jecxz
push
pop
rcl
(bad)
adc
mov
push
mov
movs
adc
not
std
pop
pop
cmp
fs
push
shl
mov
ds
inc
loop
ins
xchg
or
add
pop
and
ins
xchg
jp
push
test
xchg
push
push
inc
popf
rcr
adc
repnz
mov
cmp
push
cmps
mov
dec
and
pop
and
rcl
pop
xlat
cmp
mov
in
jp
lds
sti
sbb
inc
lea
pop
fs
inc
rol
jp
cmps
mov
push
je
mov
mov
mov
xchg
js
sbb
test
jno
movs
add
push
dec
adc
push
add
xor
jl
ja
retf
or
dec
adc
arpl
mov
xor
inc
jge
jmp
mov
mov
sub
jb
gs
cli
inc
mov
stos
cs
add
mov
add
in
(bad)
mov
dec
cmp
push
nop
adc
scas
loope
sahf
mov
sbb
jns
popf
push
push
inc
shr
cmp
sbb
aaa
cmp
mov
aam
cmp
pop
(bad)
xor
jo
enter
inc
jns
or
inc
xor
adc
mov
or
and
push
loopne
out
sub
stos
sbb
jg
mov
and
push
dec
sti
rol
ins
loopne
in
addr16
mov
lods
jnp
jg
dec
in
test
push
gs
cwde
call
repz
dec
pminsw
fisttp
aad
pop
mov
stos
sti
hlt
jg
pop
in
movs
push
inc
xchg
pop
jp
or
pop
pushf
or
cmps
pop
dec
sahf
push
pop
and
xor
push
pop
or
push
sar
arpl
cli
pop
sbb
leave
or
es
in
inc
sbb
or
jg
icebp
lds
(bad)
lock
call
jmp
mov
call
clc
imul
retf
aad
cwde
bound
adc
test
cmp
and
fisub
shl
retf
xor
jl
fs
push
mov
xlat
jne
sti
inc
xchg
push
push
jne
mov
adc
push
add
and
test
jp
add
cs
xchg
jecxz
xchg
inc
into
jl
mov
pop
int3
mov
pop
mov
push
aaa
xor
pop
fld
jp
cmp
adc
inc
lea
cmp
sub
bound
dec
adc
adc
xor
mov
xchg
in
jmp
test
inc
mov
or
xor
retf
popa
addr16
pop
pop
scas
push
shl
(bad)
jecxz
scas
retf
and
or
je
ror
ds
pop
cmp
mov
xchg
mov
push
add
je
jo
out
(bad)
and
mov
or
pop
cmps
push
cld
pop
inc
push
xchg
mov
xor
sbb
mov
les
loope
stc
psrld
mov
ss
daa
mov
cmc
jge
inc
(bad)
jp
loopne
jbe
jnp
pop
jg
add
add
jbe
(bad)
pusha
pop
or
cdq
and
jg
and
je
xor
adc
bound
cwde
dec
mov
mov
mov
pop
js
gs
fistp
fidiv
mov
sahf
cmp
jp
and
push
imul
mov
(bad)
outs
lds
jbe
dec
push
imul
in
mov
pop
sti
inc
or
mov
(bad)
sub
xor
in
fisttp
push
jbe
imul
mov
addr16
dec
loop
call
ds
div
cmp
add
or
and
cli
and
pushf
call
sahf
in
daa
mov
nop
dec
dec
sub
mov
cmp
pop
rcr
ds
sub
(bad)
jne
jmp
or
inc
out
jnp
mov
jp
mov
fidiv
dec
test
ins
mov
mov
adc
inc
out
add
cmp
mov
lock
inc
jno
ins
add
jnp
mov
add
fs
sbb
mov
sbb
fs
and
adc
mov
stos
xchg
inc
scas
add
ficomp
dec
fistp
call
sbb
fstp
mov
push
xchg
shl
inc
pop
mov
popa
sahf
fcompp
cmp
call
jle
mov
push
pop
add
fisubr
fld
mov
dec
push
inc
or
xchg
sbb
mov
mov
jg
and
push
movs
aam
(bad)
stc
mov
cli
mov
lds
cli
mov
cs
addr16
loopne
push
cs
mov
icebp
lock
pop
cdq
push
cs
lock
cmc
ss
push
xor
mov
xor
cmps
mov
adc
mov
jle
and
lods
imul
push
jae
mov
sar
scas
mov
(bad)
rol
fisubr
popa
nop
sbb
mov
test
mov
sbb
movs
cwde
lods
pop
mov
mov
sbb
mov
jno
mov
loope
int3
jmp
push
add
push
dec
push
mov
mov
sub
fcom
inc
xlat
inc
xchg
call
ds
shl
cmp
dec
nop
xchg
dec
clc
popa
(bad)
ja
ficom
xor
retf
ret
icebp
cmp
scas
mov
mov
shl
xchg
jmp
sbb
inc
mov
outs
jp
das
idiv
xor
popa
loopne
jl
loopne
aaa
out
(bad)
int
(bad)
call
inc
dec
cld
sti
inc
popf
xchg
out
add
fdivr
call
pop
dec
or
test
mov
out
shl
push
cmc
mov
loop
shl
add
xchg
cmp
jae
data16
push
jmp
xor
jg
mov
mov
je
std
jge
clc
aaa
sbb
jmp
dec
sahf
test
bound
cwde
into
jg
inc
dec
push
push
sbb
dec
mov
push
dec
pop
into
sbb
mov
add
adc
mov
push
(bad)
gs
inc
out
push
sbb
sbb
sub
jle
(bad)
push
add
dec
retf
or
sbb
mov
out
add
inc
sub
mov
repz
div
int
in
inc
xor
cld
or
push
aas
cmc
rcl
adc
jo
and
inc
sahf
out
pop
cmp
rol
push
or
push
xor
jae
arpl
adc
push
push
scas
push
sub
or
xor
mov
dec
aad
push
mov
lahf
mov
in
xor
push
retf
call
adc
retf
add
add
inc
hlt
and
cmp
mov
call
mov
(bad)
bound
pop
inc
add
or
dec
or
adc
sti
xchg
loopne
sbb
rcr
lock
push
mov
retf
add
ficomp
cmps
call
pop
sahf
mov
lea
sbb
ret
sub
push
shl
sbb
(bad)
adc
mov
stos
adc
push
test
cdq
jo
cmp
(bad)
loope
mov
push
pop
outs
dec
cs
(bad)
cld
mov
jge
xchg
outs
jle
loope
out
inc
call
(bad)
in
arpl
add
(bad)
dec
sbb
push
jne
fstp
jb
push
cmps
addr16
sahf
int3
sub
dec
or
popa
push
shl
(bad)
jmp
out
shl
mov
test
rcl
add
leave
in
js
bound
aas
push
pop
xchg
add
adc
cld
shl
cmp
loopne
mov
cs
repnz
add
or
jb
hlt
jns
arpl
sahf
mov
mov
jbe
icebp
aam
cwde
push
adc
sti
adc
(bad)
jp
leave
xor
add
push
jp
out
je
push
xor
je
test
push
xor
inc
bound
jne
inc
pop
pushf
xchg
add
in
shr
xchg
sti
adc
shl
pop
jne
add
gs
(bad)
push
and
inc
sub
mov
xchg
sub
push
arpl
push
ret
sbb
pop
jl
(bad)
sub
sbb
jle
ret
mov
fmul
cdq
push
dec
jge
out
mov
out
(bad)
and
push
push
cs
xlat
inc
movs
and
jp
sbb
pop
adc
ins
add
test
neg
xor
in
mov
(bad)
movs
xor
arpl
dec
or
cli
add
jecxz
push
ret
sub
jmp
ds
loopne
jmp
sub
aam
iret
xor
xchg
mov
ds
jmp
mov
pop
xor
jge
add
ja
cmp
dec
mov
sub
push
jnp
in
lods
outs
add
inc
inc
sub
rol
add
and
iret
jl
push
jp
jmp
cmp
mov
div
sbb
jg
setno
mov
mov
mov
mov
mov
pop
mov
fsubr
bound
sbb
add
mov
js
(bad)
xchg
stos
dec
sbb
(bad)
dec
rcr
loope
inc
inc
sub
lds
and
inc
into
sub
and
push
sbb
dec
mov
dec
push
test
sbb
mov
(bad)
inc
les
icebp
sbb
mov
xor
pop
inc
mov
lods
call
cmp
or
sahf
dec
fsub
cmp
mov
push
jl
and
test
xchg
fxch
add
xchg
and
dec
inc
ins
dec
pop
push
cwde
push
enter
in
sbb
not
std
out
test
aam
fisttp
adc
cdq
add
and
out
xchg
outs
mov
addr16
leave
repz
out
in
shl
out
adc
rcl
adc
aas
and
sub
nop
jns
call
popf
mov
jmp
sbb
mov
mov
mov
lods
(bad)
mov
jl
sbb
pop
ret
pusha
xchg
dec
mov
pop
or
popa
bound
jecxz
and
mov
shl
adc
ret
imul
sti
mov
jle
dec
jmp
jns
mov
imul
or
sub
cmp
or
push
sbb
mov
ins
jmp
jmp
fsub
xor
cmp
inc
dec
sub
sub
stos
adc
cmp
jb
jbe
ds
sbb
adc
mov
sbb
xchg
cwde
popf
movs
imul
jp
jae
sbb
and
sub
mov
xchg
push
cwde
add
cmp
jg
jp
mov
push
sub
xor
pop
test
xor
xchg
pop
imul
mov
pop
mov
dec
test
mov
or
inc
push
(bad)
sbb
adc
jmp
jg
nop
cmp
fild
test
jecxz
fwait
adc
jns
lahf
and
pop
mov
xchg
pushf
push
or
(bad)
push
std
fnstenv
mov
jo
pop
rol
daa
add
sub
jle
aaa
adc
mov
je
ret
addr16
ins
leave
jge
push
dec
sar
es
jmp
inc
xchg
daa
cwd
aaa
push
test
gs
imul
xchg
(bad)
jns
movs
xlat
imul
sti
jb
ins
les
out
adc
imul
or
pop
inc
add
adc
shl
jmp
in
inc
fmul
mov
xchg
sub
retf
ins
dec
je
push
adc
jle
pop
push
push
dec
jecxz
ds
icebp
fldcw
mov
scas
pop
sub
(bad)
xor
popa
sti
pop
cmp
dec
adc
xchg
test
dec
or
sbb
(bad)
xchg
mov
push
or
inc
pop
fs
sub
fdiv
mov
aas
call
shr
aaa
stos
mov
and
outs
mov
sub
je
sub
cdq
mov
sbb
data16
mov
pop
or
push
xlat
popa
gs
mov
fbld
push
test
cld
gs
or
fwait
dec
add
lods
(bad)
cld
dec
jno
mov
xchg
rcr
in
iret
in
mov
cmp
scas
sub
sub
dec
out
cmp
ja
mov
out
xor
bound
inc
std
inc
ins
loope
les
push
mov
xchg
xchg
inc
jl
and
(bad)
mov
inc
inc
ror
or
sub
dec
push
or
jnp
int3
retf
inc
xor
push
jae
mov
jne
pop
test
das
mov
and
cmps
stos
xor
stos
sub
xchg
lahf
les
adc
adc
daa
sbb
jecxz
fldenv
stos
mov
push
push
daa
push
cmp
stc
pop
pop
sbb
ret
jo
popa
dec
in
jmp
sbb
jmp
pop
xor
push
mov
les
jmp
jno
xor
pop
ror
or
out
jae
call
jo
mov
movs
data16
mov
stos
jne
and
adc
jno
cmp
std
repz
mov
stos
dec
inc
cmp
push
push
dec
out
gs
cwde
call
data16
mov
nop
xchg
cmp
test
jecxz
push
rcl
aam
std
jmp
inc
cmp
inc
and
cmps
xrelease
icebp
je
cmp
call
xor
sbb
jo
push
add
sbb
dec
arpl
sbb
sar
mov
push
mov
out
sbb
nop
call
sahf
call
stc
adc
and
add
mov
xor
mov
jbe
pop
ror
mov
test
dec
push
leave
cdq
xor
or
jp
fimul
or
ins
pop
jbe
int3
xor
mov
in
addr16
(bad)
cld
pop
cdq
or
xor
fiadd
fwait
sar
jne
js
mov
sahf
push
aad
ror
jmp
(bad)
loopne
cli
mov
inc
imul
and
cwde
pop
or
mov
fnstsw
popf
adc
push
in
bound
rcl
cmc
movs
out
push
adc
ja
mov
push
iret
xor
in
aaa
pop
mov
or
inc
outs
dec
jae
xchg
jns
int
mov
mov
sahf
pop
in
cmp
or
sub
jmp
push
xor
push
adc
mov
inc
nop
fisttp
pusha
inc
mov
xchg
xor
push
ja
sbb
dec
out
inc
push
adc
push
lods
mov
mov
add
jle
imul
jecxz
stos
mov
or
ins
xchg
jb
mov
retf
mov
pop
fwait
mov
inc
jmp
pop
sbb
sub
jg
sub
(bad)
dec
dec
(bad)
mov
(bad)
bound
adc
mov
clc
mov
jle
cs
jne
add
mov
xchg
cmp
sub
ret
(bad)
out
add
mov
sbb
inc
movs
jae
or
pusha
and
push
adc
push
jmp
dec
retf
add
ins
mov
mov
stos
cld
ja
jmp
dec
sub
pop
aad
mov
mov
jo
add
scas
jb
add
inc
lock
xor
dec
jno
pop
and
mov
push
(bad)
and
bound
xor
jmp
hlt
add
(bad)
mov
xor
imul
dec
adc
push
xor
rcl
jb
dec
jb
or
ss
adc
fisubr
inc
mov
mov
cmp
scas
test
cdq
mov
xor
out
movs
js
fisubr
imul
fdiv
loopne
inc
aad
pop
pop
jnp
test
mov
and
xchg
out
mov
fs
imul
jmp
cdq
dec
movs
pop
add
lock
jb
pop
xchg
pop
jo
test
xor
push
test
and
pop
mov
adc
fwait
mov
xchg
push
sub
shl
pop
js
cmp
or
jg
aad
push
sar
pop
adc
shl
pop
imul
pop
push
in
mov
imul
pop
mov
popa
xchg
sbb
imul
sbb
(bad)
fstp
movs
cwde
or
loop
add
scas
xchg
push
je
or
fcomp
jecxz
jmp
test
dec
popa
aam
mov
pop
imul
in
movs
add
jae
cmps
jmp
inc
dec
xor
dec
add
ins
bswap
or
dec
sbb
jo
dec
inc
shl
or
dec
stc
xor
dec
inc
adc
out
pop
dec
pop
leave
hlt
add
and
stos
inc
xor
add
pop
and
retf
cmp
ss
fmul
jp
xor
mov
pop
dec
push
push
xor
add
sub
jl
lds
aaa
pop
push
mov
addr16
test
retf
sbb
jb
les
xor
popa
jecxz
jae
push
cmp
mov
inc
mov
int
sbb
sub
in
popf
lds
aam
outs
push
in
not
jns
and
xor
sub
(bad)
lock
lods
pop
and
fmul
test
and
cld
sti
inc
aaa
aaa
mov
ja
nop
adc
ror
xor
mov
clc
shl
repz
and
jmp
popf
fidiv
fbld
mov
or
fchs
inc
inc
mov
dec
test
ds
push
imul
addr16
mov
out
stc
xor
adc
and
mov
cmp
jbe
jecxz
push
or
push
sar
test
out
(bad)
mov
(bad)
inc
cmp
jle
mov
and
mov
in
adc
pop
fwait
outs
std
push
jle
cld
shl
mov
inc
pop
(bad)
fisttp
scas
addr16
mov
imul
push
movs
adc
hlt
loopne
cmp
mov
call
jno
xchg
or
out
ja
jb
dec
nop
(bad)
ror
sbb
fiadd
and
add
fcomp
fsubr
icebp
push
arpl
(bad)
jnp
inc
jl
sbb
and
xor
es
jnp
xchg
outs
xchg
and
sbb
xchg
push
sbb
fnsave
fbld
cmps
movs
(bad)
in
pop
mov
loope
xor
in
jge
mov
outs
mov
lods
mov
mov
test
mov
push
sbb
add
mov
les
mov
lahf
loop
mov
push
pop
fdiv
cmps
jmp
adc
xor
xchg
ins
mov
dec
out
and
adc
pushf
pop
jns
inc
cmps
lahf
xchg
fsubr
mov
mov
pop
loopne
mov
dec
pop
push
or
(bad)
jg
aaa
push
jle
and
mov
sub
adc
xchg
fnstcw
cli
dec
ret
pop
fisttp
push
addr16
dec
call
dec
pop
ja
cmps
push
mov
cmc
lds
pop
mov
and
mov
sub
xor
xor
or
sbb
mul
pop
ja
ins
dec
je
in
or
add
mov
inc
xor
xor
rcl
and
pop
adc
sbb
ret
mov
std
lods
je
xchg
ret
cmp
gs
cmp
dec
inc
sub
dec
push
or
mov
xor
cld
sub
sbb
pop
sub
jg
and
mov
mov
push
adc
mov
out
add
jmp
cmp
add
repz
fs
(bad)
outs
pop
or
push
idiv
into
and
rol
out
and
push
sahf
cmps
jle
jno
and
ret
inc
ja
mov
inc
and
movs
dec
fwait
js
xchg
cmp
sbb
jmp
pushf
jmp
sub
and
mov
test
or
or
xor
mov
daa
imul
out
xchg
jmp
inc
lahf
out
mov
rcl
jecxz
jmp
fstp
lds
jle
aam
or
(bad)
jnp
mov
and
pop
xchg
sbb
ret
and
adc
call
sti
call
jle
rcr
mov
les
push
shr
adc
jp
les
pop
pop
ret
repnz
mov
leave
jbe
xor
(bad)
pop
mov
sbb
jbe
outs
xlat
push
push
je
mov
xchg
or
jmp
iret
lods
test
mov
data16
(bad)
sub
fcmove
movs
and
lock
lods
xchg
sub
cmc
mov
jns
pop
les
sub
push
shr
pop
popa
retf
mov
movs
or
push
pop
test
scas
adc
sub
ja
cwde
jne
pop
cmp
and
cld
sub
mov
sti
inc
cdq
sub
or
xlat
xchg
mov
jmp
js
movs
inc
xchg
out
or
mov
(bad)
push
inc
mov
call
push
mov
rol
movs
test
push
popf
cmp
mov
mov
pop
ins
and
add
(bad)
mov
dec
mov
loop
and
dec
and
xor
cmp
sub
pop
or
sar
sbb
mov
xor
sub
cwde
jo
call
xchg
mov
in
pminsw
cmp
hlt
inc
push
nop
and
xchg
inc
xor
dec
jnp
fstp
rcr
cmp
les
js
fistp
fist
loop
sbb
cs
inc
adc
push
sub
inc
call
rcl
or
into
fcomi
cmp
das
int
aad
mov
enter
ror
mov
jmp
cmps
cmp
ja
mov
cli
int3
mov
add
lods
or
ja
add
jmp
xor
gs
nop
out
inc
mov
shr
sbb
leave
in
mov
iret
push
rol
mov
mov
jge
fs
jg
popf
not
(bad)
movs
pop
ins
movs
pop
addr16
pop
in
sub
retf
sti
add
or
scas
push
stos
dec
leave
pop
mov
jecxz
or
cli
pop
dec
or
sbb
ret
retf
loopne
xchg
jmp
ss
jbe
das
rcr
mov
lds
das
jecxz
or
pop
aad
imul
xchg
cs
dec
pop
sbb
sbb
sub
push
jb
and
pop
data16
aaa
dec
fxch
or
jo
ins
dec
outs
jmp
in
xchg
mov
push
iret
movs
cmp
jae
out
inc
sbb
pop
jno
unpckhps
das
loope
scas
sbb
add
push
cmps
ss
test
mov
gs
mov
movs
std
mov
jne
imul
and
ja
aaa
xchg
or
mov
outs
call
std
inc
sahf
add
sub
or
push
pop
inc
(bad)
call
jbe
sub
scas
imul
sub
fs
je
into
sbb
mov
(bad)
mov
dec
aam
mov
xchg
adc
or
and
jb
jb
dec
stos
jp
jnp
sub
xchg
jno
add
out
dec
sbb
cmp
outs
cwde
pop
scas
ficom
pop
pop
pop
xor
cs
add
out
fwait
inc
pushf
in
stos
mov
xchg
jl
out
aas
cld
movs
enter
sub
xor
ror
sub
dec
stos
push
push
movs
stc
push
in
sbb
add
adc
cli
int3
cmp
fs
neg
mov
sub
div
out
icebp
iret
data16
cs
xchg
sub
les
or
fsubr
loope
movs
sub
cmp
cmp
xchg
mov
sbb
js
dec
push
bound
in
out
xchg
cmp
xor
adc
cmp
pop
jmp
mov
popf
sbb
push
sbb
out
adc
cmp
mov
add
sub
les
cmp
xchg
mov
(bad)
lds
jns
lods
and
addr16
xor
aam
push
cmp
push
inc
movs
sbb
test
mov
inc
or
cmp
xchg
jnp
xchg
pusha
ffree
or
add
pop
ror
cs
int3
xor
sbb
jg
pop
jge
clc
idiv
aas
jne
mov
(bad)
adc
je
dec
jmp
sar
and
cmps
iret
scas
ins
enter
mov
mov
pop
pop
mov
mov
mov
add
test
(bad)
movs
(bad)
xchg
aad
je
adc
xchg
shr
jb
xchg
push
push
sub
in
lods
inc
add
movs
sbb
pop
inc
fs
or
jbe
ror
dec
jns
popa
mov
inc
test
xchg
mov
mov
or
fld
out
jmp
mov
jbe
sar
jnp
cli
xor
pushf
retf
jmp
stos
pop
test
test
aad
stc
push
rcr
das
dec
bound
jb
in
nop
aas
cli
ror
jge
add
jo
mov
aas
call
aaa
push
ins
inc
(bad)
dec
popf
cmp
(bad)
lahf
mov
ins
sbb
sbb
std
dec
jl
mov
dec
std
ins
jge
inc
idiv
loopne
add
jmp
cmp
sbb
mov
xchg
aas
cmp
jne
sbb
xchg
bound
sub
repnz
cli
shl
arpl
lds
jnp
fsubr
loop
cmp
mov
not
inc
inc
pop
out
mov
inc
outs
push
and
sahf
push
aaa
and
adc
inc
push
mov
and
ret
shl
fsubr
inc
or
dec
ret
fistp
imul
jb
outs
mov
int
push
mov
and
inc
in
xor
push
fst
cdq
mov
push
pop
xchg
push
mov
cmp
and
xor
or
inc
test
adc
mov
mov
ins
shl
adc
in
mov
sub
or
pop
push
push
ficom
addr16
cmps
add
out
cmp
repz
stc
retf
pusha
aaa
sbb
scas
out
sbb
or
mov
stos
jo
inc
dec
dec
(bad)
mov
xchg
leave
neg
push
jge
pop
out
dec
dec
pop
mov
pop
pop
je
cmp
(bad)
out
xor
pop
pop
in
jbe
imul
int3
jmp
outs
adc
jl
in
mov
addr16
xchg
in
sbb
movs
dec
xor
in
cmp
cli
and
push
dec
test
rcl
les
rol
pop
stos
stc
outs
cmp
jmp
dec
les
fdivr
jg
push
sar
and
mov
xchg
and
imul
inc
cmp
jmp
retf
movs
test
xchg
cmp
sub
mov
out
push
jmp
das
gs
cmp
inc
mov
in
mov
nop
movs
inc
add
pop
fidiv
and
sub
aam
or
fistp
pop
out
sbb
ss
jg
adc
cwde
mov
mov
pop
fs
adc
(bad)
ret
lods
aad
adc
xchg
sbb
add
cdq
dec
pop
in
call
push
movs
dec
cwde
push
addr16
xchg
add
lods
jno
(bad)
inc
(bad)
call
(bad)
mov
push
adc
ja
sub
outs
xchg
mov
ret
add
scas
cmc
xor
add
pop
out
fbld
jmp
sub
pop
cmp
and
cmp
out
(bad)
push
out
and
sbb
daa
mov
ss
and
sbb
sub
inc
je
shr
jge
inc
dec
cmp
in
ss
pop
sub
xchg
pop
inc
xor
xor
es
pop
sbb
popf
pop
lahf
mov
adc
xor
sahf
xchg
sbb
mov
retf
xor
mov
pop
mov
cmp
(bad)
cli
imul
call
add
jl
push
and
mov
and
jne
in
stos
outs
mov
scas
xchg
xor
add
repz
jns
mov
movs
int
dec
cli
test
pop
xchg
jo
pushf
shl
jmp
mov
or
xchg
mov
push
mov
test
mov
sbb
(bad)
xchg
ja
mov
push
sbb
ror
movs
out
ins
mov
pop
sub
outs
ret
into
mov
sar
aad
neg
imul
bound
and
push
retf
pop
push
call
sbb
shl
jo
adc
push
mov
scas
xor
xor
repnz
leave
or
jbe
jge
call
es
ins
jle
inc
loope
dec
sbb
fadd
cwde
mov
ficom
test
pushf
aas
fdivr
(bad)
lock
jo
into
call
(bad)
test
jb
test
mov
push
pop
and
fcom
xchg
pop
xor
xor
mov
out
aaa
and
cmp
pop
pop
xor
daa
or
xchg
iret
cmp
les
arpl
and
lea
mov
push
daa
ror
fmul
jp
cwde
and
stc
arpl
xor
push
and
sbb
and
mov
scas
xchg
cmp
pushf
retf
push
dec
xor
pop
dec
jmp
rcr
sbb
mov
pop
cmp
cli
cmp
push
cmp
cwde
sbb
into
xchg
jle
scas
push
or
in
jb
xor
adc
mov
push
push
(bad)
sub
into
mov
cmp
loop
mov
ret
(bad)
nop
out
call
movs
inc
jmp
test
xchg
fist
inc
shl
dec
sub
pusha
aam
cmp
mov
addr16
outs
aad
push
es
movs
cmp
dec
sub
jae
in
les
xchg
ret
fild
mov
ret
repz
dec
imul
mov
sub
dec
sbb
mov
cmps
lods
mov
mov
ss
jp
enter
enter
dec
mov
inc
into
pop
jne
sbb
ins
lds
lds
adc
fcmovnu
hlt
xchg
adc
in
inc
sub
cmp
push
ret
test
mov
test
pop
fcom
pop
push
retf
daa
xchg
push
les
xchg
addr16
pop
fnstcw
push
test
xchg
add
pop
fstp
cmp
mov
daa
sub
cmps
push
mov
aas
fsub
adc
ret
jmp
mov
inc
and
and
push
sub
(bad)
xadd
and
adc
sub
cwde
cmp
add
inc
sbb
and
xor
push
pushf
and
fs
into
lock
mov
jbe
adc
jne
dec
mov
rcr
mov
sbb
sbb
test
cmc
dec
pop
xor
dec
mov
inc
(bad)
(bad)
mov
cmp
mov
adc
iret
inc
loop
cmp
mov
cmp
jmp
fcomp
push
jb
xchg
stos
xchg
in
mul
jge
dec
(bad)
mov
push
or
div
mov
push
or
int3
or
loop
sub
mov
and
add
mov
retf
pop
test
or
adc
inc
xchg
add
std
lods
arpl
in
fild
ja
push
mov
(bad)
mov
adc
mov
or
cmp
xchg
ss
sbb
test
jnp
jl
movs
addr16
cs
xchg
jns
aad
test
inc
inc
and
push
sbb
dec
sbb
or
stos
jns
fistp
or
xchg
pop
movs
pop
cmp
xor
and
lods
out
leave
sbb
mov
push
nop
pop
out
aaa
cmps
dec
and
lock
mov
xor
mul
(bad)
out
popf
fsubr
mov
cmps
mov
inc
and
mov
sub
sbb
xchg
push
cmp
movs
daa
mov
xor
bound
out
jns
mov
pop
add
adc
call
imul
popf
jns
inc
inc
push
pop
jbe
js
dec
push
nop
jae
test
add
sbb
imul
mov
or
fmul
cmps
push
sbb
shl
mov
outs
mov
jl
push
sub
sub
retf
mov
(bad)
stos
ins
addr16
push
cdq
add
loop
leave
mov
mov
cld
cmc
or
dec
push
jecxz
inc
inc
pop
in
mov
sbb
hlt
pop
mov
cmps
mov
mov
rcr
loope
dec
mov
pop
dec
pop
or
mov
sbb
outs
cmps
shl
mov
imul
aam
aam
fs
mov
scas
dec
xor
in
call
mov
popf
sbb
fst
mov
push
mov
add
in
repnz
lods
cs
sbb
add
dec
or
cmp
jbe
adc
cmp
and
in
or
inc
jmp
dec
push
(bad)
stos
xchg
pop
aas
push
push
and
push
imul
in
cmp
add
fisub
test
int3
push
cmp
mov
adc
call
rcl
mov
inc
inc
and
inc
jp
aas
ins
dec
cmp
test
dec
rcl
xor
pop
sub
push
push
inc
mov
jne
inc
ins
push
retf
push
sahf
sahf
xchg
mov
jl
mov
inc
inc
pop
aaa
jns
test
pop
add
pop
and
adc
sbb
mov
xchg
inc
add
or
push
sbb
(bad)
mov
sbb
rol
fs
icebp
pop
mov
push
mov
dec
jge
pop
ret
ss
push
sar
data16
test
cmp
sub
mov
add
and
and
out
imul
aam
jne
out
and
stos
dec
into
fsub
dec
lods
xchg
es
xchg
pusha
repz
inc
or
pop
xor
add
lods
ins
inc
cmp
aas
sbb
xor
sub
dec
(bad)
ins
into
mov
or
jge
mov
retf
jle
or
aaa
bswap
in
loop
mov
sahf
(bad)
mov
push
xor
cmp
(bad)
mov
pop
popa
aad
mov
jmp
jg
cmp
pop
stos
mov
gs
sbb
fwait
mov
(bad)
shl
repnz
popf
xchg
sbb
rol
ins
mov
cmp
arpl
dec
stos
push
test
pop
cmp
hlt
movs
out
add
test
movs
and
dec
mov
jmp
test
xor
out
mov
pop
bound
daa
adc
push
mov
test
inc
and
or
rcl
les
leave
adc
xor
rol
je
xchg
mov
xor
sbb
push
pop
jmp
add
je
pop
sbb
pushf
out
xchg
xor
or
ror
push
cld
or
and
bound
and
sub
fidivr
aaa
mov
jmp
sar
cld
inc
dec
pop
out
add
aad
daa
and
sbb
or
data16
add
xor
inc
nop
retf
jp
mov
sbb
mov
fwait
jmp
lods
dec
ret
push
add
hlt
mov
inc
iret
int
push
mov
xor
mov
pop
push
xchg
pop
lods
int3
sub
sbb
outs
or
jp
dec
xchg
pusha
mov
cmp
jg
add
sub
or
or
cld
xchg
xor
nop
sahf
movd
push
retf
pop
and
dec
cdq
mov
push
xor
or
aas
cld
in
(bad)
xlat
call
pop
inc
loop
sbb
out
dec
rcl
mov
loop
aas
dec
(bad)
nop
into
dec
jmp
adc
fs
sbb
mov
ret
push
dec
or
(bad)
mov
ss
lods
pop
cmp
mov
or
pop
adc
sub
in
test
popf
rcr
or
xlat
sub
mov
push
dec
jmp
fstp
cmps
mov
stos
and
ins
pop
movs
sti
es
mov
or
jmp
jge
mov
push
test
bound
push
jb
jne
pop
into
or
test
xor
mov
jno
and
mov
sbb
dec
shr
push
xchg
cmp
mov
add
sar
mov
mov
(bad)
cmp
sbb
in
movs
nop
xor
stos
das
mov
and
call
jl
addr16
cmp
dec
adc
aaa
fisub
mov
and
add
imul
adc
gs
mov
sub
pop
add
jg
les
jge
movs
dec
addr16
in
(bad)
(bad)
lea
retf
enter
pop
pop
jo
retf
in
mov
cli
shl
cli
pusha
arpl
addr16
sbb
daa
dec
xchg
push
xor
push
push
or
ror
fdivr
fist
call
sti
inc
pop
das
daa
and
push
sub
push
cmp
mov
jmp
push
test
daa
and
push
xor
sbb
sbb
mov
shl
jg
push
out
in
push
and
jp
data16
mov
out
data16
jge
push
rol
adc
push
lods
out
jb
push
and
ins
ret
mov
cmps
outs
enter
xor
mov
(bad)
data16
loopne
ss
or
push
fsub
(bad)
out
mov
bnd
and
fdiv
repnz
xchg
seta
jmp
shl
daa
jmp
imul
sub
ss
sub
test
adc
pop
stos
push
pop
or
push
addr16
lods
dec
pop
add
push
push
xor
daa
ror
leave
les
pop
mov
aaa
clc
mov
xor
je
inc
hlt
push
push
outs
adc
and
xchg
lds
sbb
(bad)
jecxz
cmp
sub
(bad)
sbb
sahf
cs
pop
mov
in
push
pop
aaa
xor
inc
and
xchg
lahf
mov
mov
xlat
(bad)
jae
adc
hlt
enter
and
repz
aam
xor
(bad)
xor
ins
and
pop
(bad)
daa
mov
arpl
fcmovne
xchg
push
or
mov
adc
inc
pop
inc
sbb
inc
pushf
xchg
stos
mov
test
jmp
gs
aaa
sub
cmc
shl
rol
add
mov
(bad)
test
int
sbb
lea
and
jb
into
loop
adc
mov
aad
popf
repnz
ror
jle
jecxz
sti
cmc
pop
jp
cdq
sub
hlt
fsubr
add
pop
and
mov
push
ins
lock
dec
dec
cwde
mov
aas
and
jbe
jmp
jmp
imul
icebp
cmp
out
sbb
mov
inc
ja
neg
xor
sub
dec
mov
fild
fptan
sub
cli
fmul
out
fbstp
dec
ja
inc
jo
mov
lods
aam
mov
jns
dec
jb
leave
std
(bad)
shl
xlat
and
push
call
push
xchg
jno
rcr
inc
inc
bnd
or
lock
sti
test
or
nop
dec
inc
call
mov
aas
pop
fcomp
or
add
pop
nop
std
fdiv
xchg
mov
sbb
div
leave
fwait
sub
mov
add
xchg
sub
movs
mov
pop
sbb
lods
iret
pop
mov
test
push
and
(bad)
xor
gs
arpl
adc
cld
aas
jp
ins
scas
lods
pop
ds
sbb
dec
outs
hlt
jecxz
outs
(bad)
fsubr
push
or
hlt
inc
cmp
mov
(bad)
jmp
data16
xor
jmp
cwde
outs
je
push
pop
jb
retf
icebp
mov
jmp
dec
aas
ins
out
retf
push
pop
xchg
mov
sub
xor
dec
pop
imul
push
dec
out
test
imul
mov
outs
mov
mov
sub
mov
push
sub
ret
movs
(bad)
sti
jns
add
sbb
test
xor
clc
mov
pop
es
sti
loop
push
dec
fiadd
rcr
pop
bound
fcom
lods
ins
jno
dec
dec
pop
mov
out
cmc
dec
add
loope
(bad)
stos
les
add
dec
xchg
cmp
or
inc
jge
mov
rcl
sar
dec
call
cmps
dec
imul
xor
(bad)
xor
shl
ret
(bad)
fucomp
adc
imul
aas
mov
sahf
mov
stos
in
dec
push
dec
outs
mov
mov
push
pusha
adc
inc
ret
or
xchg
xchg
push
fs
push
adc
pop
arpl
sbb
sub
loop
mov
jge
pop
jmp
popf
pop
movs
and
lods
or
ret
jo
xor
int
ficomp
cmp
add
jo
or
inc
hlt
or
mov
icebp
dec
(bad)
gs
jp
dec
adc
cdq
add
push
aaa
cmp
cli
add
push
push
repz
inc
inc
mov
cmp
out
pop
loop
in
lods
call
push
fldenv
and
ins
xchg
shrd
(bad)
inc
inc
inc
mov
mov
enter
popf
je
popa
mov
jo
cmp
dec
jne
ds
adc
xchg
(bad)
loop
inc
cld
and
and
fcomp
clc
(bad)
mov
xor
jl
ins
sbb
cmp
lods
popf
ins
or
mov
or
ins
mov
fxch
aam
dec
jle
cmps
out
inc
and
loopne
mov
jg
into
out
cs
stos
xor
jbe
inc
and
stos
mov
inc
cmc
xchg
in
imul
push
xchg
aaa
pop
pop
xor
add
inc
sbb
dec
mov
push
idiv
cmp
popf
or
aaa
retf
push
sar
ds
mov
js
int3
jge
jmp
sar
outs
js
fiadd
sti
and
imul
dec
cli
stos
jg
es
push
xchg
add
and
(bad)
loopne
retf
jno
retf
mov
mov
fwait
push
push
fadd
jae
test
dec
movs
sub
mov
jo
jmp
adc
cmp
in
cdq
xchg
sub
cwde
jbe
jns
sub
pop
pusha
cdq
clc
sub
jp
fimul
sub
sbb
out
sbb
enter
cs
and
inc
adc
and
(bad)
cld
ja
inc
ret
in
dec
cmps
dec
and
mov
cmp
jnp
sbb
jl
movs
push
lods
and
pop
ret
(bad)
mov
push
push
and
cwde
std
addr16
dec
dec
xchg
icebp
daa
xor
ins
inc
dec
idiv
lock
in
dec
mov
adc
dec
xchg
push
cmp
sub
ss
or
xchg
lods
ror
pop
mov
sahf
sbb
sub
jbe
jb
lods
sub
xchg
sub
div
mov
dec
jl
les
aam
(bad)
mov
cld
cdq
xlat
out
xchg
jne
sub
xor
xchg
xor
xor
pop
(bad)
sahf
addr16
shl
shr
je
imul
add
or
adc
sbb
mov
dec
sbb
jl
dec
push
(bad)
mov
jmp
ds
sub
xor
mov
jne
out
xchg
(bad)
sub
lds
in
and
ss
(bad)
js
daa
or
or
ins
xchg
shl
ins
lds
inc
pop
repz
retf
call
frstor
icebp
les
pop
dec
pop
push
call
lock
jge
or
mov
jle
lds
sbb
mov
rcl
cmp
imul
popa
das
adc
sti
cmp
pusha
jle
lods
mov
int3
retf
xor
retf
out
pop
add
leave
dec
sbb
mov
stos
sub
je
lock
mov
pop
xor
mov
js
popa
pop
bound
js
jmp
add
jl
(bad)
fisubr
ret
inc
or
out
sbb
fnstenv
pop
lea
dec
sbb
shl
int3
and
jne
pop
data16
push
std
push
rcl
shr
cdq
push
push
js
push
ret
dec
repz
loopne
lds
or
push
sub
pop
mov
cmp
dec
cwde
and
aaa
(bad)
adc
in
dec
loop
popf
add
in
hlt
jns
cmp
icebp
and
cmp
add
test
mov
sbb
dec
das
sub
loop
ret
pusha
and
dec
icebp
je
adc
scas
movs
shl
push
or
mov
pushf
mov
jmp
jnp
call
jns
jnp
mov
xchg
and
shl
jmp
xor
lds
in
jb
cmp
lods
pop
pusha
sahf
sahf
push
lock
pusha
in
mov
imul
aad
test
mov
(bad)
out
add
cdq
dec
inc
and
mov
(bad)
cmp
push
push
cmp
xchg
(bad)
mov
mov
call
sbb
or
and
push
and
xor
and
test
xchg
ins
fmul
cmps
pop
fidivr
mov
clc
jp
mov
outs
out
push
outs
inc
ret
adc
cmp
dec
jnp
add
adc
movs
xor
imul
xchg
xchg
pop
inc
fiadd
pusha
shl
mov
popa
and
jbe
scas
pop
cwde
dec
fs
adc
mul
imul
jmp
into
cmp
sub
fs
loopne
mov
lock
aas
adc
call
inc
xor
jecxz
in
cmps
outs
adc
(bad)
gs
in
sahf
xor
push
stos
and
call
sbb
in
aad
ror
cmp
inc
dec
sub
xchg
push
repz
or
scas
and
nop
test
jbe
outs
mov
jbe
pop
popf
mov
push
mov
inc
stos
jecxz
jge
jp
xchg
mov
adc
out
rcl
test
push
cmp
ins
mov
and
push
push
sbb
out
(bad)
adc
lahf
cmps
outs
in
in
test
inc
clc
push
sbb
scas
add
xchg
cmovo
cmp
dec
inc
sbb
mov
fiadd
jg
test
xchg
jge
mov
sub
adc
aad
enter
dec
rcl
stc
ins
jne
mov
cdq
mov
ins
test
lock
sbb
(bad)
sub
sar
or
and
jo
cmp
je
mov
mov
outs
movs
shl
or
mov
cmp
mov
pushf
xchg
pop
xor
inc
sub
mov
pop
scas
shr
jae
(bad)
stos
fnstsw
add
fstp
or
fs
xor
outs
dec
add
mov
mov
scas
inc
lods
adc
ja
inc
adc
popa
xor
jl
pop
mov
idiv
pop
and
sti
xor
add
packuswb
ret
idiv
out
arpl
gs
rol
jo
jo
sub
xor
pop
mov
addr16
push
mov
xor
push
adc
dec
inc
ret
pop
sbb
jae
sahf
repz
jp
mov
xchg
cli
xchg
or
jne
(bad)
imul
je
mov
mov
ja
mov
adc
inc
or
faddp
xchg
aam
es
(bad)
push
push
mov
ja
cs
je
sub
mov
outs
nop
pop
rcr
mov
cmp
movs
xor
and
inc
push
adc
xor
push
mov
sbb
jp
jl
inc
sub
stc
ds
jle
dec
(bad)
dec
or
pop
mov
stos
pop
or
and
gs
mov
jae
sar
and
or
dec
push
cdq
or
add
xor
(bad)
ss
loopne
jno
jp
or
jae
mov
scas
cwde
movs
mov
jo
and
xor
xor
add
sub
inc
inc
icebp
setae
movs
jne
inc
mov
dec
inc
or
pop
test
mov
cmp
(bad)
(bad)
and
mov
loop
nop
psubusb
mov
mov
xchg
pop
les
icebp
pop
mov
das
xchg
popf
pop
or
fnstcw
bound
retf
scas
pop
das
push
nop
or
mov
cmp
add
inc
jg
shl
stos
in
jb
in
adc
fstp
or
(bad)
push
fbld
mov
push
and
dec
ins
mov
add
push
sbb
sub
mov
gs
adc
mov
add
dec
sahf
adc
nop
xchg
stos
jp
nop
sbb
mov
icebp
loope
outs
sbb
mov
loop
jge
fst
stos
push
outs
mov
jmp
sub
and
dec
fdivr
push
les
sub
inc
or
inc
mov
push
imul
jno
jg
sahf
push
aam
mov
adc
jns
popf
rol
shl
sub
test
inc
adc
mov
jge
push
fwait
push
mov
inc
push
push
push
neg
xor
adc
inc
pushf
mov
pop
inc
outs
arpl
mov
(bad)
push
sub
cs
in
imul
sti
daa
or
movs
dec
rcl
inc
jge
leave
xor
pop
adc
push
and
push
cdq
or
minps
stc
sub
inc
sti
jns
jp
jl
iret
cdq
mov
shr
imul
jecxz
and
(bad)
in
xor
popa
jmp
(bad)
cmp
fsubr
push
cmp
mov
clc
pop
dec
xchg
iret
das
pop
sbb
inc
popa
pop
pop
cdq
jl
sbb
push
add
fisttp
pusha
ss
xchg
fs
cmp
test
cmp
test
call
or
les
pop
(bad)
movs
(bad)
jo
call
xchg
into
push
je
sub
shr
in
jecxz
and
inc
dec
js
lea
cmp
inc
mov
xchg
clc
(bad)
fild
je
in
rcr
add
mov
push
div
ins
sti
and
call
dec
jle
jp
push
(bad)
push
imul
popf
or
pop
adc
clc
xor
leave
jo
pop
push
inc
retf
mov
push
inc
push
adc
mov
fild
bound
nop
lock
push
jmp
scas
aad
adc
retf
loop
lahf
xchg
inc
pop
cmp
pop
(bad)
imul
pop
loop
adc
movs
out
fldcw
cwde
int
aad
sub
(bad)
sbb
sbb
pop
imul
mov
stc
xor
push
xchg
ss
add
dec
dec
int
sbb
or
std
or
popa
in
mov
or
push
xchg
pop
push
cmc
mov
(bad)
jl
cmp
(bad)
movs
shl
jle
sub
xchg
mov
pushf
scas
lods
add
rcl
pop
push
push
lods
ins
jo
xchg
mov
jl
jb
sub
add
cmps
xlat
and
dec
cmps
fcomp
dec
iret
dec
xor
aaa
adc
test
sahf
pop
dec
cmps
fisub
sar
(bad)
fs
stc
xor
fmul
inc
fistp
fstp
push
or
jecxz
sub
imul
lea
mov
std
cwde
cmps
rcl
inc
add
mov
mov
popf
dec
jle
mov
or
out
arpl
lock
pop
je
cvtdq2ps
retf
or
addr16
or
(bad)
retf
in
adc
es
mul
pop
pop
lods
lods
shl
pusha
sti
movs
shl
xchg
jg
inc
popf
sub
cs
fistp
int
xchg
icebp
jno
int
popa
(bad)
xor
mov
or
test
pop
cmps
leave
pop
imul
push
jecxz
fadd
pop
add
jge
or
mov
test
mov
data16
mov
enter
and
je
xor
mul
mov
ret
adc
dec
add
cmp
pusha
xchg
jmp
sbb
inc
mov
or
cmp
xchg
ret
sub
inc
shr
mov
push
jne
lea
pop
cli
clc
mov
aaa
mov
std
push
lods
jns
fadd
(bad)
stos
int
aad
movs
pop
shl
cmps
adc
add
fs
push
aad
dec
push
inc
shl
pushf
mov
loop
inc
movs
jle
push
js
jno
test
fist
or
xor
xchg
(bad)
ficom
ins
and
adc
xlat
inc
clc
dec
xchg
in
stos
mov
cld
icebp
xchg
sub
stos
fs
cld
jmp
xor
mov
out
dec
dec
cld
inc
mov
and
(bad)
sahf
push
push
pusha
mov
pusha
and
or
add
pop
cmp
bound
cmp
ins
xlat
stc
call
xor
xchg
loopne
pop
adc
xchg
stos
lods
ins
or
aas
leave
fs
retf
push
push
and
cmp
dec
retf
mov
xchg
iret
repz
mov
mov
xchg
xor
mov
push
sbb
adc
mov
sbb
imul
ret
stc
out
mov
popa
inc
mov
jecxz
adc
adc
cmp
sbb
jp
mov
inc
imul
nop
mov
les
cdq
mov
cld
mov
mov
(bad)
loopne
(bad)
jmp
sub
arpl
rcr
xor
and
jp
mov
rcl
inc
sub
and
arpl
fdivr
mov
mov
adc
loop
lods
shr
pop
inc
dec
and
std
xchg
dec
mov
pop
imul
jne
push
inc
adc
pop
inc
inc
test
outs
pop
je
inc
pop
dec
ins
les
or
not
repnz
pop
cmp
inc
iret
xchg
inc
adc
sub
mov
xor
lea
loope
loop
popf
out
mov
jns
mov
add
pop
(bad)
in
jno
jb
dec
mov
imul
stos
mov
sbb
cmp
out
daa
cmp
call
inc
gs
inc
mov
xchg
in
loope
cmp
jle
(bad)
xor
sahf
int3
sbb
sub
mov
movs
jge
cmp
aas
inc
inc
fs
daa
pop
iret
and
inc
mov
addr16
inc
or
enter
jb
pop
adc
mov
inc
jo
in
dec
(bad)
mov
jp
cwde
add
pop
in
fdivr
cmp
imul
jbe
mov
jp
push
cmp
and
jo
adc
sub
and
inc
shl
ret
inc
sub
mov
gs
mov
mov
cli
scas
je
int
mov
add
xor
adc
sbb
sbb
cmp
repnz
ss
cmp
lods
out
mov
lahf
cmps
outs
and
sbb
adc
jns
xor
jecxz
arpl
jae
ror
jmp
sub
jae
cmps
push
add
pop
bound
or
sar
repz
pop
movs
adc
sub
jo
xor
inc
mov
addr16
jmp
in
dec
(bad)
jnp
push
aaa
xlat
paddq
jno
xchg
enter
outs
pop
adc
jo
push
or
ins
lods
inc
clc
jecxz
push
fs
inc
ret
fsubr
cmp
pop
scas
stc
xor
ja
test
imul
unpcklps
jmp
mov
ret
inc
pop
sbb
mov
and
retf
mov
mov
movs
pop
mov
stos
pushf
adc
sub
mov
mov
cdq
outs
cmp
cmc
cmp
push
sbb
jp
adc
bound
push
push
pop
sub
adc
popa
arpl
int3
jle
popf
mov
pop
push
sub
jno
mov
mov
movs
test
fmul
and
and
mov
and
jo
mov
inc
jae
add
jg
xchg
mov
mov
push
xchg
stos
or
jp
push
test
xchg
jecxz
bound
lock
mov
push
xor
pop
jo
sbb
dec
call
aaa
cwde
sbb
dec
dec
mov
fwait
scas
call
xchg
jle
ret
or
xor
aad
inc
push
lds
sub
jne
add
ss
inc
js
xor
or
mov
sbb
mov
and
xchg
dec
xor
sub
cmp
in
pop
sbb
sti
pop
arpl
cmp
dec
mov
stos
pop
retf
mov
mov
pop
out
sbb
(bad)
mov
ja
inc
repz
lods
jae
in
pop
cmp
(bad)
int
sahf
and
lods
pop
ds
loopne
fwait
xor
pop
xor
xchg
iret
(bad)
jg
ss
mov
xchg
scas
clc
inc
dec
jne
mov
jo
pop
pop
xchg
or
loope
shrd
xchg
call
stos
and
push
repnz
sbb
mov
push
sub
xchg
push
push
add
inc
stos
aaa
jle
add
ja
clc
(bad)
mov
cmc
retf
dec
or
es
push
xor
mov
(bad)
bsr
mov
fadd
out
cmc
adc
mov
cmps
lods
arpl
mov
or
ds
jns
fnsetpm(287
add
nop
mov
cmp
inc
lahf
xchg
cli
mov
bound
shl
xlat
aas
jmp
sar
les
(bad)
std
movs
jbe
ret
xor
les
pop
leave
hlt
jo
fs
mov
ins
pop
sbb
jae
jbe
mov
sub
add
fnstsw
jo
dec
fst
jno
in
mov
inc
push
fcomp
xor
(bad)
jl
xor
outs
and
fbld
sbb
outs
mov
inc
jmp
pop
stc
mov
xchg
sub
jb
mov
je
popa
cmp
dec
mov
inc
mov
dec
dec
and
adc
or
jnp
add
dec
les
jge
mov
mov
or
sub
rcr
jge
push
sub
(bad)
or
push
push
mov
out
pop
loope
jns
daa
inc
mov
scas
retf
jle
not
push
out
jno
cld
shr
push
mov
xchg
pusha
test
sbb
imul
retf
xor
mov
add
aam
shl
ss
push
fidiv
in
or
ret
push
je
push
jno
addr16
pusha
(bad)
outs
xor
jmp
sbb
into
scas
jmp
inc
jb
(bad)
push
jno
add
push
push
mov
dec
dec
lods
stos
and
fcom
pop
js
mov
mov
mov
fisub
mov
ror
cmp
ror
popa
inc
and
xor
pusha
loop
push
inc
cmc
pop
jbe
(bad)
xchg
jmp
sbb
aad
inc
dec
jbe
fnsave
scas
adc
inc
out
cmp
pop
and
(bad)
in
xor
popa
pop
je
test
out
ds
icebp
(bad)
jp
pop
mov
cmps
adc
xchg
cdq
jmp
jp
js
in
sub
jbe
xor
push
xor
fbstp
in
mov
mov
push
add
ss
enter
sub
sub
sbb
xor
jge
mov
cmp
and
sub
jbe
mov
pop
ret
cdq
dec
jmp
or
movs
ret
rcl
cmp
push
popf
xchg
inc
(bad)
mov
sbb
cmp
cmps
sub
clc
leave
lock
push
std
adc
pop
xchg
(bad)
leave
jbe
add
jo
and
data16
push
jo
test
fst
inc
xor
lds
dec
pop
cwde
push
ds
stc
in
aaa
mov
shl
adc
jns
jae
mov
ss
push
popf
add
dec
js
sbb
cdq
dec
sub
loop
jge
mov
into
jp
test
mov
pop
and
push
cmc
rcl
fadd
aas
imul
or
cmp
sub
sbb
dec
popf
stos
fadd
not
(bad)
(bad)
inc
lock
das
sub
cmps
popa
mov
jge
sbb
lods
add
push
hlt
xor
mov
cmp
mov
jae
retf
nop
mov
mov
ds
int
or
fimul
cdq
dec
icebp
adc
inc
add
mov
repz
sbb
int
repz
push
arpl
dec
jle
sub
loop
ret
jmp
sub
push
lock
les
popa
ss
fnstsw
inc
outs
test
or
mov
lods
jae
and
iret
enter
cmp
outs
jne
je
imul
out
mov
sbb
inc
test
adc
xchg
and
outs
mov
ja
les
idiv
scas
add
adc
call
mov
repnz
scas
push
fnstenv
test
shr
jp
sub
or
test
(bad)
push
std
push
sub
sbb
lock
mov
lea
test
mov
and
or
mov
sbb
mov
jg
add
xchg
mov
lods
jne
push
mov
out
dec
sub
outs
jne
rol
popf
push
xor
(bad)
lahf
test
jno
fwait
mov
inc
call
sahf
xor
jmp
dec
iret
stc
int
pop
mov
lds
retf
sub
fcomp
das
ds
jl
shr
mov
inc
(bad)
cmp
scas
daa
jle
scas
out
sahf
xchg
mov
xor
mov
mov
shl
jnp
sbb
repnz
pop
lea
fstp
es
jne
ror
lahf
fisubr
imul
cmp
pop
addr16
push
jno
dec
clc
push
jno
(bad)
aas
in
inc
pop
and
test
push
cmp
push
add
cmp
out
fsubrp
bound
push
mov
jge
popf
retf
lds
cwde
mov
jne
adc
ins
ja
mov
push
jo
add
cmps
leave
add
pusha
call
in
inc
mov
xchg
sub
shr
imul
inc
repnz
push
and
cmp
in
dec
aad
inc
hlt
imul
arpl
cmps
lods
push
ja
xor
jmp
pop
cdq
retf
pop
mov
repnz
cli
cwde
call
(bad)
jne
pop
(bad)
frstor
push
loop
xor
lea
bound
jmp
inc
movsx
inc
adc
adc
js
arpl
mov
jmp
cli
(bad)
out
and
jg
bound
(bad)
and
sub
ror
stos
out
bound
dec
fidivr
nop
push
test
mov
xchg
and
xor
rcl
sahf
sti
and
cmc
cmp
outs
gs
ds
push
popf
loopne
stos
mov
xor
pop
movs
jge
mov
mov
adc
dec
popa
pop
ds
movs
jo
xor
fs
scas
lea
mov
loop
xor
add
cld
shr
out
cs
xlat
inc
pop
fcomp
lahf
out
ins
xor
popa
cmp
jbe
fsubr
out
mov
xor
jne
mov
and
xor
mov
sub
pop
(bad)
xor
jge
and
or
shld
jmp
mov
addr16
dec
inc
mov
and
jo
jmp
ds
jne
push
ins
cmp
sar
movs
push
xchg
aad
outs
ja
push
fld
(bad)
(bad)
jmp
mov
enter
daa
xchg
fs
push
xchg
mov
fld
inc
enter
sub
loop
sti
jecxz
rol
pop
shl
inc
sbb
inc
fs
ss
mov
cmp
or
xchg
dec
cmps
jmp
sar
ins
popa
push
aam
dec
pusha
lods
add
or
fs
cmc
into
jo
mov
push
push
pop
pop
in
sub
push
sub
jb
ins
or
daa
push
push
or
push
in
int
js
ds
mov
inc
pop
pusha
es
dec
repnz
stos
mov
mov
cwde
push
(bad)
outs
inc
mov
cmp
das
call
into
sub
inc
mov
icebp
pop
ins
dec
pop
xor
push
es
lods
(bad)
loop
fild
inc
pusha
aam
lahf
pop
sub
dec
icebp
fnop
dec
sbb
outs
jg
push
scas
nop
add
sbb
fcom
and
sbb
aam
dec
jmp
dec
enter
loopne
mov
(bad)
repnz
xchg
jle
mov
imul
fnsave
inc
dec
icebp
push
adc
mov
push
pop
mov
push
sub
xchg
loopne
xor
mov
aad
call
pop
mov
fisub
xor
loope
push
xchg
imul
adc
adc
call
icebp
or
cli
outs
outs
retf
es
shr
mov
mov
or
add
mov
dec
jae
retf
and
lock
lods
or
jmp
pop
das
lods
pop
das
jmp
inc
add
push
mov
jb
loop
nop
pop
les
in
hlt
div
mov
jg
xlat
push
push
mov
lock
cmp
repnz
inc
sub
xor
cmp
mov
stos
jne
fstp
cli
(bad)
jns
pop
idiv
scas
pop
jl
ins
dec
adc
cs
(bad)
iret
cld
xor
into
lock
enter
xchg
aas
add
jmp
add
jne
cmp
cmc
xchg
ins
call
inc
jbe
ins
cdq
xor
dec
ror
iret
movs
jb
pop
std
mov
or
bound
dec
icebp
(bad)
sar
cmps
sub
ds
jbe
and
fcomi
sub
cli
cdq
fidiv
pop
mov
xchg
cmp
sbb
cli
clc
xor
retf
jp
adc
sti
gs
jge
repnz
xchg
mov
sub
daa
inc
sub
add
dec
in
fs
fs
inc
jae
mov
sub
loopne
add
ins
sub
push
and
popa
pusha
xchg
xlat
sbb
daa
stc
jmp
pop
loopne
push
adc
aas
frstor
loope
push
jecxz
not
movups
test
xor
dec
pop
div
lds
lds
popf
icebp
les
sahf
bound
ss
stos
sub
sbb
inc
jae
(bad)
sbb
xor
pop
retf
push
and
pop
xor
shl
lahf
mov
test
pop
push
sub
lods
jns
jbe
imul
mov
mov
xchg
push
movs
shl
outs
jl
or
and
call
ins
or
mov
jmp
mov
and
add
jmp
std
jbe
add
mov
xchg
ins
sbb
push
repnz
sub
or
push
mov
sub
jp
add
std
(bad)
mov
inc
or
xor
xor
cwde
retf
xlat
mov
jnp
(bad)
xor
std
ficom
test
cs
popa
cdq
iret
mov
jmp
sbb
sub
out
push
sbb
in
xchg
cwde
ds
cli
aad
pop
stos
adc
(bad)
dec
fbld
pushf
mov
scas
in
pop
cmp
out
sub
mov
fist
inc
aaa
cmc
inc
fwait
jo
mov
retf
(bad)
xor
fwait
xchg
push
enter
jp
pop
outs
ret
out
add
test
push
imul
(bad)
jno
scas
jne
call
pop
pop
nop
push
dec
retf
retf
jp
inc
out
adc
sub
and
xor
inc
call
loope
sbb
aad
sbb
cmp
xor
aam
popf
xchg
pop
xchg
stos
sub
jle
sub
shr
mov
clc
js
push
dec
add
fdivr
call
adc
mov
sar
test
fimul
inc
outs
or
ret
and
ja
push
(bad)
mov
inc
or
outs
mov
mov
test
ud1
ja
out
jg
test
or
scas
dec
xchg
sahf
(bad)
jbe
sub
mov
in
jne
pop
inc
rol
inc
xchg
sub
jb
xor
das
ins
(bad)
sbb
cs
jl
bound
call
(bad)
popa
loope
mov
cli
ret
push
outs
jle
add
push
inc
sbb
inc
adc
stos
and
mov
pusha
jge
out
(bad)
loop
mov
push
jb
rcr
pop
dec
xor
push
sub
popf
rol
popf
mov
mov
ins
ja
mov
mov
loop
pop
fs
pop
sbb
sbb
fsubr
mov
aad
lods
mov
inc
cmp
sar
sbb
sbb
push
xlat
pop
sti
int
mov
cmp
or
mov
das
shl
ds
cld
js
dec
dec
mov
push
es
scas
hlt
dec
retf
sbb
inc
imul
xor
add
retf
or
xchg
push
and
in
or
scas
sar
push
pop
add
(bad)
mov
pop
sbb
ja
test
inc
adc
jno
or
gs
xor
cmp
cs
idiv
in
mov
and
xchg
call
(bad)
mov
mov
mov
pop
or
nop
ret
push
jle
jb
shl
mov
inc
(bad)
cmc
jge
sbb
mov
jb
inc
jge
mov
cli
mov
clc
dec
jnp
or
push
mov
inc
push
enter
repnz
je
int
adc
push
jo
jno
inc
sbb
stc
or
inc
ss
(bad)
lods
sub
sub
call
cmp
adc
xor
or
mov
mov
mov
aaa
jae
adc
or
div
cld
es
fst
xchg
(bad)
(bad)
pusha
dec
dec
cmp
dec
or
ins
add
pop
mov
repz
adc
or
inc
add
mov
and
loope
or
enter
and
loop
aas
ss
mov
dec
jecxz
xchg
mov
pushf
cmp
or
retf
push
sahf
(bad)
mov
ror
cmp
stos
sub
mov
push
jmp
push
shl
lds
imul
mov
push
repnz
ret
push
sbb
lahf
pop
(bad)
jmp
add
mov
xor
in
ror
or
je
sahf
cmp
or
mov
call
test
mov
retf
dec
aas
xchg
jmp
xor
push
push
test
mov
mov
inc
call
mov
push
push
dec
enter
rcr
clc
(bad)
xor
push
or
mov
and
lahf
pop
fcomp
dec
pop
cmp
push
das
dec
data16
leave
mov
test
mov
push
sbb
js
je
ror
inc
sub
dec
jecxz
dec
aad
jns
dec
pop
add
pop
push
cmp
jp
mov
jns
idiv
and
mov
inc
lods
sub
hlt
test
scas
fdiv
push
pop
mov
pop
sbb
pushf
jb
xchg
not
cdq
mov
loope
leave
push
(bad)
cmp
sbb
adc
sahf
sub
pop
test
and
arpl
test
jecxz
dec
(bad)
cmp
push
(bad)
jl
or
mov
dec
pop
rol
pop
and
and
inc
test
enter
push
daa
cmp
arpl
repz
dec
mov
ficomp
jp
jge
mov
sub
leave
sbb
loopne
imul
ins
aaa
pcmpgtd
dec
dec
inc
dec
cmp
inc
mov
mov
jae
add
add
and
inc
mov
push
sbb
or
call
test
iret
jo
addr16
in
push
mov
test
cmp
cmp
dec
dec
(bad)
lahf
dec
cmps
fisub
mov
mov
call
out
inc
cdq
les
cdq
jbe
jmp
cdq
shl
aas
enter
cmp
mov
jle
and
mov
and
test
dec
mov
xchg
or
(bad)
ds
mov
xlat
and
(bad)
add
inc
sub
es
adc
inc
inc
jle
ja
ret
and
push
movs
jle
dec
jo
das
int3
ret
into
leave
or
aaa
out
add
in
test
fisttp
xchg
cmp
mov
gs
repz
cmps
sub
add
push
jecxz
inc
cmp
sar
dec
jae
sub
mov
inc
dec
mov
mov
mov
xchg
aas
out
mov
dec
icebp
sar
push
fsub
ja
pop
sbb
inc
mov
xchg
xor
fwait
ret
and
add
xchg
js
in
xor
dec
lds
jb
jp
aad
test
addr16
stos
mov
pop
sbb
xor
stos
stc
adc
dec
sub
add
add
jmp
mov
call
xor
int
test
js
xchg
cmc
les
sbb
aas
call
mov
mov
cmp
adc
add
or
aaa
lock
lods
jno
mov
jb
adc
data16
addr16
out
in
pop
cwde
push
xchg
and
mov
inc
rcr
dec
(bad)
rol
aam
mov
ret
add
les
ss
shl
inc
pop
sbb
cmp
addr16
cmp
(bad)
cmp
int3
pop
shl
add
daa
ss
pop
imul
(bad)
aaa
push
aad
mov
ror
shl
cmp
jle
stos
jbe
add
cmps
cmp
dec
add
and
dec
pop
push
inc
cwde
out
mov
dec
in
jno
loope
adc
les
call
fcomp
push
mov
(bad)
out
aaa
fild
movs
bound
mov
cwde
sar
xchg
xchg
push
dec
adc
aaa
and
push
fs
sbb
mov
leave
lahf
adc
popf
adc
jle
shl
cld
or
or
out
retf
cli
inc
mov
pop
add
jns
mov
push
add
push
mov
jp
dec
mov
pmuludq
xchg
inc
fwait
add
xchg
adc
fisttp
xor
add
shl
je
pop
inc
sub
dec
bound
(bad)
dec
pop
ss
pop
cmp
hlt
dec
mul
xchg
in
sahf
mov
fs
jno
xor
pand
dec
pop
ror
dec
leave
jmp
mov
sub
push
xor
gs
adc
sub
jge
je
jl
xor
add
mov
and
adc
mov
lds
test
xchg
rol
fadd
xor
iret
shl
jo
xchg
ret
add
addr16
stc
jb
retf
adc
cmp
ds
pop
and
cli
ins
mov
mov
jne
mov
mov
(bad)
mov
mov
fisub
dec
stos
jecxz
mov
sub
xchg
sub
and
leave
data16
cld
into
test
jnp
mov
aas
sbb
or
dec
push
sub
(bad)
xor
cmps
cdq
in
or
loope
sub
mov
lahf
call
sub
jb
cld
shl
cmp
mov
jb
cmps
cli
std
sub
pop
push
loope
in
push
shl
shl
sub
mov
inc
mov
out
push
mov
cwde
idiv
add
pop
fwait
mov
inc
push
enter
xor
jbe
pop
outs
jnp
sub
iret
aad
aam
or
jge
pusha
cdq
aaa
xchg
aaa
ds
cmp
jle
mov
cs
inc
lahf
mov
repnz
pop
shr
inc
jmp
call
lods
pop
bound
cmp
cli
inc
dec
mov
rol
xor
push
fs
sbb
sbb
rol
ds
jb
jb
add
sbb
(bad)
or
sbb
dec
cmp
leave
imul
cs
jbe
scas
gs
repz
cmps
fisttp
ins
inc
xchg
arpl
fidivr
add
sbb
inc
or
call
leave
mov
sub
(bad)
int
or
mov
jno
lock
xor
mov
les
movs
arpl
je
cdq
xlat
inc
test
add
out
lods
jnp
xchg
cmp
add
imul
daa
pop
pop
lods
sbb
cmps
mov
ret
out
rcr
int
push
sub
jmp
or
js
sub
cmp
jle
movs
fwait
sar
loop
mov
das
out
cmc
dec
jecxz
repnz
push
add
and
xchg
pusha
sahf
jp
gs
jmp
mov
sbb
jmp
sbb
mov
pop
xor
pop
loopne
aam
sbb
mov
mov
add
inc
ins
je
out
add
lahf
xchg
push
sub
adc
stos
out
inc
(bad)
sbb
jl
ret
lds
sbb
mov
fist
(bad)
xchg
push
xchg
mov
stc
mov
mov
dec
in
int
cld
mov
dec
sub
out
scas
aaa
(bad)
push
jb
cmp
xlat
cdq
inc
test
aaa
into
or
(bad)
call
add
add
and
mov
add
fnsave
sub
mov
jecxz
std
jmp
jo
mov
mov
mov
scas
push
lods
lock
pop
dec
sbb
es
lds
ins
ds
cmp
jae
leave
jp
aaa
and
aam
xor
adc
ficom
add
arpl
data16
push
inc
scas
push
mov
mov
js
pop
add
jb
dec
adc
dec
in
sub
mov
jge
or
nop
sbb
mov
out
add
fwait
sub
cdq
push
imul
mov
sub
scas
cmp
data16
out
clc
ja
pop
cli
imul
add
movs
add
pop
dec
jno
aad
ja
push
pop
pop
pop
mov
sbb
inc
loopne
jge
and
push
add
mov
push
leave
test
jo
add
lods
call
out
cmc
aad
gs
popa
dec
mov
jmp
and
push
pushf
pop
fwait
dec
or
jne
lock
bound
inc
enter
stos
mov
inc
adc
xor
call
cmp
or
test
ins
add
scas
adc
test
test
shl
es
xchg
inc
js
inc
sub
xlat
or
jns
fiadd
sbb
loope
adc
test
push
adc
lock
jmp
push
rcl
movs
dec
das
sbb
cmps
push
pop
shl
sbb
sub
fdivr
jl
gs
push
je
loop
mov
lock
push
aaa
movs
fdivr
jl
sbb
inc
adc
scas
or
jle
jne
mov
sahf
sub
into
movs
mov
mov
jg
push
mov
push
xchg
js
and
xor
or
push
aad
xchg
js
jns
arpl
and
mov
int
sbb
jmp
xor
adc
shl
test
les
sbb
cmp
sbb
mov
cwde
jbe
push
test
es
mov
pop
mov
adc
mov
rcr
shl
or
xor
pusha
dec
(bad)
mov
stos
cli
imul
and
sti
sbb
shl
or
rcl
sub
out
mov
rcl
ror
xchg
sub
je
(bad)
and
mov
or
popa
xor
pop
cmc
je
or
sbb
mov
(bad)
and
mov
outs
push
cs
mov
xor
push
test
lahf
ss
sbb
mov
xor
shl
push
outs
jmp
jae
add
jle
mov
push
das
mov
sti
cdq
loope
jnp
mul
mov
mov
shr
stos
cmps
pop
cmp
gs
outs
and
popa
cld
push
sti
sbb
mov
inc
adc
inc
pop
mov
imul
stc
in
sub
mov
jmp
xchg
cmp
mov
dec
mov
(bad)
inc
pop
cmp
mov
push
cmp
cwde
ror
out
sub
adc
imul
mov
loop
sar
sub
loop
dec
mov
stos
pop
js
mov
(bad)
add
and
cmps
(bad)
int3
push
mov
mov
pop
mov
xchg
mov
add
out
lods
jp
(bad)
sbb
test
loope
fsub
and
aaa
scas
scas
das
pop
push
fadd
pop
sub
scas
sbb
pop
hlt
jl
cmc
lds
mov
pop
mov
dec
nop
pop
aad
pusha
in
test
xor
mov
dec
ja
mov
(bad)
pop
outs
test
adc
dec
mov
mov
and
loopne
cmp
cmps
jo
(bad)
not
or
sub
cdq
jae
or
cmp
xchg
test
jne
in
mov
(bad)
fisub
add
sbb
push
xchg
rcl
ss
inc
mov
mov
ret
xor
dec
lods
xchg
push
push
clc
cwde
mov
repz
push
or
stos
aas
outs
fld
popa
loope
jg
dec
pop
in
out
mov
mov
ss
loope
clc
iret
aas
scas
cmps
pop
(bad)
arpl
std
dec
fmul
fsubr
and
inc
bound
xor
xor
movs
cmp
lds
outs
inc
push
mov
mov
sbb
sbb
xor
or
adc
out
pop
aas
xlat
mov
or
xor
jmp
and
dec
mov
mov
sahf
mov
xor
sbb
inc
dec
sti
xor
jg
pop
and
mov
sbb
add
mov
sub
test
pop
(bad)
cwde
xor
mov
sbb
cmp
or
push
mov
inc
and
mov
test
loope
inc
pusha
cwde
pop
or
xor
repz
ficomp
sub
hlt
inc
js
or
push
pop
popa
stos
push
lahf
push
push
jb
adc
cmc
movs
xchg
arpl
rol
test
inc
fs
das
cmp
inc
dec
cmp
sbb
(bad)
aas
popf
pushf
sub
cmp
arpl
jns
lahf
pop
push
je
mov
jmp
xchg
and
cmp
in
and
icebp
and
inc
(bad)
dec
mov
sub
iret
loop
(bad)
fldlg2
cmp
and
sbb
sub
sub
or
or
scas
pop
push
jmp
fst
sbb
xchg
add
mov
cli
ins
adc
jmp
sub
call
mov
(bad)
fbstp
mov
popa
fiadd
push
scas
pusha
push
scas
(bad)
pop
lahf
jge
mul
mov
mov
or
cdq
jle
pusha
mov
pop
sub
pop
add
and
inc
cmp
neg
add
lods
out
leave
mov
mov
call
into
ss
cmp
sub
pop
loopne
sbb
jmp
dec
push
adc
imul
jo
inc
cmp
adc
dec
out
in
addr16
out
(bad)
or
test
adc
loop
jo
jne
aad
in
add
scas
loopne
hlt
aam
addr16
xchg
repz
dec
mov
jns
push
xchg
mov
jae
sub
cmp
cmp
mov
sub
push
inc
repnz
dec
and
and
add
cmp
jbe
mov
mov
mov
add
rcl
hlt
push
pop
ds
rol
movs
adc
clc
bound
loop
jnp
mov
xchg
sbb
in
xchg
mov
popa
(bad)
mov
or
std
cmp
adc
aad
ja
push
mov
mul
push
cmp
cs
gs
mov
sub
into
jge
jge
in
jbe
sub
push
sub
mov
adc
imul
or
std
jno
repz
jns
stos
dec
fld
and
mov
inc
cmp
jmp
xchg
aaa
inc
imul
ret
mov
neg
retf
in
into
sbb
aas
add
mov
(bad)
dec
imul
mov
out
jmp
icebp
mov
mov
xor
das
mov
pop
shl
shl
push
jle
jmp
cwde
jecxz
dec
xchg
sub
mov
jmp
or
xor
in
sub
cld
stos
xor
test
or
call
push
mov
mov
data16
cmp
or
mov
jno
dec
pop
test
mov
jbe
xor
dec
xchg
xor
inc
push
retf
xchg
xchg
in
pop
ret
xor
sub
or
xchg
imul
sub
and
jp
or
test
xchg
ficomp
(bad)
cmps
xor
pop
push
sbb
call
test
or
or
ret
jns
xor
xor
jp
movs
ret
jg
ja
cmp
test
pop
inc
or
xchg
push
inc
pop
adc
arpl
aad
sub
xchg
dec
cmp
mov
out
dec
lods
adc
mov
mov
mov
push
sbb
mov
or
je
and
ds
mov
add
mov
mov
imul
push
adc
adc
mov
mov
pop
into
pop
pop
xchg
addr16
sub
mov
inc
gs
mov
jnp
and
fstp
xor
icebp
or
mov
sbb
jmp
and
lods
mov
sub
cmp
outs
js
test
cwde
in
hlt
hlt
cmps
xor
out
out
pop
sbb
or
jbe
dec
in
sbb
xor
jecxz
inc
sar
gs
add
cmp
fild
pop
jns
mov
or
inc
push
dec
or
mov
out
and
ins
cmps
js
cmp
jb
jg
xor
jmp
mov
cli
mov
cmp
repz
addr16
sbb
dec
push
shr
(bad)
xlat
inc
js
push
call
push
cmc
push
out
inc
daa
call
cli
add
aaa
pop
and
mov
call
sbb
scas
sbb
cmps
jp
mov
lea
adc
retf
mov
sti
pop
or
fmul
sub
pop
inc
mov
adc
das
inc
dec
jl
sub
outs
dec
mov
in
fldenv
and
adc
sahf
rcl
repnz
in
mov
sub
bound
ja
test
ins
outs
clc
mov
shl
das
dec
sub
sahf
adc
call
gs
into
xchg
call
jb
mov
pop
jne
lds
jecxz
rcr
imul
repnz
mov
mov
jo
or
push
ins
fcmovnbe
daa
push
iret
dec
test
or
xchg
fnstcw
call
xor
adc
inc
jle
aam
lea
adc
mov
mov
mov
xchg
sbb
mov
mov
mov
pop
imul
pop
adc
loopne
xchg
stc
xor
or
xchg
bound
adc
std
popf
and
sbb
data16
inc
iret
push
or
movs
daa
jae
je
test
push
mov
push
add
movs
pushf
inc
push
fstp
add
pushf
xor
sbb
sbb
xchg
in
jmp
adc
fnstenv
imul
repz
pop
inc
out
dec
mov
mov
inc
(bad)
js
and
lock
mov
adc
(bad)
push
push
mov
fnstcw
inc
sub
dec
xchg
clc
mul
scas
add
jns
dec
mov
pop
ja
pop
out
ins
sbb
das
daa
cwde
sbb
xchg
push
arpl
jge
(bad)
pop
stos
push
adc
add
jne
pusha
xlat
push
sub
pop
das
cmps
pop
sub
adc
pop
inc
dec
jp
fnstsw
sbb
idiv
retf
in
inc
adc
pushf
cli
mov
imul
call
xor
pop
xor
aaa
xchg
shl
daa
(bad)
(bad)
or
not
stos
cmp
mov
cmp
mov
mul
xchg
ins
xor
jmp
je
rcl
sub
lahf
or
retf
into
ret
pop
cmp
push
pop
pop
jb
jmp
mov
sub
cmp
dec
div
mov
push
jmp
mov
popa
outs
retf
mov
adc
rcr
in
(bad)
mov
leave
sub
cli
mov
inc
add
icebp
repz
test
inc
xchg
jnp
sbb
jp
add
lea
jle
xor
jmp
push
xor
and
aam
mov
es
pop
push
out
dec
jecxz
jnp
outs
mov
pushf
scas
cs
inc
xor
jmp
rcr
jmp
inc
in
add
jmp
adc
loop
mov
std
movs
push
std
stc
cs
out
mov
call
mov
pop
sub
inc
jmp
and
pop
cmps
jno
imul
leave
sbb
add
jns
pop
add
cmp
inc
push
push
nop
pop
mov
iret
jae
mov
pop
sub
sub
scas
inc
jae
stos
jno
mov
fiadd
dec
fs
fnstenv
ficomp
xchg
vshufps
pminub
out
inc
pop
jl
addr16
test
rcl
fcmovnu
cmc
shl
and
retf
int
retf
cmp
inc
dec
js
dec
jle
sbb
addr16
mov
icebp
out
stos
sub
inc
gs
ins
mov
int
aam
inc
pop
sbb
fist
movs
adc
mov
mov
cmp
icebp
xor
arpl
jo
inc
(bad)
ja
push
jl
xchg
scas
sub
outs
sahf
sub
iret
mov
or
pop
add
arpl
sti
mov
cmp
arpl
push
mov
jmp
jp
mov
inc
ins
loope
das
mov
push
pop
out
test
pop
enter
fs
loope
cmps
mov
push
add
mov
pop
and
push
pop
push
jge
mov
add
lahf
shr
sar
int
pop
das
pop
push
mov
movs
loop
ins
mov
rol
push
push
test
loopne
sbb
and
lods
inc
mov
push
push
popf
xlat
scas
sub
add
aam
call
aam
pop
cmp
imul
ror
(bad)
inc
pop
lea
dec
mov
movs
pop
jns
es
push
mov
jno
ret
div
push
mov
push
inc
push
jle
les
fistp
cwde
and
call
add
mov
or
mov
fs
push
gs
jecxz
cdq
loope
or
je
jnp
sub
neg
sub
dec
cmp
xchg
in
cdq
pop
(bad)
hlt
loopne
mov
loop
push
jecxz
dec
mov
inc
lahf
fld
ja
ror
and
nop
call
dec
add
cmp
sti
(bad)
gs
in
pop
xlat
shl
sub
lock
pop
ds
mov
in
imul
mov
(bad)
sub
lock
ja
pop
or
mov
movs
push
mov
(bad)
jnp
outs
mov
mov
pop
cmp
mov
pop
sbb
push
fucomp
pop
xchg
js
cmps
jb
data16
mov
pop
cli
rcr
xchg
cld
je
cmps
aam
push
movs
inc
mov
rcr
jbe
(bad)
out
ins
cmp
cld
fs
push
adc
std
retf
addr16
ret
sbb
aas
dec
sub
imul
inc
pushf
stos
xchg
mov
cmp
push
movs
dec
jg
adc
jnp
ret
xlat
pop
add
out
mov
daa
mov
mov
mov
cmp
jmp
pop
in
pop
cmp
pop
movs
mov
nop
dec
cld
mov
add
mov
adc
xor
retf
jmp
out
jno
pushf
push
dec
and
sbb
or
jle
je
call
jo
dec
push
inc
rcl
gs
sub
push
fsubr
adc
mov
jmp
(bad)
jmp
or
ror
lds
push
xlat
daa
xchg
popa
xchg
iret
xchg
push
xor
mov
das
jl
or
xor
cmps
and
and
dec
rcl
call
dec
jmp
sbb
and
loop
stos
sub
loopne
mov
inc
les
js
dec
stos
rcr
mov
shl
sub
or
mov
adc
(bad)
mov
or
sub
inc
sbb
sub
jmp
arpl
xor
and
icebp
mov
jg
loopne
test
inc
jmp
jo
push
ss
or
cmp
(bad)
mov
xor
mov
idiv
int3
and
inc
or
mov
mov
xchg
jbe
test
popf
sbb
sub
mov
jno
or
adc
push
pushf
jle
js
pop
(bad)
push
push
pop
lods
gs
push
shr
dec
mov
pop
push
mov
jecxz
in
arpl
xlat
cdq
ficom
or
ins
call
or
mov
mov
jg
cmp
sub
ror
mov
dec
inc
add
xor
retf
and
mov
adc
mov
mov
ins
shl
cmp
and
int
ror
dec
mov
mov
ret
sub
xlat
es
jmp
(bad)
stc
adc
fimul
xor
dec
cwde
or
cmp
scas
movs
mov
scas
push
jns
je
and
inc
div
and
push
ss
mov
cmc
fistp
rcl
fnstcw
sti
fst
or
icebp
mov
add
cmp
inc
mov
cld
cmc
mov
gs
xor
ds
push
(bad)
xchg
dec
mov
retf
(bad)
(bad)
lods
cmp
test
or
jle
jb
dec
jmp
loopne
(bad)
dec
in
sbb
xor
adc
in
sahf
dec
aam
sub
push
retf
repnz
(bad)
(bad)
push
xor
aas
stos
jmp
ds
push
add
jge
adc
fcomp
mov
sbb
enter
in
nop
mov
ss
stc
push
and
sub
mov
lds
inc
retf
xor
lods
mov
adc
mov
clc
inc
jmp
inc
rol
ss
sar
and
add
xchg
mov
add
adc
xchg
mov
in
jle
shl
jmp
loopne
(bad)
or
or
xchg
lahf
in
repz
sbb
daa
add
sbb
(bad)
push
inc
jl
scas
(bad)
cmp
loop
add
mov
push
rol
sbb
ret
je
jle
xchg
xor
les
pop
mov
jle
cmp
push
es
sub
mov
dec
pusha
sbb
xor
cmp
repnz
jnp
jg
clc
jo
xor
jnp
jecxz
ja
stos
fadd
and
aam
push
inc
pop
add
xchg
rcr
inc
shl
inc
xchg
xor
sahf
jbe
sbb
jno
cmp
fst
and
pop
mov
inc
int3
daa
xor
(bad)
repnz
test
aaa
pop
mov
popa
adc
and
test
sti
ret
or
scas
xchg
add
sub
(bad)
repz
test
adc
pop
mov
pop
jb
cmp
sub
xor
jl
adc
sub
mov
test
cmpxchg
arpl
mov
mov
mov
dec
arpl
(bad)
repnz
jle
retf
and
out
push
dec
sti
stc
sub
xor
mov
nop
stc
arpl
repz
outs
out
cmp
or
add
jle
add
(bad)
and
sub
jae
xor
and
dec
add
cmc
js
or
sbb
xor
mov
jmp
outs
inc
inc
sbb
push
mov
sub
or
inc
mov
pop
mov
lea
leave
xchg
ins
fwait
nop
addr16
hlt
jmp
pusha
cmc
ins
jb
mov
cwde
xor
mov
add
push
bnd
out
mov
jp
sub
jmp
daa
mov
mov
fistp
jne
and
or
dec
sbb
xchg
add
pop
and
mov
mov
cmps
xor
and
movs
shl
sub
ins
ja
les
lods
shl
into
and
scas
mov
mov
xlat
std
mov
jl
nop
fcom
pop
ins
cmp
jl
pop
and
mov
cmp
sub
ds
inc
repnz
les
xchg
cli
push
lock
dec
jb
out
test
xlat
xchg
or
mov
jle
jecxz
and
push
in
mov
call
test
shl
inc
lods
out
pop
xor
pop
(bad)
sub
call
mov
jbe
push
dec
ja
inc
(bad)
inc
loopne
xor
mov
lds
xchg
jbe
sub
sti
jg
test
ss
mov
cmp
cdq
sub
ret
inc
sbb
add
(bad)
in
mov
cli
mov
ret
and
loope
push
push
inc
(bad)
mov
(bad)
dec
pop
pop
outs
scas
data16
inc
jge
scas
retf
xor
push
sbb
or
arpl
ret
sub
out
fdiv
scas
mov
xor
retf
inc
xor
mov
cmp
scas
pusha
sbb
adc
and
aad
imul
idiv
ins
xchg
mov
xchg
stos
cmp
scas
ja
mov
test
push
inc
test
or
jle
fadd
sbb
das
jnp
bound
clc
int3
retf
retf
fld
mov
cmp
or
sbb
je
icebp
shl
mov
push
aad
pop
and
in
data16
jns
push
push
shl
gs
jae
pushf
mov
xcrypt-ofb
cmps
stos
sub
(bad)
bound
ret
lea
mov
dec
pop
enter
lods
dec
call
xor
fs
adc
sub
jle
lods
mov
js
jns
push
dec
mov
sbb
inc
fld
add
sub
mov
pop
aam
loop
loop
std
mov
jle
in
out
cmp
cmps
push
sub
ins
or
and
inc
mov
pusha
test
inc
push
push
sub
pop
ins
adc
jecxz
pop
sub
cmp
sbb
add
sub
je
mov
arpl
cld
jnp
jecxz
add
cmp
enter
js
clc
jg
mov
or
pusha
xchg
inc
sub
fst
repnz
inc
inc
adc
(bad)
cs
out
ja
rcl
jae
mov
addr16
iret
scas
enter
popa
cmc
out
std
cmp
cli
inc
cwde
leave
cmp
popa
sub
mov
(bad)
mov
jmp
test
mov
dec
cld
sbb
mov
or
push
cmp
push
mul
je
dec
(bad)
stos
les
mov
mov
or
xor
mov
icebp
pusha
lods
(bad)
xlat
inc
in
mov
out
test
lods
dec
(bad)
xor
bound
clc
sbb
pop
and
cs
sub
sbb
mov
mov
in
inc
ret
pop
out
mov
pop
mov
aam
mov
xchg
cmps
pop
call
test
loopne
lods
das
stos
lock
push
es
std
push
xor
xor
lods
out
ja
jge
(bad)
xchg
outs
dec
jb
fld
sub
je
ror
jae
out
dec
shl
les
mov
pop
xchg
sub
xor
fstp
inc
imul
sbb
jne
test
or
xor
or
dec
mov
mov
stc
ins
in
bnd
sbb
sub
movs
bound
test
lds
add
arpl
mov
mov
sti
hlt
mov
clc
pop
test
add
pop
jne
mov
fwait
jl
shl
or
jno
ss
pop
ror
and
adc
test
mov
movs
mov
inc
loopne
cmp
push
xor
ss
and
sub
int3
add
dec
fcom
cmp
dec
out
test
jmp
gs
push
mov
cmps
aaa
sub
shl
mov
dec
js
scas
retf
pop
fadd
mov
div
in
outs
xchg
in
pop
sbb
scas
push
sbb
(bad)
bnd
not
push
out
inc
and
or
mov
lods
mov
inc
sbb
xor
mov
xor
sbb
mov
push
push
out
add
jecxz
cs
arpl
jmp
lods
mov
(bad)
jp
sahf
sub
stc
data16
data16
mov
mov
lea
out
lods
dec
ins
pop
inc
cmp
xchg
fisubr
dec
xchg
cmp
xchg
imul
div
scas
arpl
int3
push
xchg
int
sub
add
or
pop
sbb
sub
mov
mov
and
jbe
dec
or
mov
sbb
jne
aas
inc
xor
div
dec
cs
pop
pushf
jo
imul
mov
(bad)
fmul
mov
push
and
rcl
test
mov
ins
push
sahf
lods
inc
shr
icebp
mov
call
lods
mov
fild
mov
mov
cmc
pop
inc
add
xor
ret
jno
push
mov
jl
inc
add
xor
push
sbb
cmps
leave
cmc
add
movs
test
lds
jmp
or
jbe
popa
cli
(bad)
hlt
cmps
sub
fs
cs
ficomp
repz
repz
mov
jno
aam
sbb
add
adc
mov
imul
mov
ins
cs
add
mov
add
and
xor
xor
push
pop
inc
mov
pop
push
outs
xchg
dec
aas
outs
lods
push
call
and
cmp
lea
aaa
pop
xor
adc
inc
cmps
dec
lods
cmp
pop
inc
cmp
xor
jae
mov
adc
mov
sbb
(bad)
loopne
or
jle
mov
dec
xchg
push
jl
mov
ins
movs
fdivr
adc
repnz
push
xchg
sub
jb
jecxz
cmp
cmps
push
mov
fs
add
mov
sbb
gs
jnp
fidiv
mov
cdq
mov
frstor
cmp
push
scas
pop
fwait
pop
gs
adc
adc
mov
mov
sbb
dec
and
das
loop
outs
sahf
stos
std
repz
fld
aaa
mov
push
pop
add
jne
shl
fisub
les
mov
scas
lods
inc
into
ja
push
xor
and
adc
loop
dec
gs
xchg
jns
icebp
outs
repz
or
jp
cmc
(bad)
jne
inc
das
fsubr
xchg
shl
das
je
cwde
div
leave
fs
repnz
inc
call
jp
adc
cmp
xchg
pop
jg
popf
push
fldenv
(bad)
jnp
pop
popa
jl
outs
repnz
mov
out
mov
je
mov
push
frstor
in
pop
retf
inc
mov
cld
push
cmp
std
mov
ficom
adc
popa
dec
jae
cld
mov
dec
rcl
pop
or
mov
jge
or
cs
ret
mov
arpl
cmp
dec
pop
and
push
jae
mov
adc
je
cmp
xchg
das
add
sar
jg
aaa
cmp
ja
stc
sub
inc
dec
and
stos
(bad)
jg
mov
cmp
fsubr
in
je
jg
dec
inc
sub
mov
fidivr
sbb
ds
add
lods
push
dec
adc
pop
(bad)
pusha
iret
mov
push
inc
daa
int3
or
inc
loope
jb
ins
pop
xor
add
pusha
fld
ss
out
sub
mov
mov
jmp
xchg
sbb
mov
mov
inc
pop
inc
push
dec
out
mov
inc
mov
push
cmc
into
mov
pop
add
cmp
in
shl
ins
adc
idiv
stos
movs
mov
mov
adc
aad
arpl
sub
cdq
stos
cs
pop
dec
out
int
push
add
in
ret
xor
pop
push
cmps
retf
sbb
scas
stc
ret
mov
loop
bound
push
sub
cmp
mov
out
movs
sahf
aaa
jmp
mov
stc
sub
push
dec
sub
jo
in
lds
aam
add
in
jmp
lock
test
mov
cs
test
dec
ficomp
or
jg
push
inc
push
mov
mov
test
push
ret
push
mov
push
fisubr
and
rol
(bad)
es
mov
xor
(bad)
xchg
shr
dec
dec
pop
rol
xchg
mov
mul
sub
lock
out
push
jne
mov
and
jmp
pop
jns
hlt
add
pop
out
sbb
cmp
dec
mov
push
(bad)
adc
in
(bad)
out
sbb
cmp
pop
es
mov
push
jmp
shl
pop
leave
mov
ja
cwde
mov
xchg
sub
mov
pop
mov
rcr
pop
cmc
dec
fst
or
shl
or
push
in
jp
inc
inc
adc
repnz
in
cmps
dec
or
jo
jno
or
xchg
(bad)
rcl
xor
clc
push
dec
jo
nop
repz
mov
mov
push
ret
(bad)
cmps
(bad)
xchg
cmp
out
or
adc
sbb
pusha
mov
jns
mov
bound
(bad)
sbb
fwait
out
fisubr
xor
jbe
test
bound
add
pop
mov
ins
shr
xor
adc
xor
enter
and
xchg
push
aam
mov
shl
call
fisubr
inc
call
in
add
push
jbe
and
push
mov
add
pop
cmp
push
jb
xor
xor
or
sbb
and
mov
adc
or
ffreep
mov
dec
sti
aad
nop
test
popa
sub
movs
or
ror
push
fmul
mov
push
mov
and
inc
mov
fldcw
push
dec
sbb
jb
retf
jmp
cli
push
scas
mov
add
(bad)
xor
jbe
rcl
scas
mov
inc
push
push
sbb
or
pop
cmp
(bad)
aam
lods
jmp
dec
daa
jb
cld
mov
enter
xor
push
aas
jl
inc
jb
ja
popa
mov
push
outs
adc
mov
inc
addr16
pop
cmp
dec
out
and
push
dec
ret
cdq
jge
cmp
je
and
push
mov
out
clc
in
pop
cmp
in
and
pop
dec
out
or
or
sub
dec
fadd
not
xchg
(bad)
pop
cdq
dec
iret
daa
xchg
adc
cdq
mov
aad
mov
sbb
mov
int3
dec
ss
sti
or
sti
loop
lock
push
xor
ret
and
bnd
cmp
out
fild
(bad)
and
out
ds
pop
out
movnti
out
shl
sbb
retf
dec
or
push
or
sub
mov
pop
out
lahf
mov
out
push
std
movhps
xor
mov
sub
jnp
and
jl
push
test
and
shl
push
cmp
dec
cld
add
aaa
rcl
mov
push
inc
adc
or
cmp
mov
inc
fs
mov
jmp
cmc
pop
lahf
jge
fdivr
sahf
jne
push
inc
adc
pcmpgtw
lods
or
jne
sahf
dec
and
jb
sub
sahf
mov
dec
or
scas
adc
enter
pop
dec
mov
daa
call
fnstsw
jne
iret
cld
mov
je
ficomp
pop
call
and
cmp
js
push
jae
sub
jo
add
rcr
cmovae
test
sub
rcr
sbb
and
xchg
xchg
scas
mov
cmp
shl
jmp
fdecstp
in
pop
push
hlt
aam
push
dec
into
scas
jnp
repnz
jbe
mov
jno
(bad)
out
call
mov
fwait
and
mov
test
mov
or
call
mov
mov
sub
inc
std
mov
ss
popf
leave
cli
icebp
movs
mov
cs
mov
jae
les
mov
addr16
pop
dec
pop
inc
dec
je
in
icebp
sbb
in
inc
sub
xor
dec
ss
dec
out
in
and
jno
push
not
sub
(bad)
popa
xchg
ins
xchg
ds
push
into
call
data16
xchg
jecxz
jnp
test
push
pop
jmp
popf
and
sub
mov
push
outs
jmp
and
scas
mov
or
xchg
fidivr
sub
imul
mov
retf
xchg
add
test
scas
mov
fimul
mov
ret
add
test
xchg
clc
fstp
arpl
xor
jl
push
mov
pop
pop
push
pop
sbb
pop
psubusb
fst
xor
dec
rol
and
or
inc
pop
and
and
inc
jae
icebp
push
xor
push
xchg
scas
das
mov
mov
std
in
sub
sbb
rol
inc
stos
jns
sbb
nop
pop
pop
cmps
add
mov
daa
cmps
inc
dec
sbb
call
pushf
add
jmp
lods
dec
adc
das
cmp
sub
mov
fidiv
aaa
sbb
dec
jns
lahf
sub
loop
xor
inc
xchg
dec
inc
dec
fsub
inc
adc
sub
inc
add
or
or
push
push
add
jg
dec
jb
clc
mov
jl
fcomp
push
stos
pop
ss
iret
ss
mov
pop
scas
and
dec
imul
test
psubsb
inc
je
pop
adc
and
mov
fwait
inc
mov
shr
xor
jae
cmp
jbe
ds
mov
mov
(bad)
(bad)
push
sbb
mov
ret
cld
and
fwait
aaa
in
jo
jbe
sub
addr16
cli
mov
daa
jl
in
mov
ins
fiadd
xor
pop
lahf
pop
shl
movs
inc
pop
xor
inc
adc
pop
inc
jg
pop
dec
xor
sub
pop
mov
mov
shl
adc
fidiv
cmps
xor
cdq
mov
dec
or
mov
xchg
test
addr16
movs
inc
mov
cwde
push
mov
rcl
icebp
aad
jg
xor
std
retf
jns
cld
icebp
std
js
aas
xchg
dec
push
push
lock
xchg
adc
mov
imul
daa
ret
push
or
cmp
inc
arpl
or
ret
cmp
pavgw
idiv
lock
scas
jne
mov
lea
mov
aad
xor
mov
sbb
(bad)
and
stos
mov
mov
inc
mov
mov
popf
push
push
cmp
daa
xchg
in
rcr
in
and
clc
push
test
les
sti
outs
push
jne
pop
ret
mov
jmp
pop
das
mov
aam
inc
xlat
cwde
ins
mov
cmp
pop
cmp
jnp
add
fcomp
sub
jb
push
cmc
inc
push
out
jne
pop
xor
retf
es
sub
or
fdivr
ins
ret
cmp
mov
in
retf
fbstp
icebp
iret
into
in
xchg
xor
ja
test
mov
and
push
jecxz
ret
sbb
(bad)
cld
or
and
les
ja
xchg
mov
jae
or
in
jmp
mov
or
and
xor
nop
call
fnsave
out
push
jp
das
ret
jmp
dec
push
stos
adc
xchg
xlat
sbb
sar
pop
dec
sar
sbb
scas
cwde
lock
int
sub
fbld
adc
je
test
aad
data16
mov
sbb
mov
ja
retf
(bad)
mov
test
sti
sbb
mov
mov
sub
mov
and
xor
pop
pop
es
lahf
sub
das
mov
pop
push
jbe
inc
dec
adc
test
loopne
pop
sub
ins
aaa
hlt
lds
call
cmp
sbb
leave
mov
push
push
popf
sub
xchg
fs
and
pusha
or
fnstcw
cmc
enter
xor
cmp
inc
bnd
sbb
inc
push
and
mov
sbb
push
stos
stos
in
stc
inc
sub
mov
sub
div
repz
or
outs
js
pop
(bad)
bound
div
adc
mov
in
push
push
ins
data16
inc
pop
push
call
les
xchg
dec
mov
fnstsw
fisub
jne
pop
enter
shl
loope
stos
xor
sbb
and
jne
out
add
ins
(bad)
pop
sar
out
imul
inc
mov
movs
and
bound
xchg
loope
mov
into
clc
rcr
(bad)
mov
je
rol
mov
pop
push
and
push
int
add
(bad)
movs
push
fnstenv
xchg
jne
cmp
push
loop
das
mov
or
jae
jp
jle
loope
aam
imul
retw
jcxz
xchg
add
rol
inc
and
cmc
jp
es
mov
xor
aaa
stc
push
pop
es
jle
push
adc
popa
aas
imul
and
jle
cmp
pop
cs
outs
(bad)
leave
cmp
mov
ds
pop
pop
jge
icebp
test
dec
jns
inc
xor
jb
sub
sub
es
add
push
(bad)
ins
pop
aad
add
pop
icebp
mov
push
sub
xor
and
xor
call
lock
jns
fld
xlat
xor
dec
push
xor
dec
sub
inc
scas
add
xchg
xchg
mov
rol
xor
cs
fiadd
inc
leave
push
inc
push
push
scas
dec
retf
xchg
pop
mov
retf
shr
(bad)
cs
push
jle
iret
jmp
lods
mov
sub
mov
out
jns
arpl
mov
xor
jbe
dec
inc
lds
jbe
sar
jle
inc
outs
jae
add
cmc
fidiv
dec
fldenv
sar
ds
call
mov
test
(bad)
imul
(bad)
mov
mov
jp
arpl
jg
int
cmps
cs
jb
sti
inc
adc
sub
cld
or
(bad)
mov
pop
(bad)
cs
push
mov
stos
push
loopne
mov
jle
shr
jns
add
and
mov
cmps
enter
mov
int3
and
xchg
dec
push
mov
mov
mov
fisttp
jmp
enter
leave
pop
pop
dec
adc
mov
push
call
jl
mov
ins
je
push
into
in
fist
mov
test
ins
jmp
pop
mov
into
mov
add
into
or
shufps
and
mov
cmp
call
mov
ds
sub
movs
js
adc
mov
sbb
int3
fst
and
sar
jne
mov
dec
neg
add
test
aas
inc
mov
sub
sub
lods
jg
fist
pop
adc
retf
pop
sub
jecxz
stos
mov
push
xchg
mov
mov
cld
cmp
mov
lahf
hlt
into
stos
mov
or
push
test
pop
fnop
jle
inc
pop
mov
xchg
dec
les
fs
dec
stc
clc
and
mov
jmp
in
dec
(bad)
mov
repz
test
fcmovnbe
xchg
(bad)
push
sbb
mov
stc
rol
dec
cdq
lods
mov
sbb
fadd
cmps
mov
push
jbe
fdiv
ja
cmp
pop
mov
dec
add
and
out
mov
push
nop
sub
add
push
movs
test
sti
pop
xor
ss
push
dec
or
aam
aaa
xchg
dec
inc
cmp
pop
cmp
retf
sbb
mov
xchg
xchg
lods
pusha
sub
mov
popa
inc
addr16
sahf
out
mov
mov
jecxz
retf
mov
mov
fcom
test
fisttp
xor
inc
out
jne
cmp
iret
mov
inc
push
xor
or
and
leave
in
mov
scas
movs
movs
push
adc
in
sar
adc
rol
jbe
jle
imul
pop
scas
mov
push
cmc
mov
retf
mov
rol
add
pop
push
adc
bound
adc
mov
sub
pop
push
call
pop
pop
xor
lock
mov
out
loope
cmp
pusha
mov
dec
or
jp
cld
add
inc
ins
repnz
inc
sub
jne
clc
sbb
shl
mov
adc
or
sbb
push
lods
les
jge
movs
dec
fstp
jmp
pop
sub
push
out
fidiv
(bad)
or
fadd
ins
setbe
fadd
mov
sub
or
out
shr
ja
pop
and
add
jmp
push
fimul
jns
repnz
in
mov
lahf
out
leave
and
pop
xchg
gs
rcl
sub
cdq
push
dec
xor
inc
sti
pop
inc
(bad)
repz
in
jbe
pop
mov
pop
mov
push
scas
sub
adc
outs
sbb
(bad)
push
cmps
ret
mov
inc
outs
aaa
xor
ins
les
ret
retf
adc
push
out
lahf
jae
outs
push
push
ins
jg
ret
push
mov
mov
test
rcl
ss
jg
and
rcr
ss
or
fcomp
and
ins
rcr
xor
sti
and
ja
xchg
cmps
mov
xchg
push
cmps
jmp
sub
cwde
imul
dec
gs
sbb
sub
ins
int
sub
stc
sub
dec
cld
rcl
ins
fistp
mov
add
mov
mov
adc
in
adc
retf
cmc
(bad)
arpl
mov
in
lds
mov
push
jmp
nop
xor
loopne
mov
sbb
xchg
pop
ins
test
mov
inc
adc
sub
pop
cmps
data16
nop
cmp
inc
je
movs
xchg
int3
rcl
fwait
lahf
jecxz
pop
sbb
pop
mov
ins
push
sub
sub
cdq
cmps
daa
pop
mov
xor
imul
pop
scas
ror
adc
push
push
and
jns
lods
dec
mov
test
push
pop
cmp
add
pop
push
mov
and
push
sbb
xor
aad
xor
cmps
shl
shl
ret
sbb
pop
(bad)
out
out
cdq
lods
sub
sub
jo
fs
lea
in
data16
stos
aad
mov
sahf
mov
pop
pop
int
add
fisttp
inc
xor
out
sbb
mov
out
mov
push
xor
or
pop
add
enter
retf
fnstsw
inc
fidiv
fcom
(bad)
cmp
mov
ds
ror
push
stos
in
int3
(bad)
in
jmp
clc
push
add
hlt
mov
push
jp
out
pop
and
inc
push
pop
adc
sub
into
jb
repz
inc
add
bnd
fwait
mov
push
lods
pop
test
jb
pop
stc
adc
jg
(bad)
sub
sar
sbb
ret
fstp
push
pushf
popa
je
enter
xor
or
or
dec
xchg
sbb
dec
cwde
jb
dec
push
push
test
sbb
(bad)
jb
jle
and
pop
pop
pop
inc
aaa
add
push
xchg
cld
rcl
mov
popa
add
pop
cmp
jne
dec
lods
loope
adc
sub
aad
enter
xor
out
cbw
add
jl
inc
and
imul
dec
push
mov
push
push
mov
adc
mov
cmps
shl
(bad)
je
imul
cmp
xchg
(bad)
call
push
sub
call
in
jnp
loopne
mov
mov
call
xor
mul
and
mov
xor
and
popf
jecxz
repz
push
xor
data16
call
xor
and
pop
mov
jnp
sbb
mov
mov
push
mov
arpl
fs
scas
ds
adc
int
xor
jbe
mov
add
inc
pop
cmp
sub
adc
add
mov
loopne
loopne
sub
xchg
jae
imul
in
cmp
test
std
out
or
call
lods
jmp
dec
jl
xchg
ss
cmps
xchg
shl
add
retf
retf
out
test
lds
rol
adc
sub
sbb
in
jge
imul
setg
push
pop
aas
jns
push
and
inc
mov
dec
sahf
jae
xchg
jmp
xor
xchg
cli
vpsllw
hlt
dec
pop
lds
add
hlt
(bad)
in
jb
test
repnz
add
movs
rol
xchg
xchg
pop
je
int3
jecxz
shl
and
jge
fsubrp
and
lds
xchg
sub
enter
scas
inc
pop
and
pop
ret
sbb
out
into
(bad)
jmp
jno
jmp
arpl
shr
push
mov
mov
mov
das
mov
or
les
jae
inc
aam
sbb
pop
stos
push
imul
push
add
stc
cs
ins
push
push
dec
cmp
adc
jp
test
in
xchg
in
out
out
dec
popa
mov
jl
jp
push
daa
lods
out
fsub
das
jne
call
jmp
outs
xchg
jmp
mov
hlt
mov
ror
cmp
into
daa
dec
mov
jo
xchg
xor
pusha
mov
es
int
cmps
cmps
cdq
leave
rol
xchg
fdiv
scas
test
loope
aaa
mov
addr16
adc
push
xchg
out
scas
jmp
and
adc
inc
into
dec
fnstenv
loopne
fbstp
rol
pop
push
cmp
sub
inc
jns
pop
ins
iret
movs
or
add
pusha
(bad)
retf
and
leave
push
shl
adc
stos
fldcw
xor
shl
jno
std
cs
xchg
xor
lods
into
ins
test
fiadd
sahf
ins
mov
aas
shr
retf
cmp
iret
(bad)
popa
ret
les
es
xor
retf
(bad)
mov
mov
fisub
pop
scas
inc
std
and
sub
mov
and
sub
cmp
adc
shld
aam
add
jbe
hlt
push
jo
imul
mov
test
daa
retf
jge
xor
cmp
xchg
cmp
jnp
jns
ficom
inc
jb
push
arpl
xchg
inc
rcr
push
and
cli
sbb
pop
xchg
arpl
xchg
(bad)
sbb
jg
xchg
jmp
jno
jo
or
sbb
pop
outs
nop
cli
(bad)
adc
pop
sti
cli
call
leave
dec
daa
push
push
test
in
fldenv
sub
sahf
or
sub
imul
jns
cwde
add
div
push
int3
jmp
or
into
js
fdivp
repz
ret
push
je
nop
or
cmp
gs
shl
retf
daa
lods
mov
leave
gs
jmp
mov
jne
jb
sub
mov
(bad)
in
clc
push
add
stc
dec
idiv
mov
and
mov
dec
jp
pusha
stos
lods
mov
lods
popf
pop
sub
inc
cmc
sbb
push
js
push
fcomp
scas
repnz
jmp
xor
dec
ret
std
xor
push
mov
sub
jmp
sbb
ret
mov
dec
inc
rcr
cmp
jnp
push
call
mov
pop
imul
movs
ins
mov
xchg
sbb
or
sub
frstor
lock
jmp
sti
inc
or
daa
inc
in
dec
dec
frstor
adc
(bad)
jecxz
movs
cdq
jp
mov
jae
push
pop
push
xchg
jle
addr16
jae
dec
aam
ins
int3
mov
push
add
sbb
jecxz
cmp
inc
cwde
int
mov
add
dec
retf
cmp
cs
sbb
sub
jl
ret
pop
dec
or
loopne
sub
jge
retf
sub
push
sbb
inc
push
loopne
xchg
push
call
push
jno
lods
test
mov
jge
inc
mov
lahf
cmp
es
cmps
dec
dec
test
jne
mov
ret
imul
int3
retf
fiadd
pop
jbe
and
int3
cwde
neg
sub
in
inc
fisub
out
cwde
mov
mov
sar
and
pop
hlt
enter
and
pop
sbb
hlt
loop
xchg
jnp
inc
mov
add
jl
(bad)
mov
jle
pop
dec
sbb
js
lea
jns
shl
mov
lea
sbb
fist
int3
jmp
or
aad
shl
mov
add
lea
push
fdiv
or
leave
outs
xor
and
rol
adc
sbb
(bad)
je
xchg
in
daa
xchg
adc
jb
mov
push
int
jl
mov
popa
or
dec
lock
dec
xchg
inc
(bad)
hlt
mov
jle
sbb
les
dec
xor
jp
pop
inc
loope
adc
add
jge
sbb
mov
jmp
js
fucomip
pushf
fcomp
test
nop
(bad)
pop
fcmovnbe
stos
cld
into
fimul
inc
popf
out
ja
jns
popa
xor
push
call
ret
mov
xor
xchg
add
out
mov
mov
xchg
xchg
test
(bad)
loopne
pop
int3
mov
cmp
add
or
sub
and
jmp
sub
mov
jmp
jl
jle
cwde
or
aas
push
out
inc
das
mov
loop
push
adc
sub
je
dec
pop
or
push
popa
test
jmp
in
dec
mov
cdq
retf
sub
in
mov
and
ja
sbb
ret
inc
cli
pop
call
in
jmp
fmul
xchg
jno
push
(bad)
retf
sahf
add
mov
push
mov
movs
add
ins
sub
in
sbb
std
adc
scas
jge
jmp
jb
iret
test
das
ds
cmp
mov
pusha
aaa
jg
dec
xlat
cmp
xor
retf
into
shl
dec
cmp
xchg
and
fist
mov
jbe
nop
add
(bad)
xor
(bad)
cs
ins
jle
cli
and
loopne
cdq
cwde
sar
push
sub
sub
pop
ret
cmp
ret
pop
mov
xlat
pop
sub
jne
lock
cmp
cs
or
jecxz
popf
dec
pop
or
pop
into
call
sar
stc
repz
shl
mov
loope
and
push
icebp
cmp
mov
add
leave
sub
or
xlat
push
cmps
sub
sar
lods
xchg
and
test
shl
out
dec
cmp
stc
pop
sbb
hlt
mov
je
cmp
jbe
mov
or
mov
mov
push
mov
in
lods
sub
inc
xor
add
sbb
in
sub
sub
scas
xchg
shl
lods
data16
retf
jmp
and
push
and
bound
jmp
ficom
ficomp
nop
icebp
aas
push
jmp
imul
retf
ja
add
pop
ret
or
fwait
cld
pop
mov
je
pop
mov
popf
fild
test
leave
stos
retf
arpl
xchg
loope
popf
push
push
mov
sahf
fidiv
adc
inc
shl
test
mov
inc
mov
cmp
inc
(bad)
lods
pop
jne
xor
lahf
mov
pop
aas
adc
xor
jno
outs
adc
push
push
mov
cmc
les
adc
cwde
jmp
xor
mov
sbb
sub
fadd
out
jg
daa
cmp
cli
jns
repnz
ds
stos
repnz
add
retf
scas
add
outs
lock
cli
mov
cdq
push
push
inc
sub
add
mov
cmp
mov
jle
mov
(bad)
mov
cmp
mov
cld
mov
push
cld
mov
mov
mov
inc
call
and
xor
and
fcomp
les
stc
mov
repnz
loop
inc
jp
push
aaa
daa
mov
aad
lea
inc
mov
mov
push
mov
leave
popa
aad
inc
add
add
sub
pushf
and
dec
and
dec
pop
or
cld
movs
(bad)
test
fwait
dec
aas
mov
es
xor
js
rcr
imul
call
pop
neg
stc
lods
les
(bad)
(bad)
adc
and
dec
into
fldcw
(bad)
daa
jmp
pusha
pop
pop
fld
xor
jecxz
outs
and
in
push
mov
scas
hlt
out
push
dec
ror
adc
pop
hlt
test
imul
xlat
mov
xor
daa
imul
daa
and
imul
div
inc
fldenv
cmp
mov
add
sub
fild
jne
stc
adc
fbstp
adc
(bad)
jne
stc
cs
(bad)
loopne
jmp
jle
in
mov
jmp
cdq
xchg
jae
and
and
out
jle
sbb
sub
in
jle
daa
out
jbe
repnz
push
sub
xchg
mov
in
loop
jg
hlt
cdq
inc
mov
fstp
jmp
loopne
dec
lods
and
icebp
movs
push
(bad)
sub
call
or
imul
popf
sub
(bad)
stc
enter
sub
sbb
arpl
or
loop
jp
ror
js
out
mov
push
dec
adc
push
cmp
jmp
sub
in
sub
pop
push
mov
sub
dec
sub
mov
popa
popa
xchg
test
(bad)
test
mov
jle
pop
stos
ficomp
mov
pop
imul
adc
ret
mov
push
je
mov
or
xchg
(bad)
les
xchg
loope
xchg
addr16
fild
adc
cmc
jle
ins
adc
xchg
push
mov
mov
mov
or
xchg
in
dec
jp
mov
and
or
and
adc
retf
outs
add
mov
in
sbb
imul
ins
icebp
adc
push
addr16
jg
mov
add
sub
xor
push
jecxz
pop
inc
fstp
daa
cmps
mov
into
cs
ds
ror
mov
xchg
mov
dec
ins
inc
dec
ss
xchg
inc
and
xchg
push
sub
jbe
add
scas
jns
xor
ror
cmp
mov
sub
sub
xor
xor
push
test
mov
in
xchg
adc
and
out
and
mov
fsubr
addr16
imul
les
repnz
xchg
sbb
xor
idiv
cmps
add
or
repz
cmp
push
push
les
jle
scas
movs
sub
(bad)
std
in
gs
rcl
outs
jg
arpl
repnz
cmps
cld
mov
aam
adc
in
sub
xor
mov
and
pusha
imul
mov
ja
push
mov
cs
adc
fiadd
adc
movs
out
and
jg
test
jmp
jle
xchg
mov
push
or
ss
std
and
mov
or
jnp
push
mov
push
cli
jmp
jns
ja
stos
jno
push
int
jecxz
xor
adc
fbstp
mov
mov
into
push
cmp
jbe
adc
sbb
xchg
or
loop
data16
jmp
out
mov
mov
mov
jmp
outs
or
(bad)
mov
sahf
scas
sub
scas
mov
stos
sub
shl
repnz
fsubr
(bad)
push
mov
add
xchg
dec
mov
mov
mov
push
(bad)
icebp
and
in
in
addr16
and
jb
stos
sbb
js
mov
and
inc
and
xchg
and
inc
sbb
or
daa
push
imul
out
jno
adc
daa
mov
jmp
xchg
mov
fwait
push
jl
jo
mov
dec
pop
stos
or
ja
jl
mov
mov
scas
ja
or
(bad)
jno
stos
hlt
or
cs
or
xchg
outs
in
mov
out
add
int
daa
push
mov
retf
xor
cli
xchg
dec
fistp
inc
test
rcl
sbb
xchg
jl
inc
push
inc
js
mov
ss
sbb
ret
xchg
jmp
ins
lahf
pop
add
pop
fstp
(bad)
repnz
push
and
add
imul
rcr
dec
jmp
mov
jbe
ror
jle
aad
mov
scas
add
stos
out
xor
ret
mov
pop
mov
pop
sbb
retf
cmp
ds
ja
stos
outs
cmp
push
xor
jmp
js
retf
xor
dec
or
push
int
cmp
sbb
and
imul
mov
cmp
fwait
mov
xchg
aas
push
retf
jecxz
ins
lea
pop
push
cmp
inc
inc
inc
mov
sar
sub
arpl
xor
sbb
push
jg
mov
add
repnz
jecxz
ss
jecxz
jmp
push
xlat
js
xor
xor
jg
jno
cli
jg
push
sub
jbe
add
sub
mov
test
inc
arpl
lods
jb
sub
or
das
ror
repz
push
pop
jae
and
sbb
jle
mov
in
jae
inc
xchg
out
ret
cmp
sbb
sub
or
imul
test
mov
mov
add
sub
(bad)
rcl
inc
cmps
dec
inc
les
loopne
es
loope
es
pop
js
aas
loop
sbb
pop
sti
sub
ja
or
and
daa
mov
xor
(bad)
adc
out
loope
ror
ret
jg
sub
mov
jb
add
adc
in
imul
jp
js
imul
sub
pop
sub
lods
add
mov
test
int3
int3
or
addr16
gs
movs
popf
bound
ins
jno
mov
mov
push
mul
add
aaa
loope
sub
test
stos
leave
fdivr
mov
scas
mov
adc
not
cmp
retf
and
cld
mov
jo
retf
adc
movs
mov
xchg
inc
retf
jne
test
push
inc
fild
pushf
loopne
scas
mov
(bad)
mov
call
cld
movs
enter
lods
jmp
test
mov
popa
add
rcr
adc
movs
in
fnstsw
xchg
ss
outs
test
dec
jle
pop
push
lea
jo
daa
test
(bad)
mov
fucomp
out
sti
adc
je
sub
repnz
aaa
outs
jne
out
mov
xor
pop
pop
mov
movs
pop
dec
mov
pop
pop
jb
lahf
loop
mov
fidiv
jne
mov
or
jecxz
and
outs
in
scas
shl
push
add
mov
(bad)
mov
sbb
pop
and
add
dec
fsubr
in
inc
and
dec
xchg
jo
inc
and
cs
not
jno
ins
push
outs
xor
push
adc
into
daa
lods
pop
mov
pop
lahf
lods
mov
jl
dec
jmp
les
xlat
ror
ja
shl
cwde
or
pushf
mov
dec
cwde
jno
fistp
add
cs
mov
push
jae
inc
repnz
jl
out
inc
(bad)
jle
stos
push
out
int3
cmp
mov
shl
cmp
sbb
mov
(bad)
jne
outs
in
pop
js
add
sbb
dec
sbb
das
js
stc
jmp
loop
xor
xor
outs
ss
jmp
xor
test
ror
xchg
dec
ret
and
(bad)
iret
cld
mov
xlat
imul
cmp
in
imul
push
daa
adc
push
test
leave
pop
sbb
pop
xchg
add
fiadd
xchg
add
cwde
pop
xor
ins
xabort
shl
lahf
pop
test
mov
scas
add
mov
jle
sub
dec
cdq
hlt
add
push
xchg
lds
adc
test
add
retf
stos
aad
data16
mov
add
imul
jmp
xchg
cmp
mov
jns
jge
add
adc
pop
loopne
xlat
jmp
jnp
xor
mov
lods
fs
in
adc
xor
jg
mov
inc
jbe
mov
xchg
cdq
ds
push
adc
push
cli
push
ret
aaa
into
lods
scas
lods
add
and
cmp
and
dec
nop
into
out
pop
xlat
mov
fsubr
inc
call
arpl
cmp
xor
adc
daa
mov
push
arpl
jmp
bound
and
jmp
into
dec
cwde
ja
cwde
les
jno
popa
nop
jge
jb
inc
pop
add
hlt
int3
(bad)
cwde
fsub
pop
not
jo
xor
inc
or
nop
into
clc
jl
push
jle
cmp
mov
push
add
mov
pop
cmp
stc
xchg
aaa
icebp
push
mov
scas
mov
dec
or
ficom
jp
(bad)
jo
and
bnd
je
movs
ret
leave
retf
(bad)
imul
inc
xchg
pop
out
gs
daa
push
xor
xor
cwde
(bad)
xlat
fcomp
out
jge
ins
adc
dec
inc
xchg
(bad)
out
push
loop
mov
scas
mov
inc
in
push
aad
jg
mov
imul
shr
dec
cmp
jmp
pop
int
add
mov
cmp
cld
das
xor
popa
and
xchg
ficomp
dec
outs
cdq
or
daa
int
push
aad
pusha
jns
ds
inc
dec
jmp
jle
loop
xchg
fcmovne
sahf
cdq
repnz
data16
push
mov
test
jmp
xchg
dec
test
sub
mov
xor
dec
cs
mov
sub
add
or
dec
push
pop
jae
add
sbb
out
mov
mov
scas
pop
enter
adc
popa
push
fs
imul
cli
test
int3
and
shl
and
dec
push
not
and
jns
sub
(bad)
xlat
rcl
and
xchg
dec
xchg
add
pop
cmp
das
pop
sub
jp
mov
scas
inc
iret
test
pop
scas
inc
dec
sub
jae
(bad)
cmps
movs
xlat
ds
sti
aas
pop
mul
dec
(bad)
mov
mov
and
sar
inc
xor
js
and
or
sbb
pop
cmp
ror
fistp
push
push
int
aad
(bad)
xor
inc
xchg
cmp
das
aad
push
push
xchg
inc
daa
in
out
lea
mov
call
ja
out
jmp
test
ja
jp
jb
je
cmp
mov
pop
aaa
adc
pop
and
call
jle
aaa
sbb
sub
sbb
pop
js
out
dec
mov
dec
adc
cmp
mov
fnstenv
data16
add
test
sub
add
mov
or
loopne
xor
xor
jmp
in
loope
out
popa
inc
out
inc
cmp
and
fcom
imul
test
jle
popa
outs
or
sub
in
push
ins
inc
ret
add
aas
cmp
imul
ins
std
ja
mov
cmps
xor
push
fsub
inc
jle
lods
int3
sbb
sahf
jbe
push
dec
retf
adc
popa
jne
leave
mov
push
stc
fmul
cs
mov
add
inc
dec
mov
rep
xchg
dec
gs
cs
in
mov
inc
add
rcl
ret
jae
imul
jmp
pop
cmp
daa
aaa
stos
dec
add
adc
xlat
add
imul
pop
cld
ja
xchg
push
ja
or
xchg
jnp
stc
xlat
sbb
aaa
pop
iret
lods
icebp
inc
pusha
sbb
add
cmp
in
cmp
dec
out
aad
mov
std
loope
in
jb
mov
int
cmp
jge
dec
mov
jae
mov
inc
mov
xor
stos
fisttp
cmp
jmp
push
out
sub
hlt
aam
int
inc
mov
push
jle
std
mul
in
mov
ja
inc
pusha
stc
pusha
or
sbb
push
(bad)
xchg
cmp
mov
mov
push
js
bound
push
test
popf
inc
arpl
aad
dec
outs
sub
pusha
scas
hlt
adc
(bad)
in
pop
jo
dec
inc
inc
xor
xchg
hlt
ret
loopne
repnz
push
cmp
ss
mov
adc
adc
arpl
dec
mov
(bad)
adc
or
sbb
ins
xlat
test
fwait
call
push
mov
xchg
jg
and
cmp
push
push
xchg
mov
ror
ins
inc
xchg
jg
xor
jecxz
bound
mov
(bad)
xor
aaa
cmp
aad
into
out
in
jle
jg
outs
cmp
ss
std
pop
addr16
adc
jmp
and
jae
imul
cmps
dec
div
sub
xor
push
pushf
inc
mov
out
ret
neg
inc
in
ror
jge
jge
mov
push
sar
xchg
mov
jl
jb
fsubr
push
mov
call
icebp
push
in
cmp
sbb
or
adc
imul
iret
jbe
mov
lods
imul
sbb
dec
push
aaa
inc
dec
jmp
and
lds
pop
inc
xor
inc
cld
adc
leave
and
(bad)
ds
mov
mov
sub
jno
stc
dec
push
and
mov
inc
dec
mov
dec
xchg
sar
dec
es
or
(bad)
mov
push
mov
dec
and
add
and
xchg
mov
push
mov
repz
nop
add
mov
push
adc
outs
sbb
ja
hlt
push
sahf
aam
adc
call
sbb
neg
jae
imul
and
adc
pop
pop
mov
mov
lds
and
aam
pushw
cmp
mov
jo
or
sbb
xchg
adc
or
mov
add
sub
jmp
adc
lea
dec
cmp
cmp
mov
jg
push
pop
popa
daa
mov
ds
(bad)
pop
inc
or
xor
mov
ret
dec
aad
xor
ds
sub
inc
enter
cli
cmp
sbb
call
inc
add
jne
in
clc
ins
mov
add
adc
retf
sub
cld
add
xor
out
and
leave
ret
push
xor
dec
scas
repnz
xor
sbb
sub
out
(bad)
mov
sub
dec
nop
cmp
cmp
mov
arpl
movs
cld
mov
xor
jae
gs
dec
das
adc
cmc
push
cmp
jo
pop
jmp
add
(bad)
pop
cmp
shl
rol
imul
inc
shl
sub
mov
fisttp
inc
mov
outs
push
mov
ds
loope
idiv
mov
mov
arpl
xor
jle
and
inc
shl
sub
sti
lea
outs
daa
push
xlat
(bad)
lock
dec
cli
and
mov
aaa
ins
push
aam
mov
mov
cmp
cmps
shr
xor
push
add
lods
in
add
xchg
jb
fld
add
mov
sub
cli
push
push
or
mov
cs
jp
mov
dec
or
push
xchg
adc
mov
or
sub
push
inc
out
dec
jmp
ret
mov
iret
add
or
xor
pop
and
imul
inc
(bad)
lods
psraw
cs
xchg
mov
mov
jbe
ins
push
sar
repz
mov
popf
das
sub
mov
adc
cmps
cs
ror
and
shl
(bad)
jg
test
mov
xor
mov
cmp
mov
adc
pop
inc
js
dec
or
sub
popf
gs
rol
inc
push
xchg
inc
inc
cmp
sbb
mov
jmp
mov
pusha
fwait
push
xchg
shl
jb
mov
sar
jmp
je
enter
or
js
adc
mov
xchg
rol
and
xchg
inc
cmp
xchg
xchg
xchg
mov
jge
int
imul
shl
(bad)
xor
fwait
sti
or
jne
fisttp
ss
mov
mov
push
lea
cmp
mov
dec
movs
out
popa
dec
aam
cmp
xchg
dec
jl
push
xor
and
iret
xchg
rcl
mov
add
sbb
mov
call
leave
les
xlat
push
dec
mov
pop
adc
or
jmp
mov
or
pop
test
dec
enter
sbb
and
cmp
(bad)
xchg
or
xor
push
sbb
inc
pop
es
pushf
psubq
pop
mov
pop
loopne
scas
jne
xlat
addr16
jp
ds
cmp
(bad)
sub
es
and
inc
arpl
xor
imul
xor
test
mov
ror
stc
movs
ja
outs
dec
mov
sub
pop
add
lock
call
mov
xor
popf
xor
mov
dec
pusha
scas
bound
shr
rcl
cmp
daa
sub
pop
sbb
loop
mov
cli
leave
les
cmp
jge
bound
adc
shl
int
icebp
mov
pop
xor
jle
fisttp
repz
inc
ss
popa
jg
sub
inc
pop
ror
sub
data16
out
fwait
out
cwde
leave
push
(bad)
sbb
inc
mov
cli
(bad)
aad
fucomip
(bad)
xor
jbe
ret
stos
xor
in
pop
lods
mov
pop
outs
mov
jmp
gs
add
mov
cmc
add
push
push
shl
inc
stos
stos
mov
pop
repnz
mov
call
(bad)
(bad)
mov
mov
mov
push
push
and
fldenv
mov
pop
loop
push
sbb
mov
cmp
jp
dec
adc
mov
jmp
jg
mov
out
js
jmp
push
je
cwde
inc
(bad)
push
movs
mov
jo
inc
jge
push
gs
jp
js
lea
outs
xchg
aad
xchg
fstp
xor
dec
mov
push
push
push
sub
sbb
mov
aad
mov
and
push
mov
icebp
or
jle
ror
dec
add
jbe
ret
jbe
int
inc
daa
push
std
bound
inc
ds
out
jbe
jmp
and
jb
push
xor
fimul
add
aas
pop
mov
out
xchg
pop
inc
push
xlat
adc
arpl
div
mov
mov
jo
or
das
mov
shl
mov
ins
das
mov
push
mov
jmp
xchg
fisub
add
aas
mov
pop
repnz
add
cmp
call
mov
popa
lock
aas
push
(bad)
rcl
cmp
clc
(bad)
or
lods
ds
mov
jno
out
mov
inc
(bad)
lods
mov
push
sbb
sahf
jle
imul
push
sbb
mov
into
jno
or
xor
add
dec
jbe
lahf
cld
je
stc
repz
(bad)
dec
das
es
adc
dec
mov
push
xlat
cmc
inc
ins
stos
push
push
call
cmp
addr16
outs
cli
jnp
inc
stos
imul
and
adc
gs
push
loope
adc
xchg
mov
jmp
out
fdivr
cmp
sbb
jcxz
fisttp
fstp
mov
jbe
lds
ror
mov
dec
inc
sbb
adc
arpl
outs
and
(bad)
fild
sbb
repz
les
fwait
addr16
adc
adc
xchg
pop
mov
push
cmc
in
cmps
lock
scas
mov
(bad)
jge
lods
aam
dec
add
pop
mov
fs
hlt
shrd
cmc
jmpw
shr
push
push
mov
cmp
inc
mov
repz
cli
pop
in
out
stc
imul
push
mov
dec
shl
adc
xchg
and
mov
repz
push
xor
ds
shl
adc
cmp
jg
sub
sub
lea
jmp
shl
xchg
fld
jl
push
nop
out
pushf
dec
pop
add
loopne
pop
aam
out
stos
xchg
(bad)
stc
sub
mov
je
jecxz
dec
fcmovnb
mov
jne
iret
mov
in
mov
stc
test
imul
lock
icebp
sbb
jge
adc
jo
xchg
enter
jno
test
xlat
movs
inc
push
mov
repz
push
adc
gs
sub
ror
test
xchg
cmps
jmp
mov
adc
dec
sbb
mov
jp
push
stos
fmul
and
dec
ret
aam
int
push
cmp
add
(bad)
mov
dec
xor
mov
mov
out
mov
out
mov
leave
fs
lods
sahf
cli
das
dec
imul
cmp
je
xor
pop
jg
dec
jle
mov
inc
ins
xchg
and
(bad)
push
enter
(bad)
jmp
add
xor
dec
inc
scas
mov
cs
mov
out
sub
xor
pop
loope
retf
add
dec
(bad)
xor
sub
add
push
repz
outs
pop
xor
push
jbe
aad
shl
fcom
sub
jmp
xor
pop
xchg
or
out
jecxz
stos
push
push
and
ret
mov
je
pop
sub
xor
mov
add
out
and
aaa
mov
sbb
cmp
xor
fs
mov
iret
lds
mov
mov
arpl
retf
cmp
cmp
mov
clc
test
push
mov
shr
icebp
jle
mov
pop
jg
push
in
mov
rol
ins
adc
inc
daa
in
fwait
rol
out
retf
(bad)
iret
mov
loopne
push
xchg
dec
inc
inc
es
enter
sahf
xchg
(bad)
pop
sar
int3
popa
lods
gs
leave
retf
jns
xchg
fld
mov
mov
cmps
adc
and
sub
(bad)
jmp
imul
iret
jae
mov
dec
sbb
inc
jns
cli
in
or
mov
pusha
lods
inc
pop
repz
ss
adc
data16
sar
cmp
xchg
pop
dec
aam
aad
adc
(bad)
not
inc
daa
xor
xor
xor
push
dec
or
adc
dec
mov
pop
fild
repz
call
ror
in
and
not
jmp
pop
cmp
test
imul
add
daa
jmp
and
scas
icebp
mov
pushf
pop
icebp
mov
cmp
scas
sub
mov
clc
cmp
inc
cmp
mov
sbb
int3
mov
inc
in
dec
aaa
fild
mov
push
fdivr
sub
ret
les
dec
and
movs
cli
adc
out
lock
and
popf
cmp
sub
pop
aas
fnsave
(bad)
sbb
arpl
jp
mov
and
dec
shl
add
scas
cmp
sbb
lods
cli
mov
test
sub
or
gs
dec
pop
pusha
in
lds
adc
test
(bad)
jne
adc
adc
repz
test
push
movs
in
push
cmps
jmp
cmc
pop
add
inc
aaa
mov
fsub
pop
adc
push
movs
mov
pop
test
mov
test
xor
or
cdq
icebp
mov
rcl
dec
mov
inc
sub
mov
pop
xor
inc
aad
mov
xor
rcr
xchg
mov
push
pushf
ret
inc
mov
sub
retf
sub
xchg
cli
cmp
out
stc
pop
dec
es
push
inc
adc
adc
pop
ror
sub
sbb
dec
fs
cmp
fbstp
stos
div
inc
clc
ficom
jge
lock
cmps
push
xchg
jge
push
inc
aaa
push
xchg
cmp
ss
ja
cmp
popf
stos
shl
imul
fst
dec
aaa
idiv
pop
mov
bound
pop
jne
call
xchg
pop
test
jo
inc
lods
push
movs
push
mov
jns
dec
pop
les
ret
xchg
pop
sub
cmp
mov
aam
cdq
and
mov
loope
sub
sahf
mov
fmul
mov
mov
(bad)
into
adc
data16
xlat
push
jnp
aas
clc
dec
(bad)
popa
inc
sub
xchg
cmp
pop
adc
les
dec
cli
xor
xchg
mov
dec
pop
push
bound
push
or
repz
inc
in
inc
lods
push
loopne
lock
xor
mov
push
pop
sbb
jg
xchg
inc
inc
xchg
pop
cmp
ficom
iret
push
data16
js
ins
mov
mov
repnz
dec
das
add
xor
je
div
push
push
mov
sbb
aas
dec
sbb
fwait
ss
xor
cmp
and
sub
xchg
mul
mov
fld
xchg
mov
sub
shl
xor
sub
mov
mov
ret
call
xor
jb
pop
inc
xor
inc
addr16
cmp
jnp
jg
inc
cmp
cmp
xor
pushf
out
outs
add
mov
mov
lods
cdq
ss
and
mov
xchg
or
add
dec
adc
pop
sbb
mov
adc
sub
shl
movs
jmp
cli
fld
movs
dec
add
dec
fild
daa
dec
shr
call
jp
pop
fnstenv
sar
imul
jmp
jp
push
test
outs
mov
fmul
cmps
loop
mov
test
lds
shl
stos
stos
jp
loopne
adc
adc
cmp
mov
test
lods
dec
movs
or
mov
jns
mov
mov
cdq
mov
jle
aad
stc
mov
push
out
inc
test
scas
or
out
pop
jp
daa
sbb
lea
jbe
pop
pop
lock
rcr
mov
pop
sar
pop
push
imul
call
fwait
outs
vxorpd
push
adc
sbb
jmp
mov
and
dec
sub
or
repz
lahf
sub
jbe
je
enter
mov
imul
cmp
mov
mov
add
adc
test
jnp
add
and
popf
out
adc
outs
cmp
loope
lods
mov
(bad)
outs
leave
pushf
xor
hlt
(bad)
ins
dec
pop
dec
lock
add
cmp
pusha
and
jmp
inc
je
sbb
(bad)
jg
sbb
xchg
inc
cmp
xor
xchg
mov
push
dec
aas
mov
cmp
sbb
mov
sbb
mov
mov
out
cmp
fiadd
daa
inc
mul
scas
push
cmp
fst
pop
pop
imul
movs
sbb
bound
sti
xor
mov
stos
jae
std
call
leave
js
fdiv
lea
push
popf
int
gs
sub
mov
jmp
pop
test
sbb
inc
not
cmc
scas
dec
or
mov
hlt
dec
push
inc
sbb
shl
pop
ror
push
mov
ins
mov
outs
mov
inc
adc
in
fadd
jge
jmp
jmp
imul
cdq
xchg
sub
pop
ret
dec
add
cmp
cmp
mov
cli
dec
leave
out
shr
mov
js
cmc
in
pop
mov
shr
and
push
inc
push
add
cmp
jns
ss
sbb
sbb
push
and
mov
ret
xchg
jae
ins
lds
ficom
jp
xor
xchg
lods
rol
lahf
mov
add
cli
add
popa
gs
adc
or
into
xor
not
outs
mov
jmp
pop
sbb
pop
repnz
das
int
sbb
lds
pop
pop
push
and
sub
gs
loope
pop
iret
push
push
add
popa
in
and
aam
adc
mov
xchg
push
sbb
jb
mov
cmp
sub
lea
sub
pop
cmp
push
mov
jns
and
xor
cld
or
push
sbb
pop
cmp
add
jno
pop
adc
and
and
fisttp
call
sar
movs
mov
repz
add
dec
cmp
or
push
sub
test
fiadd
or
mov
imul
pop
lea
add
and
fisttp
imul
add
ja
lea
xchg
cmps
cmp
xchg
jle
sub
adc
mov
add
mov
cli
mov
int3
js
ja
xchg
push
mov
mov
xor
xchg
arpl
sbb
inc
out
adc
clc
pop
push
popa
xchg
cld
les
jne
popa
stos
jmp
mov
movs
cmp
xchg
jb
inc
arpl
xchg
jecxz
sub
or
fst
stos
call
sub
adc
fnsave
add
xchg
mov
dec
in
push
arpl
pop
mov
call
jns
das
pop
into
inc
out
adc
mov
jg
dec
js
aam
push
or
jl
fisttp
addr16
repz
cmp
ficomp
inc
ss
xchg
cmp
push
loop
mov
inc
xchg
ins
aam
add
jnp
inc
xor
or
jno
imul
nop
mov
push
ds
std
jle
xchg
(bad)
mov
in
inc
cmc
imul
ds
nop
sub
ss
rcr
push
and
ins
clc
std
add
or
ja
pop
add
stos
cs
sbb
xchg
les
inc
ja
(bad)
icebp
inc
jbe
pushf
adc
cmp
imul
mov
sub
mov
cmp
ds
shl
xor
mov
rcl
jmp
js
xor
stc
ins
aam
push
xor
int
outs
mov
arpl
lea
test
cmp
aaa
cmp
inc
mov
mov
lea
mov
sbb
mov
addr16
sub
fidivr
pop
push
push
lods
xchg
shl
xchg
sbb
jl
mov
test
mov
ins
stos
adc
jg
dec
or
dec
and
or
in
mov
mov
sub
xchg
aad
sti
pop
jnp
sub
ins
aas
push
sbb
fwait
push
mov
test
ins
or
cmp
pop
mov
push
inc
dec
push
aaa
fldcw
clc
loopne
push
or
(bad)
popf
inc
shl
gs
xor
push
xchg
dec
lea
sbb
jns
shr
fcmovne
js
cmp
pop
sub
push
adc
sbb
mov
or
lods
xchg
push
jge
push
jecxz
pop
pop
xchg
adc
cwde
inc
push
dec
add
pushf
pop
sti
jecxz
cld
xchg
mov
ins
imul
or
test
js
xor
dec
xchg
mov
icebp
dec
data16
and
adc
inc
mov
js
leave
sub
in
pop
(bad)
adc
xchg
mov
je
and
cdq
add
and
or
movs
(bad)
sub
ss
fiadd
lods
inc
mov
(bad)
cwde
dec
loope
push
lock
shl
hlt
dec
out
fidiv
jmp
sub
loop
sub
mov
xchg
gs
inc
inc
fnstenv
leave
xchg
lock
sub
mov
push
xor
push
dec
addr16
mov
stc
or
pop
enter
xchg
mov
imul
push
pop
add
adc
iret
inc
mov
xor
in
cmp
rcr
pop
jmp
mov
inc
fadd
and
cmp
sub
xchg
addr16
jmp
aaa
popf
xchg
inc
in
mov
idiv
and
outs
jnp
fidiv
lods
sbb
add
mov
push
jb
push
sbb
popf
(bad)
bound
adc
xchg
jb
out
jmp
enter
jle
push
(bad)
shl
jle
imul
mov
push
pop
xor
mov
ret
add
push
jne
clc
inc
mov
adc
sbb
add
jne
ficomp
movs
jecxz
sub
jmp
mov
sub
cmps
or
adc
out
xlat
mov
leave
jp
mov
add
pop
test
stc
js
push
inc
ds
cdq
bound
mov
mov
or
fisttp
in
mov
and
clc
ds
ret
call
cmp
xor
and
cmp
not
and
dec
iret
addr16
lods
push
lods
pop
sub
jg
add
out
sub
jnp
fstp
idiv
cli
loop
dec
iret
jb
js
jmp
ins
les
add
bound
jmp
mov
sti
popa
pop
sub
xchg
fstp
mov
sbb
ficomp
adc
xchg
and
jno
cmp
xor
daa
mov
and
pop
add
jbe
mov
shl
(bad)
xchg
dec
mov
mov
inc
les
inc
imul
inc
xchg
cld
inc
shl
add
or
cmp
loop
add
and
in
lods
jg
cs
xchg
nop
dec
scas
test
aas
jb
cmps
dec
sbb
or
mov
or
push
pop
icebp
(bad)
sti
adc
push
jmp
pop
mov
ret
mov
add
adc
sbb
cmp
cs
sbb
(bad)
sub
push
xor
cmp
push
pop
mov
sbb
push
adc
cmps
mov
rol
ds
jle
mov
div
jbe
(bad)
cld
inc
xor
addr16
cmp
jl
out
xor
les
cmp
lock
pop
push
je
pop
jo
in
call
ins
(bad)
and
cwde
fstp
mov
add
inc
test
jmp
jge
mov
or
push
in
out
pop
popa
arpl
sbb
pop
loop
adc
aas
pop
clc
push
cmp
mov
test
mov
sub
cmp
mov
and
pop
shl
mov
std
ja
loop
push
jmp
sar
dec
adc
dec
cmp
bound
cmp
inc
jne
mov
jmp
cwde
mov
mov
enter
or
add
mov
imul
arpl
sub
jmp
cmps
xor
push
sbb
xor
pop
icebp
out
mov
and
pop
jbe
and
scas
mov
push
repz
mov
cwde
and
adc
loope
inc
xchg
rcr
or
lds
aaa
outs
nop
push
inc
xchg
adc
xchg
pusha
ins
inc
vcvtps2pd
inc
adc
inc
ja
xor
mov
das
mov
mov
xor
jae
(bad)
sar
ret
add
in
pop
scas
cmp
push
rcl
clc
sub
xor
cs
jmp
mov
fwait
and
jns
dec
sar
push
push
stc
mov
addr16
and
arpl
lahf
jne
mov
sahf
xor
popf
lahf
sbb
mov
xchg
or
cmp
or
enter
(bad)
mov
clc
jge
jno
jge
inc
cmp
xor
das
ins
mov
jae
out
aam
push
pop
xor
jg
movs
clc
add
adc
xchg
xor
popa
(bad)
pop
jnp
dec
dec
mov
jne
je
fisttp
dec
and
popf
jb
dec
loopne
pop
pop
pop
aaa
xor
addr16
push
cmp
mov
stc
xor
mov
dec
sbb
pop
daa
ins
jle
pop
int
xor
mov
movs
xchg
xor
fdiv
jecxz
ss
xor
imul
xchg
fcom
mov
scas
dec
jle
jne
sbb
pop
(bad)
jno
sar
inc
push
ror
out
(bad)
icebp
scas
test
(bad)
sbb
add
inc
push
or
je
lock
sar
mov
xor
lock
shl
out
mov
js
in
or
imul
pop
inc
xor
sbb
inc
push
adc
loope
jg
and
inc
cmps
mov
or
enter
jmp
repz
int
jmp
push
dec
mov
and
inc
fmul
shl
test
cmp
push
sub
hlt
enter
add
jecxz
cmp
repz
xor
jb
sub
shl
loopne
push
vpshab
inc
mov
inc
fwait
xlat
mov
fild
aas
fidivr
addr16
imul
sub
mov
xlat
xchg
movs
outs
ror
out
xor
(bad)
(bad)
ins
loope
(bad)
leave
adc
shl
dec
das
outs
leave
addr16
cmps
and
dec
push
inc
cli
icebp
mov
adc
imul
jmp
sbb
adc
lds
popa
mov
fldcw
adc
jle
sti
sbb
xchg
pop
pop
cwde
push
jno
icebp
cmp
std
xchg
cmp
dec
jo
out
push
adc
cmp
or
inc
fbstp
hlt
inc
addr16
push
scas
inc
rcr
adc
fs
xchg
hlt
test
jnp
pop
es
inc
sahf
jg
jmp
push
leave
fsubr
sar
dec
xor
pop
loope
scas
pop
adc
lds
popf
inc
jnp
sti
and
ret
push
mov
retf
sub
push
push
push
aad
repnz
leave
sub
xchg
mov
cld
sub
dec
dec
add
(bad)
mov
adc
add
xor
mov
mov
xlat
lods
retf
dec
xchg
add
ins
mov
mov
lgs
mov
call
std
sub
cs
mov
inc
cmp
gs
mov
sub
cdq
repz
enter
cmc
jmp
int3
mov
scas
mov
adc
fcom
jge
pop
test
xchg
mov
mov
and
push
mov
mov
push
adc
mov
pop
nop
clc
xchg
popa
mov
arpl
lods
outs
arpl
das
cs
push
shl
push
mov
and
jmp
(bad)
leave
cmp
sbb
ja
sub
and
test
std
jnp
or
sbb
stc
cmp
xchg
push
push
mul
loop
sbb
sub
jp
ins
ss
add
test
div
dec
rcl
cmp
jle
dec
mov
jmp
pop
loope
mov
push
out
lock
fld
aas
dec
inc
(bad)
mov
inc
scas
push
lods
push
mov
lock
and
fcmovnu
ins
sbb
add
xor
jae
test
mov
shl
dec
adc
stos
stos
cmp
ret
pop
mov
das
adc
imul
inc
or
mov
fidivr
mov
sub
lahf
pusha
popf
repnz
les
(bad)
xchg
cmp
iret
ja
dec
stos
in
inc
ja
ss
pop
mov
hlt
mov
mov
or
dec
fidiv
sbb
sbb
push
jmp
push
push
pop
dec
adc
add
inc
call
cmp
push
pop
dec
push
lods
pop
out
cmc
pop
in
inc
bound
shl
cmp
inc
adc
lods
mov
xor
mov
ins
jmp
push
push
xchg
ret
lock
pop
lock
aaa
jmp
pop
jp
push
xor
cmps
test
pop
or
shl
cmp
cmp
test
mov
ficomp
dec
sahf
adc
push
mov
push
scas
sbb
xor
fsubr
rcr
ds
xchg
cmp
jp
icebp
inc
data16
inc
or
jae
cld
or
jo
xor
in
mov
dec
dec
sahf
in
pop
xchg
mov
inc
mov
scas
mov
push
pop
add
inc
dec
cmp
dec
xlat
mov
addr16
add
inc
pop
int3
(bad)
or
xor
sub
mov
lahf
bound
(bad)
jno
cmps
sbb
and
(bad)
(bad)
adc
xchg
aam
and
shl
push
mov
and
mov
adc
push
jecxz
mov
popa
jle
push
outs
adc
inc
mov
sar
sbb
lock
push
mov
mov
push
dec
jne
mov
loop
fadd
add
mov
mov
mov
cmps
cli
outs
aas
outs
ror
push
js
outs
inc
cmp
out
lea
mov
fs
jno
movs
ror
adc
stos
aam
in
jecxz
mov
out
inc
mov
xchg
fist
cli
or
jb
pop
xor
dec
jg
sahf
mov
adc
je
xor
js
mov
inc
mov
stos
mov
jo
xchg
ret
dec
push
xchg
jecxz
pop
in
sbb
leave
(bad)
jecxz
scas
mov
bound
and
adc
mov
scas
stos
pop
fcomp
cld
add
add
xor
lahf
cli
sbb
inc
pop
inc
pop
mov
mov
rcr
fidivr
ret
stos
jae
push
push
add
test
push
stos
div
pop
jae
rcl
cmp
pop
mov
cmc
sub
nop
cmps
retf
jne
popa
pushf
add
loope
jae
jl
pop
lds
pop
pop
adc
mul
inc
sub
push
in
jle
dec
cmc
cmp
mov
pop
repnz
and
ret
in
mov
fisubr
(bad)
adc
out
xchg
inc
std
(bad)
sub
push
test
loop
mov
inc
mov
jg
cmps
sbb
add
jae
sub
sub
and
pop
sti
retf
jo
inc
ror
fs
xchg
mov
inc
in
add
jle
std
sbb
inc
outs
mov
dec
test
or
stos
int3
sub
pop
dec
ins
sbb
xchg
xchg
stos
(bad)
in
xchg
jbe
dec
and
jo
push
dec
inc
push
daa
xchg
mov
sub
aaa
arpl
and
popf
(bad)
(bad)
sbb
shl
push
adc
and
(bad)
call
xor
pop
ret
shr
dec
mov
fwait
and
mov
je
or
(bad)
push
clc
pop
and
pop
pop
inc
and
mov
shl
fdivr
out
cmps
jmp
and
test
cmp
and
xchg
sub
out
sub
imul
mov
inc
in
or
lock
data16
mov
sbb
mov
jno
movs
icebp
addr16
push
pusha
daa
out
(bad)
and
in
or
les
sub
mov
mov
xchg
mov
add
and
jne
add
dec
in
dec
outs
push
cmp
mov
cmps
push
xor
cmp
rcl
and
test
fs
jge
fidivr
sub
jb
or
(bad)
fisttp
adc
pop
sbb
mov
les
mov
or
pop
in
js
dec
xchg
aas
popa
dec
lods
pop
popf
gs
test
add
fdiv
fiadd
xchg
sbb
mov
push
or
cdq
dec
push
sahf
sub
bnd
sbb
xchg
xor
aas
mov
adc
outs
mov
fdivp
(bad)
jnp
dec
pop
stc
mov
xchg
popf
xor
movs
inc
sub
pop
std
(bad)
pop
test
(bad)
and
add
cld
xor
jl
ss
push
jge
scas
ret
in
add
lock
sub
sbb
stc
mov
pop
sub
mov
popa
xchg
repz
inc
clc
push
popf
jne
pop
cmp
xor
sbb
cmp
pop
cli
xor
mov
shl
cmp
push
(bad)
fucomip
leave
mov
ret
shl
pop
jno
sbb
cmp
mov
pushf
pusha
jp
jb
pusha
sub
test
mov
adc
leave
retf
stos
or
fs
shl
mov
rcr
jg
xchg
add
fisubr
scas
xchg
retf
ja
test
pop
add
(bad)
pop
mov
outs
push
mov
push
popf
pop
loope
loope
add
test
dec
push
adc
jbe
add
scas
xchg
out
or
fisubr
pop
push
call
sbb
push
sub
imul
fld
aam
ficom
pop
add
pop
sar
xchg
es
push
ins
ret
dec
ja
or
lea
adc
push
push
and
xor
ds
repz
add
clc
cmp
lock
aaa
and
jmp
pop
pop
(bad)
pop
repz
(bad)
in
cmp
fstp
pushw
stos
test
es
xchg
mov
mov
scas
and
data16
mov
movs
xlat
lds
mov
(bad)
jmp
dec
pop
test
push
les
clc
mov
mov
jmp
icebp
and
xchg
in
or
xor
mov
ret
mov
retf
sbb
xchg
sub
les
mov
aaa
in
leave
push
jnp
jns
int3
inc
and
add
add
in
add
push
(bad)
sti
mov
lods
mov
mov
dec
adc
in
les
mov
stos
xor
add
sub
rol
ror
push
mov
gs
mov
cs
pop
rcl
cmc
mov
icebp
call
inc
mov
outs
out
mov
shl
adc
repnz
push
cdq
dec
movs
aas
repnz
stc
rol
and
pop
jbe
jmp
sbb
jns
test
cmp
ret
retf
movs
int3
mov
(bad)
mov
shl
dec
out
mov
popa
inc
mov
and
sub
pop
js
aas
inc
add
cli
sar
and
cmp
mov
adc
push
adc
(bad)
(bad)
fld
shl
rcr
inc
cwde
ret
leave
cs
jge
adc
mov
push
aam
or
nop
mov
nop
outs
(bad)
loop
push
push
sub
sub
cmp
add
pop
xor
rcr
inc
pop
clc
add
ins
scas
pop
and
mov
xchg
push
icebp
mov
les
int3
push
push
out
push
sti
sbb
mov
jbe
jle
mov
cdq
mov
std
push
test
scas
sbb
aam
imul
pop
xor
ja
push
data16
hlt
loopne
sub
ret
lods
retf
cmp
mov
push
xchg
ret
push
adc
call
idiv
daa
pop
or
sbb
iret
mov
jp
or
sbb
jnp
sbb
lods
popa
pusha
dec
mov
dec
jo
iret
jp
dec
mov
xor
outs
pop
mov
adc
lds
jle
std
pop
cmp
and
mov
jns
and
sub
and
push
scas
or
aam
fisubr
push
bnd
shr
sub
add
jnp
and
scas
enter
adc
add
push
jae
imul
or
stos
(bad)
pop
sbb
pop
pop
pop
mov
push
cwde
mov
dec
dec
jne
push
jle
cdq
icebp
pop
ins
dec
pop
dec
fnstcw
(bad)
sub
xchg
dec
fdivr
or
mov
(bad)
or
adc
sub
jno
(bad)
dec
sbb
faddp
out
or
rcl
jnp
cmp
or
mov
ja
push
adc
aas
pop
iret
adc
adc
or
aad
shr
call
sbb
(bad)
out
pop
in
adc
fs
lock
mov
push
inc
push
sub
in
mov
and
sbb
mov
mov
ds
ror
and
pop
enter
arpl
push
ret
push
(bad)
push
(bad)
jo
push
mov
xor
inc
(bad)
mov
pop
mov
int3
mov
bound
or
cmc
rdmsr
and
push
lahf
(bad)
fadd
hlt
int3
add
aas
call
lea
fwait
xchg
adc
add
jns
push
ins
mov
inc
aad
mov
jbe
and
mov
clc
inc
jns
xchg
in
cmp
xchg
movs
es
push
cmp
dec
fwait
icebp
pop
xlat
mov
outs
inc
dec
sbb
inc
mov
test
ss
mov
das
sti
push
xor
mov
jmp
cmc
mov
rcr
add
push
das
das
adc
out
je
push
into
imul
sbb
push
daa
jae
adc
cdq
or
jns
sbb
pusha
sbb
cmp
pop
sbb
out
cmp
or
jp
jb
xchg
icebp
push
leave
mov
mov
mov
cmp
xchg
in
adc
imul
xlat
leave
adc
inc
inc
sub
pop
add
fs
fdivr
push
in
in
jp
mov
pop
dec
test
fdivr
mov
mov
pop
imul
cmps
jmp
inc
jns
adc
or
fwait
neg
cmp
aas
mov
fst
inc
pop
push
loope
pop
pop
sahf
cwde
clc
nop
test
bound
cdq
xor
scas
or
sub
or
mov
cmp
push
jp
xor
xchg
repz
bound
lock
jns
scas
push
mov
aam
dec
(bad)
rcl
or
cmps
retf
xor
pop
mov
adc
stos
mov
test
sub
dec
pop
push
in
jo
stc
fcmovb
ins
popa
cs
mov
mov
inc
loop
jl
(bad)
mov
out
popa
cdq
mov
in
mov
xor
or
jge
xchg
lahf
pop
(bad)
int
lea
sbb
in
ds
jmp
and
or
icebp
jle
and
adc
cs
fsub
jl
addr16
nop
jp
call
pop
jo
(bad)
je
cs
rol
ins
and
inc
xor
push
xor
cmp
lock
xchg
cmp
dec
jge
mov
sub
rol
out
test
out
mov
(bad)
and
inc
shl
jmp
scas
push
pusha
adc
xchg
add
xchg
inc
sub
jns
das
ret
sbb
sub
(bad)
push
outs
pushf
imul
add
cmp
or
and
sub
stos
movs
(bad)
cld
shl
cld
jo
adc
mov
jae
and
add
pop
sub
jne
dec
js
and
and
cmp
sub
call
stos
sub
pop
mov
jmp
jo
jmp
pop
xor
les
inc
call
retf
mov
push
ja
xchg
push
xchg
jb
arpl
xchg
rcl
sub
mov
mov
cs
mov
fist
xor
add
out
lock
xor
push
adc
or
dec
jmp
aaa
fld
sbb
shr
push
xchg
mov
lahf
sub
jle
sbb
cmp
in
mov
loop
jbe
xchg
push
xchg
jne
push
retf
in
int3
jbe
push
jmp
xor
push
ficomp
jmp
jno
pushf
data16
inc
xor
sar
ret
ss
retf
cmp
push
(bad)
sbb
repz
in
mov
inc
adc
pop
push
and
xor
pop
ret
and
jle
rcr
xchg
add
xor
or
cmp
loopne
(bad)
and
mov
imul
cwde
push
stos
xor
sbb
add
push
(bad)
hlt
retf
dec
mov
mov
daa
mov
sbb
test
or
mov
and
std
fs
mov
(bad)
xchg
out
mov
retf
fwait
mov
push
mov
in
dec
jmp
inc
jg
ficomp
sub
add
ror
pop
(bad)
mov
mov
inc
inc
mov
jecxz
dec
lods
jbe
cmps
or
push
test
xchg
outs
(bad)
cld
jne
mov
mov
dec
ss
stc
ds
xchg
movs
or
cmp
inc
mov
aad
cmp
cmp
rcl
fld
pop
cmp
jge
and
mov
cmp
retw
dec
test
icebp
cld
popf
and
adc
sub
xchg
ret
xor
push
xor
ror
std
inc
fmulp
sub
sub
outs
and
pushf
cli
jge
sbb
mov
lods
aaa
push
inc
in
mov
mov
imul
and
pop
or
cs
mov
test
fidivr
push
in
js
xor
int
cmp
in
aaa
push
dec
rcr
xchg
in
sbb
lods
dec
dec
cmp
xor
push
ss
and
mov
aaa
loop
sub
mov
mov
pop
(bad)
sbb
inc
retfw
add
xchg
mov
lock
sub
daa
push
cmc
pop
pop
cs
popf
pop
scas
mov
cmp
pop
into
cmps
or
mov
and
sbb
or
fs
xchg
les
lods
and
xor
sub
in
pop
(bad)
cmp
pop
cli
fild
sbb
aam
jg
push
in
push
or
xor
add
imul
pop
push
ret
call
sbb
lock
sub
add
std
jne
adc
test
(bad)
or
in
xor
mov
sub
sub
cmc
adc
or
mov
repz
cmp
inc
push
sub
int
ss
clc
(bad)
jnp
adc
out
mov
xor
enter
mov
jo
aaa
mov
js
xchg
sbb
mov
ror
cmp
in
adc
sub
mov
add
dec
jae
sbb
data16
div
shl
pop
cmp
sbb
cmps
mov
jno
adc
pusha
(bad)
je
sbb
in
outs
repnz
in
add
jmp
sub
mov
push
out
sub
popa
pop
or
loop
clc
xor
retf
leave
aad
scas
ror
gs
add
mov
lea
inc
jmp
mov
adc
xor
inc
(bad)
(bad)
cmp
loop
in
sub
fwait
jae
cmps
rcl
pop
rcr
cmc
movs
add
call
push
hlt
inc
fimul
cmps
cmp
xor
les
push
lahf
es
inc
bnd
mov
jmp
mov
pop
jecxz
adc
in
xor
or
or
mov
shl
sub
cli
(bad)
jle
aad
test
mov
jle
adc
jg
dec
int3
stos
xchg
dec
daa
mov
rcr
and
out
addr16
xor
mov
push
repnz
pop
dec
pop
out
dec
test
pop
pop
lods
mov
mov
loop
add
rcr
in
shr
inc
pop
mul
sub
aas
xchg
ja
or
inc
jge
add
ror
mov
mov
pop
popf
cmp
mov
sar
xchg
lds
movs
xor
inc
push
sti
cmp
in
les
add
sbb
call
mov
int
daa
sbb
dec
dec
call
sbb
mov
outs
dec
popf
and
ds
in
popf
push
out
cdq
mov
dec
dec
pop
nop
mov
and
bound
mov
pusha
dec
jp
out
mov
and
xor
jge
movs
gs
out
jbe
and
cli
pushf
test
mov
xchg
mov
mov
sti
or
cmp
std
dec
and
cli
movs
(bad)
lea
jo
pusha
pusha
out
cld
cli
and
or
xchg
jo
add
imul
sbb
mov
pusha
or
cmp
aad
scas
add
mov
and
mov
mov
mov
scas
cli
mov
or
adc
mov
adc
xor
mov
pop
cmp
ret
and
outs
or
loopne
lock
pop
stos
mov
push
daa
adc
pop
ins
mov
xor
xchg
in
addr16
addr16
push
push
cmp
pop
sub
in
jmp
cld
and
outs
cmp
dec
or
pop
cmp
sub
inc
js
inc
adc
ins
fwait
sbb
xchg
lea
or
jmp
and
mov
cmp
call
test
lock
pop
imul
and
std
or
cmp
and
sub
mov
int
pop
pop
movs
jne
pop
xchg
inc
sbb
cmp
pop
dec
inc
push
movs
sbb
jl
imul
or
xchg
imul
call
dec
and
dec
and
xchg
inc
out
xor
fisttp
call
rcr
shl
pop
in
or
outs
cmc
movs
pop
mov
out
pop
jnp
inc
pusha
pop
adc
lds
mov
(bad)
push
arpl
mov
pop
dec
bound
call
mov
push
shr
and
pusha
lods
popa
mov
xchg
stos
das
jmp
loope
clc
or
ins
loope
out
or
lods
xchg
imul
or
xor
scas
iret
and
sbb
pop
jecxz
std
pusha
mov
aaa
test
push
pop
push
mov
stos
or
inc
mov
int
in
xor
jbe
add
scas
sbb
lock
mov
bound
cmp
push
sbb
mov
push
add
loope
(bad)
movs
retf
mov
(bad)
pusha
in
add
fs
jl
xor
push
jg
pop
pop
sub
cmp
lods
jp
aas
sub
fcomp
call
jge
stos
das
jno
out
sbb
xor
mov
std
push
loop
imul
enter
pop
out
or
je
pop
jg
cli
cld
loope
ret
jns
add
dec
pop
add
rol
xchg
repnz
out
jmp
adc
test
xchg
cmp
adc
mov
dec
jb
push
adc
jne
loope
adc
ds
push
cmps
(bad)
lods
mov
xor
jge
adc
std
aas
xchg
push
mov
jbe
outs
mov
js
mov
movs
sbb
into
cmp
sub
mov
gs
mov
mov
sti
mov
les
ret
dec
jb
icebp
jmp
ins
sub
mov
cli
in
push
fbstp
dec
imul
push
push
(bad)
pop
fistp
scas
sbb
mov
imul
test
mov
and
sar
mov
(bad)
outs
sub
fld
sub
std
inc
inc
loop
jp
ss
ds
xchg
jl
inc
dec
sbb
idiv
add
push
jge
lea
or
test
pop
inc
and
mov
shl
rcr
inc
out
push
pop
test
test
adc
or
cmp
pop
and
inc
mov
or
(bad)
(bad)
and
mov
sbb
loope
das
dec
sub
add
jmp
jmp
pop
pop
sti
in
test
mov
inc
cmp
scas
add
popf
leave
and
rcl
inc
inc
jae
js
ret
clc
(bad)
and
xor
fs
dec
jmp
dec
imul
mov
ds
add
lods
inc
mov
inc
inc
les
jb
loop
mov
and
xor
dec
cli
sub
dec
pop
push
inc
push
xchg
sti
cmc
pop
cmp
lods
mov
add
repnz
push
in
mov
pop
pop
shl
shl
xchg
cwde
data16
loop
push
inc
in
sbb
mov
(bad)
in
outs
jl
xor
mov
push
test
or
je
adc
cmp
add
sbb
je
add
adc
sbb
jno
jnp
fwait
mov
jl
popf
clc
inc
loope
jbe
(bad)
cli
jge
in
loop
xor
out
pusha
xchg
pusha
shl
inc
(bad)
fwait
aaa
inc
pop
jecxz
sub
in
and
js
movd
cs
movs
cmp
add
stos
dec
dec
movs
add
(bad)
movs
ror
cmp
jae
jmp
cwde
xor
ret
push
jge
mov
sbb
cli
enter
inc
jmp
hlt
jecxz
and
(bad)
jl
ss
push
fcmovnu
das
fwait
jle
(bad)
push
in
pop
test
fwait
out
jge
and
jg
xor
gs
push
xor
xchg
je
out
jmp
out
dec
adc
sbb
xchg
push
push
push
push
sub
repnz
mov
sbb
mov
retf
sub
sub
stos
mov
clc
push
cmc
mov
jle
jne
int3
js
imul
dec
add
mov
sub
out
div
pop
mov
push
stc
adc
movs
xor
(bad)
mov
push
inc
jecxz
sub
rcl
jmp
xchg
inc
jmp
cmp
outs
add
loopne
daa
rol
cmp
and
fnsave
ja
ins
hlt
and
add
movs
jmp
mov
lock
jo
mov
outs
sbb
fsubr
shr
inc
xchg
fmul
ds
popa
pop
cmp
cdq
cmp
inc
xchg
mov
dec
jbe
sbb
jle
inc
jno
jl
sub
or
shr
ds
lock
ins
mov
or
pushf
jmp
cmp
mov
mov
sbb
xor
xchg
pop
call
add
mov
and
sbb
mov
daa
jg
cmp
mov
sub
mov
mov
mov
and
mov
stc
jns
mov
sti
jecxz
pusha
icebp
and
dec
push
in
mov
push
out
pusha
jp
and
loopne
stos
adc
dec
mov
and
or
clc
adc
push
push
jno
cmp
inc
loop
jnp
sub
dec
or
sar
lock
and
stos
idiv
add
cmc
or
pop
xchg
push
cli
or
cmp
pop
jne
das
cmps
sbb
popa
dec
xor
jg
add
dec
or
jmp
mov
test
popa
and
ret
adc
dec
cwde
ret
loope
ss
or
inc
fisubr
or
cmc
pop
mov
push
adc
and
cs
rol
cmp
(bad)
popf
mov
into
cs
mov
mov
pop
mov
out
jl
popa
jbe
(bad)
lahf
lods
push
outs
mov
push
and
in
or
imul
jno
pushf
(bad)
rol
cs
xchg
xchg
or
lods
sbb
jmp
mov
mov
test
sub
push
movlps
mov
xchg
(bad)
repz
(bad)
sbb
fnclex
ror
shr
outs
xchg
sub
or
ss
dec
mov
dec
jecxz
fwait
scas
cmp
mov
jge
pushf
rol
cmps
sbb
cmps
sahf
(bad)
jmp
fwait
movs
xor
je
adc
xlat
popf
cmp
popf
stos
lods
xchg
pop
xchg
dec
push
jns
mov
icebp
add
adc
pop
dec
cli
sub
addr16
push
push
mov
clc
add
popa
lahf
inc
movs
jmp
retf
inc
adc
pop
not
and
push
push
jmp
outs
outs
movs
mov
pop
pop
fs
outs
mov
lods
cmc
into
enter
(bad)
inc
mov
jne
jmp
ins
fidivr
add
cmp
stc
and
out
xchg
repnz
add
dec
add
pop
cmp
outs
(bad)
push
imul
bnd
sbb
popa
daa
test
stos
popa
cmc
inc
mov
scas
in
js
loope
mov
jmp
popa
mov
pop
push
aad
out
adc
cmp
mov
jo
ins
mov
pop
cmc
test
mov
psrld
xchg
dec
add
xchg
cmps
test
fwait
jg
mov
dec
jne
jne
mov
fnsave
mov
inc
dec
xor
mov
stos
mov
adc
jl
stc
cld
fwait
nop
jmp
and
(bad)
xor
sbb
or
cmc
popf
push
xchg
or
and
adc
sub
cmp
repnz
add
push
(bad)
jecxz
jbe
and
adc
fptan
push
test
lock
pop
ret
sbb
sahf
loop
mov
aam
cmp
loope
lea
sbb
jge
inc
jno
push
ins
cdq
ja
dec
cs
or
pop
fwait
stc
mov
or
mov
sub
(bad)
mov
xlat
or
push
mov
pop
sbb
jo
clc
cmp
inc
mov
aad
pop
sub
xor
push
in
lds
inc
daa
mov
xor
pusha
ds
aad
aad
push
xchg
sbb
cmp
inc
jb
fild
stos
daa
pop
mov
jne
aas
cld
cmc
popa
bound
mov
jg
movs
and
xor
mov
mov
xor
js
mov
daa
or
push
call
ret
mov
ret
rsqrtps
cwde
in
je
adc
dec
or
in
hlt
push
ja
push
mov
jmp
dec
jmp
cmp
dec
fistp
or
jmp
ss
sub
add
outs
and
test
jb
in
xchg
push
xchg
int3
cld
in
jl
mov
mov
sub
cld
dec
push
je
and
inc
scas
shl
gs
arpl
ror
pop
lods
dec
xor
mov
and
retf
adc
pop
lods
xlat
xchg
adc
fidiv
push
or
stos
and
pop
cs
jbe
xor
lock
lahf
rcl
nop
(bad)
push
cmp
cmp
int
pop
jmp
cwde
mov
dec
icebp
lahf
jge
add
ss
out
xchg
jg
loopne
pop
inc
mov
pop
stos
xchg
push
pusha
retf
dec
das
data16
test
xlat
adc
shr
mov
mov
jno
sar
fild
mov
mov
rol
sub
ins
xor
jmp
lock
in
js
int
cld
clc
stc
push
out
mov
mov
xchg
jecxz
add
imul
mov
mov
call
inc
shr
jne
pop
out
and
dec
(bad)
popa
rcl
inc
ds
push
push
(bad)
jo
test
je
cmp
fnstcw
inc
pop
mov
and
or
cmp
xor
push
jl
fiadd
jno
arpl
fwait
loop
jg
pop
cmc
and
jns
adc
sub
out
call
(bad)
in
push
shl
mov
mov
jns
out
into
pop
mov
ret
cmp
add
fs
mov
xchg
imul
into
mov
pusha
xchg
and
pushf
dec
cmp
jmp
int3
push
mov
mov
pop
or
or
mov
mov
or
addr16
imul
xchg
cmp
mov
adc
hlt
fbld
mov
cmp
adc
dec
ja
adc
sbb
inc
xor
inc
movs
mov
icebp
and
dec
lds
add
inc
ret
lods
repz
sbb
push
(bad)
dec
inc
fidivr
fwait
dec
jecxz
cmp
cmp
out
stc
or
jmp
(bad)
mov
pop
out
inc
icebp
(bad)
push
mov
pop
mov
call
or
jg
shl
inc
dec
(bad)
imul
push
adc
sti
scas
fldlg2
and
jmp
cmp
mov
adc
push
or
in
shl
stc
popf
and
into
adc
dec
xor
adc
dec
push
xlat
sbb
icebp
inc
and
in
dec
jecxz
movs
(bad)
frstor
mov
js
xchg
cmp
stos
xor
xor
call
mov
add
adc
ss
or
inc
ss
aad
xor
cmp
leave
mov
js
mov
fwait
xchg
push
sub
sbb
sub
retf
ret
xchg
jg
mov
push
jp
push
pop
jb
(bad)
sahf
pushf
cmp
add
in
rol
(bad)
xor
add
out
leave
imul
pop
cmc
gs
push
cmp
sbb
jle
xchg
sbb
retf
cmp
lock
push
push
ret
xchg
sti
mov
sbb
idiv
mov
inc
adc
jb
xchg
test
ret
mov
inc
retf
mov
dec
push
mov
ret
ret
and
and
mov
pop
scas
mov
ds
int3
jo
push
enter
mov
pop
imul
icebp
adc
or
cwde
pop
inc
mov
pop
pop
lock
(bad)
xor
(bad)
xchg
cmp
popa
mov
jmp
inc
retf
sbb
repz
lock
mov
hlt
push
push
xor
stc
imul
cmp
shr
jle
add
jbe
imul
add
out
inc
cmp
jge
push
ret
out
fistp
pop
shl
mov
pop
cmp
push
retf
inc
inc
ret
mov
idiv
jmp
inc
xor
sub
ret
cmp
data16
jle
jno
xor
push
inc
pop
cmp
mov
cmp
or
push
pop
cmp
hlt
inc
and
jb
mov
std
mov
sbb
jecxz
xlat
outs
vrcpps
test
iret
xchg
data16
pusha
xchg
aas
repnz
jne
ins
xor
push
xor
jge
aas
adc
not
pop
sbb
add
add
repnz
jns
scas
jl
jb
inc
sub
push
xchg
inc
push
cld
xor
int3
mov
push
int
jo
loop
dec
and
gs
adc
int
push
xchg
pop
dec
loopne
in
ret
add
push
mov
mov
cmp
cwde
add
pop
inc
mov
sub
or
data16
cmp
add
setp
push
retf
add
mov
adc
test
rcl
fist
fnstcw
inc
loop
not
imul
pop
fmul
xor
(bad)
cmp
sub
mov
or
dec
sub
stos
cmp
pop
clc
repnz
aad
mov
jno
xchg
push
jae
je
cmps
jmp
adc
inc
mov
lahf
shl
push
mov
push
xchg
retf
mov
jl
jge
and
and
nop
mov
arpl
jns
in
add
nop
fld
add
and
mov
pop
call
data16
hlt
xchg
inc
push
mov
out
mov
inc
ds
jle
aas
movs
outs
jbe
loop
std
jle
pushf
lock
out
ja
test
(bad)
das
pop
js
mov
bound
or
mov
loop
and
xchg
xor
push
loope
add
sub
xor
mov
or
pushf
cmp
dec
inc
rol
or
nop
and
inc
call
cld
jne
fild
outs
int3
call
mov
outs
lods
stc
shl
fidiv
mov
pop
pop
pop
mov
xchg
add
outs
rol
dec
mov
xor
xchg
push
addr16
ss
push
adc
rcl
movs
adc
jmp
icebp
bound
inc
xchg
add
mov
inc
outs
pop
in
jno
push
sbb
cli
popa
push
xchg
mul
leave
loop
mov
shl
xor
sahf
sub
xor
pop
or
mov
cmp
shl
in
mov
imul
data16
add
data16
sbb
pop
cmps
shl
adc
adc
daa
cmp
inc
or
jmp
adc
cs
add
adc
xchg
push
xor
test
ret
mov
mov
mov
pushaw
jne
sbb
xor
dec
mov
dec
pop
retf
sahf
jecxz
adc
int
mov
fsubrp
jl
inc
cli
inc
jp
xchg
outs
ins
test
xlat
pop
add
popa
cmp
sub
out
outs
pop
pop
popf
mov
and
push
int3
ins
inc
outs
mov
sub
xchg
and
push
test
fiadd
mov
inc
bound
gs
sbb
xchg
(bad)
or
jbe
mov
iret
xchg
jle
movs
mov
push
jge
lock
mov
les
es
popa
sbb
jae
or
in
arpl
out
nop
add
aam
push
sbb
mov
jmp
cmp
jns
jns
addr16
nop
cmp
arpl
sub
cli
(bad)
mov
cmp
add
cmc
ins
jb
movs
rcl
or
sub
xor
push
cmc
jo
rcr
xchg
test
popf
rol
inc
mov
push
dec
clc
and
pop
fsub
aaa
or
jl
jnp
fstp
(bad)
stc
mov
adc
mov
pop
xchg
or
movs
pop
jmp
movs
das
adc
mov
(bad)
fxch
call
push
mov
loopne
dec
fadd
pop
ret
into
inc
enter
jmp
pusha
cwde
jmp
mov
mov
scas
(bad)
inc
mov
jne
jb
movs
rcr
pop
push
(bad)
lea
cmc
xor
sbb
cmps
mov
es
mov
cli
jge
fimul
pop
mov
pop
test
sub
adc
inc
inc
xchg
and
std
outs
sbb
call
push
mov
daa
jne
loop
inc
popa
push
out
cmp
cmps
and
aad
ret
jbe
js
push
sti
add
fistp
and
test
xor
mov
(bad)
mov
mov
ds
fnstenv
fwait
sbb
push
idiv
lods
push
cwde
es
gs
pop
ss
adc
add
mov
push
outs
adc
inc
inc
sub
retf
daa
mov
popf
icebp
jp
mov
adc
mov
scas
lds
dec
push
add
ds
retf
mov
xchg
mov
call
lds
mov
cmp
mov
pop
xchg
cmps
and
dec
xchg
fist
xor
(bad)
ds
loop
sti
inc
lds
repz
and
push
jg
or
cld
jnp
xchg
popf
push
fmulp
mov
jno
xchg
jb
aaa
imul
mov
jmp
mov
(bad)
mov
popf
jmp
fiadd
mov
fwait
push
inc
adc
jecxz
sbb
mov
mov
retf
push
xchg
xchg
mov
jbe
in
push
test
mov
repnz
sbb
xlat
mov
cmps
cdq
add
mov
stc
les
mov
sub
sbb
retf
pop
dec
adc
cli
mov
mov
add
fidivr
jo
ds
into
dec
(bad)
(bad)
les
mov
dec
xor
xchg
xchg
mov
dec
sbb
xchg
stc
inc
inc
pop
jp
push
sub
daa
inc
icebp
icebp
std
mov
inc
mov
sbb
push
stc
outs
imul
pop
and
adc
jne
jmp
lds
add
scas
sub
or
outs
jg
cmps
push
jae
loop
repz
dec
shl
add
in
shl
out
ret
jo
xchg
adc
pop
in
je
fwait
mov
adc
pop
(bad)
imul
aam
pop
ret
jp
adc
jmp
repnz
xor
das
in
sub
mov
xor
and
cmp
scas
cmp
push
fst
add
and
inc
xchg
inc
not
dec
shr
dec
jp
ins
test
and
push
je
cmp
das
pop
xor
jne
add
cmp
mov
add
popf
sub
leave
pop
and
loop
jns
int3
sahf
out
lods
jmp
sub
sbb
ror
(bad)
cli
ins
jmp
in
sub
mov
mov
cmp
push
std
xor
adc
shl
inc
cs
rol
sub
mov
ret
xchg
fdivr
retf
push
sysenter
lods
jne
jmp
adc
fdiv
aas
sbb
push
ret
(bad)
jecxz
xor
dec
stos
mov
add
dec
mov
jns
add
cmc
adc
xor
or
fimul
(bad)
rcl
jae
cmp
ss
add
push
inc
pop
jmp
mov
mov
cdq
push
sub
loop
(bad)
cli
push
and
mov
xor
ja
pop
ins
in
pop
mov
outs
mov
cmp
cmp
ds
jno
adc
sbb
imul
addr16
in
addr16
es
popa
or
mov
adc
cmp
or
fs
pop
imul
in
inc
gs
or
inc
inc
lock
pop
push
jns
std
in
sbb
(bad)
add
cmps
xor
mov
cmc
shr
xor
cmp
(bad)
jae
jno
bt
scas
inc
and
lods
mov
nop
jmp
jae
cwde
addr16
jle
sub
out
add
into
out
and
xor
xor
inc
push
push
cmc
ror
retf
mov
shl
dec
shl
xor
xchg
jne
(bad)
xchg
mov
call
ins
shr
cli
or
mov
or
pop
dec
add
and
cmc
add
repnz
test
icebp
clc
xchg
sub
push
popf
mov
sub
cld
imul
xchg
(bad)
jno
stos
inc
je
es
mov
sbb
lods
and
iret
out
loop
out
aaa
xor
sbb
jnp
(bad)
mov
cmp
adc
inc
gs
jo
ss
(bad)
cmps
aam
mov
inc
lods
pop
mov
addr16
push
movs
ror
add
cmp
mov
sub
push
scas
jg
out
in
or
and
or
fidiv
jmp
pushf
dec
fstp
enter
cld
xchg
sar
pop
pop
popf
sahf
leave
sbb
xchg
les
add
outs
scas
sub
pop
xchg
or
ds
pushf
or
and
ins
jl
cmc
inc
push
stos
dec
inc
sub
bound
stos
inc
pop
cmps
dec
or
ins
pusha
int
inc
outs
loope
cwde
je
inc
test
push
inc
popf
in
sub
sbb
mov
test
inc
sub
jle
(bad)
inc
call
mov
sti
xor
ss
bound
pop
push
adc
outs
out
xor
push
enter
cs
jb
daa
xchg
mov
and
xchg
call
mov
ror
movlhps
jle
xchg
movs
lods
lahf
stos
mov
xchg
mov
xchg
lods
cmp
inc
dec
cmps
ins
fsubr
adc
jnp
sbb
mov
inc
ror
int
daa
inc
clc
cbw
xlat
cmp
dec
and
push
and
fidiv
jle
inc
pusha
sbb
dec
cmp
neg
arpl
mov
mov
xchg
cwd
pusha
adc
popf
jne
(bad)
call
pop
iret
cli
jne
(bad)
pop
movs
aas
adc
arpl
push
rcr
(bad)
jmp
shr
pop
xor
sub
xor
jnp
fsub
aad
and
adc
mov
cmp
inc
mov
in
icebp
xchg
enter
icebp
pop
sub
cmp
hlt
xchg
or
sbb
lods
fsubr
xchg
shl
xchg
mov
dec
pop
mov
xlat
in
add
or
or
jg
sub
stos
mov
dec
xchg
std
enter
js
sub
leave
and
dec
clc
add
mov
cmp
mov
xchg
jnp
mov
and
push
push
dec
shl
mov
and
xchg
cs
(bad)
cmp
inc
cld
repnz
idiv
xor
pop
ficom
mov
or
cmp
retf
sar
xor
mov
xchg
cmp
jecxz
fiadd
inc
aaa
sub
adc
in
push
gs
lock
ins
ret
push
jbe
xor
mov
xor
push
add
adc
xchg
jle
pop
data16
aam
popaw
(bad)
ror
popf
mov
pop
or
inc
ret
repz
sub
cmps
pushf
sbb
fnsave
aam
lock
lahf
push
add
mov
jns
cmp
sbb
push
adc
fisttp
xchg
inc
jg
frndint
jbe
cwde
cs
xchg
dec
test
xchg
std
jbe
cmp
sub
cmp
dec
and
and
pop
repz
jno
dec
sub
sub
ror
loop
add
je
mov
loopne
inc
push
push
dec
int
adc
jl
mov
push
adc
pop
dec
adc
mov
sbb
dec
xchg
sahf
clc
inc
out
dec
jmp
sbb
or
push
and
imul
or
stos
jno
jmp
icebp
dec
loopne
test
jge
mov
mov
loop
lea
push
pop
or
ret
sbb
dec
sar
mov
add
add
rcl
test
jno
call
inc
push
retf
iret
inc
lea
das
out
dec
lds
fidivr
cwde
sbb
mov
pop
pop
cmps
and
ret
loop
ins
out
pop
fdivr
inc
stos
out
out
mov
jg
adc
ds
add
retf
fstp
pop
fwait
mov
pop
out
ret
enter
cmp
add
lds
jno
int
add
out
push
xchg
arpl
cli
and
cmps
pop
mov
arpl
es
pop
jmp
dec
das
movs
das
or
add
clc
cmp
int3
rcl
cmp
loope
sub
loop
push
cwde
and
arpl
in
jns
mov
mov
dec
push
push
sub
movs
sub
retf
mov
stos
xor
jb
(bad)
xor
(bad)
or
push
push
mov
cwde
jae
(bad)
xor
imul
mov
mov
shl
sbb
inc
fcmovnbe
aaa
js
push
or
sar
adc
cmp
xchg
js
ins
in
or
xchg
test
xchg
es
push
adc
jb
sahf
and
pop
jo
lods
xor
pusha
ror
movs
add
xchg
xchg
sub
and
hlt
lds
shr
mov
mov
mov
push
and
inc
call
sti
mov
gs
cs
in
xchg
cmp
(bad)
xlat
xchg
int3
and
sbb
bound
jecxz
inc
jge
adc
cmp
out
cmc
std
fsub
out
int
jb
das
jg
add
pop
dec
mov
xchg
mov
push
or
mov
lahf
or
push
sub
or
xor
(bad)
movs
add
js
das
push
mov
push
xchg
xlat
sub
mov
mov
xchg
and
mov
and
push
add
fld
xor
xchg
push
stc
dec
xchg
fild
sub
inc
xchg
aad
fbstp
stos
cwde
dec
mov
push
push
xchg
mov
into
mov
daa
jle
enter
stos
retf
cld
add
mov
adc
repz
sbb
mov
pop
ret
int
pop
cli
pusha
jae
arpl
ret
pop
adc
retf
push
or
and
dec
loopne
jmp
pop
jne
pop
jae
push
inc
cld
dec
mov
xor
sbb
cmp
daa
cwde
test
rol
stos
jmp
and
sbb
mov
or
mov
jecxz
and
shl
lock
jecxz
push
outs
xchg
jl
fst
popf
inc
(bad)
cmp
jo
call
adc
adc
cmps
jmp
push
into
and
mov
outs
jle
mov
aad
ret
pop
pop
call
cli
add
ins
mov
add
or
inc
add
lahf
stc
xor
jae
dec
retf
dec
mov
pop
sub
test
mov
imul
or
mov
xor
shl
add
nop
cmps
cli
inc
pop
xchg
pop
fyl2x
outs
mov
loope
out
push
call
mov
outs
sub
mov
neg
fiadd
fdivr
lock
sub
movs
imul
xor
mov
push
test
loop
jl
dec
hlt
repnz
pop
mov
jecxz
inc
ja
add
push
arpl
pop
sub
pop
jecxz
(bad)
push
fild
(bad)
dec
das
and
rol
inc
imul
sub
lea
cld
(bad)
sub
icebp
out
pushf
dec
out
out
dec
jmp
out
xor
call
sub
mov
ror
ret
inc
xchg
jle
ret
sbb
dec
arpl
ja
in
stc
js
jmp
out
push
pushf
sub
xor
pushf
shl
and
mov
pop
adc
ins
ds
and
les
inc
(bad)
shl
pop
push
inc
pop
add
dec
mov
popa
and
jle
push
mov
jecxz
mov
mov
lods
(bad)
leave
pop
retf
pop
adc
inc
shl
cmps
jo
mov
adc
test
(bad)
adc
and
sbb
leave
mov
add
ret
shl
cmp
xor
sbb
jle
sub
mov
in
call
cmp
pop
test
and
int3
ret
fdivr
mov
mov
mov
mov
rol
and
jle
imul
pop
jae
cmps
loopne
cmps
out
or
inc
sub
mov
cmp
mov
arpl
mov
fs
addr16
pushf
lds
std
das
jbe
lods
sbb
scas
xor
sbb
mov
mov
jns
push
pop
and
inc
pop
jns
loopne
imul
outs
mov
mov
xchg
fiadd
mov
idiv
dec
test
lea
or
pop
dec
(bad)
cmp
cmc
(bad)
(bad)
sti
test
ret
mov
adc
inc
sub
jecxz
adc
sbb
jns
imul
or
push
rep
lods
retf
movs
je
shl
into
add
fs
cmp
xchg
dec
and
jl
cmp
ins
mov
ds
rol
push
jne
xor
sbb
ret
sub
mov
sub
jmp
mov
add
jle
or
in
sub
fadd
push
push
scas
xor
stc
test
dec
inc
sbb
xlat
out
mov
js
out
stos
aad
sbb
dec
cli
mov
xor
dec
mov
xchg
cmp
(bad)
push
or
das
rcl
and
mov
and
in
outs
adc
or
sub
mov
or
clc
imul
cs
loope
ffree
cmp
retf
scas
ins
sbb
aad
jmp
push
lods
dec
sub
and
loop
mov
inc
jno
(bad)
es
aam
mov
cs
mov
fidiv
daa
dec
cmp
ja
push
adc
aam
adc
sub
mov
sti
fnstsw
in
(bad)
std
xor
in
repnz
jae
mov
dec
xchg
jle
add
push
lods
mov
push
jbe
cs
out
sub
movs
push
adc
push
dec
ficomp
iret
mov
cmp
rol
cmp
retf
adc
cld
out
mov
xchg
clc
mov
pushf
mov
pop
fcmovb
jmp
repnz
push
lods
add
mov
push
and
sbb
inc
mov
ja
test
pop
fwait
popa
test
ss
sbb
dec
push
push
xor
inc
pop
push
cmps
adc
in
xor
icebp
sub
jl
out
adc
sub
jmp
out
xchg
pop
ror
push
mov
ror
mov
inc
std
(bad)
cmc
jle
out
fsubr
sub
and
rep
cmp
out
lods
inc
imul
fimul
mov
inc
mov
clc
sbb
ss
mov
sahf
push
ja
ret
cmp
hlt
sub
div
or
pop
repnz
jle
mov
stos
adc
dec
push
adc
xor
mov
sub
push
sub
cmps
sbb
mov
sbb
test
jno
xchg
pop
jecxz
dec
jnp
inc
jbe
dec
out
push
cmp
ds
mov
sbb
aad
sub
pop
mov
add
push
popf
hlt
pop
addr16
(bad)
jns
loopne
jns
and
jns
and
mov
mov
mov
cmp
dec
pop
push
dec
clc
pushf
add
(bad)
jbe
and
xor
shr
mov
and
inc
push
lahf
sbb
push
sub
repz
sbb
or
inc
inc
sahf
lock
inc
call
pushf
push
(bad)
adc
mov
push
ja
adc
aaa
mov
loope
pop
cmp
dec
pop
loopne
mov
pop
das
jbe
jo
mov
lods
xor
sub
stos
stos
pop
fcomi
std
fiadd
cs
and
jbe
and
xrelease
arpl
prefetch
jnp
push
in
or
push
mov
mov
ret
das
out
(bad)
mov
pop
cmp
cmp
inc
mov
xchg
xor
jle
and
cmp
dec
mov
sti
push
sbb
mov
and
cmp
mov
and
mov
adc
and
mov
jmp
nop
js
cmp
test
outs
fucomp
movaps
aad
sbb
mov
mov
fmul
mov
(bad)
adc
add
jl
fnsave
xor
jmp
test
out
jnp
inc
addr16
ins
stos
gs
addr16
push
shl
dec
pop
jo
lods
call
repz
in
cmc
inc
sbb
inc
dec
je
mov
popf
and
mov
(bad)
psubsw
shl
test
sahf
mov
lds
mov
push
nop
jmp
cmc
jecxz
outs
jmp
xchg
push
pop
fisttp
ret
das
dec
rol
lahf
and
jns
cli
les
fwait
mov
out
inc
mov
fst
inc
enter
(bad)
cmp
and
cmp
mov
mov
inc
pop
jbe
movs
jg
sub
mov
mov
fild
xor
jno
mov
cmp
jbe
mov
cs
and
inc
cmp
push
das
sbb
or
scas
jae
lea
clc
jb
in
mov
pop
xchg
aad
mov
xor
push
pop
test
mov
jmp
sub
push
stos
(bad)
das
add
sar
cwde
test
lahf
imul
or
push
cdq
clc
jecxz
cdq
rol
daa
push
mov
test
stos
in
jp
push
push
mov
push
out
mov
mov
adc
fsubr
scas
pop
dec
dec
(bad)
sar
jmp
xlat
pop
js
aaa
je
xor
jl
push
enter
mov
arpl
aaa
ss
sar
dec
cmp
xor
int
popf
and
push
fneni(8087
repnz
adc
push
jae
bound
xor
psraw
inc
loop
les
mov
mov
dec
mov
mov
sbb
dec
ror
add
loop
jge
xchg
inc
pop
dec
clc
and
test
mov
dec
inc
shl
or
jbe
loopne
daa
or
add
scas
mov
into
fidiv
movs
out
jmp
fsubr
xchg
jg
mov
xor
imul
dec
inc
jmp
movs
int3
sub
or
inc
aaa
out
scas
jg
xor
add
test
mov
cwde
and
stos
xor
push
fcomi
xor
inc
pop
fsubr
enter
jmp
dec
or
pop
(bad)
in
dec
or
sbb
test
inc
push
into
cmp
inc
mov
inc
xor
xchg
pop
out
jb
stos
jae
pusha
popa
fmulp
sub
pushf
jl
mov
cmp
sub
sbb
jo
sbb
xor
ret
movs
dec
daa
pop
dec
iret
cld
aaa
(bad)
leave
addr16
je
adc
dec
mov
inc
je
iret
adc
dec
mov
jo
pop
push
pop
cmp
ja
mov
add
cld
sahf
js
sub
xor
scas
sub
jg
mov
or
cdq
outs
cmps
cmps
rcr
mov
dec
and
jo
cs
imul
mov
pop
pop
push
inc
addr16
enter
jbe
int3
cmps
cmp
jmp
out
pop
push
movs
inc
push
jbe
outs
jmp
stos
mov
fs
sbb
pop
adc
pop
repnz
xchg
add
push
mov
xor
imul
sti
test
pushf
inc
cmc
out
shr
cmp
mov
inc
lods
repz
mov
stc
mov
call
pop
push
xor
and
jb
leave
fld
push
inc
pop
test
mov
add
pop
dec
imul
push
sbb
jb
xor
movs
jecxz
fcom
sbb
test
aas
sbb
pop
xchg
push
pop
add
and
jae
cmp
mov
ret
test
inc
fadd
mov
push
sub
jl
push
pop
outs
aaa
jbe
(bad)
out
xchg
inc
ins
(bad)
gs
mov
(bad)
leave
lock
pop
xlat
movs
add
dec
popf
ret
mov
frstor
cmp
mov
push
icebp
mov
out
outs
sbb
and
mov
movs
aad
adc
repnz
push
mov
mov
xchg
dec
loope
xchg
in
test
xchg
std
dec
sbb
jle
stos
sti
mov
jmp
mov
je
into
mov
jo
pop
jle
out
fwait
or
fld
div
mov
loop
cs
jbe
and
jge
mov
jbe
push
push
cdq
mov
nop
loopne
data16
pop
inc
mov
repnz
stc
mov
jmp
popf
fdivr
add
or
dec
push
add
dec
sbb
test
jns
mov
and
xchg
loope
add
jmp
inc
push
mov
test
mov
jbe
sahf
stos
div
inc
sub
inc
cmp
mov
(bad)
loopne
or
ret
cmp
mov
cmp
js
lea
pmuludq
cwde
jg
(bad)
aad
push
dec
pop
test
call
lods
adc
sar
jp
jmp
lahf
inc
cdq
mov
mov
and
into
jl
adc
cmp
test
(bad)
xchg
jmp
or
aad
mov
aam
push
sub
push
dec
dec
daa
mov
int3
cmp
aam
sbb
sbb
inc
fs
popf
scas
jle
mov
scas
les
daa
add
mov
cwde
neg
aaa
mov
rcl
jl
daa
aad
mov
pop
sub
enter
fdiv
dec
shl
inc
fild
adc
jle
inc
pushf
lea
mov
jle
stos
aad
daa
cwde
pop
cmp
ds
out
or
inc
push
fwait
out
push
sbb
mov
cmps
mov
mov
push
and
mov
jg
pop
mov
jecxz
or
and
jge
fadd
mov
aam
mov
mov
and
adc
aas
shl
jno
and
outs
shr
imul
or
push
gs
retf
das
es
stos
push
ja
ficomp
sub
mov
fdivr
mov
enter
pop
call
inc
dec
mov
ret
ds
cmp
sbb
mov
mov
loopne
fsubr
adc
adc
das
inc
xor
jne
out
lds
aam
mov
jecxz
inc
or
lods
clc
xor
pop
ror
mov
lock
xor
ins
xor
mov
loop
shl
adc
and
jl
hlt
sub
xchg
dec
repnz
adc
es
dec
imul
jmp
movs
out
xor
ret
int
jmp
das
jbe
cmp
push
test
add
dec
test
xor
cli
aam
into
sub
fild
sub
inc
and
mov
outs
push
retf
inc
push
cs
out
dec
mov
mov
aam
fdivr
jmp
add
inc
shl
sub
pop
mov
jmp
(bad)
movs
loope
cmp
xchg
stos
retf
in
inc
xor
dec
mov
dec
in
popf
jo
push
push
push
scas
add
ja
mov
fadd
ja
fistp
ins
imul
stos
shl
push
aam
mov
stos
faddp
popf
push
cli
comiss
or
mov
adc
sahf
sbb
(bad)
fcomp
inc
pop
out
or
call
fimul
in
(bad)
xor
push
mov
call
fmul
mov
loop
arpl
cmp
es
fiadd
sub
jo
ret
ret
hlt
jns
cmp
cmp
pop
aam
mov
bound
fprem
popa
call
inc
adc
pusha
out
pushf
push
jg
mov
cmp
add
leave
push
mov
jg
jb
stc
inc
fs
push
or
dec
es
jl
popf
into
jo
add
jecxz
repnz
inc
sub
dec
test
add
call
test
js
push
imul
(bad)
movs
leave
xor
cmc
mov
push
imul
inc
mov
pop
dec
mov
mov
mov
push
cmc
icebp
or
pop
adc
mov
jno
and
inc
cli
xor
shl
xor
pop
mov
ror
or
rol
mov
ins
ret
in
xor
push
cmp
popf
in
rcpps
aaa
push
das
ror
push
popa
xchg
outs
loopne
loope
dec
retf
icebp
jb
add
ds
xor
inc
pop
adc
jae
xor
adc
inc
mov
jbe
into
movs
pop
sub
lock
daa
dec
loopne
xchg
int3
jecxz
or
repz
jno
inc
xchg
in
ins
out
dec
std
mov
in
in
test
(bad)
xchg
lods
out
mov
inc
mov
jl
(bad)
mov
enter
cmp
sub
mov
cwde
stos
mov
push
inc
add
inc
and
dec
mov
gs
mov
sbb
loope
movs
push
aas
clc
cmp
mov
mov
gs
jp
movs
(bad)
fild
ja
jmp
push
jg
sub
dec
add
jne
(bad)
loope
scas
ins
cs
cs
cli
or
daa
dec
mov
xor
mov
xchg
cli
sub
fcom
or
pop
xor
scas
repnz
std
mov
jmp
dec
out
ja
xchg
push
or
ins
cmp
push
dec
sbb
(bad)
and
add
mov
jl
dec
mov
daa
pop
mov
add
cmp
pop
jno
inc
mov
mov
xor
add
xor
xor
mov
lods
xor
sub
push
push
dec
adc
shr
lea
mov
iret
push
sub
in
xchg
dec
mov
add
add
push
loope
lods
lock
adc
cdq
inc
mov
(bad)
dec
loop
in
inc
jb
pop
(bad)
sbb
jb
push
mov
fs
sub
call
and
(bad)
call
int
imul
mov
mov
not
ret
jns
inc
inc
imul
test
xchg
add
dec
dec
or
arpl
jecxz
xor
adc
repnz
jle
mov
es
in
or
xor
test
shl
mov
cli
mov
xchg
popf
push
int3
sub
retf
jl
fwait
rcr
cmp
in
push
adc
jno
repnz
cmp
mov
fwait
adc
jnp
sbb
lods
je
ss
add
dec
dec
mov
push
xchg
stos
dec
stos
ins
pop
aad
pop
ret
sub
cmp
hlt
imul
cli
shl
or
jnp
sbb
sub
gs
adc
mov
adc
sub
pop
(bad)
push
xchg
or
jl
inc
jmp
xor
jo
rol
cmp
xchg
cmove
push
movs
push
pop
push
mov
mov
arpl
push
(bad)
movs
pop
pop
cmps
mov
clc
mov
add
add
jmp
inc
cmp
sar
xchg
mov
ret
mov
dec
inc
rcl
inc
jge
inc
mov
xchg
popa
daa
pop
fucom
int
rcr
fldcw
icebp
jl
outs
pop
lds
sar
or
(bad)
pushf
lods
stos
pop
and
je
mov
leave
dec
adc
sub
xlat
stc
push
imul
(bad)
xchg
fisub
cs
jle
addr16
mov
mov
rcl
xor
sub
pop
xchg
(bad)
sub
sbb
jne
les
jmp
pop
shl
sub
jns
xchg
push
hlt
(bad)
retf
add
(bad)
dec
pop
jmp
xchg
loop
sbb
xchg
xchg
movs
hlt
pop
push
jmp
ret
xor
bound
pop
nop
jne
mov
cwde
mov
movs
gs
add
fild
jb
mov
retf
rol
cmp
xchg
push
je
sti
mov
jg
cld
dec
ins
out
xchg
mov
ret
jmp
mov
stos
repz
fnstsw
and
in
pop
jecxz
arpl
test
les
fistp
addr16
cmp
movs
dec
push
pop
test
add
jb
leave
sub
int
mov
dec
(bad)
in
cmp
test
ss
gs
xchg
mov
sbb
cmp
inc
sub
retf
and
push
int3
int3
mov
stos
cmp
loope
sbb
cmp
push
iret
in
add
cmp
rcl
sub
jo
ror
adc
loop
and
in
stc
or
loopne
ret
ins
pop
rcr
add
aas
scas
push
push
push
pop
sub
sub
inc
ds
dec
jle
movs
jmp
outs
and
neg
sub
in
mov
and
push
fiadd
jns
push
cdq
sub
pushf
stc
pop
sub
jns
arpl
call
or
call
mov
lock
lds
jne
push
popa
dec
jne
fwait
or
inc
neg
sbb
mov
mov
xchg
xor
and
loop
lods
jg
stc
call
retf
adc
push
cmp
ds
xchg
aam
xor
push
stos
data16
xchg
mov
stos
pop
adc
push
push
in
out
stos
daa
gs
or
dec
jmp
xchg
(bad)
sbb
jnp
retf
jle
mov
ins
pop
mov
out
inc
fstp
int
mov
int
nop
mov
adc
xor
scas
data16
add
mov
jg
icebp
out
push
hlt
jae
jp
movs
sub
into
jl
push
dec
jno
cld
push
xor
mov
pop
jmp
or
loope
test
stos
add
jge
cmp
cmc
inc
mov
repz
nop
arpl
dec
mov
into
mov
mov
jg
inc
(bad)
dec
lods
fcmovnu
repz
aaa
pop
jno
les
fsubr
daa
mov
outs
xor
cmp
mov
xor
(bad)
jmp
lahf
add
pop
gs
cmp
ja
push
lea
in
add
and
and
sbb
addr16
stc
fdivr
xor
cmp
mov
fdivr
ins
(bad)
out
adc
adc
and
popa
fisub
test
adc
clc
(bad)
leave
outs
cs
sti
sbb
addr16
adc
xchg
cli
mov
shl
and
mov
jnp
call
cdq
rcr
ret
add
jae
pop
push
jle
and
jmp
dec
jl
push
jge
fadd
dec
jne
and
in
cmps
jne
sahf
mov
addr16
sbb
xor
xor
cli
add
addr16
jge
mov
xchg
fcmovne
dec
sub
mov
and
xor
retf
cli
push
and
inc
or
or
scas
dec
pop
test
jb
dec
cli
xor
imul
aas
jl
aaa
xchg
dec
enter
jo
inc
pop
push
mov
sbb
inc
pop
(bad)
push
jl
addr16
stc
inc
mov
out
(bad)
fdivr
or
out
add
ret
and
sti
clc
out
sub
jle
imul
sbb
cwde
pop
movs
and
popf
sbb
cmc
mul
and
ficom
dec
sar
sbb
fwait
dec
cmps
xor
or
mov
push
ins
jp
and
das
ror
jne
dec
les
mov
sub
gs
cmp
ja
dec
lock
das
xchg
cmp
add
ss
cmp
dec
inc
adc
adc
(bad)
adc
or
mov
jmp
fsubr
jnp
push
and
push
pop
je
sbb
sbb
clc
and
popf
fmul
dec
movs
test
ffree
sub
loope
pop
push
add
xor
rcr
inc
dec
movs
xchg
xchg
mov
sbb
inc
push
adc
xor
sbb
jmp
jnp
mov
movs
mov
test
call
sub
stos
cmp
or
fidiv
mov
cdq
sbb
(bad)
mov
nop
mov
call
jae
movs
cmp
pop
retf
sbb
test
out
neg
ret
scas
or
cmp
fcomp
inc
dec
or
sub
mov
sbb
loopne
dec
push
add
sub
mov
push
inc
mov
sar
(bad)
and
out
retf
mov
jle
call
xor
xchg
outs
test
lods
jne
enter
push
dec
pop
jae
aaa
push
xchg
aas
and
pusha
and
jne
push
sbb
inc
pop
clc
lods
les
mov
addr16
cdq
iret
sbb
jl
cmp
add
loopne
mov
gs
and
jb
popa
out
ds
inc
leave
mov
aad
sbb
movs
mov
fmul
sahf
sbb
test
movs
push
sti
sub
inc
stos
je
add
pop
xchg
leave
xchg
aaa
inc
adc
pop
leave
dec
dec
fucomi
xlat
mov
and
and
sub
pop
mov
cmp
fisub
sbb
in
retf
sub
mov
imul
and
fist
push
fisubr
sbb
mov
call
cmp
sbb
imul
sbb
adc
xor
out
ins
popa
jg
ja
pop
mov
retf
push
stc
mov
xchg
push
scas
out
lock
rcl
add
adc
(bad)
mov
jmp
adc
(bad)
movs
jbe
dec
mov
cmps
pop
mov
shl
sub
push
mov
adc
mul
not
mov
mov
cmp
das
cmp
hlt
or
enter
or
adc
xor
dec
(bad)
test
sub
push
lea
cmps
fsub
mov
jno
sub
mov
pusha
rcl
lea
add
push
ret
sahf
cld
adc
repz
mov
dec
ins
push
pop
jo
adc
mov
daa
jmp
inc
pop
pop
call
fptan
jnp
xchg
mov
aam
mov
aaa
iret
add
pushf
xor
and
pop
xchg
gs
in
(bad)
fsub
or
xchg
jns
mov
pop
cmc
sar
fdivr
xchg
inc
sub
push
ja
adc
pop
jno
adc
pusha
adc
cmp
or
mov
sahf
daa
sar
or
lds
sub
xchg
mov
jbe
push
das
add
into
xor
dec
xor
bound
add
mov
retf
mov
adc
and
das
push
push
mov
in
mov
add
dec
retf
inc
sbb
cmp
cmp
sar
inc
or
mov
loope
call
mov
out
ja
xchg
jnp
outs
push
xchg
add
jl
sbb
ret
mov
aaa
add
mov
adc
jae
pop
push
sbb
adc
push
dec
jbe
xor
push
cli
cli
frstor
cs
(bad)
out
cli
and
sub
loope
popf
das
clc
xchg
push
stos
mov
in
int3
call
lods
(bad)
mov
enter
std
aam
mov
push
push
fsub
popf
(bad)
xor
loope
daa
(bad)
xor
loop
mov
cmp
cdq
adc
dec
rol
add
xchg
pusha
and
arpl
inc
cmps
and
pop
loop
fwait
sbb
xchg
xor
fidiv
jb
xchg
rol
nop
mov
cmp
inc
iret
div
out
cwde
pop
cmps
mov
dec
jae
mov
cmp
push
pop
enter
jo
push
ficom
add
loopne
xor
and
call
mov
pop
cmp
push
pop
push
sti
repnz
or
mov
sub
dec
bnd
imul
cdq
mov
into
jnp
test
add
retf
rol
pop
stos
bound
pop
mov
jg
push
(bad)
push
repnz
add
push
ins
mov
aas
hlt
rcr
jge
dec
nop
and
xor
jae
jp
and
dec
push
jo
sbb
sbb
inc
jl
mov
leave
(bad)
stc
or
jns
sub
loope
add
rol
push
(bad)
adc
pop
jno
test
adc
scas
fadd
icebp
adc
std
sahf
adc
std
pop
and
das
push
mov
cld
cli
add
inc
out
repnz
sbb
(bad)
and
lahf
ins
xchg
sub
sub
dec
rcl
movs
adc
cmp
add
dec
cs
(bad)
imul
push
movs
sub
mov
jmp
jnp
retf
fadd
cmp
sbb
xor
dec
sbb
ins
leave
inc
out
(bad)
pop
cmp
adc
je
out
and
fidivr
add
movs
jae
xor
mov
mov
pusha
xor
jmp
das
mov
cwde
pop
jnp
mov
adc
lds
xchg
jnp
inc
aaa
push
mov
or
shr
mov
arpl
adc
mov
inc
cmp
push
inc
retf
popa
mov
mov
cld
test
dec
jle
add
jmp
(bad)
ins
arpl
gs
lods
call
inc
cmps
out
mov
jle
push
pop
mov
ins
pop
lea
mov
test
in
mov
outs
pop
mov
cmps
sub
js
cmc
iret
shr
fcom
(bad)
int3
aas
and
sbb
sbb
repz
pushf
loope
adc
xor
int3
pop
nop
xlat
add
adc
pop
call
push
cmc
nop
std
mov
xor
pop
jmp
pop
push
(bad)
mov
test
(bad)
cmc
sbb
enter
clc
bound
(bad)
sbb
mov
out
pop
ins
pop
sub
fwait
add
call
fild
lahf
ror
aam
ss
mov
repnz
mov
loopne
inc
jmp
push
push
and
xchg
cmc
shr
out
shr
add
(bad)
ds
jae
enter
int3
pop
jge
inc
dec
inc
and
std
cld
or
xor
leave
rol
inc
sar
xchg
stc
pop
leave
lahf
push
or
in
or
movs
gs
fiadd
xor
cmp
xor
dec
xor
js
xchg
add
push
add
mov
jecxz
leave
jl
adc
fbld
mov
push
or
push
push
jae
sbb
fisttp
sub
inc
mov
mov
xor
test
lods
shl
jmp
ret
push
fs
xchg
(bad)
jno
sbb
movs
cdq
out
sub
ss
pop
dec
dec
addr16
jle
fsubr
mov
mov
out
aad
fldcw
mov
ds
fstp
sbb
ins
call
cmp
mov
push
(bad)
iret
cmp
push
cmp
mov
lock
gs
and
pop
and
retf
out
repnz
addr16
sub
jo
xchg
mov
mov
ins
sahf
mov
push
add
das
mov
(bad)
push
add
jle
pop
mov
fdivr
mov
add
aam
sub
imul
pop
push
inc
scas
ins
ins
adc
inc
xor
les
cmp
cmp
adc
sbb
ss
jl
lock
and
cmps
leave
(bad)
leave
jb
pop
cwde
jg
retf
jmp
iret
loop
stos
push
xlat
rol
pop
sahf
es
mov
add
test
jp
rol
repnz
jecxz
out
inc
call
loopne
and
jmp
ja
pop
outs
mov
jno
xor
sbb
xchg
retf
stc
dec
scas
ja
or
add
jl
ret
or
rcr
or
add
jne
dec
icebp
mov
xchg
(bad)
mov
add
sub
pop
cdq
sbb
dec
in
test
cmp
cwde
inc
stos
xchg
inc
jle
add
addr16
sub
dec
sub
pop
lahf
jecxz
popa
fdiv
sub
test
lea
xlat
and
inc
adc
mov
xlat
jl
xchg
xchg
popa
cld
addr16
and
je
mov
iret
clc
sub
ret
add
dec
shl
shl
cli
mov
aam
mov
xlat
mov
jg
xchg
push
and
sub
sbb
cmp
cmc
cwde
pusha
push
int3
dec
sub
vmovaps
mov
(bad)
repz
jecxz
test
cmps
xchg
fmul
imul
mov
xor
das
ins
test
and
cli
push
or
out
sbb
or
mov
out
leave
popa
sub
cmp
rcl
fdivr
add
add
ror
(bad)
fbstp
fisub
and
and
out
jne
aam
cmp
or
mov
push
mov
retf
adc
jle
daa
mov
jge
cmp
or
or
lods
aam
mov
pop
jnp
not
jne
sti
repnz
jne
pop
add
jmp
popf
aam
(bad)
or
inc
pop
mov
push
stos
ret
push
dec
push
loope
fild
mov
std
jmp
test
hlt
cwde
sub
and
push
mov
or
cmp
jbe
test
hlt
(bad)
sbb
(bad)
sub
(bad)
jmp
mov
sbb
jno
(bad)
frstor
and
push
js
jns
sub
sub
push
sub
cmps
push
aas
adc
mov
jmp
xchg
sbb
leave
cmp
jg
mov
adc
push
jmp
inc
call
xor
jbe
and
add
sbb
add
sub
inc
sub
lahf
js
jg
and
add
icebp
ss
add
movs
mov
dec
out
rcl
pop
or
pop
outs
sbb
shr
and
push
aaa
cmp
mov
clc
xor
fidiv
sub
rcl
aaa
scas
cdq
sub
mov
dec
jno
leave
and
xchg
lods
ins
outs
adc
jno
pop
dec
test
imul
jae
jg
ret
movs
and
mov
std
xlat
test
(bad)
sti
data16
js
ds
addr16
iret
pop
or
icebp
js
mov
int
or
sub
jbe
stos
lea
xchg
in
lods
pop
mov
push
hlt
xchg
pop
inc
mov
fwait
loop
sub
outs
adc
sub
addr16
std
mov
or
fstp
push
mov
jno
inc
jp
retf
sub
inc
pop
xor
icebp
fcomp
movs
rol
and
adc
cmp
fstp
add
loopne
jno
adc
inc
pop
jne
xchg
ins
or
cwde
mov
dec
cmp
add
in
cmp
mov
push
pop
mov
xor
clc
or
xchg
jg
xor
jb
mov
xor
in
je
mov
or
sbb
jp
dec
loop
pop
cld
lods
loopne
leave
push
jmp
xchg
adc
and
mov
pop
into
push
sbb
adc
(bad)
sub
pop
inc
inc
test
jmp
sbb
daa
push
mov
pop
xchg
jg
mov
add
or
xor
fcomip
jae
jg
je
xor
or
ss
imul
and
ret
call
xor
cmp
dec
push
clc
icebp
stc
jl
jns
stos
xchg
sbb
sar
jmp
pushf
lods
xchg
mov
(bad)
xchg
and
or
push
gs
inc
xor
cmps
mov
fucomp
adc
push
push
shr
jmp
pusha
add
sub
dec
jecxz
or
push
inc
inc
and
dec
in
js
jle
dec
jecxz
xlat
ficom
push
xchg
push
mov
push
fs
push
scas
push
mov
adc
push
cmp
and
test
jl
arpl
push
daa
stc
lahf
pop
mov
iret
outs
push
add
pop
push
retf
cmp
mov
scas
retf
push
cs
jbe
gs
pop
jbe
adc
pop
pop
out
bound
add
stos
(bad)
dec
mov
push
js
push
xchg
push
jl
sar
mov
adc
xchg
dec
outs
fstp
rcr
jb
push
cs
or
sub
cmp
jnp
cmp
pop
leave
call
push
cld
movs
jle
sbb
cmps
(bad)
dec
adc
and
jbe
and
mov
data16
xor
inc
pop
test
popa
repnz
idiv
adc
in
inc
xchg
cmps
pop
pusha
movs
or
clc
outs
pop
pusha
inc
mov
jae
jnp
pop
lods
fcmovbe
(bad)
in
(bad)
mov
fidivr
setl
sbb
xchg
inc
popaw
daa
pop
mov
out
mov
jp
and
leave
in
fld
dec
jnp
mov
pop
loopne
push
or
sub
mov
iret
sahf
out
movs
fadd
sub
add
es
loop
push
and
mov
mov
or
movs
mov
and
in
mov
sbb
test
movs
mov
rcr
and
imul
and
cmps
js
js
out
add
in
outs
(bad)
loopne
sbb
xchg
jp
call
and
out
push
push
ud0
sub
das
and
cmps
mov
stc
jns
in
pop
xchg
jns
mov
cmp
or
mov
mov
push
inc
pop
cmc
pop
adc
and
jmp
jns
sti
out
inc
sbb
sbb
mov
dec
push
jbe
jecxz
push
mov
mov
sbb
dec
push
int
les
cmp
cmp
jecxz
cmp
add
je
movs
mov
cmps
and
shl
xchg
repz
jecxz
pop
jle
pop
and
stos
and
cmc
jbe
add
sbb
and
cmp
jle
jle
ja
mov
xor
jbe
sub
cdq
mov
jns
xor
cmp
(bad)
outs
add
fs
movups
jmp
stc
pusha
movs
sbb
lock
(bad)
jle
add
scas
loop
add
dec
lods
mov
pop
jne
sub
lea
loope
or
imul
xchg
sbb
int3
pop
or
ins
pop
add
imul
pushf
adc
xchg
dec
jg
fcmovu
test
mov
out
mov
inc
jmp
mov
lock
sbb
push
int
push
jg
sub
dec
push
(bad)
and
leave
and
jno
fmul
adc
mov
sahf
sbb
in
outs
outs
bound
mov
cmp
jbe
mov
cmp
loop
mov
call
test
into
dec
add
sbb
pop
not
mov
mov
ins
pop
je
cmps
je
shl
push
fs
pop
(bad)
jle
push
add
(bad)
inc
fs
cmp
mov
mov
cld
pop
push
adc
mov
pop
je
sahf
jb
push
movs
jnp
mov
shl
mov
cmc
jo
enter
push
and
pop
fistp
outs
mov
and
ja
imul
xchg
dec
adc
outs
or
bound
test
mov
dec
arpl
and
dec
daa
pop
lods
movs
test
call
jb
ds
mov
outs
push
ja
fsubr
sbb
fcomp
mov
stos
cwde
pop
sbb
pop
fadd
xor
sbb
pop
imul
inc
mov
shl
xor
cld
and
cmp
fimul
imul
cli
jecxz
repz
ins
(bad)
fnstenv
inc
dec
stos
inc
mov
push
mov
adc
fwait
jg
lea
pusha
xchg
jmp
mov
fidivr
push
jo
xor
dec
cwde
and
push
mov
and
jge
jge
popf
sub
xchg
jne
pop
nop
xor
stos
sbb
cmps
jb
pop
cmps
sbb
jno
stos
enter
dec
aaa
nop
test
out
ja
dec
mov
sub
pushf
pop
jne
call
mov
aaa
xchg
push
cwde
aad
lods
sub
stos
fucompp
cmc
jbe
lds
aaa
(bad)
int
cmp
cmp
mov
xchg
cmp
cmp
sub
mov
out
mov
outs
mov
adc
enter
adc
sub
loope
jle
rcl
cmp
lahf
cmp
sub
out
mov
mov
jnp
or
mov
mov
xchg
(bad)
push
addr16
xor
mov
push
scas
add
jnp
test
mov
and
push
adc
addr16
adc
push
sub
sbb
and
pop
loope
or
sahf
out
out
mov
imul
push
mov
push
cmp
js
mov
cwde
inc
les
arpl
jle
scas
or
jns
mov
popf
push
into
fist
ins
or
inc
repz
mov
cmp
xchg
jecxz
inc
and
push
mov
jp
cmp
adc
dec
(bad)
out
xchg
mov
jns
pop
addr16
clc
hlt
shr
in
inc
scas
or
mov
xor
and
sub
stos
pop
lea
push
push
test
cmp
sbb
test
shl
mov
mov
ss
add
nop
adc
xor
stc
adc
ret
jns
xchg
or
cmp
cdq
dec
fs
fisttp
jmp
popa
loop
xchg
mov
and
leave
mov
xchg
push
test
xchg
adc
neg
add
(bad)
std
sti
outs
mov
js
hlt
xor
out
inc
test
adc
outs
hlt
lea
cmp
push
outs
(bad)
cs
pusha
mov
adc
test
cs
mov
mov
sub
sub
iret
push
(bad)
adc
(bad)
in
xchg
mov
jmp
or
cmc
in
pop
mov
push
adc
shl
call
pop
mov
stos
pop
js
or
add
jnp
pop
(bad)
cli
(bad)
ror
mov
int
in
movs
sbb
jmp
lahf
pop
je
rol
addr16
inc
jmp
fnsave
or
imul
ins
cs
pop
retf
mov
sbb
mov
addr16
hlt
ins
shr
cmps
out
add
jne
cld
leave
jae
pop
shl
xchg
pop
(bad)
sub
hlt
cdq
add
mov
cmp
cmp
lods
outs
push
das
mov
(bad)
ja
test
xor
lds
movs
(bad)
mov
arpl
xor
fwait
mov
cmc
adc
out
sbb
cmc
xchg
and
adc
mov
pusha
mov
fidiv
jno
push
add
and
scas
mov
inc
les
adc
imul
(bad)
pusha
push
xor
jmp
mov
push
push
mov
pushf
or
outs
add
mov
mov
ret
stc
push
dec
dec
or
(bad)
add
push
into
push
data16
sar
xor
mul
inc
inc
lods
ins
push
ds
push
sbb
cwde
pushf
je
popf
add
push
xlat
adc
sub
xlat
sbb
pop
sub
clc
cld
push
rcr
jp
adc
xor
push
addr16
mov
xor
ss
outs
fst
push
lods
inc
popa
push
xor
add
or
out
inc
cmc
loop
dec
and
icebp
(bad)
out
ret
cmp
xchg
and
sbb
ss
and
data16
dec
in
ss
dec
pop
cdq
cmp
pop
dec
stos
in
push
fmul
loope
mov
ss
and
clc
ins
cmp
jb
and
lds
sbb
mov
add
push
xchg
adc
adc
sbb
mov
mov
push
jle
xchg
mov
sbb
in
mov
push
out
mov
and
add
(bad)
sbb
sti
jnp
inc
xor
xor
mov
stc
pop
pop
adc
push
js
pop
ror
mov
fisttp
sub
pop
jb
test
add
stos
add
imul
ret
retf
(bad)
jns
mov
cmp
shr
out
outs
stc
add
enter
mov
add
mov
add
aaa
inc
xchg
jae
ret
xchg
(bad)
loope
pop
cmp
add
(bad)
sahf
movs
imul
add
jb
sub
pop
adc
push
push
inc
push
shl
or
inc
inc
cmp
scas
dec
stc
icebp
les
mov
popf
sub
scas
popa
add
jns
mov
cmp
jg
sahf
rcl
fs
dec
mov
retf
ss
mov
sbb
jno
inc
in
dec
test
or
cmc
mov
push
cmp
fnstsw
and
xor
mov
shl
inc
push
jmp
es
es
jl
and
popa
retf
gs
dec
fidiv
adc
push
mov
icebp
pop
xor
loop
mov
mov
push
jno
mov
movs
or
pop
sti
dec
sbb
inc
sbb
push
test
jmp
mov
retf
inc
mov
push
scas
mov
ss
xlat
xchg
(bad)
jb
sbb
jns
jne
dec
fld
push
add
or
push
ret
or
mov
sbb
cmp
aaa
jl
dec
(bad)
pusha
pop
out
div
sbb
push
hlt
push
pushf
xor
sbb
test
sbb
xchg
inc
ror
pop
adc
sub
mov
ror
in
lods
push
jecxz
dec
js
data16
jns
mov
dec
nop
mov
xor
mov
inc
push
xor
sub
and
jmp
jnp
sub
jne
push
ret
stc
push
out
jno
clc
cmp
mov
xlat
xchg
out
push
dec
inc
gs
mov
(bad)
mov
test
lock
jl
dec
lock
xchg
jne
fmulp
adc
aaa
into
(bad)
repnz
push
gs
sar
jmp
push
push
push
imul
sub
cmps
call
jecxz
rcr
loopne
adc
jnp
xchg
push
xchg
sbb
adc
jns
retf
fild
ins
push
add
pop
jge
stos
into
push
jno
push
jnp
xor
push
repz
ret
cmps
bound
adc
aaa
xchg
xchg
fnsave
clc
nop
jno
sub
or
jb
push
add
pushf
dec
icebp
cmp
adc
in
into
mov
add
xor
stc
push
sub
push
(bad)
mov
add
dec
add
xlat
push
out
into
fnstcw
push
pop
push
or
pop
and
add
push
fidivr
xor
clc
fdivr
xor
dec
jmp
mov
clc
adc
ins
xchg
push
addr16
push
popa
mov
inc
mov
lds
fwait
dec
(bad)
jmp
jbe
mov
or
sar
in
cmps
cmp
sbb
lods
enter
pusha
and
and
and
fild
ds
sub
dec
dec
inc
sub
add
out
dec
hlt
mov
fwait
jbe
call
mov
jne
sbb
sti
push
pop
fcmovnbe
xchg
inc
or
mov
dec
pop
sbb
lods
jne
mov
mov
data16
cmps
dec
fs
popa
jle
stos
adc
pop
int3
sbb
or
outs
or
jl
and
jno
inc
pop
dec
(bad)
xor
push
pop
and
daa
popf
jecxz
stc
ins
pushf
loopne
xor
lods
mov
sar
idiv
mov
dec
mov
push
add
mov
popa
int3
jo
sub
dec
fstp
in
jb
ins
call
cmp
je
cmp
enter
push
out
jbe
(bad)
mov
cmps
int3
in
(bad)
cs
f2xm1
mov
(bad)
jecxz
push
out
cmp
call
push
fmul
je
pop
dec
fs
out
dec
ins
retf
cmp
and
retf
in
add
mov
dec
jp
mov
dec
es
cmc
inc
sub
inc
xchg
mov
pop
xor
sbb
or
sar
sub
dec
push
in
push
push
xor
pop
inc
sub
jo
mov
inc
pop
adc
pop
adc
jl
iret
jmp
jns
push
pushf
inc
daa
add
sbb
add
add
sbb
mov
cmp
xlat
pop
jnp
repnz
or
add
mov
scas
rcl
dec
mov
sbb
add
stc
out
je
mov
inc
mov
std
jne
cmp
push
std
fstp
pop
push
lds
jno
jmp
jmp
enter
or
mov
pop
dec
cmp
outs
or
les
mov
cmp
mov
cmps
in
inc
movs
movs
bound
pop
lea
out
jb
(bad)
sub
pusha
inc
je
push
punpcklbw
pop
xor
rol
sbb
add
ds
dec
add
fsub
mov
(bad)
xchg
fs
mov
cwde
out
pop
add
sub
jbe
push
inc
movzx
push
movs
in
push
test
inc
xchg
cs
scas
ins
push
jle
inc
xor
ror
scas
and
inc
sbb
fisttp
bound
cs
inc
push
in
jmp
mov
daa
in
or
fisubr
test
inc
xor
sbb
aas
add
xor
das
stos
mov
and
pop
dec
into
or
loopne
out
retf
xchg
imul
ins
sub
loope
stos
aam
push
test
jbe
(bad)
outs
iret
lods
jae
retf
into
in
xchg
add
mov
jmp
out
scas
cli
xchg
xor
in
aas
mov
cmp
mov
pop
xchg
iret
rcr
sahf
mov
mov
mov
mov
push
mov
push
xor
push
sbb
jge
ret
mov
jae
test
adc
aaa
sar
add
ins
push
pushf
ret
pusha
and
pop
mov
cwde
(bad)
mov
push
push
xchg
sbb
adc
or
pushf
and
popf
stos
adc
pop
lahf
addr16
jb
xor
das
repnz
adc
inc
push
xchg
aaa
sub
push
sbb
mov
sub
(bad)
cmp
iret
inc
dec
js
cmp
loop
jbe
push
push
mov
ss
ret
add
std
shl
jnp
jg
sbb
xchg
add
call
(bad)
add
and
or
cs
sbb
arpl
out
outs
push
je
jge
sub
xchg
add
idiv
addr16
into
pop
jg
cmps
and
mov
aas
mov
dec
imul
mov
leave
retf
es
push
ret
pushf
mov
fimul
dec
ins
push
and
pop
fwait
shl
outs
in
stos
rcl
jle
mov
loope
dec
and
jmp
psllw
add
enter
popf
into
and
inc
ins
pop
mov
pushf
popf
push
xor
mov
jbe
pop
sub
add
pop
neg
(bad)
pop
dec
int
xchg
sub
pop
in
dec
xchg
sub
(bad)
cwde
stc
jmp
pusha
add
mov
dec
jmp
add
sub
ds
cmp
sbb
icebp
sub
aas
pop
sar
js
out
cmp
sbb
fsubr
cmp
pop
xor
sbb
gs
imul
addr16
sbb
xchg
adc
imul
stos
jge
retf
mov
pop
cdq
outs
mov
les
scas
or
add
in
jecxz
lods
jb
stc
jle
outs
cmp
fisttp
stc
ins
bts
cmp
pushf
cmp
sub
call
push
mov
xor
sbb
jb
std
movs
cs
pusha
int3
int3
mov
mov
repnz
cdq
cdq
inc
sbb
and
and
lds
aad
rol
mov
inc
pop
into
sbb
sbb
popf
data16
jmp
mov
sub
adc
jbe
xchg
loope
add
jns
xor
pop
mov
inc
out
dec
cmc
stos
ret
inc
cmp
inc
pusha
adc
mov
or
sbb
rcr
retf
pop
xor
mov
jb
movs
loop
sub
popa
enter
stos
adc
push
sub
into
ins
and
inc
xor
push
cmp
popf
inc
sbb
lods
ss
jp
ins
cli
cmp
mov
pop
mov
sbb
push
in
in
cwde
adc
cmp
(bad)
clc
jge
cmp
sub
jae
jg
cwde
dec
and
xchg
add
pop
jmp
jecxz
dec
and
sbb
xchg
fild
ins
pop
fcmovne
jo
(bad)
ret
inc
outs
cli
jo
mov
mov
mov
xchg
xor
mov
jnp
lods
mov
inc
dec
add
pop
clc
scas
push
sub
cdq
data16
loopne
lock
lahf
fstp
es
dec
cmc
inc
pop
xchg
es
pusha
popa
sub
pop
das
sbb
xchg
mov
clc
jl
jo
test
(bad)
cmp
test
adc
mov
inc
push
retf
mov
sar
ins
push
out
cmp
fcom
mov
inc
rol
bound
into
scas
xchg
or
inc
icebp
loope
dec
cmp
popa
inc
in
mov
jns
pop
mov
mov
shl
jbe
rol
leave
pop
(bad)
outs
imul
in
pop
pop
cmp
scas
out
(bad)
mov
sub
or
enter
inc
std
cdq
pop
mov
pop
scas
outs
outs
rol
sub
mov
inc
and
jbe
test
pop
cwde
stc
ret
add
sub
jb
pop
mov
inc
mov
mov
sub
sar
js
add
mov
sar
(bad)
inc
adc
jno
scas
(bad)
jno
add
push
inc
jmp
fnstcw
scas
test
pop
sub
imul
mov
add
sub
out
scas
xor
out
fmul
push
sbb
dec
push
test
xchg
sub
pop
call
pushf
pop
data16
xor
shr
dec
mov
xchg
stos
adc
mov
ret
xor
cmp
bound
sbb
jmp
rol
fdiv
sub
out
aas
pusha
neg
jno
lahf
pop
mov
(bad)
mov
hlt
ja
shl
xchg
push
jg
jne
inc
mov
push
adc
sbb
scas
push
daa
mov
and
sbb
push
iret
xchg
xor
mov
stc
loope
sbb
lahf
sahf
adc
fidivr
cld
jno
ss
repnz
pusha
rcl
xor
ss
aaa
mov
sbb
cmp
add
push
jno
std
sbb
push
jnp
mov
aad
sbb
mov
pop
mov
addr16
add
and
sar
dec
inc
leave
jle
xchg
mov
xor
mov
xor
dec
lods
pop
mov
daa
neg
das
js
(bad)
in
and
cdq
in
cmps
arpl
sar
xchg
push
sub
jecxz
or
pop
sbb
mov
test
mov
xchg
mov
icebp
adc
(bad)
and
jae
stos
shl
aas
sbb
jg
and
sbb
(bad)
repz
leave
jb
rcr
cs
rcl
mov
js
imul
and
fiadd
fs
dec
movs
fiadd
mov
add
inc
inc
xchg
retf
cmps
cli
fwait
inc
pop
jnp
mov
inc
cmp
aas
lock
jno
mov
scas
mov
mov
ss
ins
je
imul
jmp
sbb
mov
ret
jecxz
bound
ret
sub
cmp
xchg
icebp
xchg
aas
inc
adc
cdq
call
pop
jbe
out
push
pop
push
div
lock
mov
cmp
sbb
dec
push
sbb
into
jae
sbb
gs
push
jne
les
jl
into
sbb
mov
(bad)
stc
push
xor
aam
and
jns
out
and
mov
push
push
or
enter
jle
pop
fnstsw
and
loop
div
jg
mov
daa
push
mov
inc
lods
dec
mov
sbb
sub
aaa
push
mul
add
enter
cmp
inc
(bad)
adc
pop
lock
push
push
pushf
mov
and
ret
dec
mov
jbe
inc
adc
jns
xor
cld
jne
cmp
cmc
into
jnp
adc
pusha
dec
test
push
scas
push
sub
push
aam
inc
push
into
sbb
mov
push
and
loop
inc
repz
jae
das
jmp
jecxz
cmp
ja
pop
or
mov
jp
cmp
mov
sbb
xchg
outs
fs
cmp
into
pop
in
leave
mov
sbb
cmp
and
add
mov
jb
cmp
stos
dec
ja
outs
push
pusha
in
xor
pop
ror
ins
sbb
test
mov
pop
enter
add
mov
inc
push
movs
lahf
jnp
dec
mov
jbe
imul
vmaskmovdqu
jmp
inc
stos
push
jbe
iret
stc
cs
movs
adc
fsub
(bad)
inc
jmp
in
add
ret
push
fst
mov
adc
and
jae
adc
shr
or
or
fmul
outs
ror
dec
aad
call
jge
and
(bad)
sbb
sbb
mov
mov
cmps
inc
pusha
or
enter
pusha
inc
arpl
add
popa
das
js
lahf
imul
cmp
mov
xlat
ins
mov
mov
add
mov
jmp
mov
or
iret
mov
mov
push
clc
sub
sbb
int3
lods
mov
or
xlat
pop
prefetch
in
imul
test
clc
xchg
sbb
jb
mov
in
movs
retf
jmp
xchg
mov
or
jl
add
push
and
mov
mov
lods
dec
arpl
cwde
jbe
adc
xchg
icebp
popf
cmp
pusha
push
xor
out
cmp
fisttp
adc
rol
mov
inc
sub
cs
add
les
stc
call
inc
xchg
popf
into
mov
cmp
cmp
stc
ins
xor
push
or
out
cmps
repz
mov
and
outs
mov
inc
adc
shl
sub
or
pop
stc
ja
mov
lock
mov
repnz
mov
imul
pop
test
scas
adc
adc
mov
or
inc
cli
jnp
jae
jmp
jns
pop
or
push
inc
fs
xchg
imul
mov
(bad)
hlt
jne
aas
sbb
push
popf
aam
jo
pop
inc
adc
rol
sti
popf
mov
xor
mov
push
pushf
out
loopne
pop
loop
call
mov
and
add
xor
lock
mov
ds
xchg
je
jmp
retf
jbe
(bad)
jmp
rcr
movs
iret
push
jecxz
xor
pop
pop
adc
dec
fdiv
cmc
jno
cwde
cli
adc
push
sub
mov
icebp
inc
and
in
mov
jbe
outs
xchg
mov
sub
(bad)
test
shr
fdiv
sbb
popa
jmp
shl
gs
js
aad
pushf
xlat
(bad)
push
in
adc
in
outs
imul
scas
(bad)
sub
imul
fidiv
gs
mov
dec
mov
out
inc
sub
mov
or
add
sub
ror
addr16
cs
pop
add
repnz
sbb
push
rcr
jae
sub
mov
sub
xchg
xchg
outs
add
add
push
xor
mov
aad
sbb
dec
pop
inc
loopne
inc
xchg
add
dec
(bad)
pusha
stc
jne
push
mov
pop
inc
cmp
aad
pop
mov
mov
and
ins
mov
jne
dec
cmp
xor
mov
mov
dec
jo
add
or
xchg
adc
dec
inc
call
sbb
sbb
cmp
adc
cli
and
mov
mov
aaa
div
sbb
inc
push
movs
dec
inc
sub
ja
adc
sbb
cdq
add
aaa
lea
enter
mov
daa
sub
inc
mov
xor
xor
ret
lods
jbe
out
retf
sub
sub
adc
mov
loop
add
mov
dec
cmp
loop
jbe
rol
cmps
sub
jl
repz
lea
ds
cld
je
inc
aad
adc
fs
repz
mov
cwde
enter
jae
lds
or
pop
dec
jge
js
sahf
fisttp
pop
std
adc
ret
xor
ret
sub
loope
pop
fwait
or
or
push
sub
sub
shl
sub
inc
outs
add
dec
push
ja
mov
push
sar
sbb
push
retf
sub
div
pushf
lahf
outs
push
nop
cli
push
ror
test
pusha
or
cmp
mov
out
sbb
scas
fsubr
aad
jmp
mov
mov
shr
ja
pop
je
mov
xor
push
stos
and
and
lds
mov
shr
mov
out
push
push
sub
push
push
jmp
es
xor
dec
sub
pop
mov
jb
pop
and
and
mov
pop
cmc
iret
in
(bad)
pop
push
sub
add
mov
dec
jno
clc
hlt
inc
ficomp
sti
pop
mov
xchg
repnz
inc
addr16
sbb
jp
daa
and
dec
pop
push
test
sbb
push
jmp
and
es
mov
(bad)
call
or
lods
mov
inc
add
lock
hlt
in
xchg
pop
jo
jbe
xchg
xchg
js
push
adc
inc
std
sub
aaa
cdq
mov
sbb
sub
sub
push
cmps
addr16
jae
xor
dec
imul
sub
in
imul
cmp
push
bound
in
adc
out
stos
mov
dec
scas
int
sahf
inc
push
(bad)
cmps
ins
fist
sbb
xor
pusha
rcr
mov
inc
sub
xor
adc
in
inc
xchg
int3
ja
jg
adc
and
call
(bad)
(bad)
fdivr
sub
call
and
mov
cli
fwait
jnp
xchg
inc
push
mov
or
loope
push
icebp
mov
jg
dec
dec
jbe
mov
mov
push
dec
or
push
add
lds
jmp
push
and
gs
fcomi
inc
retf
fadd
fs
dec
inc
inc
stos
lods
xor
fnsave
rol
dec
mov
shl
std
mov
pop
loopne
mov
iret
fs
sysret
ds
je
mov
and
out
rol
mov
sbb
xor
jmp
scas
adc
shl
jae
test
cld
mov
add
ds
data16
adc
cmp
add
sbb
cmp
popa
inc
loopne
push
sub
dec
jle
push
cli
test
sbb
sahf
rol
jno
jmp
sub
mov
and
out
xchg
fs
or
cmc
aad
or
cdq
dec
dec
and
adc
push
xorps
and
into
es
mov
leave
lahf
popa
test
(bad)
shr
adc
add
test
or
iret
shr
fcomip
adc
(bad)
mov
cli
popf
dec
pop
cld
lea
sbb
jp
or
push
imul
xor
fs
sbb
rcl
dec
sahf
adc
jmp
clc
push
push
inc
xchg
test
mov
ds
out
retf
mov
cmc
add
fldenv
aad
jmp
(bad)
pop
pop
outs
outs
jmp
repz
xor
adc
dec
add
add
sub
mov
dec
cli
jns
and
mov
add
mov
ins
sub
daa
mov
cmps
pop
jmp
inc
rol
inc
xor
pushf
loop
loope
jl
and
push
lds
out
mov
jae
xchg
cmp
iret
pusha
xchg
sbb
xchg
sahf
push
xchg
je
lods
and
js
shl
sub
add
nop
adc
ss
in
hlt
idiv
cmc
stos
push
and
jbe
out
jecxz
push
or
sbb
jnp
mov
test
loope
jnp
dec
scas
push
jecxz
xlat
pop
lahf
adc
and
inc
(bad)
fiadd
pop
into
es
std
inc
test
pop
rol
push
push
xor
inc
dec
xor
sar
dec
push
pop
pop
cli
dec
(bad)
mov
outs
outs
jmp
pop
jne
loopne
add
jno
out
pop
lea
cmp
xor
fld
repz
mov
pop
es
dec
cmp
cmc
outs
inc
in
push
or
aaa
inc
sub
pop
add
cmp
aaa
pusha
and
outs
add
mov
mov
outs
sar
rcr
add
sti
in
ss
sbb
inc
mov
or
lds
add
add
dec
mov
cmp
jnp
xor
out
cdq
test
test
ins
jmp
fstp
mov
push
bound
cmp
pop
aaa
dec
sbb
sub
push
mov
dec
icebp
pop
mov
xchg
xor
pop
mov
jns
cld
sub
jno
push
loop
xor
fstp
pop
enter
adc
jno
icebp
dec
or
xlat
adc
rol
popa
pop
jg
push
mul
mov
arpl
sti
cmps
icebp
jg
or
mov
aas
int3
in
call
push
jg
test
daa
push
mov
dec
test
loopne
nop
test
stos
sub
bound
out
mov
mov
loope
push
cmps
adc
mov
dec
mov
lea
xchg
aas
cmp
les
push
add
xor
fmul
mov
sar
loop
xchg
sub
jb
pop
push
or
jnp
iret
jbe
ret
cmp
xor
or
or
pop
aad
add
cmp
adc
inc
pushf
pop
xlat
or
pop
add
mov
cmp
cmps
mov
or
inc
clc
out
push
adc
loop
push
cdq
cmp
scas
jno
gs
aaa
jae
pop
popf
aad
test
mov
in
sbb
sbb
cs
in
psubsw
outs
push
add
ret
and
mov
(bad)
cmp
xor
or
movs
jns
lahf
mov
and
mov
(bad)
in
hlt
arpl
out
dec
cwde
push
sbb
xchg
nop
js
popf
lds
dec
dec
sti
not
dec
shr
idiv
pop
(bad)
mov
mov
pop
mov
push
add
pop
mov
in
pop
mov
jmp
sar
sahf
dec
call
ror
mov
sti
dec
(bad)
cdq
test
xchg
xchg
jg
movs
mov
das
cmps
lds
xor
add
shl
cmp
adc
test
inc
sub
pushf
xchg
pop
scas
sbb
mov
sbb
push
xchg
xor
lea
and
push
gs
mov
cmp
out
cmp
std
(bad)
aam
jbe
push
push
push
ss
dec
enter
cmp
fxch
lea
or
mov
jecxz
fldenv
pusha
popa
ror
jns
sbb
or
hlt
mov
and
scas
jge
push
dec
or
add
adc
and
int3
shl
push
js
div
xchg
neg
push
dec
ja
dec
sbb
fcom
dec
push
jp
and
cmp
ins
popf
dec
push
cmp
(bad)
js
jl
les
cld
adc
daa
cmp
inc
adc
push
clc
and
xchg
pop
fisttp
mov
cli
addr16
adc
mov
outs
mov
xchg
test
mov
test
shl
dec
mov
push
prefetchwt1
lods
xchg
mov
scas
cmc
loop
add
ret
test
jmp
loope
inc
sbb
jp
in
in
imul
and
ins
jmp
push
jno
xor
aas
fadd
fwait
and
push
cmp
mov
ins
adc
loope
hlt
push
sub
lea
fst
movs
imul
sub
(bad)
xor
and
or
scas
sbb
jne
bound
push
clc
fldenv
xor
rcr
pop
sub
jo
loope
cld
aad
cmp
(bad)
mov
(bad)
cmp
and
dec
loope
inc
pop
(bad)
sub
mov
push
sets
sub
loope
jbe
pop
cmp
imul
stc
mov
dec
rol
dec
inc
(bad)
rcl
cmp
addr16
push
out
xlat
or
xor
stos
sbb
jp
sub
add
and
ret
dec
mov
test
xchg
xchg
sahf
loope
push
mov
aad
shl
dec
imul
pop
jmp
dec
cs
scas
iret
out
xchg
aas
xlat
mov
(bad)
cmps
adc
sub
std
stos
xchg
mov
lds
imul
das
movs
jp
xlat
xchg
xlat
stc
jle
retf
scas
addr16
loope
ins
mov
xor
push
prefetcht2
rol
jnp
data16
pop
pop
daa
dec
loop
dec
jp
jnp
scas
adc
xor
mov
jmp
xor
sbb
test
push
shr
popf
mov
or
call
les
dec
sbb
pop
push
add
add
cwde
(bad)
movs
add
adc
pushf
repz
in
lock
mov
loop
add
adc
xchg
stc
push
mov
mov
cs
pop
jb
push
dec
idiv
cmp
add
cmp
and
adc
cmc
test
push
mov
dec
cmp
adc
xor
cmp
neg
sub
movs
jmp
sbb
adc
imul
cmp
or
mov
add
cmp
jp
or
xor
jmp
adc
mov
pop
xor
out
jb
pop
mul
sub
and
bound
sub
inc
dec
dec
jge
jo
(bad)
or
xchg
sar
add
add
sahf
pop
push
push
jl
les
scas
cmp
aaa
loope
pop
jo
sbb
(bad)
cmc
scas
add
cdq
mov
div
jo
movs
popf
stos
add
dec
adc
mov
push
cld
pop
jge
ins
mov
(bad)
call
scas
push
add
xchg
dec
mov
int3
add
push
push
push
push
mov
inc
retf
xchg
push
add
cmp
call
je
dec
add
popa
scas
xor
xchg
les
inc
mov
dec
or
aam
jb
adc
lahf
(bad)
mul
pushf
mov
jns
mov
jne
push
cmp
sub
ins
jnp
adc
popa
cwde
in
pop
sbb
pop
mov
cmp
(bad)
repz
fcmovnb
or
stc
jb
arpl
(bad)
jbe
jmp
mov
push
jno
addr16
jl
sub
test
mov
mov
shr
dec
mov
mov
xor
mov
cmp
mov
add
push
jecxz
xor
push
push
shr
add
xchg
pop
xor
cmps
sbb
fwait
jbe
xor
mov
data16
mov
mov
jl
xor
arpl
ds
aad
xchg
les
lock
(bad)
add
cmps
sub
ds
xchg
mov
out
jp
pop
xchg
pop
rep
jmp
jle
cmp
icebp
cmp
mov
mov
jle
ror
mov
retf
repz
inc
retf
jne
gs
(bad)
cmp
mov
push
push
mov
shl
rcl
fcomp
sbb
push
inc
push
std
hlt
jmp
and
icebp
fninit
dec
push
xchg
push
fs
addr16
jle
pushf
mov
inc
cmp
loope
and
jno
sub
inc
sub
jge
dec
adc
mov
cli
pop
dec
mov
pop
mov
data16
movs
mov
jns
std
xchg
inc
push
lods
cmp
inc
data16
fnstcw
icebp
(bad)
loope
or
ins
in
adc
cld
(bad)
aam
mov
and
xor
aaa
test
aaa
mov
clc
mov
sub
xor
lods
adc
or
mov
jb
and
out
inc
out
xor
mov
popa
xchg
aam
mov
neg
(bad)
addr16
mov
gs
(bad)
in
mov
jmp
pop
and
jne
in
add
jnp
js
adc
lea
adc
aam
stc
je
push
cli
call
cmc
(bad)
adc
scas
inc
or
aam
scas
sbb
jnp
mov
data16
mov
and
xor
mov
ja
test
rcr
jb
mov
psraw
ds
and
int3
push
icebp
jnp
push
push
mov
xor
push
sub
movs
mul
pop
pop
out
inc
xor
out
xor
sti
sbb
xchg
js
ret
mov
xchg
jns
xchg
sbb
sbb
dec
inc
test
add
sbb
jns
outs
not
inc
ins
xchg
cmc
cs
out
pop
dec
je
mov
xor
cwde
pop
jae
lods
pop
rol
ja
jo
sti
cs
adc
addr16
stos
icebp
sbb
inc
call
add
cs
test
gs
sub
dec
jmp
sub
cmc
ret
fs
jp
pop
inc
fisubr
push
push
out
adc
adc
in
into
pop
into
cmps
cmp
pop
mov
mov
dec
icebp
add
mov
mov
ds
pop
cmc
imul
fwait
int
push
jmp
and
xor
jp
jno
mov
lahf
or
inc
ds
mov
or
pop
mov
pushf
sti
dec
inc
push
xor
repnz
sti
xor
mov
mov
fsub
add
je
inc
inc
stc
or
data16
fst
test
jne
(bad)
lahf
mov
push
xchg
cld
mov
or
cwde
sbb
push
mov
fsubp
mov
mov
mov
outs
jbe
test
mov
daa
adc
fnstcw
jecxz
mov
and
iret
pop
xchg
mov
shl
inc
push
call
lds
inc
jl
inc
ds
push
dec
ins
jnp
xchg
adc
xor
sub
push
cmp
cmps
jne
pop
mov
dec
xchg
dec
retf
jmp
outs
or
mov
cld
push
fs
clc
aam
xchg
pop
jp
mov
ss
or
or
mov
or
sub
inc
pop
test
repz
or
iret
inc
jl
xor
pop
lea
mov
rcl
xor
rol
repz
fbstp
jmp
cwde
mov
stc
loopne
dec
sub
push
loop
sub
pop
(bad)
ins
fnstsw
mov
mov
outs
mov
and
mov
or
push
cmc
add
call
aad
js
mov
mov
xchg
dec
ja
lods
jp
xor
mov
(bad)
std
or
ror
retf
std
idiv
mov
jne
mov
lea
test
dec
lods
pop
cmps
push
jp
inc
dec
push
and
jmp
sub
xchg
cmp
jge
imul
rcl
(bad)
(bad)
nop
call
jbe
add
push
je
add
neg
pusha
jp
mov
push
and
pop
xor
push
sub
in
pop
out
jmp
call
in
dec
out
in
fsub
iret
and
push
loope
jb
scas
add
sbb
inc
mov
inc
ds
add
nop
push
mov
pusha
outs
daa
aaa
imul
and
and
xchg
(bad)
bound
popf
jmp
lock
sub
outs
pop
xor
mov
icebp
(bad)
mov
cmp
les
ins
dec
sbb
in
jae
test
add
inc
lods
jno
fnstsw
xchg
xchg
push
cmp
and
call
push
lea
sbb
inc
jmp
mov
rcl
enter
ins
jno
ret
inc
std
ds
or
retf
or
xchg
cmc
sub
push
cmp
cmp
jle
movs
dec
das
mov
ret
cmps
dec
ja
shr
retf
mov
xor
dec
mov
jmp
mov
push
mov
adc
neg
add
ja
or
inc
mov
je
jmp
cmc
stos
jne
aas
pop
mov
in
xor
or
leave
mov
out
es
sbb
clc
shl
jp
in
scas
fwait
mov
pop
mov
cmps
hlt
pop
xor
jp
or
bound
and
mov
std
sbb
mov
pop
js
popa
pop
arpl
inc
(bad)
push
pop
push
movs
xchg
pop
mov
jno
div
and
daa
cs
(bad)
loopne
xchg
xor
idiv
jo
sub
xchg
or
mov
mov
mov
push
jmp
and
ret
sub
or
in
xor
xlat
gs
pop
loop
or
dec
repnz
jmp
test
add
cs
fcom
repnz
dec
push
cld
add
xchg
(bad)
sub
xor
mov
dec
gs
test
or
sub
dec
or
hlt
add
xchg
push
push
fisttp
js
cli
(bad)
movs
pop
and
repz
fdivr
cmp
lahf
ds
mov
mov
or
into
ror
out
adc
mov
je
and
adc
iret
mov
mov
jg
out
xchg
sub
xchg
xor
xchg
mov
mov
loopne
dec
rcr
mul
cmc
sbb
xchg
pop
pop
mov
and
xlat
rol
popf
in
push
dec
push
jle
or
sar
out
xchg
clc
or
mov
pusha
push
je
jne
mov
mov
push
dec
and
sbb
push
mov
adc
ret
jo
push
jo
and
in
inc
xor
hlt
add
jae
leave
leave
movs
xor
call
and
loop
xor
mov
int3
cs
mov
cmps
jne
inc
add
pop
popf
mov
repnz
jecxz
pushf
xlat
out
jge
dec
dec
pushf
mov
jmp
ret
xor
pop
cmps
push
dec
mov
lds
sbb
out
ins
mov
cs
lock
pop
(bad)
retf
push
pop
jo
xchg
mov
imul
movs
jmp
repnz
cli
scas
stos
dec
ror
xchg
mov
not
aaa
test
push
sbb
mov
ret
cdq
inc
mov
adc
call
in
pusha
mov
mov
popf
pushf
das
xor
and
call
pop
in
jno
inc
mov
fs
add
std
add
outs
push
test
sahf
adc
lahf
das
stos
push
xor
in
jmp
rcr
mov
cs
add
push
inc
nop
jl
mov
push
call
fnstsw
dec
jns
in
pop
ins
sbb
ror
dec
mov
pop
jmp
in
outs
xchg
cmps
sub
cmc
push
leave
pop
(bad)
cmc
imul
arpl
adc
mov
fs
mov
iret
das
cli
cs
xchg
movs
sbb
clc
cmp
dec
es
push
jecxz
pop
into
jo
push
sbb
shr
dec
dec
pop
rcl
pusha
sar
in
or
hlt
fisub
lea
xchg
sbb
xor
push
mul
push
int3
or
adc
(bad)
mov
mov
jl
hlt
ret
jmp
call
jno
pop
and
cmp
fcom
fwait
push
out
or
call
rcl
lea
pop
mov
dec
ins
jns
fisub
sub
bound
paddb
push
out
addr16
movs
int3
popa
push
(bad)
adc
out
mov
jg
xchg
ror
fnsave
sbb
outs
inc
call
shl
mov
xchg
jo
cwde
pop
sbb
mov
out
imul
sbb
cdq
pop
or
xchg
enter
add
pop
add
push
dec
push
je
xchg
jo
cmp
mov
loop
pop
out
rol
mov
dec
xchg
mov
loop
hlt
sar
cmp
das
and
jne
cmp
ds
sub
jo
inc
les
test
rcr
xchg
xor
fs
sub
rol
jl
cmp
xchg
int
and
adc
imul
jo
call
sub
(bad)
dec
inc
mov
adc
imul
dec
sbb
sti
test
adc
std
mov
dec
inc
mov
imul
pop
dec
xor
cli
dec
push
and
jb
mov
push
dec
pushf
pop
das
pop
retf
dec
cdq
mov
out
das
int
clc
(bad)
adc
xchg
xchg
inc
pop
add
jl
dec
ins
mov
int3
mov
mov
adc
outs
lds
movs
jno
jne
jg
and
mov
es
fwait
aaa
jmp
ins
test
mov
or
adc
test
mov
inc
mov
adc
jmp
nop
aas
jecxz
jmp
add
nop
push
in
pop
pop
or
cmp
std
es
pop
xchg
(bad)
push
xor
or
(bad)
fs
fimul
xchg
scas
and
pop
push
icebp
(bad)
mov
xor
fist
sbb
sub
dec
jg
mov
xor
jbe
dec
mov
xor
fstp
ins
jl
imul
jp
dec
mov
in
test
test
jle
mov
mov
dec
or
mov
loope
push
xchg
push
clc
les
push
or
cmp
js
pop
dec
inc
jp
hlt
jmp
fcmovnu
ja
lods
or
and
add
push
call
pop
into
push
inc
pop
int3
aaa
dec
popf
push
sti
push
inc
fsub
add
jae
jns
push
lods
sub
xchg
mov
icebp
pop
mov
dec
mov
mov
mov
imul
jne
or
dec
lock
jmp
cli
ss
inc
lds
push
dec
mov
push
dec
fnsave
add
out
fs
stos
call
(bad)
jge
pop
push
add
pop
jecxz
sbb
xor
mov
cmp
(bad)
loopne
jb
sbb
imul
sub
jo
mov
push
scas
sub
es
int
out
sub
xlat
pop
scas
and
xchg
pop
mov
ins
repnz
cs
call
and
xor
xchg
retf
jmp
push
bnd
jp
jns
imul
pop
push
and
mov
mov
sbb
inc
mov
inc
inc
and
loopne
clc
push
in
pop
xor
dec
inc
jge
jle
out
and
retf
adc
inc
and
mov
ja
jne
jbe
(bad)
out
outs
sbb
push
mov
or
adc
jb
into
xchg
or
mov
jp
push
dec
adc
daa
mov
inc
in
inc
xchg
pop
add
pop
mov
push
imul
jg
ret
inc
xchg
ror
and
fld
loope
aam
outs
mov
cmp
scas
cmps
xchg
or
jmp
das
xlat
aad
jle
movs
xchg
cmp
add
lods
mov
push
loop
into
mov
jmp
dec
cdq
pusha
imul
push
mov
push
push
xor
mov
fucomip
lea
jne
arpl
dec
aaa
pusha
int
mov
int3
jmp
loop
ins
push
mov
retf
jg
push
dec
cld
cmp
or
inc
mov
jbe
pop
fidivr
push
xchg
push
test
movs
aad
cmp
or
adc
mov
fdiv
mov
aam
add
and
out
mov
push
inc
mov
(bad)
in
std
xor
ins
cld
jmp
cmp
xchg
push
and
inc
mov
shl
out
sub
inc
cmp
test
lods
loop
outs
cmp
push
loopne
mov
xchg
xchg
push
sahf
push
test
ret
hlt
push
fisttp
bswap
inc
inc
push
test
ret
adc
mov
popf
js
mov
scas
fsub
and
lds
jmp
arpl
cmps
adc
xchg
fwait
push
sbb
sahf
or
(bad)
mov
add
iret
xor
ds
mov
adc
dec
jg
jp
(bad)
clc
jp
cdq
xchg
sub
(bad)
xlat
jge
sub
mov
push
call
xor
push
and
mov
pusha
or
mov
std
stos
mov
and
mov
cmp
out
add
scas
dec
mov
lods
cdq
mov
repnz
push
sub
ja
fsubr
and
cmp
inc
adc
frstor
sub
sub
lock
xlat
mov
sub
iret
and
(bad)
lock
aaa
add
cmps
movs
cmp
add
fisubr
sbb
cdq
mov
call
rcl
dec
add
int
pop
imul
mov
or
jecxz
inc
dec
adc
gs
into
xchg
xchg
and
popf
or
pop
imul
loope
sub
fst
pop
scas
push
sahf
test
ror
jecxz
mov
repz
mov
sbb
das
test
cmp
pushf
shl
push
xor
inc
cmp
jns
out
or
into
xchg
movs
repnz
aam
push
push
cmp
inc
mov
jne
jmp
mov
stc
sar
jno
add
dec
fldenv
push
xchg
jmp
cs
xchg
das
mov
or
mov
cmps
xor
push
pop
mov
mov
cs
rcr
jge
in
or
cmp
push
sbb
pop
pop
mov
hlt
cld
jmp
push
jl
sub
jno
sub
outs
popf
jne
jge
popa
sub
cdq
mov
or
jbe
push
jmp
pop
nop
fiadd
movs
mov
pop
and
or
sbb
les
shr
mov
retf
aaa
xchg
cmp
(bad)
mov
jne
cdq
sbb
jle
test
fdivr
mov
mov
and
xchg
mov
xor
mov
mov
add
(bad)
mov
mov
mov
arpl
cmp
or
mov
lds
mov
adc
and
mov
jne
cmp
mov
pop
push
mov
jns
(bad)
adc
sbb
enter
loop
gs
sti
gs
mov
data16
mov
rol
cmp
int3
mul
dec
mov
inc
dec
(bad)
addr16
stc
sbb
cmc
shr
push
pop
jae
sbb
push
push
rcl
pusha
neg
adc
sbb
push
js
repz
jle
inc
xor
add
dec
bound
push
aaa
scas
inc
and
sar
xchg
mov
sub
out
sbb
add
and
mov
push
pop
jmp
lock
lea
push
(bad)
mul
cmp
loopne
retf
(bad)
fwait
test
aad
or
inc
mov
adc
lods
and
adc
pushf
xchg
repz
mov
push
jnp
in
adc
add
adc
push
nop
popa
loop
test
icebp
mov
fidiv
das
and
push
scas
daa
lds
xor
es
fidivr
sub
inc
adc
mov
mov
add
imul
push
pop
ja
push
pop
sahf
ins
(bad)
push
stc
test
mov
ret
cli
into
loopne
and
clc
xchg
out
cli
ror
scas
or
jae
bound
int3
fistp
ror
adc
mov
addr16
dec
hlt
jo
jge
jl
js
dec
outs
movs
mov
and
ss
or
mov
adc
int
push
pop
dec
push
push
mov
mov
test
rcl
dec
imul
cmps
ror
into
and
jo
push
dec
pusha
xchg
xor
adc
pop
scas
(bad)
movs
inc
enter
and
jbe
and
arpl
call
and
push
clc
xchg
push
not
pop
sbb
rcr
pop
push
call
mov
add
xor
daa
add
pusha
xchg
dec
aad
push
inc
jp
adc
jecxz
scas
and
in
cdq
ins
mov
adc
sub
sbb
in
fnstsw
mov
xlat
or
retf
jecxz
push
inc
mov
ret
and
xor
icebp
cdq
(bad)
pop
or
or
mov
shl
cli
popf
je
adc
gs
sub
push
stos
dec
dec
cmp
pop
fwait
div
jo
dec
ret
stc
ss
cmps
mov
xchg
pop
mov
and
ret
iret
inc
pusha
int3
push
(bad)
mov
popf
(bad)
adc
iret
adc
popf
and
test
jns
mov
and
push
cmps
jne
ds
mov
pop
dec
pop
xor
es
mov
dec
pop
sub
jae
xchg
pop
imul
push
adc
inc
xor
js
jnp
fucomip
fiadd
sbb
addr16
cmp
dec
pop
dec
dec
inc
ret
repnz
xlat
inc
mov
pop
daa
hlt
div
sub
xor
jp
imul
ror
jmp
sbb
lock
xor
(bad)
cmp
push
pusha
jae
clc
int3
imul
jg
cmp
icebp
jle
xor
loopne
movs
iret
jmp
dec
cli
mov
cmp
mov
xchg
jo
pop
push
cmps
arpl
dec
mov
outs
gs
mov
xchg
and
pop
inc
pop
(bad)
dec
ja
jb
pusha
add
test
adc
inc
lods
scas
out
fisub
or
cmps
sar
adc
gs
ja
into
adc
inc
push
pop
lds
push
mov
leave
ja
sar
lea
arpl
cld
dec
inc
dec
cmp
xchg
arpl
out
dec
iret
iret
iret
cmps
mov
test
dec
push
ffreep
dec
stos
push
jne
gs
mov
ret
fsubr
jecxz
xchg
out
stc
xor
add
fsubr
xor
popa
jns
rcr
loope
xor
movs
jg
fbld
idiv
pop
call
dec
(bad)
aam
pop
call
sahf
imul
std
dec
inc
push
sar
xchg
push
mov
sbb
sub
xchg
call
test
mov
mov
arpl
int
xor
add
das
mov
mov
clc
sbb
push
pop
add
jbe
dec
inc
and
xor
xchg
cdq
xlat
mov
ins
mov
out
data16
arpl
fmul
lods
icebp
or
imul
cmp
pop
rol
adc
into
ins
sti
push
mov
dec
(bad)
inc
test
and
sub
jne
cmp
add
test
xchg
outs
xchg
xchg
pusha
mov
mov
xchg
push
mov
xchg
and
gs
stos
push
bnd
push
push
dec
aaa
pusha
clc
repnz
ins
cmp
inc
test
push
cmp
jmp
dec
in
add
inc
cli
stc
jle
not
outs
mov
aas
and
cmps
pop
mov
mov
inc
dec
mov
lock
nop
jae
test
neg
mov
clc
mov
mov
repnz
cmc
addr16
mov
mov
sub
repnz
inc
cmps
mov
and
sbb
call
pop
cmps
shl
push
push
pop
mov
xchg
mov
fs
je
xor
inc
jg
xchg
mov
add
nop
cmp
push
bound
mov
mov
mov
jb
arpl
inc
xor
push
fcmovne
out
inc
sbb
icebp
dec
push
mov
add
pop
aad
fs
pop
push
(bad)
inc
sar
jmp
add
ds
dec
lea
call
mov
pop
rol
push
not
mov
gs
stos
aaa
mov
mov
dec
jae
stos
push
or
leave
jb
data16
jmp
xor
retf
popf
push
test
aad
dec
push
jp
test
xchg
sub
cmp
cmps
mov
push
ins
movs
int3
mov
push
sub
push
jne
arpl
mov
mov
and
cmps
sbb
les
dec
mov
xor
jge
ss
sbb
sbb
jbe
pop
jae
sub
sub
or
aaa
daa
and
loopne
mov
xor
in
xor
push
jae
pushf
push
pop
fisttp
add
shr
xchg
sbb
dec
aad
repnz
inc
inc
test
cmc
jbe
je
sbb
or
inc
(bad)
and
imul
adc
fbld
pop
loop
mov
jns
and
inc
aas
(bad)
inc
movs
sbb
aas
ficom
and
add
fnstenv
test
jbe
push
(bad)
daa
mov
dec
ja
or
cmps
mov
sub
mov
sar
ja
push
mov
mov
xchg
cwde
stos
sbb
mov
sbb
xor
fmul
adc
sbb
les
das
push
xchg
add
into
push
pop
repnz
jg
inc
and
jl
arpl
shl
mov
aad
or
jp
sub
imul
mov
aad
das
js
and
mov
int
push
jo
sub
test
sub
or
aaa
pop
push
idiv
scas
pop
pop
mov
and
push
rcr
push
fcomp
mov
or
ins
scas
jge
adc
outs
inc
dec
ss
and
inc
xor
pop
jl
stos
shl
push
mov
ss
sub
leave
js
or
retf
add
fdivr
add
jecxz
sub
sub
mov
test
not
ja
pop
push
push
scas
int3
sub
sbb
test
inc
jne
stos
jbe
outs
mov
mov
ret
jmp
xor
cmp
ss
inc
and
dec
test
pop
and
aam
xor
cmps
push
mov
cmp
xor
mov
(bad)
jns
sbb
add
sbb
or
repz
pop
adc
jo
mov
jg
sahf
nop
xchg
js
scas
mov
sbb
xchg
jp
stos
or
xor
fidivr
cmc
dec
(bad)
fisub
jns
icebp
xchg
sbb
or
cmp
or
fdiv
mov
je
push
and
je
pop
or
sbb
fidiv
push
leave
cs
mov
xlat
xor
xchg
adc
jmp
sbb
sbb
dec
test
(bad)
and
sar
bound
add
clc
push
loopne
nop
sbb
pop
movs
mov
jmp
out
push
xchg
xchg
mov
sub
sub
cwde
mov
cmps
add
mov
cmp
pop
mov
dec
rcr
loop
sar
ss
sub
aas
mov
push
(bad)
in
mov
scas
popf
sbb
loop
jp
jbe
cld
pop
out
push
inc
(bad)
or
and
sahf
or
loopne
sub
lods
sub
mov
push
push
sahf
push
clc
and
adc
retf
repnz
cld
ja
mov
sar
pop
fnstsw
out
out
mov
lahf
fisttp
aad
mov
in
jbe
cdq
dec
adc
add
dec
push
je
pushf
dec
cs
fld
xor
lods
aaa
adc
add
inc
clc
adc
pushf
call
pusha
inc
retf
xor
pop
jecxz
(bad)
mov
adc
leave
scas
je
call
in
pop
dec
pop
dec
jnp
add
sahf
mov
xor
das
mov
mov
sub
push
jbe
and
dec
sbb
jecxz
or
jo
inc
imul
jbe
push
mov
jne
cmp
gs
mov
test
adc
jmp
xor
(bad)
sub
adc
punpcklwd
inc
xor
inc
xor
outs
faddp
gs
fiadd
mov
add
into
enter
imul
push
sbb
loopne
in
movs
rcr
adc
mov
imul
aad
or
jl
fsubr
xchg
cmps
jg
and
cmc
push
int
aas
dec
ret
jnp
and
adc
cmp
xchg
dec
cmp
mov
sbb
(bad)
push
gs
cmp
pop
aam
mul
ret
sar
sbb
jb
out
addr16
mov
ror
shl
mov
and
push
mov
es
xchg
or
push
loopne
dec
movs
xchg
lahf
sbb
jne
pop
and
inc
push
retf
out
dec
sbb
push
dec
dec
pop
out
data16
dec
js
or
push
mov
shr
ret
push
movs
dec
test
cmp
xchg
jg
or
cmp
nop
fadd
add
jl
js
scas
xor
adc
push
in
jns
pop
mov
(bad)
fild
cdq
cli
(bad)
rol
pop
dec
mov
inc
sub
push
stos
ret
inc
xor
call
movs
pop
aad
les
xchg
out
cmps
test
in
push
mov
and
int3
xor
mov
loopne
cs
out
sbb
jmp
jge
mov
lods
shl
add
sahf
push
mov
xchg
hlt
dec
inc
or
dec
and
aas
rol
xchg
js
(bad)
outs
sbb
mov
mov
and
imul
pop
dec
cs
shl
push
xchg
(bad)
jne
cmp
or
mov
shl
(bad)
stc
(bad)
pop
inc
scas
jge
mov
mov
mov
inc
sbb
xor
xchg
fisub
pushf
outs
clc
aad
dec
pop
mov
nop
popa
xchg
cmp
mul
pop
push
adc
cs
sbb
daa
int3
mov
stos
cmp
sbb
and
dec
stc
push
leave
ret
dec
add
cmp
xchg
or
pop
add
dec
stc
lock
and
sar
dec
pop
lods
sbb
ret
pop
cli
scas
movs
inc
xchg
(bad)
mov
loopne
cli
or
cmp
pop
call
mov
out
das
gs
dec
push
fstp
pop
push
mov
aad
or
(bad)
cmc
jo
test
adc
sub
repnz
mov
stos
and
rol
mov
xchg
xchg
ds
add
imul
sub
call
mov
stos
sti
pop
mov
xchg
cmc
inc
push
inc
inc
jp
dec
shl
xchg
jge
xchg
push
stos
jo
push
xchg
fmul
xor
push
jno
out
scas
aaa
mov
imul
jecxz
(bad)
or
cld
ficom
jmp
fs
cs
lea
pop
add
mov
out
fbstp
ret
mov
imul
inc
mov
xor
(bad)
aaa
and
ja
sbb
sbb
push
inc
shl
movs
mov
lock
cmc
add
mov
jge
daa
adc
dec
jae
jb
mov
mov
push
imul
cmp
pop
mov
or
out
test
xor
ja
in
in
mov
call
fisub
aas
mov
fisub
in
mov
mov
gs
imul
jl
aaa
mov
std
adc
repnz
sbb
jecxz
fmulp
sbb
sbb
call
xor
test
popf
daa
pusha
ins
add
sbb
adc
sub
fst
popf
jle
addr16
inc
jmp
fcomp
and
cmp
dec
jnp
sbb
clc
mov
mul
sbb
scas
sub
mov
dec
(bad)
in
scas
sub
test
or
js
jp
jle
mov
lahf
add
sub
pop
pop
iret
jmp
cmc
dec
mov
dec
loopne
add
pop
mov
test
jmp
dec
shl
push
popa
push
mov
sub
push
mov
adc
retf
sar
int3
jle
xchg
inc
out
push
pop
lea
mov
push
mov
xor
test
sub
ror
inc
inc
(bad)
add
sbb
imul
repnz
dec
mov
cmp
scas
sbb
xor
xor
stos
pop
leave
dec
stos
fcmovbe
push
mov
push
dec
jecxz
mov
xchg
adc
sub
stos
(bad)
and
sub
movs
adc
sbb
ror
sub
push
into
jno
out
outs
loop
sbb
dec
mov
ss
pop
sub
pushf
std
ins
fcomip
jecxz
stos
inc
jmp
jnp
mov
xor
cmp
dec
test
cmp
cdq
mov
dec
fadd
inc
cmp
and
cmp
fistp
stos
xlat
imul
push
jno
mov
pop
test
fidivr
push
pop
test
dec
adc
ss
mov
daa
cli
test
(bad)
pusha
adc
js
jae
jae
inc
scas
mov
push
rep
jnp
lock
or
pop
xchg
sub
dec
sub
jge
xlat
jle
out
sub
sub
mov
fcmovu
icebp
std
or
or
mov
adc
leave
pop
sub
sbb
clc
int3
idiv
lods
and
inc
cwde
dec
sbb
xchg
xchg
push
pop
fld
push
iret
mov
enter
mov
ret
xor
jae
push
pop
mov
sbb
mov
imul
ins
or
aas
xor
xor
cmp
int3
push
push
icebp
pop
cmp
jmp
push
jmp
mov
call
fnsave
stc
dec
clc
and
stos
and
je
repz
sbb
jg
mov
call
mov
cmp
inc
sbb
inc
les
lods
mov
or
jecxz
xlat
dec
fld
ret
loopne
popf
loop
call
dec
mov
xchg
and
out
xchg
inc
iret
jae
add
call
inc
push
push
xchg
popa
adc
stos
sub
and
jmp
sbb
(bad)
mov
in
inc
enter
les
gs
and
popa
pop
outs
dec
mov
and
pop
imul
call
xchg
retf
add
mov
xchg
push
in
in
nop
mov
in
xchg
(bad)
pushf
sbb
icebp
and
loop
out
push
outs
movs
cs
pusha
add
stos
in
pop
add
sub
jl
xor
mov
mov
mov
or
pop
cmp
push
mov
xchg
gs
dec
rcl
or
std
jp
add
fsubr
(bad)
pop
adc
adc
es
jne
stos
pop
dec
cmp
test
adc
cmp
jg
std
and
xlat
ins
aas
pop
cmp
bound
lds
and
add
push
pop
inc
shr
pop
jp
mov
arpl
sbb
cs
pop
inc
sti
mov
xchg
add
jecxz
inc
sti
sbb
mov
mov
test
iret
cmps
jae
scas
mov
dec
imul
in
dec
pop
cmp
or
pusha
cdq
mov
out
adc
jbe
mov
es
dec
add
stc
pop
(bad)
pusha
shl
fild
mov
cmc
jbe
sbb
addr16
pop
or
inc
ret
xlat
test
or
loope
xchg
push
push
push
(bad)
retf
and
rcl
cs
rcr
pushf
mov
push
scas
sub
sub
daa
pop
pusha
bound
test
loopne
or
jecxz
fdivr
shr
test
sub
and
pop
shl
or
leave
das
or
xchg
jmp
xchg
push
ds
or
stc
push
jns
lock
sbb
cmps
cmp
mov
cmp
call
xor
dec
fadd
mov
xchg
sbb
repnz
out
dec
hlt
lods
cdq
ret
inc
mov
jb
call
push
cmp
std
in
dec
test
dec
(bad)
in
sub
int3
das
mov
shl
(bad)
clc
add
les
cmp
aam
dec
call
inc
adc
pop
xor
mov
push
ins
retf
(bad)
mov
dec
sbb
adc
ins
cmc
mov
aad
inc
popa
cs
das
call
jo
dec
ins
(bad)
jge
mov
inc
les
shr
pop
inc
not
int
ins
jb
push
pop
dec
mov
cli
dec
stos
stc
shr
cli
repnz
addr16
dec
cmps
push
inc
jne
push
xchg
inc
pop
and
icebp
jbe
dec
mov
fld
pop
neg
push
add
out
add
and
pop
sub
rcr
pop
mov
gs
inc
mov
inc
push
scas
xchg
inc
sub
sbb
cmp
jg
dec
loop
aaa
sub
dec
sar
stc
cmp
sbb
adc
nop
cld
test
retf
pop
xor
bts
jbe
push
sbb
and
jb
or
cmp
adc
lock
sub
cmc
out
shl
ja
movs
jne
adc
jne
jnp
(bad)
icebp
aaa
cwde
xor
jnp
pop
cmp
pop
test
mov
dec
and
or
xchg
mov
adc
in
test
imul
mov
pop
cmp
push
jbe
adc
jnp
cmp
adc
scas
addr16
dec
ror
ja
add
bound
adc
xor
aad
pop
movs
clc
pop
out
shl
or
mov
xchg
dec
inc
pop
mov
fdiv
xor
push
sbb
fs
and
out
mov
mov
and
retf
inc
sbb
sub
mov
dec
jge
mov
out
stos
call
js
xchg
stos
sub
inc
ds
push
jp
add
push
inc
test
and
push
sub
adc
mov
imul
xchg
mov
cmp
pop
nop
aaa
outs
mov
fild
adc
add
dec
out
popa
dec
mov
sbb
cmc
addr16
dec
std
popa
out
inc
not
test
sbb
jo
jno
pop
out
pop
fs
sbb
gs
in
pop
imul
or
dec
popf
outs
jns
adc
mov
sub
out
hlt
test
bound
and
jne
and
ss
mov
jle
pushf
xor
jbe
mov
je
jo
jmp
jle
neg
arpl
sub
dec
inc
outs
pop
rcr
repz
dec
mov
jne
loope
jb
add
(bad)
(bad)
clc
adc
jae
test
cli
ficom
adc
movs
call
das
out
lock
fiadd
fimul
ret
icebp
dec
stc
jle
and
in
pop
mov
fs
cmp
add
and
push
jnp
jns
mov
loope
or
dec
ret
or
out
dec
mov
jecxz
jge
int3
inc
sbb
cmp
mov
sbb
enter
data16
xchg
and
pop
xchg
ds
mov
pop
int
pusha
(bad)
ds
xor
adc
rcl
inc
jle
fiadd
pop
cmc
jmp
outs
rcr
cs
cmp
mov
mov
mov
pop
mov
pop
push
fldcw
sub
adc
fdivr
icebp
sbb
pop
pushw
sub
stos
out
xor
or
mov
dec
jmp
test
or
fwait
mov
idiv
pop
sub
jp
aam
sbb
mov
xchg
aas
std
inc
push
mov
aaa
cmp
dec
mov
push
or
sbb
sar
xor
xchg
adc
daa
je
aaa
xchg
adc
pop
xor
mov
int
dec
inc
mov
xor
call
adc
arpl
imul
(bad)
movs
mov
jo
jge
popf
stos
mov
and
cmp
sti
adc
(bad)
mov
push
pop
sub
xlat
(bad)
call
add
(bad)
addr16
call
or
test
in
dec
dec
rcr
xchg
lock
inc
arpl
jne
test
out
cld
fcmovnu
idiv
and
inc
shr
inc
shl
adc
pusha
fistp
scas
ja
ds
add
pop
imul
cmp
daa
aas
pop
jp
mov
std
mov
jb
add
fadd
rcr
retf
out
jns
cwde
movs
mov
and
ja
psrld
sub
push
repz
inc
cmp
sub
sbb
out
cmp
mov
cmp
scas
fucomi
inc
lods
inc
nop
clc
pop
loope
pop
adc
not
jb
shr
jl
or
mov
cdq
xchg
jmp
push
ins
sahf
ror
rcr
add
dec
mov
arpl
jecxz
ins
clc
cwde
pop
into
movs
(bad)
fbstp
sbb
adc
push
xchg
shl
dec
(bad)
jge
punpckldq
pushf
icebp
stc
inc
test
xor
scas
jg
nop
adc
popa
movs
pop
pop
adc
adc
or
jge
jmp
aam
mov
or
sbb
xor
cmp
(bad)
lock
outs
(bad)
aam
fistp
and
mov
repz
cmp
sub
outs
and
ret
and
inc
mov
movs
jae
nop
je
popf
pop
sbb
inc
lods
and
mov
xchg
cmc
xor
xor
out
pop
repnz
bndldx
in
stc
lea
xchg
movs
dec
into
call
jge
(bad)
shr
and
dec
pop
clc
push
pop
mov
or
cli
add
test
(bad)
pop
sub
xchg
or
or
pop
xor
test
jmp
jmp
or
sbb
xor
pusha
adc
mov
mov
and
shl
add
push
cli
in
out
push
sub
dec
jecxz
enter
add
mov
pop
jb
adc
xor
pop
in
aaa
ins
lods
lods
push
sbb
neg
jle
pop
inc
add
ret
push
dec
sbb
ins
mov
mov
out
mov
outs
in
test
mov
adc
pop
jb
cmps
cmps
or
hlt
pop
(bad)
mov
out
out
ins
cdq
retf
call
js
inc
ret
push
aaa
pop
and
(bad)
cmp
shl
jnp
je
or
xchg
into
loope
mov
sbb
loope
mov
in
and
dec
jb
(bad)
faddp
and
pop
call
pushf
ror
pop
push
cmp
sti
pop
retf
sub
shr
adc
sbb
or
jmp
sub
sub
sar
fstp
cmp
pop
or
fsubr
mov
cdq
lods
or
dec
mov
repz
mov
bound
dec
mov
add
push
jp
arpl
fcom
imul
add
cmps
pop
ret
call
mov
pop
or
sub
rcl
test
fwait
test
mov
outs
xlat
jle
fld
ret
lds
or
or
sub
pop
jge
in
je
inc
(bad)
and
xchg
push
mov
or
adc
push
dec
arpl
and
sbb
push
cmps
jae
add
cmp
ja
cmp
fadd
add
pop
push
je
cmp
outs
imul
inc
xor
inc
add
scas
add
jbe
mov
cmp
dec
add
(bad)
dec
out
add
jl
lock
xlat
lock
stc
aam
call
sub
cmp
imul
push
xlat
push
jl
ins
push
xor
pop
jmp
arpl
and
and
push
sub
xor
push
outs
in
mov
jmp
mov
pop
jge
jmp
jne
sub
or
lea
adc
xchg
iret
aam
sub
mov
in
pop
bound
outs
bound
fbld
les
and
inc
retf
ror
sti
pop
out
stc
mov
or
data16
movs
inc
arpl
(bad)
fsubp
mov
rcl
dec
push
jle
mov
inc
mov
(bad)
cmp
adc
inc
inc
mov
sbb
sub
sbb
mov
mov
pusha
mov
ret
retf
das
sar
sbb
dec
adc
pop
or
inc
dec
sub
pop
retf
repz
jno
loopne
fwait
or
dec
call
out
push
call
bound
jb
adc
arpl
loopne
or
cs
in
test
jmp
or
pusha
sti
jp
shr
xchg
fimul
inc
xor
loop
movs
jne
adc
dec
rol
scas
dec
pop
dec
push
stos
sub
clc
inc
out
sbb
hlt
xor
fmul
pop
mov
lods
mov
sub
jp
imul
fiadd
sbb
retf
movs
ret
aam
dec
push
sub
jl
sub
jecxz
inc
cli
mov
popa
jecxz
jmp
(bad)
inc
sub
fs
sbb
stos
(bad)
or
push
xchg
call
scas
ds
(bad)
or
jnp
adc
jnp
inc
dec
pop
cmp
sbb
and
rcl
cmp
dec
retf
iret
mov
add
test
jle
pop
imul
rol
fwait
lock
je
xlat
jge
push
daa
sub
fs
shr
lahf
in
mov
pop
xor
pop
or
mov
dec
adc
dec
jle
ss
cli
mov
jecxz
ds
sub
or
cmp
imul
int3
push
scas
call
cmp
lds
or
lds
sti
and
jmp
jecxz
test
hlt
inc
push
jo
jb
pop
inc
jb
ds
out
mov
inc
fisubr
sbb
cmp
movs
pushf
push
test
(bad)
sbb
xchg
iret
inc
scas
add
mul
xchg
push
cmps
je
cwde
std
retf
jb
xor
xor
int
dec
and
test
test
mov
lahf
sar
sub
or
xor
mov
mov
mov
push
dec
mov
or
mov
das
sar
loope
jp
push
pop
loope
pop
mov
jp
and
adc
ficom
or
push
sub
push
hlt
lods
fcom
xor
and
cmp
pop
and
xchg
fiadd
sub
inc
mov
jle
cmp
bts
mov
fdivrp
daa
das
dec
cmp
xor
jg
jecxz
xor
pop
rol
push
cmps
push
dec
nop
bnd
cdq
cmps
adc
jnp
xlat
jnp
sbb
sbb
repnz
pop
dec
aad
inc
mul
arpl
or
mov
and
adc
outs
dec
jl
or
adc
outs
pusha
push
outs
jnp
das
fdivr
sub
lock
cmps
pop
pop
jmp
out
cmp
stos
jmp
add
icebp
cli
mov
cmp
scas
(bad)
adc
lds
xlat
pop
cmc
mov
and
mov
push
dec
xor
fidiv
jmp
inc
scas
add
int3
cmp
mov
mov
clc
dec
mov
cli
in
jnp
inc
stos
dec
pushf
clc
aad
shl
xchg
pop
ret
jne
or
cli
retf
jge
bound
repnz
lods
adc
fdiv
mov
jg
and
push
dec
imul
dec
movs
mov
and
fisttp
add
enter
xchg
push
scas
call
dec
jge
call
jl
rol
bound
bound
loopne
test
icebp
xor
jp
scas
(bad)
int
push
adc
inc
cmp
outs
cmp
mov
dec
adc
pop
lock
cmp
sbb
imul
sub
sub
xor
mov
ss
imul
jns
rcl
dec
inc
popa
mov
movs
mov
ins
pop
xchg
mov
repz
test
ds
push
es
cmps
popf
mov
loop
and
push
inc
pop
mov
je
xchg
push
es
test
fs
cmp
imul
popf
xor
cld
ror
cmp
fld
js
test
out
push
xchg
dec
pop
cwde
xchg
push
pop
sahf
mov
retf
and
jmp
xor
outs
popf
dec
sbb
xor
call
fimul
xchg
cmps
cmps
cmp
mov
push
mov
ja
imul
and
inc
inc
inc
mov
fbstp
mov
add
sbb
loope
sahf
inc
adc
arpl
je
(bad)
(bad)
test
mov
hlt
das
and
div
mov
jle
xor
mov
and
push
fwait
ret
cmp
mov
mov
sub
jp
jle
inc
push
cmp
test
push
add
test
or
mov
sub
and
icebp
loopne
arpl
test
or
hlt
mov
mov
pusha
mov
in
push
mov
lea
jp
pop
cmp
sahf
(bad)
popa
mov
daa
repnz
add
push
cs
push
neg
jae
test
inc
call
push
jno
sbb
clc
mov
jp
lahf
sbb
(bad)
sub
fist
in
xor
sar
ror
cmp
rcr
pop
scas
call
loope
and
jmp
sti
pop
jo
inc
xor
push
pop
sahf
test
xor
adc
jns
sbb
sub
cmp
pusha
idiv
sub
cs
mov
imul
inc
pusha
call
inc
(bad)
daa
mov
popf
int
jecxz
or
bnd
adc
sar
movs
push
jo
mov
iret
gs
sbb
pop
xchg
push
test
stos
fmul
lods
xor
mov
out
not
adc
sub
pop
xor
cmp
call
je
aad
sub
aam
push
stos
aas
test
sub
outs
out
fild
inc
jg
ret
pop
test
(bad)
push
mov
out
dec
dec
popf
sbb
xchg
sub
shl
iret
(bad)
(bad)
cmp
jmp
push
dec
inc
push
call
push
imul
xchg
sub
xchg
and
sub
add
adc
push
mov
ret
or
pop
in
mov
cmp
adc
or
js
mov
xlat
mov
popf
jl
fnstenv
lods
(bad)
daa
push
push
push
xchg
pop
frstor
fld
(bad)
sbb
mov
aam
or
pop
(bad)
mov
push
sub
addr16
sub
xchg
out
sub
test
addr16
(bad)
cmp
mov
arpl
mov
jmp
xor
inc
jp
jmp
push
dec
mov
push
cmps
xchg
lock
jl
test
xor
dec
pop
fisubr
mov
stos
sbb
in
sbb
inc
inc
pushf
mov
add
push
lea
(bad)
loopne
push
aam
shr
and
jge
jmp
xor
mov
adc
shr
dec
cmp
or
push
gs
ror
mov
iret
add
push
icebp
sub
jmp
jne
jae
or
ja
add
push
and
xchg
es
sbb
imul
lock
call
mov
and
sub
adc
sahf
cmps
jo
out
mov
xchg
sub
push
sbb
ja
lods
cmp
iret
dec
jo
gs
idiv
movs
sub
mov
xor
jmp
cld
sub
add
imul
or
push
fs
mov
ja
xchg
ds
add
pop
ror
mov
ins
outs
pushf
jo
ss
out
loop
call
xchg
fidiv
rol
mov
fld
hlt
shl
es
addr16
sub
xor
pop
mov
out
or
test
mov
rcr
je
mov
add
arpl
and
xor
dec
outs
shl
imul
les
int3
mov
xor
pop
jp
mov
inc
push
cmp
xchg
lock
inc
jmp
iret
scas
hlt
sub
jl
(bad)
sti
imul
and
push
mov
sar
dec
dec
js
inc
mov
sub
and
pop
hlt
std
in
lods
in
jp
push
(bad)
fucomip
into
aaa
cmp
push
adc
xor
inc
cmc
add
cld
push
gs
inc
inc
test
rol
mov
nop
adc
popa
pop
xor
leave
push
ret
outs
jbe
std
repnz
inc
xor
jge
sub
jne
ins
cli
mov
test
adc
dec
fdivp
push
inc
mov
repz
call
ret
lds
iret
dec
test
outs
inc
pop
mov
or
clc
cmp
arpl
inc
(bad)
cli
stos
mov
shl
das
aas
mov
je
lods
pop
jmp
scas
xor
sbb
cdq
popa
jecxz
push
sti
lods
aaa
ins
or
mov
scas
and
xlat
sub
jmp
jg
js
cs
daa
mov
pop
loope
pusha
sti
test
cmp
cmp
shr
cmc
fistp
mov
scas
outs
sbb
out
fsubr
addr16
mov
xchg
hlt
inc
hlt
scas
cmp
dec
sbb
jno
test
inc
cli
addr16
not
sub
inc
outs
mov
fwait
dec
in
sbb
(bad)
jb
lods
jmp
push
dec
cwde
and
pop
aaa
test
cmp
pop
or
xor
sub
popf
lods
loope
jle
cwde
dec
mov
mov
push
push
inc
test
mov
sub
sahf
or
sbb
or
retf
or
in
repnz
add
or
stos
lea
fnsave
and
ds
sar
inc
bound
fidiv
jle
jecxz
call
loope
lock
push
ds
and
xor
jl
jb
rcl
dec
jp
mov
in
pop
mov
sar
std
adc
xchg
icebp
dec
repz
cmp
mov
dec
dec
sub
dec
adc
mov
inc
push
and
sahf
inc
sbb
dec
rcl
not
(bad)
add
call
xor
icebp
add
inc
sub
lock
arpl
out
pusha
and
outs
es
add
jae
rcr
xchg
sbb
mov
inc
xchg
(bad)
mov
sbb
ins
lea
mov
fidivr
cs
pop
sub
sub
inc
jp
test
pop
mov
sti
cmp
add
sub
js
mov
xor
not
push
lock
adc
ins
fsubrp
icebp
pop
mov
lds
(bad)
xchg
aaa
movs
and
fisub
daa
ret
adc
push
repnz
mov
push
push
outs
mov
shl
add
and
ins
dec
push
pop
mov
ror
jb
rcl
push
mov
push
imul
sbb
(bad)
iret
add
dec
ss
sbb
loope
mov
loope
dec
fstp
xchg
arpl
jno
cmp
cmp
out
imul
fnstenv
mov
push
repnz
out
cmp
test
dec
lahf
out
outs
retf
cs
mov
and
cmp
popa
cmps
out
or
cmc
lock
sub
cmp
jae
test
and
daa
sbb
arpl
sar
xor
ficom
mov
outs
imul
dec
jne
out
and
jns
lds
loop
pop
dec
or
test
cmp
out
xchg
shl
retf
mov
push
lock
rol
xlat
nop
push
ds
cld
cmp
(bad)
fnstenv
xor
imul
loope
cmp
cmp
dec
sub
pop
dec
sbb
add
pusha
sbb
add
jno
jmp
test
dec
inc
ret
dec
stos
jno
sbb
dec
lahf
sbb
clc
scas
push
mov
dec
cwde
pop
pusha
pop
out
and
mov
dec
pop
mov
mov
repnz
jp
out
jno
jp
add
jno
or
and
push
cmp
ret
fwait
add
push
repnz
xchg
inc
push
mov
or
popf
dec
lock
sub
xor
xchg
push
adc
push
mov
aas
jnp
cmp
xor
inc
mov
adc
loop
pop
icebp
dec
stc
daa
nop
popa
not
shl
dec
bound
je
retf
fs
mov
dec
mul
rol
outs
fsub
(bad)
add
icebp
pop
sub
or
out
out
jae
(bad)
jecxz
cmp
sti
nop
xor
les
pop
cdq
cld
pop
jp
mov
sbb
pop
jecxz
in
movs
scas
push
adc
js
mov
inc
push
mov
int
cmp
inc
push
and
sub
stos
cmc
fist
(bad)
imul
inc
movs
jle
pop
cmp
or
mov
fdivr
dec
pop
xlat
push
pop
cmc
push
out
aad
jbe
out
je
bound
sub
sahf
out
loop
shl
sub
mov
and
pop
cmp
xchg
add
dec
test
stc
add
pop
pop
mov
jnp
je
mov
dec
stos
cmp
repnz
adc
outs
and
sbb
addr16
jnp
push
shr
cmp
out
jbe
jo
cld
dec
push
popf
xchg
pop
mov
loope
mov
inc
push
or
cli
jns
pop
ss
add
cmp
cmp
jge
loope
test
fyl2x
adc
pop
imul
mov
test
mov
mov
lods
mov
jbe
lods
lahf
imul
jp
push
sub
mov
movs
inc
adc
(bad)
jbe
cmp
out
or
jmp
jne
push
inc
es
sti
fild
and
pop
push
in
jo
std
call
lea
pop
mov
jns
jp
dec
xor
dec
cmp
call
aam
movs
in
adc
pushf
xor
mov
mov
mov
icebp
fadd
in
push
clc
push
outs
ss
jp
test
bound
jae
cdq
xor
push
mov
xor
stos
cmp
add
and
and
xor
mov
sub
push
cld
jns
rol
jg
jno
xchg
fidiv
jbe
sar
xchg
popf
mov
cdq
dec
and
mov
sbb
repnz
mul
bound
pop
popf
ja
add
daa
xchg
into
and
mov
sub
push
inc
inc
leave
stc
mov
dec
stc
push
sar
fistp
outs
shl
jns
fiadd
push
sbb
add
pop
xchg
outs
ins
jne
loopne
das
dec
call
loope
ss
dec
in
or
dec
test
sub
or
div
push
outs
aam
cmps
pushf
inc
pop
les
cmp
dec
test
jl
mov
inc
push
lea
fcom
xchg
cwde
push
push
call
popf
pushf
dec
mov
push
adc
leave
ss
cmc
or
aam
xchg
dec
jmp
dec
ins
jbe
or
outs
cs
loopne
cmp
lods
leave
inc
test
(bad)
push
add
jecxz
or
push
jno
into
cmp
loope
cdq
cmp
rol
inc
ror
jno
test
add
call
inc
mov
jno
mov
xchg
xlat
loop
xchg
icebp
sub
mov
adc
mov
mov
dec
jns
cdq
bound
dec
arpl
stc
mov
(bad)
sub
test
adc
sub
ins
or
mov
cmp
mov
imul
xor
fidivr
adc
movs
cmps
jmp
hlt
add
retf
movs
popf
inc
sub
(bad)
jns
dec
jp
adc
or
mov
inc
or
mov
jge
mov
add
mov
sub
pop
pop
dec
sub
cld
popf
pop
xchg
cmps
dec
iret
stc
cmovle
sbb
push
adc
push
ds
xor
adc
enter
cdq
inc
in
scas
mov
sti
jns
shr
jns
and
jg
push
add
push
push
and
mov
xlat
(bad)
out
call
out
xchg
lods
push
stc
inc
dec
out
stos
jecxz
scas
or
jmp
lds
cli
nop
(bad)
mov
je
add
or
add
nop
mov
cmovno
mov
push
outs
das
push
mov
jle
das
cs
pop
(bad)
pop
cld
inc
arpl
addr16
enter
(bad)
add
stos
cli
jg
push
and
or
dec
js
out
inc
sub
cmps
mov
sub
psrlw
popa
pop
sbb
dec
ds
int3
mov
aad
data16
inc
addr16
in
cld
js
push
push
mov
pop
pop
test
push
inc
imul
call
shr
push
xchg
movs
mov
fdiv
fdiv
xor
outs
dec
mov
mov
adc
xchg
xchg
mov
pop
mov
mov
or
scas
lds
cs
xor
adc
retf
mov
into
cmp
xchg
sub
mov
jle
jle
pusha
inc
std
(bad)
pushf
cs
mov
sub
adc
outs
pop
imul
jmp
fwait
das
fwait
mov
add
loope
sbb
imul
sbb
xor
stc
dec
popa
sub
mov
sub
cmc
mov
xor
add
ins
adc
gs
or
faddp
sti
mov
mov
out
add
push
out
mov
inc
jbe
cmp
pop
repnz
fisubr
xor
clc
or
xor
lea
push
mov
dec
dec
xor
imul
add
jle
mov
sbb
xchg
push
shl
rol
sahf
test
(bad)
test
das
sub
aas
inc
and
mov
cmp
das
inc
mov
sub
push
outs
mov
dec
jp
xchg
cmp
sub
js
cmp
dec
mov
add
test
clc
jge
lock
scas
in
sub
mov
outs
test
sti
jo
jmp
and
lock
hlt
jle
xlat
lock
pop
and
cmp
retf
inc
rcl
xchg
int3
sub
iret
cmp
daa
in
stos
jo
push
xchg
jno
fs
enter
add
pop
adc
dec
cmp
mov
in
cdq
lds
outs
ins
cmp
movs
or
xor
mov
loop
inc
test
and
sar
out
mov
push
mov
sub
sbb
aam
jge
(bad)
(bad)
pusha
and
pop
movs
in
adc
mov
popf
push
push
lds
gs
test
push
test
sbb
or
into
pop
sub
das
mov
add
adc
lods
xchg
in
dec
out
mov
retf
enter
xchg
mov
push
push
mov
adc
lock
jmp
add
jno
ffree
adc
xchg
sahf
push
(bad)
cdq
xor
aas
inc
and
fcom
montmul
cmps
xchg
sahf
add
push
iret
push
pop
int
xlat
call
je
pusha
fldcw
outs
retf
pop
xchg
dec
pushf
mov
pop
pop
and
retf
or
clc
or
add
cmp
push
cmp
scas
js
leave
sub
les
pop
pop
xchg
sti
(bad)
aad
mov
(bad)
scas
mov
popf
push
mov
sbb
repnz
cmp
dec
out
dec
push
popa
rcl
xchg
aaa
mov
iret
xchg
mov
aam
sbb
sbb
(bad)
fs
ins
pop
pop
jne
sbb
cs
xchg
loop
hlt
inc
movs
in
mov
repz
loop
mov
pop
scas
and
addr16
pop
push
sbb
push
lock
dec
or
popa
mov
pop
and
mov
fwait
mov
jecxz
test
add
movs
sbb
mov
das
mov
stos
or
dec
adc
fst
sbb
xchg
shl
mov
mov
(bad)
sti
sub
jg
add
jp
sbb
jge
adc
mov
pop
mov
jae
fsubp
sbb
and
add
das
movs
stc
mov
push
push
cmp
xor
movs
sar
or
cs
lahf
fbstp
and
aaa
sti
mov
inc
mov
rcl
retf
jge
xor
test
mov
push
cmp
int3
push
xchg
cmps
nop
iret
adc
das
loop
pop
mov
xchg
jmp
in
mov
pop
std
popa
stos
mov
inc
scas
cld
pop
(bad)
pop
jb
je
mov
xchg
sub
push
adc
pusha
pop
push
dec
mov
test
mov
daa
jmp
int3
loopne
rcr
xor
xchg
jl
sub
xlat
mov
sub
ja
cmp
and
ret
lahf
mov
push
mov
jp
mov
sahf
sar
mov
pop
(bad)
ret
stos
inc
mov
cmp
add
xor
mov
stos
mov
adc
sub
xor
lock
outs
push
pop
xor
sti
mov
cmp
into
mov
mov
cmps
inc
xlat
mov
loope
adc
loop
or
mov
dec
into
pop
jmp
loopne
mov
int
pop
mov
dec
ins
jmp
sbb
ret
mov
sbb
adc
dec
aas
call
imul
sbb
cmp
or
fcmovnbe
adc
and
push
mov
cmp
addr16
shl
sub
add
stos
scas
ret
inc
cmc
cmp
out
mul
xor
js
cmp
out
add
ins
push
add
das
gs
frstor
mov
cmc
xchg
pushf
sbb
sbb
fbld
inc
fimul
lahf
movs
pushf
inc
ins
out
arpl
bound
pop
mov
xor
out
or
daa
test
mov
mov
add
add
sbb
mov
jb
pusha
jns
jno
aad
aad
and
inc
xchg
ins
dec
mov
jmp
jle
test
sbb
inc
jb
loopne
aad
mov
add
xchg
loopne
pop
aad
mov
fiadd
loope
jmp
add
sub
mov
push
jb
imul
adc
out
mov
pop
dec
bound
test
pop
jl
jg
imul
push
into
js
ins
ror
cwde
sbb
leave
dec
sub
sbb
mov
cmc
inc
jp
sub
mov
movs
cmp
dec
xor
stos
jmp
mov
cdq
mov
movs
stos
jbe
in
mul
mov
js
leave
and
xor
cli
adc
ret
sbb
mov
jb
fwait
mov
ins
repnz
outs
inc
adc
adc
xchg
jo
movs
nop
lods
stos
js
inc
lods
push
aad
cmp
dec
(bad)
cmp
iret
mov
sub
imul
scas
lahf
inc
xchg
xchg
jne
cmps
adc
mov
mov
leave
mov
xchg
adc
ds
std
mov
dec
adc
add
adc
or
cmp
stos
jge
in
ror
cmps
sub
sub
or
or
repz
add
mov
shr
mov
sahf
cmp
xor
jge
xchg
and
in
arpl
xchg
sub
cld
je
movs
jecxz
es
(bad)
in
dec
scas
xchg
mov
mov
pop
iret
push
pop
pop
push
and
dec
mov
pop
dec
push
ss
aad
pop
inc
pop
mov
shl
or
jle
data16
adc
loopne
xor
lea
int
sub
xchg
sbb
loope
xor
inc
adc
adc
(bad)
movs
stos
dec
xor
mov
push
movs
dec
cmp
pop
add
idiv
adc
loope
and
retf
lods
add
sub
mov
jmp
div
xor
mov
movs
ja
imul
push
mov
xor
pop
mov
jno
stc
jno
(bad)
cdq
cmp
or
or
jns
test
add
ins
cmp
lds
add
bound
ss
daa
pop
push
jp
stc
scas
pop
stc
mov
(bad)
mov
sub
pop
out
je
dec
add
xlat
sbb
pusha
sbb
adc
cmp
push
xchg
jns
lds
xor
pop
xchg
mov
repnz
pop
or
xor
cmp
(bad)
and
and
cmp
and
shl
jl
mov
jo
pop
adc
inc
pusha
(bad)
sub
das
sar
fldcw
pop
das
sub
push
in
inc
movs
jo
(bad)
jo
das
in
movs
mov
das
jno
lds
xor
or
loop
mov
imul
push
push
test
add
sbb
ja
cmp
jne
cmp
ins
mov
jns
repz
lock
call
shr
test
add
mov
add
xor
jle
imul
jno
icebp
mov
arpl
aad
arpl
outs
push
lahf
pushf
loop
jmp
cmps
sub
xchg
add
sbb
cwde
(bad)
(bad)
jo
dec
call
xor
call
pusha
xlat
gs
mov
dec
movs
fisttp
jmp
dec
adc
pop
dec
pusha
pop
jb
popa
icebp
or
call
jae
mov
jnp
jl
clc
inc
inc
(bad)
jge
add
pop
cmp
xor
(bad)
call
jne
jl
sar
out
aaa
cmp
iret
push
inc
mov
js
jbe
mov
out
xor
sbb
push
arpl
mov
sub
adc
adc
pop
retf
and
cmp
dec
mov
scas
cmp
pop
repnz
xchg
and
icebp
adc
jnp
inc
shr
pop
or
pop
push
add
cmp
(bad)
sbb
mov
enter
inc
inc
test
dec
push
pop
adc
fs
push
sub
add
dec
loop
ror
dec
inc
jmp
bound
jle
aam
call
not
or
(bad)
fs
loope
ret
dec
mov
fsubr
test
std
and
sbb
mov
push
push
jne
bound
mov
fisttp
and
ds
pusha
cs
leave
test
rep
aas
sub
mov
pop
stc
xchg
xchg
iret
mov
ret
daa
xor
and
addr16
out
fisubr
pushf
retf
out
repnz
cmp
push
xchg
cmc
inc
(bad)
int
mov
lds
lea
adc
in
retf
mov
mov
push
sub
scas
sti
shl
pop
fst
mov
inc
cmps
xchg
neg
and
inc
cmc
push
scas
sub
nop
out
scas
sub
cmp
daa
add
mov
icebp
jns
outs
push
scas
ins
inc
push
outs
in
pop
pop
jge
adc
std
sbb
jmp
pop
mov
(bad)
jge
mov
addr16
mov
or
int
or
daa
neg
(bad)
xor
in
ret
rcl
cmc
icebp
icebp
pop
hlt
(bad)
test
ficom
cmps
xchg
scas
ret
out
iret
imul
mov
jg
cmps
in
cmp
aad
sbb
jmp
icebp
iret
xchg
aad
pop
rol
xchg
jmp
fwait
pcmpeqd
nop
cs
xor
pavgw
mov
and
mov
movlps
jmp
lock
cld
mov
scas
jle
xor
inc
push
mov
jae
or
outs
and
xor
or
push
push
and
cmp
and
js
xor
inc
daa
cmp
jmp
das
mov
fwait
push
bound
dec
ins
dec
lods
out
jo
fld
cld
ds
inc
addr16
enter
mov
(bad)
in
(bad)
daa
out
mov
imul
cmps
mov
mov
ror
mov
or
adc
and
out
aam
fs
mov
shr
and
(bad)
sub
ret
or
aaa
rcr
ds
add
mov
int3
rcl
fs
cmp
in
imul
dec
loop
ret
xor
jge
pop
into
adc
and
inc
ret
mov
adc
loop
mov
call
and
pop
adc
ja
mov
pusha
mov
(bad)
cmp
adc
xor
and
lock
fstp
js
adc
je
cmp
push
push
bound
xor
sahf
movlps
add
push
icebp
xor
or
lock
mov
sbb
test
sbb
pop
sbb
adc
xor
fcomp
sbb
cmp
and
aas
dec
cmp
push
scas
mov
cmp
xchg
cmp
and
das
pop
pop
pusha
jl
test
test
(bad)
adc
fiadd
adc
(bad)
pusha
or
push
fs
lods
das
sbb
call
in
xlat
mov
jbe
adc
sub
(bad)
push
inc
jp
push
ds
shr
aaa
pop
std
mov
xor
outs
mov
pop
or
out
push
xchg
arpl
outs
das
arpl
jge
adc
out
hlt
push
jp
and
and
sub
aas
(bad)
jl
mov
mov
and
cmp
mov
xchg
in
sub
les
jmp
inc
and
push
imul
dec
popa
bound
aas
data16
lods
xor
sbb
bound
push
push
outs
pop
mov
mov
jmp
fcomp
jns
stos
rol
stos
stos
pusha
dec
add
test
aas
imul
mov
ret
mov
ss
in
push
xchg
stc
dec
gs
in
sub
add
push
jbe
jb
mov
mov
push
push
in
cmp
dec
ins
add
cmp
(bad)
fldcw
(bad)
aad
fcom
add
jg
xor
push
ds
pop
cmp
test
xor
inc
jp
mov
xchg
sub
(bad)
cmp
(bad)
sub
(bad)
pop
xchg
mov
mov
sti
sub
jbe
in
jle
sti
imul
cli
je
mov
pop
push
jnp
jg
push
jg
sub
inc
cmp
repz
jge
mov
mov
mov
jae
jp
add
push
pop
lods
xor
and
dec
dec
mov
fstp
call
jo
je
dec
sub
jle
lods
lea
xor
clc
rcr
mov
cmp
ss
xchg
mov
std
div
bound
dec
pushf
xor
push
pop
cmp
push
push
ins
aad
sbb
dec
retf
and
rcr
rcr
xor
je
or
jge
lds
ja
cdq
inc
adc
mov
(bad)
clc
adc
ds
repz
dec
push
jg
test
mov
xor
enter
js
mov
jecxz
push
ins
or
sub
stos
cmp
pop
push
cmps
mov
test
push
add
fistp
xchg
lock
mov
jp
dec
jo
sub
sbb
xor
or
pop
test
push
mov
icebp
pusha
(bad)
enter
mov
mov
add
push
cmps
arpl
adc
sbb
jbe
sub
push
pop
lock
cwde
and
mov
repnz
into
sbb
ret
scas
cmp
inc
push
add
dec
adc
jb
xlat
xchg
xlat
sub
sbb
cmp
test
outs
or
jb
arpl
aaa
sbb
mov
push
jns
icebp
scas
fcomp
js
rcr
sbb
(bad)
iret
mov
lahf
fist
jns
and
in
jg
icebp
adc
jo
mov
push
std
int
int3
add
jmp
(bad)
inc
mov
arpl
sbb
or
mov
je
mov
arpl
clc
xor
mov
push
jnp
popa
out
mov
sub
sar
sahf
scas
sub
jmp
les
inc
pop
addr16
push
outs
dec
cdq
std
mov
push
mov
fs
dec
cmp
dec
pusha
jmp
leave
test
pop
mov
inc
mov
or
xor
xor
jmp
inc
xchg
pop
gs
cmp
sahf
rol
inc
stos
in
test
stc
mov
aas
xor
mov
or
push
inc
mov
out
pop
push
(bad)
movs
and
(bad)
lea
mov
and
arpl
sub
loopne
mov
out
ins
mov
xlat
enter
xchg
test
mov
jbe
jnp
fdiv
or
sub
add
push
inc
rcl
push
jo
jl
imul
rcl
inc
lahf
or
loopne
pop
jmp
call
ret
loop
(bad)
jb
xchg
jmp
pop
cmp
jns
das
jnp
cdq
push
int
jno
cmp
adc
(bad)
outs
xor
fldcw
imul
stc
ss
nop
daa
idiv
cmps
lahf
xor
mov
clc
daa
mov
mov
sub
or
retf
pop
inc
add
scas
pop
out
push
ins
movs
xchg
cmp
dec
addr16
xor
jbe
pop
dec
adc
mov
ins
lds
sbb
cmp
sar
ins
cmp
inc
lock
and
loop
pop
ss
movs
or
sbb
mov
test
scas
sub
(bad)
arpl
repz
xor
xchg
push
mov
in
mov
scas
hlt
gs
jg
sahf
into
sub
mov
jmp
(bad)
outs
ins
fld
adc
add
call
mov
jnp
test
sub
jg
mov
adc
adc
pop
retf
and
mov
outs
push
or
jge
mov
(bad)
(bad)
pusha
jmp
pushf
xor
and
adc
pop
icebp
jo
cmp
outs
leave
mov
f2xm1
mov
add
or
xchg
xor
aad
inc
cdq
mov
sbb
sub
sbb
dec
mov
int
adc
retf
neg
in
cmc
push
loopne
test
test
movs
inc
nop
jae
xchg
sbb
cs
sub
mov
push
jmp
dec
xlat
rol
scas
movs
cmp
ins
push
pusha
rol
jecxz
jbe
push
and
jge
aad
mov
lock
pusha
cli
sub
or
std
js
jae
jno
pop
inc
sbb
mov
add
inc
daa
cmps
xchg
xchg
mov
sub
dec
cld
mov
cdq
icebp
es
inc
push
jmp
arpl
ss
jbe
inc
inc
int3
aas
popw
popf
pushw
cwde
shl
popa
pop
push
inc
sbb
aas
and
jns
push
inc
mov
push
xor
mov
jbe
stc
dec
xor
cli
std
movs
jne
jae
data16
imul
jo
cmps
xlat
push
lds
fistp
std
pop
out
xlat
enter
xlat
icebp
adc
mov
test
fdiv
mov
mov
or
pop
in
lds
ret
fidiv
push
popf
inc
lds
adc
jl
xor
test
mov
movs
mov
cdq
movs
loop
cmp
int
sub
and
outs
and
inc
cld
out
mov
lods
cmc
(bad)
sub
add
test
inc
sti
mov
dec
clc
mov
lock
xchg
push
inc
popf
aad
ret
ja
movs
xlat
in
and
inc
mov
lds
add
sub
dec
in
(bad)
cmp
push
pusha
mov
sub
add
push
sub
leave
sub
daa
imul
(bad)
dec
cmp
or
xchg
loopne
and
push
or
mov
lods
call
mov
dec
mov
xchg
xchg
cmp
and
mov
out
retf
test
sub
pusha
push
mov
cld
mov
imul
push
fwait
push
jno
xor
cmc
or
xchg
xor
inc
in
xor
xor
sbb
or
add
(bad)
mov
cmps
leave
xor
inc
call
outs
scas
retf
sbb
rcr
and
mov
jmp
mov
fsub
jbe
aaa
jle
mov
pop
mov
mov
stos
cmp
imul
mov
push
jecxz
mov
pop
int3
mov
stos
xchg
inc
inc
inc
jle
dec
inc
movs
movs
repnz
push
arpl
adc
jbe
lahf
clc
jp
outs
add
add
cmp
scas
mov
idiv
fiadd
cs
jmp
(bad)
rol
cmp
cmp
pop
mov
adc
jmp
and
fidivr
movs
sub
fs
jg
xor
out
jg
mov
es
push
neg
pop
test
loopne
repnz
xor
in
jmp
or
not
mov
mov
pop
sub
or
std
fld
retf
das
adc
neg
enter
sti
inc
pop
fiadd
ret
adc
cmc
push
fxch
cmps
mov
jmp
cwde
sub
push
(bad)
pop
jbe
cwde
add
mov
cmp
cmp
std
mov
fisub
and
xchg
in
mov
(bad)
rcr
and
outs
es
cdq
retf
and
rol
dec
jge
xchg
mov
sub
fstp
or
(bad)
sub
mov
xchg
or
and
jg
jmp
jne
clc
ss
idiv
call
jmp
rcl
cmp
xchg
inc
test
test
dec
jle
ret
sub
mov
rcl
imul
sbb
retf
push
loop
pop
sub
in
xor
stos
dec
xor
dec
sbb
add
dec
hlt
xor
pop
adc
fadd
imul
push
popf
mov
outs
jae
fisubr
adc
xor
jmp
jge
xchg
clc
test
adc
sub
cmp
cmp
xor
rcl
inc
nop
stc
test
dec
(bad)
push
scas
cmps
imul
clc
inc
loope
jmp
sub
and
mov
iret
lock
xor
fist
pushf
mov
lods
sbb
cdq
inc
dec
push
not
loopne
jns
cmp
cli
in
mov
jp
cmc
mov
xchg
data16
into
bnd
push
sbb
pusha
and
fsub
jo
sbb
imul
nop
mov
dec
mov
in
sbb
mov
push
mov
mov
add
add
xchg
cli
push
stc
push
ja
mov
adc
jp
inc
mov
add
add
cli
pusha
idiv
xchg
add
pop
xchg
push
mov
ret
dec
or
pop
xchg
sbb
nop
push
mov
mov
loope
pushf
ins
mov
sub
pop
jnp
xor
push
(bad)
jmp
call
ins
jnp
and
jp
lods
push
cmp
cmp
out
out
cdq
sahf
sub
cli
pop
cmp
out
ins
cmp
pusha
test
mov
sbb
daa
pop
xchg
sar
fcomp
jmp
fist
add
xlat
mov
(bad)
mov
inc
test
ss
dec
jb
ret
dec
enter
adc
jae
mov
pop
repz
sub
xor
fcomp
aad
rcr
add
les
call
addr16
jl
xchg
enter
mov
mov
(bad)
in
push
add
mov
mov
das
cmp
cmp
mov
jmp
inc
scas
mov
jmp
fild
cmc
mov
in
pop
stos
push
and
scas
xor
movs
mov
mov
xor
push
jbe
cmp
dec
mov
in
fs
dec
cmp
(bad)
cli
xchg
or
jmp
dec
adc
or
pop
imul
mov
xchg
mov
pop
rol
and
adc
mov
dec
outs
push
xor
sbb
xor
aaa
rol
inc
pop
aaa
adc
mov
test
imul
pop
es
mov
js
mov
push
sbb
lahf
dec
enter
(bad)
dec
test
sub
pop
mov
pop
test
push
add
mov
jb
imul
lea
and
or
addr16
sub
sub
retf
add
movs
out
dec
sti
loope
out
mov
push
pop
mov
mov
loop
sub
adc
imul
loopne
dec
cmp
pop
mov
mov
jbe
xchg
jg
and
jl
dec
and
imul
push
push
je
je
pop
imul
dec
stos
shr
pop
mov
je
push
scas
enter
aaa
inc
or
add
aas
push
leave
cs
test
ins
stos
or
sbb
jno
(bad)
fwait
mov
mov
add
std
mov
mov
fidiv
pushf
ror
call
add
daa
sbb
(bad)
cli
int
xchg
ins
ret
sbb
addr16
sbb
add
push
pusha
mov
mov
sub
imul
push
test
dec
sub
mov
test
sbb
sub
mov
cmc
pop
pusha
cmp
add
je
popa
(bad)
in
pop
fs
outs
pushf
imul
mov
fisttp
stc
xchg
(bad)
fild
imul
mov
add
mov
pop
pop
adc
jge
cld
lea
cli
mov
or
or
or
stc
cmp
mov
arpl
mov
mov
cmp
nop
xor
mov
pop
xor
cmps
sahf
mov
leave
adc
and
retf
addr16
rcl
add
int
jns
cmp
jp
ror
mov
mov
call
retf
push
xchg
push
sar
repnz
cld
pop
enter
add
add
cmc
and
adc
mov
dec
push
xchg
pop
jecxz
xor
xor
out
lahf
movs
sbb
xchg
lock
rcr
stc
xor
sbb
mov
lods
jns
cs
aas
gs
aam
push
in
jecxz
out
push
aaa
jns
outs
retf
out
sbb
ins
mov
nop
xchg
aaa
push
inc
cmp
jmp
mov
push
in
bound
cmp
pop
adc
dec
fs
movs
aad
and
test
scas
and
sbb
dec
pop
push
jbe
push
xchg
push
push
out
call
call
pop
inc
adc
adc
adc
cmc
mov
dec
sub
fadd
loope
add
ds
mov
jns
rol
dec
jb
jb
push
sub
imul
xor
fld
jae
leave
call
inc
icebp
icebp
je
out
dec
sub
push
cmp
mov
sbb
mov
jl
and
push
adc
dec
mov
(bad)
mul
xor
or
dec
(bad)
dec
xchg
enter
in
or
call
retf
call
jno
fiadd
xchg
(bad)
sbb
mov
pop
retf
push
shl
sbb
inc
les
xchg
and
add
aam
cmp
add
and
push
stos
add
retf
jg
ins
lock
dec
lea
pop
jae
xchg
xlat
mov
pop
dec
mov
adc
cmp
add
jns
mov
in
or
sub
push
pop
add
mov
xchg
xchg
push
sub
push
repnz
push
jmp
ja
les
push
mov
adc
shr
and
loop
std
jno
and
mov
pop
cmp
or
or
xor
shr
shl
scas
dec
pop
sar
int
or
pusha
and
aam
cmp
mov
adc
retf
loopne
aaa
dec
ret
sbb
retf
stos
mov
jo
and
mov
jg
aad
mov
or
ins
xchg
push
ja
dec
cli
sbb
fnstsw
or
mov
xor
addr16
sub
fimul
jne
(bad)
in
pop
inc
mov
aad
mov
ds
adc
jno
pop
retf
pop
mov
mov
or
inc
cmp
jp
stos
jo
sub
xchg
scas
sbb
ficom
stos
jae
lea
ret
cmp
xor
iret
fadd
cmc
or
pusha
adc
push
das
popa
sub
mov
jne
fwait
lock
ja
sub
fstp
adc
stos
sti
lds
pop
cmp
out
pop
jl
das
(bad)
cmp
xchg
sti
xor
dec
fcom
das
out
stos
icebp
sbb
into
jmp
pushf
add
push
call
jo
out
ins
ja
imul
push
loop
mov
sub
mov
daa
ins
sbb
mov
aas
sbb
shr
xchg
mov
aad
pusha
dec
mov
adc
pop
mov
adc
popf
retf
popf
mov
xor
sbb
retf
add
cmp
pop
xlat
mov
ficom
stos
das
jo
xchg
inc
inc
jno
xor
sbb
jp
xchg
fwait
ins
mov
push
push
cmp
cmp
mov
call
xor
and
scas
(bad)
ja
mov
mov
jne
movs
cmp
xor
cli
push
jo
xor
and
jmp
addr16
stc
pop
mov
inc
jnp
mov
les
sbb
(bad)
stc
sub
or
jmp
ins
dec
inc
inc
pop
fistp
pop
xor
mov
xor
push
mov
sub
pusha
into
mov
fcom
cmp
inc
mov
mov
fs
inc
jo
rcl
(bad)
mov
mov
aam
xor
add
xchg
stos
cli
mov
cmp
push
mov
push
mov
jnp
call
push
loopne
mov
stc
dec
cmp
aad
(bad)
rcr
adc
mov
inc
aaa
sbb
xor
dec
sbb
push
stos
dec
adc
idiv
cmp
sub
inc
scas
stos
leave
imul
andps
mov
push
in
(bad)
mov
dec
jmp
sub
(bad)
and
inc
scas
jns
es
jmp
ror
cmp
out
xchg
mov
jb
jnp
mov
xor
loop
xchg
adc
pop
pop
les
push
xor
popf
jmp
add
(bad)
shl
sbb
adc
inc
pop
mov
test
ja
xor
popf
adc
inc
lahf
inc
jno
or
fnstcw
pop
xor
sbb
dec
stc
out
mov
inc
enter
dec
push
inc
test
in
dec
xor
cdq
cmp
lods
add
shr
cmps
dec
mov
push
cmc
push
inc
dec
pop
adc
fstp
leave
out
add
dec
push
cmp
loope
push
ins
loop
call
mov
sub
and
ds
out
ins
mov
cwde
mov
arpl
aad
jns
adc
sbb
sbb
push
outs
in
jno
(bad)
(bad)
into
xor
mov
fld
adc
and
ins
bound
cmp
(bad)
dec
dec
test
aaa
jns
inc
xchg
stos
jle
mov
xor
cmp
sub
sub
in
push
sbb
push
dec
lahf
inc
add
cmp
nop
jmp
inc
ins
bound
push
dec
popf
in
or
jno
repnz
xchg
cli
hlt
push
push
in
ret
repnz
cmp
and
jb
cmp
push
sub
addr16
sub
test
mov
jae
pop
jns
mov
push
mov
or
mov
out
js
fdiv
data16
and
jg
mov
jmp
or
mov
clc
push
out
shr
loope
xor
pop
pop
sub
imul
test
fs
mov
push
mov
int
push
dec
mov
pop
inc
cld
sar
movs
adc
in
mov
xor
xchg
imul
(bad)
movs
or
cmp
cli
call
mov
ficomp
and
dec
jle
ins
ss
fild
(bad)
ins
js
scas
movs
dec
or
jecxz
push
pop
(bad)
bound
fidiv
fbld
add
jmp
idiv
(bad)
out
mov
push
shl
xor
(bad)
push
xor
(bad)
ds
dec
call
mov
sub
cmp
push
pop
push
in
inc
loope
popf
stos
aad
aaa
mov
jmp
inc
sub
and
ja
jle
sub
mov
inc
inc
imul
das
cmp
out
inc
pop
repz
pop
and
jg
aad
(bad)
add
sub
mov
mov
cmp
inc
(bad)
pop
add
fild
push
pusha
mov
repnz
rcr
add
mov
inc
gs
push
(bad)
fcomp
mov
mov
loope
pusha
sti
inc
or
in
xchg
aas
mov
mov
pop
daa
xchg
dec
dec
mov
mov
fmul
movs
loope
out
xor
push
pop
out
or
jo
or
dec
imul
les
and
(bad)
iret
or
icebp
adc
aam
dec
push
inc
jge
call
mov
mov
mov
jmp
pop
and
sub
icebp
xor
pop
(bad)
call
inc
iret
cld
ins
scas
xchg
imul
push
inc
or
jo
xor
aad
or
xor
sub
pop
cmc
pop
jne
adc
jno
jmp
add
add
inc
jno
cmp
mov
je
sti
jno
int3
shr
push
std
nop
jo
hlt
xor
cmp
cs
clc
fs
and
push
inc
call
bound
or
fs
outs
(bad)
icebp
pop
(bad)
in
dec
pop
call
adc
out
push
jmp
daa
cli
in
mov
jg
push
cmp
cmp
push
ja
jmp
idiv
pop
mov
dec
in
dec
inc
jg
pop
sub
outs
push
ja
and
or
popf
lods
push
pop
push
xor
(bad)
sub
mov
sub
in
retf
cwde
retf
icebp
push
inc
mov
jne
mov
loop
popa
retf
push
arpl
movs
out
mov
inc
jle
jbe
jmp
inc
adc
sti
in
jb
loop
inc
mov
or
cwde
push
cmp
scas
sub
push
adc
or
push
bound
add
xchg
daa
jb
ret
popf
cmc
cwde
pop
aad
dec
xor
test
es
loop
(bad)
test
dec
jo
or
mov
or
xor
out
push
loope
dec
call
sbb
retf
xchg
ret
and
push
loopne
cs
cli
jg
xchg
jb
gs
mov
push
lock
cmp
jno
jmp
cmp
pop
push
fsubrp
fistp
mov
lods
cmp
jecxz
rcl
xor
push
shr
inc
inc
into
ins
push
mov
jmp
xchg
aam
int3
and
sub
inc
push
jp
pop
rcl
or
fst
cli
jge
ja
movs
cmp
shr
sub
int3
aam
sub
cmp
jecxz
sub
push
aaa
cmp
mov
cmp
(bad)
push
jmp
sub
cmps
inc
jp
test
jmp
cmps
(bad)
mov
loop
imul
or
add
mov
in
or
pop
pop
lea
xchg
rcl
mov
in
stos
mov
inc
sbb
cmps
std
test
sar
mov
xchg
pop
xchg
rol
jnp
xchg
pop
iret
fimul
lea
pusha
test
push
sbb
inc
fisubr
or
add
and
in
cmps
(bad)
pop
fadd
jle
in
cli
fnstenv
adc
mov
push
xor
adc
in
sub
cmp
psubb
imul
outs
cdq
ins
adc
ret
or
push
js
outs
mov
loope
dec
cmps
or
pop
pusha
sub
and
ret
ds
jno
adc
mov
mov
pop
cmp
mov
mov
outs
js
xchg
or
ficomp
std
push
repz
aas
enter
sub
mov
adc
outs
and
sub
ror
jb
sub
ins
mov
test
inc
les
test
sahf
xlat
xor
jmp
sbb
push
test
xlat
pop
jle
pop
mov
iret
stos
mov
xor
push
mov
(bad)
ds
imul
sti
pop
stc
cmp
xor
jne
add
jmp
and
jb
aaa
mov
ror
pop
loop
gs
ror
push
out
ss
adc
fdiv
in
in
aad
shr
mov
es
mov
push
xchg
aas
fadd
add
shl
push
dec
pop
mov
int
loop
cmp
jmp
mov
xor
jg
sbb
cmp
mov
hlt
scas
push
xchg
add
lea
mov
ins
adc
dec
pop
pop
dec
adc
adc
mov
shl
jne
test
jbe
repz
push
inc
jle
in
int
out
adc
lock
push
add
pop
call
sub
out
es
inc
call
inc
sub
(bad)
and
jns
jbe
xor
push
sar
mov
inc
movs
or
pop
nop
aad
xor
dec
fiadd
fist
dec
mov
sub
mov
xchg
pusha
pop
nop
fwait
jl
int3
idiv
enter
sahf
loope
inc
aam
xchg
xchg
xor
aam
add
or
inc
sub
inc
jp
add
dec
sub
cmps
popf
out
scas
inc
pop
outs
jle
mov
sub
xchg
outs
sti
sub
pop
outs
mov
scas
cli
pushf
mov
call
mov
mov
mov
dec
pop
pop
loopne
jns
sub
or
adc
sbb
inc
(bad)
pop
dec
inc
out
inc
mov
daa
not
sub
push
jne
pop
(bad)
push
ret
es
sub
in
xor
jno
ds
popf
inc
aaa
loopne
daa
daa
mov
or
xlat
ins
lds
dec
clc
sahf
es
push
dec
xchg
mov
mov
fmul
stos
fisubr
into
inc
dec
fcom
not
xor
push
repz
push
and
scas
nop
mov
ins
dec
pop
test
nop
aaa
stos
pop
mov
repz
fdiv
daa
icebp
sub
fcomp
sbb
pop
loop
std
sbb
sub
movs
retf
movs
(bad)
call
adc
xchg
and
ret
arpl
sahf
aam
mov
pop
sbb
in
fbstp
fisubr
outs
es
loop
inc
sub
pop
jp
jne
and
or
test
pop
es
int
lods
add
invlpg
mov
dec
and
js
push
loope
mov
popf
out
test
inc
sbb
adc
mov
fidiv
fbld
jl
es
sbb
mov
push
mov
push
sub
inc
jge
les
cmp
xlat
sub
mov
jae
inc
jnp
call
out
cli
push
bound
sub
and
jbe
inc
and
xor
es
jo
mov
call
xchg
and
dec
mov
mov
push
jg
sbb
mov
imul
sub
mov
jecxz
jmp
cld
arpl
and
adc
aad
adc
(bad)
jmp
out
repz
pop
push
sbb
push
or
jp
movs
pop
jge
jmp
ja
xchg
rcr
icebp
mov
mov
pop
neg
gs
xor
shl
cli
xchg
fs
inc
pop
es
xchg
and
push
dec
daa
or
xchg
xchg
jp
dec
and
mov
jmp
(bad)
sbb
xchg
popa
jg
sub
dec
aam
stc
or
into
mov
jo
jg
rcl
cmps
fs
push
test
je
repnz
jmp
adc
mov
mov
js
dec
into
inc
stos
cli
inc
jle
inc
sbb
mov
add
call
sub
cmp
jmp
mov
jecxz
ror
cmp
push
and
cmps
cmp
pop
scas
or
cmps
test
dec
lahf
test
adc
std
pop
ins
clc
shl
dec
push
jl
aam
outs
sar
dec
dec
sub
scas
lahf
sub
movs
loopne
xchg
cmp
test
stos
sar
jl
in
pop
add
adc
add
mov
shr
daa
pushf
xor
xor
mov
test
cwde
fdivrp
mov
shl
mov
ss
clc
adc
mov
pop
mov
and
jo
retf
into
call
inc
pop
fbstp
inc
add
adc
lea
pop
jp
outs
sub
aam
pusha
loope
push
imul
cmp
jbe
ret
rcr
sbb
div
push
dec
mov
out
xchg
aad
and
mov
inc
jns
in
jle
outs
shl
ja
sub
pop
push
test
test
dec
sub
(bad)
shl
shl
or
cli
adc
call
(bad)
jns
rol
xchg
mov
cld
in
fucomi
dec
rcl
fisttp
jne
pop
cs
xchg
push
jno
ds
ins
stc
cli
aam
sub
jmp
xchg
mov
xchg
outs
addr16
in
test
ret
mov
shl
test
popa
xor
shr
movzx
pop
in
pop
and
and
dec
imul
das
pop
add
aam
xor
aam
das
sar
pusha
scas
sub
xor
mov
sub
push
jp
push
and
mov
jo
or
cld
repz
sub
rcl
pop
fst
push
sbb
mov
mov
jle
lds
dec
or
lahf
or
pop
(bad)
stc
xchg
bound
sbb
add
xchg
add
fdivr
ret
dec
push
repz
aaa
clc
jge
retf
mov
call
xor
test
pop
pop
leave
loop
jl
add
into
std
xchg
ins
ss
movs
ins
cmp
or
and
push
movs
test
sahf
inc
inc
inc
fwait
or
sub
inc
fwait
push
cmp
std
jne
lea
and
out
sub
cmp
rcr
test
pop
inc
mov
jne
or
aad
pop
gs
ja
repz
stc
add
ds
(bad)
in
pop
sbb
ror
push
sbb
out
lods
inc
push
inc
inc
shl
or
repz
add
push
cmp
jge
imul
cmc
mov
int
sub
shl
xchg
push
ins
pop
sbb
xor
and
in
push
sub
call
inc
out
test
jno
jge
js
ror
dec
rcr
dec
push
in
call
test
and
sub
loope
adc
mov
jle
gs
cmp
mov
push
xchg
push
(bad)
adc
in
mov
dec
dec
cmp
mov
outs
pop
inc
mov
push
test
pop
leave
adc
js
je
and
bound
pop
(bad)
sbb
adc
cmp
sub
inc
cmps
scas
pop
mov
jle
cmp
jp
cs
data16
pushf
fcomp
aaa
push
push
(bad)
outs
xchg
sub
mov
cs
cmp
bound
pop
sbb
push
stc
call
jecxz
loopne
mov
(bad)
mov
retf
bound
xchg
adc
inc
cs
je
in
loop
adc
or
xor
dec
sub
out
push
out
sub
in
mov
push
jno
cli
fs
call
push
sub
push
mov
jb
add
movs
movs
xor
and
or
leave
sub
push
outs
jbe
fldcw
jmp
jo
cmp
push
lock
jle
fldcw
stc
push
adc
jne
xor
mov
inc
mov
pop
in
mov
sub
cmp
adc
icebp
mov
inc
call
std
mov
fnsave
lods
mov
arpl
jle
sbb
fs
scas
sub
inc
retf
ror
and
mov
or
inc
fld
inc
mov
les
ror
sbb
in
imul
sbb
imul
enter
ret
pushf
pop
mov
and
shl
call
adc
xor
inc
loopne
out
sub
ins
cld
push
ret
cs
xchg
jge
mov
jecxz
loope
enter
push
mov
mov
ins
outs
cdq
xor
push
movs
inc
cmps
sbb
test
jp
sub
cmps
ja
(bad)
jecxz
stc
mov
sbb
pop
(bad)
pop
jg
lods
cmp
sub
pop
add
mov
adc
inc
cmp
pop
and
icebp
xor
test
inc
sbb
in
mov
jge
push
int
les
lods
scas
push
jl
push
pop
(bad)
leave
bound
out
and
nop
jbe
jp
jbe
es
mov
std
xchg
adc
add
dec
(bad)
out
inc
and
das
leave
test
fwait
mov
enter
jnp
das
movs
dec
sbb
rol
push
or
out
jbe
inc
fnstsw
mov
(bad)
sub
and
test
inc
push
mov
inc
cmp
sub
xchg
pop
je
lods
nop
lock
aam
pop
test
js
add
mov
fsub
loop
ins
mov
outs
mov
lock
mov
xchg
movs
and
jmp
xchg
fsubr
push
movs
arpl
int
mov
out
ds
in
jb
cs
dec
aam
adc
cdq
bnd
pop
mov
dec
push
rcr
xchg
jge
mov
shl
call
cmps
jecxz
inc
pop
sbb
loope
mov
je
pop
arpl
xor
rol
outs
stos
fisttp
daa
movs
pop
inc
daa
cmps
fild
mov
(bad)
xor
call
add
inc
outs
scas
jge
test
shl
or
push
xor
sub
add
jge
dec
or
adc
(bad)
in
adc
aas
cld
(bad)
ins
ins
inc
mov
or
sar
lds
test
and
outs
(bad)
imul
mov
imul
mov
fcomp
scas
stos
loopne
iret
jg
sbb
loop
rcr
fwait
pop
cdq
add
mov
jns
xchg
sub
inc
sub
mov
jp
ds
push
aas
cmc
dec
lds
and
out
jmp
sub
inc
pop
(bad)
stos
test
mov
frstor
and
jecxz
sub
pop
fiadd
mov
call
icebp
retw
sub
sub
or
jg
movs
mov
inc
mov
fnstsw
mov
lea
jo
push
pop
repz
rcl
jmp
clc
xlat
mov
push
jp
mov
inc
loopne
test
sbb
movs
or
and
movs
mov
jbe
cli
cmp
in
xchg
mov
and
les
jle
xor
(bad)
cmp
or
or
pop
aaa
mov
mov
lods
mov
stos
adc
dec
fdiv
sti
push
pop
hlt
fsubr
ss
adc
sub
repnz
sub
jmp
mov
push
fs
shl
rcl
or
out
mov
sbb
jmp
fnstsw
adc
dec
sbb
shr
mov
imul
sbb
rcr
(bad)
jmp
add
sbb
outs
in
add
call
pop
jo
and
push
mov
mov
dec
xlat
push
and
fs
mov
std
mov
pushf
jl
cmps
jp
push
cs
add
jbe
inc
daa
stos
fadd
xor
add
cmp
lock
cmp
jge
xlat
dec
sbb
cmp
imul
sub
fimul
out
mov
dec
in
mov
je
xchg
rcl
lock
loop
add
addr16
mov
mov
cmp
sub
mov
dec
xor
jle
and
add
mov
mov
cmp
jae
xchg
or
adc
pop
add
pop
cmps
ret
jg
dec
arpl
sub
sti
mov
adc
push
inc
aam
bnd
call
scas
cmp
cli
(bad)
fld
sbb
sub
mov
into
sti
mov
outs
and
and
ret
stos
inc
in
xor
jle
or
cs
cmc
inc
mov
outs
ja
loop
aam
pop
inc
scas
mov
sbb
sub
cmp
sbb
inc
push
inc
popa
jge
add
mov
or
mov
mov
push
mov
neg
movs
or
test
mov
inc
aaa
data16
(bad)
sub
or
cli
jmp
out
test
sbb
pop
test
cs
fmul
inc
and
mov
fcomp
xchg
inc
cmp
jmp
rcl
xor
in
jbe
dec
adc
jo
pop
sub
rcr
pop
ds
push
mov
jae
mov
ror
out
inc
xor
xor
mov
inc
aam
mov
inc
mov
loope
add
lds
sub
mov
and
jae
shr
cmps
xor
sub
mov
push
daa
ins
jmp
sbb
mov
inc
fdiv
add
jno
les
retf
push
jmp
loope
sbb
lock
pushf
inc
gs
fld
push
pop
rcr
jnp
jns
sub
gs
sub
push
jb
out
les
sbb
jbe
mov
jle
outs
sar
pop
jno
call
mov
push
inc
push
scas
jl
call
pop
xor
in
mov
in
and
mov
dec
add
cwde
pop
call
xchg
repz
or
sub
pop
cdq
mov
dec
pop
jmp
mov
pop
mov
(bad)
pop
inc
in
das
xor
cmp
xchg
xchg
jb
dec
or
es
sub
outs
inc
addr16
mov
add
adc
push
jae
ficom
test
outs
out
mov
mov
out
inc
mov
inc
(bad)
xor
lods
and
dec
sub
mov
push
sub
sub
aam
leave
ret
imul
pop
pop
aam
rcr
pop
mov
cdq
xor
sbb
dec
cs
mov
mov
cmp
dec
fidivr
mov
pop
into
jbe
push
fsubr
in
sar
adc
jmp
(bad)
mov
xor
in
popa
mov
add
test
sub
ror
(bad)
mov
aas
push
fisttp
cmp
sbb
sti
dec
sub
xor
jne
adc
pop
push
fdiv
jb
shr
inc
sbb
inc
xor
pop
nop
(bad)
push
mov
push
or
es
xor
stos
add
sub
adc
rcl
sbb
in
shl
adc
aam
fistp
das
movs
dec
xchg
inc
pusha
call
es
inc
popf
jl
cmp
mov
cmp
(bad)
js
or
xor
jle
stos
and
dec
les
push
jecxz
push
pop
push
stos
adc
jmp
xor
ins
(bad)
mov
jmp
cdq
mov
sub
stc
sub
adc
cmps
push
mov
push
mov
adc
ret
cmc
ds
sub
add
mov
rcr
xchg
xchg
jne
jle
arpl
push
adc
(bad)
fwait
(bad)
pop
mov
cmp
mov
jne
test
aas
xchg
sub
ja
aaa
add
stc
xor
mov
cmp
aas
sub
cld
inc
idiv
xchg
test
pop
jae
lods
pop
les
sub
ror
cs
push
shr
daa
pop
cmovl
pusha
push
mov
push
daa
aaa
lds
pslld
cmp
sbb
test
or
loopne
mov
in
mov
ficomp
add
arpl
adc
inc
mov
mov
mov
inc
imul
shl
xor
sti
xchg
(bad)
les
jo
xchg
fmul
(bad)
setle
data16
out
adc
add
pop
pop
jmp
fcomp
inc
(bad)
push
mov
repnz
pushf
fmulp
(bad)
cmp
enter
or
or
sub
stos
dec
js
jo
and
(bad)
out
mov
push
rcl
cmp
aam
pop
out
xor
pop
cdq
movs
and
aas
aas
jnp
je
add
pusha
push
out
pop
push
cdq
jmp
fadd
push
aaa
inc
push
push
(bad)
cmp
loopne
cmp
pop
jno
xchg
shl
push
jle
loop
aam
loope
jl
rcr
mov
inc
sbb
push
jp
ins
jnp
cdq
jo
sub
pop
(bad)
fdivr
sub
popf
pop
ds
jl
inc
int
inc
inc
aas
jmp
call
mov
pusha
sbb
lods
xor
out
fidivr
in
imul
cs
aas
jmp
outs
cmp
pusha
pop
(bad)
sbb
int3
loope
adc
cmps
fild
push
out
cmp
pop
adc
fld
jne
mov
(bad)
jbe
push
push
push
sub
(bad)
fsub
imul
cli
inc
dec
cmp
(bad)
mov
mov
iret
and
addr16
popa
sub
shl
repz
(bad)
out
inc
cmp
addr16
cmp
mov
lods
add
lods
cmp
sub
pop
clc
inc
aaa
mov
jns
lods
(bad)
cmc
jo
cld
sub
jle
mov
popf
add
scas
inc
mov
fs
fwait
pop
scas
sahf
out
pusha
dec
ja
mov
mov
sub
jle
leave
inc
sti
ss
pop
or
call
loop
push
sub
push
cdq
inc
mov
shl
jge
pop
ins
jg
mov
sbb
das
xor
enter
xor
mov
adc
sub
les
push
cli
in
in
loopne
hlt
movs
xor
stc
add
retf
ins
ret
cs
jmp
retf
xor
nop
in
inc
mov
jo
pusha
out
sub
mov
(bad)
jle
lahf
gs
mov
pop
cmp
pop
imul
jno
dec
(bad)
loope
xor
or
stos
arpl
into
retf
pop
aas
mov
adc
xor
inc
leave
xchg
sub
and
jo
jbe
test
ret
pop
mov
mov
jbe
add
out
retf
loopne
imul
(bad)
daa
cdq
scas
jg
pop
dec
cmp
pop
add
mov
call
pop
aam
add
aas
lock
dec
sub
aaa
dec
out
xor
lds
in
stos
push
cmp
out
xor
jno
add
jg
mov
xchg
fs
ror
stos
mov
sbb
inc
scas
cmp
(bad)
push
aaa
inc
sub
ror
push
jecxz
xchg
mov
mov
aam
xor
sbb
add
sti
jmp
jno
test
pushf
(bad)
push
(bad)
jae
fcmovu
jns
mov
ficomp
push
jge
sub
adc
sub
jo
stc
cdq
fild
scas
jo
jecxz
adc
mov
mov
xor
cs
cli
jl
sbb
lds
arpl
mov
xchg
jmp
dec
dec
cwde
sti
and
pop
ds
(bad)
xchg
jecxz
jp
aaa
jl
inc
sahf
into
cs
sub
dec
mov
add
lea
icebp
jmp
in
jg
mov
cmp
mov
lods
es
cli
lods
fs
sbb
call
jno
adc
js
mov
inc
xor
into
test
push
ja
(bad)
fs
cmp
sbb
hlt
push
js
or
das
push
pop
cdq
ss
inc
leave
or
int3
push
pop
cs
test
fsub
mov
cwde
and
jbe
out
inc
ins
stos
jmp
pop
and
add
pop
jb
mov
and
jmp
jb
jne
sub
adc
outs
inc
fisub
sub
jmp
(bad)
repz
xor
mov
pop
das
daa
push
ds
cmc
dec
jle
dec
fadd
xor
stc
jne
mov
out
inc
or
fucomp
out
pop
clc
in
pushf
push
test
cmc
push
inc
(bad)
sbb
push
pushw
xor
gs
out
push
jbe
xlat
jmp
jmp
dec
ja
pushf
scas
xchg
sub
jb
test
jmp
mov
inc
sbb
ds
add
xlat
adc
add
out
sub
sbb
cld
adc
cmp
jnp
pop
pop
test
inc
lods
dec
pop
dec
inc
in
dec
inc
cmp
jge
dec
ror
das
ss
fsub
xchg
adc
push
ins
(bad)
aaa
add
add
scas
mov
xor
jbe
mov
ins
adc
cmp
sub
mov
push
sub
adc
push
push
cs
cmp
pop
addr16
mov
dec
xchg
pop
jge
adc
hlt
inc
mov
and
mov
mov
dec
arpl
adc
mov
inc
fcom
sbb
cmc
cld
sub
adc
in
int
adc
test
adc
repnz
in
dec
mov
xlat
xchg
je
mov
mov
ret
out
lahf
pusha
jmp
shl
shr
int3
mov
add
push
mov
clc
xchg
sub
fidiv
jnp
inc
cmp
(bad)
mov
xor
rcr
and
mov
jmp
jne
loop
xor
out
inc
loopne
into
cmp
outs
or
xchg
hlt
add
cs
jbe
out
push
push
(bad)
addr16
pop
push
jbe
adc
call
dec
loope
sub
cmp
sbb
push
jbe
sbb
rol
push
add
repnz
pop
dec
aas
push
fisttp
inc
imul
aad
xor
jmp
stos
ficom
ds
sti
jb
pop
fisub
cs
inc
iret
mov
loope
push
out
(bad)
sbb
mov
aam
imul
out
dec
sti
out
dec
icebp
ds
jmp
and
call
push
push
ss
shl
ja
lock
ins
jbe
sbb
popf
sbb
test
xchg
cmp
fsub
adc
lahf
mov
rcr
or
sub
and
addr16
push
sbb
mov
mov
or
lods
aaa
inc
sub
aas
sbb
lock
ds
and
movs
pop
adc
xor
(bad)
cmp
pop
aad
cwde
and
movs
or
das
dec
push
outs
cmp
and
gs
sub
push
lods
test
adc
mov
clc
push
gs
xor
mov
pop
xchg
scas
lock
inc
dec
sbb
inc
or
push
jo
jmp
imul
lods
fimul
and
inc
shl
lahf
rol
xchg
pop
cmp
cli
leave
xor
lock
test
int
in
lea
std
cmps
lods
xor
mov
mov
mov
stos
outs
mov
cs
sbb
test
sti
push
pop
cmps
pop
cmps
jge
inc
lock
jbe
sbb
test
call
or
movs
(bad)
into
and
clc
and
cmps
push
retf
es
aas
inc
push
xor
fld
fdivr
cdq
mov
std
pop
test
sbb
dec
pop
ds
sub
add
js
sub
jbe
addr16
add
sub
adc
jns
cmp
idiv
or
push
inc
adc
sbb
inc
sub
mov
or
imul
mov
dec
pushf
push
imul
in
sub
ins
int3
jmp
xor
xor
adc
push
mov
add
(bad)
push
and
arpl
sahf
add
addr16
std
iret
retf
jp
jbe
pushf
leave
push
pop
xchg
inc
out
jmp
sbb
xchg
mul
jle
sub
pop
sub
test
pop
retf
xor
push
jp
push
push
adc
jecxz
neg
imul
push
fwait
dec
cmps
mov
xchg
and
retf
pop
lds
jmp
test
add
or
(bad)
or
push
cmp
cmp
push
inc
loop
mov
jbe
push
out
iret
or
pop
dec
scas
sub
sbb
and
pop
add
xor
dec
sub
add
jge
daa
dec
mov
retf
mov
inc
xor
push
sub
jbe
aaa
inc
xchg
or
repnz
adc
(bad)
jnp
push
mov
retf
leave
outs
cs
mov
retf
cmp
call
and
rcl
cmps
xchg
and
mov
loope
xor
dec
jb
push
mov
popa
movs
test
int
add
je
xor
push
retf
imul
push
xchg
mov
clc
xchg
ins
addr16
adc
outs
mov
inc
sub
mov
xor
fnstenv
cmp
add
scas
xchg
into
mov
rol
cli
fld
dec
dec
neg
push
pop
mov
xchg
aas
xchg
out
jbe
sub
or
xchg
ret
push
jecxz
aaa
out
aad
and
pop
cmp
int
call
or
pusha
jmp
leave
in
or
pop
mov
and
pop
add
pop
adc
nop
adc
push
loopne
sahf
and
xor
daa
xlat
jmp
jnp
and
mov
loop
mov
(bad)
fldenv
adc
scas
adc
ret
lea
xchg
lods
sub
dec
shl
shl
and
es
and
inc
dec
xchg
repnz
sti
dec
popf
test
add
jno
pusha
fbld
popa
movs
addr16
sub
arpl
cmp
sahf
les
(bad)
in
bound
cmp
loop
mov
jecxz
int
movs
cmc
sar
cdq
push
adc
mov
fisub
jl
mov
das
cmp
xchg
add
mov
push
jmp
ja
loope
bound
push
push
ss
add
fcomp
push
sar
aas
jbe
dec
sub
or
in
mov
push
sbb
dec
push
lods
mov
cld
dec
lock
jle
out
das
sub
test
lods
dec
enter
xchg
aad
pusha
scas
mov
and
mov
in
adc
mov
mov
cli
xchg
popa
sub
repnz
cdq
out
xchg
ins
cmps
mov
loop
pop
jp
out
ret
add
imul
mov
setge
xchg
shl
sbb
sub
ja
test
loop
test
repnz
outs
jns
ins
add
div
xchg
in
push
test
mov
and
jne
rol
cmp
loop
inc
mov
test
test
repnz
pop
lahf
jle
and
xor
div
sbb
retf
repnz
(bad)
add
leave
mov
inc
std
xor
dec
lods
push
push
jp
xchg
pop
shl
dec
push
xor
mov
imul
adc
call
bound
push
rcl
inc
mov
xchg
pop
push
cld
xchg
inc
add
ins
xor
adc
pop
out
cli
push
dec
inc
add
fsqrt
outs
fstp
cmc
inc
gs
push
retf
xor
outs
add
std
enter
add
or
movs
ins
leave
push
and
enter
ret
das
repnz
or
outs
adc
aam
popfw
aam
out
sub
mov
cmps
jno
mov
push
jge
jp
leave
mov
mov
inc
cmp
enter
outs
sub
jmp
pop
sub
jle
movs
inc
dec
enter
(bad)
std
inc
out
push
push
mov
jmp
pop
dec
adc
jp
loope
ss
ror
outs
jecxz
inc
sbb
(bad)
xor
test
xor
jb
inc
xor
mov
hlt
aas
lock
sti
in
in
mov
or
adc
mov
dec
cli
push
mov
dec
cmp
jg
(bad)
scas
xor
xor
cli
es
jmp
push
mov
pop
push
leave
stc
aaa
inc
jb
dec
xor
inc
stos
jge
(bad)
stc
(bad)
mov
pop
and
mov
mov
jle
rcr
push
dec
ja
adc
adc
dec
pop
icebp
cmp
in
mov
iret
adc
fcmovnu
clc
mov
push
adc
add
mov
mov
sbb
dec
pop
popa
push
inc
and
xchg
xchg
stos
pop
mov
leave
stos
ins
iret
mov
xor
and
scas
xor
push
fs
retf
mov
out
push
and
std
mov
test
xor
cdq
sbb
jae
push
jns
test
sti
mov
mov
shl
mov
lods
push
popf
xor
mov
ret
enter
out
sahf
jg
pop
lock
ret
push
cmp
and
das
loopne
dec
mov
into
pop
fwait
(bad)
movs
xchg
or
sbb
dec
int
loope
cmp
xor
or
mov
cmp
or
cmp
xor
pop
push
jo
outs
aas
mov
mov
cwde
pop
mov
fwait
mov
sub
aas
and
stos
inc
push
sub
mov
movs
ins
xchg
xchg
ret
loop
mov
jecxz
add
sbb
daa
pop
xor
adc
mov
sbb
dec
jl
jo
jne
lahf
mov
xchg
add
lods
xor
adc
es
sahf
xchg
ror
clc
adc
push
mov
sbb
mov
daa
pop
add
fst
xchg
out
cmc
int3
inc
mov
jbe
xor
mov
push
ss
leave
or
add
(bad)
loope
cs
mov
sti
sub
shl
pop
jmp
inc
mov
dec
test
shl
cmp
dec
pop
ds
jb
and
sub
cmp
shl
dec
and
dec
sahf
pusha
jbe
rcr
lds
repz
sar
sbb
push
cmps
(bad)
push
mov
pop
out
xchg
xor
push
jp
es
mov
cdq
test
imul
in
cdq
rcl
sahf
mov
hlt
div
add
out
mov
jmp
sbb
shl
in
cmp
mov
cmp
xor
cmp
mov
out
jmp
jb
sub
pusha
cmc
mov
cwde
int3
mov
cmp
push
scas
inc
pop
test
mov
mov
repz
fwait
push
push
sub
(bad)
call
dec
out
pop
push
xor
test
gs
movs
sar
mov
out
mov
es
or
xchg
cmps
fsubr
mov
pop
xor
stos
xor
push
mov
aam
shl
(bad)
pop
mov
sub
out
inc
mov
inc
in
ret
sbb
sbb
movs
inc
test
out
adc
add
and
sar
sti
mov
in
pop
ret
xor
jmp
jmp
lahf
gs
aas
adc
sbb
popf
xor
(bad)
mov
xor
inc
std
mov
in
push
cld
mov
lods
or
and
add
push
ror
dec
jecxz
jmp
sub
leave
push
loopne
rcr
in
stos
mov
pop
aad
push
or
xor
das
dec
call
fst
and
jns
adc
ins
jno
jne
xchg
test
inc
push
scas
jl
mov
xor
stos
data16
ins
in
mov
and
jl
jb
jmp
aam
popf
repz
cmp
stc
jno
jmp
out
scas
ss
jmp
cdq
push
dec
pop
inc
inc
mov
arpl
js
loope
rol
add
or
jmp
xchg
dec
mov
mov
jns
cmp
sbb
out
cmp
daa
or
mov
or
adc
(bad)
sbb
fcomp
out
pop
in
cmc
dec
jae
outs
addr16
stc
cmp
and
and
repz
cmp
jo
xor
popa
mov
mov
adc
pop
pop
das
popf
mov
and
jge
psubb
push
stos
rol
mov
int
imul
inc
mov
stos
jge
xchg
mov
or
cld
in
mov
push
adc
dec
gs
cmp
imul
add
pop
mov
shl
bound
leave
js
mov
stc
xor
add
aas
imul
loop
test
pop
cmp
xchg
cs
fnstenv
pop
pop
and
repnz
jg
into
test
mov
and
sbb
ror
mov
jge
test
xchg
mov
fdiv
inc
mov
mov
clc
xchg
ins
push
stos
push
mov
popf
pop
sbb
sar
pop
das
loopne
aaa
sti
repz
test
pop
in
add
adc
cmps
ja
in
nop
stos
or
cmp
push
pop
jge
jmp
mov
inc
dec
inc
test
mov
je
retf
adc
mov
gs
stos
pop
iret
loop
lds
mov
test
pop
pop
enter
cmps
std
adc
mov
jecxz
xchg
(bad)
pop
jno
mov
push
cbw
addr16
dec
in
dec
inc
call
mov
movs
sbb
add
popf
xor
push
dec
pop
scas
pusha
div
cdq
clc
addps
ret
iret
inc
mov
rol
clc
jnp
daa
jmp
push
inc
jae
jb
pop
or
ret
call
(bad)
popa
cmp
mov
dec
jmp
out
push
sbb
outs
xchg
inc
repnz
bound
iret
lods
adc
adc
inc
sub
push
sahf
jle
aam
jno
nop
push
imul
mov
cmp
mov
fistp
or
int
pop
sbb
jge
fwait
inc
dec
pop
jmp
mov
jno
sar
or
lods
push
pop
add
outs
loopne
ret
or
push
(bad)
fist
das
sbb
add
stos
add
mov
sub
jae
inc
out
and
add
arpl
inc
mov
aam
repz
mov
mov
jb
in
cmp
dec
stc
cmp
sbb
mov
inc
inc
ins
test
add
je
xor
mov
add
xchg
jmp
mov
cli
inc
xor
sub
loope
jle
es
pop
sbb
push
cmp
add
int
jnp
sub
lds
adc
cmps
stc
sti
leave
xor
xchg
and
xchg
(bad)
(bad)
aaa
adc
or
adc
sub
ret
cmp
fisttp
outs
inc
push
repz
test
bound
pushf
repnz
mov
xchg
sti
test
cdq
jg
and
dec
fwait
loope
jns
sbb
daa
sub
push
scas
je
and
rol
dec
push
xchg
scas
test
adc
loopne
jmp
dec
lock
add
cmps
xchg
mov
daa
cmps
retf
and
scas
fwait
out
pop
ror
push
aaa
dec
pop
sub
sub
(bad)
ret
mov
push
loope
xor
(bad)
arpl
add
js
or
xor
ret
int3
shl
ror
push
das
repnz
jne
xchg
push
in
test
aad
xor
stc
jno
adc
push
cld
xor
and
mov
mov
adc
mov
inc
imul
mov
push
jp
scas
cmps
mov
ja
xchg
fisub
shl
xor
inc
sub
ret
mov
mov
and
dec
repnz
shl
ins
neg
jp
inc
cmp
xchg
out
cmp
xlat
fistp
and
shl
xchg
cwde
ins
dec
mov
in
cdq
inc
mov
xor
call
int3
adc
add
gs
loopne
pop
(bad)
int3
cli
jg
mov
add
and
clc
in
fadd
push
bound
sahf
stos
leave
jmp
lods
jb
mov
popa
sbb
mov
aas
adc
sbb
mov
sbb
sub
jmp
and
mov
fnstsw
and
adc
cmps
jg
pusha
sbb
inc
xchg
xchg
xlat
mov
xor
sti
fcomp
inc
mov
mov
mov
les
cli
out
repz
add
mov
out
jp
out
fadd
sub
cmp
lock
retf
sbb
cmp
sub
inc
iret
push
(bad)
jb
pop
inc
inc
push
ret
jo
jns
mov
vpmaxub
imul
cmc
lods
aam
out
sub
lods
push
push
pop
dec
and
add
jmp
xlat
or
out
jg
in
fwait
sbb
test
sbb
es
xor
xor
xor
fcomp
or
sub
xchg
xor
push
mov
inc
cmps
call
xchg
or
sbb
cmps
das
xchg
mov
js
(bad)
repnz
sbb
sub
mov
ret
aam
(bad)
ss
pusha
mov
push
or
es
sub
rcr
jmp
jnp
imul
shl
aaa
pusha
rcl
or
imul
test
add
jo
jmp
push
jle
retf
in
sub
pop
popf
rol
mov
and
repnz
cmp
arpl
sub
jl
loopne
jp
out
xor
jl
leave
dec
loope
push
and
lods
(bad)
xchg
add
cdq
mov
add
jnp
mov
dec
test
xor
jb
ins
fndisi(8087
cmp
xlat
sbb
je
stos
mov
pop
into
push
jle
jp
lods
xchg
popf
or
pop
jns
ds
inc
loop
sbb
mov
mov
push
loope
jno
mov
and
es
xor
gs
xor
cmp
aaa
cs
imul
test
and
lock
es
dec
stos
in
or
cmps
jecxz
inc
call
loop
mov
mov
add
sub
inc
mov
fiadd
aam
pop
mul
mov
popa
mov
adc
sub
jns
call
mov
in
xchg
pop
mov
retf
(bad)
ins
ja
out
js
fcomp
nop
add
add
xor
push
push
popf
mov
out
mov
les
call
jle
dec
(bad)
jae
mov
sbb
sbb
sti
imul
cmp
or
push
std
sbb
adc
pop
sub
sbb
in
mov
fcom
ror
aas
daa
and
inc
dec
aas
mov
dec
lea
push
lahf
nop
fist
mov
test
mov
jle
add
repz
das
and
jb
mov
pop
lock
xlat
dec
xchg
mov
jbe
dec
call
and
jecxz
addr16
add
push
stc
sbb
out
ins
aas
push
inc
jle
lock
scas
aas
inc
outs
dec
mov
(bad)
data16
mov
jmp
out
(bad)
cmp
and
fadd
in
pop
stos
mov
pop
jae
aam
add
jge
(bad)
rcl
inc
lds
enter
sbb
inc
fldcw
ds
popf
movs
inc
push
xor
sub
repz
dec
(bad)
pop
sub
leave
repz
arpl
popf
lds
js
leave
push
jge
push
in
push
dec
adc
xchg
les
ret
adc
mov
sbb
test
scas
stos
fadd
mov
push
push
inc
jo
xlat
dec
or
sbb
or
das
fst
ds
cld
pusha
enter
and
jnp
fwait
jnp
jb
inc
test
shr
jno
mov
ror
jmp
das
sbb
jnp
or
leave
sub
sub
rcl
xchg
fidiv
mov
call
pop
adc
pushf
mov
inc
movq
loopne
xchg
mov
call
cmp
jb
aaa
add
fnstenv
and
test
mov
js
mov
popf
push
mov
mov
out
pop
mov
out
xor
addr16
lahf
inc
cs
mov
xchg
mov
ins
(bad)
out
outs
xor
mov
mov
stc
out
test
clc
cmp
xchg
jno
movs
enter
jo
cld
adc
sub
ins
das
push
call
add
adc
(bad)
fdiv
jne
lea
pop
push
sub
jnp
int
mov
test
ins
sub
and
mov
inc
push
pop
inc
pop
mov
dec
imul
cmp
pop
push
push
popf
adc
push
lahf
aaa
cmps
mov
lds
xchg
add
inc
jp
xchg
ins
mov
jmp
je
lods
js
push
sub
loop
jno
sub
xor
rcr
push
aad
icebp
scas
ins
lock
aaa
and
(bad)
dec
mov
pop
cmc
cmp
xchg
pop
leave
jb
(bad)
sub
fdivr
out
sub
imul
rol
cmp
and
jns
cs
js
xor
aas
hlt
(bad)
not
stos
jle
push
add
pushf
int3
cmp
movs
imul
cmps
sub
(bad)
pop
ret
call
int3
pushf
mov
cmp
fimul
pop
xor
movs
imul
adc
mov
pop
scas
call
cs
cli
popa
jo
and
xor
push
imul
std
add
add
xchg
retf
out
sub
mov
jmp
and
xor
test
or
and
ret
push
std
adc
(bad)
jmp
push
addr16
push
and
cld
es
repz
movs
inc
mov
xor
adc
push
mov
cli
imul
lods
fstp
xchg
adc
vpaddsb
ds
jnp
pop
mov
inc
mov
out
adc
(bad)
fstp
and
jb
xchg
aam
(bad)
lds
pop
xor
dec
xchg
adc
dec
imul
dec
xchg
nop
sub
cdq
imul
adc
dec
cmp
not
fwait
add
sbb
push
fst
jge
mov
sbb
fsubr
(bad)
push
jno
outs
push
adc
pop
pop
sub
clc
jnp
imul
jp
push
push
mov
cwde
pop
fwait
pop
xor
adc
and
and
pop
int3
retf
mov
sar
push
pushw
jno
cmps
call
bswap
jo
xchg
aaa
push
jle
pusha
lods
jecxz
jecxz
and
push
push
pushf
fistp
cmp
adc
xor
cmps
push
or
icebp
pop
icebp
ins
das
inc
push
xchg
mov
clc
cmp
mov
jno
sbb
shr
and
sbb
xchg
or
push
inc
inc
leave
push
push
aad
pop
(bad)
out
mov
jnp
mov
xchg
or
fs
mov
pop
mov
mov
adc
push
and
mov
or
repz
jno
stos
lods
in
jl
mov
push
and
pushf
das
jne
cmps
add
push
jle
movs
push
jmp
sbb
je
add
mov
repz
jmp
cmp
imul
adc
pushf
repnz
sub
jle
scas
in
cli
(bad)
sub
mov
mov
and
pop
ss
loop
shl
adc
xchg
jns
mov
jnp
mov
test
es
arpl
das
push
jle
pop
lds
mov
or
nop
and
mov
stc
inc
xchg
pop
mov
popa
(bad)
inc
lea
gs
aam
jne
sbb
in
fsub
outs
and
rcr
cmp
sbb
add
mov
out
pop
aam
jne
popf
aad
push
or
jae
inc
sbb
shl
les
std
add
push
xor
pusha
out
fdivr
and
ja
and
stos
es
stos
xchg
inc
inc
fnstsw
mov
jmp
adc
in
push
imul
popf
cmp
push
sar
aad
sub
loop
ins
mov
fs
cld
and
xor
sub
inc
fist
pop
sub
adc
cmp
out
cwde
cld
retf
xor
push
jecxz
cmps
push
sub
jecxz
mov
jae
inc
push
(bad)
jns
xchg
std
pop
pop
ret
(bad)
and
push
mov
dec
mov
mov
jg
adc
push
jmp
sub
add
loope
int
add
inc
sbb
in
lods
sbb
push
mov
pop
leave
sbb
(bad)
cmp
jle
mov
push
jbe
out
sub
mov
pop
dec
sub
sbb
lods
js
mov
frstor
push
cmps
clc
gs
mov
add
cmp
(bad)
adc
mov
inc
popf
or
jb
jmp
(bad)
mov
cmp
add
sub
outs
adc
fwait
push
jle
fs
repz
out
idiv
arpl
mov
cmp
aam
cmp
and
nop
mov
add
mov
mov
add
mov
ret
jne
mul
js
bound
les
sbb
(bad)
mov
pop
(bad)
lods
mov
adc
pop
test
into
div
push
cmp
cs
mov
leave
call
xor
pop
jns
push
dec
jne
leave
jbe
dec
retf
das
jg
add
lahf
mov
cwde
(bad)
fdiv
mov
je
test
ret
icebp
pop
xchg
mov
ins
cmp
pop
in
test
sar
xor
jmp
jp
enter
(bad)
or
popa
mov
xor
push
pop
dec
aam
mov
jg
mov
or
mov
xlat
sub
jbe
ins
clc
pop
ja
inc
push
and
sbb
mov
out
adc
push
retf
movs
dec
xchg
adc
retf
sbb
sti
pop
(bad)
aam
adc
and
es
jge
pushf
es
shl
data16
adc
xchg
jbe
adc
dec
mov
dec
jmp
xor
imul
and
inc
das
dec
sbb
ss
push
loope
mov
(bad)
popf
jns
pop
ins
xlat
or
imul
sub
test
or
cmc
sbb
jge
fdiv
xor
jns
xor
ret
les
mov
sub
in
inc
xor
ds
cli
in
lock
or
mov
imul
or
jp
ins
hlt
xor
test
xor
mov
repz
xchg
bound
mov
lock
inc
xchg
xor
daa
xor
add
fldcw
dec
movs
dec
mov
xor
cmp
jmp
xchg
mov
jg
push
scas
shl
repnz
jp
pop
add
pop
neg
cs
sbb
dec
cli
sbb
in
xor
xor
and
dec
cmp
nop
in
pop
and
sti
cmc
mov
adc
out
sbb
jle
mov
(bad)
cdq
sbb
inc
sbb
cdq
mov
loop
pop
arpl
mov
and
(bad)
jne
call
rcl
mov
cdq
inc
je
lahf
pop
rol
push
jae
fld
pop
cs
int3
rcl
push
adc
inc
push
mov
arpl
adc
dec
das
inc
push
leave
xchg
sub
dec
xchg
mov
rcr
mov
jg
cmp
and
out
outs
cdq
test
mov
mov
mov
jo
movs
std
xlat
pop
daa
loope
mov
xor
inc
and
imul
adc
dec
in
inc
pop
out
pop
ret
xor
sub
nop
test
fidiv
xchg
ret
mov
xor
pop
loop
and
cmp
jno
cmps
mov
jmp
les
dec
inc
dec
movs
inc
jnp
call
push
scas
js
xchg
xchg
nop
loope
gs
enter
imul
sub
test
jo
sub
int
jne
call
mov
sub
adc
sbb
stos
mov
sub
shl
call
sti
xchg
mov
mov
pushf
dec
cmp
dec
sub
pushf
ror
and
mov
cmp
stos
fdivp
xchg
or
mov
mov
mov
inc
sub
ss
jmp
scas
jns
push
mov
mov
aaa
mov
cs
jnp
movs
sbb
add
cld
push
xchg
pop
icebp
popf
inc
inc
sbb
pop
push
sbb
scas
(bad)
ins
push
int3
cwde
jp
fsub
adc
cmc
pop
mov
xor
scas
in
inc
jp
outs
mov
mov
sbb
sub
push
push
mov
xchg
stos
lock
mov
mov
jo
fwait
xchg
dec
xor
dec
cwde
pop
add
sbb
pop
dec
cld
cmp
mov
mov
inc
popf
push
and
(bad)
dec
test
icebp
rcr
cmp
inc
rcl
sub
xor
lods
loope
repz
leave
pop
xor
sti
pop
shl
mov
and
arpl
push
pop
lds
xor
jb
push
aas
lea
aas
sbb
or
cmc
in
jbe
leave
mov
dec
cmp
int3
stc
loope
adc
leave
inc
imul
cmc
xlat
or
retf
movs
aad
pop
mov
sub
outs
adc
xor
test
pushf
and
mov
inc
jbe
cmp
cmps
imul
fidiv
aad
dec
pop
rol
push
in
mov
inc
xor
fnstcw
add
dec
mov
pop
cmp
hlt
add
sub
nop
dec
xor
or
shr
push
xchg
push
add
add
dec
stos
xchg
mov
stos
pop
jae
xchg
mov
ds
fimul
mov
pop
repnz
fstp
and
push
mov
lods
aaa
mov
popf
das
dec
dec
adc
fsubr
out
sbb
cli
mov
lods
dec
fcomi
pop
dec
or
mov
je
cmps
in
lea
push
pop
sbb
shr
lea
(bad)
push
mul
or
test
or
pushf
pop
es
pop
gs
mov
mov
repnz
ss
xchg
movs
add
mov
dec
icebp
or
jns
es
inc
dec
xlat
lahf
sbb
rcr
rcl
fld
cwde
fild
fisub
sar
sahf
cli
aad
or
mov
ins
ja
test
ret
imul
dec
(bad)
add
sub
je
test
iret
ja
jmp
cmc
mov
sub
cli
dec
jno
pop
pusha
stc
cmp
scas
pop
or
mov
jbe
fsubrp
mov
sub
cmp
cli
test
stos
xlat
jle
and
idiv
cmps
lods
add
xor
stos
pop
cmp
lods
push
(bad)
push
push
add
adc
fdivr
inc
fisubr
sbb
imul
outs
or
inc
clc
inc
(bad)
cmc
dec
psubusw
xor
cmove
repnz
sub
jl
stos
adc
sub
xchg
(bad)
call
scas
ret
sub
mov
mov
dec
xor
jne
ss
out
or
daa
pop
and
add
jo
cmps
je
mov
jecxz
shl
push
mov
jp
in
dec
mov
dec
xchg
loope
rcl
mov
inc
fwait
shl
jp
pop
and
mov
adc
xchg
sbb
sub
sbb
mov
sub
fldenv
cmp
add
xlat
pop
jg
popa
popa
pop
loopne
shl
and
jp
inc
stc
int
and
jne
mov
daa
dec
outs
jno
mov
loope
xor
out
inc
jp
pop
adc
cld
test
cs
loop
fsubrp
mov
mov
mov
push
dec
sbb
dec
test
add
fdivr
lock
aaa
adc
mov
ss
ds
clc
call
arpl
or
jb
mov
mov
jmp
ss
ins
in
aaa
push
vcmpsd
jns
pusha
out
das
imul
jae
sar
or
or
fs
push
mov
outs
loop
cdq
mov
fisttp
and
xor
sub
xor
bound
push
int3
mov
jo
mov
mov
sub
mov
and
or
ficom
sbb
stos
push
sbb
out
pop
aad
jae
clc
daa
cmp
mov
ret
pop
xor
(bad)
cdq
mov
pop
sub
mov
add
jle
jmp
sbb
add
movs
(bad)
scas
ds
dec
int3
pop
je
mov
stos
fwait
out
cli
stos
(bad)
in
mov
xchg
mov
nop
in
pop
dec
daa
sub
jl
mov
or
sub
sbb
(bad)
movs
jmp
and
imul
add
cld
jns
cmovae
(bad)
cmc
inc
fisttp
inc
cmp
les
sar
mov
in
jp
mov
inc
push
sbb
das
mov
sahf
push
mov
in
inc
dec
cmps
sbb
mov
adc
dec
jbe
cmc
adc
mov
push
adc
(bad)
pop
dec
adc
cli
outs
mov
retf
dec
dec
ret
loop
loope
dec
sub
pop
dec
pop
cwde
rol
popf
pushf
mov
pushf
in
loop
pushf
dec
mov
stc
mov
adc
stos
leave
aaa
aad
ret
push
fisttp
inc
jle
arpl
scas
test
retf
push
dec
push
and
mov
bsf
cmp
and
add
adc
mov
or
mov
ret
mov
rol
mov
xor
dec
push
mov
cmc
jno
out
sub
cmp
inc
or
cmps
retf
push
mov
xor
mov
neg
inc
retf
mov
push
daa
stos
pop
add
sahf
push
inc
and
inc
movs
sub
jmp
mov
shr
cmps
jmp
pop
sub
jae
rcl
sti
adc
jmp
ja
or
add
mov
mov
mov
idiv
pop
aam
xor
or
mov
pop
push
ins
mov
jmp
lahf
jmp
popa
mov
ret
popa
loope
movs
mov
mov
dec
pop
xor
mov
mov
loope
push
leave
outs
lods
(bad)
xor
adc
dec
mov
mov
jle
adc
mov
push
sti
jl
mov
test
retf
dec
add
sbb
inc
mov
addr16
push
sub
daa
lea
mov
cmp
and
and
rcr
jmp
dec
es
pop
loop
aaa
rcl
cwde
pop
in
jmp
cmc
movs
push
dec
ror
push
xor
sbb
pop
fdiv
sbb
xchg
and
adc
xchg
aas
push
jmp
push
push
mov
xor
add
sub
in
in
or
mov
jmp
je
push
rcl
popa
jae
jb
rol
inc
mov
mov
dec
adc
cmp
fwait
push
sbb
popf
(bad)
cmp
aad
loope
mov
xor
pop
lock
data16
mov
movs
cmp
shr
jge
gs
(bad)
sub
movs
and
adc
pop
inc
mov
xor
(bad)
sbb
dec
out
jne
adc
and
in
sub
(bad)
daa
mov
and
mov
pop
dec
push
mov
shl
jnp
stos
out
push
jl
xchg
scas
out
adc
mov
lods
and
mov
iret
(bad)
push
js
xchg
xchg
scas
test
loop
push
jecxz
add
mov
or
pusha
sub
lods
call
inc
and
mov
loop
mov
test
arpl
mov
and
inc
stos
outs
loopne
cmps
jae
js
mov
fdiv
pop
adc
dec
pop
(bad)
(bad)
push
repz
fs
(bad)
cmp
xchg
arpl
dec
mov
inc
pop
push
inc
jle
cwde
dec
jge
icebp
lea
das
push
jmp
rol
(bad)
xchg
sbb
push
popw
retf
js
adc
cs
shr
or
xor
test
das
jmp
inc
jne
les
ficom
cmps
add
enter
cli
or
cmp
pop
dec
mov
(bad)
leave
call
daa
cmp
in
ja
lods
fimul
cli
jne
jecxz
inc
and
jmp
jbe
mov
pop
ja
mov
cmp
std
icebp
push
xchg
popa
xor
int
popa
jo
cmps
mov
jo
mov
in
xchg
mov
loop
sbb
mov
mov
sub
mov
pop
(bad)
xchg
aas
pop
pop
js
stos
jp
rcr
shr
xor
cmp
nop
retf
mov
push
and
inc
xchg
rcr
out
xchg
push
mov
in
cmp
test
fs
lahf
jne
in
add
test
addr16
loopne
lods
popf
add
pop
in
cmp
std
icebp
mov
or
inc
or
xlat
and
sahf
ds
xor
nop
xchg
and
and
jp
imul
mov
in
stc
xchg
push
jnp
xchg
sbb
jne
imul
addr16
mov
xor
loope
sbb
add
jns
daa
cmc
sbb
pop
das
arpl
or
movs
cld
inc
push
add
inc
ret
pop
and
push
aas
push
loop
dec
jmp
mov
push
mov
jg
sub
dec
dec
imul
in
mov
sbb
outs
dec
movs
add
dec
sub
cwd
cmp
daa
push
cs
inc
cmp
shl
adc
cmp
xchg
(bad)
outs
movs
iret
jmp
(bad)
cmc
push
(bad)
cmp
pop
int
gs
mov
inc
jmp
jmp
and
mov
xchg
dec
fucomi
(bad)
loopne
je
imul
jp
out
sbb
mov
push
scas
dec
push
test
dec
lahf
loop
ja
stos
repz
jne
sbb
(bad)
jle
hlt
cmp
(bad)
jmp
inc
sbb
mov
jp
mov
out
xchg
out
cmp
outs
lods
loop
imul
inc
int3
jbe
or
fcmovbe
mov
adc
push
add
mov
adc
inc
dec
inc
mov
inc
stos
sbb
push
ins
xchg
dec
outs
push
das
movs
jo
sub
je
inc
mov
sbb
push
sub
push
adc
cmp
cmp
das
ins
and
scas
in
dec
loop
mov
popa
mov
jbe
push
clc
pop
inc
outs
iret
dec
scas
clc
pop
xor
dec
sbb
push
push
in
shr
xchg
jns
mov
scas
sti
ins
mov
push
stos
pop
jmp
scas
stc
outs
mov
or
push
dec
ja
mov
fnsave
and
ja
adc
movs
bound
sahf
cld
shr
cmps
pop
inc
jg
push
(bad)
mov
mov
test
cmp
pushf
shr
mov
or
cmp
ror
cmp
cmp
push
jnp
jbe
and
iret
jne
cmp
push
or
lock
icebp
add
add
lds
add
fimul
pushf
adc
pop
repnz
sub
mov
test
push
cwde
adc
pop
add
js
mov
add
mov
mov
inc
mov
pop
push
sub
push
and
or
and
inc
sub
in
add
ss
outs
inc
ds
pop
push
clc
mov
and
fsubrp
sbb
adc
xchg
push
in
cmps
xor
outs
movs
lea
jno
fcom
jge
jmp
aad
cld
or
lods
fld
dec
call
cwde
inc
inc
outs
xchg
and
das
cmp
dec
mov
test
cdq
push
popf
cmp
clc
dec
jne
fmul
adc
sbb
loop
(bad)
cmp
sub
xor
shl
inc
xchg
ja
push
sbb
outs
or
inc
fcmovbe
imul
cmps
sub
xor
sub
adc
jmp
or
rcl
or
test
in
retf
cmp
and
fcmovne
cli
cmp
mov
(bad)
or
movs
lods
dec
or
scas
add
cmp
cmp
cmp
cmps
xchg
dec
mov
push
dec
out
mov
cmps
mov
dec
mov
inc
lea
out
dec
sbb
inc
jno
xor
aas
retf
dec
enter
jo
mov
js
sbb
xchg
sbb
bnd
jbe
retf
xor
dec
neg
inc
inc
fimul
inc
(bad)
or
jp
push
mov
bnd
push
mov
aad
cmp
test
xchg
(bad)
pusha
sub
push
inc
or
das
dec
cdq
mov
fidivr
pop
mov
daa
lock
call
xchg
mov
cmps
jae
mov
shl
lss
inc
(bad)
xor
bnd
retf
shl
cs
sbb
pop
and
pusha
ficomp
jo
mov
addr16
inc
repnz
das
fs
mov
idiv
mov
ds
jno
(bad)
das
sub
mov
jns
pop
out
(bad)
mov
mov
out
mov
aad
leave
jl
push
push
cmps
mov
std
jl
iret
adc
(bad)
adc
xor
test
ds
movs
jb
jb
add
add
xchg
cli
sbb
fidivr
fldcw
jmp
loopne
cdq
push
pushf
sub
push
adc
out
jne
push
mov
dec
fidiv
loopne
outs
gs
jp
sub
mov
es
pop
cld
xor
ja
mov
push
icebp
repnz
inc
jle
addr16
cli
sbb
das
push
and
dec
movs
push
sub
or
cdq
fisttp
stc
cmp
jae
loop
xchg
scas
je
lods
mov
fcom
or
outs
xchg
(bad)
cmp
xor
lea
xor
push
jle
xor
out
mov
push
rcr
pop
repnz
inc
popa
(bad)
fcom
jbe
xor
retf
ins
jl
lea
enter
lods
jns
sub
mov
outs
cmp
imul
pusha
push
mov
fcomp
or
aad
jns
shl
gs
mov
popa
repz
aas
mov
sub
xchg
call
pop
mov
push
rcl
jo
ins
mov
jo
cmp
div
push
popa
hlt
scas
dec
pop
lock
or
cld
pusha
push
addr16
fdivr
das
dec
xchg
stc
cmps
fnsave
mov
mov
(bad)
repz
sub
jo
int3
jmp
gs
sub
int
add
fcomp
pop
ficomp
inc
push
ins
addr16
sub
push
jecxz
xor
fs
sti
cli
das
cmp
jbe
push
sub
push
push
or
ret
inc
cdq
fild
pop
mov
aaa
sub
ins
jne
mov
sti
mov
mov
ins
lahf
retf
push
neg
in
inc
cdq
jecxz
and
call
daa
push
mov
in
xor
push
adc
inc
mov
or
lock
cdq
jo
mov
mov
pop
adc
or
(bad)
jnp
xchg
dec
in
mov
dec
cmc
sub
dec
test
pop
jmp
sahf
jp
and
push
dec
into
jmp
and
jbe
jne
retf
shr
jp
xchg
jecxz
sahf
and
add
lea
jp
retf
sbb
jne
inc
mov
pop
fwait
sbb
fwait
push
push
call
mov
jo
pushf
dec
fmul
mov
push
mov
movs
cwde
cli
sub
cmp
mov
add
cli
popf
cdq
(bad)
cdq
mov
sbb
daa
sti
cwde
pop
(bad)
push
sub
mov
je
stc
out
cmp
loope
add
sbb
lods
jmp
dec
clc
imul
add
in
aas
cmps
dec
cmp
imul
cmc
movs
into
out
rcr
xchg
xor
push
ret
jmp
pop
push
jle
cmp
inc
adc
les
popa
cwde
mov
mov
out
in
cmps
sbb
mov
jmp
push
stc
scas
xlat
sbb
xchg
or
hlt
mov
xor
pop
jge
adc
jbe
sbb
retw
mov
mov
movs
outs
cli
sub
xor
or
(bad)
sub
std
rol
add
mov
sub
mov
mov
sub
stos
inc
inc
test
idiv
pop
xchg
push
push
xchg
pop
leave
mov
pushf
push
cs
scas
mov
(bad)
(bad)
add
and
out
sub
outs
jo
js
aaa
div
push
imul
stos
ins
aas
xor
in
cli
or
daa
repnz
xchg
in
inc
popa
xchg
jb
mov
shl
fild
jp
fisub
jnp
shl
ficom
stos
and
mov
mov
jle
and
xchg
test
clc
mov
add
loop
outs
jnp
out
jp
mov
push
pop
jo
sahf
hlt
(bad)
(bad)
out
mov
(bad)
retf
jge
fdivrp
mov
mov
and
cwde
das
pop
(bad)
adc
leave
jge
pop
mov
add
mov
sbb
xor
push
retf
jne
push
idiv
mov
sbb
jmp
jo
fild
call
jo
js
mov
lods
and
pop
js
(bad)
(bad)
mov
pop
(bad)
pop
nop
push
jge
nop
out
mov
mov
inc
sub
ret
clc
cs
dec
icebp
fs
mov
xor
(bad)
(bad)
push
ret
jae
inc
shl
mov
mov
sbb
adc
or
mov
jge
fsubr
sub
pop
or
and
mov
or
cmp
pop
push
mov
push
les
ins
shr
ror
jns
(bad)
fldenv
add
std
test
inc
mov
les
std
xor
xchg
pop
and
jg
imul
sbb
pop
jb
or
aas
add
mov
cmps
pop
test
mov
sub
aam
(bad)
push
lods
fst
in
sbb
sub
cmp
in
test
cmc
sar
(bad)
cmps
pop
push
das
sbb
add
stos
cld
retf
or
push
pop
nop
or
cmp
das
and
clc
mov
dec
retf
cld
sub
es
addr16
and
push
movs
xchg
pop
push
adc
mov
or
mov
mov
dec
out
mov
leave
dec
call
lea
push
cmps
xor
and
ja
out
fnsave
dec
inc
sub
imul
bound
call
stos
adc
xchg
inc
and
jg
fidivr
xchg
mov
add
mov
cmp
sub
leave
test
add
push
movs
push
daa
or
mov
sbb
jnp
xor
jl
pop
loopne
dec
jbe
xor
sbb
cmp
mov
add
fwait
sub
fcom
xchg
push
repz
jb
retf
lods
push
arpl
outs
pop
hlt
in
and
leave
mov
add
xchg
xlat
stc
arpl
stc
push
push
mov
cs
inc
outs
xchg
stos
hlt
ds
inc
push
imul
sub
ret
arpl
inc
shl
fs
in
fs
sub
inc
call
les
in
sub
out
ja
in
pusha
fist
sbb
pop
xor
adc
push
dec
icebp
dec
(bad)
ins
jno
daa
test
test
jns
fadd
jbe
lods
mov
sub
imul
jnp
call
out
pop
inc
dec
mov
mov
cld
cmp
xor
ret
int3
adc
fs
add
and
sbb
dec
cmp
loope
dec
test
mov
shl
or
call
add
sbb
or
push
add
ins
in
fwait
cmc
jo
test
or
xor
push
daa
adc
sbb
cdq
cmc
pop
fst
cld
add
aaa
cmp
pop
adc
outs
push
xor
bound
dec
mov
lahf
cmp
jle
inc
and
lahf
cs
dec
rcl
dec
and
inc
push
inc
out
pusha
xchg
movs
add
push
inc
jmp
ds
jbe
movs
gs
sub
xor
mov
inc
fbstp
pop
jl
call
cli
jns
pusha
pop
push
mov
sub
cmp
sbb
sub
mov
leave
jl
mov
(bad)
inc
sbb
imul
fisttp
sbb
cwde
hlt
xchg
les
xchg
xchg
sbb
mov
cdq
dec
cld
jnp
lods
dec
dec
jge
xor
adc
leave
rcr
dec
out
xchg
std
or
pop
stos
cmps
xor
jp
ret
push
and
lds
mov
retf
push
jb
add
mov
jge
fs
sbb
cmps
enter
cmp
mov
in
lahf
pop
push
sbb
fistp
pusha
mov
repz
jno
push
xor
pop
fistp
test
leave
mul
jae
push
aas
mov
jmp
fsubr
ins
repz
test
jnp
mov
pushf
jnp
outs
das
sub
popf
pop
retf
pop
dec
(bad)
jmp
pushf
mov
jne
mov
ins
cmp
mov
fild
cmp
outs
push
and
icebp
or
adc
pop
mov
int
push
mov
movs
add
pop
std
ss
gs
mov
gs
pushf
sub
js
mov
rcl
xor
dec
fwait
sub
push
mov
sub
sbb
or
inc
adc
inc
adc
push
mov
jmp
jno
mov
test
push
test
in
(bad)
gs
cmps
outs
shr
out
dec
push
mov
adc
ds
ins
aas
or
push
push
aad
or
mov
jp
jp
dec
popa
pop
fnstenv
and
pop
mov
or
jo
(bad)
sub
das
add
aas
mov
push
sbb
loopne
outs
push
dec
jne
sbb
jo
adc
ret
jb
sbb
addr16
dec
pop
dec
jne
xchg
inc
cmps
dec
sahf
inc
adc
xchg
push
ret
scas
aam
or
jecxz
mov
sbb
sar
fwait
scas
loope
xor
shl
jg
xchg
fdivr
ss
xor
inc
cmp
mov
dec
es
div
popf
shr
je
jp
sub
aad
xchg
inc
pop
mov
or
dec
fadd
in
jae
sub
adc
aas
cs
push
pushf
mov
int3
adc
xchg
mov
mov
mov
or
push
jge
repz
fdivr
xchg
mov
adc
sub
jmp
push
data16
cs
(bad)
call
sbb
jb
stc
inc
xor
(bad)
sbb
div
pop
in
pop
sub
ret
jmp
fs
xchg
pop
jp
or
add
movs
(bad)
pop
scas
ror
fadd
gs
and
mov
pop
arpl
xchg
pop
(bad)
adc
aaa
sahf
xchg
lods
push
retf
dec
fldcw
loope
or
and
or
push
pop
in
sub
adc
stos
mov
out
js
aas
pop
sub
cmp
jns
popf
inc
lock
scas
adc
push
ror
ds
movs
xchg
movs
or
mov
inc
movs
or
test
cs
xchg
xchg
jne
rcr
dec
pop
cmp
lds
sub
pop
mov
pop
jmp
mov
sar
and
push
inc
popf
jge
mov
test
not
sahf
shl
xor
test
sbb
gs
aam
(bad)
push
inc
ret
loop
inc
and
push
dec
pop
pusha
inc
lods
pop
pusha
adc
jecxz
push
sar
mov
movs
push
pop
mov
inc
mov
cdq
dec
sub
les
pop
adc
mov
adc
mov
iret
retf
jl
mov
inc
test
push
mov
test
nop
and
jp
shr
stos
lods
mov
pop
inc
sahf
xchg
out
sub
dec
xchg
push
js
mov
jg
dec
mov
or
jbe
push
mov
jo
mov
sbb
jge
test
pop
ror
push
dec
push
inc
add
sar
mov
(bad)
jb
sub
xor
sbb
lods
dec
div
ins
nop
ret
sbb
inc
ins
retf
js
xor
mov
out
rcr
das
and
repnz
add
fsubr
enter
pop
ret
adc
cdq
mov
and
movs
stos
xor
and
adc
ret
inc
dec
dec
sub
xlat
shl
or
and
(bad)
fs
es
adc
push
arpl
mov
movs
or
lods
inc
push
stc
jecxz
xor
pop
inc
push
jne
add
ret
mov
pop
or
pavgb
mov
loopne
sti
aaa
ror
sub
sub
adc
mov
xor
test
test
js
xchg
sub
sbb
jne
test
imul
je
add
inc
lds
icebp
cs
push
inc
std
cli
xor
dec
fucom
imul
push
pop
iret
sub
les
popf
sub
push
sbb
cmps
rcr
gs
push
(bad)
ds
mov
(bad)
nop
cs
push
xchg
cmps
sub
dec
scas
push
inc
(bad)
mov
cmps
scas
jmp
pop
es
int3
xchg
cld
xchg
mov
stos
sub
je
dec
cmps
sbb
xor
(bad)
mov
bound
or
push
xor
lods
inc
iret
jno
xlat
sub
xor
push
cld
mov
or
inc
pop
jbe
xchg
stc
push
es
xchg
push
xchg
pop
jmp
jmp
push
dec
inc
lods
es
dec
ret
mov
dec
sub
retf
cwde
sub
push
sbb
cmp
sbb
cli
dec
jle
cmp
mov
or
mov
fld
cmp
jmp
fisubr
pop
pop
pop
shl
sub
and
out
daa
movs
rcl
add
and
sahf
sbb
(bad)
dec
dec
test
popf
mov
(bad)
sbb
sub
stc
inc
pop
ror
loopne
add
cli
leave
test
lds
sahf
xchg
mov
loopne
xchg
add
pop
aam
inc
inc
mov
sbb
jp
out
jns
xchg
jns
ins
pop
cmp
adc
jmp
push
inc
xchg
addr16
scas
ret
mov
xor
and
ins
pop
jge
(bad)
dec
cmp
ret
mov
and
pop
jecxz
fidiv
xchg
outs
push
hlt
scas
and
pop
add
data16
push
fcomi
jno
push
out
fs
dec
js
addr16
rcr
and
dec
push
add
shl
mov
push
test
jbe
dec
inc
xchg
es
rcl
imul
pop
push
adc
lds
imul
in
(bad)
out
cli
adc
aam
push
bnd
cmp
sti
ret
push
inc
push
xor
adc
jo
mov
in
outs
xor
add
dec
adc
mov
movs
and
xor
in
out
neg
push
popf
fimul
inc
js
sahf
push
mov
mov
sbb
std
cdq
repz
icebp
pop
mov
add
sbb
aad
imul
or
jbe
pop
pusha
add
fstp
imul
sub
jge
in
lods
jnp
mov
cs
ficom
xor
jmp
jmp
scas
mov
cmp
xchg
int
sbb
neg
scas
hlt
mov
xlat
jge
not
out
mov
push
jbe
or
call
dec
mov
add
mov
rcr
inc
sbb
(bad)
cmc
movs
jns
fsubr
push
add
stos
das
adc
fdivr
dec
inc
sti
mov
sbb
dec
push
adc
cmp
and
aas
dec
ret
push
push
xchg
mov
gs
mov
ror
scas
out
rcr
xchg
(bad)
retf
mov
cmps
mov
arpl
mov
sbb
sbb
lahf
arpl
data16
sahf
jl
(bad)
sub
test
jnp
out
pop
push
enter
xchg
jecxz
fs
dec
std
into
sub
push
mov
jge
jbe
mov
sbb
hlt
ffree
jmp
ins
adc
arpl
jnp
jge
inc
cmp
mov
pop
jb
iret
or
pop
jge
sub
inc
aas
fld
push
jle
push
mov
xor
jge
push
cmps
cli
pop
push
dec
jb
adc
xchg
loope
aaa
mov
pop
jbe
(bad)
pop
ret
retf
inc
inc
in
mov
add
sub
cs
pop
ret
ss
dec
jb
movs
and
inc
pop
push
inc
add
xchg
push
dec
push
(bad)
jmp
xchg
inc
dec
push
cmp
lahf
fstp
in
push
rcl
dec
mov
mov
ja
mov
adc
xchg
and
and
fwait
jl
sbb
dec
fiadd
push
pushf
outs
jl
or
addr16
mov
loop
or
cld
xor
cwde
sub
clc
call
fs
cmps
dec
mov
dec
sbb
jo
adc
mov
sbb
popf
mov
xor
ins
cmps
ror
dec
aam
sub
adc
dec
jmp
push
dec
sub
cmp
xchg
mov
aam
fdivr
add
out
jge
add
sub
add
fdiv
mov
fs
(bad)
mov
sbb
mov
jne
cdq
mov
mov
push
lods
push
retf
jnp
les
shr
jne
cmps
dec
pop
movs
mov
hlt
vsubpd
aaa
clc
mov
mov
adc
test
outs
pushf
push
jno
inc
mov
ror
fadd
call
das
and
pop
stos
popf
cdq
and
or
mul
repnz
dec
push
cmp
aam
arpl
cwde
dec
stos
mov
sbb
retf
dec
lock
xchg
jle
outs
dec
out
cmp
mov
mov
das
int3
imul
outs
ret
adc
mov
loopne
or
mov
adc
xchg
or
(bad)
mov
ficomp
add
lods
sbb
(bad)
mov
pop
leave
push
push
xor
popa
cwde
mov
inc
lds
pushf
das
add
cmps
xchg
jp
pop
add
and
sbb
je
fbld
cs
fs
scas
out
pop
popf
test
pop
push
pop
jecxz
js
mov
xchg
inc
movs
call
daa
dec
ins
pop
add
mov
push
and
enter
mov
inc
inc
jne
jp
imul
(bad)
call
inc
(bad)
dec
popa
shl
retf
es
inc
jmp
shl
and
jp
call
(bad)
mov
mov
cld
mov
xor
fistp
jecxz
xchg
pop
cdq
div
stos
sub
retf
movs
jbe
rcl
scas
js
fiadd
test
adc
adc
dec
ss
aam
mov
jmp
jbe
mov
enter
push
add
imul
sub
int3
fbstp
push
inc
dec
jno
(bad)
lods
daa
mov
inc
in
test
cs
rcr
pop
sbb
out
div
push
dec
in
nop
inc
cmp
movs
dec
aaa
(bad)
arpl
jns
xor
push
addr16
js
jns
sbb
aad
push
cwde
fbstp
sbb
js
add
sbb
aad
pop
js
jno
sbb
mov
clc
add
out
pop
movs
xor
ds
mov
pop
fst
jmp
ins
std
aam
mov
sub
mov
cli
dec
push
cmps
and
jo
shr
movs
leave
xchg
xchg
in
leave
bound
lahf
loop
adc
ja
outs
adc
je
add
jb
out
push
push
cmp
push
packsswb
mov
mov
aad
sub
push
or
jo
cmp
jge
movs
adc
push
setae
test
jo
push
adc
push
or
dec
fwait
rep
dec
jae
xchg
mov
dec
jno
fst
pop
xor
sar
cdq
int
div
das
adc
arpl
jmp
(bad)
das
std
fcmovnbe
xchg
out
rcl
xchg
cmp
rcr
js
(bad)
push
mov
out
mov
sub
jb
mov
std
mov
inc
shl
dec
repz
xlat
out
cmp
ficom
sub
mov
cld
push
inc
or
add
out
sar
push
daa
jns
cmp
sbb
pop
out
mov
(bad)
ds
pop
adc
cmp
idiv
dec
ss
xchg
add
sub
outs
(bad)
xor
add
pop
xchg
mov
sub
aad
(bad)
les
inc
scas
xor
pop
and
mov
inc
iret
sahf
adc
sar
out
pop
mov
ja
dec
in
jg
imul
inc
fs
jmp
retf
adc
lock
jle
mov
mov
sbb
xor
xchg
in
sti
pop
push
sahf
and
dec
out
fs
jecxz
test
push
loop
mov
jb
inc
sbb
inc
call
dec
imul
push
(bad)
cli
fiadd
ja
fwait
add
mov
inc
cmp
push
loop
ins
mov
xlat
inc
fisubr
out
stos
jecxz
xchg
adc
adc
pop
div
call
adc
fwait
cwde
mov
out
inc
sub
add
inc
ds
iret
sahf
ss
pop
cwde
inc
xor
xchg
ret
jne
add
ss
daa
test
popa
leave
repnz
fist
xor
ret
sub
push
ret
mov
les
push
call
pop
jl
xchg
pop
xchg
jmp
addr16
int3
xor
add
cmp
push
inc
scas
or
xchg
call
in
outs
pop
mov
push
push
pushf
sbb
inc
mov
ins
jne
fcomp
add
pusha
push
sub
test
cmp
neg
sub
sub
inc
out
sbb
pop
das
enter
and
pop
sahf
gs
int3
mov
xchg
push
jns
outs
push
in
jae
pop
jbe
inc
test
pop
and
daa
adc
xchg
ins
(bad)
hlt
pop
je
jmp
sbb
jns
mov
pop
neg
push
movs
sbb
inc
sub
xlat
lock
je
jmp
and
push
in
sub
and
aam
push
stos
stos
add
gs
inc
shl
popw
mov
mov
jnp
push
ret
mov
xor
popf
es
pop
add
sub
rol
clc
fs
add
mov
cmp
mov
mov
sti
push
cmps
in
mov
dec
add
inc
fild
dec
popa
inc
cmp
out
stos
leave
call
xchg
jg
retf
xchg
mov
les
xchg
dec
ins
ret
xlat
test
push
add
jo
xchg
call
data16
and
mov
sar
adc
bound
scas
cmps
xchg
call
(bad)
push
pop
mov
and
adc
(bad)
fistp
icebp
sbb
inc
push
cmps
add
and
(bad)
mov
dec
or
adc
sti
pop
adc
mov
(bad)
fcomi
dec
icebp
pop
pop
cmps
inc
push
xor
sub
inc
lods
sub
mov
daa
xchg
or
push
mov
gs
scas
jns
mov
mov
sub
fisttp
pop
push
add
xchg
lea
inc
dec
ss
dec
pop
retf
hlt
pop
call
loope
rcl
mov
jns
cdq
or
out
stc
(bad)
daa
cmp
test
adc
iret
xor
add
cs
xor
mov
sahf
sub
and
ret
push
lds
inc
test
loope
push
jmp
stos
push
inc
mov
test
inc
ja
std
das
mov
inc
sub
js
(bad)
mov
sub
(bad)
cmp
fist
mov
mov
xchg
(bad)
aad
add
mov
adc
mov
xchg
inc
dec
mov
popf
fsub
std
mov
inc
imul
(bad)
sbb
push
call
sub
mov
push
pop
inc
sub
and
leave
in
mov
dec
ins
repnz
daa
inc
test
mov
gs
aaa
es
sti
aas
sub
movs
call
and
sbb
movs
pop
clc
push
leave
mov
sub
aam
test
outs
test
ret
in
in
push
inc
push
mul
jle
push
lahf
clc
sub
push
xor
xlat
push
push
gs
pop
pop
ja
add
cmps
sub
adc
add
cmp
or
cmp
stos
push
call
in
jns
out
or
movs
jno
test
xchg
popf
adc
scas
jnp
call
out
div
mov
jbe
arpl
mov
mov
sar
push
pop
dec
aad
sub
repz
and
dec
lock
bound
inc
shl
dec
das
rcr
scas
les
in
std
push
jmp
and
aaa
loopne
scas
xchg
push
sub
mov
jg
aaa
push
and
aam
jecxz
lahf
and
adc
add
movs
call
pusha
popa
xor
pop
shl
test
pop
push
call
mov
add
pop
dec
jb
aas
sbb
rol
ja
and
push
ds
cmp
mov
into
loope
push
xor
frstor
mov
je
adc
dec
mov
or
int
mov
fstp
inc
lea
adc
sbb
and
or
loopne
xchg
out
pop
dec
pop
dec
in
call
push
jmp
mov
mov
jnp
(bad)
icebp
xor
nop
mov
std
ins
push
in
cmp
dec
xor
test
mov
in
dec
aad
gs
loope
outs
dec
xchg
adc
in
fwait
push
out
xchg
add
test
call
jg
mov
cdq
ds
cwde
movq
pop
jns
add
enter
mov
mov
and
jno
and
ins
cmp
inc
adc
xlat
stos
loop
arpl
lds
frstor
jo
bound
mov
mov
pop
movs
cwde
mov
mov
bound
std
pop
dec
je
mov
rcr
ret
imul
adc
xor
sbb
js
mov
ds
push
and
les
mov
int3
sbb
aam
pop
jmp
jmp
jbe
inc
pop
mov
shr
repz
adc
sbb
adc
pop
jmp
jne
mov
(bad)
add
adc
pop
lods
movs
mov
jecxz
sub
mov
push
aaa
xor
ins
xchg
dec
cs
repz
add
dec
inc
fild
pop
add
add
adc
xor
scas
in
jl
mov
xor
cmc
sar
test
jge
movs
fmul
xchg
jmp
adc
sbb
cld
pushf
ds
pop
into
out
ds
shl
add
(bad)
(bad)
pop
pop
in
enter
inc
loop
pop
mov
sbb
movs
add
dec
clc
movs
push
cmp
clc
ror
clc
mov
pop
test
cli
shl
jmp
adc
test
xor
adc
pusha
fs
add
dec
xor
inc
daa
pop
dec
daa
dec
int
fiadd
lock
dec
adc
sbb
push
add
dec
mov
inc
mov
test
aam
retfw
xor
dec
sbb
inc
or
push
xchg
xchg
nop
call
or
cwde
cmps
out
js
jle
cmp
sub
inc
pop
sbb
mov
(bad)
in
push
bound
mov
imul
mov
aam
movs
lods
iret
fild
cdq
out
inc
jbe
popf
dec
shr
stc
push
cmp
jge
call
push
inc
bound
lods
cmp
hlt
sbb
sub
sub
cdq
(bad)
push
out
jns
push
sahf
fdivrp
nop
jnp
fcom
lahf
inc
mov
inc
mov
push
aam
inc
ficom
rcr
jl
fs
xor
es
cmps
add
test
cmps
pop
dec
push
inc
inc
aam
pushf
jns
sub
retf
addr16
sbb
and
int3
mov
rcr
jmp
paddsb
pop
(bad)
mov
pop
and
sbb
dec
data16
shl
jbe
leave
ins
xlat
(bad)
and
in
fs
js
jp
jb
dec
jnp
jle
push
dec
mov
scas
clc
jbe
retf
cmc
cmp
mov
mov
cli
inc
imul
sbb
mov
aam
xor
pop
movs
gs
aam
or
cmp
cwde
or
mov
loop
les
pop
pop
mov
dec
shr
cmps
mov
cmc
lock
and
inc
xchg
rol
clc
stc
mov
dec
add
mov
shl
mov
retf
addr16
xor
adc
fs
jae
imul
xor
fsubp
push
nop
jno
shl
mov
je
dec
and
sub
mul
and
xchg
movs
repz
sub
(bad)
jmp
aam
xchg
pop
(bad)
fwait
adc
and
pop
inc
xor
ja
es
cs
mov
aam
mov
test
fldcw
lea
cmp
jg
and
pop
(bad)
jns
pop
jl
lods
jecxz
push
xchg
xlat
in
movs
dec
jae
and
ror
xchg
(bad)
or
or
mov
xchg
dec
repnz
outs
inc
mov
mov
add
sbb
mov
sbb
jns
mov
out
inc
xchg
stos
pop
adc
fst
movs
dec
cmps
mov
cli
inc
cmp
push
pushf
daa
das
push
out
shl
push
fidiv
cld
(bad)
aad
push
xchg
xlat
pop
hlt
push
lods
retf
out
(bad)
mov
jae
repnz
adc
push
push
and
push
ret
dec
add
push
push
cwde
jg
xchg
adc
and
sub
xor
jne
inc
fiadd
sar
outs
sbb
mov
inc
pop
xor
and
or
mov
stos
test
fsubrp
or
test
inc
stos
sub
jmp
and
pushf
add
les
clc
sbb
mov
jl
pop
popf
fldcw
mov
inc
aad
shl
scas
rcr
ins
test
pop
add
aam
mov
xlat
inc
out
add
xor
stos
mov
vpavgb
jmp
dec
test
(bad)
inc
mov
(bad)
pop
fld
dec
inc
pop
pop
jb
dec
neg
addr16
es
sbb
cs
xchg
push
mov
movs
sti
(bad)
fstp
(bad)
xchg
nop
mov
scas
mov
mov
sti
mov
daa
dec
ror
outs
mov
mov
pop
sbb
shl
stos
jmp
xchg
jo
push
adc
adc
jge
cmp
rol
ror
dec
and
aas
movs
adc
xchg
sar
stos
aas
xor
push
inc
sar
add
sbb
jo
add
call
aas
mov
into
mov
pop
test
jbe
sar
ss
xor
sub
sbb
aam
test
push
cmp
xor
sub
mov
repz
inc
mov
imul
scas
shr
ds
mov
jmp
mov
jns
inc
add
std
adc
jbe
sbb
inc
cmp
push
sub
add
stos
sbb
dec
das
or
test
mov
mov
stos
xor
out
scas
addr16
pop
fbld
mov
xor
cdq
push
mov
push
into
push
sub
sbb
std
adc
loop
dec
mov
hlt
sub
fcmovu
hlt
adc
cmc
rcr
lock
xor
sbb
mov
shr
sub
jg
not
push
pop
mov
test
js
outs
push
(bad)
fisubr
adc
ror
repnz
add
jp
fidiv
test
jp
mov
or
das
aas
div
adc
pop
ins
loopne
(bad)
xor
sub
inc
stc
fld
dec
aam
pop
icebp
addr16
movs
xor
fldenv
dec
gs
repnz
adc
and
add
sub
add
cmp
push
neg
adc
sub
test
cmp
mov
cs
inc
call
adc
push
rol
retf
lea
nop
pop
cmp
add
mov
mov
cld
jno
sub
mov
mov
sbb
movs
fst
inc
addr16
mov
jg
pop
jne
popf
imul
add
inc
cmp
sub
ret
loope
xor
xor
jne
jmp
inc
pop
dec
int
cmps
and
(bad)
pushf
bound
add
push
mov
fs
mov
jns
scas
outs
and
sub
ror
arpl
stos
aad
mov
fwait
or
or
push
repz
data16
and
sbb
and
inc
mov
xor
lods
push
fld
sbb
jp
imul
lea
mov
push
push
xlat
jbe
sbb
retf
in
jo
(bad)
addr16
cmp
test
mov
shl
fistp
movs
stc
sbb
jge
push
es
popa
pop
mov
test
out
into
pop
les
xchg
imul
cmp
daa
pop
ficomp
pop
pop
mov
stc
jno
js
pop
push
inc
add
sbb
jmp
int
pop
dec
nop
push
xor
stos
push
pop
scas
in
sbb
not
mov
jle
enter
in
cmps
out
aas
retf
fmul
scas
jne
sub
push
ss
dec
pop
push
inc
cmp
pop
test
lods
or
sub
push
mov
xor
jg
aad
out
cmp
inc
jmp
call
fild
leave
sub
push
add
push
pusha
dec
sub
cmp
lods
push
mov
loope
jmp
mov
pop
push
in
add
sub
dec
adc
pop
ret
inc
stos
inc
jno
scas
cli
jns
popf
vdivss
add
xchg
push
fst
inc
inc
pop
movs
test
movs
inc
adc
rol
aad
fisttp
xor
sbb
pop
stc
cmovns
neg
ins
dec
jge
in
xchg
and
push
mov
call
mov
ins
imul
pusha
popa
sub
pop
push
inc
dec
in
fs
inc
imul
pop
or
(bad)
outs
xchg
daa
and
popf
cs
pop
xor
cmp
adc
jg
aaa
into
ret
aam
mov
xchg
push
sbb
stc
shr
imul
arpl
or
inc
inc
jb
test
or
fistp
dec
popa
adc
mov
mov
xlat
lds
xlat
dec
inc
movs
add
jae
lods
push
retf
mov
sub
dec
or
out
sub
cmovg
call
sbb
ja
std
mov
int3
or
xchg
pop
and
movs
or
mov
out
mov
sub
jne
ins
sub
int
pop
and
inc
lods
jp
jge
mov
dec
jbe
mov
dec
jecxz
loop
cmps
mov
dec
in
pop
stos
cmp
sub
cwde
or
fimul
test
fsubr
fistp
jp
cvtpi2ps
gs
stc
call
out
adc
fdivr
lods
nop
mov
nop
call
mov
lods
and
sbb
fcomp
(bad)
sbb
add
and
jl
bound
and
(bad)
test
in
scas
and
les
es
daa
cld
movs
repz
adc
push
(bad)
(bad)
xor
pusha
jb
mov
xchg
adc
cdq
mov
or
pop
movs
mov
mov
sub
add
cmps
fistp
push
les
jno
xchg
loop
sub
inc
push
add
icebp
mov
push
inc
mov
(bad)
and
les
sbb
mov
ret
lahf
dec
pop
jecxz
test
adc
(bad)
and
mov
scas
sub
cmp
xor
and
call
jg
mov
add
add
ds
mov
dec
lds
(bad)
das
daa
cld
pop
mov
or
sub
inc
je
push
(bad)
fnstcw
adc
idiv
ror
pop
scas
pushf
jp
dec
add
sub
jbe
jge
add
arpl
jmp
adc
jne
js
mov
fcom
push
push
popf
daa
cld
sbb
lds
loope
adc
sub
cmp
xor
dec
add
push
add
dec
pop
out
push
jecxz
push
and
lock
lahf
add
sub
nop
mov
movs
pop
push
(bad)
(bad)
jmp
dec
adc
ret
call
dec
cmp
pop
(bad)
inc
movs
mov
sbb
in
pusha
mov
mov
xchg
(bad)
sub
bound
fsubr
lods
imul
retf
and
dec
mov
inc
adc
inc
cmps
push
mov
arpl
jle
jns
std
or
push
lea
sbb
sbb
xor
jmp
push
xchg
mov
add
pusha
in
aas
sub
fstp
mov
inc
sbb
test
mov
push
lock
xchg
add
or
sar
retf
cmc
data16
xchg
ror
cmp
pop
je
icebp
clc
retf
fsub
mov
xor
mov
shl
in
push
cmps
sbb
jb
or
into
dec
pop
out
push
sub
cmp
bound
fnstsw
aas
(bad)
in
cmp
into
sbb
push
ds
xor
je
adc
inc
push
nop
xlat
jp
mov
(bad)
fisubr
lds
cs
jmp
pop
test
jns
aam
call
jns
arpl
add
mov
inc
fidivr
out
sbb
add
ds
mov
jmp
or
cli
icebp
int
jge
mov
ja
jbe
sbb
pop
pop
nop
fs
adc
(bad)
je
and
cmp
mov
or
mov
mov
movs
popa
jbe
outs
out
std
and
inc
pop
mov
inc
(bad)
popf
cwde
add
dec
add
mov
icebp
fild
push
scas
adc
(bad)
je
sub
cmps
loope
add
mov
sbb
scas
jp
fs
pop
mov
rcr
mov
mov
popf
sbb
ffreep
int3
or
imul
mov
fwait
or
ret
push
nop
pop
loopne
mov
lahf
fadd
ins
shl
mov
pop
movs
sub
xchg
int
pop
mov
into
mov
mov
xor
jns
add
xchg
mov
push
cmp
aas
fdivp
ficom
nop
sbb
xor
pop
or
popa
imul
nop
pop
ss
xor
out
sbb
shl
cmp
js
data16
jbe
lock
add
pop
or
arpl
dec
inc
pop
and
stc
xor
sbb
fcmovnbe
pop
push
push
lods
and
cmp
aaa
pop
xchg
sbb
dec
sbb
inc
movs
in
push
mov
cdq
sub
js
test
jge
sar
push
fdivr
pop
xor
sub
mov
xor
jl
jp
xor
add
jp
rol
jbe
stos
aad
adc
xor
bound
stc
shr
pop
jo
mov
push
and
rcl
sub
mov
sbb
xchg
or
inc
loope
fistp
jge
stc
inc
jne
inc
outs
(bad)
jbe
pop
imul
mov
mov
cli
mov
rcr
inc
or
jg
pusha
faddp
imul
shl
dec
inc
gs
sbb
sub
jns
xor
ins
sub
hlt
sar
movs
xor
sub
ja
imul
and
aad
sub
(bad)
jmp
add
das
xchg
and
outs
cmp
test
jp
push
or
js
xchg
pop
cld
stc
xor
jmp
cmps
xor
test
mov
dec
outs
jns
jb
mov
mov
loopne
xchg
dec
dec
je
dec
out
and
mov
or
std
pop
sbb
pop
pop
retf
ss
mov
(bad)
int
mov
aas
xor
or
pop
mov
xchg
shl
cmp
push
adc
call
lock
dec
cwde
sub
fisubr
lds
cmc
loope
retf
cmp
mov
ins
dec
mov
scas
pop
sbb
fxch
loop
int
push
jp
sbb
jne
in
push
push
mov
add
mov
std
(bad)
dec
or
sub
add
fld
repz
mov
push
sub
js
mov
pop
fdivr
and
test
bnd
es
inc
mov
push
rcl
mov
fsubr
(bad)
pop
repnz
out
xor
pop
out
or
and
stc
push
pop
cmp
rcl
iret
rcl
mov
jl
add
shr
imul
loop
mov
ss
dec
outs
stos
xlat
mov
mov
lds
jle
(bad)
push
mov
gs
aam
push
push
loopne
sub
test
dec
fst
sub
mov
mov
jo
jns
xor
push
ins
add
jns
fs
(bad)
out
sub
in
inc
push
ins
dec
lods
xor
scas
shl
or
les
outs
hlt
or
ret
inc
fidiv
jmp
inc
imul
ss
cwde
add
push
outs
(bad)
jo
jge
and
xchg
mov
mov
lds
add
jle
mov
and
imul
xchg
cmc
loopne
and
loop
adc
adc
jl
and
cmp
test
(bad)
mov
icebp
mul
scas
rcl
xor
mov
mov
cmp
call
or
mov
xchg
nop
sub
mov
mov
lahf
fsub
ret
mov
shl
cmp
or
outs
mov
mov
scas
fnstcw
es
fisttp
pop
gs
mov
dec
outs
cmc
icebp
push
in
test
ss
cmp
vcvtsi2sd
push
loop
mov
pushf
out
cmp
push
mov
js
sbb
retf
cmp
pop
mov
sbb
xor
(bad)
div
jg
sbb
std
sub
lods
pop
cld
jne
aad
add
cli
test
dec
(bad)
pop
inc
aad
ret
xchg
dec
rcl
xor
std
scas
ja
mov
cmp
ret
and
mov
aaa
xchg
xor
adc
sub
xchg
push
sbb
shr
push
(bad)
in
(bad)
dec
mov
fld
int3
inc
add
sub
mov
aam
xor
and
mov
jo
fcom
cmp
cmps
jno
mov
jno
mov
adc
mov
inc
jb
nop
and
xchg
shl
jb
and
cmp
je
inc
loopne
mov
mov
adc
mov
sub
pop
mov
inc
mov
and
or
sub
mov
cld
stc
jmp
imul
add
in
jnp
(bad)
aam
dec
pop
jg
mov
mov
bound
imul
ds
pop
sbb
ins
mov
es
adc
push
aad
sbb
sbb
test
mov
out
in
scas
sub
fidivr
xor
jb
mov
cmp
out
cmps
ror
adc
dec
jmp
adc
xchg
push
mov
outs
or
fdiv
sbb
xor
mov
std
xor
dec
fisubr
adc
(bad)
jg
dec
(bad)
jg
sar
inc
mov
loop
ror
daa
mov
inc
dec
jbe
ins
cmc
jg
inc
push
pop
lods
and
or
pop
adc
push
pop
mov
jnp
sub
data16
ret
mov
pop
jecxz
scas
cmp
mov
mov
pop
pop
or
ss
mov
shr
popf
push
push
push
add
mov
push
in
xchg
jae
outs
fstp
pop
setl
test
fxch
xchg
xor
test
ret
xor
rol
nop
mov
xchg
icebp
sub
pop
and
adc
ins
test
ret
cmps
pusha
out
push
ins
pop
ret
or
in
mov
pop
scas
mov
adc
push
add
mov
jae
pop
sub
aaa
movs
aam
daa
adc
adc
scas
ins
push
call
and
dec
inc
ins
in
and
add
enter
mov
pushf
ss
ja
aaa
push
sar
pop
fisttp
dec
adc
and
rcr
add
pop
mov
and
pop
push
sub
aaa
and
and
xor
push
stos
and
daa
cmp
shl
adc
icebp
jmp
jb
inc
lods
cmp
stos
dec
out
ds
out
mov
ins
sub
ds
sub
jno
iret
push
mov
loopne
das
stc
sahf
js
pop
mov
enter
aas
arpl
dec
xchg
or
xchg
or
nop
or
(bad)
inc
pusha
push
aam
fistp
jne
pop
in
neg
jmp
mov
sub
mov
(bad)
outs
jl
cmp
repnz
ret
bts
repz
cdq
and
repnz
f2xm1
and
xchg
dec
fwait
pop
rcl
and
push
adc
mov
pop
dec
loopne
pop
out
mov
loope
sahf
ror
jmp
outs
ss
nop
out
call
add
popf
ror
add
jmp
mov
femms
sub
mov
pop
jmp
aas
adc
cmp
push
mov
enter
or
mov
dec
jno
pusha
repnz
cmp
leave
fidivr
and
lds
out
push
out
jno
jmp
outs
call
daa
sbb
scas
aaa
sbb
sbb
mov
dec
cmp
aaa
jb
les
movs
add
int
gs
or
push
jne
pop
sub
push
test
pop
jl
dec
(bad)
les
xchg
(bad)
(bad)
stos
mov
mov
test
adc
and
jae
fsub
mov
mov
ins
xchg
sub
js
rcr
shl
stc
leave
hlt
mov
mov
in
mov
leave
cmp
mov
push
jnp
push
pop
fchs
clc
cmp
loop
inc
(bad)
adc
hlt
or
pop
int3
and
imul
and
cmp
stos
data16
dec
pop
xchg
and
or
pop
cmps
mov
inc
sbb
xor
cmc
jae
mov
xchg
sahf
xor
cmp
pop
or
pop
and
xchg
addr16
push
inc
shl
jecxz
and
imul
ret
(bad)
loopne
or
mov
lods
mov
jle
(bad)
jmp
rol
sub
push
sahf
imul
jns
jmp
xchg
fild
xor
fisttp
rol
and
add
mov
inc
(bad)
outs
mov
cmp
jecxz
xchg
push
jb
loop
arpl
ret
es
popa
mov
dec
xor
das
xchg
or
popf
jmp
es
push
out
mov
pop
cwde
push
pop
sbb
jmp
jbe
xor
lock
push
out
rol
mov
loop
es
addr16
mov
arpl
neg
scas
jmp
inc
mov
push
adc
sub
pop
es
icebp
sbb
shr
movs
(bad)
or
cld
leave
sbb
inc
bound
das
xlat
sahf
ffreep
jnp
shl
lds
jle
jmp
mov
test
and
(bad)
js
cld
pop
mov
jp
cmc
retf
mov
iret
in
jge
xchg
adc
outs
mov
test
arpl
push
lock
jle
push
or
and
push
fwait
cld
cmp
xor
cmp
xor
pop
mov
xor
and
push
sahf
stos
jmp
push
retf
pop
mov
mov
cmps
cs
bound
lock
ins
sub
xor
pop
push
jecxz
mov
or
test
or
sbb
sub
xor
mov
or
ret
cmp
push
test
cwde
in
or
in
mov
xchg
pop
sbb
push
pushf
xor
std
inc
shl
push
(bad)
in
mov
clc
call
cmp
adc
mov
test
imul
imul
aaa
inc
rol
cmp
cld
in
cmp
fwait
inc
cmp
inc
rol
sub
and
inc
ret
inc
loope
jne
mov
sbb
das
cmc
inc
ins
jne
pop
ss
iret
outs
add
ds
jge
xchg
cmp
cmps
outs
movs
jecxz
xor
mov
or
mov
pop
mov
dec
out
addr16
xchg
iret
cli
js
push
jbe
jl
mov
test
sub
fisubr
in
mov
in
xchg
dec
xchg
pop
repz
add
sbb
loop
pusha
jecxz
clc
fwait
cmp
xchg
sbb
cld
adc
xchg
push
movs
pop
or
mov
xchg
dec
sbb
ret
int3
test
lods
pop
mov
aad
pop
jbe
mov
push
imul
jmp
pop
dec
mov
xchg
sbb
cdq
sub
mov
xchg
sub
add
pop
retf
stos
into
cmc
shl
or
sti
adc
or
push
pushf
jmp
inc
push
mov
mov
pop
sub
jne
sbb
pop
call
aas
sti
xor
or
or
adc
stos
cmp
adc
nop
pop
sub
mov
test
loopne
(bad)
clc
xor
ins
(bad)
je
fbstp
in
pop
add
or
inc
add
push
inc
fsubr
movs
jbe
cmps
mov
js
loope
sbb
sub
pop
shr
pop
pop
adc
sbb
xchg
mov
push
push
push
outs
(bad)
sub
fild
and
and
push
nop
lea
jmp
add
lods
add
xor
jge
and
jg
outs
adc
lds
add
leave
mov
movs
jl
push
pop
dec
push
push
data16
push
jecxz
and
jae
jno
xor
pause
(bad)
aam
pushf
push
pop
mov
dec
cli
aad
dec
pop
mov
jl
sbb
mov
pop
cli
or
nop
pop
and
cmp
ja
mov
cmp
add
and
jno
adc
(bad)
(bad)
je
and
dec
xchg
lock
cwde
test
scas
sub
adc
test
and
mov
and
scas
ret
ret
stc
sub
adc
push
scas
test
adc
sbb
pop
mov
loopne
mov
xlat
cmp
add
adc
popa
mov
les
clc
cmp
cmp
inc
cld
or
cdq
shr
mov
push
adc
push
out
cmps
xor
jp
add
push
rol
jnp
fcom
dec
push
fnstsw
xchg
mov
xchg
or
push
stos
rcr
sar
mov
idiv
sub
stos
dec
imul
xchg
push
fstp
cmp
js
stos
inc
ds
mov
cmp
std
je
xchg
jg
test
popa
ror
dec
rol
sbb
push
fcomp
or
(bad)
push
movs
out
inc
mov
sbb
or
sub
aam
mov
lods
xor
imul
pop
retf
repz
or
push
add
add
dec
sbb
enter
adc
jl
add
or
add
popf
mov
inc
jl
ins
and
jae
xchg
or
test
pop
or
das
push
jmp
stos
shl
fistp
ins
dec
enter
push
arpl
cs
jmp
pop
push
retf
inc
jnp
ja
or
dec
repz
pop
(bad)
popa
jns
mov
push
xor
xchg
and
sub
mov
in
jnp
xchg
mov
in
jno
cmp
bound
aaa
and
inc
dec
aas
push
jbe
out
bound
pop
dec
push
cld
xor
dec
mov
aas
mov
nop
das
cli
sub
in
push
aas
cmp
movs
pop
test
ins
push
mov
jl
or
pop
shl
aaa
(bad)
sub
sub
ins
sub
jecxz
mov
jne
jmp
shl
or
cmp
popf
sub
and
lods
inc
jle
ins
inc
mov
js
mov
sbb
sbb
add
jge
push
imul
and
dec
lock
mov
jg
mov
pop
sti
mov
inc
inc
xor
mov
(bad)
ds
into
inc
cli
sbb
xchg
movs
ror
je
inc
dec
sbb
scas
xchg
imul
je
adc
je
xchg
ss
inc
jl
ins
pop
sbb
aaa
lds
mov
adc
movs
cmp
pop
and
add
or
loopne
mov
out
jb
mov
ds
xor
pushf
and
test
ins
ror
pop
add
out
jb
mov
imul
sub
leave
cmp
lock
sbb
fstp
ds
push
in
dec
jbe
mov
icebp
in
push
xor
cwde
inc
pop
cmc
adc
(bad)
call
mov
outs
push
das
popa
xor
inc
mov
(bad)
leave
jns
xchg
es
xor
or
jmp
push
push
je
(bad)
push
cmps
xor
push
cmp
or
in
mov
mov
test
pop
daa
cs
test
mov
xchg
and
ds
rcl
jns
mov
lock
jle
xlat
les
and
(bad)
ins
pop
add
jecxz
stos
jbe
iret
test
jns
or
pop
cld
sbb
or
cmp
jnp
add
jle
inc
aaa
std
mov
rol
sub
jb
test
aam
imul
or
xor
jp
jg
fidivr
aaa
pop
dec
pop
push
inc
push
ins
pop
dec
loop
pop
dec
or
and
inc
jb
popa
sar
xor
mov
pop
pop
xor
inc
(bad)
mov
ins
ror
(bad)
cmc
movs
and
inc
push
in
pop
loopne
add
out
sbb
dec
mov
iret
imul
call
std
or
bound
push
jmp
and
fistp
mov
jb
xor
cmp
mov
mov
popa
add
clc
fdivr
leave
mov
std
push
xchg
pop
or
aaa
enter
cs
inc
cmp
sbb
loope
dec
dec
cld
and
and
xchg
std
pcmpeqd
mov
dec
dec
push
out
test
push
jne
popa
neg
nop
jo
push
xor
push
cwde
daa
xchg
pop
(bad)
clc
cmp
pushf
jmp
jmp
sub
mov
and
ins
jno
mov
or
aas
inc
data16
outs
outs
xchg
xor
and
popa
dec
lock
lock
add
fisub
xor
and
pusha
lods
xchg
adc
xor
mov
sar
xor
mul
bound
xor
cld
repnz
mov
push
pusha
daa
pushf
add
sbb
inc
in
test
inc
sahf
ds
cmp
jp
dec
jmp
sub
mov
inc
retf
xchg
or
and
and
jmp
les
popf
mov
clc
cwde
dec
shl
adc
cmps
mov
ss
nop
xor
stos
and
jb
pop
mov
(bad)
cmp
loopne
lods
syscall
mov
inc
or
xchg
push
push
push
cmp
and
xor
jbe
test
push
into
pop
or
inc
pop
push
icebp
jle
pop
outs
xchg
xor
push
hlt
iret
mov
jmp
dec
pop
sub
mov
jg
sbb
mov
mov
cmc
jmp
je
imul
stos
cmps
hlt
fldcw
call
stos
sahf
hlt
shr
hlt
lds
out
leave
stos
call
lods
mov
clc
or
mov
cld
jmp
and
or
xor
cmp
pop
frstor
jmp
ss
jmp
retf
in
inc
stc
mov
jne
mov
inc
mov
xchg
cwde
xchg
jg
cmp
push
mov
in
mov
and
sub
test
mov
mov
xor
push
xor
jmp
add
cmp
and
xor
inc
in
mov
mov
das
(bad)
je
mov
fiadd
leave
xchg
sbb
pusha
sub
pop
int
pop
std
pop
out
stos
ret
pop
mov
pop
xor
jge
stos
stos
pop
loope
inc
inc
xor
inc
pop
fsubr
(bad)
jge
mov
inc
xor
mov
cmp
xchg
shufps
in
add
mov
ror
jbe
or
mov
inc
push
in
pop
scas
loopne
mov
ins
lods
test
and
and
cmp
sar
aam
dec
out
(bad)
cmp
xor
or
sub
sbb
retf
je
pop
sub
jge
sti
cmp
test
call
xchg
or
jge
add
mov
arpl
inc
adc
es
push
jmp
das
lahf
pop
dec
call
sbb
mov
sbb
jle
mov
rcr
cmp
jbe
mov
ret
dec
sub
test
pop
js
das
mov
and
sti
adc
or
ss
sub
test
je
sahf
mov
pop
xor
push
outs
dec
out
out
cmps
push
mov
jge
fadd
or
pop
loope
arpl
enter
sub
inc
cmp
hlt
or
outs
jmp
inc
mov
into
add
xor
jne
call
add
push
inc
daa
jp
js
adc
dec
cwde
clc
shr
jg
ins
adc
sbb
push
jno
mov
lods
lock
(bad)
in
inc
push
popa
pop
mov
mov
or
sub
call
or
scas
xchg
xchg
int3
retf
adc
xchg
jge
or
cmp
into
out
addr16
jmp
pusha
popf
in
push
scas
imul
inc
push
(bad)
dec
push
dec
push
lock
mov
mov
ss
aas
xchg
push
dec
cwde
inc
outs
loop
sbb
mov
sub
cmp
out
sub
out
outs
fiadd
cmps
push
lds
pop
or
idiv
sbb
imul
add
push
test
aaa
test
jo
bound
(bad)
push
xor
(bad)
or
fsub
pop
push
aam
shr
push
push
xchg
in
mov
cmps
pop
lfs
and
jl
mov
js
jmp
pop
mov
data16
push
sub
mov
mov
outs
test
imul
sub
push
retf
(bad)
cs
add
dec
jecxz
daa
add
cmp
ror
fldenv
mov
shr
test
fisubr
and
stc
gs
push
sbb
stos
pushf
test
fcom
arpl
add
mov
dec
call
sbb
sub
sti
or
push
les
mov
test
cmps
(bad)
sbb
popa
sbb
rol
jp
mov
ja
aam
push
push
sbb
push
fcomp
push
daa
lea
movs
aad
ds
movq
mov
xchg
fs
push
ret
jo
xchg
rol
mov
stc
std
xchg
mov
xor
lock
cs
rcr
jbe
ja
arpl
xor
adc
jg
sbb
add
jge
cli
lock
jg
push
imul
sub
nop
pop
jne
mov
not
(bad)
push
sub
shl
sub
call
bound
mov
outs
mov
retf
cmp
pop
xchg
pop
mov
stos
rcl
idiv
xor
(bad)
std
adc
push
adc
(bad)
dec
xor
lock
scas
aam
and
jl
push
test
outs
jp
mov
jo
lods
adc
add
fs
fist
sub
lods
inc
adc
out
shl
mov
cdq
add
dec
icebp
stc
inc
into
ja
xor
or
sahf
cs
call
sbb
ins
leave
loop
push
fnstsw
sbb
adc
push
dec
leave
pushf
adc
pusha
in
ins
push
xor
pop
xor
sbb
mov
int
adc
add
mov
jb
pop
fisttp
push
dec
jp
pop
mov
inc
daa
pop
loope
js
iret
xchg
jle
xchg
std
ret
test
jp
mov
jl
mov
xor
mov
and
mov
dec
mov
popa
sub
adc
(bad)
nop
xchg
jecxz
in
adc
jmp
sub
add
dec
imul
pop
jbe
loopne
test
mov
pop
ror
popf
daa
je
daa
pop
stos
sub
into
imul
sar
je
pop
cmp
pop
push
mov
push
mov
mov
or
dec
test
push
ins
je
sar
xor
aad
xchg
push
sbb
dec
inc
fld
inc
sub
sbb
add
jmp
push
(bad)
shl
movs
aam
lock
dec
push
jb
cli
imul
inc
ja
push
not
add
outs
inc
mov
dec
js
mov
sub
movs
lahf
jp
or
sbb
out
xlat
jo
xor
into
jb
jecxz
js
inc
test
xchg
pop
pusha
jo
fdiv
mov
scas
adc
ficom
push
into
sub
je
mov
push
shl
movs
jb
lea
jae
sub
aas
and
cmc
pop
push
and
add
sub
mov
imul
and
(bad)
out
ds
jno
ror
mov
test
add
enter
push
cmp
and
adc
cwde
push
fadd
xchg
hlt
mov
out
lahf
cmp
xor
test
or
jmp
mov
jg
sbb
ds
setns
dec
bound
mov
das
jbe
scas
inc
jmp
adc
lods
cmp
and
lds
je
adc
lds
ret
pop
pop
mov
pop
or
(bad)
pop
or
(bad)
sub
out
inc
sbb
hlt
pop
test
xor
dec
xor
pop
or
aaa
cmp
pop
xchg
xchg
aas
mov
icebp
aad
inc
jmp
mov
leave
in
stos
lods
nop
enter
bound
in
retf
fiadd
dec
dec
cmps
sar
loop
jge
xor
sbb
pop
out
call
imul
push
call
out
mov
mov
daa
das
add
pop
cmp
cld
jp
mov
pop
into
jle
pop
jp
stos
sub
mov
push
je
inc
test
fsub
mov
xor
lods
jmp
xlat
mov
cmp
add
cld
xchg
js
adc
jecxz
sbb
sbb
sahf
jle
ss
jnp
in
inc
push
retf
sar
xchg
mov
dec
arpl
cmp
popf
shl
pop
icebp
imul
pop
ret
fcomp
stos
dec
dec
ret
fisttp
add
pop
stos
pop
cld
div
sti
fwait
inc
dec
cld
loop
pop
addr16
push
add
imul
add
add
test
sbb
xor
push
test
and
popf
shl
loope
pop
sub
mov
mov
aaa
stos
loop
xor
ror
dec
ds
loopne
ss
xor
jmp
movs
cmp
jno
add
je
mov
je
pop
or
test
aas
sbb
ficomp
loope
call
ja
fcmovu
shl
movs
out
rcl
adc
ja
movd
(bad)
into
nop
xlat
sbb
outs
and
mov
imul
aaa
test
pop
out
jno
test
inc
and
jg
ja
into
pop
es
xchg
sbb
dec
shl
inc
jb
xor
cmp
pop
xor
xor
pop
xor
or
outs
cli
lds
jle
xchg
jmp
cmps
repz
lods
cmc
test
xor
movs
sbb
or
out
push
mov
stc
mov
cdq
cdq
ja
and
or
xchg
xor
push
arpl
and
adc
sub
enter
inc
mov
add
push
into
retf
cli
dec
sbb
mov
pusha
mov
adc
add
add
call
aaa
jg
hlt
and
int
sbb
inc
addr16
inc
pusha
stos
inc
jnp
mov
(bad)
dec
xchg
ins
lods
or
sub
int
in
call
popf
sbb
pushf
dec
and
jmp
bound
lahf
mov
pop
sar
sbb
cmp
push
rol
hlt
adc
mov
ret
cmovns
fdiv
lds
stos
int3
test
mov
fwait
sub
ret
addr16
aas
test
sbb
pop
pop
inc
call
outs
popa
xlat
mov
test
sub
les
imul
(bad)
stos
push
cmp
cmp
data16
sbb
outs
dec
fs
sub
pusha
rcl
nop
jno
mov
push
jno
cmp
pop
inc
dec
rcr
dec
js
bound
cmp
xor
lods
mov
mov
lods
sub
xchg
bound
call
mov
adc
stos
inc
mov
ficom
std
dec
add
lock
cli
xchg
inc
ret
int
xlat
lahf
fild
retf
or
sbb
jne
mov
aaa
popf
jge
aam
and
(bad)
adc
mov
adc
ss
sar
movs
mov
inc
xchg
jbe
mov
sub
loop
pop
mov
int
mov
hlt
leave
loopne
cmp
dec
or
inc
and
popf
in
xor
das
clc
js
xchg
clc
jmp
push
dec
dec
push
dec
jno
and
aad
inc
adc
adc
mov
mov
jg
aaa
mov
repnz
mov
pusha
loope
mov
adc
pop
add
add
in
mov
push
jo
test
mov
(bad)
mov
(bad)
push
outs
(bad)
call
xor
fdiv
cmp
unpcklps
pop
cmp
(bad)
rcl
push
outs
push
cld
jb
push
xor
pop
test
(bad)
movs
dec
clc
sbb
jbe
push
into
mov
ror
stos
pop
nop
sbb
ret
xchg
and
mov
jno
stc
outs
imul
(bad)
mov
in
rol
push
mov
fdiv
push
inc
inc
xchg
inc
pop
jmp
sub
pusha
sti
les
nop
sub
dec
adc
fsubr
cmp
jmp
push
shr
fistp
outs
out
dec
and
inc
rol
std
pop
lea
mov
inc
ds
cmp
xor
das
adc
push
cmp
adc
cmp
test
(bad)
mov
and
add
ficomp
jp
shr
fisttp
fwait
in
mov
int
stos
pop
pushf
(bad)
cli
cmp
push
lahf
xor
pop
test
cld
jns
and
sar
dec
adc
les
addr16
jmp
imul
jg
inc
ins
or
inc
xchg
jp
add
add
inc
or
je
jb
pop
inc
addr16
or
jmp
daa
popa
jb
mov
loop
jmp
fsubr
adc
out
mov
jbe
cld
xor
sub
cwde
mov
das
mov
sub
ss
cli
lods
ret
jmp
push
or
cmp
daa
icebp
push
dec
not
sti
mov
mov
jmp
sub
pop
idiv
jbe
fcmovbe
js
jmp
sub
std
pop
outs
sub
es
xor
lock
xor
repnz
sub
addr16
loopne
mov
lock
and
int
std
mov
jl
dec
xor
xor
push
pop
out
and
bound
sti
mov
mov
pop
iret
dec
call
add
cmps
shl
call
adc
and
gs
inc
scas
imul
retf
ss
daa
jo
mov
sbb
hlt
mov
xchg
cmp
sub
or
iret
dec
cmp
mov
push
popf
aam
xor
mov
inc
cmp
mov
pushf
adc
dec
add
fld
dec
mov
adc
pop
mov
xor
out
cmp
dec
ins
jae
fs
xor
not
xor
add
call
adc
pop
jg
adc
shr
adc
into
sbb
sbb
les
pop
mov
adc
push
cli
push
and
add
inc
inc
add
adc
data16
adc
in
xor
pusha
cs
(bad)
adc
or
(bad)
sbb
jae
fiadd
nop
and
pop
mov
mov
and
mov
outs
(bad)
xor
push
pop
jnp
jbe
mov
mov
enter
xchg
cwde
in
xor
xor
sub
jge
xchg
std
adc
hlt
dec
cmc
sub
js
push
fs
and
cmps
loopne
scas
and
adc
jl
xor
mov
sub
adc
dec
ds
sbb
call
jae
popf
lock
ret
jb
rep
jg
pop
jns
add
push
and
mov
jmp
mov
mov
scas
sbb
or
push
cwde
data16
jg
inc
xor
ja
test
add
or
mov
sbb
fwait
xor
mov
mov
mov
push
es
cmps
(bad)
or
test
(bad)
int
add
or
push
mov
cmp
mov
push
es
sub
sti
ins
xchg
jge
daa
jecxz
mov
es
pop
inc
sbb
sbb
inc
fdiv
mov
adc
mov
rcr
cdq
pop
stos
stos
aad
cdq
hlt
cmp
sbb
les
retf
ja
inc
mov
imul
inc
shl
(bad)
xor
and
add
aam
inc
mov
adc
fprem1
ret
ins
popa
mov
pop
clc
aad
imul
xchg
clc
js
mov
sbb
mov
bound
xchg
fldcw
mov
dec
mov
inc
dec
and
jge
retf
scas
shl
cmc
arpl
call
imul
sub
xlat
push
push
push
neg
pop
jle
mov
dec
cmp
fsubp
mov
arpl
pusha
pop
retf
popf
call
adc
sub
push
enter
shl
mov
mov
or
mov
scas
fld
fwait
popf
sub
adc
add
cmps
mov
dec
pop
xchg
sar
and
les
adc
jp
jmp
cmp
aaa
test
sub
ret
outs
mov
push
xchg
stos
mov
icebp
add
xchg
xor
pop
inc
push
(bad)
add
sub
div
cmp
sub
dec
(bad)
in
dec
push
pop
repz
mov
loopne
in
push
sub
add
mov
rcr
mov
add
jecxz
fadd
mov
cmp
in
ret
sbb
jge
sbb
mov
call
dec
mov
mov
fsub
mov
aam
test
fwait
and
cdq
or
jg
push
lahf
sbb
loope
sub
xlat
sub
fisttp
xchg
inc
out
(bad)
stos
icebp
push
inc
ins
xchg
cmps
sub
push
push
movs
xor
fwait
pop
pushf
cmps
pusha
int3
pop
out
aam
out
(bad)
dec
cs
fsubr
lods
xor
das
dec
mov
push
(bad)
xor
or
and
mov
ror
push
out
or
cli
imul
sar
out
mov
aad
or
mov
cmp
ret
pop
neg
mov
pushf
ds
dec
mov
jmp
shl
and
aam
dec
stos
pop
mov
pop
or
dec
pop
popf
cwde
rdpmc
bound
xchg
jne
sub
jns
sbb
and
mov
cld
mov
and
arpl
cld
cmps
mov
mov
jle
dec
enter
add
fdivr
sub
dec
fdiv
pop
add
pop
je
int
sbb
mov
out
(bad)
push
loope
mov
loopne
and
pop
jmp
cmp
fs
pop
pop
in
repz
pop
and
jecxz
jbe
call
and
ja
mov
mov
in
jo
cmps
or
shl
push
fisttp
xor
retf
sub
ror
dec
cmp
pop
(bad)
cmp
(bad)
xor
(bad)
pusha
fsubrp
lods
loop
push
(bad)
fcmovbe
and
ins
enter
jmp
js
push
in
mov
or
inc
lods
retf
aas
rep
mov
adc
sbb
mov
xlat
xor
bound
push
jo
iret
data16
dec
sub
xchg
dec
cmps
add
sbb
push
push
jmp
xlat
(bad)
mov
or
ja
mov
call
xor
mov
clc
xchg
repz
lahf
inc
push
jle
cmp
gs
mov
das
sub
jbe
pop
mov
cli
cmp
xchg
out
popa
push
scas
pop
leave
ins
push
pop
inc
call
int
sahf
mov
jle
push
ja
std
aam
mov
mov
and
inc
adc
mov
jle
and
push
sbb
inc
jl
cmp
inc
popa
(bad)
cmp
or
sar
mov
xchg
sahf
mov
in
push
jbe
jne
rcl
cmp
push
bound
mov
ins
cmp
adc
jne
or
pop
(bad)
mov
mov
out
enter
lods
inc
push
mov
fist
mov
mov
fwait
enter
mov
xor
push
(bad)
les
fst
sbb
xchg
les
loop
push
je
dec
pop
mov
pusha
push
push
cmp
sub
inc
call
imul
sahf
mov
out
cmc
and
sbb
xchg
sub
cwde
fcom
aas
jp
mov
lea
(bad)
jns
sbb
xor
movs
cmp
(bad)
imul
adc
cwde
ficomp
cmps
mov
jo
out
outs
test
lds
or
xor
or
aas
fldcw
rcl
sub
(bad)
iret
sub
push
cmp
dec
pop
and
sub
dec
push
inc
repnz
cmps
push
bound
inc
ins
out
(bad)
repnz
push
mov
dec
mov
sar
xor
int3
adc
mov
push
(bad)
mov
pusha
sub
add
push
aaa
jmp
mov
mov
or
loop
jp
mov
nop
pop
retf
cmps
movs
dec
shr
adc
mov
mov
iret
es
cli
fwait
sub
jmp
dec
inc
bswap
mov
sub
pop
push
or
add
jno
pop
cmp
jnp
fist
aad
sub
in
jno
cld
sub
pop
sub
(bad)
push
movs
not
xchg
lahf
mov
loop
daa
fst
iret
mov
and
ja
mov
jno
popf
sub
iret
leave
mov
sar
scas
pop
pop
mov
out
mov
or
imul
fs
cmp
lahf
js
jmp
in
xor
jnp
fst
push
fldcw
sbb
xchg
jnp
add
dec
not
mov
push
and
push
imul
in
gs
mov
fsub
and
dec
cmp
fimul
xor
mov
fwait
sahf
jae
mov
leave
mov
hlt
jl
jne
es
shl
pushf
fcom
xchg
arpl
jmp
jns
test
cwde
fimul
push
call
sub
(bad)
pop
das
add
jmp
add
pushf
sub
ds
addr16
dec
and
sbb
dec
cmp
and
fmul
dec
aas
imul
into
dec
out
ja
test
pop
ret
addr16
enter
mov
ds
xchg
scas
push
mov
cmc
jl
retf
dec
add
dec
push
(bad)
sub
mov
jle
test
addr16
stc
cwde
jg
pop
fsubr
daa
dec
sub
mov
not
movs
mov
ss
sub
push
or
jo
mov
ret
leave
sub
pop
retf
mov
js
scas
jecxz
leave
addr16
mov
xlat
mov
(bad)
push
fs
test
adc
idiv
int3
fs
xchg
jnp
mov
push
jbe
jae
nop
pusha
cmp
xor
mov
xchg
gs
std
imul
adc
inc
in
hlt
std
push
sahf
sar
jb
dec
icebp
mov
cmps
push
or
sbb
mov
aaa
imul
leave
cmp
sub
cli
pusha
push
add
ja
pop
adc
mov
inc
push
div
sub
gs
repnz
xchg
ficom
aad
enter
pusha
sub
je
test
jo
sbb
rol
popa
mov
out
add
data16
mov
push
or
repnz
fucomip
mov
sub
es
xor
aas
(bad)
jae
xor
sub
xchg
and
pop
xor
cmp
dec
jbe
inc
jmp
(bad)
inc
adc
sbb
push
and
jo
sahf
mov
mov
retf
repz
into
inc
popa
sbb
mov
out
ja
mov
sbb
pusha
push
push
js
(bad)
aam
jmp
mov
jb
or
(bad)
call
xchg
adc
jge
dec
pop
jecxz
aaa
cld
mov
push
mov
sbb
xor
scas
sub
mov
jge
mov
add
dec
imul
imul
inc
(bad)
mov
push
xlat
push
popf
dec
sub
lods
cmp
or
bound
pop
scas
xchg
lods
in
mov
add
hlt
iret
push
fdiv
mov
cld
ret
add
add
inc
(bad)
xchg
sub
movs
pop
adc
sahf
movs
xchg
sbb
jecxz
pop
mov
int
and
lods
or
out
xor
stos
bound
daa
(bad)
xor
call
stc
lods
cmp
inc
jle
mov
call
mov
cmp
loopne
and
pop
xor
push
mov
jle
mov
dec
mov
and
xor
imul
loop
push
xlat
cmp
sub
push
arpl
sti
aam
or
aad
or
mov
jne
mov
jns
sbb
push
push
jo
repz
cmps
dec
mov
or
xor
in
retf
push
jne
jo
inc
xchg
jnp
sahf
pop
jbe
push
test
lea
jmp
inc
stc
mov
pop
xchg
jbe
mov
cld
add
scas
xor
mov
push
ins
adc
inc
fwait
(bad)
jl
inc
ficom
push
jne
or
xor
stos
sub
ins
add
mov
jbe
xor
inc
inc
or
add
sub
in
jg
pop
sar
jmp
pop
daa
or
jmp
in
(bad)
xchg
iret
fadd
add
pop
mov
jmp
inc
add
(bad)
dec
sub
sub
cdq
(bad)
aas
popf
mov
jl
push
sub
pop
mov
push
addr16
loopne
xchg
in
inc
pop
loope
pop
adc
pop
shl
sub
mov
movs
pop
out
jae
xor
leave
and
movs
mov
jmp
cmp
fs
xchg
push
rcl
sbb
add
jg
mov
pusha
data16
sub
push
arpl
ja
rcr
jecxz
dec
sub
mov
jl
neg
lods
cmp
jp
ins
dec
jp
xchg
and
dec
mov
jb
dec
movs
jle
ret
adc
(bad)
std
out
dec
stos
dec
cmp
dec
pusha
es
pop
push
das
jecxz
jnp
mov
les
int
add
mov
jbe
xor
data16
inc
ins
test
adc
inc
rol
jns
mov
aaa
dec
repnz
mov
xlat
pop
cmp
sahf
adc
movs
shr
aam
sti
mov
mov
sub
ror
sub
jbe
adc
(bad)
xchg
ror
in
and
leave
sub
push
cmp
sbb
imul
iret
nop
mov
push
xor
push
daa
jne
push
jmp
mov
std
and
inc
bound
and
jae
ret
loopne
ins
dec
(bad)
(bad)
frstor
lods
add
dec
add
ror
xlat
(bad)
outs
xor
or
test
dec
aad
addr16
arpl
pushf
js
inc
xchg
in
adc
add
or
xor
cmp
or
out
fild
mov
clc
add
sub
mov
inc
pop
xor
jb
scas
hlt
jle
xor
stc
cwde
xor
sbb
fucom
mov
or
adc
add
jle
jl
push
outs
jp
pop
xchg
and
popf
mov
xor
mov
std
imul
test
sub
mov
popa
mov
popa
adc
into
in
mov
lea
cmps
xor
push
add
add
or
sbb
jb
imul
jmp
stc
std
inc
cmp
and
(bad)
clc
xor
mov
adc
add
retf
xrelease
sbb
cmp
fs
fsubr
retf
in
or
addr16
imul
xchg
jg
cmp
jbe
ins
jmp
cld
clc
mov
mov
jnp
mov
jbe
adc
stos
int3
pop
push
lock
jge
sbb
loope
arpl
and
push
sub
fidivr
inc
inc
mov
out
int
sub
adc
scas
repnz
(bad)
in
jp
out
loopne
pop
mov
sub
ins
push
mov
add
ins
ins
out
clc
mov
dec
lahf
aas
dec
adc
out
pop
aas
pusha
jmp
jnp
(bad)
(bad)
mov
xor
(bad)
mov
js
xlat
enter
stos
adc
sbb
xor
mov
xor
or
rcl
mov
clc
call
push
clc
imul
loop
lods
outs
test
inc
xchg
xor
or
pop
push
inc
xor
ja
aas
pop
imul
inc
sub
imul
push
(bad)
in
push
icebp
sar
add
push
push
cmps
adc
nop
cmp
jmp
inc
mov
xlat
pop
dec
push
je
outs
stos
xchg
cmp
jnp
jo
inc
dec
and
inc
push
in
dec
or
fnstsw
mov
xor
outs
int3
inc
xchg
scas
push
cmp
cmp
jae
ja
fwait
jge
jb
aaa
inc
mov
sub
je
cmp
xchg
out
inc
(bad)
dec
mov
and
shr
mov
add
mov
mov
jl
dec
xor
add
mov
in
xchg
jle
push
aas
out
outs
push
jno
xchg
sti
xchg
cmp
ja
stos
dec
mov
adc
ins
and
in
pop
fisub
cmc
or
cli
push
or
call
jle
jl
push
mov
or
retf
stos
loope
ror
jmp
cs
shr
cmps
and
cmp
sahf
sub
aam
add
movs
lods
enter
lods
xchg
push
shr
mov
and
sub
jae
int3
inc
inc
add
fs
push
call
inc
pushf
xlat
dec
scas
xchg
adc
das
(bad)
cmp
pop
xchg
jg
ss
inc
rcr
jecxz
leave
pop
les
nop
and
xchg
dec
out
(bad)
jl
push
push
into
mov
add
inc
in
addr16
call
sahf
xor
jecxz
xchg
inc
hlt
pcmpeqb
divps
pusha
idiv
pusha
mov
in
sub
ret
das
pop
sub
movs
mov
jne
sub
jns
test
cmp
imul
pushf
arpl
mov
mov
inc
scas
and
call
fsub
test
sub
in
pushf
int3
or
retf
sti
mov
jb
call
aaa
pop
ins
mov
xchg
jb
add
fwait
sbb
sbb
rcl
bound
cmps
add
call
jecxz
pusha
mov
jno
int
(bad)
mov
sbb
mov
lods
lods
add
repz
popa
out
mov
mov
cmp
xchg
out
icebp
rol
xchg
push
push
je
dec
mov
dec
and
test
call
pop
cli
pop
push
(bad)
sbb
sbb
pop
fwait
ds
xor
arpl
aaa
inc
aad
sbb
push
xchg
push
inc
jp
ror
push
mov
nop
xchg
xchg
adc
and
aaa
and
pop
dec
cmps
mov
sub
(bad)
pusha
mov
xlat
out
nop
jno
add
jl
xor
loopne
push
shr
xchg
cmp
outs
inc
nop
shl
pop
jno
mov
into
idiv
cld
int
movs
xchg
xor
sub
mov
adc
stos
and
(bad)
xchg
pop
or
and
loop
dec
sub
mov
imul
push
dec
sbb
pusha
xchg
sti
cmp
sbb
out
pop
and
pop
into
inc
ins
mov
sub
js
dec
movs
jge
in
jo
outs
cli
aas
push
out
cmps
jge
scas
sbb
arpl
adc
rcl
lahf
xchg
push
inc
popf
and
cmp
int3
xchg
pop
fisub
pop
mov
stos
pop
mov
jbe
jbe
jl
push
mov
mov
sti
mov
loopne
jbe
cmp
push
adc
adc
and
es
fld
add
sti
push
push
js
movs
stc
loop
cwde
pop
stc
int3
mov
rol
and
loope
jbe
retf
cmovs
push
push
push
cmps
addr16
adc
push
dec
outs
and
mov
jg
jae
sub
add
dec
jg
div
xor
xor
pop
pop
adc
test
xchg
ret
push
mov
nop
pushf
ficomp
jmp
sub
sub
test
jns
xchg
adc
retf
jnp
mov
rcr
jecxz
retf
(bad)
cld
pusha
dec
cmp
popf
in
nop
jbe
fstp
hlt
or
xchg
in
out
mov
imul
xor
or
xchg
cmp
add
push
sbb
push
mov
or
nop
jmp
sub
cmp
jne
movs
jo
ins
lds
arpl
mov
mul
inc
jne
fistp
ja
push
dec
dec
sbb
adc
jp
dec
jge
sub
push
sub
pop
xor
gs
out
mov
fisub
push
repnz
jmp
loope
push
pop
aam
sub
xchg
jg
pop
lods
fs
inc
dec
(bad)
nop
pop
mov
cmp
movs
mov
ins
jmp
sbb
lds
jb
xchg
inc
jmp
mov
in
aad
and
push
lods
jae
test
xchg
hlt
mov
nop
mov
jne
jg
sbb
movs
iret
pop
add
mov
sar
mov
sub
or
jne
outs
fldenv
jo
aad
xor
xchg
inc
mov
cmc
jecxz
in
repnz
retf
push
cmc
inc
mov
pop
or
sub
sub
push
enter
pushf
outs
ins
push
push
and
repnz
jno
out
jbe
ins
cmp
fbstp
je
xchg
jmp
pop
inc
lock
adc
sbb
ror
dec
adc
pop
sub
sbb
push
pop
and
adc
(bad)
pop
mov
inc
dec
ds
pusha
retf
pop
scas
add
lds
push
mov
rcr
(bad)
jnp
out
sub
push
pusha
jle
xor
scas
out
pop
out
movs
xlat
add
mov
mov
cmp
jbe
sub
mov
iret
movs
mov
aad
dec
add
je
bound
leave
xor
retf
push
xchg
out
inc
(bad)
mov
xchg
js
int3
repnz
lds
add
ins
shr
popf
pop
in
inc
mov
scas
sbb
mov
xor
scas
cli
push
fist
add
dec
sbb
test
inc
sbb
xchg
jmp
icebp
dec
lods
out
fadd
pop
sub
add
ret
imul
mov
dec
and
and
push
dec
int
adc
and
mov
add
mov
sub
(bad)
cmc
inc
or
mov
imul
push
in
and
or
inc
out
pop
push
add
mov
lahf
cs
xor
sub
mov
sub
fstp
mov
cs
ds
add
pop
jle
mov
stc
or
sub
sub
adc
pop
jbe
xlat
cli
cmp
pop
(bad)
mov
cdq
shl
mov
fcom
aaa
adc
add
and
shl
int3
pop
cs
sbb
mov
and
xor
lock
dec
inc
inc
jmp
enter
jge
ins
in
into
fist
ds
mov
scas
jl
and
xor
inc
outs
xor
mov
jns
test
push
outs
cmp
lods
mov
mov
inc
repnz
pop
xchg
xlat
jp
pop
mov
pop
test
xor
adc
retf
xor
fdivr
ins
xchg
push
xchg
sbb
or
ins
adc
inc
mov
push
mov
repnz
add
dec
dec
lea
call
retf
sub
mov
stos
jae
arpl
pop
jp
fisttp
aaa
mov
mov
inc
xchg
jg
dec
mov
lods
jg
mov
mov
dec
shl
aas
out
shl
daa
xor
mov
mov
jmp
add
clc
loope
shr
jmp
dec
jecxz
dec
les
nop
mov
push
mov
push
push
sbb
mov
shr
sbb
push
les
inc
xchg
xor
stos
jecxz
jno
sar
cmps
mov
jg
dec
std
and
inc
xchg
popf
sahf
(bad)
and
out
std
push
and
adc
mov
cmps
xchg
xor
pop
dec
neg
sub
mov
lea
ret
xor
mov
pop
sbb
pop
cli
cmp
gs
sbb
es
or
inc
out
mov
mov
pop
pop
pop
stos
call
pop
mov
sbb
push
mov
dec
sub
rol
dec
mov
mov
imul
aad
dec
rcl
mov
pop
jae
cmp
inc
dec
adc
add
fsub
cmp
fld
xchg
fs
loope
shl
adc
loope
and
jle
pop
clc
arpl
leave
das
popa
out
sbb
mov
pop
cmp
xor
sub
ds
mov
lahf
call
gs
cli
je
adc
add
sbb
loope
push
in
cmp
lahf
sbb
xchg
ficomp
out
sub
ss
sub
pop
clc
pop
mov
sbb
cmps
enter
adc
cmc
inc
popf
or
jp
or
loopne
ret
pop
in
leave
xor
mov
xor
xchg
imul
dec
add
push
pop
loop
aad
mov
aam
dec
mov
xchg
(bad)
dec
fs
aaa
sti
les
mov
pop
inc
sar
push
outs
cs
cdq
and
xor
popa
and
jo
and
xchg
(bad)
push
cmp
pop
in
inc
ja
sti
inc
dec
es
push
jge
and
in
cmc
jmp
in
std
imul
jne
ins
out
jo
pop
ins
into
stc
popa
mov
js
cmp
cmp
dec
push
mov
ret
mov
adc
adc
out
ja
fwait
push
add
call
sbb
cmp
jnp
or
push
aad
inc
adc
jne
sbb
mov
sbb
xor
leave
mov
cmp
rcr
js
add
iret
clc
push
pop
sub
int
sbb
shr
retf
loope
cmp
mov
nop
gs
mov
add
jae
mov
and
stos
scas
lods
sbb
mov
popf
sbb
lods
or
jmp
popf
and
push
lahf
or
sub
aaa
lea
adc
sbb
cmp
sbb
xor
inc
ror
addr16
jne
xor
cmp
mov
jmp
mov
cmps
sub
out
cmp
fstp
lods
jmp
mov
mov
push
sahf
outs
mov
scas
xchg
(bad)
call
push
dec
mov
or
repz
dec
fwait
sub
jp
jg
loopne
xlat
mov
pop
out
out
out
cmc
add
mov
cmp
imul
sbb
cld
adc
dec
loopne
push
cmp
pop
xor
hlt
scas
jno
sbb
ror
mov
sub
mov
stc
aam
mov
mov
dec
nop
mov
outs
(bad)
(bad)
dec
jg
jl
fadd
fistp
adc
lods
push
push
je
cmp
data16
mov
mov
rol
ret
push
mov
leave
rcr
mov
pop
inc
and
jle
inc
rcr
push
mov
in
xchg
outs
jmp
rcl
out
enter
gs
jmp
mov
shl
adc
lock
fld
repnz
pop
mov
stos
dec
ins
je
sub
pop
idiv
mov
movs
nop
xchg
std
mov
mov
aas
dec
adc
ret
inc
into
ja
das
sbb
xor
lods
jo
sub
aam
mov
not
and
cwde
enter
(bad)
or
jbe
mov
test
call
xchg
stc
sub
add
cmp
inc
gs
or
jp
cmp
ds
push
sbb
push
aad
aad
and
or
scas
mov
pop
in
shl
mov
cmps
add
xchg
(bad)
push
adc
add
(bad)
lods
add
aaa
dec
aam
movs
or
shr
sub
es
jnp
sbb
repnz
test
adc
out
push
lds
outs
in
in
and
pop
addr16
aam
xor
xchg
add
and
dec
cdq
aam
xor
in
inc
scas
mov
or
daa
xchg
retf
sbb
imul
je
jle
dec
dec
arpl
and
pop
repz
mov
xchg
stos
pop
and
outs
mov
test
sub
mov
pop
and
mov
adc
mov
ds
fdivrp
fmul
iret
sbb
cdq
mov
clc
push
or
clc
sub
(bad)
and
mov
mov
mov
push
jecxz
ds
jae
or
out
push
cs
push
lds
sbb
cld
in
fs
sub
call
xor
xor
inc
xchg
jmp
jae
(bad)
fistp
cmp
icebp
dec
in
push
push
inc
out
je
mov
nop
jbe
mov
pusha
repz
aaa
adc
pop
js
jmp
loop
jnp
(bad)
sbb
adc
dec
add
add
dec
sbb
dec
(bad)
mov
and
push
cmc
out
mov
xor
jae
dec
mov
xchg
(bad)
(bad)
(bad)
bound
ficom
xor
push
dec
mov
test
push
(bad)
cmp
jmp
mov
int3
xor
add
push
mov
clc
pop
xchg
mov
addr16
outs
xor
dec
xor
xchg
pop
push
xor
out
add
adc
cmp
lods
sbb
jbe
pop
pop
enter
retf
dec
add
adc
shl
icebp
aaa
cmc
cmp
mov
out
out
enter
ror
dec
sbb
sahf
mov
sahf
es
xchg
xor
mov
jbe
mov
std
add
sub
pop
out
dec
stos
out
div
jp
aaa
mov
ror
std
inc
enter
lds
repz
loop
jge
push
sub
pop
dec
sub
mov
sub
cs
(bad)
imul
sbb
stos
cmp
mov
aaa
(bad)
ja
iret
sbb
call
(bad)
jns
push
sar
movs
mov
idiv
(bad)
or
hlt
outs
jo
pop
pop
into
inc
jae
or
push
jmp
cdq
shr
les
inc
inc
add
mov
dec
mov
fsubr
nop
jns
(bad)
out
call
jnp
sbb
jmp
jl
(bad)
les
or
adc
cmp
jecxz
or
sbb
mov
inc
rcl
add
mov
cdq
inc
stos
xchg
int3
sbb
mov
jbe
push
inc
dec
cs
jp
lock
ds
scas
mov
xor
bound
and
cmp
mov
out
shl
mov
or
and
mov
mov
dec
add
ins
adc
mov
loopne
iret
popa
mov
push
mov
dec
dec
push
shl
push
sub
cmps
adc
js
cmp
jne
xor
push
bound
in
jecxz
dec
int
cmp
fdiv
jecxz
aas
inc
or
inc
scas
dec
repnz
mov
mov
scas
push
in
(bad)
lods
jl
sbb
and
xchg
imul
and
jne
inc
icebp
jle
adc
mov
fucomp
loop
pop
inc
jnp
jno
loope
inc
sub
sbb
cli
add
(bad)
in
push
push
out
(bad)
mov
add
out
xlat
or
mov
sub
dec
mov
ja
xor
sub
mov
daa
inc
or
push
test
push
or
mov
push
push
retf
popf
stos
sbb
(bad)
fsubr
pop
add
mov
dec
fist
inc
je
imul
push
inc
and
call
sbb
popf
shl
xor
adc
sbb
aam
test
into
std
cmps
shufps
mov
mov
fmul
test
dec
das
repz
jne
pop
pop
xchg
out
gs
pop
out
stc
repz
arpl
jle
aas
push
ja
jmp
inc
fimul
adc
xchg
sub
adc
ror
xor
and
loop
or
cmp
pop
mov
pop
or
jb
dec
cmps
cmps
movs
sub
clc
and
data16
aad
push
shr
jmp
cmp
into
sub
xchg
push
mov
mov
daa
mov
scas
jp
xchg
pop
je
icebp
jg
xor
shl
inc
add
push
mov
cmp
and
iret
fmul
adc
inc
or
adc
fwait
jne
fild
xchg
pushf
loopne
gs
mov
adc
fmul
std
pop
or
repnz
jo
jg
inc
je
pop
mov
pop
mov
inc
out
or
lock
push
and
push
ja
and
pop
push
mov
call
and
and
inc
outs
js
ss
popa
adc
cmp
fidivr
or
icebp
icebp
xor
jmp
(bad)
cmp
push
sub
fmul
mov
cli
sub
popa
cmp
movs
outs
fld
movs
xchg
retf
and
ds
lea
je
jmp
adc
ret
and
mov
movs
jae
in
dec
jae
je
xor
push
ror
rcr
(bad)
repz
mov
jne
dec
jne
dec
sbb
push
ret
add
loop
ja
xchg
mov
std
daa
into
dec
mov
ins
arpl
sub
fs
add
imul
scas
sbb
mov
iret
outs
lods
ds
adc
inc
xlat
dec
mov
out
sbb
xchg
syscall
std
inc
shl
test
jns
(bad)
fdiv
(bad)
stos
nop
jns
jbe
and
pop
loop
xor
sbb
std
addr16
sub
and
add
push
add
inc
ror
mov
sub
data16
sub
out
clc
fimul
or
repz
mov
mov
adc
les
jmp
test
jecxz
das
movs
adc
cdq
lods
out
data16
push
cmp
ja
mov
enter
sub
xor
jmp
cmc
jl
sbb
retf
mov
imul
jns
loopne
outs
push
dec
lock
xchg
push
popa
mov
sub
pop
mov
push
or
sbb
push
cmc
dec
aam
cmp
jbe
mov
mov
mov
stc
sbb
cmp
outs
and
pop
shl
inc
push
xor
sub
jns
or
push
jle
mov
dec
xor
ja
test
dec
jg
mov
imul
scas
and
icebp
pop
shl
scas
mov
push
mov
jp
in
sbb
fsub
push
scas
fidivr
sub
jp
scas
dec
xor
xor
test
in
sub
jnp
ins
sbb
cmps
cmp
cmp
xor
or
sbb
jne
arpl
mov
inc
lods
dec
imul
cmc
loop
cmp
jle
jb
lea
test
adc
xchg
enter
mov
add
pop
cdq
(bad)
ins
aad
xor
daa
pop
sub
gs
cwde
out
sub
(bad)
into
iret
jb
sbb
mov
cmp
inc
pop
sub
push
lahf
sahf
jb
scas
shl
jae
stc
push
into
adc
movs
and
jo
sbb
mov
shl
outs
inc
mov
mov
imul
mov
outs
and
xlat
pop
dec
inc
sbb
push
mov
outs
aad
mov
dec
dec
shl
dec
push
adc
rcr
push
jb
push
mov
iret
dec
and
jp
lods
bound
daa
leave
sti
mov
jecxz
enter
cld
aad
inc
xchg
in
xchg
popf
in
call
or
imul
cmps
mov
dec
sbb
jl
adc
mov
sbb
inc
lods
cmc
std
inc
mov
loopne
ret
xor
or
cvtps2pd
and
and
addr16
xchg
(bad)
neg
pop
push
dec
and
rcl
in
in
xchg
pusha
or
(bad)
ins
add
inc
dec
out
retf
mov
jo
jne
(bad)
pop
inc
lds
es
jge
inc
xor
ffree
shl
pop
or
cmp
daa
xchg
mov
jae
aaa
sbb
(bad)
xor
imul
xor
(bad)
pushf
mov
pop
cmps
xor
jne
cmp
xor
cmp
inc
xor
cmps
jl
aad
arpl
into
add
jmp
jne
loope
retf
ror
mov
sub
sub
aam
cli
test
jle
and
loopne
add
add
repnz
push
ins
jne
and
push
mov
repnz
clc
xchg
jp
movs
fistp
mov
mov
std
pop
stc
addr16
dec
inc
shl
mov
cmp
fmul
push
bound
pop
shr
sub
sub
scas
bound
mov
cmp
inc
ins
mov
lahf
jbe
and
popf
outs
stos
test
mov
push
(bad)
mov
jae
enter
imul
mov
pop
push
sbb
jmp
adc
sbb
shl
xor
ret
fsubr
jbe
mov
fadd
sub
ror
mov
sahf
xlat
inc
pop
xor
fs
out
int3
aaa
scas
inc
adc
not
sub
and
xor
stos
mov
repnz
cmc
test
mov
sbb
icebp
mov
daa
lods
lods
dec
ss
(bad)
sub
stos
ss
(bad)
xchg
je
repnz
out
jne
scas
aad
sar
cld
pop
jle
aas
scas
push
sbb
push
and
retw
ja
test
loop
ja
pop
mov
pop
xor
mov
je
inc
bound
mov
loope
xchg
repz
not
sahf
js
gs
repz
out
cmps
cmp
(bad)
pop
pop
xlat
(bad)
into
aas
repnz
mov
jno
push
in
in
movs
mov
sar
sbb
inc
pop
fwait
(bad)
repz
je
mov
call
stos
jo
ficom
cmp
and
or
xchg
in
push
call
add
jo
fwait
mov
and
adc
and
outs
mov
jge
and
add
mov
cmp
adc
fadd
stos
cwde
sbb
add
mov
pop
and
popf
cmp
sbb
data16
cli
test
icebp
scas
(bad)
cmp
sahf
ret
push
sbb
sbb
pop
into
fadd
aad
(bad)
scas
sbb
ins
imul
cmc
ja
xchg
xchg
into
dec
push
ins
lock
in
lods
in
xchg
jo
loopne
ins
pop
push
dec
(bad)
out
pop
fwait
add
daa
cmp
push
xor
div
jge
jle
call
outs
mov
(bad)
inc
cmp
test
mov
hlt
jo
cmp
inc
dec
pusha
jno
out
cmps
daa
dec
aas
jbe
ror
sub
jbe
scas
ins
add
clc
pop
pop
dec
mov
shl
mov
xlat
xchg
mov
in
(bad)
pop
cli
ror
retf
out
out
xor
jmp
cmp
addr16
adc
dec
xlat
inc
push
imul
data16
jp
mov
int3
mov
xchg
add
stos
stc
(bad)
fs
inc
cmp
pop
cwde
in
mov
mov
pop
js
jbe
sbb
int3
mov
in
movs
cs
cmp
pop
mov
and
pop
jmp
out
test
outs
mov
cwde
ret
and
outs
mul
lock
and
xor
daa
retf
add
inc
mov
jmp
stos
and
mov
outs
pop
jl
scas
sbb
ret
push
in
rcr
mov
jecxz
xchg
scas
cmp
adc
pop
sub
jge
out
lock
cmp
add
retf
jp
mov
sbb
push
sahf
pop
jno
es
mov
jecxz
pop
and
pop
mov
sbb
add
cli
imul
cmp
ret
mov
add
mov
stos
mov
cmps
mov
and
test
pop
jae
pop
jg
xor
jno
jo
in
sahf
gs
into
je
ins
fld
ret
icebp
shl
in
xor
inc
push
addr16
inc
xor
or
jmp
adc
sti
add
inc
fs
shr
xchg
xlat
repz
inc
dec
add
push
push
ror
xchg
lods
mov
nop
cwde
hlt
fiadd
or
push
add
xor
jecxz
inc
or
aad
(bad)
call
jb
and
call
push
call
xor
jge
cmp
pop
popf
(bad)
ss
sub
cmp
outs
cmp
add
sbb
lock
xor
shl
jle
sub
pop
(bad)
push
xor
cmp
int
sahf
test
sbb
shl
movs
popf
lds
and
enter
mov
xchg
fcom
scas
pop
xchg
add
add
cwde
push
test
pop
ins
dec
add
rol
repz
add
fcomi
xor
pop
ss
jge
rcr
js
test
pusha
ret
sub
add
xchg
fs
pop
push
cmc
inc
ss
and
mul
push
pop
ret
in
jmp
pop
movs
ss
sub
ds
xchg
dec
pop
ret
mov
mov
lods
data16
xor
or
cmp
rol
mov
inc
sbb
out
mov
adc
loopne
pop
je
and
pop
mov
pop
sub
sub
jmp
jae
jmp
sbb
mov
adc
mov
pop
inc
es
inc
mov
mov
stos
repz
xor
cmp
and
fstp
mov
sub
je
mov
in
xlat
pusha
dec
or
mov
daa
rol
jmp
shl
es
xchg
dec
pop
push
cdq
or
push
ja
in
dec
push
push
in
dec
xor
jno
iret
jae
fwait
mov
push
jb
test
xchg
ja
fdivrp
cld
mov
dec
outs
fiadd
loop
inc
call
xchg
sub
sub
ret
xor
outs
out
cwde
sbb
dec
out
mov
ja
fst
pop
cdq
dec
xchg
fdivr
cmps
push
pop
add
xor
xor
adc
dec
lock
lahf
fisubr
add
ins
movs
ror
sub
not
bound
shl
les
mov
add
shl
sub
adc
mov
push
sbb
mov
push
pushf
pushf
jl
sub
jb
cmps
cmp
call
addr16
dec
dec
out
jne
xchg
jo
in
inc
das
dec
and
jbe
mov
arpl
xchg
adc
movs
imul
es
clc
in
dec
pop
dec
data16
jno
mov
xchg
loopne
mov
jg
fistp
ficom
gs
sbb
fs
push
(bad)
mov
popaw
xchg
(bad)
adc
sbb
xchg
pop
andnps
imul
inc
xchg
adc
cs
movs
rcr
and
mov
jge
lock
sub
push
cmps
mov
int
ja
jmp
pop
adc
dec
sbb
pop
cmp
sub
enter
mov
inc
adc
repnz
push
jb
mov
inc
adc
das
pop
xchg
mov
scas
push
lahf
sub
sub
call
inc
daa
sub
jp
mov
inc
inc
jae
sub
sub
js
sub
ret
pop
stos
(bad)
or
cmc
int
in
push
sbb
inc
mov
out
and
sub
jns
lods
fxam
pop
lock
ins
ret
std
(bad)
jnp
jne
je
retf
sub
imul
mov
pop
in
pop
sbb
jne
aam
das
cmp
jge
mov
icebp
dec
inc
mov
mov
and
lds
sbb
or
dec
mov
and
fbld
pop
loopne
std
inc
out
mov
push
mov
(bad)
cs
(bad)
aaa
bound
jbe
push
inc
inc
or
xor
dec
data16
jl
mov
mov
gs
inc
ss
mov
or
dec
mov
pop
pop
push
iret
dec
movs
aam
mov
mov
xchg
leave
push
retf
call
out
inc
sbb
sub
jae
or
fcmovnbe
mov
inc
inc
xor
imul
jecxz
out
mov
push
dec
push
pop
pop
sub
cmps
xlat
mov
xchg
push
fld
xchg
push
jl
pop
dec
clc
(bad)
push
je
stc
enter
jo
inc
cld
test
pop
nop
pop
cmps
xchg
loope
es
ret
jae
aaa
dec
dec
iret
jno
jmp
arpl
fadd
mov
mov
outs
mov
rcl
sbb
fwait
movs
nop
(bad)
cdq
push
sbb
adc
push
cmps
pushf
pop
push
mov
xor
push
jmp
std
xor
mov
sbb
outs
ret
ss
xchg
out
sub
enter
xor
in
push
and
pop
rol
cld
jle
(bad)
sar
jp
sub
cmp
push
and
jl
xchg
sub
out
jge
and
push
push
jb
add
test
lock
in
xchg
mov
adc
jbe
ins
test
stos
push
test
and
jb
aaa
aad
or
jns
sbb
push
mov
cmp
add
aas
mov
das
jle
pop
fistp
ja
retf
push
cmp
xchg
adc
xchg
call
icebp
(bad)
(bad)
out
cwde
addr16
out
sbb
xchg
xor
cmps
push
(bad)
lds
sub
cli
mov
inc
daa
sub
pop
pop
or
jne
pop
cmp
fnstenv
push
or
outs
ins
inc
pushf
push
pop
aaa
push
dec
mov
inc
inc
jle
and
int3
adc
aas
dec
imul
data16
xchg
out
xor
jnp
cmp
jmp
mov
dec
sbb
lods
scas
inc
sahf
aas
mov
inc
sahf
aas
mov
push
add
rol
xor
sar
pop
jmp
aad
xchg
enter
ret
cmp
ds
aas
cmc
movs
jle
test
sbb
cmp
rol
repz
cmp
outs
mov
outs
lods
out
neg
or
jno
scas
or
dec
fst
and
test
inc
pop
jbe
loopne
ins
cmp
out
mov
mov
mov
xor
cmp
push
mov
out
mov
and
mov
inc
and
sbb
js
pop
arpl
jge
xchg
imul
ss
add
outs
sbb
add
test
mov
mov
add
imul
ss
inc
xchg
cmp
xchg
mov
sbb
cmp
cmp
sbb
movs
adc
ins
movs
push
in
ins
ins
shr
loop
xchg
sbb
dec
dec
popa
add
and
inc
push
inc
dec
xor
cmp
ins
data16
inc
mov
xor
je
ds
in
xchg
cmps
push
inc
push
mov
or
cli
pop
and
ficom
test
ins
aas
(bad)
leave
fs
dec
pop
and
pushf
dec
lods
pop
out
cmp
call
dec
and
mov
std
rcl
mov
fwait
js
cmps
mov
inc
push
dec
ja
repz
nop
sbb
xchg
inc
sti
stc
inc
out
xor
mov
int
cmps
loopne
xchg
mov
imul
or
push
and
mov
retf
pop
int3
retf
jo
clc
fist
ret
mov
scas
sbb
mov
lods
scas
aad
push
in
data16
loope
ds
int
mov
fsubr
mov
push
pushf
(bad)
jno
pop
xor
dec
mov
stos
ror
and
out
push
xor
into
push
scas
pop
sub
outs
mov
push
arpl
int3
dec
retf
scas
add
cmp
daa
stos
mov
mov
push
mov
sub
out
cmp
dec
mov
jmp
push
jb
in
ss
out
pop
int
ss
and
call
popf
jo
je
gs
sahf
cmps
pop
repnz
xchg
push
ss
dec
push
(bad)
test
cmp
jns
pop
lods
jns
cmps
movs
out
xor
mov
bound
sbb
inc
jb
add
sahf
rol
sar
cmp
idiv
dec
push
div
mov
mov
mov
js
xor
fs
mov
adc
je
aad
sbb
jmp
repnz
imul
pop
push
nop
bound
leave
mov
cmp
add
inc
cli
fldenv
daa
jp
or
stos
dec
test
es
jecxz
stc
mov
cs
js
jmp
int
push
test
cmp
push
fiadd
push
mov
jns
mov
cwde
cli
cmp
mov
(bad)
stos
jge
pop
jp
fs
mov
pop
ret
add
sti
add
dec
dec
jmp
outs
fwait
pop
xchg
pop
inc
jp
sahf
pop
mov
and
adc
adc
cmp
xlat
xchg
daa
pop
jg
mov
mov
xchg
enter
jnp
xlat
push
outs
out
ja
sar
pop
xor
jle
in
imul
pop
call
lea
out
hlt
push
(bad)
sbb
cmp
(bad)
cmc
in
inc
sub
jp
sub
cs
mov
jmp
add
and
out
mov
jge
pop
les
lds
push
mov
mov
add
icebp
xor
ins
lods
pop
pop
inc
ret
data16
jg
shl
mov
sbb
jo
ret
call
mov
data16
jb
push
ins
daa
fistp
outs
xor
dec
sti
int3
jno
xchg
fidivr
pop
cmps
pop
add
push
xor
pop
andnps
fs
jmp
dec
or
xchg
test
push
jo
inc
iret
out
jl
stos
sar
mov
pop
dec
pop
shr
mov
es
push
sbb
pop
ins
mov
movs
inc
ja
push
push
lahf
pop
mov
(bad)
dec
and
mov
mov
sbb
pop
inc
(bad)
(bad)
cwde
push
(bad)
cmp
shr
jg
or
lahf
imul
push
adc
fs
mov
ins
jae
popf
imul
mov
add
cmps
sti
idiv
sbb
arpl
cwde
and
hlt
lock
jle
and
das
fld
repnz
shl
inc
push
or
pop
fiadd
mov
cdq
pop
cs
imul
adc
call
pushf
pop
repz
imul
popf
fbstp
cmp
push
call
loope
shr
sub
mov
cmp
leave
nop
xor
xchg
or
movs
ss
cmp
add
ja
not
jbe
jb
adc
inc
xchg
adc
cmp
jae
fiadd
fnstcw
call
push
fisub
sbb
mov
add
out
dec
lods
cmps
or
jp
inc
fwait
cmp
dec
sbb
xchg
rol
rcl
(bad)
dec
or
stos
add
or
outs
xor
push
add
cs
ja
push
loopne
ja
es
mov
cld
(bad)
push
jmp
add
rcr
cmp
test
(bad)
push
xchg
movs
aaa
cmp
and
movs
fiadd
pop
sub
mov
rcl
fwait
inc
or
(bad)
aam
imul
es
mov
xchg
fisub
and
(bad)
aam
ins
sete
fcmovne
ret
push
mov
movs
xlat
cmp
jge
sub
stos
or
cld
and
inc
jo
call
mov
mov
inc
mov
pushw
bound
or
push
inc
hlt
dec
sbb
cmps
mov
dec
push
push
int3
inc
mov
aaa
push
sub
mov
out
mov
pop
jnp
fcmovb
fcomp
inc
push
scas
test
or
xchg
ss
pop
mov
pop
out
jecxz
add
clc
xlat
shr
or
stos
ror
sub
mov
inc
pusha
jb
push
imul
adc
jne
xchg
bound
adc
das
jg
adc
push
mov
mov
je
daa
out
inc
dec
jo
cld
cmp
push
or
cmp
bound
inc
dec
fimul
jp
fucomip
inc
clc
adc
js
mov
fld
mov
das
loopne
and
pop
push
mov
jns
out
loopne
in
pop
and
fst
stc
or
outs
dec
add
lods
cs
movs
ret
(bad)
mov
aam
hlt
movs
out
xchg
inc
jmp
jb
fidiv
cs
jle
sti
test
add
dec
aas
xchg
outs
out
frstor
adc
nop
arpl
sbb
inc
lods
sub
pop
mov
jmp
dec
icebp
jne
or
add
fld
xlat
push
pmullw
push
js
fistp
xchg
aaa
sti
lods
or
pop
push
cmp
xor
imul
mul
push
adc
push
jo
add
movs
jno
push
test
jecxz
popf
movs
inc
push
jno
out
in
lds
je
fcomi
popa
sub
adc
(bad)
xchg
mov
push
cmps
add
das
rcr
push
push
push
add
adc
jl
mov
fistp
jle
cdq
lods
stos
mov
in
leave
mov
mov
(bad)
and
pop
sub
jp
ror
(bad)
mov
out
lods
inc
dec
movs
fcmovbe
outs
xchg
popa
mov
xor
movs
imul
je
fs
out
or
dec
jp
push
push
pop
inc
mov
inc
fs
outs
cmc
xor
mov
gs
or
mov
xchg
ins
scas
jmp
and
or
sub
inc
jl
jns
xor
jmp
scas
pop
shr
sub
stos
inc
inc
jcxz
add
add
sbb
cwde
xor
mov
inc
and
sbb
fistp
inc
shr
push
and
bound
scas
push
fs
stos
adc
retf
aas
mov
movs
jbe
xchg
dec
mov
mov
out
jmp
call
and
jmp
jle
gs
loope
push
(bad)
cmp
mov
push
mov
add
jmp
in
xor
jmp
icebp
cmps
dec
jne
outs
xchg
ja
scas
fwait
sub
add
adc
mov
lds
or
out
mov
fisubr
mov
inc
cmp
ret
pop
cmp
adc
test
out
imul
daa
in
lock
cli
push
push
in
std
adc
neg
adc
jns
cmp
mov
mov
neg
and
in
sar
repz
cwde
vpshaw
retf
cmp
mov
popa
dec
icebp
bound
xchg
pop
xchg
dec
cmc
retf
out
sub
inc
push
sbb
sbb
cdq
pop
pop
jne
in
scas
cmps
imul
movs
cs
pop
xor
mov
dec
push
or
arpl
stos
sbb
into
dec
fild
cmp
std
add
icebp
push
mov
mov
dec
mov
xchg
fcomi
ss
mov
dec
dec
mov
mov
repz
gs
and
ins
dec
fisttp
push
stos
call
jecxz
fwait
push
dec
or
popf
dec
adc
hlt
add
es
arpl
xchg
jns
mov
fsubr
scas
pop
mov
jmp
retf
mov
into
or
mov
xchg
push
push
mov
lods
mov
xchg
(bad)
jbe
fcomp
mov
jecxz
call
popf
or
add
outs
push
cmp
stc
mov
clc
jecxz
call
loope
mov
jmp
mov
inc
xor
inc
repnz
jmp
push
shl
mov
fwait
mov
mov
retf
mov
repz
int3
sbb
stos
xchg
xchg
jno
jecxz
gs
and
mov
cmp
jno
das
mov
sbb
jbe
mov
stc
in
pusha
push
dec
enter
push
fnstsw
dec
(bad)
jns
mov
xchg
call
dec
and
js
xchg
xor
adc
aas
xchg
adc
xchg
out
stc
out
add
push
or
adc
sti
data16
xor
push
das
movs
xchg
push
add
test
push
fimul
cmp
shl
les
in
leave
pop
dec
sub
jns
shl
pop
or
js
jbe
cmp
mov
je
xor
icebp
ss
add
and
aas
jmp
imul
mov
hlt
xchg
dec
xor
cmp
mov
das
push
and
gs
mov
ja
mov
(bad)
xchg
mov
ins
push
addr16
jb
les
dec
adc
adc
repz
cmp
fs
push
pop
ins
ret
jmp
push
sub
arpl
jo
mov
jbe
aad
out
stos
adc
mov
int3
mov
sub
add
nop
jo
lahf
into
and
sbb
or
jns
pushaw
lock
pop
push
push
dec
arpl
sub
pop
loope
js
cld
xor
arpl
mov
bound
push
repnz
(bad)
movs
mov
clc
cwde
mov
ins
mov
push
movs
fwait
jb
and
aad
dec
mov
add
push
movs
mov
sahf
test
mov
mov
xchg
push
popf
out
jg
dec
push
pop
pop
outs
pop
push
add
movlps
mov
cmp
out
xchg
clc
sub
fdiv
ss
pop
sub
inc
gs
cmp
pop
push
dec
test
adc
outs
adc
xchg
jb
and
push
xor
and
pop
cs
add
pop
outs
fstp
cmp
in
mov
dec
xor
mov
jo
cmp
push
bound
sub
inc
and
mov
cmc
imul
int3
stc
test
inc
iret
cmp
out
adc
jbe
mov
shl
cs
pop
lahf
ret
push
and
push
mov
fmulp
cmp
cmps
cmp
adc
pop
or
(bad)
pop
aas
fdivr
mov
sbb
hlt
mov
add
ins
pop
dec
and
jge
call
cmps
or
mov
mov
xchg
push
dec
hlt
ficom
jg
ror
mov
sub
gs
fsubr
or
mov
stc
aad
rol
or
sub
sub
repz
sub
jno
bswap
add
dec
pop
les
call
imul
int3
aas
out
inc
gs
mov
out
inc
push
jmp
jo
pop
ss
inc
mov
inc
in
jl
add
hlt
jle
xchg
vmwrite
xor
maxps
in
int
cmp
and
fdivr
jle
std
jbe
aam
and
cmp
push
pop
inc
outs
int
xchg
sub
jl
push
xchg
xchg
and
sbb
mov
pop
or
in
xchg
repnz
movs
cmps
mov
mov
jge
sbb
call
jmp
jno
outs
xor
pop
xchg
dec
scas
pop
les
cld
push
inc
cwde
mov
dec
arpl
fld
imul
inc
call
ss
lods
mov
push
cmp
mov
cmps
mov
push
pop
sar
sub
in
(bad)
fild
push
jnp
or
dec
out
or
test
sbb
add
push
leave
sbb
inc
sub
push
mov
inc
pop
sbb
jp
loopne
pop
mov
pop
cmp
or
inc
nop
sub
scas
push
dec
pop
jle
jnp
popa
cld
jo
sbb
stos
gs
mov
fisttp
movs
sar
cmp
hlt
xchg
mov
cdq
push
mov
(bad)
out
pop
cmp
aad
out
retf
add
icebp
jge
sub
gs
or
mov
or
mov
push
add
dec
call
adc
push
in
sub
xor
mov
jne
loope
cld
jmp
jp
hlt
mov
loop
inc
popf
xor
vcmpps
xchg
inc
shl
fnstsw
mov
rol
jmp
jmp
pop
sub
lea
fisttp
jg
in
or
jne
leave
push
xor
cmp
rcl
mov
push
sub
sbb
loope
inc
mov
or
sbb
js
sub
ja
stc
sub
shl
xlat
pop
mov
das
push
inc
jae
xchg
push
mov
pop
pop
ins
pop
loopne
xchg
add
aas
sub
sub
(bad)
jp
pop
cmp
imul
(bad)
ds
cdq
pop
inc
inc
scas
mov
inc
add
push
inc
jle
popa
xor
sbb
(bad)
psubusw
movs
mov
inc
repz
dec
xchg
cmp
pop
jbe
call
mov
in
rcr
inc
mov
dec
jnp
xchg
and
add
inc
call
cmp
push
std
ja
inc
or
inc
cmp
xor
fs
inc
or
mov
xor
(bad)
fcomp
sbb
jmp
loopne
jns
cmp
sahf
add
lock
in
jle
and
pop
sbb
aad
xor
mov
lods
and
imul
in
jge
ds
jl
add
(bad)
mov
jmp
dec
(bad)
pushf
cwde
xor
in
dec
cmp
in
push
sub
inc
out
mov
ret
dec
dec
mov
iret
lods
setg
or
mov
push
pop
(bad)
hlt
pop
int3
les
(bad)
call
inc
call
lock
adc
scas
rol
fdivr
shl
mov
test
stos
jmp
es
in
xor
cmp
jmp
retf
ins
repnz
jo
add
push
sbb
outs
pop
pop
cs
stos
jb
in
jmp
(bad)
out
shl
mov
inc
push
pop
push
lahf
mov
mov
inc
pop
sbb
call
in
jmp
outs
jne
push
mov
add
adc
fisttp
adc
ja
pop
fstp
stos
ja
mul
cmp
xchg
lods
adc
adc
fld
rcl
movs
add
ins
test
std
push
loop
leave
lods
neg
pop
xchg
pop
push
dec
mov
iret
test
sub
arpl
push
movs
cvtps2pd
ror
inc
pop
push
and
enter
cmp
aam
fnstsw
sbb
or
loope
jbe
daa
or
dec
outs
into
retf
es
cmps
jns
aad
xor
sbb
retf
cmp
add
pop
repz
inc
jmp
imul
es
pop
test
inc
ret
imul
fiadd
cmc
pop
mov
scas
call
in
mov
scas
adc
pushf
dec
dec
sti
pop
pop
pop
push
or
les
leave
cdq
std
scas
imul
mov
sti
pop
xor
dec
and
fdivp
xor
mov
stc
test
dec
jecxz
mov
dec
sub
and
push
push
(bad)
push
out
data16
cli
cmc
pop
gs
(bad)
cmp
rol
jmp
icebp
and
add
loop
add
jae
nop
sbb
and
mov
mov
sbb
push
pop
rcr
addr16
jns
adc
stos
lds
lods
pop
push
inc
mov
aas
nop
fucomip
aas
sbb
jbe
es
mov
ret
jno
jo
jo
std
inc
dec
push
mov
fisub
test
outs
inc
sub
inc
jmp
ret
ins
mov
jl
mov
cmps
jbe
imul
cmp
test
xchg
(bad)
rcl
movs
outs
bnd
mov
ins
xor
loop
xor
adc
sbb
pop
icebp
test
into
pop
das
cmc
mov
and
push
adc
fdivr
out
mov
rcl
lea
jmp
pusha
out
inc
and
(bad)
call
mul
and
sub
xor
sbb
lds
or
add
scas
cs
ja
add
xor
imul
or
std
adc
jb
cs
sub
adc
loopne
and
leave
call
xor
xor
sub
int
cmp
rcr
push
retf
arpl
stc
fs
das
rcl
push
or
out
or
dec
scas
(bad)
mov
mov
rol
pop
inc
(bad)
adc
adc
sbb
retf
cmp
dec
jo
inc
push
jecxz
or
mov
out
cmp
jbe
adc
dec
push
mov
mul
xor
movs
inc
loopne
sbb
inc
jns
adc
xchg
cmps
das
inc
dec
mov
sbb
sub
test
inc
outs
mov
sbb
cmp
mov
inc
test
push
xchg
sub
jmp
pushf
dec
scas
rol
mov
mov
loop
jge
cmp
std
sub
dec
push
mov
imul
ret
sub
retf
in
and
fwait
adc
sbb
push
jl
push
(bad)
(bad)
aas
call
pop
sub
es
mov
lods
je
iret
inc
outs
(bad)
fidiv
inc
repnz
mov
call
es
pop
(bad)
in
pop
inc
call
outs
dec
mov
pop
add
addr16
repz
cmp
enter
xor
popf
test
rcr
push
ins
push
add
mov
in
add
inc
jb
xor
and
sub
out
jl
ret
les
cmp
cmp
mov
mov
imul
es
pop
sbb
jns
mov
inc
xor
out
cmps
(bad)
or
sbb
mov
mov
lahf
add
xchg
scas
fsubr
mov
add
cs
psubusw
sub
enter
push
adc
dec
lock
sbb
or
push
and
(bad)
clc
dec
inc
ret
fdiv
jae
dec
popf
mov
cmp
xchg
inc
mov
inc
ret
inc
xchg
mov
lods
ret
mov
inc
xchg
vlddqu
lods
jo
jbe
jl
das
push
mov
xchg
xlat
mov
imul
aad
mov
daa
jge
sahf
test
sahf
cmp
bnd
out
lock
outs
sbb
push
push
add
sub
fsubr
repz
xor
inc
push
push
and
cmps
inc
addr16
mov
aam
push
xor
aas
and
stos
inc
jo
retf
scas
call
imul
sub
lea
ret
or
cdq
inc
or
jp
pop
adc
ins
stos
push
xor
call
pop
dec
out
push
(bad)
mov
push
jmp
(bad)
push
hlt
pusha
mov
test
packsswb
stos
jmp
loopne
sbb
add
inc
fcom
adc
pop
stc
xor
pop
imul
pop
and
mov
dec
loope
jmp
lods
ficomp
shufps
sbb
je
pop
mov
arpl
mov
rcl
sub
js
inc
leave
fld
in
sbb
inc
push
push
test
cmp
call
sub
adc
sbb
sbb
xchg
xor
ss
push
jl
cdq
cmp
and
inc
ja
data16
xor
or
cmp
inc
test
push
clc
jecxz
mov
fldcw
mov
enter
jmp
adc
ret
lods
adc
std
aad
in
jp
les
sahf
mov
fild
cs
jle
movs
pop
ret
sub
inc
pop
jns
sub
jne
jmp
cmps
vrangeps
aaa
push
jne
call
sub
push
sahf
ds
scas
inc
pop
pop
mov
in
sub
add
das
push
dec
sar
xor
shl
push
stos
js
daa
gs
xchg
es
cwde
fidiv
cmp
in
cmp
cmp
std
pop
popa
into
les
xlat
push
mov
xchg
jns
and
adc
aam
punpckhbw
test
(bad)
(bad)
pop
push
es
out
pop
cli
mov
pop
pop
sub
and
sbb
imul
(bad)
out
sub
fistp
lods
mov
je
ins
movs
cdq
(bad)
rcl
jmp
and
and
jge
jmp
div
jg
sub
pop
adc
pushf
(bad)
adc
imul
fist
xor
xor
(bad)
push
inc
push
jbe
bound
das
or
jg
sbb
cdq
sbb
shr
aas
mov
stos
lahf
push
outs
test
jnp
cmp
and
sub
cld
test
sti
jnp
dec
adc
mov
inc
inc
hlt
inc
inc
xchg
shl
jae
imul
dec
sub
xchg
cmp
rol
xchg
popa
sub
push
cmp
cmp
call
into
dec
sub
mov
das
js
fdivr
sub
ss
mov
mov
ins
adc
and
adc
push
mov
sub
test
scas
es
into
mov
xlat
sbb
and
out
ret
(bad)
lea
dec
inc
mov
movs
xchg
inc
jns
mov
data16
test
adc
(bad)
jg
movs
add
xor
pop
sub
mov
or
jp
push
xor
push
add
sub
lods
inc
inc
add
pop
cmp
add
(bad)
retf
jno
ret
test
cmp
inc
test
sahf
dec
(bad)
fst
or
push
test
pop
push
pop
popa
xor
and
cmp
adc
and
shr
in
rcr
xor
cmp
or
cmp
fstp
jne
cmps
jg
loopne
pop
cmps
mov
cli
call
or
and
inc
fist
ins
dec
in
inc
pop
pop
mov
nop
jmp
outs
or
add
daa
call
mov
retf
int3
jp
shl
outs
inc
clc
add
add
stc
mov
dec
xchg
scas
sub
lahf
cmp
cmc
push
sbb
pop
dec
mov
fiadd
mov
add
addr16
pop
rcr
mov
push
shl
jg
push
xor
mov
scas
push
imul
outs
das
pop
mov
(bad)
ja
dec
movs
jl
xor
mov
pop
out
pop
dec
cmp
mov
cmps
retf
ret
inc
icebp
xchg
sub
jnp
add
ss
xor
sbb
adc
jg
sub
add
sub
sbb
xchg
inc
mov
inc
cmp
js
xor
movs
out
adc
dec
mov
cmp
push
and
ins
cmps
cmps
mov
sub
mov
xor
inc
rcl
or
bound
dec
fsubr
mov
jns
daa
sar
pop
jae
outs
pop
or
and
adc
pop
movs
inc
std
je
inc
das
(bad)
ja
pop
inc
shl
mov
mov
cmp
xchg
movs
push
cmps
inc
pop
out
fdivr
xor
jmp
enter
(bad)
(bad)
and
outs
sbb
(bad)
je
es
push
mov
mov
jg
sub
ds
mov
aaa
pop
xor
jbe
fwait
shl
jmp
or
jo
sbb
and
hlt
push
jo
mov
xor
call
je
pop
test
es
jmp
jle
pop
cwde
cmp
daa
fimul
mov
jmp
jg
dec
fcom
outs
shr
push
sbb
in
inc
inc
sbb
popa
push
xchg
daa
mov
ins
mov
movs
jp
fild
jle
mov
outs
loope
cwde
repnz
fs
inc
sub
addr16
outs
mov
jge
sbb
jge
outs
lahf
jmp
inc
sub
(bad)
gs
rol
mov
pop
lock
jne
mov
das
pop
mov
in
cmp
xchg
mov
outs
push
sar
into
js
mov
sbb
cld
test
fld
in
ja
sbb
retf
fwait
out
mov
loope
and
aad
mov
sahf
add
stc
out
shl
test
sbb
jb
and
add
bound
test
scas
sub
nop
daa
jae
cli
mov
mov
or
push
cmp
addr16
push
xor
in
pop
test
jp
xor
repz
test
cwde
mov
mov
mov
push
mov
test
fstp
movs
pop
call
adc
add
mov
lock
ret
cmp
or
outs
sub
mov
daa
mov
xor
cmp
sbb
and
pop
call
jbe
not
std
mov
mov
imul
pop
cmps
pop
jl
pop
pop
(bad)
in
cs
sbb
outs
hlt
mov
call
out
clc
or
in
mov
jmp
fisttp
mov
outs
dec
sub
aad
aad
mov
repnz
imul
cmps
xchg
mov
sub
shl
push
in
mov
mov
mov
adc
pop
mov
outs
shr
jb
popa
aam
ror
sbb
popa
int
jmp
dec
inc
mov
not
out
stc
jle
inc
loopne
mov
xor
icebp
lea
les
enterw
and
bound
mov
adc
fsubp
pop
mov
jo
mov
jecxz
(bad)
loopne
jg
movs
js
fdiv
mov
jge
pop
ins
jmp
sub
sbb
data16
aas
inc
mov
cmp
push
div
sar
push
mov
lea
mov
xchg
xor
int3
nop
call
jmp
in
mov
xor
ja
sbb
leave
loop
das
add
fsubr
xor
xlat
jmp
jmp
in
push
shl
inc
imul
ret
stos
pop
repz
(bad)
sbb
js
sbb
aad
aam
add
mov
jb
sub
aad
push
aas
xchg
mov
jle
fsubr
push
push
push
in
imul
in
cli
jle
call
adc
inc
hlt
lds
push
cwde
je
fist
jno
jge
xchg
pusha
add
jge
add
add
stos
in
outs
jno
sbb
popf
sar
jge
lods
sub
push
mov
fsubr
ins
jl
xor
push
dec
ror
int
stc
mov
sub
leave
mov
popf
cld
or
or
xor
mov
inc
and
jb
imul
cmp
fbstp
mov
add
jbe
mov
xor
repnz
arpl
(bad)
imul
ja
cli
movs
imul
int3
pusha
push
mov
inc
cli
jae
mov
movs
aam
push
test
outs
rcl
xor
(bad)
aad
jp
int
push
ret
imul
dec
pop
loopne
dec
and
cmp
xchg
lods
sub
sub
pop
cmp
pop
addps
inc
jne
cs
push
mov
jmp
jno
dec
imul
enter
ds
movs
add
jb
movs
jmp
nop
das
fcmovnu
ss
dec
push
nop
pop
jge
mov
cmp
mov
mov
add
je
jg
jne
mov
cmp
clc
pushf
push
out
mov
call
mov
sti
cs
and
fwait
pop
std
pop
fwait
and
cmp
lods
pop
push
or
(bad)
jecxz
cmp
jne
test
push
xchg
jmp
cli
jl
icebp
stos
in
or
test
repnz
lea
inc
scas
mov
ss
or
dec
xor
test
jle
adc
mov
inc
out
popf
(bad)
cmp
jnp
fneni(8087
jae
movs
vmovss
add
xchg
adc
out
out
cmp
mov
loop
xor
test
shl
jmp
sub
or
(bad)
int
mov
cmp
sub
and
nop
add
mov
arpl
sub
ja
sub
mov
and
xchg
jg
and
inc
inc
inc
aad
sub
aad
movs
out
out
push
dec
xchg
in
inc
cmp
stc
mov
xor
xchg
out
call
jge
stos
xlat
xchg
call
mov
pop
jbe
push
push
call
sub
jle
mov
cmp
shl
call
loop
fld
adc
dec
(bad)
xor
mov
and
mov
jbe
mov
nop
es
mov
add
pop
push
push
cmp
jns
rcr
stos
inc
inc
sar
inc
mov
adc
xchg
loopne
ja
jg
aaa
data16
lahf
fs
not
sahf
fidivr
adc
movs
repnz
fsubr
retf
aas
sbb
inc
add
xchg
inc
xor
daa
mov
mov
loope
movs
or
dec
lods
sti
cmps
arpl
xor
or
icebp
sbb
adc
jecxz
mov
jmp
cmp
pop
push
add
ins
mov
in
xchg
mov
pop
push
test
movs
jmp
mov
nop
fidiv
std
sub
cmp
fdiv
(bad)
fisub
mov
ror
xchg
aaa
jmp
fucomi
or
cmp
push
(bad)
idiv
mov
mov
aas
fs
loope
and
stos
jmp
jmp
pop
add
enter
mov
cwde
xchg
mov
sahf
jns
inc
sahf
ftst
add
rol
sub
cwde
cld
neg
lods
adc
cs
sbb
cld
repnz
bound
jp
sub
inc
popf
mov
xchg
out
gs
ss
inc
jle
mov
sbb
pop
in
sbb
sub
stos
sub
push
ins
call
pop
(bad)
jo
sub
add
movs
out
jno
or
scas
inc
ficom
adc
bound
mov
jg
xlat
xchg
cmps
idiv
add
pop
pop
test
xchg
inc
jbe
and
mov
push
mov
ss
pop
add
pop
push
popf
mov
jae
sbb
ror
cmps
jle
sub
ret
mov
sub
ret
adc
sbb
stos
sbb
jl
push
pop
pop
(bad)
jmp
add
mov
and
push
nop
shl
bnd
adc
popa
push
dec
pop
mov
add
sbb
push
and
hlt
dec
cs
lods
sub
fst
xor
push
pop
cs
add
inc
sub
mov
dec
sub
pop
push
cli
in
dec
cmp
test
mov
int
pop
out
xor
xor
dec
and
xchg
movs
in
or
shl
cli
pop
mov
mov
fnstsw
push
push
jmp
dec
sar
sbb
std
popaw
sbb
call
adc
inc
mov
jg
(bad)
call
fbstp
add
(bad)
out
xor
or
mov
or
mov
mov
sahf
stc
mov
cmp
dec
nop
xchg
push
push
sti
add
cmp
mov
push
push
clc
pop
call
pop
jmp
int3
mov
popa
sub
fsubr
cs
(bad)
call
and
cmp
sub
xchg
sbb
mov
dec
fistp
je
and
call
ret
mov
lods
scas
pop
or
adc
adc
mov
jo
outs
out
push
mov
mov
xchg
mov
or
jb
add
enter
call
or
imul
sub
scas
sub
cwde
inc
stos
ror
scas
dec
sub
mov
movs
sbb
je
or
aad
mov
push
arpl
mov
in
test
lahf
adc
mov
aaa
sub
sar
dec
sub
mov
out
scas
stos
jns
in
dec
pusha
call
frstor
out
bound
sub
addr16
js
jecxz
in
(bad)
sbb
inc
fiadd
ror
and
cmp
pop
call
nop
jmp
(bad)
fsubr
and
xlat
cmp
add
movs
pop
inc
pop
fwait
mov
cwde
scas
popf
add
leave
loopne
sbb
cwde
sub
pop
push
mov
xor
push
(bad)
xchg
call
sbb
inc
push
sti
jle
or
cli
adc
add
xchg
fs
(bad)
jl
test
(bad)
jbe
pusha
lock
xor
push
adc
mov
xchg
xlat
out
fisttp
xor
sti
xor
xchg
ret
jmp
and
jle
sbb
sub
ins
adc
stc
xor
lods
mov
add
xor
xor
mov
mov
js
or
mov
dec
mov
(bad)
jmp
pop
aaa
jl
ret
and
lahf
push
sbb
in
jbe
mov
pop
jp
cmp
xchg
xor
inc
mov
test
inc
fs
jnp
mov
popa
sar
jp
inc
xor
stos
jge
cmps
add
mov
add
outs
pop
sub
mov
mov
dec
shl
les
adc
dec
in
add
stc
movs
(bad)
or
loopne
aas
pop
dec
(bad)
sub
mov
shl
stc
ror
adc
rol
popf
std
pusha
lods
xchg
sbb
push
cmps
ficomp
sbb
xor
dec
sbb
inc
fsubr
not
inc
mov
ins
and
mov
int3
cmp
pop
bound
adc
test
and
push
mov
sbb
mov
mul
mov
daa
arpl
dec
push
fisubr
leave
pusha
dec
pop
jl
lods
cmp
stos
jo
cmp
addr16
sbb
in
add
rol
bswap
mov
xor
ss
in
cmp
jg
imul
sbb
mov
inc
jo
jbe
gs
das
stos
mov
es
(bad)
retf
addr16
jge
cmps
inc
jmp
hlt
jmp
sub
adc
add
scas
mov
jl
and
pop
(bad)
call
push
inc
jae
bound
push
jbe
jo
fild
scas
sbb
pop
cmps
pop
pushf
test
mov
xchg
lds
dec
jbe
mov
xchg
in
pop
ja
ret
retf
jbe
mov
pop
xchg
jbe
sbb
rol
push
push
push
scas
arpl
aam
mov
(bad)
sub
rcr
or
pop
pop
int3
push
cs
(bad)
shr
or
push
mov
cdq
inc
xchg
fadd
mov
pop
sub
sub
inc
sar
xor
ins
sbb
cmp
rol
pop
rep
mov
call
cmps
aam
mov
pop
mov
cwde
adc
push
cmp
xchg
xchg
cmp
imul
jmp
aad
dec
and
loopne
cmps
xchg
dec
adc
mov
je
out
mov
xor
(bad)
xchg
rol
clc
ss
xlat
mov
das
jmp
popf
push
pop
dec
and
push
add
cwde
adc
jnp
jb
mov
fbld
fild
jae
ja
jno
sub
mov
fild
nop
and
cmp
pop
xchg
cli
dec
(bad)
or
xchg
mov
(bad)
jp
js
xor
push
sbb
add
mov
jle
pushf
jge
or
fist
inc
stos
(bad)
call
ss
scas
xchg
out
sbb
int3
fisub
mov
dec
pop
inc
in
pop
mov
xor
dec
ficomp
cld
mov
cmp
mov
inc
inc
jo
pop
rcr
jnp
dec
xchg
xchg
ret
xchg
imul
into
mov
jecxz
cmps
mov
pop
pusha
push
fs
test
push
les
jl
xor
and
pop
jle
outs
inc
test
loopne
push
hlt
mov
adc
mov
dec
cmp
lock
loop
outs
movs
push
dec
sbb
push
loopne
ss
jle
cmps
push
hlt
mov
jmp
xchg
jle
sbb
adc
lods
jo
jmp
inc
xchg
mov
add
mov
loopne
or
or
sub
std
imul
in
mov
fistp
sub
jnp
inc
hlt
lods
nop
jl
xchg
dec
jmp
ret
idiv
inc
and
loope
and
in
icebp
sbb
jnp
push
add
int3
jle
adc
adc
lea
sbb
push
stos
jp
jo
into
fs
xchg
call
mov
into
stos
jecxz
fwait
loop
rcr
inc
out
nop
xlat
scas
ret
push
ret
pop
mov
inc
cli
jns
jnp
ins
mov
pop
dec
push
shl
test
and
jl
sub
cld
add
add
cmp
mov
cmp
sbb
out
leave
dec
(bad)
push
pop
stos
sub
dec
ins
mov
out
shr
adc
sar
retf
jmp
sub
ret
sbb
dec
jbe
sub
and
(bad)
cld
and
dec
shr
stos
cmps
sbb
stos
aaa
cld
(bad)
mov
lea
sub
int3
inc
inc
and
inc
cmc
push
push
jecxz
xor
mov
int
pop
icebp
adc
mov
fst
pop
arpl
dec
jb
std
pop
aam
inc
ja
hlt
call
mov
mov
dec
test
mov
(bad)
clc
push
hlt
int
aaa
jecxz
retf
ficomp
addr16
test
mov
xchg
repz
add
push
ds
loope
(bad)
mov
mov
stc
es
mov
cmp
mov
or
mov
mov
mov
sti
mov
inc
in
adc
test
cmp
pop
mov
jb
cli
imul
fs
jmp
add
xchg
adc
iret
bound
cmp
or
ret
pop
sub
cmps
xor
sbb
dec
movs
mov
jmp
adc
dec
sub
sbb
cmps
inc
test
cmp
mov
dec
outs
adc
(bad)
mov
popa
test
loopne
push
xchg
cld
enter
(bad)
sub
jno
imul
pop
jle
cmp
push
mov
lea
mov
aad
adc
in
call
xchg
mov
sub
aaa
pop
pop
push
or
(bad)
stc
fmul
outs
inc
loope
scas
sbb
pop
hlt
dec
pop
into
(bad)
outs
pop
sbb
jmp
mov
dec
mov
sti
shl
gs
ja
mov
sbb
in
jnp
sti
stos
sub
inc
add
push
xchg
int3
enter
je
or
pop
daa
jecxz
(bad)
bound
push
mov
push
repz
xchg
mov
mov
and
and
lods
push
stos
mov
mov
dec
add
pop
sub
sub
lds
mov
jns
or
jge
movs
(bad)
push
out
xor
aad
outs
(bad)
pop
dec
or
sub
xchg
adc
push
sbb
movs
mov
push
bound
ss
repnz
test
dec
ss
(bad)
daa
cdq
push
inc
or
cmp
cmp
imul
jp
pop
jne
or
nop
jbe
cmp
or
xor
push
ret
dec
dec
std
fsub
pop
lods
(bad)
ficomp
push
out
push
xor
push
sar
cmp
mov
mov
icebp
cmc
hlt
dec
adc
sbb
aam
push
test
es
sub
jns
xchg
cmp
cwde
xlat
and
push
pop
fs
cmp
pop
sbb
sbb
aam
rol
pop
lea
fsubr
or
push
(bad)
retf
xor
pop
sbb
push
and
push
std
cmp
bound
jmp
mov
icebp
sub
sub
or
(bad)
prefetchwt1
push
imul
jbe
mul
sub
jp
jno
cmp
adc
enter
or
dec
out
aaa
jne
xchg
and
ja
dec
int3
pusha
push
jp
jmp
push
pop
sbb
daa
ret
scas
mov
jbe
and
jl
sub
sbb
ss
scas
lods
dec
(bad)
jmp
fisttp
jns
(bad)
imul
inc
sub
mov
fisttp
and
mov
sbb
hlt
add
in
mov
xor
dec
ja
inc
add
mov
pop
jp
bound
pop
stc
sar
push
cmps
cmps
pop
daa
dec
lods
pop
mov
rol
jge
mov
in
pusha
addr16
jns
fxtract
arpl
dec
sbb
aam
push
sar
es
mov
fsub
mov
adc
xchg
js
sbb
in
jbe
aas
pop
cs
stos
mov
daa
jns
mov
shl
stos
jne
arpl
inc
addr16
repnz
jp
lods
neg
push
nop
out
mov
cwde
jo
sub
mov
sar
aaa
leave
mov
mov
sbb
call
and
inc
mov
sbb
push
mov
mov
ret
inc
and
adc
out
sbb
daa
dec
sub
sbb
and
(bad)
popa
aad
inc
adc
retf
xchg
sbb
pusha
inc
pop
sbb
pusha
(bad)
jl
push
aam
clc
mov
xchg
or
jg
outs
aaa
aam
shr
test
mov
mov
xchg
stos
and
stos
dec
test
ror
ins
add
fdiv
gs
dec
sub
mov
lods
movs
repz
imul
popf
pop
out
sub
stos
daa
and
mov
jp
sub
outs
sub
dec
dec
push
cmp
push
or
out
arpl
push
sub
repz
inc
sahf
sti
fs
sahf
lods
xlat
fucomi
pop
push
nop
test
push
loop
sbb
ds
jno
and
push
xchg
inc
test
jle
push
xchg
das
rcl
cmps
shl
or
into
call
or
ror
dec
sub
out
mov
xor
mov
in
aaa
pop
push
call
or
xor
shl
cli
jns
dec
out
bound
inc
call
into
jns
jbe
inc
addr16
jmp
and
call
push
cmp
cmps
loope
pop
out
mov
mov
shl
mov
cmp
pop
ins
scas
pop
dec
push
xchg
push
cwde
cdq
jne
pop
fdiv
rcl
sbb
push
ss
mov
imul
daa
lds
mov
add
mov
inc
jo
scas
sbb
movs
inc
sub
sub
mov
enter
push
ror
mov
les
mov
gs
mov
jb
push
scas
adc
cmp
cmp
outs
push
or
iret
or
jno
jae
jns
add
dec
imul
out
add
cmps
repz
fs
movs
std
dec
push
aam
and
inc
add
imul
retfw
mov
mov
or
icebp
cmc
ret
sub
mov
add
in
iret
shl
mov
js
push
sub
out
pop
mov
xor
mov
adc
retf
pop
inc
cmp
cmp
retf
outs
lock
mov
dec
adc
stos
mov
cmp
mov
icebp
arpl
sbb
push
les
adc
pop
ficom
or
popa
test
rcr
out
in
les
jmp
imul
fild
aaa
sbb
shl
sub
push
jae
inc
(bad)
test
or
imul
xor
cmp
test
hlt
loopne
imul
addr16
sub
in
sar
(bad)
dec
outs
les
push
repz
xor
xor
sbb
pop
push
retf
push
adc
(bad)
lds
les
cmps
push
mov
daa
(bad)
repz
mov
jno
jmp
jecxz
int
sbb
fst
in
pop
mov
mov
or
adc
call
xor
and
sub
popf
push
push
test
xor
aaa
add
inc
cmp
mov
jl
xchg
fmul
jmp
scas
imul
push
fstp
adc
cli
aad
jnp
arpl
mov
jecxz
mov
mov
jae
pop
sub
pop
xchg
inc
les
jmp
(bad)
jmp
xor
mov
scas
jne
dec
hlt
hlt
cld
hlt
xor
rep
popa
aaa
test
imul
cmp
inc
pop
sar
out
add
stos
cmp
xor
sbb
xchg
or
cmps
xlat
and
sub
mov
xor
shl
and
sbb
les
retf
movs
leave
call
(bad)
mov
out
push
jge
push
iret
out
mov
add
cmp
retf
fsubr
add
add
add
(bad)
or
xlat
sub
jp
addr16
repnz
test
add
sbb
fwait
sbb
hlt
mov
mov
ins
addr16
sub
and
cmps
test
sub
movs
xor
jno
shl
push
push
sub
ret
pop
and
aaa
mov
shl
lods
aaa
pop
aad
jl
pop
inc
ror
call
lds
jne
mov
push
mov
imul
sub
inc
repz
cmc
movs
jbe
mov
jns
fcos
in
cmp
pop
lock
xchg
adc
xchg
and
pop
lds
or
dec
stc
dec
sub
adc
imul
lods
fild
cmp
test
pop
clc
xchg
pop
out
add
cmp
outs
sub
stos
out
mov
cwde
push
cmp
push
aaa
imul
and
mov
(bad)
jns
call
jae
fistp
clc
push
mov
push
in
cld
dec
pop
dec
fsubr
stos
push
xchg
stos
sbb
imul
mov
arpl
adc
cmc
mov
cli
cmc
inc
mov
inc
cmp
inc
clc
cld
ins
cs
push
xchg
jmp
idiv
fsubr
mov
je
push
sti
jbe
dec
ja
or
clc
inc
sbb
aaa
mov
xchg
push
fidiv
cmps
push
inc
inc
inc
fs
jmp
sbb
popf
xor
and
and
cmp
xor
pop
fsubr
adc
popa
pop
ss
gs
movs
cmc
outs
xchg
gs
sub
fadd
push
mov
or
hlt
sub
mov
aad
cmp
imul
adc
or
xchg
inc
int3
cmp
xlat
jmp
jg
je
jb
cmp
sbb
lods
fnstsw
pop
ret
or
cwde
add
gs
and
int3
xor
divps
aad
sub
inc
xor
mov
sub
xchg
mov
lea
gs
xor
js
iret
adc
mov
dec
popa
sbb
pop
retf
add
push
xchg
adc
out
push
(bad)
pop
pop
inc
push
mov
dec
popa
adc
outs
out
push
sbb
dec
and
in
dec
pop
idiv
jecxz
mov
in
mov
or
cmp
mov
sub
cs
xchg
dec
sbb
ret
or
mov
pop
repnz
xchg
shl
stos
push
call
mov
pop
in
lds
daa
push
test
push
mov
pop
outs
mov
dec
std
jbe
push
xor
dec
test
je
sbb
inc
dec
lahf
mov
push
lds
jmp
xor
jl
sub
mov
dec
or
or
jae
clc
nop
out
enter
pop
cmp
inc
add
push
loope
mov
push
sub
pop
xchg
sbb
xor
and
cmp
arpl
aad
dec
mov
ret
mov
mov
pop
popa
sub
popf
dec
repnz
jp
push
dec
dec
hlt
pusha
push
cmp
and
and
ret
gs
loope
ror
outs
push
jnp
sti
push
mov
iret
jmp
inc
mov
loopne
rol
sbb
ins
push
and
(bad)
aad
mov
aad
les
push
adc
dec
mov
xor
(bad)
ds
dec
ins
lock
or
add
cs
std
inc
mov
in
cmps
cmps
mov
inc
sub
in
clc
add
push
cmp
jmp
push
xchg
aad
mov
fistp
push
push
sub
in
test
pop
xchg
jno
inc
movs
push
scas
out
cmc
sbb
push
xor
push
sub
mov
loope
gs
adc
cmp
ds
bound
jp
jp
and
pop
into
imul
rcl
(bad)
dec
xlat
cmp
icebp
mov
pop
mov
push
into
retf
xchg
mov
mov
cmp
dec
add
mov
jne
sbb
inc
mov
dec
mov
(bad)
rol
stos
lds
js
push
fbld
xlat
icebp
jmp
inc
cmp
fst
cs
mov
bound
fist
cmp
pushf
pop
nop
clc
mov
(bad)
loope
ins
(bad)
fistp
repz
jno
push
loop
clc
adc
retf
push
push
pop
push
jns
pop
and
ss
pop
stc
aam
pop
xchg
sub
sub
out
loopne
pop
jns
sub
dec
cli
aam
dec
mov
mov
push
lods
pop
(bad)
adc
xchg
into
dec
jns
sub
push
retf
(bad)
and
lea
loopne
lods
leave
mov
jo
xchg
sub
add
dec
inc
outs
cmps
hlt
cmp
mov
push
cwde
fidiv
xor
cmp
xchg
sub
pop
inc
call
mov
lock
jbe
jnp
mov
rcl
add
popf
dec
inc
idiv
fidiv
jbe
in
cmp
and
pop
mov
cdq
jbe
in
stc
adc
call
test
or
aas
imul
(bad)
xchg
sbb
call
cmp
jo
rcl
push
push
fwait
arpl
jg
mov
sub
push
imul
adc
push
dec
jbe
dec
shl
ja
push
jnp
repz
dec
cwde
mov
inc
ret
push
(bad)
adc
cmps
or
out
bound
jmp
cmp
xor
nop
inc
lahf
stos
in
push
lahf
outs
xchg
enter
mov
gs
adc
sub
loope
leave
lods
cwde
inc
lds
adc
xchg
loope
call
cmp
adc
das
lods
or
adc
fadd
les
xlat
sbb
mov
cmps
mov
push
pop
daa
jmp
inc
scas
out
dec
retf
push
(bad)
jge
daa
daa
cmp
js
jmp
in
test
lahf
pop
jbe
sbb
dec
dec
fild
push
shl
outs
sub
popa
cmps
mov
inc
push
sub
fs
jne
mov
popf
repz
(bad)
sahf
adc
mov
(bad)
cli
lds
rcl
adc
mov
fst
es
pushf
xchg
retf
xchg
push
aaa
cwde
cmp
inc
ret
test
cmps
and
mov
and
or
pop
pop
shl
xor
ret
icebp
cmp
or
add
push
jp
adc
jo
adc
jmp
dec
movs
lds
adc
popf
es
push
adc
xor
loope
push
push
pop
jno
mov
dec
inc
cwde
arpl
mov
cmps
shr
sub
les
test
lock
fsub
imul
jns
inc
sbb
scas
icebp
mov
xor
push
mov
mov
push
icebp
pop
xor
adc
cmps
adc
clc
or
or
or
cmp
sahf
fldcw
dec
adc
pop
js
out
inc
mov
cmp
in
int
xor
popf
cmp
push
mov
mov
fisub
adc
inc
aaa
iret
mov
xor
cmp
adc
ds
icebp
call
cs
xor
mov
xor
inc
stc
or
test
push
mov
or
test
add
and
add
cmp
scas
mov
pushf
and
add
clc
mov
jg
(bad)
sbb
mov
xor
data16
mov
cdq
daa
mov
(bad)
cmp
pushf
dec
das
mov
xor
repnz
rcr
mov
mov
in
cs
sub
jp
cli
push
outs
jae
fdiv
dec
rcl
ins
jl
dec
in
ja
icebp
xchg
jne
jne
pop
fsubr
int
cmp
cmc
lock
adc
dec
outs
add
xor
inc
xchg
(bad)
add
dec
mov
fistp
fs
push
in
sub
sub
mov
mov
push
imul
jno
out
(bad)
(bad)
int
sub
mov
shl
cli
push
fst
popa
push
js
fcmovnu
icebp
inc
sbb
or
mov
adc
or
movs
xchg
fidiv
inc
mov
or
xor
pop
and
and
cmp
push
inc
mov
outs
jg
icebp
jmp
jecxz
inc
shr
(bad)
cmps
xor
jp
add
inc
iret
pop
daa
pop
fisub
inc
push
iret
mov
dec
jg
add
or
sbb
(bad)
or
jmp
call
pop
popa
outs
dec
push
icebp
sub
popa
aaa
js
jne
mov
aaa
ret
pop
ins
movs
mov
jae
pop
shr
je
mov
jg
jg
lock
imul
movs
aaa
aaa
in
push
xchg
les
push
out
test
add
push
hlt
icebp
stos
jmp
xchg
outs
adc
or
mov
pop
out
rcr
jg
push
pop
dec
arpl
pop
cli
and
jl
popa
data16
ins
push
pop
(bad)
dec
call
retf
mov
jl
les
jmp
xchg
ss
into
dec
mov
ins
or
nop
mov
push
jle
sbb
sbb
inc
xchg
stos
dec
std
mov
js
sahf
xchg
shr
sub
out
sub
adc
xchg
add
pop
mov
push
aas
and
popa
inc
mov
int3
(bad)
call
cmp
jle
sub
xchg
inc
jb
loopne
dec
loopne
imul
dec
xchg
imul
mov
je
jg
(bad)
outs
pop
out
xor
retf
rol
sub
add
dec
jmp
das
popf
jmp
adc
push
ss
or
addps
pop
in
cmp
pop
add
sbb
jb
outs
mov
(bad)
push
dec
xchg
sub
js
add
pop
mov
sbb
push
out
jle
jns
fidivr
dec
imul
mov
sbb
xor
push
xchg
push
sahf
mov
mov
ja
inc
add
call
mov
jl
jmp
pop
outs
data16
cs
jbe
pop
in
or
pop
inc
push
mov
scas
add
rcr
adc
pop
mul
add
into
cmps
loope
gs
mov
retf
xor
sub
inc
arpl
inc
(bad)
ins
ror
cmps
std
inc
ins
xor
mov
es
push
popa
cdq
repz
enter
jbe
mov
jnp
inc
ss
fnstsw
aas
or
jo
movs
loope
dec
xchg
adc
sbb
add
xor
int3
icebp
pop
repz
loopne
les
cdq
pop
das
daa
call
sbb
jne
addr16
fiadd
xchg
rol
xchg
icebp
xor
xor
cmc
jnp
sub
das
push
push
clc
push
mov
imul
in
and
inc
aam
pop
neg
xchg
inc
dec
pop
pop
(bad)
jae
or
es
jnp
or
pop
movs
idiv
add
out
cmp
jp
sbb
shl
sbb
pop
xchg
fistp
pop
pop
test
sbb
dec
mov
enter
shl
in
pop
mov
fst
push
in
js
ss
stc
xor
xchg
lods
cwde
pop
jo
xor
nop
popa
mov
pop
repz
pushf
jmp
jns
xor
sti
mov
jl
mov
dec
je
ins
fsubr
scas
lock
in
xor
scas
mov
sbb
cld
mov
aas
mov
nop
or
dec
lea
or
addr16
mov
adc
das
inc
outs
in
lea
and
pusha
aad
div
dec
jno
ficom
(bad)
repnz
jle
es
or
lods
cmc
sub
push
sbb
xchg
mov
adc
iret
arpl
mov
out
mov
add
movs
cmp
bound
test
sub
xchg
loope
dec
aad
mov
add
shl
sub
mov
pop
pop
cmp
repnz
mov
dec
(bad)
mov
retf
mov
inc
cs
pop
in
xchg
sub
xor
lods
mov
shl
jge
xchg
loopne
sub
out
lock
hlt
ds
int3
(bad)
jge
jnp
scas
out
mov
jmp
xor
pusha
xor
in
stos
dec
test
jge
ins
adc
les
repnz
push
mov
inc
push
mov
scas
pop
cmc
pop
sub
sbb
fsqrt
pop
pop
push
cmps
mov
and
in
mov
ficom
jmp
adc
push
cld
cwde
aas
xor
std
(bad)
fwait
(bad)
jnp
or
add
fsub
imul
rol
jmp
aad
inc
jmp
mov
jmp
cmp
shld
(bad)
outs
mov
rcr
jb
jecxz
jbe
data16
sbb
dec
stos
push
mov
std
push
stos
call
bound
inc
cli
out
push
push
fucom
pop
jge
retf
sub
outs
nop
rcl
cdq
jl
xor
mov
add
sbb
xor
add
lds
dec
sbb
mov
xor
push
inc
ficomp
int3
and
push
lods
pop
mov
cld
icebp
scas
jg
push
fsubr
out
dec
sbb
(bad)
mov
mov
cwde
dec
movs
in
jl
push
ja
and
lahf
imul
cmc
out
cdq
icebp
call
cmp
pop
add
push
cdq
lock
arpl
cli
inc
js
call
cwde
and
sti
aaa
les
push
movq
cmp
and
jnp
push
loopne
xchg
fs
mov
dec
rcr
mov
pop
pop
pop
in
adc
dec
ds
push
pop
imul
mov
call
clc
xlat
pop
pop
das
aas
das
jbe
xchg
adc
ins
popa
fcmovne
xchg
add
hlt
(bad)
loopne
cmp
call
cmc
cmp
jbe
mov
sahf
pop
dec
or
dec
in
mov
mul
mov
mov
or
xor
inc
dec
pop
cmp
add
and
jns
dec
inc
xchg
adc
jp
cmps
imul
mov
dec
xchg
out
dec
push
jns
sub
jb
inc
mov
popa
push
push
pushf
fst
dec
or
adc
push
xor
repz
sti
mov
push
fcmovnu
dec
fucomp
aaa
call
imul
fadd
push
jo
inc
stos
dec
mov
aam
push
not
jb
push
call
fild
dec
in
sbb
shl
ror
add
xchg
cmp
add
pop
mov
mov
pop
retf
and
outs
pop
push
mov
call
hlt
mov
ins
sub
jmp
mov
xchg
lds
mov
rol
xchg
sbb
dec
cmp
jmp
test
and
jge
mov
mov
mov
xchg
ins
inc
nop
and
xor
xor
(bad)
mov
hlt
add
jmp
pop
mov
ror
inc
or
movs
and
int3
xor
dec
in
mov
adc
sahf
dec
mov
mov
cli
in
arpl
es
mov
adc
xchg
in
mov
int3
lods
push
add
cwde
data16
xor
push
add
adc
call
jne
mov
sub
and
and
ret
mov
or
jle
inc
sub
test
(bad)
bound
jae
inc
jmp
jge
lods
mov
push
sbb
xor
je
into
adc
stos
test
adc
cmp
pop
add
outs
repz
ret
cmp
imul
xchg
sbb
mov
std
mov
xor
(bad)
mov
fs
in
dec
mov
jg
fwait
or
mov
add
mul
xchg
cmp
ss
jb
xchg
mov
mov
pop
mov
inc
test
fs
dec
add
lock
shr
in
rcl
cdq
jb
dec
inc
sar
jnp
aaa
into
xchg
inc
cs
add
and
inc
ins
ja
(bad)
scas
in
push
cmp
sbb
cmp
inc
jge
jmp
jo
jmp
jecxz
jmp
inc
mov
enter
mov
fsub
out
pop
and
lods
in
xor
pushw
sti
dec
xor
mov
hlt
imul
adc
push
ror
and
repnz
int3
add
jb
inc
push
je
cmp
push
push
pop
and
push
daa
sbb
imul
mov
into
fld
push
in
ds
js
dec
fstp
pop
call
mov
add
dec
adc
shr
ss
(bad)
les
jno
lds
dec
push
and
inc
gs
push
lods
mov
jno
out
xchg
cmp
cld
jne
int3
push
adc
mov
aad
mov
dec
xchg
adc
std
das
xchg
xor
dec
xchg
(bad)
jecxz
out
fist
cli
das
mov
adc
cld
push
jmp
adc
popa
adc
add
enter
sar
clc
out
and
repz
xor
mov
xor
(bad)
jge
push
ret
add
xor
add
loope
scas
cmc
cmps
push
sub
iret
pop
(bad)
xchg
or
call
je
xchg
mov
std
dec
imul
xchg
push
ds
xor
push
dec
xor
mov
or
jge
mov
add
sbb
jle
jne
in
movs
push
scas
dec
mov
dec
dec
cmp
inc
int3
mov
push
sar
arpl
scas
call
les
mov
movs
inc
scas
ins
pop
dec
xchg
cmp
stos
mov
inc
in
cmps
jmp
sbb
xchg
enter
mov
js
aaa
test
jb
cs
dec
outs
push
shr
inc
xchg
pop
popa
frstor
in
mov
mov
push
dec
inc
out
inc
imul
shl
popf
pop
call
sub
push
pop
mov
push
or
ss
dec
and
cmps
pop
fdiv
mov
xchg
add
jbe
arpl
add
ins
loope
fbstp
daa
cmp
cmp
mov
(bad)
lds
pop
test
bound
fdivr
addr16
inc
ret
stc
cmp
mov
pop
inc
and
add
adc
pop
dec
xchg
xor
repnz
inc
in
stc
inc
leave
cmp
out
push
popf
and
jmp
je
(bad)
repnz
out
dec
add
push
push
jae
jge
and
cmc
inc
and
jb
push
dec
mov
mov
icebp
out
movs
adc
inc
and
xlat
push
je
cvtps2pd
in
iret
(bad)
mov
cdq
xchg
mov
in
cwde
inc
sub
add
mov
lea
and
pop
callw
lods
fdivr
inc
in
jb
mov
sti
pop
dec
fmul
push
inc
mov
jmp
lods
mov
test
inc
loopne
cmp
inc
jbe
fidiv
inc
mov
jns
sub
imul
jo
shl
cmps
dec
mov
mov
int
xchg
fwait
pushf
aam
icebp
add
cld
cli
stos
jno
cmp
push
jmp
inc
xor
movs
lock
push
mov
pushf
adc
div
adc
pop
mov
imul
bound
out
and
dec
pop
repz
sub
and
clc
xchg
mov
mov
sbb
mov
ret
pop
jmp
nop
nop
loop
mov
dec
ret
outs
in
(bad)
shr
imul
mov
push
(bad)
fidiv
adc
mov
pop
adc
mov
mov
mov
rcl
cmp
xchg
jns
xlat
adc
cmp
test
and
mov
cwde
add
or
test
mov
ret
mov
or
sub
fiadd
inc
popf
cmp
nop
not
xchg
cld
test
xchg
and
loopne
pop
xchg
ja
adc
loope
shr
pop
gs
inc
mov
outs
cld
xchg
jmp
lock
inc
cmp
or
pop
inc
pusha
push
or
les
mov
ins
and
lock
or
bt
(bad)
out
sub
daa
jno
mov
mov
ret
jb
xchg
mov
inc
pop
popf
lods
pushf
mov
bnd
in
(bad)
jge
jg
cld
dec
adc
push
sbb
iret
pop
inc
stos
mov
push
aaa
out
in
adc
cmp
cmps
sub
or
adc
outs
inc
in
push
sbb
leave
movs
sbb
clc
arpl
call
sbb
xchg
outs
sbb
js
jmp
inc
(bad)
mov
les
push
ret
push
pop
mov
les
pop
mov
rcr
(bad)
dec
mov
pusha
xor
call
data16
mov
push
add
dec
aaa
in
pushf
nop
pop
fidivr
cmp
enter
bound
push
(bad)
push
add
cmp
gs
push
add
dec
or
inc
jno
in
cmp
test
ss
adc
loopne
jge
adc
adc
aad
sub
jno
lock
ret
jecxz
jg
mov
fmul
call
cmc
or
retf
pop
push
mov
or
jle
jno
data16
ja
and
iret
lock
xor
inc
cmp
pushf
in
xor
dec
push
ss
add
lds
and
daa
xor
sub
test
jecxz
in
cmps
rcl
or
test
and
call
xchg
in
push
jae
xchg
ficomp
cmp
jl
rol
adc
lock
sbb
stos
xchg
mov
mov
(bad)
push
mov
(bad)
aam
mov
dec
popf
mov
pop
dec
adc
mov
mov
jno
dec
ror
sbb
push
dec
nop
jo
lahf
and
jns
rol
pop
mov
mov
jno
in
outs
mov
inc
inc
popf
sub
fld
cwde
sbb
add
std
pop
cmp
cmp
popf
sbb
inc
mov
add
cmp
inc
and
cdq
push
sub
lods
hlt
in
pop
inc
push
in
ret
aad
mov
sahf
movs
adc
jl
(bad)
mov
and
inc
pmaxub
fbld
mov
sbb
mov
and
xchg
and
push
jge
push
test
add
popa
push
retf
add
imul
cdq
fdivr
scas
adc
pop
push
popa
push
retf
xor
jmp
and
je
add
add
cmp
jae
cmp
adc
inc
dec
add
dec
or
jecxz
jle
popa
imul
pop
jo
sub
dec
ins
in
in
and
out
adc
inc
movs
and
inc
repz
test
mov
add
mov
xor
pop
mov
jns
leave
arpl
scas
jns
add
inc
stos
or
aas
cmp
jmp
push
and
xchg
cmc
push
aaa
push
(bad)
nop
inc
push
iret
jl
mov
loope
push
adc
and
xchg
shr
sbb
cmp
push
pop
test
test
mov
dec
mov
fcom
cmps
sbb
out
cmp
cmp
ja
retf
push
mov
leave
(bad)
aam
cmp
push
repnz
xchg
fwait
add
push
sub
xor
push
or
sbb
lock
jmp
(bad)
xor
daa
and
fsubr
ror
cwde
and
push
mov
cmp
add
ja
push
push
fisub
push
push
mov
test
mov
jnp
xchg
bound
sub
(bad)
loopne
adc
xchg
fxsave
cli
sub
dec
sti
adc
int
movs
nop
fld
das
xor
and
xchg
cmp
add
cmp
mov
xchg
xchg
add
leave
leave
pop
iret
jnp
push
jno
sar
cmovl
sub
sbb
leave
sahf
movs
add
pushf
add
stos
xor
cmps
movs
das
sbb
push
xor
fsubr
call
adc
cmps
fbstp
retf
sbb
xchg
push
cmp
sub
out
jle
inc
adc
fimul
cmp
jmp
cmp
adc
or
(bad)
shl
ja
adc
mov
in
cmps
in
call
or
pop
(bad)
stc
ret
lods
pop
jge
(bad)
es
xchg
out
jmp
std
jmp
inc
or
fdivr
ja
add
push
lea
mov
nop
push
or
adc
xor
sbb
lods
jmp
arpl
pop
inc
sbb
push
stos
lds
mov
push
and
je
ret
inc
cmc
jno
stc
lods
repnz
or
(bad)
jo
inc
dec
push
mov
jno
add
mov
aaa
jbe
adc
inc
les
xor
fbstp
(bad)
push
jg
sbb
jmp
push
gs
push
mov
data16
bound
cs
pop
gs
push
test
mov
push
test
lods
cwde
pop
les
pusha
(bad)
fidiv
rcl
es
(bad)
(bad)
push
mov
jmp
cli
jo
addr16
and
je
mov
mov
je
icebp
sub
dec
jbe
ss
dec
pop
dec
jmp
std
cli
and
dec
aaa
dec
test
cmp
call
jne
push
inc
pop
ret
sar
ror
idiv
xchg
xor
sahf
and
mov
arpl
daa
adc
ror
fwait
aaa
clc
push
push
xor
(bad)
pop
inc
sar
jle
push
sub
ffreep
stc
test
mov
repnz
push
test
les
inc
pop
mov
bound
cwde
mov
xor
(bad)
mov
jb
cmp
jb
mov
out
pop
inc
mov
add
cld
rol
add
shl
cmp
mov
mov
daa
fmul
or
pop
adc
pop
cmp
icebp
dec
cmp
inc
jecxz
sub
xchg
add
inc
mov
movs
jmp
add
test
push
push
dec
cdq
cmp
xlat
add
sbb
aad
ja
push
out
cmp
add
cmc
in
add
sahf
inc
xchg
out
ins
jnp
add
popf
sub
cwde
in
jmp
xlat
jno
sub
ss
cmps
and
outs
jg
pusha
imul
in
ficom
ret
jno
fimul
jle
jp
push
mov
and
cmp
inc
aaa
lods
jmp
push
loopne
mov
or
inc
xor
mov
ret
mov
cli
ss
out
mov
push
xor
test
dec
pusha
inc
repnz
mov
in
or
jmp
dec
or
pop
dec
jbe
scas
sbb
mov
inc
iret
mov
mov
data16
push
nop
aad
cs
test
fincstp
xor
in
add
mov
gs
les
or
cmp
and
(bad)
fldcw
add
sahf
pop
inc
push
aaa
pop
cmc
push
or
mov
or
jmp
(bad)
jne
xchg
inc
pop
jecxz
or
(bad)
(bad)
ss
js
in
outs
inc
or
inc
dec
inc
dec
add
loopne
(bad)
js
hlt
pop
cmp
aaa
jnp
cs
cmp
sti
jle
xor
ja
xchg
movs
mov
in
lods
lods
ins
idiv
cwde
mov
xor
int
in
push
or
push
xor
arpl
stos
or
inc
push
rcr
push
mul
and
dec
jno
stos
call
adc
inc
shl
loopne
addr16
and
call
in
imul
dec
xchg
pop
jmp
xchg
jbe
mov
icebp
add
repz
and
jmp
int
pusha
stos
mov
xlat
fldenv
cmps
push
out
and
cdq
adc
ret
ret
adc
cmp
add
ret
mov
mov
jecxz
(bad)
mov
cdq
(bad)
leave
out
out
sub
pop
fst
mov
add
jmp
shl
sub
lahf
pop
loope
pushf
pop
sbb
pop
das
ret
jno
push
lods
aaa
(bad)
cld
stc
lods
xchg
mov
outs
dec
push
(bad)
jmp
stos
xchg
sub
(bad)
es
or
fs
pop
mov
xor
or
into
inc
das
mov
pop
mov
pop
mov
call
cmp
inc
lods
int
adc
ror
jle
or
push
ds
push
in
mov
sbb
sar
repz
jmp
dec
cmc
test
push
sbb
xor
and
cwde
pusha
movs
shl
jnp
imul
push
mov
cld
pusha
leave
int3
dec
push
cmp
pop
adc
sub
in
call
push
push
xor
popf
add
xchg
bound
push
ret
mov
and
sbb
mov
mul
in
jge
adc
je
stos
(bad)
mov
sub
(bad)
jns
xor
mov
xor
sbb
dec
das
inc
pop
pop
inc
mov
jg
push
jp
xor
cmps
lock
mov
cmp
das
or
sub
cli
lods
in
sbb
mov
xlat
push
mov
push
pushf
add
inc
xchg
test
or
aam
js
sbb
xchg
stos
gs
push
cmp
inc
ffree
mov
or
jmp
loop
sub
mov
shl
jnp
(bad)
jns
and
fwait
sbb
push
or
ins
sub
cs
sbb
outs
sub
out
and
jle
push
cmc
cmp
mov
adc
(bad)
es
jno
or
jns
aad
stos
jo
jmp
jp
jle
adc
cmp
clc
sbb
sub
int3
call
inc
addr16
pop
inc
mov
sbb
add
pusha
ins
mov
jo
or
adc
mov
dec
fmul
mul
lods
jb
or
pop
cmp
jp
mov
mov
es
aas
outs
mov
lods
fdivr
(bad)
jge
pop
sti
retf
in
addr16
popf
cmp
pop
sbb
movs
cdq
std
cmp
cmps
add
hlt
inc
xchg
mov
sti
cmp
or
cmc
shl
mov
or
cld
fadd
movsx
int
xor
sbb
dec
sbb
fwait
or
scas
addr16
outs
fld
nop
ins
add
dec
repnz
js
sub
into
out
ss
iret
jns
imul
jno
and
pop
mov
jg
les
pop
out
xchg
sub
add
leave
jmp
in
sbb
mov
pushf
dec
aaa
dec
pop
loop
cmp
xor
dec
add
dec
movs
sub
out
jne
jno
fs
jo
mov
dec
jl
test
push
lock
push
in
cli
add
adc
out
movs
out
out
xor
test
addr16
dec
mov
xchg
jno
mov
adc
pop
jne
ror
push
cmp
xor
sbb
xor
lods
popa
cmp
ret
dec
push
ret
std
ret
xchg
pop
or
xor
sub
xor
xchg
mov
jp
sbb
cdq
jns
imul
out
jae
jle
mov
(bad)
icebp
xchg
mov
pop
xor
addr16
stos
dec
cs
(bad)
clc
sbb
lods
pop
ins
inc
cdq
or
or
xor
(bad)
mov
jle
test
or
xor
mov
mov
fild
and
push
jne
sub
jmp
inc
mov
push
inc
pop
or
loope
add
cmp
xor
shl
gs
mov
fcmovbe
(bad)
loop
aaa
cmp
add
pop
ja
ds
test
push
jnp
shr
js
rcr
jb
pop
push
xchg
pop
mov
imul
push
je
call
sbb
jne
pop
or
lahf
fldenv
jle
je
lods
stos
push
xor
ja
push
pop
data16
push
jae
jbe
dec
and
mov
inc
pop
mov
inc
push
repnz
sahf
mov
scas
pop
sbb
mov
aam
push
dec
loope
addr16
jg
jp
dec
push
jns
cmp
jno
sahf
leave
jl
aam
enter
cmp
sbb
mov
in
xor
test
add
dec
cld
pushf
stos
push
mov
jns
and
cmp
in
add
stos
(bad)
xor
sub
mov
sub
rcl
fs
hlt
xor
lahf
inc
aad
pop
retf
arpl
xor
loop
ds
jge
sbb
mov
and
mul
inc
test
fcomp
data16
push
xchg
pop
jge
rol
jl
addr16
mov
in
xchg
rcr
sub
loop
je
arpl
xchg
sbb
cmp
pusha
ret
je
mov
shl
pop
stos
xchg
adc
mov
inc
push
pop
sub
repz
mov
das
aad
add
mov
sbb
mov
pusha
and
mov
into
cmp
call
pusha
popf
and
mov
rcl
ds
sub
in
fs
mov
dec
pop
sub
push
push
test
daa
cdq
addr16
and
jl
mov
ins
push
cmp
add
push
rcl
data16
and
cmc
xchg
es
arpl
mov
push
push
mov
push
jae
add
outs
aas
ror
add
clc
or
retf
sbb
ja
add
aad
jle
add
in
and
add
sub
in
pop
idiv
mov
outs
in
sbb
jae
ins
je
mov
pop
test
inc
mov
imul
and
adc
xor
maskmovq
idiv
jmp
push
adc
add
test
pop
mov
push
shl
adc
push
xor
sbb
inc
push
arpl
xor
or
pop
cmp
push
scas
mov
aas
push
mov
pop
daa
pop
out
and
dec
sbb
inc
push
sbb
mov
pop
push
into
inc
pusha
pop
jb
lods
je
jns
dec
mov
dec
adc
sub
stos
adc
jecxz
mov
enter
sbb
cwde
lahf
or
jmp
xor
dec
cmc
inc
add
jno
fcom
jl
adc
adc
adc
xor
(bad)
push
push
daa
inc
sub
mov
pop
jo
jl
daa
jmp
fisub
in
aad
addr16
js
push
das
inc
mov
lea
cmp
rcl
sahf
pop
jb
pushf
(bad)
push
jmp
fcomp
leave
loopne
sbb
jl
pop
movs
bswap
sbb
out
jmp
ins
pop
retf
dec
out
push
nop
repz
out
jmp
dec
jno
push
xchg
(bad)
sti
mov
jo
sbb
outs
inc
sar
loope
call
jge
fstp
xchg
xchg
(bad)
(bad)
jp
ins
fs
inc
lods
mov
mov
std
add
push
retf
jnp
jbe
data16
mov
daa
and
retf
inc
add
std
or
shl
lea
aam
mov
sbb
inc
cmc
mov
xor
shl
jne
xchg
or
cmps
enter
jmp
retf
cmc
sbb
je
push
add
inc
and
(bad)
jp
loope
xchg
jo
cdq
cmp
dec
and
mov
daa
ds
lahf
jns
pop
xchg
mov
sub
xchg
imul
xor
test
ss
mov
push
pop
xchg
das
gs
in
mov
bound
aam
(bad)
sbb
jge
ss
fld
mov
xlat
loope
aam
ins
stos
out
leave
xor
dec
add
sar
cmps
pop
outs
test
adc
cmps
lods
repz
int3
sbb
in
push
push
popa
pop
daa
pop
dec
cmp
out
sub
mov
cdq
mov
xchg
and
xor
shl
mov
dec
jg
retf
add
dec
mov
mov
mov
es
inc
jecxz
jle
imul
ins
adc
in
sub
cmp
das
and
add
dec
push
xchg
fs
test
mov
sub
adc
aas
pop
cs
mov
test
mov
jae
lea
lods
cli
lds
(bad)
push
dec
popa
fnstsw
pop
(bad)
cmp
push
pop
retf
or
cli
jns
mov
xor
push
cld
pop
push
daa
jne
or
adc
fs
mov
cmps
jb
fst
pop
or
jmp
mov
mov
leave
push
push
mov
js
out
(bad)
iret
add
jno
mov
xor
mov
inc
and
cmc
jmp
bound
fld
xor
sub
push
scas
xor
icebp
mov
repz
fbld
mov
mov
ins
mov
and
or
cmps
dec
xor
pusha
and
add
mov
inc
push
inc
mov
adc
pop
add
jns
or
dec
xchg
outs
push
scas
mov
or
push
sahf
jg
inc
scas
sbb
outs
and
dec
cli
adc
or
add
xchg
adc
xchg
pushf
into
sub
xor
es
out
pop
daa
(bad)
dec
aad
cmp
and
idiv
pop
mov
std
mov
ss
iret
pop
ins
mov
sub
jb
retf
sub
fidivr
in
dec
push
mov
mov
test
cli
(bad)
js
mov
dec
dec
pop
push
pop
push
loopne
mov
xor
ss
bswap
test
pop
stos
ss
fcom
(bad)
sub
das
sub
sub
int
xchg
jae
mov
push
inc
scas
fnstsw
in
popa
mov
inc
inc
in
in
out
push
push
dec
and
data16
dec
mov
dec
or
outs
fldcw
push
push
xchg
cdq
jg
pusha
(bad)
xor
jmp
or
retf
xor
pop
out
adc
imul
out
xor
adc
hlt
xor
mov
clc
shl
sbb
enter
dec
(bad)
stc
xchg
pop
sub
std
adc
loop
lea
add
push
sbb
sub
stc
push
test
pop
test
cmps
popa
imul
lea
sub
pop
adc
or
mov
dec
imul
fmul
shl
aam
push
ret
mov
jg
dec
add
dec
and
icebp
inc
jl
addr16
stc
(bad)
aam
mov
(bad)
push
imul
xchg
sbb
inc
pushf
mov
jge
stos
dec
ins
dec
pushf
inc
shl
jmp
add
jge
push
lahf
cmp
push
mov
push
pusha
jnp
sbb
sub
aam
jmp
adc
fs
out
loop
call
jmp
ja
sbb
xor
or
xor
xor
pop
xor
mov
js
test
mov
xor
push
pop
out
and
jmp
out
mov
inc
test
mov
mov
and
push
mov
test
daa
xchg
movs
push
iret
(bad)
in
mov
push
nop
(bad)
dec
cld
inc
ret
or
inc
outs
add
mov
mov
add
sub
mov
push
cmp
out
adc
push
data16
or
nop
ror
popf
idiv
jnp
adc
(bad)
(bad)
sti
arpl
mov
data16
mov
mov
cmp
movd
lods
or
mov
pop
fdivr
in
movs
xchg
stos
push
imul
lods
sbb
sti
xchg
cmp
xchg
mov
mov
js
and
dec
pop
or
fisub
mov
mov
xchg
shl
fsin
or
or
push
xchg
jmp
mov
test
cmp
leave
lahf
rol
iret
dec
addr16
and
push
call
clc
gs
into
loop
cmp
cmp
mov
pop
push
and
loopne
mov
aam
cmps
rcr
jb
in
and
cmp
pop
and
hlt
cmps
jne
es
xchg
repz
(bad)
pop
pop
mov
mov
loopne
pop
sub
push
mov
clc
mov
cwde
out
out
and
pop
mov
outs
adc
fisub
fisttp
cld
adc
cdq
jns
into
add
stc
dec
pop
add
mov
jecxz
ret
jne
arpl
mov
mov
jns
sub
sti
lods
psrlw
or
mov
xor
jno
ins
fxtract
dec
jecxz
add
(bad)
mov
shl
je
or
movs
pusha
outs
inc
sub
xchg
loop
bound
pop
cs
dec
test
inc
add
(bad)
jmp
or
fisubr
jo
pushf
hlt
pop
popa
add
mov
(bad)
xchg
cmp
pop
in
stos
(bad)
pusha
in
(bad)
test
pop
out
arpl
imul
jge
sub
pop
sbb
inc
mov
cmps
js
xchg
movs
mov
mov
xor
mov
fadd
adc
ret
jmp
mov
vpshufd
or
out
push
clc
mov
nop
mov
or
mov
fmul
jmp
jmp
dec
mov
push
leave
into
and
mov
xchg
dec
inc
(bad)
neg
adc
sar
imul
sbb
pop
push
les
call
out
jge
adc
inc
hlt
push
sbb
and
(bad)
out
fnstcw
imul
mov
addr16
pop
call
xor
popaw
pusha
push
and
xor
push
pop
mov
imul
(bad)
fmul
test
or
lods
sbb
pushf
scas
test
mov
pop
dec
adc
and
pusha
push
in
xchg
loop
inc
or
push
xchg
(bad)
aad
inc
push
jo
lods
fldcw
cmp
dec
jno
ss
inc
les
loopne
sbb
std
inc
fmul
hlt
dec
pop
mov
or
xlat
push
mov
dec
jo
ror
mov
fmul
xchg
daa
fs
push
adc
(bad)
test
cmp
movs
cwde
loope
jle
or
jns
test
out
movs
std
out
dec
or
pusha
adc
cli
add
cld
ret
ins
push
out
add
sbb
rol
repnz
xchg
imul
dec
or
mov
outs
adc
adc
xor
inc
xchg
push
gs
jge
mov
jb
jnp
xor
rcl
add
dec
call
add
pushf
ret
push
add
sbb
add
loopne
aaa
ss
(bad)
jl
out
cmp
movs
mov
jae
nop
inc
mov
xor
fmul
imul
pop
push
mov
div
ds
ja
xchg
sahf
imul
cli
test
jmp
mov
repz
in
pop
aaa
and
inc
repz
mul
mov
test
ins
data16
pop
cmps
into
ins
in
outs
out
and
mov
or
xchg
imul
jge
pop
dec
lods
ins
sbb
call
pop
movs
dec
jecxz
sbb
ds
in
mov
sub
lods
jmp
mov
stos
pop
cwde
sub
clc
sub
nop
icebp
cmp
cmps
es
cdq
jns
or
fnstsw
div
push
dec
clc
(bad)
cmp
xchg
stos
outs
js
sbb
ret
fwait
js
add
pop
sbb
jle
sahf
stos
addr16
add
das
int3
call
xchg
pop
sub
xchg
cli
(bad)
fisttp
ja
pop
cmp
jmp
(bad)
cwde
call
cmp
jmp
lds
cs
lock
ret
hlt
cmc
pusha
sbb
cmp
call
(bad)
push
pop
add
lods
mov
ror
into
xchg
push
(bad)
add
push
lds
sbb
xor
in
adc
dec
repnz
call
pop
xor
mov
cmp
or
inc
ret
pop
bnd
jl
add
jb
inc
xchg
sbb
or
and
rol
mov
add
ins
stos
push
pop
and
cmps
xchg
scas
add
sahf
jmp
icebp
stc
or
push
sbb
and
and
or
xor
add
sar
jecxz
inc
int
out
enter
xchg
dec
xor
test
shl
cmp
sub
jb
ins
push
in
hlt
hlt
ja
mov
and
cmps
call
aad
dec
int3
imul
cmp
inc
imul
and
pop
out
inc
mov
and
stc
push
cli
out
or
sbb
aad
sbb
add
push
mov
add
ins
jle
in
or
adc
push
push
add
rcl
outs
xor
push
(bad)
popf
movs
pop
rcr
scas
mov
push
jmp
add
cld
mov
xlat
xchg
ins
loopne
imul
mov
mov
adc
js
fwait
or
neg
inc
retf
jmp
push
neg
pusha
cmp
out
pop
add
dec
nop
jnp
scas
mov
shl
mov
mov
adc
ins
sbb
jae
dec
enter
jmp
jbe
movs
add
and
push
aad
pop
in
xor
mul
cmpxchg
mov
shr
loop
(bad)
in
dec
dec
add
imul
movs
clc
neg
cdq
jmp
inc
leave
mov
rol
jecxz
xor
adc
jecxz
mov
sahf
push
je
jmp
icebp
pop
das
call
or
sbb
dec
jmp
pop
loop
dec
imul
sbb
pop
ror
rcr
inc
sub
pop
ins
sbb
mov
fild
fiadd
and
int
data16
push
jo
adc
sub
ins
sbb
nop
xor
cmp
jo
rep
aam
outs
dec
sbb
sub
bound
inc
sub
out
imul
adc
inc
not
dec
movd
add
add
aad
test
rcr
pusha
cdq
dec
cmp
xchg
into
(bad)
and
push
test
cmp
adc
inc
push
push
test
or
fbld
mov
lahf
das
mov
xchg
mov
jns
ret
jl
jl
cmc
int
scas
xor
xchg
stos
push
add
nop
jmp
pusha
dec
cmp
mov
jle
mov
(bad)
fadd
in
jmp
dec
xor
jmp
mov
add
mov
adc
lods
in
sbb
sbb
pop
fidiv
jne
mov
mov
xlat
push
test
mov
adc
arpl
add
call
(bad)
jecxz
push
sahf
mov
pop
pop
cld
push
imul
and
xor
xor
call
push
ins
inc
xchg
(bad)
mov
retf
sub
mov
mov
pop
fnstsw
sahf
push
out
fstp
and
loop
mov
movs
jae
stos
jne
mov
rcl
sub
cmp
popf
xor
sbb
shr
xchg
(bad)
fbld
and
adc
adc
sub
sbb
jge
and
xor
jnp
aam
(bad)
dec
lods
xor
pop
mov
fist
mul
and
or
push
jmp
mov
pusha
push
xor
add
xor
out
inc
mov
into
push
adc
and
jge
fwait
mov
jp
stc
retf
sub
jp
in
ins
ror
sbb
test
cld
sub
sub
jp
jle
(bad)
add
(bad)
jbe
jb
sahf
int
repnz
popa
call
push
adc
sahf
icebp
xor
cmps
jb
inc
sbb
imul
pop
enter
ss
fst
pushf
adc
ins
pop
imul
movs
add
ja
sub
cmp
sub
fiadd
in
xchg
xchg
push
sbb
mul
mov
sub
int
outs
jmp
int
push
adc
mov
inc
retf
add
sahf
dec
call
or
pop
test
push
add
inc
mov
inc
out
movs
jl
xchg
lods
retf
adc
mov
xchg
push
les
xor
cmc
mov
pushf
cmp
xor
pop
jmp
ror
loope
retf
not
int3
pop
xor
jbe
retf
xchg
xor
and
pop
xchg
es
in
push
adc
dec
ins
retf
pop
int
dec
in
jg
mov
lods
(bad)
idiv
mov
or
add
cmp
cs
mov
jge
loopne
cmp
jmp
or
jno
(bad)
fbstp
call
or
(bad)
sbb
add
fstp
cli
xor
jno
sub
inc
movs
xor
dec
and
jl
fcom
ss
call
mov
fld
loope
mov
rcr
rcr
imul
xlat
and
mov
popf
pop
xor
mov
sti
popa
aam
mov
sbb
push
jg
call
inc
sub
push
mov
in
jge
push
cmp
(bad)
stos
and
in
xchg
sub
xchg
inc
sbb
jl
xor
imul
retf
pop
push
repz
inc
adc
pusha
mov
test
sbb
push
mov
mov
sbb
retf
in
bound
push
ds
push
push
jge
xor
pop
dec
or
adc
aam
popf
into
cli
inc
jbe
int3
in
jns
retf
lahf
les
xor
add
cmps
push
adc
xor
pop
mov
mov
ror
dec
add
jnp
mov
pop
mov
repnz
xchg
dec
popf
inc
adc
add
sbb
icebp
mov
jnp
inc
test
mov
add
fimul
cmp
ret
mov
push
push
jmp
ja
and
pop
mov
push
pop
or
mov
or
dec
jmp
dec
daa
xor
inc
add
rol
jmp
jge
dec
(bad)
test
(bad)
pusha
in
mov
pop
lds
lds
call
and
mov
add
sub
inc
popa
mov
fstp
(bad)
out
js
aas
inc
stc
xchg
mov
addr16
mov
xchg
mov
movs
jl
mul
jle
pushf
out
mov
div
sbb
mov
mov
mov
test
xor
js
in
dec
das
movs
jmp
push
ss
dec
mov
call
stos
int
jg
aam
es
rol
jnp
mov
nop
and
(bad)
daa
and
sub
mov
add
test
xlat
or
out
pop
enter
or
popa
repnz
in
jo
ret
mov
mov
outs
jmp
adc
loopne
leave
idiv
test
cld
arpl
sub
div
mov
jecxz
outs
out
mov
int3
cmp
loopne
inc
ss
lgs
cmp
arpl
sub
and
clc
cmc
push
mov
adc
jne
mov
dec
push
inc
mov
test
scas
cli
es
lods
push
xor
dec
sbb
jmp
pop
xlat
mov
add
xor
push
test
jo
mov
fisubr
ss
xchg
mov
or
xor
stos
sbb
jns
and
sub
mov
mov
sbb
sub
add
mov
js
sub
jbe
push
stc
push
xor
ja
cmp
test
in
dec
pop
cmp
data16
xchg
xchg
mov
push
(bad)
imul
pop
ds
sub
inc
xor
sbb
xor
add
icebp
sbb
dec
ja
movhps
fsubr
sub
pop
sahf
and
and
into
pop
in
inc
cmp
stc
cmp
mov
loopne
dec
out
inc
loope
pop
inc
add
dec
fnstenv
xrelease
imul
mov
in
call
bound
mov
xchg
rcl
dec
(bad)
enter
aas
ins
or
push
daa
pushf
mov
and
sbb
adc
mov
arpl
sub
jp
ins
mov
sbb
mov
(bad)
iret
jne
adc
mov
jb
nop
xchg
cld
mov
test
push
mov
or
xchg
sub
out
mov
jbe
scas
gs
add
cmps
in
mov
test
jb
lahf
shr
test
ss
movs
pop
mul
call
mov
addr16
jg
inc
jge
pop
sub
mov
push
push
ja
jne
popf
aas
jmp
xlat
cmp
sub
not
loope
bound
xchg
pop
bound
clc
push
in
sub
add
sub
xchg
xchg
inc
out
pop
es
sub
pop
mov
lods
add
aad
mov
loop
fist
sbb
ret
ret
fld
addr16
xor
call
(bad)
scas
push
xor
pusha
cmps
out
test
js
rcl
(bad)
lods
inc
mov
push
jle
xchg
cmps
adc
pop
stos
inc
adc
sub
sbb
(bad)
lods
mov
mov
aaa
xlat
sub
jno
cmp
or
in
jne
mov
jecxz
pop
inc
jle
jbe
add
sbb
loop
jge
lock
cmp
and
adc
fdivr
and
mov
push
das
mov
and
pusha
call
xchg
cmps
sbb
fstp
push
add
in
loope
xchg
cwde
or
add
push
(bad)
jp
shr
inc
push
inc
mov
out
mov
or
leave
movs
lahf
dec
ret
jbe
in
stos
cmps
mov
sbb
pusha
and
cwde
mov
nop
(bad)
fmul
or
ss
mov
xor
and
xor
inc
jo
pop
jae
les
std
scas
fild
(bad)
aaa
jle
mov
ja
aad
adc
dec
pop
(bad)
aad
hlt
outs
movs
jne
ret
adc
adc
and
rol
push
sbb
sbb
lods
in
lods
pushf
inc
push
mov
push
ss
cmp
lea
out
je
push
jge
mov
inc
ficom
inc
sbb
pop
and
push
jne
push
sahf
aam
mov
xor
out
aaa
xchg
mov
xchg
jno
bound
mov
xchg
jg
cmp
or
(bad)
sub
inc
repz
adc
es
sub
sbb
out
je
dec
adc
fld
std
push
jg
in
into
sub
jmp
hlt
jmp
xor
es
aaa
fidivr
ja
(bad)
imul
mov
mov
pop
call
jb
mov
icebp
or
mov
es
mov
nop
add
add
sbb
ds
(bad)
iret
imul
retf
jnp
inc
mov
nop
stc
mov
(bad)
lods
out
mov
nop
ds
mov
jecxz
push
xchg
icebp
fprem
adc
enter
movs
mov
mov
or
xchg
cmp
ss
mov
or
mov
xor
jmp
inc
and
mov
stc
xchg
addr16
les
int
pop
jnp
fild
test
fsub
loope
cmc
fist
popf
fistp
std
xchg
add
(bad)
sar
mov
dec
dec
cmp
mov
arpl
sbb
push
pop
lahf
leave
push
gs
shr
sub
mov
and
ss
mov
sbb
sub
and
shl
mov
sub
inc
cmp
dec
pushf
(bad)
dec
fild
mul
jb
mov
movs
ja
mov
repz
mov
mov
leave
stc
fmul
jg
scas
(bad)
cmc
adc
or
fisttp
(bad)
or
rcr
pushf
ins
cs
push
jle
mov
jno
adc
mov
sub
adc
mov
int
mov
cvttps2pi
cmc
in
mov
enter
and
add
dec
mov
add
jecxz
mov
inc
cmp
movs
cld
test
pop
ins
adc
hlt
mov
mov
mov
inc
fdiv
movs
mov
cld
ds
clc
gs
add
out
and
jle
js
mov
imul
clc
in
cdq
push
jl
(bad)
mov
(bad)
ret
retf
leave
pop
xor
mov
fidivr
mov
or
sar
add
inc
inc
xchg
hlt
loopne
add
push
imul
imul
(bad)
jae
out
mov
in
pusha
gs
ret
cmp
addr16
stos
xchg
rol
jge
ffree
sub
test
std
cmps
idiv
addr16
inc
push
sahf
jp
stos
lock
mov
inc
jmp
outs
call
sub
lds
xchg
je
dec
scas
sbb
fistp
outs
xchg
jle
mov
fcom
pop
ret
pusha
push
jbe
div
push
aad
xchg
std
lds
xor
in
add
jb
ss
dec
addr16
push
pop
or
lods
sbb
arpl
sbb
jle
cmp
psubsb
xor
push
(bad)
add
lods
mov
sbb
enter
inc
pusha
xor
out
add
(bad)
leave
outs
xchg
cmp
mov
mov
shr
jmp
mov
push
and
pop
xor
cs
sbb
adc
lds
cmp
test
ficom
push
bnd
clc
(bad)
mov
push
and
in
nop
hlt
or
stc
sbb
push
out
sbb
mov
div
movs
(bad)
test
test
push
icebp
into
pop
jns
xchg
dec
out
mov
imul
jne
jge
jg
neg
(bad)
sti
jecxz
and
inc
dec
sub
aas
pop
das
sub
(bad)
sbb
popa
jecxz
inc
fsub
int
xlat
dec
add
xchg
mov
cmc
xchg
and
or
sub
cmp
cmps
pusha
xchg
test
cmp
mov
mov
call
sub
hlt
add
jge
ja
mov
out
mov
mov
addr16
inc
push
push
(bad)
loope
rcl
out
add
push
das
ret
mov
call
push
sahf
xlat
sbb
jbe
mov
cmps
psubsw
ret
icebp
jnp
iret
xor
shr
adc
mov
call
mov
push
pop
inc
imul
or
je
adc
fldcw
push
rcr
sub
outs
pop
mov
stos
aad
out
sub
dec
mov
cmc
xchg
cmp
adc
sbb
lds
lea
dec
(bad)
cmc
test
sub
add
xchg
xchg
gs
inc
inc
dec
cmp
ja
push
push
pop
adc
sahf
inc
dec
mov
mov
test
mov
das
and
inc
sbb
imul
repnz
and
jecxz
inc
xchg
enter
dec
nop
popf
jo
out
(bad)
lock
out
jle
sbb
pop
cmp
retf
(bad)
call
sbb
xchg
inc
lds
mov
test
popa
imul
or
(bad)
lods
sub
fisttp
push
sub
cmp
push
adc
and
push
or
cmp
or
push
jo
sbb
mov
jecxz
or
push
lea
cmc
retf
fistp
cwde
out
jl
aas
pop
dec
or
pop
push
mov
mov
inc
loope
icebp
jecxz
stos
pusha
mov
add
inc
and
jmp
loop
jae
enter
ins
sub
imul
sbb
sub
push
cmp
fwait
aaa
push
hlt
jb
js
dec
dec
cmp
inc
mov
mov
cmp
in
xor
pop
mov
leave
dec
sbb
fs
cmp
xlat
cmp
sub
pusha
jmp
mov
add
jmp
sbb
sbb
dec
shr
scas
sub
sahf
adc
jle
mov
sbb
push
sahf
sti
les
sbb
leave
jge
dec
sub
sbb
or
and
loopne
pop
sbb
dec
fldl2e
cmp
dec
sub
push
pop
scas
(bad)
mov
rol
cmps
jae
dec
int
lods
pushf
xor
jbe
mov
adc
fstp
repz
xor
cmp
inc
hlt
or
div
pop
and
aam
push
xor
mov
mov
and
ret
sar
out
rcl
pushf
repnz
fdivr
retf
pop
inc
rep
xchg
mov
loop
rcr
push
push
das
xlat
push
inc
fwait
jle
loope
jns
(bad)
push
dec
ja
xchg
lds
das
inc
adc
push
(bad)
jp
mov
cmp
jl
jl
(bad)
mov
or
movhlps
ja
xchg
xor
into
adc
or
fs
test
stos
and
jo
xor
mov
ss
dec
xchg
and
dec
call
mov
outs
jecxz
mov
mov
packsswb
xchg
in
mov
xor
pop
shr
jno
pop
inc
scas
and
xor
mov
out
xchg
imul
cdq
mov
adc
call
movs
pop
jecxz
fsub
aam
dec
pop
stos
adc
sub
push
push
ret
inc
mov
stc
ror
dec
das
out
bound
out
fs
imul
pop
hlt
pop
cdq
(bad)
lahf
mov
jecxz
fisub
outs
cmp
xchg
test
ins
arpl
inc
mov
jp
xor
test
repz
sbb
ret
push
mov
sbb
xchg
rcr
enter
push
outs
mov
push
mov
cmp
cmp
fiadd
ins
fcomp
jge
sbb
rol
jne
imul
leave
and
and
sbb
fisttp
cs
xchg
pop
cld
add
lods
mov
or
push
daa
mov
sub
or
mov
repnz
mov
cmps
stc
sub
add
add
dec
cmp
stc
cmp
jmp
es
xchg
push
mov
scas
jo
push
sbb
icebp
mov
es
cmp
mov
sbb
fistp
sbb
imul
xchg
mov
fadd
mov
mov
dec
arpl
in
je
xchg
xchg
enter
icebp
pop
dec
dec
jnp
pop
mov
pop
jmp
push
or
and
xor
jg
cmp
mov
jnp
jbe
dec
pop
leave
sbb
scas
jp
gs
cmp
dec
push
mov
(bad)
mov
jbe
std
loope
mov
in
xchg
pop
cmp
sub
stc
xchg
pop
mov
(bad)
xor
jle
lea
call
mov
pop
fldcw
js
mul
inc
mov
cld
stos
sbb
jne
sub
xor
popa
jecxz
retf
popf
jns
or
(bad)
cmps
fwait
dec
out
pop
(bad)
or
stc
xor
retf
aaa
cmp
loop
add
cmp
or
leave
fs
lea
xchg
sti
fdiv
lea
or
mov
in
clc
inc
mov
scas
sub
rcr
mov
dec
mov
jecxz
mov
inc
enter
out
outs
push
push
mov
clc
lods
shl
mov
or
cmp
jmp
mov
cwde
pop
sub
cmp
xor
call
rol
push
jmp
mov
mov
aaa
nop
popa
push
dec
xchg
gs
mov
add
fisttp
push
jo
sbb
loopne
adc
sub
push
mov
push
pop
imul
push
cmp
cmp
cmp
ret
xchg
jl
mov
fisubr
add
mov
sub
mov
xchg
pop
inc
es
loop
outs
sti
sub
sub
(bad)
jmp
xlat
inc
(bad)
stos
cmps
aam
mov
sub
add
dec
or
mov
sbb
pop
adc
inc
jo
cmp
scas
jae
cli
mov
nop
cmp
pop
arpl
mov
pop
addr16
cmp
das
test
mov
lds
out
gs
push
add
sbb
pop
mov
or
fidivr
cmp
fstp
pop
mov
pop
dec
or
pop
mov
std
in
inc
or
out
pop
jae
arpl
or
xchg
xlat
or
in
test
mov
fst
xor
xchg
pop
cmp
xor
adc
shl
mov
cmp
test
adc
fstp
xchg
loopne
dec
inc
lods
int3
push
or
cmp
ja
push
mov
xchg
jmp
inc
outs
cmc
rcl
jnp
paddw
xor
sub
inc
xor
jbe
ins
add
adc
ins
cld
jp
adc
lods
and
sub
callw
ret
sbb
sub
inc
stos
imul
dec
call
pop
jo
and
sbb
mov
mov
in
inc
not
data16
inc
add
dec
add
popa
jne
dec
push
fs
jmp
cmp
mov
leave
adc
inc
pop
xor
mov
xchg
sbb
inc
push
jle
inc
mov
or
pop
and
int3
adc
sub
movs
cmp
cmps
sbb
je
lods
dec
adc
test
sbb
mov
mov
and
lock
mov
dec
aad
enter
shr
xor
in
stc
das
out
push
push
xchg
mov
sub
xchg
stos
push
aad
push
mov
enter
scas
mov
retf
stos
adc
inc
mov
xor
ret
clc
add
faddp
xor
inc
cmp
(bad)
push
push
retf
and
je
fld
xlat
data16
sub
cmps
push
mov
push
cmp
fcmove
cld
les
push
adc
aad
into
pop
imul
jl
push
push
lods
cdq
add
movs
push
cmp
scas
xchg
jb
out
xor
cmp
adc
call
inc
icebp
sub
fcomp
pop
imul
retf
push
jns
es
ficom
ret
scas
cmp
inc
fadd
sub
push
je
ja
retf
js
add
cmp
adc
pop
mov
jge
and
aam
adc
je
sub
sub
rol
inc
mov
cdq
pop
lods
hlt
mov
(bad)
call
aad
mov
sub
aad
jae
rcr
jb
stos
xlat
jbe
mov
sub
lods
out
arpl
inc
sar
push
push
jnp
fst
test
pop
fsub
(bad)
jmp
ins
lahf
dec
js
add
out
cmc
(bad)
or
dec
mov
mov
(bad)
mov
mov
retf
ds
ins
popa
adc
cdq
xchg
mov
add
jb
out
adc
ss
hlt
xchg
xchg
fidiv
sub
in
fs
mov
gs
outs
mov
sti
stos
in
mov
pop
ja
pop
retf
push
aaa
(bad)
xor
bound
mov
ins
jnp
mov
fmul
(bad)
lods
arpl
pop
fwait
sbb
and
(bad)
xor
test
pusha
ins
popa
jle
mov
jno
xor
sbb
mov
mov
hlt
ss
stc
xor
mov
(bad)
stos
cmp
daa
sbb
cmp
lea
call
sbb
movs
mov
lods
mov
inc
inc
mov
jbe
int3
inc
pop
dec
add
(bad)
sti
adc
aas
in
popa
popa
(bad)
out
inc
mov
ja
pop
ror
cld
retf
jg
ror
scas
loop
ins
and
outs
fisttp
mov
(bad)
or
test
mov
inc
inc
jp
xor
dec
ret
cmc
shr
inc
dec
imul
movs
out
mov
aas
xchg
or
fst
sub
xor
mov
loop
sbb
js
push
scas
mov
push
add
leave
popf
movs
push
fs
repnz
ins
into
daa
adc
cld
jle
xor
out
les
dec
stos
jmp
hlt
and
xor
jp
or
xor
ja
fs
add
mov
cmp
sahf
add
cmp
push
and
ins
arpl
jnp
mov
or
jb
mov
jo
out
call
pop
(bad)
push
jmp
sub
jmp
outs
inc
inc
loopne
add
sbb
mov
push
push
popf
aaa
out
sbb
pop
fwait
inc
ret
mov
aas
cs
mov
pop
lods
in
push
or
xlat
add
cmp
xchg
out
xor
rcr
bound
inc
and
data16
jnp
cvtdq2ps
daa
push
scas
in
imul
cmp
cmp
in
jge
mov
imul
and
data16
push
push
xchg
xor
ins
test
aad
ret
sti
cld
jnp
mov
or
inc
sbb
loop
aas
rcr
movs
dec
popa
cli
sbb
pop
pop
jmp
jmp
jle
test
xchg
jb
fsubrp
sbb
adc
mov
fidiv
stos
pop
out
cmps
mov
aad
sub
retf
jg
push
clc
add
cs
cli
(bad)
loope
(bad)
mov
jg
sub
sub
push
pop
adc
lock
mov
(bad)
mov
ins
or
mov
mov
sti
inc
not
adc
xchg
(bad)
gs
sbb
fnstcw
adc
mov
add
inc
mov
jno
sbb
sti
dec
test
and
dec
mov
dec
mov
xchg
mov
jae
push
add
pop
add
(bad)
movs
push
push
mov
data16
inc
out
loop
cmps
push
or
repz
pop
fucom
mov
xor
mov
ss
sar
dec
(bad)
(bad)
call
mov
pushf
pop
cmp
add
jge
(bad)
pop
push
cmps
pushw
icebp
pushf
xor
idiv
mov
loopne
ins
je
es
pop
mov
cdq
mov
or
gs
pop
push
push
sbb
outs
mov
ret
mov
mov
adc
cld
sub
(bad)
and
add
jmp
push
shl
int3
xor
cmps
push
pop
dec
loop
into
retf
gs
ret
pop
cmps
dec
pop
dec
fld
fcomp
stos
in
outs
mov
inc
(bad)
sub
mov
fwait
jns
ins
fdivr
rcl
push
add
dec
call
xor
xlat
dec
test
and
arpl
je
ret
ins
jae
nop
ficomp
xor
cmps
push
data16
fist
adc
sbb
cmp
das
cdq
push
stos
jbe
sbb
push
fild
rcr
add
repnz
push
mov
push
stos
xchg
mov
stos
fmul
dec
std
and
push
cmp
push
xchg
mov
cmp
pop
mov
adc
fmul
std
les
fmul
popa
xchg
inc
test
mov
xor
aaa
cdq
mov
cmp
cmps
cld
lods
xchg
dec
sub
inc
jns
(bad)
test
mov
push
push
cwde
mov
and
imul
cmp
bound
or
xor
fs
popf
sbb
push
add
pop
cmp
add
sub
pop
add
cmp
idiv
(bad)
jg
mov
pop
aad
pop
push
xchg
xchg
fst
cs
fcom
test
add
mov
loopne
outs
outs
test
repnz
mov
cwde
or
ret
(bad)
cmps
pop
cmp
dec
mov
pop
dec
cld
int
loopne
xlat
xchg
repz
stos
pop
push
jmp
jae
aaa
sub
mov
adc
sbb
mov
xor
xchg
retf
pop
mov
movs
xchg
scas
add
sti
mov
or
xchg
push
mov
int3
cwde
mov
pop
mov
scas
add
and
xchg
cmp
cwde
push
call
mov
test
xchg
ror
push
sti
push
inc
aas
fisub
dec
mov
sbb
and
jnp
js
and
fld
xchg
sub
mov
mov
les
retf
ja
mov
jmp
cmc
cdq
stc
ins
or
inc
fdivp
jnp
cdq
mov
sbb
inc
mov
ss
pop
push
cs
inc
push
push
jl
pop
idiv
xor
adc
popf
aas
jmp
or
jne
xchg
popa
jno
scas
es
ret
lds
xchg
inc
push
ins
xchg
lock
or
scas
pop
adc
loope
inc
or
dec
leave
and
mov
adc
lods
fisub
outs
inc
daa
xor
sete
hlt
xor
call
dec
sti
ins
bound
jns
dec
xchg
pusha
in
mov
rcl
bound
ins
out
mov
scas
dec
(bad)
out
inc
push
scas
jge
cmp
sub
push
xchg
or
add
fdiv
mov
int3
mov
lods
mov
loopne
adc
retf
nop
and
sub
sub
cmp
cmp
(bad)
jl
inc
stos
mov
push
fwait
aaa
add
movs
(bad)
sbb
jno
cmp
ins
add
push
add
push
and
xor
dec
cmp
xchg
push
push
sbb
inc
stos
dec
inc
int3
inc
imul
xchg
retf
push
and
mov
sub
dec
push
lods
and
adc
arpl
sahf
mov
fstp
jmp
shl
mul
pop
and
mov
sbb
sub
jns
fcmovnu
xchg
mov
pop
sahf
paddsb
cmp
dec
(bad)
jle
push
pop
push
pop
pop
xlat
or
test
fmul
in
xor
mov
ret
inc
cld
push
jno
pop
data16
jmp
mov
jecxz
sbb
inc
stos
add
(bad)
push
dec
sub
in
daa
ss
xor
or
int3
adc
xchg
fbld
popa
push
mov
or
pop
cmps
jnp
add
(bad)
imul
pop
ret
cmp
inc
lods
fs
dec
sub
(bad)
les
ss
cmc
mov
je
pop
(bad)
mov
in
inc
or
jae
xchg
sbb
sbb
mov
pop
mov
fs
xor
cdq
les
cmp
jb
jae
or
push
or
sbb
push
enter
movs
cmps
ds
mov
js
push
cli
sub
pusha
jmp
imul
inc
adc
push
inc
std
jp
mov
repnz
movs
adc
add
and
inc
cli
mov
sar
test
lock
jle
cmps
mov
sbb
in
popa
ss
mov
popa
cmps
into
test
inc
cld
add
out
ja
inc
jl
mov
mov
add
xchg
getsec
cmp
daa
cdq
pop
sub
add
pop
mov
inc
lods
cmps
mov
div
inc
movs
(bad)
push
scas
adc
adc
clc
fstp
aad
lods
retf
(bad)
xchg
pop
out
pop
push
push
sub
inc
add
xchg
push
cmp
or
dec
fild
jp
cmps
mov
jbe
lock
dec
xchg
xchg
push
mov
inc
das
push
ins
jge
sbb
int3
xor
add
ds
adc
addr16
int3
jp
stos
mov
mov
pushf
sub
xchg
ss
aad
pop
lea
pusha
jge
cli
popf
lock
mov
or
sbb
test
in
dec
fidivr
mov
cld
pop
es
push
add
add
adc
movs
ret
in
xor
sti
test
cmp
stos
cli
cs
pop
nop
inc
adc
and
pop
and
jo
loopne
push
sbb
adc
pop
mov
rol
sahf
rol
ja
mov
jg
dec
adc
xchg
jns
(bad)
js
push
pop
out
mov
cwde
pop
gs
sbb
nop
pop
xchg
dec
push
inc
dec
sar
sbb
popa
mov
or
movs
add
jns
xchg
ss
fs
dec
push
adc
jmp
xor
push
jl
or
pop
or
jmp
loopne
jo
sahf
lock
mov
loop
mov
loop
test
popa
pushf
out
mov
push
div
cld
sti
fwait
ss
gs
pop
add
mov
in
in
test
or
lods
cmp
push
push
stc
aad
std
jno
cmp
in
addr16
in
and
mov
popf
sub
jb
cmp
rcr
adc
fsubr
stc
neg
sub
outs
aad
pop
xchg
mov
sahf
sahf
neg
cmovg
gs
pop
jne
and
xor
jbe
pop
sub
sub
lock
pop
ja
or
sub
int
and
aaa
test
pop
pusha
push
jno
cmc
pop
and
mov
shl
cmp
mov
fldenv
jae
jmp
shl
mov
dec
push
or
jne
add
popa
div
in
mov
mov
sub
std
popf
jo
xchg
cmps
dec
push
outs
xor
xchg
and
fbld
or
adc
mov
mov
outs
(bad)
xor
cwde
pop
pop
jle
repnz
std
sti
push
paddsw
and
and
adc
ds
sbb
fistp
pop
stos
inc
xor
repnz
ds
pop
add
in
sub
fsub
mov
mov
mov
push
lds
cmc
lahf
and
cwde
inc
movs
rol
jge
push
or
bound
jno
sahf
mov
xchg
pop
or
sbb
mov
sub
cmp
mov
xor
rol
and
cld
fadd
es
test
push
mov
jb
sub
jbe
inc
ror
jb
sub
cmp
sbb
sub
jl
addr16
pop
mov
sub
inc
add
das
(bad)
jecxz
xor
loopne
aas
mov
cmp
aas
cmps
popf
aas
cs
and
cs
sbb
bound
mov
imul
add
in
sub
jne
jp
gs
mov
pop
inc
xor
addr16
mov
sub
inc
leave
inc
es
mov
or
fisttp
test
jecxz
and
inc
gs
pop
xchg
out
loopne
add
adc
imul
pop
pusha
enter
out
mov
ret
out
lods
cmp
sub
inc
inc
mov
ja
xchg
(bad)
ins
xor
xchg
jns
(bad)
mov
sub
loopne
shr
mov
mov
ins
xor
jl
loope
mov
(bad)
cmp
mov
pop
adc
or
mov
mov
nop
push
push
push
jmp
dec
inc
or
push
loopne
in
pop
movs
adc
xchg
loopne
xchg
rol
cmp
les
dec
or
adc
sar
pusha
sbb
lahf
shl
ss
cmp
xchg
pop
(bad)
cmc
fadd
pop
pop
sub
lods
mov
fdivr
nop
(bad)
xlat
out
mov
das
mov
jg
shl
xchg
dec
mov
push
fimul
adc
push
repz
or
cmp
dec
or
lahf
push
mov
inc
push
retf
xor
loop
shl
fidivr
and
mov
cwde
call
in
outs
daa
or
retf
cmc
push
jne
mov
into
clc
lock
adc
jle
inc
ret
mov
sub
cmp
inc
mov
fimul
sbb
cmp
stos
sbb
jno
jg
mov
mov
stc
(bad)
and
gs
mov
pop
(bad)
(bad)
hlt
hlt
idiv
fistp
cmp
in
add
pusha
arpl
lahf
int3
pop
outs
gs
stos
enter
xchg
lods
sbb
xor
and
fwait
ja
(bad)
(bad)
and
jno
data16
sbb
or
xor
push
mov
in
inc
popa
add
mov
fadd
sub
add
lss
int3
into
cmp
test
test
mov
sub
sbb
lds
sahf
xor
call
adc
stos
pop
mov
sub
push
inc
sbb
lods
sbb
pop
jge
mov
xchg
add
pop
loopne
cmp
fsub
cmp
(bad)
out
lods
mov
arpl
out
cmp
xor
out
and
jbe
xchg
mov
inc
jmp
cmc
inc
sub
push
jno
push
cs
mov
cwde
xchg
es
fstp
pop
sahf
inc
pop
sti
sar
push
adc
jo
(bad)
scas
ja
xchg
jne
mov
pop
pop
mov
retf
loope
in
sbb
jb
(bad)
jp
push
xor
sar
lahf
pop
inc
mov
retf
jb
(bad)
mov
mov
sub
cld
or
mov
dec
xchg
mov
lahf
daa
imul
(bad)
pop
sti
xchg
rol
push
add
mov
pop
cmps
sbb
ins
jbe
clc
push
adc
(bad)
sub
cmps
lock
test
adc
jno
jo
adc
inc
sbb
data16
aad
jmp
fwait
pusha
jmp
mov
xor
xor
dec
adc
push
in
outs
outs
frstor
call
ror
scas
out
test
add
stos
mov
adc
add
outs
inc
cmp
xchg
movs
or
test
test
(bad)
xor
(bad)
shr
dec
pop
cwde
cmp
retf
dec
dec
cmp
cmp
cld
loop
stc
in
mov
adc
or
mov
test
call
inc
mov
movs
pop
jle
mov
sti
add
push
pop
into
sbb
pop
mov
fnsave
push
cmp
aam
daa
pop
(bad)
out
xchg
cmps
pop
outs
add
add
xchg
mul
adc
stos
test
in
std
aam
aad
icebp
outs
mov
jbe
mov
sbb
cwde
ret
stc
imul
dec
mov
mov
push
(bad)
add
stos
hlt
aas
mov
mov
ret
idiv
lods
inc
mov
dec
xchg
dec
push
into
jmp
mov
dec
in
pop
mov
and
arpl
mov
enter
inc
out
dec
test
mov
test
icebp
jns
fsub
(bad)
(bad)
addr16
fadd
pop
dec
es
dec
xor
pop
jo
ins
int
inc
dec
sub
adc
push
call
mov
pop
and
cwde
dec
inc
jb
xchg
xor
mov
inc
out
loop
in
add
sub
mov
nop
adc
dec
movs
and
scas
push
ins
icebp
inc
inc
enter
or
retf
jne
mov
fwait
lods
dec
hlt
imul
loope
jmp
unpcklps
ret
imul
mov
loopne
fadd
mov
mov
aas
mov
arpl
mov
lds
cmp
xchg
fisub
cld
mov
and
out
mov
xchg
pop
mov
daa
loopne
pop
cmp
mov
cmp
push
out
mov
in
sbb
jmp
fadd
fdiv
ds
out
sub
or
ss
test
(bad)
in
push
add
gs
push
nop
xor
ror
sahf
scas
aad
mov
je
pushf
mov
add
mov
fisttp
cmp
xor
pop
mov
inc
mov
out
mov
pushf
jb
push
xlat
mov
add
and
clc
and
dec
ins
mov
or
mov
sub
lods
inc
test
div
xchg
sub
mov
popa
(bad)
inc
push
and
cmp
add
xchg
std
iret
inc
jmp
mov
arpl
pop
call
xchg
push
scas
mov
or
inc
sahf
repnz
add
test
push
push
(bad)
in
loop
inc
cli
mov
push
push
add
adc
cmp
es
mov
and
adc
push
xor
add
enter
ins
sub
nop
push
(bad)
adc
adc
aas
pop
cwde
xchg
jmp
pop
ret
out
mov
cwde
sub
push
sbb
pop
or
sbb
pop
cmp
outs
jmp
inc
inc
and
pop
sub
xchg
out
add
hlt
jmp
push
iret
or
cmc
aas
pop
fcom
jge
dec
js
cmp
push
stos
and
cdq
fwait
cmc
fisttp
int3
sahf
push
pop
mov
stc
fwait
and
imul
push
cs
and
and
xchg
das
jecxz
and
jmp
popf
js
fwait
pop
mov
jne
fidiv
jmp
leave
ins
leave
test
mov
jb
lods
jle
inc
pushf
imul
xor
add
sbb
sbb
push
sbb
ds
mov
jmp
xor
xor
stos
push
jnp
cmp
out
call
iret
push
sbb
xor
ror
loope
dec
mov
jmp
add
stos
dec
sbb
mov
sub
aad
popa
dec
icebp
cld
std
mov
cmp
sub
push
movs
pop
push
sub
xor
xchg
push
jecxz
push
pop
xor
mov
je
js
xor
or
jns
rcl
loope
dec
cs
in
xchg
cmps
popf
ins
adc
push
stos
jge
arpl
addr16
hlt
daa
and
mov
cmps
std
push
cmc
and
mov
xor
outs
stos
aas
mov
jns
mov
imul
add
(bad)
stc
push
jmp
movs
pop
pop
dec
pop
xor
xchg
scas
sub
cmps
adc
or
loop
jno
movs
jo
ret
pop
stos
sub
push
in
dec
test
mov
add
jl
sahf
mov
aaa
int3
fs
mov
ins
dec
loope
jne
dec
dec
js
call
(bad)
fnstcw
popa
and
cmp
mov
repnz
int
inc
jb
in
jnp
and
(bad)
scas
fstp
repz
xchg
loop
mov
pusha
adc
test
(bad)
popf
sbb
jle
mov
mov
stc
lods
dec
stos
push
dec
pop
and
mov
inc
push
sub
fldln2
std
xor
mov
xor
sub
mov
mov
jne
and
stc
ins
(bad)
xor
hlt
(bad)
shl
bound
dec
imul
dec
and
lods
imul
inc
ins
inc
test
test
in
xchg
mov
cmps
mov
and
and
fidivr
ret
std
rcr
push
fidiv
xchg
push
cmp
mov
adc
loopne
js
inc
jo
shr
jno
das
in
pop
push
out
push
mov
popa
fbld
call
adc
js
dec
xchg
fsub
scas
and
dec
out
cld
out
cmp
fwait
prefetcht1
and
aaa
inc
add
jmp
dec
sub
xchg
inc
or
js
jmp
es
fcmovnu
or
xchg
mov
icebp
iret
mov
std
push
mov
enter
sbb
or
jns
aad
ss
sub
inc
stos
xchg
aaa
fs
pop
xchg
retf
mov
adc
lock
nop
rcl
adc
into
adc
push
sub
gs
mov
xor
pop
sbb
mov
fldenv
mov
daa
imul
jae
lahf
clc
add
loopne
mov
rcl
dec
pop
or
mov
pop
mov
(bad)
repnz
lds
dec
cld
or
stos
xlat
ds
jb
movs
dec
fs
jb
ds
imul
and
das
ds
push
sub
dec
jbe
mov
scas
lods
mov
sub
retf
push
sub
arpl
fs
xor
mov
mov
enter
dec
sbb
push
rol
mov
and
bound
push
dec
outs
test
push
sub
and
mov
mov
std
daa
pop
(bad)
out
xchg
hlt
mov
push
cmp
es
and
icebp
enter
sahf
pusha
in
shr
xchg
jmp
dec
add
aad
push
bound
bound
mov
leave
pop
idiv
and
jns
shl
dec
ds
repz
or
cs
aad
enter
jg
cmp
jbe
ins
fadd
scas
ja
je
jl
loop
jmp
jo
cmp
ror
sar
je
aad
and
call
test
push
cwde
inc
pushf
adc
xor
lea
jg
shr
repnz
dec
aas
lea
cs
int3
movs
push
adc
or
popa
add
mov
push
(bad)
loop
adc
in
movs
fidiv
add
test
pop
pusha
cwde
inc
inc
and
adc
push
ret
out
jne
xchg
mov
push
ja
retf
mov
mov
xchg
and
and
in
xchg
add
ds
lods
xchg
mov
sbb
clc
or
movs
fst
std
mov
jp
sbb
add
and
mov
jmp
(bad)
or
aam
in
push
hlt
(bad)
outs
push
dec
and
movs
stos
xchg
repnz
sub
mov
xchg
pusha
jne
adc
pop
scas
xchg
and
sub
nop
jae
in
pop
stos
pop
imul
sahf
jg
add
xor
mov
mov
into
adc
add
ss
cmp
sbb
stc
dec
add
push
pop
cmp
inc
xchg
cdq
mov
and
mov
(bad)
jl
ror
or
call
clc
pop
lock
or
add
es
sbb
inc
(bad)
mov
add
xchg
les
mov
shr
inc
push
mov
inc
or
(bad)
clc
cmp
mov
add
lds
mov
push
xor
sti
pop
mov
ror
mov
mov
aaa
dec
cmps
jmp
icebp
and
and
inc
fcom
fistp
in
jmp
xor
in
pop
sbb
cdq
mov
push
cdq
les
data16
shr
and
xchg
cmp
inc
xchg
xchg
and
pop
pusha
xor
push
lds
mov
push
add
daa
and
add
inc
fmul
pop
sub
shl
push
cwde
sbb
fucomp
int
and
inc
push
add
loop
cdq
pop
hlt
imul
push
cmp
dec
sbb
lods
mov
ds
stos
stos
jmp
in
or
rcl
les
test
stos
ja
sar
aaa
int
inc
loope
js
inc
out
push
dec
push
push
inc
inc
leave
ins
adc
repz
jne
pop
jne
sub
movhps
popa
jne
adc
mov
adc
push
mov
in
jne
xchg
outs
pusha
push
clc
imul
dec
idiv
popa
fwait
fs
out
cwde
imul
mov
fisubr
mov
jge
push
lods
push
js
adc
pushf
cmps
xor
into
push
mov
cmp
pop
retf
mov
div
imul
imul
out
les
lahf
sbb
jne
dec
inc
add
daa
cmps
inc
dec
out
jno
inc
inc
or
cld
inc
mov
mov
cli
push
lock
popa
sbb
lea
stc
test
mov
and
jnp
fmul
xchg
inc
mov
ins
pop
nop
in
cli
pushf
loop
pop
sub
mov
stos
or
in
add
and
mov
or
push
pop
sub
push
dec
xchg
iret
cmp
mov
test
push
movs
retf
leave
out
pop
push
scas
mov
mov
push
rcr
jp
jge
stos
mov
push
pusha
xchg
cmp
test
test
mov
mov
or
jne
(bad)
fs
xchg
sar
sub
movs
fsubr
pusha
xchg
leave
sub
dec
fs
mov
sbb
inc
movs
add
ret
jecxz
sbb
call
or
das
push
lds
leave
fs
xor
in
mov
gs
add
addr16
fs
sub
imul
ss
pop
add
dec
call
dec
inc
je
add
out
xchg
out
jmp
mov
enter
adc
leave
sub
aas
ss
xchg
push
stc
vpunpckhwd
cmp
jno
inc
push
inc
mov
(bad)
outs
push
mov
xor
popa
mov
xchg
push
scas
mov
jecxz
xchg
test
loop
mov
sub
xor
jl
stos
repnz
ja
sbb
call
push
(bad)
stc
das
sar
mov
sbb
and
mov
cmp
sti
and
inc
(bad)
cmp
and
add
pop
mov
aaa
pop
lods
push
outs
xor
push
inc
cmp
jmp
inc
push
inc
mov
fcomp
mov
xor
aam
inc
lods
int3
fdivr
sub
adc
aas
adc
mov
in
cmp
call
mov
sbb
rol
fdivr
push
ss
sar
cmp
jle
inc
sbb
mov
push
js
inc
fsub
lea
cmp
fdivp
push
mov
lods
sahf
inc
and
inc
pop
xchg
xchg
shl
mov
scas
mov
and
call
loop
mov
inc
cdq
cmps
stos
push
xor
push
lds
add
call
ss
pop
arpl
push
fcomp
movs
lods
and
frstor
sbb
xchg
xchg
xchg
fsubr
jmp
cmps
dec
mov
pop
xchg
mov
sbb
movs
test
jmp
mov
scas
cmps
stos
adc
fsubr
and
cld
dec
and
mov
push
jecxz
retf
sti
add
(bad)
jmp
aad
push
jae
mov
pop
pop
repz
jl
and
arpl
aaa
mov
xchg
dec
movs
jg
sbb
test
cmp
(bad)
xor
std
(bad)
loop
inc
sbb
rol
sub
ss
and
pop
out
popf
mov
pop
ds
lods
repz
mov
ins
xchg
in
dec
(bad)
mov
and
aas
jmp
fs
mov
fiadd
xchg
mov
jbe
out
ins
lock
cs
es
sbb
sbb
lods
(bad)
mov
sub
jl
repz
jo
mov
aas
adc
jecxz
push
push
inc
push
shl
sbb
add
jbe
add
dec
and
cmc
sahf
inc
scas
mov
test
xchg
pop
rcr
loope
aam
test
dec
inc
aaa
inc
push
inc
dec
mov
test
dec
out
push
ret
adc
pop
pop
mov
pop
jle
(bad)
sbb
loop
movs
fsub
data16
adc
sub
outs
xchg
and
sub
and
and
gs
push
popf
pusha
sub
sub
inc
lds
push
movs
(bad)
test
movs
leave
je
sub
repnz
iret
xchg
cmc
lods
jge
cmp
adc
mov
pop
rcl
mov
test
repz
sbb
adc
lods
mov
jp
cmps
xchg
dec
pop
and
test
adc
dec
js
inc
out
sub
jmp
jl
mov
cs
push
mov
shr
inc
xor
dec
xlat
outs
in
mov
sbb
mov
cli
fwait
push
or
es
or
repnz
outs
aaa
(bad)
shl
(bad)
stc
imul
shl
pushf
ret
scas
bound
mov
adc
push
(bad)
sub
sub
icebp
inc
or
mov
aam
in
fnstsw
movs
sbb
or
cmp
imul
fs
jns
icebp
add
inc
out
push
sahf
stc
je
mov
int
sbb
mov
cmp
lock
dec
mov
sub
sbb
dec
scas
mov
jnp
pop
xor
xchg
cs
inc
out
dec
je
mov
mov
push
lock
xchg
sbb
push
pusha
mov
scas
xlat
int
sbb
scas
xchg
sub
ss
ja
push
jle
fnstenv
cmp
call
jmp
inc
cmp
outs
(bad)
iret
sub
and
loopne
inc
js
ja
jae
xchg
out
fnstcw
push
jg
outs
fs
jecxz
mov
into
adc
call
jmp
int3
out
scas
jns
mov
mov
push
xor
fs
xor
adc
fist
fdivr
mov
mov
jbe
or
addr16
cmps
mov
pop
push
shl
ds
sahf
imul
or
jns
jns
mov
push
jge
loop
in
push
neg
sub
xor
enter
push
out
or
xor
adc
test
inc
pushf
push
cmp
cld
xor
push
in
(bad)
movs
mov
fs
nop
sub
adc
dec
mov
add
dec
std
scas
sbb
add
adc
(bad)
jmp
sahf
and
lahf
jge
fwait
jle
or
sub
(bad)
inc
movs
scas
(bad)
fsubp
mov
push
push
push
shl
ror
add
aaa
mov
jge
xor
(bad)
pop
ds
lds
xchg
popf
sti
fst
fmulp
iret
sahf
daa
inc
ret
push
cld
jmp
push
call
sbb
mov
fild
dec
jg
pop
rcl
sahf
sbb
outs
arpl
jge
and
clc
test
aad
jl
imul
movs
jae
or
mov
addr16
das
mov
fidivr
(bad)
popa
mov
aad
stc
rol
cmps
(bad)
scas
inc
test
mov
xchg
(bad)
daa
xchg
pop
pop
ins
mov
inc
imul
or
sub
xor
movs
outs
and
pop
neg
sbb
out
push
out
cmp
inc
test
fisub
outs
lock
jle
pop
(bad)
mov
loop
push
enter
pushf
adc
pop
xlat
aam
xor
add
dec
add
pop
xchg
mov
mov
xchg
daa
mov
imul
or
dec
xor
dec
xchg
inc
dec
cmp
rol
ss
cmp
pop
or
pop
dec
daa
sub
xor
push
push
fcom
or
mov
jns
cmp
mov
(bad)
and
ins
mov
xor
jg
ss
mov
xor
mov
push
dec
pop
inc
fist
pop
jae
push
xor
iret
test
aas
imul
add
sub
push
sbb
mov
fwait
pop
leave
and
xor
jb
sbb
call
or
xchg
sub
js
dec
add
gs
mov
jge
xor
popf
bound
xor
and
outs
mov
lods
int
call
ror
out
push
pushf
push
xadd
aas
stos
sub
call
sbb
in
mov
add
mov
mov
mov
ins
xor
in
(bad)
dec
in
imul
or
xor
sub
movs
inc
jge
into
cli
or
sbb
push
movs
and
imul
pop
cli
pushf
inc
or
mov
cmps
add
lds
jae
jg
pushf
add
in
xchg
imul
or
cmp
(bad)
pop
fwait
adc
inc
out
lods
out
dec
pushf
lds
mov
push
push
xor
in
mov
ficomp
sbb
arpl
inc
stos
mov
shr
mov
aad
jp
es
jp
outs
aam
pop
mov
inc
fdiv
inc
push
movs
push
and
xchg
mov
out
repnz
aaa
push
mov
adc
pop
fisttp
js
pop
(bad)
outs
push
and
inc
mov
jb
add
sti
cmp
inc
adc
mov
push
mov
mov
test
imul
push
xor
mov
inc
(bad)
mov
mov
cmp
jecxz
add
es
or
dec
inc
push
sub
jp
out
xor
mov
aad
popf
push
popf
mov
xchg
xor
out
dec
in
out
xchg
push
(bad)
shl
test
dec
mov
leave
dec
popf
push
std
stos
retf
cmp
data16
cmps
sti
js
push
fistp
ss
cmp
mov
cmc
mov
push
loop
imul
push
dec
outs
ja
mov
jmp
ins
push
cmp
mov
jnp
lock
sbb
or
push
dec
mov
mov
inc
daa
or
lods
ds
pop
fldcw
jl
jg
inc
adc
add
cmps
add
iret
lods
nop
mov
addr16
loope
ud0
add
mov
cmp
sub
push
mov
and
jle
loop
xor
and
das
inc
mov
inc
nop
pop
into
mov
xchg
das
add
sbb
mov
imul
bound
and
cmp
mov
pop
aad
xor
js
fstp
jnp
sar
es
dec
dec
jno
or
xchg
scas
push
mov
loopne
push
clc
sar
xor
mov
sub
retf
jecxz
pop
jmp
popf
test
daa
xchg
xlat
sbb
mov
fist
mov
mov
and
retf
xor
pop
add
icebp
loop
ret
(bad)
fs
pop
dec
or
push
cmovnp
xor
jmp
dec
and
and
retf
cmp
jo
loopne
xchg
cmc
and
fsubr
shl
shr
call
inc
mov
push
push
mov
shl
nop
mov
add
sub
cmp
movs
or
not
add
jmp
fldcw
mov
cwde
pop
dec
mov
jge
ret
neg
in
add
pushf
std
dec
cdq
imul
push
mov
outs
push
aam
(bad)
sub
fld
pop
sub
mov
inc
push
(bad)
gs
(bad)
mov
or
mov
rcl
mov
sub
aaa
in
dec
mov
outs
mov
out
and
xor
jne
and
outs
sub
push
shl
mov
xchg
inc
pop
cs
sub
add
and
jno
add
int3
mov
add
pop
ja
add
adc
mov
out
pusha
dec
(bad)
mov
push
pop
mov
dec
aam
pushf
clc
xchg
jle
cmp
je
lahf
cmp
jle
push
fbld
sbb
pop
test
jmp
in
leave
jb
xor
pushf
(bad)
in
xchg
inc
mov
inc
adc
aas
mov
adc
and
loopne
ret
test
stos
or
cmps
das
retf
push
pop
push
push
ret
lods
push
aaa
pop
mov
ds
push
(bad)
push
fild
jp
shl
add
inc
retf
cs
push
dec
and
icebp
xor
and
jge
adc
neg
pop
xor
imul
je
ret
and
popa
sub
ja
sub
shr
(bad)
(bad)
mov
mov
imul
scas
inc
mov
imul
adc
sub
xchg
rcr
mov
jge
xor
push
dec
clc
mov
mov
add
(bad)
sub
adc
test
inc
mov
jmp
scas
loopne
cmp
xor
sbb
aam
pusha
in
dec
clc
cmp
cmp
hlt
or
jb
scas
and
cmp
jle
cmp
stc
call
mov
fisub
mov
add
ret
dec
and
jmp
sbb
jp
push
dec
in
sbb
adc
sub
popf
jle
mov
push
imul
xchg
push
dec
aam
ja
(bad)
(bad)
jg
and
xchg
add
jb
pop
and
div
or
mov
(bad)
out
cmp
sub
mov
jo
sbb
and
cmp
call
mov
mov
and
mov
mov
daa
and
push
sub
js
int
mov
loope
clc
ds
ins
push
xor
jnp
jp
sub
dec
mov
adc
add
inc
call
xor
mov
les
jns
push
test
jge
or
pop
mov
outs
xchg
push
ficomp
dec
das
iret
mov
je
or
inc
rcl
xlat
xchg
lock
mov
mov
jbe
nop
pop
jmp
jmp
or
es
fdivr
dec
fisttp
inc
imul
push
adc
jno
sahf
and
daa
cli
mov
and
out
jg
adc
inc
sub
rol
mov
inc
push
push
fcmovu
lods
fs
and
sbb
arpl
jo
xchg
popa
shr
in
xchg
mov
push
sub
mov
inc
adc
mov
sub
jb
mov
(bad)
rol
inc
ss
popa
xor
mov
mov
sbb
and
xchg
and
add
daa
js
sbb
sub
pop
xchg
movs
jmp
pop
fdivrp
xchg
push
inc
dec
add
and
inc
push
push
pop
popa
push
pop
movs
or
sub
lea
pop
test
inc
or
das
mov
sub
and
mov
int3
xor
pop
test
lds
jae
jp
ud1
mov
lahf
leave
jmp
daa
jmp
pusha
push
add
add
mov
mov
and
push
push
aas
jmp
fld
(bad)
sub
sbb
popa
sub
xor
outs
or
pop
push
jmp
add
(bad)
imul
stc
inc
push
pop
(bad)
out
das
inc
cmps
xor
test
or
sbb
jae
sub
add
pop
(bad)
dec
icebp
sub
(bad)
mov
jb
int3
push
cmp
sahf
xchg
ficom
push
call
dec
cmp
push
mov
aad
(bad)
sub
push
cmp
or
inc
(bad)
into
xor
je
stos
stos
addr16
test
retf
xor
xor
cmp
sbb
mov
ss
inc
test
and
mov
sbb
push
(bad)
adc
pop
ret
jbe
hlt
mov
cwde
jae
ja
cwde
jbe
repz
cmp
cmp
jg
repz
scas
in
mov
frstor
mov
push
push
and
sbb
jbe
movs
fmul
ret
inc
adc
xor
inc
push
push
push
movs
xchg
js
cmp
sub
pop
sar
add
cmp
sbb
inc
mul
ror
outs
adc
mov
stos
imul
outs
pop
dec
xor
movs
and
mov
cwde
jmp
ins
jecxz
mov
mov
stos
lock
pop
or
cmp
jg
cmc
dec
int
ror
mov
inc
or
imul
repz
pop
pop
ja
inc
jmp
fcmovnb
pop
mov
sbb
mov
out
bound
push
outs
nop
inc
push
sbb
inc
sub
cmp
sar
es
mov
jno
push
inc
jnp
adc
sub
sbb
jge
pusha
push
xor
pop
pop
in
cmps
imul
ins
cmc
lahf
push
(bad)
stos
xor
or
push
sahf
fdiv
dec
les
lea
out
sub
mov
mov
pop
scas
jmp
pop
mov
sub
fsub
fcom
ja
sbb
cmp
aas
out
pop
das
mov
inc
inc
sub
dec
popf
and
push
enter
inc
pop
ret
dec
xchg
popf
scas
fs
add
cs
data16
mov
shl
cmps
xchg
sub
jmp
montmul
cmps
inc
add
clc
adc
xchg
sub
ret
out
adc
arpl
lahf
mov
(bad)
invd
sbb
or
test
mov
cmp
mov
fs
fisubr
in
add
imul
lods
data16
(bad)
scas
fstp
xor
inc
lds
push
ret
fcomp
in
gs
repz
mov
ds
arpl
fistp
shr
jle
push
xor
mov
xchg
fld
sbb
daa
xor
pop
mov
loope
fs
ins
out
aaa
fisttp
call
add
add
dec
lock
dec
aas
inc
pop
mov
lods
pop
dec
xor
adc
frstor
and
repz
adc
push
test
sbb
jne
and
xor
stos
shl
stos
push
push
jbe
aas
in
or
xchg
jns
inc
shl
inc
jns
icebp
loopne
xchg
dec
pop
(bad)
jns
and
data16
lock
out
jl
dec
xchg
jp
sub
pop
fwait
daa
push
pop
daa
adc
inc
iret
daa
mov
je
in
adc
fstp
inc
lock
call
sub
fisttp
popa
inc
sbb
addr16
in
stos
in
loopne
outs
setnp
fnstcw
cmp
mov
xchg
jmp
xor
mov
or
mov
loope
dec
shl
add
ins
pushf
out
pop
xor
mov
pop
cmp
hlt
pop
jle
xor
das
ficom
cmp
loope
in
mov
jnp
cmp
rcl
imul
push
fxch
rdpmc
test
push
and
jge
push
into
sbb
xchg
mov
test
icebp
iret
cmp
xor
or
rol
nop
push
call
enter
lea
and
adc
cmp
cwde
cmp
ss
add
(bad)
jb
fstp
cmp
and
pop
push
cli
test
and
push
jmp
jp
mov
std
out
xor
inc
gs
dec
push
sbb
adc
pushf
dec
je
jmp
cli
imul
jge
mov
fs
cmp
inc
push
fsubr
idiv
mov
adc
gs
jo
pop
dec
xchg
lods
mov
not
add
mov
or
mov
pop
xor
cwde
hlt
pop
ss
xchg
in
cwde
repnz
xchg
lods
pushf
mov
push
outs
test
pop
out
sbb
fstp
cmc
lock
in
mov
add
push
stos
cmp
leave
dec
adc
cmp
xchg
push
mov
xchg
push
xchg
mov
mov
dec
mov
leave
stos
cdq
inc
ds
xchg
sbb
mov
mov
dec
jle
and
ret
push
jno
jle
adc
(bad)
sbb
xchg
pop
inc
push
lods
push
in
mov
movs
repz
je
and
mov
cmp
data16
aad
lods
cmp
bound
or
fmul
cdq
xor
adc
popa
mov
in
push
add
test
retf
cmp
push
add
ins
outs
and
xchg
arpl
adc
test
mov
cmp
shl
mov
xchg
dec
fs
(bad)
pop
cmps
adc
(bad)
repnz
xchg
(bad)
jmp
jl
inc
add
push
lods
jno
call
cmp
push
stos
add
fisttp
ja
or
pop
ss
mov
(bad)
push
push
inc
js
push
lods
add
or
pop
inc
fsub
das
cmps
add
mov
push
fcmovbe
fisubr
ja
retf
ss
adc
sbb
dec
cmps
mov
pusha
jge
ret
push
je
sbb
out
mov
cmp
das
out
call
adc
pop
add
jbe
xor
add
retf
pop
ins
xor
mov
mov
nop
mov
adc
add
mov
stos
out
mov
dec
fst
cwde
call
cmp
lea
lds
fiadd
pop
inc
ftst
test
pop
add
gs
rol
retf
test
fld
mov
xchg
ss
stos
ja
out
or
fs
sub
icebp
xchg
mov
sbb
mov
fldenv
mov
pop
sbb
mov
scas
fwait
push
add
cmp
stos
out
push
xchg
cmp
dec
and
pusha
inc
mov
psubusw
dec
mov
and
mov
enter
iret
fldz
jns
inc
mov
push
retf
pop
ins
inc
mov
(bad)
sbb
int3
out
int
out
xor
fsub
xchg
loope
push
mov
stc
fucomi
pop
aas
mov
nop
scas
push
jmp
push
add
push
pop
cmp
and
inc
inc
aam
dec
and
xor
sahf
adc
fistp
retf
sub
test
ror
out
cmc
movs
ret
mul
stc
inc
jle
mov
retf
inc
adc
aam
dec
xchg
dec
push
sub
outs
sub
bound
lea
add
push
popa
jae
inc
xchg
jne
add
fwait
add
cmps
pop
(bad)
arpl
xchg
jmp
ds
dec
out
(bad)
mov
aam
sub
mov
inc
loop
and
aam
je
aas
or
add
stos
stc
icebp
sub
shl
mov
mov
xor
pop
cmps
adc
cli
or
adc
xchg
xor
fadd
inc
cmp
gs
inc
fimul
jge
nop
lock
std
mul
jo
les
mov
dec
cld
hlt
push
inc
call
stos
fwait
movs
sbb
loope
push
inc
ja
packuswb
es
jbe
retf
mov
mov
dec
ds
es
sub
mov
test
mov
cmp
mov
pop
and
in
mov
arpl
cmps
fadd
in
stos
inc
dec
out
scas
push
mov
adc
mov
mov
rol
in
clc
fs
rcl
ja
stos
or
clc
repnz
jp
daa
pusha
mov
in
add
arpl
pushf
(bad)
(bad)
and
aaa
in
mov
cmc
out
cmp
adc
inc
sub
sbb
js
lds
scas
cld
cmp
outs
xor
mov
js
push
test
adc
jg
and
test
sbb
sub
movs
es
fwait
sti
aaa
xor
jbe
adc
je
clc
pop
jo
shr
push
mov
jns
sbb
jp
test
stc
dec
mov
cmp
sub
add
mov
mov
adc
ror
mov
repz
movs
xor
jbe
shl
adc
jnp
pushf
ja
or
in
xchg
mov
mov
hlt
imul
loope
lahf
out
pop
mov
mov
addr16
mov
cmp
push
xor
test
or
push
xchg
call
mov
test
add
stos
pop
int
pop
jge
dec
addr16
cs
or
add
adc
in
rcr
and
mov
or
(bad)
fidivr
mov
cld
gs
sbb
pop
xchg
int
arpl
xchg
pop
push
inc
push
and
and
shl
or
push
inc
std
inc
pushf
mov
push
dec
inc
sbb
and
mov
scas
bound
cmp
repz
rcl
push
(bad)
std
sbb
jg
mov
test
test
movs
enter
and
and
xchg
mov
jecxz
jae
push
cmc
mov
ret
pop
sbb
pop
add
jl
pop
addr16
retf
call
pop
mov
pop
cmp
adc
test
movs
(bad)
cmc
cli
pop
cmps
scas
fsubp
mov
jno
mov
jno
rcr
mov
push
dec
xor
inc
jle
loop
retf
xchg
jns
push
or
sub
stc
adc
test
test
(bad)
aam
and
or
jg
cmps
adc
add
sub
fcomp
mov
arpl
mov
pop
(bad)
cld
ret
dec
aad
cmp
repnz
adc
sbb
cmp
push
pusha
sbb
js
retf
push
rol
cmp
fiadd
stos
add
dec
xor
sbb
call
mov
xchg
mov
ins
fcomi
jecxz
xor
jl
mov
out
int
xor
xor
mov
scas
ror
sub
mov
sub
pop
sub
or
inc
push
mov
jmp
cmp
push
push
fld
ins
retf
pop
test
cmps
xor
ins
dec
dec
scas
dec
dec
sar
mov
jno
inc
cmp
pop
ss
fimul
dec
iret
mov
fs
loopne
mov
xor
mov
push
mov
sub
cdq
pop
or
bound
cmp
jmp
out
iret
loopne
dec
xor
in
out
test
or
ins
xchg
aas
mov
cs
pushf
ret
jnp
data16
ds
dec
jae
xchg
gs
(bad)
clc
ins
xchg
push
jmp
lea
leave
dec
xchg
loop
inc
cmp
pop
in
sbb
jbe
(bad)
mov
lea
sbb
and
rcr
dec
outs
bound
mov
adc
mov
sub
mov
sbb
fdiv
jle
cld
pop
movntq
out
and
retf
jle
mov
mov
jb
push
mov
fdivr
push
xchg
mov
sub
das
mov
fadd
xchg
push
outs
fdivr
or
jmp
mov
aam
mov
cld
mov
mov
or
stos
nop
aas
xor
mov
mov
loope
pop
xor
pop
sahf
pop
jmp
cmp
call
jmp
cli
push
or
cli
pop
or
inc
xor
mov
jno
and
ja
push
loope
retf
daa
ret
cmp
(bad)
ins
jo
leave
push
loopne
retf
sub
cmp
sub
loope
in
push
mov
rol
dec
fsubrp
jb
hlt
into
nop
fnstenv
lods
sub
mov
out
adc
mov
inc
rol
(bad)
aas
or
mov
je
test
(bad)
daa
mov
nop
int
test
bound
retf
adc
jmp
adc
lahf
mov
sub
cmp
adc
test
or
fs
sbb
adc
pop
pop
inc
sahf
bound
or
ret
push
hlt
xchg
jo
sahf
pop
push
and
ja
in
fucomp
daa
cs
(bad)
retf
(bad)
mov
mov
xchg
or
addr16
cmp
addr16
into
repz
(bad)
jg
jne
(bad)
cmp
stos
jmp
lods
clc
add
push
int3
shl
add
xchg
movs
stos
shr
adc
retf
cmc
ins
in
mov
add
ficom
sub
int3
stc
pop
popf
and
mov
jl
clc
pop
mov
lock
dec
lea
in
xchg
pusha
mov
pop
(bad)
std
daa
mov
jno
cmc
loop
gs
rol
add
mov
sbb
jbe
mov
jmp
in
or
cs
inc
mov
mov
jb
and
call
add
mov
ror
mov
cmps
pop
clc
jno
loopne
fucomp
outs
sti
jbe
push
sbb
mov
mov
scas
and
leave
sti
push
fidiv
cmp
or
and
mov
fist
iret
cmp
jle
mov
into
push
jbe
fidivr
xchg
cdq
into
lea
xchg
mov
cdq
cli
add
addr16
mov
mov
sbb
adc
xlat
in
cmps
bound
xor
inc
xchg
xchg
sbb
and
add
inc
arpl
pop
pop
fcomp
out
push
rol
rcr
push
mov
jbe
shr
pop
pop
jle
xchg
jb
fmul
mov
or
int
xchg
sbb
mov
scas
ror
xchg
scas
mov
add
paddsw
call
rcr
rcl
cmp
adc
mov
or
jmp
xor
and
inc
pusha
cmp
sub
repnz
test
(bad)
jnp
cmp
inc
inc
xchg
cwde
mov
stos
cmp
into
and
jp
outs
retf
daa
sbb
int
cmp
cli
ret
or
xor
xchg
sbb
mov
and
dec
add
ins
ror
mov
cli
jl
mov
mov
mov
xlat
inc
call
jb
sub
mov
sub
dec
cmc
xor
mov
jne
mov
mov
jg
cmps
add
(bad)
shl
jns
sbb
add
sub
xchg
fsubrp
add
fs
repz
sar
dec
shl
in
addr16
cmc
stc
xchg
xor
call
(bad)
pop
sti
fs
pop
mov
(bad)
jl
daa
pop
adc
scas
inc
pop
mov
out
(bad)
push
or
inc
or
mov
(bad)
or
mov
test
mov
mov
test
jmp
cmp
ds
adc
rcl
push
not
mov
daa
cld
sbb
push
sar
jne
hlt
xchg
mov
mov
fdiv
dec
mov
sbb
push
mov
sbb
sbb
or
scas
pop
jg
mov
push
bound
movs
push
push
mov
dec
inc
pop
sub
jbe
cmps
inc
or
hlt
mov
fisubr
scas
and
push
lods
xor
jmp
in
outs
adc
sbb
mov
jmp
sub
leave
push
imul
daa
ss
mov
inc
or
mov
les
pop
pop
stc
push
je
pusha
push
cmp
dec
xor
sbb
dec
mov
cmp
sub
mov
cmp
push
arpl
jg
inc
xchg
movs
sub
fdivr
aas
dec
pop
sub
mov
mov
pop
scas
int
jb
popf
pushf
dec
dec
or
pop
test
adc
scas
gs
or
pop
xor
jb
push
push
or
jle
jbe
inc
or
ins
mov
mov
cmp
dec
cmp
dec
jp
pop
inc
cdq
mov
rcl
fs
push
lock
adc
sub
jae
add
xchg
push
and
js
outs
dec
movs
sub
jle
xor
std
jo
push
jo
jbe
lods
nop
iret
jmp
adc
mov
cmps
xor
pop
out
mov
inc
mov
fs
xchg
mov
add
aaa
aam
rol
cmps
jmp
adc
jae
sub
mov
add
sbb
or
sbb
pop
stos
popf
add
sar
mov
mov
sbb
inc
jbe
push
push
or
imul
fimul
int3
push
aad
sbb
push
mul
pushf
out
jns
lods
xor
sub
jmp
jecxz
movs
push
and
sub
shr
mov
pop
xor
rol
dec
sbb
test
pop
out
dec
lock
cmp
adc
in
in
jo
ret
scas
or
push
add
inc
pop
mov
or
or
push
rcl
jg
mov
lahf
mov
and
fs
mov
push
add
xor
cdq
adc
bound
mov
add
aam
mov
mov
sub
sub
mov
dec
leave
jg
jbe
loopne
xor
test
xor
not
inc
fwait
popa
or
and
mov
popa
jge
mov
retf
pop
(bad)
jnp
lahf
or
cmps
pop
(bad)
out
cmp
shl
mov
xchg
cmps
mov
inc
and
sti
sub
or
and
ds
imul
inc
push
cmp
xchg
push
push
adc
in
cmp
out
xchg
jns
sbb
mov
sbb
aad
sahf
movs
and
and
pop
test
dec
call
adc
rcr
adc
mov
rol
xchg
push
mov
pop
add
and
jbe
cmp
inc
aas
mov
shr
es
cmp
daa
and
into
sbb
mov
ret
xchg
mov
cmps
bound
sub
rol
inc
scas
repnz
mov
nop
ret
and
xor
cmp
movs
mov
pop
test
adc
ins
cmc
and
sbb
dec
loopne
inc
xor
fsub
push
mov
pop
in
dec
(bad)
je
xchg
jmp
outs
iret
inc
scas
dec
lds
stos
dec
outs
stos
push
push
rcr
ret
outs
mov
call
repnz
inc
arpl
lock
test
push
dec
es
lea
xchg
jb
xchg
mov
mov
int
retf
call
push
jne
mov
jmp
mov
clc
out
in
mov
stos
mov
sar
inc
pop
pusha
mov
xchg
add
outs
cwde
add
pusha
add
jns
jmp
out
sub
mov
clc
mov
call
mov
movs
adc
lods
dec
mov
aas
cwde
pop
fwait
dec
mov
cmp
sbb
das
dec
sub
pop
dec
fnstsw
xchg
xlat
mov
pop
sub
adc
(bad)
mov
jl
pop
pop
inc
and
sub
or
xlat
jecxz
add
(bad)
out
movs
ficom
les
cmps
test
xchg
std
(bad)
adc
stos
cmp
pop
lea
je
rol
push
cmc
(bad)
fwait
pop
addr16
jne
loopne
outs
mov
ret
jle
pop
ss
sub
icebp
out
sub
mov
cmp
mov
call
mov
cli
inc
call
sbb
ror
aad
push
mov
inc
or
rol
loop
adc
sbb
ins
xchg
adc
inc
add
loopne
dec
adc
daa
daa
pop
or
ins
push
bound
cmp
push
aam
call
mov
xchg
sub
fnsave
push
test
in
xor
inc
inc
aam
jne
mov
lock
sub
jecxz
push
shr
sub
mov
lods
jnp
jno
add
test
aad
push
js
jns
dec
sub
mov
fs
stc
adc
cmps
daa
push
xor
dec
xor
pop
xchg
clc
push
cmp
cmps
and
jle
out
cmc
mov
in
cmp
mov
add
sub
loope
mov
jl
sbb
jg
mov
pop
or
fsubr
push
daa
popa
or
dec
cmc
jns
loop
dec
imul
scas
in
push
add
push
shl
aam
(bad)
aam
mov
jge
jb
lods
pop
cmp
in
mov
cmps
mov
(bad)
cmps
xchg
into
rcl
lods
movs
dec
mov
ins
scas
jl
or
sbb
xchg
add
(bad)
fiadd
imul
es
call
iret
ret
xchg
mov
icebp
push
sbb
fs
retf
test
loop
loopne
mul
adc
cmp
aaa
push
stc
mov
popf
movs
outs
xchg
lock
and
inc
mov
les
push
loope
xlat
inc
lea
enter
stos
mov
xor
pop
sub
sbb
pop
retf
jge
mov
xor
push
push
mov
jnp
clc
hlt
sub
push
dec
fistp
inc
out
dec
in
xor
cmc
sub
jno
les
jg
call
xchg
in
mov
jmp
popf
adc
lods
sar
inc
enter
mov
jb
mov
je
shl
mov
shl
fstp
cmps
movs
mov
or
cmp
pop
and
mov
mov
pusha
lahf
clc
jl
add
jb
or
sbb
push
mov
and
mov
jmp
les
mov
dec
into
mov
pop
gs
inc
std
pop
adc
dec
(bad)
scas
adc
aam
loope
inc
outs
mov
pop
jl
mov
cli
icebp
xchg
push
test
inc
jne
mov
scas
and
xor
fild
mov
dec
cli
lods
(bad)
loopne
addr16
aaa
xchg
sbb
xchg
int
in
sahf
mov
cmp
shr
ret
sbb
mov
dec
clc
pop
mov
dec
test
cdq
ret
fldenv
mov
enter
ja
dec
int3
sub
jg
mov
test
cmp
(bad)
cli
cmp
outs
mov
icebp
or
sub
jo
xchg
mov
inc
pop
ror
xchg
jmp
mov
dec
fist
sti
jnp
and
and
rcr
pop
test
mov
lock
cld
or
push
enter
fisub
cs
xchg
add
xor
jmp
xlat
xchg
fsubrp
out
adc
or
ss
leave
cmp
imul
push
cmp
add
jno
mov
cmp
bound
mov
aas
(bad)
js
ret
stos
(bad)
jnp
je
bound
cmp
pop
ret
sbb
add
jmp
mov
test
jb
xchg
pushf
jbe
sub
mov
add
fld
add
xchg
jbe
sub
sahf
push
xchg
jo
sub
mov
test
sub
mov
(bad)
lods
mov
pusha
pop
retf
loop
stos
sub
dec
dec
xchg
mov
cmp
inc
push
outs
add
repnz
xor
inc
cmc
fwait
xchg
pop
mov
dec
or
stos
jbe
repz
inc
scas
and
mov
fstp
mov
pop
jmp
adc
js
push
into
push
sbb
repnz
es
sbb
out
add
popf
ins
(bad)
mov
or
mov
mov
sub
outs
and
push
scas
js
inc
mov
cmp
rep
loop
dec
add
fs
pop
push
dec
xchg
xor
sub
xor
sub
sti
es
ja
popf
push
scas
adc
rcl
xor
aam
pop
loope
es
and
jle
xchg
jb
jecxz
mov
sar
sti
das
xchg
jnp
push
or
dec
sbb
xchg
fdiv
cmps
jmp
imul
mov
cmp
add
cmps
fs
out
jmp
je
mov
sbb
fistp
xor
xor
dec
dec
pop
xchg
pop
jnp
scas
mov
stc
add
fdiv
dec
shl
pushw
inc
mov
in
or
in
imul
pop
dec
push
inc
in
sar
cwde
dec
cdq
movs
sar
outs
bound
cmp
xchg
xor
aad
call
(bad)
in
es
cwde
sbb
sbb
and
out
int
inc
(bad)
aam
pushf
or
dec
pop
loop
es
push
cmp
mov
jle
xor
and
push
mov
bound
test
push
les
out
ror
mov
test
xchg
ja
bound
outs
jmp
mov
jmp
fs
xor
test
mov
loopne
mul
jle
cmps
js
ret
mov
and
fld
outs
dec
dec
cld
xor
mov
cmps
xor
mov
mov
movs
xor
and
sub
mov
test
jg
xor
test
jg
cmps
test
xor
lds
jmp
mov
lods
add
ja
adc
lea
xchg
cmp
add
push
nop
jg
adc
xor
cmp
adc
and
rcr
fsub
jo
jle
sbb
pop
getsec
or
sbb
repnz
sbb
and
pop
mov
jb
dec
pop
xor
xchg
dec
out
mov
adc
int3
push
add
outs
imul
pop
aaa
(bad)
test
imul
jne
ins
and
stos
dec
dec
dec
scas
push
jo
inc
push
dec
test
jmp
fnsave
ret
sub
sub
xor
push
out
shr
and
sub
aad
pop
out
sbb
sbb
ret
clc
xchg
xchg
imul
ja
dec
dec
inc
imul
push
ins
shl
std
mov
sbb
jmp
lock
add
cmp
sub
fisubr
outs
push
xor
fucomp
inc
call
add
and
dec
out
shl
in
cld
push
aam
cmps
jbe
sub
push
push
inc
jg
inc
repnz
mov
sub
mov
push
dec
sbb
popa
imul
xchg
lahf
adc
not
jmp
and
push
fisttp
scas
pop
fimul
xor
dec
loopne
sub
sbb
add
aad
dec
dec
imul
mov
dec
jno
xchg
aam
pop
js
loop
imul
jno
fwait
pop
sub
stos
xlat
sub
bound
jo
push
pop
adc
mov
aam
mov
and
dec
xchg
sbb
add
ret
ss
push
and
rcl
xchg
adc
push
xchg
shl
pop
shl
maskmovq
imul
popf
pushf
into
cld
(bad)
pop
and
jns
xor
inc
or
bound
sar
mov
dec
sub
inc
mov
push
cmp
outs
ror
ss
xor
push
ss
mov
mov
ss
fwait
movs
xor
sub
xor
push
retf
cmps
or
jp
pop
and
add
call
jl
sub
jmp
and
lea
fwait
stos
test
cld
idiv
aam
sub
push
jne
inc
sahf
push
mov
js
inc
call
cs
adc
jno
mov
sbb
mov
pop
jbe
jp
push
pop
retf
fnstcw
mov
rcl
sub
cmps
sar
push
xor
sbb
mov
lds
popa
loopne
imul
aam
movaps
lea
(bad)
out
pusha
xchg
cmp
mov
and
mov
mov
mov
clc
inc
or
cmp
movs
push
pop
mov
cld
int
out
(bad)
mov
cli
jl
or
jmp
pop
fist
dec
jle
adc
mov
ss
xchg
es
shr
sbb
scas
xor
and
movs
fmul
mov
sub
dec
xor
fdiv
xor
jge
pop
mov
mov
dec
das
xchg
fdivr
mov
inc
jne
jns
cmp
sbb
fnstenv
pop
fdivr
xor
js
push
test
jo
push
cmps
xor
cmps
cmps
xchg
fidivr
inc
ret
mov
xchg
les
ds
push
sbb
dec
inc
mov
mov
lds
mov
and
xor
and
or
jmp
pop
mov
mov
gs
mov
cmp
cmp
ror
rcr
jle
sbb
and
mov
inc
sbb
cwde
jnp
sub
push
and
xchg
pop
xlat
sub
xor
or
push
sti
xor
ror
jmp
mov
jno
cwde
xchg
in
xchg
in
in
adc
or
mov
ja
in
data16
retf
sbb
inc
test
pop
sbb
sbb
mov
xchg
mov
retf
inc
push
cmc
inc
sar
and
jo
inc
mov
or
mov
sub
ss
stos
imul
cmp
xchg
(bad)
pop
push
pop
in
cmp
pop
fs
out
dec
dec
out
lahf
mov
and
rcr
push
jmp
daa
mov
push
stc
pusha
fistp
mov
xchg
aaa
clc
cmps
iret
retf
cmp
out
iret
xchg
aam
out
push
js
adc
loop
aam
mov
pop
into
je
int3
loopne
std
pop
and
push
and
jo
jb
push
sub
pop
das
popf
sbb
loope
rcl
mov
in
rcl
adc
outs
inc
imul
pop
int3
lds
(bad)
stc
cmp
cwde
fwait
daa
pop
jge
test
pop
retf
xlat
inc
and
out
retf
imul
sub
fsubrp
inc
cmc
mov
out
xchg
outs
loop
call
mov
push
nop
mov
mov
mov
popf
mov
js
nop
scas
je
dec
popf
mov
(bad)
stos
fistp
mov
or
imul
mov
pop
or
sub
aaa
xchg
fldln2
or
out
jle
pushf
cs
pusha
xor
es
jmp
je
adc
cli
and
add
movs
inc
aaa
in
and
stos
repz
adc
sub
scas
xor
mov
pop
addr16
jns
sub
movs
dec
nop
jmp
(bad)
and
add
adc
jle
shl
or
scas
jle
std
rcl
adc
cmps
mov
or
dec
stc
add
push
js
cmp
mov
add
adc
stc
inc
lds
pop
add
lds
fnstcw
ss
add
pop
out
scas
push
jl
or
stos
or
ins
sub
push
shl
ss
adc
or
mov
pop
lds
outs
cmp
xchg
lock
icebp
pop
sub
push
mov
cs
mov
shl
fs
sti
lds
bnd
stos
sbb
retf
inc
mov
inc
(bad)
lods
iret
(bad)
mov
data16
jge
cli
jge
mov
ror
pop
mov
xor
xchg
sub
sahf
pop
pop
sbb
mov
dec
push
in
in
lahf
sbb
sahf
jg
inc
dec
call
add
mov
and
(bad)
cli
and
sti
mov
mov
(bad)
xchg
push
inc
lods
xchg
mov
movs
or
mov
(bad)
fdiv
sub
dec
mov
dec
push
loope
push
out
fild
add
xchg
mov
xor
sub
fld
mov
out
pop
jo
mov
dec
add
jns
bound
dec
jbe
xor
or
adc
push
iret
inc
bound
mov
or
movs
imul
mov
in
adc
rol
(bad)
in
cmp
sbb
dec
loop
sub
neg
in
stc
pop
das
push
adc
gs
addr16
xor
push
mov
mov
outs
mov
outs
xchg
in
sub
cli
push
pop
lock
sbb
imul
adc
repz
push
arpl
sub
out
push
xchg
loopne
dec
pop
nop
jge
mov
cdq
xchg
mov
jno
mov
cmp
dec
xchg
mov
popa
push
out
and
sti
test
push
rcr
mov
call
dec
pop
sbb
and
test
push
es
mov
sub
push
inc
push
cmps
imul
test
inc
dec
mov
scas
pop
pop
js
std
mov
clc
pop
push
sbb
push
push
adc
sbb
adc
xchg
mov
push
inc
mov
mov
jae
mov
rcl
or
add
inc
(bad)
mov
inc
and
into
jb
pop
sbb
push
cmp
jl
test
cmp
adc
ins
(bad)
sub
ja
push
mov
push
stos
ror
push
cdq
adc
fs
fstp
aas
xchg
out
test
or
mov
mov
(bad)
div
jecxz
adc
popf
es
cdq
test
scas
ret
xchg
dec
mov
icebp
mov
je
out
xchg
sbb
jmp
cmp
call
outs
cmp
sbb
sbb
or
sub
ins
hlt
repz
cs
push
test
loopne
jb
(bad)
xor
jnp
xor
loopne
sub
jmp
(bad)
frstor
movs
pushf
inc
sbb
movs
mov
popf
inc
add
adc
push
ror
mov
cmp
dec
dec
(bad)
popf
ins
mov
mov
ds
inc
mov
ficom
hlt
cli
push
jmp
mov
xor
test
lock
iret
sbb
repz
pop
jne
sub
in
nop
push
and
pop
dec
sub
mov
(bad)
mov
or
and
sbb
inc
adc
ds
rol
add
cmp
jge
aaa
dec
rcr
jg
and
sub
sar
addr16
mov
push
lock
dec
(bad)
loopne
mov
add
xchg
fnstenv
fst
adc
bound
push
cmps
jbe
xor
xchg
cs
arpl
push
dec
and
jo
mov
jbe
jo
gs
into
fmul
xchg
ins
push
in
mov
pop
push
fistp
and
and
int
lods
push
inc
adc
(bad)
adc
mov
ss
pop
loopne
jo
repnz
int3
pop
or
sbb
leave
in
dec
das
sub
mov
push
mov
push
inc
and
xchg
addr16
and
jo
mov
adc
fadd
test
loopne
fldenv
xchg
push
mov
leave
add
adc
jge
jmp
push
imul
in
mov
cmp
push
xor
rol
rcl
push
jg
icebp
xor
add
jg
inc
in
dec
cmc
xor
sahf
adc
jle
fs
ins
jb
sbb
cmp
ja
(bad)
dec
jns
inc
mov
pop
and
pop
sar
push
lods
cmps
push
or
xor
daa
push
test
mov
addr16
and
dec
ds
sub
xchg
jl
xlat
xor
fst
shr
push
inc
sar
jno
into
cmp
add
and
iret
lods
loopne
jbe
sub
push
arpl
cmps
aam
in
rol
mov
xor
stos
jl
mov
xchg
int
ret
cmp
fdiv
mov
fiadd
mov
ds
push
sbb
aaa
adc
inc
inc
push
adc
out
pop
bound
add
sub
xor
stc
leave
fdivr
inc
push
mov
push
pop
shl
ret
addr16
sub
lock
inc
mov
adc
xchg
ret
pop
sub
dec
mov
out
xlat
lock
xor
push
mov
dec
movs
rcr
stos
add
sbb
mov
scas
inc
repnz
loope
or
push
push
xor
imul
into
cmp
outs
jbe
push
adc
xchg
mov
adc
dec
pop
xchg
adc
push
jbe
bound
or
fild
xor
xchg
outs
fiadd
jl
cmc
cmc
sbb
inc
cld
ds
xor
jae
iret
retf
mov
add
and
mov
icebp
sahf
cmp
mov
jmp
rcl
(bad)
or
ret
pop
mov
mov
push
sar
xchg
enter
pushf
scas
movs
cmp
cwde
icebp
and
mov
lods
call
aam
sub
cmp
push
push
push
pop
cmps
jnp
cdq
popf
(bad)
les
lods
fld
xor
mov
in
mov
imul
dec
je
ins
fst
sub
fsubr
popf
(bad)
mov
mov
ret
adc
inc
xor
adc
cdq
imul
adc
pop
lds
movs
dec
jne
mov
jno
mov
nop
cld
or
pop
stos
bound
push
int3
and
ss
mov
fld
xor
movs
adc
jne
or
ficomp
ret
idiv
(bad)
pusha
mov
sbb
enter
mov
mov
xor
mov
(bad)
(bad)
aad
gs
jns
outs
xor
aaa
sub
ins
mov
in
sti
das
pop
out
loopne
jns
icebp
lods
sahf
into
dec
ins
dec
jne
push
inc
or
in
in
jmp
dec
or
mov
in
inc
or
mov
(bad)
js
rcl
dec
fistp
xchg
lock
sbb
adc
push
mov
push
dec
sbb
out
mov
icebp
sub
sub
jmp
adc
mov
les
hlt
ret
leave
js
in
pop
addr16
iret
dec
das
bound
push
mov
inc
jecxz
push
push
adc
cmps
lea
adc
es
and
inc
sbb
(bad)
repz
out
test
fidiv
pop
ins
xor
mov
dec
jbe
scas
lea
pop
stos
shr
bound
adc
inc
fld
sub
add
leave
mov
xchg
test
nop
rcl
dec
out
repnz
mov
push
jle
mov
aam
sbb
adc
xchg
aas
cmp
xor
mov
mov
mov
test
dec
outs
push
dec
adc
aad
inc
(bad)
popf
aam
mov
jnp
call
retf
out
jno
lods
push
jp
cmp
jb
adc
arpl
pop
pop
sar
and
bound
push
into
xchg
jmp
mov
ja
cmp
or
movs
jp
dec
adc
std
retf
das
dec
lods
push
loopne
icebp
scas
jno
out
in
inc
inc
pop
adc
pop
retf
push
push
and
xchg
adc
and
movs
sti
out
call
fs
neg
pop
cs
sbb
xor
xor
loop
jae
dec
mov
jmp
les
adc
fldcw
mov
scas
dec
lahf
arpl
fbld
jl
(bad)
sbb
xor
lahf
mov
idiv
pushf
inc
test
aas
add
hlt
inc
inc
or
pusha
cdq
jp
dec
nop
hlt
in
adc
dec
cmp
adc
pop
fisub
mov
mov
mov
pop
jb
gs
imul
push
jecxz
(bad)
push
cmp
movs
shr
ret
xor
dec
mov
pop
mov
xor
std
cld
scas
data16
xor
adc
xchg
mov
jo
loop
add
mov
xor
push
or
xor
sub
mov
or
stc
xor
add
nop
(bad)
stos
hlt
dec
pushf
mov
xlat
adc
pop
xor
cmp
lds
add
gs
mov
push
movs
das
inc
call
mov
int3
or
xchg
retf
and
(bad)
bound
jns
jmp
mov
lea
pop
test
test
adc
cmps
or
imul
mov
aam
and
lods
scas
imul
mov
popa
in
push
adc
mov
add
mov
cmps
xor
out
ret
aas
out
adc
adc
mov
ja
daa
sbb
into
std
mov
and
xor
push
loope
xor
xchg
in
mov
pusha
dec
add
inc
jns
fs
sbb
adc
(bad)
fcomi
(bad)
mov
mov
and
cwde
mov
jecxz
fnstcw
inc
mov
mov
stc
push
(bad)
mov
das
mov
mov
push
int
pop
cmp
xchg
inc
fdivr
add
icebp
test
sub
jne
adc
out
mov
jns
shl
adc
imul
jle
into
inc
leave
out
enter
mov
xchg
xchg
fs
lods
pop
push
stos
xor
xchg
test
cmp
cmp
add
jb
push
lock
call
retf
sbb
xchg
add
daa
inc
fst
(bad)
fisub
xor
retf
mov
dec
mov
cli
and
jp
push
xchg
out
retf
adc
and
mov
int3
fs
xor
out
fcomi
sub
cmp
fld
js
mov
mov
jle
add
xchg
push
ja
lock
fist
mov
ins
mov
test
cmp
jne
xchg
outs
mov
fistp
xor
jge
ss
pop
loop
mov
pop
pop
pop
jg
cmp
dec
cld
mov
xlat
sbb
je
inc
xchg
jb
inc
inc
add
pushf
shr
jno
dec
mov
mov
sub
sbb
or
imul
pushf
xor
mov
cmp
mov
(bad)
jo
adc
cmp
icebp
push
gs
cmp
pop
or
movs
lods
das
imul
mov
jae
jns
into
xchg
cwde
add
or
sub
das
fwait
mov
test
test
jmp
sbb
or
xchg
lods
or
repz
push
mov
cli
addr16
pop
and
dec
mov
push
call
cmp
addr16
(bad)
fcom
push
je
(bad)
fnstsw
mov
lahf
xlat
or
sbb
xchg
sbb
in
scas
push
in
hlt
imul
in
cmp
mov
mov
pop
xchg
sbb
or
push
push
gs
mov
cwde
cmp
mov
mov
bound
gs
mov
(bad)
jmp
adc
jae
push
pop
pusha
or
inc
xor
not
sbb
adc
adc
dec
and
ja
imul
inc
jb
jnp
fisubr
jg
mov
mov
fiadd
push
daa
xchg
imul
call
dec
dec
sahf
or
jp
in
adc
adc
pop
addr16
leave
fldl2e
push
addr16
stos
inc
mov
outs
add
sbb
push
mov
jecxz
in
inc
and
mov
fstp
(bad)
test
sti
ds
rol
ss
leave
jbe
fnsave
cmp
fsub
loopne
(bad)
enter
add
adc
fstp
sub
fucompp
mov
ret
push
fcomp
inc
inc
retf
aam
lods
sbb
dec
mov
pop
mov
repnz
loopne
call
push
movs
push
mov
adc
cs
dec
jne
out
add
fs
push
je
or
cmp
pop
push
cmp
mov
mov
or
push
in
retf
mov
sub
pop
pop
in
fs
test
mov
or
cmps
mov
add
(bad)
dec
xor
outs
mov
jo
fisttp
fstp
dec
sbb
add
mov
icebp
aaa
ins
fnstsw
sbb
clc
in
jo
call
pop
adc
std
jo
jo
clc
add
or
icebp
push
das
fidivr
mov
push
(bad)
ret
jo
pop
dec
ja
inc
sti
xchg
mov
ins
mov
push
push
(bad)
jge
push
pop
scas
shl
mov
fisttp
aaa
dec
add
and
fst
sahf
sbb
jmp
push
out
jmp
jae
push
out
jmp
imul
leave
mov
push
imul
sub
lods
js
jae
mov
mov
sbb
adc
mov
jl
in
pop
mov
pop
lahf
adc
mov
jle
mov
scas
mov
push
das
adc
shl
cmp
lods
loopne
test
ret
pop
icebp
cli
jmp
ret
retf
push
(bad)
repz
xor
xor
pop
mov
dec
xor
fimul
add
lds
pop
or
inc
push
popf
fnstenv
inc
out
mov
and
pop
push
lods
fldz
icebp
fxch
jns
adc
out
jno
lds
jmp
std
ret
sub
scas
jg
xchg
dec
add
imul
out
std
ror
mov
(bad)
dec
(bad)
loopne
cmp
or
pop
pop
cmp
add
inc
leave
das
mov
xchg
push
pusha
outs
test
adc
inc
(bad)
cs
xor
icebp
and
dec
cmp
mov
xchg
xor
sbb
ror
and
(bad)
in
xchg
fld
mov
add
ja
repnz
(bad)
fnsave
jmp
sbb
mov
ss
div
imul
(bad)
addr16
(bad)
pushf
or
push
scas
pop
xor
rol
gs
sbb
mov
cli
icebp
cmp
mov
jmp
pop
fsubr
(bad)
cli
sbb
cmps
repnz
out
mov
imul
movs
push
cdq
in
xlat
imul
addr16
mov
dec
mov
ficomp
outs
sub
pop
jo
mov
mov
xchg
adc
repz
mov
stos
adc
pop
xchg
jmp
stos
cmp
xor
jb
outs
mov
pop
in
mov
xchg
out
adc
(bad)
cmp
ret
stos
jne
loop
inc
nop
push
mov
xchg
cdq
mov
adc
and
dec
mov
jmp
sub
mov
out
mov
sub
out
ss
xchg
mov
sbb
outs
pushf
mov
push
iret
fist
bound
push
sub
ret
icebp
or
sbb
gs
aam
popa
mov
popa
or
sbb
fs
stc
add
add
mov
push
(bad)
fdivr
ins
xchg
arpl
mov
pop
pop
cmp
jb
pop
pop
xlat
cdq
mov
popa
ss
inc
add
inc
(bad)
ja
daa
xchg
in
xchg
add
mov
in
mov
push
mov
sbb
and
outs
cmp
stos
outs
cmp
ins
push
je
add
fcom
test
push
outs
push
pushf
cmps
in
pop
repz
or
xor
xor
mov
mov
test
sbb
xchg
popf
or
add
(bad)
cmp
and
test
or
stos
in
and
mov
fwait
mov
stos
in
xchg
push
inc
add
iret
cld
(bad)
mov
push
xchg
pop
inc
ss
cwde
mov
fisubr
push
push
add
dec
xchg
push
pop
imul
callw
cli
pop
mov
sahf
push
std
and
xor
xor
xchg
xchg
pop
test
pop
hlt
sbb
stc
mov
pop
hlt
sbb
jmp
icebp
ror
stc
push
mov
mov
mov
sbb
fs
dec
or
addr16
pop
adc
rcr
sub
push
movs
push
cld
loopne
or
mov
jno
xor
push
jnp
test
or
ret
shr
jmp
jle
out
xchg
sub
adc
xchg
(bad)
(bad)
mov
je
xchg
iret
add
jle
jbe
xor
out
jae
das
add
shl
mov
inc
xchg
test
xchg
add
popf
(bad)
in
lods
adc
add
push
pop
xor
xchg
aaa
mov
std
push
adc
add
add
mov
std
aaa
in
add
jnp
and
jl
popa
in
(bad)
mov
adc
pushf
rol
push
jne
add
sar
(bad)
nop
and
leave
cli
cmp
mov
jb
pop
fcomp
div
cmp
repz
sbb
mov
and
cmps
cmp
pushf
shr
xor
push
dec
test
add
fldenv
rcr
or
or
out
mov
movs
mov
test
and
repnz
dec
xchg
movs
jp
jno
out
jle
push
sbb
adc
pop
mov
mov
lods
and
cdq
jg
in
mov
mov
fs
jae
and
and
(bad)
in
sbb
push
add
dec
or
adc
xchg
mov
mov
xchg
ret
dec
test
mov
mov
cwde
or
sbb
mov
out
aam
lods
in
cmp
push
std
sbb
sahf
test
and
aad
sbb
mov
push
cmp
adc
dec
or
loopne
dec
jnp
scas
les
inc
in
push
bsf
mov
clc
leave
in
outs
adc
push
push
inc
movs
aam
inc
xchg
sar
(bad)
mov
ret
pop
pop
push
movs
shl
outs
xchg
dec
scas
cmps
sahf
inc
out
adc
jo
cmp
xchg
pop
pop
out
in
inc
jbe
add
mov
cwde
mul
ficomp
push
scas
and
xchg
sub
dec
add
out
out
dec
inc
addr16
div
adc
in
hlt
rol
cli
dec
sbb
imul
icebp
and
dec
mov
sahf
addr16
ja
or
ins
retf
cmp
rcr
adc
repz
sbb
aad
retf
shl
and
add
ja
or
das
shr
mov
rol
or
nop
inc
xor
mov
push
adc
sub
test
dec
inc
dec
mov
into
adc
js
dec
push
xor
add
cmp
imul
lahf
in
sub
bound
and
sub
xchg
call
or
mov
mov
add
test
add
cmp
repnz
mov
jmp
xchg
jmp
or
in
std
push
pop
sub
add
pop
xchg
jns
in
adc
jb
inc
retf
in
sub
sbb
sub
push
fs
dec
pop
sub
mov
imul
dec
and
pop
pop
pushf
mov
jg
pop
sar
cmps
pop
loop
shr
jbe
cmc
out
idiv
dec
jnp
dec
sbb
stc
test
nop
outs
mov
mov
inc
mov
nop
shl
jns
pop
pop
data16
ret
lock
sar
dec
mov
add
mov
push
dec
shr
dec
loope
stos
ret
xor
cmc
inc
dec
idiv
jbe
ins
sar
ret
imul
pop
imul
enter
xrelease
fstp
jecxz
(bad)
cmp
pop
retf
mov
mov
dec
scas
jmp
imul
mov
xor
nop
sub
call
xor
(bad)
mul
cld
adc
push
imul
js
movs
push
push
xchg
or
jmp
imul
mov
mov
add
sbb
stc
mov
cdq
mov
popf
mov
shr
in
pop
dec
dec
push
sub
jle
jno
or
sahf
ficom
ror
jg
ret
pop
fst
stos
pop
mov
mov
lods
icebp
sbb
pop
pop
bound
jns
imul
inc
sbb
imul
push
push
into
les
call
(bad)
pop
retf
enter
push
pop
sbb
fwait
inc
cwde
ins
in
cwde
psllq
push
push
push
cdq
pop
push
movs
sub
xlat
inc
in
hlt
(bad)
mov
cli
inc
push
stc
ds
out
out
mov
adc
sbb
and
lods
cld
mov
pop
stos
icebp
pop
cdq
hlt
dec
push
xchg
addr16
aaa
dec
loope
cmp
dec
ins
push
dec
adc
daa
fcom
test
add
inc
sbb
xchg
adc
cmp
jg
test
fwait
scas
loopne
test
mov
and
mov
out
shr
jns
jno
pop
repz
mov
(bad)
hlt
movs
mov
std
retf
push
shl
inc
xchg
movs
adc
cs
or
push
arpl
and
sbb
mov
xor
scas
(bad)
in
cmps
iret
cwde
dec
not
sbb
inc
ret
test
inc
adc
in
inc
shl
addr16
push
dec
cmps
push
xor
(bad)
test
into
mov
pop
loop
sub
in
sub
mov
dec
rol
je
pop
aaa
mov
adc
enter
pop
pop
jnp
xchg
inc
mov
clc
push
fiadd
mov
pop
cli
and
stos
retf
enter
mov
mov
sub
xor
or
frstor
jno
into
fcmovbe
mov
ja
(bad)
inc
mov
inc
sti
ins
int
gs
add
cmp
fld
data16
pop
pmaxsw
xchg
movs
scas
jecxz
jmp
scas
pop
fs
xchg
movs
xlat
dec
inc
and
int
and
cs
or
rcr
cwde
and
(bad)
int
mov
call
mov
ret
int
in
and
mov
fadd
mov
mov
inc
xor
das
pop
mov
jle
test
dec
stos
pop
leave
dec
fdiv
ret
jb
push
push
adc
(bad)
out
jl
inc
or
and
pop
push
cli
inc
lds
add
test
push
push
push
or
fidivr
int
xor
loopne
mov
and
es
adc
pop
inc
sbb
inc
sbb
lock
int
xchg
adc
and
push
dec
push
mov
adc
push
jecxz
enter
and
retf
mov
inc
jb
jnp
sbb
cmp
mov
mov
push
and
and
mov
mov
cmps
scas
xchg
fisub
adc
sub
pop
sub
adc
js
mov
jne
inc
jmp
call
pop
add
cmp
mov
loop
mov
or
dec
addr16
sub
pop
or
loope
imul
mov
sbb
push
sbb
jb
push
add
or
mov
cmp
mov
lea
je
aas
das
pop
in
aas
fbstp
in
ins
jmp
xor
or
das
lods
sub
fbstp
cmp
inc
out
cmps
lock
jg
jnp
test
jl
mov
movs
mov
push
sub
in
fistp
xchg
inc
loope
or
movs
xchg
xor
jmp
dec
cmp
daa
push
inc
dec
mov
xchg
hlt
and
cmp
test
push
adc
dec
ins
fdiv
sbb
push
int3
fild
mov
inc
pop
sti
jne
pop
(bad)
or
adc
and
mov
or
cmps
mov
imul
out
push
cdq
mov
(bad)
xor
cmp
popa
sub
mov
mov
ins
pop
lods
mov
inc
or
push
retf
rcr
repnz
stc
sbb
loopne
arpl
mov
scas
mov
mov
push
cmc
pop
pop
mov
repnz
jge
in
inc
mov
mov
jp
mov
out
add
jecxz
add
add
inc
or
mov
imul
arpl
out
sbb
mov
push
and
adc
int
rcr
mov
inc
xchg
std
xchg
imul
mov
sbb
sub
add
aas
jl
push
xlat
inc
adc
in
outs
xchg
(bad)
pop
stc
jle
pop
sub
lahf
gs
mov
jecxz
aam
cmps
fadd
adc
ins
mov
pushf
enter
bound
jecxz
cmps
scas
out
inc
cmp
arpl
jo
in
movs
loopne
mov
js
cmc
xchg
dec
cmp
cmc
pop
addr16
inc
cmp
fdiv
jmp
hlt
mov
push
lods
pushf
sbb
ret
push
ss
(bad)
jno
cmp
test
mov
cmp
pop
sar
adc
in
mov
and
xlat
lods
or
das
bound
adc
inc
and
jp
mov
aas
adc
and
jo
call
dec
(bad)
dec
pop
xchg
fucomip
not
add
nop
mov
test
enter
inc
ja
pop
inc
stc
push
inc
pushf
out
(bad)
addr16
loope
push
sahf
push
fcomp
xchg
(bad)
test
mov
nop
imul
xor
adc
js
xchg
sub
push
neg
stos
or
movs
js
aaa
push
daa
sub
(bad)
in
call
loopne
add
rol
mov
dec
mov
dec
outs
inc
xchg
inc
lea
in
pusha
test
out
adc
add
shr
sbb
jne
test
or
cmp
cwde
ret
hlt
push
pop
pushf
jmp
cmp
add
mov
inc
adc
imul
sbb
dec
xor
gs
push
arpl
outs
pop
scas
aad
inc
dec
fcomp
sub
mov
test
push
sti
(bad)
cld
mov
jbe
xor
jo
call
and
mov
leave
iret
and
das
mov
mov
pop
retf
add
das
(bad)
sti
pop
imul
dec
pop
dec
sbb
add
loop
lock
and
fmul
jb
sbb
in
inc
mul
mov
movs
dec
ret
sub
push
mov
push
imul
sbb
fldcw
int3
push
sub
out
jp
cs
jae
pop
push
mov
dec
fninit
in
jb
mov
jno
cdq
mov
xchg
into
lds
pop
dec
pop
add
fsubr
xor
cmps
adc
lods
and
dec
outs
xor
or
into
cmc
push
inc
sub
xchg
xor
addr16
ficomp
dec
dec
xlat
jcxz
cwde
repnz
inc
mov
popf
push
rcr
mov
xchg
sbb
mov
ds
pushf
push
out
dec
clc
mov
out
mov
inc
sub
xchg
cmp
adc
add
int3
(bad)
push
sbb
sub
into
icebp
inc
inc
in
adc
sbb
push
sub
mov
push
mov
push
sbb
add
mov
sub
inc
pop
nop
imul
ins
bound
ror
into
sbb
leave
jl
(bad)
fadd
jbe
xchg
dec
int3
mov
or
xchg
jns
(bad)
xchg
out
(bad)
(bad)
pushf
ret
(bad)
xchg
imul
sub
cli
fstp
es
(bad)
or
sub
add
aad
add
xchg
xchg
xchg
jecxz
adc
sbb
adc
dec
push
dec
mov
cmp
call
and
mul
dec
mov
hlt
call
dec
outs
movs
sbb
aaa
loopne
mov
mov
(bad)
clc
inc
inc
jae
(bad)
outs
scas
ins
mov
sub
cmp
ret
ja
mov
(bad)
cli
sbb
loopne
aad
mov
cmc
jecxz
jo
aaa
in
push
retf
xchg
adc
(bad)
cmp
push
addr16
div
pop
fnop
ficomp
cmp
lds
dec
pushf
jo
stos
addr16
push
into
jbe
aam
popf
retf
dec
sbb
sbb
sar
test
inc
mov
scas
retf
sbb
and
inc
cmp
pop
jge
mov
push
inc
jl
cmp
loopne
adc
dec
mov
in
add
mov
les
and
sub
movs
sub
leave
push
mov
scas
sub
jmp
push
mov
xor
ror
leave
ret
or
cwde
cmp
jbe
or
sar
(bad)
jne
sbb
out
rol
adc
repz
adc
(bad)
pop
and
je
dec
xor
adc
jp
sbb
mov
outs
mov
ficomp
fucom
in
pop
enter
(bad)
loope
add
call
shr
dec
shl
or
(bad)
retf
iret
xor
in
mov
inc
int3
push
sahf
(bad)
pop
retf
call
icebp
inc
cmps
cmp
adc
mov
cdq
xor
or
cli
cmp
(bad)
xchg
pop
xlat
mov
ins
lods
aam
mov
xor
jmp
cmp
mov
xchg
rol
sub
mov
pusha
mov
idiv
jle
xor
and
jecxz
push
cmp
rcr
ins
stos
les
pop
push
sub
add
pushf
mov
int
lock
inc
add
bound
and
fsub
test
ror
dec
or
inc
mov
mov
pop
or
xor
(bad)
mov
loope
test
push
ins
xor
(bad)
mov
sbb
shr
loop
xor
cmp
jl
cs
fcomp
xor
js
idiv
adc
ss
push
jle
cmp
jb
rcr
xor
out
ja
retf
push
cmp
stos
jbe
xor
or
(bad)
mov
scas
cli
add
mov
bnd
clc
dec
jge
fnstsw
push
add
pushf
cmps
xor
cmp
sbb
mov
loope
sub
imul
pop
faddp
jge
popf
cli
in
inc
ficom
inc
(bad)
push
mov
xor
push
popf
mov
fadd
icebp
and
and
mov
shl
jmp
xor
inc
imul
cmp
dec
enter
js
mov
jnp
stos
test
loope
adc
dec
stos
jmp
(bad)
loop
push
test
sbb
jb
ins
es
adc
pop
jg
push
in
outs
bound
leave
push
pop
(bad)
in
cmps
mov
ins
dec
(bad)
sar
cmp
fs
mov
js
mov
bnd
xchg
cmp
add
(bad)
stos
fs
push
and
push
rol
or
pusha
stc
dec
(bad)
adc
dec
sub
(bad)
mov
add
nop
bound
sti
je
jae
ins
out
xchg
and
adc
pusha
lock
scas
sbb
pop
mov
iret
bound
imul
(bad)
ret
add
dec
add
sub
cmp
in
push
gs
movs
dec
inc
sub
repz
add
ins
jmp
mov
cmp
jns
dec
dec
rcr
xchg
sbb
inc
int3
idiv
mov
jae
out
scas
mov
imul
mov
mov
adc
nop
loopne
sbb
pop
fisttp
inc
int3
dec
push
jle
ss
inc
shr
scas
and
push
pop
cmp
test
push
adc
lods
cmp
jle
pop
xchg
fstp
sti
sub
lds
xchg
enter
das
stos
imul
jns
sub
xchg
or
mov
mov
and
cwde
or
fadd
cmp
jae
pushw
imul
mov
lods
outs
ds
int3
cmp
dec
adc
loop
stos
cmps
jp
aas
cmp
mov
dec
dec
ja
adc
jg
xor
mov
push
lock
push
push
xor
ins
push
inc
pop
adc
jl
std
fmul
fsubrp
sub
outs
imul
inc
jae
pop
xchg
shl
inc
and
cmp
mov
sub
lahf
push
ds
add
in
inc
cld
push
cmps
push
ja
sbb
ret
outs
adc
cmp
arpl
mov
dec
mov
je
add
jne
push
add
push
mov
inc
inc
fisub
mov
pop
imul
mov
dec
push
and
scas
fdiv
popf
nop
fmul
adc
pop
jecxz
cdq
mov
ins
cld
bound
(bad)
xlat
ja
call
retf
mov
jl
xchg
jge
gs
dec
or
push
int
das
cmp
retf
jp
push
sbb
aad
jne
(bad)
jns
clc
rcr
lods
push
adc
loopne
aad
add
mov
call
pop
dec
xchg
es
jo
cmp
out
mov
nop
mov
sbb
in
push
sbb
ret
std
mov
add
jae
out
into
mov
outs
test
movs
sar
in
jbe
add
aam
mov
xor
inc
outs
push
dec
(bad)
iret
fs
enter
fimul
jmp
arpl
shl
jb
pop
lock
mov
adc
in
pop
cmp
(bad)
jne
add
inc
xor
xor
pop
mov
stc
push
lods
cwde
(bad)
lea
add
scas
mov
adc
jg
xchg
xchg
inc
jmp
daa
mov
jl
bound
pop
cmp
pop
fstp
mov
cmps
loope
mov
imul
fwait
push
inc
adc
loope
and
aad
sub
push
jle
lds
add
mov
out
mov
pop
jmp
inc
dec
push
pop
jnp
push
ret
mov
pop
pop
ret
out
mov
inc
jnp
xchg
adc
cdq
push
mov
clc
loop
mov
shr
xchg
and
enter
pop
xchg
and
sahf
jl
sbb
adc
dec
xor
das
jle
scas
mov
xor
mov
push
push
or
jmp
mov
clc
or
add
jmp
std
mov
jns
push
mov
push
and
xlat
test
dec
xor
lea
xor
jo
ins
or
lods
jae
ss
push
mov
mov
mov
iret
sub
or
adc
xchg
and
cmps
xchg
imul
xor
sub
mov
aaa
bound
inc
add
xlat
mov
mov
sbb
inc
or
cli
mov
cmps
mov
int
movs
lods
adc
ins
push
pop
and
(bad)
inc
cmp
inc
movs
jg
sub
jno
mov
or
outs
adc
pop
shl
and
movs
mov
shl
dec
and
dec
data16
cld
jae
adc
out
imul
dec
mov
jno
inc
add
inc
and
out
sbb
mov
xchg
push
adc
loope
jg
pop
pop
mov
xor
jns
cmc
fwait
(bad)
mov
sbb
dec
adc
dec
inc
push
pop
pop
(bad)
cli
fisub
and
inc
test
arpl
ins
imul
int
call
out
cmp
sahf
ret
dec
pop
into
aaa
test
add
inc
xchg
sub
cs
pop
repz
pushf
add
mov
clc
(bad)
xchg
sbb
fnsave
je
cmp
test
push
and
jmp
out
push
rcl
test
xchg
cmp
sbb
fsubrp
jmp
test
imul
arpl
cmp
jecxz
jbe
shl
loop
pop
xor
mov
loopne
dec
and
jnp
xor
int3
aaa
add
mov
sub
and
jb
popf
pop
inc
mov
repz
mov
pop
fidivr
iret
and
mov
addr16
or
sub
ret
and
inc
out
push
sahf
pop
cmc
out
jmp
adc
mov
gs
mov
add
xchg
mov
js
sub
push
and
sbb
pushf
push
push
(bad)
lea
xor
pushf
lock
retf
cmp
loope
dec
push
movs
js
sbb
shl
jb
sub
lods
mov
cmp
cmp
shr
retf
mov
cdq
push
mov
xor
jle
xor
out
mov
pop
xchg
imul
aas
(bad)
jle
jp
out
push
mov
inc
jne
lahf
cmp
mov
addr16
inc
data16
stc
add
sbb
int3
jb
scas
mov
fidivr
jo
mov
fcomip
les
cld
fsubr
arpl
cmp
adc
mov
loope
cs
std
in
lods
cmp
lea
mov
dec
rcl
ret
dec
mov
sub
shl
int3
add
push
call
sub
inc
dec
mov
sbb
test
mov
xor
movs
popf
sub
jp
jne
test
test
mov
dec
fiadd
xchg
add
xor
lods
sub
inc
ins
aaa
sbb
sub
push
add
cmp
shl
xchg
rcr
fidiv
mov
inc
and
cdq
cdq
pop
stos
push
sbb
adc
pushf
dec
leave
clc
fld
aaa
pusha
sbb
xchg
loop
leave
mul
dec
jbe
inc
sub
sti
push
mov
add
mov
sbb
xchg
loope
mov
add
mov
jmp
jmp
push
les
inc
jle
adc
jmp
mov
repnz
mov
sbb
push
test
div
sub
pusha
push
aad
push
pop
mov
inc
jmp
or
sub
lds
push
or
push
ret
pop
ret
aas
or
adc
xchg
jcxz
push
aas
adc
sar
jo
bound
mov
and
inc
sub
out
ficomp
inc
adc
cmp
adc
(bad)
cmp
cmc
in
push
and
test
imul
in
in
fimul
cmc
adc
dec
pop
mov
sbb
mov
push
jg
sbb
pop
jae
jle
fwait
std
aaa
xchg
jns
addr16
shr
ret
push
or
xlat
stos
jo
outs
jno
inc
imul
mov
cmp
xor
ss
cli
test
add
dec
mov
cdq
js
add
sbb
add
push
or
jmp
inc
in
sub
mov
mov
js
pop
xchg
jl
ret
in
inc
(bad)
jo
xchg
jp
xchg
jge
fcmovne
js
jg
ins
xlat
sti
sbb
fstp
push
jae
imul
dec
jbe
adc
mov
mov
inc
ins
jns
mov
pop
lock
xor
iret
out
(bad)
mov
mov
and
adc
shl
stos
rcl
or
mov
scas
jb
dec
adc
add
dec
mov
cmp
fwait
loope
jbe
jbe
cdq
sub
mov
jl
adc
inc
sbb
push
daa
pop
dec
dec
std
loop
push
dec
cmc
gs
pop
add
xor
push
fadd
stos
dec
xchg
out
cwde
int
jns
and
push
push
dec
retf
xchg
cmp
in
(bad)
ret
idiv
dec
mov
rcr
loopne
inc
call
sub
fstp
addr16
data16
jle
lock
dec
or
inc
cmp
(bad)
or
inc
mov
cld
cmps
stos
fs
cmp
push
pop
aad
sbb
in
cmp
push
jmp
jno
in
xor
jge
inc
inc
adc
jns
les
add
fnstsw
aaa
jmp
mov
inc
jg
xor
push
lock
jnp
ins
cmp
pop
jne
mov
or
or
pop
lock
xchg
ins
je
mov
fist
mov
jo
push
aad
shr
mov
push
mov
mov
adc
or
lea
repnz
xchg
inc
jno
pop
pop
and
into
leave
dec
xor
sub
and
jp
mov
cwde
xchg
push
sbb
std
sbb
inc
ja
pop
idiv
lahf
out
sbb
fs
inc
mov
mov
adc
xor
add
mov
ror
rcl
aaa
aas
sbb
scas
pop
and
push
jb
fld
jb
ror
mov
out
push
pop
frstor
cmp
jge
xchg
fild
dec
mov
fwait
jb
arpl
stos
inc
mov
lds
and
adc
sub
or
cwde
mov
sbb
cli
push
xor
mov
push
arpl
add
xlat
shr
push
pop
mov
sub
push
into
push
cmp
bound
push
into
sbb
hlt
and
hlt
das
es
and
mov
rol
clc
sub
iret
inc
retf
pop
inc
(bad)
jne
ins
and
inc
jae
adc
cmp
(bad)
jmp
loope
sbb
xchg
sub
(bad)
xchg
push
and
xchg
mov
push
(bad)
jno
or
push
and
pop
push
adc
jp
aam
mov
fs
mov
dec
lods
cmps
mov
cmp
and
adc
cmp
inc
xchg
sub
lea
cld
call
aaa
and
mov
xchg
push
pop
pop
bound
lock
pop
shl
cmp
test
push
push
push
ror
push
sahf
movs
aas
hlt
mov
lds
call
push
pop
movs
xor
dec
cmps
dec
sbb
sbb
add
sub
js
sub
(bad)
adc
out
movs
mov
loope
pop
icebp
adc
ret
xor
push
leave
jg
fcom
inc
pop
mov
fild
fucomi
sub
dec
add
mov
mov
lahf
cmps
gs
inc
cmps
lock
(bad)
push
jg
outs
cmps
sbb
in
arpl
jle
pop
cmp
out
cmps
sbb
jne
inc
pop
retf
sub
mov
xor
stos
outs
arpl
jb
push
jecxz
or
clc
or
sbb
jg
scas
sub
ins
xlat
cmps
fs
out
scas
mov
inc
rcr
cmps
jbe
repnz
imul
fsub
rol
shl
dec
add
inc
ret
ds
mov
rcl
fimul
iret
push
movs
icebp
repnz
test
add
jae
xchg
out
inc
arpl
nop
jo
and
inc
mov
ret
dec
or
es
aaa
call
mov
loop
xchg
lock
add
fnstenv
mov
das
bound
dec
adc
add
dec
out
lods
mov
dec
nop
ins
in
push
jne
addr16
sbb
sbb
std
xor
retf
and
cmc
mov
and
dec
call
mov
fs
sub
adc
in
push
les
repz
je
mov
retf
inc
stos
shr
or
pop
ret
xchg
arpl
jno
pop
mov
popa
cmp
rcl
xor
push
imul
fistp
sub
fwait
push
sbb
xchg
or
xchg
mov
add
imul
mov
clc
inc
dec
push
sub
dec
adc
sti
cwde
sub
push
inc
sub
out
leave
ins
jl
ss
mov
mov
add
sub
pushf
ins
dec
imul
call
xor
jbe
fwait
in
sub
and
adc
mov
push
cs
push
pop
jno
aas
sar
and
enter
sub
shl
xchg
pushf
movs
sub
lds
das
imul
cmp
jnp
(bad)
call
adc
and
neg
pop
lock
sub
push
mov
nop
xor
add
jns
pushf
jns
adc
cmp
(bad)
retf
inc
sub
sub
cmp
jge
push
call
xor
push
xchg
rol
or
movs
sub
in
add
or
outs
mov
add
(bad)
sbb
loope
xor
pop
ins
cmp
pop
and
adc
das
dec
mov
in
xchg
aad
lock
add
(bad)
jmp
call
push
and
loope
sbb
(bad)
or
and
pop
dec
mov
inc
scas
cmps
aas
push
push
fadd
or
adc
ja
mov
cmc
dec
push
call
or
shr
sbb
jmp
sbb
mov
in
clc
sbb
lock
(bad)
fstp
retf
mov
pushf
rol
pop
mov
repz
xchg
sahf
mov
or
inc
cs
xchg
adc
sti
cld
or
adc
cmps
xchg
enter
jne
xchg
mov
adc
and
iret
cmp
les
mov
push
mov
loop
adc
stos
mov
jo
outs
enter
jmp
aad
mov
pop
mov
jae
(bad)
and
addr16
dec
jmp
dec
leave
push
out
ins
and
xchg
mov
imul
push
pop
pop
jge
(bad)
mov
rcr
push
mov
jnp
adc
in
enter
or
sbb
ins
jnp
adc
lods
scas
jbe
rol
pop
jecxz
xchg
les
rcr
push
inc
(bad)
jno
fbld
stos
jle
sahf
inc
cdq
mov
push
ret
fucomi
mov
(bad)
mov
fyl2x
outs
not
add
jg
pushf
sbb
(bad)
out
sbb
adc
cmps
add
aaa
push
shl
mov
add
mov
daa
ror
ins
jmp
xor
push
sbb
jmp
jnp
pop
pop
mov
cmp
push
jo
inc
ins
mov
fidiv
xchg
inc
fcomp
bound
jbe
out
adc
dec
iret
fdiv
add
mov
and
leave
cmp
fdivr
in
or
and
pushf
cmp
sub
mov
(bad)
cmp
adc
push
mov
je
mov
mov
leave
cld
(bad)
test
jne
mov
mov
into
ja
cwde
xor
xlat
push
inc
loopne
popf
cli
mov
jge
cmp
and
cmovge
and
test
sub
js
inc
pop
xchg
(bad)
es
cld
dec
ret
cmp
sbb
ficomp
cld
jmp
mov
cs
mov
pop
jns
mov
add
inc
movs
or
or
add
cmp
repz
sahf
jecxz
mov
loopne
aas
imul
add
sbb
or
mov
popf
jo
popa
ins
sub
in
sahf
aas
cwde
jl
jle
sar
mov
in
sub
cmp
jmp
cmp
frstor
add
test
in
icebp
push
loop
aam
out
add
cmp
inc
push
jmp
enter
jns
ds
ins
sub
addr16
pop
mov
adc
pushf
mov
jmp
cmp
jp
cmp
push
(bad)
sbb
cs
push
sahf
stc
xor
and
lahf
and
mov
fdivr
in
xchg
lock
mov
mov
aam
rcl
lahf
(bad)
cmp
jecxz
cmp
jb
and
push
test
pop
mov
or
repz
xor
in
jno
mov
or
sbb
mov
push
sahf
fistp
gs
cmp
imul
jae
cmps
adc
adc
outs
add
mov
sti
pop
scas
push
fild
scas
add
jo
sub
ret
sub
sub
mov
cmp
push
rol
dec
cmc
inc
sbb
(bad)
jmp
jmp
arpl
test
cli
cmp
pop
imul
stc
xor
gs
lods
push
into
sbb
dec
xor
add
adc
jo
mov
and
leave
or
and
inc
xor
and
pop
xor
rcr
dec
add
dec
(bad)
jns
push
mov
mov
add
mov
popf
jbe
test
mov
inc
outs
cmp
popa
retf
xchg
jg
in
call
and
gs
adc
imul
or
pop
inc
dec
sbb
cmp
in
mov
js
pop
outs
(bad)
fsubr
clc
aas
shl
dec
push
daa
cdq
sub
fstp
push
dec
aam
and
out
cli
std
and
std
daa
mov
sub
xor
sub
retf
fstp
xchg
pushf
wrmsr
dec
dec
out
jb
mov
xor
push
cmc
inc
mov
test
xor
mov
and
cmp
dec
aam
sub
ins
and
sub
xchg
fs
mov
test
retf
dec
ja
xadd
inc
push
mov
enter
fcom
push
stos
hlt
shl
out
sbb
pop
add
inc
push
jo
in
pop
ss
shl
enter
rol
lods
cmp
push
loope
adc
and
sti
mov
cmp
xor
dec
fmul
or
xlat
jp
cmp
jno
neg
dec
retf
dec
cmp
aas
adc
add
div
jnp
add
das
dec
mov
and
dec
daa
push
mov
out
cld
xor
sar
jnp
cdq
sbb
in
add
aas
pop
aaa
mov
xor
out
push
xchg
inc
in
aad
inc
out
fisttp
jge
gs
movs
sub
add
pop
mov
movs
push
mov
mov
pop
inc
cmps
int
dec
call
les
into
mov
idiv
rol
and
xor
fldenv
jmp
sahf
add
aad
cli
in
test
add
idiv
adc
in
cld
dec
(bad)
sub
or
inc
mov
and
dec
push
mov
xchg
or
dec
int3
xor
sub
test
mov
cmp
adc
adc
lahf
cmp
aam
sub
fdivr
cdq
lods
mov
or
and
cmp
jns
test
xor
mov
jbe
test
push
and
or
mov
mov
repnz
xor
pop
lock
mov
imul
imul
and
inc
(bad)
push
adc
jecxz
mov
inc
test
mov
xchg
(bad)
adc
inc
fimul
les
inc
call
icebp
and
lds
inc
xor
push
(bad)
push
xor
data16
jg
push
(bad)
jl
mov
jne
sbb
inc
or
sub
dec
jle
adc
jbe
jmp
nop
jl
ss
nop
std
dec
push
pop
jbe
cmp
mov
stos
and
push
sbb
add
aam
jb
add
sub
out
sbb
sbb
cmp
mov
mov
js
xchg
js
test
fwait
inc
out
mov
xor
cmp
div
movs
repz
arpl
loopne
pop
(bad)
repz
mov
dec
inc
mov
aam
ins
mov
dec
sub
(bad)
push
cmp
arpl
sbb
lds
pusha
mov
gs
fidivr
xor
call
rcl
xchg
movs
ins
sub
scas
push
bound
lods
inc
xor
jmp
sub
cmp
rol
or
out
cmp
bnd
sub
out
adc
pop
adc
jns
popf
ins
nop
fs
sub
cmp
sub
(bad)
repz
call
xchg
mov
lods
rcr
add
jmp
mov
or
mov
sbb
cmp
es
cmovo
retf
sub
jne
inc
(bad)
call
fild
lods
cmp
ss
xlat
in
ins
mov
push
or
and
ja
sbb
pop
(bad)
ins
ins
test
sbb
dec
mov
xchg
cs
jmp
jle
jmp
movs
daa
jg
cmp
lock
iret
add
sub
and
inc
add
jge
mov
jecxz
rcr
cmp
retf
imul
imul
jecxz
das
pop
fsubr
or
fidiv
xchg
xchg
cmp
jmp
addr16
jnp
pusha
pop
nop
mov
cmp
fucom
push
repz
stc
push
sbb
movs
leave
pop
dec
icebp
jns
in
fldcw
and
shl
mov
or
movs
fcmovb
sbb
mov
inc
mov
rcr
and
nop
ja
stos
repz
aas
lods
not
outs
shl
inc
inc
pop
ja
mov
adc
jle
xchg
jl
mov
or
inc
fidiv
cmp
adc
xchg
mov
mov
lods
sub
inc
scas
data16
jb
xchg
fadd
push
inc
(bad)
push
cmc
dec
push
mov
out
cmp
mov
std
cmp
inc
add
nop
inc
inc
movs
jns
cmps
imul
and
mov
adc
ins
adc
daa
popf
ret
sbb
cmc
adc
jo
inc
and
cwde
movs
pop
or
cs
inc
xchg
cwde
adc
push
inc
push
sbb
stos
and
mov
or
(bad)
pop
sbb
pop
aas
gs
(bad)
in
daa
daa
(bad)
mov
pop
test
or
adc
jns
movs
(bad)
jnp
lea
fdivr
lds
je
inc
cmps
adc
imul
push
into
xchg
aam
test
inc
out
(bad)
jb
ins
add
mov
xchg
loopne
pop
or
mov
(bad)
jns
sub
dec
jbe
dec
mov
jbe
gs
outs
push
imul
rcr
jnp
cmp
and
out
dec
retf
in
dec
daa
add
cdq
aad
iret
mov
adc
cmps
fs
push
je
dec
inc
lods
data16
push
sbb
push
or
and
leave
or
mov
scas
push
and
sub
adc
cmp
sbb
sbb
(bad)
scas
dec
jnp
or
lods
pusha
lock
(bad)
js
test
cli
push
daa
je
xor
push
stc
jns
cld
out
(bad)
arpl
push
add
popf
sbb
push
xchg
push
test
idiv
ret
mov
in
arpl
jo
xor
es
dec
cmp
push
aad
fild
jno
in
and
or
push
fs
fisttp
mov
xor
popa
jmp
push
in
inc
not
dec
xchg
cli
imul
inc
(bad)
xchg
or
push
sbb
es
pop
inc
adc
pop
addr16
lahf
adc
inc
gs
sub
or
cmp
loopne
add
out
lock
push
xchg
mov
sbb
sahf
push
jmp
or
cmc
arpl
outs
cmp
pop
lahf
inc
je
ins
test
mov
fmul
movs
test
jge
dec
call
xor
cwde
mov
or
call
inc
sub
mov
sti
popa
enter
and
(bad)
popf
xchg
adc
inc
ins
push
shr
aaa
mov
movs
mov
ret
imul
mov
aam
fld
adc
js
lds
cs
ss
out
pop
les
pop
std
push
add
mov
sub
dec
and
xor
cdq
xor
and
mov
rol
xor
lods
ds
cmp
test
ret
imul
bsf
xlat
push
les
lea
sti
add
xor
shl
bound
(bad)
fs
mov
cli
sub
sbb
inc
inc
clc
je
ds
scas
mov
inc
loopne
push
out
jecxz
dec
cmp
pop
ja
lods
mov
sbb
cmp
mov
push
adc
out
popf
test
pop
fwait
in
pop
test
sar
jne
sub
pop
jg
adc
jmp
sbb
push
add
jg
jge
jmp
aad
sub
cmp
ja
call
les
mov
test
and
dec
push
dec
or
or
jl
add
mov
ret
and
push
sub
pushf
int3
push
inc
sbb
mov
jmp
jle
inc
and
or
popf
int3
jl
adc
push
repz
jmp
fimul
fst
xor
mov
jl
adc
dec
ds
imul
stos
jmp
add
clc
js
(bad)
popa
pop
add
call
mov
mov
or
pop
add
imul
xor
mov
mov
add
in
shl
addr16
out
dec
aam
pop
xor
inc
mov
test
inc
xchg
xor
mov
(bad)
inc
adc
imul
mov
pop
sub
in
push
inc
mov
fisubr
inc
cli
sbb
movs
jo
test
fsubrp
popa
jle
arpl
cmp
lods
and
pop
mov
lahf
mov
jae
mov
mov
cmp
and
push
loopne
xchg
or
xor
iret
xor
(bad)
and
cmc
xchg
jle
jno
and
cmp
push
mov
ret
test
imul
les
daa
xchg
aad
cmp
outs
adc
arpl
mov
call
ds
enter
ja
es
loope
sub
aam
inc
cwde
loope
sar
jns
aad
xor
mov
jmp
js
mov
cmp
ret
mov
cmp
or
dec
outs
cmp
push
mov
ins
xor
test
and
cmp
pushf
test
fbld
mov
pop
lods
cdq
call
ret
fnstcw
inc
and
jnp
mov
out
fst
ins
sub
mov
das
sbb
in
inc
add
ss
adc
and
jmp
xor
daa
sub
xchg
ins
push
ins
dec
jnp
in
push
or
pop
imul
xlat
jns
sbb
in
ja
dec
fnstsw
push
inc
adc
shl
(bad)
imul
out
aad
in
mov
fwait
jmp
push
mov
pop
jns
movs
dec
cmp
or
mov
push
(bad)
xor
push
mov
inc
mov
js
mov
popa
cmp
xchg
fild
jo
adc
cmp
les
out
(bad)
cmps
or
lea
inc
pop
cmps
loope
cdq
out
cmp
hlt
mov
mov
dec
push
imul
add
pop
jne
popf
iret
out
pop
lea
cs
fist
movs
in
popa
cmps
pop
mov
inc
cdq
hlt
(bad)
push
sti
test
cs
mov
stos
(bad)
(bad)
(bad)
ins
out
mov
out
dec
pusha
fucom
or
je
fs
movs
(bad)
adc
daa
push
pop
xor
mov
in
loop
push
shr
and
cmc
pop
xor
push
pop
sub
inc
jg
push
jge
dec
ss
xchg
sub
or
sbb
xchg
addr16
(bad)
imul
mov
cli
in
lock
mov
mov
cwde
les
mov
inc
jnp
in
das
mov
ficom
mov
push
int3
je
fld
aad
xor
mov
xlat
dec
popa
sub
cmp
(bad)
jecxz
mov
and
div
mov
aas
cld
cmp
sbb
imul
mov
int
mov
dec
cwde
xor
jo
inc
xor
stc
(bad)
jle
and
push
inc
push
add
mov
cli
and
pop
adc
stos
pop
jmp
xor
pop
je
sar
mov
ins
or
mov
out
dec
lods
stos
add
adc
sub
das
add
mov
mov
inc
adc
or
pop
mov
push
jle
out
mov
enter
mov
pop
sub
pushf
les
mov
xor
cmps
jbe
sbb
outs
pop
dec
leave
push
les
cmps
inc
popf
in
(bad)
jo
int3
sbb
repnz
or
das
bound
in
sub
imul
dec
xchg
lahf
sahf
push
dec
dec
xor
stos
out
mov
cmp
(bad)
and
sbb
movs
fs
cli
and
inc
daa
aaa
adc
xchg
xor
aad
pusha
add
addr16
stos
ins
mov
int
inc
mov
mov
mov
sub
xlat
cmp
xchg
iret
xor
js
stos
jno
shl
xlat
aam
stos
imul
mov
push
int
add
pop
and
sub
cmp
enter
dec
mov
cmp
dec
movs
cs
cmp
stc
xor
fadd
pusha
mov
mov
imul
push
cmp
data16
mov
fnstenv
lea
(bad)
sbb
les
idiv
lds
rol
ins
js
inc
jecxz
enter
sbb
mov
aam
mov
sub
fldcw
jmp
lods
(bad)
xchg
push
out
loop
hlt
adc
dec
xchg
mov
push
sbb
cmp
scas
cli
fadd
push
hlt
ror
push
jge
or
dec
pop
xchg
cmp
or
movs
xchg
and
pop
jp
fmul
sub
adc
pop
mov
fcom
sar
repnz
je
addr16
sbb
ficomp
daa
mov
jae
leave
xchg
jle
iret
mov
push
cmp
std
retf
test
xor
mov
jno
cmp
ds
shl
cs
jmp
repnz
mov
and
sbb
fnstsw
jg
or
ss
in
xor
adc
psrad
shr
mov
pop
popa
stos
dec
retf
cmps
outs
outs
out
and
xchg
pop
xchg
retf
icebp
pop
jge
test
mov
in
cmp
inc
addr16
(bad)
and
pop
xchg
mov
mov
call
shl
pushf
push
xor
push
ja
mov
das
fisttp
pop
xchg
dec
cmp
test
dec
mov
jns
mov
bswap
fmul
sbb
cmp
repnz
xor
fwait
xchg
jg
mov
mov
movs
or
loope
jecxz
ins
pop
ret
and
push
sub
xchg
add
bound
dec
clc
test
and
adc
test
push
stos
(bad)
fcomp
lsl
jo
push
adc
(bad)
jbe
push
push
xor
nop
push
ret
ja
fld
aad
mov
mov
and
sub
jne
inc
push
js
rcl
movs
inc
ds
outs
std
cli
movs
sbb
xchg
xchg
jb
inc
dec
add
push
sub
out
ja
sbb
sub
ds
gs
test
(bad)
xchg
push
int3
scas
cmp
xchg
sub
xor
(bad)
sub
push
das
dec
jb
push
mov
outs
arpl
imul
jns
inc
cmp
push
(bad)
pop
loopne
mov
dec
mov
arpl
imul
int
cmp
sbb
dec
xor
push
cmp
aam
sar
test
and
sahf
aas
mov
xchg
sub
jmp
pop
mov
cmp
cmp
jp
dec
cmps
sub
clc
or
xor
int
fisttp
pop
add
or
xchg
sbb
push
(bad)
shl
cmps
rol
shl
stc
push
sub
clc
nop
push
aas
fs
adc
aas
es
inc
out
ficom
out
mov
jecxz
mov
mov
fs
mov
add
push
adc
or
sub
push
mov
(bad)
mov
add
leave
xor
inc
sbb
test
mov
sbb
mov
pop
pop
stc
fild
jmp
retf
inc
mov
lods
push
add
add
jl
ins
mov
xchg
test
mov
xor
cmc
sub
bound
mov
add
mov
pop
(bad)
mov
movs
pop
arpl
mov
sub
outs
push
inc
add
inc
mov
mov
or
js
sub
je
lods
or
jecxz
sar
add
test
and
mov
dec
mov
test
arpl
ds
(bad)
push
or
cli
mov
jge
add
cwde
lea
scas
pop
xchg
push
cmp
jl
inc
pop
clc
pop
dec
fcomp
xor
fild
jbe
es
mov
or
sub
cmps
mov
pop
(bad)
ss
mov
scas
add
popf
and
jg
push
inc
in
cwde
and
(bad)
(bad)
bound
dec
mov
inc
push
sbb
and
ins
pop
int
push
mov
push
sub
dec
adc
mov
sbb
jmp
push
jmp
repz
fimul
shr
mov
mov
and
inc
cmc
pop
mov
xchg
cs
push
mov
inc
sar
sub
out
sbb
std
sti
jge
retw
mov
je
add
scas
inc
pop
adc
mov
sub
push
cdq
ins
imul
rcr
shr
out
cmovae
adc
push
fist
call
mov
(bad)
les
cmps
and
push
cwde
and
fstp
loop
xor
inc
and
fisubr
in
adc
pop
xchg
movs
pop
out
(bad)
iret
push
push
ret
adc
es
ja
sbb
fdivr
int
test
push
xchg
movs
or
mov
call
lea
jbe
cwde
lock
in
add
xor
ret
jne
sti
ret
jecxz
or
aad
and
xchg
and
addr16
in
or
fnstcw
and
cmp
push
test
or
fs
js
cmps
dec
mov
jb
in
cmps
lds
push
xor
lds
push
popa
push
(bad)
cmp
cmc
push
std
cmp
retf
fstp
das
test
mov
(bad)
sub
out
repnz
push
xchg
hlt
cli
jae
out
pushf
cmp
ror
lods
inc
pushf
das
jb
mov
push
test
and
sub
xchg
test
mov
xor
mov
pop
test
pushf
pop
shl
loopne
out
loope
in
xchg
mov
pop
cmp
ret
(bad)
and
jae
add
cmp
lea
popa
jp
mov
fsub
jb
add
arpl
add
pop
xor
or
(bad)
mov
push
pusha
mov
cs
aaa
stos
mov
cmp
fisttp
dec
fdivr
std
and
js
shl
call
mov
rcr
mov
inc
sbb
pop
xchg
mov
sti
jbe
cdq
retf
pop
and
xor
mov
scas
rcr
(bad)
imul
test
jecxz
and
fldcw
pop
jmp
test
xchg
xchg
cmp
xchg
mov
popf
mov
movs
or
pop
test
jg
inc
dec
and
jb
inc
jecxz
das
sub
add
in
xor
dec
cmp
push
add
inc
(bad)
popa
mov
jmp
xchg
sahf
out
mov
mov
ds
xor
mov
ds
and
outs
sbb
xor
pusha
jo
xor
aam
jns
xchg
jg
call
xchg
xchg
mov
cmp
xchg
pop
not
aam
cmc
lock
adc
sub
lods
adc
adc
jb
pop
inc
cmp
paddsb
lods
pusha
ss
dec
mov
sub
push
popa
jns
rcl
das
rcr
pop
ret
retf
aas
adc
or
fidivr
inc
call
loope
jbe
in
and
clc
pop
aaa
sub
push
imul
xor
sub
xor
mov
test
mov
add
xlat
les
xchg
fistp
add
jmp
adc
test
outs
cdq
pop
xchg
fwait
sbb
sbb
daa
sub
jne
(bad)
dec
cmps
mov
cmp
pop
test
cmp
pop
nop
sar
sub
fisttp
add
sti
or
out
adc
je
add
xchg
pop
push
inc
cmc
jo
push
inc
push
aas
cli
mov
repnz
xlat
sub
int3
mov
dec
jle
jmp
sub
add
mov
clc
aas
fsub
mov
int3
(bad)
xlat
add
add
retf
in
fcmove
dec
popf
(bad)
cmp
clc
(bad)
push
or
xchg
(bad)
cmp
int
push
outs
xor
(bad)
cmp
mov
inc
mov
xor
int3
int3
jge
loope
jne
rcl
push
pop
(bad)
mov
dec
mov
sbb
jle
add
pop
enter
cmp
sti
(bad)
jmp
xchg
jae
xchg
adc
mov
das
sub
mov
sahf
icebp
lea
inc
rcl
mov
jnp
ins
jae
fsubr
loop
arpl
jg
inc
cmps
push
push
push
test
clc
mov
add
(bad)
je
jg
add
push
inc
adc
mov
icebp
ins
fcmove
xchg
sbb
push
mov
lods
adc
sbb
cmps
mov
jecxz
push
sbb
xor
jbe
aad
or
and
jmp
ss
dec
mov
rcr
les
cld
fldcw
jecxz
test
cmp
cmps
sub
adc
inc
jle
sbb
nop
lock
inc
into
mov
fdivr
cmp
add
dec
mov
and
jno
mov
mov
fs
adc
iret
jne
or
fcmovne
aas
sub
cld
repnz
sti
sub
dec
ins
pop
dec
out
out
pop
data16
pop
and
clc
cs
mov
xor
xchg
in
pop
dec
lock
test
fst
mov
shl
(bad)
jbe
mov
in
hlt
jns
retf
cmp
lea
out
test
pop
xor
sub
mov
gs
add
push
or
sahf
jb
push
fisubr
aad
xchg
adc
inc
mov
and
cs
test
cmp
out
hlt
push
mov
add
imul
sti
out
jns
push
sbb
push
cmp
xor
les
jg
outs
iret
dec
out
jno
jnp
jbe
outs
xchg
in
inc
add
xchg
jge
imul
aam
jne
iret
cld
outs
xor
jbe
dec
fist
rcl
xor
mov
jecxz
mov
into
into
mov
pop
push
je
jge
ins
jb
loop
jnp
outs
fld
pop
jle
stos
jo
scas
movs
sti
pop
pop
push
jmp
mov
add
mov
ficomp
out
xor
scas
jo
(bad)
push
xchg
sub
dec
push
mov
mov
js
sbb
mov
scas
jo
fldlg2
push
mov
push
mov
dec
push
cmp
dec
jp
and
jmp
movs
enter
inc
(bad)
xor
push
mov
jge
sub
push
into
mov
mov
lea
(bad)
jns
(bad)
jge
mov
loop
mov
push
jmp
mov
fild
inc
adc
sbb
inc
pop
inc
cli
outs
mov
aaa
mov
sub
mov
jle
imul
or
add
adc
mov
ret
mov
test
test
pusha
cwde
shl
xor
leave
in
neg
int
popa
out
ja
jmp
cdq
adc
push
popa
scas
ja
or
call
inc
mov
jecxz
ret
cwde
mov
cmp
(bad)
lods
mov
push
out
sbb
sub
cmp
xchg
add
mov
sbb
inc
or
mov
jo
ficom
xchg
lods
jge
push
jo
jno
mov
fcom
repz
outs
cmp
mov
sub
in
ja
cmp
idiv
dec
in
push
ror
mov
cmp
ds
or
sbb
arpl
pop
cmp
imul
lods
sub
dec
scas
push
inc
jno
sar
js
mov
push
out
pop
(bad)
or
out
mov
cs
dec
outs
adc
retf
push
fnsave
push
inc
dec
push
daa
in
push
movs
sub
xchg
daa
mov
imul
pop
dec
rol
fdiv
xor
daa
lds
push
dec
sbb
xor
scas
adc
(bad)
repz
ss
mov
and
std
cdq
jecxz
es
xor
sub
iret
mov
loope
xchg
je
gs
xor
in
sti
mov
inc
cmps
or
clc
mov
push
fs
inc
imul
sbb
or
mov
movs
gs
pop
push
rol
outs
adc
fimul
out
jnp
mov
xor
sahf
fisttp
and
scas
fcmovu
pop
pop
jp
pop
push
xchg
hlt
adc
loopne
sbb
add
cmp
sub
(bad)
in
rcl
inc
mov
push
jp
movs
xor
ret
cmp
or
cmp
div
adc
or
jns
(bad)
loop
add
pop
pop
push
mov
dec
icebp
imul
loopne
dec
jb
lods
push
cwde
cmp
test
xor
sbb
pop
out
add
in
je
mov
push
(bad)
xchg
movs
rcl
inc
icebp
scas
sar
ss
mov
cmp
inc
jge
push
pushf
cmc
ja
add
je
add
mov
mov
shl
into
movs
loope
pop
add
popa
jl
mov
loopne
inc
aaa
sbb
(bad)
mov
push
or
shl
push
push
inc
xchg
es
dec
pop
popa
mov
test
jnp
imul
gs
gs
jns
jo
ficomp
pop
ds
mov
or
pop
in
xor
jmp
data16
ins
cmp
xchg
cmp
xor
fsubr
adc
or
ins
mov
shr
mov
sbb
cmps
pop
mov
pop
loope
aad
js
dec
rcr
xor
or
pop
pop
sbb
lods
push
shl
lock
mov
shl
cmp
sub
inc
mov
sub
arpl
sbb
ins
cdq
or
adc
add
jl
ret
sti
xchg
xchg
ins
push
inc
xlat
pusha
inc
std
xor
dec
jne
push
jecxz
pop
or
pop
inc
test
lds
mov
pop
into
xor
shl
or
ins
jecxz
mov
movs
push
fsubr
xchg
fdivr
jl
cs
test
sub
sub
inc
iret
cmp
ret
popa
xchg
sti
xor
adc
retf
xlat
mov
cmps
popf
ins
rol
jno
aaa
(bad)
in
mov
pop
and
mov
jge
pusha
cmc
leave
jns
daa
mov
mov
cmp
adc
ja
sbb
push
(bad)
fs
fs
dec
fisub
leave
addr16
imul
adc
retf
push
adc
fs
js
enter
add
sahf
sbb
and
pop
(bad)
not
jnp
push
rcl
fdiv
sar
dec
movs
loop
ds
mov
mov
cmp
in
sar
mov
aaa
adc
jne
jmp
aas
xchg
push
mov
mov
(bad)
stc
push
jno
cld
cmp
pop
fisttp
dec
adc
std
dec
out
imul
mov
mov
dec
jnp
scas
loop
fldcw
stos
xor
test
es
xchg
repz
or
jne
adc
loop
movs
push
cld
ja
sub
push
(bad)
(bad)
fnstcw
repz
jg
mov
mov
xor
daa
leave
mov
or
add
mov
xchg
fnclex
and
add
gs
out
mov
pushf
and
(bad)
pop
or
stc
xor
adc
jbe
sbb
mov
add
arpl
jbe
mov
xlat
repz
retf
dec
and
jge
xlat
xor
cmp
pop
sbb
std
dec
call
or
mov
inc
pushw
dec
jnp
dec
cs
push
jne
popf
in
cmp
push
cmp
test
sub
mov
shl
adc
test
not
(bad)
rcl
jno
int3
int3
mov
cmp
jbe
adc
sar
cli
adc
std
inc
push
add
jp
jle
push
mov
add
or
adc
inc
add
loope
mov
and
sub
in
icebp
xlat
mov
push
mov
pushf
sbb
call
nop
aad
data16
pop
xchg
mov
inc
xor
stc
pop
xchg
jl
pop
xor
lock
xor
das
popa
and
or
not
mov
pop
mov
jnp
(bad)
in
sbb
fdivr
daa
cs
pop
es
push
cwde
ror
pop
jns
adc
js
jl
test
xchg
retf
mov
or
push
push
xchg
retf
fwait
retf
arpl
ret
adc
sub
xor
adc
sub
push
ins
jmp
ins
dec
fadd
jne
es
outs
push
add
push
lea
dec
test
adc
or
mov
es
and
mov
mov
mov
inc
jne
sbb
inc
call
das
retf
add
mov
jae
sub
sub
mov
nop
fs
fwait
pop
mov
sbb
dec
mov
cmp
ffree
jne
int
adc
arpl
stos
cld
xor
mov
dec
xchg
inc
leave
aas
mov
leave
cmp
lds
loope
xchg
mov
mov
sub
imul
out
pop
sbb
push
jns
adc
dec
cdq
or
arpl
inc
xor
ss
mov
push
jne
data16
(bad)
repz
in
lock
add
push
or
sub
nop
xor
xor
out
shl
ror
jnp
mov
pop
mov
daa
push
in
fwait
cmp
push
rcr
jp
inc
cmp
ins
sti
pop
jle
(bad)
push
add
out
test
imul
js
mov
lods
aad
mov
sbb
lods
loope
cs
ss
les
pop
jbe
push
fistp
ins
call
adc
jo
cdq
inc
ret
fiadd
fnsave
dec
cli
je
fmul
out
dec
and
rol
jmp
fld
(bad)
cs
in
push
push
ja
js
cmc
cmp
mov
push
iret
and
hlt
dec
ret
or
mov
pusha
(bad)
out
pop
xor
sbb
and
mov
pop
or
out
lahf
sub
popf
aas
add
xchg
mov
ffree
rep
mov
test
cs
mov
sub
bound
addr16
lds
dec
dec
jns
xor
mov
jne
pop
into
(bad)
sti
mov
les
or
imul
(bad)
fst
test
int3
jg
rcl
sbb
mov
cmp
outs
or
dec
pop
pop
inc
xor
pop
addr16
jbe
add
fwait
test
and
add
das
cmps
add
adc
inc
(bad)
jecxz
or
out
jmp
jb
xor
sub
cld
and
(bad)
inc
pop
call
mov
loop
and
int3
xor
in
je
fdiv
push
outs
into
out
or
std
pop
test
xchg
jns
sbb
push
pop
add
sub
jge
iret
ss
or
fistp
and
pusha
mov
dec
add
xor
popa
out
xchg
out
mov
stos
pop
xor
fild
mov
sbb
sbb
jnp
outs
dec
int3
or
lds
mov
jg
push
inc
sbb
sub
sbb
jne
jle
lock
or
sub
sbb
je
jg
sub
jbe
add
mov
jnp
test
adc
fadd
sub
or
test
sahf
xor
daa
jne
inc
bound
data16
pmaxsw
cmps
mov
xor
fs
xchg
pop
mov
xor
cwde
jbe
inc
inc
daa
js
push
outs
repnz
jmp
or
adc
mov
mov
xlat
fld
repz
sbb
xchg
inc
sub
stc
mov
or
or
xchg
push
cmp
popa
popa
imul
cmp
and
adc
fidivr
add
push
push
push
pop
mov
inc
(bad)
mov
inc
sbb
ret
mov
adc
sub
(bad)
pop
sub
xlat
or
fs
cwde
ds
mov
pusha
jmp
mov
nop
sub
(bad)
aas
sahf
shl
push
sub
xchg
movs
enter
jge
or
popa
xor
mov
pop
mov
jbe
ja
cmp
sbb
cmps
and
push
jmp
jmp
push
fbstp
sub
inc
inc
dec
sub
(bad)
mov
mov
pop
(bad)
xor
adc
loope
cwde
sub
pushf
push
adc
lods
mov
or
ds
mov
mov
lds
pop
inc
mov
or
sbb
and
fcmovnbe
sub
xchg
sub
cmps
xor
outs
push
pop
pop
dec
dec
add
xchg
cmps
jp
out
inc
shl
arpl
lods
lahf
gs
sbb
daa
jb
jne
cmc
mul
cld
xor
mov
sbb
pop
dec
pop
int
repnz
cmp
cwde
loope
inc
lea
in
(bad)
jle
pushf
jne
dec
dec
or
les
and
bound
mov
mov
xchg
test
sbb
add
inc
dec
dec
or
sub
pop
jo
adc
xor
cld
mov
inc
dec
push
inc
mov
mov
into
scas
test
gs
jmp
sbb
push
pop
cmp
out
ror
and
sbb
les
test
push
fiadd
pop
pop
xor
cmp
retf
push
xchg
arpl
adc
pop
lea
push
sub
outs
mov
les
mov
loop
xor
loop
push
sahf
pop
pop
sar
and
test
imul
fstp
stos
ss
adc
into
xor
lods
pop
fdivr
pop
push
not
sbb
push
mov
sbb
dec
inc
cmp
adc
push
sub
das
inc
test
imul
dec
or
stc
cld
popf
retf
lea
jne
outs
scas
repnz
mov
xlat
inc
cwde
popf
lock
and
mov
cmp
rol
cwde
push
fstp
not
retf
xchg
mov
pop
cwde
loop
pop
dec
jmp
(bad)
xchg
sub
(bad)
pop
pusha
stos
dec
adc
into
add
mul
cdq
jle
(bad)
call
mov
mov
mov
inc
and
stos
pop
jne
fwait
mov
mov
iret
jnp
(bad)
hlt
fsubr
lds
mov
shl
push
mov
mov
push
dec
inc
sub
mov
push
pop
mov
add
cli
test
call
sbb
inc
inc
xchg
add
ror
ret
and
and
addr16
pop
data16
ja
jl
cwde
push
jbe
mov
in
mov
adc
fs
fs
fisubr
jo
push
ror
mov
cmp
daa
inc
dec
cmp
mov
mov
int
scas
shr
inc
sub
mov
out
cmp
add
lds
fs
clc
(bad)
out
dec
retf
push
loope
inc
test
mov
push
call
fs
inc
sbb
xchg
jecxz
inc
xor
mov
idiv
sbb
loop
jmp
fsubr
shl
inc
xor
repz
push
or
in
loopne
mov
sbb
fsubr
ret
jb
loop
leave
out
pop
and
pop
pop
adc
nop
or
xor
lds
mov
sbb
xor
leave
movs
addr16
sbb
data16
shl
push
outs
and
add
fsub
push
int
and
sbb
mov
movs
sbb
or
jl
cmc
push
fisub
call
cld
mov
xchg
ins
dec
les
xor
sub
int3
jp
sub
mov
stc
enter
and
imul
jne
fisub
je
test
xchg
imul
ds
push
test
xchg
mov
cmp
call
test
pop
arpl
sti
mov
add
cdq
repz
out
xchg
push
aaa
clc
add
dec
mov
pop
ds
and
xchg
sbb
inc
push
or
aad
imul
mov
dec
fs
pop
dec
xor
aas
in
aaa
rcr
call
xchg
leave
je
jnp
mov
jl
mov
pop
xor
pushf
sbb
mov
rcl
icebp
cmps
pop
dec
and
outs
dec
das
fcomp
xchg
cmp
or
or
lods
cmc
inc
dec
imul
in
out
ja
jb
clc
test
xchg
pop
push
jg
rcr
pop
cmp
pop
adc
pop
sti
retf
add
xchg
cwde
inc
inc
repnz
mov
out
ret
jge
mov
retf
cdq
mov
and
out
in
lahf
add
fisttp
add
push
arpl
xor
jnp
jae
push
ins
ret
or
rcl
mov
fs
dec
dec
cmp
cmp
jp
leave
in
fnstcw
or
push
mov
test
ds
in
push
test
inc
pop
ret
push
or
jnp
stc
dec
fisttp
stos
and
xchg
push
int3
aas
push
dec
mov
cmp
js
pop
mov
or
sbb
dec
jmp
inc
sahf
enter
adc
or
pop
gs
lods
lods
jle
adc
xchg
pop
or
aam
mov
sbb
mov
inc
das
mov
(bad)
mov
inc
mov
ret
mov
adc
mov
ficom
mov
mov
std
adc
in
pop
and
rcl
out
fimul
outs
inc
loop
sub
sub
sub
(bad)
int
call
or
popa
push
mov
push
xor
xchg
cmp
pop
retf
sbb
test
adc
test
xor
repz
mov
jecxz
stos
test
pop
push
out
pop
hlt
push
loope
inc
lock
add
(bad)
and
xlat
mov
les
addr16
mov
cmps
adc
mov
mov
push
xchg
out
aas
xchg
sbb
cmp
xor
loopne
int3
ins
sti
and
sub
call
inc
jl
ss
in
mov
cld
call
sbb
inc
lods
xchg
inc
or
inc
xchg
int3
pushf
shl
sbb
push
inc
out
mov
inc
xchg
arpl
lahf
jno
cmps
or
mov
in
fs
lock
mov
rcr
jecxz
jp
sar
shl
lock
in
mov
cmp
jmp
push
jae
addr16
pop
iret
cli
in
sbb
inc
pop
ss
xor
sbb
jo
icebp
call
add
mov
lock
mov
push
jno
jl
dec
jns
(bad)
dec
pop
bound
inc
mov
push
aam
leavew
popa
sbb
jge
sbb
(bad)
and
imul
jp
mov
pop
and
add
mov
hlt
loope
dec
jae
retf
adc
in
dec
or
pop
mov
and
add
dec
mov
jecxz
add
push
mov
xchg
push
mov
push
std
out
or
mov
add
jmp
ja
imul
mov
dec
dec
jo
fwait
push
dec
mov
or
sbb
push
inc
or
dec
jb
sub
icebp
sar
inc
movs
fwait
inc
push
mov
sub
jle
dec
jne
push
inc
aam
ss
(bad)
push
mov
in
mov
xor
or
adc
fstp
and
cs
jge
mov
and
and
jae
xchg
ss
adc
dec
das
jp
push
xor
loopne
inc
or
pusha
cld
sub
stos
ss
mov
and
les
sbb
into
inc
pop
aam
xor
mov
fwait
and
push
push
adc
and
scas
add
adc
fsubr
div
in
or
pop
aaa
sub
sbb
or
lock
inc
xor
movs
ret
adc
lahf
iret
dec
ror
retf
dec
and
push
test
push
pop
jg
add
inc
sub
shr
mov
into
(bad)
push
mov
jns
bound
pop
mov
pop
push
sbb
xor
mov
test
jle
jb
sub
daa
(bad)
xchg
mov
jns
push
pop
in
lds
ror
daa
jmp
stos
mov
iret
xchg
out
inc
or
or
dec
inc
push
movs
dec
pop
and
jg
push
out
xlat
mov
loopne
dec
and
mov
lds
es
clc
pop
aam
inc
mov
inc
bound
jns
stos
int3
pop
movs
add
xor
pop
jmp
cmps
nop
push
mov
pushf
ror
jmp
mov
dec
in
push
shr
outs
adc
int
out
sbb
(bad)
push
mov
(bad)
ficomp
xlat
xor
sub
push
movs
cmc
ss
xchg
cmp
xor
mov
jb
mov
iret
sbb
adc
or
adc
in
cmp
ja
add
cmp
xor
das
push
sub
es
xor
movs
fwait
cli
pop
div
hlt
cli
pop
inc
xchg
pop
pop
fsub
clc
jo
mov
scas
mov
(bad)
jae
pop
fiadd
cwde
push
or
sub
jl
scas
sahf
mov
xlat
ret
mov
ss
xchg
test
mov
addr16
push
(bad)
fadd
push
inc
jmp
ins
aas
lods
ror
call
dec
dec
mov
mov
or
adc
cdq
shr
mov
adc
out
mov
loope
xor
out
leave
xor
mov
dec
fisubr
pop
push
les
ins
shr
xor
ror
jbe
addr16
jne
stos
xchg
ins
xchg
rol
test
iret
lea
inc
in
outs
cs
nop
aam
cmp
iret
jmp
inc
test
inc
repnz
push
and
pop
jl
adc
lock
sbb
jle
mov
outs
pop
leave
sti
out
add
loope
lods
shl
cmp
(bad)
pop
dec
dec
sbb
je
sti
xor
push
pop
xor
loopne
cmp
pushf
div
cmc
stos
add
mov
mov
rcl
call
push
std
jb
stos
xchg
call
call
out
inc
scas
cli
out
xor
(bad)
imul
out
inc
(bad)
out
jmp
inc
(bad)
daa
dec
out
out
nop
adc
lea
mov
mov
add
scas
inc
jl
and
sbb
jno
ficom
sub
test
jnp
sbb
sahf
cmps
cmp
es
(bad)
in
loopne
mov
mov
xor
shr
ret
pop
fcmovne
enter
cdq
mov
aad
and
or
sub
das
sar
sub
mov
inc
stos
inc
scas
pop
push
enter
mov
sahf
out
xchg
xlat
xchg
push
adc
sbb
adc
and
dec
clc
mov
inc
push
nop
push
inc
stos
dec
and
cmps
jbe
fidivr
xor
imul
or
ins
and
jnp
add
mov
cwde
inc
popa
imul
cld
pushf
jb
std
mov
inc
push
(bad)
push
lock
xchg
(bad)
jmp
outs
pop
dec
adc
pop
lds
or
pusha
cmp
shl
push
dec
dec
outs
test
dec
aad
call
inc
cs
jmp
enter
pop
fsub
(bad)
cld
cmp
and
sub
sub
push
lahf
pop
inc
cmp
xor
fsub
xor
xchg
push
cmp
fs
push
jge
jo
mov
xor
xchg
gs
add
mov
in
sub
jne
ds
ror
iret
jmp
cmc
fistp
mov
out
mov
inc
mov
jns
ss
mov
retf
dec
mov
pop
pop
xor
lock
call
xor
mov
cmc
in
out
out
loope
ins
xchg
mov
cmp
add
call
pop
jmp
dec
sub
push
and
pop
inc
jb
(bad)
add
stos
inc
test
into
test
shl
dec
jo
imul
cdq
cld
sbb
imul
mov
fmul
frstor
retf
and
not
or
mov
mov
dec
push
or
sub
add
mov
lods
ret
dec
mov
outs
popa
adc
jmp
mov
or
add
out
test
popa
xor
dec
or
xor
das
arpl
mov
push
xlat
in
sbb
sti
inc
nop
(bad)
mov
inc
dec
jne
jg
xchg
outs
dec
mov
movs
scas
das
ss
sbb
scas
fisttp
sahf
adc
arpl
mov
mov
out
adc
cmp
lea
push
add
or
data16
shl
xor
pusha
frstor
mov
dec
xor
mov
jbe
mov
inc
sbb
mov
mov
dec
inc
mov
ss
dec
sbb
mov
in
inc
aad
push
lds
shl
push
sar
jecxz
add
sub
sub
shl
mov
out
aaa
xchg
mov
fmul
cwde
movs
xor
ja
xchg
xor
dec
je
pop
imul
sub
test
(bad)
push
mov
jmp
and
xchg
or
fidiv
and
push
sbb
mov
xor
adc
fwait
jns
or
pop
nop
and
or
in
add
sbb
or
mov
xlat
and
jl
dec
sub
push
jp
mov
repz
mov
outs
xor
and
data16
in
nop
xchg
daa
ficom
mov
sbb
pop
loop
ss
mov
jg
(bad)
dec
xchg
mov
popa
sbb
jmp
sti
pop
lods
pop
push
lds
aam
jns
std
jmp
pop
mov
out
add
cmp
imul
xlat
sub
(bad)
and
inc
stc
gs
cmps
mov
dec
jp
jae
ror
push
gs
aaa
inc
cmp
in
adc
adc
cmp
popaw
aaa
inc
xchg
lahf
sub
jl
nop
xor
push
jle
adc
xor
inc
int
jbe
imul
sar
jbe
addr16
mov
call
js
fs
loope
and
cmp
push
retf
cwde
push
(bad)
mov
ret
or
scas
in
mov
out
jnp
pop
aam
jge
cmp
mov
popa
sbb
mov
push
fwait
push
jns
mov
mov
xchg
sub
jnp
sbb
mov
mov
neg
sbb
mov
push
inc
cmp
xchg
jmp
and
fild
inc
das
sub
dec
xor
mov
pop
jb
or
jecxz
mov
fidiv
push
jnp
(bad)
xor
add
adc
dec
out
fs
stc
mov
mov
xor
inc
sbb
xchg
mov
test
retf
xlat
cmc
add
enter
or
out
jle
lock
shl
sub
jl
mov
adc
sti
cwde
adc
sub
stos
jne
movs
pop
jns
enter
xor
cmp
popf
jp
mov
(bad)
mov
(bad)
mov
inc
mov
loop
js
idiv
sub
cli
mov
push
(bad)
mov
jp
es
into
pushf
sbb
sub
and
inc
adc
xchg
data16
and
ret
mov
(bad)
jnp
cmp
sbb
sti
sti
ja
mov
aad
pop
sbb
jmp
fnstsw
inc
(bad)
(bad)
jmp
xchg
inc
xchg
jbe
jmp
sti
sub
fist
ficom
sbb
pushf
adc
shl
xchg
ja
cwde
inc
cmps
xlat
jp
or
test
rol
inc
pop
pushf
lods
outs
pop
or
imul
scas
or
mov
aad
fimul
and
cdq
bound
test
dec
jb
stos
fcom
push
popa
clc
add
cli
sahf
stc
lahf
repz
pop
mov
das
pop
mov
adc
aas
fist
push
mov
out
push
or
adc
mul
sbb
mov
test
scas
fsub
aam
pop
dec
pop
jno
aaa
ficom
jmp
push
fs
mov
jmp
xlat
cmps
fcomp
hlt
xchg
lods
adc
inc
loopne
cmps
adc
clc
ds
in
mov
xor
call
sub
sbb
repnz
inc
add
ret
out
imul
mov
and
adc
js
fstp
jmp
add
sbb
xor
mov
dec
pop
gs
les
ins
inc
dec
dec
imul
dec
enter
sub
(bad)
jb
mov
jg
pop
xor
fild
lahf
push
jns
stos
xchg
dec
cmp
fst
mov
pop
fcom
add
jae
adc
and
cwde
dec
stc
stos
movs
shr
adc
das
mov
sbb
call
sbb
iret
add
pop
add
inc
imul
push
pop
rcr
dec
and
mov
dec
mov
(bad)
lock
ins
pop
xchg
test
pop
retf
inc
push
xchg
gs
push
jge
cdq
call
add
push
pop
jecxz
sbb
sbb
mov
jbe
adc
test
neg
push
jmp
not
imul
scas
mov
dec
mov
jmp
ja
xor
cmp
lahf
jbe
add
add
sbb
push
jno
(bad)
jo
jae
movs
out
cli
sub
xor
cmp
xchg
(bad)
int
adc
movs
and
inc
loopne
popa
or
jg
mov
scas
sub
jle
cmps
xor
or
stos
lahf
pop
xchg
nop
out
imul
sbb
cmp
lahf
push
fild
xchg
or
or
pusha
push
aam
fisttp
xor
xchg
add
push
enter
inc
add
sub
xor
fild
mov
mov
shl
repnz
int3
inc
cmp
lds
imul
in
scas
pop
mov
xlat
rcl
dec
dec
aaa
scas
mov
pop
xor
mov
push
movs
sbb
push
jmp
js
cdq
adc
aad
mov
in
ins
pop
add
add
add
pop
xchg
push
addr16
or
xchg
add
mov
add
pop
out
mov
fwait
mov
mov
push
stc
sar
lock
ficom
icebp
enter
shl
int3
std
push
(bad)
mov
xchg
jmp
bnd
cli
jge
inc
xchg
ret
sub
mov
(bad)
iret
ja
repnz
outs
mov
jecxz
(bad)
cmc
rcr
sub
jne
push
cmps
mov
aas
cdq
pop
test
pmulhw
ins
jns
mov
es
mov
stos
and
pop
pop
pop
test
in
div
xor
loopne
push
in
mov
mov
push
inc
pop
stc
ret
cmp
loopne
jg
popf
fdivr
es
mov
stos
jae
pop
scas
cmp
pushw
push
(bad)
shl
xchg
movs
sti
cwde
add
inc
dec
mov
and
dec
iret
mov
fild
movs
push
jbe
std
sbb
xor
push
sbb
std
pop
adc
mov
arpl
adc
cs
cmc
clc
repnz
xor
jle
add
arpl
or
ins
daa
scas
mov
ja
loopne
sub
out
dec
cmc
and
inc
push
sub
popa
dec
retf
out
dec
or
mov
je
out
aam
sub
retf
xchg
outs
cmc
push
popf
jae
loopne
adc
imul
adc
sbb
cwde
inc
jmp
inc
iret
adc
xor
scas
(bad)
xor
out
jno
ret
aaa
mov
mov
push
es
lds
jno
sti
hlt
inc
call
aad
or
fsubp
ins
cld
sbb
imul
leave
inc
out
call
test
xchg
fdiv
call
(bad)
push
dec
sub
add
xor
(bad)
and
xchg
aam
adc
mov
push
cmp
enter
rol
inc
inc
xor
sub
ss
mov
pop
outs
push
pop
sub
and
lods
sub
push
xchg
pop
les
fs
pop
ja
cmp
(bad)
cld
sbb
je
jge
test
stos
ror
xchg
inc
inc
sub
iret
or
sahf
jmp
mov
aaa
enter
mov
sar
dec
jo
inc
jo
inc
ja
stos
sub
div
sbb
jnp
(bad)
arpl
mov
fdivr
inc
sub
or
pop
clc
or
pop
inc
push
fwait
gs
out
js
sbb
adc
jne
idiv
in
ins
sahf
imul
and
push
fs
dec
dec
and
repnz
addr16
or
pop
mov
pop
icebp
mov
and
and
dec
arpl
es
cwde
in
and
sub
stos
fxch
retf
xlat
sub
mov
test
adc
rol
xchg
cmp
dec
mov
dec
dec
adc
mov
xor
pushf
inc
sub
mov
mov
push
jb
lahf
mov
adc
xchg
ficom
imul
(bad)
mov
inc
adc
push
sbb
inc
ficom
test
pop
jmp
add
popf
scas
push
inc
adc
fsubr
out
jbe
int
call
dec
fiadd
xchg
jb
pushf
fadd
or
(bad)
outs
dec
or
repnz
lds
ins
clc
sub
daa
das
aad
imul
leave
pop
pop
hlt
sahf
push
sub
dec
out
or
movs
stc
les
sub
popa
fidiv
mov
sub
xor
pop
jg
out
jo
and
mov
mov
arpl
cld
mov
adc
inc
repz
pop
rcr
or
fbld
add
or
sub
idiv
dec
xchg
loope
xchg
push
hlt
push
dec
sbb
adc
mov
and
(bad)
dec
push
jmp
fsub
pop
mov
inc
push
add
push
pop
mov
ja
sub
mov
pop
stc
shl
sub
data16
ss
cmp
add
(bad)
stos
and
adc
gs
cmp
into
loope
sbb
pop
mov
mov
mov
jne
inc
inc
sub
in
(bad)
cwde
jnp
push
xchg
js
repz
rep
add
mov
ss
leave
push
in
or
out
js
pop
push
mov
add
cmp
sahf
jle
sub
xor
sbb
pop
dec
inc
out
stc
test
retf
data16
mov
push
rsqrtps
jg
daa
mov
adc
fmulp
cmc
aam
rol
or
sbb
lds
and
mov
xor
fsubr
xchg
clc
in
pop
std
or
sub
cmp
iret
cmc
mov
lahf
fcomp
adc
xchg
adc
xor
test
adc
add
shr
sar
fistp
or
xchg
pop
and
jnp
adc
out
in
enter
cmp
ins
(bad)
jecxz
dec
jb
inc
inc
inc
sub
inc
outs
jae
jno
jmp
or
pop
cmp
dec
xchg
mov
add
(bad)
push
dec
jmp
mov
pop
dec
sub
jmp
icebp
pop
jae
adc
dec
jge
pushf
enter
and
pop
pop
repz
jg
sahf
add
mov
jecxz
cli
lock
movs
ss
je
movs
ds
or
inc
mov
jo
xchg
inc
iret
pop
lahf
sar
inc
push
or
push
jns
and
pop
push
push
mov
sub
add
mov
les
mov
xor
jecxz
outs
inc
fistp
dec
inc
icebp
dec
iret
cmps
mov
add
mov
xor
hlt
pop
jbe
sbb
or
fsub
or
xor
loopne
or
push
cli
jg
push
ins
sbb
ins
ins
mov
cwde
ror
mul
fist
les
popf
xchg
mov
xor
sub
xor
test
in
mov
out
mov
jl
mov
gs
std
sahf
stos
out
es
inc
push
lds
jmp
cdq
out
outs
in
mov
pop
jg
jp
jnp
jo
pop
inc
ja
sbb
maxps
lds
cmp
xchg
outs
pop
dec
pushf
sbb
fmul
adc
cmp
mov
add
nop
sbb
sbb
ret
sbb
adc
jmp
je
jp
jo
push
imul
(bad)
idiv
(bad)
loop
push
inc
fidivr
shl
add
inc
ss
(bad)
mov
(bad)
xor
dec
or
loop
add
ja
pop
jbe
push
push
retf
inc
adc
frstor
imul
sub
lds
rcr
rol
les
push
cwde
push
inc
pop
jb
inc
in
scas
adc
imul
mov
pop
call
cmps
mov
xchg
mov
lahf
dec
add
or
gs
push
(bad)
pop
leave
test
xchg
sahf
ins
mov
pushf
add
mov
inc
jne
jb
ficomp
xchg
pop
push
scas
adc
lock
repnz
stos
addr16
or
xchg
cmp
hlt
sahf
lds
or
mov
mov
push
or
js
repnz
fiadd
inc
outs
push
sub
fwait
cli
xchg
xchg
pop
pusha
inc
mov
xchg
call
fs
in
fwait
xchg
xor
movs
ret
sub
dec
fstp
adc
inc
push
mov
add
dec
sbb
mov
pop
sub
dec
xchg
imul
sub
jmp
imul
pop
jns
outs
xor
adc
pop
neg
int
loopne
ss
pop
mov
push
jne
jne
xchg
or
jg
mov
dec
mov
popf
jo
xor
inc
mov
popa
std
clc
adc
mov
push
mov
loopne
push
adc
cmps
mov
mov
lods
push
mov
adc
xor
jl
movs
xor
(bad)
int3
fwait
mov
sti
call
cmp
out
add
jae
mov
dec
jp
fcom
mov
test
xchg
and
mov
jl
dec
popa
cdq
mov
out
and
jmp
shr
or
cmps
sbb
cmp
mov
push
in
jl
out
imul
jp
ror
mov
call
retf
inc
or
jle
test
lock
xlat
shr
aad
aaa
ror
in
dec
(bad)
push
aad
adc
stos
cli
mov
lods
and
cs
in
clc
xor
lock
fwait
enter
xchg
push
mov
cli
push
sub
loopne
jmp
inc
push
pusha
fs
les
jp
and
arpl
pushf
aam
test
pop
push
add
mov
add
mov
fwait
bnd
xchg
pop
icebp
mov
stos
inc
sub
xchg
hlt
movs
icebp
pop
call
cmc
mov
sahf
xchg
push
mov
arpl
xrelease
jl
mov
or
pop
prefetch
or
mov
push
jle
outs
cmc
out
stos
pop
ins
pop
mov
xchg
inc
jmp
dec
fiadd
sub
xor
sbb
and
dec
dec
or
mov
rcl
mov
sbb
movs
sub
out
into
repz
ret
sahf
xor
pop
jecxz
mov
out
mov
jle
or
sub
sbb
push
xor
inc
adc
sbb
pusha
(bad)
xchg
cmp
ss
mov
stos
xor
xchg
pop
adc
ffreep
jnp
inc
and
pop
aam
adc
jno
pop
cmp
xchg
and
ins
arpl
push
add
sahf
mov
mov
pop
jmp
dec
loop
sub
jmp
int3
jge
loop
test
push
call
(bad)
jecxz
jg
outs
rcr
cmp
shl
mov
inc
call
stc
mov
inc
mov
jns
lahf
aas
in
out
fs
cwde
mov
repnz
loope
sbb
(bad)
inc
fwait
mov
popf
push
shl
xor
sub
adc
lea
aad
jns
(bad)
fdiv
imul
jmp
(bad)
jmp
add
loope
jae
fs
sub
ret
test
or
aam
sahf
fld
and
aas
jns
mov
cmp
mov
and
iret
pop
sub
mov
daa
or
outs
cmp
mov
push
push
sbb
(bad)
mov
ss
adc
movs
movs
dec
adc
out
fs
jmp
mov
push
cli
inc
fistp
jecxz
out
imul
aad
mov
dec
outs
lods
addr16
sub
sub
cdq
imul
add
push
jbe
popf
cmp
(bad)
call
add
adc
push
adc
mov
cmp
pop
xchg
xchg
fwait
bound
sbb
fcmovnu
(bad)
stc
in
ror
lea
sub
xchg
and
retf
xor
(bad)
and
pusha
sti
sahf
repz
shl
inc
mov
out
stos
add
or
dec
fadd
movs
jg
add
push
out
int
nop
jle
out
xor
mov
mov
cli
mov
ror
pushf
push
sub
les
dec
cmps
ss
add
xor
sub
xchg
push
daa
jnp
fist
rol
adc
movs
xor
fist
(bad)
scas
sub
(bad)
imul
stos
xchg
or
into
sbb
ficom
pop
imul
add
test
sub
scas
leave
xor
cs
imul
nop
jecxz
xchg
and
imul
add
push
cs
jmp
xchg
add
sbb
out
test
(bad)
adc
jmp
ja
push
pop
pop
xchg
test
add
pop
xchg
and
lods
dec
or
jnp
jo
jmp
dec
repz
xchg
jno
ins
cdq
or
gs
clc
pop
adc
inc
mov
or
dec
mov
pop
(bad)
jg
or
cdq
or
dec
xchg
leave
dec
cmps
jns
rol
xchg
or
mov
das
adc
jae
push
jo
xchg
mov
inc
dec
push
(bad)
sbb
scas
add
dec
cs
mov
gs
mov
dec
xchg
loopne
lods
cmp
mov
outs
popf
xor
mov
loope
into
das
push
pop
mov
or
mov
or
adc
pop
imul
imul
mov
repz
loop
js
or
lahf
sbb
mov
sti
adc
outs
push
stc
adc
or
sbb
loopne
(bad)
pop
sub
cmps
jb
jne
(bad)
mov
add
mov
cmp
cmp
mov
jge
mov
in
jle
sub
adc
xchg
ja
inc
or
je
jbe
lea
fldcw
mov
jp
scas
pop
repz
imul
sbb
jno
je
sar
cmp
xlat
jecxz
xchg
dec
je
cmp
jae
cmp
(bad)
les
push
gs
out
fdiv
xchg
mov
inc
sbb
dec
or
push
std
popf
or
das
sub
aaa
dec
pop
inc
fdiv
mov
out
ss
pop
jo
mov
push
push
nop
test
mov
daa
cmps
enter
push
inc
aaa
iret
test
cmp
mov
ret
arpl
nop
movs
test
and
fdivr
fidiv
aas
clc
mov
mov
xor
add
mov
or
jge
mov
dec
int
and
dec
or
push
cmps
mov
push
stos
jae
pop
jno
rol
mov
outs
or
dec
push
ja
mov
aam
sub
into
enter
ins
push
mov
jecxz
jns
(bad)
xor
inc
outs
(bad)
sub
sub
ja
enter
dec
and
inc
sbb
jbe
or
mov
loop
inc
test
(bad)
(bad)
call
sub
cwde
enter
push
xlat
stos
call
jmp
sar
or
jmp
cmp
fcomi
dec
outs
add
or
xchg
shl
scas
loope
and
ss
les
and
cmps
sti
pop
repz
inc
mov
push
mov
lahf
int
fs
mov
test
push
aam
data16
mov
imul
fwait
in
xor
jnp
pop
bound
(bad)
cld
pusha
adc
sbb
repnz
(bad)
test
dec
loop
inc
sbb
(bad)
fwait
aaa
dec
rol
shl
adc
and
fist
fwait
inc
enter
adc
cwde
mov
xchg
movs
push
mov
ss
jecxz
les
dec
push
fnstcw
das
dec
jb
dec
xor
cs
inc
jb
or
neg
pushf
fwait
mov
cmp
dec
ins
ja
jne
add
iret
push
scas
jge
sar
mov
sbb
cmp
and
test
cmp
out
mov
mov
xchg
out
fnstsw
mov
cld
dec
and
or
mov
push
cmp
das
cmp
xchg
push
or
pop
ds
add
fmul
test
xor
push
rcr
mov
imul
ja
sbb
jb
loope
(bad)
popf
jmp
loopne
dec
rcl
jge
fwait
imul
(bad)
sub
aam
loope
cli
push
mov
dec
mov
mov
outs
sbb
mov
sbb
or
dec
ret
stos
gs
sar
jmp
fidiv
stc
push
push
repz
mov
(bad)
and
(bad)
repnz
ror
pop
fimul
not
cmps
in
imul
xor
or
lock
sub
push
shl
pop
xchg
pop
ror
mov
add
mov
or
jp
push
or
call
add
repnz
adc
ret
add
addr16
fucompp
aad
cmc
sub
add
mov
int3
mov
or
scas
or
mov
mov
xchg
cmp
jge
ret
add
mov
cmps
cli
gs
jmp
xor
out
and
(bad)
jno
cmc
push
mov
mov
aaa
mov
inc
xchg
call
pop
sar
jae
clc
je
xlat
xor
pop
xor
push
jle
cmp
shl
adc
shl
jmp
lods
pusha
jge
lods
inc
mov
jbe
dec
fdiv
adc
inc
mov
pop
push
pusha
jnp
(bad)
push
aad
sbb
bound
add
aad
adc
adc
rcr
aas
(bad)
and
mov
sbb
jle
pop
jmp
inc
mov
sahf
fwait
and
mov
ins
push
sbb
xor
(bad)
sahf
cmp
push
push
mov
scas
in
jl
sar
mov
adc
(bad)
cmp
repnz
push
scas
(bad)
xchg
in
rcl
sbb
jge
jecxz
sub
push
cdq
add
mov
push
sbb
jne
hlt
stos
adc
xchg
mov
scas
cmp
aaa
cs
pop
out
or
pusha
inc
jns
(bad)
xchg
ins
cmp
inc
inc
push
repnz
and
ins
or
sbb
or
imul
js
or
jmp
sub
dec
test
and
ss
mov
dec
popa
repz
xor
pushf
pop
jmp
ror
arpl
std
inc
dec
xchg
and
add
xor
es
outs
retf
push
sub
test
repnz
ja
pop
add
jge
jno
(bad)
dec
in
cmp
and
xchg
repnz
mov
jno
scas
add
lds
push
ror
fdiv
mov
shl
xchg
(bad)
dec
pusha
(bad)
data16
ror
popa
add
jns
out
push
popa
mov
out
push
cld
ins
adc
cmp
mov
and
sbb
loop
or
add
out
out
mov
js
sbb
dec
popa
sub
inc
xor
mov
mov
sbb
ret
fcom
push
pop
sti
jno
leave
and
mov
mov
ins
clc
shl
inc
sbb
push
mov
pop
in
call
pop
call
imul
sahf
(bad)
dec
pushf
jle
ss
mov
xor
pop
ins
mov
pop
mov
addr16
popf
or
ins
sub
dec
add
xchg
icebp
les
dec
adc
loopne
shr
cmp
and
mov
cmps
dec
out
cmps
jns
cmps
fsub
mov
fldln2
es
pop
jle
retf
adc
pop
jo
jg
scas
sub
lds
push
xchg
mov
jp
xor
inc
test
mov
inc
popa
sbb
mov
xor
sub
push
sbb
in
xor
jg
retf
xchg
loopne
mov
jo
sub
shr
inc
cwde
mov
dec
in
fld
lds
jne
cs
aaa
inc
or
xchg
pop
int
mov
push
inc
dec
push
jae
loop
or
imul
loope
ret
push
dec
in
adc
loop
push
mov
xchg
jbe
clc
pop
jnp
cli
fs
int3
mov
pop
ficomp
fs
inc
pushf
mov
jbe
loopne
out
mov
cli
shl
jle
or
arpl
dec
xor
call
pop
dec
aaa
push
or
or
ret
es
cwde
cwde
sahf
cmp
mov
lock
inc
sbb
jno
cwde
outs
mov
inc
sahf
add
mov
das
mov
in
mov
adc
(bad)
repnz
xor
sbb
(bad)
lods
jl
cmp
pop
shl
inc
jbe
dec
gs
imul
xor
stos
mov
pop
mov
in
js
bound
xchg
and
sub
dec
mov
ins
mov
sub
retf
dec
cmp
ins
jmp
sub
fidiv
dec
lods
clc
push
and
std
sub
jae
addr16
lods
cmp
into
or
xchg
adc
je
sbb
mov
mov
in
retf
scas
mov
call
fsubr
rol
sub
inc
mov
ffreep
cld
hlt
inc
ds
cmps
frstor
or
retf
stos
mov
div
pop
xor
mov
add
jne
loopne
js
inc
sub
daa
pop
add
adc
mov
test
inc
push
out
fst
and
dec
cld
push
pushf
add
push
ins
retf
pop
mov
dec
pop
(bad)
mov
add
mov
ins
mov
jae
xchg
inc
in
fstp
fidiv
popa
dec
aaa
movs
push
cmp
mov
inc
xchg
dec
mov
sbb
bound
cmp
in
in
loope
sti
add
pop
pop
outs
cmp
popa
mov
jp
into
adc
xlat
cmp
out
pop
inc
mov
jg
pusha
sub
cmp
mov
mov
test
movs
imul
cmp
retf
add
(bad)
ins
rcl
cmp
sbb
and
std
movs
mov
out
out
jnp
mov
dec
xchg
out
cld
inc
dec
je
mov
jb
add
jmp
mov
inc
adc
mov
cmps
repz
mov
int
sub
cmps
or
mov
call
inc
sar
xor
out
xchg
sub
or
pop
movs
mov
ss
inc
jb
test
icebp
inc
daa
jne
or
or
push
cmp
mov
jp
call
outs
mov
or
or
and
mov
in
retf
imul
inc
xchg
stos
outs
dec
xlat
xchg
jne
out
sbb
pop
or
in
shl
out
fisub
fadd
xor
pop
push
xchg
mov
mov
loopne
scas
xchg
and
(bad)
ins
clc
ds
and
pop
mov
mov
or
mov
ds
dec
dec
dec
add
cmp
jl
pop
push
inc
push
mov
push
or
inc
sub
add
ss
dec
xchg
daa
xlat
pop
jecxz
imul
test
mov
add
mov
loope
adc
arpl
mov
js
or
dec
and
arpl
stos
cmps
lds
xor
sub
mov
xor
iret
scas
lods
lds
cmp
adc
pop
push
daa
mov
add
sar
(bad)
std
jnp
mov
in
mov
pop
hlt
inc
call
lods
xor
addr16
xchg
dec
jp
das
test
cdq
jnp
mov
bound
mov
test
fbld
inc
test
(bad)
(bad)
cmp
mov
xchg
inc
cmps
mov
retf
ror
and
jb
paddd
jne
loopne
jno
(bad)
adc
cld
sahf
add
mov
mov
fsubr
cmc
out
fs
sub
rcr
rcr
jmp
ror
daa
sub
inc
ins
push
dec
mov
mov
aas
mov
aad
enter
test
or
pop
xchg
cmp
(bad)
adc
mov
(bad)
rcl
mov
jmp
sti
adc
test
shl
jp
in
jp
cmp
mov
dec
cmps
es
fnsave
stc
cli
retf
mov
and
push
add
jbe
mov
jno
dec
sub
fdivr
mov
adc
movs
movs
adc
mov
jae
dec
enter
aam
fistp
les
sysret
fwait
cmp
dec
jmp
dec
emms
adc
in
add
inc
fs
or
mov
push
ja
and
mov
clc
xchg
inc
jns
pusha
clc
xchg
stos
pop
sbb
xchg
(bad)
imul
sub
inc
cwde
(bad)
jge
pop
out
or
jbe
mov
daa
cmp
xchg
or
es
ins
push
int
add
gs
imul
retf
sub
outs
or
mul
icebp
(bad)
xchg
fcom
inc
mov
cmps
jne
fucomp
sbb
repz
je
out
mov
outs
and
scas
jno
xchg
jo
sub
dec
retf
pop
inc
jo
push
inc
push
jmp
out
xchg
int
popf
inc
leave
sub
mov
dec
jmp
adc
rcr
cmps
pop
lahf
xor
pop
and
inc
dec
add
sub
cdq
out
stos
mov
lahf
iret
mov
inc
inc
pop
pusha
mov
dec
(bad)
addr16
add
sub
ss
jg
sub
retf
stos
ror
or
jae
push
jb
fs
lock
shr
ret
cmp
sub
xchg
pop
test
push
aas
in
ret
cdq
ret
outs
ins
add
jo
lock
jp
lea
sbb
xor
cmp
xor
jge
or
ss
scas
inc
mov
stos
fist
sub
mov
cmc
mov
dec
push
mov
mov
loop
call
js
inc
and
sbb
xor
mov
jae
std
mov
(bad)
iret
ficom
ja
scas
xlat
sbb
pop
push
inc
js
or
ins
and
fcmovb
out
test
mov
dec
stc
sbb
fwait
pop
pop
dec
lock
jno
neg
fstp
outs
lahf
jo
out
(bad)
rcl
in
imul
mov
pop
fsub
ins
(bad)
scas
fidiv
mov
inc
pop
aaa
stos
push
lock
mov
out
xchg
sbb
mov
inc
out
fsubr
stos
imul
mov
cmp
xor
push
nop
jl
cmps
hlt
xlat
cmp
xchg
jbe
movs
pop
pop
xor
pop
das
test
xchg
adc
jle
lea
xor
sub
aam
jge
cmps
fstp
pop
sub
jmp
sbb
shl
sbb
dec
inc
imul
xor
xor
movs
lods
aam
mov
add
loopne
jno
mov
scas
jns
pop
sbb
sar
mov
inc
aad
(bad)
pop
cmp
push
jg
pop
and
mov
(bad)
shl
mov
xor
pop
xor
add
gs
pop
(bad)
cmc
repnz
(bad)
xchg
fs
sub
clc
sub
mov
mov
jmp
lea
fst
fs
jmp
dec
js
jle
cli
pop
push
mov
dec
mov
ja
shl
mov
das
jns
sub
out
stos
mov
aad
sub
inc
popa
or
inc
push
push
loopne
div
push
gs
and
shr
xor
div
outs
cmp
sub
(bad)
pushf
and
shl
jle
mov
push
retf
mov
pop
stc
cmps
and
ds
cmp
ja
inc
ror
imul
mov
add
(bad)
adc
daa
and
adc
(bad)
inc
push
aas
fadd
adc
sub
jge
sbb
pop
xchg
mov
sbb
js
and
fidivr
enter
cmps
loop
lods
fdiv
xchg
dec
(bad)
outs
mov
in
test
mov
into
push
(bad)
jmp
sbb
xchg
fwait
call
cli
dec
inc
push
test
xchg
cmp
shl
lock
lods
mov
scas
pop
inc
js
mov
popf
inc
jp
push
stos
xor
sub
mov
pop
retf
jns
jne
arpl
ss
dec
jmp
jns
xlat
mov
shl
jp
retf
mov
dec
add
mov
retf
jns
retf
sbb
mov
mov
ds
lods
and
das
mov
jae
jmp
xor
lds
push
clc
scas
pop
repnz
or
retf
pop
ja
call
pcmpgtw
std
xchg
push
div
cmp
es
push
(bad)
fwait
popw
pop
ror
fisttp
lahf
jl
dec
outs
pop
cmp
rol
fidivr
call
and
sbb
mov
dec
mov
jle
gs
mov
add
enter
mov
out
repnz
add
or
mov
push
mov
in
movs
jbe
(bad)
outs
fidiv
push
retf
mov
lock
mov
fnstenv
inc
imul
je
ret
lock
idiv
out
cmp
stos
cmp
shr
outs
pop
push
shr
push
jbe
jns
or
into
pushf
sub
push
test
mov
adc
push
test
mov
xchg
jmp
(bad)
hlt
cmp
call
mov
std
mov
popf
mov
adc
inc
or
fistp
loop
mov
inc
dec
and
fwait
inc
enter
cmps
std
or
sbb
mov
fsub
cs
jecxz
mov
std
cmc
dec
lahf
mov
adc
mov
je
cwde
dec
xor
jle
inc
fwait
idiv
mov
lock
call
mov
shr
out
mov
cmp
jne
jne
outs
std
rcl
mov
daa
xchg
xlat
je
sti
int
das
cwde
jmp
cmps
xlat
adc
shl
push
dec
sub
cmp
bnd
xor
add
stos
sub
mov
lea
pop
stos
mov
xchg
jle
jmp
pusha
fs
sub
dec
jnp
ins
cdq
jle
and
sub
pop
fsubr
cmp
jb
mov
push
pop
push
test
fnstcw
bound
inc
loope
enter
mov
adc
data16
stos
dec
xor
cmp
sbb
cmp
sahf
scas
mov
jg
fmul
sbb
repz
fucom
outs
je
mov
lock
push
out
lods
(bad)
adc
cwde
pop
dec
mov
lea
sbb
out
or
cwde
mov
cmc
pmullw
out
gs
mov
pop
icebp
mov
pop
movs
movs
in
pop
push
pop
mov
js
sub
je
mov
pop
pop
or
test
mov
adc
push
dec
inc
pop
ja
and
outs
jmp
arpl
shr
mov
push
rcl
mov
push
pop
int
pop
icebp
ins
sub
xchg
sbb
and
xor
adc
test
aam
pop
mov
push
mov
xor
fidivr
or
cmps
mov
inc
fcomp
or
aad
sub
sub
and
addr16
out
cmp
cmps
xchg
jl
and
pop
enter
jle
pop
std
retf
mov
push
les
jle
pop
push
fucomi
ret
movs
popf
adc
in
jmp
stc
mov
iret
cmps
movs
mov
arpl
cmps
hlt
fldcw
rcr
sub
xchg
jae
and
loopne
push
mov
clc
lahf
imul
iret
sub
pop
jnp
(bad)
fisub
jecxz
push
sbb
xchg
imul
nop
pop
cmps
repnz
(bad)
xor
adc
fmul
mov
cmp
mov
pop
aas
(bad)
adc
pop
sub
cmp
or
loope
js
std
into
iret
rol
and
mov
jmp
dec
mov
(bad)
pop
mov
sub
repnz
sbb
xor
xor
fild
cdq
scas
or
pop
or
scas
repz
push
inc
cmp
sub
xor
fwait
mov
xor
mov
(bad)
push
ins
jmp
cs
adc
pop
mov
stc
or
push
js
movs
push
mul
sub
dec
in
ret
and
in
dec
les
outs
and
aaa
and
sbb
stos
stos
pop
cli
in
je
adc
mov
jmp
mov
mov
xchg
out
mov
mov
leave
pop
dec
stos
outs
iret
xor
dec
sub
aad
pop
addr16
lds
or
and
push
sahf
fdiv
ss
out
aad
in
ds
push
(bad)
jmp
lods
in
cmp
sbb
and
out
(bad)
movs
aaa
(bad)
xor
loope
call
ins
sbb
jbe
aam
pop
fwait
cwde
mov
imul
jecxz
dec
or
sar
push
mov
add
pop
int
inc
popa
or
lahf
xor
out
movs
lock
rcr
je
or
cmp
dec
jo
aad
push
mov
pop
xor
shl
ffreep
je
sti
inc
shl
xchg
arpl
sub
xor
push
sbb
inc
in
mov
pop
cs
cmp
popf
xor
aam
out
dec
test
scas
in
sub
in
and
sub
test
retf
dec
mov
mov
add
mov
out
imul
xor
push
mov
aam
jge
xor
xchg
mov
daa
cmp
jmp
js
mov
or
lea
cmp
xor
xor
inc
jle
es
mov
xchg
(bad)
shr
dec
rcl
mov
shr
movs
cdq
inc
lds
mov
mov
test
aaa
mov
xchg
xchg
adc
imul
sub
fstp
fdiv
retf
ror
or
adc
jae
dec
push
es
cmp
outs
push
add
sti
movs
mov
(bad)
cwde
out
or
test
ret
mov
cld
xchg
pushf
pop
dec
adc
das
jle
xchg
addr16
adc
fadd
imul
cmp
sbb
das
or
arpl
dec
mov
shl
mov
shl
mov
mov
ror
ret
cmp
adc
imul
aad
cmp
ror
pushf
sub
xchg
dec
xor
aam
cmc
jne
ror
int
cli
es
cmp
jmp
pop
jnp
sbb
xchg
mov
sub
fs
pop
movs
mov
bound
retf
addr16
lahf
mov
test
xchg
mov
push
adc
sbb
or
test
(bad)
arpl
push
sti
ins
add
cmp
mov
ss
cwde
mov
adc
gs
pop
push
idiv
pushf
adc
rcl
inc
leave
sub
lods
jl
mov
ret
and
cs
clc
retf
sbb
dec
xchg
sbb
in
cmp
xor
bnd
cs
(bad)
jno
(bad)
outs
mov
mov
out
in
xor
push
pop
pop
push
mov
imul
sbb
pop
xchg
mov
int3
jmp
mov
adc
xor
cmp
cld
push
test
stos
xor
clc
pop
push
repz
in
aas
mov
xor
(bad)
jmp
and
scas
mov
daa
out
aas
or
xchg
adc
jb
das
neg
jnp
not
push
xor
jbe
inc
mov
vfmadd132pd
or
adc
pop
xor
mov
pop
pop
ja
dec
mov
sbb
lods
xor
sub
cmc
pusha
sbb
mov
(bad)
xlat
mov
pop
xor
or
(bad)
cmp
jl
call
sbb
out
and
fstp
(bad)
imul
in
add
adc
push
or
popa
dec
lock
dec
in
pop
pop
fidiv
adc
in
sbb
stc
pop
sub
jb
add
and
jg
jo
push
cmp
sbb
or
dec
bound
xchg
cmp
rcr
mov
mov
jne
jns
xchg
pop
cmp
ja
mov
lods
mov
repz
cmp
pop
hlt
(bad)
cmp
jl
addr16
movs
test
lahf
jp
dec
mov
stos
mov
and
data16
aad
xlat
scas
mov
cmp
sub
jle
pusha
jno
leave
mov
and
pop
cmps
call
jp
xchg
gs
je
cmps
rol
sbb
and
sub
or
adc
cmp
inc
stos
jl
cmp
add
xchg
jmp
and
and
adc
pop
les
sbb
push
mov
(bad)
mov
xor
pop
jae
fisubr
cmp
ss
push
jns
clc
and
mov
test
pop
test
sbb
jle
sbb
cmp
paddq
xchg
and
cli
shr
adc
xor
xor
add
dec
repnz
test
dec
mov
(bad)
sbb
or
jnp
mov
jo
das
div
xchg
(bad)
fisubr
xchg
pop
cmp
mov
xchg
add
test
lds
das
jno
je
lods
in
xor
add
mov
pop
jge
and
push
xor
int
outs
push
pop
lods
xchg
pop
out
ds
jmp
mov
(bad)
and
pop
mov
jecxz
outs
add
xchg
call
inc
and
pop
lock
mov
aaa
xor
xor
sub
lahf
lahf
adc
push
aaa
pop
leave
lds
sbb
and
mov
stc
and
xor
sar
add
loope
jne
mov
cmps
ja
add
and
add
jb
imul
inc
add
es
data16
inc
adc
mov
xor
dec
(bad)
xor
add
ret
push
(bad)
sti
es
aas
or
inc
not
lea
dec
jle
push
std
int
cmp
jo
cwde
pop
stos
mov
add
push
sbb
test
xor
(bad)
aad
mov
push
mov
scas
stos
inc
nop
call
into
fbstp
xlat
xchg
movs
and
pop
or
push
jmp
jnp
test
jp
lock
loope
aaa
arpl
scas
or
cmp
push
sbb
mov
out
push
or
call
aad
jl
jb
call
(bad)
js
cmp
ficomp
mov
dec
jl
push
adc
xor
loope
push
adc
inc
fidivr
pop
pop
jp
outs
sub
cld
xchg
loope
pop
and
xor
popf
xchg
(bad)
shl
xor
repnz
int
sub
add
sbb
aad
outs
stos
stc
fstp
mov
mov
mov
pop
nop
fist
out
and
adc
mul
leave
loop
dec
and
mul
outs
push
loope
scas
(bad)
out
inc
inc
ja
xor
xchg
sub
adc
pop
stc
cmp
sub
xchg
add
outs
cmp
sub
or
in
push
push
pop
or
jnp
aad
mov
in
pop
hlt
(bad)
inc
movs
inc
scas
mov
mov
cld
push
mov
fwait
xchg
jb
cs
pop
inc
ror
repnz
pop
pop
cmps
pop
cmp
add
sub
cdq
bound
pop
or
mov
xor
push
sbb
pop
sub
inc
sti
xor
push
and
pop
sub
dec
retf
mov
add
push
xchg
dec
push
adc
shr
int3
cmp
addr16
jnp
or
cmp
repz
scas
outs
sbb
sbb
pop
je
mov
xchg
out
add
adc
dec
push
js
mov
out
dec
mov
fisubr
xor
or
jmp
cmp
loopne
jnp
ror
pop
pop
cmps
mov
in
jle
(bad)
cmp
cmp
idiv
and
inc
js
cmps
jl
int3
mov
pop
mov
jne
pusha
ficomp
dec
jmp
out
cmp
push
fcomi
jne
pushf
cmp
(bad)
or
icebp
jb
pushaw
add
loope
pop
sub
hlt
and
popf
std
pop
outs
and
test
out
push
or
sub
jl
lds
jbe
scas
adc
aaa
nop
cmc
inc
sahf
jnp
cmp
cld
add
jg
sub
xchg
ds
loope
outs
into
(bad)
pop
jge
dec
scas
jmp
jmp
and
pop
mul
test
cmp
outs
(bad)
inc
shr
sbb
(bad)
ja
ins
dec
imul
mov
add
cmp
or
mov
rol
scas
push
mov
adc
cmps
and
add
pop
push
mov
bound
and
aad
out
cmps
or
test
frstor
cmp
jo
lods
pop
pop
mov
ficomp
retf
loopne
push
jns
adc
ret
mov
cmps
adc
jne
call
movs
out
mov
jb
jae
ins
add
dec
xor
cli
pop
pop
std
dec
mov
mov
jmp
push
or
mov
fcmovne
ins
and
arpl
call
or
jmp
mov
or
ret
out
mov
sub
adc
stos
push
fsub
and
or
cdq
xchg
adc
push
adc
cmps
pusha
push
shl
imul
pop
shr
not
mov
xor
inc
(bad)
jmp
lods
mov
movs
mov
ret
xchg
pop
sbb
sbb
sti
fbstp
inc
mov
scas
push
aas
dec
iret
xor
ins
xor
pop
fs
cli
adc
outs
xor
sub
cwde
pop
in
jmp
push
push
jp
repnz
push
pop
mov
aam
cmc
mov
add
leave
cmps
xchg
ficomp
jp
and
fcomp
pop
mov
push
push
dec
jge
push
jno
outs
pop
xchg
les
out
loope
add
(bad)
out
retf
inc
fwait
mov
inc
in
stos
push
bound
jb
mov
mov
jb
mov
or
push
and
push
das
mov
cmp
out
loop
push
dec
dec
inc
or
adc
and
push
lods
or
bound
mov
stos
cmp
or
rcl
leave
inc
mov
aaa
adc
fisttp
repnz
cmp
(bad)
xchg
sbb
lea
inc
jmp
addr16
sbb
pop
and
sbb
lea
call
scas
inc
outs
jno
push
mov
(bad)
jp
call
retf
call
mov
mov
pop
(bad)
jmp
inc
sbb
frstor
jnp
xlat
jns
rcl
xor
xor
xor
clc
push
or
and
pop
cmps
mov
fst
mov
or
addr16
rcl
cli
fnstcw
mov
xchg
jp
(bad)
inc
pop
call
cmp
sbb
sub
pop
mov
les
jg
add
(bad)
fucomi
and
(bad)
sub
stc
jns
sub
cmp
cmp
in
into
pusha
fisub
fdiv
jmp
inc
cwde
cmp
pop
ret
add
out
shr
mov
and
ror
call
jae
mov
push
mov
push
shl
mov
dec
push
and
push
repnz
arpl
js
cli
enter
shl
mov
mov
lds
pop
leave
push
sub
xor
and
pop
rcl
int3
xchg
imul
imul
cs
outs
fs
add
lock
adc
ret
aaa
or
xchg
cmp
and
jp
mov
jno
rcr
adc
mov
aam
push
pop
test
mov
adc
pop
push
fstp
ret
pushf
ss
mov
and
mov
or
rcr
mov
imul
inc
call
xchg
dec
and
mov
retf
cmp
mov
popf
fbstp
mov
loop
into
sbb
xor
push
mov
inc
int
outs
aaa
cmc
push
call
mov
push
sub
gs
pop
and
adc
rcl
lds
push
and
xor
mov
loope
xchg
sub
aam
test
dec
cmc
mov
inc
xchg
gs
es
sbb
mov
aam
jmp
shl
ficom
(bad)
repz
leave
scas
test
(bad)
repz
retw
or
(bad)
aaa
sbb
jecxz
mov
add
dec
stos
inc
add
mov
ror
or
push
retf
push
sbb
fstp
xchg
fsub
inc
push
dec
jno
dec
cmp
ret
mov
mov
inc
in
or
cmp
ret
jb
jmp
dec
mov
dec
fsubr
in
sbb
mov
push
aas
sahf
enter
in
mov
mov
pusha
stc
add
xor
pop
adc
cmp
out
pop
stos
mov
jge
sar
call
cmp
sbb
dec
loopne
mov
jo
add
pop
push
(bad)
jg
mov
adc
cmps
icebp
fs
gs
inc
cmps
fwait
xor
cmp
sub
or
cli
sti
add
jb
(bad)
jnp
pop
(bad)
stos
inc
and
pop
mov
dec
iret
cmp
ficomp
mov
pop
mov
sub
ficom
sub
(bad)
sbb
sar
cmps
dec
je
daa
bound
fisub
hlt
mov
and
mov
add
mov
pop
pop
push
or
xor
xchg
pop
jge
jle
and
fwait
and
lods
sar
cli
loop
or
pop
sbb
ss
cmps
ja
jns
pop
inc
and
pop
mov
enter
fadd
rcr
out
xchg
mov
in
adc
aaa
inc
jae
adc
jg
xor
push
loopne
es
jbe
pusha
aaa
sbb
pop
cmp
cmp
sub
cmp
test
in
loope
jne
mov
xchg
sub
(bad)
mov
xor
inc
add
scas
sahf
push
mov
out
retf
in
test
inc
jmp
cdq
sbb
mov
and
push
sub
sbb
dec
sbb
iret
in
push
xchg
push
xchg
or
movs
xor
xor
aas
leave
push
jecxz
xchg
push
mov
sbb
stc
mov
aam
jp
xor
xor
es
repz
bound
loop
cs
push
pop
scas
mov
daa
jmp
push
out
(bad)
dec
push
ja
(bad)
das
cmp
pop
xor
xor
int
dec
cmp
(bad)
(bad)
and
scas
adc
push
adc
repz
add
adc
shl
push
jp
cld
pop
and
imul
jle
push
dec
jle
call
add
imul
mov
add
push
push
sar
pop
call
adc
xchg
test
mov
pmaxub
add
mov
xor
and
push
xor
jg
out
mov
adc
push
push
sub
jge
push
mov
movs
les
fwait
push
jg
push
fwait
call
add
into
xchg
enter
push
add
outs
cbw
stos
outs
ins
dec
test
jb
arpl
jl
jae
popa
xor
sbb
mov
aad
cmps
fs
jp
cmp
cmp
and
xor
rol
fst
inc
fadd
and
outs
(bad)
push
test
mov
inc
or
jno
aam
icebp
push
add
and
in
(bad)
aad
inc
das
dec
pusha
pop
pusha
jmp
push
dec
adc
add
jo
int
cdq
or
movs
jmp
pop
push
pop
push
or
lods
dec
js
mov
mov
pushf
pop
es
loop
pusha
cdq
dec
inc
inc
outs
jmp
push
pop
xor
into
shl
ja
mov
adc
cmp
inc
xchg
sub
popf
sahf
inc
ror
repz
push
xor
or
sub
adc
xchg
loope
pop
mov
cmp
push
push
pop
lock
lds
mov
xchg
jnp
jbe
aaa
push
xchg
les
mov
dec
pop
mov
leave
pop
xchg
fcmovnu
push
adc
js
mov
sbb
mov
push
mov
cmps
test
test
adc
fisubr
pop
jne
cmps
adc
push
aas
mov
sub
ja
retf
arpl
add
rcr
loope
sbb
push
ins
int
jne
out
data16
movs
sbb
hlt
mov
bound
inc
jne
and
popa
shl
mov
jmp
aaa
daa
cmp
cmp
inc
adc
cmc
cs
add
popa
inc
retf
sahf
rcr
rcr
push
push
loope
lds
stos
out
mov
and
sub
ins
cmps
jmp
and
dec
leave
mov
adc
sub
and
jnp
fild
mov
stos
xor
xlat
daa
jne
adc
pop
pxor
lods
sbb
aad
add
push
mov
sub
addr16
rcr
or
mov
mov
inc
and
mov
lock
inc
aad
std
cmps
aas
aaa
lods
mov
or
pop
jo
gs
lods
dec
xor
scas
pusha
push
call
add
pop
shl
iret
pusha
inc
icebp
and
add
shr
cdq
push
xor
dec
add
or
add
jge
sahf
cmp
das
cdq
or
(bad)
jge
fs
add
inc
sbb
je
mov
dec
mov
fstp
pop
cli
pop
cmp
mov
sbb
pop
jl
bound
push
(bad)
movs
ret
inc
push
hlt
mov
sbb
mov
cs
out
adc
ja
pop
pop
jo
popa
je
call
movsx
and
adc
aas
addr16
int3
sbb
jecxz
je
cld
jae
mov
(bad)
lods
and
in
or
adc
xchg
call
test
pop
add
xor
add
inc
retf
xlat
jo
pop
(bad)
fisttp
mov
pop
daa
pop
add
cmp
aaa
pushf
sbb
sbb
mov
inc
inc
test
addr16
mov
push
js
cs
mov
xor
and
xor
sar
cdq
mov
inc
inc
fstp
daa
sbb
lods
sbb
dec
std
in
sbb
shl
mov
sbb
sbb
inc
ret
jae
fidiv
sahf
mov
pop
mov
cld
(bad)
push
out
pop
xor
adc
and
mov
mov
sub
call
and
pop
(bad)
ss
(bad)
nop
outs
lds
inc
stos
xchg
shr
stos
movs
or
push
adc
pop
and
(bad)
idiv
sbb
sahf
mov
xor
adc
pop
sbb
and
enter
xor
icebp
std
dec
add
cmp
mov
mov
pop
xchg
int3
jne
push
(bad)
add
cli
stos
mov
xor
mov
push
and
mov
mov
and
adc
inc
jmp
add
jno
sahf
pop
mov
in
mov
mov
call
adc
stos
das
(bad)
out
mov
mov
sbb
inc
lods
or
inc
leave
add
sub
fwait
test
rol
sahf
shr
jo
ds
test
mov
shl
add
cmps
lds
(bad)
pop
stc
adc
cdq
movs
xchg
pop
mov
stos
adc
rcl
sub
sbb
cmp
mov
pcmpgtb
push
cmp
sahf
cmp
push
jle
mov
xchg
mov
sbb
fsub
push
cmps
addr16
(bad)
test
xor
(bad)
aaa
por
pop
sub
pop
push
cmp
and
mov
call
sahf
adc
xchg
rcr
xor
sahf
or
dec
mov
jmp
push
dec
pushf
pop
sbb
xor
mov
lds
ds
adc
addr16
popa
mov
aas
jge
retf
and
or
enter
jecxz
loop
pop
scas
dec
ror
adc
push
popf
je
mov
add
sub
scas
dec
xchg
vmwrite
icebp
or
sar
in
call
sbb
mov
push
jmp
add
xor
mov
mov
xlat
(bad)
popa
cmp
adc
enter
jb
stc
xchg
retf
pop
cmp
adc
pop
push
push
es
jo
addr16
cs
leave
mov
sub
push
(bad)
push
test
imul
and
or
mov
mov
ret
mov
jo
and
push
das
push
lahf
dec
aam
jle
scas
cmp
test
add
push
pop
push
and
sar
ds
aaa
adc
mov
xchg
pop
inc
xor
pop
aas
adc
mov
push
call
cmp
pop
addr16
mov
sar
imul
cmps
(bad)
mov
inc
ins
(bad)
icebp
not
pop
push
jmp
test
cmp
push
xchg
jno
mov
mov
leave
fisub
stos
sub
jo
je
lods
and
cli
retf
ss
leave
in
sbb
adc
sub
add
stc
lds
jo
in
xchg
jg
pop
mov
push
push
scas
adc
sbb
loop
call
push
jae
pop
rcr
sar
xor
div
adc
cmc
lods
test
aad
(bad)
xchg
fwait
and
pop
loopne
add
add
xor
xchg
add
jmp
pop
lods
loopne
jge
std
pop
xor
fcom
add
loope
cmp
or
push
jmp
dec
enter
pop
in
adc
inc
idiv
push
jb
dec
ja
sub
add
shl
pop
inc
adc
sub
pop
pop
(bad)
icebp
mov
jle
nop
int3
mov
or
push
xlat
push
jl
inc
jbe
cmps
push
sbb
repz
xor
jecxz
ss
gs
mov
movs
inc
adc
push
xchg
jno
push
sbb
push
lods
sbb
mov
pop
arpl
jmp
sbb
pop
and
dec
and
ja
and
and
ds
nop
inc
outs
sahf
cld
(bad)
xor
and
adc
scas
jle
outs
je
ret
push
jno
xchg
je
mov
jae
mov
fldcw
dec
test
ds
stos
ja
jb
dec
xchg
mov
push
dec
xor
pushf
push
and
mov
pop
dec
cmps
das
pushf
stos
mov
xor
sbb
pushf
or
inc
jae
mov
scas
mov
rcl
test
push
retf
retf
mov
xchg
jmp
add
pop
sub
iret
leave
ret
pop
stc
add
cmp
icebp
and
jae
ss
sub
fimul
ficom
aaa
das
inc
mov
sbb
ffree
das
push
test
ja
fs
and
push
mov
daa
push
ss
frstor
mov
int3
adc
in
push
dec
jmp
cs
jmp
mov
ss
push
out
ret
fst
test
pop
xchg
push
popf
jecxz
in
nop
xchg
jb
and
std
aas
int3
sbb
inc
mov
add
fsubr
xor
xchg
fidivr
mov
xor
dec
xchg
sub
jle
fnstcw
or
mov
jbe
cwde
loopne
ss
mov
push
xor
sbb
es
ds
(bad)
fsubr
jg
movs
cmp
mov
xor
add
inc
leave
push
(bad)
mov
xor
lahf
cmp
or
xchg
pop
sub
outs
lods
jmp
lea
mov
out
sub
(bad)
jnp
cld
mov
push
pop
cmp
sub
mov
cli
mov
ja
sub
or
inc
pop
shl
ins
sub
mov
mov
mov
sub
outs
fisub
mov
scas
jbe
mov
(bad)
es
inc
inc
add
fisubr
inc
sbb
orps
jg
or
ins
dec
nop
push
add
out
mov
scas
add
outs
mov
jmp
push
jmp
pop
mov
dec
rcl
push
int3
outs
dec
dec
in
inc
cmp
or
in
dec
je
add
std
clc
push
mov
dec
sub
mov
ins
adc
jnp
add
mov
outs
mov
push
xchg
jne
mov
lahf
das
jo
and
mov
mov
jl
fwait
or
loop
lahf
mov
int
fs
pushf
xor
mov
inc
imul
pushf
mov
aam
or
push
mov
mov
out
inc
in
sbb
and
aaa
scas
sbb
xlat
sti
mov
add
inc
push
int
ja
sub
imul
xor
jge
cmps
fcomp
movs
cmp
ja
aam
cmp
adc
inc
push
mov
mov
mov
repz
push
adc
shl
mov
mov
xor
pop
mov
popa
sub
inc
inc
enter
in
mov
add
sbb
and
sar
nop
mov
ficomp
xor
pop
lock
ja
pusha
leave
je
lods
mov
shl
xlat
mov
je
lahf
sub
push
scas
loop
mov
add
xor
xlat
(bad)
leave
pop
clc
dec
add
cwde
je
pop
call
out
inc
jnp
out
mov
mov
jae
repz
fst
mov
xchg
and
fcomp
ror
pop
push
or
popa
xchg
push
add
xor
ret
(bad)
lock
push
lds
popf
aam
pop
sub
push
mov
mov
mov
adc
adc
mov
pop
xchg
les
loope
js
ret
xchg
add
aam
xor
jns
adc
inc
sub
(bad)
call
popf
shl
add
aam
inc
add
jmp
into
popa
xor
fisttp
into
mov
jmp
mov
sub
and
mov
and
cli
fs
push
pusha
clc
pop
xlat
cmp
jmp
jbe
shl
adc
call
sbb
clc
inc
pop
jg
pop
dec
push
std
xor
into
jmp
mov
mov
retf
pushf
add
mov
fwait
addr16
or
add
in
repnz
xor
xchg
xor
xchg
loop
movs
mov
ss
inc
std
(bad)
das
add
loope
sbb
inc
ja
dec
(bad)
cmp
nop
sbb
pop
inc
ss
pop
inc
cmp
sahf
movs
jno
in
push
lea
mov
jmp
cs
test
inc
aaa
pop
(bad)
test
xor
daa
and
shl
stc
add
(bad)
mov
mov
dec
mov
jbe
rol
(bad)
and
xchg
jns
adc
test
push
push
mov
call
cmp
iret
cmp
mov
sbb
jo
rol
iret
popf
out
adc
dec
xchg
xlat
cmp
adc
mov
jle
je
out
and
lods
movs
loope
movs
outs
(bad)
adc
in
mov
xor
jnp
sub
pop
xor
sar
dec
adc
inc
add
dec
mov
pushf
inc
sbb
jg
adc
cmp
sub
sbb
inc
fsub
fimul
iret
dec
test
(bad)
lock
aam
es
sub
outs
mov
mov
jnp
(bad)
das
sbb
ins
mov
pop
push
dec
adc
cdq
test
fwait
movs
mov
(bad)
jmp
jp
movs
clc
adc
dec
dec
jle
jl
in
mov
xor
inc
hlt
mov
ja
sub
mov
inc
or
inc
or
jns
rcl
dec
test
push
stos
inc
or
imul
mov
push
dec
mov
scas
dec
or
cmp
sti
sbb
daa
pop
fxch
loopne
sbb
outs
mov
sbb
cmp
mov
or
mov
push
mov
mov
xor
adc
div
push
(bad)
fidiv
call
ficom
dec
cmp
pop
xchg
adc
jp
movs
xchg
or
cmp
and
jnp
xor
jno
push
inc
xlat
inc
xor
sbb
sub
out
jb
pop
xchg
ss
in
(bad)
push
adc
(bad)
aad
mov
out
push
push
addr16
and
add
(bad)
outs
ss
or
xchg
add
sub
iret
xor
push
cli
test
mov
dec
mov
in
addr16
jge
sub
pusha
cld
pop
repz
push
jns
icebp
lods
sti
xor
mov
add
mov
jmp
jl
sbb
add
lods
daa
push
dec
jne
mov
sub
loopne
xchg
pop
cs
div
inc
int3
repz
jmp
push
mov
mov
add
xchg
ja
add
push
sbb
adc
dec
outs
div
pushf
pop
(bad)
add
xor
inc
adc
push
mov
(bad)
es
push
cmp
xlat
sub
out
hlt
pop
rcr
inc
sti
lahf
das
sbb
dec
mov
cwde
aas
pop
div
xor
push
int
xlat
or
ja
in
pop
mov
loope
nop
pop
fs
sbb
push
mov
sar
jo
mov
push
cmp
or
sub
xor
jnp
push
addr16
mov
retf
inc
sub
es
add
fild
je
in
inc
mov
mov
dec
std
test
data16
cwde
dec
outs
scas
enter
xor
sbb
pop
sbb
mov
pop
push
adc
push
jmp
hlt
aaa
imul
mov
adc
(bad)
(bad)
(bad)
xchg
push
jo
ss
adc
push
cmp
dec
inc
retf
xchg
mov
addr16
fst
sahf
mov
mov
ja
or
ds
fnstsw
jmp
inc
add
int
and
pop
clc
xor
adc
shr
inc
sbb
aam
jbe
mov
aad
add
aam
ins
mov
imul
mov
push
inc
(bad)
dec
sahf
mov
outs
add
loop
cmovno
ror
jae
outs
dec
mov
or
mov
loope
mov
jo
add
sar
add
mov
dec
xchg
cmc
inc
out
fstp
lods
xor
loopne
loopne
or
cmc
clc
push
or
xor
out
mov
mov
bound
and
fsub
cmp
cwde
test
and
pop
call
mov
popf
imul
cmp
loopne
sti
sbb
or
das
dec
add
push
dec
idiv
mov
mov
pop
push
repnz
in
fild
cld
xor
adc
hlt
pop
xchg
cmp
add
dec
jg
arpl
or
dec
imul
out
add
inc
mov
mov
push
repnz
push
add
iret
sar
sbb
push
std
mov
jae
mov
cs
inc
inc
js
lods
jp
daa
xchg
mov
pop
retf
fisub
sbb
and
cmps
adc
sub
inc
dec
cmps
mov
sub
jmp
cmp
push
push
out
js
out
sub
or
mov
push
mov
push
dec
xor
jbe
sbb
pop
jmp
aad
enter
push
gs
clc
inc
ins
mov
dec
aaa
cmc
das
scas
popf
jge
dec
sbb
or
mov
and
shl
push
sbb
out
retf
cwde
dec
or
cmc
pop
sbb
sub
gs
ror
stos
adc
dec
jbe
pusha
cmp
xchg
mov
loop
retfw
or
into
mov
adc
mov
cs
loopne
arpl
pop
xor
xor
and
inc
(bad)
xor
sbb
jp
test
rcl
popf
pop
ds
cmp
dec
aaa
test
dec
ds
cs
mov
imul
cmc
pop
jp
mov
xor
cmp
inc
xchg
inc
daa
add
xor
or
jg
addr16
mov
jne
(bad)
jg
pop
repnz
adc
mov
mov
xor
jle
das
arpl
dec
movs
shl
out
imul
add
int
popa
adc
rol
pop
inc
iret
xor
pop
out
les
test
pusha
aam
stos
pop
dec
imul
in
ins
je
jno
pusha
aas
xor
pop
mov
(bad)
jmp
fisub
stos
out
mov
mov
mov
mov
sub
ret
pop
lock
retf
inc
call
xor
mov
cmp
cmp
inc
sub
mov
and
dec
stc
or
dec
or
xor
inc
sahf
adc
pop
push
retf
jle
daa
jo
stos
sti
mov
jb
repz
jno
xchg
sbb
dec
xchg
add
cld
fdivr
cmp
dec
xor
sub
outs
hlt
arpl
fld
jne
sub
push
xor
popf
enter
sahf
jae
pop
(bad)
outs
inc
dec
lea
jns
rol
jo
pop
ret
or
push
js
jmp
or
stos
xchg
fnstenv
jecxz
cmp
xchg
cmp
in
fsub
push
mov
cld
push
cmp
dec
jno
inc
cld
ss
packssdw
or
cmp
in
add
jle
add
movs
xchg
pop
inc
imul
jnp
int
arpl
addr16
sbb
fimul
inc
push
add
lock
mov
add
sub
inc
push
xchg
js
adc
mov
test
and
mov
jns
xlat
inc
mov
into
jle
ficom
mov
lahf
dec
add
ret
fnstsw
adc
jmp
scas
pop
hlt
push
mov
std
jge
sub
xchg
inc
mov
inc
xor
mov
add
stos
jmp
cmp
xor
mov
pop
add
lods
addr16
xor
pop
inc
push
pop
dec
mov
cmps
sub
and
mov
ins
add
es
ret
jp
push
mov
sbb
adc
pusha
sub
xlat
mov
aaa
mov
inc
lock
aaa
push
fcmovnbe
adc
push
and
sbb
ins
les
xchg
popa
and
dec
repnz
inc
push
jmp
cmp
cs
sbb
pushf
sub
repz
adc
repnz
jecxz
xlat
pushf
call
jg
sbb
pop
ror
push
mov
and
aad
mov
add
sub
xor
mov
add
cmp
ret
frstor
dec
(bad)
cmp
adc
pop
std
bound
cmp
dec
je
inc
fimul
into
push
or
shrd
aam
adc
arpl
imul
and
int3
retf
movs
ret
sub
mov
pop
dec
or
pop
add
dec
outs
lds
and
mov
inc
push
pop
xchg
sbb
jne
rol
std
popf
fistp
movs
cs
js
daa
add
hlt
jp
shr
in
stos
mov
pop
adc
pop
addr16
repnz
push
jge
addr16
out
repnz
push
push
push
xchg
test
mov
and
push
mov
mov
and
stos
rcr
jge
sar
xchg
xor
ror
(bad)
aas
leave
cmp
sti
xchg
mov
aad
cmp
sub
fisubr
sbb
pop
mov
das
adc
adc
and
movs
dec
iret
jbe
pop
in
pop
pusha
mov
in
lea
das
add
inc
sub
in
sbb
shl
sub
jae
out
loop
ss
mov
xor
or
cmc
iret
cld
mov
mov
add
cmp
neg
mov
push
xchg
(bad)
arpl
pop
pop
je
scas
mov
pop
les
aad
fild
sahf
ficomp
neg
adc
cli
addr16
iret
jmp
(bad)
mov
mov
stos
arpl
adc
dec
call
mov
(bad)
in
mov
jnp
add
movs
test
iret
adc
xor
xor
jle
adc
cmps
mov
sbb
aas
mov
arpl
xchg
pop
or
cld
outs
jo
lods
xor
loope
mov
inc
jno
mov
sub
push
pop
aam
dec
scas
outs
ret
jle
pop
cs
fdivp
test
test
and
inc
arpl
lea
pusha
mov
in
push
pop
movs
add
imul
and
xor
mov
adc
sbb
cmp
retf
out
push
jmp
and
bound
pop
mov
imul
and
in
nop
push
or
xchg
dec
mov
rcl
xchg
inc
fld
cvtdq2ps
ror
jae
jae
addr16
movs
add
adc
popf
adc
push
hlt
int3
icebp
out
mov
pusha
dec
ja
mov
aam
sar
jo
sbb
xchg
call
add
outs
imul
mov
xor
imul
or
ret
inc
mov
sti
jl
mov
sub
mov
xor
lods
adc
aas
jp
dec
lds
test
push
mov
xchg
in
and
cmps
jae
sbb
pop
outs
out
bound
ret
(bad)
pop
inc
jge
adc
jb
fidiv
iret
mov
fsubp
adc
mov
std
sbb
loop
pusha
adc
xchg
clc
sbb
xchg
gs
inc
push
cld
shl
pop
fmul
sbb
dec
repnz
sbb
in
inc
mov
jo
pop
push
mov
and
jae
jle
xor
lods
pop
xor
mov
fst
sub
into
jbe
mov
sahf
inc
addr16
adc
loop
lods
xor
in
mov
push
or
addr16
out
retf
cmps
pop
cmp
adc
add
jnp
cdq
les
and
pop
mov
mov
pop
mov
push
jno
or
mov
xchg
cmp
mov
sbb
mov
mov
mov
pop
push
xchg
sub
dec
xchg
sbb
mov
xor
jmp
test
jno
and
jbe
test
fist
cs
push
(bad)
push
cmc
test
lahf
and
stc
je
mov
je
pop
push
lock
ret
pop
push
push
mov
jl
pop
ds
idiv
fmul
shr
pop
xor
dec
nop
in
jbe
(bad)
sbb
bound
xor
retf
cmps
iret
ss
push
sbb
mov
mov
rcr
or
mov
repz
cmps
mov
xchg
jmp
xor
pop
add
rcl
mov
mov
int3
mov
or
mov
xor
pop
stos
nop
jg
movs
out
out
jno
call
mov
aas
and
call
jae
fisttp
test
inc
(bad)
push
xor
(bad)
clc
xor
ficomp
and
imul
xor
cmp
push
push
imul
jae
pop
bound
sbb
into
jae
es
dec
jl
push
push
jb
rol
jl
xchg
arpl
(bad)
icebp
std
popa
mov
jle
shl
mov
dec
or
xor
xlat
jne
xchg
xor
push
pop
ja
push
and
and
push
inc
dec
in
cli
pop
ficomp
in
push
pop
ds
sbb
xchg
sub
push
ja
js
add
iret
dec
mov
test
fdivr
jmp
cmp
scas
jb
jp
out
sti
xchg
jb
fs
arpl
daa
dec
rcl
dec
inc
xor
int3
cmp
nop
shl
mov
add
stos
pop
ret
add
mov
jmp
jb
jno
faddp
inc
jl
std
jne
call
cmp
dec
mov
std
mov
mov
add
stos
rcl
sbb
cmps
sbb
pushf
cmp
xor
push
cmp
and
in
adc
jp
stos
stos
inc
jmp
jno
pop
dec
aaa
mov
cs
or
pop
in
xlat
sub
jmp
push
jmp
add
scas
inc
lods
imul
loop
ds
(bad)
add
sub
stc
jg
adc
movs
adc
popf
pop
out
repz
punpckldq
inc
cwde
sub
jp
cld
test
mov
shl
ss
pop
fs
xor
gs
add
out
sahf
push
jbe
out
mov
cdq
pop
sbb
cmps
xchg
ja
xchg
out
pop
aam
sbb
ja
in
rol
cmp
adc
enter
jmp
(bad)
and
in
ja
out
push
in
shl
inc
fwait
iret
enter
cmps
ins
cld
das
(bad)
push
repz
gs
(bad)
jno
mov
dec
mov
xor
pop
scas
fprem
mov
and
jb
jmp
stos
mov
fs
shr
cwde
and
(bad)
push
aam
sub
in
leave
xor
ret
push
dec
mov
or
cmp
sub
and
bound
mov
sbb
movs
(bad)
adc
sbb
sbb
or
in
adc
pop
dec
inc
in
stos
jmp
daa
lods
add
in
ror
push
jmp
push
push
jp
int
push
(bad)
and
jbe
jno
es
sbb
movs
sbb
and
sub
fwait
push
dec
daa
popf
ss
enter
(bad)
lock
mov
rcl
xchg
sub
xchg
jl
(bad)
inc
pop
mov
or
cmp
xchg
je
and
jl
js
cld
call
xlat
pop
or
arpl
movs
mov
jmp
add
or
in
in
sar
int3
cmc
imul
add
add
and
cmp
fincstp
adc
mov
adc
movs
jae
jmp
jmp
sub
lock
xor
inc
pop
aad
jmp
or
gs
icebp
data16
imul
push
pop
dec
mov
pusha
fst
and
jg
movs
fnstsw
adc
adc
movs
mov
sub
add
xor
hlt
add
sub
fwait
shl
(bad)
mov
xor
mov
pop
sbb
or
cmp
aad
add
jnp
adc
jle
je
call
sbb
mov
(bad)
or
das
mov
mov
daa
push
scas
sbb
loop
pop
push
mov
sub
iret
lahf
faddp
pop
jae
fadd
call
ror
cmp
adc
mov
lods
jb
xlat
cmc
retf
xor
dec
xor
stc
(bad)
sbb
ret
dec
jle
add
mov
imul
and
test
scas
mov
xor
pop
ins
(bad)
out
cli
addr16
scas
repz
arpl
repz
push
std
out
fldenv
jns
jmp
xchg
imul
popf
sbb
xchg
sbb
adc
jns
sahf
sbb
mov
mov
pop
pop
arpl
pop
es
sub
call
sti
enter
jns
mov
out
in
std
cmps
in
pop
aam
in
jmp
jbe
adc
lods
sbb
les
fstp
retf
jp
mov
loope
sbb
jg
and
repz
repnz
xchg
jp
addr16
repz
mov
(bad)
dec
loopne
mov
loopne
in
loop
cmp
jp
push
adc
enter
sub
cmp
pop
xchg
push
mov
shr
clc
imul
mov
out
mov
push
fimul
jmp
jns
mov
jle
inc
ss
jno
inc
movs
xchg
inc
cs
or
and
jne
stc
mov
xchg
imul
(bad)
clc
cmp
and
cwde
in
and
xlat
aas
cmp
jp
sbb
inc
stc
xchg
adc
arpl
mov
mov
push
mov
mov
cwde
push
sbb
(bad)
out
pop
add
cmp
add
add
(bad)
push
fmul
push
and
imul
xor
jnp
(bad)
out
sar
jae
sub
adc
jns
cmp
cwde
mov
mov
into
xchg
mov
dec
test
sti
fs
pop
jge
dec
push
popa
js
imul
std
fild
(bad)
mov
popf
(bad)
sub
cmp
ret
fucomip
unpcklps
xchg
adc
xor
pop
push
into
out
fistp
mov
and
daa
jg
pop
jbe
cmp
loopne
mov
push
fmul
das
(bad)
(bad)
cwde
dec
or
cmp
ret
bound
dec
cli
bound
nop
test
cmp
(bad)
arpl
mov
xor
jo
loope
aaa
mov
js
dec
in
dec
jno
fnstsw
jb
dec
mov
push
lock
jle
ss
popa
xor
xor
cmps
pop
(bad)
sti
outs
ror
dec
push
push
adc
inc
dec
movs
adc
mov
aaa
out
jne
mov
jno
push
icebp
sbb
xchg
jl
jle
cmp
(bad)
stc
repz
mov
bnd
pop
inc
inc
cmps
push
pop
dec
jg
pop
sub
test
pop
pop
add
outs
sbb
mov
aam
sub
push
add
lahf
inc
ret
repz
adc
push
in
stos
test
pusha
not
dec
or
mov
pop
mov
dec
cmp
jp
sbb
dec
xchg
cmps
daa
imul
pop
data16
scas
fs
jno
pop
mov
mov
jle
aaa
pop
jae
pop
out
xor
push
addr16
clc
mov
push
loopne
or
jne
sbb
movs
jns
mov
xchg
(bad)
jp
aam
sub
rol
jg
dec
jne
dec
inc
jb
cmps
stc
sbb
mov
adc
imul
mov
and
fs
xor
dec
popa
(bad)
je
or
gs
inc
in
push
stos
dec
cmp
sbb
mov
pushf
jg
movs
push
nop
mov
call
aad
inc
xor
push
loop
das
or
pop
std
aaa
inc
in
mov
pop
jno
inc
jae
jae
xchg
push
retf
add
loop
inc
or
(bad)
sti
clc
(bad)
jns
jmp
pop
add
cmp
push
(bad)
dec
(bad)
sbb
ret
pop
jmp
ds
jecxz
jl
sar
push
mov
and
int
dec
test
sub
mov
and
xchg
jmp
pusha
mov
add
or
add
pop
pop
jg
push
in
scas
lods
stc
pop
hlt
add
adc
dec
(bad)
mov
cmc
cmp
xor
jmp
xor
jp
popf
inc
daa
lea
and
mov
daa
sar
pop
xchg
sbb
clc
xchg
mov
ins
xchg
push
pop
sti
aas
js
xchg
push
pop
data16
dec
mov
leave
lock
icebp
clc
inc
jmp
xor
pop
or
jo
ins
gs
cmp
inc
jmp
cmps
jge
fist
cmp
mov
push
data16
inc
dec
(bad)
out
rcl
and
cs
imul
or
cmp
and
imul
int3
lds
cmps
aam
loop
out
sbb
cmps
ss
xor
sub
test
(bad)
repnz
stos
or
and
xchg
cmp
(bad)
imul
pop
(bad)
aam
neg
mov
(bad)
mov
mov
mov
push
popf
inc
xor
shl
jmp
sbb
pop
cmp
pop
mov
shl
mov
repz
ja
pop
out
dec
xchg
mov
cmp
fistp
dec
sub
push
add
dec
pop
or
call
push
scas
or
sub
pushf
jns
xor
pop
scas
push
jne
mov
outs
movs
sub
shr
or
push
xor
daa
lods
into
add
and
push
ds
cmp
pop
es
das
jbe
(bad)
pusha
xchg
dec
sbb
jmp
shr
test
xor
and
out
cmp
cmp
in
outs
xchg
mov
sbb
xor
pop
xor
lods
(bad)
adc
retf
jmp
stos
or
mov
retf
arpl
stos
daa
mov
adc
mov
test
test
(bad)
(bad)
mov
mov
mov
retf
out
pop
xchg
ficomp
pop
dec
fnstenv
pop
leave
sub
inc
xor
push
jp
push
jne
and
addr16
mov
loope
jne
mov
add
in
dec
in
push
sub
sahf
cmp
mov
add
das
mov
sbb
hlt
push
or
jge
mov
xlat
shr
sub
mov
push
xchg
mov
and
add
int
mov
cwde
jle
inc
push
sub
cmps
inc
shl
shr
mov
shr
xor
aad
jl
sub
pop
imul
movs
mov
hlt
jecxz
dec
cld
lock
xor
mov
inc
popf
pop
icebp
(bad)
pop
xor
jbe
fbstp
cmp
cmps
shl
sub
xor
push
cmp
push
sbb
mov
cmp
and
lods
pop
pop
in
xchg
ret
pminsw
mov
push
ret
sub
adc
cwde
fdivr
push
pop
fmul
ror
pop
loope
add
sub
add
enter
pop
inc
int3
fs
repz
pushf
cld
mov
xor
fcom
pop
addr16
aaa
add
sbb
push
ja
xchg
jmp
xor
scas
xor
and
ret
test
or
icebp
movs
popf
or
adc
sub
push
xor
in
sbb
rcr
jmp
sub
(bad)
jp
ins
jmp
inc
fild
mov
dec
push
sbb
jmp
outs
jno
mov
jns
mov
call
push
mov
popf
mov
push
test
pushfw
call
sbb
and
cdq
inc
xchg
sbb
iret
pop
pusha
sub
ins
popw
test
jne
rcl
bound
jno
dec
jl
ins
call
(bad)
inc
lods
dec
out
dec
mov
cmp
in
inc
outs
or
(bad)
cmp
adc
push
push
add
test
dec
mov
sahf
jge
outs
jge
nop
aam
movs
pop
sar
mov
sbb
inc
aam
sub
shl
and
arpl
mov
mov
fwait
dec
pop
into
sbb
clc
outs
les
cmps
sbb
xor
ins
mov
loop
sub
imul
cmps
pop
stc
sbb
add
sar
jmp
push
cmps
xchg
pop
pcmpeqb
dec
jmp
xlat
neg
dec
push
xor
lods
mov
pop
shl
aad
mov
mov
pop
aad
jmp
leave
pmaxsw
sub
inc
pop
push
push
mov
or
and
push
cmp
mov
pop
pop
daa
js
in
mov
bound
mov
push
pop
ins
sti
and
jo
ret
lahf
imul
imul
cmp
pop
sbb
dec
push
push
int
addr16
es
xor
in
push
ins
pop
in
or
pop
inc
call
test
lds
lds
fld
ret
jge
cmp
cmp
inc
sahf
jmp
push
stos
aad
dec
fild
dec
outs
out
std
mov
mov
inc
addr16
push
mov
aas
jno
add
in
adc
pop
cmp
push
in
cmp
cmp
out
clc
mov
scas
pop
adc
nop
out
mov
inc
adc
inc
dec
mov
ins
scas
jecxz
out
lds
mov
xchg
mov
and
in
icebp
xor
sub
adc
sbb
xchg
and
push
mov
mov
dec
sbb
rcl
pop
cmps
fisttp
cmc
mov
cld
pop
loop
and
ret
call
push
add
rol
stos
fild
fucompp
mov
lods
mov
or
ds
cmc
js
hlt
test
cmp
cdq
push
adc
dec
pop
adc
dec
cwde
popw
jmp
out
fs
pop
aam
pop
push
outs
jg
(bad)
jae
inc
(bad)
inc
jge
loop
mov
loopne
dec
or
cmc
inc
mov
adc
outs
out
test
inc
out
inc
xor
pop
xchg
jl
mov
icebp
cmc
out
push
ds
dec
inc
js
cmp
mov
jecxz
arpl
push
int
dec
aaa
pop
push
xchg
das
pusha
stc
mov
in
dec
les
cli
test
jns
jo
mov
jle
cmovae
movs
test
cmp
xor
cli
xchg
call
in
inc
inc
aas
(bad)
xor
mov
jnp
xchg
pop
addr16
sub
gs
pop
sahf
push
push
jl
cmp
mov
jno
and
xchg
mov
pop
xchg
iret
call
push
mov
std
xor
(bad)
(bad)
cld
retf
push
and
mov
addr16
(bad)
ja
or
sbb
dec
repnz
push
xchg
sub
test
xor
iret
bound
(bad)
je
mov
mov
adc
gs
dec
ins
movs
sbb
lea
sub
es
add
cmp
ins
mov
xchg
aam
cmp
test
loop
movs
dec
jg
(bad)
mov
mov
js
dec
cmp
jbe
jmp
pop
and
aaa
dec
cmp
mov
cld
jg
nop
mov
imul
and
cwde
push
sahf
mov
(bad)
rol
das
js
cmovbe
add
inc
xchg
cmp
push
inc
fstp
dec
repnz
stc
stc
lds
cdq
stos
xor
inc
loop
movs
inc
fs
stos
sub
adc
mov
fnsave
sub
push
loop
(bad)
xor
clc
daa
push
movs
neg
stos
iret
jmp
ja
xchg
test
jnp
cmp
mov
lds
xor
jbe
ins
xchg
fwait
jg
mov
push
push
dec
clc
or
pop
ds
mov
out
sbb
jb
call
dec
aaa
pop
sti
cmc
cmps
push
mov
sub
inc
or
xchg
(bad)
mov
aas
add
dec
or
pop
gs
add
mov
in
jg
(bad)
int3
jae
neg
mov
inc
mov
cmc
dec
dec
(bad)
in
push
mov
push
add
pop
sbb
xchg
adc
mov
add
cmps
mov
adc
lods
xchg
jl
cmp
mov
call
cmps
pop
ins
mov
arpl
movs
das
sub
iret
cwde
or
mov
sub
inc
aam
test
xchg
lds
loope
addr16
jl
inc
movs
arpl
push
sbb
or
shr
pop
dec
cdq
movs
xor
jmp
retf
scas
rol
and
inc
jmp
adc
mov
dec
mov
add
pop
xor
pop
cli
fisttp
sbb
xlat
dec
cwde
or
ja
cmc
aad
lea
mov
adc
sbb
adc
in
arpl
xchg
ja
(bad)
dec
and
movs
fucomip
pusha
stos
ss
adc
ss
ds
cdq
fnstenv
ror
mov
and
or
jl
mov
test
test
int3
push
jmp
enter
fnsetpm(287
sbb
aaa
push
inc
into
sub
fwait
pop
sub
and
jnp
(bad)
push
shl
jecxz
add
add
sbb
push
push
into
inc
movsx
pop
nop
sar
and
add
imul
pop
ss
add
sub
adc
and
out
jl
mov
jmp
sub
jo
sub
dec
int3
jg
test
mov
adc
jae
cs
adc
loope
scas
jmp
sbb
test
dec
pop
jg
(bad)
jb
mov
fwait
and
fstp
sub
rcl
cmp
jle
mov
dec
daa
sub
mov
das
inc
mov
push
psllq
mov
test
inc
xchg
stc
xor
fcmovb
push
lahf
repz
mov
mov
sub
mov
add
or
(bad)
int3
shl
inc
in
cmp
or
rcl
mov
xchg
jnp
clc
iret
jno
test
imul
pop
sbb
icebp
lea
jmp
js
mov
xchg
popa
adc
add
xor
xor
out
cmp
repnz
inc
dec
add
hlt
(bad)
sbb
jp
ja
lods
stos
(bad)
lods
imul
jne
outs
ss
push
lods
pusha
test
adc
mov
pushf
dec
ret
dec
mov
pusha
mov
iret
pushf
inc
arpl
push
lods
mov
cwde
jecxz
ret
sub
bound
sub
push
sbb
adc
ja
dec
mov
test
xor
xchg
out
imul
jns
jmp
aaa
out
ss
sahf
adc
(bad)
jp
ret
push
sub
sub
icebp
add
mov
jmp
mov
push
ja
mov
fdivp
cmp
stos
popa
dec
jle
das
push
jle
movs
call
inc
out
cli
fimul
pop
inc
adc
nop
lods
push
pop
add
push
inc
or
aad
aaa
pop
or
stos
imul
stos
in
test
xor
mov
sti
aam
fidiv
std
xor
inc
mov
fcmove
adc
mov
dec
rcl
ja
pop
mov
inc
arpl
add
xchg
clc
ds
cmp
outs
inc
dec
daa
sub
xchg
fldenv
cdq
daa
push
(bad)
call
ja
stos
inc
sbb
retf
bound
sub
sbb
xchg
ins
push
xor
call
daa
dec
outs
xchg
inc
ins
lea
jmp
dec
(bad)
and
das
popa
bound
fs
cmc
ret
mov
lock
mov
jle
gs
jbe
cmps
mov
xor
sub
jecxz
or
add
scas
stc
daa
lahf
xor
int3
cmp
int3
push
dec
test
add
daa
daa
cmp
inc
mov
jl
add
inc
sbb
fs
xchg
es
cmp
adc
aaa
mov
jecxz
lods
into
dec
outs
lahf
cli
movs
mov
enter
loop
retf
push
xor
and
cmp
jns
push
adc
inc
cmps
jnp
pushf
sub
inc
out
cmp
mov
mov
shr
inc
push
ja
fs
inc
mov
mov
adc
dec
mov
add
mov
pop
xchg
dec
not
and
fcomp
aam
xchg
stos
ins
mov
ja
pop
sub
jae
jns
inc
das
cmp
fcom
loopne
loope
jmp
retf
(bad)
xor
fidivr
je
mov
pop
popf
cwde
jnp
imul
cs
pushf
repz
xlat
cmp
cwde
inc
outs
mov
lds
enter
call
rol
xchg
call
test
lds
shr
pop
dec
mov
fistp
mov
xor
scas
rcr
imul
int3
pop
push
daa
adc
dec
int
or
sbb
dec
sar
inc
mov
push
aaa
jnp
lock
das
fs
dec
ret
rcl
xor
rcl
sbb
xor
push
add
cmc
push
pop
pop
and
aaa
mov
outs
repnz
xor
inc
dec
inc
dec
cld
outs
sar
push
jnp
xor
sahf
int
xchg
in
and
inc
jne
outs
jb
push
mov
mov
cli
inc
jg
or
xor
and
push
sub
xlat
shr
rcr
fisttp
inc
inc
push
mov
cmp
add
ret
out
lods
nop
mov
push
test
add
xchg
outs
aam
mov
ret
xchg
hlt
jle
in
xchg
addr16
inc
pop
push
push
xor
push
sbb
shl
stos
or
sub
into
xor
repz
mov
adc
bound
adc
add
mov
pop
dec
call
jge
adc
aas
adc
sub
scas
mov
cli
mov
or
dec
popf
xor
(bad)
fisubr
(bad)
daa
inc
pop
jo
loop
inc
xchg
mov
mov
repz
cmp
and
pop
pop
es
push
push
xchg
jle
xor
gs
aaa
dec
inc
xchg
jno
jne
stos
cmps
dec
jmp
mov
sub
addr16
js
jns
mov
or
jo
stc
xchg
jle
and
gs
jle
sub
movs
cmp
jb
mov
inc
or
retf
push
pop
movs
mov
and
xlat
jmp
sub
push
std
cmp
das
add
pop
add
dec
ror
cmp
arpl
mov
stc
or
cmp
or
jbe
stos
push
div
inc
cmp
data16
and
xchg
sti
cmps
adc
repnz
xlat
enter
mov
popa
sbb
call
or
test
xor
(bad)
lock
xor
fmul
gs
test
jecxz
cld
nop
rcr
and
repnz
nop
retf
ss
and
dec
cmp
fistp
sbb
cmp
adc
loop
enter
sbb
enter
popa
imul
xchg
jle
and
bound
inc
jb
cld
and
(bad)
(bad)
cs
es
repnz
cmp
inc
test
int3
ret
addr16
addr16
xchg
mov
add
shl
mov
mov
add
ins
(bad)
mov
sbb
add
icebp
lods
dec
in
and
ret
adc
jge
sahf
lods
lods
bt
pop
dec
sbb
pop
and
mov
test
ins
sbb
(bad)
xor
pop
xor
repnz
in
pop
add
dec
adc
jbe
aad
movs
int
xor
pop
das
or
in
aaa
xchg
pop
mov
les
adc
shr
or
outs
jne
ss
sub
les
minps
push
mov
adc
test
xchg
push
cwde
xchg
add
cmps
stos
xchg
dec
(bad)
mov
mov
stos
cmp
cli
call
imul
movs
pop
mov
sub
cmp
sahf
xor
xchg
jns
fistp
inc
xor
or
xchg
(bad)
cmp
shl
push
jns
pushf
out
loop
add
or
xchg
cmps
cmp
sbb
pop
sub
ins
je
cwde
popf
add
mov
cld
mov
stos
mov
add
and
push
push
repz
sbb
imul
or
test
loopne
inc
mov
ds
ror
daa
cli
movs
inc
mul
add
imul
loopne
lods
cmp
sub
jb
sbb
ins
jb
addr16
sbb
push
inc
adc
push
ret
sbb
jp
cli
jge
hlt
cmps
xor
adc
push
stc
sbb
clc
(bad)
stc
jb
(bad)
cmp
xor
scas
push
mov
or
imul
stc
lods
sbb
sbb
sahf
push
fcmovne
mov
stos
push
addr16
pop
movs
in
dec
dec
jo
xor
inc
xor
xchg
xchg
add
jo
scas
clc
test
clc
(bad)
pop
dec
bound
arpl
inc
rcr
imul
sbb
enter
xlat
add
and
xor
pop
(bad)
scas
jmp
inc
xlat
inc
push
ja
mov
push
das
call
jo
add
pop
(bad)
mov
cli
fs
cwde
mov
push
push
pop
out
mov
add
test
arpl
enter
adc
xor
stos
js
aam
ja
ins
sbb
cmp
push
cdq
jne
aas
call
or
mov
out
adc
mov
movs
fcomp
popf
bound
cmp
test
cmc
push
cmp
retf
mov
inc
pop
pop
mov
repnz
dec
rcl
mov
addr16
mov
adc
push
add
fs
jge
dec
ret
or
jecxz
inc
pop
mov
into
xor
dec
mov
fild
jg
je
push
pop
cmp
mov
push
push
je
stc
das
sub
dec
xlat
retf
data16
jp
push
fist
fs
fcomip
aad
movs
ins
mov
inc
dec
mov
mul
add
imul
pop
fistp
adc
retf
mov
mov
mov
adc
fisubr
or
xor
add
aas
cmp
retf
retf
mov
inc
mov
cmp
scas
call
mov
gs
psubb
in
in
dec
mov
in
out
hlt
out
popaw
(bad)
sbb
mov
fstp
fs
mov
cwde
jl
mov
xchg
xor
push
iret
mov
fild
mov
xor
mov
sahf
pop
pop
bound
fnsave
xor
sbb
xchg
xor
pop
jne
cs
mov
repnz
enter
cmp
out
(bad)
sub
inc
and
xchg
dec
inc
cmp
add
ins
aas
jns
imul
mov
inc
push
js
xchg
mov
int
ret
int3
or
mov
inc
not
scas
fdivr
jb
add
inc
into
(bad)
sub
push
push
dec
daa
outs
jno
es
addr16
and
jnp
mov
add
pop
and
cli
dec
jmp
and
sbb
sbb
or
lock
adc
mov
lahf
jg
lea
add
pop
push
inc
add
jp
jmp
retf
mov
push
cmp
nop
pop
sahf
jb
fs
dec
inc
push
fdivr
lds
sub
xlat
lahf
xlat
movs
das
imul
push
test
je
scas
or
fcomp
mov
or
pop
mov
adc
add
mov
cld
inc
sbb
push
hlt
cs
retf
fcom
mov
aad
sub
int3
sub
aam
or
xor
cwde
ds
jne
aaa
and
mov
repz
mov
dec
aam
and
adc
sub
mov
mov
cmp
or
out
movs
jne
push
cmps
sahf
or
ins
sub
or
stos
mov
push
sti
push
sub
cmp
jmp
dec
push
out
sbb
pop
(bad)
fdivr
push
into
sub
movs
xchg
inc
push
test
mov
pop
cmp
and
stc
in
or
pop
sbb
push
and
mov
mov
das
popa
pushf
imul
add
mov
test
repnz
mov
add
cmp
pop
xor
jns
cmc
adc
test
xchg
lea
popa
push
and
popf
icebp
jne
(bad)
es
es
ins
or
cmp
mov
faddp
sbb
imul
inc
bound
jb
sbb
not
clc
xchg
call
and
xchg
clc
jne
mov
rcl
mov
push
adc
xlat
xchg
test
mov
lods
out
in
ja
(bad)
lods
mul
mov
fs
mov
push
mov
mov
mov
or
and
aam
fwait
lods
neg
fnsave
cli
add
bound
movs
sbb
daa
jo
pop
jmp
dec
aas
lds
mov
sbb
cli
and
mov
cmps
mov
iret
movs
repz
loopne
inc
pop
je
shr
loopne
push
sbb
push
gs
iret
arpl
test
inc
jg
(bad)
and
iret
or
xor
cld
jl
push
stos
cmp
imul
and
mov
(bad)
sbb
inc
add
loope
mov
or
mov
inc
es
gs
xchg
leave
push
mov
imul
mov
jmp
add
arpl
or
mov
ins
adc
pop
jp
xor
popf
push
ins
mov
sbb
ss
mov
cwde
sahf
dec
jne
clc
cmc
dec
repnz
sub
cmp
clc
sbb
jl
inc
sbb
imul
jl
iret
aad
push
(bad)
dec
cmp
test
cmp
mov
ret
movs
mov
leave
imul
cld
mov
pop
pop
or
nop
mov
daa
pop
jl
or
shl
out
mov
pop
sbb
leave
mov
xor
push
push
or
jo
popa
cmp
pushf
xchg
outs
ins
sub
push
fidiv
pop
(bad)
jmp
jae
pop
sbb
push
daa
jle
jne
popa
mov
jmp
fscale
jge
jge
pop
cmp
(bad)
mov
jmp
jns
jmp
sub
mov
sahf
pop
push
mov
adc
push
dec
(bad)
mov
movs
cdq
jle
stos
push
mov
push
loopne
pop
cmp
xchg
inc
and
in
imul
fstp
in
push
dec
mov
xor
retf
psllw
sahf
jp
sub
jbe
mov
lock
adc
pop
ja
adc
imul
aam
pusha
lods
add
add
push
(bad)
pop
jp
rcl
cli
cmp
xchg
imul
push
ror
xchg
scas
imul
jns
mov
in
daa
clc
and
xchg
fiadd
stos
push
addr16
pop
lds
stos
inc
jg
movs
fwait
and
int3
shl
out
mov
ins
iret
mov
jne
cld
adc
add
inc
cmp
pushf
or
cmc
jmp
inc
mov
add
pop
push
xchg
daa
icebp
mov
jle
loop
mov
movs
mov
sbb
lds
mov
add
movs
test
xor
test
call
xchg
lea
mov
mov
nop
mov
add
scas
sub
retf
hlt
dec
pop
pop
add
je
cmc
imul
jmp
unpckhps
test
int3
mov
push
push
xor
icebp
cmps
cmp
call
pop
cmp
adc
mov
adc
push
popa
sub
test
daa
pop
push
jbe
cmp
test
dec
adc
dec
mov
lods
jae
mov
ds
mov
pop
inc
or
popa
aas
sbb
dec
mov
ret
add
lods
scas
mov
lds
pop
cmp
mov
adc
pop
(bad)
in
jmp
cwde
adc
adc
adc
pop
dec
dec
ja
jne
mov
push
into
xor
dec
das
dec
mov
stc
and
adc
mov
adc
sub
xchg
fdivr
ret
push
mov
sar
push
stc
xchg
add
popa
js
push
jbe
push
test
push
or
mov
inc
push
dec
jp
dec
pop
std
jae
not
mov
stos
xor
cmps
outs
out
mov
jb
outs
dec
ret
xor
lock
xor
mov
mov
ins
jecxz
retf
cmp
mov
shl
icebp
cmp
jo
mov
mov
inc
push
add
push
in
imul
adc
mov
xchg
xor
shr
outs
push
pop
fimul
or
rol
cli
pop
fadd
jnp
mov
call
jg
(bad)
mov
or
add
or
sbb
add
sub
mov
jb
and
mov
push
shr
call
inc
pop
jle
retf
gs
rol
inc
repnz
push
xchg
cmp
test
or
xchg
adc
or
pop
in
sbb
inc
dec
jmp
inc
loop
pop
xlat
imul
xor
and
inc
xor
(bad)
(bad)
stc
xchg
lods
mov
test
jmp
adc
and
cmp
int3
sub
push
outs
ror
inc
js
ret
push
push
popf
sti
fs
sub
jl
xor
adc
pushf
sub
sahf
cmp
xor
dec
xlat
in
outs
outs
lods
pop
mov
mov
inc
push
inc
daa
cmp
inc
dec
sbb
sti
dec
lods
xchg
ret
jle
adc
shr
into
sbb
pop
(bad)
xlat
lea
out
das
dec
adc
in
pop
mov
push
fisub
addr16
pop
inc
daa
test
jle
leave
leave
push
inc
mov
mov
fwait
xchg
jecxz
sbb
das
push
addr16
and
sti
cs
push
mov
lods
popa
xchg
xor
jp
stos
lods
adc
xchg
repnz
sbb
test
ret
inc
scas
shl
cs
ret
popa
sete
mul
jne
movs
sbb
stc
in
je
icebp
pusha
mov
scas
in
lds
add
repz
imul
and
call
imul
clc
aaa
in
inc
sub
sbb
iret
out
dec
sbb
cmp
dec
retf
jne
out
repz
sbb
mov
mov
mov
(bad)
xchg
jb
data16
mov
ret
and
jb
out
mov
(bad)
sub
xor
xor
push
mov
pop
push
mov
mov
jno
lahf
jmp
push
xchg
pop
sub
add
jne
dec
inc
mov
lock
sbb
or
or
pushf
pop
inc
mov
(bad)
fwait
out
pop
mov
xchg
sbb
stos
je
fstp
sahf
pop
in
push
imul
loop
imul
inc
pop
addps
dec
mov
mov
loopne
lods
retf
add
pop
jns
std
push
mov
outs
pop
push
(bad)
cmp
jp
xor
xchg
cmp
add
jno
sbb
mov
retf
push
pushf
(bad)
stc
cmp
ret
and
cmp
jmp
dec
(bad)
cmps
mov
pop
shl
jl
jecxz
jge
and
scas
enter
mov
js
mov
addr16
in
xchg
inc
(bad)
xchg
outs
jmp
out
imul
mov
jbe
xchg
ret
mov
xor
jp
push
(bad)
dec
pop
push
popf
inc
pop
push
es
das
cmps
inc
jle
repnz
int
rcr
xor
pop
mov
xor
ret
test
rol
cmp
mov
mov
mov
mov
pusha
pop
mov
xor
ficom
pop
stc
adc
sbb
push
jnp
fsub
push
lods
jbe
outs
mov
add
mov
adc
mov
repz
mov
mov
test
(bad)
and
std
imul
inc
loopne
xor
cmp
fs
add
and
scas
mov
std
dec
push
push
jbe
ins
cwde
sbb
push
or
mov
pop
mov
ret
xchg
out
inc
mov
daa
scas
ins
dec
push
cmp
jmp
out
dec
mov
adc
fwait
lds
mov
dec
push
outs
push
xchg
es
cmps
xor
mov
and
xor
lahf
out
aad
fadd
or
jbe
sub
jne
xor
push
add
out
retf
push
leave
jge
stos
and
xor
jmp
and
or
xlat
add
mov
loopne
push
add
shr
imul
push
push
bound
mov
dec
movs
and
fidiv
dec
mov
rcl
or
pop
cmp
sbb
inc
push
shr
stc
pop
dec
add
js
cmp
mov
fisub
ins
and
jb
push
shl
push
(bad)
xchg
cmc
pusha
pusha
or
xchg
or
xchg
les
stos
or
es
sahf
sbb
aas
cmp
sub
sbb
mov
jmp
femms
(bad)
cwde
xchg
into
or
xchg
pop
jmp
xchg
call
xchg
sbb
imul
adc
jecxz
jnp
fdivr
stos
(bad)
dec
or
xchg
(bad)
in
mov
into
cmp
fld
out
stc
call
mov
mov
push
ja
dec
jns
jo
in
dec
aad
fnstsw
dec
push
or
mov
adc
movs
jmp
push
(bad)
jbe
push
push
in
mov
pushf
sbb
test
xor
scas
fucomp
add
sbb
mov
add
pop
xchg
mov
sub
aas
in
scas
inc
fs
test
mov
cwde
push
pop
les
sbb
mov
xchg
push
rcr
fild
test
inc
aad
jl
inc
xchg
out
cli
push
sbb
jmp
fisubr
(bad)
cld
div
xchg
shl
xor
cmp
pop
add
xor
xor
mov
cli
mov
sbb
sbb
jo
fwait
push
push
sbb
cli
pop
adc
(bad)
adc
in
cmp
retf
push
xor
shr
js
sbb
push
fld
mov
jl
lods
cwde
xor
fs
xor
enter
mov
sar
push
sub
repnz
cmp
xchg
arpl
shl
sar
mov
jl
dec
push
int
rcl
xor
ins
sahf
addr16
mov
(bad)
in
inc
push
fucom
sbb
pushf
adc
(bad)
out
and
jne
adc
mov
aam
fistp
dec
sub
gs
in
in
sbb
test
mov
addr16
ds
adc
out
call
out
jno
ss
push
mov
cmp
scas
xchg
sbb
pop
std
lods
mov
into
gs
xor
mov
cmp
outs
sbb
dec
sub
(bad)
mov
cmp
inc
out
bnd
mov
dec
jnp
cmp
(bad)
(bad)
cmc
push
add
repz
and
and
push
pop
push
adc
add
mov
push
or
test
push
(bad)
imul
mov
push
fnstsw
(bad)
movs
pop
pop
ins
pop
lods
das
rcl
or
sbb
call
(bad)
mov
mov
mov
lods
nop
sub
pusha
jb
sti
mov
adc
repz
pop
cmp
or
jbe
sub
inc
je
add
push
push
cli
pop
cmc
mov
sub
ret
jmp
les
movs
sbb
sub
nop
lods
aaa
xchg
fbld
ins
inc
dec
jecxz
inc
lock
call
xor
js
ret
push
pop
mov
add
adc
jmp
mov
dec
lods
popa
(bad)
ds
mov
jp
adc
cmp
inc
add
inc
pop
cmp
mov
imul
or
lock
xor
(bad)
dec
mov
aam
test
cmp
mov
in
cmp
dec
ins
call
cmp
mov
imul
sbb
pusha
mov
or
pop
(bad)
or
int3
pop
xor
mov
je
pop
shl
xchg
sbb
jnp
mov
cmps
add
dec
(bad)
jl
rol
jmp
cmc
pop
push
mov
and
push
enter
repnz
mov
jbe
in
call
(bad)
lea
xor
push
mov
retf
or
inc
mov
movs
mov
jns
shr
and
pusha
dec
dec
sbb
scas
cmp
inc
push
(bad)
rol
inc
mov
mov
xchg
cmp
sahf
inc
mov
or
dec
jle
popa
aaa
loope
xchg
jg
dec
cmps
bound
jmp
ror
loope
stos
not
add
ins
icebp
jnp
je
stos
xlat
es
fistp
mov
dec
sub
adc
mov
push
cmp
pop
jns
mov
mov
sbb
jns
sbb
add
in
add
jbe
in
mov
fisttp
dec
(bad)
daa
ja
cli
aad
sbb
movs
pop
cld
jb
push
out
and
jno
jl
inc
lods
outs
pushf
jmp
es
rol
ja
ins
push
outs
dec
ins
jg
pop
fidiv
dec
xchg
cmc
jb
mov
add
dec
aaa
xor
fs
sar
cmc
shr
std
fldenv
imul
nop
cmc
repz
aaa
mov
pop
mov
cmps
aaa
sub
and
xchg
scas
arpl
mov
xchg
jmp
xchg
xchg
dec
and
xor
icebp
cdq
mov
inc
pop
push
inc
loopne
pop
dec
daa
addr16
mov
call
xor
movs
fild
arpl
push
mov
xor
mov
cwde
adc
js
inc
movs
cmovne
push
inc
movs
dec
mov
add
pop
and
inc
mov
out
in
dec
inc
pop
fsubr
sub
mov
jmp
xchg
sbb
and
fs
and
pop
and
inc
(bad)
iret
cwde
adc
dec
cmp
sub
push
sti
push
push
dec
jl
out
sub
mov
loope
xor
je
movs
sbb
cmp
cmc
sbb
xor
stc
inc
rol
mov
add
push
push
fdivp
pop
mov
fist
clc
sbb
movs
lods
add
cli
jmp
or
jns
xchg
jmp
inc
test
xor
dec
stc
mov
popa
mov
outs
mov
je
mov
xchg
imul
sahf
inc
pop
add
daa
hlt
repz
mov
lods
sbb
xchg
add
ret
jmp
inc
mov
ror
aas
rcr
fisttp
fadd
xor
cmp
imul
mov
ffree
shl
lock
ja
inc
jne
stos
cmc
fadd
lds
sbb
mov
xchg
mov
out
dec
lods
push
out
out
retf
adc
and
or
push
sub
int3
movs
inc
and
adc
aam
jge
je
add
ins
lock
or
lea
pop
jl
pusha
jb
xchg
test
jnp
cmp
dec
shl
jb
mov
xor
inc
fucomip
mov
ss
out
and
scas
or
jae
(bad)
mov
mov
iret
sbb
push
shr
mov
loopne
add
outs
cmp
imul
and
loope
inc
sahf
sub
sahf
fiadd
xor
pusha
dec
push
jp
(bad)
cld
leave
or
push
leave
inc
mov
aas
or
shl
dec
test
aam
push
movs
inc
into
dec
pusha
adc
push
mov
jne
sub
ins
cmc
mov
idiv
dec
cs
pop
popa
cdq
sub
mov
stc
in
loopne
dec
xor
xor
xchg
fwait
es
pop
dec
idiv
(bad)
ins
adc
adc
or
nop
pushf
jbe
mov
loopne
cdq
movs
ins
and
test
mov
in
or
dec
cli
je
push
pop
inc
int3
fisttp
ins
push
or
adc
push
shl
xchg
les
das
test
pop
clc
cmp
jmp
imul
adc
add
lods
jb
mov
ret
xchg
sbb
imul
and
dec
mov
sar
aas
add
test
dec
clc
mov
enter
mov
add
cwde
mov
xchg
mov
cwde
jle
clc
pop
inc
xor
dec
imul
xchg
cmps
mov
adc
iret
push
dec
ret
out
dec
xchg
iret
or
and
sub
jbe
scas
xor
jne
aas
mov
cmp
retf
sti
lods
fild
push
(bad)
jmp
pop
out
dec
xor
in
jb
idiv
adc
mov
xchg
jmp
out
popa
adc
push
and
pop
pop
stos
jmp
loopne
and
bound
sub
imul
inc
add
ins
pusha
fst
fsubr
or
stos
lds
scas
out
mov
outs
inc
es
idiv
xor
int
test
shl
mov
push
push
push
adc
or
sub
(bad)
out
add
sahf
xor
cs
and
xor
jae
cmp
cmp
inc
cmps
test
cwde
repz
push
jo
imul
sbb
xchg
mov
gs
push
aad
push
jb
sub
mov
and
mov
mov
mov
mov
fld
cmps
mov
shl
pop
fld
mov
sub
pusha
pop
lods
mov
xor
mov
mov
add
mov
pushf
data16
dec
fs
std
or
popa
pop
repz
scas
push
sub
retf
aaa
loopne
fsubr
pop
(bad)
sbb
inc
ss
rol
test
pop
and
lods
mov
pop
movs
into
or
inc
xlat
push
adc
mov
ficomp
(bad)
cmp
stos
dec
sahf
ret
xchg
jns
mov
fs
xchg
or
cmp
cli
fwait
aaa
cdq
add
or
inc
out
imul
sub
dec
jmp
cmp
sar
add
cwde
push
jge
fldcw
push
jle
movs
bound
fstp
jge
xor
push
push
jbe
fisubr
push
movs
fld
xchg
jne
into
in
pop
sbb
outs
test
mov
xlat
xchg
sti
push
outs
push
mov
cmc
inc
ds
arpl
ds
xchg
cdq
pop
and
add
jns
and
sbb
and
imul
inc
leave
mov
mov
cmp
sbb
es
mov
call
hlt
not
(bad)
sbb
push
outs
xchg
addr16
stos
jp
in
mov
jle
push
jp
test
js
push
cmp
aas
adc
adc
sub
ret
adc
inc
push
push
mov
(bad)
adc
pop
movs
stos
mov
movs
movs
test
add
pop
loop
sub
push
in
arpl
add
data16
cmps
movs
lds
idiv
pop
ins
in
jne
ins
pop
mov
and
out
sar
repz
(bad)
lock
sbb
mov
jp
aaa
xor
jl
mov
push
add
mov
jns
gs
xor
mov
jns
add
in
daa
mov
adc
lea
sbb
pop
aas
mov
cmp
out
jbe
pushf
jbe
imul
inc
call
or
sbb
push
mov
sub
pop
sbb
mov
jg
mov
sbb
sub
in
sbb
xchg
outs
cmps
push
sub
dec
ins
inc
jno
xor
repz
ins
stc
mov
cdq
xchg
fisubr
mov
mov
push
sbb
lea
mov
push
sbb
dec
out
jl
xchg
add
std
jl
xchg
pop
and
jle
or
pusha
mov
ret
popf
mov
xchg
cli
and
sti
in
mov
lea
or
xchg
popa
xchg
push
jb
in
bound
stc
mov
cmp
lahf
fiadd
loopne
mov
inc
out
mov
push
jg
push
or
mov
add
mov
mov
adc
(bad)
sbb
lods
call
sbb
lea
(bad)
mov
pop
inc
mov
call
pop
jno
and
push
mov
mov
inc
gs
mov
sbb
pop
inc
push
ja
mov
jb
sbb
addr16
ss
enter
sti
int
call
mov
fs
pop
outs
mov
sbb
fwait
jecxz
lods
outs
out
ja
nop
jns
outs
stos
or
repnz
rol
dec
inc
mov
sbb
add
cmps
jmp
or
cmp
or
push
xchg
rcr
ins
and
inc
and
std
inc
stc
push
pop
adc
mov
pop
add
and
xchg
push
in
(bad)
into
shl
sbb
xchg
cmp
inc
pop
ffree
jnp
out
ret
movs
or
outs
repz
loope
in
dec
sbb
inc
in
inc
loop
adc
dec
sbb
sti
push
add
mov
dec
jnp
jle
adc
scas
imul
mov
xchg
pop
adc
jmp
sar
imul
sub
jecxz
add
nop
pop
mov
mov
ss
mov
add
xlat
(bad)
pop
dec
mov
sbb
xor
pop
xchg
dec
mov
and
jp
or
test
lea
fmul
es
xchg
dec
push
sub
(bad)
imul
add
or
out
mov
ret
push
mov
rcl
add
xchg
imul
or
(bad)
test
aam
clc
sub
adc
push
sub
rcr
or
in
dec
ret
push
cmp
sbb
cld
mov
jo
push
test
mov
aaa
ds
cmp
clc
mov
mov
test
outs
xor
lds
pop
repz
xchg
dec
neg
dec
mov
add
xchg
pop
rcr
fadd
push
push
sahf
enter
mov
in
pop
retf
out
stos
inc
repnz
mov
pop
ret
test
js
retf
ds
and
sar
stos
jecxz
sbb
cmp
dec
arpl
or
jp
push
lock
mov
push
aad
pop
repnz
xlat
jae
push
inc
gs
imul
adc
pop
test
jle
mov
ret
fidiv
push
mov
int3
add
sbb
or
adc
scas
enter
add
mov
sub
xchg
ror
mov
dec
pop
retf
call
ror
jne
xchg
outs
xchg
aam
xchg
call
xchg
ins
sbb
repz
je
cmp
and
or
les
add
or
push
shr
inc
int3
pushf
adc
mov
or
mov
push
sbb
outs
jge
xchg
pop
daa
lods
lahf
fld
movs
mov
cmps
cli
cmp
cmc
sub
in
mov
or
or
push
sbb
stos
std
push
or
mov
dec
sbb
inc
add
jmp
aam
xor
mov
sbb
mov
cs
adc
fadd
and
dec
movs
out
jg
fnsave
or
xchg
jl
sbb
sbb
mov
sub
pop
stc
push
sub
addr16
imul
sti
fdivrp
xor
adc
push
ins
jno
(bad)
cmp
pop
and
std
loope
mov
sbb
stos
jb
bound
jb
int
fmul
jge
inc
stos
and
mov
outs
cld
fwait
ja
sar
jg
sar
inc
ret
shl
jo
and
jae
retf
cld
cs
test
mov
push
call
sbb
retf
out
lds
xor
and
enter
push
mov
jp
jl
gs
sub
aaa
or
jmp
push
loope
shl
xchg
pop
or
xchg
in
xchg
push
mov
inc
ss
xlat
cmp
vunpckhps
mov
ss
mov
popf
cmp
and
inc
outs
dec
push
es
xor
iret
cmp
cmp
(bad)
inc
mov
lods
sahf
fst
cmps
pop
ja
inc
dec
jg
test
je
jb
movs
mov
push
or
inc
cli
adc
jae
jg
pop
ss
mov
rol
or
inc
dec
mov
mov
pop
jno
inc
xor
fbld
scas
mov
fst
mov
inc
jno
int
repnz
sbb
aam
and
sahf
mov
enter
pop
mov
call
xlat
lods
xchg
mov
mov
xor
mov
shr
push
dec
ins
jl
shl
cmp
int
dec
jle
out
and
sahf
add
out
ds
add
mov
or
jg
repnz
jge
ftst
mov
leave
daa
push
mov
in
sub
rcr
jmp
in
imul
pop
es
sbb
es
(bad)
mov
nop
rcl
lea
addr16
adc
jmp
daa
test
xchg
fidiv
xchg
in
mov
push
pop
mov
bound
scas
jae
dec
imul
ret
imul
mov
mov
push
shl
or
add
inc
js
gs
xor
shr
sub
loope
push
imul
shl
add
sbb
cld
sub
sbb
movs
add
push
cmp
xchg
stos
add
call
add
jp
(bad)
loopne
popf
into
mov
pop
cmc
(bad)
mov
repnz
repnz
push
repnz
sub
xor
out
adc
adc
xchg
pop
inc
ret
sbb
mov
stos
jg
bound
push
mov
xor
mov
jle
(bad)
adc
push
cmp
mov
inc
mov
outs
jle
mov
xor
jmp
dec
xor
call
adc
and
into
pop
ror
add
mov
sti
retf
inc
dec
mov
lock
dec
push
dec
ss
xchg
sbb
idiv
nop
and
fldenv
stos
call
in
pop
in
push
inc
retf
pop
sbb
cmp
shr
mov
push
loop
sub
ins
aaa
pop
push
sub
sub
or
sub
mov
mov
xchg
inc
jg
jmp
mov
sub
into
mov
push
mov
xchg
push
int3
sti
jp
mov
inc
addr16
mov
test
pop
leave
mov
je
push
pop
adc
mov
jae
cmp
push
daa
jbe
iret
pushf
adc
cwde
out
not
dec
gs
sbb
pop
std
xchg
mov
mov
inc
addr16
or
mov
or
icebp
and
add
adc
jmp
inc
js
add
cmp
xchg
jb
lods
sub
and
add
retf
jne
mov
scas
sub
(bad)
fstp
repz
ds
lods
fisub
mov
sbb
loopne
add
imul
dec
(bad)
jbe
sub
jb
fnstcw
and
scas
push
push
and
and
je
cmps
pop
jo
mov
fist
jno
inc
call
adc
mov
and
in
push
mov
jl
sbb
ins
sub
retf
movs
or
mov
call
jp
es
outs
jl
in
lock
push
(bad)
push
cmp
data16
imul
inc
je
in
leave
pop
or
(bad)
jns
leave
or
or
sbb
stos
je
and
cmp
leave
xchg
mov
in
fidiv
sub
das
aam
dec
cli
or
push
out
jp
movs
js
gs
xchg
sub
dec
arpl
ret
repz
cld
bound
lea
mov
xchg
call
pop
outs
mov
jmp
test
ret
dec
mov
retf
lds
push
stc
adc
mov
sbb
push
pop
push
jecxz
sbb
pop
fwait
pushf
es
inc
pushf
or
xchg
and
or
in
mov
pop
fwait
pusha
fsub
jno
jno
imul
movs
movs
gs
pop
fld
pop
push
push
ret
push
mov
shr
mov
fisub
jp
cmp
xchg
pusha
nop
cwde
out
loop
outs
stos
pop
loopne
mov
xchg
call
push
sub
ffree
ins
or
pop
xlat
push
or
adc
ins
inc
loopne
inc
aad
in
fs
popa
push
push
(bad)
dec
ins
push
jns
push
cdq
sub
mov
sub
mov
mov
je
jo
dec
mov
fidivr
gs
or
cmp
sub
fwait
push
push
push
cmps
lahf
aaa
std
pop
xor
pop
icebp
call
jle
inc
fsub
push
lea
jmp
mov
ja
pop
je
int
test
xchg
leave
int3
push
xchg
ret
pop
push
repnz
xor
xchg
jge
scas
push
out
mov
xor
add
jb
call
shl
jp
movs
movs
lds
pop
jb
movs
cmp
pop
ds
xor
ret
je
popf
cli
jmp
pop
ret
mov
imul
(bad)
fmul
jge
dec
test
push
inc
scas
and
xchg
cmp
adc
sub
call
jne
push
inc
clc
neg
popa
cmp
ret
add
xor
add
jbe
inc
lahf
inc
push
jbe
mov
pop
in
mov
mov
in
push
dec
jae
and
(bad)
daa
movs
xchg
arpl
inc
sub
push
or
ror
mov
sbb
pop
fisub
dec
xor
popa
in
pop
pusha
cs
mov
and
test
ss
clc
push
dec
scas
xor
and
mov
or
call
jmp
ss
jge
loope
xor
stc
cmc
mov
push
pop
test
jb
rcr
xor
scas
nop
ror
cmp
aas
movs
push
adc
sub
popf
inc
retf
jp
mov
ins
dec
pop
sub
sub
dec
mov
pop
dec
sub
cli
adc
jbe
inc
mov
pop
fdiv
push
nop
xchg
(bad)
inc
stos
add
jmp
popf
xchg
addr16
inc
call
dec
pop
bnd
shr
std
fadd
mov
xor
lahf
push
sbb
mov
(bad)
sbb
jns
and
push
cmp
neg
mov
aam
gs
bound
mov
jg
call
jne
cmc
movs
or
pop
dec
out
or
sar
enter
les
pop
aaa
xlat
push
or
rcr
or
mov
sub
aam
test
sbb
xchg
add
cdq
push
and
loop
inc
pop
mov
test
pop
test
pop
jmp
int3
mov
les
stos
hlt
sbb
ja
mov
sahf
push
xor
jl
mov
inc
in
(bad)
retf
dec
nop
push
cmp
mov
data16
xchg
arpl
movs
movs
push
add
int3
cmps
dec
mov
sub
call
add
cmp
sub
imul
jns
mov
fucom
stos
dec
std
mov
mov
sar
test
call
mov
dec
push
aam
loope
add
retf
push
add
out
fdivr
mov
push
mov
in
sbb
adc
dec
xor
mov
cmps
and
shl
mov
cmp
fcom
or
fdivr
lds
pop
inc
dec
(bad)
pop
sub
lea
and
xor
pop
ins
mov
ins
jnp
add
and
push
addr16
out
xchg
enter
sbb
xor
pop
push
add
test
jle
jo
xlat
and
cmp
(bad)
test
js
hlt
jnp
adc
retf
cmps
xor
jmp
mov
sar
cmp
fmul
jle
push
pop
adc
jmp
clc
aaa
add
int
pop
rcl
jmp
popa
jnp
push
in
adc
(bad)
cwde
sbb
mov
pop
test
jns
fwait
adc
mov
dec
inc
cs
pop
das
mov
sub
ds
bound
retf
xchg
mov
retf
or
movs
inc
adc
jmp
or
lods
jne
(bad)
(bad)
repnz
cmp
add
sub
pop
jno
inc
fdivr
or
cwde
jge
mov
push
movs
sbb
inc
adc
cmp
mov
push
sbb
inc
xchg
cmp
mov
out
dec
pushf
dec
dec
inc
cmp
cmp
xor
mov
les
les
aas
sbb
adc
shr
mov
xor
(bad)
jne
shr
ret
fwait
mov
cmp
scas
adc
inc
out
pop
enter
and
movs
cmps
jns
jmp
dec
call
xor
add
mov
jae
jle
loop
mov
std
ja
cmp
jb
ss
aas
and
out
mov
test
mov
aaa
dec
mov
jne
fcmovnb
mov
cmp
inc
xchg
dec
mov
xor
imul
mov
dec
xor
pop
fisub
outs
mov
out
mov
mov
(bad)
lahf
inc
aas
adc
je
mov
(bad)
mov
stc
fdiv
cmps
cdq
aam
push
jno
sub
aaa
pop
adc
idiv
pop
lock
cmp
idiv
jae
sbb
cmps
jb
jl
pop
rol
les
or
sub
adc
das
popa
aad
push
sbb
shl
jne
retf
scas
ja
pop
add
pop
ss
movs
(bad)
xlat
pop
cli
xchg
aad
sbb
mul
pop
sar
add
aaa
dec
sub
mov
inc
sub
xor
dec
jne
xor
sbb
mov
push
aam
jle
(bad)
push
push
scas
sbb
arpl
jmp
push
retf
mov
adc
(bad)
stc
dec
fsubr
int3
and
xor
rcr
mov
call
xchg
push
mov
jne
movs
out
mov
mov
cmp
std
outs
pop
mov
mov
mov
jg
popa
inc
xor
pop
adc
xor
mov
out
jns
ret
cmp
jg
or
push
add
cmp
mov
arpl
add
shr
iret
push
jo
sub
popw
mov
dec
mov
lock
and
sbb
in
jmp
jmp
fst
xor
rol
pop
sub
sub
push
jmp
dec
adc
push
pop
jo
pop
xchg
imul
push
scas
sahf
js
xchg
pop
add
pop
(bad)
loope
dec
es
loopne
out
nop
adc
add
mov
fst
(bad)
or
js
enter
push
and
sub
inc
xor
lock
cmp
fdivr
pop
inc
or
les
xchg
mov
push
cmps
(bad)
call
out
mov
jle
mov
xchg
dec
jmp
imul
call
mov
xchg
sbb
clc
test
pop
sub
xchg
hlt
(bad)
push
idiv
test
add
inc
adc
add
or
mov
mov
jne
push
aam
adc
sub
inc
inc
hlt
ror
adc
adc
cmp
in
popa
add
adc
and
mov
add
sub
jmp
push
add
loop
mov
data16
mov
repz
(bad)
loop
pop
dec
or
or
xchg
inc
mov
mov
inc
xchg
rol
push
jno
xor
cmp
bound
add
cwde
xlat
inc
popa
sbb
dec
in
xchg
fidivr
adc
xchg
imul
shl
sti
xor
repnz
and
push
add
sub
sti
inc
nop
pop
popa
sbb
mov
(bad)
sub
inc
das
xor
push
ds
daa
mov
aad
pop
lock
adc
inc
or
pusha
mov
inc
stos
popa
sbb
fidivr
xchg
jnp
cwde
push
or
mov
push
dec
cdq
jecxz
fbld
clc
cmps
sti
je
in
jb
test
mul
inc
sbb
mov
rcl
add
mov
jo
es
jg
xor
fld
xor
sbb
jp
fptan
and
add
or
inc
pop
cmps
out
xchg
fisttp
adc
out
and
pop
jge
jne
scas
pushf
inc
mov
sti
jg
or
adc
xchg
das
or
test
cmp
in
sub
jl
jmp
sbb
mov
dec
xor
fidivr
stos
jecxz
or
cmps
loopne
pusha
push
jg
test
fcomp
xchg
sbb
imul
test
pop
cmps
test
in
xchg
push
nop
fdiv
das
lods
inc
jp
pop
aas
call
or
xchg
sbb
cmps
dec
int
xor
add
push
and
mov
ret
ja
(bad)
xor
and
mov
fst
sbb
cmps
shl
push
mov
jge
xor
jbe
(bad)
sbb
mov
fst
rcl
cmovne
out
data16
push
cmps
in
add
aas
test
pop
adc
out
gs
in
in
cmp
es
popa
daa
sbb
push
es
jecxz
xlat
mov
inc
push
pusha
rcl
jp
xchg
jbe
fsub
mov
inc
add
and
jl
test
dec
bound
mov
test
retf
movs
loopne
popa
movs
pop
add
enter
pop
jb
lods
mov
mov
test
ficom
div
add
sahf
mov
int3
cmp
inc
mov
dec
out
stc
jo
cmps
inc
out
mov
sbb
repnz
push
mov
pop
dec
daa
sub
or
test
cmp
(bad)
mov
adc
aaa
ins
sub
inc
xchg
cmps
leave
dec
cmps
pop
dec
xchg
ins
cli
inc
call
jns
cmc
ret
sub
jmp
test
dec
adc
nop
xlat
mov
mov
cli
mov
push
scas
xchg
and
loop
xor
(bad)
pop
imul
mov
test
fs
inc
mov
les
movs
jp
call
hlt
xor
and
jnp
xor
cli
ja
mov
fcomp
jbe
jo
xchg
adc
sub
pushf
fld
jns
test
out
pop
inc
test
sbb
and
jecxz
jmp
jge
int
stos
ss
mov
mov
xchg
add
sbb
mov
lods
loopne
pop
jmp
mov
push
out
and
mov
nop
pop
jbe
fidiv
stos
dec
jo
mov
cli
push
jmp
xchg
sbb
aaa
inc
xor
ret
imul
sar
mov
mov
and
fs
and
pop
cli
daa
mov
kortestw
add
and
add
call
(bad)
push
sub
pop
or
mov
mov
fmul
cs
movs
push
push
push
push
fiadd
imul
adc
mul
fs
jno
xor
sub
sbb
rcr
sub
das
add
or
sbb
daa
cdq
pop
push
in
lds
shl
jnp
dec
scas
int3
pop
stos
xor
xor
xor
sub
sbb
xlat
jno
repz
cmps
push
sbb
sub
mov
movs
or
mov
adc
cdq
loop
test
mov
cmp
out
movs
rcl
ss
push
sahf
mov
mov
jl
hlt
mov
hlt
push
outs
sub
mov
push
(bad)
loop
push
enter
sub
inc
ss
sbb
stos
sub
cmp
dec
sub
sbb
xchg
adc
dec
pop
cli
cwde
lock
push
dec
pop
sbb
sti
shr
mov
std
fs
mov
cmp
rcl
mov
pop
add
mov
sub
mov
sbb
pop
ins
inc
dec
rol
add
aaa
mov
in
idiv
or
in
dec
arpl
ds
mov
pop
lea
pushf
xchg
adc
xchg
pop
push
in
push
mov
mov
sti
sub
ins
add
add
jle
jbe
cmp
rcr
shl
and
or
js
inc
xchg
in
sti
in
mov
push
cs
popf
fsub
int3
fwait
movs
and
mov
cmp
scas
push
jge
fisub
cmc
sar
adc
jle
cmps
hlt
sbb
outs
les
jle
jns
add
out
sub
in
inc
mov
pop
fimul
sbb
test
push
sahf
jp
dec
mov
adc
fxch
pop
pop
sub
test
imul
pop
or
pusha
rcr
mov
xor
daa
movsx
repnz
jle
loopne
jbe
dec
aaa
pop
add
mov
popa
mov
int
xor
sbb
and
out
sbb
cli
inc
fist
shl
into
fistp
dec
sbb
jbe
and
scas
sub
push
mov
imul
imul
pop
call
sbb
sub
imul
mov
js
push
xchg
lock
cmp
imul
jmp
sub
push
out
ficomp
jb
xchg
push
repz
cmps
sbb
and
call
shl
(bad)
cs
push
das
mov
gs
pusha
mov
iret
icebp
(bad)
inc
ins
ret
imul
sub
add
sub
jmp
enter
pop
or
mov
repnz
or
lods
in
lock
pop
cmp
cmp
jp
pushf
cmp
jbe
int3
sbb
xchg
jmp
push
inc
fidiv
sar
in
fwait
mov
dec
lods
adc
mov
cwde
scas
and
fmul
dec
xchg
test
push
pop
add
cdq
movs
mov
call
add
cs
dec
sub
xchg
(bad)
jle
cmp
pop
adc
push
loop
or
push
pop
ja
retf
sub
je
ror
ret
sub
aas
push
dec
clc
jle
jne
push
xchg
je
retf
mov
cs
cmp
nop
adc
dec
scas
cs
pop
mov
out
imul
(bad)
das
xor
(bad)
jmp
or
xchg
sbb
push
mov
fsub
mov
cs
inc
or
mov
adc
dec
and
push
imul
das
add
pop
mov
mov
enter
ret
mov
lock
push
and
cmp
jno
enter
push
cmp
adc
jb
dec
push
clc
pop
sub
out
cwde
cmp
ins
enter
fisub
mov
mov
ins
cmp
lahf
cmp
test
(bad)
push
jns
mov
enter
mov
xchg
aad
(bad)
imul
jns
fist
dec
and
nop
pusha
sub
or
cmps
and
shr
data16
or
rcr
add
mov
inc
and
pop
mov
ins
jne
mov
ss
or
cmp
sub
add
sub
ss
(bad)
(bad)
loop
mov
adc
jae
push
sbb
jmp
int
mov
xchg
sub
popf
push
ins
stos
adc
xor
add
outs
dec
xor
push
xchg
or
push
popf
dec
in
ja
(bad)
cmp
js
out
sbb
(bad)
test
popa
neg
movs
mov
into
push
std
daa
mov
xchg
es
lds
push
fadd
pop
or
sbb
outs
jle
je
add
inc
clc
addr16
inc
jecxz
jno
push
add
cld
imul
data16
mov
mov
retf
js
push
add
xor
inc
in
mov
les
and
sbb
mov
sahf
jle
outs
movs
cmp
cmp
jae
inc
push
push
push
out
gs
retf
pop
push
mov
js
mov
dec
das
sub
popf
xchg
loope
mov
stos
add
push
aas
pusha
sbb
lahf
imul
xor
lock
lock
inc
mov
lahf
xor
out
add
xor
cld
sub
mov
adc
lea
and
push
jp
push
sub
jge
cmc
or
pop
sar
cmps
imul
je
xchg
js
(bad)
mov
pop
mov
mov
cmp
sbb
xchg
cmc
add
call
fild
adc
(bad)
mov
pop
fst
sbb
outs
stos
movs
fisttp
adc
lock
leave
movs
fidivr
dec
rcl
dec
pusha
inc
cmps
sbb
(bad)
mov
add
test
not
and
mov
out
ins
mov
movs
or
jns
dec
mov
mov
xchg
popf
ins
mov
add
and
mov
mov
or
call
aam
cmc
inc
fsubr
dec
add
jbe
push
(bad)
addr16
mov
jg
cmc
add
mov
dec
test
repz
bound
clc
or
mov
dec
retf
cmp
dec
sub
push
dec
in
imul
dec
xchg
mov
mov
pop
dec
pop
mov
test
push
rol
clc
bound
sbb
jle
xor
popa
jp
imul
cdq
jecxz
popa
test
mov
xchg
push
sub
mov
addr16
ror
sub
clc
sub
pop
and
fnstenv
mov
mov
and
mov
outs
(bad)
pop
dec
fs
jmp
mov
mov
cmc
jnp
(bad)
push
mov
popf
(bad)
sbb
imul
xor
jns
fdivr
out
inc
pop
enter
jl
adc
and
or
xor
xchg
arpl
mov
lods
rcl
inc
and
call
mul
shr
xchg
jle
jns
push
xor
(bad)
mov
fstp
sbb
cmp
retf
idiv
(bad)
loopne
fnstcw
pop
jmp
mov
icebp
cmp
ja
push
or
sub
pop
cld
jne
icebp
ss
mov
dec
add
loopne
add
inc
mov
jg
cmp
cmp
(bad)
mov
jno
test
out
adc
adc
jno
mov
or
pop
push
push
pop
adc
and
adc
pop
pop
pop
sar
lea
retf
mov
ret
scas
push
add
gs
mov
and
sar
push
push
xchg
jmp
push
stos
add
cmps
and
jbe
push
dec
int3
mov
aas
je
pop
inc
inc
mov
pop
ficomp
iret
and
retf
ins
pusha
inc
jle
movs
test
imul
cmp
int3
aas
gs
scas
rcr
imul
jl
das
mov
pusha
enter
jne
xchg
into
mov
fstp
sbb
in
dec
ins
arpl
inc
push
ins
fwait
or
ins
shl
or
cmp
popa
jge
mov
ror
mov
js
cmps
cmp
pushf
or
dec
mov
shl
aaa
jg
(bad)
ins
mov
or
lds
and
cld
pusha
add
mov
sti
inc
js
jmp
in
or
xor
je
rcr
add
jge
movs
cli
pop
dec
cld
stos
pop
dec
les
cmp
in
sub
mov
xchg
fsub
dec
(bad)
sbb
sbb
popa
dec
xchg
ins
or
fdivr
rol
imul
sub
cmp
mov
sub
je
or
xor
or
out
shr
push
outs
pop
aaa
mov
cmp
sub
push
or
std
sub
loop
fs
sub
inc
icebp
ja
lods
stc
(bad)
xor
adc
inc
dec
jo
jp
and
cmp
ret
out
jl
pop
xor
mov
push
inc
cwde
leave
fnstsw
imul
aaa
enter
enter
call
push
int
icebp
scas
retf
cdq
shl
inc
inc
addr16
imul
adc
xchg
test
inc
jns
add
pop
jl
pop
mov
inc
sub
fisttp
adc
das
pop
mov
inc
adc
ret
xchg
mov
je
mov
pop
xor
fistp
sbb
jl
jae
dec
jmp
out
pop
idiv
xlat
pop
pop
dec
push
cmp
rcl
test
shr
aas
push
add
int3
or
cmp
jg
movs
pop
xor
xchg
sbb
outs
inc
add
add
or
mov
aaa
sub
addr16
add
jl
sub
dec
bound
push
scas
cmp
repnz
dec
popf
loope
fs
mov
dec
shr
cmp
push
sub
push
adc
pop
test
and
rcr
cli
pop
and
cli
and
or
mov
popa
push
and
mov
pushf
pop
jbe
cli
push
lods
shr
pop
mov
dec
mov
into
cmp
push
cmp
inc
push
out
add
add
adc
pop
adc
(bad)
shl
jne
fcom
cmp
push
push
mov
lock
inc
movs
retf
outs
ds
leave
push
in
xchg
fiadd
xor
jle
fbld
cmp
lods
test
xchg
aam
jo
ins
loope
jbe
xchg
test
dec
sub
fisttp
adc
test
iret
jp
mov
or
cli
cld
add
scas
xchg
jb
mov
pop
inc
dec
movs
adc
test
fmul
adc
aaa
jge
scas
adc
popw
fs
js
inc
and
cmp
in
jl
mov
xor
jg
and
jge
push
into
fist
jmp
inc
xchg
cs
sar
arpl
ja
ds
daa
xchg
enter
sbb
test
test
adc
adc
jmp
rol
adc
cmp
or
cmc
push
dec
daa
(bad)
(bad)
mov
inc
sbb
xchg
fcomp
cmp
add
xor
addr16
push
mov
pushf
hlt
mov
adc
sbb
jo
mov
sbb
mov
nop
jno
imul
and
add
ja
adc
cmp
sbb
inc
push
fiadd
push
dec
and
daa
xchg
inc
xchg
cmp
push
std
push
sub
sbb
jno
arpl
jge
sub
pusha
cmp
jge
push
adc
out
inc
inc
inc
ds
sbb
cmps
inc
xor
push
dec
or
jne
dec
(bad)
call
ds
dec
sahf
fld
sbb
mov
inc
loop
jno
adc
inc
mov
aas
stc
lds
in
call
std
jle
dec
xor
xor
lds
dec
add
stos
adc
ins
int3
jmp
mov
cmp
sbb
mov
(bad)
std
dec
jno
imul
lds
popa
fidiv
mov
xchg
fisub
mov
or
aam
(bad)
shr
sbb
push
push
and
jge
(bad)
jnp
xchg
pusha
xor
add
cmp
cmp
shl
cmp
ds
sbb
icebp
std
add
cmp
push
jmp
mov
shl
jp
(bad)
cli
jmp
push
popa
xchg
sbb
mov
xchg
sti
pusha
stos
mov
jbe
mov
inc
cmp
xchg
mov
idiv
adc
repz
inc
mov
add
push
and
adc
jns
xchg
push
rcl
sbb
sbb
fiadd
push
jmp
jp
adc
repz
xor
mov
jmp
pop
cld
aas
das
in
nop
hlt
fwait
repnz
mov
je
push
mov
(bad)
pmullw
jne
add
jl
xchg
inc
or
pop
xor
outs
sti
sbb
fld
ins
sub
mov
mov
fstp
imul
mov
fcomp
loopne
pusha
rcl
mov
sbb
push
push
aas
sub
jecxz
cmp
pusha
sbb
xor
pop
arpl
loopne
dec
inc
(bad)
mul
in
push
out
arpl
inc
outs
jnp
mov
(bad)
jge
shl
dec
and
pop
jle
pusha
xlat
pop
jl
pusha
stos
lods
out
lds
inc
iret
dec
test
mov
cmp
sbb
cmp
jb
push
jmp
pop
cmp
xor
shl
mov
ja
jb
xor
pusha
mov
ret
enter
mov
mov
cmp
push
mov
mov
mov
dec
pop
cli
emms
or
cmp
push
jae
je
dec
or
mov
sbb
jb
call
outs
dec
imul
mov
outs
jmp
lock
push
mov
push
jl
xor
dec
sub
shl
inc
(bad)
mov
adc
bound
imul
fs
dec
ds
ficom
jb
imul
gs
jp
sahf
mov
fcmovnu
(bad)
stos
cmps
int
pop
sbb
pusha
or
retf
xor
in
mov
xchg
mov
pop
scas
pop
imul
push
add
and
fcomp
xchg
cmps
imul
rol
ins
dec
icebp
and
(bad)
enter
scas
pop
sbb
xchg
mov
push
add
test
std
push
outs
pop
test
sbb
inc
push
mov
ror
push
pop
js
repz
stc
bound
dec
loop
push
addr16
sub
popa
dec
push
fmul
sbb
mov
push
repnz
pop
cmc
mov
mov
ret
sub
rol
or
sbb
lea
jecxz
neg
push
movaps
lea
inc
das
cmp
sub
cmp
imul
pop
daa
dec
jbe
pop
adc
dec
cmp
pop
inc
les
mov
and
icebp
sbb
ds
bound
aam
cmp
out
icebp
xchg
xor
stc
cmc
sbb
xor
inc
out
push
mov
js
cmp
inc
movs
icebp
sbb
adc
fimul
push
dec
push
add
jge
jns
inc
dec
mov
imul
pushf
out
stc
lea
je
cmp
and
or
fimul
mov
jbe
shl
cld
xchg
fnstenv
(bad)
add
push
test
hlt
mov
cmp
fimul
cmp
data16
jae
and
lahf
inc
icebp
jns
mov
pop
add
mov
inc
cdq
nop
fwait
(bad)
in
stos
ins
cmp
pop
push
mov
dec
and
pop
pop
imul
popf
lds
sbb
clc
mov
xchg
and
pop
retf
mov
cmp
int
outs
push
retf
test
outs
push
sbb
jle
add
and
pop
ret
mov
sbb
pusha
mov
jmp
mov
or
inc
jmp
sahf
loopne
cmp
popa
out
pop
aad
std
xchg
es
xor
ficom
out
jmp
out
sbb
test
test
xor
mov
pop
and
push
cmp
and
and
ins
loop
pop
add
(bad)
cmp
cmp
sbb
inc
inc
in
fbld
and
add
mov
stos
leave
sbb
dec
pop
adc
ss
sub
jnp
lock
jecxz
lahf
lods
call
adc
in
add
loop
cmp
cmp
pop
ds
ins
mov
mov
call
lods
mov
in
and
syscall
test
jg
jns
mov
sti
int
imul
xor
clc
fptan
pushf
cmp
in
xor
ret
push
and
in
inc
cdq
and
repz
les
mov
cmp
leave
ret
pusha
shr
aaa
in
sbb
loope
inc
pop
sbb
cmp
fidivr
sub
jno
add
jbe
jle
fld
mov
push
add
stos
push
bound
fdivr
cmp
popf
jle
adc
pop
setl
scas
cmps
push
cmp
push
aaa
je
add
mov
mov
jle
adc
pushf
or
pop
sbb
push
scas
cs
ins
call
sub
xor
pop
enter
push
jg
sbb
call
adc
pop
idiv
addr16
ret
repnz
adc
pop
or
pop
pop
mov
cdq
adc
push
dec
test
call
mov
inc
popf
and
mov
jge
mov
mov
jns
in
rcl
test
imul
cmp
jno
fwait
dec
adc
add
imul
iret
sbb
ss
(bad)
cmp
or
mov
pop
out
data16
and
retf
inc
and
adc
and
bound
push
das
pop
inc
jecxz
les
mov
cmps
mov
or
std
sub
push
pop
out
pop
mov
ret
mov
repnz
or
pusha
fbstp
dec
(bad)
leave
and
ror
push
neg
push
sbb
jb
mov
mov
rcr
sbb
sub
xchg
(bad)
movs
mov
inc
das
push
inc
xchg
fmul
rcr
dec
lods
ins
adc
aam
sbb
in
xchg
xchg
mov
xor
and
call
test
add
les
mov
fisttp
jmp
nop
or
leave
jo
fistp
pop
push
push
(bad)
paddsb
mov
std
pop
cmps
popf
push
sar
(bad)
das
jno
push
ds
popf
jge
and
sub
cdq
cmp
pop
push
mov
sbb
inc
cmps
inc
es
pop
into
mov
jge
outs
movs
mov
sub
mov
adc
cdq
mov
inc
xchg
xor
leave
frstor
jecxz
sub
push
or
jno
rcr
mov
add
or
push
sub
test
cmp
fdiv
xor
xchg
sub
inc
mov
fldcw
push
cmp
addr16
ret
sub
imul
xor
inc
je
test
mov
sbb
adc
inc
xchg
push
aaa
mov
test
push
and
imul
pop
enter
fmul
jge
sbb
push
(bad)
ds
add
xchg
or
cmova
push
stos
jbe
addr16
inc
jnp
test
aad
frstor
inc
add
push
xor
adc
xlat
add
push
xchg
or
jo
pop
mov
dec
in
sbb
and
push
jg
cwde
mov
dec
push
(bad)
jl
mov
out
or
mov
jecxz
pop
sbb
or
nop
repnz
push
cmp
push
stos
dec
cmps
sub
xor
rcr
jo
cmps
pop
push
fcom
sbb
call
xchg
cmp
push
mov
mov
ds
adc
(bad)
pushf
pusha
aam
imul
sbb
gs
jbe
adc
and
(bad)
push
dec
and
(bad)
pop
std
clc
cmp
cli
arpl
jmp
jbe
and
push
sbb
xchg
les
inc
push
push
jo
and
ss
lock
inc
and
xor
xchg
pop
ds
mov
xchg
mov
jle
or
push
cmc
shr
mov
std
shl
xor
cwde
push
pushf
push
cwde
xchg
sbb
cmp
loop
scas
scas
clc
std
jbe
and
add
loopne
mov
ins
mov
je
mov
inc
dec
cmp
adc
test
aam
lock
nop
or
xor
lock
test
cmps
mov
pop
add
xor
push
int3
or
loope
pop
sub
imul
push
adc
or
gs
aam
inc
mov
inc
les
mov
fist
aam
shr
pop
mov
pop
xor
xchg
pop
loopne
les
xor
imul
aas
sar
test
daa
jmp
cmps
adc
aaa
hlt
in
dec
sbb
jl
cwde
in
imul
add
sbb
xor
or
ds
sbb
inc
dec
loope
inc
pop
push
push
mov
xchg
push
adc
leave
inc
add
add
pop
sub
ds
cmp
cmp
add
call
xor
pop
frstor
pop
loope
out
les
jo
and
jbe
mov
xchg
sbb
arpl
fucom
jg
fadd
dec
shl
(bad)
ins
cmp
inc
mov
sbb
push
push
inc
shr
jmp
jmp
jno
add
repnz
pop
test
scas
adc
push
jns
push
pop
jbe
sbb
cmove
mov
dec
retf
cmp
shl
ss
das
mov
lods
xlat
lds
adc
xor
fisub
pop
in
out
xchg
mov
cmp
cmp
add
jge
adc
dec
pop
cmp
and
mov
mov
(bad)
sub
or
push
fidivr
jne
fisub
sbb
ret
push
jle
fiadd
dec
lds
xor
dec
xor
imul
or
pop
(bad)
sbb
mov
lahf
test
into
test
jp
out
dec
mov
cmp
outs
inc
dec
movs
xchg
push
mov
push
fst
arpl
movs
jg
hlt
das
adc
je
mov
shl
mov
inc
fs
ror
daa
inc
neg
stos
fs
mov
rcl
xchg
(bad)
jle
xor
mov
jmp
add
and
xchg
dec
cmp
mov
ret
(bad)
in
xor
fdivr
or
pop
rol
inc
mov
aad
fucom
shl
and
stc
adc
inc
stos
lea
rol
inc
pop
pushf
jle
and
adc
jmp
ss
xor
fs
les
pop
rol
outs
mov
push
aam
and
jle
addr16
cmp
aam
outs
cmp
mov
push
aas
ins
xchg
fadd
jno
and
movs
bound
push
adc
mov
cld
sar
das
in
jne
push
sar
xchg
or
xlat
icebp
pop
pushf
xchg
pop
cwde
fnstsw
add
mov
xor
adc
retf
inc
data16
test
adc
mov
fldenv
add
(bad)
xor
xchg
jge
cmp
add
jle
xor
push
shr
xor
addr16
sub
out
cmp
mov
sub
mov
js
add
mov
cmp
div
call
dec
imul
xchg
xchg
icebp
loope
(bad)
in
xor
sbb
sahf
add
aaa
ror
sbb
outs
jns
pop
cmp
adc
mov
dec
scas
dec
stos
ret
and
sub
cmp
xor
addr16
add
mov
adc
push
gs
aad
addr16
sub
imul
xor
mov
sbb
cmp
cmp
mov
xor
mov
cmp
mov
cdq
mov
imul
outs
xchg
pop
pop
mov
adc
push
imul
and
int
rcr
out
scas
in
das
xchg
mov
mov
imul
add
int
xchg
icebp
mov
and
(bad)
leave
ja
dec
push
dec
dec
xchg
and
movs
loop
mov
(bad)
pop
sub
aam
xor
xchg
cmp
pop
jb
push
mov
cli
cmps
sub
fdiv
cmp
int
xchg
rcr
leave
call
(bad)
dec
shr
stc
stc
retf
sti
inc
sub
leave
mov
cwde
pop
jge
es
in
js
lock
jmp
jbe
dec
push
jecxz
xchg
stc
pop
sbb
out
push
icebp
mov
dec
push
stc
jl
add
xchg
and
xchg
add
pop
push
js
cmp
jp
dec
jmp
fs
icebp
push
and
(bad)
scas
imul
pop
push
pushf
in
dec
rol
imul
cmp
and
mov
(bad)
lea
rol
gs
pop
adc
or
push
out
sbb
sti
iret
inc
rol
cs
sub
jno
shl
or
fimul
ins
je
xor
inc
pop
enter
out
in
mov
inc
outs
jg
pop
sub
push
sub
xlat
dec
push
pop
xor
mov
std
jne
jl
inc
lock
cs
xor
mov
xchg
in
fmulp
pop
ds
fsubr
(bad)
push
(bad)
jmp
and
mov
pop
pop
xchg
sbb
inc
dec
sub
add
pop
stc
cmp
dec
xor
test
xor
scas
mov
pop
jge
call
js
int3
movs
and
mov
scas
cmps
mov
inc
cdq
mov
sub
loope
cmp
movs
dec
and
dec
xlat
pop
lea
stc
imul
stos
mov
pop
cmps
dec
mov
and
or
mov
push
push
xor
sub
mov
adc
lock
jb
bound
push
and
inc
test
ret
sbb
cld
test
rcr
mov
loop
pop
and
cmp
sub
push
or
repnz
in
inc
or
fs
mov
shl
xchg
mov
add
scas
sbb
and
imul
pop
inc
add
xor
call
push
arpl
cli
cli
add
cmps
xchg
cmp
add
lods
aad
inc
jg
push
leave
cwde
cdq
frstor
inc
sbb
add
sub
inc
pop
or
mov
jns
sbb
mov
sub
jp
push
lock
sar
sub
xchg
mov
push
mov
out
or
mov
pop
sub
fnsave
mov
dec
jge
out
or
xchg
push
pop
loopne
(bad)
and
and
aaa
xor
push
or
mov
ins
xchg
(bad)
jae
das
mov
mov
push
neg
mov
call
inc
xor
ror
loop
and
jns
xor
out
jg
jle
lods
movs
cmp
cmp
push
push
and
icebp
bound
stos
movs
or
mov
rcl
in
jo
or
cwde
sub
push
es
(bad)
fsubp
in
or
outs
xor
repz
adc
fdiv
xchg
clc
sbb
pop
dec
shr
mov
pop
bound
jo
pop
stos
add
rcl
push
pop
inc
addr16
dec
addr16
adc
add
sub
sbb
aam
inc
stos
jmp
cwde
std
rcr
push
out
mov
push
retf
cmc
fstp
jmp
sbb
idiv
push
imul
and
test
cli
xor
xchg
fwait
mov
mov
in
mov
adc
shl
mov
inc
pop
sbb
push
mov
(bad)
fmulp
pop
lock
arpl
test
ror
ds
push
(bad)
sbb
sbb
out
cwde
or
je
mov
mov
loope
cwde
mov
sub
in
addr16
adc
icebp
aas
push
iret
iret
add
pop
sti
inc
daa
enter
stos
ins
add
push
xchg
cmps
scas
xor
xchg
dec
ds
or
sub
pcmpeqd
add
sub
ds
test
outs
mov
fistp
mov
sub
dec
fdivr
fdiv
lds
or
dec
cmp
std
adc
inc
pop
cmp
data16
and
sub
sbb
ja
cmp
push
or
jns
in
jp
shl
jl
mov
pop
out
pop
leave
cmc
fucomip
outs
mov
inc
arpl
cmpxchg
ja
and
lock
jl
cmp
cmp
cmp
ds
jmp
pop
xor
rcl
fwait
lock
jmp
jmp
mov
cmp
retf
push
sub
int3
ret
out
cmp
mov
fild
cmps
fisubr
daa
test
jne
mov
inc
and
aam
sbb
out
sub
and
mov
fisttp
adc
lods
pop
jecxz
jl
shr
mov
into
dec
cmp
sbb
sbb
stc
(bad)
out
jb
(bad)
and
fistp
xchg
push
pop
fnstcw
fistp
sar
add
sbb
xor
or
sbb
rol
rsqrtps
bound
jae
pop
mov
sahf
add
fsub
mov
mov
sub
pusha
sti
xor
jb
hlt
fild
sub
dec
push
enter
jecxz
push
shr
jne
adc
outs
push
imul
cmps
das
ret
add
ror
(bad)
daa
xor
stos
retf
lods
adc
int
fbstp
cmp
jg
jno
and
adc
dec
sub
push
ins
mov
pop
test
xor
jb
call
jmp
mov
mov
adc
cwde
cmp
mov
ja
or
sub
sahf
xchg
mov
mov
and
sbb
dec
jno
pusha
xor
in
xchg
iret
ret
push
or
hlt
sbb
es
push
or
mov
push
inc
jecxz
and
mov
ffree
loop
mov
stos
not
inc
icebp
cli
add
xor
cmp
dec
and
xchg
jge
mov
cmp
sub
add
jl
or
movs
pop
add
lods
dec
add
addr16
pop
ja
jae
xor
mov
sahf
cmc
sar
dec
sbb
push
cmp
inc
xchg
add
and
cdq
mov
jmp
fnstcw
and
xchg
pop
xor
inc
cdq
push
fcomp
pop
or
enter
sbb
push
add
call
mov
in
gs
mov
rcr
outs
clc
mov
imul
pop
xchg
cmp
sub
loop
mov
push
dec
mov
cmp
cwde
jecxz
lds
int3
or
popa
xlat
ins
add
rcl
jae
popf
aam
push
(bad)
sub
mov
dec
call
inc
(bad)
das
repnz
inc
push
jae
push
push
mov
push
sti
ret
pop
imul
pop
(bad)
jno
push
push
mov
push
sbb
pusha
pop
gs
cmp
push
in
sti
aad
daa
inc
jns
mov
fbld
mov
ins
shl
out
jg
mov
inc
rol
imul
push
mov
xchg
cmp
cld
xor
mov
adc
inc
call
addr16
adc
pop
or
gs
aad
adc
add
pop
lds
ins
ret
int
imul
mov
jns
inc
retf
sbb
les
jno
jmp
dec
aas
(bad)
and
cmp
je
mov
cmps
inc
adc
pop
inc
push
mov
sub
pop
sub
mov
out
dec
xchg
inc
or
clc
mov
mov
sub
mov
pop
and
pop
movs
xchg
in
jae
aam
xor
pop
retf
addr16
inc
add
imul
test
push
inc
mov
cmp
bound
inc
push
clc
sbb
das
xchg
lods
sub
in
imul
sbb
out
fwait
push
popf
and
outs
lea
xchg
jae
in
push
jge
neg
push
push
jae
xor
leave
mov
dec
adc
lods
adc
xchg
imul
test
stos
(bad)
xor
iret
loop
push
adc
mov
inc
sahf
jle
sbb
inc
jecxz
xor
ret
push
std
pop
mov
pop
and
pop
rcr
std
and
xlat
frstor
cmp
inc
xor
dec
in
repnz
pop
call
jp
cmps
lock
rsqrtps
jl
idiv
shr
out
cs
jne
add
in
pop
addr16
mov
sub
call
mov
(bad)
stos
push
inc
ins
mov
xchg
pop
std
sahf
push
push
inc
jecxz
inc
and
or
cwde
jb
mov
std
int
lods
cmps
ds
retf
pop
pop
push
add
mov
hlt
fucomp
inc
ds
ins
dec
jge
mov
loope
cdq
popa
pop
push
pushf
jle
xchg
test
sbb
dec
mov
xor
adc
out
dec
pop
mov
push
mov
mov
lahf
std
cld
cmp
std
sbb
cmc
xchg
test
fistp
jmp
out
jge
sar
mov
or
shr
mov
outs
dec
fmulp
ffree
les
mov
retf
ds
fs
ins
ins
test
pop
aaa
cmc
add
inc
push
sbb
adc
data16
(bad)
cmp
popa
loope
adc
ror
imul
ret
push
stc
loope
mov
sar
sub
arpl
pushf
out
out
sbb
fisubr
(bad)
(bad)
lea
out
sbb
dec
(bad)
shl
jns
xor
mov
mov
xchg
ins
inc
ins
jbe
mov
fistp
mov
inc
and
dec
pusha
sbb
jbe
mov
cmp
fs
sbb
into
or
arpl
mov
push
and
enter
cmps
or
cdq
loop
xchg
fimul
not
inc
add
dec
pop
dec
repz
aam
arpl
inc
push
inc
(bad)
(bad)
push
push
push
fstp
ins
push
rcl
dec
jne
call
xlat
fisttp
pop
gs
inc
fcom
fisub
inc
pop
mov
(bad)
dec
and
imul
sub
pop
les
add
pop
repnz
out
jbe
xor
mov
stc
sbb
mov
stos
ins
xchg
lods
or
cmp
jo
xor
push
jb
pop
xlat
hlt
and
or
jo
mov
lods
cmp
in
push
xchg
and
mov
xchg
cli
mov
retf
mov
neg
mov
jl
bound
cmp
add
sbb
fs
jmp
or
in
adc
jbe
add
sub
add
jl
jl
mov
out
cmc
sub
test
push
adc
mov
test
lods
push
(bad)
lock
or
mov
cmp
mov
pop
lods
scas
sbb
sub
xor
jae
jae
clc
jg
push
mov
inc
mov
and
aam
add
push
dec
pop
xchg
xchg
jge
mov
outs
sub
pop
cs
shl
jo
cwde
jb
movs
jae
cmp
in
cld
repz
dec
push
arpl
push
retf
pop
mov
add
add
nop
neg
mov
or
daa
mov
or
pop
retf
mov
addr16
and
dec
push
sbb
and
int
jo
mov
sbb
push
dec
mov
(bad)
in
fs
mov
xor
jae
in
pop
xor
hlt
jmp
jecxz
sahf
(bad)
push
fs
cmp
dec
push
in
imul
repz
jns
ss
add
imul
mov
out
jp
dec
arpl
mov
or
popa
mov
push
inc
push
jg
jp
jmp
and
cmp
gs
inc
cmp
mov
je
mov
fisub
jae
inc
and
mov
dec
add
neg
cmps
jo
ficomp
xchg
jb
mov
and
fidivr
cmp
jmp
adc
leave
ins
jns
loope
push
bound
int3
jle
sub
int
ss
retf
fwait
mov
outs
hlt
inc
lods
in
push
fld
cmp
add
push
mov
push
icebp
xor
push
adc
cmp
add
pop
sbb
daa
int
mov
push
std
cs
inc
add
stos
push
int3
js
inc
inc
adc
xchg
push
ins
(bad)
loopne
push
cmp
inc
test
mov
adc
jp
cmp
lea
fdiv
retf
jmp
jnp
outs
jnp
and
ds
push
stos
pop
jmp
jae
clc
sub
inc
cmp
ret
pop
xor
push
ins
ss
clc
jb
fnstsw
fsub
cmp
enter
pop
xor
mov
jne
cmp
mov
dec
fcomi
cld
sbb
dec
and
jb
shr
ja
repnz
jno
mov
pop
cmc
inc
pop
fwait
push
pop
sub
add
mov
adc
loope
cld
push
inc
add
pop
mov
shr
push
test
fs
fs
adc
dec
pop
or
or
es
clc
push
jge
mov
pop
lds
js
pop
(bad)
mov
sbb
ds
sbb
adc
lods
xor
sbb
data16
pop
out
pop
cmp
adc
and
add
mov
fcomi
dec
dec
mov
aas
es
sbb
lds
mov
jmp
jbe
adc
sbb
in
nop
sbb
pop
ja
cmps
xchg
or
mov
pusha
jbe
mov
fidiv
sbb
fstp
mov
xor
pop
ret
push
sahf
pop
dec
mov
cmp
cs
mov
dec
imul
pop
daa
arpl
push
sbb
or
adc
clc
cmp
sub
push
sub
outs
push
sbb
mov
cmps
or
inc
fadd
ror
sub
xchg
or
inc
mov
inc
gs
jg
imul
mov
push
inc
aas
mov
sbb
jge
int
xchg
mov
mov
test
(bad)
mov
add
xor
push
push
pushf
pop
pop
mov
pop
and
sub
fdivp
push
lock
mov
nop
ret
inc
and
das
scas
jg
mov
stos
xchg
inc
xor
push
inc
xchg
(bad)
pusha
sbb
sub
leave
cli
mov
fild
inc
popa
pop
add
dec
mov
jbe
addr16
cmp
mov
mov
pop
leave
mov
clc
retf
jae
mov
ret
jmp
outs
pop
(bad)
in
dec
lahf
push
jae
mov
cmc
inc
pop
xchg
outs
adc
push
xor
stos
call
ins
(bad)
ss
and
leave
jg
shr
mov
mov
xchg
icebp
(bad)
aaa
pop
outs
fwait
mov
stc
xor
mov
loope
js
add
inc
fadd
sbb
sbb
jmp
xor
push
adc
(bad)
call
out
mov
clc
gs
xor
aas
and
addr16
fnstsw
jmp
cmp
pop
test
sar
pop
jno
sub
push
push
(bad)
lock
pop
(bad)
call
sub
xor
jne
jp
lods
rol
dec
xor
xchg
inc
cdq
je
outs
inc
(bad)
jnp
jecxz
and
lods
movs
test
je
fstp
mov
ins
cmc
shl
clc
shl
into
icebp
mov
out
cmps
dec
jne
aaa
push
ss
fstp
popf
mov
lds
mov
lods
jo
xor
mov
movs
out
jbe
imul
cmp
cs
jbe
cwde
(bad)
loope
jp
out
push
pop
and
cmp
sub
sahf
mov
inc
sti
cmp
outs
ret
adc
jnp
lahf
call
(bad)
cmps
mov
adc
pop
inc
pop
cmp
mov
sbb
das
mov
movs
push
inc
dec
sub
ret
stos
das
sbb
mov
sbb
xor
jecxz
cmps
lods
xchg
pop
call
mov
inc
pusha
ss
dec
jo
xchg
dec
je
jecxz
out
adc
daa
adc
or
test
or
jne
shr
clc
shl
xchg
into
dec
dec
mov
jg
sub
mov
xor
stc
mov
mov
(bad)
js
js
sar
add
inc
sub
inc
adc
lods
push
jle
outs
jge
mov
jmp
out
xchg
gs
out
mov
call
cld
mov
outs
retf
sub
push
cmps
push
and
jmp
sub
sbb
into
pop
ffreep
dec
pop
xbegin
ds
inc
nop
rcr
cwde
ss
adc
sar
sbb
cmp
icebp
dec
test
(bad)
xor
add
dec
aas
cdq
movs
add
mov
inc
js
aas
(bad)
push
mov
pop
lds
int3
sub
call
ficom
data16
fstp
mov
jae
xor
and
xchg
inc
pop
sub
loopne
aaa
jns
dec
pop
xor
outs
xor
sub
push
test
lods
sbb
cmp
out
dec
jae
call
xchg
mov
xchg
adc
addr16
jbe
jo
cmp
mov
inc
mov
in
retf
push
sub
push
popa
jne
dec
clc
or
push
shl
stos
clc
dec
addr16
stos
cmp
jns
sub
cli
xor
ret
and
or
leave
pop
fisttp
test
retf
mov
and
pop
(bad)
adc
sbb
repz
scas
fisttp
fs
jne
daa
jle
(bad)
sbb
call
inc
cmp
shl
aas
xor
retf
pop
neg
mov
push
adc
xor
pushf
jb
jno
jns
xchg
inc
xor
jecxz
xor
pushf
jmp
aaa
xchg
jae
push
ret
push
jge
lock
add
dec
xchg
push
xor
aaa
ret
xchg
jne
popa
jb
add
(bad)
sub
aas
sbb
cs
cmp
and
stc
xchg
sub
dec
jne
rcl
xor
cs
stos
bound
and
mov
stc
mov
push
jmp
mov
cs
jo
fcomp
pop
repnz
aaa
enter
js
jmp
push
idiv
jnp
mov
mov
mov
and
sbb
stc
mov
mov
adc
(bad)
jmp
dec
popa
pop
sub
push
cmps
aam
sub
xchg
jno
fs
inc
or
and
jle
push
push
dec
dec
sbb
mov
in
cmp
mov
popa
test
adc
popa
or
pop
fadd
jb
mov
call
repz
jle
movs
shl
movs
retf
jg
push
into
pop
mov
int
cli
mov
(bad)
(bad)
jmp
out
sbb
inc
dec
cmps
fnsave
mov
jae
mov
int
add
or
dec
(bad)
cmps
setb
adc
inc
loop
mov
not
data16
fs
test
neg
push
xor
fcomip
adc
pop
in
ds
cmp
pop
push
pushf
add
test
enter
scas
enter
cmc
inc
daa
mov
mov
jecxz
push
pusha
cmp
leave
push
jg
or
and
lahf
mov
xchg
div
es
mov
adc
retf
(bad)
cmp
ds
adc
out
imul
jbe
xor
sbb
pop
hlt
cli
jb
jle
mov
(bad)
data16
sub
div
jnp
and
xchg
pop
push
jle
fs
sti
(bad)
mov
stos
push
daa
adc
popf
outs
xchg
jp
fs
pop
inc
loopne
jae
push
push
mov
cmp
mov
mov
aam
arpl
jno
mov
xchg
lea
stos
jp
mov
jnp
jge
sbb
sbb
adc
sbb
ins
mov
(bad)
xor
jle
cmps
call
xor
jmp
pop
fcomp
fist
clc
pop
pop
out
out
adc
retf
pop
push
and
xor
imul
pop
adc
fwait
call
xor
sbb
or
and
(bad)
and
push
or
mov
inc
and
mov
mov
jecxz
adc
add
test
aaa
cmps
sti
mov
xor
inc
loopne
cmp
mov
add
mov
and
jmp
out
mov
pop
add
cmps
sub
jb
fcom
sub
mov
pop
call
xchg
and
dec
daa
push
pop
jae
jp
dec
mov
movs
cdq
das
sti
test
or
push
nop
add
push
push
je
mov
xchg
repz
sub
in
dec
lods
mov
mov
sub
retf
retf
mov
std
mov
jne
jmp
pop
xchg
xor
ret
dec
js
out
push
rcr
retf
inc
cmps
mov
arpl
mov
or
push
inc
push
ret
xor
and
fnstcw
mov
fisttp
push
pop
and
or
cmp
loop
loope
sbb
inc
leave
jg
dec
pop
ins
xor
fidiv
jbe
mov
mov
jp
xchg
cs
ret
cmp
or
cmp
sbb
and
aam
xor
cmps
mov
xor
push
fidiv
sub
bts
test
dec
adc
dec
rcl
scas
js
xchg
push
mov
pop
imul
mov
pop
cli
push
shl
test
cmc
in
sbb
xlat
ficomp
in
sub
out
adc
sbb
retf
cmp
push
cmp
sbb
xchg
mov
xor
popf
sbb
retf
jmp
jmp
sbb
xchg
jmp
pop
scas
jge
fs
xchg
and
pop
(bad)
dec
mov
jo
out
jns
enter
cld
mov
cmc
es
add
inc
xchg
cmp
retf
jbe
mov
add
jne
iret
sti
pop
dec
outs
push
or
jo
les
retf
cmp
inc
fmul
mov
loope
jb
enter
sbb
call
outs
stc
lods
jne
popa
sbb
aam
bound
lods
push
outs
arpl
dec
xchg
push
repz
test
inc
out
sbb
pusha
or
cmp
fld
mov
pop
outs
inc
aaa
mov
pop
and
push
cld
jg
jnp
xor
push
les
and
inc
retf
arpl
pop
icebp
je
mov
das
cmp
and
jle
jbe
enter
xor
es
rol
inc
jmp
pop
adc
or
pusha
cmps
inc
aaa
pusha
add
mov
mov
sbb
add
into
aam
retf
jae
bswap
push
xchg
cmp
mov
addr16
lock
sbb
fisubr
aas
jae
in
adc
add
shr
scas
enter
adc
inc
nop
in
sub
mov
sar
enter
jmp
inc
mov
out
imul
jmp
add
xchg
or
in
(bad)
mov
xchg
jmp
xor
xchg
pop
push
inc
enter
xchg
out
pop
fild
adc
pop
push
inc
enter
mov
aas
mov
inc
dec
mov
push
mov
mov
and
sub
add
jb
mov
or
and
icebp
cli
xor
outs
jmp
mov
mov
call
popf
jecxz
stos
dec
mov
outs
test
pop
adc
adc
push
jno
mov
sbb
mov
xchg
cmps
mov
(bad)
(bad)
sub
sbb
shr
ret
aad
aas
push
xchg
retf
jae
lods
sbb
push
dec
jmp
aaa
test
adc
cmp
(bad)
loopne
fadd
bound
jle
imul
pop
sti
jp
sbb
sbb
repnz
push
inc
sahf
push
mov
dec
js
xchg
xor
scas
out
pusha
add
jge
jbe
inc
adc
cmp
adc
loop
out
xchg
dec
sub
mov
and
push
cld
mov
add
call
mov
int
xchg
shr
push
les
sbb
dec
jno
xor
lea
scas
adc
into
movs
cmps
in
jmp
push
adc
mov
shr
mov
(bad)
popf
leave
jg
push
mov
imul
jo
push
pop
push
rol
push
ss
clc
and
(bad)
(bad)
rol
push
pop
or
and
inc
inc
dec
sbb
jb
xlat
dec
mov
push
lock
or
inc
jno
xor
lods
fdivr
out
fistp
sbb
aad
es
jae
daa
and
sbb
or
inc
cmp
and
mov
push
push
jo
mov
int
push
clc
data16
pushf
push
pop
jbe
mov
sahf
fs
add
ins
cmp
cs
mov
push
mov
cmp
xor
push
jne
int
sbb
test
push
cmp
push
sahf
dec
xlat
movs
sub
mov
or
sbb
inc
arpl
push
lods
daa
jo
jns
pop
ss
daa
inc
mov
adc
cmp
xchg
jle
sbb
inc
push
aas
adc
mov
mov
add
cwde
in
pusha
(bad)
cmp
dec
cmp
lods
cs
cmp
push
jb
mov
jo
(bad)
fdivr
xor
sub
ret
add
pop
pop
call
mov
fdivr
pop
jmp
aad
xchg
inc
inc
jb
ror
jbe
mov
jae
sbb
rol
dec
jmp
xchg
shl
dec
std
lahf
jmp
not
jg
jae
mov
xor
sbb
mov
fnstsw
call
push
cmps
movs
jne
aam
and
and
mov
icebp
xchg
cmp
push
cmp
jmp
jge
clc
push
lea
push
add
push
(bad)
mov
mov
pop
add
mov
(bad)
je
pop
pop
mov
mov
fwait
js
pop
mov
pop
into
std
in
rcl
in
es
push
in
jmp
jmp
imul
cld
sub
sbb
gs
std
pushf
das
dec
dec
jo
mov
xchg
jle
std
add
pop
test
cs
lea
mov
and
sbb
jp
jg
stos
stos
push
das
jns
push
mov
dec
fisttp
ss
fcom
push
cmp
push
std
push
ins
mov
push
(bad)
(bad)
pop
xor
mov
inc
cld
stc
les
mov
dec
test
ret
inc
push
push
outs
dec
dec
icebp
jne
out
jle
adc
(bad)
call
fmul
mov
sti
test
mov
jno
cmp
jecxz
pcmpeqb
(bad)
outs
or
jecxz
cs
or
push
mov
(bad)
cli
cmp
mov
arpl
cmp
out
movs
shl
dec
and
mov
cmp
addr16
jae
stc
dec
mov
jg
fldcw
in
arpl
mov
pop
push
and
cmp
lock
xor
push
stc
icebp
popa
push
xor
jmp
sbb
pop
pop
push
stos
push
ret
mov
sahf
add
dec
cmp
mov
adc
mov
cli
les
cli
cmp
pop
out
push
push
adc
cmp
inc
test
jmp
call
loop
fld
jmp
xor
or
mov
jbe
nop
movs
fild
ins
xchg
pop
lahf
lods
(bad)
sbb
(bad)
aas
jne
adc
dec
loope
aaa
aas
js
rol
cs
xchg
fcom
(bad)
call
cwde
pop
ds
mov
sbb
and
ds
sti
repz
add
mov
inc
jb
adc
outs
je
mov
pop
arpl
mov
jg
shr
addr16
jae
inc
sub
lods
push
popa
cmp
lods
push
add
mov
cmp
jb
loope
shl
xor
rcl
xchg
and
mov
jl
pop
(bad)
cs
mov
or
adc
sbb
es
call
fwait
ins
retf
(bad)
rcl
and
xlat
dec
mov
aaa
pop
mov
cmp
ret
sbb
lahf
cdq
outs
jg
xor
adc
inc
pop
sbb
ret
fcom
test
sub
shr
sub
adc
ins
dec
popf
sbb
arpl
(bad)
loopne
popf
popf
or
cdq
cmp
xchg
std
movs
push
aam
std
js
call
lea
sar
(bad)
mov
mul
in
cld
pop
push
mov
push
fwait
cmc
push
jl
sub
loopne
push
pop
test
retf
sub
loop
jmp
out
lea
jbe
jmp
xor
inc
mov
or
jle
sbb
int
scas
pop
push
or
cdq
jae
ret
(bad)
or
shl
push
ror
mov
pop
xor
inc
sbb
mov
pop
push
ds
push
in
push
fild
cmp
jge
sub
bound
jns
loopne
and
xchg
out
leave
loope
mov
scas
cmp
dec
test
movs
push
or
inc
push
sar
push
jge
sbb
retf
jmp
mov
pop
out
(bad)
repz
int
adc
lea
push
ret
pop
cmp
idiv
in
dec
or
test
and
shr
inc
sbb
popa
cs
aaa
stos
shl
pop
out
xor
jg
push
add
retf
test
xor
inc
repz
outs
pop
adc
pop
push
int3
je
or
sub
jp
loop
and
pop
pop
les
dec
adc
shr
and
in
xchg
retf
fild
cmp
add
es
imul
imul
mov
pop
jmp
xchg
and
pop
cmp
add
cs
loopne
dec
popf
in
mov
mov
dec
sub
mov
pop
sub
stc
sub
mov
mov
xchg
dec
xor
fbstp
mov
xbegin
sbb
shr
fiadd
sbb
sub
inc
mov
pop
jns
movs
mov
push
cmps
es
in
enter
push
sub
pop
push
dec
pop
movs
ins
sbb
xor
(bad)
out
mov
mov
jns
pushf
ss
pop
inc
(bad)
pop
out
fst
xor
pop
sub
lods
nop
leave
popf
sub
adc
jnp
sub
cmp
outs
lock
xchg
stos
push
call
jb
add
ja
sbb
mov
inc
(bad)
mov
pop
out
lds
xchg
jb
and
jmp
dec
in
jg
stos
dec
jp
fwait
and
adc
addr16
fs
lock
mov
and
jg
pop
jmp
loopne
xchg
push
(bad)
or
stc
test
icebp
retf
or
in
fdivr
sti
cmp
scas
(bad)
es
mov
inc
push
(bad)
movs
sbb
std
imul
dec
int3
mov
pop
or
(bad)
mov
mov
push
inc
sbb
jne
mov
xchg
stc
ja
jle
ins
test
dec
movs
jbe
inc
lods
sub
inc
cmc
mov
inc
out
ret
ror
scas
pusha
add
stos
adc
sub
push
call
jmp
inc
lds
stos
fldenv
int
(bad)
mov
iret
mov
mov
sub
push
lahf
add
mov
xchg
sahf
push
movs
xor
lock
jae
ss
inc
or
jne
jo
call
sub
xchg
popa
cs
inc
mov
xchg
fild
stc
jge
inc
push
dec
mov
retf
push
test
out
sbb
mov
je
and
test
pop
fisub
stos
inc
mov
jle
lods
into
cmp
xchg
(bad)
xor
mov
cdq
ins
sbb
pop
ins
xchg
stc
fld
ja
xor
mov
pushf
mov
cmps
mov
adc
xchg
mov
sbb
pop
aas
dec
jmp
inc
mov
arpl
mov
ret
jge
mov
pop
push
pushf
mov
push
xor
add
cwde
add
stos
inc
inc
sub
iret
aas
(bad)
test
(bad)
addr16
sbb
xlat
xchg
addr16
xchg
inc
(bad)
imul
pop
ins
mov
outs
push
cli
stos
sbb
dec
xchg
sbb
add
in
lock
imul
shl
std
cmp
push
rcr
mov
test
stos
out
push
adc
mov
fbld
dec
movs
mov
push
in
jno
push
(bad)
fdiv
inc
pop
mov
inc
sub
xchg
pop
add
mov
rcl
imul
(bad)
das
jmp
std
push
mov
int3
das
xchg
and
inc
inc
pop
push
pop
mov
pop
adc
inc
mov
jnp
mov
push
jl
and
sahf
and
test
hlt
xor
(bad)
shl
inc
call
or
and
dec
jmp
xchg
push
shl
ja
fwait
retf
add
outs
scas
and
adc
cs
pop
jmp
push
push
out
mov
scas
mov
outs
dec
sbb
ss
cmp
cmp
pushf
shl
ror
nop
cmps
inc
dec
ss
or
out
mov
push
ss
sar
shl
dec
in
inc
arpl
inc
dec
add
and
cmp
xchg
add
cmovae
mov
aaa
fimul
jno
mov
(bad)
or
jns
cld
mov
xchg
test
jbe
cmp
adc
shl
test
fimul
xchg
jo
cmp
ss
ds
jmp
xchg
mov
mov
add
xchg
(bad)
sbb
xor
cli
mov
popa
xchg
jns
fadd
mov
sbb
sbb
ss
jbe
rol
push
repnz
jnp
aaa
inc
cmp
inc
js
repz
gs
sbb
retf
inc
stc
jmp
mov
mov
sub
jns
pop
and
sbb
pop
cmps
pop
jbe
nop
test
or
icebp
div
cmp
push
and
xor
sbb
dec
sub
push
jae
push
fwait
inc
stos
loopne
cmp
and
daa
push
adc
cs
adc
test
cld
fcomi
sbb
fild
(bad)
daa
dec
sbb
gs
adc
push
nop
mov
je
cld
sahf
(bad)
jge
sub
(bad)
mov
enter
push
rcl
jnp
arpl
loope
dec
xchg
adc
bnd
int
lock
adc
stos
gs
clc
scas
push
jb
daa
mov
ds
jecxz
xor
test
jmp
jmp
in
cs
jmp
fild
arpl
pop
outs
dec
push
jg
mov
add
jge
call
arpl
jp
neg
frstor
dec
adc
dec
add
adc
xor
call
xor
and
xor
cmp
or
shl
cmp
push
(bad)
es
aam
adc
xchg
push
(bad)
pop
xor
push
and
dec
mov
jg
inc
sub
test
bound
pop
and
popf
mov
mov
inc
jb
mov
movs
push
leave
bound
js
outs
pop
outs
pusha
dec
(bad)
aas
(bad)
mov
ret
daa
aam
je
pop
aad
mov
jmp
outs
scas
imul
sub
xor
repnz
xchg
retf
(bad)
out
jl
aam
sub
enter
adc
dec
push
pop
sub
dec
adc
mov
lock
ffree
shl
jo
aas
inc
loop
lods
test
inc
and
loop
add
and
lea
jns
mov
aam
jmp
pop
or
dec
fiadd
rcl
push
jne
push
mov
dec
inc
scas
xlat
inc
sub
xor
ret
fcomp
pop
or
dec
lahf
sub
popa
test
dec
lock
outs
and
cs
mov
pusha
push
sub
test
cmc
inc
cmp
pop
mov
and
adc
jle
ins
rol
add
push
sbb
lds
cmp
ret
(bad)
out
mov
addr16
push
movs
hlt
sbb
inc
lock
pop
pop
(bad)
mov
mov
inc
outs
adc
mov
stc
pop
ja
cmps
jecxz
rcr
mov
pop
push
arpl
add
adc
jns
aam
scas
mov
retf
pushf
data16
cmp
arpl
pop
mov
imul
mov
adc
sub
mov
aam
jle
dec
test
gs
cmp
sub
add
xor
cs
(bad)
lock
ins
test
or
cmc
ror
mov
push
pop
popa
into
mov
and
inc
cmc
mov
(bad)
pop
test
inc
mov
iret
stos
les
sub
and
xor
and
xchg
neg
pop
xchg
pop
out
mov
dec
or
aas
scas
mov
sub
hlt
cmp
inc
adc
mov
inc
lock
jl
js
test
int3
test
pop
fstp
dec
mov
adc
fxch
lea
lods
push
jmp
sbb
sub
mov
push
(bad)
icebp
out
cwde
xchg
push
xchg
pop
cmps
ins
(bad)
mov
in
aaa
test
(bad)
into
test
xchg
fwait
xchg
sar
shr
xchg
adc
dec
outs
aaa
mov
fist
rcl
ins
out
add
xchg
(bad)
push
adc
pop
and
mov
push
pop
pop
pop
test
jb
call
pop
nop
jge
in
mov
ds
push
fst
dec
xor
pop
clc
cmp
inc
fldenv
loopne
pusha
xor
fisub
sti
rol
mov
mov
movs
idiv
loopne
jne
int3
mov
add
xchg
cld
sbb
cmps
jae
push
loope
cli
ror
(bad)
dec
das
adc
jbe
imul
repz
lock
dec
sbb
in
fldl2e
add
cli
jo
push
ret
or
xchg
sub
and
and
dec
popf
aam
xor
mov
icebp
inc
jne
add
sub
imul
xor
dec
jns
xor
sub
sub
add
push
repnz
mov
mov
or
mov
pushf
or
addr16
or
adc
pop
(bad)
int
cmp
inc
nop
sub
into
and
call
push
xlat
pop
ret
jo
ror
pop
cmps
ret
xor
adc
ret
fwait
shl
ds
mov
mov
mov
lds
adc
adc
bnd
jg
and
sub
push
add
shl
(bad)
(bad)
sar
jb
xchg
(bad)
dec
fstp
outs
inc
mov
pop
dec
inc
mov
outs
jecxz
lds
nop
ins
cwde
dec
push
bound
inc
inc
xor
adc
cmp
or
test
or
fcmovu
and
mov
fidiv
inc
test
cli
ret
jne
sub
and
in
in
mov
dec
fmul
xor
jae
inc
mov
push
dec
in
sbb
aad
dec
sbb
fimul
pop
lods
ret
(bad)
and
adc
(bad)
fisub
or
inc
sub
mov
js
or
dec
out
xchg
je
jno
jle
mov
mov
add
rcr
jnp
outs
pop
mov
js
xor
jno
push
pushf
mov
test
jb
ret
sbb
mov
inc
int3
push
jg
push
loop
inc
push
xchg
xor
mov
push
out
inc
fs
xchg
movs
jg
in
and
(bad)
or
lods
clc
ret
cwde
mov
ins
or
push
fs
outs
add
push
sbb
add
jp
(bad)
cmc
xor
out
js
dec
xor
mov
movs
mov
jnp
test
xchg
inc
dec
das
cld
push
push
fldcw
xor
lahf
sahf
xchg
jnp
jb
imul
pop
or
cmc
and
add
dec
gs
sub
sbb
mov
push
jb
xlat
in
daa
outs
leave
mov
outs
(bad)
adc
cmp
adc
mov
sti
adc
add
mov
sbb
push
sbb
jmp
in
or
iret
cmps
ret
rcr
jo
aas
cmps
test
je
iret
add
sub
and
lods
cmc
cmps
cmps
rol
cmps
mov
out
cmps
add
cmp
idiv
daa
cmps
(bad)
(bad)
mov
xor
mov
out
mov
inc
dec
(bad)
jp
cld
xor
mov
fild
xchg
lock
dec
push
add
gs
dec
cmc
frstor
sub
cmp
nop
cmp
sub
sbb
out
addr16
shl
stos
leave
pop
mov
bound
jbe
mov
cwde
repnz
jns
addr16
cmp
or
mov
fadd
mov
nop
ins
add
jle
cmp
not
stos
mov
cs
or
aaa
popf
les
pop
cmc
pop
inc
pop
mov
ins
mov
outs
popf
mov
loope
fcom
push
push
cmps
and
pop
jnp
mov
sub
mov
sub
je
and
int
cwde
je
in
xor
xor
jle
cmps
not
ins
popf
shl
jmp
add
inc
jp
call
mov
ins
mov
push
lea
icebp
out
jmp
inc
stos
dec
(bad)
jnp
xor
addr16
mov
add
dec
mov
fisub
out
mov
jb
mov
mov
dec
inc
test
push
mov
aam
int
push
xchg
pusha
js
fdiv
sub
lahf
mov
les
xor
push
mov
cmp
xor
sbb
jno
dec
xchg
adc
cmp
inc
dec
mov
stc
sbb
out
fmul
sbb
mov
xchg
mov
push
jne
loop
mov
outs
arpl
jbe
fadd
sbb
sbb
test
movs
mov
inc
(bad)
cmp
pop
fwait
into
inc
ret
in
dec
mov
xchg
mov
shl
jle
call
adc
mov
sub
aaa
sbb
lods
jns
retf
aam
mov
sbb
xor
dec
mov
push
(bad)
pop
fiadd
mov
xor
sub
icebp
outs
cmp
test
(bad)
in
movs
fidivr
out
xor
inc
mov
push
jae
(bad)
xlat
jne
fisubr
add
loop
pop
and
push
push
sbb
(bad)
movs
dec
mov
pop
mov
in
test
in
into
ror
push
mov
or
xor
inc
clc
push
fild
pop
test
sbb
xchg
mov
add
fisub
int3
addr16
aam
les
jbe
imul
mov
jno
movs
addr16
jb
stos
xchg
(bad)
jge
sbb
inc
cmps
scas
mov
push
ss
push
push
outs
xchg
das
rol
mov
and
xchg
pop
mov
or
push
xor
mov
shl
es
add
movs
mov
xor
es
jae
pop
jmp
mov
sub
dec
ds
pop
and
loope
jp
dec
push
dec
mov
lahf
cli
or
std
loopne
cmp
cmp
call
xchg
and
div
cmp
out
ja
int
fidiv
dec
cmp
cwde
into
sub
adc
mov
and
out
fstp
cmp
retf
mov
inc
iret
xchg
cwde
ds
arpl
sub
lods
and
test
push
dec
lods
inc
and
mov
mov
mov
jne
mov
leave
das
sbb
add
pushf
sbb
jge
inc
lea
pop
add
out
gs
ja
hlt
std
mov
jb
adc
cwde
mov
call
mov
cmp
test
cli
lods
mov
ret
movs
stos
mov
mov
out
mov
jmp
xor
pop
lods
fistp
mov
push
add
xor
push
test
sbb
cld
jb
movs
jge
mov
mov
or
in
and
adc
and
inc
sub
jge
xchg
and
pop
xchg
mov
repz
add
dec
sub
aaa
(bad)
mov
inc
pushf
into
or
jl
leave
cmp
in
cld
loop
outs
stos
cmp
cli
xchg
push
jmp
popf
pop
(bad)
push
fsub
xchg
sbb
add
daa
(bad)
adc
cwde
ins
inc
jge
dec
rcr
out
mov
movs
fldcw
push
clc
jns
rcl
sbb
mov
shl
pusha
in
dec
repz
pop
ins
pushf
arpl
mov
cwde
sar
into
fcomip
jnp
stc
and
lods
pop
or
les
outs
pop
retf
mov
xor
shl
jbe
test
xor
aam
out
inc
std
fcomp
push
jecxz
repz
nop
shl
or
jbe
xchg
ins
sbb
add
fs
int3
mov
ins
xchg
fstp
retf
xor
shr
int3
rcl
call
pop
outs
xor
icebp
add
pop
sbb
dec
cmp
cmp
add
mov
retf
in
jo
popa
lods
hlt
lock
(bad)
dec
push
push
(bad)
popf
loopne
js
and
scas
in
mov
cwde
ins
adc
imul
enter
les
bound
nop
mov
mov
imul
ins
arpl
das
fisttp
jbe
outs
call
ins
fisubr
lahf
fnsave
addr16
call
hlt
cdq
dec
test
(bad)
aas
inc
imul
sar
cli
call
dec
mov
and
jmp
outs
xchg
sbb
jo
xchg
mov
pusha
push
push
mov
hlt
enter
stc
pop
xchg
inc
and
xor
and
cmp
inc
ss
sbb
cwde
push
popa
push
loope
cmp
mov
lfs
push
cli
fstp
dec
jns
sub
mov
fsub
or
sub
lahf
mov
xor
clc
repz
add
ret
cmps
cmc
mov
aaa
addr16
add
aaa
addr16
jmp
aas
mul
fwait
je
stc
push
js
mov
sbb
xchg
xor
jmp
or
outs
and
xor
dec
add
adc
popf
fldenv
sti
js
sub
push
scas
mov
xor
pusha
das
mov
inc
inc
sub
pop
neg
ret
dec
(bad)
gs
jbe
fdivr
sub
cli
mov
in
jmp
cwde
imul
lods
scas
mov
mov
clc
jbe
(bad)
cld
pop
std
jle
std
mov
jb
jp
repnz
call
pop
(bad)
xor
addr16
das
adc
xchg
push
icebp
aad
ja
inc
loop
mov
outs
sub
add
enter
hlt
ins
sar
adc
pop
push
test
cdq
push
pop
mov
fadd
cld
cmp
push
test
addr16
pop
retf
(bad)
stos
sbb
push
popa
push
xchg
jb
or
jne
push
retf
les
add
pop
shl
mov
ins
scas
(bad)
repz
shr
sbb
xor
call
stc
addr16
std
jns
cs
and
(bad)
out
cmp
(bad)
loop
leave
jo
xchg
xlat
push
lds
push
mov
jmp
add
cmps
dec
pop
stc
cmps
daa
sahf
fcom
icebp
adc
jmp
push
inc
add
ret
sbb
xor
(bad)
gs
mov
cmp
rol
pop
pop
or
imul
call
mov
adc
(bad)
stc
sti
js
push
mov
pop
retf
xor
xchg
add
xor
cmps
xor
pop
dec
mov
in
xchg
push
jge
fstp
popa
pushf
push
push
sbb
outs
mov
xor
xor
xchg
cs
jmp
or
inc
cmp
pop
gs
jp
jle
add
je
movs
push
ficomp
sub
das
add
xchg
stc
repz
ret
mov
push
xchg
mov
mov
xchg
or
aas
and
clc
push
inc
cdq
adc
adc
loopne
pop
xchg
adc
jae
aad
bound
in
lea
jmp
ds
sub
addr16
(bad)
jp
mov
ret
(bad)
shl
cmp
out
adc
and
in
loope
idiv
outs
sti
dec
es
jne
aad
pop
gs
ins
int3
test
mov
cmc
stos
pop
jmp
xor
jbe
mov
xor
addr16
cmp
test
jae
mov
jmp
ins
dec
xchg
dec
xchg
ror
inc
outs
scas
add
comiss
scas
mov
mov
outs
sub
fstp
test
ficomp
inc
(bad)
xor
jle
es
pop
std
lods
push
or
jle
pop
test
fdecstp
pop
sub
inc
aam
stc
mov
inc
inc
fmul
mov
adc
jmp
leave
cs
div
je
xchg
cmp
shr
push
jle
pusha
(bad)
shl
call
(bad)
xor
fcomp
out
dec
aam
mov
mov
in
popa
jp
push
jae
sub
jmp
inc
dec
in
jmp
(bad)
das
je
jbe
mov
fcomip
adc
ins
inc
movs
clc
jmp
jns
or
aad
dec
ss
fld
mov
lea
push
fadd
mov
mov
push
mov
cwde
pushf
xor
sbb
push
shr
pop
in
jae
retf
sbb
xchg
push
nop
push
cmp
dec
push
gs
outs
(bad)
hlt
inc
pushf
push
les
sbb
sahf
jle
ficomp
fwait
js
fcom
and
fucomi
aaa
ss
shr
push
cmp
sbb
ja
xchg
jmp
into
or
mov
sbb
jne
daa
jno
mov
fs
dec
outs
push
mul
or
nop
sub
add
jge
mov
jbe
retf
popfw
ret
test
sbb
rcr
mov
jg
ss
mov
out
add
xlat
xor
jle
or
and
rcl
pop
push
jle
mov
mov
movs
jo
pop
cmp
dec
mov
jae
mov
jne
sti
dec
mov
daa
inc
or
cmp
xor
sbb
inc
push
ss
bound
pop
push
arpl
sbb
mov
and
pop
dec
sar
lahf
movs
pop
addr16
mov
aas
mov
dec
inc
pusha
sub
les
cmp
jae
adc
popw
cld
xor
xor
pop
sbb
jne
test
aas
inc
cmp
or
aas
test
retf
dec
std
leave
adc
inc
outs
xchg
jo
sub
mov
jmp
pop
(bad)
jbe
std
sub
les
lods
xchg
ins
xor
jno
push
mul
inc
jp
push
xchg
fst
inc
fmulp
jmp
stc
aaa
xor
inc
or
es
call
call
(bad)
repz
adc
(bad)
or
cmp
xor
cmp
dec
test
int3
loope
pop
movs
aaa
xchg
adc
pop
ds
cmp
add
or
sbb
inc
sub
push
xchg
and
jbe
repnz
imul
imul
test
push
nop
lahf
mov
xor
lds
jmp
(bad)
scas
outs
popf
dec
mov
adc
adc
dec
into
jmp
imul
mov
jge
xchg
pop
jp
int
push
or
add
jns
jb
stc
push
adc
and
cmp
mov
cmp
cmp
ret
fs
push
call
data16
mov
inc
push
push
xor
ret
and
cmp
outs
lock
cmp
jge
cwde
jne
xor
test
mov
icebp
inc
cmp
jle
cmp
mov
ss
jmp
rcl
sbb
not
pop
fbstp
xchg
ss
push
adc
inc
test
repz
popf
pop
retf
cdq
fsub
jne
cmp
retf
push
mov
add
imul
jle
or
mov
out
lea
dec
aam
sbb
mov
push
sbb
push
push
mov
cli
xchg
push
dec
push
jbe
cmp
mov
mov
pop
fdivr
sub
xchg
(bad)
je
data16
mov
xchg
jge
ds
push
(bad)
and
sub
jno
pop
jecxz
outs
mov
jnp
push
ja
data16
pop
scas
adc
rcl
out
ss
xchg
int3
gs
sbb
ja
aam
or
mov
and
add
loop
push
mov
push
pushf
sbb
xor
fimul
jecxz
cmp
popf
sub
hlt
dec
fadd
jb
push
ds
ds
push
js
push
or
jle
mov
or
les
xchg
les
std
push
pop
xchg
sub
sub
ret
pop
lea
cdq
adc
jne
add
fst
or
and
in
push
dec
sti
xor
pop
outs
inc
shl
(bad)
push
mov
pop
sbb
popf
in
bound
sub
sub
fnstsw
mov
test
je
out
cli
dec
pusha
lds
fcmovnb
ret
aaa
cmp
fadd
or
cli
aad
in
test
test
retf
das
mov
bnd
sbb
stos
and
mov
imul
add
cmp
xor
and
icebp
cmp
movs
movs
ret
repnz
data16
jg
pop
enter
outs
cmp
stos
dec
jns
cmp
test
(bad)
ja
fld
outs
pop
movs
dec
scas
push
mov
xor
xchg
jb
xchg
clc
mov
sti
xchg
outs
cdq
dec
and
push
jne
push
pop
pop
int
retf
xor
leave
sub
push
lea
cmp
pop
loop
aaa
daa
xchg
sub
inc
mov
jg
jne
rcr
adc
sub
jo
aaa
cmp
(bad)
push
(bad)
je
mov
movs
(bad)
jmp
cmc
sar
cs
outs
test
push
mov
jns
repnz
xor
aas
mov
pop
adc
ja
cld
call
sub
outs
jge
mov
inc
bound
lods
ins
jns
mov
lods
fcom
pop
daa
out
imul
push
iret
jno
xor
(bad)
out
mov
cmp
xor
ss
mov
into
push
fwait
add
push
ds
(bad)
jmp
aam
pop
icebp
aaa
sub
popf
jne
test
iret
mov
test
sub
add
dec
dec
adc
mov
mov
xor
adc
dec
addr16
stc
aad
or
jmp
retf
jnp
pop
cmp
mov
je
mov
movs
pop
popf
aam
push
ss
or
pusha
pop
sub
mov
call
test
stos
pushf
inc
mov
sbb
adc
pop
ss
pusha
(bad)
fisttp
aad
fwait
and
xor
push
gs
inc
movs
cs
loop
mov
(bad)
imul
popa
jb
icebp
cmc
push
imul
xor
or
retf
or
scas
and
inc
push
pop
out
mov
jecxz
adc
idiv
xchg
sub
lods
icebp
pand
jb
loope
jbe
out
pop
pop
xor
cld
xor
cmp
scas
bound
cwde
adc
sub
stc
jge
xor
in
mov
(bad)
cmp
ror
stos
xor
stc
sub
sbb
pop
push
mov
push
out
in
pop
xor
les
jmp
jne
lds
ins
out
stos
or
jge
sub
xor
add
popa
jno
lea
mov
daa
fs
xlat
stos
cmp
fdiv
push
imul
push
mov
fistp
lds
mov
and
jne
push
add
ins
dec
sub
loopne
repnz
jb
test
ja
push
pop
dec
add
mov
stc
arpl
sbb
pop
in
js
data16
les
jbe
loopne
lahf
shl
test
inc
add
push
(bad)
adc
and
push
fist
xor
fdiv
je
add
sub
sbb
lods
dec
call
inc
fs
out
cld
clc
sub
mov
push
popf
mov
cmp
xor
lock
adc
pushf
or
xor
dec
or
mov
xchg
mov
pusha
pop
add
sub
jb
movs
jb
cmc
mul
sahf
sbb
mov
(bad)
mov
dec
adc
sub
sub
dec
shl
jbe
movs
and
jmp
rol
jo
fsubr
into
test
sbb
pop
push
lea
psrlw
add
mov
scas
aad
imul
das
mov
add
push
rcr
daa
push
lahf
js
add
or
adc
xchg
pop
dec
ins
pop
xchg
cs
pop
cld
test
sbb
mov
cld
outs
clc
jne
sub
(bad)
cmp
add
scas
jecxz
inc
movs
mov
inc
cmc
cwde
das
push
jle
dec
add
sbb
daa
mov
jg
add
fwait
xchg
ins
dec
mov
cmp
inc
xor
daa
dec
push
xchg
fadd
pushf
mov
lods
fcom
xchg
jno
and
psllw
push
or
push
popf
bsr
sub
cmp
sub
call
push
test
fdiv
mov
cld
and
and
lock
movs
lahf
jmp
test
mov
mov
(bad)
and
and
dec
push
cmp
add
jg
jb
sbb
pop
out
xchg
(bad)
rcr
lahf
mov
cmps
sub
ret
fs
mov
push
or
clc
and
ins
add
nop
shl
pop
and
jnp
sar
dec
and
xchg
mov
mov
cmp
add
jge
inc
fwait
les
push
jl
jns
call
sbb
out
mov
loopne
out
call
bound
je
and
or
add
add
cmp
mov
push
dec
out
mov
mov
clc
sub
mov
sub
sub
push
pop
sbb
jo
and
push
loope
add
stos
call
les
aad
retf
and
sbb
jp
outs
out
out
dec
dec
mov
sub
inc
aam
fmul
adc
jnp
(bad)
lds
pop
sbb
pop
xchg
imul
ds
mov
mov
stos
push
mov
ds
sub
int
es
push
fs
gs
mov
pop
(bad)
loop
rcl
outs
lock
outs
test
movs
out
mov
fcomp
jmp
(bad)
adc
sub
movs
inc
jecxz
in
pushf
mov
daa
jecxz
push
add
xchg
imul
test
or
(bad)
mov
aam
call
jbe
dec
jle
mov
sbb
push
mov
popf
fs
push
push
mov
test
cli
scas
or
cmp
dec
repnz
push
or
arpl
xchg
outs
pop
sub
pop
popa
gs
mov
jmp
stos
xor
lods
sbb
icebp
pop
pop
imul
retf
sub
dec
(bad)
mov
inc
mov
jbe
sbb
xchg
idiv
in
aam
adc
mov
stos
data16
xor
pop
inc
imul
ficom
pop
mov
imul
xchg
inc
rcl
sti
ror
test
cmp
(bad)
fmul
cmp
fistp
push
mov
shr
jne
jnp
sbb
pop
inc
cmps
xor
mov
mov
loop
add
cmp
jmp
push
inc
movs
lods
mov
mov
pop
rcl
ja
pop
push
mov
scas
in
xchg
mov
rol
sub
into
mov
mov
add
cmp
fistp
sub
mov
stc
xchg
cmp
mov
ret
cmp
out
adc
aaa
jle
shl
xor
sahf
cld
mov
push
jp
xchg
loopne
or
pop
fimul
fwait
adc
sub
std
or
push
(bad)
add
sahf
cs
pusha
or
ficom
jbe
and
in
dec
xchg
and
adc
mov
add
jbe
fmul
popf
add
jbe
int3
shl
fwait
out
xchg
in
inc
xor
or
ins
and
dec
xlat
adc
add
sub
jmp
sub
inc
adc
cli
arpl
cs
and
dec
sbb
mov
or
retf
jno
push
in
inc
cmps
test
push
pop
jmp
cwde
rcr
movs
push
jge
add
adc
test
fwait
inc
sub
lea
and
pop
(bad)
imul
sub
js
(bad)
test
cmp
fild
or
mov
das
mov
or
jg
or
xchg
ja
test
pop
and
cmp
mov
jbe
jmp
ins
mov
out
and
idiv
mov
movs
adc
aad
test
xchg
je
dec
sub
add
or
cwde
stos
push
push
ins
mov
push
mov
call
and
xlat
leave
outs
sub
(bad)
(bad)
fnstsw
ret
mov
cmc
xor
aaa
pop
cmp
push
(bad)
scas
gs
(bad)
stc
das
addr16
int3
ja
jl
in
ret
scas
cdq
movs
cmp
sub
push
mov
retf
add
das
out
and
pop
mov
sar
icebp
imul
lahf
enter
call
cmp
nop
dec
pop
xor
lods
jp
lock
aaa
and
test
mov
and
add
mov
cmp
fistp
loope
dec
xor
sbb
jns
pop
es
mov
sbb
mov
shl
fwait
mov
lods
dec
inc
mov
lods
not
das
xor
pop
sub
jecxz
popf
mov
dec
lods
les
mov
adc
sbb
int
pop
(bad)
shr
and
aaa
push
sub
popa
push
ja
sar
mov
retf
dec
test
fbstp
push
sub
not
or
pop
cli
and
and
xchg
mov
jge
call
inc
jnp
or
inc
xor
fistp
das
xchg
inc
adc
mov
into
push
cmc
lds
iret
xchg
fstp
inc
or
repz
ret
jb
fist
imul
and
ror
adc
fld
mov
push
xor
repnz
sar
mov
es
retf
ja
and
(bad)
lahf
inc
scas
sub
call
psubusb
arpl
pop
fild
sub
xchg
dec
cmp
fistp
cli
inc
mov
jno
jbe
xchg
cdq
not
fs
pop
push
ds
mov
inc
add
mov
cdq
mov
ds
test
stc
jmp
mov
mov
addr16
out
pop
and
and
dec
mov
stos
addr16
xchg
dec
popf
pop
je
rol
jne
shl
add
fimul
inc
and
sub
pop
and
sar
push
ja
push
xchg
pop
mov
mov
pusha
xor
xchg
adc
push
and
xchg
outs
fadd
mov
xor
lods
enter
xchg
out
xor
icebp
stos
out
fwait
aad
repnz
jmp
in
out
test
bound
add
or
or
fisttp
ret
add
mov
xchg
(bad)
xchg
in
or
cmp
push
shl
lods
or
test
adc
mov
jl
rcl
out
push
pop
push
dec
adc
sub
mov
sbb
cmp
jo
sub
in
and
pop
push
and
(bad)
lock
pop
or
sub
out
movs
pop
icebp
ja
pop
push
mov
nop
and
stos
dec
test
mov
aas
(bad)
cmp
es
inc
inc
sbb
addr16
dec
dec
test
jae
dec
mov
gs
pop
mov
xchg
out
imul
mov
addr16
aam
push
add
sub
rol
std
stos
ret
stos
(bad)
idiv
pop
or
add
mov
xchg
sahf
jl
lods
scas
(bad)
pushf
repnz
mov
(bad)
fmulp
clc
int
(bad)
push
ja
adc
(bad)
call
(bad)
mov
jg
fnsave
cs
test
sar
add
dec
cmc
imul
adc
mov
call
out
sbb
xchg
inc
(bad)
and
mov
sub
cmc
cdq
lods
add
ret
mov
cld
das
adc
pop
and
daa
adc
ret
and
jp
push
fisubr
imul
add
dec
fimul
sub
(bad)
push
cmp
cwde
pop
mov
jb
push
inc
retf
or
or
aam
mov
jmp
pop
pop
push
call
add
push
xlat
sbb
inc
cwde
sub
and
jmp
or
xchg
sub
or
cmp
xchg
mov
jp
(bad)
dec
(bad)
mov
sub
push
inc
ror
xchg
dec
retf
inc
pop
lods
pop
lea
xlat
in
mov
fmul
xlat
rcr
(bad)
pop
imul
cmp
mov
shl
pop
pop
push
xchg
dec
dec
xchg
add
mov
mov
jne
test
fisttp
jno
and
cmc
(bad)
stc
xchg
jecxz
cdq
jns
push
sbb
hlt
push
retf
out
sub
ins
sub
mov
pop
gs
call
shl
movs
jmp
xchg
push
movs
cmp
pop
adc
mov
test
ins
jge
add
push
repnz
mov
cmp
push
jnp
stos
mov
dec
out
jns
lock
pop
pop
arpl
(bad)
sub
inc
stos
ror
hlt
pushf
popf
mov
addr16
stc
ja
sub
jmp
cmp
dec
(bad)
and
xlat
jge
lods
mov
sbb
cmp
sbb
mov
and
pop
repz
ret
imul
xchg
loop
or
pop
or
test
test
std
mov
mov
nop
xor
retf
mov
dec
cs
(bad)
mov
movs
xchg
push
loopne
mov
stos
aaa
movs
push
add
and
sbb
push
mov
les
outs
sub
cmp
mov
aas
xchg
ret
adc
ror
aam
mov
int
push
and
test
xchg
dec
arpl
cmp
ja
ret
push
add
ficomp
add
je
push
or
xor
xor
or
movs
lods
mov
xlat
data16
int
outs
outs
xchg
sbb
mov
cmp
push
lahf
and
test
push
and
call
or
mov
push
sub
pusha
and
in
or
or
std
jae
fs
sahf
mov
xchg
rol
div
dec
inc
inc
adc
sti
dec
in
inc
pusha
pop
dec
ins
test
scas
mov
icebp
mov
out
mov
push
rol
call
ins
xchg
fisubr
ror
mov
mov
test
or
xor
ins
or
rcr
mov
xchg
or
data16
jmp
aam
dec
jle
loope
mov
xchg
js
stc
push
ins
mov
dec
mov
(bad)
jmp
sub
pop
test
sub
push
shl
(bad)
fdivr
add
pop
dec
sub
mov
mov
mov
jl
fdiv
scas
pop
dec
push
jmp
vandnps
mov
jp
cdq
ss
shr
and
addr16
cmp
push
shl
psubd
imul
sub
mov
push
sahf
xor
(bad)
jae
sub
push
mov
push
cmp
and
pop
fcomp
aam
push
adc
test
std
ret
icebp
and
jl
push
mov
call
pop
jmp
sub
mov
pusha
sar
daa
jle
cmp
nop
neg
mov
mov
nop
push
imul
dec
cmp
cmps
test
xor
ret
bound
push
jbe
push
sti
(bad)
or
pop
retw
and
jg
ins
xchg
pop
hlt
es
scas
xor
and
outs
jp
mov
pop
adc
jecxz
push
pop
sbb
(bad)
sub
dec
adc
mov
int3
sub
add
jb
data16
pop
loop
std
pop
mov
jp
sub
mov
push
out
inc
add
adc
out
inc
imul
test
inc
shl
mov
push
shr
retf
push
loope
ds
popa
shl
inc
dec
cmc
das
jge
pop
(bad)
cmp
imul
addr16
mov
f2xm1
imul
or
data16
fldenv
movs
push
and
adc
dec
mov
fdiv
ret
push
xchg
clc
into
sub
iret
inc
jns
ds
push
xchg
push
sub
arpl
cmp
jnp
adc
cmp
call
pop
push
xchg
and
aam
movs
test
test
int
pushf
icebp
or
les
pop
dec
xor
addr16
(bad)
ficom
push
das
mov
int3
ss
cwde
and
mov
cmp
mov
and
mov
fidivr
pop
sub
inc
jb
push
xor
mov
dec
jbe
ja
jl
icebp
in
das
fistp
cmp
pop
push
iret
inc
movs
fdiv
push
push
cmp
std
inc
inc
es
fcmovu
jo
xchg
rcr
stos
outs
cmc
lods
leave
enter
mov
push
cdq
(bad)
mov
dec
sbb
jle
test
push
add
push
dec
imul
push
dec
stos
add
cmp
cwde
pop
mov
imul
ss
sbb
sar
pop
push
or
shl
dec
add
xlat
cmp
or
sbb
pop
mov
js
mov
pop
push
aam
inc
sub
lds
push
and
adc
inc
jae
and
mov
mov
mov
or
jbe
fisub
jmp
sbb
std
adc
pusha
jecxz
in
mov
out
jle
(bad)
in
add
adc
das
leave
xor
iret
retf
or
dec
add
mov
jb
aaa
cmp
inc
cmp
mov
in
in
inc
int
std
mov
mov
xor
scas
xor
and
(bad)
test
mov
(bad)
sar
adc
jl
(bad)
adc
jns
in
scas
mov
xor
imul
inc
cmp
sub
out
pop
mov
stc
pop
mov
and
fldcw
jp
xchg
es
mov
jne
(bad)
jno
adc
jae
add
add
mov
or
inc
jne
mov
mov
adc
aas
dec
shr
jns
jno
mov
addr16
pop
retf
or
mov
in
jle
sar
or
ss
fidiv
aas
mov
jle
push
sar
fcom
cmp
rcr
stos
or
dec
jle
call
icebp
mov
sbb
xlat
ja
sti
mov
and
jmp
sub
stos
mov
in
clc
mov
pop
and
sub
mov
xor
loopne
call
cmp
sub
ret
fdiv
lods
out
pop
leave
xchg
jge
inc
adc
aam
mov
imul
xor
in
aam
out
and
ds
inc
popf
inc
adc
xor
cmp
aad
push
fsubr
sub
dec
and
aad
cmp
in
mov
pop
shl
cs
jg
inc
mov
push
inc
jmp
xchg
push
pusha
call
movs
cld
loopne
mov
xor
adc
add
sub
bound
or
bound
inc
sub
push
ret
es
out
jns
test
mov
rol
mov
lss
stos
cli
jo
mov
or
fld
neg
gs
jne
cmp
lock
mov
adc
jne
xor
sub
popf
popa
dec
adc
mov
inc
jnp
inc
out
dec
fcom
sub
fisttp
push
int3
loop
int3
mov
imul
mov
data16
dec
xchg
pop
ret
inc
in
cdq
pop
jb
push
cld
xchg
data16
adc
(bad)
call
xor
dec
ins
xchg
mov
test
ds
jbe
test
inc
je
jmp
xor
pop
pop
jg
call
enter
je
fs
ins
push
adc
nop
lods
dec
add
pextrw
push
loope
sub
xchg
push
mov
add
mov
fstp
clc
scas
jmp
sti
ins
lds
popf
call
pop
shl
mov
push
lea
aam
das
pop
(bad)
sti
test
push
fwait
mov
mov
ds
movs
inc
cmp
add
jns
lea
xchg
cmp
jbe
stc
cmp
jmp
push
sahf
push
sub
cmp
int
xor
push
imul
and
jge
sti
jb
xor
ja
jo
addr16
retf
(bad)
mov
rol
mov
fdivr
je
add
adc
aad
shl
jns
stc
out
sub
call
dec
in
in
push
(bad)
mov
or
nop
(bad)
and
sbb
inc
aaa
pop
or
mov
retf
scas
shl
and
test
popf
sub
cmp
push
adc
push
and
jecxz
hlt
pop
inc
dec
out
xchg
leave
inc
pusha
test
pop
rcr
push
sub
call
es
jmp
cmp
pop
and
mov
clc
mov
jge
clc
sub
imul
jecxz
or
adc
ret
sbb
adc
mov
jg
pop
outs
mov
xor
fisttp
adc
pop
jno
pushf
sbb
pop
fldcw
xor
cli
add
and
ja
mov
rol
mov
fdivr
add
(bad)
mov
enter
dec
dec
movs
xor
nop
jno
stos
movq
(bad)
or
mov
(bad)
sub
jge
dec
inc
or
out
icebp
cmp
mov
out
inc
add
xor
push
jmp
or
push
dec
fs
hlt
in
cmps
jmp
sub
fcmovnbe
test
mov
les
cmovnp
outs
fidiv
pop
add
push
mov
or
dec
arpl
dec
stc
cmp
adc
adc
mov
shr
push
into
and
retf
jg
retf
jg
push
call
lahf
push
sub
js
cmp
cwde
lock
pop
adc
add
fstp
xor
ins
mov
jmp
ja
jge
sbb
jne
cmp
ja
xor
sbb
ins
inc
pop
dec
xor
inc
xor
push
pop
mov
inc
add
pop
popa
push
sub
mov
add
repnz
fcmovnu
inc
sahf
lock
test
push
or
dec
push
call
sub
out
jg
cmps
leave
mov
jge
fs
jle
cdq
or
mov
clc
mov
pop
movs
call
push
add
inc
imul
and
mov
fwait
pusha
jnp
dec
push
pop
scas
mov
in
nop
dec
cmps
and
or
popf
xor
jecxz
jo
imul
mov
ds
iret
dec
out
(bad)
or
ret
push
mov
or
mov
xor
jg
je
mov
and
outs
or
sub
call
int3
lahf
sbb
sbb
ret
pop
jnp
dec
rcr
or
bound
and
cld
xlat
xor
mov
cs
aam
adc
jecxz
mov
mov
xchg
inc
sub
push
sbb
loope
lahf
mov
sbb
mov
push
xor
mov
xlat
in
sbb
(bad)
mov
jg
leave
clc
or
sbb
dec
(bad)
mov
movs
clc
lods
not
mov
inc
pushf
shl
and
mov
sub
xchg
jbe
add
rcl
sub
pop
cmp
pop
rcr
dec
cld
addr16
hlt
sub
fidiv
pop
push
inc
push
inc
imul
mov
push
xor
inc
adc
cmp
inc
cmp
inc
popa
adc
in
outs
inc
inc
ret
xchg
push
mov
lods
pop
mov
inc
sub
inc
dec
sub
mov
jo
lds
or
sbb
xlat
pop
ss
shl
sahf
inc
stc
mov
cmps
xlat
pop
inc
in
mov
xchg
loope
(bad)
pusha
fbstp
mov
mov
inc
mov
test
push
mul
cmp
(bad)
push
and
cli
push
out
adc
cmp
adc
xor
es
pop
ins
cdq
les
push
mov
mov
(bad)
cmp
js
mov
(bad)
dec
sbb
push
mov
mov
mov
int3
dec
pop
in
cmp
dec
mov
or
add
sub
imul
dec
adc
stos
jmp
shl
adc
les
mul
cmp
cmp
gs
mov
jg
jne
in
scas
pop
js
jp
xlat
das
jns
pop
in
cmps
rcr
fwait
xchg
xchg
mov
pushf
mov
mov
cmps
jmp
cli
arpl
es
clc
jg
xchg
pop
xchg
retf
test
push
push
sar
ja
cmp
mov
sbb
shl
cwde
mov
shl
out
mov
xor
fwait
dec
out
leave
jecxz
in
call
pop
sub
push
enter
hlt
ja
pop
int
daa
cmp
es
adc
cdq
xchg
jns
xchg
call
int3
inc
jb
mov
bound
adc
mov
sub
inc
push
test
or
rcl
cmp
mov
pop
fidivr
stc
pushf
and
xor
pop
push
ss
xor
imul
mov
in
mov
push
movs
pop
pop
pop
jne
xor
ret
adc
repnz
mov
(bad)
sbb
xor
jge
cmp
icebp
cli
ret
jecxz
dec
popf
cmp
rcr
hlt
cmp
js
pop
mov
out
or
idiv
push
aaa
or
pusha
in
mov
mov
cmp
pop
ss
hlt
loop
and
ins
je
push
stos
adc
scas
cs
dec
push
leave
inc
mov
dec
loopne
inc
xchg
ins
pop
js
fiadd
hlt
mov
(bad)
push
stc
xor
jmp
push
cli
out
adc
aas
adc
les
cmp
ja
pusha
pop
mov
stos
outs
arpl
xchg
repnz
test
enter
fild
pop
inc
test
add
fs
xchg
cmp
imul
xor
daa
mov
int
popa
sub
push
rcr
lods
pop
call
mov
aas
loope
cwde
cmp
ins
xchg
pop
push
gs
pusha
addr16
jmp
cdq
cmp
sar
out
imul
fs
popa
aam
cld
stc
aaa
sub
mov
loopne
loopne
push
sub
push
sub
and
mov
call
jns
add
jb
cmps
scas
push
cmp
xchg
xchg
cmp
pop
xchg
adc
dec
loope
dec
mov
repnz
pop
sti
sbb
dec
stc
pop
push
into
pop
jae
cmp
inc
push
lahf
out
cs
sahf
shl
lods
xchg
sub
mov
ins
dec
xchg
pop
mov
mov
cld
std
dec
jle
faddp
pusha
sub
pop
or
cld
push
mov
xor
or
jl
in
inc
test
jecxz
jnp
xor
gs
pushf
in
jnp
mov
dec
and
popf
popa
fdiv
mov
lea
call
cli
xchg
fdiv
push
add
pop
adc
ins
push
(bad)
xchg
jmp
das
jmp
or
fild
stos
sbb
sub
mov
inc
cli
inc
xchg
movs
push
inc
xor
outs
mov
mov
sub
pushf
fs
cmps
inc
gs
cld
or
push
call
mov
(bad)
pop
xchg
stos
dec
hlt
les
dec
add
or
sbb
pop
cmp
add
aaa
dec
cmp
in
stc
inc
icebp
or
push
cdq
int3
test
jl
sbb
test
out
adc
jne
pop
push
ins
xor
push
push
jle
push
ja
jb
nop
ja
sbb
stc
dec
ins
rcr
int
jb
adc
pop
hlt
(bad)
cld
xchg
inc
sar
adc
popf
(bad)
popf
stos
aam
mov
dec
mov
pop
cmp
or
cmp
push
xor
sar
lds
not
sahf
inc
cmp
std
(bad)
push
ja
retf
push
adc
push
cld
mov
bound
or
cmp
jecxz
ror
pop
jmp
imul
cdq
ins
sub
pop
xchg
lock
and
dec
dec
mov
push
pop
jo
aas
and
xchg
es
push
fisubr
neg
(bad)
mov
cmp
shr
xchg
jb
lea
xor
or
jns
inc
cmp
dec
and
xchg
add
xor
cmps
push
loop
gs
das
mov
pop
cs
fnstenv
jo
sbb
repz
loop
jmp
jns
inc
(bad)
pop
imul
jae
cmp
mov
sbb
adc
movs
sub
ins
cmp
mov
pop
mov
retf
dec
imul
jecxz
jns
movs
int
add
int3
les
adc
and
gs
inc
cmp
mov
sbb
jo
mov
cmp
inc
scas
jle
sbb
add
jne
pusha
inc
clc
loop
jnp
(bad)
out
in
adc
repz
cmc
imul
pushf
ja
jns
in
mov
into
inc
stos
loopne
js
cs
ins
loopne
xchg
add
fcomp
pop
rcl
cmp
aaa
iret
sbb
or
mov
fs
mov
mov
cmp
inc
in
in
ds
jne
adc
pop
lds
rcr
cmp
sub
add
jl
pop
jge
sub
xchg
bound
imul
sub
fmul
data16
add
pop
adc
imul
xchg
sub
add
dec
imul
mov
dec
pop
rol
fisubr
das
sub
sub
dec
sub
js
push
push
jbe
popf
jbe
lods
(bad)
jge
movs
pushf
and
leave
pop
cdq
push
outs
inc
pop
scas
push
cmps
lahf
mov
mov
mov
push
add
sti
lock
into
iretw
scas
adc
or
pop
cmp
sbb
popa
pop
sub
dec
stos
ficom
mov
push
xchg
sub
mov
div
sahf
fldenv
push
(bad)
cmp
sbb
add
adc
fs
gs
loop
cmp
mov
sar
outs
dec
push
push
das
adc
in
inc
mov
cmp
(bad)
popa
xchg
sub
test
dec
ds
sub
cmps
cli
es
mov
stc
jno
stos
cmp
inc
and
outs
jae
mov
xor
cmp
clc
mov
mov
jmp
retf
stc
push
pop
adc
cmp
cmc
je
daa
pop
inc
sbb
cmp
xchg
(bad)
shl
imul
pusha
in
add
add
cs
cmp
lds
outs
dec
aad
cdq
pop
inc
inc
loope
addr16
fnstenv
stos
or
cmp
adc
push
xor
xlat
iret
xor
fwait
adc
out
push
out
mov
jl
pop
inc
popa
in
jne
jmp
je
cmp
jp
and
xor
(bad)
push
aad
shl
aad
inc
(bad)
sbb
mov
pop
(bad)
addr16
pop
ja
neg
call
xchg
in
and
das
sbb
mov
fs
aas
and
sbb
xchg
sbb
icebp
and
cmp
xchg
add
mov
mov
int
or
pop
clc
fdiv
addr16
push
xor
imul
fcmovbe
fcomp
and
jne
xor
or
(bad)
sub
adc
daa
xor
sbb
xchg
fcomp
test
test
jmp
sbb
scas
scas
jnp
mov
jnp
iret
pop
rcr
jmp
inc
lods
test
mov
or
dec
out
xlat
cmp
test
fisubr
inc
mov
adc
(bad)
nop
mov
or
mov
sub
mov
fiadd
clc
fisub
pop
dec
and
movs
sub
shl
in
push
in
cmps
mov
bound
push
push
ins
lahf
pop
dec
push
push
adc
jne
add
cmp
cmp
fbld
ins
(bad)
mov
adc
addr16
pop
das
jl
rcr
or
outs
test
add
bound
clc
or
dec
sub
push
push
gs
aas
outs
push
push
test
movs
add
div
jl
add
mov
xor
jae
push
stc
inc
fdivr
or
popf
sub
adc
inc
mov
test
and
inc
pop
push
sub
jge
sub
push
jbe
fucomp
pop
aas
leave
dec
sbb
dec
sbb
push
push
xor
push
sbb
shr
adc
sbb
pop
sahf
push
and
inc
and
sbb
sar
gs
pop
inc
xor
data16
outs
jno
popa
fwait
dec
out
sub
cli
mov
ret
sub
or
idiv
and
cs
push
xchg
daa
inc
mov
inc
cmp
mov
ja
ror
loopne
mov
imul
nop
daa
scas
(bad)
loop
mov
xor
jno
(bad)
xchg
cmp
push
fcom
sub
imul
loop
gs
push
jb
mov
push
(bad)
xor
dec
push
or
or
add
push
xchg
xor
retf
sub
in
add
push
jbe
ficom
cmp
mov
mov
mov
or
mov
shl
nop
nop
pusha
push
mov
push
stos
test
mov
retf
sbb
adc
fnstsw
mov
mov
adc
test
push
sub
ja
pop
jbe
in
sahf
daa
sbb
mov
mov
pop
and
jo
jnp
xor
pop
inc
ins
in
and
mov
gs
mov
or
mov
sub
sub
push
mov
int3
pop
imul
mov
xchg
pusha
jb
push
cmp
and
pop
mov
or
jl
call
add
mov
xor
or
mov
xchg
mov
jmp
aad
stos
enter
xchg
sar
lahf
jmp
mov
popf
mov
cmp
dec
popa
sar
(bad)
pushf
out
jbe
jb
push
out
jp
mov
xchg
js
(bad)
in
jae
mov
xor
jo
dec
call
inc
add
jge
xchg
(bad)
jp
shl
call
(bad)
jmp
hlt
ja
jmp
ja
test
scas
mov
xchg
add
sub
ret
bt
cmp
and
jecxz
push
inc
push
cmp
imul
fnsave
mov
dec
xor
dec
mov
repz
leave
inc
push
push
mov
pop
xor
inc
inc
mov
add
dec
ins
jbe
ins
mov
add
or
data16
or
mov
lock
dec
cmp
idiv
in
rcl
push
aaa
pop
xchg
sub
fcmovu
jne
mov
int
out
imul
js
dec
mov
outs
pop
scas
fdiv
cmovle
dec
mov
adc
int3
sbb
ins
movs
lds
cmp
inc
jnp
test
jns
psrld
std
inc
sub
jmp
fxch
adc
jmp
adc
add
outs
cs
retf
jmp
cdq
fdiv
ds
fidiv
icebp
aad
xchg
inc
and
jb
(bad)
and
pusha
push
leave
ja
in
rol
leave
loope
mov
dec
cwde
fstp
jmp
dec
movs
and
mov
fist
test
xchg
popf
pop
push
adc
jle
neg
out
push
mov
or
test
mov
pop
add
popf
xor
fisubr
fist
and
push
and
retf
or
retf
inc
cmp
clc
adc
and
jl
cs
mov
xchg
ret
ror
call
cmp
arpl
cdq
mov
dec
mov
add
mov
dec
jno
bound
dec
pop
imul
adc
cmps
rol
sub
test
jg
jecxz
jecxz
mov
jl
fadd
jnp
jo
or
xchg
xor
imul
inc
adc
in
xchg
pop
ds
sbb
aam
(bad)
and
and
pop
sub
daa
movups
imul
sbb
lods
push
jl
sub
leave
mov
jmp
adc
fild
add
jecxz
xor
dec
dec
or
push
sub
imul
into
test
aaa
fwait
cmc
cmps
pop
pop
add
out
out
lahf
sbb
jge
out
std
mov
cmps
xor
mov
inc
lods
arpl
fmul
aas
push
iret
jnp
idiv
(bad)
leavew
xlat
imul
repz
enter
add
mov
xchg
ret
inc
cdq
pop
and
mov
push
in
inc
mov
(bad)
xlat
adc
addr16
mov
sbb
stos
add
call
xor
sbb
inc
pop
push
dec
ror
xchg
fstp
adc
mov
push
mov
dec
xchg
jmp
mov
dec
out
cdq
inc
sub
inc
stos
loope
cmps
xchg
stos
test
std
jbe
sbb
push
das
sub
cdq
push
repz
rcl
dec
sub
test
ret
jae
fistp
nop
ror
cmp
sub
stos
pop
mov
aaa
add
push
imul
xor
jne
call
dec
pop
sub
jge
push
jno
jne
icebp
scas
jo
outs
mov
add
add
and
add
push
jmp
cmp
stos
and
jecxz
jne
sbb
add
add
xchg
push
loope
daa
repz
cdq
sub
mov
ja
test
in
mov
ret
popa
xchg
adc
mov
std
dec
mov
call
fdiv
lds
pop
pop
add
bound
xchg
popf
ficomp
int3
mov
mov
inc
sub
jg
cmp
and
ret
mov
sbb
iret
vpslld
inc
cmp
adc
imul
dec
fnstsw
ja
xor
or
std
fdiv
cmp
and
popf
dec
dec
or
xor
cmps
jle
bound
xor
(bad)
add
push
lock
jge
sbb
popa
sahf
(bad)
shr
arpl
sbb
rcr
push
and
into
(bad)
jecxz
cmp
lock
dec
xor
push
pop
add
mov
xor
mov
shl
adc
ins
scas
sar
mov
push
jno
retf
pop
cmp
rol
sub
or
mov
ins
jmp
fmulp
fs
mov
push
retf
addr16
adc
inc
retf
jmp
add
test
push
xor
loope
fnstsw
or
pop
cmp
mov
mov
pop
data16
sub
push
imul
dec
push
das
mov
or
js
inc
stos
repnz
sbb
in
fucomi
mov
int3
and
shr
leave
and
call
mov
inc
xchg
mov
push
push
scas
call
je
inc
ss
sbb
sub
and
xchg
mul
ror
mov
fldenv
cmp
xor
stos
xor
mov
mov
sbb
gs
jecxz
mov
(bad)
push
mov
jecxz
xor
jmp
shl
repz
(bad)
adc
jae
jne
or
scas
inc
popf
sbb
es
pop
in
dec
sub
or
jnp
xchg
sbb
add
ror
jns
adc
imul
dec
out
pop
add
stos
pop
retfw
mov
cmps
out
rol
js
sbb
loope
mov
mov
sbb
ss
mov
xor
mov
xor
push
jnp
pop
jecxz
ss
push
inc
ret
jb
cmp
ins
ds
das
xchg
cmp
clc
loope
push
clc
jno
ret
pop
mov
ds
xchg
in
imul
and
sub
push
cs
push
adc
mov
dec
jle
cmp
xor
push
pop
jae
jns
es
xchg
ret
mov
retf
xchg
stos
leave
inc
mov
loope
jle
sbb
sub
add
push
jp
push
inc
je
es
jno
xchg
dec
or
or
and
inc
adc
psubd
pop
daa
mov
(bad)
test
dec
test
fs
jmp
mov
daa
xlat
add
inc
or
inc
xor
jmp
inc
(bad)
jg
jp
mov
enter
mov
scas
inc
cli
mov
adc
into
dec
mov
sub
and
bound
adc
test
and
dec
stc
and
(bad)
shl
mov
addr16
ret
push
mov
pusha
loop
mov
retf
addr16
stos
mov
shl
inc
fimul
popa
test
test
jp
(bad)
push
mov
iret
push
and
mul
ins
fwait
ss
hlt
aaa
std
mov
movs
pop
mov
scas
loopne
cs
cwde
imul
jmp
adc
mov
ds
dec
imul
pop
inc
jmp
xchg
hlt
jae
inc
sbb
lock
and
mov
jl
pop
xor
mov
sbb
icebp
pop
jmp
sbb
xchg
call
push
cmp
xlat
sbb
xchg
fdivr
aas
pop
pop
popf
es
jl
or
std
dec
aas
scas
dec
sti
jns
les
mov
sub
out
or
sbb
inc
repz
mov
test
dec
inc
ret
retf
popf
push
rcl
les
inc
out
imul
xchg
mov
ins
push
shl
leave
push
inc
dec
out
mul
(bad)
inc
fisubr
sbb
dec
inc
cmp
pop
shr
sbb
dec
adc
les
sbb
adc
and
push
inc
or
add
xchg
imul
jmp
and
dec
jb
adc
lods
mov
add
dec
inc
ret
sub
mov
sbb
or
inc
in
fdiv
inc
xchg
mov
cmp
dec
sbb
cmp
test
pop
or
mov
shl
sbb
add
inc
pushf
or
mov
test
fwait
aas
jle
cmp
fs
xor
imul
test
and
(bad)
jae
gs
xor
ins
xor
imul
popa
adc
inc
sar
push
loop
cmp
and
fsincos
(bad)
push
outs
fxam
call
cmp
add
pop
enter
out
or
int3
jle
jmp
int
or
mov
mov
mov
rcr
icebp
out
inc
push
sbb
popa
add
dec
jae
les
iret
ret
dec
jle
gs
or
push
rcr
in
jbe
cmovge
xor
div
push
aam
jecxz
loopne
movs
cmp
in
sbb
dec
sbb
std
push
dec
ds
or
arpl
xor
pop
and
jg
lds
or
jmp
das
cmp
aam
push
mov
sub
(bad)
push
mov
out
stc
cwde
iret
sahf
pop
cwde
aaa
jnp
mov
or
adc
mov
adc
das
mov
popa
stc
leave
and
and
jo
adc
ds
ds
es
push
xor
dec
xor
push
sub
mov
call
in
repnz
pop
shl
aas
adc
(bad)
aad
pop
leave
inc
daa
ins
cmp
mov
test
imul
test
xchg
inc
push
je
rol
dec
xchg
cs
dec
push
ins
rol
aaa
cmp
sub
sti
inc
pop
mov
mov
mov
push
or
ins
shr
call
xchg
jmp
dec
adc
mov
jl
imul
test
or
push
sar
cwde
fucomp
test
push
pop
(bad)
jb
(bad)
cmps
mov
mov
bound
cmps
mov
ins
push
push
std
pop
(bad)
adc
cli
and
xchg
sub
popa
stos
mov
addr16
(bad)
outs
cmc
adc
out
cmp
mov
inc
mov
xor
aas
xor
and
jae
jle
(bad)
fst
fcom
mov
xchg
add
add
rcl
(bad)
mov
lds
mov
das
inc
push
mov
outs
mov
ins
(bad)
scas
sub
dec
jne
mov
mov
rcl
std
and
sbb
ins
pop
sbb
or
jecxz
retf
xchg
mov
imul
aad
ss
pop
rcr
mov
ret
(bad)
mov
mov
sub
out
fmulp
lahf
jno
lds
jl
inc
and
or
daa
in
retf
jmp
inc
xor
movs
add
inc
push
fnstcw
in
stos
in
mov
jecxz
(bad)
aad
push
lock
add
stos
repz
shl
mov
icebp
(bad)
out
nop
(bad)
sbb
int
add
and
into
adc
jnp
pop
lock
icebp
add
pop
bound
dec
xor
neg
(bad)
cmp
into
neg
jp
or
and
shr
stc
pushf
cmp
sbb
push
cmp
and
push
jmp
aam
fmul
ins
pop
data16
movs
loopne
xor
(bad)
fdiv
or
(bad)
dec
and
scas
(bad)
xor
es
sub
adc
in
mov
sahf
icebp
js
cmp
fs
ds
adc
test
sub
adc
out
mov
pop
jbe
out
dec
push
mov
lock
jnp
pop
jne
stos
icebp
jb
mov
test
test
mov
cmp
mov
mov
cmp
loopne
jmp
aam
mov
stos
cmp
adc
push
mov
xchg
ror
add
xor
sbb
sbb
xchg
push
(bad)
retf
es
sbb
or
js
lahf
fmul
mov
rcl
jmp
mov
sub
shl
cmp
sub
jmp
xchg
pop
popf
xchg
mov
stc
inc
xor
ret
jb
fstp
sbb
mov
outs
imul
cmps
mov
pop
cwde
xchg
pop
in
stos
add
or
and
out
push
enter
adc
mov
cmp
sub
inc
mov
repz
mov
jle
call
sahf
cmp
pop
stc
xor
mov
test
mov
div
xor
xchg
icebp
icebp
or
mov
or
sub
and
push
lds
test
sbb
into
ds
aam
inc
mov
mov
ja
mov
push
mov
dec
ficomp
(bad)
loope
loope
out
fs
fbstp
push
cmp
clc
sub
jae
add
push
jmp
sub
fwait
xor
jmp
pop
test
cmps
cwde
imul
cli
jns
sub
pop
push
dec
push
outs
(bad)
jg
nop
test
aam
repnz
inc
dec
pusha
out
push
jb
mov
cmp
lods
add
add
xor
inc
add
pop
dec
adc
shr
dec
data16
movs
jl
cmp
cld
adc
mov
push
pop
loopne
mov
xchg
lock
aam
push
dec
xchg
cld
and
mov
xor
xchg
jl
fadd
xchg
out
cmp
rcr
mov
add
sub
je
je
sbb
arpl
fwait
sub
push
pop
cmps
mov
call
out
retf
movs
das
fs
jo
js
(bad)
sbb
(bad)
xor
pop
popa
mov
jmp
lahf
xor
mov
int
push
fcomp
or
pop
dec
aam
pop
inc
xchg
mov
sti
inc
and
inc
dec
pop
mov
test
(bad)
xor
les
xor
push
into
aaa
or
cmp
dec
scas
sar
push
inc
jo
mov
push
test
rcr
and
cmp
pop
xor
in
aaa
lods
dec
mov
and
jecxz
and
rcl
mov
rol
xchg
xchg
mov
not
mov
scas
imul
sbb
pop
sub
mov
or
sbb
call
icebp
and
hlt
xor
aad
adc
stc
xchg
push
(bad)
lock
xor
jmp
out
ja
clc
ror
pop
imul
mov
and
inc
je
adc
out
stos
xor
in
or
es
pop
popf
shl
xchg
pushf
sahf
pusha
sbb
inc
stos
xchg
(bad)
out
lods
or
mov
fidivr
push
rcl
sub
arpl
push
hlt
dec
ret
push
repz
int3
and
stos
jnp
push
jg
es
lods
jno
xor
lds
add
push
jp
jecxz
addr16
imul
sub
add
mov
imul
and
js
lahf
xchg
test
or
jge
sbb
les
push
push
jbe
lahf
call
pop
retf
mov
(bad)
inc
sbb
mov
and
inc
sub
push
mov
loopne
xlat
pop
lahf
in
das
xchg
jns
loope
inc
arpl
jecxz
mov
scas
mov
push
adc
into
jl
sti
xchg
fcomp
push
xor
sub
push
mov
sub
sar
or
xchg
sub
jo
leave
ss
ins
retf
scas
jns
pop
out
jmp
and
inc
mov
cs
push
sbb
das
cmp
(bad)
stc
pop
repz
xchg
stos
mov
mov
arpl
sub
cmp
cwde
dec
js
pop
adc
and
push
push
pusha
cmp
bound
mov
mov
arpl
(bad)
es
aam
cld
(bad)
lock
push
outs
shl
lock
in
pop
arpl
aaa
push
sbb
mov
or
loop
leave
sub
lods
mov
jae
iret
cwde
cmp
push
jae
mov
ror
inc
adc
dec
out
cs
stos
inc
arpl
out
xor
or
push
jmp
test
and
push
dec
test
mov
not
std
jo
test
ja
dec
cmp
ins
out
xchg
and
jmp
mov
jb
adc
adc
scas
clc
pop
mov
scas
pop
loop
push
cli
cmp
scas
das
inc
sbb
call
lahf
outs
pop
sub
sahf
jo
xor
mov
div
retf
and
xchg
adc
aas
mov
in
and
lahf
mov
sub
jo
mov
or
in
test
je
sbb
jnp
jl
ds
dec
(bad)
out
inc
addr16
retf
push
xor
pushf
push
ds
ja
and
jmp
ret
fnstsw
inc
repz
or
cld
aaa
stos
gs
and
cwde
xchg
pop
lahf
inc
in
jb
rcr
mov
cmp
rcl
jo
sar
loope
jae
ret
iret
test
scas
dec
shr
out
or
lea
and
push
jae
mov
mov
arpl
inc
loopne
adc
push
outs
mov
mov
fcom
jns
movs
jp
pop
jl
retf
jg
shl
xchg
mul
daa
xchg
sub
imul
xchg
sub
dec
mov
sbb
and
addr16
or
inc
in
dec
pop
sub
sbb
adc
popa
push
jne
cld
repnz
xlat
jnp
or
in
adc
mov
cdq
inc
xchg
lods
jbe
into
loop
push
inc
and
add
pusha
xchg
add
sar
push
mov
adc
stos
in
push
jmp
mov
dec
push
push
and
(bad)
sub
enter
inc
test
bnd
cmc
cdq
imul
test
sti
pop
mov
sub
(bad)
out
out
inc
mov
mov
(bad)
jg
scas
lahf
jmp
jg
pop
dec
test
aam
mov
fmul
aas
popa
(bad)
test
cmps
or
xor
test
iret
out
jno
(bad)
sbb
sbb
sbb
mov
mov
clc
sub
inc
aaa
sub
sub
xor
hlt
dec
ret
dec
mov
div
cmp
ror
jecxz
repz
mov
inc
jmp
ficomp
arpl
outs
jae
mov
inc
jecxz
push
mov
sar
cwde
loope
mov
sbb
repz
stos
or
xchg
loopne
rcr
push
push
retf
cmp
xchg
push
psubd
out
pop
cmp
es
shr
fild
xchg
movs
leave
movs
daa
lods
es
ds
shl
inc
mov
inc
jb
xchg
jmp
push
adc
popf
loope
adc
ret
xor
in
mov
(bad)
fimul
and
out
cld
cmc
fst
fmulp
or
add
scas
jl
rcl
retf
sub
inc
mov
inc
and
cli
jne
test
mov
pushf
je
fild
mov
and
bound
repz
out
clc
stos
mov
rcr
mov
popa
retf
in
sbb
retf
ds
ret
clc
push
adc
data16
fld
cmp
arpl
xchg
ss
in
(bad)
adc
ror
int
lea
dec
mov
adc
popf
jne
or
not
stc
xor
ror
fwait
sub
xchg
mov
add
pushf
add
cmp
cmp
ins
dec
xchg
pop
sub
mov
cmc
push
rcl
mov
popa
jge
enter
into
jae
adc
neg
mov
fmul
cmps
jmp
sbb
sub
imul
dec
sbb
retf
ins
jge
shl
and
pop
mov
data16
jo
sub
mov
cmp
hlt
xchg
mov
mov
mov
push
test
adc
mov
cmc
stos
push
lds
jbe
or
(bad)
xor
or
cmp
jno
jmp
(bad)
jo
ja
mov
and
test
push
cmp
(bad)
pop
push
adc
or
inc
cmp
fnsave
ret
rcr
js
xchg
clc
(bad)
leave
test
inc
xlat
mov
hlt
cmps
js
shr
xchg
mov
and
sub
movs
mov
adc
in
sbb
add
jnp
pop
add
js
fnsave
mov
bnd
ficomp
cmp
(bad)
adc
adc
jp
mov
push
mov
jmp
sub
pop
les
adc
lea
push
in
rcr
sub
in
mov
jmp
sbb
mov
mov
stc
cmp
clc
mov
cmp
mov
leave
push
mov
mov
dec
or
stc
mov
cmp
jbe
jo
sti
pop
and
mov
cmp
push
jge
ja
sub
mov
xor
and
mov
rcr
xor
add
movs
lock
push
inc
pop
dec
mov
mov
out
pop
xchg
scas
push
(bad)
ror
popf
sub
dec
repnz
push
sbb
sub
dec
in
fs
jmp
sub
retf
and
jg
jl
ficomp
arpl
scas
(bad)
xchg
lock
sbb
mov
leave
or
pop
add
(bad)
push
pop
add
scas
cmc
leave
push
mov
lock
adc
mul
imul
pop
lock
mov
iretw
xor
lock
jb
scas
mov
mov
mov
jb
push
clc
call
inc
repz
cmps
jae
(bad)
aas
js
in
lahf
scas
pop
dec
cmp
push
je
mov
and
frstor
pop
xchg
fidivr
cmp
sub
(bad)
loope
(bad)
inc
mov
out
nop
repnz
aas
inc
cmp
lahf
popa
push
inc
(bad)
fidivr
lods
sub
mov
addr16
inc
mov
repnz
jb
test
push
fnstcw
and
and
fild
aam
jle
cmp
jle
jnp
(bad)
xor
mov
and
mov
aad
outs
arpl
call
ins
jge
push
mov
pop
jbe
sub
sahf
daa
lahf
bound
and
pop
mov
adc
(bad)
iret
mov
mov
popf
inc
mul
inc
inc
sbb
iret
out
adc
and
aam
cmp
push
sub
dec
ret
repnz
sbb
mov
adc
int
inc
fiadd
dec
dec
sub
pushf
inc
iret
sub
loopne
mov
clc
rol
leave
ret
stc
dec
repnz
push
jnp
xor
fstp
and
push
test
shr
ficom
bound
pop
sub
sbb
or
xor
sub
lea
mov
inc
pushf
push
popa
xchg
mov
dec
jae
pop
fucomp
std
aaa
and
scas
adc
xor
repnz
push
rdmsr
add
(bad)
in
jle
mov
sbb
jmp
out
push
in
inc
dec
jge
repz
jp
jne
cmp
inc
cmc
pop
rcr
outs
add
adc
popa
nop
inc
and
stos
test
dec
fwait
push
test
and
retf
pop
sbb
jmp
push
je
jmp
mov
fisub
push
aas
outs
ror
adc
jns
retf
mov
jmp
jae
cmp
push
push
dec
data16
arpl
pop
add
imul
push
repnz
xchg
div
sub
mov
cmp
add
mov
push
movs
xchg
cmp
jl
popa
jbe
dec
stos
test
stc
bound
xchg
push
mov
adc
cmp
dec
and
jae
fwait
push
xchg
adc
jle
ret
dec
mov
adc
xchg
lds
in
rcr
or
sbb
cld
push
and
repnz
xchg
sar
ins
adc
pop
jns
pusha
push
rol
jmp
ds
loop
jo
cmps
(bad)
jecxz
pop
xor
out
lds
pop
add
inc
pop
mov
pop
ins
xchg
not
push
xor
scas
cmp
pop
xchg
sub
(bad)
cmps
mov
sbb
mov
sbb
dec
lods
push
dec
cmp
stc
call
cmp
shr
jae
mov
inc
xchg
mov
push
push
pop
adc
mov
out
fisubr
sbb
dec
dec
cwde
(bad)
xchg
fwait
dec
cli
ins
jo
scas
subps
jno
lods
sti
mov
pop
pop
sub
jne
jno
push
inc
lock
(bad)
xor
test
inc
sub
shr
xor
mov
addr16
cwde
test
mov
std
adc
inc
fwait
into
ds
ret
lea
adc
mov
or
pop
cld
adc
popf
jmp
cmp
aad
and
mov
mov
int
mov
loope
push
arpl
adc
retf
sbb
jo
call
popa
dec
pop
xchg
pop
(bad)
mov
mov
push
inc
jp
daa
adc
xor
cmp
stos
pop
push
(bad)
adc
cwde
xchg
jnp
ret
inc
jmp
pop
movs
fwait
outs
xchg
aad
das
xchg
lods
xchg
sbb
mov
lods
xchg
out
(bad)
fimul
inc
jns
jae
fiadd
push
cmp
int3
sub
sti
in
add
aam
mov
sub
das
xor
push
and
sub
aam
mov
cmps
xor
sbb
(bad)
jp
ins
shl
ret
add
jo
or
xchg
pop
pushf
sub
div
xchg
xchg
xchg
pop
inc
scas
sbb
pop
push
ja
mov
loopne
pop
push
and
ds
adc
inc
xor
icebp
stc
(bad)
jbe
popa
sbb
and
sahf
outs
or
push
adc
add
add
or
mov
test
pop
arpl
dec
add
test
add
sbb
cmp
cdq
call
xchg
pop
jno
in
cdq
sbb
mov
les
test
(bad)
push
mov
adc
ror
pop
hlt
call
arpl
mov
dec
sahf
push
inc
scas
gs
lods
and
aas
inc
inc
jb
ja
jmp
cmp
xchg
outs
repnz
cs
sbb
jno
push
pop
fwait
loopne
sbb
push
dec
pop
(bad)
test
fld
jne
jmp
jnp
cwde
mov
lahf
sti
imul
in
rcr
shl
sub
out
pop
jmp
jbe
(bad)
mov
pop
xor
sbb
mov
cmp
jo
adc
shl
sbb
ja
or
aas
mov
xlat
rol
ja
pop
out
push
stos
int3
pop
jb
mov
adc
(bad)
das
pop
cmp
js
cdq
fisub
jae
cdq
pop
call
jp
push
mov
adc
jae
mov
and
jnp
xchg
inc
imul
pushf
pop
lods
push
push
jl
add
loopne
das
rcl
test
outs
pop
cwde
xchg
mov
push
data16
dec
mov
aad
and
inc
out
ret
pop
push
rol
cmp
mov
mov
outs
mov
ins
xchg
lahf
dec
(bad)
fmulp
data16
cmps
mov
and
sbb
(bad)
mov
inc
mov
adc
jge
mov
mov
and
dec
addr16
cmp
popa
add
dec
or
inc
cli
push
mul
inc
jb
dec
imul
xchg
cwde
push
test
mov
push
shl
dec
cld
fld
jg
sub
fbstp
pop
scas
push
inc
and
mov
mov
aaa
jmp
stos
push
and
test
(bad)
mov
push
push
or
dec
sbb
ins
fwait
cld
adc
loopne
rol
jmp
jb
mov
neg
stos
or
mov
pop
movs
lea
fstp
inc
shl
add
cmp
sub
xchg
cmp
rcl
dec
xor
cmp
movs
scas
out
cmp
neg
pop
mul
test
sbb
ret
jg
push
xor
sub
sbb
movs
xor
scas
js
pop
cmp
sbb
call
cld
mov
jle
mov
shl
jns
ss
and
hlt
out
jae
nop
lods
fsub
mov
movs
mov
inc
(bad)
clc
pop
outs
addr16
pop
lock
dec
scas
fcom
das
and
adc
in
js
scas
bound
and
cmp
sub
push
ds
add
and
and
push
fsub
xchg
xchg
pop
adc
das
sub
mov
int
mov
inc
imul
cld
pop
push
imul
push
xor
sbb
push
mov
push
jle
dec
sub
sbb
jl
das
mov
jno
mov
ins
gs
shl
cmps
ja
inc
icebp
stc
popf
and
movs
jne
jmp
dec
mov
mov
aaa
iret
push
xchg
cdq
xlat
rcl
cmp
clc
daa
movs
jp
in
xchg
rcl
cmp
call
dec
sbb
xor
inc
mov
cmp
ret
sbb
jp
xor
mov
es
and
fild
jno
add
dec
sub
shr
test
div
loope
add
fs
inc
xor
pop
repnz
push
aad
jne
xor
std
adc
sub
mov
and
in
loope
push
lea
xchg
scas
inc
sub
inc
jae
jno
mov
(bad)
cmp
mov
jnp
and
dec
test
out
scas
mov
inc
cmps
mov
xor
outs
fcomp
xor
sub
gs
(bad)
xchg
popf
push
int
pusha
pop
inc
mov
lock
(bad)
aad
jmp
int3
sbb
dec
leave
pop
jbe
retf
ins
inc
in
pop
mov
cmp
xchg
or
dec
jae
popf
loope
dec
fnstsw
xchg
scas
pop
mov
or
add
jecxz
pop
in
(bad)
inc
icebp
je
test
pushf
inc
sbb
pushf
mov
pusha
(bad)
and
xchg
out
push
pusha
push
sbb
jg
push
pop
dec
and
xor
xchg
cmc
xchg
jp
sub
pop
movs
add
ret
adc
out
sbb
adc
sar
and
(bad)
call
shl
or
cmp
mov
jbe
bnd
sub
mov
xor
stos
adc
(bad)
jg
outs
outs
jo
rcl
(bad)
loop
pop
dec
adc
jl
repz
cli
pop
out
cmc
(bad)
pop
outs
adc
les
loopne
mov
aam
or
push
jmp
inc
push
pop
xor
cs
xor
inc
xchg
imul
add
(bad)
pop
push
jl
cmp
test
dec
adc
sbb
ret
ds
sub
push
aas
jno
and
mov
aas
jno
and
daa
pusha
loop
push
mov
out
rcl
push
scas
stos
or
nop
cs
rcl
(bad)
cld
std
adc
and
out
loope
mov
loope
mov
fmul
push
mov
add
push
add
push
push
pushf
sti
inc
dec
ror
movs
aam
jp
mov
push
cmp
loop
outs
or
test
inc
or
shl
rcl
data16
dec
mov
loop
ins
imul
mov
sbb
repnz
in
sbb
(bad)
in
mov
aam
mov
push
cli
int3
scas
lahf
add
pop
mov
mov
in
popf
push
mov
adc
or
and
lods
bound
aas
mov
push
es
pop
in
scas
mov
cmp
jge
(bad)
aaa
pop
mov
aas
fbstp
hlt
in
jbe
and
push
jae
xor
leave
(bad)
scas
inc
inc
out
jne
adc
mov
jecxz
mov
addr16
mov
cwde
jge
dec
aas
sub
loop
xchg
push
retf
sub
add
cmc
cs
mov
retf
scas
cmp
mov
(bad)
cmp
(bad)
lock
jecxz
das
jno
lock
xchg
mov
rcl
test
mov
or
jns
mov
fsub
ret
ret
lds
imul
call
or
push
adc
push
push
sub
xchg
cmp
bnd
xlat
scas
call
leave
test
add
retf
sbb
call
add
sbb
(bad)
add
imul
clc
inc
xchg
(bad)
cdq
sti
fs
sub
dec
mov
jg
int3
data16
stos
pop
xchg
ja
in
jns
test
int3
jp
xchg
enter
mov
xchg
push
xchg
icebp
jp
loop
aad
nop
cmps
je
mov
or
cmp
rcr
inc
dec
xlat
cmp
out
xor
mov
cli
das
imul
loop
adc
mov
jp
je
outs
mov
xchg
popa
outs
jp
dec
sbb
jl
inc
mov
in
inc
and
and
dec
aaa
(bad)
retf
in
pop
ins
add
jne
mov
clc
ins
xor
(bad)
mov
jbe
inc
aam
retf
dec
xchg
jae
call
jb
jmp
std
push
aaa
jno
pushf
fs
dec
push
cmp
nop
jge
bound
pop
cmp
mov
jae
cdq
call
pop
dec
cmp
lahf
inc
jmp
adc
push
push
(bad)
retf
pop
push
jecxz
loopne
arpl
(bad)
inc
pop
sub
add
mov
push
pop
in
jge
jle
cmc
not
leave
add
jp
loop
rol
scas
sti
add
ins
retf
push
dec
jmp
inc
pop
lods
outs
test
sub
mov
push
mov
cmps
push
jge
test
push
ret
mov
xor
data16
cmp
mov
mov
xchg
xchg
mov
cmp
jmp
adc
dec
aaa
in
ss
jge
fdivr
test
sbb
shl
mov
adc
xchg
jge
lods
push
(bad)
loopne
mov
clc
cmp
push
icebp
mov
push
push
bound
rcl
and
test
fsubr
inc
out
push
fs
popa
xchg
out
sub
or
sub
(bad)
in
mov
add
inc
pop
shl
xlat
inc
push
cmp
mov
cmp
push
mov
jg
daa
mov
mov
push
aad
jnp
test
test
sub
add
bnd
test
outs
push
jo
mov
mov
push
xor
jl
push
shl
mov
push
add
jl
pop
dec
add
enter
icebp
(bad)
dec
sbb
xor
out
stos
sub
stc
xor
inc
cmp
push
loopne
and
sub
in
outs
sbb
inc
inc
dec
loop
mov
dec
retf
ins
mov
cli
lods
inc
inc
scas
ss
pop
lahf
leave
mov
jl
mov
push
jns
loope
dec
std
xlat
stc
push
out
pop
dec
cmp
push
jl
outs
sub
cmc
out
lods
xchg
test
push
pop
imul
(bad)
gs
(bad)
or
mov
jle
inc
sub
add
jecxz
lock
and
inc
push
cdq
adc
sub
aas
sub
xchg
cmp
and
push
iret
aas
mov
mov
cmps
shl
pusha
loope
or
jbe
fsub
in
mov
pop
sbb
lods
push
ins
mov
mov
(bad)
lods
js
aam
and
jge
in
jmp
pop
lock
test
push
or
inc
pop
cmp
es
(bad)
std
call
lods
cwde
outs
cmp
dec
jmp
mov
sbb
das
cwde
push
aas
sub
pop
xor
mov
sub
dec
movd
fcom
ss
aas
movs
adc
xor
ins
test
ret
push
add
jmp
test
mov
mov
jge
jbe
(bad)
xchg
dec
iret
popf
jo
pop
xchg
leave
cmps
jnp
(bad)
scas
mov
jne
mov
xchg
cs
jbe
mov
push
dec
in
sbb
daa
enter
dec
fsubrp
add
mov
sbb
fs
inc
push
sbb
jbe
or
sub
dec
cwde
push
cmp
dec
popa
movs
pop
addps
mov
movs
sbb
pusha
xor
or
(bad)
fidiv
mov
mov
addr16
inc
dec
lods
inc
icebp
jle
repnz
enter
xchg
cmp
inc
sub
sbb
mov
xor
psubusb
stc
or
aas
fs
ins
cmp
mov
and
dec
sub
add
jae
inc
icebp
jo
add
fsub
stos
aas
dec
jae
aas
push
mov
add
mov
dec
outs
xchg
jno
int3
stc
mov
jle
popf
aaa
retf
ret
pusha
mov
dec
in
dec
push
rcl
xor
shl
add
jno
out
dec
(bad)
cld
repz
dec
out
aaa
leave
rol
sub
mov
and
pop
and
inc
dec
popa
int3
enter
bound
cmc
shr
xor
jl
push
outs
rcl
push
pop
pop
push
sti
cmp
jge
sub
(bad)
mov
sbb
rcl
lods
dec
sbb
jmp
mov
out
hlt
cmp
jbe
sti
pop
loopne
cld
mov
mov
cld
(bad)
jg
mov
mov
cmp
mov
or
addr16
cdq
in
loope
pop
adc
add
(bad)
std
jmp
sti
add
cmp
lods
in
mov
cmp
in
cs
jp
out
mov
inc
pop
test
cmp
fimul
adc
sub
repz
xchg
call
dec
cmp
xor
mov
pop
gs
je
cld
push
jge
loop
add
outs
jno
lock
add
xor
add
mov
jmp
test
icebp
pusha
dec
test
sbb
adc
inc
icebp
add
cmp
xor
(bad)
pop
(bad)
js
arpl
mov
xchg
mov
sbb
pusha
push
imul
ins
jno
pop
mov
sub
add
inc
out
jne
add
out
jle
or
jbe
add
stos
pop
push
int3
or
sub
push
repz
imul
sub
imul
dec
adc
adc
imul
retf
int3
outs
dec
test
aad
and
cmp
pop
lods
jno
pop
int
inc
ss
leave
sub
add
xor
fsubr
cs
adc
inc
add
xchg
add
test
xor
push
ins
xor
pop
sbb
pop
retf
mov
mov
(bad)
lea
loop
sub
fist
(bad)
mov
add
cmps
(bad)
adc
xchg
sti
fs
cmps
aam
jmp
ins
pop
and
push
pop
push
mov
add
fs
ins
enter
inc
cmc
test
hlt
lahf
dec
mov
sub
inc
push
fidivr
cmc
sbb
mov
jmp
jbe
sbb
mov
xchg
stc
pop
jb
mov
fdiv
sub
mov
mov
mov
loope
mov
int
pop
mov
lock
inc
adc
mov
inc
shl
sub
push
sbb
xor
dec
or
stos
jmp
fdivr
inc
(bad)
fdivr
lahf
ss
pusha
jne
xor
push
sbb
xchg
fisubr
das
xchg
idiv
or
into
pop
cmp
push
cmp
push
movs
stc
add
jmp
fstp
ins
jp
les
ret
xor
sar
jne
(bad)
and
lock
mov
push
pop
icebp
mov
lock
mov
lea
ret
pop
shl
ret
cmp
pop
jbe
aad
das
lock
sbb
add
sbb
pop
test
push
pop
arpl
rcr
pusha
cmp
(bad)
sahf
or
or
mov
cmp
retf
ret
cmp
dec
mov
jge
clc
fiadd
mov
pop
jnp
sub
pop
out
mov
jmp
push
dec
pusha
jp
inc
pop
ss
and
pop
dec
mov
retf
pop
inc
call
pop
mov
push
test
inc
add
rep
or
sub
aaa
(bad)
std
or
sub
inc
stos
jnp
sub
mov
mov
pop
mov
lea
dec
daa
imul
dec
or
jecxz
mov
mov
out
push
call
je
xor
addr16
adc
(bad)
aam
in
les
or
inc
push
ret
jns
jle
aad
or
xchg
xor
sbb
jle
aas
arpl
cmp
imul
jno
adc
add
sbb
or
or
fisub
inc
aam
or
xchg
fs
int
pop
mov
inc
cmps
adc
pop
or
mov
stos
add
(bad)
mov
inc
mov
pop
push
movs
xor
mov
cs
sub
mov
lods
and
repnz
outs
repnz
out
imul
popa
mov
mov
retf
fidivr
sar
cmp
imul
arpl
bound
xor
push
pushf
jmp
add
push
aas
xor
inc
into
shl
mov
sar
fs
sub
cmps
jb
xchg
push
mov
sbb
data16
mov
push
sbb
sti
jno
sub
fistp
aad
mov
or
fild
daa
pop
push
popf
add
dec
fidiv
(bad)
data16
push
daa
xor
xor
add
pop
es
out
outs
jmp
mov
and
pop
push
or
shl
daa
retf
es
popa
adc
push
sub
ret
cld
jecxz
sbb
pop
jo
and
push
mov
sub
add
push
test
mov
pop
ss
(bad)
sar
push
(bad)
xor
inc
dec
pop
cdq
jne
pop
sar
je
(bad)
mov
or
or
fstp
cmp
adc
in
cld
pop
fstp
mov
hlt
scas
fist
lock
sub
hlt
les
jo
mov
mov
pop
push
out
mov
fs
aaa
sub
out
adc
stc
add
iret
push
mov
popf
sar
js
mov
push
aaa
add
inc
pop
cwde
jmp
stos
inc
ror
in
jbe
out
push
(bad)
cmp
fcomi
mov
fstp
fdiv
sbb
adc
arpl
xor
sub
mov
pop
push
das
sub
popf
fstp
jmp
mov
pop
and
dec
push
jmp
test
jp
rcr
xchg
test
pop
out
es
call
xor
sbb
aam
aas
inc
(bad)
push
push
jno
sub
arpl
inc
(bad)
cld
cmp
ss
xor
mov
lahf
addr16
fsub
or
mov
xor
mov
xchg
mov
or
bound
add
sahf
push
mov
jo
or
cld
dec
cmps
jb
rcl
add
fs
pop
sti
lds
bound
pushf
imul
push
jnp
or
cdq
inc
jle
push
adc
push
pop
outs
dec
push
jno
jb
xchg
jb
iret
aad
test
mov
stos
jmp
dec
push
js
sub
inc
push
inc
dec
inc
jecxz
pop
or
ins
and
mov
add
pop
adc
mov
push
xor
jae
jge
xchg
les
dec
retf
scas
jbe
sti
das
in
xchg
aas
cmp
mov
jecxz
jnp
fldenv
ss
dec
pop
into
sub
add
mov
pushf
fs
mov
push
mov
std
jmp
outs
stos
nop
cli
add
ror
adc
das
xlat
push
dec
fstp
into
and
aas
inc
aaa
and
cmps
mov
fisub
adc
pop
popa
push
mov
(bad)
enter
test
pop
nop
push
jne
sbb
stc
push
fsubr
mov
add
bound
push
int
jmp
inc
dec
jb
jge
push
(bad)
push
test
pop
and
popa
jnp
outs
pop
gs
shr
cmp
mov
push
mov
dec
mov
xchg
push
sbb
dec
push
xor
fcomip
xor
xor
sbb
clc
pop
mul
push
mov
inc
pop
cmc
cwde
jo
jmp
jmp
fcom
arpl
inc
sbb
adc
sub
cmp
xchg
pop
daa
lds
ss
(bad)
sub
sbb
fs
cwde
add
pusha
(bad)
das
inc
jae
jno
xor
push
and
outs
dec
mov
cmp
dec
mov
push
lods
lods
fmulp
fst
inc
mov
add
and
mov
clc
xchg
sbb
or
loope
lods
ret
out
pop
pushf
jmp
inc
dec
sbb
add
cwde
push
mov
mov
pusha
test
cli
jo
xlat
imul
cwde
pusha
pop
mov
test
mul
or
pop
inc
out
gs
jno
add
or
xor
xor
inc
shr
or
mov
add
push
popa
scas
jb
into
sbb
test
mov
lods
and
push
pop
mov
dec
sbb
inc
push
pusha
into
inc
out
(bad)
mov
push
fs
imul
cld
imul
ret
xor
call
sbb
sbb
cmp
adc
adc
mov
leave
mov
xchg
int3
push
mov
dec
inc
cmp
lock
rol
inc
test
jbe
mov
push
stos
mov
jb
stos
leave
call
test
push
mov
retf
int3
mov
push
adc
jle
and
aad
and
stc
cmp
and
inc
cmp
repz
sub
mov
test
hlt
sub
jmp
hlt
lahf
push
inc
add
pop
ficom
aad
jg
outs
out
mov
shl
pop
icebp
imul
jmp
add
rcl
(bad)
ficomp
aas
lods
in
sub
je
jmp
dec
sbb
call
jb
inc
retf
in
pop
pushf
imul
jg
js
outs
stos
cld
loop
dec
pop
int3
jmp
inc
lods
adc
xchg
and
mov
pop
push
(bad)
jecxz
(bad)
cwde
movs
cmp
xor
sbb
retf
xchg
sub
cld
push
adc
jno
mov
mov
push
inc
push
xor
ins
fbstp
data16
mov
jmp
nop
xchg
cmp
pop
arpl
jle
mov
push
ds
fcmovnb
lods
mov
dec
enter
or
sbb
push
stos
(bad)
jmp
mov
adc
and
jp
mov
adc
adc
into
sbb
add
push
mov
lahf
test
mov
mov
stc
jnp
xor
in
cmp
rcl
jnp
fisttp
lods
push
xchg
clc
push
fs
push
and
ins
adc
adc
shl
mov
add
pusha
push
popa
jno
int
sbb
es
jae
jmp
(bad)
mov
inc
test
xor
sbb
xchg
aaa
jbe
sub
xlat
or
in
pop
mul
pop
pop
mov
out
js
pusha
dec
cmp
adc
sbb
xchg
lahf
repnz
out
or
add
ffreep
sbb
ds
jmp
movs
jmp
xchg
stc
cmp
lock
jb
test
pop
stos
(bad)
outs
add
sub
leave
cwde
pop
mov
sbb
mov
daa
repz
retf
aad
pop
into
mov
loopne
ror
cmp
frstor
rcl
xor
xlat
mov
dec
ins
xchg
pop
loop
gs
and
sti
addr16
add
ds
cmp
addr16
repz
lea
shr
cs
cmp
mov
push
inc
(bad)
or
add
out
xchg
mov
xor
mov
sbb
push
cmp
shr
es
aaa
dec
xlat
add
pushw
jne
inc
out
mov
inc
(bad)
xor
pusha
xor
mov
and
mov
pushw
push
dec
retf
and
xor
jle
push
pop
mov
loope
in
mov
mov
push
cmp
add
test
push
pop
fs
push
dec
int
inc
imul
lahf
adc
js
js
push
inc
jp
add
out
xchg
test
cmp
bound
xchg
idiv
and
daa
cmp
or
addr16
add
mov
popa
ja
mov
loope
dec
ins
int
cmp
pause
addr16
sub
hlt
cmp
xor
pusha
daa
jge
in
mov
pop
aam
(bad)
mov
inc
cld
lods
sub
jae
and
mov
cmp
mov
dec
pop
mov
mov
sbb
popa
out
fidivr
sbb
pusha
add
int
xor
popa
test
mov
push
and
mov
out
into
push
movs
movs
push
pop
sub
pusha
call
fdiv
mov
movs
imul
dec
adc
jb
adc
mov
call
mov
int3
inc
or
lahf
in
std
daa
mov
cmp
jmp
fdiv
add
and
sets
out
jae
push
adc
je
adc
dec
aad
sbb
or
lods
mov
cs
call
push
mov
ja
dec
and
push
jmp
pop
sub
mov
sahf
sub
push
call
cmp
or
jge
(bad)
jl
cmc
cdq
xchg
neg
push
pop
int3
stos
imul
sbb
or
ja
push
out
mov
mov
ss
xchg
mov
not
pop
sbb
jns
mov
mov
lahf
mov
seta
es
mov
add
sub
call
loopne
pop
les
pop
inc
or
add
imul
imul
pop
lock
test
mov
mov
retf
or
lods
data16
pop
ret
inc
cwde
push
sub
cmps
xchg
lahf
(bad)
push
jb
jno
lahf
jae
les
xor
mov
fistp
ja
jb
addr16
out
mov
push
ret
js
mov
cmc
sbb
sub
mov
adc
cmp
fcom
jge
pop
nop
mov
sub
shl
ret
or
cld
in
addr16
ret
mov
test
pop
jge
dec
sar
xchg
jl
iret
int3
pop
jo
(bad)
xchg
mov
inc
pop
jns
stc
lods
shl
jns
mov
mov
add
inc
enter
xor
and
mov
pop
pop
repz
xor
icebp
iret
in
pop
movs
pop
cmp
and
lods
xor
out
and
mov
out
sub
out
mov
jno
jmp
push
pcmpgtb
arpl
inc
or
aaa
jmp
mov
jecxz
push
sti
mov
mov
jle
add
jecxz
and
inc
add
inc
push
push
out
cmp
inc
mov
imul
repz
cdq
jge
adc
cmp
pop
iret
fwait
mov
addr16
mov
cs
ins
scas
mov
in
push
adc
dec
xor
lea
jmp
jbe
fwait
xchg
jnp
call
cmp
pop
icebp
daa
loope
js
xchg
shr
or
sub
or
ja
adc
add
or
bound
in
shl
push
cli
sar
push
and
adc
neg
jb
push
dec
jns
and
(bad)
scas
add
inc
mov
out
jb
sub
icebp
sub
mov
outs
xchg
ins
das
sahf
ror
rsm
fild
bnd
addr16
aas
push
pop
ret
out
sub
pop
mov
mov
sahf
mov
xchg
ret
cmp
aam
daa
test
aam
pop
sub
ins
xlat
sbb
and
cmp
movs
mov
movs
shr
or
neg
xor
cs
mov
mov
add
sbb
ret
and
ret
ret
imul
aad
aas
nop
fldenv
out
nop
xor
dec
je
mov
test
mov
sbb
fsub
and
and
jl
ins
xchg
mov
mov
fnstenv
push
and
hlt
mov
clc
cwde
and
mov
and
and
sbb
jecxz
leave
inc
and
push
dec
mov
bound
ret
mov
pop
dec
xchg
adc
xchg
cmp
iret
sbb
pop
sti
add
xchg
or
out
pop
mov
and
mov
movs
movs
and
pop
jmp
mov
sti
retf
sub
and
sbb
out
inc
dec
mov
jne
push
cmps
and
mov
aas
mov
(bad)
dec
stos
popf
cmp
and
inc
inc
sub
adc
sub
sar
fs
jne
push
leave
mov
sbb
and
lea
fdivr
inc
in
cmp
add
xchg
call
clc
pop
outs
and
loop
popa
ja
call
mov
std
aad
mov
jmp
mov
xor
or
sub
cmc
out
stc
adc
sub
arpl
rcr
add
mov
pop
sbb
pop
ret
add
adc
push
pop
mov
or
les
push
inc
loop
retf
jne
jb
ins
jae
sbb
push
or
and
lock
mov
mov
push
std
jge
cmp
mov
jecxz
adc
data16
inc
adc
and
repz
lds
sbb
pushf
aad
popa
push
adc
ret
mov
dec
fcomp
inc
push
jbe
mov
mov
(bad)
mov
inc
fucomp
and
(bad)
or
dec
inc
mov
popf
sub
jns
push
clc
adc
or
mov
sahf
loop
dec
add
jo
inc
and
mov
rcl
mov
jbe
jmp
movs
pop
(bad)
adc
mov
enter
push
xchg
movs
pushf
pop
rcr
in
push
cmp
int
sub
mov
fs
movs
cld
ret
dec
xchg
pop
pop
push
sbb
gs
fld
ret
cmp
jl
leave
clc
or
and
xchg
jbe
jae
jmp
xchg
arpl
test
dec
dec
(bad)
or
inc
out
in
mov
mov
outs
or
lea
sub
adc
cmps
shr
cdq
jmp
dec
mov
or
shl
fst
xor
xor
jno
adc
jb
mov
jo
adc
adc
fucomip
test
ror
loopne
(bad)
mov
cmps
jne
sub
adc
sub
add
push
jne
add
loopne
pop
jge
xchg
push
pop
fnstcw
stos
outs
inc
jle
mov
test
mov
arpl
adc
(bad)
repz
lea
push
dec
xchg
mov
rcr
arpl
push
ins
cmc
push
mov
ja
and
push
(bad)
retf
mov
std
jns
cmp
xchg
jmp
sar
dec
jmp
inc
pusha
or
cmps
sub
pop
mov
scas
sub
aas
call
inc
dec
into
add
dec
xor
mov
ret
loop
dec
sahf
adc
aad
push
xchg
retf
out
arpl
call
out
lods
mov
je
jb
xor
dec
ins
xchg
jnp
push
clc
and
add
bound
in
pop
into
mov
pop
and
leave
xchg
push
popa
pop
jl
sbb
mov
xchg
adc
xchg
daa
cmc
scas
retf
fmul
and
repnz
in
sbb
mov
cwde
shl
test
pop
dec
push
cmps
jmp
jge
sahf
dec
mov
or
es
(bad)
hlt
icebp
shr
dec
ss
jne
sub
cmps
jge
push
mov
repnz
fcomp
xor
xchg
ins
jl
pop
retf
lods
data16
les
dec
frstor
call
or
in
sub
ror
mov
inc
xor
pop
mov
jnp
inc
or
sar
and
xlat
jb
jmp
std
xor
(bad)
add
jle
mov
test
mov
cmp
mov
pop
cmp
cld
pushw
inc
out
inc
retf
dec
ds
inc
and
mov
mov
jmp
or
dec
lock
push
inc
leave
push
les
pop
sub
mov
mov
push
xor
fst
sbb
inc
adc
xor
pop
sar
mov
leave
lods
dec
mov
pop
stos
dec
dec
mov
jo
lods
cs
mov
mov
push
cmp
jp
sar
or
push
inc
popa
push
dec
(bad)
xor
icebp
leave
sub
dec
sub
je
jne
dec
cmp
enter
add
cdq
(bad)
outs
cmp
xor
or
fsub
je
mov
and
inc
sbb
mov
or
adc
ins
fistp
fidivr
imul
adc
in
inc
cmps
add
imul
cmp
aad
arpl
shr
mov
inc
loop
ja
aaa
xchg
loopne
loopne
(bad)
mov
cmps
pop
test
inc
push
jne
leave
jmp
push
test
aad
dec
(bad)
add
cmp
or
retf
xlat
jns
jo
push
push
add
test
push
xchg
adc
pop
mov
rcr
test
imul
mov
add
sub
mov
movs
sub
push
dec
mov
lea
pop
sub
or
lds
and
sbb
inc
int
xor
popa
jge
std
jg
loopne
rcl
fdiv
leave
mov
push
fsubr
pop
cmp
bound
inc
push
adc
inc
push
jno
inc
pop
jbe
sbb
in
ss
dec
mov
add
add
jmp
gs
sbb
ret
mov
cmp
and
aas
jge
cs
adc
inc
mov
cmp
mov
not
dec
retf
jle
rcl
jmp
jnp
jo
lock
push
es
mov
xchg
jmp
add
pop
jbe
fstp
jbe
dec
push
fcmove
adc
clc
test
mov
cld
clc
dec
push
in
imul
mov
fdivr
jg
sti
or
arpl
ja
fcomp
mov
data16
inc
ret
sub
sbb
sahf
pop
cmp
movs
fwait
loopne
mov
add
test
test
sbb
jg
fbstp
mov
mov
push
movs
mov
push
mov
sub
jge
dec
jbe
sub
mov
fisub
jmp
test
je
adc
scas
or
(bad)
xchg
jle
mov
and
(bad)
cmc
pop
mov
(bad)
idiv
in
xlat
je
push
mov
jno
push
sbb
jmp
sti
js
ins
(bad)
jge
(bad)
(bad)
dec
add
repnz
outs
adc
or
ins
sub
stc
jae
lea
jbe
inc
lock
sub
aad
inc
dec
jbe
ins
out
inc
mov
ins
mov
cli
retf
daa
movs
aaa
inc
fst
pop
or
imul
cmp
push
and
or
std
jne
fs
stos
mov
lods
stc
inc
retf
loopne
dec
out
cmps
iret
les
out
rcr
mov
sub
outs
sbb
sub
arpl
push
push
sbb
or
test
cwde
xchg
lds
mov
call
lahf
(bad)
dec
cmps
jg
xor
imul
retf
dec
inc
(bad)
dec
or
xchg
jo
cld
xlat
mov
jno
mov
fild
rcr
xor
sub
mov
mov
hlt
popa
cmp
pop
xchg
fnop
inc
sub
addr16
or
sub
call
scas
jg
fs
jb
aad
in
rol
adc
sbb
(bad)
fmul
xchg
ins
pop
jg
sahf
in
out
repnz
out
(bad)
test
in
std
aaa
pop
into
push
pusha
cli
xchg
imul
xchg
das
mov
cmp
popf
jp
and
pop
add
push
cmp
push
pop
jbe
retf
call
mov
mov
jmp
ds
ret
and
cli
cmp
and
adc
jmp
xor
mov
mov
pop
loopne
pop
imul
mov
xchg
mov
cmc
scas
cwde
call
pop
imul
xchg
inc
lods
cwde
xchg
sahf
je
jl
out
int3
add
mov
outs
push
test
sti
je
imul
dec
push
xchg
stos
clc
clc
jmp
scas
ror
and
adc
xchg
or
push
(bad)
cwde
sbb
mov
pop
ret
loop
mov
aas
push
test
movs
lds
mov
lods
mov
ss
cs
push
fist
xor
cmp
lds
lea
bnd
test
jne
mov
jne
inc
jb
rcr
sub
pop
mov
pop
sbb
xor
mov
jle
mov
jmp
sbb
test
mov
jne
sub
pushf
mov
arpl
seta
xor
inc
fcom
shl
out
addr16
mov
cmp
add
out
and
aaa
and
jl
xor
jae
cmp
push
retf
out
dec
adc
mov
or
movs
scas
js
xchg
call
dec
mov
add
pop
(bad)
mov
mov
(bad)
jns
xor
mov
out
dec
jnp
repnz
ja
pop
sbb
std
nop
stc
push
xor
push
jno
lock
inc
kmovb
fwait
adc
and
test
pop
sub
jbe
sbb
sbb
outs
cmp
xor
dec
xchg
dec
mov
cmp
pop
les
stos
lahf
fadd
or
pop
popaw
ds
sub
push
int
add
push
inc
std
iret
out
stc
pop
ret
stos
push
popf
cmp
pop
sbb
mov
push
push
jmp
imul
pop
(bad)
or
je
dec
push
not
inc
in
add
ins
repz
adc
gs
inc
xchg
scas
mov
test
pop
stc
dec
and
stos
stos
scas
dec
cld
mov
int
or
jecxz
mov
inc
js
mov
fisubr
rcr
fwait
inc
imul
mov
lea
(bad)
int3
into
sti
daa
dec
popa
or
mov
ja
iret
jge
mov
pop
out
push
jmp
gs
xchg
popf
out
sahf
dec
pop
mov
push
add
mov
mov
shl
adc
loopne
fptan
mov
ins
jmp
out
js
pop
not
and
mov
gs
stos
aas
loop
retf
xor
add
out
jo
xchg
xor
dec
cmp
mov
jb
or
jnp
cs
(bad)
and
sahf
dec
push
jo
jne
inc
iret
(bad)
jb
mov
xor
jp
mov
icebp
movs
mov
xchg
mov
push
outs
mov
mov
fwait
jno
shr
or
sbb
setnp
nop
test
dec
test
sub
mov
push
aas
jne
retf
repnz
jb
std
push
outs
add
jno
jnp
ds
scas
adc
cmp
push
xchg
stos
cmp
sub
retf
jmp
xor
dec
inc
sub
fild
xlat
jae
shl
fldenv
cmovno
pop
and
mov
cmp
xor
mov
mov
jg
sbb
cmp
pop
in
pushf
cmp
and
mov
mov
push
sub
fistp
popa
add
and
out
ss
inc
pop
lock
aam
push
bound
ret
pop
inc
into
cmc
cs
test
out
jl
mov
sub
and
add
jo
ds
or
cmp
xchg
movs
add
das
adc
lds
xchg
push
mov
mov
pop
scas
inc
dec
and
jno
or
call
xor
into
pop
xor
cld
or
xchg
retf
retf
fisttp
push
inc
test
jae
aam
jecxz
push
jb
sti
jne
xlat
sahf
adc
mov
add
inc
push
mov
scas
icebp
dec
pop
lfs
xlat
mov
ins
mov
shl
or
popf
fcomp
push
nop
dec
outs
iret
jecxz
add
xor
ja
shl
push
inc
test
rol
cld
jge
aaa
(bad)
(bad)
call
daa
mov
sub
sbb
pusha
cld
popa
mov
jo
lahf
jns
inc
dec
stos
dec
jl
inc
cmps
ins
ins
pop
in
adc
nop
jo
jg
aam
pop
test
push
inc
or
pop
pop
sub
out
(bad)
sar
mov
loop
std
out
xchg
mov
xchg
mov
into
mov
xor
imul
push
cmp
or
std
xchg
xor
xchg
push
mov
les
das
das
iret
pop
mov
popf
pop
jge
pop
xor
inc
test
jg
sahf
push
and
xchg
loopne
xchg
jns
mov
test
ds
dec
adc
pop
mov
clc
ret
pop
paddsb
cdq
inc
popa
xor
sub
mov
out
daa
cmp
push
jl
jle
adc
mov
pop
mov
ret
xchg
ror
mov
push
jmp
ds
sub
in
pop
xor
stc
dec
sub
cmp
push
ret
ret
adc
(bad)
fdivr
mov
xor
(bad)
movs
xor
cmp
mov
outs
jbe
cmp
in
loope
inc
data16
cmp
cs
daa
cmps
mov
pushf
cwde
mov
das
cdq
hlt
push
dec
jb
mov
nop
retf
pop
rol
int
and
xchg
jo
aas
sbb
nop
adc
ja
or
bound
stos
dec
mov
dec
xor
cmp
sub
and
pop
sub
ins
repz
mov
mov
add
movs
lods
add
rcr
test
dec
in
add
cmp
out
push
arpl
addr16
add
popf
or
(bad)
aas
pop
lahf
push
aad
sub
sub
nop
outs
lock
adc
movs
jle
jmp
mov
sub
(bad)
(bad)
xor
and
adc
fld
cmp
fistp
jle
sub
jmp
pop
inc
and
clc
sbb
call
pop
sub
aaa
out
leavew
inc
loop
(bad)
pop
(bad)
clc
mov
rcr
mov
jmp
and
aaa
out
or
sbb
push
jge
mov
cmp
cld
js
sub
lods
jecxz
gs
mov
(bad)
push
and
bound
adc
pushf
in
mov
fistp
mov
aam
mov
das
pop
ds
in
rcl
gs
shr
xchg
adc
cmp
das
cs
jnp
test
adc
lods
sbb
ret
leave
fisub
imul
retf
(bad)
push
and
stos
inc
sub
call
add
mov
daa
ins
idiv
out
push
and
cwde
out
inc
or
cmp
xchg
aad
xchg
lahf
sbb
ror
jg
and
xor
jp
add
push
jmp
(bad)
retf
aas
or
in
je
pop
(bad)
repnz
sbb
push
xor
shl
jo
or
jmp
jae
sahf
push
sub
daa
or
ror
pop
xor
cs
dec
ins
mov
push
cwde
add
inc
mov
adc
movs
jo
jmp
sbb
ds
push
adc
and
pop
bound
js
retf
mov
dec
sub
ss
dec
in
push
mov
xor
or
dec
idiv
fnstsw
rcr
test
(bad)
in
mov
mov
outs
btc
push
or
inc
sub
movs
jb
pop
sbb
jne
jmp
ins
adc
dec
test
dec
push
mov
int
ficom
jge
push
push
push
pop
jl
adc
jmp
and
cmp
imul
inc
rol
jle
js
pop
out
stos
xchg
inc
mov
icebp
ins
xchg
push
inc
lods
pusha
test
sbb
imul
dec
rcr
push
add
sub
lds
test
jne
fadd
dec
out
retf
adc
and
dec
xchg
into
adc
and
inc
int
add
cdq
pop
push
adc
sbb
ins
neg
scas
and
dec
push
clc
pop
xor
sbb
xor
push
cmp
gs
inc
adc
int
addr16
jl
dec
icebp
call
xor
mov
mov
mov
push
ins
adc
dec
pop
int
je
fwait
pop
jle
adc
cmp
in
or
or
and
imul
adc
iret
or
call
or
hlt
mov
std
shr
out
jge
xor
push
sbb
enter
add
dec
xchg
cmp
stos
push
cmc
push
rcl
ja
inc
add
cwde
leave
adc
jle
(bad)
dec
add
xchg
or
jmp
adc
xchg
(bad)
fcomp
xor
cmps
outs
mov
mov
mov
push
xchg
mov
mov
adc
ss
and
sub
inc
xor
pop
call
and
push
pop
int
add
pusha
(bad)
stos
inc
lahf
sub
mov
and
jns
cmp
and
cdq
loopne
lahf
popa
lock
icebp
xor
sbb
call
ret
test
adc
cmp
pop
cmp
pop
add
rcr
adc
jb
and
and
push
outs
stos
sub
stos
cli
imul
xor
dec
jae
clc
(bad)
jle
add
xchg
and
leave
inc
mov
mov
mov
pop
jbe
imul
pop
add
mov
push
imul
mov
out
and
jae
shl
int
inc
test
scas
neg
call
dec
enter
jno
fild
ja
push
push
pop
not
sahf
div
mov
xor
das
sub
sbb
push
ret
dec
cmp
and
pusha
js
ss
mov
mov
stos
jne
pop
add
sti
aaa
pop
jbe
cs
gs
sbb
jl
mov
add
aas
ss
pop
sub
xor
scas
lock
or
push
adc
mov
push
jno
js
mov
or
aas
mov
gs
push
ret
adc
adc
aad
adc
jo
scas
sahf
stos
ret
por
fmul
dec
das
clc
jmp
(bad)
pop
ret
retf
es
aas
std
fucomi
and
fwait
test
lods
inc
and
xor
pop
pop
jns
fsub
loopne
mov
sbb
in
dec
jnp
cmp
pop
and
fmul
enter
push
fsubrp
movs
dec
cmp
xchg
jmp
push
jnp
sbb
fisubr
jg
or
loop
adc
push
jnp
mov
add
cld
inc
fwait
mov
jo
add
mov
sub
movs
add
cmp
aas
sub
add
outs
dec
ret
xor
fxch
fist
adc
cld
jbe
sub
inc
ret
inc
shl
mov
mov
out
aas
movs
add
mov
or
mov
pop
fwait
test
sbb
test
sbb
sub
mov
jb
dec
and
cwde
int3
jb
je
jp
popa
and
out
popf
and
lods
jge
rcr
dec
jmp
fist
cli
add
pop
sub
movs
mov
inc
adc
push
sbb
popf
retf
retf
jnp
sub
fstp
jge
mov
cmps
cmc
ins
xchg
push
cmc
push
ds
(bad)
mov
jle
repz
xchg
aaa
mov
mov
cdq
fstp
and
adc
aad
push
sub
mov
imul
cmp
dec
xchg
ss
dec
cmp
(bad)
call
iret
jmp
and
ins
ins
repnz
sbb
(bad)
inc
cmp
(bad)
stc
ins
(bad)
dec
adc
dec
jo
push
push
ror
aas
mov
push
jl
into
imul
fstp
aas
sub
push
test
mov
sbb
jns
add
icebp
pushf
stc
and
retf
push
xchg
push
std
test
les
fwait
cmp
pushf
cmc
arpl
xchg
adc
add
or
jne
inc
std
neg
mov
inc
fisttp
out
fild
xor
jl
or
sbb
jo
popa
jnp
mov
ret
hlt
imul
shr
mov
stc
dec
pop
mov
mov
loope
jp
imul
and
mov
daa
imul
push
xor
adc
repnz
sbb
mov
mov
and
ins
out
jp
fldcw
mov
dec
xchg
pop
push
inc
imul
imul
mov
push
cmp
or
(bad)
stos
cmp
ret
cmp
retf
(bad)
lgs
pop
pop
and
ret
xchg
jbe
dec
dec
rol
outs
(bad)
popa
jnp
outs
sub
lods
mov
dec
arpl
xchg
sub
enter
xor
pop
and
cmp
jbe
in
cmps
cli
push
inc
push
das
dec
ror
movs
ds
dec
daa
aad
cmp
mov
adc
shl
and
pop
and
xchg
ins
sbb
or
aam
mov
mov
stc
inc
clc
mov
jmp
(bad)
xlat
jno
cmp
adc
ret
jmp
neg
inc
jnp
mov
sub
and
pop
daa
jg
xor
pop
add
and
add
inc
mov
xchg
shr
test
test
pop
or
test
xor
sub
and
int3
fcomp
sbb
idiv
add
mov
mov
xor
jge
dec
add
inc
jae
les
shl
int
mov
scas
inc
mov
jmp
sbb
xor
cmp
fimul
dec
pop
inc
dec
fs
call
icebp
or
xor
daa
shl
push
cmp
push
arpl
xchg
cld
sbb
push
xor
fnstcw
xchg
push
and
ja
fild
ins
add
inc
and
lds
cwde
scas
ja
les
mov
adc
gs
push
in
push
ret
add
(bad)
jbe
sbb
or
xchg
push
pushf
xor
mov
push
pop
push
mov
aad
mov
bound
ins
add
dec
xor
add
mov
js
push
jp
jmp
mov
xchg
pop
push
sbb
dec
(bad)
push
enter
(bad)
jp
imul
jg
mov
dec
outs
retf
iret
icebp
(bad)
pop
xor
iret
sub
inc
loop
cli
xchg
adc
inc
jp
jl
pop
cmps
push
ss
xchg
lods
dec
fnstsw
fld
iret
ret
sahf
mov
xor
jae
(bad)
fist
lahf
mov
and
and
rol
call
cmps
and
addr16
ss
test
mov
out
xlat
and
test
mov
jmp
test
inc
inc
mov
arpl
int
shl
push
aaa
mov
sti
add
jbe
test
push
push
mov
stos
sub
mov
dec
sub
inc
fisubr
pop
mov
pop
cmp
mul
out
push
fnsave
in
add
add
jno
xlat
dec
push
scas
cs
retf
js
ja
ficomp
mov
sub
ret
jge
mov
cmc
pop
retf
xchg
inc
test
mov
ret
outs
dec
mov
mov
aas
push
inc
pop
xor
jo
retf
dec
or
or
inc
ss
(bad)
aad
jg
mov
dec
repnz
mov
in
jo
(bad)
lds
jo
ret
icebp
fsubr
jmp
sbb
retf
push
sahf
dec
and
xor
xor
jns
ret
js
stc
std
fs
stc
lea
in
cmp
xor
inc
mov
into
pop
outs
ins
inc
pusha
push
xlat
js
cmc
sub
inc
in
imul
pop
push
mov
or
fwait
pop
sbb
mov
xchg
out
sub
in
sub
or
rcr
mov
mov
loope
fisub
cs
push
inc
and
sbb
cmps
cmc
add
(bad)
popf
shr
stc
test
ins
data16
cmps
sbb
cmp
sub
jb
sahf
popf
and
ss
cld
mov
push
inc
clc
jno
mov
outs
pop
adc
out
inc
scas
xor
sub
and
dec
cmc
(bad)
mov
push
mov
adc
jae
das
adc
dec
xchg
imul
scas
pop
jg
imul
daa
fwait
xchg
sub
in
push
mov
fisttp
dec
or
mov
add
cdq
mov
aad
add
sbb
inc
test
lods
xor
cdq
sub
leave
fdiv
ret
scas
test
inc
jmp
pop
sbb
repnz
or
or
fisubr
and
push
hlt
mov
inc
jle
enter
nop
mov
adc
cmp
and
in
scas
adc
lds
xchg
pushf
xchg
sbb
ret
loop
test
gs
rcl
adc
icebp
pop
adc
mov
enter
stos
popf
jp
stos
jns
dec
xchg
cld
push
sub
jb
xor
inc
les
daa
sbb
iret
lahf
jo
adc
and
mov
cli
(bad)
mul
pop
outs
sub
jmp
sub
addr16
adc
js
mov
ins
mov
out
mov
push
rol
cmp
mov
nop
cmp
rep
movs
push
inc
or
mov
mov
push
leave
sub
pop
ret
retf
pop
test
out
dec
pop
push
loop
ins
xor
sbb
inc
lods
ret
idiv
push
test
test
retf
ins
arpl
adc
sar
clc
gs
aaa
js
mov
add
in
push
adc
outs
inc
push
or
mov
fnstsw
cdq
mov
pop
jmp
movs
inc
mov
int3
cmp
mov
sub
and
jmp
xor
inc
and
fwait
jp
loopne
lea
imul
std
(bad)
xchg
sbb
xor
loope
or
das
cmp
mov
cdq
cmps
out
xor
mov
cdq
test
(bad)
sub
cmp
(bad)
sub
mov
rol
shl
int3
push
sar
push
shr
cmp
add
cmps
rcl
mov
jno
ret
mov
lds
scas
aam
sub
sub
shr
retf
stos
movs
aas
adc
adc
mov
sub
out
xchg
sbb
arpl
mov
cs
ds
pop
stos
fwait
dec
add
or
sub
iret
add
dec
mov
push
and
aam
call
sbb
and
pop
arpl
sub
push
clc
pop
int3
pop
cli
sar
data16
jmp
pusha
clc
add
ss
clc
imul
pop
test
cmp
pusha
lds
popa
and
jae
mov
test
xor
ja
add
jae
dec
frstor
out
and
push
jo
in
mov
sbb
cs
add
xchg
pop
adc
mov
pop
or
outs
mov
out
add
das
sbb
mov
(bad)
aas
loop
jb
out
test
push
and
dec
mov
mov
push
out
clc
fidiv
test
mov
and
outs
or
dec
in
inc
(bad)
in
hlt
xor
pop
std
call
inc
(bad)
out
in
pop
mov
mov
stos
sahf
scas
out
jle
dec
fs
mov
pusha
cmp
sbb
mov
mov
loop
pop
fs
and
mov
rcl
xchg
add
push
nop
mov
fwait
add
jmp
xchg
jmp
dec
mov
xor
adc
pop
je
jmp
sbb
daa
cmps
pop
call
pop
daa
std
iret
cmp
cmps
dec
rcl
push
and
stos
jmp
sbb
scas
pop
add
pop
sub
add
cmp
dec
(bad)
lds
xchg
adc
xchg
xor
arpl
and
cmc
retf
into
leave
fs
in
leave
push
cli
pop
adc
loop
test
pop
push
xor
aaa
rol
or
gs
cmp
jns
jmp
scas
lock
jb
adc
and
js
pop
xor
mov
scas
ja
push
xchg
imul
xor
mov
dec
mov
push
adc
out
pushf
imul
stc
add
jnp
fs
or
mov
jo
mov
pop
pop
popa
mov
(bad)
jb
jle
push
(bad)
push
ins
imul
ror
or
lock
out
scas
and
push
loop
push
shr
jb
pusha
dec
jle
ror
scas
cmp
push
pushw
cmp
pop
push
inc
mov
xor
ja
jo
pop
add
mov
repnz
fcmovnbe
cmp
mov
pop
jno
adc
xchg
(bad)
mov
push
jmp
and
mov
ret
retf
pop
(bad)
retf
pop
gs
int
inc
js
or
jns
push
gs
and
pop
inc
arpl
(bad)
lock
mov
jae
fsubp
push
test
cld
xor
leave
scas
cs
xchg
mov
cwde
std
retf
loopne
jnp
xchg
xor
xchg
push
scas
fcomp
or
fnstcw
dec
xchg
adc
addr16
das
mov
fsub
jns
mov
sbb
clc
xchg
xor
ins
push
jge
mov
sti
imul
mov
(bad)
and
jae
pushf
je
sub
jmp
push
mov
retf
cwde
loop
xchg
sti
loop
mov
add
rcr
push
std
inc
jmp
inc
add
popf
call
cmp
cli
jbe
sub
into
jg
pushf
clc
jae
out
scas
je
pop
retf
cmp
mov
ret
(bad)
xlat
retf
mov
or
mov
data16
add
test
(bad)
push
jg
mov
dec
jmp
push
push
mov
mov
inc
mov
aas
imul
aaa
xchg
or
jae
cmp
jle
mov
and
pop
inc
push
out
adc
(bad)
mov
jmp
add
cmps
jl
mov
push
call
imul
pop
iret
pop
jecxz
pop
nop
lods
addr16
std
mov
rol
icebp
sub
or
sbb
sbb
adc
pop
mov
and
out
pop
or
bnd
popf
in
add
cmp
adc
mov
mov
lahf
iret
int3
in
iret
mov
shl
xor
mov
cmp
xor
repz
or
data16
pop
dec
xlat
cmps
outs
jg
xor
xchg
xchg
sbb
retf
sahf
push
xor
mov
xlat
add
and
pop
inc
ins
scas
adc
push
daa
dec
push
cmp
xor
pop
clc
aad
adc
data16
pusha
retf
cmps
push
sub
ds
push
cmps
arpl
cmp
outs
test
add
rcl
in
pop
sub
packsswb
call
mul
enter
sub
xchg
ins
and
jne
pop
or
pop
mov
div
(bad)
out
imul
adc
pop
repnz
shr
jmp
dec
and
addr16
(bad)
mov
jo
stos
or
inc
mov
push
leave
xchg
cmp
ss
mov
push
xchg
lock
pop
jo
movs
and
mov
push
cmps
dec
and
inc
dec
enter
push
cmp
sub
cmp
jmp
pop
mov
mov
and
enter
xchg
mov
pushf
cdq
dec
push
neg
mov
sub
ja
popa
out
addr16
out
push
mov
das
add
call
mov
mov
xchg
push
les
mov
mov
add
cld
adc
retf
push
pushf
mov
mov
mov
test
gs
xor
sahf
dec
jle
adc
adc
fst
xchg
push
inc
cmp
pop
add
sub
jecxz
push
push
shl
dec
and
pop
hlt
jle
popa
and
ror
sar
data16
push
repnz
xlat
retf
mov
and
mul
xor
pop
xor
stos
ja
into
adc
sub
jno
das
xchg
sub
ret
call
and
fiadd
retf
mov
xchg
cmps
mov
jne
push
call
pop
fild
and
jbe
and
adc
sbb
ficom
add
cwde
imul
fs
fcomp
xor
imul
dec
mov
xor
pop
(bad)
lahf
pop
add
push
inc
xor
out
arpl
test
pop
mov
mov
jmp
sbb
movs
fs
add
and
jb
pusha
xor
aas
jmp
add
mov
clc
or
add
or
ins
add
and
and
sub
inc
push
(bad)
retf
and
jmp
add
push
pop
push
or
fistp
jmp
or
fimul
add
mov
pushf
addr16
out
ficom
loopne
sub
sqrtps
or
mul
leave
pop
aas
test
fstp
push
js
lea
push
mov
pop
loope
push
fcom
arpl
add
push
mov
outs
test
test
add
adc
dec
push
or
pop
jae
sbb
jmp
sbb
test
out
and
test
push
xchg
dec
clc
(bad)
mov
and
sub
and
sub
jp
in
pop
jl
jp
out
pusha
add
push
mov
inc
sub
cwde
and
sbb
int3
imul
or
mov
mov
(bad)
xchg
cmp
movs
stos
mov
repz
ins
clc
movs
push
out
and
mov
cmps
adc
push
jge
add
stos
sub
jae
push
xor
dec
hlt
jns
adc
and
idiv
int
jg
adc
sub
sub
movs
jns
sbb
(bad)
push
sub
leave
fst
jb
add
stos
and
outs
loop
sub
lods
push
pop
in
mov
call
sbb
xor
add
and
sbb
imul
push
jge
xor
pop
icebp
mov
lods
cdq
sti
addr16
daa
xchg
repz
bound
xor
adc
and
fmul
xor
aaa
add
lea
lea
mov
xchg
(bad)
gs
push
jmp
dec
push
fprem1
jne
outs
jecxz
adc
ficom
mov
call
scas
clc
add
hlt
push
std
dec
in
jae
and
inc
inc
mov
mov
xchg
or
out
outs
dec
sbb
add
pop
shr
fidivr
test
xchg
inc
ror
adc
(bad)
mov
inc
dec
jb
cmp
mov
add
loop
xchg
fadd
cmp
push
movs
leave
push
xchg
cmc
pusha
and
ret
xchg
lahf
jmp
jmp
fmulp
popa
mov
sbb
jo
and
mov
dec
ret
mov
repnz
mov
inc
inc
ficom
sub
inc
(bad)
sbb
mov
cmp
popa
jnp
mov
iret
xchg
dec
lahf
lock
pop
push
and
icebp
mov
test
fst
push
scas
mov
ror
mov
ret
pushf
clc
jns
(bad)
cli
jmp
mov
push
cmp
push
icebp
out
mov
push
arpl
test
xchg
xor
cmp
jl
daa
out
dec
retf
adc
dec
push
out
ja
mov
repnz
adc
sub
cmp
add
push
sbb
push
cli
xchg
(bad)
test
or
fisubr
mov
or
dec
cmp
cmp
mov
loop
dec
dec
ss
nop
xlat
leave
mov
fild
movs
cmp
std
adc
ins
jo
mov
mov
popf
mov
jmp
aad
mov
movsx
jl
cmps
sub
stos
pop
dec
adc
lods
call
jmp
pushf
jbe
scas
imul
pushf
dec
jmp
jnp
(bad)
shr
mov
cmp
mov
mov
inc
cli
sti
mov
fst
in
js
adc
pop
stc
dec
(bad)
ja
test
ret
adc
ficom
and
push
mov
sbb
fwait
aad
adc
sbb
push
sbb
xchg
movs
jge
cmp
shl
popa
mov
shl
sub
mov
gs
cmp
pop
mov
mov
bound
add
inc
or
cmp
addr16
in
mov
out
sub
aam
push
mov
pop
les
movs
mov
jmp
in
add
repz
stos
push
sub
loopne
out
out
jg
fidivr
jno
sbb
unpcklps
ins
sub
test
dec
fwait
cmp
js
and
and
outs
cmp
jae
outs
pop
outs
mov
dec
jo
jo
fist
and
xor
sahf
inc
ja
(bad)
out
jmp
je
leave
test
sub
mov
xor
or
xor
jbe
cmps
adc
cmps
mov
push
mov
push
push
pop
jb
sub
jge
sub
dec
loopne
outs
or
dec
pop
in
(bad)
xor
push
sar
loopne
inc
daa
cmp
movs
sub
out
mov
cdq
xor
sub
mov
mov
push
pop
test
xor
mov
dec
adc
call
mov
imul
dec
mov
jecxz
cdq
mov
sbb
and
sub
xor
pushf
sti
xchg
jl
mov
jns
test
iret
pop
mov
or
inc
or
inc
mov
jl
mov
sub
push
push
ficomp
data16
das
scas
cmps
sbb
inc
dec
inc
mov
addr16
adc
cmp
jne
es
rol
sub
das
mov
leave
adc
into
inc
loop
xor
ret
js
mov
cmc
inc
movs
fistp
or
enter
in
adc
dec
call
dec
ja
sbb
ds
lock
and
sub
lds
rol
call
dec
and
lds
inc
div
mov
sub
xchg
fld
fcomp
jl
dec
xor
pop
cmp
nop
jnp
loopne
enter
sbb
(bad)
sti
stc
aaa
jae
pop
mov
(bad)
cli
lds
test
str
mov
call
inc
sub
in
jbe
imul
data16
mov
mov
cwde
movs
das
dec
cmps
aad
lods
repz
xchg
jmp
dec
int3
inc
xor
ror
inc
xchg
loope
aaa
mov
test
ins
fistp
rcl
add
in
sti
and
cmp
jno
jno
jnp
cmp
mov
and
sahf
mov
sahf
mov
mov
or
sti
pop
xchg
sbb
jp
inc
dec
pop
adc
mov
add
mul
sti
jp
mov
mov
dec
gs
ret
or
inc
shl
mov
je
xchg
lds
jg
sbb
loopne
(bad)
mov
xchg
push
jne
xchg
add
loope
sbb
mov
fisttp
nop
inc
enter
xchg
dec
push
cmps
pop
idiv
lods
das
push
rcr
pop
cmp
mov
or
inc
rcr
push
test
mov
jbe
add
cli
mov
add
mov
enter
and
add
aad
push
inc
fist
das
inc
icebp
inc
or
jge
fs
cmp
cli
push
sti
sub
dec
in
dec
std
loope
cmp
in
cmps
dec
icebp
sub
movs
cmp
mov
inc
loopne
ret
xor
jg
stc
or
mov
xor
xchg
mov
fld
test
les
cmp
ds
scas
pop
push
cli
sahf
push
adc
xchg
je
add
adc
dec
hlt
leave
cmp
loopne
call
push
mov
call
clc
inc
adc
call
dec
in
into
out
push
push
aad
pop
test
cmp
adc
test
cwde
call
mov
shl
ss
push
loope
mov
mov
jg
fadd
ficom
movs
dec
int
cmp
xchg
or
lds
rcl
(bad)
xchg
stos
out
sub
iret
cs
repz
les
xchg
retf
cmp
push
scas
jle
call
and
push
add
imul
stc
xor
pop
add
ins
mov
jmp
mov
rcr
sub
fwait
push
dec
aaa
aas
mov
cmp
fisttp
clc
jp
(bad)
fimul
call
sub
mov
sahf
out
data16
ja
mov
mov
pop
bound
adc
nop
mov
fcomp
add
scas
adc
inc
pusha
loope
add
xchg
mov
add
pop
femms
scas
ret
adc
adc
movs
add
push
ins
bound
hlt
fisttp
ss
das
aam
jmp
jb
pop
xor
in
mov
call
pop
out
js
outs
jmp
pop
dec
test
int3
pop
inc
mov
das
cli
cmp
jnp
inc
add
hlt
ss
les
cmp
mov
mul
ficomp
adc
mov
in
jae
sub
ss
inc
call
sbb
ret
inc
arpl
(bad)
push
scas
mov
sbb
cmp
out
and
stc
bound
call
out
push
lods
adc
(bad)
jge
jo
loop
xor
je
mov
push
sbb
es
sub
scas
pop
addr16
repnz
fcomp
(bad)
loopne
aaa
mov
sahf
shr
cli
dec
xchg
cmp
mov
cmp
jmp
mov
and
push
mov
or
dec
sub
dec
leave
sbb
ins
call
rol
inc
and
inc
pop
or
ja
sub
ins
outs
and
stos
sub
retf
mov
mov
xlat
movs
pop
jle
sub
push
cs
das
push
dec
mov
pop
cmp
fcom
loop
xchg
pusha
xor
inc
aas
pop
cld
adc
push
(bad)
mov
pop
mov
int3
mov
jecxz
fcomp
push
ins
(bad)
jp
mov
or
data16
(bad)
gs
stos
sub
(bad)
mov
das
inc
std
inc
lea
fs
inc
aaa
inc
aad
jl
imul
cmp
and
clc
and
mov
imul
dec
pop
(bad)
mov
loop
jmp
leave
and
(bad)
lahf
out
retf
lods
sbb
stos
jbe
pop
lods
mov
retf
clc
mov
sub
pop
cmps
jle
inc
sbb
call
(bad)
mov
sbb
jp
xor
addr16
mov
pop
cwde
test
das
cmp
add
xchg
mov
mov
inc
pusha
rcl
and
or
clc
stos
out
inc
cmp
xchg
jl
std
sbb
addr16
inc
fadd
xchg
pop
aaa
ret
mov
(bad)
das
js
jo
jne
add
arpl
mov
xor
nop
rol
shr
stos
jo
and
xchg
jl
dec
add
fldenv
sbb
cmps
pop
fs
and
push
dec
jmp
loopne
gs
jb
aad
stc
js
fidiv
jno
pop
(bad)
ficomp
stos
fcom
repz
cwde
rol
das
push
sub
jmp
rcl
inc
dec
push
inc
push
cdq
enter
push
push
or
cmc
pop
xchg
loop
mov
lock
(bad)
retf
xor
imul
dec
add
(bad)
add
fld
mov
movs
cmp
nop
mov
mov
imul
cwde
jl
or
rol
fisubr
retf
jb
fs
scas
push
push
sub
pusha
push
mov
mov
in
mov
inc
jg
pop
dec
push
or
sbb
and
outs
enter
sub
dec
cli
jl
fld
sub
and
ja
add
enter
xor
ss
int3
mov
add
push
(bad)
repnz
cs
pop
std
aas
jno
sbb
mov
adc
mov
mov
pusha
pop
outs
sbb
lods
pusha
mov
not
ja
sbb
inc
and
sti
outs
loope
xchg
mov
xchg
pop
fidiv
out
imul
fwait
cmp
and
sbb
adc
cli
ins
leave
dec
xor
bound
jecxz
add
dec
push
out
pop
pusha
scas
xchg
push
push
fdivrp
add
popf
test
push
shl
push
out
xor
mov
out
sub
mov
aam
add
xchg
mov
call
lds
xor
fbld
inc
lods
sbb
or
(bad)
test
ret
js
adc
loope
aam
mov
jp
add
mov
pop
enter
paddusb
rcl
cli
jne
mov
pop
or
jnp
jne
popf
push
das
mov
push
mov
xor
shr
sbb
fdiv
sbb
mul
jne
adc
call
lods
(bad)
idiv
sub
shl
pop
jae
cmps
movs
cwde
mov
scas
push
fs
pop
mov
loopne
jp
mov
xor
neg
mov
xor
inc
or
test
mov
cmc
je
lea
pusha
jge
dec
sub
fidivr
imul
dec
ss
(bad)
addr16
lods
cwde
pop
dec
aaa
cmps
adc
and
shl
stos
(bad)
cdq
pop
bound
jb
jbe
xchg
gs
inc
mov
and
aad
pop
xlat
aad
(bad)
pop
fst
pop
imul
xchg
ret
(bad)
mov
jb
jge
into
outs
lea
pop
mov
pusha
pop
pop
xor
rcl
shr
jge
in
sub
xchg
fnop
popa
lea
inc
and
and
inc
ret
jne
fs
nop
xlat
jne
or
adc
mov
mov
cli
mov
sti
clc
lds
in
outs
arpl
mov
jno
sar
add
bound
lods
mov
(bad)
jb
mov
jno
frstor
adc
inc
or
mov
test
dec
repz
cmp
sub
mov
pop
in
add
mov
push
fist
mov
retf
ds
jo
jae
nop
cmp
fisub
arpl
lods
movs
pop
pop
dec
scas
test
inc
sbb
lods
call
mov
cs
xor
fisttp
rol
sub
lods
xchg
(bad)
daa
push
cdq
sbb
lods
inc
adc
es
pop
jecxz
mov
shl
repnz
ret
add
sbb
mov
mov
adc
lea
ins
push
mov
popf
ret
push
mov
jg
ret
and
loop
(bad)
stos
xchg
pop
xor
les
lods
enter
and
std
pop
pop
jbe
jg
fdivp
daa
retf
and
popa
sub
xchg
(bad)
sbb
test
test
test
clc
repz
pop
dec
mov
dec
loop
jnp
dec
test
or
pushf
add
sub
retf
imul
(bad)
cmps
xchg
push
scas
call
sub
mov
(bad)
mov
or
mov
out
(bad)
xor
and
data16
repz
jae
lds
mov
push
stos
cdq
jle
push
mov
imul
mov
cwde
int
fwait
neg
popf
or
enter
ret
add
repnz
xor
lds
add
mov
ret
pop
je
pop
jno
rcl
mov
gs
in
popa
inc
retf
mov
mov
daa
in
mov
ins
ret
sbb
sbb
dec
dec
bound
out
nop
ins
sub
arpl
adc
in
push
ret
or
mov
xchg
sbb
add
js
add
pusha
and
cmp
mov
out
push
rcr
xlat
imul
jge
(bad)
cmc
adc
dec
add
lods
or
mov
and
nop
test
or
jecxz
test
mov
je
enter
jbe
test
bound
sbb
push
pop
add
jg
fadd
jmp
dec
xor
add
bound
out
pop
or
pop
push
adc
add
mov
lods
cmp
push
sub
push
and
in
adc
dec
xlat
into
shl
pop
icebp
xor
or
xchg
adc
in
mov
ret
and
inc
arpl
pop
add
or
ret
add
inc
outs
movs
pop
push
sub
push
mov
push
jmp
sti
jge
cld
xchg
ds
pop
mov
and
clc
daa
test
es
jge
dec
ret
aam
lock
and
sub
test
cmp
xor
or
pushf
test
pusha
xchg
sbb
or
sub
or
inc
ins
and
pop
dec
in
retf
loop
mov
push
(bad)
mov
rcl
mov
push
mov
push
in
js
pop
mov
jg
outs
out
imul
aaa
lock
int3
sub
xchg
ror
fs
dec
pop
hlt
cmps
pop
add
xor
jo
push
xchg
cmc
push
icebp
aad
mov
addr16
push
clc
cld
mov
test
ds
jb
pop
in
cmp
lea
mov
movs
es
xchg
push
in
push
mov
dec
xchg
jnp
(bad)
mov
sbb
add
mov
cld
loop
jg
pusha
jecxz
sub
stc
outs
push
xor
in
adc
jmp
shr
ins
(bad)
pushf
jbe
cmp
xor
retf
cmp
retf
push
push
popa
ds
fs
adc
fisubr
scas
shl
adc
jb
addr16
sti
push
in
mul
push
cmp
dec
ror
sbb
out
mov
or
cmps
cmp
dec
pop
mov
ror
ja
adc
mov
xchg
addr16
sbb
arpl
cmp
aad
or
iret
pop
ret
retf
daa
ja
jp
mov
(bad)
adc
icebp
mov
icebp
out
add
shr
sub
hlt
cmp
enter
jl
mov
xchg
mov
mov
popa
mov
mov
cmp
jp
sub
sahf
add
jae
cmp
dec
idiv
adc
mov
push
pop
ret
jl
push
sbb
xor
xor
sbb
into
outs
push
xor
inc
mov
pop
jbe
pop
push
inc
xchg
push
and
shl
(bad)
push
std
or
mov
mov
dec
lahf
arpl
or
cmp
leave
push
scas
lods
cmp
icebp
fbld
cmps
xlat
aad
scas
xchg
ror
jo
dec
xchg
xor
push
loop
mov
loop
gs
inc
rcr
aas
pop
xor
and
repnz
push
pop
popa
sbb
dec
cld
pop
ja
cmc
pop
loope
pop
xchg
pushf
sub
loopne
inc
and
popf
sbb
dec
jmp
daa
pop
mov
ds
push
inc
inc
popf
jmp
sub
jmp
xchg
aad
cmp
pop
jmp
retf
out
dec
sar
xor
adc
mov
cmp
jle
mov
cld
dec
test
xchg
ror
fwait
pop
out
ret
dec
inc
push
(bad)
cmp
inc
and
das
push
cdq
es
(bad)
jge
ds
cmp
push
dec
sub
cmp
inc
xchg
push
mov
stos
call
mov
xor
adc
ret
ds
sub
stos
cmp
call
sub
movs
in
pop
icebp
ret
jbe
mov
pop
loope
push
clc
xchg
ja
stc
sbb
mov
push
or
jno
push
mov
push
inc
pop
into
test
retf
and
out
add
int
add
cmp
(bad)
ja
lods
fidivr
inc
aam
fs
sbb
movs
leave
rol
call
cmp
sbb
dec
jnp
(bad)
jge
pop
inc
ja
pop
int3
fdiv
pushf
mov
add
nop
mov
add
jecxz
shl
sub
pop
pop
daa
shl
cmp
rcl
addr16
sahf
sub
push
cld
pushf
movs
mov
push
fistp
and
jno
and
sbb
not
or
loop
push
ins
ror
mov
pop
scas
nop
cdq
(bad)
mov
ss
push
xor
out
ret
repnz
push
daa
and
adc
dec
retf
scas
ds
test
jge
out
xchg
xor
cdq
test
xor
fwait
jo
push
xchg
cmps
jmp
or
mov
and
nop
jo
sbb
jno
cmp
ds
adc
and
sub
lfs
mov
cmp
test
push
xchg
(bad)
movs
inc
or
dec
jo
push
pop
or
scas
outs
and
lods
cmp
mov
ret
xor
(bad)
std
stos
(bad)
lods
dec
push
addr16
in
mov
sub
xor
xchg
xlat
xchg
xor
inc
das
and
jmp
int3
mov
shl
jge
out
(bad)
xchg
xor
cmp
loop
call
jo
pop
stos
test
mov
and
cmp
cmps
lods
pop
inc
test
mov
jge
fwait
mov
sbb
cmp
xchg
inc
aam
cmc
sub
vcomisd
jge
push
push
xor
mov
ficom
dec
jmp
movs
inc
push
das
call
(bad)
std
cmps
cld
fcmovnb
or
dec
mov
cwde
(bad)
jns
push
jl
and
inc
and
mov
fucomip
mov
cmp
push
fiadd
cmp
jecxz
jle
push
jmp
pusha
sar
push
xchg
cdq
jmp
or
stc
mov
fidiv
cmp
(bad)
mov
jecxz
test
(bad)
std
xor
pop
cmp
jecxz
je
adc
or
sub
jae
rcr
std
sub
stc
outs
dec
push
add
xchg
repz
ret
adc
push
call
es
cmp
push
and
test
sbb
cdq
xchg
pop
sub
xor
(bad)
cmp
(bad)
fild
mov
mov
push
sub
mov
xlat
or
pmaxsw
and
jne
int3
cmc
push
cwde
xchg
mov
mov
ss
js
in
cmp
cli
sbb
(bad)
or
dec
and
retf
cmp
faddp
mov
and
scas
je
movs
lods
lds
and
pushf
pop
sub
jmp
add
push
push
fdivr
rcr
sub
ret
or
dec
mov
cwde
(bad)
cwde
ror
adc
rol
cli
jle
mov
adc
repz
dec
push
imul
cli
mov
cmp
cvttps2pi
add
jbe
sbb
(bad)
jne
pop
xor
(bad)
sbb
pushf
repz
push
out
cwde
rcl
mov
add
loope
(bad)
imul
(bad)
xlat
add
nop
and
(bad)
mov
ins
inc
push
es
pop
pop
dec
js
shl
ins
es
je
push
je
inc
fadd
adc
scas
(bad)
pop
rcl
jecxz
jg
lock
ins
add
mov
shl
mov
pop
sbb
and
fcomp
into
and
les
fdiv
xor
movs
test
std
movs
cmc
xchg
jo
inc
and
out
pusha
mov
leave
rcr
mov
push
sub
or
add
(bad)
in
out
jbe
xchg
mov
cmp
mov
mov
mov
in
repz
xor
pop
add
dec
inc
push
or
out
nop
mov
sub
repz
ins
pushf
aam
out
cli
cmp
sub
jbe
dec
pop
sbb
aas
push
push
push
and
dec
mov
and
imul
jle
cwde
push
addr16
and
or
adc
(bad)
mov
clc
dec
sub
mov
adc
sbb
ror
arpl
out
jecxz
test
test
mov
push
cmp
pop
fistp
or
std
aad
arpl
daa
jmp
push
dec
mov
mov
inc
add
mov
push
test
fisttp
push
inc
out
dec
pushf
aad
and
or
(bad)
(bad)
sub
pop
inc
adc
popf
mov
or
sar
xchg
int3
jbe
rsqrtps
cmp
add
mov
inc
push
loopne
ss
xor
jmp
pop
and
jl
push
add
xchg
sub
sbb
mov
movs
das
xchg
cmp
ins
imul
jmp
in
mov
pop
xchg
loopne
ret
cmp
jg
dec
pop
or
enter
or
push
mov
push
scas
shl
jb
loopne
pusha
test
dec
addr16
dec
fwait
ret
inc
mov
pop
popf
sahf
fs
cmp
dec
sub
retf
jle
pop
inc
cmps
xor
repz
jne
fs
sti
lea
pop
dec
pop
js
pop
repz
jb
ficom
mov
pop
xchg
and
in
icebp
enter
xchg
pop
mov
and
enter
out
cmps
sbb
jo
pop
inc
fidiv
sbb
mov
mov
add
push
sbb
xchg
in
or
sar
test
sar
mov
mov
es
je
sub
cld
xchg
call
sbb
add
or
cmp
push
pop
jecxz
push
dec
push
mov
outs
sub
cmp
inc
(bad)
sbb
sbb
or
(bad)
push
inc
loope
add
cli
add
add
jmp
or
jb
aas
test
sub
(bad)
mov
or
add
or
mov
bound
sbb
pushw
(bad)
xlat
int
adc
clc
out
sar
sahf
mov
xchg
stos
mov
sub
icebp
bnd
xor
jo
fstp
pop
mov
add
cmp
leave
jns
or
cli
mov
hlt
mov
jle
aam
push
std
out
das
inc
repz
and
mov
xor
mov
in
mov
inc
mov
push
mov
adc
xchg
mov
mov
xor
add
inc
retf
jl
push
and
inc
ret
jbe
imul
or
xor
push
xor
cli
sbb
and
int3
or
in
rol
out
adc
(bad)
inc
fmul
add
mov
or
je
(bad)
xor
and
loopne
ds
inc
xchg
mov
mov
dec
outs
jg
xor
inc
(bad)
movs
test
fwait
js
jg
call
fist
xchg
(bad)
push
ret
(bad)
jae
mov
mov
loope
ins
pop
les
dec
pop
mov
into
fucom
adc
outs
retf
cmp
mov
cmp
imul
push
hlt
xor
adc
call
inc
cmps
inc
pop
repz
push
or
addr16
lods
adc
ss
lods
out
xchg
mov
mov
inc
and
inc
push
jle
add
sbb
mov
sbb
into
sub
nop
das
sub
mov
jae
push
loope
cwde
loope
outs
(bad)
jmp
shr
shl
fs
stos
jp
and
mov
jecxz
aam
mov
in
ja
ror
call
jmp
repnz
retf
repnz
cmp
(bad)
sub
cmp
push
nop
(bad)
cli
xchg
mov
aam
shr
mov
int
gs
enter
jb
popw
rcr
iret
dec
stos
div
cld
rcl
in
push
cmps
cmps
loopne
sub
push
jb
dec
cmc
aad
ins
pop
mov
adc
sub
push
ins
pop
sub
in
mov
jle
push
mov
add
loopne
push
xchg
pop
xchg
fxch
push
jp
adc
(bad)
push
(bad)
stc
lds
mov
inc
sub
int
in
pushf
(bad)
and
push
cmp
scas
pop
cmp
push
or
xchg
scas
fnstcw
mov
cmp
and
inc
push
xor
test
scas
test
xchg
jne
add
lock
cmps
bound
leave
scas
out
repz
mov
sbb
mov
out
sbb
leave
mov
call
div
call
out
aad
loop
push
repz
sbb
ins
out
push
cmps
mov
mov
mul
ins
shl
mov
addr16
mov
sti
(bad)
(bad)
mov
pop
pusha
in
cmp
sbb
outs
and
adc
xchg
aas
fs
inc
mov
mov
mov
push
outs
in
lahf
arpl
dec
fcomp
jp
sbb
sahf
jge
xor
(bad)
sbb
call
or
das
push
adc
jge
pop
cwde
mov
pop
pusha
rcr
mov
and
sbb
adc
js
mov
sub
dec
lds
cmp
jg
fsub
jns
adc
clc
loope
aaa
push
in
mov
jbe
pop
dec
popa
jl
jmp
sbb
loopne
inc
jg
xchg
addr16
loopne
rcr
pop
test
jecxz
add
out
outs
pushf
out
sbb
fs
adc
jne
adc
inc
in
daa
cmc
loopne
jbe
retf
ins
or
sub
or
inc
mov
push
pop
xchg
jno
and
fisub
popf
sbb
ja
mov
sub
sbb
cs
popf
fwait
inc
push
movs
inc
popf
test
sbb
in
cmp
jne
mov
outs
aaa
movs
inc
ja
and
lgs
bound
cmp
sbb
add
movs
sub
jne
fst
daa
mov
out
div
cmp
and
std
stos
xchg
add
rcl
jbe
jbe
jae
test
inc
loopne
push
cmp
test
xchg
sbb
fst
push
ror
int
pop
cmc
mov
dec
mov
jne
adc
cmc
sub
sbb
rcr
mov
jae
cdq
or
xchg
shr
(bad)
cdq
mov
fisub
jbe
pop
or
sub
push
push
inc
pop
push
pusha
push
or
movs
ffreep
adc
out
adc
push
pusha
dec
mov
mov
cli
inc
push
jecxz
cmp
mov
outs
jp
mov
iret
fsubr
nop
iret
or
in
repnz
dec
fiadd
cmp
mov
adc
sbb
jmp
jle
cdq
aam
or
es
xor
cmp
nop
fs
mov
daa
and
add
pop
pop
add
mov
cmp
jge
out
xchg
push
pop
adc
xchg
out
daa
xchg
mov
cmps
sbb
adc
jno
mov
xchg
(bad)
stos
cmp
push
sbb
mov
inc
jo
xor
loope
dec
xchg
and
les
sbb
and
pop
push
jns
jge
or
push
adc
das
lock
pushf
fst
inc
sub
jb
gs
pop
sub
ds
call
sbb
stos
in
cdq
mov
(bad)
cmp
test
push
sub
mov
shl
aas
xchg
sub
sbb
cmp
pop
mov
cwde
aam
idiv
int3
(bad)
sub
inc
xor
inc
or
add
aaa
and
add
inc
sub
cmp
push
mov
ss
xchg
add
xor
xchg
push
cmp
jns
leave
aad
add
sbb
push
mov
leave
jl
enter
test
stos
mov
jbe
pushf
clc
push
xor
mov
test
xchg
jg
cmp
or
and
inc
mov
(bad)
mov
push
loopne
mov
mov
cmp
aam
cdq
dec
outs
cmp
out
arpl
jp
dec
xor
pusha
and
and
ficomp
and
add
shl
out
int
call
sar
(bad)
aaa
rcr
call
add
mov
sar
jl
dec
pop
adc
in
add
mov
inc
jmp
fbstp
popf
nop
stos
push
mov
sar
mov
inc
add
mov
xchg
iret
cmc
das
ss
in
xor
daa
push
push
xor
xor
jnp
js
add
inc
lock
sub
popa
dec
inc
xor
lods
call
and
sbb
and
add
push
xor
in
call
pop
call
(bad)
outs
je
(bad)
mov
pusha
(bad)
mov
push
mov
aam
xor
mov
nop
xor
sub
shr
sub
(bad)
(bad)
cmp
aam
scas
fwait
cmps
push
adc
lods
mov
jg
push
xlat
cdq
fmul
and
mov
xor
(bad)
sbb
fistp
mov
addr16
mov
imul
(bad)
and
dec
xor
pop
jmp
mov
mov
mov
outs
std
cli
sub
ds
sub
jno
adc
daa
fprem1
stos
movs
lahf
fs
cmp
xor
cld
jae
xor
xchg
push
or
ds
adc
xor
cs
jns
or
bound
adc
retf
les
add
pop
cmp
je
sub
push
adc
pop
add
lods
pop
loop
gs
in
sbb
mov
inc
fwait
xchg
sar
jp
aad
dec
dec
xor
std
test
jl
cs
push
stos
jp
inc
dec
sub
sbb
jns
loop
sbb
sbb
jb
adc
aad
pop
cmp
pop
mov
inc
lock
imul
adc
jbe
pop
jp
mov
repnz
sbb
(bad)
fild
jl
mov
push
cmps
push
sti
push
xor
fisttp
aad
out
dec
sbb
je
push
imul
rcr
sbb
test
dec
fs
popa
dec
mov
popa
stos
cld
xlat
aaa
pop
popa
push
gs
mov
stos
jle
fs
popa
mov
add
clc
popa
jnp
lock
push
imul
ja
(bad)
sbb
cmp
dec
cmp
fisubr
pop
jae
mov
xchg
mov
dec
push
aaa
push
popa
xchg
cmp
inc
fdivr
bound
out
test
cs
xor
mov
jns
cwde
retf
cli
icebp
lods
pop
fdivrp
imul
push
sbb
sbb
sar
rol
jbe
lock
mov
sbb
sub
in
(bad)
repz
inc
xchg
mov
pop
inc
jae
bswap
fdivr
icebp
into
xchg
addr16
ret
shl
add
shr
inc
inc
inc
out
idiv
lds
in
sbb
call
adc
fild
xchg
sbb
mov
cmps
and
xor
(bad)
inc
int3
mov
jno
xchg
sti
mov
xchg
sbb
lods
adc
dec
pop
push
sbb
jno
and
xchg
mov
jae
cmps
sub
jae
jge
inc
or
lea
imul
fld
xchg
mov
(bad)
std
adc
inc
xlat
outs
xchg
pop
test
inc
dec
mov
dec
jo
arpl
lds
nop
dec
fdiv
xor
dec
and
adc
xor
cmc
xor
loopne
sbb
adc
and
adc
add
sub
outs
and
adc
leave
das
cmp
inc
xchg
and
mov
jecxz
push
mov
jecxz
push
mov
out
inc
pop
pushf
inc
mov
and
xchg
addr16
aaa
(bad)
movs
xor
sbb
in
and
shl
test
scas
inc
push
and
mov
rcr
ins
mov
mov
pop
mov
inc
jbe
imul
js
adc
sub
pop
jge
lds
inc
bound
pop
test
jmp
sar
data16
out
inc
mov
jns
sub
in
push
lds
sahf
xchg
inc
mov
dec
repz
test
pusha
inc
pusha
xchg
xor
ins
pop
xchg
sub
cmp
adc
lds
mov
out
stc
mov
mov
or
mov
fcmovnu
sbb
loop
sub
std
jno
cmp
adc
mov
mov
cmps
aaa
inc
popf
les
in
dec
push
mov
stc
fnsave
xor
adc
add
inc
pop
push
mov
xor
add
rcl
dec
xchg
pop
mov
sub
pop
adc
and
sub
jmp
jno
shl
inc
scas
mov
pusha
les
sub
(bad)
jg
mov
add
xor
xor
pop
rcr
dec
int
xor
push
cwd
add
jl
cmp
rcl
sar
mov
xor
jecxz
mov
jmp
arpl
xchg
lods
iret
push
jbe
mov
jb
mov
or
loope
gs
adc
call
jno
inc
in
sbb
or
sub
jg
loope
ficomp
adc
and
pop
inc
cmp
add
cmp
outs
push
pusha
shl
scas
sbb
(bad)
les
jo
rcr
push
cmps
push
aad
inc
test
dec
mov
or
dec
popa
fcom
stos
push
ins
or
jb
mov
jmp
add
(bad)
retf
push
add
push
adc
xchg
pop
dec
shr
inc
inc
sbb
jnp
cmp
jle
(bad)
xlat
jmp
imul
icebp
jge
dec
mov
dec
mov
sub
add
xchg
mov
data16
test
stc
xlat
mov
sub
rol
jne
jge
ret
iret
mov
dec
popa
aad
xor
xor
fistp
in
shr
or
sbb
mov
arpl
jnp
cmp
jmp
or
cwde
(bad)
xor
jne
je
sbb
xor
and
xlat
jp
rcl
xchg
or
mov
pop
sub
ja
jl
aas
lods
inc
xor
pop
cmp
bound
cmps
jmp
(bad)
adc
mov
xor
fsubrp
mov
frstor
jge
jecxz
xor
push
repz
icebp
popf
enter
or
inc
test
mov
cli
popf
popf
stos
and
shl
add
mov
dec
or
sub
push
and
cmp
fisttp
cmp
jle
dec
push
xchg
ja
aaa
mov
sbb
add
pop
shl
sub
cwde
ficom
add
loopne
rcl
mov
dec
and
pop
mov
xor
aad
xchg
fsubr
ss
sbb
jno
sub
sbb
ret
int3
sbb
data16
shr
push
jbe
xor
inc
stos
push
retfw
and
(bad)
dec
mov
and
std
ror
fs
test
gs
stc
add
popf
add
repnz
(bad)
cli
inc
adc
call
inc
(bad)
lds
ss
popa
push
cli
das
jle
popa
call
cmp
and
aam
or
xor
mov
or
je
and
sbb
sub
pop
push
retf
dec
addr16
imul
cld
jno
sbb
lods
out
hlt
repnz
data16
add
sti
jbe
popa
push
outs
cmp
addr16
icebp
fsub
cmc
jns
inc
sti
aad
push
jo
pop
int3
jnp
jo
or
jnp
or
ss
add
outs
ins
lods
mov
sub
call
cmp
test
cmp
push
xlat
loopne
sub
sub
fadd
jnp
fild
ins
pop
pop
xchg
inc
in
icebp
and
sub
(bad)
ret
jmp
dec
xor
lock
arpl
dec
pop
sbb
and
aam
pop
aad
leave
jmp
dec
xchg
dec
cli
cmp
push
ret
rcl
jmp
sbb
jmp
out
sub
test
(bad)
push
or
test
jbe
mov
(bad)
xor
movs
sbb
cmp
sbb
lods
mov
adc
cmc
cmps
inc
sbb
adc
inc
add
sub
retf
jb
cmps
scas
mov
lods
sub
je
add
(bad)
out
or
ret
cmp
stos
sub
and
ret
fcomp
mov
outs
jbe
ins
dec
(bad)
(bad)
sahf
out
in
mov
enter
int3
add
test
sbb
jmp
push
idiv
outs
or
call
or
sbb
jns
gs
(bad)
jle
arpl
jo
mov
xchg
popa
xchg
jecxz
jmp
push
mov
sti
int3
adc
mov
mov
cli
inc
jns
mov
es
xchg
dec
push
jae
mov
sub
inc
enter
pusha
jae
fcom
(bad)
jmp
jne
sbb
push
neg
or
sahf
xor
repz
pop
add
mov
fcom
and
imul
mov
push
mov
cmp
cmp
ja
clc
sub
inc
mov
mov
clc
arpl
jbe
(bad)
xor
shl
jmp
test
sbb
dec
sti
push
jb
mov
idiv
pop
out
mov
dec
imul
jne
cli
sbb
dec
inc
push
bound
imul
mov
in
add
div
hlt
retf
ins
pop
xchg
push
mov
js
push
jnp
sub
loope
out
or
and
xor
adc
movs
sub
cmp
mov
bnd
int
nop
neg
idiv
mov
cmc
dec
fidivr
fdivrp
or
cmp
fiadd
push
cwde
gs
data16
je
(bad)
jmp
daa
sahf
(bad)
pop
xor
in
and
dec
dec
enter
dec
ds
pop
and
dec
dec
mov
inc
xor
pop
adc
lods
xchg
iret
sbb
xchg
add
xchg
jae
xor
sub
jl
fisttp
sub
cdq
outs
addr16
in
pop
jne
jmp
cmp
mov
test
repz
in
mov
sub
lahf
xlat
popf
add
add
mov
gs
jnp
inc
imul
push
(bad)
push
jecxz
or
shl
cmp
jnp
sbb
jne
loope
cmps
mov
shl
(bad)
cdq
hlt
aam
rcr
mov
add
xor
push
rcr
je
cmp
bound
mov
dec
es
(bad)
fimul
popf
cmp
cld
inc
mov
icebp
(bad)
cwde
stos
ret
or
jns
repz
stc
dec
fbld
cmps
sbb
pop
jns
dec
mov
inc
pop
add
jnp
shr
jle
dec
jle
leave
adc
push
sub
and
nop
jo
outs
aaa
push
in
pop
add
fild
(bad)
cdq
jae
pop
shr
and
dec
pop
stc
stos
cmp
ret
repz
push
xlat
shr
popa
jmp
inc
rol
inc
out
in
push
sbb
fs
call
xor
scas
cmc
into
push
ret
mov
shr
pop
scas
push
pop
mov
sbb
jecxz
adc
sbb
jo
daa
inc
pusha
fs
aad
sub
aaa
pop
outs
cs
cmp
mov
mov
dec
jno
(bad)
mov
mov
ret
jnp
int3
mov
xor
leave
fbld
mov
jl
cs
or
sbb
pop
fnstcw
mul
dec
ret
jo
sbb
mov
push
fwait
out
sbb
fisubr
and
aad
mov
icebp
add
cmp
dec
jnp
fisubr
or
loopne
test
inc
jns
cmp
(bad)
mov
mov
lods
idiv
inc
in
sahf
test
cli
(bad)
je
imul
pop
cmc
ficom
xor
shl
loopne
dec
dec
xchg
in
mov
xchg
fs
aad
xchg
push
ja
mov
and
sbb
in
xor
jnp
repnz
or
scas
inc
and
mov
ja
jo
dec
dec
dec
call
and
and
lahf
out
daa
and
test
movs
cmps
movs
sub
lods
mov
push
push
repnz
inc
jb
mov
leave
cmp
lods
push
xchg
jp
mov
fmul
jns
and
mov
mov
sub
pop
mov
and
mov
adc
or
xor
jl
cld
and
cmp
call
imul
lock
fisubr
inc
sbb
fst
mov
inc
(bad)
mov
(bad)
out
pusha
and
aad
adc
(bad)
imul
jo
mov
adc
pusha
cmp
cs
clc
inc
movs
popf
mov
and
popa
out
add
push
aas
rcr
out
adc
sub
(bad)
jmp
or
lahf
push
sbb
jmp
adc
xchg
out
ins
lahf
mov
mov
daa
and
ret
jno
dec
fldcw
adc
es
mov
cwde
aad
xchg
mov
in
and
fld
adc
mov
dec
and
scas
(bad)
mov
std
and
into
mov
inc
xor
mov
mov
pcmpgtw
mov
aaa
xor
(bad)
fsubr
es
call
popf
jno
hlt
xor
push
cdq
pop
loope
cld
cmp
int
or
ss
jle
xchg
push
fs
inc
ja
or
outs
fdivr
mov
push
nop
in
xchg
jns
push
push
std
xor
or
sahf
lods
sbb
inc
fcmovb
std
test
push
sar
fisubr
jns
scas
or
sbb
or
cmp
xchg
pop
aas
ret
or
add
xchg
out
or
outs
ds
test
push
mov
push
daa
mov
loop
push
pop
cmps
mov
dec
in
call
push
mov
lods
in
je
push
fs
dec
adc
es
mov
xchg
push
push
xchg
xor
jl
retf
mov
sti
xchg
push
or
xchg
shl
std
ror
xchg
mov
imul
jbe
sbb
pushf
sar
ret
mov
fiadd
adc
push
or
std
clc
jno
cdq
mov
bound
aaa
dec
ins
sbb
mov
mov
xor
inc
in
push
stc
sub
test
push
in
int3
(bad)
fsub
ja
pop
jae
stos
mov
pop
jbe
dec
pop
in
ds
mov
cmc
les
ins
inc
push
adc
movs
dec
leave
repz
pop
jle
repz
xor
es
retf
cmp
mov
pop
je
pop
cmp
(bad)
jmp
fbld
fnstsw
push
xlat
or
lock
stos
mov
ins
ret
cmps
adc
cli
or
cmp
or
test
fdivr
or
xlat
push
or
cmp
leave
scas
push
popf
ffreep
(bad)
push
ror
clc
imul
or
fwait
sbb
test
mov
in
mov
mov
leave
call
lds
mov
imul
fstp
rcl
pop
jmp
jmp
push
or
sbb
in
imul
mov
cmp
fmul
pop
mov
das
bound
ds
out
mov
cs
pop
push
jge
lock
pop
dec
es
scas
aaa
cmp
das
test
pop
stos
xor
cmp
cmp
inc
cld
shl
addr16
pop
inc
xlat
dec
shl
push
loop
xor
cld
xor
enter
and
pusha
scas
dec
shr
cld
push
inc
adc
outs
shr
je
add
jae
fwait
jmp
inc
or
(bad)
popw
fstp
xor
mov
push
adc
jo
push
imul
js
nop
into
jbe
push
mov
inc
dec
(bad)
push
imul
inc
jo
in
jb
repnz
cmp
popf
mov
mov
jnp
out
test
adc
and
int
and
shr
xchg
and
es
jo
xchg
pop
fimul
loope
cld
clc
adc
mov
pop
or
add
pop
ret
loopne
xlat
inc
push
not
add
sbb
push
je
jmp
imul
push
outs
mov
push
js
in
inc
dec
fld
dec
push
ret
jge
dec
push
push
cdq
add
cmp
pop
or
sub
bound
pop
cmp
hlt
gs
ror
les
adc
mov
cs
nop
cmp
icebp
lds
mov
pop
and
ins
sbb
xchg
mov
jp
mov
jbe
pop
jb
push
ins
cmp
cmp
push
mov
ret
dec
int
test
cmc
pop
shr
mov
(bad)
mov
push
xchg
into
jb
mov
es
fbstp
add
cli
xor
dec
or
push
in
cmp
adc
xchg
mov
sti
shr
sahf
call
inc
mov
and
mov
add
ja
add
or
pop
push
lods
mov
push
sub
into
test
in
dec
ret
dec
ror
push
jge
adc
push
pusha
fidivr
dec
pop
addr16
xchg
je
inc
push
or
add
mov
cmp
mov
cdq
push
mov
jg
mov
jns
jmp
and
enter
leave
in
add
lods
js
shr
imul
js
mov
sub
fbld
fiadd
xor
and
and
je
xchg
cli
int3
sbb
cwde
inc
cmp
mov
mov
bound
inc
sub
popa
movs
inc
pushf
add
mov
sub
mov
and
jecxz
arpl
imul
xchg
or
adc
push
jnp
sbb
dec
popf
repnz
xor
sub
jne
mov
xchg
and
sbb
mov
push
lock
dec
(bad)
enter
sbb
sub
mov
(bad)
movs
adc
mov
cmp
lahf
mov
jp
mov
xor
fadd
ins
jmp
movs
cmp
ficomp
pop
xor
les
call
adc
mov
std
std
dec
adc
out
sub
mov
xor
imul
jbe
or
or
stos
cwde
add
sar
adc
mov
les
in
loopne
xor
jnp
gs
cmovp
popa
shl
jns
mov
dec
xchg
(bad)
xchg
xlat
(bad)
inc
mov
movs
call
iret
imul
pop
or
push
inc
fs
xor
outs
lahf
push
push
cld
bound
push
mov
movs
test
mov
loop
retf
or
xor
mov
cmp
aam
jo
and
mov
movs
imul
es
inc
test
(bad)
je
xchg
rcr
pop
or
neg
jb
scas
inc
nop
outs
adc
shl
and
push
dec
out
jnp
int3
ins
jne
rol
add
shr
cmps
jne
inc
add
dec
inc
ja
dec
fadd
cmp
rcr
push
shl
xchg
call
dec
sbb
dec
lods
push
hlt
adc
mov
fs
cmps
shr
jo
or
add
xchg
and
int
(bad)
shr
hlt
icebp
cmp
addr16
fsubp
pusha
loop
jbe
loope
(bad)
hlt
imul
dec
fmulp
fwait
xor
sbb
add
sub
dec
push
fmulp
lea
mov
inc
fisubr
rcr
mov
call
xchg
dec
js
cmp
push
fldenv
sbb
in
push
ds
push
adc
int
cs
cld
jbe
jmp
cmp
lock
hlt
(bad)
fnstcw
je
shl
addr16
dec
ja
mov
cmc
hlt
mov
pop
mov
xor
addr16
mov
or
xor
(bad)
sbb
(bad)
xchg
jl
rcl
push
xor
shl
push
mov
pop
jmp
addr16
cmp
in
jge
sti
outs
in
ret
xchg
mov
jmp
shr
push
cdq
inc
jmp
mov
cmp
mov
jmp
out
clc
loop
dec
rol
iret
imul
outs
inc
rcl
cmp
arpl
ja
clc
push
pop
ins
jmp
sub
and
cmp
dec
loop
scas
dec
cli
dec
aas
dec
dec
and
loope
jae
stc
cld
and
push
ret
mov
push
or
enter
mov
push
push
fwait
js
cmp
fdiv
outs
adc
and
stc
xchg
mov
cmp
xchg
test
iret
loope
dec
add
mov
jae
fnsave
in
xchg
xor
pop
ds
jne
sub
inc
xor
cli
add
push
sub
loope
lea
adc
unpcklps
mov
(bad)
in
sti
fs
adc
jecxz
sub
mov
push
outs
jae
xor
js
xchg
ss
mov
xor
rcl
orps
jae
cmc
and
repnz
inc
push
cs
daa
jg
ret
and
ds
push
mov
jge
xor
loope
xor
and
loopne
das
fldenv
daa
mov
ds
outs
sbb
cwde
inc
xor
scas
in
add
jne
xor
loope
add
add
fdivr
out
lahf
inc
inc
cmp
and
stc
fs
shl
sub
stos
cwde
cmps
or
ja
and
pop
bound
nop
push
jbe
jno
cmp
iret
xor
jp
mov
sbb
jmp
add
js
add
imul
mov
mov
pop
cmp
mov
call
pop
mov
repnz
mov
je
mov
lods
jp
jle
sub
shl
push
inc
mov
sbb
dec
xor
ds
fdiv
cmp
ins
(bad)
stc
push
mov
cs
xchg
mov
iret
loop
xor
loopne
sub
add
daa
aas
pop
dec
out
xor
aam
out
loop
ins
outs
add
imul
jnp
rcl
ins
push
and
loopne
pop
pop
jne
outs
pop
or
lods
mov
arpl
fnstcw
cmp
mov
jno
inc
(bad)
gs
ins
sar
mov
ss
das
out
xor
enter
cmp
inc
lea
push
lea
push
ret
fnsave
jne
js
pop
xchg
and
lods
and
cmp
pop
mov
push
ds
add
popf
xchg
rol
inc
repnz
out
nop
cmp
ins
jmp
and
sbb
push
mov
nop
stos
aad
in
les
shl
cmp
daa
jae
fbstp
inc
xchg
pop
cmp
cwde
sbb
jmp
xchg
in
das
inc
out
xchg
jb
fnstcw
shl
pop
dec
adc
jne
fst
imul
or
fs
cmps
cmova
call
jne
test
add
adc
inc
in
push
or
or
jecxz
adc
or
jmp
push
sub
pop
fst
xor
sub
jae
jae
enter
xchg
mov
ja
pop
cmc
sbb
mov
or
dec
mov
movs
fild
outs
and
jnp
adc
outs
je
xchg
sahf
imul
(bad)
or
pop
mov
movs
jne
stos
(bad)
sub
scas
gs
cmp
push
pop
sub
scas
jl
jae
or
cmp
cld
out
cmp
int
push
mov
xor
aad
adc
adc
cmp
(bad)
stos
push
fist
test
cs
xchg
in
dec
dec
inc
cld
repnz
push
rdpmc
retf
jns
and
fistp
sbb
leave
stos
stos
dec
inc
mov
hlt
jae
jecxz
jmp
arpl
or
or
js
sar
popa
push
adc
push
scas
cmc
fsubp
div
ss
and
sbb
inc
sbb
test
mov
loope
ret
push
pop
mov
outs
dec
sub
xor
cmp
add
jle
cmp
cmp
push
imul
repnz
cli
adc
xor
repnz
(bad)
test
pop
imul
dec
xor
movs
arpl
bsf
sub
or
add
add
rcr
in
jnp
jmp
pop
test
in
ds
icebp
inc
(bad)
lock
xchg
aam
push
jb
sbb
jne
outs
inc
ins
mov
mov
pusha
pop
fistp
jb
add
loop
push
fidivr
std
push
gs
inc
sub
scas
loopne
push
rsm
sub
cdq
dec
cmp
ins
mov
xchg
inc
dec
in
mov
aas
inc
mov
dec
leave
mov
bound
retf
gs
ret
sbb
lahf
add
imul
cmc
out
add
loopne
jecxz
add
scas
aas
shl
inc
xor
repz
jp
retf
jo
xor
push
sub
mov
sbb
jbe
pusha
sbb
(bad)
xor
fs
shr
mov
mov
jbe
les
je
xor
add
ret
cmp
dec
dec
jnp
xor
jno
das
movs
add
inc
lods
pusha
rol
and
std
or
sbb
push
xor
and
xor
jnp
movs
adc
icebp
push
popf
aam
xchg
mov
jb
movs
in
ja
jns
ffreep
mov
jbe
sbb
mov
popa
call
rol
mov
aaa
dec
cmp
push
push
jno
sahf
or
mov
jmp
scas
pushf
sub
mov
jns
dec
fcom
xor
dec
sti
in
xchg
(bad)
outs
std
fs
jne
jecxz
and
push
mov
mov
mov
cmp
repnz
push
fsubr
sub
cmp
add
rcl
xchg
xor
mov
dec
add
xor
or
fsub
ficomp
test
mov
cmp
or
xor
mov
popf
out
js
test
loop
ins
dec
out
jns
and
fsubr
dec
xchg
dec
cmps
mov
nop
inc
mov
pop
ins
sbb
inc
sub
aas
adc
pop
aaa
mov
add
pop
lea
jecxz
pop
push
cmp
mov
xor
push
pop
push
adc
adc
sbb
aaa
cld
sub
xor
add
inc
scas
add
pop
push
and
std
sti
ins
mov
pop
jno
aaa
adc
aam
cmp
(bad)
(bad)
outs
das
sti
sbb
sbb
test
xchg
ins
mov
ds
pop
push
inc
in
fmul
or
inc
data16
cmps
(bad)
rcl
add
add
xor
inc
sbb
ret
cmps
pop
ret
fcomp
add
and
and
adc
sub
dec
hlt
mov
pop
imul
mov
lods
mov
jns
mov
dec
test
or
je
mov
fsub
push
push
lea
inc
xor
popa
xor
add
sahf
scas
push
dec
add
mov
stos
jb
(bad)
in
int3
daa
or
inc
lahf
jns
nop
in
push
call
jbe
push
pop
sti
adc
les
mov
jb
mov
mov
repz
inc
inc
adc
push
add
es
mov
sub
ret
pop
aam
sub
xor
ss
ror
jae
sar
jle
mov
data16
popf
movs
lock
xchg
imul
repz
addr16
cmp
std
sub
push
cwde
repz
cli
pop
xor
mov
clc
ficom
xor
mov
inc
out
out
jae
cwde
inc
dec
pop
fs
gs
push
pop
cdq
jne
sbb
jmp
push
xlat
cdq
mov
cmp
mov
dec
test
inc
(bad)
jle
arpl
stos
push
outs
retf
mov
pop
jp
jbe
int3
lea
mov
or
or
loop
pop
arpl
or
add
(bad)
fstp
out
adc
ror
(bad)
std
inc
fidiv
adc
addr16
repz
cwde
pop
repz
xchg
ja
fs
and
or
repz
ror
(bad)
jp
pop
sbb
xchg
add
loope
push
cmp
ins
pop
ja
(bad)
int3
sub
pop
fistp
dec
hlt
push
jge
loope
in
call
inc
jecxz
loopne
xchg
sub
cmp
sbb
cmovno
jmp
jl
jl
pop
sti
sub
jmp
sar
outs
or
and
mov
sbb
or
cmp
jg
popa
scas
pop
xchg
cmc
and
add
out
dec
rol
daa
push
cmp
pushf
cmp
mul
add
cmp
bnd
pop
and
data16
loope
sti
in
add
dec
addr16
push
or
sub
fsubr
shr
lods
inc
mov
push
sbb
xchg
mov
jo
mov
je
or
out
mov
inc
clc
and
inc
and
inc
sub
in
push
inc
in
jmp
jbe
push
jle
adc
xchg
adc
in
or
push
jne
cmc
inc
push
fadd
adc
push
enter
sbb
fdiv
cmps
nop
movsx
data16
imul
pop
and
jb
addr16
inc
loope
stos
fbld
push
mov
bnd
out
bound
push
repnz
mov
fistp
dec
sar
adc
cld
add
cmp
mov
jmp
and
mov
popa
and
push
fsubr
es
(bad)
imul
xor
adc
xor
sub
push
pusha
jns
jne
mov
jle
test
call
add
fs
mov
and
stos
pop
dec
cmp
sub
xchg
and
mov
out
lahf
xchg
jnp
cmp
dec
jmp
jp
popf
in
and
add
std
repnz
daa
aas
(bad)
cwde
outs
sti
ret
cli
dec
outs
jno
inc
stc
jp
and
fsub
fldcw
sbb
xor
and
pop
sahf
inc
xchg
gs
sub
and
push
add
sub
(bad)
je
or
lds
push
or
add
or
gs
js
fs
mov
jmp
and
jb
stos
or
rcr
xor
je
add
dec
ret
jmp
adc
jl
xchg
and
add
sbb
arpl
scas
xor
mov
jge
ss
add
ds
mov
inc
call
jl
pop
push
ret
popa
mov
(bad)
jbe
and
xor
add
ss
xchg
cwde
mov
lds
or
jmp
pop
push
fs
ins
inc
pop
sahf
sbb
int
push
inc
aas
pop
sbb
mul
mov
addr16
inc
sahf
push
xchg
xchg
jle
and
adc
dec
sbb
ret
jbe
dec
push
pusha
cs
add
push
pop
and
inc
xchg
aad
cli
rcl
adc
xor
aaa
mov
les
sbb
pop
pop
add
push
xor
(bad)
cmc
and
rcr
sbb
jne
out
sub
cdq
(bad)
movs
arpl
pop
push
inc
fld
push
rcr
ret
in
add
sub
xor
cmp
scas
add
neg
bound
add
jae
push
jbe
xchg
pushf
clc
popf
and
inc
pop
xor
jmp
cmp
mov
push
out
ret
inc
mov
enter
jp
sbb
rcl
ins
ins
cmp
sub
xor
in
pop
ja
push
push
mov
jmp
xchg
and
ficom
hlt
imul
sbb
lods
movs
adc
xor
jmp
jmp
(bad)
push
scas
fmul
es
std
stos
stos
mov
inc
adc
mov
mov
inc
loopne
loopne
push
ret
pop
pop
pop
sar
popa
or
dec
jl
pushf
das
pop
cmp
packuswb
pop
das
fisub
push
cmp
add
rcr
mov
sbb
ja
sbb
cdq
mov
push
push
jbe
and
je
aad
jae
jae
inc
cmp
and
lahf
push
jb
push
inc
lods
imul
and
sub
cdq
mov
jae
cld
cmp
popa
repz
mov
xlat
fwait
push
outs
dec
dec
loop
scas
fwait
pop
xchg
dec
fadd
and
jb
pop
add
test
jmp
add
addr16
mov
imul
pop
mov
enter
pop
jbe
out
adc
adc
xchg
pop
dec
sub
sar
xchg
into
ffree
inc
les
xor
jle
pop
sbb
sbb
lods
sbb
fist
pop
mov
pop
add
retf
ss
jbe
mov
ins
js
ret
xchg
imul
push
pop
ret
jmp
ja
xor
wbinvd
aam
test
mov
pop
pusha
inc
int
mov
jbe
adc
dec
sub
mov
in
push
sub
mov
movs
sbb
push
neg
adc
xchg
les
fimul
adc
push
pop
add
sahf
xor
imul
mov
call
inc
cmc
sub
inc
into
fwait
aaa
mov
mov
cmp
pushf
push
addr16
pop
arpl
sub
ins
mov
xchg
pop
sub
inc
pushf
and
dec
pop
outs
icebp
movs
dec
xor
add
pop
jno
xlat
lods
fs
mov
cmp
xor
(bad)
jns
mov
xchg
stos
int
iret
dec
ret
or
or
sub
or
sbb
das
jmp
xchg
test
mov
cmps
je
xor
dec
repz
push
test
push
adc
cwde
jnp
and
inc
aas
push
cmp
mov
cmp
ficomp
std
adc
and
sub
mov
push
jp
mov
std
sub
jp
jle
push
or
inc
mov
scas
lods
jle
lds
out
xchg
ss
arpl
inc
cmp
sub
enter
cdq
addr16
pop
jge
push
shl
xor
pop
sti
movs
pop
mov
adc
mov
call
dec
dec
outs
aaa
repz
push
jns
cmps
push
test
pop
sbb
jno
mov
pop
(bad)
stos
imul
test
jo
mov
cmp
mov
retf
nop
repz
pop
cmp
(bad)
pop
sub
daa
sbb
dec
aas
mov
mov
adc
mov
pop
mov
pop
jmp
stos
and
les
or
mov
sub
aas
or
xchg
or
mov
mov
addr16
jbe
(bad)
test
jp
aaa
pop
std
in
std
int3
fstp
fisttp
icebp
pop
push
fist
std
xlat
movs
fs
dec
mov
xchg
jae
add
nop
add
ins
sub
pop
ret
push
sbb
in
scas
sar
ss
inc
pop
cmp
jp
pushf
cli
mov
xor
sub
jle
nop
fld
into
popf
xor
mov
push
jmp
popf
mov
adc
inc
sbb
push
lock
xchg
inc
je
pop
pop
xor
imul
cli
repz
ret
aad
sub
lods
jnp
adc
and
scas
mov
mov
stos
pop
pop
into
inc
cmp
stc
mov
sub
int
das
and
xor
adc
and
add
pop
push
push
xor
sub
idiv
aas
push
fcom
sbb
ss
sub
push
dec
scas
jp
mov
xor
inc
arpl
shr
ins
outs
xchg
push
jl
repz
dec
mov
inc
mov
jae
sbb
or
cld
sbb
scas
(bad)
push
mov
not
sbb
xchg
pusha
fstp
cmp
aad
push
xlat
es
ffree
std
xor
mov
mul
dec
not
pop
xor
dec
sub
fldenv
sub
inc
and
xlat
mov
mov
retf
push
mov
and
mov
mov
or
je
mul
loop
mov
mov
or
xchg
in
aam
int
cmps
xor
sbb
in
call
paddq
out
mov
jg
and
push
dec
mov
lds
repnz
or
inc
mov
lds
inc
neg
ss
mov
inc
gs
stos
jmp
and
xor
xor
dec
xchg
addr16
xchg
cmp
imul
jle
aam
stos
inc
jmp
data16
sub
push
ja
and
scas
and
cmc
out
adc
push
xor
mov
pop
jbe
sub
inc
popa
mov
ins
mov
or
int
ds
pop
xchg
fstp
ins
xor
inc
imul
adc
aad
cmc
js
popa
(bad)
scas
mov
sbb
fisubr
je
push
push
sub
data16
and
imul
ss
add
cmp
ret
push
fimul
fstp
push
xor
cld
and
xchg
cmp
call
pop
ja
jne
xchg
sub
mov
adc
addr16
jbe
jp
jmp
or
(bad)
ret
ret
or
inc
ret
imul
ja
xor
loop
xlat
sti
hlt
jmp
stos
mov
cli
sub
int
mov
mov
sbb
xor
xrelease
mov
fld
(bad)
sbb
add
div
mov
shl
pushf
fs
jne
xlat
data16
hlt
shr
pop
xchg
inc
and
inc
dec
and
leave
xchg
cmp
loopne
mov
xchg
pop
dec
int
pop
add
mov
jp
clc
ror
shl
mov
fs
mov
cmp
nop
mov
sbb
or
pop
dec
dec
sbb
and
pushf
mov
inc
aad
dec
xor
cdq
dec
rol
adc
movs
ror
push
pop
pop
sbb
mov
push
mov
pop
icebp
imul
jns
jbe
or
cmp
or
in
mov
inc
mov
arpl
das
jb
cmp
dec
out
loope
(bad)
ror
adc
popf
sbb
pop
ins
jmp
jb
stos
push
jbe
dec
cmps
std
mov
ret
js
ds
repz
mov
sub
mov
stc
mov
mov
stos
mov
jae
dec
enter
call
push
(bad)
retf
or
rol
leave
cdq
loopne
pusha
dec
inc
sub
shr
ins
mov
dec
rcl
sbb
inc
(bad)
or
leave
aaa
aas
bound
or
or
cli
mov
lock
jecxz
and
inc
sbb
xor
rol
arpl
jb
fsub
lds
push
ss
mov
jbe
pop
inc
addr16
or
jns
lahf
sti
std
in
cmps
pop
pop
push
adc
(bad)
jo
repz
or
fmul
sub
mov
data16
xchg
int
push
mov
and
sbb
pop
adc
lock
rcr
mov
mov
(bad)
xchg
add
(bad)
sti
sub
lock
inc
sub
mov
jmp
lods
je
inc
int3
xor
inc
int
adc
jmp
lods
pop
rcl
sbb
mov
jns
or
lods
adc
aaa
ds
lock
cld
imul
mov
movs
xchg
data16
adc
xchg
add
loope
jmp
xor
mov
out
jl
arpl
ins
repnz
leave
daa
jmp
shr
test
xchg
add
cld
jp
adc
or
aaa
pop
movs
js
mov
into
rcl
jge
nop
idiv
imul
fdiv
sbb
add
add
(bad)
mov
jne
clc
cdq
gs
fucom
int
addr16
aaa
test
das
ss
movs
clc
adc
add
icebp
or
fs
mov
jne
outs
ins
std
add
bound
or
lods
adc
dec
jl
into
test
shr
mov
clc
mov
inc
aas
xchg
add
or
cmc
mov
jmp
pop
stc
mov
data16
retf
jecxz
fisub
or
lods
and
nop
mov
cmp
lahf
int3
fdivp
cmp
pop
stos
pushf
es
hlt
xor
sbb
dec
pop
retf
les
jmp
imul
rol
arpl
and
lock
add
dec
cmps
retf
fwait
in
push
iret
mov
dec
lahf
pop
daa
(bad)
out
sti
adc
in
adc
cmp
cld
in
daa
ins
cmps
aam
iret
pop
inc
outs
dec
mov
mov
add
(bad)
pusha
push
adc
push
int3
dec
pusha
popa
jp
aam
xchg
inc
mov
cmp
hlt
in
nop
sar
data16
cmp
mov
retf
jmp
mov
out
ins
ds
test
inc
movs
mov
cmp
ins
xor
lods
mov
mov
aam
imul
adc
inc
sub
les
mov
out
out
and
and
jp
inc
adc
add
js
and
and
mov
fadd
lahf
lods
cmp
xchg
mov
mov
stos
xchg
xchg
outs
std
outs
cmp
sahf
test
mov
jp
and
cmp
mov
add
call
inc
aam
mov
(bad)
retf
and
cmp
stos
leave
out
pop
scas
loopne
push
stos
xor
sbb
movs
mov
sbb
in
cmc
mov
mov
inc
mov
aas
sbb
dec
xlat
dec
cmp
pop
xchg
dec
inc
clc
mov
addr16
or
stos
nop
call
inc
push
scas
adc
cmp
outs
stos
cdq
in
in
mov
mov
jecxz
mov
inc
dec
inc
pop
push
xchg
xchg
pusha
in
sbb
inc
ins
mov
mov
xor
in
jae
cmp
fld
jbe
loopne
stc
mov
jecxz
sbb
enter
mov
mov
out
mov
cs
add
push
inc
adc
pop
mov
scas
cwde
pop
fs
mov
pop
push
repnz
mul
ds
outs
repz
sahf
ss
in
push
into
outs
js
repnz
enter
out
icebp
push
and
popf
and
jno
or
in
xchg
pop
and
dec
jmp
or
pop
in
dec
pop
repz
or
xchg
pusha
imul
popf
lea
jl
sahf
and
jl
or
rcr
scas
sub
mov
dec
out
jbe
test
adc
or
rcl
frstor
cld
repnz
mov
cmp
xor
aaa
mov
outs
mov
out
xchg
fwait
and
dec
cmc
sti
in
xchg
movs
add
add
sub
bound
std
mov
dec
pop
push
retf
xchg
inc
pop
cmps
mov
(bad)
fs
dec
push
cld
or
das
aaa
fimul
dec
add
cmp
das
jae
test
stc
(bad)
jg
aaa
add
mov
out
leave
xchg
sub
addr16
out
push
adc
cmp
inc
sbb
mov
sub
daa
jp
cmp
push
js
inc
(bad)
push
xor
mov
cmp
mov
and
fcom
jge
dec
retf
sbb
test
dec
retf
push
addr16
xchg
pusha
cmp
in
test
aaa
pop
mov
test
jb
mov
add
mov
cmovns
rcr
imul
inc
fmul
sbb
movs
test
iret
out
repnz
(bad)
mov
sbb
add
and
ss
dec
xchg
out
mov
shr
in
xchg
retf
daa
add
mov
cmp
ins
in
les
call
jp
push
pusha
in
inc
jo
push
ja
icebp
dec
add
add
and
dec
stc
add
or
cmp
mov
jae
push
ror
cmp
int3
leave
pop
das
and
or
adc
xchg
push
mov
not
push
out
add
(bad)
sbb
mov
xchg
jmp
add
cmp
add
pop
mov
sbb
in
xchg
cld
cmp
inc
leave
mov
xor
jmp
mov
or
sbb
lods
push
ret
xor
mov
and
inc
adc
pop
mov
dec
pop
dec
sbb
lods
push
sbb
cmp
pop
dec
push
add
push
ret
xchg
cmp
pop
add
push
xchg
adc
push
and
mov
pop
jmp
ss
inc
sahf
push
lea
add
loopne
mov
(bad)
add
out
ds
test
mov
fistp
aas
ret
lea
sahf
int3
pop
imul
push
cmp
sub
mov
loopne
imul
cmp
jbe
(bad)
xchg
sti
push
dec
dec
add
push
je
fucomi
fadd
fcomp
cmp
mov
cmp
lds
inc
int3
cwde
adc
jle
xchg
push
retf
jne
ret
sahf
ja
jb
push
rol
cmp
imul
jae
jle
cwde
sahf
repnz
stos
jle
xchg
inc
in
movs
mov
test
or
push
push
pop
push
repz
mov
adc
dec
push
es
cli
shr
push
and
sub
inc
and
xor
gs
inc
xor
pop
dec
cmp
inc
aas
xor
xchg
push
xchg
or
jns
jecxz
xor
ss
rcr
iret
mov
add
lods
jbe
ds
push
mov
mov
fsub
repnz
inc
push
xchg
and
xchg
xchg
sar
mov
aaa
mov
sbb
mov
jns
cmp
das
and
test
mov
ret
imul
jmp
ss
jmp
cmp
or
std
cmp
mov
test
adc
bound
cmp
(bad)
mov
cmp
in
je
aas
dec
dec
test
loopne
mov
ss
inc
mov
rcr
xor
xchg
dec
dec
adc
in
call
je
ret
sub
rcr
or
(bad)
sub
mov
xchg
call
enter
(bad)
add
idiv
jns
das
ss
jmp
stos
les
std
jbe
cmp
out
dec
fild
daa
div
mov
xchg
add
inc
jp
lds
shr
in
rcr
inc
or
in
and
sub
jns
inc
jle
clc
retf
sbb
sub
rcl
push
or
xchg
push
aaa
cld
stos
dec
or
retf
mov
push
addr16
shl
fld
mov
cmc
lods
xchg
pop
adc
pop
pop
daa
cld
repnz
ret
fimul
sbb
int3
out
push
(bad)
clc
mov
aam
mov
pop
cld
mov
jmp
mov
fstp
cmp
call
mov
popf
stos
cld
pop
syscall
sub
(bad)
mov
hlt
jae
iret
push
xchg
pop
mov
jmp
inc
outs
mov
test
iret
sbb
adc
xchg
cmp
(bad)
ss
xor
mov
mov
outs
repnz
bound
mov
add
add
js
(bad)
out
mov
(bad)
popa
jecxz
test
out
(bad)
(bad)
push
mov
xchg
jge
inc
jnp
outs
pop
aas
jmp
dec
repnz
or
pop
jne
pop
sbb
sbb
or
sbb
cmps
mov
aad
pop
stos
jmp
lods
jg
in
rcl
and
dec
stc
add
pop
push
push
mov
pop
jo
push
int3
addr16
cmp
cmp
push
sbb
mov
imul
ja
and
push
(bad)
scas
add
int3
jns
or
div
imul
mov
stc
cmp
ffreep
jno
cmp
sbb
dec
adc
adc
and
push
rol
cli
sbb
lods
jo
sub
jmp
dec
xor
and
scas
outs
lods
or
je
dec
push
add
lods
inc
test
sbb
daa
dec
outs
mov
cli
cwde
sbb
sbb
loop
mov
xor
das
imul
(bad)
dec
sar
or
test
dec
xchg
jge
sbb
inc
addr16
sar
push
cwde
and
aaa
jge
fadd
outs
sub
fdiv
or
stos
pop
test
std
or
push
push
cmps
sbb
push
gs
test
inc
cdq
jae
ins
inc
movs
jmp
in
adc
and
inc
xor
sub
outs
xchg
mov
mov
nop
in
dec
adc
je
sub
outs
mov
push
jmp
sbb
or
mov
push
adc
div
ds
nop
and
push
and
cmp
pop
stos
(bad)
xchg
push
inc
cmp
(bad)
cli
stos
add
xor
outs
push
inc
imul
adc
pop
and
inc
test
add
gs
lahf
jb
or
push
push
and
lods
in
ds
xlat
add
cmp
retf
cmps
mov
xchg
push
fldcw
(bad)
mov
loop
imul
mov
lock
jp
sub
int
clc
das
loope
loop
outs
or
mov
add
lods
scas
or
inc
pop
xor
imul
add
jo
and
xor
adc
sub
add
cmp
cwde
push
repz
test
fisub
call
mov
sub
jnp
cmp
call
cmps
adc
leave
sbb
ins
sub
lds
inc
mov
push
scas
mov
add
mov
rcl
jbe
sti
int3
xchg
shr
sub
jge
repnz
leave
rcr
cwde
mov
outs
fs
mov
ins
xor
xlat
add
mov
lahf
shl
in
out
jp
data16
enter
and
sub
ins
ds
cmp
test
jbe
sar
shr
jp
jle
popa
push
mov
shl
fadd
xor
jae
addr16
retf
pop
xchg
inc
inc
outs
inc
and
es
popf
call
inc
(bad)
cld
out
pop
lea
dec
in
retf
gs
push
or
cli
and
retf
adc
cmp
sti
cli
jp
outs
jns
cmp
lahf
sub
out
imul
cmp
pop
xor
mov
and
les
cmp
movs
inc
mov
imul
jmp
test
and
mov
push
les
mov
push
pop
pusha
lock
inc
or
mov
mov
mov
and
jnp
sbb
pop
aam
sbb
or
mov
mov
popa
or
jecxz
jnp
popa
daa
adc
scas
daa
es
xor
(bad)
rcr
(bad)
clc
and
dec
call
cmc
mov
es
ss
jns
addr16
mov
inc
inc
retf
add
add
add
in
dec
shr
outs
mov
and
ret
pop
test
ss
outs
inc
popa
add
inc
and
xchg
adc
addr16
out
lea
(bad)
add
adc
ret
xchg
daa
test
popf
and
sbb
jmp
(bad)
cmp
daa
dec
clc
push
mov
(bad)
jge
sbb
popa
scas
daa
inc
or
jns
sar
mov
mov
sbb
dec
sar
fisubr
movs
lahf
fist
pop
fxch
adc
cmp
add
js
inc
test
loopne
inc
cmc
outs
push
les
lahf
jbe
(bad)
dec
sbb
ss
mov
bound
mov
(bad)
dec
ret
nop
mov
gs
ins
cwde
retf
adc
pushf
retf
(bad)
fwait
jge
pop
shl
iret
xchg
mov
push
ins
xchg
int3
dec
lahf
xchg
call
outs
mov
aas
sbb
jl
ss
xchg
aas
frstor
cdq
push
sub
jo
pop
mov
push
(bad)
lods
outs
add
jecxz
aad
imul
retf
sub
dec
mov
jle
jle
out
(bad)
loope
add
(bad)
jmp
gs
cmp
push
mov
sub
repz
ror
in
jbe
into
in
mov
cmp
cmps
mov
xchg
ret
je
xor
push
jne
or
push
or
imul
test
dec
leave
fisubr
mov
pop
gs
push
push
mov
fiadd
gs
inc
xchg
sbb
fnstsw
jg
add
ins
(bad)
sti
out
enter
aam
icebp
xlat
loope
ins
ret
fcomp
into
push
jb
mov
popf
je
pop
mov
add
add
std
aaa
push
in
cld
sar
adc
cmp
out
mov
jle
adc
inc
inc
aaa
add
xchg
jecxz
ret
sub
es
std
stc
imul
popf
repnz
pusha
shl
pop
loop
out
jnp
cmp
jmp
outs
mov
pop
cli
lock
mov
test
adc
mov
call
call
xor
cmp
push
xchg
push
movs
xchg
mov
pop
ja
je
or
sub
pop
sar
mov
pop
mov
mul
in
xlat
mov
mov
fnstsw
je
mov
ins
dec
fdivr
ja
ds
jne
out
jge
sbb
ds
dec
mov
mov
xor
sub
add
scas
dec
push
or
dec
push
inc
cmps
fs
out
ja
rcl
sbb
add
lock
in
test
xor
das
pop
sub
je
or
push
sub
jbe
adc
pop
or
std
inc
jl
xor
mov
fnstcw
mov
sbb
xchg
imul
and
(bad)
push
out
ret
fwait
iret
and
adc
or
push
cld
out
repnz
ds
in
(bad)
mov
ins
js
xor
adc
fistp
mov
mov
ins
sub
sbb
out
aaa
(bad)
loop
pop
aas
push
adc
push
ror
mov
mov
imul
shl
push
pop
pop
add
or
sbb
data16
and
cmc
mov
xor
mov
sar
mov
pop
add
jb
in
movs
ja
jns
(bad)
aad
cli
cdq
xchg
mov
ret
xor
call
bound
or
cmp
mov
mov
mov
mov
outs
ror
pop
push
aas
dec
push
sub
loop
retf
inc
ror
inc
jns
add
retf
mov
or
gs
add
mov
(bad)
pop
push
jbe
sahf
dec
sub
push
fidivr
mov
xor
push
xchg
lahf
xor
cmc
mov
sbb
or
xor
push
gs
mov
fst
mov
push
sahf
in
jmp
xor
inc
cmp
sub
and
ins
cmp
pop
cli
xchg
pcmpgtw
sbb
or
push
sbb
je
ins
loope
or
jo
mov
sbb
fidivr
(bad)
inc
xor
mov
and
or
test
inc
mov
shr
cmps
cli
xchg
add
xor
jae
adc
data16
push
push
retf
loop
aas
sub
pop
add
mov
push
shl
and
iret
lock
repz
jp
leave
dec
dec
jecxz
sub
xor
sub
pushf
sub
adc
xchg
test
cmp
aaa
lds
call
(bad)
mov
adc
nop
xor
add
inc
in
push
nop
pop
mov
cld
mov
test
popf
xor
in
in
daa
push
in
in
jns
repnz
call
scas
test
mov
jo
(bad)
cmc
js
(bad)
shl
addr16
mov
xor
lock
inc
scas
push
gs
jmp
mov
shl
(bad)
das
bound
add
adc
xchg
adc
push
sub
xchg
daa
shl
stos
dec
lahf
cmova
xchg
mov
mov
rcr
add
sub
addr16
pop
pusha
xchg
aas
retf
sub
dec
mov
loop
pop
cmp
mov
dec
icebp
mov
push
in
ins
xor
inc
adc
push
jp
repz
add
outs
lods
ins
fucom
lods
(bad)
std
stc
and
cmps
je
sub
js
cmp
adc
mov
in
xor
inc
inc
fld
push
int3
cmp
ja
(bad)
imul
ret
dec
dec
mov
retf
sbb
adc
mov
pop
and
pop
dec
push
mov
xchg
cmp
push
sub
mov
inc
imul
pop
lock
(bad)
(bad)
push
mov
push
pop
mov
jl
pop
cwde
push
add
mov
add
mov
xchg
enter
mov
fnsave
and
lods
mov
out
cdq
inc
out
mov
scas
jge
out
jbe
cmp
cmp
daa
pop
and
jb
loop
call
aad
mov
int
stos
inc
mov
push
inc
inc
jle
cmps
aam
sbb
(bad)
sub
add
cmps
movs
push
iret
dec
cmp
mov
or
push
stos
dec
push
cmps
retf
xchg
dec
add
jbe
inc
xchg
bound
dec
sbb
cld
inc
pop
xchg
out
retf
jmp
fnstsw
push
popf
jmp
cli
jno
repz
jge
cmp
push
adc
les
add
pop
mov
sub
inc
js
adc
inc
sbb
loope
mov
fidiv
jmp
mov
jmp
addr16
or
or
push
daa
out
or
add
ret
inc
arpl
cli
jbe
pop
mov
adc
call
daa
mov
adc
mov
push
sahf
mov
sub
sahf
inc
test
sahf
fst
sub
push
popf
outs
daa
fst
dec
stos
sar
adc
xchg
sub
rcr
cmps
dec
mov
cmp
data16
mov
jmp
jl
jbe
mov
out
enter
aad
sub
ret
xlat
(bad)
mov
add
jl
jb
add
jmp
ds
add
ss
bound
mov
call
sbb
inc
loope
jno
ins
out
js
nop
cmc
inc
int3
xor
add
loope
mov
jo
jge
sbb
call
shl
pop
pop
mov
popa
and
xlat
xchg
push
inc
pop
xchg
push
popf
fmul
push
dec
mov
push
ss
sbb
int3
inc
dec
sahf
add
cli
sti
adc
pop
xor
mov
push
aaa
inc
or
jo
lahf
jmp
jae
daa
jecxz
adc
jp
dec
ret
js
test
jne
sub
adc
(bad)
cmp
cmp
iret
xchg
xchg
add
ja
in
adc
retf
(bad)
jmp
cli
sub
and
push
popf
mov
std
adc
jmp
dec
ins
cmc
int
lods
test
and
repnz
test
xchg
adc
aaa
mov
mov
pop
mov
idiv
sahf
xchg
push
dec
pop
retf
call
cmp
pop
xor
aaa
sub
mov
outs
(bad)
mov
jne
div
inc
mov
push
pop
inc
out
fadd
ins
not
mov
adc
pop
inc
inc
inc
popf
ins
stos
ror
ret
test
or
mov
popf
cmovns
push
out
jns
and
xchg
out
das
sbb
arpl
cmp
dec
retf
sub
xor
mov
out
adc
outs
idiv
mov
and
cmp
xor
cmp
daa
frstor
lds
std
mov
addr16
(bad)
cs
xor
mov
fwait
icebp
aad
jge
cmp
jbe
inc
sti
js
cmc
imul
jo
addr16
aad
adc
push
aaa
div
add
mov
je
int
inc
jns
mov
push
push
imul
es
std
jns
mov
leave
aam
out
inc
mov
mov
pop
sub
push
in
repnz
jp
xor
addr16
add
push
inc
fcmovnu
mov
sbb
stc
jb
mov
push
pop
stos
cmp
stc
cmps
clc
jnp
dec
push
(bad)
jl
cli
int3
ret
xor
pop
jne
jbe
mov
retf
in
adc
jns
adc
sar
call
mov
and
jmp
jns
jmp
(bad)
adc
inc
cmp
push
inc
adc
retf
cmp
jg
inc
inc
jmp
push
lds
pop
shl
or
lods
(bad)
loope
mov
xchg
imul
add
cwde
movs
jae
jae
mov
xor
rol
ins
inc
pop
adc
sbb
stos
(bad)
cli
inc
in
mov
dec
rcr
fst
mov
mov
mov
imul
shl
mov
sub
std
mov
scas
popa
mov
adc
inc
push
mov
rsqrtps
in
mov
dec
popf
ror
test
aas
jmp
dec
mov
cmps
repnz
mov
loopne
jmp
xor
mov
in
add
sbb
mov
test
jmp
sbb
fst
jns
repz
mov
pop
dec
xor
or
push
(bad)
fisub
jmp
push
enter
jl
test
jne
inc
aaa
sub
retf
adc
sbb
jmp
dec
mov
jge
aaa
push
retf
stos
(bad)
dec
adc
lods
clc
mov
repnz
js
xor
pop
xor
shl
jns
xchg
aam
pop
inc
push
or
sbb
ins
mov
icebp
adc
outs
shl
aaa
popa
mov
verr
clc
pushf
inc
xor
xor
cmovbe
outs
jns
jnp
out
adc
pop
pushf
jmp
mov
out
cwde
mov
xlat
test
mov
mov
dec
or
dec
(bad)
mov
or
clc
scas
mov
lds
(bad)
add
push
xchg
mov
scas
fnstsw
pop
xor
adc
push
xlat
add
and
pop
jae
sahf
arpl
push
fistp
sbb
cmc
stc
out
cdq
push
or
inc
(bad)
sbb
mov
test
xor
sub
lock
add
stos
scas
outs
jae
xor
leave
push
fidivr
mov
push
dec
pop
lds
push
and
pop
pop
cli
push
pop
aam
xchg
scas
imul
add
bts
popf
clc
out
and
adc
shl
cmp
xchg
pop
cmp
inc
pop
push
jo
test
stc
push
jmp
ss
inc
aaa
dec
pushf
popf
les
sbb
(bad)
cli
or
mov
adc
adc
adc
xchg
sbb
sahf
adc
sbb
mov
dec
push
sbb
push
aas
xchg
pop
aas
imul
pop
dec
cmps
add
mov
push
pop
xchg
imul
jnp
icebp
das
add
lds
into
and
sub
stos
mov
retf
fxch
push
addr16
jns
push
push
sar
ins
out
repz
imul
mov
nop
mov
and
xor
arpl
gs
test
sbb
cmp
dec
imul
loop
pusha
pop
or
fwait
clc
mov
jno
call
xchg
movs
mov
bound
stos
sahf
inc
jbe
es
int
stos
pop
dec
pop
pop
das
jmp
movs
in
ja
mov
sub
xor
ins
dec
push
outs
retf
mov
and
out
xchg
retf
mov
push
xor
and
jecxz
dec
push
mov
jbe
xor
cmp
and
jp
mov
mov
mov
and
sub
push
mov
not
or
push
xchg
rol
lods
xor
xchg
shl
shl
inc
inc
shr
pusha
xor
enter
pop
fsubr
(bad)
cmp
cmp
inc
jp
xor
daa
or
dec
loop
fadd
mov
fldenv
scas
imul
pop
jle
ret
arpl
(bad)
in
shr
mov
or
in
mov
pop
out
cmp
imul
loope
inc
dec
iret
fdivp
out
xor
clc
mov
lods
cmp
jno
jecxz
int
cmp
sbb
push
or
addr16
(bad)
jns
test
lds
adc
(bad)
clc
xchg
mov
pop
jp
fsub
pop
mov
cdq
loope
jmp
cmp
inc
xor
test
imul
push
xor
adc
and
adc
mov
mov
cmps
pop
or
lods
js
mov
and
std
scas
cmp
out
imul
sbb
call
sahf
stos
xor
mov
cmp
or
and
popa
dec
(bad)
xor
mov
addr16
popa
ds
(bad)
outs
ins
mov
xchg
jle
sbb
mov
and
lods
sub
aas
imul
lock
pop
ret
or
add
mov
jecxz
imul
js
push
lock
vmovaps
jns
pop
mov
add
test
lods
push
and
clc
pop
cwde
sbb
or
inc
je
sub
xor
ss
sub
sbb
jecxz
ins
loop
mov
(bad)
call
pop
inc
cs
mov
outs
push
jne
lea
sub
adc
or
sbb
dec
hlt
adc
pop
ret
cmp
in
mov
ret
mov
stc
sbb
clc
pop
cwde
cmps
ins
pop
sbb
push
jle
das
rcl
xor
or
dec
xor
shr
popf
cli
inc
sti
sbb
dec
mov
fldcw
sub
fwait
mov
iret
call
mov
fld
in
neg
xor
or
retf
mov
push
push
add
add
push
add
js
retf
lods
out
adc
ror
pop
sbb
lods
rcl
inc
and
ins
mov
sub
ja
in
and
and
sbb
int
ss
out
mov
mov
popa
xor
jmp
push
jb
or
sbb
inc
xor
out
mov
fsubp
xor
add
and
popf
aam
inc
retf
movs
or
movs
push
pop
pop
nop
mov
jb
xchg
push
int
xor
out
loope
mov
push
sbb
push
daa
aad
imul
es
call
adc
mov
clc
pop
imul
lahf
bound
arpl
(bad)
aaa
jmp
inc
inc
dec
push
sbb
sbb
js
pop
pop
sub
pop
mov
jle
es
jns
jecxz
jb
in
sub
fldz
add
inc
dec
ins
add
push
aaa
dec
mov
xor
ss
stc
imul
cmp
stos
mov
push
ds
jnp
je
pop
mov
xchg
push
and
inc
ret
pop
jmp
push
push
mov
call
push
aad
arpl
xchg
and
push
cwde
ret
stc
inc
xor
mov
mov
fst
cli
loopne
mov
jp
or
and
fdivr
cmps
push
cli
add
jp
mov
and
inc
es
sub
push
out
sbb
lds
repnz
or
mov
sar
cmp
xchg
cmp
jmp
jmp
mov
mov
add
test
dec
sbb
xchg
lock
xlat
ret
pop
cmps
pop
sbb
xchg
inc
mov
out
inc
sub
shl
addr16
inc
in
pop
out
pop
jbe
das
ins
xor
fdivr
pusha
or
les
gs
push
dec
inc
dec
xchg
xor
cmp
cmc
(bad)
aaa
repnz
jle
jp
movs
push
sub
pop
cmp
inc
mov
pop
loop
mov
repnz
mov
adc
leave
and
xchg
sub
or
fcomp
xchg
dec
into
lahf
arpl
mov
cmp
xor
(bad)
test
mov
pop
and
add
fxam
xor
int
sbb
pushf
dec
jp
sub
cld
sub
and
movs
sub
loope
push
cmp
adc
sub
mov
in
inc
icebp
or
je
inc
dec
or
push
movs
mov
cmp
mov
mov
movs
out
dec
cmps
dec
out
aas
popf
(bad)
mov
and
jo
mov
mov
mov
jns
dec
xor
dec
push
add
cmps
mov
stos
or
inc
js
aas
cld
pusha
nop
pop
inc
call
les
pop
jmp
movs
jmp
sbb
int
fimul
xor
pop
sub
jl
outs
std
call
dec
jge
rol
movs
dec
cmp
inc
mov
(bad)
sbb
inc
xchg
fs
push
mov
add
rcr
inc
fld
pop
daa
cwde
cmp
in
stos
add
rcl
pop
mov
jbe
jmp
mov
out
out
cmp
jp
bound
pop
ds
push
push
stc
dec
jbe
sub
sahf
outs
xor
fnstsw
xor
sbb
(bad)
in
out
addr16
mov
prefetch
or
lahf
scas
loope
lods
call
or
jbe
loope
(bad)
inc
jp
pushf
cld
adc
mov
sub
add
fsub
pusha
cmc
stos
test
push
call
fidivr
test
inc
mov
mov
xchg
imul
clc
mov
inc
xchg
adc
rcl
(bad)
adc
je
adc
aam
jno
jge
imul
scas
test
inc
xchg
pop
pusha
jo
mov
loope
xchg
imul
or
sub
xchg
dec
clc
jp
nop
sub
lahf
mov
into
push
adc
ret
movs
pusha
pop
add
jg
and
rcr
jecxz
inc
test
jb
fnstcw
ds
and
mov
pop
inc
cdq
jno
mov
loope
rcr
push
jmp
add
ret
jecxz
lahf
inc
inc
scas
dec
xchg
dec
xchg
out
adc
and
pop
pop
scas
test
mov
test
inc
sub
imul
scas
and
movs
fwait
cmp
mov
jmp
mov
movs
(bad)
mov
addr16
in
jl
mov
fwait
dec
jecxz
iret
aaa
mov
mov
(bad)
pop
xchg
sub
or
sub
inc
xor
lahf
into
stos
inc
jecxz
gs
and
imul
sbb
inc
mov
dec
or
or
je
js
lahf
ret
xor
or
add
cld
mov
scas
sar
inc
lea
push
dec
cli
mov
mov
mov
jmp
jae
sub
outs
xor
in
sub
aam
lods
add
lods
int3
mov
sbb
in
mov
in
ss
rcl
pop
pop
push
jmp
int
jbe
pop
mov
in
add
add
retf
jne
(bad)
popa
cmps
(bad)
cwde
inc
push
mov
push
iret
inc
pop
mov
in
ret
mov
mov
cmp
adc
mov
push
repnz
push
das
mov
mov
sub
mov
xor
ds
mov
inc
lods
fbstp
mov
out
pop
xor
fld
mov
rcl
sub
stc
movs
sbb
sub
ror
test
cmp
inc
fs
sub
mov
jno
push
sub
repnz
clc
xor
test
cmp
(bad)
push
fs
lea
sbb
inc
mov
sbb
pop
aam
mov
add
adc
daa
mov
add
loop
xor
arpl
mov
(bad)
pop
xchg
shr
test
mov
sar
ss
fldcw
sar
sar
(bad)
inc
pop
pop
sahf
je
mov
inc
push
aad
ss
cmp
sbb
dec
addr16
mov
ret
shl
popf
add
jae
fs
push
(bad)
jle
jns
pop
xor
jp
mov
jne
and
sbb
add
stos
add
mov
pop
xor
push
stc
ds
xor
arpl
or
jns
fldcw
outs
jmp
aas
lock
js
(bad)
xchg
pop
cmp
cmp
and
push
cmp
ins
(bad)
xor
mov
pop
rcl
sub
les
test
js
stos
and
into
lahf
and
sub
or
add
call
dec
loop
ja
xchg
mov
dec
ss
jmp
in
lea
push
mov
ret
xlat
stos
push
ins
push
in
scas
test
pop
enter
int
aaa
add
cmc
push
sar
sti
int3
stc
rcl
pusha
hlt
inc
aas
jmp
mov
pop
mul
sub
into
push
mov
scas
aaa
arpl
dec
mov
and
jbe
xchg
in
or
in
test
cmp
adc
pop
retf
mov
cli
cmp
cmp
xor
cmp
std
sbb
test
in
icebp
in
daa
adc
push
cmp
(bad)
mov
mov
xor
ins
aas
adc
jbe
(bad)
mov
inc
out
(bad)
mov
inc
dec
mov
mov
test
jbe
sti
jge
loopne
movs
cmp
fimul
jmp
outs
lock
mov
xor
mov
push
movs
(bad)
cmp
hlt
mov
mov
add
mov
or
pop
dec
and
loope
or
sub
test
test
rcr
shr
sub
pushf
adc
popa
xor
aas
pop
cmp
or
mov
cmps
imul
cmp
add
aaa
cmps
dec
cli
out
fsubr
mov
fsubp
mov
xor
int3
cmp
cli
sub
pop
loopne
or
pop
clc
gs
ret
shr
test
loop
ret
push
test
jb
jne
stos
movs
xchg
and
pop
mov
add
popa
xor
adc
repz
out
add
fnstsw
jbe
or
jle
scas
stc
push
pop
fadd
xor
bound
sbb
loopne
add
or
addr16
pop
pop
mov
outs
mov
mov
xchg
adc
aam
jo
rcr
arpl
retf
cmp
fmul
cld
stc
xor
jmp
dec
cld
in
jecxz
mov
jae
jno
aas
push
fldcw
jo
popf
lock
fisub
pop
(bad)
mov
xor
shl
mov
add
aad
or
fwait
mov
jb
cwde
or
gs
cmps
sahf
popa
nop
jmp
mov
push
pop
lea
cmp
sub
stos
xchg
dec
fsub
shl
cmp
cdq
xor
jge
imul
pop
push
fwait
adc
(bad)
popf
fcomp
mov
lods
fisub
bound
daa
add
stos
inc
out
pop
and
jne
adc
adc
fucomi
lds
or
ss
pop
dec
jle
jmp
into
jae
push
aaa
dec
xor
fidivr
jae
pop
cmp
jbe
lock
call
es
mov
ss
outs
aam
imul
stc
cmp
sbb
and
loope
mov
(bad)
test
adc
aad
lock
(bad)
push
in
ja
fs
aas
std
push
or
dec
mov
(bad)
push
fidiv
cld
push
test
aaa
dec
inc
sub
lods
repnz
mov
mov
cmp
in
test
dec
jle
movs
sbb
and
loopne
sbb
dec
js
in
fs
push
ret
adc
cmp
int
push
aas
pop
in
jmp
cdq
sbb
mov
pop
dec
loope
rcl
dec
add
pop
call
div
jge
add
in
retf
xchg
push
fsub
mov
jle
add
cmp
add
mov
mov
and
mov
jnp
int
out
pop
cwde
add
and
fbstp
adc
stc
daa
sub
out
ficom
add
pop
pop
lods
imul
adc
mov
ror
repnz
fcom
pop
test
fcomi
xor
call
cmc
and
je
or
add
xor
ret
repz
cmp
jmp
or
dec
inc
sbb
and
mov
inc
addr16
aad
pop
pop
mov
jns
and
(bad)
jbe
test
movs
je
aaa
dec
sbb
pushf
ret
pushf
mov
push
push
scas
xchg
push
addr16
push
dec
dec
mov
sbb
and
sbb
js
cmp
cmc
shr
sub
and
out
ds
jecxz
xor
fld
and
lock
inc
out
jns
add
inc
jl
xlat
out
add
xor
sub
leave
fcmove
mov
mov
push
jb
das
sti
adc
and
mov
sbb
mov
adc
cwde
inc
push
jno
stc
loop
movs
cmp
mov
adc
xchg
lea
xchg
or
mov
mov
out
cmp
in
jne
push
arpl
xor
adc
cli
bound
jle
pop
xor
hlt
xchg
xchg
and
pusha
adc
push
add
adc
movs
add
add
xor
dec
pop
and
mov
les
fsubr
imul
xchg
(bad)
inc
pop
adc
repz
aas
adc
les
cmp
cmp
push
xchg
and
inc
sbb
sbb
push
cs
scas
mov
adc
loopne
xchg
sbb
jmp
sbb
mov
aaa
call
mov
pusha
pop
ss
shl
loope
ficom
(bad)
jbe
xchg
daa
mov
(bad)
int3
mov
int3
(bad)
sub
and
cmps
ins
mov
movs
call
jle
mov
jmp
mov
or
xchg
(bad)
sub
xchg
lock
xor
(bad)
dec
push
je
sbb
sbb
xchg
(bad)
cmp
mov
ins
mov
pop
dec
xor
mov
rol
sub
push
mov
ret
mov
xor
fiadd
sti
dec
sub
pop
dec
cmps
inc
ror
xchg
mov
jg
jmp
cmp
xor
jg
int3
sar
pop
xor
sbb
scas
ins
pcmpgtw
cmp
xchg
jae
jb
inc
outs
push
pop
jmp
dec
add
mov
dec
icebp
mov
or
dec
int3
mov
rcl
sbb
in
in
(bad)
xor
sbb
popa
out
in
sti
in
xchg
pop
out
or
sub
(bad)
and
jmp
fstp
jno
pop
xor
int
sbb
retf
xchg
add
jg
loopne
out
inc
es
aas
jbe
or
adc
inc
jg
add
call
xor
mov
inc
and
daa
retf
adc
out
mov
cwde
pop
ins
add
xchg
test
out
(bad)
cs
mov
or
fsub
nop
dec
push
and
pop
ficomp
pop
int
sbb
push
int
and
outs
inc
imul
arpl
scas
stc
imul
mov
es
mov
loop
jns
sbb
adc
test
pop
sub
sbb
cwde
rol
dec
or
call
pop
jb
fiadd
cmp
mov
leave
xchg
(bad)
jl
cmp
es
dec
xor
fdiv
rcl
out
xchg
movs
xchg
xlat
sbb
and
sub
into
xchg
adc
jle
fild
xchg
mov
cmp
adc
inc
jns
push
js
inc
add
ret
shl
cmp
scas
push
xor
data16
hlt
and
es
test
mov
cmps
pushf
sar
dec
push
out
mov
repnz
pop
std
pop
jp
arpl
cmp
cmp
adc
sar
add
mov
fmul
pop
daa
push
add
retf
fnsave
sub
sbb
adc
scas
loopne
ins
addr16
ud1
mov
fiadd
and
sahf
lea
ret
or
out
(bad)
cld
cmp
and
int3
popf
push
ins
cs
(bad)
mov
mov
out
push
mov
call
mov
xchg
jecxz
jg
lea
mov
pop
je
sbb
cli
mov
push
adc
jg
stc
mov
out
sbb
xor
jmp
cld
xlat
(bad)
sub
ds
(bad)
aad
repz
mov
mov
xor
jmp
add
fst
mov
or
mov
cmp
or
mov
and
inc
(bad)
(bad)
sti
dec
lods
sub
cmps
mov
mov
call
push
mov
sbb
aad
xor
jmp
mov
push
out
mov
loop
aam
inc
mov
add
push
or
xchg
mov
mov
popf
sub
cmp
pop
pushf
inc
inc
and
dec
xor
push
sub
xchg
inc
sbb
mov
dec
pop
mov
push
mov
push
ja
aam
pop
pusha
lods
jbe
adc
or
cmps
jbe
stos
add
nop
lds
pop
jecxz
mov
pusha
push
jae
int
pop
loope
mov
add
(bad)
lds
fdiv
cs
jns
pop
and
pop
mov
mov
sub
rol
daa
stc
dec
mov
jo
test
imul
lods
fs
push
stos
push
xchg
mov
int3
jmp
push
out
xor
adc
and
cmps
stc
inc
nop
or
jl
popf
sbb
(bad)
lods
inc
or
pop
sbb
aas
sti
cmc
pop
pop
push
xchg
fsubr
sub
add
xchg
aaa
clc
aas
and
aad
int3
mov
push
rcl
add
fild
add
sbb
pop
jp
inc
pusha
xor
lea
lods
cld
aas
les
xor
and
dec
lea
pop
xchg
sub
dec
push
dec
add
or
jle
sbb
ret
xchg
jp
jae
ret
cmp
push
cmc
ins
push
adc
mov
out
or
std
ins
dec
inc
call
mov
xchg
add
mov
fld
neg
inc
cmps
add
das
jo
scas
inc
loopne
push
mov
pop
mov
fwait
std
xchg
push
pushf
and
adc
ss
inc
add
lods
test
xor
mov
xchg
push
sar
sahf
lds
or
mov
sbb
pop
jno
cld
out
mov
(bad)
xlat
aam
es
xchg
icebp
sbb
fiadd
std
cmp
addr16
fdivr
call
sbb
lds
dec
xor
adc
jnp
jge
mov
scas
sbb
dec
cwde
jecxz
jmp
(bad)
call
pop
mov
mov
jle
out
sbb
cmc
dec
adc
ret
cmp
test
bound
jl
adc
xchg
(bad)
out
xchg
or
pop
call
dec
adc
jle
push
mov
adc
mov
pop
xor
adc
call
xor
ret
js
out
and
cmp
jle
int3
inc
icebp
jl
jp
imul
or
sbb
and
inc
or
mov
pop
sbb
bound
ret
mov
jns
rol
call
pop
div
pop
adc
movs
in
movs
scas
aas
dec
cmp
mov
xor
jmp
fmul
ret
stc
jno
adc
adc
mov
sub
inc
xor
repnz
jp
jns
xchg
add
sbb
jo
inc
dec
int3
test
mov
rep
mov
xchg
push
jge
adc
addr16
fwait
mov
mov
push
fcomp
lods
fs
ins
daa
push
test
and
jno
sub
xchg
mov
sbb
js
pop
jl
data16
cs
push
pop
push
add
paddb
cmp
or
retf
stc
xor
mov
sar
dec
add
ja
loope
xor
mov
movs
(bad)
mov
mov
daa
pop
xor
mov
xor
sub
xchg
inc
(bad)
or
aad
mov
cmp
xchg
push
add
arpl
xor
dec
and
sub
shl
jmp
dec
fiadd
inc
add
dec
pop
ss
test
mov
sub
add
push
jp
das
ret
nop
jae
push
inc
repz
add
inc
out
sub
adc
xor
and
lods
test
cmps
sbb
push
add
jmp
imul
das
push
call
inc
clc
pop
pop
sub
outs
adc
stos
call
ins
lods
and
out
jl
mov
cmc
jp
int
(bad)
into
jns
jmp
sub
les
hlt
mov
(bad)
repz
jo
cmp
clc
pop
aam
loopne
pop
repnz
pop
mov
sbb
mov
std
pushf
shl
fs
and
jmp
mov
pop
dec
ret
(bad)
and
loope
das
adc
mov
les
adc
mov
pop
sub
adc
mov
(bad)
and
mov
jge
jecxz
adc
jbe
push
retf
jns
mov
xor
cmps
mov
pop
rcl
call
aaa
jo
je
test
mov
adc
daa
idiv
test
iret
pop
jle
test
pop
clc
mov
inc
mov
xchg
sbb
aad
mov
(bad)
adc
and
sub
pop
push
push
mov
sbb
sub
cmps
pop
jbe
dec
cwde
cmp
bound
lods
fcom
aaa
push
jg
std
fstp
jp
push
jle
pop
push
push
add
ins
sbb
xor
cld
popa
pop
icebp
pop
scas
jnp
pop
push
imul
push
jnp
and
leave
pop
je
jmp
sub
lock
mov
sub
popf
out
jb
movs
adc
popf
cmp
sbb
outs
xor
mov
xchg
out
imul
jo
jg
mov
jg
daa
loope
aas
ds
in
pop
mov
leave
mov
das
retf
das
adc
mulps
push
hlt
adc
dec
jae
mov
ja
je
jp
cld
sti
or
sub
ja
sbb
lahf
ins
jns
add
stc
xchg
in
xchg
addr16
xchg
jp
xor
lock
scas
cli
pushf
cli
xchg
mov
and
xor
jns
fcomp
(bad)
mov
push
test
js
sub
pop
icebp
(bad)
fisubr
std
iret
cdq
ret
ss
pop
sub
in
sbb
mov
sar
jp
clc
out
aad
xor
movs
sub
js
inc
loope
(bad)
sahf
lea
dec
dec
cs
sub
mov
or
add
hlt
rcr
pop
je
jb
adc
mov
dec
data16
cmps
push
dec
lods
call
inc
sar
(bad)
sbb
xchg
push
and
nop
pop
or
inc
and
sub
inc
mov
sbb
gs
and
xor
mov
test
(bad)
jge
stos
jmp
js
push
fidiv
imul
loope
shl
je
adc
inc
and
mov
push
cmp
dec
mov
pop
jl
ds
pop
jns
in
retf
das
das
dec
pop
bound
cdq
push
ds
push
(bad)
jg
xor
jne
imul
mov
scas
cmp
loopne
js
stos
sti
jns
movs
jge
sbb
xchg
fsub
mov
sar
ds
dec
dec
stos
push
jmp
shl
xor
xchg
dec
add
jmp
lea
outs
call
mov
xchg
or
arpl
aam
inc
(bad)
das
xor
sub
jecxz
fdivrp
hlt
mov
mov
stc
leave
mov
pop
ins
call
pop
push
or
sub
xor
cdq
das
or
fs
cmp
fdivr
pop
ja
jle
fistp
cmps
pop
mov
ret
ss
mov
popa
cmps
adc
fadd
pop
icebp
or
or
es
fidivr
cmps
pop
push
add
arpl
fld
add
push
sbb
jno
cmps
mov
in
int3
sbb
shl
mov
cli
es
sub
cmp
popa
lock
jae
inc
add
pop
and
jmp
xor
cmp
sub
cwde
jp
js
dec
push
sar
xlat
push
adc
add
js
jne
data16
mov
xor
mov
ret
popf
dec
sbb
cmp
das
stos
jnp
ret
cmc
sbb
iret
push
clc
dec
ins
pop
retf
xchg
jns
clc
sbb
jne
push
cmp
repz
mov
dec
sbb
sub
mov
push
lds
lods
push
pop
fidivr
xor
xchg
fs
(bad)
retf
jmp
pop
push
jg
popa
or
add
add
mov
fwait
xchg
out
dec
adc
scas
cli
push
not
cmps
or
je
xchg
sub
into
loopne
stos
push
mov
ja
sbb
xchg
push
mov
fadd
ja
inc
(bad)
push
aad
pop
mov
test
mov
femms
xor
push
pop
adc
jnp
xor
push
adc
push
mov
inc
push
sub
loopne
js
les
adc
jnp
xor
cmp
xchg
pop
popa
ins
xor
adc
inc
aad
inc
je
shl
cmp
(bad)
in
std
(bad)
dec
enter
inc
in
inc
mov
fistp
pop
frstor
jne
ins
sub
movs
ins
mov
jmp
jle
cmp
jle
sub
xor
mov
adc
push
xchg
mov
or
add
adc
pop
jns
jg
(bad)
aam
popf
inc
aas
and
cwde
push
xor
mov
fstp
push
cli
bound
xor
sbb
cmp
fldcw
out
cmp
jmp
aad
xchg
aaa
cmp
sahf
jmp
push
sub
and
cmp
cmp
push
mov
jl
jno
je
and
sub
adc
jnp
pop
sub
sbb
sar
sbb
shr
mov
cmp
xchg
call
mov
xor
aas
and
pop
sub
adc
les
sbb
ja
test
add
es
call
inc
xor
(bad)
leave
cmps
outs
jbe
test
jnp
jbe
pop
les
in
inc
dec
jl
add
and
inc
pop
xchg
push
aas
adc
xchg
imul
pop
mov
sahf
push
aas
cmp
pop
dec
ficom
or
fsubrp
repz
dec
les
inc
cmps
imul
jmp
in
push
and
js
aas
push
and
xor
mov
xchg
pop
or
shl
mov
add
pop
cmp
pop
movs
rol
daa
cmps
add
popa
sub
xor
sbb
inc
inc
and
dec
cdq
dec
call
das
es
or
fwait
aam
sti
dec
mov
and
nop
dec
and
pop
push
pop
popa
addr16
sub
lds
lods
pop
cli
sub
add
ja
add
test
in
jmp
pop
loop
in
mov
ds
jmp
je
mov
outs
jmp
das
xchg
jmp
or
movs
addr16
jge
ret
lods
sbb
(bad)
cld
jge
in
mov
out
dec
shr
adc
enter
sbb
sbb
aad
cmc
and
nop
mov
icebp
inc
das
pop
sbb
sub
and
dec
hlt
mov
dec
pop
loope
jbe
ror
or
push
xor
mov
movs
mov
cld
push
das
jo
jb
mov
add
sar
jg
ds
cs
ins
bound
mov
(bad)
jg
out
add
cwde
shl
cmp
push
daa
mov
sbb
inc
outs
aaa
pop
jge
sub
mov
(bad)
mov
out
shl
loop
scas
sub
push
pop
adc
inc
inc
mov
fisub
pusha
push
push
mov
div
cli
addr16
loope
ror
inc
pop
imul
popa
xchg
retf
and
popa
xchg
xchg
jg
fmul
call
stos
stc
jbe
pushf
push
jne
mov
(bad)
stc
pop
jg
push
jnp
jbe
push
stc
mov
fcom
stc
jns
shl
adc
ins
movs
inc
jmp
pop
hlt
or
inc
lahf
sbb
push
jnp
and
push
inc
mov
fcomp
sub
add
push
cdq
push
nop
inc
add
sbb
(bad)
ins
push
dec
popa
jbe
jbe
js
jbe
mov
dec
push
dec
cmp
xor
mov
fldcw
xchg
dec
mov
sar
jb
dec
shr
jne
int3
mov
jnp
add
cmp
xchg
mov
sbb
jmp
ins
sbb
ss
aaa
(bad)
fsubr
out
inc
movs
jecxz
jbe
shl
ss
lods
mov
or
push
pop
add
mov
shr
mov
pop
in
cmp
popa
aaa
imul
lahf
or
push
or
push
add
push
xchg
push
test
movs
push
mov
cmps
push
mov
test
sti
add
fldcw
mov
repnz
jmp
add
pop
sahf
pop
sub
(bad)
imul
imul
daa
mov
call
fwait
fwait
xor
outs
xchg
dec
outs
js
sub
or
sub
jmp
mov
xlat
sbb
cmp
(bad)
pop
sub
add
mov
xor
aas
or
add
push
fst
fstp
outs
addr16
add
mov
bound
bound
scas
cs
push
and
call
jp
mov
xchg
fs
cli
add
and
xor
adc
dec
dec
fisubr
push
ss
cs
fidivr
shl
in
sub
add
es
stc
or
jge
lock
bound
ss
xor
in
adc
lea
(bad)
xchg
cwde
aam
pusha
lds
adc
rcr
jge
mov
pop
rcr
test
or
sub
leave
sbb
stos
sub
fld
lods
int
fmul
shl
pop
outs
jae
push
loop
pop
test
inc
push
cmp
sbb
adc
mov
mov
gs
(bad)
sti
out
push
loope
clc
cmp
clc
ror
(bad)
jb
push
push
mov
mov
inc
jo
leavew
cmp
imul
jno
sbb
sub
lds
push
cmp
pop
mov
loope
inc
mov
jl
dec
mov
inc
loopne
jo
test
lahf
sbb
ins
and
dec
dec
sti
mov
mov
dec
mov
add
sub
ja
inc
imul
fs
mov
dec
(bad)
ins
sub
add
inc
push
dec
aaa
mov
dec
inc
inc
call
push
inc
test
xchg
inc
fcomp
mov
js
sub
jl
imul
and
jns
fs
call
out
leave
cdq
jns
jp
and
push
inc
stos
jp
sub
add
and
sub
jmp
out
push
retf
inc
adc
test
add
ja
loopne
aad
stos
or
xor
add
sahf
jbe
pusha
dec
inc
inc
adc
inc
loopne
xlat
movs
dec
mov
add
int3
sub
push
mov
sbb
hlt
jns
sbb
or
adc
jae
adc
sbb
add
dec
nop
retf
xchg
mov
or
out
sbb
mov
les
sbb
ficom
xor
imul
xor
ja
push
add
push
lods
or
in
sahf
dec
jmp
pop
xchg
es
fwait
mov
push
xchg
dec
xchg
les
mov
dec
push
pop
out
retf
mov
push
sbb
cdq
xchg
push
xor
inc
or
gs
scas
inc
jnp
sub
sti
ja
xchg
dec
in
inc
call
sbb
data16
push
mov
dec
push
js
push
pop
ret
mov
aas
ror
mov
in
jge
cmp
pop
mov
and
das
scas
stos
and
xor
repnz
ret
cmp
sub
cmp
cmp
xchg
neg
ja
std
mov
adc
mov
mov
push
jp
stos
je
cmc
jnp
cld
inc
mul
mov
into
stos
fild
(bad)
sbb
or
mov
lea
cmp
cmps
add
jge
aas
imul
sub
inc
push
jbe
loopne
scas
xchg
mov
outs
xor
movs
xchg
inc
(bad)
push
ror
inc
dec
push
test
inc
xchg
fimul
inc
scas
dec
in
xor
and
push
adc
mov
fadd
cmp
cmp
add
dec
jmp
add
jns
cmp
mov
mov
test
adc
push
jmp
mov
mov
jns
test
nop
or
add
pop
shr
dec
sub
aam
cs
fcmovne
push
xlat
push
inc
jp
mov
inc
mov
sub
pop
loop
ret
xlat
mov
push
test
into
icebp
addr16
push
adc
xor
xchg
outs
jae
mov
shl
dec
or
push
jmp
ins
aad
xor
inc
div
mov
loope
push
addr16
pop
sbb
mov
aad
inc
mov
dec
xor
cli
js
movs
aad
xchg
dec
jmp
bound
adc
loopne
mov
xchg
push
add
mov
pop
imul
pop
out
cs
imul
aad
rcl
jns
mov
and
push
js
popf
in
xchg
jns
mov
inc
ja
test
sub
xor
in
xor
(bad)
cmps
push
mov
xchg
nop
pop
mov
jmp
movs
mov
dec
inc
push
dec
mov
(bad)
sub
mov
rcl
pushf
push
jae
pop
jle
cmp
test
push
popf
call
mov
les
stc
xchg
push
mov
sbb
test
and
dec
imul
(bad)
sub
dec
sti
dec
dec
dec
gs
leave
out
dec
adc
or
or
addr16
pop
call
(bad)
adc
retfw
push
and
lds
inc
add
mov
inc
add
out
ins
adc
cmps
mov
jge
jecxz
pop
mov
push
jmp
sbb
push
inc
ret
jmp
into
shl
jbe
sbb
sbb
sub
sti
clc
add
and
dec
or
sub
jl
cmp
or
ret
enter
daa
add
dec
popf
and
sub
retf
jb
shl
jno
ds
mov
clc
jmp
mov
adc
scas
dec
scas
and
cmp
cmp
fnsave
and
dec
outs
dec
fsubr
push
arpl
and
add
add
dec
push
es
fldcw
push
aas
sbb
push
xchg
jns
nop
std
cli
inc
push
movs
inc
cmp
std
sbb
(bad)
clc
jecxz
push
sbb
lods
inc
inc
popa
popf
sbb
or
pusha
ds
popf
aaa
popf
pop
stos
(bad)
enter
push
add
outs
xchg
ret
xchg
add
inc
jmp
jmp
fwait
int
out
(bad)
cmp
mov
add
ror
or
test
mov
or
in
adc
fs
inc
or
push
dec
ds
adc
int
pop
(bad)
mov
sbb
(bad)
sbb
cli
arpl
ficom
inc
cdq
cmps
sub
sahf
out
pop
jecxz
jb
jl
mov
int3
jo
dec
cmp
cmp
add
test
and
or
stos
xor
pushf
fistp
repnz
xor
popa
bound
scas
sub
test
mov
(bad)
pusha
retf
mov
add
data16
enter
mov
jge
sub
inc
out
mov
mov
and
aam
lea
xchg
push
mov
xchg
std
add
mov
inc
lods
mov
pop
out
adc
jmp
shl
pop
cli
(bad)
sub
cmp
or
dec
jo
pop
in
adc
pop
pop
push
lods
sbb
sbb
mov
loope
mov
sar
fs
xor
or
test
es
mov
ins
in
jae
xchg
sti
(bad)
jl
add
xor
stos
in
std
and
mov
xor
(bad)
push
je
mov
mov
je
sub
add
shr
mov
dec
outs
or
jno
outs
ret
jb
mov
jnp
frstor
shr
ret
stc
adc
lods
sbb
sbb
dec
push
neg
scas
fbld
popa
out
push
jmp
enter
or
stos
pop
fisub
add
daa
dec
into
inc
push
cmp
repnz
jbe
push
or
dec
pop
cdq
jl
ins
lock
out
neg
mov
jno
dec
cmp
lds
sbb
inc
test
and
sbb
xchg
fnstenv
retf
sub
mov
out
cdq
imul
imul
lds
sub
es
push
pop
xor
test
mov
jae
lods
in
pop
sub
add
aam
xor
and
outs
mov
rol
mov
jg
inc
adc
push
(bad)
scas
js
sar
div
mov
ffree
icebp
imul
and
mov
outs
sub
pop
sub
jl
mov
cmp
push
test
pusha
mov
stos
bnd
xor
jo
jg
pop
mov
dec
add
clc
xor
retfw
fist
inc
aaa
cmp
jno
scas
mov
xchg
movs
xor
jne
ss
loop
xor
mov
fsubr
mov
fidiv
push
das
mov
mov
inc
add
fild
test
mov
sub
mov
lds
out
and
bound
scas
mov
dec
int3
stc
mov
xor
scas
xor
pop
fdiv
add
mov
pop
inc
js
jmp
retf
pop
sar
scas
arpl
push
and
jns
and
sub
sub
retf
cmp
push
out
and
mov
add
pop
pop
cmp
(bad)
cmp
nop
adc
xor
dec
shr
dec
add
jl
or
(bad)
imul
push
das
push
sub
or
inc
mov
dec
cs
or
xor
pop
out
inc
xlat
adc
xor
mov
jmp
aaa
cmp
inc
mov
cli
inc
jecxz
ja
xchg
enter
inc
pop
scas
mov
sbb
ret
je
push
fiadd
shl
(bad)
add
jmp
out
outs
fsub
movs
sub
in
jle
sub
mov
jbe
pop
clc
jns
ins
jle
or
and
stos
rol
mov
bound
fs
sbb
dec
xchg
xor
push
and
xchg
lods
mov
push
rcl
mov
jmp
pop
jmp
mov
pushf
push
cmp
bound
mov
in
xor
adc
loope
dec
sub
mov
pop
inc
sbb
scas
or
data16
mov
xor
dec
cmovg
jg
and
xchg
retf
bound
or
hlt
rcr
clc
dec
dec
idiv
inc
addr16
xchg
js
xor
pop
leave
adc
jmp
dec
mov
sbb
outs
call
sub
and
pop
pop
xchg
fcmovnu
xchg
sub
jno
inc
adc
enter
(bad)
mov
mov
mov
xchg
mov
stc
pop
sbb
adc
mov
mov
dec
fisub
cmc
dec
cmp
dec
ds
inc
pusha
inc
in
loop
nop
mov
(bad)
call
js
ds
mov
js
dec
xchg
pushf
(bad)
ins
stos
stos
jp
xchg
sbb
mov
mov
addr16
fcom
pop
out
ss
push
data16
jns
dec
xchg
stos
int3
adc
call
aad
xchg
(bad)
repz
sbb
adc
lahf
push
sub
rcl
mov
mov
pop
mov
xchg
ds
jp
rcr
xor
cmp
push
int
jle
ja
jle
dec
mov
and
push
out
mov
pushf
add
push
cmp
sub
call
sahf
bound
(bad)
inc
add
add
or
aam
cmp
adc
clc
(bad)
inc
aaa
mov
push
xor
cmp
mov
jns
add
jl
dec
mov
sub
and
and
cmp
mov
sub
lods
jge
sub
adc
jbe
adc
push
loop
or
and
xlat
and
popf
out
pusha
ja
cmps
sub
xchg
es
push
jle
push
gs
or
jne
sbb
dec
ret
mov
addr16
test
xor
aaa
push
xchg
in
push
mov
loop
and
mov
push
ss
pop
(bad)
sar
adc
imul
rol
push
sbb
cmc
dec
sub
js
dec
inc
mov
sub
fsub
add
push
lods
ins
mov
into
jmp
cmps
sbb
lods
(bad)
lock
or
icebp
in
mov
inc
mov
lock
mov
fnsave
sbb
aas
push
mov
jae
fnstenv
stos
and
in
inc
xchg
jns
fbstp
out
lds
push
repnz
cmp
fstp
call
mov
dec
xor
dec
std
jne
cs
sbb
in
sub
pop
jle
jl
ds
or
jne
jl
adc
and
xchg
ret
push
jge
lods
push
inc
push
outs
mov
icebp
push
push
jg
iret
imul
cmc
loopne
(bad)
cmp
stos
cwde
inc
add
cmp
xor
pop
ret
inc
push
xor
cmp
mov
dec
pushf
mov
or
jecxz
pop
add
data16
jns
inc
pop
jl
push
cwde
retf
test
push
fidivr
pop
rol
ds
test
add
out
(bad)
mov
jns
enter
sahf
mov
cmp
ret
push
les
ins
push
lods
imul
inc
lds
(bad)
(bad)
sbb
push
test
sbb
dec
sbb
leave
pop
ds
stos
retf
pop
sub
sbb
std
ins
ss
dec
and
pop
test
cli
scas
jp
adc
add
stc
stos
sub
add
pop
mov
loop
popa
jb
addr16
lods
add
ret
xor
jg
jg
adc
and
cmps
addr16
mov
jp
imul
ret
scas
fsubr
outs
pop
push
push
loopne
into
idiv
nop
mov
popf
push
jnp
or
cmp
test
mov
jno
dec
std
popf
cmp
fadd
(bad)
fnstcw
dec
scas
add
mov
mul
dec
call
iret
jmp
push
out
mov
push
mov
xchg
shl
fidivr
mov
mov
aam
push
inc
imul
aad
and
cmp
out
mov
inc
xchg
shl
aad
sub
xchg
(bad)
mov
add
je
stc
cmc
nop
das
push
ret
and
dec
sub
add
rcl
inc
and
sub
sbb
cmc
mov
div
out
pusha
idiv
xchg
movd
mov
iret
mov
retf
sub
jge
xor
jl
sar
cmp
data16
sti
loop
call
punpcklwd
push
push
xchg
test
bound
outs
dec
push
push
and
stc
out
cli
data16
jp
xchg
push
and
add
aam
sbb
inc
mov
push
gs
or
inc
cli
xlat
mov
dec
cli
call
lahf
das
data16
jmp
xchg
pop
dec
fldenv
push
dec
sti
(bad)
fimul
inc
dec
or
push
cli
call
mov
dec
js
leave
rol
adc
cwde
aaa
hlt
jno
inc
inc
mov
push
push
and
ret
jle
inc
jge
and
jmp
lods
mov
pop
sub
(bad)
daa
mov
dec
or
dec
rol
jnp
and
pop
adc
add
jmp
(bad)
int3
and
in
mov
movs
lds
mov
mov
adc
jb
cmp
dec
cmp
xor
(bad)
loopne
jo
sar
jno
mov
push
dec
dec
ror
mov
fucom
push
fnstsw
loop
stos
xor
mov
fisttp
and
xchg
sub
(bad)
and
iret
sar
bound
add
imul
sbb
inc
jmp
int3
inc
fs
pop
out
jbe
sar
aas
js
(bad)
imul
inc
test
cwde
inc
sbb
loopne
lods
xor
lock
xor
sub
push
in
(bad)
sbb
js
xor
mov
fistp
xchg
vandpd
jg
ret
in
test
hlt
in
ror
out
add
fistp
push
add
mov
sar
stc
aas
jne
repz
lock
xchg
adc
imul
cmpxchg
push
sbb
pop
inc
int
mov
jle
cwde
xor
mov
and
ss
and
mov
inc
sub
mov
adc
aas
jle
pop
ud0
popa
call
mov
cmp
in
pop
aaa
clc
mov
call
pop
add
add
jg
icebp
mov
inc
ins
push
jp
mov
loop
and
pop
imul
mov
retf
pop
add
pop
lahf
push
test
mov
sub
jmp
cmovo
cmp
xchg
adc
and
or
out
and
or
stos
and
fucomp
add
inc
mov
repnz
repz
or
pop
add
ror
iret
and
jns
or
xor
in
adc
test
or
in
add
cli
mov
pop
popa
loope
das
cmps
adc
sub
mov
dec
dec
fldcw
mov
rcr
cld
iret
push
fwait
add
and
sbb
mov
sub
(bad)
retf
popa
push
xor
inc
aad
test
hlt
outs
jo
movs
dec
push
rol
xchg
adc
aad
push
add
dec
mov
fdivr
mov
ss
sbb
sbb
add
std
mov
and
fs
sti
out
inc
and
outs
sub
ja
dec
inc
test
shr
mov
fiadd
sub
xchg
rol
into
in
pop
pushf
repz
push
jp
imul
cwde
(bad)
and
xacquire
pop
cmp
(bad)
ds
daa
xor
push
xchg
cmp
cmp
retf
(bad)
push
imul
pop
lahf
xchg
and
adc
dec
into
lods
mov
push
ret
fisubr
mov
(bad)
pop
retf
out
imul
inc
movs
adc
es
cmps
mov
dec
rcl
jp
ficomp
lock
add
push
cdq
cmp
loop
pop
aas
push
test
mov
mov
mov
not
xor
popf
pop
jb
and
sub
dec
dec
aaa
push
pop
test
inc
jo
mov
aam
push
cmp
sub
je
adc
stos
cli
jne
mov
xor
shl
sub
loop
test
lods
sti
mov
mov
shl
mov
adc
and
push
ds
xor
test
ins
jp
add
sub
fs
lods
stos
mov
sub
bnd
popa
call
pop
dec
shl
and
sub
aad
xchg
add
dec
movs
mov
out
mov
or
cmp
in
xchg
outs
fsub
(bad)
jmp
test
or
pop
das
mov
outs
inc
les
daa
dec
and
inc
es
rcl
or
gs
adc
push
shl
pop
lods
pop
cmps
or
xchg
ret
fild
cmpxchg
ret
fisttp
cmp
adc
sub
and
sti
cmp
jo
and
mov
ds
xor
jle
ins
ds
popa
push
mov
sbb
cmp
lds
push
mov
pop
jge
sub
inc
dec
add
sub
cli
sbb
sub
test
addr16
pop
dec
cdq
inc
fld
mov
(bad)
push
mov
mov
popf
inc
lods
sahf
jp
dec
xchg
daa
loope
scas
outs
fisub
(bad)
mov
(bad)
fldenv
mov
(bad)
mov
add
addr16
push
aad
push
loop
gs
adc
lods
xchg
call
sar
mov
into
push
arpl
fild
pop
iret
mov
fsub
in
lods
mov
pop
mov
xor
xor
pop
cmp
imul
add
nop
sti
xor
cli
loopne
stc
in
lahf
sbb
call
xor
adc
sbb
cmp
adc
pop
mul
jo
repnz
cmp
push
frstor
cli
test
xor
mov
xor
stos
jno
in
cmp
outs
test
adc
jb
ins
ficom
mov
dec
mov
push
push
fnstsw
out
js
mov
imul
stos
call
pop
xor
ret
or
bound
push
dec
stos
pop
sub
ss
sub
sbb
add
idiv
fld
lods
mov
xor
mov
pop
dec
pop
adc
mov
xchg
movs
nop
dec
popa
cdq
fcom
dec
pop
dec
jo
sbb
sub
sub
std
inc
pusha
or
std
pop
sub
push
movs
movs
jne
mov
inc
test
xchg
aaa
push
mov
xor
scas
je
jmp
mov
fmul
arpl
push
jno
sbb
movs
jmp
mov
inc
mov
jp
or
inc
pop
in
jnp
inc
mov
mov
sub
inc
jno
sbb
push
sbb
mov
cli
bound
and
js
pusha
test
cmp
cwde
cdq
pop
mov
(bad)
btc
aaa
sbb
imul
mov
ds
outs
in
sub
jmp
pop
add
stc
mov
push
pop
dec
add
add
jp
xchg
add
sub
ds
lock
push
retf
xor
sub
aaa
pop
pop
sbb
inc
cld
call
add
ins
ja
(bad)
mov
addr16
mov
out
adc
ret
packssdw
retf
fistp
(bad)
pop
test
sbb
sub
stos
or
and
or
push
dec
call
dec
mov
jp
mov
xor
es
lds
add
jb
jp
sar
mov
push
add
or
inc
popf
inc
retf
scas
pshufw
add
cmp
ret
xor
xor
mov
(bad)
repz
push
push
div
mov
push
bound
cli
sub
add
sbb
bound
mov
cmp
cmps
push
xor
lock
and
outs
xor
scas
shl
loope
aas
ins
dec
(bad)
cmp
lods
push
out
cwde
push
sub
push
or
pop
add
into
sbb
jge
sub
(bad)
xcrypt-ecb
cmps
dec
jge
mov
and
popf
hlt
inc
mov
jl
jge
dec
nop
je
mov
jmp
sub
xor
cmp
pop
popa
sbb
mov
cmp
inc
mov
xlat
push
mov
enter
lods
retf
xor
fist
(bad)
out
xor
inc
adc
jge
ins
fs
xor
pop
mov
pop
mov
add
loope
daa
push
mov
hlt
clc
js
push
or
int
xchg
jmp
xor
stos
add
xor
adc
dec
push
mov
out
or
mov
add
jo
out
cmp
call
pop
pushf
mov
cwde
(bad)
aam
sub
call
pop
loop
mov
sbb
cmp
inc
mov
mov
jle
ja
pminub
das
cs
mov
dec
daa
or
dec
cwde
cdq
jle
sub
sbb
sbb
inc
pop
sti
es
inc
cmp
mov
push
outs
shl
call
mov
xchg
es
pusha
xchg
inc
mov
pop
inc
dec
pop
outs
fidivr
leave
je
js
enter
(bad)
mov
stos
outs
cdq
cmps
xlat
aas
sub
jge
cmp
lahf
xchg
sbb
test
daa
push
dec
neg
(bad)
das
jo
test
adc
les
test
retf
lods
adc
or
sbb
pusha
inc
test
pop
stc
sbb
not
inc
push
shl
add
and
jl
jecxz
cmp
mov
pop
(bad)
cmp
fcom
dec
ss
cmc
xor
push
and
inc
mov
imul
(bad)
xor
mov
xchg
in
sahf
pop
movs
mov
xor
mov
push
lock
dec
dec
push
xchg
adc
mov
in
and
sbb
fst
aas
arpl
loope
cmp
or
mov
in
mov
push
rcl
js
jp
cwde
cmp
jns
inc
repnz
sub
pop
(bad)
in
cwde
stos
(bad)
lods
and
and
js
or
jmp
sbb
cwde
mov
rol
xor
sub
mov
test
fsin
push
mov
ins
bound
or
stc
add
mov
inc
fbstp
cmp
aaa
inc
mov
out
dec
gs
inc
lods
mov
inc
inc
pop
mov
shl
stc
adc
clc
xchg
mov
mov
cmp
(bad)
std
xlat
inc
out
sbb
loope
(bad)
ret
arpl
adc
rol
fs
or
dec
or
sbb
mov
mov
pop
gs
retf
cmp
(bad)
into
add
add
push
dec
faddp
adc
test
lods
neg
mov
imul
es
ficom
retf
retf
dec
lea
ror
fistp
mov
mov
ins
mov
or
ja
lods
sbb
jle
jbe
jbe
jbe
sti
add
sub
and
mov
jmp
adc
push
addr16
push
cmp
mov
pop
jmp
imul
jmp
lods
mov
dec
inc
fsin
push
jmp
cmp
call
push
out
adc
or
mov
and
dec
lods
mov
dec
loope
shr
fidivr
popa
sti
leave
ja
outs
xchg
push
test
cmp
outs
or
mov
jle
popa
ds
(bad)
and
xchg
add
std
fs
shl
repnz
push
inc
add
and
xchg
push
cmp
xor
inc
xchg
imul
inc
push
test
ret
adc
fs
or
in
lods
int
xor
and
cmp
and
dec
sbb
sbb
mov
jne
jmp
push
xor
fadd
mov
push
dec
sbb
(bad)
sahf
cmp
scas
ficom
clc
or
pop
mov
cmps
aas
loope
retf
sbb
addr16
loopne
test
cwde
mov
adc
loopne
xor
jmp
pushf
xchg
inc
ja
out
xor
mov
scas
aas
xchg
sbb
mov
shr
ret
ins
xor
hlt
push
fcomp
sub
mov
(bad)
xor
js
ins
xor
push
scas
add
(bad)
js
adc
mov
pop
aas
(bad)
loope
sbb
shr
loop
inc
aas
mov
cli
outs
push
mov
test
jns
xchg
iret
jno
jmp
aas
cmp
test
das
pop
add
sub
hlt
mov
sbb
jno
mov
jp
cmp
(bad)
aas
xor
cmc
aas
dec
loopne
data16
inc
rol
pop
jnp
dec
loopne
dec
inc
mov
inc
mov
and
mov
shr
sbb
popa
lds
jbe
push
and
jnp
dec
loopne
inc
in
inc
mov
outs
mov
xor
stc
in
stc
dec
popf
mov
stc
loop
retf
jne
shl
jecxz
mov
dec
push
mov
and
push
mov
cmp
mov
(bad)
pop
sbb
std
in
jno
(bad)
sbb
adc
mov
and
sbb
stos
push
dec
and
(bad)
(bad)
xor
(bad)
call
(bad)
aam
xor
inc
shr
add
outs
jle
jle
int
sbb
sbb
cwde
inc
inc
push
test
mov
inc
cwde
leave
sbb
xchg
cmp
in
xor
cs
es
shl
xchg
shl
sti
in
hlt
mov
inc
jg
fs
pop
or
xor
push
inc
test
out
pop
dec
adc
or
pop
outs
std
add
mov
sbb
xlat
imul
out
push
jl
add
adc
xchg
popa
mov
imul
jno
sbb
jns
call
fbld
pusha
jbe
pop
jecxz
or
bound
data16
xchg
scas
xchg
aad
cmps
fsubp
xchg
iret
clc
pop
aaa
push
inc
arpl
jne
sub
jb
out
inc
dec
ret
dec
cmp
out
dec
imul
mov
dec
call
sbb
pop
jb
adc
(bad)
out
movs
daa
or
ss
sub
ins
xor
fistp
sub
ret
(bad)
lock
and
and
fbstp
mov
xchg
mov
fidivr
fnstcw
repnz
movs
lahf
mov
cmp
adc
mov
xchg
(bad)
mov
add
and
retf
xor
pop
(bad)
mov
cs
push
das
(bad)
xor
adc
shl
jno
sbb
pusha
dec
sbb
pop
in
outs
sbb
mov
lds
cmp
dec
inc
cmps
dec
retf
fldcw
icebp
(bad)
jmp
xchg
bound
cli
xor
jns
xor
adc
bnd
push
test
iret
retf
mov
push
ret
mov
cs
jnp
jmp
fs
mov
push
push
jge
adc
data16
fst
retf
les
sbb
push
add
inc
and
push
daa
inc
jl
and
mov
and
dec
(bad)
xchg
inc
add
(bad)
push
xor
sbb
jo
(bad)
test
shl
movs
addr16
into
push
pop
push
sub
jmp
mov
(bad)
in
imul
das
fiadd
(bad)
mov
push
ds
dec
add
out
mov
adc
jne
add
xor
enter
ss
cmc
adc
sbb
popa
inc
push
pop
xlat
adc
mov
and
adc
inc
ds
lock
imul
sahf
dec
cmps
sbb
ret
loop
mov
je
lea
retf
fsubr
cmc
push
push
out
aad
jle
jns
sbb
sar
rol
ins
cs
aas
cs
add
xchg
pushf
mov
sub
in
mov
sub
stc
lea
adc
xchg
push
mov
xchg
and
and
cmp
add
pop
dec
in
daa
sub
mov
ss
mov
push
jno
(bad)
lahf
frstor
(bad)
movs
add
mov
mov
cmp
fidivr
pop
xor
shl
mov
inc
outs
addr16
mov
ret
cld
addr16
(bad)
dec
icebp
jmp
inc
aam
ret
or
imul
(bad)
and
popf
adc
xor
loop
retf
add
xchg
stc
add
ins
push
je
sub
jb
mov
mov
int3
lds
call
jne
jmp
adc
ficomp
xor
out
xor
ds
cwde
mov
mov
pop
pop
stos
mov
pop
xchg
cwde
cli
jg
and
mov
imul
adc
adc
(bad)
sub
es
cmovne
pop
push
and
loop
mov
nop
retf
rcr
movs
inc
sbb
daa
fwait
sahf
mov
mov
add
ins
sbb
adc
pusha
cmp
xor
daa
fsubrp
loop
and
xchg
pop
dec
imul
xchg
sti
jmp
add
jle
adc
rcl
cmp
dec
push
(bad)
mov
enter
rcl
inc
mov
inc
or
mov
cmc
punpcklbw
lahf
aam
into
mov
fdiv
jle
mov
jp
cmp
xor
adc
or
lea
jmp
lock
sub
xlat
jns
push
adc
mov
mov
pop
push
in
cmovne
inc
sbb
fsub
ret
dec
call
std
ret
dec
sar
ror
sbb
call
(bad)
cmp
jle
in
or
dec
stos
jg
out
movs
and
scas
pop
fsubr
lahf
mov
enter
pop
adc
sbb
lahf
xchg
popf
outs
(bad)
jmp
mov
out
cs
mov
aam
xor
aaa
push
or
shl
cdq
sbb
ds
popf
repnz
dec
movs
mov
and
or
fs
and
repz
retf
out
icebp
jmp
fld
or
call
pop
inc
jmp
(bad)
in
es
jae
out
sbb
addps
loopne
or
test
cmp
dec
cli
adc
dec
jl
movs
mov
sar
push
in
pop
stos
cmp
push
jno
daa
xor
outs
xchg
pusha
repnz
sub
fs
and
or
mov
add
jecxz
sub
cli
gs
sahf
cdq
inc
adc
pop
dec
push
(bad)
nop
ss
xor
arpl
push
fcom
xchg
test
stc
mov
in
mov
jmp
cmp
mov
and
push
push
test
sbb
in
lahf
js
repnz
jecxz
addr16
cmp
imul
cmp
outs
and
or
mov
pop
and
pop
and
dec
mov
arpl
xchg
call
mov
in
cmps
sub
inc
and
shl
ret
xor
mov
inc
push
xchg
repnz
mov
lahf
ror
imul
dec
js
lock
pop
ss
sbb
inc
add
adc
jg
es
call
test
jl
pop
retf
add
test
(bad)
stc
sub
fdiv
ins
mov
mov
dec
push
xchg
es
or
jmp
loopne
cs
ja
adc
mov
test
cmp
ins
push
jl
push
adc
cli
jbe
cmp
jp
ins
adc
xchg
and
les
cmps
das
out
sti
or
sub
dec
cmp
inc
sbb
les
sar
into
in
mov
add
push
mov
out
cmp
call
(bad)
mov
test
cmp
mov
scas
sub
pushf
pop
out
in
repz
jnp
lods
jne
xchg
test
lea
lock
sbb
aaa
sub
pop
or
mov
fwait
arpl
push
in
sbb
jae
int
test
mov
lods
out
mov
mov
and
sub
in
repz
xor
rep
xor
imul
add
js
gs
icebp
sub
jo
pop
js
call
mov
jmp
adc
adc
movs
sbb
xor
mov
popf
sbb
dec
sti
xchg
inc
add
fdiv
mov
sti
sbb
inc
inc
pop
test
cli
loopne
(bad)
and
dec
pop
mov
jmp
jmp
xchg
gs
push
loop
xchg
sti
mov
mov
lds
aad
mov
mov
ja
push
adc
xor
lock
sbb
cmp
pop
and
(bad)
sub
js
ins
jmp
push
jbe
mov
add
popf
jbe
ret
cmc
dec
cmc
jge
lods
cmp
test
leave
jno
adc
leave
mov
stos
push
xor
mov
dec
movs
fiadd
sub
dec
mov
mov
loopne
jns
push
test
fistp
pop
enter
loope
inc
dec
cmp
xor
outs
sub
stos
out
jns
jmp
fwait
push
enter
ret
cmp
sbb
dec
aas
(bad)
inc
imul
icebp
xchg
out
inc
pusha
cmps
daa
shl
or
dec
stos
xchg
mov
test
repnz
int
fcomip
and
(bad)
fsubr
sbb
movs
ret
lock
cmp
pop
aaa
arpl
push
sub
stos
dec
jp
xchg
push
out
pushf
aam
enter
hlt
mov
pop
mov
xchg
lods
pop
add
push
test
adc
lock
or
cmp
xchg
dec
daa
shl
mov
or
sub
dec
push
cmps
ss
lods
out
sbb
cwde
cmp
mov
xchg
and
adc
popa
movs
sahf
ret
add
or
outs
in
push
fisub
ss
and
out
jbe
shr
jns
and
ficomp
in
daa
sub
sahf
lds
and
outs
(bad)
scas
rol
cmp
test
or
push
inc
sbb
adc
add
imul
push
xchg
jmp
cmps
lods
jge
mov
fnstsw
adc
call
sar
push
scas
cmp
pop
push
retf
cmp
repz
sub
pop
pop
js
lods
cmp
and
call
imul
push
test
out
pop
pop
icebp
ja
repz
rol
mov
sub
loopne
dec
and
and
pop
push
jmp
mov
push
push
sub
ins
in
pop
inc
xor
push
iret
push
dec
push
jbe
mov
mov
or
data16
or
xor
xor
out
rcl
pop
mov
es
push
pusha
pop
mov
jb
dec
xlat
lds
inc
pusha
pop
mov
adc
jmp
jl
dec
(bad)
xor
mov
push
jecxz
retf
push
call
rcl
aam
mov
pop
jp
add
mov
rol
push
adc
dec
mov
cli
push
push
xchg
sti
data16
push
mov
pop
addr16
mov
and
dec
add
nop
push
jmp
(bad)
push
xchg
lods
outs
dec
xchg
cmp
add
out
inc
inc
sub
mov
mov
sbb
jne
jmp
loopne
inc
ss
sbb
jle
addr16
test
jnp
arpl
jge
in
cmps
bound
fucomi
mov
mov
mov
stos
or
sub
inc
enter
enter
sub
dec
mov
and
xor
mov
cmc
pop
imul
ror
nop
mov
cs
lods
pop
cmps
shr
out
gs
add
shl
cwde
sbb
push
push
jns
sbb
sbb
push
jno
xchg
daa
clc
cdq
inc
cwde
mov
mov
push
dec
(bad)
or
outs
inc
jnp
pop
and
popa
pop
test
add
mov
pop
mov
enter
(bad)
mov
sbb
pusha
fs
cli
ins
movs
inc
jns
and
adc
retf
mov
stos
add
mov
inc
pop
imul
cmp
mov
xchg
imul
cmp
jp
add
xchg
fld
pop
loop
adc
pop
add
out
pop
mov
icebp
add
shl
pop
sub
mov
push
(bad)
or
mov
and
or
xor
and
daa
pop
outs
mov
jp
mov
mov
call
bound
gs
jns
and
jbe
shl
mov
fcomp
inc
jge
ret
mov
sbb
cmp
movs
add
inc
lds
mov
nop
imul
sub
out
and
dec
xor
enter
mov
ins
mov
leave
jne
loop
cmp
cmp
add
sub
inc
test
stc
scas
jne
lds
and
pop
mov
cmpxchg
cmp
and
stc
jb
mov
push
mov
movs
fidiv
and
or
and
mov
dec
xchg
shl
loope
stos
dec
or
push
push
mov
fdiv
sbb
pop
or
inc
cdq
cs
fmulp
jge
add
mov
stc
mov
xchg
mov
in
sub
cmps
cmp
ins
xor
nop
mov
test
popa
js
je
mov
xchg
pop
add
ficom
add
mov
stos
sar
adc
shr
icebp
in
inc
cmp
mov
ror
jo
hlt
ins
in
sbb
in
pop
xchg
cmp
dec
out
(bad)
cmps
mov
inc
or
xchg
pop
or
jmp
loop
adc
rol
or
jne
sbb
popa
pop
iret
jne
jnp
mov
stos
sub
inc
mov
push
mov
loopne
pop
das
sbb
rol
xor
arpl
popf
fisubr
inc
xor
test
div
and
jae
rol
scas
mov
inc
cmp
push
cmp
and
stos
stc
jae
mov
ret
(bad)
inc
jecxz
ins
jmp
and
push
int3
std
jae
pop
mov
jge
pop
jns
stos
mov
jle
xor
dec
(bad)
inc
cmove
mov
out
push
add
sub
adc
xlat
xchg
cmp
jns
dec
std
das
mov
aas
aam
add
or
faddp
jb
xchg
out
aam
adc
dec
jne
lahf
and
dec
sub
sub
xchg
adc
enter
mov
aas
sub
in
loop
or
dec
(bad)
jns
pushf
pop
loope
push
call
xchg
repnz
adc
inc
icebp
xchg
or
jmp
dec
cmp
sub
sbb
and
lea
pop
into
test
mov
mov
push
sar
xchg
push
mov
std
mov
dec
dec
shr
in
mov
fidivr
jecxz
sti
jl
cmp
scas
cmp
gs
and
mov
cmc
lds
add
sbb
mov
xor
jmp
push
outs
pushf
mov
les
std
lods
xchg
lea
mov
dec
je
loop
icebp
popf
mov
fbstp
je
xchg
div
shl
fimul
ins
ror
cmp
(bad)
xchg
lods
jns
jmp
ins
bound
(bad)
in
pushf
sub
fimul
fs
mov
jg
dec
mov
outs
data16
pop
dec
dec
mov
enter
fmul
je
cmp
mov
scas
(bad)
inc
stos
cli
(bad)
sub
or
mov
mov
data16
mov
pop
cdq
mov
cmp
cmps
push
loope
xor
push
in
sar
adc
add
popa
mov
imul
and
or
mov
mov
and
ins
(bad)
cmp
push
sbb
xor
fninit
inc
clc
shr
cmp
fs
std
and
cmc
push
xor
cmp
mov
mov
push
sub
in
in
adc
add
dec
mov
jmp
and
test
dec
pop
test
fiadd
xchg
add
ss
test
sbb
dec
mov
pop
jb
aad
dec
scas
test
rcl
inc
mov
sahf
pop
pop
mov
xor
imul
pop
test
(bad)
gs
addr16
mov
mov
repnz
sbb
add
mov
cmc
dec
sub
dec
push
stos
or
xor
aam
fs
pop
jne
out
inc
inc
pop
xlat
pop
(bad)
mov
mov
jmp
cmp
fs
ficomp
and
sbb
fwait
mov
mov
jmp
and
jo
loopne
mov
ficom
xchg
xchg
sahf
ss
xchg
repnz
jns
sbb
mov
and
add
fsub
xor
inc
push
retf
sar
sar
(bad)
jbe
dec
inc
xchg
push
out
hlt
dec
enter
mov
sub
jge
xor
cld
popf
mov
test
mov
aam
adc
dec
(bad)
dec
pop
jle
add
push
mov
xor
imul
mov
cmp
mov
out
inc
movs
add
inc
test
push
and
ja
movs
repz
loope
outs
xor
mov
stos
or
push
jbe
in
pop
push
and
push
cli
or
mov
(bad)
fs
mov
or
push
inc
out
pop
or
jge
repz
jle
ja
sti
mov
test
pop
xchg
inc
and
pop
in
dec
inc
jo
add
mov
mov
xchg
mov
mov
call
cmps
mov
xchg
cmps
sub
push
mov
(bad)
or
xlat
aam
stos
js
popa
mov
mov
ja
aam
or
jle
pop
cmp
fcmove
movs
inc
adc
or
pop
(bad)
pop
add
stos
push
(bad)
in
inc
cmps
fwait
add
xchg
and
pop
scas
inc
ins
(bad)
out
fsubr
push
(bad)
repnz
test
pusha
or
xor
dec
sbb
dec
ja
jbe
mov
stc
jns
lahf
push
xor
jno
jmp
je
cs
sar
or
jne
bnd
or
mov
dec
pop
in
push
pop
sahf
push
and
ja
(bad)
adc
dec
jo
imul
dec
aad
js
cmp
dec
mov
mov
pop
cs
mov
repnz
adc
inc
repnz
test
faddp
dec
ret
push
fld
loopne
outs
xchg
pop
dec
jmp
mov
mov
in
pop
test
cmps
push
mov
imul
or
fsub
adc
sbb
addr16
(bad)
icebp
sti
cwde
jl
dec
add
mov
push
pop
xchg
inc
call
fidivr
or
pop
cdq
jl
push
in
hlt
addr16
mov
je
stos
fldcw
sub
add
mov
or
dec
cli
pop
mov
test
cmp
fisttp
inc
and
ins
int
(bad)
cmp
iret
loope
fnstsw
sbb
and
mov
xor
add
mov
inc
mov
repz
or
mov
ror
push
adc
xor
mov
adc
pusha
shl
pop
xchg
arpl
cmp
pop
xchg
mov
mov
cmps
mov
mov
jecxz
mov
pop
cmp
neg
jg
int
cmp
enter
cmps
cwde
shr
mov
inc
xchg
(bad)
out
adc
jmp
mov
cmp
push
and
repnz
and
cmp
pop
jge
aaa
sub
aas
fs
dec
mov
add
ins
pop
add
scas
cmp
pushf
push
in
xchg
pop
pop
test
or
pushf
xlat
ins
clc
sahf
retf
pop
jne
and
outs
pop
gs
scas
aaa
ret
out
dec
xor
sub
fs
arpl
lds
dec
rcl
ss
test
out
pusha
fiadd
fcmovbe
call
(bad)
ins
repz
in
or
hlt
(bad)
lahf
jecxz
dec
rcr
cmp
jp
mov
in
movs
xor
scas
repz
(bad)
pushf
movs
popf
add
(bad)
int3
inc
mov
sbb
sbb
repnz
mov
mov
jbe
jle
arpl
xchg
sbb
and
mov
int3
pushf
neg
scas
push
aad
mov
jb
lock
test
mov
sbb
and
lods
mov
and
rcr
dec
sub
xchg
xchg
shl
ds
mov
ins
fstp
jbe
aaa
fst
in
adc
xor
mov
cdq
lds
sub
and
and
in
mov
sub
jae
mov
mov
sti
ret
retf
add
popa
faddp
adc
sub
sub
xchg
stc
test
mov
xchg
mov
pop
xchg
and
and
pop
push
call
loop
dec
sbb
aam
add
pop
jecxz
pusha
adc
mov
or
retf
leave
adc
scas
hlt
jne
dec
sub
push
pop
fucomi
mov
or
(bad)
mov
sbb
mov
jae
imul
lods
rcl
jmp
jno
mov
jmp
or
repnz
sub
fnstenv
jmp
repnz
mov
adc
mov
push
sbb
jl
mov
dec
popf
mov
mov
or
cmp
mov
(bad)
pop
dec
or
test
jmp
and
movs
push
hlt
mov
mov
or
jmp
xor
nop
out
mov
add
out
mov
imul
ret
sub
push
sub
(bad)
ror
scas
out
lock
cmp
mov
or
shl
mov
dec
inc
jbe
dec
sub
daa
xsaveopt
(bad)
mov
clc
sub
cmp
and
and
data16
call
rcr
jns
and
and
dec
add
pop
std
dec
add
sbb
in
jg
inc
push
mov
adc
fsub
cdq
fwait
je
sahf
imul
ret
jmp
lds
jns
das
inc
dec
(bad)
outs
or
and
adc
sar
cmc
jmp
loopne
pop
xchg
in
mov
xor
mov
ins
dec
mov
push
mov
lods
pop
hlt
fmul
add
sub
(bad)
aam
push
dec
or
in
nop
cmp
mov
push
pop
jo
xor
js
aad
and
jg
push
jns
sub
mov
cmp
inc
xchg
sbb
stos
aam
sar
or
cdq
stc
sub
outs
pop
and
int
mov
pop
dec
aas
stos
hlt
mov
in
xchg
hlt
mov
in
push
xor
inc
int
stc
adc
push
inc
xlat
pop
daa
hlt
ret
ja
xchg
push
sbb
loopne
mov
push
mov
inc
sub
leave
add
lods
xor
test
xchg
adc
xor
pop
call
push
aaa
cdq
dec
xlat
push
jmp
ja
test
lahf
ja
stos
mov
jne
shr
mov
ret
aad
adc
scas
dec
and
cmps
jmp
adc
jecxz
push
lds
(bad)
xor
sti
xor
or
mov
test
imul
jmp
ins
fsub
les
fiadd
and
jo
imul
jne
pop
fld
xchg
inc
icebp
add
sahf
out
dec
jno
aas
dec
pop
neg
mov
stos
cmp
ins
jno
stos
es
mov
je
imul
xchg
adc
add
cmp
xchg
add
int3
aaa
push
or
and
les
mov
and
sub
jbe
call
inc
dec
shl
pop
sbb
xchg
das
mov
arpl
xor
pop
imul
dec
pop
aas
(bad)
cmp
dec
push
mov
push
jge
jnp
jp
fs
add
sub
inc
pop
jg
sub
ja
movs
out
cmp
or
mov
cmc
xor
repz
sub
jbe
(bad)
aad
std
inc
mov
dec
cmps
sar
jmp
js
inc
test
or
sub
lea
mov
mov
(bad)
jb
mov
cmp
sub
pop
mov
xchg
enter
jb
inc
sub
mov
test
push
stos
sbb
or
add
push
icebp
lods
call
scas
in
inc
jmp
sar
(bad)
sub
or
out
ret
mov
shl
pop
mov
dec
inc
dec
imul
xor
xchg
push
xor
mov
out
inc
xchg
inc
fcomip
mov
repnz
or
stc
cmp
or
cmp
movs
jns
test
and
and
push
add
in
std
sub
cld
lods
pop
push
add
lea
fsub
dec
int
adc
inc
aam
(bad)
push
fidivr
into
cmp
add
jb
or
cmps
stos
or
mov
movs
(bad)
jno
aas
jno
sbb
ins
jo
js
mov
rcr
and
scas
dec
jl
outs
mov
push
or
ror
lahf
adc
mov
es
leave
push
mov
jp
scas
mov
xchg
sbb
mov
int3
fwait
mov
frstor
popf
icebp
in
pop
push
inc
mov
sub
lods
jp
nop
xlat
scas
sub
cmp
or
cmp
add
stc
and
mov
dec
jge
mov
jbe
lods
cmp
in
push
fs
sub
adc
jbe
jnp
cmp
mov
out
mov
cmp
xor
jns
adc
push
adc
pop
faddp
mov
retf
lea
and
mov
sub
jmp
cmp
test
es
lods
repz
or
pop
daa
jecxz
mov
push
mov
fucom
xor
sbb
int
mov
iret
lahf
(bad)
je
test
cli
jp
adc
jecxz
mov
out
inc
mov
add
mov
mov
mov
cdq
mov
test
das
ins
(bad)
pop
adc
cmp
add
jbe
loop
stos
lods
mov
iret
shl
pop
stos
push
ret
push
or
cmps
or
inc
add
cmp
lea
mov
in
lds
xor
add
out
xor
xor
jp
aaa
rol
cwde
sar
mov
jl
in
and
iret
cmp
shl
sub
mov
push
push
rol
popf
cmp
mov
xchg
test
cli
sub
aad
stos
xlat
lods
sahf
jge
fxtract
fsub
mov
inc
adc
push
jno
inc
pop
push
gs
xor
in
aas
xchg
inc
popf
lea
in
lahf
jle
inc
mov
ret
mov
xchg
inc
stos
gs
or
mov
mov
adc
fisubr
mov
(bad)
retf
out
gs
inc
(bad)
js
pop
shl
add
call
sti
add
retf
test
inc
sbb
push
jle
es
jp
sub
sub
push
add
jl
push
neg
bound
mov
xor
fidivr
add
popa
mov
xor
hlt
sbb
je
outs
inc
push
shl
xor
shl
aad
sub
inc
std
data16
cmp
jmp
shl
je
jl
loopne
cld
cld
add
xchg
out
jle
je
jge
js
sbb
pop
dec
push
loope
or
aaa
cmps
fidiv
int
or
js
sahf
mov
mov
inc
xor
rcl
test
cmp
stos
aaa
in
mov
and
xchg
dec
and
mov
enter
inc
inc
jnp
push
call
push
dec
push
clc
outs
aad
cmps
mov
adc
dec
shl
popf
dec
daa
jp
inc
jae
jns
loope
xlat
stos
adc
fcom
mov
adc
pop
daa
test
xlat
push
pusha
ins
fsin
dec
fdivr
das
mov
push
jo
push
sbb
fsubrp
(bad)
(bad)
(bad)
sub
inc
nop
jmp
mov
cdq
xor
mov
scas
jl
and
jns
push
xchg
xor
inc
push
mov
pusha
test
mov
pop
mov
cld
cwde
adc
mov
pop
and
jmp
outs
cs
sbb
xor
sahf
adc
les
mov
push
cmp
xchg
movs
adc
repz
jmp
cmc
cmp
sub
inc
loopne
mov
pop
lahf
in
scas
sbb
push
pusha
add
scas
out
add
mov
and
dec
mov
xor
add
cmc
imul
jne
adc
push
add
shl
inc
sbb
mov
data16
adc
mov
mov
mov
std
std
(bad)
cli
push
mov
adc
xor
and
nop
mov
rcl
sub
mov
pop
and
inc
sbb
ret
adc
xchg
adc
xchg
ror
push
jnp
in
xchg
dec
or
cld
jns
(bad)
jmp
rcl
js
mov
in
sbb
xchg
push
push
push
inc
jns
or
fbstp
fist
pop
leave
mov
push
je
mov
loopne
cmp
sbb
outs
dec
pop
pop
int3
push
sub
mov
jle
dec
je
stos
hlt
icebp
enter
push
test
(bad)
idiv
lock
push
mov
xor
gs
dec
xor
jmp
inc
push
xlat
jmp
sbb
mov
cmp
mov
inc
jno
sub
inc
div
loopne
push
(bad)
aam
fadd
inc
add
les
dec
mov
mov
jmp
fs
fwait
test
xor
pop
(bad)
aaa
xchg
(bad)
test
xchg
imul
push
fidivr
jmp
add
ficom
jl
mov
inc
je
fsubr
stc
js
add
xchg
xchg
or
mov
inc
inc
lock
out
lods
mov
push
shl
push
cld
xchg
fcom
shl
push
addr16
xchg
out
push
inc
mov
and
mov
out
or
(bad)
mov
mov
repz
cli
jnp
push
out
and
mov
(bad)
jl
cmp
push
movups
xchg
inc
dec
push
jb
pop
sub
cmp
std
sbb
mov
mov
xchg
cmp
jle
test
mov
ror
mov
gs
xor
pop
mov
xor
pop
sbb
sub
xor
pop
xor
(bad)
inc
jmp
add
popf
data16
pop
bound
or
ficomp
jl
sbb
cli
fwait
xchg
xchg
leave
std
retf
sub
jle
ror
and
adc
repz
mov
(bad)
pop
arpl
popa
sbb
jo
or
mov
and
mul
popf
shl
pop
pop
sar
fcom
js
movs
dec
ret
adc
and
movs
or
das
mov
leave
mov
fsub
xchg
ret
push
(bad)
sbb
mov
and
jl
mov
or
imul
pop
xor
outs
cwde
inc
(bad)
rcl
sub
call
call
ds
rol
sbb
push
sub
push
ins
mov
test
pop
xor
fild
xor
jmp
mov
xor
xor
jns
push
pop
imul
popa
jbe
sar
mov
pop
xor
sbb
mov
das
pop
movs
loopne
mov
adc
and
fisubr
push
in
xchg
or
(bad)
pop
inc
pusha
jle
and
(bad)
jae
add
call
jno
jnp
xchg
not
pop
in
mov
retf
popf
adc
xchg
lds
pop
aam
pop
inc
sub
add
fidivr
inc
shl
sbb
mov
jmp
mov
dec
arpl
and
aaa
adc
hlt
inc
dec
repnz
sbb
cmp
data16
aam
bnd
out
sahf
jbe
(bad)
icebp
addr16
xchg
scas
push
cmp
test
ds
dec
push
test
test
js
mov
pusha
mov
stos
or
sti
mov
rol
test
add
loop
repnz
xlat
repnz
cmp
jg
and
ja
inc
loop
inc
cmp
addr16
sub
push
jbe
xor
(bad)
cmps
ret
mov
stos
mov
icebp
stc
(bad)
sbb
jb
sub
cwde
popa
jno
lods
jmp
push
push
add
adc
mov
xchg
pop
adc
xchg
cmp
stos
sbb
and
cld
shl
ret
push
jbe
pushf
push
add
lahf
popf
les
inc
scas
js
mov
bound
push
ds
mov
nop
push
cwde
and
adc
mov
pop
and
test
dec
cmp
mov
cmp
jmp
neg
mov
and
fmul
out
xor
adc
inc
ss
arpl
int3
dec
inc
push
fiadd
sub
(bad)
sub
mov
sbb
pop
cwde
fadd
sbb
jbe
lock
cmp
(bad)
push
(bad)
aad
jmp
pop
(bad)
xor
fs
xchg
jmp
mov
jg
retf
push
mov
dec
mov
lds
std
mov
pop
cmps
js
sub
movs
ror
xchg
jae
mov
jae
push
push
inc
mov
jle
xchg
cmp
sub
fwait
cmp
icebp
icebp
shr
stc
inc
retf
es
push
jecxz
jb
fsub
inc
dec
adc
sbb
mov
sbb
mov
ret
push
cmp
sbb
iret
inc
mov
rcr
xor
push
or
cmp
pop
pop
cmc
bound
fwait
mov
imul
inc
push
inc
sub
push
mov
mov
and
dec
jo
cmc
imul
jg
xlat
mov
fwait
xchg
fcmovb
not
cli
ins
scas
leave
test
mov
push
pop
jl
test
mov
xchg
in
xor
pushf
addr16
mov
loop
cdq
out
sbb
loopne
inc
xchg
sbb
sbb
cwde
ss
pop
inc
push
lock
and
adc
repz
gs
sahf
adc
add
xor
into
fwait
in
inc
jg
scas
js
loope
call
and
stos
inc
jnp
jne
aas
push
jmp
gs
add
lods
pop
jg
jmp
and
cmp
in
call
(bad)
outs
sub
xchg
or
push
or
adc
jae
mov
xchg
rol
mov
arpl
cld
popa
pusha
nop
xchg
loope
adc
jge
jl
sub
cmp
out
xor
push
sbb
ror
enter
es
xchg
mov
out
test
sub
out
cmp
test
sub
aaa
inc
xlat
inc
add
push
fstp
lea
inc
dec
inc
fwait
push
xlat
sub
push
adc
ins
fdiv
sub
cdq
mov
mov
dec
cmp
add
xor
sbb
es
aam
retf
hlt
fdiv
xchg
stc
mov
pop
lods
test
cmp
push
or
bound
inc
pop
movs
jmp
mov
mov
and
adc
mov
mov
shl
mov
jb
mov
sbb
adc
addr16
xchg
inc
jge
(bad)
or
fs
pop
clc
xor
push
adc
out
pop
push
ret
jl
test
in
sbb
pop
sbb
pushw
int
out
mov
xchg
pop
inc
mov
daa
in
jl
jo
sbb
cld
popa
xchg
sub
adc
mov
add
inc
push
arpl
movs
and
jno
and
mov
mov
punpckhwd
imul
retf
pop
rcr
or
push
inc
repnz
dec
dec
stc
(bad)
jnp
push
push
dec
push
pop
ins
arpl
add
les
(bad)
inc
dec
or
dec
aam
(bad)
cs
push
mov
mov
sbb
pop
and
lds
jp
in
adc
sub
sbb
popf
mov
add
movs
(bad)
jno
inc
lea
cmp
pop
push
popf
addr16
retf
mov
mov
imul
je
inc
mov
pop
lds
xor
nop
popa
out
cdq
in
pop
mov
jne
pop
jp
stos
xchg
and
sub
stos
out
mov
inc
aaa
aaa
push
xchg
arpl
dec
cmp
test
pop
loop
in
test
push
std
sub
enter
loope
in
push
lods
adc
lea
pop
(bad)
(bad)
mov
in
int
adc
neg
into
dec
and
movs
pop
and
stc
mov
mov
leave
push
cmp
scas
(bad)
outs
cwde
ret
adc
(bad)
imul
fstp
dec
outs
ins
dec
int3
cmps
cmp
push
jo
mov
lds
inc
loop
sub
jnp
imul
cmc
or
enter
sub
jg
std
adc
stos
add
bound
xor
jnp
xor
hlt
mov
icebp
mov
adc
xlat
adc
ds
dec
cmp
test
xor
mov
movs
sub
jne
hlt
mov
and
arpl
pop
icebp
push
pop
out
loop
mov
pop
or
mov
push
inc
sub
jmp
xor
mov
dec
pop
sahf
add
mov
icebp
(bad)
outs
and
out
pop
or
ret
cmps
shl
cs
sar
inc
cli
add
pop
test
add
mov
mov
pop
dec
mov
sub
jle
push
pop
(bad)
xor
dec
jbe
xchg
xchg
scas
enter
mov
icebp
push
pop
std
inc
or
ror
and
jl
pop
in
and
pop
push
test
pop
pop
add
loope
jmp
dec
xchg
mov
inc
dec
push
sbb
mov
call
shl
pusha
stc
add
cmps
jmp
ret
stc
cdq
xor
cwde
xchg
cmp
mov
jg
aaa
jb
and
lods
lods
lds
add
pop
adc
pop
cmp
push
mul
adc
push
jmp
repnz
adc
cmc
mov
cmp
cmp
mov
pop
retf
mov
mov
dec
ror
out
add
push
xor
test
mov
imul
mov
dec
inc
call
xor
cdq
ss
mov
mov
push
inc
mov
mov
and
or
inc
sub
imul
add
or
out
dec
jno
out
push
sub
pop
jbe
adc
push
pop
sar
jmp
xchg
hlt
add
clc
(bad)
mov
cmp
sbb
loopne
cmp
xchg
mov
call
(bad)
xchg
arpl
sbb
push
cmc
cld
out
fs
shr
cmp
scas
clc
mov
scas
data16
or
call
push
xor
(bad)
adc
jmp
push
mov
dec
or
ins
mov
div
push
jb
nop
rol
loopne
pop
sub
inc
clc
adc
mov
dec
pop
dec
mov
scas
pop
inc
fdivr
xchg
cli
(bad)
xchg
mov
scas
mov
cmp
(bad)
sbb
mov
les
movs
aad
push
pop
jp
mov
pop
add
movs
ret
(bad)
fadd
push
cmps
outs
push
mov
mov
fmul
das
loope
jbe
xor
out
mov
rcr
ja
jns
arpl
(bad)
fcmove
movs
inc
mov
sub
je
test
cmp
cmp
mov
neg
std
div
cmps
shr
icebp
icebp
or
push
out
mov
sar
xor
lock
scas
mov
int
jmp
popa
test
sub
lahf
fnsave
imul
out
gs
test
stos
ffreep
sub
pop
ins
cli
daa
pop
jne
std
xchg
and
push
cmp
aas
pop
ret
sbb
inc
jbe
cmp
pop
pop
jne
je
movs
cmova
or
lods
ret
push
pop
stos
sbb
push
inc
je
xor
mov
je
add
in
add
push
es
push
aas
jge
or
xchg
nop
test
dec
add
sbb
mov
bound
or
pusha
jl
and
jb
xchg
push
or
loopne
or
lods
add
push
dec
jge
and
call
pop
mov
mov
sub
arpl
cmps
inc
(bad)
cmp
mov
cdq
push
and
pusha
out
adc
inc
or
ja
sahf
outs
(bad)
loop
add
cdq
and
mov
pop
not
push
or
ins
mov
aam
in
pop
(bad)
aad
push
ret
push
xlat
pop
sbb
bound
jae
daa
sar
retf
dec
lock
cmp
mov
dec
ja
push
push
(bad)
enter
ss
pop
adc
cs
jl
stos
aam
nop
jnp
repz
adc
jae
mov
xor
(bad)
clc
ja
(bad)
push
inc
out
(bad)
inc
aad
mov
add
ja
ret
cld
es
imul
(bad)
(bad)
cmp
sbb
out
fdivr
and
xor
adc
mov
repz
fldenv
leave
(bad)
mov
popf
icebp
sub
ds
jae
imul
jae
xchg
or
push
je
ja
test
adc
xor
cmp
inc
retf
mov
cwde
and
add
cmps
(bad)
jns
stos
out
push
lahf
and
jmp
xchg
or
sub
cdq
mul
fild
fild
mov
jnp
js
ror
pop
aas
dec
cmps
ins
iret
ins
xor
sbb
jae
mov
mov
mov
adc
inc
xor
cmps
outs
movs
cs
repz
or
icebp
dec
dec
jo
(bad)
or
pop
xchg
xchg
pushf
push
pop
sub
push
sub
mov
push
jb
fstp
inc
jp
pop
xchg
movs
movs
pop
xchg
adc
xchg
fisttp
addr16
fs
fbstp
(bad)
push
pop
mov
sahf
or
dec
or
ss
xor
jecxz
fisub
xchg
push
rcl
cdq
outs
mov
dec
sbb
inc
ds
mov
pop
js
sbb
das
(bad)
sbb
cmp
and
xchg
push
das
mov
in
push
lods
lahf
dec
sub
lods
dec
test
addr16
mov
push
cli
add
aas
test
add
mov
inc
lods
out
popf
push
pop
add
sub
inc
or
jle
pop
push
outs
jmp
(bad)
and
daa
out
(bad)
(bad)
pop
jmp
mov
sbb
cmps
jecxz
or
adc
xor
out
or
shr
sbb
popa
push
sbb
add
fisttp
pop
js
outs
inc
jl
xor
xchg
jg
jnp
adc
mov
(bad)
pop
enter
ins
out
and
pop
and
sahf
mov
mov
loope
jns
inc
mov
jno
cmps
xchg
jl
or
loop
adc
jg
or
adc
adc
test
dec
cmp
xchg
test
fnstenv
(bad)
sti
xor
inc
fnstcw
pop
cmc
leave
mov
push
push
pop
mov
enter
mov
popf
ss
jb
scas
add
push
and
inc
or
mov
cli
pop
sbb
xchg
and
xchg
inc
je
push
cs
aaa
in
jecxz
add
addr16
sbb
std
sbb
test
jb
inc
fwait
imul
push
add
sub
inc
in
jmp
fsubr
adc
inc
sub
test
mov
push
cmp
ss
retf
cld
dec
mov
adc
les
fidivr
iret
ds
shl
push
test
jle
gs
mov
pop
xchg
add
mov
scas
ins
outs
pextrw
jno
(bad)
cmp
push
ret
pop
xor
fsub
aas
bnd
je
jnp
push
stos
nop
xor
add
repnz
std
add
adc
push
(bad)
sub
push
lock
adc
xchg
es
or
jecxz
adc
arpl
mov
mul
jne
aad
(bad)
outs
jno
inc
cmp
cmp
cdq
imul
loopne
xchg
stos
cmp
fwait
test
rcl
adc
push
neg
xchg
std
push
movs
(bad)
mov
mov
fiadd
mov
mov
mov
dec
jae
outs
xchg
bound
mov
sub
xor
xchg
add
inc
dec
mov
jnp
adc
and
dec
aad
stos
adc
ja
mov
movs
je
test
rcl
sub
movs
sbb
and
pop
mov
pop
jge
es
push
mov
sar
xchg
inc
ret
inc
cdq
jae
jge
mov
jo
mov
add
aam
dec
dec
outs
push
cmp
fsqrt
cmp
stc
sar
(bad)
leave
mov
sar
arpl
popf
(bad)
in
out
cmc
clc
or
cld
stc
cmp
fidiv
sbb
cmp
adc
addr16
ror
outs
out
dec
mov
out
fiadd
mov
xor
ret
in
add
cmp
pop
push
sbb
enter
push
fsubr
dec
mov
adc
scas
enter
outs
fwait
cmc
repz
sub
dec
(bad)
mov
lahf
jle
sar
fld
gs
scas
mov
fdivr
gs
xor
popf
dec
mov
stc
mov
clc
retf
jns
jnp
imul
xor
jbe
pop
jno
dec
int
imul
ds
jo
es
movs
mov
mov
xchg
test
inc
mov
shl
les
sbb
mov
pop
jp
daa
cmp
lds
sbb
mov
dec
cmp
or
and
test
mov
retf
mov
shrd
addr16
inc
addr16
and
in
mov
mov
ret
shl
mov
aas
mov
in
std
pop
cmp
sub
jmp
cld
inc
in
cmp
into
int
retf
jle
xchg
fild
mov
into
sbb
xlat
icebp
cmp
retf
mov
mov
dec
(bad)
int
ss
mov
jle
dec
loope
outs
push
retf
push
movs
xor
test
or
xchg
ss
shr
rol
mov
pop
inc
sub
dec
cmp
jl
scas
push
mov
sbb
adc
or
lahf
int3
push
inc
mov
and
int3
faddp
fstp
xchg
xlat
cmp
adc
or
cli
inc
shl
mov
ins
aad
(bad)
loop
push
test
mov
cwde
imul
or
ficomp
or
add
adc
push
gs
mov
adc
out
repnz
repnz
ss
repnz
call
jmp
jmp
sub
push
push
shl
jecxz
scas
mov
in
push
test
jae
movs
outs
mov
fwait
mov
inc
pop
jne
scas
jno
sbb
bound
cmps
pop
out
push
pop
aad
jecxz
sbb
add
stc
rol
cs
cli
in
xchg
jmp
loope
sahf
push
adc
jp
push
aad
clc
jmp
fs
mov
int3
dec
jle
idiv
fimul
fwait
mov
mov
pop
cmp
lds
pop
mov
sbb
in
mov
adc
mov
stc
jge
sar
pop
shl
mul
in
cmp
xlat
(bad)
sbb
aas
js
cmc
jl
and
jmp
in
scas
cmps
mov
fnstenv
cmp
dec
mov
addr16
mov
adc
mov
les
mov
jg
pop
imul
xor
(bad)
movs
mov
jmp
rol
dec
dec
sbb
call
sub
fadd
mov
dec
ret
and
and
xor
aad
sbb
dec
jecxz
pop
pushf
jo
(bad)
or
sbb
jb
loopne
out
dec
xchg
sbb
jns
mov
jno
jle
(bad)
xor
rol
sub
loope
push
daa
(bad)
xor
push
scas
and
jbe
adc
mov
stos
sti
sbb
sub
and
aaa
ss
jmp
inc
rcl
arpl
sbb
jmp
les
aam
fld
jno
and
cmp
and
jg
repz
inc
add
leave
dec
add
inc
or
or
or
lds
gs
daa
jnp
aas
pop
jmp
inc
(bad)
jmp
sub
adc
or
jnp
out
and
(bad)
outs
sbb
retf
cmp
push
(bad)
mov
pop
daa
cwde
sbb
bound
xor
les
push
js
sbb
mov
add
jns
push
pop
push
test
add
stos
arpl
lds
jae
push
jg
xor
iret
outs
mov
inc
dec
scas
mov
test
jge
push
jle
xchg
mov
rol
jb
mov
jle
add
pop
in
je
(bad)
push
pop
inc
dec
in
sti
dec
sub
inc
dec
and
push
imul
pop
xchg
mov
jl
rcl
and
adc
popf
popf
loope
adc
or
outs
sub
les
jmp
call
dec
(bad)
xor
and
repnz
inc
dec
sub
xchg
inc
hlt
lds
(bad)
icebp
(bad)
adc
cmp
or
jge
cmp
mov
dec
jnp
push
cmp
imul
int3
xchg
ror
aaa
fmul
imul
aam
xor
push
mov
adc
out
sub
xor
push
loope
sbb
and
jp
pop
ret
sbb
sbb
sub
retf
xchg
inc
das
pop
adc
cmp
xor
outs
jle
out
fbstp
mov
mov
jne
xchg
aad
and
leave
sub
scas
ret
je
fmul
mov
add
jns
sub
leave
fsub
gs
dec
inc
repz
push
sub
ins
ja
sub
repnz
aaa
pop
xlat
out
sub
push
push
cmp
pop
inc
leave
out
or
pop
dec
inc
test
adc
dec
outs
loop
mov
adc
cs
pop
sbb
push
repz
add
js
inc
inc
idiv
fwait
pop
pop
cmp
xchg
push
icebp
(bad)
mov
popf
outs
test
inc
jnp
aad
push
inc
scas
mov
mov
add
(bad)
cmp
push
icebp
push
je
add
pop
mov
xor
adc
ins
inc
push
pop
or
fimul
pop
xchg
sbb
pusha
inc
cmp
inc
mov
inc
gs
xor
inc
adc
pop
cmp
pushf
push
lock
pop
and
mov
dec
out
mov
sbb
sbb
jl
mov
or
retf
sti
sub
inc
call
adc
jne
lods
aad
popa
add
pop
retf
lock
xor
inc
dec
push
mov
and
pusha
cmp
rcl
pop
ror
dec
cmp
retf
xor
imul
and
ins
popa
nop
dec
pusha
es
dec
sub
inc
(bad)
sbb
outs
daa
fnstsw
xor
or
mov
push
fidiv
icebp
fbstp
dec
pop
mov
test
mov
pop
inc
mov
lahf
push
xchg
xchg
mov
imul
inc
and
xchg
pop
movs
sub
and
test
inc
sbb
popa
dec
mov
in
cwde
pop
mul
xchg
and
xor
dec
mov
rol
call
mov
aaa
cmp
dec
cmp
shr
push
call
data16
jmp
outs
in
adc
movs
dec
cmc
(bad)
call
cwde
mulps
xor
int3
push
test
ret
sbb
cdq
xor
mov
bsr
dec
fidivr
add
aas
fs
loop
push
addr16
mov
dec
icebp
(bad)
cmp
ds
sahf
dec
mov
xchg
push
pop
scas
push
push
sahf
pop
pop
scas
fisub
add
xor
pusha
movs
jmp
or
xor
iret
adc
sub
dec
enter
lods
fdivr
popf
xor
(bad)
lahf
dec
mov
jbe
retf
dec
inc
aaa
and
(bad)
pop
test
fcomp
inc
pop
and
mov
loope
jg
ins
adc
shl
xchg
popa
mov
and
cdq
call
push
dec
mov
pop
rol
(bad)
pusha
call
rol
stos
cli
lods
(bad)
push
sub
mov
dec
imul
push
(bad)
outs
add
add
xor
cmps
in
ret
test
jne
mov
xchg
stc
ins
cmp
and
dec
push
mov
leave
sbb
add
mov
in
ins
loopne
leave
push
and
pop
xlat
cmps
call
shl
add
icebp
adc
sub
adc
js
push
out
sbb
inc
stos
(bad)
xor
push
scas
sub
stos
sbb
inc
stos
sub
mov
lea
mov
pop
add
sahf
stc
dec
sub
jl
idiv
iret
clc
ds
rol
stc
or
and
push
mov
jo
out
cmp
jns
shl
sbb
iret
xor
jne
cmps
and
lahf
imul
ret
jb
jno
mov
(bad)
push
call
std
fistp
pop
xor
xchg
adc
push
retf
add
sub
xchg
inc
mov
xchg
xchg
push
or
adc
sbb
ins
inc
mov
xlat
cli
test
dec
pop
jl
(bad)
push
mov
sbb
in
push
cmp
or
ins
mov
dec
gs
push
test
mov
fnstcw
in
(bad)
loope
mov
imul
xor
ins
in
ja
mov
xor
or
sbb
sub
mov
jmp
add
cmps
push
loope
xor
lgs
jmp
outs
xor
mov
sub
add
lods
mov
dec
push
sbb
pop
loopne
push
cmp
icebp
dec
pop
shl
hlt
xor
mov
dec
xor
mov
jo
adc
retf
scas
arpl
mov
mov
outs
out
popf
cld
ss
scas
or
shr
leave
gs
addr16
jns
xchg
sub
and
jmp
gs
add
retf
es
idiv
test
(bad)
clc
mov
into
mov
xchg
add
add
cmp
cmp
mov
mov
push
pop
add
mov
fidiv
daa
or
sar
pop
je
adc
out
stos
sub
jmp
(bad)
jnp
sbb
out
mov
daa
mov
mov
jp
leave
pop
jb
sar
xchg
dec
aam
xchg
lods
in
stos
pop
lods
in
mov
cmp
inc
cmps
ja
and
pop
adc
nop
dec
dec
clc
imul
and
test
or
push
cmp
clc
imul
pop
jb
(bad)
in
movs
ja
inc
jmp
add
pop
and
xor
stc
shr
and
sbb
fiadd
ret
xchg
iret
pop
mov
sbb
and
test
stc
shr
pop
mov
pop
pop
mov
out
xor
mov
leave
or
push
(bad)
xor
xchg
(bad)
out
lods
dec
leave
repz
iret
(bad)
(bad)
cmp
dec
out
adc
mov
dec
test
xchg
cmp
hlt
bound
sbb
stc
(bad)
int
push
test
mov
and
inc
add
cli
shl
dec
mov
adc
call
adc
mov
fisub
popa
test
leave
push
xor
bound
jnp
imul
test
push
mov
lea
cmp
adc
jo
adc
pop
test
je
cmp
push
aam
push
add
adc
lock
pop
mov
dec
mov
clc
gs
test
in
or
xchg
test
sbb
out
popa
pop
cmc
call
icebp
in
rcr
jge
mov
push
and
fimul
pusha
cld
xor
jmp
out
mov
rol
xor
jle
(bad)
outs
xchg
xor
(bad)
jnp
in
loopne
pop
fdiv
(bad)
(bad)
xlat
test
enter
int
and
sahf
clc
sbb
sub
and
(bad)
ss
xchg
ror
dec
ret
sbb
pop
sub
adc
nop
enter
lods
jae
mov
mov
push
fisub
and
pushf
inc
mov
mov
in
push
sbb
fbld
push
or
sub
add
fisubr
scas
xor
std
jae
inc
lahf
div
mov
out
cmp
fsubp
adc
cli
mov
daa
mov
mov
leave
or
pmaxsw
add
dec
fmul
stc
imul
sub
ror
push
mov
inc
sbb
mov
jno
push
fadd
in
pop
imul
ret
aas
push
neg
dec
cmp
sbb
push
xchg
push
xchg
push
and
test
adc
aas
loopne
lods
mov
add
scas
or
or
mov
xor
dec
jb
ss
(bad)
and
js
mov
jbe
inc
sub
mov
leave
dec
test
stc
mov
les
push
jne
mov
pop
sahf
mov
lea
mov
inc
shl
mov
push
scas
test
stc
mov
dec
dec
retf
xor
stos
fcmovbe
xor
or
sub
pop
pop
out
or
xchg
fldcw
cmp
test
data16
pop
out
jmp
arpl
jae
(bad)
fimul
mov
pushf
push
loope
sub
pop
jp
loop
sbb
dec
fucompp
cdq
push
stos
dec
call
pop
mov
add
pop
inc
inc
in
fldcw
mov
stc
repz
dec
push
push
dec
test
sub
dec
xchg
jnp
mov
aam
out
repz
ffreep
shl
lods
dec
adc
movd
push
cli
add
adc
jne
xlat
sbb
stos
pop
popf
repz
lahf
movs
sub
pop
and
sti
arpl
sub
jle
mov
sub
call
sti
xor
sub
mov
movs
mov
inc
pop
mov
pop
ins
xlat
xchg
xchg
mov
cld
daa
in
ss
sub
mov
je
cmp
xor
cmp
and
and
jmp
push
push
or
es
xor
push
psllq
jle
(bad)
shr
cli
pop
jge
and
xchg
mov
sahf
jae
aam
mov
xor
or
rcl
nop
out
outs
out
or
adc
fcmovb
in
mov
mov
push
jno
out
or
cmp
addr16
jae
jp
daa
push
in
cmp
and
xor
idiv
(bad)
mov
xor
mov
xor
ret
inc
icebp
pop
add
loopne
and
cmp
in
call
jns
xchg
jb
and
xchg
cmps
xchg
(bad)
fsub
ret
xor
ss
mov
push
mov
mov
hlt
mov
call
xor
cmp
push
mov
sbb
popf
pop
and
daa
xchg
jns
das
dec
and
int
dec
or
mov
push
test
push
jecxz
xor
arpl
lahf
lods
in
dec
(bad)
(bad)
cmc
movs
pop
jmp
scas
xor
jo
cmps
test
movs
mov
push
sbb
jge
ins
sub
fidiv
xor
cwde
xor
loop
or
call
sar
pop
vmwrite
ss
pop
dec
mov
pop
dec
pop
cmp
bndldx
adc
add
(bad)
imul
ja
adc
rcl
test
test
cmc
lahf
sbb
cs
in
(bad)
xor
and
shr
or
push
dec
add
inc
mov
xor
frstor
xchg
pop
mov
jmp
adc
mov
mov
jbe
faddp
and
sub
mov
xor
add
dec
imul
lea
leave
sbb
ins
mov
inc
jae
rol
or
into
dec
mov
cs
mov
or
cld
xor
bound
loopne
and
inc
lds
mov
sbb
and
out
add
je
push
inc
jl
push
pop
dec
jl
xor
enter
sub
rol
cld
pusha
ret
mov
adc
sbb
and
mov
push
add
retf
je
jmp
lea
jecxz
clc
call
sbb
xor
ins
mov
movs
push
and
aaa
int
mov
push
mov
mov
add
clc
lods
mov
and
adc
test
push
push
and
imul
inc
data16
repz
add
and
in
mov
call
ja
pop
push
ja
push
popa
cdq
xlat
dec
pop
jno
in
xchg
pop
pop
aam
js
cmp
jae
sbb
imul
cmp
push
stc
imul
xchg
lahf
xchg
adc
push
pop
push
sar
test
jge
mov
mov
daa
cld
or
movs
sbb
push
push
jmp
mov
sub
mov
mov
xor
fldenv
out
outs
mov
or
push
jbe
mov
sub
lods
das
rcl
cmc
or
or
xchg
pop
addr16
xlat
lods
(bad)
mov
pusha
cwde
jmp
ret
jmp
push
cmp
scas
jge
xchg
sub
mov
int
jl
jb
mov
adc
inc
pop
cs
pop
push
and
jp
pop
or
popf
cs
push
mov
rcl
or
lods
sbb
pop
dec
dec
add
mov
dec
jae
mov
std
dec
add
pop
fldenv
idiv
in
mov
into
lea
sub
xchg
mov
pusha
jo
dec
mov
adc
xor
into
repnz
mov
ds
mov
push
fs
or
sub
mov
std
sub
adc
gs
sub
shl
or
adc
std
mov
ror
jo
and
xchg
aam
inc
call
ds
fsubr
cmp
jmp
xor
cmp
fstp
add
cli
imul
dec
inc
fwait
mov
xchg
call
mov
cmp
sub
(bad)
jle
std
or
xchg
int
lods
and
push
mov
jle
mov
and
adc
cmp
jle
sub
push
loop
dec
out
add
stos
jmp
xchg
push
jae
in
ja
repnz
addr16
jns
cmp
leave
cmp
add
xchg
mov
icebp
mov
mov
retf
push
test
push
mov
jne
add
mov
push
inc
loopne
adc
sar
imul
xor
and
je
push
and
or
push
ja
sar
jg
sar
xor
adc
(bad)
or
pop
mov
mov
add
add
pop
mov
mov
adc
pusha
loop
fsqrt
loop
jge
fisttp
mov
jecxz
add
adc
das
popf
mov
adc
mov
jns
mov
aas
(bad)
and
sbb
mov
data16
hlt
mov
hlt
cmp
inc
sub
js
xchg
les
sahf
add
and
xchg
inc
dec
push
pusha
pop
dec
push
in
loopne
xchg
jo
bound
out
mov
es
mov
cmp
sbb
cmps
sbb
ss
mov
loop
dec
push
int
or
xor
test
push
jg
scas
mov
and
mov
cdq
dec
dec
inc
dec
dec
or
jecxz
adc
fcomp
mov
(bad)
hlt
sbb
push
stos
ret
mov
aam
jmp
mov
dec
dec
or
inc
mov
aad
std
sbb
mov
loopne
mov
shr
jmp
fisubr
dec
jns
push
jge
adc
jmp
sbb
dec
mov
cli
test
cwde
and
xor
push
in
aad
inc
ret
movs
dec
pop
mov
mov
mov
or
leave
ins
stc
sub
not
cmp
add
sbb
jle
jg
push
sub
bound
inc
(bad)
jb
rcr
cmp
in
and
cmp
cli
addr16
repz
jecxz
xor
imul
(bad)
fist
loopne
add
shl
dec
popa
or
add
dec
scas
sbb
push
ds
call
mov
push
mov
and
daa
xor
mov
and
mov
jmp
push
out
dec
dec
ds
mov
fstp
sahf
pop
adc
scas
jecxz
mov
sub
aad
test
mov
js
add
pop
xor
daa
aam
push
(bad)
aam
jbe
dec
loope
aaa
(bad)
fisub
enter
sub
test
inc
popf
enter
shr
les
fild
jg
sub
mov
xor
ret
out
call
dec
mov
jl
les
fdiv
ins
cwde
popa
in
xchg
mov
loop
sbb
clc
lods
cmps
(bad)
lahf
aas
push
enter
movs
dec
cs
push
xor
adc
scas
xor
adc
daa
lock
stos
inc
popa
stos
mov
out
push
scas
repz
or
pop
(bad)
hlt
mov
pop
jecxz
cld
push
mov
std
mov
jns
fbld
lea
sub
shr
mov
jbe
mov
jle
inc
test
cmp
inc
stos
test
push
nop
pop
ja
shl
arpl
cmps
ja
loopne
mov
pop
fdivrp
aas
mov
jns
jno
retf
cld
sbb
mov
adc
out
mov
xchg
fistp
adc
pop
or
daa
cdq
ror
adc
lock
and
test
xlat
xchg
or
push
jnp
js
movs
daa
setle
out
jg
xchg
xchg
push
push
xchg
sub
data16
xor
mov
cmps
jmp
xor
jmp
lods
mov
and
stos
mov
fnstenv
aas
test
ja
and
and
jo
mov
add
in
push
jb
repnz
and
vphaddbd
mov
push
sub
adc
mov
add
add
dec
sub
icebp
or
dec
test
cmps
ror
xor
fwait
jmp
push
or
sti
cmp
cdq
pop
xor
mov
aas
and
add
mov
aad
jg
lds
test
sub
mov
hlt
and
ja
repnz
jg
scas
(bad)
out
mov
in
mov
nop
cli
mov
adc
stos
jmp
xor
push
and
das
or
fist
sahf
xor
push
shr
mov
sbb
push
mov
int
xlat
pop
repz
xor
jae
dec
aam
cmp
iret
fistp
pop
mov
test
cwde
mov
adc
jge
xor
or
out
xor
pop
dec
xlat
cmp
xchg
push
sub
mov
outs
gs
aam
loope
pop
mov
js
pop
jae
outs
inc
out
(bad)
imul
dec
cmp
jb
faddp
loope
test
aas
push
add
adc
cmp
inc
daa
add
sahf
adc
movs
iret
pop
cmps
xchg
sub
mov
pop
out
cmp
test
and
in
popf
adc
adc
add
dec
or
jbe
bound
push
aam
ret
xchg
xor
sar
out
adc
int3
scas
pop
and
repz
lea
aad
cmp
pop
daa
cmp
xor
mov
adc
xlat
and
aas
inc
xchg
sbb
mov
(bad)
xor
jae
repnz
fild
dec
scas
pop
ds
push
stos
dec
jle
movs
stos
inc
cmps
mov
mov
sbb
cmp
pop
mov
in
cmp
or
cmp
xor
fisubr
add
mov
push
add
xchg
clc
out
pop
xchg
jb
(bad)
fcos
pop
push
add
jl
cli
dec
lods
int3
mov
out
or
bound
push
jge
jo
cmp
shr
lds
outs
dec
xor
mov
test
mov
lahf
fisub
cmp
test
adc
push
add
inc
hlt
dec
fld
push
add
aam
cli
outs
add
aam
clc
jmp
jo
sti
xchg
sub
sub
fmul
mov
add
test
das
fcmovb
cdq
push
or
fnsave
fdivr
hlt
mov
ret
pop
jle
and
(bad)
shr
stc
pop
mov
add
idiv
pushf
cmps
stos
add
call
add
mov
je
test
scas
cld
ret
sub
sbb
cmps
(bad)
cli
or
data16
popa
dec
sbb
imul
ds
xchg
pop
jne
fidiv
sbb
mov
enter
pop
pushf
pop
jno
cmp
sub
or
adc
cmp
xor
push
retf
ins
lods
call
setb
pop
jl
lea
or
and
cld
sbb
xchg
ror
into
mov
ins
stc
stos
push
cdq
sti
inc
or
xor
mov
jno
pop
mov
ins
addr16
clc
jmp
stos
addr16
mov
pop
fcom
pop
pop
ficom
out
das
and
test
add
adc
sub
(bad)
adc
sbb
sub
fiadd
jle
hlt
(bad)
loope
jne
jo
sar
push
test
(bad)
push
add
outs
in
test
push
stc
mov
mov
push
ins
scas
iret
in
arpl
aam
pusha
(bad)
push
leave
mov
rol
cs
jne
(bad)
(bad)
jmp
mov
fs
and
mov
pop
mov
mov
gs
dec
pop
inc
mov
pop
xlat
gs
fist
dec
jno
mov
inc
pop
cmp
jbe
push
addr16
mov
stos
inc
sahf
sub
mov
mov
movs
jmp
imul
mov
daa
mov
mov
ret
cli
cmc
addr16
stc
ja
ins
xor
mov
xchg
aas
push
pop
pop
adc
add
aam
or
pop
mov
xor
imul
ins
test
mov
std
or
push
das
stos
es
cli
push
lds
inc
mov
inc
adc
fcom
pusha
int3
out
sub
lods
idiv
leave
jmp
inc
adc
pop
mov
retf
imul
inc
jb
(bad)
nop
in
ss
inc
lea
popf
cmps
imul
outs
in
sub
push
jns
cli
ror
popa
cmp
iret
and
inc
and
dec
dec
push
sub
icebp
pop
mov
test
push
cs
cdq
outs
movs
cmp
shl
sbb
cld
add
sbb
lds
int
inc
mov
or
ss
xchg
push
cmp
inc
inc
mov
mov
shl
inc
ror
push
inc
in
pop
movs
repnz
mov
pushf
retf
pop
jne
mov
push
adc
adc
sti
aam
nop
and
push
test
dec
push
fs
movs
jecxz
sbb
pop
cli
inc
das
mov
mulps
shl
fnsave
sub
ss
stos
mov
sub
repz
stc
xchg
push
mov
lock
xlat
mov
push
sbb
dec
fnstenv
loop
lock
loop
pop
addr16
ss
cmp
adc
mov
dec
jb
sbb
test
mov
push
daa
jl
retf
push
call
add
jle
xchg
cdq
(bad)
fsub
and
mov
mov
lock
inc
retf
iret
(bad)
sbb
(bad)
mov
or
outs
(bad)
in
ret
inc
int
imul
cmps
xor
jmp
mov
mov
lds
cmp
icebp
mov
adc
xor
jecxz
pop
inc
push
jne
cli
xor
mov
out
jecxz
(bad)
jl
lock
leave
pop
or
int
cmp
sub
adc
data16
mov
push
adc
movs
mov
mov
cld
fild
call
or
cli
repz
xchg
xchg
xor
je
xchg
les
and
xor
xor
and
imul
js
xchg
jmp
retf
dec
adc
ret
add
dec
daa
(bad)
aam
enter
icebp
mov
adc
jns
fisubr
pop
push
aaa
mov
adc
icebp
xor
scas
mov
cmp
pop
mov
cmp
(bad)
mov
jnp
stc
cmp
xchg
inc
sub
mov
arpl
mov
mov
mov
pop
ins
jmp
jb
mov
fs
in
aas
jmp
lock
mov
aas
lock
xor
(bad)
adc
stos
bound
loope
xor
sar
and
xchg
lds
and
stos
and
int3
lock
iret
ja
mov
js
mov
mov
adc
sbb
test
lock
mov
jmp
xor
bound
sbb
add
xchg
lods
into
xchg
jle
inc
sub
clc
cmp
dec
add
sub
retf
les
jmp
lahf
or
ja
cmp
or
arpl
wrmsr
pminsw
aaa
cmp
dec
inc
or
(bad)
jb
push
pop
adc
mov
ds
adc
xor
daa
(bad)
aad
sbb
scas
lea
pop
arpl
or
and
jmp
adc
mov
fstp
or
scas
push
jecxz
mov
mov
push
popf
push
aam
call
add
cli
jne
mov
inc
push
xchg
fs
sub
das
push
(bad)
fild
mov
ins
cmp
mov
std
mov
xor
dec
sbb
scas
inc
lods
pop
bound
inc
jne
push
aas
jnp
icebp
jl
test
xor
inc
cmp
add
xchg
neg
(bad)
sub
sub
stc
rcl
adc
mov
call
std
js
loope
jne
imul
jns
inc
adc
add
xlat
test
stos
stc
push
movs
outs
neg
in
out
cmp
xchg
inc
(bad)
push
pop
lods
retf
xchg
aaa
mov
add
add
mov
retf
call
aaa
mov
rcl
call
jbe
ror
mov
inc
popa
stos
gs
retf
popf
loope
addr16
inc
test
movs
pop
cmps
add
test
bsr
cdq
test
pushf
and
stos
jnp
sbb
sub
repnz
xor
rcr
adc
adc
or
pop
and
iret
inc
or
mov
push
xchg
inc
out
jl
stos
inc
mul
std
pop
cmc
sub
mov
gs
movs
mov
inc
js
and
cmp
stc
dec
xchg
mov
push
into
fst
jl
in
add
dec
or
dec
sahf
jbe
call
lds
in
int3
stc
cmp
jno
sub
enter
stc
out
adc
retf
push
das
in
lods
outs
sar
psrlw
mov
add
and
icebp
cli
data16
inc
mov
or
imul
pop
xor
int3
(bad)
jnp
push
jg
sub
or
dec
inc
das
push
loop
dec
cmp
fiadd
into
push
sub
daa
test
xchg
or
xchg
ds
xchg
jb
cmp
add
mov
jae
mov
stc
jbe
mov
inc
xor
mov
cs
push
js
xlat
in
or
inc
xor
mov
into
mov
out
inc
lods
mov
jmp
inc
dec
pop
dec
lock
push
inc
fdivr
dec
add
out
leave
or
xchg
leave
xor
adc
and
cs
mov
pop
nop
add
addr16
mov
imul
sar
stos
jnp
push
and
xor
clc
push
movs
mov
and
jnp
inc
shl
or
jecxz
add
pop
sub
mov
sbb
cmp
jb
xor
inc
xor
clc
leave
inc
enter
or
cmp
dec
and
mov
inc
inc
and
jno
add
cwde
or
push
mov
aas
cdq
jno
inc
adc
xchg
add
out
mov
fdivr
ds
outs
pop
loope
cwde
scas
popa
push
addr16
dec
into
pusha
dec
clc
dec
push
fcmovu
ins
push
sub
out
loopne
dec
mov
xor
nop
sub
cmp
jns
pop
ja
enter
out
add
jmp
add
ror
pop
push
cld
out
lock
cmp
mov
frstor
shl
mov
jge
xchg
mov
mov
sub
test
push
stc
add
shr
jnp
cmp
(bad)
call
pop
mov
add
jl
popa
pop
pop
js
mov
leave
push
lock
adc
js
xlat
cmovne
loopne
sbb
lods
loop
inc
xchg
bound
inc
out
scas
scas
enter
xchg
enterw
in
mov
fimul
dec
xor
push
in
inc
dec
add
adc
or
rcl
jbe
mov
addr16
repnz
mov
xor
xchg
inc
jle
popf
dec
dec
push
lea
push
xor
fs
js
mov
sbb
bound
xor
jnp
mov
push
jb
inc
jge
inc
jl
or
push
sbb
push
xor
jne
add
or
add
pop
pop
jle
inc
adc
dec
fidiv
xor
ffreep
test
leave
inc
shl
stc
scas
xchg
popw
xchg
aas
outs
add
jge
bound
mov
mov
sbb
ss
je
movs
mov
pop
mov
loope
mov
cmp
push
out
stos
daa
loopne
adc
idiv
ret
xchg
sub
jmp
ins
mov
popa
or
pop
(bad)
and
jmp
pop
pop
out
add
sub
xchg
pop
bound
call
or
ss
and
jge
cli
int3
leave
cmc
stc
std
and
cmps
dec
ror
or
xor
lea
mov
out
loopne
fs
and
dec
inc
sbb
pop
out
dec
fs
inc
je
sub
pusha
cmps
inc
jbe
in
jbe
imul
xor
repnz
lock
inc
scas
adc
and
mov
jne
mov
adc
mov
inc
xor
cmp
test
push
pop
push
stos
fdiv
push
mov
mov
fsubr
test
mov
cs
xchg
jb
jge
leave
ficomp
out
or
mov
lds
jmp
das
mov
fwait
retf
push
movzx
cmp
or
and
fnstenv
movs
ss
fs
mov
call
mov
pop
addr16
pop
mov
pop
aas
loope
test
pop
inc
mov
sub
cdq
jne
jns
cmps
call
int3
mov
cwde
add
or
(bad)
(bad)
das
or
mov
out
mov
mov
sub
push
addr16
popw
cmps
or
dec
push
mov
push
xor
fldcw
(bad)
pop
test
es
inc
daa
add
inc
and
or
inc
inc
adc
test
add
dec
(bad)
mov
addr16
dec
sub
push
mov
mov
sar
in
test
mov
cmp
outs
add
jp
ds
dec
icebp
std
sahf
jl
jecxz
push
(bad)
jno
dec
inc
std
adc
scas
cmps
mov
adc
loope
adc
fwait
xchg
cwde
gs
xchg
(bad)
clc
push
fdivr
cmps
inc
cmp
pop
push
xor
sbb
out
ret
or
(bad)
xchg
jmp
nop
ins
mov
jae
sub
sbb
shl
outs
imul
pop
xchg
xlat
stc
add
cmp
sub
arpl
loop
mov
inc
lods
pop
mov
jmp
fs
jle
call
data16
inc
stc
fstp
adc
jo
test
xor
xor
jecxz
aas
xchg
add
arpl
pop
aas
lods
mov
xchg
(bad)
retf
shr
pop
lds
stos
inc
popa
sbb
mov
retf
inc
aaa
adc
adc
pop
test
out
adc
pop
dec
and
xor
xchg
inc
sbb
gs
inc
mov
out
mov
add
xor
and
mov
mov
repnz
clc
pop
in
inc
push
out
pop
loope
imul
xchg
xchg
clc
je
rcr
cmps
mov
in
mov
lock
inc
inc
test
in
adc
hlt
sbb
in
sub
xor
and
cmp
fs
xor
lahf
inc
mov
out
popf
jmp
and
sbb
cmc
jle
retf
rcl
and
and
push
test
sbb
lds
aam
pop
mov
lods
sbb
arpl
push
push
aaa
call
xlat
cmp
mov
icebp
(bad)
cdq
push
pop
adc
mov
mov
dec
clc
data16
es
inc
pop
pop
sbb
stos
call
retf
dec
lahf
sub
pop
popf
xor
out
retf
div
cmp
lods
fadd
cmp
ret
les
(bad)
push
addr16
stos
mov
aam
loopne
test
and
js
out
scas
push
shr
cmp
sbb
cmc
mov
(bad)
adc
push
mov
dec
cs
outs
mov
jmp
imul
call
and
jo
mov
xor
xchg
mov
pop
(bad)
outs
in
or
leave
dec
pop
pop
(bad)
jg
mov
dec
mov
gs
arpl
inc
sub
dec
xlat
test
xchg
lea
lds
pop
xlat
mov
xor
inc
stos
or
dec
in
push
push
mul
ins
mov
sub
(bad)
sub
retf
sub
push
js
mov
mov
rcr
cmp
mov
jg
mov
and
in
retf
rcl
mov
in
or
jmp
addr16
test
fcom
js
int3
inc
jbe
neg
in
sbb
cmp
movs
les
mov
test
test
ficomp
adc
gs
gs
inc
(bad)
pop
dec
cmc
iret
jo
sar
popa
pop
add
jge
imul
sbb
test
and
cmp
mov
ins
cld
push
jecxz
scas
cmc
cmp
pusha
in
cmps
mov
shr
fld
shr
dec
push
stc
xor
mov
adc
out
xchg
inc
xchg
stos
lea
dec
rol
mov
in
dec
xor
lods
jmp
aas
leave
inc
pop
xor
cmps
cmp
pcmpeqb
cdq
xor
adc
popf
add
scas
push
gs
fisttp
mov
fld
outs
cmp
sbb
fisubr
aas
cld
scas
test
ret
stc
add
pop
out
movs
adc
jnp
dec
jne
pop
inc
fmul
je
clc
mov
sbb
repz
jmp
xchg
hlt
and
mov
je
nop
bound
sub
and
popf
push
arpl
aam
fnstcw
das
mov
mov
lea
stos
push
sub
movs
rep
push
into
jmp
js
pop
scas
dec
jnp
dec
inc
bound
js
push
mov
bound
sub
jns
cld
das
jo
pop
dec
xor
mov
je
push
cmps
push
dec
mov
imul
(bad)
and
push
cmps
fincstp
or
popa
mov
cmp
mov
scas
xor
and
sub
clc
sar
jo
repz
je
(bad)
adc
inc
jmp
mov
mov
cmp
push
les
dec
and
adc
imul
adc
push
sub
or
push
sub
push
ss
movs
jle
ins
inc
and
add
sub
mov
dec
sub
adc
mov
xor
retf
add
std
ds
clc
push
cmp
xchg
scas
mov
and
int
mov
ret
loope
push
mov
mov
or
fs
stos
mul
push
cmp
fs
fs
enter
in
scas
outs
sub
push
cmp
pushf
pop
mov
xchg
mov
clc
mov
mov
jmp
mov
stc
jle
fs
or
pop
push
fwait
mov
push
(bad)
xchg
jg
cmp
retf
sbb
lock
test
outs
xchg
fstp
jge
movs
rcr
xor
shl
jg
jmp
jbe
pusha
icebp
jno
pop
ins
pop
ds
or
inc
push
cmp
dec
add
sub
and
ret
xor
mov
nop
stos
push
clc
sbb
push
bound
repnz
cdq
fs
push
shl
lods
rcr
jnp
or
addr16
addr16
sbb
sbb
push
push
addr16
stos
fs
push
ss
loopne
xor
inc
shl
out
jnp
jle
daa
jmp
leave
pop
jbe
and
and
or
call
out
push
(bad)
mov
and
or
nop
pop
add
and
adc
mov
sbb
mov
ds
addr16
add
push
mov
out
pop
or
add
push
(bad)
in
push
cmp
lods
inc
inc
ret
push
loop
sbb
and
adc
test
call
push
push
jg
sbb
outs
pop
dec
aam
push
dec
dec
adc
mov
mov
(bad)
xchg
test
dec
fild
js
outs
xchg
add
fimul
and
mov
in
mov
test
sbb
out
sbb
and
mov
xor
xor
mov
mov
add
adc
add
dec
dec
pop
pushf
ss
xchg
sahf
push
mov
push
ss
or
xchg
push
sbb
cdq
pop
or
loop
fdiv
inc
(bad)
push
mov
ret
jg
sub
aam
jmp
jp
mov
pop
inc
xchg
xchg
adc
pop
xchg
sub
xchg
mov
in
dec
xor
ss
cmc
inc
adc
in
push
sub
stos
jne
idiv
sti
cmp
dec
cli
mov
retf
jge
fstp
jp
mov
in
daa
in
test
iret
push
je
sbb
push
in
dec
inc
popf
test
popf
adc
cmc
jb
push
sbb
and
cmp
jns
cmp
push
jae
cmp
out
sbb
(bad)
sub
jo
jno
or
mov
adc
cmp
xchg
loope
(bad)
repz
outs
cmps
mov
aam
outs
push
and
cmp
dec
mov
aam
cld
xchg
lahf
add
movs
(bad)
cmp
sbb
loop
xchg
bound
dec
fisttp
push
push
cmp
js
dec
aaa
shl
je
mov
ret
out
cmp
bound
clc
inc
mov
xor
xlat
hlt
addr16
rcr
gs
imul
aaa
fiadd
mov
fwait
and
push
mov
fist
and
in
pop
scas
retf
nop
lahf
cmc
add
retf
push
pop
mov
jno
ja
scas
or
cmp
popa
jle
mul
mul
sub
dec
call
idiv
lods
mov
pop
push
imul
aam
push
sub
xlat
push
push
mov
pop
dec
std
int
pop
add
out
adc
scas
data16
cli
mov
ret
lods
dec
jne
sub
(bad)
into
div
shl
xchg
loop
loope
dec
mov
dec
mov
in
jle
sbb
jmp
pop
fcmovu
cdq
xor
fcomip
sbb
hlt
inc
sbb
mov
pop
call
es
cmp
fcmovnu
sbb
(bad)
sahf
pop
or
fld
cmp
fucomi
imul
aam
iret
add
add
push
idiv
shl
add
test
nop
outs
mov
sub
and
jle
addr16
dec
xchg
pushf
push
push
ja
jae
xchg
mov
scas
out
sbb
jg
lock
movs
push
das
cmp
lods
sbb
cwde
xchg
ja
scas
push
mov
mov
cmps
test
xchg
xchg
cmp
sub
push
rcl
in
sbb
clc
pop
mov
cmps
in
loopne
je
jl
aas
(bad)
jbe
dec
cmp
xlat
mov
ja
mov
sub
inc
or
sub
mov
pop
jmp
xor
(bad)
push
cmp
pop
jne
add
cmp
nop
adc
jns
in
jmp
movs
jmp
mov
in
add
movs
mov
inc
inc
pusha
jmp
icebp
jmp
push
mov
xchg
ret
mov
es
cli
xchg
mov
lods
outs
jp
push
push
sbb
push
sbb
xor
cmp
dec
popa
add
add
mov
pop
xchg
fld
cmps
sbb
push
out
push
inc
ds
xor
inc
lds
fst
mov
mov
and
in
pop
xor
scas
shl
add
mov
mov
out
inc
int3
push
das
(bad)
(bad)
mov
aas
arpl
inc
ret
cmc
jmp
out
add
cld
cmp
cs
stos
addr16
or
idiv
jmp
shr
pop
mov
add
aas
sub
pop
std
xchg
enter
jno
fimul
aaa
sub
fistp
mov
rcl
rol
imul
jnp
and
jmp
inc
mov
or
jns
jmp
cmp
sub
and
fwait
mov
clc
lock
outs
aam
add
in
fnstsw
loope
arpl
inc
std
mov
bound
sub
xchg
jmp
dec
jg
mov
pop
je
ins
cdq
push
fbstp
add
cmp
sbb
mov
aad
test
fsub
fwait
sbb
mov
ins
mov
data16
lds
pop
push
add
cmp
out
xchg
and
(bad)
and
xchg
or
mov
pop
(bad)
cld
or
xor
dec
retf
xchg
jae
arpl
inc
mov
pop
cdq
outs
mov
out
dec
(bad)
leave
pop
push
mov
inc
enter
adc
icebp
call
adc
pop
cs
sbb
mov
push
jo
pop
mov
test
in
pop
mov
xor
jb
and
les
(bad)
daa
inc
xchg
push
dec
pop
adc
add
pop
adc
fwait
mov
out
aam
jo
pop
pop
test
std
sbb
jle
ins
fisubr
xor
int
sub
jno
test
lds
sub
sub
inc
lahf
adc
adc
sub
(bad)
jae
repz
ret
jmp
inc
jecxz
dec
mov
sub
push
xor
adc
js
loop
ja
(bad)
adc
sbb
lahf
cs
movs
popf
mov
mov
(bad)
fist
aam
push
sub
jge
ficomp
add
shr
jne
gs
shl
mov
xor
fadd
push
push
cmps
pop
sahf
rcr
inc
popf
cli
dec
(bad)
aad
push
cwde
sbb
dec
addr16
movs
aas
int3
mov
in
popf
sbb
or
sub
add
mov
pusha
sti
pop
aaa
inc
sbb
xchg
fcom
rol
out
xchg
jne
(bad)
xchg
(bad)
int
nop
push
pusha
mov
pushf
or
and
out
call
es
lock
or
out
pop
jae
int3
repz
repz
inc
or
inc
aad
stos
dec
cmps
pop
dec
add
jne
xlat
and
jne
ins
xor
push
sti
mov
xchg
mov
pop
mov
retf
fstp
lods
loop
inc
xchg
jle
rcr
add
or
dec
jge
sahf
ret
je
mov
jge
jns
(bad)
sti
mov
sti
imul
icebp
pop
movs
fadd
cs
jp
add
daa
cmp
sbb
sub
daa
clc
ins
jnp
daa
ror
shl
popa
frstor
movs
mov
cs
and
dec
mov
shl
push
xchg
dec
push
es
and
leave
jl
pop
jnp
cmp
stc
push
outs
mov
mov
mov
add
mov
jge
fbstp
adc
(bad)
sar
bound
pop
mov
fld
lock
xor
mov
sti
nop
add
les
pop
hlt
xor
repnz
cld
pushf
dec
jnp
out
stc
(bad)
xor
in
cli
mov
or
jmp
mov
les
jo
adc
xor
cwde
(bad)
bound
sub
mov
xor
cld
ret
inc
out
lods
sbb
sbb
pop
xchg
aas
sbb
inc
cmps
out
push
jp
cmp
arpl
ret
inc
es
mov
jmp
cmc
jae
not
ds
add
(bad)
loopne
repz
mov
fwait
sub
mov
pop
shl
sbb
lods
xor
imul
ds
or
aad
fcmovu
jns
adc
jno
inc
jb
pop
mov
into
inc
fidivr
add
sbb
cmp
ss
fs
inc
push
inc
add
inc
(bad)
pusha
push
rcl
repnz
cli
inc
inc
xchg
fidiv
sub
add
(bad)
sub
repz
sub
push
pop
jmp
ror
loopne
jp
mov
test
jae
jmp
mov
mov
pop
(bad)
clc
frstor
jmp
xchg
adc
imul
add
xor
clc
mov
pop
shr
test
lgs
mov
idiv
adc
xchg
fld
mov
push
sbb
(bad)
(bad)
lds
cmp
fld1
mov
adc
push
mov
fcmovb
dec
movs
bound
or
add
sbb
cmc
dec
popf
loope
nop
rcl
sub
or
fcom
push
fnstsw
mov
in
dec
pusha
lock
push
dec
data16
hlt
inc
dec
dec
(bad)
popa
gs
clc
(bad)
dec
stos
out
lea
push
mov
push
in
pop
mov
daa
out
lods
(bad)
xchg
jo
sub
js
pop
jp
aam
mov
push
xchg
aaa
call
jno
xor
cmps
mov
fistp
mov
push
fs
popf
inc
ret
clc
jne
sbb
ffree
ins
or
xchg
sbb
pop
push
dec
pusha
jmp
std
dec
or
and
xchg
in
rcr
and
inc
popf
data16
(bad)
bound
popa
bound
cmps
ss
push
dec
not
add
rcl
push
cli
aad
sbb
pop
pop
test
pop
jo
mov
repnz
(bad)
sbb
(bad)
mov
pop
test
aam
push
pop
loop
dec
xor
popf
push
sbb
fld
push
jge
push
xchg
ss
mov
add
lods
pop
push
pop
lahf
movs
pop
fcmovnbe
jae
jmp
sbb
jo
pop
addr16
jno
mov
push
je
mov
push
pop
lock
in
scas
stos
jne
jmp
cmp
outs
pop
(bad)
fsub
xor
push
jmp
pusha
stos
add
shl
es
out
xor
mov
mov
(bad)
out
stos
and
aad
pop
lds
popf
xor
jb
mov
test
mov
rcr
push
jg
popa
ins
pop
pop
enter
push
(bad)
ret
cmp
push
pop
aas
xchg
lods
and
mov
scas
push
pop
push
add
in
ds
sub
mov
dec
lahf
pop
inc
sbb
pop
or
mov
mov
dec
dec
mov
push
pop
rcl
ret
fisttp
jge
test
out
fs
(bad)
(bad)
cdq
leave
shr
dec
adc
xchg
xor
dec
xchg
cli
ficomp
inc
mov
fdiv
jmp
sti
mov
inc
aaa
cmp
pop
out
pop
xchg
push
mov
add
or
push
ficomp
leave
inc
xor
jns
cmp
gs
dec
mov
clc
xchg
mov
enter
call
fcom
mov
jae
je
pop
fmul
out
mov
retf
popf
push
dec
adc
jle
xor
clc
cmc
and
test
icebp
pop
jno
cmp
div
ss
pop
popa
addr16
shl
xchg
imul
sub
mov
mov
or
out
push
push
pop
adc
pop
dec
add
mov
xor
outs
popf
sub
fld
push
mov
(bad)
cli
mov
jmp
mov
cld
adc
aad
push
cmps
cmps
cmc
mov
clc
mov
inc
test
jmp
pop
aaa
imul
es
adc
sub
enter
dec
sub
xor
cli
cs
mov
push
add
in
(bad)
bound
sub
fimul
push
lahf
cmps
pop
stos
push
in
inc
mov
adc
ret
movs
pop
inc
rol
ins
ret
mov
add
sub
inc
cmp
les
cmps
fcomp
sar
pop
xor
pop
fdivr
jns
jl
jecxz
jne
mov
pop
loope
enter
xor
jg
data16
add
shl
mov
clc
jns
sbb
inc
ret
jg
ret
clc
retf
std
aam
imul
adc
jnp
scas
fistp
sbb
enter
dec
adc
dec
push
lods
mov
adc
dec
inc
add
xlat
sbb
push
ins
jle
dec
popf
call
mov
push
dec
jnp
cmc
icebp
outs
mov
outs
pop
(bad)
xchg
clc
sbb
push
mov
jp
retf
leave
or
out
test
rol
(bad)
call
cld
mov
sub
lods
dec
jmp
and
adc
push
ret
ds
dec
push
pop
ss
int3
out
cmp
(bad)
fidivr
jno
add
inc
out
xchg
pop
clc
not
dec
imul
mov
adc
das
pop
mov
inc
mov
adc
loop
sbb
cmps
dec
cdq
dec
jb
test
add
jmp
retf
jb
ss
xchg
jecxz
mov
sub
cld
sub
sbb
xor
jns
mov
pop
jp
push
movs
das
push
rcl
mov
call
mov
sbb
adc
xchg
sub
or
cmp
dec
ins
mov
mov
pop
mov
loop
mov
pop
sub
push
mov
mov
movs
mov
jo
out
xchg
das
mov
sbb
push
dec
sbb
push
cli
call
push
inc
fs
xor
iret
ret
sbb
inc
mov
scas
adc
popf
sub
(bad)
in
and
sbb
pop
add
scas
push
dec
mov
or
inc
in
fistp
daa
or
mov
leave
dec
cmp
dec
fadd
inc
ret
lock
mov
outs
sub
in
inc
(bad)
mov
gs
icebp
mov
push
cwde
mov
fwait
and
imul
ret
inc
test
pop
sub
popf
mov
xor
push
add
jmp
aam
pushf
push
xchg
push
cld
shr
leave
in
sbb
jbe
mov
mov
inc
ss
cdq
dec
adc
xor
daa
fadd
pop
es
leave
dec
(bad)
cld
and
cmp
sbb
lods
in
inc
call
cdq
inc
jae
sub
jno
lods
prefetch
push
mov
test
lea
lds
mov
mov
jns
ja
mov
enter
out
pop
jmp
mov
or
xor
sbb
in
pop
dec
fwait
xchg
xchg
push
sub
sub
dec
jbe
pop
stos
or
out
jmp
lea
shl
mov
push
or
sub
inc
call
cmp
xchg
arpl
jle
fnstsw
outs
fadd
mov
mov
loopne
addr16
mov
fistp
leave
pop
pop
es
xor
cs
mov
mov
loope
sbb
cmp
cs
loop
lds
fisub
pop
in
xor
scas
and
mov
push
jb
push
rol
lds
add
mov
popf
adc
shl
adc
mov
idiv
jge
pop
mov
mov
jl
push
push
repz
gs
imul
sbb
not
jp
imul
fcmovne
fs
lods
inc
sub
jo
pop
inc
jle
aas
icebp
inc
daa
mov
gs
push
push
scas
cli
in
push
mov
popf
stos
cdq
inc
pop
push
cs
stos
adc
push
adc
xor
js
jae
sahf
jne
(bad)
sbb
inc
jb
inc
pushf
lds
push
popf
lea
jae
or
ret
mov
and
jne
dec
or
jnp
ja
pop
push
pop
xor
or
pop
sub
(bad)
sahf
aaa
fs
sbb
neg
push
xor
icebp
(bad)
leave
pop
push
sahf
movs
pop
sbb
jmp
mov
jb
movs
mov
mov
dec
pop
mov
jge
push
and
cwde
jb
and
cld
outs
popf
mov
cmp
ds
inc
jl
add
sub
mov
ins
neg
or
data16
js
nop
jo
inc
clc
inc
jne
add
popa
(bad)
push
jle
nop
(bad)
cmp
loopne
dec
popa
ret
and
mov
shl
aad
mov
jl
mov
push
pushf
mul
xor
addr16
cmc
bound
retf
or
and
push
mov
jge
je
cmp
mov
jge
adc
xchg
add
call
mov
dec
fyl2xp1
inc
or
jmp
xchg
pop
outs
mov
inc
ja
jge
dec
outs
dec
fnstcw
mov
sbb
push
icebp
mov
jnp
bound
pop
sbb
les
pop
mov
adc
mov
cmp
mov
xor
ret
das
popf
stos
or
jnp
stos
jle
sbb
sub
into
mov
sbb
sar
xchg
call
mov
dec
and
mov
sbb
sbb
inc
lods
add
and
cmp
xchg
rcr
js
and
rol
clc
test
mov
mov
fcom
jo
je
(bad)
movs
pusha
cmps
xchg
dec
mov
pusha
data16
sub
xchg
aas
xchg
jge
mov
pop
adc
mov
popa
inc
lods
push
fldenv
pusha
in
into
jmp
adc
gs
retf
xor
jns
lds
retf
or
mov
cmp
dec
sahf
cmp
add
sub
mul
mov
cmp
sti
repnz
sbb
into
outs
scas
inc
fnstsw
idiv
sar
inc
jg
mov
aam
arpl
aad
pop
or
jae
xor
and
or
fidiv
movs
hlt
dec
jge
mov
imul
fadd
pop
fsubr
retf
mov
pop
mov
je
xor
mov
loop
sub
pop
sbb
mov
jnp
xor
das
cmc
push
pusha
loope
mov
cmp
and
jmp
in
sub
xor
(bad)
(bad)
test
popf
xchg
ror
inc
fxch
ja
jne
fsubr
xchg
cmps
push
jg
loopne
mov
xchg
stc
and
shl
mov
or
repz
data16
push
out
(bad)
xlat
out
jl
pop
push
dec
sar
fs
cmp
popf
test
movs
push
pop
push
ds
dec
cmp
in
xor
sahf
inc
fcom
inc
mov
loope
out
mov
mov
mov
mov
mov
ins
pushf
call
xchg
xchg
dec
or
fimul
sub
dec
jmp
inc
xchg
push
or
sahf
or
dec
es
add
and
cmp
aam
dec
jle
(bad)
adc
inc
adc
imul
jns
push
or
lds
das
dec
sti
sbb
fwait
loope
std
fadd
ja
cmp
dec
jnp
xchg
inc
pushf
jg
in
test
movs
ins
shr
aas
inc
iret
ins
rcr
dec
(bad)
inc
(bad)
mov
jecxz
inc
fsub
pop
test
pop
inc
popfw
mov
pop
or
jo
fst
(bad)
arpl
loopne
dec
fistp
out
push
(bad)
das
inc
shl
sbb
adc
adc
mov
hlt
ds
fcomi
dec
aad
(bad)
xor
ret
addr16
mov
js
mov
bound
dec
and
jmp
xor
xor
aad
inc
sbb
xor
aad
xchg
push
pop
or
xor
fs
es
jle
xor
cmps
pop
es
fs
pop
cmp
outs
pop
xchg
fisubr
mov
ins
mov
cmp
and
daa
addr16
mov
bound
and
mov
imul
sub
inc
add
ror
or
adc
(bad)
mov
jns
outs
sbb
xor
mov
pop
mov
and
aam
ds
mov
scas
mov
pop
jo
(bad)
pop
pop
loope
xor
das
pushf
pop
mov
out
pop
cmp
jl
sub
pop
loopne
imul
jnp
pop
shl
inc
push
adc
inc
mov
adc
inc
push
mov
mov
ret
aam
fdivr
sbb
daa
jns
push
add
and
pop
repz
or
mov
jae
push
imul
popa
in
ss
sbb
out
jmp
push
jmp
pop
dec
jne
jne
rcl
push
mov
mov
xor
cwde
sbb
sub
pop
bound
sbb
pop
jmp
bound
mov
dec
stc
mov
mov
xor
cmc
addr16
dec
pop
ins
xchg
xrelease
cmps
js
jg
mov
push
or
mov
repnz
int
cmp
pop
imul
pop
jp
push
test
xchg
inc
sbb
addr16
(bad)
adc
jmp
sub
push
push
sub
xchg
push
es
out
sub
daa
sub
xchg
sbb
sbb
adc
inc
lea
inc
sahf
jge
inc
pop
(bad)
std
leave
sub
icebp
mov
cmp
jle
pop
dec
push
push
cmp
adc
inc
dec
or
push
or
xor
arpl
sbb
pop
ss
mov
dec
pop
jmp
daa
aad
loop
int3
fdiv
cmp
sub
fnclex
add
outs
inc
mov
(bad)
jne
dec
fisub
call
xor
cmp
fwait
dec
retf
arpl
add
xchg
call
add
cwde
mov
dec
ins
ret
adc
push
xchg
pop
mov
sbb
xor
add
mov
and
dec
outs
ret
jno
cmp
jmp
outs
mov
or
(bad)
push
je
ss
jns
mov
movs
data16
jl
mov
sbb
ret
cmp
mov
arpl
lds
test
xchg
push
push
test
std
arpl
push
dec
pop
neg
push
pop
or
pop
movlps
add
and
outs
add
gs
add
fs
outs
jge
cmp
sub
jp
xor
and
loop
pusha
je
(bad)
pop
dec
xor
cmp
xchg
xor
(bad)
sbb
xor
xchg
sbb
call
(bad)
addr16
or
in
mov
enter
pop
cs
cmp
xchg
ret
rcl
aas
adc
xchg
mov
add
xchg
and
sub
inc
cmp
cmps
(bad)
mov
xchg
xor
js
add
push
xchg
pop
jge
mov
jb
dec
pop
xchg
adc
into
and
add
(bad)
xchg
and
clc
dec
cmp
push
push
push
fiadd
add
int
mov
les
sub
lods
arpl
inc
mov
daa
dec
(bad)
xchg
mov
(bad)
sti
pop
stc
jne
mov
ss
xchg
fcom
nop
mov
imul
mov
jecxz
mov
mov
mov
xor
add
outs
sbb
shr
jae
add
push
addr16
shl
cwde
mov
fucom
mov
ins
(bad)
pcmpeqd
and
in
mov
cli
cmp
push
cli
jae
sbb
inc
stc
dec
int3
inc
std
mov
mov
mov
movs
pop
sub
adc
leave
or
inc
popf
hlt
push
cmp
sbb
cmc
addr16
fisttp
pop
dec
mov
dec
scas
aam
scas
std
push
dec
scas
push
jge
or
push
adc
pop
cwde
stc
fcom
xor
fsubr
popa
lds
cmp
jns
pop
inc
mov
les
sbb
ja
aad
lock
(bad)
jecxz
cmp
pop
ret
inc
sub
cmp
push
xor
sub
addr16
cmp
jecxz
add
jno
movs
cmp
mov
neg
push
cmp
dec
sbb
pop
dec
sahf
cmps
inc
mov
mov
add
sbb
inc
push
adc
lods
out
ds
inc
fsubr
fwait
cmp
call
ret
(bad)
mov
jg
mov
mov
mov
mov
sub
fistp
inc
das
outs
into
pop
and
bound
inc
push
push
ins
dec
fnstenv
(bad)
push
popa
std
mov
add
mov
pop
mov
cmp
sbb
inc
cs
popa
push
sahf
jp
adc
inc
loopne
cs
sbb
mov
or
loope
push
xor
dec
shr
cli
push
dec
into
lds
fst
xor
mov
inc
test
push
xchg
retf
ret
lods
inc
movs
xor
(bad)
sub
cdq
loope
sbb
push
inc
xor
dec
out
jp
adc
shl
cli
sub
outs
sbb
xchg
leave
add
push
sub
fist
outs
mov
lods
sti
xlat
cmp
aaa
in
fnstenv
cmp
sub
(bad)
int3
leave
mov
jg
sti
mov
sub
push
xchg
dec
in
xchg
sbb
or
pop
jecxz
gs
es
nop
ds
(bad)
jns
clc
jns
mov
in
mov
dec
jne
movs
push
sahf
mov
jl
ins
mov
fadd
jnp
das
ds
fwait
mov
inc
popa
call
stos
mov
ss
inc
inc
fdivr
int3
and
out
mov
imul
add
jge
sbb
mov
daa
mov
mov
adc
xor
sub
sub
cld
mov
pop
daa
and
js
lahf
push
jno
xor
fistp
xor
in
movs
mov
mov
inc
outs
addr16
fsub
stos
int
sub
clc
sub
rol
imul
cmp
xor
cmps
std
mov
mov
and
jp
sub
in
push
pop
mov
(bad)
inc
and
sub
push
cs
pop
int
push
fisttp
in
dec
jb
push
and
xor
rol
call
cld
and
push
call
sub
rcr
sub
sahf
or
xor
test
imul
pop
mov
jecxz
cld
or
sub
jns
inc
(bad)
pop
aaa
cmps
mov
rol
ficomp
inc
mov
icebp
addr16
cmp
(bad)
(bad)
gs
lahf
loope
jmp
cmp
push
cmp
mov
push
xchg
or
icebp
loope
pop
xor
and
(bad)
icebp
inc
jle
hlt
push
test
mov
fldenv
popf
jmp
ret
aas
sahf
lea
mov
lock
xchg
push
(bad)
movs
fdivr
cmps
mov
enter
pop
inc
bound
dec
dec
mov
inc
jb
fcomp
inc
jo
fistp
nop
jnp
mov
or
pop
inc
pop
ins
mov
imul
jl
clc
sub
sub
fcmovnu
fmul
ret
into
fisub
sub
hlt
mov
pop
push
cdq
rcl
out
ss
dec
cmc
ficom
scas
pmaxsw
fstp
xor
arpl
or
test
xor
into
faddp
dec
dec
stc
add
sub
pop
neg
bound
xor
or
pop
mov
push
mov
ds
xchg
jmp
cld
icebp
push
lahf
adc
cmp
jle
movs
pop
cmp
cmps
data16
pop
js
or
outs
jle
cmps
add
push
pop
js
retf
mov
daa
cmp
add
mov
pop
mov
scas
jns
in
stos
xor
cmps
imul
cld
or
xor
pop
add
shl
gs
(bad)
cmp
popf
fcmovu
pop
jnp
test
sub
fs
fs
adc
push
sbb
lods
xor
neg
pusha
fwait
test
mov
pushf
(bad)
xchg
add
and
add
int3
clc
add
pop
jb
jnp
xor
xor
cli
aas
shr
push
pusha
jb
ja
cli
xor
loope
cmp
pop
stc
(bad)
sbb
sbb
rol
adc
cmp
pop
out
push
push
mov
fnstsw
daa
cmps
jmp
push
pop
xor
inc
cmp
inc
push
stos
pop
mov
dec
dec
(bad)
addr16
inc
jecxz
fsub
iret
data16
or
add
rcr
pop
and
mov
and
push
stc
pop
into
test
ins
jne
xchg
xor
cmp
fwait
push
test
cmp
inc
cmps
push
push
cwde
fnsave
ffree
jge
or
rcl
or
push
dec
cs
(bad)
cdq
shr
mov
sub
xchg
mov
mov
push
movs
or
lods
mov
cmp
cmp
dec
sbb
mov
adc
xor
or
jg
pop
pop
mov
cmc
add
retf
jne
std
sti
(bad)
sti
jmp
adc
je
xchg
mov
test
cs
fnstcw
xor
jno
jecxz
adc
out
lea
jmp
popa
(bad)
dec
aas
mov
mov
jmp
adc
mov
dec
in
int
call
xchg
mov
imul
dec
cmp
(bad)
(bad)
aad
fdivrp
data16
pop
mov
jp
inc
sbb
inc
in
es
outs
push
jne
test
jb
(bad)
pop
pop
mov
rcr
or
and
fiadd
pusha
(bad)
cli
addr16
sub
mov
cmp
inc
inc
in
sbb
data16
ins
sti
push
dec
rcl
xchg
dec
aaa
pop
or
add
cmp
push
mov
and
jge
inc
ret
dec
mov
pop
sub
xor
psrld
xchg
and
in
dec
cld
aad
lock
adc
mov
pop
test
mov
fldenv
pop
inc
mov
sub
cmp
cli
in
cmps
xchg
push
pop
adc
pop
xchg
fisub
inc
adc
dec
or
sti
gs
push
xchg
rcl
inc
stos
xor
dec
jno
sub
popa
(bad)
xor
xor
jb
jge
xchg
add
mov
xor
and
push
lock
(bad)
jne
leave
sbb
test
icebp
mov
fisub
dec
inc
leave
imul
mov
out
rcl
mov
mov
inc
sbb
aad
or
mov
fidiv
add
test
xor
adc
sub
scas
jns
sub
mov
mov
mov
pushf
hlt
mov
mov
addr16
dec
or
mov
adc
cmp
data16
(bad)
add
add
or
ds
mov
pop
and
dec
xchg
fnsave
mov
adc
out
pushf
fisttp
outs
xor
sbb
cmp
(bad)
adc
jle
sub
fistp
daa
or
aam
inc
out
mov
push
and
fninit
inc
xor
pop
stc
cmp
das
adc
sar
addr16
cmp
bound
or
je
inc
jno
test
push
cld
adc
test
mov
mov
ins
mov
test
test
pop
adc
mov
test
bound
pop
ins
push
dec
mov
pushw
lods
jmp
test
jae
loop
xor
aam
call
sub
stos
xor
push
les
push
cmp
pop
outs
cmps
jns
sub
inc
xor
ds
js
movs
xchg
into
mov
adc
and
pop
pop
jno
ins
jae
adc
push
test
inc
inc
js
mov
in
cmp
or
and
mov
ror
out
pushf
or
fcom
imul
and
and
repnz
xor
mov
movs
cmp
xor
mov
push
jp
(bad)
mov
xor
fldcw
mov
jmp
or
loop
imul
jae
dec
loopne
test
test
ins
dec
pushf
or
and
sahf
imul
enter
out
mov
jle
fs
push
pop
aaa
mov
jp
jb
repnz
das
mov
lods
dec
xchg
out
(bad)
into
cmp
and
mov
test
stos
xor
(bad)
jp
cmpxchg
adc
ficom
loopne
add
call
or
mov
and
pop
ja
in
retf
and
xchg
adc
stos
addr16
fadd
mov
sub
dec
test
stos
push
mov
(bad)
jle
xchg
adc
(bad)
stc
jnp
push
in
push
sahf
mov
jl
add
mov
in
retf
(bad)
jle
jecxz
fistp
and
(bad)
or
in
jg
dec
adc
cmp
add
into
add
pop
pop
mov
(bad)
in
fs
lods
dec
call
fisubr
and
in
hlt
in
mov
bound
bound
jge
jge
in
fs
(bad)
iret
xchg
popf
test
add
in
sbb
push
add
dec
iret
call
lahf
push
bound
dec
and
outs
xor
push
in
and
inc
ins
dec
bound
pop
test
leave
mov
pop
stos
test
out
xor
aas
aad
aaa
sar
mov
pop
pop
and
pop
ins
sub
add
scas
pusha
mov
mov
scas
retf
mov
inc
mov
mov
ins
fldcw
test
fmul
push
retf
mov
inc
xchg
mov
adc
xor
pop
leave
stos
loop
ds
in
sar
(bad)
frstor
fcomp
hlt
dec
push
cmps
call
push
jns
jle
daa
sahf
sar
out
and
jp
mov
popf
push
push
mov
inc
inc
dec
xchg
mov
cmp
mov
xchg
mov
mov
adc
stos
shr
sub
mov
cmp
xchg
dec
jle
rcr
dec
shl
daa
cwde
cmp
push
ds
aas
std
pop
sub
push
cmp
in
mov
dec
ja
adc
mov
(bad)
mov
mov
(bad)
iret
jg
inc
cli
(bad)
retf
or
pop
stos
dec
xchg
add
mov
cmp
and
sub
(bad)
cmp
mov
adc
sub
cmp
pop
ds
sub
inc
jge
mov
mov
call
fisubr
stos
sub
cmps
neg
mov
mov
vminsd
jbe
sbb
out
cwde
pop
cmp
dec
out
cmc
enter
jo
dec
pop
cmp
sbb
arpl
test
dec
adc
sub
mov
push
addr16
iret
mov
and
int
test
sub
sub
scas
popf
loopne
mov
mov
in
(bad)
test
ss
leave
inc
aad
mov
retf
pop
repnz
(bad)
jge
jo
shl
cmp
in
jo
fldz
movs
mul
imul
push
jbe
xor
xor
in
mov
mov
pop
int3
push
fnsave
nop
mov
cmp
loop
in
lds
add
adc
into
or
xchg
jecxz
jg
or
sbb
cmp
adc
sub
cmp
sub
lods
loop
iret
popa
mov
jnp
shl
fsubp
movs
popa
or
addr16
xor
jp
jge
adc
mov
movs
pop
scas
cmp
cmp
idiv
pop
adc
and
inc
mov
push
outs
call
je
mov
xchg
adc
dec
add
xchg
xor
jmp
cmp
xchg
sahf
scas
adc
xlat
arpl
mov
mov
dec
imul
jmp
daa
add
hlt
mov
push
cwde
dec
xchg
loopne
call
sbb
(bad)
xor
into
leave
cmp
or
and
test
dec
clc
mov
dec
jbe
std
and
or
sbb
add
pop
cmps
fild
inc
pushf
ss
stos
or
cmps
mov
addr16
jnp
int3
sbb
xchg
push
sub
fcmovnb
mov
fs
inc
sbb
sbb
xor
sub
jl
fbld
push
pop
dec
daa
adc
inc
das
movs
dec
sbb
es
sti
mov
add
xchg
sub
outs
in
rcr
cli
xor
pop
dec
xchg
and
dec
xchg
adc
or
mov
shl
in
xchg
addr16
jl
pop
fdivr
push
add
es
xlat
pop
cvtdq2ps
cmp
retf
ss
fucomip
dec
adc
mov
fldcw
and
(bad)
aam
xchg
fs
je
xchg
jge
scas
sbb
cmp
js
movs
imul
mov
pop
je
jg
jmp
mov
(bad)
stos
mov
fisub
scas
fadd
jb
icebp
lea
repz
rol
pop
mov
jle
clc
sti
xchg
stos
sub
dec
repnz
mov
adc
stc
or
or
(bad)
jns
test
or
mov
sbb
xor
or
mov
test
add
test
sbb
inc
xor
push
sub
and
xor
shr
and
xor
push
cmp
iret
inc
mov
and
test
addr16
out
cwde
rcl
mov
pop
inc
push
cmp
ins
cs
or
outs
rcl
shr
xchg
xchg
dec
aaa
pusha
jb
inc
mov
es
adc
es
inc
push
out
push
ret
addps
cmp
out
scas
out
dec
sub
jecxz
pop
xchg
es
jmp
xchg
(bad)
popf
xor
rcr
dec
sub
data16
jecxz
jp
stos
adc
mov
jne
jmp
dec
mov
mov
lahf
fbstp
retf
xchg
mov
sbb
popa
inc
test
ret
divps
push
(bad)
fldcw
sti
fcomi
mov
nop
arpl
ret
(bad)
aam
mov
ret
ins
div
sub
divps
xchg
mov
push
mov
cmp
out
or
repnz
dec
dec
cli
mov
sub
loopne
inc
lods
icebp
sbb
push
scas
(bad)
jp
add
sub
and
xchg
jno
inc
sti
mov
aas
cmp
out
dec
(bad)
inc
pop
adc
cmp
ins
repz
mov
ss
adc
adc
xor
mov
xlat
call
arpl
aaa
mov
fild
push
and
inc
or
dec
mov
imul
pop
fisub
ins
fnstsw
jp
in
mov
aad
push
pop
cmc
sbb
sar
jns
add
stos
mov
sbb
mov
ins
sahf
sub
mov
repnz
cmp
js
jbe
dec
fnstenv
pop
add
call
(bad)
xchg
xchg
adc
xchg
jns
add
sbb
push
mov
add
dec
nop
js
jge
jp
pop
mov
lea
xor
inc
push
sbb
inc
and
sub
mov
cmp
xchg
jne
push
xchg
cwde
(bad)
fist
loop
aaa
ret
xor
jp
test
push
and
pop
cmp
ins
data16
xor
and
and
rcr
sbb
and
dec
js
(bad)
data16
inc
adc
(bad)
dec
xchg
loope
iret
fild
std
enter
loop
retf
sbb
cmp
ret
dec
adc
adc
ins
popf
int3
and
xor
xchg
and
inc
sub
dec
adc
hlt
sti
jno
sti
and
or
sub
mov
in
loope
cli
aad
jecxz
fldln2
pop
dec
add
in
bound
xor
mov
mov
ds
fsubrp
mov
aaa
sub
mov
(bad)
push
lds
push
out
sub
mov
jge
sbb
call
pop
jns
sub
or
(bad)
scas
or
mov
js
jo
jb
out
ss
lea
lahf
cmc
out
test
jb
pusha
out
not
xlat
js
cli
xchg
fstp
sar
push
sar
lods
mov
leave
mov
(bad)
loope
cs
mov
mov
pop
inc
sub
fbld
and
stos
repz
sbb
cmp
or
xchg
mov
jg
push
aas
loopne
retf
sbb
test
imul
adc
sub
pusha
in
sbb
inc
movs
pusha
jae
xlat
dec
cmp
ins
xor
inc
adc
les
cmp
in
push
stos
sbb
adc
dec
inc
icebp
popf
fmul
in
inc
pop
in
or
ja
fiadd
mov
pop
jg
into
mov
into
pusha
dec
(bad)
shr
(bad)
jge
mov
push
test
fsub
dec
cs
cs
arpl
dec
fistp
aaa
add
xchg
aas
out
sbb
in
push
in
lods
stc
push
xor
dec
pop
cmp
sub
inc
add
push
ins
es
outs
ffreep
jne
movs
push
cmp
dec
sar
dec
movs
mov
push
mov
jmp
sub
addr16
jp
jbe
push
jmp
shr
imul
push
retf
hlt
ins
xor
or
cli
aad
lock
fs
in
xchg
call
out
shl
pusha
retf
xchg
fcomp
loop
std
jno
xlat
clc
pushf
jbe
cmps
mov
xchg
int
dec
mov
xor
das
xchg
and
ja
mov
sbb
pop
cmp
add
pop
jmp
inc
sbb
das
jbe
add
mov
or
sub
bound
xchg
jecxz
push
push
sahf
pop
cmps
push
xor
or
aaa
or
jae
mov
rcr
(bad)
fcomp
cmp
push
mov
(bad)
enter
fdivrp
push
jb
popf
mov
jl
lods
add
stc
gs
sahf
add
sbb
dec
pop
mov
mov
lahf
xchg
ss
jle
iret
cmp
(bad)
cmp
dec
mov
cmp
push
xor
mov
rcl
inc
jl
fadd
fwait
in
jb
daa
xchg
pop
jnp
mov
sbb
(bad)
in
push
cmp
dec
leave
add
test
jmp
lea
xor
nop
lods
ret
and
and
cli
or
fsub
or
fsubr
push
pop
div
shl
cmp
and
lods
lahf
loope
sbb
inc
pushf
jmp
rcr
jne
adc
jb
mov
cli
icebp
call
sahf
mov
ret
out
(bad)
and
jmp
ja
cli
jns
jmp
in
mov
imul
lods
das
neg
xor
es
rol
out
dec
mov
(bad)
sub
cmp
inc
xchg
jae
mov
scas
cdq
fs
dec
aas
sbb
xlat
or
addr16
inc
test
rcr
das
inc
cwde
jnp
clc
pop
xlat
out
ret
xor
cld
or
inc
sub
imul
mov
sbb
mov
push
(bad)
cs
mov
push
gs
cdq
jp
push
and
dec
aas
pop
jg
ror
imul
mov
enter
cmp
outs
js
es
clc
aaa
fidivr
mov
pop
test
movs
ss
add
mov
pop
call
mov
inc
pop
dec
dec
fstp
mov
and
in
repnz
fsubr
adc
mov
scas
dec
cmps
push
test
add
mov
sbb
clc
mul
sbb
addr16
adc
sub
(bad)
loop
inc
cmp
push
cmp
addr16
mov
lock
clc
mov
daa
mov
cmp
jle
push
js
cmp
aaa
lahf
xchg
das
jae
dec
idiv
mov
call
cmp
jecxz
pop
ja
jle
(bad)
in
cmp
sar
sbb
mov
xchg
std
cli
mov
out
scas
clc
mov
idiv
inc
leave
add
inc
sahf
aaa
dec
mov
cdq
cmps
call
add
clc
or
and
mov
(bad)
pop
icebp
and
jns
aad
pushf
int
push
jae
dec
jge
test
sbb
dec
cmp
inc
and
into
das
js
push
pushf
or
cmp
mov
imul
stc
pop
ja
mul
dec
push
cmovnp
call
outs
mov
in
or
pusha
lods
add
mov
and
js
mov
clc
jge
mov
mov
push
xor
jmp
adc
inc
adc
imul
loopne
mov
rol
scas
fdiv
and
lods
sahf
repz
mov
mov
mov
add
jl
mov
aad
pop
sub
xor
fs
sub
aaa
jbe
bound
or
das
outs
ins
and
popf
outs
mov
(bad)
in
jecxz
pop
icebp
loope
shl
and
clc
sbb
mov
mov
mov
adc
mul
loopne
imul
jns
int
sub
lock
fimul
pop
sub
adc
jmp
pop
pop
mov
cmp
dec
ror
movs
or
mov
(bad)
loop
out
cwde
cmp
push
cmps
or
jmp
call
repz
call
in
out
inc
addr16
call
push
adc
rcr
ret
jge
sbb
inc
or
ret
dec
lahf
ins
out
and
fnstsw
out
sar
shl
pop
sub
sar
mov
mov
cmp
add
es
cmp
in
jae
xchg
sub
cmps
mov
(bad)
mov
lahf
xchg
jg
cmp
add
mov
dec
and
pop
cmc
shl
inc
cld
test
(bad)
mov
xor
arpl
dec
add
test
out
sub
inc
cmp
cmpleps
xor
aam
bound
push
shl
jecxz
push
bound
xchg
shl
sub
inc
addr16
cli
into
sbb
add
pop
sub
repz
cmp
shr
idiv
jne
scas
sahf
mov
daa
bound
jecxz
cmp
sub
ss
push
retf
sub
sub
retf
(bad)
cmp
inc
test
jl
das
mov
jns
outs
scas
mov
dec
jle
adc
pop
sub
jp
dec
sub
jmp
push
jecxz
jge
sbb
pop
mov
jmp
inc
push
loop
sub
inc
shr
jbe
icebp
repnz
inc
sub
dec
jo
xor
mov
mov
arpl
lea
mov
neg
movs
push
inc
mov
shr
pusha
mov
js
loop
and
je
pop
inc
jns
add
out
fbld
shr
test
movs
jnp
lods
ret
repz
dec
mov
xchg
dec
out
push
pop
jge
loopne
fist
loopne
ret
fild
push
call
jmp
data16
inc
dec
push
test
stc
inc
shl
popf
mov
xchg
add
add
cmps
sub
mov
cmp
push
xchg
xchg
jmp
sub
clc
test
(bad)
mov
lahf
mov
test
call
ror
push
ss
ret
add
retf
pop
in
retf
cmc
pop
or
mov
test
out
inc
sub
jo
pop
mov
dec
mov
daa
inc
and
bound
and
cld
fisub
and
test
(bad)
pop
mov
sbb
pop
ds
cmp
sub
scas
xor
xor
and
cmc
stc
lods
and
add
lds
pop
retf
and
scas
push
std
pop
pop
sub
xchg
inc
or
jbe
and
scas
ret
sbb
call
xor
dec
mov
js
clc
jmpw
not
dec
push
aam
sub
mov
rol
mov
outs
push
add
or
nop
clc
adc
test
push
stos
or
icebp
faddp
xor
arpl
in
inc
sbb
stos
dec
jns
mov
dec
sub
pop
adc
mov
lods
mov
cs
mov
or
adc
(bad)
bound
mov
lods
and
pusha
mov
inc
fs
mov
outs
adc
stc
xor
xchg
es
enter
int3
dec
pop
sar
nop
sbb
mov
jge
sub
nop
fiadd
xor
sub
cmp
cmp
stc
add
jle
sbb
sbb
xchg
ss
sbb
call
push
pop
push
xchg
cmovne
ficom
mov
fisttp
clc
inc
fidivr
lahf
xor
imul
xor
sbb
inc
mov
cmp
movs
scas
neg
inc
sti
stc
or
mov
bound
xor
push
push
sub
xlat
xchg
dec
into
test
add
inc
scas
cli
pop
cmps
jmp
loope
test
out
ins
cmc
xor
pop
inc
inc
push
not
jns
sti
in
fistp
adc
mov
popf
mov
sbb
mov
push
or
cmc
icebp
lahf
mov
fcomp
aas
stc
es
xchg
test
and
inc
adc
pop
add
int3
lods
hlt
nop
arpl
and
ins
ret
push
das
mov
fcomp
stc
xor
mov
mov
push
test
out
adc
xchg
push
mov
push
shl
bound
pop
cmc
add
mov
pop
in
adc
in
aas
dec
inc
and
adc
push
aam
xchg
stc
sbb
sub
adc
out
cmps
(bad)
stos
xor
call
loope
jbe
scas
repnz
aaa
out
cdq
ret
sar
inc
test
ficomp
repz
push
mov
fisub
dec
mov
shl
pop
sub
popf
pushf
cmp
mov
or
mov
sbb
shl
cmp
(bad)
aad
jmp
ins
lods
ss
addr16
push
in
xchg
scas
sbb
mov
jmp
push
sub
and
dec
inc
jecxz
push
jne
fst
cmc
or
cli
clc
or
xchg
add
test
daa
push
add
dec
or
shr
pop
sub
xchg
inc
xchg
mov
out
add
jns
xchg
out
stc
dec
mov
cmp
fsubr
hlt
stc
call
mov
mov
stos
mov
bound
movs
dec
jae
inc
pop
or
xor
inc
lods
scas
add
mov
cmp
ror
cmp
mov
aad
out
or
repnz
movs
(bad)
jne
fs
push
cmp
lods
push
jno
jne
popa
ret
out
bound
call
idiv
pop
ret
fs
imul
out
inc
mov
iret
std
data16
and
lahf
mov
stos
push
add
xor
data16
fiadd
ja
xchg
in
mov
push
sub
inc
(bad)
dec
mov
push
shl
jp
enter
mov
push
mov
push
sbb
mov
ins
xchg
(bad)
mov
jne
jbe
or
mov
int3
(bad)
scas
es
add
mov
adc
adc
je
add
scas
inc
test
pusha
fbstp
fstp
cwde
jle
aad
jmp
call
jl
inc
in
ins
dec
xlat
gs
imul
add
fiadd
or
add
mov
push
int
sbb
(bad)
xor
push
dec
fadd
dec
mov
sar
xchg
jo
xor
call
jbe
int
push
push
mov
jbe
fwait
lods
hlt
jmp
xor
push
data16
in
int
shl
test
jnp
add
adc
inc
xor
imul
push
jmp
shr
and
mov
arpl
aaa
test
(bad)
adc
mov
pop
cmp
and
test
xchg
mov
leave
push
ja
pop
pop
pop
push
dec
mov
jno
sub
lds
mov
cmp
cwde
sbb
jne
shl
xchg
jo
mov
add
cmp
push
bound
int3
pop
scas
pushf
ins
in
add
bound
push
pop
jle
sub
sar
ins
sbb
nop
adc
out
mov
and
bound
stos
mov
jl
cmp
push
fbstp
and
dec
imul
dec
fst
(bad)
push
cmp
(bad)
mov
movs
xor
mov
sub
and
rol
loope
gs
xor
outs
sub
cmp
ds
jns
sub
xor
sbb
push
adc
fld
pop
mov
cmp
mov
mov
cmp
pop
lods
pop
stos
pop
mov
daa
jb
test
cs
adc
mov
fs
ret
sbb
fs
je
ins
push
test
mov
mov
lock
aad
pop
jmp
lahf
or
sub
sbb
test
jmp
inc
div
test
mov
mov
inc
pusha
in
push
mov
xor
inc
mov
lea
sbb
loopne
jl
clc
js
mov
xor
inc
cmp
mov
div
stc
iret
stos
mov
push
inc
sbb
cmp
push
cwde
in
mov
aaa
idiv
pop
cmps
xor
es
mov
or
out
adc
mov
rcl
and
and
test
loope
or
jl
test
pop
dec
scas
and
popf
xchg
inc
in
dec
jge
lods
mov
ror
or
pop
xchg
movs
mov
dec
(bad)
cmp
jnp
jbe
push
out
clc
in
out
cs
test
sbb
in
cmp
dec
(bad)
push
and
daa
mov
and
mov
pop
test
ja
xor
push
sbb
ja
xchg
test
adc
addr16
push
or
out
dec
or
xchg
mov
repnz
sbb
or
aad
add
sub
cmp
xor
mov
retf
pop
loopne
and
ret
je
nop
xor
loopne
ficomp
jns
aam
push
cwde
out
inc
int
pop
neg
mov
lods
mov
(bad)
ror
xchg
(bad)
ficom
imul
hlt
push
xchg
push
push
xchg
shr
xchg
cld
pop
cmp
rol
pop
xchg
movs
sub
mov
and
mov
or
std
shl
(bad)
jp
dec
loop
inc
mov
inc
ins
push
lahf
outs
fbstp
fcmovu
imul
and
mov
data16
sub
mov
push
lea
ror
call
dec
lods
mov
and
cld
test
mov
xchg
sbb
pushf
es
mov
mov
add
pushf
es
mov
dec
mov
out
mov
cmp
dec
mov
xor
cmp
adc
aaa
(bad)
add
shl
cmp
push
or
imul
fsubr
out
xor
mov
(bad)
retf
in
push
leave
xor
ins
dec
sub
xor
(bad)
mov
inc
rol
xor
mov
retf
pop
cmp
cs
mov
mov
adc
dec
inc
mov
inc
jp
jp
pop
mov
inc
mov
cmp
fbld
mov
mov
dec
jp
pop
mov
add
add
ret
iret
dec
fst
and
or
jnp
ficomp
pusha
push
cld
je
out
mov
stc
ss
cmp
push
popf
(bad)
sbb
lods
fiadd
lods
cdq
fstp
mov
ud1
dec
dec
je
pushf
les
xchg
and
movs
test
and
pushf
mov
sub
stos
push
jbe
cmp
jae
sbb
mov
pop
(bad)
lock
add
mov
sbb
xor
jne
test
retf
pop
push
jp
jb
push
push
mov
cmc
scas
jle
jl
push
push
add
rcr
xchg
and
ja
and
mov
pop
mov
pusha
cdq
pop
jns
jecxz
scas
or
movs
xchg
js
jmp
outs
loop
stos
test
leave
adc
ret
sahf
push
es
push
adc
cmps
pop
in
ror
sub
loope
sub
std
stos
ret
retf
not
xchg
mov
mov
imul
mov
mov
sahf
cli
les
mov
adc
mov
dec
inc
dec
popa
or
sub
dec
jb
mov
or
lock
stos
or
mov
repz
out
mov
sbb
mov
(bad)
jmp
and
cmp
fidiv
mov
fnstsw
(bad)
shl
int
jmp
adc
sub
dec
ins
jns
das
iret
stos
mov
std
adc
inc
xchg
popa
and
sub
jmp
out
cmp
mov
xor
test
call
pop
jo
mov
call
imul
lods
cmps
pop
repnz
shl
pop
sub
lahf
ret
sub
lahf
cld
mov
test
sbb
out
cmp
dec
sbb
sbb
xchg
stc
inc
gs
jecxz
mov
jle
(bad)
mov
jb
mov
lock
mov
ja
add
jle
cmp
xchg
mov
hlt
test
mov
movs
lahf
push
inc
mov
(bad)
movs
popf
sbb
or
rcr
out
mov
das
cdq
mov
outs
(bad)
cmps
xor
fs
sub
and
inc
rcr
jl
and
dec
bsf
add
bound
stos
dec
push
(bad)
aaa
clc
lds
sbb
jmp
adc
into
(bad)
mov
out
call
and
dec
push
xor
retf
cwde
js
cmps
stos
push
out
imul
and
je
ficom
retf
loopne
push
and
ret
add
jmp
fwait
adc
and
dec
sar
xchg
add
out
frstor
fsub
ds
mov
mov
lahf
ret
push
adc
out
pop
ret
pop
stc
jmp
das
xlat
rol
je
popa
pop
mov
sahf
pop
js
fsub
aaa
fild
out
test
call
inc
(bad)
xchg
mov
clc
daa
pop
mov
retf
aas
fimul
sahf
or
push
pushf
add
sti
repz
sub
xchg
call
adc
aam
jmp
push
ss
popa
mov
sub
adc
mov
sbb
sub
ins
pop
push
inc
shl
inc
mov
push
sub
lock
movs
mov
imul
in
cmps
add
and
js
arpl
cmps
pop
in
jns
jl
dec
mov
ret
cld
sbb
cmp
add
add
cmp
push
sbb
push
mov
shr
adc
cmp
or
(bad)
and
sbb
add
shl
popf
cmps
scas
adc
retf
mov
pop
mov
add
push
add
pop
in
xlat
rcl
and
mov
cmps
mov
aas
(bad)
mov
ret
jmp
repz
xor
test
div
sub
mov
jmp
jmp
cmc
dec
rcl
popf
loopne
(bad)
outs
push
cmp
push
inc
mov
fstp
fidivr
push
nop
call
mov
dec
stos
cmp
xor
dec
movs
inc
scas
(bad)
fidivr
xor
jns
jne
aam
pop
jecxz
or
out
jg
clc
ror
adc
sub
shl
push
outs
sub
fs
xchg
jle
loopne
cmp
dec
inc
mov
pop
jg
mov
(bad)
pop
ins
push
loope
das
aaa
(bad)
aas
and
or
push
sub
adc
push
inc
lods
stc
or
and
cmp
mov
add
and
faddp
daa
and
pop
call
sbb
sub
popa
adc
sbb
adc
movs
shl
mov
rcl
or
loope
fiadd
les
cwde
sbb
adc
outs
and
test
cmp
push
cmp
aaa
mov
outs
mov
cmp
pop
add
mov
and
(bad)
push
xor
mov
mov
inc
mov
rcr
fcomp
mov
sti
xor
mov
popa
shr
push
call
lods
adc
outs
inc
xlat
enter
das
cs
sub
push
mov
stos
loope
jae
xchg
add
lods
lock
add
movs
add
enter
push
pmullw
or
mov
scas
in
xor
and
push
jne
sub
jecxz
iret
mov
jno
pushf
pop
cmp
sbb
aad
out
inc
sbb
pusha
aad
lods
int3
shr
cwde
push
jbe
fucomip
pop
dec
pop
stc
icebp
imul
cs
mov
dec
clc
mov
ss
(bad)
or
out
jg
sub
jae
stos
pop
mov
mov
adc
lods
in
cmp
pushf
adc
int
lods
add
inc
arpl
inc
pop
and
mov
pop
push
jno
add
xchg
mov
mov
push
ror
inc
fwait
sbb
pusha
jbe
xchg
fmulp
sub
lods
sbb
lods
(bad)
std
add
repnz
mov
sub
push
fisttp
call
pop
retf
fidivr
add
jo
clc
pop
cmp
in
shr
adc
lods
cmp
into
adc
push
cmp
in
push
pushf
cmp
sti
inc
mov
pop
pop
add
(bad)
dec
test
jg
pop
icebp
inc
sbb
shr
inc
repnz
sub
or
test
mov
pop
fcomp
test
mov
sbb
lods
mov
mov
xor
jge
push
inc
push
jmp
dec
jmp
add
dec
xlat
jns
and
in
jae
loop
mov
inc
and
xchg
inc
inc
push
add
xchg
mov
xchg
mov
push
fstp
and
pop
pop
jg
add
loop
add
xchg
or
and
mov
xor
ss
mov
jecxz
push
mov
div
ror
inc
sub
xor
cwde
push
pop
cmp
(bad)
cmp
mov
ss
aas
pushf
int3
push
jo
rcr
fs
out
hlt
xor
hlt
push
mov
cmp
cmps
jo
pop
int3
inc
push
data16
push
jb
gs
pop
sub
inc
mov
cdq
add
repnz
inc
inc
add
fistp
pop
aad
inc
push
inc
jnp
push
repnz
imul
cs
mul
adc
cld
cmp
es
dec
mov
movq
dec
sub
jmp
js
sbb
add
mov
imul
stos
sub
ficom
and
inc
es
scas
mul
dec
dec
mov
dec
mov
out
cmps
imul
mov
cmps
rol
dec
pop
xor
popa
jge
sbb
test
out
mov
retf
sbb
dec
call
mov
in
aaa
cmp
or
sti
sahf
xchg
pop
inc
xor
mov
and
ror
clc
cs
pop
aaa
in
sub
sbb
xchg
inc
fimul
and
push
cmps
inc
push
cwde
mov
or
mov
imul
mov
sahf
add
sbb
inc
loop
rol
dec
pop
shl
fucomi
dec
fwait
dec
aaa
shl
jp
inc
in
mov
in
aas
mov
sbb
sbb
jmp
pop
std
and
sahf
jnp
pop
jecxz
cmp
repz
enter
cmp
cmc
pop
fild
and
loope
xor
inc
rol
pop
cmp
jns
xchg
(bad)
mov
stc
loopne
sub
inc
sub
dec
add
mov
(bad)
jnp
and
inc
push
in
mov
cmp
ins
mov
or
jo
fsubrp
xabort
cwde
or
push
ror
push
push
cmc
push
jmp
in
fldenv
xchg
adc
popf
ss
dec
and
cli
(bad)
pop
adc
mov
xchg
add
mov
jmp
popf
cmp
jb
es
cmp
fcom
pop
adc
adc
std
cli
sub
(bad)
pushf
cmp
sbb
icebp
push
pop
ss
jmp
inc
clc
les
xchg
xor
sbb
out
inc
scas
cmps
xor
test
dec
ret
jbe
mov
mov
cmp
cli
mov
lods
sbb
push
stos
das
sar
test
imul
loop
mov
dec
gs
mov
addr16
rcr
mov
scas
push
stos
cmp
adc
mov
cmp
int3
call
push
push
mov
aad
jae
data16
addr16
jle
inc
dec
cmp
int
lahf
gs
(bad)
sub
dec
push
test
mov
std
cmp
jbe
fisubr
aad
cmp
xchg
imul
addr16
or
pusha
cmp
shr
adc
or
and
out
push
mov
into
sbb
or
or
and
enter
sub
cdq
test
jg
call
data16
jbe
cmp
xor
add
xchg
mov
lods
mov
bound
push
adc
add
jae
inc
ret
jne
cmps
imul
dec
xchg
sub
mov
repz
aas
js
push
lods
and
mov
or
add
shl
js
dec
xchg
jb
cwde
in
dec
adc
mov
push
mov
or
cmp
fsubr
(bad)
repz
sbb
jmp
add
mov
jle
xor
jnp
cmp
xchg
(bad)
and
mov
xor
cdq
jge
std
sbb
sti
js
ss
pop
push
push
movs
out
cmp
xor
loope
imul
(bad)
not
es
pop
sbb
push
xchg
pop
adc
push
add
mov
cmp
jne
int3
scas
dec
bound
loop
in
and
mov
cs
div
jl
call
jle
add
or
mov
and
xchg
popa
mov
stos
movs
or
push
mov
jns
adc
retf
cwde
shl
sbb
add
xchg
mov
(bad)
mov
aam
sahf
lods
gs
jl
add
gs
sbb
int3
and
and
(bad)
jle
push
mov
and
or
xor
or
jmp
lods
sahf
rol
or
scas
data16
outs
aad
push
add
out
jns
sub
push
stc
dec
xchg
mov
mov
fimul
movs
xor
jno
jbe
mov
mov
outs
ret
inc
out
gs
and
leave
pusha
jp
mov
pop
and
scas
lods
jbe
sar
lea
cdq
xchg
sbb
addr16
jg
cmp
inc
test
imul
mov
pusha
sub
jp
pop
es
xchg
in
xor
inc
inc
aam
push
push
clc
cmps
sub
dec
nop
pop
add
mov
test
(bad)
jge
pusha
leave
ja
xchg
cmps
sub
pop
cli
sub
fiadd
pushf
mov
js
out
sahf
xchg
es
mov
xchg
sbb
out
add
cld
lods
mov
xor
xor
scas
push
add
inc
add
mov
cmp
pusha
or
mov
xlat
pop
arpl
ins
dec
push
cmp
xor
pop
ret
retf
pop
mov
inc
mov
sub
mov
loope
sbb
or
push
xor
sar
and
pop
cmp
xchg
xchg
repnz
(bad)
cmp
and
add
jno
dec
test
sbb
push
xchg
(bad)
xchg
call
or
xchg
adc
(bad)
dec
out
sbb
sbb
rcr
sub
call
lea
ds
bnd
mov
dec
dec
xor
mov
dec
mov
fs
cld
pushf
dec
push
repnz
rcl
xor
pushf
int
sbb
mov
push
enter
push
jae
in
dec
push
and
inc
xor
mov
mov
mov
outs
shl
dec
push
neg
and
and
stos
call
test
bnd
pop
sub
dec
scas
inc
inc
loope
mov
(bad)
add
mov
ja
xchg
jmp
jg
push
jae
add
ror
jmp
push
push
and
mov
ret
ja
cmp
stos
enter
int
push
lock
mov
push
addr16
pop
mov
xor
pop
and
pusha
fwait
mov
jmp
cmp
sub
inc
scas
std
pop
cmp
test
and
dec
push
mov
cmps
popa
rcr
adc
fild
mov
cmc
je
add
dec
sahf
adc
sub
pop
jns
movs
data16
cmp
int3
cmp
xchg
outs
retf
mov
or
dec
outs
add
adc
xlat
cmp
ins
jg
push
movs
faddp
cmp
pop
adc
push
ret
and
outs
rcr
xor
rol
aad
sub
(bad)
ins
in
or
add
(bad)
cmp
mov
loop
out
add
popa
(bad)
addr16
shr
mov
out
push
dec
mov
cmps
mov
pushf
repnz
jp
and
popf
sub
sub
push
xor
xchg
push
mov
adc
mov
(bad)
repnz
adc
pop
(bad)
mov
sub
imul
int
cmc
pop
(bad)
xchg
add
and
xor
add
sub
gs
jecxz
or
mov
lea
mov
cmc
(bad)
addr16
arpl
inc
sub
inc
mov
add
dec
out
pusha
push
dec
jle
sar
call
daa
jns
cmc
stos
dec
ja
push
cmps
and
dec
mov
inc
add
or
or
ret
ret
jns
in
jg
sbb
or
inc
add
inc
gs
xor
or
jmp
jns
pop
push
pop
push
shl
ja
fisubr
repz
push
xor
sar
icebp
add
lds
outs
aaa
mov
call
cdq
jp
cmp
and
ror
lds
lods
mov
sbb
jl
leave
shr
inc
movs
in
mov
sub
fiadd
jnp
jp
imul
nop
xor
sti
pop
(bad)
stos
mov
cli
and
fnsave
push
test
dec
fbstp
or
popa
std
test
mov
pop
aad
lea
pop
add
mov
dec
mov
push
cmc
cld
sub
pop
retf
sub
test
aam
div
std
imul
inc
or
push
sub
mov
mov
(bad)
lods
loopne
cdq
cvttps2pi
mov
int3
sbb
mov
std
sahf
lods
add
jb
push
scas
mov
(bad)
cmp
mov
mov
cmp
pop
jne
imul
(bad)
xchg
pop
mov
sub
xchg
mov
les
fdiv
mov
repnz
pop
test
push
adc
iret
mov
call
xchg
pop
add
retf
(bad)
or
addr16
add
mov
xchg
mov
adc
inc
dec
jmp
stc
(bad)
cld
mov
ins
and
in
inc
sbb
inc
mov
bound
fcomp
sbb
sub
push
cmp
xchg
sar
cli
jo
sub
cmp
leave
fisubr
call
shl
ds
sbb
jge
adc
(bad)
fcom
jnp
ja
xor
push
scas
int3
pop
push
ret
sti
nop
xchg
cmp
ret
js
ret
and
ror
fnsetpm(287
mov
retf
das
loopne
ss
sub
clc
fldenv
call
cmp
mov
test
inc
pop
dec
push
mov
bound
repnz
sub
ja
sbb
adc
mov
in
call
dec
pop
add
mov
test
dec
inc
push
mov
xchg
pop
pop
(bad)
pop
out
lea
adc
push
mov
jno
call
mov
jg
and
dec
mov
inc
dec
out
mov
pop
xor
iret
jp
loop
push
mov
popa
xchg
or
cld
add
icebp
pop
cs
imul
sahf
int3
cs
lds
push
cld
push
pushf
inc
rol
inc
pop
fnsave
in
inc
dec
es
and
aam
idiv
pop
pop
cmp
pop
pop
aas
sbb
pop
jne
xor
dec
add
bound
shl
loopne
jo
bound
cmps
add
push
pop
out
outs
jbe
movs
popf
in
test
sbb
mov
mov
jp
mov
rcr
xchg
mov
mov
jp
stos
inc
jecxz
or
mov
jmp
lea
repz
ret
add
loope
loope
out
sbb
mov
rol
sub
add
int3
jns
xor
loopne
(bad)
lock
jle
js
jae
std
sbb
mov
jmp
(bad)
pop
inc
loope
sbb
mov
fimul
rcl
mov
mov
das
adc
pop
pushf
bound
pusha
or
out
test
cmp
test
out
and
sub
inc
sub
pop
and
jle
jge
stc
lods
push
and
lock
std
pop
push
xor
xchg
sbb
and
dec
mov
and
leave
jmp
add
or
out
mov
push
retf
dec
cmps
fistp
(bad)
clc
les
push
hlt
daa
movs
add
pusha
mov
mov
sub
xchg
or
cli
shr
arpl
or
shr
outs
es
mov
pop
sub
or
test
xchg
adc
push
or
adc
imul
int
popa
sub
into
test
sbb
(bad)
fs
pop
xchg
repnz
sti
or
inc
mov
xchg
dec
adc
sbb
mov
test
dec
and
sub
test
and
mov
xor
addr16
test
mov
xor
mov
lahf
cmp
gs
cmp
inc
dec
(bad)
fst
stc
xlat
add
in
loope
pushf
jbe
xor
je
fiadd
(bad)
icebp
xor
inc
sti
mov
push
and
xchg
les
(bad)
test
dec
push
in
pop
rcr
adc
aad
adc
idiv
xchg
cmc
rcr
jno
aaa
sbb
aam
cmp
mov
adc
mov
sti
shl
jae
dec
sub
(bad)
mov
(bad)
sub
mov
lock
xchg
aas
adc
xor
imul
jae
adc
les
and
mov
inc
xor
js
pop
addr16
dec
pop
clc
stc
jmp
cwde
in
or
aas
(bad)
push
and
fadd
push
int
sbb
adc
nop
imul
lods
add
scas
add
mov
inc
mov
mov
or
mov
ins
cmp
mov
xchg
pop
or
out
mov
test
mov
sti
push
mov
scas
dec
repnz
inc
call
cwde
imul
loopne
mov
in
dec
xchg
clc
ins
jecxz
mov
or
dec
mov
mov
mov
cmp
aam
push
sub
adc
in
in
mov
mov
push
add
dec
js
frstor
sub
loopne
jge
pop
cmp
push
mov
fmul
cmps
xchg
aam
mov
inc
dec
jmp
jge
call
mov
xchg
jp
sbb
push
cmps
das
cmps
dec
ja
pop
pop
fnstenv
push
xchg
jae
jmp
mov
xchg
shr
and
lds
pop
stos
cdq
xlat
push
jns
xor
mov
xchg
in
and
sub
jl
cmps
pop
inc
call
dec
push
sub
jo
enter
jbe
cmps
mov
outs
pop
scas
mov
lods
fs
sti
fwait
jmp
lds
mov
fdiv
sbb
sbb
mov
ficom
cmp
jmp
or
mov
push
xchg
mov
cmp
das
(bad)
xchg
push
jecxz
hlt
mov
cpuid
push
pop
jo
out
jae
push
jo
mov
sbb
aaa
dec
stos
cmps
lods
mov
xor
or
add
push
ins
les
add
inc
dec
nop
push
or
xlat
enter
xor
loop
sub
xor
mov
mov
jmp
clc
movs
daa
mov
rol
xor
pop
rol
mov
add
call
jns
in
pusha
jmp
cli
push
test
mov
sub
jge
stos
fs
xlat
rol
repz
mov
jbe
ss
rcr
jo
mov
jmp
bound
stos
sar
aas
pop
jp
icebp
mov
pop
inc
not
cmps
sbb
mov
out
sub
ins
cmps
jge
sahf
ins
dec
jge
sbb
jge
xchg
push
inc
xchg
rol
push
and
push
or
mov
rol
test
fnstenv
inc
mov
outs
jb
fisubr
cmp
js
iret
adc
imul
lock
mov
in
scas
push
sub
push
lock
sahf
sbb
test
pop
mov
rcl
jg
pcmpeqd
sar
out
xor
and
icebp
pop
xchg
lahf
cwde
pop
sbb
pop
adc
adc
outs
ror
ret
sti
jp
out
pop
xchg
cmp
or
jp
cld
std
mov
xchg
push
mov
es
add
adc
dec
pop
inc
fs
js
pop
mov
scas
mov
mov
pop
das
mov
push
sub
pop
ret
popf
dec
xchg
movs
cmps
sub
fsubr
ret
leave
(bad)
xchg
sbb
out
inc
pusha
sbb
xor
mov
js
pusha
sbb
sub
das
aaa
pop
xchg
and
test
call
adc
call
into
ret
jb
imul
mov
ins
add
lahf
and
in
(bad)
fs
shr
jbe
jbe
gs
stos
dec
cdq
sbb
pusha
aas
fucomip
repz
rcl
lds
jecxz
sbb
and
fsubr
pop
push
inc
cmp
xlat
pushf
cmps
dec
in
sub
in
pop
shl
jmp
inc
dec
mov
stos
ret
inc
xor
call
and
rcl
cmp
mov
sahf
jmp
and
sbb
push
inc
or
or
das
fcom
and
fdiv
mov
jnp
call
xchg
jns
dec
ret
test
jne
es
add
mov
or
sbb
or
sub
adc
cmp
cmp
outs
xchg
pop
sbb
daa
pop
xor
inc
add
dec
jge
fs
mov
in
jb
dec
and
addr16
sub
bndstx
je
add
in
pop
scas
hlt
pop
(bad)
sub
loop
or
and
jge
jg
xor
lock
push
xor
repnz
fwait
push
int
(bad)
lea
adc
dec
cmp
fdivr
sbb
gs
inc
mov
enter
pop
std
inc
fsubp
mov
inc
ret
inc
push
xlat
mov
cmp
jge
inc
jno
dec
sbb
ret
in
push
je
lock
jnp
lods
fcom
fist
das
and
pop
jnp
fldcw
inc
scas
int3
pop
add
mov
mov
push
or
shr
and
adc
daa
push
mov
mov
pop
push
(bad)
mov
shl
jnp
jbe
cmps
aaa
sbb
and
push
imul
rol
mov
jge
jnp
dec
loopne
add
(bad)
add
enter
nop
sub
and
cmp
cmps
and
jb
jmp
je
xchg
call
cmp
mov
mov
xchg
std
add
loopne
mov
and
pop
pushf
outs
pushf
push
inc
imul
dec
dec
push
sbb
ret
data16
add
ret
ins
xor
sub
and
shl
or
int
xchg
mov
popf
sub
or
aas
dec
mov
pop
sub
mov
mov
or
bound
int3
scas
pusha
clc
push
mov
xchg
stos
popf
mov
retf
lods
not
movs
jns
cmp
dec
sbb
outs
cmp
fisubr
mov
pop
and
push
rcr
ja
jbe
add
fs
jle
xor
inc
(bad)
mov
adc
int
enter
xor
inc
call
cmp
int
out
push
xor
mov
or
sub
les
or
retf
hlt
mov
adc
mov
inc
cmp
(bad)
jmp
cmp
mov
ret
stc
addr16
addr16
mov
lock
cmps
outs
jne
rol
test
aam
mov
mov
mov
aam
fnsave
mov
movs
sub
ins
cvtps2pd
pusha
loope
push
ja
push
adc
aas
mov
pop
add
inc
jmp
in
shr
xchg
movs
pop
xor
out
jns
cmp
sbb
hlt
jno
add
adc
jmp
data16
(bad)
icebp
sti
jecxz
test
or
add
shl
std
inc
std
mov
stc
(bad)
mov
into
push
mov
imul
add
xor
movs
xchg
(bad)
xor
dec
inc
push
in
jns
fadd
addr16
imul
jg
xor
xchg
sub
mov
mov
xor
nop
adc
test
outs
mov
dec
jnp
pop
add
movs
jp
fst
out
jae
clc
inc
jns
sub
sbb
xchg
mov
jb
pushf
or
std
add
cmp
mov
jno
not
iret
push
jne
mov
je
cmc
popf
pop
mov
push
lock
arpl
adc
pop
xchg
mov
jae
div
ins
arpl
clc
mov
mov
sub
mov
(bad)
jle
sbb
lea
lea
mov
call
rcl
xor
(bad)
pop
rcl
pop
pop
dec
jg
ret
out
scas
add
mov
pop
imul
cmp
push
(bad)
jg
lock
arpl
call
push
mov
pop
pop
inc
and
mov
mov
popa
dec
in
push
cmp
ret
jb
jle
sub
jl
mov
adc
dec
int
xchg
std
dec
ret
lds
mov
cmps
stos
sub
jl
xchg
cmp
xchg
movs
mov
pop
pop
cmc
call
scas
pop
xor
bound
retf
jnp
mov
cmp
and
add
dec
aad
mul
dec
fbstp
arpl
rol
xor
test
mov
mov
jns
cdq
mov
xlat
adc
ja
stos
xchg
mov
fadd
jo
and
add
call
cmp
lahf
add
es
inc
or
dec
dec
jp
cmps
and
mov
bound
movs
popa
arpl
pop
aam
dec
gs
popa
mov
popa
(bad)
lock
fnstenv
fnstsw
adc
les
adc
fwait
or
(bad)
and
les
mov
mov
lahf
pop
jmp
xchg
dec
(bad)
mov
aaa
mov
mov
lods
ds
xlat
xor
lods
xchg
inc
and
or
sbb
retf
or
sbb
stos
cwde
fild
cmp
mov
int3
pop
add
loope
rol
shr
add
das
adc
les
ficom
mov
not
push
jmp
enter
jne
jmp
push
hlt
stc
pop
lods
div
xchg
(bad)
out
cmp
mov
(bad)
xlat
xlat
mov
cmps
scas
cmps
sbb
push
push
cmp
mov
inc
pop
nop
xor
sub
leave
dec
pop
jmp
mov
inc
xor
fs
or
leave
sub
push
xchg
mov
nop
dec
sbb
sbb
xor
loop
jns
in
mov
call
imul
mov
and
push
mov
adc
cmp
in
adc
push
xor
stos
mov
pop
addr16
push
cmc
mov
ja
dec
xchg
xchg
jg
and
mov
xchg
mov
sbb
xor
jnp
gs
je
xchg
pop
pop
mov
mov
imul
popf
dec
push
and
mov
xchg
or
in
jecxz
add
jo
push
ja
inc
pop
inc
and
sbb
bound
lea
xor
mov
jle
mov
jbe
clc
dec
push
rcl
push
mov
(bad)
ficom
cmps
arpl
(bad)
jae
lds
and
cmp
cmp
dec
je
mov
mov
sahf
(bad)
icebp
dec
adc
cmps
arpl
dec
pop
cmp
push
adc
mov
dec
shl
cmps
shr
push
push
jbe
clc
add
inc
fcom
pop
sbb
outs
inc
mov
xor
cli
pop
mov
cli
jg
sub
add
push
or
pop
add
cmps
sub
xor
xor
or
sar
shl
(bad)
xor
jmp
or
inc
mov
mov
ret
add
push
xchg
jp
pop
cmc
mov
xlat
sbb
add
ja
push
xor
jae
stc
push
lods
fisttp
lds
add
mov
or
sbb
inc
es
or
adc
push
xor
imul
xor
mov
test
cmp
mov
outs
stc
push
mov
std
fnstsw
pop
dec
retf
arpl
enter
fcmovne
js
pop
push
xor
enter
mov
fwait
cmps
shr
in
lds
dec
add
es
push
in
jb
adc
ss
add
ins
cmp
enter
push
mov
aam
mov
xchg
mov
inc
je
dec
jl
pop
add
sub
mov
retf
inc
bound
cmp
and
cmp
enter
(bad)
loop
jnp
cmp
shl
pushf
mov
pop
repnz
mov
mov
sbb
jg
idiv
mov
in
sbb
or
xchg
loope
mov
call
mov
pop
aad
sub
jp
inc
dec
loopne
out
out
jg
arpl
inc
sub
rcl
dec
pop
nop
sub
pop
fild
rcl
jle
sbb
outs
pop
xor
call
mov
out
loopne
enter
cmp
hlt
nop
dec
mov
mov
push
dec
dec
pop
push
add
jo
inc
bound
pop
inc
mov
jmp
mov
mov
mov
push
js
cs
loop
xchg
sbb
(bad)
call
(bad)
dec
xor
int
mov
test
push
aad
dec
imul
push
popf
fs
ja
push
ins
iret
cs
sahf
es
jle
mov
dec
and
out
outs
dec
sar
rcr
cmp
mov
push
repnz
dec
movs
in
pop
push
cld
pop
jge
add
jns
je
and
fisttp
popf
retf
sti
or
mov
std
jmp
int3
aam
cmp
jle
and
arpl
(bad)
xchg
in
das
and
fwait
or
jp
add
ins
mov
push
adc
jmp
adc
imul
sub
into
jmp
lea
loop
fldenv
cmp
jne
shl
jle
(bad)
jno
fcmovne
sbb
xrelease
xchg
cmp
sub
ror
and
or
ins
bound
push
movs
jmp
fsubr
or
xlat
inc
cdq
sbb
mov
adc
lods
and
addr16
and
out
std
jmp
inc
jmp
add
inc
xchg
mov
sbb
pop
mov
stc
jno
mov
xchg
or
or
ss
icebp
imul
mov
imul
sub
out
mov
ins
inc
stc
mov
or
clc
sub
test
cmp
mov
lods
mov
mov
jle
and
rol
jmp
adc
icebp
inc
imul
push
and
add
sbb
jbe
mov
cli
mov
clc
sahf
push
and
xchg
loopne
add
inc
fidiv
cmc
jmp
add
dec
jb
pop
loopne
add
dec
push
cmpps
ret
dec
mov
push
out
imul
shl
mov
sar
test
mov
or
mov
neg
sub
dec
jmp
push
jo
adc
test
mov
popf
fs
mov
push
mov
dec
jle
inc
out
dec
xor
xchg
xor
cmps
(bad)
lds
xor
je
retf
loope
fsub
push
jnp
xor
mov
and
adc
jp
jle
adc
mov
lahf
mov
dec
or
dec
mov
pop
dec
mov
movs
hlt
pop
pop
je
dec
pop
movs
xor
jb
fs
xchg
xchg
leave
imul
leave
test
adc
adc
pop
dec
xrelease
aad
dec
mov
sbb
xchg
leave
sbb
xor
and
iret
mov
cmp
mov
iret
mov
add
icebp
cmp
jo
jbe
je
out
pusha
in
and
inc
mov
push
out
jl
push
pop
cli
adc
add
out
nop
mov
mov
(bad)
hlt
xor
jns
jg
aas
repz
xor
loope
add
gs
jecxz
jmp
or
jg
cmp
lods
lods
xor
loopne
pop
pop
jmp
pop
or
aas
cwde
jae
loopne
jo
dec
int3
jno
mov
or
imul
mov
xor
xor
push
mov
xor
js
mov
or
dec
(bad)
xor
push
jle
sub
imul
push
out
mov
stc
loope
mov
imul
mov
push
scas
stos
inc
add
dec
popa
or
jmp
data16
shl
mov
push
dec
inc
sub
jns
xchg
addr16
cmp
std
dec
loope
xor
int3
loop
gs
inc
inc
mov
xlat
sbb
icebp
lds
retf
jg
mov
(bad)
loope
push
adc
mov
in
scas
mov
sbb
inc
or
mov
inc
push
xor
into
cs
xchg
dec
sti
sbb
loope
loope
mov
rol
ja
mov
call
push
jmp
cmc
push
inc
dec
stos
ds
push
or
aam
jne
fst
inc
retf
out
dec
push
or
xor
dec
pushf
sub
ss
ins
mov
xchg
jbe
aaa
dec
stos
mov
pushf
nop
xor
ret
dec
jno
retf
ins
sub
jmp
push
mov
shl
in
push
pop
pusha
or
xor
imul
mov
push
dec
mov
daa
or
movs
mov
mov
cmps
(bad)
dec
jbe
dec
scas
sahf
aad
xchg
stc
stos
pop
scas
aas
pop
ret
leave
fisttp
or
ror
scas
pop
inc
pop
int
xchg
ret
fldln2
jns
stos
ficom
js
cmps
cmp
pop
sub
in
push
retf
rol
jmp
mov
dec
aas
repz
call
jmp
out
out
cmp
sbb
jns
imul
adc
pusha
xor
push
mov
mov
test
icebp
mov
jge
mov
xor
sar
daa
jge
jbe
dec
pop
mov
addr16
std
ja
sub
sub
cmp
imul
hlt
push
and
dec
nop
jecxz
adc
in
ins
inc
out
adc
inc
and
nop
stos
xchg
xchg
sahf
xor
fnstcw
jb
retf
pop
jb
cdq
sbb
mov
sub
aaa
in
mov
cwde
popa
fdiv
push
add
pushf
add
inc
cwde
sub
ss
cmp
cdq
(bad)
(bad)
in
jno
mov
in
mov
and
sub
adc
jmp
(bad)
out
test
mov
jmp
jecxz
jle
pop
jmp
and
stos
or
call
test
outs
and
mov
(bad)
repz
mov
xor
(bad)
fnstcw
dec
cmp
loopne
fidivr
adc
int
sub
cwde
pop
sahf
movs
shl
adc
sub
mov
addr16
sbb
pop
push
out
xor
or
xchg
cdq
cmps
sbb
jbe
push
dec
cmp
xor
mov
ror
and
and
dec
(bad)
sub
inc
cld
push
cdq
ja
pop
inc
jmp
aaa
mov
ret
mov
sub
pop
(bad)
jle
jb
(bad)
fisttp
sub
scas
mov
test
dec
mov
cmp
les
push
push
out
repnz
sbb
movs
ror
mov
call
pop
inc
addr16
jg
dec
inc
mov
jb
nop
icebp
addr16
es
daa
inc
jle
push
inc
mov
shufps
xchg
fsin
sub
push
adc
popf
or
ins
xchg
rol
stos
push
test
fadd
int
mov
xchg
xchg
inc
dec
mov
jmp
cli
sbb
in
pop
and
ret
or
and
dec
data16
push
inc
push
int
dec
and
aas
pop
inc
and
xor
jg
adc
xchg
ja
add
std
popf
sbb
lock
out
inc
gs
mov
out
jle
jg
jbe
pusha
into
sbb
inc
ds
jmp
mov
retf
ja
xchg
jb
xchg
data16
mov
mov
repnz
or
jmp
mov
push
ss
dec
pop
jmp
sbb
outs
pop
and
dec
mov
cmp
(bad)
xor
pop
(bad)
xor
cmp
mov
sub
retf
iret
retf
hlt
mov
adc
inc
out
add
rol
ficomp
shr
test
jne
shl
xor
bound
inc
pusha
pop
dec
je
jp
pushf
inc
punpckhdq
and
lds
lahf
popa
out
pop
xor
ds
shr
mov
int
stos
dec
dec
jne
inc
aam
loope
inc
mov
jmp
inc
push
test
gs
mov
push
call
sar
stc
ds
mov
xlat
shr
push
inc
(bad)
repnz
fldenv
fs
(bad)
mov
out
clc
ins
push
pusha
das
fistp
outs
addr16
jl
mov
in
pop
or
or
loope
xchg
dec
xchg
ret
ja
pop
pop
xor
sub
xor
inc
lds
adc
jmp
pop
xor
call
lock
hlt
pop
push
inc
add
inc
jecxz
or
(bad)
scas
int
xchg
outs
sub
push
in
lock
dec
inc
push
sbb
(bad)
jo
dec
push
pop
xchg
inc
and
sbb
push
mov
adc
sbb
sbb
fsub
(bad)
retf
imul
jge
fcomp
add
cmp
test
adc
test
mov
cs
sub
jmp
mov
data16
dec
sahf
push
aam
cli
jecxz
jp
je
sub
cli
fcom
loop
(bad)
jg
add
mov
adc
call
push
xor
js
aas
stc
mov
sub
jns
in
sub
adc
xchg
imul
out
inc
lods
shl
outs
and
jecxz
push
or
(bad)
pusha
adc
std
cmovp
inc
jns
sbb
mov
cmc
aaa
inc
add
lds
mov
adc
jno
ins
mov
mov
jns
dec
scas
cmp
mov
xor
dec
add
iret
ds
fisub
ins
outs
cdq
in
data16
pop
or
push
and
pop
out
(bad)
push
stos
adc
test
xchg
hlt
mov
aaa
sub
out
sub
or
xchg
stos
push
inc
dec
mov
push
mov
ins
sbb
rol
(bad)
mov
inc
out
adc
in
lock
mov
(bad)
jge
std
lds
xchg
repnz
popf
mov
pop
sbb
cmp
pop
mov
int
arpl
jb
and
ds
mov
ins
pop
in
inc
mov
popa
into
sbb
adc
mov
(bad)
sub
add
adc
mov
mov
out
xor
mov
adc
xlat
js
cmc
enter
inc
mov
push
mov
shl
addr16
stc
push
lahf
mov
std
inc
add
cmp
inc
sbb
sbb
fmul
sahf
and
cmp
popa
add
not
pop
inc
fwait
or
and
sbb
xchg
pop
push
push
xchg
call
pop
cli
mov
icebp
jns
cmp
sbb
add
mov
sbb
or
or
jns
in
push
push
shl
cwde
sub
mov
lea
test
pop
push
retf
mov
std
stc
or
jbe
push
cdq
int
mov
int
mov
xchg
push
sbb
in
push
pusha
dec
push
adc
faddp
xchg
cs
sti
test
jmp
rcr
aaa
pop
mov
(bad)
push
aaa
sbb
mov
fs
jo
sub
mov
movs
mov
popf
jmp
call
inc
retf
jo
cs
push
add
js
pop
add
sub
xchg
cmc
sub
dec
mov
and
sahf
pop
js
inc
jecxz
mov
or
cs
mov
cmp
mov
push
xchg
pop
sbb
mov
mov
pop
out
dec
push
mov
pop
stos
call
pop
out
addr16
stc
sbb
lea
jbe
mov
(bad)
and
(bad)
outs
mov
ret
push
dec
fisttp
(bad)
sbb
xchg
mov
mov
jnp
adc
pop
icebp
adc
xor
in
lods
mov
jo
mov
xchg
cmp
movs
test
dec
sub
test
pop
or
mov
enter
lods
sbb
(bad)
mov
imul
std
hlt
mov
lea
and
xor
or
sub
inc
mov
bound
push
in
adc
cmp
pop
addr16
mov
inc
xlat
and
cmc
movs
int
mov
shl
push
mov
add
(bad)
adc
mov
clc
xchg
imul
ret
pusha
cs
ds
cs
adc
mov
clc
xor
dec
jmp
pusha
jbe
fistp
out
cmp
bound
mov
daa
jmp
inc
or
pop
cmp
loop
fistp
inc
mov
jmp
into
test
mov
(bad)
(bad)
xor
(bad)
jmp
cs
(bad)
out
pop
jp
adc
mov
or
dec
dec
inc
clc
out
push
xor
(bad)
cmp
stc
inc
adc
and
or
popf
outs
das
ja
ja
jbe
stos
imul
(bad)
mov
clc
fwait
ss
loop
sbb
push
in
(bad)
jbe
jmp
test
add
test
sub
jle
xchg
cli
lahf
int3
push
ds
adc
ret
jmp
arpl
int
xchg
jbe
in
jbe
and
dec
ins
movs
push
pop
mov
xchg
pop
mov
arpl
jns
test
sub
std
xchg
push
mov
and
test
and
add
fsubr
popa
cmp
push
in
mov
fld
jmp
je
pop
xlat
xchg
push
ror
sub
and
aas
je
mov
sbb
jecxz
aad
ror
cmp
ja
dec
pop
call
fs
inc
jbe
data16
sub
rcr
cmp
out
(bad)
mov
outs
jg
lock
and
and
add
ret
jecxz
cmp
(bad)
jbe
pop
test
cld
and
mov
jl
cwde
loopne
sbb
push
pop
in
outs
push
cmp
clc
movs
dec
call
dec
mov
xor
rol
retf
cmps
pop
dec
stos
mov
push
mov
push
jns
sub
sbb
data16
xchg
mov
jne
xchg
mov
fbstp
fld
scas
sbb
and
daa
out
and
loope
jae
icebp
push
inc
add
mov
js
add
add
jbe
pop
mov
pop
sub
mov
aad
in
jge
or
mov
xchg
sbb
pop
rcr
mov
xlat
test
mov
push
sar
cmp
(bad)
jl
dec
fisttp
cmp
mov
lea
jl
stos
(bad)
sahf
cmp
push
jb
lea
gs
test
out
mov
mov
test
cmp
push
sbb
aam
add
fldl2e
xor
dec
add
inc
push
inc
pop
fdiv
in
mov
pop
movs
bnd
add
xchg
or
call
je
stos
mov
and
inc
adc
dec
lods
sbb
push
iret
fdiv
pop
sbb
sbb
mov
inc
test
(bad)
push
push
sub
imul
cmp
cmc
sahf
jnp
xor
pop
out
les
ds
cmp
ret
ds
inc
adc
xlat
(bad)
xor
pop
(bad)
push
push
(bad)
adc
fbstp
movs
cmp
ror
outs
mov
or
push
xchg
ficomp
stos
test
jb
fimul
xchg
or
(bad)
push
mov
xor
bound
mov
pushf
jb
mov
aas
out
and
(bad)
icebp
jge
inc
jle
mov
aas
xor
(bad)
rcl
jnp
movs
popf
push
jp
fcom
gs
ds
push
mov
pop
fsub
inc
mov
pop
jmp
pop
push
inc
pop
xchg
scas
push
inc
sti
jp
ds
push
push
(bad)
out
ins
mov
sti
cli
aas
jnp
(bad)
data16
adc
pop
cmp
pop
je
mov
test
dec
push
pop
addr16
jmp
pop
add
pushf
add
ja
or
pop
mov
pop
lods
js
les
jb
dec
outs
inc
cmc
fsub
stos
dec
jl
xchg
pop
jmp
pop
and
or
stc
lods
in
sub
push
fild
mov
pop
jbe
xor
jle
inc
xchg
icebp
push
repnz
push
jg
adc
mov
add
popf
(bad)
sti
push
and
pop
lods
push
outs
add
jecxz
fidivr
pop
out
and
outs
imul
xor
dec
fcmovnbe
and
in
cmp
xor
xor
test
enter
jl
pusha
hlt
mov
gs
push
jbe
xor
mov
stos
mov
(bad)
push
add
or
cli
mov
sti
add
rcl
jmp
jmp
dec
xchg
(bad)
mov
push
pushf
add
push
or
xchg
sub
xor
cmps
and
sbb
mov
jecxz
sub
in
inc
out
or
sbb
and
mov
xlat
pop
jmp
aaa
out
imul
jmp
fwait
cmp
and
lods
inc
sbb
stos
add
jnp
imul
and
pop
sti
mov
test
dec
bound
dec
push
addr16
mov
mov
cmp
cld
pop
jg
leave
sbb
cmp
xlat
(bad)
jl
adc
or
or
push
jo
outs
mov
addr16
jge
inc
(bad)
push
pushf
jb
into
fcom
repnz
inc
and
xlat
js
jecxz
call
popf
and
pop
ret
aad
je
das
mov
imul
not
cmps
gs
cs
sbb
dec
or
into
leave
push
inc
xor
and
cli
dec
cli
xor
enter
add
clc
push
sub
call
mov
loopne
jmp
test
(bad)
jp
dec
in
mov
sub
mov
aas
ss
(bad)
call
mov
cmp
dec
xchg
je
or
cmp
inc
and
mov
es
sub
outs
adc
sbb
mov
inc
mov
sbb
cli
pop
js
out
repnz
push
fisttp
leave
call
xor
cmp
xchg
mov
pop
sti
in
aaa
cmp
adc
push
dec
movs
sbb
push
mov
inc
push
inc
bound
aam
sti
pop
rcr
sub
jle
js
mov
or
ror
popa
je
xor
jb
movs
push
jno
sub
sti
ret
sbb
pusha
jmp
jbe
jmp
daa
mov
lock
add
gs
ins
pop
cs
(bad)
pop
mov
fisttp
retf
scas
pop
sub
cli
push
or
ins
lods
imul
sub
and
imul
or
pop
mov
arpl
cmps
dec
stc
dec
inc
(bad)
xchg
sbb
jno
lds
out
jae
sub
or
pusha
sub
cmp
jle
mov
outs
pop
aaa
fiadd
xor
loopne
aad
push
dec
aas
and
push
outs
arpl
in
jmp
xor
jge
jnp
aas
mov
(bad)
movs
lods
popa
mov
mov
sub
xor
push
sub
mov
mov
outs
jmp
jno
int
push
cmp
(bad)
sbb
add
aaa
adc
retf
loope
pop
jb
aam
cmc
xchg
fild
inc
inc
lahf
fld
clc
mov
dec
cmp
jbe
into
add
mov
loope
sub
push
mov
pop
mov
jecxz
loope
xor
jg
ds
xchg
loop
aam
adc
or
gs
ins
fistp
je
jb
bnd
jno
push
or
jle
vmulpd
stos
out
pushf
sub
push
ins
(bad)
out
retf
mov
xchg
push
jmp
push
jg
stc
gs
rcl
pop
fldcw
sub
lods
push
pop
jbe
sbb
fs
repz
aaa
leave
and
pop
jl
xchg
ja
popa
pop
stos
outs
sub
cs
loope
xchg
mov
scas
push
jp
adc
scas
jg
test
push
add
fnsave
sub
fmul
mov
mov
das
mov
mov
das
add
(bad)
cmp
jbe
fcom
xor
repz
xchg
clc
adc
jbe
shl
xlat
mov
daa
mov
xor
fadd
xor
xor
fild
jg
cld
or
ret
inc
xor
ins
clc
add
cmp
sub
movs
aas
div
and
xor
bound
leave
data16
hlt
movs
fdivr
in
adc
or
push
mov
ds
das
inc
idiv
scas
add
push
push
cmc
xchg
jne
sar
jp
popf
add
into
pop
loopne
push
xchg
std
cmp
shl
pop
jmp
loope
clc
mov
fs
mov
and
bound
repz
mov
sbb
stc
addr16
addr16
sbb
sti
sbb
shr
jno
iret
rcr
dec
jmp
inc
push
sub
mov
ss
call
retf
mul
mov
sbb
scas
push
jno
add
pop
loop
aad
jns
outs
test
imul
jle
adc
push
xchg
movs
sub
inc
sub
mov
xchg
xor
mov
(bad)
out
shl
cs
add
mov
cdq
mov
es
outs
ins
xor
ja
mov
ror
pop
lods
cmp
cli
cld
jne
(bad)
adc
in
xor
(bad)
je
out
jnp
data16
stos
push
add
cli
mov
pusha
arpl
add
std
cwde
arpl
mov
mov
pop
pop
neg
xor
inc
int
scas
fs
xchg
cmp
push
adc
sti
shl
retf
jg
mov
xor
dec
adc
dec
jmp
sub
loope
pop
pop
inc
or
ret
enter
push
push
cli
add
or
mov
stos
iret
int
in
leave
test
mov
dec
stc
outs
not
(bad)
jmp
scas
sbb
xor
jmp
(bad)
cwde
retf
pop
imul
popf
mov
inc
or
or
cmp
out
fcmovnu
stos
fisubr
out
cmc
or
mov
inc
push
repz
pop
mov
bound
(bad)
jne
xor
xor
jl
jae
xchg
pushf
fsub
xor
dec
stc
in
add
out
cmp
ins
mov
fstp
inc
fs
adc
sub
fstp
add
adc
jo
sub
cwde
lahf
outs
jge
mov
jno
call
mov
and
xor
fcomp
add
imul
lds
pop
sub
sub
dec
loopne
movs
pop
jge
pop
xor
jbe
inc
xlat
jns
ja
int
cmc
and
mov
dec
push
out
inc
arpl
fistp
lods
pusha
rol
bound
test
pop
fscale
mov
(bad)
cmc
int
push
dec
push
mov
outs
and
sbb
das
sub
cdq
cmp
pop
sub
pop
mov
or
mov
push
xchg
sub
popa
test
retf
sub
inc
push
or
ins
inc
jecxz
cmp
mov
cmp
ret
or
cmc
(bad)
mov
mov
push
jp
jle
inc
cmp
dec
sbb
into
shr
add
cdq
in
inc
(bad)
xchg
pop
sub
popf
dec
or
sub
sbb
clc
je
loop
adc
mov
sbb
imul
inc
jne
arpl
shl
mov
test
mov
pop
adc
dec
xor
xchg
js
mov
mov
or
mov
and
sub
in
cmp
cdq
fs
mov
mov
cmps
daa
int3
enter
push
pop
popf
call
or
bound
xchg
lea
shl
sbb
imul
and
retf
imul
xor
imul
cs
pop
pop
ja
mov
push
push
push
add
pop
mov
mov
call
and
mov
cmp
test
call
popf
repz
jne
mov
movs
shl
xor
sbb
mov
and
idiv
push
jmp
jae
ja
mov
outs
xchg
push
add
mov
shl
gs
in
dec
mov
test
clc
imul
ror
or
stos
imul
rcl
inc
or
cmp
ficom
arpl
imul
imul
adc
lahf
test
inc
scas
mov
loop
jle
jmp
das
adc
leave
add
xor
cmc
loop
dec
xchg
inc
mov
imul
pop
popf
aad
xlat
mov
inc
mov
jb
loopne
in
mov
sbb
push
jmp
call
jmp
inc
fidiv
inc
fadd
imul
and
les
(bad)
push
imul
cmps
(bad)
cmp
mov
or
sti
movs
inc
lock
ins
jmp
outs
dec
test
dec
shl
mov
xor
adc
pop
mov
jge
retf
and
stos
dec
xchg
mov
cmc
out
mov
dec
mov
sub
sub
addr16
pop
xlat
popa
mov
clc
shl
mov
icebp
std
xchg
inc
fist
mov
cdq
(bad)
retf
mov
add
std
mov
(bad)
mov
pop
mov
dec
mov
leave
shl
icebp
ds
mov
je
mov
outs
pop
mov
out
push
dec
aad
push
jl
lock
shl
xor
aad
lods
jno
or
pop
adc
icebp
in
dec
push
cmp
aas
lea
dec
ja
hlt
sbb
addr16
fild
(bad)
ds
adc
scas
mov
dec
cmp
outs
mov
mov
popf
lock
mov
je
imul
jg
pop
popf
sbb
mov
sub
mov
addr16
push
pop
bound
leave
mov
movs
or
xor
fnstsw
cmp
cmp
cwde
hlt
into
adc
xor
dec
out
mov
out
mov
sub
fld
jmp
(bad)
cmp
mov
and
adc
add
xor
icebp
shl
mov
mov
mov
dec
cwde
jne
mov
push
pop
ficom
das
loop
add
js
jp
scas
outs
mov
mov
adc
mov
push
add
call
lods
imul
jp
and
push
xor
pop
out
inc
pusha
add
mov
(bad)
jns
inc
pop
retf
inc
push
push
aas
movs
cmp
push
movs
jmp
jl
jb
mov
pop
xchg
jge
lods
fild
data16
cmp
xlat
pop
inc
xor
andps
and
sahf
ret
loop
inc
inc
pop
retf
cmp
popa
call
rcl
popf
jae
jp
loopne
sbb
sub
cmp
out
jne
adc
adc
push
in
popf
xchg
push
das
adc
gs
sbb
push
sbb
enter
dec
lea
dec
ins
dec
mov
adc
fisttp
fld
inc
lods
jmp
pop
sbb
cmps
push
push
call
hlt
jecxz
out
loope
push
dec
std
pop
ins
or
sbb
retf
imul
test
mov
stos
jecxz
jle
sub
fidivr
xor
jp
adc
xchg
add
inc
retf
xor
push
mov
fcmovbe
push
xchg
sbb
(bad)
std
cmps
jb
xchg
packuswb
sbb
mov
and
nop
push
scas
jne
jp
ret
stc
clc
adc
fld
xchg
and
push
and
js
cmp
mov
xor
mov
retf
fcomp
mov
push
in
data16
dec
cwde
mov
test
aaa
(bad)
add
sbb
pop
jp
jge
jbe
arpl
jmp
pop
push
push
data16
pop
pop
test
push
xor
test
mov
sub
out
retf
inc
icebp
ins
push
je
mov
mov
mov
sahf
pusha
xor
push
scas
jmp
pop
ins
mov
mov
and
adc
jo
int
sub
call
add
xchg
cmp
mov
push
retf
adc
adc
dec
adc
mov
xchg
jle
jne
cld
jb
sbb
push
shl
nop
sti
call
dec
mov
repnz
xor
jg
hlt
lock
sub
push
xor
pop
add
out
jle
mov
leave
inc
cmp
push
rol
adc
scas
bswap
pop
pop
inc
xchg
mov
dec
sti
cs
lea
inc
icebp
leave
jecxz
push
rol
ins
outs
mov
in
dec
jo
ror
and
test
daa
fdiv
mov
jle
(bad)
xor
sub
(bad)
cmc
sbb
dec
pop
jge
jg
sub
mov
inc
or
sub
iret
cld
sbb
cwde
push
push
mov
adc
push
les
mov
int3
(bad)
push
sub
xchg
adc
dec
mov
jle
sbb
mov
mov
mov
aad
mov
ffreep
outs
or
or
popf
loopne
(bad)
pop
sub
jb
sub
les
test
cdq
or
nop
imul
push
mov
mov
leave
(bad)
dec
mov
inc
sub
pop
imul
cld
mov
cmp
cmp
jo
repnz
pop
cvttps2pi
push
push
jno
push
mov
cmp
jl
jb
not
mov
or
(bad)
push
inc
adc
out
mov
retf
in
rcr
mov
pusha
test
mov
dec
push
js
cwde
stos
pop
pop
mov
sbb
jno
(bad)
adc
cmp
outs
fiadd
pop
call
dec
lea
bound
inc
cmp
pop
jno
sbb
adc
out
push
jae
sbb
inc
dec
or
mov
mov
les
inc
mov
int3
sub
mov
movs
and
lds
mov
shl
shl
int
push
and
mov
scas
dec
sar
outs
jle
inc
imul
jle
mov
add
jmp
ss
sbb
test
or
pop
test
xchg
fwait
sbb
jle
sub
ja
fld
xchg
int3
addr16
mov
push
lods
sbb
push
ret
sbb
idiv
inc
popa
push
int
pop
out
jae
push
imul
mov
pushf
or
adc
dec
xor
arpl
mov
cmc
inc
das
dec
lods
sub
out
mov
(bad)
repnz
retf
jb
fs
mov
and
pop
movs
push
cmp
sbb
xor
jmp
cmp
push
fdiv
mov
or
cmp
inc
add
mov
and
pop
jmp
and
ret
inc
mov
inc
(bad)
in
adc
jle
inc
icebp
xchg
mov
ror
inc
sub
cmp
sbb
mov
fld
mov
imul
add
shr
and
cmp
in
in
pop
or
pop
sub
mov
mov
cwde
cwde
pusha
ss
pop
mov
jl
sub
mov
out
inc
pop
mov
mov
dec
and
inc
fist
call
imul
jno
cmps
mov
daa
xlat
jne
outs
cdq
enter
add
addr16
addr16
aaa
and
cli
sub
jmp
cmc
inc
add
inc
add
mov
mov
lods
inc
inc
inc
push
mov
icebp
mov
fbstp
push
add
xlat
cdq
test
fdivr
xchg
loope
and
cmp
loope
scas
ja
and
dec
adc
das
mov
mov
dec
add
cdq
jmp
or
jne
xchg
pop
mov
arpl
or
or
push
gs
ror
sub
sub
stos
je
adc
mov
jnp
scas
data16
and
mov
push
mov
jnp
sti
fs
dec
jmp
repz
cmp
jo
fsubrp
inc
cmc
fisub
jecxz
stos
aas
rol
mov
and
mov
popf
jbe
or
add
mov
into
jnp
lahf
add
mov
loop
outs
in
cmp
fwait
dec
sahf
add
ja
push
mov
push
xlat
shl
rcl
jno
cmp
pop
jle
mov
std
inc
(bad)
sub
mov
push
and
dec
cli
cmps
mov
mov
inc
(bad)
mov
mov
movaps
push
mov
jmp
mov
js
cmp
xor
mov
mov
mov
sar
xchg
ss
cmc
jbe
aaa
imul
ja
mov
xchg
sub
shl
dec
in
ja
daa
sbb
sub
or
gs
inc
sub
(bad)
and
lea
xchg
in
and
imul
or
push
(bad)
fcmove
imul
inc
mov
xor
mov
and
and
xchg
out
ret
xor
loope
inc
mov
mov
xchg
pop
xchg
das
push
mov
in
and
xchg
(bad)
xchg
sub
sbb
and
and
aas
arpl
add
dec
popa
pop
add
add
dec
imul
pop
scas
adc
scas
loope
leave
addr16
pusha
adc
dec
ja
add
dec
dec
(bad)
push
add
addr16
add
add
jmp
jmp
(bad)
movs
fistp
mov
je
jns
xchg
and
in
movs
jno
sbb
mov
ins
nop
ins
add
or
test
movs
shl
lahf
aam
cmp
in
icebp
and
sahf
xlat
fucomp
int
mov
test
add
lods
sub
mov
js
in
xor
jle
xor
ins
call
mov
repz
out
mov
push
fadd
int
mov
sbb
test
xor
cmp
ins
mov
sahf
xor
mov
pop
js
sub
pusha
xchg
mov
outs
jmp
xor
add
out
enter
xchg
jb
dec
mov
cmp
into
sahf
pop
jnp
in
ins
mov
mov
test
mov
jo
sub
push
dec
jmp
in
push
ds
ins
adc
sub
inc
(bad)
retf
adc
loop
mov
leave
fucomp
dec
jg
dec
jns
inc
adc
fsubr
arpl
or
pop
dec
push
imul
jo
stos
adc
ret
in
(bad)
push
out
jmp
sbb
lods
mov
enter
aam
jno
fwait
loopne
or
pop
sub
cmps
mov
std
mov
jnp
mov
jmp
out
pop
clc
(bad)
and
outs
outs
test
js
inc
sbb
loope
out
mov
sub
and
add
imul
mov
inc
push
retf
sbb
pop
dec
xor
pushf
push
pop
pop
sub
mov
out
shr
sbb
pop
in
sahf
les
cmp
retf
cmp
pusha
loope
mov
popf
ret
jmp
pop
sub
add
mov
cdq
popa
sub
xor
sbb
jo
push
adc
lds
jns
popa
fild
test
ror
mov
pop
mov
push
mov
pusha
dec
scas
fbstp
inc
jge
mov
mov
pop
test
cld
jl
and
and
add
pop
and
fmul
jecxz
jnp
mov
ins
push
add
dec
dec
retf
out
adc
aas
xchg
lods
call
gs
sub
and
inc
push
loopne
ficomp
inc
fst
in
pop
push
es
mov
iret
test
mov
stc
jbe
and
adc
(bad)
cmp
loope
sub
inc
call
dec
push
inc
jns
repz
jne
push
xchg
sbb
daa
and
pop
xchg
clc
mov
lods
aas
add
data16
mov
daa
sbb
mov
add
jg
loop
popa
outs
jmp
add
mov
repnz
sub
aas
xchg
sbb
adc
retf
cmp
fimul
fisttp
neg
dec
lahf
neg
and
adc
(bad)
movs
in
inc
xor
mov
mov
pop
(bad)
ins
out
bound
jmp
hlt
cmps
cmp
sbb
push
jae
and
cmp
mov
test
and
in
(bad)
or
pop
mov
inc
push
xor
xor
xlat
into
aaa
lock
sbb
loope
or
inc
(bad)
ror
inc
and
std
push
ss
pop
and
dec
mov
dec
push
mov
sub
cdq
scas
push
mov
xor
or
in
push
ret
es
xchg
xor
jmp
push
idiv
dec
sub
inc
imul
fcomp
in
lods
mov
inc
sbb
jb
sbb
mov
or
cmps
or
fdiv
mov
xchg
and
and
jmp
daa
sbb
fisubr
mov
pop
imul
push
sbb
repz
sbb
pop
and
je
inc
cmps
add
sub
mov
and
adc
pop
data16
fidivr
bound
addr16
ins
pop
jle
rcl
inc
pop
inc
dec
addr16
sti
call
add
add
imul
fnstenv
xchg
rol
aaa
mov
pop
add
dec
pop
jbe
loopne
add
lods
repz
bound
jne
jmp
add
pop
outs
jbe
lods
push
xchg
xor
add
dec
popf
ja
sbb
iret
ja
stc
pop
pop
mov
outs
mov
or
mov
pop
dec
cmc
and
inc
mov
xchg
or
push
xor
aam
push
dec
bound
call
movs
outs
and
call
call
or
in
inc
shl
mov
pop
cld
push
sti
sub
cmps
test
das
jle
sbb
std
hlt
add
mov
or
dec
outs
mov
test
dec
pop
movs
loop
clc
imul
fwait
les
mov
jg
cmp
adc
repz
jbe
mov
pop
or
dec
mov
mov
in
push
pop
mov
mov
inc
xor
push
mov
lea
(bad)
int3
in
add
dec
in
pop
pop
pop
mov
mov
and
dec
outs
cmc
or
inc
xchg
jmp
jmp
es
data16
addr16
int3
out
add
mov
jbe
push
mov
cmp
retf
shl
dec
mov
movs
lahf
mov
push
sbb
mov
fstp
(bad)
(bad)
mov
and
pop
xchg
addr16
std
mov
loop
push
pop
ss
std
stc
mov
es
mov
push
cdq
daa
cwde
loop
mov
sbb
mov
cmp
aad
xor
add
push
and
fwait
jne
pop
lea
lea
and
fs
or
ret
rol
imul
jns
rcl
pushf
lea
mov
mov
aaa
push
push
idiv
or
inc
jmp
popa
vpcmpgtb
lea
or
cmp
pop
push
and
jns
xchg
cli
or
gs
pop
sbb
sub
in
fcomp
mov
pop
pop
adc
push
mov
mov
mov
ins
push
mov
fs
or
inc
cld
sbb
add
dec
mov
outs
fiadd
xchg
movs
xchg
clc
push
add
fld
cmp
push
cmps
pop
movs
out
mov
pop
push
adc
popf
jmp
scas
sub
rcr
sahf
xor
sub
jge
or
add
cmp
or
jge
adc
rcr
sub
inc
in
adc
rcl
lods
push
pop
sub
sub
fcmovu
inc
sbb
fstp
outs
xchg
inc
inc
sar
or
push
add
dec
sbb
add
push
imul
test
in
add
jmp
in
push
mov
shr
loope
ds
cmps
arpl
mov
(bad)
jge
mov
add
mov
adc
xlat
mov
sub
hlt
neg
mov
fdivrp
push
mov
lods
push
and
leave
jbe
cmp
push
lahf
mov
adc
ja
add
adc
mov
inc
or
xor
or
jl
test
popf
lahf
pop
pop
shr
jmp
sub
jg
ret
rcl
push
sbb
ss
icebp
jae
mov
push
push
sbb
test
mov
jb
jb
fs
adc
adc
mov
or
call
push
inc
dec
mov
stc
pop
(bad)
stos
sbb
jae
mov
add
fwait
(bad)
clc
xchg
cwde
mov
sub
retf
lods
int
test
dec
lock
pop
mov
pushf
sub
fiadd
mov
sar
enter
es
fdivr
mov
xchg
cmp
xchg
jecxz
push
sbb
inc
and
mov
cli
mov
push
out
aam
(bad)
stos
fwait
add
pop
(bad)
cmp
in
int3
and
mov
cli
add
pop
push
pop
jno
cwde
lahf
retf
and
xchg
pushf
ins
test
xchg
addr16
push
mov
outs
nop
jmp
push
sub
stos
sub
jmp
mov
call
jmp
movs
shl
sub
fdiv
cmp
addr16
mov
push
pop
loop
iret
mov
rcl
movs
mov
repnz
dec
in
and
pop
pop
(bad)
ss
push
mov
cmp
xor
add
jbe
stc
imul
add
xor
or
dec
arpl
mov
mov
aad
in
imul
push
cdq
fimul
mov
shr
inc
mov
sbb
dec
rol
pop
inc
stc
jge
and
addr16
ins
mov
ret
sahf
fistp
push
ficom
xor
jp
dec
jp
xacquire
in
pop
inc
nop
aad
dec
mov
loop
lods
add
jg
pop
adc
cmp
jno
sahf
stos
jae
retf
hlt
cmp
inc
push
sub
lds
icebp
das
jnp
adc
jbe
pushf
leave
daa
mov
sbb
mov
loop
je
lods
jmp
lock
cwde
stc
inc
xchg
iret
mov
or
into
loopne
pop
dec
sub
cld
lds
icebp
shr
rol
add
add
js
jmp
mov
pusha
xlat
out
mov
cmp
not
xor
ins
fwait
cli
and
movs
jno
and
lods
out
addr16
inc
dec
sub
(bad)
mov
jl
loope
dec
in
add
mov
cmp
ins
sub
clc
jecxz
sub
mov
aaa
add
popa
pusha
jno
mov
xchg
cwde
pusha
ins
out
enter
in
retf
data16
repnz
adc
jno
xchg
mov
jb
shl
test
das
stc
mov
or
push
sar
jne
pop
push
mov
(bad)
cmp
xor
fcom
jl
push
inc
int3
pop
mov
cmc
adc
inc
hlt
xor
dec
lock
mov
pop
std
rol
jo
sbb
(bad)
pop
sub
mov
mov
inc
imul
sub
jmp
push
in
xor
sub
sub
xor
enter
mov
leave
inc
daa
push
cwde
in
cwde
pop
addr16
or
mov
pop
pop
movs
je
sbb
jnp
xor
repz
sar
jl
fst
mov
pusha
pop
cs
xchg
out
std
mov
pusha
xchg
mov
push
lea
push
jb
add
mov
fmul
or
into
(bad)
clc
loop
fadd
fs
cli
mov
or
leave
add
inc
ja
mov
shr
push
enter
xchg
je
sti
jecxz
jae
in
ss
add
adc
outs
test
or
rep
pop
push
lods
shl
xor
cmp
test
cmp
cmps
js
(bad)
ins
test
or
out
in
sbb
push
retf
hlt
xchg
fadd
cs
xor
popf
inc
shl
xor
fwait
pop
jns
inc
add
mov
aam
sub
shl
and
mov
push
dec
sahf
loopne
retf
push
sbb
push
in
cmc
sub
es
lock
pop
stos
sbb
pop
in
fs
inc
cmp
test
push
inc
call
arpl
add
jns
jo
cmp
mov
aaa
mov
mov
cmc
lods
pop
or
ins
mov
into
adc
je
pop
cdq
cmps
fwait
jmp
dec
mov
adc
js
pop
jbe
add
push
mov
pop
fild
cmp
mov
pop
fdivr
or
inc
push
jge
clc
or
pushf
in
fidivr
push
cwde
int
popf
and
cmp
imul
xchg
push
enter
les
in
jbe
cmp
mov
push
ja
fimul
mov
daa
push
loope
mov
mul
das
mov
pop
inc
mov
ja
sub
mov
out
cmps
dec
popa
sbb
pushf
arpl
outs
out
xchg
popa
push
jmp
mov
shl
cmp
stos
ja
std
adc
xchg
cmps
and
pop
mov
popf
mov
jne
sub
addr16
cmp
mov
aaa
lds
es
retf
stos
add
jge
jg
adc
inc
mov
pop
(bad)
pop
jmp
ins
scas
inc
mov
sbb
daa
loop
repnz
dec
lods
pop
dec
jo
push
cmps
fdivr
add
sar
jle
and
adc
xor
mov
cmps
xchg
or
pop
cld
shr
punpckhwd
pop
add
int3
loop
ds
leave
add
xchg
aaa
sar
movs
jl
mov
gs
mov
inc
(bad)
fisttp
mul
mov
pop
and
inc
std
rol
loopne
popa
xor
(bad)
pop
sub
ds
inc
lock
xor
cwde
loope
scas
inc
jecxz
push
cmp
js
(bad)
pop
adc
push
sti
ds
out
inc
loope
in
xor
xor
test
push
xchg
add
outs
xchg
js
push
xchg
loope
inc
mov
sbb
mov
aam
adc
xchg
shl
push
jecxz
mov
dec
fisubr
dec
add
cmp
inc
sub
ins
ds
int
dec
ds
sbb
into
pop
pop
xchg
mov
jle
fs
cmp
nop
push
neg
rcr
mov
sbb
cwde
adc
daa
mov
push
push
cmp
and
xchg
inc
jmp
lea
ins
nop
cmp
xchg
imul
and
and
jne
pop
adc
lods
loopne
dec
cmp
add
imul
(bad)
mov
cwde
jb
add
cmps
xor
leave
add
cmp
cmp
xchg
mov
push
lods
pop
outs
jno
inc
sub
iret
push
cld
clc
inc
mov
jg
fsubr
inc
xor
jo
loope
test
adc
scas
adc
push
das
pop
movs
inc
push
ins
inc
mov
cmp
lods
cmc
loopne
sbb
mov
movs
rcl
mov
test
imul
dec
pop
push
aas
add
mov
xor
inc
cmp
ins
xchg
xlat
inc
test
fistp
inc
mov
(bad)
lods
pusha
jmp
and
movs
pop
jbe
pop
and
xchg
push
add
sub
and
sub
mov
cmp
cmp
xchg
mov
and
jno
push
les
jg
adc
outs
cwde
rcl
(bad)
fdiv
not
xchg
ror
data16
mov
lds
xor
sub
fistp
scas
mov
jmp
mov
retf
pop
int3
sbb
(bad)
stos
xor
sbb
out
sub
mov
sub
scas
jp
and
popf
inc
sub
sub
addr16
retf
popf
adc
les
lods
adc
jnp
mov
sub
jmp
and
bound
adc
pop
or
movs
mov
(bad)
popf
fist
xor
jg
bound
add
sub
mov
inc
push
dec
outs
imul
mov
mov
add
mov
push
into
cmp
loopne
jne
fisubr
and
arpl
es
sbb
add
scas
inc
inc
dec
shr
addr16
mov
fwait
cmp
pop
popf
pop
sbb
(bad)
pop
(bad)
(bad)
mov
lods
sub
pop
jp
adc
ins
repnz
mov
xor
jne
scas
mov
int
std
push
jmp
sub
dec
scas
mov
push
jle
movs
mov
in
jne
fld
push
sub
push
sbb
cmp
fsubrp
fstp
adc
ins
clc
cmp
xor
fstp
or
sti
outs
cdq
gs
fwait
dec
cmovae
loopne
cmp
mov
(bad)
and
dec
inc
cdq
adc
cmp
out
pop
arpl
addr16
and
das
popf
hlt
jns
jmp
imul
dec
sub
dec
out
fstp
imul
or
jecxz
sbb
stos
pop
push
push
cmp
adc
(bad)
adc
pop
movs
loop
call
dec
(bad)
fst
sar
xor
inc
xchg
mov
imul
bnd
adc
jecxz
ja
stos
adc
pop
dec
lods
lock
jo
stc
mov
test
sbb
cmp
clc
jns
icebp
popa
cmp
xchg
icebp
and
sub
pop
(bad)
mov
mov
mov
popf
xchg
push
outs
mov
adc
test
(bad)
repz
mov
dec
push
dec
xor
jecxz
jbe
lods
(bad)
neg
ins
adc
loope
icebp
push
jo
imul
loopne
xor
xchg
and
test
ret
or
test
retf
cmp
sbb
add
in
shr
add
shl
dec
fs
leave
outs
adc
pop
stos
mov
rcr
test
sub
jb
sbb
pop
push
ret
mov
test
xchg
dec
aad
stos
xchg
mov
popa
mov
sbb
and
in
in
leave
fstp
xor
and
addr16
xor
sbb
sub
xor
jbe
inc
test
push
jl
dec
jp
push
pop
or
test
inc
inc
inc
jle
lods
mov
lods
ret
jnp
mov
mov
mov
shr
enter
jp
mov
idiv
mov
popf
pop
pop
mov
mov
push
pop
xchg
xchg
lods
ins
sbb
pop
cmp
out
mov
aas
es
inc
pop
xor
dec
and
xchg
outs
mov
leave
int3
(bad)
inc
div
pusha
sahf
inc
retf
daa
(bad)
int
push
mov
xor
loop
repz
jbe
mov
jp
mov
pop
cwde
dec
out
add
std
push
push
imul
jns
daa
cld
pop
lods
push
repnz
mov
repz
ds
aaa
loopne
sbb
loop
in
out
movs
out
xor
cs
dec
not
je
sub
data16
icebp
push
cmp
jbe
lahf
cwde
xor
loope
popa
call
faddp
inc
aam
ret
jnp
movs
cmp
push
inc
mov
neg
fstp
shl
sub
fld
inc
mov
fadd
mov
add
adc
pop
addr16
cmp
int3
clc
cmp
add
aas
push
outs
cli
add
push
mov
or
push
mov
out
loopne
or
retf
out
into
inc
cmp
sub
out
jge
pop
cmps
in
cmovle
push
dec
mov
push
sub
add
imul
jmp
adc
jbe
cmpps
fnstsw
xor
mov
mov
add
int3
bound
add
jl
stos
push
les
jl
push
sub
xor
les
imul
es
push
icebp
push
jmp
test
adc
arpl
pop
xchg
cmps
sbb
cmp
(bad)
add
cmp
test
xchg
mov
sbb
jnp
out
inc
ins
fistp
gs
aad
push
imul
fs
or
aaa
push
ins
cli
xor
jne
retf
xlat
shl
pop
mov
inc
dec
shr
ins
sahf
popa
in
popa
pop
sbb
pop
out
ins
mov
pop
xor
push
cli
stos
sub
cli
(bad)
sbb
lods
ins
outs
lods
push
mov
jbe
mov
pop
mov
pop
in
fwait
cs
dec
jne
loope
mov
or
mov
lea
push
out
in
lahf
les
pop
data16
clc
je
pop
add
int
pop
enter
loop
jge
sti
push
push
lods
pushf
test
aam
inc
xor
movs
in
xor
push
frstor
mov
mov
or
mov
div
mov
or
and
xchg
daa
push
push
int3
arpl
outs
ret
clc
ins
inc
leave
and
and
dec
cs
inc
jnp
mov
out
mov
jb
outs
popf
and
jae
or
push
lea
cmc
inc
jge
mov
xor
mov
repnz
and
mov
repnz
popa
jl
ins
jmp
inc
jmp
ds
mov
xchg
call
cmps
movs
jmp
hlt
jmp
(bad)
dec
icebp
out
xchg
iret
xchg
rcr
stos
(bad)
jmp
imul
fsubr
out
popf
jg
mov
ins
(bad)
leave
xor
(bad)
adc
push
jle
es
and
jmp
add
push
xor
pop
mov
inc
pop
and
mov
sub
dec
and
js
in
repz
push
loope
fcom
in
push
out
jge
call
mov
scas
out
frstor
loop
jne
mov
test
push
mov
sbb
jmp
cmp
pop
mov
mov
mov
out
mov
mov
jbe
cmps
inc
add
in
mov
pushf
movs
add
push
pop
retf
fwait
ret
xchg
mov
ss
mov
cmp
popf
test
repnz
mov
pusha
and
mov
and
cmp
lock
push
push
inc
enter
add
pop
cs
push
inc
lods
dec
aad
scas
inc
pop
or
jge
cmps
js
pushf
retf
jbe
push
outs
arpl
and
cld
jmp
xchg
retf
outs
inc
sbb
and
push
xchg
pushf
mov
mov
gs
jno
mov
add
es
movs
pop
sbb
mov
call
mov
fisttp
cmp
dec
mov
jbe
or
rcl
in
and
jne
es
fmul
lea
mov
add
push
pop
cmc
fsubr
sub
dec
pusha
push
mov
frstor
adc
jmp
mov
aam
mov
fld
clc
ss
inc
mov
push
pop
inc
sub
sbb
add
and
(bad)
rcr
adc
add
jmp
push
and
push
fld
popa
xchg
test
and
dec
fsub
and
xor
add
adc
push
mov
dec
out
imul
ds
sbb
cmp
pusha
(bad)
jns
fisttp
stos
xchg
in
jno
sub
ins
adc
jb
xchg
out
nop
in
movs
rcl
sar
jg
test
shl
in
mov
mov
cwde
mov
fmul
addr16
mov
out
fbstp
leave
(bad)
push
cmp
jecxz
aaa
inc
es
jmp
das
into
das
mov
mov
pop
imul
cli
dec
xor
jl
mov
or
fistp
jae
out
es
pushf
mov
jbe
aad
sub
dec
stos
or
sbb
push
leave
add
add
sar
jmp
(bad)
loop
dec
sar
mov
push
(bad)
cs
icebp
fcom
into
fs
xor
mov
mov
cs
mov
iret
or
(bad)
call
(bad)
std
push
xchg
mov
pop
movs
mov
xor
push
shl
loopne
int
dec
mov
shl
sbb
jnp
dec
and
(bad)
pop
add
cmp
xchg
dec
mov
int
jge
(bad)
arpl
pop
mov
sub
(bad)
cli
pop
xlat
jo
add
clc
push
push
mov
adc
adc
adc
xor
add
aaa
mov
xor
das
or
mov
jecxz
cmp
cwde
dec
stos
inc
cmp
ds
dec
cmc
pop
push
in
hlt
lds
mov
leave
icebp
mov
shl
sar
nop
mov
xor
mov
das
adc
inc
jle
mov
cli
retf
jmp
sbb
or
adc
jmp
xor
mov
dec
mov
jnp
movs
nop
sbb
(bad)
adc
mov
mov
push
push
add
sub
ficom
mov
cmp
mov
mov
js
das
sbb
add
and
mov
loope
scas
mov
hlt
das
ret
lds
xchg
jbe
xor
mov
gs
fnstenv
into
pushf
popa
xor
add
mov
ja
xor
cdq
dec
arpl
inc
xchg
sbb
push
mov
ss
fld
pop
loope
fcomp
in
dec
fadd
mov
and
scas
sbb
jmp
pop
in
(bad)
and
sbb
pop
mov
mov
retf
out
sbb
test
and
xchg
mov
ret
mov
movs
sub
and
jns
out
out
adc
fist
adc
xchg
pop
push
ror
dec
into
cli
inc
mov
xchg
pop
and
in
out
mov
add
xor
xlat
mov
scas
jle
pop
jge
jbe
retf
fwait
hlt
and
ret
and
jge
adc
call
out
(bad)
jns
into
mov
xchg
daa
jbe
hlt
push
mov
mov
jmp
or
fwait
jno
cwde
sub
jb
stc
hlt
cmp
shr
aam
dec
ins
loope
adc
mov
sub
cmp
les
push
imul
jle
enter
fs
mov
jp
xor
sbb
out
sbb
leave
jnp
pop
push
sub
cmp
in
fdivr
in
dec
jle
icebp
(bad)
fcomp
into
stos
xlat
loope
and
and
dec
shl
jo
add
in
xlat
mov
in
inc
xor
lods
cld
(bad)
pusha
inc
dec
mov
test
loope
(bad)
push
mov
cmp
sbb
imul
sbb
sub
ret
mov
xchg
push
inc
cwde
sub
iret
mov
ret
push
jne
(bad)
dec
jecxz
jmp
std
mov
inc
pop
inc
leave
push
or
jmp
mov
lahf
add
rcr
das
sbb
in
repnz
into
dec
mov
repnz
(bad)
repz
enter
ret
repz
lods
into
push
mov
addr16
out
fidiv
ret
mov
sbb
sbb
mov
jmp
cmp
jne
adc
mov
int
shl
sbb
ss
fs
inc
aad
shr
aad
movs
loopne
adc
mov
dec
sub
int
sub
lods
sar
sti
dec
movs
lea
adc
xor
rcr
pop
popf
fmul
call
aam
les
mov
into
pop
fwait
pop
sar
ror
push
cmps
jmp
lods
push
push
or
out
stos
imul
pop
sub
and
or
mov
add
mov
aaa
cli
add
fs
fldcw
test
(bad)
jns
ret
mov
call
pop
loope
xchg
pushf
pop
pop
cmp
pop
pop
inc
(bad)
test
mov
int3
rcr
fsubr
sahf
sub
add
jo
push
sub
daa
test
inc
pop
lea
out
xchg
add
(bad)
out
leave
or
jg
fs
lods
int3
cmps
out
mov
ins
jmp
mov
inc
shl
xchg
popa
fnstsw
inc
scas
mov
jmp
fs
cli
gs
sbb
and
cmp
sbb
cmp
cs
cmc
ds
or
arpl
push
fstp
rcr
sbb
scas
pusha
scas
pop
hlt
imul
imul
popa
inc
out
inc
ret
jne
aad
(bad)
ret
ret
fnstsw
jecxz
cmc
push
retf
mov
shl
pop
mov
imul
into
mov
sub
es
jno
out
lock
dec
fs
sti
(bad)
jle
pop
mov
pop
cmps
push
push
mov
pop
pop
pop
cs
or
push
or
jp
test
int
xor
hlt
(bad)
rcl
or
jo
adc
mov
pop
xchg
mov
and
jle
fimul
adc
add
aad
popf
lock
test
not
mov
mov
ins
adc
sub
cs
pop
pop
sub
(bad)
mov
lds
adc
sub
aad
enter
mov
ret
sbb
add
push
enter
xchg
inc
(bad)
daa
cmc
(bad)
sub
xchg
adc
pusha
cli
popa
sub
pop
mov
pusha
sbb
xchg
jmp
inc
dec
rcr
inc
ja
addr16
cld
jl
mov
ss
lahf
push
or
cmp
pop
or
in
mov
push
inc
mov
loop
xchg
xor
shr
loope
jmp
rol
push
bound
add
clc
jmp
nop
dec
sub
jne
ins
call
es
jae
dec
fstp
mov
(bad)
in
fnstcw
dec
xor
enter
ins
mov
daa
pusha
cmp
call
ret
movs
mov
and
jae
sub
xchg
int
pop
cli
in
sbb
fmul
stos
pop
dec
ins
dec
mov
sbb
mov
jne
movs
inc
les
lahf
add
call
enter
push
mov
inc
les
lock
lock
xchg
mov
xchg
aad
retf
sbb
in
ror
repnz
(bad)
sbb
imul
dec
pop
into
idiv
adc
jle
into
sbb
mov
and
cmp
arpl
jmp
(bad)
ins
xor
jne
scas
sbb
and
add
xor
jmp
mov
aas
aas
inc
retf
ja
lds
and
pushf
fsubr
pop
jns
xor
dec
ja
out
or
test
sbb
dec
out
cmp
cmp
pop
pop
xor
sub
stc
hlt
pop
push
gs
bound
push
mov
call
out
push
adc
ror
test
xlat
push
add
cmp
dec
push
pmaddwd
push
loopne
add
and
bound
mov
nop
or
ins
mov
sub
jp
out
icebp
push
mov
enter
loop
xor
leave
leave
jmp
sub
mov
push
ja
push
stc
xchg
ror
sub
push
pop
in
fdivr
push
adc
out
jae
fsub
ja
xor
std
lea
xchg
push
mov
sbb
fist
bswap
or
dec
jmp
mov
add
jp
jp
repz
stc
add
push
clc
sbb
lock
push
int
addr16
ret
call
mov
sbb
and
ror
mov
shr
repz
or
and
sti
pop
fs
fsubr
cli
dec
out
jmp
push
cmc
ror
(bad)
pop
jae
push
mov
cmp
gs
sub
pop
inc
shl
mov
icebp
add
or
inc
and
jle
jnp
retf
lods
mov
mov
mov
and
mov
neg
test
lock
xchg
cmp
cwde
popf
mov
xor
pop
scas
fwait
adc
adc
(bad)
(bad)
xchg
retf
int3
jns
cmp
outs
cwde
jo
ins
jl
adc
imul
out
xchg
lock
add
aam
xchg
test
pop
addr16
cdq
mov
in
out
loope
out
adc
loope
xchg
retf
sub
xor
pop
stc
(bad)
cmp
xchg
rcr
adc
fs
addr16
mov
outs
sbb
mov
mul
mov
jbe
pop
dec
sub
call
ja
gs
cmp
sub
inc
jle
mov
dec
xor
aaa
mov
jle
loopne
shl
daa
mov
add
outs
cmps
int3
in
dec
add
out
sahf
xchg
popa
(bad)
cld
add
clc
and
in
icebp
pop
jg
icebp
sti
mov
jo
xlat
ss
sar
cmp
jb
fidivr
cld
loope
mov
add
(bad)
lock
js
loop
std
call
and
xor
fisubr
movs
mov
lods
mov
and
jp
sbb
inc
(bad)
jle
sbb
mov
and
jo
pop
jno
xchg
in
push
sbb
psllq
mov
mov
or
call
dec
mov
jge
xchg
mov
ja
and
xchg
imul
pop
outs
gs
aam
xor
or
ftst
ins
jno
fnstenv
repnz
or
pop
popa
rcr
and
sub
xor
pop
and
dec
inc
push
push
cmps
popf
add
and
les
adc
out
push
out
mov
clc
xchg
hlt
and
outs
imul
ins
jne
and
dec
cmc
adc
pop
hlt
ret
pop
sbb
mov
outs
mov
jl
and
rcl
mov
push
mov
push
bound
cmp
xchg
xchg
xlat
xor
or
mov
jge
jbe
shl
push
cmp
test
xchg
add
jmp
push
ret
inc
mov
inc
shl
pop
jns
add
inc
loop
movs
pop
cdq
pop
daa
and
test
ins
das
out
sar
and
push
fiadd
repz
jge
sub
mov
cmp
and
pop
jno
sbb
mov
adc
(bad)
sti
aaa
mov
sub
inc
sbb
inc
daa
xlat
shl
sub
lahf
pop
loop
in
dec
mov
je
adc
ret
shl
in
cmps
pop
jb
xchg
lds
stos
cli
push
dec
adc
outs
xor
ret
push
jecxz
mov
popa
sub
or
pushf
jl
or
pushf
(bad)
fisub
push
push
push
pop
test
mov
cld
sub
repnz
push
or
in
imul
push
add
xchg
gs
mov
pop
cmp
out
sub
sar
mov
fs
push
inc
pop
and
sbb
ins
dec
jmp
icebp
and
inc
ss
push
ja
mov
add
cmp
sbb
lea
mov
push
sub
aas
mov
jp
in
stc
call
fimul
dec
adc
sbb
fcomp
push
xor
test
and
mov
sbb
pop
in
sbb
mov
aad
jo
aad
sub
test
mov
lods
outs
xor
cli
mov
and
cmp
in
pushf
daa
adc
push
mov
inc
pop
lods
dec
mov
xor
and
ret
add
rcl
mov
rcl
retf
and
or
cwde
dec
sub
adc
jecxz
xlat
cmp
mov
mov
or
xchg
push
cmp
arpl
shr
cs
lock
cmp
(bad)
pop
cmp
repz
mov
mov
out
push
add
out
xor
xchg
rcl
into
mov
sbb
stc
inc
push
sbb
mov
and
mov
retf
in
hlt
sti
les
jmp
add
mov
or
arpl
cs
mov
and
pusha
jecxz
movs
adc
lods
movs
movs
xchg
sbb
in
out
xchg
mov
sub
or
rcl
jns
jo
in
int3
inc
inc
and
or
cmp
jne
mov
loop
imul
lahf
mov
push
push
nop
mov
push
leave
sub
sub
dec
inc
sub
add
dec
lods
(bad)
pushf
dec
imul
dec
scas
dec
jne
jecxz
stos
cmp
call
ds
jl
adc
add
lock
mov
fild
imul
lods
fnsave
sti
pop
mov
mov
outs
fbstp
int3
mov
pop
scas
pop
sub
xlat
aas
dec
add
rol
cs
jo
movs
fisubr
mov
or
xor
or
push
repnz
and
adc
xchg
leave
je
jo
or
pop
mov
mov
(bad)
cmps
addr16
test
rcl
cmc
mov
les
pop
test
xor
rcr
scas
mov
sbb
lahf
ret
lahf
jmp
aad
or
stc
jmp
pop
xchg
cmp
ja
es
lods
in
dec
xchg
inc
jg
aas
cmp
in
push
vunpcklps
je
imul
sbb
pop
and
hlt
inc
push
jbe
jge
ins
pop
clc
xchg
xlat
pop
test
loop
push
test
scas
jle
inc
call
in
ja
int
aam
jp
and
cli
fs
ret
pushf
jnp
and
cmp
mov
adc
cwde
mul
test
test
fwait
mov
fdiv
xlat
or
mov
(bad)
in
mov
mov
nop
and
je
xor
(bad)
fimul
sbb
test
mov
mov
in
sbb
lahf
lods
imul
fcmove
loopne
fcmovne
pop
mov
lock
mov
inc
pop
loope
add
pop
idiv
jae
jg
ror
ret
and
xchg
mov
pop
sbb
jp
(bad)
cmc
gs
and
add
xor
nop
xchg
push
and
jl
xchg
pop
fbld
push
dec
adc
sbb
daa
js
inc
sub
enter
ins
push
cmp
mov
int
mov
pop
out
ror
inc
mov
xchg
sbb
movs
mov
sub
mov
cmp
popa
les
scas
mov
cs
sbb
push
xchg
scas
pop
push
xor
test
mov
and
jmp
call
mov
mov
xor
pusha
fwait
bound
mov
dec
jo
arpl
or
push
repz
push
enter
xor
push
push
adc
mov
jmp
dec
jbe
dec
pop
imul
pop
or
cmps
repnz
adc
push
cmps
cwde
jns
dec
inc
add
rcr
ret
push
cmp
and
cmc
stos
outs
call
ss
xor
xor
shr
(bad)
sti
sbb
push
fwait
sti
movs
push
add
loope
dec
das
scas
ins
iret
xchg
test
pop
daa
ins
cwde
leave
push
ret
inc
mov
mov
push
daa
cld
jmp
addr16
fstp
mov
cmps
in
lods
sar
mov
inc
or
pop
shl
and
rcl
es
fdiv
aas
in
sub
movs
add
cmp
into
aam
in
jmp
jb
sbb
(bad)
call
daa
js
fidiv
sbb
and
cmp
fs
adc
jecxz
shl
inc
and
pushf
stc
xchg
mov
sub
into
mov
mov
push
dec
iret
js
movs
loop
shl
dec
in
inc
pop
cmp
out
(bad)
mov
test
add
movs
and
and
mov
push
pop
jae
sar
mov
pop
lea
int3
pop
pop
sub
cmps
adc
add
fsub
sbb
push
push
sbb
push
pop
stc
xchg
pusha
movs
xchg
xchg
movs
pop
in
xchg
and
mov
sbb
mov
jbe
lock
mov
in
repz
lea
xchg
dec
adc
add
xchg
addr16
push
test
dec
cmps
arpl
in
pop
add
sub
mov
add
or
rol
arpl
sub
mov
aaa
jns
sbb
sbb
mov
adc
outs
mov
movs
jne
dec
adc
out
push
dec
xchg
mov
shl
in
mov
js
mov
jbe
fmul
pushf
lods
jmp
adc
cmp
out
mov
pushf
pop
data16
and
test
push
jne
cmc
push
xchg
enter
pop
cmp
push
pop
ins
cmp
inc
das
out
pop
add
pop
ror
push
hlt
(bad)
outs
jl
loop
adc
inc
sub
jmp
sub
jne
sbb
cmp
hlt
push
cmp
(bad)
mov
rcr
adc
xor
movs
mov
scas
push
pop
cmps
dec
popf
jp
mov
cwde
pop
mov
mov
pushf
jl
dec
cs
es
xor
mov
fnstcw
(bad)
cmp
pop
movs
add
cmp
mov
(bad)
jge
push
inc
int
mov
(bad)
out
mov
stos
pop
jp
xchg
fwait
(bad)
and
outs
jnp
fcmovu
dec
out
es
jg
pop
jl
shl
cli
sub
xlat
(bad)
mov
dec
sbb
inc
mov
aad
cld
xor
xlat
pop
mov
mov
xor
inc
ret
adc
push
jmp
and
mov
dec
cld
jmp
mov
ficom
arpl
push
sub
sub
pop
arpl
xlat
imul
cwde
mov
sbb
mov
sti
lds
sub
cmps
dec
push
adc
popa
push
sbb
xor
or
bound
adc
mov
inc
in
mov
dec
nop
jp
cdq
jo
mov
push
(bad)
xor
adc
pop
pop
push
mov
xor
mov
cmp
cmc
stc
add
loop
xor
(bad)
fisttp
xchg
jl
out
xlat
out
fs
push
mov
sub
or
sub
and
bswap
scas
push
push
into
xor
xor
cmp
ret
es
rol
lds
sbb
jae
(bad)
pop
lea
out
inc
dec
push
jg
pop
mov
ficom
dec
adc
mov
xor
aam
jae
dec
call
xchg
sahf
fldpi
jns
movs
hlt
sub
or
test
retf
cmp
sub
add
xor
in
jp
sbb
mov
mov
or
inc
pushf
fcom
(bad)
xor
lods
jl
mov
and
ins
cmp
pop
movs
das
cmp
inc
push
sbb
sub
mov
ins
gs
pop
pop
cmps
aaa
(bad)
repnz
push
imul
(bad)
es
add
xchg
or
xchg
mov
call
xchg
mov
pop
cmp
xchg
jmp
or
or
push
mov
repnz
lds
lahf
sbb
cwde
dec
sti
call
mov
inc
movs
loop
cmp
imul
or
das
jb
repz
sbb
jge
test
test
ret
pop
mov
test
mov
and
dec
jg
lods
mov
mov
fs
sub
and
mov
dec
push
mov
in
aaa
ja
dec
test
sub
jbe
loope
retf
and
outs
cs
inc
lock
sub
mov
fsubr
pop
sub
mov
movs
pop
add
mov
popa
lock
xor
and
and
mov
loopne
arpl
loope
shr
push
jg
or
mov
iret
sbb
jmp
sub
dec
hlt
xchg
and
mov
cwde
mov
aaa
hlt
call
pushf
shr
cmp
bound
adc
retf
add
lods
add
jle
lock
lds
mov
sar
adc
pop
sub
hlt
sbb
shr
inc
mov
std
enter
pop
push
mov
(bad)
jmp
jno
das
stos
sub
mov
std
(bad)
xor
iret
(bad)
add
es
cmp
dec
jmp
push
es
jno
fnstcw
jae
in
add
movs
test
cmp
or
adc
jne
mov
fldenv
in
fcom
sbb
retf
not
jge
inc
xor
popa
jbe
sbb
dec
fcomi
sub
scas
mov
repz
into
stc
jge
icebp
fstp
or
push
outs
adc
aad
xchg
mov
mov
mov
loope
mov
xor
pop
push
test
add
pop
adc
jbe
in
out
rcr
sub
test
jmp
(bad)
cmp
xor
ins
push
setle
popf
dec
inc
jnp
loope
cli
push
push
imul
out
enter
sub
lods
shl
pusha
out
pop
fidivr
mov
dec
inc
pop
dec
rol
ins
ins
and
mov
ds
les
jp
sbb
push
into
jmp
nop
arpl
popf
pop
adc
add
xor
scas
pop
cmp
inc
inc
dec
jmp
cmc
and
pop
addr16
jmp
mov
dec
das
cli
inc
adc
inc
inc
push
in
sbb
ins
dec
mov
loopne
inc
adc
(bad)
push
aad
inc
jns
daa
inc
adc
repz
xor
cmp
scas
cmc
or
movs
cmp
jno
jmp
and
mov
mov
pop
adc
and
sbb
sub
xor
mov
call
mov
xchg
rol
imul
add
mov
ja
cmp
and
or
sbb
cmp
cld
or
fidiv
push
out
fsubr
mov
into
lds
push
mov
jnp
adc
mov
in
addr16
scas
pop
xchg
rcl
ins
cmc
ins
pop
sbb
call
in
inc
jg
pop
mov
es
daa
mov
pop
mov
dec
inc
cwde
and
sub
or
mov
addr16
sub
leave
mov
arpl
imul
cmp
out
jmp
jecxz
or
leave
dec
jmp
je
jbe
and
test
xchg
dec
lods
fist
enter
or
fdiv
mov
xchg
rol
cmps
shl
fmulp
inc
jbe
inc
sbb
pop
mov
inc
inc
adc
mov
fwait
scas
adc
dec
mov
clc
push
neg
ds
cmp
jbe
xor
loop
push
push
jno
cmps
das
fstp
jg
xchg
pop
arpl
outs
imul
test
cmp
call
or
inc
std
inc
mov
(bad)
lds
pop
cmp
adc
imul
outs
push
ins
lea
jb
mov
jge
inc
pusha
shl
cmp
push
pop
outs
ds
cld
lods
jge
int3
xor
aaa
mov
mov
xor
sbb
xchg
idiv
adc
and
fucomp
adc
icebp
push
push
cmps
add
xchg
jno
rcr
cmp
aad
sub
fstp
int
test
mov
inc
(bad)
push
add
and
cmp
jno
bound
mov
pop
pop
mov
out
add
cs
imul
and
imul
stc
xor
sub
popf
in
pop
mov
sar
(bad)
mov
(bad)
call
fmul
jno
data16
sub
repnz
test
stc
or
lea
jb
fcmovnbe
mov
jecxz
jb
loope
(bad)
aad
in
push
aas
sbb
aam
fistp
cld
sub
mov
dec
aad
test
xchg
mov
xchg
push
js
pop
dec
push
leave
inc
jmp
xor
cs
adc
ret
sbb
popf
arpl
ffree
sub
pop
cmp
test
inc
out
push
int
or
cmp
xchg
cmps
mov
lock
arpl
loope
sub
jnp
xor
fcmovnbe
pop
inc
xor
xor
imul
mov
std
ds
cmps
push
popf
xchg
clc
lods
aaa
cs
and
pop
jne
mov
dec
sbb
add
dec
inc
fwait
aad
add
lea
in
mov
dec
fidivr
mov
or
dec
(bad)
pop
adc
shl
cmp
bound
sbb
and
pop
(bad)
cmc
xor
in
leave
cdq
push
stos
leave
ret
mov
pop
push
jnp
addr16
out
fs
pushf
fstp
dec
push
jp
sbb
jae
jno
test
iret
std
inc
jmp
fst
jl
movs
mov
xchg
stos
into
pop
dec
hlt
not
mov
cs
pop
imul
popa
bnd
jecxz
push
mov
test
lock
adc
jmp
mov
inc
sbb
mov
mov
test
shl
aaa
push
jb
sub
ret
mov
pop
ret
outs
mov
dec
idiv
xor
addr16
cli
jge
mov
or
pop
and
cmc
mov
push
ss
cmp
jbe
cmp
jne
(bad)
mov
and
fnstcw
rcr
xor
call
es
dec
mov
arpl
sbb
call
jbe
pop
adc
mov
jb
lahf
jo
xchg
imul
mov
lea
jnp
mov
cld
mov
push
or
jno
cld
inc
call
sbb
sub
retf
inc
ins
(bad)
xlat
shl
cld
xchg
mov
dec
add
fwait
into
cmp
cwde
adc
daa
jle
cmps
mov
cmp
imul
pushf
mov
rol
sub
push
push
jno
push
dec
inc
sbb
add
cmp
ins
inc
xor
jle
pushf
mov
daa
sub
cmp
mov
out
push
pop
ror
adc
loopne
jge
lahf
mov
rol
aad
xchg
inc
adc
cmp
retf
sbb
push
movs
mov
dec
and
pop
sbb
mov
sbb
sbb
inc
std
lods
jns
cmp
inc
iret
xchg
push
adc
pushf
ja
in
out
cli
push
das
int3
enter
mov
mov
int3
jp
aaa
inc
xor
mov
aad
add
sar
mov
in
inc
mov
out
jo
mov
xlat
inc
add
and
cmp
aam
pop
pop
pop
inc
stc
mov
bound
mov
push
push
adc
sbb
hlt
repz
push
pop
jmp
fs
fs
or
(bad)
mov
cmp
pop
call
sbb
icebp
or
adc
aad
xor
lods
jmp
dec
xor
dec
adc
sbb
aad
scas
jns
mov
dec
push
nop
es
hlt
repnz
jle
fiadd
cmp
gs
shr
and
mov
jmp
iret
cmp
inc
fbstp
sbb
dec
sbb
aam
and
ret
das
jle
jmp
sub
mov
xor
ret
cmp
sar
pop
pop
scas
ja
pop
(bad)
out
pop
shl
pop
add
mov
adc
fistp
rol
(bad)
mul
cmps
pop
sbb
test
(bad)
pop
sub
dec
push
fidivr
mov
cmc
add
xor
in
mov
or
pusha
gs
int3
mov
daa
dec
pop
(bad)
cs
repnz
outs
add
ror
pusha
jo
pop
pop
adc
mov
enter
jge
add
lahf
es
jns
push
sar
out
mov
push
ss
adc
pop
jmp
xor
lock
pop
clc
push
xchg
not
mov
imul
dec
sub
cmp
(bad)
mov
cli
lock
cmps
or
adc
or
sbb
cmps
sub
adc
addr16
cdq
add
jb
push
ds
xor
mov
out
lea
mov
pop
push
inc
stc
outs
scas
mov
int3
stos
gs
leave
cmps
daa
mov
outs
ffree
repnz
xchg
xchg
cmp
sahf
push
dec
xchg
sbb
lods
or
adc
xchg
dec
cmp
mov
idiv
xchg
cwde
adc
cmp
data16
add
fidiv
xor
ins
mov
jae
inc
stos
pop
movs
jmp
in
outs
test
jns
loopne
(bad)
push
pop
xor
xchg
push
push
js
dec
pop
push
fild
icebp
fdiv
dec
in
(bad)
out
pop
loope
clc
push
mov
jns
sub
mov
sub
in
mov
mov
mov
hlt
push
cmp
sbb
cmp
push
add
and
cmp
xchg
aas
sub
daa
dec
dec
sub
aaa
repz
sar
pusha
retf
(bad)
add
dec
loopne
and
icebp
push
mov
push
and
aam
dec
push
loopne
cmp
rcl
jne
(bad)
enter
push
cwde
loope
dec
cmc
xor
mov
popf
pushf
pop
mov
arpl
into
xor
jae
sar
jmp
stos
add
jle
iret
sub
in
jmp
fwait
and
pop
pushf
retf
in
jns
jge
movs
push
pop
scas
idiv
xchg
jnp
dec
addr16
mov
push
jae
and
push
push
or
pop
idiv
mov
xor
xchg
mov
adc
fwait
inc
xchg
(bad)
xchg
push
cmp
imul
push
lods
cmp
cmc
aad
pop
loop
push
sbb
jmp
ror
sti
sbb
and
mov
pop
std
sub
inc
lds
(bad)
jae
jo
sub
outs
mov
test
push
sub
mov
gs
push
and
sbb
inc
into
push
xlat
mov
cmp
cs
push
stos
cmp
adc
pop
push
shl
mov
and
or
add
dec
push
xlat
mov
shl
mov
add
cmp
test
mov
adc
mov
jmp
add
sbb
sbb
push
dec
or
inc
cs
xor
div
adc
(bad)
xchg
mov
pop
int
daa
(bad)
rol
aas
sub
and
push
adc
ret
movups
jae
inc
call
inc
imul
out
sbb
pop
ja
inc
xchg
js
(bad)
sahf
xchg
adc
fnsave
adc
test
push
retf
and
fwait
or
imul
lods
inc
aam
adc
dec
push
mov
inc
pop
test
fsubr
and
out
and
cwde
or
sahf
cmp
mov
int
outs
xchg
aas
jp
mov
cmps
sbb
adc
and
outs
mov
int
in
or
and
int3
cmp
inc
pushf
jmp
lea
dec
jbe
les
scas
js
aad
ins
popf
ss
jno
mov
mov
cli
dec
jg
clc
dec
jns
stos
inc
int3
sub
jb
push
mov
cwde
jle
mov
pop
cmc
fwait
nop
xchg
test
pop
std
test
pop
jmp
or
dec
add
push
je
movs
daa
mov
dec
jno
into
jle
lods
sbb
test
pop
leave
out
cmp
dec
pop
dec
mov
pop
pop
xor
push
xchg
in
sbb
xchg
pop
pop
stos
outs
in
xchg
jbe
jnp
pop
jne
adc
mov
adc
(bad)
in
stos
cdq
dec
fsub
and
(bad)
mov
setns
popf
and
sbb
out
(bad)
stos
lock
push
aad
cmps
jae
push
jmp
mov
and
ror
jg
daa
jmp
or
sub
cs
test
call
enter
es
cwde
cdq
shl
imul
rcr
jns
in
out
pop
dec
add
lahf
jl
sbb
jbe
outs
jo
stc
push
jb
ja
mov
pop
cli
jecxz
cmc
(bad)
jns
idiv
adc
adc
scas
adc
mov
fs
xchg
push
repz
popf
(bad)
inc
gs
in
enter
jne
enter
pop
dec
and
inc
call
xor
add
inc
mov
cmp
or
jl
inc
sbb
push
out
bswap
scas
xor
push
cmp
cld
add
int3
scas
lock
ret
cmp
sub
clc
cmp
ret
movs
loope
addr16
xor
jge
loopne
out
jns
sbb
or
push
movs
out
mov
jecxz
mov
sbb
ret
push
sbb
pop
sub
jb
pop
cs
add
or
imul
fild
sbb
rcr
je
adc
xor
aam
in
pop
pop
push
adc
pop
sub
cmp
xchg
mov
jp
cmp
and
mov
cmp
retf
mov
jb
into
stc
dec
pop
arpl
retf
dec
add
(bad)
jmp
xchg
dec
ror
ja
into
mov
mov
inc
xor
xor
outs
inc
add
mov
add
icebp
test
dec
into
jno
and
and
mov
retf
and
jl
pusha
mov
xor
or
xor
and
or
pop
ret
jo
cmp
jb
arpl
mov
sbb
or
test
mov
xor
xchg
sub
ftst
add
test
ds
in
jnp
(bad)
jnp
mov
cld
adc
iret
jmp
js
xor
add
adc
clc
mov
lahf
ret
rol
and
ret
adc
fwait
cmp
mov
cmp
lock
movs
add
nop
pop
imul
lock
and
inc
repnz
imul
data16
sahf
xchg
mov
sbb
dec
ja
div
jno
cmc
cmp
jmp
(bad)
in
(bad)
fdiv
(bad)
int
inc
aam
les
rcl
pushf
bound
add
repz
sub
xor
jp
jle
mov
das
dec
xor
pusha
or
sahf
push
sbb
enter
aam
ja
or
rol
push
rep
add
xchg
(bad)
pushf
jg
xor
fcmovu
mov
jp
fs
pop
adc
sub
aas
and
pop
je
movs
cmp
push
mov
xchg
xor
stos
sub
xchg
mov
inc
jg
in
(bad)
out
movs
and
jle
pop
ret
rcl
cmp
enter
addr16
ds
rcl
xor
sbb
push
push
push
rol
mov
xor
mov
ret
cmp
dec
xchg
dec
stos
stc
xlat
leave
and
and
dec
jg
scas
lds
retf
stos
pop
iret
test
lods
mov
sub
retf
leave
sbb
sbb
jb
or
or
cmp
sub
stc
sub
lea
adc
and
neg
loope
or
push
adc
aas
fcomp
dec
lea
jae
dec
dec
mov
cs
imul
push
pushf
fwait
shl
call
je
and
iret
sub
mov
in
push
jnp
push
shr
hlt
sub
loop
xor
std
mov
outs
push
and
bound
jb
adc
push
mov
arpl
or
dec
sti
or
mov
jns
in
sub
push
xchg
mov
mov
js
cmp
push
adc
xchg
bound
dec
push
test
jecxz
or
and
jge
fs
out
sub
xor
stos
inc
into
inc
xor
pop
xor
pop
sbb
les
stos
jge
inc
push
fsubr
loopne
dec
dec
push
sbb
or
loopne
and
add
dec
imul
sbb
in
jge
and
xchg
rcl
ret
outs
aaa
pop
push
jb
dec
jge
cmp
cli
push
push
mov
repnz
sti
iret
or
loope
mov
leave
popf
pop
cmp
mov
in
inc
xor
(bad)
mov
push
aad
mov
ins
in
(bad)
mov
out
mov
push
jp
gs
push
push
rcr
pop
dec
inc
push
mov
jo
xchg
mov
sbb
retf
ftst
jecxz
or
or
jb
icebp
cdq
jne
jp
ret
mov
or
jbe
fs
scas
in
jbe
ds
sar
lea
push
daa
or
int
push
adc
mov
loope
mov
and
mov
jb
mov
sub
out
ins
cmps
sar
gs
and
stos
outs
lods
cdq
cli
fidivr
adc
xchg
jl
cmp
adc
aaa
movs
push
adc
and
cmp
gs
rol
jno
pop
mov
das
xor
mov
call
test
cld
cmp
dec
mov
int3
test
les
adc
test
dec
add
add
int3
in
(bad)
ja
ror
xor
jne
std
pop
je
dec
pop
push
xchg
(bad)
(bad)
stc
addr16
hlt
jg
(bad)
adc
cmp
imul
cmc
inc
daa
adc
(bad)
xlat
loope
repz
addr16
inc
add
loopne
adc
dec
inc
cmp
pop
jle
cdq
fs
retf
mov
adc
loop
movs
out
jl
ja
and
or
push
pop
and
sbb
mov
sbb
lods
lock
jno
jl
dec
pop
jmp
fs
fist
xchg
ins
lds
dec
fnstsw
jns
xor
cmp
ss
div
xor
add
jl
add
dec
adc
pop
xor
mov
pop
mov
out
and
or
xor
xor
imul
push
fiadd
cmp
outs
ins
cmc
cmp
(bad)
js
fs
daa
(bad)
mov
aaa
call
lahf
je
xchg
les
rcl
popf
push
cmp
mov
ins
fcomp
cmp
sbb
sbb
jbe
cmc
fistp
fimul
data16
fwait
mov
std
imul
dec
xor
into
jmp
imul
lea
or
dec
rsm
stos
loopne
xchg
(bad)
jl
dec
stos
pushf
cmp
mov
aaa
faddp
sbb
clc
bound
movs
xor
inc
(bad)
(bad)
add
jb
(bad)
mov
add
outs
sub
inc
sub
pop
bound
or
repnz
das
cmps
mov
adc
inc
dec
and
sub
fwait
jge
xchg
dec
cmps
jecxz
aas
push
sar
mov
add
dec
arpl
mov
jmp
test
push
and
retf
movs
(bad)
push
jle
scas
mov
jns
mov
pop
add
pop
cmp
sti
and
call
or
in
cld
js
sbb
in
(bad)
(bad)
test
lods
out
mov
or
or
sub
and
sahf
sub
mov
pushf
jp
lods
dec
mov
pop
xor
dec
jle
sbb
jns
mov
imul
dec
fidivr
jbe
nop
in
sub
jne
loopne
test
lea
(bad)
inc
stc
mov
mov
mov
pop
sub
inc
cmp
mov
loop
rol
add
xor
not
mov
xchg
out
scas
push
push
gs
pushf
shr
and
data16
add
and
dec
dec
push
pop
jle
aaa
sbb
jbe
aam
popa
stos
mov
into
xor
jns
xchg
sbb
mov
sbb
(bad)
dec
sbb
pusha
fmul
push
dec
jmp
jnp
dec
fdiv
xchg
xor
push
sbb
push
add
std
lods
js
xor
arpl
mov
mov
data16
xlat
sti
lods
shr
mov
adc
loopne
xor
cmp
pusha
nop
and
inc
test
and
mov
pop
push
pop
fisubr
xor
mov
jle
adc
add
dec
sub
jge
pop
mov
pop
jae
inc
in
mov
out
addr16
stc
shr
xchg
add
call
inc
jmp
std
(bad)
jb
ins
add
jb
out
lods
xlat
aad
test
repz
sbb
dec
inc
and
mov
inc
pushf
lock
mov
sbb
and
add
and
dec
retf
xlat
leave
dec
xchg
dec
ror
sbb
in
pusha
out
jns
jge
jmp
(bad)
pop
xor
inc
cmp
(bad)
adc
scas
out
add
and
cmp
popf
test
pop
xchg
rol
pop
pop
sahf
hlt
mov
push
jne
mov
idiv
cmp
jecxz
out
mov
in
jns
pop
inc
sbb
sti
out
rol
xlat
dec
jmp
push
mov
xor
neg
xor
sub
inc
jbe
aam
gs
add
xor
inc
or
cmps
mov
jge
ret
retf
out
cmps
push
add
inc
xchg
add
cli
xchg
imul
dec
xchg
dec
mov
inc
mov
pop
movs
icebp
xchg
xchg
test
xor
ret
cmp
aaa
mov
das
enter
in
push
jno
rol
pop
repnz
test
sbb
mov
pop
jbe
(bad)
jns
psubw
stos
not
popa
and
cmp
pop
and
sub
test
dec
jbe
xchg
mov
mov
cmps
dec
das
adc
jle
mov
ret
sub
das
push
xchg
mov
adc
ins
test
loopne
stc
mov
fs
sbb
shl
clc
es
jp
repnz
das
mov
jns
into
in
push
cmp
pop
scas
cmps
mov
les
xor
xchg
push
inc
sbb
popf
repnz
pop
js
scas
cmps
mov
jb
dec
or
fld
and
or
and
xor
das
or
call
in
mov
xor
test
and
dec
mov
xor
adc
pop
mov
jge
fdiv
pop
fdiv
sti
xor
test
xor
sbb
and
sbb
cwde
call
push
mov
jns
dec
add
pushf
ins
sbb
xor
push
rcl
ret
mov
inc
int
popf
rcr
cmp
mov
or
cmp
and
inc
mov
jo
jp
adc
popf
ins
test
mov
mov
clc
sub
xor
retf
arpl
push
hlt
xchg
stos
adc
pushf
jl
cmc
cld
imul
movs
ss
shl
xchg
dec
ja
movs
xchg
or
mov
fs
arpl
(bad)
imul
test
push
lds
jmp
ret
pop
ins
lea
ins
test
ret
mov
mov
mov
ss
cdq
ds
jnp
sub
idiv
pop
mul
mov
adc
data16
sub
sub
call
inc
push
sub
loope
pop
add
or
inc
in
push
inc
adc
dec
movs
imul
mov
push
pusha
cwde
jmp
test
leave
movs
das
arpl
push
arpl
aaa
imul
jne
inc
mov
push
mov
and
jl
daa
add
mov
ror
inc
bound
aaa
daa
clc
cmp
and
xor
out
jp
mov
jne
or
fild
scas
js
mov
add
xchg
jecxz
add
ins
sti
sar
gs
sub
add
inc
jp
push
test
jb
ja
xchg
add
or
ret
ins
xor
xor
mov
test
or
xchg
jge
pop
pop
add
lods
xchg
jecxz
cld
mov
push
movs
jns
mov
add
imul
gs
push
pop
xor
fst
add
pop
xlat
adc
scas
pusha
inc
inc
cmp
ins
jp
leave
jecxz
mov
fbld
and
jne
dec
in
rol
scas
js
dec
pop
mov
mov
jmp
outs
jle
imul
retf
pop
out
push
xor
das
or
outs
inc
pop
pop
(bad)
jne
add
or
loopne
sub
cmc
push
xchg
sbb
call
repz
inc
and
sbb
jo
movs
push
push
or
or
loope
ret
xchg
outs
pop
push
bound
leave
repz
push
jmp
int3
cli
shl
shr
mov
call
retf
pop
aas
cmc
scas
test
scas
aaa
sub
lods
xor
sub
out
ret
and
xor
inc
and
sbb
scas
jns
js
dec
and
es
pop
inc
cmp
ins
inc
dec
mov
jmp
inc
fdivrp
mov
mov
icebp
jle
inc
int
jle
sub
mov
mov
cmp
popa
add
mov
test
ins
in
in
test
aaa
push
cmp
or
push
dec
push
scas
daa
inc
cmp
xchg
push
loopne
rcr
inc
cmc
jmp
jle
jmp
cwde
push
mov
test
ret
cmc
jge
adc
mov
adc
pusha
jb
bnd
out
push
lds
(bad)
dec
xor
pop
test
cmp
ds
(bad)
push
mov
cmp
ret
test
adc
xchg
cwde
bound
leave
adc
push
mov
retf
mov
mov
add
adc
dec
push
ins
loopne
in
sbb
(bad)
push
jmp
je
stc
inc
mov
jmp
loop
repz
cmp
mov
outs
pop
stc
adc
inc
and
aaa
inc
aad
push
fldcw
inc
jne
inc
cmp
stos
lods
pop
cmp
sahf
aad
imul
cmp
ds
aam
frstor
rcl
addr16
push
push
test
int
inc
jmp
mov
popa
inc
pop
jo
ins
out
add
mov
rcl
push
(bad)
and
xor
xor
outs
leave
add
sbb
lods
loopne
mov
ins
aad
pop
sbb
cmps
je
inc
test
dec
ins
sub
hlt
popf
push
xchg
sub
xor
push
retf
add
push
les
mov
jae
cs
sbb
push
cmp
les
or
movs
push
lods
test
push
js
sub
dec
xchg
and
sub
fnstsw
test
out
outs
push
ret
mov
mov
dec
cmp
fbld
out
mov
aaa
dec
cmp
outs
xchg
pop
xchg
mov
ret
ins
xor
imul
mov
add
out
lods
pop
imul
jp
push
mov
jp
(bad)
popf
dec
lahf
loope
pop
xchg
ins
dec
fnsave
or
arpl
xlat
jbe
mov
push
arpl
dec
ror
enter
mov
or
cdq
pusha
xchg
ja
rcr
inc
mov
adc
fs
leave
pusha
(bad)
(bad)
gs
js
and
mov
and
loope
call
xchg
repz
mov
fmul
dec
fimul
dec
fmul
dec
shl
jge
rcl
test
mov
add
mov
or
ins
mov
lods
mov
into
mov
out
inc
sti
fdivr
bound
jne
mov
pop
jns
pop
and
inc
dec
mov
jecxz
pop
mov
jl
int
push
push
push
fmul
dec
add
pop
mov
loope
cmp
hlt
inc
push
(bad)
mov
(bad)
scas
leave
inc
xor
gs
cmp
xor
push
mov
movs
mov
ins
ret
out
mov
mov
jmp
xor
stos
and
inc
mov
lahf
scas
jo
loope
jne
lahf
push
daa
dec
rcr
mov
inc
cmps
mov
jmp
xor
fiadd
sub
or
imul
mov
sar
aas
jmp
out
idiv
mov
clc
ret
cmp
mov
xchg
push
cld
movs
lods
push
ja
push
jmp
lods
lds
mov
mov
clc
mov
xchg
jae
jns
ret
cld
inc
adc
pop
shl
icebp
or
in
add
cmp
aam
pop
mov
mov
ja
jbe
mov
sbb
dec
jae
push
ds
rol
sub
mov
in
or
inc
test
xchg
imul
push
ins
pop
cmp
out
cmp
dec
ins
das
daa
dec
lds
(bad)
pop
push
repnz
and
loope
and
mov
test
xor
lods
xor
gs
out
cli
dec
das
daa
fld
mov
and
xchg
fsubrp
add
fdiv
scas
fimul
dec
(bad)
cld
mov
scas
pop
and
(bad)
xor
test
push
pusha
jne
lods
fimul
xlat
out
aas
ds
xchg
jle
je
sar
repnz
xchg
or
retf
mov
mov
sub
shl
push
adc
rcr
dec
aad
push
mov
mov
xor
pop
aaa
sub
inc
xor
jmp
lods
movs
xor
inc
fwait
and
mov
mov
rol
lahf
shl
imul
mov
jns
and
fcomi
adc
xor
pop
mov
inc
or
jnp
retf
iret
jle
cmp
mov
cs
xchg
jno
aad
imul
inc
popa
call
sub
nop
jl
inc
cmp
jp
xchg
fsubr
repz
idiv
ret
and
sub
xchg
or
cmps
xchg
pusha
out
dec
dec
mov
repz
xor
mov
inc
(bad)
repnz
push
sbb
xor
setb
sahf
ret
adc
(bad)
and
push
adc
dec
fnstsw
clc
sti
cs
jbe
test
loopne
xor
aam
xchg
out
inc
call
cli
call
mov
jo
push
ret
imul
xor
mov
sub
push
jle
pusha
imul
loopne
outs
mov
call
(bad)
loope
test
adc
cmp
test
push
push
and
imul
(bad)
outs
das
fsub
call
test
shr
(bad)
jp
xor
call
mov
rcr
or
mov
xchg
cmp
adc
mov
xchg
js
out
and
mov
fwait
int
les
jne
sub
mov
mov
idiv
setae
je
xor
retf
in
jb
mov
mov
fld
adc
sub
push
pop
retf
(bad)
je
or
call
mov
jmp
xor
pop
das
inc
sbb
stos
jmp
dec
push
xchg
retf
test
in
add
mov
bound
xor
fnsave
adc
jg
cmp
sub
sar
and
mov
lds
scas
xchg
push
test
mov
inc
cmp
(bad)
fcomip
jmp
loopne
or
inc
sbb
mov
in
xchg
or
xor
loopne
pop
pushf
(bad)
or
and
scas
adc
clc
sti
jp
or
inc
in
in
jbe
test
stos
pop
stc
aas
inc
scas
aas
retf
or
cmovnp
and
jp
push
mov
movs
push
fsubr
nop
fdiv
ret
pop
fld
push
adc
sub
or
out
stos
pop
dec
xchg
sbb
sbb
jbe
inc
enter
jp
sub
sti
lods
sbb
xchg
psubb
ss
loope
push
push
xchg
inc
sahf
jb
(bad)
fsub
imul
pusha
pop
(bad)
in
(bad)
or
push
ror
out
stos
adc
pop
cmp
fld
dec
lock
adc
iret
jg
cmp
mov
shl
cs
xor
jne
mov
jge
(bad)
cmc
(bad)
sub
xchg
and
xchg
pop
mov
jns
in
cmp
stc
add
arpl
xchg
retf
mov
xchg
stos
iret
cmp
bound
mov
lods
fisttp
das
loop
add
sbb
add
mov
popa
dec
ja
cmp
loop
add
sbb
cli
mov
scas
push
pop
lahf
adc
mov
xor
mov
aaa
xor
adc
adc
pushf
push
adc
adc
shl
push
mov
fnstsw
out
add
mov
mov
mov
and
nop
imul
xlat
or
adc
sub
cmp
test
(bad)
sbb
xchg
test
enter
xchg
xchg
mov
push
cmps
stos
add
fld
push
add
mov
ins
aam
mov
mov
push
hlt
mov
cmp
mov
inc
in
imul
repz
pop
stos
ins
mov
push
fnstenv
push
jecxz
sbb
xchg
aad
cmp
or
sti
lods
call
stc
mov
jp
in
push
xor
sbb
inc
xlat
addr16
push
xor
dec
dec
sbb
xchg
sbb
lods
loope
imul
test
fiadd
dec
mov
push
xlat
(bad)
pop
bnd
xchg
inc
xor
push
xor
retf
inc
push
push
sti
dec
icebp
xchg
xor
outs
xchg
cwde
cmp
jb
xor
cmp
sub
dec
out
xor
adc
jge
xchg
arpl
outs
and
sahf
xchg
sti
sub
call
(bad)
cdq
jl
sub
mov
mov
in
mov
test
xchg
push
loopne
add
nop
xchg
dec
imul
mov
cmp
data16
mov
dec
xchg
xor
xchg
mov
(bad)
mov
test
dec
je
scas
hlt
jg
sbb
lods
fwait
out
hlt
pop
jnp
xor
pop
je
cmp
sti
shl
xchg
jle
cmp
xchg
xlat
call
xchg
sti
mov
push
mov
sahf
mov
and
pop
and
das
loopne
dec
imul
mov
lahf
dec
xchg
xchg
fld
stos
add
pop
mov
addr16
mov
mov
(bad)
ds
loopne
aaa
add
cld
jbe
stos
sbb
mov
das
xor
mov
icebp
add
not
cld
jae
stos
add
jns
inc
cmp
jecxz
iret
std
mov
cmp
xchg
ds
add
add
cs
dec
add
jl
loope
fild
mov
clc
pop
sub
mov
popf
fldenv
adc
rcl
outs
fstp
mov
mov
out
loope
xor
ret
(bad)
call
imul
daa
mov
loop
add
popf
sahf
mov
pop
nop
je
mov
in
in
sub
in
call
mov
jbe
mov
dec
mov
jmp
jecxz
push
fdiv
enter
ret
mov
hlt
mov
mov
cld
xchg
cmc
mov
cmp
sbb
xor
aaa
jbe
fdivr
sbb
or
mov
fnsave
mov
mov
cmps
(bad)
cmp
pop
pop
mov
adc
cmp
pop
mov
inc
jbe
les
cmp
inc
cmp
pop
mov
inc
(bad)
xchg
pop
(bad)
les
iret
mov
daa
push
dec
lods
stc
jg
and
push
push
xor
xchg
xor
arpl
and
add
add
mov
jns
je
je
add
stos
push
(bad)
sbb
cmc
cmps
test
movs
out
mov
sbb
push
loope
jae
adc
jg
pop
pop
shr
cmp
push
cs
enter
mov
and
xor
cmp
sbb
jg
xchg
add
add
push
sub
sub
stos
hlt
pop
xchg
push
mov
int3
clc
je
sar
adc
sbb
jo
loop
pop
dec
sub
repnz
xchg
out
mov
idiv
jmp
push
dec
das
aaa
push
xor
(bad)
clc
ds
cmp
ja
mov
div
inc
mov
cmc
jb
enter
mov
out
and
or
mov
push
jne
mov
sub
gs
and
jb
gs
mov
sub
int3
lock
xchg
push
das
adc
adc
out
mov
in
inc
(bad)
inc
pop
jg
mov
mov
mov
mov
jp
mov
inc
mov
push
aad
je
daa
(bad)
pop
xchg
enter
les
ret
pop
push
pop
jmp
push
dec
pop
push
mov
enter
(bad)
cmp
xor
cwde
add
mov
pop
push
adc
mov
jbe
push
lahf
enter
jl
aam
loop
loop
mov
cmp
hlt
fs
adc
mov
mov
or
jmp
inc
xor
rcl
pop
mov
lock
push
aaa
mov
and
add
lods
cmp
inc
cmp
mov
ror
and
loopne
adc
(bad)
rol
push
sub
bound
sbb
mov
cs
imul
push
jecxz
mov
jbe
sub
xor
not
lods
ja
inc
fsubr
pop
retf
mov
in
sbb
push
pop
cli
and
jp
lea
fcmovnu
and
lea
call
ins
shl
mov
inc
fild
mov
xor
arpl
cwde
out
gs
inc
xchg
or
aam
aam
popf
nop
xor
rcl
cmps
mov
loopne
adc
(bad)
dec
mov
xchg
xor
mov
out
or
xlat
push
mov
aas
mov
(bad)
mov
daa
sti
(bad)
jne
xor
ds
jle
push
cmps
in
mov
sbb
and
inc
jl
sub
jb
test
pop
pusha
in
pop
repnz
sbb
or
xor
add
addr16
scas
popf
hlt
dec
mov
div
fimul
les
ret
inc
push
rcr
jge
scas
or
fld
inc
xchg
cwde
(bad)
scas
sub
push
out
fimul
push
or
dec
dec
xor
inc
xchg
addr16
push
push
mov
jae
mov
pop
sub
pop
out
xchg
mov
add
or
push
jb
inc
xor
pop
push
cli
sub
mul
pusha
jns
icebp
mov
pushf
jg
adc
je
fisubr
cmc
xor
les
dec
mov
movs
rol
inc
mov
jmp
adc
and
ja
jno
push
adc
dec
mov
adc
dec
ja
pop
mov
outs
ins
cld
add
push
dec
xchg
push
mov
icebp
hlt
shl
mov
inc
sub
push
lds
pop
xchg
dec
pop
xlat
scas
ror
add
pop
rol
xchg
or
mov
inc
aad
mov
jne
jg
in
bound
xlat
adc
test
fild
pop
cwde
jne
jl
div
in
sub
xor
add
imul
sbb
pop
mov
add
sub
pop
div
xor
push
out
push
xor
(bad)
fisttp
xchg
pop
mov
mov
imul
ins
mov
int
(bad)
push
je
add
mov
ret
push
sti
jno
sub
and
adc
cmp
into
lds
xor
js
nop
shr
xor
jge
loop
mov
inc
jp
mov
sub
mov
sub
add
int
push
out
cs
jmp
xchg
push
xor
hlt
ja
inc
inc
popf
jmp
push
mov
loop
jmp
test
xchg
rol
push
mov
inc
in
jmp
xor
sbb
mov
mov
fisttp
(bad)
sub
inc
fidivr
into
jbe
sub
dec
sbb
sbb
mov
ror
lods
push
cmp
push
push
pop
test
dec
rol
in
cmps
dec
sar
mov
jp
stos
ins
adc
jg
sti
push
fdiv
cmps
mov
jne
idiv
cmp
xchg
es
jns
iret
neg
cmp
fmul
push
mov
icebp
pop
out
nop
in
mov
outs
inc
xor
rol
cmp
fs
fs
jbe
mov
adc
add
mov
fnstenv
and
test
or
push
xor
and
dec
cmp
(bad)
sti
sub
and
dec
shr
jge
inc
(bad)
xchg
mov
sub
xchg
xchg
movs
aam
test
sbb
mov
inc
mov
cmc
mov
rcl
lods
(bad)
stos
shr
xor
mov
push
xor
std
jge
pop
ins
add
jno
fisubr
inc
sub
or
sub
sub
mov
or
js
dec
je
scas
(bad)
sbb
in
push
add
push
jmp
push
clc
loope
mov
pop
mov
lds
out
xor
imul
push
movs
inc
push
mov
mov
outs
sahf
nop
cwde
mov
addr16
cmp
mov
sbb
mov
lea
xchg
sub
adc
adc
jb
cmp
jmp
sub
push
iret
(bad)
xor
jbe
adc
cmp
rol
dec
cmp
and
shl
mov
push
inc
push
add
dec
bound
cs
or
dec
jns
lods
call
inc
mov
div
ins
inc
(bad)
jle
lods
bndstx
cmc
sbb
std
sub
or
lea
stc
xchg
mov
mov
(bad)
mov
sub
ss
iret
jecxz
in
repz
fisub
xlat
mov
retf
mov
jbe
adc
dec
or
mov
pop
mov
stos
and
sbb
mov
or
push
and
test
pop
mov
inc
cmps
pop
bound
xor
movs
ss
xor
stos
sar
sub
push
hlt
cmc
cmps
xor
pop
adc
inc
cdq
inc
fwait
adc
call
xor
cli
push
jl
mov
sbb
and
xor
or
jne
cmp
fidiv
mov
inc
inc
scas
jne
fistp
js
add
arpl
aas
cmp
mov
dec
push
int
in
jb
sub
(bad)
mov
cld
outs
mov
mov
mov
sub
and
xchg
sub
mov
js
ins
pop
sbb
cmp
in
gs
add
loope
jge
lock
mov
bound
dec
and
test
add
test
sti
mov
loope
ds
mov
sub
mov
adc
(bad)
xchg
inc
les
inc
xor
inc
in
mov
and
jmp
aad
add
push
std
sti
test
adc
mov
inc
das
jmp
mov
mov
push
call
ror
push
fsub
aad
jne
xor
pop
jp
push
add
(bad)
retf
ins
xchg
pusha
hlt
aad
fldenv
sbb
dec
bound
ret
mov
test
cwde
clc
xchg
adc
jl
and
mov
inc
xor
int
fs
repnz
push
mov
ss
mov
xor
sub
adc
stos
pop
(bad)
sub
xor
xchg
sbb
cmp
repnz
pop
mov
pop
pop
xor
imul
dec
out
(bad)
repnz
jbe
cmc
jae
dec
jg
mov
jnp
call
dec
dec
xchg
jns
jb
ds
pop
idiv
in
push
test
inc
fcomp
cmp
ret
sar
in
and
push
out
push
or
loope
stc
test
mov
arpl
popf
xor
in
pusha
jb
mov
jo
iret
loop
aad
in
pop
(bad)
mov
adc
sub
les
mov
aam
out
stc
(bad)
or
inc
adc
js
dec
sub
push
int
repnz
js
mov
cmps
sbb
sahf
aas
rol
jecxz
sbb
aad
popf
test
xor
or
cs
or
lds
xchg
test
xchg
in
mov
sbb
test
or
retf
addr16
push
ja
mov
inc
pop
cli
xchg
mov
ins
cmp
push
jge
jge
xor
pushf
push
jmp
ins
inc
sar
(bad)
enter
mov
fadd
clc
jmp
pop
inc
jg
movs
repnz
mov
sub
(bad)
out
sbb
ror
hlt
lds
loope
mov
push
add
pop
and
mov
add
push
or
ror
inc
out
lods
dec
mov
lods
dec
dec
addr16
sti
pop
loopne
imul
fisttp
mov
pop
aam
out
cmp
rol
mov
stos
inc
test
cmps
push
mov
mov
std
inc
rol
cli
mov
or
and
sub
aad
cld
loope
imul
push
mov
jns
fcomp
sub
sbb
mov
je
cmp
daa
and
add
push
push
cs
sub
out
imul
mov
jp
addr16
and
push
stos
scas
int3
adc
jae
jo
jg
jbe
inc
arpl
out
rcl
add
mov
xchg
jae
mov
cdq
fnsave
xor
retf
sbb
nop
push
mov
xor
ds
es
xchg
push
scas
jl
push
push
icebp
std
push
xchg
icebp
adc
sbb
jecxz
push
cmp
fwait
call
push
lds
in
xor
je
outs
jb
adc
push
xchg
and
cmp
leave
xlat
sbb
ins
ret
fwait
sub
and
pusha
sub
mov
test
enter
jg
stos
push
push
(bad)
frstor
cmps
repz
pushf
or
xor
cmp
push
mov
aad
jge
jmp
aas
lds
pop
jo
sub
pusha
daa
jb
pop
jg
pop
nop
pusha
int
push
in
jle
(bad)
sbb
daa
mov
adc
cld
(bad)
sar
or
out
pop
adc
adc
push
pop
pop
sahf
dec
jecxz
ins
push
test
cmp
pop
cmp
fisubr
inc
mov
sbb
popa
movs
dec
pop
into
fisubr
inc
mov
sbb
cmp
loopne
ror
addr16
pop
xchg
mov
outs
sahf
cwde
inc
sti
and
mov
not
push
jle
mov
shl
xor
mov
mov
fst
das
bound
jcxz
or
add
jmp
out
jle
mov
xlat
sahf
dec
xchg
and
aad
stos
sub
xchg
popa
test
in
xlat
call
mov
add
push
pop
adc
adc
and
ds
cmps
loope
ja
jno
xor
cmp
jo
push
call
mov
inc
push
enter
mov
add
lods
and
imul
call
inc
fnsave
mov
clc
add
loope
mov
inc
in
mov
scas
les
xchg
loope
test
jecxz
test
leave
xchg
xchg
and
clc
lds
addr16
jge
dec
pop
ds
mov
mov
dec
xchg
movs
jg
call
xor
arpl
and
adc
out
inc
jbe
dec
xor
inc
dec
fdivr
test
cs
fist
or
xchg
push
dec
retf
cmp
xchg
push
icebp
mov
dec
push
popa
cld
sbb
sar
dec
js
paddd
and
xchg
fwait
fs
dec
sbb
adc
jbe
ds
add
in
fmul
push
jno
repnz
push
rcl
push
fdivr
and
fwait
lds
mov
ret
fst
div
or
push
pop
sbb
jnp
mov
mov
cli
lahf
inc
push
xor
sar
fstp
sub
sete
or
mov
outs
push
add
push
fidiv
jmp
lahf
cmp
mov
aaa
add
push
xchg
mov
jne
adc
mov
call
scas
mov
je
and
ret
mov
jbe
xchg
push
sub
outs
int3
out
bound
adc
inc
or
mov
aaa
lea
mov
aaa
sahf
das
sbb
in
push
xor
(bad)
mov
nop
rol
mov
in
jno
(bad)
call
ds
pop
dec
in
add
xchg
call
jmp
mov
push
call
aaa
and
or
js
jne
iret
cld
fwait
pop
fbstp
or
cs
jmp
push
sbb
in
sbb
(bad)
fwait
xchg
mov
dec
jae
inc
call
sub
out
jg
(bad)
fmul
out
lock
pop
jmp
jp
push
pop
je
aam
fmul
ins
ss
cli
pusha
push
retf
jle
add
popa
fdiv
sub
rol
stc
sub
adc
out
repnz
sub
repz
sub
add
daa
cwde
stos
adc
push
or
jl
mov
aam
test
ins
jg
inc
ret
popf
cld
int3
scas
ret
rcl
or
and
js
mov
inc
adc
arpl
outs
es
push
aam
adc
mov
sub
push
mov
outs
or
and
fwait
das
jge
add
cs
push
mov
(bad)
aas
rcl
adc
rcl
xor
int
jns
xchg
sbb
mov
add
ja
add
stc
inc
pop
out
and
inc
neg
adc
cwde
or
mov
cli
(bad)
jno
sbb
shr
adc
jmp
mov
lock
jge
sbb
pop
std
or
in
sub
mov
add
mov
(bad)
mov
pop
out
or
lods
jp
adc
dec
cmp
mov
push
xor
shl
enter
inc
mov
jne
or
(bad)
dec
test
sub
mov
and
fistp
mov
dec
mov
add
push
mov
jmp
scas
fld
sbb
pusha
in
jl
xchg
push
cmps
std
ins
cmps
pop
sahf
ficom
pop
pop
xor
pop
pushf
add
inc
enter
push
in
push
pop
mov
dec
xor
out
mov
add
mov
dec
push
sub
inc
sub
test
xchg
les
scas
add
fisttp
pop
test
cmp
fidiv
or
dec
clc
xchg
cmp
sub
sbb
ss
sub
or
sub
add
dec
idiv
and
dec
data16
mov
add
push
hlt
outs
sub
je
fiadd
inc
mov
jle
dec
xchg
stc
or
js
or
and
add
aaa
in
jmp
sbb
mov
ret
clc
shr
pop
sahf
push
movs
inc
cmp
add
dec
xor
daa
mov
pop
scas
hlt
jmp
outs
int3
jns
jmp
ds
rcr
scas
inc
jmp
mov
and
pusha
loopne
lds
popf
jg
add
xchg
mov
cmps
pop
inc
hlt
mov
inc
call
mov
fs
push
mov
and
inc
cmp
je
fst
test
fs
jmp
mov
push
(bad)
stos
sub
inc
repz
pop
pop
outs
cwde
sbb
imul
sub
cmp
aam
sbb
dec
inc
ss
pop
jb
outs
pop
and
push
cmps
sbb
push
movs
stos
pop
iret
lahf
out
sub
mov
jbe
xchg
xchg
movs
jnp
mov
dec
outs
cwde
push
jno
imul
push
inc
in
in
mov
mov
mov
data16
jmpw
fwait
std
push
cmps
(bad)
jmp
aas
pop
ror
adc
mov
sub
sbb
ja
loop
stc
xchg
mov
fwait
jmp
in
jnp
inc
inc
mov
cmps
icebp
int3
(bad)
std
xor
ss
xor
xchg
sub
shl
retf
cmps
dec
inc
mov
clc
out
inc
adc
repnz
add
outs
lahf
ins
loop
call
push
das
lds
mov
add
or
jp
cmp
mov
adc
adc
(bad)
xor
cmp
rcr
push
loope
mov
xlat
repnz
push
cmp
mov
push
mov
loope
adc
and
call
inc
aad
jle
imul
hlt
and
and
adc
(bad)
or
cs
sbb
and
fwait
dec
mov
sub
pop
arpl
jb
mov
pop
cmps
std
repnz
jae
mov
push
lods
rol
aad
inc
or
sub
fldcw
xchg
(bad)
jno
jle
popa
cs
ror
add
fs
cmp
mov
jp
(bad)
retf
call
or
jo
bnd
retf
add
retf
shl
addr16
adc
ret
shr
add
idiv
popa
jmp
dec
inc
or
repnz
ss
ds
lock
ds
inc
ror
aad
stc
add
das
pop
or
movs
stos
push
xchg
fbstp
adc
pusha
inc
adc
cmps
lods
ja
rcr
push
movs
mov
push
push
pop
push
cli
sbb
and
sbb
sub
cmp
mov
add
dec
aaa
adc
add
sub
outs
jb
inc
dec
sub
fistp
xor
repnz
int3
jg
mov
sbb
xor
sub
inc
mov
pop
out
(bad)
sbb
enter
mov
dec
xchg
lahf
dec
loopne
inc
mov
mov
enter
cmp
inc
push
mov
stc
outs
mov
dec
out
push
jge
loope
mov
or
ss
cmps
xchg
mov
sub
and
xor
adc
jb
std
icebp
jns
add
(bad)
jns
mov
outs
and
retf
mov
stos
movs
push
pop
jle
inc
inc
xor
add
push
out
outs
jae
pop
push
dec
fld
lods
out
sub
sub
(bad)
mov
jne
dec
scas
adc
mov
addr16
jb
mov
loope
adc
and
add
(bad)
mov
repnz
adc
inc
dec
pushf
nop
sub
cmp
sbb
loope
sti
jp
clc
bound
mov
or
cmp
fsub
mov
mov
mov
mov
mov
imul
xchg
inc
inc
xchg
outs
pop
dec
inc
mov
mov
jp
jns
sbb
cmps
out
mov
pop
in
int3
add
stos
or
and
xor
lods
sub
pop
(bad)
xchg
(bad)
mov
inc
adc
sbb
pop
sbb
outs
xor
inc
mov
data16
ret
xor
xor
cs
mov
sub
adc
sbb
cmp
cmp
push
dec
jle
xchg
mov
lods
jg
fwait
jle
xchg
dec
sub
(bad)
ins
add
add
pop
ss
rol
mov
cmp
add
jecxz
or
(bad)
jmp
daa
cmps
test
mov
and
push
aaa
inc
sub
enter
daa
scas
lahf
vpmaddwd
inc
and
and
test
push
pop
test
outs
pop
addr16
mov
xlat
in
stos
dec
xor
shr
adc
and
jne
add
inc
push
jmp
mov
xor
jge
leave
out
mov
loopne
and
(bad)
call
out
arpl
push
into
stos
push
push
leave
pop
push
dec
mov
int
icebp
or
ret
mov
inc
jns
in
sbb
leave
add
fwait
or
dec
jne
mov
fisub
push
sbb
jg
and
daa
inc
or
popa
repnz
ins
cmp
mov
pop
hlt
push
inc
sub
xchg
adc
fdivr
adc
mov
repz
out
jmp
ret
loopne
add
imul
mov
mov
xchg
ins
xor
mov
inc
pop
or
stc
in
das
jmp
xchg
dec
jno
pushf
mov
stc
jmp
jbe
mov
pop
mov
into
add
mov
ins
fbstp
movs
cs
jae
pop
dec
js
cld
push
out
dec
pop
push
mov
pusha
dec
bound
scas
mov
mov
jg
sub
pop
add
xchg
pop
scas
mov
xor
jg
push
adc
sti
xlat
and
cmovno
or
cmp
sub
dec
loop
pushf
mov
test
repz
rcr
inc
dec
and
(bad)
mov
stos
sub
adc
cli
inc
jnp
push
sub
xchg
adc
pop
(bad)
mov
out
pop
push
sbb
pop
setns
sbb
data16
sbb
mov
mov
push
daa
and
ss
mov
and
cmp
hlt
mov
add
es
adc
fisttp
iret
cmp
pop
test
push
mov
leave
xchg
mov
es
fldenv
sbb
ret
sub
push
inc
or
dec
push
push
jmp
cs
loop
fdivrp
or
add
ss
inc
loop
jp
mov
pop
lds
aam
jmp
dec
mov
cwde
dec
jmp
jp
jno
add
arpl
dec
jne
dec
adc
push
cmp
ror
xor
cld
or
and
cmps
clc
push
cmps
adc
pop
popa
push
mov
int3
int3
call
and
jb
xchg
and
adc
push
xchg
xchg
scas
push
int
test
or
mov
adc
push
cmp
push
or
aam
mov
out
add
in
adc
push
jae
loope
pop
xor
inc
call
cld
mov
add
mov
(bad)
adc
(bad)
jp
pop
push
sbb
fiadd
test
cmp
mov
cmc
retf
ss
fdivp
pop
pushf
inc
mov
loop
mov
jnp
jecxz
mov
in
xchg
daa
ins
mov
lock
dec
call
outs
lahf
xchg
sbb
inc
jmp
push
mov
fsubp
cld
xor
addr16
push
cs
int
outs
sub
cli
add
dec
loop
xchg
and
sbb
movs
fwait
clc
push
jle
jmp
(bad)
rcr
sbb
inc
or
mov
dec
(bad)
out
imul
jp
jmp
cmp
mov
rcr
test
xor
push
push
xor
shr
sbb
clc
pop
push
xchg
push
sub
mov
popa
sub
mov
mov
push
pop
add
or
dec
jmp
pop
and
sti
and
cmp
jle
mov
xchg
inc
in
push
jg
test
ins
gs
and
aam
adc
mov
cwde
jmp
add
pop
xchg
and
(bad)
and
(bad)
mov
ret
push
sub
ret
jecxz
inc
inc
jl
and
push
ret
adc
and
ins
mov
cmp
xchg
add
xchg
cmp
out
inc
push
stos
mov
fimul
ins
or
sub
ret
push
jp
outs
add
jmp
loope
push
cmp
test
je
loop
sbb
inc
and
out
sub
adc
fld
shl
addr16
call
cmp
and
dec
push
in
xor
sbb
jne
fmul
sbb
add
add
retf
jmp
ret
pop
push
sbb
test
loope
cmp
into
test
mov
sar
jnp
cs
std
dec
lds
pop
jb
mov
dec
rcl
(bad)
clc
sbb
cmp
adc
jnp
mov
retf
sub
jecxz
cld
dec
mov
push
in
test
mov
pusha
mov
mov
rol
jno
das
fdivp
(bad)
jmp
pop
xor
push
push
jo
ss
pop
pop
cmp
mov
leave
mov
aaa
ss
neg
push
int
cld
sub
push
cmp
or
jecxz
scas
icebp
shl
sbb
push
add
jp
push
outs
stos
pop
sbb
ss
(bad)
adc
sub
jb
mov
mov
dec
jl
xor
leave
(bad)
or
out
sbb
lahf
cmp
add
cmp
pop
(bad)
out
mov
cli
cmp
mov
stos
ds
or
add
xor
lock
mov
inc
sub
mov
cmc
push
out
cmp
xchg
in
mov
or
cmc
leave
mov
sbb
retf
mov
es
push
test
pop
cmp
call
xchg
ror
mov
push
cmps
dec
ror
call
mov
xor
mov
ret
test
bound
test
rol
leave
cs
xchg
js
es
xchg
pop
in
xchg
in
push
stos
jae
and
mov
cmps
add
dec
adc
test
imul
mov
xchg
or
jp
cmps
and
mov
cmp
xchg
xor
or
jns
test
cmp
scas
cli
cwde
shl
scas
mov
in
clc
aam
enter
or
and
ss
push
adc
inc
pushf
mov
cdq
test
mov
jl
imul
inc
cmc
(bad)
mov
js
pushf
push
jno
arpl
nop
in
push
dec
cs
js
push
stos
jmp
mov
test
xchg
push
add
test
or
jecxz
retf
stos
mul
test
imul
mov
sahf
outs
and
jge
adc
scas
inc
and
mov
push
sub
adc
pop
push
cmps
adc
push
sahf
jb
add
leave
jo
data16
mov
pop
fbld
push
js
cli
jmp
mov
mov
or
xor
jo
mov
fldenv
push
jmp
mov
inc
in
jbe
xlat
stc
xor
pop
add
mov
and
mov
mov
outs
(bad)
cmp
enter
mov
mov
add
inc
xchg
ficom
and
push
inc
jle
inc
jmp
cli
push
add
jecxz
xchg
add
xchg
sahf
int
cmp
ja
jecxz
inc
sbb
repz
mov
push
ins
jns
push
push
xchg
pop
mov
ins
in
hlt
rcr
jmp
test
mov
inc
pop
adc
call
mov
mov
imul
dec
mov
and
cmps
jae
rcr
inc
aad
(bad)
outs
or
cmp
sbb
inc
xchg
mov
inc
clc
push
mov
mov
cwde
fstp
sbb
inc
pop
add
push
pop
xchg
pusha
aad
fsubr
mov
or
ret
fwait
(bad)
lock
add
(bad)
cmps
dec
and
pop
mov
aam
call
in
pusha
jmp
xchg
sub
ror
mov
push
fist
pop
cmp
leave
pushf
nop
jmp
cmp
ficom
ret
cmps
jle
pop
dec
jae
mov
jno
cmp
add
push
and
out
or
xor
cmp
xchg
and
(bad)
iret
inc
sti
pop
sbb
dec
fwait
jo
mov
aad
(bad)
movhlps
pop
dec
sbb
sbb
stc
std
pop
xchg
dec
and
mov
or
adc
pop
mov
adc
out
xchg
sub
mov
push
in
jmp
inc
sub
cmc
push
scas
inc
rcl
popa
inc
push
ficomp
arpl
cmp
cmp
inc
cld
cmps
test
mov
dec
ret
ficomp
in
retf
push
xchg
test
mov
stos
cmp
inc
sub
lock
push
iret
loopne
scas
dec
fwait
adc
dec
sub
js
sub
sub
jg
imul
jbe
pop
jmp
fimul
test
adc
xor
mov
bound
xor
pop
aaa
fistp
imul
int3
add
addr16
mov
mov
pop
test
adc
xchg
and
call
retf
push
out
dec
(bad)
mov
jmp
xchg
push
inc
ret
xchg
push
jmp
and
lahf
xor
xchg
jns
addr16
and
retf
pop
xchg
push
sti
or
aas
retf
mov
fbld
push
test
das
dec
jge
push
mov
ins
sbb
retf
ror
dec
push
fs
jge
frstor
clc
mov
or
(bad)
mov
scas
inc
scas
in
data16
xchg
pop
out
(bad)
pushf
ds
int3
les
jb
xchg
mov
mov
leave
pop
shl
lds
nop
xor
jmp
iret
ficomp
inc
stos
jbe
jmp
cmp
mov
mov
sub
scas
(bad)
adc
pop
dec
and
fwait
call
pop
sub
sbb
cdq
leave
fist
adc
sahf
and
fcmovbe
cmp
pusha
clc
cmp
dec
mov
outs
je
mov
pop
jmp
inc
push
xchg
pop
sbb
adc
mov
popf
add
mov
dec
call
aam
jecxz
fcmovu
retf
(bad)
jecxz
es
cmps
xchg
push
neg
mov
dec
and
mov
inc
pop
out
lods
arpl
cmp
int
fs
nop
jp
cmp
push
jae
cmp
lds
xchg
pop
sub
ret
clc
mov
clc
fdiv
sub
xor
xchg
inc
aad
dec
fistp
mov
fst
push
sub
jmp
inc
cmps
mov
adc
jmp
test
mov
loope
push
imul
retf
jno
jbe
cmp
push
xchg
mov
mul
in
pop
pop
jmp
dec
aaa
cmc
sub
cld
adc
test
int3
rcl
call
xor
xor
jmp
and
fsubr
in
inc
mov
xchg
push
jo
mov
inc
mov
ins
stos
cmp
retf
or
xlat
jg
repz
fyl2xp1
in
mov
pop
test
jp
movs
dec
pop
rol
in
push
mov
fisubr
inc
jns
push
dec
mov
cmp
inc
jp
adc
sub
pop
inc
(bad)
jl
push
push
sbb
loop
mov
push
test
mov
mov
fld
mov
fucom
xor
call
jo
jecxz
scas
sub
fcomp
and
adc
pop
jns
and
mov
fidiv
scas
sbb
aam
lds
mov
and
vorps
retf
repz
stc
cmps
div
cmps
dec
fld
jo
inc
fsubr
scas
xchg
mov
and
in
xchg
push
mov
outs
stos
push
int
mov
mov
das
cs
sub
add
jp
pop
in
sub
out
and
test
push
pop
sahf
mov
sar
push
xlat
mov
jle
pop
sub
mov
movs
mov
lea
cmp
inc
dec
push
adc
outs
dec
xchg
arpl
mov
outs
gs
and
dec
push
es
test
fld
scas
xchg
test
lods
cwde
out
fild
ins
sub
stos
std
jno
inc
shr
inc
mov
or
shr
nop
nop
xchg
stc
std
or
retf
call
push
fsub
jae
int
dec
nop
cmp
int3
js
das
or
aam
test
dec
mov
jne
stos
or
dec
sbb
iretw
push
pop
cli
cmp
inc
sub
mov
dec
call
fcom
pmaddwd
mov
pop
mov
mov
movs
out
push
add
test
ja
out
bound
add
ds
and
sbb
(bad)
xor
fcmovb
imul
inc
repz
fldenv
dec
arpl
lds
push
or
fcmovb
js
inc
cmp
lds
jno
icebp
popa
nop
loopne
sbb
rol
push
sbb
in
movs
into
and
push
or
ja
test
les
cmc
outs
mov
jp
aam
outs
or
or
imul
inc
mov
mov
dec
or
sbb
fcmovu
pop
or
imul
mov
dec
jno
dec
lds
fisttp
inc
stc
(bad)
sbb
or
mov
xchg
cwde
scas
out
jo
lods
mov
add
push
xor
ja
fucomi
mov
cmp
inc
test
into
push
dec
xor
mov
imul
jg
mov
mov
add
nop
mov
stos
ror
xor
idiv
pop
and
pop
pop
movs
std
pop
inc
mov
jbe
add
add
push
cmp
mov
cmps
test
pop
mov
and
sub
shl
int3
mov
dec
repz
in
mov
and
lock
rcr
das
mov
pop
pop
cmps
mov
test
xor
push
addr16
aam
lods
sahf
sbb
sahf
sub
into
push
imul
jge
jge
dec
dec
push
lock
sub
lea
and
inc
add
dec
add
mov
xchg
repnz
jb
xor
imul
dec
add
or
push
jbe
(bad)
retf
outs
cli
mov
or
lods
test
mov
cwde
ss
lods
mov
inc
fnstcw
pop
in
and
jmp
loopne
ins
push
jnp
cmps
ror
jmp
push
mov
shl
ret
fidivr
mov
iret
sbb
ret
test
cmp
or
fist
fisubr
cmp
jl
imul
pop
es
retf
lea
mov
loop
xor
mov
js
loop
pushf
and
mov
div
push
(bad)
cmp
fimul
test
fist
data16
shr
cld
ficom
dec
add
into
daa
xchg
or
jmp
mov
sbb
jno
test
arpl
pop
cdq
jle
cvtps2pd
jp
(bad)
repz
cdq
mov
int
mov
push
xchg
movs
dec
cmp
push
and
movs
push
lods
ins
iret
cwde
jl
cmp
fwait
out
push
sub
inc
stos
jae
cmp
fst
in
test
push
jnp
ror
or
(bad)
pop
(bad)
and
and
popa
popf
mov
and
jno
jecxz
fidiv
xchg
cmp
jp
test
test
sub
or
or
aaa
sub
mov
inc
pop
fwait
sub
inc
fimul
xlat
nop
and
shl
jne
pop
inc
gs
add
sbb
dec
jle
jg
jns
cs
arpl
jp
push
cmp
fild
movs
xor
adc
and
minps
loopne
dec
add
in
pusha
add
mov
sub
adc
jno
shl
mov
and
sbb
test
xor
loopne
pop
out
lock
sbb
and
or
add
xchg
xchg
cmps
repz
js
data16
inc
loop
pop
(bad)
cmp
xor
mov
popf
fxch
sub
mov
inc
lahf
sbb
fwait
fwait
dec
xchg
adc
dec
fcomp
mov
xchg
shl
icebp
cmp
movs
les
add
mov
jmp
cmps
ins
xchg
pop
push
repnz
lea
dec
inc
xchg
pusha
xchg
lods
test
sahf
cs
(bad)
sti
pop
jle
in
or
loope
mov
pop
or
pop
sahf
stos
add
sbb
dec
inc
and
dec
int
mov
mov
adc
cmp
movs
mov
push
add
movs
inc
movs
mov
out
xchg
sub
push
addr16
popf
rol
push
popa
push
mov
pop
movs
ret
jmp
in
in
shr
push
dec
xchg
ret
fisubr
imul
loope
outs
dec
sub
xor
xchg
clc
adc
inc
add
fild
push
sbb
out
lds
std
xchg
xor
fsub
inc
jnp
dec
es
xchg
lock
(bad)
int3
mov
pushf
push
push
out
cmp
jo
xchg
mov
daa
push
pop
push
xor
dec
popf
imul
adc
jmp
dec
mov
out
les
aam
pop
xchg
sbb
pop
adc
push
outs
loope
adc
int
aad
aam
lahf
jle
push
ss
push
adc
lss
rcl
cmp
imul
dec
jle
xchg
add
out
push
fst
dec
out
sub
cmps
inc
and
mov
loopne
jmp
call
ficom
and
shl
inc
cmp
mov
(bad)
outs
ins
imul
sti
in
push
pop
out
pop
je
sti
and
mov
mov
or
xor
mov
call
aas
add
jl
push
push
ror
and
mov
loop
lahf
rol
test
add
test
pop
aad
xchg
(bad)
into
ja
xchg
push
push
jg
jge
add
push
adc
lods
jbe
inc
push
sbb
mov
pop
ror
pop
ins
test
and
sahf
or
sbb
cwde
push
test
aaa
(bad)
enter
mov
and
das
pushf
pop
cld
fisubr
inc
mov
das
pop
bound
xor
and
jmp
shr
or
lea
sahf
imul
clc
pop
enter
addr16
les
ja
test
cmp
push
fld
arpl
push
ret
popf
ror
mov
pop
sbb
sbb
in
cmp
adc
les
les
xor
push
dec
jbe
neg
(bad)
inc
jb
push
sbb
popa
wbinvd
ret
pop
jg
aas
jno
es
or
push
or
(bad)
cmp
dec
jb
aaa
mov
sar
or
mov
bswap
and
inc
mov
cmps
or
mov
and
push
push
pushf
pushf
inc
out
das
pushf
repz
sar
int3
lods
add
cmps
push
mov
bound
add
and
jg
test
call
mov
adc
pop
inc
jle
mov
mov
sbb
mov
jge
lock
pop
lods
mov
(bad)
aam
cmps
sbb
xchg
scas
pop
out
sub
lds
or
clc
xchg
push
jo
arpl
das
xchg
and
popa
mov
mov
test
xchg
sbb
xor
rcr
and
iret
sbb
stos
pop
jns
mov
dec
ror
imul
aam
mov
scas
push
repz
pop
pushf
mov
into
add
or
ss
cmps
cli
pop
push
dec
pusha
jmp
cmc
pop
dec
dec
jmp
mov
scas
push
frstor
dec
out
test
xor
mov
popa
cdq
sub
test
mov
movs
mov
(bad)
js
jnp
lea
pop
rcl
mov
lock
test
lods
or
jb
jg
fdiv
dec
les
pushf
cmp
and
imul
or
xchg
xor
cmps
pop
arpl
rcl
jmp
in
inc
hlt
dec
or
out
push
test
ds
mov
fst
in
aam
int
xchg
pop
mov
pusha
mov
in
mov
pushf
in
mov
outs
jge
movs
mov
inc
leave
push
ds
mov
ins
sub
jae
jb
mov
push
fcmovnb
lds
dec
cmc
das
ds
pop
jb
sbb
mov
push
fist
push
jp
cmp
inc
inc
xlat
jns
(bad)
test
sub
shl
fcom
stos
stos
sbb
icebp
mov
add
xor
bound
push
mov
cld
cld
ds
(bad)
mov
inc
xor
mov
dec
adc
jnp
aad
dec
add
cmp
retf
in
pop
cwde
nop
pop
push
mov
push
cmps
jecxz
cmp
jl
cmc
scas
out
les
adc
test
xchg
es
jno
fcom
sbb
jl
mov
inc
or
daa
loop
xchg
jno
or
bound
inc
cdq
add
jbe
push
stc
pop
inc
pop
jmp
cmp
int3
and
or
pop
(bad)
int
loope
cmps
out
mov
cmp
or
push
cmps
dec
mov
in
rcl
jle
inc
ret
test
es
sub
ret
repnz
je
jb
adc
ds
loope
mov
sbb
or
fs
sbb
ret
shr
push
data16
(bad)
(bad)
cld
jns
sub
push
inc
jns
clc
sti
pop
fbstp
xchg
fs
outs
jnp
fs
and
cmp
mov
adc
mov
inc
cmp
rcr
lea
xchg
inc
xchg
in
aaa
loop
das
ret
inc
xor
(bad)
xor
mov
repz
mov
data16
ds
push
sub
mov
rol
jp
jmp
adc
sub
push
pop
std
(bad)
imul
dec
test
retf
scas
dec
(bad)
xor
mov
push
ret
stc
mov
dec
inc
sbb
jbe
jne
push
xchg
fwait
mov
mov
rcr
push
add
(bad)
cmc
mov
js
mul
(bad)
movs
mov
cmp
movs
daa
clc
or
dec
jns
inc
or
jl
cdq
test
int3
mov
xchg
dec
add
outs
movs
inc
xchg
jle
jge
pusha
loop
das
sbb
retf
cmps
inc
test
ins
cmp
lods
push
adc
push
mov
iret
fidiv
cmp
sbb
js
fisttp
sub
rol
call
jmp
leave
stos
push
js
retf
mov
adc
pop
mov
stos
bound
cmp
leave
sub
jp
xchg
add
lods
js
daa
ret
sbb
ficomp
pandn
iret
jno
inc
loope
outs
mov
mov
or
push
sbb
mov
mov
(bad)
jne
aaa
mov
jg
mov
or
jmp
and
mov
loop
add
in
call
(bad)
pop
shl
and
mov
imul
mov
xchg
adc
frstor
std
pop
mov
fs
idiv
cmp
push
push
xchg
outs
outs
(bad)
xchg
mov
jle
pushf
shl
or
arpl
xchg
mov
or
ror
jle
fstp
sub
xor
sub
push
and
movs
ret
lahf
in
rol
es
mov
xor
sub
mov
neg
jmp
test
pop
call
dec
and
ds
pushf
mov
sti
int3
test
add
mov
popf
outs
lahf
sub
pop
gs
pop
push
addr16
call
push
xchg
int3
neg
pushf
pop
cs
mov
ds
jne
cmp
sub
xchg
jp
xchg
outs
cmps
inc
jb
jb
inc
xchg
jae
jbe
or
cmp
and
dec
into
jno
cmp
sbb
cmp
call
pop
repnz
add
lea
cli
add
cmp
ss
cdq
and
dec
lea
sub
cmp
jb
inc
neg
jmp
inc
jne
pop
mov
sbb
out
test
adc
inc
pop
push
cwde
cmp
loop
pop
jp
xchg
pop
in
rcl
xor
sbb
ret
inc
pop
sub
imul
jecxz
pop
addr16
sub
adc
pop
xchg
dec
sbb
fwait
aaa
jno
cmp
mov
cdq
sti
xchg
pop
cmps
dec
(bad)
pop
bound
cmp
(bad)
dec
sar
xor
push
add
lds
aas
xor
jnp
in
cmp
je
cmc
jmp
pop
js
call
sar
push
sbb
add
icebp
and
cmc
jne
loope
cwde
(bad)
aas
aas
sbb
inc
fld
and
leave
test
stos
or
pushf
(bad)
pusha
mov
out
inc
mov
push
movs
dec
call
push
inc
stc
cli
sbb
mov
add
fwait
sub
push
mov
test
add
stc
aaa
dec
lahf
gs
fsubr
(bad)
and
aam
jp
xlat
inc
inc
fld
nop
sub
and
push
push
mov
push
jbe
fild
repz
gs
or
leave
cmps
sub
mov
sub
add
int
out
push
pop
icebp
sbb
outs
ss
mov
(bad)
jb
jne
addr16
xchg
xor
xor
fwait
jae
sar
sbb
fnstcw
sbb
inc
adc
jne
dec
test
arpl
and
jno
mov
ins
std
xchg
(bad)
sar
and
fild
and
fbld
out
(bad)
fcom
dec
out
ret
mov
fs
push
xlat
test
clc
in
push
push
sar
dec
neg
aas
mov
fisttp
sbb
jmp
mov
or
cwde
pop
jmp
test
imul
loope
inc
stos
scas
mov
daa
js
ins
jl
xor
and
ret
adc
cli
cmp
and
mov
or
mov
or
xlat
mov
outs
sub
adc
fild
adc
mov
arpl
cmp
xchg
in
push
or
adc
aaa
imul
cmp
out
std
mov
daa
fwait
(bad)
ds
(bad)
mov
mov
stc
mov
jge
cdq
aad
cmps
das
sbb
dec
mov
pop
mov
lods
xchg
rcr
std
aaa
cmp
mov
push
daa
lods
ficom
mov
leave
mov
cmp
dec
ins
xor
test
sub
mov
movs
mov
jecxz
dec
inc
stc
jmp
pop
aaa
or
or
xchg
inc
in
ds
mov
out
xor
mov
cmp
fstp
ror
push
and
sbb
and
cmc
mov
stos
mov
mov
or
and
pop
push
xor
dec
dec
sub
popf
jge
pop
test
push
cdq
pusha
push
push
and
in
into
inc
and
add
mov
lock
in
add
mov
arpl
xchg
data16
jne
(bad)
or
dec
push
adc
sub
mov
xor
ret
fdivr
ins
sahf
clc
cmp
push
fld
pusha
cmp
adc
(bad)
into
add
mov
sbb
lods
push
push
mov
sub
dec
(bad)
jns
and
add
shl
jne
mov
pop
sbb
and
jge
enter
jmp
aaa
stos
test
xor
jle
sbb
(bad)
and
pop
mov
lds
retf
sub
jmp
out
out
mov
mov
inc
rcr
xlat
fs
push
inc
push
jmp
nop
add
jae
daa
outs
mov
fidiv
fmul
inc
imul
push
pop
in
stc
jle
rcr
ss
inc
gs
sbb
mov
mul
out
(bad)
aaa
push
mov
push
jle
(bad)
es
push
mov
jmp
test
fcmovu
and
mov
fs
inc
lods
int3
xor
out
push
call
int
repz
push
jmp
(bad)
sar
sbb
mov
jle
mov
jmp
in
icebp
jle
jmp
std
imul
xchg
sub
retf
xor
sbb
icebp
loopne
push
test
jmp
mov
mov
sub
jecxz
mov
dec
popaw
imul
ds
push
xchg
das
pop
mov
rol
mov
adc
popa
data16
out
in
les
jg
into
rol
dec
ja
iret
sub
cdq
std
sub
ja
scas
mov
sub
add
xor
lods
mov
mov
clc
fldcw
mov
(bad)
imul
mov
arpl
ins
fcom
mov
out
daa
test
test
sbb
cmps
mov
add
fcom
inc
or
push
aas
imul
add
push
out
jmp
into
cs
cmp
mov
cs
js
and
out
into
ins
shl
dec
pop
icebp
push
data16
dec
jno
enter
(bad)
and
sbb
shl
jmp
and
push
mov
jg
xchg
nop
and
sbb
sbb
js
mov
lods
cmp
sub
cwde
rcl
mul
jb
mov
push
jg
(bad)
mov
or
sahf
jle
sub
shr
jmp
je
dec
mov
out
pop
and
frndint
xor
cs
cld
sub
movs
push
xor
mov
call
mov
push
jg
xor
pop
push
lods
mov
inc
(bad)
cs
and
out
ss
rcr
sub
cmp
mov
shl
push
mov
jg
cmp
out
les
je
inc
retf
call
push
jg
leave
fiadd
inc
jge
gs
out
sbb
outs
pop
mov
sar
sbb
mov
push
push
and
enter
jle
xor
test
fst
retf
in
mov
stos
aas
lds
icebp
imul
scas
pop
inc
mov
loope
int
idiv
mov
jns
inc
loop
icebp
push
cs
inc
fld
dec
stos
stos
push
mov
inc
out
add
sub
and
cmp
into
mov
fs
or
mov
xlat
imul
repz
cli
sub
cmp
fisubr
movs
jb
dec
out
pop
js
cwde
jg
xor
add
ret
jmpw
ror
pop
pusha
and
mov
dec
fcmovu
mov
scas
push
mov
aas
xor
sub
outs
gs
shl
xchg
add
in
sbb
jmp
pop
cmp
in
xchg
mov
jmp
sti
sub
mov
add
test
clc
sbb
leave
add
pusha
ds
ds
jno
push
ret
sub
jp
rol
add
outs
or
push
mov
adc
mov
mov
add
test
xchg
in
mov
jbe
(bad)
mov
cwde
mov
pop
mov
cmp
xchg
jl
sbb
mov
icebp
int
popa
ins
outs
js
jl
mov
icebp
pop
popf
dec
data16
xchg
retf
dec
stos
and
mov
adc
mov
test
push
inc
enter
inc
mov
and
es
xchg
mov
cmc
call
dec
cmps
or
sub
add
cmp
inc
jge
or
pop
cdq
add
mov
dec
clc
sahf
xchg
mov
mov
test
out
out
sbb
cmp
push
xor
je
leave
mov
jmp
stc
inc
pop
mov
adc
xor
mov
fs
cs
cmp
inc
fld
pop
lock
rcl
xchg
lock
bound
mov
cli
ja
inc
or
pop
jmp
call
fidiv
mov
bound
dec
jb
aad
push
xchg
loopne
mov
sub
inc
pop
cmps
out
mov
cmp
ret
xchg
push
inc
daa
push
add
mov
mov
outs
ins
push
gs
es
mov
jmp
jl
leave
imul
dec
dec
adc
jp
test
inc
in
movs
inc
add
in
fsubp
cmp
push
pop
mov
in
xor
and
dec
mov
cmp
xor
cmps
dec
dec
sub
sbb
cmps
fist
aad
add
inc
and
int3
in
cmps
fnsave
iret
jg
xor
int
(bad)
daa
or
dec
jle
aaa
pusha
inc
daa
jne
inc
daa
pop
stc
out
xor
sub
mov
ret
xor
sbb
dec
xor
inc
ss
cmps
xlat
jl
cmps
cli
and
jl
inc
ss
jle
cmp
inc
pop
loop
inc
dec
enter
in
inc
data16
ret
aas
jg
jns
mov
xchg
pop
push
leave
sbb
jle
and
cmp
push
push
sbb
fsub
je
xor
das
sbb
call
mov
cmp
mov
pop
pop
xchg
xor
pop
jmp
add
jle
jmp
call
jmp
data16
jbe
mov
stos
das
inc
movs
mov
push
inc
cmp
inc
push
sub
jecxz
cwde
ficomp
gs
jp
leave
mov
ja
xor
int
mov
stc
popf
imul
retf
mov
push
outs
mov
sti
sbb
dec
xchg
imul
jmp
fs
scas
mov
adc
push
mov
data16
mov
adc
inc
mov
sti
fld
ret
dec
xchg
push
mov
in
test
fld
aaa
mov
fsub
mov
xor
add
aaa
call
imul
xor
(bad)
scas
inc
call
in
jo
xchg
imul
and
dec
movs
add
sahf
push
pop
aaa
test
js
or
mov
inc
(bad)
jmp
mov
jmp
cs
xchg
(bad)
retf
fnstcw
mov
sti
stc
xor
and
bnd
cmc
aad
lea
mov
jns
xor
mov
add
cmp
mov
cli
dec
and
cmp
ins
in
gs
icebp
add
stos
push
(bad)
aas
inc
icebp
jns
xor
fcomp
dec
cli
inc
dec
mov
jmp
sbb
push
mov
push
xor
shl
mov
mov
add
lea
mov
cmp
in
and
sub
lock
dec
mov
inc
dec
stos
fst
cs
cs
add
into
lods
and
leave
inc
mov
in
xor
pop
inc
nop
cli
inc
cmp
jmp
pop
es
sbb
inc
(bad)
xor
ja
inc
shl
and
mov
aam
mov
mov
adc
mov
(bad)
idiv
rol
xchg
push
into
aaa
nop
(bad)
std
ins
xchg
imul
adc
sbb
cmps
sbb
push
mov
adc
frstor
jbe
cwde
repnz
adc
pop
bound
arpl
not
inc
cmp
adc
push
pop
aaa
and
pop
ins
xor
icebp
dec
jno
cmc
push
mov
dec
mov
push
test
jmp
mov
xchg
add
push
fistp
jb
lea
test
sahf
pop
fidivr
mov
lods
cmp
imul
jo
jmp
xchg
pop
sar
int3
jle
aad
out
cmps
sub
pop
mov
inc
pop
cmp
add
mov
push
pop
jne
aas
pusha
and
mov
cli
js
dec
aad
pop
push
cmps
xchg
inc
and
mov
sub
enter
fidivr
in
pop
movs
stos
sub
dec
cs
cld
scas
and
dec
dec
lods
adc
scas
clc
dec
jle
jp
inc
rcr
mov
pop
and
dec
fbld
les
mov
inc
push
dec
fmul
movs
retf
outs
icebp
or
mov
mov
retf
sub
inc
sub
push
aas
push
cs
ds
clc
sub
dec
dec
jbe
sbb
hlt
popa
or
push
mov
fnstcw
(bad)
popf
pushf
cwde
jbe
pop
adc
aam
push
cld
mov
push
inc
and
adc
jmp
test
into
mov
cmp
mov
push
cmp
xchg
jbe
and
pop
icebp
adc
fbld
sbb
(bad)
repz
and
cmp
jge
push
daa
jbe
push
adc
dec
fimul
mov
jmp
fisubr
movs
dec
fucomip
sbb
test
jl
outs
std
inc
add
push
arpl
xor
pop
mov
mov
sar
mov
jmp
mov
push
push
mov
movs
sub
call
inc
retf
dec
cmp
cli
and
dec
xlat
stos
cwde
sti
cmp
xor
jns
mov
fsubrp
fisub
ficom
in
xchg
inc
mov
sbb
inc
push
push
jno
es
inc
pop
ds
jle
frstor
scas
cwde
call
or
aam
mov
and
inc
push
imul
outs
(bad)
jle
mov
into
jg
add
pop
dec
cmc
ins
in
int3
int
pop
mov
rol
ss
call
push
mov
clc
mov
ror
shl
inc
adc
movs
cwde
inc
pop
xchg
jmp
fs
dec
cli
jno
inc
lds
mov
mov
fwait
leave
inc
mov
jns
pop
mov
add
cmp
or
mov
and
int3
es
test
xor
sub
cmps
lahf
adc
mov
rol
and
aam
std
jo
or
popa
adc
sbb
std
inc
mov
inc
inc
(bad)
repz
and
xor
popf
nop
test
sub
daa
jmp
and
aad
bound
dec
clc
jae
inc
(bad)
data16
xlat
mov
test
inc
mov
ja
pop
mov
add
inc
ss
cmc
pop
inc
(bad)
js
and
into
and
xchg
sub
loop
nop
xchg
inc
pop
xchg
fld
and
(bad)
dec
jmp
or
addr16
ror
fisubr
inc
mov
inc
ds
mov
and
ss
mov
ins
xor
jo
outs
js
pop
jbe
pop
(bad)
in
shr
inc
inc
inc
dec
jnp
or
xlat
ins
push
cs
sub
jns
jmp
mov
push
jmp
inc
cs
inc
lahf
jb
push
cs
xor
dec
mov
(bad)
xchg
je
ins
in
call
sahf
mov
mov
dec
and
or
adc
js
push
and
fiadd
mov
xchg
cdq
cmp
pusha
movs
test
in
(bad)
pop
in
cli
xor
popf
xchg
mov
inc
popa
inc
shl
mov
shl
inc
loop
pusha
mov
je
mov
(bad)
xchg
test
aam
sbb
push
fs
into
add
pushf
mov
sbb
pop
rol
aaa
pop
(bad)
gs
dec
push
jno
dec
daa
bound
pop
clc
adc
push
pop
call
imul
pop
push
adc
ins
dec
ins
push
imul
fs
fidiv
outs
mov
aas
outs
shl
dec
mov
outs
adc
mov
jnp
loopne
hlt
push
jmp
clc
and
sub
dec
pop
xchg
add
jg
pop
dec
sbb
push
inc
jnp
ficom
push
pop
push
sahf
mov
adc
mov
adc
sbb
and
aaa
add
inc
aaa
xor
sbb
mov
push
daa
retf
bnd
sbb
daa
fidiv
dec
outs
outs
inc
sbb
adc
das
fisub
push
and
mov
cmp
dec
(bad)
call
ja
mov
push
and
or
addr16
test
pop
cmps
cmp
dec
push
xchg
out
sub
xchg
pop
aam
mov
jno
mov
push
sub
pop
pop
aaa
pop
adc
ja
nop
out
jno
xchg
dec
or
call
push
jmp
aaa
ins
icebp
mov
lds
retf
shl
ret
(bad)
mov
out
sahf
sub
pushf
mov
stc
neg
mov
lock
inc
or
mov
and
xchg
ret
dec
push
jne
xchg
data16
xchg
pop
mov
inc
mov
mov
jmp
es
mov
dec
sub
test
jg
push
sub
mov
mov
inc
rcl
ins
xlat
xor
loopne
mov
and
add
outs
pop
or
inc
sbb
jno
es
scas
(bad)
call
jle
mov
dec
xchg
sbb
sbb
push
sar
or
jg
dec
jp
push
jmp
or
push
gs
loop
mov
ja
pusha
mov
into
cs
stc
xor
add
mov
stc
cdq
mov
lods
mov
pop
inc
aaa
je
adc
mov
movs
cmps
pop
call
mov
imul
imul
sub
stc
icebp
jmp
sub
jg
dec
mov
fisttp
push
mov
mov
push
addr16
jp
je
lds
aaa
sbb
pop
ins
in
jge
or
fs
and
ja
inc
sbb
or
sahf
sub
mov
cmc
dec
gs
mov
clc
mov
mov
dec
(bad)
bound
pusha
push
imul
into
add
jbe
jo
shr
sub
dec
or
icebp
mov
(bad)
popf
ins
cmps
push
inc
sbb
inc
and
inc
cmp
mov
scas
mov
ins
dec
push
adc
mov
clc
jnp
ds
and
addr16
jmp
movs
xchg
pusha
or
out
cmp
inc
inc
js
cmp
stc
cmps
shr
hlt
inc
adc
maskmovq
idiv
push
fisttp
mov
cmp
outs
popa
enter
in
jno
mov
daa
and
loop
and
imul
and
ja
push
inc
je
inc
mov
add
enter
jg
dec
pop
test
adc
cmp
cmp
test
aad
push
inc
push
fcomp
test
pop
addr16
fiadd
mov
popa
lods
fs
not
ins
jge
push
xchg
test
bound
inc
call
jl
js
lods
adc
test
sub
adc
inc
sub
or
cmp
fst
jb
js
div
inc
and
mov
dec
cmp
not
scas
xchg
stc
mov
enter
popa
mov
dec
xchg
rol
das
ins
stc
mov
enter
int
repnz
adc
inc
inc
movs
mov
or
inc
in
cmp
mov
aad
push
inc
loopne
dec
ror
pop
or
inc
lods
mov
xchg
imul
cld
dec
call
hlt
test
jmp
in
fcmovnb
sub
stos
fdivr
inc
or
add
scas
mov
jns
mov
lds
push
fxch
cmp
fisub
mov
xor
jne
das
movs
sbb
cmps
and
inc
cmp
sub
jle
sub
inc
sub
or
sub
inc
xor
cdq
outs
sub
inc
xchg
outs
cmps
pop
jbe
sbb
sub
and
scas
mov
or
push
xor
outs
mov
aas
push
xchg
sbb
mov
fild
fld
mov
jmp
ror
call
ret
ror
fs
mov
mov
or
push
ss
mov
dec
adc
pop
inc
fistp
out
sbb
call
into
pop
dec
mov
aad
aas
lds
aas
idiv
pop
mov
leave
add
sbb
bound
inc
aas
and
sbb
xchg
data16
mov
add
(bad)
lea
retf
or
or
or
ins
ret
in
mov
adc
aas
or
or
cmp
jmp
xchg
cmp
jl
cmp
cmp
addr16
outs
test
jnp
in
ja
loopne
sub
jge
ins
push
jne
jp
mov
or
or
and
add
inc
out
idiv
loopne
pop
jns
mov
bound
aad
jo
lahf
es
cmp
out
sbb
cmps
test
loop
out
(bad)
addr16
push
scas
dec
lods
add
inc
xchg
push
outs
aaa
mov
ins
ins
dec
imul
mov
mov
push
(bad)
mov
jmp
lea
push
pop
push
and
int
dec
push
jb
not
sbb
xchg
fxch
sti
outs
push
jge
iret
jne
loop
stos
ins
push
sub
test
mov
jbe
bound
in
(bad)
mov
xor
pop
(bad)
aas
inc
push
les
ret
pop
push
lods
sub
in
cli
mov
sbb
mov
pop
and
add
nop
in
cli
cdq
(bad)
pusha
fcmovbe
ficom
inc
inc
stc
repnz
or
ficom
daa
scas
lds
ss
cmp
jb
mov
shl
sub
mov
cmp
mov
sar
in
dec
xor
sub
es
sbb
(bad)
mov
test
mov
test
dec
stos
mov
out
pop
ret
sbb
xchg
xor
lea
imul
rol
dec
sub
stos
jnp
test
das
(bad)
sti
ja
push
repz
mov
mov
inc
in
into
xchg
inc
inc
sahf
xchg
and
stc
jmp
loop
sub
stos
repz
lods
cmps
and
and
adc
lods
test
fst
fidivr
fisubr
jmp
sbb
mov
(bad)
(bad)
dec
mov
pop
xchg
and
(bad)
mov
mov
cmp
mov
adc
stos
push
clc
int
ins
outs
and
mov
push
fld
stos
fsubr
nop
cmp
int
dec
mov
cmp
cmps
jnp
retf
xchg
in
push
jmp
mov
xchg
aaa
sbb
jecxz
inc
(bad)
fisubr
aas
push
repnz
push
pop
hlt
(bad)
mov
jge
mov
(bad)
cmc
jae
test
mov
mov
lea
jge
repz
call
(bad)
push
and
add
dec
(bad)
test
adc
xor
call
in
sub
cmp
ret
sub
sub
xor
dec
(bad)
mov
jl
pop
(bad)
cmp
mov
add
shl
out
repz
addr16
mov
cmp
(bad)
das
cmps
mov
es
fbstp
mov
test
(bad)
fstp
pop
jp
ins
(bad)
neg
dec
(bad)
div
jmp
inc
cmps
inc
test
fld
or
pop
inc
mov
fcom
sub
mov
popa
rcr
jno
(bad)
into
ror
imul
fiadd
add
inc
inc
scas
cwde
inc
sub
and
and
pop
pop
xlat
pop
sbb
mov
inc
test
dec
add
adc
scas
xor
sbb
pop
jecxz
pop
pop
fdiv
out
enter
mov
test
push
ja
mov
lea
jo
(bad)
retf
(bad)
fcom
xlat
pusha
mov
ins
sub
je
outs
movs
mov
or
jp
xor
sahf
out
fcmovu
imul
lock
inc
mov
jp
xchg
inc
or
and
mov
ror
inc
fld
out
pop
mov
inc
(bad)
mov
test
sub
pop
(bad)
fmul
loopne
lock
pop
hlt
clc
lea
into
mov
sub
rol
adc
jg
(bad)
pop
shl
xchg
stos
jb
mov
mov
dec
sbb
jno
dec
cmps
bound
xchg
pop
fincstp
xchg
mov
mov
aad
and
pop
add
cmps
jge
in
shl
push
sbb
push
pop
lods
inc
(bad)
in
dec
jecxz
daa
pusha
ficom
dec
les
mov
(bad)
out
ins
fsub
cmp
je
sbb
or
movs
das
enter
mov
adc
push
xchg
loope
xchg
in
sub
jg
fild
mov
fdiv
(bad)
lods
jg
mov
inc
adc
mov
mov
sub
inc
ficomp
push
loop
push
test
loop
cmc
and
aam
inc
pop
das
stos
push
sub
movs
xor
add
scas
dec
pop
inc
and
rcl
inc
xchg
fsubr
outs
sbb
jecxz
(bad)
out
imul
das
mov
fmul
jnp
jmp
push
call
or
call
out
inc
push
inc
retf
stos
rcr
jnp
ins
pop
je
push
inc
(bad)
loopne
(bad)
out
sbb
inc
mov
je
jbe
mov
pop
pop
call
and
mov
test
sbb
push
xor
fdivp
jne
(bad)
add
xor
inc
mov
sbb
(bad)
cmp
(bad)
rcr
xor
ror
push
out
movs
test
fs
jb
in
and
movs
cmp
mov
xchg
ficomp
push
sub
add
cmp
pushf
rol
jmp
icebp
sbb
pop
rcl
pop
fimul
adc
lock
add
xchg
or
bound
dec
xor
stos
iret
push
sbb
nop
mov
and
enter
stos
xchg
cmp
push
ret
fisubr
xlat
ins
fist
dec
mov
xor
inc
out
pop
and
jns
push
imul
out
frstor
sbb
or
push
fwait
jnp
out
(bad)
jno
xchg
shr
push
sti
cmp
or
pop
sbb
inc
sub
jae
enter
aas
fcmovb
mov
xor
mov
cmp
outs
mov
xchg
in
sahf
test
test
je
jmp
jge
aad
ds
in
inc
xor
dec
push
dec
int
mov
and
out
movs
sub
jle
jno
inc
pop
clc
adc
shr
and
cld
jae
test
mov
or
dec
inc
aaa
leave
ss
cs
ins
test
pop
cmp
pop
imul
dec
lea
cmp
inc
push
rcl
bound
out
and
movs
leave
mov
adc
add
fcmove
push
cdq
inc
and
dec
add
outs
fucompp
lock
rcl
and
popa
into
jns
mov
mov
sti
loope
xor
fs
xchg
lea
and
pop
and
popa
xchg
or
ins
xor
add
sub
pop
out
ss
movs
rol
ins
test
adc
dec
xchg
pop
(bad)
pop
mov
jmp
daa
inc
loopne
xor
or
pop
enter
cmc
jb
cs
rcr
jnp
mov
or
sub
push
sar
in
jnp
xchg
movs
xor
jmp
push
out
rcr
fsubr
retf
mov
and
cmc
dec
ins
sub
shl
pop
mov
in
out
and
inc
pop
iret
cmp
xor
lahf
inc
add
push
inc
fucompp
les
cwde
jmp
or
xchg
lods
int
sub
gs
out
arpl
add
rcr
(bad)
ins
push
fidiv
push
or
dec
dec
dec
or
adc
sbb
sbb
adc
jl
mov
mov
lea
add
(bad)
fs
(bad)
lds
pop
add
sbb
ins
jmp
sbb
dec
dec
push
cmp
call
mov
mov
jmp
rcl
add
in
lahf
inc
mov
inc
or
cmp
sahf
(bad)
jecxz
push
bound
pop
dec
sub
push
call
cmp
and
ja
ins
adc
test
out
pushf
iret
enter
xchg
sbb
dec
js
dec
pop
pop
mov
(bad)
inc
pop
sbb
test
sahf
(bad)
adc
mov
repz
scas
out
mov
out
clc
mov
movs
xchg
call
mov
jnp
movs
pop
cld
dec
cs
(bad)
(bad)
push
xchg
nop
fnstenv
add
add
sbb
nop
pop
cmps
push
jg
popf
adc
push
adc
adc
cwde
jnp
(bad)
push
xchg
or
and
dec
xor
xor
jae
mov
cmps
sahf
test
mov
lock
mov
aas
faddp
cmp
xchg
and
ins
test
inc
xor
shr
scas
sub
pop
add
in
dec
cmp
retf
mov
dec
call
mov
out
ja
and
loopne
adc
test
out
sbb
jge
(bad)
mov
jmp
pop
les
jb
mov
pusha
mov
pop
nop
push
dec
xor
pop
imul
xor
call
push
cs
and
adc
in
adc
and
xor
mov
clc
pop
fild
or
(bad)
loopne
fsub
pusha
out
or
in
dec
sub
popa
mov
dec
dec
repnz
popf
inc
sti
stos
and
lods
icebp
(bad)
das
sub
call
loopne
push
push
fistp
push
call
int3
mov
test
adc
dec
xor
sub
movs
fwait
jecxz
push
lods
shl
cmps
jmp
mov
dec
xor
stc
daa
hlt
sub
shl
push
mov
and
int
pop
xchg
and
ror
sub
xchg
pop
not
add
aaa
push
add
adc
xor
fnstcw
out
pusha
test
and
jbe
ficomp
hlt
mov
xlat
mov
push
fild
icebp
adc
mov
sbb
xor
mov
add
cmp
ins
in
sub
movs
bsr
out
jmp
popa
ficom
push
push
movs
push
mov
jmp
dec
xchg
add
dec
push
std
push
test
inc
pop
ja
mov
shr
in
das
inc
loopne
add
mov
ss
inc
mov
add
inc
or
mov
dec
les
iret
and
inc
es
jg
dec
sub
sub
adc
ror
add
mov
sub
mov
mov
mov
inc
mov
adc
sti
test
adc
sbb
sbb
pop
fnsave
jge
shr
dec
movs
lahf
test
lock
fdiv
and
jmp
lods
sbb
ror
ds
mov
inc
movs
and
pop
push
and
aaa
sbb
stos
js
lock
shl
xchg
fidivr
adc
inc
jl
sub
push
mov
xlat
add
addr16
(bad)
mov
scas
xor
jno
fld
cmc
mov
(bad)
fisub
cmc
push
xchg
out
add
or
and
dec
and
int3
sahf
enter
sub
xor
fidiv
out
push
repz
jmp
mov
jb
call
pushf
out
loopne
dec
xor
dec
inc
imul
fdivr
gs
(bad)
(bad)
mov
popa
push
xor
or
ss
jns
arpl
ins
and
xchg
hlt
test
enter
adc
retf
fxch
pop
into
(bad)
fcomp
xor
cmp
pop
addr16
not
push
sti
sub
pop
inc
mov
mov
mov
movs
and
inc
outs
movs
push
xchg
dec
out
or
and
imul
xchg
cmc
test
daa
add
and
dec
xchg
neg
mov
and
movs
cmp
loop
sub
pop
sar
ja
fstp
xor
loop
push
stos
jl
adc
jp
(bad)
imul
xchg
pop
or
ret
and
retf
jmp
cmps
(bad)
out
push
pop
xchg
xor
jmp
fmul
xchg
and
add
mov
in
cmp
cmp
fcom
test
pop
sar
xchg
scas
mov
lea
push
and
lahf
push
out
jecxz
fisub
and
loopne
lahf
adc
arpl
pop
(bad)
pop
add
fsubr
nop
inc
add
je
inc
and
and
fucomp
lods
cmp
stos
mov
test
mov
xor
js
jns
(bad)
mov
fs
sbb
rol
xchg
and
dec
inc
call
dec
mov
pop
(bad)
xchg
leave
imul
clc
loopne
mov
(bad)
ror
xchg
out
popa
inc
inc
sub
or
mov
pusha
mov
xor
js
jp
pushf
arpl
mov
pop
and
mov
inc
add
repnz
mov
cmp
ja
mov
mov
jns
push
cwde
fld
push
dec
pop
add
push
xchg
arpl
enter
and
jle
jmp
arpl
popf
mov
inc
loope
and
fdiv
mov
fnstsw
adc
out
out
in
repnz
out
add
mov
out
fdivr
ret
fdiv
fdiv
jno
sbb
jae
daa
mov
and
add
sbb
mov
pop
fidiv
xchg
or
enter
stos
arpl
imul
fidivr
mov
adc
popa
cmps
lea
enter
aas
sahf
cmps
inc
cmps
sub
mov
pop
into
imul
test
shl
movs
jo
push
jns
push
xchg
push
mov
jb
inc
shr
(bad)
mov
push
mov
xor
int
inc
xchg
inc
ret
cwde
mov
pop
push
mov
jp
mov
or
cmc
jecxz
pop
jmp
jns
test
mov
jne
fisubr
dec
xor
std
or
sbb
cmp
popaw
and
dec
sbb
ja
cdq
cld
mov
and
(bad)
and
dec
test
arpl
push
and
mov
mov
push
loopne
clc
pop
sbb
mov
lahf
repnz
push
jp
imul
push
loope
xchg
xor
loopne
xlat
jle
gs
fidiv
cmps
hlt
push
outs
mov
inc
jae
mov
dec
or
and
out
div
inc
movs
mov
push
std
pop
je
xchg
call
jge
data16
dec
xor
iret
pop
inc
sub
mov
xlat
sub
call
test
test
xchg
add
sub
jmp
add
aam
inc
push
push
inc
mov
aas
push
xchg
fdivr
lock
inc
es
das
jg
mov
in
dec
test
jecxz
es
xchg
cdq
mov
xor
jbe
rol
push
call
and
out
jbe
test
es
stos
aam
jecxz
aam
dec
leave
loop
popa
ins
inc
cmp
scas
xchg
sub
jle
and
mov
push
stos
or
jnp
sbb
push
in
mov
jne
pop
mov
aam
std
(bad)
xlat
daa
xor
push
(bad)
jecxz
or
push
fisub
push
popa
hlt
mov
sahf
add
leave
call
sar
mov
mov
shl
xchg
and
sub
fwait
test
cmps
or
cs
bound
jp
stc
inc
sub
add
cmp
add
pop
imul
paddb
sub
pop
out
in
xchg
rcl
inc
mov
(bad)
sahf
rcr
cld
add
inc
ror
test
push
pushf
enter
dec
into
int3
mov
jl
enter
dec
push
loope
mov
shl
mov
fnstcw
pop
inc
cs
mov
js
(bad)
add
ficomp
jle
mov
inc
ret
mov
cdq
xor
(bad)
mov
push
pushf
mov
aam
push
xor
or
pop
fucomi
mov
fcomp
cmp
pop
mov
or
inc
xor
and
mov
scas
sbb
inc
xchg
mov
pop
sar
in
imul
(bad)
fdivr
push
sbb
dec
ds
dec
mov
stos
or
lock
loope
je
xor
nop
rcr
scas
pop
xchg
pop
and
add
sar
push
jle
xchg
pop
fsub
mov
sbb
popa
movs
mov
and
cli
aad
and
or
xchg
and
jecxz
call
cmp
mov
(bad)
jb
fsubr
xor
xchg
mov
sub
data16
dec
hlt
shr
fucomp
jge
pusha
inc
fmul
or
shr
mov
inc
or
and
jl
xchg
push
cmc
or
stos
mov
inc
inc
in
retf
mov
inc
stos
xchg
stos
and
nop
sub
sti
call
(bad)
pshufw
out
dec
mov
mov
xor
mov
imul
inc
or
fsubr
push
or
ret
mov
scas
pop
rol
pop
inc
stos
jle
and
xchg
jmp
jl
ds
(bad)
out
nop
push
jnp
cld
jecxz
mov
fisub
inc
jno
(bad)
in
imul
ds
int3
push
lods
scas
cmp
ja
sbb
cdq
scas
xchg
mov
test
and
in
mov
test
dec
push
push
fisubr
imul
inc
(bad)
push
inc
push
adc
mov
stos
xor
dec
or
pop
inc
out
xlat
jns
sub
imul
aad
inc
stc
mov
fisubr
add
bound
aad
pop
fs
icebp
jb
jle
in
cmp
pop
jnp
rol
mov
dec
shr
in
mov
mov
pop
cli
dec
adc
ret
cdq
sub
cmps
jo
test
jge
mov
fstp
outs
inc
mov
xor
xlat
hlt
cs
jne
mov
mov
shl
test
inc
out
ret
and
pminub
mov
xchg
outs
xchg
push
dec
inc
xchg
sbb
out
and
mov
cmp
outs
cld
ror
cdq
xchg
jno
lds
es
lods
mov
lds
inc
sub
mov
and
xchg
jne
lea
stos
adc
bnd
das
dec
push
push
sub
pop
sub
xchg
aam
mov
cdq
xor
push
mov
adc
in
cmp
aas
inc
dec
inc
test
xchg
jp
adc
xor
addr16
test
mov
std
sbb
rcr
or
fiadd
inc
jg
es
(bad)
movs
cdq
mov
test
or
(bad)
test
std
or
xchg
pushf
aas
push
dec
pop
xor
int3
fcomp
mov
ret
ficomp
sbb
sub
pop
(bad)
sub
adc
pop
rcr
iret
cmp
lea
push
push
mov
out
inc
inc
add
stc
inc
stos
cmc
test
push
dec
mov
xchg
sbb
sub
dec
or
mov
(bad)
lahf
jb
dec
xor
xor
mov
fdivr
cmp
cwde
mov
frstor
addr16
and
cli
mov
sub
mov
clc
cmp
bound
inc
ins
jg
fcomp
adc
add
shl
pop
lock
push
into
in
ficomp
jmp
xchg
and
test
fucomip
push
xor
fldcw
loopne
clc
or
repnz
fcom
mov
xor
mov
int3
push
test
daa
outs
shl
pop
xchg
pop
outs
xchg
xor
add
mov
movs
ins
xor
pop
mov
fisubr
pop
sbb
push
cmp
push
pop
das
test
das
inc
push
push
and
sub
mov
and
mov
in
adc
mov
or
sub
fiadd
into
pop
sbb
test
test
jnp
scas
dec
mov
scas
daa
adc
push
xor
jb
dec
bound
cmps
pop
ret
out
jle
call
mov
rcl
sub
mov
imul
out
leave
fidiv
ror
pushf
or
pop
push
shl
sbb
scas
jmp
add
ficomp
xchg
push
fwait
sbb
push
ror
das
adc
fild
pop
call
inc
imul
cmp
pop
xchg
je
(bad)
sbb
ret
retf
pop
cwde
inc
(bad)
out
call
call
mov
and
cdq
in
cwde
xchg
cwde
dec
pop
out
mov
cwde
ret
adc
mov
and
repnz
fsqrt
xor
fimul
retf
inc
mov
in
mov
xor
mov
loope
cmp
cli
ins
(bad)
es
push
movs
adc
pop
add
sbb
loopne
fidiv
lods
aas
sbb
cmp
mov
mov
pop
push
test
movs
std
outs
aam
icebp
frstor
je
test
test
ret
aad
jge
(bad)
mov
adc
stos
pusha
and
sbb
retf
(bad)
lock
add
cmp
and
call
inc
inc
xchg
or
push
fmul
jmp
fidiv
jns
pusha
(bad)
pushf
in
in
pop
and
fiadd
dec
mov
inc
sahf
xchg
or
ins
shl
jle
dec
dec
inc
aaa
inc
or
add
movs
(bad)
test
fistp
cmp
mov
xchg
mov
scas
push
shr
mov
das
into
int
cmp
icebp
jo
call
test
fwait
lock
pop
cmp
sbb
aam
(bad)
imul
add
push
fs
jmp
(bad)
pop
lock
mov
cld
popa
push
sbb
mov
out
inc
and
xlat
data16
and
sub
sbb
cmp
fnstcw
inc
mov
or
rcr
js
pop
lds
(bad)
ror
push
fcmovbe
test
jo
cdq
je
cwde
test
repnz
ins
mov
(bad)
lea
shl
cli
int
addr16
add
sbb
fadd
inc
or
imul
leave
ins
out
cmp
test
cmp
mov
push
and
test
jns
rol
test
xchg
lods
push
icebp
push
add
(bad)
into
sbb
and
shl
leave
push
dec
fisub
push
shl
dec
lock
pop
pop
pop
pushf
adc
shl
nop
clc
int
adc
test
shl
xchg
mov
mov
add
mov
call
loopne
mov
fild
and
xchg
call
bnd
fisub
je
sbb
jns
fisttp
adc
xchg
xchg
mov
xor
push
adc
dec
int3
iret
jo
mov
dec
fisttp
pop
and
sahf
mov
jp
jne
inc
xor
sub
xchg
and
cmp
sti
sbb
rep
sub
mov
mov
sbb
inc
rol
test
gs
jmp
shl
pusha
jge
mov
loopne
loop
lock
pop
cld
shl
call
mov
dec
push
out
aad
cmc
lods
cld
call
sbb
mov
inc
(bad)
aad
sbb
xchg
or
lahf
mov
sub
stos
mov
cs
ret
ds
push
inc
mov
leave
retf
movs
xchg
adc
stos
movs
fild
add
inc
test
data16
and
std
fiadd
xlat
cmps
adc
cmp
aam
jbe
jmp
xor
imul
lods
jp
cdq
mov
and
mov
call
in
dec
mov
out
dec
and
movs
inc
out
xor
loopne
adc
outs
ror
lea
push
enter
int3
out
and
mov
mov
in
or
push
movs
clc
jae
ds
jno
test
test
pusha
jecxz
inc
mov
xlat
push
fisubr
pop
xor
add
test
jp
inc
jne
or
xor
adc
lahf
(bad)
pop
mov
inc
push
jno
inc
test
pop
scas
fld
ja
(bad)
(bad)
mov
mov
repz
adc
xchg
xchg
cmp
inc
xchg
inc
inc
iret
inc
cmp
xchg
dec
pop
sub
pushw
das
sbb
movs
inc
test
sbb
push
lahf
sbb
jecxz
out
push
push
js
xchg
fcom
xchg
test
mov
rcr
fisubr
dec
dec
dec
inc
jbe
not
cmp
ret
int
add
jge
inc
je
aad
cmp
and
dec
inc
(bad)
cdq
les
inc
stos
push
int
cld
(bad)
in
hlt
cdq
xchg
sub
rcl
stc
push
stos
xor
pop
and
stos
xor
stos
push
and
sub
and
pop
add
and
mov
repz
sti
clc
inc
fild
jmp
mov
adc
(bad)
jo
xchg
xor
cmp
aad
sti
add
mov
jno
xor
xor
in
in
fcomp
fimul
jae
push
les
sbb
xor
dec
add
xchg
add
cmp
xor
jp
or
dec
mov
ficom
in
sub
ret
mov
out
inc
mov
call
das
inc
add
cmp
stos
jo
shl
es
and
and
rcr
fiadd
push
out
add
mov
jecxz
jne
or
sahf
test
mov
ficomp
bound
pop
pop
dec
fidivr
lds
or
jns
or
hlt
cmp
clc
popf
ja
and
out
lds
test
dec
idiv
xchg
dec
mov
jbe
sahf
pop
dec
jmp
xchg
retf
nop
aam
rcl
iret
inc
push
arpl
test
outs
cld
push
imul
sbb
test
xchg
sub
jmp
mov
lods
and
aam
arpl
int
add
jnp
mov
pop
test
xor
lods
lahf
mov
lods
inc
push
ficomp
xchg
fidiv
clc
xchg
imul
and
xor
inc
pushf
lods
dec
cs
inc
cmp
jbe
test
cmc
pop
in
outs
jmp
cdq
int
imul
ficomp
add
dec
mov
in
fsubr
stos
sbb
call
mov
test
mov
int3
arpl
jns
ins
inc
inc
or
add
loope
call
rcl
ret
out
xor
inc
cmc
int
lea
popa
push
imul
push
call
(bad)
jo
sar
xor
push
fild
ficom
and
cmps
and
mov
cli
xor
jmp
mov
ret
xchg
xor
mov
jno
lods
aam
ret
mov
data16
jo
and
push
rcr
inc
call
call
leave
(bad)
cmp
test
sar
jge
fs
sbb
gs
inc
enter
(bad)
out
arpl
mov
aam
outs
or
sbb
int3
mov
mov
add
pop
or
sub
xchg
mov
sub
and
mov
sub
jne
push
sub
imul
scas
aam
push
and
sub
push
mov
mov
mov
jo
in
cmp
mov
xchg
and
mov
adc
sbb
mov
or
rol
dec
mov
test
mov
ror
fdivr
movs
inc
add
ucomiss
mov
jmp
in
mov
addr16
inc
xchg
mov
in
add
aam
gs
mov
daa
sub
ss
inc
leave
rol
dec
lods
sub
popa
(bad)
test
stc
fcomp
mov
jp
aam
loop
mov
daa
jl
add
mov
mov
daa
and
outs
mov
shl
stos
stc
je
and
xor
pop
xor
push
aad
sbb
pop
mov
ins
xor
call
dec
mov
jns
aas
xchg
xchg
xchg
push
aaa
mov
inc
inc
cld
call
stos
cmp
mov
enter
add
stos
sbb
sub
push
mov
jb
es
cmp
or
pop
inc
mov
retf
mov
adc
loope
out
pop
inc
push
mov
and
xchg
cli
mov
push
into
shl
cmp
test
or
jmp
and
in
ds
sahf
aad
xor
mov
loope
inc
test
mov
jl
add
clc
test
sub
jnp
add
mov
fisttp
dec
test
xchg
adc
out
lods
lds
mov
icebp
pop
sbb
mov
inc
cld
push
sub
mov
or
lods
inc
outs
inc
jge
mov
test
and
sar
and
cmp
je
jno
dec
repz
sbb
inc
ins
in
xchg
cmp
dec
and
sub
cmps
out
xor
adc
xchg
test
cmps
jne
adc
and
jmp
or
and
pop
adc
je
inc
stos
cld
jmp
fcmovbe
cmp
aam
es
aad
mov
fld
mov
aam
fistp
mov
and
dec
lods
lods
data16
mov
cli
(bad)
dec
lahf
fs
cmp
dec
(bad)
dec
mov
arpl
shr
and
aad
inc
jmp
xchg
movs
(bad)
xor
push
sub
sbb
xchg
fiadd
test
ja
xor
mov
dec
sbb
jge
sar
mov
push
and
inc
add
cmp
inc
mov
jle
outs
and
or
sub
shl
int3
xor
mov
lea
fld
mov
pop
movs
sub
neg
dec
xchg
xor
sub
fld
xchg
push
in
inc
in
in
jae
popa
jecxz
inc
fist
xor
mov
inc
repnz
jbe
int
loope
imul
loop
inc
mov
inc
lahf
stos
jmp
hlt
faddp
mov
jl
leave
fs
jecxz
ins
scas
jne
into
fidiv
cld
dec
cmp
mov
aas
stos
imul
pop
push
pop
inc
aaa
std
xor
pop
xchg
call
rol
cmp
pop
xor
cmp
add
or
and
cmp
push
mov
jns
inc
pop
mov
and
fisubr
xchg
mov
jno
pop
pop
xchg
ja
arpl
and
and
mov
push
cmp
pop
jle
leave
xor
ss
cmps
cli
mov
or
xor
jno
sti
sub
inc
pop
push
lahf
pusha
sub
xor
sahf
mov
push
sbb
push
cmp
cmp
cmp
xor
xlat
rcr
and
(bad)
jb
jge
(bad)
and
push
push
jnp
ror
dec
test
movs
push
mov
mov
and
sub
pop
mov
pusha
fimul
cmc
pop
add
imul
and
push
and
sub
pop
jg
and
fsubr
inc
outs
out
xchg
inc
mov
pop
cwde
pop
int3
rcl
retf
fs
jae
adc
inc
loop
push
inc
cdq
les
inc
add
inc
movs
inc
sbb
cmc
xchg
sub
push
sbb
mov
and
test
add
ret
jb
stos
pop
push
adc
mov
cmp
push
shr
cmp
leave
push
mov
in
sbb
movs
ror
cli
lea
ins
fmul
sub
test
repnz
stos
aad
mov
lods
mov
(bad)
push
adc
xchg
stos
sub
inc
fs
inc
push
lahf
aad
sub
jge
or
retf
dec
and
dec
rcl
mov
mov
outs
mov
imul
xchg
xor
leave
cs
loope
call
into
sbb
ficom
test
cs
push
dec
fcomp
test
pop
arpl
add
jo
xchg
pop
(bad)
mov
daa
push
icebp
mov
mov
push
xchg
push
pop
jl
jecxz
xor
jbe
ja
xchg
mov
jmp
inc
pop
cli
jns
fs
sbb
dec
je
and
xor
(bad)
fnstcw
mov
cmp
test
pop
not
dec
xchg
in
lock
pop
ss
inc
dec
inc
push
sub
dec
mov
inc
pop
pop
lock
mov
push
sbb
out
jge
or
jmp
sbb
inc
fisubr
mov
stc
dec
ds
mul
out
jl
outs
or
jb
cmps
add
push
inc
fisubr
mov
jmp
leave
or
pop
mov
imul
in
or
fisttp
mov
inc
pop
(bad)
adc
sub
add
stos
fistp
das
pop
call
inc
dec
mov
sti
fucomi
es
lods
cs
(bad)
cmps
movs
aad
xor
mov
mov
pusha
out
mov
inc
dec
(bad)
(bad)
push
ss
mov
rcl
dec
cmp
mov
fdiv
movs
loop
aad
mov
fnstcw
movs
stos
cld
stc
push
mov
jl
aad
fnsave
pop
jecxz
inc
mov
leave
stc
dec
out
jp
inc
push
inc
inc
inc
or
inc
inc
bndstx
inc
add
cmc
pop
push
inc
in
scas
rcr
sbb
mov
fld
xlat
inc
cs
fsub
dec
xlat
dec
aad
int3
shr
leave
inc
push
mov
adc
cmp
jbe
rol
int
dec
cmps
(bad)
js
mov
cld
inc
(bad)
mov
mov
idiv
popf
shr
cmp
fsub
or
scas
pop
in
cdq
gs
pop
movs
jns
pop
or
jle
and
mov
lods
mov
sub
cmp
and
mov
loope
mov
dec
jp
das
xor
call
inc
loope
repnz
xchg
iret
add
fwait
sbb
mov
mov
mov
out
mov
inc
aad
pop
mov
ret
jl
xchg
test
pop
data16
retf
and
aad
mov
icebp
sbb
les
mov
ss
es
push
inc
lock
fisttp
xor
push
jne
mov
dec
push
mov
pop
xor
mov
mov
lods
dec
or
jg
pop
sbb
aad
sub
cmp
mov
mov
fbld
ror
shr
test
xchg
mov
or
repnz
sub
jns
lods
sbb
sahf
stc
cmp
jl
mov
jno
push
or
in
mov
fldcw
je
push
sub
jle
call
and
adc
xchg
fisttp
and
outs
dec
dec
push
xchg
sub
fild
in
inc
push
and
xor
sahf
cmp
jg
cdq
push
in
imul
push
push
shl
sbb
out
pushf
repnz
inc
test
daa
popa
pop
loope
fst
sub
stos
mov
rcl
and
das
cmps
cmp
sub
fld
xor
jp
outs
das
cmp
mov
push
pop
shr
scas
fsubr
xchg
dec
in
mov
mov
mov
daa
mov
imul
jns
cmp
retf
sbb
mov
icebp
leave
inc
out
cdq
dec
shl
sar
inc
hlt
mov
retf
cmps
and
pop
sbb
adc
sbb
fwait
loop
mov
ins
cwde
jne
(bad)
fldenv
and
xor
adc
mov
xchg
lock
cmp
inc
sub
shl
mov
jg
pop
call
ins
lods
xchg
dec
test
ret
test
xchg
add
inc
jecxz
adc
jge
stos
pop
and
push
pop
add
stos
fxch
jne
jnp
jbe
fimul
mov
gs
sbb
mov
dec
jmp
mov
sub
inc
or
sub
cmp
inc
lock
lods
data16
fnsave
adc
push
sar
sub
clc
test
and
aaa
mov
adc
sbb
inc
sbb
or
retf
aam
pop
add
push
cld
xchg
outs
ficom
xor
or
xchg
mov
fdivrp
outs
in
inc
test
pop
repz
test
retf
(bad)
xor
mov
inc
push
mov
sub
add
mov
js
cmps
xchg
mov
push
cmps
int
dec
lods
push
push
mov
test
test
cld
cs
pop
(bad)
out
add
dec
addr16
lahf
cmp
inc
mov
in
test
std
test
sbb
fcmovb
lea
in
mov
or
inc
add
hlt
xchg
sbb
ss
push
in
add
sti
ret
scas
ror
push
mov
jae
xchg
fsubr
in
out
imul
mov
stos
call
div
imul
and
clc
xchg
push
fldcw
dec
fs
ficom
stos
mov
adc
sbb
push
aas
sbb
push
and
or
lahf
cmp
jno
cmp
inc
xor
inc
jg
sti
stos
int
push
inc
and
mov
pop
inc
test
lahf
xlat
adc
pop
mov
jmp
je
sbb
fiadd
js
cmp
pop
fmulp
fist
lods
pusha
and
ja
jge
fmul
jg
mov
(bad)
dec
in
inc
inc
cld
dec
dec
inc
neg
push
pop
push
adc
push
adc
jns
and
add
fimul
sbb
popf
adc
int
sub
stos
and
mov
push
mov
int3
fs
les
test
cwde
aad
mov
jecxz
cwde
sub
nop
inc
icebp
(bad)
stos
mov
mul
cmps
pop
xchg
adc
lods
fimul
dec
loope
inc
mov
inc
cmp
sar
mov
add
outs
movhps
sbb
inc
inc
fisub
jae
sub
and
jge
cmp
sbb
and
das
dec
xlat
pushf
mov
mov
in
mov
cmp
mov
(bad)
mov
pop
shr
(bad)
xchg
(bad)
ja
and
sar
test
stos
clc
sti
mov
mov
jmp
push
sbb
mov
daa
cdq
mov
push
cmp
cmp
push
and
jbe
and
or
and
pop
cld
cmp
imul
cmc
lods
xchg
push
push
jbe
fs
rol
mov
or
cmp
scas
push
push
inc
inc
xor
repnz
rol
xchg
or
jnp
cwde
sbb
mov
invlpg
je
adc
cmps
iret
inc
xlat
retf
imul
imul
xchg
fwait
adc
and
inc
xchg
inc
adc
jb
int
and
shl
cmp
xlat
mov
in
mov
pop
cdq
mov
jo
sub
jns
fild
popf
pop
stos
sbb
xor
push
(bad)
pop
rol
inc
frstor
or
push
addr16
mov
mov
push
scas
or
push
mov
pop
and
ret
imul
in
(bad)
cmp
push
xor
or
js
cmp
push
cmp
fcom
xchg
adc
jmp
mov
add
sbb
jo
in
out
pusha
cmp
xchg
fsubr
cmps
shr
sti
pop
aas
jp
mov
adc
dec
dec
or
mov
(bad)
sbb
or
pop
ror
loop
(bad)
xor
pusha
jno
in
jecxz
cmp
arpl
fmul
cs
xor
jmp
pop
cmp
adc
loope
dec
jo
mov
and
push
js
cmps
jmp
mov
ss
jb
pop
enter
mov
jbe
jnp
push
call
popa
das
cmp
mov
dec
or
add
mov
dec
xchg
ds
aaa
mov
adc
pop
mov
mov
out
jnp
(bad)
mov
adc
adc
push
pop
sub
bound
dec
pop
push
xor
popa
or
nop
sahf
fbstp
call
mov
and
ins
push
cmp
add
sti
and
in
adc
int3
out
outs
sbb
popa
mov
add
(bad)
fnstcw
inc
jo
and
push
movs
push
popf
movs
ds
ja
sub
daa
gs
and
sbb
ret
add
test
js
cmps
jns
inc
mov
icebp
mov
mov
jg
mov
pop
div
retf
mov
inc
pop
arpl
push
sub
cmp
mov
les
push
mov
jecxz
or
shr
sbb
mov
mov
lds
div
clc
push
jge
jp
out
jnp
xchg
jno
mov
add
aaa
outs
enter
enter
mov
cmp
sub
dec
call
sbb
dec
push
dec
lea
dec
jmp
std
es
inc
pop
loope
inc
movs
imul
cdq
mov
into
in
xor
pop
jb
test
fcom
adc
dec
fild
xchg
push
xor
ret
das
xchg
in
inc
loope
inc
xor
imul
imul
shl
push
push
arpl
mov
pop
adc
xchg
out
(bad)
into
mov
inc
cli
call
movs
sbb
cmp
inc
or
sar
cmp
mov
pop
mov
adc
fldenv
in
mov
jno
out
mov
cmp
or
push
movs
ins
jno
jmp
ror
dec
or
icebp
jnp
pop
in
or
cmps
mov
push
push
and
jbe
repnz
sub
pop
mov
xor
xchg
jmp
cmp
es
xor
in
jle
inc
dec
loop
into
lds
mov
push
sahf
mov
ss
mov
jg
ret
cmp
pop
js
and
xor
scas
xchg
add
jbe
cmp
xchg
and
inc
add
mov
rol
dec
clc
fcom
ds
outs
pop
lods
jl
ficomp
jno
imul
bound
mov
ror
push
lods
cld
icebp
add
inc
jno
xchg
aaa
jmp
movs
mov
cmp
out
add
xchg
dec
loope
mov
call
push
ds
(bad)
cmp
(bad)
cmp
jbe
jecxz
dec
xor
xor
push
sbb
cld
or
dec
mov
add
sub
stc
(bad)
es
dec
mov
fidiv
outs
pop
retf
stos
out
inc
shl
rcr
aaa
jecxz
cmp
out
fsub
cmps
add
cmc
arpl
jp
jb
inc
and
add
push
(bad)
popf
mov
inc
push
push
or
jl
std
jbe
loop
mov
or
add
push
adc
imul
addr16
sti
pushf
addr16
rol
clc
(bad)
in
xor
fcomp
inc
inc
ffreep
xor
cmp
xor
addr16
add
xlat
icebp
cmc
out
lods
push
mov
inc
cmps
frstor
cmp
xchg
nop
jno
std
cmp
and
mov
bound
push
repz
jl
cmps
out
mov
push
mov
jno
mov
in
bound
xchg
mov
xor
cwde
jmp
and
je
xor
test
sbb
inc
and
loopne
sub
enter
mov
push
dec
retf
pop
pop
cmp
xlat
cmp
jecxz
mov
jle
or
or
aam
into
retf
xchg
or
sbb
sbb
inc
in
(bad)
dec
movs
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
and
test
dec
.byte
test
dec
