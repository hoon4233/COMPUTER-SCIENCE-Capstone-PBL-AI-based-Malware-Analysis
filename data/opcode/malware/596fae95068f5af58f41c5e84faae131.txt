mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
add
inc
outs
jae
inc
fnsave
jb
inc
xor
add
add
aas
fild
or
outs
jb
dec
outs
je
xlat
retw
mov
xor
jg
test
ins
(bad)
ins
jmp
fbld
cmp
mov
gs
int3
fdiv
mov
push
mov
dec
shr
push
int3
fs
call
sti
adc
push
outs
imul
mov
pop
fs
add
adc
into
mov
out
ss
add
add
fmul
ins
test
inc
jns
lods
loopne
outs
pop
add
dec
popa
je
jbe
dec
jae
jae
scas
add
xor
inc
push
pusha
js
add
and
jge
jo
inc
mov
push
fs
mov
fsubr
inc
inc
outs
jne
add
les
out
ins
add
jg
jo
aas
aam
inc
jne
jb
arpl
(bad)
out
fstp
mov
push
je
mov
fistp
lds
push
xchg
xor
xor
loop
dec
sub
or
cmp
out
and
add
xor
pop
mov
dec
lock
outs
cmp
mov
sar
sbb
mov
ins
lds
loopne
and
clc
or
lds
icebp
hlt
xchg
push
mov
(bad)
push
push
movs
sbb
cwde
and
loope
adc
push
inc
ins
popa
jae
adc
add
push
loop
sub
dec
push
inc
push
push
dec
push
mov
push
inc
sbb
inc
adc
add
mov
add
xor
sbb
sbb
mov
inc
inc
push
xor
jmp
and
add
sbb
sub
outs
jo
inc
jno
sub
xor
je
cmp
jbe
(bad)
sbb
fiadd
gs
pop
add
sbb
or
(bad)
mov
test
imul
ds
add
fucomip
mov
movmskps
jb
popa
arpl
mov
jb
xor
cmp
push
andps
lock
pusha
sbb
add
lea
add
(bad)
in
xor
push
push
popa
push
inc
pop
mov
mov
jo
sbb
or
or
ins
inc
and
aas
add
and
movs
pop
xchg
shl
inc
or
push
aad
or
jne
inc
adc
add
imul
aad
adc
cld
push
sahf
rcr
pop
cli
and
test
or
sahf
add
popa
mov
pop
mov
mov
imul
sahf
sub
retf
mov
add
push
push
outs
ins
xor
jb
jnp
mov
pop
mov
cmp
jecxz
and
add
adc
sbb
jecxz
adc
in
xor
sbb
inc
jns
(bad)
ja
jge
jle
add
out
xor
daa
or
push
fcomi
or
and
add
loopne
inc
adc
xor
idiv
iret
inc
pop
add
in
out
movhps
das
dec
je
scas
fadd
inc
in
leave
leave
leave
jnp
cld
cmp
scas
fistp
lods
repz
xor
div
xor
leave
dec
add
mov
retf
xchg
jg
idiv
daa
sbb
push
stc
jmp
cli
outs
push
psubq
push
js
std
repz
dec
mov
dec
push
cld
inc
dec
dec
call
arpl
pop
daa
jl
inc
push
inc
aas
mov
sub
or
fs
gs
data16
and
cwde
stc
or
dec
add
inc
sub
inc
or
jo
(bad)
into
xchg
call
add
(bad)
hlt
cmp
xor
mov
imul
xchg
push
push
push
jmp
and
ja
dec
jnp
add
mov
in
jne
sub
outs
xor
in
push
xor
fmul
ins
mov
jo
inc
sub
lock
inc
add
add
add
(bad)
addr16
jae
imul
xchg
add
jno
xor
sbb
into
jno
popa
jo
das
jno
mov
push
add
scas
out
or
outs
push
sub
lock
ficomp
push
imul
sbb
cmp
sub
or
outs
ins
pusha
cmp
jae
jle
inc
aas
loopne
out
add
add
and
inc
pusha
and
jns
sub
loop
in
in
je
and
and
push
inc
sahf
aam
or
adc
gs
mov
mov
popa
cmp
cpuid
clc
add
imul
add
or
adc
or
outs
ins
jns
test
inc
add
adc
cwde
jo
or
out
ret
push
add
or
pusha
lock
pop
xchg
pop
(bad)
mov
mov
adc
call
push
ins
xchg
add
push
jnp
jp
cmc
mov
pusha
or
adc
popa
shl
jne
retf
arpl
addr16
pop
ds
int3
or
mov
dec
sub
xchg
sbb
pushf
ss
xor
xchg
dec
imul
push
pusha
mov
push
outs
add
lock
and
inc
mov
adc
gs
mov
inc
js
jo
imul
jbe
mov
(bad)
lods
sub
or
pop
sub
inc
or
les
inc
data16
sahf
mov
jne
mov
xlat
dec
mov
jge
push
adc
bound
push
push
fadd
jle
daa
or
je
push
dec
fistp
mov
test
inc
aas
icebp
popa
xchg
push
(bad)
xor
scas
outs
xor
jge
sbb
gs
imul
mov
out
daa
ins
hlt
mov
outs
ror
jl
push
add
pop
sbb
or
adc
or
mov
ret
das
xchg
imul
sbb
adc
fisubr
inc
je
mov
jle
bound
mov
xchg
and
sbb
dec
dec
pop
das
ss
aas
lock
adc
aas
or
call
mov
and
sbb
xor
das
in
jle
shl
outs
ins
outs
add
xchg
mov
adc
pop
sub
or
test
pushf
or
mov
sbb
add
or
xchg
arpl
dec
inc
outs
jne
cmp
push
adc
add
fnstenv
imul
test
arpl
mov
call
int3
add
jmp
adc
mov
int3
lods
mov
mov
int3
fldcw
push
push
fcom
and
mov
push
add
jno
add
aad
hlt
pop
or
sbb
xchg
(bad)
push
cwde
sbb
or
push
stc
or
out
mov
add
repnz
or
mov
fmul
cli
dec
arpl
add
add
mov
jmp
add
cmp
add
add
cli
(bad)
sti
sbb
inc
jne
mov
add
fwait
sbb
and
sub
cmps
xchg
push
mov
inc
ficomp
movs
jle
adc
push
popa
xor
push
xlat
jl
das
or
fmul
xchg
cdq
or
jbe
stc
push
das
loopne
push
mov
xchg
inc
mov
(bad)
fbstp
lahf
(bad)
or
push
push
inc
cmp
jmp
es
aam
ja
push
repz
adc
push
inc
cmp
ret
mov
push
xor
xchg
cli
jne
adc
or
(bad)
sub
push
mov
pop
test
daa
push
mov
xor
in
(bad)
in
outs
ja
daa
or
pushf
sub
(bad)
das
mov
rcl
lock
fsub
add
push
xor
push
imul
add
daa
add
js
aas
or
push
push
mov
pop
cmp
ret
xlat
add
xchg
or
shr
xor
add
in
xor
xchg
add
or
adc
mov
or
jecxz
or
adc
push
adc
jl
mov
xchg
das
cmp
add
push
js
mov
ins
sbb
daa
jno
add
or
outs
pop
rcl
adc
jmp
ins
arpl
or
lods
test
mov
add
ja
push
push
fimul
es
daa
sbb
mov
push
pop
push
cmp
fwait
inc
pop
pop
and
ds
retf
fst
add
rol
push
mov
push
dec
scas
xchg
mov
jae
jbe
lods
pop
arpl
sub
sub
sbb
jmp
push
cmp
enter
pop
add
daa
pop
push
adc
and
out
and
imul
ficomp
sub
dec
push
and
inc
or
mov
jno
mov
mov
cmc
sub
ror
int
inc
cwde
and
xor
jne
mov
sub
mov
lods
mov
pushf
mov
mov
mov
and
stos
int3
push
cmp
sub
mov
and
cmp
push
icebp
(bad)
(bad)
add
cmp
and
add
or
push
mov
or
xchg
xor
pop
mov
add
jge
xchg
sbb
and
fbld
pop
add
fisubr
loopne
in
cmp
fisub
dec
loopne
repz
ss
or
adc
push
adc
sahf
add
or
fld
js
sbb
jns
mov
gs
jge
fdivr
shr
and
pushf
dec
push
mov
inc
pop
adc
dec
enter
and
in
sti
ja
jo
cmps
cmp
or
inc
jns
dec
add
xor
shl
pushf
ins
sub
adc
adc
sub
sub
movs
xor
scas
pop
ror
test
add
div
pop
xor
xor
xor
add
xchg
aas
add
cmp
nop
push
mov
arpl
dec
or
jno
ror
and
pop
cmps
test
or
cmp
or
sub
imul
sub
ins
adc
push
jg
sbb
iret
jl
ret
cwde
outs
push
push
push
cwde
popf
pusha
imul
loopne
push
lea
jge
mov
sub
push
push
jae
lods
mov
xor
add
fsubr
add
push
rol
jne
in
or
pop
and
int
mov
dec
or
inc
int3
inc
sar
push
and
and
sub
jo
add
test
shl
aaa
mov
inc
test
pop
div
add
pop
das
push
or
jne
das
xchg
out
add
inc
add
jbe
push
push
inc
xchg
xchg
xchg
xchg
jp
enter
pop
shl
pop
shld
xchg
xchg
xchg
daa
cmp
popf
jmp
enter
and
repnz
dec
xor
sysexit
mov
sbb
xor
sahf
pushf
stc
cmp
jle
daa
daa
and
cmp
jmp
nop
loope
leave
leave
enter
mov
in
fs
cmp
xor
xor
outs
lods
std
cmp
sbb
cmp
sahf
pushf
pushf
mov
(bad)
push
aas
daa
and
stos
sbb
aam
xchg
xchg
daa
cmp
and
leave
stos
adc
out
mov
jmp
mov
mov
cmp
dec
sub
sar
add
dec
sbb
inc
push
out
mov
add
aam
test
jne
dec
cs
xchg
dec
cs
add
mov
xor
loope
ja
test
xor
inc
inc
and
aaa
pop
adc
daa
cmp
fwait
pop
or
stos
xchg
dec
inc
ins
ins
outs
arpl
daa
mov
xor
add
mov
mov
push
into
or
and
outs
inc
loopne
shr
cwde
inc
ins
sbb
(bad)
or
or
xor
pop
pop
aam
add
mov
dec
add
dec
push
add
fist
in
mov
inc
push
jb
jnp
inc
popa
clc
repz
ror
enter
pop
je
jmp
ret
enter
or
in
push
mov
ffreep
sub
ins
test
mov
aaa
or
fld
call
and
push
inc
(bad)
push
mov
or
inc
enter
add
push
adc
aam
sub
inc
xchg
ret
and
and
push
add
ret
xchg
xchg
jo
xchg
ret
inc
push
push
xor
rol
push
rcl
adc
and
pop
or
xchg
fisubr
jmp
leave
retf
retf
mov
add
adc
popa
cs
cli
or
and
ss
mov
mov
adc
cwde
ss
mov
cwde
xchg
ins
test
sub
cmp
or
push
add
pop
push
loope
je
jp
cdq
add
xchg
ins
mov
mov
xchg
push
data16
mov
mov
and
add
fldenv
xchg
add
add
(bad)
mov
sub
push
and
mov
movs
or
inc
adc
mov
add
inc
inc
lds
mov
clc
sbb
mov
mov
inc
or
mov
pusha
sbb
cmp
mov
or
mov
adc
sub
jnp
adc
mov
jbe
add
sbb
or
shl
and
add
lds
call
push
popa
pop
ret
add
movs
fcmovu
push
in
push
outs
outs
test
add
fiadd
and
movd
out
jns
aaa
(bad)
out
add
ja
jo
test
repnz
out
imul
add
je
pop
mov
pop
icebp
push
int
add
jnp
or
sub
xchg
int3
or
push
fisttp
aam
adc
add
arpl
push
pop
inc
mov
and
popf
shr
nop
inc
stos
arpl
ja
test
imul
xchg
mov
fwait
push
adc
and
data16
and
push
ss
add
lds
mov
dec
gs
call
pop
lods
in
rol
test
xchg
test
xlat
stc
push
mov
adc
pop
add
(bad)
jge
inc
inc
mov
push
push
popf
test
ds
pop
daa
push
jo
outs
das
sbb
popa
js
pop
cmp
stos
loope
pop
xor
mov
mov
pop
add
inc
mov
add
and
mov
add
mov
leave
add
push
sbb
bswap
and
push
jne
retf
js
loopne
inc
les
retf
and
retf
jne
test
jmp
inc
outs
int
adc
add
sbb
nop
add
out
imul
loope
xor
push
in
inc
jbe
sub
rol
xor
push
inc
nop
sub
mov
cmp
retf
mov
js
or
pop
dec
pusha
add
xor
xor
mov
ds
or
loope
ins
outs
into
cld
(bad)
(bad)
jg
call
cli
cmp
ja
dec
add
push
cmp
int3
das
adc
arpl
std
mov
in
call
pop
or
aaa
fcom
push
dec
or
sbb
or
retf
fsubr
sub
jno
sub
repnz
dec
popa
ins
or
out
aam
cmps
fcom
adc
adc
ds
jno
mov
sbb
shl
and
js
xlat
mov
stos
add
call
jae
and
adc
out
fadd
outs
adc
jmp
cmp
adc
outs
movs
xadd
push
gs
nop
into
ins
ja
ja
xchg
retf
and
out
minps
(bad)
mul
ja
add
and
test
cmp
jne
dec
imul
cmc
add
ja
ss
xor
push
or
(bad)
sar
adc
arpl
adc
out
or
push
lds
out
in
mov
inc
pop
dec
imul
pop
retf
push
xor
push
jle
fnstsw
clc
push
xor
add
loopne
lock
add
gs
jo
mov
dec
mov
and
sbb
or
das
and
adc
or
das
dec
jae
pop
daa
add
call
pop
mov
mov
sbb
icebp
inc
adc
ja
dec
push
or
fild
iret
and
push
or
push
and
loopne
and
pop
push
fild
jo
jle
imul
popf
add
xchg
add
sub
jne
mov
stos
mov
shl
outs
pop
or
(bad)
inc
cmp
or
sub
outs
jae
loope
dec
ret
adc
addr16
adc
enter
and
fisttp
dec
in
inc
ret
push
push
dec
cmp
or
or
pushf
fs
xor
add
popa
dec
addr16
xor
jo
outs
cwde
dec
cdq
jne
int
mov
inc
pop
arpl
xor
add
pop
enter
mov
loopne
cmp
or
in
fbstp
pop
xor
fild
cs
jne
ins
fs
jo
add
xchg
and
outs
push
xlat
lea
test
or
and
out
shl
retf
rcl
add
fs
xchg
cmp
push
inc
add
dec
pop
or
xchg
jo
push
or
jbe
jb
sub
or
aaa
push
xchg
(bad)
clc
adc
out
add
or
jecxz
loopne
sub
xor
call
or
loope
mov
hlt
and
mov
adc
aam
ins
mov
out
adc
ins
bound
sbb
mov
add
stc
mov
outs
add
xchg
mov
or
sti
cmp
push
mov
sub
and
mov
push
je
jb
jb
ins
push
jb
pop
pop
push
push
jb
jb
dec
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
and
sbb
jb
sbb
in
jbe
(bad)
or
fucomi
in
cld
outs
clc
pmuludq
in
call
xchg
loopne
fsub
mov
xchg
xchg
nop
ror
enter
xchg
(bad)
ror
cmp
add
pop
pop
pop
xchg
jno
pop
add
push
push
cmp
lea
push
sbb
pusha
dec
(bad)
std
(bad)
fild
inc
or
data16
test
je
movzx
mov
popf
fucomi
mov
addr16
jmp
push
mov
jne
fimul
mov
jns
ins
gs
imul
popa
jae
outs
arpl
outs
je
jne
xchg
fs
push
jge
jae
and
pop
arpl
or
xor
cmp
xor
popaw
dec
adc
dec
aas
leave
imul
sahf
xor
jnp
and
mov
lock
push
outs
imul
jp
ja
xor
sub
leavew
sbb
push
push
popa
hlt
mov
mov
cmpxchg
dec
dec
add
inc
push
dec
add
inc
or
and
sub
or
adc
or
adc
or
(bad)
ficom
or
sbb
adc
sbb
sub
push
or
sbb
cs
jp
add
cmps
mov
pop
jp
cmp
add
inc
sub
pop
imul
dec
nop
inc
add
push
xor
cmp
ins
test
push
add
dec
cmp
arpl
add
fs
call
imul
jmp
retf
mov
icebp
fnstcw
fild
adc
cmp
add
js
xor
(bad)
and
mov
sub
or
mov
add
nop
adc
lock
mov
mov
das
jp
jmp
retf
add
mov
mov
idiv
rol
and
pop
mov
and
in
mov
sub
mov
jmp
ja
mov
retf
adc
push
add
retf
dec
mov
add
mov
shl
or
sbb
push
mov
cmp
jo
test
fist
add
or
adc
dec
add
out
sbb
loopne
cmp
dec
pop
mov
out
aad
push
cld
sub
ror
mov
pusha
push
push
mov
inc
inc
pusha
push
stos
pop
pop
push
fadd
dec
adc
push
jnp
sar
cmp
shl
mov
push
mov
xchg
jno
mov
rcl
sub
mov
out
mov
mov
shl
or
jp
jmp
mov
xor
mov
je
jmp
ins
lahf
xor
in
cmc
dec
mov
add
in
sbb
adc
push
xor
loope
add
push
push
mov
adc
daa
nop
dec
add
and
push
mov
das
mov
je
sti
mov
or
mov
or
inc
dec
mov
pop
add
mov
push
loopne
ss
add
ret
pop
pop
add
mov
jle
mov
xchg
push
and
call
ret
sbb
sub
in
(bad)
in
jg
add
(bad)
jmp
or
cmp
in
push
push
lea
or
loopne
push
push
dec
les
(bad)
push
pop
jne
push
push
mov
cmp
jbe
sub
add
jmp
test
jne
addr16
fimul
inc
ror
mov
mov
sub
dec
ins
out
fcmovnb
(bad)
loopne
repnz
sub
pusha
add
out
sub
fiadd
mov
jno
test
(bad)
jbe
jmp
pop
sbb
and
add
call
lock
out
jne
xor
and
call
cmp
jae
mov
push
push
aas
dec
and
jae
fadd
or
push
shl
cmp
pop
jb
test
push
xchg
jo
rol
pop
or
jg
std
data16
or
lds
call
sub
retf
dec
test
add
ss
addr16
pop
pusha
xchg
aas
je
or
ins
mov
jmp
repz
add
das
dec
pop
fsub
imul
and
and
add
cmp
inc
stos
push
fst
xchg
test
test
(bad)
fs
sbb
jl
cmp
adc
clc
fidivr
fisub
cmp
(bad)
aaa
pop
mov
(bad)
xor
add
movzx
add
sar
adc
jbe
mov
cmp
dec
into
mov
or
or
loopne
push
je
jo
je
adc
sbb
cmp
dec
or
sub
or
inc
jmp
inc
and
push
and
sub
pop
or
mov
fist
jo
mov
inc
mov
cdq
and
lea
lea
lock
push
push
pop
push
add
cmp
jne
mov
loopne
and
jne
btr
mov
mov
or
jb
mov
dec
jnp
sub
xchg
aaa
iret
test
push
xor
sbb
iret
jb
mov
or
push
lea
mov
sub
sub
outs
cmp
adc
jmp
ds
push
mov
jmp
adc
and
sti
aaa
cld
test
push
mov
mov
sub
lea
imul
imul
iret
mov
addr16
out
and
adc
sub
push
mov
mov
movs
or
inc
lea
xchg
out
ret
lea
or
cmps
pop
clc
dec
mov
je
inc
js
ret
loope
rol
or
jmp
dec
inc
scas
out
mov
popf
(bad)
xor
dec
shl
jnp
adc
mov
shl
push
xor
pop
repz
and
fadd
jle
pop
mov
dec
mov
jmp
mov
mov
pop
or
inc
jno
xchg
inc
mov
cmp
adc
adc
dec
xchg
adc
test
push
pop
or
xor
setno
jbe
fs
div
call
pop
inc
jns
pusha
xchg
dec
and
ss
sar
ret
movs
add
mov
jne
sub
sub
jmp
cs
push
inc
inc
fadd
data16
mov
nop
pop
mov
mov
bound
cmps
loop
fiadd
retf
push
or
cmp
push
or
ins
push
imul
iret
les
(bad)
shr
sahf
mov
pop
pop
leave
pop
mov
pop
outs
out
xor
sub
add
add
add
fmul
scas
test
sub
xor
test
aaa
rcr
cli
je
lea
and
ret
xchg
xchg
mov
xlat
mov
mov
je
add
cmp
sbb
inc
aas
shr
pop
dec
clc
sub
sub
mov
xor
sub
or
lahf
mov
(bad)
inc
test
cmp
sbb
add
jae
jmp
inc
cld
cmp
add
jno
sbb
cmp
mov
xchg
adc
or
mov
pop
push
in
or
jne
lods
sbb
sbb
stos
cmp
jb
out
dec
fisubr
sbb
je
retf
jb
jns
sar
jb
inc
call
mov
mov
jg
pop
xlat
aaa
movs
or
lea
push
mov
sub
mov
sar
and
add
hlt
mov
ins
lock
clc
iret
mov
jl
push
sbb
sub
cs
xchg
xchg
ror
mov
cmp
jecxz
cmp
xor
setae
cmp
dec
pop
loope
jb
and
cli
sub
loopne
jle
jae
push
int3
push
mov
pop
mov
lea
add
sub
sbb
inc
cmp
jnp
jecxz
jno
jge
inc
or
in
xchg
ret
cs
pop
cld
or
mov
push
mov
add
or
stos
jg
ins
adc
pop
data16
mov
rol
xlat
sub
add
add
jl
or
lea
push
ret
sbb
fdivr
out
fsubr
cld
test
mov
xchg
loopne
xchg
sbb
add
jmp
and
shl
xor
push
dec
push
sar
xlat
xlat
je
iret
ja
cmp
ror
pop
mov
call
sub
cld
xor
sub
adc
fiadd
out
add
xor
and
push
add
popa
add
push
jle
push
lea
(bad)
mov
jl
mov
push
pop
add
adc
or
mov
jecxz
arpl
dec
les
ror
fs
rcr
and
jge
jl
fadd
imul
sub
push
lea
jecxz
(bad)
push
(bad)
leave
lea
or
jae
neg
fldz
fst
add
inc
cld
mov
ffree
fincstp
mov
pop
mov
adc
add
mov
pop
sbb
shl
xor
fucomp
sbb
jb
rol
out
les
and
rcl
sbb
(bad)
add
in
fisttp
sub
jle
cmp
jne
mov
pop
adc
sbb
jle
adc
fidiv
mov
xor
cmp
mov
iret
outs
std
das
jge
in
mov
test
test
xor
div
cmc
mov
add
push
sub
inc
mov
add
mov
adc
(bad)
mov
test
jne
mov
xor
add
push
xchg
push
gs
push
loop
mov
mov
test
iret
push
xchg
rcr
mov
(bad)
neg
or
ds
mov
push
in
pop
fadd
(bad)
pop
push
rcr
xor
add
adc
out
jbe
dec
jmp
push
mov
shl
mov
add
jecxz
jg
jo
jae
xor
leave
mov
push
adc
mov
inc
sbb
add
push
adc
std
test
adc
ins
add
into
mov
mov
pop
pop
dec
or
xchg
pusha
fsubr
cli
and
call
outs
jge
push
push
cmp
test
in
pop
xor
and
push
loopne
cmp
daa
test
daa
dec
or
adc
lea
jmp
push
and
fs
push
cdq
or
cli
push
(bad)
pushf
in
adc
add
inc
lock
sbb
ins
dec
fistp
pop
mov
dec
xchg
sub
pop
sub
jne
cli
adc
sbb
mov
jno
dec
outs
outs
mov
pop
div
out
(bad)
or
sub
aas
inc
sbb
js
inc
mov
add
cmps
dec
mov
pop
sbb
mov
dec
inc
rdpmc
push
jl
sub
clc
(bad)
inc
pop
mov
cmp
jne
add
mov
mov
or
and
or
ret
aaa
or
jne
mov
add
out
fdivr
ja
push
cs
loopne
jno
(bad)
cmp
(bad)
dec
inc
or
rcl
sbb
pop
sbb
xor
jne
sar
dec
rcr
or
cmp
je
in
mov
pusha
aaa
dec
(bad)
clc
test
cmp
push
mov
retf
lods
cli
dec
jge
out
cmps
mov
inc
add
pop
rcr
lock
add
fadd
adc
dec
dec
aas
int
in
inc
cdq
test
inc
out
fld
mov
aas
ror
ss
(bad)
test
adc
cmp
stos
xor
cmp
ss
retf
add
lods
pusha
jmp
dec
jne
cmp
pushf
clc
ret
inc
mov
mov
nop
xchg
popa
xchg
call
push
imul
adc
inc
cmp
cmp
in
das
mov
scas
jle
(bad)
into
cmp
je
or
inc
cmp
pop
fdiv
mov
(bad)
inc
fisubr
in
xor
fmul
xchg
push
test
rol
jge
push
mov
add
push
dec
jne
ret
adc
loopne
mov
push
gs
mov
jmp
fadd
adc
je
or
push
push
dec
(bad)
xor
xchg
aad
cmp
mov
inc
adc
mov
add
test
cmp
pop
add
je
add
push
sbb
popf
pop
rcr
mov
and
(bad)
mov
mov
and
les
mov
mov
(bad)
jnp
jmp
jne
mov
inc
test
retf
clc
jb
mov
jmp
inc
xchg
dec
fs
stc
mov
fsub
mov
rcr
cmps
loopne
or
jl
cmp
inc
ins
xor
not
call
mov
push
mov
std
and
div
lock
aaa
add
loopne
xor
cmp
out
in
loope
mov
push
xchg
jb
push
test
mov
mov
bound
loope
retf
fmul
xchg
cmp
xchg
adc
lock
sub
and
fcom
sbb
pop
add
or
jnp
sbb
add
mov
in
fidiv
pop
inc
push
dec
add
cs
add
mov
xor
in
ins
sbb
xchg
jne
sub
out
add
je
dec
je
jmp
fcomp
add
jo
inc
mov
fbstp
sbb
sub
call
inc
shl
adc
repz
xchg
dec
mov
or
adc
(bad)
stos
icebp
and
jl
cmp
sub
pcmpeqw
das
ds
js
test
sbb
retf
and
or
xadd
or
mov
(bad)
inc
mov
mov
dec
pop
jb
inc
xor
mov
les
mov
jle
js
jmp
aaa
add
jne
mov
ror
retf
push
mov
js
push
ror
mov
push
mov
idiv
push
adc
hlt
cmp
in
push
mov
into
add
add
clc
jbe
mov
xchg
inc
add
cmp
jne
mov
mov
cmp
push
(bad)
cli
test
cmp
inc
in
inc
inc
or
jno
lods
(bad)
sub
mov
ror
out
push
or
jg
outs
ins
jae
mov
shr
cmp
jbe
aaa
sub
or
scas
mov
(bad)
test
(bad)
push
in
loopne
add
cmps
call
inc
lock
cmp
loope
lea
sub
std
movs
shl
jae
mov
fst
call
sti
adc
ret
retf
imul
mov
sbb
data16
cmc
xchg
push
aam
add
push
xor
rcl
fdiv
mov
ret
mov
ret
cmp
stos
push
repz
push
pop
adc
scas
sti
and
push
mov
and
jmp
mov
xchg
push
retf
ret
(bad)
cmp
(bad)
jne
mov
lahf
adc
lods
mov
or
mov
mov
and
stos
mov
mov
mov
or
shl
repz
xchg
mov
or
jmp
add
pusha
push
adc
imul
add
idiv
repz
mov
pop
cmp
mov
test
and
cmp
push
sub
adc
adc
sbb
push
rol
push
push
inc
jg
das
(bad)
pop
adc
call
add
ret
mov
pusha
fadd
ss
jo
ror
aam
cmp
and
push
xor
pop
adc
pop
addr16
adc
jmp
out
sahf
pusha
aaa
jne
lahf
mov
test
je
test
je
ins
and
enter
or
add
fistp
cs
test
int
rcr
arpl
outs
test
fstp
mov
mov
adc
jb
aas
add
or
add
and
or
mov
cmp
jo
repz
mov
out
ret
mov
(bad)
xchg
repnz
and
out
jns
adc
fmul
(bad)
outs
cwde
mov
jmp
cmp
ja
movzx
add
je
adc
test
inc
pop
jl
(bad)
(bad)
push
mov
in
int3
jbe
push
add
or
mov
int
adc
out
lea
pop
mov
jne
loop
popa
scas
sbb
pop
ds
xchg
add
and
push
add
jo
outs
adc
cmp
cwde
cmp
stc
and
sub
jg
jmp
loopne
or
sub
or
push
xor
outs
push
adc
pop
adc
bound
xchg
xchg
dec
iret
repz
add
or
sbb
sub
fcomi
cmp
inc
push
mov
dec
or
ret
or
mov
and
or
jl
das
js
cmc
pushf
sbb
ret
jle
or
shr
retf
adc
jbe
inc
add
clc
sub
pop
mov
retf
cmc
pop
push
or
mov
icebp
mov
mov
add
mov
xor
and
fcom
rcr
push
add
ret
xor
lods
jmp
add
loopne
push
call
cmp
jne
or
lods
ret
or
adc
loopne
enter
les
and
and
pop
jmp
inc
imul
push
mov
retf
fmul
bound
xlat
fisubr
sub
pop
es
test
dec
adc
jmp
daa
cmp
dec
inc
loopne
ja
(bad)
hlt
std
in
aam
test
in
mov
push
add
or
int3
fdivr
jmp
and
push
lods
(bad)
out
adc
dec
mov
je
cmp
xor
jmp
mov
push
daa
loope
(bad)
clc
lea
mov
in
cli
xchg
cmp
sti
fstp
test
rdtsc
fld
sbb
inc
mov
mul
jo
push
imul
pop
mov
fnclex
fldcw
in
add
pop
push
push
add
cmp
push
stmxcsr
push
jbe
mov
dec
cmp
sti
or
mov
xchg
dec
loopne
call
pop
shr
inc
dec
sbb
pop
xchg
push
xor
in
push
mov
retf
cmp
add
dec
pop
in
mov
fs
cld
leave
outs
push
add
loope
jg
aad
mul
sar
ret
int
xchg
mov
add
mov
pop
in
push
data16
sub
sub
push
loopne
cmp
push
sbb
sub
jbe
xlat
inc
adc
xor
imul
add
(bad)
sbb
push
mov
and
or
add
aam
daa
pop
sub
jmp
cmp
(bad)
jmp
into
mov
cmp
sub
ins
sbb
add
jne
fstp
xor
or
cmp
dec
rcr
out
add
inc
or
lock
sbb
cmp
dec
or
clc
rcr
sbb
loopne
xor
packssdw
push
and
mov
adc
int3
cmp
jo
adc
jbe
sbb
hlt
cmp
sbb
or
jae
je
(bad)
mov
jmp
aaa
inc
push
jne
or
stos
rcl
add
call
jl
sbb
or
out
mov
xchg
or
push
mov
(bad)
(bad)
jg
mov
mov
xor
push
xor
add
or
lds
jae
addr16
pop
js
aad
add
dec
inc
mov
inc
daa
add
cmp
add
xor
cdq
pop
out
ss
sbb
aad
cmp
inc
aas
movs
pop
mov
pop
add
push
push
and
xchg
inc
loop
or
pop
mov
dec
adc
xrstor
dec
jb
push
push
and
jo
or
inc
aam
outs
pop
jg
sub
data16
or
sbb
adc
jmp
cmp
out
fld
fstp
and
jo
loope
enter
or
test
add
(bad)
add
fldenv
frndint
fstp
add
or
int
pop
jmp
(bad)
lock
faddp
fscale
movs
imul
in
cs
fwait
and
mov
out
call
cli
aas
test
shr
pop
jbe
psubb
lock
cmp
or
push
inc
push
call
sahf
xchg
or
pop
jl
(bad)
xor
aad
add
lea
jb
mov
adc
add
dec
mov
push
adc
cmp
jne
sub
add
neg
or
push
daa
sahf
imul
test
push
and
sub
inc
add
cmp
push
xchg
add
mov
es
inc
cmps
les
repnz
js
popa
rcl
ja
gs
jmp
fidiv
dec
aaa
pop
orps
push
adc
test
retf
mov
je
data16
jge
mov
or
mov
mov
mov
and
push
call
cwde
adc
fwait
or
and
jnp
loopne
xor
out
or
mov
repnz
sub
inc
loopne
jbe
or
and
cmp
adc
inc
push
mov
test
add
cmp
mov
or
adc
mov
mov
jae
xor
jne
xchg
add
lea
and
or
pusha
or
add
call
sbb
sub
aaa
cdq
scas
sbb
push
push
dec
mov
xor
adc
clc
push
sbb
mov
push
ret
and
pop
cwde
cld
jo
cmp
cmp
and
out
mov
mov
mov
pop
pop
inc
je
and
add
cli
inc
inc
xchg
test
je
xor
jmp
rcr
sub
inc
cmp
cmp
jne
push
das
int3
add
(bad)
sub
enter
adc
push
int3
mov
or
pop
leave
mov
inc
xor
retf
ds
fstp
add
adc
jmp
icebp
test
repnz
add
lock
inc
push
leave
mov
das
pop
or
xor
ror
pop
or
sub
and
push
(bad)
ins
cs
mov
aas
es
or
and
lea
mov
adc
sbb
jae
adc
(bad)
test
mov
add
cs
or
mov
call
add
xor
jmp
cmp
aaa
aad
pop
cmp
mov
cmp
pop
mov
pop
shr
gs
ss
pop
jmp
push
add
sar
ret
je
push
ins
jno
cld
and
out
push
movs
call
add
fst
push
or
dec
cld
jmp
jmp
inc
adc
lock
mov
je
xor
push
pusha
jo
and
dec
adc
pop
add
push
neg
push
push
add
dec
jl
pop
stos
and
pop
pop
ds
rcl
fld
jb
or
sub
push
daa
mov
pop
adc
ret
sbb
loopne
retf
sahf
mov
add
adc
adc
sub
aad
adc
push
clc
das
popa
xor
cli
and
out
add
cmp
dec
mov
adc
push
(bad)
fld
fst
fst
mov
and
sub
enter
shl
ficomp
or
sub
fstp
sbb
bound
mov
and
inc
lea
jnp
loopne
(bad)
jbe
jmp
cs
sbb
sbb
xor
push
inc
xor
dec
push
push
or
add
es
dec
inc
push
or
mov
xor
inc
sbb
dec
pop
mov
xchg
(bad)
mov
xor
mov
push
add
jmp
das
mov
ja
push
add
rol
push
or
lock
push
rcr
pusha
adc
adc
shr
mov
aaa
cli
popf
mov
and
pushf
add
aad
inc
pop
je
retf
sbb
jbe
inc
stc
jl
add
lock
je
add
pop
pop
aad
sub
jmp
cmc
aas
sub
sahf
in
hlt
jmp
mov
ins
or
dec
mov
pop
stc
out
scas
cmp
pop
mov
add
test
push
sti
shl
mov
push
add
cmp
je
out
test
je
and
je
in
out
js
outs
pop
je
xor
arpl
push
jmp
dec
das
push
data16
or
cld
outs
jmp
sub
ja
cmp
ja
dec
add
add
or
push
ss
loopne
int
lahf
pusha
cmp
and
push
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
imul
jb
mov
mov
jae
adc
add
or
mov
shl
ror
jne
mov
out
mov
cmc
add
mov
mov
mov
stos
sub
inc
mov
rol
shr
cmp
jae
or
pop
inc
mov
call
xor
push
cmp
cmp
jne
dec
jne
fistp
in
fimul
cmp
push
repz
sbb
cdq
std
outs
mov
sub
sub
leave
jne
push
jg
retf
(bad)
adc
in
mov
icebp
sub
movs
mov
sub
push
adc
lods
rcl
mov
adc
lock
ins
push
jl
sbb
sar
inc
pusha
jge
pop
xor
fld
push
je
xchg
mov
jns
pcmpeqb
out
push
adc
imul
inc
xchg
xchg
retf
stc
xor
adc
sbb
jmp
fstp
fld
or
fldz
and
add
rcr
aad
pop
enter
add
adc
enter
or
pop
lock
aam
sbb
mov
cli
add
clc
adc
or
loope
cld
push
mov
and
cmpxchg
jecxz
push
into
mov
in
push
mov
jl
add
mov
stos
fsubr
enter
iret
dec
or
rcl
outs
inc
cmp
push
mov
lea
lahf
and
jge
pusha
add
fsubr
and
jne
fcom
clc
daa
and
ds
xor
(bad)
xchg
sbb
cmp
addr16
ins
pop
pop
xchg
push
out
xor
call
sub
loope
add
or
pop
xor
xor
push
pop
sbb
or
rol
(bad)
dec
mov
xchg
aam
and
and
mov
xchg
pop
mov
sete
xchg
stc
push
mov
loope
cs
inc
sar
(bad)
jle
xor
ins
clc
or
mov
mov
ins
inc
cmps
sbb
(bad)
pop
mov
cmp
jne
js
jl
retf
push
add
or
mov
adc
aaa
nop
movs
std
mov
outs
or
or
xchg
mov
xchg
sub
pop
jb
jl
test
ror
xchg
add
lock
jae
push
retf
xor
jae
pop
add
add
mov
aaa
pop
mov
mov
xor
ja
mov
mov
mov
repz
cli
stos
pop
and
jb
ror
add
push
mov
sub
sbb
in
cmp
je
xor
rcr
ret
sbb
mov
jae
das
cmp
mov
push
sbb
cmp
or
push
daa
lods
(bad)
mov
mov
mov
cmp
stos
lock
mov
or
or
jbe
inc
das
and
shl
cmp
or
adc
(bad)
jb
movsx
xor
pop
and
and
add
mov
adc
lds
cmp
inc
dec
ins
jp
neg
cmp
mov
pop
xor
mov
(bad)
sub
cwde
add
lods
mov
jmp
mov
pusha
test
clc
mov
loop
add
add
jmp
lea
push
sbb
ins
les
jmp
and
scas
dec
clc
push
test
adc
add
xor
or
repz
cmps
and
jmp
pop
mov
xor
push
mov
adc
rcr
mov
xor
jb
jo
push
cwde
mov
or
push
or
ss
pop
lds
call
std
dec
pusha
sub
adc
shl
fdiv
pop
out
les
inc
mov
add
lea
loopne
inc
pop
jg
pop
mov
push
out
mov
outs
cmp
fwait
mov
fwait
add
sbb
cmp
stos
mov
or
xor
jnp
pop
ja
add
pop
out
and
push
pop
pusha
inc
push
and
ret
add
add
enter
enter
sub
lea
add
pushf
sbb
xchg
dec
inc
cld
add
add
push
pop
or
jo
adc
movs
or
mov
pop
mov
jge
push
scas
jle
sbb
mov
add
into
test
xor
data16
lock
(bad)
hlt
lea
xchg
xor
mov
or
add
repnz
je
pop
mov
mov
sub
pop
ret
pop
add
sub
mov
adc
push
xchg
ins
outs
pusha
les
adc
pop
sub
jmp
div
stos
(bad)
pop
push
push
daa
add
add
ret
or
cmp
out
sahf
jle
xchg
sar
jo
ret
pop
outs
pop
push
bts
sbb
pop
pop
push
dec
or
or
sbb
cmp
in
or
add
call
cmp
mov
cld
lods
push
add
push
mov
push
inc
sahf
push
dec
pop
cmp
mov
es
mov
lea
inc
fcom
add
ret
cmp
popa
xor
mov
(bad)
mov
mov
loope
jo
xor
test
cld
ds
retf
push
cmp
mov
and
add
dec
jne
sbb
jmp
pop
jmp
push
jecxz
mov
lea
test
pop
add
je
jmp
mov
out
(bad)
fwait
pop
sbb
test
jne
xor
psubusw
mov
out
add
test
mov
add
jecxz
aam
enter
aam
mov
mov
fsub
popa
xor
adc
push
add
add
(bad)
push
loopne
das
cld
(bad)
add
push
mov
mov
pop
adc
jecxz
add
jb
push
out
imul
sub
or
inc
sub
je
pop
jmp
fcomp
cmp
jmp
repz
add
out
sbb
jecxz
adc
add
inc
iret
fnsave
sub
push
add
or
hlt
xor
lea
mov
mov
mov
mov
call
or
jmp
add
mov
je
or
mov
adc
or
push
clc
(bad)
stc
jge
jb
fdiv
rcl
repz
push
and
pop
stos
and
push
fwait
inc
test
sbb
movs
mov
js
les
or
inc
dec
jg
jp
mov
or
mov
popa
push
les
jg
cmp
stos
lds
retf
push
daa
cli
out
(bad)
add
adc
xor
or
jmp
cs
jnp
and
cs
ins
mov
push
scas
enter
adc
push
and
es
pop
pop
or
xchg
inc
push
mov
setle
lock
cmp
loopne
daa
shl
and
loop
(bad)
add
lock
pause
dec
push
jg
ror
sbb
mov
clc
push
sbb
xor
mov
inc
xor
lods
mov
add
cmp
js
loope
xor
jno
sbb
mov
mov
sub
or
dec
cmp
and
retf
adc
or
cli
add
mov
cmp
enter
clc
mov
dec
ja
fst
cmps
adc
fnstcw
pushf
movs
push
inc
gs
outs
imul
arpl
outs
jmp
jae
jb
outs
data16
je
outs
outs
add
dec
jl
mov
add
or
add
sahf
add
or
cmp
stos
cmp
mov
clc
pop
cmp
je
add
cmps
fsubr
adc
sbb
jle
adc
les
cmp
cmp
gs
or
jne
sbb
mov
ds
mov
sbb
push
adc
ret
sbb
mov
and
scas
inc
mov
jnp
pop
inc
add
and
push
cmps
dec
enter
dec
mov
and
jns
cmp
mov
cmp
fcmovne
or
int3
sbb
arpl
adc
add
ret
pushf
js
test
adc
ins
inc
add
dec
dec
mov
and
adc
cmp
mov
sub
in
mov
pop
ins
dec
cmp
push
outs
adc
jnp
sbb
lods
mov
jne
xlat
loope
enter
cmps
or
and
xchg
dec
cmp
sahf
outs
ins
inc
inc
and
retf
jle
fidiv
push
add
clc
ja
(bad)
mov
xchg
jle
js
cmp
out
cmp
push
mov
andps
pushf
mov
inc
add
bound
cmp
and
bound
and
or
and
jo
sbb
xchg
or
sub
into
xchg
or
push
push
cmp
les
and
jne
push
mov
cmp
or
mov
adc
push
xchg
cmp
mov
sete
and
jae
shl
mov
push
jmp
adc
test
add
sub
or
xlat
(bad)
sahf
frstor
inc
add
push
ds
push
das
cmp
lea
and
or
pop
adc
(bad)
and
in
dec
(bad)
fldenv
cmp
xor
pop
mov
js
icebp
test
mov
mov
xor
psllw
js
cmp
cmp
jle
inc
jne
adc
lock
jl
jge
add
test
jmp
ror
imul
std
(bad)
call
sub
push
jbe
dec
cmp
fsubr
test
add
jmp
rol
call
add
adc
call
jnp
clc
jbe
rcl
pop
cdq
pushf
xchg
cwde
rcr
mov
push
or
mov
lods
les
in
mov
jns
jmp
mov
call
cmp
scas
xchg
push
inc
jp
inc
adc
aaa
in
imul
dec
mov
xchg
cs
mov
sbb
adc
push
test
imul
push
ja
jo
je
push
sbb
dec
loope
adc
test
sti
mul
mov
je
jnp
ss
es
je
stos
add
push
cmp
adc
add
jmp
sar
dec
cld
cmp
jne
nop
sbb
cmp
lods
rcl
cs
loopne
pop
outs
sbb
dec
pop
add
frstor
xchg
jne
call
rol
cmp
or
push
mov
sbb
dec
add
enter
or
jo
into
(bad)
fucomip
and
mov
call
pop
rol
inc
xor
push
mov
mov
add
hlt
lea
jg
adc
jne
outs
mov
push
not
mov
retf
sti
cmp
inc
inc
jno
mov
outs
fstp
jne
xchg
and
mov
fucomip
rol
dec
sbb
cmp
inc
test
mov
pop
movs
mov
stc
inc
adc
popa
push
iret
pop
push
aaa
cmp
mov
enter
inc
(bad)
in
push
call
arpl
sub
push
movs
push
scas
adc
pop
jg
add
cmps
ds
mov
push
jno
sub
es
push
push
and
pop
or
cmp
je
or
jne
movsx
mov
inc
inc
inc
jmp
add
add
mov
test
jge
push
jecxz
sbb
ret
dec
adc
ret
mov
movs
loop
cld
cmp
add
add
jecxz
je
bound
mov
add
jmp
jmp
fiadd
push
pop
dec
adc
outs
mov
push
ficomp
pop
test
add
dec
call
scas
add
inc
(bad)
out
or
cmp
into
cli
out
push
je
pop
jl
fidiv
jae
sub
ja
inc
add
cmp
cwde
stos
add
clc
movs
jbe
pop
xor
mov
dec
or
xor
jne
push
jne
push
into
or
je
or
and
pop
fidiv
dec
add
jbe
push
push
outs
push
mov
push
cmp
sub
rcl
pop
mov
jnp
aas
push
test
or
aam
mov
push
jge
jmp
and
jl
mov
cmovno
or
fdivrp
xor
xor
push
outs
cmp
xchg
push
ss
inc
sub
mov
add
ror
cld
cmc
pop
rcr
lea
mov
mov
pop
inc
mov
repnz
call
int3
jne
fistp
outs
(bad)
enter
xor
or
inc
inc
mov
adc
push
(bad)
or
shr
mov
mov
add
cmp
arpl
and
mov
inc
push
in
adc
adc
jno
adc
lods
inc
or
or
aad
nop
push
pop
or
or
or
(bad)
sbb
in
mov
inc
xor
movs
loopne
add
dec
push
xchg
ror
or
or
pop
mov
sar
lods
adc
inc
adc
and
loope
pusha
in
push
dec
test
imul
or
push
out
out
jle
jae
outs
or
fcom
mov
pop
push
push
push
push
mov
push
int
(bad)
and
cmp
jo
add
test
xor
or
jo
push
dec
xchg
adc
pushw
pusha
jp
jo
ror
ins
sti
mov
push
jns
cmps
xor
and
sar
dec
xor
add
mov
dec
jo
mov
add
xlat
or
or
scas
mov
mov
(bad)
adc
adc
cmps
xchg
jae
mov
push
aas
cwde
sub
or
std
js
loop
xor
ror
xchg
js
fiadd
xor
mov
jo
and
or
inc
mov
add
add
jg
je
cmp
push
sub
and
xchg
jmp
add
(bad)
(bad)
(bad)
aas
sub
jb
je
jmp
cmp
sub
dec
push
cs
adc
jmp
sub
(bad)
sbb
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
add
(bad)
call
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
lock
mov
push
sbb
je
xlat
adc
cmp
ret
pop
pop
push
pop
cmps
(bad)
div
dec
and
push
adc
ds
pop
pop
mov
add
ss
sbb
mov
ret
in
test
fsubr
out
sub
ja
push
inc
(bad)
jge
mov
xchg
cmp
mov
xor
inc
and
outs
ret
cs
push
inc
inc
lock
or
fmulp
clc
mov
pop
mov
mov
movzx
add
or
cwde
dec
add
enter
add
(bad)
aaa
out
or
cmp
jne
cmp
mov
adc
mov
jbe
jp
out
ret
xor
mov
je
add
add
lea
cmp
inc
(bad)
xor
push
cmp
adc
jge
mov
jmp
jle
inc
pop
rcl
cmp
fild
vmwrite
push
jle
ins
pop
retf
jle
xor
inc
(bad)
ss
xlat
shr
inc
add
add
out
mov
xchg
jle
or
adc
imul
mov
inc
mov
ja
cmp
mov
in
add
push
out
inc
xchg
and
das
retf
adc
(bad)
mov
imul
pop
mov
mov
and
xchg
adc
xor
inc
xchg
pop
pop
arpl
cmp
lea
clc
outs
add
sbb
dec
or
loopne
sbb
int3
leave
clc
jmp
test
adc
sbb
pushf
add
dec
jne
pop
push
out
mov
push
mov
inc
or
fcmovb
xchg
in
inc
push
ret
mov
shl
sub
sahf
mov
aam
xchg
xor
iret
fisubr
xor
ret
mov
and
and
fcomip
test
(bad)
dec
pushf
fdiv
mov
sbb
outs
dec
xchg
push
push
or
push
syscall
out
lea
in
mov
mov
outs
mov
cmc
not
ja
add
mov
mov
ss
or
outs
xor
sbb
inc
leave
scas
mov
ficom
nop
push
scas
pop
jmp
fcom
std
repz
adc
cmp
mov
mov
push
push
push
or
pusha
xor
add
dec
sbb
scas
adc
ret
retf
jne
push
jmp
lds
mov
int3
shl
and
add
xor
out
fistp
mov
je
push
xchg
mov
daa
dec
xor
(bad)
mov
mov
mov
xchg
(bad)
jle
jp
pop
rcr
mov
or
add
xchg
cli
dec
add
outs
push
mov
idiv
inc
or
sbb
adc
dec
and
fcmovnu
pusha
jg
jecxz
xor
and
not
or
inc
sahf
(bad)
call
loopne
sar
outs
add
or
arpl
leave
js
neg
call
sar
cmp
jno
fs
aam
cmp
mov
scas
push
add
mov
or
sbb
mov
scas
iret
jne
xchg
daa
mov
out
inc
in
mov
pushf
rcr
cmps
pop
jb
dec
mov
inc
hlt
mov
push
xor
xor
xor
adc
sub
in
adc
or
sub
add
jl
std
add
cmp
push
push
xor
push
push
ret
dec
mov
nop
mov
push
add
mov
pop
call
xor
jl
ficomp
(bad)
mov
jmp
jge
push
cmp
les
mov
repnz
inc
enter
fsubr
adc
add
mov
ss
adc
mov
cmps
or
push
mov
in
or
lds
imul
dec
out
dec
jle
cwde
dec
sbb
add
repnz
rcl
cmp
ret
enter
sbb
cmp
push
add
jo
jl
ja
push
jo
jecxz
or
mov
clc
mov
data16
and
or
xor
jmp
aam
mov
adc
or
adc
inc
push
ja
and
fadd
adc
push
jb
ja
ret
cdq
ss
mov
or
xor
pop
pusha
sub
or
xlat
or
cmp
in
mov
ss
xor
ficom
dec
clc
dec
push
sbb
lock
hlt
jmp
pusha
inc
push
popf
out
and
cmp
mov
xchg
(bad)
cmp
(bad)
ins
or
dec
push
or
and
fcmovu
rol
daa
pop
add
js
lds
inc
call
ja
fcom
inc
jle
mov
cmp
xchg
pop
ja
clc
js
sbb
dec
cld
shr
rol
mov
call
and
adc
xor
hlt
retf
iret
push
test
shl
jl
ret
in
loope
push
and
shl
push
div
jae
movq
in
movs
imul
sbb
(bad)
mov
mov
mov
mov
mov
psraw
stos
dec
or
loope
pop
dec
repz
mov
mov
daa
lock
pusha
rcl
pop
and
ins
rol
outs
lods
xchg
fisttp
movzx
mov
shl
mov
cmp
mov
or
lea
cmp
fs
jge
xor
test
out
fadd
sub
ja
cld
mov
(bad)
std
std
mov
lea
sub
loopne
cmps
out
rcr
rcl
xor
into
pushf
cld
and
add
test
mov
loopne
pop
inc
shl
xchg
movs
adc
add
inc
inc
mov
addr16
mov
add
adc
clc
adc
jmp
data16
pop
xor
and
outs
icebp
adc
push
ss
loopne
retf
fldl2e
push
xor
arpl
jbe
in
xchg
fs
cli
jae
and
dec
pop
sub
cli
sbb
scas
dec
pop
aas
sbb
add
jmp
mov
pop
push
dec
fdiv
loope
lods
pop
pop
jmp
inc
clc
xchg
adc
jnp
xor
xchg
data16
mov
push
cmp
je
rcr
stos
test
push
mov
repnz
xchg
aaa
push
adc
inc
aas
xchg
or
lahf
add
test
jb
or
add
cmp
aaa
add
stc
test
or
cmp
add
or
out
push
rcr
cmp
xor
arpl
mov
pop
adc
or
pop
and
loopne
cmp
rcl
stc
xchg
xchg
(bad)
mov
fisttp
pinsrw
out
js
push
mov
xor
xor
mov
mov
inc
inc
sub
ja
add
push
push
jmp
fnstenv
dec
mov
sti
pop
jmp
into
add
dec
jne
jmp
adc
idiv
dec
add
pop
and
je
mov
cmp
jne
push
adc
add
jg
mov
adc
add
jne
add
jmp
pop
cmp
cmp
data16
std
jne
shr
shr
sbb
ret
mov
push
mov
shr
or
loopne
xor
sbb
loope
add
dec
push
mov
fcomp
out
lods
imul
adc
add
shl
dec
dec
sbb
add
xchg
movzx
inc
cli
cmps
and
scas
sbb
cmp
jbe
pop
and
mov
inc
inc
sbb
xor
scas
cmp
push
je
or
jmp
sbb
ret
inc
inc
test
jl
cmp
jg
add
mov
inc
rep
jmp
pop
and
add
mov
mov
mov
mov
nop
push
mov
push
mov
jmp
xor
mov
dec
movs
and
loopne
adc
pop
jbe
adc
or
ficomp
push
inc
add
pop
int3
mov
cmp
lahf
loopne
sahf
or
or
push
cmp
jmp
mov
mov
or
add
in
xchg
sahf
mov
inc
mov
mov
repnz
cs
pop
add
pop
pop
pop
cmp
out
mov
lds
test
cld
call
jl
fldcw
addr16
sbb
inc
scas
xchg
xchg
pushf
cld
cmp
cmp
sub
jle
mov
push
cld
add
jo
push
je
mov
jmp
xor
mov
dec
xor
or
jecxz
daa
xor
lods
mov
or
int
cmp
push
push
sub
jmp
sbb
in
jne
push
lea
lea
neg
dec
cmp
or
jp
sbb
add
je
mov
jo
and
int3
cmp
push
mov
jo
pop
push
push
sbb
or
add
xlat
or
xor
aam
and
sub
int
cli
pop
or
dec
dec
cmp
sub
sub
data16
mov
sbb
inc
and
mov
cmp
add
das
mov
dec
mov
cmps
(bad)
jge
mov
shl
loope
loope
icebp
(bad)
icebp
xor
mov
rcr
add
dec
jno
xchg
pop
(bad)
cmp
enter
sub
adc
sub
nop
sub
mov
(bad)
fbld
push
lods
cmp
ja
into
dec
hlt
mov
add
pop
xlat
add
push
test
int3
movs
push
(bad)
inc
mov
jb
push
stos
add
outs
jmp
addr16
add
nop
inc
xor
ja
mov
pop
add
inc
and
jne
or
das
or
shl
ja
in
cmp
xor
xchg
int3
imul
mov
shr
cmp
jge
xor
jmp
dec
cmp
jge
sar
push
add
repz
cmp
and
mov
add
add
dec
cmp
loope
(bad)
xchg
jecxz
daa
mov
clc
xor
lock
xchg
out
push
and
shr
push
adc
lock
popa
jbe
sbb
add
mov
sar
mov
push
(bad)
sbb
data16
lock
pop
add
in
push
add
mov
rol
sub
cmp
mov
mov
jle
lea
add
popa
push
inc
mov
inc
jb
mul
inc
push
mov
lea
cmps
adc
scas
dec
xor
ja
pop
xchg
or
xor
xchg
add
jne
sbb
in
push
add
xchg
inc
adc
les
loope
push
sub
adc
addr16
push
adc
mov
jo
xorps
sbb
scas
rcl
in
add
loope
jo
inc
push
jo
push
jmp
jne
sub
js
adc
addr16
mov
xchg
mov
call
mov
jmp
cmp
sub
sub
push
lods
iret
ins
test
mov
retf
pop
outs
stos
test
and
cmp
je
cmp
(bad)
das
stos
fcmovnu
test
mov
cli
inc
cld
add
pusha
inc
addr16
dec
jns
dec
(bad)
bound
mov
loop
pop
ss
rcr
add
dec
sahf
fld
jbe
movs
or
jmp
adc
push
fwait
cmc
push
adc
sbb
or
fcomp
or
dec
jmp
test
adc
push
jmp
(bad)
adc
pop
(bad)
in
mov
int3
rcr
ja
pop
fild
pop
adc
out
aaa
dec
xor
xchg
add
arpl
stos
inc
pushf
sbb
repnz
fcom
(bad)
sub
into
push
dec
jne
inc
daa
jo
mov
xor
test
inc
pop
jo
pop
lea
jmp
popa
(bad)
dec
xor
and
leave
add
add
neg
push
mov
cmp
dec
js
adc
rol
sub
(bad)
(bad)
iret
xchg
adc
add
and
inc
jb
add
mov
lahf
enter
pop
add
cs
ss
jl
nop
jle
dec
cwde
sub
sub
mov
ja
ror
jmp
ficom
lea
mov
or
inc
sbb
arpl
xchg
xor
cmp
hlt
mov
pusha
xor
mov
sub
fsub
fadd
lock
dec
cmp
repz
push
and
mov
sbb
inc
test
add
mov
or
sbb
pop
jle
add
adc
xor
pop
xor
fimul
data16
mov
adc
mov
sub
adc
mov
rcr
and
icebp
pop
fbld
jo
dec
jl
push
(bad)
xor
fild
inc
inc
sub
sub
fidivr
cmp
in
mov
push
(bad)
add
mov
fadd
push
pop
mov
sbb
mov
add
les
sub
ins
and
adc
(bad)
in
pop
jmp
pop
add
ret
cmp
je
dec
inc
shl
add
push
xchg
je
add
and
pop
xor
rcl
outs
aaa
sbb
jge
push
pop
xor
and
jne
or
outs
dec
pusha
jl
mov
add
or
pushw
pusha
aad
popa
mov
pop
cld
bound
mov
dec
and
mov
pop
or
push
jecxz
mov
jnp
inc
in
cmp
popaw
sbb
fadd
jne
sub
jecxz
dec
or
sub
dec
cld
je
or
jne
mov
and
jb
pop
data16
cld
jge
mov
sbb
or
push
jne
mov
xor
mov
and
add
sahf
sahf
shr
mov
das
hlt
pop
loopne
cmp
fs
nop
or
mov
add
push
pcmpeqd
inc
(bad)
in
or
xor
xor
pop
cld
mov
xor
sahf
mov
cmp
add
js
fimul
add
int3
sahf
lock
mov
jmp
cwde
push
jbe
adc
and
sbb
push
test
and
pushaw
xor
ins
mov
sub
mov
rdpmc
clc
pop
mov
mov
fstp
push
(bad)
(bad)
mov
xchg
dec
mov
xchg
scas
stc
test
clc
mov
xlat
sbb
out
cmp
mov
pusha
(bad)
push
cmp
or
adc
and
loop
adc
jnp
push
jmp
movs
jmp
les
xor
mov
aas
push
mov
loope
mov
leave
push
cld
add
push
mov
call
ins
adc
sbb
jge
cs
xchg
ret
out
add
xor
xor
ja
push
add
ja
es
loop
or
sub
je
cmp
aas
mov
cmp
je
cmp
test
add
or
mov
mov
dec
push
mov
or
adc
jmp
push
mov
cld
and
add
dec
cs
adc
div
cmp
pop
jmp
cmp
mov
cmps
nop
lock
mov
push
cs
lahf
mov
mov
pushf
sbb
mov
ret
mov
sar
add
push
jmp
push
push
inc
out
mov
out
inc
and
jb
pop
mov
add
push
mov
loopne
cmp
jg
imul
ret
mov
mov
xchg
ror
cmp
mov
mov
jmp
es
or
xor
mov
jnp
inc
ds
jnp
lahf
push
jmp
test
lds
sbb
loope
int3
pop
and
mov
push
ja
js
adc
adc
mov
rcl
xchg
jno
mov
push
push
jp
mov
rcr
retf
out
js
mov
and
push
xchg
or
fild
push
adc
push
push
xor
push
xorps
fsub
mov
int3
test
outs
scas
cmp
mov
adc
xor
(bad)
mov
lea
outs
cld
push
clc
loopne
popa
adc
or
push
add
sar
test
fidiv
inc
add
mov
xor
mov
xor
or
push
or
pop
xor
or
or
xchg
mov
or
inc
xor
xor
push
cmp
lahf
push
mov
jnp
push
daa
mov
and
pop
jmp
and
ins
lea
in
adc
fidiv
adc
push
pop
dec
loop
inc
jbe
out
std
mov
aas
add
sar
xor
ins
in
and
and
xchg
cwde
add
cs
jne
aad
pop
or
sbb
mov
or
push
jg
ins
and
mov
sbb
dec
pop
inc
ret
test
xchg
pop
pop
push
faddp
jo
adc
sub
lock
ret
dec
jne
sub
js
setns
push
sub
push
cmovle
mov
adc
dec
sar
cmp
cmp
push
cmps
or
ja
inc
add
clc
add
fld
aaa
inc
outs
repnz
js
sbb
add
cmp
add
cmp
jmp
iret
push
iret
adc
or
sbb
lea
out
adc
jg
jge
inc
jb
dec
loop
pop
push
cmp
pop
xor
cmp
jle
or
jbe
push
inc
stos
inc
adc
out
mov
push
lea
rcl
icebp
push
test
movs
jmp
lea
(bad)
fidivr
pop
ret
aas
mov
adc
mov
push
push
sbb
mul
mov
add
int3
(bad)
sub
fs
add
inc
adc
pop
pop
sti
ret
cli
inc
push
pop
dec
jmp
loope
(bad)
pop
xor
xor
sub
(bad)
push
sbb
sar
(bad)
xor
xor
sub
sbb
jne
cmp
jb
mov
out
pop
div
xchg
add
retf
sub
cwde
jl
sti
les
and
shr
rcr
ror
fisttp
mov
ret
add
shl
(bad)
push
mov
imul
jg
or
pop
cli
sub
rol
fadd
cwde
mov
shr
xchg
push
and
sub
sbb
leave
mov
push
das
or
je
mov
mov
outs
add
push
not
loopne
rcl
(bad)
rcl
cmp
jb
in
cmp
jb
sub
push
clc
ficomp
out
inc
loop
repnz
repz
xchg
fwait
pop
sub
pop
push
jns
neg
neg
add
cmc
outs
xor
neg
neg
sbb
int
iret
mov
mov
pop
test
(bad)
ss
not
xlat
push
add
push
(bad)
sbb
mov
and
divps
jmp
add
push
mov
jmp
test
and
mov
push
jge
add
cmp
jb
add
pop
sbb
jne
movs
mov
inc
(bad)
jmp
jle
inc
cld
setg
jmp
xor
je
jb
outs
push
pop
je
cdq
adc
or
fild
cwde
sbb
adc
dec
and
and
mov
test
fcom
cli
inc
lahf
div
lods
mov
add
es
stc
push
jb
outs
pop
call
stc
sub
mov
ds
cmovno
or
push
or
jne
or
jb
aas
jmp
pop
sub
inc
and
jbe
jmp
push
and
(bad)
cdq
(bad)
pusha
mov
shl
add
ret
fwait
or
scas
push
adc
inc
xor
ins
inc
pusha
adc
cmps
push
ret
jno
jnp
data16
sar
adc
ficom
fisubr
jae
pop
sbb
cmp
dec
inc
int3
add
setle
int3
sub
jg
retf
push
scas
inc
daa
movs
call
push
adc
pop
pop
push
push
fs
jl
scas
fcomp
sbb
aaa
sbb
xchg
pusha
add
pushf
shl
movsx
shl
repz
or
ror
clc
pop
mov
inc
or
adc
shl
mov
test
inc
xchg
call
cmp
or
es
jno
pusha
ss
cli
mov
out
ret
adc
mov
rcr
and
adc
pop
xchg
movs
dec
push
dec
dec
jne
sub
xchg
adc
mov
pop
into
xchg
and
sub
mov
stos
jmp
push
getsec
cs
icebp
cdq
and
push
cmc
adc
jbe
fisttp
xchg
sbb
nop
mov
adc
pop
in
iret
cdq
add
movs
sbb
sti
jns
adc
or
push
loop
sahf
and
rcr
sbb
xchg
or
iret
push
hlt
mov
mov
pop
and
add
in
mov
adc
sbb
mov
cmp
dec
mov
in
or
inc
ins
in
sti
push
cld
mul
inc
clc
movzx
push
clc
adc
add
pop
in
or
sbb
inc
call
call
or
repz
(bad)
cdq
idiv
cmp
lea
adc
fidiv
cmp
jne
push
jo
cmp
jle
cs
sbb
cmp
nop
ret
mov
sub
inc
mov
or
call
jp
shr
nop
jmp
cmp
pop
js
mul
sysexit
jae
xchg
dec
jnp
xor
and
push
mov
and
cmps
xor
dec
push
adc
sbb
and
cs
dec
adc
ja
pop
fld
or
sbb
sub
mov
in
or
add
(bad)
jle
dec
jmp
out
lock
jmp
pop
lock
lock
pop
push
lock
adc
mov
out
shl
ds
jecxz
adc
fst
mov
es
jl
inc
xor
push
ret
xchg
inc
dec
jne
push
mov
add
stc
shl
ins
ins
cmp
daa
loope
mov
push
cmp
out
pop
cmc
retf
adc
js
cmps
xchg
jmp
pop
add
push
jne
pusha
in
push
pop
daa
and
scas
inc
lock
das
jne
lock
jne
or
xor
cld
jmp
add
outs
mov
loop
call
mov
cmp
sar
cmp
jle
fisubr
out
jbe
or
mov
adc
rol
pop
push
and
sahf
xchg
lock
mul
lods
mov
ins
hlt
dec
mov
jmp
mov
enter
ja
fstp
push
lock
push
test
scas
push
movs
(bad)
(bad)
xor
inc
retf
ror
mov
mov
loopne
cmps
push
mov
xor
add
and
(bad)
inc
cmp
jle
lock
jne
push
mov
pop
push
shr
dec
clc
push
or
cmp
fcomp
bound
jl
inc
daa
ror
retf
pushf
std
lods
mov
dec
cwde
push
push
push
mov
inc
pop
pop
mov
ins
push
dec
ficom
push
jo
jbe
bound
add
inc
jb
dec
lds
mov
jle
in
je
ins
add
add
or
ret
jnp
or
add
inc
cmp
jle
mov
adc
icebp
ja
jmp
add
dec
outs
dec
adc
add
shl
inc
inc
mov
stc
scas
sub
cmp
je
(bad)
or
jo
ds
clc
(bad)
data16
pop
inc
inc
dec
sub
dec
add
adc
mov
adc
repnz
push
xor
mov
lock
add
cmc
call
dec
jne
mov
call
add
push
call
test
(bad)
mov
mov
and
ror
or
hlt
test
(bad)
scas
inc
dec
jne
ja
in
sbb
pop
sub
add
mov
scas
inc
adc
neg
out
cmp
hlt
std
test
pop
xchg
(bad)
sub
dec
jne
push
xor
push
push
dec
lock
cmp
ret
mov
int
fwait
cdq
stos
xchg
xor
inc
sbb
jbe
cmp
add
lds
fidiv
cmps
sti
jo
xor
or
jne
fnstenv
push
clc
hlt
div
(bad)
sti
sti
sbb
movs
pop
add
sub
dec
popa
outs
je
mov
gs
inc
push
pop
je
popa
outs
ins
pop
outs
bound
std
mov
jmp
push
outs
cmp
sub
sub
push
ins
or
mov
sub
push
push
xchg
sbb
(bad)
ins
mov
inc
push
push
push
jno
es
add
popa
imul
sub
dec
pop
popa
sub
popa
addr16
dec
es
mov
jae
ins
loopne
ins
in
outs
jae
pop
pop
sti
cs
das
pop
fs
inc
inc
sub
sub
push
loopne
mov
outs
outs
in
sub
mov
jg
je
ins
sbb
adc
inc
dec
(bad)
sub
jb
dec
imul
inc
mul
in
or
or
ins
push
or
gs
dec
int3
xchg
xchg
in
xor
ja
pop
push
pop
mov
cmp
push
aaa
pusha
xchg
xor
fistp
or
aaa
outs
aaa
cmps
cwde
loopne
mov
sbb
sub
push
data16
aaa
xchg
rcr
fisub
aaa
dec
dec
inc
das
out
aaa
adc
pop
push
js
mov
cmp
and
setae
sbb
cmp
ret
test
or
add
or
xor
add
sbb
int
call
je
push
or
jb
sub
push
cwde
jne
addr16
push
inc
shr
add
or
call
add
add
adc
test
push
ja
mov
inc
mov
fistp
rol
jbe
jne
in
push
jmp
popf
cmp
mov
sbb
sbb
adc
mov
rol
jg
dec
or
add
mov
push
sti
mov
ins
and
les
push
sub
inc
dec
cmp
scas
mov
(bad)
sub
jmp
in
or
xor
setae
pop
sbb
mov
pop
pop
outs
rol
sub
rcr
xor
pop
(bad)
push
loopne
js
adc
mov
ror
jmp
mov
adc
mov
rcr
cmp
shl
push
push
add
loopne
dec
add
cmp
mov
inc
jnp
sbb
scas
mov
sub
or
mov
test
hlt
mov
jmp
data16
and
add
mov
movs
jmp
adc
adc
mov
mov
push
add
mov
fcomp
stos
shl
leave
mov
jl
inc
mov
mov
jmp
(bad)
dec
clc
xor
sub
dec
mov
jb
adc
mov
scas
loopne
cmp
jb
mov
add
shr
cmp
fucomp
ret
(bad)
push
jae
sti
dec
jmp
sbb
cmp
shl
es
xor
icebp
mov
jmp
jbe
les
cmp
sbb
mov
arpl
xlat
sub
test
dec
fld
jge
push
push
ficom
cmp
daa
movs
sbb
push
fs
and
lea
push
mov
push
pushf
sbb
sahf
inc
rol
inc
test
push
add
mov
sub
cmp
lods
aas
add
sbb
dec
xchg
fiadd
sub
mov
aam
mov
retf
push
nop
mov
cmp
jne
pop
sbb
and
in
pop
rol
pusha
test
pop
out
add
mov
lock
adc
adc
sbb
inc
pusha
jbe
dec
cmp
cmp
inc
mov
mov
das
push
ret
inc
and
fdiv
pop
loop
and
inc
lock
loop
mov
es
cs
movzx
aad
pop
or
rol
jmp
inc
and
mov
or
or
imul
add
ins
mov
fsubr
push
mov
rcr
inc
enter
lock
cmp
int3
xor
test
push
and
and
adc
or
xchg
xor
cmp
jne
call
mov
mov
cmp
popa
test
lods
add
fistp
mov
cli
cwde
leave
inc
ret
adc
jns
dec
sbb
pop
jne
(bad)
mov
imul
mov
xchg
leave
xchg
ret
je
aaa
adc
or
je
mov
into
or
adc
and
mov
(bad)
mov
sub
fisttp
inc
sahf
cmp
in
mov
dec
mov
push
fcom
movs
das
jge
mov
js
jge
pop
inc
fsubr
ret
inc
add
adc
or
pop
jne
jb
retf
pop
lahf
addr16
sti
inc
push
call
ss
push
hlt
add
sbb
sub
mov
mov
ror
add
aam
ret
mov
and
mov
cmc
mov
js
pop
data16
rcr
mov
inc
mov
pop
(bad)
and
jmp
mov
pop
mov
sub
sar
jns
adc
inc
add
je
(bad)
in
daa
rcr
cwde
icebp
fist
mov
xchg
push
(bad)
sub
sar
outs
rol
fisttp
in
ret
inc
cwde
imul
sar
mov
(bad)
sar
dec
rol
inc
mov
lea
xor
ds
test
in
fs
mov
jo
test
scas
jge
mov
push
mov
lea
nop
sar
test
pop
loopne
scas
ror
dec
arpl
ins
sti
or
dec
sub
dec
ror
ds
cmp
imul
or
scas
dec
ficom
je
test
ins
gs
daa
(bad)
rcl
fiadd
in
int
fs
push
in
adc
pop
fcmovb
into
sar
jmp
jo
nop
in
aas
xor
push
pop
mov
ret
mov
push
cld
mov
loopne
add
dec
call
movs
inc
in
les
in
je
cmp
into
jg
pop
cmp
add
ja
cmp
nop
or
out
and
inc
or
fnstcw
enter
pop
jg
sbb
pop
xor
push
inc
mov
xchg
clc
pop
push
mov
xchg
adc
xchg
mov
dec
mov
push
(bad)
xchg
xchg
fcom
push
xlat
outs
test
call
add
adc
cmp
test
xlat
mov
outs
add
add
popa
(bad)
mov
mov
add
bound
arpl
loop
mov
cs
or
(bad)
aaa
rcr
and
inc
push
daa
imul
data16
inc
and
ds
shl
inc
dec
ror
inc
inc
cmp
fadd
xor
xor
pop
cmp
xor
adc
mov
inc
in
adc
or
inc
je
ins
fisttp
or
pop
xor
out
push
std
jle
inc
mov
add
(bad)
icebp
mov
jle
lock
jmp
in
xchg
repnz
mov
mov
xchg
mov
aas
cld
lahf
add
cdq
mov
xchg
ret
test
je
(bad)
sbb
or
test
jmp
das
hlt
pop
mov
arpl
fisttp
and
sbb
stc
retf
fwait
adc
mov
mov
repz
enter
jg
(bad)
dec
cmp
jg
push
sbb
sub
call
ja
je
mov
sub
mov
test
mov
cwde
neg
out
mov
pop
or
mov
jle
leave
call
mov
(bad)
in
push
or
fsub
dec
in
add
xor
or
rol
add
push
lahf
(bad)
xor
push
movzx
cdq
dec
sub
hlt
mov
or
xchg
test
sbb
dec
xor
fcomp
sbb
pop
in
add
pop
pop
xchg
pusha
xor
mov
or
inc
xchg
xchg
xor
das
mov
and
xor
mov
pop
cmp
lahf
sub
mov
sbb
cmp
jl
push
inc
mov
adc
or
dec
into
fcmovne
jmp
bound
jnp
xor
jmp
or
dec
in
push
mov
int
or
lock
adc
mov
jne
dec
test
dec
call
dec
cmp
or
scas
mov
leave
hlt
scas
push
stc
xchg
sbb
loope
push
pushf
in
adc
pop
clc
inc
adc
xor
nop
mov
xor
test
scas
cmp
inc
sub
lea
sub
lahf
lock
pop
sbb
movs
mov
adc
add
add
xor
and
loopne
cmc
sub
ret
pushf
xchg
ins
(bad)
shr
push
call
repz
pushfw
push
in
out
inc
dec
pop
mov
xlat
push
or
dec
les
maxps
outs
sub
and
xlat
add
mov
mov
sbb
add
shl
lds
pop
je
out
(bad)
out
daa
mov
(bad)
and
inc
add
(bad)
dec
cmp
mov
mov
inc
adc
push
mov
faddp
inc
clc
pusha
ret
dec
push
mov
lea
xchg
pop
mov
mov
cmp
adc
mov
jnp
cwde
lods
dec
cmp
push
inc
call
push
mov
or
shl
or
pop
je
sbb
push
cmp
cmp
loopne
pop
int3
pop
jmp
mov
mov
mov
daa
sbb
or
jbe
jne
xchg
ret
cmps
mov
lahf
or
push
push
mov
cwde
or
mov
dec
add
add
mov
add
mov
blcs
push
inc
or
retf
push
data16
pusha
sbb
adc
ds
mov
outs
adc
pop
rol
out
(bad)
rol
sbb
xchg
add
and
scas
and
fucomi
out
retf
xadd
add
ret
imul
sub
sbb
(bad)
xor
push
pop
fild
sub
leave
ret
and
xchg
outs
adc
and
and
adc
and
dec
sub
add
sbb
dec
cmp
mov
mul
mov
loop
lods
push
add
or
pop
or
pop
dec
shl
mov
jnp
push
mov
push
in
leave
push
cmp
(bad)
fsubr
lea
cwde
jle
ret
pushf
and
add
inc
mov
and
mov
arpl
jbe
cmp
ja
and
xlat
icebp
cmp
dec
and
jmp
dec
xor
sti
in
mov
pop
test
adc
mov
push
loop
cmp
sub
mov
inc
inc
(bad)
sub
sub
sbb
in
xor
inc
ss
mov
adc
push
adc
add
js
push
cld
shl
lock
xor
add
inc
(bad)
fs
and
das
push
data16
loopne
mov
or
add
push
mov
and
test
sbb
xchg
call
xchg
lock
jecxz
sahf
fadd
loopne
aas
and
fimul
lock
sub
mov
fs
mov
out
mov
adc
lea
cmp
pushf
mov
jns
or
vandnps
je
xor
(bad)
hlt
hlt
outs
sub
or
mov
push
(bad)
fs
mul
sbb
lds
(bad)
sti
or
(bad)
fidivr
or
and
lea
mov
fs
xlat
add
ror
ins
or
push
pop
or
dec
ret
jge
and
push
add
add
xchg
movs
rcr
icebp
pop
ss
xchg
mov
cmp
push
out
sbb
out
fdivr
fsubr
aas
sbb
nop
sbb
inc
pop
fisub
inc
add
inc
dec
sbb
and
xor
sbb
lea
xor
jno
inc
fisttp
pop
sub
sub
das
cmps
cmp
aam
inc
test
sbb
test
and
arpl
(bad)
and
in
loopne
clc
leave
leave
mov
xor
add
dec
push
or
test
and
dec
mov
xchg
mov
cmps
inc
daa
in
add
ja
not
les
dec
xor
add
jne
mov
pop
loopne
cmp
cld
cmp
jae
push
adc
sbb
out
cwde
jecxz
rcr
(bad)
arpl
rcl
mov
call
push
or
adc
push
push
fild
push
adc
dec
add
fadd
aas
cmp
mov
test
adc
and
jg
add
and
and
or
lods
dec
hlt
cmp
jne
shl
adc
mov
adc
or
cmp
jne
mov
cmp
jne
pop
pusha
push
dec
sbb
or
inc
or
inc
or
xor
add
nop
xor
mov
or
(bad)
xchg
pop
pop
ffree
push
data16
adc
paddsw
mov
ins
sete
pop
pop
das
dec
adc
xchg
xchg
mov
mov
imul
fs
push
js
push
add
outs
and
sbb
and
or
pop
ja
push
ds
scas
mov
out
add
inc
xchg
les
pop
pop
add
sub
push
les
shr
les
movs
cmp
sbb
es
push
cmp
or
cdq
sub
xchg
and
popf
sbb
scas
aam
mov
fnsave
fcom
sbb
rcr
pop
mov
mov
stos
scas
push
and
add
fdiv
or
sbb
mov
sbb
xchg
lea
fiadd
adc
jecxz
and
and
ret
xor
sbb
push
jo
ja
mov
fcom
jnp
add
mov
and
jge
fsubr
add
rcr
enter
(bad)
jg
fild
add
dec
mov
mov
mov
xor
jg
ret
xchg
add
sti
mov
inc
add
push
sbb
push
loopne
and
out
pop
dec
ret
ja
bound
in
mov
idiv
or
jge
jbe
xor
loope
sbb
bound
or
nop
mov
sbb
pusha
add
xchg
ret
mov
loope
pop
cmps
pusha
mov
cmp
ret
mov
inc
icebp
ffree
rol
mov
dec
mov
dec
in
ds
cmps
aaa
add
mov
dec
push
hlt
pop
retw
mov
adc
pop
ins
leave
mov
pop
push
pop
add
movzx
pop
ret
pop
lods
or
leave
mov
adc
lock
ins
jb
test
inc
add
cmps
add
cmp
sahf
mov
or
inc
cs
sbb
sbb
mov
mov
add
sbb
mov
add
inc
test
mov
(bad)
xor
and
pop
ret
mov
mov
inc
daa
adc
ror
es
mov
(bad)
adc
test
loopne
shl
dec
(bad)
mov
pushf
adc
outs
mov
add
and
cwde
ret
cdq
ds
nop
sbb
dec
or
(bad)
aad
or
mov
jne
(bad)
and
or
inc
aas
addr16
scas
rcr
sbb
dec
mov
xchg
mov
push
inc
ins
jo
mov
or
pushf
adc
aad
daa
add
mov
cmps
pop
dec
jmp
sbb
push
inc
push
fild
jb
imul
rcr
aaa
cmp
push
iret
lock
aam
out
push
jnp
outs
aas
inc
push
mov
jg
jmp
inc
pop
add
pushaw
pop
dec
cli
out
mov
jmp
imul
xor
inc
retf
lods
aam
fmul
bndstx
push
sub
push
js
push
and
cmp
call
dec
adc
inc
jmp
xor
loope
lds
ror
or
push
jmp
adc
(bad)
mov
sbb
daa
data16
or
add
lods
xchg
popa
xchg
movs
xchg
pop
scas
dec
push
call
in
adc
inc
fsubr
sub
mov
jne
test
cmp
sar
jne
cmp
ror
jmp
repz
mov
lea
xor
bound
movs
add
pop
jo
or
dec
pop
xchg
fsubr
mov
inc
out
dec
jmp
sbb
mov
lahf
fwait
cmps
add
jne
mov
inc
fidiv
(bad)
and
arpl
fs
xchg
push
cmp
out
mov
mov
xlat
(bad)
shl
jmp
inc
or
fwait
cmps
fidivr
cmc
sub
mov
bound
fild
push
sar
cld
retf
ret
cmps
cmp
jle
jp
jae
sub
stc
sub
pop
dec
and
mov
sub
sbb
or
inc
cmp
push
xchg
fcomp
inc
stos
sub
push
test
mov
jbe
nop
sahf
push
fwait
push
adc
dec
xor
sbb
fnstenv
inc
inc
xor
pushf
adc
add
jo
add
or
jne
repnz
scas
adc
loope
pop
xchg
jno
adc
lea
jge
addr16
xchg
jg
sub
das
call
pop
xchg
or
jg
push
dec
pop
aas
mov
inc
jns
inc
(bad)
jne
mov
data16
sbb
in
inc
or
push
and
push
lock
mov
or
xchg
jmp
movs
mov
cli
push
mov
leave
leave
xchg
nop
mov
test
pop
jl
or
call
add
mov
and
std
sub
dec
push
mov
clc
call
pusha
movs
or
add
push
mov
mov
lahf
mov
ins
into
and
mov
mov
add
jns
push
sub
ret
mov
lock
and
ret
push
(bad)
fadd
mov
arpl
fist
mov
dec
sub
cmp
or
or
mov
lea
mov
test
add
js
movs
pop
lea
pop
mov
loopne
push
mov
pop
push
inc
and
push
daa
mov
jle
loope
pop
sbb
or
cmp
out
loope
sbb
mov
sbb
sub
push
adc
sbb
dec
adc
jmp
(bad)
sbb
dec
sbb
in
sbb
test
out
sar
push
enter
lock
fucomp
or
mov
sar
mov
in
add
pop
mov
jne
mov
inc
bound
mov
push
out
add
push
loop
push
fisttp
mov
data16
sub
push
mov
add
sbb
add
clc
add
cmps
clc
shl
add
test
jp
loopne
addr16
cld
shr
mov
pop
inc
pop
pop
push
mov
or
out
fdivr
inc
xchg
pop
repnz
adc
sbb
adc
jb
jmp
add
or
xchg
mov
dec
pop
jmp
inc
sbb
enter
loopne
cdq
add
fild
in
in
and
or
push
fstp
mov
cld
fimul
(bad)
cmp
je
cmp
xor
outs
loope
cmp
lock
mov
stos
mov
or
ret
push
fadd
push
lahf
or
jnp
jge
test
add
scas
sub
scas
or
mov
ja
inc
add
cmp
mov
cmp
call
mov
cmp
movs
rol
sub
scas
into
in
nop
inc
loopne
jbe
add
or
rcr
cmp
inc
and
adc
xor
or
cmp
xor
inc
cmp
xor
dec
enter
jbe
mov
jg
mov
or
push
jp
rol
mov
in
push
mov
push
add
mov
or
push
push
pop
sbb
pop
jmp
fimul
stos
pop
movs
test
and
mul
sub
xor
lods
mov
je
pusha
push
push
test
xchg
mov
hlt
add
popf
xlat
imul
test
mov
(bad)
jl
dec
add
jns
jae
jnp
inc
or
sbb
pushf
imul
retf
dec
sbb
inc
or
in
loopne
pop
js
ret
(bad)
push
sbb
sbb
or
not
retf
loope
adc
mov
push
(bad)
mov
mov
jo
or
sub
es
and
push
add
cmp
push
les
add
add
or
clc
sbb
push
outs
mov
push
lock
cmps
or
int3
pop
cmp
jne
arpl
push
xor
add
jne
loopne
mov
and
aad
mov
je
mov
inc
loop
lea
(bad)
cmp
jbe
push
xchg
fcom
mov
repnz
enter
add
xor
xor
jnp
out
fadd
cld
neg
lock
shl
mov
inc
cs
sub
dec
sahf
add
mov
push
dec
fimul
sbb
fld
inc
dec
je
mov
cmp
je
movzx
adc
cmps
jo
xlat
push
push
jmp
int3
rol
add
pop
jne
scas
fcomp
xchg
push
(bad)
and
repnz
mov
mov
loop
xor
dec
push
mov
cmp
jb
or
arpl
retf
or
or
pop
add
div
(bad)
jg
lock
loopne
es
adc
push
push
je
imul
jb
(bad)
sbb
add
or
jns
dec
(bad)
jae
gs
cs
jns
gs
add
outs
add
push
inc
jne
add
ins
imul
add
mov
or
outs
outs
jb
adc
arpl
je
scas
sbb
in
inc
mov
xchg
scas
jnp
call
outs
outs
xchg
or
xor
addr16
inc
pop
sbb
jo
ja
fs
push
push
add
mov
out
lea
das
pushf
adc
push
cdq
addr16
add
push
sbb
std
cmps
add
test
inc
add
inc
xacquire
addr16
adc
xchg
add
movs
cmp
mov
pop
cmp
pop
dec
or
or
outs
jo
inc
fdivr
loope
jne
and
cmp
adc
sahf
xor
inc
adc
aaa
mov
gs
adc
(bad)
into
push
test
pop
dec
pop
aas
popa
inc
(bad)
push
(bad)
punpcklwd
bound
fisub
ror
ror
jl
jg
add
cmp
mov
dec
hlt
popa
outs
movs
adc
clc
idiv
adc
push
dec
jae
gs
push
and
or
int3
hlt
jle
push
ins
gs
or
jecxz
sub
mov
mov
sub
xchg
dec
js
xchg
cmp
cmps
sahf
xchg
test
test
dec
ror
jo
enter
or
jecxz
inc
xchg
movs
adc
inc
sub
aad
enter
movs
and
aas
popa
and
mov
jno
aad
or
enter
aad
test
inc
nop
mov
inc
aad
pop
ins
add
(bad)
push
push
retf
cmc
and
stos
adc
adc
add
mov
int
cmp
daa
test
push
outs
xchg
and
les
push
push
gs
(bad)
sub
push
adc
popa
adc
addr16
leave
dec
ins
push
into
popa
add
adc
add
dec
int3
loope
jo
jbe
dec
sub
cmp
or
jle
daa
rol
jb
fiadd
int3
add
jg
ret
sbb
gs
out
mov
jae
jl
push
popa
retf
push
rol
imul
clc
push
gs
outs
push
push
inc
ss
(bad)
lahf
jmp
or
xchg
add
int3
ret
xchg
les
das
rcr
loope
inc
pop
mov
cmp
mov
and
outs
call
pop
push
inc
and
lock
stc
retf
cmp
push
cmp
adc
pop
add
outs
push
push
mov
push
jae
dec
gs
or
imul
rol
inc
outs
je
outs
ins
pop
mov
cli
fs
xchg
adc
and
cdq
jo
ds
xchg
leave
sbb
push
in
ret
outs
stos
in
scas
jmp
les
push
xchg
push
and
stc
and
add
mov
sbb
mov
add
popa
push
mov
dec
jb
and
push
inc
add
pusha
or
push
lds
xchg
in
add
mov
pop
mov
scas
or
adc
mov
adc
mov
retf
or
jb
hlt
mov
xor
shl
jo
sub
and
imul
test
xchg
pusha
and
test
and
popa
rol
ins
pop
xor
popa
xor
mov
inc
adc
xor
scas
xchg
repz
xchg
shl
aaa
add
pop
push
add
xor
push
xor
or
ret
mov
jge
or
mov
ds
cmp
fdiv
inc
dec
pop
and
or
ins
add
adc
push
lock
inc
add
mov
test
jne
inc
mov
add
jecxz
pop
pop
lock
mov
xchg
add
pop
push
loopne
les
shl
mov
pusha
push
movs
loopne
sub
mov
sti
cmp
or
push
aas
cmp
push
adc
test
stc
add
adc
add
test
xlat
add
pop
add
cmp
mov
mov
push
hlt
shl
scas
in
lock
add
clc
or
add
jae
popa
jbe
idiv
xor
ja
(bad)
outs
out
gs
xchg
push
imul
adc
popa
outs
mov
pop
push
sub
pop
push
push
dec
dec
sahf
mov
les
inc
ja
fldz
fcomp
hlt
(bad)
dec
fstsw
sahf
jae
fld
fdiv
add
fstp
fwait
nop
pusha
loopne
and
fwait
jmp
inc
jbe
inc
ja
std
movs
or
fldpi
fsubr
ins
xor
jle
cmps
jne
es
or
fisttp
leave
mov
xchg
(bad)
daa
jae
aas
mov
(bad)
and
cmp
enter
cmp
je
dec
ret
mov
ret
fidivr
repnz
or
mov
add
mov
sub
sub
aaa
pusha
fs
or
shl
sub
push
(bad)
lods
inc
pop
cwde
movsx
add
inc
and
pusha
add
das
sub
ret
push
push
mov
loopne
adc
movs
movs
sar
jge
data16
mov
outs
dec
lods
adc
sbb
pop
add
adc
adc
or
fidiv
mov
sub
or
dec
or
pop
inc
ror
inc
out
mov
adc
adc
or
aas
and
aas
arpl
mov
pop
dec
mov
fild
dec
popa
out
idiv
rcr
fsubrp
fmul
fild
sbb
sbb
or
push
pop
lock
fisttp
iret
mov
xchg
std
pop
dec
ret
add
add
push
mov
push
pop
add
push
mov
rcr
bound
in
icebp
mov
setae
add
sbb
jle
retf
add
rol
movs
mov
in
unpckhps
mov
mov
retf
ss
lock
pop
loop
push
sub
and
sbb
sub
adc
outs
out
enter
sub
fxch
je
mov
pop
dec
pop
test
mov
push
cmp
add
fmul
cmc
adc
leave
loop
repnz
(bad)
mov
add
jb
adc
mov
data16
inc
add
lock
or
xorps
add
int
test
loopne
rol
push
ret
and
push
sar
or
and
jge
xchg
movs
add
push
push
or
stos
(bad)
jecxz
adc
mov
mov
cmps
xor
or
jge
js
ins
loopne
and
aam
imul
push
jnp
int
push
or
inc
or
fistp
xchg
cmp
jo
scas
mov
push
or
and
fmul
lock
or
or
dec
dec
and
sub
imul
or
or
sub
or
(bad)
jg
ins
xor
mov
out
sub
repz
stos
pop
xchg
das
test
cmp
mov
xor
add
or
pop
lock
xor
sbb
add
pop
lods
loopne
jl
cli
xor
cmp
jl
cmp
jge
inc
mov
or
push
add
inc
push
push
jo
push
scas
loopne
dec
ror
inc
hlt
sub
or
sar
pop
sbb
mov
dec
or
mov
pusha
aaa
fisttp
jl
or
lods
jl
mov
pop
mov
xor
mov
mov
imul
pop
test
call
mov
les
aaa
and
adc
test
inc
and
lea
xchg
mov
jle
or
ret
jbe
ret
push
or
or
jle
add
in
addr16
inc
xor
shl
mov
adc
cmp
scas
jae
cmp
or
mov
pop
dec
jne
xchg
mov
jmp
mov
bound
sub
je
lea
xor
push
or
add
inc
inc
jne
xchg
ret
add
add
cmps
push
(bad)
lahf
mov
ss
cmc
xor
sbb
(bad)
ret
and
and
div
neg
pusha
add
je
ins
add
inc
dec
pop
or
inc
(bad)
dec
mov
and
sar
and
add
push
retf
push
and
push
cmp
ret
jg
lock
push
cmp
sub
jb
jmp
inc
retf
retf
push
and
sub
push
cld
loop
push
add
in
ja
sub
or
or
add
or
gs
cmp
push
and
xor
int
cmps
inc
push
pop
jmp
jae
lds
call
popa
or
xchg
outs
psubusb
push
jmp
aaa
mov
ror
sti
adc
cmp
add
pusha
rcr
sbb
sub
je
inc
test
sub
rcl
add
aaa
test
cmp
or
ds
push
mov
mov
(bad)
fild
adc
jl
imul
sub
std
push
aad
mov
fild
push
(bad)
clc
sbb
pop
lea
pop
add
push
in
(bad)
or
push
sar
sbb
xor
sub
mov
aaa
pop
jnp
mov
lds
ror
push
int
clc
in
xchg
push
rcr
xchg
mov
mov
jno
sub
mov
rcl
dec
hlt
add
lahf
sub
(bad)
pop
push
mov
and
data16
sub
or
call
pop
pop
cmp
enter
xor
or
add
add
inc
fsub
and
nop
push
pusha
das
mov
(bad)
or
les
xor
cmp
add
mov
out
loop
pusha
shl
out
add
clc
jbe
scas
sbb
xor
add
sub
add
add
add
add
push
sub
pop
loope
xchg
inc
sub
adc
inc
lock
and
cmp
out
test
sub
test
jo
out
add
out
sbb
mov
jp
xchg
ror
(bad)
xlat
inc
inc
adc
pop
loope
and
push
mov
add
ror
mov
cmp
or
add
push
add
cs
add
add
setb
fcmovb
mov
add
push
inc
pop
add
aam
push
sbb
push
outs
ret
nop
je
or
pushf
cmp
mov
aas
add
outs
or
mov
pop
push
add
out
ja
scas
sub
fsubr
sbb
fsubr
bound
fucomip
pop
daa
ds
lock
inc
add
test
fisub
ret
adc
ss
push
cs
jne
loope
push
je
xor
ret
add
push
imul
nop
adc
jo
shr
pop
or
gs
nop
or
nop
hlt
adc
inc
outs
jb
cmp
daa
lock
arpl
jp
pop
bound
dec
outs
jne
sbb
jge
imul
js
popfw
inc
fisttp
ins
jo
sti
push
dec
xchg
pop
xchg
or
cmp
jns
div
test
mov
hlt
outs
ja
je
or
in
mov
jae
or
jmp
jae
jmp
ffreep
cmps
or
test
popa
jb
popa
jae
mov
arpl
push
jo
inc
push
dec
rcr
adc
pop
test
jae
sbb
inc
ins
cmps
xor
jmp
aas
hlt
mov
arpl
xor
or
inc
gs
scas
clc
(bad)
mov
or
push
jp
popa
bound
jo
imul
adc
mov
fwait
aam
fwait
jno
add
adc
test
push
xor
hlt
jb
outs
pushw
outs
inc
ins
shr
fld
mov
sbb
inc
out
(bad)
jo
xor
iret
adc
dec
jmp
ins
adc
adc
es
shr
mov
or
push
push
ins
es
adc
and
xchg
push
sbb
dec
jne
fwait
sbb
xchg
pusha
jge
pop
jae
xor
or
or
pop
sub
and
push
fisub
add
popa
lds
xor
push
sbb
outs
sbb
jae
or
jmp
arpl
or
jb
xchg
or
inc
repz
arpl
adc
mov
je
or
bound
or
or
xchg
push
cmp
(bad)
pop
push
mov
jbe
in
jo
ficom
es
adc
push
movs
or
inc
or
and
ret
add
and
or
mov
scas
push
jmp
add
add
pop
in
aaa
mov
mov
xsha256
cmps
xchg
rcr
inc
inc
adc
int3
addr16
pop
leave
je
pop
or
or
adc
sbb
mov
inc
outs
adc
arpl
push
xchg
mov
ret
dec
xor
xor
sbb
popa
jbe
sbb
adc
movs
ja
scas
sub
dec
jbe
mov
in
imul
ja
test
dec
or
mov
cmc
sbb
popf
add
or
pop
or
add
pushf
push
cwde
mov
dec
or
push
(bad)
push
arpl
ins
ins
inc
jnp
scas
out
or
loopne
mov
or
push
ja
es
xchg
jae
adc
adc
adc
add
pop
adc
adc
mov
imul
or
xchg
pusha
adc
push
ror
xchg
sbb
fmul
add
push
or
dec
stos
scas
neg
fst
dec
inc
adc
adc
add
stos
mov
add
mov
add
jbe
fcomp
or
pushf
push
popa
sbb
adc
pop
cld
je
inc
imul
arpl
mov
mov
jae
adc
mov
outs
inc
lock
pop
push
jae
mov
mov
add
adc
scas
pop
data16
pusha
int3
mov
or
cs
mov
sub
and
xchg
mov
in
popa
cmp
aaa
dec
or
sub
dec
sub
int3
bound
ss
pop
sub
add
pop
xor
jae
add
lods
jne
or
dec
movs
push
popf
add
scas
dec
ins
add
ins
mov
adc
pushf
adc
in
leave
mov
mov
or
(bad)
js
push
push
push
dec
dec
dec
inc
clc
fsub
std
dec
push
pop
dec
inc
push
inc
inc
pop
dec
dec
push
inc
or
push
inc
fdivr
pop
jecxz
add
pop
hlt
cmp
cmp
(bad)
ja
dec
jl
pusha
ss
daa
adc
dec
or
in
mov
sbb
daa
mov
push
jne
xchg
inc
js
jl
jns
push
das
inc
and
test
or
dec
push
push
pop
inc
in
push
pop
inc
jmp
out
push
and
pop
add
mov
in
inc
and
mov
push
pop
lock
push
dec
inc
push
not
xchg
je
or
movs
push
leave
movs
aas
sbb
push
paddd
jne
les
enter
inc
pop
inc
pusha
outs
inc
xchg
movs
inc
adc
inc
loope
rcr
pop
inc
inc
inc
push
inc
and
pop
push
int3
xor
and
mov
adc
add
add
and
ud2
xor
ret
or
in
pusha
push
xor
or
jecxz
aaa
sbb
sahf
add
outs
xchg
jne
mov
adc
pop
mov
push
add
xor
mov
test
push
add
adc
adc
ret
lock
jecxz
cmp
push
je
jo
ror
xor
sub
js
ror
add
sub
inc
addr16
and
addr16
jo
mov
push
or
and
out
dec
inc
inc
push
cmp
xor
cli
cmps
daa
mov
pusha
pop
ds
push
dec
inc
pusha
mov
js
add
dec
xor
sar
nop
das
push
dec
inc
inc
inc
inc
dec
xor
jbe
dec
inc
hlt
dec
inc
push
xor
pop
inc
push
push
push
dec
adc
and
das
add
sub
imul
push
out
jb
xor
sbb
push
push
xor
scas
push
das
xor
xor
inc
push
shr
push
aaa
ficom
das
push
cmp
or
adc
dec
fst
cmp
sub
inc
je
outs
xchg
mov
xor
or
clc
mov
push
adc
pop
inc
or
cmc
sub
inc
les
imul
mov
dec
ret
ret
mov
adc
mov
dec
jae
imul
shl
sbb
bound
xchg
cmp
cmp
pop
sub
or
dec
mov
gs
dec
sub
(bad)
push
loop
or
gs
xchg
push
xor
fxam
adc
pop
pop
cwde
add
inc
dec
stos
fstp
dec
add
jge
jo
push
ja
jo
and
(bad)
call
gs
sub
test
sub
das
or
pop
ja
enter
pop
nop
les
fcom
mov
mov
mov
adc
and
mov
sbb
pop
imul
xchg
test
add
mov
sub
add
aad
test
inc
cmp
rcl
inc
sahf
mov
xchg
push
ds
jl
inc
das
pop
dec
sbb
push
das
(bad)
pop
dec
or
loopne
enter
shl
test
mov
enter
clc
sbb
push
addr16
scas
test
pop
jl
bound
test
retf
loop
imul
mov
daa
cdq
dec
inc
jns
or
push
push
ins
stos
mov
adc
xor
mov
ins
imul
and
push
fild
inc
sbb
adc
pop
jb
bound
jne
and
add
and
adc
in
daa
mov
dec
outs
out
jge
and
sbb
adc
fisubr
jecxz
inc
hlt
inc
push
sub
add
push
cmp
lea
push
jns
dec
leave
xor
outs
inc
sbb
sub
test
adc
add
sbb
sbb
add
sbb
mov
div
fld
lods
int3
mov
mov
xor
pushf
pop
cdq
jb
int3
mov
ins
jb
mov
and
mov
pop
dec
sub
jo
and
sbb
jle
push
push
inc
add
and
or
or
js
popa
xchg
push
sub
pop
fsubr
js
cmp
mov
je
jo
sti
call
loopne
dec
xor
rol
push
sti
add
dec
pop
(bad)
add
or
ds
scas
or
inc
gs
arpl
push
inc
xchg
into
jle
and
or
or
push
das
ins
fmul
ss
and
add
fs
push
test
scas
cmp
fs
push
shl
cmp
inc
punpcklbw
cld
jb
fsubr
data16
(bad)
(bad)
and
pop
inc
js
sub
dec
dec
dec
xor
stos
int
pop
add
es
pop
test
xor
push
jmp
dec
push
push
mov
mov
outs
sub
add
das
push
ror
rol
inc
xchg
push
nop
pop
arpl
xchg
or
or
imul
xor
(bad)
ins
xchg
push
sub
xchg
mov
mov
pop
mov
jne
fmul
pop
pop
lock
addr16
jle
jne
fimul
ror
xor
pop
dec
jo
add
pop
gs
mov
inc
jl
push
jo
popa
cmps
dec
dec
outs
jmp
shr
add
mov
mov
push
push
or
push
inc
sub
mov
sub
arpl
pop
icebp
inc
imul
push
push
xchg
dec
mov
stos
outs
frstor
arpl
mov
jo
dec
data16
or
es
retf
push
imul
sub
out
rol
das
int3
adc
dec
add
arpl
ror
repnz
(bad)
xor
fcmovnb
pop
rol
out
cli
and
in
and
inc
dec
(bad)
repz
mov
xchg
add
in
adc
cmp
fiadd
add
inc
ins
xor
movs
sbb
jo
leave
(bad)
add
mov
in
adc
shr
sbb
mov
data16
add
pop
unpcklps
push
dec
push
inc
cs
mov
mov
add
out
test
and
mov
test
aad
mov
and
mul
push
ins
and
sub
scas
mov
add
push
add
or
repz
xor
ret
adc
jp
jle
or
xor
es
or
jb
imul
cmp
adc
jo
ret
fist
dec
outs
je
fist
cmps
cmps
out
mov
pop
cmps
repnz
mov
adc
je
sbb
out
mov
div
pop
xor
(bad)
outs
ins
bound
outs
js
add
cwde
cld
lods
(bad)
shr
aam
and
jo
xor
int
add
ins
lds
inc
pop
test
out
sbb
jle
inc
push
push
push
push
in
call
jo
adc
bswap
add
out
ja
out
and
sbb
pop
xor
inc
xor
mov
and
push
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
push
dec
xchg
xchg
xchg
xchg
dec
inc
inc
cmp
fcom
mov
call
fistp
pop
xchg
ret
push
push
push
push
test
jb
mov
sbb
sub
sub
and
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
clc
ret
inc
lock
push
jb
jb
aas
in
psubsb
loopne
jb
jb
fcom
shl
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwde
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
push
pop
jb
jb
dec
inc
inc
daa
daa
daa
daa
cmp
xor
sbb
or
cld
fwait
outs
mov
jne
xor
jmp
pop
push
mov
mov
dec
pop
and
jne
cmp
nop
mov
jmp
(bad)
iret
mov
mov
mov
mov
xchg
mov
pop
fmul
jle
pop
pop
jb
push
or
inc
mov
and
sub
pushf
mov
mov
and
and
dec
sbb
xchg
fld
sbb
sbb
mov
xchg
adc
or
add
rcr
add
pop
out
mov
add
cld
icebp
outs
sbb
ror
leave
ins
clc
pmuludq
in
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwde
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
leave
leave
leave
sub
sbb
retf
leave
leave
adc
or
mov
jecxz
(bad)
hlt
nop
(bad)
outs
add
cld
rcl
lock
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
fcom
ror
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cwde
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
push
dec
xchg
xchg
xchg
xchg
dec
inc
inc
cmp
xchg
xchg
xchg
cmp
sub
and
sbb
mov
scas
and
and
sbb
dec
dec
dec
dec
adc
or
and
dec
add
cld
mov
daa
hlt
lock
call
in
(bad)
daa
daa
daa
daa
aam
int3
enter
daa
(bad)
sar
mov
test
daa
daa
daa
movs
mov
daa
daa
xchg
nop
mov
jl
inc
dec
outs
mov
pop
js
je
jo
dec
dec
dec
dec
push
dec
dec
dec
pop
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
dec
dec
dec
cmp
sub
dec
dec
dec
sub
sbb
lds
sbb
adc
xchg
xchg
xchg
xchg
or
add
pushf
pop
enter
clc
hlt
lock
pushf
pushf
pushf
in
call
pushf
pushf
(bad)
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwde
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
ins
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
adc
or
push
push
fucomi
popa
xchg
cs
add
pushf
pop
enter
clc
hlt
lock
test
leave
leave
leave
loopne
(bad)
leave
leave
leave
leave
ror
enter
leave
leave
sar
mov
test
leave
leave
leave
leave
mov
leave
leave
leave
nop
mov
jb
or
js
jb
jb
jo
push
jb
pop
pop
push
dec
jns
sar
sbb
in
add
push
dec
dec
cmovs
dec
dec
outs
pop
inc
cmovo
dec
dec
dec
dec
xor
sub
dec
dec
dec
dec
and
sbb
dec
dec
dec
dec
adc
or
and
dec
add
cld
mov
daa
hlt
lock
call
in
fcomp
ror
mov
(bad)
shr
sbb
and
outs
mov
jo
aas
fsubr
sbb
std
fs
pop
fmul
cld
ret
sahf
push
adc
out
loop
test
or
hlt
pop
ret
pop
mov
inc
cmps
push
push
push
push
mov
mov
mov
lock
enter
repz
inc
or
or
adc
sbb
iret
repz
and
cld
push
push
push
jp
cmp
mov
jae
mov
pop
outs
std
in
outs
and
mov
mov
mov
fs
add
sti
lahf
ins
fisttp
pusha
push
mov
push
mov
mov
push
mov
mov
push
add
(bad)
add
shl
jge
les
pop
inc
jae
sar
ror
pop
or
xor
ror
(bad)
outs
inc
jbe
xchg
xor
popa
add
add
add
and
push
out
mov
add
inc
outs
add
jae
xor
ja
add
inc
pop
ins
popf
pop
add
dec
push
add
inc
aas
adc
inc
push
push
movs
add
push
push
xor
add
inc
(bad)
sbb
dec
in
(bad)
sub
xor
push
mov
(bad)
in
jbe
cmpxchg
call
push
xor
das
sbb
loopne
cmp
out
cs
(bad)
loop
fcos
imul
test
je
mov
mov
jne
push
mov
or
outs
fstp
xchg
push
mov
das
xlat
das
xchg
inc
xchg
clc
pop
sbb
lds
push
jne
outs
je
jp
mov
inc
push
adc
lock
leave
leave
leave
leave
icebp
repnz
leave
leave
leave
leave
cmc
div
clc
leave
leave
leave
leave
stc
cli
sti
cld
xor
std
clc
clts
(bad)
jb
xor
loope
jecxz
jb
jb
in
out
jb
jb
jmp
jb
in
in
out
out
jb
jb
rcl
rcl
jb
jb
aam
(bad)
xlat
jb
jb
fcomp
fcmovu
jb
jb
(bad)
(bad)
xchg
xchg
cdq
arpl
xadd
xchg
xchg
xchg
xchg
ret
(bad)
(bad)
xchg
xchg
xchg
(bad)
enter
xchg
xchg
xchg
retf
int3
int
xchg
xchg
xchg
xchg
iret
mov
mov
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
cmps
test
stos
xchg
xchg
xchg
xchg
stos
lods
lods
scas
pushf
int3
dec
xchg
scas
dec
setno
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
xchg
cwde
cdq
call
popf
sahf
pushf
pushf
pushf
pushf
lahf
add
add
xchg
pushf
pushf
mov
std
push
mov
jne
cmp
mov
not
sbb
sub
jae
adc
jmp
jmp
pop
ret
push
popa
push
cwde
mov
sbb
cmp
nop
retf
dec
mov
push
sbb
mov
xchg
cwde
and
mov
and
cmp
movs
xor
ins
push
movs
xor
lods
xchg
mov
push
push
not
and
mov
sbb
rol
rcl
enter
xchg
int3
and
sbb
inc
add
adc
or
cs
ror
movs
rol
inc
(bad)
jne
rol
mov
inc
int3
pushf
ret
push
aaa
or
xor
add
je
jbe
or
inc
xchg
test
dec
adc
mov
bound
fsub
aad
push
or
pushw
mov
push
pop
ss
and
push
mov
jns
aas
imul
xor
add
aas
int3
pushf
mov
scas
shl
dec
or
or
(bad)
dec
outs
or
push
imul
push
fldenv
cli
add
push
lahf
mov
inc
or
cmps
add
sbb
inc
mov
addr16
or
sbb
push
add
sub
or
imul
mov
scas
imul
or
jmp
cmps
xor
or
and
cli
addr16
sub
test
je
(bad)
push
push
push
call
pop
or
mov
ins
push
cmp
pop
cs
aas
jo
leave
leave
leave
leave
jno
jae
leave
leave
leave
leave
jne
ja
leave
leave
leave
leave
jns
jnp
leave
leave
leave
leave
jge
jg
leave
leave
leave
leave
popa
bound
leave
leave
leave
leave
gs
leave
leave
imul
leave
ins
outs
outs
push
data16
leave
push
push
jo
push
dec
dec
dec
dec
push
push
push
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
dec
dec
xor
xor
dec
dec
dec
xor
dec
dec
dec
cmp
cmp
dec
dec
dec
cmp
dec
dec
dec
and
and
dec
dec
dec
and
dec
dec
dec
sub
sub
dec
dec
dec
sub
dec
dec
dec
adc
adc
dec
dec
dec
adc
dec
dec
dec
sbb
sbb
mov
mov
ret
sbb
int
stos
test
cli
sbb
(bad)
(bad)
fistp
add
add
or
or
push
movups
adc
adc
(bad)
(bad)
(bad)
call
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
adc
push
sbb
and
pop
xor
or
xor
cmp
add
in
adc
cmp
out
mov
aas
adc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
in
mov
push
pop
adc
xchg
mov
push
push
push
push
push
pusha
iret
push
xor
xor
pop
pop
pop
pop
add
add
and
ficomp
pop
mov
aad
imul
inc
inc
push
mov
scas
popa
bound
add
add
mov
push
arpl
jo
xchg
adc
sbb
sub
jo
sti
mov
xor
nop
push
mov
add
(bad)
rol
loopne
lock
and
mov
idiv
push
add
pusha
adc
add
add
fadd
rol
add
add
add
add
add
add
jnp
mov
into
add
sub
push
mov
mov
add
add
outs
mov
(bad)
call
add
add
add
add
add
push
xor
inc
add
pusha
add
pop
mov
add
add
bound
(bad)
xor
pop
add
or
add
add
add
add
add
(bad)
mov
push
add
add
add
add
add
add
add
add
outs
jg
fild
add
add
add
pop
xor
retf
jo
sbb
nop
add
ror
add
(bad)
jg
add
adc
and
xor
inc
push
push
push
pusha
push
pop
jo
add
pop
sti
sti
jl
mov
rcr
loopne
lock
mov
iret
pop
and
xor
inc
push
pop
pusha
pop
jo
push
add
pop
fld
pusha
shl
mov
popf
sub
add
dec
or
or
or
or
pop
push
or
aaa
sbb
or
or
mov
or
or
(bad)
or
or
aas
jnp
or
or
or
or
or
push
or
add
mov
xor
fnstcw
or
or
mov
out
adc
ror
adc
lock
sbb
std
add
adc
pop
and
mov
div
or
push
or
mov
in
fcmovnu
ficom
or
or
push
or
or
or
(bad)
cmp
and
push
or
add
js
jo
sub
pusha
or
in
push
sub
push
neg
sahf
or
add
shr
je
mov
or
fwait
cmps
or
adc
(bad)
push
mov
add
or
mov
imul
or
jecxz
jae
rol
mov
shl
out
loopne
pop
add
or
out
hlt
fiadd
or
adc
xchg
sbb
or
aas
popf
push
or
or
nop
or
mov
(bad)
dec
lock
and
xor
inc
push
push
push
pusha
push
jo
or
nop
push
mov
push
mov
ror
push
loopne
lock
add
fld
lar
wrmsr
cmovo
pop
in
fild
or
or
add
dec
mov
sub
push
push
push
or
xchg
lock
ret
in
xor
sbb
(bad)
rol
cmovge
aas
iret
jnp
sbb
mov
push
inc
push
pusha
adc
cmp
mov
adc
rol
jg
and
add
lahf
sbb
adc
push
add
push
adc
dec
and
dec
imul
xor
cdq
scas
adc
aaa
jecxz
mov
adc
jo
add
pop
nop
adc
add
(bad)
mov
sub
sub
dec
aas
add
push
dec
lock
adc
adc
adc
adc
cmps
and
fist
xor
or
(bad)
ror
mov
cmp
jo
push
out
jae
pop
aaa
outs
add
xor
dec
loopne
xchg
movs
pusha
add
scas
loope
xor
nop
jp
adc
jmp
shr
rcr
add
adc
adc
aaa
adc
adc
adc
ja
pop
or
pusha
or
jo
adc
adc
pop
inc
add
xor
ror
xchg
loopne
cmp
loopne
lock
adc
neg
(bad)
jbe
and
adc
adc
push
add
mov
lods
or
mov
nop
mov
add
push
leave
inc
ror
scas
lsl
or
mov
sti
pop
rol
lock
adc
push
xor
fidiv
pop
pop
fimul
cs
inc
jnp
adc
lock
push
adc
or
ds
ja
push
adc
cwde
loopne
mov
adc
mov
add
mov
das
add
into
push
daa
jmp
test
cmps
sub
ret
push
or
scas
inc
ins
jno
popf
ja
add
push
aad
jo
jmp
fmul
mov
cmps
pop
sub
cmp
mov
inc
sar
ror
pop
add
jecxz
add
lock
pop
jp
adc
pop
es
xor
aas
daa
inc
mov
jnp
pop
mov
pusha
aas
add
inc
inc
mov
fisub
add
and
ds
cvtps2pd
jecxz
add
aam
xchg
pop
das
add
or
aas
outs
add
rcl
add
pop
mov
jecxz
pop
nop
pop
mov
btc
or
pop
push
shl
or
mov
lds
pop
test
adc
and
xor
push
mov
sbb
push
sbb
push
sbb
sbb
pusha
sbb
dec
jnp
mov
sbb
push
addr16
ffreep
xor
rcr
sbb
sbb
sbb
inc
fild
in
add
sbb
sbb
sbb
pop
adc
cld
ss
adc
or
xor
add
mov
sub
inc
inc
pop
adc
fidivr
sbb
jo
sbb
push
add
sub
push
sti
imul
sub
jg
mul
push
add
xchg
dec
xor
das
add
out
loopne
add
pop
push
xrelease
add
(bad)
imul
pop
push
push
adc
or
ss
sbb
or
add
adc
adc
push
sbb
fdivr
pop
add
sbb
sbb
sbb
pcmpgtd
adc
ins
fdiv
lods
adc
mov
adc
shr
adc
cmp
mov
sub
xchg
xchg
xchg
test
adc
adc
pop
inc
pop
add
or
add
in
or
dec
mov
in
cmp
pop
inc
add
dec
or
sbb
pop
add
push
cmp
or
mov
push
add
push
ficom
fiadd
dec
or
mov
in
push
sub
dec
add
retf
adc
lahf
or
mov
aaa
sbb
or
inc
not
inc
cmc
pop
or
fld
fild
pop
(bad)
adc
call
add
and
inc
sbb
add
popa
iret
sahf
adc
imul
call
popf
add
ror
mov
jbe
mov
xor
add
pop
add
int
rcr
sub
add
cmovnp
shl
jg
adc
mov
cmp
cmp
push
pusha
pop
outs
add
jns
adc
in
add
jno
mov
xchg
pop
xor
push
aas
sbb
mov
pop
and
add
int
mov
sub
ss
or
test
mov
or
scas
dec
mov
int3
adc
adc
sub
popa
jg
call
pop
sbb
mov
pop
sbb
dec
inc
add
cmp
loopne
push
add
pop
sar
nop
fstp
ss
push
or
not
das
add
push
lahf
call
sub
add
sub
jbe
ins
jle
push
lods
xchg
add
add
mov
dec
call
ret
and
pusha
retf
pop
inc
sbb
or
test
or
push
into
lds
out
(bad)
add
jno
add
dec
lock
pop
outs
mov
add
xchg
fst
fild
addr16
pop
mov
aad
pop
lahf
out
pusha
in
and
lahf
add
jo
xor
jo
sbb
add
mov
rcl
imul
mov
adc
sar
std
adc
nop
and
jne
or
jl
add
inc
test
jge
jg
fcmovnu
mov
int
xchg
(bad)
outs
jnp
pop
xor
scas
or
pop
idiv
mov
test
pop
ffree
add
mov
xchg
arpl
push
push
adc
add
out
sub
xor
add
vmread
test
mov
push
add
add
add
sbb
pop
(bad)
jns
cmp
push
pop
and
mov
sub
adc
in
pop
lahf
pop
or
pop
pusha
sub
pop
sub
sbb
sub
pop
das
add
stc
mov
and
and
rcl
add
test
sub
sbb
mov
pop
pop
add
push
add
pop
popa
pop
scas
sbb
add
pop
add
add
push
and
lock
enter
aas
add
xor
pusha
sbb
pop
ror
fdiv
add
mov
add
add
cmp
and
ret
inc
jbe
pop
aaa
and
sbb
add
inc
sub
push
add
fwait
or
cdq
add
movs
shl
pop
sbb
in
aaa
ret
sbb
push
add
mov
test
shl
or
aas
and
and
push
or
sbb
aad
push
pop
pop
pop
adc
sbb
sub
pop
xchg
out
dec
pop
add
cmp
adc
(bad)
xchg
fcmovnb
sub
ins
imul
add
fcomp
imul
pop
sub
or
sub
lahf
or
add
mov
pop
add
mov
add
jnp
add
add
adc
adc
fild
call
cmp
push
call
or
clc
add
cmp
add
clc
adc
punpckhbw
data16
push
mov
adc
fwait
inc
add
pop
sub
or
mov
cwde
daa
xchg
add
or
push
or
inc
or
sbb
pop
gs
dec
sbb
mov
add
sbb
sbb
addr16
add
or
pop
neg
pop
stos
or
jae
pop
sgdtd
sub
inc
getsec
push
data16
xchg
xor
das
xor
sbb
ins
adc
daa
popa
sub
jbe
pop
pusha
daa
jge
(bad)
mov
mov
adc
mov
fcomp
mov
push
adc
cli
add
movs
and
add
into
push
pop
pusha
or
dec
mov
ins
mov
xchg
sbb
push
outs
pop
ins
sub
and
pop
sub
ret
jge
lods
cdq
sbb
push
pop
cmps
adc
add
adc
xchg
pop
(bad)
push
daa
add
sbb
pop
pop
xor
push
into
push
mov
lods
cmp
add
scas
mov
pop
sub
sbb
push
cdq
dec
inc
sbb
pop
adc
in
push
xor
add
pop
xor
js
push
pop
sbb
mov
xadd
sub
push
sbb
sbb
jmp
pop
cmp
ins
or
xor
xor
xor
nop
xchg
mov
ret
xor
add
xchg
sahf
pop
retf
push
mov
das
push
mov
ror
push
xor
fnstcw
and
inc
call
add
dec
cmp
ret
sbb
sbb
sbb
jo
add
aas
cdq
popa
cmp
adc
adc
add
and
add
jg
xchg
pusha
aaa
out
jmp
inc
sar
push
sub
cli
adc
fcmovnu
fstp
fwait
test
mov
add
fild
inc
add
sbb
rol
pop
pop
test
sbb
movs
pop
sbb
mov
xchg
imul
xlat
adc
scas
adc
mov
je
xchg
pop
dec
jns
dec
sbb
xchg
mov
jae
fucomip
add
mov
pop
sbb
add
xchg
popf
nop
add
adc
add
(bad)
pop
pop
sbb
cmp
cs
cmp
test
addr16
jnp
sbb
in
or
and
sahf
push
test
ins
xchg
jmp
pop
add
sbb
loope
adc
add
mov
addr16
sub
gs
pop
inc
push
popf
mov
pop
adc
out
xor
adc
ficomp
out
add
jmp
fwait
lods
ret
scas
pop
add
out
mov
add
jae
in
mov
add
adc
and
sub
xchg
mov
or
mov
xchg
add
fdivr
test
mov
cmp
mov
xchg
mov
stc
adc
push
aas
push
or
and
cmp
pop
mov
add
dec
push
adc
mov
xor
retf
sub
fild
scas
mov
sti
dec
loope
loope
jnp
inc
xor
not
or
push
pop
and
sub
scas
xchg
lea
cmc
add
inc
pop
cmp
add
pusha
pop
add
add
add
or
call
add
les
adc
adc
adc
jmp
mov
add
add
dec
sbb
inc
sbb
add
sbb
(bad)
(bad)
push
sub
add
and
and
es
movs
(bad)
(bad)
(bad)
or
inc
add
and
add
push
sub
push
sub
and
push
in
pop
jbe
add
or
sub
and
xor
and
xor
inc
cs
pop
inc
push
ins
mov
fadd
push
pusha
and
jnp
sub
arpl
jo
sub
mov
pop
add
adc
add
movs
div
rcl
push
add
xchg
mov
and
cmps
add
inc
pusha
add
adc
add
sub
adc
in
arpl
mov
pusha
pop
ins
lds
xchg
push
add
jle
nop
add
shr
mov
loopne
pop
lock
or
add
adc
xchg
movs
lea
add
mov
add
jmp
xchg
stos
add
add
push
add
jo
add
adc
jnp
mov
push
pusha
adc
add
rcr
mov
mov
dec
fcomp
ins
add
pop
dec
xor
add
inc
(bad)
or
add
jo
add
jnp
mov
mov
pop
mov
rol
add
and
lock
xchg
lock
adc
leave
leave
adc
sbb
mov
leave
and
fisttp
inc
sub
fs
das
shr
psubsb
punpcklwd
ror
scas
push
mov
jne
enter
ud2
fcmovu
in
and
pop
cmovo
push
add
ins
les
jg
das
pop
adc
or
inc
add
and
or
pop
xchg
fucomi
ss
(bad)
das
or
adc
sbb
and
jg
cmp
shl
pop
leave
leave
leave
ins
xor
ds
dec
leave
leave
in
enter
pop
push
push
push
shl
lahf
mov
pop
jg
rol
je
aas
add
adc
(bad)
rol
aas
(bad)
fist
mov
out
push
sbb
mov
aas
mov
cmp
lds
aas
call
imul
push
aad
pop
push
dec
or
push
in
leave
psubusw
xor
jecxz
jmp
aas
je
sub
pop
push
lds
mov
stos
jmp
pmulhuw
aas
wrmsr
test
out
outs
and
movaps
push
ins
aaa
mov
pop
mov
mov
sbb
push
clc
das
lds
popa
add
(bad)
mov
cvttps2pi
pop
pop
sub
push
add
mov
xchg
punpckldq
popa
add
(bad)
scas
xor
push
rcl
inc
mov
fld
dec
movups
ret
bt
adc
pusha
maxps
mov
inc
sbb
leave
in
jbe
mov
leave
leave
leave
leave
cmp
cmp
outs
pop
sar
cmp
pop
ud0
daa
mov
ins
sldt
ud0
mov
jno
cmovne
sldt
ins
jnp
pop
sldt
str
push
adc
add
dec
out
aam
mov
iret
xchg
cwde
push
mov
aas
or
bound
fbld
mov
xadd
jns
addr16
pop
out
rol
mov
in
in
inc
ins
dec
das
lahf
pshufw
scas
cmovg
addps
aas
mov
(bad)
mov
ror
dec
fstp
jecxz
jle
cmp
lods
xchg
push
dec
in
pop
pop
icebp
aas
repz
test
jb
cmc
jg
loope
adc
mov
sbb
(bad)
jg
les
(bad)
jg
dec
inc
daa
inc
xor
mov
outs
lahf
arpl
loope
out
xchg
cmp
fbstp
inc
inc
sub
adc
movq
adc
or
les
scas
aas
sti
nop
sub
push
xchg
dec
push
and
mov
rdtsc
push
push
add
test
mov
fistp
jg
push
add
jg
add
pop
pop
dec
movq
or
das
mov
(bad)
ud2
add
jg
push
or
mov
pop
aas
syscall
adc
lahf
lahf
xchg
push
or
add
scas
popa
push
ret
sub
add
pop
rcl
mov
inc
pop
aam
(bad)
outs
mov
iret
pop
push
fbstp
pop
sub
inc
jg
push
jg
pop
sub
inc
lahf
scas
invd
or
test
stos
movq
add
pop
mov
or
add
ds
movlhps
inc
push
out
punpcklbw
push
adc
pop
pop
test
ror
push
and
out
jg
xor
nop
push
mov
(bad)
sbb
mov
adc
or
dec
sti
adc
adc
sub
adc
movs
call
adc
adc
(bad)
pop
ret
mov
push
push
mov
mov
mov
cmp
rol
fbld
into
movs
pushf
mov
cmp
lahf
ror
into
(bad)
(bad)
mov
add
shl
mov
shr
and
add
sub
fistp
inc
and
mov
jno
add
sub
jae
out
ja
add
add
dec
xor
pop
call
sbb
mov
ss
dec
(bad)
ins
add
sub
div
or
push
clc
popa
jb
or
add
add
mov
add
lea
je
cmps
adc
add
(bad)
push
mov
sbb
add
push
push
cld
and
pop
cmp
sete
dec
cmp
jb
adc
pop
push
lock
fbstp
push
mov
xor
jmp
jle
pop
cmp
pop
mov
cmp
pop
inc
cmp
jle
xor
mov
pop
pop
inc
lahf
mov
jg
(bad)
inc
add
mov
mov
mov
test
je
and
dec
cmp
jns
mov
inc
add
ret
inc
test
xor
jg
loopne
mov
mov
mov
or
dec
mov
data16
out
je
adc
adc
push
push
mov
mov
xchg
mov
xor
add
add
mov
(bad)
push
adc
movs
jl
cmp
aas
outs
jnp
or
jmp
add
mov
mov
and
lods
sbb
lea
sbb
mov
push
shr
add
scas
ss
sub
or
cmp
push
aam
test
jl
xacquire
ins
shl
inc
data16
lods
loope
loop
rol
jne
push
pop
inc
repz
inc
out
movs
stos
inc
fbld
mov
ret
sbb
mov
clc
outs
push
daa
mov
push
jmp
xor
and
pop
loopne
and
in
xor
push
aam
shl
stc
mov
add
rol
enter
mov
bnd
mov
mov
in
cwde
or
nop
adc
fstp
add
pop
sub
js
aaa
aaa
repnz
in
xor
das
push
pop
lock
addr16
das
cmps
xor
fstp
push
push
in
dec
push
mov
inc
fstp
cmp
clc
mov
mov
push
sub
xor
cmp
and
and
mov
mov
in
repnz
movs
ficom
fcom
fmul
or
fild
and
rcl
add
ss
xlat
fcom
cld
ins
es
clc
push
js
and
aad
int3
ror
out
inc
in
pop
pop
call
xchg
iret
in
shl
mov
fdivr
jns
ds
fdivr
push
mov
(bad)
(bad)
fstp
cwde
push
push
push
mov
inc
fstp
fucomp
mov
xchg
push
pop
pop
xor
push
jmp
clc
pop
inc
and
(bad)
in
lock
or
ins
gs
popa
ins
gs
add
push
or
outs
or
arpl
and
adc
pop
xchg
out
pop
invd
cli
add
dec
adc
cmp
add
sub
cld
cmp
and
inc
ins
fsubr
mov
je
jge
or
arpl
jnp
mov
add
mov
push
mov
fstp
push
aaa
das
movs
push
jne
push
test
jge
out
div
jle
adc
pushf
push
sub
xor
cld
scas
jnp
daa
jl
push
pop
aad
cmps
jnp
lock
adc
push
cmp
shl
xchg
and
inc
push
jns
icebp
jae
mov
adc
call
push
dec
add
(bad)
std
add
cmp
or
jbe
stos
bound
jmp
mov
jnp
add
cmp
ret
jg
clc
popa
addr16
push
push
inc
jb
popa
je
cmc
aas
fadd
les
push
gs
div
inc
xchg
daa
cmps
pop
inc
pop
je
outs
jns
fs
and
add
int
movs
mov
ins
in
push
mov
sahf
jo
xchg
sbb
pop
(bad)
mov
outs
fs
pop
pushf
add
test
lea
cmp
loopne
mov
fild
pop
pop
jae
int
xor
je
xor
pop
add
or
or
add
ins
adc
mov
test
inc
sbb
movs
mov
ror
cmp
dec
add
push
add
inc
sahf
pushf
or
jns
cmp
and
or
jmp
xchg
mov
loopne
sbb
lahf
jnp
inc
ins
add
and
mov
mov
cmp
pop
inc
das
adc
mov
punpckldq
or
je
mov
lahf
add
scas
ss
ins
add
add
push
adc
sahf
pop
cmp
cs
or
fcom
popw
es
mov
fidivr
mov
jg
scas
dec
or
inc
cs
cs
shl
add
mov
jae
add
add
outs
jne
je
xlat
mov
push
pusha
add
push
push
add
sub
or
nop
stos
sahf
out
test
cmp
push
mul
or
scas
div
push
sbb
push
or
scas
jae
pop
inc
push
icebp
add
cmp
add
test
mov
int3
sub
or
dec
outs
gs
arpl
call
cmp
in
adc
inc
push
je
arpl
outs
add
imul
sub
push
inc
inc
arpl
imul
mov
mov
shrd
mov
ins
mov
fs
mov
push
xlat
loopne
jp
jp
or
maskmovq
imul
xor
xor
fadd
call
dec
jae
(bad)
ins
push
aaa
cmp
or
rol
es
cmp
inc
shr
in
push
cwde
jbe
loopne
inc
jb
add
add
xchg
out
or
adc
cwde
push
xor
movs
outs
jno
and
or
inc
cmp
push
pop
dec
jb
sar
mov
xchg
adc
cmps
xchg
or
mov
lahf
xor
sahf
or
fwait
jp
mov
or
add
fisub
jns
pop
or
or
inc
add
dec
sub
xor
mov
stos
pop
mov
pop
bound
jns
or
add
push
or
loop
dec
pop
pop
xor
arpl
pusha
ins
jne
(bad)
mov
inc
daa
rcl
add
lahf
pushf
(bad)
stos
pop
mov
jae
iret
pop
pop
mov
add
or
imul
mov
fcmovb
adc
popa
imul
inc
inc
or
sub
inc
pop
and
pusha
add
ja
and
pop
dec
ins
pop
dec
js
or
xchg
xchg
pop
daa
or
add
xchg
shl
rol
inc
add
push
dec
inc
or
push
aaa
inc
dec
cmp
push
xor
xor
sub
fwait
push
add
std
inc
push
and
pop
pop
inc
adc
jb
in
aad
jb
gs
fistp
ret
push
test
mov
rol
pop
ins
(bad)
adc
movs
mov
shl
adc
jne
mov
ss
pop
xor
daa
int
fwait
jbe
or
sbb
outs
dec
pop
and
rcl
sub
outs
pop
inc
sbb
sbb
mov
inc
nop
out
out
out
lock
inc
dec
mov
xchg
in
or
pop
push
ret
sbb
das
repnz
dec
push
jne
adc
je
dec
es
pusha
fisttp
cmp
pop
xor
sub
sar
test
scas
ja
cld
aas
push
push
inc
dec
outs
je
jne
jo
jb
fs
mov
jo
fild
cmp
aaa
and
ss
pop
push
push
loop
sbb
int3
arpl
add
inc
mov
(bad)
out
inc
dec
xchg
frstor
adc
enter
xor
push
sar
jo
shr
test
test
sub
jnp
push
xchg
cli
pop
adc
sbb
leave
outs
lock
mov
or
imul
(bad)
jo
jo
pop
and
mov
mov
clc
jg
or
dec
outs
jbe
ins
imul
leave
xlat
pop
xor
xor
inc
ins
adc
jae
pop
xor
lahf
jl
test
movd
push
inc
inc
bound
mov
adc
fild
retf
aas
je
or
mov
das
xor
and
xchg
xor
and
ss
hlt
jmp
adc
push
sbb
inc
ins
ins
outs
ja
std
call
ror
mov
push
inc
dec
gs
jmp
mov
loope
and
outs
or
push
mov
cmp
outs
pop
xor
int3
and
or
add
jmp
mov
mov
dec
and
cld
mov
shl
push
test
in
mov
mov
int
ror
adc
inc
sbb
mov
dec
or
push
gs
outs
fs
or
push
mov
add
inc
and
or
mov
out
push
je
xchg
das
popf
push
xchg
and
or
unpckhps
sub
inc
fs
mov
inc
jne
ds
int3
pop
jmp
gs
adc
into
(bad)
pop
pop
cmp
push
jo
into
inc
(bad)
adc
pop
xchg
or
jmp
xlat
sahf
xor
daa
test
jno
add
shr
or
outs
das
cli
outs
cwde
cmp
mov
or
fld
pop
cwde
setle
or
inc
imul
test
sbb
jns
xchg
or
dec
and
and
push
cmp
jbe
xchg
aas
add
inc
cmovbe
cmps
push
add
cmp
out
rol
or
dec
adc
pop
add
or
loopne
movs
add
out
dec
add
rcr
dec
mov
mov
inc
adc
in
ss
nop
setbe
test
adc
rcr
sub
pop
int3
rcl
xor
mov
mov
push
pop
cmp
and
xor
mov
dec
and
pop
movs
das
dec
fadd
pop
loopne
out
leave
dec
xor
sbb
inc
pop
shl
(bad)
ds
or
mov
add
and
dec
or
push
jo
adc
aam
std
xchg
add
inc
or
in
ss
pop
sub
xor
add
rcr
ins
add
and
adc
fsubr
aam
fimul
aam
je
movups
imul
nop
iret
pop
sub
sbb
neg
test
mov
mov
aaa
adc
sahf
loopne
xor
or
aaa
test
rcr
or
sbb
add
add
xor
xor
jmp
inc
mov
and
jmp
pop
and
rcl
hlt
pop
fadd
loopne
pmaxub
cmc
inc
inc
arpl
push
imul
mov
iret
pop
sub
rol
mov
pop
aaa
rol
nop
push
jb
ins
gs
mov
and
mov
dec
pop
cmps
sub
mov
(bad)
dec
push
inc
mov
xchg
iret
add
pop
pop
mov
hlt
pop
loopne
inc
pop
inc
jo
pop
or
loopne
add
ins
inc
mov
test
outs
adc
inc
pushf
pop
test
mov
push
popa
shl
daa
xchg
sbb
(bad)
scas
and
or
outs
mov
push
dec
pop
xor
dec
outs
jo
gs
fs
outs
ins
jns
add
jo
push
and
adc
push
psrad
and
or
add
test
pop
test
sar
pop
add
and
xor
sub
popa
out
fs
or
xor
sbb
dec
add
xor
pop
pop
pop
cmp
inc
stos
xor
nop
mov
dec
pusha
inc
bound
or
mov
rcl
in
add
(bad)
fstp
in
das
repnz
add
push
arpl
data16
cs
pop
sub
add
aas
add
pop
pushf
cpuid
pop
add
pushf
push
mov
call
xlat
and
or
out
neg
inc
push
js
dec
push
gs
imul
or
das
(bad)
mov
dec
push
sub
pop
sbb
or
jge
ja
jae
mov
(bad)
iret
retf
stos
adc
popa
data16
(bad)
xlat
mov
daa
jmp
ss
add
pop
mov
push
sbb
sbb
mov
cmp
sti
inc
push
loopne
sbb
punpckldq
pop
and
adc
ror
jg
mov
xor
mov
inc
lahf
adc
ja
cmp
nop
loopne
cmps
sbb
adc
shl
inc
xchg
outs
mov
pusha
fmul
out
inc
sbb
add
loopne
xor
jo
push
cmp
cmp
sub
sbb
mov
pop
lods
pop
nop
setbe
rol
pop
dec
bound
inc
or
jae
jae
iret
pop
pop
add
pop
in
fcomp
inc
adc
push
inc
shl
cmp
cs
dec
adc
add
mov
mov
inc
clts
push
pop
icebp
idiv
or
sbb
ins
popa
je
or
push
jp
add
cmp
out
test
add
jl
test
dec
dec
popa
mov
add
add
popa
dec
movs
xor
shl
je
call
xor
js
daa
enter
and
push
es
outs
sbb
or
mov
adc
adc
xor
rcr
adc
nop
push
jb
or
xor
bound
scas
in
xchg
xor
adc
gs
fisttp
neg
out
jle
(bad)
loopne
imul
int3
jbe
iret
add
aaa
jmp
unpcklps
sbb
aaa
xadd
and
fcom
test
xor
outs
iret
repz
rcl
mov
icebp
outs
add
push
inc
jne
push
arpl
mov
sbb
stos
test
pop
xor
push
inc
shr
mov
pop
jns
or
jo
mov
xor
push
outs
xor
or
and
or
sbb
push
rcr
pop
or
and
or
inc
dec
fwait
imul
mov
sub
or
cmp
ins
popa
or
imul
push
or
pop
xor
pop
popf
jns
aas
xor
mov
fcmovne
pusha
cmc
rcr
push
shl
mov
fs
ret
out
mov
push
mov
(bad)
push
ja
imul
cwde
loop
adc
outs
ja
(bad)
or
aas
inc
dec
gs
add
mul
adc
and
inc
clc
inc
scas
es
add
daa
push
mov
sbb
lds
jbe
or
sub
mov
jnp
or
aaa
add
or
or
mov
retf
loopne
push
push
jne
pusha
stos
cs
jbe
popa
add
add
ds
inc
sub
rdmsr
jnp
push
pop
daa
bound
pop
ss
sub
add
add
lds
adc
femms
dec
inc
jmp
cmp
pop
sub
and
push
mov
jnp
sbb
fisttp
push
loopne
sbb
lahf
sub
adc
push
test
fs
push
xchg
lahf
imul
test
push
or
outs
or
dec
add
and
push
hlt
gs
mov
or
cmps
or
popa
inc
aaa
in
push
inc
arpl
push
jl
xchg
dec
lods
push
xchg
pushf
inc
xchg
adc
in
sbb
stos
jnp
aam
adc
push
es
scas
das
xchg
dec
mov
mov
push
mov
cmps
cwde
xor
adc
punpckhbw
fnstsw
lea
pop
dec
or
popa
jae
pop
out
push
and
setae
add
loop
inc
jns
jl
push
imul
or
out
outs
jns
or
inc
mov
inc
inc
cwde
call
dec
add
jo
inc
dec
retf
(bad)
jo
inc
add
lds
fsubr
cmp
xor
stos
xor
and
loopne
inc
xor
iret
pop
rcl
push
fdivr
adc
dec
pop
xchg
mov
icebp
int3
add
mov
and
stos
sti
fstp
inc
and
adc
enter
or
and
pop
fdiv
push
push
cmc
push
std
add
aaa
adc
sub
sub
ret
out
sbb
push
dec
push
add
mov
daa
xchg
mov
cmp
ss
jo
hlt
addr16
or
ins
fs
jle
imul
xor
jmp
adc
or
push
or
or
inc
pop
das
jg
js
fisubr
popa
clc
jns
repz
mov
adc
sub
nop
push
add
stos
aaa
rcr
pop
jb
shl
retf
sub
push
adc
imul
push
dec
sbb
cli
inc
je
push
inc
jle
sub
jb
lahf
push
movd
cmps
push
dec
jne
int3
lods
out
ret
xor
mov
mov
xchg
stos
push
sub
es
sub
ror
dec
cmp
cmp
cs
ror
gs
in
lahf
sub
jp
idiv
push
in
or
mov
adc
pop
pusha
repnz
or
cmps
pop
xor
lods
push
sub
popa
mov
out
xchg
imul
loope
add
add
or
lea
movs
add
fsub
mov
cli
das
call
sbb
aaa
cs
out
and
push
jnp
cwde
inc
ja
push
imul
or
and
adc
outs
inc
(bad)
sub
popa
jo
arpl
jns
cmp
leave
leave
leave
ins
sbb
fidiv
repnz
ret
psubb
repz
int3
add
imul
mov
repnz
in
test
jb
xor
out
inc
idiv
cmp
nop
mov
sahf
pushf
mov
and
dec
xchg
fistp
cli
arpl
jmp
sti
enter
jae
sti
aas
cld
fs
leave
add
std
dec
jb
repnz
or
xor
jbe
das
dec
enter
adc
xor
pop
push
or
push
mov
imul
xchg
inc
jne
sub
and
jecxz
imul
aam
cdq
cmp
loopne
dec
add
inc
popa
aam
and
jno
mov
add
cwde
adc
popf
adc
jns
popa
call
pop
popf
sub
pop
xchg
xchg
sub
and
add
mov
(bad)
and
dec
xor
daa
add
sub
or
mov
(bad)
inc
jo
push
pop
pop
movs
push
outs
inc
sbb
push
lods
push
or
bound
imul
retf
mov
and
leave
sub
sub
loopne
and
mov
imul
in
jno
shr
or
add
mov
cmp
adc
imul
imul
in
push
imul
dec
ror
and
sub
push
popa
ins
test
push
imul
cmps
les
or
scas
push
lock
pusha
cmp
test
jb
push
gs
pop
add
ss
movs
xchg
dec
mov
inc
push
xor
jbe
adc
not
repnz
pop
mov
jecxz
push
popa
(bad)
mov
sub
ins
test
xor
and
xchg
dec
test
push
test
xchg
cmp
unpckhps
jo
or
sbb
inc
cmc
sub
jnp
add
dec
push
ret
push
outs
dec
clc
push
mov
pop
sbb
adc
arpl
xor
stos
xchg
sub
mov
stc
in
and
add
mov
je
inc
outs
jae
gs
add
or
dec
mov
dec
adc
xchg
fwait
popa
(bad)
jno
aam
jno
mov
or
sar
clc
in
cmp
inc
jo
adc
fld
mov
cmp
fsubr
es
or
inc
dec
test
jns
in
ins
adc
xchg
push
or
mov
inc
mov
xchg
dec
xchg
adc
pusha
xchg
cdq
xchg
pop
add
mov
ret
setge
mov
xchg
mov
test
fisttp
rol
and
cld
(bad)
fst
xor
xchg
call
cmp
out
xchg
jbe
sub
fadd
shr
pop
push
add
mov
pop
cmp
fidiv
loopne
arpl
imul
movs
pop
adc
xor
jae
arpl
sar
aam
gs
outs
jbe
inc
adc
or
pop
mov
cmp
dec
mov
hlt
add
ins
popa
arpl
and
in
mov
ins
push
and
dec
gs
add
movs
xchg
sub
adc
or
inc
scas
or
test
repz
cdq
pop
or
daa
mov
add
icebp
xlat
aam
ins
push
ins
(bad)
loopne
or
or
fmul
out
inc
fld
add
add
pop
ffreep
or
or
add
out
mov
int3
ret
add
or
test
jnp
push
out
(bad)
add
test
rcl
or
push
cmp
rol
sub
push
add
add
fs
cmp
cmp
sbb
dec
fs
sbb
adc
mov
or
inc
and
and
and
inc
loopne
add
pop
stos
xor
jg
lock
mov
add
das
dec
mov
push
inc
inc
outs
shl
in
pop
dec
inc
jb
outs
jb
jbe
adc
inc
pop
int
mov
sub
outs
bndldx
ins
fadd
or
(bad)
inc
shl
ds
cmps
add
cdq
test
push
push
ret
mov
push
sub
jecxz
sbb
mov
push
sbb
push
xchg
adc
dec
outs
scas
push
inc
es
rol
in
mov
push
pop
out
xor
pop
int3
ins
inc
dec
sbb
inc
or
rol
or
pop
mov
mov
push
ins
or
dec
cmp
push
add
add
call
lods
pusha
cmp
lods
hlt
jmp
repz
into
push
push
loopne
pop
cmp
imul
jmp
or
pusha
fwait
pushf
mov
cld
pop
or
xor
jne
pop
or
push
or
leave
leave
enter
or
fs
push
jbe
cli
sbb
repnz
retf
enter
shr
xor
(bad)
sbb
add
scas
wbinvd
add
pop
inc
aam
inc
daa
call
jnp
(bad)
add
push
(bad)
cmp
inc
ror
add
sti
add
pop
dec
add
jbe
pusha
ins
test
jbe
stos
dec
jbe
test
or
aad
pop
jecxz
ror
push
mov
mov
pop
inc
xchg
jbe
imul
retf
dec
mov
sub
jne
retf
mov
adc
dec
cmp
retf
xchg
sbb
add
push
popa
pop
adc
call
push
adc
fmul
adc
jb
sub
call
aaa
add
push
pop
adc
mov
(bad)
sub
jns
inc
or
or
outs
call
lock
inc
jne
data16
push
cmp
cmp
jo
mov
dec
or
cmp
and
popaw
ror
xchg
or
or
movs
xchg
sub
add
lods
push
xchg
pop
or
add
mov
popa
add
cld
dec
in
sbb
test
sbb
inc
mov
js
or
dec
add
push
adc
or
inc
aaa
and
adc
pop
sub
ins
daa
xchg
mov
add
mov
mov
sahf
mov
test
push
push
movs
dec
fadd
push
daa
sub
inc
bound
pop
jmp
pop
push
cmp
inc
sub
js
mov
xor
push
jge
dec
add
mov
iret
jg
jl
push
xchg
sbb
pop
sbb
lahf
adc
test
movs
or
in
and
repz
mov
ins
cld
in
adc
or
std
ds
cmp
retf
fnstenv
add
mov
jnp
jnp
push
and
push
sub
mov
(bad)
push
push
jno
fldcw
add
add
nop
add
jne
dec
mov
outs
and
inc
mov
sbb
or
lods
xor
dec
mov
rol
or
aaa
mov
sti
dec
jno
or
gs
mov
mov
jnp
fwait
cs
inc
dec
test
cmp
sub
in
je
add
add
dec
ror
mov
test
leave
push
into
sbb
test
add
iret
pop
frstor
xchg
iret
pop
sbb
xor
sub
lahf
into
iret
rcl
imul
add
icebp
scas
test
std
or
adc
int
pop
call
std
das
add
jo
les
or
outs
repz
sub
xchg
retf
call
movs
addr16
xor
mov
rcpps
push
push
xor
ins
cmp
adc
adc
fs
pop
push
lea
sub
movs
ss
adc
test
mov
pop
sub
lds
shl
in
inc
rcl
adc
cmps
scas
dec
push
push
mov
sub
imul
cmp
jne
pop
inc
test
ins
out
xor
(bad)
pop
push
or
test
inc
sub
add
jmp
cmp
adc
lods
fs
movs
call
or
nop
jmp
lea
sbb
mov
das
jne
scas
push
in
es
adc
jge
mov
add
sub
gs
aaa
cmp
out
sahf
daa
push
push
js
lods
mov
out
sahf
sbb
clc
cld
add
inc
inc
mov
xchg
imul
mov
inc
mov
inc
dec
inc
push
outs
push
aas
ffree
pop
fadd
xor
xor
int3
in
sub
mov
add
pop
test
add
mov
push
adc
mov
stos
sar
wbinvd
add
push
frstor
jge
es
push
inc
mov
jmp
xor
mov
popf
dec
cli
sub
dec
out
jecxz
popa
mov
push
mov
push
and
addr16
pop
mov
fs
add
inc
mov
inc
xchg
movs
scas
push
nop
sub
ret
xchg
xor
scas
xchg
aas
xchg
xor
push
dec
jnp
xchg
push
mov
lds
neg
jno
cmp
dec
ja
popf
cld
pop
pop
hlt
das
sbb
pminub
pusha
mov
and
cwde
call
push
psubsb
pop
push
mov
push
xor
dec
mov
push
mov
cmp
inc
aaa
cmp
mov
scas
clc
ins
mov
loope
stc
dec
sbb
stc
pop
sub
adc
lods
stc
push
lds
adc
dec
ret
(bad)
mov
or
pop
mov
add
(bad)
loopne
sar
push
add
test
(bad)
in
mov
(bad)
push
sbb
pop
lds
inc
jle
test
(bad)
cmp
xchg
lahf
push
lahf
bound
dec
pusha
or
add
xor
pusha
or
xchg
cdq
jnp
out
aad
sub
xor
lods
mov
add
cmp
mov
comiss
push
call
mov
push
in
mov
sbb
mov
cmp
js
push
(bad)
sti
into
push
mov
sbb
dec
psadbw
paddd
sbb
mov
or
outs
imul
out
mov
jne
cmc
add
dec
sbb
add
pop
add
push
add
lds
inc
pusha
jnp
outs
pop
adc
mov
pop
nop
fild
dec
sbb
jmp
ror
(bad)
cmp
dec
and
fcom
sahf
nop
clc
mov
in
push
xlat
loop
push
call
in
into
out
adc
sub
cld
adc
sbb
addr16
mov
sub
xchg
or
cmp
dec
jae
mov
sub
loopne
lea
lods
inc
bound
call
(bad)
in
clc
xchg
push
add
ins
lock
push
inc
imul
std
jae
push
gs
cmp
or
sbb
lock
es
outs
arpl
dec
add
sbb
push
xor
sbb
jb
in
push
push
mov
lds
add
cmp
js
xchg
add
jge
xchg
cwde
cld
das
add
dec
bound
cmp
adc
cmp
fcomi
cmp
add
xchg
adc
pop
fst
mov
shr
pop
push
sbb
sti
and
mov
adc
(bad)
adc
iret
repz
ret
push
int
test
mov
add
lahf
fistp
fsubr
push
pop
pop
ins
pop
neg
into
popf
ds
add
adc
push
jle
rol
and
add
push
pop
cld
nop
mov
mov
push
hlt
mov
(bad)
ins
lock
jnp
js
inc
scas
xor
imul
mov
cmp
pop
inc
dec
outs
ins
pop
repnz
stos
mov
dec
xchg
ja
fst
push
jb
lahf
in
ror
push
dec
pop
push
loope
loopne
adc
jb
sti
pop
lods
or
jns
or
and
adc
add
cmp
movq
pop
repnz
ins
xor
jae
(bad)
cs
mov
sti
adc
sub
jecxz
inc
cmp
(bad)
sub
fmul
sbb
add
test
cmp
mov
cli
pop
or
and
fldl2e
dec
ror
push
sbb
mov
movs
sub
popa
mov
std
inc
jae
outs
jae
lahf
dec
cmp
jb
cmp
add
lds
sbb
xchg
rcr
pusha
inc
ss
mov
data16
sbb
(bad)
mov
xchg
cmp
fmul
adc
dec
add
jne
mov
sbb
movs
inc
add
(bad)
adc
or
or
jle
popa
mov
clc
dec
into
mov
sbb
imul
(bad)
push
scas
or
dec
cs
outs
pusha
clc
push
dec
ins
fs
fmul
imul
call
jl
loopne
xchg
add
in
and
push
jecxz
adc
dec
adc
adc
sbb
push
xor
push
pop
or
out
adc
or
je
mov
push
adc
pop
sar
push
or
jl
adc
push
inc
jb
popa
jns
movs
add
cwde
push
in
dec
add
aam
mov
sub
outs
push
pop
pusha
add
add
stos
inc
add
jne
(bad)
aas
inc
stos
(bad)
mov
inc
ret
nop
push
mov
push
mov
mov
sar
div
mov
mov
add
pop
pop
ret
mov
mov
mov
in
add
aad
(bad)
test
add
ja
push
add
push
push
xor
mov
mov
sti
pop
lock
clc
xor
push
push
push
mov
lea
(bad)
in
jne
push
push
jo
lock
jle
neg
lea
data16
sbb
fcom
jl
sbb
lea
add
iret
fsubrp
xchg
add
scas
mov
mov
pushf
xor
sar
int
in
mov
je
sub
mov
mov
test
sbb
aas
mov
dec
push
mov
sub
lea
dec
clc
call
and
es
mov
xchg
sbb
push
inc
hlt
pop
sbb
mov
sbb
cmp
jne
adc
loop
push
sbb
test
enter
xor
pop
mov
mov
mov
js
jmp
pop
pop
nop
lock
mov
pop
ja
(bad)
clc
jo
repnz
jg
cmp
cmp
and
jbe
pop
push
or
push
or
push
div
je
stos
clc
push
push
add
call
jo
faddp
jne
mov
xor
sub
popa
ins
or
jo
dec
jne
and
js
clc
js
mov
jmp
mov
xchg
jae
jo
jo
xor
jo
dec
add
push
(bad)
das
sub
mov
dec
add
push
arpl
loope
sub
push
add
ud1
les
adc
xchg
retf
movs
or
ror
fcom
stc
popa
mov
movs
sub
add
inc
mul
mov
int
cmp
mov
lock
jne
cmp
imul
mov
movs
test
pop
push
push
mov
gs
int3
div
mov
sub
jmp
or
sbb
and
int3
cmp
add
retf
add
and
je
xor
push
add
adc
jge
out
dec
adc
call
data16
pop
add
dec
pop
sbb
in
call
push
adc
adc
call
sbb
jmp
add
sbb
ins
shr
sbb
sbb
out
mov
xchg
arpl
cmp
loopne
pop
push
mov
cmp
inc
mov
retf
in
add
push
cmp
inc
jne
sbb
adc
push
shl
mov
mov
cmp
call
movzx
mov
ja
jns
call
sub
ror
imul
sbb
cmp
jg
cmp
jno
jno
mov
ins
test
je
mov
xor
cmp
push
adc
pusha
mov
and
nop
sub
push
push
jns
or
shl
mov
add
mov
xor
fst
mov
inc
std
mov
call
nop
cmps
add
fwait
stc
lahf
push
xlat
xchg
xor
jge
or
ret
push
push
mov
sbb
popa
lock
cld
adc
clc
scas
fisttp
leave
inc
mov
add
xor
in
add
adc
stc
push
jb
out
mov
adc
dec
sub
add
or
add
pop
adc
fucomp
add
movzx
sub
add
and
adc
fld
and
pop
add
pop
aas
push
ret
sub
adc
jg
je
mov
jmp
sub
cmp
xchg
rol
nop
jmp
xchg
ror
out
(bad)
js
(bad)
xor
push
mov
rol
in
jmp
mov
inc
cmp
jne
inc
adc
mov
mov
ficomp
pop
pop
inc
push
jae
not
call
rol
int3
arpl
rol
imul
or
or
test
xchg
test
fmul
mov
ins
cmp
sbb
repnz
iret
adc
inc
or
sbb
call
sbb
repnz
out
sub
xor
push
sahf
cmps
or
cmp
inc
push
jns
retf
dec
dec
paddw
add
push
int
adc
pop
add
outs
pop
retf
push
test
call
sub
mov
adc
mov
aaa
aam
(bad)
loopne
or
(bad)
cmp
jne
mov
cmp
adc
sbb
or
mov
inc
or
add
ret
dec
ret
jmp
rcr
mov
adc
(bad)
(bad)
rcl
sbb
fucomip
aas
aaa
push
mov
adc
and
adc
mov
mov
pop
or
mov
fsub
bound
cmp
adc
xlat
out
jo
sub
inc
outs
cmp
js
bound
bound
cmp
pop
xor
cli
aas
rol
outs
pop
loop
fist
prefetchnta
mov
xor
(bad)
lahf
xchg
out
sbb
mov
and
test
jne
cwde
ror
jg
sti
add
enter
push
test
shl
pop
push
pop
or
or
jmp
cld
(bad)
in
(bad)
jg
cld
xor
sub
push
adc
and
sub
shl
cs
mov
xor
std
mov
add
repz
or
fcmovnb
jmp
add
add
jns
and
push
adc
sub
pop
pop
jmp
xor
inc
(bad)
mov
fimul
shl
add
add
xor
add
in
repz
or
inc
sahf
cmp
push
pop
icebp
(bad)
movs
and
sub
jg
sub
pop
add
pop
adc
or
or
sub
idiv
jle
cmp
jg
aaa
sub
fsubp
or
sahf
and
jecxz
pop
jg
add
cld
mov
pop
jne
mov
pop
or
pop
mov
inc
add
add
neg
bound
cmp
sbb
push
add
sub
sbb
and
mov
mov
neg
je
mov
je
data16
and
cmps
and
push
mov
jp
add
and
and
cdq
sbb
outs
mov
loope
or
shr
jle
jno
cld
add
call
stc
and
hlt
aad
jne
add
mov
jmp
sar
sbb
mov
or
mov
out
push
pop
jmp
aas
outs
(bad)
mov
ror
xor
mov
je
adc
push
sub
sbb
push
mov
aaa
and
(bad)
mov
inc
sbb
adc
adc
jle
mov
ja
push
cwde
sub
jbe
mov
mov
mov
sub
adc
mov
cmp
shr
(bad)
adc
add
aam
fs
call
fiadd
pop
xchg
xchg
sbb
xchg
aaa
cwde
sbb
mov
mov
add
int3
dec
xchg
jo
push
fisttp
or
inc
push
dec
xor
cmp
hlt
aaa
in
(bad)
jle
and
add
cmp
clc
and
popa
pop
xor
xor
push
scas
push
lahf
retf
inc
cmp
jl
pop
or
and
or
das
cmp
push
jns
sub
sub
inc
add
xor
mov
sbb
sbb
fcmovbe
mov
xor
pop
xchg
adc
jns
xor
test
sub
adc
hlt
add
stc
sbb
pop
loop
or
xor
fiadd
lods
jo
fwait
loope
push
and
popa
sub
lods
xor
and
push
add
and
call
sbb
cmp
and
lahf
sub
push
add
fwait
and
js
cli
push
ror
rol
(bad)
cmc
push
or
inc
(bad)
hlt
(bad)
sar
jns
sar
enter
xlat
add
pop
dec
mov
push
das
sbb
repz
sbb
and
sti
add
call
shl
mov
or
mov
popa
adc
sub
ja
mov
mov
fs
add
je
sbb
cmp
scas
xchg
(bad)
pop
add
jne
add
lods
xor
cli
inc
mov
jmp
sub
fadd
adc
mov
test
jmp
ror
ds
mov
in
scas
sub
ret
sub
cmc
adc
or
push
stos
scas
sbb
inc
or
pop
dec
and
push
add
pop
push
mov
cmp
sbb
inc
pop
cmp
inc
cmp
xchg
das
nop
push
and
jns
shl
mov
popf
add
je
std
mov
xchg
test
js
mov
and
div
mov
xchg
outs
movs
call
add
sub
mov
cmp
and
or
data16
mov
jmp
sub
inc
sub
ja
gs
ins
cmp
fisttp
push
mov
or
push
xor
mov
imul
nop
inc
jae
pop
jmp
cmp
push
(bad)
out
add
push
or
sub
push
push
rol
aas
push
push
inc
or
or
pop
ins
call
mov
adc
dec
(bad)
add
test
pop
adc
sbb
je
pshufw
push
lea
mov
adc
ss
test
je
add
add
test
sub
or
imul
sub
paddusw
cmp
cmps
inc
jo
stos
or
ror
push
stc
cdq
or
in
sar
push
inc
dec
jne
jmp
lods
jl
movs
or
xchg
or
sub
mov
inc
jmp
jmp
adc
xchg
jb
push
inc
clc
out
int
ucomiss
loope
add
cmp
xchg
xor
(bad)
adc
add
jmp
and
xchg
cwde
cwde
and
pop
jmp
mov
jmp
dec
push
mul
jmp
dec
das
xlat
ret
pop
sar
or
or
inc
movzx
xor
inc
(bad)
sbb
jle
xor
add
inc
jle
cmp
cmp
ror
mov
imul
sub
cmp
sub
add
(bad)
cmps
clc
(bad)
xor
add
add
mov
ret
xor
inc
ret
and
xor
mul
or
(bad)
fdivp
add
shl
jge
lods
pop
cmp
(bad)
jg
adc
jne
xchg
test
jg
ja
mov
cs
into
ins
dec
test
cmc
add
test
sub
cmps
outs
stos
xor
jb
repz
fadd
in
jp
jb
and
xchg
add
outs
jb
and
mov
or
add
(bad)
mov
out
std
std
call
adc
sub
mov
or
(bad)
lock
dec
xor
mov
xchg
ret
add
jmp
cs
loope
repnz
mov
por
push
in
fstp
movs
aam
sbb
sbb
mov
push
cmc
push
cwde
es
pop
sub
dec
adc
in
push
jbe
pop
call
or
or
pop
adc
adc
push
aad
cwde
or
mov
push
fdivp
scas
mov
jne
push
xor
mov
ins
mov
or
sbb
popa
or
jne
cmp
jae
inc
xor
push
aas
hlt
ds
push
or
push
sub
mov
push
daa
or
pop
or
les
pop
pop
mov
clc
push
sbb
push
stos
mov
inc
movs
les
bound
test
dec
aas
adc
aas
clc
sub
movs
call
fbstp
loopne
mov
mov
mov
jbe
fsubr
(bad)
enter
stc
mov
(bad)
sub
cs
push
icebp
bound
cmps
fsubr
ror
push
int
pushf
arpl
adc
jmp
xor
jp
jbe
xchg
(bad)
dec
jae
pusha
ja
xchg
cwde
movs
jge
jne
xor
or
push
sbb
push
test
test
mov
inc
neg
mov
(bad)
out
into
lahf
push
cmc
push
in
sbb
or
inc
ins
aas
add
clc
jge
pop
push
or
adc
iret
mov
add
fcmovbe
mov
fisub
movs
jmp
(bad)
cmp
call
and
data16
scas
in
add
xlat
jb
cs
push
call
xchg
xchg
test
lock
cmp
adc
jg
pop
pop
shrd
rol
outs
add
adc
std
sub
mov
ja
cmp
jge
push
lock
add
(bad)
xchg
lods
xor
add
(bad)
sub
dec
test
jl
cs
add
sbb
push
push
inc
dec
jne
fisttp
add
mov
sub
cs
inc
and
pop
or
add
into
sbb
mov
mov
cmp
lea
adc
push
sub
jo
add
sbb
stos
jg
shl
or
(bad)
fcom
ins
push
out
add
sbb
add
ss
jmp
dec
sub
outs
pop
ret
jno
dec
sahf
shl
loope
ret
push
(bad)
jmp
xchg
js
mov
imul
scas
push
clc
adc
jmp
cs
int
es
in
jns
xor
hlt
out
ror
jb
sub
je
outs
xchg
jmp
adc
rol
daa
in
mov
mov
ins
aam
jo
imul
ins
cmps
xor
stos
test
test
outs
popf
loopne
ins
xor
mov
inc
cmps
and
dec
dec
in
cdq
in
or
or
in
test
cs
les
push
icebp
jge
jo
lds
push
outs
pop
in
mov
out
xchg
or
mov
adc
mov
pop
and
das
push
mov
sbb
mov
loope
cmp
mov
jnp
jb
xchg
push
mov
add
out
inc
push
mov
inc
loopne
cld
ds
adc
int
daa
jne
call
jbe
adc
jne
add
inc
loopne
xor
jbe
outs
cwde
sbb
inc
add
ins
lock
iret
push
xor
in
add
adc
pop
mov
in
es
data16
mov
test
es
clc
xchg
inc
jg
js
cmc
je
into
add
pushf
mov
je
in
pop
lock
mov
jp
fadd
lods
shr
sbb
call
loopne
inc
fld
fcompp
fstsw
sahf
setne
jmp
loopne
mov
add
je
jle
dec
and
add
outs
add
mov
dec
and
sbb
inc
add
outs
mov
lock
lock
icebp
(bad)
jo
stos
sbb
adc
test
into
jge
jmp
adc
jmp
and
pop
or
out
adc
ins
xchg
daa
xchg
movs
inc
je
or
outs
adc
popa
je
mov
cmp
xchg
adc
sub
in
mov
add
mov
cmp
fisttp
sbb
les
clc
jmp
imul
mov
push
push
add
in
enter
mov
mov
cmp
shr
and
cmp
push
inc
mov
xchg
pop
clc
push
xor
nop
mov
inc
push
shr
pop
clc
fisttp
loopne
pushf
mov
shr
jo
arpl
add
lahf
cmp
cmp
and
lahf
hlt
add
add
repz
xor
mov
rol
add
test
jo
sbb
pop
sbb
clc
sub
test
je
or
scas
imul
(bad)
outs
pop
push
stos
mov
push
cwde
pushf
sbb
inc
jnp
xor
mov
pop
mov
xor
add
sub
dec
pop
adc
iretw
daa
inc
nop
pop
xor
mov
pop
daa
repnz
add
xor
cmp
and
pop
ja
shr
push
or
test
add
aaa
cld
loop
sbb
(bad)
(bad)
pop
ror
stos
jbe
cmp
adc
sbb
lods
or
push
sbb
dec
sbb
call
enter
dec
push
cmps
test
inc
pop
pushf
not
mov
or
adc
add
pop
imul
xor
je
add
dec
jne
sub
jmp
push
xor
jmp
or
mov
daa
lods
aad
xor
cmp
pushf
sub
ins
or
xchg
cli
adc
mov
ins
frstor
stos
and
add
push
and
or
loopne
sbb
scas
push
adc
add
arpl
add
cmp
jecxz
sub
adc
or
push
push
inc
push
add
mov
rol
scas
push
sbb
push
or
or
inc
xchg
fnstenv
imul
push
ret
lea
ins
xlat
ret
ins
ins
cmps
dec
ret
sbb
push
sub
in
int
adc
push
outs
xchg
push
inc
call
mov
dec
pop
out
in
or
sbb
mov
xchg
adc
je
ins
adc
jo
lds
repnz
or
mov
or
vfmsub132ss
enter
mov
mov
jge
clc
int
inc
stos
fld
and
push
cmp
add
inc
jg
(bad)
fild
int
xchg
shl
div
pop
cmp
inc
add
add
call
xor
xor
mov
inc
les
enter
push
ins
jnp
call
add
rol
(bad)
das
cmp
cli
add
bound
and
xor
xor
and
enter
inc
mov
sub
int3
adc
and
adc
js
mov
repnz
or
or
mov
inc
ins
jo
out
push
out
push
jecxz
add
jne
push
adc
xchg
out
mov
inc
pop
out
pmaddwd
xchg
rol
or
sub
xor
jmp
jecxz
adc
adc
pop
ror
xchg
clc
push
out
lock
dec
(bad)
push
push
loope
mov
rol
loope
popa
loop
or
adc
loope
jg
cmp
and
outs
pop
arpl
je
or
je
add
xor
cmps
and
mov
adc
lock
mov
aam
mov
add
(bad)
(bad)
(bad)
fiadd
(bad)
test
jp
(bad)
pop
sbb
fadd
cmp
sbb
push
(bad)
pop
jge
pop
add
ins
jmp
adc
(bad)
mov
pop
jae
jo
push
int
jmp
push
add
dec
pusha
add
sbb
mov
invd
xor
pop
mov
bound
cmp
cmp
imul
hlt
loopne
adc
mov
dec
mov
sub
mov
xor
lock
pusha
mov
mov
int3
mov
xchg
mov
jno
dec
adc
mov
cmp
push
addr16
push
jge
sbb
(bad)
hlt
dec
lea
jno
in
in
xor
test
mov
pop
fsubr
sub
jle
cmp
inc
jge
adc
cmp
and
imul
cmc
(bad)
cmc
jecxz
mov
jge
lea
movs
cwde
popa
clc
jmp
addr16
ins
inc
adc
arpl
push
add
dec
loope
jo
frstor
add
adc
jle
cmp
jb
loopne
aaa
jg
(bad)
fbstp
js
add
jb
ud0
ja
dec
mov
add
loopne
adc
inc
mov
sub
repz
push
(bad)
sahf
adc
pusha
les
sbb
xlat
aaa
push
and
inc
xor
add
repz
xchg
cmps
add
mov
mov
cmp
lds
in
inc
mov
add
ins
xor
stos
mov
or
popa
inc
rol
inc
adc
(bad)
jge
mov
pop
mov
push
and
sbb
aam
mov
dec
(bad)
push
mov
rol
in
adc
adc
cmp
test
xor
retf
jmp
add
mov
xchg
cmp
pop
je
into
shr
add
push
mov
jo
popa
xchg
cs
daa
pusha
mov
add
push
xor
lock
les
lea
retf
push
jecxz
fcmovbe
js
addr16
shl
or
cld
and
test
inc
inc
fmulp
dec
inc
js
and
dec
int
rol
(bad)
out
xchg
ret
ds
aas
ins
mov
jl
shl
cmp
push
mov
imul
jo
xlat
push
push
cmp
add
outs
mov
mov
push
xor
mov
shr
pop
and
or
jge
inc
cdq
cmp
jge
or
mov
jl
dec
dec
push
cli
pop
cli
dec
or
in
(bad)
enter
pop
mov
add
and
mov
fld1
and
jne
jbe
(bad)
pusha
call
cmp
aaa
push
add
and
sar
push
neg
shl
loope
fadd
sti
sub
jo
icebp
test
jmp
or
sbb
in
or
add
adc
test
and
cmp
jle
xor
into
push
out
mov
test
adc
sub
adc
sub
adc
pop
xchg
adc
adc
mov
mov
cwde
cmp
xlat
call
or
sub
das
jl
add
cld
push
call
sbb
mov
cwde
inc
hlt
push
add
or
add
ins
in
lock
test
sbb
inc
ret
jb
mov
es
add
js
push
add
mov
ret
loopne
out
or
ret
push
xor
add
add
into
adc
ja
pusha
(bad)
pop
into
sub
test
movzx
idiv
test
je
push
or
fwait
loop
es
add
stc
sbb
pop
ret
inc
inc
xchg
xchg
or
imul
loopne
jo
push
mov
add
es
jae
mov
adc
mov
or
sub
mov
mov
mov
xor
fiadd
shr
inc
aas
test
push
cmp
mov
push
pusha
cmp
xor
cmp
jne
ins
lock
sbb
or
stc
add
sub
jmp
add
fistp
push
out
push
mov
mov
mov
mov
not
sbb
shl
cmps
je
mov
cmp
jb
cmp
ja
sub
mov
jg
not
cmp
or
sbb
sub
sub
je
pop
pop
call
push
loop
xor
xor
cmp
jae
push
fidiv
lock
div
(bad)
cmp
shr
ret
cmc
clc
inc
rol
lock
jb
xchg
cmp
jo
rcl
mov
cmp
push
jb
bound
out
sbb
push
adc
and
add
add
jmp
das
adc
das
adc
call
iret
(bad)
in
rol
ja
inc
cmps
jb
in
out
ret
femms
pop
int
push
sub
lock
dec
or
jne
into
mov
push
scas
dec
jmp
jmp
pop
outs
outs
lock
repz
sbb
icebp
gs
and
rcl
fild
mov
mov
lahf
div
cld
scas
repnz
lods
dec
je
mov
mov
and
icebp
jbe
(bad)
(bad)
out
outs
push
lea
mov
lods
and
mov
push
mov
repz
pop
mov
jne
lea
or
sbb
cmp
xor
idiv
nop
jne
add
or
or
aaa
adc
or
jl
inc
xor
adc
je
or
dec
xchg
cmp
inc
je
or
je
push
jecxz
scas
inc
dec
jne
push
or
xor
and
test
fsub
inc
call
(bad)
das
sahf
inc
dec
push
and
call
clc
js
xor
in
jo
add
xchg
xlat
pop
enter
rol
aas
xor
ret
push
lock
or
lock
test
pop
jbe
mov
ja
pusha
jnp
or
pop
cmp
jmp
pop
les
mov
inc
out
mov
mov
sahf
dec
xlat
mov
mov
push
or
push
push
pop
lock
xor
or
cs
inc
cmp
mov
jge
scas
test
push
add
dec
outs
pop
pop
sub
je
sbb
clc
jo
push
push
cmp
or
push
fiadd
stos
mov
inc
cmp
ret
jno
sar
sbb
aam
test
xor
(bad)
test
sub
adc
mov
shl
iret
add
or
mov
popa
cs
imul
push
or
(bad)
ins
adc
jo
inc
lock
or
push
push
ret
arpl
cs
fnstcw
xor
outs
sbb
lea
shl
jl
sti
ins
sub
fild
fsubr
adc
mov
rcr
bound
push
jmp
pusha
clc
adc
jne
inc
mov
(bad)
ss
arpl
sub
jae
pusha
mov
xchg
jle
jl
mov
adc
jle
lea
xchg
mov
mov
push
outs
and
inc
cld
or
jnp
fld
lock
push
je
cmp
mov
sbb
call
inc
(bad)
fbstp
mov
lea
cmp
jle
pop
add
ds
cmp
sub
bound
add
sbb
cs
in
ret
fucomp
mov
add
push
cs
in
add
adc
pusha
jno
mov
cmp
aad
retf
mov
clc
je
popa
adc
repnz
xchg
push
add
hlt
inc
push
(bad)
jle
ficom
in
add
and
or
sbb
push
mov
(bad)
dec
sub
dec
mov
mov
cmp
sbb
add
jo
fisttp
test
sbb
sub
add
mov
movs
les
cmp
xchg
pop
xor
add
rol
xor
xor
xor
cmp
cld
sub
jl
inc
xchg
idiv
sub
xchg
jge
xor
inc
fcomip
jl
setb
sbb
mov
inc
or
mov
or
jge
adc
lods
rol
loopne
icebp
xor
scas
or
add
(bad)
fisttp
add
xor
(bad)
clc
movs
add
std
add
in
mov
je
mov
pop
xor
ror
test
inc
sbb
call
es
adc
push
fistp
cdq
xchg
xor
pmuludq
sbb
lods
pop
cs
or
adc
in
and
out
call
adc
popa
data16
inc
mov
jne
jge
push
add
push
or
push
or
fs
and
pop
sub
fcomp
jae
in
add
repnz
pushf
inc
jne
dec
sar
add
add
cmp
jbe
and
(bad)
mov
add
sub
cdq
sbb
loope
sub
jbe
mov
adc
inc
mov
in
movzx
mov
pop
cli
ss
xor
xor
cmp
aaa
mov
xor
add
push
dec
test
mov
xor
jbe
xor
jne
cmp
jo
retf
sub
sar
jns
ror
test
retf
jbe
aam
retf
sbb
dec
in
popf
and
mov
outs
sbb
js
xor
data16
sbb
out
adc
jmp
push
out
or
jge
pop
ror
jmp
adc
or
inc
jmp
pusha
jp
neg
jmp
adc
adc
(bad)
mov
push
ja
mov
sub
ja
pop
icebp
add
pop
pop
push
or
cmp
cld
imul
rol
sub
adc
push
mov
rol
or
or
or
cmp
inc
cli
pop
sbb
adc
dec
lock
xor
jne
cmp
jl
stos
mov
inc
pop
adc
xor
mov
mov
pushaw
add
xor
mov
ss
(bad)
clc
neg
inc
jmp
lock
xchg
dec
and
movs
mov
inc
pop
adc
mov
mov
movs
or
dec
retf
push
fisttp
ja
test
push
sbb
push
rcr
mov
ret
fdivr
pop
das
jne
aaa
mov
push
xor
inc
(bad)
push
das
mov
sbb
or
and
rcl
jg
sar
ss
add
or
sub
aam
je
add
in
mov
in
sub
lea
xor
sbb
add
inc
in
xlat
shr
or
retf
push
pop
out
test
cmp
jne
lea
repnz
je
push
adc
jmp
sbb
add
xchg
pushf
add
mov
call
mov
stos
(bad)
aad
mov
or
adc
add
stc
call
sub
inc
neg
inc
dec
(bad)
pop
adc
inc
add
or
inc
and
pop
xchg
imul
cmp
cmc
shr
xor
add
cmp
push
mov
dec
mov
mov
mov
sbb
dec
(bad)
push
dec
mov
por
add
pop
inc
mov
push
inc
xor
mov
adc
in
xchg
fnsave
test
hlt
inc
push
pop
loope
and
and
push
daa
or
sub
or
adc
jge
mov
or
popa
out
adc
out
pop
out
xchg
rcr
out
rol
mov
loop
rcl
movs
sub
add
adc
and
(bad)
push
inc
xor
cwde
sub
cmps
push
adc
dec
mov
and
ror
add
rcr
shr
inc
xlat
and
xor
inc
ret
jle
xchg
xor
sub
jmp
add
test
push
jmp
adc
push
in
aas
out
pushf
mov
bound
mov
scas
jmp
mov
cmovge
lds
repnz
mov
jl
fs
popa
mov
mov
cli
fcom
jb
aam
aam
(bad)
aad
inc
adc
cs
rcr
ret
or
bound
or
loopne
jmp
mul
mov
rol
jbe
mov
clc
push
fbstp
xor
stos
adc
add
shr
adc
shr
or
sar
mov
neg
jmp
or
(bad)
mov
inc
pop
jmp
push
mov
sub
push
dec
div
xor
inc
dec
or
jne
or
jg
or
add
jmp
xchg
jle
shl
pop
fdivrp
and
sub
push
mov
sub
jo
arpl
mov
add
mov
mov
repnz
mov
out
jbe
ret
ficom
push
out
mov
rol
popf
data16
jge
jecxz
adc
inc
add
mov
(bad)
dec
jge
add
or
xchg
je
pop
fs
(bad)
mov
jg
add
mov
cs
sub
dec
sbb
clc
mov
mov
jne
mov
jmp
jne
mov
cmp
je
or
or
mov
cmp
sbb
push
pop
jb
mov
call
mov
sub
out
and
push
sub
cmp
outs
clc
cmp
dec
add
inc
inc
lods
or
adc
in
dec
fcomp
stos
scas
fadd
cld
sbb
dec
(bad)
add
dec
adc
cmps
cmp
std
jl
repnz
xor
outs
xor
inc
push
adc
fldenv
jge
jmp
mov
and
pop
ja
adc
push
stos
sbb
mov
pushf
fisub
adc
jmp
fild
add
scas
xchg
dec
and
add
sub
push
add
add
leave
mov
mov
fnstenv
push
push
mov
sbb
xor
jb
mov
push
or
mov
xor
clc
(bad)
pop
or
enter
div
mov
inc
mov
je
dec
jne
add
and
nop
add
mov
cmp
in
and
and
dec
push
xor
jecxz
lea
inc
cs
mov
sti
dec
jne
ret
stos
adc
dec
ja
xor
mov
pop
out
mov
pop
sbb
stos
dec
mov
lea
add
xor
cmp
je
push
push
cmp
adc
out
out
xchg
adc
push
mov
add
inc
loop
ret
push
inc
mov
mov
dec
push
mov
(bad)
scas
and
repz
sub
sub
and
adc
and
sub
inc
out
in
jbe
sub
sub
mov
xor
or
or
sbb
popf
cmp
fs
xor
push
sub
dec
aas
cwde
sbb
sub
(bad)
call
mov
jnp
je
mov
shr
jmp
push
inc
or
and
xsha1
cmps
push
jne
mov
sbb
push
mov
imul
mov
pop
push
push
sti
loope
fwait
cmp
mov
mov
inc
cli
aam
cmp
ins
je
or
adc
jne
adc
jle
or
sbb
push
and
push
ins
push
lock
cwde
cld
in
mov
cmp
shl
lahf
cmp
cli
or
dec
(bad)
or
sub
cmps
sub
je
or
sub
jo
add
jp
loop
add
push
or
les
fisubr
add
lods
mov
es
jmp
(bad)
(bad)
mov
inc
bound
in
mov
add
(bad)
and
dec
(bad)
xchg
cmp
fidivr
idiv
or
jg
push
mov
pop
mov
jmp
inc
jmp
cmp
idiv
fidivr
mov
inc
mov
jmp
cmp
lods
es
or
test
inc
iret
add
mov
fcom
ja
mov
xchg
addr16
pop
jmp
out
jae
shl
pusha
inc
repz
(bad)
cmp
in
sar
push
xchg
nop
add
out
add
xchg
or
lods
stos
movs
enter
pop
les
stos
sbb
adc
aam
jg
in
repnz
add
data16
dec
push
mov
or
lea
pop
(bad)
pop
aam
jne
aaa
pop
mov
icebp
fdiv
xor
xor
sub
icebp
xor
sbb
idiv
mov
lds
push
jmp
inc
jmp
or
sub
jmp
push
fwait
inc
test
cmp
je
pusha
push
mov
jle
xor
gs
or
imul
stos
outs
mov
sbb
repnz
dec
dec
mov
jmp
inc
(bad)
call
dec
loope
inc
xchg
mov
inc
push
or
das
test
es
sbb
or
or
xor
iret
nop
sbb
enter
jp
je
repnz
jne
ds
fwait
mov
sub
addr16
mov
mov
nop
pop
pop
subps
lods
inc
push
pop
repz
pop
(bad)
neg
add
pop
rcl
mov
hlt
or
shl
or
xor
aaa
rcl
push
push
adc
sbb
cmp
sbb
inc
push
inc
xor
pop
aam
imul
(bad)
aas
sub
adc
sar
inc
jl
dec
mov
fabs
dec
aaa
loope
mov
frndint
xchg
fld
fwait
ret
or
neg
jge
fwait
mov
test
je
fidiv
fistp
fbstp
lea
mov
inc
sub
mov
shr
and
add
or
sbb
dec
mov
ret
or
mov
cld
cmp
outs
(bad)
mov
call
jae
cmp
jb
mov
js
sub
mov
cmp
push
pusha
xor
or
mov
dec
sbb
mov
lods
xor
push
mov
push
std
mov
mov
ret
xor
or
aad
push
mov
dec
dec
add
ror
je
mov
or
push
neg
neg
sbb
push
das
cmp
mov
pop
mov
mov
sbb
jae
dec
dec
std
xchg
inc
jns
rol
fild
sub
mov
cli
mov
fidiv
jecxz
inc
add
fwait
or
adc
cli
aas
shl
sbb
sub
mov
and
jne
dec
jne
xchg
fsubr
add
stos
aas
and
shl
lea
inc
pop
into
ret
add
cmp
jbe
pop
jmp
mov
sbb
pop
clc
cmp
(bad)
mov
mov
mov
test
mov
fnstcw
fclex
fldcw
js
mov
dec
dec
and
push
fs
sub
jle
mov
xor
add
and
pop
cmp
je
sub
(bad)
in
fst
xor
aaa
(bad)
pop
add
lahf
fst
push
je
mov
fdivr
mov
dec
js
movs
mov
add
or
das
mov
fistp
jmp
fstp
fstsw
test
jo
mov
fstp
mov
aas
ins
dec
jmp
mov
and
sbb
pop
repz
repnz
ret
mov
pminub
push
mov
inc
mov
mov
stc
popa
imul
imul
push
loop
or
cli
hlt
es
dec
add
xchg
inc
pop
add
adc
push
sbb
in
aas
mov
pop
cmp
loope
push
sbb
push
or
inc
mov
enter
mov
add
fbld
add
add
addr16
loope
fsub
adc
inc
push
data16
(bad)
cld
cmp
add
xchg
and
pop
(bad)
fneni(8087
pusha
jle
mov
jo
mov
and
push
daa
test
loopne
lahf
mov
aam
shl
xchg
lods
into
outs
(bad)
mov
mov
addr16
sbb
sbb
mov
or
pusha
and
rcl
sahf
sbb
fld
bound
push
inc
out
outs
jge
and
retf
xor
je
mov
mov
(bad)
ins
lock
mov
sti
pop
in
nop
imul
cmc
idiv
test
je
fcmovu
sub
xchg
call
jae
mov
out
add
ror
sub
push
fwait
mov
or
jae
fstp
cmp
cmp
jb
xchg
cwde
movs
and
nop
shr
data16
leave
(bad)
jle
jo
mov
pop
push
out
leave
les
xchg
cmp
or
gs
sub
fist
daa
nop
sbb
xor
lahf
call
aam
sub
dec
add
or
cmp
fwait
pop
pop
push
adc
mov
xor
fwait
sahf
ins
adc
push
adc
adc
inc
rcl
test
jl
cmp
add
jle
cmp
or
add
sbb
xor
and
xor
push
xor
pop
push
aaa
neg
xchg
ja
bound
sub
inc
inc
loopne
sbb
xchg
movs
or
sub
clc
adc
inc
in
es
mov
das
and
ja
nop
push
and
pop
mov
pop
xor
pusha
add
dec
imul
loope
or
jmp
add
add
adc
mov
pop
and
or
(bad)
jmp
rcl
dec
inc
or
xchg
nop
pop
push
cmp
retf
mov
inc
push
push
hlt
push
xchg
inc
idiv
xchg
xchg
cmp
jae
or
cmp
push
cwde
or
aaa
or
dec
cmp
jae
mov
rol
adc
imul
ss
and
nop
add
add
imul
sbb
pop
mov
fstp
fwait
mov
add
pop
pop
add
movs
jp
fisttp
or
xor
pusha
ins
sub
or
xchg
mov
xor
fild
jne
push
icebp
sub
xor
lods
hlt
lea
mov
jge
ret
fidivr
popf
dec
(bad)
jbe
cmp
and
pop
sub
pop
enter
loopne
call
and
fldenv
mov
mov
div
retf
mov
ficom
stos
or
add
scas
push
mov
(bad)
hlt
std
push
movs
jg
xchg
inc
lea
(bad)
sub
jnp
ret
mov
ja
and
outs
int
fbstp
or
jb
push
ins
je
cmp
xor
(bad)
ja
adc
jle
mov
pop
dec
inc
or
dec
jne
sub
dec
mov
aas
cdq
idiv
imul
clc
cmp
shr
xchg
ret
cli
add
repnz
sbb
ds
add
pusha
ret
or
dec
sbb
stos
inc
adc
inc
gs
std
(bad)
push
lds
mov
rcl
cmp
inc
pop
fsubr
pop
or
add
call
and
aam
cs
dec
loopne
or
in
test
jg
ret
add
scas
mov
or
inc
sbb
xchg
lods
sahf
arpl
cmps
sbb
or
adc
push
jge
mov
stc
mov
add
add
pop
xor
add
jl
push
adc
sub
ins
(bad)
cs
dec
cmp
mov
ins
push
push
sub
addr16
mov
pop
mov
pop
sbb
add
add
pusha
xchg
cmp
adc
push
es
scas
push
xor
ret
jbe
popf
inc
icebp
jp
cmp
(bad)
dec
cmp
jb
adc
sbb
(bad)
cmp
xor
adc
mov
add
adc
(bad)
push
or
jbe
push
pop
or
je
shr
bound
sub
push
or
push
push
push
add
cmp
cmp
inc
push
nop
cdq
jo
cmp
and
add
scas
inc
pop
fcomp
xchg
jae
inc
icebp
or
push
fdivr
push
adc
clc
inc
and
call
std
sbb
cld
mov
daa
and
inc
dec
adc
je
loopne
xchg
dec
into
fisubr
adc
loopne
and
or
add
jecxz
adc
mov
sbb
fwait
push
pop
sbb
imul
sbb
inc
sub
pop
fstp
cdq
add
sbb
mov
and
movs
add
jl
cmp
cmp
dec
adc
std
sti
aaa
mov
push
jns
je
ins
cs
je
ins
jae
inc
shl
mov
outs
mov
pop
mov
clc
push
cmp
jge
pusha
and
cmp
mov
add
add
pop
sbb
push
ror
addr16
sbb
xchg
lods
xor
mov
sub
mov
lea
pop
push
add
das
push
retf
inc
xor
jle
jmp
aas
jmp
test
jle
add
lea
push
out
add
fcom
add
jmp
es
gs
xor
rcr
xchg
and
add
cmp
rcr
test
fmul
scas
ror
add
mov
jbe
js
adc
fcmovb
inc
xchg
fcom
jmp
int3
mov
or
jp
aaa
mov
out
js
ret
dec
rol
or
xchg
pusha
add
in
ins
aaa
pop
sbb
jne
xor
add
jo
lea
lea
xor
cmps
mov
ror
jecxz
outs
loop
rcl
outs
push
movs
jge
mov
mul
scas
test
jl
daa
call
xchg
leave
mov
dec
add
and
mov
adc
xchg
inc
les
fs
sahf
mov
adc
test
and
mov
ret
jmp
mov
test
jmp
inc
in
mov
js
icebp
adc
cmps
je
icebp
std
addr16
mov
dec
jne
popa
(bad)
jle
push
jmp
data16
test
pushf
mov
mov
jg
arpl
add
cmp
pop
mov
add
ss
mov
add
test
cmp
inc
pop
scas
(bad)
or
jl
test
inc
add
sub
adc
pop
pop
mov
out
cmp
sbb
sbb
pusha
mov
push
test
ret
inc
inc
add
pop
fnstenv
dec
in
add
jnp
xlat
xchg
add
div
test
jle
pop
aad
jg
hlt
shl
inc
push
add
sbb
or
jne
pop
cmp
jne
or
adc
dec
mov
in
pop
scas
out
push
xchg
pop
mov
pop
jns
dec
popa
out
add
daa
push
daa
lock
ret
push
loop
ror
push
add
div
imul
test
inc
or
mov
hlt
data16
xor
push
sub
inc
add
leave
dec
test
inc
push
fbld
mov
bound
repnz
mov
push
(bad)
fbstp
mov
add
jp
stos
lahf
cmp
je
loopne
retf
and
xor
mov
jmp
lahf
(bad)
sbb
or
mov
data16
jo
sti
dec
pop
jbe
dec
jne
mov
push
movs
pop
loopne
inc
fidiv
cmp
ja
ja
sub
retf
pusha
sub
or
or
or
or
xchg
cmc
or
add
add
neg
push
or
js
es
bound
xor
fimul
jl
push
jge
stc
cmp
hlt
jle
fwait
int3
movq
iret
mov
add
sbb
sbb
pop
or
les
daa
sub
sub
icebp
mov
cmp
pop
adc
xor
xor
stos
pop
add
bound
in
hlt
data16
push
push
in
sbb
pop
in
call
sub
sbb
jmp
push
jae
sub
mov
lods
fild
mov
outs
mov
rcl
je
dec
je
or
mov
ins
xor
mov
mov
sti
mov
dec
cs
enter
movs
aad
xor
add
pop
pushf
mov
add
fdiv
sub
addr16
push
fdivrp
push
dec
in
xor
fiadd
(bad)
(bad)
inc
outs
jp
fisub
or
xor
clc
jmp
push
mov
mov
je
xor
je
or
push
jmp
hlt
div
cmp
pop
sub
push
cmp
dec
mov
pusha
inc
jne
inc
mov
add
cmp
adc
cwde
xchg
add
push
push
fidiv
mov
add
cmp
(bad)
test
enter
in
imul
fs
push
pop
fmul
jmp
sbb
ins
cdq
ret
lods
jle
xor
mov
or
xor
enter
hlt
xor
lock
add
inc
sbb
ret
jge
jge
div
pop
xchg
add
(bad)
out
push
icebp
lds
add
or
sub
scas
push
pusha
sar
sub
std
xchg
arpl
js
xchg
dec
repz
inc
lock
fnsave
(bad)
(bad)
in
sbb
and
lods
push
pushf
cmp
push
lahf
rcl
cmps
lahf
test
lahf
adc
test
mov
inc
jl
inc
jmp
add
or
jb
arpl
cwde
sbb
adc
jl
cmp
mov
outs
lea
jl
mov
add
bound
rcr
test
push
test
or
inc
rol
dec
or
xor
jne
jl
mov
sbb
fmul
xchg
jmp
pusha
add
clc
jg
outs
push
mov
cmp
mov
push
in
sub
aas
mov
xor
iret
mov
test
mov
cmc
neg
jo
push
test
sbb
jb
fsubr
mov
xchg
mov
mov
add
add
pop
pop
out
int3
adc
and
add
loop
loop
add
push
(bad)
fsubr
or
push
(bad)
mov
cld
dec
pop
jl
adc
mov
or
test
mov
sbb
je
call
mov
sbb
je
sub
mov
dec
sbb
pop
ins
mov
lods
cmp
mov
push
call
xchg
push
sbb
test
fldenv
retf
enter
enter
je
aaa
cmps
cmp
lods
dec
inc
lea
mov
movsx
mov
lea
ficomp
lds
jmp
add
daa
xor
jae
jo
outs
test
pushf
jge
(bad)
push
mov
pop
xor
fcomp
dec
add
inc
adc
scas
push
ret
xor
cmp
pop
mov
mov
test
stc
aam
adc
loopne
mov
das
add
add
and
xor
out
pop
lea
xor
mov
sbb
cli
(bad)
cli
pop
outs
sbb
add
(bad)
dec
cmp
jg
jl
lods
cmps
(bad)
pop
(bad)
and
pop
stos
xlat
mov
shl
clc
mov
je
(bad)
fs
je
hlt
sbb
imul
add
lea
cdq
sub
(bad)
xchg
jmp
int3
movs
(bad)
adc
mov
or
shl
jp
and
sbb
lods
mov
call
in
cmp
test
in
test
pop
and
hlt
ss
jbe
(bad)
push
cmp
fisttp
add
popa
jbe
dec
ds
loope
add
push
call
dec
movs
scas
mov
push
sbb
lahf
cdq
shl
stos
fs
add
mov
add
xchg
test
cmps
and
adc
add
push
cmp
in
mov
popa
cs
cmp
cmp
jl
loopne
ins
inc
(bad)
jne
inc
scas
cmps
addr16
je
lds
fs
popa
jmp
cmp
jo
out
(bad)
push
dec
je
call
or
fldpi
cli
je
jmp
mov
sbb
adc
push
add
or
jns
jle
ret
mov
stos
jno
jl
mov
mov
inc
fs
outs
into
fidivr
adc
int
dec
stos
sbb
fs
xchg
add
inc
xchg
sbb
push
mov
push
mov
sti
aas
jmp
adc
cmp
jg
jle
mov
out
inc
cld
cdq
xor
sub
add
ror
bound
push
imul
add
mov
adc
pop
cld
jmp
dec
pop
cli
pop
xchg
fs
repnz
(bad)
mov
push
sub
sub
push
mov
add
loop
inc
enter
sub
push
jmp
inc
pusha
test
push
jbe
mov
add
push
mov
addr16
fcomp
lock
fadd
mov
dec
pusha
push
push
ret
push
lahf
mul
lea
repz
add
lock
jbe
nop
sub
jmp
mov
mov
mov
xor
cld
inc
mov
add
jl
xor
imul
mov
in
push
mov
movs
aam
mov
add
call
rcl
(bad)
je
mov
or
and
ficomp
pop
enter
enter
add
in
clc
shl
jb
and
sahf
cmp
push
push
mov
in
fisttp
sub
mov
mov
out
jmp
cmp
rcr
sbb
fisttp
xchg
xor
in
ret
mov
and
jo
jge
add
rcl
push
add
les
jb
push
(bad)
push
aas
pop
inc
dec
mov
cmp
cmp
jle
and
fs
pop
or
in
jne
mov
add
or
push
add
test
(bad)
and
mov
cmps
fsub
ror
dec
es
mov
pushf
sub
dec
and
fild
pop
out
jmp
add
push
es
push
jge
movs
jge
(bad)
and
int
int3
shr
cld
jp
push
inc
pop
aad
dec
mov
mov
aad
fsubr
aad
sub
rcr
dec
int3
xchg
pavgb
and
cmp
or
loop
popa
mov
inc
add
mov
xchg
in
stos
nop
or
test
xor
neg
(bad)
add
aaa
mov
test
push
ret
sar
push
inc
loopne
pusha
iret
(bad)
js
dec
adc
arpl
adc
mov
sbb
(bad)
jmp
push
sbb
sub
or
test
jl
dec
js
jbe
pop
icebp
sahf
clc
pop
popf
cmp
in
or
bnd
gs
pusha
shr
enter
jae
rol
imul
or
ret
sbb
xor
pop
mov
inc
push
or
cmp
jecxz
sub
mov
sbb
or
add
sbb
inc
arpl
push
cld
icebp
(bad)
hlt
hlt
push
hlt
test
pusha
cmp
pop
jb
pop
sti
cld
sti
pop
mov
sahf
or
push
and
xchg
dec
mov
jge
push
stos
js
cmp
mov
lock
and
or
push
bound
cmp
je
ret
fwait
bound
ss
setl
adc
les
es
and
jbe
pushf
xchg
inc
jl
push
push
adc
mov
shl
add
push
sub
sbb
add
je
and
jle
push
lea
stos
pop
cmp
mov
mov
push
or
xor
mov
add
out
dec
push
or
fcmovnb
jg
xchg
ja
ss
jle
sub
dec
jge
call
xchg
mov
jae
inc
adc
lahf
push
rcr
call
dec
nop
push
daa
sahf
fsubr
push
dec
cs
sbb
ret
repnz
stos
xor
(bad)
jmp
fild
cmp
test
dec
add
in
je
sub
ins
xchg
rol
cmp
push
gs
or
push
or
shl
mov
adc
aam
sbb
ins
xchg
and
sbb
(bad)
cwde
dec
mov
push
pop
adc
shl
hlt
cld
and
push
jmp
pop
fs
jle
mov
sbb
push
mov
inc
in
push
push
stos
lahf
sbb
pop
mov
sub
cmps
lahf
inc
add
push
and
mov
lea
push
or
push
mov
stos
sub
enter
(bad)
sub
loope
push
mov
(bad)
mov
sub
data16
clc
in
retf
les
jne
inc
pusha
bound
jl
sbb
pop
cwde
test
inc
retf
mov
lea
inc
loopne
mov
mov
lea
pusha
inc
sub
push
fwait
pusha
push
out
(bad)
enter
sub
adc
test
popa
cmp
pop
push
jne
push
add
mov
sbb
or
cmp
sbb
fst
pop
xchg
dec
push
push
mov
mov
add
adc
pop
in
div
out
mov
mov
movs
mov
pusha
or
adc
cmp
add
in
in
jnp
or
fs
cmp
xor
sub
and
mov
push
or
add
sub
jl
cmp
test
or
or
shl
add
lods
mov
jmp
sbb
fwait
call
test
add
pop
aaa
test
xchg
xor
push
call
pop
fmul
inc
dec
mov
add
fdivr
dec
mov
mov
inc
xor
mov
mov
dec
fsub
ins
pop
test
xchg
sub
test
add
stos
aas
push
fs
xor
push
sub
bound
rcl
adc
nop
mov
adc
mov
add
sub
fs
aas
inc
enter
cmp
jbe
enter
popa
bswap
mov
sbb
fst
cld
push
mov
jb
cs
lods
and
mov
loopne
sahf
or
adc
xor
mov
mov
xchg
or
or
(bad)
loopne
jne
ins
ds
fist
sbb
ss
push
or
rol
inc
popa
inc
daa
jo
add
inc
pop
es
bound
and
add
and
inc
popa
or
das
ds
xlat
mov
pusha
mov
add
xchg
popf
or
dec
push
lods
loopne
inc
add
jl
jmp
xchg
imul
jo
clc
cmp
ja
test
pop
(bad)
sbb
mov
xchg
mov
je
pop
and
in
retf
aad
dec
adc
loopne
das
jl
sub
test
pusha
xlat
or
pop
sar
mov
aam
pop
aad
add
jne
sbb
mov
and
lock
mov
jo
pop
push
xchg
jmp
repz
push
clc
std
mov
add
add
mov
inc
xchg
push
jae
dec
lea
push
movs
adc
ins
mov
in
or
ret
push
out
xor
sub
push
inc
inc
add
cmp
jne
mov
pop
cli
fs
inc
mov
xlat
dec
dec
add
push
push
jmp
cmp
or
in
add
cwde
ret
aas
add
add
dec
dec
adc
xchg
push
mov
inc
push
mov
mov
inc
add
mov
or
adc
cmp
je
jb
popa
ins
inc
jb
dec
hlt
std
mov
arpl
fs
sbb
jecxz
out
fcomip
into
pop
(bad)
rcpps
push
ins
cs
je
ins
jae
or
div
push
mov
push
(bad)
(bad)
mov
add
inc
jns
not
cmp
or
outs
jne
loope
cmp
sub
pop
jg
push
enter
pop
clc
jp
xchg
ds
dec
gs
popa
test
add
cmp
add
push
nop
rcr
iret
inc
push
mov
push
cs
push
push
pop
addr16
mov
shl
dec
lea
dec
xor
xor
mov
aam
fdiv
mov
(bad)
push
or
inc
dec
movs
rcr
clc
mov
loopne
cmp
xchg
push
fdivr
fdiv
ficomp
mov
jl
push
or
push
xor
lea
dec
loope
or
rol
ffree
pop
or
push
sbb
fwait
push
and
das
fdivr
or
test
das
arpl
fsub
sbb
jns
or
ja
jmp
xor
js
xor
movs
xchg
lds
pop
mov
mov
add
cli
xlat
das
test
pop
mov
out
jae
push
push
test
push
push
push
sbb
sub
adc
sbb
dec
lods
pop
push
cmp
ret
mov
adc
push
mov
mov
and
outs
and
sbb
dec
js
add
mov
cli
cdq
and
or
mov
add
data16
test
mov
push
lods
bound
popa
or
inc
lock
or
fsub
pop
adc
and
ret
jle
mov
add
dec
(bad)
pop
jo
sub
pop
lock
pushf
pop
lock
and
retf
xchg
push
sub
and
or
cld
not
mov
lahf
xchg
ins
mov
jno
scas
push
test
mov
inc
mov
das
ja
lods
cmp
cmp
xor
cmp
hlt
push
test
xor
pop
xor
addr16
push
add
mov
cmp
inc
and
jg
and
xor
jne
cmp
in
nop
xchg
retf
adc
sub
adc
add
push
shl
or
adc
and
(bad)
jmp
add
mov
or
cmp
jne
shr
les
mov
xor
mov
push
add
sbb
jge
jle
sar
or
pop
retf
cmp
push
mov
dec
jo
push
pop
xor
mov
inc
sar
jb
or
push
call
fdiv
out
mov
sub
add
jle
and
sbb
and
test
cwde
in
icebp
xchg
jo
adc
sti
and
sub
or
hlt
add
lds
mov
cld
adc
sti
or
sbb
(bad)
cmp
clc
adc
mov
sar
(bad)
ror
pushf
sar
jge
bound
in
or
cmp
add
bound
push
mov
fmul
lods
repnz
int3
xchg
adc
shl
cmp
mov
adc
out
cmps
std
add
jmp
lods
add
push
ja
and
jmp
aad
dec
push
leave
loope
je
dec
sub
sbb
cmp
sbb
and
sub
pop
(bad)
jne
jne
mov
loopne
mov
inc
gs
sub
push
mov
loope
or
popf
nop
mov
ja
(bad)
add
dec
bound
out
sub
call
fcom
lods
das
add
scas
and
call
xlat
mov
das
mov
es
call
ins
add
lock
cmps
mov
dec
call
sbb
dec
mov
add
mov
mov
mov
mov
mov
lods
sub
xchg
fst
gs
mov
or
clc
or
adc
sub
jmp
pushf
stc
mov
adc
dec
sbb
sbb
fadd
popa
lock
sbb
retf
push
jb
sti
cmp
and
data16
aaa
mov
cmp
ret
nop
mov
popf
xchg
xchg
out
mov
lods
push
addr16
ret
out
dec
test
jg
aas
test
mov
shl
mov
cmp
popa
aam
mov
into
or
test
(bad)
cs
dec
retf
ins
xor
js
das
rol
pop
mov
xor
aas
mov
jo
lods
push
test
test
or
test
es
(bad)
mov
out
imul
mov
mov
into
xchg
les
push
adc
lea
add
mov
leave
sbb
enter
pusha
add
mov
aad
push
jmp
jo
call
cmp
pushf
jo
jne
adc
mov
loope
add
or
test
cld
or
xor
retf
xor
and
inc
or
dec
les
mov
add
sbb
mov
sbb
adc
or
dec
jl
mov
call
test
jo
nop
inc
pop
test
and
cs
mov
push
add
adc
adc
fld
xor
mov
push
pusha
xor
push
push
mov
(bad)
pop
and
aaa
mov
push
dec
jecxz
and
fucomi
cli
aas
sbb
popa
or
dec
lods
add
or
or
adc
or
add
mov
pusha
ins
or
mov
jge
xchg
mov
cmps
shl
and
xor
enter
jp
(bad)
stos
xchg
out
mov
fs
mov
push
pop
sub
inc
stos
aam
xor
jne
stos
inc
sub
xor
adc
inc
and
les
fcom
mov
(bad)
push
and
es
fimul
inc
push
mov
ud0
movs
push
nop
popf
or
cwde
inc
and
addr16
les
shl
and
cmps
imul
rcr
adc
inc
adc
push
loop
fbld
mov
shl
test
push
jb
xor
inc
or
call
jo
mov
js
jno
inc
rol
push
popa
das
lldt
sub
push
test
add
or
mov
shr
adc
test
mov
xchg
loop
fnstcw
(bad)
hlt
mov
das
aaa
outs
test
(bad)
aaa
jne
loop
and
aaa
sub
adc
mov
nop
cmp
inc
adc
adc
dec
add
cld
and
add
or
cli
ins
stos
jle
adc
sti
(bad)
add
or
test
lods
dec
add
mov
sbb
cmp
test
sub
scas
or
std
inc
inc
adc
inc
adc
inc
mov
lods
xor
std
call
cmps
adc
mov
xor
adc
push
or
sahf
test
fld
std
mov
inc
or
mov
dec
cld
jbe
push
and
sbb
ss
push
add
jae
mov
hlt
cmp
cmp
(bad)
mov
pop
adc
(bad)
xor
or
js
mov
push
pop
or
push
xor
sub
cli
jg
pop
sub
jmp
inc
cmp
jg
cmp
or
mov
or
sub
adc
test
mov
es
ja
mov
xor
jge
sbb
sar
retf
push
adc
jmp
adc
cmp
call
fdiv
movzx
mov
in
mov
mov
cmp
add
xor
add
rcr
ja
push
sub
mov
adc
movs
pushf
fimul
mov
inc
mov
fwait
jg
das
enter
inc
push
pop
call
mov
ins
fidiv
or
jge
cld
pop
call
cmp
in
and
mov
es
fmul
mov
out
jmp
fxch
mov
or
add
cmps
cwde
jbe
(bad)
add
dec
or
push
push
and
aaa
push
out
loope
ins
fadd
add
xchg
inc
jg
je
cmp
push
sub
out
retf
xchg
push
add
jmp
jmp
cmp
xor
outs
lods
sub
push
jmp
sub
cmp
cmps
imul
pop
call
or
push
fsub
or
iret
mov
mov
test
adc
xchg
(bad)
pop
mov
push
mov
pop
jp
adc
adc
lods
mov
jbe
arpl
cwde
dec
jb
sbb
jb
cmp
mov
je
jmp
clc
mov
sub
or
sbb
and
lea
or
pop
sbb
pushw
or
mov
adc
(bad)
mov
ret
push
pusha
push
sbb
mov
imul
cmp
test
or
or
mov
sar
ins
sub
pop
cmp
out
fwait
add
xchg
push
push
fist
popf
int3
sbb
lods
rcr
xchg
inc
das
scas
fdiv
ret
or
(bad)
mov
jb
aaa
nop
mov
cwde
pop
pushf
ret
mov
push
lea
xchg
inc
int3
dec
int3
pop
sbb
mov
jns
bound
jne
adc
pop
mov
xchg
mov
aad
inc
bound
push
lock
mov
lods
jno
out
push
cwde
std
sub
jb
je
dec
push
or
in
loope
ret
rcl
adc
sbb
jo
shr
add
dec
mov
jle
popf
ins
pop
call
and
(bad)
cmp
lock
sub
ret
pop
adc
js
ins
push
jns
sbb
push
inc
cmp
fs
and
push
inc
or
retf
push
nop
push
and
fnstenv
loope
lock
(bad)
ficom
add
or
jo
test
mov
ror
bnd
pushf
sbb
(bad)
add
pop
stos
out
daa
adc
loopne
shl
push
das
mov
lods
js
mov
in
adc
sti
pop
mov
mov
sbb
ins
mov
dec
cmp
xor
sub
inc
sbb
add
jo
adc
push
data16
inc
adc
inc
cmovne
sahf
ins
xor
sbb
inc
dec
(bad)
sbb
js
iret
dec
adc
aas
adc
or
sar
adc
mov
jne
add
stos
or
jl
fisttp
(bad)
fcomip
or
cmpxchg
cmp
jne
xchg
es
rcl
out
push
mov
sbb
shl
adc
loope
ja
not
push
pusha
movs
push
shl
mov
inc
push
or
sbb
ss
jb
in
mov
pop
movs
loop
jae
jmp
add
dec
jne
test
jne
cmp
mov
push
cli
sti
mov
(bad)
mov
add
mov
inc
cld
ret
jl
push
das
jl
dec
jne
imul
mov
cmp
call
push
and
jae
movs
cs
(bad)
jmp
fdiv
mov
(bad)
push
mov
mov
mov
pop
js
xchg
mov
iret
and
ret
or
(bad)
mov
mov
cmp
or
push
ror
cmp
addr16
mov
add
loope
ss
pushf
fisub
push
mov
cmp
pop
add
xchg
push
pop
jo
pop
mov
aas
cmps
mov
shl
repnz
ret
mul
fwait
adc
gs
fld
mov
fstsw
sahf
jb
mov
push
fisttp
call
test
in
jne
mov
jmp
xlat
(bad)
in
out
or
add
sbb
sbb
cs
and
jle
xchg
sbb
popa
nop
or
ja
mov
xor
mov
mov
lods
retf
add
add
inc
retf
mov
and
idiv
fadd
cmp
sbb
pop
xor
jmp
iret
sbb
fisubr
stos
inc
and
add
inc
inc
data16
sub
outs
pusha
add
hlt
loopne
hlt
movzx
jnp
or
mov
xchg
(bad)
popa
es
sbb
dec
mov
aas
mov
adc
xchg
ret
lea
sbb
cmc
jnp
fimul
sbb
jmp
enter
ja
push
or
or
dec
leave
mov
pop
repz
mov
xchg
lea
xor
mov
jnp
(bad)
push
mov
popa
sahf
mov
leave
add
push
ja
jne
inc
ror
mov
mov
add
push
mov
inc
cmp
jae
jp
data16
adc
cmp
add
cmps
test
and
push
push
xchg
adc
jle
shl
jle
test
shr
mov
push
sub
cmps
outs
push
adc
stc
pop
cld
mov
movs
sbb
mov
mov
or
into
mov
push
ret
cmp
cmp
cmp
mov
mov
imul
jg
loope
xor
aaa
sbb
clc
sbb
adc
mov
nop
sbb
pop
or
gs
jae
xor
adc
mov
xchg
test
int3
sar
pop
dec
xor
inc
in
or
sbb
cmp
mov
(bad)
ss
inc
cmp
pop
js
add
arpl
push
pop
rol
into
test
push
cld
adc
or
retf
shr
leave
test
xor
dec
push
dec
stc
adc
retf
cmp
neg
or
jmp
add
ret
add
add
ret
push
jle
xor
jp
jnp
cmp
or
mov
or
ret
sbb
jl
retf
and
jle
faddp
sbb
hlt
pop
jl
adc
ins
pop
xchg
mov
mov
ror
add
(bad)
jo
outs
cmp
setl
test
cmp
or
xor
pop
and
ret
jbe
int
in
stos
cs
bound
lock
into
mov
dec
das
loope
pusha
and
arpl
loope
cli
aad
shl
push
jg
test
jmp
inc
cs
sti
aas
mov
das
push
retf
or
jge
dec
dec
mov
div
jne
jl
or
sbb
jno
add
or
call
adc
xor
sbb
sar
xor
(bad)
movs
ret
and
fneni(8087
and
pusha
or
ret
pop
push
lea
ret
sti
dec
mov
fdivr
jl
add
mov
sub
xor
sbb
adc
cmp
add
sub
int3
test
bound
cmp
loope
cli
in
push
dec
mov
pop
pop
loopne
mov
sbb
add
and
jle
mov
sbb
and
sub
add
xor
shl
xchg
xor
and
fcmovne
(bad)
(bad)
sbb
add
jb
psrld
loopne
xchg
mov
mov
sbb
loope
dec
or
add
ret
and
mov
cmp
dec
and
mov
cmp
pop
inc
fisttp
pop
rcl
(bad)
add
add
and
jmp
call
cld
push
add
add
push
adc
xor
in
mov
cld
xchg
fist
sub
adc
leave
(bad)
retf
xchg
and
fnstenv
adc
sahf
cmps
mov
sub
sub
push
test
add
add
jp
idiv
mov
or
sbb
loopne
jg
adc
adc
xlat
fisubr
sbb
cmp
rol
pop
sbb
and
lods
nop
xchg
nop
ret
(bad)
add
xor
cdq
out
mov
daa
jl
cwde
inc
adc
ret
mov
xor
cmp
inc
and
mov
add
cli
cmps
sub
(bad)
mov
repz
adc
jmp
add
sbb
repz
mov
loopne
mov
jo
sub
fcom
sti
(bad)
rol
inc
mov
mov
(bad)
mov
or
idiv
adc
fmul
push
xor
push
dec
call
(bad)
fidivr
add
push
not
xor
jmp
addr16
mov
aaa
push
or
sub
inc
mov
sbb
mov
stos
add
dec
jne
add
loopne
std
add
pop
or
pop
jne
mov
add
or
mov
call
or
mov
or
push
or
add
dec
cwde
mov
pop
ins
fwait
dec
cmps
or
mov
push
ror
mov
or
shr
mov
call
(bad)
shr
mov
inc
or
or
loope
pop
mov
xor
je
es
inc
push
fstp
icebp
xchg
jo
xchg
xor
mov
addr16
xor
or
test
test
lea
lahf
push
mov
int
push
js
jmp
rol
ret
mov
and
lss
shl
or
je
in
add
or
pop
fsub
inc
in
adc
jmp
mov
adc
rol
hlt
sub
dec
movs
(bad)
aad
fwait
jo
mov
pop
mov
jno
test
sub
out
sbb
(bad)
and
add
xor
call
mov
lsl
add
mov
mov
loopne
mov
xor
sub
stos
dec
pusha
dec
call
inc
fwait
xor
xor
jo
push
sub
inc
sbb
shl
jmp
lods
mov
add
and
jecxz
xchg
lock
(bad)
push
push
call
adc
test
xor
and
jne
dec
dec
je
sbb
dec
ds
repz
aas
fmul
lods
push
ret
mov
jmp
xchg
add
or
in
jge
add
sbb
ja
(bad)
dec
and
(bad)
add
in
ds
cld
pop
sbb
jne
dec
and
jbe
push
jmp
xor
cmps
push
cmp
ficomp
pop
pop
mov
push
push
outs
imul
je
jns
es
or
sar
push
push
aaa
sbb
jge
(bad)
add
add
gs
pop
cmps
int
(bad)
lahf
push
push
jb
jbe
inc
fcomp
add
dec
imul
gs
adc
loope
push
or
add
fsub
or
jae
ins
ins
outs
ja
fs
sbb
push
inc
je
pop
es
mov
lahf
add
or
outs
outs
iret
iret
dec
mov
mov
ja
pop
or
ins
imul
std
data16
add
inc
jb
popa
jns
xchg
cmp
es
or
xchg
lock
xor
push
jnp
inc
(bad)
addr16
pop
jge
push
push
jecxz
adc
add
lock
push
(bad)
jmp
ds
movs
rol
or
mov
add
cwde
add
sbb
mov
push
add
fisubr
xor
dec
dec
push
jl
mov
ss
shr
or
mov
mov
push
xor
inc
dec
dec
push
dec
hlt
jne
mov
xchg
xchg
add
or
or
mov
xor
push
rol
mov
test
jne
cmp
adc
(bad)
(bad)
or
or
add
inc
jmp
pop
pop
pop
ret
pop
push
(bad)
cli
dec
(bad)
fidiv
movs
sbb
pop
cmp
jb
sti
mov
inc
sbb
movs
jo
(bad)
dec
clc
les
cmp
loope
push
add
inc
imul
mov
call
sbb
jp
push
mov
inc
and
pop
inc
cmp
retf
fwait
hlt
fild
cmp
or
inc
and
pop
call
adc
inc
add
adc
push
in
(bad)
jg
mov
dec
test
jl
inc
xor
lea
inc
cmp
fwait
jle
dec
jo
push
add
xor
pop
sub
dec
or
sub
aas
aas
fdiv
pushf
jle
mov
mov
icebp
mov
mov
(bad)
nop
jo
cli
cmp
jne
aaa
int
call
xor
mov
loope
xchg
mov
push
add
dec
jne
aam
pusha
mov
retf
push
test
add
jmp
bound
pop
les
fild
adc
test
cmp
clc
dec
cmp
dec
inc
out
clc
popa
mov
xor
dec
cmp
inc
mov
mov
xor
(bad)
mov
inc
add
dec
or
inc
add
dec
add
dec
mov
out
mov
or
pop
(bad)
xor
sbb
jne
mov
pop
test
fisubr
jne
jne
ret
xchg
dec
shl
dec
cmp
mov
ds
sbb
dec
pop
adc
test
pcmpgtd
lock
jne
cmp
jne
push
pusha
adc
outs
ins
jne
out
cmp
add
dec
or
push
push
mov
aam
push
cmp
pop
mov
add
bound
jmp
add
retf
mov
sar
pusha
pop
clc
loopne
push
or
push
or
adc
pop
pushf
sub
push
bound
mov
add
enter
lds
ds
dec
leave
adc
mov
ss
lock
fisubr
mov
cmp
test
mov
or
cmp
mov
xchg
pop
adc
cmp
adc
popf
sub
cmp
inc
adc
in
call
push
cmp
adc
cmp
adc
adc
call
or
mov
push
add
outs
push
enter
jl
adc
jns
fmul
fs
and
dec
and
clc
mov
out
or
mov
xchg
dec
cwde
or
inc
push
dec
sar
sti
dec
push
and
push
mov
pop
push
aam
xchg
sub
jne
mov
xor
mov
fwait
mov
sub
mov
push
jmp
adc
pop
pop
add
fadd
pop
adc
pushf
jo
push
pop
push
loopne
movs
mov
add
push
mov
push
mov
jbe
dec
jne
inc
mov
pushf
pcmpeqb
fimul
sub
push
out
es
add
cld
es
jge
test
aam
or
push
push
rcl
pop
mov
adc
fs
mov
ret
ins
pop
hlt
sub
gs
aam
xor
je
xor
jmp
pop
test
in
or
mov
push
xlat
in
inc
lods
ins
inc
mov
mov
mov
pop
add
mov
jbe
adc
lods
pusha
or
shl
push
inc
dec
add
pushf
adc
dec
and
and
lock
ror
jmp
loopne
aad
mov
adc
jbe
or
cmp
movs
adc
in
sub
sub
lea
dec
push
dec
inc
cmp
sbb
rcl
scas
sbb
inc
dec
cmp
dec
bswap
mov
adc
jbe
cwde
dec
pusha
push
loopne
add
add
ds
push
add
push
addr16
jge
lods
test
mov
es
in
mov
fcomip
adc
add
xchg
push
and
ins
std
(bad)
clc
mov
mov
jne
jmp
mov
xchg
xchg
push
retf
call
push
pop
jmp
add
lods
ret
add
and
fwait
push
sub
push
cld
dec
push
mov
dec
or
or
xor
lock
inc
mov
test
mov
lea
cmp
dec
push
sbb
add
hlt
push
or
bound
and
dec
jg
sbb
repnz
dec
jg
xchg
push
sbb
jl
mov
add
imul
popa
push
jp
gs
rcr
pusha
clc
push
shl
xor
shr
pop
adc
push
sub
mov
in
cli
xacquire
xchg
inc
mov
loope
call
test
xor
pop
add
xchg
sbb
jne
mov
lock
adc
hlt
adc
or
inc
aaa
(bad)
call
call
cmp
push
sbb
push
ret
mov
sbb
sub
lock
mov
imul
jne
fsubr
js
ss
cld
jnp
sbb
adc
shr
push
jmp
add
ror
in
mov
lock
int3
xor
retf
lods
add
mov
fwait
pop
or
sbb
repnz
sub
sub
mov
mov
enter
shr
mov
jmp
fist
fldcw
xor
sub
add
dec
sbb
xchg
in
jo
xchg
pusha
add
rcr
pop
test
mov
jl
mov
xor
call
add
test
(bad)
jnp
mov
mov
mov
lds
and
xchg
sbb
cmp
add
push
out
iret
push
pop
repz
mov
inc
push
leave
mov
jo
adc
pop
or
push
iret
xor
jne
ja
or
xor
xor
ror
inc
sub
mov
dec
mov
jae
dec
push
add
faddp
mov
adc
js
ja
push
push
pusha
aad
mov
mov
xor
mov
mov
pinsrw
inc
inc
cmp
jne
movzx
cld
fbld
push
jecxz
and
jae
dec
jno
mov
jle
push
add
(bad)
fdivr
xor
and
popa
add
xchg
iret
out
dec
or
retf
mov
ror
inc
xchg
pop
pop
(bad)
pop
sbb
cmc
adc
and
pop
sbb
stos
inc
mov
mov
rcl
adc
mov
xchg
add
mov
jo
mov
mov
popa
mov
or
or
jne
ins
outs
add
adc
mov
add
inc
sub
fist
test
je
push
(bad)
sti
nop
rol
add
inc
or
or
jmp
inc
lahf
xor
jbe
adc
adc
sbb
mov
cmp
sti
jb
cmp
pop
call
mov
xchg
inc
mov
cmc
movs
mov
and
cld
mov
mov
adc
mov
mov
addr16
sub
mov
sbb
cmps
pop
ins
iret
fidiv
in
pop
push
sbb
addr16
dec
and
aas
pop
retf
adc
add
sub
mov
xchg
sub
or
call
into
test
add
popa
adc
cs
xchg
mov
xchg
jo
push
cmps
cmps
inc
or
cmp
rol
sbb
or
mov
int3
jge
mov
xor
sbb
inc
jne
lds
or
mov
stos
sub
stos
clc
out
dec
cmp
sete
inc
xchg
push
push
test
push
and
dec
cmp
out
out
mov
js
or
adc
jl
pop
push
mov
imul
mov
mov
or
es
leave
inc
sar
pop
add
cmp
inc
and
inc
pop
mov
pop
arpl
xlat
mov
aam
shl
outs
mov
stos
loopne
fstp
add
or
adc
inc
dec
aaa
or
(bad)
jmp
or
inc
std
mov
aaa
movs
xor
dec
shl
push
mov
or
jmp
test
jg
mov
inc
movs
fwait
cwde
sub
xor
(bad)
mov
mov
push
imul
pop
add
jl
push
push
push
mov
inc
push
xchg
pusha
int3
scas
push
cwde
aas
shl
push
jge
cmp
pop
jle
push
xor
mov
das
inc
iret
or
mov
mov
popa
cmp
fmul
inc
jl
std
lahf
add
add
and
or
inc
das
sub
and
stos
mov
fstp
xor
lahf
mov
add
aad
mov
retfw
outs
pop
or
inc
add
push
add
jo
dec
mov
enter
paddq
dec
mov
test
cmp
fdivr
push
arpl
loopne
fadd
bound
xchg
mov
cmp
dec
sbb
push
loope
and
cwde
stos
repnz
ins
xlat
inc
sub
push
mov
ret
test
push
mov
add
sar
outs
ror
cmova
es
loopne
aad
push
cmp
out
shr
pop
push
xor
dec
mov
dec
add
addr16
pop
sub
ds
sub
popf
sbb
in
arpl
or
push
sbb
call
pop
jecxz
adc
repz
jb
mov
fisttp
pop
xor
mov
xor
push
les
push
inc
frstpm(287
inc
and
aam
inc
rcr
sbb
shl
jecxz
push
and
icebp
or
pop
adc
lahf
dec
es
jne
outs
sub
sub
fistp
sbb
add
cmp
pusha
jmp
xchg
or
push
sbb
add
inc
xchg
inc
movs
dec
and
mov
ror
mov
mov
and
ret
mov
aad
xlat
adc
mov
pop
mov
out
and
or
in
or
mov
fdiv
sbb
mov
jl
outs
stos
(bad)
nop
cld
dec
inc
adc
mov
rol
das
mov
das
aas
adc
xchg
adc
mov
jno
mov
push
test
sbb
scas
retf
and
dec
cmp
cmp
lea
imul
mov
rcl
and
and
push
add
xlat
pop
add
add
add
loop
or
xor
mov
into
mov
out
cmp
jo
out
pop
xchg
jbe
add
je
add
mov
push
pop
adc
mov
fcmovnb
loope
adc
add
and
lock
rol
push
stos
mov
test
aaa
sbb
adc
es
fucomip
xchg
les
mov
nop
sbb
xor
das
int
sbb
pop
(bad)
(bad)
push
dec
adc
xor
mov
add
mov
cmp
je
inc
dec
jne
or
test
cmp
iret
pop
adc
aaa
add
fstp
mov
leave
push
cmp
adc
mov
cmp
fmul
dec
jne
jp
ss
mov
sub
adc
adc
in
push
cmp
mov
hlt
fdivr
daa
pop
das
hlt
add
sbb
push
(bad)
(bad)
fidivr
(bad)
jge
and
fcom
sbb
lock
push
mov
push
repz
fnclex
fldcw
adc
mov
dec
repz
call
fadd
daa
and
add
(bad)
mov
enter
pop
mov
rol
push
add
cmp
es
mov
mov
jmp
add
dec
jae
fcomp
pop
mov
test
inc
rol
call
or
sub
inc
mov
ins
(bad)
xlat
push
jnp
pop
add
push
mov
or
cmp
cmp
add
cmc
push
mov
rol
popa
fisubr
and
fstp
fwait
rcr
pop
test
and
add
push
and
daa
inc
std
ds
popa
jl
push
or
int
nop
mov
test
mov
loopne
and
dec
sub
cmp
inc
push
add
pop
es
arpl
jno
mov
or
ret
stos
pusha
stos
add
sub
adc
iret
sub
adc
jo
sbb
push
cli
int
cwde
cmp
jge
mov
ror
mov
sub
es
xchg
ss
iret
jmp
dec
and
call
inc
fcmovb
adc
xor
repnz
out
or
push
pushf
out
inc
je
inc
adc
cmps
fadd
out
stos
clc
mov
xor
sub
call
(bad)
pop
sbb
shr
push
ss
or
and
popf
ret
call
movs
das
push
dec
test
dec
in
add
movsx
xor
mov
stos
add
dec
xor
mov
test
je
(bad)
sub
loopne
cs
jns
inc
inc
add
mov
mov
(bad)
sbb
lock
xor
(bad)
lock
adc
scas
fbstp
enter
sub
or
pop
and
sbb
or
mov
xor
jo
pop
sub
movs
xchg
daa
loopne
mov
inc
scas
mov
call
and
cmps
jl
inc
or
movsx
sub
cmps
iret
and
bound
lods
jmp
add
sbb
lods
jb
add
mov
jne
xor
mov
inc
test
pusha
dec
jno
dec
pop
add
ds
add
sbb
hlt
xchg
mov
fs
scas
or
dec
imul
xor
aad
movs
pushf
icebp
cmp
pop
in
push
fadd
cmp
jb
mov
(bad)
fiadd
push
and
pop
push
adc
sbb
adc
sbb
sub
add
nop
jns
mov
add
or
cdq
push
sbb
inc
sar
ja
aam
fadd
lods
jge
or
add
in
adc
cmps
inc
stos
add
sub
fstp
adc
inc
mov
mov
test
loopne
jo
push
lea
retf
or
sahf
mov
sub
pop
inc
add
jne
je
inc
add
cs
jnp
pop
mov
jp
adc
xor
add
rcr
mov
sub
inc
mov
inc
sbb
and
sub
test
icebp
stos
push
sbb
stos
inc
sub
sbb
push
(bad)
sbb
(bad)
mov
mov
fist
xor
jbe
add
sub
add
add
xor
sbb
mov
push
pop
rcl
or
push
mov
or
jge
fcomp
dec
adc
neg
test
xchg
aas
pop
xor
adc
sbb
push
ficomp
mov
aam
(bad)
fdivr
(bad)
jae
xor
jle
dec
pop
pusha
cmp
jle
arpl
daa
(bad)
mov
stos
jle
xor
and
pop
cmp
lods
cmp
(bad)
or
aad
out
cmp
add
or
inc
add
jo
jge
push
inc
das
pop
dec
cmp
ins
sbb
add
scas
lock
adc
jns
mov
mov
jae
aas
xchg
xor
push
iret
(bad)
xchg
push
idiv
daa
mov
or
loopne
and
push
sbb
add
cmc
inc
hlt
or
test
rol
out
(bad)
jecxz
ins
hlt
add
fadd
mov
test
adc
add
mov
or
mov
test
and
mov
call
cmp
jle
sub
sub
xlat
test
mov
inc
or
retf
sbb
out
(bad)
std
stos
jb
xchg
cwde
out
test
je
sub
sub
es
inc
inc
sbb
sbb
mov
xor
gs
sbb
mov
mov
push
or
jbe
scas
mov
scas
(bad)
scas
mov
mov
cmp
lods
aas
cmp
scas
or
mov
xor
retf
enter
or
ror
(bad)
adc
push
pop
retf
bound
bound
jg
jmp
rcr
adc
push
fdiv
add
or
rol
ret
mov
sbb
or
mov
aaa
shl
ficom
add
in
gs
or
xlat
cmp
(bad)
nop
int
(bad)
(bad)
mov
add
(bad)
scas
in
sbb
mov
(bad)
dec
or
scas
fwait
pusha
pop
xchg
loope
pop
lea
je
add
add
pop
or
inc
popa
mov
rcl
adc
(bad)
adc
jbe
sub
sub
pushf
cmp
push
movs
and
sub
push
jecxz
cmp
mov
fs
pop
mov
mov
mov
mov
add
sbb
inc
jnp
rcr
out
fcom
inc
or
fsub
add
imul
in
call
or
ins
aam
sbb
and
mov
shl
vunpckhps
ror
fild
adc
adc
sbb
ret
pusha
and
ret
mov
add
popa
add
popa
add
cmp
lock
inc
mov
test
outs
lahf
xchg
mov
push
mov
xor
or
iret
jno
test
pop
outs
mov
lock
mov
aaa
pushf
mov
and
or
jg
mov
add
add
stc
lods
add
sub
clc
shl
push
add
add
mov
out
or
je
(bad)
adc
daa
mov
add
shl
ja
rcl
dec
sbb
(bad)
adc
push
(bad)
loopne
out
sub
sub
cmp
inc
addr16
add
stos
(bad)
and
cmp
mov
push
imul
leave
jmp
cmp
in
fdiv
xor
(bad)
stos
add
jle
mov
jl
mov
pop
aad
cs
aas
test
scas
push
mov
xchg
ds
lods
or
aad
sbb
or
and
sub
imul
rol
arpl
pop
hlt
ja
movzx
cmp
jne
mov
mov
cmc
inc
je
jne
sahf
hlt
cmp
fs
es
pop
xor
or
xchg
movs
xor
mov
fst
in
and
mov
adc
ret
add
xor
jbe
rol
inc
xor
push
push
shl
push
push
(bad)
scas
mov
call
cwde
inc
add
mov
sbb
rol
(bad)
add
pop
or
mov
add
jp
or
jb
or
mov
dec
(bad)
jne
adc
(bad)
sub
scas
rcl
jae
xchg
push
adc
xor
hlt
pop
xor
fild
sbb
jo
cmp
jb
fcom
jne
ror
cmps
xchg
ror
add
jae
out
dec
es
pop
xchg
pop
or
loope
mov
inc
xor
pop
or
cdq
push
and
pop
or
aad
test
push
lea
xchg
daa
rcr
rol
push
pushf
xor
adc
add
pcmpgtw
sub
ret
(bad)
adc
lock
mov
pop
and
add
inc
mov
pop
sub
jle
mov
jle
fild
test
pop
inc
ror
push
push
xor
sub
popa
das
ins
popf
call
pop
fimul
and
jle
pop
test
cmps
scas
jnp
pop
dec
js
clc
mov
mov
or
or
pop
push
mov
shl
ins
or
into
dec
mov
add
add
aaa
cwde
mov
xchg
lahf
inc
loopne
push
adc
test
fs
in
lea
pop
out
jo
clc
lods
(bad)
push
add
inc
fsubr
xor
add
adc
jmp
jbe
jmp
mov
mov
test
add
sbb
add
or
clc
fist
sub
and
jmp
adc
add
popa
adc
mov
pop
dec
fadd
test
je
call
ret
jo
jno
mov
push
clc
je
fcomp
lock
mov
icebp
cmp
jge
push
mov
adc
and
and
jge
pop
adc
hlt
shl
add
test
xchg
or
loop
or
iret
pop
and
or
mov
ror
and
dec
sti
jle
adc
scas
push
mov
push
or
dec
jnp
je
pop
mov
dec
jnp
test
sub
sar
fild
je
sbb
cmp
add
fs
jmp
enter
inc
hlt
xchg
adc
iret
pop
pop
xchg
add
cld
mov
fstp
cmp
ja
xor
sti
loopne
bt
cs
jne
enter
test
hlt
pop
loope
and
jne
mov
ror
or
inc
inc
or
mov
add
iret
sbb
sub
ret
dec
shl
add
push
push
retf
push
inc
adc
call
jle
mov
add
jmp
mov
xor
inc
or
cmp
sub
adc
rcl
test
les
adc
ret
jbe
sbb
or
adc
jle
or
sbb
pop
sbb
loop
sbb
dec
adc
push
cli
sub
add
lock
adc
mov
pusha
and
add
add
out
imul
or
aas
adc
dec
pushf
xor
or
sar
adc
int3
les
add
cld
inc
xchg
fmul
inc
adc
sar
shr
call
inc
pusha
por
lds
and
(bad)
xlat
xchg
xor
inc
(bad)
push
in
iret
test
jle
mov
push
das
push
lea
adc
cmc
test
lods
sti
call
push
std
jo
ja
dec
mov
aaa
xor
pop
lock
ret
jno
dec
rol
add
lea
cmp
jg
wrmsr
cwde
and
sahf
jmp
add
mov
lds
cmps
cmp
jge
loop
mov
inc
clc
fwait
cwde
dec
sbb
cmp
jne
and
adc
sar
adc
jo
inc
jl
mov
lods
arpl
loopne
xor
inc
dec
jmp
aaa
adc
inc
mov
js
inc
xchg
xchg
nop
call
rcl
xchg
aaa
jmp
rcl
lock
mov
xor
add
adc
sub
outs
mov
jp
nop
pop
(bad)
add
xchg
test
icebp
sub
push
adc
scas
fdecstp
xor
inc
add
pusha
or
idiv
retf
inc
adc
mov
loope
xchg
std
inc
add
fdivr
push
hlt
add
xor
retf
dec
add
jo
(bad)
xchg
sub
(bad)
shr
push
adc
or
je
xorps
loop
repz
jl
adc
adc
mov
pop
adc
lock
inc
es
cmp
push
icebp
jmp
xchg
inc
mov
cmp
ret
add
jne
push
and
add
xor
add
cmp
push
out
pop
mov
add
unpcklps
dec
test
jl
mov
cmps
mov
push
(bad)
dec
ds
inc
xor
pop
sub
in
push
mov
and
mov
(bad)
fild
jmp
inc
dec
jne
ins
jge
or
(bad)
lock
cmp
hlt
jo
ret
add
or
rcl
(bad)
loopne
cmp
out
add
push
add
mov
jp
sbb
jmp
jo
push
jns
aas
push
push
test
mov
lods
xchg
cmps
sahf
pop
jo
dec
mov
inc
inc
mov
jl
adc
inc
inc
arpl
push
and
mov
cmp
push
cmp
or
xchg
dec
pop
adc
jmp
mov
add
xor
pop
fadd
dec
lock
cmp
popa
pop
mov
sbb
fisttp
ins
sub
inc
in
inc
or
call
pushf
push
jo
or
test
out
loopne
mov
lock
push
ret
jo
retf
ret
or
dec
jo
je
dec
push
ror
sbb
cmp
push
in
xchg
push
sbb
ja
add
and
pushf
lea
js
pushf
icebp
jbe
lea
test
hlt
push
or
or
add
sbb
popa
inc
lock
outs
shr
call
xor
loop
or
pushf
rcl
or
dec
in
sub
adc
jmp
(bad)
and
bound
js
imul
lahf
loopne
push
(bad)
xchg
clc
jmp
mov
push
ja
push
leave
leave
call
ret
test
mov
and
add
movs
outs
pop
cmp
aaa
inc
cmp
jle
inc
dec
sbb
xlat
sar
lea
loope
add
dec
ret
sbb
repz
inc
cmp
xor
shl
mov
cmp
xchg
frstor
adc
outs
aad
sub
xchg
or
jne
pusha
pop
push
out
inc
lods
sbb
hlt
sbb
mov
sbb
test
inc
jae
bound
jmp
sub
mov
retf
xchg
ins
mov
sub
push
xor
mov
hlt
(bad)
int3
outs
pusha
jae
lea
mov
inc
sub
jge
retf
je
and
jne
pop
loopne
dec
add
sbb
inc
fdiv
scas
cmps
cli
(bad)
clc
fbstp
lock
mov
das
cmp
jbe
and
sysenter
ror
loope
adc
cmp
cmp
loopne
out
in
push
inc
ins
push
jge
pop
mov
loop
inc
jo
and
jo
lea
mov
ins
rol
or
add
loopne
sbb
jle
mov
test
sbb
add
(bad)
sbb
adc
iret
lahf
push
shl
int3
(bad)
push
mov
daa
loopne
jne
and
mov
movq
jmp
inc
clc
inc
jmp
lea
xor
pop
cld
cmps
cmp
iret
mov
jb
mov
(bad)
pop
and
add
ins
push
add
pop
cmps
add
daa
inc
ins
inc
popa
pop
pop
dec
dec
ins
and
ret
pop
mov
ret
push
add
or
movzx
loopne
pop
jo
adc
cmp
ja
push
cmc
(bad)
fldcw
xor
push
mov
and
rcl
or
jne
jmp
and
add
movsx
ds
test
and
jmp
ss
addr16
lock
or
inc
aad
adc
sub
(bad)
mov
add
xchg
mov
iret
scas
or
cld
mov
lea
mov
adc
rol
jmp
mov
icebp
pop
pop
ret
addr16
in
leave
mov
add
push
jo
jl
adc
neg
aaa
enter
cmp
jmp
rol
sbb
and
push
int3
or
jmp
xlat
cmc
scas
lock
je
inc
mov
std
and
movs
mov
jae
add
xor
test
add
ins
cmp
test
stos
add
shr
mov
xor
ror
rol
jae
pushf
cs
loopne
sbb
lea
mov
push
lea
add
mov
and
adc
outs
aam
cmp
mov
rcr
bound
std
xchg
jo
ja
arpl
jo
and
jmp
sbb
stos
cwde
pushf
call
mov
pop
call
mov
out
retf
adc
shr
xor
jb
mov
outs
(bad)
or
adc
sbb
mov
fld
adc
rcl
ja
dec
pusha
cli
das
adc
and
int3
test
mov
jle
leave
xchg
dec
adc
iret
add
push
iret
or
iret
jmp
adc
add
cmps
inc
mov
test
out
mov
lock
mov
xor
hlt
and
and
ins
and
ins
out
xor
add
and
imul
clc
mov
sub
inc
jp
fnstsw
mov
pusha
adc
add
pop
jl
js
cmpxchg
mov
pop
jg
jle
int3
or
sbb
xor
or
scas
push
or
cmp
and
dec
aas
mov
mov
jne
mov
mov
pop
cld
inc
cmp
jg
test
jle
mov
clc
movzx
cmp
je
leave
jmp
inc
inc
dec
jne
(bad)
leave
mov
xchg
inc
(bad)
shr
mov
mov
or
enter
mov
or
hlt
cmp
test
inc
cmp
icebp
dec
cmps
js
jmp
push
and
adc
mov
add
stos
je
into
adc
data16
dec
ret
js
es
ins
add
ss
xchg
mov
and
inc
sub
adc
or
mov
nop
scas
or
mov
(bad)
pusha
fstp
or
mov
imul
shl
adc
or
lods
rcl
and
mov
lods
call
test
mov
mov
lahf
xchg
inc
int3
or
fisttp
inc
test
inc
repz
cmp
lea
sub
add
adc
pinsrw
pusha
mov
es
dec
xchg
adc
jo
mov
movs
out
mov
lea
xchg
lock
cmp
jno
aaa
movs
test
mov
loop
inc
add
jl
js
cld
mov
pop
inc
sub
mov
jne
ficom
std
adc
aam
add
test
rcr
push
std
je
add
pop
sub
xchg
pop
ror
cmp
pop
xchg
sets
or
jo
add
dec
imul
sub
inc
sub
cmp
sub
push
mov
mov
loope
sar
add
daa
dec
inc
add
dec
imul
pusha
aad
mov
retf
pop
imul
add
pop
mov
mov
inc
test
sbb
push
or
push
daa
cmps
add
or
and
dec
(bad)
stos
out
mov
cmps
mov
or
ins
dec
test
dec
(bad)
inc
pop
pop
dec
cmc
outs
add
js
and
mov
push
inc
repz
mov
mov
add
mov
push
enter
test
adc
imul
dec
ret
aas
mov
push
and
mov
out
cmps
adc
add
pop
imul
cmps
mov
xchg
cld
mov
and
lods
adc
cmps
pop
mov
hlt
popa
xor
cs
stos
adc
push
dec
mov
pushf
push
jne
pop
push
enter
pusha
es
pusha
push
jb
dec
pop
inc
test
cmps
fldenv
and
jge
in
(bad)
pusha
mov
mov
rol
or
add
jns
pop
imul
leave
add
sub
ficomp
adc
push
lock
jle
into
push
push
inc
mov
outs
dec
or
cmp
ficom
xchg
nop
dec
repz
xchg
jo
ins
fst
jl
lock
into
shr
(bad)
ja
sbb
mov
jecxz
xor
imul
shl
xor
ja
sysret
xchg
popa
loopne
in
add
adc
fmul
and
(bad)
and
xor
test
xchg
mov
cmp
inc
aas
dec
sbb
cmps
mov
mov
inc
push
js
leave
ret
test
lahf
add
pop
sub
lahf
pop
push
or
in
or
xchg
sub
add
ret
fisttp
shl
rcl
or
shl
sar
ret
add
or
xchg
sbb
ret
fstp
mov
mov
sub
adc
cmp
loop
(bad)
jmp
mov
inc
or
mov
lds
adc
mov
cmp
mov
jns
stos
gs
push
push
aas
or
cmp
jb
push
fstp
push
or
dec
dec
add
out
cmp
push
cmp
cmp
mov
sbb
jg
aam
xor
aam
pop
jo
and
xlat
ret
xor
test
push
inc
in
test
scas
sbb
add
sbb
inc
or
sti
test
sub
or
inc
push
test
in
lds
inc
cwde
inc
jbe
cmp
or
cmp
mov
sbb
pop
ret
rol
dec
or
jp
jg
adc
xchg
mov
std
push
jo
jo
std
ror
ror
mov
adc
or
adc
mov
nop
outs
and
daa
sub
test
fwait
adc
cmp
retf
xor
cmp
jge
inc
lea
push
push
les
nop
or
mov
stc
jo
rol
adc
outs
sahf
in
dec
je
adc
stc
pop
sub
xor
cmp
push
retf
adc
and
push
sbb
sahf
fild
(bad)
mov
outs
xchg
neg
mov
sbb
push
out
adc
adc
shr
pusha
jmp
dec
xor
sbb
mov
pushf
lods
ret
shr
mov
and
scas
pop
fidivr
sbb
addr16
shl
in
add
xor
cmc
push
add
mov
repz
xchg
jo
mov
jo
ret
adc
cmp
add
adc
add
outs
add
bound
div
dec
pop
into
test
pop
addr16
popf
or
xor
xor
add
cmp
sub
mov
je
push
test
loopne
pusha
das
jo
or
and
add
fisubr
push
test
clc
add
ss
adc
sub
cmp
push
mov
pusha
addr16
shl
bound
hlt
rcl
xlat
lea
into
pop
mov
xchg
xchg
call
ret
cmp
lea
or
mov
test
jne
jnp
mov
jmp
mov
or
adc
inc
adc
jb
add
cs
inc
into
mov
mov
in
pop
or
outs
sub
fmul
dec
adc
scas
xor
mov
or
inc
adc
jl
call
add
or
push
mov
add
xchg
xchg
mov
mov
push
or
jbe
in
pop
push
adc
xor
push
sbb
ds
stos
push
add
pop
adc
fadd
adc
jo
mov
add
push
cwde
lods
and
jg
ds
inc
imul
ret
vminsd
inc
add
dec
sub
xor
loope
loopne
shr
sub
xchg
add
push
dec
jb
or
movs
out
shl
add
mov
mov
or
(bad)
bound
fwait
retf
call
pop
sbb
pop
repz
clc
clc
cmp
in
int3
or
pushf
push
(bad)
mov
pop
pusha
mov
imul
sbb
mov
out
or
std
call
xchg
or
shr
sbb
jne
out
and
cs
mov
add
cmp
lock
imul
cmp
imul
(bad)
call
pusha
adc
push
aam
adc
dec
add
mov
scas
xor
jmp
cmp
iret
add
pop
scas
inc
or
pop
bound
mov
and
scas
push
xchg
inc
leave
scas
leave
mov
loope
scas
or
xlat
xor
ja
xchg
xchg
or
mov
push
rol
sub
sbb
test
mov
add
mov
outs
add
outs
pop
outs
xor
push
hlt
ret
sbb
xchg
rcl
jns
sar
add
push
or
pop
retf
leave
pop
push
ds
cmp
mov
xchg
add
jns
cs
push
xor
xor
xor
and
cli
add
xchg
loope
add
outs
xchg
add
push
mov
mov
jbe
test
or
in
mov
cmps
mov
hlt
or
jg
mov
inc
push
outs
push
sub
dec
mov
sbb
mov
shr
mov
inc
movzx
and
adc
enter
out
mov
das
out
push
and
push
sub
mov
sti
mov
(bad)
adc
shl
or
mov
xchg
add
dec
jne
or
enter
fidiv
sbb
or
xor
sub
data16
out
adc
sub
popa
push
adc
lods
inc
push
or
popa
es
add
add
out
out
xor
add
mov
jo
mov
sbb
dec
loopne
sbb
adc
dec
mov
or
fwait
adc
mov
fadd
pop
cmp
cmp
push
sbb
dec
call
sbb
pop
dec
inc
push
push
add
(bad)
lds
loopne
cmp
or
sbb
and
push
pop
pop
aas
loope
jnp
sub
aad
push
mov
pop
xor
inc
pusha
cmps
pop
in
call
aas
pop
int
adc
and
ss
xor
sub
mov
mov
push
jo
add
js
clc
test
xchg
mov
push
or
int
lahf
pop
push
xlat
test
inc
retf
sbb
retf
fcom
imul
cmp
cdq
lock
xor
ins
mov
test
sti
out
mov
or
push
or
cmp
fdivr
shl
scas
movs
mov
lea
movs
add
rcl
cmp
jne
cli
adc
add
jbe
mov
rol
pop
in
inc
mov
mov
scas
or
adc
xor
adc
sub
xor
mov
outs
pushf
pop
je
push
mov
pop
and
adc
outs
aad
mov
imul
call
test
sbb
ins
ds
mov
mov
or
test
in
and
push
aad
jne
out
inc
mov
test
(bad)
inc
mov
jnp
and
test
add
sbb
mov
inc
jge
or
call
daa
inc
add
mov
xchg
fcmovnbe
repnz
stos
clc
cld
or
inc
fwait
push
inc
add
add
mov
movs
mov
mov
xor
(bad)
mul
mov
dec
fldlg2
jmp
push
cmp
int3
ret
cmp
cmp
in
retf
(bad)
mov
pusha
xor
pop
sbb
mov
lock
fild
xlat
pop
xchg
add
dec
jo
addr16
das
pop
mov
js
into
xor
cld
mov
add
sbb
pop
call
push
sbb
(bad)
call
xchg
and
mov
iret
shl
sub
pop
outs
dec
mov
mov
or
mov
xor
int3
fs
sbb
shl
adc
test
push
adc
mov
sbb
push
mov
or
lock
je
lock
repnz
xchg
or
imul
xor
aaa
sub
aad
or
into
sbb
cwde
repnz
sti
adc
or
mov
clc
add
adc
shl
fnstsw
ret
or
fisubr
mov
sub
cmps
xor
mov
jne
mov
aas
push
das
lea
push
into
test
js
inc
es
jmp
gs
and
xor
or
and
dec
clc
int
pusha
popa
mov
push
dec
lea
or
and
call
sbb
dec
cld
(bad)
pop
jecxz
adc
cld
and
loope
jge
out
ins
and
fsub
dec
inc
iret
jg
ret
mov
test
dec
sbb
test
outs
add
(bad)
out
push
call
inc
dec
jne
jmp
sub
jmp
jl
inc
cmp
jne
jle
std
jle
dec
pop
outs
sbb
mov
or
cdq
lock
test
inc
sub
mov
lds
adc
push
add
or
or
movs
dec
scas
jl
sbb
or
hlt
aad
inc
or
inc
or
div
add
ret
ja
sub
jl
mov
add
dec
cmps
(bad)
fisttp
mov
ret
sbb
test
test
sti
add
mov
inc
(bad)
addr16
addr16
sub
(bad)
cmp
repz
jecxz
push
imul
mov
cwde
and
xor
in
call
jmp
xchg
and
mov
(bad)
fdivr
(bad)
cld
test
pushf
mov
(bad)
aas
push
pushaw
mov
push
push
push
bound
inc
or
clc
xor
xchg
mov
pop
sbb
clc
add
rol
and
nop
cmp
stos
ds
cpuid
cmp
fiadd
push
xchg
or
push
movs
pop
mov
test
cwde
in
stc
mov
nop
ins
and
jmp
add
sub
or
push
int3
mov
and
fstp
das
cld
pop
pop
add
iret
js
xchg
add
mov
add
mov
mov
js
test
push
mov
add
xor
pusha
lods
ja
push
cmp
fstp
in
jne
pop
push
adc
push
push
cwde
pop
push
inc
js
loopne
pop
into
add
(bad)
popf
xchg
dec
inc
pop
inc
jo
shl
mov
or
cmp
pop
sbb
add
jg
xor
xor
jl
xor
mov
ja
aaa
xlat
add
pop
sub
or
and
stc
outs
out
add
and
dec
das
sbb
inc
daa
or
in
sbb
test
mov
push
xor
or
and
or
push
cmps
add
js
and
fstp
push
test
cld
xchg
fsubr
clc
outs
js
ds
xor
loopne
lock
out
not
dec
pop
in
push
movs
mov
sahf
xchg
out
in
sbb
mov
aaa
push
popa
mov
mov
pushf
out
into
inc
add
add
sbb
rcl
mov
lock
mov
mov
mov
leave
mov
loopne
sub
add
sar
repnz
mov
sub
pushf
in
pop
lahf
push
imul
ins
jae
in
mov
inc
push
cwde
adc
xchg
mov
test
in
mov
xor
or
or
jae
jnp
(bad)
out
push
adc
or
inc
push
outs
jb
inc
imul
out
or
inc
or
jae
popa
sti
in
aaa
in
adc
or
dec
add
addr16
mov
mov
jl
push
push
push
popa
jb
ins
and
int
pop
and
mov
jne
je
int3
mov
dec
outs
push
int
data16
push
dec
imul
xchg
or
pop
push
das
or
(bad)
xchg
jg
daa
jg
or
repz
jg
or
pop
sbb
jg
ret
sti
jle
jg
pop
rcr
xchg
dec
dec
gs
sub
push
add
or
xor
add
inc
push
lock
outs
fs
push
outs
jne
gs
xchg
fcom
xor
aas
sbb
push
inc
popa
je
jecxz
and
push
or
dec
jno
scas
mov
mov
iret
cdq
sbb
dec
add
cmp
push
sub
xchg
movs
inc
ins
test
adc
sbb
adc
add
pop
add
ja
ins
cmc
call
ins
mov
aaa
mov
adc
sub
push
add
mov
push
adc
dec
lea
and
(bad)
or
jmp
push
mov
push
push
push
jbe
jnp
sahf
jo
xlat
pop
or
sbb
lods
call
scas
push
mov
shr
loopne
and
mov
jge
jle
nop
stos
pusha
or
push
sub
lahf
out
push
xor
or
push
push
es
cwde
test
push
add
cmp
sub
xor
adc
inc
inc
jb
push
jne
lock
hlt
call
cmovne
gs
cmp
jns
sbb
add
aas
ss
gs
xchg
push
inc
mov
inc
int
sub
push
push
push
gs
xchg
mov
cmp
inc
sar
sti
adc
xchg
mov
leave
mov
int3
ret
push
jns
into
ss
jno
cs
js
je
jae
add
pop
nop
loop
outs
cmp
jnp
add
(bad)
dec
mov
imul
add
pop
xchg
pop
add
or
inc
xor
sbb
jg
outs
jne
fs
xlat
pop
xor
sub
loopne
mov
loopne
test
(bad)
ja
add
add
imul
xlat
shl
ja
sub
ja
jmp
cmp
cmp
mov
lods
test
mov
cmp
bound
mov
sub
mov
jp
or
mov
jp
or
sub
cmp
adc
jecxz
cmp
call
mov
pushf
(bad)
adc
jne
pop
pop
and
iret
sub
push
mov
cmp
inc
icebp
lock
xchg
mov
push
loope
es
adc
sub
mov
mov
adc
rol
das
fs
xlat
jl
or
adc
mov
fucomip
jb
scas
inc
pop
in
repz
or
add
ficomp
push
fbld
(bad)
jb
scas
inc
pop
call
inc
add
loopne
jmp
mov
cs
cmp
stc
mov
das
movs
add
pop
and
cmc
sbb
adc
in
out
mov
stc
push
sahf
jb
push
xchg
pop
loop
mov
sub
rcr
in
mov
jne
add
push
jmp
add
scas
rcl
mov
out
enter
sbb
outs
add
test
out
and
(bad)
pop
call
jge
clc
lea
mov
in
ror
ds
scas
mov
movs
leave
leave
in
add
mov
leave
leave
leave
xchg
nop
mov
xor
xchg
nop
es
or
cld
mov
mov
jnp
sub
loopne
sub
call
stos
test
retf
adc
add
movs
movs
arpl
sub
dec
jmp
jle
loopne
xor
fimul
pusha
clc
add
adc
or
and
add
or
aad
retf
fidiv
sbb
and
lods
or
inc
fistp
mov
cld
add
and
adc
hlt
into
mov
push
mov
mov
jo
mov
mov
or
xor
or
xor
add
inc
and
sub
mov
xchg
sub
ja
loopne
sbb
push
and
push
cmp
clc
fxch
pusha
sar
shl
jns
je
jo
inc
add
push
push
inc
jbe
jne
cmp
pop
push
push
push
push
rcr
mov
mov
push
std
outs
mov
mov
dec
adc
mov
dec
push
loopne
call
push
cwde
lock
nop
xchg
dec
xor
pop
add
es
in
or
xor
adc
sub
and
dec
xor
ins
xchg
dec
xor
sub
je
es
movs
adc
js
xor
jl
dec
fild
sub
jmp
jo
or
ins
add
retf
fcom
rcr
sub
mov
inc
cli
mov
shr
pushf
fisubr
ins
inc
fsub
sub
popa
outs
cmp
xor
add
add
std
pop
call
outs
je
outs
addr16
jns
gs
js
cmp
frstor
dec
gs
dec
outs
cmovno
pop
jle
jb
jne
dec
jne
push
inc
imul
out
adc
outs
dec
inc
outs
cmovg
in
ja
sbb
pop
outs
adc
inc
ins
jo
xor
jb
ins
push
je
and
dec
pop
push
push
cmp
pop
adc
and
bound
inc
outs
outs
ins
inc
jae
xor
aas
pop
(bad)
pop
mov
add
add
scas
rcr
push
mov
mov
scas
xchg
xor
xor
or
dec
push
push
pop
pop
adc
jno
popa
ins
or
mov
aaa
or
jmp
jae
int3
and
lock
ins
cmp
and
aam
in
ss
aam
adc
inc
int3
xor
push
dec
ja
movs
(bad)
stos
add
or
neg
inc
cmps
add
and
fcomp
pusha
push
add
dec
fisttp
sub
push
sbb
xor
mov
mov
inc
adc
mov
addr16
inc
xchg
loop
jns
push
mov
enter
push
enter
out
inc
jecxz
add
xor
jbe
jnp
jnp
cmp
mov
push
les
add
lock
or
sbb
shr
ret
and
inc
dec
dec
inc
push
jo
sub
dec
add
mov
add
pminsw
retf
ja
fistp
xlat
das
or
jbe
jmp
push
add
add
push
inc
jne
add
or
inc
pop
push
push
mov
add
inc
mov
jnp
inc
inc
mov
add
or
cmp
adc
out
xchg
and
mov
inc
sub
mov
int3
dec
xlat
mov
ins
shl
cmc
iret
mov
jl
sub
dec
ins
cwde
std
add
popa
mov
add
loopne
int
add
jns
push
push
outs
jne
arpl
push
jg
adc
push
xor
mov
or
inc
and
stos
dec
out
or
add
cmp
add
or
test
popa
sbb
outs
and
xchg
xchg
test
add
(bad)
arpl
cmp
and
imul
not
mov
add
mov
sti
sub
mov
cmp
out
dec
inc
pop
push
stos
ss
mov
aas
(bad)
or
loope
pusha
(bad)
pop
iret
rcl
cmp
and
dec
inc
mov
imul
mov
fcomp
pop
scas
jmp
mov
add
cmp
ins
test
outs
outs
jae
imul
pusha
push
adc
aam
rcl
aad
retf
fsubr
jmp
aad
add
daa
(bad)
popa
xor
(bad)
mov
dec
imul
int3
push
add
jno
(bad)
std
pop
sbb
dec
cs
inc
push
je
outs
imul
(bad)
add
add
std
push
inc
sahf
pop
jg
push
mov
mov
hlt
push
xchg
inc
inc
nop
add
test
dec
push
je
sbb
aaa
jle
add
dec
dec
cmp
repz
pop
push
sbb
xor
sub
pop
jmp
fiadd
fsub
int
mov
dec
pop
pop
add
shl
push
adc
cs
pop
jo
scas
ins
push
push
pop
xor
call
push
clc
mov
jo
cmp
jb
jo
or
push
push
push
adc
mov
js
push
push
cmp
test
inc
jne
sahf
or
adc
add
pop
pop
lods
cmc
test
ins
inc
mov
xchg
push
mov
pop
push
pop
or
push
jb
stos
pushf
pop
pop
mov
or
shl
lods
or
aas
or
lods
push
add
inc
gs
or
add
cmps
lods
ret
popa
xchg
sub
leave
add
and
xor
push
icebp
ss
xor
movs
repnz
xor
outs
pop
std
(bad)
push
sub
arpl
xchg
cmps
dec
mov
daa
xor
mov
adc
and
pop
mov
lea
push
lahf
push
cmc
or
xchg
xchg
add
rcl
add
pop
loopne
out
sbb
(bad)
inc
je
push
into
push
inc
out
fidivr
pusha
fimul
imul
ins
fisttp
cmp
pop
cwde
out
sets
fsubr
add
pop
mov
cwde
stos
jg
inc
cmp
ds
xlat
add
xor
stos
inc
into
dec
ja
pop
add
punpckldq
pop
out
js
jbe
data16
outs
ja
xlat
add
sub
push
adc
pop
sbb
push
sar
sbb
jno
pop
mov
cmp
sar
pop
fmul
fimul
inc
popa
mov
adc
add
repnz
nop
push
loopne
outs
adc
or
xchg
stos
jg
inc
jno
ror
js
mov
add
ja
sub
mov
pop
push
cwde
stos
loopne
cvtps2pd
outs
jno
and
fild
xor
mov
cmp
adc
adc
push
sub
into
sbb
shl
adc
jg
shr
and
pop
aam
fidivr
adc
adc
xor
out
dec
ins
jo
ja
pop
xor
sub
push
sar
setb
(bad)
and
dec
jne
dec
fidiv
and
push
xor
fbld
pop
sbb
cmp
push
jg
push
jo
dec
dec
push
jo
rsqrtps
cs
test
arpl
out
out
pop
push
sbb
jae
push
out
fwait
or
pop
or
adc
scas
push
add
jae
je
add
push
retf
pusha
mov
sub
loopne
ja
pop
enter
rol
lahf
or
cwde
sbb
dec
jne
ins
sub
lea
xlat
out
inc
mov
adc
inc
outs
xchg
adc
jbe
push
ds
or
outs
addr16
push
xor
in
outs
enter
(bad)
add
sbb
add
sar
xchg
inc
outs
jae
fwait
hlt
lods
rcr
add
xchg
imul
add
je
mov
xchg
dec
cmp
dec
mov
ins
push
sahf
outs
add
nop
or
js
fsubr
lahf
add
(bad)
adc
repnz
sbb
pusha
adc
mov
shl
out
loopne
and
mov
pop
rol
push
push
xor
mov
add
pop
sti
or
in
repnz
mov
in
mov
das
mov
pop
mov
inc
pusha
cdq
mov
fwait
adc
clc
es
in
ins
mov
xor
mov
xchg
or
scas
pop
adc
inc
ret
inc
int3
ret
pop
out
arpl
pop
in
pop
or
and
sbb
sbb
fs
cmps
data16
inc
scas
neg
mov
les
xchg
dec
in
push
lds
push
leave
or
pop
fild
jb
out
push
dec
fbstp
or
sbb
sbb
fistp
clc
test
jne
scas
movs
pop
cmp
or
je
sbb
mov
es
sub
pop
outs
(bad)
pop
cmp
mov
pushf
xor
pop
add
je
sbb
xlat
jbe
sahf
call
js
jge
cld
fs
dec
adc
pop
xor
mov
mov
enter
add
aas
stc
pop
dec
pop
dec
(bad)
clc
mov
pop
ret
clc
retf
pop
dec
hlt
cmps
les
(bad)
and
fsubrp
push
mov
sub
outs
cmp
inc
in
mov
je
cmp
add
out
xor
dec
jmp
int
dec
inc
mov
hlt
inc
mov
inc
loopne
cmp
fwait
adc
jmp
cmp
int3
adc
push
sbb
sub
pop
push
pusha
xor
les
fdiv
enter
cmp
mov
mov
rcr
loopne
ins
sbb
lods
mov
ds
pop
or
int3
pusha
dec
pop
out
push
inc
lock
sbb
sub
fwait
cmp
je
jmp
mov
mov
jne
jmp
adc
dec
ins
xor
ret
nop
cli
in
jnp
push
iret
and
jo
test
sar
pop
push
dec
mov
shr
shl
fwait
sbb
push
xor
clc
pop
cmp
rcr
out
mov
mov
daa
push
xchg
or
leave
pop
cmps
aad
data16
mov
cli
dec
dec
mov
lahf
mov
clc
jecxz
push
push
or
les
adc
pop
(bad)
lock
inc
cmp
inc
stos
push
push
mov
test
jne
mov
xchg
pop
lock
mov
xchg
and
cmp
jne
test
lock
jo
dec
jmp
mov
dec
mov
(bad)
sti
ds
js
xor
dec
fsubr
fnclex
push
mov
pop
push
jmp
jl
inc
mov
mov
scas
ss
dec
jne
jne
mov
test
sbb
fstp
fist
push
add
sub
std
pop
pop
(bad)
(bad)
push
xor
add
sar
adc
or
das
js
ja
inc
add
push
enter
les
jmp
sub
(bad)
cmp
mov
dec
add
ins
call
or
jmp
test
je
(bad)
dec
sbb
sub
cld
icebp
ror
ror
lock
mov
push
and
xchg
or
or
pop
pusha
push
cwde
push
mov
or
fidivr
aas
adc
nop
pop
not
stc
mov
lock
dec
adc
xchg
inc
hlt
jmp
cmp
dec
mov
and
or
xor
jbe
fiadd
test
push
je
cmps
or
xor
push
inc
sub
icebp
push
sbb
jne
cmp
or
loopne
add
sbb
push
scas
and
jle
sub
adc
mov
or
pusha
in
mov
call
inc
rcr
cld
inc
(bad)
call
nop
jbe
fdiv
mov
lahf
icebp
fnstsw
inc
and
inc
or
ins
sbb
sub
in
push
jb
aaa
fcmovbe
cdq
pushf
fsubr
scas
sbb
or
push
sbb
pop
scas
sbb
push
jae
jb
push
mov
loopne
out
addr16
movs
shl
mov
dec
hlt
mov
mov
adc
mov
lock
mov
add
outs
add
add
lods
and
data16
dec
mov
mov
inc
pop
lock
xor
sub
cmp
push
mov
ror
lea
jmp
arpl
fcomip
jmp
je
lock
and
cmp
jne
push
dec
jne
fsubr
mov
add
or
lock
les
(bad)
or
adc
jo
inc
adc
xor
sub
adc
jne
push
mov
jmp
mov
rol
sbb
add
ret
push
dec
adc
(bad)
daa
cmp
or
je
sub
jecxz
cmp
sbb
sub
push
call
add
mov
jmp
mov
jmp
mov
sbb
pop
mov
mov
mov
or
iret
fadd
xor
dec
ja
mov
push
cmp
cmp
mov
mov
mov
add
add
push
pop
or
or
or
add
movups
adc
scas
std
inc
ins
or
adc
adc
push
out
sub
jnp
test
arpl
push
and
jns
out
dec
push
arpl
out
sahf
adc
adc
mov
jmp
ins
mov
adc
sbb
mov
push
rcl
sbb
movs
std
mov
ss
push
mov
xor
cmp
cmc
sbb
or
cmp
sub
sbb
in
imul
mov
xor
lds
mov
leave
outs
in
add
mov
adc
mov
sbb
xor
sbb
outs
xchg
cmp
or
jmp
mov
add
pop
ins
jecxz
mov
xchg
(bad)
test
mov
mov
add
add
or
pop
in
je
adc
and
jb
ja
mov
or
dec
or
adc
add
inc
dec
or
stos
in
test
sti
(bad)
inc
push
fistp
sahf
or
mov
add
pop
add
adc
mov
cmp
dec
test
je
cmp
out
sahf
jge
mov
pop
fisub
fisttp
mov
inc
ja
jg
ins
jnp
mov
add
xchg
xor
cli
ins
jg
js
add
shr
pop
mov
lock
adc
jle
pop
pop
xchg
fdivr
inc
sbb
ss
test
outs
(bad)
clc
adc
and
inc
pop
add
hlt
mov
out
(bad)
xor
in
data16
sbb
jecxz
pop
dec
test
jl
inc
xor
ja
in
ror
push
or
xor
push
lea
jno
test
fdivr
aaa
pop
inc
aaa
retf
aad
xchg
inc
sub
pop
fstp
inc
add
dec
jne
je
ins
stc
push
push
inc
pusha
mov
jno
mov
test
jne
outs
mov
adc
dec
fimul
add
adc
adc
sbb
test
popa
pop
xlat
lea
sbb
ret
(bad)
repz
ret
push
sub
sub
gs
pop
imul
loope
in
(bad)
cmp
loop
lds
inc
call
add
fwait
fs
xchg
jmp
push
adc
(bad)
imul
imul
xchg
push
adc
aas
cli
test
pop
mov
loop
adc
jle
adc
adc
clc
mov
arpl
jne
mov
sbb
sbb
push
sub
mov
dec
pop
ds
mov
ja
ds
neg
je
or
inc
jne
pusha
cmp
pop
mov
push
adc
mov
dec
mov
and
fisub
jbe
test
mov
adc
(bad)
adc
xor
and
xor
add
cmp
mov
shl
test
mov
je
jecxz
push
or
lock
and
mov
loopne
addr16
pop
dec
inc
cwde
xor
je
mov
xor
in
jl
mov
adc
or
xor
mov
inc
sbb
pop
push
or
retf
retf
pop
loop
lds
cwde
xchg
xchg
push
push
cli
mov
shl
xchg
cmps
jmp
dec
pop
test
idiv
shl
repnz
adc
sar
mov
pop
inc
pop
loopne
iret
repz
xor
push
or
test
outs
pop
in
mov
and
dec
fst
stos
aam
xchg
pusha
das
xchg
sub
or
test
mov
adc
adc
sbb
push
pusha
and
xor
in
inc
cmp
mov
add
jle
xor
sbb
add
ins
jge
pop
pop
cmps
add
push
repnz
cmp
ja
stos
fsubr
dec
and
mov
jmp
arpl
push
mov
inc
add
sub
push
mov
in
dec
outs
nop
add
add
in
test
jne
jp
icebp
pop
sbb
pop
sbb
cmp
ret
inc
imul
shl
add
cmp
sbb
std
lock
data16
(bad)
cdq
mov
shl
jmp
sbb
iret
movs
iret
inc
mov
sub
mov
push
stc
lock
mov
xor
movs
adc
ret
adc
inc
ret
dec
or
in
xchg
push
nop
adc
xchg
mov
inc
in
adc
leave
and
mov
jmp
xchg
lods
inc
icebp
lds
daa
in
ss
test
push
in
outs
mov
cmp
pop
sub
mov
adc
sub
inc
mov
loopne
or
push
mov
out
test
into
cmp
mov
frstor
(bad)
jae
pop
push
push
rol
pop
add
(bad)
adc
mov
add
(bad)
std
push
add
pop
or
jmp
xor
inc
pshufw
adc
dec
xlat
sbb
lds
aaa
jp
daa
ror
xor
jmp
mov
pusha
rol
in
out
sbb
dec
cmps
pop
add
retf
js
cmp
stos
cmps
or
adc
in
dec
pop
cld
adc
mov
inc
(bad)
jne
mov
sar
push
clc
add
sbb
dec
imul
xchg
daa
jo
inc
mov
push
(bad)
pop
pop
mov
sahf
out
jecxz
or
sbb
jbe
das
js
add
push
dec
shl
shl
xor
pusha
call
mov
shr
sbb
fimul
imul
psubb
cld
fstp
fwait
addr16
or
xor
(bad)
fnsave
mov
mov
fistp
arpl
loopne
jnp
xchg
xor
pop
sub
jne
adc
mov
pop
dec
imul
sub
jge
jne
sub
push
sub
in
ins
or
and
stc
loopne
jb
fsubr
cmp
not
pop
test
inc
adc
hlt
jmp
rol
je
jp
ret
outs
add
jmp
cmp
jmp
adc
mov
and
xor
ret
cmp
ror
leave
push
add
jbe
mov
mov
lods
add
pop
sub
jo
or
out
mov
sub
cmp
sub
cmp
sti
(bad)
std
jg
dec
jmp
push
mov
xchg
xchg
clc
sbb
pop
add
imul
imul
movs
mov
add
or
mov
idiv
pop
retf
shl
fsub
mov
call
jne
sub
adc
push
push
sub
push
push
pop
gs
ret
lea
adc
retf
iret
retf
inc
or
(bad)
test
jb
hlt
fwait
xchg
mov
cld
dec
shl
xchg
sub
in
and
xor
push
pop
pushf
xchg
push
pop
xchg
inc
mov
(bad)
mov
dec
rcr
test
je
inc
add
add
add
outs
push
lea
mov
mov
sbb
or
or
mov
fist
shl
push
lods
mov
enter
and
push
inc
jle
mov
sbb
sbb
iret
xor
repz
in
jae
push
and
iret
repz
mov
fnstsw
push
dec
push
pop
pop
retf
es
clc
(bad)
cs
ret
in
pop
(bad)
clc
fsubr
and
adc
daa
aas
dec
lods
mov
xor
test
cmp
jae
test
add
clc
pop
cmp
pop
inc
ins
pusha
aas
cli
add
fld
shl
xor
es
loopne
sub
sbb
inc
mov
test
jns
ins
inc
jo
mov
xor
cmp
sub
pop
mov
pop
je
adc
dec
je
or
jmp
mov
mov
movs
jl
test
(bad)
(bad)
pop
lock
jbe
mov
xchg
rol
cs
sahf
out
aas
dec
jb
mov
loope
icebp
push
xchg
cmp
repz
adc
repz
sbb
and
mov
int
fld
jo
dec
fild
gs
popa
aad
xchg
test
and
and
rcr
cmp
xor
pop
inc
jmp
cmp
(bad)
adc
daa
jecxz
add
sbb
bound
jp
and
pop
or
scas
jmp
outs
xor
mov
in
inc
dec
cwde
call
mov
add
lods
add
inc
outs
push
jo
inc
rol
sub
ja
jmp
jb
xor
or
add
add
test
add
mov
add
and
pop
push
add
popa
dec
xor
cmp
ins
xor
dec
jbe
and
or
dec
ins
ret
imul
leave
leave
inc
push
jbe
pusha
pop
or
push
adc
add
fldenv
js
add
and
push
cdq
push
adc
cmp
jne
rcr
or
add
ins
cmc
jns
mov
push
jmp
jbe
out
fsub
(bad)
in
imul
cmp
popa
dec
mov
adc
pop
add
retf
push
and
add
inc
loop
jecxz
or
jae
sbb
hlt
jo
dec
inc
out
adc
out
loop
or
out
or
in
jns
neg
sub
push
call
(bad)
not
ret
or
and
dec
mov
mov
mul
inc
push
mov
adc
pop
mov
mov
push
mov
pushf
movs
scas
push
lock
stos
imul
adc
imul
call
push
dec
adc
sar
fild
test
sbb
sub
mov
xlat
shl
inc
call
enter
pusha
enter
dec
mov
hlt
adc
add
jns
push
sub
push
adc
jecxz
push
mov
pop
aaa
cmp
sbb
push
mov
loopne
xor
aaa
sbb
adc
mov
sub
xor
dec
sbb
cmps
push
xor
add
and
jge
jl
jmp
fdivr
cs
test
scas
cmp
xor
mov
jne
cs
fiadd
enter
les
add
xchg
push
mov
jmp
imul
je
ins
dec
inc
fcom
xor
out
out
call
and
sbb
xchg
shl
dec
xor
or
ret
repnz
shr
outs
pop
push
addr16
scas
add
mov
push
jge
call
iret
scas
call
mov
mov
push
or
sar
enter
mov
aas
push
or
fs
mov
cmp
iret
add
sahf
sbb
inc
jle
push
jg
lock
out
mov
(bad)
sahf
out
or
(bad)
adc
out
pop
sub
dec
arpl
sbb
mov
adc
jno
ins
push
mov
pop
cmps
push
cmp
xor
test
and
les
sub
fsub
push
arpl
mov
and
imul
sub
cdq
rcr
ss
retf
and
shl
adc
daa
push
and
ja
pop
mov
and
sub
jo
jmp
mov
ins
test
cld
mov
retf
lahf
ss
pop
mov
jnp
repz
out
cs
outs
pop
xor
jns
out
jo
xchg
test
inc
mov
cmp
retf
mov
pop
lods
daa
iret
das
sbb
mov
imul
loopne
data16
mov
inc
adc
inc
int
push
sub
mov
scas
xchg
sbb
sbb
jbe
jmp
cmp
ja
popa
xor
sbb
daa
daa
push
or
daa
mov
cli
icebp
lock
xor
jb
sub
or
or
jae
bnd
jl
ds
xbegin
inc
push
mov
add
aas
adc
cmp
add
call
(bad)
test
rol
fldenv
and
push
daa
push
push
pop
mov
sub
stos
js
jb
pop
pusha
jnp
das
test
and
cmp
nop
adc
arpl
add
daa
adc
mov
push
aam
push
pop
aad
mov
push
loope
sub
mov
push
cmp
jge
add
rol
sti
mov
hlt
aaa
hlt
jle
and
sti
aaa
jne
sub
add
adc
js
or
mov
mov
call
int
xlat
pop
or
or
or
pop
test
out
test
lock
or
sbb
dec
pop
shr
fs
and
mov
adc
ret
sub
inc
sbb
jmp
inc
push
or
sub
jbe
not
imul
dec
sub
push
jecxz
repz
add
push
xor
repz
cmc
add
in
iret
jnp
(bad)
pop
pop
xchg
xchg
push
mov
cmp
rol
jb
or
jp
js
jne
jne
imul
or
xchg
sbb
dec
neg
sbb
out
fcomp
fstsw
sahf
and
mov
jg
fild
fcompp
dec
jnp
fld
sbb
add
test
ficom
or
jne
and
rol
push
add
je
sbb
pop
and
inc
nop
add
test
push
addr16
sahf
out
fnstenv
iret
push
fdivp
push
in
jmp
push
xor
pop
aas
stos
pop
out
sahf
outs
pop
push
pop
imul
xchg
mov
cmp
fsub
sbb
dec
mov
fild
bound
mov
lea
adc
fdivrp
xchg
and
jbe
jge
jno
push
frstor
jo
dec
jmp
pop
js
push
cmp
push
and
inc
daa
cmp
jmp
sub
add
jle
sbb
push
mov
xor
pop
add
neg
sbb
neg
aas
fcom
push
jo
fs
mov
pop
lock
mov
ds
ror
lock
add
pop
in
psubb
fld
fstp
fwait
jmp
jp
js
sbb
add
mov
test
xchg
ret
fnstsw
(bad)
pop
mov
xchg
push
or
ins
push
jns
cdq
nop
or
mov
sbb
adc
clc
and
xor
popa
mov
sub
push
fst
sub
clc
fwait
jno
bound
add
sub
clc
cmps
or
scas
inc
pop
add
not
sahf
mul
(bad)
pop
add
push
bound
int
sahf
out
cwde
stos
or
jle
jnp
mov
push
pop
out
idiv
push
or
and
cmp
cmps
dec
xor
shl
mov
inc
fild
in
add
sbb
imul
mov
cmp
in
inc
movsx
inc
cmps
fstp
push
sub
add
sar
cli
fild
inc
add
inc
dec
mov
or
dec
test
nop
add
movs
xor
and
jns
pop
cmp
add
int
jp
mov
movs
xchg
outs
jo
hlt
xchg
pop
dec
(bad)
out
sahf
daa
or
push
xacquire
gs
cmp
mov
push
pop
push
sbb
xor
mov
loopne
mov
inc
daa
push
jb
test
or
or
push
ds
mov
sub
std
inc
call
sub
mov
rol
sub
adc
push
cmp
push
adc
adc
sub
jmp
out
jmp
shr
sub
jmp
jns
ins
cmc
add
mov
sub
into
js
enter
loopne
or
inc
mov
fistp
lock
fld
or
sbb
push
jmp
(bad)
loop
ins
jnp
pop
ins
add
aaa
nop
cwde
aaa
scas
mov
les
(bad)
sub
pop
push
shl
lea
add
(bad)
ds
sbb
lea
shr
fild
(bad)
adc
shr
loopne
out
or
in
xor
mov
(bad)
push
cmp
outs
push
mov
pop
adc
inc
xor
out
adc
es
and
and
(bad)
mov
ret
loopne
in
add
add
jns
mov
rol
arpl
ins
pusha
in
adc
jl
push
cmp
dec
fsubr
aas
add
rol
pop
in
xor
push
in
and
pusha
or
mov
xor
and
add
or
mov
xor
adc
or
jnp
(bad)
adc
sub
inc
pop
loopne
ss
neg
jo
call
or
inc
rol
scas
xchg
pop
or
dec
xchg
dec
enter
mov
ret
bound
pop
push
test
dec
repz
xchg
(bad)
pop
push
data16
iret
and
les
adc
aam
popf
push
pop
repz
pop
jmp
push
sub
inc
mov
pop
xchg
xor
add
mov
or
rcl
and
mov
inc
or
sub
sub
rol
jne
sbb
pshufw
outs
push
pop
push
fwait
push
rol
aaa
scas
rcr
fcom
pop
push
or
push
and
adc
pop
sbb
add
jl
inc
mov
repnz
aaa
sub
dec
pop
jl
mov
cwde
leave
mov
inc
int3
push
popf
mov
jecxz
cli
push
adc
sub
inc
push
loope
repz
push
fstp
push
nop
mov
mov
test
sub
inc
sub
jo
adc
jo
sub
sbb
push
sub
mov
inc
bound
add
mov
add
ret
outs
adc
sbb
cmps
in
add
push
in
mov
add
ins
xor
mov
inc
cmp
adc
cmp
int3
cmp
pop
push
inc
xor
ss
or
sbb
push
or
cmp
add
aam
push
icebp
adc
ins
sbb
aad
mov
aas
xchg
mov
rol
(bad)
cmp
test
mov
aaa
leave
fistp
bound
sbb
add
and
iret
leave
repz
mov
shr
call
jns
jmp
pop
pop
sub
inc
push
popa
jl
or
pusha
jo
nop
push
aas
mov
rcr
add
inc
fmul
push
jae
mov
and
pop
(bad)
adc
adc
mov
xchg
add
rol
(bad)
shl
cmp
cmps
aas
adc
add
mov
movs
jg
jmp
cmp
sbb
jne
mov
or
pop
hlt
rcl
or
aas
dec
call
jmp
outs
fdivr
inc
inc
push
xor
jnp
pop
pop
es
cdq
mov
aam
xor
aam
fcmovu
daa
pop
add
jmp
jmp
push
add
inc
push
ret
mov
daa
push
inc
enter
(bad)
and
jns
jae
sbb
and
cmp
mov
xchg
mov
and
push
rcr
inc
inc
dec
fcomp
lock
add
mov
sbb
jb
pop
loopne
jns
dec
movq
xchg
sbb
lds
outs
mov
leave
push
add
mov
mov
push
push
push
or
popf
push
mov
dec
fist
pop
pusha
add
jb
je
dec
je
jmp
daa
pushf
or
ror
sbb
cld
xor
add
push
jmp
stos
int
cwde
arpl
sub
sbb
adc
pushf
inc
xor
xor
(bad)
and
pop
push
cli
rcl
adc
dec
in
mov
lahf
pop
lahf
pop
mov
movs
jecxz
adc
mov
sub
js
sbb
mov
push
lahf
ss
mov
mov
jp
push
setp
(bad)
adc
cmps
xchg
popa
cmp
cmp
adc
test
outs
in
xor
gs
mov
sub
sub
mov
sbb
push
(bad)
loop
push
rol
(bad)
in
or
inc
sbb
xchg
adc
mov
fst
cmps
shl
je
sbb
xchg
inc
loop
retf
(bad)
in
shl
push
sbb
push
fmul
xchg
add
push
adc
dec
inc
mov
jne
xor
in
jne
fwait
cmps
rcr
neg
fimul
fiadd
lahf
repnz
mov
imul
or
pop
jbe
xor
sbb
pop
pop
push
es
cmp
repz
xchg
mov
neg
lods
xor
add
fcmovbe
inc
mov
(bad)
cs
xchg
fcomp
(bad)
lock
sub
jmp
aas
test
cmp
add
sar
push
inc
adc
add
dec
mov
push
fs
pop
call
not
fcom
add
fs
stos
pop
enter
jae
jae
adc
pop
adc
je
movs
cvtdq2ps
inc
mov
inc
xor
inc
ss
push
xchg
in
push
cmp
pushf
push
cwde
cmps
adc
in
mov
sbb
daa
xchg
gs
jbe
mov
pop
aas
nop
mov
aas
mov
mov
mov
ss
mov
inc
mov
xor
sub
or
or
sar
das
sbb
jo
jl
lods
mov
imul
xchg
inc
fs
pushf
jbe
jo
add
xchg
js
ins
inc
iret
sbb
sbb
aam
fs
(bad)
cmp
or
inc
and
dec
das
dec
in
jb
or
out
call
mov
ror
push
push
pop
inc
fimul
fnsave
adc
sub
xor
shr
clc
dec
or
leave
jmp
ret
inc
pusha
test
push
sub
adc
add
pop
inc
or
sbb
je
sub
and
xchg
jo
mov
stos
loop
dec
pop
or
rcr
add
mov
and
imul
push
mov
imul
push
cmp
xor
ret
mov
push
push
test
sub
pop
cmc
fs
mov
lea
or
inc
push
xchg
xchg
pusha
dec
mov
das
and
dec
in
add
dec
add
and
add
pusha
scas
rol
test
xchg
adc
adc
mov
dec
in
xchg
adc
push
imul
scas
aas
pop
sub
jmp
mov
xchg
cmp
jge
mov
pop
jmp
inc
push
or
imul
mov
or
pop
mov
add
pop
sub
and
loope
iret
push
mov
adc
mov
xchg
push
xor
adc
sbb
cmc
and
cmps
nop
pop
mov
cmc
addr16
sub
mov
pusha
dec
mov
outs
test
sub
pop
pop
add
push
daa
dec
out
or
outs
cmp
fwait
inc
dec
or
push
xchg
lea
and
bound
retf
cmp
pop
cdq
mov
ror
push
or
pop
into
and
add
daa
and
mov
(bad)
and
adc
cmp
push
je
inc
test
fdiv
loopne
jno
lock
ja
call
stos
fsubr
push
popa
inc
sbb
mov
inc
lods
adc
mov
scas
inc
stos
cs
repz
jns
scas
fmul
stos
cmp
inc
xor
out
push
and
pop
pop
ja
xchg
push
lods
mov
enter
mov
scas
jp
mov
jbe
jnp
and
or
and
push
xor
pop
xchg
pop
add
xor
mov
and
daa
cmp
xchg
jno
call
les
jno
mov
test
mov
cmp
xor
call
adc
clc
mov
mov
dec
and
jo
gs
mov
push
pop
push
sub
push
xor
int
sbb
and
or
imul
cmp
repnz
sbb
and
in
loop
pop
dec
es
in
movs
stos
enter
push
add
scas
pop
dec
lods
push
push
lea
in
adc
cwde
adc
push
in
mul
not
or
or
bound
sbb
or
sub
mov
xor
ret
and
xor
bound
adc
pop
pop
inc
and
and
in
or
ret
dec
cmovns
push
mov
and
adc
test
adc
in
popf
and
ret
and
inc
jecxz
mov
bound
inc
add
mov
mov
adc
and
or
aad
inc
and
leave
inc
inc
add
dec
mov
push
dec
jmp
cmps
add
rcl
sub
data16
jmp
jns
and
jmp
jb
jns
pop
adc
cmp
inc
int3
in
into
sbb
cmp
loope
mov
cmps
pop
cmps
push
pusha
cmp
pop
pop
push
loopne
fadd
daa
xor
pop
adc
cmps
or
ins
adc
pop
and
push
in
movs
sbb
push
cmp
jae
jns
pushf
jae
sub
arpl
mov
in
dec
mov
nop
pop
inc
fbstp
mov
add
and
cmp
mov
out
pop
cmps
sub
ja
stos
(bad)
push
loop
out
or
mov
iret
repz
push
iret
out
mov
pop
mov
inc
pop
pop
fwait
push
mov
shl
jnp
in
or
daa
push
popf
mov
stos
lock
popa
ins
push
ror
inc
test
adc
dec
pop
and
movs
or
jmp
inc
sbb
xor
or
xor
pop
es
cdq
nop
jmp
in
es
xchg
or
scas
dec
loopne
xchg
int
pop
inc
mov
add
test
fbld
cmp
loope
adc
push
adc
test
xor
mov
sub
xchg
and
test
ins
sbb
fcom
push
test
cmp
mov
xlat
popf
push
push
sbb
in
push
lgs
sahf
out
push
popa
jnp
add
outs
fadd
push
inc
jns
push
loope
loope
sub
or
push
inc
xor
gs
leave
sbb
adc
sbb
inc
add
movs
or
sbb
add
adc
lods
dec
stc
inc
test
fwait
xlat
dec
xlat
ret
ss
lds
pusha
xlat
imul
call
daa
fs
fimul
retf
es
dec
loope
cwde
jo
fisttp
test
adc
add
les
test
add
xchg
jo
rcr
std
mov
sbb
retw
push
dec
xchg
cmp
cwde
mov
in
outs
retf
push
push
movs
dec
push
dec
mov
dec
mov
movs
shl
pop
cmp
inc
mov
sub
sub
xor
daa
xlat
cs
fs
mov
lock
sub
mov
jo
xor
or
loop
rcr
push
or
fadd
jb
fsubr
push
scas
or
je
jmp
sub
mov
push
sub
sub
ss
xor
pusha
jno
and
cwde
lea
sub
mov
mov
sub
icebp
cmps
shr
hlt
pop
cld
mov
rcl
je
ja
enter
mov
clc
fcomp
sbb
add
retf
ret
pop
fnstenv
add
or
inc
xchg
mov
pop
push
mov
sub
outs
bound
ins
outs
and
adc
cs
outs
pop
add
mov
add
add
adc
push
push
mov
fcom
test
je
mov
pop
dec
mov
and
(bad)
jmp
jb
mov
pop
jmp
mov
mov
cmp
dec
jo
jno
jge
sbb
add
cmp
out
xor
or
aaa
rol
pop
jg
rol
add
mov
jg
adc
inc
add
or
pop
sbb
leave
add
rcl
xlat
adc
or
jne
mov
dec
or
push
and
inc
dec
jl
push
push
or
dec
sub
stos
or
sti
add
sbb
repnz
dec
and
fstp
fwait
pop
outs
pop
inc
add
(bad)
fstp
fwait
push
or
sbb
mov
aas
ins
xchg
and
mov
js
push
inc
and
sbb
rol
pop
pop
add
lea
pop
or
add
lods
mov
gs
dec
jmp
add
add
add
push
dec
out
lods
sti
pop
cmp
mov
(bad)
push
cmp
xlat
xchg
pop
das
sbb
pusha
mov
push
inc
push
call
push
cwde
push
aaa
nop
pop
inc
pop
mov
dec
out
xchg
ret
xchg
cwde
adc
sbb
sbb
add
sbb
and
and
ret
xchg
mov
jle
clc
sbb
clc
iret
test
(bad)
jmp
cmp
jne
fst
shr
fsubr
scas
iret
arpl
pop
add
add
cmp
sar
inc
test
dec
add
sub
jb
je
dec
je
adc
cmp
cmp
into
mov
sti
dec
pop
js
(bad)
mov
mov
mov
xor
xor
icebp
jg
push
cmp
jne
cmp
add
es
push
xor
jl
retf
les
cmp
add
cmc
jmp
xor
jmp
mov
mov
mov
fwait
or
or
ss
fndisi(8087
adc
inc
cmp
pcmpgtd
adc
push
jmp
rol
pop
loope
push
mov
mov
mov
and
add
(bad)
sub
cli
arpl
cmp
mov
lds
bound
push
sub
or
xor
cmps
push
jne
xor
xchg
dec
les
pop
xchg
pushf
mov
jmp
shr
rol
jne
repz
jo
shl
push
push
mov
outs
mov
inc
imul
xor
sub
loopne
inc
jmp
push
cmp
ret
inc
and
add
int3
mov
sub
cli
or
add
jg
or
outs
ret
mov
cs
mov
mov
mov
sub
je
(bad)
pop
rcl
dec
adc
adc
adc
cmp
arpl
add
in
retf
sub
mov
sbb
inc
sbb
stos
adc
or
add
int3
add
stc
ficom
cmp
xchg
or
mov
ins
xchg
jmp
mov
pop
test
mov
test
inc
jle
out
repnz
sbb
ds
icebp
das
mov
or
mov
rcr
inc
mov
sar
cld
movs
cmp
mov
jge
ss
pop
jne
adc
cmp
jne
cmp
jae
xor
mov
bound
or
das
jbe
outs
pop
fwait
data16
ret
pop
inc
add
ins
bound
addr16
sar
or
adc
push
fmul
outs
dec
fild
add
fcompp
cmp
and
pop
mov
push
push
sub
imul
pushf
and
enter
div
stos
mov
(bad)
adc
add
jp
std
inc
and
push
(bad)
(bad)
rcr
movs
add
mov
mov
inc
mov
daa
out
push
sub
mov
daa
jb
pop
and
fild
adc
add
add
dec
and
je
add
pop
push
cmp
movs
scas
int3
shr
add
mov
jns
jmp
repz
test
pop
and
mov
sahf
cli
xchg
out
mov
sub
and
mov
pop
push
pop
out
cmp
fnstenv
and
push
xor
adc
dec
dec
shl
adc
cmp
aaa
inc
cmp
push
jp
lods
and
dec
test
sbb
mov
pop
inc
mov
clc
je
sbb
jg
inc
fsubr
cmp
xlat
dec
mov
jmp
aas
jne
mov
xchg
adc
mov
sub
inc
pop
pop
push
fsub
jp
mov
mov
dec
add
jae
mov
div
xor
clc
xor
pop
adc
test
inc
cwde
loope
xor
lods
xor
call
cmp
lock
aaa
inc
hlt
dec
sar
and
add
je
mov
pop
sahf
hlt
je
inc
fdivr
inc
(bad)
repz
hlt
push
into
cli
sbb
ss
sub
dec
fcom
ds
pop
mov
cld
inc
pop
int3
add
ret
add
push
xchg
inc
xor
add
add
inc
mov
leave
or
loopne
or
dec
test
in
or
dec
adc
sub
add
adc
sbb
fmul
mov
push
add
lds
jb
mov
xor
loopne
xor
int
repnz
push
cmp
stos
scas
pop
rcr
pop
cmp
shr
mov
sti
lea
sbb
pusha
pop
jb
stc
test
loopne
adc
ss
jae
imul
or
adc
and
fsubr
and
push
mov
enter
push
xor
inc
or
cs
mov
push
mov
and
jmp
cwde
sub
(bad)
rcl
push
pop
inc
cmp
call
pop
(bad)
je
std
xor
mov
xchg
push
mov
imul
pop
in
adc
or
mov
sahf
gs
jp
cmp
jb
push
add
add
add
mov
int
jmp
sbb
push
call
add
add
je
jns
and
fnstsw
dec
add
ins
add
das
dec
test
cmp
xor
outs
idiv
faddp
aas
pop
push
dec
sub
addr16
jb
cdq
mov
mov
jbe
xor
sbb
bound
int3
dec
loope
out
xor
int
jp
push
push
jbe
inc
jae
and
cmps
dec
fwait
jmp
cmps
data16
fsub
cmps
push
xor
jecxz
xchg
inc
add
aaa
xor
push
es
scas
xor
aaa
push
imul
ja
rol
push
call
mov
push
and
xor
inc
add
pop
xor
adc
(bad)
push
add
inc
inc
pop
pop
aaa
fcom
das
push
imul
cs
inc
sbb
pop
retf
cwde
shl
add
mov
adc
push
xchg
(bad)
push
push
outs
int
mov
add
inc
call
xlat
jle
jmp
clc
mov
cmp
sub
jl
nop
out
inc
dec
sub
sbb
sub
push
pusha
pop
or
and
fld
(bad)
push
cmp
clc
cmc
push
loop
inc
aas
call
adc
mov
mov
rcl
rcr
hlt
sbb
cwde
mov
(bad)
and
int
scas
leave
xchg
cs
je
cmp
dec
ret
sbb
push
fs
xor
out
test
popa
div
push
rcl
and
push
fld
ja
fsub
popa
ja
and
cmp
aaa
jmp
mov
call
je
inc
dec
in
ja
xor
mov
lea
sbb
and
movs
add
adc
imul
es
sbb
std
inc
or
cmp
and
sbb
lea
add
sub
adc
mov
rcl
adc
push
dec
dec
sbb
xor
pop
xchg
mov
je
or
or
lock
pusha
sbb
ins
test
xchg
rol
add
mov
sbb
sub
dec
adc
adc
icebp
repnz
sub
sti
stos
inc
or
rcr
mov
xlat
mov
xchg
shl
inc
pop
mov
sbb
cmp
add
mov
add
mov
outs
and
rol
loopne
lds
daa
sbb
sbb
pop
mov
inc
je
retf
adc
and
or
inc
mov
aaa
adc
sub
add
jmp
pop
adc
pop
adc
inc
sub
cli
add
in
fsub
in
jle
and
mov
adc
arpl
add
add
jmp
dec
xor
pop
icebp
fsub
shl
nop
add
adc
aaa
dec
dec
(bad)
mov
ror
mov
inc
mov
push
cmps
les
pop
loopne
mov
push
sbb
inc
int3
and
xchg
ret
test
je
adc
out
fstp
ret
or
pop
shr
or
add
mov
dec
(bad)
adc
je
jl
mov
or
aam
call
mov
dec
or
(bad)
jns
adc
jge
add
out
repnz
clc
dec
test
jl
inc
(bad)
(bad)
mov
mov
(bad)
mov
mov
mov
jo
sub
inc
mov
add
add
dec
jne
out
test
out
test
cli
mov
hlt
cs
js
sbb
xor
cmp
push
push
add
mov
pop
pop
or
ret
out
dec
lar
cs
retf
cmp
and
repnz
dec
mov
xor
dec
lea
aad
movs
cmp
nop
rcl
dec
fisubr
dec
cmps
in
ror
rcl
rcl
mov
and
inc
les
add
pop
inc
inc
aas
int3
xlat
push
stos
stos
test
mov
ret
loopne
loopne
pop
test
js
pop
inc
add
adc
cmp
dec
call
and
sub
jae
jl
add
ret
scas
dec
mov
push
jne
and
dec
or
repz
adc
out
push
adc
jl
xor
mov
nop
popf
push
jp
jmp
push
lea
lea
ret
xchg
mov
jp
cmp
je
or
in
mov
xchg
hlt
rcl
ins
scas
cmp
and
or
cmp
sub
adc
or
fnstsw
or
sbb
jbe
pop
imul
dec
fcom
pop
in
add
or
in
mov
mov
mov
add
inc
jle
push
dec
jns
push
sahf
or
sub
add
aad
mov
call
sub
test
call
inc
out
ret
add
jge
mov
jl
outs
add
sar
ss
jg
jg
fisttp
cmp
or
pop
ret
call
pop
es
pop
call
sub
std
mov
fstp
outs
jmp
and
add
sub
add
clc
inc
push
sbb
mov
repz
loopne
shl
jae
mov
(bad)
fcomp
mov
jge
inc
js
cdq
dec
sbb
xor
mov
adc
jmp
imul
outs
fs
jb
popa
jns
add
mov
adc
je
ins
cs
cdq
test
daa
add
(bad)
mov
adc
leave
je
jmp
add
leave
or
rcl
(bad)
out
idiv
ds
dec
cmp
jl
mov
push
sar
dec
jmp
mov
cli
(bad)
fdivr
jle
mov
out
push
pop
push
xor
daa
(bad)
je
mov
ret
push
(bad)
(bad)
pop
add
das
adc
push
mov
lods
or
int3
sub
push
lods
or
inc
cmp
rol
rol
jmp
or
add
jbe
xlat
add
cmp
jl
pop
mov
pop
addr16
mov
cmp
jne
push
push
cld
add
ror
jp
out
in
add
adc
out
add
or
je
(bad)
or
adc
shr
enter
dec
cli
(bad)
mov
push
mov
stc
push
xchg
test
mov
add
add
lods
scas
push
neg
(bad)
mov
push
adc
mov
aam
aam
or
out
jne
mov
pop
jecxz
inc
rol
pop
aam
mov
repz
jle
cmp
mov
sbb
or
loop
ins
(bad)
in
(bad)
pop
sbb
outs
jne
or
idiv
ss
or
mov
xor
inc
pop
inc
call
mov
jl
inc
xchg
mov
jo
jne
or
inc
pusha
lock
outs
xchg
ins
in
jae
jne
mov
sub
dec
adc
push
int3
mov
cmp
and
test
stc
add
nop
mov
add
in
cli
enter
sbb
scas
push
aaa
adc
mov
fcom
cmp
jg
xchg
add
mov
lds
nop
jb
pop
cmp
jnp
out
jle
dec
ss
push
stos
mov
mov
xchg
call
out
push
push
(bad)
adc
xchg
inc
(bad)
or
fisubr
retf
adc
movaps
or
jmp
xor
add
cs
(bad)
je
push
clc
loopne
mov
mov
jbe
jmp
push
inc
mov
and
dec
loopne
stos
sbb
and
lods
mov
cmp
dec
shl
ror
ins
lods
dec
in
fisubr
mov
imul
sbb
sbb
mov
movs
mov
sbb
add
popf
jge
add
dec
mov
push
add
in
mov
inc
stos
fsubr
cmp
xlat
fisttp
and
adc
xor
adc
push
mul
in
jmp
pop
or
sbb
pop
mov
call
vmovaps
add
add
and
ja
xchg
outs
mov
mov
cmp
sub
movs
mov
push
movs
adc
or
mov
ja
outs
mov
sub
mov
add
xor
jb
jns
rcl
jb
and
ds
xchg
jmp
dec
add
mov
neg
mov
sar
or
shl
imul
popa
stos
popa
popa
shr
cld
adc
adc
outs
cli
jne
dec
bound
xor
lea
fs
and
sub
inc
sbb
mov
inc
dec
jne
adc
add
aam
inc
xchg
or
xor
int3
xor
(bad)
push
mov
xchg
pop
clc
sbb
ficomp
retf
push
pop
xchg
xchg
inc
loope
or
adc
mov
hlt
mov
cli
xchg
push
add
jb
retf
test
stos
add
imul
retf
pusha
pop
call
mov
popf
lods
mov
jb
sti
jnp
fmul
ret
cld
adc
pop
es
ror
fiadd
cmp
imul
mov
out
cmp
fld
call
jb
fsubp
dec
scas
dec
pop
(bad)
or
pop
paddsb
or
shl
mov
das
pop
adc
bound
sbb
mov
pop
sbb
fwait
pop
cmp
push
fisttp
scas
jge
inc
add
mov
push
mul
js
stc
pop
sbb
(bad)
cmp
loopne
daa
sub
pop
jns
dec
into
jle
imul
sbb
adc
mov
push
aaa
lods
dec
fwait
(bad)
pop
mov
pop
mov
sbb
inc
adc
call
mov
xchg
aad
push
aad
std
cmp
test
aad
cmc
ins
xchg
or
jns
dec
fst
fbstp
int3
shr
shr
mov
mov
fbld
fistp
mov
jmp
movs
adc
jne
ins
rcl
(bad)
fmul
sti
add
push
sub
cmp
inc
push
and
pop
sbb
add
mov
dec
adc
jo
popa
ja
and
jns
xchg
out
aad
add
jmp
jnp
push
push
jae
or
ror
add
push
and
cmovns
fs
mov
dec
or
pop
in
stos
add
mov
rol
mov
lods
mov
je
dec
add
mov
pop
cld
mov
imul
pop
fcmovb
xor
dec
cmp
and
dec
stos
mov
or
sbb
shl
icebp
lods
add
mov
mov
adc
(bad)
call
mov
add
and
add
add
icebp
or
jg
fimul
(bad)
cdq
idiv
repnz
sub
arpl
shr
jle
cli
mov
adc
mov
add
push
mov
aas
mov
xlat
(bad)
ror
ret
mov
out
mov
xchg
inc
dec
jne
inc
fsin
cmps
pop
adc
inc
leave
fsub
sub
fmul
jmp
xor
cmp
ins
enter
shl
ss
(bad)
mov
(bad)
inc
aam
fcom
mov
pusha
cmp
mov
mov
mov
mov
aam
into
push
cs
inc
sub
dec
sbb
mov
fldcw
mov
(bad)
repz
cmp
sbb
les
leave
xor
cmp
int
jecxz
je
popf
jp
inc
add
je
rcl
push
bswap
mov
and
cmp
inc
or
dec
add
xchg
stos
movzx
(bad)
sbb
lock
fwait
and
ret
jle
sbb
jl
test
or
inc
pop
jo
dec
lods
push
xchg
aam
inc
test
inc
add
std
add
push
sbb
(bad)
dec
push
ror
pop
pop
scas
jnp
push
sbb
inc
(bad)
mov
adc
dec
sbb
jnp
je
push
(bad)
pusha
add
mov
fadd
inc
inc
push
ss
adc
iret
in
jle
cmp
pusha
cmc
outs
adc
lea
add
dec
or
cli
push
neg
jns
call
jmp
and
es
fisub
setb
mov
mov
mov
cmps
data16
(bad)
xor
add
add
pop
inc
int3
sahf
push
dec
les
pop
mov
dec
je
addr16
mov
adc
sbb
dec
pushw
mov
adc
outs
sbb
out
xchg
(bad)
cld
pop
sub
xor
xchg
adc
push
fcomp
pop
xor
shr
sbb
pop
or
inc
or
inc
cmp
aaa
outs
add
cmp
sub
or
ret
add
pop
dec
popf
and
pop
fmul
js
add
mov
popf
adc
xchg
mov
iret
outs
xchg
in
or
test
add
loopne
(bad)
adc
les
mov
adc
in
bound
add
sbb
mov
inc
adc
mov
xchg
push
hlt
mov
inc
xor
cmp
push
into
sbb
movs
pop
hlt
push
mov
and
addr16
sub
and
dec
ror
cmp
inc
mov
xor
pushaw
jo
lea
cli
sub
mov
push
push
(bad)
ss
enter
je
or
imul
aad
test
inc
(bad)
xchg
add
fld
add
iret
std
bound
iret
inc
out
dec
pop
or
out
test
mov
(bad)
call
mov
inc
cmp
ja
rcr
push
stos
add
mov
mov
popf
jnp
mov
sbb
jo
push
out
xchg
pop
ss
or
inc
sti
inc
retf
mov
sub
pop
cmp
arpl
ins
xchg
and
je
inc
pop
call
mov
push
cmp
jbe
inc
jnp
and
xor
pop
dec
je
or
js
mov
cmp
add
mov
mov
mov
xchg
cmp
push
jnp
sub
push
mov
jmp
xchg
inc
add
dec
jne
std
fsub
pop
mov
add
sub
je
int3
test
xchg
mov
and
(bad)
mov
xchg
jb
add
sbb
or
sar
sbb
xchg
push
jo
push
adc
cli
add
or
pop
jbe
outs
mov
cmp
and
test
test
(bad)
jmp
mov
fidivr
ror
xchg
pop
loope
test
push
(bad)
nop
xchg
or
pop
int
mov
jo
imul
js
xchg
ror
mov
push
mov
pop
mov
mov
or
and
adc
jo
pop
push
inc
lock
push
add
pop
mov
cs
cmp
js
lea
push
cmp
jo
adc
jo
push
js
add
and
call
push
es
fdivr
xchg
shl
inc
xor
sub
pop
or
mov
lahf
shl
and
sar
or
es
lock
call
inc
dec
enter
and
add
pop
add
mov
ss
inc
pop
jmp
inc
sub
sub
xor
ins
xor
fstp
inc
inc
add
xchg
clc
iret
xchg
mov
or
push
push
inc
push
push
inc
dec
test
cli
cmp
or
adc
retf
add
or
arpl
aas
nop
add
add
ja
xchg
dec
out
push
jns
and
cs
cmp
stc
arpl
imul
add
inc
dec
jb
and
arpl
inc
fisubr
and
addr16
dec
outs
fs
call
sub
dec
outs
arpl
push
jne
jo
jb
fdivr
inc
adc
mov
pop
jnp
mov
pop
push
mov
jae
daa
fdivr
inc
xchg
jae
jb
jns
cmp
add
adc
gs
outs
or
ins
sbb
enter
add
cmp
sbb
into
adc
loopne
imul
ja
push
push
imul
add
dec
mov
mov
out
pusha
sbb
or
add
or
outs
in
loopne
adc
push
inc
js
gs
outs
outs
sub
add
xlat
push
jl
clc
cs
inc
gs
cmp
test
inc
imul
in
add
fmul
push
je
addr16
push
or
jno
xchg
inc
pop
inc
inc
push
dec
dec
inc
dec
mov
enter
bound
jo
cmp
or
int3
xor
lock
cmp
loope
lahf
add
ja
mov
test
or
enter
jb
mul
adc
out
sub
xchg
sub
imul
adc
dec
gs
jo
popf
sub
cmp
or
gs
xor
std
sahf
in
ret
jo
out
hlt
(bad)
cmp
ret
jg
adc
outs
sbb
sbb
lock
jb
mov
ret
in
ror
in
jb
jb
call
jb
jb
aam
int3
lods
aad
jb
rcr
cmp
loope
jmp
out
fld
std
inc
xor
push
mov
xchg
sti
cmc
adc
push
aad
in
je
xor
dec
rcr
jmp
test
jbe
stos
(bad)
adc
fld
popf
adc
add
js
loop
js
pop
mov
xor
mov
jmp
(bad)
xchg
mov
pop
xchg
dec
mov
aaa
cld
jg
mov
jl
movzx
mov
add
lea
lock
or
pop
push
add
mov
mov
and
adc
pusha
or
ret
and
test
mov
dec
xchg
mov
fstp
mov
or
push
add
es
inc
inc
dec
jne
in
add
retf
or
out
popa
xor
mov
jno
aam
je
xor
fs
(bad)
sub
ror
dec
cmp
lea
cmp
jne
xor
(bad)
cs
push
pop
pop
test
pop
(bad)
loopne
test
adc
aaa
neg
push
sbb
sub
inc
shl
fstp
xor
fidivr
es
ss
rol
rol
ret
mov
inc
popa
repnz
cmp
dec
std
(bad)
fild
mov
add
sar
or
push
or
rol
cmp
jge
fimul
add
clc
push
iret
fiadd
clc
mov
int
mov
xlat
sub
jne
mov
rcl
test
nop
out
or
inc
xor
push
push
daa
inc
mov
and
adc
dec
clc
dec
jmp
rcl
in
inc
loopne
push
cmp
jg
mov
cdq
loope
or
scas
and
jno
or
mov
dec
test
mov
push
dec
or
or
sub
jg
jmp
mov
xor
sub
push
adc
and
sub
sub
retf
add
sbb
inc
add
js
pop
ins
bsf
shr
add
jns
sub
rcr
xor
pusha
jp
idiv
or
inc
cld
ret
sub
rol
cmp
sbb
add
and
out
mov
inc
adc
(bad)
ins
push
(bad)
xor
in
fnstsw
fwait
sahf
aaa
mov
or
leave
fistp
fld1
fchs
push
fprem
add
fld
rcr
fwait
push
pop
push
push
loop
push
clc
add
adc
(bad)
push
mov
pop
mov
je
enter
je
retf
test
push
pushf
into
sub
movs
ror
mov
test
gs
adc
and
cli
xchg
push
or
xor
jge
add
loopne
jo
pop
cmp
mov
enter
cld
cli
mov
xchg
sub
movs
adc
fmul
or
ret
jmp
adc
sbb
ja
add
cs
popa
test
fisttp
pop
out
add
push
clc
jge
push
mov
sub
sub
jl
std
dec
mov
sbb
outs
ins
gs
outs
dec
ins
jo
push
xor
sbb
inc
mov
mov
cmp
sbb
lock
imul
adc
or
ins
je
mov
sar
or
cmp
cmp
xchg
pop
jecxz
cmovs
inc
rol
and
inc
outs
ins
pop
mov
pusha
popa
jb
daa
push
or
sahf
dec
jb
push
(bad)
mov
mov
push
push
push
gs
shl
pop
add
and
mov
sar
xchg
ror
xor
push
aaa
pop
add
sbb
popf
or
pop
neg
pop
das
add
push
ja
push
fistp
fistp
in
lds
pop
push
or
jnp
ds
mov
(bad)
sets
pop
mov
in
into
push
or
pop
push
rcr
(bad)
fldenv
(bad)
outs
xchg
sbb
inc
cmps
or
or
adc
mov
mov
sti
test
addr16
jnp
pop
push
inc
jno
mov
lock
cmp
popa
jae
or
(bad)
test
pop
popa
loope
and
ja
dec
mov
mov
jns
xchg
fadd
scas
ds
mov
or
in
outs
test
cmps
inc
cs
add
les
mov
sti
add
add
ret
sbb
xchg
clc
jae
or
mov
ret
sub
fcom
push
hlt
push
lock
mov
int3
addr16
outs
jno
sahf
out
sahf
jnp
pop
xchg
fwait
movs
sbb
lds
mov
add
cs
add
ss
faddp
frstor
jo
aam
lock
add
sar
mov
aas
pop
mov
push
push
inc
jne
push
adc
test
test
add
adc
sbb
out
(bad)
pop
js
sbb
push
add
jo
inc
mov
cmp
aaa
lods
nop
or
add
jl
fdivp
xadd
test
test
jecxz
mov
pop
(bad)
pop
(bad)
pop
xchg
mov
out
mov
jo
jbe
ret
sub
xlat
sbb
sub
push
mov
fwait
jae
or
stos
test
pop
ret
movsx
repnz
dec
mov
push
mov
push
ds
fcom
adc
pop
ins
push
jge
xor
add
pop
and
xor
ins
dec
mov
mov
movzx
mov
add
jae
fsubr
or
ja
or
inc
sti
call
jns
out
jb
cmp
sub
mov
in
push
mov
jb
mov
or
add
sub
jb
mov
or
cmp
pop
add
pop
inc
test
das
add
cmp
jne
cmp
cmps
inc
dec
je
adc
dec
add
clc
sbb
cmps
pop
pop
jae
fidivr
xchg
les
cld
jmp
xor
jle
fwait
pop
push
xchg
test
add
sub
(bad)
or
cmp
push
add
mov
add
cmp
pop
jae
sub
add
test
(bad)
sar
or
fcomp
add
ins
adc
dec
mov
xor
and
jl
das
adc
rol
sub
out
fld
fcompp
shr
rcr
fabs
fstp
inc
cmp
(bad)
adc
enter
outs
popf
inc
out
push
loopne
rol
inc
rcr
fdiv
and
sbb
pop
pop
add
xor
aaa
loopne
sbb
fistp
adc
rcr
test
cmps
aas
adc
and
cmps
pusha
ins
jmp
inc
sub
in
push
add
push
push
add
dec
pop
aaa
mov
ins
adc
jbe
xor
sub
je
and
push
sub
out
(bad)
pop
xlat
out
pop
add
ds
mov
nop
push
lahf
out
xchg
sahf
movs
mov
cdq
pop
dec
add
or
mov
or
pusha
mov
mov
push
in
repz
imul
and
jge
add
mov
pop
mov
mov
jle
mov
add
sub
sbb
dec
inc
inc
and
in
ds
jnp
aad
pop
xchg
xchg
int3
lock
add
inc
rol
add
xchg
fcmovbe
outs
dec
je
add
dec
je
jmp
cwde
add
js
or
xor
out
xchg
lock
data16
rol
lds
dec
arpl
add
or
sbb
adc
call
mov
call
xor
jmp
call
add
fcmovnbe
xchg
fwait
mov
mov
mov
outs
and
pusha
lock
sub
test
jge
add
ins
imul
xchg
je
or
shl
outs
loopne
pop
pusha
xchg
cmp
cmp
xchg
adc
push
fcom
cld
ds
push
retf
or
and
mov
inc
aas
push
test
jbe
(bad)
xchg
jg
jnp
int
jl
add
push
cmp
jb
mov
xor
inc
mov
inc
inc
rep
mov
lea
lea
jmp
push
and
adc
stos
int
push
mov
jl
push
mov
add
sub
retf
adc
mov
sbb
jbe
add
mov
lods
and
sbb
(bad)
ret
aaa
xchg
out
shr
sub
inc
cdq
movs
cld
in
and
push
dec
shl
jnp
aaa
(bad)
adc
pop
aaa
cmps
dec
add
and
push
and
and
inc
and
sub
pop
inc
ins
add
pop
pop
fmul
inc
push
lea
aad
lods
add
and
sub
or
or
stos
push
sub
mov
loopne
ins
mov
or
cmps
jl
out
mov
cwde
test
mov
arpl
(bad)
int3
xorps
xor
neg
es
arpl
ja
je
xchg
dec
mov
sub
add
mov
pusha
nop
xor
aas
lock
push
inc
adc
mov
data16
or
sar
or
adc
jne
dec
push
lock
ss
cmc
and
jg
(bad)
jo
sbb
push
neg
and
(bad)
or
add
ja
add
outs
out
int3
test
pop
dec
xchg
and
pop
xchg
push
inc
or
leave
push
add
cmps
scas
dec
xchg
mov
push
mov
jne
push
xchg
jl
mov
ror
lock
inc
cwde
or
div
(bad)
sub
mov
js
sahf
push
rcl
ja
lea
dec
xor
sbb
(bad)
or
sbb
enter
pusha
mov
sub
idiv
mov
sub
xchg
mov
es
repnz
enter
(bad)
cmps
rcpps
jp
jmp
adc
jge
cmp
inc
and
dec
adc
adc
mov
sbb
jmp
sbb
pop
push
mov
lock
mov
outs
or
test
adc
push
and
mov
push
xchg
imul
add
and
imul
shr
loopne
adc
adc
retf
ret
and
add
jae
dec
adc
sbb
jmp
cmps
inc
sbb
cdq
cmp
out
sbb
cmp
mov
push
push
xor
lock
mov
dec
xor
or
inc
cmp
pop
adc
or
push
xchg
push
shl
loopne
imul
lea
lock
and
add
push
je
mov
fucomp
mov
add
fwait
jmp
sub
add
or
adc
pop
sbb
cmp
push
mov
dec
lods
stos
ror
add
dec
dec
mov
add
mov
mov
or
(bad)
frstor
add
pop
dec
das
push
lods
imul
hlt
push
cmp
(bad)
sbb
mov
lds
(bad)
imul
or
fist
retf
sub
test
inc
inc
push
lods
xor
add
push
fld
sbb
and
nop
push
xchg
pop
mov
out
fld
mov
stc
mov
mov
cmps
jne
jmp
repz
in
rol
cmp
jle
cmp
pusha
lahf
add
sbb
add
and
or
aaa
cmps
lods
test
sbb
sub
adc
shl
xchg
mov
adc
pushf
les
and
push
inc
mov
xlat
test
ins
xor
cmp
cmp
mov
mov
mov
cmp
aaa
pop
jo
or
and
add
call
adc
imul
jno
imul
pop
add
je
and
dec
or
outs
fist
push
pop
mov
or
pop
xchg
and
pop
and
or
js
retf
sub
sbb
adc
mov
ja
jp
int3
retf
and
or
out
out
inc
cmp
inc
(bad)
out
pop
addr16
inc
mov
call
pop
in
lea
(bad)
in
psubd
add
add
fiadd
jne
xor
pop
lock
xor
cld
not
add
test
lock
or
lock
mov
add
loopne
in
in
jbe
add
or
pop
xor
es
out
div
out
sbb
div
sbb
sub
sub
pop
sti
fisubr
sbb
jbe
sub
xor
or
cmp
dec
xchg
xor
retf
adc
or
fiadd
or
pusha
ror
xor
push
(bad)
push
inc
adc
aas
jo
and
xchg
shrd
shl
out
call
inc
lahf
out
sahf
push
push
add
adc
inc
ds
and
cmp
add
and
add
pop
xor
pop
jb
add
adc
shr
ins
jno
adc
aaa
sbb
mov
inc
test
fld
add
jl
fcos
(bad)
loop
mov
mov
jg
shl
add
pop
add
mul
inc
add
dec
sbb
int
dec
sub
push
xchg
pop
xchg
pop
sub
and
mov
pop
or
(bad)
retf
mov
ja
(bad)
repz
jecxz
adc
push
mov
cmp
xchg
lea
sahf
out
pusha
push
dec
cmp
ins
or
xlat
rcl
sbb
pop
rcl
mov
add
adc
xor
jo
mov
and
adc
fs
mov
pop
in
mov
jbe
pop
adc
jbe
daa
les
pop
push
cmp
cwde
pop
pop
push
mov
cvtps2pd
and
out
out
adc
(bad)
sub
adc
sub
lods
ins
mul
adc
cmps
adc
sbb
ss
and
imul
xor
je
imul
mov
shr
push
(bad)
data16
aaa
push
shl
je
or
ret
add
inc
pop
dec
pop
adc
push
inc
outs
ins
ins
gs
adc
in
dec
outs
or
arpl
scas
fst
arpl
fs
push
shr
fwait
mul
outs
jbe
or
je
popa
outs
push
sbb
mov
xor
cmp
push
cmps
or
or
ja
dec
gs
adc
push
jae
or
int3
adc
fstp
jns
dec
jae
imul
add
add
repz
xchg
sbb
mov
and
stos
inc
cwde
test
push
push
(bad)
push
add
adc
and
pop
imul
iret
pop
sub
sbb
or
xor
pop
pop
test
cmovb
aas
lds
mov
jb
pop
push
add
mov
dec
enter
add
pop
jmp
push
mov
outs
outs
clc
mov
jne
ins
mov
gs
pop
add
mov
sbb
cmp
or
inc
shl
add
mov
jo
push
or
sti
cmp
cs
add
push
fdiv
xor
add
inc
pop
mov
je
mov
sbb
or
sub
dec
inc
inc
jae
inc
jns
es
push
adc
fs
dec
aam
popf
outs
push
movs
es
es
bound
pusha
dec
mov
push
inc
ins
popa
jae
fs
fsubr
and
cmp
sti
pop
daa
leave
mov
push
add
aaa
sub
sub
inc
outs
jmp
hlt
add
sub
and
or
and
sbb
shl
cmp
outs
bound
xchg
imul
or
sbb
std
and
outs
enter
shl
push
outs
dec
cli
test
xchg
jb
and
pushw
pop
ins
dec
jno
mov
sbb
clc
ins
inc
cs
cmp
sub
outs
jo
dec
xchg
sbb
imul
sub
arpl
jl
popf
out
inc
scas
dec
cwde
lds
inc
or
les
fsubr
dec
or
dec
sub
scas
pop
test
adc
add
or
pop
(bad)
out
push
or
inc
xchg
sahf
jbe
dec
or
mov
inc
aam
jno
pop
ins
and
imul
mov
mov
test
xor
inc
outs
sbb
fiadd
std
push
inc
jno
mov
pop
hlt
jo
jo
jns
or
xlat
dec
push
xor
or
lock
cmc
out
dec
push
fidiv
cmp
push
mov
cmps
movs
or
data16
arpl
inc
xchg
gs
data16
and
push
mov
stos
mov
sub
mov
sub
and
push
popa
add
call
xor
or
xor
fsub
inc
mov
or
mov
ds
xor
push
xchg
dec
js
inc
js
push
or
inc
cwde
out
test
out
xchg
sub
xor
mov
cmps
cli
dec
gs
ins
std
das
sbb
inc
outs
outs
dec
mov
jo
rcr
xchg
xor
adc
pop
pushf
inc
mov
out
loopne
mov
jmp
popaw
dec
retf
cmp
gs
xchg
and
push
call
jl
rol
sbb
push
arpl
cmp
jp
mov
jnp
sub
aam
push
jo
sub
push
push
xor
inc
in
ins
fadd
xor
sub
mul
push
push
add
push
adc
or
popa
imul
test
rol
ins
inc
mov
mul
pop
add
lds
push
rcl
cmp
jg
les
push
adc
jo
jge
outs
jne
inc
xor
pop
lock
or
popa
ja
int3
nop
cmp
push
dec
cmp
iret
enter
stc
arpl
adc
jae
pop
mov
pop
inc
dec
mov
sub
mov
push
or
mov
sub
ins
pop
pop
je
cwde
and
xchg
adc
daa
push
push
cwde
push
inc
and
enter
add
xlat
add
pushw
inc
and
add
pop
sub
adc
pop
inc
dec
shl
push
pop
mov
inc
xchg
icebp
xchg
imul
jp
loopne
mov
int
ss
popa
outs
sbb
and
xchg
pusha
jbe
push
dec
push
xchg
cmp
je
out
adc
cmps
lods
jo
sub
bound
gs
jo
js
add
jbe
pop
push
add
add
leave
daa
cdq
pop
inc
add
adc
or
xor
cmp
cmp
or
test
les
stos
mov
inc
sub
add
add
pop
jecxz
ret
add
and
and
fist
and
xor
lahf
push
loopne
ret
fsub
add
stos
ins
enter
or
and
ss
(bad)
adc
sbb
cmp
sbb
pop
shl
jecxz
(bad)
scas
adc
pop
pop
sbb
scas
xor
mov
inc
aas
jns
popa
hlt
fs
dec
popa
xor
sub
inc
bound
lods
sar
mov
(bad)
jge
add
inc
push
add
mov
lods
es
in
pop
and
jo
scas
pop
addr16
scas
neg
push
adc
pop
clc
push
mov
or
rcr
cwde
pop
push
test
mov
int3
data16
stos
push
ins
pusha
es
hlt
push
or
push
add
call
idiv
xchg
psrld
daa
jmp
pop
pop
bswap
xchg
mov
or
scas
or
repz
pop
test
or
sub
add
scas
loop
verr
out
inc
pop
push
lock
jg
adc
adc
lds
mov
or
jmp
ror
push
dec
xlat
cmp
jb
popw
xchg
xor
or
and
cmp
sub
pop
push
cwde
addr16
xchg
dec
push
add
push
cwde
push
jb
dec
popa
cwde
sbb
aas
cwde
ret
add
sti
adc
fwait
mov
sbb
addr16
mov
push
push
jno
mov
(bad)
ror
shr
fldcw
xor
mov
jno
or
aaa
not
xchg
dec
dec
sub
dec
loopne
add
mov
add
jae
push
adc
mov
and
jo
push
push
or
ror
pop
test
lahf
mov
jg
rcl
mov
pop
aaa
mov
sbb
xchg
cmps
pop
movs
in
pop
ffree
push
mov
jno
add
daa
sbb
cdq
cmp
scas
rcr
mov
sub
pusha
sbb
sbb
test
mov
sub
cmp
ss
push
add
xchg
jo
mov
ret
or
rol
push
mov
sub
or
xor
nop
imul
sub
cmp
xor
dec
mov
test
adc
inc
mov
dec
outs
pop
fs
jge
mov
lea
jae
xchg
mov
mov
inc
add
ins
nop
adc
xlat
inc
inc
fisub
dec
xchg
lods
jo
sbb
nop
adc
aam
mov
push
mov
add
and
ret
sbb
rol
add
fisubr
retf
or
xchg
ds
lds
ret
pop
inc
test
mov
pop
push
ins
bound
fs
test
sbb
pop
pop
or
fldcw
or
and
adc
fiadd
sar
sar
bound
fld
mov
mov
jo
hlt
das
cli
push
inc
fild
add
dec
movs
add
and
arpl
add
lock
xor
add
sbb
mov
mov
mov
ja
add
das
fimul
out
sbb
pusha
cmp
cwde
and
out
mov
push
test
and
adc
jle
jmp
inc
fsubr
out
js
mul
add
xchg
pop
test
xor
(bad)
jmp
adc
in
pop
gs
push
xor
addr16
mov
stos
out
out
push
or
mov
mov
dec
add
sbb
daa
xchg
or
adc
cmps
pop
movs
sub
mov
shl
out
call
mov
rcr
lock
sbb
sub
dec
data16
mov
fsubr
nop
setbe
add
sub
pop
aad
dec
sbb
cmp
jmp
ucomiss
add
add
inc
or
nop
jnp
sbb
lods
add
hlt
fsub
hlt
das
mov
push
and
push
ins
mov
js
mov
inc
cmp
in
push
inc
callw
add
jae
and
lods
xor
pop
femms
add
cs
adc
and
add
in
(bad)
cmp
mov
cwde
hlt
jo
jno
adc
outs
sbb
lea
jno
rol
sbb
push
xor
adc
inc
sub
in
std
sbb
and
jne
or
add
mov
push
cmp
jae
inc
and
sysret
lods
js
inc
mov
call
out
wbinvd
push
loope
or
ins
and
or
lods
mov
(bad)
add
mov
mov
nop
or
add
test
in
fst
int3
add
cli
popa
push
add
push
mov
sbb
ror
xchg
dec
out
cmp
bound
popf
shl
dec
push
ficom
daa
mov
iret
or
pop
lods
das
mov
push
iret
cmp
push
movs
stos
iret
iret
je
push
ds
jnp
iret
test
rol
call
cmp
push
cwde
out
ds
out
fidiv
inc
sbb
cdq
jmp
jne
sti
scas
add
rcr
cmp
xchg
ret
fld
out
fiadd
xchg
inc
inc
in
ins
arpl
cmp
xor
and
mov
popa
adc
mov
rol
aam
cld
mov
dec
and
sbb
into
in
rcr
jl
mov
inc
mov
and
vpmacsdd
push
cmp
pop
mov
nop
lods
xchg
int3
imul
cmp
xchg
push
pop
lea
or
lahf
cld
imul
inc
or
dec
sub
cmps
add
mov
mov
fist
push
call
popa
je
push
jge
add
push
or
xor
addr16
hlt
adc
or
inc
jns
jp
adc
sbb
dec
gs
int3
or
sub
out
add
clc
xchg
sbb
xlat
iret
or
fsubr
(bad)
adc
xchg
add
and
stos
and
ss
xchg
sub
js
push
loop
adc
loopne
pop
loope
add
push
fiadd
add
xor
sub
out
xchg
mov
outs
adc
rol
and
or
jae
xor
xchg
or
or
push
cmp
icebp
stos
add
js
adc
cmp
rol
fidivr
inc
gs
add
in
sub
jle
jge
cld
sub
cld
push
xchg
inc
push
xor
sbb
jbe
adc
pop
and
and
and
pop
and
ds
out
cdq
fbld
push
jge
add
lock
in
pop
fnstenv
inc
lea
adc
add
and
jb
inc
adc
sbb
xchg
sub
imul
dec
cmp
stos
js
and
or
xor
(bad)
push
xor
dec
jbe
inc
push
push
xor
cmp
xchg
xor
imul
add
mov
cmp
mov
add
and
pop
and
ins
je
xor
popa
je
sbb
ins
push
repnz
pop
push
or
mov
or
data16
jmp
lock
outs
adc
xlat
mov
dec
outs
arpl
add
pop
add
and
adc
cmp
lock
or
jns
jae
mov
jmp
sub
data16
dec
or
inc
inc
add
inc
clc
into
add
test
stc
mov
pop
inc
sub
arpl
nop
push
pop
jo
rol
sbb
in
jo
pop
ror
ja
popa
cdq
jnp
and
dec
stos
inc
inc
mov
shr
lahf
or
data16
mov
pop
lock
imul
push
ror
mov
and
(bad)
push
jl
xor
add
cmp
xchg
js
iret
shr
aas
mov
adc
je
outs
jo
pusha
add
sbb
push
dec
inc
add
jae
ret
cdq
clc
nop
mov
sbb
or
inc
jne
xlat
or
fmulp
int3
jmp
mov
(bad)
sub
gs
imul
push
loop
jae
scas
rol
gs
sub
call
jbe
test
ss
xor
push
add
inc
and
cmp
jecxz
jbe
imul
add
cmp
xchg
add
fadd
add
inc
(bad)
loope
sar
or
lea
mov
pop
add
xor
jp
ins
add
inc
jo
push
shr
dec
add
cwde
adc
or
xchg
add
rcr
aam
je
icebp
or
repz
aas
mov
jmp
jp
cs
inc
not
cwde
pop
xchg
test
mov
pop
xchg
jle
push
adc
push
mov
ret
or
sbb
jecxz
inc
iret
rol
enter
add
ret
add
push
ins
jb
pop
enter
ins
mov
or
ret
sbb
jns
(bad)
out
push
out
adc
xchg
add
sbb
sbb
pop
ins
pop
fs
gs
add
push
aad
pop
adc
popf
dec
shr
inc
loope
inc
test
popa
ror
mov
loopne
inc
and
test
mov
stos
das
jmp
fs
cmp
iret
scas
mov
sbb
jg
sbb
jns
ja
push
xchg
sbb
push
and
push
mov
push
add
add
sub
ss
sbb
movsx
fucom
jl
mov
push
mov
push
cmp
sub
inc
push
sbb
or
mov
or
xchg
or
inc
stc
push
out
in
jmp
sbb
sbb
mov
sub
sub
ret
adc
std
add
xor
dec
ror
lahf
or
or
shl
and
ror
inc
or
outs
sbb
movs
inc
sub
xor
push
cmp
pcmpgtw
mov
mov
push
loope
(bad)
data16
mov
ror
pop
push
inc
jae
or
inc
(bad)
jmp
inc
cmp
inc
inc
bound
rol
inc
stos
jmp
fs
sbb
fidivr
push
test
dec
in
inc
add
mov
stos
dec
es
enter
lods
inc
por
dec
adc
fcomp
cmp
fisubr
ror
sahf
aam
push
addr16
or
ins
mov
dec
jb
inc
dec
jmp
pushf
pop
jbe
jle
movs
mov
push
or
mov
lock
fs
lods
push
push
or
mov
test
add
add
add
jo
cmps
das
lds
push
jp
sbb
pop
inc
dec
out
sub
add
es
call
dec
test
mov
(bad)
and
les
inc
add
ror
add
ror
je
mov
sub
into
xor
mov
jne
mov
add
pop
sub
mov
(bad)
or
(bad)
xor
cmp
mov
les
addr16
pop
mov
xchg
fldenv
sbb
ins
and
inc
or
mov
pop
mov
mov
sbb
add
test
xchg
(bad)
les
mov
inc
ret
(bad)
sub
mov
int3
dec
dec
xor
mov
movs
or
or
mov
fwait
or
inc
or
cmp
sub
inc
aaa
les
movs
loopne
fst
out
mov
(bad)
push
xor
mul
inc
xlat
lock
mov
fcom
or
jnp
xlat
clc
mov
shl
nop
push
push
or
mov
sbb
popf
pop
adc
sub
add
inc
push
inc
aaa
outs
xchg
jae
mov
and
jno
hlt
or
pop
jne
xor
pop
mov
xchg
sbb
jno
pop
hlt
mov
retf
ror
mov
pop
pop
push
sbb
and
in
inc
inc
cwde
xor
fmul
or
dec
daa
push
(bad)
jmp
ds
icebp
and
pushf
out
dec
data16
xor
loope
retf
inc
pop
inc
adc
mov
rol
scas
mov
add
mov
add
or
lods
cmp
lds
mov
inc
movs
pop
mov
sbb
mov
push
sbb
adc
and
mov
bound
adc
test
lea
sbb
iret
xchg
outs
sahf
add
nop
xchg
xlat
sub
adc
mov
and
bound
xor
jge
adc
or
add
sbb
sbb
inc
jl
shl
mov
inc
in
adc
pop
sub
xor
jno
pop
cwde
popf
or
pusha
ds
fiadd
pop
push
ins
je
mov
push
push
outs
dec
add
push
fmul
xlat
popf
out
ds
test
sub
sub
add
sub
or
pop
dec
cmps
or
sbb
xor
retf
pop
push
ja
dec
es
or
lock
outs
adc
mov
pushf
int
adc
movs
pop
(bad)
sti
cwde
push
push
call
ret
add
jle
loopne
(bad)
jno
dec
inc
dec
mov
pop
or
cmp
mov
inc
pop
js
sbb
push
pop
je
mov
jp
add
inc
data16
imul
mov
mov
inc
test
push
pop
punpckhdq
and
cwde
inc
and
pop
cdq
pop
jnp
(bad)
sbb
jbe
push
adc
ret
adc
sbb
sub
loope
or
sub
stos
cmps
sub
lds
out
or
mov
inc
xor
sar
mov
dec
or
pop
ret
lock
cmp
or
inc
popa
js
fsubr
mov
pop
ror
(bad)
xor
mov
jb
xchg
ret
out
call
or
or
das
dec
aaa
or
sbb
ds
sub
dec
or
push
xchg
dec
cmp
add
inc
adc
imul
(bad)
mov
push
push
loope
jmp
xor
dec
push
clc
add
cmp
add
and
sbb
stos
clc
arpl
addr16
loope
enter
inc
retf
push
add
and
in
push
adc
loope
mov
sub
inc
aam
push
cmp
inc
ficomp
add
sub
add
pusha
sar
or
or
rcl
xchg
mov
or
iret
and
mov
iret
mov
xor
aas
(bad)
lods
jns
shl
fs
outs
ret
jne
inc
dec
cwde
repnz
add
mov
push
movs
add
mov
pop
and
lea
sbb
mov
push
pop
das
jp
leave
loope
hlt
lahf
jo
lahf
test
jo
nop
push
lock
add
xchg
pusha
movs
or
push
cmp
cmovno
shl
cmp
push
push
push
adc
push
or
adc
sub
sbb
sbb
movs
fisttp
mov
xor
sbb
repz
pop
ret
mov
push
cld
loopne
xor
fsub
lods
aas
add
push
pop
adc
sub
push
mov
stos
mov
or
push
fdivr
pop
js
js
push
sub
mov
mov
mov
gs
loope
dec
or
sub
ror
gs
xchg
cmp
or
(bad)
loope
or
inc
fcomip
pop
and
imul
push
cmp
pop
mov
push
inc
lahf
pusha
adc
in
sar
push
dec
rol
scas
add
sbb
dec
das
sub
popf
sub
outs
test
and
adc
(bad)
mov
aad
push
fwait
push
mov
cmp
hlt
das
add
adc
cmps
xchg
mov
cli
pop
cmp
and
fcom
jbe
loopne
lods
adc
inc
outs
jne
gs
inc
push
sub
cdq
and
jo
sbb
mov
add
dec
mov
cmps
pop
sub
mov
popf
shl
push
xor
cmp
push
fmul
sbb
add
ins
jns
adc
outs
mov
pop
push
sbb
pop
and
cmp
iret
pop
cmovne
add
adc
lods
rol
not
and
mov
lahf
xor
fsub
daa
adc
daa
push
mov
popf
or
cmc
(bad)
jo
or
add
(bad)
jge
sbb
cmp
outs
outs
adc
or
inc
enter
mov
ret
shl
out
dec
pop
cmp
mov
in
pop
ror
je
xchg
test
push
(bad)
mov
shl
inc
dec
sbb
push
inc
pop
push
add
inc
jo
xchg
and
scas
push
in
pop
imul
pop
xlat
loope
iret
pop
call
push
out
ds
xor
icebp
xor
das
adc
mov
sbb
aaa
push
pop
xor
test
call
dec
mov
dec
add
fcmovnbe
call
addr16
rcr
(bad)
mov
pop
or
push
outs
xchg
xor
es
mov
clc
add
inc
ins
outs
inc
push
fwait
add
scas
dec
shl
outs
sub
adc
pop
xchg
sbb
mov
ror
int
pop
xor
inc
jl
pop
and
inc
ret
mov
lock
and
cmp
push
movs
hlt
(bad)
aas
inc
jb
popa
dec
cmp
jl
or
push
and
push
je
rol
sbb
push
js
add
in
sbb
pusha
xchg
inc
iret
scas
popf
adc
pop
repz
add
or
add
(bad)
in
push
xor
sti
sahf
mov
sub
(bad)
sub
mov
(bad)
sbb
fst
add
lods
mov
icebp
fld
sub
or
pop
or
das
repnz
xchg
mov
clc
xchg
adc
inc
popa
ins
imul
adc
or
mov
pop
push
or
rcr
fs
lock
dec
mov
push
or
xchg
dec
inc
out
outs
push
push
dec
inc
jne
outs
push
popa
jb
add
dec
in
sahf
inc
push
sub
xor
popa
addr16
pop
mov
xsave
push
or
push
mov
or
xchg
sbb
fchs
sbb
cmp
popa
clc
xor
jo
mov
add
sbb
js
mov
bound
movs
sub
nop
pusha
aaa
add
mov
cmp
add
sbb
add
cmps
loope
jo
jb
and
sbb
mov
pop
push
pop
jb
test
push
shld
bound
jo
pop
inc
imul
mov
inc
shl
adc
push
cld
rcl
adc
loopne
inc
inc
es
add
push
call
push
retf
icebp
ja
popf
syscall
add
mov
popa
mov
mov
pusha
pop
mov
jns
mov
ins
cmp
sti
sbb
fs
add
mov
sahf
sub
rcl
inc
sub
pop
mov
shl
ss
mov
and
add
jne
imul
inc
or
out
inc
adc
test
inc
in
shl
inc
push
fimul
mov
jo
fdivr
push
aad
jnp
sbb
popf
rcr
(bad)
push
das
or
sub
mul
jle
adc
xchg
sbb
push
lds
cmp
add
dec
cli
inc
ret
inc
js
sub
daa
cwde
out
or
add
ins
in
shl
dec
and
xor
sbb
sbb
pop
or
or
adc
icebp
pop
pop
out
lds
out
fisttp
inc
and
outs
or
xor
dec
aas
mov
dec
bound
inc
test
iret
sub
movs
pop
sub
ret
mov
(bad)
ja
xchg
or
sub
mov
lahf
add
mov
pop
push
popa
jecxz
mov
inc
jne
outs
ins
sub
cmp
add
fld
push
adc
rol
dec
sub
arpl
ret
jmp
int3
mov
or
mov
jae
fdivr
push
inc
stc
scas
or
inc
lock
aam
xchg
into
gs
push
adc
inc
or
lds
lods
sub
push
hlt
sbb
retf
mov
lea
adc
dec
into
adc
xchg
push
or
mov
inc
adc
or
ror
ss
jl
sub
xor
not
add
jns
mov
add
jle
sub
enter
movs
push
cmc
cmps
sub
push
js
mov
cmp
adc
or
fnstenv
pop
shr
push
mov
add
pop
(bad)
sub
out
pop
cmps
mov
xor
jb
ins
pop
adc
adc
jbe
loopne
xlat
gs
or
push
test
pop
stos
add
rcr
jg
int
pop
aad
inc
cmp
sbb
outs
mov
lods
pop
sub
jae
add
pop
mov
pop
mov
or
add
pop
es
xor
fcmove
sbb
push
lds
(bad)
pop
sub
inc
push
iret
ret
or
and
cmp
push
test
sbb
out
mov
and
leave
sbb
mov
ja
jge
or
push
dec
int3
icebp
rcl
sub
aaa
pop
xor
inc
cmp
pop
push
outs
cdq
dec
or
add
push
ror
pop
mov
scas
lea
scas
sbb
adc
push
dec
imul
adc
jmp
adc
out
ss
xor
cwde
imul
adc
jo
jl
xchg
jne
je
pop
ins
sbb
push
adc
or
inc
aad
mov
adc
mov
movs
cs
mov
imul
jno
dec
adc
ds
pop
pop
push
push
add
push
pop
pop
cmp
or
add
addr16
or
fcmovnu
cmp
inc
push
scas
sbb
push
push
outs
pop
mov
lds
mov
mov
stc
mov
adc
movsx
(bad)
xor
mov
test
addr16
xchg
jge
in
adc
add
sbb
sbb
fcmovu
(bad)
ficom
jmp
push
ins
(bad)
adc
dec
hlt
and
popf
pushf
push
out
pop
mov
(bad)
fiadd
mov
jmp
lea
loop
push
add
cwde
jp
pusha
or
retf
xor
inc
pop
scas
push
stos
inc
mov
in
mov
cld
dec
dec
ror
sub
add
stos
mov
xchg
jo
cmp
dec
push
inc
xor
jns
add
icebp
xchg
inc
mov
pop
lock
mov
inc
and
add
push
cwde
adc
sub
mov
adc
mov
jo
inc
cmp
push
into
pop
cmp
inc
loope
inc
add
fsubr
fadd
hlt
jmp
lock
jnp
add
adc
push
or
ins
push
pop
sbb
or
inc
sub
fst
xor
sub
mov
dec
call
cmp
inc
pop
sub
inc
pop
jmp
cmp
push
jb
outs
adc
rcr
in
cmp
add
push
cwde
int3
test
jae
add
cmp
and
div
dec
push
in
push
push
les
push
sbb
adc
mov
cli
leave
mov
es
call
mov
out
std
loopne
pop
xchg
in
cli
cmp
js
jnp
pop
mov
shr
dec
mov
mov
or
or
add
daa
mov
push
test
adc
cmovge
test
push
dec
movs
out
jb
jecxz
push
inc
cs
pusha
sets
sbb
aam
ja
sahf
pushf
mov
in
cmp
xchg
dec
inc
sahf
pushf
enter
xchg
daa
and
aad
jp
mov
in
sbb
inc
enter
addr16
aam
jl
leave
leave
leave
pop
and
es
shrd
pop
or
push
dec
cmp
xor
xchg
xchg
imul
rcl
cmp
dec
jmp
sub
aad
add
add
push
xchg
cmps
xor
mov
shr
xor
xor
scas
add
(bad)
pop
pushf
retf
add
addr16
dec
test
inc
push
popa
jg
cmps
pop
or
xchg
sub
call
push
rcl
and
sub
jmp
xchg
jmp
sbb
sub
dec
test
push
or
mov
add
add
mov
ja
les
dec
lea
add
add
push
loopne
dec
out
lods
pop
sub
add
rcl
add
and
das
leave
call
gs
mov
call
mov
pop
push
leave
sbb
or
lds
push
sbb
dec
add
add
or
mov
rcl
pop
jno
mov
ror
imul
add
dec
mov
inc
in
push
add
je
or
push
inc
ret
jmp
inc
and
xlat
das
sbb
push
jo
cmp
push
ja
dec
icebp
dec
lahf
pop
cmp
sbb
aas
add
add
loop
scas
mov
dec
mov
pusha
repz
or
sar
rcr
(bad)
fsub
movs
sbb
xchg
xor
fs
or
ja
or
pop
clc
xor
lock
pushf
inc
pop
jae
dec
pop
mov
jg
pusha
pop
mov
out
dec
popa
pop
and
lahf
sbb
inc
mov
jge
lds
add
push
es
xor
cmp
add
imul
stos
ss
loope
popw
jp
xor
loope
cs
cmp
mov
addr16
pop
les
fistp
shr
sbb
fistp
adc
xor
mov
sub
sub
dec
enter
sbb
add
dec
or
dec
movs
add
adc
and
stos
jb
mov
nop
pusha
and
add
dec
test
mov
imul
pop
or
mov
pusha
dec
mov
add
push
mov
adc
pop
jne
imul
pop
scas
inc
pop
shl
in
add
mov
adc
test
sbb
mov
scas
leave
pop
pop
add
pop
inc
or
test
sub
sub
clc
mov
mov
adc
mov
jmp
je
and
inc
mov
xor
and
mov
ret
inc
or
mov
outs
add
out
jb
sub
ror
sbb
pop
mov
(bad)
es
inc
rcr
data16
gs
aaa
in
xchg
fmul
inc
and
push
add
lea
xchg
xchg
sub
mov
ds
adc
add
repnz
and
jecxz
pop
add
cmp
ffree
movs
aam
jae
outs
add
addr16
dec
(bad)
out
or
inc
jnp
adc
adc
mov
or
movs
repz
stos
adc
mov
int
sbb
push
shl
pop
push
out
inc
jmp
ss
fiadd
dec
mov
adc
jmp
xor
or
or
lahf
pop
in
push
jmp
stos
pop
cmps
xchg
add
add
js
jecxz
add
test
inc
push
fsubr
das
ss
pop
je
jo
and
mov
xor
push
pop
shr
xchg
push
fistp
cmp
daa
in
loopne
shr
add
mov
sub
mov
xor
loopne
sbb
rcl
jo
inc
sub
mov
fbld
das
fnstsw
in
out
add
push
inc
inc
xor
push
sbb
mov
pop
scas
neg
or
push
pop
push
jmp
(bad)
mov
test
pop
pop
and
cmp
sub
cmps
sti
aas
out
add
test
and
jno
je
sbb
std
scas
add
mov
fdiv
and
ror
lds
jg
and
and
inc
rcl
push
xchg
pop
dec
mov
add
add
das
pop
ret
stos
adc
xor
or
mov
mov
adc
inc
jns
jns
cmp
dec
dec
push
push
out
pop
adc
mov
std
pusha
idiv
fdiv
add
ins
jbe
mov
loopne
out
push
(bad)
out
loop
sub
loopne
xchg
sbb
push
sub
jl
inc
xor
and
pop
xchg
add
test
adc
mov
push
sbb
in
rcr
or
sub
mov
out
push
mov
fadd
ins
push
addr16
loope
outs
or
inc
loope
(bad)
push
add
sub
xchg
mov
scas
xor
xchg
inc
out
pusha
add
dec
inc
sub
mov
xchg
pop
das
inc
loope
or
das
mov
adc
cmp
add
neg
jo
push
jl
lods
das
ret
push
or
xor
add
das
cmp
ss
or
cwde
push
add
test
or
repz
sub
and
push
mov
outs
inc
push
test
inc
jae
add
or
cmp
sbb
shl
push
jno
(bad)
aad
dec
adc
add
or
inc
inc
or
call
stos
or
cmp
jg
pop
mov
sub
jmp
add
mov
mov
lea
fld
ins
es
das
mov
into
lods
jne
inc
jno
fild
mov
push
mov
stc
fbstp
inc
and
lods
add
fmul
xor
iret
pop
push
xchg
or
mov
xchg
push
fist
stos
mov
shl
or
fldl2t
sub
xchg
or
nop
mov
inc
sbb
inc
or
mov
test
fistp
ror
pop
adc
pop
jmp
inc
push
adc
cmp
aam
loop
adc
add
pop
ja
cmps
cmp
push
adc
add
adc
aaa
mov
push
add
movs
retf
push
fadd
stos
fld
(bad)
adc
sbb
add
mov
nop
jg
pop
adc
loope
xchg
jg
or
jmp
std
push
xchg
je
out
push
jle
(bad)
stos
push
std
add
push
stc
rcl
ja
mov
mov
dec
cdq
shl
cmps
leave
cmp
add
mov
add
or
sub
pop
xchg
jo
clc
cmp
mov
test
fisttp
ss
aaa
and
dec
xchg
or
xor
mov
and
fld
push
or
push
stc
inc
loopne
add
aaa
push
movs
and
inc
add
retf
push
and
adc
sbb
pop
pop
push
push
sub
sbb
in
xchg
sub
imul
inc
test
xchg
push
mov
jno
mov
push
ds
lds
sbb
movs
adc
push
sbb
sbb
push
xlat
loop
xlat
push
push
xlat
or
imul
xchg
mov
mov
out
push
push
adc
lods
push
mov
loope
sub
test
push
test
push
adc
mov
sbb
or
adc
sbb
dec
lods
push
mov
test
push
mov
in
sti
push
adc
push
dec
jno
xlat
mov
pop
push
add
jne
push
pop
aas
or
push
cmps
push
xor
aaa
inc
sbb
or
scas
xor
inc
sbb
xor
shl
je
jns
stos
add
adc
fstp
loope
add
sbb
popa
aaa
shl
jno
sbb
faddp
push
mov
sub
test
fistp
imul
push
push
mov
push
pop
sub
loopne
daa
add
icebp
jl
mov
jmp
add
push
mov
mov
xchg
outs
hlt
push
add
inc
jb
pop
ret
imul
push
push
fs
pop
sbb
mov
inc
dec
outs
les
cs
xchg
mov
lods
xor
dec
xor
mov
jne
and
adc
loope
mov
test
inc
push
loopne
lods
xchg
bswap
sbb
fmul
mov
in
fs
fwait
(bad)
jl
jb
repnz
adc
jae
jbe
jo
push
popa
push
bound
loop
cmp
enter
and
sbb
stos
and
out
add
dec
aaa
lock
jno
dec
add
lea
push
sub
loope
sub
mov
test
clc
and
mov
add
jae
daa
pusha
mov
fwait
ret
sar
mov
retf
push
add
loope
mov
add
jno
sub
enter
rol
push
mov
fldcw
jp
ins
loopne
mov
mov
push
ror
bound
mov
and
test
add
mov
mov
cmp
in
bound
push
cmp
pusha
inc
repz
or
mov
add
pop
loope
jae
dec
inc
mov
js
or
or
add
pop
call
jae
pop
in
add
shl
outs
or
and
adc
pop
out
or
pop
adc
sti
sub
test
pop
mov
loope
les
popf
es
(bad)
push
or
loopne
xor
jl
pop
or
ret
cmp
out
sbb
add
pop
or
mov
adc
and
or
lock
cmp
and
add
jae
cmp
push
loopne
push
stc
jae
bound
stc
inc
inc
or
dec
test
adc
add
es
and
or
mov
sbb
push
in
test
jnp
and
loope
add
and
mul
popa
addr16
arpl
call
dec
inc
ds
outs
inc
adc
mov
pop
adc
add
fsubr
cmp
push
push
mov
mov
mov
or
enter
adc
inc
dec
popa
scas
mov
pop
mov
daa
fcom
repnz
repnz
push
dec
mov
jmp
adc
push
push
mov
pop
dec
mov
jo
mov
jmp
stos
daa
or
lds
(bad)
dec
aas
push
pusha
sub
(bad)
dec
ret
(bad)
push
ins
clc
mov
xor
xor
cwde
push
push
gs
jg
push
cdq
add
fcmovnu
bound
and
(bad)
or
mov
shl
pop
pop
imul
jmp
scas
or
xchg
inc
xchg
push
mov
or
add
mov
mov
jnp
sbb
fmul
cmpxchg
test
jne
imul
fidivr
ret
mov
cmp
ins
xor
je
add
and
sub
fidiv
push
movups
fs
mov
ja
(bad)
out
push
push
push
and
adc
ja
test
je
push
and
sbb
jnp
jg
add
test
add
cld
and
mov
scas
and
clc
cmp
pop
ret
lea
mov
mov
push
push
mov
nop
out
add
xchg
fs
xor
cmp
fadd
dec
add
mov
popa
fucomip
lock
dec
mov
lahf
push
push
push
mov
in
lahf
in
and
push
test
sbb
call
popa
push
(bad)
in
(bad)
push
push
push
mov
xor
pop
fistp
sub
cld
add
clc
push
mov
lock
add
add
mov
xchg
rcr
rol
sbb
mov
or
imul
and
test
xchg
int3
jle
jmp
cwde
pusha
enter
add
add
adc
adc
jns
jnp
int3
pop
mov
icebp
iret
in
sbb
adc
sbb
pop
out
movs
movs
out
add
les
sbb
jns
jns
add
cld
jmp
inc
xlat
push
pop
call
jno
xchg
or
lock
sbb
mov
or
ins
imul
push
cmps
dec
mov
mov
adc
xchg
push
lea
leave
vorps
pop
ins
lds
movs
and
xor
adc
daa
dec
mov
jno
pop
sar
push
daa
cmp
fld
push
in
movzx
outs
adc
inc
push
jg
adc
test
jno
dec
jne
fist
adc
es
mov
add
je
xchg
enter
call
sbb
lea
mov
mov
mov
jbe
push
adc
mov
and
jae
jne
mov
mov
mov
mov
inc
pop
(bad)
mov
fst
add
push
cld
jnp
xchg
or
dec
ret
and
push
cmp
das
es
enter
daa
fld
add
jle
push
dec
imul
mov
and
add
pop
add
or
outs
push
mov
or
pop
ret
ret
fisub
push
mov
mov
or
or
(bad)
adc
movzx
clc
push
or
adc
lods
mov
jmp
les
add
add
jns
mov
jmp
ror
mov
rol
jmp
pop
mov
mov
or
pop
xchg
test
sub
fsubr
clc
adc
xor
(bad)
loop
cmps
lods
pop
test
jbe
pop
cmps
mov
daa
clc
push
push
pop
adc
pop
push
jne
in
jns
cmp
or
pop
jo
dec
sub
xor
xor
aas
out
add
push
or
mov
xor
or
cs
xor
popa
inc
add
ds
out
sahf
neg
in
or
mov
sub
mov
pop
out
cld
cld
out
fadd
mov
sbb
out
jnp
xchg
scas
sti
add
ja
scas
test
pop
xchg
or
mov
and
push
cmps
retf
push
ror
outs
xor
push
add
or
lods
mov
test
and
and
push
add
ss
jmp
pop
sbb
pop
push
push
sub
je
sub
add
sti
pop
je
dec
mov
fimul
cmp
push
sub
or
jae
test
mov
mov
ja
inc
sub
mov
cs
sbb
adc
imul
xchg
adc
not
ret
ret
dec
jne
push
xchg
cmps
pop
mov
inc
push
push
push
pop
and
shl
adc
push
adc
adc
mov
lea
fs
neg
and
sbb
jge
add
fwait
or
inc
sub
dec
out
cs
jg
cmp
je
lea
mov
pop
cmp
pop
add
and
inc
enter
popf
xlat
rcl
or
test
je
inc
call
test
jae
ins
idiv
add
mov
adc
in
add
jns
mov
mov
lea
sbb
xor
arpl
(bad)
pop
pop
mov
repnz
jbe
inc
cmp
mov
mov
jmp
pop
xor
or
mov
xchg
add
push
outs
push
sub
add
cli
leave
jmp
aam
or
dec
sub
(bad)
shl
retf
call
xchg
cli
add
cld
ret
aas
mov
add
sbb
xchg
xor
into
loopne
jge
pop
push
xchg
mov
xchg
push
dec
lods
pop
fstp
add
add
inc
pop
mov
push
xchg
mov
inc
inc
add
cmc
add
add
std
les
outs
sub
inc
inc
popa
je
in
aaa
scas
retf
out
loope
sar
lods
pmulhw
into
leave
mov
mov
xchg
fild
jg
lock
sub
movs
dec
ins
jo
pop
add
fsubr
out
or
pop
add
pop
inc
inc
jne
inc
lods
xor
pop
push
adc
arpl
sbb
jg
jnp
inc
fisubr
mov
inc
aam
xchg
fcomp
scas
fdivr
in
fcomp
and
je
push
je
jo
and
daa
dec
or
mov
sub
pop
adc
(bad)
push
loope
ficom
adc
cdq
gs
sub
adc
repnz
add
add
jl
add
icebp
mov
pop
mov
adc
outs
arpl
push
outs
adc
js
add
pop
pop
pop
sub
loop
jg
loop
inc
or
mov
mov
cli
inc
clc
ja
jne
push
mov
xor
sub
cmc
mov
call
mov
dec
cld
fisttp
mov
data16
sub
into
out
and
add
pop
sbb
jp
cmp
pop
push
sub
sub
pop
enter
or
icebp
sub
(bad)
sbb
or
lea
popf
cmps
div
test
test
jo
cmps
xchg
sub
dec
mov
mov
fwait
or
div
arpl
into
inc
or
xor
adc
addr16
pop
pop
cwde
xlat
push
pop
arpl
mov
sti
rol
mov
rcr
or
ret
add
pop
cmps
adc
cmp
mov
mov
cmp
aaa
(bad)
adc
jns
iret
mov
or
jbe
fild
loop
aas
inc
xchg
jle
sbb
mov
add
int3
mov
mov
adc
pop
mov
push
inc
jp
inc
ret
iret
mov
(bad)
push
leave
or
mov
mov
mov
push
(bad)
and
sub
pop
mov
sete
jmp
je
sbb
popa
ret
cmp
adc
or
fadd
popf
shl
outs
mov
mov
xor
xchg
aam
out
xchg
sub
add
xchg
fcomp
pusha
xor
and
ins
bound
sbb
aam
add
fmul
dec
div
or
pop
(bad)
sbb
adc
xchg
cs
and
cmp
add
add
fsubr
mov
add
pop
add
add
or
adc
idiv
mov
in
clc
pop
or
adc
push
stc
lds
mov
clc
push
adc
sbb
fadd
and
popf
loopne
or
iret
jnp
xor
movs
movs
mov
idiv
fsub
ins
gs
rcr
lfs
icebp
dec
push
test
lahf
adc
and
out
add
push
ficomp
mov
leave
popf
cmp
mov
push
pop
push
daa
adc
icebp
lea
dec
hlt
int3
jg
sbb
ror
add
pop
add
movs
jo
dec
xor
fistp
(bad)
fild
mov
aad
sbb
(bad)
mov
aaa
push
or
dec
mov
or
data16
scas
fisub
rcr
aad
xor
add
cmp
clc
in
pop
lods
inc
sub
xor
add
mov
push
sbb
stos
pop
sbb
repz
lahf
pop
std
jge
sub
mov
mov
dec
mov
jmp
nop
push
gs
cmc
or
(bad)
mov
or
fidiv
xchg
aad
or
and
pop
stos
pop
loopne
sub
mov
pop
and
fistp
inc
inc
dec
pop
and
cmp
add
je
inc
into
clc
(bad)
pop
inc
inc
mov
ret
add
add
xor
(bad)
repz
jbe
jg
mov
jp
pop
pop
add
pop
dec
push
adc
push
push
cmps
add
fucomi
fwait
lods
push
test
jmp
test
gs
(bad)
out
push
jg
xchg
pop
sbb
add
rol
movs
call
push
movsx
inc
js
mov
sub
call
mov
mov
mov
and
inc
ss
out
cld
mov
add
mov
rcr
lods
sbb
cmp
push
mov
jmp
stos
int3
adc
sbb
and
loopne
imul
clc
cs
adc
inc
gs
sub
repz
lods
adc
aaa
jbe
jno
dec
inc
xor
sbb
sar
sbb
mov
jae
mov
por
pop
pop
rcr
inc
jne
cmp
out
mov
lahf
cmps
aas
or
mov
lea
pop
and
add
mov
adc
test
jb
int3
hlt
shl
mov
jg
adc
fwait
hlt
xchg
adc
dec
sub
jb
add
les
and
sbb
out
cmps
rol
push
xchg
inc
dec
and
mov
sub
mov
mov
mov
aam
mov
jo
and
dec
(bad)
xchg
sahf
nop
cdq
jae
pop
fidivr
and
fdivr
in
fwait
pop
sub
mov
sbb
lds
inc
pop
add
pop
retf
pop
push
clc
adc
dec
jae
or
push
fisttp
mov
jge
jo
idiv
adc
loopne
lea
push
jg
adc
push
and
mov
cmp
add
add
dec
adc
adc
stc
int
jo
icebp
sbb
push
int3
popa
lea
into
mov
mov
sub
inc
jp
outs
push
sbb
pushf
inc
jmp
jbe
add
and
xor
cld
jno
test
mov
loopne
push
dec
pop
mov
cmp
sar
fsub
mov
mov
push
scas
inc
mov
inc
or
or
sbb
loopne
pop
adc
cmc
imul
clc
cdq
idiv
out
repz
les
xor
mov
int3
inc
sub
xor
fadd
xor
dec
bndldx
add
inc
cmp
add
ins
xor
jmp
pop
(bad)
xchg
mov
mov
sbb
xor
cmp
mov
and
or
jne
push
jle
mov
iret
inc
pop
js
pop
and
out
xor
les
scas
popa
xchg
test
popf
jno
jl
jb
pop
ficomp
imul
mov
scas
jns
sti
pmaxub
push
push
jo
dec
add
data16
push
data16
cmove
iret
push
cmp
sbb
adc
pushf
cmps
aad
ret
or
loope
add
aam
inc
add
lods
sbb
mov
push
and
pop
inc
imul
fistp
inc
mov
dec
xchg
stos
lods
add
push
pop
cs
out
inc
pusha
in
push
iret
sar
and
test
xchg
adc
je
sbb
fcom
adc
fstp
es
ja
mov
push
mov
sahf
out
(bad)
rcr
call
iret
push
call
add
dec
fs
rcr
cmp
mov
xor
movzx
das
enter
fsubr
nop
sbb
and
mov
test
(bad)
jecxz
mov
pop
clc
add
pushf
ficom
add
mov
inc
mov
add
dec
rcr
gs
cld
les
xchg
inc
mov
cmp
lea
sub
add
add
shl
push
retf
jmp
mov
pop
push
inc
or
cwde
jmp
ror
into
js
mov
adc
jne
cmp
push
push
lods
(bad)
xor
pop
addr16
(bad)
jne
scas
inc
mov
jle
sub
or
push
or
inc
or
sti
fisttp
inc
adc
sub
fstp
fwait
jmp
fst
and
nop
pop
in
fld
adc
test
pop
xlat
arpl
ror
sub
rcr
jne
xchg
jb
mov
sub
adc
aam
adc
xor
push
jmp
fist
shl
addr16
dec
ffreep
test
les
fist
pcmpeqw
data16
or
push
adc
xchg
xchg
push
arpl
mov
sbb
jmp
inc
(bad)
push
nop
shl
add
dec
cmps
xchg
clc
and
loopne
mov
mov
sbb
push
cmp
imul
fcom
add
or
or
or
pop
mov
das
adc
fisub
inc
push
je
and
shl
mov
push
sahf
push
outs
cmp
loope
sbb
jmp
cmp
or
adc
sub
cmps
adc
mov
push
push
clc
mov
jnp
mov
lock
mov
scas
inc
test
cmp
mov
push
dec
pop
imul
sbb
pop
pop
or
cli
sub
loopne
mov
push
mov
cmp
call
sub
lds
adc
jnp
jbe
cmp
sub
loopne
das
pushf
adc
sahf
add
mov
mov
jnp
jl
adc
ret
xchg
sbb
les
push
mov
push
xchg
add
xchg
aas
mov
mov
mov
inc
js
add
retf
repnz
stc
mov
sbb
and
mov
fcom
jle
pop
sub
add
cld
inc
adc
ja
stos
or
push
rol
retf
pop
pop
dec
cmp
je
push
arpl
sub
movs
cmp
sbb
pushf
ret
lock
mov
xor
fcmovne
pop
(bad)
jmp
neg
cmps
dec
cmps
jp
add
jp
into
jge
mov
push
or
add
add
retf
rol
repnz
inc
xchg
sbb
add
fdivrp
std
enter
int
aaa
fld
adc
loop
sbb
pop
fwait
clc
sbb
add
neg
inc
mov
and
scas
std
and
jno
popa
cmp
sub
adc
xor
pushf
fcmovne
inc
ins
xchg
mov
adc
or
pusha
mov
mov
mov
and
fstp
xor
jo
cdq
idiv
loopne
jo
call
inc
mov
dec
sbb
mov
dec
sbb
add
mov
mov
dec
clc
push
cmps
imul
inc
sub
retf
sub
fcmovnbe
not
mov
mov
dec
inc
push
inc
mov
aaa
xlat
push
inc
mov
fimul
cmp
push
iret
xor
lahf
mov
es
add
dec
mov
pop
push
out
push
leave
dec
iret
jnp
mov
push
mov
ret
out
test
push
push
cdq
aaa
cmps
dec
dec
jae
push
sti
shl
fs
cmp
ror
push
out
loopne
add
(bad)
hlt
adc
or
ds
cld
xchg
sbb
push
cdq
scas
rcl
cs
xchg
inc
add
fmul
xchg
aaa
sub
xor
sbb
iret
movs
fst
in
mov
xor
add
test
jnp
loop
push
or
pop
mov
cmp
movzx
push
push
add
mov
lock
pop
pop
pop
push
pusha
add
sbb
pop
shl
popa
call
inc
add
iret
jbe
inc
int3
push
xor
dec
and
cmps
sub
test
add
push
ins
hlt
fldenv
add
mov
and
add
push
test
imul
mov
lods
cmp
in
mov
xchg
mov
mov
and
out
pop
inc
cwde
je
xchg
add
fcmove
dec
dec
jb
xchg
jne
lea
jno
cdq
mov
nop
imul
mov
mov
retf
popa
in
jle
cmc
in
(bad)
and
ret
adc
shl
push
ss
jb
fcmovb
push
rol
test
cmps
fs
lea
test
repz
jge
js
mov
jmp
adc
mov
xchg
xor
cmc
mov
and
inc
mov
add
xchg
and
adc
imul
gs
and
ins
fisubr
addr16
sbb
mov
xchg
or
mov
movs
pop
pusha
rol
mov
sbb
mov
fiadd
push
or
push
ins
call
jbe
or
add
pop
pop
jae
jmp
or
xlat
add
stos
sbb
jb
jmp
lods
test
pusha
nop
call
adc
stos
hlt
push
sub
ret
int
pop
shl
out
ja
sbb
jmp
xor
lea
mov
jb
cmp
in
rcr
inc
sub
aad
aad
andnps
push
ins
jbe
jl
mov
sub
or
jne
jbe
inc
dec
imul
add
aas
test
and
ins
sbb
aas
sbb
fidivr
jp
push
mov
pop
mov
scas
(bad)
sbb
push
and
jbe
jb
imul
push
in
cmp
aaa
pushf
cdq
sbb
shl
and
cmp
pushf
xor
xor
inc
dec
cmps
and
xchg
pop
push
xor
or
xor
dec
pushaw
sbb
cmp
pop
pcmpgtd
xor
pop
jb
mov
scas
pop
push
mov
adc
jbe
push
sub
adc
repz
sbb
or
popf
push
ror
add
or
add
or
outs
int
and
adc
imul
jmp
mov
mov
add
or
in
push
mov
(bad)
loopne
sti
out
adc
or
js
jecxz
add
lahf
mov
adc
or
xchg
es
repnz
jmp
sub
and
push
jp
or
adc
jmp
or
popa
lods
out
lods
jnp
out
xchg
into
push
push
sar
dec
lock
and
fild
fstp
fwait
mov
lock
push
dec
test
add
mov
add
push
ja
call
jl
inc
not
lahf
or
dec
dec
dec
pushf
push
fmul
enter
push
test
movs
test
jge
cmp
mov
push
push
mov
fcomp
add
sar
gs
loopne
jbe
call
sub
mov
sbb
xbegin
pop
addr16
cld
loop
js
sbb
add
lods
xor
lods
scas
push
push
shl
and
inc
and
popa
shl
push
sub
mov
stos
sar
or
add
add
add
rcl
xor
pusha
out
out
push
pop
push
inc
push
jo
rol
setns
cwde
out
cwde
xor
dec
add
push
add
mov
adc
xchg
int3
push
sub
fsubr
fist
mov
and
xchg
add
enter
add
dec
add
pop
test
add
test
lods
dec
push
push
cdq
jmp
jnp
dec
mov
nop
dec
push
push
jo
jg
dec
add
fucomi
add
out
cwde
je
jbe
jge
xor
push
test
ror
(bad)
sub
mov
add
sub
or
aad
adc
add
aad
sub
push
rcr
enter
shr
imul
or
in
sub
mov
fld
clc
cs
jge
mov
xchg
sbb
xor
ins
pop
loop
(bad)
outs
push
in
and
imul
sbb
test
or
xchg
xchg
jecxz
push
mov
ss
or
adc
jns
ins
lods
popf
sbb
sbb
and
sbb
sub
out
int
cmp
icebp
sbb
jae
push
xchg
addr16
adc
dec
bound
(bad)
mul
dec
or
addr16
pusha
pop
sbb
test
aaa
push
cmp
cmps
sub
cmp
out
push
dec
cs
imul
sbb
stos
push
or
mov
mov
repnz
cmp
adc
and
shl
cld
push
shl
lahf
inc
aad
sub
adc
cmp
cmp
outs
push
call
(bad)
inc
test
je
cmp
jne
test
test
jo
cmp
xor
mov
mov
cmps
cdq
in
sete
mov
rol
xlat
sbb
push
mov
adc
adc
bound
dec
mov
push
aas
xor
or
push
movs
pushf
push
pop
fist
inc
rol
add
(bad)
add
rcl
(bad)
or
clc
pusha
ret
push
cs
sbb
pop
retf
into
inc
mov
cmps
xchg
leave
arpl
int
fimul
cmp
pop
cmp
mov
cmp
sbb
ins
pop
inc
jle
add
or
jns
aad
aad
sahf
aam
xor
lahf
movs
int
repz
xchg
xlat
mov
jmp
lea
sbb
mov
fdivr
out
cmp
data16
push
mov
xor
inc
movs
push
xor
fstp
int3
or
ss
das
int3
dec
test
sbb
add
test
loope
mov
test
or
pop
je
pop
jmp
push
out
rol
mul
pop
movs
repz
inc
dec
push
jl
fstp
jbe
push
mov
imul
xlat
push
push
inc
or
adc
push
mov
adc
popa
sbb
and
test
call
and
test
addr16
push
or
aaa
pop
mov
retf
push
adc
jnp
mov
imul
outs
xor
adc
into
out
fstp
or
sbb
jle
out
push
adc
adc
ins
aaa
sbb
jbe
daa
cwde
rcr
mov
mov
jno
cmp
addr16
jno
inc
ret
xor
(bad)
jns
adc
dec
jns
and
fbstp
sbb
pop
int
ret
mov
inc
mov
mov
in
jo
push
adc
jo
aaa
adc
or
adc
aaa
or
ss
jns
out
(bad)
xor
addr16
int3
std
loope
and
ret
xor
std
fild
sub
push
(bad)
adc
inc
dec
enter
mov
jae
addr16
leave
(bad)
fwait
cmc
mov
pop
adc
ret
and
adc
dec
jno
mov
call
mov
jnp
push
cmp
sub
lods
sub
jne
test
ja
les
stos
pusha
and
fisttp
pusha
int
adc
inc
add
cmp
(bad)
fiadd
adc
xchg
test
xchg
shr
aaa
and
dec
and
and
jmp
or
lock
and
push
jns
popa
test
add
xabort
sbb
add
add
xlat
sahf
neg
cmp
imul
sbb
inc
push
popa
movs
mov
push
cld
dec
xchg
fmul
test
dec
add
ss
aas
or
add
lock
add
into
aad
or
xchg
push
enter
adc
inc
sar
test
cld
sbb
mov
fwait
xchg
dec
and
ret
mov
(bad)
push
push
(bad)
not
rcr
push
xchg
push
in
jae
push
fdiv
cmp
sub
jmp
jmp
or
dec
xor
jge
pusha
xor
test
dec
jb
shr
and
imul
cmc
add
add
(bad)
clc
pop
fcomp
adc
outs
loopne
mov
xchg
nop
pushf
cmp
dec
mov
lds
adc
lahf
cld
xor
in
push
test
jo
retf
mov
mov
xor
scas
inc
mov
aas
pop
inc
shl
ja
adc
retf
adc
fsub
xchg
mov
adc
mov
icebp
sub
pop
icebp
adc
mov
data16
retf
add
lea
lea
movs
add
push
sub
pop
scas
add
push
in
sub
lods
repnz
and
add
outs
ds
rcr
mov
add
push
iret
cli
inc
loopne
mov
sti
cmp
imul
daa
call
les
inc
nop
and
inc
mov
add
push
adc
mov
adc
scas
inc
or
or
jmp
adc
(bad)
inc
jae
pop
cmp
int3
out
lock
sub
ret
or
jns
ins
int
out
adc
mov
out
rcr
push
inc
in
and
mov
fcom
cmp
ss
mov
sti
pop
or
and
adc
sti
into
cmp
xor
jbe
repz
repz
movs
imul
loopne
inc
jo
stc
clc
sti
inc
sbb
jo
dec
dec
jno
scas
xor
jno
call
sbb
jmp
sub
pop
out
or
push
mov
jo
sbb
sub
repnz
int
arpl
jnp
jnp
mov
xor
jae
push
add
push
ror
shr
push
push
pop
repnz
outs
or
mov
mov
gs
std
daa
and
(bad)
add
mov
std
mov
jno
ss
mov
cmp
stos
mov
mov
sub
push
icebp
mov
out
push
inc
and
pop
adc
sahf
xlat
jle
xor
ret
test
pop
out
ins
adc
push
ins
push
in
mov
aas
pop
je
jmp
ins
enter
call
pusha
pop
les
les
in
push
xor
ins
xlat
mov
or
pop
movs
test
outs
(bad)
(bad)
daa
pop
push
test
sub
mov
xchg
mov
jge
cmp
sbb
das
lahf
cmp
out
xchg
fmul
rol
aaa
pop
xlat
adc
add
icebp
push
pop
loopne
add
ret
push
add
jo
ja
xor
pop
and
xor
inc
iret
cmp
iret
popa
enter
jbe
in
sub
push
and
pushf
xor
sbb
adc
es
mov
rol
or
pop
das
ficomp
or
fisttp
mov
pop
sbb
test
push
push
mov
inc
scas
loope
movs
mov
add
mov
add
inc
lahf
inc
lea
(bad)
loopne
or
pop
and
sbb
mov
sub
test
je
pop
retf
aas
add
sbb
in
mov
sti
cmp
jle
push
xor
cmp
jne
cmp
pop
jmp
jg
and
cld
mov
and
or
fldcw
(bad)
ficom
ror
adc
ins
in
and
stc
jnp
or
push
or
inc
or
jle
cmp
ins
gs
jne
or
add
push
jl
inc
out
inc
add
pop
ja
jnp
add
sbb
sbb
jbe
loopne
pushf
pushf
mov
or
adc
aaa
jae
xor
jmp
adc
sbb
into
adc
ret
and
mov
inc
ret
pusha
xlat
mov
and
test
or
fcmove
add
lock
sub
jnp
(bad)
aam
or
addps
nop
cmp
leave
aaa
in
out
ret
es
mov
movzx
or
inc
pop
sahf
imul
into
adc
xchg
fisttp
jmp
jae
shl
repz
jmp
jns
cmps
sbb
push
jbe
jg
dec
sti
mov
mov
sub
adc
add
push
mov
out
sbb
sbb
loop
adc
jbe
lods
sbb
sub
or
jmp
adc
add
dec
push
mov
mov
pop
mov
inc
clc
add
rol
mov
mov
movsx
mov
mov
imul
clc
lods
push
pop
xchg
inc
xor
add
jo
push
push
xor
test
mov
shr
mov
pop
lods
push
lods
pop
fsub
test
bound
je
lds
sub
pop
dec
push
push
push
movs
or
jmp
xor
or
jmp
nop
sub
and
sub
adc
popa
imul
ret
pop
in
inc
adc
xchg
mov
lea
data16
and
dec
mov
jmp
push
add
outs
pushf
test
push
js
dec
xchg
sub
cs
test
and
or
mov
push
and
mov
sub
es
inc
jecxz
out
cmp
mov
inc
push
fs
mov
lods
mov
daa
das
pop
ret
iret
ins
iret
push
call
dec
aad
cmp
push
sbb
std
push
(bad)
call
stos
ss
sar
das
mov
jb
mov
xor
and
stos
aam
out
pop
lea
push
push
in
(bad)
ins
scas
or
xor
cmps
dec
loopne
or
push
cwde
xchg
test
fcom
aaa
add
mov
aas
sub
clc
loopne
adc
fbld
out
jmp
and
push
jmp
mov
dec
shl
test
(bad)
cmc
adc
adc
mov
push
sub
daa
test
and
push
adc
test
add
pop
(bad)
clc
shl
sbb
ja
push
lds
jbe
add
mov
sahf
or
test
xchg
cmps
leave
out
daa
mov
inc
pusha
rcl
add
(bad)
fistp
je
aaa
mov
idiv
push
mov
neg
mov
mov
hlt
stos
inc
add
movs
sbb
rol
and
add
jno
sub
mov
mov
loop
cmp
jne
mov
por
inc
push
cmp
sub
nop
mov
retf
cmps
adc
cmp
(bad)
(bad)
or
imul
lea
cmp
or
call
inc
rcl
out
mov
loope
sbb
dec
ret
scas
xchg
popa
mov
mov
adc
data16
dec
mov
mov
cmc
mov
mov
je
leave
es
sub
pop
push
daa
mov
dec
lock
add
xor
xor
adc
mov
or
retf
jns
je
ins
cs
je
imul
lods
movs
cmps
ins
cmps
jns
or
(bad)
mov
inc
adc
es
push
cld
fstp
dec
dec
cmp
xor
inc
loop
adc
ret
push
or
add
mov
pusha
dec
mov
xchg
shl
xor
imul
ficom
scas
push
popa
jmp
movs
movs
pop
add
fsub
loopne
into
add
inc
add
mov
dec
or
retf
jle
(bad)
retf
mov
mov
and
jg
lds
mov
pusha
add
add
repnz
fsub
daa
xchg
lock
push
add
xor
(bad)
fcmovbe
ins
add
jbe
push
adc
or
idiv
sub
xor
daa
jl
(bad)
pop
sti
push
enter
xor
enter
int3
xor
in
push
or
add
xor
inc
fiadd
adc
inc
push
jns
gs
outs
outs
xchg
ins
adc
sar
sub
push
outs
dec
popa
ins
gs
sub
push
into
fsub
sub
icebp
mov
scas
inc
cmp
add
call
lods
syscall
add
push
push
gs
ins
push
popa
arpl
addr16
xadd
gs
jb
jns
mov
add
or
retf
add
gs
data16
add
shr
dec
or
je
jae
lock
ds
add
ins
jo
inc
sub
out
or
test
lock
mov
push
jne
mov
pop
imul
fild
xchg
(bad)
push
and
arpl
mov
je
pop
ret
frstor
nop
hlt
pop
mov
mov
sub
test
pop
mov
(bad)
pop
mov
push
pushf
push
or
mov
cmps
add
jmp
push
mov
or
out
dec
psubusw
in
cmp
dec
jb
push
les
jb
shl
adc
xchg
ja
(bad)
fld
ficomp
pop
jae
xor
dec
inc
add
or
fnstcw
sub
aas
gs
shr
cmp
inc
popa
mov
mov
mov
pop
xor
push
sub
ja
push
sub
push
call
inc
or
es
inc
pop
add
loopne
mov
ret
inc
dec
in
add
es
dec
imul
inc
test
(bad)
xor
or
mov
push
gs
sub
add
dec
jmp
scas
in
ret
push
test
push
push
ja
dec
lock
(bad)
sbb
outs
outs
ins
push
shr
ins
push
(bad)
jno
xor
(bad)
sub
sbb
jo
sub
xor
xchg
dec
imul
xor
inc
or
call
jae
adc
out
sub
inc
inc
ins
popa
jae
fld
fld
ss
dec
imul
or
xor
inc
lock
or
call
call
pop
jmp
mov
pop
lods
cmp
add
sub
cmp
out
mov
jbe
cs
outs
sub
add
pop
icebp
pop
in
mov
fdiv
dec
gs
fild
ret
aaa
add
or
ja
scas
jnp
sti
add
outs
add
addr16
or
test
or
push
test
jp
jb
popa
jns
or
jge
pop
jne
sbb
pusha
int3
cli
dec
push
pop
jbe
xchg
aas
adc
stc
test
frstor
shr
push
cmp
and
xor
pop
push
adc
cmps
sbb
outs
jne
sahf
push
adc
sub
loopne
sbb
nop
dec
outs
jbe
dec
gs
dec
(bad)
je
imul
xchg
in
push
mov
ins
push
cdq
sbb
mov
jae
loopne
(bad)
cs
aam
arpl
add
in
or
scas
jo
arpl
add
jne
push
mov
add
pop
xor
pop
mov
das
bound
pop
xor
push
(bad)
clc
aam
and
outs
push
xlat
add
inc
test
pop
rcl
push
dec
push
daa
bound
cmp
mov
and
sub
mov
pop
outs
pop
xor
dec
aas
jge
push
outs
add
in
not
dec
inc
sub
inc
sub
ja
movs
adc
fild
jg
cdq
mov
push
cmp
xor
loopne
test
imul
push
loope
imul
ret
ret
or
jae
in
fs
out
jmp
addr16
xlat
pop
sub
cld
jbe
pop
mov
and
jno
or
lahf
into
aas
out
mov
sub
jno
je
rcl
fild
jo
pop
sti
ds
rcr
mov
or
jne
je
adc
mov
lock
std
adc
push
add
or
inc
inc
mov
movs
sbb
cli
inc
mov
dec
xor
or
and
or
clc
cmp
and
push
adc
mov
or
jae
mov
dec
mov
push
add
mov
pop
fsubr
scas
xchg
sti
cli
pop
or
cdq
ins
adc
fld
fcomp
js
xchg
add
lods
test
outs
and
add
sub
aam
lods
retf
imul
int
movups
mov
test
fild
cmp
push
pop
add
sbb
push
jg
pop
stos
jmp
cli
ja
push
jnp
xchg
mov
pop
push
sub
or
out
inc
xor
dec
add
outs
sbb
test
inc
dec
aad
push
add
rol
cmp
pusha
das
mov
push
cmp
movs
aaa
pop
add
sub
(bad)
cmp
out
add
mov
push
inc
es
xchg
adc
inc
and
push
pushf
jg
mov
fcomp
mov
pushf
movs
or
sub
rcl
mov
jo
(bad)
xor
retf
add
sbb
inc
xchg
pusha
push
mov
(bad)
adc
jno
push
add
xchg
or
or
xlat
add
sbb
mov
push
add
fst
icebp
lods
in
icebp
sub
jmp
jnp
inc
fistp
push
xor
pop
das
ja
add
jecxz
out
pop
nop
fbstp
mov
sub
in
pusha
(bad)
aam
add
mov
and
imul
lods
add
inc
stos
inc
mov
and
inc
adc
cmp
adc
adc
fist
mov
je
fld
and
mov
cmp
inc
and
outs
dec
cmp
test
shl
inc
loope
mov
mov
add
fimul
inc
dec
push
push
push
test
add
mov
mov
pop
fld
lods
(bad)
in
rol
mov
loopne
push
sbb
shl
xlat
sbb
inc
sbb
pop
xchg
inc
sub
and
inc
retf
ss
jbe
or
jns
adc
jg
pop
push
test
xor
jecxz
xor
ret
call
sub
popa
sbb
jbe
out
or
dec
es
(bad)
push
inc
push
pop
scas
das
in
out
shl
and
je
das
lds
xlat
invd
xlat
adc
push
das
mov
sub
scas
xor
out
pop
push
test
retf
fs
ret
xor
icebp
sub
lock
repz
add
cmp
xlat
out
push
loopne
and
push
cmp
cmp
push
daa
mov
cmp
dec
fs
mov
mov
pusha
scas
adc
push
dec
aaa
les
mov
add
xlat
mov
pop
sbb
inc
sbb
xor
cmp
xor
mov
jmp
enter
pusha
xor
jns
mov
inc
in
or
mov
push
gs
fstp
(bad)
test
out
cmp
push
pushf
loopne
pop
or
push
sti
push
fiadd
jecxz
cmp
fild
loop
iret
test
add
mov
and
adc
cmp
icebp
mov
jecxz
out
sbb
xor
mov
cmp
cmp
imul
and
dec
daa
push
inc
inc
jb
pop
ret
imul
push
push
xor
sub
xor
dec
outs
mov
cmp
inc
cmp
arpl
lods
sbb
sub
mov
stos
add
xor
inc
adc
adc
pop
or
aad
je
sahf
femms
pop
push
call
cmc
cmp
jns
jb
pop
xchg
pop
adc
cmp
dec
mov
pop
jbe
add
jmp
icebp
push
sbb
mov
cmp
dec
mov
mov
out
or
inc
inc
popa
adc
dec
repz
out
je
outs
mov
xchg
dec
add
rol
jecxz
and
in
test
push
fcomp
enter
add
push
test
jmp
or
call
sub
add
inc
fs
loope
pop
or
ret
les
and
loopne
sbb
jl
push
js
fldenv
daa
mov
add
xchg
adc
jb
xor
mov
repz
jl
ret
xchg
and
inc
jle
and
add
mov
add
dec
or
(bad)
arpl
stc
or
push
inc
add
test
mov
push
sbb
or
and
dec
add
mov
or
xchg
out
sbb
or
call
repnz
push
mov
adc
and
xchg
jae
pusha
fisub
(bad)
out
popa
pusha
mov
add
imul
and
cmp
push
int
jg
pop
cmp
add
ss
loope
loope
fdivr
sub
test
add
push
test
pusha
dec
daa
div
fs
and
sbb
cdq
or
jb
out
jmp
int
adc
and
shl
aas
add
fadd
push
into
jae
pusha
cmp
psllq
inc
inc
adc
inc
cwde
or
and
jae
dec
or
jo
scas
ds
xor
xor
lahf
cmps
add
(bad)
lock
or
or
in
or
in
cmps
adc
stc
cmps
jae
jo
add
add
mov
push
maxps
sub
cmp
in
ss
add
or
mov
aaa
or
loop
imul
hlt
cmp
loopne
xchg
gs
imul
cmps
in
push
in
push
leave
dec
lods
mov
mov
cmp
in
shr
pop
add
add
pop
or
mov
xchg
mov
and
pop
push
push
cmp
shl
sbb
jo
mov
int
scas
data16
pop
xor
cmp
jo
or
sub
or
sub
add
ja
add
pop
xchg
inc
ins
xor
xlat
push
adc
cmps
popa
xchg
pop
xlat
cmps
nop
and
or
push
cmps
or
cmps
add
jno
or
mov
sbb
es
int3
mov
push
pop
pushf
and
sahf
out
sub
(bad)
sbb
sub
adc
xor
in
add
mov
or
call
in
or
pop
je
jns
cmp
jg
mov
inc
call
or
in
add
shl
rcr
lock
inc
icebp
xor
fistp
ja
add
es
fwait
push
js
mov
shl
mov
pop
(bad)
pop
mov
iret
sbb
iret
inc
push
and
inc
add
call
push
jno
js
fild
rcl
or
cwde
test
sub
inc
mov
out
adc
xchg
lods
adc
inc
mov
inc
mov
xchg
jb
add
or
in
add
sbb
loope
inc
mov
(bad)
popa
inc
jo
inc
ins
sbb
fucomp
es
xlat
pop
les
lahf
in
and
add
add
push
aas
pop
(bad)
jne
daa
xchg
mov
out
(bad)
xor
sub
dec
push
jne
sub
sbb
sub
and
out
pop
sbb
sbb
jae
inc
mov
aad
jo
in
sub
in
mov
pop
(bad)
es
das
pop
lds
mov
ja
mov
in
comiss
mov
or
fcom
xor
inc
dec
shl
pop
or
mov
mov
adc
push
xor
je
pop
sbb
xor
push
repz
push
mov
pop
out
xchg
add
retf
cmp
xor
adc
shl
cmp
push
add
lds
fisttp
aaa
mov
sbb
aaa
fadd
cmp
pop
or
stos
add
jne
aaa
jmp
add
add
sub
xor
inc
jbe
xor
mov
or
jg
mov
rol
sub
xor
mov
xor
in
push
add
imul
das
pop
and
cmp
mov
adc
test
loop
xchg
push
cld
pushf
or
mov
jo
xor
pushf
test
xor
adc
or
add
dec
rcl
ins
inc
cwde
adc
pop
or
call
je
lods
mov
xor
ja
cmps
push
xchg
out
sbb
xchg
xchg
xchg
xchg
pop
sub
scas
jbe
mov
fndisi(8087
pop
push
popa
push
inc
push
mov
ins
push
jb
mov
dec
fdiv
mov
adc
cmp
lock
sub
inc
push
pushf
call
add
adc
movs
cmps
add
adc
fwait
js
dec
inc
bound
nop
pop
setnp
fsub
dec
call
push
adc
rep
add
mov
test
xchg
pusha
add
add
pushf
das
inc
add
pusha
and
pop
mov
add
dec
add
mov
sbb
cmp
js
xchg
adc
mov
add
cmp
pop
outs
inc
jae
lock
inc
inc
mov
hlt
shr
push
xor
push
lds
add
add
test
dec
push
fsub
and
xor
add
add
cmp
aam
jl
aaa
pop
sub
and
pop
jg
pusha
add
fnstenv
shl
test
and
push
xor
pop
xor
add
stc
or
push
adc
data16
(bad)
jg
push
test
je
add
call
mov
mov
mov
mov
into
jo
inc
and
mov
mov
test
je
cmp
fs
out
not
pop
or
pop
pop
ret
nop
jbe
push
push
xor
mov
(bad)
jg
add
add
mov
call
call
shl
neg
push
xor
dec
jne
sbb
pop
mov
neg
(bad)
fldenv
rcl
adc
pop
mov
shl
sbb
adc
jo
jb
xor
fidiv
je
adc
push
scas
add
popf
pop
test
or
aam
mov
and
(bad)
or
or
fsubr
or
popa
addr16
add
inc
sbb
jne
je
mov
out
adc
mov
ins
ret
aas
aam
dec
mov
push
sbb
xchg
mov
xchg
add
jmp
clc
nop
arpl
cmp
int3
jns
add
lods
cmp
lea
add
ret
lea
ss
push
test
fwait
sbb
sub
inc
inc
mov
repz
adc
js
loopne
cmp
call
or
mov
and
jle
neg
scas
(bad)
call
and
or
mov
shl
imul
rcr
cmp
lods
test
or
jne
sbb
jb
addr16
xlat
or
adc
cmp
(bad)
outs
(bad)
js
pop
test
clc
sub
pop
adc
xchg
sub
xor
inc
xchg
push
add
aas
shl
mov
inc
push
imul
sbb
sub
pop
cmps
pop
xchg
cmp
jno
push
and
sub
outs
push
das
mov
(bad)
shl
not
sti
xor
lods
cs
ins
push
cmp
push
pushf
mov
add
add
pop
or
add
dec
push
cdq
inc
inc
push
gs
pop
stos
or
shl
rol
in
push
add
or
inc
clc
mov
jo
leave
mov
idiv
xor
sbb
sub
push
add
or
sbb
enter
jg
dec
fdivr
inc
add
test
aad
add
sub
add
xchg
ins
inc
mov
cmps
ds
bound
xor
and
ror
lock
cmp
jne
mov
xchg
or
inc
cld
push
xor
clc
ins
icebp
hlt
sti
pop
imul
push
or
adc
and
jg
int3
inc
pop
ret
nop
push
mov
mov
cmp
jbe
(bad)
pop
enter
adc
mov
popf
sbb
es
call
mov
xor
mov
mov
mov
loopne
or
cmp
sti
outs
jp
push
(bad)
push
lock
jp
jmp
mov
mov
jns
or
push
ja
mov
outs
xor
mov
sbb
xchg
or
add
js
jne
adc
and
sbb
scas
clc
pop
cmp
pop
add
ja
test
je
cmp
jg
mov
adc
test
inc
add
inc
add
cwde
adc
(bad)
cmp
ins
data16
inc
jne
xchg
inc
pushf
mov
mov
xor
cmps
or
test
xchg
xchg
daa
xchg
mov
push
mov
fld
cmp
push
in
in
fmul
and
jl
inc
xor
inc
nop
mov
push
xchg
and
dec
jne
adc
fsub
cwde
into
icebp
cli
sbb
lea
movs
hlt
mov
cmps
js
nop
test
sub
dec
cmp
push
shl
mov
mov
jmp
pushf
lods
and
ret
push
jno
std
fadd
ror
jnp
sahf
cmovns
jno
mov
cmps
test
add
add
add
imul
push
dec
add
data16
push
bound
and
xchg
push
cmp
mov
rol
rcl
pusha
mov
or
cmp
je
push
add
add
pop
lods
out
pop
dec
or
inc
nop
popa
jo
dec
xchg
inc
pusha
das
js
push
pop
jmp
adc
push
or
repnz
pop
mov
xor
lea
mov
xor
(bad)
jmp
retf
lea
sar
jns
rcr
pushw
fimul
mov
fidiv
ret
iret
lock
shr
ror
fsub
sar
mov
loop
jmp
aas
pop
or
loop
adc
push
mov
pushf
or
push
loop
stos
cmp
push
cli
nop
mov
dec
push
in
sub
call
push
cvttps2pi
add
mov
xor
mov
mov
adc
cmp
and
xchg
mov
or
xchg
jbe
mov
(bad)
hlt
inc
and
in
or
add
mov
test
je
shr
sub
inc
or
push
adc
test
jno
pop
and
push
sbb
lods
movs
xor
or
loopne
sub
mov
mov
push
adc
clc
lea
jbe
ror
sbb
lea
in
shr
imul
adc
stos
shr
imul
pop
add
mov
lds
lahf
aas
add
loopne
jg
jp
rol
xor
xor
arpl
jecxz
cmp
mov
cmp
xchg
iret
push
outs
mov
sbb
fdivr
fst
mov
enter
mov
mov
cmp
in
(bad)
jmp
add
adc
add
in
and
sbb
cli
mov
idiv
test
push
push
dec
and
lock
ss
add
pop
pop
cmp
xchg
bound
push
daa
lods
imul
xchg
aaa
ja
ins
jbe
fistp
test
push
push
outs
outs
ins
push
outs
imul
push
imul
add
sub
add
mov
dec
or
cdq
and
dec
outs
pop
mov
jg
scas
rcl
xlat
out
mov
inc
or
cld
adc
xor
xor
sbb
mov
sbb
mov
inc
icebp
mov
or
call
out
jle
sub
scas
js
jge
add
retf
inc
test
cs
add
je
inc
add
ja
cmp
or
sbb
iret
pusha
adc
dec
cmp
sub
mov
pusha
mov
pusha
and
fld
inc
sub
sbb
jae
psubusw
test
loopne
mov
jo
inc
hlt
rol
in
mov
repz
inc
outs
sti
idiv
or
sbb
inc
clc
jne
inc
jbe
push
mov
ins
inc
or
ret
(bad)
inc
and
test
xabort
xor
jbe
pop
push
loop
sub
xor
sub
(bad)
rol
push
in
loopne
add
(bad)
mov
mov
fs
pop
cld
add
stos
ffreep
add
sub
push
jp
test
jl
into
jne
mov
cmp
lea
mov
ins
pop
dec
and
outs
add
adc
setl
adc
xor
cmp
sahf
(bad)
dec
jne
xchg
jne
add
jne
sahf
loopne
and
in
scas
sbb
sahf
nop
sbb
mov
movs
mov
sbb
inc
dec
or
ret
enter
push
mov
clc
dec
test
jl
dec
or
add
mov
call
pop
test
das
clc
push
inc
and
enter
(bad)
ja
fisubr
cwde
sbb
jmp
pop
mov
out
add
jae
mov
adc
popa
cmp
sbb
aaa
int
nop
sub
mov
sub
scas
dec
jo
push
adc
mov
adc
lahf
cli
dec
nop
cmp
push
jne
xor
sbb
xlat
int3
push
loop
(bad)
mov
jmp
gs
pop
inc
sahf
nop
popa
mov
sub
and
or
bound
mov
in
idiv
or
push
loopne
movs
shl
add
ror
mov
jmp
nop
imul
push
mov
push
enter
les
rcr
dec
pop
lds
push
add
aam
mov
or
pop
rcl
xchg
push
outs
dec
xor
shl
(bad)
sub
pop
pop
mov
mov
popf
xor
imul
jbe
loope
out
dec
stos
or
popa
inc
inc
or
xchg
inc
xchg
sub
movs
cmp
mov
in
push
xadd
aam
mov
adc
inc
xor
ins
call
lods
adc
aaa
mov
mov
mov
or
mov
ret
retf
cmps
mov
push
imul
lock
loopne
xor
pop
(bad)
sbb
mov
lock
in
push
push
(bad)
jmp
bound
arpl
pushf
jb
xor
inc
mov
or
xchg
lock
sbb
xchg
mov
xchg
arpl
pop
inc
cmp
xchg
test
inc
or
enter
loop
outs
mov
cmp
push
cli
push
xor
add
pusha
mov
add
(bad)
movs
and
inc
jo
hlt
sub
or
push
sbb
add
cmp
mov
add
outs
dec
add
movs
arpl
and
shl
push
or
or
sbb
inc
int3
push
data16
ins
in
sub
push
add
add
fmul
aam
aam
sbb
in
add
adc
and
cmp
push
jo
sbb
push
or
add
inc
lods
popa
shr
test
sbb
jo
adc
ins
sahf
ja
sbb
xor
jl
pxor
adc
test
jne
push
adc
jb
jne
add
cmp
mov
js
out
xor
pop
fcom
(bad)
pop
add
inc
je
mov
fist
clc
cmp
loope
dec
mov
mov
pop
cdq
in
mov
ins
xor
inc
fwait
jnp
cmp
xor
xchg
cli
dec
push
dec
popa
imul
outs
jae
jb
aaa
cmp
pushf
clc
or
adc
test
sbb
cmps
or
push
xchg
xlat
clc
dec
mov
xchg
mov
jns
inc
jne
outs
das
mov
es
bound
sub
lods
mov
loope
daa
jno
xor
and
ins
retf
adc
sbb
push
inc
test
add
or
out
or
pop
add
fucomi
test
pop
fsubr
test
cmp
xchg
mov
scas
loopne
loop
sbb
fadd
(bad)
outs
push
or
inc
jo
lahf
bound
out
daa
mov
loopne
xchg
rol
xor
adc
cmp
ror
inc
sub
in
or
pop
add
xchg
pop
jnp
inc
add
daa
push
dec
imul
cs
push
outs
push
inc
mov
(bad)
out
mov
mov
inc
or
lock
mov
jmp
add
mov
shl
push
les
clc
scas
mov
mov
jo
add
add
in
rcl
push
add
pusha
test
test
mov
rcl
push
inc
sub
js
retf
push
adc
inc
repz
pushf
gs
xor
ins
jae
pushf
mov
inc
push
scas
sbb
frstor
jbe
add
pop
fsubr
cli
sub
jg
adc
inc
mov
add
push
(bad)
test
aas
test
popa
outs
pop
bnd
push
cmp
pop
fs
mov
adc
add
adc
leave
mov
lahf
sar
adc
or
ins
dec
push
js
add
mov
mov
mov
jnp
fs
fiadd
lods
shl
sbb
mov
or
adc
std
mov
(bad)
fisubr
cs
xor
popa
xor
mov
xlat
pop
std
dec
jmp
or
mov
and
push
sub
push
inc
jmp
mov
and
sub
sub
jns
jmp
imul
into
add
jne
fidiv
add
mov
idiv
mov
in
mov
add
push
add
or
les
sbb
imul
mov
test
or
sub
mov
push
repz
adc
loopne
or
pushaw
push
mov
mov
adc
ins
inc
shl
(bad)
or
pop
mov
push
push
bound
adc
loopne
adc
add
push
sub
push
or
jg
push
push
js
push
inc
and
addr16
cmps
in
movs
push
sbb
push
rcr
push
fwait
sub
mov
jns
repnz
fisub
ret
xchg
xor
mov
and
sub
scas
sub
sub
cs
jmp
aas
cmc
sbb
and
sub
sahf
test
(bad)
fisubr
cmp
paddw
dec
rcr
dec
mul
pop
add
xchg
xchg
fstp
adc
cmovs
add
dec
pushf
in
in
jmp
in
(bad)
stc
inc
push
jp
sbb
(bad)
sqrtps
cmp
cmp
mov
call
in
fs
cvtpi2ps
(bad)
cmp
xor
bound
(bad)
push
xchg
fimul
ret
xor
xchg
es
or
mov
hlt
imul
dec
dec
(bad)
or
or
inc
inc
xchg
dec
xor
xor
add
xor
popa
pop
aaa
xor
mov
xchg
sahf
test
in
es
jnp
mov
pop
scas
add
addr16
push
leave
pop
rol
popa
jg
cmps
lock
(bad)
add
xor
jl
inc
fs
or
push
popa
ins
jne
add
bound
inc
mov
xacquire
adc
push
sbb
in
hlt
stos
fld
cmp
in
or
mov
sbb
push
cld
jbe
dec
out
add
jae
jo
nop
add
enter
push
(bad)
out
out
dec
pop
xor
shr
adc
mov
xchg
or
or
sbb
and
fld
je
mov
jge
gs
in
call
push
mov
(bad)
xor
or
out
sbb
aam
dec
jae
xchg
push
pop
pushf
imul
xchg
test
push
add
mov
out
lock
mov
in
inc
imul
add
xor
aad
jns
add
pop
push
xchg
js
inc
shr
xchg
jle
dec
mov
ss
sbb
pusha
xor
mov
es
xor
push
push
xor
jae
dec
sub
dec
adc
arpl
jge
js
xchg
xor
(bad)
cdq
pop
lahf
sbb
adc
or
ja
add
mov
jo
inc
shr
sbb
and
and
mov
and
add
popa
inc
nop
xor
ret
inc
dec
popa
add
adc
shl
dec
push
cli
jo
pushf
scas
out
sar
dec
aaa
add
jo
je
imul
ins
loopne
adc
dec
mov
mov
jbe
rcl
ret
std
cmp
inc
mov
push
or
daa
add
pop
int3
sahf
adc
mov
adc
dec
scas
xchg
mov
shl
(bad)
hlt
cmp
dec
add
ins
or
sbb
mov
inc
repz
movs
add
adc
pushf
js
jb
popa
pop
add
or
push
xchg
xor
fadd
test
clc
hlt
iret
dec
mov
push
jb
ins
test
cmp
cwde
pusha
or
cmp
dec
sub
bound
outs
(bad)
push
mov
fmul
test
sub
ins
out
ss
cmp
fisub
adc
or
inc
and
outs
sbb
lahf
add
xchg
mov
or
push
aaa
adc
add
sbb
fdivr
int3
push
jecxz
scas
test
pop
popa
dec
arpl
jns
lea
(bad)
test
cld
inc
jmp
or
add
ret
inc
loopne
mov
ret
sti
int3
add
dec
dec
xchg
and
call
repz
cmp
int3
adc
sub
fcmovne
or
pop
pop
sar
rcr
cmp
jbe
push
add
cmp
push
fiadd
add
cmp
cld
mov
je
mov
aad
hlt
pop
pop
ror
(bad)
(bad)
aas
sbb
and
not
popa
(bad)
ins
stos
add
xor
data16
popa
add
jbe
cdq
daa
mov
and
ja
adc
xor
dec
jl
pop
sub
arpl
jg
cmp
mov
xchg
dec
jo
lahf
scas
pop
push
or
xor
lock
lock
jmp
push
mov
xchg
fdiv
inc
adc
cmp
dec
clc
push
and
adc
jns
add
or
rcr
in
(bad)
in
or
xor
jne
lea
ror
enter
shl
scas
dec
and
jle
and
addr16
add
jo
push
hlt
cmps
dec
das
dec
mov
mov
pusha
pop
or
and
adc
cwde
sbb
mov
mov
shl
scas
and
sub
iret
xlat
in
and
and
shr
cmp
or
mov
mov
push
cli
cmp
push
cmovae
mov
add
rcl
mov
or
jae
(bad)
and
shl
dec
pop
and
loop
repnz
movzx
add
cmp
or
push
cmp
(bad)
jne
pop
xlat
bound
pop
inc
outs
mov
out
pop
clc
sub
sub
out
add
push
xor
inc
rol
sbb
mov
shl
popa
push
pop
mov
mov
pop
cmp
popw
mov
in
retf
call
cmc
mov
dec
pop
add
ss
(bad)
xchg
push
push
push
je
popa
aaa
push
(bad)
jbe
sbb
xor
sbb
add
mov
adc
cmp
sub
mov
and
fstp
fsubr
mov
inc
add
popa
aas
cmp
(bad)
mov
lock
jo
mov
add
pop
or
inc
sbb
mov
push
lock
mov
inc
js
jns
scas
xchg
pop
or
dec
mov
popa
sbb
pop
sar
inc
clc
cmp
or
add
mov
cmp
or
jle
add
push
or
jb
call
pop
sub
jo
jno
inc
or
sbb
or
push
xchg
mov
lea
pushf
ret
jmp
test
or
pop
push
aaa
xchg
lock
or
push
(bad)
or
dec
lock
hlt
or
leave
je
sbb
mov
test
dec
fnsave
call
pcmpgtw
fs
call
inc
ret
scas
or
shr
inc
out
mov
add
imul
xchg
hlt
(bad)
popf
pop
pushf
and
dec
in
ja
add
mov
test
xor
movs
push
xor
jge
movzx
and
and
sti
add
xlat
imul
fadd
int
stos
mov
inc
sub
push
in
int
(bad)
dec
test
clc
adc
test
inc
or
push
sti
fist
pop
or
or
jne
adc
sub
push
dec
or
scas
jmp
out
ja
or
jmp
mov
jle
ror
rcl
pop
out
pusha
pop
loopne
scas
in
add
pusha
inc
mov
pop
iret
lods
pop
inc
push
sub
mov
iret
sbb
adc
ret
sub
push
outs
out
in
cmp
jne
mov
jmp
push
add
test
call
xchg
call
pop
in
push
fdivr
sete
ret
and
or
jbe
jmp
inc
sub
data16
adc
repnz
mov
sub
sbb
ds
dec
push
loopne
inc
jns
mov
adc
cmp
sub
xor
push
push
inc
mov
call
outs
adc
test
push
scas
mov
sbb
lods
xor
xchg
data16
pop
sub
adc
rol
add
or
or
fs
adc
add
ror
push
mov
or
ins
pop
and
push
adc
nop
pop
pop
pusha
pushf
inc
enter
xor
shl
aad
stos
scas
arpl
scas
sub
scas
dec
push
adc
nop
and
jne
xor
mov
cmp
pop
push
add
shr
dec
nop
ins
push
jge
adc
push
and
daa
ja
bound
push
es
ja
dec
rol
or
loopne
push
das
ins
cmps
sub
dec
lock
les
(bad)
call
ja
and
dec
xor
push
clc
sbb
add
jge
cmp
xlat
out
push
push
dec
je
sbb
ror
fwait
cdq
sbb
out
je
(bad)
mov
outs
call
add
cld
adc
cmp
jne
dec
out
popa
xor
daa
push
push
test
stos
getsec
pcmpgtw
adc
push
gs
inc
or
mov
cmp
fs
out
add
call
sub
mov
and
sbb
mov
jp
mov
jnp
sahf
mov
aad
pop
and
pusha
or
push
cmp
pushf
push
adc
mov
jbe
or
sbb
and
rol
les
mov
or
icebp
les
push
mov
mov
cmp
dec
imul
lock
jo
cwde
movs
out
out
sub
cmp
mov
adc
jne
ins
jo
es
mov
pusha
aaa
xchg
push
sbb
ret
outs
daa
inc
or
sbb
shl
mov
mov
xchg
xchg
sub
mov
aaa
sbb
pop
iret
hlt
push
call
addr16
pushf
mov
mov
call
cmp
xchg
ret
push
pushf
out
jo
pusha
cld
adc
push
cli
ds
sub
dec
and
xor
dec
push
push
ja
push
out
test
push
xchg
gs
xchg
das
dec
pop
test
and
aas
xor
push
jge
add
loope
out
setne
inc
stos
inc
push
in
stos
lods
fistp
push
xor
sub
in
sbb
push
and
inc
imul
ja
sti
cmp
inc
lods
sub
push
push
and
dec
xor
inc
(bad)
or
gs
jb
jo
jns
jae
fcom
and
fdivr
mov
mov
gs
into
arpl
push
aam
sti
aam
outs
and
xor
push
adc
stos
push
cmps
cmp
imul
push
inc
mov
aaa
retf
ds
xchg
push
sub
ds
outs
cmp
cmp
push
xor
or
(bad)
sbb
fsubr
loop
jae
mov
and
test
lods
push
mov
idiv
sbb
push
mov
push
fild
iret
mov
test
jmp
push
push
mov
add
mov
inc
push
popa
imul
push
xchg
jb
push
jns
sub
pop
inc
rcr
add
ja
dec
mov
adc
arpl
pop
jmp
add
popa
jae
imul
jnp
jne
jb
push
adc
mov
push
add
sub
popa
(bad)
retf
mov
push
retf
ret
outs
jp
lock
or
add
push
scas
add
add
push
dec
or
or
cdq
ret
add
xor
repz
dec
push
daa
(bad)
mov
adc
and
pop
dec
and
scas
mov
sar
push
mov
add
fmul
push
and
movs
xor
lds
push
inc
inc
cmp
lds
aas
xchg
or
test
mov
or
outs
arpl
fcomp
popa
add
aaa
or
sbb
pop
cmp
outs
inc
test
push
mov
stc
rcl
aad
or
mov
or
loopne
loopne
sub
inc
stos
hlt
mov
cmp
sbb
dec
ins
pop
call
cmp
je
mov
fcmovnbe
clc
jnp
mov
(bad)
pusha
mov
inc
sbb
mov
or
inc
and
pusha
xchg
or
add
jo
fstp
add
inc
jl
and
outs
jbe
xchg
pop
mov
clc
dec
test
mov
xor
inc
hlt
fwait
or
je
retf
xchg
repnz
int3
sbb
jo
mov
dec
hlt
mov
call
jne
xchg
mov
lea
in
xchg
adc
sub
call
jo
out
aas
and
call
je
inc
in
jmp
mov
xor
mov
test
add
xchg
fwait
push
nop
xor
inc
ins
test
mov
mov
fmul
push
dec
push
push
or
punpcklbw
loopne
jno
out
les
jg
outs
lods
mov
mov
lea
push
mov
pop
mov
ss
mov
and
xchg
dec
pause
mul
nop
mov
leave
sbb
ror
push
or
jecxz
dec
pop
jbe
(bad)
jmp
cmp
je
mov
adc
mov
pusha
imul
fiadd
fnsave
ins
mov
xor
jne
jo
push
sbb
je
psllw
jne
test
mov
cwde
test
add
movs
addr16
cmp
or
inc
movs
test
jo
sti
add
push
or
jbe
lea
push
ret
push
jl
or
sbb
stos
jne
mov
push
add
cmps
fs
mov
sub
mov
push
(bad)
movs
and
mov
stos
into
or
test
jl
inc
xor
popf
cmp
movmskps
or
rol
ja
mov
add
mov
aas
aaa
inc
add
dec
jne
in
or
push
mov
dec
in
je
leave
loopne
loopne
sahf
leave
mov
or
mov
sub
inc
lods
sub
and
cdq
and
mov
and
fild
sub
and
fistp
enter
and
mov
sub
dec
icebp
xor
xchg
sub
pushf
mov
je
push
cmp
imul
sub
mov
inc
or
jp
and
mov
jg
push
fsubr
imul
push
jnp
pushf
mov
add
test
stos
arpl
pop
imul
dec
sbb
xor
pop
push
mov
outs
adc
ja
cmps
les
(bad)
xchg
cli
push
jbe
pushf
sub
xchg
ins
aaa
fisub
sbb
ja
jmp
mov
iret
fs
shl
arpl
push
and
mov
cmc
push
cmp
lahf
adc
inc
jp
sbb
dec
xchg
inc
sbb
xlat
pusha
lock
sbb
cmp
jne
aaa
les
push
cli
mov
pop
mov
xchg
es
push
je
adc
es
in
outs
ja
sar
push
ins
jbe
adc
cmp
cmp
repz
pusha
inc
push
in
inc
ror
data16
push
loop
add
add
inc
mov
push
and
mov
sti
(bad)
(bad)
pop
lldt
pop
inc
js
test
adc
leave
mov
not
sbb
outs
sub
jne
cs
jo
sbb
or
test
cmp
cmp
inc
and
and
sbb
push
push
or
js
xor
mov
mov
pop
jge
adc
mov
into
stc
push
or
sbb
int3
test
mov
sbb
push
mov
jo
mov
inc
mov
movs
cmps
push
or
mov
mov
cmp
loope
out
(bad)
mov
inc
test
das
sbb
jg
loopne
pop
sub
jb
je
push
push
jmp
mov
jmp
mov
arpl
cld
add
inc
mov
jmp
ja
je
push
cmp
je
inc
sbb
xchg
adc
push
add
mov
(bad)
test
out
xchg
test
out
addr16
jge
inc
iret
pop
and
push
cmc
and
inc
out
or
gs
and
adc
packssdw
sub
xor
cmp
sete
fstp
mov
adc
sub
sub
aaa
mov
jecxz
sub
stc
xchg
push
mov
adc
pop
or
stos
mov
ret
mov
mov
sub
jne
sbb
aaa
ret
ins
mov
cwde
jmp
push
add
out
je
jne
xor
movs
in
cmp
or
pop
cmp
inc
es
rcl
mov
add
or
dec
lods
pop
cdq
cmp
sbb
jp
mov
cdq
fnsave
mov
je
out
push
sub
dec
push
(bad)
out
pop
xchg
pop
ins
out
mov
loope
nop
dec
push
movzx
lods
mov
mov
mov
or
imul
jg
add
inc
adc
outs
sub
sub
sbb
adc
push
or
inc
cmp
ins
add
inc
movs
shl
mov
jne
fiadd
adc
shl
dec
cmps
in
push
pushf
xor
or
(bad)
mov
mov
je
sbb
fisubr
shl
and
aas
sub
jle
inc
(bad)
(bad)
and
adc
int
sbb
sbb
test
mov
(bad)
cmp
in
sub
movs
sub
(bad)
mov
sbb
or
fcmovnbe
enter
(bad)
(bad)
push
push
mov
mov
xor
inc
sbb
mov
shl
or
clc
inc
(bad)
out
add
sbb
or
xchg
fisttp
jecxz
xchg
and
arpl
ins
xor
mov
stos
mov
and
mov
sub
push
lock
xchg
inc
dec
idiv
mov
cmp
add
out
jecxz
outs
pop
pusha
pop
cmp
ds
push
xor
hlt
and
out
lods
xchg
inc
pop
je
pop
xchg
pop
je
clc
cmp
pop
test
rol
call
sahf
add
push
fs
cwde
mov
add
fisub
add
cmps
popf
aas
pop
(bad)
fsub
inc
mov
(bad)
jno
mov
dec
add
(bad)
mov
sub
je
push
orps
or
ins
cwde
push
das
add
inc
pop
inc
add
pop
jmp
inc
js
pop
cmp
xchg
sbb
imul
push
mov
adc
cmps
sbb
pop
dec
daa
fabs
fmul
push
pop
dec
sub
add
out
mov
sub
push
push
mov
add
inc
push
in
mov
mov
iret
fisttp
pop
cmp
ins
push
inc
fimul
std
mov
or
or
sbb
jne
or
add
push
xor
inc
ins
(bad)
clc
scas
mov
push
or
add
(bad)
dec
jo
scas
in
jo
dec
adc
push
fs
dec
cmp
adc
xor
pop
mov
cmp
xor
pop
ret
sbb
mov
xor
add
pop
add
or
(bad)
clc
mov
sti
dec
and
sar
fisttp
mov
(bad)
adc
shl
pop
xor
clc
mov
aas
or
sub
push
add
retf
add
inc
jo
add
jo
outs
inc
movs
test
sbb
push
clc
dec
cmp
rcr
mov
sub
sbb
mov
out
(bad)
mov
inc
inc
mov
fmul
fstp
xor
jno
mov
or
add
or
adc
adc
hlt
cmp
sub
cmp
adc
jne
nop
pop
jg
rol
es
pop
sub
(bad)
mov
in
pop
bound
or
cmp
and
add
ret
cmps
cwde
mul
mov
add
sbb
cmp
std
mov
add
push
inc
dec
jne
xor
jnp
inc
push
rcl
push
(bad)
mov
xchg
cmps
jns
test
fdiv
push
imul
out
mov
xchg
test
add
push
stos
ret
shl
(bad)
mov
pop
ror
mov
mov
cmp
or
or
mov
movs
in
mov
and
out
xchg
loop
add
ret
adc
add
cmp
inc
sub
inc
pop
test
adc
adc
pop
das
pop
inc
and
lds
sar
cmp
test
daa
test
int3
shr
mov
mov
ins
iret
inc
sbb
outs
cmc
xchg
stos
mov
test
retf
je
je
inc
xchg
je
lea
or
call
call
push
outs
mov
cwde
xor
cmps
cmp
add
xor
loopne
sbb
inc
jbe
sbb
faddp
dec
clc
pop
sbb
push
fmul
mov
fdivr
cmp
fsubr
cmp
add
lahf
ins
and
inc
sub
ror
push
inc
jnp
cmps
xchg
cmp
jbe
and
push
xor
pop
icebp
test
pop
retf
and
sbb
ins
and
pop
mov
cmp
and
into
popa
mov
xor
jnp
mov
xchg
js
loop
push
movs
dec
lahf
retf
adc
in
loop
push
mov
arpl
retf
mov
dec
int
cwde
cmp
nop
adc
cmp
frstor
aam
cld
add
mov
sahf
xchg
jmp
add
inc
(bad)
or
add
mov
adc
add
cmps
inc
nop
and
aas
add
pop
aas
jb
add
popa
xchg
adc
test
sub
adc
push
jns
jl
inc
cmp
dec
push
mov
jo
and
sbb
add
mov
inc
xor
push
add
mov
adc
loop
push
sbb
xor
add
(bad)
add
cmp
pop
(bad)
out
jmp
imul
and
clc
sbb
xor
scas
jmp
clc
mov
mov
xchg
cld
dec
mov
sbb
push
inc
sbb
inc
aad
push
out
out
mov
and
inc
rcr
imul
(bad)
or
mov
mov
add
add
push
loope
clc
ret
add
xor
icebp
stos
test
dec
adc
mov
sar
or
xchg
pusha
and
ss
aad
mov
and
and
push
(bad)
or
pusha
hlt
fstp
mov
sbb
inc
fild
ror
pop
jmp
push
add
sbb
addr16
sub
push
push
pop
jl
aam
or
add
xor
aas
fcomp
cld
mov
aaa
ror
(bad)
dec
rcl
idiv
xor
imul
fsub
cli
mov
cld
pop
pop
add
jno
iret
xor
push
imul
pushf
mov
mov
or
adc
addr16
mov
mov
sti
add
addr16
adc
dec
shl
shl
hlt
and
int
or
add
jg
addr16
loope
pushf
int
fdivr
loopne
add
loop
push
mov
imul
rep
jo
xchg
jb
or
sub
cmp
push
(bad)
div
cmc
add
jle
data16
std
cmp
loopne
adc
jl
js
scas
mov
fistp
inc
nop
jbe
aas
scas
aas
jge
movs
mov
push
sbb
sbb
sub
push
(bad)
mov
xchg
sbb
adc
push
xlat
mov
inc
and
adc
inc
test
test
(bad)
into
mov
pop
clc
into
push
mov
imul
inc
and
push
or
xor
sbb
cmp
jl
fst
fdivr
jne
jo
mov
push
sbb
fmul
cld
inc
mov
add
pop
mov
jmp
or
sbb
in
adc
jmp
rcr
iret
rcr
mov
pop
repz
cmps
int3
or
inc
cmps
sbb
pusha
or
sub
or
xchg
xchg
jecxz
adc
cmp
fmul
ja
or
mov
pop
pushf
mov
jmp
das
mov
mov
shl
mov
ss
(bad)
and
jne
das
adc
add
xor
push
add
push
loopne
(bad)
pop
xor
outs
adc
pop
loopne
jne
push
movsx
add
mov
and
jne
push
or
add
lock
(bad)
mov
rol
mov
add
ret
jo
stos
loopne
push
es
stos
adc
dec
pop
mov
test
es
cmp
test
sub
xchg
add
inc
pop
sbb
inc
inc
(bad)
cli
or
test
jp
arpl
mov
pop
add
ja
scas
add
je
(bad)
and
mov
pop
xchg
ret
xor
mov
adc
lods
das
sub
cmp
(bad)
ins
sti
pusha
xor
add
ins
inc
rol
inc
xchg
sbb
or
dec
mov
jo
push
(bad)
fistp
out
sbb
sti
xor
dec
pop
cwde
add
mov
jmp
or
xchg
push
icebp
(bad)
mov
inc
add
push
adc
push
fidiv
(bad)
mov
mov
cdq
cmp
push
jns
mov
mov
call
add
mov
(bad)
jge
add
outs
or
idiv
jns
and
aas
jge
and
je
jmp
pop
shl
xor
(bad)
push
ror
std
sbb
push
rol
mov
mov
arpl
scas
aad
xor
icebp
or
stos
js
fs
add
sub
dec
sar
lea
cmp
cld
cmp
pop
shl
lods
inc
rcl
push
pusha
cdq
addr16
(bad)
loopne
cmps
sbb
movzx
sbb
add
dec
call
add
xchg
add
popf
push
out
add
shl
pop
mov
pop
mov
mov
jg
add
pusha
add
test
xchg
or
adc
fld
leave
push
jmp
add
pusha
xor
or
dec
lock
mov
or
push
and
nop
adc
pop
cmp
xchg
or
xor
dec
fisttp
call
sbb
or
xor
adc
sahf
enter
jnp
add
in
xchg
add
test
and
addr16
and
ror
sbb
adc
and
push
scas
or
enter
cmp
mov
loopne
jne
int
push
cmovl
rol
push
push
(bad)
cmp
adc
(bad)
or
xor
mov
cmp
adc
fs
rcr
popa
nop
adc
mov
inc
xchg
pop
retf
lock
jl
inc
cld
jmp
push
xchg
mov
push
out
loope
push
call
(bad)
fimul
mov
adc
pop
pop
jge
adc
fist
mov
mov
icebp
call
cmp
dec
js
jge
xchg
loop
add
push
in
sahf
mov
stos
mov
pop
fsubr
jmp
cwde
push
xchg
adc
adc
lock
jmp
xor
or
add
cmps
enter
mov
inc
outs
jne
gs
je
jb
adc
jmp
mov
das
or
sub
mov
in
dec
outs
jbe
dec
gs
pop
pop
pusha
xchg
jb
xchg
or
or
add
fadd
data16
pop
pop
lods
lods
rol
xlat
adc
daa
sbb
(bad)
test
xor
jae
inc
outs
ins
ins
arpl
outs
jae
jo
lea
xor
xor
out
add
or
push
ds
inc
jne
mov
lahf
xchg
jbe
lock
and
xchg
mov
jg
push
scas
or
xchg
mov
imul
push
dec
push
cmps
jg
add
bound
inc
outs
loopne
inc
and
sbb
jge
pop
or
sub
mov
je
pop
out
xchg
mov
pop
push
outs
inc
adc
or
add
sub
add
or
test
add
pop
cmp
mov
mov
adc
push
dec
imul
cs
pop
outs
push
push
add
shr
ins
retf
leave
aas
or
jge
mov
(bad)
dec
xor
jo
xor
and
loope
test
(bad)
push
popaw
jne
je
imul
adc
lds
fisttp
or
inc
adc
(bad)
(bad)
fsubr
sbb
test
push
or
push
or
cmps
pushf
inc
adc
pop
mov
push
push
adc
pushf
adc
sti
enter
xor
sub
inc
hlt
ins
out
sahf
mov
and
mov
int3
mov
push
sub
bound
lahf
loope
xlat
xchg
cmps
aam
mov
adc
cmova
into
push
add
sub
cmp
popa
addr16
addr16
push
add
sbb
enter
or
mov
mov
or
ins
dec
add
je
adc
and
push
xor
ret
jne
in
add
int
mov
hlt
ins
shl
sbb
push
add
into
or
adc
imul
mov
scas
add
sbb
(bad)
inc
mov
sahf
xlat
pop
std
popf
or
push
mov
mov
outs
inc
repz
hlt
inc
add
iret
js
sbb
lahf
sub
int
mov
repnz
sbb
xor
jnp
ret
or
cmp
addr16
mov
adc
jge
and
jl
cmp
add
pop
mov
inc
scas
push
add
push
inc
cmps
inc
jno
or
inc
xchg
sub
adc
fdiv
(bad)
fisttp
and
sub
adc
mov
sbb
cs
fimul
test
and
adc
or
fwait
ins
inc
shl
ds
pop
pop
or
sbb
test
outs
mov
adc
in
in
rcr
ins
test
cmps
push
test
sahf
mov
add
test
and
cli
mov
pop
mov
dec
clc
mov
xor
out
push
xchg
push
push
fwait
sub
mov
cli
add
pop
test
jae
ins
aad
mov
imul
xor
push
mov
dec
lea
add
out
cmc
mov
or
add
add
shr
jo
cvtps2dq
sbb
push
dec
(bad)
cld
push
inc
cs
mov
in
outs
(bad)
loop
stos
jns
jb
bound
cmp
ins
mov
pushf
pushf
mov
fsub
inc
ins
mov
(bad)
daa
daa
and
scas
dec
xor
mov
outs
fist
mov
jle
or
pop
in
push
xchg
mov
add
push
fwait
push
shl
mov
mov
xor
xor
push
push
mov
fisubr
inc
add
cmp
mov
movs
pop
or
sbb
pop
pop
arpl
shl
xor
mov
test
(bad)
dec
dec
add
addr16
push
adc
mov
add
push
popa
jg
mov
lds
jg
cmp
adc
mov
push
mov
mov
jne
arpl
bound
add
div
sub
jmp
ins
out
cmp
xor
pop
mov
outs
or
outs
add
fisub
jbe
jl
mov
shl
fcomp
push
add
pusha
jo
cmc
enter
add
mov
dec
pop
dec
xchg
mov
push
adc
fs
or
ror
or
mov
test
das
leave
inc
xor
fstp
mov
jge
add
arpl
xor
fcomp
inc
or
push
clc
pop
dec
jae
imul
xchg
push
test
test
add
inc
mov
xchg
or
mov
inc
jne
add
rcr
lea
add
xor
or
pop
and
pop
inc
push
in
jle
sbb
push
xor
or
xchg
jae
dec
clc
push
add
jae
dec
add
cwde
orps
xchg
xchg
xor
pop
xor
mov
xor
sbb
or
ja
sbb
mul
inc
inc
jae
mov
shr
(bad)
call
or
dec
popa
inc
aad
ret
es
ret
add
add
sar
or
aaa
add
je
and
shl
cmps
call
je
loopne
dec
push
push
adc
jbe
pop
push
hlt
imul
pop
les
push
or
pop
dec
push
sub
adc
adc
outs
test
mov
or
mov
add
ins
or
retf
dec
sbb
and
or
adc
and
popa
pop
add
xchg
or
ror
xor
xchg
or
ins
adc
lahf
test
cmp
xor
sbb
test
sbb
(bad)
lds
fucomp
pop
fcom
mov
pop
and
and
inc
or
imul
mov
xchg
and
(bad)
pop
and
sbb
add
in
mov
mov
sub
or
sub
sub
add
lea
js
push
aaa
scas
stos
nop
push
jmp
popa
push
arpl
loope
inc
inc
(bad)
js
stc
adc
xor
ret
push
arpl
aaa
inc
ret
dec
push
ins
rcr
les
add
pop
int3
pop
push
test
aas
loopne
(bad)
xor
jmp
call
or
push
(bad)
aas
sub
jae
pop
movs
push
xchg
or
retf
mov
jg
mov
add
inc
bound
or
sbb
ins
fcomp
or
sub
or
cmp
pushf
push
mov
dec
xchg
jbe
add
shl
push
xlat
stc
or
push
stc
daa
cmp
stos
icebp
mov
jmp
add
push
out
sub
push
ss
sub
inc
or
push
add
pop
push
xor
ins
inc
push
add
daa
(bad)
mov
retf
ret
shl
mov
mov
push
adc
(bad)
or
mov
or
mov
rcl
add
adc
or
or
push
mov
outs
inc
add
mov
push
add
ja
pushf
test
das
sub
idiv
push
mov
lock
inc
mov
add
sti
xchg
add
cwde
movs
pop
push
adc
add
sub
or
mov
mov
add
push
pushf
into
mov
add
mov
dec
cmps
sub
mov
outs
test
push
xor
dec
fwait
cmp
pop
sub
cmps
test
pop
jne
mov
jo
out
push
xchg
pop
inc
push
add
aaa
stos
ficomp
pop
in
adc
aas
inc
js
(bad)
push
push
imul
jmp
(bad)
inc
jle
push
adc
cmp
scas
cmp
scas
jne
push
mov
cmc
sub
mov
pop
stos
mov
loop
loopne
sub
sbb
test
in
imul
loope
shl
pop
or
pop
mov
ss
jb
jnp
mov
add
jnp
pop
add
rcr
lock
inc
movs
jmp
xchg
mul
retf
cmp
in
leave
push
sub
push
push
loopne
cmps
xor
jns
or
adc
push
cmps
xor
mov
cmps
imul
add
lods
(bad)
loopne
test
hlt
cvtps2pi
addr16
das
cmp
rol
vmread
xor
jle
sbb
in
in
ds
hlt
jb
xor
sub
je
idiv
cmp
jns
les
cmp
cmc
sbb
push
mov
sahf
pushf
aad
(bad)
ss
retw
dec
dec
xchg
fidivr
(bad)
punpcklbw
fstp
jno
xchg
pop
mov
pop
xchg
cmc
punpckhdq
xchg
add
out
mov
jg
cmp
xchg
call
push
add
mov
mov
mov
pop
das
pusha
and
add
or
mov
lods
jg
inc
add
int3
sbb
adc
stos
add
add
ret
ins
push
sbb
outs
or
ss
add
movs
mov
inc
add
mov
mov
push
xchg
push
xchg
xor
mov
add
xchg
or
or
inc
mov
sbb
add
add
ss
add
nop
call
xor
rol
or
inc
inc
dec
push
mov
add
dec
add
push
add
ret
mov
inc
and
add
shr
add
jae
push
and
sub
push
jge
inc
ss
dec
add
and
rcr
xor
fsubr
mov
or
and
lods
fild
enter
mov
push
ficom
stc
bound
add
mov
cmp
xor
xchg
test
push
mov
push
mov
add
mov
pop
inc
xor
inc
inc
add
or
daa
add
rcr
in
push
mov
mov
add
and
and
sbb
mov
loopne
mov
xor
jns
sub
sbb
aaa
test
mov
mov
fdiv
jle
mov
and
xchg
(bad)
enter
sub
mov
and
lea
jnp
push
add
or
cli
sbb
mov
pop
bnd
mov
mov
add
or
push
fldenv
cmp
add
ins
xchg
sbb
or
icebp
pop
xor
jns
gs
lock
cs
jmp
and
mov
retf
lods
test
(bad)
add
xlat
inc
cmp
sbb
es
fisub
add
imul
dec
enter
xor
sbb
test
or
push
add
mov
js
dec
sub
ja
pop
inc
xor
call
xlat
inc
adc
inc
jne
or
jb
jl
push
xchg
push
pop
ror
icebp
icebp
or
xchg
icebp
daa
lahf
arpl
cmp
xchg
jne
or
fmul
xor
jb
fwait
dec
lods
dec
inc
sub
adc
dec
add
dec
scas
cmps
jae
mov
daa
rol
or
and
jno
pop
mov
mov
mov
int3
add
inc
int
mov
pop
sbb
xchg
sar
imul
mov
jno
not
dec
jo
cmp
and
out
mov
iret
pop
sub
dec
push
out
pop
sbb
imul
mov
xlat
pshufw
add
cmp
inc
add
add
mov
in
test
ror
mov
add
add
int
mov
sbb
mov
sub
cmp
aaa
push
or
pop
iret
pop
cmc
inc
cmps
(bad)
adc
(bad)
nop
add
mov
out
push
pop
xor
das
push
jne
mov
outs
sar
push
xor
pop
scas
jne
pop
das
jno
xchg
invd
call
add
inc
adc
fidiv
mov
fsub
ror
pop
xor
dec
fnstsw
fnsave
pop
xor
xchg
clc
xchg
jne
push
shl
pop
sbb
dec
inc
lock
sbb
pop
test
push
jo
xlat
pop
call
sar
out
push
outs
fcomp
call
shr
rol
jno
(bad)
aam
ins
xchg
mov
out
fidivr
cmp
mov
push
das
shl
mov
add
or
xor
fmul
add
or
data16
or
shr
das
xchg
fstp
and
sub
aad
inc
add
movs
push
jae
add
cs
cs
dec
dec
outs
jg
xchg
daa
daa
daa
xchg
jecxz
fmul
xchg
xchg
xchg
push
mov
leave
leave
inc
mov
push
(bad)
in
fs
sahf
ret
out
jb
repnz
xor
cmp
jns
in
fmul
cdq
or
aas
fisttp
ja
ja
(bad)
shr
sbb
push
or
cs
xchg
es
imul
sub
aad
cmp
jo
fisttp
push
inc
pop
loopne
sub
(bad)
jno
or
popa
mov
sub
inc
xor
or
sub
mov
add
add
fwait
push
add
jne
in
bound
cdq
jo
ins
push
or
add
outs
or
movs
push
rcr
mov
sub
sbb
jae
sub
or
cmp
xor
add
jno
sub
rol
lea
leave
call
and
loope
pop
push
call
je
rol
adc
push
sbb
xor
iret
jo
test
add
sub
jo
sub
inc
sub
pusha
add
loopne
sub
adc
pusha
mov
add
loopne
into
clc
push
jae
xlat
push
or
dec
push
cwde
push
add
add
push
xchg
sub
cmp
jne
sub
mov
mov
ror
nop
sub
add
sub
pop
add
cmp
cmp
add
dec
mov
loopne
sub
push
or
sub
mov
test
xchg
jb
bound
adc
dec
sub
sbb
jno
add
rol
jns
inc
sbb
sub
pop
nop
sub
out
call
xchg
mov
adc
add
(bad)
xor
popa
dec
or
movs
push
popa
sub
jmp
cmp
push
add
sub
imul
or
(bad)
mov
and
add
mov
call
pop
pop
pusha
adc
sub
pop
adc
push
sub
sbb
sub
or
xlat
sub
fidivr
add
(bad)
pop
je
in
or
sbb
pop
ds
loope
enter
xchg
out
sahf
jno
adc
mov
ds
dec
add
shr
outs
arpl
push
test
stos
addr16
mov
outs
mov
sub
sbb
or
sahf
popa
movups
or
push
test
imul
sub
add
lock
jb
mov
outs
es
shl
push
pop
jo
sub
push
je
outs
addr16
fnstenv
push
sbb
mov
ja
xchg
mov
and
clc
add
or
in
rcl
enter
cld
jecxz
push
xchg
popa
mov
mov
dec
mov
js
pusha
por
pushf
data16
adc
and
aas
mov
cmp
nop
in
pusha
je
add
push
sub
int3
(bad)
stos
test
adc
(bad)
(bad)
jg
rcl
add
push
push
push
test
je
adc
call
mov
mov
dec
mov
push
push
mov
xor
mov
xchg
dec
mov
idiv
test
jne
adc
inc
jmp
sbb
rol
sbb
mov
push
test
jle
mov
sbb
mov
cmps
in
add
mov
add
in
inc
cmp
data16
je
loope
fs
xchg
add
or
jmp
jg
pop
pop
pop
pop
pop
ret
out
fmul
dec
pop
loopne
lock
rcr
xor
push
add
fimul
or
and
movs
jb
push
mov
pop
jnp
push
cmp
xchg
jbe
mov
std
outs
lahf
jge
push
cld
inc
aam
mov
mov
add
add
jle
inc
mov
push
fucomi
jbe
inc
inc
shl
xor
jbe
add
mov
mov
call
mov
shr
push
lods
cwde
pop
cs
cmp
jge
mov
gs
cmp
dec
hlt
jne
and
cld
sti
or
add
mov
add
dec
shr
aaa
push
je
push
push
add
shl
push
je
je
cmp
loop
add
cmp
adc
dec
inc
in
mov
int
call
outs
js
jle
scas
push
ret
(bad)
sub
xchg
mov
pop
ret
cmp
cmp
add
or
xor
cli
pop
jg
push
mov
inc
sub
lock
mov
ret
das
int
and
inc
and
dec
mov
sub
pop
jnp
adc
push
dec
inc
push
push
and
xlat
xor
repz
lods
xor
mov
inc
lods
add
inc
push
sti
aaa
je
dec
pusha
jl
inc
xor
push
mov
data16
xchg
in
pop
fincstp
mov
cmp
sbb
xor
ror
mov
pop
mov
nop
fisttp
mov
out
sbb
push
or
or
adc
jmp
add
inc
mov
push
dec
loopne
clc
fidivr
retf
inc
adc
lds
adc
xchg
shr
pop
sbb
(bad)
pop
out
in
rol
push
mov
rcl
outs
out
nop
push
or
add
imul
scas
pop
retf
sti
adc
pop
mov
mov
pop
jg
mov
popf
scas
mov
adc
and
out
fwait
or
dec
and
dec
sub
dec
mov
ds
jmp
cmp
js
mov
mov
jle
adc
add
adc
jb
sbb
pop
sub
dec
push
or
fld
mov
bound
fcomi
ret
and
xlat
jo
sub
loop
and
xor
adc
(bad)
retf
mov
cmps
cld
push
add
inc
ret
add
into
das
mov
cmovnp
pop
lahf
and
or
cmps
fmul
out
push
mov
call
int
shr
and
push
sub
sub
ds
bound
xchg
pushf
cmp
fcomp
ds
scas
mov
in
not
in
in
push
in
clc
scas
jge
jl
add
xchg
push
xchg
sbb
adc
sbb
mov
dec
fmul
sub
mov
je
jmp
cmp
or
lock
jmp
and
add
cmp
je
outs
cmp
and
mov
or
pusha
or
enter
sbb
mov
pop
popf
xor
jno
mov
aam
fld
pop
fld
and
in
add
data16
popa
mov
jo
jno
mov
sbb
or
add
or
add
mov
push
xchg
pop
and
sar
adc
inc
je
inc
sbb
rcr
cmp
sbb
mov
cmp
jge
scas
add
mov
lock
in
mov
aaa
mov
or
call
add
sub
jb
push
je
dec
mov
aaa
sub
xchg
shl
sbb
sbb
jg
mov
dec
jb
jge
push
mov
pop
mov
add
jge
and
and
ins
sbb
enter
xor
mov
add
jmp
mov
pop
mov
cmp
fcomp
mov
pop
push
adc
test
fdiv
push
nop
mov
mov
or
inc
inc
aad
mov
pushf
sahf
xchg
pop
dec
pushf
xor
pusha
idiv
jle
add
add
popa
mov
mov
sbb
fs
arpl
or
jne
push
add
ret
xor
mov
and
adc
xchg
cmp
push
enter
rol
pop
sahf
mov
and
jecxz
popa
cmp
sbb
inc
sbb
add
cld
outs
push
jo
jnp
xor
test
jl
inc
mov
out
mov
ja
imul
push
fadd
xor
ror
jo
cmp
add
dec
jne
xlat
jne
mov
int3
push
dec
sbb
xor
not
sbb
push
push
inc
or
cli
pushf
std
loope
movaps
jmp
add
sub
inc
retf
iret
add
xor
add
xor
fild
sbb
jae
leave
or
and
out
mov
(bad)
icebp
aam
out
inc
add
push
and
add
sbb
je
dec
je
xor
mov
push
cmp
jmp
(bad)
mov
jmp
loopne
(bad)
mov
adc
push
or
out
push
ret
lods
ja
add
loopne
in
aam
dec
xor
lahf
or
xor
mov
fcmovnbe
in
mov
jbe
mov
jp
jle
xor
fcomip
call
sbb
xor
sti
jne
cmp
das
push
fidiv
lock
jl
(bad)
jo
mov
jmp
imul
mov
ins
xor
mov
or
leave
push
add
push
cli
push
cmp
test
and
cmp
std
xor
aas
adc
rol
sub
adc
sbb
xor
and
xchg
inc
jecxz
jecxz
sbb
jg
test
jl
inc
xor
dec
push
mov
int3
out
(bad)
fs
mov
dec
jne
dec
adc
imul
cmps
inc
jne
dec
adc
jns
or
ja
and
fcomp
mov
outs
call
test
loope
add
pop
in
sbb
mov
pop
scas
push
xchg
ret
cmps
sbb
leave
hlt
hlt
mov
and
jo
cmps
inc
jbe
jge
das
test
js
cmp
push
xchg
mov
sahf
add
lock
jecxz
mov
push
sahf
outs
cs
les
loopne
lahf
icebp
xor
adc
imul
outs
loop
movs
dec
shl
jmp
test
test
mov
ins
mov
(bad)
les
loope
sbb
xlat
iret
es
sbb
mov
or
dec
jne
jecxz
and
loope
stc
vpmadd52huq
pushf
fwait
ins
adc
iret
ja
sbb
push
or
aaa
adc
fisubr
xchg
cmp
or
push
ja
push
repnz
mov
sbb
xor
idiv
shl
pop
pop
dec
nop
cmp
cmp
test
je
and
jo
inc
mov
mov
push
aaa
test
mov
and
fld
mov
dec
jne
and
jg
xadd
ja
daa
jo
jmp
(bad)
xlat
or
jg
test
jp
add
sbb
pop
bnd
repnz
cli
sbb
xor
cmp
outs
repnz
into
jne
dec
inc
das
lock
mov
cmp
cwde
mov
mov
cmp
mov
pop
or
scas
add
inc
jne
mov
enter
cmp
lods
retf
jp
or
xchg
div
icebp
test
jne
xchg
test
push
inc
mov
aaa
add
push
cmp
xor
popf
lods
xor
sbb
cld
mov
add
add
arpl
gs
pop
push
push
add
std
fsubrp
adc
data16
je
imul
add
mov
adc
cmc
cmps
ret
popf
shr
xor
fstp
sbb
or
retf
out
mov
mov
call
xor
popf
add
pop
or
mov
mov
adc
inc
push
iret
dec
mov
loope
dec
test
inc
sbb
sti
mov
inc
cmc
fbld
sub
mov
adc
es
(bad)
mov
push
outs
adc
push
lods
inc
sbb
stos
push
sahf
nop
sbb
outs
je
int
add
movs
dec
pop
jle
in
pusha
stos
push
fmul
lea
arpl
fnsave
xchg
inc
jecxz
sbb
ror
ret
mov
pushf
mov
clc
push
mov
shl
or
aad
loopne
mov
push
xor
sbb
inc
ins
out
fsubr
nop
scas
cmp
clc
sbb
add
cmc
pushf
inc
dec
rcl
lock
xchg
and
xchg
inc
fcom
and
inc
push
inc
push
jno
mov
aas
pop
mov
(bad)
aas
leave
data16
pop
push
inc
lea
add
or
xlat
pop
es
pop
inc
sbb
jnp
cmc
mov
adc
xor
int3
pop
jge
adc
stc
mov
(bad)
mov
mov
or
mov
dec
sub
ret
pop
stos
gs
into
retf
xor
push
pop
add
lods
or
xor
sar
enter
inc
pusha
cli
or
dec
js
or
sbb
jl
pop
inc
inc
and
popa
inc
xor
add
rol
mov
sbb
es
jne
xchg
add
and
jl
xchg
add
mov
or
push
mov
aam
mov
rcl
sar
(bad)
mov
ja
mov
ror
div
inc
dec
xor
mov
fimul
sbb
lahf
aam
push
in
mov
add
or
push
outs
jmp
fild
and
fmul
rcl
test
cmp
scas
mov
bound
adc
ja
dec
cmc
je
movs
shl
mov
jmp
mov
mov
mov
ss
xor
ss
cwde
pop
push
inc
stos
lea
and
add
and
call
lahf
mov
and
xlat
aas
stos
cld
inc
push
xor
mov
mov
mov
aas
int
mov
inc
ja
out
scas
nop
inc
ins
std
inc
sub
je
push
or
and
push
jmp
lds
add
inc
push
or
out
mov
jg
xchg
sbb
or
or
push
jae
movs
add
(bad)
or
xor
pop
inc
cmp
or
inc
add
adc
test
or
retf
mov
aaa
pop
jle
xchg
xor
or
pop
out
js
loopne
pop
sbb
cld
xchg
add
add
adc
idiv
arpl
sbb
call
mov
pop
aam
add
add
setnp
xor
inc
inc
cwde
push
and
add
div
dec
xor
pop
and
xor
pop
xchg
jo
inc
dec
ins
xchg
je
(bad)
inc
add
push
inc
outs
jne
gs
je
jb
leave
or
inc
shr
dec
popa
outs
popa
addr16
sub
test
inc
hlt
dec
outs
jbe
dec
gs
xor
pop
inc
adc
adc
mov
jg
(bad)
pusha
adc
aaa
sbb
outs
jb
arpl
inc
outs
ins
mov
arpl
outs
jae
std
push
retf
add
cmp
or
outs
jg
icebp
pop
inc
jne
jb
je
js
cdq
xchg
add
dec
cmpxchg
pushf
sahf
xchg
enter
sbb
jb
push
lock
leave
xchg
xlat
loope
pop
lock
cmps
sbb
and
add
loopne
ja
lods
pop
inc
gs
jb
jns
ret
inc
ret
sbb
mov
popa
mov
cmp
mov
mov
call
sbb
xor
outs
inc
sbb
sbb
dec
inc
(bad)
shr
aas
outs
loope
sub
mov
outs
add
sbb
imul
pushw
inc
cmp
jecxz
aas
pop
push
add
movaps
inc
xor
xor
jo
dec
xlat
adc
adc
add
iret
ss
xchg
pusha
clc
popa
jne
je
pop
jo
jbe
xor
or
inc
cmp
fadd
add
push
cld
outs
fs
loopne
push
cmp
push
or
pop
add
push
inc
mov
iret
push
xcrypt-cbc
cmps
adc
not
sti
in
sbb
push
adc
adc
and
add
lds
jae
retf
sub
inc
(bad)
retf
add
sbb
outs
mov
pop
test
(bad)
push
inc
inc
scas
rcl
sti
pop
repz
adc
jp
mov
add
sub
inc
out
add
stos
pop
addr16
inc
add
ror
or
add
lock
jo
xlat
mov
punpcklbw
dec
adc
or
ins
dec
jae
dec
rcr
or
and
sbb
add
add
mov
cmp
mov
add
loopne
inc
sbb
push
add
or
fidiv
fsubr
ins
imul
inc
lods
lods
scas
add
cdq
mov
popa
xor
sahf
jns
mov
arpl
test
cvtpi2ps
inc
add
jo
ret
hlt
addr16
cmps
das
(bad)
loope
add
cwde
push
je
inc
sub
int
or
mov
in
les
mov
push
(bad)
rcl
jnp
out
das
add
mov
xor
outs
lock
pop
fld
add
inc
mov
clc
inc
test
dec
ss
hlt
jmp
add
sbb
xor
xchg
or
push
inc
jb
sbb
cs
mov
mov
sbb
sub
mov
inc
adc
aas
pop
daa
jmp
or
rol
test
sub
jl
(bad)
or
pop
adc
cmps
push
adc
sub
imul
and
xchg
fidiv
or
in
push
mov
dec
mov
int3
push
sbb
cmp
inc
test
popa
dec
fs
xchg
xor
ret
mov
sbb
imul
jns
jl
sub
mov
mov
add
inc
ja
sub
test
daa
mov
dec
mov
out
sub
fisubr
jnp
push
push
dec
hlt
nop
push
inc
cs
fs
push
fwait
or
cmp
in
in
mov
inc
call
xor
fmul
sysexit
in
leave
leave
push
jmp
rdmsr
repnz
ins
mov
jb
jb
xchg
mov
cmp
sbb
adc
rcr
adc
xchg
sbb
push
ja
pop
cmp
inc
push
push
mov
leave
leave
mov
mov
xchg
rcl
inc
cmp
push
in
dec
sbb
or
inc
or
cmp
aad
adc
or
push
xchg
cmps
imul
mov
shr
xor
mov
sbb
xchg
add
mov
dec
mov
dec
jae
mov
int
aam
adc
or
inc
push
popa
jg
bound
sub
out
loopne
enter
xor
js
inc
fs
out
aas
inc
sub
ins
jne
arpl
bound
push
adc
retf
test
push
sub
pop
ins
mov
add
loopne
or
outs
cdq
jbe
xor
inc
and
push
or
jbe
dec
xchg
movs
sbb
in
mov
cmc
add
inc
adc
push
int3
out
pop
or
add
pusha
ud2
or
dec
sbb
popa
push
adc
and
das
leave
call
gs
call
arpl
sbb
xor
loope
inc
lds
clc
add
jae
pop
pushf
jns
imul
test
add
push
or
mov
hlt
lds
jno
mov
ror
imul
adc
jns
lds
dec
add
or
js
mov
int
xlat
jmp
xor
push
jo
iret
xor
dec
clc
push
xor
add
jmp
cmc
test
add
xchg
pop
sub
cmp
xchg
or
or
and
cmp
(bad)
loope
gs
and
inc
sbb
and
imul
dec
add
popa
inc
nop
sub
sbb
inc
dec
popa
add
and
es
push
cli
jo
repz
add
cmp
add
bound
cmps
call
lods
ins
loopne
sub
dec
mov
push
push
mov
shl
mov
neg
mov
jb
int3
sahf
stos
sbb
inc
adc
xor
mov
outs
xchg
call
pop
sub
ins
or
or
cmp
jns
or
cdq
xchg
pusha
or
stos
adc
mov
stos
popa
pop
add
adc
call
add
dec
dec
test
lahf
(bad)
sbb
push
jb
ins
test
cmp
sbb
or
xor
sbb
dec
or
test
(bad)
(bad)
in
pop
ins
(bad)
retf
dec
jmp
and
inc
add
cmp
scas
xchg
mov
or
and
sbb
jmp
and
mov
test
mov
(bad)
ror
jns
mov
and
jmp
mov
xchg
sbb
popaw
push
arpl
jns
nop
out
mov
add
clc
inc
lock
aaa
scas
xor
push
xor
retf
mov
pop
cmp
ja
mov
mov
mov
test
jne
nop
jmp
mov
jmp
jo
call
add
ret
std
jns
sub
mov
loop
pop
dec
sti
div
fs
push
cld
mov
mov
mov
ins
jmp
or
jmp
fstp
or
aas
xchg
jo
add
sbb
inc
and
dec
add
arpl
pop
and
sub
pop
outs
push
mov
mov
mov
mov
mov
sbb
enter
inc
fisttp
inc
push
les
into
mov
mov
push
leave
adc
in
mov
dec
outs
push
dec
ror
fwait
jbe
push
adc
cmc
add
lock
dec
(bad)
adc
sub
jb
cmp
jne
cmp
add
and
cmp
mov
add
add
inc
lea
pop
mov
retfw
and
jmp
sbb
fs
loopne
adc
js
rcl
sub
sbb
daa
push
cs
sbb
shl
movhlps
sub
mov
push
push
int3
sbb
or
(bad)
jp
push
mov
add
mov
call
mov
mov
mov
mov
sbb
bound
enter
test
pop
idiv
push
add
mov
sub
loop
pop
inc
sub
in
add
sti
outs
test
test
jne
mov
mov
pusha
cmp
jne
test
je
cdq
shrd
push
xlat
ds
or
xor
mov
les
pop
jo
arpl
dec
mov
sub
je
add
scas
pop
icebp
(bad)
sub
jae
jne
inc
inc
jl
rol
and
je
pop
push
aaa
retf
jmp
in
fild
pop
xchg
push
jmp
(bad)
mov
mov
pavgb
clc
mov
imul
add
je
dec
or
sbb
test
push
add
xor
and
add
mov
fsubr
adc
xor
aaa
adc
add
xchg
ror
sub
cmp
call
cmp
push
mov
test
(bad)
ror
jb
lea
cs
dec
js
xor
jge
add
jbe
imul
jne
jns
sub
push
jmp
add
mov
enter
xlat
inc
mov
jmp
aaa
xor
jo
xor
fld
sbb
or
loope
add
push
call
push
fiadd
inc
sbb
push
ins
xor
imul
dec
sbb
jle
adc
add
outs
ret
adc
mov
sbb
or
outs
mov
push
cmp
xor
pop
dec
scas
cmps
inc
outs
xor
movs
cld
bound
or
inc
in
fdiv
push
or
add
xor
push
adc
js
mov
cmp
mov
jnp
xchg
jnp
sbb
xor
xor
adc
in
adc
jmp
xor
mov
sub
push
adc
push
outs
add
dec
and
call
call
add
xor
fadd
adc
jo
add
(bad)
lock
(bad)
bound
or
add
aas
and
shl
das
test
setne
push
mov
mov
and
jne
sub
mov
cmp
ja
and
inc
mov
push
fbstp
fsub
push
sub
dec
sbb
gs
adc
inc
mov
out
xchg
retf
cmpxchg
js
cmc
push
jne
xbegin
push
(bad)
inc
jmp
push
jge
inc
outs
jae
sub
adc
sbb
pop
sbb
xor
ret
inc
loopne
js
add
popa
xchg
sub
adc
into
cmp
pshufw
add
in
sub
mov
adc
ja
or
mov
ds
je
daa
inc
idiv
push
jb
mov
or
aam
dec
pop
inc
mov
pusha
mov
push
out
cdq
add
jo
push
push
rcr
mov
fild
sbb
es
sbb
push
out
adc
jbe
dec
dec
or
jge
or
cwde
jge
(bad)
(bad)
rep
pop
mov
call
shl
aam
out
pop
xor
hlt
dec
out
out
and
movs
jns
inc
mov
mov
and
mov
data16
outs
add
add
outs
adc
es
popf
mov
or
jb
ds
push
and
int3
cdq
push
push
inc
add
fs
xor
jne
push
mov
fwait
push
sbb
xor
add
add
data16
sbb
push
js
adc
mov
mov
adc
daa
dec
fs
jmp
cmp
dec
or
cs
push
fiadd
xchg
push
mov
adc
cdq
cmp
packssdw
and
and
pop
xchg
mov
or
adc
xor
ins
jbe
rcr
inc
popa
sbb
sbb
push
call
ins
adc
xor
in
cmp
adc
mov
xlat
xlat
sub
xlat
xor
(bad)
jl
adc
sti
inc
xor
test
dec
cmp
ins
mov
mov
fdiv
xlat
xchg
jne
xor
or
pop
cs
movs
mov
outs
inc
fsub
cmp
mov
push
scas
call
cmp
push
test
bound
popa
add
cmp
push
retf
xchg
addr16
push
cmp
enter
aaa
shl
cdq
mov
pop
xor
jle
xor
dec
or
mov
cmps
add
sbb
cs
aas
(bad)
mov
imul
shr
scas
pop
imul
jl
xor
jmp
test
je
loop
or
mov
mov
xchg
add
xor
xchg
into
push
out
sahf
int3
ret
inc
mov
daa
(bad)
std
lds
aad
and
and
js
pop
pop
(bad)
push
cwde
or
fcom
push
sar
fwait
enter
fstp
pop
sub
movd
jp
dec
push
sbb
les
addr16
addr16
push
stos
and
test
je
add
add
call
jne
push
mov
and
push
mov
outs
sbb
inc
sbb
push
xchg
pusha
mov
sbb
or
loope
adc
sub
cmp
ret
cmps
imul
daa
dec
push
push
pop
ret
fsub
hlt
sub
jmp
sub
into
cmova
cwde
sbb
add
sbb
out
nop
or
push
xlat
lods
nop
movzx
or
lock
push
mov
mov
add
fisub
cld
mov
ret
mov
pop
mov
adc
(bad)
and
mov
xchg
adc
jbe
jne
test
sub
out
and
mov
lds
pop
pop
lahf
pop
mov
jmp
stos
mov
ins
mov
sahf
repnz
sub
mov
lea
jbe
add
xor
fdiv
in
mov
add
in
jl
(bad)
movs
test
leave
push
add
xor
rol
aaa
in
cld
push
in
dec
cmc
and
sub
pop
dec
add
inc
int
setl
call
push
mov
in
mov
fs
call
pop
and
pop
mov
inc
(bad)
out
pusha
cmp
push
adc
jmp
mov
add
push
pop
jl
(bad)
out
jmp
fcmove
ins
fmul
(bad)
push
mov
pop
aas
jmp
add
dec
movzx
mov
pop
adc
inc
inc
inc
js
lea
outs
nop
xchg
push
mov
jbe
push
repz
pop
adc
aad
sbb
mov
je
mov
mov
stos
add
ja
jbe
stos
mov
cmp
or
ds
pop
rcr
and
mov
into
pop
push
add
and
xchg
aaa
mov
pop
das
out
outs
pop
cmc
mov
dec
pop
add
shl
xchg
mov
scas
adc
pop
aaa
ss
mov
mov
xchg
xor
adc
push
adc
sbb
sahf
shl
xchg
jge
add
fs
imul
or
push
sub
xor
pop
add
push
push
and
sub
push
push
inc
cs
push
pusha
push
mov
cli
stos
lock
dec
fstp
inc
dec
popa
ins
pop
(bad)
std
adc
sbb
push
inc
inc
ins
popa
addr16
lahf
adc
mov
or
popa
jb
push
out
add
fdivr
dec
add
outs
je
or
gs
cmp
ss
int3
cmps
add
pop
sbb
(bad)
repz
sub
adc
push
jmp
add
das
call
push
fcomp
jo
mov
enter
cmp
out
call
and
je
inc
int
sbb
nop
push
and
xor
pop
and
jg
push
push
rol
je
pop
or
push
outs
jle
popa
imul
pop
and
fmul
sbb
push
sub
and
jb
mov
(bad)
inc
push
imul
lock
ficom
add
cmp
pusha
xchg
outs
cmp
loopne
inc
fidiv
sub
fwait
add
jmp
or
out
pop
cdq
movs
mov
and
or
and
or
rcr
sbb
add
dec
(bad)
push
fadd
inc
or
retf
dec
lahf
bound
pminsw
xlat
sbb
sbb
mov
jmp
xor
sbb
daa
push
movzx
lea
sbb
cld
mov
sub
rol
ja
sbb
push
lea
adc
xor
test
dec
cmc
add
adc
sbb
adc
pop
call
push
mov
push
sbb
jo
mov
mov
inc
fadd
adc
(bad)
bound
jb
xor
sahf
add
lahf
sbb
add
sbb
pop
(bad)
pop
dec
adc
out
and
mov
leave
push
add
sub
test
scas
pop
xchg
mov
pop
(bad)
pop
or
mov
inc
mov
adc
sbb
mov
in
mov
dec
or
push
dec
mov
loop
mov
xlat
into
mov
xchg
fcom
mov
fmul
iret
push
inc
les
sbb
inc
mov
stos
ja
jecxz
outs
sub
fsubrp
ror
cmp
sbb
rol
add
hlt
test
inc
xor
and
inc
cmps
jl
push
rcr
les
add
mov
mov
mov
mov
mov
add
(bad)
inc
add
dec
movs
dec
add
inc
sub
js
xor
push
retf
es
pop
and
movs
cmovl
and
inc
(bad)
retf
inc
cwde
call
mov
push
and
add
call
aad
add
mov
cmp
jne
mov
xor
push
add
(bad)
cmp
sbb
in
bound
push
loope
or
sub
test
mov
(bad)
sbb
(bad)
outs
xor
add
mov
inc
adc
out
cmp
mov
inc
sub
mov
adc
scas
js
int3
addr16
add
pop
mov
lds
pop
loopne
mov
mov
(bad)
jge
and
push
pusha
and
call
repz
sub
ret
mov
mov
adc
add
and
inc
push
shr
(bad)
scas
not
movs
pusha
cmp
mov
xor
mov
adc
ins
je
and
es
add
or
sub
sub
mov
sbb
stos
mov
aam
push
fs
imul
imul
push
test
je
retf
outs
dec
add
fiadd
add
clc
ss
sub
fisubr
sub
push
mov
xchg
sti
xchg
push
pop
dec
cli
sub
inc
push
and
je
add
fsubr
sbb
pop
cmp
sbb
fsub
cdq
sbb
xor
imul
(bad)
lods
vmread
or
sub
sbb
jnp
inc
or
adc
inc
push
add
adc
sbb
jmp
cwde
ss
scas
push
add
xor
mov
out
push
mov
ret
mov
mov
aas
es
jge
pop
jo
push
sbb
push
arpl
imul
sahf
ror
fsubr
and
fs
out
dec
mov
push
xor
jne
mov
or
push
repz
lods
cmp
mov
mov
or
push
push
pusha
sar
xchg
call
add
xchg
add
bound
icebp
jbe
test
icebp
and
cmc
aam
jle
add
sbb
add
dec
(bad)
data16
cmp
xor
push
bound
and
push
inc
test
fbstp
lock
sub
dec
add
lahf
pop
push
sub
mov
inc
sub
or
mov
ror
pop
dec
inc
cmc
stc
out
lock
push
vmwrite
inc
cmps
add
lods
pop
sbb
push
add
jmp
shr
inc
and
fmul
cmp
inc
jns
jl
sub
jne
and
in
or
sti
or
clc
jae
dec
test
sub
sbb
push
xor
lock
add
into
pushf
test
jne
push
inc
and
sub
pop
xchg
popf
movs
lahf
jl
mov
push
and
sbb
shl
jg
dec
clc
aaa
pop
inc
add
cmp
fsub
inc
or
pusha
sbb
or
or
cmp
add
int3
push
jl
pusha
rol
jg
jg
sbb
sar
leave
das
push
mov
pop
jle
and
enter
fimul
push
pop
mov
lds
sbb
jmp
scas
xor
pusha
stos
xor
adc
pop
jo
sti
arpl
push
(bad)
mov
add
(bad)
mov
inc
or
sbb
adc
dec
or
mov
popa
or
(bad)
iret
jns
mov
push
test
mov
pop
mov
xor
out
lock
daa
outs
adc
sub
pop
jo
out
jl
dec
adc
packsswb
das
ss
pop
cmp
jo
mov
sub
jb
jg
push
adc
hlt
ins
xchg
and
inc
stc
pop
lea
sub
add
pusha
and
jns
cmp
sub
mov
test
(bad)
xchg
(bad)
sbb
sub
sti
das
lds
test
add
add
inc
cmc
and
cmp
cmp
nop
stos
inc
cmp
add
pop
or
test
mov
test
pop
mov
pop
sti
jmp
sub
and
std
mov
push
push
jns
dec
daa
test
call
(bad)
sub
js
dec
jne
xor
sbb
adc
push
jmp
or
jmp
xchg
cmp
fiadd
mov
mov
xor
or
or
cmps
pop
jp
add
je
or
inc
mov
mov
movzx
inc
xor
adc
in
test
cmp
loop
out
mov
ja
inc
xchg
rcl
pop
js
fdivr
adc
fisubr
fs
or
es
adc
aam
fidivr
push
inc
sub
pop
cmp
loop
xchg
addr16
(bad)
cmp
adc
add
mov
cmp
dec
add
mov
lea
dec
jmp
sbb
and
xor
dec
scas
and
sbb
jmp
push
add
jbe
shl
pop
sbb
jne
and
pop
and
add
jl
or
push
add
and
cmp
dec
cld
cmp
xchg
cmc
cli
mov
or
repz
or
data16
inc
cmp
pop
cmp
aam
xor
xor
sar
shl
push
aas
ins
cmp
push
push
lea
or
pop
lock
mov
sbb
xor
push
popa
add
push
sbb
sbb
inc
or
adc
fadd
push
lahf
lock
and
dec
sbb
ja
(bad)
call
cwde
ins
cmp
jle
pop
scas
ja
ja
and
add
push
pop
sbb
pop
fcomi
cmp
gs
aaa
pop
adc
jae
pop
xor
aad
mov
outs
jl
add
push
or
xlat
out
sub
mov
rol
add
ds
iret
repz
in
push
loopne
out
cmc
loopne
ret
mov
mov
mov
or
jbe
cld
out
aas
sub
push
mov
daa
add
test
ins
cmp
and
dec
mov
adc
imul
or
and
inc
aas
int3
cmp
ss
mov
push
sub
js
push
add
mov
and
add
(bad)
pop
jae
neg
jmp
push
mov
rol
jmp
mov
(bad)
jne
lock
push
es
sub
add
add
cld
and
mov
fwait
dec
mov
dec
je
add
add
das
mov
jge
ret
jmp
(bad)
or
jmp
adc
mov
push
add
mov
sub
rol
inc
mov
jmp
xor
mov
mov
les
pop
sbb
push
hlt
sbb
fcom
ins
lods
and
(bad)
in
or
mov
mov
cmp
or
mov
jmp
sub
xor
mov
pop
push
and
jmp
in
push
dec
call
sahf
enter
push
sti
inc
sub
mov
fcom
sub
sub
push
popa
fwait
sbb
jae
nop
cmp
jmp
fs
sub
loop
dec
pushf
xchg
mov
sub
sbb
pop
or
inc
xchg
dec
add
xor
add
in
or
loope
in
sar
or
push
adc
mov
add
push
inc
repnz
sub
add
push
or
or
frstor
into
sub
dec
pop
push
out
dec
loope
push
lahf
lods
mov
pop
not
sbb
mov
xor
repz
data16
sub
mov
movaps
sete
ret
movs
hlt
(bad)
adc
inc
scas
add
or
push
add
and
popa
sub
push
mov
in
adc
jl
inc
bound
inc
cmps
xor
lea
sar
ror
mov
push
and
aaa
dec
add
add
push
ins
jo
into
mov
and
pop
mov
loop
aaa
stos
jl
not
cmp
jmp
loopne
iret
es
add
cmp
mov
xlat
scas
jo
mov
adc
and
or
xchg
and
sub
aas
stos
push
sbb
mov
das
cmp
push
cmp
jp
add
out
adc
pop
mov
jmp
jnp
or
mov
xchg
sub
je
dec
je
add
outs
sub
jae
adc
or
(bad)
sub
shl
dec
add
sbb
hlt
mov
mov
(bad)
push
mov
test
dec
pop
shl
test
and
rcl
adc
adc
sbb
mov
mov
push
mov
dec
cwde
jns
jmp
jg
push
push
push
sub
mov
mov
ss
mov
mov
pop
pop
mov
ret
loope
cmp
xor
cld
mov
jbe
les
mov
add
pop
pop
push
or
fild
retf
lock
mov
push
fld
add
sub
push
adc
popa
and
add
in
dec
and
mov
es
das
xor
lahf
ja
push
cmp
xchg
ja
add
rcl
int
or
test
les
inc
jbe
cli
hlt
add
adc
or
ja
or
or
push
fsubr
mov
aam
hlt
call
mov
paddb
jg
and
push
dec
bound
arpl
push
imul
or
outs
imul
add
cs
pushf
in
fcmovne
popa
ds
add
mov
inc
jb
popa
ds
inc
or
(bad)
add
or
push
and
inc
sbb
push
or
popa
jo
arpl
jns
inc
rol
jl
pop
mov
or
cwde
outs
ins
call
or
mov
xor
xor
add
pusha
(bad)
xor
inc
inc
jnp
ins
and
jae
shr
sahf
jae
pop
cmps
and
scas
jmp
mov
mov
div
mov
mov
(bad)
lods
or
mov
or
or
push
jmp
or
outs
jae
inc
(bad)
sub
pop
or
pop
lods
out
sbb
and
jno
jo
pop
pushf
outs
add
leave
inc
mov
pop
add
inc
inc
and
cmp
js
dec
clc
arpl
inc
pop
aam
mov
mov
out
xor
mov
and
inc
add
repnz
xor
stos
push
adc
xchg
add
stc
fisub
pop
test
hlt
mov
xor
pusha
add
dec
push
dec
jmp
add
or
cld
mov
mov
and
xor
adc
or
push
sub
ds
cmp
cmp
adc
add
add
inc
adc
push
push
jb
or
call
push
jge
out
out
(bad)
jl
dec
mov
mov
cmp
push
xor
push
add
push
popa
or
ret
xchg
add
push
ret
mov
lea
jo
inc
xchg
jo
mov
jno
xor
adc
add
mov
dec
shl
cmp
(bad)
xor
test
cli
and
dec
or
jmp
push
int3
add
jmp
cmp
out
lock
sti
je
in
outs
cmp
adc
inc
inc
jecxz
stos
sbb
fdivr
or
adc
retf
sbb
scas
scas
add
sub
fwait
sub
jno
test
sub
rol
mov
xchg
cmp
xor
aam
movs
pop
test
dec
imul
push
cli
test
setne
jae
in
(bad)
iret
sub
movs
adc
aaa
jmp
mov
push
add
pop
inc
xor
pop
ins
fisttp
jo
add
push
inc
jmp
ins
add
dec
je
inc
movs
or
xchg
es
inc
add
sbb
outs
xor
add
loope
push
mov
mov
out
test
out
sub
daa
dec
cmp
push
test
call
shl
add
pushf
jl
xchg
xor
inc
cli
cwde
adc
adc
lods
into
jb
mov
xlat
ret
add
or
or
jno
jne
cmp
outs
(bad)
mov
mov
enter
loope
test
scas
add
mov
dec
ja
push
push
mov
loope
lock
adc
push
mov
sbb
addr16
rcr
inc
inc
(bad)
stos
push
outs
inc
cmp
daa
lock
sub
lea
adc
and
mov
inc
pushf
rcr
xchg
dec
jne
mov
loopne
loop
ret
push
dec
sbb
dec
dec
adc
mov
and
add
aam
pushf
div
sub
pop
ret
inc
mov
idiv
js
xor
std
movs
(bad)
add
loope
cs
or
cmps
push
mov
in
ins
lock
test
dec
push
cmp
xor
loopne
push
dec
cmp
test
sub
mov
test
sub
add
add
sub
dec
shl
fsubr
scas
imul
jle
arpl
or
inc
mov
stos
gs
adc
shr
aam
call
or
and
repz
pop
and
nop
clc
das
sub
jae
cs
icebp
ins
sbb
jnp
popa
pop
scas
arpl
cdq
or
and
sbb
data16
sti
daa
xor
push
shl
mov
add
fld
imul
or
repnz
or
je
inc
add
bound
scas
sub
inc
imul
fs
addr16
cmp
push
fs
(bad)
scas
add
dec
xor
dec
test
enter
or
call
cmp
adc
pop
mov
add
clc
push
adc
push
jno
out
xlat
scas
ret
test
push
mov
jo
or
sbb
pop
pop
out
test
test
adc
dec
mov
adc
add
push
mov
lock
pushf
cdq
adc
sub
cmp
gs
cld
test
push
jno
fist
pop
push
sbb
cmp
sub
arpl
push
ret
out
je
and
adc
loope
inc
xchg
pop
pop
pop
cmp
add
sar
ja
add
cmp
push
lea
je
dec
push
sub
pop
pop
inc
rcl
stos
(bad)
(bad)
jmp
(bad)
ds
cmp
jle
ret
push
jge
mov
hlt
adc
fld
into
daa
dec
jo
in
push
mov
rol
repnz
mov
adc
nop
mov
mov
dec
push
or
push
pop
aaa
icebp
xor
aaa
lea
je
mov
clc
cmp
mov
jl
mov
push
nop
(bad)
mov
outs
push
or
or
mov
dec
adc
sub
mov
aam
cmp
push
dec
cwde
sbb
(bad)
test
sbb
adc
retf
popa
and
idiv
mov
lsl
adc
sbb
jge
add
retf
outs
cdq
aaa
push
and
xchg
ret
loopne
jl
test
test
aaa
ret
sub
xchg
lods
adc
mov
mov
dec
jo
in
push
sbb
dec
popa
neg
adc
inc
mov
lahf
shl
je
bound
cld
or
cmc
push
or
push
inc
lea
push
shl
sub
cwde
sahf
sub
cs
data16
cwde
xor
push
popa
cmps
push
and
pusha
xchg
push
push
xor
adc
push
or
mov
lea
cmp
scas
enter
ret
adc
lock
or
inc
adc
sub
dec
mov
loopne
mov
or
jge
sub
fcom
in
pusha
test
inc
add
out
jmp
(bad)
adc
cmp
hlt
lea
pop
test
mov
push
pop
or
add
lea
or
xchg
xchg
push
jg
sbb
or
sub
add
cmp
movs
inc
cmp
das
mov
push
add
pop
adc
mov
arpl
dec
fs
sub
(bad)
outs
and
(bad)
or
add
mov
sbb
mov
mov
add
xchg
adc
lock
mov
shl
loop
nop
nop
enter
clc
jmp
test
sbb
in
push
dec
in
jnp
sub
xor
push
call
es
xchg
lods
and
adc
jae
(bad)
xor
xor
test
leave
dec
cmps
dec
test
cmp
cmp
bound
pop
add
mov
scas
and
std
sbb
xchg
bound
push
mov
add
jmp
push
pushf
inc
test
out
dec
sti
popf
pop
sbb
pop
ins
loopne
js
pop
pop
or
or
jle
ja
push
add
pop
es
add
aam
xor
retf
mov
dec
pop
jecxz
jo
dec
push
shl
jo
mov
or
xor
push
push
jno
pusha
out
data16
jno
and
cld
mov
add
out
stos
je
shl
(bad)
test
jl
cld
cmp
fstp
jne
inc
add
push
loop
add
or
imul
cmp
addr16
pusha
add
out
jmp
adc
mov
mov
cs
int3
cmp
shr
push
or
sbb
push
or
xor
jne
mov
pushf
addr16
lea
add
jne
jbe
mov
mov
repz
push
js
mov
inc
dec
je
fmul
cld
lea
pop
add
retf
inc
add
add
pop
push
pop
clc
pop
ror
add
call
lock
dec
repnz
mov
stc
mov
pop
add
mov
pop
adc
lods
movs
cmp
adc
inc
test
mov
and
cmp
mov
outs
aad
out
add
mov
loope
sbb
iret
add
inc
cmp
jmp
out
adc
arpl
jle
push
and
fst
outs
cmp
mov
loop
pop
and
or
pusha
xchg
cmps
sar
pop
int
inc
push
cld
inc
mov
xor
mov
in
je
sub
jo
mov
inc
fwait
pop
push
and
je
lds
mov
cmp
xchg
or
jle
add
test
sbb
mov
add
pop
or
pop
adc
adc
add
mov
adc
push
add
rol
and
(bad)
or
fst
push
ja
sti
push
cmp
jg
call
ror
pop
(bad)
jle
adc
adc
adc
xor
push
xlat
pusha
inc
adc
mov
xor
jl
sub
inc
add
pop
add
jl
ins
add
pop
das
or
dec
or
dec
cwde
push
xchg
pop
mov
push
push
or
fwait
dec
xchg
loop
cmp
ds
and
lods
dec
retf
nop
das
pop
adc
inc
movs
icebp
or
jle
pop
(bad)
jl
(bad)
adc
add
cmp
jg
daa
add
call
mov
call
mov
pop
in
iret
xor
push
jo
mov
rcr
loop
retf
adc
push
cmp
push
dec
movs
clc
push
fs
rcr
add
pushf
fcomp
rcl
pop
jle
pop
jo
inc
jnp
dec
loopne
jge
test
js
inc
aas
adc
mov
adc
mov
sub
inc
cs
pop
pop
or
add
jmp
push
in
add
xor
or
cmp
data16
pop
push
sub
inc
push
clc
imul
push
adc
enter
inc
(bad)
call
pop
int3
ficom
jb
inc
or
ror
dec
ins
test
add
xchg
mov
aam
bound
ins
add
ror
jmp
bnd
inc
add
dec
and
ds
mov
mov
mov
pusha
sub
or
jnp
mov
add
pushf
xchg
sahf
sbb
and
xor
dec
pop
inc
sub
cld
mov
mov
fstp
xor
and
mov
mov
ins
mov
mov
data16
cmp
or
ss
adc
add
or
dec
mov
push
cmp
or
(bad)
(bad)
and
outs
cmp
cmp
mov
sub
ret
mov
test
test
repnz
sbb
sahf
and
mov
test
xor
mov
push
add
inc
fdiv
xchg
sub
fyl2x
pop
jmp
fsub
test
push
fwait
mov
xchg
pop
push
mov
popa
mov
or
(bad)
or
leave
push
and
bound
retf
daa
xor
nop
jbe
dec
sub
dec
sbb
adc
iret
or
xor
sbb
mov
cmp
jne
xor
jmp
retf
mov
setge
(bad)
cmp
lahf
jle
bnd
dec
add
test
inc
cmc
push
xor
inc
stos
sti
lock
add
inc
dec
jne
or
pop
cmp
cmp
ror
jle
xchg
add
mov
or
(bad)
sti
mov
jmp
sub
cs
xlat
push
repnz
and
not
pop
mov
xor
jne
scas
loopne
or
cmp
jbe
add
rcr
neg
lods
ins
and
mov
or
test
ror
ror
dec
loop
push
out
jnp
jo
outs
pop
outs
adc
jg
adc
xchg
push
cwde
inc
pushf
mov
xor
mov
popa
icebp
loope
or
sub
pop
adc
push
xchg
out
mov
mov
push
test
push
jmp
or
push
das
loop
or
in
clc
cmps
dec
push
fbld
aam
repz
or
je
or
(bad)
mov
dec
in
add
iret
xchg
nop
mov
adc
pusha
test
ins
jns
sbb
sahf
sti
int3
xor
pop
lock
inc
cmps
rol
sub
or
mov
xchg
push
xor
or
jmp
jns
js
jp
adc
sub
jp
ret
cmc
jnp
pop
cwde
jo
push
ins
call
outs
sar
cmp
adc
inc
dec
or
fbstp
adc
cmp
cmp
add
add
ret
inc
and
adc
cmp
lahf
push
(bad)
mov
mov
out
mov
(bad)
in
add
sub
scas
and
movups
pop
or
mov
xchg
pop
sbb
cmp
pusha
sub
hlt
retf
call
icebp
adc
cmp
(bad)
xlat
dec
ror
adc
shl
mov
(bad)
in
int3
fimul
cmp
test
aam
outs
sbb
dec
arpl
pop
and
(bad)
test
xor
faddp
adc
repz
jns
add
sub
in
dec
cmp
push
inc
mov
(bad)
sub
jo
mov
dec
mov
or
sar
add
push
and
push
jg
shr
test
add
(bad)
shl
add
fsubp
mov
test
sbb
mov
add
(bad)
sub
dec
ret
or
cwde
push
cmps
add
daa
push
sub
lock
adc
repz
lea
aas
inc
dec
jne
out
mov
cmps
mov
add
add
inc
je
add
dec
xchg
cs
sub
cli
push
jl
xchg
dec
or
shl
pop
cli
push
ins
(bad)
aad
enter
add
pop
push
dec
mov
jno
in
in
nop
jp
or
gs
adc
add
add
clc
rol
dec
cmc
xchg
(bad)
callw
outs
push
pusha
xor
sbb
std
push
pop
dec
and
fdiv
pop
sbb
dec
cmp
cmp
sahf
hlt
not
jmp
mov
push
xor
mov
cmps
gs
cmp
iret
sub
fucomp
push
and
pop
or
sbb
fiadd
and
outs
add
adc
clc
sbb
and
or
xchg
outs
add
xchg
(bad)
jg
retf
push
or
mov
mov
mov
push
shl
push
or
xchg
push
dec
xchg
mov
add
in
sbb
int
add
not
nop
and
iret
mov
shl
adc
xchg
or
dec
jo
imul
in
xor
mov
(bad)
xchg
dec
out
fistp
or
cmp
adc
jb
popf
adc
aaa
adc
daa
mov
mov
pusha
shl
fld
rcl
mov
lock
cdq
xchg
adc
xchg
push
mov
cwde
xor
fmul
jb
jge
js
retf
or
int3
gs
sbb
sub
in
xor
sar
in
push
adc
and
inc
in
add
ret
mov
push
xchg
jne
imul
sub
jae
in
fst
jae
adc
and
in
cmp
mov
fwait
mov
cmp
jle
sbb
loopne
push
mov
add
test
jne
shr
cmps
lea
jnp
or
clc
add
mov
push
mov
push
push
sbb
pop
mov
inc
add
nop
mov
mov
xor
push
loope
cmp
fs
dec
and
inc
adc
cmp
or
xchg
fidiv
jge
sub
cld
pop
or
mov
add
push
and
je
das
and
or
or
and
add
loop
push
adc
push
pop
mov
sti
outs
push
add
dec
loopne
je
adc
sbb
pushf
and
adc
jo
jmp
ja
rol
sbb
add
cli
inc
nop
or
sti
aaa
push
xchg
leave
push
dec
or
push
cmp
movs
in
call
js
xor
mov
dec
jle
test
jo
jge
xor
cs
dec
add
call
push
jo
xor
movs
adc
aaa
mov
xchg
(bad)
jecxz
inc
sub
xor
sub
and
popa
and
in
int
sub
out
inc
inc
sbb
cmp
adc
xchg
jo
xchg
inc
push
add
sahf
ror
enter
push
mov
or
xchg
sbb
shr
mov
out
mov
and
adc
scas
mov
mov
fcmovnb
sbb
shr
sbb
cmp
cmp
sbb
and
mov
ins
out
xor
cwde
and
cmp
cmc
inc
fcomp
push
and
scas
push
rol
test
or
in
es
lahf
stos
cmp
je
ret
out
xor
and
cmps
and
clc
jne
out
es
inc
or
add
outs
test
sbb
out
inc
adc
addr16
push
push
loopne
push
rcr
inc
xchg
pop
fisubr
ret
sbb
jmp
loope
data16
shr
sub
inc
or
push
fisttp
adc
sbb
push
iret
icebp
sub
xchg
outs
dec
rol
jp
cmp
and
or
push
sti
loope
in
je
mov
jmp
repnz
jne
pusha
test
rcr
movs
stos
xchg
push
fist
ins
ja
fdiv
add
retf
pop
outs
mov
cmp
mov
cmp
mov
sub
push
push
xchg
xchg
arpl
sub
xchg
sub
push
xchg
sub
and
push
addr16
xchg
push
mov
add
mov
xor
daa
add
aaa
or
mov
push
outs
pusha
js
loopne
loopne
loop
xchg
fs
mov
leave
fs
pusha
push
loopne
fisttp
push
hlt
ror
add
xor
enter
mov
or
jmp
hlt
jno
loopne
or
mov
add
xor
dec
or
jb
dec
push
popf
arpl
push
jl
ja
scas
xchg
inc
add
inc
or
gs
push
mov
cmp
cld
sbb
mov
add
sbb
jnp
or
sbb
repz
nop
or
pusha
hlt
(bad)
jae
mov
mov
movs
push
sbb
daa
jmp
jmp
adc
add
out
add
dec
cmp
or
inc
jg
mov
mov
mov
xor
cmp
push
jb
arpl
retf
sub
mov
fistp
add
mov
(bad)
jno
adc
xchg
cmps
adc
jae
inc
pop
push
(bad)
jae
push
and
dec
add
dec
push
adc
jne
xchg
fbld
adc
cli
packsswb
push
shl
lgs
int3
dec
mov
pop
js
mul
mov
or
mov
dec
adc
or
xchg
add
movs
jg
fwait
sbb
fdiv
mov
or
add
add
cmp
es
xor
push
sbb
xchg
pushf
adc
adc
mov
pop
adc
mov
sbb
push
inc
retf
mov
es
pop
scas
bound
pushf
pop
jo
push
dec
dec
lea
adc
and
and
push
sub
add
dec
adc
mov
sub
lods
add
and
sbb
lock
or
xchg
mov
xor
mov
addr16
pop
add
mov
mov
add
or
cmps
outs
mov
les
outs
fld
cdq
or
outs
lock
ror
inc
dec
rcr
aam
ja
adc
cmp
adc
and
push
cwde
popa
pop
stos
pop
xchg
sub
mov
repnz
enter
dec
pusha
rcr
pusha
xchg
fbld
pusha
popa
and
scas
ffreep
and
test
adc
and
and
leave
mov
push
cmps
fisttp
outs
das
push
mov
add
push
push
pushf
scas
pusha
pop
leave
or
scas
shl
add
inc
in
add
pusha
adc
enter
pusha
adc
adc
sbb
shl
mov
or
stos
jo
adc
inc
je
inc
pop
jg
mul
jle
add
pusha
test
jnp
hlt
cld
inc
inc
loopne
and
ins
sbb
lds
and
ss
add
shl
mov
mov
cmp
out
pop
jmp
cs
ror
cmps
push
lock
or
inc
cmps
out
repz
call
loope
jl
adc
ret
sbb
add
dec
or
jle
pusha
xor
add
sub
xor
mov
dec
test
icebp
sub
adc
arpl
adc
dec
inc
xchg
inc
sbb
and
pusha
sub
or
add
pop
inc
xchg
cld
imul
xchg
xchg
xchg
or
and
mov
adc
cmp
xchg
xchg
fs
rol
cmp
mov
sub
xchg
add
adc
or
mov
out
fsub
jg
fisttp
fs
in
adc
add
inc
cli
lea
fidivr
call
mov
push
stos
repnz
and
jne
popa
add
cwde
adc
mov
mov
adc
shl
add
(bad)
std
dec
add
adc
mov
cmp
dec
loope
dec
sahf
lods
lods
adc
ds
xor
dec
xor
cs
mov
inc
movs
or
inc
jmp
aas
add
iret
add
ret
les
fadd
jne
or
xor
adc
and
xor
pusha
fs
test
push
mov
or
cmp
cld
pushf
out
jle
das
and
pop
call
repnz
out
in
add
xor
jae
jnp
mov
pop
in
loopne
loopne
adc
lock
je
scas
pop
xchg
cmp
or
or
and
out
int3
loopne
repnz
adc
mov
mov
test
add
int3
or
adc
fs
push
lods
sti
adc
push
push
and
jno
and
pusha
dec
add
mov
(bad)
adc
cwde
add
dec
lock
ror
rcr
retf
inc
adc
pop
or
sbb
pusha
mov
jp
loopne
dec
fsubp
push
je
stos
jae
out
shl
jno
out
adc
out
xchg
jl
pop
cmp
fcom
cmp
out
mov
or
mov
lea
sub
sbb
hlt
sub
(bad)
or
jmp
cmp
arpl
jnp
and
add
push
pop
test
or
push
pop
xor
or
rcl
pop
mov
daa
and
push
xchg
sbb
pop
or
fcomi
sbb
sbb
cli
sbb
or
nop
inc
enter
les
add
ret
nop
xor
sbb
repnz
cmp
mov
sub
out
sbb
dec
pop
jno
xor
pop
adc
adc
pop
add
clc
dec
xor
inc
mov
sbb
sbb
or
jns
imul
push
push
cli
add
inc
add
sbb
mov
sub
imul
adc
mov
sbb
pusha
fcmovnb
arpl
and
out
cdq
adc
cmp
add
das
push
aaa
icebp
or
adc
adc
popf
inc
jmp
push
add
adc
jmp
es
shl
dec
inc
mov
loope
rol
cmp
dec
push
or
mov
dec
mov
jmp
pop
lds
fdivr
cwde
sbb
imul
call
clc
test
rol
inc
call
(bad)
call
jmp
add
movups
sub
xchg
mov
cmp
push
sub
dec
inc
xor
adc
out
jnp
xor
loopne
adc
adc
and
dec
pop
pop
cmp
inc
rcr
inc
loopne
nop
add
lock
cmp
add
jae
out
popf
sub
inc
js
idiv
and
jl
test
or
inc
pusha
mov
add
cwde
out
sbb
scas
jp
dec
call
lock
outs
jl
wrmsr
sub
pusha
outs
or
adc
jge
pop
daa
push
call
les
sbb
mov
sbb
loopne
das
mov
imul
cmp
jns
mov
sub
push
adc
pop
nop
das
inc
imul
cmp
or
daa
or
xchg
addr16
jle
imul
push
movups
mov
js
lods
add
pop
mov
test
xchg
mov
lahf
clc
(bad)
fwait
adc
popf
outs
pop
push
adc
(bad)
fmul
cmp
loope
push
loop
rcr
(bad)
or
sbb
add
pop
pop
loopne
mov
or
test
pop
sbb
ror
cli
nop
movups
xor
pop
sbb
add
mov
stc
pop
fldcw
jno
test
ins
stc
add
aaa
les
cmp
adc
xor
pop
mov
(bad)
xchg
xchg
and
add
pop
imul
or
and
inc
pop
out
popa
xor
nop
mov
xor
adc
jb
jo
or
inc
arpl
add
inc
or
retf
adc
mov
pop
loope
mov
inc
xor
mov
jnp
inc
mov
imul
pop
loope
imul
xchg
stos
gs
outs
and
(bad)
jns
(bad)
push
das
or
or
outs
adc
xor
xchg
push
outs
inc
add
mov
lea
leave
adc
xor
mov
xchg
mov
xor
mov
or
sbb
retf
pushf
push
add
adc
(bad)
aas
push
in
pop
in
lock
push
xchg
(bad)
cwde
or
data16
sub
jae
jae
adc
add
(bad)
lock
(bad)
fwait
int3
sub
(bad)
or
in
and
aad
mov
int
test
sub
in
addr16
(bad)
scas
cmc
sub
call
push
xchg
je
push
mov
xchg
and
iret
jno
and
mov
lods
inc
iret
push
sbb
mov
iret
xor
sbb
add
test
dec
mov
sub
pop
pushf
sbb
ins
dec
repz
xor
jmp
je
shl
cmp
inc
int
xlat
jle
rcr
inc
add
inc
pop
dec
fcmovnb
sbb
fild
imul
mov
add
add
adc
xchg
inc
xor
xor
test
pop
push
sar
test
jo
adc
fs
and
or
sub
push
add
sbb
les
jae
lea
les
test
sub
fistp
or
imul
out
fnstsw
push
push
and
test
gs
in
mov
adc
inc
or
push
mov
loope
scas
cmps
jb
xchg
sub
movs
cmp
sub
or
(bad)
cmps
jmp
and
pop
inc
lods
cmp
shl
pop
or
mov
lea
or
aas
mov
xor
sub
jmp
mov
xchg
add
out
lods
mov
xchg
jle
and
(bad)
(bad)
aam
mov
push
aas
call
adc
fcom
(bad)
adc
pusha
push
sbb
and
test
pop
xchg
sbb
(bad)
push
xchg
sub
in
and
push
mov
xchg
or
inc
cmp
push
ret
cld
add
mov
or
outs
add
ja
fisttp
push
mov
inc
jbe
lock
stc
cmp
dec
das
in
fs
push
jmp
jno
pop
outs
cmp
add
pushf
loopne
aaa
push
push
sbb
sbb
jmp
xor
add
jb
adc
je
xchg
fcmovu
dec
jne
test
xchg
adc
ins
lock
push
movs
xor
jmp
jge
dec
fs
test
jp
or
jl
aas
mov
test
cmp
loop
jl
add
mov
jne
mov
data16
and
pusha
inc
fld
fs
ss
and
fistp
mov
les
and
fs
pop
xchg
inc
jae
dec
lea
shr
push
popa
or
and
inc
test
xchg
or
pop
cmp
push
jmp
mov
cmp
clc
adc
inc
pop
push
xchg
js
xchg
test
mov
data16
sti
mov
pop
cmps
loope
and
adc
fmul
dec
icebp
inc
out
jae
jge
icebp
xchg
clc
push
lea
sub
cld
inc
sbb
push
pop
pop
pop
jns
(bad)
xchg
push
cmp
lock
sub
jo
xchg
add
mov
mov
inc
(bad)
pop
pop
movs
xchg
or
pop
fdiv
ror
push
(bad)
out
or
inc
mov
push
or
mov
in
dec
dec
jne
fucomip
lsl
bound
dec
test
imul
add
aam
adc
sub
(bad)
or
mov
nop
dec
retf
or
pop
mov
loope
lock
lea
push
or
retf
dec
push
sub
push
stos
pop
or
push
adc
xor
add
add
mov
mov
dec
xchg
outs
adc
cmp
or
ins
mov
xor
pop
add
pushf
aam
ja
out
xchg
push
pop
aaa
push
rol
inc
xchg
or
shl
pop
cmp
movs
inc
sbb
inc
cmp
mul
inc
add
xchg
outs
sbb
adc
and
add
in
cmps
daa
mov
arpl
call
shl
or
lods
and
inc
sbb
ror
nop
or
xchg
enter
push
push
imul
mov
jmp
loope
shl
rcr
mov
mov
(bad)
jnp
jo
or
in
pusha
mov
pop
dec
add
dec
dec
in
lods
add
in
mov
ja
bound
cmp
jno
outs
mov
cmps
inc
and
jnp
jo
ret
xchg
shr
sub
xlat
sub
shl
aam
xor
or
or
test
test
daa
pop
ds
int3
xchg
sub
cdq
clc
add
rcl
cmp
out
mov
or
add
push
jo
push
push
dec
loop
or
jnp
jl
retf
cld
push
lea
xchg
sub
scas
cdq
add
or
mov
and
lock
pop
mov
cld
add
mov
adc
sub
(bad)
in
mov
pusha
mov
ficomp
mov
fmul
or
pop
mov
lock
mov
inc
add
or
dec
rcl
mov
(bad)
fbld
pop
lods
je
(bad)
push
pop
addr16
int3
addr16
mov
add
(bad)
mov
pushf
fcom
fnstcw
jb
hlt
or
imul
adc
je
loopne
dec
jg
shl
mov
add
or
push
ss
cmp
inc
cli
adc
dec
lock
scas
inc
(bad)
add
mov
sbb
xchg
sti
add
ds
pop
mov
sbb
pop
movs
add
sub
loopne
jmp
test
inc
adc
jo
dec
or
mov
adc
mov
(bad)
fidivr
inc
adc
pop
or
pop
enter
pop
lods
cdq
(bad)
or
or
repz
ret
retf
or
loope
pop
in
lahf
inc
xor
fild
dec
stos
mov
aas
ret
ins
ds
mov
cmps
push
rol
add
(bad)
mov
fmul
fwait
push
jmp
adc
int
pop
jmp
and
adc
cmp
je
add
push
retf
(bad)
cs
inc
cmp
jge
dec
adc
mov
hlt
and
fs
enter
inc
inc
cmp
mov
add
(bad)
(bad)
dec
cmp
xor
in
dec
daa
mov
hlt
not
rcl
pop
or
xlat
in
inc
out
sbb
or
mov
mov
add
lea
ror
mov
repz
xor
push
inc
adc
mov
js
adc
rcr
pop
loop
stc
pushf
push
scas
cmp
inc
popa
aas
loop
mov
sbb
cwde
jmp
xchg
xor
neg
lods
cli
shr
arpl
dec
clc
add
cmp
cmp
cmp
xor
neg
movs
movs
xchg
repnz
aas
jge
add
jg
jmp
xor
in
mov
add
sub
push
adc
or
mov
add
mov
adc
stos
dec
cmp
mov
pop
scas
pop
adc
inc
jno
ror
push
and
mov
inc
jb
jmp
sub
cmp
js
cmp
out
add
push
in
sub
add
call
xor
out
adc
push
inc
mov
out
or
sbb
xlat
out
sub
(bad)
popf
hlt
xchg
xchg
test
imul
adc
aas
jno
enter
mov
mov
sbb
mov
mov
xor
add
mov
jl
push
mov
cmps
cmp
ss
jb
mov
push
pop
mov
hlt
adc
in
mov
jo
int3
rol
jp
loopne
cld
les
in
into
jl
pop
and
xchg
pop
ins
add
dec
pop
mov
jb
push
xchg
movzx
ins
and
adc
lea
xchg
inc
adc
adc
add
or
pop
mov
adc
jne
add
jne
test
test
ret
pop
sbb
push
cmp
loope
(bad)
and
dec
loope
movs
sbb
inc
ror
dec
int3
test
jg
pop
jmp
inc
dec
jne
or
pop
scas
cmc
mov
out
cmp
add
ins
cs
test
mov
jle
jge
pop
and
sbb
push
mul
lahf
dec
cmp
jne
cmps
test
pop
jo
ret
pop
jbe
or
jno
jl
test
dec
cmp
jle
mov
fstp
loop
dec
xchg
dec
xchg
jbe
pushf
pop
pop
or
call
xchg
or
test
scas
push
jbe
push
push
retf
inc
dec
push
jl
xchg
push
pop
cmp
add
clc
cmps
pusha
je
fstp
xchg
mov
sbb
pusha
pop
or
movs
adc
iret
sub
or
xchg
int
add
fisub
jns
mov
or
jle
lods
nop
jecxz
je
jns
jb
arpl
les
les
sub
fistp
stc
mov
clc
adc
call
(bad)
test
aas
aad
sub
cpuid
push
dec
test
cmp
adc
shr
add
jbe
pop
push
ret
inc
and
lahf
push
push
stos
adc
push
sub
rol
or
push
cs
cmps
mov
xor
loopne
in
lea
pop
sub
lea
clc
mov
pop
or
adc
jge
popf
jge
ficom
mov
pushf
nop
fmul
ja
arpl
ss
stos
jne
xchg
icebp
test
(bad)
fs
stos
xor
cmp
xchg
cmp
mov
mov
push
test
pop
xchg
dec
dec
mov
(bad)
in
mov
and
mov
xchg
mov
fadd
jno
jmp
call
pop
sti
push
xor
xchg
mov
jp
inc
xchg
outs
stos
push
xchg
sub
xchg
or
mov
scas
xor
cmp
add
and
dec
hlt
xchg
mov
xchg
mov
test
dec
push
lods
nop
lods
mov
inc
sub
stos
xor
inc
pop
xchg
add
sub
push
das
nop
xchg
jns
(bad)
or
lods
repz
retf
push
jmp
pop
xchg
xchg
push
movsx
cmp
xchg
clc
inc
push
aam
mov
xchg
or
cmp
enter
les
xchg
test
rol
pop
mov
xchg
add
or
xchg
mov
push
push
stos
xchg
push
push
xchg
xchg
(bad)
or
out
and
mov
and
xchg
mov
xchg
or
sub
sbb
mov
fsub
pop
fiadd
test
imul
push
mov
jmp
mov
sbb
cmp
mov
inc
pop
dec
test
in
push
mov
(bad)
and
adc
jae
mov
xchg
pushf
xor
and
mov
sar
mov
leave
add
leave
push
test
jp
dec
push
jae
mov
fcomp
fist
pop
pop
cmp
dec
xchg
add
inc
les
movs
add
push
add
daa
mov
mov
adc
aam
mov
hlt
mov
and
mov
leave
sub
mov
popf
in
jo
pushf
pop
cmp
pusha
adc
push
mov
dec
mov
daa
inc
mov
and
nop
mov
pop
or
fdivp
(bad)
retf
add
mov
test
xor
retf
push
clc
dec
mov
mov
dec
add
mov
shr
sbb
mov
mov
push
push
jb
dec
mov
sbb
push
ret
mov
cmp
in
adc
cmps
mov
mov
stos
mov
push
mov
mov
sub
cmp
mov
je
rcl
test
inc
adc
clc
mov
mov
fwait
(bad)
ficom
push
adc
stc
mov
mov
popf
jmp
cmc
int3
push
inc
adc
mov
jno
aaa
add
xor
jne
nop
lea
cli
cmps
jg
add
xchg
outs
int3
jnp
or
cmps
loop
sbb
cld
psadbw
(bad)
mov
and
inc
inc
dec
jne
shl
push
xchg
(bad)
icebp
add
out
adc
and
mov
sbb
enter
retf
test
int
push
or
out
cmp
add
xlat
mov
daa
cmp
mov
leave
adc
int3
jb
add
int3
enter
sub
out
push
mov
test
xlat
call
jp
push
retf
ins
add
push
out
mov
cmc
cmps
and
add
sub
xor
adc
(bad)
fadd
mov
ror
xchg
call
hlt
pushf
sub
(bad)
in
(bad)
dec
xchg
xchg
mov
xchg
inc
and
leave
fmul
call
rcl
pop
mov
test
mov
dec
and
pop
and
loopne
push
xchg
adc
adc
nop
adc
xor
(bad)
or
push
cli
out
repz
ret
retf
out
test
or
loope
pop
sub
ret
out
sub
shl
sbb
icebp
outs
mov
push
pop
inc
popf
aad
scas
shr
mov
out
(bad)
fdivr
add
in
out
retf
jecxz
push
and
in
mov
adc
lds
pusha
xchg
and
sbb
fs
sub
aam
leave
adc
enter
inc
or
push
mov
out
mov
out
jbe
adc
push
push
out
xchg
sbb
out
ja
push
mov
sub
je
adc
mov
lods
aaa
sbb
aaa
out
shl
fcomp
out
stc
push
fild
or
clc
out
fcomp
adc
sub
mov
pop
fsub
fcmovnbe
(bad)
pushf
jmp
cmp
call
inc
pop
dec
fidiv
jnp
jae
push
mov
mov
mov
gs
add
mov
fldcw
and
push
nop
pushf
test
enter
mov
dec
mov
inc
fst
popf
fmul
push
mov
into
cmc
ja
push
test
pop
mov
push
mov
sub
in
inc
inc
sub
add
pushf
sbb
inc
je
cmp
mov
hlt
mov
dec
dec
ins
out
jae
and
mov
(bad)
loopne
pop
cmp
shl
mov
mov
or
dec
dec
sbb
addr16
pop
dec
inc
test
(bad)
push
test
wbinvd
fidivr
repz
retf
or
adc
inc
dec
repnz
repnz
push
adc
mov
out
jg
dec
or
rol
jbe
nop
inc
enter
add
hlt
push
push
jb
movs
pop
loop
and
inc
push
adc
mov
mov
cmp
cmps
push
mov
sbb
push
mov
test
fldenv
inc
cmps
js
cmp
jns
push
mov
js
jmp
mov
pop
jno
sbb
sub
push
fwait
call
inc
mov
sub
bnd
ds
loopne
loopne
(bad)
pusha
push
call
or
jbe
push
stos
sbb
jns
ins
push
adc
lahf
scas
enter
adc
bound
xchg
clc
pushf
hlt
ret
adc
mov
and
xor
push
pusha
jo
add
ror
dec
aaa
cmp
push
inc
sbb
sbb
loop
aas
add
cmp
jne
add
jb
out
test
aam
jno
(bad)
dec
cmp
mov
jbe
push
pop
mov
mov
dec
jbe
inc
hlt
cmp
dec
sti
mov
mov
sub
inc
inc
dec
jne
enter
mov
push
popf
das
ja
cwde
mov
ja
pop
xchg
xor
jne
test
je
(bad)
loopne
xor
in
sbb
dec
mov
push
xchg
jb
and
mov
cmp
jmp
movzx
dec
jmp
mov
dec
xor
out
xchg
or
dec
pop
call
es
pop
xor
inc
dec
and
mov
cmp
je
pop
mov
cmp
adc
push
xchg
and
xor
push
or
in
mov
push
fidivr
movs
fiadd
add
cmp
mov
xlat
cmc
retf
mov
hlt
or
adc
or
hlt
retf
ror
mov
jge
pop
pusha
inc
or
add
lea
push
adc
dec
add
or
lea
and
pop
dec
hlt
call
xchg
sbb
dec
push
dec
sar
clc
or
add
add
pusha
mov
xor
push
iret
mov
call
adc
movs
jmp
rol
pushf
cmp
jle
pop
div
jg
jg
lea
dec
cmp
jg
or
push
clc
mov
cmp
jle
push
add
dec
ss
popa
pop
loopne
push
mov
pop
jbe
retf
data16
or
xchg
retf
adc
and
mov
mov
push
adc
or
add
inc
test
call
jge
pop
lock
mov
sub
shr
add
es
pop
ret
loopne
into
mov
dec
mov
jge
lea
jmp
addr16
fincstp
mov
jp
ret
sbb
add
or
(bad)
xchg
(bad)
jmp
(bad)
out
shl
push
lahf
xchg
out
js
cmp
xchg
out
nop
clc
xchg
clc
stos
add
data16
mov
ins
pop
dec
rol
adc
push
sbb
je
ja
and
mov
mov
push
es
sbb
ret
inc
nop
sbb
xor
ds
push
lds
cmps
adc
add
in
sbb
add
push
call
push
neg
lock
in
add
add
push
enter
repnz
cld
dec
sbb
push
fcomp
int
adc
or
and
push
std
pusha
add
mov
push
adc
adc
dec
add
std
xor
(bad)
ret
add
les
rol
pop
movs
mov
or
pusha
jnp
sub
nop
inc
adc
adc
adc
mov
add
jmp
pusha
jmp
jo
icebp
add
jo
push
(bad)
js
sbb
mov
bound
mov
add
add
inc
or
sub
inc
inc
add
mov
and
cwde
call
inc
pop
add
pop
call
add
xchg
add
mov
outs
cmp
mov
daa
sbb
out
lods
adc
push
add
jne
(bad)
ret
mov
sub
es
push
or
adc
hlt
in
loopne
dec
neg
pop
cwde
pop
add
addr16
lock
ins
out
shl
and
pusha
or
xor
mov
push
and
aaa
loopne
add
daa
into
in
jl
add
push
add
or
loop
adc
add
inc
push
inc
lea
pop
xchg
xor
mov
jle
js
adc
sbb
pushf
retf
dec
dec
hlt
add
aaa
and
push
fcom
xor
mov
out
adc
add
add
pop
out
or
jnp
mov
in
adc
fdiv
push
in
fstp
or
ins
inc
and
enter
int
je
mov
xor
dec
idiv
jb
add
jbe
dec
call
mov
dec
movs
jp
aaa
and
adc
mov
add
adc
fisubr
and
add
mov
fidiv
adc
pop
sbb
adc
ins
aas
clc
mov
adc
add
aas
test
movs
mov
ds
(bad)
nop
sbb
sbb
add
and
jg
adc
sbb
add
loopne
jg
add
xor
mov
inc
mov
mov
lods
push
or
add
inc
add
sbb
ror
pop
rcl
(bad)
cs
(bad)
sbb
fstp
jne
fimul
rcl
pusha
mov
cmp
inc
cmp
mov
mov
in
call
ja
xor
and
push
fsubr
inc
cmps
test
sbb
neg
(bad)
enter
add
andps
(bad)
fsub
cli
cmp
add
inc
mov
cmp
ins
mov
push
add
sub
dec
aad
inc
es
cmp
xor
fld
(bad)
fs
mov
inc
test
sbb
add
or
mov
add
inc
mov
nop
cli
inc
not
or
adc
daa
pushf
jnp
inc
fimul
xchg
rcl
push
add
xchg
xchg
xchg
scas
xchg
xchg
jmp
sub
inc
adc
jp
or
adc
cmp
pop
outs
cmp
jle
addr16
test
and
inc
mov
sub
les
iret
jl
out
and
and
addr16
lock
fbstp
loop
push
je
or
add
and
int3
mov
clc
push
add
jbe
mov
clc
jns
add
sub
add
sar
mov
out
rcl
and
xor
sbb
es
hlt
add
jp
aaa
je
sub
sbb
cs
ds
fidiv
fld
(bad)
rcl
shl
mov
inc
(bad)
push
call
sub
dec
mov
clc
mov
xor
sbb
mov
aas
add
xor
mov
call
and
mov
mov
jmp
les
or
scas
sbb
adc
fadd
inc
dec
pop
nop
cmp
ret
inc
sub
out
add
sbb
pop
pushf
mov
hlt
scas
int3
add
or
xor
add
and
lods
add
imul
inc
mov
test
xor
or
mov
jne
psadbw
enter
js
or
ret
inc
adc
aam
ror
pop
(bad)
fimul
sbb
push
aam
cmp
arpl
and
cmc
shl
inc
pop
test
inc
add
mov
dec
pop
ins
call
hlt
mov
test
pop
cwde
or
xchg
adc
call
std
adc
test
pop
add
mov
js
pop
push
loope
sar
into
push
cli
inc
test
xchg
(bad)
xchg
fcomip
push
push
repnz
add
pop
adc
lds
mov
fisttp
or
std
and
cwde
int
test
adc
aam
xor
mov
add
jmp
push
cs
test
adc
(bad)
push
retf
dec
jnp
cmps
into
jo
jb
fidivr
addr16
xchg
or
cmps
mov
addr16
(bad)
cmps
inc
test
mov
(bad)
push
cwde
mov
rcr
loopne
adc
dec
ja
fucom
push
pusha
js
(bad)
loope
push
sub
aam
lods
push
add
scas
adc
sub
test
test
push
jmp
test
pusha
adc
inc
lods
cwde
cwde
dec
test
mov
out
fs
dec
test
sub
mov
push
xor
repnz
pop
or
add
jle
enter
add
fistp
sbb
outs
sbb
jg
lods
lods
inc
ins
xor
jg
and
jl
or
xchg
jo
and
and
jmp
mov
xor
sub
mov
push
mov
jb
sbb
mov
xor
jge
mov
push
test
nop
lods
mov
repnz
aaa
mov
adc
in
mov
jo
int3
add
les
in
into
jl
pop
push
loop
mov
xchg
push
fadd
pop
mov
pop
mov
in
test
rdpmc
rcr
ret
add
or
xchg
ja
hlt
adc
adc
adc
stos
lods
inc
xchg
ja
ja
dec
pop
mov
jno
mov
popa
sbb
shl
or
push
pop
ja
dec
or
jle
mov
jo
mov
loop
fld
fs
jle
jmp
or
mov
pop
push
push
and
dec
mov
pusha
pop
or
jne
aaa
or
iret
xchg
jne
dec
clc
jns
fs
adc
pop
ins
jns
test
mov
and
imul
or
sbb
stc
sbb
pop
je
clc
adc
call
rol
and
rol
push
adc
push
jnp
in
jmp
add
and
push
and
xchg
fisubr
sbb
adc
add
sbb
pushf
push
xchg
pop
and
push
je
and
outs
jmp
int
daa
ins
add
sub
adc
stos
hlt
or
push
inc
fst
and
and
adc
jo
push
pop
sbb
sbb
inc
pop
push
jb
push
bound
fst
sbb
mov
(bad)
ror
mov
mov
sub
cmp
add
push
sub
mov
push
xchg
adc
xchg
adc
adc
push
adc
adc
jns
mov
push
arpl
fcom
push
repz
adc
cmp
mov
mov
pop
xor
cli
int
dec
add
sbb
pop
pop
xchg
or
sbb
rcr
adc
sub
pop
push
leave
sub
mov
sbb
cmp
pushf
xchg
sub
adc
add
lock
test
push
push
leave
jl
stos
test
push
dec
sub
push
mov
push
and
push
xchg
lods
dec
push
cmp
(bad)
mov
ror
jns
mov
dec
fstp
ficom
jp
test
dec
inc
repnz
in
loopne
mov
or
les
sar
call
push
cwde
cs
mov
sub
aaa
lahf
push
enter
dec
sbb
xchg
push
add
xchg
xor
inc
pusha
add
mov
mov
jmp
loopne
add
jmp
add
add
sbb
add
inc
xor
pushf
adc
mov
enter
xor
test
mov
jb
cdq
mov
shl
mov
pop
cwde
test
ins
scas
loopne
add
jbe
and
adc
and
add
xchg
cmp
pop
mov
sub
sub
and
mov
push
mov
adc
fdiv
or
out
or
or
or
pushf
or
push
xor
cwde
xor
push
add
add
jo
aas
pop
nop
aas
mov
rcl
sbb
mov
pop
xor
cmps
jecxz
jmp
mov
jae
and
loopne
nop
and
out
push
add
jb
xor
jmp
in
add
adc
jmp
stc
jno
mov
and
movs
movd
or
cld
or
hlt
into
hlt
mov
clc
and
add
inc
mov
or
in
lea
int3
lea
pushf
daa
mov
lea
push
push
sbb
ret
sbb
shl
sbb
int
pop
pusha
pop
or
xchg
(bad)
jb
loopne
out
call
icebp
mov
push
test
aam
pop
jo
push
add
jbe
cmps
add
add
shr
push
xchg
add
and
add
loopne
cdq
ret
mov
imul
loopne
jb
cmp
mov
retf
adc
adc
or
cmp
pusha
mov
add
xchg
jbe
iret
sub
cmp
pusha
adc
iret
or
or
cmc
xchg
add
add
cmp
push
rol
jo
iret
sub
xor
jno
scas
add
imul
cmp
outs
mov
and
xchg
iret
push
jmp
hlt
stos
shl
js
imul
loope
clc
cmc
dec
in
(bad)
jno
xor
nop
in
push
daa
loopne
push
pusha
jmp
sub
sub
pop
jo
out
push
sbb
and
or
sbb
popa
in
adc
push
dec
and
add
mov
rol
cld
add
inc
and
sub
mov
ficomp
inc
add
ins
and
add
(bad)
aaa
add
and
push
mov
adc
test
lods
add
test
or
add
in
out
arpl
js
adc
loopne
mov
sub
cs
js
inc
push
xchg
add
(bad)
call
push
add
sub
adc
scas
fild
add
ja
pop
jo
sbb
jle
xor
add
pop
int
dec
scas
aaa
stc
add
rol
js
(bad)
lods
cmp
jge
pop
fdivr
add
es
sbb
clc
or
sub
sub
shr
and
mov
rol
mov
lahf
push
push
imul
ds
add
das
inc
jmp
dec
push
jo
aam
dec
adc
add
ins
sbb
aaa
add
dec
outs
inc
fisubr
cmp
ja
and
jae
push
mov
pop
jbe
repz
cmps
and
jle
and
mov
xchg
arpl
fidivr
inc
fdivr
retf
aam
add
in
(bad)
in
adc
sti
rcr
test
ret
mov
loopne
mov
push
add
lea
xchg
pop
push
lea
adc
inc
cmp
jge
test
sub
and
and
dec
mov
je
pop
sahf
push
cdq
add
jle
add
adc
fadd
push
data16
xchg
pusha
fwait
pop
aam
lock
sbb
inc
inc
add
fiadd
add
pop
mov
lods
cwde
inc
aam
in
pop
adc
out
or
xor
or
scas
loopne
xor
adc
ins
ds
inc
enter
es
xchg
scas
inc
or
js
pop
push
pop
dec
inc
lock
out
add
jo
scas
sbb
scas
iret
or
sbb
pop
cmp
push
xor
xchg
and
lds
jae
or
sub
jbe
aaa
pop
add
hlt
cmp
popa
sbb
adc
jecxz
or
arpl
sub
xchg
ins
daa
pusha
les
repz
data16
cdq
in
loopne
shl
and
je
cmp
into
loop
and
shl
jae
scas
or
mov
lea
push
and
xchg
aad
xlat
stos
mov
or
(bad)
pusha
hlt
dec
mov
ret
adc
dec
fs
je
stos
jge
push
add
xor
sub
stos
cmps
test
mov
push
je
in
dec
sub
sub
and
ret
pop
mov
sbb
nop
sub
cli
inc
and
jno
add
mov
pop
adc
jo
outs
mov
cmp
jne
inc
loopne
jo
dec
fsubr
xor
xor
cmps
enter
add
jne
pop
xor
adc
fbstp
or
sub
shr
adc
add
push
out
sub
add
pop
test
addr16
or
inc
xchg
inc
dec
outs
call
(bad)
jle
sti
push
ja
fild
jg
fwait
ins
ret
push
push
inc
test
dec
or
ja
jo
(bad)
push
inc
test
jl
dec
outs
dec
fbstp
fs
adc
jl
or
je
or
(bad)
push
push
test
push
inc
sbb
pop
int
movs
sub
jne
jns
or
pushw
ins
jns
and
or
retf
xchg
lods
and
dec
mov
jb
or
test
inc
jecxz
call
pop
mov
xchg
sub
push
fcmovu
pop
sbb
mov
adc
push
pop
pushf
push
xchg
pushf
pop
dec
inc
or
(bad)
aaa
add
add
cmps
cmp
scas
pop
mov
dec
add
mov
stc
cmp
repnz
inc
sbb
dec
mov
cmp
dec
repnz
cmp
sub
dec
inc
push
mov
push
dec
loopne
mov
scas
push
and
(bad)
nop
bound
pop
test
add
push
mov
inc
aam
jno
pop
sub
out
sbb
jg
pop
loope
fdivr
in
(bad)
add
mov
call
mov
adc
cs
dec
mov
pop
inc
and
or
sub
cmp
adc
shl
pusha
push
les
mov
icebp
and
cmp
mov
push
add
dec
adc
iret
mov
dec
pop
sub
jg
test
xor
cmp
add
retf
dec
(bad)
cmc
xchg
or
sub
sub
rol
add
adc
inc
daa
or
mov
iret
inc
push
out
jo
cmp
iret
hlt
iret
xchg
pushf
sub
jnp
push
dec
outs
mov
lods
adc
rcl
mov
call
mov
fimul
les
pop
push
inc
sub
cmp
mov
scas
dec
push
loopne
pop
retf
add
push
test
mov
js
cld
push
add
and
mov
pop
mov
clc
push
adc
inc
add
or
jb
push
mov
push
pop
aad
lods
je
addr16
lea
pop
xchg
push
test
inc
jae
add
shl
adc
mov
mov
scas
and
hlt
mov
xor
inc
mov
adc
add
jbe
cmp
jmp
add
inc
add
dec
jmp
jge
add
dec
wrmsr
xchg
adc
and
push
in
pop
pop
mov
rol
out
pop
push
jg
mov
in
push
test
lods
lods
sbb
cmps
into
jo
cmp
push
jnp
arpl
or
inc
shl
mov
cmp
add
sbb
dec
or
adc
loop
adc
adc
sbb
pop
clc
repnz
push
xchg
sbb
daa
cmp
lea
fild
or
xchg
push
fild
loope
mov
pop
arpl
fbld
mov
aam
jmp
retf
out
adc
mov
hlt
jns
xor
enter
inc
inc
cmp
mov
(bad)
xor
dec
cmp
xor
mov
hlt
test
sbb
xlat
aaa
sbb
jp
mov
jmp
jne
cli
(bad)
push
cmps
repz
adc
cmps
add
xchg
out
inc
movs
inc
push
add
mov
out
aas
loopne
ret
out
cmp
iret
daa
add
out
xlat
push
cld
test
mov
cmp
fisubr
sbb
lods
pop
ss
in
mov
test
and
jmp
stos
mov
mov
rol
pushf
push
pop
ss
or
mov
xchg
jge
mov
or
rcl
jl
cmp
pop
push
lea
mov
imul
adc
jle
daa
ret
mov
jno
loop
jl
mov
add
pusha
push
pop
ins
dec
pop
mov
push
addr16
rdpmc
ror
mov
push
or
adc
add
daa
xchg
test
add
xchg
push
xchg
test
aam
lea
push
ja
out
jle
cld
cmp
jne
jp
jmp
imul
sbb
add
mov
(bad)
pop
les
or
inc
aaa
mov
loopne
sub
dec
cmp
jle
lock
push
jmp
jg
pop
mov
xchg
call
test
movs
push
pusha
dec
in
push
xor
gs
and
pop
or
jne
adc
dec
xchg
sub
or
xchg
int
add
fisub
jns
or
or
mov
je
add
dec
movs
sub
mov
mov
sbb
(bad)
and
sbb
adc
sub
jmp
(bad)
mov
xor
movs
cs
dec
mov
jnp
aam
adc
push
and
jns
dec
pushf
or
inc
jb
add
dec
ins
push
and
add
jo
add
cs
enter
sbb
daa
mov
adc
inc
lods
mov
lea
movs
cmp
mov
pushf
imul
ror
xor
loope
jmp
push
rcl
or
xchg
push
add
out
das
sbb
push
pop
mov
dec
inc
lock
icebp
(bad)
or
xor
xor
jo
push
dec
pop
mov
dec
or
je
adc
popa
jo
cmp
pop
in
data16
or
jns
xchg
cmp
jg
pop
shl
fild
inc
mov
jp
jmp
add
jg
adc
movs
inc
adc
test
dec
daa
jg
and
push
mov
add
in
jg
shl
xchg
scas
mov
push
pop
mov
into
hlt
jmp
and
cs
mov
push
xchg
dec
sbb
cs
cmp
pop
mov
mov
xchg
or
retf
arpl
mov
cmps
xchg
cmp
or
add
mov
and
inc
add
jle
mov
dec
mov
daa
xor
je
mov
ds
scas
mov
or
in
or
mov
mov
push
aas
dec
xor
dec
adc
cmp
jmp
test
cs
add
je
or
ror
pop
cli
xchg
xchg
add
in
sbb
(bad)
lea
xchg
xchg
stc
inc
mov
pusha
fcom
xchg
test
xchg
lods
jmp
imul
jb
ja
fsub
or
sub
mov
ret
or
or
ffreep
(bad)
int
push
(bad)
ret
cmp
jmp
mov
adc
(bad)
mov
and
adc
(bad)
adc
pop
cmp
inc
pop
or
std
sbb
mov
cs
xlat
retf
cmp
mov
mov
push
enter
aas
(bad)
nop
mov
push
fs
stos
inc
and
call
mov
mov
call
cwde
out
sub
push
push
or
xchg
add
pusha
in
ret
dec
xor
adc
cmps
enter
cmps
add
or
rcl
xlat
lods
data16
jecxz
mov
mov
mov
loop
jns
fisttp
cmp
daa
mov
jecxz
sbb
jno
cmp
dec
leave
adc
xor
xor
pop
ins
outs
mov
gs
pop
lock
push
enter
(bad)
mov
cmp
daa
add
ins
push
jns
jmp
xor
pusha
pop
ins
mov
dec
inc
gs
or
xchg
xor
inc
lods
adc
sbb
movs
aaa
loop
repnz
ficom
mov
sub
sub
dec
pushf
adc
push
adc
movs
xchg
add
inc
cmps
xchg
push
mov
and
and
pop
out
fwait
addr16
add
sbb
test
enter
mov
add
fisubr
sbb
mov
call
mov
sbb
or
shr
inc
sbb
aas
or
push
test
jnp
cmp
jle
dec
dec
ja
fild
jg
push
push
sahf
push
enter
ja
dec
in
add
mov
sub
dec
ja
xchg
jbe
mov
pushf
cmp
or
repz
push
mov
jl
test
mov
rol
ret
mov
mov
int
js
sbb
scas
pop
mov
inc
(bad)
leave
das
test
jae
pop
add
outs
push
dec
imul
pop
pop
shr
loopne
mul
gs
daa
pop
dec
dec
jb
mov
and
and
in
pop
and
pusha
mov
lea
cmp
inc
daa
mov
xor
pop
hlt
scas
hlt
mov
push
jmp
test
sbb
vunpcklps
sti
call
jge
mov
mov
or
std
repnz
cs
pop
lahf
push
dec
or
ffreep
sub
xchg
mov
icebp
adc
cmp
xchg
mov
mov
xchg
inc
push
mov
mov
dec
or
xor
test
loopne
mov
std
(bad)
ins
pop
push
retf
jle
mov
mov
lods
arpl
call
mov
push
cmp
mov
pop
fcom
ret
cmps
push
movs
push
add
pop
pop
movs
pusha
shr
jmp
rol
cmps
std
inc
push
or
add
cmps
arpl
cmp
dec
pushf
cmps
push
add
test
add
and
dec
pop
hlt
inc
movs
retf
(bad)
jno
out
aam
pusha
push
daa
mov
jbe
adc
cwde
pop
inc
jo
xchg
pop
scas
sub
sub
jo
xchg
pushf
mov
enter
and
mov
(bad)
mov
lds
xor
xor
ds
ret
ffreep
xchg
push
cmps
add
dec
push
scas
xor
js
dec
add
sbb
sub
sub
sub
jecxz
call
sub
pusha
xchg
mov
sub
pcmpeqw
dec
cmp
xchg
rcr
push
fist
inc
xor
pusha
add
loope
add
cmp
mov
cmp
fild
bound
add
xor
pop
call
adc
repz
je
rcl
imul
pop
inc
(bad)
xor
inc
fsub
sub
pop
xor
test
push
push
test
mov
sub
and
pop
sub
adc
xchg
mov
shr
jbe
in
add
inc
cmp
inc
push
inc
fidivr
test
sub
dec
mov
je
add
dec
fs
xor
pop
(bad)
vsubps
xor
mov
fwait
pop
aam
lock
jno
outs
jl
loopne
add
dec
mov
pop
sbb
or
mov
gs
popa
aam
in
adc
inc
cwde
jne
(bad)
gs
pop
sbb
inc
cmps
loopne
nop
push
ds
nop
popf
movs
mov
cmp
imul
ja
pop
test
xchg
data16
lock
bound
sbb
or
and
test
mov
xchg
mov
push
and
push
bnd
pop
sub
enter
hlt
sub
mov
pmuludq
aas
jecxz
mov
popa
rcr
cmc
or
and
sub
sbb
stc
or
add
mov
dec
add
popf
jns
in
inc
mov
or
dec
jae
sub
dec
scas
push
test
xor
mov
scas
pop
inc
mov
adc
mov
or
sar
inc
add
(bad)
jecxz
(bad)
pop
add
pop
mov
sub
pop
mov
cmp
or
call
data16
mov
jno
ja
jecxz
jmp
dec
sti
rol
jnp
cmp
arpl
sti
add
dec
push
ja
push
enter
fadd
aad
scas
ror
sub
or
retf
loopne
ficom
lea
inc
imul
lods
inc
aad
pop
daa
add
push
inc
imul
cmp
dec
outs
fs
cmp
sti
scas
adc
jl
or
je
or
and
jne
dec
js
jp
js
xor
pop
or
jl
pushw
movs
sub
pusha
push
ins
test
je
sbb
jp
out
mov
or
sbb
push
xchg
push
adc
and
adc
sub
cmps
popf
push
pop
nop
imul
jecxz
ja
inc
push
fcmovu
pop
mov
arpl
push
lods
(bad)
hlt
ss
daa
cmp
aaa
out
rcl
(bad)
ins
ins
daa
xchg
sub
in
jo
or
xchg
cmp
test
pop
inc
or
inc
in
mov
mov
adc
call
or
add
cdq
push
and
push
sub
pop
sti
add
jl
cs
test
jg
jne
jmp
push
je
cmp
mov
pop
loopne
push
call
mov
dec
xor
outs
cmp
cmp
jle
or
inc
dec
cmp
add
inc
ds
pop
lea
push
push
cmp
ins
test
dec
pop
sub
adc
add
dec
push
or
or
sbb
loopne
sbb
add
es
stos
fwait
call
nop
jg
add
ss
add
adc
shl
push
test
adc
add
xchg
lods
mov
push
lock
push
add
jo
jbe
jnp
xor
nop
sbb
mov
int3
popa
lahf
jb
add
cmp
rol
push
sbb
xchg
(bad)
mov
retf
retf
mov
push
add
push
xchg
dec
das
add
vsqrtps
ins
jb
scas
and
pop
pop
lea
adc
pop
dec
ins
ret
call
adc
popa
lods
pop
push
push
inc
rol
aas
bound
push
fdiv
add
xor
inc
pushaw
inc
and
pop
or
pop
push
and
lds
add
jmp
loope
imul
jg
lea
dec
cmp
jg
adc
test
push
pop
push
xor
pop
jo
cmp
jle
push
add
dec
push
inc
add
mov
(bad)
(bad)
int3
push
dec
cmp
adc
pop
jo
pop
push
jne
adc
add
inc
test
mov
mov
sbb
jg
mov
sub
shr
add
in
sub
cmps
mov
inc
cmp
jge
lea
jmp
popa
in
data16
sbb
je
lds
sbb
mov
dec
add
xor
push
or
cmp
cmp
adc
(bad)
push
xchg
leave
mov
out
(bad)
popf
dec
inc
cmp
mov
sbb
repnz
scas
addr16
in
add
lea
nop
in
mov
call
inc
add
retf
mov
pop
mov
movs
lods
sub
jns
xchg
add
loopne
(bad)
js
mov
sub
cmp
mov
add
mov
xor
jo
jno
in
js
outs
out
xchg
add
mov
mov
push
or
xor
dec
adc
or
aad
rcr
cmp
mov
fadd
xor
imul
pop
push
jne
xchg
xchg
das
scas
fsub
in
or
inc
adc
jge
pop
enter
(bad)
cmp
push
(bad)
cmp
or
and
mov
loopne
jbe
in
add
lea
inc
push
push
push
leave
sub
ds
add
xchg
cwde
stos
imul
fadd
inc
jne
lahf
inc
pop
dec
push
cmps
or
dec
add
nop
test
movs
mov
xchg
test
add
pusha
dec
sub
shl
mov
inc
lahf
pop
xchg
cmp
jno
stos
rcl
push
add
pop
pop
cmps
and
xchg
and
fadd
ror
mov
sub
mov
dec
mov
add
popa
adc
and
ins
push
and
pusha
fs
jne
mov
jmp
mov
push
cmp
jnp
sub
iret
jg
ins
inc
xchg
lock
dec
or
mov
or
mov
lahf
cmps
jb
xor
out
pusha
not
jmp
mov
mov
xchg
inc
rol
sbb
aam
push
movs
xchg
xchg
push
lds
test
xchg
fdivr
mov
out
inc
mov
mov
jmp
adc
repnz
test
lock
or
pop
pop
push
push
or
jmp
stos
xor
call
inc
jne
mov
aad
pop
pop
or
test
mov
out
add
cmp
mov
adc
daa
lea
mov
mov
pusha
inc
daa
in
inc
push
sbb
lds
or
adc
sbb
aaa
cwde
jo
lea
lea
sbb
cmp
cmp
fdivr
in
push
fmul
or
mov
mov
add
iret
pop
repnz
sub
in
jp
and
fidivr
mov
jne
xchg
sbb
jb
dec
jne
outs
push
push
sbb
xchg
xchg
sbb
inc
daa
dec
add
xchg
sub
push
pop
mov
jb
in
(bad)
int
jae
xchg
rol
sbb
rcl
cmps
inc
add
mov
pop
call
enter
push
sub
or
mov
add
mov
adc
mov
cdq
mov
jmp
cs
ficomp
das
cdq
inc
aas
and
push
ds
sub
repnz
daa
push
add
nop
out
out
lock
cwde
cmp
xchg
jmp
cmp
pop
pop
pop
into
adc
in
mov
adc
jmp
icebp
sub
aaa
pop
push
test
xchg
fsub
adc
daa
dec
xor
aam
add
sbb
sub
mov
hlt
das
jmp
lods
call
ret
mov
inc
das
adc
mov
fcomp
pop
jne
jl
cmp
das
pop
xor
mov
ds
and
stc
jo
dec
sbb
pusha
push
in
mov
shl
xchg
push
test
clc
inc
mov
repz
ret
dec
arpl
cmps
(bad)
popf
xchg
sub
loopne
popa
ins
xlat
and
neg
jmp
push
xchg
daa
sub
daa
daa
daa
sbb
mov
in
push
pop
arpl
daa
add
dec
cmp
ins
jo
jb
jae
outs
cmp
jns
je
ins
cs
je
imul
push
fisub
ins
and
outs
je
es
sub
pop
int3
dec
jmp
dec
outs
arpl
adc
add
sbb
call
add
movs
arpl
inc
gs
jne
je
add
cli
or
int3
add
push
mov
add
enter
sub
xor
adc
cmp
repz
int3
sub
inc
and
xchg
cs
fldenv
(bad)
call
push
pop
push
add
lods
pop
loopne
jnp
fsub
cli
push
adc
jp
jge
jl
in
jle
push
adc
or
aad
clc
(bad)
fidiv
sub
or
push
jl
and
xor
iret
ins
jnp
xlat
add
xor
bts
and
push
jo
ss
out
fcomi
pop
les
inc
add
dec
shl
add
push
gs
ins
data16
les
add
nop
(bad)
lods
cmp
retf
arpl
push
mov
and
mov
mov
mov
or
adc
js
ds
rcl
imul
mov
clc
or
push
mov
cmp
repz
ds
fidivr
sbb
sbb
nop
push
popa
xor
jo
lahf
xchg
add
cmp
mov
or
daa
mov
mov
pop
les
loop
mov
push
or
sub
xor
mov
push
mov
ficom
out
movs
fadd
adc
iret
and
xchg
adc
push
add
sub
xor
pushf
outs
jbe
inc
jb
jns
popa
outs
popa
addr16
adc
addr16
xchg
sbb
xchg
popa
sbb
adc
push
inc
(bad)
jmp
loopne
jb
dec
outs
fs
in
imul
in
pop
push
outs
and
add
fiadd
xor
int
mov
int
shl
add
inc
imul
imul
jno
(bad)
scas
add
cdq
jns
push
jg
repnz
ins
pushfw
aam
shl
fld
aam
cmove
fiadd
mov
and
xor
and
je
repz
and
and
data16
in
cmp
adc
cmp
gs
adc
pop
int3
pop
mov
into
repz
push
jno
pop
mov
fadd
rcr
mov
movzx
mov
mov
add
add
jne
daa
and
add
push
and
and
lds
add
fadd
add
push
xor
inc
out
out
add
mov
add
sbb
add
scas
fsubr
call
push
jge
or
daa
add
ss
xor
ds
pusha
lods
push
(bad)
fisttp
jg
add
xchg
dec
mov
fsub
push
jb
inc
or
jo
bound
ds
call
xor
xor
scas
jecxz
ret
hlt
xchg
aas
and
mov
dec
or
sbb
cvtpi2ps
push
and
loope
mov
xor
dec
outs
or
inc
int3
ficomp
add
xchg
push
call
div
push
daa
adc
push
sub
add
pop
aas
or
call
xchg
push
adc
test
addr16
xor
je
ret
jnp
inc
push
scas
sbb
cmps
aam
pop
sbb
ss
dec
dec
pop
pop
mov
push
pop
cmps
test
or
jg
push
out
cli
popa
sub
or
push
cmps
dec
push
mov
pop
mov
mov
call
cmp
mov
ror
int
rol
dec
mov
dec
adc
shl
and
cmp
shr
iret
add
cmc
add
cs
dec
inc
outs
jne
adc
bound
inc
xor
jp
add
pop
(bad)
add
push
inc
test
ret
add
mov
in
dec
push
daa
pushf
mov
movs
xor
in
xchg
in
call
push
movzx
jl
and
push
inc
out
or
jno
xor
push
fidivr
jnp
xor
shl
jmp
inc
and
stos
sbb
je
jb
mov
jle
inc
es
inc
jb
sbb
dec
nop
ficom
xchg
inc
dec
add
add
dec
dec
add
mov
push
and
ins
or
mov
pop
lds
add
add
mov
ret
ja
add
pusha
mov
mov
sbb
add
sub
cmp
and
cli
out
fidivr
cmp
push
push
push
cmp
sub
jnp
or
pop
sbb
shl
adc
jae
and
fsubr
sar
jae
mov
sub
add
adc
jo
mov
add
mov
mov
pop
xlat
xor
push
dec
inc
les
mov
add
or
movd
sub
pushf
ret
xor
and
dec
sahf
jmp
daa
stos
add
dec
enter
xchg
ret
repnz
ret
leave
leave
leave
leave
cmp
in
in
les
mov
addr16
cld
aas
lds
adc
in
and
and
inc
scas
ret
ds
pop
push
psrlw
push
push
and
fs
mov
add
push
pop
pop
push
outs
dec
or
mov
ins
or
inc
inc
add
dec
jno
jp
push
add
cmp
inc
pop
cwde
mov
adc
push
lock
jns
cmps
jb
and
retf
add
leave
sahf
sbb
dec
pusha
mov
push
stos
dec
jae
or
adc
or
inc
imul
add
add
(bad)
cli
repz
add
inc
fs
mov
popa
cdq
sahf
out
ins
jne
arpl
add
or
push
mov
push
test
ins
add
lock
sbb
adc
jbe
adc
fadd
dec
jl
sub
movs
clc
jae
add
adc
jo
xchg
out
out
mov
add
movs
xchg
or
cmp
or
sbb
xchg
and
das
leave
add
movs
call
and
adc
xchg
ss
test
in
and
xor
cld
bound
imul
add
or
repnz
or
add
or
ins
aam
mov
jno
movs
shl
inc
mov
add
sub
dec
add
enter
inc
bound
xor
sub
sbb
push
jo
push
pusha
xor
gs
push
dec
cmc
add
ja
pop
xchg
sbb
add
loop
bound
scas
mov
ins
ficom
mov
mov
xor
pop
xor
ror
xchg
cs
test
dec
gs
aas
xchg
xor
les
pushf
inc
pusha
push
mov
idiv
push
loopne
mov
add
popa
pop
mov
push
mov
mov
and
es
dec
jno
sub
dec
aaa
es
call
movs
je
imul
sub
cwde
ss
popw
dec
add
into
imul
mov
loope
mov
inc
cmc
mov
pop
and
ds
imul
fisttp
sbb
sbb
fistp
shr
cli
push
test
sub
dec
add
ins
or
or
mov
mov
outs
repz
and
mov
dec
cmp
cmp
mov
mov
shr
mov
dec
dec
test
clc
hlt
iret
mov
imul
(bad)
cwde
pusha
or
xlat
mov
dec
rol
not
sub
jnp
inc
or
push
add
pop
pop
sub
xor
in
inc
mov
push
adc
jns
push
mov
adc
test
loop
xchg
or
add
add
dec
sbb
inc
addr16
sub
sub
loopne
pop
jns
dec
xchg
push
mov
popa
movs
aam
iret
hlt
arpl
jns
add
les
fadd
sub
push
aas
out
inc
xor
int
fisubr
out
ret
out
sbb
cmp
push
inc
and
enter
jo
pusha
in
(bad)
jl
pop
aas
hlt
add
scas
nop
xor
call
sub
pop
stos
push
ins
pushf
das
mov
mov
fmul
movups
leave
or
test
xchg
gs
sub
sbb
add
mov
mov
xor
and
call
xor
mov
adc
in
add
cmp
pop
add
cmps
bndstx
cwde
mov
xchg
addr16
test
and
mov
dec
inc
iret
inc
int3
push
and
das
rol
add
iret
call
add
rcr
jmp
fdiv
xor
ficomp
or
and
mov
popa
clc
shl
or
rol
les
popa
cmp
js
or
pop
or
nop
sub
lea
jno
scas
pop
mov
(bad)
fcmovbe
test
jne
inc
or
fwait
mov
sbb
aas
sub
nop
mov
mov
fiadd
mov
pop
iret
pop
lods
clc
sub
and
aas
xchg
adc
adc
(bad)
mov
push
int3
push
pop
pop
xlat
ret
call
add
push
fsubr
fadd
ss
mov
sbb
sbb
(bad)
cmp
fisttp
push
ja
lods
push
sbb
xchg
xchg
daa
mov
(bad)
add
aas
leave
enter
int
shr
leave
leave
leave
(bad)
ret
shl
in
fs
stc
inc
aam
jb
xor
cmp
cmp
inc
push
xlat
pushf
pushf
mov
(bad)
pop
test
loopne
xlat
aas
imul
call
pop
push
(bad)
xor
push
or
pop
cmp
imul
mov
retf
stos
mov
push
sub
mov
aam
shl
shl
dec
inc
leave
inc
popf
mov
and
pushf
mov
popf
cmp
mov
(bad)
pusha
test
stos
pop
cmps
adc
jne
hlt
or
in
ja
xchg
inc
add
mov
inc
cmps
outs
clc
jbe
jae
add
aaa
out
or
shl
cmc
adc
mov
push
adc
dec
adc
cmc
das
mov
pop
fwait
aam
inc
xor
and
call
loop
pop
xor
mov
and
mov
sbb
dec
add
push
mov
mov
xchg
rol
mov
add
add
jae
mov
jle
cmps
sbb
mov
add
loopne
mov
pushf
cli
push
or
dec
add
sbb
xchg
xchg
pushf
mov
mov
xchg
and
frstpm(287
aam
lea
and
pushf
push
fiadd
jmp
dec
out
mov
aaa
add
dec
bound
mov
cmps
outs
test
call
sub
sbb
or
ja
mov
adc
pop
jge
push
stos
or
mov
pop
and
or
dec
jo
mov
pop
xchg
je
and
push
ja
mov
or
sbb
xor
pop
(bad)
loopne
inc
in
adc
loop
sbb
pop
jbe
mov
mov
scas
jo
mov
mov
jo
mov
push
icebp
pop
dec
cmps
inc
cmps
pop
pop
add
sub
int3
sub
lock
out
mov
pusha
adc
dec
sbb
icebp
mov
push
test
icebp
clc
inc
dec
lea
lea
sub
mov
or
icebp
mov
adc
aaa
pushf
dec
mov
cmc
add
push
mov
mov
mov
pop
lds
fisubr
shr
add
pop
movs
das
ret
jne
push
psubsw
push
push
fcmovne
femms
mov
addr16
loop
shr
call
and
int
pop
loopne
or
and
and
cmps
push
add
test
add
xlat
pop
std
pop
shr
dec
cmp
(bad)
aaa
mov
mov
xchg
sub
pop
movs
fnsave
in
les
jl
push
lods
xlat
das
in
push
and
cmc
dec
into
je
pop
gs
pop
xchg
jmp
cmc
rcl
jmp
jge
dec
push
jmp
imul
ja
retf
imul
push
imul
aaa
pop
pop
push
mov
pop
ss
scas
sbb
retf
aad
jno
loop
cmps
sbb
ja
push
fsub
loope
or
addr16
and
mov
push
sub
ins
push
js
jg
dec
sub
sbb
popf
or
pushf
jg
jg
pushf
fiadd
imul
dec
jmp
mov
pextrw
ja
test
loop
push
outs
cmp
push
sbb
adc
daa
daa
daa
and
push
xchg
xchg
xchg
xchg
in
mov
leave
leave
leave
enter
mov
in
fs
out
(bad)
xlat
jb
xor
pop
out
push
jb
jmp
cmp
jmp
out
test
jl
sub
pop
push
out
fiadd
and
imul
cmp
scas
leave
sub
sub
sub
or
push
popf
repnz
add
mov
inc
cmps
xchg
xor
retf
xchg
push
add
and
mov
stos
xchg
js
dec
cmp
test
push
test
cwde
or
mov
cmp
adc
shr
and
test
xchg
add
add
and
cmp
xchg
xor
das
add
aam
xchg
sbb
fwait
cmps
out
add
call
xor
jle
(bad)
jne
cmps
adc
cmp
adc
jno
pusha
adc
add
jno
inc
add
nop
add
jae
in
cmps
xchg
cwde
sub
xor
dec
clc
push
enter
jae
dec
popf
mov
cwde
xchg
cmp
and
jmp
push
cmps
add
dec
xor
dec
pop
int3
dec
xchg
inc
mov
sub
mov
add
xchg
cmp
cmc
stos
dec
aaa
add
xchg
test
mov
mov
xchg
mov
push
pushf
xchg
mov
cmp
call
popf
cli
inc
daa
add
sub
test
push
dec
xchg
adc
sbb
inc
(bad)
jne
cmps
push
xchg
movs
ins
or
and
xchg
jns
pusha
inc
pushf
xchg
loopne
jne
cmp
cmp
xchg
and
xchg
xor
xchg
or
cmp
jecxz
xchg
xor
cmp
mov
js
ins
(bad)
lds
inc
call
add
pop
jecxz
xchg
xchg
ins
jne
inc
inc
add
xchg
imul
adc
or
push
mov
pop
pop
and
push
pop
out
mov
test
jb
xchg
cmps
or
and
pop
pop
pop
bnd
mov
movs
inc
jmp
or
movs
fldenv
push
rcl
call
inc
jne
or
and
push
adc
sub
push
cmp
ds
mov
sbb
pusha
imul
loop
cs
punpcklwd
add
or
out
out
or
adc
fisubr
add
dec
push
push
xor
xor
psrlw
mov
push
or
in
aad
cmps
jb
xchg
adc
test
daa
pop
jmp
push
jns
cmp
push
xchg
push
adc
test
shr
cli
xor
sub
inc
shl
scas
sbb
out
(bad)
call
pop
push
mov
stos
push
mov
imul
mov
mov
lds
jmp
adc
cmp
jne
hlt
lahf
and
test
jae
int
sub
(bad)
jb
jae
stos
pop
cs
adc
push
imul
push
hlt
pop
pop
pop
cmp
shl
mov
cs
scas
repz
mov
repz
or
fisttp
mov
push
fnstsw
shl
out
neg
repnz
jo
movs
xchg
iret
pop
fnstenv
outs
and
add
mov
aad
push
push
fadd
mov
mov
stos
inc
jnp
and
aam
and
sbb
ins
xor
(bad)
push
shl
ja
pop
imul
sub
or
dec
jbe
cmp
sbb
and
lods
mov
lock
enter
loop
push
jb
inc
jno
cmc
cmps
cmc
mov
imul
test
sbb
push
push
clc
aam
mov
push
loopne
mov
inc
lidtd
mov
xor
imul
mov
call
bts
inc
cmp
push
mov
xchg
xchg
fistp
xchg
into
or
in
leave
leave
dec
cwde
out
stc
repnz
fs
(bad)
ret
jns
jb
inc
mov
daa
sti
cmp
cmp
outs
mov
push
cld
pushf
pushf
pushf
mov
popa
cwde
into
dec
dec
inc
sahf
sbb
push
jl
mov
and
aas
(bad)
div
mov
push
push
inc
adc
fild
add
push
add
mov
add
add
cmp
dec
or
push
or
sti
shr
add
popf
push
xor
retf
add
out
mov
jle
push
shl
inc
pop
mov
sub
bound
movs
ret
ins
push
test
add
outs
or
or
adc
shl
adc
test
loopne
sbb
add
mov
jae
out
ja
add
cld
xchg
xchg
or
or
icebp
adc
xchg
das
dec
nop
mov
leave
call
and
je
add
xor
adc
movs
in
add
iret
add
jo
dec
add
add
add
shl
add
add
xor
add
and
add
dec
adc
add
inc
or
add
gs
cmc
push
cmp
mov
sbb
mov
sbb
mov
dec
(bad)
scas
pop
add
ror
das
lock
xchg
shl
or
xor
inc
das
pusha
push
and
push
dec
loopne
push
jmp
cmps
pop
add
and
sar
je
or
pop
add
push
jae
dec
aaa
add
test
fsubr
adc
pop
imul
add
add
inc
pop
std
add
inc
cmps
pushf
cdq
dec
adc
or
daa
add
sbb
jo
pop
xor
mov
adc
pushf
inc
pop
out
sub
push
pop
enter
and
pop
jns
and
and
pusha
or
ror
xchg
push
add
dec
pop
dec
adc
mov
pop
add
jecxz
or
xlat
jo
inc
inc
pop
cld
add
loopne
add
bound
push
sub
mov
pusha
mov
adc
in
mov
fadd
push
adc
inc
and
add
repnz
xor
mov
ret
mov
mov
xor
shl
cmp
adc
push
sub
add
loope
pop
adc
sub
sbb
jo
lea
add
add
jb
aas
test
pusha
pop
int3
adc
or
and
adc
test
fdivr
dec
mov
aam
mov
push
das
sbb
cmc
fidivr
paddb
jb
daa
icebp
ror
push
ss
retf
loope
sub
gs
bound
in
pop
int
pop
add
int
fst
and
adc
shr
or
shl
pop
std
out
adc
repnz
lods
add
mov
sub
mov
stos
pop
xor
sub
push
aad
push
sub
push
in
into
add
or
add
jmp
(bad)
aas
mov
in
cwde
in
push
add
or
retf
rcr
push
or
test
sub
xor
cmps
in
hlt
in
lods
pop
push
stos
jo
pop
adc
add
sub
pop
ins
adc
cmp
shl
mov
or
lods
adc
jmp
ss
jb
fdiv
lock
add
arpl
fnstenv
mov
and
push
cmps
ins
cmp
nop
dec
loop
dec
push
jl
(bad)
fnstsw
mov
mov
dec
sub
sub
xor
imul
out
arpl
sub
fwait
test
repz
xor
psubd
mov
pop
ja
pop
push
cmps
fwait
push
cmps
dec
data16
fisttp
or
and
mov
xchg
xchg
daa
daa
out
or
enter
jne
test
in
leave
ja
or
push
in
in
jns
ret
jb
repnz
andnps
jns
adc
pop
cmps
sbb
adc
lods
mov
ret
psrlw
pop
xchg
es
dec
dec
mov
push
mov
jle
add
dec
or
mov
add
mov
cwde
test
pop
xor
dec
mov
mov
bound
push
mov
or
mov
je
gs
pop
mov
nop
mov
enter
aam
jge
push
push
lods
dec
and
outs
dec
lds
mov
call
ja
gs
lods
fwait
hlt
jbe
jae
and
arpl
out
add
gs
bound
dec
add
adc
push
gs
push
fwait
jne
adc
call
xor
mov
sbb
les
gs
pop
test
bound
gs
sub
or
scas
add
push
gs
inc
push
les
jle
dec
xor
add
inc
lods
jae
push
jae
ins
stos
sbb
push
push
add
xchg
xchg
(bad)
fld
cmp
cmp
push
and
lahf
and
fist
jmp
inc
and
and
ins
rol
or
dec
add
pop
int
or
nop
xchg
test
lds
push
mov
or
jne
in
or
mov
or
or
mov
adc
les
pop
dec
or
or
hlt
ins
or
jns
xor
pop
dec
xor
sub
sbb
les
mov
mov
in
push
daa
mov
inc
sub
mov
mov
arpl
inc
dec
add
mov
push
xchg
inc
add
push
inc
sbb
movs
test
lahf
jnp
test
mov
or
(bad)
out
pop
xchg
jo
mov
hlt
les
imul
icebp
lgs
mov
inc
cmps
fiadd
mov
pop
and
mov
mov
dec
(bad)
(bad)
and
add
movzx
test
ficomp
push
and
dec
das
popa
add
ror
into
mov
xchg
sub
imul
imul
pop
jecxz
sub
xor
inc
out
imul
push
loopne
mov
sti
imul
ins
es
adc
mov
or
cmp
xchg
xchg
adc
popa
out
dec
push
dec
pop
add
mov
loop
push
push
das
cmps
pop
push
inc
jno
push
in
aas
rcr
pop
fucomi
hlt
pop
push
cmp
cld
push
or
es
jno
ficom
test
xor
or
ss
loope
and
js
push
jmp
mov
or
(bad)
rcr
jns
sbb
jl
out
dec
mul
push
daa
daa
mov
pop
sbb
data16
daa
and
ins
mov
or
sub
xchg
in
in
loop
sbb
mov
sti
inc
sbb
jns
jmp
cmp
mov
xchg
hlt
aas
and
jp
lods
pop
(bad)
sahf
je
movs
inc
sbb
push
adc
aam
mov
fcmovbe
in
push
add
pop
sbb
xchg
mov
cmp
shl
xor
ss
mov
leave
inc
inc
xor
jb
xor
inc
in
inc
jg
inc
shl
mov
inc
inc
jp
retf
inc
adc
enter
pop
ins
push
scas
fcmovb
movs
inc
sub
dec
mov
dec
mov
cli
inc
xor
push
xchg
sub
adc
or
call
sub
xor
xlat
inc
sbb
xchg
je
rol
inc
cmp
inc
mov
das
add
push
inc
rcr
and
fs
inc
xor
inc
adc
xor
mov
sbb
mov
xor
pop
adc
inc
shl
fs
add
push
pusha
rol
cmp
push
inc
jae
xchg
jl
inc
inc
add
sbb
xchg
xchg
inc
ja
pusha
sar
xchg
test
xchg
je
sub
scas
ins
jmp
mov
ins
xor
mov
es
mov
push
dec
mov
mov
add
dec
mov
sbb
je
call
lds
xor
dec
cdq
cmp
xor
fcomp
stos
ss
ins
cdq
es
xor
test
or
and
and
cmps
lods
cdq
cdq
shl
in
cdq
xchg
jbe
xchg
inc
cmp
inc
jge
inc
inc
xchg
push
adc
and
je
cdq
jns
inc
dec
or
les
dec
dec
cdq
sub
or
cdq
or
leave
sbb
xor
es
inc
sub
(bad)
lds
call
in
lock
pop
arpl
mov
inc
inc
pop
dec
sub
(bad)
rol
add
arpl
cwde
shl
xchg
mov
mov
xor
mov
pop
bnd
lea
shl
lea
cdq
push
cdq
xor
aaa
push
sbb
sbb
cmp
dec
out
push
je
xchg
loopne
xor
push
push
(bad)
jmp
adc
cdq
loop
(bad)
out
dec
mov
and
rol
aas
adc
loopne
cmove
rcl
push
phaddw
inc
rcr
inc
gs
jne
je
add
add
xor
xor
cmp
(bad)
sbb
loope
pop
push
push
cli
loopne
and
jmp
adc
lea
js
ret
pop
aas
push
jno
inc
xchg
scas
push
les
jns
fld
xchg
push
adc
xlat
scas
sub
xor
sub
inc
mov
push
scas
sbb
add
shr
push
pop
inc
and
mov
push
sahf
imul
xor
add
and
sar
(bad)
into
push
sbb
dec
add
dec
push
cmp
stos
jo
sub
test
fdiv
imul
adc
movups
xor
aaa
inc
or
cld
jmp
add
and
jmp
mov
sub
sbb
int
mov
add
cs
(bad)
shl
inc
sub
std
mov
add
scas
jmp
nop
jmp
lea
setle
add
sub
sub
inc
clc
test
dec
mov
scas
sub
mov
pop
punpckhbw
fimul
push
test
pop
push
xlat
dec
push
xchg
cmp
push
dec
es
sub
ja
lea
test
adc
pop
mov
lock
inc
jbe
add
adc
push
xor
fsubr
(bad)
push
or
inc
mov
movs
es
sbb
cmp
iret
push
mov
loopne
scas
call
rcl
ja
xor
add
cmp
mov
mov
jo
mov
rol
sub
(bad)
rcr
push
aad
sub
sub
add
cmp
mov
call
jl
push
pop
push
push
es
pop
pop
repnz
add
or
add
imul
pop
xchg
pop
or
nop
(bad)
loopne
add
ins
test
add
leave
lods
xchg
bswap
add
add
sub
push
ins
push
in
rcr
fimul
push
cs
fs
mov
sbb
jns
jb
push
fcom
xor
cmp
inc
xchg
(bad)
adc
sahf
pushf
pushf
mov
repz
dec
dec
dec
inc
imul
dec
sbb
push
lahf
fnstcw
cdq
sub
jb
and
loopne
cmp
movs
add
add
pop
pop
mov
test
sub
(bad)
add
adc
(bad)
sub
cmp
loopne
add
cmp
adc
outs
jno
push
xor
add
pop
add
add
inc
add
push
retf
pop
add
jbe
jg
pop
adc
inc
or
mov
imul
mov
add
push
test
mov
outs
or
(bad)
push
add
push
pop
mov
add
adc
or
sub
pop
jae
add
dec
out
and
push
enter
pop
daa
add
or
jb
add
add
das
add
push
add
jae
add
add
call
xor
add
fs
pop
nop
jne
mov
mov
adc
sbb
pop
rol
add
pop
fsubr
add
rol
pop
shl
ins
ja
add
ja
outs
adc
ja
sbb
adc
push
mov
adc
pop
fsubr
pop
sar
ins
js
add
xchg
adc
lods
jns
dec
sbb
pop
ror
pop
pop
pop
and
fdivr
and
es
shr
aaa
add
mov
add
stos
sbb
pop
imul
repz
dec
add
std
cmps
add
jnp
or
daa
call
xor
inc
add
sbb
pop
inc
or
sub
pop
and
cmp
ins
pop
mov
or
jns
test
mov
pop
dec
add
mov
pop
shl
or
xlat
xor
or
pop
push
dec
adc
out
push
push
add
mov
mov
xchg
mov
loopne
add
mov
mov
out
in
adc
add
sbb
jns
pop
lock
test
shl
add
mov
ficom
ror
sbb
add
push
mov
inc
add
sub
inc
outs
sub
mov
ret
push
pop
add
nop
call
test
push
mov
push
mov
sbb
int3
sub
(bad)
movs
aaa
call
adc
xchg
or
loop
xor
mov
and
or
sbb
inc
cli
mov
int
ret
dec
push
sub
push
or
sbb
add
or
add
cmp
test
call
cli
jae
in
add
and
jno
clc
retf
arpl
dec
gs
adc
icebp
sbb
push
imul
or
ja
popa
sti
inc
adc
(bad)
xor
mov
mov
add
mov
out
cmp
mov
int3
mov
push
xchg
and
add
test
(bad)
int3
add
push
mov
add
nop
arpl
hlt
ret
adc
out
cld
pop
int3
dec
cmp
push
push
popa
inc
es
jbe
add
sbb
inc
jle
jl
add
cmp
push
jp
pop
cld
daa
sbb
sahf
pop
add
mov
xlat
ja
in
dec
ja
jle
outs
movzx
push
jo
xchg
and
pop
or
add
or
sbb
out
pop
push
pop
dec
sub
mov
xchg
enter
addr16
outs
or
ins
pop
mov
push
xchg
cmp
push
mov
sti
sbb
push
ja
add
pop
cmps
ret
push
stos
add
pop
cmp
outs
ins
lds
mov
add
cmp
push
in
lock
xor
js
out
call
jl
add
jg
cmp
or
outs
ins
psubusb
pmullw
sub
imul
push
ret
lock
enter
inc
arpl
cmp
mov
add
sub
push
mov
adc
dec
fsub
das
je
xor
or
mov
psubb
cmp
or
xor
and
and
sub
je
xchg
sbb
add
aaa
cs
jo
outs
adc
adc
mov
sbb
and
sub
or
in
mov
pop
mov
push
dec
push
add
aas
daa
add
fmul
fsub
push
outs
jp
push
mov
sbb
push
retf
xor
jns
push
cmp
jns
pop
enter
ins
xchg
cmp
jl
adc
push
push
sub
(bad)
cmp
sbb
jns
or
mov
cmp
mov
icebp
pop
pushf
aam
add
inc
mul
push
stos
nop
call
push
jo
jns
sbb
mov
xchg
cmp
push
popf
in
test
mov
loope
ja
mov
mov
add
pop
cmp
add
scas
push
jle
ret
lods
pmaddwd
inc
mov
pop
imul
xor
aam
jnp
dec
jo
or
jnp
lods
or
bound
dec
js
cwde
jnp
inc
jnp
arpl
adc
xchg
mov
mov
ja
jnp
dec
xor
adc
adc
and
add
pop
add
pushf
fldln2
mov
nop
int3
mov
scas
lds
je
dec
mov
mov
in
into
xchg
adc
mov
cmp
mov
test
inc
xchg
sbb
mov
or
and
mov
stos
and
mov
mov
xor
xor
mov
mov
mov
or
and
leave
cdq
nop
push
xchg
repz
cs
jno
or
inc
and
mov
push
mov
add
push
daa
and
add
push
cmps
in
dec
xchg
xor
sbb
lahf
clc
fimul
es
add
pop
adc
mov
dec
sbb
xor
xor
inc
pop
inc
adc
mov
dec
gs
outs
fs
pop
pop
adc
pop
fst
jecxz
sbb
jns
in
int
clc
arpl
fwait
jo
lahf
nop
mov
test
xchg
(bad)
push
add
loope
push
jle
movs
mov
inc
mov
popa
gs
fwait
sub
bound
addr16
ins
cmp
fwait
push
fwait
jo
popa
jo
push
fwait
nop
mov
sbb
cmp
sbb
and
pop
cmps
push
mov
pop
es
dec
pop
frstor
ror
dec
das
pushw
iret
dec
test
mov
push
je
ret
jg
mov
pop
rcr
into
pop
loope
sbb
jo
xor
aad
or
mov
or
push
or
mov
ret
mov
bound
push
pop
push
pop
aad
cwde
mov
das
movs
mov
inc
xchg
dec
pop
aad
add
xchg
mov
leave
xor
(bad)
je
add
jns
cs
push
mov
adc
jne
in
ficom
push
aam
add
jo
push
add
(bad)
xor
and
cmp
pop
jns
adc
ins
add
or
xchg
xor
ffree
push
xor
jnp
adc
loope
addps
lods
inc
mov
pusha
or
mov
xor
ja
iret
sub
adc
sub
fiadd
ja
int3
fldenv
cmp
push
inc
push
add
push
pop
sub
loop
ja
outs
dec
mov
movd
add
or
xor
je
pop
call
inc
mov
pop
bound
(bad)
loop
jne
push
sbb
fcom
les
cmp
cmp
lods
or
jne
sbb
ja
pop
fld
adc
adc
jl
js
ja
push
pop
test
push
jbe
int
cmp
dec
xchg
je
int3
ret
ret
xor
wbinvd
push
adc
mov
es
or
nop
popa
sbb
inc
bound
or
jbe
int
mov
jne
nop
sub
jne
sbb
cwde
jne
pop
int
ret
and
es
add
comiss
mov
inc
(bad)
ins
mov
addr16
repz
push
in
shl
cs
jmp
addr16
fisttp
(bad)
push
add
push
daa
pushf
sbb
leave
push
fisubr
stc
adc
and
das
pop
ins
inc
xor
and
push
jns
ins
inc
adc
sub
and
xor
xor
inc
js
call
aad
rol
adc
push
inc
popa
inc
mov
cs
icebp
dec
outs
sbb
inc
mov
jl
add
fwait
sbb
daa
sbb
mov
fadd
jle
jne
mov
outs
sub
movs
or
aaa
call
loope
add
bound
pop
adc
cwde
loopne
adc
jge
push
jge
imul
loope
or
jo
(bad)
mov
xor
ins
lds
cwde
lea
shr
out
cmp
pop
int3
das
jmp
inc
add
(bad)
pushf
addr16
je
sbb
mov
paddsb
jle
xor
shl
pushf
or
pop
push
outs
shl
popf
int
or
jbe
int
outs
push
adc
popf
hlt
movs
or
popf
retf
xchg
sub
adc
(bad)
sub
add
push
add
sub
iret
in
mov
pop
ror
dec
sub
iret
push
cs
out
sbb
loopne
fs
add
jo
mov
daa
clc
dec
mov
add
cmp
test
ss
and
jge
push
xor
scas
aad
test
adc
pop
in
popa
mov
dec
in
inc
cmp
fadd
sub
mov
push
mov
push
ret
das
hlt
push
add
mov
sub
jecxz
mov
and
stos
mov
and
sahf
cs
push
xor
sub
jmp
cmp
push
xor
push
inc
cwde
gs
dec
add
adc
xlat
pop
imul
dec
xor
ins
push
je
inc
pusha
mov
xchg
ins
dec
outs
arpl
cmp
and
cmp
push
inc
outs
test
arpl
shr
test
xor
inc
pop
pop
pop
ins
adc
sbb
cmp
adc
sbb
push
inc
xchg
push
fadd
lods
pusha
jne
xor
jmp
pop
into
inc
xchg
cmc
push
outs
imul
inc
jl
dec
bound
ds
lods
push
mov
shl
int3
cs
imul
pop
pusha
push
fsub
add
fstp
jp
mov
mov
cmp
mov
punpckldq
div
adc
movs
imul
lods
adc
not
xchg
mul
and
idiv
xchg
cdq
mov
cdq
sbb
shl
imul
mov
mov
adc
or
pop
add
cs
push
xchg
dec
movs
das
mov
mov
das
iret
mov
ss
das
mov
cs
or
pop
push
stc
push
es
mov
cmps
sub
mov
push
mov
pusha
int
and
movs
xchg
sub
addr16
sub
sub
pop
adc
mov
mov
xchg
clc
scas
stos
retf
mov
rsqrtps
or
call
outs
sub
xor
and
cs
sbb
into
int3
push
push
push
add
mov
cdq
daa
in
push
xlat
xchg
push
push
mov
add
pop
xor
mov
or
pop
inc
int3
add
sub
push
adc
mov
mov
xor
add
mov
mov
mov
mov
addr16
sbb
cs
pop
mov
leave
add
js
pop
iret
adc
sahf
inc
sub
jmp
iret
in
sbb
jbe
mov
add
imul
cs
push
iret
cld
jle
rcr
pop
mov
popa
or
iret
sbb
lock
or
call
cs
bound
jns
cs
mov
jns
shl
jns
ds
ret
sar
sub
adc
movs
or
or
pop
int
or
cmp
and
ja
cmp
pop
je
xchg
push
push
loop
inc
dec
cmp
pop
enter
push
outs
hlt
push
and
mov
mov
adc
mov
pusha
mov
leave
in
or
push
loope
std
jne
pusha
mov
leave
popa
leave
or
xchg
and
push
add
mov
leave
xchg
jnp
sbb
ds
mov
or
dec
ins
add
push
cmp
daa
ja
popa
push
test
mov
cmp
ficomp
xor
xor
mov
shr
pop
inc
push
fnsave
(bad)
push
add
xlat
daa
je
add
pop
call
imul
pop
rol
jno
and
dec
add
outs
imul
push
fisub
jnp
add
add
add
test
sbb
adc
adc
sub
adc
add
or
push
cmp
iret
adc
pop
lds
loope
xlat
(bad)
lods
push
xor
ss
push
add
push
or
adc
icebp
jle
ret
(bad)
and
mov
inc
add
inc
mov
(bad)
pusha
cs
mov
bound
addr16
xchg
cmp
inc
test
mov
jmp
mov
adc
or
jmp
and
cmps
pop
(bad)
and
jno
fld
pop
jo
mov
and
fidivr
hlt
push
and
mov
mul
mov
push
mov
sub
loope
pop
mov
movs
or
jo
hlt
arpl
test
int
or
lods
push
or
cmp
retf
push
lods
mov
adc
fdiv
xor
pop
jae
xor
xchg
or
push
xor
out
loopne
cdq
aaa
or
xlat
push
loope
adc
cmp
xchg
in
pop
sti
outs
ret
push
push
js
push
cld
push
scas
mov
push
daa
nop
push
add
adc
aam
imul
mov
inc
mov
das
pop
ins
xchg
dec
js
adc
jne
jnp
or
fnsave
jns
pusha
adc
jnp
jnp
pusha
js
push
pushf
inc
sub
add
pop
push
jns
and
pusha
xchg
fdiv
push
adc
aaa
mov
push
pop
out
add
addr16
jno
fwait
jo
inc
pop
jl
mov
in
fcmovbe
pop
in
sbb
push
mov
add
pop
push
add
push
mov
cmp
cmps
mov
inc
rcr
test
sti
loopne
adc
movs
sti
sub
push
repnz
sti
or
addr16
pop
pop
dec
sti
shl
sti
xchg
pop
push
sti
xor
mov
mov
add
shl
sbb
jo
adc
(bad)
aam
sbb
push
push
shl
sar
mov
jns
mov
fsubr
cmp
enter
movq
lock
jo
inc
out
and
into
or
add
cwde
test
mov
mov
cmps
mov
stos
mov
and
adc
and
movs
mov
pusha
mov
inc
mov
test
adc
pop
adc
mov
out
retf
add
sar
or
pop
adc
mov
outs
fld
in
out
fistp
lock
cmp
jl
push
cmp
out
out
add
push
daa
xchg
call
mov
inc
or
push
adc
or
jo
popa
aam
pop
xchg
sub
push
inc
pushf
jge
pop
sbb
push
mov
mov
pop
jno
pminsw
ror
ja
jle
dec
test
and
inc
pop
fstp
out
pop
add
push
xlat
push
loope
cs
sbb
fistp
xor
jg
add
int
mov
call
mov
jle
outs
(bad)
fbld
mov
gs
xchg
mov
arpl
sub
cs
pusha
aas
mov
push
popf
loope
ret
push
popf
test
repnz
aas
mov
fdiv
mov
add
sbb
daa
loopne
push
xor
dec
les
push
sub
cmps
dec
xlat
loop
xchg
ins
push
cwde
jg
mov
out
or
(bad)
push
mov
dec
pop
js
scas
or
sbb
inc
xchg
pop
or
jne
jne
jo
rcl
or
and
loopne
or
sub
add
aad
ins
add
push
jo
or
cmp
add
adc
(bad)
faddp
inc
jb
cdq
mov
sar
xchg
mov
(bad)
and
inc
test
enter
out
xchg
cwde
push
daa
pop
push
add
(bad)
adc
rol
mov
test
ins
add
add
add
test
inc
in
inc
movs
add
mov
test
bndldx
adc
or
xchg
push
sbb
shl
stc
push
xlat
and
fdivr
test
add
fsubr
mov
ror
outs
fst
out
mov
jle
sbb
ror
outs
sbb
dec
pop
xchg
fsubr
ror
mov
dec
adc
or
pop
adc
sub
jo
pop
push
pop
lods
lock
popa
cmp
mov
outs
adc
adc
sbb
xchg
pop
pusha
add
int
dec
cmp
pop
mov
mov
or
pop
fs
or
mov
push
adc
push
cmp
pop
mov
ret
mov
and
or
jns
push
es
cmp
nop
popa
pop
ins
jne
jbe
bound
or
mov
cmp
cmp
mov
add
daa
ins
and
lock
xor
push
es
stos
or
dec
inc
pop
mov
push
cmps
push
mov
das
mov
cs
xor
dec
mov
int3
push
add
aam
jmp
pushw
pop
pusha
and
popa
dec
es
sub
pop
ins
popa
pop
pop
pop
out
or
sbb
lock
adc
inc
test
int
(bad)
push
adc
gs
pushf
xchg
xchg
popa
jmp
add
mov
or
add
xchg
pop
push
iret
sub
or
std
outs
aaa
loope
cmp
sub
pop
fdiv
ret
out
mov
push
mov
cmp
add
test
sub
(bad)
push
pop
sar
dec
setne
movs
pusha
mov
or
movs
rol
call
ins
and
fsub
ret
jl
pop
push
dec
sbb
pop
fcom
in
mov
mov
inc
pop
aaa
rol
xor
push
and
cwde
mov
(bad)
test
fimul
mov
and
xchg
enter
mov
sub
inc
shl
or
adc
sub
cmps
inc
mov
pusha
mov
push
mov
int
pop
test
(bad)
push
jo
push
shld
test
sub
cmove
lods
out
push
in
xor
es
repz
or
xchg
adc
mov
add
xchg
xchg
jne
mov
cs
in
sub
mov
mov
inc
push
mov
adc
xor
lds
pop
ja
mov
or
mov
add
sub
and
push
popf
fs
nop
inc
outs
push
in
mov
push
jp
xchg
das
lods
push
ja
cmp
sbb
je
sbb
add
popa
das
and
out
inc
push
js
and
push
fcomp
inc
stos
adc
mov
out
push
or
ins
fs
inc
jne
and
ror
cwde
adc
and
addr16
bound
cmp
jmp
stos
nop
xchg
jbe
push
cwde
cmovle
fcmovnu
repz
inc
out
hlt
les
or
cmc
jno
mov
push
sbb
adc
pop
es
cmp
lods
(bad)
dec
lds
pop
cwde
push
mov
das
push
push
inc
fadd
add
mov
mov
inc
and
rcl
fiadd
push
inc
sub
adc
or
outs
xor
jns
dec
out
dec
cld
push
mov
test
dec
jno
dec
xchg
jo
xor
loope
add
popa
push
push
in
nop
std
inc
inc
push
mov
popf
fdivr
cdq
(bad)
outs
dec
ds
out
cld
push
push
sub
in
pushf
or
test
xor
push
push
pusha
push
lahf
mov
gs
outs
fs
pusha
jmp
cwde
loope
dec
adc
push
jno
add
push
sbb
dec
push
adc
or
nop
dec
dec
in
fwait
mov
pop
call
outs
enter
push
mov
mov
and
in
mov
test
mov
inc
retf
fimul
cmps
sbb
in
loop
fadd
inc
imul
mov
jae
push
popa
xor
inc
pop
inc
pop
mov
sub
sbb
call
pop
pop
add
lods
out
int3
push
inc
sub
adc
pushf
push
or
popf
out
adc
add
dec
inc
shr
push
inc
les
fcom
inc
push
pop
mov
push
inc
xor
add
mov
push
hlt
mov
jecxz
push
adc
push
addr16
jno
adc
add
out
dec
inc
shl
jg
imul
popf
neg
aaa
adc
sahf
push
(bad)
push
loop
push
mov
lods
test
nop
adc
mov
mov
push
rcl
jle
addr16
std
adc
xlat
mov
push
jb
(bad)
shl
push
fcom
mov
(bad)
fmul
lahf
pop
sub
sbb
or
adc
inc
adc
mov
bound
mov
push
mov
mov
into
das
in
dec
inc
rol
xchg
adc
mov
and
sub
pop
cli
xlat
aas
push
sbb
push
xlat
and
pop
adc
test
xchg
loope
dec
loopne
sub
xor
aaa
inc
mov
cmp
pop
dec
iret
les
loop
adc
xor
pop
sti
push
and
push
inc
push
bound
js
daa
add
adc
mov
outs
and
mov
fisub
fmul
test
sbb
test
test
repz
imul
push
jno
pop
add
sbb
outs
sbb
pop
icebp
mov
jo
in
fnstsw
fcom
in
mov
add
test
inc
mov
cmp
shl
pop
mov
inc
mov
push
inc
jmp
or
push
mov
jno
cld
sbb
sub
and
sub
lahf
mov
leave
popa
inc
pop
inc
pusha
neg
add
add
mov
push
xor
mov
shr
movs
xlat
les
mov
repnz
loop
das
or
xlat
and
in
pushf
aam
pusha
jle
ja
test
xlat
xor
cmps
mov
xor
lahf
xchg
cwde
in
xchg
loope
je
mov
scas
cmc
cmp
push
xchg
pop
cmpxchg
push
xchg
jno
out
adc
ins
xchg
sbb
sub
push
add
fsubr
mov
jo
pop
cmps
push
or
das
mov
inc
loope
pop
push
pop
rcl
inc
inc
push
call
sub
push
push
or
(bad)
ficom
or
adc
aaa
inc
lods
adc
sti
test
sbb
adc
dec
test
jno
out
nop
test
cs
pop
dec
push
or
outs
sub
mov
push
sbb
fsubr
mov
push
push
push
xor
dec
daa
push
pop
jb
or
inc
daa
dec
test
xor
loop
mov
xchg
mov
xlat
daa
into
push
push
sbb
pop
jle
cs
(bad)
jg
call
xor
jg
jg
add
sbb
pop
push
pusha
xor
sbb
xor
mov
adc
or
ds
push
dec
shl
lock
and
and
jns
pop
test
hlt
adc
add
mov
(bad)
call
out
xchg
add
pop
mov
lea
push
lahf
push
cmc
or
xchg
mov
cs
dec
inc
add
push
aam
fucomp
in
sub
jl
pop
movs
add
or
dec
push
aaa
cmps
fnstenv
adc
push
inc
in
jo
neg
push
inc
jecxz
jl
aaa
adc
or
jle
cmp
mov
fidivr
push
les
pop
push
cld
call
add
fimul
(bad)
jl
xlat
cs
push
rcl
dec
pusha
sti
sub
add
add
ins
imul
ret
xlat
loope
mov
je
push
ja
mov
je
adc
sbb
inc
add
js
movups
loopne
or
add
push
sbb
movs
ins
add
popa
ins
mov
push
adc
push
pop
cwde
inc
js
sbb
mov
xor
dec
ins
jne
and
lock
fild
test
mov
dec
pop
xor
add
mov
pop
mov
or
dec
jb
popa
jecxz
push
mov
jns
je
inc
jns
push
push
push
push
outs
push
pop
cwde
jae
outs
rcpps
pop
xrstors
sbb
outs
cli
mov
sahf
adc
or
fild
adc
or
inc
js
ins
xor
cli
fs
adc
fnstsw
jb
mov
je
adc
mov
nop
push
hlt
imul
iret
mov
or
shr
adc
adc
mov
push
pop
arpl
ins
lods
rcr
mov
lock
fs
push
shl
je
fadd
jnp
arpl
ins
push
inc
jne
mov
add
fwait
jns
inc
inc
or
and
mov
sti
ins
popa
jae
ins
mov
adc
pop
fidiv
adc
push
ins
adc
mov
mov
xchg
or
popa
data16
push
pop
lods
mov
mov
das
out
ror
popa
addr16
push
lods
out
sar
xor
or
push
add
or
fs
out
adc
test
dec
sbb
scas
out
jne
or
jae
xlat
sbb
mov
mov
jae
leave
or
shr
push
jb
rol
or
dec
in
inc
jne
mov
adc
ins
mov
pop
adc
arpl
addr16
add
xlat
scas
cmps
aam
xchg
dec
sar
inc
mov
aaa
aaa
mov
mov
mov
mov
es
push
push
shl
arpl
sbb
cmp
jge
arpl
push
rcl
add
and
jmp
jbe
and
push
add
inc
test
out
cli
inc
or
add
inc
jno
inc
or
dec
daa
ins
inc
cwde
add
repnz
pop
fwait
or
xchg
leave
call
aad
ds
push
pusha
neg
jne
pop
sub
je
fsubr
into
ins
adc
in
adc
outs
mov
pop
pop
mov
mov
pop
or
push
popa
sahf
ror
scas
pop
inc
pop
ins
xor
ret
lock
add
popa
push
xor
ins
or
fidiv
push
aaa
mov
call
es
inc
inc
xor
or
fsub
mov
mov
bound
adc
ins
je
inc
(bad)
imul
xor
or
xchg
push
pop
int3
scas
inc
dec
mov
fs
scas
int3
mov
leave
outs
or
or
enter
mov
gs
(bad)
sbb
xchg
cs
push
es
out
push
xchg
add
add
in
sub
add
and
loopne
sbb
pop
pop
popf
dec
sub
sub
pushf
inc
movs
add
mov
into
adc
fild
fimul
sar
int3
sbb
add
std
(bad)
pop
adc
clc
lock
cmp
mov
aaa
or
sub
gs
aaa
call
std
pop
scas
mov
pop
add
dec
data16
dec
retf
or
retf
mov
mov
pop
rol
and
dec
mov
push
mov
xor
cwde
jmp
aaa
push
add
and
and
or
aaa
mov
add
dec
js
or
push
out
fsub
in
hlt
fmul
or
push
adc
xor
mov
(bad)
sbb
push
push
aas
ret
and
call
cmps
mov
add
pop
rcl
push
jmp
fild
cmps
aaa
cmp
xchg
jnp
lock
or
pusha
and
push
nop
ret
xor
dec
push
push
shr
adc
push
(bad)
out
dec
sub
dec
test
pop
push
gs
dec
jbe
lock
aas
mov
cmp
pop
sub
mov
xchg
cmp
fld
add
sbb
sub
dec
ret
xchg
ror
push
in
push
fsub
push
push
aas
aas
lahf
or
lock
scas
add
xor
aaa
cdq
xor
sub
imul
ror
or
cmc
repnz
xor
cmp
push
sbb
sahf
aaa
add
loope
dec
or
shr
add
sbb
je
inc
xor
push
add
sub
add
inc
jns
jmp
dec
pop
and
push
mov
(bad)
shr
push
and
ja
sbb
mov
cmp
jbe
add
adc
mov
(bad)
fwait
and
or
nop
add
and
mov
movs
sub
push
or
stos
adc
push
in
pop
xor
pop
or
mov
add
xchg
scas
adc
cs
nop
ins
gs
(bad)
or
lea
or
adc
and
int
leave
jno
and
sub
shl
call
leave
in
aaa
mov
rol
mov
scas
add
or
cmps
add
mov
xchg
jge
and
adc
mov
push
mov
test
or
out
lods
mov
jp
cmp
ds
mov
cmps
ret
jge
push
and
or
jmp
out
and
inc
imul
cmp
xor
and
mov
in
stos
out
arpl
jbe
xchg
mov
adc
sub
and
add
add
test
add
xor
add
sub
ror
xchg
imul
loop
cmp
jno
cmp
in
daa
xchg
in
jb
loopne
or
ins
clc
and
mov
inc
or
jb
movs
and
es
ret
fs
js
or
pop
pop
push
mov
or
dec
imul
shr
cmp
dec
sub
ja
mov
jge
adc
das
push
mov
fnstenv
je
ud2
sbb
ret
nop
ror
dec
mov
neg
push
outs
imul
cmps
or
dec
mov
dec
test
adc
sar
loope
or
dec
ret
xor
or
push
xchg
push
inc
aam
add
pop
fidivr
sbb
sub
lds
sub
xor
xor
int3
pusha
pop
stc
xor
add
adc
sub
xor
inc
xchg
and
stos
pop
jbe
push
sbb
test
lds
inc
jns
int
test
mov
movs
retf
pop
ficomp
call
cmp
or
adc
mov
ret
or
push
gs
fild
sahf
push
or
cmp
pop
sub
out
pusha
out
push
inc
mov
sbb
push
or
mov
rol
xchg
popf
(bad)
pop
mov
dec
xchg
or
fwait
sbb
cmp
mov
(bad)
test
test
sub
xor
ja
pop
pop
in
mov
push
pop
jbe
cmp
inc
dec
adc
in
mov
dec
jecxz
aaa
push
xchg
call
test
mov
fstp
sbb
je
push
push
je
das
sbb
sbb
jge
pop
sbb
fmul
mov
sbb
jge
and
mov
repnz
add
pop
and
jmp
inc
into
scas
cmp
sbb
pop
ja
loopne
push
rcl
sub
or
pop
mov
pop
mov
neg
mov
push
out
xor
push
cmps
das
pop
adc
not
pusha
xchg
add
lock
mov
out
cmps
sbb
jae
or
pop
and
sub
ror
movs
mov
inc
out
pop
cmp
inc
fmul
add
sbb
inc
jno
inc
pusha
mov
rol
iret
pop
sub
pop
int3
ret
fsubr
cmp
pminub
rol
pop
adc
xchg
push
aas
xlat
pop
xor
sub
cmps
sub
or
mov
test
push
add
neg
xor
das
mov
push
(bad)
(bad)
dec
push
push
add
mov
mov
mov
movzx
mov
push
(bad)
(bad)
(bad)
(bad)
adc
mov
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
pop
mov
mov
cmp
ret
mov
jle
add
cli
mov
mov
sub
test
je
or
push
mov
inc
lea
data16
mov
cmp
enter
mov
cmp
mov
lea
std
fwait
outs
sahf
mov
mov
mov
mov
cmp
test
mov
test
push
push
jg
adc
int3
inc
lods
xor
test
or
pop
inc
inc
mov
sti
in
int
and
dec
cdq
outs
mov
mov
add
enter
mov
inc
loopne
rol
jo
xchg
int
data16
das
hlt
sbb
dec
or
dec
jp
add
inc
mov
inc
or
cmp
out
sahf
jle
ror
nop
jg
and
inc
sub
jg
and
(bad)
jg
in
mov
dec
inc
mov
add
out
jg
jb
mov
mov
fwait
lidtd
dec
add
add
dec
add
ret
ja
jne
add
cmp
push
cmp
std
pop
mov
(bad)
xor
push
push
or
mov
mov
push
cmp
xor
or
jmp
jb
xchg
pusha
ror
pop
xchg
retf
mov
and
(bad)
cmp
pop
scas
or
sbb
ficomp
out
sti
and
mov
inc
mov
mov
scas
xlat
mov
sbb
or
lahf
stos
retf
push
inc
sub
adc
clc
add
div
ror
add
stc
push
xchg
js
dec
adc
sub
jp
or
test
loopne
cld
push
mov
adc
add
push
adc
xchg
aam
and
cdq
mov
in
ja
out
pop
(bad)
mov
out
jne
mov
daa
in
push
and
pop
adc
movs
outs
mov
in
push
test
xchg
cld
inc
je
lea
inc
iret
call
rcl
lods
in
inc
cmp
mov
mov
or
cmp
xor
lock
pop
stos
lods
in
in
aas
push
hlt
push
xor
dec
shl
fiadd
and
fiadd
clc
int
aam
lea
xor
cdq
nop
push
xchg
call
imul
add
call
in
push
push
xor
icebp
in
mov
imul
mov
sub
adc
adc
into
push
inc
stos
fsubr
dec
daa
movs
adc
jne
xchg
sub
and
xor
inc
sbb
inc
cwde
inc
fadd
inc
loopne
add
push
popf
dec
daa
movs
enter
je
popf
mov
sbb
pop
adc
fs
fsubr
push
in
sar
mov
je
sub
lock
add
imul
mov
iret
adc
mov
inc
sbb
(bad)
rcl
dec
cld
sub
jae
and
or
mov
mov
jmp
das
jmp
mov
and
cmp
mov
cmp
jb
jmp
jl
daa
or
jbe
or
mov
add
ds
xor
aam
cld
xchg
and
and
mov
retf
or
jmp
loopne
test
jb
push
add
mov
js
mov
dec
push
sbb
sub
test
je
jp
dec
jne
sbb
adc
shl
mov
xchg
sub
fs
add
push
cmp
(bad)
jmp
mov
mov
clc
push
sub
mov
das
sub
sbb
lds
pop
xchg
jae
xchg
es
pop
inc
jmp
dec
pusha
inc
add
or
or
nop
sub
int
aaa
add
sbb
push
pop
ret
test
inc
retf
dec
xchg
push
mov
mov
add
jns
int3
aad
cwde
aaa
pop
popa
fucomi
pushf
aaa
daa
push
push
inc
daa
pop
je
jns
push
jae
xor
cdq
js
mov
or
mov
ret
into
pusha
cmp
cmp
and
lock
test
cmp
dec
shl
jbe
add
cmp
push
and
pop
(bad)
clc
not
lds
repnz
sub
cmp
(bad)
adc
push
dec
cmp
pop
neg
adc
not
add
ja
mov
cmp
jne
cmps
bound
inc
jo
add
adc
aaa
loope
in
shl
jns
loopne
cmp
add
fwait
add
mov
push
xlat
movs
aaa
call
mov
aaa
(bad)
and
in
pop
outs
and
addr16
je
fdiv
jmp
push
push
push
or
shl
or
pop
sbb
ins
cwde
or
sub
pop
mov
punpckhdq
out
jns
into
push
add
sbb
jns
into
sub
das
and
xchg
jmp
movs
sbb
lock
xlat
mov
jbe
push
push
mov
xor
cmp
mov
js
neg
shl
outs
lock
pusha
xlat
pop
or
mov
mov
adc
xlat
imul
add
dec
xchg
dec
lahf
inc
call
xor
mov
lea
ret
xchg
adc
cmp
out
sar
cmp
add
movs
shl
loope
xchg
(bad)
inc
repz
xchg
add
sbb
test
sub
cmp
outs
inc
mov
add
pop
cld
(bad)
push
adc
cmp
lock
cmp
xor
in
clc
mov
pop
das
or
sub
aas
add
add
cmp
push
add
or
mov
shr
aas
clc
dec
inc
adc
sbb
cmp
(bad)
inc
setne
and
mov
mov
push
xor
pop
cmp
jmp
ja
mov
or
movs
jnp
add
push
mov
xor
rol
and
(bad)
pop
or
lea
fidiv
xchg
pop
call
push
out
ins
cmp
cmpps
mov
inc
pusha
xchg
push
sbb
les
pusha
pop
pop
xchg
xor
js
daa
fadd
lds
mov
inc
ins
ficom
js
sbb
jae
cwde
xchg
push
aad
adc
lahf
sbb
lods
push
int
add
push
pop
sub
aaa
lock
iret
inc
outs
jne
cdq
fcmovnbe
out
or
fdivr
jp
inc
test
clc
push
add
jns
movs
rol
adc
xor
and
cmp
mov
jnp
(bad)
pop
(bad)
sbb
ror
push
pop
adc
xchg
enter
ins
into
fnsave
xchg
and
xchg
setae
mov
leave
adc
out
(bad)
call
fdiv
shr
mov
and
xor
inc
cmp
jne
mov
push
sbb
shl
lods
mov
call
xor
mov
movs
ret
imul
inc
inc
mov
(bad)
sbb
je
cmp
xor
xor
(bad)
cmp
shl
pop
lea
test
and
aas
adc
aas
rol
stos
sbb
lock
xchg
gs
jne
mov
sti
mov
dec
(bad)
(bad)
out
adc
inc
push
lea
pop
test
push
inc
les
jo
out
sahf
sar
clc
or
sbb
mov
jmp
movs
(bad)
mov
mov
add
or
ror
sub
clc
push
je
add
inc
add
xchg
push
add
mov
jl
inc
xor
lock
hlt
int
cmp
sbb
cmp
test
lock
fist
cmps
(bad)
mov
or
cmp
dec
jne
or
add
out
push
movs
sub
fiadd
lea
push
test
dec
push
mov
adc
iret
mov
cmp
adc
xchg
icebp
mov
adc
(bad)
test
je
xor
call
sub
mov
adc
jl
ja
cld
fild
xor
push
cmp
jne
idiv
std
mov
call
test
jne
xor
movups
fbstp
dec
jne
jmp
(bad)
pop
jo
sahf
inc
push
push
mov
or
pushf
mov
cmp
cld
test
clc
jle
mov
das
push
out
into
aam
aaa
retf
xor
int3
test
sti
mov
or
xor
push
sbb
jne
sbb
aad
mov
mov
dec
test
add
sbb
jl
add
xchg
mov
out
inc
jne
sbb
pushf
jecxz
fadd
adc
ja
xor
xor
scas
aad
adc
and
pushf
or
fcmovu
pop
les
(bad)
je
xlat
push
push
test
popa
(bad)
and
xor
mov
sbb
mov
or
mov
push
or
stos
push
or
divps
pop
sbb
(bad)
push
push
test
dec
sub
fbstp
je
mov
dec
push
sbb
jne
inc
mov
mov
dec
mov
scas
movs
and
cmps
sbb
loop
std
sub
mov
push
xor
adc
fist
fisttp
out
sbb
pusha
lock
popf
pop
and
push
mov
mov
push
mov
test
or
test
push
lds
push
not
sbb
cmp
and
(bad)
adc
xlat
or
stos
mov
push
sti
add
imul
jl
or
jge
sbb
sbb
mov
es
retf
(bad)
sbb
jmp
ds
(bad)
add
arpl
test
jp
dec
ja
comiss
add
call
ret
call
ret
js
sub
mov
aam
stos
sbb
push
jp
add
cmp
push
adc
aad
call
push
cmp
push
loop
out
dec
cmp
or
add
loopne
jmp
outs
and
sbb
pop
lock
jle
add
push
jbe
lea
mov
movs
sbb
push
cmp
dec
xor
sbb
loopne
inc
jbe
mov
sub
jg
adc
push
scas
mov
dec
lds
xor
cmp
mov
push
cmp
sub
push
push
loopne
idiv
inc
cs
mov
int3
pop
mov
cmp
jne
adc
aad
jmp
adc
hlt
das
push
adc
jo
adc
sub
std
or
sbb
add
cli
sub
sbb
jo
add
gs
sbb
adc
jge
hlt
mov
lods
dec
punpckhbw
or
dec
out
sbb
icebp
rol
cli
xor
dec
cld
sbb
cmp
test
test
or
outs
retf
nop
push
adc
mov
ins
cmp
fucomi
jns
mov
je
push
sub
call
inc
int3
mov
stos
icebp
add
outs
in
mov
sbb
clc
(bad)
or
sub
mov
xor
aam
or
and
mov
push
push
popa
xor
jb
push
sbb
cld
add
iret
cmp
add
aas
inc
mov
test
pop
add
jmp
ja
push
es
mov
sbb
outs
pop
or
dec
ins
jo
cld
das
cmps
mov
popf
xor
sbb
pop
aaa
loopne
xor
push
jmp
jge
mov
xchg
shl
scas
xor
jae
mov
inc
inc
cmp
(bad)
lock
jle
lea
xor
in
pop
addr16
cmp
lods
dec
repnz
push
add
in
jne
jne
jmp
sub
divps
lods
mov
or
in
lea
rol
push
pop
add
loop
mov
cmps
jmp
jg
dec
(bad)
lahf
inc
(bad)
jle
mov
pop
cmp
or
cmp
jae
adc
aad
sbb
pusha
and
xchg
jo
(bad)
sar
icebp
xor
xor
or
jne
xchg
mov
push
or
xchg
push
rol
push
mov
sbb
nop
lea
mov
cwde
pushf
mov
pop
mov
test
and
sbb
sbb
imul
xchg
mov
mov
jo
dec
lods
in
mov
rcl
mov
adc
jmp
mov
cld
cwde
and
mov
movs
cs
daa
mov
iret
movs
fwait
ret
loope
xchg
neg
out
int3
in
test
test
adc
add
stos
sbb
pop
mov
add
and
call
and
loop
inc
sar
push
sbb
leave
lods
pop
ret
mov
rcl
mov
jmp
push
sbb
scas
adc
mov
dec
pop
inc
cwde
out
retf
lods
mov
cmp
push
data16
lods
cmp
or
shl
jmp
or
mov
dec
jmp
dec
push
xor
nop
enter
je
dec
mov
inc
test
push
sbb
and
jo
test
in
inc
popa
lahf
push
cmp
sbb
bound
mov
sbb
mov
adc
or
xchg
pop
scas
adc
dec
add
push
sbb
(bad)
sbb
xchg
sbb
pop
(bad)
fild
ret
push
cmp
aas
pop
je
pop
add
mov
dec
and
loope
fmul
and
ja
jmp
call
jmp
into
mov
ror
or
push
add
bound
jae
es
or
adc
lods
add
jle
sbb
sbb
or
mov
mov
in
fisttp
neg
mov
cmp
mov
mov
cmp
ja
jb
pop
sahf
sub
add
call
add
out
mov
push
test
add
xor
(bad)
push
xor
outs
fbstp
test
pop
add
enter
adc
or
or
fadd
jge
jbe
mov
xor
int
xor
iret
ja
fmul
adc
cmp
inc
mov
pop
and
mov
shr
add
daa
sub
dec
adc
xor
ret
fld
jmp
fild
jmp
into
or
mov
inc
adc
sub
fadd
jmp
inc
das
and
int3
sub
add
jecxz
sub
inc
sub
mov
dec
loopne
mov
test
jge
bound
inc
sbb
jge
mov
fnstenv
mov
or
out
add
push
out
dec
cwde
je
ss
mov
sub
inc
hlt
mov
push
pop
ret
xchg
jae
(bad)
push
jmp
add
inc
xor
ins
push
cmp
ja
bt
jae
cmp
jp
push
jmp
pop
mov
add
and
movs
push
sub
cmp
jne
cmp
addr16
fstp
push
push
cdq
cmp
push
ja
or
fwait
push
mov
addr16
addr16
pop
mov
pop
cmc
or
sbb
or
fld
das
shr
xchg
push
movzx
pushw
adc
and
jne
ror
mov
mov
cmp
arpl
repz
je
les
outs
or
rol
das
lock
adc
jnp
loop
xor
cs
je
test
popa
inc
inc
or
test
jbe
mov
jmp
cmp
pop
or
mov
call
pop
xor
enter
jo
dec
add
movs
add
sub
ficom
xor
mov
fimul
xchg
push
sub
sbb
imul
and
adc
call
add
jg
aas
repnz
sub
repnz
in
adc
ja
js
pop
sub
rol
fucomip
fwait
add
add
call
push
ret
call
or
add
std
add
dec
or
lods
cmp
mov
shl
shl
dec
pop
xchg
fldcw
cmp
dec
imul
or
loopne
jnp
aam
and
xchg
add
push
lock
fbld
les
xor
push
out
jae
cwde
int3
mov
ror
icebp
movs
rol
outs
icebp
outs
(bad)
fidivr
add
mov
repz
jg
mov
or
clc
inc
jge
or
nop
pusha
adc
popf
sbb
add
sub
inc
sti
fcomp
rol
push
and
push
rol
sahf
fcomp
xchg
cwde
push
retf
fstp
fcom
addr16
and
xchg
arpl
nop
leave
add
test
or
dec
retf
fiadd
(bad)
add
enter
(bad)
out
loope
sbb
lds
sbb
sbb
push
xor
inc
popf
movs
or
and
fsubr
jmp
pushf
add
xor
jne
add
cs
jmp
inc
retf
inc
test
or
sub
in
pushf
jmp
adc
add
out
xchg
out
sub
pop
call
enter
js
push
(bad)
in
add
icebp
sbb
les
call
cmp
test
test
(bad)
inc
sub
mov
mov
or
or
xlat
sub
add
jl
add
dec
push
or
push
xor
unpcklps
xchg
dec
push
test
aaa
jg
sbb
sbb
mov
dec
inc
fdivr
adc
inc
cmc
loopne
xchg
sbb
sbb
or
ror
inc
cld
or
popf
adc
mov
scas
scas
jg
sub
lea
js
xchg
lea
iret
dec
(bad)
cwde
jmp
pop
lds
gs
pop
iret
push
mov
(bad)
sub
xor
mov
and
data16
add
pop
mov
aaa
mov
or
jmp
(bad)
pusha
test
in
leave
je
adc
jmp
pusha
or
sbb
aam
test
popa
je
aad
fiadd
push
outs
das
xchg
mov
mov
xchg
sbb
retf
je
jne
pop
fwait
adc
rol
inc
cmps
adc
aad
xlat
pcmpeqw
(bad)
xchg
jmp
sub
shrd
push
fs
pop
pusha
comiss
sbb
in
dec
test
rol
cdq
out
push
lods
pusha
push
or
lea
loopne
jmp
sbb
outs
xlat
movs
jmp
stos
das
or
je
out
or
dec
out
xor
add
pushf
jo
or
push
mov
popa
push
add
xchg
ins
xchg
add
repz
out
cmp
test
mov
jmp
daa
fdiv
jl
inc
cs
push
es
bnd
mov
mov
icebp
clc
addr16
jb
sbb
repz
xor
lods
popf
movs
ror
movs
aaa
add
adc
add
add
sub
int3
test
sbb
lahf
test
xor
iret
repz
mov
ins
es
fwait
push
cdq
out
cmp
jae
push
jnp
xor
pop
hlt
clc
add
stos
mov
inc
jmp
inc
adc
or
or
enter
icebp
pop
jmp
outs
fistp
mov
test
push
cmp
or
bound
sbb
mov
mov
scas
add
pop
mov
sub
xlat
lea
test
mov
ins
add
mov
dec
mov
pusha
aad
push
dec
clc
jge
jle
adc
jnp
out
or
xor
daa
sbb
imul
dec
add
cld
aaa
ja
jbe
add
call
(bad)
pop
push
push
jb
jo
gs
jg
or
or
outs
addr16
add
or
shl
arpl
sbb
mov
xchg
add
ins
pushfw
or
pop
mov
add
outs
push
outs
arpl
add
loopne
cmp
inc
jae
add
mov
call
fsubr
xchg
add
adc
dec
pop
popf
jns
inc
cmp
add
out
adc
fild
sub
fadd
inc
push
das
pop
push
out
ins
jmp
inc
jbe
(bad)
(bad)
sbb
syscall
push
push
imul
xor
dec
test
jae
xor
sbb
not
sbb
add
popa
sbb
(bad)
fild
pushf
push
and
outs
pusha
das
fimul
inc
jbe
cmp
cli
rcl
gs
ror
push
add
mov
xlat
pop
dec
add
and
loopne
inc
loope
sbb
movs
and
test
and
sbb
xor
or
sbb
xlat
ret
(bad)
loope
pop
jbe
test
in
inc
outs
jne
inc
xlat
and
xchg
sbb
inc
add
pusha
inc
jb
or
aaa
xlat
mov
popa
xlat
pushf
xor
xchg
add
das
fcom
or
int3
jbe
cwde
loope
(bad)
pop
cmps
xlat
sbb
xchg
outs
push
fs
inc
sbb
cmp
fistp
nop
adc
add
add
aas
pop
lea
sbb
ins
jecxz
hlt
sbb
pop
das
and
sbb
cmp
xor
mov
push
inc
outs
ins
jo
(bad)
loopne
(bad)
cld
inc
xlat
rcl
mov
ret
pusha
dec
or
aaa
pop
inc
add
pop
iret
gs
les
push
neg
sbb
push
iret
movs
jbe
inc
pop
xchg
jne
push
in
mov
arpl
adc
rcl
loopne
dec
pushf
xchg
xlat
popa
xor
or
popa
add
enter
cmp
mov
push
scas
mov
cmp
add
call
adc
pop
jle
ror
and
loopne
ss
add
adc
pop
or
lds
pop
nop
push
push
outs
scas
mov
imul
pusha
mov
mov
js
je
cmc
dec
add
dec
or
push
sti
pusha
rcr
adc
test
out
out
pop
mov
ret
imul
into
jne
pop
pop
adc
ret
fistp
push
or
add
ret
(bad)
enter
into
mov
mov
ins
pop
hlt
and
push
mov
dec
jge
hlt
test
push
xor
push
push
push
std
shl
mov
lock
and
loopne
and
pop
shl
dec
in
pusha
cmp
cwde
push
inc
dec
jae
add
or
mov
add
mov
inc
rol
cdq
pusha
push
ja
rol
adc
mov
push
sub
push
inc
push
lock
(bad)
clc
mov
sahf
adc
repz
mov
mov
cmp
jnp
mov
and
push
xor
sbb
rcr
popa
sbb
loopne
shl
inc
add
add
xor
xor
test
push
push
sar
mov
cmp
cmp
shl
cmp
stos
add
clc
repnz
xchg
int3
sbb
das
dec
push
pop
fst
push
xchg
ja
adc
fmul
out
mov
je
popaw
mov
hlt
adc
inc
mov
and
dec
or
jo
out
stos
inc
xchg
sbb
mov
push
out
es
fs
std
inc
jns
popa
ins
imul
pop
aaa
movs
add
push
mov
jp
shl
lock
add
loop
cmps
push
add
push
sti
outs
push
jbe
mov
jno
sub
pop
cs
(bad)
popa
ffree
je
inc
sub
arpl
or
popf
sub
sub
das
add
xor
dec
dec
inc
jae
fwait
stos
ret
stos
test
and
fild
sub
cdq
jg
sub
pusha
bswap
push
loopne
adc
and
sub
(bad)
jb
jle
xchg
sub
push
bound
mov
fimul
or
repnz
add
inc
xchg
cli
loopne
shr
add
loop
mov
mov
pop
jae
fwait
pop
or
and
add
push
clc
mov
mov
(bad)
sbb
daa
mov
fld
jns
(bad)
mov
xor
add
xor
jnp
mov
or
or
call
add
adc
xor
cmp
pop
fnstenv
gs
jmp
pusha
lock
lods
cmp
pop
iret
add
adc
push
pop
fdiv
or
add
imul
inc
fbstp
(bad)
cmc
lods
xor
and
jmp
jmp
push
add
outs
or
mov
sbb
jbe
push
push
fstp
outs
inc
js
jae
fldenv
aaa
jno
or
call
jo
xchg
mov
lods
or
adc
adc
push
sub
jbe
icebp
adc
pusha
add
or
add
or
or
pop
fisttp
shr
es
add
pusha
invd
or
and
sbb
push
test
add
sbb
xor
jle
in
fild
jb
and
or
add
repz
add
sbb
push
or
pop
dec
jne
add
sub
xor
sub
xor
sub
pop
pop
xor
mov
fisub
push
pop
or
adc
mov
xchg
rol
dec
add
mov
lds
add
or
xor
sbb
push
call
cwde
and
lods
pusha
adc
daa
add
sbb
sti
adc
push
dec
push
push
push
gs
(bad)
clc
jb
imul
leave
sub
sub
or
jg
outs
jg
je
adc
fs
inc
ins
popa
jae
fsubr
fisub
fs
xchg
or
mov
dec
xchg
imul
xchg
xor
data16
jne
imul
sar
or
gs
out
jae
in
cmps
jne
cmps
or
add
or
inc
imul
sahf
icebp
pop
ret
or
outs
xchg
pop
jmp
fstp
nop
adc
dec
(bad)
fadd
push
gs
fs
dec
jo
xor
outs
ins
jl
xchg
out
adc
push
inc
test
nop
inc
or
test
sahf
jo
adc
or
div
adc
jae
hlt
ins
out
jge
mov
or
lock
ss
push
jl
jae
je
or
jb
or
mul
or
ss
push
dec
imul
rcl
xor
jne
push
push
fsubr
ror
outs
push
jp
add
push
js
in
push
in
int
pop
push
inc
cmp
or
add
dec
mov
ins
jo
jp
je
dec
cmp
loop
jg
mov
es
dec
das
js
or
or
jns
aaa
shl
div
(bad)
cmp
xor
je
push
pop
fistp
jecxz
adc
ss
push
xchg
inc
jbe
push
or
movs
add
pop
mov
inc
and
cmp
add
fdiv
test
add
pop
movs
lahf
out
mov
mov
movs
mov
inc
outs
nop
stos
inc
cwde
test
out
inc
fmul
add
or
jmp
inc
mov
sbb
int3
ret
or
add
dec
push
out
fwait
int3
pop
pop
pcmpgtd
and
mov
ja
js
jmp
adc
imul
dec
and
dec
push
and
lds
or
sti
xor
xchg
jae
adc
xchg
call
cmp
or
sbb
idiv
int
in
ret
inc
(bad)
addss
ret
mov
pusha
pcmpgtd
add
mov
jne
or
sub
pop
and
or
or
pop
pop
xadd
push
dec
or
mov
inc
push
dec
mov
lods
mov
outs
and
sbb
and
pop
mov
mov
mov
inc
(bad)
scas
dec
cwde
sbb
dec
and
or
dec
dec
jo
pop
divps
dec
or
mov
mov
or
outs
fisttp
push
pop
clts
push
push
jo
js
fisub
pop
rcl
add
in
jbe
add
pop
test
scas
dec
sub
push
add
inc
icebp
inc
inc
outs
pusha
mov
in
jne
fs
pop
sub
aam
push
ud0
movs
sub
mov
divps
mov
outs
jbe
ins
imul
out
and
or
mov
pop
clts
sbb
imul
xor
mov
mov
das
add
pop
test
scas
adc
js
es
cmp
and
pop
dec
movs
adc
jbe
or
pop
push
orps
adc
jo
add
bound
pop
iret
add
sbb
das
or
xor
sar
les
rol
or
sub
push
int3
shl
fstp
mov
mov
test
pop
nop
push
aaa
add
ss
hlt
mov
jne
dec
inc
cmp
jmp
ror
sub
inc
push
adc
pop
adc
xor
mov
aaa
and
jb
je
movs
or
pop
sub
jg
mov
adc
push
outs
mov
fbstp
jmp
popf
jno
sbb
outs
adc
hlt
fnstsw
mov
add
xchg
pushf
dec
push
add
dec
jbe
sbb
push
sub
adc
sbb
unpcklps
arpl
test
or
cmp
(bad)
adc
sub
xchg
push
ins
ss
pop
scas
jo
add
mov
dec
jb
pop
fimul
or
push
mov
std
outs
imul
sahf
je
retf
mov
lds
push
sub
daa
daa
jo
lods
push
das
jno
adc
jo
adc
ret
jl
in
in
inc
jbe
gs
je
ins
mov
add
add
(bad)
hlt
mov
js
loopne
sqrtps
pop
inc
jne
in
xor
pushf
inc
dec
adc
aaa
dec
pusha
outs
xchg
or
inc
sub
sub
aam
or
pop
pop
es
jo
std
ja
int3
xor
sub
loopne
or
jbe
dec
push
or
and
dec
dec
loopne
or
jno
mov
and
fdiv
outs
add
sti
mul
or
xor
pop
call
pop
aas
add
fld
rcl
js
fsubrp
cmp
das
lock
adc
test
inc
push
loopne
pop
test
jnp
inc
fmul
fwait
or
loop
ja
ret
adc
xchg
jno
popa
and
or
loopne
das
push
mov
mov
dec
icebp
call
sbb
call
push
test
push
daa
mov
outs
mov
setbe
xchg
xchg
xchg
daa
pop
sbb
leave
enter
jmp
leave
cdq
int
sbb
(bad)
jns
daa
daa
stos
add
and
xor
push
xor
add
ret
adc
jns
sub
xchg
add
movs
add
fs
lds
or
xor
pop
popf
push
ret
fadd
popa
and
mov
add
jo
push
clc
dec
jecxz
add
mov
mov
inc
push
sbb
gs
btr
push
add
adc
add
inc
mov
lods
mov
adc
inc
int3
fistp
add
popa
outs
addr16
add
or
push
inc
test
xor
xchg
add
add
mov
mov
mov
mov
pop
dec
cmp
mov
stc
dec
xchg
push
outs
sub
jno
or
inc
or
xchg
inc
xor
hlt
pop
add
jb
inc
es
mov
xlat
add
sub
or
add
dec
pop
mov
add
pop
pop
adc
lahf
and
mov
movs
stos
dec
inc
nop
jno
cs
mov
jb
js
sbb
in
stos
lods
add
or
add
mov
push
pop
inc
or
push
xor
hlt
cmp
iret
dec
or
ja
xor
addr16
inc
pusha
inc
pop
push
repnz
pop
and
fiadd
pop
sbb
(bad)
push
nop
test
aam
xchg
add
xchg
pop
out
adc
dec
inc
push
int
and
pop
and
or
cmp
dec
pop
xor
mov
or
dec
xor
pop
push
jno
push
push
mov
in
or
or
ins
loope
mov
sbb
cld
data16
cmp
mov
mov
neg
fadd
lods
xor
cld
rol
sub
imul
add
mov
push
adc
ret
mov
add
push
(bad)
in
add
test
mov
sar
out
mov
adc
lods
pop
stc
adc
shl
mov
ror
cmp
call
add
jg
jbe
mov
add
addr16
daa
mov
pop
loope
(bad)
xor
add
cmp
and
movs
outs
add
fs
inc
add
sub
or
jne
ins
mov
neg
dec
psubb
mov
mov
push
hlt
lea
pushf
pushf
fmul
mov
push
js
xlat
mov
movs
pop
cmps
push
push
push
test
inc
es
sbb
ret
pop
test
daa
jge
mov
xor
test
enter
mov
ins
and
es
push
stos
gs
pop
sub
push
dec
or
cmp
mov
add
add
push
xlat
sub
pop
pop
sub
push
mov
sbb
outs
ins
push
mov
lahf
pop
or
out
mov
cwde
mov
inc
outs
or
stos
fild
or
push
dec
sbb
inc
scas
test
lds
mov
pop
sub
mov
(bad)
mov
add
dec
mov
pop
adc
cmps
and
hlt
(bad)
call
add
mov
mov
ss
test
push
or
mov
or
push
daa
lock
push
push
daa
or
jb
jo
push
and
pop
test
fwait
push
daa
fisub
call
add
mov
ds
mov
cdq
dec
les
pop
outs
or
jmp
mov
push
pop
jbe
xor
inc
sub
jae
pop
add
mov
push
xchg
rcr
or
test
mov
add
jmp
cmovae
into
outs
daa
fsubr
sub
inc
xor
enter
les
inc
push
xchg
fcmovne
in
dec
sbb
nop
psubb
mov
leave
inc
push
scas
dec
jl
pop
jb
out
inc
and
adc
(bad)
adc
pop
int3
mov
mov
push
shl
out
dec
push
pop
gs
out
sahf
out
jge
lea
popf
movs
lods
mov
inc
aaa
adc
push
jmp
pop
push
and
cmps
in
mov
imul
push
xor
rcr
daa
in
and
cmps
(bad)
pop
call
inc
push
rcr
or
mov
pop
ja
or
xlat
call
test
mov
out
dec
fisttp
jmp
adc
xchg
xchg
xchg
pop
mov
sti
leave
leave
leave
enter
sahf
les
adc
call
sbb
add
loopne
mov
pusha
adc
add
cs
pop
mov
dec
cmp
push
and
push
dec
dec
or
or
call
ins
and
shl
add
jno
xor
sbb
jns
push
xlat
pusha
dec
jns
xchg
push
in
stos
sbb
arpl
fdivr
push
push
jno
shl
push
mov
add
popf
js
mov
test
das
add
test
dec
xor
push
ret
outs
pop
sbb
pop
lock
aad
or
inc
and
and
add
sbb
pop
js
and
add
and
add
sub
pop
cmp
pop
xchg
fild
icebp
nop
push
xor
gs
cld
cmc
add
inc
xor
mov
push
aad
jecxz
cmp
repnz
add
bound
xor
cs
fmul
add
js
je
sti
xor
call
sti
fisubr
mov
dec
xor
daa
xchg
lods
mov
mov
xor
mov
adc
and
pop
jae
js
cmp
retf
push
xchg
xor
sub
mov
pop
push
repnz
jo
repz
iret
sbb
addr16
dec
add
push
lea
mov
pop
cli
ret
ret
(bad)
mov
or
or
inc
pop
fwait
cmp
imul
add
rcr
imul
jne
add
test
fnstsw
mov
sbb
xor
add
stos
jmp
sbb
xchg
int
xor
ficomp
sub
push
ins
or
popa
jno
scas
js
(bad)
ds
pop
push
jl
push
sahf
xadd
lahf
push
sub
mov
dec
jg
push
add
inc
dec
and
mov
push
call
stos
jo
cmp
mov
hlt
mov
inc
cmp
or
sbb
or
jmp
pop
das
test
popa
push
push
push
idiv
jne
gs
aas
push
dec
add
adc
sub
jg
adc
inc
leave
ss
push
clc
mov
mov
pusha
or
arpl
icebp
sbb
push
push
imul
xchg
ror
lds
inc
add
push
mov
repz
push
sub
inc
stos
jmp
arpl
push
fsub
push
sub
sbb
cmps
lods
sbb
jo
(bad)
jmp
ret
outs
dec
(bad)
and
cmovbe
outs
xor
adc
xchg
and
jns
xlat
loopne
add
faddp
psubw
cmps
add
dec
jle
shr
push
sbb
aas
add
sub
or
cmp
jl
dec
sbb
lds
or
dec
inc
sbb
les
dec
bound
xor
sub
std
lods
adc
test
sbb
movs
and
popa
cmps
and
sub
inc
jecxz
cmp
mov
xor
lods
es
bound
sbb
jmp
cmp
cmps
pop
pop
call
push
xchg
in
fdivp
mov
push
les
or
or
pop
or
ins
ins
movs
cmp
and
scas
adc
inc
sub
rol
arpl
dec
jno
outs
add
push
mov
cmp
mov
cmp
push
push
or
push
call
aam
or
aas
je
call
adc
dec
adc
das
call
push
push
mov
arpl
push
or
popa
loopne
dec
shl
xchg
mov
push
or
mov
ret
sbb
add
xor
pop
lds
or
or
(bad)
stc
retf
dec
int
xchg
adc
push
xor
mov
or
imul
(bad)
push
aas
dec
or
and
pop
add
(bad)
adc
xchg
adc
add
jmp
fsubr
ins
das
mov
mov
inc
add
jo
mov
push
fmul
das
sub
int3
push
sbb
dec
enter
push
xchg
cmp
cmp
(bad)
and
xor
loop
(bad)
icebp
or
sub
cmp
cmp
in
and
jge
inc
push
xlat
push
xchg
push
dec
ja
or
add
out
mov
aaa
loopne
xor
add
sbb
js
mov
xor
ret
mov
pop
xor
iret
fndisi(8087
mov
sbb
cmp
sahf
out
xor
inc
clc
gs
(bad)
shr
cs
(bad)
dec
push
and
push
les
push
shl
(bad)
or
xbegin
and
dec
pop
sub
or
push
jo
js
cmp
pop
inc
xlat
mov
(bad)
or
inc
jo
rcr
ds
pop
add
imul
loope
(bad)
loop
ss
sar
ins
pop
das
xor
sub
cvtps2pi
dec
ja
jmp
pop
cwde
push
sbb
ja
sar
cld
(bad)
sti
and
mov
or
cmp
pusha
popa
xor
push
cmps
cmp
adc
add
scas
xor
push
add
iret
dec
push
xchg
xor
aad
pop
or
mov
pusha
mov
jmp
push
inc
imul
push
fcom
mov
sub
mov
adc
rol
xlat
sub
pop
shl
ret
sub
aad
sbb
(bad)
imul
shl
lds
push
jl
add
inc
loopne
pusha
push
stc
in
add
sub
pop
movs
cwde
cmp
nop
or
xor
add
jge
mov
adc
loope
xlat
push
int
cwde
pusha
sbb
xchg
fnstcw
outs
mov
jge
add
mov
dec
adc
mov
mov
add
and
or
adc
cmp
call
les
je
mov
xor
push
cmp
mov
js
adc
dec
cmp
or
push
mov
cmps
or
test
mov
push
pop
mov
stos
and
imul
fnstcw
mov
and
pop
mov
jb
mov
loopne
out
cmovns
cmps
addr16
cdq
mov
mov
in
in
jg
das
pushf
jae
push
rcl
sahf
cmps
dec
scas
cmp
clc
neg
add
cmp
xor
mov
and
jae
add
loop
jmp
outs
xor
ins
adc
or
mov
jmp
push
imul
xor
jge
ins
shr
andps
data16
leave
jge
fs
ins
cmp
jno
mov
cmp
push
es
nop
push
lock
sbb
cmp
inc
mov
xchg
mov
subps
push
(bad)
adc
dec
add
or
jne
cmp
mov
cmc
or
movhlps
sahf
dec
ror
int
inc
mov
add
pop
ja
push
pusha
inc
shr
adc
js
or
sbb
pop
cmp
ret
lahf
or
cmp
cmp
bound
and
fld
mov
loop
rcr
ds
or
push
lods
push
push
xor
jo
xchg
pusha
jae
ins
mov
push
sbb
xor
es
outs
(bad)
jb
stc
xor
fs
cmp
jp
sub
push
mov
add
jle
popf
cmp
sbb
dec
addr16
clc
ins
jp
jge
jl
sub
mov
ror
repz
lock
inc
jbe
mov
fdivr
or
mov
inc
fbstp
push
sbb
call
dec
cmp
cmp
mov
inc
mov
outs
fs
pop
ja
jb
ror
xlat
es
mov
or
adc
popa
jne
mov
aaa
and
mov
or
push
sub
rol
aad
sbb
inc
pop
jg
sub
jecxz
xor
pop
lds
and
mov
(bad)
mov
fist
and
dec
dec
sub
mov
cmp
mov
popa
push
dec
push
(bad)
sqrtps
push
xchg
add
(bad)
fisubr
xsaves
xchg
std
pop
(bad)
sbb
retf
movlps
add
psrad
lahf
mov
pop
push
push
push
adc
pop
(bad)
push
movhps
jmp
xor
add
push
push
mov
jl
(bad)
sbb
ficomp
mov
pushw
cmp
and
and
and
ss
out
loopne
dec
imul
mov
add
dec
inc
dec
jns
into
fild
push
wbinvd
add
dec
sbb
mov
xchg
jne
push
pop
test
xor
xor
retf
jmp
daa
xchg
cmp
ins
adc
dec
cs
mov
push
cmp
mov
addr16
or
inc
popa
add
mov
push
mov
inc
jo
mov
cmps
imul
xor
cmp
mov
pop
popf
or
add
imul
je
imul
mov
pop
jne
or
jmp
fld
and
pop
jecxz
mov
xchg
ss
rcl
inc
jnp
clc
push
or
jno
ror
sub
and
lea
loopne
dec
xor
mov
ror
push
xor
out
mov
push
inc
jno
out
scas
mov
xchg
add
and
fisubr
mov
cmps
cmp
out
dec
mov
icebp
dec
add
addr16
push
cwde
and
push
cmp
mov
push
or
imul
daa
dec
add
add
sub
or
cmps
adc
movs
push
mov
add
cmp
cmp
pusha
push
mov
push
popa
pop
daa
cmp
push
sbb
stc
pop
and
mov
jmp
mov
fs
or
imul
fisttp
inc
and
push
xor
ret
sub
in
or
arpl
inc
and
sub
pop
or
push
sbb
sbb
rcr
ds
inc
push
pop
loop
mov
xor
pop
jno
lahf
push
ja
cmp
or
or
mov
sbb
les
ja
fldenv
add
adc
fwait
adc
push
xor
shl
cmp
add
data16
mov
or
mov
inc
imul
std
push
xor
cmc
mov
test
mov
in
pusha
dec
mov
outs
cmp
out
outs
push
out
jnp
outs
sub
add
pop
dec
aaa
adc
stc
imul
fcomi
and
add
add
jp
inc
sub
cmc
add
push
adc
inc
loopne
xor
pusha
rol
inc
mov
adc
push
add
push
jo
mov
sbb
aad
adc
cmp
mov
dec
add
xchg
add
(bad)
inc
pop
xchg
inc
mov
cmp
sub
add
dec
sti
lahf
adc
mov
pop
pop
arpl
inc
push
pop
sbb
enter
cmp
enter
cmc
sbb
enter
lea
(bad)
jmp
and
mov
jmp
push
aas
add
add
mov
ins
sbb
mov
pop
int3
js
add
or
not
out
pop
mov
adc
push
xchg
test
push
in
inc
movs
test
inc
lods
ins
popa
out
pop
outs
or
lea
cmps
push
inc
int3
sub
bound
emms
je
xchg
in
je
lock
or
mov
sbb
and
outs
push
jle
or
int
and
add
xchg
nop
fdiv
mov
push
sub
fsub
jne
and
inc
push
inc
adc
sbb
cld
jmp
xor
cmp
add
dec
xor
mov
ret
rol
ror
inc
adc
pusha
idiv
test
push
cvtps2pd
imul
dec
or
or
repnz
ja
push
and
in
arpl
add
pop
sub
push
xor
mov
iret
test
lahf
sub
push
loop
cmps
inc
xor
into
sub
shl
mov
ja
push
lods
je
mov
gs
sub
pop
in
rol
pushf
inc
shr
les
(bad)
cmc
icebp
add
xor
dec
push
enter
add
das
jg
pop
scas
or
pop
inc
jl
mov
mov
mov
popf
xor
mov
jbe
or
cmp
push
mov
push
jo
xchg
test
dec
fnstsw
aam
xadd
add
push
push
sub
je
cmp
fisub
push
pop
xchg
aam
arpl
sub
or
add
js
das
push
out
sbb
clc
in
pop
and
cmp
sub
or
dec
fist
inc
jae
repnz
or
push
hlt
inc
inc
jne
aam
sbb
ss
cmp
jl
pop
outs
jae
neg
fadd
or
lods
fld
ins
mov
outs
fdivr
(bad)
in
mov
(bad)
sbb
xchg
jae
aam
cmps
mov
in
repnz
pop
cli
mov
push
out
inc
movups
xchg
movlps
loope
add
push
(bad)
call
pushf
movhps
into
dec
mov
pop
sbb
sbb
je
ret
in
add
sbb
mov
in
xor
sbb
add
add
iret
push
pop
cmp
jmp
mov
arpl
or
push
arpl
mov
shl
pop
jge
je
push
imul
test
fwait
xor
shl
pop
cmp
push
and
and
call
sbb
xchg
add
movs
stos
sub
xor
mov
adc
bound
mov
and
xlat
adc
sub
add
in
imul
neg
or
cmp
mov
push
rcr
add
jne
dec
push
push
pop
xchg
mov
xchg
sbb
push
pop
and
or
enter
add
fadd
or
add
or
dec
ins
or
es
add
or
mov
add
sub
ja
mov
or
pop
sbb
pop
mov
push
push
inc
outs
popf
inc
rol
sbb
add
ds
les
cmp
mov
and
sbb
push
adc
mov
nop
lock
or
pusha
pop
js
add
js
inc
mov
scas
add
(bad)
add
add
mov
push
les
sbb
pop
mov
or
pushf
mov
mov
dec
inc
test
daa
and
mov
xchg
pop
cmp
add
(bad)
mov
inc
sahf
pushf
(bad)
ss
jge
daa
and
cld
xor
jnp
xchg
xchg
daa
daa
cli
inc
arpl
ret
or
in
in
lds
xor
in
pcmpgtd
cmp
jns
leave
adc
xchg
pushf
mov
retf
adc
xchg
dec
inc
sahf
pushf
int
imul
iret
pop
push
cwde
ja
daa
daa
rcr
imul
add
in
mov
das
in
cs
xor
in
ja
push
ins
pop
xchg
jb
out
aam
dec
dec
cmp
jno
cld
cmp
daa
daa
and
xchg
xchg
xchg
push
popf
fld
jno
leave
leave
leave
data16
ds
repnz
jl
pop
jae
sbb
jb
fistp
cmp
test
aas
jne
dec
inc
sahf
pushf
jecxz
jbe
mov
and
stc
cmp
loopne
xchg
xchg
daa
inc
js
in
aam
mov
push
call
shl
sbb
adc
(bad)
ins
or
xor
es
inc
jne
popw
and
daa
inc
fadd
or
lea
add
fiadd
push
xchg
or
ins
test
sub
test
dec
sbb
int
arpl
push
lock
push
mov
or
imul
inc
pop
sbb
adc
fisubr
xchg
pop
mov
pop
xor
lea
in
and
lods
xor
sub
cmp
mov
adc
sbb
enter
push
outs
std
or
xor
outs
mov
inc
or
outs
std
jnp
add
call
outs
xor
jb
std
test
lds
and
outs
xor
jb
std
clc
mov
lods
xchg
push
or
push
dec
(bad)
std
or
outs
add
aad
std
cwde
or
outs
add
aad
std
call
sub
clc
xchg
mov
cmp
clc
dec
outs
std
in
mov
inc
jb
adc
cwde
jb
lds
outs
std
fsub
push
xor
xor
jns
lds
outs
std
sub
cmp
push
or
leave
add
pop
mov
aad
or
add
mov
outs
std
sbb
push
leave
les
loopne
aam
or
outs
std
dec
bound
jmp
movs
test
mov
cmp
and
mov
(bad)
pop
dec
shl
pop
add
pusha
mov
jno
mov
pop
pop
push
and
nop
add
and
loopne
inc
pop
push
or
enter
sub
mov
add
jno
push
mov
inc
adc
js
je
add
call
mov
add
add
pop
mov
ret
sub
sbb
add
jno
inc
or
pop
sbb
ror
bound
jno
fadd
push
and
cs
or
lock
add
(bad)
adc
ins
test
mov
add
jno
add
xchg
add
sbb
add
scas
jbe
sub
hlt
(bad)
or
lods
xor
add
jnp
cdq
jno
stos
pop
add
(bad)
or
add
ins
jno
stos
pop
add
(bad)
ss
add
jno
sbb
or
cs
xor
adc
rol
add
mov
or
add
imul
iret
mov
sbb
mov
hlt
push
mov
xchg
add
dec
push
mov
xchg
adc
fwait
add
mov
dec
lods
fisub
xchg
add
mov
pop
add
push
inc
cmps
mov
imul
add
mov
inc
sbb
jns
fadd
cdq
dec
add
jnp
dec
ins
xor
jnp
les
rcl
movs
pop
inc
push
pop
xor
adc
mov
sbb
mov
adc
jnp
add
adc
mov
rcl
bound
movs
pusha
ror
push
push
lahf
out
add
int3
cdq
adc
stc
adc
mov
add
lods
cdq
adc
or
mov
and
pop
mov
push
sbb
xchg
jnp
ins
mov
xor
adc
jnp
and
push
xchg
aas
adc
mov
jno
mov
jnp
or
jge
sub
pop
inc
test
mov
jnp
sub
adc
pop
adc
movs
adc
or
mov
adc
adc
mov
scas
cmps
adc
lds
dec
adc
cmps
frstor
dec
mov
scas
cdq
adc
jmp
push
sub
jae
cwde
or
xchg
sbb
push
jbe
mov
inc
or
xchg
rol
adc
xchg
not
fisttp
mov
push
fcomp
mov
jb
ins
daa
or
in
sbb
mov
jb
mov
mov
stos
mov
outs
outs
gs
loop
int
xchg
or
test
or
or
int
cld
out
or
jae
outs
fwait
add
aam
adc
fiadd
jae
sbb
sbb
xor
or
xchg
jg
stc
inc
push
jno
add
adc
xor
add
enter
pop
inc
dec
popa
ins
and
add
or
add
fs
out
(bad)
push
sub
and
aam
outs
outs
add
scas
movs
adc
arpl
mov
pop
push
jg
mov
clc
jb
int
jmp
xchg
iret
and
std
cmp
or
js
jo
outs
lods
inc
add
and
fisub
lods
push
sbb
inc
pop
lods
mov
jbe
xlat
mov
loope
push
ret
and
mov
push
sbb
rcr
mov
test
push
push
jns
gs
cs
ins
popa
jae
cs
pop
jae
pop
push
push
or
dec
jae
mov
iret
ins
(bad)
ficom
clc
pop
add
dec
push
outs
jae
imul
add
add
mov
adc
call
(bad)
inc
and
jp
aam
sbb
ror
fnsave
xor
and
test
sub
in
mov
or
add
push
imul
ins
push
fsub
push
push
clc
jge
out
push
movs
jle
or
sahf
xor
daa
jl
push
and
sar
mov
and
enter
iret
dec
fcomp
push
add
out
pusha
inc
lods
add
add
pop
inc
dec
ins
mov
retf
imul
add
out
int
icebp
push
dec
add
jnp
dec
ins
syscall
push
or
adc
enterw
ins
push
jg
aaa
pop
or
sub
enter
lock
xchg
pop
pop
pop
cmc
jecxz
or
or
inc
icebp
add
add
mov
leave
add
adc
aam
add
pop
add
std
ja
add
add
sti
sub
cmps
popa
loopne
shl
dec
in
or
xchg
sub
pop
ja
jo
push
add
enter
fwait
add
into
outs
aas
push
popf
or
mov
fsubr
mov
push
inc
push
pop
das
jge
add
fdivr
fiadd
inc
mov
xor
and
add
or
cli
dec
mov
add
stos
sbb
daa
pop
dec
push
mov
call
push
cmp
in
add
pop
xor
pop
add
inc
inc
shl
jbe
jmp
add
lea
lea
lea
push
ds
mov
push
inc
pop
arpl
add
sbb
jns
pop
pop
bound
mov
ja
adc
pop
jno
jmp
and
dec
or
jg
mov
sbb
fwait
push
aaa
inc
add
adc
cld
push
repz
int3
add
push
mov
ins
and
ins
mov
sbb
push
pusha
add
add
sar
mov
mov
sbb
jns
push
and
add
sub
push
add
scas
shl
pusha
dec
repz
(bad)
xlat
icebp
ror
inc
dec
sbb
adc
mov
rol
and
popa
add
xchg
mov
push
add
mov
lea
shl
fsub
jb
stos
inc
popa
movs
push
aad
popa
cmp
or
popa
jbe
sub
fnstcw
xor
dec
cwde
inc
in
ja
or
sbb
sub
mov
repz
fstp
arpl
add
in
mov
xchg
popf
push
ror
hlt
sbb
dec
iret
fwait
jge
or
lods
and
and
mov
mov
mov
sub
hlt
inc
add
adc
add
inc
popa
jo
arpl
push
sbb
add
push
or
cmp
pop
mov
js
xor
inc
adc
cdq
prefetcht1
push
mov
test
xor
mov
jmp
sbb
dec
mov
jo
pop
je
dec
outs
pop
push
or
in
xchg
cmp
push
jp
and
lods
fiadd
pop
inc
je
pop
jecxz
shl
dec
gs
or
aad
add
mov
dec
mov
test
xchg
add
mov
retf
fist
test
push
sub
idiv
aam
loop
sbb
mov
inc
inc
ja
mov
pusha
jmp
and
and
inc
inc
jns
pop
sub
fdiv
push
sub
xlat
ss
cwde
jg
mov
sub
sbb
popf
outs
out
xchg
add
xchg
sbb
frstor
jne
cmp
imul
fwait
adc
sti
add
fimul
xchg
add
jb
xchg
sub
nop
adc
ret
loopne
adc
inc
outs
arpl
imul
lds
ja
jae
or
call
ror
xchg
(bad)
mov
leave
ss
test
cwde
loope
mov
mov
pop
xlat
test
cmp
pop
mov
push
inc
shl
mov
jge
fild
inc
mov
xchg
inc
dec
ins
or
popa
push
fstp
cwde
or
dec
and
inc
popf
sahf
push
das
or
clc
sub
iret
rcl
gs
popa
addr16
add
pop
ret
adc
daa
jno
pusha
lds
jmp
sbb
jge
push
jg
add
rcl
cmp
adc
inc
jae
add
sbb
dec
mov
pop
dec
push
unpcklps
push
enter
pop
push
dec
in
xchg
push
cli
or
or
mov
clc
fcomp
loope
ds
ficom
mov
test
cmps
add
pop
les
repz
and
mov
sbb
es
test
jb
mov
dec
into
sti
daa
jo
inc
cmp
dec
inc
ins
outs
bound
cmc
add
(bad)
push
sbb
out
or
clts
les
andps
retf
pop
cmp
add
mov
pop
add
dec
xchg
(bad)
and
iret
cmp
push
jns
arpl
or
adc
adc
push
add
push
xchg
xor
pop
mov
adc
jne
inc
add
cmp
cmps
pop
push
lock
xor
xor
add
xchg
aaa
out
aam
ficomp
cmp
jnp
add
cmp
movs
lods
or
cmps
cmp
pop
push
dec
fs
push
mov
std
add
mov
mov
sbb
push
in
adc
inc
push
in
sbb
add
sub
mov
sbb
test
cmp
pop
rol
push
(bad)
cmps
out
sahf
out
sub
inc
push
pushf
out
sahf
popa
outs
jge
cdq
popf
jne
cmp
jl
ror
ret
movs
in
inc
(bad)
jnp
mov
pushw
add
push
rcr
daa
sub
out
cld
jbe
push
aad
xchg
aad
hlt
out
or
repz
inc
int3
mov
ins
aam
xor
out
mov
in
cmps
test
jo
mov
popa
pop
inc
xlat
adc
mov
mov
or
pop
stos
imul
push
jmp
push
fiadd
mov
(bad)
mov
pcmpeqw
nop
sub
jp
(bad)
hlt
scas
jmp
cmp
sysret
add
xchg
xchg
wbinvd
add
jbe
cs
(bad)
out
repz
fs
jo
jb
cmp
sbb
and
lea
or
pop
stos
jb
fwait
xchg
jle
xchg
push
xlat
add
adc
inc
bound
mov
jo
test
outs
fsubr
pusha
add
push
push
clc
pop
je
push
fadd
jo
jnp
push
sub
sbb
push
lods
fwait
or
pop
lea
pusha
ret
je
call
and
mov
fs
imul
frstor
and
and
inc
add
pop
or
rol
cmp
lds
add
or
dec
inc
icebp
jno
jmp
sbb
outs
jae
hlt
jae
and
jl
dec
xor
in
(bad)
push
jne
adc
pop
mov
stc
ds
fnstenv
ret
es
jl
pusha
test
ja
addr16
dec
inc
in
push
inc
adc
addr16
sbb
mov
es
dec
std
jnp
neg
or
imul
xchg
sbb
xchg
int
test
xchg
push
add
pop
jnp
jle
out
jmp
or
outs
ins
pop
popf
push
les
adc
push
je
jae
lods
(bad)
test
pop
xor
pop
push
je
out
shl
pop
ins
es
push
pop
xchg
xor
mov
shr
push
pop
mov
adc
add
cs
adc
ins
xor
lods
dec
int3
pop
cmp
pop
inc
clts
inc
and
pop
jbe
fist
sahf
loope
push
inc
js
jbe
adc
adc
sbb
fld
inc
sub
push
and
dec
in
ss
sub
mov
addr16
daa
jns
lahf
push
outs
cwde
inc
mov
push
outs
pop
shl
js
out
add
sbb
outs
add
jo
push
inc
cmp
jmp
add
shl
xlat
inc
lods
ror
add
shl
mov
arpl
lds
pop
inc
shl
pop
or
loopne
call
(bad)
jo
les
shl
xchg
adc
dec
outs
arpl
inc
arpl
and
mov
push
xchg
test
pop
dec
dec
or
dec
int3
xchg
ror
dec
sbb
or
mov
push
or
pusha
mov
test
push
xor
loop
adc
das
out
add
imul
sbb
jno
dec
out
pop
cmc
inc
jbe
ins
fcomi
or
xor
popa
xor
js
jnp
push
adc
jbe
dec
jne
ins
or
mov
or
je
pop
or
xchg
int
or
repnz
push
cmp
aaa
(bad)
push
inc
mov
cmp
push
jb
ds
cmp
jns
not
or
ins
or
push
sub
gs
xchg
ja
lahf
popf
xor
mov
jns
ins
imul
xor
mov
inc
cmp
jb
mov
jb
ror
add
js
ret
fbstp
in
xor
xor
mov
inc
jmp
aad
add
mov
push
ror
add
mov
xor
sahf
push
sbb
sub
mov
sbb
or
and
pushf
nop
mov
xchg
fidiv
retf
sbb
inc
mov
dec
sub
xchg
xchg
mov
dec
or
jle
stc
and
nop
movs
popaw
arpl
lods
dec
aad
or
call
xor
mov
xchg
pop
inc
(bad)
int
dec
add
pop
fld
les
add
push
fs
aam
and
mov
div
mov
xor
ss
push
add
or
or
or
loopne
xor
inc
dec
add
pop
and
xchg
pop
dec
or
jns
jnp
dec
xor
aam
inc
or
call
xchg
std
inc
clc
or
outs
outs
into
and
aad
adc
and
sub
shl
inc
inc
test
(bad)
pop
push
jo
push
into
cmovbe
outs
mov
(bad)
pop
(bad)
xor
add
cdq
dec
push
retf
jnp
retf
inc
xor
loopne
mov
xor
rol
inc
lock
and
pop
out
rol
xchg
inc
mov
add
fwait
and
dec
mov
(bad)
push
pop
fcomp
nop
cwde
adc
dec
add
xor
mov
shr
fs
and
xchg
cmp
cdq
mov
add
loop
mov
xchg
adc
out
fdivr
push
and
out
sub
dec
or
pop
jno
ins
jne
push
enter
pop
and
adc
(bad)
jnp
add
push
enterw
rcl
mov
hlt
movs
dec
in
loope
add
iret
mov
jecxz
sbb
lods
cld
icebp
and
pop
dec
or
pop
inc
inc
push
sub
adc
wrmsr
scas
divps
push
cmp
retf
inc
or
or
push
adc
outs
pop
dec
gs
outs
fs
jbe
bound
add
cmp
scas
shl
add
inc
fs
pop
cld
xor
punpcklbw
add
inc
cmp
outs
cmps
xchg
add
or
shl
imul
lds
imul
in
fiadd
sbb
test
xor
bound
adc
sub
or
fisttp
dec
push
push
sub
cwde
inc
or
jb
xor
and
add
pop
adc
or
cmps
and
add
sbb
xchg
xchg
push
test
popf
into
push
push
cmp
jne
inc
and
or
arpl
push
adc
or
inc
mov
call
push
lahf
stc
xchg
mov
mov
ss
push
mov
sahf
xchg
add
jo
xchg
sub
sub
test
sbb
xchg
test
lea
push
(bad)
pop
add
add
mov
ror
sub
xor
mov
mov
pop
sti
mov
ja
fs
pop
sbb
sbb
inc
jo
lea
nop
jg
push
inc
or
mov
push
push
in
lahf
push
loope
imul
add
and
aas
popa
sub
push
adc
jo
ja
mov
jecxz
lea
push
xchg
adc
add
adc
daa
jno
add
adc
sub
outs
(bad)
push
xor
adc
mov
jle
dec
test
push
jmp
cdq
or
add
jno
das
inc
add
out
mov
add
jo
sub
dec
js
(bad)
mov
xchg
ins
mov
outs
fsub
pushf
in
fwait
lods
or
clc
out
sbb
mov
into
push
sbb
or
or
push
push
add
add
add
xor
xchg
sbb
movs
mov
aas
icebp
xor
popa
cmp
sbb
mov
js
cmp
and
jo
scas
push
cmp
jo
cmp
outs
lea
dec
int3
xor
adc
stos
shr
dec
inc
(bad)
outs
sbb
adc
mov
loopne
sub
and
pop
adc
scas
pop
push
in
stos
push
lock
jne
mov
pop
add
inc
jne
mov
js
sbb
xchg
(bad)
mov
add
test
cmp
fidivr
sub
ins
daa
cmp
adc
jb
inc
js
jo
out
sbb
mov
dec
mov
pop
rcr
xchg
loopne
sbb
mov
cmps
das
sub
pop
jbe
add
mov
mov
fmul
jb
xor
pop
test
mov
cmp
test
repnz
mov
setg
sub
jno
std
inc
lods
cmp
cmp
mov
pushf
mov
out
scas
dec
dec
dec
inc
cmp
daa
and
in
pop
scas
inc
ins
in
or
daa
cwde
mov
pop
leave
leave
leave
in
and
dec
mov
cmovg
or
pop
mov
pop
sub
cmovb
push
xchg
and
lahf
jecxz
loop
or
arpl
arpl
and
push
out
not
push
out
inc
jno
enter
xor
or
imul
lahf
or
mov
lahf
jmp
xor
or
mov
data16
fadd
pushf
out
sbb
or
dec
mov
in
add
pop
sub
sbb
enter
lds
jmp
mov
inc
sub
mov
pop
cdq
out
inc
push
add
add
nop
fadd
pop
test
and
sub
clc
movs
xor
add
or
xor
sub
mov
fdiv
sub
and
dec
push
jb
pop
int3
nop
stos
mov
dec
and
out
and
mov
lock
dec
xor
repnz
xchg
mov
in
cmp
pushf
leave
inc
leave
mov
dec
xchg
push
adc
jmp
xlat
xchg
inc
scas
sub
lods
fcom
mov
push
repz
sub
in
or
imul
push
push
push
adc
(bad)
les
push
xchg
cmp
pop
sub
sub
stos
adc
test
pusha
data16
pop
pop
or
jg
and
js
or
jecxz
or
adc
inc
fild
into
sbb
mov
mov
outs
loopne
ins
outs
movs
(bad)
stos
into
test
cvtpi2ps
sbb
push
jge
out
push
shl
push
fisttp
dec
cmps
dec
pop
or
push
rcl
sub
mov
push
xchg
lock
aam
dec
xor
cld
xor
loopne
fist
cmp
pop
push
push
inc
inc
adc
add
xchg
call
addr16
or
add
mov
enter
adc
pop
fadd
jbe
sub
rcr
nop
push
icebp
lock
push
xor
cmp
adc
les
add
in
mov
fisubr
and
adc
cmp
in
adc
jbe
dec
lds
and
outs
sub
mov
lock
xor
jnp
or
xor
add
lea
sub
mov
sbb
adc
jns
pusha
lds
add
push
stos
imul
pop
lock
dec
sub
jo
xor
scas
cwde
fisttp
push
ss
or
sbb
pop
adc
inc
(bad)
jo
imul
pop
fimul
pop
ins
cmp
test
or
ss
push
or
sbb
sbb
sbb
std
dec
pop
sbb
aam
mov
mov
push
pop
dec
add
and
mov
or
aas
push
inc
dec
sub
mov
mov
sbb
sbb
and
bound
add
pop
inc
pop
xor
xchg
push
and
pop
inc
out
mov
call
es
dec
adc
xor
aaa
xchg
xchg
inc
pop
or
out
mov
inc
xchg
adc
mov
pop
push
adc
mov
pop
pop
dec
test
movs
adc
add
stos
cmp
out
shl
inc
pop
pop
sahf
mov
mov
xor
iret
or
pop
mov
test
lods
add
or
jp
mov
inc
or
xor
mov
push
mov
mov
mov
ud0
sub
cmp
mov
pop
adc
mov
push
std
pop
add
mov
adc
test
push
ja
jmp
adc
dec
mov
mov
xchg
sbb
packssdw
loopne
jno
and
pop
addr16
jl
out
mov
add
push
call
push
add
mov
mov
lock
push
lock
sbb
mov
jmp
and
dec
les
jp
jge
jne
mov
outs
enter
popf
sub
call
test
stc
jecxz
(bad)
scas
hlt
or
mov
dec
pop
xlat
pop
in
test
jmp
scas
jne
or
jmp
jno
clc
ja
sti
call
inc
push
jae
push
jne
ins
imul
add
fnsave
push
es
popf
mov
lsl
stos
inc
xchg
xchg
xchg
mov
cmovb
leave
enter
mov
in
mov
jns
jb
dec
xchg
fisub
mov
push
sahf
pushf
pushf
mov
out
ror
inc
pop
xchg
iret
pop
shl
daa
and
mov
xchg
xchg
xchg
daa
adc
push
xchg
je
xchg
xchg
mov
imul
test
sub
(bad)
daa
out
(bad)
and
(bad)
jb
pushf
dec
sub
neg
je
sub
or
shr
add
dec
sub
in
ficom
or
inc
mov
add
daa
sbb
mov
xor
push
jbe
xchg
xor
lahf
sub
test
jns
mov
xchg
mov
jo
xchg
mov
push
xchg
pop
movs
mov
sub
cmps
mov
add
test
mov
stos
mov
mov
mov
add
sub
rcr
xor
xchg
mov
aam
mov
lea
push
bound
inc
pop
push
mov
inc
xor
lea
ficom
xchg
push
inc
sbb
lea
pop
add
adc
mov
sti
inc
movs
mov
mov
mov
lea
or
xchg
add
pop
add
(bad)
add
sti
adc
add
je
movs
aam
stos
aaa
jnp
ss
mov
sub
or
sub
jb
or
test
div
lock
or
std
ja
add
and
pop
arpl
(bad)
enter
idiv
inc
mov
mov
adc
xchg
push
imul
lahf
inc
sbb
arpl
adc
adc
in
aam
add
jo
pop
and
add
push
jo
add
push
push
dec
gs
jno
in
push
or
ja
ja
adc
jmp
adc
rol
sub
jmp
sub
outs
add
cmps
add
cmps
test
ss
out
pushf
shl
adc
stc
jne
test
hlt
test
add
cs
rcl
bound
pusha
inc
test
aaa
repz
shl
ins
(bad)
or
mov
sub
adc
pushf
jp
pusha
xchg
int
push
or
mov
pop
add
fstp
cmp
sahf
dec
cmp
(bad)
lock
add
imul
push
sub
ret
and
inc
cmp
push
arpl
scas
dec
push
and
add
push
rcl
mov
jnp
sub
cmp
and
(bad)
add
jne
and
cmps
push
dec
pop
pop
jne
shr
sbb
lds
jg
mov
sbb
jb
inc
push
adc
movs
push
jnp
lods
dec
std
push
mov
inc
icebp
stos
push
or
push
push
inc
push
movs
sub
cmc
cmp
adc
nop
add
adc
mov
pop
pusha
pcmpgtd
mov
xor
stos
loope
mov
cmp
push
add
inc
push
ss
push
test
push
sbb
stc
int3
ret
imul
mov
inc
clc
aas
and
pop
clts
adc
xlat
loopne
add
(bad)
hlt
js
sbb
inc
js
in
push
mov
or
pop
cmp
cmp
sbb
or
mov
dec
jo
add
lock
xor
cmp
adc
lds
pop
dec
push
in
add
enter
mov
add
out
lds
repz
push
(bad)
in
jecxz
jg
push
je
dec
fs
or
outs
ja
pop
adc
push
dec
pop
ins
mov
lods
jne
push
push
adc
mov
xlat
inc
inc
cwde
imul
outs
fild
mov
sbb
cs
inc
push
adc
mov
sbb
imul
sbb
or
add
sbb
jae
fst
test
xchg
pusha
inc
and
pcmpgtw
or
cmp
jbe
sub
inc
fstp
cmp
pop
shl
jno
pop
lock
jae
aas
adc
or
aas
ficom
daa
push
jb
call
les
mov
call
mov
mov
lods
enter
int3
rol
retf
outs
test
retf
push
inc
cwde
push
test
jp
pop
xchg
nop
movs
addr16
adc
in
mov
push
and
sbb
inc
cmp
scas
xchg
stos
rol
or
shr
lock
inc
cs
les
mov
fmul
or
or
sbb
popa
jb
in
daa
test
add
or
fst
jae
clc
push
xor
in
or
fwait
out
gs
push
pop
add
call
add
(bad)
gs
adc
push
pop
cmp
imul
push
add
or
js
outs
jnp
out
push
mov
cs
push
inc
test
mov
sub
cmp
xchg
mov
add
jne
popf
stos
retf
punpcklwd
mov
pop
adc
push
inc
push
ret
push
dec
add
push
in
not
sbb
(bad)
mov
in
mov
xlat
clts
int
pushf
pushf
mov
test
add
dec
dec
dec
inc
dec
test
std
daa
daa
and
iret
adc
cmp
jmp
aas
je
les
cmp
dec
shl
add
lds
push
lds
sahf
xchg
inc
test
inc
ins
je
or
imul
mov
add
dec
add
vunpckhpd
ins
outs
mov
sbb
or
dec
fstp
push
jne
imul
hlt
in
cmps
inc
jo
jne
xlat
jbe
push
mov
mov
sahf
loopne
test
dec
add
aaa
dec
mov
pop
mov
jecxz
sub
mov
scas
pop
mov
jg
fcom
imul
xchg
es
loopne
dec
and
test
fdiv
dec
aad
imul
pop
inc
das
add
imul
mov
adc
jmp
fiadd
xchg
(bad)
push
sbb
cmps
mov
push
or
pop
inc
dec
imul
inc
xchg
or
enter
lock
shl
add
jo
jo
or
aam
dec
xchg
mov
jl
cdq
(bad)
in
shl
inc
scas
pushf
jle
mov
inc
mov
cmp
mov
sub
scas
adc
or
add
sbb
add
test
test
rol
mov
xchg
imul
hlt
into
shl
inc
stos
cwde
push
in
push
call
bound
add
mov
in
(bad)
retf
fisttp
and
sub
lahf
add
pop
rcr
push
lahf
cs
adc
fld
test
push
jo
(bad)
jmp
or
rcl
inc
sti
sub
gs
pop
sub
or
addr16
pop
imul
jle
lock
into
inc
cmp
and
inc
xchg
lmsw
aam
push
loope
ins
push
mov
mov
push
jae
addr16
bound
test
ins
lds
lods
gs
push
inc
xchg
cmp
mov
add
jmp
cmp
(bad)
sbb
add
add
xor
enter
gs
enter
pop
rol
sti
add
enter
call
jns
inc
and
ret
imul
rol
ret
jge
xchg
mov
in
push
pop
or
lds
xor
gs
data16
inc
test
mov
dec
cwde
fsub
(bad)
fsubr
inc
or
add
pop
int3
dec
mov
jae
inc
inc
mov
jmp
sar
add
push
daa
cmp
push
push
push
mov
iret
pop
xor
and
add
jp
inc
dec
je
pop
dec
sub
call
ror
add
test
movs
push
loop
(bad)
cmp
inc
pop
xchg
inc
outs
enter
dec
loopne
cmp
rcl
dec
test
mov
add
add
or
fisttp
inc
add
sub
outs
xor
lock
add
jnp
add
popf
and
dec
sahf
dec
or
scas
dec
jb
adc
dec
fwait
adc
pusha
jns
add
aam
ret
sbb
fild
push
add
push
dec
std
mov
dec
or
outs
jo
pushf
push
dec
ins
mov
shl
cmp
push
jb
and
arpl
outs
fs
jo
cmp
ficom
xor
mov
aad
out
repnz
mov
or
fild
xchg
adc
jo
and
or
cmps
sti
es
js
jo
adc
ret
sub
cmp
test
pop
ss
ins
push
sub
push
mov
aad
clts
mov
rcr
xchg
sub
mov
mov
loop
popa
sub
pushf
add
(bad)
fwait
sbb
jmp
inc
jbe
imul
mov
mov
imul
add
(bad)
jns
add
js
je
dec
push
jge
cwde
loopne
stos
and
sbb
int3
fldcw
daa
xor
and
(bad)
je
ins
xchg
pop
jmp
jle
add
push
and
jns
pop
adc
push
ins
ja
dec
cwde
or
xchg
ins
loop
jae
jnp
adc
fdiv
jae
adc
mov
xor
pop
add
frstor
jg
sub
ins
into
(bad)
sbb
into
jmp
xor
sub
push
add
mov
fisubr
pop
add
ss
or
shl
add
(bad)
ucomiss
pop
jbe
mov
jns
sub
(bad)
mov
cmps
jecxz
adc
mov
mov
push
mov
add
paddusw
into
das
fmul
clc
xchg
mov
cmp
dec
leave
add
nop
push
dec
sti
adc
inc
lock
mov
xor
xor
pop
clc
mov
push
sbb
inc
inc
je
bound
cmp
push
add
dec
mov
pop
mov
rol
pop
mov
push
test
jge
xchg
sub
rcr
pop
ja
js
jle
push
test
wbinvd
dec
ss
sti
(bad)
mov
fcom
mov
ja
dec
mov
jecxz
fwait
xchg
in
rcl
fdiv
add
ja
dec
fbstp
ss
movs
xor
pop
aaa
or
call
shr
movs
pop
sub
add
ins
xlat
out
sub
xchg
dec
inc
shl
imul
add
jl
dec
fwait
add
jmp
sbb
jno
cs
sbb
sar
mov
ret
add
jge
hlt
push
add
adc
fisub
call
es
fcmovnbe
push
jmp
mov
cmps
sar
mov
push
js
push
nop
mov
int
xlat
inc
aad
ss
mov
push
sub
sub
add
outs
dec
rcr
push
mov
or
push
mov
daa
jmp
push
nop
xor
fstp
add
nop
fisubr
mov
pmuludq
mov
sub
clts
add
add
adc
and
popa
jmp
or
inc
and
test
inc
jl
fsubr
sub
cmps
pop
test
clc
or
add
inc
in
or
sub
add
sbb
ins
or
adc
adc
inc
fmul
in
jno
mov
cmp
add
lea
lea
push
adc
or
int3
ret
rol
mov
dec
jae
inc
xchg
push
iret
lods
xor
adc
jae
sub
popa
mov
pop
add
add
ds
scas
dec
add
xchg
dec
lea
je
call
imul
inc
xchg
out
pop
ror
adc
xchg
ja
pop
dec
pop
or
dec
jge
rcr
pop
fwait
or
outs
mov
inc
sub
jo
cdq
punpckhwd
imul
ja
popf
sbb
pop
cld
das
add
mov
adc
push
stos
int
or
mov
(bad)
(bad)
inc
ins
out
push
enter
movs
sbb
inc
and
enter
ss
xor
retf
sbb
movs
fcom
cld
les
neg
jb
adc
int3
add
cmp
repz
xchg
out
cmc
pop
sbb
inc
(bad)
int
dec
add
lods
cmp
fadd
adc
ror
cmp
xchg
into
mov
sti
movs
fs
enter
adc
xor
push
cli
mov
loop
push
cwde
loop
pusha
pushf
shr
fsubr
xlat
aaa
cmp
add
fcomp
sub
xchg
fisttp
je
mov
pop
push
ins
cmps
pop
push
jl
ss
test
mov
mov
mov
scas
cwde
mov
mov
test
mov
or
mov
lea
or
rcl
ss
dec
ja
and
xchg
js
or
add
pusha
rcl
add
push
popa
addr16
cmp
rol
movs
push
test
fadd
or
sbb
or
cmp
retf
outs
adc
fs
jnp
sbb
mov
or
in
mov
push
inc
dec
cmp
ja
xor
and
cmps
and
and
int3
push
add
push
aam
leave
mov
retf
mov
adc
outs
sub
pop
ret
sbb
(bad)
cmp
lock
(bad)
cli
call
inc
(bad)
les
out
push
add
jmp
in
xchg
daa
daa
mov
bts
and
jge
mov
inc
lock
jae
add
aaa
shrd
jne
out
clc
inc
out
cvtps2pd
popa
xor
jle
into
bound
pop
push
lock
sub
std
(bad)
cld
(bad)
sti
push
dec
jmp
or
cli
push
repz
cmp
sar
cmp
mov
push
sbb
add
jns
neg
dec
push
push
push
pusha
jnp
dec
repz
push
xor
jl
or
dec
jg
sbb
rol
xor
jne
inc
shl
daa
shl
ins
sahf
(bad)
cld
imul
inc
add
popa
iret
test
mov
popa
bound
dec
sub
lds
inc
movs
sahf
out
push
add
jo
sub
sub
dec
inc
pavgb
je
cmc
pop
push
fucomip
lock
pop
(bad)
loopne
fdiv
lods
js
sub
in
inc
adc
mov
rcl
js
inc
repz
dec
ins
xor
xor
dec
dec
aam
or
loope
mov
int3
push
call
aad
aad
sub
dec
jno
jb
xchg
push
xchg
inc
out
sahf
cwde
push
addr16
and
aad
pop
and
jb
mov
inc
lock
and
sahf
out
pop
mov
lds
pop
push
popa
add
and
nop
fcmovnbe
mov
mov
sbb
sbb
je
push
loope
add
jnp
call
scas
nop
cmps
push
sub
pop
sub
iret
mov
add
inc
add
mov
ret
or
pop
(bad)
dec
pop
or
enter
pop
test
pxor
jb
inc
add
xchg
sbb
test
push
or
es
ror
dec
js
je
add
popa
data16
add
sub
adc
xlat
sbb
ret
or
imul
add
pop
inc
push
cdq
mov
pusha
repnz
xor
jo
in
shl
mov
jae
push
ins
xchg
xchg
mov
dec
data16
movs
xor
jge
inc
or
movs
add
mov
inc
adc
xchg
cs
xor
pushf
xchg
mov
rol
or
pop
sbb
inc
icebp
fsubr
or
fdiv
leave
or
retf
in
fdivrp
ret
(bad)
jne
or
ds
je
retf
jecxz
(bad)
mov
dec
xchg
add
ror
arpl
and
or
out
or
fadd
add
or
scas
pop
mov
xlat
add
add
shr
in
add
repz
outs
and
push
or
stos
push
sbb
push
mov
enter
dec
aam
sbb
pusha
inc
je
rcr
xchg
rcl
xchg
mov
push
xchg
stos
or
test
rcl
or
cmp
push
mov
xor
add
inc
inc
or
or
add
mov
and
xor
or
mov
or
dec
push
mov
add
fstp
loopne
push
lods
es
or
shr
mov
mov
xor
enter
push
sub
neg
push
add
xchg
jo
pop
mov
or
push
sub
call
loop
add
push
push
out
mov
push
cwde
mov
pop
mov
rcl
imul
fst
test
fsub
push
xor
leave
or
loopne
ret
add
xchg
xor
call
movs
inc
xor
and
add
lock
es
push
pop
adc
(bad)
test
or
jnp
or
in
popf
inc
or
inc
stos
xchg
(bad)
daa
add
in
or
sbb
mov
es
xor
add
sub
cmp
add
xchg
ret
add
or
add
mov
xchg
dec
loopne
sbb
je
mov
pushf
push
mov
dec
push
es
push
and
shr
popa
out
add
jne
jae
rol
dec
cwde
push
add
sub
es
sar
dec
push
aam
cs
or
fs
addr16
mov
enter
xor
out
and
pop
jbe
hlt
pop
cwde
push
or
popf
jnp
adc
push
add
cmp
jns
adc
dec
jecxz
je
adc
mov
jmp
and
jmp
inc
mov
pop
push
popa
mov
pcmpeqb
es
out
pop
adc
ds
sbb
add
adc
nop
adc
unpckhps
push
add
inc
or
rcl
mov
cmp
ret
shl
ss
inc
test
jmp
push
push
sbb
movs
jmp
ret
or
sbb
bound
push
cmp
or
jb
sbb
sbb
jbe
push
push
enter
stos
jnp
xor
sub
ja
jmp
enter
jns
test
cmp
or
push
mov
sub
mov
imul
pop
retf
sub
or
or
popa
ins
jne
cmps
(bad)
ja
jp
push
adc
adc
mov
retf
xor
xor
test
ins
out
loope
jp
and
jle
mov
xor
call
mov
test
rcr
cmp
ja
pop
ja
sahf
push
in
pop
sbb
cli
add
clc
bnd
iret
rol
(bad)
hlt
add
ins
cs
jbe
(bad)
xor
push
pushf
(bad)
mov
es
loopne
das
sbb
(bad)
mov
sub
xchg
add
aam
icebp
dec
push
imul
sub
data16
imul
jns
jmp
addr16
pop
fdecstp
cs
mov
or
sub
jne
xlat
ror
repnz
or
xlat
jmp
inc
jle
int
mov
jmp
psubd
mov
std
outs
mov
xor
pushf
push
or
popa
dec
outs
fs
xor
pop
push
test
cmp
loopne
or
jle
pop
sar
stos
lea
jno
jno
mov
nop
mov
mov
sbb
mov
pop
jmp
pop
test
aam
(bad)
push
(bad)
sub
add
pop
inc
and
ret
loope
inc
lea
pop
mov
cs
mov
pop
push
bound
pop
test
inc
cmp
add
adc
pusha
add
cmp
add
sbb
std
sbb
ins
or
adc
in
or
mov
(bad)
addr16
and
ficom
sbb
jb
jns
or
gs
enter
adc
or
pusha
test
and
pop
sbb
ins
enter
movs
in
xchg
jno
fisttp
ja
pusha
cmc
xchg
ficomp
push
jle
mov
push
sub
xchg
loop
mov
cmp
or
and
dec
and
movlps
mov
dec
pop
popf
mov
adc
mul
imul
inc
outs
ins
je
test
pop
ret
xlat
pop
inc
jne
fs
outs
mov
ss
add
neg
cld
das
sbb
sbb
loope
addr16
jmp
jo
pop
lods
push
sar
xchg
mov
push
ja
push
sub
pop
ret
adc
bound
aad
xchg
pop
ror
jo
test
sub
sub
pop
push
outs
lds
(bad)
mov
out
pusha
dec
inc
sub
and
push
icebp
daa
aas
push
add
push
cmp
cmp
and
adc
loopne
fwait
cs
cmp
push
fistp
add
mov
bound
dec
jo
ins
bound
add
add
mov
add
out
pop
fiadd
scas
or
jbe
mov
jns
or
cmp
pop
leave
jo
jb
test
test
xchg
mov
inc
outs
jecxz
pop
push
adc
fsubr
test
gs
mov
addr16
outs
or
push
test
mov
push
mov
daa
das
mov
cli
mov
out
icebp
pop
retf
pcmpeqb
push
clc
or
xor
cdq
dec
popa
outs
popa
addr16
mov
pop
add
jne
ror
add
adc
and
in
xchg
or
data16
and
mov
enter
jnp
pusha
int
mov
int
shl
sbb
push
add
shl
into
or
lods
lods
or
add
scas
add
inc
nop
jmp
push
bt
pop
in
fist
push
xor
cmps
nop
cmps
sub
ret
xchg
or
adc
mov
pop
in
push
out
enter
inc
add
arpl
popf
push
sbb
les
ja
es
imul
or
loopne
push
sub
enter
ins
push
add
push
inc
popa
lock
inc
xchg
cmp
dec
popa
fcmovu
dec
cmp
mov
xchg
sub
outs
call
inc
nop
mov
shl
pop
or
loop
test
add
pusha
mov
cs
pop
scas
loopne
or
pop
fcom
jmp
test
or
ins
cmp
jmp
cmps
mov
jl
sbb
test
ja
xchg
push
add
xchg
cli
dec
cmp
scas
jne
sbb
(bad)
repz
push
test
scas
sub
push
jp
jo
inc
sub
fmul
add
inc
sbb
or
fldcw
stos
js
jecxz
sub
xchg
lods
test
pop
adc
push
sub
sub
dec
outs
cmp
psrlq
xor
push
dec
fs
jp
jnp
inc
cs
imul
push
add
dec
inc
pop
xchg
fisub
daa
daa
daa
and
in
xchg
xchg
xchg
xchg
add
call
add
in
in
push
jae
(bad)
jb
repnz
and
pop
cmps
cmp
jns
loope
or
loop
cmp
lods
or
xor
test
xchg
push
je
sbb
stos
fmul
push
mov
inc
mov
loope
add
or
adc
pusha
or
add
test
push
repz
out
cs
ja
movs
or
jae
push
mov
xor
adc
xchg
dec
cmovns
js
xor
addr16
sbb
add
jg
stos
cmps
pop
or
dec
jg
out
call
jle
je
sbb
mov
cmp
loop
or
dec
test
xchg
push
leave
ins
stos
imul
outs
fisub
ror
les
mov
ja
inc
js
lock
jbe
imul
mov
loopne
adc
sub
out
mov
mov
adc
xlat
pusha
ud2
or
dec
add
or
and
je
call
gs
rcr
bound
push
in
inc
fwait
add
or
aam
dec
test
test
imul
cs
pusha
sbb
and
push
or
jno
clc
bound
repnz
inc
imul
add
xchg
push
xor
(bad)
enter
inc
add
push
xchg
mov
add
add
or
mov
ja
pop
add
xchg
retf
xor
or
aas
add
das
adc
add
scas
mov
adc
scas
dec
add
out
mov
add
push
sar
rcr
(bad)
pushf
ret
xor
xchg
and
(bad)
loopne
dec
or
adc
loopne
out
add
sbb
dec
jg
idiv
and
add
pop
add
popa
pop
add
jnp
add
mov
adc
pop
lds
pop
dec
push
cmp
add
cmp
cmp
jb
je
and
shl
(bad)
call
mov
scas
jmp
push
mov
cmp
cwde
addr16
push
mov
js
xlat
xor
dec
sbb
mov
popa
or
jge
inc
push
push
and
sub
int3
ss
jns
or
or
push
in
pop
and
mov
dec
xor
pop
or
dec
add
add
imul
sbb
std
or
xchg
pusha
mov
xchg
dec
sub
mov
pop
repnz
in
xor
mov
sub
add
and
int3
adc
inc
and
pop
cmp
sbb
inc
sub
add
lea
sbb
sub
sbb
scas
add
pushf
xor
sbb
imul
add
in
stc
rcl
aas
loopne
loopne
(bad)
xchg
sub
shl
inc
dec
dec
mov
dec
jae
add
repz
mov
das
dec
(bad)
bound
push
pop
sub
aas
(bad)
test
call
arpl
push
cmps
and
jo
loop
call
adc
cmp
jb
(bad)
sbb
nop
lgs
adc
pop
push
mov
push
push
push
outs
dec
push
hlt
fimul
add
lods
mov
mov
xor
fld
inc
push
sbb
or
test
stos
loopne
cmp
lock
or
fsubr
pusha
mov
dec
xor
adc
add
inc
add
data16
sub
mov
adc
xchg
push
outs
ins
push
mov
(bad)
mov
push
popf
xor
pop
sub
xchg
pop
xchg
loop
pushf
mov
push
inc
rol
mov
rcl
sub
pusha
adc
mov
cwde
adc
shr
or
movs
add
rol
in
imul
mov
into
adc
add
pop
inc
add
mov
ret
push
out
xchg
test
add
or
sbb
(bad)
pusha
adc
ja
test
cmp
adc
fs
dec
dec
scas
sbb
clc
ja
aam
push
or
mov
nop
fcomp
pop
xchg
jne
pop
dec
xchg
lock
pop
add
add
pop
into
and
call
sbb
push
scas
out
pop
xor
pop
push
jge
or
dec
inc
or
aas
outs
ret
nop
ins
sar
adc
adc
push
jbe
mov
es
sbb
dec
adc
adc
(bad)
ror
dec
xlat
or
lock
imul
or
sbb
or
add
jmp
xor
fsub
mov
je
pusha
mov
inc
bound
pop
sub
inc
push
inc
(bad)
or
test
push
into
add
mov
ja
add
test
cmp
mov
add
adc
add
xor
or
and
test
push
fild
add
xchg
jmp
sub
push
and
ret
aad
xor
xor
stc
mov
rcl
add
and
push
dec
lock
in
es
lea
push
sbb
xor
sahf
dec
clc
mov
cmp
je
add
mov
cmp
pop
xor
hlt
push
test
test
push
or
or
xlat
sbb
push
mov
sbb
push
dec
pop
or
sbb
adc
pop
daa
int
jmp
jae
retf
adc
pop
adc
add
jg
mov
mov
repz
mov
das
mov
imul
dec
jle
push
nop
not
push
fcomp
and
push
add
xor
push
sub
das
xor
imul
adc
jb
jecxz
sbb
dec
aas
vmread
ja
jae
push
pop
pop
sbb
pop
push
fwait
mov
fs
leave
ret
(bad)
cmp
jb
repnz
pop
sbb
jb
mov
mov
cmp
inc
sahf
pushf
pushf
shl
sbb
inc
dec
dec
dec
dec
popfw
shl
and
daa
daa
and
movs
fsub
fdiv
bts
fstp
or
fimul
mov
and
inc
xchg
sbb
mov
shr
xlat
dec
push
add
pop
or
dec
and
shl
sbb
xor
sub
movs
push
repz
xchg
dec
add
mov
jle
adc
mov
ja
ror
es
xor
stos
jbe
inc
dec
lock
push
and
fimul
or
pusha
ja
and
jae
sbb
cmp
or
dec
xchg
dec
or
lods
ret
popa
push
mov
das
xchg
and
leave
call
and
clc
call
xor
mov
or
repnz
add
and
push
dec
jno
sbb
pusha
add
xchg
inc
mov
push
add
dec
mov
or
push
or
add
push
inc
sub
xor
jo
pusha
adc
push
and
or
sbb
push
add
add
and
rcl
fist
xor
inc
push
dec
imul
add
es
dec
mov
cmp
add
dec
(bad)
rcl
mov
stos
sbb
or
icebp
mov
dec
pop
add
or
inc
lds
adc
icebp
jge
inc
add
adc
adc
push
add
icebp
jns
ror
movs
pusha
inc
lock
dec
or
ror
icebp
test
icebp
or
or
sbb
sbb
dec
sbb
(bad)
loop
retf
imul
pop
div
xchg
fadd
push
xchg
inc
add
add
imul
xchg
pop
jmp
add
cmp
stc
or
and
dec
ins
jmp
add
and
rcl
shl
(bad)
push
push
in
arpl
or
sub
sbb
push
idiv
xchg
test
adc
rcpps
sbb
jo
cmp
adc
jmp
sub
cmp
push
je
test
mov
cmp
shl
es
rol
retf
xchg
test
pop
call
jno
scas
push
es
or
fwait
popf
sbb
pop
pop
das
jbe
push
jmp
cwde
cs
pop
pop
call
jl
xlat
loope
addr16
scas
or
test
loope
loope
mov
mov
xor
dec
mov
push
jae
mov
je
daa
jne
retf
cs
dec
inc
sub
or
pop
das
dec
pushf
or
sub
fild
push
mov
add
mov
clc
xchg
jmp
je
popa
mov
add
das
rol
or
and
xchg
lock
jo
add
call
xchg
inc
je
fnstcw
inc
push
xchg
mov
mov
out
add
retf
addps
or
add
add
popa
inc
add
xor
cmc
adc
add
movs
int
add
add
push
fbld
push
lods
into
fild
movs
or
fisttp
mov
mov
mov
xchg
sub
mov
adc
add
push
(bad)
jg
dec
inc
scas
add
iret
rcr
or
aaa
add
outs
das
dec
push
mov
mov
std
inc
inc
iret
mov
add
cmp
jl
pop
jmp
adc
or
neg
jno
push
jmp
jo
xchg
pop
push
dec
dec
mov
and
rol
pop
pop
mov
bt
fdiv
sub
out
cmp
pop
add
cmp
das
xchg
das
aas
mov
push
fdivr
clc
aas
cmp
out
add
cmp
fs
jo
xlat
inc
and
push
add
xor
popa
sub
aas
imul
adc
sub
stos
push
aas
mov
fidivr
cs
or
loopne
jo
inc
clc
imul
ds
daa
daa
mov
pop
sbb
rcpps
daa
rdmsr
pop
cmps
leave
leave
enter
xor
in
in
iret
add
dec
test
repnz
sbb
jb
stos
shl
sub
sbb
jmp
xor
fnstsw
ins
pop
call
ror
push
add
pop
adc
pop
xchg
push
test
push
add
call
add
or
ja
test
pop
or
ret
pop
inc
pop
mov
and
cli
jne
scas
test
pop
test
pop
push
add
or
or
sar
push
add
cmp
jo
push
add
aaa
ins
push
add
push
test
mov
pop
inc
add
push
pop
nop
ja
ror
pop
pushf
jbe
push
or
shl
lea
push
add
pop
add
add
jbe
pop
pushf
or
sbb
das
leave
call
gs
mov
mov
ficom
xor
push
adc
lds
mov
mov
sub
pop
iret
mov
add
push
push
jno
inc
add
dec
hlt
add
pop
add
rol
shr
leave
or
pop
stos
shl
bound
push
jae
jo
lds
pop
sbb
or
xchg
add
inc
add
in
add
sub
pop
xchg
xchg
pop
mov
sbb
xchg
mov
sub
inc
nop
shl
dec
test
cmp
add
dec
aaa
mov
sub
dec
xor
sub
add
push
mov
(bad)
mov
loopne
mov
or
daa
sbb
push
add
adc
pop
and
mov
pusha
xor
or
loopne
pop
jns
mov
xchg
sub
add
sbb
adc
adc
pop
push
(bad)
mov
pusha
push
pusha
test
dec
popf
popa
sub
(bad)
push
mov
add
jo
or
xchg
inc
add
push
rol
pop
imul
cs
add
dec
lods
xor
xchg
cmp
mov
or
add
rol
call
push
lea
rol
call
imul
push
call
dec
and
adc
mov
adc
or
mov
adc
cmp
cdq
lods
xchg
sbb
pop
mov
pusha
inc
movs
out
ret
xor
sbb
mov
mov
push
add
cmp
inc
cmp
fadd
lods
inc
sbb
sbb
nop
pop
xchg
or
shr
add
frstor
add
cmp
clc
das
push
push
xchg
aas
sub
mov
cmp
loopne
mov
aas
push
nop
inc
(bad)
stc
adc
pop
inc
xor
les
scas
push
movs
in
and
in
jo
out
out
pop
stos
stos
(bad)
stos
adc
and
dec
inc
sub
aaa
pop
gs
add
xor
cmp
sub
push
mov
sub
add
xchg
cmp
mov
add
mov
or
lahf
fld
add
add
fimul
inc
mov
punpckldq
adc
sbb
inc
mov
clc
push
add
or
je
mov
add
mov
mov
jb
into
mov
or
sub
pop
cwde
sub
push
cmp
adc
and
int
jo
or
int
and
push
add
add
xor
int
adc
int
inc
push
add
int
mov
push
add
xlat
pop
test
inc
xor
push
mov
add
fist
pop
mov
add
inc
sahf
sub
cmps
inc
jne
or
loopne
jae
neg
adc
cmp
push
pop
push
push
pinsrw
and
dec
push
push
jmp
dec
pop
or
mov
push
push
pusha
aad
sbb
shr
fcomp
test
movs
sub
rcr
push
sub
pop
pop
lock
and
stos
fwait
inc
inc
add
push
jbe
jne
sbb
rcr
inc
test
out
pop
jo
push
pop
inc
das
scas
inc
aaa
cwde
cli
ins
(bad)
sub
sbb
lock
mov
xlat
clc
push
add
aaa
and
loopne
sub
add
push
and
in
test
loopne
aaa
cmc
arpl
add
shr
cmp
comiss
sar
lock
push
ror
leave
ins
mov
adc
inc
(bad)
fs
leave
mov
ss
xor
in
sbb
inc
jne
jns
jb
imul
dec
jbe
cmp
cmp
pushf
pushf
pushf
scas
shl
sbb
inc
les
mov
cmp
sbb
dec
cmp
cdq
or
punpckldq
ja
scas
xchg
pop
ror
test
jno
fwait
es
sbb
call
mov
sbb
idiv
cmp
dec
sub
jno
fcom
mov
or
dec
and
xor
ficom
cmp
into
push
lods
test
dec
jg
add
dec
mov
mov
sbb
sub
add
push
mov
add
aam
pushf
pop
or
mov
fsub
adc
jne
xor
pop
dec
sbb
inc
repnz
dec
add
jae
mov
xchg
or
mov
push
mov
mov
and
ret
das
leave
call
and
pop
mov
pop
xor
mov
inc
or
xchg
mov
and
cmps
mov
cmp
dec
sub
push
add
push
dec
mov
dec
inc
cmp
add
inc
or
add
fnstsw
shl
cmp
add
out
outs
jo
ja
push
jae
loopne
ret
cmp
add
add
add
push
add
xchg
cmp
mov
add
xchg
xchg
pop
inc
push
push
and
adc
dec
sub
mov
fs
mov
add
or
jo
call
call
pushf
sbb
cmp
inc
pop
jo
dec
in
dec
add
aad
lds
sub
pop
loopne
cmp
cdq
dec
add
mov
cdq
cmp
scas
dec
lods
jb
jno
ja
adc
dec
dec
inc
mov
or
rcr
ins
pushf
or
sbb
jns
or
jbe
add
xchg
add
add
add
dec
jo
dec
add
mov
retf
inc
or
aas
xchg
sbb
dec
mov
sub
stos
lods
mov
mov
cmp
sbb
mov
add
ror
or
xlat
dec
(bad)
aas
ja
xchg
mov
jns
sbb
add
mov
sbb
or
add
sub
rcr
inc
stc
add
lea
pop
rol
movs
(bad)
fstp
pop
aas
cmp
inc
cmp
xor
aaa
mov
or
je
mov
jb
xor
cmp
in
repnz
clc
cmp
fisubr
push
adc
add
pushf
xchg
in
dec
xor
sub
add
inc
mov
or
inc
xchg
call
inc
adc
lods
jnp
mov
inc
cmps
aas
xchg
dec
outs
enter
fild
fild
inc
push
pop
mov
ret
mov
addr16
rcr
mov
dec
push
(bad)
sub
or
imul
scas
pop
std
pop
push
retf
lea
jo
add
(bad)
adc
add
dec
xor
mov
out
ss
pushw
daa
mov
daa
lahf
mov
loop
je
xchg
xor
xlat
aaa
or
lahf
dec
sub
pop
test
cdq
stos
add
adc
sub
aad
push
(bad)
pop
xor
dec
in
push
ror
dec
add
sbb
push
push
push
les
push
aas
push
inc
ds
inc
and
or
inc
add
jmp
enter
pop
mov
dec
je
mul
add
daa
aas
pop
aas
push
lock
add
fiadd
xor
pop
or
rol
inc
xor
(bad)
aas
mov
clc
scas
(bad)
aam
mov
inc
jno
inc
je
add
push
pop
cmps
add
rcl
xchg
lods
leave
sub
arpl
push
and
(bad)
jo
add
jns
add
sub
jo
shl
add
out
sbb
add
and
inc
lods
(bad)
pop
xor
add
add
pop
adc
push
dec
mov
call
adc
mov
in
push
test
push
xor
femms
outs
rcr
xchg
sub
xchg
sbb
clc
sub
mov
das
push
adc
das
inc
pop
xchg
adc
shr
stos
pop
xor
lock
mov
cmovp
xlat
mov
fmul
das
data16
cmp
add
mov
pop
(bad)
loope
add
inc
or
test
push
add
sub
pop
mov
scas
xor
pop
add
fadd
adc
pop
das
dec
add
lods
sub
not
cmp
jecxz
pop
mov
(bad)
aaa
sbb
sub
push
add
outs
fcomp
lock
inc
cmps
sub
test
mov
add
or
addr16
test
dec
adc
add
sub
push
fst
nop
rcl
push
or
inc
push
sub
jns
add
sbb
arpl
xchg
retf
cmp
jns
pop
or
pop
jbe
test
pop
inc
mov
shr
push
jp
jne
inc
jno
test
(bad)
lock
add
div
sub
cmp
push
out
or
sub
dec
mul
test
push
push
stos
loopne
stos
icebp
or
push
repz
xchg
stos
stos
dec
stos
or
xchg
popa
mul
pop
push
sub
mov
addr16
or
mov
test
ins
push
adc
add
fld
xor
adc
pop
out
js
adc
push
(bad)
out
mov
pop
dec
xchg
sub
imul
inc
push
ret
je
or
and
addr16
mov
stos
add
sub
and
push
retf
pop
add
rcl
xchg
bound
pop
pop
das
jp
xchg
push
test
cwde
push
xor
movs
xchg
push
cmps
stc
push
fstp
inc
stos
xor
bound
daa
lods
rol
jge
xor
sar
pop
dec
xchg
sub
pop
jae
inc
ror
sub
adc
outs
add
outs
sub
and
stos
ret
add
bound
es
sbb
push
sahf
mov
pop
pop
inc
daa
test
mov
lahf
jle
je
je
mov
push
sub
imul
mov
stos
in
dec
ja
test
push
push
pop
jns
pop
retf
add
dec
test
push
xchg
stos
pop
es
or
neg
cld
inc
add
jl
add
gs
es
push
dec
cmps
cld
idiv
mov
sub
nop
in
in
pop
aaa
add
cmps
jle
out
inc
stos
imul
out
jno
shl
push
or
mov
sbb
inc
je
push
cmp
or
push
(bad)
(bad)
loope
test
mul
push
sub
mov
dec
mov
hlt
stos
xor
jno
stos
mov
inc
xchg
data16
and
push
das
addr16
addr16
lods
test
addr16
mov
ja
or
addr16
xchg
mov
cmp
push
adc
rcl
fs
je
jns
adc
xchg
arpl
push
add
nop
loop
cwde
repnz
mov
mov
or
jge
outs
sub
and
xor
ds
add
jno
fwait
das
lahf
push
xor
clc
not
fisttp
shl
out
cs
mov
push
fidiv
mov
or
push
adc
aam
adc
movs
adc
loope
xor
fimul
mov
and
lea
push
inc
inc
jb
ja
push
fs
clc
stos
aam
jp
xor
dec
outs
inc
fnstcw
movs
ja
fsub
arpl
adc
mov
push
pop
mov
xor
test
sub
adc
test
sbb
cmovnp
rcr
imul
inc
scas
test
mov
pop
xchg
xchg
xchg
xchg
ins
dec
nop
fldcw
into
enter
in
pop
lods
xor
and
jmp
cmp
cmp
int3
je
xchg
cmp
add
test
lds
jns
jo
das
or
jno
dec
retf
inc
push
or
outs
loopne
mov
dec
adc
mov
fwait
mov
xor
and
mov
jae
sbb
icebp
fwait
or
les
dec
add
add
xor
ret
imul
rcr
addr16
add
div
add
push
push
cwde
xor
fadd
add
or
or
ffreep
inc
repz
repz
sar
or
inc
ret
and
add
jl
mov
dec
push
or
xor
push
inc
repz
pop
inc
pushf
push
or
sbb
and
mov
add
pop
sbb
pop
xchg
dec
jb
xchg
out
jno
ret
test
xchg
ret
sub
outs
jae
scas
mov
pop
and
add
or
or
out
add
adc
out
jbe
sbb
imul
add
int
sub
mov
sub
xchg
inc
push
dec
xlat
pushw
adc
lock
mov
lahf
ror
mov
pop
add
and
xchg
mov
or
or
stc
adc
adc
push
ror
pop
cmps
mov
rol
aas
add
fadd
push
fidiv
lock
pop
add
inc
inc
adc
inc
cwde
or
inc
dec
or
pusha
and
add
sub
adc
fidiv
imul
sub
fsubr
sub
xor
jo
add
test
push
cmp
das
arpl
push
adc
jae
add
call
mov
sbb
push
mov
push
dec
xor
ret
mov
sbb
pop
repz
test
mov
xor
add
lahf
lds
fst
pop
js
xchg
push
lahf
mov
cli
xchg
lods
push
loope
jo
(bad)
jmp
pop
mov
xchg
daa
cmp
mov
mov
dec
shl
arpl
adc
mov
pop
xchg
pusha
xor
xor
jl
add
inc
sub
push
inc
or
ret
retf
jg
jle
adc
mov
adc
push
xchg
pop
or
mov
xor
outs
push
cmps
inc
or
rcr
sbb
sub
or
mov
xchg
cwde
jl
add
aaa
loope
add
adc
add
int3
jmp
adc
add
or
or
cwde
push
cmps
mov
ret
inc
mov
add
jnp
out
jnp
retf
jne
xchg
paddd
jg
xor
cmp
dec
popa
outs
popa
sbb
push
cmp
addr16
inc
add
jle
add
push
adc
add
xor
ret
dec
add
adc
ins
cwde
push
mov
leave
and
jge
adc
int
jnp
mov
or
sbb
int
shl
sbb
cmc
pop
lock
push
add
or
popa
ins
imul
mov
scas
add
stos
lea
test
mov
mov
or
outs
repz
or
mov
pop
add
xor
add
jo
lods
sbb
int
loope
jns
sbb
mov
not
sub
add
push
int3
imul
or
lock
enter
scas
hlt
test
or
sbb
inc
mov
dec
or
fwait
inc
fsubr
shl
xor
sub
cmp
push
mov
xor
mov
ja
add
adc
push
and
inc
loopne
mov
push
pop
mov
or
ins
mov
loopne
mov
push
adc
mov
jp
ja
push
and
mov
mov
push
xchg
jo
push
cmp
test
mov
out
inc
cmp
inc
jmp
dec
cmp
mov
sub
sub
sub
inc
mov
inc
pop
jb
xor
push
les
std
or
pop
push
dec
adc
cmp
inc
fimul
mov
xchg
daa
daa
daa
test
add
enter
dec
pushf
jmp
inc
js
stc
repnz
in
cmp
xor
mov
jb
and
cmp
fild
sub
jno
sahf
pushf
stos
push
test
mov
bound
(bad)
push
sahf
lds
sahf
sub
add
push
mov
pop
xchg
dec
cmp
inc
pop
push
retf
dec
or
arpl
xchg
(bad)
rcl
test
daa
imul
sbb
xchg
add
mov
dec
mov
addr16
ror
push
adc
inc
push
popa
jg
push
test
xchg
push
xor
inc
xor
rcl
inc
inc
mov
jmp
test
push
add
add
jns
mov
cmp
outs
mov
in
hlt
or
push
adc
add
or
jbe
dec
xchg
movs
nop
nop
out
add
pusha
jo
enter
push
xchg
stos
push
test
xchg
lods
and
not
or
dec
inc
add
xchg
and
das
leave
call
gs
mov
inc
hlt
push
popa
arpl
xor
xor
cld
sub
mov
pop
imul
jge
dec
add
push
or
jno
add
pusha
add
sbb
mov
add
mov
or
fimul
inc
add
adc
daa
pop
xor
xor
mov
jmp
inc
jle
sbb
mov
add
pop
xchg
jae
not
add
or
lods
or
inc
push
pop
or
pop
xchg
ins
xchg
and
ret
daa
push
and
dec
gs
and
jo
dec
jo
inc
jae
in
push
xor
(bad)
fmul
dec
popa
inc
adc
rcl
in
add
es
push
cli
jo
mov
cmp
add
inc
mov
xor
fs
or
dec
mov
jmp
rol
push
or
daa
add
js
inc
mov
add
stos
sbb
pop
dec
sbb
xchg
fcmovbe
xor
inc
sub
hlt
adc
or
sbb
inc
sbb
or
adc
movs
add
and
popa
pop
add
xchg
or
inc
or
xor
sub
adc
popf
xor
xor
dec
or
cmps
push
xor
jmp
cmp
add
lds
xchg
sub
add
imul
or
pop
pop
xor
push
mov
add
xor
mov
lods
shl
fsub
and
add
or
or
push
add
inc
xor
dec
mov
inc
pop
push
push
jb
or
cwde
fwait
sbb
mov
inc
ret
ret
fstp
inc
adc
jo
pop
xor
inc
jo
dec
hlt
fild
popa
pop
cmp
mov
add
outs
imul
pusha
fnstsw
arpl
push
mov
test
mov
push
pusha
xor
fs
ins
outs
bound
xor
mov
call
popa
xchg
mov
or
fs
jmp
ins
cmp
pop
adc
or
loopne
pusha
and
out
lds
int3
fld
inc
and
pop
xchg
add
sbb
jne
lahf
nop
stos
inc
xchg
mov
cmp
push
add
xor
fadd
outs
addr16
or
imul
xchg
pusha
sbb
outs
nop
and
inc
punpckhbw
mov
jb
adc
pop
das
pop
xchg
push
cmps
aas
adc
mov
cmps
inc
test
fdiv
(bad)
inc
lea
add
shr
dec
and
ja
and
jno
inc
stos
out
sbb
jmp
fs
inc
outs
pop
cwde
lds
and
lds
jns
not
or
and
push
ss
jmp
jbe
int
in
cld
xlat
pusha
adc
test
loopne
jmp
add
sub
ss
pusha
arpl
and
or
push
jne
mov
or
(bad)
jnp
add
inc
aad
hlt
ins
and
xchg
out
(bad)
fnstsw
inc
push
adc
mov
add
add
clc
call
sub
jmp
or
xor
ja
add
dec
mov
and
mov
int3
jbe
addr16
icebp
or
repz
retf
and
jmp
pop
add
xchg
pop
or
push
sbb
fstp
push
cwde
das
cmps
daa
push
xchg
cmp
loopne
mov
adc
sub
and
mov
or
ror
jbe
push
int
daa
rcl
js
cmp
and
test
sar
jnp
pop
sbb
(bad)
pop
add
iret
pop
int
pop
or
in
ror
das
out
push
add
or
push
cpuid
out
cmp
jns
mov
or
in
js
not
cmp
scas
adc
inc
and
push
fstp
jl
xchg
dec
add
cwde
push
push
outs
retf
call
pop
and
add
mov
ins
lahf
or
or
int3
and
push
ror
sbb
loopne
popa
sbb
mov
pop
enter
add
xor
mov
in
or
pop
dec
add
or
cmp
and
int3
or
iret
mov
add
sbb
mov
sub
sbb
pop
lds
xor
test
addr16
mov
(bad)
jg
add
push
mov
push
mov
mov
mov
mov
mov
mov
pop
pop
pusha
out
aas
mov
fidiv
push
push
mov
mov
mov
xor
(bad)
outs
call
mov
mov
mov
call
pop
pop
dec
cmp
jne
cmp
aaa
and
rol
add
pop
test
test
outs
(bad)
in
push
cmp
je
add
mov
movzx
add
cmp
mov
or
adc
push
add
je
shr
not
add
add
test
ret
bound
nop
(bad)
xchg
push
daa
hlt
das
and
movs
mov
loope
and
mov
and
mov
push
cdq
sub
xor
sub
mov
add
inc
inc
inc
jne
mov
lods
mov
xchg
sbb
and
mov
call
loopne
je
xchg
gs
daa
daa
mov
jle
xchg
xchg
xchg
xchg
mov
add
shr
pushf
pop
sbb
pusha
in
ss
loopne
sub
lods
inc
mov
inc
and
popf
daa
pop
fild
add
test
mov
dec
fst
stos
popa
mov
ins
cwde
inc
hlt
cmp
ficomp
hlt
inc
(bad)
cmp
push
mov
outs
popf
push
idiv
outs
cmp
mov
loopne
mov
mov
mov
in
scas
mov
test
lea
and
xor
test
cmps
add
(bad)
mov
loop
dec
outs
add
mov
cmp
js
or
lods
pusha
push
shl
inc
adc
xchg
push
pop
out
int
add
and
pop
cdq
and
jle
pusha
sbb
xchg
push
jb
jecxz
pop
fwait
mov
pop
jge
cwde
fisub
ins
gs
popf
or
mov
add
jp
pop
in
adc
jecxz
cmp
and
cmp
mov
out
add
push
retf
jmp
lods
push
ret
scas
add
xchg
or
jo
add
(bad)
inc
jp
repnz
imul
pop
add
add
mov
add
in
leave
leave
cmp
cmps
clc
xor
ins
xchg
shr
cli
arpl
loop
jae
add
cmps
mov
inc
xlat
cmp
xor
mov
xchg
rol
mov
in
mov
or
or
jno
mov
mov
dec
lock
icebp
add
xchg
scas
inc
or
add
rcl
bswap
jno
in
or
pop
push
add
je
jge
sub
add
je
jno
js
bound
jno
or
xchg
leave
fwait
and
jmp
nop
cs
or
mov
pushf
inc
fldcw
fdiv
fld
push
aam
fld
jb
in
push
je
jb
sub
pushw
mov
ins
dec
sub
jo
cdq
leave
add
cwde
mov
bound
test
fild
push
pop
imul
sbb
int
mov
xchg
and
xor
cmc
push
mov
jb
xor
or
xchg
inc
push
cwde
test
ret
fcomp
ret
(bad)
sbb
add
(bad)
loopne
dec
sub
jl
add
mov
dec
iret
fiadd
fnstenv
push
shl
inc
add
pop
pop
add
pushf
and
shr
adc
and
ret
loopne
jne
lock
cmpxchg
mov
(bad)
add
fwait
pop
in
das
cli
push
xlat
and
xor
pop
outs
dec
cmps
adc
fild
cwde
ficom
pop
sub
add
sbb
dec
cmp
or
(bad)
push
mov
and
scas
pop
std
inc
inc
and
or
push
pop
inc
lds
and
sbb
add
or
adc
and
rcl
mov
sbb
push
fsub
push
mov
cmp
loopne
xrelease
mov
inc
push
xor
scas
bound
bound
add
stc
sub
adc
lods
dec
sub
and
xchg
pop
or
and
inc
ret
sub
mov
xchg
fadd
and
bsr
sub
xchg
jno
sahf
daa
loopne
add
inc
push
inc
cmp
mov
rcl
frstor
jb
and
inc
lock
neg
shl
in
int
dec
push
add
mul
dec
mov
dec
add
adc
or
add
out
push
call
lahf
js
push
xor
sub
push
inc
stc
dec
mov
adc
push
inc
push
pop
shr
jo
push
aam
mov
adc
jo
sub
add
mov
push
scas
sbb
outs
xor
fsubr
mov
push
cmp
ins
das
or
pop
xor
outs
sahf
cld
pop
sar
stos
inc
aam
pop
outs
add
push
cs
addr16
and
and
and
pop
add
jp
sbb
or
dec
ror
cmp
or
jmp
mov
push
add
add
mov
cmp
cmps
sbb
arpl
test
mov
cmp
pop
mov
mov
inc
mov
loop
add
xor
imul
push
cmp
popa
das
jg
cmovno
cmp
clc
imul
fcmovnu
add
(bad)
idiv
test
inc
and
test
leave
fsub
add
out
xchg
pop
xor
mov
inc
dec
idiv
andnps
push
mul
sub
sub
shl
push
or
add
pop
ror
add
test
and
addr16
push
inc
mov
inc
add
adc
movs
out
test
and
stos
imul
in
inc
aaa
add
ret
pop
mov
ret
jmp
dec
sub
out
xchg
add
jae
add
int3
add
pop
adc
inc
addr16
mov
or
sub
sbb
fadd
sub
mov
xor
add
cld
jg
outs
mov
add
cmps
pop
add
and
and
lds
push
loope
jno
inc
dec
xchg
jbe
xor
push
inc
or
add
inc
or
mov
rcl
mov
push
inc
push
dec
jecxz
leave
shl
cmps
jecxz
jge
dec
loope
inc
mov
push
add
push
jg
retf
cld
mov
adc
outs
nop
cmps
sahf
sbb
push
daa
xchg
test
es
xor
(bad)
fisttp
mov
sub
xor
nop
cmp
cwde
mov
fld
add
xor
into
pushw
cmp
dec
add
jmp
inc
add
xlat
mov
xor
sbb
ret
in
in
sbb
jns
mov
je
pop
imul
push
sub
push
sub
jl
sub
jbe
add
stos
(bad)
shr
fcom
out
fisttp
mov
js
inc
jne
jmp
mov
aad
mov
jns
call
sub
dec
fdivr
sub
aad
ficom
stc
pop
stos
sar
fild
push
and
jmp
mov
rol
(bad)
xor
retf
or
test
jmp
mov
int3
lods
push
shl
add
add
push
shl
scas
outs
mov
cmp
pop
outs
push
add
inc
pop
outs
(bad)
call
cwde
jmp
outs
dec
xchg
sbb
and
ins
cs
xlat
inc
jmp
fnsave
and
jmp
pop
imul
std
ret
aam
lods
fwait
sbb
fidiv
pop
add
push
fmul
sti
push
lock
mov
das
push
scas
push
xor
cmp
push
in
pop
and
mov
push
fwait
jnp
in
mov
mov
jbe
inc
and
push
xor
add
(bad)
adc
mov
cmp
imul
inc
xchg
loopne
inc
push
xor
pop
ja
push
or
dec
mov
pop
jecxz
xchg
les
inc
dec
outs
outs
cs
leave
pop
xchg
jl
arpl
iret
xor
xchg
cmp
sub
jge
cs
xor
sub
adc
fsub
xor
leave
int3
mov
addr16
andps
dec
frstor
into
leave
xchg
mov
push
fdiv
add
mov
mov
imul
pushf
pushf
aam
inc
mov
jp
dec
dec
mov
repz
mov
out
push
pop
popa
jae
xchg
mov
or
add
dec
push
cmp
rcl
or
popa
and
je
mov
dec
fidiv
or
lds
jno
mov
jecxz
ret
xor
xchg
cmp
add
shl
add
push
or
and
mov
or
js
pop
fwait
(bad)
sar
into
call
add
or
jmp
retf
or
pop
and
push
pushf
cmp
loopne
cwde
fadd
or
dec
loopne
xchg
les
sar
xor
shl
jle
jo
push
js
sub
mov
inc
jmp
dec
or
(bad)
arpl
cmp
jmp
inc
or
add
mov
sbb
fadd
and
pop
xor
lock
sbb
mov
xchg
loopne
xor
pop
mov
call
adc
add
or
xchg
jae
dec
sti
add
out
outs
or
sub
jne
mov
sub
xor
xor
sbb
xlat
jp
mov
cmp
push
loopne
shr
in
xchg
addr16
test
adc
and
jns
cdq
xor
jbe
call
sbb
(bad)
cld
loope
add
and
jb
or
rol
dec
push
push
or
sub
pop
add
jae
push
fadd
xor
cmp
sbb
adc
inc
dec
xor
inc
dec
or
aam
mov
das
push
dec
ds
pop
xchg
push
test
ret
bound
sub
nop
into
cvtpi2ps
xlat
push
test
sbb
call
iret
inc
gs
jne
je
ret
dec
mov
enter
add
mov
push
pop
les
xchg
adc
aas
mov
mov
adc
mov
(bad)
mov
mov
dec
popa
sub
sahf
call
je
push
je
arpl
hlt
imul
fst
adc
aas
frstor
push
or
nop
leave
and
push
leave
and
(bad)
mov
in
sbb
int
outs
jnp
lods
shl
mov
in
into
or
mov
stos
inc
sub
imul
ins
push
retf
scas
mov
in
lea
test
mov
mov
ins
and
cmp
pop
mov
xor
mov
mov
mov
mov
xor
or
je
inc
adc
out
sbb
mov
daa
cmps
sub
mov
fstp
das
mov
mov
sub
push
pop
jecxz
add
mov
mov
push
push
fdivr
or
xor
inc
xor
dec
xor
sub
inc
push
cmps
call
or
cwde
inc
sub
sbb
jb
push
pop
add
sub
in
mov
and
adc
fistp
mov
xchg
shl
dec
jnp
mov
call
popa
push
mov
fs
sub
fbld
cdq
mov
xor
push
fild
(bad)
fild
mov
iret
sub
jns
add
or
pop
sub
dec
test
xchg
pop
(bad)
push
je
lods
out
add
mov
push
inc
mov
push
mov
pushf
mov
mov
dec
inc
sahf
dec
rcr
dec
sub
je
hlt
xchg
xchg
xchg
daa
sub
ja
leave
leave
leave
enter
push
jne
in
leave
fwait
ror
les
in
in
mov
adc
mov
xor
loopne
mov
cmp
aas
(bad)
fimul
cwde
sub
daa
shr
dec
bound
mov
mov
push
enter
or
pop
sub
and
jno
mov
daa
imul
outs
test
add
fldenv
jae
cld
ror
xor
push
popa
mov
sub
dec
pop
cmp
add
sub
mov
or
bound
add
test
push
sub
jns
xor
cmp
js
sub
pop
in
cdq
call
ja
rcl
xor
dec
xchg
and
cmp
nop
jae
lea
sbb
enter
scas
push
mov
dec
xchg
fs
shl
dec
sbb
adc
and
das
leave
call
and
and
vpmadcswd
imul
mov
mov
pop
dec
jae
xchg
into
mov
jae
mov
add
or
pop
sub
jno
mov
pop
sahf
bnd
imul
add
add
lea
and
sub
pop
nop
push
stos
mov
push
adc
imul
inc
pop
dec
xor
bound
jnp
or
rcr
test
push
pusha
xchg
xor
push
lea
js
xchg
xor
or
ja
add
sbb
jo
inc
mov
and
and
add
popa
inc
nop
repz
movs
inc
dec
add
inc
rol
jo
sar
sub
stc
push
aaa
add
jo
add
mov
in
loopne
dec
mov
ins
and
ins
ja
loopne
mov
je
push
hlt
aam
inc
or
add
ret
adc
adc
dec
sbb
inc
dec
mov
inc
adc
dec
sbb
mov
(bad)
push
xor
or
mov
sbb
dec
or
retf
popa
and
add
not
sub
xchg
adc
mov
mov
lds
inc
sbb
mov
or
sbb
xor
xor
or
ss
lods
mov
sar
rcl
dec
push
sub
push
xchg
inc
add
sbb
xor
xor
outs
and
popf
mov
add
aas
(bad)
mov
sbb
and
add
add
cld
inc
xchg
call
sahf
add
adc
movs
rcr
inc
pop
pop
test
shl
push
cmp
pop
ret
dec
pmaxsw
sbb
adc
add
loope
adc
dec
jne
and
cmp
mov
cwde
pusha
enter
frstor
pcmpeqd
sbb
dec
test
mov
xchg
and
jo
and
sbb
sub
push
mov
movs
int
xor
mov
or
mov
or
mov
sbb
js
pop
test
(bad)
pop
or
xchg
push
mov
rol
in
xchg
mov
inc
push
push
or
jecxz
sar
mov
jo
push
popf
add
out
lea
mov
cmp
inc
sub
sbb
pop
aaa
pop
add
xchg
pop
jo
out
push
in
add
mov
sub
add
dec
stos
dec
xor
push
xor
add
and
sub
xchg
idiv
xchg
mov
lds
sub
xor
fnstenv
xor
fs
dec
bound
xchg
sbb
or
push
or
popf
pop
mov
mov
xchg
lds
or
or
mov
mov
sbb
push
push
scas
ins
jbe
xlat
pop
movs
ins
add
mov
add
(bad)
push
pop
cld
add
jmp
add
sar
arpl
adc
pop
addr16
pop
adc
xor
test
rol
iret
test
cmp
test
add
mov
test
and
nop
cmp
push
and
push
sbb
xlat
pop
std
or
(bad)
adc
lods
cmp
and
mov
or
lahf
sub
xor
pop
mov
push
mov
es
std
push
scas
or
sbb
dec
pop
push
add
in
imul
cld
or
and
lock
fwait
push
jno
in
pusha
xor
mov
pop
pop
jno
add
cmp
add
pop
mov
ret
mov
test
xchg
sbb
shl
push
call
jo
push
add
das
push
rcr
ins
xchg
je
test
cmp
dec
repnz
cwde
push
pop
or
xor
and
add
add
push
pop
imul
pop
or
shr
pop
daa
mov
xor
popf
(bad)
adc
cmp
aam
aaa
push
pop
ja
mov
mov
sub
pushf
mov
fisttp
inc
sahf
daa
(bad)
jne
out
daa
and
xlat
push
popf
rcl
fcom
leave
leave
enter
fst
in
leave
leave
sahf
(bad)
sti
xor
repnz
fs
fild
(bad)
jb
cmp
cmp
push
pop
push
jbe
punpckhdq
xchg
test
loopne
add
cmp
cmp
sbb
out
lock
dec
or
push
shl
push
jmp
call
rol
sbb
push
test
fs
mov
scas
inc
jne
mov
push
cwde
bound
xchg
sub
push
and
and
outs
sbb
movs
mov
dec
mov
push
pop
push
les
les
cmp
jbe
add
xchg
or
les
push
add
jne
push
cmp
fwait
cmp
push
call
xor
add
in
or
add
es
adc
add
fsubr
iret
jo
test
add
push
mov
jp
pop
jo
inc
push
and
push
add
mov
jae
pop
jb
push
mov
xchg
push
(bad)
shr
adc
dec
adc
fadd
in
cwde
push
xchg
jo
pop
add
dec
or
xchg
aaa
aam
push
in
sbb
(bad)
sub
in
fst
loop
xchg
mov
clc
push
inc
aaa
mov
dec
sahf
jge
push
sbb
add
dec
sbb
add
mov
outs
test
mov
xor
push
mov
mov
rol
fcom
daa
add
push
push
loopne
mov
jo
push
test
and
cwde
inc
rol
lods
es
push
and
add
les
sbb
cmp
adc
adc
push
add
dec
rcl
push
inc
mov
retf
inc
or
cmp
xchg
dec
xchg
lds
bound
pop
ins
lea
or
(bad)
add
add
add
dec
or
mov
or
pop
arpl
imul
add
adc
jl
xchg
push
inc
fwait
call
add
(bad)
xchg
icebp
lldt
rol
shl
mov
iret
mov
push
push
es
mov
sub
je
or
fs
sub
and
vmptrld
cld
sbb
inc
dec
ja
sub
int3
mov
or
loopne
mov
bswap
and
jnp
cmp
push
fidiv
mov
or
or
sti
add
sbb
sbb
push
test
adc
add
imul
inc
sub
das
mov
shl
movs
mov
add
stos
mov
sub
(bad)
mov
ror
push
lods
ret
(bad)
(bad)
fcos
jg
push
push
push
add
mov
mov
xor
mov
cmp
jo
dec
test
push
jl
inc
xor
and
bound
mov
mov
mov
pop
idiv
sbb
je
test
je
mov
mov
and
mov
inc
(bad)
mov
retf
mov
pop
pop
pop
pop
pop
pop
ret
nop
push
mov
push
(bad)
mov
mov
mov
test
push
jmp
pop
test
pop
or
and
test
in
cdq
jge
inc
cld
sub
(bad)
jne
test
jne
xor
jmp
fsubp
mov
sbb
adc
(bad)
fisttp
add
rcr
ret
sar
fild
push
jae
mov
mov
(bad)
sar
xor
dec
ins
add
sbb
or
mov
jae
(bad)
mov
and
jge
je
ins
shl
cdq
test
ret
rol
xor
jo
je
mov
push
cld
and
ins
pop
inc
out
xor
sbb
mov
ret
out
fstp
inc
jae
adc
mov
or
(bad)
mov
inc
add
js
mov
mov
in
dec
nop
cmp
cmp
clc
add
cmp
(bad)
sub
xchg
not
xchg
jae
aaa
shr
div
or
push
mov
movs
push
push
and
push
mov
jmp
(bad)
xor
fild
or
push
or
loopne
jne
pop
pop
pop
addr16
jo
pop
dec
adc
fs
or
inc
lock
mov
call
ret
loop
push
mov
push
mov
(bad)
adc
pop
jno
inc
ss
or
jl
inc
push
cmp
or
push
inc
dec
jne
pop
add
mov
add
arpl
jbe
hlt
xchg
xor
add
add
lea
xchg
dec
rol
pop
adc
or
mov
(bad)
dec
ret
jne
sbb
xor
add
leave
je
sub
fadd
lods
inc
fmul
aaa
or
iret
push
push
inc
in
sub
lock
mov
hlt
mov
fucomi
clc
adc
jl
sub
sbb
test
dec
add
mov
mov
in
arpl
rol
outs
pop
shl
sbb
rol
mov
ja
cmp
inc
and
xchg
popa
or
lods
ins
in
ss
pop
and
add
inc
and
push
ins
push
clc
mov
sbb
nop
pop
stc
in
lods
inc
andnps
adc
ins
add
data16
and
jl
dec
sbb
cmp
jne
imul
clc
sub
jmp
aas
lods
or
sbb
xchg
in
mov
add
rol
loopne
sbb
jb
mov
movs
shr
xor
sub
out
adc
ret
jmp
shl
cwde
movs
jne
in
imul
jno
xchg
mov
or
xor
fidivr
add
mov
mov
and
add
ja
or
dec
push
add
and
cmp
push
push
cmp
ins
cmp
in
rol
add
int3
in
je
fs
jne
popa
fidivr
cmp
jb
or
push
mov
call
inc
fcomi
jnp
xor
movs
mov
jb
jne
jb
or
sub
in
sbb
loop
adc
rol
sbb
(bad)
aad
in
push
imul
in
aad
xor
jb
cmp
jne
push
mov
adc
mov
push
jno
rcl
fnsave
push
in
sbb
rol
adc
jo
rol
fsubr
or
loope
sbb
adc
jmp
iret
loopne
shr
cdq
aaa
push
cdq
loopne
add
adc
ds
leave
dec
shl
cmp
jb
push
cmp
cdq
or
sub
pusha
sub
ja
sti
cmp
sbb
in
pop
fisttp
pop
cmc
daa
push
mov
mov
or
sbb
je
adc
test
inc
push
sbb
mov
aas
ror
ret
dec
cmp
inc
add
adc
jne
stc
xchg
(bad)
pop
loope
xor
fmul
rcl
or
jo
iret
push
add
dec
mov
call
mov
es
jae
lock
or
cmp
sub
dec
add
adc
call
(bad)
xlat
fwait
lock
xor
sub
movs
or
ss
(bad)
not
cmc
and
adc
or
rcr
xor
std
(bad)
xchg
cdq
and
ja
push
movs
adc
xchg
pop
aaa
jl
ret
out
test
jne
inc
xchg
aam
lds
jle
fdivr
push
push
sub
iret
lock
sbb
loop
leave
adc
test
adc
jp
rcl
fwait
sub
cmp
mov
clc
cmp
mov
test
or
retf
cld
dec
lock
in
cmps
or
xchg
push
data16
outs
mov
jae
scas
es
outs
pop
rcl
mov
inc
add
push
or
(bad)
test
sub
js
xor
shl
mov
jne
or
fwait
add
sbb
push
inc
jno
fs
(bad)
push
js
daa
sub
adc
or
(bad)
push
mov
push
scas
xchg
jge
or
loop
cmp
test
add
cmp
imul
xchg
push
outs
imul
dec
xor
inc
jne
or
or
and
rcl
aad
mov
jmp
sbb
sbb
addr16
jmp
mov
pop
jo
cmc
lods
into
fdiv
xor
arpl
repz
push
enter
mov
adc
rcr
push
and
add
dec
or
inc
clc
fmul
test
(bad)
adc
test
or
sub
rcl
jbe
das
or
fwait
add
jbe
out
adc
lea
push
push
icebp
xor
cmp
lods
adc
movs
mov
sbb
adc
bound
cdq
jbe
stos
out
test
mov
or
ins
mov
loopne
stos
sbb
sbb
call
sub
sub
(bad)
push
rol
test
and
imul
cmp
jl
sub
push
adc
aad
or
add
or
sbb
or
push
pop
push
add
fadd
(bad)
xchg
jmp
push
sti
ds
test
icebp
dec
sub
mov
mov
mov
add
and
repz
cmp
mov
inc
scas
loopne
inc
(bad)
lods
adc
lea
ss
pop
mov
setl
mov
cmp
add
or
sbb
jge
in
aad
cmp
rol
sbb
inc
movs
jl
or
cli
outs
mov
pusha
jnp
fucomip
dec
shr
adc
sbb
push
sbb
pop
call
xchg
pop
iret
clc
jns
out
dec
mov
mov
xor
or
mov
mov
(bad)
mov
cmp
and
movs
mov
mov
push
cmps
xchg
pushf
or
cmp
xor
mov
push
or
jge
out
cwde
push
add
xor
inc
jb
push
mov
push
mov
adc
xlat
test
push
push
sbb
aam
mov
(bad)
sub
ror
push
pusha
mov
dec
push
mov
mov
call
out
loopne
inc
or
sbb
enter
hlt
adc
add
frstor
xchg
ret
(bad)
loopne
fistp
scas
int
push
je
add
add
in
mov
jmp
icebp
fistp
sbb
xchg
cmp
push
shr
popa
(bad)
jbe
icebp
test
adc
clc
dec
pop
in
and
inc
icebp
dec
mov
in
dec
cmp
xchg
mov
movs
xchg
adc
cmps
inc
push
test
sbb
popf
mov
outs
in
and
stos
xor
add
mov
xlat
add
mov
mov
sub
push
daa
cmps
das
fcom
jl
mov
adc
push
push
aaa
sar
add
add
fdiv
push
sub
addr16
jns
outs
pavgb
add
dec
fs
jns
ins
xor
sub
lods
rol
mov
in
dec
push
or
jae
data16
sub
dec
call
fdivr
adc
adc
or
popf
inc
mov
and
pop
pop
lods
imul
pop
out
aam
mov
cmp
aas
add
sbb
pop
pop
adc
push
or
aad
cdq
test
cmp
add
addr16
ror
sahf
retf
push
adc
pop
ret
mov
pop
cld
das
or
jg
nop
sbb
pop
test
add
loopne
add
lea
add
(bad)
mov
js
fadd
cmp
add
pop
cmp
or
add
add
mov
add
(bad)
mov
movs
and
add
or
aam
inc
pop
sbb
xor
jg
neg
cmp
sub
jg
cmp
fmul
mov
xchg
add
ret
xor
aam
or
jo
lahf
bound
daa
mov
jb
or
sbb
or
pop
mov
jge
add
dec
xlat
add
push
jae
pop
xor
popf
add
xchg
pop
push
inc
pop
or
xchg
add
cmps
add
lods
pop
adc
push
call
pop
outs
push
daa
fisttp
leave
push
enter
pushf
bound
adc
inc
mov
sbb
push
popaw
jne
je
cmp
adc
sti
lock
jle
push
out
and
int3
hlt
stos
inc
add
fldenv
pushf
inc
xchg
or
sti
dec
inc
mov
mov
push
or
mov
pusha
add
adc
scas
or
fcomp
ins
lahf
mov
mov
mov
sub
int
dec
mov
loopne
pop
inc
push
sub
pop
xchg
mov
mov
adc
in
sbb
icebp
pcmpeqb
add
aas
mov
popa
outs
popa
clc
push
ret
pop
addr16
inc
rol
adc
add
adc
or
mov
xor
add
inc
jb
add
scas
gs
and
mov
cmp
add
int
aaa
pusha
ss
int
shr
push
movs
cmc
push
add
scas
adc
shr
pop
or
push
loope
push
mov
popa
xor
push
xlat
pop
sub
stos
loopne
hlt
or
out
dec
pop
and
push
inc
jmp
aam
sbb
sub
scas
adc
les
repnz
lods
jae
dec
dec
outs
ror
pop
and
xor
push
es
xchg
push
xchg
sbb
sti
hlt
xchg
dec
add
push
add
js
dec
out
mov
pusha
add
inc
cmp
mov
fsub
js
or
ins
cmp
xor
outs
pusha
xor
sti
sub
sbb
or
loope
push
push
xor
cmp
pop
sbb
mov
stos
xchg
xor
imul
xchg
cld
jnp
in
in
xor
or
push
jl
es
xchg
push
sub
imul
pop
ins
ret
and
push
mov
add
push
push
fwait
daa
fs
scas
test
add
mov
xchg
inc
xor
adc
pop
arpl
jg
int3
inc
and
aad
sub
out
stos
add
test
add
add
push
das
pushf
xchg
(bad)
punpckhdq
retf
push
or
or
inc
or
mov
jge
mov
sahf
pushf
mov
add
dec
inc
push
jnp
in
daa
and
add
out
xchg
xchg
daa
xor
jl
leave
leave
enter
add
leave
leave
pop
adc
dec
mul
in
jae
into
pop
pop
aas
mov
pushf
fisttp
popf
outs
iret
pop
cld
ret
jo
xchg
fdivrp
push
hlt
clc
mov
es
adc
cmps
lds
mov
jle
add
dec
or
fdivr
add
cmp
mov
shufps
test
ror
jae
pop
sbb
mov
sbb
sub
xchg
ss
mov
dec
mov
dec
jae
mov
int
retf
sbb
inc
push
popa
jg
bound
sub
mov
enter
xor
test
inc
fs
sar
inc
sub
ins
jne
iret
adc
or
es
xor
push
mov
add
in
outs
sub
cmp
add
mov
xor
add
test
in
mov
add
enter
(bad)
rol
scas
adc
add
push
sub
mov
dec
push
mov
xor
leave
call
and
and
addr16
add
popa
arpl
xor
inc
lds
or
loope
dec
jae
imul
xchg
push
add
dec
jmp
ret
jno
mov
inc
jne
repnz
imul
add
lea
add
fs
push
xlat
bound
jle
dec
mov
ss
sbb
pusha
xor
mov
sbb
aad
xor
xchg
popa
add
out
dec
add
or
xchg
in
dec
rol
(bad)
adc
into
dec
adc
ret
and
dec
gs
or
jo
xor
(bad)
push
inc
jae
fcmovnbe
push
in
push
and
add
popa
inc
nop
cmp
popa
add
push
lock
add
cli
jo
jo
call
mov
jo
je
imul
ins
loopne
inc
adc
dec
mov
push
push
hlt
push
jbe
sar
add
push
or
daa
add
adc
mov
adc
dec
scas
xchg
mov
fsub
(bad)
adc
xor
(bad)
dec
cmp
mov
or
ret
dec
or
add
sbb
adc
jb
imul
popa
pop
add
or
xchg
xor
fadd
test
clc
hlt
iret
dec
mov
push
jb
ins
test
cmp
cwde
pusha
or
cmp
xchg
dec
xchg
sub
popf
popa
sub
(bad)
push
mov
fsubr
jmp
and
inc
add
imul
inc
dec
or
xchg
and
xlat
push
mov
mov
bnd
pop
or
sbb
adc
add
sbb
jo
or
jecxz
mov
dec
arpl
jns
add
sahf
xor
(bad)
fadd
jnp
imul
(bad)
pop
loopne
(bad)
(bad)
mov
sbb
or
daa
adc
adc
jo
out
js
dec
push
mov
xor
pop
rcr
inc
scas
out
arpl
add
inc
inc
jne
ins
imul
push
out
mov
cmp
fisub
sbb
(bad)
pop
mov
leave
int
jo
push
cs
and
xchg
fs
mov
xor
push
mov
add
dec
xor
dec
aad
mov
inc
pop
(bad)
in
adc
aam
xor
sbb
sahf
or
or
cmp
out
and
sbb
xor
dec
aaa
les
dec
lds
xor
or
jno
mov
mov
mov
add
fiadd
sub
or
pop
sbb
dec
dec
out
mov
adc
dec
sar
and
mov
or
or
push
xchg
jo
cmp
fsubr
stc
or
out
(bad)
push
retf
outs
add
cld
bound
out
jl
shl
outs
ror
sbb
and
mov
jae
mov
xor
push
push
xor
mov
ror
and
mov
js
jne
mov
ins
or
data16
cmp
inc
push
mov
js
ror
clc
mov
loopne
mov
sub
push
rol
xor
(bad)
scas
(bad)
fcomp
and
das
lock
or
mov
sti
fwait
std
(bad)
cmp
jne
mov
jmp
test
je
test
push
mov
adc
push
or
push
fcomp
xchg
sar
mov
inc
or
mov
dec
cld
mov
jmp
add
dec
jne
rcl
pop
int3
adc
into
(bad)
fsub
out
clc
iret
inc
mov
mov
idiv
mov
cld
cmp
jne
mov
(bad)
mov
dec
mov
pusha
mov
dec
jne
sub
movzx
ins
cwde
add
fiadd
and
fs
mov
push
mov
sahf
call
int3
test
mov
(bad)
mov
pop
inc
cmovle
inc
(bad)
in
jg
inc
or
add
fidiv
loope
push
and
xchg
movs
jmp
sbb
sbb
mov
mov
inc
mov
fsubr
add
pop
add
cwde
das
mov
sbb
fcom
scas
sub
xchg
push
jle
xchg
jne
pmuludq
mov
cmp
jmp
pop
fiadd
ret
adc
mov
inc
jo
int
add
jge
pop
je
cmp
jo
pop
pusha
je
dec
inc
sub
sbb
dec
pop
fisttp
jnp
(bad)
adc
add
adc
mov
cmc
or
add
fwait
add
inc
adc
ucomiss
fild
mov
into
or
inc
and
sbb
sbb
or
add
out
sbb
fimul
jae
ror
xor
inc
add
push
outs
mov
pop
fsubr
cli
push
jg
push
xor
mov
out
sbb
xchg
setbe
into
or
das
xor
loopne
add
mov
push
es
xor
stos
add
imul
jo
inc
int
add
aaa
push
xor
stos
and
retf
mov
aaa
shl
aad
inc
out
pop
loopne
pop
inc
adc
scas
movs
add
into
wrmsr
pop
aad
sub
inc
inc
push
scas
xor
push
test
pop
mov
lock
adc
aas
das
push
push
add
adc
in
jle
mov
shl
mov
mov
(bad)
lock
push
ror
ss
loopne
sbb
popf
cwde
cli
aaa
push
xchg
inc
in
lods
femms
push
pusha
daa
popf
fcomp
sub
loope
sub
je
or
aaa
jmp
test
jl
mov
fcomp
call
rcr
mov
(bad)
sbb
inc
popa
ret
cmp
xchg
neg
push
xor
in
xchg
push
and
pusha
push
ins
push
popa
ret
mov
cmp
inc
mov
pop
xor
imul
cmp
repnz
sbb
sqrtps
xor
push
pushf
fsub
js
xor
fs
dec
dec
inc
sahf
adc
pop
mov
dec
ds
bound
daa
sbb
dec
cwde
leave
leave
enter
and
fs
leave
shl
sbb
aas
repnz
in
lods
stc
xor
jbe
jb
pop
jle
(bad)
aas
test
loopne
pop
js
push
out
jecxz
cmps
sbb
sahf
sub
mov
stos
add
test
cmp
xor
pop
dec
sbb
cmp
dec
mov
mov
inc
mov
xor
mov
inc
xor
mov
dec
and
int
rol
jg
int
pop
enter
inc
scas
sbb
cmp
ins
and
scas
sbb
test
test
jp
outs
or
ror
pop
add
push
mov
or
cwde
jbe
pusha
mov
int
sub
sbb
repnz
fwait
xchg
ror
pushf
and
push
aam
xchg
nop
ins
mov
adc
gs
mov
int
xor
inc
inc
(bad)
xchg
pop
xor
sahf
sar
shr
rol
aam
jno
or
int
add
mov
int
push
aam
push
data16
push
shl
test
xlat
mov
mov
add
xchg
push
and
aam
jae
movs
push
mov
int
cmp
adc
or
mov
push
or
cmp
or
mov
add
and
dec
int
sub
inc
nop
int3
loopne
mov
jmp
jle
pop
push
cmp
add
push
adc
push
scas
and
fcom
mov
bound
mov
add
push
lock
add
js
add
test
inc
dec
mov
and
jge
inc
push
xor
push
mov
add
int
add
jo
adc
inc
adc
int
mov
push
aam
mov
popf
popa
loopne
sub
push
sub
mov
push
call
xor
xchg
xchg
inc
push
xchg
int
test
int
sub
sbb
(bad)
sbb
and
out
enter
sub
add
sub
aad
cmp
push
in
shr
cwde
inc
xchg
sub
sbb
inc
outs
or
push
adc
cmp
fst
mov
xchg
mov
mov
(bad)
mov
test
jge
pop
mov
ret
nop
add
dec
mov
mov
popa
jg
lock
cmp
pop
ins
jmp
xchg
sbb
test
mov
mov
call
mov
push
loopne
call
nop
int
std
mul
sbb
or
sub
bound
and
rcl
div
xchg
push
ins
dec
push
(bad)
loopne
pop
add
push
or
adc
or
das
dec
dec
push
xor
inc
mov
test
cmps
push
mov
push
cwde
shl
mov
mov
aaa
test
lahf
ds
or
push
xchg
lahf
cmp
adc
jg
add
(bad)
lock
jo
fild
adc
das
shl
loopne
mov
add
dec
adc
inc
pop
daa
fild
fcomp
mov
(bad)
pop
arpl
xchg
or
xor
push
fisub
fcom
xchg
cmp
xor
leave
sub
out
mov
int3
pop
mov
mov
repnz
pop
add
xlat
jmp
cmp
das
cmps
add
push
push
out
or
mov
mov
dec
push
mov
rol
pop
ret
sar
push
aad
push
add
mov
std
test
cmp
add
dec
inc
sub
mov
xchg
or
imul
dec
test
pop
in
loopne
loopne
fldcw
cwde
sub
push
mov
cmova
movsx
inc
or
xor
and
add
cmp
mov
daa
adc
jae
push
add
aas
imul
test
inc
aas
data16
stos
add
inc
xor
pop
jl
adc
(bad)
call
aas
(bad)
retf
inc
sub
mov
mov
add
and
push
xor
movs
adc
adc
int
add
add
int
add
adc
push
push
and
and
push
push
or
hlt
sbb
pop
sub
scas
jmp
movs
out
movs
inc
loopne
dec
outs
jmp
sub
mov
ficomp
das
out
xlat
cmp
add
mov
push
push
sub
add
test
clc
add
add
movsx
in
sbb
mov
fcomp
push
loop
push
(bad)
push
popf
dec
dec
xor
push
xchg
pusha
sub
lock
pusha
xchg
pop
or
sub
sbb
or
and
xor
add
sbb
push
add
mov
push
cwde
jmp
test
pop
xor
call
in
cmps
push
mov
hlt
adc
stos
aaa
sub
ror
wbinvd
lods
push
aaa
lods
sbb
ror
imul
loopne
aaa
inc
mov
mov
and
jbe
or
out
ss
xor
mov
adc
enter
dec
(bad)
xlat
and
leave
jae
int3
add
repnz
fs
or
cmp
jb
push
cwde
loopne
cmp
cmp
sbb
dec
je
pushf
mov
loope
cmp
fistp
xor
psubsw
jae
shr
sbb
stos
fsubr
xor
fld
sub
push
xchg
push
bsr
add
jbe
or
inc
inc
and
cs
adc
arpl
imul
xor
je
cmp
imul
jg
adc
jle
dec
add
imul
adc
mov
imul
or
add
add
imul
imul
out
or
adc
jno
or
cmp
add
lods
xchg
or
das
inc
fwait
sbb
imul
scas
mov
mov
add
and
adc
and
scas
sbb
add
mov
add
push
adc
popa
inc
push
jo
imul
and
add
adc
sub
jae
push
push
xor
adc
adc
xchg
imul
xchg
aam
imul
(bad)
push
dec
ins
shl
imul
sub
and
popa
mov
imul
aaa
add
and
push
and
sbb
ins
imul
sbb
imul
cmp
jo
mov
lds
out
daa
add
and
fmul
xchg
cmp
jge
js
nop
pop
bound
(bad)
or
ror
imul
imul
push
and
dec
add
push
mov
pusha
imul
xor
add
push
sub
sub
mov
pusha
(bad)
fdivr
jge
pusha
rcl
test
imul
inc
push
cmc
(bad)
stos
dec
imul
cdq
xor
xchg
xchg
pop
add
push
or
add
pop
cdq
in
or
cld
push
cdq
lods
inc
loopne
sub
cdq
push
mov
lahf
cdq
sub
aaa
imul
in
add
neg
fstp
sbb
rol
and
fdivr
mov
sbb
mov
call
add
not
or
loopne
pop
popaw
mov
jl
inc
xor
mov
and
inc
or
call
inc
dec
jne
(bad)
sbb
retf
pop
add
fbld
mov
push
or
outs
ret
mov
cmp
adc
xor
mov
pop
xchg
fdivr
test
push
push
(bad)
push
push
fisttp
xchg
xor
cmp
add
mov
cmp
je
push
rol
jp
add
movs
pop
mov
push
cld
and
sti
mov
mov
or
dec
cld
pop
push
lock
clc
push
and
fcom
sub
lea
mov
xchg
adc
mov
rol
pop
scas
mov
je
imul
and
movzx
and
add
mov
add
cmp
sete
cmp
mov
sub
in
fisubr
cmps
cmp
mov
push
jno
inc
not
in
fmul
xchg
sub
add
xlat
js
inc
push
jbe
out
in
aas
test
sbb
pusha
sti
out
movzx
std
arpl
popf
fiadd
(bad)
mov
mov
push
xor
jg
icebp
sti
rol
mov
call
or
pop
sbb
xor
push
cmp
sbb
out
ins
cmp
mov
cdq
jge
push
fdiv
nop
jg
stc
fdivr
inc
icebp
loope
fwait
or
adc
mov
mov
inc
test
cmps
jnp
pop
dec
push
enter
das
rcr
xor
lods
or
clc
or
clc
and
mov
xor
hlt
pop
ret
mov
fs
push
bound
sti
dec
in
adc
and
cmp
jne
cmp
pop
pop
jne
cmp
jle
popa
sbb
push
push
inc
add
add
inc
test
sbb
add
jmp
mov
dec
(bad)
in
arpl
fmul
faddp
mov
cmp
cmp
inc
sbb
in
cmps
sub
in
push
jae
xor
rcl
mov
mov
pop
fs
pusha
sub
mov
cmps
push
pop
push
push
push
sar
and
lahf
ret
call
ret
adc
fidivr
or
mov
sar
cli
mov
jae
loop
sbb
inc
add
cmp
inc
test
je
(bad)
lahf
fisub
add
xor
mov
inc
sbb
push
mov
adc
jnp
pop
ret
adc
jl
mov
rol
jl
mov
mov
pop
xor
lock
mov
enter
sbb
btc
leave
add
lea
or
add
nop
inc
rcr
mov
add
movs
cli
xchg
lock
cmps
call
mov
hlt
stos
repz
xchg
lock
xchg
add
inc
nop
enter
jp
add
nop
outs
in
push
inc
test
scas
mov
jnp
js
xor
push
mov
sub
pushf
dec
in
lods
std
jg
pop
mov
aad
in
cmps
icebp
xlat
add
xchg
and
cs
pop
add
lds
or
call
ss
push
mov
mov
push
lds
das
push
aaa
add
mov
jb
pop
idiv
mov
xchg
adc
adc
mov
(bad)
(bad)
cmp
inc
jle
mov
test
jns
add
sar
jmp
and
iret
cli
add
add
push
loop
mov
in
int3
dec
and
in
mov
inc
xor
cmp
je
jo
inc
dec
jne
or
clc
out
(bad)
pop
push
test
jne
bound
pop
xchg
lock
in
sbb
lea
xchg
adc
mov
hlt
jmp
push
repz
call
outs
jle
aam
or
movs
cli
adc
(bad)
push
cwde
or
add
mov
jle
mov
inc
inc
stos
inc
xchg
cld
sbb
inc
add
cmp
ficomp
sbb
js
cmp
je
ffree
jge
and
sar
xor
adc
xor
pop
not
(bad)
dec
xor
clc
je
pop
cmp
mov
dec
mov
or
add
pusha
lock
xor
push
add
mov
js
mov
push
ins
adc
js
add
sahf
jmp
inc
(bad)
or
cs
push
sub
or
div
(bad)
add
pop
or
inc
add
cmp
sub
data16
sbb
mov
cs
cmp
mov
cmp
jge
sbb
outs
(bad)
sbb
add
or
ret
sar
test
outs
or
cmps
sub
jo
pop
jge
jo
sbb
je
push
(bad)
hlt
mov
mov
mov
cmc
lods
xor
shl
push
int3
jno
test
jle
jo
inc
adc
pop
jle
xchg
lods
call
sub
mov
rol
xchg
add
dec
aas
scas
xor
add
cld
sub
jg
dec
mov
scas
mov
and
nop
in
call
not
dec
inc
mov
pop
xlat
and
push
scas
push
inc
loopne
out
add
inc
fadd
lahf
cmp
(bad)
addr16
jge
pop
pop
xor
jne
or
push
clc
add
add
and
shr
add
adc
or
jo
imul
jb
jmp
push
das
jg
cmp
jl
push
je
cmp
cmp
dec
cld
push
cdq
or
mov
dec
cmp
cmp
jle
shl
test
xor
loope
cld
or
or
mov
xor
add
outs
inc
push
std
scas
push
sbb
fnstsw
push
mov
shl
pop
test
sub
and
xor
and
and
outs
je
push
jo
push
push
int
inc
or
push
int3
add
mov
loope
in
lods
adc
(bad)
adc
jno
idiv
pop
int3
leave
(bad)
push
ffree
add
pusha
cdq
stos
add
cs
add
push
je
scas
push
xlat
pop
ja
add
add
add
mov
call
nop
lea
js
(bad)
test
add
dec
bound
inc
ret
xchg
enter
das
add
adc
push
gs
pop
aaa
pop
or
sub
push
cmc
pop
pushf
lods
push
ret
int3
or
test
pushf
aaa
xchg
rcl
cmp
sbb
int3
lock
outs
in
cli
and
shl
jmp
sar
out
mov
add
test
sub
push
test
jp
adc
mov
addr16
lock
jle
or
dec
adc
or
adc
ins
mov
out
cmp
add
pshufw
movzx
pop
push
jge
or
sub
or
dec
adc
or
add
mov
nop
(bad)
sahf
sbb
sub
mov
or
in
sbb
cld
cmp
loopne
add
jg
inc
ret
mov
push
dec
nop
fwait
iret
repz
cmc
in
sbb
jge
adc
xor
xlat
inc
(bad)
sub
mov
mov
fistp
jo
cmp
add
inc
inc
and
pop
jle
cmp
pop
sbb
inc
push
or
add
gs
sub
xor
xchg
jmp
jmp
mov
adc
jle
jne
repz
js
rol
pop
int
(bad)
jno
loopne
mov
jl
iret
adc
imul
mov
es
cdq
or
loopne
popf
pop
or
pop
or
(bad)
outs
enter
add
or
lods
out
movs
xor
shl
adc
or
das
add
add
cs
(bad)
or
mov
imul
jg
or
or
cmp
jl
xchg
shr
dec
pusha
cwde
push
repnz
dec
mov
inc
mov
ret
push
imul
mov
add
mov
dec
xor
adc
or
loop
ins
adc
jno
jns
clc
or
cmp
in
jge
sti
sbb
jbe
jae
fs
pop
jmp
out
nop
fucompp
add
js
std
cmp
pop
sti
movs
or
pop
lods
jmp
xchg
test
jne
mov
push
mov
add
inc
pop
mov
test
add
add
dec
push
jb
retf
xchg
push
or
push
icebp
adc
pop
ds
fnstenv
vmwrite
inc
add
inc
pop
movntq
mov
dec
cld
idiv
int3
mov
call
cmp
std
xchg
lods
adc
iret
in
push
xchg
jecxz
and
cmps
add
cmp
test
mov
fiadd
adc
mov
push
inc
sub
cmp
sar
hlt
int3
enter
adc
inc
and
lahf
hlt
or
lock
xor
push
sub
xchg
lea
stos
mov
scas
(bad)
rol
mov
and
push
xchg
pop
pop
adc
mov
mov
je
repnz
or
push
xchg
pop
popa
dec
adc
sbb
cli
sbb
enter
push
or
fdiv
cwd
cmp
or
sar
jmp
test
cmc
sbb
push
add
scas
add
add
sbb
lods
inc
xor
or
xor
ss
mov
mov
or
mov
popf
xor
cld
jg
stos
push
sbb
cmp
adc
xlat
outs
rol
dec
cmp
xor
(bad)
inc
stc
mov
fld
or
ror
test
add
loop
je
xchg
outs
pop
out
pop
cld
push
xchg
pop
mov
push
enter
call
call
sbb
push
inc
cmps
popa
aam
sbb
dec
pusha
js
stos
aas
and
cmp
xor
cmps
fs
aaa
fs
mov
mov
sbb
sub
out
fs
jmp
inc
lock
cmp
loope
repz
(bad)
add
mov
test
lds
(bad)
(bad)
fcomp
mov
aaa
push
mov
pop
arpl
xchg
push
movd
leave
cmc
bound
fs
jnp
and
ret
add
fs
shr
push
jae
add
sbb
je
int3
mov
and
mov
lea
pop
or
dec
sbb
sbb
and
(bad)
mov
cmps
inc
in
ja
pop
nop
cmp
dec
cmp
jle
mov
std
cmp
scas
add
imul
ror
sub
jb
dec
cmps
xor
lods
shl
cmp
fnsave
and
aad
xor
add
stos
cmps
xchg
cmp
fild
xor
outs
outs
add
ret
dec
inc
clc
adc
push
or
stos
jb
xchg
push
outs
mov
clc
scas
cld
jbe
adc
xchg
pusha
cmp
sar
test
cli
add
push
ins
add
test
test
mov
aad
pop
scas
dec
mov
rcr
clc
add
(bad)
and
dec
or
inc
add
dec
test
retf
jns
ret
add
cmp
inc
push
shr
enter
and
ret
aam
fwait
add
mov
add
add
out
je
test
pusha
cs
(bad)
push
out
test
js
lock
sbb
add
pusha
test
je
cmp
xlat
mov
das
cmps
pop
cmp
push
add
fcompp
aad
pop
xchg
push
lods
nop
mov
call
test
nop
pop
cld
jp
leave
je
stos
adc
btr
cmp
pop
outs
mov
nop
push
push
inc
sbb
jmp
ret
icebp
jg
or
or
pop
bt
sbb
and
inc
rcl
sbb
pop
add
mov
dec
inc
push
adc
push
mov
pop
push
adc
je
sbb
sbb
xchg
cli
pop
ja
and
call
fld
mov
movs
jg
push
push
add
ret
adc
push
mov
dec
std
inc
cmp
jne
inc
call
cmp
imul
and
shl
shr
adc
nop
add
xchg
test
mov
mov
call
pop
cld
dec
call
or
or
or
stos
hlt
ja
push
mov
jmp
push
mov
sti
mov
cmps
in
mov
inc
call
or
nop
inc
hlt
es
ret
lods
mov
mov
adc
mov
movs
scas
fst
lahf
push
cwde
push
call
mov
pop
aaa
xor
mov
add
push
data16
outs
add
ins
push
test
aaa
pop
jg
add
sti
sbb
ret
mov
or
jb
sbb
mov
jmp
inc
test
jne
push
aaa
fdivr
sahf
ss
sub
xor
add
mov
cs
mov
push
pop
add
mov
and
outs
rcl
enter
xchg
int3
outs
sub
rcl
add
or
sbb
hlt
cmp
ficom
stos
xchg
push
mov
sub
loop
dec
shr
push
mov
sbb
dec
xor
xchg
pop
push
rcr
sbb
push
or
mov
dec
sbb
sub
not
call
pusha
mov
mov
adc
cmp
and
jne
add
push
inc
adc
test
je
mov
push
push
pop
mov
int3
mov
xor
sbb
mov
adc
dec
sar
pop
call
rcl
stos
mov
dec
mov
mov
ds
adc
sbb
(bad)
xor
bound
test
(bad)
xchg
adc
jmp
mul
lahf
xchg
jg
inc
add
pushf
add
or
rcr
shl
push
inc
jb
sbb
dec
adc
sbb
call
xchg
movs
push
mov
clc
and
fst
inc
jno
xor
cmp
jle
push
or
in
or
scas
dec
add
lds
cmp
adc
or
sar
(bad)
sub
mov
adc
adc
or
mov
retf
shl
and
push
je
pop
push
ret
fwait
sbb
shl
dec
cmp
add
cmp
mov
mov
cs
mov
or
jne
add
or
add
inc
and
or
ins
xchg
sar
pop
xlat
push
mov
dec
mov
pop
dec
out
or
pop
and
push
cmp
je
jp
scas
aam
xchg
ret
ds
push
test
add
movs
sbb
pop
xchg
pop
add
outs
pop
push
add
push
lods
cmp
cmp
rcl
pop
mov
and
test
enter
ins
movs
inc
cmp
loopne
rcr
stos
dec
mov
xchg
inc
or
jmp
sar
or
sti
lea
xchg
daa
rcr
and
cs
dec
mov
or
xor
(bad)
pop
jge
dec
addr16
ins
adc
xor
fnstsw
xchg
adc
in
lea
call
jl
cmp
xor
movs
sbb
cli
jnp
jg
es
test
inc
xor
sbb
or
push
clc
out
addr16
out
cld
push
hlt
pop
std
or
jne
ret
jecxz
mov
cmp
movs
mov
cwde
xor
pop
jnp
add
xor
pop
jno
or
push
jle
jno
bound
rol
scas
je
adc
jae
imul
mov
pop
add
sub
les
hlt
jmp
cdq
xchg
fwait
sbb
sbb
mov
push
mov
pusha
add
iret
js
push
jle
gs
pop
push
in
dec
lock
mov
push
xchg
or
mov
xor
shr
push
scas
addr16
inc
popa
add
mov
ret
jae
inc
jle
pop
and
push
push
nop
mov
push
pop
loop
movs
push
aaa
xor
jp
push
inc
mov
(bad)
loope
jecxz
call
or
pusha
xor
pop
sbb
sbb
push
pop
pop
ins
or
shl
shl
ror
push
adc
mov
adc
push
adc
fwait
inc
mov
or
and
xchg
sub
test
leave
and
pop
or
mov
pushw
inc
lahf
dec
adc
movsx
fsub
xor
jge
mov
add
pop
jae
dec
sbb
adc
push
or
les
pop
jne
sbb
push
sbb
int
cmp
inc
inc
pusha
lock
and
mov
sbb
call
lods
inc
add
(bad)
pop
add
cmc
pushf
arpl
or
xlat
(bad)
sbb
xchg
xchg
mov
jo
adc
lahf
mov
dec
mov
mov
call
outs
mov
or
test
sub
add
mov
fwait
sbb
sar
push
adc
inc
jae
push
fisttp
ins
iret
cmp
repnz
mov
lock
push
or
out
pop
jmp
fld
sbb
inc
add
lea
cs
cmps
mov
sub
cmp
jae
aam
out
test
dec
sub
sbb
rol
xchg
dec
sar
dec
sub
xchg
push
rcr
xchg
adc
push
jmp
jmp
leave
je
or
daa
pop
les
cwde
adc
adc
adc
dec
xlat
push
pop
stc
cmp
push
test
sub
loopne
sbb
push
inc
and
or
push
add
fadd
stc
jo
popa
mov
test
test
push
ss
fbld
push
pushf
ja
div
add
fdiv
js
add
inc
inc
fmul
or
inc
sbb
xor
pop
dec
out
jo
js
adc
imul
mov
cmp
or
rol
sbb
icebp
and
fs
mov
inc
inc
ret
test
mov
call
xchg
xor
pop
mov
faddp
add
mov
mov
dec
ins
addr16
push
mov
iret
xchg
sub
cli
or
mov
jnp
test
sti
mov
dec
add
pop
pop
xor
aad
mov
inc
push
(bad)
pop
addr16
add
pushf
mov
scas
jae
cmp
cmp
cmp
pop
or
inc
out
rcl
cli
imul
call
xlat
fdivr
xor
push
idiv
sahf
adc
out
arpl
(bad)
xor
inc
inc
mov
dec
imul
hlt
cmps
push
jmp
rol
les
inc
inc
sub
ficom
dec
add
jge
fadd
call
adc
xchg
inc
fsubr
sbb
pushf
cmp
je
pop
mov
mov
cmc
mov
jle
loope
mov
push
cld
lahf
inc
add
mov
shl
movzx
cmps
mov
mov
adc
adc
test
or
sbb
adc
or
retf
sub
xchg
cwde
inc
cs
and
icebp
scas
inc
icebp
dec
mov
and
jne
aaa
push
aad
xor
movs
out
shl
nop
lods
jo
inc
mov
xchg
mov
stc
je
mov
test
jmp
adc
jmp
and
cmp
cmps
enter
inc
sbb
js
jbe
addr16
push
cmp
test
and
test
mov
js
das
pop
(bad)
pop
(bad)
(bad)
push
pusha
add
outs
add
rcr
bound
jle
mov
mov
push
add
or
sbb
mov
mov
jmp
jne
pusha
ins
xor
arpl
(bad)
pop
jmp
enter
or
shl
in
rcl
(bad)
or
daa
dec
call
pop
dec
je
jmp
repnz
and
ror
outs
dec
aam
lods
cmps
call
push
test
fs
mov
adc
push
(bad)
int
add
adc
cmp
mov
ret
scas
sub
pop
mov
add
sbb
dec
retf
mov
sbb
xor
fst
out
popf
arpl
nop
xchg
xor
inc
mov
or
lock
mov
or
fidivr
pop
les
repz
mov
xchg
push
outs
ret
push
sub
xor
or
push
pop
pop
pushf
mov
push
ror
test
mov
sbb
pop
mov
ror
xchg
fsubr
ja
out
jnp
or
xchg
rol
sbb
fcomip
out
mov
inc
or
inc
adc
sar
test
mul
sub
add
scas
xor
and
scas
dec
inc
bnd
pop
je
mov
adc
cmp
push
mov
jge
pushf
adc
in
sti
mov
shl
push
or
jno
dec
push
and
adc
lods
cmps
add
enter
scas
dec
sbb
dec
jno
ins
sbb
icebp
sti
add
in
adc
cmp
xchg
jo
data16
jne
ret
jbe
and
sub
or
xor
cs
push
xchg
cld
vcvtdq2ps
or
ficomp
fsubr
push
push
xor
cwde
mov
xchg
aas
std
sar
mov
pop
lea
(bad)
sbb
xor
jo
pop
repnz
add
stos
sub
add
mov
sti
jl
lea
jl
in
loopne
jbe
cmovbe
mov
dec
out
movs
adc
rcr
push
ss
mov
(bad)
mov
(bad)
cmp
and
ret
jmp
pop
ror
mov
or
fadd
cmp
ja
jl
mov
adc
hlt
jae
cmp
loope
xchg
and
sub
sbb
mov
sti
add
ins
fldenv
and
rcr
call
jne
or
mov
clc
loop
dec
bound
mov
outs
jo
ja
test
mov
iret
push
fld
pop
adc
cmps
mov
repz
cmp
adc
sahf
add
dec
and
out
loope
push
ficom
in
cmp
add
enter
pop
neg
or
icebp
(bad)
dec
dec
push
inc
cmp
loopne
push
jmp
ror
inc
aaa
retf
movs
push
push
push
scas
push
push
inc
dec
cmp
dec
aaa
mul
test
js
js
scas
pop
adc
sub
add
push
fmul
xor
lods
lock
leave
xor
jl
xchg
jae
push
mov
in
inc
mov
and
mov
ss
add
xor
fdiv
(bad)
or
inc
fadd
clc
add
add
push
in
dec
jne
imul
pusha
add
push
xchg
pop
loopne
ins
jb
(bad)
dec
cmp
jb
js
mov
add
retf
add
inc
ins
int
fsubr
xor
mov
adc
dec
adc
sbb
pushf
popa
call
in
lahf
aas
jecxz
loope
mov
addr16
(bad)
loope
cmp
pop
je
inc
fdiv
std
jl
cmp
call
cmp
loopne
iret
push
add
dec
lahf
xchg
fwait
mov
push
fsub
mov
pop
sbb
sbb
int3
dec
movs
adc
push
inc
xchg
fcom
xchg
clc
mov
in
sbb
sbb
outs
or
sub
fcom
push
inc
or
cmp
scas
(bad)
in
push
and
add
add
call
add
rol
xor
xor
mov
pop
adc
test
push
stos
mov
push
jno
sbb
(bad)
pshufw
mov
les
outs
sbb
jecxz
push
or
loope
and
rcr
aaa
fimul
and
ja
call
test
jo
or
(bad)
push
sub
fdivr
mov
inc
push
mov
dec
ret
or
pop
and
xchg
outs
push
retf
jl
pushf
adc
pop
ret
pop
add
jbe
or
out
sbb
cmp
inc
mov
sahf
pop
stos
and
in
pop
scas
xchg
adc
sbb
js
sub
cdq
and
popa
mov
test
jmp
lods
les
jg
and
les
push
jg
ja
pop
and
mov
adc
pop
add
sub
push
cmps
mov
pusha
inc
mov
lods
xor
inc
sub
sbb
xor
mov
mov
cmc
adc
xchg
xchg
into
out
ss
push
and
cmp
inc
lock
add
jmp
fcom
and
cmp
xor
lock
inc
mov
adc
cmp
je
inc
mov
xchg
xor
pusha
repnz
xor
lds
and
rcl
pop
test
fwait
js
aas
out
ret
push
mov
jnp
push
jo
cmp
adc
or
retf
icebp
pushf
mov
pop
jns
lahf
cmp
lock
inc
out
cs
aaa
cmp
push
lahf
jmp
sbb
push
(bad)
mov
ja
adc
fimul
push
gs
scas
int
add
dec
outs
jno
push
sub
lds
xchg
test
xor
push
sub
fdivr
(bad)
out
xor
fild
pop
mov
daa
pusha
int3
and
jo
add
sahf
mov
in
jp
pop
push
popa
hlt
jne
mov
cmps
or
adc
add
jnp
add
add
sub
adc
xor
or
daa
adc
sbb
cld
scas
cdq
or
fcom
xor
test
mov
cdq
lock
mov
push
cmp
iret
lea
sbb
xlat
pop
jnp
icebp
out
or
xlat
outs
mov
cld
pop
and
and
(bad)
or
pop
or
lea
ret
fnsave
xor
lds
or
and
and
out
sub
jecxz
sub
mov
sub
jmp
cmps
push
jne
xor
data16
mov
jmp
loope
push
out
sbb
cmp
xor
push
jmp
mov
lds
add
(bad)
ja
je
or
jne
mov
sub
sar
jns
rol
or
lds
test
cmp
or
arpl
loope
add
jmp
cmp
fs
mov
ins
pop
jmp
loopne
push
jp
and
mov
add
add
jl
mov
cmp
jne
or
sbb
fdivr
mov
mov
ror
add
aad
or
jmp
inc
xor
or
outs
stos
lds
test
mov
lods
jo
aaa
sub
inc
sbb
or
imul
add
add
push
and
sahf
adc
xor
cmp
add
rol
fst
add
xchg
das
in
imul
fbstp
pop
dec
or
xor
and
test
sbb
clc
push
inc
inc
mov
imul
push
inc
cs
adc
add
jne
or
lea
add
add
dec
sub
or
leave
test
test
adc
xchg
sbb
inc
xor
stos
hlt
shl
js
jb
sbb
test
test
cmp
jne
sbb
rcl
aaa
add
add
xor
adc
lahf
outs
jb
outs
inc
cmp
add
cmp
ja
add
dec
and
fsub
test
mov
jo
xor
and
pop
mov
cwde
fcomp
or
or
pop
xor
xor
loop
loope
inc
push
(bad)
push
dec
fldenv
lock
(bad)
mov
jne
sub
jno
rol
fistp
cmp
(bad)
mov
inc
lahf
aas
lods
inc
push
or
sub
scas
(bad)
scas
nop
outs
mov
inc
sbb
or
inc
loopne
clc
movzx
or
outs
test
jo
loop
and
je
jae
rol
sbb
or
lods
shl
push
mov
or
data16
(bad)
iret
rcr
leave
(bad)
iret
add
add
out
xor
mov
cmp
fimul
push
(bad)
push
mov
sub
es
rol
lock
xor
add
aas
pop
faddp
ror
ss
sub
xor
mov
mov
lock
ja
scas
cmp
and
out
sbb
dec
mov
jg
cmp
popa
or
rcr
push
test
add
and
jl
pop
(bad)
xor
cmp
je
sub
es
(bad)
enter
cmp
sbb
and
inc
sub
(bad)
enter
adc
fbld
ss
pop
xor
xchg
push
push
push
inc
cwde
pushf
mov
lock
popa
test
sbb
push
call
fistp
push
ror
div
push
mov
fisub
fcmovnbe
loope
mov
test
daa
rcl
mov
inc
xor
dec
mov
pop
jo
sbb
mov
fistp
xor
enter
in
dec
clc
(bad)
and
popa
or
mov
call
add
retf
push
add
lock
add
stos
cmps
push
test
je
push
sti
mov
(bad)
ins
test
inc
inc
jnp
dec
rol
dec
add
cmp
inc
xor
jge
mov
push
mov
add
xchg
out
ja
cmc
adc
sub
inc
fsub
sbb
push
sbb
out
dec
and
push
cmp
push
push
ins
mov
push
cmp
xchg
sbb
popf
adc
aad
cmp
dec
outs
xchg
mov
adc
jno
mov
jmp
test
sbb
(bad)
inc
inc
inc
push
push
or
pushf
and
xor
jmp
mov
jns
call
(bad)
bound
jb
dec
je
jmp
fcomp
adc
ss
jo
into
nop
cmp
icebp
cmp
xchg
pushf
xor
or
mov
pop
and
cmp
scas
mov
mov
jbe
mov
out
jno
fist
cmp
adc
les
or
inc
inc
ja
xor
pop
aaa
jmp
sbb
xlat
iret
xchg
cmp
jnp
add
test
pop
xchg
cwde
adc
stos
lock
dec
ds
push
mov
inc
stos
lock
dec
inc
test
popa
mov
(bad)
pop
sub
inc
clc
mov
(bad)
mov
and
pop
xchg
adc
dec
push
or
mov
(bad)
and
cmp
jl
bound
sbb
das
or
mov
add
jmp
mov
pop
inc
dec
pop
lahf
push
pop
icebp
pop
idiv
lock
sub
leave
add
add
cdq
adc
fisubr
or
xor
fdivr
jb
loopne
sbb
sbb
xor
pop
rcl
pop
mov
sbb
iret
or
js
mov
push
mov
les
enter
adc
add
mov
mov
aam
add
pop
add
add
add
pop
mov
push
mov
mov
adc
clc
mov
fisttp
push
add
sahf
adc
cmp
dec
xchg
mov
add
jmp
adc
shl
push
cmp
cmp
sti
das
xchg
add
lea
jmp
cld
imul
and
add
repz
jle
inc
in
inc
iret
ss
xor
test
or
(bad)
jb
cdq
sbb
fcmovbe
push
jmp
add
xor
(bad)
out
adc
cmp
jle
mov
test
push
stos
jp
outs
rol
stc
cmp
and
jmp
mov
add
mov
push
test
loop
xchg
push
addr16
mov
sub
sbb
in
test
pop
(bad)
sub
jmp
push
es
xchg
mov
and
mov
mov
adc
mov
jle
inc
or
inc
mov
inc
cs
test
pcmpeqw
cmp
pop
cmp
addr16
pop
mov
addr16
mov
push
mov
push
or
div
pushf
or
out
call
mov
rol
mov
fild
jno
or
les
mov
inc
add
cmp
daa
ins
add
mov
add
shr
call
inc
sbb
push
sahf
or
test
sbb
dec
mov
dec
or
jg
cmp
test
cs
or
(bad)
add
mov
pop
or
or
aam
dec
inc
jge
bound
mov
clc
xchg
pop
pop
aaa
and
call
jl
sbb
ror
pop
push
jge
outs
dec
push
mov
je
push
lea
mov
out
mov
dec
pop
pop
mov
(bad)
aaa
cmp
fcmovnu
jnp
add
pop
mov
ret
add
pop
test
sub
sub
sbb
pop
retf
jecxz
hlt
jb
or
cmp
push
mov
push
mov
xchg
test
das
dec
ret
adc
add
shl
inc
add
cmp
loopne
cmp
add
cmp
fadd
js
xor
inc
shl
mov
jae
ja
inc
mov
ficomp
comiss
pop
and
and
hlt
shl
push
mov
mov
adc
jge
fiadd
out
cwde
cmp
je
fld
js
ins
sub
jg
adc
add
addr16
inc
jl
push
mov
push
shl
jmp
pushf
daa
scas
push
sti
push
push
add
mov
inc
adc
push
add
or
sub
or
cwde
in
mov
add
lea
mov
aam
shr
gs
rcl
(bad)
es
jge
or
std
pop
ret
inc
xor
add
bound
or
and
jle
mov
and
scas
dec
loopne
inc
movs
jp
inc
xchg
pusha
inc
or
push
lock
cmps
pop
imul
sub
clc
pop
inc
in
dec
out
add
inc
nop
(bad)
out
add
adc
lods
or
ret
push
or
xchg
xor
sub
stos
add
gs
mov
cs
in
lea
push
or
inc
inc
movs
out
xchg
sbb
cmps
adc
js
(bad)
ja
imul
dec
enter
cld
push
fsub
call
jle
pop
mov
or
add
cmp
ja
int3
or
out
push
push
pop
mov
rcl
test
and
shl
inc
add
inc
sbb
fnstenv
enter
imul
sbb
adc
out
push
cld
dec
or
add
pop
push
pop
nop
leave
lea
or
add
or
push
sti
pusha
dec
dec
dec
nop
add
jmp
push
jl
mov
push
cwd
mov
sbb
or
aam
and
pop
push
push
jae
rcl
lahf
icebp
call
and
retf
sahf
push
cmp
push
dec
adc
loopne
pop
jmp
es
inc
lea
adc
pusha
lahf
(bad)
ficomp
cmp
mov
fistp
in
add
adc
pop
cmp
or
push
cmp
rcr
je
lods
push
test
ins
sub
pop
or
mov
aaa
or
dec
in
lods
push
xchg
adc
lea
in
pushw
inc
outs
push
call
js
add
ret
push
sub
adc
pop
sbb
stos
outs
retf
out
mov
sub
fs
pop
adc
xchg
(bad)
push
sub
pop
cmp
fwait
adc
adc
or
pop
cmps
addr16
inc
test
pop
or
scas
aaa
jne
lds
fidiv
rol
mov
mov
mov
int
dec
inc
pop
lods
mov
mov
mov
shl
mov
test
mov
xchg
sbb
(bad)
int
leave
loopne
ins
lods
and
retf
cs
sbb
mov
inc
sbb
xchg
das
(bad)
mov
xor
aaa
mov
iret
jg
pop
or
jmp
or
push
and
sar
mov
xor
shr
or
mov
xchg
sbb
cli
xorps
xchg
mov
push
add
or
jecxz
adc
clc
or
adc
pop
or
push
ret
outs
fs
add
ins
jns
xor
push
int3
test
jg
es
pusha
jae
add
fidivr
ret
pop
sub
mov
stc
pop
mov
pop
iret
push
and
loopne
push
ret
stc
lods
cmp
sub
fs
stos
pop
adc
sti
jg
pop
out
icebp
stos
test
mov
fwait
lds
inc
cwde
rol
mov
je
inc
cmps
ins
js
cld
mov
dec
cld
test
add
jle
adc
mov
js
xor
je
mov
mov
les
fsub
shl
mov
push
mov
mov
fadd
es
loope
push
cmp
jns
add
rcr
and
or
and
inc
sub
sbb
cmp
xlat
loopne
and
es
inc
es
cmp
and
mov
loop
mov
add
fadd
nop
hlt
push
jle
arpl
adc
es
push
add
mov
mov
mov
cdq
or
mov
push
fwait
or
and
or
ja
cmp
sar
push
mov
sbb
add
icebp
xor
mov
adc
mov
retf
xor
push
mov
mov
add
and
mov
call
enter
mov
and
xchg
and
inc
mov
fiadd
aam
xlat
enter
mov
in
add
adc
aas
jno
adc
push
mov
pop
sar
nop
in
cmps
mov
jg
or
mov
mov
mov
xchg
outs
vunpcklps
jmp
xor
or
mov
mov
fwait
or
rol
test
rol
and
cmp
fnstsw
adc
adc
adc
cmp
fsubr
mov
or
enter
gs
sub
pop
inc
cdq
adc
inc
sbb
cmp
xchg
xor
aad
sbb
test
cmp
outs
dec
xchg
inc
add
dec
sbb
pusha
lock
cmp
jle
jg
addr16
sub
push
sub
push
test
out
out
pop
test
sbb
(bad)
jo
or
cli
adc
add
lods
daa
sti
or
or
ja
jg
jge
adc
(bad)
mov
or
push
bound
add
add
xor
or
xor
lock
pusha
mov
in
outs
pop
mov
xchg
push
mov
cmp
popf
rcl
mov
psubsw
(bad)
jmp
dec
cdq
cmp
scas
mov
cmp
jl
push
outs
aaa
js
cmps
dec
mov
push
sub
cdq
sub
(bad)
icebp
mov
jne
mov
ja
lock
inc
push
pop
or
stos
les
cmp
jecxz
jns
sar
addr16
push
mov
data16
scas
rcr
or
xor
push
inc
stc
inc
jg
in
xor
fldenv
das
add
ret
push
(bad)
shl
inc
add
popa
(bad)
int
je
fst
mov
not
into
aad
or
fs
sub
imul
clc
xchg
jmp
inc
and
add
aaa
fwait
shl
arpl
cmp
add
adc
add
out
add
scas
and
in
jnp
sbb
mov
mov
pop
push
push
or
sub
int
test
je
sub
xor
test
adc
xchg
inc
(bad)
adc
ror
lea
pop
stos
call
mov
jne
sar
jns
adc
ja
add
aas
lock
inc
add
out
das
ror
add
data16
cs
mov
rol
cwde
mov
jge
add
neg
or
lock
inc
xor
mov
outs
popf
jmp
(bad)
dec
outs
ror
clc
ret
pop
push
sbb
ret
xchg
repnz
pop
jg
sub
clc
in
xchg
adc
add
js
pop
push
or
pop
dec
and
sbb
dec
sbb
das
ret
in
pop
jl
sahf
sub
(bad)
cli
or
push
rol
adc
movs
sbb
add
add
jno
pusha
xor
mov
shl
push
add
fadd
xor
xor
push
lock
or
js
ret
or
(bad)
jecxz
fs
or
stc
add
cmp
std
mov
adc
dec
mov
lahf
mov
xor
adc
jge
or
clc
ja
lods
(bad)
neg
sub
fadd
add
xor
add
ins
mov
cmp
inc
and
add
or
out
sub
rol
add
push
inc
rcr
fld
mov
(bad)
cmp
pop
pop
fcom
or
mov
add
cmp
adc
call
cmps
add
dec
adc
loop
arpl
sbb
jge
fs
mov
or
dec
pop
jnp
sti
add
sar
test
shl
cmp
and
cmp
inc
rcr
fwait
and
jo
pop
lods
jg
cs
cmp
mov
xchg
add
lods
daa
div
xchg
xor
or
fsub
sub
(bad)
fcom
pop
add
pusha
jmp
jle
inc
aad
mov
test
je
popa
and
bound
call
xchg
push
cmp
jmp
lahf
pop
cmp
lds
sub
jmp
push
sbb
pop
pop
add
aad
sbb
add
inc
mov
sub
push
sub
cmp
sar
out
push
vmread
or
adc
jne
(bad)
dec
xchg
out
inc
retf
inc
add
jae
cmp
cs
(bad)
lds
mov
rol
cmc
jmp
lds
loop
xchg
mov
adc
(bad)
adc
icebp
and
(bad)
lahf
xchg
leave
mov
rol
ret
outs
mov
inc
lock
xor
shr
add
mov
xor
mov
js
repz
inc
inc
retf
mov
xchg
je
sub
xchg
int3
into
mov
mov
gs
fdiv
push
je
xchg
lods
pop
pop
sub
jg
clc
jnp
test
pop
inc
popw
pop
push
push
loopne
xchg
cdq
movs
push
das
xor
rcr
inc
xchg
push
or
or
jg
rol
add
xlat
call
sbb
and
(bad)
scas
or
fdivr
inc
xchg
jge
popf
and
sbb
xchg
mov
call
xchg
lock
in
test
pushf
or
sti
cli
add
(bad)
cdq
out
push
call
mov
add
call
sub
push
jmp
jge
xlat
std
idiv
enter
mov
(bad)
cmp
jl
and
xor
add
mov
adc
xlat
jge
add
cmps
sar
inc
enter
or
jnp
dec
test
test
cmp
pop
fbstp
in
mov
rcl
in
sub
pusha
sub
adc
pop
frstor
movs
mov
or
dec
xor
lods
shl
inc
cwde
fnstenv
xchg
mov
cwde
pusha
jb
loop
and
lea
adc
sbb
mov
repz
mov
ret
xor
cmp
test
or
mov
sahf
push
cmp
adc
inc
add
je
addr16
push
mov
and
sbb
sbb
pop
adc
push
add
clc
mov
(bad)
sbb
or
(bad)
jl
test
jl
dec
(bad)
out
xor
or
test
push
add
mov
dec
pop
dec
add
jmp
test
(bad)
mov
xchg
or
outs
mov
sub
dec
fimul
mov
ror
xor
adc
(bad)
adc
scas
dec
add
jmp
or
retf
jmp
sbb
adc
add
mov
add
mov
and
je
pop
add
or
sahf
pusha
xchg
lds
ret
dec
mov
mov
test
pop
stc
ret
shr
test
mov
and
enter
retf
cmc
sub
imul
shl
daa
xor
test
add
or
call
sbb
xchg
adc
push
or
add
dec
pop
cld
xchg
and
inc
shr
adc
push
and
xchg
aam
or
shl
add
adc
pop
test
mov
or
or
and
idiv
lea
xor
sub
and
mov
cmp
out
jp
aaa
pop
adc
and
adc
mov
or
adc
out
push
jne
lock
add
pop
xchg
inc
jmp
jne
cli
mov
and
or
push
mov
sbb
jl
dec
or
or
pop
shl
aas
push
or
sub
cmp
mov
loopne
in
das
sahf
jle
cmp
jle
or
jle
push
sub
and
push
pushf
push
lds
and
addr16
xchg
xchg
aad
jne
mov
and
iret
cmp
shl
push
and
ret
sbb
or
(bad)
icebp
mov
cmp
adc
or
cwde
push
adc
adc
cmp
add
jne
sbb
jnp
adc
inc
add
cwde
jbe
and
ja
imul
cmp
or
imul
call
adc
adc
jle
and
shl
pop
add
rcl
fs
stc
jo
dec
outs
stos
pop
inc
dec
add
mov
in
jle
cmps
stc
and
cmp
mov
ins
sbb
sbb
add
rol
mov
sbb
ret
jle
jne
jge
sbb
test
or
or
jge
xor
addr16
fsub
or
add
xor
sbb
jns
addr16
jnp
or
sbb
nop
(bad)
(bad)
stc
in
scas
jo
push
pop
xchg
sbb
leave
add
sbb
das
les
jg
pmuludq
fisub
or
pop
cmp
or
mov
jmp
mov
mov
jbe
add
jne
adc
adc
sar
xchg
adc
sub
jmp
lock
jg
push
(bad)
jo
lea
fcom
in
add
loopne
hlt
ins
mov
push
ins
inc
ins
retf
lock
cmp
test
sbb
ins
xor
or
inc
push
inc
scas
push
add
retf
data16
inc
imul
sub
mov
adc
in
(bad)
jne
cmp
or
fstp
pop
sub
nop
adc
repnz
daa
mov
mov
nop
test
in
mov
fcomip
mov
sub
shl
arpl
sbb
inc
mov
sub
ret
mov
xor
or
pop
jmp
clc
inc
mov
dec
inc
test
jmp
add
mov
sub
mov
cmp
ret
fwait
mov
mov
add
mov
stc
mov
daa
mov
push
push
mov
fld
ret
movs
hlt
scas
pop
lock
adc
jbe
cs
call
es
adc
xchg
mov
adc
(bad)
ja
lock
adc
jns
ror
mov
cwde
repnz
jnp
mov
pop
push
(bad)
scas
lods
pop
adc
xchg
push
jle
sbb
jl
adc
stos
rcr
scas
je
ret
pop
cmp
dec
mov
or
pop
mov
sub
dec
adc
add
or
jmp
jle
inc
add
pop
pop
cmp
add
mov
mov
test
push
cmp
inc
push
push
or
mov
ret
or
or
adc
rol
sub
fwait
das
mov
mov
add
fs
adc
out
jns
cmps
or
xor
daa
(bad)
imul
jl
push
and
rcr
outs
push
cmp
cmp
unpcklps
outs
sbb
sbb
or
inc
test
sbb
outs
jae
popa
outs
arpl
sub
mov
sub
sti
std
nop
or
xor
dec
enter
ja
jbe
outs
jo
outs
sub
ins
jo
push
jae
rol
add
out
jns
jg
inc
add
inc
push
ja
xor
clc
ja
ret
lahf
inc
imul
jb
inc
jb
jbe
jnp
popa
je
aam
sbb
mov
inc
sti
add
gs
cbw
or
gs
add
mov
fs
mov
or
add
or
add
or
jle
cld
add
add
add
adc
imul
outs
bound
push
mov
sbb
mov
add
adc
outs
ins
jbe
movs
fstp
add
in
aaa
push
jo
in
dec
test
pusha
(bad)
xor
das
adc
fnstcw
push
jns
gs
cs
ins
popa
jae
(bad)
movs
inc
je
test
cmp
mov
dec
cvtps2pd
or
loop
ror
loopne
cmp
jle
push
xor
je
cmp
inc
jecxz
rol
lods
add
pusha
mov
adc
lahf
call
call
inc
jb
popa
mov
cmp
cs
cmps
jae
ja
add
movs
push
push
adc
popa
add
in
pop
mov
xchg
inc
xor
data16
mov
pop
arpl
pop
loopne
es
inc
outs
jne
pop
je
jb
jecxz
fistp
add
mov
mov
xchg
or
shr
pop
pop
lods
push
fsub
xor
(bad)
sbb
add
pusha
cli
adc
inc
js
arpl
push
arpl
dec
lds
ret
or
(bad)
pushf
jmp
push
dec
aad
aaa
xchg
pop
inc
jne
xor
fucomi
rol
(bad)
pop
int3
das
jmp
sbb
jg
mov
popa
adc
or
gs
push
push
cmps
out
mov
bound
inc
aam
pop
inc
sub
cmp
sbb
pop
movs
sub
xor
inc
dec
inc
je
pop
call
aas
cmp
cmp
dec
in
push
data16
in
inc
sub
add
lahf
aaa
pop
sub
add
aaa
dec
add
clc
mov
sub
push
ror
popa
pop
outs
push
das
xchg
sub
inc
leave
pop
add
int3
mov
pop
(bad)
adc
and
xor
jo
dec
iret
push
and
sbb
adc
jle
push
popaw
jne
je
inc
or
mov
dec
outs
or
inc
cmp
popa
adc
fld
mov
inc
fs
dec
bound
or
pop
push
sbb
mov
inc
mov
push
outs
shr
iret
push
adc
enter
scas
ins
into
mov
mov
inc
add
sbb
push
outs
mov
pop
fsubr
test
inc
scas
rcl
jnp
pop
leave
mov
adc
lds
xor
xor
sbb
outs
popa
cmp
inc
add
add
adc
adc
add
adc
xor
mov
jo
adc
lea
cs
and
adc
add
shl
cwde
fmul
int
jle
ins
das
ror
shl
(bad)
lods
cmc
push
add
or
adc
imul
adc
scas
add
dec
ins
sub
out
sahf
push
and
pop
xlat
pop
std
push
scas
fist
mov
mov
es
addr16
sub
inc
jmp
out
xor
sahf
sub
sub
inc
dec
(bad)
je
inc
sub
int
repnz
outs
push
rcr
into
add
mov
and
inc
dec
push
mov
add
pop
fld
add
add
sbb
das
test
dec
push
fsub
xchg
sub
sbb
(bad)
out
loopne
sbb
pusha
xor
add
push
adc
push
push
cmp
pop
pop
sub
add
push
or
mov
popa
xlat
adc
xchg
pop
add
sbb
test
push
sub
push
or
adc
scas
fldcw
mov
push
dec
adc
or
hlt
jb
sbb
mov
pop
cli
test
add
call
mov
sub
fisub
mov
push
xchg
add
adc
sub
add
sbb
sbb
sub
test
retf
mov
fs
push
fmul
add
in
cmp
cdq
in
mov
ror
dec
mov
pushf
pushf
mov
rcl
dec
dec
inc
sahf
adc
dec
jle
daa
and
dec
or
xchg
xchg
daa
adc
xchg
xchg
xchg
cmps
retf
icebp
sub
in
leave
leave
pop
stos
in
xlat
repnz
xor
or
out
jbe
xor
add
xchg
push
inc
adc
punpckhdq
fwait
sub
add
in
imul
xchg
cmp
dec
out
dec
or
stos
push
inc
add
cmp
mov
push
push
or
mov
daa
pop
push
clc
les
xor
dec
add
loope
inc
dec
cmovns
fdivp
push
movs
dec
add
addr16
push
adc
or
inc
push
popa
jg
cwde
bound
test
mul
jle
inc
fs
mov
mov
jne
adc
mov
cdq
jo
and
sub
sub
jbe
ins
out
cmp
pop
outs
or
or
mov
add
jbe
adc
shr
push
xchg
cmps
les
inc
movs
js
push
jae
sbb
cmc
enter
add
dec
mov
xchg
xchg
or
mov
imul
sbb
xchg
shl
xor
and
nop
mov
in
and
rcr
pop
pusha
test
in
xor
sbb
lods
jo
test
pop
dec
jae
imul
iret
or
lods
push
ins
jb
mov
or
add
imul
add
sbb
fldenv
push
lea
scas
sbb
scas
ss
or
lods
adc
jmp
ss
sbb
push
sbb
push
jo
add
es
movs
bound
or
jae
dec
sub
stos
pusha
repz
or
xchg
xchg
mul
xchg
pop
xor
sbb
bound
and
dec
gs
or
pop
clc
and
inc
inc
jae
jle
mov
dec
add
popa
sub
ins
lds
test
dec
popa
iret
inc
or
add
add
push
mov
jo
sar
mov
aaa
xor
inc
ins
add
push
imul
ins
loopne
dec
push
xlat
inc
adc
jo
push
hlt
imul
add
jo
or
sub
int3
sahf
adc
adc
jmp
xchg
inc
adc
dec
or
push
inc
fild
adc
dec
add
inc
test
mov
jb
dec
or
(bad)
dec
dec
xor
jno
stos
sbb
sub
xor
and
xchg
addr16
or
dec
test
mov
js
cli
or
ins
test
cmp
push
sub
xor
mov
dec
mov
ret
outs
pushf
pop
fisttp
fcomp
xlat
pop
and
inc
add
imul
ja
sbb
mov
or
bnd
cmp
(bad)
cmps
add
lea
mov
or
pop
arpl
add
sbb
add
jo
push
xchg
jmp
adc
arpl
jns
add
dec
inc
aaa
aaa
sahf
xor
adc
xor
ret
pop
int3
dec
(bad)
pop
ret
call
fidiv
loopne
popf
push
daa
lods
das
repz
push
sub
push
mov
jp
pop
cld
movd
lods
adc
pop
and
imul
push
or
fdiv
repnz
sbb
fdiv
out
aaa
fild
fisub
daa
daa
mov
scas
cwde
bsr
sbb
ss
xchg
push
push
push
(bad)
fs
mov
lods
call
mov
mov
add
lds
mov
pop
dec
push
add
inc
jne
ss
mov
jbe
push
rol
dec
or
out
loop
mov
xor
mov
pop
rol
add
xor
mov
outs
jno
pop
add
cld
or
ins
push
inc
mov
add
adc
inc
daa
stos
shr
lods
xor
inc
add
adc
xor
aad
push
push
add
xor
dec
add
inc
adc
ds
adc
or
inc
adc
adc
mov
adc
loope
adc
mov
test
xor
dec
and
jmp
loope
clc
xor
mov
inc
cwde
lock
jmp
add
mov
mov
xchg
push
sub
jne
(bad)
data16
or
sub
sti
scas
adc
fistp
add
(bad)
push
or
inc
sbb
fbld
cld
iret
jg
call
xchg
ret
nop
mov
mov
in
adc
or
cs
pusha
mov
and
test
sbb
push
fidivr
sti
lahf
or
pop
test
je
mov
mov
add
push
aaa
xchg
pop
sbb
adc
jle
les
push
pusha
outs
cwde
test
add
out
cmp
adc
ret
lock
mov
pop
mov
xor
enter
cs
adc
sub
call
sahf
mov
mov
xor
mov
iret
aas
mov
adc
js
ds
add
loope
aas
inc
add
push
sub
sar
xor
in
scas
sub
ret
mov
xor
hlt
fmul
add
inc
cli
cmp
mov
jne
mov
jmp
lods
cld
or
(bad)
mov
sub
jmp
mov
push
fadd
xchg
sub
sbb
inc
rcr
loopne
and
adc
ds
push
add
test
push
out
cmp
xchg
and
stos
and
dec
xchg
dec
mov
sub
add
sti
out
icebp
add
add
add
adc
sub
stos
push
inc
sub
cli
rcr
or
in
mov
and
jl
inc
mov
inc
sbb
outs
cmp
jecxz
(bad)
mov
mov
or
and
jge
mov
cld
sub
mov
mov
call
sbb
add
mov
mov
stc
inc
hlt
xor
loope
jg
sysexit
in
(bad)
ror
mov
mov
adc
ror
cmp
aas
push
xor
dec
ror
mov
inc
test
shld
or
hlt
mov
maxps
in
xchg
je
push
sub
pop
pop
test
jne
cmp
(bad)
push
popa
cmps
or
inc
push
add
mov
call
jmp
ret
mov
push
clc
pop
inc
jmp
sbb
in
lea
shl
jmp
push
jo
mov
ja
jl
inc
cmp
bound
push
or
je
or
jl
inc
jle
dec
ins
cmc
int
or
mov
jo
sbb
push
in
push
and
jne
mov
mov
mov
(bad)
dec
and
push
sub
mov
push
or
mov
sub
mov
cmp
pop
movs
loop
xchg
or
mov
and
movs
cmp
jl
sahf
pop
sbb
cmp
sbb
jecxz
cmc
mov
inc
or
xchg
jne
test
jne
mov
sub
cmp
adc
inc
ror
add
jmp
push
push
fadd
push
pop
ret
or
mov
call
xchg
adc
push
mov
cmp
cmps
push
mov
xchg
mov
jecxz
(bad)
bound
adc
xor
or
fsub
imul
pushf
clc
or
fmul
pusha
dec
or
sbb
shr
(bad)
outs
xor
xchg
fmul
and
adc
or
jb
cmp
xor
outs
push
test
jmp
add
or
cmp
mov
(bad)
inc
je
fcom
sub
cdq
push
dec
test
rcl
cld
and
fstp
shl
rol
jae
jle
ret
mov
inc
dec
inc
or
cld
mov
dec
xchg
mov
daa
dec
sub
xor
cmp
sbb
jge
mov
dec
pop
mov
clc
jg
push
aas
xor
cmp
je
dec
loopne
daa
pop
sbb
push
mov
inc
aaa
sbb
adc
fwait
cwde
push
add
repz
xor
jno
lock
mov
push
add
mov
sbb
subps
push
mov
mov
push
adc
not
cmp
or
adc
rol
add
dec
out
ja
icebp
mov
mov
loopne
push
ret
adc
xor
push
mov
mov
daa
ret
push
xor
push
push
enter
rol
xlat
and
push
xlat
sbb
mov
adc
ss
je
mov
push
mov
(bad)
dec
adc
inc
xchg
adc
xor
into
add
cmp
jmp
inc
adc
inc
adc
lock
mov
ror
fmul
leave
push
add
data16
and
sub
in
outs
sub
call
xor
leave
xor
fwait
and
jmp
loopne
pop
add
mov
mov
dec
das
xchg
sub
icebp
sbb
test
out
(bad)
push
mov
js
inc
add
xor
retf
jo
nop
push
pushf
in
pusha
movzx
mov
push
mov
jnp
cs
dec
and
dec
push
push
mov
pop
mov
sbb
cdq
loopne
dec
mov
add
(bad)
and
inc
inc
sahf
inc
jmp
(bad)
and
cmp
adc
test
test
add
test
outs
cmc
ss
mov
(bad)
sub
add
cmp
scas
mov
out
push
cli
cmp
(bad)
into
ret
mov
data16
test
cmp
pop
add
adc
add
shl
data16
in
call
jmp
shl
sub
mov
push
or
or
push
in
xlat
sbb
inc
out
sar
add
out
jno
call
xchg
jmp
mov
test
repnz
imul
jne
xor
ret
xor
inc
sub
sub
popa
mov
in
call
mov
mov
mov
not
sbb
scas
add
int3
jp
adc
clc
xchg
sbb
push
push
push
dec
inc
jl
push
clc
mov
outs
xlat
fsubr
ret
les
mov
icebp
rcr
cmps
pusha
xor
idiv
pop
mov
jmp
lock
pop
or
mov
stos
jo
gs
cmp
outs
or
or
pop
or
inc
outs
xor
clc
fstp
or
(bad)
dec
in
stc
xchg
or
push
sbb
enter
nop
jne
not
pop
xor
adc
mov
add
ret
je
mov
dec
shl
sbb
dec
inc
dec
cmps
and
xor
mov
and
cmps
cmp
adc
jp
jmp
mov
dec
or
inc
hlt
je
movsx
adc
aaa
dec
sub
pop
mov
push
(bad)
or
add
test
pop
shr
cmp
jnp
addr16
stos
mov
fsubr
mov
inc
jb
loope
pop
inc
or
push
jmp
xchg
and
mov
pusha
pusha
stc
out
push
adc
shr
iret
scas
ret
add
ficomp
mov
nop
pop
push
push
mov
mov
cs
data16
in
test
jle
test
repnz
add
mov
cmp
ins
shr
cmp
jl
fisttp
(bad)
test
push
retf
ins
pop
dec
add
jmp
aaa
loopne
mov
je
lds
aas
push
ret
pop
xor
jo
int
aam
pusha
adc
fiadd
push
mov
(bad)
dec
rol
jmp
pop
clc
cmp
jno
in
mov
daa
fdiv
push
cdq
scas
push
stos
jmp
pop
iret
repnz
rcl
sub
add
scas
dec
adc
pop
mov
ds
mov
in
xor
mov
mov
in
sbb
call
inc
push
je
sbb
jle
and
sbb
clc
sbb
mov
mov
aas
retf
imul
adc
pop
fadd
data16
or
jl
in
call
push
leave
and
add
and
inc
sbb
sar
add
add
mov
(bad)
and
cmp
xchg
jl
test
xor
pop
movs
adc
pop
xor
arpl
arpl
cmp
jmp
add
es
pop
push
std
ins
dec
or
add
shl
data16
inc
pop
test
pop
pop
pop
pop
and
push
addr16
sar
cmp
and
mov
add
mov
xor
add
test
dec
test
iret
push
loop
or
add
add
fist
retf
pop
loopne
leave
add
sbb
push
adc
daa
add
loopne
fstp
or
mov
jmp
stos
or
movs
ret
rcr
or
or
enter
cld
and
gs
pop
add
adc
int3
add
dec
call
inc
int3
jo
add
shr
add
jle
push
add
cmp
jle
push
sbb
data16
inc
pop
jle
push
pop
sbb
pop
or
jmp
sub
jmp
and
cwde
aad
sar
add
aad
sar
adc
test
mov
call
(bad)
push
cmp
jne
add
shl
ror
test
lock
xchg
inc
mov
(bad)
aaa
jmp
add
(bad)
mov
mov
mov
cs
cld
popf
mov
inc
sahf
add
fbld
add
jae
cmp
sbb
fs
add
mov
push
pop
fdiv
mov
pop
(bad)
fsub
(bad)
xlat
imul
movzx
ret
jecxz
in
fisubr
pusha
jecxz
push
inc
add
mov
and
add
xchg
hlt
push
loop
test
popa
or
add
sti
pextrw
push
aam
inc
sub
loopne
(bad)
sub
test
pushf
std
sbb
nop
cmp
mov
lock
cmp
(bad)
jl
je
and
and
mov
outs
out
add
cmc
lahf
movs
xor
or
push
push
sbb
jb
cmp
add
adc
dec
add
push
shl
aas
sbb
push
add
arpl
adc
add
mov
jp
adc
adc
pop
or
pop
fstp
xchg
lahf
jmp
sbb
inc
add
mov
adc
daa
or
inc
xor
pop
(bad)
shl
out
aas
inc
push
adc
sub
sar
mov
sub
pop
inc
fcmovu
jge
pop
test
dec
dec
jne
sbb
dec
daa
mov
ss
in
sbb
pop
jo
int
cwde
(bad)
(bad)
or
mov
jmp
shr
pop
xchg
sbb
shl
outs
jmp
or
add
xor
mov
inc
xor
push
xchg
sbb
aam
xlat
add
mov
jmp
cmp
cmp
mov
out
pop
sbb
es
nop
paddusw
or
sar
loopne
cmps
or
fisubr
aas
push
ins
sahf
mul
push
push
in
or
nop
cmp
enter
rol
and
push
jb
cmp
or
es
push
adc
call
xchg
clc
add
into
jmp
mov
into
mov
call
add
rol
jb
dec
sub
mov
hlt
or
int3
cmp
pop
pop
arpl
das
sbb
jb
in
xor
xor
push
fs
adc
mov
mov
ror
idiv
or
mov
lock
add
add
and
je
xrelease
and
mov
or
inc
in
or
or
loopne
xor
pop
enter
pop
sub
inc
stos
add
xchg
icebp
imul
jnp
imul
inc
sbb
inc
sub
shl
aas
cmps
fadd
xor
mov
mov
syscall
push
mov
sbb
lea
imul
push
out
idiv
sub
pop
cmps
(bad)
pop
jbe
(bad)
and
adc
ins
inc
sub
pusha
adc
cs
out
scas
xor
out
jo
into
push
test
or
outs
idiv
pop
jmp
adc
mov
aaa
je
xchg
pusha
dec
mov
pusha
aad
mov
add
add
fnstsw
das
mov
lahf
jne
out
add
test
cmp
fnstcw
test
push
sbb
mov
push
sbb
add
and
mov
cld
sbb
std
push
jp
xchg
pop
pusha
inc
loop
mov
adc
cmp
in
push
sbb
fisttp
add
les
adc
cwde
xor
cmps
popf
pop
lahf
in
aaa
or
push
test
dec
pop
lea
adc
or
adc
or
out
sbb
add
out
lea
or
cmp
jbe
mov
js
and
gs
(bad)
punpcklwd
pop
pop
fadd
fisttp
bound
inc
jo
mov
or
cmp
mov
leave
mov
jecxz
cmp
pop
pop
or
inc
out
xor
ins
jmp
cmp
bndldx
pop
repnz
xor
out
jo
fcom
fwait
aaa
fs
pop
pop
ss
add
into
movs
add
imul
dec
int3
pusha
sub
sub
add
out
out
loopne
out
sub
mov
mov
es
cmp
or
fmul
into
aam
or
jg
std
push
fild
push
je
in
mov
fld
out
adc
mov
push
adc
stos
or
push
and
fild
inc
fisttp
fstp
fnsave
int3
pop
test
sbb
xchg
add
adc
or
and
lea
xor
test
mov
loope
mov
xor
adc
adc
or
in
pop
ffreep
fistp
mov
push
adc
add
mov
imul
rcr
xor
mov
sbb
test
dec
sub
std
sti
jg
and
cmp
ja
cmp
notrack
ret
add
add
or
jo
sahf
out
popa
sub
push
xlat
in
lea
add
and
dec
test
test
icebp
push
cmp
cli
add
mov
and
neg
test
ss
sbb
jne
sub
or
sub
pop
mov
fcom
mov
pop
nop
out
out
je
mov
push
xor
push
mov
rcl
pop
pop
inc
lock
or
ins
add
inc
pop
xchg
shl
push
cmp
mov
sbb
add
push
xlat
cmp
dec
push
sub
call
mov
add
enter
ss
jmp
mov
shl
xor
mov
mov
sbb
je
outs
xlat
mov
adc
in
lea
xchg
sub
cdq
mov
sbb
test
je
test
mov
setge
mov
jg
nop
add
push
mov
fmul
inc
fmul
ret
and
test
mov
pop
jl
add
ror
imul
add
(bad)
mov
pop
ds
adc
or
mov
neg
pop
push
push
cmp
inc
jmp
adc
loopne
mov
in
call
sbb
lock
pop
jmp
scas
inc
hlt
adc
stos
fcom
add
adc
sbb
repz
lahf
jmp
xor
add
out
loopne
nop
or
out
rcl
(bad)
ss
sbb
jmp
bound
add
ds
mov
loopne
aad
nop
aas
push
loopne
or
repz
clc
add
pop
(bad)
cs
ins
loopne
mov
sub
clc
call
add
loopne
fwait
imul
jl
cmp
mov
jbe
in
sar
aaa
push
stos
mov
jno
jmp
jo
cwde
adc
mov
mov
cmp
push
imul
xor
push
lock
mov
cmp
jne
mov
jb
int
sub
adc
cs
sbb
pusha
mov
in
inc
jle
scas
rol
jmp
pop
xchg
aad
lahf
adc
outs
cmc
xchg
aas
push
add
jmp
jnp
sbb
loop
push
inc
adc
sub
lock
pop
dec
push
jmp
dec
fsubp
js
mov
mov
push
xor
repz
mov
mov
paddsw
pop
and
pop
call
ja
ds
or
cld
or
pusha
imul
mov
xor
(bad)
and
scas
pop
mov
mov
loopne
mov
ffreep
inc
sbb
push
es
push
mov
or
adc
cmp
sti
sbb
jg
les
fcmovne
add
aaa
inc
aas
mul
pop
pop
or
lea
add
or
mov
(bad)
int
(bad)
push
pusha
sbb
dec
popa
dec
out
mov
or
mov
add
pusha
in
or
jae
pop
clc
fadd
aad
(bad)
and
(bad)
fld
sub
dec
out
xor
rcl
or
ins
xchg
and
rol
cmp
sbb
dec
jne
sbb
sbb
mov
and
scas
or
js
xor
inc
add
inc
xor
jmp
mov
sbb
push
or
iret
push
loopne
cmp
and
cmp
ja
pop
sahf
fsubr
push
rcl
test
pop
sub
iret
mov
dec
push
ins
push
jno
cmps
jae
pop
lea
imul
inc
push
dec
push
mov
fnsave
xor
(bad)
lock
clc
mov
inc
enter
jecxz
movzx
shr
sub
pop
mov
mov
lea
aam
pop
stos
in
test
mov
pushf
and
pop
fild
nop
pop
into
and
push
pop
imul
sar
xlat
movs
inc
cmp
cmp
scas
(bad)
(bad)
idiv
adc
jge
inc
adc
inc
add
pop
sub
add
inc
pop
or
imul
jl
cmp
push
sti
or
push
sbb
adc
ret
sahf
push
jnp
cmp
inc
sbb
loopne
cdq
cmp
pop
xchg
jae
xor
xchg
adc
or
jge
pop
add
aaa
jbe
imul
int3
add
push
outs
out
cld
hlt
aas
mov
inc
cmp
sub
hlt
aam
dec
mov
push
sar
pop
call
dec
jmp
dec
lods
sbb
mov
call
fucomp
and
jge
(bad)
cmp
stos
mov
clc
or
pop
lock
or
(bad)
adc
cmp
shr
pop
mov
and
push
iret
cmps
imul
rcr
leave
test
in
inc
or
ret
sar
xchg
mov
add
(bad)
mov
mov
and
jecxz
ror
jmp
lods
hlt
jge
jno
xchg
ja
inc
jp
sub
loopne
leave
sar
cmp
push
je
pop
cmp
xor
movaps
sbb
test
pop
mov
je
cmps
or
add
xchg
bsr
mov
cdq
popa
rol
clc
xor
push
push
xor
mov
pusha
jg
push
jo
inc
mov
push
or
pop
das
enter
or
push
dec
adc
mov
jbe
ins
ins
sbb
fistp
mov
sub
pop
daa
jge
dec
push
cmp
xor
adc
jp
or
(bad)
gs
sub
sbb
dec
jge
pcmpgtd
adc
aas
pop
leave
adc
add
xor
iret
adc
pop
or
jbe
jg
and
inc
lock
sub
enter
or
xor
out
push
pop
outs
jo
push
and
adc
xor
sbb
jae
fistp
dec
sbb
loopne
push
inc
jmp
push
rol
sub
push
ins
cmp
mov
pop
xchg
sbb
aad
out
daa
pop
push
int
adc
sbb
mov
mov
pop
sub
pop
popf
arpl
xor
cmp
ss
dec
movs
xchg
jg
test
and
icebp
and
mov
xor
jo
push
aam
in
inc
ds
mov
jne
push
cmp
push
jmp
test
shl
jge
mov
fcom
mov
rcr
or
je
fstp
and
cmp
and
sbb
or
pusha
pusha
pop
inc
cmps
inc
mov
ror
repnz
call
sbb
adc
dec
mov
sub
je
xor
arpl
sbb
add
call
clc
pop
ja
bts
jmp
ret
stos
loop
add
mov
sub
mov
push
inc
mov
jg
and
add
or
ror
push
jne
shr
mov
ror
gs
push
push
adc
or
add
lahf
xlat
lock
retf
mov
mov
retf
stc
adc
dec
aad
je
jno
shl
je
je
cld
jb
or
(bad)
pop
sbb
in
push
rol
add
nop
add
leave
pop
xchg
mov
das
pop
fxch
add
aad
pop
lea
hlt
rol
rol
mov
add
jo
in
add
retf
add
add
in
jno
xchg
hlt
xchg
add
inc
in
mov
mov
push
sbb
xchg
fst
cli
inc
jns
fcom
das
dec
cmps
inc
push
inc
cmps
xor
loop
adc
jb
add
inc
cli
clc
xor
add
adc
sub
daa
dec
xchg
aas
xchg
jne
push
add
xor
fisttp
cld
jmp
push
jo
jnp
inc
gs
out
adc
mov
enter
ins
push
and
cdq
and
mov
enter
iret
or
mov
lock
aas
stos
lods
in
adc
sar
add
in
mov
sbb
xchg
sub
rcr
inc
cmp
jbe
jle
ja
adc
dec
in
out
mov
or
sbb
cs
mov
jmp
popa
imul
jns
out
push
adc
popf
out
fcmovu
add
xlat
xchg
adc
sbb
push
rcl
pushf
xchg
or
and
add
out
ins
and
syscall
and
nop
mov
mov
jnp
pusha
pop
(bad)
xor
adc
retf
jmp
mov
es
cmp
fsubr
cmp
ror
loope
adc
(bad)
loope
or
inc
dec
xchg
scas
imul
or
mov
xchg
sbb
iret
jge
dec
inc
aas
lds
ss
int3
adc
(bad)
xchg
jle
sahf
xchg
retf
shl
mul
sbb
jmp
mov
daa
add
outs
enter
clc
aad
push
or
xchg
out
adc
cs
and
int
sti
aaa
jle
jo
pop
jp
mov
fcomi
call
add
into
addr16
push
jle
jo
pusha
push
imul
mov
sbb
jmp
iret
push
push
test
(bad)
mov
cld
imul
sbb
test
adc
(bad)
adc
xchg
dec
arpl
stos
push
loopne
scas
pop
std
jmp
adc
inc
push
xor
mov
out
jmp
packuswb
fidiv
push
dec
push
push
and
inc
jecxz
mov
cmp
(bad)
shl
dec
aaa
xchg
adc
fiadd
movs
repnz
sub
and
and
adc
ret
loope
inc
inc
je
add
xor
adc
cmps
in
xor
push
add
in
shl
jmp
daa
add
jbe
add
mov
shl
cld
fadd
outs
dec
pusha
add
nop
jmp
or
or
lock
loop
sbb
mov
mov
pop
ins
jnp
xor
jo
ins
lods
xor
mov
mov
(bad)
out
stc
mov
or
add
add
and
or
sub
mov
mov
je
lea
mov
add
in
inc
cld
and
mov
xor
stos
jo
dec
dec
cwde
mov
cmp
es
mov
jecxz
dec
scas
out
fisttp
add
pop
push
sbb
bound
and
mov
pushf
adc
div
or
rcl
cmp
je
push
push
sub
or
pop
mov
ret
sbb
test
mov
mov
adc
ja
mov
push
mov
or
mov
pop
push
ss
mov
cmp
push
cmp
cmp
dec
xor
inc
fdiv
cmps
data16
dec
push
inc
cmp
sbb
rcl
fidiv
cmp
int
or
mov
pop
inc
sbb
inc
sbb
cmp
inc
sbb
mov
je
push
sub
ins
scas
push
pushw
sub
pop
adc
fs
dec
aas
sbb
test
fist
loopne
add
jne
mov
or
lea
inc
add
push
xor
mov
or
dec
mov
loopne
push
dec
daa
mov
rol
les
mov
in
or
ds
mov
pop
sbb
cmp
mov
mov
lods
test
cmp
shl
xor
cmp
sub
cmp
add
xchg
inc
push
mov
jge
lock
loope
sbb
pop
pop
rcl
mov
or
or
ror
jno
into
sbb
dec
sbb
cs
mov
and
ret
pop
ret
push
jecxz
ins
ret
mov
add
aam
sbb
test
mov
rol
push
jbe
jle
or
ja
xchg
pusha
inc
inc
movzx
mov
add
push
(bad)
cmp
lea
or
cmp
outs
pop
sbb
pushf
gs
call
pusha
das
pop
push
cmp
add
mov
adc
dec
aas
sbb
xor
fsub
and
xchg
sub
rol
dec
dec
cmc
push
jnp
jge
call
pop
cs
dec
push
jae
cmp
das
push
pop
and
aaa
int3
mov
push
mov
(bad)
idiv
shld
mov
or
adc
or
fcmovu
dec
push
pusha
sbb
inc
movsx
mov
xor
mov
add
mov
sbb
xchg
das
test
aam
stos
cmp
daa
in
mov
mov
movs
dec
hlt
daa
mov
aas
inc
adc
int
pushf
lock
jmp
outs
sub
add
aam
or
xchg
ret
jmp
into
call
retf
lods
pop
sbb
in
inc
pop
lock
js
sub
cmp
inc
and
fsubp
mov
xchg
pop
test
jecxz
outs
add
out
addr16
mov
sub
mov
test
push
add
dec
cmps
call
sbb
mov
mov
mov
test
pusha
sbb
add
cmp
mov
iret
mov
out
xchg
lock
push
push
mov
jae
mov
inc
mov
adc
dec
sbb
jne
mov
retf
dec
jp
adc
pop
push
inc
xchg
sbb
inc
adc
jg
cs
push
stos
repnz
movs
movs
add
cmp
adc
and
add
push
lea
loopne
push
sbb
cmp
jne
inc
sbb
pop
push
jb
pop
pop
loopne
add
scas
imul
fild
or
mov
popa
bnd
dec
rol
and
lock
xchg
mov
sub
mov
push
jmp
pusha
sbb
mov
mov
aaa
mov
sub
jmp
adc
and
sti
jg
mov
mov
add
test
sbb
and
lds
add
jmp
sti
ins
loope
pusha
lock
pop
pop
pop
pop
clc
repnz
rcl
stos
mov
sbb
inc
push
adc
adc
jae
dec
sub
xor
add
scas
mov
enter
call
nop
(bad)
jp
push
push
inc
sbb
mov
cdq
add
inc
aas
sahf
add
dec
jge
ss
mov
add
cwde
test
bound
test
adc
dec
inc
cmp
jle
sub
mov
add
mov
(bad)
jmp
int
adc
test
(bad)
fisub
adc
push
cld
sub
jne
sub
test
jg
imul
mov
mov
mov
pop
loopne
cmp
jge
add
adc
push
cmp
sbb
sbb
rcr
test
or
pushf
push
push
mov
add
mov
and
fsubr
fsub
push
mov
jne
add
aam
int3
xchg
(bad)
or
pop
rcl
pop
mov
jne
cmp
jle
push
enter
sbb
shl
dec
shr
xor
(bad)
pusha
adc
in
adc
add
fsubr
dec
jg
xchg
lock
jl
xor
xchg
ret
xor
shl
mov
xor
and
or
xlat
jp
pop
pop
pop
(bad)
sbb
or
enter
push
adc
arpl
dec
add
inc
into
dec
adc
add
jmp
add
lahf
ja
out
and
sub
lods
adc
mov
and
mov
sub
fsubrp
sub
add
add
sbb
mov
mov
rcr
lods
mov
and
push
sti
les
cmp
ret
or
pop
outs
mov
mov
and
popa
and
and
lahf
dec
sub
sbb
add
push
adc
shr
adc
movs
shl
or
aad
cmp
and
out
and
adc
add
push
inc
xlat
and
pushf
aas
shrd
shr
mov
inc
or
fstp
dec
adc
gs
call
call
or
aas
scas
idiv
jno
shr
cmp
outs
push
jle
adc
pop
mov
xor
pop
or
ret
sbb
mov
cmps
jb
pop
cmps
adc
inc
xchg
xchg
push
add
nop
jg
pop
jo
jle
cs
and
dec
aaa
daa
dec
mov
xor
add
add
cmp
add
mov
inc
fist
add
fwait
and
movs
aas
push
movs
test
aas
(bad)
mul
test
sar
pop
add
aas
add
mov
mov
aaa
cmp
aaa
jmp
push
xor
sbb
xor
mov
adc
mov
cmps
pusha
inc
push
into
add
sub
outs
sbb
or
outs
jb
mov
outs
(bad)
cmp
sbb
sbb
aaa
or
sbb
xchg
cmp
push
xchg
cmp
cmp
lahf
mov
push
imul
add
mov
ret
pop
and
xchg
cmp
out
gs
xor
out
dec
xor
xor
and
jle
or
or
push
dec
dec
in
or
xchg
std
mov
or
inc
push
test
sub
aaa
loop
jo
inc
inc
jmp
and
push
lahf
xor
popa
(bad)
out
cmp
aam
or
test
and
test
shl
jmp
(bad)
mov
shl
adc
scas
test
je
bound
dec
test
jl
inc
xor
xor
inc
or
push
pusha
or
dec
test
add
daa
xor
inc
dec
jne
pop
xor
rcr
test
pop
xchg
adc
mov
repnz
pop
xor
clc
inc
xor
clc
dec
jl
fs
std
xor
or
or
xchg
cmp
fidiv
mov
jmp
mov
add
not
jmp
cld
add
cmp
fadd
shl
fcomp
mov
xchg
dec
jne
adc
iret
shr
(bad)
cld
rcpps
sub
mov
mov
in
cmps
cs
or
shr
push
dec
in
jl
inc
xor
ds
or
dec
ins
pop
popa
inc
dec
jne
idiv
js
add
add
sbb
pop
outs
popf
adc
les
push
push
mov
cmp
and
mov
stos
jo
mov
adc
jg
adc
inc
in
pop
add
or
adc
add
adc
inc
inc
mov
inc
loope
mov
add
jbe
sbb
jo
nop
sti
pusha
ja
stc
push
inc
popf
scas
push
mov
sub
lods
cmps
imul
les
int3
cmc
mov
fld
inc
and
cwde
repz
mov
aam
ret
(bad)
sbb
or
sbb
into
sub
mov
or
sti
(bad)
(bad)
cmovo
mov
push
mov
inc
js
pop
cwde
stos
stos
pushf
sbb
shr
sbb
rcl
sti
jne
push
or
adc
add
or
repz
xor
jmp
jge
and
mov
push
cmp
jo
daa
and
cmp
mov
push
push
add
sbb
cmp
inc
ror
scas
add
add
clc
push
push
test
cmps
or
fwait
in
or
cdq
cmp
shl
mov
test
sbb
pop
sbb
test
ins
call
and
dec
stos
pop
outs
or
rcl
jge
xchg
push
adc
mov
or
loope
dec
push
pop
fnstcw
or
dec
fisttp
cmp
adc
xor
jno
adc
scas
loop
push
pushf
jnp
scas
ret
in
cmpxchg8b
jmp
sbb
jne
or
fs
push
mov
test
in
push
jmp
ss
jne
test
cmps
jnp
outs
std
or
sub
lsl
cmp
sbb
cwde
jl
pusha
sub
mov
add
mov
in
aas
jmp
sti
add
call
stc
adc
sti
adc
xlat
adc
dec
push
fdiv
and
sbb
sub
je
xchg
cmp
xchg
jne
add
dec
xchg
cmp
add
ret
jbe
add
dec
pusha
adc
xchg
inc
les
sub
add
loope
loopne
push
cmovg
rcl
outs
or
jne
fs
xchg
sahf
nop
stos
sbb
push
sbb
or
loopne
inc
inc
jae
jae
or
mov
cmp
lds
or
mov
sub
lock
pop
imul
js
or
and
mov
popf
adc
adc
in
mov
(bad)
mov
lock
or
loop
hlt
nop
es
xchg
bound
movs
inc
mov
sbb
inc
cmc
mov
bound
inc
lahf
inc
pusha
and
adc
inc
mov
push
add
mov
imul
stc
(bad)
outs
sbb
or
mov
adc
add
sbb
mov
or
and
mov
mov
adc
and
dec
or
xor
jb
push
sbb
mov
jnp
and
or
mov
loopne
les
js
xchg
pushf
nop
clc
or
and
jns
loope
xchg
loopne
or
sbb
pushf
jg
sub
popa
add
add
das
mov
mov
jb
sub
mov
sub
mov
imul
jo
push
push
fdiv
or
and
jg
sbb
sbb
icebp
adc
mov
jl
adc
jg
jg
mov
push
dec
jnp
cmps
xor
pop
mov
xor
cs
pop
mov
jge
jg
or
or
and
and
fiadd
dec
lods
and
and
mov
xor
and
mov
sbb
mov
mov
clc
and
icebp
mov
fwait
or
aaa
add
add
or
mov
lea
test
sub
fmul
dec
sysret
pop
mov
sbb
(bad)
add
aad
in
mov
mov
pop
mov
pop
inc
mov
add
pop
loopne
lock
ror
add
xor
and
add
xor
test
cld
or
xchg
push
dec
add
xor
jp
sbb
dec
sbb
ficomp
xchg
or
mov
mov
mov
and
lahf
(bad)
ds
dec
jne
retf
add
push
loopne
rcr
(bad)
add
adc
ret
jmp
or
adc
inc
clc
mov
mov
xchg
inc
in
pop
shl
xor
out
push
lock
sbb
or
add
repz
add
and
push
inc
adc
out
ficomp
sbb
adc
lods
call
aas
or
inc
push
and
sahf
mov
push
cmps
ror
sub
push
sub
push
sbb
pop
or
movzx
iret
sti
sbb
pushf
add
jbe
mov
lea
cmp
iret
sahf
out
push
xor
xor
pop
xor
add
cmps
jge
ja
imul
inc
add
sbb
aas
fsubr
add
dec
or
nop
movs
jne
lea
mov
cmp
jmp
xchg
cmp
ffree
sub
add
xchg
rcr
add
jns
pushf
call
test
(bad)
sbb
add
dec
cmp
rcl
mov
inc
pop
and
add
push
jmp
lock
xor
clc
cmp
fstp
xor
in
adc
push
xor
pop
sbb
mov
pop
add
inc
jmp
aam
add
sbb
fdivr
lock
out
pushf
jp
mov
cmp
je
out
cmp
or
push
fwait
and
jle
lock
mov
jne
loope
or
or
aam
push
push
js
add
or
push
ret
inc
repz
jge
or
data16
ror
je
push
out
jbe
mov
je
out
push
or
test
shl
imul
test
scas
retf
in
sbb
lods
xor
mov
je
lock
fcom
hlt
jo
push
(bad)
leave
into
cs
xchg
dec
adc
push
pusha
aaa
xor
push
hlt
lea
push
cs
icebp
cmp
lods
xlat
(bad)
adc
not
gs
sbb
loope
in
in
jne
fistp
loop
loopne
push
movs
mov
fdivr
neg
sbb
inc
(bad)
(bad)
and
and
push
pop
pop
xchg
push
xor
xchg
cwde
cmp
lock
add
dec
push
cmp
call
fmul
inc
inc
jmp
sub
sbb
das
and
enter
loopne
jo
mov
xor
retf
in
add
fild
lods
adc
jb
cmp
cmp
jo
or
call
std
mov
ret
adc
xchg
daa
dec
daa
retf
adc
or
fiadd
loopne
iret
cmp
enter
loopne
fstp
mov
jmp
fldcw
pop
mov
sbb
push
rol
mov
(bad)
setle
cmp
rol
and
fisttp
pop
int
fld1
ins
xor
jns
scas
aaa
jo
out
mov
xor
and
cmp
cmp
imul
xchg
sbb
adc
push
or
sbb
jecxz
and
dec
adc
test
mov
cdq
iret
out
sub
fwait
out
push
cmp
lea
mov
out
aad
and
and
cmp
cmp
ror
out
pop
movs
jo
(bad)
call
out
xor
lods
in
adc
sbb
mov
add
sub
push
sar
xchg
add
jp
js
mov
(bad)
cld
mov
or
inc
cld
xchg
cmp
dec
movs
add
pop
or
dec
cmc
in
push
xor
inc
(bad)
cmp
jne
daa
mov
jb
sbb
jne
cld
lods
push
add
pop
or
xor
or
cmp
mov
pushf
inc
sbb
pop
arpl
aaa
repnz
adc
popf
mov
jne
cdq
push
pop
pop
cmp
mov
stos
daa
dec
cli
xor
and
cmp
mov
jle
dec
push
inc
hlt
mov
mov
xor
call
hlt
push
imul
sbb
fist
xchg
push
push
sub
pop
cli
jmp
pusha
jmp
call
ret
test
jne
int
lds
(bad)
sti
pop
mov
mov
shl
xor
rcr
ret
or
mov
adc
and
and
push
frstor
push
loopne
fild
xchg
pop
inc
(bad)
int
dec
add
xchg
adc
sbb
add
cmc
data16
sbb
push
push
pusha
push
jne
ins
add
rcr
xor
and
xor
cwde
(bad)
xchg
inc
cmovne
fbstp
mov
out
or
(bad)
test
and
push
test
and
mov
inc
jg
lea
movs
movs
loop
adc
sub
push
sub
rcl
add
lea
push
in
(bad)
call
add
push
cmp
adc
jae
pusha
push
add
adc
pop
pop
or
push
inc
pop
xchg
out
add
shl
dec
leave
pop
cmp
lock
je
cmp
inc
push
xor
mov
xor
shl
test
mov
loop
ret
adc
scas
or
sub
inc
inc
or
sub
and
or
jle
sar
movs
mov
add
cmps
mov
mov
jo
sbb
and
add
fisttp
add
cmp
adc
pop
xor
loopne
mov
mov
aad
es
loopne
(bad)
jge
cmps
adc
lock
xor
mov
sub
or
adc
push
adc
pop
push
or
adc
adc
cli
xchg
jge
mov
cmc
jne
add
cmp
jne
enter
sbb
add
add
sub
out
add
ja
or
int3
jmp
mov
add
add
or
add
cdq
sub
out
inc
out
dec
mov
sar
jp
nop
jae
shl
sti
add
dec
adc
test
push
xor
xor
movs
mov
adc
xor
sub
dec
or
ins
mov
inc
test
xchg
or
movlps
lods
push
mov
sbb
out
lods
cmc
inc
or
jg
(bad)
loop
mov
inc
xor
adc
fidiv
daa
ss
int
push
int
mov
ror
jnp
jg
add
mov
mov
push
add
mov
push
or
mov
or
inc
int3
inc
cmp
jne
cwde
xchg
pushf
adc
icebp
and
stos
or
retf
jl
mov
pop
cmp
inc
xor
or
and
or
cmp
call
sar
call
or
cld
in
sbb
dec
fild
enter
mov
sbb
mov
xor
mov
sub
loop
xor
mov
fld
pushf
sbb
mov
shl
pop
arpl
dec
std
pop
dec
push
shl
dec
test
push
out
call
(bad)
xor
push
sub
jns
or
(bad)
rol
imul
dec
push
xchg
hlt
setle
pushf
pop
jmp
lods
loopne
mov
jmp
(bad)
das
cmp
sbb
imul
push
push
mov
or
push
add
out
mov
and
mov
mov
pop
arpl
lock
xor
clc
hlt
add
mov
mov
mov
push
icebp
jnp
mov
jb
add
jns
cwde
mov
out
dec
xchg
imul
mov
sub
mov
add
test
shl
adc
mov
mov
or
dec
aad
sbb
inc
push
and
mov
(bad)
mov
xchg
mov
ins
add
jne
sub
in
pusha
das
jnp
push
jg
pop
fucomp
adc
cmp
push
sbb
or
sbb
cmps
mov
add
sbb
and
mov
jnp
and
jmp
inc
push
push
stos
aaa
push
mov
xor
sahf
cmp
and
(bad)
and
mov
ja
sbb
add
mov
shr
adc
push
jae
pop
dec
lods
aas
in
in
sbb
push
pop
in
lea
pop
and
xchg
inc
sar
jns
xchg
cmp
test
sub
adc
or
aaa
mov
(bad)
mov
mov
and
sbb
adc
je
fdiv
sub
mov
dec
and
or
imul
add
push
dec
aaa
mov
or
sub
loope
js
das
xlat
hlt
mov
or
dec
cmps
jnp
test
ss
xor
(bad)
sub
leave
pop
inc
cwde
xor
add
lock
iret
adc
aaa
push
dec
xor
add
cli
or
jo
ficomp
mov
sbb
inc
mov
cmp
xchg
jne
jno
in
call
test
sbb
cmp
jne
dec
jmp
aaa
push
cmps
sbb
xchg
clc
xchg
cmp
or
add
inc
jnp
cdq
retf
(bad)
adc
lods
lea
loopne
xor
test
hlt
outs
mov
xor
mov
inc
and
xor
rcr
pop
fs
mov
call
out
popa
aam
ret
enter
inc
mov
into
pop
adc
fild
cmp
int
cmp
sub
in
clc
or
push
mov
xor
leave
aaa
jne
imul
daa
xor
add
pop
sti
lods
cmp
lds
push
rol
int
push
fist
mov
push
inc
xchg
jge
test
push
add
adc
add
or
xchg
mov
push
int3
or
ss
sub
jns
mov
add
or
adc
out
aas
jno
es
mov
cmp
int
movs
xor
and
cmp
int
mov
and
adc
scas
jge
in
pop
xor
and
leave
mov
mov
mov
add
movs
dec
rol
iret
and
shl
adc
and
inc
aas
add
movs
hlt
pop
mov
popa
xor
add
sar
sbb
dec
or
hlt
pop
jg
add
xor
and
push
or
cld
mov
sbb
out
dec
je
lods
push
adc
add
mov
call
add
mov
cs
lock
or
jb
clc
sub
cmp
add
inc
fldcw
add
sbb
mov
inc
rcr
dec
dec
mov
xor
fcos
and
cwde
jle
fstp
fwait
push
aaa
and
inc
fstp
mov
mov
mov
sti
pusha
shl
nop
outs
fstp
cmps
enter
xchg
loopne
(bad)
and
sbb
mov
test
inc
pusha
sbb
cmp
test
mov
jnp
stos
push
ins
movs
mov
push
or
ds
or
data16
shl
(bad)
sar
or
inc
jbe
rol
imul
hlt
jmp
push
(bad)
pop
jmp
cmp
dec
mov
adc
bound
sub
mov
mov
dec
add
push
cwde
dec
push
mov
dec
push
adc
call
je
mov
pushf
cdq
push
loopne
adc
sbb
cs
cmc
sbb
sbb
fnsave
mov
test
and
push
mov
xor
movs
test
and
mov
pop
mov
mov
mov
mov
mov
xor
lods
dec
jmp
and
xchg
or
hlt
pop
mov
or
cmp
fcomp
shr
jge
xchg
or
into
mov
(bad)
inc
pop
sub
inc
(bad)
mov
xor
xchg
aad
mov
and
cmp
cwde
xor
call
psllq
jae
push
xchg
test
ret
mov
mov
test
cmp
sbb
add
loop
ret
ds
adc
pop
rol
add
push
loopne
cmp
(bad)
adc
mov
inc
pop
movs
dec
jo
or
jge
rol
add
pusha
inc
inc
push
enter
ins
loop
xor
movs
add
and
push
ret
sbb
pusha
pop
cmp
(bad)
aas
sub
cmps
sub
(bad)
adc
adc
sar
ret
fwait
sbb
adc
push
inc
jbe
aam
jne
cmp
aam
jbe
jbe
bnd
jmp
jne
xchg
jo
or
test
dec
xchg
and
fidivr
(bad)
inc
mov
xchg
test
gs
add
dec
cmps
or
jmp
add
add
imul
and
adc
push
lds
xchg
dec
mov
and
mov
sub
mov
push
test
prefetchwt1
dec
push
test
or
scas
pop
mov
add
push
mov
loope
dec
jb
mov
mov
push
sbb
push
mov
mov
enter
mov
add
ret
pop
or
dec
jbe
or
in
(bad)
dec
dec
test
jl
inc
xor
lea
movzx
shr
or
or
push
mov
add
add
mov
add
pop
mov
inc
mov
jecxz
or
dec
lea
dec
inc
dec
jne
adc
mov
fild
jg
xchg
xchg
push
fld
test
leave
add
sahf
or
sar
mov
add
sub
jb
adc
push
jb
out
lds
mov
addr16
dec
or
dec
inc
xchg
and
adc
shl
inc
mov
sti
lods
fisub
pop
sbb
or
faddp
add
or
fiadd
push
jne
mov
(bad)
call
add
pop
adc
and
jb
jns
push
jns
je
ins
cs
ins
popa
jae
jo
mov
push
push
gs
imul
add
fimul
adc
icebp
add
add
pop
je
add
mov
push
loopne
data16
clc
jge
pusha
push
adc
or
out
mov
sub
jl
push
and
sub
pop
jbe
stos
xchg
hlt
jmp
js
outs
loopne
push
inc
outs
jne
cmp
outs
jb
adc
add
outs
jbe
dec
gs
pop
adc
pop
pop
pusha
xchg
or
or
sub
call
sbb
sbb
adc
sub
dec
inc
sub
jno
(bad)
fld
dec
inc
outs
ins
ins
arpl
outs
jae
add
pop
jb
loope
scas
ret
push
add
or
sahf
test
popf
add
sbb
xchg
scas
mov
add
out
ss
mov
pop
rcr
(bad)
jg
push
add
pop
mov
add
xchg
out
mov
push
add
pusha
lock
dec
push
cmps
bound
stc
daa
cmps
pop
inc
sub
jb
pop
sbb
movs
test
loope
or
sub
xor
and
ss
aas
aas
pop
push
outs
cmovl
sub
fwait
nop
add
push
inc
sub
test
pop
add
xchg
pop
in
(bad)
push
pop
add
push
dec
jp
shl
cs
pop
outs
push
aaa
(bad)
mov
popa
dec
pop
(bad)
(bad)
cmp
int3
mov
xor
mov
adc
inc
push
sbb
push
fist
sbb
popa
jne
je
inc
or
test
or
xor
in
mov
repz
outs
or
inc
adc
inc
inc
or
out
or
dec
bound
or
pop
or
inc
sti
stos
clc
inc
movs
pop
mov
push
retf
rcl
add
pop
mov
retf
pushf
add
mov
mov
add
mov
pop
jbe
pop
mov
pop
enter
(bad)
out
pop
fimul
rcl
pop
mov
adc
js
lar
inc
lds
sub
dec
popa
outs
popa
addr16
es
add
addr16
push
jle
add
adc
xor
outs
setnp
adc
or
ins
dec
sbb
or
add
pop
and
add
mov
(bad)
in
add
sbb
hlt
ins
outs
ror
shl
(bad)
mov
push
add
or
push
shl
jp
mov
stos
adc
scas
add
push
aaa
cwde
adc
setl
xchg
inc
or
mov
les
or
cmps
or
cmc
ficom
sub
or
je
inc
cli
arpl
lods
jnp
shr
add
mov
add
mov
adc
clc
fdivr
push
fld
aam
outs
sbb
idiv
adc
mov
dec
dec
mov
outs
hlt
inc
pop
add
mov
add
call
sbb
shr
outs
or
add
add
sbb
shl
inc
pop
pop
mov
aaa
mov
bound
jg
mov
aaa
in
ficomp
mov
pushf
push
adc
mov
and
push
and
fisttp
inc
and
int
enter
mov
ror
fcomp
push
fwait
sub
in
or
mov
and
xor
shl
loopne
pop
aaa
imul
movs
mov
dec
popf
mov
mov
add
inc
pop
add
add
(bad)
cmp
paddb
or
jnp
js
dec
aam
push
inc
fisttp
dec
dec
data16
pcmpgtd
inc
cmp
addr16
fwait
jmp
or
enter
clc
inc
imul
push
push
jnp
in
in
(bad)
jmp
push
movs
fiadd
sbb
pusha
test
loop
das
sbb
mov
push
lds
xchg
fimul
push
fwait
mov
icebp
push
es
adc
loop
pushf
dec
xor
xor
test
or
or
inc
add
adc
or
mov
pop
outs
dec
mov
inc
xor
xchg
cmp
inc
cwde
pop
dec
pavgw
adc
add
addr16
adc
adc
or
inc
push
popa
jg
into
adc
bound
sti
repz
mov
inc
fs
mov
retf
add
arpl
mov
bound
push
clc
neg
pop
xor
push
cmp
push
mov
add
outs
or
and
fadd
outs
cdq
jbe
stos
shr
adc
inc
and
lds
iret
test
movs
sbb
in
js
add
add
inc
add
dec
fadd
inc
add
pusha
ud2
or
dec
clc
rcl
and
sbb
out
add
call
lds
pop
xor
or
aaa
pop
xchg
test
pop
dec
jae
jmp
add
xchg
iret
ss
push
and
fucomp
mov
ror
imul
mov
pusha
popa
inc
and
xchg
mov
mov
add
or
push
or
rcl
ss
sub
aam
inc
js
jo
push
push
or
aad
retf
mov
add
jae
repz
xor
loopne
stos
xchg
xchg
xor
pop
xor
popa
mov
clc
xor
gs
and
inc
mov
jae
fld
jle
and
dec
add
popa
inc
nop
cmp
add
sub
popa
add
sahf
add
out
dec
push
cli
jo
jae
or
sar
dec
aaa
dec
aaa
or
add
cmps
push
xor
mov
inc
loopne
dec
mov
jmp
shl
mov
pop
xlat
cwde
push
xor
add
inc
mov
push
mov
adc
adc
aad
fadd
add
sub
pop
stos
mov
jns
sbb
and
or
adc
and
popa
pop
add
je
push
push
xor
xchg
or
ins
test
add
(bad)
gs
or
push
sbb
jmp
bound
arpl
mov
cmp
pop
retf
and
fadd
xchg
inc
add
bound
ja
inc
xchg
mov
sub
cdq
scas
xor
push
add
mov
sbb
and
in
sbb
add
and
lods
push
xlat
jae
shl
adc
popaw
push
arpl
fwait
call
add
fadd
fdivr
pop
mov
(bad)
bound
out
pop
ret
(bad)
out
or
push
pop
loope
int3
adc
jb
mul
nop
jl
xchg
nop
imul
stos
mov
(bad)
mov
pop
push
jecxz
cli
xchg
(bad)
cld
add
push
lds
add
sbb
fs
xor
jmp
pop
add
pop
jne
add
test
shl
loopne
cs
jg
lds
dec
jo
sahf
mul
push
data16
lea
adc
loope
outs
ret
int3
and
fisttp
mov
and
add
arpl
sub
inc
outs
je
ins
push
ret
adc
mov
pop
test
call
loopne
xchg
movs
mov
pop
xor
mov
cmp
aaa
add
add
mov
push
add
mov
mov
mov
push
or
xor
sbb
mov
jle
or
(bad)
shl
int
add
pusha
or
pop
pop
ret
nop
cmp
mov
mov
cmps
push
in
clc
mov
cwde
jge
add
xor
inc
clc
test
jo
mov
(bad)
scas
xchg
dec
adc
push
or
add
rcl
mov
add
push
mov
mov
mov
js
pop
imul
xchg
add
in
and
mov
push
fcomp
add
rol
add
es
pop
movs
leave
mov
or
inc
and
aaa
cmps
outs
mov
mov
je
mov
stos
or
loope
ja
fcmovnu
add
push
xchg
xchg
jne
das
pushf
cmc
push
xchg
(bad)
push
imul
icebp
leave
sub
mov
das
mov
push
xchg
sub
jae
inc
daa
fistp
lea
lods
or
mov
inc
sub
and
ret
das
dec
pop
or
mov
dec
or
add
es
or
add
mov
mov
sar
jne
and
mul
pop
sub
mov
xchg
adc
sar
and
and
inc
sar
inc
loopne
ja
adc
or
js
out
mov
outs
mov
pop
test
mov
and
ja
mov
in
jbe
ja
movnti
jns
xchg
jo
push
outs
sbb
or
and
int
adc
outs
int
push
and
add
aaa
adc
outs
push
test
retf
outs
and
inc
mov
pop
cmc
outs
mov
retf
push
mov
mov
or
fst
les
add
push
cmp
dec
dec
andps
es
cmp
push
in
jle
es
dec
add
add
lods
xchg
fdivr
popa
lock
or
sub
test
pop
dec
push
mov
sbb
test
or
test
adc
ins
sbb
ficom
pop
shl
lods
iret
push
mov
mov
adc
jo
addr16
cmp
icebp
xor
inc
push
mov
pop
push
test
pop
jge
sub
sbb
in
loopne
adc
test
xlat
or
push
sbb
and
inc
add
jo
cmp
rcl
push
or
inc
xor
imul
push
pusha
adc
pop
cmp
pushf
adc
std
push
outs
cmp
jle
push
jnp
movntq
daa
and
jg
mov
daa
cmp
enter
and
jecxz
and
xor
in
sbb
jb
mov
test
movs
leave
add
dec
movs
iret
out
test
cmp
add
pop
cs
fmul
push
xchg
sub
dec
or
sub
cmp
test
adc
cmp
mov
(bad)
mov
pop
test
sub
sbb
inc
pusha
xor
add
aas
aaa
inc
in
mov
loopne
or
aas
sar
adc
aas
mov
fwait
aas
and
test
push
aad
adc
or
cmp
and
or
inc
or
pusha
ja
push
or
push
aas
push
jbe
arpl
mov
xor
aas
and
rol
xchg
or
add
aas
push
in
ret
popa
push
mov
das
xchg
and
leave
call
and
in
sar
add
or
cmp
repnz
push
sub
push
add
shl
test
aas
adc
xor
inc
and
ds
aas
jae
adc
add
inc
call
add
xlat
bound
jae
sti
sub
cwde
pusha
inc
nop
or
xchg
mov
aas
cwde
mov
pusha
mov
aas
xchg
in
and
jo
pop
shr
dec
lods
(bad)
js
mov
dec
or
inc
nop
test
adc
mov
cmp
es
aas
adc
pop
int
dec
aaa
add
sub
adc
add
test
adc
and
inc
push
adc
inc
mov
lock
inc
cmp
daa
add
sub
pusha
jns
adc
dec
aas
and
sub
loopne
les
sti
mov
inc
aas
push
ins
aas
add
add
jns
add
and
mov
ds
dec
and
and
int3
mov
xor
xchg
or
cmp
dec
cdq
popa
sbb
pop
sub
sub
pop
stos
mov
fdivr
aas
jge
pusha
rcl
test
imul
imul
add
pop
and
push
adc
es
enter
dec
or
add
and
or
push
aaa
mov
add
adc
mov
adc
in
(bad)
mov
sub
sub
jne
mov
adc
mov
in
rol
fincstp
and
lods
push
pop
pop
cmp
imul
mov
sahf
cli
inc
inc
jne
ins
into
mov
fistp
(bad)
aad
(bad)
cld
dec
data16
jno
cmps
sub
mov
stc
xchg
or
call
sbb
adc
sbb
scas
lods
lods
std
jbe
jmp
(bad)
push
or
inc
push
rol
and
and
stos
outs
push
ret
or
fbld
(bad)
stc
bound
add
add
dec
mov
cwde
sub
test
add
lods
imul
ins
push
mov
iret
sahf
cmp
adc
and
fdivr
pop
repz
jg
pusha
hlt
nop
mov
mov
mov
out
repz
push
inc
and
adc
cmp
in
add
and
mov
arpl
jg
mov
mov
loopne
push
mov
push
int3
(bad)
out
push
dec
xor
lock
cld
cmp
je
adc
pop
cld
fild
retf
fs
xor
push
push
push
mov
mov
dec
test
add
fstp
xor
mov
jle
int
scas
inc
dec
jne
out
outs
mov
mov
pop
dec
adc
pop
or
add
fisubr
in
test
push
sahf
pop
pop
ret
adc
(bad)
fcom
sub
jl
shl
ins
out
or
xchg
pop
add
(bad)
fisttp
pop
(bad)
or
inc
(bad)
ror
bound
adc
add
test
lock
or
jle
xor
xor
inc
mov
rol
ret
jmp
jmp
pushf
test
ss
jge
test
retf
adc
fdiv
ss
lea
loopne
sar
sbb
hlt
xor
sbb
or
jl
mov
add
jge
je
and
ja
sub
or
and
xor
mov
pop
sbb
mov
call
cmp
or
or
adc
adc
xor
inc
adc
mov
aas
push
jge
cmp
in
iret
inc
jne
pop
cmp
push
push
adc
nop
(bad)
dec
jo
push
cwde
xchg
jp
js
push
push
or
adc
xchg
push
cwde
loopne
bound
push
cmp
ret
fcomp
daa
xor
outs
icebp
in
clc
jmp
lds
movs
jo
push
pop
sbb
std
xchg
cli
fbstp
daa
mov
or
out
movzx
shl
(bad)
fimul
jl
inc
(bad)
dec
fstp
dec
mov
add
mov
adc
or
or
push
xor
je
popf
or
mov
jb
inc
shr
jo
or
sahf
adc
retf
adc
aad
in
mov
mov
add
lds
daa
pop
rcr
shl
retf
fisttp
jo
cli
(bad)
lods
jo
push
ret
aas
mov
mov
cmp
push
inc
dec
mov
cmp
ja
sbb
jnp
or
push
lea
shr
add
mov
outs
dec
lock
aad
sub
ja
test
jne
bound
push
lea
add
dec
mov
adc
add
jmp
xor
inc
ds
mov
lea
mov
dec
adc
lea
sbb
jecxz
mov
(bad)
lock
adc
loope
jb
popa
dec
xchg
push
lock
pop
js
jle
je
cmp
xor
pusha
fimul
pop
pushf
cs
lea
pop
loopne
(bad)
push
and
lds
cmp
cmc
daa
loop
mov
inc
fadd
je
add
mov
and
mov
inc
sbb
test
and
mul
cmc
rol
mov
mov
loopne
push
test
enter
shr
(bad)
push
fidivr
pop
xchg
dec
and
sub
stos
adc
shl
adc
add
cmps
enter
pusha
cmp
shr
push
push
xchg
add
dec
xchg
xor
cmp
pop
(bad)
cmps
jns
in
lock
adc
or
adc
pushw
or
mov
pushf
les
jbe
sub
test
arpl
and
popa
xlat
rol
js
cmps
or
lods
add
call
and
sbb
mov
push
dec
pop
add
fdiv
test
in
jmp
out
and
inc
dec
repz
or
push
or
les
sub
adc
jmp
and
sbb
or
rcr
ss
shl
sbb
adc
adc
int
cmp
push
adc
add
add
sbb
fsincos
int3
popa
sbb
jne
pop
adc
je
pop
lock
into
ror
(bad)
movs
call
daa
mov
enter
lea
jb
movs
pop
das
mov
int3
add
cli
xchg
mov
dec
rol
xchg
or
push
dec
or
add
sahf
mov
sub
lods
or
leave
(bad)
dec
cmpxchg
js
call
inc
push
jle
out
retf
mov
sub
dec
add
dec
or
jmp
pop
out
jp
or
je
cmp
push
adc
popa
or
cmp
inc
in
push
call
sbb
in
cmp
je
xor
add
jl
mov
(bad)
dec
cld
pop
imul
(bad)
xor
cmp
dec
clc
mov
add
jmp
int3
xchg
xchg
push
push
test
pop
fild
setne
imul
jg
pop
mov
jne
or
shr
stos
jnp
cli
pop
jne
scas
jbe
loop
sub
inc
fidivr
jne
ret
mov
rol
xchg
push
call
(bad)
retf
sbb
leave
inc
test
je
mov
loope
add
div
push
out
inc
inc
or
or
mov
es
mov
inc
adc
sbb
mov
sbb
movs
jns
ss
push
or
pushf
ins
mov
xor
cmp
je
mov
mov
or
pop
call
popa
mov
test
xchg
inc
mov
je
or
or
(bad)
push
mov
cwde
push
and
mov
sub
adc
mov
jg
pop
and
iret
xor
xchg
sbb
mov
idiv
push
mov
lock
sbb
inc
mov
loopne
add
dec
(bad)
inc
adc
shl
xor
dec
test
popa
and
popa
ficomp
ror
popa
imul
hlt
stos
pop
inc
mov
cmp
scas
stos
adc
jne
add
lods
les
sub
xchg
rol
adc
nop
xchg
not
loopne
xchg
cmovb
fadd
xchg
jle
push
arpl
fnstcw
call
sbb
push
xchg
in
add
cmp
mov
cmp
std
inc
jl
mov
pop
leave
enter
add
test
je
cmp
mov
jl
sbb
cmp
jne
adc
add
(bad)
jno
xchg
dec
fdiv
ins
sub
cmp
push
xor
xor
pminsw
sub
sbb
repnz
adc
fsub
test
mov
scas
call
adc
sbb
jo
xor
pushf
mov
cmp
jbe
sub
push
push
outs
pop
clc
retf
or
cmp
mov
js
jmp
and
push
mov
add
icebp
adc
shl
mov
jmp
sub
mov
adc
je
test
mov
xor
mov
push
fcmovnbe
fwait
inc
mov
jmp
sub
movs
sbb
call
inc
xor
push
shl
or
adc
mov
push
imul
jo
cmp
mov
mov
out
cmc
push
cvtpi2ps
adc
xchg
or
sub
sti
ja
jo
and
mov
faddp
test
cwde
out
or
enter
inc
dec
mov
push
ss
mov
xchg
add
dec
mov
mov
ins
or
jmp
pop
mov
cdq
adc
lock
aaa
xchg
ret
ja
mov
cwde
inc
in
push
sahf
nop
fnstenv
cmp
pop
jp
in
add
xor
inc
jns
jo
inc
sahf
inc
lock
dec
and
ss
add
stos
in
jl
rcr
shl
push
cmps
pop
fwait
cli
pusha
adc
sbb
adc
cmp
mov
aas
addr16
or
xor
mov
outs
fcom
mov
push
xlat
(bad)
loopne
pop
or
push
loopne
clc
jecxz
jle
and
mov
push
jmp
mov
in
sub
cmp
push
xor
sbb
push
push
call
leave
hlt
mov
loop
mov
mov
idiv
pushf
push
inc
add
cdq
sub
ror
cwde
mov
mov
sbb
cwde
cli
sub
or
je
in
pop
and
pop
xchg
test
or
nop
dec
push
jg
out
mov
ret
nop
or
push
pop
es
push
dec
imul
js
or
in
popfw
or
idiv
bound
xchg
sbb
ror
ret
sbb
and
ja
sbb
sbb
pop
hlt
mov
jb
les
cmp
call
int3
mov
test
(bad)
test
sbb
sub
mov
std
bound
sub
adc
pushf
add
or
lock
pop
mov
dec
dec
fiadd
push
xor
into
pop
in
aaa
adc
sti
push
adc
add
inc
daa
pop
sbb
and
inc
push
lahf
pusha
and
sub
sti
push
les
data16
add
jp
pop
jge
jnp
pushf
jne
jmp
push
pushf
adc
mov
fist
sub
sub
out
jb
push
shl
jbe
repnz
dec
adc
jl
neg
add
xchg
daa
fcomp
(bad)
mov
std
dec
cmp
add
mov
mov
call
fstp
leave
test
outs
ins
lods
adc
mov
inc
mov
pushf
je
mov
ins
add
xchg
pop
retf
int3
dec
dec
pop
in
ins
dec
push
retf
jl
inc
in
jge
or
mov
adc
xchg
lods
adc
push
or
test
jo
lea
sbb
loope
xlat
jb
and
mov
icebp
xor
clc
mov
inc
add
jmp
and
mov
push
push
outs
xor
fimul
or
pop
dec
mov
push
cmp
setg
bound
call
or
add
add
mov
jl
xor
add
in
xchg
rcr
sbb
inc
arpl
jbe
js
xchg
rcl
push
xor
and
xor
shl
fst
scas
add
xchg
std
rcr
add
mov
dec
dec
or
in
cmps
bnd
call
jae
pop
push
xor
cdq
hlt
cs
lea
cs
cdq
mov
and
or
pop
inc
push
push
push
dec
repnz
pop
cmp
outs
je
mov
pcmpgtd
cmp
adc
sbb
push
fisttp
adc
or
or
lock
test
jne
(bad)
pop
cmps
mov
mov
add
ins
cmp
adc
push
pop
cmp
loopne
mov
fwait
or
movs
cmp
das
pop
out
nop
data16
clc
(bad)
pop
in
fisub
sbb
mov
sbb
es
add
push
sbb
test
inc
sbb
cmp
inc
ffreep
push
lods
push
das
popf
cld
mov
lods
xchg
pop
popf
call
push
mov
rol
mov
jne
jle
push
(bad)
out
or
dec
lds
clc
push
sbb
adc
xor
add
mov
sbb
push
jne
push
push
sub
imul
mov
jecxz
pop
pop
popf
lahf
jmp
jge
icebp
lock
push
inc
std
out
and
dec
jo
or
out
or
lar
call
sub
hlt
sbb
inc
cmp
push
(bad)
addr16
icebp
jbe
sbb
jle
out
xor
test
sbb
push
adc
ret
xchg
test
inc
inc
sysret
rcl
(bad)
std
xchg
push
mov
call
arpl
jmp
rol
jecxz
mov
outs
sbb
loopne
jmp
popa
adc
(bad)
test
jne
jmp
inc
mov
cmp
(bad)
retf
inc
push
nop
stos
into
jmp
mov
lahf
adc
test
jne
or
aad
adc
push
mov
ds
push
out
call
jl
inc
xor
mov
jmp
out
dec
jne
jns
cld
sub
imul
adc
xchg
sbb
or
scas
mov
dec
mov
add
jge
cwde
mov
dec
xchg
call
or
ds
pop
lea
aaa
rcl
mov
or
ret
test
mul
or
scas
inc
adc
pop
dec
loopne
mov
sub
mov
dec
sub
push
adc
cmp
jl
push
push
jge
cmc
iret
xor
adc
jmp
mov
sbb
enter
imul
std
pop
jge
ins
xchg
sar
push
cdq
xchg
scas
cmp
inc
cld
inc
(bad)
mov
and
(bad)
mov
cmps
fiadd
scas
mov
pusha
in
push
inc
pop
lods
cmp
lock
rcr
das
jmp
and
push
outs
add
xor
mov
not
int3
iret
mov
push
clc
mov
pop
inc
add
push
mov
data16
inc
dec
mov
arpl
dec
push
fadd
ja
inc
xchg
adc
xor
push
jmp
pop
or
es
jne
mov
jmp
or
sub
stos
and
push
and
inc
fimul
in
shl
sub
adc
jo
and
add
pushf
inc
dec
mov
lock
and
pop
icebp
xor
push
sbb
xor
dec
and
mov
mov
fs
jne
iret
or
stos
sub
xchg
sar
ret
pushf
mov
xor
jmp
pop
cmps
test
pop
je
cmps
es
jo
outs
outs
je
or
(bad)
push
inc
and
xor
and
and
and
and
add
in
and
sar
add
push
add
es
jb
jae
idiv
pusha
mov
dec
popaw
jne
je
int3
add
dec
lahf
or
inc
add
or
shr
adc
push
lock
pop
int3
or
and
add
inc
push
xlat
add
popa
idiv
pop
mov
add
loopne
mov
int3
test
push
adc
sbb
jbe
jbe
jge
jle
adc
and
mov
aad
xor
sub
or
push
push
fs
push
and
xor
sar
jle
sahf
out
mov
dec
push
scas
vmwrite
xor
and
jmp
add
pushf
gs
mov
and
adc
aaa
dec
sub
add
or
mul
test
jb
arpl
inc
and
jo
fist
data16
or
inc
sub
add
push
pop
inc
jp
adc
xchg
inc
mov
pop
sar
ds
push
cdq
clc
add
jo
dec
jbe
add
pop
or
call
cmp
or
sbb
jnp
(bad)
test
pop
js
ja
push
jo
push
ja
mov
das
ror
pusha
stos
scas
loope
adc
cmp
mov
sbb
mov
or
sbb
and
or
sbb
push
out
fidiv
or
sub
les
jo
adc
push
jno
push
movs
daa
arpl
or
(bad)
mov
jae
or
pop
and
sub
pop
jno
cmp
pop
pop
fwait
xchg
fwait
movs
nop
mov
popa
mov
enter
pop
pop
push
sbb
ss
in
aad
out
pop
push
fild
jmp
jne
hlt
cs
push
and
lods
push
add
test
das
pop
sub
add
inc
mov
mov
lods
pop
inc
or
add
or
and
mov
pusha
cs
pop
mul
sbb
je
mov
pop
test
lods
rep
jae
mov
scas
pop
sub
fsubr
inc
(bad)
push
lods
adc
mov
out
test
mov
sbb
(bad)
cmp
jne
int
push
add
mov
adc
push
int3
mov
mov
enter
je
or
(bad)
add
push
dec
cmp
jl
lea
mov
and
loopne
in
or
mov
call
lea
jmp
mov
dec
push
scas
loope
mov
adc
adc
(bad)
jae
adc
sbb
ss
sbb
into
xchg
or
sbb
ror
mov
nop
dec
add
cdq
in
je
bound
cld
clc
call
test
jne
mov
(bad)
enter
lock
daa
mov
loope
repnz
mov
loop
push
mov
mov
or
jecxz
mov
xor
mov
pop
lea
sub
scas
icebp
mov
sbb
daa
aam
dec
pusha
adc
xor
add
shl
jp
enter
or
ret
or
add
out
adc
sub
adc
xor
or
shl
push
adc
call
sbb
or
or
jl
mov
mov
jnp
bound
(bad)
jg
push
dec
cmp
mov
xlat
movups
rol
mov
push
lods
test
mul
out
div
pop
push
mov
test
jbe
jae
xor
mov
hlt
cmps
xor
mov
mov
adc
adc
adc
jbe
ror
fsub
adc
or
dec
adc
add
inc
cmp
repz
jae
xchg
pop
test
imul
jo
add
fild
xor
lock
pushf
push
push
mov
outs
fdiv
push
daa
push
mov
or
nop
mov
mov
loopne
mov
jbe
add
pop
pop
push
mov
jmp
jle
jo
sbb
sbb
cmps
aaa
movs
or
or
dec
pop
xor
mov
push
cmp
inc
ins
mov
inc
mov
in
sub
xlat
stos
push
fbstp
mov
js
jp
sub
push
add
inc
shl
jmp
lea
pop
int3
push
pusha
xchg
in
sub
and
or
int3
sahf
fisubr
lds
aas
push
enter
fwait
das
sti
ja
movs
dec
call
jmp
or
sbb
jne
sbb
inc
je
rcr
add
dec
test
jl
inc
adc
cmp
jmp
fdiv
sbb
call
mov
push
or
xor
and
outs
add
fadd
je
push
mov
into
rcr
mov
sbb
jmp
mov
int
mov
push
ja
xchg
add
push
push
or
and
popw
pusha
xor
push
cmp
pop
icebp
mov
mov
loopne
xchg
jnp
cs
cmp
add
xor
fmul
push
add
hlt
movs
inc
xchg
(bad)
fisub
clc
xor
xor
jmp
push
push
push
rcr
push
sub
adc
pop
in
lock
mov
add
or
adc
bound
inc
and
or
jno
or
dec
add
rol
inc
and
add
dec
jne
aaa
test
dec
mov
sbb
cmp
dec
jle
aaa
add
adc
push
movs
loopne
push
or
xchg
add
xor
jne
fcomp
test
mov
(bad)
aas
and
inc
mov
aas
aam
or
je
mov
out
loope
enter
pop
shl
int3
bound
pop
jl
cmp
inc
add
jecxz
mov
add
sar
push
loop
in
pop
inc
(bad)
int
dec
add
pop
inc
or
mov
pop
cld
loop
xor
mov
sbb
push
adc
aas
adc
stc
les
ins
in
add
sub
pusha
pusha
cs
adc
add
push
pusha
adc
dec
push
test
test
mov
(bad)
dec
cmp
push
cmp
loopne
in
test
pusha
ret
(bad)
adc
fisttp
add
jb
mov
inc
loope
sub
dec
popa
sub
lods
push
mov
adc
adc
lock
add
ror
mov
sbb
mov
enter
pop
xor
imul
push
popa
xor
sahf
push
mov
arpl
rcr
mov
mov
inc
enter
shl
ja
adc
not
sbb
mov
popa
push
or
jl
dec
dec
cmp
add
sbb
mov
mov
ret
push
sbb
adc
xor
das
xor
mov
inc
inc
cld
cs
or
inc
xlat
mov
je
pusha
fist
add
add
add
mov
gs
nop
leave
push
sub
fcom
push
cmp
pusha
push
xchg
out
pop
out
int
mov
inc
or
inc
push
pushf
inc
mov
scas
popa
mov
dec
pusha
pop
sbb
outs
in
into
test
pop
dec
call
(bad)
add
loopne
adc
loop
cmp
shl
push
pop
sbb
pusha
in
sub
push
ret
xor
jmp
cmps
neg
cmps
retf
imul
jo
and
inc
jo
mov
inc
inc
scas
sub
jo
jae
loopne
jb
in
inc
iret
fld
ja
movzx
push
sbb
jno
outs
push
adc
dec
cmp
into
adc
adc
add
add
bound
cmp
push
xchg
pop
scas
push
mov
jne
inc
or
btc
add
cmp
and
in
mov
cmp
arpl
mov
cmp
cmovl
fdivr
jge
mov
xchg
mov
xchg
iret
mov
adc
add
cwde
aad
stos
ins
outs
test
mov
dec
mov
std
inc
and
jle
inc
fild
xchg
dec
pushf
test
sub
and
pusha
push
into
push
or
push
cwde
push
jl
or
in
xchg
adc
mov
sub
or
add
pop
bound
pop
or
jo
sbb
ins
in
les
inc
hlt
aaa
and
push
adc
push
adc
cmp
adc
add
adc
inc
fmul
jbe
(bad)
arpl
and
mov
div
stos
repz
or
cmps
pop
cwde
jmp
or
xor
jle
dec
hlt
sbb
or
into
sub
lea
fucom
pop
js
jne
mov
lods
sub
jg
or
add
out
pop
mov
mov
pop
add
in
jne
inc
mov
lock
scas
(bad)
not
(bad)
sbb
mov
adc
cmp
add
movs
out
cdq
add
push
in
fadd
push
sub
test
cmc
lea
push
add
sbb
pop
loopne
mov
mov
fdivr
xchg
pop
push
add
repz
sbb
mov
push
divps
jo
jo
or
xchg
push
adc
adc
cmp
popa
cwde
popa
mov
(bad)
das
xchg
shl
pop
sbb
loopne
in
jmp
sub
and
data16
int
xor
rol
(bad)
int3
xchg
push
rcl
ror
sbb
jne
push
mov
jmp
dec
pop
aaa
fdivr
ret
cmp
xchg
push
mov
xchg
or
dec
lahf
pushaw
mov
repnz
push
pop
xor
mov
sub
or
bound
dec
fmul
jecxz
mov
aaa
xor
pushf
jo
cmp
pusha
aam
pop
mov
sub
add
loopne
cmp
pop
ins
mov
adc
cmp
jne
mov
dec
jne
xchg
lock
sbb
out
xchg
fld
add
inc
jmp
pop
adc
ror
push
or
test
adc
call
adc
mov
jl
or
or
and
add
mov
add
fisubr
and
(bad)
outs
sar
add
push
pop
popf
mov
mov
xor
arpl
bound
lea
imul
push
or
(bad)
push
pmaxub
lock
mov
lods
jb
sbb
sete
loop
fwait
xor
pusha
jb
loopne
pop
add
sbb
sbb
rcpps
xor
jle
mov
mov
add
mov
lods
popa
cmps
cmps
jecxz
add
loop
outs
aad
cmp
add
enter
mov
jmp
inc
or
mov
clc
dec
mov
xor
loopne
sbb
or
adc
inc
pop
nop
loop
ret
cmovbe
bound
or
dec
shl
push
dec
in
jnp
lds
jnp
dec
dec
dec
or
mov
sbb
xchg
sbb
ret
xchg
lds
push
addr16
push
(bad)
fisubr
pop
mov
push
inc
mov
pushf
pop
xor
sub
mov
sub
imul
inc
dec
test
dec
mov
mov
(bad)
(bad)
mov
in
push
push
push
or
or
push
int3
jp
adc
inc
clc
pusha
and
inc
sahf
xor
setne
dec
lahf
dec
pop
mov
dec
inc
sbb
sub
inc
mov
xor
pusha
dec
lods
js
pop
push
pop
shl
test
adc
inc
add
xchg
jmp
clc
push
push
inc
cmp
hlt
leave
fisub
mov
xchg
aam
cmp
les
dec
gs
sub
enter
and
inc
push
mov
push
sub
add
rcl
pusha
push
mov
imul
cld
jnp
ss
outs
add
jp
outs
ds
add
and
dec
and
add
pop
imul
out
push
sub
bound
in
pop
stos
inc
sub
out
popa
add
pop
add
cmp
jne
adc
lahf
xor
out
ss
in
cmp
mov
pop
or
dec
push
(bad)
mov
das
inc
test
jne
in
mov
xor
aam
xor
cld
cmps
stos
or
cs
icebp
add
adc
add
inc
out
fs
sub
nop
mov
iret
daa
dec
and
dec
scas
dec
inc
(bad)
ins
je
add
and
xchg
pop
pop
xchg
inc
ds
loopne
mov
mov
mov
call
add
pop
xor
add
sub
add
mov
nop
dec
ffreep
jo
push
mov
add
out
cmps
sbb
lock
lea
cmp
(bad)
aas
pushf
push
out
mov
mov
std
xlat
lea
or
ins
mov
pop
or
add
dec
fld
out
leave
and
ss
or
or
out
push
cmp
mov
mov
lods
shl
mov
and
inc
push
xor
inc
push
ja
retf
add
mov
or
mov
jmp
push
pop
icebp
adc
into
test
xchg
(bad)
cmp
mov
dec
jne
push
out
ret
push
(bad)
imul
lea
clc
push
cmp
jne
inc
jmp
dec
cmp
repnz
add
imul
pusha
shl
dec
mov
mov
mov
mov
cmp
or
add
and
rcr
fisubr
lea
adc
jmp
mov
mov
mov
mov
and
mul
xchg
leave
dec
out
mov
mov
mov
push
mov
les
call
or
push
rcr
cmp
sbb
inc
enter
sub
fsincos
cmp
je
sbb
inc
pop
push
and
push
fist
and
inc
add
push
mov
addr16
xchg
ins
or
jge
or
test
test
or
enter
pop
add
into
or
clc
ss
nop
cmp
xor
cmp
and
xlat
ret
rol
cmp
xchg
das
test
xor
dec
xor
pusha
call
test
into
jno
outs
cwde
loopne
dec
jl
aad
xchg
adc
and
mov
push
pop
adc
push
enter
push
jecxz
push
and
mov
jne
adc
aaa
jmp
lea
cmp
jo
fisub
dec
ds
ins
xor
sbb
push
cmp
in
inc
add
or
push
push
mov
aam
retf
(bad)
stc
clc
lahf
fcomp
sbb
dec
jl
or
rcr
push
outs
pop
add
adc
inc
(bad)
frstor
fisub
mov
ret
dec
cmp
mov
ror
fsubrp
cmp
cmp
imul
sbb
xor
dec
add
scas
gs
pop
retf
jne
call
hlt
dec
lods
sete
xor
cs
scas
fadd
clc
in
jp
mov
cmc
nop
test
rol
cmp
(bad)
jmp
or
ret
sti
mov
push
test
xor
test
(bad)
(bad)
inc
cwde
icebp
add
retf
xchg
sbb
xchg
sbb
mov
icebp
sub
cld
daa
movs
sub
sbb
sbb
aaa
xchg
ret
push
cmp
or
xor
inc
mov
ffree
mov
sahf
rcl
je
sub
sbb
mov
retf
and
push
sub
push
inc
dec
test
dec
adc
ror
ror
push
fwait
jb
hlt
jp
arpl
std
add
mov
fs
movs
adc
or
(bad)
cld
adc
and
or
or
or
popf
sar
or
js
add
pop
mov
aaa
pop
jmp
mov
mov
test
test
add
xor
daa
push
es
mov
and
popa
das
ss
add
inc
nop
sahf
inc
add
loopne
mov
dec
and
(bad)
(bad)
cmp
ss
add
add
dec
test
stos
mov
jl
mov
adc
ins
xor
xor
call
mov
mov
sub
mov
test
iret
sbb
ret
pop
loopne
imul
mov
add
shl
imul
pusha
pushf
shl
aaa
push
dec
outs
imul
push
aad
imul
gs
bound
xor
xor
xor
cmps
adc
shl
inc
or
(bad)
call
adc
adc
out
pop
jg
pop
int3
loope
jmp
cmc
fstp
fimul
add
sbb
jo
mov
adc
add
cmp
push
scas
and
stc
push
and
(bad)
pop
les
add
push
ror
(bad)
psubb
fimul
add
dec
inc
outs
ins
popa
aas
cmp
pusha
pusha
loop
or
ja
jb
test
mov
sub
push
jle
popa
sub
adc
inc
aas
fild
jg
ret
popa
imul
sahf
mov
fisttp
test
dec
inc
push
add
mov
test
in
adc
and
stos
cmp
enter
xor
aas
pop
mov
lock
sub
call
xor
adc
lock
(bad)
sbb
fwait
cmp
outs
(bad)
mov
fstp
stc
mov
add
adc
gs
or
je
test
sbb
(bad)
xor
ror
dec
xchg
push
imul
cs
mov
outs
sbb
mov
pop
ret
mov
push
xor
xor
or
jnp
loopne
or
inc
jl
add
lock
daa
inc
mov
cdq
mov
jnp
pusha
xchg
and
sbb
add
jo
inc
pusha
pop
idiv
add
pop
fstp
jno
and
sbb
and
adc
fldenv
sub
(bad)
jmp
jl
jge
mov
cs
popa
js
push
mov
ins
pop
outs
aaa
push
adc
je
scas
jo
arpl
ret
or
and
sub
inc
xor
fst
xor
arpl
xchg
rcr
je
add
and
js
mov
aad
mov
cli
mov
call
in
mov
xchg
pop
imul
movs
in
cs
test
dec
call
inc
jmp
push
cmps
mov
and
and
inc
(bad)
rcr
pushf
out
push
push
(bad)
lds
mov
inc
fcomi
cmp
cmp
in
inc
dec
ret
add
ret
add
in
push
jae
cmp
jmp
in
mov
add
ret
lahf
jno
inc
mov
adc
mov
ja
dec
mov
jecxz
fwait
xchg
in
sar
(bad)
(bad)
call
pop
cmp
stos
push
adc
sub
add
call
fwait
add
dec
je
push
push
push
mov
lea
(bad)
aaa
or
xchg
pop
push
mov
loopne
in
dec
pop
clc
push
xlat
push
repnz
push
pop
aad
cmp
mov
(bad)
adc
mov
cli
js
je
xchg
cmps
add
mov
ret
call
xor
jg
rol
ja
push
sbb
imul
or
lock
mov
sbb
jl
cmp
xor
cwde
and
push
xor
xchg
jae
or
jmp
adc
add
es
call
js
push
mov
shl
add
xchg
sub
adc
retf
fwait
mov
or
mov
ja
xor
inc
xchg
cmp
cmp
xchg
push
add
ret
pop
mov
jno
jo
or
scas
imul
push
cdq
xor
lods
je
sbb
pop
(bad)
arpl
jbe
adc
jnp
cmp
inc
stos
sbb
mov
and
xchg
jmp
mov
cmp
(bad)
into
out
mov
rcr
(bad)
adc
mov
sbb
jo
add
je
sbb
inc
cmp
jnp
sub
hlt
xor
xchg
mov
cmp
mul
lds
add
add
push
adc
push
jo
sbb
push
and
push
mov
or
mov
sbb
pop
or
mov
pop
and
leave
adc
sub
sbb
sub
mov
mov
aad
and
xchg
mov
and
sbb
fldl2t
jno
adc
push
inc
pop
jne
adc
xor
test
sub
sub
inc
xchg
neg
dec
and
scas
sub
dec
dec
jne
xor
adc
push
fild
dec
sbb
arpl
shr
in
push
adc
shr
ret
adc
or
mov
pushf
jmp
lea
mov
pop
xlat
je
xchg
xchg
sub
xchg
les
push
test
inc
mov
xchg
or
fchs
cmp
push
fidiv
add
leave
sub
jecxz
xchg
pusha
inc
mov
or
mov
adc
mov
add
inc
adc
jg
and
sub
inc
loope
mov
lahf
xchg
es
inc
lock
aad
imul
inc
rcr
(bad)
jns
ret
je
xchg
cwde
push
(bad)
inc
or
or
adc
ins
xor
jmp
xchg
and
jecxz
cmp
test
rcr
inc
mov
push
xor
cmc
inc
xor
jl
test
or
or
(bad)
inc
inc
cli
fucomi
sahf
dec
mov
loopne
leave
inc
pop
imul
inc
sub
inc
or
sbb
movs
add
pusha
cdq
sbb
jo
cmp
inc
test
sub
fisub
mov
inc
fsub
adc
outs
in
nop
or
or
mov
mov
add
jno
inc
repz
inc
and
pop
(bad)
adc
call
clc
pop
mov
aad
enter
xchg
cli
add
lahf
xor
push
push
or
and
pop
push
das
push
icebp
jmp
add
mov
and
sbb
fwait
test
sbb
test
shr
cmp
cs
(bad)
fimul
lods
push
fstp
mov
and
cmp
xor
fsub
and
and
and
(bad)
out
cmp
psrlw
mov
sbb
imul
xchg
jo
cli
das
cmp
push
dec
pop
mov
add
(bad)
push
or
jl
mov
imul
pop
je
mov
mov
mov
jmp
ds
inc
lea
xchg
popa
mov
jns
xchg
dec
mov
mov
je
inc
and
(bad)
shr
lock
adc
out
loope
pop
fdivr
cmp
scas
arpl
cld
xor
pop
inc
jne
pop
mov
sbb
test
jne
das
aad
jb
test
clc
jmp
xchg
ret
mov
jb
loope
loope
enter
es
fild
mov
sbb
test
outs
push
mov
aas
add
or
fcom
clc
mov
push
push
movs
inc
or
and
mov
adc
jns
or
ja
cmp
and
mov
mov
mov
sti
push
xchg
sub
and
adc
outs
inc
add
jo
daa
popf
popf
jns
(bad)
xchg
rol
pop
or
fcom
aaa
(bad)
or
pop
xor
jns
loop
shr
push
push
pop
sub
imul
psubsw
inc
jmp
adc
and
sbb
leave
or
nop
jp
mov
push
or
gs
cld
loope
out
outs
mov
jecxz
pop
jo
jno
movs
add
mov
int
sahf
ret
das
mov
fmul
sub
add
(bad)
sbb
xor
jae
jge
ja
(bad)
shl
push
lea
sti
adc
loope
or
lods
xor
fs
movs
jg
xchg
cmp
inc
mov
(bad)
les
jecxz
mov
cmp
jle
mov
sti
neg
dec
push
jge
mov
sub
daa
fnstsw
in
and
add
or
scas
(bad)
mov
adc
mov
jo
das
inc
mov
or
jecxz
test
push
pop
cmp
mov
addr16
ror
xor
or
rol
imul
add
cmp
xchg
dec
push
imul
arpl
inc
push
jne
fucomip
lsl
adc
arpl
lods
and
sti
jg
mov
xchg
adc
sbb
mov
push
repnz
dec
sti
sub
ficom
add
dec
outs
je
mov
xor
or
or
aas
lea
add
into
sub
cmp
dec
pusha
cmps
jnp
cmp
sbb
push
jbe
add
xchg
and
xchg
dec
push
xchg
aam
push
dec
loopne
push
push
xchg
jae
xor
movs
outs
or
adc
add
adc
les
add
add
loope
add
mov
add
inc
add
loopne
add
cli
and
pop
cmp
sub
cmp
retf
movs
adc
adc
adc
adc
addr16
push
inc
sub
(bad)
aam
add
cld
inc
mov
or
xchg
jmp
and
xchg
add
add
cmc
or
das
inc
xor
sti
pop
cmp
inc
sbb
jg
add
loopne
or
cmp
mov
movs
inc
pushf
push
or
dec
push
sbb
out
xchg
mov
daa
dec
or
sub
adc
adc
sub
add
stc
or
cdq
or
jl
test
add
sbb
xor
xor
cmps
xlat
pusha
dec
push
sar
adc
or
ret
mov
call
pop
xchg
sub
in
lods
std
or
sbb
jns
add
push
sub
loop
push
inc
lahf
xor
ret
sbb
push
leave
aam
jmp
test
xor
loopne
mov
jno
pop
in
movs
xor
inc
cs
jbe
sbb
pop
(bad)
mov
call
test
sbb
dec
sti
sbb
movs
pop
push
out
sbb
add
dec
pushf
mov
and
push
gs
adc
scas
mov
scas
jl
ret
push
out
(bad)
(bad)
call
in
or
push
pop
mov
mov
pop
sar
add
je
pushf
adc
movs
scas
add
in
mov
cs
mov
inc
inc
push
or
jle
adc
jl
je
pop
or
aam
mov
adc
int
add
xchg
sub
lahf
je
mov
ins
or
add
pop
jae
ret
or
rcr
in
sbb
add
arpl
rol
or
fcomp
and
cmp
push
and
jmp
fadd
loopne
pop
dec
ins
inc
pusha
pop
jo
and
jne
adc
add
fidivr
sbb
pop
xor
pop
cs
lea
cmc
sbb
bound
pop
push
sbb
sub
fcom
push
adc
sbb
pop
pop
jmp
outs
sbb
test
movs
rol
adc
push
xchg
xchg
or
adc
inc
pop
cmp
ffree
adc
add
and
adc
addr16
rcr
lods
outs
idiv
push
inc
sbb
leave
(bad)
push
cmp
retf
cmp
or
aaa
das
in
aaa
adc
pushf
jno
jbe
push
push
aam
shl
(bad)
mov
and
ss
xlat
push
aaa
cld
mov
pop
jle
add
test
inc
jo
inc
jmp
inc
cmp
inc
shl
or
jbe
cwde
mov
dec
cmp
out
fs
inc
inc
cmp
in
outs
inc
mov
out
sub
mov
repz
inc
dec
mov
(bad)
or
pushf
loop
call
sbb
sbb
mov
push
lea
ror
mov
loopne
mov
add
loopne
adc
sbb
repz
or
js
js
icebp
fnsave
aas
cwde
mov
or
sbb
mov
fbld
mov
ret
out
div
call
xchg
and
call
ins
pop
cwde
or
pusha
lods
mov
test
lods
add
clc
shl
enter
rcl
adc
mov
in
sub
fwait
push
in
xchg
sbb
dec
stos
dec
cmp
mov
test
js
inc
aas
ds
push
mov
rcr
call
add
fst
fdiv
jmp
push
in
add
fmul
nop
or
adc
inc
pop
arpl
mov
inc
adc
inc
scas
sbb
adc
imul
inc
pop
shr
mov
movs
les
sbb
xor
lea
aas
sub
cmp
iret
pop
enter
jge
push
or
adc
and
mov
cmc
mov
jnp
adc
adc
cmps
or
or
add
mov
out
or
and
or
dec
xchg
cmp
xchg
daa
fsubr
movs
lock
jecxz
jno
test
push
adc
cmp
add
cs
jge
sahf
cs
lea
push
enter
mov
jae
jmp
cmps
jns
fmul
dec
sub
pusha
stos
xor
push
sub
cwde
xor
cmc
loop
pop
and
mov
mov
shl
out
cwde
xchg
jbe
es
sub
pop
or
shl
adc
or
ret
cmp
jne
jne
push
out
mov
ret
pop
inc
sub
pop
cmps
mov
fiadd
and
cmp
ds
jno
and
and
cmp
loope
icebp
mov
jmp
inc
dec
jne
or
cmp
or
and
and
pop
out
pop
bnd
add
sbb
fiadd
mov
sub
(bad)
ficomp
adc
loopne
jl
fisubr
jmp
loope
retf
ins
mov
stos
ret
fs
push
pop
imul
xor
pop
pop
or
sti
mov
inc
mov
mov
dec
add
push
loopne
stos
scas
jnp
cmp
jle
add
adc
jg
push
movs
adc
sahf
push
scas
add
inc
dec
bound
int
xchg
pop
or
inc
or
cmps
sub
sub
jo
call
push
jmp
sub
in
xchg
push
push
dec
xor
push
iret
cmps
pusha
je
dec
gs
in
test
push
jne
push
xchg
jb
xchg
lahf
push
push
push
movs
ins
call
clc
jns
fs
mov
retf
sbb
sbb
clc
test
daa
repnz
and
repz
or
fiadd
push
sub
jmp
xor
jmp
arpl
xor
int
or
(bad)
out
cmp
daa
scas
data16
lds
dec
std
mov
ins
cld
int
cmp
outs
jb
sbb
in
daa
adc
push
mov
scas
mov
or
push
ror
push
cwde
pop
mov
push
dec
jg
jo
inc
and
lods
jae
setg
(bad)
outs
scas
xchg
setle
push
iret
mov
rcr
mov
xchg
lods
cmc
iret
cdq
arpl
test
sub
test
mov
adc
lods
xchg
jo
lods
stos
jmp
in
fsubp
mov
cbw
gs
cmp
test
idiv
mov
iret
dec
mov
sub
pop
inc
out
xor
lds
adc
inc
in
adc
dec
in
out
push
inc
or
sbb
pop
add
dec
icebp
lods
nop
xchg
(bad)
lock
mov
push
int3
test
pop
mov
xor
xor
cmp
cmp
or
bound
xchg
out
in
mov
pop
inc
sub
(bad)
jp
or
inc
pusha
je
mov
pop
lock
xor
dec
add
xchg
sub
bound
dec
adc
dec
push
xchg
outs
bound
push
and
test
ins
fcom
dec
push
ror
cmp
add
adc
iret
call
dec
fld
iret
fdivp
popf
jp
sbb
push
or
inc
iret
call
inc
iret
or
scas
jge
inc
daa
adc
sub
cmps
push
adc
test
cmps
add
iret
sub
push
enter
cli
push
test
pop
and
int
int3
repz
rcl
cmp
mov
xchg
mov
fadd
add
jl
jno
adc
inc
fmulp
mov
fcomp
jo
jg
jp
das
into
es
mov
sub
pop
mov
or
loopne
sub
mov
mov
test
pop
lods
je
addr16
jne
stos
js
push
test
ror
dec
rol
push
fcom
fnstenv
dec
loopne
(bad)
mov
and
push
enter
loopne
xor
inc
mov
ja
es
push
ss
cmp
inc
cmp
jmp
add
aam
sahf
mov
sbb
mov
cmp
es
stos
out
jo
sub
xor
retf
sbb
into
jo
jmp
test
cmc
xchg
xchg
sub
sbb
imul
push
repnz
or
(bad)
or
or
mov
jmp
adc
pop
(bad)
retf
push
les
xchg
pop
push
movs
xchg
fild
push
(bad)
cmp
js
pusha
jmp
pop
mov
sbb
pxor
or
ds
test
jmp
dec
pop
push
leave
or
test
dec
sbb
dec
(bad)
icebp
add
cmp
imul
adc
add
cmps
cs
xchg
stos
inc
mov
xor
pusha
mov
add
mov
movs
sub
inc
jl
cmp
ss
push
mov
adc
in
mov
jo
sub
jl
clc
mov
in
into
jl
push
dec
sbb
mov
add
loopne
xchg
mov
pop
cdq
sbb
aad
xchg
pcmpeqw
mov
xor
loop
cmp
pusha
sbb
adc
sub
aam
aam
stos
push
lea
mov
sbb
add
ret
cmp
jne
jp
pop
inc
ds
mov
adc
mov
mov
push
xor
jl
or
sbb
jle
mov
fisttp
pop
xlat
or
loopne
out
push
and
xlat
loopne
sub
movs
pop
and
cmps
inc
jp
push
inc
stos
or
popa
sbb
sbb
pop
sbb
adc
call
(bad)
push
in
adc
fwait
cmc
fidiv
inc
jnp
hlt
call
add
sub
fiadd
imul
or
das
daa
nop
or
daa
test
test
pop
data16
or
jne
pop
inc
daa
pop
dec
dec
jb
cwde
push
sub
and
jb
add
scas
daa
or
mov
daa
ror
push
stc
movs
adc
mov
clc
dec
pop
xlat
push
or
add
cmc
push
test
fbld
jge
outs
sub
daa
jns
adc
adc
or
or
and
test
(bad)
adc
sbb
dec
add
daa
cmc
ret
nop
push
aaa
inc
mov
xchg
mov
cld
ins
sub
dec
std
cwde
pop
cmp
or
inc
daa
dec
inc
mov
or
pop
loopne
push
test
add
jns
test
sub
mov
daa
xchg
and
or
lock
mov
inc
sub
retf
daa
test
mov
or
jmp
push
and
daa
(bad)
adc
sub
and
int
cli
or
daa
or
bound
or
in
aas
mov
fst
daa
mul
adc
xor
lods
daa
in
inc
ins
sbb
dec
adc
xchg
push
add
movs
and
sub
test
push
push
daa
imul
push
mov
sub
push
daa
push
adc
add
xor
push
out
inc
test
daa
loop
test
scas
or
je
nop
and
or
sub
and
fisub
push
xor
and
jl
test
daa
push
stc
or
das
aam
daa
or
sbb
lods
das
daa
or
stos
sub
daa
mov
cmp
push
daa
adc
add
aam
or
test
or
sbb
mov
mov
push
adc
daa
push
add
xchg
cmp
sbb
dec
cdq
fmul
daa
adc
imul
sbb
or
fbld
daa
inc
inc
push
mov
jmp
daa
movs
inc
das
aam
and
daa
or
and
daa
cmc
daa
leave
mov
or
mov
push
stos
mov
adc
daa
mov
xor
and
and
mov
pop
movs
daa
adc
sub
mov
add
cwde
push
or
ja
lahf
nop
daa
test
mov
pop
loope
sub
daa
repz
daa
sbb
mov
daa
jg
push
mov
mov
or
mov
push
mov
rcl
loopne
or
mov
adc
aas
es
and
or
xchg
sbb
sbb
xchg
sub
daa
and
push
call
daa
jae
test
daa
mov
add
push
test
stos
daa
push
xchg
or
add
and
jecxz
test
sub
mov
inc
in
js
jp
inc
daa
je
sbb
sbb
movs
inc
test
mov
fwait
push
into
sub
and
adc
push
jo
dec
movs
mov
cmps
cmp
sbb
jg
mov
ins
adc
cmp
js
xchg
xchg
in
and
push
xchg
or
adc
jl
push
jmp
(bad)
shl
add
mov
add
and
or
ret
sbb
jb
aaa
pop
add
out
mov
xor
push
lahf
push
inc
test
loopne
dec
hlt
or
adc
pop
mov
loopne
loope
cmp
adc
das
push
jmp
adc
cmp
sub
stc
or
sbb
jg
push
in
mov
dec
gs
ja
mov
ja
ret
sbb
dec
cmp
inc
xchg
mov
shl
jle
mov
ret
mov
jle
add
sbb
aad
jg
shr
jmp
xor
arpl
adc
cld
sbb
mov
test
push
(bad)
out
jb
sub
or
sub
push
push
imul
push
mov
daa
sbb
sub
shl
adc
frstor
jo
sbb
mov
jbe
fdivr
addr16
dec
jne
out
ds
ins
jb
out
add
(bad)
(bad)
mov
pop
stos
loopne
iret
xchg
cs
scas
inc
rol
sbb
add
xor
or
or
inc
pop
cli
sbb
(bad)
aad
sbb
shr
fsub
aad
add
retf
dec
mov
ret
imul
jmp
loope
mov
xor
ss
xor
jl
cwde
nop
std
push
mov
mov
cmp
cmp
and
test
push
xchg
mov
mov
xchg
out
inc
outs
xchg
not
jmp
mov
inc
jne
xor
adc
test
sbb
adc
sbb
or
sub
sbb
test
(bad)
rol
aas
push
mov
popf
sbb
popa
adc
and
imul
dec
push
loopne
jle
lea
push
push
xchg
pop
and
add
js
jg
into
ret
sbb
pop
mov
cli
lea
aam
push
mov
idiv
inc
mov
mov
call
jp
out
push
add
sbb
idiv
or
mov
add
add
ss
imul
loopne
adc
mov
dec
or
test
lods
mov
imul
xor
mov
pusha
das
pop
ss
call
cmps
cs
and
loope
xor
loopne
xor
aas
pop
add
inc
in
pop
and
or
cmp
enter
mov
xchg
mov
mul
shr
add
das
and
pop
call
push
jge
mov
and
aam
int3
pop
imul
or
sub
jae
jae
pop
xor
loopne
scas
push
cmp
fwait
xor
or
and
sbb
jp
jnp
and
jmp
mov
test
test
cmps
or
adc
dec
adc
push
rcl
or
mov
mov
or
cwde
adc
ror
shl
test
(bad)
adc
cwde
add
dec
js
test
sub
retf
inc
lods
mov
or
sbb
retf
es
fisub
dec
sbb
int
mov
pop
das
or
(bad)
ins
push
pusha
add
adc
xor
add
ins
in
or
and
sbb
retf
das
pop
add
cs
jle
push
adc
or
xor
jo
hlt
call
cs
add
pop
inc
ins
(bad)
inc
lock
cwde
leave
cmp
cmps
sahf
pop
sub
mov
jmp
pop
mov
arpl
out
or
pushf
jo
mov
pop
test
pusha
mov
cmp
add
mov
fild
ja
loopne
loope
cmps
xor
or
pusha
ins
mov
or
mov
fld
sub
mov
call
push
push
sub
xor
sub
push
xor
jno
test
movs
add
and
cmp
xor
sub
cmp
adc
and
shl
test
rcr
push
fcmovne
push
or
icebp
mov
push
(bad)
sbb
cmp
rcr
adc
push
fcomp
(bad)
push
clc
dec
jecxz
xor
add
in
mov
add
pop
mov
lock
cmp
dec
fist
nop
jmp
push
cli
adc
pop
inc
adc
lods
aas
or
mov
push
sbb
push
movs
es
nop
and
xor
xor
stos
xor
enter
ja
movs
lea
scas
push
inc
or
jmp
icebp
ds
push
jmp
mov
add
inc
xor
es
or
in
and
call
jmp
call
movs
push
arpl
call
push
inc
adc
add
ret
aaa
ror
shr
dec
jae
popf
inc
ror
call
adc
mov
pop
fsubr
push
inc
loop
sbb
aaa
jmp
(bad)
cmps
xchg
sbb
fcompp
sbb
jmp
mov
push
dec
adc
inc
mov
add
mov
mov
aaa
jb
inc
scas
dec
clc
xchg
jl
movs
xor
mov
sbb
bound
sbb
sbb
lahf
in
adc
lds
xor
jne
pusha
das
lea
mov
pop
xchg
dec
and
lock
rcl
mov
cmp
jne
retf
(bad)
push
scas
sub
pop
test
inc
xchg
sub
aas
sub
arpl
imul
idiv
shl
outs
sbb
xchg
mov
push
ret
call
int3
sbb
mov
out
sbb
loopne
xor
pop
daa
mov
mov
movs
fs
or
mov
mov
int3
add
ins
push
je
add
xchg
push
or
jno
cmp
inc
add
jmp
push
add
clc
jns
or
loop
pop
data16
fcomp
pusha
xchg
or
ja
pop
dec
out
mov
xchg
ret
movs
or
push
out
or
aad
out
mov
fld
mov
cmp
mov
popa
xchg
int3
xchg
retf
stc
sbb
sbb
push
sub
loopne
or
push
inc
addr16
pop
(bad)
seto
dec
test
clc
pop
push
lock
(bad)
fsubr
or
cmps
or
cmp
out
hlt
push
jmp
cmp
(bad)
mov
add
push
aad
xchg
inc
mov
xor
mov
or
sub
inc
popa
jmp
pusha
popa
mov
mov
cmp
pop
cmp
inc
jno
icebp
fnstenv
jbe
push
test
dec
dec
mov
jbe
mov
jb
fsubr
inc
or
pusha
mov
push
or
pop
arpl
mov
cmp
cmovae
cmp
loopne
cmc
jle
test
dec
aad
mov
mov
push
out
sbb
inc
retf
push
sbb
pop
sub
stos
push
mov
cmp
jecxz
out
add
rcl
out
add
in
popa
sub
movs
dec
add
and
inc
fimul
aas
add
sub
das
mov
cwde
inc
pop
das
ja
movs
ja
imul
push
jle
addr16
sbb
add
(bad)
push
add
das
shr
shl
mov
xor
cmps
xor
mov
pop
cmps
xor
test
or
ficomp
test
cmps
push
call
dec
inc
or
das
in
lods
add
lock
sub
pop
dec
pop
xchg
lods
jb
pop
fsub
push
xchg
xchg
jle
rol
jecxz
call
cmp
xor
aaa
or
in
test
adc
pusha
xor
sub
xchg
mov
stos
cs
aaa
jo
push
int3
icebp
pop
(bad)
pop
(bad)
sbb
in
sbb
push
push
xadd
or
mov
retf
push
and
sbb
add
jl
shr
add
fild
aam
cli
pop
pushf
sbb
xchg
(bad)
mov
pusha
add
ss
xor
cmps
or
dec
or
add
dec
aaa
pusha
ffreep
jg
sub
sbb
xor
je
shl
add
push
adc
mov
xor
push
push
aam
push
mov
cs
inc
cmc
dec
loopne
ins
xor
xchg
adc
ss
test
and
or
test
arpl
mov
xchg
in
push
xor
push
sbb
jmp
jge
pop
adc
xchg
mov
in
inc
mov
lock
mov
dec
pusha
test
sbb
sbb
adc
inc
xor
xor
jne
mov
and
add
mov
arpl
adc
sbb
and
out
pop
ss
and
arpl
std
jmp
jl
mov
adc
ror
push
(bad)
jmp
es
mov
inc
or
jnp
add
inc
xchg
inc
add
retf
dec
mov
in
lods
std
sub
sub
dec
adc
adc
mov
aas
ja
in
retf
cs
rcl
test
pop
sbb
and
push
xchg
sub
xchg
and
ins
jle
cmp
sub
xor
add
rcl
cmp
out
and
ror
dec
or
push
je
pop
lods
loope
xchg
je
jnp
jl
cmp
add
xchg
and
jp
call
cmp
add
mov
inc
add
std
test
mov
(bad)
loopne
mov
pop
cld
adc
jl
or
pop
mov
pop
ret
xchg
jne
inc
add
xor
dec
ds
push
je
mov
addr16
es
lods
je
addr16
(bad)
sbb
jge
les
test
pushf
mov
mov
xchg
rcr
test
xchg
aam
push
push
and
(bad)
sbb
loopne
jb
xor
and
jne
add
lods
or
jbe
cmp
inc
cli
xor
dec
lock
mov
inc
or
sbb
xchg
sti
add
ds
pop
mov
sbb
pop
movs
add
sub
cwde
call
cwde
hlt
sbb
into
jo
jl
ins
mov
adc
jo
adc
fidivr
add
adc
je
adc
cs
or
fmul
(bad)
or
retf
leave
cdq
push
shr
cmp
dec
inc
pop
sbb
xor
mov
aad
ror
shl
add
xchg
push
jae
arpl
inc
inc
cmps
add
mov
xor
js
jle
add
test
mov
jl
icebp
adc
inc
cmp
jge
xchg
adc
dec
fcmovnu
int3
shl
out
fs
inc
inc
cmp
inc
mov
out
scas
sub
jle
cmp
cmps
(bad)
hlt
pop
or
sti
call
inc
out
sbb
jp
mov
add
lea
test
jl
xchg
add
icebp
adc
jmp
movs
jbe
ds
pusha
bnd
aaa
mov
ret
push
add
aas
pushf
aam
popf
push
mov
push
mov
cmp
out
ror
neg
push
popa
cmp
pop
xchg
clc
add
cmp
adc
cwde
xor
movs
inc
or
loop
(bad)
jg
jmp
xor
aad
test
add
sub
push
add
xlat
add
and
rcr
push
in
inc
and
cmp
mov
not
rcl
push
js
inc
jno
push
enter
repnz
mov
jmp
or
push
js
cmp
loopne
xchg
push
in
sub
cmps
pop
add
xor
out
jo
add
sbb
inc
mov
call
sbb
push
xlat
adc
test
and
push
xchg
and
(bad)
pcmpeqb
jmp
cld
xor
mov
and
sbb
xchg
or
jo
mov
xor
jge
or
ror
cmp
repnz
mov
mov
outs
pmuludq
xor
mov
jo
push
and
add
jle
jg
jl
add
xchg
stos
add
shl
cmp
xchg
rdpmc
ror
(bad)
lods
add
mov
dec
adc
mov
sub
cmp
add
pop
mov
push
test
jne
or
push
es
push
dec
dec
cli
mov
pop
loope
add
mov
cmp
jl
sub
dec
mov
inc
push
dec
pop
pop
ret
jmp
inc
dec
jne
xor
pop
scas
jbe
sub
cmp
jne
popf
mov
test
mov
jle
scas
dec
cmp
push
add
or
mov
test
and
dec
cmp
jne
cmps
rcr
(bad)
neg
(bad)
xchg
pop
jo
or
jno
sti
packsswb
dec
or
retf
mov
push
mov
loop
sub
shr
dec
and
hlt
xchg
push
shr
xor
xchg
iret
out
mov
or
jl
scas
push
jbe
adc
push
push
test
push
jmp
pop
jl
xchg
push
out
cmps
mov
mov
pusha
je
push
adc
mov
pop
or
jne
ss
add
iret
xchg
jl
inc
fimul
jns
lods
adc
pop
ins
jns
sub
mov
jg
xchg
adc
inc
or
inc
scas
sbb
popa
fistp
push
adc
adc
call
cmp
cmp
into
call
jnp
sub
lock
test
adc
push
ins
and
retf
mov
in
add
ret
inc
and
lahf
push
(bad)
rol
xchg
mov
cmps
mov
jb
or
add
lods
xor
xchg
dec
and
sbb
sbb
and
sub
js
push
fldenv
and
cs
retf
cdq
aas
call
and
and
or
ret
aas
sub
rol
loopne
push
dec
sub
sar
add
mov
or
or
dec
pop
in
mov
in
nop
loope
jo
movs
push
adc
add
(bad)
inc
stos
(bad)
das
push
mov
and
inc
push
fsub
xor
aad
arpl
ja
adc
xor
pop
add
or
inc
sub
sub
loopne
shl
(bad)
je
mov
aaa
add
sar
add
or
shr
(bad)
mov
lock
pop
cdq
push
cmp
push
loopne
nop
add
cmp
je
rcr
pushf
jp
or
(bad)
clc
scas
cwde
push
mov
daa
xor
sub
lock
cmp
loopne
inc
xchg
mov
add
jne
out
inc
retf
pop
pusha
dec
je
shr
add
(bad)
mov
mov
and
cld
stos
les
sbb
dec
or
mov
add
pop
cli
inc
xchg
xor
fsub
daa
sbb
add
mov
or
nop
jp
fild
add
rol
lods
pop
test
push
rol
add
mov
test
and
sbb
(bad)
out
pop
outs
xchg
mov
call
out
inc
nop
cmp
sbb
sub
sbb
test
sbb
adc
sbb
or
xchg
push
and
pop
push
fs
mov
jg
test
dec
inc
js
aas
jno
dec
inc
int3
rcr
and
repz
inc
adc
loopne
mov
sbb
(bad)
or
mov
test
and
mov
movs
xor
sub
mov
pop
aas
adc
mov
loop
jmp
push
popa
out
lea
xchg
xor
lock
mov
push
mov
fstp
sub
imul
cmp
test
or
or
cdq
or
outs
inc
xchg
inc
add
push
push
je
dec
shl
lods
sbb
xchg
add
cmps
dec
jge
jecxz
xchg
inc
cmp
lock
dec
cmp
(bad)
mov
sbb
sbb
push
in
rcl
(bad)
push
loope
and
pop
in
add
inc
push
add
test
jl
loopne
loopne
mov
scas
sub
jae
jae
add
push
mov
cmp
sbb
mov
or
retf
sbb
jo
mov
add
je
jbe
ins
cs
jg
or
xchg
mov
test
mov
in
pop
or
sbb
or
sub
mov
add
mov
cwde
prefetch
sahf
retf
xor
sub
clc
inc
stos
xchg
jmp
je
push
call
sbb
repnz
sbb
and
add
and
sub
push
leave
inc
shl
rcl
mov
push
ins
pop
and
inc
repnz
add
popf
xor
jo
cmp
std
push
mov
mov
hlt
cmp
loopne
push
aas
movs
scas
(bad)
or
or
dec
test
ins
(bad)
push
sbb
dec
xchg
push
lea
mov
inc
cwde
leave
push
adc
or
dec
push
or
jmp
das
inc
add
dec
dec
xor
add
js
xor
dec
fwait
in
sub
repz
lock
push
ss
lock
lods
or
pop
dec
rcr
(bad)
fild
adc
push
mov
(bad)
(bad)
or
mov
pop
(bad)
sub
xor
sub
adc
ins
add
rol
add
adc
movs
xchg
push
adc
das
sub
xor
jo
xor
shl
or
adc
retf
(bad)
mov
dec
rol
pop
fist
sbb
fs
xor
sbb
sbb
lea
cmp
cmp
pop
sub
cbw
xor
dec
adc
ja
sbb
push
pusha
test
mov
nop
inc
ss
and
imul
ss
cmp
mov
inc
inc
stos
xchg
add
push
dec
ret
out
call
sbb
and
dec
or
enter
(bad)
mov
test
out
(bad)
enter
mov
rol
push
or
popf
ret
or
inc
or
mov
mov
scas
xlat
sbb
and
hlt
(bad)
jmp
in
adc
imul
and
dec
ror
iret
xchg
in
pop
inc
xor
bound
mov
hlt
cmp
popa
in
or
std
rol
in
iret
or
hlt
jne
push
div
ror
xchg
out
pop
lock
add
sub
sub
jnp
add
retf
add
mov
call
sub
das
pop
cmp
cmc
cmp
jo
sub
dec
enter
or
mov
pop
stos
mov
and
add
out
xchg
je
sbb
loopne
das
inc
js
add
lea
cmp
xchg
jno
mov
jle
push
inc
add
push
aas
push
mov
pop
mov
lock
(bad)
call
sub
push
mov
dec
fistp
jmp
inc
jg
jp
push
scas
xor
outs
dec
pop
inc
outs
add
or
(bad)
dec
dec
add
lock
adc
mov
add
pusha
cdq
sbb
add
cmp
sbb
or
les
pop
xor
hlt
cld
enter
inc
loopne
push
or
hlt
pop
enter
jno
int3
pop
sbb
hlt
jno
clc
rcl
arpl
leave
in
pop
jae
shl
aas
sbb
jmp
ja
mov
jmp
sub
sub
cmps
add
push
lds
(bad)
aas
arpl
daa
pushf
aas
add
scas
(bad)
nop
dec
sbb
repz
cli
adc
nop
cli
aas
dec
js
dec
loopne
mov
(bad)
bswap
test
jg
ins
or
aam
pusha
test
in
xchg
cs
xchg
dec
lods
push
xchg
cdq
xor
or
add
add
pop
in
aaa
sub
sub
fld
mov
pop
ret
ds
mov
icebp
in
lock
dec
cmp
inc
sbb
lock
mov
sub
or
rcr
das
test
mov
jmp
xor
nop
ja
pop
in
xchg
bound
xor
jge
adc
mov
push
ret
out
out
fs
ja
inc
mov
scas
or
jge
cld
fucomip
lsl
ret
mov
aaa
sti
jg
adc
cld
or
xor
sub
cdq
adc
or
dec
or
add
jae
inc
das
sar
pop
push
add
sbb
push
sbb
inc
popa
cmp
add
push
push
and
pusha
sbb
or
ror
nop
sbb
adc
adc
adc
sbb
push
bound
test
addr16
fidivr
and
fsubr
push
test
dec
mov
in
mov
into
mov
rcr
push
arpl
call
fild
mov
(bad)
push
rol
push
lds
or
mov
movs
mov
xchg
inc
movs
addr16
or
mov
arpl
and
jg
hlt
inc
and
mov
sbb
sbb
lock
scas
test
(bad)
retf
mov
jo
(bad)
lock
push
rcl
lock
mov
call
jnp
aad
in
shld
sbb
dec
dec
in
lods
inc
jbe
xor
stos
mov
mov
xchg
retf
arpl
pop
outs
push
and
ja
push
push
sub
xchg
hlt
cld
shl
cmp
sbb
push
nop
add
daa
sub
xchg
inc
shr
lahf
leave
rcl
sub
push
xor
shl
push
jae
cdq
mov
add
inc
dec
inc
push
pusha
js
or
movs
sub
aaa
inc
push
add
adc
push
aas
dec
loopne
pop
or
jne
adc
js
dec
sub
ficomp
in
jl
bound
call
loopne
xchg
jne
inc
add
push
xor
pop
mov
in
(bad)
or
inc
jno
pop
lods
je
addr16
jge
addr16
and
push
test
rcl
xor
fcomp
ja
adc
mov
shr
mov
aam
or
ins
push
loopne
and
jne
add
cmp
add
jbe
hlt
inc
ror
dec
jne
pop
and
mov
inc
or
ret
dec
pop
xchg
or
jecxz
add
pop
cmps
sub
add
out
cwde
add
sub
pop
xchg
jmp
test
inc
into
jo
push
sub
adc
dec
jl
adc
jne
out
nop
in
jp
mov
sub
lods
push
lock
stc
push
xchg
les
push
inc
mov
sbb
repz
pop
jo
fild
jg
or
(bad)
push
adc
mov
sub
add
js
mov
mov
mov
push
or
mov
jl
adc
pop
mov
adc
rol
inc
test
es
retf
inc
cmp
jge
es
mov
pop
dec
hlt
jecxz
mov
outs
out
fs
inc
inc
cmp
mov
sahf
cmp
dec
cmp
adc
xor
(bad)
(bad)
hlt
pop
or
xlat
adc
pop
sbb
mov
movsx
jp
(bad)
sub
inc
add
lea
ror
mov
jne
add
inc
sbb
adc
cmp
psrld
cli
stc
in
add
pop
test
aas
pop
sbb
push
fild
mov
sbb
pop
fsub
xor
stos
icebp
bound
fs
not
imul
cmp
clc
add
cmp
xor
fwait
and
neg
loopne
xor
cmp
test
adc
add
sub
rcl
add
push
mov
mov
jle
pusha
inc
aad
in
dec
cmp
jge
scas
ficomp
inc
out
push
inc
push
js
inc
ror
add
push
pop
and
mov
xchg
jb
jmp
cmp
mov
js
out
add
cmp
in
add
arpl
adc
mov
repnz
and
inc
mov
or
lods
aaa
sbb
aaa
inc
sub
fiadd
pop
pop
sub
inc
aam
imul
adc
xor
mov
mov
sbb
mov
sbb
rol
add
xlat
xor
jge
mov
inc
pusha
mov
xlat
jl
cmp
inc
push
sub
ss
xor
mov
or
or
hlt
adc
in
mov
jo
ficomp
sbb
mov
mov
jo
lock
mov
or
dec
push
xchg
pxor
jmp
rcl
aaa
adc
mov
dec
cld
pop
push
loope
and
and
ret
jne
mov
ret
ret
pop
pop
mov
or
or
xlat
(bad)
and
fst
cmp
jl
inc
sub
push
mov
push
call
pop
inc
dec
jne
or
pop
scas
fild
out
cmp
add
popa
retf
lods
or
push
aad
popa
jle
add
mov
mul
add
cmp
jne
cmps
sub
mov
cmp
pop
jo
mov
or
dec
sbb
or
retf
mov
push
mov
loop
dec
sbb
cmp
pop
or
adc
ret
xor
ins
scas
push
jbe
push
push
test
jbe
movs
jns
jmp
retf
mov
cmps
pusha
je
xor
ss
push
and
popf
push
pop
in
pop
or
jne
ss
pop
icebp
push
sub
clc
jns
(bad)
add
fisub
jns
mov
or
popa
test
jg
aam
xchg
les
je
in
fistp
stc
pop
je
inc
sbb
adc
call
(bad)
push
sbb
pop
xchg
test
pop
fidiv
mov
pop
jo
dec
movs
push
js
mov
mov
inc
shr
add
ret
push
push
mov
fisub
setg
(bad)
outs
lock
out
ror
aam
das
push
pushf
cmp
gs
dec
fld
out
inc
lea
or
cmp
daa
pop
dec
dec
repnz
rcl
pusha
js
sub
and
or
adc
dec
dec
push
test
outs
xchg
cmp
and
in
xor
mov
daa
arpl
pop
call
dec
add
pusha
push
test
pusha
out
jmp
daa
mov
push
jmp
loopne
je
daa
cmp
cmp
and
jmp
and
aas
leave
sub
jne
daa
popa
mov
rcl
adc
push
or
test
pop
daa
and
inc
push
sub
shl
sbb
nop
pop
das
(bad)
or
daa
repz
daa
lods
push
and
jns
adc
jmp
or
daa
ins
je
mul
xchg
or
mov
or
push
add
popa
int3
dec
dec
add
cmps
jnp
jmp
aam
stos
scas
lods
daa
enter
sbb
and
adc
daa
popa
push
out
push
or
popa
cmps
daa
pusha
rcl
daa
test
sbb
stos
daa
mov
daa
cmps
sub
mov
sub
cmp
mov
je
in
mov
adc
iret
pop
test
pop
fwait
outs
fisub
and
and
push
or
daa
jbe
inc
(bad)
mov
outs
bound
je
cmp
jne
test
ret
xor
outs
fcom
(bad)
mov
mov
cmp
cmp
idiv
push
test
cmps
movzx
mov
adc
inc
xchg
add
adc
xchg
xchg
cwde
push
mov
xor
loop
movs
cld
pop
and
in
jbe
sbb
(bad)
outs
jl
or
xor
sti
and
sbb
inc
sub
push
push
test
pop
dec
and
fnsave
sbb
loope
jns
pop
or
test
and
in
mov
jae
call
inc
xchg
into
div
push
out
pushf
mov
out
mov
enter
push
adc
shr
js
add
js
xor
loope
mov
das
jbe
inc
mov
jl
adc
mov
push
fst
in
adc
das
je
popf
arpl
iret
and
xchg
sub
jmp
adc
in
(bad)
(bad)
push
in
cdq
push
or
adc
(bad)
jne
add
dec
jns
or
ja
mov
fisubr
dec
out
fimul
mov
dec
repnz
xchg
movs
pop
retf
sub
pop
add
ret
push
(bad)
and
das
xor
pop
outs
jge
add
pop
arpl
das
mov
das
je
pop
data16
xchg
add
mov
fcom
div
nop
inc
jb
test
pusha
inc
jno
adc
cdq
les
adc
add
loope
add
xor
dec
repz
adc
shl
add
sub
xor
aam
stos
mov
repnz
mov
ja
aas
push
xor
(bad)
or
cmc
stos
aaa
movs
out
jg
aam
adc
jg
inc
pop
shr
pop
adc
cmp
jg
js
sbb
out
outs
lods
push
and
test
fld
adc
inc
mov
test
mov
cmp
jns
mov
loopne
mov
pop
js
adc
sbb
pop
pop
jg
add
ins
mov
adc
jg
cmp
and
or
mov
repz
(bad)
sub
push
leave
sub
icebp
jmp
popf
add
jmp
inc
je
xor
sub
jnp
sar
jne
leave
mov
out
enter
pop
push
out
lods
jg
les
or
ret
jg
add
mov
in
sub
jg
pusha
push
mov
adc
jo
jg
and
push
jg
add
outs
lea
push
aaa
jg
mov
and
outs
jg
jg
lods
nop
push
pop
repz
movs
inc
fdivr
cli
jmp
fild
xchg
fidivr
or
pop
jg
inc
or
aam
ja
sbb
inc
test
popa
xchg
xchg
ja
push
in
mov
ja
add
mov
add
ja
push
pushf
add
inc
pop
ja
xchg
inc
sub
ja
leave
dec
push
test
mov
sub
inc
pushf
push
(bad)
adc
jmp
int3
xchg
cmp
mov
cmp
pop
dec
add
outs
cwde
push
test
xchg
fisttp
daa
cmps
inc
movs
pusha
inc
daa
jne
add
movs
jmp
inc
or
inc
test
daa
lea
adc
cmp
daa
hlt
daa
and
fs
sub
jne
adc
leave
xchg
mov
cmp
mov
daa
test
or
daa
daa
inc
push
add
and
sbb
nop
pop
das
and
or
fisubr
aam
repz
out
or
test
daa
sub
out
rcl
push
inc
stc
daa
lea
out
int
rcl
daa
xchg
xor
mov
sub
xchg
enter
test
daa
xchg
jnp
push
push
sub
daa
nop
nop
add
adc
xchg
add
jb
push
push
inc
or
xchg
adc
loopne
mov
sub
push
daa
push
adc
push
mov
xor
push
out
inc
test
daa
aaa
or
dec
scas
or
je
nop
push
adc
sbb
movs
inc
test
mov
fwait
xchg
(bad)
xchg
fisub
jp
js
add
push
daa
xchg
fcom
mov
mov
xor
xchg
sbb
das
cmp
fcomp
mov
daa
movs
mov
daa
adc
daa
xchg
sub
in
sub
xchg
loopne
test
xchg
mul
lahf
mov
inc
mov
sub
inc
inc
daa
movs
xchg
ror
push
daa
pusha
test
cld
adc
daa
cwde
sbb
add
addr16
daa
add
(bad)
daa
cmps
inc
movs
pusha
inc
daa
or
jmp
inc
mov
push
or
popf
mov
jb
daa
mov
daa
xchg
clc
test
stos
in
test
lock
dec
repnz
mov
daa
dec
bound
push
mov
daa
and
enter
sub
nop
daa
push
test
loopne
or
scas
daa
sub
mov
sub
jne
daa
adc
(bad)
mov
retf
push
mov
dec
mov
call
test
dec
adc
fadd
xchg
out
and
push
(bad)
mov
xor
inc
push
and
mov
sub
(bad)
jg
ins
xor
popa
push
lods
daa
sbb
daa
mov
xchg
xchg
or
add
daa
xchg
mov
adc
xchg
sub
xchg
clc
daa
xor
daa
mov
adc
daa
mov
daa
cmp
out
ins
inc
jb
cmp
cmp
daa
je
mov
sub
and
mov
mov
dec
fisub
jp
inc
nop
jl
or
movs
ins
xchg
adc
push
mov
repnz
arpl
loopne
int
stos
push
sbb
(bad)
jle
push
arpl
and
pop
or
adc
push
sti
into
inc
test
clc
mov
jnp
fistp
movzx
loop
ret
add
jns
imul
xor
ret
hlt
in
jge
imul
mov
mov
lock
test
dec
jbe
(bad)
out
mov
and
pop
jbe
sub
mov
mov
and
jne
pop
lods
movs
scas
cmp
add
das
stos
sub
sbb
clc
mov
lods
sub
jae
lock
or
mov
cld
mov
mov
inc
and
or
dec
or
push
mov
popf
and
int
add
push
data16
stc
iret
fiadd
(bad)
jne
vmwrite
inc
js
ret
bound
cmps
mov
pop
out
fptan
sti
add
fsub
or
fcom
add
inc
add
popf
jns
cmps
push
mov
pop
aas
xor
movs
loopne
inc
lock
fwait
pop
aas
enter
lahf
movs
dec
mov
aam
sbb
data16
mov
add
xlat
aas
mov
dec
push
test
mov
inc
adc
test
dec
mov
lods
sub
pushf
aas
(bad)
pop
pop
les
adc
add
loope
add
adc
mov
add
loopne
add
xor
shr
test
data16
les
add
push
cmp
stos
enter
(bad)
scas
bound
push
push
and
xchg
inc
xchg
(bad)
fst
lods
adc
(bad)
push
movs
push
pop
sub
loopne
imul
add
push
and
sbb
mov
out
mov
cmp
scas
inc
mov
pop
add
pusha
(bad)
call
int
(bad)
mov
add
shr
jecxz
(bad)
adc
or
(bad)
retf
adc
mov
fnsavew
(bad)
pop
push
cwde
cmc
arpl
ret
retf
push
push
fsubr
mov
jmp
push
push
inc
mov
dec
mov
mov
mov
(bad)
mov
aas
inc
enter
stos
push
push
push
jb
nop
les
mov
push
pop
lods
(bad)
sbb
(bad)
mov
mov
adc
pop
(bad)
cmps
pop
outs
adc
pop
aam
sbb
sbb
cwde
(bad)
mov
sub
mov
rcl
(bad)
pop
mov
cmp
js
mov
mov
inc
sub
in
sbb
and
retf
jmp
fisubr
aaa
fisubr
and
pop
(bad)
mov
aam
ja
bound
test
popa
mov
ja
or
ja
das
enter
ja
test
or
mov
or
pop
mov
mov
add
pop
(bad)
ja
daa
cmp
mov
dec
jo
push
pusha
pushf
ja
adc
(bad)
ins
fsub
cmp
popf
hlt
xchg
int3
in
or
cmps
daa
mov
xchg
(bad)
cmps
and
cmc
fild
or
or
sub
adc
push
or
add
daa
sar
cmp
daa
adc
and
hlt
daa
mov
dec
jl
or
mov
leave
mov
jl
test
mov
dec
and
pop
and
shr
push
xchg
adc
pop
adc
daa
(bad)
or
push
jmp
(bad)
retf
daa
mov
push
push
rcl
sub
pusha
and
jne
or
popf
(bad)
mov
pusha
mov
aas
and
adc
aam
stos
in
fcom
repnz
inc
sbb
xchg
daa
lds
xchg
and
rol
add
push
daa
adc
mov
jo
mov
or
push
test
daa
mov
daa
cmp
push
out
xchg
sbb
daa
cmp
sub
je
mov
mov
int3
pop
popa
inc
sub
sub
sbb
push
push
cmp
leave
fimul
cmc
lea
daa
jp
enter
push
std
rcr
mov
popf
mov
add
fdivr
iret
sub
and
ins
sbb
(bad)
jle
retf
mov
inc
je
mov
jg
mov
into
mov
fs
or
mov
lds
fs
and
xchg
fsubr
imul
shl
pop
xor
in
jge
test
sub
neg
push
test
in
xchg
in
out
fist
div
rol
cmp
movs
and
mov
add
nop
push
inc
dec
js
scas
cmp
into
sub
mov
fistp
adc
mov
sbb
in
hlt
lock
mov
aas
popf
inc
and
bound
add
mov
les
shr
fcomp
adc
dec
add
and
(bad)
jne
push
scas
iret
jg
jns
or
ja
les
sar
retf
xchg
out
out
fnstenv
leave
lds
sti
loopne
sbb
dec
fisubr
add
jge
movs
xchg
rcr
and
(bad)
dec
shl
inc
int3
fdiv
int3
sbb
aas
mov
pop
aaa
and
cmp
aam
sar
and
leave
or
and
je
xor
adc
int3
test
lods
mov
adc
test
dec
add
loope
call
add
inc
add
loopne
add
and
push
ror
adc
(bad)
iret
movs
outs
pop
sbb
(bad)
es
(bad)
stos
pop
inc
cld
adc
push
mov
xor
sub
movs
push
inc
stos
loopne
pop
inc
daa
add
add
or
or
int3
out
mov
xchg
and
adc
loope
int
test
repnz
int
shl
aam
sub
pop
xlat
pop
les
dec
(bad)
mov
(bad)
in
enter
ror
mov
int3
cli
pusha
mov
or
in
inc
mov
sbb
cmp
(bad)
(bad)
mov
lahf
retf
push
or
mov
aad
jmp
adc
(bad)
ficomp
(bad)
(bad)
imul
(bad)
fidivr
or
pop
add
add
xor
adc
jo
loope
cmp
sbb
pusha
xchg
bound
dec
or
dec
adc
push
xor
stos
test
push
pop
sub
mov
(bad)
aas
(bad)
(bad)
sbb
(bad)
xchg
lods
dec
push
aas
js
sub
push
ror
jns
jno
mov
les
aad
ss
jp
xor
add
cmps
mov
loopne
or
dec
dec
xlat
stc
cmp
mov
in
and
mov
xchg
cwde
xor
hlt
mov
push
popf
or
push
lea
or
inc
pop
inc
inc
loopne
popa
dec
inc
or
pop
adc
rol
or
mov
inc
and
enter
out
fdivrp
into
fidiv
dec
or
leave
add
pop
adc
cmp
loope
dec
adc
or
push
jmp
mov
rcl
push
push
inc
mov
add
bound
ins
add
stos
scas
pop
cli
inc
or
iret
stc
cmp
inc
clc
(bad)
dec
mov
dec
xchg
ror
jmp
xor
sbb
jle
add
jg
lea
dec
cmp
jg
inc
pop
push
aad
add
jle
(bad)
or
jo
add
push
add
enter
xor
add
inc
pop
iret
retf
add
int3
jmp
pop
pusha
inc
add
mov
or
mov
or
in
pop
lock
mov
sub
shr
add
sti
loope
test
xchg
jae
aaa
call
lea
jmp
popa
sbb
cmp
lds
sbb
mov
push
test
adc
adc
(bad)
call
mov
push
sbb
inc
mov
inc
mov
inc
adc
inc
sub
lds
sbb
bound
inc
sbb
in
add
xor
in
pop
ret
js
dec
test
in
pop
shl
clc
pop
or
in
aaa
mov
cmps
xor
xor
jecxz
mov
ss
inc
push
dec
daa
mov
inc
cmp
mov
mov
inc
sahf
nop
push
jnp
ret
xor
lds
lock
daa
mov
lea
push
sub
loope
mov
mov
(bad)
cmp
and
lahf
push
inc
lea
ret
xor
or
out
call
icebp
enter
push
and
pusha
or
push
add
adc
leave
adc
mov
xor
xor
rcl
pop
test
dec
popf
add
rcl
or
mov
iret
mov
dec
xchg
pusha
cdq
mov
inc
loopne
(bad)
in
push
xor
jle
add
pop
inc
adc
adc
dec
push
adc
dec
clc
mov
mov
inc
(bad)
(bad)
or
adc
push
push
(bad)
jne
arpl
cmc
inc
add
and
and
or
(bad)
stc
pop
adc
xchg
(bad)
in
xchg
call
pop
test
sub
mov
cli
jo
or
xchg
mov
and
rcl
imul
dec
mov
pusha
sub
push
jno
push
xchg
test
or
stos
pop
dec
dec
test
scas
in
add
test
(bad)
sub
scas
adc
and
scas
test
add
rcr
xor
and
test
test
mov
out
cld
add
sub
retf
mov
ficomp
inc
add
inc
sub
ins
mov
and
inc
lahf
je
mov
shl
add
dec
retf
xlat
(bad)
add
test
or
cmp
in
scas
das
and
sub
mov
add
inc
dec
test
call
(bad)
call
push
add
add
or
test
add
and
sbb
jle
dec
in
pop
add
scas
add
pop
int
stc
add
mov
loopne
(bad)
mov
js
add
cmps
push
ror
sbb
inc
jmp
sbb
adc
mov
xor
push
and
aaa
js
and
clc
add
sub
das
loopne
js
dec
jmp
aam
fist
inc
adc
adc
test
ja
pop
inc
fnsave
push
outs
inc
add
or
out
sbb
dec
js
in
inc
mov
cld
sbb
fist
shr
and
jg
out
mov
stos
adc
fdivr
push
inc
push
leave
retf
add
pop
rcr
call
dec
test
shl
and
add
mov
inc
jbe
mov
jmp
pusha
xchg
sbb
inc
lea
and
and
in
adc
adc
inc
cmp
jge
test
sub
dec
mov
je
pop
mov
jle
add
cwde
pop
(bad)
(bad)
and
daa
xchg
sub
pop
aam
into
mov
outs
jl
add
or
pop
mov
sub
or
pop
and
das
lock
sahf
or
cmc
retf
jno
cmp
and
retf
out
add
pusha
sbb
mov
adc
or
outs
or
lods
outs
sbb
outs
iret
or
sub
fsub
push
jae
pop
sub
enter
add
pusha
mov
add
jecxz
bound
dec
out
add
cmc
add
xchg
sub
inc
mov
repz
stc
ja
push
ror
loopne
shl
sub
add
test
push
jo
dec
loopne
mov
jae
scas
or
mov
lea
push
and
ret
xchg
jmp
shr
inc
adc
dec
sub
jp
pop
xchg
adc
es
mov
stos
jge
adc
push
pusha
clc
ja
and
nop
je
mov
mov
in
dec
sub
sbb
mov
in
adc
jg
mov
sbb
mov
inc
xor
(bad)
data16
mov
(bad)
push
or
pusha
mov
(bad)
dec
sti
pop
scas
aas
sbb
outs
xchg
add
add
mov
push
mov
xor
daa
pop
and
(bad)
outs
and
sbb
(bad)
in
popf
mov
jo
shr
push
les
add
sbb
data16
out
mov
jb
xchg
sub
(bad)
jle
sti
inc
mov
sbb
fwait
jns
pop
add
test
pop
inc
movs
pop
and
cs
ja
(bad)
pop
in
jl
mov
push
add
outs
fs
adc
mov
jge
jl
or
je
or
push
loopne
push
or
push
xchg
jp
test
pop
or
sbb
pop
lock
je
clc
jns
push
ins
xor
rcl
mov
xor
(bad)
inc
sbb
leave
loop
out
add
xchg
ins
in
(bad)
mov
push
xor
inc
pop
inc
inc
dec
cwde
nop
xchg
xchg
push
jecxz
fcmovu
jmp
mov
xor
or
push
xchg
pushf
pop
jo
shl
push
dec
pop
(bad)
xor
or
fsub
sub
add
mov
jl
and
add
dec
push
stc
sbb
fwait
mov
cwde
in
aam
mov
adc
add
inc
sub
data16
push
sub
sub
pop
js
xor
dec
add
call
lahf
sahf
int
and
mov
mov
pop
inc
sub
pop
fimul
inc
pusha
je
mov
pop
xchg
dec
cs
lea
push
push
or
xchg
sub
inc
ds
cdq
xor
dec
jp
(bad)
sbb
add
push
cs
add
and
and
test
and
sub
or
sbb
inc
adc
(bad)
icebp
push
outs
dec
push
or
mov
fnsave
cmp
out
pop
push
sbb
cmc
push
int
popf
(bad)
call
push
or
std
scas
push
xchg
or
or
inc
daa
mov
push
add
or
pop
mov
hlt
(bad)
test
ret
xchg
or
aaa
inc
fwait
mov
inc
mov
in
jmp
cmp
push
cli
push
ficom
xlat
repz
adc
xchg
out
(bad)
lock
scas
push
and
pop
xchg
out
and
and
out
inc
or
std
or
push
and
fld
mov
mov
add
retf
shl
mov
sub
daa
shl
add
push
loop
sub
mov
lods
je
addr16
dec
stos
push
push
push
test
rcr
ror
add
fcom
fnstcw
mov
out
test
test
adc
dec
xor
inc
out
es
or
push
ss
cmp
cmp
ja
mov
rol
fcmovbe
inc
(bad)
cli
(bad)
add
mov
pusha
es
add
mov
jl
in
push
pushf
xor
push
movs
pop
out
mov
sub
push
mov
adc
jo
scas
pop
aas
(bad)
(bad)
sbb
fiadd
stos
outs
(bad)
nop
in
loope
or
outs
adc
nop
pop
dec
popf
mov
int3
sbb
add
push
push
loop
adc
movs
cmp
out
push
or
jecxz
push
xchg
sbb
cmp
inc
daa
pop
outs
retf
or
sbb
fsubr
and
sbb
jmp
add
jle
sub
popf
(bad)
test
retf
jae
mov
cs
dec
hlt
mov
ja
fs
inc
inc
cmp
mov
push
jb
dec
cmp
xor
mov
cmps
cmp
loop
ja
pushf
loop
sbb
hlt
aam
dec
js
lea
jns
lea
inc
adc
in
cmc
scas
das
push
add
add
inc
aas
push
out
aas
in
mov
das
cli
sub
adc
xchg
pushf
or
sub
xor
mov
push
xchg
lods
das
sbb
das
nop
push
add
inc
xchg
test
adc
jae
(bad)
rol
push
xchg
dec
inc
mov
inc
cmp
shl
sbb
pop
xlat
stos
bound
add
cmps
cmp
ss
xchg
mov
mov
xor
mov
jo
sub
jl
lahf
or
movs
(bad)
mov
mov
push
or
mov
pop
leave
adc
or
(bad)
push
or
adc
stc
sbb
clc
sbb
push
test
xlat
stos
mov
test
xlat
push
inc
jge
or
(bad)
jecxz
outs
inc
sub
ja
ret
(bad)
out
cmp
add
jp
pop
inc
push
jmp
mov
adc
mov
test
pusha
adc
or
jl
movs
push
sti
or
retf
mov
out
sbb
inc
cmp
pop
outs
add
aam
inc
push
je
sbb
arpl
mov
push
and
add
pusha
pop
or
jne
adc
iret
xchg
jne
dec
clc
jns
mov
call
sbb
cmp
hlt
jle
je
xchg
bound
call
add
pop
or
ins
sbb
stc
mov
clc
adc
call
pop
push
lahf
and
push
or
mov
push
xchg
dec
push
jnp
add
push
dec
or
push
adc
dec
ins
adc
adc
lea
or
xor
adc
cmps
pop
sbb
rcr
sbb
lock
pop
in
sbb
pop
imul
jo
lods
in
test
dec
stos
(bad)
lea
fistp
fsubr
aaa
adc
xchg
int
int3
mov
test
push
or
sub
outs
push
jb
or
rcl
fnstsw
and
ss
inc
mov
or
inc
lock
sbb
aaa
xor
xor
xchg
dec
push
dec
and
in
add
popa
lock
dec
push
jae
sbb
adc
call
or
jg
adc
mov
das
dec
jg
or
add
ss
clc
xor
mov
ror
jg
movs
inc
or
xchg
push
add
daa
jg
inc
and
jmp
cmp
jg
sub
lds
dec
xchg
pushf
aam
fisttp
jg
or
or
mov
and
(bad)
in
ucomiss
push
subps
fs
call
adc
pop
add
xchg
lock
rcr
pop
daa
lods
sbb
adc
jmp
inc
xchg
jle
adc
and
and
add
mov
lahf
into
daa
xor
je
mov
pop
jae
dec
ds
or
test
frstor
sub
aas
mov
fmul
and
cmp
xchg
push
push
add
pop
jp
or
inc
inc
mov
xchg
add
in
sbb
in
pop
xchg
xchg
(bad)
lea
jle
pop
jp
(bad)
xchg
stc
cdq
or
and
ror
sub
xchg
jmp
jmp
jo
push
push
mov
out
mov
sub
stos
mov
or
mov
or
xchg
rcr
ret
data16
mov
pop
and
sbb
bound
jl
fst
ins
outs
pushf
arpl
cs
dec
mov
call
sub
jb
xor
and
xlat
neg
pop
dec
call
sbb
inc
add
pop
sbb
dec
and
and
push
jb
xor
adc
xor
sub
add
(bad)
push
adc
iret
pop
push
shl
fsub
mov
or
jnp
js
mov
push
and
rcl
and
or
and
mov
aam
cmp
jns
sub
clc
inc
daa
mov
push
mov
test
xor
pop
cs
loope
jle
gs
cs
rol
lea
push
enter
arpl
sahf
mov
add
ss
jns
jne
sbb
ins
inc
es
dec
inc
gs
push
or
(bad)
movs
aaa
icebp
inc
jns
out
push
or
sub
sub
sub
sub
not
cwde
mov
mov
xchg
movs
mov
cmps
xchg
pop
mov
and
in
pop
jp
(bad)
daa
sahf
add
pop
call
fsubr
xor
pusha
in
mov
pop
jl
or
jo
fisubr
jmp
call
ret
mov
ret
or
mov
out
pop
mov
arpl
cmps
pop
push
test
jnp
cmp
jle
dec
cmp
jg
push
sbb
ja
fld
in
push
push
inc
jb
movs
ja
lea
movs
ins
js
push
in
les
adc
sub
cmps
(bad)
nop
xchg
push
push
loopne
xor
lea
cdq
xor
or
add
loop
loope
int
loopne
out
cmc
adc
ss
leave
das
xchg
stos
xchg
sub
xor
pusha
pop
shl
outs
jb
pop
inc
cmps
mov
gs
ja
ins
dec
stos
fidivr
dec
sbb
cmp
jo
pop
or
call
cld
mov
jp
les
in
outs
mov
pop
call
or
leave
add
sub
popf
popa
pop
adc
dec
add
or
xchg
xor
rcl
(bad)
pop
jmp
push
inc
rol
inc
dec
bound
lea
dec
je
pushaw
inc
or
jg
jo
pop
mov
jle
push
sete
lahf
mov
push
mov
test
lahf
mov
sbb
idiv
lea
sub
clc
dec
cmp
jg
cmp
push
push
cmc
pop
or
cmp
push
add
xchg
shl
push
dec
adc
push
mov
out
repz
sets
or
or
and
shl
sbb
mov
mov
jmp
or
in
cmp
jg
mov
sub
shr
add
add
jmp
adc
(bad)
das
ret
jge
add
lea
jmp
popa
sbb
inc
lods
sbb
mov
pop
out
sbb
adc
daa
add
or
mov
xchg
sbb
sub
mov
icebp
aad
cdq
lahf
mov
or
repnz
dec
mov
sbb
inc
sahf
nop
sub
cs
inc
push
lock
imul
mov
pop
xor
dec
push
in
lahf
push
daa
popa
out
loopne
and
pop
in
shr
mov
icebp
fs
add
shr
or
outs
or
pusha
xchg
adc
mov
xchg
icebp
xchg
test
imul
mov
shr
(bad)
das
mov
retf
jle
lods
in
inc
inc
or
adc
(bad)
xor
cmps
call
pop
loopne
cmp
dec
shl
or
out
cmps
jmp
lods
inc
mov
pop
cwde
cmp
sbb
inc
aam
test
sub
lods
cmps
sub
inc
jo
inc
xor
cmps
mov
mov
and
cmp
cmps
pushf
mov
fsub
push
leave
sub
das
mov
push
and
(bad)
jno
push
jmp
lea
daa
mov
imul
mov
add
adc
scas
mov
(bad)
and
and
mov
mov
sbb
adc
loop
mov
jb
fmul
sub
add
push
add
ret
ffreep
jp
jne
jle
dec
xchg
ss
fadd
scas
xlat
add
jns
(bad)
js
lods
xor
rol
xor
shl
dec
fs
mov
or
jne
sar
jecxz
pop
pop
jbe
cmp
rcr
pop
fist
and
aaa
sub
js
adc
inc
ja
cmp
mov
mov
add
data16
adc
bound
sub
outs
and
pop
icebp
outs
inc
add
add
pop
imul
paddsb
repz
inc
add
sbb
xor
pop
rcr
dec
es
out
jge
add
inc
dec
adc
cmps
add
call
pop
scas
aaa
sbb
push
rcl
inc
fs
push
sub
cdq
and
inc
lea
fistp
shr
mov
jmp
inc
cmp
add
(bad)
jge
test
sub
xor
mov
je
dec
inc
mov
sub
add
(bad)
add
data16
ins
jb
pop
aam
push
mov
outs
jl
add
or
pop
mov
xor
or
rol
loopne
add
mov
cmps
ret
loopne
mov
push
ds
ds
loope
mov
pop
push
xchg
pop
rol
jmp
adc
add
xor
sbb
sbb
sbb
lds
push
jnp
or
sub
enter
pop
inc
mov
add
hlt
sub
(bad)
ds
xor
push
aas
mov
ins
sbb
cli
clc
lea
imul
adc
loopne
sub
adc
push
daa
leave
cmp
loop
dec
add
add
test
xor
enter
ror
pop
pop
xor
mov
xchg
mov
add
ja
(bad)
adc
(bad)
sbb
das
xor
sub
push
add
in
sbb
adc
mov
xor
add
dec
mov
add
ja
dec
sti
pop
mov
add
xor
add
xor
aad
out
add
rol
sub
aad
scas
add
or
xor
retf
push
push
xlat
out
and
stos
push
inc
dec
aaa
add
inc
sti
ja
sub
adc
push
pop
daa
or
dec
les
add
dec
ja
daa
js
add
outs
shl
pop
jnp
out
adc
jl
or
je
or
(bad)
push
dec
js
and
and
pushf
adc
pop
or
jl
and
jge
jne
jns
add
je
fidiv
sub
bound
push
xchg
mov
jle
vmread
push
add
sbb
inc
popf
push
scas
add
sub
nop
adc
sub
fisubr
loop
fild
pusha
jno
ss
leave
das
int3
pop
(bad)
adc
cwde
daa
adc
adc
or
xor
inc
sub
dec
adc
mov
or
ja
mov
ret
add
popf
mov
dec
xchg
rol
cmp
dec
dec
and
sub
dec
cmp
and
sub
hlt
inc
and
mov
mov
leave
push
dec
test
mov
sub
cmp
pusha
nop
xchg
pop
leave
cmp
pop
inc
push
sub
and
add
jns
xchg
jl
ret
dec
push
inc
inc
repnz
push
mov
mov
cld
dec
jns
cmp
push
pushf
pop
leave
sub
enter
add
push
mov
sub
pop
loop
inc
jnp
inc
sahf
(bad)
mov
retf
sar
xor
ss
jmp
add
add
push
or
outs
(bad)
push
dec
in
or
lods
push
pop
inc
lock
fucom
push
das
test
jle
(bad)
sbb
push
push
sbb
shr
add
mov
pushf
rol
js
jb
outs
jge
cmp
cwde
push
pop
fcmovbe
push
jle
jl
cs
add
mov
jmp
or
loopne
cmp
adc
lahf
pop
xchg
out
popa
push
mov
sbb
dec
fs
cmp
jle
rcl
jbe
push
int3
push
mov
inc
cwde
stos
or
cmps
xchg
jmp
(bad)
sbb
mov
adc
retf
sub
std
inc
cmps
and
dec
xlat
lock
add
xlat
hlt
(bad)
fst
stos
mov
fldenv
shr
add
mov
inc
add
mov
add
iret
mov
imul
push
cmp
cmp
test
mov
push
mov
fsubr
and
ja
push
jl
sbb
add
ins
daa
and
add
inc
sbb
inc
add
in
jp
sbb
mov
loopne
aaa
mov
jl
add
and
out
cmp
push
ret
mov
(bad)
pop
add
shl
add
ror
xlat
pop
ds
retf
(bad)
or
push
enter
add
push
xlat
loope
popa
inc
xlat
pushf
adc
cmp
xchg
dec
xlat
push
pop
pop
xchg
and
xlat
pop
mov
add
and
add
vsqrtps
pop
xlat
test
pop
and
adc
dec
(bad)
fiadd
xor
sar
or
daa
mul
pop
aam
push
xchg
mul
aas
and
jmp
push
shr
ror
or
dec
cmp
push
dec
add
adc
add
push
je
test
push
pushf
adc
xor
mov
pop
and
das
in
pop
mov
dec
sbb
sbb
or
nop
ja
pop
pusha
add
dec
mov
ror
cdq
es
xor
lea
cdq
cs
and
movs
or
popa
add
sub
repnz
daa
dec
xor
pop
out
in
xor
add
or
cmp
add
shl
jmp
mov
add
test
mov
aam
pusha
nop
mov
pop
or
(bad)
jbe
dec
inc
xor
pop
mov
ins
aaa
cdq
imul
xchg
sub
bound
add
mov
dec
fild
xchg
sub
adc
(bad)
(bad)
jg
add
nop
ins
jo
jb
jae
outs
cmp
jns
je
ins
ins
or
imul
dec
dec
outs
or
popaw
arpl
jp
sti
in
fcmovnb
add
dec
inc
outs
dec
imul
or
ins
je
add
adc
int3
add
push
mov
inc
inc
and
hlt
clc
(bad)
adc
cmp
sahf
ja
pop
int3
popf
push
cmps
push
mov
sbb
cs
jo
loop
outs
jbe
mov
push
int3
add
dec
add
jmp
push
adc
jbe
jge
dec
repz
xor
imul
push
sub
or
push
jl
and
xor
mov
add
dec
(bad)
mov
ss
retf
sbb
jmp
add
add
pop
mov
pop
sbb
push
gs
inc
addr16
imul
sub
cmp
mov
bound
cmps
outs
xchg
jb
arpl
addr16
mov
(bad)
cmp
or
add
(bad)
inc
sbb
pop
aaa
xchg
add
jp
mov
push
xor
mov
dec
ds
fnstcw
sbb
sbb
push
mov
popa
xor
pop
aad
loope
lds
cmp
pop
adc
jg
clc
aas
je
xchg
test
add
mov
test
ins
and
pop
sub
xor
mov
pop
pop
pushf
div
mov
push
in
inc
push
lock
aam
into
(bad)
dec
push
or
and
dec
outs
jbe
inc
jb
popa
jns
popa
outs
popa
addr16
push
or
add
and
test
and
mov
rcl
add
mov
add
pop
pop
push
outs
and
or
jnp
int
or
int
shl
out
and
mov
or
add
imul
fisubr
neg
shl
pop
lds
jo
outs
mov
sbb
ins
ins
gs
pushf
call
(bad)
test
cvtpi2ps
push
dec
in
pusha
xor
push
sub
xor
and
and
lock
add
adc
lock
or
push
add
push
sar
dec
jno
push
push
pop
inc
data16
and
mov
test
push
add
add
scas
mov
push
scas
push
mov
add
or
loope
lds
cmp
sub
add
jmp
pop
add
xor
mov
in
xlat
add
jge
aad
pop
mov
cmp
jg
cmc
js
and
ins
popa
jae
lock
shl
add
(bad)
sub
xchg
call
fmul
and
out
loopne
es
mov
mov
jecxz
movs
iret
shr
scas
in
js
daa
cwde
adc
je
loopne
pop
ja
ret
add
pusha
add
adc
mov
daa
test
push
or
mov
xchg
push
jne
pusha
mov
inc
out
outs
inc
loope
add
sub
pop
adc
cmp
or
dec
inc
push
xor
jo
inc
push
div
dec
mov
xor
add
or
inc
mov
je
test
aas
mov
in
add
sub
xor
cmp
push
mov
clc
test
les
mov
push
mov
scas
lds
syscall
ds
jmp
and
es
jo
jno
jno
nop
popa
pop
movs
mov
jbe
bound
or
mov
jno
nop
sub
jno
sbb
mov
frstor
lds
inc
les
std
test
push
or
js
aaa
push
adc
ror
adc
jo
popf
cmps
push
mov
ret
jno
cs
aam
outs
cmps
and
dec
jns
push
add
jne
movs
push
daa
pusha
push
add
dec
leave
sbb
inc
or
jge
dec
cmp
(bad)
mov
or
in
sub
test
add
and
cmp
mov
bndmov
push
dec
bound
add
and
inc
out
push
cmp
cmove
fwait
jo
out
daa
inc
rcr
push
out
ss
push
add
jl
aam
repnz
or
adc
or
loopne
into
in
(bad)
ds
and
(bad)
push
dec
mov
(bad)
(bad)
addr16
dec
(bad)
push
mov
int3
ds
and
xchg
sub
pop
xchg
adc
sbb
xchg
add
adc
pop
int
test
cmps
js
add
dec
daa
fsubr
das
mov
mov
push
in
lock
pop
les
cmps
mov
dec
js
cmps
and
loope
or
xchg
xchg
sub
xchg
push
sbb
fsub
stc
and
adc
xchg
cs
sbb
stc
xchg
pop
or
sbb
loope
and
(bad)
adc
aas
inc
rol
loop
push
and
jns
retf
push
aad
aaa
neg
test
loopne
inc
push
push
ins
add
ja
mov
push
daa
test
sbb
or
add
nop
sub
xchg
daa
leave
inc
mov
ret
pop
pop
and
adc
mov
imul
out
xor
inc
dec
(bad)
jnp
pop
pop
sbb
(bad)
cld
es
pusha
add
(bad)
popf
or
add
mov
add
xor
pop
push
mov
push
mov
dec
xor
es
sub
ins
jo
add
sbb
inc
sbb
call
loopne
jb
sbb
add
shr
and
jae
sbb
gs
std
cmps
sbb
scas
pop
aad
pushf
icebp
or
lock
and
mov
inc
inc
jecxz
cmp
loopne
test
outs
push
jns
ror
in
fiadd
adc
jo
jne
push
add
push
pop
leave
or
cmp
xor
ret
or
jns
pop
lds
aaa
pop
jne
sub
add
add
pop
adc
push
dec
inc
pmulhw
jge
test
push
add
push
add
adc
pop
xchg
sbb
inc
sbb
push
imul
sub
dec
lods
sbb
popa
popa
fmul
loopne
push
push
mov
push
cs
(bad)
aas
jae
push
jmp
daa
mov
gs
loopne
sbb
nop
push
or
jmp
sbb
dec
outs
or
inc
sbb
aam
add
sub
dec
call
jnp
adc
xor
retf
pop
pop
adc
popa
pop
sbb
xor
jle
adc
mov
sub
adc
mov
ss
push
scas
pop
hlt
ins
add
addr16
les
fist
push
(bad)
out
sbb
pop
out
jo
lds
mov
xlat
prefetcht1
or
push
push
adc
test
cmp
or
shl
and
popf
nop
fdiv
pop
pusha
inc
cmp
push
mov
push
add
pusha
mov
xchg
outs
fbld
pop
dec
add
test
mov
mov
jne
dec
xlat
add
fsub
inc
or
jp
add
les
or
out
push
(bad)
push
inc
ins
jo
sub
inc
jmp
add
mov
fcmovnu
das
cmc
push
xchg
push
push
xlat
push
inc
pop
sbb
outs
sub
add
jl
pop
pusha
call
mov
(bad)
dec
mov
out
mov
inc
jl
inc
xor
je
jb
pop
fs
adc
push
inc
jb
sbb
pusha
test
in
xchg
adc
gs
popa
add
add
dec
shr
push
add
imul
add
sub
pop
outs
pop
cmp
(bad)
aam
push
mov
mov
xor
jge
cmp
xchg
dec
pop
pop
add
pop
inc
in
call
mov
add
mov
xchg
neg
push
dec
(bad)
das
mov
ror
and
clc
lfs
pusha
sti
stc
dec
add
test
in
push
xchg
or
js
and
xchg
fstp
push
push
imul
add
(bad)
cmp
adc
mov
xor
movs
inc
dec
sbb
scas
lahf
mov
sub
xchg
fstp
sub
fist
xchg
cmovl
imul
xchg
push
dec
es
jmp
in
push
xor
sahf
pushf
fmul
xchg
ror
xchg
push
and
dec
popf
jmp
xchg
pop
xchg
daa
daa
daa
xchg
(bad)
adc
dec
xchg
aam
xchg
in
leave
leave
je
in
sbb
inc
popfw
shl
xor
and
ins
jnp
fsub
mov
fild
adc
pop
or
dec
and
stos
cwde
push
jmp
test
mov
int3
fs
fisubr
aad
add
dec
jns
dec
xor
dec
aam
mov
or
add
jp
adc
ficomp
jno
push
call
adc
jae
scas
mov
xor
repnz
mov
push
add
retf
dec
cmovns
adc
add
addr16
push
adc
cmp
clc
jle
inc
push
popa
jg
cli
(bad)
cmp
fiadd
dec
jg
add
bound
lods
add
cmp
mov
push
popa
ins
jne
arpl
add
or
dec
inc
sub
jmp
add
cmp
call
pop
pusha
lock
pop
add
adc
loope
push
push
sub
outs
jl
push
adc
sub
rol
enter
add
movs
out
cld
xchg
mov
dec
or
push
adc
or
sub
mov
fdivr
xchg
and
das
leave
and
jle
xchg
mov
cmp
push
pop
inc
inc
push
rcr
dec
jae
imul
push
push
push
mov
nop
mov
add
mov
or
mov
pop
sbb
or
or
add
fcmovb
bound
push
lea
inc
in
enter
or
push
inc
shr
xchg
stos
shl
aad
add
inc
js
sbb
pop
push
jo
gs
sbb
xchg
push
ja
fadd
call
push
sbb
aas
add
scas
jns
add
or
pusha
push
mov
push
xor
push
rcr
(bad)
cld
mov
xchg
xchg
jmp
gs
xor
xchg
add
mov
pop
pusha
add
mov
sbb
add
popa
pop
and
fdivr
or
es
push
es
cmp
or
sub
dec
cmps
sbb
aaa
add
pushf
movs
je
imul
call
pusha
fcmovb
cmp
dec
popw
aam
sub
cld
imul
jo
pop
cmp
test
addr16
daa
add
jb
and
clc
sbb
inc
fisttp
mov
jge
stos
adc
test
pop
mov
pop
dec
add
ins
or
or
xchg
adc
dec
or
or
test
mov
xlat
mov
lods
out
xchg
mov
add
test
lahf
arpl
call
imul
shl
or
jmp
cmp
inc
sub
jb
sub
fidiv
outs
mov
les
cmc
push
pop
pop
je
pop
arpl
in
inc
fadd
inc
or
inc
loopne
mov
jl
shl
mov
hlt
ss
mov
outs
adc
cdq
or
add
pusha
sub
jnp
cld
hlt
aad
shl
(bad)
mov
jp
popa
mov
imul
outs
add
xor
inc
bound
inc
je
push
jae
out
inc
ret
adc
cmp
add
cmp
push
push
add
add
pusha
mov
sbb
nop
sub
pushf
popa
mov
pop
mov
add
mov
cmps
add
frstor
pop
sahf
pop
int3
das
jmp
or
test
xchg
sbb
and
sbb
dec
jae
mov
add
mov
int
int
mov
das
push
mov
stos
push
into
das
sub
or
das
inc
mov
in
cli
push
bound
sbb
or
(bad)
mov
push
hlt
xchg
addr16
push
(bad)
lahf
iret
xchg
out
neg
je
push
mov
fld
icebp
push
sahf
lea
jmp
retf
into
movs
sbb
push
add
mov
adc
dec
push
inc
add
movs
mov
ror
(bad)
and
lea
test
std
push
mov
and
je
shr
pop
pop
push
add
pop
outs
data16
lods
es
mov
sbb
daa
dec
mov
aas
pop
push
ror
lds
int3
clc
aas
xlat
ins
lds
mov
test
call
mov
dec
add
adc
daa
popa
sub
xor
imul
push
ss
sub
push
daa
mov
in
arpl
test
jae
lods
out
repnz
out
es
jp
mov
lea
pop
mov
inc
sahf
xor
daa
and
cmps
cdq
mov
daa
daa
cmps
jae
leave
leave
enter
test
mov
push
test
repnz
call
jb
mov
cmp
sbb
(bad)
push
idiv
adc
pop
ds
jo
push
mov
push
and
cmps
rcl
fmul
jae
push
dec
test
add
mov
dec
or
mov
sbb
jno
pop
call
inc
mov
xor
mov
sub
jg
lds
jle
add
push
mov
inc
cmp
sub
xlat
ins
push
test
mov
lods
pusha
push
cmps
dec
test
adc
cmps
dec
pop
add
mov
jmp
int3
inc
out
ss
sbb
mov
or
fsub
adc
jp
mov
inc
xchg
gs
adc
mov
das
xor
in
test
cmp
jne
je
iret
dec
add
push
mov
pushf
xor
mov
pop
cmp
add
jo
push
lds
xor
add
push
cmps
into
clc
push
add
dec
add
adc
xchg
push
sub
xchg
add
lods
test
and
movs
mov
retf
jge
nop
push
popf
das
xchg
cmp
add
pop
dec
cmp
xor
cmp
addr16
inc
cmps
scas
and
push
xchg
mov
jge
lds
fwait
sub
jo
or
popf
cmp
adc
adc
jge
adc
hlt
inc
(bad)
xchg
adc
and
nop
loopne
jns
sbb
inc
or
xchg
dec
add
mov
xchg
xor
xchg
xor
jb
(bad)
add
sub
hlt
bound
mov
sbb
mov
addr16
dec
mov
add
mov
mov
jbe
adc
xor
out
lods
and
xor
jg
or
push
retf
fsubr
or
and
xchg
sbb
push
sub
mov
cmp
cmp
sub
add
or
in
mov
std
loopne
aas
mov
mov
test
xchg
popf
sub
fisub
test
scas
das
sti
aam
add
mov
xchg
pmaddwd
(bad)
mov
das
sub
adc
dec
leave
add
cwde
cmp
dec
and
sbb
outs
adc
and
int
pop
cmp
dec
aad
js
dec
lds
pop
sub
xor
push
push
sub
arpl
cmp
sub
cmps
push
sub
test
add
cmps
das
dec
in
xchg
movs
clc
(bad)
add
mov
fnsave
push
push
sub
add
push
cmp
pop
aas
sbb
lss
mov
mov
lahf
jb
jb
add
frstor
dec
sub
out
ret
movs
mov
mov
xor
sub
jmp
xor
pop
daa
aam
add
retf
je
pop
ss
in
fdivr
mov
add
fld
mov
in
cmp
je
loop
push
mov
cmps
mov
and
(bad)
cli
jg
sbb
imul
sub
push
xor
push
shl
cmp
jne
fbstp
dec
test
xchg
xlat
dec
push
fcomp
(bad)
test
repnz
aam
jns
mov
fimul
fmulp
push
fimul
dec
dec
outs
sbb
pcmpeqd
dec
xor
xchg
xchg
xchg
mov
leave
enter
mov
fs
mov
xor
in
pop
mov
jb
mov
cmp
cmp
fucomp
dec
out
pop
mov
test
or
and
jo
inc
mov
in
cmp
xchg
inc
cmp
adc
es
mov
dec
or
std
cmps
pop
mov
pop
lock
popa
std
shr
mov
sbb
or
jg
push
aaa
shr
std
loopne
inc
dec
add
std
mov
push
std
inc
push
adc
ins
push
pop
cmp
outs
or
(bad)
adc
ja
fwait
cmp
std
ins
jbe
arpl
jns
jmp
add
add
dec
std
push
inc
shl
std
in
fwait
sub
and
nop
and
inc
push
lods
inc
or
xchg
add
mov
daa
cmp
mov
rol
pushf
mov
sbb
std
clc
add
xor
dec
std
inc
sub
jae
lahf
loop
std
inc
add
gs
dec
ja
adc
inc
pop
lods
or
inc
adc
mov
stc
pop
mov
dec
add
add
(bad)
sub
cmp
cmp
pusha
and
daa
xor
je
push
pop
movs
add
jae
add
pop
aas
pop
and
mov
mov
cmp
es
dec
push
cmp
aaa
sub
push
pop
test
addr16
push
mov
pop
push
std
adc
sbb
push
sub
(bad)
sub
bound
push
xor
pop
mov
lods
sub
jmp
bound
ins
push
mov
inc
sub
mov
xchg
push
lods
adc
dec
add
push
push
pop
mov
sub
pop
or
xor
push
push
ja
jb
push
lock
and
in
sbb
push
in
pop
xlat
and
out
in
inc
push
mov
add
sub
jns
add
sar
pop
fwait
sub
xor
xchg
out
mov
mov
mov
xchg
push
sbb
test
push
test
dec
mov
lea
add
retf
add
add
jecxz
sub
push
push
sbb
imul
leave
push
mov
jne
int3
add
push
mov
add
inc
and
xchg
movs
hlt
repnz
adc
cmp
int
ffreep
int3
in
test
fcomi
push
fisttp
add
stos
adc
int
mov
sbb
add
push
iret
mov
cld
jp
rcr
test
call
sbb
or
jg
fld
inc
pop
scas
maxps
sub
shl
sbb
mov
xor
cwde
dec
(bad)
aaa
test
add
gs
cmp
mov
add
aad
mov
js
scas
inc
in
pop
js
dec
pop
sub
push
sbb
inc
add
xchg
fsubr
stos
lahf
sahf
or
push
imul
push
push
pop
lods
and
aaa
cmp
(bad)
pop
or
sbb
xchg
punpcklbw
ins
xchg
mov
xchg
cld
les
ins
das
inc
movs
dec
mov
je
or
loopne
or
push
jo
scas
lds
lahf
mov
test
shr
lahf
femms
xor
xor
bound
shl
add
addr16
fdiv
mov
add
test
sbb
and
adc
sbb
sbb
add
adc
nop
sub
sbb
mov
add
cmp
lods
add
cmp
jecxz
xor
push
and
xor
and
and
test
imul
out
lock
push
sbb
add
add
inc
add
adc
loope
jmp
cmc
push
and
jns
out
into
mov
pusha
inc
mov
push
fisttp
ret
add
push
daa
movs
stos
push
push
mov
dec
xor
add
loope
add
jle
test
shr
mov
adc
pop
jge
mov
cmp
inc
jecxz
mov
jnp
jge
pop
rcr
in
cmp
pop
loop
add
cmovs
aam
pusha
pop
outs
push
stos
pusha
imul
sbb
addr16
daa
add
mov
je
and
ds
into
sub
js
loopne
sbb
inc
inc
mov
pop
lock
sub
and
hlt
pop
jp
adc
fiadd
inc
popa
add
lods
sub
pop
adc
jb
push
dec
bound
adc
xor
adc
push
or
dec
pop
popa
sbb
popa
pop
imul
lock
mov
or
aam
ins
adc
pusha
ret
push
scas
sbb
xlat
jp
nop
das
scas
push
psllw
(bad)
push
movlhps
cmovbe
inc
mov
sbb
xchg
xchg
push
sbb
push
mov
and
mov
xchg
add
test
loopne
and
mov
or
inc
stos
add
and
inc
or
add
push
test
inc
pop
int
add
xchg
sub
outs
mov
mov
inc
iret
push
dec
es
mov
inc
les
(bad)
mov
in
mov
outs
enter
sub
lahf
rcr
loopne
and
or
dec
ror
shr
add
cmp
out
sbb
sbb
jmp
add
sbb
inc
ins
adc
(bad)
ja
daa
mov
addr16
xlat
adc
test
ror
or
sub
rcl
pop
push
xor
jl
mov
das
cmp
daa
and
mov
push
jo
push
xor
push
clc
ds
and
imul
daa
or
scas
xchg
mov
inc
pop
and
xor
and
ret
daa
mov
and
add
add
add
pop
xor
push
es
push
rol
push
xor
pushf
pushf
mov
in
mov
aad
psrld
cmp
imul
(bad)
out
sbb
jb
loope
xlat
ins
pushf
mov
lds
pushf
pushf
pushf
mov
push
(bad)
dec
inc
ins
mov
daa
daa
and
jne
sbb
inc
and
mov
push
push
in
push
inc
xor
mov
add
lods
stos
mov
cmp
xchg
or
or
jae
loope
cmp
adc
inc
add
pusha
xor
scas
sub
jae
jg
sub
sub
jae
xor
add
add
add
mov
push
mov
outs
dec
add
adc
and
inc
xor
add
add
shl
movs
xor
xor
enter
fiadd
mov
je
and
xor
mov
add
jae
out
or
inc
adc
inc
or
dec
pop
add
mov
test
test
jno
and
or
cld
add
test
inc
jb
cmp
and
cmp
mov
inc
and
add
mov
or
or
pop
add
dec
adc
jae
mov
and
or
cmp
push
push
inc
dec
jg
inc
mov
jae
push
and
ret
mov
stc
push
add
cmp
add
add
add
sahf
add
mov
jae
mov
push
std
add
jae
sub
out
mov
add
dec
mov
xchg
mov
jge
push
and
mov
jae
ins
jae
add
jns
add
and
xchg
mov
jae
mov
in
mov
inc
add
xor
add
sbb
jae
cmp
or
adc
and
inc
pop
in
lea
mov
in
in
xor
add
in
adc
into
jo
fadd
sub
jl
add
jmp
and
push
test
ret
ret
inc
in
jbe
test
pop
add
ret
cwde
sub
mov
mov
loopne
adc
call
mov
inc
sbb
pop
adc
mov
mov
xlat
push
loope
stos
xor
xlat
in
imul
mov
js
push
cld
xlat
fucomp
mov
nop
fist
jl
add
or
fstp
fdiv
(bad)
mov
inc
jne
push
or
and
mov
lods
add
dec
sub
je
mov
cmp
add
popa
pop
dec
mov
push
mov
inc
cmp
sub
add
mov
adc
add
mov
(bad)
pop
dec
das
push
inc
movs
rcl
cmp
mov
push
hlt
ret
mov
push
lahf
popf
mov
adc
scas
jg
mov
shl
and
sbb
fdiv
adc
aaa
or
inc
add
int
jo
add
and
aaa
jno
and
bound
mov
stos
in
hlt
mov
adc
mov
sbb
popf
add
add
add
popa
mov
repz
out
pop
or
loopne
mov
pop
ja
scas
push
lock
add
push
daa
test
add
push
mov
xchg
(bad)
icebp
or
shl
mov
jge
mov
xor
in
or
test
push
mov
cmp
scas
outs
(bad)
pop
adc
addr16
je
jo
push
push
popa
inc
andnps
push
pop
push
imul
je
wrmsr
retf
xchg
jecxz
out
add
out
add
push
mov
push
(bad)
daa
fadd
(bad)
js
shl
push
mov
rcl
arpl
sub
enter
bound
addr16
pop
pop
push
add
outs
add
add
mov
mov
mov
stc
add
push
fwait
mov
add
cmps
add
pop
fstp
popa
sub
pusha
icebp
mov
jnp
dec
push
das
loop
jns
int3
jp
lahf
mov
jns
hlt
jg
call
sub
(bad)
lock
ret
sbb
or
sahf
loope
adc
sub
fdiv
xchg
loope
dec
sub
int
or
loope
push
dec
jo
loope
push
mov
dec
loope
fstp
mov
scas
in
adc
dec
into
test
shr
pop
ror
int3
test
sar
and
sub
xor
cmp
sbb
push
push
add
out
fs
jmp
in
push
mov
in
xor
arpl
inc
jns
adc
mov
ins
xchg
mov
add
push
cdq
add
mov
and
sbb
mov
pop
xor
xor
xchg
sbb
adc
xchg
push
mov
add
cs
test
in
add
dec
mov
pop
ja
add
xchg
jle
mov
sbb
xchg
sbb
xchg
mov
xchg
test
addr16
pusha
ret
aas
xchg
sbb
xchg
xchg
xchg
sub
popa
xor
xchg
pop
xor
cmps
xchg
cwde
or
sbb
lods
dec
add
(bad)
adc
lahf
jo
loopne
pop
mov
push
jp
push
hlt
jg
mov
adc
(bad)
xor
test
test
mov
adc
into
xchg
enter
xchg
xchg
and
mov
and
xchg
xchg
adc
adc
scas
xchg
in
xor
xchg
outs
or
mov
pusha
xchg
xchg
gs
cs
xor
outs
push
jns
xchg
cmp
cs
mov
repnz
ja
scas
push
xchg
add
sub
push
test
xlat
add
push
xchg
dec
xor
dec
jns
imul
mov
xchg
pusha
test
dec
pop
or
xchg
dec
dec
xor
test
xor
lods
fs
ins
outs
bound
or
out
pusha
and
lahf
jmp
jo
call
hlt
mov
inc
adc
push
sbb
add
pop
cwde
daa
mov
jnp
pop
rcr
scas
sbb
lahf
dec
add
push
sar
dec
adc
xor
sub
bound
push
cs
mov
loopne
loopne
mov
push
mov
push
mov
test
mov
aas
sub
call
push
add
pop
inc
int
ins
mul
test
clc
pop
jo
add
daa
fmul
ror
or
iret
xchg
enter
xor
mov
into
ss
and
leave
add
or
mov
inc
es
adc
(bad)
nop
pop
test
in
pusha
inc
or
and
in
in
movs
or
rcl
(bad)
ror
pop
in
or
neg
adc
add
(bad)
inc
and
popa
push
adc
sbb
push
add
loope
push
movups
pop
ins
out
xchg
jnp
pushf
push
and
add
push
daa
inc
push
mov
pop
add
cmps
in
and
test
xchg
inc
pop
test
add
bound
push
ins
cli
ds
ret
test
and
add
adc
or
mov
dec
mov
add
outs
add
push
dec
sbb
inc
test
lahf
mov
pop
ret
push
int
(bad)
sbb
cs
lods
sub
fs
call
call
cwde
std
jg
cs
push
loope
add
out
scas
jo
mov
scas
cmovs
ret
inc
test
inc
ror
inc
adc
mov
pop
stos
shl
addr16
mov
mov
outs
push
rcl
mov
mov
or
rcl
mov
xchg
pusha
call
pop
and
test
pushf
fs
call
dec
pshufw
(bad)
sbb
enter
fdivp
cs
jo
inc
ror
adc
scas
dec
stc
or
inc
xor
fadd
gs
test
movs
and
mov
pop
pop
loopne
and
outs
hlt
xor
push
sub
adc
mov
sbb
pusha
or
popa
mov
adc
mov
inc
pop
xchg
(bad)
cmp
or
cmp
jbe
push
dec
jo
add
xor
pop
fdivr
(bad)
in
push
fs
add
cld
add
pop
cmp
ror
shl
imul
and
icebp
add
push
adc
mov
sub
sub
pop
add
jmp
mov
jno
outs
es
push
les
push
and
fs
scas
loopne
test
inc
add
dec
push
push
outs
sub
xor
sub
out
mov
int
add
pop
lock
push
add
sub
xor
gs
(bad)
mov
gs
or
gs
cs
mov
leave
loop
inc
mov
leave
aam
fsub
ret
push
leave
sbb
push
leave
cld
fild
mov
pop
mov
or
fs
bound
inc
xchg
jo
and
push
pop
pop
add
pop
mov
or
test
pushf
test
push
lock
in
adc
mov
mov
mov
dec
mov
or
addr16
and
rol
fsubr
hlt
dec
adc
or
push
pop
dec
scas
pop
aad
popa
pop
jo
add
cs
mov
stos
mov
shl
mov
sar
adc
sub
cmps
xor
mov
popa
test
push
add
or
inc
push
mov
mov
xchg
cmps
in
fnstenv
shl
popa
jns
pop
jne
sub
lods
lahf
xor
rol
in
add
pushf
add
push
mov
adc
stos
dec
push
daa
cmps
push
mov
cld
jae
dec
sub
repz
push
lods
lea
add
inc
pop
mov
scas
mov
push
or
enter
or
pop
ja
add
scas
mov
jle
mov
lds
rcl
addr16
push
retf
dec
bound
push
jnp
mov
arpl
push
mov
mov
mov
pop
call
mov
popa
adc
shr
inc
in
mov
xor
adc
scas
cwde
nop
adc
adc
cs
scas
fs
cmp
scas
xchg
dec
mov
(bad)
pop
mov
js
loop
into
scas
sub
fnstcw
mov
mov
imul
movs
mov
nop
pop
test
mov
pusha
inc
or
and
mov
mov
movs
or
mov
xchg
sub
mov
xor
cwde
lock
xor
mov
cdq
xor
mov
out
add
jnp
test
outs
add
nop
cs
pop
jnp
clc
mov
push
mov
scas
mov
push
add
push
mov
pusha
cmp
outs
mov
xchg
dec
sbb
inc
jns
mov
jne
sub
pop
adc
cmp
test
push
xor
jg
add
sar
add
sub
cld
sub
gs
fs
mov
push
sti
push
add
pop
adc
ss
push
mov
xor
push
and
add
pop
mov
mov
jle
adc
lahf
jo
and
xchg
xor
ret
cmps
dec
loopne
adc
cmps
sub
bound
inc
cmps
test
mov
outs
xor
mov
or
cmps
test
loopne
test
mov
shl
cwde
cmps
cmps
pop
fisttp
es
movs
adc
jb
adc
das
jle
inc
ds
sahf
and
push
out
jle
push
hlt
jg
mov
sahf
jo
sahf
movsx
add
mov
or
xchg
call
popa
retf
xchg
nop
pop
test
xchg
int
inc
sbb
adc
hlt
movs
or
xchg
retf
xchg
sub
xchg
cmps
pop
int
mov
or
cmp
sub
das
(bad)
and
add
xor
out
es
fisttp
add
xchg
pusha
sbb
mov
add
push
add
daa
js
add
xchg
xchg
adc
or
pop
ins
rol
xchg
ja
inc
push
imul
adc
sub
popa
fist
aas
and
addr16
adc
push
out
neg
adc
sbb
es
inc
das
pop
push
inc
adc
sub
pop
(bad)
cmc
js
nop
push
pop
push
sub
dec
add
or
and
jae
adc
jle
cs
mov
shl
inc
inc
add
fist
ror
sbb
gs
push
fiadd
inc
mov
jecxz
or
ss
pop
mov
or
inc
add
dec
cmp
int
add
push
mov
mov
mov
dec
push
add
aaa
aad
lods
scas
add
jno
xlat
push
ret
das
hlt
push
aaa
add
jb
dec
test
push
cmp
mov
aaa
daa
cli
add
pop
mov
pop
push
aaa
xor
dec
ror
ja
fadd
cs
sar
movs
cmps
mov
add
dec
adc
call
xor
sbb
adc
imul
sbb
aaa
fs
dec
push
push
jbe
xchg
das
test
enter
addr16
adc
fadd
sar
xor
pop
retf
fisub
or
and
push
dec
bound
xchg
push
dec
xchg
sbb
cwde
dec
sub
inc
jno
pop
cdq
je
adc
sbb
pop
sub
adc
daa
inc
mov
or
push
pop
movs
jmp
push
dec
aad
inc
mov
mov
xchg
pop
outs
aas
push
dec
sub
push
cs
neg
fiadd
push
fs
add
lea
in
add
xchg
(bad)
sbb
bswap
push
(bad)
cli
lea
test
mov
(bad)
call
sub
(bad)
sbb
fistp
outs
fistp
ret
sub
xchg
sbb
mov
inc
push
add
(bad)
(bad)
pop
inc
push
mov
lds
lock
lods
and
cmp
pop
dec
sbb
aaa
and
rcr
mov
push
pop
das
scas
loope
mov
rdmsr
push
into
sbb
imul
sbb
adc
add
or
sub
(bad)
movs
add
movs
mov
push
add
adc
adc
inc
and
aad
mov
mov
and
pop
out
mov
and
leave
sbb
inc
adc
out
pop
jle
push
jmp
stos
aas
hlt
cs
xor
and
add
es
cwde
jno
push
fstp
or
dec
add
pop
rol
xchg
and
pop
lds
pop
push
xor
nop
push
adc
lods
and
ja
add
or
pop
enter
dec
fistp
nop
lahf
pop
mov
fcom
sahf
cmps
sbb
iret
ja
push
test
push
test
add
loope
fld
or
out
adc
pushf
fs
push
sbb
loop
mov
add
mov
adc
aam
xchg
js
rcr
sbb
push
xor
pop
dec
sbb
sub
loopne
fs
bound
addr16
push
and
mov
pop
(bad)
loopne
loope
pop
xchg
ds
loope
pop
pushf
sub
or
pop
sbb
nop
and
xor
mov
sub
sub
dec
das
push
push
pop
rol
push
out
pushf
xlat
pop
xor
pusha
pop
mov
out
or
into
inc
mov
mov
xor
or
test
jo
imul
pop
aam
popa
aaa
rol
stos
cs
inc
jmp
test
xchg
cmp
mov
inc
test
or
aas
or
or
inc
repz
xchg
push
popf
or
test
sbb
mov
sub
sbb
mov
push
add
adc
mov
adc
cwde
pusha
adc
adc
imul
int
inc
and
shl
mov
cmp
pushf
(bad)
jo
sahf
sub
jns
sub
mov
fstp
add
icebp
shl
cld
fistp
fmul
sbb
xor
mov
stos
push
test
jle
loope
ja
add
sub
adc
xchg
and
pop
ins
dec
adc
sub
sub
bound
test
addr16
or
dec
std
or
pop
(bad)
popa
pop
std
dec
mov
and
jo
fistp
std
lea
test
call
xor
sbb
add
pop
call
push
pop
das
ret
ja
push
push
cmp
push
pusha
pop
ds
lahf
stos
mov
adc
lea
push
xor
sar
add
xor
push
adc
mov
int
ror
int
or
xor
or
adc
push
cmp
js
pop
fld
mov
mov
xor
ss
iret
popa
aam
add
pop
and
ja
lds
iret
add
pushf
out
fnstcw
mov
push
jo
push
hlt
push
jne
fnsave
mov
add
push
ja
mov
sbb
aas
pop
jge
adc
xor
rol
rol
adc
and
popa
repz
add
xchg
inc
push
cmp
push
push
push
jb
fsub
outs
das
mov
lahf
inc
rcl
pop
js
adc
adc
fsub
jo
mov
adc
xor
pop
sbb
cmp
outs
imul
sbb
cli
loope
mov
and
sub
sub
sub
mov
shl
jo
dec
jg
add
or
adc
add
test
mov
adc
inc
mov
and
(bad)
shl
add
ror
sahf
daa
inc
dec
sub
loopne
mov
enter
inc
(bad)
push
fs
add
pop
push
push
fnsetpm(287
daa
add
scas
push
les
or
sbb
jl
dec
leave
imul
pusha
mov
sti
jo
adc
mov
ja
sti
hlt
(bad)
sti
cmp
and
shr
inc
loopne
push
cmp
cdq
add
bound
jb
lods
nop
mul
or
inc
xor
mov
mov
mov
pop
cld
das
sbb
imul
mov
pop
pop
dec
push
or
das
jno
add
js
imul
push
into
aas
push
add
inc
pop
popa
or
inc
mov
mov
mov
pusha
push
retf
mov
and
push
test
mov
mov
bound
pop
adc
mov
shl
ss
add
sub
les
das
ja
xchg
sbb
mov
add
aad
adc
scas
ret
cmp
mov
outs
ja
cmp
push
add
aas
daa
mov
test
das
sub
xor
mov
and
xchg
lds
adc
inc
ret
cwde
shr
cmp
adc
cmp
or
adc
rcl
les
shr
xorps
dec
sbb
in
inc
mov
lock
call
add
mov
ficom
or
sbb
pop
frstor
(bad)
mov
ficom
add
push
std
rcl
add
pop
push
in
bound
lods
ret
push
lea
sbb
xor
sub
mov
test
add
fist
add
push
inc
movs
loop
scas
jge
cwde
inc
push
mov
shr
call
fldenv
in
pop
push
test
cmps
mov
addr16
push
addr16
push
lods
or
fisub
jb
jne
jno
vaddpd
call
push
loope
pop
cmc
pop
pop
les
dec
xchg
pop
mov
pop
add
or
ja
popa
sti
mov
lds
push
add
ja
in
fwait
push
push
inc
inc
push
bound
jle
xchg
push
in
enter
in
inc
pusha
popa
and
sub
push
and
pop
adc
rol
stc
xor
add
push
jno
into
popa
push
or
push
or
in
push
sub
sbb
sub
repz
sbb
push
cmp
push
inc
mov
or
push
out
push
in
fwait
sbb
cld
push
clc
inc
push
push
mov
out
cmp
add
push
cmp
cmp
daa
inc
pop
popa
jo
pop
adc
or
push
js
sub
push
push
aaa
cmc
mov
fs
ins
outs
bound
inc
bound
xor
mov
xchg
sti
or
jae
lods
loop
movs
jno
test
loop
ins
xchg
jno
mov
mov
lods
cmc
jge
outs
sub
mov
ja
push
ror
loop
iret
out
out
cld
push
ja
cld
in
pushf
or
sti
ja
test
sbb
push
ja
add
pop
(bad)
xor
xor
test
push
xor
test
or
xchg
add
pop
mov
pop
test
jl
sub
add
imul
push
mov
fisubr
lock
push
push
lods
mov
xchg
add
out
aaa
push
nop
arpl
add
and
mov
push
rcl
out
push
out
in
mov
jb
jo
js
inc
out
pop
sub
test
pushf
pushf
das
mul
pusha
xor
mov
rcl
ret
inc
xchg
mov
(bad)
adc
cld
add
loop
push
dec
push
pop
push
dec
dec
push
je
fstp
push
xchg
pushf
push
ud2
or
xchg
fs
mov
aas
and
push
sub
add
push
dec
lods
or
cmc
gs
pop
lock
dec
mov
clc
pop
dec
sub
sbb
jno
or
mov
lds
pop
push
mov
cmp
popa
call
add
push
or
loop
iret
jnp
hlt
push
push
xor
dec
push
sbb
gs
test
push
cmps
mov
push
stos
push
push
sub
pop
scas
or
push
push
sub
fstp
mov
pop
icebp
dec
pop
sub
push
dec
jno
ror
or
pop
sbb
pop
lds
sub
pop
out
test
inc
sti
cmp
movs
dec
test
les
mov
fstp
push
(bad)
das
in
push
inc
mov
enter
mov
mov
inc
cli
adc
jnp
inc
push
in
inc
pusha
inc
pop
mov
shl
push
mov
xchg
pop
sahf
add
fcom
shr
dec
push
sbb
add
sub
adc
pop
retf
popa
push
mov
add
xor
mov
cmp
lds
and
mov
adc
push
mov
push
shr
call
add
sub
pop
mov
sbb
push
loop
mov
or
test
mul
inc
sbb
fmul
lds
sub
fsubr
jno
push
mov
sbb
pop
pop
dec
and
mov
daa
xor
out
test
cmp
xor
push
data16
jl
enter
daa
xor
ins
imul
and
mov
pop
scas
fisub
out
daa
push
push
stos
push
test
daa
shl
nop
je
add
and
sub
inc
jno
xor
and
je
and
jae
jg
mov
pushf
xor
jnp
add
test
cmps
clc
fisub
fimul
push
push
dec
sbb
ret
loopne
xchg
fsubr
ins
xor
or
mov
fisub
push
lods
push
rcl
std
xor
pushf
inc
rol
cld
mov
pusha
push
or
mov
(bad)
test
add
adc
pop
mov
imul
js
sti
cld
inc
adc
outs
je
data16
arpl
inc
mov
popa
push
mov
cmp
add
ret
add
add
dec
push
dec
inc
pop
dec
inc
dec
dec
inc
inc
push
inc
push
mov
sub
push
arpl
hlt
dec
jo
add
pop
inc
clc
and
push
outs
fs
cmp
jne
inc
mov
fisttp
loop
jne
data16
inc
adc
out
xchg
add
jne
popa
ins
ins
bound
dec
mov
jae
dec
sbb
adc
add
xor
and
jae
push
imul
fs
push
cdq
or
in
sbb
mov
(bad)
jo
imul
push
je
xor
push
and
jo
icebp
ins
outs
jne
daa
push
mov
sbb
or
je
push
js
mov
movs
sub
adc
call
fs
or
mov
(bad)
outs
stos
popf
push
or
or
retf
lds
ror
sub
sar
add
push
pop
jmp
cmp
cld
ret
add
mov
std
call
add
movs
test
je
mov
mov
into
into
mov
aam
push
bound
mov
ret
lea
jl
mov
adc
das
(bad)
xchg
call
frstor
pop
out
lock
test
test
jl
nop
stos
inc
(bad)
or
cwde
test
push
pop
and
inc
mov
sti
inc
jb
outs
jb
pop
and
ret
adc
mov
jle
push
cmp
add
cmp
mov
mov
dec
mov
or
(bad)
jbe
ret
pop
je
fisttp
adc
jno
push
fs
shl
pop
pop
adc
(bad)
scas
sbb
pop
jl
adc
jle
xor
mov
or
outs
jmp
sbb
xor
je
push
dec
js
or
inc
pop
pop
fisubr
outs
add
pop
mov
push
push
pop
xadd
cld
push
and
dec
cmps
mov
add
pusha
imul
mov
mov
cmps
sub
fs
mov
mov
push
mov
xchg
push
dec
push
data16
(bad)
hlt
adc
jle
je
mov
mov
mov
lock
inc
jbe
mov
out
shl
push
test
add
ss
jnp
mov
sub
je
fs
je
and
push
out
into
adc
jl
pushf
(bad)
arpl
movs
cmp
sub
adc
ret
add
je
push
push
dec
cmp
or
or
(bad)
das
sbb
imul
loopne
test
loop
int
or
out
lahf
cmp
adc
cmp
out
fmul
add
gs
jae
sar
adc
lea
mov
lods
sbb
push
inc
mov
push
xchg
pop
jecxz
fild
call
test
scas
ins
cmps
jg
pop
push
loopne
push
inc
push
push
pop
(bad)
icebp
cmp
movs
ss
in
jg
sbb
dec
fsub
inc
popa
pop
adc
movs
ss
mov
cmps
inc
mov
mov
push
mov
add
jnp
or
cmps
mov
neg
mov
ds
pop
cwde
push
test
mov
pop
push
adc
cld
es
out
mov
test
cmp
dec
mov
cmp
mov
push
mov
push
cwde
push
pushf
mov
icebp
shl
(bad)
pop
(bad)
jo
jl
daa
sub
xchg
xor
inc
xor
fisubr
shl
imul
js
fs
push
push
or
inc
push
popa
jbe
outs
popa
bound
xlat
into
jle
cmp
adc
pop
xor
mov
dec
popa
mov
jb
push
or
cmp
fisub
aas
pop
pop
test
mov
push
fmul
gs
push
jo
dec
ret
jo
(bad)
mov
jne
dec
xchg
and
or
dec
les
mov
sbb
js
add
popf
loopne
jns
fmul
das
mov
xor
dec
add
add
test
add
mov
sbb
stc
(bad)
jle
or
ret
popa
mov
pop
cmp
mov
shr
mov
xchg
out
add
data16
sub
imul
in
lock
xor
call
dec
outs
aas
pop
add
jle
cmp
push
dec
adc
push
push
add
dec
icebp
jl
(bad)
jmp
jp
data16
pop
mov
mov
bound
xor
iret
sti
push
push
pop
je
adc
pop
xor
mov
popa
(bad)
loop
sbb
jno
ss
fcom
test
adc
push
inc
dec
ja
xchg
clc
push
sub
or
dec
enter
add
xor
add
cmp
pushf
jle
add
(bad)
test
inc
lods
jecxz
shl
pop
or
jae
loopne
pop
mov
adc
mul
xchg
push
xchg
std
adc
pop
inc
pop
xlat
pop
rol
sbb
adc
xlat
mov
std
jo
jne
inc
cli
ss
out
add
push
mov
loope
push
adc
dec
jbe
pop
cmps
fadd
mov
loop
pop
mov
icebp
jl
(bad)
cld
xor
sub
fwait
add
aad
popf
adc
mov
inc
inc
cs
mov
mov
mov
dec
push
mov
arpl
mov
pop
and
or
mov
adc
adc
out
mov
stos
in
push
dec
add
ja
pusha
dec
int
pop
mov
ds
add
jmp
dec
or
push
mov
pop
daa
adc
add
dec
mov
add
dec
inc
or
pop
pop
movs
add
mov
jnp
(bad)
jne
push
dec
or
xchg
inc
dec
pop
add
add
fadd
dec
or
mov
jbe
leave
inc
inc
add
or
push
test
pop
add
fimul
and
(bad)
out
cmp
leave
fistp
and
push
inc
add
aad
push
aas
rcr
fmul
cmp
push
lahf
push
add
out
rcr
stc
inc
jmp
push
push
sbb
add
inc
or
inc
outs
or
add
fucomi
dec
fs
sub
cs
(bad)
loopne
xor
mov
out
lock
enter
push
sub
ret
dec
loopne
xor
cmp
jns
fs
xchg
movs
mov
sahf
out
(bad)
aam
hlt
add
sahf
out
cs
or
adc
jns
out
sbb
and
sub
(bad)
popf
out
xor
and
rcr
or
outs
imul
xor
and
jmp
movs
dec
xor
test
inc
popa
std
mov
aas
cmp
jae
rcl
jb
ins
or
pop
push
arpl
ficom
pop
daa
loope
outs
mov
clc
push
daa
gs
ret
ja
push
int3
cwde
push
into
nop
sbb
add
push
or
push
inc
icebp
adc
and
daa
mov
jecxz
jne
push
xchg
fcom
cmp
es
adc
jo
repnz
cmp
pusha
(bad)
and
addr16
int
ror
retf
add
jno
cmc
scas
rcl
dec
mov
fdiv
imul
and
adc
lds
add
not
cmp
add
icebp
fimul
or
pusha
pop
or
add
into
cs
or
adc
mov
inc
nop
mov
js
inc
outs
outs
movs
popa
stos
retf
int
test
scas
cmc
add
cmp
imul
push
fcomp
movhlps
push
data16
inc
jae
rol
cwde
cmp
ins
outs
pop
fidiv
cmp
push
xchg
cmps
mov
adc
iret
test
jno
push
jecxz
iret
xor
test
stos
iret
and
xchg
iret
pop
mov
int3
xchg
ds
push
shl
pusha
popf
cwde
add
lods
sbb
dec
in
(bad)
or
sub
or
push
(bad)
mov
or
arpl
(bad)
mov
lds
pop
push
push
jo
out
push
(bad)
jo
and
mov
lods
out
adc
push
dec
icebp
push
jg
loop
dec
sbb
bnd
std
call
leave
push
dec
xor
add
out
outs
psubusw
adc
adc
mov
(bad)
jle
cwde
push
xlat
cmp
hlt
cdq
push
mov
jo
xor
cmp
loope
ja
sub
ja
enter
add
mov
mov
(bad)
call
add
or
jmp
imul
pop
fadd
jne
in
mov
arpl
fadd
jne
mov
add
push
or
push
inc
nop
cdq
popa
mov
lds
pop
mov
lock
fmul
inc
jns
movs
and
jnp
add
lods
push
or
ss
add
fs
jg
outs
arpl
gs
jne
aaa
ror
or
shr
rcl
shr
pusha
adc
cmp
xor
mov
lea
sbb
test
push
jbe
or
pop
outs
pop
push
rcr
cmps
add
and
inc
pop
mov
daa
jmp
pop
rol
add
fld
fisttp
mov
int
dec
pop
jbe
rol
or
jne
inc
mov
inc
mov
scas
xchg
mov
jge
push
test
xchg
adc
push
inc
jb
jns
daa
or
pop
sbb
retf
ds
push
gs
ins
push
popa
sbb
add
xchg
add
pop
aam
loop
mov
fs
mov
and
jmp
mov
jbe
nop
jnp
sub
rol
bound
addr16
mov
pop
pop
shl
sbb
push
xor
ins
into
or
lahf
mov
retf
std
jp
adc
and
iret
sbb
lahf
cld
mov
fsubr
and
inc
lahf
and
out
xchg
xor
add
or
mov
mov
cmps
mov
push
or
cmp
sbb
mov
clc
push
add
js
repz
inc
pop
pop
xor
inc
cmp
pop
push
outs
cmp
into
ret
add
dec
inc
sub
scas
adc
add
sbb
retf
jg
jge
sbb
outs
pop
das
push
loope
outs
lock
cs
jno
push
outs
fisttp
push
rcr
and
xlat
xor
ficom
push
add
cmp
sub
aaa
adc
inc
fcom
int
loope
cld
loopne
loop
dec
jb
dec
bound
or
mov
push
or
and
shl
cld
aas
or
push
adc
or
pop
shl
ja
mov
inc
push
daa
cmps
inc
add
inc
jno
hlt
jb
rcr
popw
push
das
outs
push
dec
mov
test
popf
mov
adc
push
xchg
cli
xchg
mov
inc
dec
popa
outs
mov
pop
addr16
je
je
add
push
adc
lock
pop
sbb
sub
adc
xchg
scas
sub
add
or
repnz
inc
pusha
and
add
ja
jnp
loopne
sbb
int
hlt
ins
outs
lods
shl
pop
shl
push
add
into
or
loopne
lods
adc
jp
out
es
stos
retf
scas
stc
stos
mov
jmp
cvttps2pi
pop
or
outs
repz
es
mov
push
cdq
adc
add
xor
lods
scas
inc
sbb
mov
mov
xchg
ins
pop
jle
push
jne
js
daa
fucomp
mov
je
sbb
je
out
add
push
add
xchg
dec
(bad)
add
movs
jnp
test
and
sbb
or
xor
fnstsw
add
or
pop
jo
movs
dec
nop
inc
test
xchg
mov
stos
or
inc
pop
das
xlat
or
xor
les
push
loopne
xor
xchg
sub
test
pop
push
int
and
lds
sub
push
(bad)
test
daa
(bad)
mov
pop
push
inc
test
lahf
dec
sub
ss
xlat
cdq
ror
add
xchg
test
dec
add
push
int
imul
fwait
sub
sti
ror
inc
in
sub
add
scas
cmp
xchg
xor
sub
dec
test
jae
jmp
jo
test
jnp
or
dec
adc
push
inc
cs
in
jecxz
mov
jp
jb
xor
dec
jnp
cmp
sbb
sahf
pushf
pushf
mov
lock
dec
dec
inc
jae
add
daa
daa
daa
daa
dec
jno
into
xchg
xchg
xchg
daa
add
push
mov
enter
(bad)
or
into
leave
mov
nop
push
cmp
cmp
fimul
push
js
mov
fs
dec
dec
cmps
lds
dec
dec
je
jo
push
dec
jmp
adc
inc
jns
cmp
outs
in
imul
pop
add
adc
xor
xchg
add
sub
fild
dec
lock
lahf
xor
inc
add
jg
add
adc
and
xor
nop
leave
or
adc
cmp
test
or
push
jp
loopne
bound
push
dec
das
adc
sbb
push
jns
scas
ficom
outs
or
cwde
add
outs
cdq
jbe
shr
and
ja
cmp
push
dec
jp
movs
les
(bad)
movs
add
out
add
pop
movs
mov
add
jo
or
pop
or
mov
adc
mov
add
gs
je
pusha
push
popa
arpl
sar
and
add
inc
or
ret
test
pop
dec
jae
imul
add
nop
fldenv
out
or
iret
dec
add
add
fucomp
mov
mov
ror
imul
add
sbb
lea
and
outs
add
in
or
push
inc
xor
xchg
std
sub
stos
sbb
shl
push
jo
gs
sahf
imul
scas
(bad)
enter
add
aad
lods
cwde
or
xchg
pop
or
sub
xor
jno
(bad)
int3
ins
xchg
push
pop
xchg
and
or
sbb
gs
and
inc
xor
(bad)
push
inc
jae
fcmovnbe
push
in
push
and
nop
mov
inc
jo
test
add
push
cli
jo
aad
sbb
add
lods
xor
ror
add
mov
loopne
dec
mov
inc
mov
mov
sar
enter
add
lods
js
sahf
adc
sub
adc
dec
sbb
and
adc
inc
jl
shr
push
cwde
mov
test
push
mov
inc
repz
mov
pop
add
mov
nop
pusha
xchg
enter
push
push
dec
lock
dec
fadd
sub
or
ins
dec
xor
test
cmp
xor
xor
xor
xor
push
cmps
out
sar
fcom
push
pop
pop
and
push
add
xchg
inc
add
imul
add
inc
dec
or
xchg
pop
mov
push
jbe
lea
mov
cmc
(bad)
cmp
popf
imul
and
add
sub
inc
cmp
push
push
add
pop
arpl
jns
xor
adc
add
test
inc
push
and
sub
mov
(bad)
bound
pop
ret
sbb
call
(bad)
dec
(bad)
mov
mov
call
pop
pop
push
shl
push
push
mov
mov
(bad)
(bad)
(bad)
jg
add
xchg
mov
mov
call
mov
dec
test
jl
inc
xor
mov
outs
(bad)
(bad)
out
and
cmp
jne
mov
jmp
inc
dec
jne
mov
pop
(bad)
push
test
mov
add
push
xor
mov
mov
mov
mov
and
fild
test
rcl
sbb
xor
ja
(bad)
jg
test
je
sub
mov
dec
jne
or
mov
jg
std
sti
and
dec
push
lea
push
mov
scas
js
fnstsw
adc
pop
mov
push
pop
mov
mov
ret
bound
mov
pop
ds
ret
cmp
mov
push
inc
mov
add
sbb
loop
clc
cmp
add
pop
test
je
sub
sbb
aaa
scas
(bad)
adc
jge
fadd
mov
xor
cmp
push
add
mov
mov
(bad)
lock
adc
cmps
mov
repnz
in
push
pop
hlt
shr
jbe
movs
loopne
outs
in
sbb
mov
ds
jg
jle
movs
mov
mov
dec
test
je
lods
mov
jae
pusha
idiv
(bad)
clc
xor
mov
sbb
push
mov
mov
fst
mov
adc
add
mov
pop
ja
push
xor
mov
or
or
out
punpcklbw
push
mov
push
sub
push
ins
xor
in
lods
jge
cwde
mov
pop
adc
mov
sbb
fcomip
mov
hlt
aaa
fldcw
pop
xchg
mov
sub
sbb
adc
add
les
mov
mul
xchg
mov
adc
jo
ins
mov
push
je
or
add
push
jl
jl
xchg
mov
aaa
idiv
sbb
adc
imul
jae
and
movzx
push
in
(bad)
mov
sti
sbb
fisttp
inc
shl
xor
xchg
fldz
fdiv
xchg
retf
xchg
adc
addr16
inc
or
inc
or
jbe
add
pop
cwde
shr
scas
xchg
push
pushf
or
shl
dec
dec
dec
shl
inc
aaa
dec
jmp
add
mov
mov
adc
mov
or
xor
mov
mov
lock
ret
add
and
jecxz
pusha
or
ffreep
mov
xor
sbb
pop
or
gs
cmps
out
jo
xor
lock
pop
jl
mov
xchg
hlt
pushf
xor
or
daa
leave
mov
xchg
jb
cmp
pusha
jg
dec
mov
mov
push
mov
xor
xor
cmp
jg
pop
div
(bad)
je
mov
jae
pop
inc
inc
inc
sub
loope
and
push
ret
add
or
dec
ret
das
test
jne
xchg
or
je
mov
je
rcl
cs
mov
push
mov
cmp
dec
add
clc
lea
aas
arpl
bound
mov
jle
or
xlat
mov
daa
dec
cmp
je
dec
jo
cmp
push
pop
mov
pop
mov
dec
cmp
aaa
add
mov
pusha
test
ret
loope
mov
cmps
sub
cmp
je
mov
push
test
and
test
jl
inc
dec
cmp
cwde
and
arpl
stos
das
iret
in
pop
fldlg2
retf
dec
jne
mov
mov
xlat
mov
adc
ins
outs
mov
or
dec
ffree
and
lds
aad
push
cmps
dec
push
and
ins
rcr
cli
xor
iret
mov
add
jne
mov
or
add
popa
pusha
fmul
jmp
hlt
adc
mov
and
scas
adc
ret
xchg
rcr
popf
std
rol
addr16
mov
popa
test
adc
push
add
mov
mov
and
cli
adc
pop
jo
cmps
inc
inc
nop
inc
scas
leave
xor
retf
out
loopne
ficom
xor
mov
mov
xchg
or
jle
add
js
je
and
sub
(bad)
sub
pop
inc
mov
ja
cmp
je
jbe
dec
cld
cmp
sub
and
push
cmp
ja
fwait
mov
inc
mov
or
jno
arpl
jmp
pusha
cmp
add
in
jmp
adc
jne
mov
ja
fs
pop
jno
shl
sub
fdivr
imul
mov
jo
inc
movq
add
test
setg
and
je
cmp
mov
adc
icebp
daa
or
mov
or
ret
cld
or
push
(bad)
push
jmp
sub
and
fisttp
dec
or
pop
mov
call
inc
and
and
inc
pusha
scas
mov
pop
mov
dec
loope
pop
pushf
cmps
ret
add
fs
dec
sub
mov
pop
xchg
pop
jl
jl
cwde
arpl
test
mov
or
cmp
jmp
(bad)
jo
cmp
xor
or
pop
sub
xor
mov
jl
or
std
aas
ja
cmp
jne
fadd
cli
shr
add
cmp
add
aaa
inc
js
mov
pop
aam
les
jns
pop
or
fwait
or
pop
mov
lahf
dec
fimul
loopne
jb
aam
cs
jbe
add
fimul
pop
push
adc
jg
lahf
pop
or
fdivr
mov
push
ret
pop
js
out
cmp
add
test
pop
iret
sbb
inc
sbb
out
add
je
mov
mov
scas
xor
or
adc
pop
(bad)
shl
pop
scas
fstp
jecxz
(bad)
push
mul
(bad)
adc
mov
retf
data16
mov
mov
push
push
push
loopne
cld
add
mov
imul
popa
pop
pusha
(bad)
loopne
mov
bound
or
inc
add
imul
jp
mov
add
inc
or
add
jnp
fcom
fadd
add
loopne
cmp
out
dec
add
adc
or
(bad)
out
cmp
mov
xchg
pusha
mov
mov
push
and
and
mov
psubb
xor
test
jecxz
sbb
xor
or
jg
lea
stc
pusha
lea
dec
lock
ins
pop
test
popa
clc
dec
cmp
xchg
clc
xchg
rol
sbb
fimul
jmp
mov
jbe
dec
lock
mov
sub
or
and
nop
mov
in
mov
fiadd
shr
fs
sub
or
sub
fisttp
xchg
lock
sub
jae
inc
sub
mov
lahf
fwait
outs
and
inc
fs
push
add
inc
aad
mov
jnp
mov
das
bound
inc
or
dec
call
aas
je
sub
inc
xor
sbb
lock
sti
inc
dec
jne
clc
es
(bad)
cmps
mov
add
pop
mov
repnz
mov
jmp
scas
int3
jo
in
aam
dec
repnz
add
sub
xor
xor
pop
ret
ret
adc
jp
faddp
gs
xor
cwde
fmul
mov
adc
pushf
cmp
nop
mov
inc
mov
ret
xor
push
cmp
bound
pop
cs
rcr
outs
jb
and
xor
sbb
dec
popw
push
mov
in
add
add
lds
jge
inc
and
call
jns
pop
jb
pop
int3
cdq
push
mov
push
out
cmp
pop
loope
dec
add
push
inc
xchg
push
ja
or
xchg
push
daa
pop
push
add
and
push
cld
pusha
ret
push
pop
call
sub
sbb
add
or
inc
add
add
jb
arpl
add
sbb
push
add
arpl
pop
test
shl
or
pop
xor
aas
adc
adc
push
hlt
sub
pop
cld
mov
cs
jo
stos
scas
xlat
js
retf
add
test
loopne
mov
scas
arpl
and
fs
stos
mov
push
inc
xor
outs
mov
pop
xor
adc
imul
call
or
test
mov
lds
add
ret
retf
xor
push
call
scas
and
mov
int3
cmp
xchg
push
mov
cmp
or
rcr
in
xchg
mov
mov
in
inc
test
jmp
ret
sbb
cli
popf
ss
mov
dec
pusha
loop
sbb
jp
or
(bad)
and
shl
add
lods
or
pop
stos
sbb
mov
sbb
xor
lahf
loopne
mov
clc
jno
push
add
rcr
xor
outs
cmps
fmul
stos
mov
inc
mov
mov
mov
xlat
rol
pop
pusha
ss
add
out
jmp
in
xor
inc
push
xchg
aad
mov
adc
sbb
call
ins
or
mov
or
mov
push
inc
nop
push
mov
inc
rol
in
push
cmp
jne
or
xchg
nop
pop
add
outs
push
cwde
cmp
outs
pop
loopne
imul
cmp
xor
loope
nop
pop
outs
add
push
xor
jnp
ror
mov
ret
lock
mov
xchg
sbb
inc
pop
mov
cmp
addr16
cmps
addr16
arpl
sbb
fadd
ret
jmp
cs
add
or
in
add
mov
call
clc
sub
cmp
scas
mov
hlt
lock
inc
xor
inc
mov
adc
call
pusha
call
pop
or
lock
cmc
fstp
pop
mov
pop
add
push
bound
push
jne
jl
or
mov
xor
push
or
jne
aas
jecxz
enter
cmp
lea
adc
enter
add
mov
mov
shl
push
pop
xchg
mov
aam
jmp
dec
xchg
adc
pop
jmp
imul
add
xlat
fnstcw
add
sbb
mov
and
xchg
hlt
xchg
mov
jbe
call
fs
je
cmp
and
add
cld
cmps
xchg
xor
ret
cmp
je
sub
sub
lock
add
add
inc
pusha
mov
aas
stc
sbb
cli
out
pushf
cmp
je
(bad)
adc
outs
cmps
dec
dec
mov
sub
jb
sbb
sar
enter
add
rcl
call
sbb
cmp
pop
jmp
xor
xchg
cmp
push
cmp
retf
mov
je
mov
in
mov
ins
xchg
inc
ins
pop
push
shl
adc
cmps
or
push
pusha
(bad)
xor
test
push
ja
mov
sub
inc
add
pop
mov
lds
pop
inc
scas
or
jne
mov
(bad)
and
(bad)
adc
in
cmp
mov
sub
call
xchg
xor
sbb
mov
dec
daa
push
push
jno
pusha
loope
sbb
loop
push
or
dec
jg
adc
mov
pop
data16
jg
test
pop
data16
(bad)
js
or
ja
loope
pop
sub
jno
mov
xor
and
(bad)
out
jno
or
jge
cld
push
add
pop
mov
sbb
call
cs
push
add
pop
fadd
pop
ret
inc
mov
push
(bad)
(bad)
loopne
lods
and
xchg
xor
xchg
xchg
mov
cmp
lock
push
loop
jge
pop
imul
ds
daa
cwde
loopne
in
call
sar
push
or
nop
adc
icebp
lock
push
or
pop
mov
xor
mov
rcl
loopne
push
fadd
leave
out
inc
or
push
sbb
scas
in
fcmovnu
jne
fucomip
lsl
adc
xchg
cmp
jg
sub
push
add
aaa
cmp
sub
mov
sub
mov
fimul
test
dec
and
je
mov
je
repnz
or
lea
push
push
xchg
sub
mov
enter
mov
call
je
or
rol
pop
push
popa
mov
push
push
xor
or
and
sbb
push
cmp
push
adc
push
cmp
(bad)
in
adc
aaa
push
or
lea
and
out
adc
cmp
mov
mov
sahf
in
xor
imul
jg
push
rol
fadd
dec
jmp
mov
loope
(bad)
mov
dec
fmul
jo
jg
(bad)
js
add
inc
sbb
cmp
sub
inc
sbb
loop
inc
pop
and
add
mov
arpl
xchg
nop
cmp
add
inc
add
std
sub
add
sub
sub
add
scas
test
hlt
sti
push
es
popa
push
dec
mov
push
enter
sbb
dec
ret
outs
in
push
mov
in
jnp
clc
jb
movs
les
sbb
push
or
inc
mov
and
jne
lahf
outs
push
cmps
inc
and
ret
hlt
sbb
imul
pop
cmp
daa
xor
push
sub
xchg
push
mov
test
pop
mov
xchg
push
pop
into
pop
mov
xchg
adc
(bad)
sub
mov
jle
adc
lods
push
dec
push
or
pop
ret
pop
xchg
je
jnp
jl
lods
ins
xor
xchg
sub
or
sahf
or
call
in
pop
push
sbb
push
cld
std
les
or
retf
fsub
dec
jno
or
pusha
cmp
xor
pop
add
sub
fdivr
sahf
add
or
das
push
pop
addr16
lods
je
addr16
mov
xor
push
test
sub
mov
and
(bad)
hlt
add
fwait
data16
imul
mov
push
loopne
and
jne
rol
add
jbe
cmc
mov
mov
rol
lock
ss
cmp
add
cli
jl
inc
in
sub
pop
push
cwde
hlt
jge
add
in
fld
imul
cmps
sub
out
jmp
test
pop
cmp
add
cmps
into
jo
xchg
add
adc
fidivr
out
nop
in
pop
pop
mov
ret
fs
or
inc
jnp
loope
adc
jmp
pop
(bad)
retf
(bad)
ins
pusha
mov
cmp
cmp
retf
repz
fild
ror
push
mov
pop
mov
lods
shr
mov
mov
and
in
xchg
fsubr
fimul
inc
das
adc
arpl
je
xor
jmp
inc
cmp
jge
bound
cwde
dec
hlt
mov
out
loopne
or
out
fs
inc
inc
cmp
ins
(bad)
cmp
mov
out
cmp
xor
mov
cmp
call
in
inc
shr
ds
sbb
jle
jl
sub
inc
add
lea
ror
mov
xchg
rcl
nop
inc
adc
and
push
movs
pushf
xor
pop
pusha
pop
loop
stc
cwde
sub
cmp
mov
dec
movs
test
fsub
xchg
(bad)
push
icebp
in
stos
aas
mov
jl
xchg
add
cmp
add
cmps
jg
adc
sub
or
repnz
mov
jmp
test
xor
add
add
push
adc
add
mov
stos
push
mov
jle
in
dec
cmp
mov
push
jnp
jae
js
inc
aas
push
inc
push
js
inc
(bad)
dec
sub
jno
add
xor
add
fmul
add
jno
sub
add
or
adc
mov
push
sub
push
sbb
sub
loope
add
sbb
push
mov
lods
pop
je
mov
scas
push
daa
jmp
nop
ss
xchg
adc
or
mov
inc
vpsrld
or
mov
mov
xor
adc
ins
jge
mov
(bad)
jl
push
mov
cmps
cmp
ss
jb
mov
or
hlt
adc
in
mov
jo
sub
xor
dec
sbb
clc
jg
jl
mov
pop
push
por
fmul
mov
adc
in
movups
mov
push
or
rol
mov
adc
rol
push
pop
mov
stos
add
ret
jne
push
loope
and
ret
ret
pop
dec
mov
inc
clc
movs
clc
setge
ret
cmp
and
(bad)
ret
int
sub
dec
pop
xor
call
pop
ret
jmp
inc
dec
jne
or
pop
out
lock
out
cmp
add
fistp
jp
jmp
mov
jle
scas
data16
push
jne
cmp
push
sbb
sub
dec
cmp
jne
cmps
rcr
(bad)
neg
(bad)
xchg
pop
jo
or
jno
sti
packsswb
dec
or
retf
mov
push
mov
loop
add
shr
dec
and
hlt
adc
push
dec
adc
dec
js
xchg
mov
out
div
push
push
test
push
jmp
add
push
out
cwde
adc
ss
cmp
pusha
pop
or
jne
sub
inc
cmp
mov
lea
jns
shr
jns
les
or
adc
in
jg
inc
repnz
or
stos
sub
cmps
pop
fistp
ja
call
adc
call
(bad)
outs
sbb
adc
fidiv
dec
jnp
xchg
les
push
ret
(bad)
std
loope
adc
mov
adc
(bad)
retf
or
inc
and
(bad)
cli
leave
stos
pop
fidivr
and
int
sub
stc
cmp
jl
cmp
mov
in
retf
mov
pop
imul
cmc
loopne
mov
iret
ficom
(bad)
mov
mov
dec
or
leave
add
es
pop
pop
adc
dec
hlt
ret
xor
push
fwait
push
mov
adc
cmp
push
push
inc
rol
inc
dec
bound
ror
dec
add
inc
or
pop
inc
push
daa
psraw
fdiv
sub
inc
sar
push
out
out
jle
push
jge
dec
inc
xor
sbb
xchg
scas
add
lea
dec
cmp
jg
es
push
push
mov
mov
jle
push
add
sub
mov
inc
in
scas
data16
or
push
pop
retf
adc
adc
pop
pushf
jg
add
xor
push
adc
add
clc
(bad)
call
jg
mov
sub
shr
add
and
add
(bad)
daa
and
jae
push
lea
jmp
popa
sbb
adc
je
lds
sbb
xchg
lea
mov
add
cmp
dec
sar
loope
cmp
(bad)
hlt
outs
ret
cmp
add
sbb
jle
aas
daa
shr
add
adc
add
dec
inc
adc
shr
ds
loope
shr
fnstenv
jle
das
jg
cmp
mov
mov
cmp
mov
fild
sub
push
repnz
dec
cmp
cmp
or
or
ins
and
cmp
cmp
xchg
popa
xchg
into
add
add
sub
test
push
(bad)
ins
jo
jb
jae
outs
cmp
test
ds
push
mov
push
mov
and
outs
ins
inc
gs
jne
je
fwait
add
xchg
cmps
hlt
sahf
mov
add
or
and
xchg
sbb
dec
js
scas
adc
loopne
int3
jno
jnp
test
jmp
cs
lods
rcr
add
out
cmp
add
push
js
xchg
pusha
ret
jno
ins
jnp
xlat
add
imul
jecxz
and
push
jo
sub
mov
scas
mov
ret
aaa
test
or
std
dec
dec
add
gs
data16
lods
add
fnstenv
popf
adc
ds
sbb
nop
mov
jne
push
ds
test
addr16
mov
ror
push
lea
push
fild
jp
adc
push
or
mov
xor
sub
ins
sub
mov
ds
or
push
imul
push
xor
xchg
pusha
mov
in
aaa
cmp
adc
dec
xchg
(bad)
cmp
outs
add
push
fsub
push
mov
add
jo
pop
push
pushf
aaa
sub
xor
sbb
push
mov
fidivr
lahf
inc
mov
test
call
in
into
push
add
xor
jbe
inc
jb
popa
jns
popa
outs
jo
push
shl
addr16
ja
xor
add
or
out
jecxz
push
inc
scas
sar
and
inc
jb
dec
outs
fs
shr
and
and
in
mov
jne
add
int
aaa
pusha
jbe
mov
sbb
mov
loopne
inc
call
std
mov
mov
add
xor
in
push
cmp
push
ins
ins
outs
test
mov
mov
(bad)
mov
cs
popa
arpl
xor
and
and
je
fcmovnbe
push
add
out
push
adc
in
out
lock
test
adc
add
add
adc
adc
cmp
stos
push
gs
add
test
out
mov
rol
in
adc
xlat
(bad)
sub
add
push
repnz
add
add
push
lock
cmp
js
or
mov
pusha
aam
aas
pop
jge
and
sub
sbb
pop
adc
pop
rcr
in
cmp
adc
add
pop
push
fldcw
popa
dec
lock
push
loopne
push
cli
push
add
xlat
popf
push
add
cmps
pop
push
mov
inc
mov
cmp
push
xor
pop
and
ret
xchg
stos
pop
push
pusha
fiadd
fmul
mov
xor
gs
sbb
(bad)
cmp
mov
push
inc
push
ins
jne
or
mov
or
movs
sbb
xor
push
and
mov
jg
imul
cmp
(bad)
jmp
inc
mov
dec
inc
inc
imul
jmp
mov
add
mov
test
dec
cld
outs
sar
or
sub
sti
xchg
xorps
arpl
and
jo
mov
into
mov
fild
add
jnp
jnp
sbb
(bad)
out
fistp
pop
sbb
push
push
push
stos
mov
push
jmp
add
sbb
dec
sahf
mov
or
ins
gs
sbb
in
push
jnp
add
adc
inc
inc
mov
xchg
lods
aam
cmp
push
inc
dec
or
inc
mov
add
adc
push
lock
dec
jb
ds
or
int
ss
popf
bound
inc
popa
cld
pop
xchg
push
into
xchg
movs
mov
and
cmp
and
cmp
int3
mov
inc
fs
pop
or
or
push
push
aaa
mov
mov
inc
mov
mov
movs
aam
imul
loopne
push
push
jne
push
jae
bound
cdq
or
mov
push
jae
add
repnz
dec
or
cmp
in
rcr
add
fcomp
dec
cwde
adc
xor
push
popa
pop
and
inc
ret
imul
adc
add
and
add
fs
fld
adc
and
jmp
xchg
add
shl
xchg
fmul
dec
outs
aas
mov
pop
jmp
outs
jo
sub
xchg
call
mov
add
ror
pop
mov
aam
mov
addr16
pop
mov
iret
enter
add
jo
sub
mov
les
push
inc
inc
inc
jno
shl
shl
jne
inc
inc
push
addr16
jo
jbe
outs
gs
inc
inc
push
dec
sbb
push
push
pop
int3
test
add
dec
jb
in
loopne
aad
ins
idiv
pop
mov
jecxz
adc
push
cmps
pusha
(bad)
adc
outs
stos
push
pop
adc
mov
or
xchg
es
push
sub
adc
ins
jo
arpl
mov
mov
inc
xchg
sbb
or
mov
std
(bad)
adc
packuswb
push
cmovne
add
or
push
or
lock
jo
dec
mov
or
xor
or
cmps
jge
adc
pop
data16
outs
ja
adc
sti
clc
test
scas
xlat
push
sbb
aas
cwde
call
sbb
push
test
test
outs
std
add
add
rol
dec
inc
fcomp
outs
je
fnsave
cmp
in
xor
jo
pop
imul
sub
sbb
mov
sub
ret
sub
in
or
retf
movs
pusha
mov
test
adc
shl
push
jno
popa
js
and
adc
jmp
(bad)
cdq
mov
inc
ins
add
mov
clc
femms
or
imul
inc
jo
into
dec
add
stc
add
adc
cmp
setge
jmp
xor
loopne
rol
fwait
loop
inc
dec
inc
sub
pop
daa
and
adc
cmp
jl
sub
inc
in
mov
cli
or
(bad)
sbb
ret
push
sahf
lock
out
or
scas
push
inc
mov
push
push
adc
xor
imul
es
add
mov
stos
xor
or
ja
inc
dec
jne
mov
ret
xor
push
add
clc
jg
or
push
xor
mov
(bad)
dec
cld
lea
mov
ss
push
push
sub
lea
mov
adc
sub
mov
jns
jmp
inc
lock
rol
int
and
mov
xchg
fadd
scas
lock
pusha
inc
cmp
xor
xor
bound
mov
push
and
push
aam
or
xor
int3
add
ret
dec
inc
inc
ds
mov
dec
sbb
rcl
(bad)
mov
(bad)
jle
or
cld
mov
jle
test
out
(bad)
push
mov
push
and
pop
imul
cmp
add
ja
cmp
add
jmp
jns
out
add
jo
sbb
fmul
cmp
sbb
or
test
pop
rcr
add
or
xor
sbb
das
push
push
lock
push
mov
or
cmp
xchg
movsx
jne
movups
in
add
adc
add
jle
cmps
add
sub
cmp
sbb
pop
call
and
push
aaa
mov
pop
movs
mov
dec
call
test
scas
aas
clc
dec
mov
enter
or
les
lock
iret
lock
sbb
inc
add
or
test
xor
je
mov
mov
jnp
lds
mov
nop
and
add
test
lahf
call
push
pusha
sahf
add
adc
dec
sbb
shl
leave
xor
lock
cs
adc
jo
mov
adc
adc
mov
adc
sub
inc
push
push
stos
or
adc
daa
add
setle
pop
out
imul
jmp
data16
lahf
push
je
xchg
sbb
add
shl
mov
aas
add
idiv
push
test
mov
out
sub
inc
shl
sub
ins
and
je
stos
into
in
push
sub
adc
inc
adc
cdq
and
in
or
ret
sbb
adc
in
movs
jle
push
(bad)
ins
(bad)
push
test
inc
push
out
pop
inc
jno
sbb
mov
mov
rol
pop
lds
leave
jmp
leave
jge
ja
leave
je
test
data16
or
je
mov
mov
test
pop
jmp
push
scas
jp
clts
or
sar
xchg
mov
mov
in
push
or
jl
shr
sbb
call
loopne
or
fldcw
push
xor
idiv
or
icebp
mov
push
push
and
and
mov
pop
mov
jl
ret
cmps
pop
cwde
repnz
mov
jno
loopne
cmp
push
imul
mov
loope
mov
push
pop
imul
pop
or
jb
rol
cwde
adc
outs
int
or
adc
adc
movs
sub
aaa
neg
adc
mul
neg
mov
pcmpeqw
or
jbe
scas
jle
mov
jmp
sub
mov
add
sub
lods
loopne
dec
arpl
jl
add
cs
jmp
mov
fiadd
mov
fwait
sbb
cmps
inc
fmul
sbb
push
add
or
test
add
push
push
xor
fistp
ss
adc
mov
scas
push
push
and
or
or
push
les
cmp
or
xchg
mov
loope
(bad)
pop
xchg
cmp
cmp
pop
lock
mov
adc
sbb
inc
je
lock
xchg
into
cld
adc
cld
pop
iret
mov
inc
dec
add
loope
sti
mov
test
sbb
mov
fiadd
mov
xchg
mov
xor
dec
add
dec
mov
mov
pop
sbb
lock
or
ds
mov
push
add
neg
and
push
(bad)
sub
xor
xor
lock
adc
xchg
inc
ret
lea
lock
fadd
jne
adc
mov
ja
nop
push
sub
lock
lock
ja
mov
and
out
xchg
popa
mov
sub
or
call
pop
and
clc
adc
cmp
push
push
enter
je
ror
jmp
xchg
mov
shr
jnp
int
ins
cmp
adc
cmp
add
dec
pop
pop
jne
cmp
xchg
cmp
xor
xchg
and
mov
icebp
and
ret
in
iret
mov
sub
ss
fdivr
lock
lods
cmps
or
or
pusha
and
neg
neg
jge
fwait
push
hlt
ret
popa
mov
fadd
(bad)
ins
fadd
faddp
cmp
push
add
popa
pop
clc
bsf
pop
lock
in
sbb
adc
iret
fdivrp
call
inc
mov
push
or
sub
xchg
nop
xlat
leave
cmp
add
sub
add
sub
inc
lea
pop
pop
aaa
dec
pop
cmp
sbb
mov
or
add
push
call
xor
cmp
adc
out
adc
ret
fistp
cmp
sete
xchg
jbe
lock
fistp
shr
push
fisttp
es
mov
push
sbb
lea
bound
loopne
jb
inc
jb
aas
pusha
jmp
outs
add
sub
mov
pop
movs
xor
cmps
adc
cmp
xor
bound
enter
test
(bad)
cwde
sub
loop
sbb
fild
fmul
scas
push
jmp
sub
fnstsw
sahf
jae
dec
pushf
movs
std
nop
sub
inc
jmp
shl
ret
ret
fstp
pop
ret
cmps
inc
sbb
pop
iret
xchg
xor
rcl
jae
data16
addr16
mov
inc
loope
push
pop
xchg
jmp
lahf
or
aaa
xchg
mov
iret
and
leave
mov
add
adc
test
icebp
add
pop
xor
je
dec
mov
lock
sbb
inc
fldz
fcomp
sbb
pop
or
in
out
fadd
or
mov
in
adc
jb
sbb
mov
and
ret
test
ret
mov
add
or
mov
cmps
cld
xor
jl
(bad)
call
mov
mov
pushf
out
xchg
aaa
sahf
xor
loop
aaa
push
push
push
mov
or
pop
test
or
std
iret
gs
xchg
aaa
and
fbld
mov
pop
or
push
jo
fdiv
lfs
shr
ja
push
jne
and
mov
in
mov
sbb
mov
sahf
(bad)
sub
inc
push
pop
xchg
sbb
je
xor
cmp
inc
xchg
setbe
xchg
cmp
sbb
sbb
xchg
cld
mov
xor
dec
add
push
jnp
lock
rcr
call
pop
or
movs
lock
imul
(bad)
imul
retf
cwde
mov
add
fwait
sub
(bad)
call
adc
mov
mov
retf
xor
add
dec
rol
or
push
aam
call
mov
inc
fiadd
push
fmul
sbb
mov
inc
loopne
in
loop
sbb
pop
call
enter
mov
lds
and
and
aas
and
sub
mov
add
cld
mov
and
add
add
out
push
sbb
xor
add
add
retf
xlat
in
cmps
das
pop
push
push
xor
aaa
and
iret
call
add
es
int3
mov
icebp
pop
fisttp
(bad)
cmp
pushf
inc
lock
add
mov
push
mov
add
mov
out
jnp
and
push
sub
icebp
and
inc
add
daa
lock
add
add
cmp
cmp
bound
pusha
clc
fdiv
adc
xchg
lock
test
loopne
xor
fsubp
mov
inc
mov
adc
mov
inc
push
stos
pop
loope
fidivr
add
(bad)
add
jae
sbb
clc
jge
in
mov
nop
jle
nop
stos
inc
add
push
sub
xor
ja
out
sub
push
push
cwde
test
jo
inc
fmul
add
adc
outs
arpl
mov
dec
outs
jbe
fs
pop
add
adc
sbb
xor
pusha
rol
js
je
ins
shl
(bad)
pop
or
adc
sub
adc
jge
shl
inc
js
gs
xlat
pop
inc
add
jno
or
or
add
push
out
jns
gs
jg
mov
je
push
je
outs
fs
jb
pop
cmp
add
mov
std
push
inc
ins
bound
sbb
(bad)
rol
push
mov
pop
sub
or
cwde
loopne
or
push
out
adc
pop
fidiv
aaa
and
xor
pop
add
add
(bad)
fs
in
cmovbe
sbb
xor
aaa
cmp
out
punpckhbw
cmp
xor
loopne
jne
popa
rcr
cli
inc
gs
arpl
data16
xor
int3
adc
ds
ror
loopne
mov
data16
push
sub
sahf
pushf
or
mov
mov
or
inc
xor
sub
adc
add
inc
pop
int3
push
ror
outs
push
mov
(bad)
shr
jae
(bad)
fwait
mov
add
ds
inc
popa
sahf
jle
or
test
and
jp
out
inc
imul
ins
scas
dec
popa
or
inc
inc
jg
add
repnz
bound
jbe
sub
mov
fst
(bad)
ror
vpsllq
sbb
pop
add
xor
fs
sbb
sub
or
das
push
adc
sbb
or
movs
and
or
mov
pop
test
pop
in
xchg
or
int3
jbe
scas
add
push
loopne
add
or
mov
popf
dec
mov
arpl
or
jmp
mov
add
cmp
add
lods
outs
dec
dec
or
lds
lods
add
popa
push
int
or
add
dec
test
icebp
sti
add
dec
add
retf
call
jmp
mov
and
lea
mov
adc
movzx
dec
and
inc
and
xlat
lea
and
aam
(bad)
sar
dec
adc
icebp
inc
shr
pusha
mov
mov
mov
inc
push
mov
mov
push
hlt
cdq
xchg
xchg
mov
movs
add
aaa
adc
xchg
or
or
jno
retf
fucomi
rol
xor
aam
sbb
sar
pop
cmp
pop
and
cmps
clc
or
aam
test
cs
adc
mov
lock
jecxz
les
cwde
rcr
inc
and
mov
les
xchg
mov
sbb
call
in
dec
jge
fild
add
push
push
jnp
lods
inc
in
add
cmp
pop
push
push
push
fimul
push
or
or
movs
js
or
js
sbb
rcl
je
and
push
rcr
les
(bad)
cmp
ins
pop
push
mov
mov
push
(bad)
xlat
add
enter
mov
fidivr
mov
js
inc
xchg
dec
adc
cs
sbb
xchg
sbb
outs
imul
sbb
or
add
dec
fstp
jmp
adc
sahf
adc
sub
inc
xchg
fst
pop
je
jmp
pushf
jmp
and
push
rcl
adc
jae
or
xor
jo
dec
fimul
retf
pop
sti
cld
cmp
sbb
xor
lock
js
sub
mov
enter
xor
jg
(bad)
leave
lods
mov
out
cdq
or
stos
cmp
icebp
mov
and
and
loope
jge
call
ins
hlt
fcompp
xchg
push
xchg
pusha
or
dec
xchg
and
xchg
cmp
shl
lock
shl
int
iret
outs
or
jmp
addr16
mov
inc
mov
push
fsubr
push
adc
enter
in
mov
fcomp
in
add
loopne
jge
or
mov
out
xor
mov
mov
or
sbb
aas
mov
sub
addr16
movs
push
xor
ret
(bad)
mov
push
pop
inc
jne
xchg
mov
sbb
je
sub
sbb
xchg
xchg
push
mov
or
daa
dec
jne
push
xchg
pusha
xor
inc
cmp
xchg
xchg
cmp
sub
add
push
sbb
mov
mov
call
mov
sub
sub
xor
jo
fmul
or
repz
dec
dec
aam
aam
mov
aad
cmp
cli
shr
xor
int3
movs
jge
fstp
sbb
int3
or
pop
addr16
or
les
mov
rcl
pop
aad
out
mov
push
retf
push
xchg
ret
xlat
jns
pop
mov
mov
in
or
sub
(bad)
repnz
movs
outs
sbb
or
dec
mov
jl
xchg
arpl
sbb
int3
aad
shl
mov
sbb
call
mov
ror
or
sbb
inc
sbb
push
mov
and
mov
pop
fcom
push
mov
push
or
xor
and
xchg
fnstsw
cvttps2pi
add
or
pop
add
inc
cmp
jb
dec
inc
push
push
pusha
call
cwde
ret
mov
outs
sub
jge
inc
scas
shl
inc
imul
ret
loop
imul
outs
sbb
inc
daa
add
adc
cs
pop
sar
cld
pop
or
push
jae
pop
inc
or
and
ja
call
mov
mov
das
ins
push
dec
push
enter
or
mov
fnstcw
ss
fs
add
add
inc
inc
es
sar
jb
jns
cwde
or
cmp
mov
push
pushf
cmp
jg
add
pop
gs
jl
inc
dec
idiv
les
mov
cmp
push
cwde
push
inc
jb
jno
inc
es
mov
or
movs
fdivp
rcr
inc
push
je
outs
jns
sbb
daa
pop
(bad)
bound
ret
outs
mov
popf
or
ds
inc
push
push
popa
imul
fs
or
sub
lea
push
jecxz
add
test
outs
jp
add
ins
pusha
or
fstp
or
inc
jne
push
or
mov
add
or
icebp
sub
dec
adc
ror
jo
push
cmp
lea
push
sub
adc
rcr
data16
sub
pop
mov
call
adc
xchg
test
pop
cs
push
outs
jne
add
je
fld
std
sbb
add
cld
or
jbe
dec
gs
jecxz
mov
or
lods
mov
pop
sbb
mov
gs
mov
cli
in
jb
arpl
outs
ins
ins
arpl
sub
or
inc
add
push
mov
inc
jne
push
fcomp
xor
dec
out
pop
mov
das
pop
push
addr16
or
and
outs
pop
dec
push
pop
mov
xchg
in
ja
(bad)
dec
push
rcl
bound
and
pop
cmp
retf
test
push
dec
or
mov
pop
iret
pop
xor
pop
push
outs
iret
dec
lods
(bad)
dec
add
and
ret
inc
cmp
aas
aad
loopne
pop
xchg
aas
pushf
std
loopne
cmps
fsub
push
dec
push
inc
ds
push
mov
stc
push
mov
pop
or
add
pushf
add
adc
push
add
add
out
loopne
pop
xor
and
xchg
dec
or
and
ja
imul
or
dec
aas
dec
icebp
push
bswap
outs
popf
cli
push
dec
inc
jno
es
outs
ins
jo
pop
pusha
or
or
adc
iret
add
mov
ins
je
std
ss
add
or
push
jecxz
outs
push
push
mov
inc
rcr
mov
lock
sahf
outs
jbe
fadd
scas
shl
push
add
add
inc
pop
push
xchg
loopne
les
nop
push
adc
in
fcomp
jmp
inc
push
scas
sbb
add
and
dec
inc
adc
xchg
or
cmc
test
add
mov
cmp
jo
push
(bad)
cmp
mov
xchg
pop
inc
cmovle
test
sar
pop
push
loope
xchg
dec
sbb
das
push
shr
pop
xor
mov
pop
add
les
aas
pop
lea
or
jecxz
mov
or
dec
or
sbb
dec
sub
pop
push
das
xchg
dec
push
xor
or
lahf
xchg
mov
push
pop
repz
dec
xor
loope
loope
inc
add
sub
sar
sbb
int
mov
xor
add
or
rol
nop
mov
out
pusha
dec
inc
sub
or
dec
dec
add
jo
das
aaa
pop
cmp
add
neg
aam
add
push
add
push
jb
loopne
inc
and
xlat
daa
(bad)
les
mov
mov
dec
or
and
pop
loopne
add
jbe
push
dec
mov
push
inc
dec
jl
and
inc
ja
pop
lods
push
cdq
push
test
and
xor
dec
cmp
inc
jmp
jo
nop
cli
fdivr
sti
or
or
inc
outs
add
ins
sub
jns
and
jmp
pop
and
or
div
in
cs
add
stc
inc
mov
adc
into
or
cmp
fisubr
jge
mov
cwde
das
clc
das
cmp
rcl
inc
and
add
(bad)
imul
repnz
rcl
dec
inc
sbb
dec
and
test
push
or
cld
mov
std
sub
cmp
sub
std
dec
std
and
sbb
seta
jb
movs
jmp
icebp
xchg
lods
jb
mov
push
push
push
xchg
push
inc
mov
xor
xchg
pop
jg
adc
jl
mov
mov
mov
dec
or
pop
xchg
das
mov
push
push
rol
mov
imul
icebp
xchg
xlat
rol
pusha
mov
adc
aad
lods
cmp
sub
psubusw
jmp
por
xor
clc
mov
in
pop
xor
mov
pop
sbb
or
aad
scas
ret
pop
loope
or
push
test
and
iret
push
loope
test
loopne
jne
test
aas
stos
or
stos
pop
jbe
ja
cwde
aad
fmul
ja
inc
sub
pop
scas
or
scas
adc
push
add
test
pop
jo
xlat
dec
mov
loope
test
mov
pop
pop
and
aaa
out
push
push
add
push
or
mov
test
or
inc
add
repnz
sub
je
push
add
jns
cmps
xor
add
adc
inc
inc
pop
rcl
cmp
pop
jbe
add
pop
es
mov
adc
mov
loopne
(bad)
int3
and
mov
ins
mov
daa
cmps
push
daa
aam
test
movs
jmp
push
ret
aam
aaa
or
aaa
dec
adc
dec
xor
or
imul
or
add
repz
mov
fwait
adc
daa
test
add
jnp
sub
out
and
push
sbb
dec
das
ret
lods
pop
ja
push
xlat
sub
scas
in
adc
cmp
push
jecxz
loop
add
mov
xlat
scas
test
push
stos
sbb
and
popf
and
popf
aad
pop
mov
rol
pusha
mov
mov
inc
inc
add
sub
add
out
aad
js
icebp
sub
das
cmp
push
push
push
push
ja
fsubr
sbb
loopne
dec
loopne
sbb
or
inc
xor
push
pusha
xor
mov
stos
inc
cld
push
and
and
dec
aaa
xor
rol
(bad)
or
imul
mov
inc
inc
jb
ja
push
mov
xor
retf
mov
or
dec
outs
xchg
addr16
into
lea
xchg
bound
or
xor
xchg
xor
xor
aad
shl
adc
in
inc
cmps
or
xchg
cmp
psubsw
leave
leave
jno
test
sub
stos
bswap
leave
enter
or
addr16
leave
mov
aaa
or
fsubr
add
movs
pop
ror
and
adc
push
mov
mov
imul
or
inc
inc
popa
cmp
push
inc
dec
xor
jo
or
jno
add
jno
sbb
xchg
ret
lock
or
or
add
or
or
cmps
add
ins
mov
rcr
(bad)
dec
add
fs
loope
add
sub
jmp
test
xor
add
sub
mov
rcl
add
int3
or
or
fadd
xchg
outs
jge
push
ret
test
xor
add
add
fidiv
or
lods
add
(bad)
arpl
push
adc
jp
or
sub
add
mul
or
sub
clc
test
xor
dec
jb
xchg
mov
or
inc
xchg
add
cmp
cmp
nop
or
sbb
outs
jae
pop
mov
xor
add
leave
das
adc
add
adc
mov
add
xor
mov
add
xor
imul
popa
adc
dec
fsub
fdivr
push
push
lds
je
mov
pop
in
or
xor
push
outs
test
mov
add
pusha
xchg
cli
mov
iret
out
xor
and
in
mov
es
add
xchg
xchg
xchg
out
pop
or
adc
pop
outs
add
or
or
ins
mov
(bad)
add
aas
add
pusha
pop
cmp
jae
cwde
cmp
jl
jae
inc
inc
dec
test
or
inc
dec
or
(bad)
xor
add
in
es
das
dec
push
sub
aam
inc
pop
inc
test
inc
mov
out
or
push
clc
or
ja
jae
imul
jb
aam
call
add
adc
add
cmc
sub
add
add
cld
mov
inc
cwde
fsub
lds
sbb
xchg
ins
adc
pop
cwde
dec
cmp
add
loope
add
adc
mov
scas
add
pop
lahf
test
push
mov
push
imul
clc
jg
push
test
je
add
call
fimul
(bad)
sbb
mov
ins
add
movzx
add
sub
mov
ja
mov
xchg
adc
pusha
lea
mov
push
push
add
fs
(bad)
shl
jnp
jbe
mov
ret
in
push
add
fucomp
mov
push
pop
aam
cmp
mov
cmp
xor
test
or
loopne
popf
jge
movs
push
rol
dec
mov
mov
sahf
mov
pushf
mov
mov
add
add
xor
sti
hlt
cmp
sti
loopne
jne
mov
and
pop
jg
test
shl
adc
aad
dec
inc
addr16
cld
and
add
nop
jle
adc
jae
outs
mov
ins
and
lahf
outs
or
cmp
in
push
sti
mov
cld
cs
mov
lock
add
mov
ror
cmp
mov
outs
clc
(bad)
cmp
je
cmp
sete
and
je
(bad)
mov
pushf
mov
or
jl
je
sub
pop
ret
inc
mov
cld
mov
adc
lds
sub
neg
push
mov
mov
es
sti
xchg
xor
sbb
inc
add
std
mov
mov
add
or
loopne
lock
fimul
and
hlt
or
loope
cwde
sahf
or
jbe
sub
mov
(bad)
cdq
pusha
cmp
pop
int3
xor
push
push
(bad)
call
clc
xor
callw
cmp
or
movzx
out
sub
dec
cmp
scas
jae
in
adc
push
idiv
test
pop
fcomp
outs
(bad)
clc
jmp
lea
stc
pop
imul
fidiv
jae
inc
loopne
shr
inc
pop
inc
or
pop
(bad)
adc
pop
cmps
pop
rcl
add
jns
push
jmp
push
clc
loop
in
ret
mov
fsub
sbb
leave
cmp
jge
jne
cwde
enter
adc
inc
xchg
add
xchg
add
or
mov
bound
pop
clc
fwait
xchg
cld
add
fcos
inc
clc
or
sbb
jae
and
ja
ins
pop
add
rcl
ret
add
ret
add
not
cdq
push
inc
psrld
jp
fwait
xor
hlt
shr
xor
jbe
ret
out
imul
add
call
cmp
inc
adc
pop
imul
sahf
loopne
in
and
jmp
mov
jae
or
fcomp
mov
jnp
(bad)
mov
into
fnsave
fadd
mov
adc
ja
push
push
test
sub
dec
dec
call
int3
jae
(bad)
ds
icebp
dec
mov
push
jbe
lahf
jg
imul
mov
cmp
jg
adc
retf
or
and
adc
scas
out
or
sub
adc
shr
mov
push
add
dec
adc
pushf
nop
jl
aas
loope
sti
clc
add
rol
sub
mov
inc
jnp
pop
(bad)
xor
je
jbe
icebp
mov
jo
dec
push
mov
dec
push
push
push
dec
sbb
hlt
mov
mov
clc
fstp
fwait
cs
inc
fucomp
mov
fstp
and
sahf
js
(bad)
movs
adc
lock
xchg
mov
aaa
sbb
(bad)
xchg
mov
mov
rol
mov
cmp
test
and
(bad)
data16
add
push
sub
add
imul
xor
idiv
sahf
jo
add
mov
fdiv
setge
sub
in
jp
stos
dec
test
pop
push
int
mov
cmp
adc
mov
mov
pushf
lods
outs
int3
push
mov
mov
xor
adc
jmp
inc
push
push
in
or
pop
xor
stc
push
sbb
or
mov
push
mov
or
outs
loop
imul
mov
xor
adc
cld
push
and
jo
out
or
pop
sub
push
and
jbe
cmps
pop
pop
jbe
das
cmp
jg
xlat
inc
cmp
fadd
jg
inc
out
call
aad
sub
pop
aad
pusha
les
xor
pop
mov
jmp
mov
(bad)
in
or
jmp
and
out
jle
jne
adc
mov
loope
push
shl
in
in
dec
dec
call
mov
call
sub
lods
loop
sub
fstp
push
or
mov
cvtdq2ps
sub
push
mov
call
and
mov
rol
xor
or
fadd
inc
xlat
mov
aaa
sbb
rol
retf
cmc
inc
or
push
push
mov
fsub
jmp
out
or
pop
sub
fdiv
push
imul
add
(bad)
(bad)
add
lods
ss
sub
ret
mov
mov
sub
mov
rcl
xor
ret
jnp
loopne
(bad)
(bad)
mov
call
cmp
jne
or
es
cld
mov
lods
bound
fadd
sbb
fsubr
or
clc
fldenv
and
cld
add
inc
rol
push
into
mov
pop
hlt
jbe
add
dec
cdq
lock
jno
add
mov
stos
adc
inc
sbb
inc
rcr
xchg
sbb
call
sbb
mov
pop
sub
test
jge
inc
test
pop
pop
xchg
mov
push
outs
xor
cmp
cmps
mov
jbe
sti
ja
das
sub
jae
sub
mov
jmp
or
(bad)
jle
add
push
mov
adc
adc
out
mul
jne
push
aam
mov
sub
or
aas
js
or
mov
and
cs
xor
mov
mov
mov
mov
les
mov
in
gs
lea
das
add
test
(bad)
test
fld
or
cs
adc
adc
ret
loope
add
cmp
mov
fild
cmps
xchg
mov
cmp
popa
inc
vpaddq
inc
mov
sbb
sbb
push
movs
jecxz
call
push
fistp
push
inc
aam
fcom
aam
cmp
out
cmp
or
cmp
mov
fdiv
add
adc
stos
cmp
or
and
jl
pop
add
and
push
mov
add
push
push
mov
pop
rcl
out
lods
mov
enter
jmp
mov
jmp
xchg
mov
aad
xlat
sbb
and
add
int
ins
lds
jl
in
imul
je
add
jnp
mov
and
mov
fild
pop
and
inc
mov
mov
xor
mov
or
mov
or
inc
add
and
scas
pop
mov
mov
(bad)
xor
push
cmp
pop
pop
cwde
icebp
mov
ficom
pop
pop
(bad)
cmps
rol
add
je
mov
xchg
neg
fistp
sbb
adc
mov
sbb
jo
dec
adc
sbb
cwde
pop
add
cmp
jb
mov
inc
aad
push
xchg
mov
cmp
or
ja
test
adc
jo
dec
scas
add
sbb
pop
xchg
pop
adc
fdiv
add
inc
jmp
lock
inc
sbb
adc
push
cmp
and
rcl
push
xchg
mov
inc
mov
or
xchg
or
inc
push
gs
adc
add
call
mov
mov
(bad)
bound
out
sub
mov
dec
fadd
fstp
add
hlt
push
clc
mov
shr
je
add
out
sub
mov
sub
mov
add
lock
out
retf
mov
mov
add
cwde
or
push
js
mov
out
pusha
mov
mov
xor
pop
and
popa
xchg
inc
pop
hlt
js
out
and
mov
nop
or
and
aam
cmc
cmps
mov
sub
mov
in
mov
jmp
xchg
or
mov
bound
dec
jne
add
scas
in
call
fs
push
dec
in
and
push
jmp
popa
rcr
mov
mov
(bad)
imul
rol
shl
mov
dec
jne
xchg
adc
xor
sbb
ins
mov
ror
popf
fsubr
mov
adc
jo
jae
jmp
push
fld
jg
jo
mov
mov
mov
scas
mov
in
cmp
push
sbb
mov
out
ds
ins
popa
ins
popa
ja
enter
es
mov
popa
xor
aad
ins
cmps
push
pop
cmp
push
mov
and
div
ss
fdiv
sub
mov
popf
sub
loopne
cwde
mov
rol
ins
xchg
mov
ds
and
dec
lahf
gs
inc
sub
cli
xor
xor
jmp
mov
inc
call
fadd
aam
pusha
push
push
aam
pop
(bad)
in
data16
inc
shr
sbb
cs
popa
das
stc
rol
int3
lea
adc
shl
les
call
pop
adc
or
fistp
lods
xor
out
shl
leave
je
test
jne
push
jb
js
(bad)
jmp
and
cdq
xor
sub
sub
psubq
cmp
pop
pop
jo
mov
imul
add
push
mov
aam
lock
(bad)
imul
sbb
mov
fisubr
rol
fild
dec
mov
jle
add
fmul
pop
in
or
fcomp
loope
aad
and
mov
(bad)
xor
inc
add
inc
imul
add
pop
mov
xchg
jbe
add
adc
add
es
sub
pop
pop
mov
inc
or
xchg
xchg
sbb
aaa
cmps
cmp
adc
push
jmp
loopne
pop
jbe
mov
loopne
jmp
icebp
pop
and
adc
int3
lods
or
xchg
cmp
ja
and
aam
pop
add
jle
xor
xchg
test
adc
mov
dec
shr
shl
add
pop
cld
lea
add
xor
pop
sbb
ficom
fcmove
sahf
inc
sub
mov
push
loop
cli
stos
mov
mov
int3
gs
ficom
mov
dec
enter
cdq
mov
or
push
or
push
inc
xchg
out
dec
xor
add
retf
loopne
inc
cmps
(bad)
xor
stc
jp
loopne
adc
out
or
mov
pop
or
cmps
call
or
add
sbb
das
mov
and
fsubr
and
jge
ret
or
les
add
cmovno
sbb
jl
mov
clc
(bad)
mov
mov
cmp
sbb
inc
jae
lock
lock
adc
(bad)
and
xchg
in
es
add
inc
sub
call
and
mov
add
cli
mov
inc
and
pop
add
sbb
lock
in
ror
mov
jne
cld
mov
pop
pop
in
inc
inc
sti
adc
adc
or
adc
inc
in
push
test
cmp
jl
sub
repz
xor
lea
add
adc
sub
jb
add
jns
aad
sub
xor
and
cmp
pop
mov
jns
mov
jle
add
pusha
icebp
outs
push
cmp
jge
mov
les
test
push
and
bound
inc
or
or
ret
mov
jle
add
mov
jg
mov
sub
jmp
outs
sub
dec
inc
add
loope
lock
(bad)
movzx
rol
push
out
pushf
sub
cmp
add
(bad)
adc
and
or
bound
rcl
mov
mov
es
dec
jne
out
add
es
clc
adc
mov
jb
out
add
(bad)
push
inc
cdq
lea
sub
pop
xchg
das
jo
push
add
adc
call
sar
je
dec
or
add
mov
cld
sbb
fidivr
mov
(bad)
jne
jmp
add
jl
add
lahf
mov
inc
fwait
imul
and
and
jo
jo
out
jmp
rol
scas
mov
pushf
jmp
pop
je
ins
mov
or
inc
popa
adc
daa
enter
sub
cmp
mov
aas
and
sub
addr16
cdq
push
push
sub
or
call
shr
inc
test
inc
jne
mov
push
or
fadd
cmp
push
or
div
jge
sbb
outs
adc
mov
jl
mov
xchg
aas
cmp
jg
dec
jmp
movs
adc
add
sbb
jnp
enter
mov
sub
and
popf
ins
popf
rcl
sbb
mov
adc
fsub
nop
enter
sub
js
loopne
or
push
mov
clc
dec
lock
push
mov
cmp
xor
mov
adc
mov
push
js
or
rol
jne
push
push
or
inc
or
repnz
cwde
iret
inc
das
lods
mov
push
call
ins
mov
mov
sahf
dec
nop
jne
xor
adc
jne
ror
daa
mov
je
mov
push
movs
push
lock
dec
lea
mov
imul
jb
adc
out
add
push
sbb
xor
adc
out
cmp
loop
icebp
test
push
fld
mov
adc
add
and
mov
ins
lahf
fadd
push
or
push
(bad)
mov
push
adc
push
or
xchg
ja
fadd
push
xchg
cmp
shr
adc
or
or
(bad)
fisubr
or
cmp
jne
pop
pop
and
aad
and
and
mov
add
into
xchg
int3
pop
imul
sub
jae
jae
cmc
data16
adc
and
in
cmp
sbb
or
cmp
jle
sbb
and
clc
or
leave
jne
fwait
inc
dec
(bad)
cmps
lea
jnp
or
test
mov
adc
retf
or
or
push
cs
inc
js
adc
adc
mov
addr16
imul
mov
mov
scas
jp
sbb
dec
movzx
jo
sub
or
out
js
mov
push
lock
das
cmp
or
mov
sbb
sbb
mov
and
add
inc
xchg
push
loop
sbb
cld
in
pop
dec
loopne
outs
push
ins
jbe
mov
sub
jnp
and
jg
xor
mov
dec
test
push
jno
test
daa
lea
jo
cld
lahf
sub
add
mov
cmp
sbb
xor
adc
xor
movs
pop
nop
aaa
xchg
add
lods
pop
or
pop
pop
mov
scas
sbb
(bad)
call
imul
enter
xor
pop
std
add
xchg
sbb
mov
push
inc
jo
cwde
popa
and
fst
mov
ret
jo
jge
xor
or
inc
mov
pop
sbb
and
sub
mov
int3
div
sbb
inc
pusha
and
and
push
add
push
sbb
pop
(bad)
adc
and
inc
adc
pop
add
clc
mov
test
jl
jo
inc
clc
sti
stos
stos
push
push
cmp
not
mov
pop
sbb
xchg
jb
push
jns
scas
mov
push
add
sbb
pop
ins
dec
jo
in
jmp
ds
jle
mov
mov
adc
pop
mov
xchg
push
sub
pop
push
in
mov
jecxz
xor
popa
mov
inc
xchg
mov
pusha
pop
popf
ins
inc
or
jmp
add
aas
jmp
cmp
ret
cmp
je
pop
inc
inc
add
std
mov
pusha
xchg
mov
sbb
jmp
clc
jne
out
fild
mov
dec
xor
adc
mov
inc
adc
adc
fidiv
pushf
jo
setge
push
loopne
xchg
cld
inc
or
or
add
mov
sub
inc
mov
mov
pop
nop
cmps
es
adc
or
test
(bad)
add
inc
pop
sub
dec
out
dec
dec
xor
cmp
and
shr
xor
sub
sbb
rcr
stos
(bad)
fmul
mov
hlt
jne
pusha
mov
fdiv
cmc
push
rcr
and
sub
test
loop
aad
jne
retf
add
mov
cmp
xchg
aas
sub
xor
retf
ins
jmp
shr
int3
fcomp
lahf
sbb
add
sub
ret
mov
add
and
or
jne
xor
adc
hlt
pop
popf
add
js
mov
rcl
sbb
and
enter
jne
sbb
data16
add
(bad)
mov
cmp
rcr
jno
add
jno
pusha
xchg
inc
xor
sub
pop
add
fldenv
inc
out
dec
pop
pop
das
arpl
rcr
add
and
mov
lods
inc
mov
and
jae
fadd
dec
add
je
(bad)
xchg
adc
push
xchg
je
popa
out
add
and
dec
sbb
jmp
jbe
repz
nop
packsswb
and
lock
add
jmp
jmp
outs
add
cmp
inc
paddw
push
xor
int3
add
dec
cmp
loope
inc
jg
mov
xadd
add
stc
(bad)
and
cli
int
xor
or
or
sbb
call
mov
ror
ins
mov
ss
xchg
shl
jno
mov
inc
push
stos
push
aaa
inc
pop
jae
(bad)
psubsb
mov
sbb
or
or
add
pop
and
push
std
daa
movs
je
scas
and
and
xor
pop
daa
xor
daa
pushf
inc
adc
mov
mov
dec
pop
or
mov
pop
push
dec
mov
add
daa
imul
pop
daa
aam
adc
dec
pop
stos
and
push
mov
fistp
daa
cwde
in
xchg
sub
jne
pop
cmps
dec
test
je
mov
inc
xor
inc
fcmovu
pop
pop
pop
mov
jb
inc
push
add
adc
inc
push
mov
mov
jno
fadd
pop
xor
inc
xchg
and
call
mov
mov
test
add
mov
cmp
je
dec
inc
daa
test
gs
mov
push
add
mov
adc
push
jp
pop
sub
add
or
int3
push
mov
add
popa
js
xchg
push
xchg
cmp
jge
pushf
add
push
lea
pusha
je
sbb
add
or
iret
push
or
pop
leave
xchg
lock
mov
sahf
test
cs
xor
mov
cmp
lahf
out
fld
mov
add
or
mov
mov
dec
ror
popf
add
cmp
push
or
cmps
les
and
sbb
mov
push
sar
sbb
sub
jge
inc
aam
(bad)
mov
lahf
mov
dec
push
or
outs
or
jb
lods
jg
pop
imul
dec
repnz
fucomip
lsl
adc
adc
xchg
or
add
daa
push
mov
push
jmp
sti
inc
pop
popf
clc
mov
lock
mov
lock
inc
xchg
add
mov
inc
repnz
js
pop
ins
mov
mov
ret
bound
xor
xor
xlat
popf
jne
push
sbb
push
mov
or
push
dec
iret
in
add
push
(bad)
xor
sbb
dec
(bad)
test
aas
mov
cmp
shr
inc
adc
xchg
push
jb
adc
inc
rcl
pop
push
fsubrp
cmp
adc
cld
push
cld
mov
in
(bad)
sbb
outs
out
push
mov
push
sub
shl
mov
mov
mov
pop
push
push
sbb
push
inc
daa
add
xchg
movs
adc
addr16
sub
mov
sbb
and
cmp
xor
jl
ss
pop
inc
sbb
inc
dec
jb
jnp
ror
out
and
and
mov
push
or
lock
ror
or
mov
and
in
cmps
in
jnp
ret
ins
aas
seta
in
mov
outs
les
lods
in
lods
dec
xchg
push
xor
out
(bad)
pop
es
fs
inc
and
pusha
push
lahf
ret
adc
or
add
in
cmps
mov
ret
sub
xlat
imul
pop
push
ror
ret
sub
xor
hlt
adc
out
sbb
xchg
div
aam
pop
out
in
inc
cmp
and
jle
ins
add
fiadd
xlat
mov
repnz
or
shl
in
call
cmp
cmp
rol
jo
adc
or
adc
cmp
ds
in
sub
pusha
mov
and
push
or
pop
sub
mov
js
jne
cmp
out
inc
add
and
cdq
xor
lods
je
addr16
pusha
lds
push
push
add
pop
daa
sub
adc
es
int
add
ror
data16
into
push
and
fcom
cmp
mov
daa
inc
mov
cmp
mov
push
cmp
into
add
add
dec
jne
jo
pop
adc
inc
or
cmps
xchg
jmp
mov
rol
popf
pop
call
xchg
aaa
mov
inc
outs
push
pop
or
cmp
cmps
xor
sbb
lea
repnz
adc
cmps
pop
es
adc
dec
xchg
push
sub
xor
ins
shl
nop
add
rol
mov
sti
xchg
add
in
adc
adc
(bad)
outs
sub
out
adc
shr
inc
int
ror
dec
loopne
pop
movs
rcr
add
js
repnz
mov
mov
mov
mov
xor
lds
push
lock
or
fiadd
test
push
mov
pushf
dec
ret
add
pop
or
or
dec
stos
daa
pop
lea
or
add
sti
pop
inc
cmp
xchg
pop
sub
push
add
dec
cmp
scas
arpl
xor
cwde
movs
sub
cmp
scas
jo
push
sub
xor
aaa
push
inc
pop
jl
cmp
jp
(bad)
sub
inc
add
lea
push
jl
mov
mov
xor
dec
ret
dec
cmp
add
xor
out
and
add
cmp
popf
mov
movs
arpl
pop
mov
fwait
lods
jmp
pop
add
fdiv
icebp
movs
and
sub
daa
xlat
inc
push
std
test
jb
pop
(bad)
in
add
cmp
jg
cmp
pushf
call
add
cmp
in
cmps
loopne
popf
imul
icebp
jbe
fadd
push
adc
scas
sbb
je
push
inc
pop
arpl
cmp
xchg
rol
xchg
and
cmp
inc
jge
leave
push
inc
push
push
or
js
mov
adc
fdiv
or
push
fst
jmp
cwde
xchg
pop
mov
or
adc
lea
loopne
sub
sub
inc
add
xor
sub
lock
pop
dec
push
inc
fsubr
jne
dec
sbb
ret
fisubr
add
(bad)
pusha
or
mov
das
push
add
mov
lods
push
add
sahf
sbb
add
pop
or
add
add
xor
sbb
aaa
imul
ror
push
je
sbb
jo
cmp
add
fnstenv
jns
mov
std
jo
hlt
mov
and
push
fadd
(bad)
enter
dec
fdivr
neg
or
enter
rcr
andps
les
cli
cmp
add
jle
mov
ins
hlt
loope
sbb
sub
xchg
or
jmp
xor
fld
(bad)
mov
popa
vfmsubpd
sbb
fst
and
(bad)
dec
arpl
clc
loope
add
sbb
xchg
jb
mov
and
and
aaa
in
jbe
jle
dec
jl
dec
xchg
add
repz
stos
inc
fadd
test
ret
inc
aad
loop
ret
adc
stc
sbb
js
jno
cs
pop
dec
xchg
mov
and
dec
add
pop
or
in
pop
inc
dec
jne
je
clc
jecxz
enter
jbe
pop
and
pop
mov
cmp
add
fnstsw
fwait
adc
push
es
dec
cmp
push
ret
add
(bad)
fdivrp
add
dec
jle
(bad)
dec
cmp
jne
pop
rol
lahf
mov
or
or
jno
push
push
arpl
sbb
fidivr
stos
jo
mov
test
inc
dec
sub
jg
mov
mov
or
scas
push
ret
inc
or
cdq
mov
fdiv
int
push
test
push
lock
adc
dec
xchg
push
das
dec
jmp
and
lock
jge
sahf
sbb
ss
or
je
or
clc
sub
jl
pop
dec
js
cmp
inc
sbb
add
fs
pusha
inc
fimul
sbb
ins
xor
inc
mov
push
mov
xchg
hlt
icebp
inc
add
add
mov
lods
jmp
cdq
or
mov
sub
and
popa
and
adc
cmps
sub
mov
shr
outs
call
mov
daa
jle
push
das
sub
daa
adc
cmps
lods
les
push
out
and
pusha
inc
dec
out
cwde
fnsave
add
and
ror
lahf
push
(bad)
mov
inc
js
mov
add
js
dec
cs
leave
mov
data16
es
int3
aas
repnz
cmp
nop
pop
mov
push
cmp
jl
push
popa
movzx
ds
adc
inc
test
xchg
mov
jecxz
jo
add
out
repnz
pop
lds
and
inc
or
scas
scas
sub
and
data16
mov
push
pushw
jae
loopne
aas
sbb
lea
push
push
mov
sub
xor
pushf
je
adc
popa
xor
push
pop
retf
mov
call
adc
dec
test
sub
js
or
in
or
add
lock
mov
outs
pop
jo
xor
mov
ds
popf
add
repz
pop
mov
push
scas
cs
lea
inc
pop
xchg
inc
add
pop
adc
sub
xchg
pop
inc
cmp
xor
cmp
pop
cld
pop
dec
dec
adc
and
push
dec
xor
cmps
xor
mov
push
xchg
mov
movs
pop
push
fcom
cmp
fcom
ret
out
(bad)
lahf
daa
cmp
sub
inc
nop
inc
shr
pop
inc
out
call
add
mov
jo
test
sub
in
sub
inc
fbld
mov
fbld
test
jge
hlt
cmp
dec
aam
add
out
sbb
or
nop
dec
dec
xlat
push
jmp
inc
test
mov
pop
in
jne
pop
sub
retf
mov
aam
fwait
and
into
mov
rol
(bad)
fimul
mov
test
dec
or
inc
sub
xchg
inc
or
fsubr
test
lods
test
jecxz
push
fadd
and
cmp
iret
adc
inc
fnsave
sbb
sub
iret
pusha
push
xor
mov
mov
sub
mov
adc
adc
lods
jno
shl
cmps
dec
add
ins
test
jb
cmps
cmp
mov
push
or
leave
add
mov
scas
cmps
push
jo
cmp
mov
mov
pop
test
mov
xchg
ss
rcr
sbb
imul
xor
pop
rcl
xor
push
mov
dec
xor
popf
dec
xor
shl
sbb
jo
dec
jmp
xchg
or
dec
bound
add
aas
adc
repnz
adc
ret
lds
ret
adc
cbw
cmp
xchg
jbe
fistp
mov
icebp
lods
into
stos
loope
dec
sbb
loop
add
loopne
mov
sbb
aad
mov
fadd
xchg
sbb
adc
loop
dec
ret
dec
xchg
scas
cmp
mov
scas
retf
jo
xor
std
push
sub
mov
dec
xchg
cmps
scas
jo
call
or
cmps
mov
jmp
sbb
movs
xor
mov
movs
xchg
les
mov
cs
movs
les
popa
outs
test
dec
cmp
jle
rcr
cmovnp
ror
inc
jg
fild
xor
movs
ja
pop
sbb
arpl
jne
mov
fsubr
mov
pusha
pop
or
jne
jb
inc
dec
xor
scas
lods
add
jbe
jl
or
jns
mov
call
in
les
xchg
push
mov
dec
pop
cmp
inc
hlt
or
sbb
cmp
lds
ret
push
or
pop
(bad)
jmp
loopne
jno
push
or
push
loopne
xchg
mov
mov
mov
xor
and
pushf
dec
cmp
push
xor
lahf
push
loopne
adc
out
subps
sub
mov
xlat
dec
add
lahf
pushf
sbb
scas
lahf
in
sub
dec
pusha
pop
add
sbb
nop
imul
add
push
cdq
lock
and
xor
mov
cdq
nop
pop
push
movs
pop
or
pop
push
xchg
hlt
ror
mov
pop
hlt
dec
jo
test
dec
enter
sub
mov
xor
ret
push
or
inc
xchg
sub
xchg
outs
popa
movs
pop
dec
adc
inc
outs
test
and
xchg
push
nop
movs
inc
enter
pop
mov
hlt
xchg
sbb
and
rcl
(bad)
std
cmp
dec
dec
mov
mov
sub
leave
push
push
push
adc
fild
mov
push
push
sbb
inc
retf
xchg
ins
and
push
xchg
ss
mov
inc
sbb
(bad)
xchg
sub
in
push
mov
pop
out
cmp
xchg
dec
in
bound
adc
out
and
nop
jg
test
and
je
repnz
jle
mov
sub
arpl
jg
fsubr
leave
add
jg
xchg
mov
cwde
cwde
jge
sub
out
fs
add
push
imul
pop
inc
and
sub
or
ret
pop
cmp
ja
xchg
inc
enter
inc
xchg
cmp
or
(bad)
aam
and
mov
and
test
jmp
outs
lods
stos
mov
dec
jne
jne
pop
jmp
jl
cwde
dec
mov
cs
shl
jne
fwait
adc
daa
mov
sbb
mov
xor
jge
mov
mov
mov
mov
ins
xor
mov
mov
dec
cdq
sbb
mov
rcpps
rcl
addr16
sub
shl
lea
or
sbb
addr16
movs
xlat
jb
mov
push
xchg
xor
jecxz
xchg
mov
xchg
pop
mov
hlt
popa
in
push
sbb
and
cmps
sub
pop
pop
push
sbb
jno
pop
mov
sbb
stos
push
(bad)
dec
push
loop
push
mov
fcom
adc
cmp
dec
xchg
and
loope
xchg
sbb
push
fdivr
sbb
push
cmp
retf
pop
imul
xor
push
jp
repnz
mov
les
fidivr
daa
or
inc
ja
in
imul
inc
retf
push
imul
sbb
add
adc
ror
push
push
sub
fistp
adc
dec
or
leave
add
pop
adc
es
pop
dec
clc
ret
pop
dec
xchg
rcl
(bad)
pop
push
dec
rol
dec
dec
outs
add
data16
pusha
add
dec
mov
stc
or
mov
lds
cmp
cld
int3
sete
pop
sub
sbb
div
xor
fist
xor
sbb
jle
idiv
lea
dec
cmp
jg
add
ds
push
es
mov
add
push
add
or
ret
popa
inc
mov
sbb
adc
data16
or
push
jae
adc
adc
pop
mov
or
or
call
mov
mov
jmp
or
fdivr
pop
lock
mov
sub
shr
add
mov
push
cwde
inc
inc
adc
mov
jge
add
pop
add
push
popa
sbb
(bad)
test
je
lds
sbb
mov
and
test
adc
push
mov
int3
adc
pop
sub
bnd
retf
je
test
je
pop
sub
push
dec
jns
adc
je
mov
add
ja
data16
push
or
hlt
add
ficom
mov
add
push
in
out
xchg
sbb
push
aad
jle
add
mov
jmp
add
cmp
mov
or
lds
pop
push
cmp
xchg
or
or
jg
mov
nop
pop
into
sub
pop
arpl
stos
add
lea
loope
and
adc
add
push
xlat
pop
sbb
hlt
mov
inc
cmp
jecxz
clc
inc
or
and
sar
daa
shr
add
push
jecxz
xchg
xor
jb
mov
lock
sti
add
and
fmul
mov
add
icebp
pand
pop
das
jg
cmp
jl
push
je
sub
cs
fdivr
in
push
fmul
(bad)
jbe
mov
mov
dec
repnz
sub
in
cli
in
aaa
add
mov
inc
dec
jb
xchg
cmp
jle
push
mov
stos
xor
ds
mov
bound
hlt
outs
sub
loop
dec
imul
addr16
and
jb
sahf
add
jbe
inc
in
inc
repnz
enter
push
dec
adc
call
push
xor
and
cmp
jb
inc
pop
jo
push
pop
sbb
jb
xor
or
movs
bound
sbb
push
in
xchg
lahf
add
cmp
add
xor
mov
aam
test
sub
xchg
push
sub
sbb
cmp
adc
adc
es
adc
movs
loope
and
mov
outs
(bad)
jmp
add
bound
jae
cmp
jns
gs
cs
popa
or
imul
push
push
popa
imul
sub
dec
outs
(bad)
(bad)
in
jmp
ins
push
imul
sbb
gs
jb
jns
push
jae
ds
les
jns
push
fld
dec
mov
sbb
imul
arpl
data16
mov
inc
int3
mov
minps
ins
jo
dec
aas
scas
sub
inc
xor
sbb
clc
pop
or
inc
gs
jne
je
add
jl
xor
arpl
or
sbb
jns
jbe
mov
add
push
push
idiv
shl
dec
bound
adc
add
cmp
test
push
inc
adc
and
adc
adc
ds
push
adc
jbe
sub
daa
and
sub
push
inc
ins
fwait
mov
scas
sbb
ja
fwait
sbb
js
and
inc
push
ins
pop
fistp
aaa
cwde
push
pushf
clc
jge
jle
adc
idiv
ror
xor
daa
xor
dec
xor
pop
sbb
popa
neg
add
push
push
xchg
sub
mov
xor
inc
pop
dec
loop
fild
les
in
addr16
fiadd
outs
add
add
add
add
sbb
pop
push
sub
mov
inc
jb
dec
test
or
mov
and
mov
sbb
jnp
in
sbb
in
or
shl
out
cmc
push
add
into
or
stos
xor
std
mov
fsubr
stos
call
ror
mov
mov
add
mov
ror
dec
inc
outs
jne
sbb
add
xor
inc
sub
add
ror
call
jp
cmp
push
inc
ins
jo
jns
dec
arpl
inc
ret
sub
aad
cmp
and
arpl
in
es
das
pop
push
add
in
pop
cmp
xchg
fs
lods
dec
outs
rol
mov
and
es
inc
pop
or
ret
cmp
inc
out
dec
cmp
add
mov
hlt
push
inc
and
or
gs
je
popw
fdivr
add
pop
push
inc
jb
jp
sbb
loope
add
sbb
ins
or
mov
test
loop
inc
stos
push
dec
fcmovbe
dec
xor
les
movs
add
cmps
pop
bound
and
ror
add
cmp
xchg
push
out
jo
lods
push
add
jne
ins
es
pop
sbb
jge
div
push
fimul
sub
bound
shr
daa
jg
jbe
mov
loopne
dec
push
data16
or
outs
idiv
push
push
fwait
scas
xchg
or
cld
push
dec
mov
add
add
xor
mov
xchg
adc
add
or
call
push
xchg
sub
add
pop
adc
or
add
out
lods
shr
sbb
dec
add
je
push
inc
and
out
ror
movntss
daa
mov
xchg
xchg
xchg
jg
icebp
es
leave
leave
pop
cmps
fsub
test
repnz
push
jb
jb
sub
jns
xchg
out
pushf
pushf
mov
sti
js
sahf
adc
jno
(bad)
push
xchg
push
fild
mov
es
test
mov
cmp
fmul
jns
or
push
mov
add
mov
shl
iret
pop
push
dec
je
outs
jns
cwde
inc
mov
cmp
inc
or
dec
aaa
fsubr
cmovns
dec
jae
mov
push
adc
or
inc
popa
jg
lods
inc
leave
shl
in
lods
push
cmp
jle
inc
fs
ins
sahf
pop
add
ja
add
push
or
arpl
add
add
sub
fldcw
pop
add
lods
outs
or
outs
cdq
jbe
shr
and
ja
add
push
dec
(bad)
movs
and
fild
pop
jae
sbb
ret
enter
push
mov
xlat
or
xchg
mov
or
dec
add
inc
and
xchg
and
das
leave
call
gs
int3
call
arpl
xor
sbb
push
or
mov
inc
(bad)
pop
dec
jae
imul
stos
push
mov
iret
pop
and
sahf
dec
add
or
jno
fsub
or
push
pusha
repnz
mov
and
dec
sbb
push
popa
inc
lea
dec
push
or
or
mov
jmp
dec
inc
sbb
add
or
lods
cmp
push
push
ja
add
fadd
push
sbb
mov
mov
push
add
movhps
add
xor
inc
sub
or
or
ja
xor
add
sub
pushf
inc
pop
jae
dec
jnp
cmp
nop
jg
add
add
popa
pop
and
mov
pop
lds
pusha
dec
push
es
xor
cmp
add
popf
imul
cmps
xor
adc
add
push
loope
popw
dec
add
xor
imul
mov
sbb
add
retf
add
jns
retf
xlat
mov
fisttp
sbb
sub
fistp
shr
daa
sbb
push
ins
adc
shl
dec
or
adc
repz
in
test
mov
add
adc
inc
dec
test
sbb
cli
bound
mov
jae
and
xor
fadd
push
pop
sti
dec
lods
add
loopne
mov
or
ins
aam
outs
repnz
in
sar
mov
inc
pop
xor
data16
dec
cmp
aaa
adc
jns
pop
ret
loop
inc
or
or
test
or
and
or
or
adc
mov
test
cmp
popa
aam
imul
add
add
and
es
xor
pusha
xor
or
ret
ret
adc
push
add
sbb
add
dec
jno
test
push
cld
add
push
sbb
sahf
or
aas
pop
mov
js
add
cmps
jns
mov
pop
mov
add
mov
(bad)
frstor
push
(bad)
jge
scas
mov
(bad)
cli
(bad)
sti
xchg
cmp
dec
sub
pop
aam
inc
jge
stos
gs
stc
push
mov
(bad)
int
int
in
mov
and
stos
into
stc
dec
push
imul
aad
aam
jmp
or
pop
jno
cmp
dec
lea
sbb
push
dec
fwait
loope
jg
pop
stos
test
cmp
popf
cmp
inc
imul
(bad)
or
mov
enter
push
add
lods
das
rol
mov
push
adc
push
shl
push
aaa
lds
adc
rcr
or
mov
retf
(bad)
shl
rcr
xor
ins
jns
mov
call
nop
repz
pop
mov
pushf
mov
xor
mov
mov
rol
add
push
dec
mov
sbb
nop
das
ret
xchg
aaa
mov
push
cwde
adc
push
dec
data16
sub
mov
or
push
aaa
mov
test
jb
mov
aaa
push
(bad)
fiadd
xor
add
ret
push
icebp
ss
mov
pop
pop
add
paddusw
outs
ss
push
mov
mov
ss
xchg
push
leave
leave
leave
ins
dec
jo
fs
xchg
xchg
and
inc
jnp
cld
xor
sbb
xchg
jl
in
in
and
inc
xchg
(bad)
mov
repnz
fdivr
and
jb
fst
cdq
ds
cdq
loop
call
ss
pop
es
punpckhdq
jnp
push
mov
test
dec
std
cmp
gs
aad
dec
or
jmp
sub
popf
xor
jo
inc
test
xor
outs
test
shr
test
movs
inc
ins
test
pusha
and
stos
jne
sbb
add
push
mov
movs
outs
test
inc
test
mov
adc
mov
and
or
out
and
dec
test
test
inc
pop
jo
les
xchg
cmps
aam
xchg
test
push
les
pop
inc
call
and
adc
test
mov
xchg
loopne
fwait
dec
xor
test
sub
push
pushf
mov
test
jae
ss
mov
adc
cmps
into
xor
add
push
scas
(bad)
enter
dec
add
dec
popf
mov
daa
cmp
xchg
jge
push
cmps
add
xchg
cmp
inc
and
inc
inc
sub
ds
addr16
nop
add
mov
test
add
mov
dec
adc
add
je
sub
mov
(bad)
cli
push
adc
mov
and
push
pushf
push
or
clc
jb
les
dec
push
test
mov
shr
ins
add
dec
push
jns
les
cmps
push
adc
nop
and
cmp
push
push
mov
mov
rcl
push
icebp
cmp
push
rol
aam
cmps
fadd
push
lods
bound
mov
fcomp
xchg
not
add
sbb
and
pop
mov
stos
les
or
movs
outs
jne
imul
(bad)
or
adc
test
lea
push
test
mov
mov
sub
mov
pop
cmp
adc
daa
push
sub
loope
fsub
(bad)
loopne
lods
add
in
jp
xor
ds
add
xchg
cli
out
(bad)
div
(bad)
push
jno
cmp
(bad)
call
cmps
push
cmps
out
stos
dec
aas
in
ds
fsubp
dec
sahf
(bad)
(bad)
cmp
pop
jmp
adc
mov
cmc
ret
inc
(bad)
adc
test
mov
and
test
jle
push
push
mov
rcl
push
cmps
test
cmp
test
test
adc
jmp
xchg
test
pop
and
cmp
add
pusha
test
jp
mov
cmps
push
stos
bound
add
inc
shl
push
mov
movs
jmp
sub
pop
jbe
cmps
adc
je
outs
jl
add
stos
pop
pop
aam
scas
push
outs
fadd
daa
frstor
bound
popf
sbb
jae
sub
pop
cmp
sbb
inc
popf
enter
call
pop
pop
inc
test
pop
movs
or
cwde
sub
fmul
jle
cmp
or
pop
sti
push
fidiv
into
out
push
pop
mov
cmp
mov
and
pop
mov
pop
test
pop
add
mov
fbld
bound
xchg
sbb
in
fucomip
test
dec
data16
shld
dec
adc
jmp
fisubr
dec
outs
jae
fisubr
cmps
fistp
xchg
iret
daa
daa
and
cmps
dec
cdq
out
xchg
xchg
daa
xor
leave
enter
test
in
lds
stos
pop
mov
(bad)
jmp
stos
ss
jb
ins
mov
cmp
sbb
lods
cmc
aas
cmp
cdq
or
lods
pop
jmp
pop
ja
push
into
adc
mov
ret
add
cmps
shr
aam
cmp
fmul
dec
jnp
retf
jecxz
xor
xor
push
loopne
and
xchg
sar
mov
es
test
nop
jg
jg
data16
xor
and
mov
pop
sub
pop
pop
bound
cmp
shl
jmp
and
js
adc
test
push
mov
xor
or
xor
and
adc
or
shl
xor
and
inc
fwait
cld
fwait
adc
je
and
imul
sbb
and
xchg
fs
cdq
add
fnsavew
dec
xor
push
cmp
sbb
and
or
push
or
xchg
sbb
data16
aam
call
sbb
and
jne
int
call
nop
call
xchg
and
pop
bound
enter
lods
fwait
add
shr
(bad)
lods
dec
and
inc
and
and
add
pop
int
pop
and
and
and
(bad)
fwait
scas
and
adc
sbb
mov
(bad)
push
jae
push
pop
outs
mov
int
pop
and
sub
imul
(bad)
dec
and
inc
push
out
push
mov
cmp
and
rcl
jne
and
and
mov
xor
cwde
imul
inc
sub
arpl
and
adc
fcom
or
sub
mov
imul
or
mov
mov
push
ror
(bad)
jl
xor
loopne
scas
or
mov
push
mov
push
ins
(bad)
xchg
inc
fwait
test
sbb
in
ins
push
lods
cwde
xchg
aaa
ins
xchg
inc
pusha
cmp
cmp
pop
push
arpl
test
stos
cmp
mov
nop
sub
lds
push
xor
add
push
add
add
push
mov
add
inc
and
hlt
pop
jb
mov
cmp
int3
sbb
mov
push
sub
cmp
add
cs
je
push
mov
dec
push
add
mov
enter
mov
push
jl
scas
shr
call
or
hlt
pop
sbb
inc
mov
jne
pop
test
mov
adc
pop
loope
dec
aad
xchg
nop
call
lahf
push
xlat
nop
test
dec
or
addr16
sub
dec
imul
jle
sub
inc
jne
fisttp
cmps
sti
jo
dec
pop
sar
inc
push
loope
mov
xchg
mov
cmc
in
mov
adc
test
out
ds
sbb
push
mov
scas
pop
in
xchg
sub
and
sbb
pop
pop
sbb
data16
aas
add
mov
mov
cmp
shl
pop
neg
jmp
fisub
nop
outs
test
pusha
xlat
lock
push
out
adc
sbb
gs
jl
add
scas
cmp
test
aas
pusha
mov
xor
aas
int
add
ret
add
push
xlat
sub
sar
(bad)
adc
nop
aas
pop
ss
inc
inc
pop
inc
adc
add
pop
pop
mov
pop
scas
add
imul
lock
or
xor
and
and
je
inc
adc
add
sub
lock
adc
mov
loopne
rcl
adc
retf
(bad)
adc
or
add
jmp
push
add
(bad)
mov
cmp
add
lods
cmp
ins
cmp
push
push
fild
add
loopne
mov
shr
and
or
les
call
inc
mov
in
pop
sbb
in
adc
ds
jnp
xchg
mov
mov
mov
out
fiadd
add
adc
cli
je
dec
sbb
push
xor
inc
adc
popa
(bad)
imul
mov
scas
sub
scas
test
out
xchg
mov
fcom
pop
(bad)
cmp
mov
test
cmp
dec
ins
lea
pop
and
dec
add
arpl
jo
and
add
or
sbb
and
or
add
add
push
cmp
dec
or
add
add
pop
adc
out
cmp
lods
pop
add
ss
add
out
sbb
outs
cmp
push
mov
outs
pop
mov
js
outs
push
sub
addr16
loope
pop
test
add
cs
cs
loop
int
push
jne
add
pop
sbb
loope
jno
movs
loope
ins
mov
push
hlt
mov
mov
and
push
pop
push
loope
push
leave
add
pop
repz
sti
push
add
pop
jmp
popa
neg
push
iret
test
push
and
add
push
daa
mov
push
iret
test
cmp
fwait
and
loopne
shr
popa
pop
pop
push
pusha
add
arpl
cmp
scas
arpl
lds
mov
mov
adc
add
inc
xor
popf
sbb
int3
push
(bad)
scas
inc
adc
dec
imul
add
popa
xlat
dec
rol
repz
mov
lods
inc
mov
clc
push
mov
push
add
ret
daa
sbb
adc
mov
(bad)
shl
pushf
fild
jo
mov
adc
push
adc
dec
add
ret
ins
and
sbb
(bad)
sbb
test
sbb
loope
adc
sbb
imul
cmps
mov
mov
jns
push
pop
movs
push
or
jne
add
mov
add
or
loope
in
addr16
inc
ret
out
scas
ins
push
cwde
fisttp
pop
ret
jnp
mov
xchg
cs
addr16
mov
rol
loope
les
xchg
or
in
shl
mov
cwde
pusha
mov
lods
mov
xchg
int
daa
lods
and
and
mov
lods
pop
sub
std
cmps
mov
xlat
pop
inc
call
xor
or
add
pusha
add
sbb
inc
push
adc
cwde
dec
dec
test
pop
mov
cmp
push
popf
xor
cs
cld
cmps
xor
xlat
fnsave
add
add
ret
push
push
das
xor
loope
sub
inc
push
or
adc
or
popf
icebp
push
cmps
(bad)
xor
pop
adc
add
cmps
xor
add
cli
fucomip
fcomp
retf
inc
dec
enter
xlat
mov
push
pop
push
jp
nop
push
adc
push
daa
add
push
xor
test
adc
and
sbb
shl
neg
pop
pusha
rol
and
add
push
mov
loopne
mov
mov
mov
mov
mov
add
je
dec
sbb
or
imul
mov
add
jno
add
ds
pop
ror
pop
add
sbb
test
fs
push
dec
retf
cmc
mov
xchg
das
lods
push
aaa
mov
inc
sbb
sub
ins
jb
sbb
add
out
loop
aaa
int3
fidiv
add
xchg
push
or
pop
sub
xor
test
dec
and
inc
test
sbb
inc
add
ficom
sbb
test
lock
cld
int3
mov
and
cmp
adc
enter
add
mov
pop
mov
pop
jnp
inc
push
pop
mov
mov
pop
inc
jge
and
cmp
push
sbb
ret
push
mov
mov
adc
pop
jno
lods
jmp
cmp
push
stos
or
lahf
pop
mov
test
sbb
or
test
aas
push
add
ss
cwde
das
mov
(bad)
push
sbb
xchg
add
nop
push
mov
push
push
mov
xor
jg
rcl
into
out
push
mov
xor
mov
call
or
jge
std
shl
push
cld
sbb
test
fsubr
pop
mov
mov
mov
inc
dec
test
add
fidivr
adc
cmps
lea
mov
mov
sub
pop
pop
pop
ret
out
push
(bad)
dec
lar
fsub
and
ret
mov
mov
mov
mov
mov
or
cmp
lds
or
xchg
ror
dec
or
inc
and
cmp
dec
adc
or
aad
enter
xchg
int3
movs
inc
cmp
mov
test
je
sub
je
and
ins
push
retfw
jge
add
mov
jo
ret
hlt
xor
imul
add
cwde
and
test
ins
imul
(bad)
clc
dec
mov
je
test
jne
mov
add
(bad)
pop
sbb
push
call
inc
icebp
in
lahf
jae
pop
ret
fild
outs
add
outs
cmp
adc
mov
add
mov
sbb
xor
push
pop
ffree
in
retf
mov
mov
xchg
mov
mov
and
add
push
(bad)
loop
es
lock
mov
pop
xchg
sub
in
mov
sbb
ins
or
pushf
push
xchg
xor
push
mov
jl
lock
dec
or
sbb
jle
shl
pop
fs
or
cmp
mov
mov
or
(bad)
sub
leave
mov
shr
sbb
add
cmp
cmp
push
sbb
cmp
je
or
je
adc
push
mov
ja
mov
push
in
push
in
repz
fistp
rcl
add
iret
sbb
js
add
in
lds
fs
mov
push
mov
xor
adc
cmc
push
out
push
in
adc
adc
pusha
inc
add
sbb
add
push
test
call
cmp
icebp
ja
pop
nop
mov
push
clc
pusha
je
pop
dec
xor
mov
xor
mov
jns
shr
aad
add
sub
add
xor
sbb
sti
stc
in
mov
test
or
sbb
ficom
into
mov
cmp
or
(bad)
sti
adc
pop
gs
push
add
or
mov
mov
jo
or
mov
and
mov
jge
lock
add
mov
call
cmp
das
xor
add
mov
xlat
pop
add
call
or
shr
arpl
in
ret
fwait
cmp
mov
add
enter
aad
cwde
loopne
push
xor
xchg
hlt
dec
shl
jl
hlt
cmps
adc
adc
adc
sbb
ja
sbb
stos
dec
inc
sub
add
(bad)
hlt
ret
hlt
mov
cwde
inc
dec
pop
jmp
mov
out
mov
cs
lods
retf
push
aas
add
push
pop
retf
push
push
mov
fs
push
cmps
inc
xchg
imul
adc
hlt
clc
popa
mov
ins
and
xor
dec
sbb
jmp
fistp
mov
outs
pop
mov
jecxz
inc
jmp
add
test
jne
mov
shr
xchg
iret
mov
and
out
and
or
dec
push
lods
call
test
and
inc
iret
push
or
fsub
pop
jmp
int3
fisttp
mov
inc
(bad)
data16
test
pop
ins
and
xor
cmp
adc
jo
jne
cmp
cmps
cdq
cmp
fwait
or
sbb
push
loopne
lds
inc
inc
cmp
inc
cmp
stos
ret
stc
push
jb
hlt
fld
adc
loope
ins
jno
fmul
mov
mov
call
in
ins
or
mov
push
and
imul
loopne
pop
inc
jmp
add
sbb
mov
mov
mov
dec
out
sbb
cli
fild
push
pop
push
icebp
adc
je
dec
repz
add
mov
mov
mov
adc
pop
fsubr
mov
in
dec
adc
cmp
push
jp
add
lock
inc
cmp
movzx
or
dec
inc
push
outs
jmp
cmp
add
mul
pushf
jmp
cmp
jge
pusha
sbb
pop
jne
(bad)
imul
pop
mov
cmp
cmp
jnp
xor
and
fcom
cli
sub
cmp
sbb
sbb
sti
jne
bound
cmps
movs
cmp
jl
retf
loopne
repz
fst
sub
pop
rcr
pushf
(bad)
mov
mov
push
and
mov
jno
ret
ret
pop
add
scas
lock
xor
add
adc
cmp
je
xor
aas
aas
or
pop
sbb
test
add
clc
cmp
xor
neg
fld
pop
cmp
pusha
test
pop
inc
not
push
test
js
out
cmps
cmp
jle
mov
sub
lock
adc
mov
cmps
ror
mul
push
je
mov
idiv
leave
inc
mov
fbstp
inc
sub
dec
int3
xor
je
mov
jns
push
and
jae
test
jg
test
ror
mov
mov
add
sbb
shr
cmc
hlt
mov
mov
jp
cmp
inc
jno
sahf
(bad)
sti
jecxz
std
inc
lods
cmc
aas
push
push
mov
movs
test
mov
loop
cmp
aam
sub
and
fsubr
and
ror
and
nop
(bad)
mov
push
push
push
jne
mov
mov
fcomp
cmp
dec
jl
inc
loop
xor
rol
je
adc
scas
xor
mov
fcomp
add
inc
or
inc
push
inc
cmp
inc
dec
mov
xchg
and
jbe
adc
sbb
dec
pop
int3
cwde
pop
sbb
rcl
rcl
dec
add
sub
jae
sbb
loop
je
sbb
inc
std
mov
fbstp
or
cvttps2pi
shr
pop
add
sub
fisttp
das
into
cwde
mov
jbe
sub
jb
je
dec
je
jmp
mov
or
sub
cmp
push
push
mov
or
daa
jl
pop
inc
ds
add
dec
shl
daa
aad
mov
mov
call
cmovno
adc
ds
loopne
bnd
inc
jmp
or
inc
lods
push
cmp
xor
outs
add
leave
ds
pop
xchg
mov
push
stos
fstp
ins
out
dec
and
je
sub
mov
add
add
sub
push
add
pop
movs
mov
rol
inc
jmp
loopne
js
and
dec
add
hlt
adc
fadd
mov
dec
mov
aas
in
fwait
jle
push
add
jb
or
xor
sub
sar
jns
xlat
clc
sti
mov
add
stc
clc
sub
sub
jbe
mov
dec
jmp
adc
lea
add
out
nop
add
adc
icebp
jge
mov
pusha
sbb
pop
jo
adc
clc
push
inc
jl
lock
sub
jmp
jmp
ret
mov
mov
mov
aam
jmp
imul
ror
cli
inc
ja
cmp
bt
mov
inc
add
mov
fadd
mov
aam
arpl
dec
jg
lock
sub
mov
mov
out
scas
cmp
movs
sub
fsubr
adc
push
lahf
mov
jecxz
int
aaa
js
cdq
sub
jl
add
sub
jne
or
and
push
mov
aas
cld
mov
cmp
push
jmp
push
fadd
pop
push
push
push
js
(bad)
add
dec
sub
xchg
shl
stos
rcr
xchg
js
ins
js
adc
sub
div
nop
(bad)
add
mov
les
sbb
sbb
(bad)
sbb
clc
mov
rol
pop
loopne
scas
jge
xlat
les
nop
jmp
loope
add
int
push
dec
loope
push
popa
div
push
cmps
ins
cmp
iret
pop
push
push
push
sub
push
test
push
adc
mov
jl
push
dec
adc
nop
push
aam
cmp
push
pushf
fcomp
popa
test
push
pop
and
outs
pop
pop
movs
inc
lahf
fcomp
or
mov
and
loopne
or
imul
add
jns
add
mov
push
add
out
retf
cmovbe
jecxz
test
imul
add
or
add
scas
loopne
add
pop
add
or
or
(bad)
add
or
inc
out
sub
or
add
pusha
push
out
scas
pop
out
pfsubr
adc
call
maskmovq
jbe
adc
(bad)
adc
cmp
das
sub
add
pop
xor
fstp
dec
sbb
sbb
je
lock
pop
cmps
imul
inc
and
xchg
leave
mov
push
add
xor
inc
xor
xchg
add
add
outs
or
xor
jl
or
je
push
into
(bad)
neg
jnp
add
inc
or
fs
je
imul
push
into
add
fs
loopne
test
sbb
add
push
je
add
add
pop
jo
or
(bad)
int
or
push
pop
and
and
ins
jne
adc
cdq
sub
jg
or
gs
dec
add
bound
sub
imul
adc
mov
ins
xchg
ins
pop
mov
fisubr
outs
outs
ins
pop
lods
mov
addr16
or
push
mov
addr16
mov
mov
movups
mov
adc
mov
ins
fld
sti
inc
pop
add
or
dec
mov
push
sbb
pushf
stos
aam
pop
stos
add
cmp
or
xor
out
add
mov
or
in
inc
ins
outs
mov
sysret
test
test
sbb
pop
ins
adc
mov
sub
xchg
add
add
push
fiadd
xor
enter
mov
mov
shl
mov
bound
test
rcl
adc
push
inc
pop
dec
add
mov
sbb
dec
add
or
dec
push
or
xor
jae
cmp
mov
out
sub
jnp
fwait
jns
leave
jo
rol
jle
pop
setnp
mov
test
ds
jae
push
mov
adc
adc
imul
inc
jb
les
js
aam
jmp
inc
jo
inc
movs
inc
dec
gs
pop
es
or
add
add
pop
dec
jg
or
xor
xchg
mov
add
or
jo
out
inc
jmp
add
pop
jg
cmp
sbb
adc
out
or
xchg
inc
mov
mov
sahf
add
fs
shr
jge
or
mov
sbb
int3
fadd
popa
xor
sete
icebp
ret
xor
push
adc
push
sbb
sub
icebp
test
sub
add
ins
sbb
cmps
push
add
add
imul
xor
xchg
sub
adc
ret
outs
scas
jge
add
push
cld
in
push
sub
inc
das
or
fcomp
(bad)
loopne
push
dec
sbb
jle
pusha
cmps
and
inc
jne
imul
iret
mov
(bad)
fsub
scas
shl
sub
dec
mov
sbb
stc
xor
add
mov
xchg
xchg
lock
sbb
mov
daa
mov
mov
es
jb
jmp
ins
xor
push
imul
sar
xor
mov
inc
pop
pop
ds
jo
push
and
cld
inc
push
dec
mov
(bad)
xor
and
ins
outs
jbe
aas
xor
pusha
int
push
pusha
fadd
dec
outs
inc
mov
loopne
imul
imul
call
xchg
mov
pop
repz
jns
cdq
sar
push
out
fild
pusha
lock
cmps
ins
push
xor
push
cwde
add
and
and
adc
sub
jns
pop
or
mov
push
clc
test
sub
mov
fwait
int
(bad)
mov
push
mov
xor
mov
push
dec
push
cmps
(bad)
adc
mov
push
mov
push
les
inc
jbe
mov
mov
push
test
add
push
fidivr
ss
sub
je
fs
gs
je
add
mov
lock
inc
icebp
test
dec
movs
or
sub
pusha
or
push
adc
xor
fcomp
push
pop
xor
pop
cmps
xchg
out
push
dec
call
pop
mov
pop
add
(bad)
or
mov
jo
aaa
xor
xor
cmp
fs
dec
pop
mov
push
arpl
test
inc
mov
imul
sbb
iret
cmp
push
loop
in
xchg
(bad)
les
ror
cmps
mov
add
cmc
fdiv
lock
imul
push
adc
movs
inc
jo
xlat
aam
push
sbb
push
mov
adc
in
dec
daa
push
jo
sti
cs
rcl
and
mov
nop
popf
add
js
and
sub
push
in
xor
inc
outs
arpl
pusha
and
xor
lar
mov
add
add
push
add
and
out
scas
mov
pop
adc
in
movlps
sub
call
add
jecxz
dec
sub
fisttp
mov
arpl
sbb
lea
neg
loope
mov
addr16
mov
or
test
loop
mov
popf
add
outs
pop
mov
sbb
movs
adc
dec
xchg
movs
fwait
and
je
add
dec
leave
lods
inc
pop
sbb
das
sub
push
repnz
cmp
mov
xchg
xor
(bad)
jb
jle
and
inc
dec
sub
add
fnsave
out
sbb
outs
sbb
or
fstp
jno
out
or
add
mov
cmp
push
iret
fld
xchg
pop
adc
shr
cmps
fmul
sbb
ret
dec
test
sub
mov
loopne
pop
lock
mov
xor
push
inc
xchg
test
and
add
ror
pop
cwde
mov
inc
or
and
push
mov
push
movs
fmulp
rol
sub
or
div
pusha
nop
jne
push
or
xor
jo
or
mov
sub
xchg
push
jbe
sub
ja
mov
pop
dec
mov
dec
sub
jns
stc
add
cwde
jno
mov
loope
sub
and
push
ins
add
pop
adc
or
outs
mov
pop
and
xor
movq
jmp
jb
push
mov
lock
cs
outs
jb
sub
mov
jb
sub
js
push
sbb
cmp
xchg
xor
pop
lods
imul
sbb
outs
sub
gs
pusha
inc
outs
ins
outs
(bad)
iret
and
add
or
mov
inc
jne
xchg
add
out
cmp
mov
stc
pop
sub
push
push
shl
mov
mov
xchg
clc
ret
or
loope
(bad)
and
pusha
adc
adc
cmp
cmp
mov
js
arpl
sub
stos
pop
pop
sbb
pop
pop
pop
mov
push
pop
push
outs
gs
je
adc
pusha
push
in
dec
inc
sub
ret
xchg
push
dec
(bad)
push
cmp
ja
add
into
loopne
int3
stos
mov
cs
add
push
cmps
loope
mov
xor
adc
xor
ins
jo
xor
add
and
add
fistp
jmp
xchg
and
mov
mov
or
jns
mov
jae
mov
icebp
into
push
pop
leave
jge
pop
sar
push
adc
in
jmp
push
mov
into
and
cmp
push
xor
lds
fdivrp
and
into
retf
sub
inc
iret
inc
add
sbb
push
jl
jmp
aam
repnz
lahf
or
or
push
pop
scas
cmp
cld
xor
mov
mov
jo
mov
xor
or
pop
icebp
dec
popa
outs
popa
hlt
(bad)
sbb
jge
add
add
call
adc
js
js
xor
sar
ror
ret
out
add
js
inc
or
movs
dec
mov
dec
adc
and
fidiv
jnp
push
add
int
shl
sbb
into
jae
rol
push
add
shr
nop
xchg
sbb
(bad)
out
pop
adc
add
rdmsr
dec
sub
add
inc
arpl
push
gs
jmp
inc
(bad)
mov
mov
push
inc
outs
je
inc
or
push
arpl
popf
add
in
push
add
push
cmp
push
pop
push
les
sub
jg
inc
mov
mov
js
add
pop
mov
dec
mov
push
mov
push
cmp
ret
cmp
pushf
js
jmp
mov
pop
repz
inc
pop
call
fdiv
dec
pop
aaa
test
xchg
push
mov
pop
add
cmp
pop
or
movs
mov
adc
add
push
pushf
rcr
jno
mov
or
adc
lahf
dec
xor
sahf
push
fld
lock
mov
sbb
inc
add
sub
sbb
mov
mov
or
ret
mov
adc
out
shl
mov
inc
sub
mov
or
pop
imul
pmaxub
into
leave
push
lea
mov
dec
psubq
push
hlt
push
inc
cs
push
mov
data16
push
add
pop
movs
repnz
push
repnz
fs
into
sbb
jns
jb
dec
call
sbb
repz
pushf
pushf
pushf
mov
movs
fimul
inc
sahf
daa
or
lods
mov
sub
aas
(bad)
div
and
pop
adc
push
inc
inc
adc
mov
mov
icebp
add
and
adc
int
pusha
stos
pop
dec
or
or
push
in
xchg
mov
add
add
daa
je
jnp
daa
adc
ret
mov
push
scas
inc
lods
sub
dec
nop
push
ds
add
mov
xchg
int3
or
pusha
shl
mov
add
xor
xor
add
(bad)
jp
sahf
jmp
std
cmp
or
add
push
or
push
leave
fst
cmp
movs
lds
push
or
(bad)
outs
cdq
mov
xor
stos
inc
sbb
push
or
jg
jae
sbb
cmc
enter
add
pop
pusha
pushf
xor
xchg
and
or
or
xor
xchg
and
das
leave
call
gs
adc
int
adc
imul
jb
test
or
jo
test
imul
in
mov
xlat
jno
mov
adc
test
repnz
imul
add
outs
outs
inc
pop
or
inc
scas
sbb
out
and
push
icebp
pop
lods
adc
xchg
xlat
scas
cmps
cmp
data16
inc
js
or
push
jo
gs
std
dec
cmp
add
or
aas
pop
outs
adc
call
lahf
cld
scas
or
shl
loopne
mov
(bad)
mov
jecxz
nop
cmp
xchg
cs
pop
dec
or
loopne
aas
xchg
xor
sar
inc
pusha
push
mov
mov
push
jmp
in
add
popa
pop
pop
loopne
adc
mov
or
xor
shl
pop
es
sub
inc
jo
call
enter
je
imul
ds
xchg
sar
dec
add
cmps
sbb
add
cwde
addr16
je
pop
mov
or
add
xlat
mov
outs
test
mov
jge
inc
or
lods
sub
cmp
out
sbb
or
mov
jns
sbb
and
or
adc
and
xor
add
or
push
mov
push
jb
ins
push
gs
or
scas
sbb
sbb
test
les
xlat
call
push
in
sub
mov
movs
arpl
sbb
fadd
enter
and
inc
sysret
stos
sub
inc
add
and
inc
fs
add
add
push
nop
dec
inc
rcl
push
lahf
inc
popa
mov
arpl
jns
add
fadd
jae
dec
adc
lock
inc
jge
(bad)
(bad)
pop
ret
lahf
mov
push
std
pop
lock
test
je
add
call
icebp
mov
mov
lea
mov
add
sti
out
mov
test
je
xor
(bad)
outs
outs
int
push
or
pop
pop
pop
ret
jbe
mov
sbb
cmp
adc
mov
mov
mov
mov
les
mov
cmp
mov
mov
sahf
mov
mov
bound
call
mov
mov
call
test
setg
dec
pop
pop
pop
test
fstp
inc
adc
pop
xor
ins
xor
cwde
sbb
xor
push
inc
sar
pop
xlat
push
add
ja
fmul
xor
inc
cld
push
rol
sub
clc
jnp
adc
add
inc
mov
mov
fwait
adc
add
mov
dec
hlt
sub
(bad)
daa
repz
pop
and
add
mov
out
add
xor
pusha
loope
clc
jmp
fisttp
call
das
hlt
mov
pop
ret
add
or
xor
js
daa
and
loop
and
scas
or
inc
cmps
fsub
rol
dec
loop
sub
mov
inc
mov
adc
pusha
pop
pop
lock
mov
xchg
xchg
mov
loop
push
xchg
xchg
rcl
or
xor
mov
lds
sub
xchg
push
mov
or
cmp
pop
arpl
mov
cmp
pop
call
imul
arpl
mov
and
jo
loopne
int3
aad
dec
jl
or
jmp
mov
mov
add
or
outs
xor
(bad)
push
icebp
pusha
out
xchg
inc
pusha
adc
xor
xchg
add
dec
stc
jle
and
mov
push
xchg
dec
cmps
or
cmp
xchg
lock
outs
and
hlt
dec
arpl
xchg
pop
pusha
lock
jg
and
pop
(bad)
sti
sbb
sbb
das
push
adc
test
push
sbb
scas
mov
movs
sbb
add
stos
push
shl
push
sub
loopne
cmp
or
or
aaa
inc
cmc
shl
push
addr16
mov
inc
enter
add
xchg
fstp
fwait
iret
pop
pop
sti
push
add
inc
pop
adc
ins
or
push
or
(bad)
pop
pop
add
hlt
pop
or
lahf
loopne
call
sbb
inc
test
pop
lock
adc
push
sbb
sbb
call
inc
or
mov
pop
xor
aas
push
and
xor
and
pop
sbb
clc
not
cmp
and
add
dec
cmp
je
push
push
dec
add
mov
outs
sbb
das
ins
add
xor
call
and
xchg
lock
sar
jns
adc
int3
clc
mov
aaa
mov
lods
xor
in
dec
adc
push
call
jmp
lea
sbb
or
call
or
push
mov
call
mov
cdq
push
pop
xchg
(bad)
push
ins
nop
push
cmp
sub
push
jmp
cdq
fcomp
call
sub
pusha
sbb
push
gs
inc
popa
sbb
jne
dec
push
inc
and
pushf
sbb
scas
pop
(bad)
pusha
adc
aam
adc
call
or
push
push
lock
add
icebp
push
ror
sbb
sbb
pop
and
movs
(bad)
rcl
xchg
fsub
cwde
mov
cmp
(bad)
mov
inc
mov
out
mov
and
or
xchg
fs
cmp
xchg
call
adc
fisub
ins
aas
ret
lds
popa
dec
push
fwait
jmp
sub
sbb
add
inc
inc
add
inc
mov
repz
enter
pop
sub
push
call
push
stos
push
jne
inc
cmp
jnp
inc
jno
jno
push
loop
adc
aam
fcom
ret
dec
push
push
push
stos
inc
pop
sbb
xlat
push
sub
(bad)
in
inc
dec
push
out
(bad)
jmp
pop
rol
inc
sub
jae
jp
add
setbe
lock
mov
nop
inc
push
leave
pusha
js
loopne
fisubr
sub
es
sbb
add
fbstp
dec
cmp
je
cmp
jge
into
fdivr
icebp
popf
ficomp
(bad)
retf
arpl
repz
jge
hlt
cmp
or
push
cmc
dec
and
test
sbb
inc
lds
jbe
push
dec
mov
sub
xor
in
jg
shr
dec
and
ficom
cdq
inc
xchg
retf
or
push
in
mov
(bad)
mul
ret
pushf
xor
jge
scas
or
adc
js
mov
call
dec
loopne
test
(bad)
jmp
cmp
mov
jno
xor
mov
cmp
gs
dec
mov
jo
test
call
push
test
mov
add
push
pop
iret
sbb
jmp
mov
inc
add
cdq
and
cmp
sbb
push
push
hlt
mov
mov
push
add
leave
shr
or
fs
push
repnz
mov
or
retf
push
mov
mov
cmp
and
cdq
and
lahf
push
test
loop
mov
aam
mov
and
dec
stos
jl
inc
xor
hlt
mov
mov
clc
inc
dec
jne
pop
(bad)
aas
sub
push
dec
std
pop
pusha
xchg
inc
mov
rcl
je
fstp
cmp
scas
sbb
adc
jmp
and
cmps
ret
mov
out
stos
push
sub
nop
out
push
cmp
fimul
sub
or
adc
jl
outs
jno
ss
adc
mov
mov
dec
jne
mov
and
jnp
and
mov
pop
push
mov
add
push
cmp
or
cmp
gs
push
sbb
push
outs
mov
fsubr
xor
add
jmp
addr16
add
jae
add
add
or
in
jne
mov
aas
pop
cwde
bound
mov
clc
fstp
inc
inc
cmp
jl
jmp
sbb
mov
outs
lahf
mov
mov
push
sbb
mov
test
push
jmp
inc
xor
retf
aad
add
add
call
movzx
xor
or
jle
inc
dec
jne
pop
aas
sahf
push
sbb
lahf
(bad)
cmp
mov
jb
or
jnp
sar
push
idiv
inc
repz
and
cmp
cmps
and
(bad)
pop
ret
outs
xor
or
fs
jle
fld
or
div
rol
push
pop
cwde
xchg
sub
or
push
fadd
push
inc
aas
sbb
dec
xlat
sub
inc
sub
adc
cmp
sbb
ret
mov
add
fmul
push
xlat
and
add
push
mov
test
jbe
mov
push
popa
add
imul
pop
(bad)
shl
cmp
cmp
addr16
scas
outs
mov
dec
aas
adc
cmp
jne
aaa
add
xchg
or
mov
sbb
bound
sbb
xor
sbb
xor
jno
fild
adc
ret
sbb
xor
(bad)
gs
sub
push
add
jmp
nop
and
outs
movd
adc
push
mov
clc
xchg
mov
or
pusha
mov
shr
mov
movs
bound
pop
pop
clc
mov
push
pop
inc
xchg
sub
sub
xchg
jo
enter
adc
pop
(bad)
dec
or
push
xlat
sub
pop
inc
push
or
xor
rol
mov
movs
test
jmp
adc
dec
push
in
adc
dec
or
sub
lods
lods
data16
add
imul
bound
xchg
imul
mov
lds
xor
fldenv
arpl
mov
inc
jb
jl
pop
pop
jl
cmc
loopne
push
pop
cld
xor
jecxz
push
adc
or
hlt
mov
mov
popf
mov
inc
inc
mov
push
dec
jl
pop
jo
mov
xor
mov
sub
in
mov
fdivr
xchg
mov
jmp
add
test
xchg
mov
adc
or
enter
in
adc
js
xor
into
inc
mov
cmp
jne
adc
in
push
or
inc
or
sub
sub
sti
or
test
pop
lahf
push
cmp
sub
adc
popa
popa
push
mov
push
push
(bad)
push
iret
cmc
pusha
jp
dec
ret
and
adc
shr
or
add
and
jns
mov
push
jmp
push
jge
icebp
mov
cdq
and
push
mov
call
and
sbb
in
dec
dec
shr
scas
hlt
cmps
pop
scas
jmp
and
adc
xlat
scas
adc
jbe
fisttp
jns
jno
call
dec
xlat
mov
movzx
cmp
leave
mov
add
in
arpl
sbb
aaa
dec
and
push
call
dec
xchg
sbb
nop
iret
xchg
in
adc
sub
add
mov
mov
push
push
jo
mov
add
pop
mov
mov
or
mov
xchg
mov
fld
jne
sbb
mov
hlt
in
cli
add
inc
stos
jne
cmc
xor
cdq
jmp
push
sub
mov
(bad)
pop
push
outs
cmp
push
lahf
addr16
sbb
push
ror
pop
(bad)
es
mov
call
or
aaa
test
js
ror
cli
xor
mov
mov
(bad)
dec
movs
jnp
rcr
call
push
pop
mov
xor
xchg
hlt
add
xor
pop
(bad)
(bad)
jmp
push
lock
xchg
cmc
push
test
cld
test
shr
aas
sub
push
pop
ror
dec
js
adc
or
mov
mov
sub
test
jo
mov
xchg
cmp
inc
or
mov
mov
jae
loop
jne
inc
cmps
inc
hlt
mov
pop
rol
xchg
mov
jmp
jecxz
hlt
sbb
pop
loopne
icebp
or
cli
arpl
xor
mov
jns
retf
jo
inc
mov
cmp
jb
ins
cmp
jo
push
aaa
push
ret
cmp
pop
xchg
adc
xor
shl
lea
lock
mov
jo
push
aas
popa
inc
push
push
rcr
push
jb
adc
shl
ror
push
fdivr
stos
mov
pop
sub
das
add
or
aaa
cmp
sbb
fcomp
dec
add
push
push
jmp
sbb
adc
mov
mov
(bad)
dec
rol
fnstcw
nop
data16
pop
jl
xor
add
mov
xor
push
cmp
push
mov
ins
je
adc
mov
mov
lea
imul
xchg
xor
jne
cld
lods
into
loopne
jg
push
test
dec
jne
adc
push
in
or
ins
add
mov
stos
or
fdivr
test
retf
jl
arpl
xor
rol
xor
arpl
add
push
into
cld
mov
and
cmp
and
adc
sbb
inc
cmp
xor
sub
mov
icebp
cwde
mov
or
adc
sub
fnstcw
ret
mov
fwait
push
jbe
call
or
mov
call
adc
xlat
add
push
adc
jge
mov
xlat
and
mov
in
xor
xchg
mov
fdivr
cwde
push
push
lea
stos
pop
(bad)
out
push
sbb
inc
mov
fsubr
sbb
inc
cmp
cmp
scas
push
aaa
gs
jne
mov
rol
mov
add
nop
imul
sbb
xchg
lea
aas
and
adc
mov
jo
mov
xchg
test
imul
adc
(bad)
das
mov
(bad)
inc
sub
mov
push
and
push
jecxz
out
add
lock
push
pop
dec
ret
xchg
adc
sti
and
or
inc
push
xchg
push
add
mov
pop
cmc
dec
cmp
in
push
not
cwde
test
jns
jmp
and
cmp
in
and
jecxz
out
mov
push
and
adc
or
js
lahf
adc
push
out
jne
leave
xor
loopne
or
aam
push
cld
(bad)
jne
mov
rcr
loope
pop
sub
add
movs
add
pop
mov
add
idiv
xor
or
jb
aam
lea
xor
popf
imul
cld
ja
test
jge
mov
(bad)
les
aas
aad
jae
pusha
push
or
jle
fistp
loopne
push
push
jge
mov
sub
daa
sub
mov
add
popa
in
cmp
jb
or
scas
(bad)
xor
lea
stc
add
mov
mov
das
dec
and
push
ja
dec
xor
ss
mov
sbb
mov
popa
push
in
pop
push
aam
es
push
leave
or
jecxz
push
add
fist
jge
add
cmp
std
xchg
and
sti
jg
jno
xlat
and
daa
nop
xchg
mov
icebp
sub
pushf
pop
xor
xchg
adc
xchg
xchg
je
mov
xor
or
xor
ins
and
add
or
(bad)
cmp
dec
mul
pop
or
push
adc
adc
or
adc
dec
or
add
xchg
movzx
sbb
mov
xor
or
cmp
sti
shl
inc
adc
adc
xchg
xchg
jle
push
or
dec
loopne
mov
scas
repz
cmp
push
int3
shl
fwait
out
inc
loope
push
cmp
imul
cwde
bound
xchg
hlt
fist
or
ins
xor
pop
ja
inc
js
js
mov
sub
into
test
jbe
jo
jg
mov
inc
sbb
cmp
fcom
inc
mov
add
cmova
xor
push
or
or
es
cmp
out
add
call
inc
popf
pop
dec
cli
or
adc
fisttp
sbb
cmp
inc
jp
xor
sbb
nop
nop
enter
jle
xchg
push
push
xchg
dec
test
nop
(bad)
cld
(bad)
adc
repnz
retf
cmp
in
lods
std
daa
mov
adc
test
push
mov
pop
push
and
sub
pop
inc
adc
ss
jmp
push
test
sub
xor
mov
jno
xchg
mov
test
add
jnp
fimul
push
pop
adc
pop
es
or
sar
and
inc
add
pop
push
mov
das
jle
das
or
addr16
and
push
sbb
cmp
retf
push
jnp
loop
jge
cmp
call
cmp
push
mov
out
mov
clc
popa
xor
mov
aam
mov
sbb
das
loopne
in
fwait
lock
push
inc
mov
mov
add
cmc
das
push
sbb
and
push
mov
std
sub
add
test
or
shr
test
push
std
nop
and
pop
hlt
dec
loopne
sub
and
dec
jmp
out
add
ror
pop
mov
add
dec
jne
mov
scas
and
push
fwait
pop
loop
data16
cdq
dec
pusha
xor
sub
pop
popa
xchg
adc
pop
aas
add
daa
push
test
(bad)
dec
ss
sub
push
rcl
es
adc
inc
int3
mov
inc
popa
adc
jbe
adc
fmul
cmp
ror
pop
lahf
push
dec
mov
dec
mov
add
or
add
push
pop
dec
pop
rol
adc
inc
mov
and
aaa
jmp
outs
cdq
addr16
pop
sub
daa
addr16
or
cwde
add
(bad)
(bad)
adc
inc
repz
rcr
sub
dec
mov
or
sub
adc
mov
and
cmp
push
jp
mov
test
cmps
fsubr
jbe
(bad)
cmps
cmp
sbb
xchg
je
jmp
push
rol
inc
cmp
jge
in
jmp
sub
lea
fucomp
rol
rcr
add
jmp
in
rcl
(bad)
jge
jp
das
fxch
sub
test
xor
je
add
sub
push
xchg
or
(bad)
vpcmpgtd
clc
pop
dec
sub
inc
mov
jb
pop
outs
pop
aam
ret
sbb
imul
mov
sbb
mov
sbb
shl
ficom
or
adc
xor
xchg
or
mov
mov
ins
int3
push
loopne
jb
mov
mov
xor
ja
xor
test
cmp
rol
jmp
clc
loop
(bad)
adc
(bad)
cmp
and
sub
call
add
or
jecxz
dec
sub
fmul
or
cmp
and
and
add
inc
xchg
rol
pushf
in
repnz
data16
pop
jle
clc
xchg
pop
mov
loopne
push
inc
push
js
and
xor
shr
inc
fsubr
jne
scas
mov
sub
push
idiv
jge
adc
push
sub
popf
add
jge
sbb
cmp
lock
mov
call
jmp
xchg
sbb
sahf
test
iret
or
arpl
mov
and
test
cmp
sbb
jnp
jae
pop
sub
mov
cmpunordps
dec
add
cmp
inc
int3
or
sub
and
repz
xor
daa
push
or
(bad)
mov
push
sar
test
jecxz
ins
dec
mov
aam
jae
scas
push
loop
test
cmp
test
push
and
xlat
stos
mov
jmp
shl
and
dec
lods
inc
mov
inc
loop
fs
mov
stos
jge
clc
(bad)
xchg
push
adc
div
stos
ja
and
daa
push
movs
sbb
ficomp
pop
ret
into
dec
sbb
sub
jmp
cmp
jne
cmp
mov
lea
push
stc
and
fcom
ret
pop
pop
dec
push
add
data16
popf
shl
fisub
adc
and
mov
inc
or
sub
push
hlt
xchg
ret
jmp
(bad)
inc
dec
jne
or
dec
ja
dec
ret
jno
cmp
sub
aaa
cmp
add
jbe
fsubr
xor
ins
sub
dec
cmp
test
dec
cdq
inc
int3
(bad)
pop
loopne
pusha
add
out
call
loope
xor
shr
push
std
dec
add
addr16
pop
or
out
add
fidivr
jne
cmp
shl
mov
aas
xchg
pushf
jnp
push
rcr
sub
(bad)
jle
sti
inc
mov
sbb
or
mov
dec
ret
out
mov
pop
or
inc
or
cmps
sub
sbb
jle
jo
call
push
jmp
ja
dec
xchg
push
ja
cmp
js
dec
je
hlt
jge
fdivp
fs
adc
jl
or
je
or
call
push
dec
jns
jp
test
pop
or
sbb
pop
lock
je
clc
jns
xchg
lods
data16
je
mov
arpl
in
xchg
jo
jno
leave
jbe
cmovbe
lock
mov
test
mov
sbb
xor
xchg
sub
jecxz
fcmovu
movs
ror
jnp
lds
enter
adc
les
dec
test
call
xor
fwait
xchg
call
add
mov
mov
or
mov
mov
mov
add
jg
js
jmp
and
lahf
push
pop
fidivr
cwde
rcl
mov
jbe
sub
in
retf
call
adc
and
jmp
push
ret
leave
inc
push
add
mov
jle
leave
add
pop
adc
test
dec
inc
ret
pop
sbb
pop
push
dec
sar
dec
dec
outs
add
xor
dec
pushaw
dec
adc
outs
and
xor
jbe
mov
add
out
sub
xor
sbb
jmp
jg
lea
dec
cmp
jg
mov
jmp
pop
push
sbb
push
xlat
ja
mov
add
inc
xor
sbb
sub
clc
movs
ret
aaa
mov
daa
jg
sub
retf
or
dec
cmp
adc
sub
shr
jne
loopne
stos
cld
adc
add
inc
test
call
(bad)
jne
cmp
jg
mov
sub
shr
add
sbb
sub
pusha
or
inc
adc
neg
aam
add
push
popa
sbb
jbe
add
push
lods
test
sbb
adc
sub
adc
xor
push
push
test
xlat
iret
or
call
or
or
inc
das
ds
call
das
inc
or
pop
add
fnstsw
mov
sbb
rcl
push
sub
add
out
mov
rcl
jo
add
fs
xchg
cli
jmp
inc
jg
cmp
jl
push
je
loop
and
mov
popa
or
pop
sub
ss
dec
mov
cmp
jle
or
sub
or
or
imul
mov
or
xor
inc
cmp
mov
in
xor
movs
add
push
rdmsr
push
inc
outs
ins
jo
jb
fdivrp
(bad)
push
outs
cmp
jns
je
ins
cs
outs
imul
push
push
je
outs
addr16
popa
mov
sub
or
adc
(bad)
jle
cwde
add
sbb
outs
data16
or
popa
jne
je
add
or
add
outs
xor
cmp
add
inc
mov
(bad)
adc
cmp
out
jmp
int3
dec
(bad)
push
push
popa
inc
test
add
xor
adc
sar
push
in
add
cmps
add
daa
sbb
cmp
xchg
push
out
jbe
jge
jle
call
call
push
pop
jnp
sub
or
push
jl
and
xor
shr
mov
dec
jle
dec
(bad)
jge
(bad)
sbb
or
xor
test
add
js
aas
mov
mov
sbb
push
add
gs
mov
xlat
sbb
mov
add
mov
lods
into
outs
mov
xor
or
mov
sbb
fsubr
mov
mov
pop
jp
adc
mov
adc
int
neg
adc
add
add
mov
sbb
sbb
add
out
(bad)
popa
xor
pop
std
ret
popa
mov
cmp
stos
jno
ror
int
pop
pop
jo
pop
fsubr
cli
push
pop
lds
cdq
jo
push
scas
sub
or
jns
xor
xchg
push
aam
lock
fstp
adc
(bad)
dec
push
or
cmp
jbe
inc
jb
popa
jns
popa
outs
popa
addr16
and
shl
add
sbb
out
dec
push
inc
(bad)
push
inc
(bad)
push
inc
mov
mov
adc
inc
jb
mov
push
adc
inc
rol
push
outs
and
add
jmp
sbb
test
mov
sbb
xor
lods
cmc
push
jge
xor
imul
adc
scas
add
inc
ret
pop
in
arpl
loop
sub
mov
ret
loopne
jl
mov
(bad)
idiv
fimul
ds
pop
je
xor
push
popa
arpl
xor
and
and
add
fdiv
pop
add
pop
stc
and
es
adc
clc
not
aas
pop
mov
adc
jo
xlat
lods
pop
call
mov
repnz
xchg
push
cmps
or
add
mov
push
add
push
inc
fldcw
push
pop
add
cwde
cmp
or
and
push
jmp
pop
(bad)
rcl
pop
mov
or
loopne
adc
mov
cmp
xor
mov
(bad)
(bad)
aas
mov
nop
add
push
cld
dec
mov
into
rol
push
sub
inc
push
fild
push
mov
mov
je
add
inc
mov
test
and
push
test
sbb
or
mov
add
dec
mov
stos
push
cmp
adc
loopne
addr16
je
pop
cmp
adc
push
push
inc
bound
inc
cmp
test
clc
mov
mov
sub
inc
or
or
mov
xchg
pop
pop
adc
adc
sub
ret
sar
in
les
retf
loope
clc
movs
mov
inc
xlat
cmp
push
add
inc
call
inc
xchg
addr16
jns
js
gs
ins
adc
xlat
pop
xor
test
adc
arpl
dec
or
gs
fsub
sub
push
add
push
not
or
ins
push
jne
inc
jae
sub
inc
or
dec
popa
js
data16
pop
push
popa
ins
jne
sub
add
pop
sub
sbb
mov
inc
inc
popa
sub
sbb
or
adc
dec
cmp
cmp
inc
mul
add
dec
add
push
jns
xor
fwait
or
fs
outs
imul
or
outs
outs
ja
or
mov
add
inc
xor
shl
push
mov
repnz
pop
xor
cmp
xlat
jae
sbb
sub
add
lahf
pop
pop
inc
and
pop
push
mov
outs
inc
in
ret
ret
push
cmps
add
enter
mov
push
repnz
xchg
push
das
or
and
push
sbb
inc
push
bound
mov
add
stos
and
(bad)
jne
jo
test
clc
dec
sub
lahf
les
outs
daa
jo
in
or
jg
inc
dec
popa
jp
push
pop
sub
mov
or
push
mov
not
dec
or
gs
clc
xor
push
inc
outs
pop
pop
inc
inc
arpl
jae
xor
(bad)
loopne
movs
mov
inc
mov
sub
pop
scas
rol
loopne
cmp
jb
pop
adc
pop
cdq
push
in
ror
leave
enter
push
data16
in
fs
push
push
nop
leave
cdq
push
inc
xor
leave
enter
jmp
in
leave
vsubsd
jb
repnz
add
jb
jns
jb
jmp
pop
js
mov
fldenv
pop
push
pushf
xlat
and
daa
daa
and
pop
push
pushf
in
jmp
(bad)
add
aam
or
popa
or
out
mov
push
ret
add
xchg
rol
in
pop
inc
loope
inc
inc
sub
shr
icebp
icebp
bound
or
jp
ss
add
fld
xchg
push
int
sbb
pop
or
adc
mov
fldcw
addr16
imul
lods
call
or
lahf
add
outs
add
popa
inc
popa
add
push
inc
ins
inc
in
lods
leave
pop
js
scas
add
or
or
push
sub
retf
js
sbb
and
fsub
mov
xor
mov
xor
and
es
cmp
mov
pop
xchg
and
add
int
xor
add
xchg
add
les
jb
sahf
inc
or
ret
xor
movs
js
cmp
mov
jno
jae
inc
sub
das
or
dec
dec
jb
pop
and
fs
or
pop
sar
jae
test
adc
gs
js
push
adc
inc
inc
js
hlt
mov
add
add
mov
pusha
dec
outs
popa
fs
scas
cmp
mov
sbb
rol
popa
mov
add
jl
clc
popf
ins
pop
loop
cmc
pop
dec
ins
outs
dec
ins
inc
lahf
xchg
pop
dec
gs
cli
push
pop
add
iret
mov
fs
into
outs
cmp
fwait
popaw
outs
mov
dec
xchg
ins
jg
gs
lea
fmul
ins
das
(bad)
loopne
cli
cmp
sub
push
adc
pop
push
jge
rcl
xor
jb
mov
out
popa
or
and
cmp
or
inc
jne
data16
pop
mov
aaa
pop
push
mov
shl
out
mov
push
sbb
js
and
dec
ret
stos
imul
scas
or
adc
aaa
je
cmp
dec
or
ins
(bad)
or
add
ins
or
dec
add
jmp
jno
add
or
or
or
bound
sbb
push
and
bswap
jmp
sub
push
dec
inc
jg
arpl
jp
dec
and
adc
or
add
aas
mov
mov
hlt
jne
adc
mov
jo
popa
arpl
jmp
scas
jne
inc
or
test
sahf
push
jo
dec
jl
gs
rcl
and
push
mov
cwde
jbe
push
lds
mov
lock
clc
clc
or
lea
and
enter
adc
push
cmp
xlat
arpl
add
inc
or
inc
xchg
add
iret
ins
jns
jecxz
scas
pop
jo
pminsw
imul
xchg
cmp
mov
inc
add
ins
rcl
jg
mov
inc
scas
rcr
rcl
pusha
sbb
push
mov
mov
sbb
lea
lea
jno
mov
or
aas
dec
push
scas
aaa
test
xchg
out
repz
stos
(bad)
(bad)
dec
add
ja
push
rcl
aam
shl
movs
xchg
jle
jl
pop
xor
icebp
imul
add
inc
inc
or
(bad)
jmp
inc
cs
or
inc
outs
in
pop
lods
add
pop
(bad)
dec
lea
test
nop
dec
jl
jae
add
push
loope
pop
xchg
push
test
or
aas
xchg
inc
mov
fld
fisttp
push
fisttp
dec
jae
aaa
dec
movs
addr16
mov
mov
inc
xchg
in
adc
bound
or
mov
inc
jae
pop
retf
push
add
mov
mov
sbb
(bad)
(bad)
adc
mov
test
popa
fs
xor
push
test
je
data16
inc
xor
and
je
(bad)
repz
adc
adc
sbb
call
outs
or
imul
dec
push
pop
cmp
jne
jbe
push
add
mov
adc
add
jmp
add
sub
add
xchg
xlat
call
cld
mov
mov
mov
in
ins
inc
pop
or
and
je
mov
push
mov
mov
test
je
sub
mov
push
mov
inc
mov
data16
lock
add
dec
dec
inc
popa
xor
xchg
fmul
mov
dec
aaa
xchg
call
mov
jl
clc
cld
movzx
mov
jne
fistp
movzx
mov
adc
adc
ja
ja
mov
jle
data16
sbb
lods
mov
sbb
dec
jne
test
lea
add
mov
or
scas
and
lock
xchg
pusha
(bad)
fcomip
push
mov
add
add
inc
or
and
sbb
push
(bad)
es
jo
mov
push
ror
adc
ret
jbe
je
ja
jae
out
mov
and
adc
pop
cld
fisttp
adc
push
sbb
ror
xchg
xchg
movq
mov
shl
cmp
push
push
dec
jo
clc
out
add
and
xor
mov
xchg
jo
(bad)
repnz
lock
push
mov
(bad)
adc
or
inc
push
mov
xor
xchg
jo
out
fcomp
sub
imul
mov
leave
je
out
pop
mov
cmp
outs
ds
addr16
mov
mov
ret
add
ret
jbe
in
pop
dec
es
sub
lahf
mov
enter
pop
sbb
xor
jg
push
sbb
sub
mov
inc
or
sub
add
push
mov
ret
paddd
push
or
mov
jbe
shl
fucomip
daa
adc
fisub
loope
mov
push
adc
cmps
and
test
jbe
xor
jg
adc
lock
mov
xchg
nop
inc
mov
loope
or
push
cmp
icebp
mov
ss
cmp
xor
mov
inc
pusha
and
retf
mov
mov
jmp
inc
imul
out
xor
outs
and
xchg
rol
inc
cmp
cld
push
cld
mov
mov
(bad)
xor
inc
sub
enter
inc
jle
inc
xor
push
push
add
je
mov
shr
sbb
(bad)
or
shl
sti
fnstcw
mov
mov
xor
add
mov
or
cmp
jmp
in
pop
mov
ss
(bad)
mov
push
loop
pop
adc
cld
adc
iret
pop
pinsrw
mov
dec
ficomp
sbb
sbb
out
out
cmp
mov
jmp
adc
mov
nop
sbb
cwde
in
test
or
dec
push
sbb
push
enter
addr16
je
add
inc
mov
xchg
dec
add
rol
mov
xchg
ret
retf
fstp
repz
iret
lock
adc
push
mov
adc
dec
or
clc
test
dec
and
xor
in
cmp
add
sbb
mov
jns
or
dec
shl
repz
fisub
les
push
in
dec
mov
or
pop
rcl
sbb
sbb
and
mov
js
or
test
js
inc
js
ja
lods
or
pushaw
lea
mov
push
mov
push
pop
and
sbb
jp
jnp
aaa
jl
cwde
xchg
test
adc
jp
in
jmp
or
push
and
mov
add
or
xlat
mov
(bad)
mov
adc
adc
xchg
cli
call
pop
lods
and
jo
mul
aas
in
fdivr
fmul
fstp
xor
pop
ret
sub
inc
fdivr
hlt
or
mov
push
cli
and
(bad)
aam
or
push
cmp
dec
jne
cmp
inc
mov
mov
test
pop
mov
sbb
or
ficom
and
pusha
sbb
push
dec
scas
adc
inc
in
adc
stos
sbb
add
add
fisubr
push
add
push
maxps
inc
add
dec
dec
push
sbb
int3
jae
pop
adc
call
push
ss
xchg
mov
or
fsub
into
out
cmp
inc
mov
and
inc
push
or
adc
or
add
adc
and
xor
cmps
or
or
sti
rcr
cli
jae
cmp
push
xor
cmp
jp
ja
(bad)
mov
mov
adc
push
pusha
mov
(bad)
pop
jb
adc
xor
and
adc
push
push
push
sbb
dec
jp
dec
mov
dec
adc
inc
and
stos
cmp
ficom
clc
inc
int
add
dec
les
or
enter
fmul
repnz
add
mov
in
add
dec
pop
loope
sbb
cmps
and
xlat
push
aad
cli
mov
xchg
fbld
add
xchg
sub
pusha
add
add
fdiv
(bad)
arpl
pop
iret
add
inc
sbb
pop
push
lock
xor
jle
retf
sar
jns
rcr
jo
loop
outs
push
xor
mov
xchg
add
pop
loopne
cmp
add
jg
push
cmp
(bad)
ins
mov
xchg
push
xchg
fsubr
loop
loopne
mov
pop
push
mov
push
jmp
cmp
cmp
leave
mov
push
mov
mov
arpl
rcr
xchg
sbb
in
ja
aaa
enter
stos
jne
and
sbb
into
mov
(bad)
lea
xlat
out
jo
sti
je
hlt
add
mov
adc
lock
imul
add
adc
je
dec
inc
sbb
mov
cld
xchg
cmp
xor
adc
or
and
(bad)
or
sbb
jge
daa
dec
pusha
js
in
mov
inc
cmp
hlt
sbb
in
outs
pop
pop
cwde
mov
jnp
test
and
pop
mov
jecxz
mov
dec
or
lods
xor
ret
shl
cwde
add
rcr
(bad)
cld
add
ror
pop
mov
in
in
jmp
cmp
jbe
xchg
sub
in
jno
aaa
sbb
push
lahf
loop
scas
jo
(bad)
loopne
push
fadd
sti
ja
outs
add
cmp
mov
add
push
mov
push
push
lea
leave
test
pop
jbe
fisubr
jp
loope
lea
xor
mov
cmp
add
mov
xchg
pop
cmp
push
(bad)
loope
and
ror
aaa
movs
ficomp
mov
or
retf
pop
jmp
jns
or
stos
es
cmp
mov
fild
jo
cmp
jne
add
popa
pop
mov
ret
jge
jl
jo
sbb
fwait
push
dec
adc
or
dec
push
jmp
das
pop
scas
out
les
push
sub
je
into
hlt
imul
mov
cmp
jg
push
fs
xchg
pop
push
mov
push
lea
or
fidiv
fcom
push
dec
(bad)
mov
aas
lock
inc
or
push
push
jne
nop
mov
and
fld
pop
xchg
inc
clc
shr
or
movs
and
loope
pop
jge
test
add
ret
sbb
fcom
cmp
call
cmp
jmp
or
les
out
call
(bad)
in
aam
inc
lods
fisttp
cmp
cmp
jg
xchg
mov
mov
cmp
or
add
xor
clc
(bad)
nop
or
and
scas
loop
clc
enter
shl
pop
and
xor
sbb
imul
(bad)
push
sbb
adc
lahf
xchg
cmp
test
adc
pop
mov
xor
adc
mov
xor
ror
inc
stos
rol
cwde
push
cdq
out
loopne
and
inc
mov
sbb
adc
and
or
or
or
add
fcomp
sub
(bad)
(bad)
ds
clc
cmp
imul
xor
push
stos
xchg
jecxz
and
sbb
(bad)
in
bound
and
cmps
out
int3
dec
test
mov
test
mov
jo
mov
or
cmp
loopne
shl
xchg
cmps
xchg
or
imul
add
add
push
push
inc
pushf
(bad)
dec
and
jo
xchg
xchg
cs
inc
cmp
mov
push
cmp
(bad)
inc
xchg
push
push
mov
sti
icebp
jl
in
inc
sub
icebp
sti
popa
scas
add
xlat
inc
mov
popw
aas
rcr
ins
and
jo
push
lock
jle
fstp
cmps
inc
nop
pop
aaa
adc
hlt
mov
and
pop
ds
dec
and
push
fistp
lock
and
sbb
xchg
mov
adc
push
xor
ror
pop
or
mov
aaa
jns
sahf
adc
xor
mov
sbb
imul
lock
add
out
je
xor
sar
ins
jbe
and
and
mov
adc
out
push
mov
sub
pusha
mov
pop
sbb
(bad)
jmp
add
add
mov
mov
ds
jg
push
dec
ror
ins
jp
sbb
cmp
inc
(bad)
es
inc
dec
(bad)
into
cmp
jo
sub
pop
je
popf
dec
mov
stos
xchg
push
addr16
push
loopne
fcomp
xor
push
adc
mov
jmp
out
fwait
and
dec
loop
cld
call
inc
dec
jne
adc
pop
pop
retf
loope
lahf
jae
xchg
push
pop
push
adc
outs
mov
and
add
mov
popa
xchg
retf
or
add
xor
test
mov
rcl
push
inc
mov
out
jl
inc
inc
rol
or
lods
adc
xor
jnp
or
in
dec
imul
sbb
loopne
out
movs
push
and
mov
lds
nop
xchg
mov
push
aas
mov
or
test
and
fsub
imul
pop
xchg
push
add
sbb
sub
cmp
in
add
loopne
jbe
clc
pop
stos
dec
jne
cmps
cdq
or
add
mov
mov
mov
or
jo
pop
add
or
pop
imul
enter
test
pusha
retf
push
lahf
sub
(bad)
mov
jge
loop
and
pcmpeqw
lods
je
push
pushf
add
add
inc
call
jge
mov
xor
push
fist
mov
call
cmp
inc
and
jnp
inc
pop
aaa
sub
or
jbe
aaa
test
inc
(bad)
data16
jne
ins
fsub
aas
or
push
add
push
mov
xor
aaa
dec
cmp
fld
inc
mov
ins
aaa
es
push
cmp
mov
jp
pushw
push
mov
jbe
cwde
inc
add
test
jle
pop
mov
aas
sbb
push
add
or
xchg
push
inc
ss
dec
mov
iret
scas
jg
add
sub
push
data16
jle
or
aas
mov
inc
xor
nop
test
or
imul
(bad)
fldenv
dec
add
adc
inc
xor
repnz
xor
add
jb
jmp
inc
or
jle
(bad)
movs
xchg
xchg
outs
outs
inc
pusha
push
loop
mov
call
add
aas
add
mov
fld
or
dec
ja
std
loopne
pop
mov
call
mov
adc
scas
add
sbb
outs
cmps
add
cmps
or
add
ja
cmp
inc
jae
jmp
and
pop
cs
adc
pop
xor
xchg
rol
push
xchg
fwait
lahf
ja
sbb
xchg
aaa
xchg
sbb
scas
inc
and
xor
or
inc
aas
xor
aas
push
xor
cmps
and
and
outs
ss
cdq
in
bound
pop
scas
add
xor
call
cs
xor
push
mov
data16
jno
xchg
sbb
inc
xor
sbb
xor
or
cwde
ret
call
loop
sbb
mov
inc
(bad)
add
ja
push
adc
sbb
push
ja
jae
mov
fcmovnu
ret
shl
out
xorps
mov
dec
popa
sahf
repnz
scas
or
jp
xor
pop
out
mov
pmaxsw
daa
add
cdq
test
xchg
add
sub
out
dec
es
jmp
add
fisubr
mov
add
mov
js
out
movs
push
sbb
out
pop
dec
mov
and
ret
add
cmp
mov
inc
pop
mov
sbb
sbb
pop
test
daa
sbb
stos
(bad)
push
mov
aaa
ret
push
pop
out
mov
adc
cs
aas
adc
(bad)
aaa
add
or
sbb
or
out
ds
test
adc
adc
push
or
adc
xchg
sub
dec
sbb
sub
aaa
pop
aaa
pop
push
iret
aas
push
add
pop
push
cmp
push
adc
push
or
push
pop
aaa
out
jo
lea
bound
outs
sbb
mov
push
ret
xchg
scas
rcl
sub
scas
xchg
fimul
scas
push
mov
ret
add
mov
dec
call
mov
addr16
(bad)
push
mov
call
test
jne
mov
mov
pop
inc
xor
mov
xlat
push
retf
sub
xor
pop
mov
aaa
push
call
inc
xor
jbe
lods
rcl
sbb
aaa
mul
int3
rcr
xchg
dec
jp
pop
add
xor
pop
sub
aas
cmp
imul
aas
and
push
pop
aas
cmp
cmp
push
or
pop
adc
sub
mov
icebp
adc
sbb
sar
and
and
add
scas
mov
add
dec
adc
mov
cmps
js
enter
jecxz
add
iret
dec
pop
pop
or
xor
dec
ficom
ja
jmp
mov
inc
jg
ret
sub
mov
pop
cmps
aas
sbb
or
stos
mov
inc
pop
ja
jmp
or
adc
cs
aas
inc
mov
sbb
inc
outs
inc
bound
(bad)
cmps
ret
out
mov
inc
mov
or
sbb
push
mov
and
cmps
imul
out
fsubr
pusha
inc
mov
push
push
add
int3
pusha
push
out
xchg
daa
stos
mov
dec
mov
jmp
lahf
mov
xchg
push
jecxz
mov
adc
push
fistp
movs
xor
and
cdq
push
push
movs
test
push
or
or
inc
xor
(bad)
xlat
add
daa
addr16
sbb
iret
rcl
pop
jmp
pop
mov
push
push
add
out
adc
rcl
inc
loopne
scas
pop
and
sub
mov
sbb
and
maxps
rol
test
jg
push
adc
bnd
out
adc
xor
pop
xlat
or
sub
dec
pop
mov
and
jae
push
sub
cwde
dec
push
cmp
inc
das
xor
add
outs
and
push
mov
inc
dec
mov
jo
pop
or
dec
push
jmp
retf
push
dec
test
or
xchg
adc
adc
(bad)
shl
mov
adc
sar
jle
iret
cmp
add
pop
test
pop
sbb
xor
cs
aaa
(bad)
call
movs
pop
dec
or
sub
out
ds
fiadd
ds
fwait
add
scas
lahf
dec
push
in
sbb
add
inc
inc
mov
mov
add
mov
mov
mov
inc
das
mov
xor
mov
ss
clc
sbb
xor
inc
mov
lahf
mov
imul
mov
add
xchg
add
add
or
addr16
adc
dec
rcl
or
daa
cmp
adc
dec
or
sub
movs
and
dec
push
mov
add
sbb
push
fsub
or
adc
dec
push
sub
and
pop
mov
push
push
or
add
pop
aaa
push
mov
dec
cmps
or
add
pop
add
dec
dec
xchg
cmp
pop
(bad)
into
out
pop
mov
xlat
das
addr16
mov
adc
dec
pusha
add
aaa
push
mov
inc
xchg
cmp
adc
mov
outs
push
dec
mov
pop
adc
push
xchg
mov
xlat
fsub
sub
add
or
test
add
xchg
xchg
imul
mov
and
jbe
(bad)
aaa
mov
add
inc
push
icebp
aam
or
mov
inc
push
and
and
aaa
mov
into
adc
dec
fwait
pop
pop
and
xchg
call
push
sub
imul
nop
mov
addr16
push
mov
sub
out
push
mov
inc
inc
out
pop
or
out
pop
inc
mov
push
stos
cmps
js
or
sub
add
dec
inc
out
dec
fisubr
mov
adc
xchg
(bad)
add
add
adc
inc
fistp
inc
sub
lds
mov
adc
adc
push
outs
push
dec
fnsave
push
push
push
mov
mul
outs
push
das
and
cmp
xchg
rcl
or
inc
dec
adc
sahf
fistp
bound
loopne
movzx
or
daa
adc
test
imul
add
dec
scas
xor
les
pop
or
stos
push
add
inc
xchg
call
mov
dec
out
push
xchg
mov
sub
xchg
pop
push
sub
pusha
jb
jbe
xchg
scas
inc
mov
inc
fidivr
(bad)
push
push
aas
cmp
mov
or
push
idiv
dec
shr
inc
pop
jg
retf
dec
push
retf
cmp
fadd
jg
inc
adc
aas
aas
aas
cmp
jne
dec
push
cmp
leave
push
add
fdiv
rcl
lahf
push
xchg
out
mov
jg
xor
lea
mov
call
mov
mov
add
jne
xor
inc
cmp
ds
idiv
jg
xor
movzx
cmp
jne
mov
jmp
adc
xchg
rol
xchg
dec
hlt
imul
push
repz
pop
enter
popf
mov
push
fcomp
lock
adc
nop
fs
sbb
mov
outs
or
add
mov
ins
pop
pop
dec
lock
sbb
push
fcmove
cld
fucomip
out
add
ret
jmp
jecxz
ret
pop
mov
pop
ret
add
sbb
(bad)
add
daa
inc
es
pop
jge
ret
add
push
mov
fabs
cli
mov
ja
mov
aam
cmp
and
(bad)
into
inc
jo
retf
add
inc
lock
mov
mov
add
jo
jge
ret
pop
pop
pop
pop
sbb
adc
adc
cmp
mov
clc
add
jle
popa
inc
or
mov
cmp
inc
jmp
ins
dec
push
retf
ficom
mov
adc
push
mov
xor
and
lea
(bad)
retf
aaa
into
clc
push
(bad)
mov
lds
add
pusha
mov
cld
fcomp
inc
outs
xchg
out
push
jne
jmp
or
mov
out
mov
rcl
das
ss
nop
push
ins
add
call
pop
mov
dec
sgdtw
add
dec
dec
dec
add
dec
dec
dec
or
or
dec
dec
dec
or
daa
daa
daa
and
repnz
daa
daa
daa
daa
cmc
div
clc
daa
daa
daa
daa
stc
cli
sti
cld
daa
daa
daa
daa
std
(bad)
jmp
daa
daa
daa
daa
loope
jecxz
daa
daa
daa
daa
in
out
daa
daa
daa
daa
jmp
daa
daa
daa
in
out
out
shl
daa
daa
daa
rcl
rcl
daa
daa
daa
daa
aad
xlat
fsub
daa
daa
daa
(bad)
fcmovnu
daa
daa
daa
daa
fstp
ffreep
daa
daa
daa
daa
rol
les
daa
daa
daa
(bad)
enter
daa
leave
retf
daa
daa
daa
daa
int
iret
mov
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
movs
cmps
cmps
test
daa
daa
daa
test
daa
daa
daa
lods
scas
scas
nop
daa
daa
daa
daa
xchg
xchg
xchg
xchg
test
xchg
mov
mov
add
pop
test
scas
sbb
lods
pop
cmc
movs
mov
adc
nop
stos
inc
push
ds
repz
or
sub
in
mov
push
push
cwde
test
push
add
in
(bad)
fistp
jbe
ins
imul
arpl
pop
sub
sbb
ret
or
arpl
adc
xchg
dec
cmps
push
js
test
cvtps2pd
mov
sbb
dec
jo
adc
outs
fild
mov
pusha
les
(bad)
fiadd
mov
push
gs
bound
sub
in
jo
pop
push
push
dec
popa
outs
fs
pop
mov
addr16
or
je
nop
je
test
rcr
fild
adc
pop
idiv
add
dec
jb
mov
xchg
adc
push
push
pop
add
push
and
je
xchg
adc
std
pop
jno
add
pop
inc
push
xchg
mov
out
xchg
data16
popa
ins
inc
jl
push
or
xchg
outs
imul
cmp
push
fcom
loope
pushf
cs
jo
push
outs
jp
push
sahf
jae
aaa
in
mov
or
adc
pop
xor
or
gs
mov
out
or
push
sbb
mov
inc
inc
sti
push
inc
ins
je
outs
lods
gs
xor
push
dec
outs
fild
jge
sub
ins
inc
ins
popa
arpl
push
push
pop
js
ins
dec
outs
jo
je
daa
push
push
jns
sbb
xor
fnsave
addr16
and
cs
inc
imul
adc
xor
sbb
idiv
pop
out
mov
loopne
outs
jb
pop
adc
sbb
call
fimul
cmc
rol
ror
(bad)
sbb
cmc
or
push
pop
ror
add
test
mov
je
std
out
clc
mov
lds
inc
jb
and
call
pop
bound
adc
dec
adc
mov
jp
loopne
sbb
iret
mov
adc
inc
inc
imul
pop
nop
inc
outs
jb
jae
es
mov
ror
or
push
shl
add
mov
paddsb
hlt
jle
push
inc
xchg
ins
mov
or
sbb
int3
icebp
and
dec
fnstsw
stos
pop
adc
push
outs
jne
arpl
sbb
ret
dec
div
push
pop
ds
dec
add
gs
mov
fwait
iret
sub
pop
data16
add
xor
test
ror
(bad)
shl
xchg
dec
sub
clc
jecxz
push
adc
mov
cmp
jecxz
xor
or
in
pop
add
loope
fdiv
cmps
(bad)
sbb
push
mov
and
push
mov
add
mov
push
ja
sub
add
push
adc
push
in
div
je
push
jl
push
les
push
mov
jb
or
outs
shl
bound
push
dec
adc
sbb
mov
mov
adc
popa
or
dec
outs
or
aas
call
es
add
dec
mov
bound
arpl
(bad)
(bad)
sub
loop
out
lock
mov
or
gs
data16
fild
lea
inc
sub
ja
push
inc
rol
pop
dec
mov
loopne
scas
outs
cwde
add
mov
imul
mov
cs
(bad)
cmp
push
fldcw
and
sbb
imul
imul
inc
rcl
sahf
xchg
add
scas
cmp
sbb
push
rcr
pusha
scas
push
outs
push
mov
shl
das
ror
sub
int3
cmps
xchg
jo
movs
push
scas
cmps
hlt
cmp
add
push
fadd
in
sub
sbb
neg
idiv
(bad)
adc
inc
div
xchg
push
inc
push
cmp
js
jae
jb
outs
mov
jns
inc
xlat
cmp
pop
dec
inc
enter
mov
lea
cmp
retf
es
jo
cmp
mov
loopne
and
pop
dec
cmp
mov
pop
inc
stos
je
jo
mov
cmps
push
inc
ror
imul
inc
add
shl
inc
pop
dec
aas
add
retf
mov
rcr
adc
push
fld
or
fcomp
or
jge
xor
inc
push
outs
or
fimul
jno
adc
aam
aas
(bad)
fisub
dec
add
adc
fs
popa
in
push
inc
xchg
jg
add
sbb
cmp
sub
ror
pop
sub
nop
or
repz
ins
idiv
push
add
push
adc
rcr
imul
cwde
add
and
jl
shl
xchg
mov
jbe
fmul
out
lock
cmps
sub
or
xchg
and
and
jecxz
scas
sub
and
dec
xchg
ja
xchg
mov
mov
inc
fs
xor
push
ret
inc
pop
jle
add
int
push
cs
popf
cmp
xor
mov
add
jb
mov
cmc
das
inc
dec
inc
fst
push
sahf
inc
sbb
cmps
les
or
push
fild
xor
jg
enter
das
int3
je
jg
push
jg
push
fst
je
jl
mov
dec
dec
dec
outs
xor
jge
xor
cwde
push
jl
jge
push
ins
dec
jge
ror
loopne
sbb
ror
xchg
cmp
cmp
mov
outs
(bad)
dec
sti
and
aas
push
test
sub
enter
cmp
(bad)
imul
xchg
jecxz
inc
sbb
add
popf
mov
push
or
(bad)
push
aaa
add
(bad)
jo
into
cmp
dec
add
push
add
pop
lock
push
push
cmp
and
loop
pusha
sbb
daa
jbe
xchg
cmc
cmp
and
push
cmc
push
jns
push
pop
(bad)
pop
stc
cwde
push
loope
jno
stc
sar
pushf
bound
and
ss
stc
mov
pop
sar
pop
sbb
mov
sti
aam
into
test
stos
dec
icebp
adc
sti
jl
sbb
adc
mov
pop
pop
loopne
pop
mov
inc
or
fisub
sub
(bad)
test
mov
pushf
enter
inc
push
xchg
pop
sti
lods
cmp
cmp
lds
sbb
add
push
inc
imul
scas
xor
data16
call
adc
xor
sub
mov
or
jg
push
inc
sahf
jbe
pop
idiv
cmp
push
loop
cdq
movs
ss
data16
push
sahf
or
ins
cwde
out
fs
or
or
call
mov
out
mov
push
or
add
movs
add
clc
pop
fsub
or
gs
outs
push
out
xor
sbb
sbb
fnstsw
or
push
loopne
jb
je
cld
fiadd
or
je
outs
test
xor
inc
in
cmps
xor
or
mov
sbb
inc
scas
imul
jae
sbb
push
jo
and
wrmsr
push
popa
bound
sbb
ins
jne
jbe
and
outs
addr16
and
push
adc
(bad)
ror
inc
cmp
push
add
js
jnp
fild
je
sbb
sbb
or
dec
or
sbb
jo
add
or
push
inc
scas
sbb
mov
dec
mov
mov
push
mov
mov
adc
outs
ins
jns
cmps
mov
sub
adc
adc
or
aam
mov
mov
mov
pusha
xor
xor
mov
add
es
mov
mov
(bad)
xor
mov
mov
ss
push
aas
sub
adc
pop
add
add
push
clc
cmps
sub
ret
or
call
or
ins
popa
lods
outs
jl
push
push
int3
cld
add
sub
push
fisttp
cmp
mov
prefetch
or
xchg
push
cwde
mov
xchg
sub
(bad)
movsd
cmp
adc
inc
call
unpcklps
sub
pop
(bad)
outs
push
adc
add
push
cs
rsqrtps
dec
mov
sbb
pusha
mov
mov
bndstx
test
scas
jbe
nop
neg
add
rcr
mov
mov
pop
and
jmp
shr
sti
ja
test
repz
ss
push
mov
and
mov
(bad)
add
dec
outs
fnstsw
mov
xchg
jnp
xor
sub
ss
sub
pop
mov
lock
ret
cmp
inc
jb
inc
and
or
or
jl
inc
push
pusha
mov
pop
xor
inc
pop
sbb
test
mov
popa
imul
pop
fisttp
cdq
out
pop
call
or
pop
push
add
push
mov
arpl
jp
inc
or
inc
mov
adc
push
pop
or
add
pop
push
push
inc
and
mov
or
adc
sub
daa
fisub
lock
bnd
gs
pushaw
jmp
push
in
xchg
add
daa
adc
add
push
outs
pushf
pusha
cld
cmp
and
or
ins
xchg
pop
aas
aam
shl
or
push
ficomp
adc
or
jb
ja
dec
add
shl
pop
(bad)
pop
add
popa
pop
cmps
(bad)
mov
repnz
add
pop
dec
jo
arpl
cmp
cmp
stos
inc
ret
jae
mov
jnp
inc
jne
jl
mov
pop
jg
xchg
inc
xor
into
and
jno
jno
inc
bound
fadd
xor
pop
or
hlt
push
add
mul
popa
add
inc
(bad)
and
mov
outs
fs
in
sbb
push
rol
int3
loop
std
shl
pop
push
adc
adc
cmp
scas
adc
push
in
data16
add
cmp
add
jae
sub
dec
xchg
mov
ror
jo
push
imul
push
add
lock
cmps
inc
xor
push
dec
mov
jecxz
dec
add
add
sbb
outs
cmp
mov
mov
pop
inc
gs
jae
nop
in
into
nop
jb
fstp
jl
ja
add
sbb
push
arpl
jp
push
inc
mov
cmp
daa
add
ficomp
jae
mov
add
mov
jecxz
pop
add
sub
ins
sbb
and
and
pop
popf
sub
sbb
scas
mov
loope
adc
inc
mov
pushf
inc
mov
or
cmp
gs
cmp
mov
aas
mov
or
add
pop
mov
repnz
add
aaa
cwde
call
arpl
mov
imul
push
pop
or
rcl
jne
push
test
and
pop
xchg
rcl
mov
adc
(bad)
cdq
dec
out
add
aaa
outs
mov
scas
sbb
test
mov
push
imul
adc
or
test
push
xor
enter
or
jb
push
ror
jne
mov
test
pop
int3
push
outs
test
retf
jno
and
add
lds
test
dec
inc
lds
xor
add
add
jnp
jnp
or
pusha
out
gs
call
ror
cs
dec
mov
(bad)
in
fs
ficomp
add
xor
inc
fs
js
or
pop
cwde
push
imul
pop
outs
pop
pop
pusha
xor
bound
fs
scas
xchg
movs
adc
or
fdiv
dec
cli
lea
inc
test
cmp
jl
inc
inc
xor
vcvtps2pd
push
outs
jae
inc
pop
loope
add
mov
sub
outs
inc
mov
jmp
pcmpgtd
and
(bad)
and
addr16
sbb
enter
mov
pop
call
popf
cs
rcr
sub
sbb
push
push
fld
ffreep
cs
dec
and
clc
inc
and
and
call
push
es
lahf
out
cmc
or
dec
push
mov
jl
ja
push
cwde
aam
sub
cmp
xchg
pushf
in
nop
sub
push
inc
sub
mov
push
cld
push
pop
out
mov
test
aam
cmp
or
outs
dec
sub
xchg
clc
mov
add
dec
add
cmp
inc
jmp
cmp
and
and
loope
inc
daa
ds
mov
lods
jge
push
and
mov
jo
ret
pop
add
test
push
jb
jmp
dec
jo
retf
add
push
mov
pfpnacc
cmp
arpl
push
adc
mov
adc
jb
xor
movlps
dec
test
unpckhps
movhps
cmp
pop
add
mov
pop
scas
fisttp
sbb
iret
movzx
jb
add
or
imul
jb
add
add
fmul
in
jge
and
and
mov
mov
bsf
(bad)
dec
add
addr16
es
pop
sbb
add
(bad)
cld
push
daa
daa
mov
cmp
push
xchg
ds
inc
inc
inc
(bad)
enter
mov
je
test
push
or
xchg
add
inc
cmovno
dec
add
push
xchg
push
pop
in
inc
popa
jno
sub
inc
sbb
mov
or
inc
sbb
mov
pop
mov
out
cmp
dec
and
mov
les
or
push
or
sub
in
add
inc
xchg
sub
push
cdq
in
add
jge
movs
cs
ss
and
mov
adc
xor
sbb
lods
das
das
jbe
add
inc
sahf
(bad)
adc
ror
xlat
in
inc
xchg
pushf
jo
and
cmp
lods
or
or
ja
sub
xchg
lods
add
sub
rol
das
lods
cs
test
pop
or
cdq
jae
xchg
sub
cmp
ja
test
cdq
(bad)
add
daa
push
loop
sbb
mov
cmp
mov
or
jno
add
dec
leave
jns
mov
dec
jge
xor
xor
sbb
push
sbb
xor
sbb
scas
sbb
add
pop
push
push
xchg
repz
xchg
ret
sbb
(bad)
cld
fcmove
or
mov
sbb
pop
popa
scas
sbb
inc
aas
pop
int3
mov
pushf
jo
test
sbb
in
test
addr16
lock
lock
add
scas
add
push
ret
and
pop
inc
test
mov
aad
mov
push
add
push
push
jb
scas
test
loope
retf
push
or
jmp
in
cmp
jo
sbb
push
stos
adc
adc
outs
and
push
rcl
loop
lds
pusha
lahf
cmps
test
call
push
es
sbb
dec
bound
add
(bad)
shr
add
mov
pusha
inc
add
inc
jns
je
cmps
pop
or
outs
ja
inc
outs
cwde
gs
lds
data16
push
add
jae
push
add
adc
mov
pusha
test
test
or
fsubr
pop
pcmpeqd
xor
jno
imul
sti
push
imul
popa
(bad)
dec
add
push
mov
mov
xchg
ret
sbb
mov
outs
mul
fmul
or
jmp
adc
mov
add
or
pop
sub
cmp
mov
es
sbb
ror
(bad)
das
js
and
xchg
jns
add
add
in
xlat
mov
mov
ins
(bad)
push
jmp
out
imul
inc
inc
push
popf
and
push
xchg
sbb
enter
dec
ja
inc
pop
fild
dec
push
outs
lock
add
ficom
or
cmps
js
fstp
punpcklbw
aad
mov
push
or
js
add
or
mov
lods
or
dec
push
push
xor
xchg
xor
inc
sub
or
inc
push
bound
jo
xchg
sbb
ja
das
and
je
add
mov
mov
outs
push
dec
add
jmp
add
fcom
jle
mov
prefetcht1
repnz
(bad)
sbb
gs
jo
sub
std
call
aad
and
sub
sub
ins
cmp
push
inc
jno
cmp
mov
jae
add
inc
push
add
movs
or
outs
popa
fs
test
ins
push
cmps
sahf
mov
push
pop
je
sbb
sub
sbb
push
mov
in
mov
ja
cwde
fistp
push
repz
adc
dec
mov
pop
mov
int
mov
imul
test
repz
jb
pop
cmp
sbb
test
cmp
pop
inc
outs
or
or
inc
inc
jbe
rcl
sbb
xor
fmul
inc
xor
rcr
int
sbb
cmp
xchg
add
pop
push
rcl
push
imul
lock
push
inc
cmp
test
mov
scas
jno
dec
test
push
pusha
hlt
cs
or
fisub
and
xchg
sar
sbb
cs
or
popa
out
rcr
ins
jo
jns
add
loope
shl
jne
jmp
call
ret
(bad)
sub
xchg
(bad)
call
inc
cmovo
fsub
sar
pop
imul
call
dec
inc
or
lds
popa
add
arpl
push
add
inc
or
cld
aad
sbb
jo
mov
js
add
in
cmp
nop
icebp
loop
add
jge
mov
pcmpeqb
inc
loope
sub
add
dec
adc
psubsb
add
cmp
cmp
std
and
in
repz
std
aad
push
test
fnsave
or
cs
sbb
ss
push
sbb
cmps
jge
jmp
test
inc
loope
mov
jnp
rol
sahf
aaa
inc
test
add
aaa
push
jmp
dec
call
pop
mov
cmp
and
dec
add
stos
jo
push
jp
inc
mov
movs
xchg
or
inc
dec
outs
loopne
add
js
fsubrp
mov
jmp
pop
ja
fdivr
repz
imul
ret
mov
jno
push
cmps
pop
sbb
dec
xor
cdq
vmwrite
pop
js
(bad)
cld
push
rcl
push
jb
call
add
add
xchg
shl
xchg
daa
dec
jle
shr
nop
push
and
xchg
inc
push
jo
les
test
out
imul
xor
xchg
xchg
or
cwde
pop
rol
rol
aam
rcl
push
sub
push
fidiv
stos
daa
pushf
add
jnp
pusha
push
push
imul
jb
ret
icebp
repz
adc
or
aam
not
call
sbb
loopne
mov
inc
mov
xchg
or
push
pop
in
sahf
in
mov
out
test
mov
jle
inc
sahf
mov
rol
xor
mov
or
add
das
and
popa
xlat
adc
loope
inc
aas
add
sbb
dec
add
mov
sub
or
push
leavew
mov
or
push
mov
cmps
jae
aas
adc
add
leave
mov
or
in
imul
push
cmp
add
mov
push
pop
push
push
loope
pop
mov
mov
xchg
pushf
into
aam
add
arpl
jmp
or
dec
mov
pushf
popa
dec
lds
jnp
adc
sti
stos
pop
and
cmp
jecxz
out
neg
mov
mov
das
addr16
fadd
push
and
div
call
add
loopne
push
push
fwait
retf
or
loopne
test
mov
jbe
or
push
push
add
xor
add
pusha
jae
cmp
ja
rol
xchg
sub
fild
mov
es
pop
loope
jle
mov
add
xchg
movs
pop
adc
pop
js
pop
push
add
mov
mov
or
dec
cmp
push
mov
sti
sub
add
outs
cmp
push
gs
jo
packsswb
or
mov
sbb
mov
xor
int
mov
and
jns
nop
ret
pop
shr
shl
out
out
das
(bad)
and
out
movs
or
movs
inc
daa
lock
movs
inc
mov
out
cmps
mov
push
daa
sub
push
pop
jnp
sub
push
push
shl
push
and
sar
xor
mov
into
push
loopne
test
loope
enter
add
xor
push
cmp
arpl
enter
lds
mov
mov
add
out
inc
in
inc
cmp
jle
push
add
(bad)
test
add
sbb
(bad)
je
les
test
adc
mov
and
adc
adc
or
pop
stos
jo
jne
dec
xor
mov
add
and
mov
shl
add
leave
and
stos
push
loope
xor
mov
and
xchg
dec
das
rcl
add
shl
mov
inc
ins
xchg
jnp
sub
imul
cmp
mov
loope
cmp
fmul
push
bound
ss
push
je
adc
ret
ror
pusha
sub
fmul
gs
cmp
adc
mov
loope
push
jp
xchg
push
add
test
push
das
jns
test
(bad)
xchg
adc
xchg
cs
aad
inc
mov
jp
fld
test
(bad)
mov
jmp
pusha
mov
or
add
sahf
(bad)
fs
jns
lods
or
scas
xor
add
pop
dec
inc
mov
and
test
push
add
in
xchg
div
les
das
dec
dec
dec
inc
xor
inc
int3
lods
inc
or
jp
jno
mov
add
add
and
pop
out
test
in
xchg
shr
loopne
js
or
sub
inc
adc
add
movs
loopne
adc
and
out
or
xchg
inc
mov
rcl
push
sti
and
or
dec
inc
push
mov
sub
add
push
lock
fisubr
std
jo
or
and
imul
bt
dec
push
xor
inc
in
fisub
jl
pop
icebp
cmp
ret
pop
out
inc
call
loopne
mov
scas
add
adc
jle
pop
mov
bound
mov
inc
inc
cdq
mov
dec
and
or
shr
push
push
gs
adc
(bad)
fstp
sahf
enter
pop
sub
xchg
xor
inc
jne
add
or
rol
call
and
out
fs
stos
div
xor
inc
dec
mov
dec
rcl
add
(bad)
inc
shr
jne
inc
jo
push
jmp
pop
cmps
adc
arpl
or
ror
ss
inc
jne
pop
or
loop
arpl
dec
or
add
pop
pop
push
(bad)
ins
out
cmps
out
das
retf
adc
les
jle
jle
push
lods
push
mov
add
hlt
cmp
mov
clc
or
push
cmp
push
push
out
pushf
add
push
sbb
mov
push
mov
push
mov
call
push
cld
xchg
(bad)
(bad)
shl
xlat
call
sbb
mov
mov
jo
mov
out
aaa
xchg
std
in
push
ss
xor
or
inc
popa
into
and
sub
dec
push
adc
outs
ins
test
add
cmp
pop
popf
ss
jmp
das
adc
dec
clc
push
rcr
lock
jno
cdq
push
push
cwde
jl
movs
out
and
popf
aam
sbb
cmp
sbb
jmp
mov
inc
pop
xlat
jnp
dec
stos
cmovo
bndstx
cs
test
fsubr
push
pop
pop
int3
movs
adc
test
add
xchg
xchg
sbb
dec
ss
mov
call
loopne
pop
lods
mov
pop
mov
sub
mov
push
out
inc
mov
daa
inc
sbb
ins
pop
imul
mov
mov
dec
and
dec
or
and
mov
push
inc
cmp
xchg
ins
xor
lahf
xlat
xor
mov
pop
rcr
lea
xchg
adc
push
dec
sahf
jmp
mov
mov
les
aam
imul
add
mov
(bad)
adc
cmp
xchg
enter
cs
dec
pop
and
fstp
icebp
icebp
push
push
add
mov
loope
(bad)
and
test
scas
jb
mov
or
or
pop
js
lods
push
add
adc
dec
inc
test
xchg
pop
imul
or
loop
outs
and
and
inc
in
mov
add
add
xor
xlat
pop
xchg
or
out
cmp
pusha
mov
inc
inc
or
and
inc
inc
inc
inc
inc
imul
inc
repnz
sahf
dec
dec
stos
push
cmp
xor
pop
dec
pushf
jo
mov
inc
gs
cmp
(bad)
mov
cwde
sub
and
jae
test
mov
add
je
push
adc
nop
push
clc
cdq
(bad)
in
push
pop
cdq
add
push
leave
ja
mov
mov
dec
mov
or
in
in
mov
mov
(bad)
aam
adc
inc
xlat
or
inc
test
xchg
pop
in
dec
test
dec
mov
inc
mov
not
add
pop
jmp
das
mov
adc
inc
lea
sahf
add
ss
into
add
dec
gs
in
push
add
cmps
add
fnstenv
mov
mov
push
(bad)
inc
adc
int
in
sbb
pop
adc
fild
je
pop
loopne
in
dec
aaa
sti
es
das
xchg
or
test
xchg
push
ja
push
aam
(bad)
xor
je
mov
jo
push
mov
push
add
loop
jne
push
mov
movs
push
(bad)
push
mov
cmp
inc
ss
push
or
sub
stos
nop
push
add
out
jmp
ret
add
out
push
jb
jne
sub
or
mov
mov
jo
out
push
(bad)
psubw
jg
mov
je
sbb
fisttp
jno
jg
pop
add
cli
das
dec
push
xchg
prefetchnta
jmp
aas
mov
jno
mov
es
mov
adc
jae
mov
xchg
adc
loope
dec
ss
sub
jae
ficomp
cmp
imul
bound
or
imul
inc
loop
sbb
aas
xor
loop
aas
ins
ret
and
sbb
aas
cmps
je
popa
push
ret
pop
stos
shr
les
add
popa
add
pop
add
cmps
dec
adc
cs
pop
cmps
nop
pop
mov
mov
lods
add
test
and
mov
or
xchg
xchg
test
or
cmp
mov
or
push
xor
add
push
push
dec
jnp
movs
scas
inc
test
push
xor
fstp
imul
outs
addr16
dec
jo
addr16
addr16
push
add
or
push
dec
push
push
adc
push
gs
hlt
call
std
pop
sub
push
xor
mov
jo
push
inc
call
jmp
outs
shr
(bad)
push
aaa
loopne
mov
rcl
daa
sub
push
enter
fmul
and
push
cmps
add
xor
js
push
pop
dec
test
out
add
xchg
pop
cmp
and
and
pop
and
ret
and
and
push
(bad)
hlt
dec
movs
add
sub
fimul
nop
arpl
inc
(bad)
mov
inc
adc
cmp
cs
mov
movs
inc
jl
mov
and
push
inc
(bad)
push
dec
or
inc
and
jmp
bnd
mov
xor
push
test
movhps
cmp
jecxz
cmpxchg
ds
sbb
sbb
jne
outs
fld
pusha
(bad)
add
arpl
dec
or
rol
(bad)
fld
or
test
fiadd
mov
pop
ds
add
pusha
add
mov
push
adc
adc
cmps
mov
sbb
add
shl
aam
and
test
pop
jl
sub
sti
fwait
push
mov
idiv
add
fst
inc
je
cmp
push
push
call
ret
mov
fsubrp
ins
and
in
add
es
adc
das
std
push
jno
and
jmp
and
outs
pop
scas
lock
adc
add
adc
cmp
add
loop
arpl
sbb
mov
jo
inc
(bad)
cmp
xlat
or
mov
dec
push
or
(bad)
mov
paddsw
ror
pop
ret
sbb
rol
mov
pusha
sbb
adc
or
inc
push
push
push
and
mov
dec
jns
push
out
add
sti
pop
adc
xchg
pop
add
jnp
je
sar
push
out
jns
and
shl
inc
dec
jnp
rcl
loopne
lock
push
xchg
jg
push
aad
add
and
mov
clc
and
bound
arpl
ja
pop
and
dec
xchg
pusha
mov
loopne
push
push
pop
or
stos
add
inc
pop
and
dec
push
add
lahf
cdq
xchg
xchg
inc
mov
push
inc
push
push
outs
sahf
dec
fcom
jg
(bad)
xchg
jp
js
mov
cmp
jl
and
jmp
prefetcht1
bound
jg
adc
jae
nop
pusha
frstor
xor
pop
xor
and
mov
mov
sti
outs
(bad)
dec
rol
xor
inc
dec
jne
ret
(bad)
out
push
test
je
add
jb
stos
call
mov
mov
lea
loope
inc
mov
test
je
(bad)
fdivr
pop
pop
pop
ja
in
int
xor
popa
adc
ds
pushf
fld
shl
pop
sbb
(bad)
push
mov
call
inc
cld
mov
mov
and
ret
cmp
hlt
rcr
jge
test
pop
les
mov
and
sbb
jle
loopne
mov
push
clc
jmp
adc
mov
adc
sti
push
lock
sub
cmp
jne
push
cmp
jne
lock
scas
stc
ret
dec
shl
test
add
inc
test
sti
in
or
cmp
xor
pop
js
imul
popf
push
mov
push
rcl
or
xor
mov
ins
mov
push
adc
add
es
dec
push
pop
jl
call
xor
pop
pop
pop
dec
adc
pusha
ins
or
push
xchg
mov
add
out
pop
inc
mov
pop
xchg
pop
sub
pusha
imul
mov
mov
arpl
jnp
inc
jns
in
or
scas
xor
mov
xor
and
mov
jo
inc
test
cmp
test
cmp
das
clc
mov
jmp
ret
cmp
jne
mov
neg
adc
pop
adc
test
jle
pop
sbb
and
push
popa
shl
(bad)
jns
mov
lods
mov
inc
lds
fadd
xor
xchg
pop
push
lock
dec
div
jecxz
xchg
xchg
adc
push
in
xor
ins
push
or
mov
mov
mov
mov
xlat
icebp
mov
add
add
ret
adc
push
repnz
mov
inc
inc
inc
(bad)
sbb
or
(bad)
adc
shl
adc
or
or
or
sbb
mov
outs
clc
push
adc
push
cmp
pop
lea
pop
push
ins
test
mov
xchg
cmp
sbb
pop
ret
addr16
mul
cmps
cli
and
push
adc
mov
jbe
mov
cmp
jge
push
inc
pop
mov
add
fisttp
dec
std
jp
repz
clc
adc
add
or
push
push
jmp
push
dec
push
std
or
fsubr
mov
or
test
adc
jg
mov
test
adc
jl
adc
sub
pop
jl
cld
dec
push
jl
inc
xor
out
mov
ret
sbb
dec
jne
or
dec
es
xchg
hlt
or
jmp
fadd
push
mov
shl
or
or
inc
or
push
or
stos
add
push
and
scas
sub
das
push
adc
xor
or
ret
mov
ret
add
or
rcl
jmp
dec
add
inc
je
int3
sbb
add
sbb
add
loop
aaa
movhps
ds
add
cmp
sub
pop
push
push
es
cs
pop
push
inc
add
scas
or
dec
ss
lahf
data16
inc
cli
cs
add
aaa
dec
xor
pop
mov
add
dec
cmp
inc
loopne
mov
ret
and
dec
xor
add
ss
outs
push
jp
xor
inc
sub
dec
adc
push
cmps
xor
cmovp
or
addr16
scas
push
addr16
popa
push
into
push
xor
scas
sbb
xor
push
dec
or
xor
xor
push
push
ret
daa
pop
adc
mov
push
aaa
pop
adc
data16
es
mov
adc
dec
aad
call
mov
loopne
xchg
jmp
pop
std
loopne
add
xor
add
fldpi
add
inc
arpl
pop
push
mov
mov
and
rep
pop
test
je
call
pop
lods
add
inc
call
or
mov
mov
(bad)
add
dec
or
add
add
ins
jge
adc
movzx
mov
lea
mov
dec
bound
movs
or
cmc
out
sti
fxch
test
lea
mov
push
xchg
and
paddd
out
xlat
int
push
jne
(bad)
add
or
add
add
and
mov
popa
cmp
loopne
push
mov
and
cmp
mov
(bad)
mov
rcl
pusha
push
inc
aaa
ins
xor
mov
std
aas
pusha
mov
mov
mov
call
sbb
(bad)
out
(bad)
mov
mov
(bad)
imul
and
iret
or
das
loopne
and
inc
mov
cmp
mov
scas
inc
movs
rcl
fisttp
cld
aam
sub
add
lahf
(bad)
aam
fbstp
add
test
les
push
xor
outs
mov
sbb
cmp
aas
add
dec
add
add
mov
in
outs
(bad)
or
sbb
sbb
inc
loopne
mov
adc
jo
mov
xlat
cwde
add
or
adc
jo
and
adc
jae
jbe
test
mov
fwait
aam
cmp
cwde
mov
cdq
out
mov
or
add
in
div
mov
(bad)
or
nop
movs
je
xor
out
add
test
in
shl
push
test
(bad)
js
jp
test
adc
cmp
ins
xchg
aaa
stc
addr16
imul
pop
sbb
sbb
pop
imul
cwde
mov
sbb
nop
add
push
test
popf
(bad)
and
je
mov
nop
xor
int3
inc
setne
mov
sbb
rcr
sahf
stos
inc
and
adc
cmp
cmp
jmp
or
xor
int3
test
or
retf
fdivrp
cmp
mov
inc
retf
mov
icebp
addr16
aas
call
push
mov
xor
(bad)
call
ss
dec
mov
cmp
sbb
cmps
xor
push
ret
cmp
out
ins
test
cmp
add
sbb
inc
mov
mov
mov
pop
mov
xchg
cmp
push
mov
jmp
inc
mov
cmp
or
mov
cmp
mov
push
mov
daa
in
in
ret
cdq
(bad)
jo
in
pop
sub
push
clc
mov
clc
adc
pop
jecxz
mov
cmp
add
pop
ds
call
cli
mov
add
ins
jne
mov
std
xor
adc
scas
scas
ss
inc
jmp
push
pop
pop
mov
lods
fs
pop
les
daa
jnp
push
pusha
xchg
dec
cmp
rcr
mov
clc
jae
xor
pop
addr16
jo
jo
mov
pop
pusha
les
jo
test
inc
data16
jo
ds
test
je
pop
lock
inc
and
loop
jge
pushaw
lea
pop
xchg
push
loopne
ins
outs
mov
outs
iret
mov
push
or
pop
mov
fdivr
jecxz
inc
(bad)
inc
cli
bound
repz
push
stos
pop
or
ret
mov
data16
(bad)
inc
xor
cmp
jo
cld
sbb
je
lea
pop
es
and
sbb
and
mov
and
add
push
pop
test
pshufw
jbe
fidivr
fcom
or
cdq
pop
adc
dec
rcr
in
pushf
and
dec
jne
ret
add
out
and
xchg
mov
mov
sbb
add
push
xor
or
jo
sub
(bad)
(bad)
mov
mov
test
je
push
stos
call
clc
cmp
jne
data16
jle
and
sbb
mov
mov
test
fild
lock
inc
test
push
mov
push
push
jo
(bad)
outs
neg
jl
jle
mov
cmp
or
call
push
xor
push
push
xchg
add
test
out
inc
loop
xchg
mov
push
mov
mov
inc
or
push
add
mov
int3
xchg
dec
jo
arpl
sbb
push
rol
cs
dec
aam
xchg
xor
xchg
aaa
mov
xor
sbb
mov
sub
fadd
test
jae
xchg
inc
adc
loope
loope
test
xor
push
xlat
arpl
xlat
mov
test
or
add
loope
or
cmp
push
lahf
jns
or
cmc
cmp
lahf
cmp
aad
lahf
cld
jmp
xor
popa
xor
pop
xchg
sbb
adc
in
adc
sub
(bad)
(bad)
sbb
idiv
adc
mov
inc
mov
dec
sbb
xor
adc
pop
mov
neg
fs
pop
shl
frstor
mov
adc
jmp
inc
push
xor
mov
xchg
ret
xchg
test
(bad)
push
add
xchg
sub
mov
jl
scas
or
movs
sbb
pop
xchg
jmp
jecxz
jbe
jns
je
push
push
arpl
in
mov
and
call
or
jmp
aas
fcomp
scas
jo
aaa
xchg
xor
add
cwde
in
xlat
adc
inc
or
dec
or
push
in
and
xor
or
gs
add
mov
adc
add
(bad)
sbb
push
je
sub
outs
addr16
stos
sub
push
sbb
icebp
and
pop
ficom
dec
pop
das
pop
icebp
inc
jne
mov
inc
(bad)
stos
ja
cmp
stos
cmp
adc
cmovg
sub
stos
aad
sub
icebp
dec
std
shl
xor
cld
jecxz
arpl
jmp
pushf
mov
sub
xchg
add
mov
cld
shl
sbb
or
push
ins
xor
jmp
cmp
mov
jl
push
add
(bad)
cmp
xor
xor
push
dec
push
pop
rcl
inc
xchg
sub
pop
jl
adc
push
(bad)
jmp
mov
adc
imul
mov
mov
sub
add
or
mov
das
add
ja
push
adc
xchg
popf
ds
loopne
sub
(bad)
in
mov
xor
bound
and
scas
aam
or
inc
sahf
push
and
fiadd
or
loopne
loopne
js
mov
or
adc
and
repnz
int3
lods
pop
xor
or
or
cs
xor
(bad)
out
ficomp
adc
or
es
jg
mov
mov
push
push
aas
push
cwde
div
inc
sbb
mov
pop
sub
adc
adc
mov
ins
imul
inc
adc
dec
(bad)
xchg
dec
adc
push
pop
ret
pop
xchg
int3
mov
mov
xchg
cmp
adc
cmp
pop
pop
pushf
aas
adc
dec
les
sub
xchg
lock
fiadd
ret
pop
inc
xor
inc
sbb
test
mov
xor
lods
jle
cmp
leave
xor
xor
add
clc
out
ins
mov
lea
inc
loop
adc
inc
mov
mov
mov
inc
adc
std
adc
pop
inc
inc
popf
add
sbb
xlat
adc
jg
enter
dec
pop
mov
test
pop
mov
mov
pop
adc
sbb
(bad)
xor
jo
mov
or
ror
(bad)
rol
hlt
adc
ins
push
inc
mov
xor
retf
dec
lea
cmp
mov
pop
push
mov
pop
mov
cs
pushf
and
mov
adc
push
push
sbb
adc
lods
push
mov
lock
mov
outs
and
rol
mov
scas
add
in
xchg
(bad)
cli
add
nop
imul
or
cwde
adc
(bad)
fdivr
repnz
pop
scas
xchg
pop
xor
clc
jmp
outs
fcom
sbb
xchg
add
arpl
mov
sub
popf
inc
or
push
imul
mov
out
out
or
ret
addr16
lock
rol
push
jne
and
imul
iret
clc
les
push
sbb
loopne
fwait
mov
loopne
sbb
sbb
dec
lea
or
ret
add
into
add
xor
cs
add
add
daa
aam
mov
or
mov
cdq
or
inc
bound
dec
cmp
sub
add
cs
push
add
outs
pop
or
call
dec
sbb
jge
mov
cmp
adc
pushf
cmp
inc
push
xchg
pop
xor
or
adc
int
shl
and
movs
pusha
call
pop
fsub
ja
push
sbb
sbb
movs
mov
add
pop
pop
and
dec
inc
fcom
inc
shl
fmul
mov
sbb
or
imul
jb
mov
mov
shl
xor
pusha
jb
jle
pop
pop
or
pusha
mov
(bad)
in
jmp
push
xor
and
jge
mov
in
loopne
push
push
push
mov
ret
fst
or
pop
or
or
pop
imul
or
xor
and
(bad)
push
sub
push
push
ds
or
mov
(bad)
dec
adc
pop
scas
add
mov
mov
cmps
mov
and
cmp
repz
dec
dec
in
cwde
pop
sbb
xchg
fistp
adc
mov
clc
(bad)
es
sbb
iret
xor
xor
dec
call
aaa
xor
call
imul
push
addr16
sub
or
jne
jge
push
es
mov
and
jns
pop
cmps
loopne
out
das
test
sbb
push
mov
pop
int3
cmp
inc
sub
inc
sti
mov
or
daa
adc
and
or
pop
(bad)
xchg
sbb
add
pop
enter
sbb
lahf
or
inc
adc
icebp
test
(bad)
movs
sbb
call
mov
ret
movq
sub
gs
sub
in
jmp
xor
test
sbb
ins
xchg
stos
test
test
inc
lods
sub
ja
jb
mov
test
jnp
sub
xor
dec
xor
(bad)
nop
jge
rcl
xchg
das
jge
shr
push
(bad)
adc
cdq
pusha
lahf
call
sub
inc
jo
mov
cdq
push
and
mov
and
ret
pop
aam
call
lock
test
je
push
popa
sbb
popf
sbb
add
loopne
add
clc
into
mov
clc
(bad)
rcr
ror
add
sub
call
sub
mov
rol
js
loope
adc
sub
jo
jbe
push
push
dec
adc
mov
or
mov
xchg
sbb
and
cwde
fs
cmp
pusha
ss
in
repnz
or
sar
fcomp
icebp
push
popf
lods
sub
or
fild
xchg
test
mov
retf
or
shl
sbb
xchg
mov
inc
pusha
xchg
lea
js
xor
ror
adc
sti
add
sub
inc
or
cmp
pusha
inc
mov
icebp
mov
mov
pusha
in
mov
rcl
jbe
or
loopne
ja
add
adc
add
mov
jb
or
adc
xchg
rcl
pop
test
cmp
inc
jae
jmp
std
cmc
push
mov
(bad)
in
mov
xchg
xor
sub
or
je
loop
clc
xor
or
xchg
fmul
xchg
lea
shr
xor
cli
es
and
lock
loopne
ffree
bt
sti
add
jo
sti
or
or
fistp
mov
sub
lods
or
je
jmp
pop
inc
test
popa
xor
pop
xor
sub
loope
nop
push
mov
push
or
in
add
mov
mov
xor
sub
jg
xchg
ss
js
outs
push
jbe
add
shr
jo
adc
dec
(bad)
mov
xchg
retf
in
ja
hlt
mov
cs
inc
mov
dec
jae
pusha
dec
mov
push
inc
cmp
cmp
shl
loopne
shl
int3
pop
mov
sar
push
xchg
xor
mov
push
lea
aas
mov
loopne
bnd
loop
add
or
jl
mov
xor
push
daa
push
mov
and
and
mov
jmp
mov
lea
push
sbb
arpl
jg
ins
in
cmp
mov
and
idiv
das
cmp
je
test
inc
inc
or
mov
cmp
jne
ins
cmp
mov
enter
push
nop
jbe
mov
adc
cmp
add
jbe
data16
jge
sbb
add
add
out
mov
in
fisttp
push
test
or
aaa
in
jbe
pop
movs
fdiv
xchg
mov
popa
dec
daa
in
inc
rol
sbb
jle
add
cmp
and
push
or
push
adc
ins
outs
dec
ss
lods
test
mov
push
adc
std
mov
xor
mov
aas
outs
aas
mul
push
outs
mov
mov
pop
movs
pop
xchg
cmp
dec
das
dec
jp
js
mov
mov
mov
sahf
cwde
jl
add
push
push
xor
mov
and
retf
out
dec
cld
mov
sbb
loop
adc
xchg
je
mov
and
jmp
cld
std
inc
adc
jmp
mov
add
fcomp
push
imul
lea
add
push
push
cmp
into
mov
adc
dec
adc
test
xchg
inc
mov
shl
loopne
aaa
jmp
mov
xor
and
inc
or
shr
jo
sub
jne
and
ret
enter
loope
push
ss
mov
in
xor
int3
push
push
aam
arpl
sbb
mov
inc
fdivrp
add
and
push
pop
out
sbb
sar
(bad)
cmc
fwait
xchg
dec
fldcw
xor
add
push
mov
pop
lock
mov
bound
and
mov
je
loopne
jns
sub
in
shl
add
out
pop
sbb
or
loope
add
gs
xor
cwde
loope
aam
or
call
(bad)
adc
adc
ss
adc
out
push
(bad)
sti
dec
dec
je
sub
je
or
icebp
in
test
shl
ret
pushf
ret
dec
div
shl
and
mov
add
add
fsubr
lods
clc
add
jne
pop
sbb
inc
div
and
push
(bad)
pop
dec
cmp
jne
sub
popf
jne
popa
mov
mov
jns
or
enter
adc
xlat
lea
aas
push
inc
push
sbb
ins
js
popf
and
(bad)
rol
and
les
mov
push
xor
adc
add
adc
add
push
adc
idiv
push
sbb
cmps
xor
retf
mov
sub
push
sub
ret
rol
scas
jmp
jns
pop
or
sbb
pop
xor
inc
mov
sub
sbb
inc
aam
sub
inc
into
mov
pop
emms
jmp
push
fadd
mov
add
dec
rol
call
ror
and
inc
add
js
adc
jne
inc
adc
fidiv
sub
lahf
mov
pop
inc
cmps
bound
lea
add
dec
pop
add
mov
or
add
mov
mov
dec
test
add
fcmovnb
inc
adc
ret
and
lods
pusha
hlt
mov
adc
dec
test
jle
mov
lods
mov
dec
add
xchg
loopne
outs
cmp
jne
add
cmp
std
jge
adc
adc
adc
mov
add
xor
enter
(bad)
jl
or
mov
dec
clc
cmps
jno
lods
icebp
inc
fisttp
das
sbb
add
jg
cmp
bswap
shr
mov
dec
jns
jmp
push
xor
and
(bad)
mov
aad
mov
sub
shl
mov
mov
jmp
pop
xbegin
sldt
adc
add
sbb
push
fld1
or
aad
cmp
add
push
imul
mov
push
push
or
cmp
cld
shr
mov
ds
ds
imul
mul
pop
and
mov
lea
idiv
pop
sub
fdivr
push
sub
daa
jmp
addr16
data16
cmp
sub
mov
add
cmps
icebp
inc
and
addr16
sub
cmps
or
and
cmp
push
shl
add
mov
in
test
cmp
jl
(bad)
call
icebp
inc
das
dec
sub
inc
add
or
pop
mov
mov
inc
xor
arpl
or
push
sub
mov
mov
adc
pop
dec
pop
add
add
cmp
adc
shr
data16
loopne
in
popf
cmp
daa
sbb
mov
fdivr
dec
jmp
cmp
aaa
ins
pop
iret
dec
pop
mov
add
add
mov
(bad)
cmp
pop
pop
xor
adc
sbb
cmp
mov
push
lock
shl
retf
add
or
jecxz
push
loope
push
push
das
scas
sub
hlt
mov
xchg
and
jge
inc
push
lahf
cdq
sbb
sbb
(bad)
fidivr
xor
dec
xchg
int3
and
push
in
std
pop
jo
shl
and
push
sbb
inc
xor
sub
cli
fisttp
mov
xor
ret
push
mov
sub
test
cli
enter
out
stos
fstp
jge
add
(bad)
add
add
lods
pusha
add
inc
ja
sub
inc
push
out
cmp
cmps
push
push
fisttp
jl
cmp
aad
and
scas
xor
jbe
mov
aam
add
fwait
inc
mov
mov
rol
cld
mov
pop
(bad)
rcr
jb
lock
adc
pop
rcr
and
rcr
xor
popa
xor
popa
push
adc
rcr
addr16
dec
addr16
daa
sub
mov
and
data16
mov
stos
or
fist
das
or
xor
or
or
out
(bad)
dec
pop
sub
sub
add
pop
or
or
shl
sub
inc
push
div
retf
ja
rcl
rcl
jne
dec
cs
inc
shl
mov
push
call
push
cwde
dec
cwde
inc
and
out
mov
cs
sbb
rcr
je
cmp
jg
mov
leave
jle
cmp
jg
cmp
push
pop
cld
mov
or
add
jmp
mov
inc
push
add
dec
das
sbb
shl
arpl
fs
enter
pop
pop
or
mov
jmp
mov
add
nop
jne
push
mov
into
inc
jo
inc
or
or
inc
je
pop
sub
inc
outs
adc
or
jo
cs
movs
xor
mov
push
ds
and
push
xchg
sbb
scas
ds
sub
jbe
mov
dec
sbb
test
sub
test
lock
add
idiv
cmp
ins
jo
push
mov
inc
inc
ret
jo
or
pop
in
sub
loopne
es
shl
loope
adc
pushf
adc
add
mov
je
int3
je
test
mov
dec
jne
or
xchg
cmp
add
or
adc
and
jmp
and
cmp
mov
sub
cmp
cmp
cmp
or
je
pop
aam
bound
mov
push
add
sub
enterw
retf
adc
dec
clc
adc
push
cmps
pop
xor
pop
clc
add
enter
sub
lea
pop
fiadd
inc
sbb
int3
mov
inc
mov
jmp
xor
ins
mov
push
mov
mov
xor
dec
push
mov
shl
aad
push
mov
ret
xchg
sbb
mov
mov
out
dec
in
mov
loopne
test
mov
push
mov
jl
movs
and
adc
aaa
adc
idiv
rol
movs
mov
xor
aam
jmp
mov
aam
xor
rcr
or
jmp
imul
add
push
push
or
or
nop
adc
rol
add
ficom
push
push
xchg
pop
(bad)
or
into
and
lock
jmp
mov
sbb
jb
outs
cli
rcr
push
sti
lea
mov
pop
jmp
ret
xor
mov
sub
pushaw
mov
ret
sbb
or
inc
stos
mov
push
jle
lock
jmp
mov
sub
ja
and
mov
jae
jmp
adc
or
adc
ins
and
cmp
add
inc
and
add
and
jnp
or
dec
push
sub
lods
cmp
shl
mov
in
ror
jae
sbb
retf
enter
ds
add
enter
adc
mul
sub
call
xchg
(bad)
je
int3
add
mov
jmp
ret
rol
cmp
cmp
data16
xchg
mov
xor
push
rcr
rcl
fst
out
clc
xchg
or
push
or
inc
xor
push
jb
int3
or
call
or
rcr
cwde
imul
or
setne
cmp
xchg
imul
push
jecxz
jmp
sti
and
rcr
outs
cmp
sbb
aas
jo
cmp
frstor
in
lods
pop
push
inc
jl
mov
sbb
(bad)
test
loopne
and
jo
test
outs
sbb
xor
mov
call
jo
or
retf
push
lock
int
neg
hlt
clc
pop
push
sbb
dec
or
add
sar
sub
mov
in
adc
popa
sar
and
or
shl
out
cmp
cmp
mov
cmp
add
sar
add
fsubr
or
xor
mov
inc
jae
in
push
add
push
lods
or
dec
mov
out
adc
mov
scas
mov
mov
mov
mov
pop
cmp
push
mov
lock
xchg
dec
push
lods
push
and
adc
mov
ret
add
outs
sbb
scas
pop
cmp
xor
cmp
add
fcmovnu
adc
push
sub
int3
sub
in
xor
and
jge
test
je
or
jae
xchg
adc
xchg
inc
mov
scas
add
jp
ja
in
comiss
fs
mov
or
or
test
in
push
stos
popa
js
mov
adc
dec
mov
and
iret
push
pop
cld
xchg
mov
rcl
aad
add
je
mov
add
push
ss
jle
fs
or
mov
dec
push
das
in
pop
add
and
push
sbb
add
or
or
dec
push
push
or
aad
(bad)
xor
pop
mov
in
stos
adc
sbb
add
add
(bad)
fild
and
add
sar
dec
dec
adc
subps
xchg
sar
or
retf
sete
add
mov
loopne
rol
je
sub
and
cmp
push
loopne
xor
xlat
inc
xchg
je
mov
retf
push
mov
mov
adc
cmp
mov
sbb
dec
adc
adc
outs
je
push
inc
jne
fs
pop
jne
cmp
or
inc
(bad)
and
inc
inc
arpl
cmp
sbb
xor
pop
outs
dec
mov
xor
cmp
jmp
(bad)
mov
leave
pop
cmp
inc
cwde
int3
cmp
push
jg
nop
xor
or
ja
push
ror
ret
retf
jl
add
xchg
outs
push
or
cmp
pop
xor
pusha
bound
lock
push
inc
sbb
sbb
sbb
outs
int3
pop
adc
or
and
or
(bad)
sbb
adc
das
jle
pop
inc
mov
xor
push
nop
and
push
inc
pusha
pop
cmp
scas
(bad)
ror
pushf
mov
ret
jl
add
enter
sub
pop
cmp
cmp
mov
mov
xlat
in
and
or
ins
gs
outs
jb
popa
je
or
mov
(bad)
cmp
out
sbb
push
add
or
jb
jo
imul
ins
popa
jae
pop
pop
add
inc
js
outs
jae
outs
outs
sub
(bad)
mov
gs
jb
jo
sub
rcr
dec
inc
sub
add
cmp
add
fimul
adc
push
sbb
push
jl
push
adc
cmp
mov
xor
daa
mov
neg
push
push
mov
data16
add
dec
push
pop
inc
jnp
fisttp
add
add
xchg
xchg
call
ficom
stos
cmp
inc
push
call
push
push
cmove
adc
(bad)
sbb
dec
imul
push
inc
jb
and
add
in
add
mov
add
inc
gs
mov
pop
out
mov
div
jns
pop
push
dec
and
inc
fs
xchg
inc
sbb
inc
lods
add
fcmovnb
inc
rcr
or
xchg
ret
jo
mov
sbb
pop
mov
dec
add
xchg
mov
push
sub
ret
ret
mov
arpl
jno
add
fsub
iret
addr16
dec
popa
ins
retf
out
jl
aaa
or
jg
add
push
shr
jbe
in
push
jbe
jo
in
push
ret
xchg
inc
jne
fidiv
add
jae
retf
int
adc
inc
or
xor
inc
inc
(bad)
out
(bad)
pop
mov
jg
lea
je
(bad)
push
arpl
jae
mov
xlat
xor
push
add
push
test
jmp
jle
lahf
inc
sar
pop
push
nop
in
sub
rcl
idiv
lods
pop
daa
lock
mov
pop
shr
repnz
inc
sbb
hlt
mov
add
enter
cld
lock
adc
pop
push
enter
cwde
cwde
in
call
in
imul
jne
in
fistp
lea
ret
call
loope
or
add
mov
fdivr
gs
add
imul
je
les
push
das
daa
ror
bound
add
inc
cmps
outs
clc
mov
dec
test
jl
mov
xor
inc
xor
mov
fs
adc
add
jo
dec
jne
mov
and
xor
hlt
lods
push
loopne
movs
jle
adc
(bad)
in
lahf
mov
hlt
or
cli
loope
call
movs
ficomp
push
rcr
loopne
and
add
add
adc
xor
jbe
mov
sbb
bound
arpl
popf
jo
mov
sti
xor
or
mov
in
or
clc
pop
ret
leave
push
mov
mov
movs
push
pop
and
clc
inc
mov
pop
or
sti
add
add
pusha
inc
add
ja
dec
ins
cmp
in
jne
push
jmp
push
call
and
push
ret
xchg
ret
sahf
shl
adc
scas
das
pop
xchg
push
xchg
or
repz
inc
or
xchg
push
adc
cmp
fsub
popf
pusha
mov
adc
or
(bad)
lds
aad
push
outs
jo
repnz
jnp
mov
dec
xor
push
loop
int3
in
mov
shl
mov
mov
push
int3
mov
in
scas
inc
nop
or
dec
out
inc
mov
pop
cmp
ror
in
sbb
sub
push
cmps
clc
outs
push
arpl
dec
inc
jo
dec
cmp
jl
jno
adc
cli
outs
nop
mov
je
aas
adc
sbb
jl
cs
or
push
cmp
push
dec
dec
jne
or
cmp
mov
inc
push
mov
xor
mov
dec
jp
push
mov
adc
push
adc
adc
dec
mov
clc
or
cwde
repz
retf
push
les
(bad)
int3
mov
int
xchg
std
dec
jmp
in
adc
cs
add
je
fidivr
fsubr
inc
sahf
stc
sub
sbb
loop
test
cmp
(bad)
mov
mov
push
mov
addr16
push
test
mov
ret
jno
jo
aad
out
mov
std
mov
jo
xchg
cli
dec
sbb
pop
pop
mov
lahf
retf
call
in
cmc
(bad)
jp
add
dec
hlt
std
mov
sub
sub
cs
sub
ret
div
add
push
pop
jns
pop
fcomp
shr
pop
pop
adc
lock
add
sbb
push
pop
in
adc
sbb
cmps
ins
jo
and
push
cmp
inc
mov
daa
std
gs
shl
in
or
scas
and
and
xchg
dec
push
mov
sti
div
push
cwde
imul
and
xchg
cmp
ror
lea
add
loope
jno
mov
push
dec
loope
jno
fiadd
int3
stos
cwde
pop
int3
inc
sbb
ins
int
inc
cmp
inc
push
aaa
and
or
aaa
lea
cmp
sub
sbb
and
lea
pop
adc
les
mov
stos
aaa
and
mov
sbb
mov
add
push
inc
retf
inc
dec
and
and
push
xor
rol
dec
popa
and
psubsw
daa
pushf
cs
jle
dec
js
mov
shld
and
inc
mov
xchg
mov
in
xchg
pop
or
xchg
popf
cdq
movs
stos
cmps
rol
jmp
jle
cmp
ret
push
sub
add
call
add
sbb
mov
adc
push
daa
shl
ins
and
fnsave
pop
ja
ja
rcr
int3
xchg
adc
inc
cwde
test
cld
mov
rcl
sbb
pop
pop
pusha
jne
or
pop
test
or
std
add
imul
inc
nop
mov
daa
mov
mov
or
loope
sub
enter
dec
je
dec
sar
dec
push
push
mov
mov
(bad)
xchg
or
or
or
or
daa
cld
dec
push
or
push
(bad)
scas
sbb
jae
gs
push
popa
add
enter
mov
mov
push
or
ret
mov
std
call
and
and
push
xor
sbb
xchg
popa
mov
xchg
cdq
cmc
add
pusha
cmps
imul
mov
in
or
das
mov
in
mov
sahf
vmread
push
push
mov
jmp
scas
into
inc
mov
mov
jo
out
popa
add
push
mov
lahf
add
pop
adc
test
and
das
sbb
and
inc
lahf
jno
std
inc
or
rcl
pop
jmp
pop
push
cwde
adc
xchg
(bad)
in
add
bound
adc
imul
pop
jmp
and
cld
add
sahf
jmp
mov
dec
sub
cmp
add
or
inc
hlt
adc
cmc
push
xor
movs
inc
sub
das
jo
xchg
push
imul
sub
out
(bad)
jb
xor
jne
or
push
ret
addr16
aad
(bad)
nop
cmp
push
add
xchg
mov
ret
inc
imul
call
test
inc
ror
je
rcl
dec
rcl
jge
xlat
fild
lock
jne
mov
inc
test
dec
pop
test
shr
cld
mov
out
mov
or
out
mov
loop
fs
add
inc
in
jo
inc
loopne
jo
inc
inc
push
pop
jo
push
fiadd
mov
jl
mov
cmp
inc
les
push
sbb
cs
jns
lods
call
call
das
jo
cld
pop
push
lods
fsub
and
stos
inc
in
mov
xchg
mov
mov
or
mov
arpl
fwait
adc
xchg
inc
push
inc
mov
inc
cmps
inc
xor
pushf
and
pop
sub
adc
outs
sub
imul
stc
lock
add
adc
fsub
jnp
(bad)
dec
mov
add
sbb
jne
push
add
inc
mov
and
in
xlat
call
or
or
repnz
pop
jmp
sbb
pop
inc
mov
sbb
cdq
inc
fsubr
adc
lods
cdq
adc
add
dec
jmp
push
add
sub
jp
shl
out
add
ss
je
inc
dec
adc
je
mov
or
clc
add
sub
fsubr
inc
test
or
mov
mov
add
adc
add
jo
jge
cmp
pop
mov
ja
push
fwait
xor
lods
push
pop
and
inc
cmc
sbb
scas
push
loope
popa
push
push
in
lock
bound
inc
pop
cmp
rcr
leave
ds
xor
fsubr
or
rcr
add
pushf
out
mov
pusha
add
nop
mov
push
test
push
adc
pop
or
dec
movs
mov
or
or
imul
pop
adc
lock
dec
mov
ror
fsubp
mov
and
je
sbb
push
sub
adc
pop
mov
test
cdq
sub
or
or
xor
pop
int
clc
sbb
adc
mov
sub
add
add
inc
add
fcmovb
outs
push
pop
test
jb
das
and
imul
or
or
pop
adc
adc
add
arpl
jno
jg
mov
adc
hlt
mov
push
and
and
xor
daa
mov
inc
inc
addr16
adc
inc
fucom
shl
imul
adc
js
mov
or
mov
mov
jmp
(bad)
aam
fwait
mov
pop
(bad)
es
or
inc
jge
mov
clc
jbe
pop
add
inc
jbe
push
inc
gs
and
dec
mov
pop
jbe
cmp
push
mov
or
sub
je
xor
sbb
push
ins
push
loope
aas
adc
sti
(bad)
or
add
ror
test
dec
adc
adc
adc
adc
push
push
adc
push
jns
mov
dec
or
sub
out
rol
xchg
xchg
out
dec
fdivr
jle
xchg
xchg
fdivr
mov
dec
push
js
inc
sub
(bad)
ins
pusha
adc
or
xchg
push
(bad)
outs
add
jl
(bad)
sahf
dec
(bad)
pusha
dec
sbb
xchg
movs
pop
nop
add
sub
mov
mov
ret
xchg
or
nop
aam
and
scas
enter
inc
or
pop
inc
or
xchg
(bad)
pop
inc
jno
cli
push
cmp
and
into
xor
rcl
pop
sub
sbb
sub
mov
mov
jmp
push
push
or
ins
clc
and
in
push
fs
mov
mov
daa
sbb
sub
xchg
add
hlt
aam
sub
loope
dec
(bad)
add
mov
sbb
ss
adc
cmps
ss
cli
or
rcr
movhps
mov
popf
mov
adc
push
test
(bad)
jo
dec
cmp
and
cmp
(bad)
pushf
add
mov
mov
mov
stos
(bad)
fstp
inc
adc
lea
cwde
mov
inc
push
pusha
fmul
pop
sbb
ret
ret
gs
dec
xor
gs
sbb
xor
aas
popf
adc
hlt
sbb
imul
push
shr
sbb
push
mov
sub
aaa
push
lods
aas
loope
or
push
in
jp
xchg
fistp
int3
mov
xchg
push
clc
sti
aam
xchg
fdivr
call
cmp
cmp
or
daa
cmp
arpl
jnp
and
(bad)
add
or
push
nop
mov
call
push
mov
cmp
je
cmp
mov
jae
clc
mov
ins
add
sub
sub
test
lahf
fs
lea
or
pop
dec
data16
xor
in
ret
jp
push
mov
test
mov
and
inc
xchg
call
inc
test
inc
mov
lods
adc
test
mov
mov
je
add
and
sbb
and
add
fidivr
pop
xor
or
(bad)
int
call
icebp
adc
das
nop
cmp
jecxz
clc
push
push
pop
xchg
daa
or
es
xchg
dec
jo
and
les
mov
jne
aas
pop
xlat
add
sbb
ins
nop
jecxz
mov
in
ret
cmp
out
jl
test
inc
cmp
sbb
or
fdivr
mov
dec
hlt
xchg
xor
test
inc
ficom
or
popa
in
xchg
or
jo
loopne
dec
jmp
or
js
add
push
jmp
mov
push
div
xchg
retf
adc
fldenv
inc
das
xor
bound
mov
sbb
xor
jl
rcr
adc
call
fidiv
dec
or
add
jb
or
cmp
push
xor
mov
sti
mov
das
out
cmp
je
jnp
and
rol
cld
mov
cmps
je
cmp
pop
loop
lods
jmp
pop
cmp
sub
sbb
xor
loopne
add
push
push
movs
or
and
shl
outs
adc
push
adc
jo
nop
lods
mov
push
and
sub
sbb
or
adc
outs
stos
adc
add
add
pop
fwait
or
outs
or
xor
cmp
mov
pop
push
inc
test
loopne
push
pop
fs
jg
movups
and
push
in
add
bound
aaa
in
clc
mov
jo
je
add
sub
pop
outs
add
cwde
xchg
ins
in
add
pop
jne
cmp
jbe
mov
outs
test
or
dec
push
pop
nop
fldenv
push
jmp
mov
out
add
jmp
jmp
xor
mov
ret
sbb
enter
jne
cmp
xor
mov
inc
call
pop
mov
add
in
push
scas
pushf
xor
push
das
cmp
inc
and
adc
cmc
adc
movs
inc
pushf
mov
daa
dec
adc
nop
mov
xor
inc
scas
loope
dec
sub
(bad)
add
inc
or
popf
mov
lahf
xchg
xor
jnp
xchg
(bad)
mov
cdq
in
sub
sub
jnp
xchg
lahf
xor
add
adc
mov
sub
xchg
gs
xor
jge
lock
pop
repnz
aas
sub
and
adc
mov
add
jge
mov
jo
sbb
ror
fcomp
adc
je
leave
mov
adc
pusha
mov
and
fiadd
or
xor
pop
jns
add
push
inc
jbe
les
push
pop
sub
lock
and
sbb
jmp
or
xchg
push
bnd
pop
mov
jae
push
int3
add
adc
pop
push
ss
lock
and
and
sbb
xor
pushf
nop
cmp
add
sbb
pusha
push
pop
sahf
mov
sub
adc
jle
ret
add
imul
imul
xchg
ret
push
test
lods
pop
dec
test
pusha
daa
xor
test
imul
pop
sahf
adc
adc
into
mov
push
jmp
cmp
adc
dec
div
add
mov
ss
jo
retf
out
pop
(bad)
jmp
iret
pop
leave
pop
loopne
push
xchg
ret
and
pop
sahf
or
lahf
or
adc
and
xchg
and
xor
xor
xor
pop
ja
cmp
es
push
add
fadd
(bad)
retf
imul
add
pop
dec
add
pop
sub
shl
push
or
jl
int
stc
mov
dec
and
clc
inc
and
in
sahf
repz
and
or
out
ds
rcr
add
push
push
cwde
sahf
cmps
stc
cmp
adc
dec
xchg
pushf
add
jns
nop
sub
push
mov
mov
adc
out
adc
mov
pop
adc
inc
inc
imul
xor
and
inc
dec
ins
sub
sbb
mov
sub
ins
gs
gs
pop
loope
push
push
jmp
inc
loop
push
ins
inc
popa
outs
jbe
jae
les
sbb
add
wrmsr
aaa
lock
enter
push
inc
fsub
or
inc
fbstp
fsubr
sbb
xor
imul
addr16
in
and
mov
cmps
add
hlt
mov
pop
xlat
fwait
add
jo
xchg
push
lds
push
pop
xchg
jmp
dec
mov
push
mov
fucomp
test
xor
sti
jns
pop
cld
lods
jmp
cmp
stos
dec
mov
sbb
add
lods
les
xchg
cmp
xchg
push
inc
sub
clc
sbb
xor
lock
movs
es
mov
mov
push
or
xchg
lods
xor
sti
and
sti
xor
adc
(bad)
adc
dec
test
push
stos
push
mul
ja
adc
(bad)
or
sub
push
cmp
xchg
neg
pusha
in
or
bswap
pop
popa
rol
mov
sub
(bad)
es
adc
shl
mov
xor
inc
pop
add
std
mov
pusha
sub
push
xor
inc
mov
data16
push
ins
push
mov
jl
add
push
xchg
fnsave
pop
sub
lds
sbb
out
pop
or
jmp
push
nop
es
push
adc
add
neg
adc
movs
aaa
xor
cmp
test
sbb
dec
shl
jo
or
push
dec
(bad)
rol
jmp
lods
out
daa
push
pop
dec
adc
in
jmp
dec
(bad)
push
enter
or
or
jno
mov
cwde
in
sbb
adc
mov
ja
mov
inc
add
test
rol
fwait
jle
dec
cmp
or
add
into
push
jno
or
cmp
pop
push
adc
in
mov
mov
(bad)
outs
pushf
jnp
fs
adc
lea
cs
inc
adc
les
movs
ds
add
push
mov
mov
push
cmp
in
or
xor
jns
in
and
pushf
jb
sub
cmps
inc
lea
and
ret
dec
(bad)
fcomp
sahf
xor
idiv
jns
or
xchg
mov
jl
sub
sbb
mov
shr
push
add
hlt
push
outs
cmp
inc
test
push
push
pop
inc
mov
fcmovne
mov
mov
ins
adc
out
mov
inc
inc
bound
(bad)
pusha
mov
data16
adc
mov
lods
fmul
loopne
dec
pop
jo
sbb
and
add
test
xchg
cmp
cmp
out
push
les
test
jge
sar
or
je
adc
and
sbb
sbb
sbb
and
inc
cmp
add
js
or
cmc
pop
jae
movs
xchg
sbb
mov
js
xchg
lds
sbb
out
mov
movs
mov
and
pop
inc
jne
pop
add
out
xchg
in
push
jbe
jmp
jae
adc
mov
or
or
in
add
cmp
les
push
add
xor
mov
xchg
ficom
lock
adc
aas
fistp
mov
sub
retf
shl
js
xor
adc
add
sub
mov
and
lds
or
add
sbb
scas
cmp
push
dec
mov
out
push
fmul
xor
rep
adc
fdiv
pop
pushw
in
mov
(bad)
fistp
int3
sub
add
mov
push
sub
ins
fistp
add
rol
add
add
js
dec
int3
mov
cmps
jo
and
ins
cmp
fiadd
in
xor
je
iret
call
push
rol
sbb
jmp
and
cmp
dec
sub
xor
xor
jo
sbb
add
jmp
outs
cmp
xchg
push
daa
and
push
adc
jo
ds
gs
inc
mov
or
adc
push
lea
mov
out
xor
clc
jo
inc
aam
iret
inc
push
aas
rol
and
inc
cmp
jne
add
cmp
jbe
xchg
test
cmc
loope
sub
cmp
imul
push
inc
lea
pushf
jbe
sub
mov
mov
inc
sbb
pop
das
outs
dec
inc
fdiv
(bad)
jbe
outs
mov
jg
xor
or
hlt
jp
call
mov
rcl
pop
rcl
or
xchg
add
xchg
sub
call
test
dec
jb
clc
in
mov
mov
add
aaa
adc
ss
stc
mov
mov
mov
call
push
pop
adc
mov
or
jge
sub
add
sbb
jmp
push
push
push
mov
les
rcl
dec
repz
xor
loopne
movs
(bad)
xor
sbb
inc
aaa
dec
cs
hlt
inc
xor
cmp
js
sbb
pop
push
shl
jae
and
hlt
add
mov
or
call
bound
and
xchg
rcl
jbe
cmc
out
cmp
xor
dec
fdiv
push
shl
in
sbb
pop
mov
inc
jmp
and
call
xlat
mov
fidiv
xchg
sub
or
iret
add
(bad)
jg
and
mov
mov
mov
add
out
test
jle
ret
push
push
call
xor
call
mov
mov
sbb
inc
push
loopne
rcl
in
jmp
test
adc
mov
cmp
(bad)
pop
out
fsub
(bad)
rol
adc
push
sub
cmp
jge
imul
iret
out
loope
test
xor
or
mov
add
sub
sbb
std
pop
jne
push
addr16
jno
adc
scas
aam
ins
cmps
leave
jecxz
loopne
ins
add
mov
inc
out
push
cmp
stos
cmp
outs
daa
out
gs
jmp
cmp
adc
psubsb
or
xor
add
push
sub
sub
or
je
or
cmp
or
add
jo
xor
inc
sbb
push
jae
test
adc
pop
mov
mov
in
mov
repnz
(bad)
adc
ror
inc
lock
rcr
adc
ret
lea
lods
pop
xor
icebp
mov
sbb
fsubr
mov
cmp
(bad)
enter
sbb
jmp
ds
jmp
and
mov
sbb
fwait
(bad)
or
jl
stos
or
push
sub
sbb
imul
or
inc
adc
and
test
movs
fadd
mov
inc
ins
scas
push
dec
sub
adc
jg
xor
add
cmps
mov
xchg
lock
inc
and
mov
inc
xor
mov
stc
and
js
jl
aas
mov
xor
cmp
and
test
aam
repnz
cmc
pushaw
icebp
push
fld
sbb
es
call
arpl
pop
bound
pop
aaa
out
pop
push
lods
jp
jae
and
add
jmp
push
mov
xor
cmps
xchg
push
mov
sbb
cmp
adc
test
or
cmp
push
cmp
push
mov
jne
mov
imul
test
sub
mov
and
push
sub
ds
jno
cmp
cs
jmp
push
dec
xor
sbb
movs
and
pop
add
das
js
push
dec
jbe
mov
and
int
xor
push
add
lock
pop
sbb
mov
adc
ds
adc
xchg
or
gs
dec
nop
inc
clc
mov
push
getsec
mov
and
push
pop
sub
add
and
push
(bad)
jmp
cmc
push
lahf
and
pop
jg
sbb
loopne
dec
xor
shr
mov
lock
data16
or
lods
mul
cwde
add
mov
jo
sbb
sbb
jmp
dec
xor
adc
jmp
mov
sub
add
in
scas
sar
ret
mov
adc
cmp
outs
mov
inc
ss
hlt
sbb
push
ret
pushf
cmp
rol
lock
sbb
jmp
popa
ja
test
das
dec
hlt
jne
push
sbb
mov
test
sbb
jge
jne
adc
xchg
jo
dec
stos
repnz
imul
pop
call
sub
ins
icebp
neg
mov
sub
and
sub
retf
mov
add
and
and
or
mov
movs
dec
and
push
fdiv
idiv
xor
loopne
arpl
pop
xchg
jo
aaa
lahf
mov
mov
push
loope
jmp
add
and
loope
loope
sbb
push
test
adc
sbb
jmp
xor
test
pusha
cmp
ds
sub
fwait
out
jge
je
shl
fwait
jnp
or
clts
adc
or
sub
dec
fwait
mov
and
hlt
add
test
or
callw
std
cmp
jne
dec
cmps
inc
or
push
push
dec
mov
dec
mov
mov
ja
pop
scas
ret
mov
enter
adc
les
repnz
jmp
(bad)
adc
enter
cmp
and
mov
(bad)
jae
dec
and
mov
popf
sub
into
mov
cs
xor
jne
or
mov
mov
pop
fisub
les
iret
add
loope
mov
add
es
and
std
mov
sub
pop
push
and
dec
fild
mov
aaa
push
mov
cmp
in
jo
into
xor
ss
sub
jp
(bad)
aas
add
add
cmp
jne
inc
push
or
add
jmp
test
push
(bad)
or
retf
sub
out
sub
or
das
rol
sbb
adc
jne
or
add
sbb
pop
test
cmp
mov
lods
cmp
in
push
cmc
sbb
jmp
jbe
push
sbb
hlt
add
adc
je
dec
je
sub
je
jmp
inc
sbb
or
cmp
jmp
mov
jmp
inc
sti
pop
pusha
adc
or
shr
sbb
sub
xchg
mov
jmp
mov
or
sbb
mov
xlat
xor
mov
or
jl
jge
int3
lock
jl
mov
rol
push
pop
jecxz
mov
jle
sub
aas
icebp
add
add
or
mov
ret
xchg
lock
and
add
pop
fcomip
pop
test
or
cmp
add
xor
(bad)
ins
or
mov
jp
rcl
inc
sbb
mov
mov
fnstsw
or
dec
add
js
or
push
push
add
sbb
sti
daa
push
add
add
out
popa
sub
ins
add
sub
inc
inc
cmp
ja
jg
jns
inc
xchg
fdivp
cmp
adc
add
sbb
cmp
nop
loopne
cli
or
dec
jns
(bad)
push
xor
jg
adc
outs
dec
sbb
mov
jg
push
or
sbb
pop
cmp
jne
xor
adc
inc
dec
call
jle
push
or
jns
jmp
test
sti
sbb
add
(bad)
inc
xor
adc
cmp
loopne
(bad)
jb
pop
mov
cli
pop
inc
and
cmps
xor
pop
mov
push
sbb
in
mov
or
pop
or
pop
rcl
or
pop
sub
pop
fst
cmp
repnz
jge
or
push
mov
pop
dec
add
dec
cld
dec
inc
ror
or
sbb
xor
add
and
ja
jae
mov
test
push
inc
push
push
or
jge
enter
mov
in
add
rol
test
push
loopne
jne
outs
jg
dec
add
or
inc
push
xor
xchg
jg
mov
shr
add
ins
adc
inc
jno
pop
sub
cmps
rcr
add
mov
pop
(bad)
sub
pop
add
add
adc
and
fidivr
push
retf
imul
add
(bad)
add
movs
dec
pop
out
add
cmp
add
push
loope
or
test
pop
das
mov
jnp
sahf
or
sbb
fild
mov
adc
add
out
push
push
adc
fsub
cmps
fisttp
xlat
dec
mov
inc
xor
jecxz
sub
cmps
outs
sub
xchg
mov
mov
jo
cmp
(bad)
je
inc
or
call
rol
xor
push
adc
sub
outs
jne
push
or
fcom
sub
push
add
sbb
adc
inc
fs
sub
jmp
(bad)
fucomi
add
or
sbb
push
jmp
pusha
add
inc
xor
fwait
not
or
ret
lods
cmp
mov
lock
or
adc
cmp
push
test
rcl
sub
cmps
popf
mov
pushf
(bad)
call
mov
cmp
xlat
jmp
shl
loope
push
mov
inc
mov
hlt
xchg
scas
add
and
imul
xchg
ret
fwait
and
sar
adc
push
adc
xor
dec
mov
xchg
test
sub
(bad)
das
inc
dec
mov
mov
shr
js
or
jmp
inc
in
stos
int3
push
xchg
and
or
jg
sub
dec
jp
test
jmp
nop
or
sbb
jo
mov
lock
jp
ins
mov
mov
jno
mov
bound
dec
in
cmc
or
mov
adc
pop
jo
daa
ins
rcl
sub
nop
mov
jo
adc
movs
out
test
dec
sbb
xchg
pop
xchg
and
push
aas
inc
icebp
lds
rol
mov
mov
call
outs
or
adc
cdq
dec
pop
pop
sbb
xlat
push
pop
jo
or
rol
loopne
call
es
or
xchg
inc
fild
inc
sbb
pop
ror
sub
mov
pop
xchg
sbb
sub
inc
fisttp
sub
lds
test
inc
sbb
xor
std
push
mov
mov
push
add
in
add
push
ret
sub
daa
push
pusha
ficomp
scas
pop
or
clc
or
pop
call
arpl
int3
out
mov
xor
lahf
push
xchg
ret
pop
add
lea
cmp
int3
pop
xchg
(bad)
add
dec
push
xchg
mov
ficom
pop
loope
or
mov
mov
and
xor
(bad)
neg
mov
ins
test
lock
enter
retf
scas
pop
call
jnp
add
fdiv
lds
sub
add
xor
fisub
add
mov
das
push
test
xchg
or
inc
hlt
out
push
and
mov
push
mov
mov
mov
mov
loopne
xor
daa
jbe
jnp
dec
inc
xchg
imul
mov
jno
mov
sbb
mov
mov
fmul
push
rol
fwait
imul
mov
inc
adc
lock
imul
idiv
cwde
xor
hlt
push
mov
call
add
cmp
mov
dec
ret
pop
dec
sar
out
in
jno
push
in
movs
and
adc
imul
arpl
push
cmp
iret
sbb
dec
jmp
add
outs
sub
pop
add
xor
out
push
popa
std
ficom
add
cmp
push
popa
cmp
imul
adc
inc
pop
push
xor
mov
sub
mov
lods
or
test
mov
or
pop
outs
jns
cwde
add
add
pop
and
mov
popa
ror
into
dec
xchg
cmp
in
inc
retf
add
add
stc
xchg
fcomp
inc
test
pop
adc
push
in
lods
or
mov
push
inc
shr
xor
and
add
imul
pop
add
sub
adc
ret
mov
pushf
hlt
mov
ja
ja
add
jnp
nop
jo
imul
js
test
sub
enter
pop
ror
xchg
lock
dec
jne
sbb
dec
rcl
cmp
pop
and
jmp
adc
js
pusha
jmp
push
add
es
std
adc
adc
push
hlt
repz
aam
mov
push
cmp
inc
xchg
add
xlat
or
movs
pop
(bad)
fs
mov
lahf
jp
jle
add
mov
clc
rcl
push
push
push
sbb
jmp
or
sti
mov
jmp
sbb
adc
pushf
ror
jo
dec
rcl
sbb
or
jg
push
mov
mov
xchg
or
sub
and
jle
adc
ja
cmp
mov
sub
sub
add
sbb
mov
xor
rcr
inc
or
shr
inc
adc
push
push
or
cmp
fimul
mov
jbe
inc
xchg
add
push
mov
aas
inc
outs
sub
adc
push
jno
addr16
adc
stos
push
xchg
inc
push
or
and
pop
fwait
add
fcmovnbe
adc
adc
leave
xchg
lea
sub
pop
(bad)
pop
scas
jo
adc
movups
in
std
popa
and
inc
adc
pop
loopne
add
inc
ror
adc
xchg
or
sbb
aas
repnz
mov
mov
ds
ins
ja
test
dec
sbb
or
or
pop
mov
aad
mov
(bad)
cmp
ja
lea
fimul
push
add
add
ja
cli
je
add
inc
fnstsw
pop
(bad)
lahf
test
in
add
or
adc
nop
push
je
loope
push
mov
mov
pop
call
push
mov
inc
cmp
push
mov
icebp
js
sub
pop
paddb
dec
hlt
popa
sbb
adc
adc
and
push
push
cli
or
jl
cmp
and
sbb
call
cs
lea
sub
xlat
bound
inc
and
das
cmp
mov
and
push
js
jg
add
jg
imul
push
sub
je
jmp
ss
(bad)
pop
pop
js
mov
mov
add
pop
sbb
add
pusha
sbb
mov
pop
fsin
push
push
mov
inc
ins
sub
stos
push
movs
sbb
push
test
ror
sub
mov
add
add
in
sbb
in
clc
cmp
dec
add
xor
dec
ret
scas
movs
clc
jmp
jecxz
or
add
repz
loop
push
loopne
push
out
sbb
enter
into
jmp
and
cwde
fs
add
retf
add
mov
ins
dec
jo
and
push
inc
movs
pop
or
xor
add
or
add
jecxz
add
xchg
lea
scas
sar
cmps
cmp
je
cmp
icebp
and
sbb
add
dec
popf
gs
xor
push
mov
sbb
adc
fdivr
sbb
cmp
je
test
jne
mov
jmp
or
and
xchg
ffreep
scas
test
(bad)
mov
dec
mov
daa
add
mov
pop
loope
mov
dec
and
push
ins
test
je
mov
inc
retf
outs
pop
loopne
adc
cwde
add
out
dec
pop
ins
xchg
xor
jmp
push
(bad)
lods
add
(bad)
in
xchg
or
test
push
dec
jo
inc
adc
call
push
sub
push
lea
lea
inc
xor
jno
push
or
push
jo
es
ds
ja
enter
test
cmp
sub
cdq
ins
jge
outs
xchg
jo
add
and
xchg
lods
or
fstp
or
sub
push
sbb
sbb
jmp
fnstcw
les
cmp
or
xor
sub
jne
xchg
push
arpl
iret
mov
mov
idiv
dec
jbe
adc
rol
ror
sahf
mov
icebp
push
leave
adc
adc
call
mov
out
daa
popf
pop
retf
je
test
or
xor
push
lods
or
fbstp
enter
and
and
push
sbb
inc
and
or
xor
lods
push
xchg
sub
movs
add
ret
sub
or
into
mov
pop
jmp
inc
aas
inc
div
push
xor
test
push
mov
fidiv
pop
jns
jno
xor
lock
mov
push
adc
sbb
ror
and
mov
adc
or
add
ror
sbb
push
add
and
mov
(bad)
cdq
push
(bad)
(bad)
mov
dec
cld
ret
cs
xor
int
xchg
dec
add
ja
sub
mov
cmp
and
jo
mov
aam
push
jle
stos
aam
stos
iret
push
jge
lock
mov
pop
mov
lods
cmp
push
push
or
cmp
xchg
cmp
sbb
pop
pop
retf
movs
push
daa
pop
xchg
adc
mov
cmp
je
arpl
push
adc
jbe
je
xlat
out
dec
and
sbb
push
cwde
dec
adc
add
pop
cmp
cmp
shr
test
fidiv
test
fwait
arpl
jle
add
cmp
mov
pop
mov
push
jae
mov
inc
mov
pop
cld
dec
test
jl
inc
and
cmp
dec
test
jl
inc
test
mov
or
add
jne
dec
jne
jle
add
leave
xor
dec
jmp
loop
and
hlt
or
(bad)
wrmsr
ins
inc
lock
pop
mov
call
mov
adc
mov
adc
(bad)
sahf
push
imul
adc
dec
(bad)
cmp
jle
xchg
ds
jbe
clc
in
stos
addr16
shr
add
jmp
mov
sbb
jg
fmul
rcr
or
inc
mov
or
dec
aam
dec
mov
not
mov
mov
mov
cmp
and
push
mov
pop
fmul
push
(bad)
outs
push
movs
aaa
inc
pop
push
shl
leave
lock
mov
pusha
ror
or
xor
sar
sbb
ds
jne
sub
pop
pusha
xchg
pop
repz
loopne
mov
pop
inc
or
xor
inc
rcr
lock
inc
xor
add
xchg
adc
mov
cmp
hlt
lods
je
sub
dec
mov
je
push
mov
inc
cmp
retf
mov
inc
pop
add
dec
jne
xor
(bad)
dec
outs
ficom
dec
sbb
cld
mov
or
sbb
test
out
mov
dec
sub
sub
cmp
retf
jnp
dec
jo
push
test
or
inc
push
call
mov
or
lods
popf
ror
add
stos
adc
(bad)
sahf
inc
push
sti
js
adc
arpl
pop
mov
sub
or
mov
je
ss
ja
je
sub
sbb
(bad)
cmp
xor
sbb
cmp
mov
adc
or
push
sbb
rcr
cmp
enter
dec
clc
jb
stc
in
jo
sbb
xor
sub
adc
adc
cmp
inc
test
adc
cmps
scas
loopne
jo
cmp
dec
scas
xlat
add
pop
movs
xchg
cmp
and
cmp
inc
pop
dec
push
inc
inc
hlt
jne
and
ret
inc
cmp
adc
mov
pop
push
cmp
pop
add
add
push
or
shl
or
loop
clc
and
daa
mov
inc
daa
jo
stos
add
leave
sbb
adc
mov
xor
or
and
data16
je
jmp
mov
pop
test
inc
sub
inc
or
inc
pop
les
loope
and
fdivr
jmp
cld
push
pop
push
hlt
mov
test
test
and
or
mov
outs
rcl
cmps
cmps
shl
in
add
imul
pop
in
neg
adc
xchg
adc
or
push
cld
xor
aam
xchg
sbb
data16
and
and
das
js
fdiv
aam
mov
les
loopne
shr
imul
add
and
or
or
movs
scas
adc
pop
sub
popa
sub
out
inc
ret
add
inc
test
adc
xchg
or
pop
push
add
and
push
and
stc
shl
inc
or
add
cdq
outs
je
mov
mov
stos
shl
sub
loope
call
retf
pop
jle
inc
adc
rol
xchg
fmul
ss
ja
fs
xor
rcl
push
(bad)
xchg
pop
fcomp
bound
push
push
sbb
pop
enter
dec
popa
test
pop
jnp
jo
dec
sbb
aas
mov
bound
pop
aaa
or
clc
xor
sbb
push
lock
dec
sti
dec
xchg
jns
mov
jbe
add
xor
mov
je
rcl
mov
adc
les
sub
xchg
adc
sub
dec
mov
inc
ins
iret
and
out
mov
retf
pop
daa
pop
or
pushf
cld
adc
push
shl
ret
repz
cmps
sbb
mov
sar
lds
call
mov
call
inc
xor
shl
js
adc
or
mov
inc
or
stos
stos
cmp
sbb
or
sub
rol
cmp
xchg
xchg
push
out
mov
cmp
nop
cmp
shl
hlt
sub
sub
pusha
addr16
xor
sbb
jp
(bad)
jle
cli
jbe
cmp
and
dec
cdq
in
inc
push
or
jmp
and
xchg
fistp
mov
(bad)
outs
and
mov
pop
dec
inc
in
rcl
mov
je
sbb
pop
or
movs
mov
adc
inc
pop
test
ret
pop
lock
xor
test
lds
vmwrite
mov
sub
push
push
adc
jl
adc
sub
sub
fiadd
cdq
ret
pop
jnp
add
je
adc
lea
nop
mov
cmp
arpl
or
fwait
(bad)
sub
ror
cli
jno
mov
bound
adc
lds
rcr
sbb
mov
and
cld
inc
mov
jecxz
lods
adc
inc
dec
ins
popa
gs
fcomip
jne
adc
adc
mov
les
arpl
add
inc
popa
jo
imul
(bad)
mov
inc
sbb
and
add
jae
mov
push
xor
xchg
adc
inc
test
push
mov
iret
xor
adc
xchg
push
and
adc
es
xchg
pop
out
ss
mov
popa
adc
xor
add
addr16
enter
scas
and
(bad)
and
jo
sbb
push
lods
sbb
push
or
sub
movs
int3
jb
xchg
cdq
icebp
or
mov
jno
sub
mov
pop
pop
push
adc
neg
push
daa
mov
inc
movs
gs
or
call
in
ret
sub
(bad)
ret
push
cmp
scas
or
jmp
add
jae
out
mov
inc
sbb
mov
or
pop
pop
pop
pop
call
mov
add
dec
mov
sbb
dec
add
sbb
inc
add
lock
pop
sub
retf
lock
in
dec
movs
xchg
xchg
lock
scas
push
je
shl
sub
call
jp
clc
hlt
inc
lods
cmp
mov
push
xor
xchg
ins
add
ret
cdq
(bad)
gs
inc
scas
lock
mov
cmc
push
mov
bound
and
jmp
shl
xor
jl
pop
push
cmp
scas
or
jl
ror
data16
add
push
or
rcr
fbld
push
pop
dec
and
sahf
ror
cmp
sbb
std
lock
jmp
cld
sub
fsubr
popa
inc
test
or
cmp
mov
add
sub
add
mov
or
fcom
add
pop
mov
pop
cmp
push
mov
jecxz
cs
mov
jnp
or
test
cmp
cmp
rol
sar
pusha
or
imul
imul
sbb
inc
jns
cmp
jmp
ret
push
fadd
sub
arpl
cmp
jae
fsub
push
mov
sbb
pop
or
shr
ds
ins
push
mov
add
inc
cs
pop
adc
or
or
adc
fld
mov
repz
jecxz
or
adc
cmps
mov
xor
test
in
stos
inc
test
mov
jg
or
cs
icebp
sti
cs
movs
mov
inc
popf
cmps
daa
cmp
ja
xchg
adc
cmp
push
out
int3
fs
jecxz
sbb
dec
push
aaa
sbb
add
add
mov
aam
add
mov
pop
(bad)
rcl
mov
xchg
std
inc
add
sub
das
xor
adc
jnp
(bad)
mov
test
inc
je
xchg
aaa
or
jmp
mov
jmp
mov
xor
add
inc
mov
xor
sub
jmp
mov
push
clc
add
cmp
and
call
cmp
xchg
dec
inc
mov
neg
sbb
add
jmp
push
out
sahf
out
mov
and
inc
into
or
out
jmp
add
int
and
sbb
xor
xor
and
add
int
fwait
and
mov
dec
pop
push
add
fsubr
dec
or
popf
iret
mov
mov
icebp
out
jecxz
inc
lods
mov
scas
mov
pop
add
int3
xlat
es
and
xor
sub
clc
call
jmp
inc
data16
mov
push
sbb
test
rcl
retf
or
fnstcw
sub
fild
sub
jmp
pusha
sub
scas
aam
fidiv
and
scas
adc
sub
stos
fdiv
push
cmp
call
or
sbb
les
pushf
jb
pop
les
and
jmp
int3
pop
bound
je
shr
shl
push
push
or
pop
inc
push
icebp
stos
cmp
ret
mov
push
aad
in
cmc
or
out
rcl
adc
(bad)
jmp
cmp
and
mov
dec
cmp
stos
mov
int3
xor
lock
jo
scas
push
aas
gs
cs
inc
jno
and
mov
push
outs
sbb
adc
les
fadd
cmps
in
mov
add
ud1
daa
add
mov
les
fcmove
fdiv
je
mov
xchg
push
adc
xor
mov
and
push
mov
jbe
pop
pop
loopne
jno
dec
dec
and
mov
mov
add
mov
mov
es
pop
jl
cmp
jne
sbb
or
or
push
movlps
mov
shl
aaa
mov
jo
pop
cmp
mov
scas
mov
push
inc
enter
mov
mov
rcr
mov
popa
aad
bound
cmp
cmp
fldcw
xchg
mov
enter
add
sar
xchg
test
inc
sub
ds
add
aaa
(bad)
push
add
push
add
mul
shr
push
add
inc
push
add
cwde
daa
js
inc
pop
add
imul
jae
pushw
mov
outs
in
push
ja
fdiv
bound
inc
add
add
dec
push
cdq
cdq
cdq
(bad)
push
cmp
push
cmp
ucomiss
dec
bound
adc
push
or
pushw
push
dec
sbb
sbb
mov
ins
add
inc
or
xor
pop
mov
or
popa
je
gs
ins
sbb
or
or
daa
adc
lock
dec
mov
out
xor
add
gs
push
adc
mov
pop
push
inc
imul
or
and
inc
imul
outs
jb
sub
sub
rol
xor
pop
xchg
add
das
fwait
ins
sti
mov
push
mov
jge
add
sub
push
sub
xor
daa
or
in
mov
mov
clc
loopne
dec
add
imul
pop
test
outs
inc
add
imul
mov
mov
icebp
push
inc
push
pop
or
lods
mov
das
push
mov
xor
popa
outs
adc
jb
fs
arpl
mov
cmc
aam
or
xchg
cmp
out
sbb
ins
push
cmp
es
mov
push
inc
jb
xchg
gs
push
xchg
nop
data16
jbe
or
scas
jb
jns
pop
mov
xchg
mov
xor
xlat
xor
ror
pop
ror
inc
push
push
shl
rcr
dec
pop
ret
ror
adc
mov
sub
and
call
inc
cmp
add
test
add
cwde
xor
scas
fisubr
cmp
dec
mov
aaa
push
add
dec
inc
pop
jp
adc
sbb
lods
je
add
cmp
mov
loope
inc
mov
pop
xlat
sub
adc
or
cmps
mov
jne
sub
mov
test
daa
xor
jge
sahf
jp
neg
and
mov
out
or
ins
mov
adc
dec
or
aas
or
pushf
mov
in
cwde
add
ficomp
add
inc
sbb
fmul
lods
push
inc
jo
and
pop
mov
dec
or
adc
adc
loope
rcr
inc
in
popf
push
sbb
lock
push
xor
xor
loop
jg
std
mov
dec
or
inc
xchg
retf
cmp
rol
or
popa
xor
call
inc
cmp
jne
inc
cmp
shl
and
add
enter
lods
jmp
popa
add
add
dec
mov
pusha
mov
mov
cwde
jno
jmp
xchg
js
xlat
jb
mov
dec
jo
push
add
add
rol
sbb
pop
xor
jne
xlat
mov
cmp
and
stc
std
inc
adc
in
mov
mov
mov
xor
adc
popa
repnz
push
jmp
mov
stc
pop
ja
and
bt
fimul
and
add
xor
cmp
jne
mov
and
jg
dec
into
mov
inc
add
pop
ret
test
outs
les
rcl
push
push
cld
mov
cmp
sar
clc
into
mov
mov
add
and
mov
add
add
and
shl
and
or
jl
or
and
jmp
stos
mov
inc
ds
popa
sar
aas
or
push
or
repz
add
mov
mov
or
popf
fnstsw
or
push
xor
or
or
es
or
cmp
dec
fld
and
call
push
out
mov
and
fucomp
push
cmp
mov
loopne
and
pop
dec
and
jbe
jbe
fnstenv
cmps
or
push
xor
or
push
shl
out
or
data16
pop
mov
sahf
popf
gs
ss
or
cmps
mov
and
and
sti
daa
(bad)
ret
push
mov
pop
neg
imul
jecxz
pop
xchg
sbb
idiv
inc
nop
clc
rcr
add
adc
or
or
pop
rcl
sbb
ins
pop
fsubr
adc
push
xor
neg
xor
clc
pop
cld
push
add
imul
push
and
pop
or
mov
pop
adc
push
jno
lds
ret
push
add
dec
cmps
ret
push
xchg
ror
test
mov
in
push
fimul
adc
out
out
fisttp
mov
dec
jb
gs
fs
add
cmc
nop
pop
cmc
ss
call
cs
outs
jne
je
pushf
mov
dec
aaa
add
inc
je
in
inc
mov
add
mov
inc
xchg
ins
xor
test
jne
push
data16
add
test
mov
and
jl
push
outs
jo
ret
adc
and
stos
gs
or
imul
pop
or
mov
push
jns
push
pop
and
cs
dec
outs
jb
in
ss
add
add
sub
les
into
cs
movs
xchg
aas
inc
loopne
or
cs
push
fld
push
push
push
je
arpl
pop
sbb
and
inc
mov
adc
add
push
or
sahf
shl
fmul
add
jns
and
and
fst
inc
(bad)
jne
ror
inc
nop
push
mov
retf
add
cs
dec
adc
test
jg
push
or
mov
mov
and
pop
push
push
xor
test
add
dec
cmp
ins
je
pusha
lock
push
push
test
(bad)
aas
dec
push
adc
dec
inc
dec
inc
dec
dec
inc
pop
inc
push
push
xchg
dec
out
lock
dec
add
sbb
or
jne
je
dec
inc
ficom
sub
cwde
mov
jae
sub
fist
mov
adc
test
imul
in
inc
dec
sub
out
jmp
sbb
rol
push
out
and
push
mov
push
jp
add
push
cwde
mov
inc
add
xor
outs
and
add
outs
cmovae
pop
sbb
push
out
loop
popa
dec
retf
js
mov
inc
dec
mov
enter
imul
or
adc
mov
mov
neg
sbb
xlat
xchg
xchg
mov
jbe
push
mov
add
cmp
js
pshufw
es
fs
cmp
cmp
pop
pop
push
push
cmp
cmp
dec
dec
inc
inc
leave
leave
dec
xor
(bad)
data16
leave
leave
xor
(bad)
xor
dec
dec
and
sbb
jb
adc
or
imul
and
add
popa
xchg
ins
push
push
aas
ins
jo
push
mov
aad
add
adc
xchg
adc
push
ret
mov
test
and
mov
cmp
sub
ret
and
jno
push
jb
add
add
das
ret
sub
dec
dec
sar
push
push
pop
cmps
ror
out
adc
sgdtd
pop
into
push
in
push
push
call
loopne
lds
or
arpl
outs
dec
bound
arpl
daa
test
inc
arpl
imul
inc
retf
retf
pop
push
sbb
xor
sbb
dec
cmp
pop
push
popa
imul
call
dec
data16
mov
ins
outs
xor
pop
popa
and
dec
add
movs
xlat
sar
cmp
jecxz
add
outs
adc
push
dec
popa
outs
mov
jle
jb
popa
jns
add
int3
(bad)
inc
and
pusha
retf
fstp
and
ins
es
fimul
adc
and
push
lahf
pop
aam
(bad)
push
add
add
adc
pop
inc
pop
add
test
add
inc
inc
sbb
je
ss
or
dec
inc
dec
dec
lahf
pop
pop
push
(bad)
sar
push
and
retf
dec
(bad)
scas
(bad)
push
das
or
pop
inc
or
xor
neg
std
adc
test
xlat
or
push
(bad)
pop
jne
sbb
jecxz
jecxz
jmp
lock
mov
sub
dec
jne
je
jo
jg
pop
les
test
enter
fcmove
jle
mov
cmps
mov
pusha
dec
(bad)
cmps
lea
inc
(bad)
mov
add
adc
outs
popa
adc
mov
fs
shl
xor
add
icebp
repnz
or
pop
pop
lea
das
adc
pop
fwait
xchg
pop
jno
add
lds
jp
pusha
stos
in
sbb
iret
sbb
imul
test
push
into
pop
or
int
cs
or
jecxz
push
adc
add
mov
ror
(bad)
and
jno
ret
out
push
push
inc
jbe
je
add
cdq
mov
push
or
aad
(bad)
out
loope
sbb
punpcklwd
jbe
bound
xchg
or
adc
add
test
mov
outs
adc
mov
push
cmp
dec
add
popa
mov
cwde
test
test
sub
js
pop
mov
push
fdivr
sub
les
inc
or
mov
ja
sub
ror
pop
pop
mov
aaa
and
js
cs
outs
std
fmul
xchg
add
int
jbe
rcr
in
iret
das
ds
xlat
push
(bad)
cmc
in
sub
push
pusha
push
je
setl
mov
and
imul
out
or
loop
xor
xchg
imul
mov
push
xchg
pushf
push
out
or
outs
jmp
popa
ror
aaa
push
adc
loop
loop
arpl
es
sbb
cmp
dec
pop
(bad)
stc
pusha
mov
gs
movs
dec
sbb
ror
xor
xchg
dec
add
dec
or
inc
xor
cmp
popf
dec
and
pop
add
mov
or
ror
pop
push
mov
test
mov
outs
unpckhps
sub
xchg
pop
fild
outs
outs
mov
data16
jnp
add
jae
imul
xchg
jle
fstp
je
sbb
test
mov
(bad)
sbb
adc
jl
mov
or
fisubr
push
inc
xchg
mov
xchg
xchg
popf
adc
popf
fmul
shl
mov
clc
jne
xor
mov
into
or
jl
popa
imul
test
sbb
mov
sub
pop
mov
or
jge
ds
rcr
and
inc
push
push
or
arpl
and
or
and
push
push
or
lock
ins
lea
sub
and
push
push
xor
sbb
int3
adc
(bad)
lmsw
ror
and
out
ins
xor
mov
add
pop
sti
jg
pop
mov
jmp
sbb
push
sbb
(bad)
add
xor
and
(bad)
fidiv
sub
mov
mov
jmp
sub
pop
add
loop
adc
push
test
dec
jns
div
loopne
push
xchg
sub
in
call
add
sbb
or
outs
add
push
push
mov
mov
mov
jne
jo
neg
jo
dec
cmp
pop
stos
ret
loope
iret
mov
sbb
xchg
jge
aad
ret
or
mov
shr
test
popa
aaa
rol
mov
xor
stos
push
sbb
outs
dec
in
cdq
loope
jno
xor
push
lock
clc
sbb
or
in
add
inc
out
ret
pop
cli
jl
pop
or
(bad)
jbe
and
xor
inc
push
and
mov
adc
ins
xchg
dec
clc
test
push
inc
add
jmp
cmp
or
add
or
in
add
inc
adc
icebp
in
neg
movs
(bad)
and
mov
std
mov
dec
xor
mov
jmp
aas
xor
movs
adc
icebp
add
jbe
iret
push
push
cmp
inc
lea
daa
ror
push
inc
or
in
out
adc
adc
or
sub
jne
jle
call
imul
push
mov
jmp
mov
jmp
mov
cmp
inc
or
inc
cmp
mov
dec
loop
jg
je
dec
je
sub
pushf
or
jmp
dec
fdivrp
sbb
adc
add
loop
mov
adc
and
adc
cmp
data16
add
cmp
movs
inc
add
outs
add
ret
push
fmul
mov
clc
arpl
out
rol
pop
test
jle
fiadd
cmp
jge
(bad)
or
pop
jbe
or
jmp
xor
jg
je
mov
xor
mov
sub
test
outs
inc
xchg
popa
(bad)
mov
mov
or
mov
mov
or
loop
dec
xor
push
lea
movs
jb
scas
or
hlt
(bad)
out
adc
jo
arpl
fdivr
jb
or
or
pusha
mov
or
lods
jne
or
int
not
cld
hlt
mov
push
adc
sar
sar
add
inc
push
add
sbb
push
push
cmp
inc
jge
push
bound
dec
or
aaa
jmp
add
adc
je
jo
lods
push
xor
cmp
add
pop
mov
and
push
adc
sub
dec
push
add
das
add
loope
mov
lds
adc
sub
xchg
dec
dec
ja
shl
(bad)
fimul
xor
push
mov
push
sub
adc
mov
jne
dec
das
xor
inc
(bad)
cli
pop
js
(bad)
sbb
mov
xor
push
mov
shr
inc
sbb
dec
je
or
pop
mov
mov
shrd
ds
xor
in
out
dec
pop
xchg
daa
sbb
call
xchg
adc
push
mov
push
cmps
ins
sub
add
in
add
and
and
pop
add
jo
in
push
pushf
es
pop
test
retf
sbb
popa
push
aas
and
ins
pop
(bad)
stos
cmp
push
pop
adc
int
xor
rcr
in
test
loopne
cmp
in
aam
add
rol
push
repnz
cli
ror
pop
inc
xor
add
lahf
ret
pusha
and
out
mov
ja
jg
ds
mov
or
lock
cmp
je
cwde
(bad)
shl
push
add
pop
and
dec
jmp
lea
or
push
inc
clc
xchg
popf
inc
mov
xor
ficomp
jae
or
or
pop
ja
es
and
sub
sub
push
mov
das
xchg
shl
xor
(bad)
fdivr
neg
mov
mov
mov
sub
cmp
jne
adc
jmp
shl
and
in
or
cs
add
dec
faddp
inc
daa
mov
pop
ret
or
cli
iret
call
add
xchg
or
inc
or
test
aam
scas
sbb
shr
sub
mov
inc
inc
and
adc
pop
or
push
or
les
or
mov
pop
out
sti
dec
fdivp
fdiv
xchg
inc
js
inc
add
mov
jne
pop
xor
jns
(bad)
hlt
scas
inc
jl
jb
sub
test
out
out
sahf
dec
hlt
jmp
push
push
or
popa
cmps
int
add
scas
ror
push
xlat
ret
push
mov
push
aaa
cmp
leave
dec
iret
adc
test
mov
js
icebp
sub
loop
push
push
xchg
enter
and
mov
dec
push
fsubr
mov
adc
out
std
sbb
out
and
cmp
imul
push
and
inc
mov
lea
jp
int3
pusha
test
or
xor
sub
fbstp
aaa
mov
sub
add
out
xor
cmp
cmp
xor
mov
cmp
sahf
push
mov
shl
pop
pop
push
inc
daa
ds
add
or
sbb
add
rcl
in
sub
jp
setge
push
xor
pop
push
cmp
int3
adc
fcomp
mov
jmp
aad
xor
out
add
(bad)
ins
inc
pop
add
add
inc
add
pop
or
inc
push
inc
dec
dec
push
adc
loop
push
add
dec
or
dec
gs
imul
ficomp
push
or
push
imul
outs
jp
jns
outs
jo
gs
sub
jl
push
sub
outs
ins
xor
cld
sbb
fistp
pop
shr
inc
push
push
push
into
js
jmp
nop
nop
das
xor
push
xor
das
xor
das
enter
sub
das
sub
nop
cdq
sbb
das
and
data16
and
das
and
das
sbb
int3
fadd
das
sbb
cdq
mov
adc
sub
mov
push
pusha
stos
add
add
xlat
xchg
out
loopne
push
dec
test
in
add
mov
sti
jge
and
inc
and
and
dec
dec
push
push
and
and
pop
pop
pusha
and
and
push
and
and
add
nop
xchg
and
and
cwde
pushf
mov
and
and
and
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
add
clc
mov
add
mov
ret
aas
xor
out
push
push
mov
add
aas
inc
or
inc
dec
aad
xor
in
fsubr
mov
jle
adc
lahf
retf
mov
mov
sub
mov
add
stos
cmp
pusha
pop
add
push
add
add
fld
add
inc
pusha
and
push
adc
and
inc
pusha
and
(bad)
and
pushw
dec
(bad)
and
rol
pusha
and
lock
(bad)
mov
mov
out
mov
pusha
and
inc
pusha
jnp
push
mov
add
push
sbb
and
sbb
xor
int3
mov
and
mov
jge
nop
and
push
or
and
mov
mov
jmp
push
pusha
push
repnz
push
cmp
sub
push
shl
sub
test
push
and
imul
and
mov
add
popf
add
mov
jo
(bad)
push
ret
sub
jmp
push
jmp
fcom
and
push
sub
push
pusha
adc
push
imul
lea
xchg
sub
adc
push
xchg
or
adc
add
adc
xor
cmp
inc
scas
pop
loope
xor
(bad)
dec
pop
mov
mov
push
jb
ja
push
js
cmp
arpl
add
xchg
outs
dec
mov
push
data16
pop
add
push
add
test
fmul
inc
pusha
or
pop
ja
pop
or
xchg
push
push
xchg
and
or
les
push
push
dec
dec
das
and
dec
xor
repnz
cmp
add
int3
sbb
ja
dec
or
xor
cmps
pushaw
dec
mov
call
bound
mov
or
mov
ret
or
sbb
out
fiadd
jns
out
ss
adc
ret
jae
inc
push
popa
mov
push
test
add
aas
outs
cmp
or
push
aas
push
arpl
xor
sbb
add
jb
cmps
sbb
sahf
xor
into
jb
xchg
xor
arpl
add
mov
mov
out
loopne
adc
ja
push
aaa
inc
outs
dec
ds
aaa
sub
sub
sub
sub
mov
xor
jmp
pop
push
pop
outs
push
mov
inc
loopne
(bad)
push
test
cs
pop
mov
sbb
movs
ss
mov
adc
jnp
inc
and
mov
dec
jg
push
dec
pop
cwde
jnp
bound
jbe
push
and
cmps
xor
out
inc
jae
add
sbb
xlat
(bad)
pop
es
fidiv
dec
adc
stos
push
and
or
push
mov
and
pop
sbb
adc
or
inc
push
scas
dec
or
jae
cwde
and
jp
jae
xchg
addr16
and
nop
in
fbstp
mov
xlat
jl
pushf
sbb
jbe
lds
adc
lock
or
sub
add
shr
mov
ret
or
inc
hlt
es
or
iret
js
jecxz
dec
js
repnz
xor
xchg
xor
pop
jbe
add
loopne
dec
dec
dec
dec
dec
dec
push
dec
push
cmc
loopne
pop
test
les
pushf
pushf
pushf
mov
push
test
mov
mov
icebp
xchg
push
das
in
movntq
out
les
int3
fsub
sbb
dec
jae
cdq
mov
das
fs
xor
inc
sbb
int3
or
jnp
or
sub
push
repz
add
jns
jl
dec
adc
adc
cmp
jo
mov
add
(bad)
fsub
dec
call
neg
int
mov
push
movs
movs
pop
push
ins
cmps
push
test
mov
push
mov
mov
scas
cwde
mov
mov
mov
mov
int3
xchg
(bad)
mov
scas
push
jbe
rcr
sub
cmp
jo
dec
ins
popa
addr16
push
push
out
dec
imul
pop
aaa
jae
and
jl
push
add
and
xchg
jo
mov
push
inc
call
add
push
inc
jne
and
test
int3
sub
ret
and
add
and
test
add
adc
sti
push
inc
dec
ja
gs
dec
xor
sti
fst
ins
add
adc
jae
push
fidiv
hlt
je
shl
inc
add
xor
mov
pop
pop
sti
data16
jne
imul
arpl
push
jne
mov
popa
fs
mov
dec
dec
adc
adc
push
push
fucomi
mov
fadd
add
pop
pusha
getsec
jno
sahf
data16
arpl
or
jo
mov
pop
xchg
mov
push
lahf
xlat
in
nop
push
enter
push
sub
in
jnp
dec
loopne
xor
cmp
out
sahf
out
test
sahf
(bad)
aam
hlt
add
or
repz
adc
sbb
cmp
repz
sub
and
into
xor
and
or
add
adc
fs
jo
xchg
jmp
ins
jbe
push
swapgs
icebp
pop
test
sub
ds
mov
in
pop
aas
cmp
cmps
ror
push
clc
test
sub
mov
int
shr
fsubr
lock
jmp
lods
mov
xchg
outs
dec
push
mov
hlt
adc
jle
je
mov
jne
push
aam
lock
inc
jbe
cmp
jge
mov
jns
test
js
mov
mov
sub
je
jp
cmp
fs
je
stos
(bad)
into
dec
add
adc
verw
add
sbb
adc
add
fs
test
cmp
std
mov
push
and
pop
test
mov
add
cmp
aad
pop
xor
push
inc
imul
dec
add
scas
popf
and
pushaw
push
dec
xor
add
mov
push
xchg
fsubr
mov
dec
fsub
pusha
out
lea
cwde
push
test
adc
mov
ds
test
cmp
stc
xor
mov
rcl
rcl
push
and
cwde
push
pushf
mov
push
jo
jbe
test
pop
push
mov
add
and
or
add
cmc
and
cld
pop
add
mov
iret
fmul
cmp
add
inc
dec
fs
add
cld
sbb
pop
xchg
and
pop
or
out
out
sbb
xchg
ins
cmp
ja
dec
loope
inc
js
arpl
mov
aaa
dec
ss
push
jno
xchg
loopne
jo
pop
dec
add
and
sub
fcomp
ins
outs
fs
cmp
or
jle
xor
add
(bad)
add
adc
inc
sub
inc
or
pusha
and
lock
cmp
rol
test
je
mov
mov
mov
jo
fidivr
cmp
xchg
scas
in
scas
lock
jg
jnp
adc
mov
mov
rcr
inc
mov
mov
loopne
sbb
jae
mov
mov
xor
jbe
jge
mov
mov
add
shl
adc
or
inc
adc
outs
shl
lock
je
add
mov
in
mov
loopne
ficom
mov
mov
test
shr
mov
push
inc
clc
push
cld
sbb
movs
push
pop
dec
mov
test
call
mov
ss
test
jl
inc
xor
mov
daa
mov
add
xor
cmp
pop
pmaxsw
fistp
adc
rol
or
or
inc
adc
add
dec
jne
movzx
pop
pop
fdiv
pusha
mov
mov
adc
(bad)
pop
mov
add
cmp
or
add
push
mov
call
push
adc
in
paddd
or
hlt
inc
mov
adc
outs
data16
cmp
xchg
sub
out
add
call
jne
ror
push
pop
pop
pusha
mov
loopne
sbb
push
into
inc
and
sub
test
mov
push
mov
push
movs
xchg
xchg
adc
loope
pop
jge
or
je
aaa
and
adc
xor
xor
and
adc
mov
dec
lahf
nop
sbb
out
call
push
bound
cwde
ss
cwde
jg
push
out
jo
rcl
and
ins
sbb
sahf
jnp
mov
and
push
adc
and
mov
mov
sub
sti
ret
add
and
fnstsw
xchg
test
adc
mov
cmp
inc
mov
adc
mov
je
push
in
add
add
inc
or
fcom
ja
cmps
mov
test
test
sbb
(bad)
mov
add
sbb
or
cmp
cs
sti
setle
add
push
in
in
ficomp
mov
sub
js
mov
retf
hlt
aas
sete
sbb
pop
mov
or
push
mov
mov
or
pop
das
sbb
jne
xchg
lock
mov
jl
push
sub
push
enter
push
cmp
jo
ret
std
mov
or
push
pop
mov
add
fstp
pop
jg
xchg
dec
cmps
out
cmp
cmps
cmps
mov
cli
test
fld
data16
push
fiadd
or
cld
fistp
data16
push
retf
loop
xor
jbe
xor
xor
cmp
mov
adc
sub
push
adc
push
push
mov
dec
or
out
adc
pushf
sbb
or
in
push
je
inc
dec
inc
push
jge
mov
(bad)
movs
cmc
stos
xchg
xor
adc
je
shl
and
je
mov
push
cmc
imul
into
(bad)
jne
(bad)
mov
pop
sar
sbb
and
jo
add
fild
and
pop
and
and
(bad)
call
inc
or
mov
neg
fisttp
mov
cmp
jle
jmp
add
outs
fistp
or
jge
or
inc
or
jg
xor
or
sbb
xor
pop
or
sbb
jp
push
stos
jmp
or
mov
push
and
imul
cld
mov
pop
es
mov
aam
push
sbb
push
and
mov
shl
cmp
lods
ins
es
push
xor
inc
repnz
push
dec
push
rcr
mov
xor
dec
div
ss
push
mov
rcr
rol
loope
cmp
mov
inc
inc
dec
sub
sub
push
outs
xor
inc
cld
enter
sbb
fild
mov
jnp
rcr
xchg
sub
loop
add
xor
into
mov
ins
xor
or
or
sbb
icebp
ret
add
cwde
mov
inc
sbb
(bad)
in
sbb
inc
adc
ret
push
xchg
clc
fisttp
dec
add
adc
and
ss
adc
mov
or
mov
pop
pop
js
adc
lock
shl
dec
ins
and
jle
sbb
dec
cmp
dec
mov
and
into
loop
inc
clc
xor
add
aas
ficomp
add
aam
(bad)
imul
or
xor
ss
mov
inc
xor
sbb
jnp
jb
inc
mov
dec
mov
add
dec
dec
js
push
int3
sub
xor
sub
ins
pop
ror
in
push
add
sub
mov
or
push
mov
mov
dec
cmp
fmul
push
adc
add
jmp
pop
jae
outs
dec
ins
sub
cs
pop
les
jg
sub
lea
mov
movzx
xor
and
outs
stos
imul
adc
or
and
push
jg
aad
inc
adc
sub
dec
jne
or
adc
pop
jle
xchg
xchg
add
fadd
dec
pusha
pop
mov
fs
inc
adc
rcl
je
dec
ror
cvtps2pd
pusha
push
push
add
or
call
stos
sub
int
add
icebp
cld
pop
sahf
push
stos
add
jmp
jmp
test
js
mov
add
adc
push
gs
sub
and
push
sub
cmps
aam
add
lods
loop
sbb
add
sub
mov
xlat
scas
inc
add
add
test
mov
sub
jbe
jmp
pop
inc
pop
pop
add
rcr
inc
mov
lock
inc
jno
dec
(bad)
dec
std
fcomp
lock
dec
cwde
dec
cs
mov
push
jp
xchg
jnp
mov
cmp
adc
add
push
int3
dec
sbb
rcr
and
jne
jb
fimul
push
stos
jle
pop
pop
and
clc
sbb
nop
mov
rcl
jmp
js
mov
fs
scas
mov
pop
adc
add
inc
jbe
sti
dec
mov
pop
sub
mov
cmp
jge
mul
out
dec
mov
mov
pop
add
xor
inc
adc
or
xor
lds
ins
pop
loopne
rcr
(bad)
cld
jne
xchg
cmp
add
dec
sbb
sbb
add
je
add
add
in
push
sub
sbb
jg
nop
jl
jp
add
add
test
mov
or
add
mov
xchg
adc
mov
jb
cmp
mov
push
sbb
mov
sti
sbb
push
add
sahf
xchg
je
mov
pop
movzx
je
xchg
out
sbb
mov
fisttp
ret
test
inc
jl
stc
mov
sub
adc
imul
push
xchg
mov
(bad)
and
jbe
push
jp
and
jge
push
outs
inc
push
push
or
shr
(bad)
inc
shr
add
add
add
out
mov
adc
inc
push
and
and
jmp
or
fisubr
sub
bound
(bad)
mov
sub
leave
in
dec
mov
loope
jb
movs
inc
or
xor
mov
sub
inc
inc
cmp
push
inc
and
sub
rcl
push
cwde
nop
add
dec
ret
aas
shl
les
pcmpeqb
in
pop
jl
mov
add
pusha
push
shr
add
adc
ret
je
mov
sbb
mov
inc
inc
pop
mov
adc
or
retf
pop
mov
loop
ins
(bad)
xor
mov
(bad)
jl
ja
mov
pop
dec
inc
adc
fdiv
js
fistp
loop
cmps
inc
adc
push
or
ss
(bad)
neg
mov
inc
or
sub
pop
adc
pop
adc
pop
mov
std
cli
out
mov
das
push
in
sub
shrd
jg
cmp
jge
cli
clc
xor
ret
pop
fisubr
pop
jle
jne
cmp
jne
inc
inc
mov
inc
sbb
jne
mov
shl
mov
or
dec
repnz
mov
adc
adc
mov
aad
fnstcw
call
je
dec
adc
and
or
inc
sub
int
nop
popa
dec
sbb
or
add
call
ret
inc
rol
jge
xor
sub
cwde
sub
inc
jnp
or
mov
cmc
cmp
mov
ins
cmp
or
enter
mov
ss
mul
add
and
and
ss
aas
movs
repz
and
aad
or
in
(bad)
outs
mov
sub
and
add
fwait
das
adc
or
inc
or
cmps
xor
js
mov
sub
mov
and
add
ret
not
cwde
jmp
pop
push
cmp
arpl
and
mul
into
inc
xor
or
loope
cmp
push
dec
pop
xchg
or
mov
mov
push
jge
or
adc
mov
cmps
mov
(bad)
shl
or
xchg
je
or
push
ja
ja
mov
icebp
pop
mov
enter
push
loopne
out
test
sbb
out
repnz
mov
sub
mov
jmp
inc
xlat
call
je
test
cmp
jne
cmp
int
mov
shl
sub
push
mov
add
cmp
icebp
pop
or
cmp
je
mov
mov
and
not
je
les
and
xlat
das
jl
and
jne
inc
pop
pop
xchg
daa
dec
fwait
pop
adc
dec
pop
sbb
xor
cmps
aad
test
sub
ss
hlt
ret
cmp
dec
in
dec
mov
sub
xor
dec
fsub
rol
pop
add
push
loop
add
mov
inc
lock
xor
sub
movs
js
dec
sbb
mov
adc
cmp
and
loop
mov
xchg
xchg
loope
dec
xor
rol
hlt
addr16
push
sar
rcl
pop
sar
xchg
jg
jnp
leave
rol
in
in
outs
rol
jnp
mov
xor
gs
adc
xchg
xor
call
ret
lahf
loope
in
sbb
out
lahf
adc
rcr
mov
pop
or
add
divps
add
push
add
jbe
inc
mov
pop
jne
adc
or
dec
mov
sub
cmp
(bad)
sub
mov
mov
lods
mov
out
aam
mov
jp
jne
xor
jb
mov
jae
dec
cmc
inc
mov
add
rol
sub
adc
lods
loopne
mov
ror
xchg
cld
sub
cmp
mov
add
jo
sbb
(bad)
sbb
push
int3
imul
arpl
mov
iret
jne
push
add
push
daa
mov
sub
or
jmp
push
mov
int
dec
test
shl
(bad)
in
in
test
popf
jae
in
adc
sub
jne
xor
das
xor
xor
jne
scas
or
xchg
dec
icebp
rcr
push
dec
lds
inc
push
adc
cmps
cmp
xchg
dec
mov
adc
pusha
push
add
pusha
outs
ret
jg
movs
cmp
mov
pushf
pop
mov
sub
sub
call
push
jno
cdq
enter
es
es
stos
push
add
inc
sbb
jle
inc
adc
xor
pop
fst
and
push
pop
or
out
aas
loopne
mov
les
cmp
je
(bad)
mov
int
inc
je
or
push
pop
cwde
(bad)
sbb
stos
sbb
jno
jno
jmp
test
data16
cmp
inc
out
inc
sub
add
inc
cmp
cmp
dec
xchg
dec
sbb
adc
cli
std
in
dec
and
enter
and
jo
cmp
mov
push
push
cmp
push
sahf
xlat
divps
jae
dec
push
inc
sbb
mov
lea
mov
xchg
push
dec
dec
inc
push
cmc
sbb
test
outs
imul
movs
sub
push
pop
and
inc
sbb
scas
dec
cmp
out
or
imul
cmp
jg
and
or
fld
push
mov
sub
push
or
jmp
xchg
xchg
inc
ror
jmp
add
ror
cmp
lea
add
and
xchg
sbb
shl
jl
push
mov
xor
xchg
sbb
repnz
inc
cmp
fs
add
ret
jae
sti
add
add
jmp
sub
(bad)
push
pop
mov
push
push
push
inc
dec
or
inc
movs
pop
mov
xlat
jmp
cmps
stos
xchg
inc
inc
stos
in
adc
push
shl
add
sub
pop
or
lods
inc
xlat
inc
mov
xchg
push
mov
mov
pcmpeqw
xchg
mov
aas
aam
mov
fisubr
test
inc
wbinvd
xchg
xchg
inc
sahf
lea
ror
cmp
ficomp
dec
je
sar
sahf
push
pusha
sbb
add
jg
outs
mov
and
jl
sub
xchg
loopne
cmp
ins
push
int
dec
xchg
add
out
stos
cmp
jae
std
jmp
notrack
mov
sub
fisttp
aaa
lods
sub
lock
jge
push
cmp
dec
ins
add
pop
outs
sub
mov
dec
out
or
or
inc
js
mov
test
cs
dec
fidiv
sub
jo
jo
or
sbb
cmp
jne
std
dec
mov
sbb
popa
mov
cmp
adc
js
xchg
pop
data16
inc
xchg
xchg
(bad)
sbb
sysexit
sub
and
rcl
add
mov
push
mov
mov
ret
cmp
jge
pop
loopne
adc
pop
jo
icebp
cmp
xchg
rol
mov
cld
cmp
jl
add
hlt
jbe
in
xor
je
into
cmp
into
mov
inc
dec
pusha
add
pop
push
fbld
and
mov
arpl
test
(bad)
(bad)
adc
or
add
fs
or
jne
mov
test
adc
(bad)
cmp
ja
push
xor
rcl
push
out
jae
add
sub
inc
dec
pop
and
pusha
ss
adc
or
loopne
call
mov
dec
jne
push
and
add
push
js
cmp
lds
add
adc
movs
xchg
loopne
mov
pushf
mov
fild
in
enter
jb
mov
cmp
jne
xchg
mov
loop
movs
add
sub
(bad)
jbe
pop
ja
add
mov
xchg
cmps
sub
stos
inc
xchg
sub
ret
cmp
out
cmp
jbe
push
xchg
jae
cmp
jbe
mov
sub
cmp
or
rol
mov
mov
inc
mov
sub
sub
xor
sbb
fdivp
dec
inc
adc
or
js
jne
mov
jl
mov
call
adc
js
push
add
xor
jl
das
js
mov
unpckhps
add
and
(bad)
retf
out
push
rcl
aam
dec
adc
adc
sahf
mov
lds
ror
dec
adc
adc
jbe
pop
push
test
add
sbb
adc
and
push
jp
push
cwde
inc
mov
xlat
stos
jmp
fsubr
outs
push
icebp
and
lods
ret
inc
lods
sub
or
or
mov
add
ret
cwde
jo
rol
fsub
xchg
push
scas
sahf
add
fdivp
pushf
js
retf
sub
pop
popa
push
and
ret
jmp
sbb
(bad)
jge
dec
inc
xchg
and
push
add
cdq
cmps
ficom
push
stos
cmp
sub
stc
inc
and
not
xor
pop
xchg
sub
inc
loopne
pusha
shl
cmp
and
pop
add
retf
retf
call
int3
popaw
push
mov
sub
pop
mov
ret
call
sbb
enter
jp
xchg
add
pusha
aam
cli
daa
cmp
or
test
mov
fnsave
push
pusha
scas
jno
jmp
sbb
adc
or
push
and
sbb
xchg
shl
test
out
(bad)
mov
movs
jge
pusha
push
in
mov
jmp
adc
sar
mov
mov
pop
loop
ret
xor
cmp
fiadd
mov
push
sub
jo
sub
ja
push
in
xchg
push
jmp
inc
xor
xor
clc
xor
jmp
dec
sub
pop
sbb
mov
mov
add
not
sbb
rcr
xchg
add
sbb
leave
jo
xor
pop
mov
xchg
and
mov
xbegin
int
add
ds
push
xlat
(bad)
xlat
mov
je
not
jecxz
push
jp
sbb
aam
add
call
popa
movs
pusha
sub
enter
sbb
xor
dec
cmp
lock
pusha
xor
lds
imul
and
imul
js
jo
fs
je
xor
inc
jecxz
push
inc
js
xchg
leave
(bad)
hlt
push
aaa
or
dec
syscall
ja
ja
sub
or
mov
(bad)
shr
or
mov
clc
cld
pop
dec
and
cwde
cmp
adc
push
inc
into
daa
out
or
scas
xor
sub
mov
sub
ins
inc
push
cdq
aad
ja
sbb
ins
js
jne
pusha
push
mov
push
inc
or
or
test
movs
in
data16
inc
and
and
lock
adc
rcl
fs
and
cmc
adc
add
das
and
sbb
shl
inc
push
add
xor
fdiv
mov
pop
dec
inc
and
mov
dec
and
push
pop
dec
or
pop
xchg
imul
push
(bad)
xchg
xchg
pop
jo
mov
xchg
fimul
je
cmp
jne
adc
inc
pop
xchg
fist
dec
ins
inc
fdiv
cmp
jne
sysenter
xchg
xchg
xchg
xchg
sub
sbb
pusha
imul
mov
sub
or
shr
xor
jne
sub
daa
call
call
in
sti
add
pop
es
push
and
add
or
mov
adc
fdiv
in
or
sub
jo
mov
xchg
and
or
adc
mov
push
dec
or
mov
je
lds
je
in
aad
or
or
cmp
movs
mov
add
add
inc
add
or
fild
sbb
mov
add
push
imul
adc
sbb
add
les
adc
retf
mov
iret
dec
sub
sub
lea
cmp
jl
pusha
push
adc
add
mov
adc
pop
pusha
or
out
or
dec
sub
sub
jle
daa
xlat
pop
js
push
repnz
je
jg
jmp
das
fadd
neg
mov
sar
inc
push
xor
loope
sti
xor
(bad)
adc
jl
or
in
mov
xor
pop
mov
cmp
je
dec
fmul
outs
jb
(bad)
dec
xor
push
jmp
inc
or
mov
cmp
test
mov
adc
lods
mov
into
jge
cmp
cli
xor
int3
retf
outs
(bad)
loopne
lods
add
and
and
jo
test
adc
jbe
dec
cwde
dec
(bad)
loope
or
sub
push
add
and
lock
jo
jmp
mov
dec
das
push
xor
push
and
loope
xor
inc
xchg
clc
or
inc
std
add
add
sbb
(bad)
mov
dec
cmps
push
or
push
add
scas
aad
or
ret
inc
lock
mov
sar
mov
out
clc
pop
mov
cmp
jg
and
add
cmp
jbe
icebp
fbstp
mov
and
cmp
jecxz
pop
cmp
(bad)
mov
rol
iret
pop
mov
imul
push
rol
lock
or
jl
sbb
add
add
pop
sbb
xor
(bad)
cmp
sub
and
shl
test
je
mov
lock
jns
adc
push
sub
mov
xor
and
pop
loop
or
push
(bad)
dec
pop
add
clc
dec
test
cmp
jb
or
repz
xchg
push
pop
fnstsw
dec
sbb
fnstsw
dec
jmp
ret
jnp
cmp
dec
cmp
call
loopne
add
pop
sub
dec
ror
retf
sub
xchg
ror
test
fcmovnu
data16
jne
mov
add
push
sub
rol
push
or
mov
aad
out
je
and
or
shr
and
cmp
add
shl
inc
mov
cmp
rol
add
fild
sbb
push
add
inc
and
pop
mov
or
lock
(bad)
adc
and
xchg
ss
sbb
cmp
mov
add
push
adc
and
xchg
and
repz
xchg
and
daa
stc
xor
dec
retf
js
adc
jl
xchg
and
fcomp
xor
iret
shl
cmps
sub
int
repz
retf
xor
sahf
out
jl
xor
iret
cmp
out
fsub
jmp
or
pop
or
(bad)
adc
mov
xor
add
int
jp
dec
mov
mov
add
call
(bad)
cmp
fdivp
inc
or
je
cmp
pop
mov
inc
pop
push
add
inc
mov
lea
mov
test
loopne
inc
shr
(bad)
push
push
sbb
sub
xor
dec
clc
mov
push
jno
pop
clc
fmul
add
add
xor
add
lods
add
push
or
ret
iret
rcr
adc
jmp
fisub
(bad)
xlat
sbb
sbb
add
loope
out
aas
aas
aad
jg
shr
sub
mov
loop
ret
clc
fcmovu
push
fdiv
test
mov
sbb
push
mov
jp
sbb
sbb
sbb
fmul
adc
scas
xor
jae
and
mov
pop
mov
retf
add
or
and
adc
loopne
ret
cli
xor
cmp
je
adc
pop
outs
push
adc
xor
xchg
pop
add
inc
sbb
movaps
mov
sub
(bad)
lea
lds
xor
mov
push
add
rcl
or
leave
pusha
cmp
inc
push
adc
xor
and
shl
mov
pop
and
or
jno
lods
test
mov
fnstenv
mov
lea
cdq
cmp
sbb
mov
push
push
sbb
sub
cmp
xor
sub
popa
and
pusha
jo
aaa
clc
std
sbb
fcom
add
out
dec
stos
inc
push
pusha
add
mov
and
std
retf
lds
clc
ins
add
outs
or
mov
mov
adc
cmps
pusha
call
add
lock
lods
fcom
adc
xor
(bad)
cwde
adc
add
jmp
xchg
pop
sbb
inc
push
jp
mov
pusha
je
stc
repnz
cli
jnp
xchg
push
shr
bound
jbe
and
jmp
xor
hlt
js
inc
jnp
clc
and
inc
fmul
or
pop
gs
ss
cld
dec
push
add
xchg
loopne
add
add
pop
fiadd
test
mov
fimul
pop
push
cdq
retf
push
retf
and
ins
sbb
es
push
push
sbb
outs
aam
and
xchg
jbe
mov
inc
inc
and
mov
or
mov
jge
cmp
shl
gs
cld
arpl
add
loope
loopne
sbb
or
ret
cld
inc
movs
sar
ss
jg
push
push
or
push
or
retf
imul
cmp
or
pop
push
or
cwde
cmp
xchg
dec
adc
xor
ins
cmps
or
add
pop
lds
mov
mov
xor
sub
cmp
sub
xchg
aad
mov
push
clc
or
add
dec
sub
push
fwait
dec
adc
xchg
mov
pusha
add
add
(bad)
sahf
push
push
fild
(bad)
(bad)
outs
shr
and
adc
adc
or
mov
sbb
enter
fidiv
push
mov
shl
or
dec
shl
test
push
lahf
les
jbe
out
or
shl
or
mov
ja
jns
dec
cmp
add
lods
jno
cdq
mov
add
push
pop
push
mov
sbb
push
jb
sub
pop
sbb
mov
mov
push
add
mov
or
sub
jb
je
dec
je
add
jmp
cmps
pushf
add
cmp
inc
clc
shl
jne
sub
sub
fisub
xor
sbb
rcl
and
adc
or
mov
pop
mov
bound
aam
popa
xchg
and
add
(bad)
cmp
pusha
cs
call
inc
adc
ror
leave
(bad)
lods
inc
mov
dec
mov
push
aaa
jno
inc
push
adc
xor
pop
test
xchg
cmp
call
out
aaa
bound
(bad)
je
cmps
aad
test
mov
pusha
les
out
aaa
rol
or
iret
sbb
iret
push
adc
add
sbb
inc
fadd
inc
fs
add
xor
cmp
push
into
push
es
add
mov
sub
adc
jbe
les
aam
aaa
xchg
aaa
mov
add
or
popaw
mov
retf
cmp
stos
mov
repnz
out
add
push
cmp
jb
jmp
inc
inc
mov
adc
lea
mov
hlt
push
mov
lea
or
mov
mov
push
push
lea
imul
xor
add
adc
mov
and
aam
lock
and
(bad)
cmp
pop
push
dec
mov
test
xor
pop
xchg
inc
loope
lock
xlat
call
jmp
rol
mov
inc
test
and
xlat
dec
mov
les
aad
movs
sti
fwait
dec
push
cmp
jne
jmp
stos
inc
shl
mov
add
cmp
jb
or
add
or
icebp
add
dec
add
shr
push
and
fcmovb
aam
cld
fcom
shl
enter
test
ror
(bad)
ds
add
adc
ret
xchg
or
sbb
add
sti
cmp
je
fiadd
inc
leave
in
adc
push
cmps
outs
lods
sbb
inc
or
mov
add
cmps
js
add
ret
lahf
cmp
cld
jmp
jmp
jns
or
popf
int3
inc
push
loopne
pop
inc
aas
mov
xor
mov
sbb
sub
sbb
es
cmp
push
aas
cmp
dec
je
(bad)
in
arpl
sub
jmp
sub
pop
push
push
jbe
pop
nop
pop
bound
or
mov
push
sti
das
push
rol
add
push
push
movs
dec
cwde
add
cdq
lods
cli
mov
push
adc
sbb
adc
jge
mov
jb
(bad)
clc
mov
push
cmp
fimul
mov
lea
mov
std
inc
adc
push
adc
cmp
call
js
push
push
(bad)
lock
fs
push
hlt
ret
shl
ret
mov
ja
and
ret
lods
xor
cmp
ret
ret
cmp
ret
cmp
lea
cli
jle
inc
loopne
jo
loopne
fcomp
in
dec
push
cmp
jl
add
mov
mov
std
hlt
mov
add
enter
(bad)
mov
xchg
push
xlat
int3
mov
add
add
xlat
cmps
dec
add
xchg
fld
inc
fld
mov
mov
das
xchg
pop
rol
xchg
sbb
loopne
das
mov
mov
rcr
pop
and
pop
movs
xor
add
mov
scas
xor
shl
jmp
fwait
jnp
hlt
dec
mov
imul
add
xor
dec
pop
add
add
loopne
retf
fldcw
mov
ds
enter
jo
imul
sti
and
xchg
sbb
pushf
and
mov
aaa
sub
adc
or
retf
sub
mov
lds
(bad)
mov
add
inc
shl
pop
enter
rol
shr
sbb
adc
movs
add
cmps
dec
mov
in
inc
cmp
inc
xor
push
add
add
push
xor
xor
sahf
jno
mov
inc
xor
push
jae
sub
jb
pop
fs
xor
push
rsm
cmp
or
dec
jmp
push
sub
inc
sbb
add
in
into
nop
lea
inc
mov
inc
mov
retf
call
cmp
pop
or
add
sar
or
inc
mov
push
int
inc
call
mov
repnz
ror
add
push
add
mov
fldenv
xor
sbb
mov
pop
and
call
ficomp
mov
jmp
and
jecxz
(bad)
jmp
xor
(bad)
in
sbb
fucomi
cmc
and
loope
ins
xchg
fidiv
pushf
inc
(bad)
pop
in
rol
push
jo
push
sbb
je
bound
mov
pop
jb
inc
or
mov
ins
and
and
inc
aam
or
push
retf
jmp
adc
cmc
pop
add
adc
sub
(bad)
test
xor
add
pop
ror
jp
inc
ret
rol
xchg
sbb
sub
test
jge
sbb
mov
je
outs
dec
inc
push
jo
ins
stos
adc
add
or
push
ss
push
jl
sbb
adc
xchg
aas
push
cld
add
mov
sub
in
add
push
in
push
mov
add
(bad)
push
loope
add
push
dec
mov
sbb
mov
popf
push
sub
aaa
push
sbb
call
mov
or
rol
mov
push
cmp
lock
jne
mov
rcr
adc
or
or
inc
sbb
inc
or
push
sub
push
or
sub
push
stc
jne
or
adc
aam
(bad)
add
mov
nop
or
int3
push
test
jp
sbb
add
xor
or
lds
cmp
es
cmps
outs
hlt
push
sbb
pop
aas
push
jge
pop
dec
sbb
xor
cmp
sub
sbb
jle
ins
mov
dec
mov
mov
jnp
cmp
xor
repnz
push
add
xchg
data16
rcr
pop
out
push
movs
and
add
push
jne
fwait
jle
out
and
das
popa
mov
fs
sbb
xor
and
cld
or
pusha
add
and
in
aas
lods
add
test
test
pop
pop
add
loop
pusha
or
aam
mov
je
jmp
movzx
(bad)
pop
ins
scas
scas
add
xor
add
jne
inc
jmp
cmp
jp
or
sub
clc
push
test
inc
cmp
jbe
add
retf
jno
inc
or
clc
and
add
sbb
dec
jne
cdq
xchg
cmp
jae
sub
mov
inc
adc
mov
dec
adc
pop
sub
mov
lea
jp
inc
shr
mov
cmp
imul
push
mov
test
jle
mov
out
mov
push
adc
add
sub
add
add
push
jle
cmp
clc
in
or
or
push
pop
mov
adc
pop
mov
loope
leave
cmp
in
cmp
sub
cmp
outs
dec
mov
mov
push
push
pop
retf
push
push
adc
jle
or
adc
popf
add
mov
sahf
rcl
inc
add
scas
aaa
inc
stos
sbb
je
(bad)
arpl
stos
push
adc
jb
push
jg
add
dec
push
push
pusha
inc
jecxz
or
fist
sbb
adc
ret
lea
ja
sub
inc
inc
adc
sar
shl
inc
or
dec
mov
frstor
or
call
out
sar
iret
add
add
int3
sub
test
sbb
lds
imul
aas
push
mov
add
(bad)
push
loop
aad
mov
add
in
mov
mov
clc
ss
mov
in
out
sbb
mov
test
push
imul
ds
popf
cwde
sbb
add
cld
add
sub
add
subps
mov
cwde
inc
neg
dec
mov
sub
mov
sub
sub
pop
lock
dec
fcom
jl
sub
retf
fadd
jae
jae
xor
adc
mov
out
aam
rcl
ret
int3
daa
mov
out
add
mov
and
stos
addr16
push
(bad)
sub
sub
fidiv
cwde
fadd
fucomi
or
fisub
dec
enter
mov
inc
call
fisttp
shr
sub
sbb
dec
clc
(bad)
mov
push
ret
mov
repz
shr
add
mov
jg
cmp
adc
sbb
mov
mov
push
pop
jo
push
xor
add
xor
sbb
adc
push
jg
pushf
mov
repnz
jae
ror
clc
jo
jbe
lock
mov
sub
sub
add
xor
dec
(bad)
cmp
inc
retf
sub
shl
jae
lods
mov
mov
dec
jne
mov
sub
jmp
sub
jbe
shl
loopne
in
push
dec
mov
repz
xchg
mov
jge
xor
pop
inc
xor
adc
ins
lds
test
mov
xchg
or
(bad)
push
ffree
or
sub
ss
push
lds
mov
push
int
sbb
add
xchg
adc
xchg
mov
jb
push
test
sub
and
fwait
cli
adc
adc
mov
dec
cs
and
jmp
jmp
jge
sub
jge
jge
(bad)
jmp
(bad)
or
and
mov
jae
popa
pusha
cmp
(bad)
aad
adc
cmp
jb
add
add
push
mov
mov
push
sub
adc
(bad)
out
in
jnp
test
jns
mov
lea
mov
mov
add
jmp
and
bound
xor
and
ds
add
jae
in
sub
add
popf
(bad)
sub
mov
and
test
cmp
mov
push
and
das
mov
xor
xor
lea
data16
je
ds
push
rol
pcmpeqd
ret
sbb
add
jae
sub
sti
dec
add
sub
inc
and
mov
aaa
xchg
mov
ins
ret
hlt
dec
mov
cmp
or
push
inc
aam
inc
pop
add
test
jge
mov
cmp
xor
mov
aad
(bad)
inc
(bad)
cmp
mov
add
sub
cmp
sbb
sbb
faddp
and
xor
push
cmps
ret
test
fidivr
sahf
push
idiv
or
pusha
push
add
push
hlt
jb
dec
imul
loop
jae
lock
je
sar
leave
mov
retf
jge
enter
and
adc
mov
arpl
je
outs
sbb
inc
push
xchg
(bad)
mov
xchg
xchg
out
mov
add
jb
popa
scas
lods
jne
lods
sub
js
call
mov
ret
dec
test
sbb
ins
sbb
inc
jl
jg
xchg
jb
je
jmp
outs
cmps
call
les
jmp
adc
lods
mov
arpl
mov
enter
mov
cli
dec
sub
les
test
jl
scas
pop
sbb
out
div
mov
fadd
push
or
pop
jbe
call
jne
cmp
aaa
sbb
sbb
jne
outs
cmovle
and
std
das
movs
sbb
adc
adc
cld
mov
mov
(bad)
sbb
push
xor
jge
(bad)
retf
mov
sbb
push
add
mov
mov
mov
mov
pop
int3
dec
or
xor
dec
pusha
or
movlhps
test
mov
mov
cmc
out
jne
movs
clc
cli
adc
push
loopne
mov
in
out
add
cmp
mov
mov
push
adc
jae
add
jmp
pop
in
stc
adc
outs
retf
dec
and
repz
ss
add
pop
ror
add
dec
retf
jo
(bad)
sub
sbb
xchg
(bad)
fstp
add
inc
jbe
pop
or
cmp
xchg
mov
pop
inc
in
sub
fmul
sbb
mov
lock
mov
loopne
add
jl
or
retf
jmp
xchg
pop
pop
movs
sub
mov
or
add
ret
dec
ss
repnz
pop
rcr
sub
(bad)
fnstsw
fmul
mov
adc
push
mov
pop
mov
add
push
sbb
sub
lock
add
sti
cld
add
sub
jne
retf
loopne
in
je
or
icebp
mov
xchg
mov
aam
cld
icebp
and
mov
add
inc
rol
inc
and
(bad)
lea
adc
push
inc
add
int3
lea
popf
sbb
sbb
jnp
fsubr
lea
push
fdivr
or
sub
es
js
push
fmul
cmp
enter
xor
push
sbb
cmp
outs
enter
(bad)
nop
xchg
rcl
inc
loopne
inc
push
loopne
cwde
jae
cmc
das
cmp
jl
sub
mov
sbb
cdq
push
outs
sbb
cdq
lods
aam
rcr
mov
cmp
hlt
dec
push
je
and
nop
pop
pop
bound
pop
xchg
push
call
add
lea
and
mov
adc
clc
(bad)
pop
cmp
sbb
sti
dec
mov
jno
inc
cmp
jb
inc
dec
mov
das
jne
mov
cmp
cmp
pushf
clc
gs
into
mov
push
ja
push
or
call
hlt
mov
imul
adc
mov
jge
inc
psrld
movs
mov
loopne
or
pop
aam
pusha
shl
repnz
add
push
push
push
inc
mov
fdivrp
dec
inc
dec
or
xor
sub
jl
jl
add
mov
rol
jle
jg
push
fcomp
test
cld
gs
add
and
sbb
inc
shl
cmp
sbb
or
outs
mov
xchg
mov
or
sar
mov
adc
sbb
jg
push
outs
xchg
inc
mov
fdiv
data16
fs
icebp
sub
jge
xor
and
xor
pusha
jne
in
jle
mov
add
imul
shl
mov
sub
mov
test
dec
mov
add
push
dec
and
inc
mov
mov
or
mov
mov
push
adc
pop
inc
fadd
or
std
jmp
dec
dec
jo
add
cmp
cmp
into
mov
ds
sub
push
sub
jg
mov
clc
test
inc
das
div
sbb
sub
fisub
jne
js
xchg
mov
aam
cmp
push
cmp
aam
mov
cmp
jg
dec
je
repz
xchg
adc
xchg
in
pusha
lock
mov
bound
ds
fdivr
shl
jno
jo
fst
cli
lea
lock
sub
add
add
test
into
jb
inc
cmp
mov
movs
push
mov
pop
fidivr
jg
ret
sub
xor
push
stos
jne
cdq
sub
rcl
jbe
inc
inc
add
sti
(bad)
icebp
push
jle
mov
sbb
push
enter
adc
adc
xchg
pop
lock
jnp
dec
or
dec
out
ret
gs
add
imul
cmp
cld
inc
adc
push
hlt
mov
dec
mov
mov
(bad)
push
jmp
in
fs
inc
xchg
outs
jl
jmp
call
pop
add
and
pop
jae
mov
xchg
sub
cmp
clc
mov
inc
or
mov
push
ja
inc
cmp
add
add
mov
sar
push
(bad)
push
pusha
movs
push
push
add
inc
mov
xor
dec
es
cmp
pop
in
cmc
or
add
jb
pop
les
cmp
inc
test
lock
and
lods
mov
or
scas
pop
mov
mov
mov
pop
jg
test
pop
xor
xchg
fistp
cli
or
and
cmc
mov
cmc
adc
push
mov
dec
xor
cs
out
push
ret
leave
push
push
jne
adc
mov
pop
cmp
push
clc
dec
inc
mov
scas
call
fsub
push
add
cwde
test
jne
adc
scas
or
dec
jne
cmp
or
mov
push
fdiv
rol
sbb
or
add
(bad)
dec
test
lods
inc
mov
and
pusha
xlat
jle
mov
pop
cmp
add
pop
lock
push
add
mov
ins
clc
jbe
jl
jae
ins
sub
cmp
jg
sub
mov
cmp
push
(bad)
les
jbe
in
push
jmp
fsub
add
inc
lock
hlt
scas
retf
pop
xor
mov
jb
popa
movs
or
mov
jb
neg
adc
mov
xchg
ret
push
mov
jnp
dec
or
mov
dec
mov
xchg
ss
jle
cmp
jne
or
or
mov
sar
nop
jle
pop
popa
jnp
mov
push
cmp
mov
loopne
sbb
mov
pop
mov
jmp
or
inc
adc
sti
out
add
push
pop
mov
mov
xor
iret
push
mov
sar
pop
xor
inc
out
in
(bad)
mov
push
shl
xor
and
mov
lahf
(bad)
dec
jne
sub
sbb
test
push
aam
inc
mov
xor
in
sbb
call
shr
loopne
push
dec
xor
fs
xchg
mov
or
fdivr
add
mov
add
pushf
std
fdiv
ret
std
gs
dec
add
in
adc
rcr
inc
rcl
(bad)
sti
mov
xor
xor
jge
add
loope
shl
cmp
sbb
rol
xor
imul
mov
in
and
rcr
cmp
aam
scas
push
cdq
sbb
aam
leave
cmp
(bad)
int3
loope
cmp
int3
scas
mov
pop
enter
paddsw
les
(bad)
enter
enter
ror
or
ins
mov
cmp
rol
scas
cmc
inc
movs
enter
pusha
pop
adc
mov
push
pop
aad
repnz
outs
mov
ret
pop
pusha
pop
mov
stc
(bad)
call
mov
adc
mov
xor
and
jle
mov
sub
lea
mov
jnp
aam
out
dec
mov
or
loopne
loope
mov
clc
mov
cmp
dec
dec
dec
cmp
jge
lea
adc
xchg
add
rcl
out
cmp
sbb
das
sar
xchg
add
jb
add
dec
xor
jmp
mov
adc
inc
jnp
sbb
sbb
jo
and
(bad)
sar
pop
and
shl
out
popa
loopne
pop
push
shl
repz
sahf
imul
inc
adc
call
inc
sub
xchg
call
pop
and
sbb
cld
inc
jb
pop
leave
adc
xor
mov
sbb
cmp
jge
cmp
sub
clc
ins
jge
jb
mov
add
jge
js
xchg
add
inc
pusha
cmp
jmp
movzx
rol
imul
inc
jno
and
les
dec
add
cmp
inc
jo
dec
loopne
out
xor
inc
or
mov
fdiv
imul
push
push
xor
xchg
mov
punpcklwd
mov
sbb
shr
sub
xchg
(bad)
adc
lock
or
adc
data16
js
mov
add
sti
jno
hlt
sub
sbb
je
fstp
sar
add
mov
test
and
(bad)
mov
mov
pop
mov
cmp
jne
mov
call
lods
push
xchg
pop
mov
mov
rol
addr16
or
add
lea
sbb
inc
cwde
pop
fimul
jo
and
xchg
cmp
add
add
cmp
jb
mov
jmp
lea
cld
jg
mov
jb
cmp
je
adc
mov
(bad)
(bad)
mov
clc
adc
dec
dec
(bad)
mov
push
add
or
mov
mov
xchg
fild
push
add
mov
pop
rcl
xlat
or
sbb
(bad)
data16
shr
push
hlt
aam
add
mov
arpl
or
jle
or
inc
push
cs
adc
xchg
adc
push
jl
movs
push
loop
aam
cmp
pop
push
mov
out
pop
adc
adc
jmp
fisub
mov
cwde
movs
shl
mov
push
adc
or
cwde
or
pop
xchg
out
add
or
mov
jmp
inc
mov
inc
adc
mov
in
mov
lock
mov
or
mov
(bad)
jmp
mov
adc
mov
sar
nop
push
mov
lds
mov
xchg
rol
push
or
retf
pushf
mov
jb
jle
ss
add
or
add
adc
mov
add
pop
pusha
loop
mov
add
jno
mov
mov
push
mov
pop
inc
push
stos
push
dec
sbb
mov
xchg
jl
and
jne
xchg
mov
mov
jl
repz
add
lock
shl
ror
hlt
inc
xor
loopne
out
adc
mov
or
test
test
cmp
push
jnp
movs
in
adc
in
mov
dec
punpcklbw
jo
mov
test
mov
cmp
in
jmp
(bad)
sub
pop
xchg
add
fwait
fs
pop
pop
dec
ja
or
mov
and
inc
mov
cmp
lsl
push
mov
xchg
lahf
sbb
pusha
push
or
cs
icebp
add
push
xor
jbe
add
mov
or
fbld
loopne
or
push
mov
xchg
das
jno
mov
rol
or
je
and
inc
shr
cmp
pop
add
pop
jle
sub
push
call
adc
mov
scas
frstor
inc
pusha
mov
sbb
xor
test
mov
push
jb
and
shr
or
add
sub
or
add
jg
shr
aas
and
push
cli
inc
or
mov
pop
mov
mov
lahf
popa
ins
sbb
sub
sar
rol
pop
icebp
popf
fdiv
lahf
(bad)
mov
mov
test
aam
inc
dec
pusha
add
jle
pusha
and
inc
imul
adc
les
and
jge
add
imul
push
stc
dec
adc
push
mov
mov
out
sub
ds
mov
daa
push
inc
or
push
adc
xlat
sar
pop
mov
pop
not
pop
and
push
pop
in
addr16
add
not
push
leave
mov
or
jmp
xor
add
adc
add
call
sub
inc
sti
shr
and
rcl
or
adc
sti
jmp
lds
js
push
add
hlt
icebp
and
sub
mov
pop
out
rsm
shl
or
cwde
add
jbe
push
sbb
imul
pop
sbb
or
jo
pop
jl
push
add
leave
jne
cmps
ss
ins
mov
mov
mov
scas
shl
sub
enter
scas
dec
add
fst
and
add
add
sahf
and
push
sbb
or
or
fs
inc
or
push
sbb
push
push
jae
test
xor
adc
pushf
add
add
fisubr
mov
jo
mov
repnz
dec
inc
inc
scas
fdiv
fadd
scas
xor
mov
shr
fadd
xor
mov
ss
(bad)
aas
and
pop
or
dec
mov
cmp
xchg
fstp
mov
jmp
or
dec
pop
or
or
push
in
push
push
ja
fdivr
jmp
inc
addr16
mov
and
clc
sub
mov
mov
scas
mov
and
adc
es
call
iret
jo
shr
and
imul
sub
add
stc
sbb
sahf
ret
cs
ins
mov
or
outs
aaa
out
cmp
mov
xchg
cdq
push
push
mov
jno
and
mov
jne
xlat
jbe
mov
dec
push
aaa
mov
adc
add
movd
test
(bad)
jmp
mov
add
retf
scas
icebp
adc
cmp
pop
add
shl
or
out
mov
add
fisttp
pusha
sub
sub
sbb
sbb
fimul
push
ret
xchg
cmp
clc
sbb
shl
jne
(bad)
jg
pop
not
call
xchg
xor
lock
and
dec
jl
(bad)
dec
or
jne
cmp
pop
or
xor
pop
add
outs
mov
pop
out
out
lahf
add
or
cmp
mov
es
sbb
cld
xor
in
xor
mov
cmp
xor
es
add
dec
(bad)
lahf
test
jbe
add
mov
mov
(bad)
dec
jne
sub
out
xchg
xor
mov
mov
out
sbb
add
sahf
add
add
push
pop
mov
lahf
out
push
sbb
cwde
in
imul
call
xor
cs
in
sar
shl
cli
fld
(bad)
ror
mov
jo
rol
sbb
pop
sbb
test
add
xchg
sub
rcl
rcr
xor
arpl
in
add
rcl
jmp
mov
shr
pop
or
rol
lea
push
ret
or
ja
(bad)
in
leave
test
je
test
je
xor
shr
jecxz
jne
mov
out
dec
add
xor
jmp
fmul
pop
mov
lods
jmp
inc
add
ret
add
and
loop
xor
add
jne
push
inc
lock
xchg
jmp
jg
or
(bad)
fstp
mov
mov
or
mov
mov
add
inc
add
stc
repz
sub
loopne
sub
enter
push
movs
xchg
lods
loopne
lods
and
inc
aaa
and
cli
add
cmp
retf
sar
inc
sub
dec
bswap
adc
sar
xchg
clc
inc
jmp
divps
lea
fidiv
adc
test
outs
mov
(bad)
fs
push
add
pop
loopne
sbb
mov
aas
xor
mov
test
jmp
je
sbb
pop
jmp
jmp
inc
jmp
rol
dec
rol
inc
ret
aaa
int
jmp
jmp
or
mov
dec
pop
sub
xor
and
fmul
add
jecxz
xchg
mov
call
pusha
fist
xor
or
push
sub
xchg
scas
shr
in
lock
adc
je
sbb
lock
imul
cs
ret
xor
jo
stc
mov
cld
adc
rcl
mov
sar
(bad)
ins
rol
loop
pushw
fsub
loopne
fsub
mov
in
add
push
add
call
scas
push
adc
call
add
sbb
outs
repnz
push
hlt
lahf
pop
out
adc
daa
ss
mov
mov
add
hlt
or
aam
(bad)
loopne
ds
sbb
lods
in
ret
movsx
or
or
lahf
xchg
xchg
cwde
cdq
call
jae
dec
lods
pop
cwde
setle
fwait
dec
inc
movs
mov
inc
fadd
nop
stos
inc
add
push
mov
push
xor
or
push
push
push
mov
cmp
push
add
inc
dec
mov
jmp
ins
gs
jb
outs
jb
pop
sbb
xchg
std
jmp
adc
jae
gs
cs
imul
bound
add
jnp
shl
fcomp
cmp
pop
das
push
jo
mov
cwde
inc
add
xchg
or
sub
xor
sbb
push
add
inc
cmp
add
xor
xor
inc
add
call
or
push
add
mov
inc
pop
add
jb
popa
je
lock
lods
(bad)
jl
add
aam
add
gs
out
data16
pusha
add
dec
gs
popa
addr16
retf
sub
mov
or
lds
jnp
pop
imul
outs
xchg
js
jo
pop
loope
pop
sbb
pop
xor
xchg
popf
into
ret
sbb
jge
popa
not
pop
cmp
push
nop
pusha
add
xlat
mov
push
mov
loop
lock
sub
mov
push
mov
sub
xchg
push
xor
pop
inc
push
outs
shl
sbb
or
inc
imul
paddd
prefetch
loope
test
jo
imul
add
or
nop
mov
test
adc
push
or
lock
push
outs
pop
inc
push
xchg
adc
add
data16
shr
xor
inc
addr16
add
pop
and
add
ds
ja
jo
fisubr
push
sub
mov
out
mov
mov
or
cmp
jmp
adc
sub
sar
jns
shl
adc
and
call
inc
(bad)
dec
test
jle
mov
push
xor
sub
adc
add
add
mov
mov
add
test
je
and
stos
jae
shr
adc
mov
shl
mov
push
das
fs
mov
mov
mov
push
jne
aaa
imul
aaa
ret
imul
and
pop
and
mov
add
dec
retf
mov
inc
lock
or
loope
in
jbe
inc
pusha
mov
fld
push
xor
mov
jae
enter
mov
neg
jo
bound
mov
or
push
jge
and
mov
pop
jmp
jo
or
add
lock
into
add
mov
ror
add
test
in
inc
pusha
and
push
or
inc
mov
sbb
aaa
sbb
test
xor
adc
cmc
add
xchg
push
xor
leave
mov
mov
cmp
dec
nop
or
icebp
sub
ret
add
shr
mov
repnz
lock
dec
sub
idiv
and
mov
add
pop
pusha
mov
xchg
ins
pop
int3
push
out
test
mov
leave
popf
ja
fisttp
cmp
push
xor
xchg
mov
outs
push
lahf
popf
movs
pusha
popf
mov
sbb
leave
mov
and
xchg
int
js
jb
pop
sbb
mov
mov
xor
enter
jl
call
pop
push
push
jo
or
xor
inc
ss
icebp
push
mov
xor
and
js
sbb
xchg
push
dec
mov
inc
sbb
adc
inc
add
call
vmovups
call
and
jl
or
cmps
loopne
or
in
inc
jno
ffree
in
bound
xor
leave
cmc
sbb
add
add
dec
sbb
std
xlat
mov
inc
add
push
add
retf
xor
and
ja
(bad)
enter
les
jns
sbb
dec
and
dec
xor
xlat
sub
xlat
jp
mov
mov
add
mov
xchg
adc
adc
mov
rcr
mov
dec
outs
shr
push
sahf
loope
fs
mov
mov
and
scas
hlt
scas
push
into
fidiv
cld
add
outs
add
and
or
or
push
mov
mov
jno
(bad)
push
stos
and
sbb
xchg
retf
pop
aam
fcomp
fcomp
push
(bad)
in
sub
and
into
gs
add
add
xor
xor
imul
push
dec
push
add
je
push
outs
inc
out
loopne
int3
adc
push
arpl
inc
add
dec
(bad)
int3
in
je
imul
aas
cmp
cs
stos
add
data16
jbe
setnp
push
pushw
push
cs
sbb
or
outs
imul
mov
jle
pop
sub
int3
rcl
dec
sbb
pop
lea
or
pop
mov
push
add
stc
push
push
jno
cmp
push
jge
js
push
xor
inc
mov
call
fcmovnbe
push
dec
mov
push
lods
lock
adc
fiadd
retf
retf
sbb
add
sbb
sti
add
mov
pushf
call
pop
xchg
inc
sub
retf
inc
xor
push
(bad)
jnp
or
sbb
je
cmp
(bad)
loopne
cs
outs
fs
inc
aaa
mov
scas
push
or
xor
inc
mov
lock
inc
fdivr
inc
iret
fimul
add
adc
xor
xchg
xlat
push
shl
inc
cld
mov
cmp
ret
or
adc
sahf
nop
mov
enter
xor
xor
scas
aaa
scas
sbb
cmp
sar
xchg
(bad)
call
pop
add
movzx
mov
mov
int3
sub
shl
test
adc
or
xor
inc
add
push
(bad)
xchg
enter
push
shl
xor
mov
mov
and
push
ja
out
or
or
add
pop
jecxz
scas
mov
jg
jns
sub
jne
cmp
andnps
jmp
cs
lods
jb
jne
je
and
or
les
jp
loopne
push
push
push
and
mov
cmp
or
dec
ret
syscall
sub
or
jno
mov
loope
pop
cmp
sub
push
jge
mov
mov
or
or
into
cmc
mov
(bad)
and
sbb
cs
clc
jge
adc
push
adc
adc
add
cmp
mov
pushf
jae
enter
aas
dec
add
in
push
imul
push
(bad)
pop
loopne
in
add
xchg
push
mov
daa
cmps
or
pop
add
pop
fstp
push
lods
xor
jge
dec
(bad)
jl
push
xor
dec
sub
sar
sbb
adc
push
enter
cdq
dec
or
jmp
outs
fistp
push
call
cmps
addr16
pop
or
jo
pop
inc
dec
dec
jne
jmp
lds
dec
test
pusha
jb
cmp
sub
icebp
push
fcomp
pusha
mov
mov
dec
pop
retf
mov
xor
push
cmp
dec
lods
repnz
cmc
inc
mov
sbb
push
shr
or
out
sub
or
ror
xor
pusha
dec
cld
(bad)
sti
push
jne
inc
inc
jbe
bound
xor
adc
cld
cli
or
imul
fmul
inc
or
jmp
sbb
or
fadd
or
and
mov
test
push
or
sub
gs
adc
rep
push
fimul
bound
xchg
repnz
adc
xor
aas
ins
and
add
aaa
add
inc
call
cmp
sbb
cmp
inc
rol
(bad)
sbb
pop
xor
inc
std
xor
and
clc
(bad)
sbb
mov
and
add
shr
adc
movs
add
and
add
shr
out
fcmovnb
or
call
pushf
js
(bad)
(bad)
add
cmp
or
or
add
ror
mov
lahf
ds
sar
xor
sbb
and
fimul
push
js
ret
call
add
ja
mov
and
test
loop
out
jns
out
push
clc
add
in
jne
mov
pop
pop
jns
out
ds
dec
push
push
pusha
push
add
add
shr
push
enter
shl
mov
test
pop
lahf
sub
clc
mov
add
fcompp
call
js
ins
cmp
xor
loopne
out
pop
loop
(bad)
sar
js
sbb
sbb
in
sub
jmp
repz
push
pop
pusha
outs
iret
cmp
inc
pop
push
mov
cmps
or
nop
jp
nop
or
mov
mov
xor
jb
lods
sbb
jbe
adc
jno
std
pop
xlat
cld
or
adc
jmp
movsx
sbb
adc
lahf
std
fsubr
jbe
ss
sub
jne
add
sbb
mov
enter
inc
adc
cmps
xor
fst
pop
aas
push
add
sbb
mov
call
dec
ins
dec
fdiv
retf
mov
fnstenv
and
shl
sahf
jmp
and
jne
not
push
add
add
xor
not
je
mov
sar
popf
push
inc
mov
jmp
pop
xor
sti
out
aam
mov
adc
jne
and
lds
adc
inc
sbb
fs
xor
or
push
mov
adc
adc
add
scas
mov
loopne
pop
push
dec
push
(bad)
call
xor
je
jbe
inc
gs
jne
gs
ins
popa
addr16
(bad)
cmp
dec
pop
addr16
imul
int3
pop
pop
push
popa
add
or
arpl
(bad)
fwait
pop
xor
jae
or
pop
sbb
xor
pop
leave
add
out
cmp
push
mov
mov
outs
ins
add
or
push
outs
je
lods
loopne
mov
outs
inc
sbb
jbe
popa
jo
cmp
adc
outs
jae
inc
push
sbb
jmp
adc
push
ror
repnz
mov
push
fidivr
add
mov
push
push
jle
inc
lock
ins
cmps
add
jp
popa
ins
sbb
push
pop
arpl
out
cmp
or
inc
jne
in
sbb
pop
pusha
data16
jo
addr16
mov
xchg
and
call
ret
int
push
mov
out
test
add
xor
movs
aaa
dec
je
outs
ja
add
les
or
outs
and
sub
retf
pop
out
add
jnp
or
shl
pop
add
dec
fmul
cmps
ins
mov
btr
jge
mov
test
pop
xor
fld
jbe
add
cmp
aaa
inc
fs
or
jo
add
or
cli
fmul
(bad)
sbb
or
jae
push
gs
stos
mov
push
inc
push
push
sub
xor
or
push
imul
ja
xor
fs
mov
push
xchg
and
pop
sbb
and
cmp
clc
and
push
inc
ins
push
sbb
push
fsubr
push
scas
dec
or
or
mov
jo
or
je
sub
je
or
push
pusha
push
mov
adc
inc
mov
mov
dec
mov
mov
mov
shl
add
push
inc
cwde
push
ds
adc
sub
push
icebp
push
inc
ds
pop
push
mov
fwait
and
pop
cmp
sar
(bad)
add
push
pusha
fcomp
fadd
in
bound
add
push
clc
mov
das
into
ja
jns
push
xchg
dec
ins
(bad)
jne
or
inc
dec
inc
ds
loopne
inc
jb
gs
cmps
mov
popf
pop
sub
sub
dec
xor
jge
ret
inc
push
or
loop
loop
inc
mov
mov
push
jb
adc
fidiv
pop
push
sub
icebp
fucom
mov
jo
fs
stc
or
dec
mov
rcl
dec
pop
das
push
fcmovnb
sub
das
pop
xchg
xchg
loopne
lds
inc
sbb
imul
pop
add
mov
cmpps
xchg
(bad)
mov
adc
call
cmp
cli
dec
sbb
popa
push
mov
sub
add
inc
aas
mov
and
push
jbe
fs
pop
sti
adc
mov
sbb
movs
xchg
pop
pop
xchg
je
popa
ja
and
cs
sub
sub
mov
add
jnp
xchg
xchg
fdiv
outs
add
push
sub
mov
sbb
dec
jo
dec
test
or
in
or
cli
jecxz
out
inc
ret
sbb
mov
push
cdq
ss
inc
adc
push
xchg
mov
popa
inc
mov
inc
adc
daa
in
fld
jne
add
enter
adc
enter
enter
add
sub
add
pop
add
jae
lods
and
add
push
aas
imul
dec
pop
rol
fmul
inc
dec
pop
ja
dec
mov
jno
lea
or
shl
or
mov
imul
or
ja
inc
fndisi(8087
dec
pop
std
inc
lds
xor
adc
cwde
push
fstp
mov
or
test
cmp
jo
cmp
nop
fnstsw
push
push
add
repnz
fsub
div
js
mov
push
or
inc
push
out
inc
push
imul
push
push
inc
popa
inc
mov
push
addr16
ror
sbb
pop
jl
and
or
lds
ins
add
dec
ins
outs
xchg
push
xchg
ret
and
adc
mov
jge
mov
outs
jmp
inc
das
fwait
sub
push
arpl
nop
aas
in
pop
mov
(bad)
aas
inc
faddp
imul
imul
push
aas
jo
aas
mov
into
inc
mov
rcl
adc
or
add
jge
xor
aam
add
mov
ret
push
xchg
out
pop
in
sbb
in
ss
xchg
add
jg
pop
movs
xadd
into
mov
loopne
jg
stos
popa
xor
push
mov
into
sub
adc
js
rcr
sbb
sar
and
adc
or
and
mov
mov
es
xchg
das
js
jl
pusha
push
mov
inc
aaa
push
fst
es
es
mov
push
fs
js
pushf
cwde
xor
in
add
cwde
mov
js
arpl
push
jae
sub
add
or
inc
inc
outs
jbe
sbb
cmc
les
les
dec
push
sub
lea
mov
dec
daa
mov
imul
xchg
js
jmp
bound
ins
outs
jbe
scas
xlat
mov
repz
mov
out
add
add
xor
xchg
jnp
test
stos
inc
xlat
loope
cmc
and
daa
jae
in
jns
jo
shl
cdq
add
sbb
sub
mov
pop
fstp
xor
imul
or
mov
ins
nop
cwde
adc
push
scas
ins
dec
adc
pop
aas
lods
or
or
movs
push
ins
lds
cmps
or
rol
dec
pop
call
xor
pop
dec
dec
inc
push
stc
add
lahf
pmaxsw
push
jbe
dec
inc
inc
loope
add
outs
adc
cdq
dec
cwde
test
or
adc
fwait
test
push
divps
dec
add
push
pop
movs
pop
pop
inc
sub
mov
add
adc
add
add
push
or
and
mov
xchg
add
or
xchg
inc
aam
push
scas
mov
and
add
outs
push
(bad)
out
inc
sub
xor
cmp
push
jp
pop
dec
sar
out
mov
movs
pop
sub
push
add
sub
iret
push
xor
int3
repz
int
cs
and
ss
data16
in
and
cmp
out
or
pop
mov
out
add
push
push
cwde
aam
sub
out
xchg
pushf
in
nop
sub
mov
pop
jnp
mov
push
cld
push
and
ldmxcsr
xlat
call
pop
aam
pusha
add
mov
mov
mov
into
xor
mov
ins
xor
icebp
or
ret
xchg
push
push
imul
sbb
hlt
jmp
add
jne
and
push
rcpps
sbb
pop
shl
pop
jbe
stos
sub
gs
call
das
pop
push
push
shufps
loopne
jo
xor
and
bound
pop
daa
sbb
(bad)
paddb
mov
pop
xchg
pushf
or
push
in
push
sbb
call
push
aas
add
push
test
adc
sub
lahf
xchg
mov
xor
pop
call
pop
cld
pushf
pop
(bad)
int
pop
push
push
loopne
xor
cmp
mov
sbb
test
xchg
push
enter
neg
pop
push
les
aam
mov
sahf
push
xor
ss
xor
pop
sbb
idiv
sub
jl
xor
loopne
out
push
or
push
mov
pop
xchg
mov
push
jl
add
and
push
cmp
int
adc
inc
sbb
shl
xchg
dec
jl
aaa
fisubr
ret
push
mov
ds
outs
add
cmp
xor
call
jae
inc
lock
clc
ss
fld
ja
or
add
popa
add
stos
in
and
adc
popa
sub
push
push
fcom
sbb
ins
mov
dec
(bad)
add
and
jne
jb
or
adc
adc
cmp
and
mov
mov
fdivr
fidivr
mov
xor
outs
outs
xor
arpl
lock
ja
mov
push
jb
mov
inc
add
or
ja
add
fmulp
ret
ss
push
mov
shl
aad
arpl
inc
or
fdiv
adc
xchg
cmp
fisttp
or
add
loopne
shl
loopne
outs
jno
sub
popa
jno
mov
div
or
dec
inc
imul
sbb
cmp
popf
cmp
push
imul
mov
sbb
inc
stos
(bad)
int
mov
out
iret
dec
cmp
or
push
dec
outs
jb
ins
enter
pop
sbb
or
push
fcom
arpl
jae
dec
push
jb
das
adc
inc
(bad)
imul
outs
or
mov
cmp
push
scas
cdq
push
push
cmp
cmp
mov
jbe
icebp
or
adc
loop
push
pusha
mov
int3
outs
jns
dec
icebp
adc
outs
push
popf
push
add
cmp
ins
adc
lods
imul
and
xor
sbb
data16
or
sti
pusha
add
or
mov
mov
pop
cmp
push
mov
or
pop
push
sub
and
jl
xor
pop
lock
add
aas
or
xor
cmc
mov
mov
(bad)
jg
fs
mov
add
in
jmp
or
dec
add
lods
mov
pop
jo
jo
add
scas
xchg
sbb
add
inc
lock
pop
in
push
or
pop
add
(bad)
imul
pop
and
sbb
sub
cwde
loopne
dec
push
mov
add
sub
or
xor
push
and
sub
push
lods
push
xchg
adc
stos
jno
sbb
jae
push
sub
bound
pop
xchg
lahf
inc
adc
xor
or
or
cmp
add
jecxz
hlt
stc
pop
xor
inc
inc
or
dec
push
or
mov
inc
inc
jl
cmp
out
lods
jl
fsub
add
mov
or
(bad)
xchg
xchg
into
repnz
mov
or
sbb
ja
fs
xchg
add
push
jecxz
fdiv
int
jbe
add
mov
mov
inc
(bad)
push
out
push
sbb
mov
in
push
sub
mov
add
fs
test
add
es
arpl
add
push
cmp
mov
or
fild
inc
cdq
xlat
pop
jae
fcmovbe
call
xchg
fld
push
mov
call
not
xchg
loope
inc
idiv
sub
int3
adc
add
popa
dec
push
push
cmp
mov
nop
pusha
jae
fstp
loopne
hlt
and
pop
rol
adc
inc
iret
mov
inc
or
call
mov
jmp
add
adc
movs
dec
out
enter
fdivr
imul
or
adc
and
gs
movhps
sbb
mov
push
push
push
sbb
dec
into
pop
mov
outs
sub
neg
sbb
push
add
jnp
int
mov
icebp
cmp
add
sbb
push
jge
add
push
or
sbb
sbb
sar
sbb
stc
and
xchg
xchg
aaa
int3
or
jo
and
add
xchg
mov
cmps
or
retf
add
call
xchg
dec
fmul
pop
xchg
out
retf
dec
or
dec
ins
daa
sub
aaa
stos
shl
dec
jne
inc
adc
mov
or
fild
faddp
ds
or
cmp
push
add
cmp
fld
mov
enter
pop
in
xor
mov
push
xchg
in
add
mov
popa
fs
out
sbb
and
ss
add
dec
adc
add
inc
mov
mov
sbb
mov
or
adc
adc
or
inc
stos
inc
mov
cmp
ss
adc
daa
rcl
inc
in
scas
lds
xor
lea
arpl
lods
test
add
dec
outs
dec
push
add
inc
cld
or
add
rcl
push
and
ss
lock
inc
mov
jmp
sbb
gs
popa
push
jnp
lods
add
ficomp
std
retf
pop
daa
or
retf
cmps
xchg
cmps
or
or
add
repnz
pop
push
push
ror
not
or
jl
pop
pop
fs
nop
mov
pop
push
lods
add
ins
into
inc
jno
pop
scas
xor
push
inc
mov
xchg
out
pop
jbe
fwait
push
fimul
jb
outs
and
push
add
pop
(bad)
fmul
je
shr
js
out
or
pop
jae
in
push
ins
fs
xor
(bad)
add
in
imul
(bad)
out
and
clc
sbb
daa
dec
call
pop
lods
leave
pusha
pushf
js
adc
data16
push
outs
and
adc
or
dec
push
sbb
ins
add
mov
xor
mov
out
mov
gs
jg
test
ror
jae
jns
sbb
add
push
jns
gs
jne
xor
addr16
adc
out
add
imul
ror
sbb
dec
mov
mov
mov
mov
outs
push
outs
imul
mov
gs
add
adc
outs
inc
fidiv
mov
adc
(bad)
imul
push
mov
lahf
movzx
sbb
test
fdiv
xlat
inc
in
popa
jns
fsubr
stos
jmp
iret
cmp
adc
fcom
jns
jns
pop
cwde
add
js
fdivr
push
cmps
add
ucomiss
xchg
fsubr
mov
das
fbstp
adc
pop
pop
out
rcr
jge
jns
xchg
pop
push
les
jno
jb
fidiv
add
sbb
push
rol
in
inc
ret
adc
dec
lock
xchg
pop
inc
ins
add
push
sti
mov
mov
jno
mov
fs
shrd
jnp
inc
fs
add
(bad)
js
and
sbb
fst
sub
movs
js
adc
or
or
sbb
push
jmp
add
(bad)
jbe
(bad)
push
dec
pop
xchg
and
sbb
or
loopne
lods
cmp
nop
movs
xchg
or
hlt
add
enter
adc
jge
cmp
xlat
inc
add
adc
add
xchg
out
(bad)
pop
jo
jecxz
adc
lock
jg
mov
push
inc
xor
mov
mov
pop
mov
cs
cmp
pushf
push
js
loopne
jo
sbb
in
popa
dec
xlat
fsub
(bad)
pop
mov
xlat
je
push
xlat
jl
neg
ins
cmps
push
adc
jl
mov
push
mov
mov
jnp
fldenv
cwde
mov
cmp
inc
sbb
xlat
packuswb
or
pcmpgtd
add
scas
pmulhw
mov
adc
add
pop
shl
pop
add
mov
mov
cs
sbb
ja
push
nop
stos
daa
mov
pop
push
mov
stos
or
outs
xchg
dec
outs
push
adc
pop
mov
mov
or
and
fs
fadd
aas
jle
sub
lods
cmc
imul
push
js
bound
add
jle
inc
jmp
push
jge
jl
fadd
push
test
add
add
xchg
aad
push
lods
jle
jae
push
out
mov
and
into
dec
mov
cmp
ins
cmp
ds
add
xchg
push
mov
lahf
add
ss
mov
outs
jbe
dec
(bad)
fcom
or
int
add
adc
jnp
ror
pop
sub
cmp
cmp
fisttp
movs
push
inc
inc
mov
inc
mov
popf
push
outs
mov
push
mov
test
inc
xor
js
and
sub
adc
push
es
dec
push
int
cmp
push
jne
jo
mov
xchg
push
hlt
xchg
rcl
and
sub
out
stos
or
lahf
push
dec
lahf
call
push
lahf
popf
pop
inc
nop
out
lahf
adc
push
jo
cmp
inc
add
adc
movs
lods
or
lods
popa
into
arpl
es
iret
lea
jmp
(bad)
loope
adc
nop
jl
daa
xor
inc
outs
sub
retf
mov
ror
sbb
ss
cdq
xor
or
sbb
sbb
ja
add
bound
sub
daa
cld
fmul
jae
shr
outs
mov
je
pop
pushf
das
mov
lahf
push
cwde
push
dec
ja
adc
and
iret
mov
arpl
int3
push
pop
(bad)
movs
cmps
stos
ror
xor
add
pop
adc
cmp
inc
loope
sbb
push
add
cmp
cmp
imul
pusha
jnp
xor
out
pop
dec
pop
je
adc
push
sti
jne
jo
jb
fs
call
pop
addr16
sub
xor
jne
push
fidivr
mov
or
loop
into
inc
pop
add
fadd
mov
hlt
push
cwde
dec
xchg
sbb
mul
add
inc
es
das
mov
adc
cld
sub
add
mov
das
add
in
loope
sbb
leave
jns
inc
xchg
mov
addr16
dec
outs
push
fmul
xor
xor
push
or
xchg
pop
adc
scas
repnz
stos
xchg
add
sbb
dec
je
cmps
in
icebp
sbb
inc
(bad)
jns
daa
pusha
sub
add
daa
ds
add
pop
sbb
adc
jbe
test
rcr
popf
ins
add
dec
pop
add
inc
fimul
mov
stos
xor
cli
jbe
mov
mov
out
cmp
call
fbstp
nop
lock
dec
add
cld
push
pop
pop
daa
popa
jne
or
add
cmps
adc
popa
aad
cmp
add
xchg
mov
push
jns
and
add
jge
cmp
dec
mov
pop
mov
add
xchg
fld
or
mov
or
mov
retf
std
add
pop
inc
adc
sbb
jnp
inc
add
xchg
or
mov
stos
xor
jae
cwde
(bad)
add
and
daa
or
push
dec
add
add
add
rol
mov
in
jmp
cmp
(bad)
fst
lods
push
jne
lods
scas
adc
inc
ins
pop
and
push
jmp
xchg
ret
jne
push
scas
xlat
outs
xor
test
adc
(bad)
cmp
test
or
fsubr
add
rdmsr
adc
or
mov
xor
pop
iret
pop
and
xor
add
adc
test
jo
mov
adc
mov
pop
or
or
add
add
fs
dec
xchg
or
ret
aas
inc
test
cmps
push
add
cmp
jp
daa
js
push
sahf
ret
sbb
or
ins
imul
add
pop
push
xchg
jo
stos
push
jns
inc
add
rol
popa
adc
jae
cmp
or
fiadd
int3
inc
cmp
push
ss
inc
loop
retf
or
imul
push
push
or
push
js
pop
pop
mov
and
adc
dec
or
inc
add
sahf
jb
inc
dec
mov
push
mov
stc
add
mov
ja
not
fisubr
pop
aaa
int3
fcomp
jne
adc
cwde
xchg
or
dec
and
xchg
and
mov
add
lods
push
in
inc
inc
cmp
adc
jae
shr
aas
pop
adc
das
add
dec
dec
adc
sbb
or
mov
sbb
or
loopne
jmp
fisttp
pop
push
xor
loopne
in
mov
retf
pop
ror
or
or
call
add
add
mov
sbb
aas
int3
rcl
movs
inc
or
push
loopne
add
ins
(bad)
js
addr16
ds
pop
dec
and
or
push
int3
sar
adc
fistp
xlat
mov
cmp
mov
dec
ins
addr16
mov
mov
adc
xor
xlat
inc
nop
mov
fwait
loopne
xor
push
inc
loope
and
push
rol
xchg
jmp
sar
sbb
adc
fadd
sbb
int
lahf
sbb
mov
shr
std
mov
jnp
mov
cwde
imul
popa
lock
ins
jb
cmp
mov
or
pop
mov
in
xor
dec
mov
mov
or
jg
inc
loopne
dec
sub
out
or
add
or
xchg
xchg
sub
sbb
dec
outs
arpl
add
pop
inc
and
and
les
pop
pusha
je
add
aas
add
cmps
pop
xor
pop
inc
shl
sbb
loopne
(bad)
push
push
outs
jns
cmps
ret
mov
mov
gs
dec
push
imul
aam
and
outs
ja
cli
or
aaa
out
mov
sbb
fwait
int
(bad)
dec
push
das
pop
ins
mov
sbb
push
ret
test
ror
lahf
mov
lahf
js
or
jl
jo
push
imul
(bad)
es
jno
les
jne
fcomp
add
(bad)
(bad)
je
push
or
or
push
outs
jae
cmp
pop
inc
jp
xchg
adc
mov
sbb
and
inc
adc
sub
fwait
test
daa
bound
out
ins
div
jae
mov
inc
mov
add
push
outs
adc
fmul
fs
fnsave
imul
add
xchg
retf
out
rcr
cmp
inc
leave
pop
mov
stos
rol
push
outs
pop
out
popa
xchg
add
and
dec
inc
jg
ins
adc
and
popa
js
inc
bound
and
sub
push
ret
pop
lods
sbb
or
adc
arpl
fadd
inc
out
cld
inc
sbb
lods
or
(bad)
adc
ins
test
pop
push
or
mov
sbb
push
dec
lods
bound
push
nop
xchg
pop
adc
(bad)
sub
in
pop
out
and
mov
and
lods
mov
fwait
pop
retf
push
rol
movs
mov
adc
in
push
mul
je
jo
iret
sub
or
leave
adc
mov
je
and
cmp
jbe
scas
push
jo
adc
imul
in
xchg
xor
or
outs
cmp
push
mov
or
dec
outs
adc
popa
ins
cs
les
stos
add
arpl
in
out
add
mov
cwde
int3
push
aam
mov
sbb
xlat
ins
mov
push
js
pop
xlat
mov
adc
push
pop
ja
mov
push
ins
fwait
push
jo
xchg
pop
xchg
jo
shl
sbb
in
pusha
das
and
push
pop
mov
in
xchg
pop
and
push
and
lock
ins
ss
data16
call
shl
mov
int3
jb
pop
or
sti
pop
jnp
push
enter
push
outs
out
ins
push
dec
jno
mov
ss
mov
pop
xchg
push
pop
mov
je
jne
cmp
push
push
or
mov
sub
and
imul
mov
pop
aas
pop
mov
ret
and
inc
mov
(bad)
outs
push
arpl
sub
inc
dec
gs
pop
pusha
ret
inc
push
mov
out
push
outs
dec
and
imul
dec
popf
cld
pusha
and
int
movs
inc
imul
xchg
fwait
div
sub
adc
mov
ror
imul
dec
(bad)
(bad)
imul
imul
cmps
shl
out
pop
add
lods
add
jmp
ins
outs
and
pop
mov
pushfw
push
mov
add
and
push
ret
or
mov
int3
out
jo
or
push
loopne
xor
cmps
add
fisub
inc
imul
rcr
mov
mov
push
and
arpl
pop
scas
push
ror
sbb
pop
stc
jge
call
push
dec
push
add
in
adc
adc
jl
lahf
and
cmp
push
into
into
loop
mov
or
cs
dec
mov
adc
jp
es
sbb
jge
mov
iret
pop
pop
mov
pop
retf
add
xor
dec
dec
sbb
xchg
jnp
push
jno
jno
rcr
cmp
ins
xchg
sub
push
mov
mov
call
sbb
sub
les
pushf
ins
sub
and
mov
sar
movs
xor
js
pop
arpl
mov
sub
rcr
sub
fstp
test
push
in
or
mov
pop
aaa
add
mov
dec
push
leave
mov
push
inc
das
popa
test
pop
mov
mov
or
aaa
inc
or
lods
pop
sbb
jne
or
ror
pusha
pop
rcl
outs
push
test
inc
inc
cs
enter
and
push
fmul
adc
cs
scas
fsubr
outs
mov
cs
push
sub
or
sub
es
sub
sub
pop
lods
sub
lock
sbb
sub
call
clc
xchg
add
xchg
loope
push
jp
xchg
cs
cs
mov
lods
loopne
pop
pop
mov
jbe
pop
sbb
loope
cmp
retf
and
shl
sub
dec
sub
mov
pop
stos
aam
adc
xor
cmp
test
push
xchg
jmp
inc
ss
dec
gs
pop
add
mov
jne
sbb
xor
pop
jecxz
in
push
add
sub
stc
push
mov
xor
cmps
push
cmc
inc
push
sti
push
ret
jne
jo
(bad)
retf
push
jns
sub
sub
ja
mov
das
cmovge
cmp
adc
pop
jl
adc
shl
push
jns
xor
mov
cmp
push
mov
jb
and
mov
mov
aad
add
jnp
stos
fldcw
add
das
mov
sbb
adc
and
test
ret
pop
movs
inc
xor
jo
lods
test
and
jge
test
xor
das
lods
arpl
out
xor
in
loop
or
adc
mov
mov
sub
arpl
dec
cmp
scas
or
cdq
push
push
ror
mov
psubusb
cmp
fcom
retf
jmp
pop
dec
push
push
xor
jbe
retf
fimul
push
ficom
das
jg
ds
inc
lock
aas
push
aas
xchg
enter
loop
movaps
fidivr
enter
aas
int
fdiv
dec
inc
je
out
outs
leave
ins
push
sub
fstp
call
cmp
gs
fmulp
push
mov
(bad)
dec
fisttp
idiv
aas
jo
data16
push
ds
xchg
das
(bad)
out
das
add
ud1
outs
cmp
js
ret
paddsw
jmp
setne
sbb
add
add
push
add
mov
add
add
add
mov
mov
mov
std
(bad)
(bad)
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
in
aaa
loopne
cmp
(bad)
in
(bad)
jmp
jmp
jmp
jmp
dec
jmp
(bad)
jmp
jmp
(bad)
(bad)
(bad)
(bad)
lock
(bad)
(bad)
(bad)
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
call
call
call
dec
dec
inc
mov
int3
jmp
push
or
add
mov
daa
push
mov
mov
fistp
js
push
dec
push
movs
push
add
out
cmp
rcl
and
pop
adc
stos
push
dec
pop
jnp
push
loop
retf
xchg
movs
push
or
sbb
pushf
pop
push
or
inc
push
in
xchg
push
ds
js
mov
sahf
je
in
inc
cdq
cmps
cmp
push
push
push
(bad)
loop
fistp
dec
jp
lahf
dec
mov
sbb
mov
inc
push
dec
push
pop
fistp
sbb
jns
push
inc
jge
push
ins
call
jbe
jl
js
sub
dec
dec
test
in
scas
rol
jnp
cmp
mov
data16
cld
ss
mov
push
and
sbb
bound
jbe
ds
push
lock
xor
call
test
pushf
xchg
pop
call
xchg
mov
adc
dec
ja
xor
sbb
stos
test
ins
bsf
add
cmp
or
je
push
nop
nop
popa
push
add
pop
pop
sub
fs
pop
inc
push
push
add
ins
in
(bad)
les
or
adc
addr16
inc
or
cmc
dec
int3
fdecstp
test
clc
push
cmp
aaa
xor
cdq
adc
call
sub
mov
xor
cmp
or
mov
sbb
(bad)
std
(bad)
or
add
leave
fisub
ss
inc
imul
add
sub
jg
or
push
jmp
inc
ret
inc
xchg
pop
ret
add
push
(bad)
or
retf
and
jge
dec
daa
dec
xchg
out
inc
mov
outs
sbb
fisttp
loop
inc
add
fwait
and
retf
loop
int3
adc
mov
mov
sbb
sub
daa
add
add
inc
xchg
mov
popa
adc
icebp
cmp
or
mov
test
ja
dec
int
xchg
jg
xor
adc
mov
xor
push
dec
shl
in
add
movs
ins
jo
cmps
mov
sbb
in
arpl
jmp
or
jae
sub
jo
push
ficomp
mov
jmp
push
dec
outs
add
inc
dec
cmp
pop
sub
(bad)
(bad)
dec
pop
or
add
rcl
push
inc
sub
pusha
clc
movs
adc
mov
and
ds
pop
dec
push
or
cdq
inc
sub
dec
sub
pop
push
cmp
or
jle
outs
xchg
mov
in
push
das
inc
xchg
mov
mov
or
lea
cmp
jnp
ror
mov
shl
lods
mov
or
in
cmc
mov
inc
daa
mov
jmp
cmp
xor
test
jb
jb
adc
clc
stos
add
out
pop
ins
neg
jo
or
push
(bad)
popa
ins
push
gs
mov
fadd
dec
pop
pop
test
pop
adc
fwait
and
enter
(bad)
out
add
fs
rcl
inc
movs
add
mov
sbb
sbb
popa
(bad)
aam
xor
add
jp
jle
add
xor
cmp
mov
(bad)
shl
ror
jmp
inc
mov
popf
cmps
sub
inc
adc
jl
xchg
xchg
jge
dec
or
adc
inc
inc
pusha
push
inc
push
inc
pusha
sub
(bad)
mov
aas
call
int3
push
or
sub
add
inc
jne
lea
pop
adc
mov
adc
xchg
push
push
enter
call
push
jo
aaa
mov
xlat
pop
adc
push
test
bound
nop
nop
adc
test
(bad)
add
hlt
jmp
inc
sub
push
inc
mov
popa
jne
je
pop
add
add
sub
lods
jl
or
xor
and
popa
jne
pop
jno
iret
test
hlt
mov
pop
push
inc
sub
pop
imul
xchg
jp
xchg
push
or
popf
xor
retf
and
add
dec
scas
cmp
cmp
add
scas
or
cmp
popw
rol
or
cmc
mov
lock
sub
pop
addr16
cmp
sbb
cmp
xchg
jmp
adc
enter
enter
adc
dec
mov
jmp
lds
jns
cmp
add
rol
cmp
call
cmp
push
(bad)
aas
int3
call
aas
push
test
sbb
pop
cmps
scas
jmp
pop
cmps
xchg
mov
mov
ret
pop
mov
inc
pop
aaa
xchg
add
in
xchg
inc
jbe
mov
inc
mov
or
xchg
mov
sub
jge
add
ror
movs
enter
dec
or
popf
add
out
xor
in
add
and
aaa
ds
xchg
popf
sub
bound
inc
or
dec
inc
inc
dec
cmp
xor
push
sub
jb
jo
and
inc
fs
neg
fs
fs
push
jnp
pop
push
push
pushf
aam
add
xchg
mov
addr16
scas
sub
aad
add
(bad)
push
jmp
rcr
or
add
repnz
cmps
cmps
add
loop
inc
pop
inc
inc
inc
inc
jg
shl
inc
cs
add
sub
sbb
pop
inc
xchg
or
push
mov
ins
(bad)
xchg
mov
inc
mov
adc
xchg
(bad)
call
mov
clc
inc
or
movs
cwde
or
push
dec
adc
mov
sbb
sub
fs
retf
les
ss
mov
inc
call
lds
imul
clc
xchg
push
or
stos
sub
imul
in
push
add
icebp
int3
cmp
in
(bad)
aas
xchg
rcr
cmp
dec
push
dec
mov
push
xchg
fsub
lock
add
cmps
add
jl
xchg
cwde
inc
aam
out
fwait
adc
mov
and
das
cmp
add
adc
pop
dec
es
lods
adc
es
bound
pop
dec
bsr
retf
retf
lods
pop
mov
push
xor
dec
or
pop
push
push
retf
dec
add
aad
jb
and
shl
or
or
adc
add
aad
out
add
dec
sbb
cdq
or
pop
or
inc
les
lds
inc
sar
push
cmp
sub
adc
xlat
adc
pop
rcl
pop
popf
push
jmp
or
and
or
(bad)
shr
pushf
and
xor
inc
or
pushf
dec
push
outs
call
hlt
icebp
jae
mov
pop
pop
mov
add
sub
dec
dec
push
add
push
loopne
xchg
rol
rcl
pop
iret
or
adc
pop
xchg
push
js
or
add
jmp
in
test
ret
das
leave
push
sub
sbb
inc
or
pop
ret
inc
xor
inc
sub
lahf
inc
jo
inc
xchg
mov
add
daa
(bad)
daa
sub
in
fimul
pushf
pop
cmp
daa
stos
push
loopne
xor
cmp
out
mov
sbb
test
push
imul
iret
(bad)
aam
mov
sahf
push
or
pop
out
jns
or
xor
pop
sbb
out
jns
adc
push
pop
sub
jl
xor
mov
jbe
push
mov
jne
enter
pop
add
frstor
add
sar
xchg
inc
adc
pop
(bad)
or
test
push
pushf
mov
popf
test
pop
and
cmp
loopne
jnp
and
or
inc
inc
ins
xchg
sar
pop
adc
fs
push
dec
fcmovnb
mov
xor
push
inc
add
push
push
ds
lahf
rcr
dec
and
or
js
push
mov
shl
out
jne
ins
sub
aaa
cs
mov
pop
mov
adc
dec
popa
push
push
les
or
jo
shr
sar
adc
or
(bad)
mov
or
lods
add
pusha
out
loope
loope
or
outs
outs
adc
add
loope
jle
je
dec
pop
add
aas
js
mov
cmp
out
xchg
lods
shr
fwait
outs
je
and
push
or
pop
stos
push
es
loopne
out
mov
lea
out
(bad)
mov
jge
fadd
inc
mov
xchg
mov
gs
inc
jne
push
cli
jnp
pushf
cs
bound
cmp
or
imul
push
popa
xor
pop
and
mov
jo
ret
lock
jo
and
mov
pop
mov
cmp
or
xchg
inc
xor
je
cdq
cmp
jo
mov
jae
mov
or
in
cs
test
inc
jno
mov
imul
jb
push
outs
loop
push
je
inc
xchg
pop
pushf
pop
add
and
xor
dec
ins
fisttp
and
jns
sbb
clc
ret
stos
pusha
cld
dec
mov
inc
icebp
xor
jbe
pop
iret
inc
and
jo
jne
adc
into
push
add
dec
data16
arpl
add
mov
sbb
pop
cmp
mov
ja
mov
out
pop
add
ins
cmps
cmps
xor
jge
adc
push
mov
adc
cmp
mov
dec
push
les
sub
rcl
ret
pop
add
rol
pop
lods
je
add
and
or
and
mov
arpl
jmp
scas
add
and
cmp
rol
or
adc
add
add
mov
(bad)
dec
sub
ins
sbb
mov
ja
pushf
inc
sub
sti
idiv
lock
pop
cmp
addr16
icebp
push
mov
mov
push
out
push
adc
in
stc
xlat
add
pop
xchg
push
mov
jo
out
retf
fsub
(bad)
sar
sahf
addr16
movs
ret
pop
or
dec
ds
jne
adc
pop
mov
rol
add
sahf
ins
push
pop
(bad)
mov
js
add
imul
js
jle
xchg
or
add
(bad)
call
mov
ss
cwde
(bad)
mov
sub
ds
mov
add
push
mov
push
and
sar
int
cmps
cmp
mov
jo
cmps
in
jle
push
pusha
stc
push
mov
dec
ds
mov
rcl
stos
rol
mov
lahf
daa
fiadd
loopne
ret
in
and
jge
ins
outs
cmp
push
or
inc
push
and
inc
std
push
(bad)
ret
jnp
and
push
mov
xor
mov
dec
mov
loopne
push
xchg
push
daa
pop
add
mov
mov
inc
cmp
jnp
out
mov
sbb
cmp
shr
mov
sub
xchg
jo
ror
cmc
sahf
add
scas
shr
sub
les
jl
enter
repz
das
cs
movs
cmps
call
mov
test
push
jb
jae
add
aam
cmp
ret
inc
popa
cmp
js
mov
fsubr
retf
and
retf
mov
or
imul
call
pop
push
popa
bound
fucomip
or
inc
shl
movs
mov
hlt
sub
mov
dec
or
mov
cmp
xchg
cld
rcl
xlat
pop
or
daa
(bad)
es
push
test
(bad)
inc
je
xor
(bad)
mov
jne
mov
lods
scas
push
push
cmovbe
daa
mov
jne
pop
push
cli
jno
adc
mov
push
push
add
test
das
or
sub
mov
pop
mov
push
sbb
jle
mov
push
add
push
push
dec
outs
jmp
xchg
jmp
ss
inc
or
ins
and
sub
outs
daa
sub
pop
daa
mov
data16
(bad)
jp
push
push
and
add
cmp
int
adc
push
and
mov
xchg
dec
outs
sub
sub
pop
test
push
nop
sbb
fcmovnb
mov
fisubr
push
push
inc
shl
xor
push
xor
mov
mov
mov
or
fcmovne
or
dec
cwde
and
jae
sub
and
js
outs
xor
xor
mov
in
jae
test
adc
test
jo
fstp
pop
push
jl
or
push
sbb
sub
xor
mov
xor
push
sbb
and
add
ins
stc
push
dec
add
mov
mov
push
inc
in
push
inc
mov
dec
cmp
push
inc
push
push
sti
push
push
call
push
pop
xchg
add
dec
mov
inc
pop
outs
push
dec
mov
mov
jbe
cvttps2pi
das
mov
imul
call
std
(bad)
fnstenv
call
aam
leave
lods
test
mov
into
sub
call
bound
bound
(bad)
in
pop
int
mov
sbb
pop
sub
jp
mov
jmp
sub
add
outs
mov
pusha
ja
jmp
(bad)
repz
add
push
dec
and
pop
adc
mov
rol
test
pushf
add
sub
xchg
data16
inc
add
fdivp
hlt
mov
add
add
add
add
jp
jp
adc
add
add
sbb
sbb
sub
push
or
push
add
add
(bad)
call
add
add
mov
mov
mov
mov
mov
mov
mov
mov
shl
push
mov
(bad)
(bad)
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
mov
xor
dec
mov
mov
add
pop
mov
mov
mov
mov
mov
mov
(bad)
out
(bad)
in
call
(bad)
inc
inc
inc
inc
inc
inc
(bad)
mov
(bad)
mov
(bad)
(bad)
mov
push
(bad)
clc
dec
(bad)
mov
outs
inc
sub
cmps
cmp
fwait
shr
(bad)
fild
and
iret
repz
cwde
mov
adc
and
inc
push
cwde
push
loope
jns
xor
fdiv
idiv
hlt
fnsave
in
push
push
fs
inc
push
xor
sahf
out
ds
test
es
rol
mov
fs
cmp
push
add
push
cmp
jbe
or
js
mov
idiv
ss
inc
lods
or
dec
lock
push
rcr
repz
adc
repz
mov
iret
nop
mov
iret
mov
movs
and
scas
push
movs
sar
jl
lock
xor
shr
xchg
imul
jnp
or
add
or
dec
mul
jns
adc
clc
(bad)
push
shr
ins
(bad)
xchg
jle
out
sbb
ss
call
push
loopne
jnp
add
jmp
js
cmp
enter
fisub
sahf
push
int3
out
out
jo
or
mov
aam
ins
mov
sub
out
push
call
call
in
into
js
(bad)
movzx
cmp
cmp
push
sbb
shl
out
jnp
fcom
lock
push
push
push
pop
clc
dec
pop
xor
ds
xor
imul
movs
lar
push
mov
adc
dec
sbb
outs
in
add
nop
sub
imul
push
loope
or
adc
push
popa
repnz
add
xchg
dec
in
(bad)
jb
xchg
movs
xchg
xor
rol
xchg
daa
or
add
js
fwait
rol
setl
mov
cld
inc
inc
popa
arpl
popa
mov
push
popa
mov
or
inc
popa
outs
inc
outs
arpl
rcr
sub
sub
add
mov
pop
ret
and
sbb
retf
xor
fisub
inc
je
js
sub
lock
or
adc
out
sbb
loopne
outs
and
ds
ret
or
aas
mov
test
inc
xchg
inc
sub
or
xchg
push
data16
mov
lock
or
mov
or
dec
pop
inc
push
dec
clc
retf
push
push
outs
jne
sbb
mov
mov
cdq
mov
repnz
xor
mov
inc
test
nop
adc
mov
je
ins
fistp
retf
add
pop
and
hlt
fimul
push
mov
mov
test
xor
pop
xor
push
jecxz
xchg
imul
ja
(bad)
leave
adc
jnp
xchg
xchg
leave
in
dec
add
dec
clc
mov
push
outs
outs
sbb
push
cdq
sbb
adc
mov
fnsave
cmp
xlat
sahf
push
jo
push
bound
add
in
mov
hlt
add
adc
xor
or
dec
jecxz
nop
add
retf
mov
push
cmps
push
cmps
dec
cmp
lods
rcl
or
inc
nop
sub
or
cmc
shl
jl
popa
mov
ror
sub
add
add
push
add
xor
inc
hlt
add
dec
adc
xchg
loopne
hlt
mov
in
sub
int3
push
or
aad
adc
aas
lahf
sbb
lock
push
shr
sub
bound
fcom
fiadd
jl
xlat
or
dec
mov
loopne
jo
xor
rcl
adc
fsub
call
mov
jmp
mov
dec
add
mov
mov
adc
add
scas
popa
xchg
hlt
loope
test
pop
lahf
sbb
or
push
test
xchg
jmp
mov
mov
pop
ins
ror
push
inc
push
jo
test
dec
icebp
add
int3
sub
pop
xor
mov
mov
jne
aam
pop
add
fidivr
movs
test
push
inc
lds
lods
jmp
adc
jo
push
mov
pop
mov
stos
sbb
or
ja
or
cmp
mov
or
push
adc
ja
arpl
imul
add
or
mov
add
xchg
xchg
xchg
xchg
push
and
jmp
add
xchg
xchg
test
out
inc
test
jp
fild
and
lock
test
adc
xor
or
xlat
xchg
sbb
stos
clc
jmp
jmp
push
popf
bound
in
sbb
in
inc
or
jno
pushf
or
dec
push
dec
je
inc
mov
pop
adc
popf
scas
push
or
mov
scas
dec
mov
lods
addr16
sbb
xlat
add
adc
dec
dec
push
sub
push
in
in
aam
jb
mov
lods
mov
enter
call
mov
pop
pop
cwde
push
mov
call
inc
bound
inc
cmp
or
movs
lds
xchg
push
cmovb
mov
dec
adc
stos
add
add
test
adc
sub
int3
push
aam
or
dec
mov
jmp
or
push
inc
push
lds
xor
push
cdq
add
dec
bound
pop
xor
loopne
pop
push
jnp
and
ins
push
jo
cmp
pusha
push
push
or
mov
cmp
jle
push
and
mov
push
loopne
pop
push
mov
int3
jb
sbb
add
in
pop
cmp
test
ins
outs
pop
push
shl
cwde
test
mov
jne
bound
mov
and
aaa
mov
inc
mov
jne
pop
movsx
jo
sub
cmp
push
add
cli
aas
loopne
push
inc
jb
jo
imul
inc
sub
jl
test
mov
mov
mov
lods
test
out
cld
add
or
stc
cmp
jo
jae
mov
push
pop
add
repz
jns
push
in
add
xor
adc
jbe
add
(bad)
or
pusha
pop
div
ja
je
push
jo
mov
ja
push
ja
movs
mov
push
push
inc
mov
mov
xchg
xor
pop
(bad)
push
dec
test
aam
xor
jne
loopne
jnp
cmp
pop
out
mov
call
or
or
imul
loopne
add
inc
cs
push
add
(bad)
push
ja
push
faddp
mov
jle
sub
ins
xchg
fiadd
pop
sub
push
in
add
out
jbe
add
cwde
push
add
arpl
push
inc
xor
sub
sub
call
pop
add
and
fs
dec
mov
fld
loopne
jecxz
add
or
xor
mov
cmova
imul
pop
add
mov
clc
adc
test
sbb
dec
mov
dec
pop
dec
add
daa
add
sar
dec
loope
js
dec
retf
or
gs
inc
cmp
test
ja
rol
xchg
pop
jae
mov
or
inc
arpl
and
dec
jae
cmps
mov
adc
add
cs
dec
clc
mov
fs
add
cdq
pop
jne
jne
sub
xor
mov
push
pop
dec
xchg
pop
jae
pop
pop
(bad)
push
adc
adc
dec
inc
mov
enter
int3
or
les
mov
cdq
jae
jle
or
ins
arpl
scas
xor
sbb
cmp
jae
sub
or
js
mov
adc
dec
bound
ret
push
add
scas
into
pop
scas
push
test
xor
sbb
outs
jp
pushf
adc
frstor
mov
inc
jo
pop
add
and
or
inc
imul
and
sub
push
je
inc
and
les
jp
loop
adc
jl
rol
pop
jl
add
add
cdq
xchg
sbb
xor
pop
scas
inc
je
sbb
xchg
cmps
push
movsx
in
xor
mul
aaa
adc
test
movs
fadd
jle
pop
pop
mov
sbb
push
dec
xor
fdivr
mov
xor
movs
push
jl
sub
scas
push
mov
add
mov
mov
ds
push
aas
not
add
push
add
push
retf
mov
jb
cmp
adc
or
xchg
jmp
push
mov
add
push
in
fisubr
sbb
pop
fimul
cs
cli
mov
sub
pop
scas
ret
(bad)
fisttp
add
leave
leave
enter
lahf
(bad)
jmp
adc
sti
pop
sub
ja
adc
loopne
ret
cmps
test
cs
inc
gs
xor
mov
adc
sub
sub
sbb
sar
adc
xchg
dec
add
pop
jnp
ja
shl
dec
das
cmps
xor
push
movs
dec
dec
pushf
cmps
xor
jns
pop
cmp
sub
jp
jmp
int3
pop
push
outs
cmp
add
int3
sar
push
pop
inc
jecxz
imul
fdivr
call
leave
xor
sub
(bad)
repz
ror
mov
ret
push
push
xchg
push
or
(bad)
dec
lds
cmp
dec
sub
and
nop
popa
xchg
sub
push
pop
dec
fisubr
or
ins
mov
push
push
cmps
mov
outs
and
or
mov
dec
mov
xor
xlat
pop
xchg
dec
imul
stos
(bad)
push
adc
xor
xor
sbb
gs
scas
jae
(bad)
mov
stos
add
fbstp
or
(bad)
sbb
and
sub
adc
sbb
pop
lahf
or
pusha
lds
push
or
mov
mov
add
dec
sub
cwde
sub
dec
xlat
jecxz
add
inc
imul
test
or
inc
cmp
pop
pop
adc
pop
test
into
call
jmp
mov
jo
push
mov
cmp
xor
and
adc
(bad)
push
je
call
pop
dec
pop
jg
ins
es
or
ficom
or
inc
popa
arpl
jmp
mov
adc
push
push
in
push
xor
inc
or
xor
push
out
and
or
push
jns
arpl
cmp
jae
cmp
cdq
in
gs
out
pop
movs
out
adc
into
dec
outs
inc
push
cmp
dec
adc
add
xchg
js
mov
inc
dec
sbb
and
pop
or
ins
ret
bound
push
mov
add
pushf
enter
mov
enter
push
jns
mov
jecxz
add
int3
cmp
mov
das
ror
and
push
add
or
dec
call
or
out
push
xchg
loope
mov
mov
imul
or
mov
pop
shl
clc
xor
shl
sub
jo
dec
cmp
push
inc
jge
push
push
xor
sub
dec
jb
fsub
mov
lea
add
jbe
jl
xor
inc
push
cs
fdiv
and
inc
jae
ins
imul
jp
mov
pop
ficomp
push
hlt
dec
sbb
dec
jo
xchg
(bad)
add
rdmsr
movs
jmp
xor
sbb
mov
push
pop
enter
adc
push
aaa
lods
pusha
and
inc
js
push
pop
jns
or
ja
or
sbb
ds
imul
cmp
sti
test
add
fisub
or
sub
inc
cmp
xor
push
rcr
sbb
mov
aad
xor
adc
and
out
push
sbb
in
scas
mov
bound
leave
dec
rol
push
adc
ins
outs
push
and
push
fs
mul
pop
sbb
fs
in
adc
xor
sub
mov
popa
xchg
fld
cli
ins
popa
and
shl
xchg
je
add
mov
test
sbb
inc
in
sub
push
cmp
int3
xor
dec
pushf
xchg
add
adc
adc
mov
sub
mov
jg
inc
adc
mov
cmps
not
cmp
fs
jmp
pop
add
jg
add
jmp
lahf
and
sbb
add
and
add
nop
popa
sbb
dec
nop
add
nop
and
cmp
std
aaa
sbb
les
add
add
adc
icebp
inc
push
cmp
int3
int3
aam
fiadd
sahf
out
sahf
call
jle
sahf
out
mov
inc
out
xlat
jns
sbb
stos
pusha
add
dec
mov
inc
mov
xor
mov
loopne
sbb
push
add
fcomip
push
rcr
fimul
test
and
call
add
or
sar
adc
imul
(bad)
mov
movs
cld
inc
lods
push
push
lahf
push
stos
or
mov
lods
mov
inc
es
dec
push
pop
push
cmps
bound
sub
push
push
(bad)
pop
pop
aas
es
sub
fsub
adc
outs
enter
stos
and
and
add
add
dec
or
inc
mov
mov
inc
bound
xchg
cs
push
das
jae
outs
add
pushf
hlt
push
lock
sar
or
mov
add
xchg
or
fs
lock
xchg
inc
nop
ins
popa
arpl
loope
icebp
cmp
mov
add
es
and
adc
nop
lock
mov
dec
popa
cmp
and
js
mov
daa
sbb
pop
sbb
and
or
mov
scas
xor
sub
and
and
jo
ins
sub
pop
mov
fisub
daa
sti
push
clc
es
pop
pop
ins
jge
fld
adc
scas
jo
test
or
add
xor
add
lods
xor
gs
loope
cmps
mov
loope
or
push
cmps
adc
adc
mov
push
pushf
lds
push
loopne
mov
inc
or
sub
cdq
inc
rol
ror
cmp
inc
inc
jne
nop
cmp
dec
push
fld
pop
adc
push
enter
les
sbb
dec
and
and
cdq
in
out
pusha
xlat
push
sub
cmp
jle
outs
pop
mov
lds
shl
pop
sar
mov
and
and
cwde
jb
and
or
std
push
loop
jb
push
jmp
or
inc
ds
fiadd
inc
lds
pop
xchg
lds
mov
sub
mov
adc
inc
mov
sub
test
adc
add
(bad)
push
fild
test
jo
push
or
mov
adc
xor
je
mov
add
jbe
inc
and
push
xor
add
pop
leave
jne
sub
xor
pop
adc
lahf
ins
gs
xor
jae
push
imul
out
les
adc
and
pop
loopne
sbb
adc
dec
push
push
lods
ins
push
jne
jo
sbb
add
inc
push
arpl
ins
dec
cmp
mov
push
test
dec
add
jl
or
jle
add
or
dec
ja
test
imul
cmp
xor
mov
call
movs
sub
loope
scas
aaa
sub
lods
repnz
jecxz
cmp
mov
xchg
push
test
inc
ja
mov
loopne
clc
rcr
cld
(bad)
mov
xor
pop
daa
dec
in
lods
or
mov
rcl
xor
sub
pop
add
pop
jge
mov
adc
or
pop
mov
sbb
pop
xchg
jbe
test
pop
add
dec
pop
ror
inc
inc
inc
inc
ins
xchg
mov
enter
or
test
hlt
mov
int3
fs
adc
imul
lods
add
hlt
inc
or
cs
loope
shl
inc
inc
imul
or
mov
add
cwde
ret
pop
je
imul
add
sub
or
dec
dec
cmp
inc
sub
(bad)
clc
inc
or
mov
pop
dec
adc
lahf
mov
cmp
mov
fucom
fld
adc
xlat
adc
das
pop
sub
popa
mov
lods
and
outs
add
or
jae
bound
ins
mul
or
pop
stc
adc
fmul
sub
sub
sub
push
push
mov
inc
pop
dec
outs
push
bswap
outs
add
add
or
outs
push
mov
push
push
mov
fcmovnbe
mov
in
and
add
adc
cmps
sub
and
inc
popf
jnp
ror
or
inc
push
jo
bound
jns
push
inc
push
imul
dec
cmp
mov
and
cmp
lods
xlat
add
mov
retf
loopne
lods
in
cmp
(bad)
adc
loope
lock
loopne
aam
mov
in
jo
push
les
push
or
(bad)
ror
jge
and
jno
push
sbb
cmp
sbb
push
sub
cmp
pop
dec
cmps
push
mov
push
rcr
jno
push
adc
cmp
jno
xor
xor
shl
jp
and
inc
cmp
sub
jnp
shl
jns
je
or
shl
sub
mov
out
mov
inc
sbb
mov
sbb
inc
cmp
jae
sbb
add
jno
aas
or
push
or
test
mov
cs
and
(bad)
ror
push
push
enter
lds
pop
adc
sbb
jl
mov
jp
test
dec
mov
mov
push
not
add
loope
fbld
mov
bound
xchg
pusha
cmp
pop
add
retf
mov
xchg
mov
or
sub
shl
mov
jae
jns
ins
ror
daa
(bad)
push
into
push
and
popa
sbb
je
push
and
mov
icebp
rcl
sub
arpl
pop
sbb
pop
lock
adc
xor
bound
push
add
imul
int
sbb
(bad)
xor
sbb
xchg
add
hlt
les
mov
je
mov
push
fstp
inc
js
pop
pop
aad
stos
push
dec
mov
lea
mov
add
mov
mov
shl
mov
in
mov
jo
das
into
push
push
push
dec
xor
ror
das
lods
push
sbb
iret
(bad)
sub
dec
push
jae
int3
sub
jle
loopne
or
mov
in
mov
xor
pusha
adc
xor
addr16
movaps
or
adc
add
inc
cmps
enter
sub
jno
jne
add
and
int
xchg
sbb
cmps
cmp
push
pop
sub
mov
aam
or
int
xor
and
outs
lods
outs
jnp
pushf
xchg
in
pop
dec
add
push
dec
nop
dec
inc
cmp
data16
mov
inc
dec
cmps
nop
lea
mov
les
sub
sbb
out
mov
jbe
out
push
pop
adc
je
daa
daa
daa
stos
jecxz
xor
test
add
mov
or
or
gs
and
(bad)
bndldx
xlat
js
inc
mov
dec
and
adc
aaa
dec
dec
add
ja
movs
dec
inc
pop
mov
ins
jae
mov
stos
xor
sub
add
mov
xor
es
or
dec
cmp
dec
in
cmp
addr16
push
pusha
jle
mov
test
inc
jge
pop
out
push
stos
mov
xchg
loopne
mov
or
and
clc
cmc
sti
adc
pop
aaa
add
pop
fst
loopne
add
xchg
sbb
je
and
inc
jne
jno
call
test
pop
inc
jne
loopne
inc
(bad)
add
pop
inc
push
hlt
adc
popa
cmp
pop
aas
test
fwait
test
add
loope
mov
xor
daa
or
mov
ds
jg
fistp
cmp
loopne
xor
add
inc
retf
xor
cmp
retf
xchg
pop
retf
mov
clc
out
clc
or
and
mov
or
mov
(bad)
fsubp
jmp
sbb
int3
(bad)
mov
fild
movzx
sub
jb
je
(bad)
jg
(bad)
inc
(bad)
xor
push
inc
push
mov
push
push
lea
mov
mov
mov
nop
xchg
mov
push
shl
movs
test
je
xor
cmp
cld
xor
adc
(bad)
(bad)
mov
hlt
and
pop
sbb
adc
inc
xchg
push
paddsb
ret
or
nop
inc
fisubr
sbb
add
or
inc
mov
mov
pop
pop
pop
ret
lock
pop
(bad)
push
push
push
mov
jo
sub
push
push
mov
cmp
cmp
jne
push
mov
std
fild
and
pop
pop
ret
nop
fdiv
test
fbstp
cmp
xor
inc
push
loopne
xchg
dec
and
jne
adc
imul
mov
adc
and
sub
ficom
daa
es
setne
(bad)
jge
rol
push
je
mov
mov
jl
add
mov
sbb
stos
pop
test
mov
or
adc
mov
push
mov
in
(bad)
mov
add
add
(bad)
es
push
dec
clc
jle
mov
call
mov
sub
xor
test
jg
mov
(bad)
clc
mov
xchg
mov
inc
and
add
aas
jl
push
mov
push
imul
cld
lods
mov
dec
je
dec
dec
outs
mov
inc
into
mov
jg
popa
push
fld
push
sbb
hlt
xor
push
push
movs
cmp
push
mov
lea
rol
push
inc
push
call
adc
loopne
push
xor
xchg
ss
push
int3
stos
popa
mov
dec
ins
in
outs
fucomip
(bad)
iret
adc
pop
pop
pop
adc
jo
jmp
into
clc
(bad)
sbb
add
or
aas
cmp
cwde
cmp
xchg
jl
jmp
in
sub
mov
dec
lods
push
add
sar
out
inc
jbe
adc
inc
jne
mov
mov
dec
ja
stos
mov
arpl
out
push
repz
jo
cmp
fld
inc
mov
scas
icebp
and
sbb
ss
in
lods
dec
cmp
mov
cmp
pop
das
jle
xlat
push
inc
xchg
clc
inc
dec
cs
push
loopne
scas
cmp
out
add
test
mov
(bad)
ucomiss
or
fisubr
repnz
dec
imul
call
fs
inc
cmp
push
aas
arpl
xchg
inc
cmp
jl
inc
out
add
jp
(bad)
pusha
daa
sub
add
sahf
mov
add
aaa
jb
push
pushf
push
pop
cmps
push
pop
sar
rol
xchg
add
sti
add
(bad)
add
je
fist
cs
jmp
(bad)
ja
fucomi
adc
xor
cmp
sete
test
adc
cmp
jl
movs
pop
cdq
mov
ficom
retf
mov
scas
scas
(bad)
repz
movs
sub
xchg
ret
in
repnz
pop
(bad)
aaa
clc
shl
ss
sti
pop
js
and
add
sub
push
mov
dec
sub
jmp
and
mov
cmp
scas
and
xor
dec
push
xor
sbb
outs
adc
sbb
outs
outs
inc
mov
or
jl
inc
xor
pop
pusha
or
loopne
adc
xor
ss
inc
or
dec
dec
jne
cmps
sbb
test
jmp
ins
mov
pop
mov
sahf
fstp
push
fld
imul
add
push
or
fild
test
cmp
pushf
dec
test
jne
test
jne
shl
dec
adc
dec
adc
or
fs
adc
dec
sbb
dec
shl
sub
dec
shl
xor
xor
in
add
inc
inc
call
jb
or
push
out
into
or
loope
ret
mov
sub
sbb
fimul
mov
call
or
mov
mov
cmp
je
sub
jg
and
or
je
mov
test
movs
dec
je
and
and
mov
imul
adc
enter
pusha
sbb
and
clc
lea
mov
adc
sbb
cwde
jmp
inc
(bad)
mov
(bad)
adc
and
gs
pop
inc
cmp
xchg
dec
inc
cmp
jne
mov
dec
mov
inc
add
fdiv
pop
or
je
jmp
cmp
mov
add
inc
jmp
inc
sub
push
and
mov
dec
icebp
or
int3
dec
push
cmp
test
add
add
inc
out
shl
mov
fucomi
add
repz
jmp
cmps
mov
add
ret
push
mov
adc
or
jmp
loopne
mov
sbb
or
xchg
or
push
pop
sub
test
and
or
mov
pop
icebp
push
mov
inc
adc
(bad)
mov
fs
mov
cmp
jp
and
mov
ss
mov
fwait
and
rol
mov
jmp
aad
xor
xor
jle
mov
push
(bad)
std
pop
xchg
mov
ja
mov
out
push
jge
xor
or
fadd
mov
test
rcr
inc
inc
or
iret
test
call
add
test
push
sbb
mov
mov
mov
jle
and
aaa
sub
sub
pushf
sbb
mov
add
and
dec
test
mov
call
adc
push
mov
mov
mov
test
xor
jae
mov
jmp
sar
adc
lods
pusha
shl
push
sub
ret
popf
(bad)
mov
and
or
mov
inc
lods
push
cld
and
and
push
popa
mov
aaa
jo
cs
ins
xchg
xchg
mov
cmp
movzx
mov
fistp
push
pusha
sbb
lea
lea
movs
add
fcmovbe
mov
dec
dec
test
lds
into
xchg
or
mov
sub
lds
shl
mov
mov
inc
cdq
xor
sub
pop
ret
adc
lock
cmp
or
es
ja
fbld
cs
cmp
stc
or
and
ret
loopne
les
cmp
push
bound
mov
xor
lock
fild
test
and
dec
or
adc
rcr
inc
sahf
add
lock
fnstcw
neg
lea
inc
cli
dec
loopne
and
adc
cmp
enter
jne
pop
daa
fstp
cwde
cmps
mov
push
mov
call
jne
mov
cmp
in
jmp
cmp
pop
loop
sbb
(bad)
and
push
or
lods
jne
jl
hlt
sub
add
or
loope
mov
add
adc
xor
or
mov
or
add
xchg
dec
mov
(bad)
inc
inc
loop
lea
or
adc
cmp
mov
push
xor
movs
push
adc
xor
loope
loopne
daa
xchg
dec
es
je
jo
and
cmps
test
inc
outs
inc
push
and
jmp
int
inc
add
cwde
scas
sbb
push
mov
in
sub
add
dec
add
fistp
clc
cmps
push
dec
pusha
push
cld
or
inc
mov
and
push
push
std
push
je
add
repnz
mov
mov
inc
aam
not
dec
les
je
fidiv
mov
leave
mov
cmp
fnsave
mov
inc
cmp
je
mov
je
xor
cwde
dec
xchg
mov
(bad)
mov
aad
sub
add
in
or
pop
and
inc
inc
pop
inc
or
mov
(bad)
retf
sar
push
xor
cmp
push
jmp
data16
push
dec
sub
iret
xor
ficomp
cli
or
loop
mov
or
jl
sbb
adc
shl
mov
lock
cmp
(bad)
je
push
test
jo
xchg
mov
fcomp
xor
pop
lods
(bad)
pushf
pop
nop
push
mov
retf
js
mov
add
push
cmps
sbb
adc
inc
inc
xchg
push
lods
jo
push
dec
add
(bad)
cmp
sub
inc
dec
jne
in
fsub
cmp
cwde
pop
push
fisttp
adc
or
test
sbb
sahf
push
loop
outs
sub
jnp
adc
popa
clc
lock
mov
imul
adc
pop
and
(bad)
or
and
inc
lahf
call
sbb
in
sbb
cld
pop
add
adc
add
or
hlt
or
lock
das
clc
out
cmp
ror
and
cmps
add
call
pusha
aad
mov
fidivr
fld
fld
jmp
mov
pop
cli
movs
mov
mov
loope
inc
xor
jmp
and
add
and
adc
add
xor
cmp
je
cmps
sbb
pop
push
xor
jmp
das
lds
in
ret
jmp
xchg
fisttp
add
mov
push
or
loopne
jno
add
fdiv
jle
sub
mov
push
fcom
mov
fnsave
shr
xchg
xor
cmp
mov
and
vsqrtps
mov
cmp
aam
je
test
pop
out
fs
bound
jo
push
push
xchg
and
or
mov
std
ds
inc
xchg
jo
push
or
and
add
mov
std
(bad)
fdivr
jmp
push
les
repz
or
addr16
mov
fistp
sub
pop
lods
in
(bad)
ds
sbb
sub
inc
push
es
mov
mov
or
adc
ins
cld
test
mov
sbb
rcr
cld
js
xlat
mov
sub
mov
outs
mov
add
adc
in
sbb
add
cmp
je
push
xor
jb
ss
xor
lods
mov
jmp
movs
adc
pop
adc
and
inc
add
adc
lea
rcr
pop
bound
xchg
push
sbb
push
sbb
dec
xchg
out
push
mov
mov
cmovae
call
out
mov
js
adc
inc
popa
and
cmp
cmp
jl
or
sbb
sbb
adc
or
mov
mov
aas
jmp
mov
pop
and
inc
jmp
pop
dec
hlt
(bad)
mov
xor
sbb
add
add
gs
sub
test
fcomp
ins
pop
cmps
test
inc
inc
loopne
add
cld
call
mov
mov
or
pop
fxch
and
pop
mov
ss
in
popa
js
push
inc
cld
jle
pcmpeqb
sbb
(bad)
push
aaa
ret
xchg
add
inc
sar
cmp
pop
test
les
cmp
dec
sbb
xor
sbb
mov
js
dec
add
and
les
ror
push
pop
shl
xchg
adc
xchg
ins
sbb
fsub
call
mov
add
adc
pop
mov
ds
inc
dec
mov
or
stc
test
jle
mov
pop
sbb
mov
fild
pushf
(bad)
mov
fwait
jmp
xor
mov
sub
inc
push
int3
mov
inc
retf
jle
mov
mov
sub
popa
mov
mov
cmp
lods
inc
xor
in
xor
aam
adc
push
add
sbb
pop
je
cmp
cdq
(bad)
arpl
inc
pop
sub
mov
xchg
aas
or
sbb
or
or
sub
jno
test
push
pop
jae
sbb
jecxz
mov
rcr
push
push
mov
mov
or
xchg
cmp
dec
les
jb
pop
ss
pop
movs
sbb
add
cmp
les
and
add
dec
jl
in
dec
xor
mov
leave
das
xchg
sbb
jo
push
lods
adc
mov
cmp
je
ror
ins
mov
frstor
outs
pop
sub
xor
sbb
outs
cmp
hlt
or
es
or
lock
mov
jg
pop
dec
fcomp
sbb
push
ds
mov
retf
jno
mov
mov
int3
push
or
inc
pop
sub
clc
sti
xor
sub
jmp
xchg
out
add
add
xchg
sub
sub
hlt
mov
mov
xchg
jecxz
scas
push
sbb
jne
mov
mov
mov
and
sbb
push
mov
or
movs
add
xor
iret
add
xor
push
sub
hlt
xor
lahf
pop
jo
add
sbb
popf
xchg
fsubp
cmp
retf
dec
icebp
ror
mov
adc
sub
movzx
mov
and
test
or
jmp
inc
loopne
scas
cmp
lock
xchg
ror
shl
pusha
mov
sub
xor
add
or
arpl
or
add
xchg
je
stc
push
cmp
push
and
adc
adc
sbb
adc
sub
mul
sbb
ret
shl
jbe
pop
imul
adc
push
inc
jne
inc
pop
mov
lahf
push
mov
push
jg
xor
or
push
clc
cmp
or
jecxz
aas
or
cmp
or
lahf
test
pop
cmp
sbb
add
jne
mov
ret
or
loopne
cwde
jb
adc
add
movs
test
jo
xchg
imul
adc
adc
rol
push
test
jbe
and
adc
cmp
out
aam
(bad)
dec
rol
cmp
xor
nop
retf
inc
xor
jnp
ins
sub
push
jecxz
dec
in
adc
xchg
push
push
mov
sbb
inc
imul
cmp
sub
jnp
daa
jmp
fwait
lods
dec
adc
sub
int
bound
stc
mov
or
pusha
mov
xchg
outs
xchg
dec
mov
push
xchg
js
adc
jb
imul
in
sub
ja
push
imul
sbb
mov
bound
sahf
inc
loopne
cmp
cmp
mov
mov
pop
mov
(bad)
fdivr
jo
cs
out
dec
mov
sub
clc
mov
mov
add
mov
aaa
push
add
add
mov
iret
jg
cli
lea
(bad)
jns
and
add
clc
loope
mov
pop
mov
aas
push
call
ret
inc
mov
inc
cld
mov
rol
add
in
push
mov
xchg
je
adc
fist
or
inc
pop
sbb
imul
adc
lock
mov
lahf
dec
mov
cmp
rcr
mov
dec
mov
add
inc
mov
inc
jno
sbb
ins
ret
add
xor
cmps
loopne
sbb
pop
pop
pop
dec
cld
push
jo
rol
hlt
pop
ins
test
out
xchg
mov
in
adc
call
dec
cmps
rcr
or
adc
cld
inc
out
sub
xchg
inc
pop
adc
cmp
sub
shl
add
push
cvtps2pi
push
pushf
add
add
retf
inc
mov
push
in
sub
ret
cvtps2pd
adc
adc
iret
or
push
jbe
ins
push
ret
unpcklps
mov
out
add
fcomp
je
mov
shl
inc
pop
cmp
pusha
sar
loope
cmc
inc
aaa
cmp
push
jge
xchg
mov
mov
mov
adc
sbb
nop
xchg
data16
repnz
in
aas
cmp
pop
and
adc
add
inc
shl
aaa
pop
icebp
dec
ret
add
or
lds
and
fsub
aam
push
adc
adc
int3
pop
or
ins
lock
aad
or
pop
dec
jo
mov
dec
pop
sub
jb
outs
dec
je
add
jmp
cmp
je
adc
leave
jbe
push
adc
out
outs
(bad)
jae
sbb
dec
and
int
xor
mov
adc
loopne
inc
mov
pop
cmp
aaa
div
adc
dec
adc
punpckldq
pushw
sbb
(bad)
rcl
sub
or
sbb
stos
loope
sub
pop
and
sbb
mov
dec
leave
jnp
pusha
(bad)
int3
xchg
inc
imul
pop
sbb
scas
dec
adc
jns
and
pushf
mov
jge
cmps
jmp
add
aas
cmp
not
(bad)
je
cmp
inc
mov
ficom
push
(bad)
inc
imul
mov
pop
loopne
in
ss
int3
dec
repnz
add
aam
push
das
ja
shr
mov
mov
mov
jecxz
cmp
add
pop
shl
test
sub
(bad)
cmp
and
in
std
(bad)
sbb
stos
sbb
pop
mov
pop
ror
cdq
in
je
add
add
or
cmp
or
inc
cwde
jo
or
adc
dec
sbb
les
inc
jno
inc
mov
lahf
ja
popa
add
in
aas
xchg
test
loopne
inc
mov
xchg
or
je
push
retf
loop
jae
pusha
cmp
int3
add
xor
mov
mov
mov
stos
inc
imul
sub
dec
or
and
or
cmp
push
push
cmp
int3
mov
jp
push
packuswb
jb
scas
push
dec
(bad)
mov
push
add
ror
xchg
gs
shl
inc
mov
inc
xchg
stos
addr16
xchg
adc
xchg
add
add
dec
aas
mov
outs
ficom
inc
pop
push
xor
lahf
jne
stos
push
iret
pop
ds
jnp
push
outs
aad
ret
adc
loopne
imul
adc
cmp
aam
je
mov
out
ret
jl
jne
xor
or
sbb
scas
add
adc
and
or
mov
aas
or
push
int3
loop
jg
lds
shr
test
nop
cmp
xchg
jl
dec
mov
rol
pusha
int3
hlt
lods
cmp
inc
mov
mov
std
add
outs
add
jae
retf
dec
xchg
adc
ins
or
int
dec
mov
push
sbb
adc
ret
mov
mov
int3
mov
inc
inc
imul
push
push
ins
sbb
pop
je
mov
add
pop
jp
sbb
inc
or
sub
je
lods
add
jo
xor
pop
adc
push
push
adc
adc
inc
sbb
js
(bad)
push
cs
push
push
mov
push
aad
adc
ficom
aad
stos
mov
add
scas
and
bound
scas
les
mov
adc
loope
xchg
dec
and
hlt
push
and
rcl
cmp
pushf
pushf
inc
adc
jle
in
xor
inc
xor
adc
push
jo
and
adc
retf
retf
or
daa
enter
jmp
loopne
sti
xlat
gs
js
add
mov
inc
pop
cld
push
ror
pop
ins
xor
imul
or
adc
cmp
test
push
out
mov
xor
ins
add
movs
and
cmps
push
jo
push
dec
lock
pop
jae
or
jmp
iret
inc
cmp
cmp
pop
dec
adc
adc
call
sub
jae
pop
call
jmp
push
or
into
dec
pop
cmp
test
mov
inc
inc
push
inc
je
cmp
and
adc
adc
mov
mov
xchg
dec
sbb
or
dec
jge
adc
out
pop
xor
neg
sbb
push
push
cmp
push
pop
(bad)
sbb
call
adc
dec
cmps
movs
mov
xlat
loope
jno
popf
leave
xor
inc
push
push
js
shl
adc
rep
cmp
push
sbb
and
test
jne
in
mov
cmp
je
adc
xor
push
mov
push
jne
adc
aad
dec
repz
jne
lods
pop
dec
xchg
adc
and
movd
or
pop
mov
xchg
das
loopne
mov
push
clc
rol
ja
mov
test
scas
inc
js
adc
fs
inc
shr
push
or
or
pushf
fimul
mov
cmp
sbb
push
mov
mov
call
into
xor
sbb
out
add
and
popa
cld
fld
mov
std
lea
enter
mov
je
dec
je
stos
ret
mov
inc
xchg
adc
sub
iret
sub
mov
sti
inc
sbb
je
or
bound
cmp
rol
cmp
add
fs
cld
jbe
stos
xor
cmp
sahf
mov
pop
outs
mov
sbb
movs
or
scas
sub
pop
lods
add
cld
mov
scas
loope
dec
sbb
pushf
jmp
push
jno
(bad)
sbb
sub
lea
pop
mov
xchg
js
dec
scas
fwait
mov
je
push
or
repnz
or
and
jb
xor
jb
pop
cmp
outs
mov
cmp
push
mov
or
adc
mov
(bad)
cld
lock
pop
aam
fild
test
pop
mov
dec
mov
rol
mov
push
inc
jne
movs
xchg
cmp
and
jmp
daa
mov
rol
imul
jecxz
add
push
mov
inc
ins
cmp
enter
pop
fs
add
sti
arpl
js
cmp
cmps
inc
jo
scas
mov
jg
test
push
pusha
push
adc
sbb
std
dec
cmc
dec
sub
setb
push
add
rcl
jo
adc
cmp
jne
xor
sub
add
sbb
push
dec
push
mov
movs
mov
or
movs
xchg
cmps
add
xchg
(bad)
xchg
pop
sub
push
push
pop
or
sbb
push
cli
stos
push
je
pop
add
or
aam
lea
lea
aad
jg
jg
add
pop
cli
adc
sub
and
pop
mov
jecxz
fs
push
imul
mov
inc
mov
cld
push
mov
pop
aad
xchg
ins
aas
into
mov
inc
iret
xor
sub
jae
adc
sub
push
iret
inc
xor
or
mov
or
addr16
xchg
pop
cmp
faddp
lock
add
test
pushf
jp
enter
cmp
push
call
xor
sar
jns
adc
xor
sti
add
push
(bad)
push
adc
add
mov
lods
(bad)
fidivr
in
push
adc
mov
jle
pushf
and
fbld
xchg
test
je
or
je
test
sbb
dec
mov
inc
popa
sub
mov
ror
je
or
enter
pop
fcomp
xor
inc
das
xor
fadd
aad
mov
dec
xchg
mov
adc
jmp
std
ja
mov
push
fbld
inc
jae
push
dec
data16
or
loop
or
dec
xor
pop
cwde
or
outs
iret
mov
outs
out
push
cdq
add
nop
test
imul
neg
xor
add
mov
outs
out
js
aad
clc
icebp
lea
sub
fstp
js
pop
add
sbb
or
and
adc
in
and
popa
dec
and
test
je
ss
paddq
cmp
sbb
fs
jmp
fldenv
xor
push
retf
in
(bad)
ret
push
sti
mov
jnp
scas
xchg
mov
sub
sub
and
sbb
adc
xchg
sub
and
nop
retf
mov
cs
jbe
cmp
fs
pusha
xor
sti
rol
pusha
cwde
dec
pop
out
pusha
xlat
add
xchg
sub
jge
shr
mov
sub
mov
jne
jmp
adc
cmp
adc
mov
mov
call
inc
lods
pop
(bad)
xor
nop
adc
or
lahf
jne
ret
test
adc
and
mov
mov
push
jo
int3
add
les
push
std
aad
ret
mov
dec
mov
or
loop
push
mov
add
dec
or
sub
or
dec
pminub
sub
sub
js
sub
sub
sub
dec
pop
aad
push
rcr
(bad)
push
test
mov
xchg
lea
inc
adc
cmp
mov
xor
outs
jge
add
inc
pop
adc
xor
push
push
pop
test
pop
jg
mov
push
push
aam
mov
dec
fld
pop
pop
ins
hlt
pop
add
push
push
add
or
retf
test
aad
clc
push
hlt
mov
jbe
out
and
inc
adc
xchg
push
mov
inc
and
add
jno
mov
or
gs
sbb
mov
(bad)
cmps
pop
ret
rcl
stos
mov
add
cmp
pop
pusha
add
add
adc
pop
test
call
add
jbe
push
push
add
out
sbb
bound
add
imul
test
add
adc
or
movs
loopne
mov
dec
xor
jne
adc
sbb
add
add
scas
cmp
ret
ins
pop
test
and
movs
ret
pop
cs
enter
sub
add
cmps
jo
int3
cld
pop
addr16
push
or
dec
pop
rcl
fcmovu
xor
outs
or
lock
add
pop
(bad)
mov
inc
push
paddd
add
add
clc
pop
xchg
repnz
adc
mov
adc
sbb
js
mov
das
add
mov
mov
or
push
sbb
ret
iret
cmp
mov
fdiv
lock
je
or
cld
xchg
sub
jecxz
sbb
push
cmp
push
leave
jo
pop
ds
mov
call
push
cmp
je
add
dec
sub
mov
cmp
sbb
int3
mov
add
jnp
lock
mov
daa
ja
stos
jnp
test
adc
je
test
in
add
fst
pop
pop
mov
enter
xchg
jecxz
scas
jnp
xchg
adc
inc
(bad)
dec
aas
cmp
int3
adc
leave
inc
or
dec
inc
jmp
pop
adc
add
not
adc
mov
inc
lds
push
les
push
pop
cmp
or
sbb
je
inc
fnstcw
dec
and
loopne
lea
cs
push
div
or
in
cmp
je
mov
mov
test
imul
bound
jbe
xchg
xchg
add
das
jp
shr
sbb
inc
pusha
and
jne
push
add
lods
pop
lock
push
push
mov
add
mov
(bad)
fucomi
add
sar
sahf
and
imul
loop
xor
adc
xchg
cmp
hlt
mov
push
mov
and
lods
sub
push
mov
mov
mov
pop
dec
rcl
adc
sar
rol
fidiv
mov
in
(bad)
xchg
pusha
inc
in
shl
rcr
sar
test
pshufw
adc
int3
or
rol
xchg
cmp
mov
stos
mov
mov
push
inc
imul
adc
push
and
xor
xor
or
outs
fild
fist
push
mov
aam
shr
mov
ret
and
rcr
xchg
test
mov
inc
mov
add
mov
cwde
mov
sbb
mov
mov
and
adc
adc
iret
or
adc
mov
dec
sub
nop
retf
add
sub
pop
adc
pop
ror
add
js
mov
push
xor
jp
call
add
push
lahf
add
mov
iret
test
push
push
push
inc
push
adc
pop
jo
out
mov
ss
cmc
aam
mov
lods
mov
sbb
aaa
aaa
or
(bad)
jno
adc
add
cmp
imul
push
push
ret
add
sbb
add
mov
cwde
das
mov
ds
(bad)
mov
or
pop
in
xlat
cmp
or
mov
mov
xchg
dec
nop
pop
or
nop
imul
or
pop
push
loop
pop
adc
adc
cmp
push
bndstx
and
into
jbe
inc
sub
setnp
push
seto
rcr
data16
push
maskmovq
idiv
push
jl
inc
cmp
sbb
and
in
or
push
je
xor
cmc
in
add
dec
sub
add
lea
outs
inc
lea
clc
fimul
mov
aas
cmovo
sub
add
aas
sub
cmp
sti
mov
lods
lods
or
adc
sub
(bad)
loop
mov
or
outs
push
mov
cld
aad
inc
(bad)
ins
jmp
dec
ret
ins
hlt
or
scas
add
inc
mov
cmps
mov
idiv
(bad)
jg
repnz
cmp
je
mov
mov
push
sub
retf
sbb
inc
jno
mov
addr16
xor
icebp
pop
imul
inc
fs
or
xor
cmp
or
je
shl
out
or
mov
shl
or
imul
mov
push
ret
xchg
lds
pop
cmp
pushf
push
cmp
add
imul
in
fs
iret
hlt
lods
std
addr16
push
sbb
jle
or
mov
sbb
scas
mov
pop
scas
lock
inc
sub
sbb
inc
dec
mov
stos
outs
loop
sbb
add
and
fdivr
out
popa
pop
push
jo
ins
mov
pusha
icebp
xor
sbb
dec
dec
jo
xor
push
cmp
ret
dec
inc
pusha
inc
sub
js
sbb
mov
mov
out
stc
xor
clc
enter
or
mov
clc
or
or
mov
aam
aad
(bad)
sub
sbb
popf
loop
imul
jne
adc
enter
jne
pop
shl
xor
and
hlt
lock
dec
ret
pop
cmps
test
ror
cmp
inc
pop
pusha
pop
pop
aas
push
or
dec
and
xor
imul
and
jo
pop
in
fs
ins
dec
loopne
or
verw
adc
dec
inc
(bad)
push
outs
cmp
daa
movzx
push
push
or
or
push
retf
loop
popf
cmp
call
fiadd
ins
jo
or
push
ror
xchg
in
sbb
lock
shl
je
ret
jne
jmp
cmp
sub
pop
dec
movs
ficomp
enter
test
dec
add
inc
jne
inc
mov
lahf
pop
sbb
dec
fdivrp
test
into
hlt
xor
or
les
shl
xchg
dec
pushf
cmp
sub
pop
inc
mov
and
cmps
dec
cmp
mov
adc
test
inc
sbb
xor
aaa
mov
push
inc
test
jne
fadd
and
pop
out
xchg
jmp
push
in
pop
mov
mov
jo
jg
mov
push
retf
add
fsub
mov
imul
sbb
scas
fist
mov
pop
xchg
sub
mov
ja
cmp
xchg
pop
out
cmps
jl
jecxz
stc
adc
adc
inc
sub
jp
test
or
shl
mov
jno
jb
(bad)
and
outs
cli
mov
cmp
pop
push
push
addr16
inc
icebp
shl
out
popa
cmp
int3
add
nop
jmp
cmp
mov
mov
lods
jo
popf
mov
dec
out
mov
or
or
gs
sbb
sub
push
aaa
in
push
scas
icebp
sub
aam
pop
and
and
aaa
push
iret
shl
or
fiadd
push
and
or
mov
mov
into
xchg
cmp
(bad)
lock
test
adc
or
lock
xor
jns
mov
int3
cmp
jle
in
mov
mov
repnz
test
add
sub
call
lods
push
and
xchg
dec
add
jge
cmp
imul
push
sbb
adc
cmc
cmp
lahf
lock
push
cwde
stos
dec
adc
and
outs
xlat
sbb
xlat
sbb
sbb
popf
cmp
fiadd
adc
lods
ds
jne
(bad)
mov
jo
test
mov
fisttp
sti
scas
sbb
sub
jmp
adc
pop
icebp
pop
ins
fwait
lea
fld
push
popa
add
sub
adc
or
outs
add
outs
or
cdq
jmp
icebp
sub
inc
lea
js
cmp
lds
jae
cli
adc
mov
inc
pop
push
outs
push
mov
and
call
pop
xor
sar
mov
or
loope
pop
jecxz
add
xchg
or
loopne
daa
add
pop
add
adc
mov
lods
pop
xchg
sahf
cmp
push
in
add
out
mov
mov
jnp
pop
push
mov
mov
inc
mov
or
outs
pop
cmp
cmp
jg
nop
pop
push
icebp
or
jge
push
icebp
mov
or
repz
neg
push
enter
repnz
repz
adc
cmp
jns
mov
mov
pop
test
setl
neg
sub
mov
xor
je
call
sub
fdivr
lea
stos
in
gs
aaa
inc
loop
shr
adc
mov
clc
js
(bad)
lods
adc
and
clc
dec
das
mov
adc
inc
xchg
bound
(bad)
mov
push
cmp
pop
xchg
pop
jmp
test
mov
(bad)
pop
fwait
pop
or
xor
jmp
cwde
xchg
pusha
loopne
adc
aas
mov
mov
fadd
cmp
jge
pop
add
(bad)
fs
fcomp
jmp
sub
add
sbb
test
js
push
dec
cwde
outs
adc
xlat
adc
or
or
inc
sub
add
add
inc
in
vunpckhps
ret
cmp
(bad)
mov
xlat
out
test
sbb
inc
sbb
sub
cmp
(bad)
aaa
xchg
mov
inc
mov
gs
jg
xor
adc
push
test
sub
inc
jbe
jns
dec
dec
and
jge
jb
in
ret
das
mov
xchg
jmp
cli
dec
aam
xor
xor
sar
enter
loopne
pop
jo
in
or
mov
mov
or
sub
jb
je
outs
pop
loopne
add
dec
and
xchg
xor
xchg
cmp
adc
popf
test
push
ret
inc
movs
pop
add
fbld
cmps
fidivr
lock
or
xor
cs
cdq
xchg
mov
xor
or
shl
retf
or
mov
out
add
test
add
mov
jnp
stos
adc
sub
nop
cdq
push
cmc
push
adc
add
js
div
jmp
push
push
pop
and
push
or
mov
pop
sbb
(bad)
xor
pop
pushf
inc
aam
scas
das
popf
stos
inc
xchg
jno
adc
ins
popa
jp
mov
sbb
cli
scas
jne
cdq
ds
mov
xchg
sti
shl
inc
shl
or
inc
adc
inc
aam
push
pop
je
cmp
das
xchg
inc
push
mov
call
scas
shr
idiv
ror
push
out
mov
and
sbb
mov
push
xor
arpl
lea
sub
stos
scas
or
shl
icebp
add
push
sbb
fld
jne
xchg
in
cmp
pop
cmp
adc
call
imul
(bad)
fisub
dec
inc
repnz
js
adc
stos
rol
or
ins
xor
push
inc
inc
sub
sti
out
mov
and
mov
mov
mov
xor
call
clc
mov
ds
retf
adc
sbb
sbb
gs
jmp
dec
add
in
sub
push
adc
adc
and
and
xchg
and
in
arpl
jp
mov
pop
mov
imul
sbb
inc
push
in
cmp
adc
mov
mov
mov
xchg
cmp
data16
sbb
jg
aaa
mov
loop
dec
add
sbb
clc
jnp
jp
shr
sub
cwde
xchg
dec
mov
dec
pop
add
dec
add
push
fsub
mov
xor
add
iret
ja
pop
je
loope
push
(bad)
xor
mov
stc
sbb
xchg
ja
les
xchg
rol
clts
out
sbb
mov
inc
(bad)
lock
je
mov
mov
scas
inc
mov
or
push
leave
push
inc
test
push
test
je
add
sub
jae
mov
ds
outs
mov
sub
jae
test
mov
or
mov
inc
xchg
fcom
dec
jp
das
sbb
sub
(bad)
fsub
and
clc
nop
and
jae
mov
test
retf
adc
inc
rcr
cmps
sbb
in
call
mov
cwde
xchg
add
mov
test
push
fwait
mov
sahf
(bad)
push
ins
rcl
add
xchg
xor
cmps
ror
push
add
dec
repnz
mov
(bad)
ret
push
(bad)
pop
scas
cmp
xchg
inc
adc
push
or
jbe
test
clc
mov
sub
in
out
cs
xor
es
aaa
ret
movs
xor
or
out
add
fidiv
mov
dec
or
jle
push
mov
jle
out
pop
jmp
add
int3
lock
sub
jge
jecxz
scas
mov
and
sahf
add
jle
cmp
pop
je
ret
pop
xor
jnp
add
pop
xor
or
cmps
nop
pushf
cmp
inc
fs
cmp
rcr
rol
inc
adc
or
dec
dec
adc
dec
lods
jne
push
mov
cli
sub
daa
mov
test
add
js
jo
inc
push
pop
int
dec
mov
ins
test
in
add
lock
add
inc
cmp
push
add
xor
cmp
or
jmp
out
mov
inc
sbb
std
mov
call
fdivp
push
in
inc
inc
push
push
or
sub
pop
mov
mov
and
lock
cmp
or
add
sub
rcr
sahf
or
pop
jne
cmp
clc
ins
push
add
in
dec
or
lock
dec
aas
sub
call
mov
test
add
or
xor
(bad)
bound
call
xchg
je
push
loope
jns
sub
js
adc
jo
out
jb
adc
pusha
xor
loopne
shl
or
jne
and
pop
fwait
les
add
clc
pop
push
push
clc
and
jno
xchg
xchg
push
lods
xchg
pop
jo
mov
or
or
inc
mov
aas
sbb
sti
in
push
mov
bound
inc
lahf
mov
inc
mov
scas
loopne
rol
add
in
scas
xor
pushf
mov
mov
cmp
sahf
or
ins
lahf
loop
xor
test
mov
push
adc
push
pusha
les
adc
xor
pop
sbb
inc
sub
sar
cmp
inc
sbb
loopne
int3
inc
fmulp
gs
mov
xchg
rcr
outs
add
mov
(bad)
mov
or
cmp
jmp
adc
js
into
jb
sbb
sbb
mov
aas
mov
inc
sbb
pop
lea
dec
jl
test
xchg
push
shl
movzx
test
mov
pop
add
clc
add
push
push
or
dec
adc
or
je
cmp
in
xchg
aam
cmp
cdq
jg
cmp
cmps
cmp
or
pop
dec
jmp
sbb
push
test
xorps
fiadd
clc
fidivr
jmp
cs
test
fmul
in
movs
xor
popa
pop
je
pusha
jne
and
cmp
inc
sub
inc
js
jae
iret
test
sbb
cmp
es
pusha
adc
cmp
and
xor
jecxz
mov
dec
rcl
cmps
movs
jo
or
add
sbb
sbb
adc
mov
jbe
inc
jo
xchg
rcl
clc
das
mov
rcr
dec
sub
jb
call
enter
out
jmp
adc
lahf
pop
div
js
fistp
and
sub
jne
xchg
adc
push
dec
shl
add
adc
or
rcr
mov
cdq
inc
push
mov
out
sbb
jecxz
mov
pop
dec
in
and
pop
in
in
mov
push
push
in
cdq
inc
push
in
sub
jne
rcr
push
loop
cdq
inc
pop
popa
jnp
add
shr
out
out
rcr
out
pop
into
xchg
out
inc
pop
out
adc
cs
jo
push
lods
outs
push
adc
or
daa
adc
stos
pop
mov
push
adc
shr
jmp
loopne
(bad)
jns
pop
mov
mov
mov
pop
cmp
dec
les
or
or
mov
iret
add
dec
jmp
mov
mov
lods
mov
outs
dec
outs
in
inc
mov
aam
adc
dec
push
add
lea
cmp
add
daa
mov
add
adc
mov
add
(bad)
pop
or
dec
add
inc
add
outs
jle
jb
ins
fwait
add
inc
add
sub
ret
fdivr
arpl
inc
dec
add
pushw
add
ror
ins
and
test
mov
dec
je
cmc
xchg
pop
mov
dec
out
xchg
add
mov
div
(bad)
jg
aad
pop
sbb
fiadd
ins
add
(bad)
dec
xor
sbb
ror
inc
and
add
test
jne
or
les
inc
cwde
mov
push
lods
sbb
sbb
mov
adc
cmp
sub
jmp
mov
jnp
dec
rcr
pop
jg
ja
and
aam
ins
ror
sub
pop
mov
dec
inc
popa
xor
pop
add
sub
enter
pop
jle
mov
xlat
fdiv
ret
or
or
and
in
out
or
xor
nop
pop
adc
cmc
dec
pop
ins
mov
nop
cwde
aam
movsx
add
or
pop
popa
dec
xor
rcr
jp
jmp
jo
pusha
add
je
or
mov
fs
add
fimul
mov
fdivr
jle
add
push
je
xlat
xchg
jp
lods
add
sub
or
sub
ret
lea
sysret
xor
mov
and
scas
dec
lods
icebp
icebp
inc
aam
jb
dec
gs
cmp
inc
push
mov
sbb
push
dec
push
adc
xor
dec
scas
cs
and
call
(bad)
mov
or
aam
dec
imul
xchg
les
call
xlat
(bad)
nop
jg
je
push
xor
not
add
int3
push
scas
enter
(bad)
push
fidivr
pop
xor
mov
pop
popa
je
mov
fsubr
mov
add
xor
adc
lds
sub
mov
ret
pop
cwde
int3
inc
push
pop
js
dec
inc
pop
sbb
stos
push
mov
adc
mov
aas
loop
movs
or
aas
in
pop
call
sub
xchg
add
imul
and
in
mov
cmps
inc
dec
adc
js
inc
and
(bad)
fist
(bad)
dec
adc
add
mov
jge
lea
retf
sub
jmp
loop
push
fiadd
ja
push
dec
dec
xchg
idiv
dec
mov
clc
jne
adc
pop
loopne
add
and
jo
mov
push
in
stos
cmp
pop
test
or
pop
pop
mov
or
mov
je
push
int
or
dec
and
dec
(bad)
cmps
mov
jns
outs
or
and
adc
adc
xor
xor
push
or
shl
cmp
sub
mov
mov
mov
jmp
es
jbe
es
mov
and
dec
pop
pop
and
dec
adc
adc
jmp
mov
gs
sbb
inc
sbb
jne
cmp
mov
xor
test
gs
add
lods
test
push
jl
mov
pop
cmp
push
inc
nop
outs
aam
mov
call
call
test
cld
cmp
je
sub
popa
adc
push
ins
mov
or
mov
outs
mov
dec
je
cmp
cmp
mov
sub
adc
push
test
pop
rol
and
add
jle
jnp
or
pop
jl
call
pop
xchg
nop
sub
inc
jb
(bad)
sbb
mov
lea
in
mov
add
jecxz
enter
push
test
loopne
mov
push
sar
or
ror
andnps
scas
push
shl
mov
adc
add
leave
dec
js
outs
add
cmp
loop
push
lock
je
pop
mov
loop
dec
aam
lea
xor
cmp
xor
adc
push
icebp
test
retf
push
sbb
inc
ret
js
mov
mov
pop
cmp
push
mov
jle
sub
(bad)
test
cmp
movs
call
cdq
inc
ins
pusha
ins
mov
test
imul
adc
cmp
or
mov
imul
cmp
pop
push
in
test
nop
push
dec
and
lock
mov
clc
or
cmp
cli
jne
jle
and
jl
dec
mov
cmp
sub
das
fist
iret
cmp
inc
push
push
sbb
lock
dec
test
adc
sbb
(bad)
and
xchg
cmp
push
push
pusha
jae
inc
mov
scas
add
lock
cmp
pop
lock
call
aam
adc
cmp
mov
dec
sbb
add
je
push
cmp
push
in
sti
adc
cli
adc
sbb
cmp
dec
pop
sub
push
fiadd
cld
push
sbb
mov
mov
or
push
loopne
iret
or
xchg
call
shl
movs
pop
adc
mov
lea
cmp
test
jg
or
mov
repz
repnz
dec
xor
dec
inc
add
sub
clc
rcl
inc
loopne
ds
xchg
fnsave
xor
sub
mov
sub
push
add
(bad)
and
push
add
sub
push
jbe
add
xchg
fist
mov
sub
lods
push
cs
(bad)
push
dec
mov
bound
call
scas
cmp
xor
push
jmp
pop
cld
sub
lods
sub
and
add
rol
adc
or
call
mov
pop
or
test
jno
int
mov
mov
ja
je
sub
push
inc
dec
test
pop
or
mov
push
test
fst
imul
mov
push
ins
sub
es
mov
cmp
and
sahf
cmp
xchg
test
ja
add
adc
std
jge
mov
push
cmp
xchg
mov
rcr
fisub
imul
inc
push
mov
dec
inc
js
mov
or
adc
inc
pushf
sbb
mov
xchg
mov
push
test
add
mov
clc
jne
sbb
sbb
inc
mov
sbb
push
cld
mov
pusha
cmp
aam
adc
or
outs
aas
xchg
or
pop
jl
cmp
leave
inc
jb
dec
or
arpl
lahf
pusha
mov
mov
jb
jne
mov
popa
push
clc
push
nop
cmp
inc
setl
cmp
es
je
cdq
push
jne
pop
mov
call
sbb
jnp
and
inc
mov
in
inc
push
fcmovb
push
pop
inc
cld
sahf
inc
jmp
sbb
push
inc
mov
or
stos
mov
pop
enter
push
push
ss
outs
stos
iret
jecxz
and
or
fld
fcomp
mov
(bad)
fcomp
add
jne
mov
xchg
das
cmps
inc
xor
dec
arpl
xchg
lock
pop
mov
es
cmp
jg
mov
jmp
clc
fistp
push
add
ins
cmp
push
add
gs
sub
mov
sub
fisttp
fstp
mov
cmp
int
sbb
ins
and
xor
loop
fdivr
xor
fwait
out
mov
xchg
cmp
or
je
add
add
jnp
jmp
bnd
in
aam
int3
into
jo
adc
cmp
sbb
cwde
popa
enter
js
jne
iret
sub
pop
xchg
cmp
imul
push
inc
pop
push
or
add
dec
push
jo
mov
loopne
lods
mov
and
add
pop
xabort
shr
push
mov
add
and
jmp
mov
mov
retf
xor
bound
add
movs
or
mov
shr
data16
jbe
(bad)
jp
and
mov
ret
xor
pop
lahf
jle
jnp
call
jne
push
cmp
and
jl
xchg
mov
fs
adc
bswap
mov
test
mov
sbb
(bad)
mov
cmp
inc
adc
mov
(bad)
les
sbb
fcom
jo
ins
les
or
or
mov
dec
movs
aaa
adc
aam
pop
and
jge
jmp
sub
data16
aaa
push
dec
data16
call
jo
jbe
data16
(bad)
mov
int
call
push
ds
xor
or
add
jnp
sub
sbb
push
loope
jnp
mov
sbb
and
mov
mov
dec
xchg
ret
xchg
fisubr
ins
sub
arpl
shld
add
jg
pop
test
mov
pop
mov
lds
xor
clc
add
loope
mov
or
mov
leave
mov
pop
call
pop
add
or
mov
jno
push
xchg
jne
or
inc
lock
cmp
lock
out
push
cmps
xor
mov
retf
or
in
jo
adc
cwde
xor
cmp
sbb
and
add
push
add
xchg
in
int3
cmp
adc
or
push
xor
add
push
sub
jne
enter
clc
repz
mov
pop
pop
fcomp
xchg
add
pop
jb
enter
sub
push
jb
sub
enter
lahf
pushf
pop
xchg
inc
and
adc
mov
cli
push
cmp
jo
sbb
push
je
mov
popa
cmp
dec
mov
pop
mov
push
push
mov
fdiv
adc
mov
je
pop
mov
adc
sbb
or
mov
das
xchg
cwde
jo
fisubr
mov
inc
cmps
inc
jnp
mov
fadd
dec
nop
sbb
sub
pop
and
cwde
pop
lock
nop
gs
jne
sub
data16
cwde
mov
pusha
jnp
outs
push
pop
adc
push
pop
adc
cmps
or
and
rcr
xor
mov
ret
xor
xor
fist
sbb
dec
das
fld
das
mov
adc
sbb
out
inc
cmp
(bad)
in
add
mov
(bad)
(bad)
xor
or
push
rcl
cmp
mov
fisttp
push
push
push
mov
jle
je
jl
mov
fbstp
adc
mov
dec
jnp
aaa
inc
adc
fadd
add
and
repnz
pushf
and
adc
and
mov
lea
jmp
mov
aaa
pop
inc
sbb
mov
push
mov
in
add
dec
pop
xor
mov
or
or
into
les
mov
movs
pop
mov
lock
pop
int3
sub
pop
sbb
inc
sbb
push
dec
or
jo
mov
mov
xchg
cmp
or
mov
fs
mov
(bad)
jo
add
sbb
sbb
mov
add
stc
seta
(bad)
sbb
pop
inc
xor
mov
js
lods
sbb
iret
ret
call
jp
or
lock
cwde
xchg
jge
xchg
hlt
(bad)
loop
jno
js
mov
mov
pop
xchg
xor
fisttp
mov
sub
test
dec
push
in
or
lds
aam
fbld
sub
mov
xor
inc
lds
ficomp
dec
or
ins
in
in
shr
xchg
mov
xor
cmp
mov
sbb
sub
cmp
or
outs
fidiv
stos
(bad)
hlt
mov
dec
add
pop
dec
pop
adc
add
jp
xchg
add
xor
cmps
pop
mov
mul
shr
add
jmp
fild
push
or
mov
sahf
not
loopne
mov
rcr
sbb
mov
and
jecxz
mov
adc
adc
hlt
mov
das
pop
enter
mov
mov
dec
inc
add
movs
push
fldenv
call
push
shl
and
pop
xor
push
or
mov
mov
dec
sti
aaa
out
test
jl
inc
xor
dec
(bad)
xor
inc
nop
pop
inc
sti
dec
aas
test
jl
cmp
jp
sub
clc
lods
inc
dec
jne
outs
sbb
sti
add
jnp
(bad)
mul
repz
loopne
mov
inc
add
shl
jae
cli
adc
push
pop
inc
movs
jbe
mov
out
ja
(bad)
das
cmps
outs
cmp
push
sbb
push
shl
pop
xchg
mov
mov
push
(bad)
and
adc
xor
mov
icebp
add
aas
mov
add
adc
add
adc
pop
adc
dec
adc
push
sub
cmc
rcr
jecxz
xor
jge
stc
fldcw
xor
jge
pop
test
or
cmp
add
enter
mov
sbb
(bad)
rcr
data16
mov
sbb
repz
and
(bad)
fstp
in
not
add
xor
pushf
and
mov
xchg
loope
xchg
mov
ret
inc
sub
ins
idiv
jmp
pop
jne
xchg
xor
rcr
sbb
lock
jns
adc
push
or
add
inc
retf
into
jbe
in
in
jmp
sub
jmp
arpl
mov
leave
xor
mov
in
ss
jo
sbb
mov
jp
adc
or
or
jb
or
aad
inc
inc
xor
dec
in
push
push
cld
jp
pop
dec
sbb
mov
(bad)
push
pop
scas
pop
stc
jb
inc
or
pop
call
add
add
sub
jb
sub
stos
jo
mov
or
scas
shl
in
or
push
pushf
add
push
sub
hlt
push
cmp
ja
jmp
pop
pop
mov
push
mov
mov
lods
inc
cmp
push
fstp
sbb
add
jmp
or
or
xchg
sub
bound
xor
inc
sbb
lea
mov
add
xor
call
retf
adc
mov
mov
xor
(bad)
or
push
jne
mov
inc
in
push
cdq
add
ja
jo
cmp
push
fwait
push
mov
call
adc
shr
push
mov
add
jmp
sbb
data16
push
in
pop
jmp
xor
xor
out
test
jne
adc
add
js
or
add
push
xor
adc
cmp
std
call
outs
inc
outs
outs
je
outs
ins
cmp
add
xchg
pushf
adc
or
arpl
add
lahf
and
jb
lds
out
pop
push
jo
push
clc
mov
pop
test
and
pop
mov
add
ret
xor
adc
hlt
push
or
push
sbb
push
push
add
adc
jb
push
mov
ja
mov
cmp
sbb
jns
in
rcl
adc
jne
mov
fs
add
sub
setl
es
sbb
or
mov
pop
push
lock
setge
dec
pop
sub
jnp
add
bound
pop
fdiv
pop
ins
or
mov
jmp
dec
dec
add
(bad)
cmp
inc
mov
jg
mov
lea
or
push
push
lahf
fwait
hlt
add
sbb
add
int3
mov
xchg
xor
les
out
(bad)
fistp
sbb
into
mov
or
push
mov
dec
hlt
cs
lods
xor
pop
and
pop
popa
add
sbb
sub
cmp
jne
adc
in
adc
jg
test
ds
push
cld
mov
lock
lods
pushf
rcl
mov
sti
adc
cmp
jne
jg
push
mov
mov
es
or
add
neg
int3
cld
pop
test
xchg
xor
jne
clc
or
or
xchg
imul
add
cmp
daa
and
or
push
aad
movs
out
ret
ror
pop
loopne
push
loope
sar
iret
cmp
sub
mov
push
inc
or
or
retf
je
push
inc
retf
mov
addr16
add
mov
ror
jp
into
(bad)
test
pop
cmps
jne
or
bound
test
mov
dec
mov
out
in
cmp
jl
sbb
push
sbb
jne
adc
sbb
sbb
jae
or
xchg
lea
inc
lods
(bad)
loop
mov
push
dec
dec
push
movs
mov
stos
push
mov
mov
sbb
int
xchg
enter
push
xor
imul
dec
and
cmp
inc
sbb
mov
ja
adc
in
push
cmp
jmp
sub
in
push
inc
push
shl
das
rol
push
adc
cmp
ins
out
jecxz
lea
test
fstp
mov
fst
adc
enter
outs
cmp
pop
ret
and
nop
jno
and
xchg
push
loop
or
add
adc
addr16
arpl
add
mov
ret
je
mov
popa
clc
popa
dec
lods
xor
jno
sbb
inc
and
pusha
rol
mov
add
shl
das
leave
ins
nop
imul
mov
ja
add
call
mov
add
jbe
jl
jmp
out
sub
pusha
mov
add
add
adc
das
mov
lea
int3
pop
call
pop
and
ret
xor
inc
jmp
mov
and
dec
mov
sub
(bad)
fcom
dec
jg
ja
inc
or
add
out
add
shl
push
mov
adc
mov
aaa
dec
push
aaa
je
lock
pop
mov
sbb
mov
lahf
clc
dec
test
mov
sbb
mov
mov
jo
das
jne
adc
and
(bad)
mov
hlt
cmps
inc
jmp
int
out
inc
pop
fist
add
shl
push
mov
ja
(bad)
(bad)
mov
mov
xor
add
xor
enter
push
xchg
xchg
ins
mov
int3
lds
cmp
pop
add
pop
std
cmp
and
pop
cwde
out
xor
sbb
ret
aas
rcr
into
mov
adc
xor
pop
aas
ffree
js
or
or
pop
xchg
xchg
xor
add
mov
mov
movs
mov
or
jmp
retf
or
add
fdiv
fbstp
nop
adc
lods
in
out
mov
jp
pushf
pop
lea
out
mov
push
pop
mov
inc
lods
ret
push
mov
jne
and
push
cmp
imul
push
dec
movs
nop
mov
add
adc
cdq
mov
loopne
mov
loope
aam
adc
cld
fadd
inc
pop
jg
mov
inc
ret
add
cmp
call
adc
sbb
add
stos
hlt
je
es
mov
cdq
pop
push
shl
cdq
mov
xchg
adc
xor
aas
arpl
pop
mov
add
mov
add
inc
es
xchg
dec
adc
xlat
mov
mov
adc
out
test
or
mov
dec
std
jns
dec
mov
cmps
iret
mov
sti
clc
dec
test
mov
inc
add
call
add
dec
adc
adc
stos
mov
jmp
adc
in
mov
jnp
add
fdivr
xor
(bad)
push
dec
jmp
mov
adc
pop
push
or
ins
sbb
jg
sbb
xor
and
pop
ins
xor
pop
inc
adc
inc
and
mov
into
inc
push
ror
shl
fadd
ret
push
lods
in
adc
(bad)
or
mov
hlt
loopne
add
xor
pop
mov
aam
sar
popf
movs
jge
movs
shl
inc
loopne
call
sahf
movs
sbb
mov
xchg
(bad)
jne
or
sbb
sbb
push
add
xchg
test
sahf
mov
mov
inc
mov
push
push
mov
inc
inc
push
add
sub
test
pushf
ja
sti
or
repz
mov
movs
mov
pusha
test
push
add
jl
loope
mov
pop
or
cmp
push
pop
add
lahf
inc
and
jo
push
mov
mov
push
add
mov
arpl
cwde
xchg
ss
shl
in
shl
cmp
xchg
lods
retf
dec
ret
mov
je
lock
mov
mov
pop
ret
pop
sub
sbb
xchg
aam
jmp
pop
dec
xor
push
lock
push
in
ds
test
mov
fstp
fmul
lods
mul
adc
pushf
or
pop
cmp
and
aam
outs
xor
mov
mov
in
mov
je
mov
cmp
jle
inc
sahf
inc
push
sti
mov
unpcklps
cwde
adc
fcos
sahf
mov
xchg
mov
je
add
sbb
imul
cmp
outs
or
into
add
sub
daa
push
sbb
push
dec
cmp
inc
jmp
mov
scas
jmp
hlt
sbb
lods
add
push
int3
cmp
add
add
xchg
mov
sbb
ror
mov
pop
or
pop
ja
inc
or
aam
in
adc
mov
mov
pop
and
xor
or
push
inc
push
push
mov
push
xor
add
daa
and
adc
push
mul
popa
movs
pop
push
mov
inc
shl
fild
push
and
pop
mov
add
and
loope
add
pop
push
or
cld
and
scas
dec
cmp
push
sub
add
inc
sub
adc
cmp
add
adc
es
mov
loopne
mov
hlt
cmp
push
dec
mov
(bad)
not
movs
inc
add
pop
stos
call
rol
or
fwait
test
mov
adc
and
push
movs
sub
ret
sbb
loop
pop
sub
inc
(bad)
loop
adc
adc
or
fist
mov
mov
icebp
and
sbb
jo
mov
adc
popa
cmc
pop
add
xchg
jg
je
stc
jbe
aad
cmp
sbb
xor
test
inc
pusha
inc
mov
fmul
sbb
mov
call
mov
sbb
jmp
popa
test
ds
sub
data16
pusha
and
(bad)
cld
mov
ds
adc
in
loopne
inc
or
imul
sub
clc
out
sbb
cmp
inc
je
mov
call
add
je
pop
loopne
sub
cmp
fsubr
or
test
rcr
in
fadd
sbb
or
test
jnp
cmp
loope
add
push
sub
adc
(bad)
mov
inc
xchg
pop
xchg
inc
add
test
mov
push
and
(bad)
fwait
dec
and
outs
in
or
jl
test
xchg
and
jo
mov
in
cmp
gs
pop
les
outs
inc
mov
and
mov
int3
je
sub
sahf
adc
retf
and
push
sub
xchg
pop
loopne
test
imul
cld
ja
mov
ins
inc
je
adc
enter
loopne
xor
fsubr
and
or
adc
test
jp
or
dec
or
inc
mov
cmp
ins
je
push
data16
je
xchg
jmp
out
push
push
cld
jmp
add
add
fiadd
(bad)
test
xchg
cmp
popa
add
pop
lock
mov
pop
daa
shl
mov
sub
mov
push
adc
cmp
mov
mov
add
xchg
push
loop
add
(bad)
dec
or
inc
movs
gs
repz
inc
mov
push
int
sbb
jns
pop
nop
addr16
loop
adc
cmp
out
sbb
sbb
push
and
mov
adc
add
ins
mov
jg
mov
loope
int3
bound
and
or
call
push
pop
pop
ret
ins
jae
mov
or
push
pushf
gs
or
pushf
xchg
test
neg
aaa
sbb
inc
push
sub
cmp
sbb
mov
fdiv
ret
mov
idiv
mov
outs
xchg
mov
add
lea
ss
mov
movs
test
jo
sub
sbb
xor
out
add
sub
(bad)
into
or
mov
sar
data16
xor
or
mov
pop
push
loopne
sub
push
inc
loopne
cmp
xor
jns
jne
jp
hlt
clc
adc
std
mov
mov
pop
and
sub
push
add
add
mov
or
push
inc
add
jae
imul
cmps
aas
loopne
push
jp
add
cmp
ss
(bad)
pop
and
cmp
ja
push
idiv
mov
xor
and
inc
repnz
fs
mov
test
mov
sbb
enter
or
or
or
adc
jmp
pop
sub
cmp
movs
inc
pop
loopne
fidiv
ret
or
loopne
xchg
pop
mov
sbb
cmp
pusha
pop
std
out
mov
out
and
add
fst
sbb
call
mov
push
in
loop
adc
inc
in
clc
push
adc
mov
or
out
adc
cli
movzx
and
sub
push
xchg
cmp
push
fcmovnb
mov
xor
mov
dec
pop
prefetchnta
enter
(bad)
int
pop
jl
inc
pop
and
mov
clc
clc
inc
dec
jne
sub
rcl
or
call
pop
(bad)
mov
push
call
push
cmps
out
add
inc
lock
push
jae
ins
mov
inc
inc
cmp
xlat
xlat
inc
push
inc
pusha
ja
pop
fldcw
mov
or
pop
adc
or
adc
pop
pop
inc
ins
pop
sub
cmp
cli
push
loopne
and
cmp
jne
mov
ja
sub
inc
add
dec
mov
and
sub
ror
sbb
or
inc
cld
add
inc
xlat
or
cwde
les
or
sub
push
mov
out
ins
push
icebp
cs
setne
mov
les
stc
or
int3
or
(bad)
pop
(bad)
push
xlat
push
or
imul
pop
sahf
dec
dec
aaa
lea
mov
hlt
pop
push
clc
mov
dec
push
add
(bad)
out
mov
iret
dec
mov
xchg
outs
sub
sbb
jmp
and
fs
leave
outs
outs
dec
mov
inc
fidiv
jge
ror
add
or
mov
xchg
and
mov
and
xor
sbb
add
or
jne
adc
sub
pop
pop
mov
mov
cmps
popf
test
mov
or
jbe
aam
mov
sti
mov
xor
sub
das
and
sbb
mov
test
sub
push
jl
fnsave
cmp
mov
jnp
jnp
sti
xor
push
cld
mov
pop
sbb
rol
mov
jmp
mov
cmp
jb
mov
je
add
rcr
mov
pop
adc
jae
adc
adc
mov
pop
push
mov
movs
jne
lods
adc
jo
loop
push
push
mov
push
out
cmp
into
loopne
mov
jb
je
mov
add
xchg
mov
cmps
out
add
call
mov
adc
cmp
icebp
dec
mov
mov
mov
ins
mov
mov
add
xor
mov
fcom
adc
add
mov
loopne
adc
add
xor
ja
popa
imul
aam
(bad)
push
mov
ins
inc
mov
leave
loope
std
mov
mov
call
mov
dec
sbb
pop
clc
test
sub
add
xor
out
sub
add
inc
push
dec
js
add
push
inc
imul
mov
push
fstp
icebp
mov
or
lea
cmp
adc
hlt
sub
imul
lods
adc
pop
jne
push
mov
pop
je
lds
mov
out
repz
or
adc
mov
lock
or
loop
or
push
sbb
push
push
mov
dec
(bad)
xchg
sbb
and
setns
mov
pop
in
lods
or
mov
(bad)
jmp
call
pop
jl
in
add
or
pusha
cmp
sbb
dec
sar
push
sub
jle
or
mov
out
push
inc
ss
add
into
mov
jne
xor
fdiv
and
rcr
sbb
add
ins
loop
lods
in
xor
mov
mov
adc
xchg
fwait
icebp
in
pop
(bad)
jg
add
lods
cmp
jne
cmp
mov
jg
mov
sbb
fucomi
xor
xchg
push
pop
movsx
adc
or
ret
add
adc
push
and
sahf
cmp
stos
ret
dec
repz
pop
cwde
inc
outs
call
test
in
add
or
add
mov
sub
jl
cmp
mov
enter
and
xchg
dec
jge
add
jle
addr16
ror
enter
call
xor
pop
adc
pop
and
jne
or
mov
jbe
sub
das
stos
int3
push
sub
out
js
repz
add
inc
sbb
mov
(bad)
imul
adc
sub
movzx
pop
(bad)
je
sbb
inc
sub
cmp
out
pop
loopne
add
add
dec
or
mov
ss
sbb
or
leave
mov
ficomp
mov
add
adc
or
lea
sbb
dec
adc
inc
or
jmp
or
mov
int
call
inc
mov
scas
mov
cmp
enter
lods
adc
adc
add
mov
clc
add
icebp
cmp
gs
xor
and
sub
inc
sar
nop
mov
mov
push
or
test
aam
jg
cmp
clc
and
test
clc
pop
adc
jo
test
pop
xlat
fimul
pop
adc
(bad)
adc
sbb
hlt
push
dec
xor
or
sbb
nop
sub
cmp
xchg
xor
(bad)
mov
sub
sbb
arpl
jbe
fwait
jmp
xor
push
or
sbb
es
adc
mov
dec
aam
push
pop
dec
pop
mov
add
pushf
sub
into
or
dec
adc
ret
sbb
push
jl
cmp
test
ins
mov
inc
xor
dec
pushf
cmp
xor
and
push
sbb
dec
or
mov
ja
jne
bound
or
and
pushf
inc
shl
js
xor
pop
push
lods
pop
cdq
inc
in
and
and
inc
clc
jge
jne
lock
fistp
aad
and
sbb
movs
or
xlat
dec
scas
pushf
stos
inc
bound
rol
jnp
data16
dec
les
adc
xchg
fldenv
pusha
jp
xchg
sbb
inc
or
sar
cmp
sub
add
adc
(bad)
pop
test
adc
fadd
enter
pop
add
cwde
sbb
jne
je
mov
test
sbb
mov
cmp
or
push
or
cmp
add
les
add
ret
lock
rol
mov
int
in
sub
add
or
inc
test
push
adc
add
adc
cwde
add
sbb
xor
adc
sar
add
loopne
popa
xor
mov
add
adc
xchg
nop
jge
pop
and
sbb
pop
or
hlt
ret
mov
or
jno
xchg
sub
sbb
adc
adc
sbb
pop
xor
jne
adc
add
inc
shl
push
aam
fdivr
int3
ds
add
mov
fs
xor
jno
add
mov
sbb
jb
xchg
jbe
cmp
or
push
xor
addr16
sbb
lods
lds
mov
in
mov
test
inc
push
adc
lock
or
sub
rol
or
outs
xchg
loope
fisub
(bad)
sbb
pusha
sub
mov
ret
pop
xor
mov
mov
or
rol
cmp
test
and
and
enter
jmp
cmp
add
adc
xchg
and
cmp
fcom
jmp
mov
sbb
bnd
cmp
cmp
mov
sub
into
mov
inc
dec
call
in
and
push
mov
(bad)
in
ja
add
or
pop
inc
adc
pop
mov
leave
push
aaa
retf
mov
add
pop
add
int3
mov
je
dec
lods
pop
sbb
adc
mov
inc
xor
mov
mov
xor
scas
xchg
cmp
in
push
inc
js
(bad)
adc
add
mov
mov
add
js
out
or
cdq
sbb
xchg
add
add
or
sbb
shl
sub
fs
call
(bad)
idiv
add
mov
mov
cmp
inc
daa
cmp
mov
push
cdq
jo
mov
fdiv
dec
movs
push
inc
mov
mov
inc
lods
add
retf
xor
jle
pop
push
mov
cwde
pop
adc
mov
lds
lock
sub
mov
inc
cmp
xchg
gs
daa
jne
or
sbb
pop
aaa
outs
popf
aam
dec
xor
or
je
int
cmp
dec
push
add
push
mov
retf
push
push
push
ret
or
add
mov
pop
jmp
popf
dec
je
push
cmp
sbb
outs
sub
jmp
pop
mov
arpl
(bad)
cmp
jbe
sub
pop
push
pop
jns
inc
or
fst
pop
clc
jmp
xchg
rol
or
or
adc
mov
pop
mov
fdivr
and
out
mov
ret
push
push
sbb
retf
pop
mov
xchg
jmp
adc
clc
scas
bound
rcl
loop
sub
and
hlt
add
sub
lea
ret
inc
sbb
mov
lock
inc
pop
test
ret
call
and
cmp
stos
fiadd
and
repz
adc
jp
sub
sbb
mov
xchg
hlt
inc
jmp
sbb
imul
retf
push
pushf
pop
int3
out
sbb
add
in
xor
test
xor
(bad)
mov
inc
imul
mov
xlat
js
xchg
cmp
inc
mov
lock
call
adc
clc
mov
dec
dec
test
icebp
cmps
sbb
or
pop
add
aaa
or
cdq
jnp
cmp
das
push
push
mov
cs
sbb
pop
ret
cmp
lds
mov
mov
cmp
fistp
and
xchg
fcom
aam
ret
adc
cmc
mov
lods
loope
push
scas
xchg
adc
loop
xchg
add
adc
mov
pop
xchg
inc
sub
mov
jle
inc
xlat
dec
push
add
push
push
dec
sub
dec
or
jp
push
pushf
push
mov
pop
mov
inc
mov
xchg
dec
and
xor
xlat
mov
mov
cmc
leave
movs
out
adc
pop
call
ins
(bad)
xor
cmp
mov
leave
retf
jae
aaa
jo
push
aas
push
cld
and
outs
push
pop
mov
ss
and
(bad)
rol
mov
sbb
xor
arpl
adc
shl
inc
xchg
adc
int3
ror
sbb
xchg
rcl
pop
in
aam
jmp
sbb
in
push
cmp
in
and
mov
sti
icebp
clc
mov
je
sub
(bad)
cmp
nop
rsqrtps
xchg
jo
mov
cmp
dec
or
lods
retw
das
mov
xor
xor
imul
push
es
je
mov
retf
(bad)
ss
dec
ds
std
cli
inc
sbb
dec
retf
inc
mov
clc
sti
or
jmp
dec
jecxz
add
adc
lsl
jbe
mov
jmp
sub
or
mov
jmp
add
sar
inc
shl
or
aaa
fwait
leave
js
and
or
xor
push
sti
fsubr
add
in
test
lock
(bad)
in
or
les
push
sub
das
or
pop
xchg
imul
in
mov
sub
fs
or
gs
inc
fisubr
sub
add
rol
mov
push
push
push
or
daa
xchg
push
or
mov
lock
jo
inc
add
sahf
push
ret
or
jmp
nop
scas
test
in
push
mov
push
cmp
or
add
mov
stos
les
add
bound
mov
xchg
(bad)
icebp
pushf
sbb
cmp
pusha
sbb
push
shl
loopne
cwde
push
movs
pop
jno
pop
add
cli
jmp
add
adc
loopne
add
out
je
push
call
add
sbb
das
ret
pop
inc
jne
sahf
sbb
adc
lds
pop
aaa
(bad)
adc
cmp
ficom
mov
test
outs
adc
aas
cld
ficom
adc
add
out
push
mov
push
in
sub
or
cmp
cmc
cwde
(bad)
mov
mov
dec
test
cwde
inc
mov
add
icebp
jo
jmp
xor
clc
inc
jmp
xor
mov
push
adc
scas
rcr
xchg
push
push
pusha
retf
enter
rol
ret
les
xchg
push
cli
inc
ficom
or
sbb
jmp
rcl
jno
retf
ror
jle
add
ins
pusha
and
out
mov
xlat
aas
mov
jp
pop
mov
test
pop
fnsave
mov
test
add
and
pop
es
and
and
pop
daa
daa
pusha
push
test
aas
fs
push
add
mov
mov
inc
repnz
or
inc
push
inc
pusha
sub
mov
mov
add
and
je
push
rcr
mov
adc
test
rcl
lea
imul
or
inc
bound
cmp
inc
imul
fcmovu
ret
daa
js
pop
(bad)
popf
ja
mov
cli
sbb
adc
inc
imul
cmp
inc
or
mov
pop
push
rcl
stos
pusha
dec
xchg
test
inc
cmp
jo
fsubr
outs
cmp
pop
pop
jne
cmp
loopne
pusha
adc
cmp
test
mov
pop
mov
push
add
mov
iret
and
(bad)
out
sar
push
add
adc
mov
cmp
imul
je
mov
and
imul
mov
aad
sbb
push
inc
nop
pop
fidiv
cs
pop
dec
imul
push
and
adc
pop
cmp
jne
inc
and
push
lea
lea
jg
cmp
adc
or
push
mov
cs
dec
or
das
sbb
or
fmul
inc
inc
pop
repz
cmp
adc
cwde
adc
mov
xchg
xor
cmp
fisttp
jne
pop
xor
pusha
cmps
ror
(bad)
cmps
movs
or
sbb
cmp
mov
sbb
iret
inc
lahf
movs
jb
outs
rcl
(bad)
and
push
daa
sbb
test
push
in
scas
mov
call
adc
cs
loop
push
shl
test
jne
push
dec
shr
and
add
mov
adc
jno
mov
aad
mov
jmp
outs
cdq
sbb
fsub
xchg
arpl
mov
xlat
(bad)
mov
dec
add
or
and
ret
jmp
and
push
icebp
cmp
xor
cmp
pop
addr16
push
xchg
adc
clc
out
cmp
sub
jbe
push
ror
pop
sbb
mov
and
adc
add
xor
cmp
add
cmp
cmp
mov
inc
imul
sbb
and
cmp
or
dec
shr
mov
repz
xor
sbb
fisub
jle
jecxz
mov
clc
je
mov
add
pop
les
cmp
stc
sbb
ss
jmp
cmps
add
dec
mov
push
in
xchg
cmp
xor
cmp
and
adc
test
and
mov
push
nop
xor
loopne
jl
adc
or
adc
pop
inc
xor
mov
cmp
cmp
mov
mov
dec
fdiv
xor
test
pop
jne
adc
xor
xor
jle
pop
mov
and
xchg
xchg
push
ret
rol
lea
add
mov
fild
fidivr
je
cmp
rol
js
sub
dec
stos
in
cmp
pusha
in
jbe
shl
xor
or
xchg
rcl
push
out
cmp
sub
jp
hlt
and
call
mov
sub
mov
sub
stos
stc
push
xor
pop
xchg
dec
mov
cmp
jl
xchg
mov
fst
adc
or
in
sbb
and
adc
or
mov
or
or
cwde
rcr
push
pop
add
(bad)
sub
mov
fcom
ficom
test
jae
push
test
icebp
fidiv
mov
cmp
repnz
mov
loopne
ins
nop
mov
add
add
push
push
cdq
iret
pop
push
out
push
movs
inc
sar
cmp
adc
add
mov
cwde
pop
mov
cli
test
pushf
dec
adc
pop
stos
mov
pop
dec
mov
in
inc
cwde
jge
ret
mov
mov
xor
ds
imul
mov
or
jge
movs
movs
mov
addr16
cmp
push
mov
cs
inc
inc
mov
cmp
movs
adc
and
jo
dec
fsub
and
xor
in
jl
xchg
fisttp
clc
cmp
push
les
ss
sbb
stc
in
jne
arpl
mov
adc
mov
mov
mov
push
inc
sar
sub
loope
lds
test
xchg
jne
and
cmp
les
pusha
xor
adc
adc
cwde
mov
add
shl
jg
rcr
xchg
shl
shl
shl
dec
add
arpl
jbe
push
and
sahf
imul
xchg
aas
fidivr
fs
cmp
psadbw
add
js
sub
xor
xchg
add
std
adc
aam
sbb
aaa
cmp
mov
push
dec
push
add
sub
dec
sbb
or
xchg
adc
add
cmp
ret
pop
mov
mov
sbb
jno
push
sbb
lea
jo
add
mov
repnz
jns
data16
xor
test
xor
jg
in
or
mov
pop
inc
inc
pop
xchg
retf
xor
cwde
fbstp
cmp
mov
pop
push
pusha
push
add
fwait
ss
pop
push
inc
adc
sbb
call
in
ret
or
cmp
loopne
cmps
enter
rcr
div
mov
shl
ret
not
icebp
push
mov
iret
adc
stos
mov
loop
cli
sar
push
or
push
cwde
dec
and
inc
imul
or
inc
or
inc
xor
fldcw
dec
and
ja
ja
xlat
outs
jne
call
pop
jo
pop
lock
data16
cmp
or
push
movzx
clc
mov
mov
add
or
or
gs
pop
mov
ret
sub
repz
jae
hlt
call
shr
loop
jl
outs
add
ins
add
cs
call
cmp
pushf
cmp
lds
jl
sub
test
sub
inc
add
cmp
inc
lock
push
push
mov
mov
add
jb
fbstp
sub
or
jo
cmp
enter
call
push
rcr
sti
aaa
ins
add
js
adc
xchg
adc
leave
in
dec
fnsave
pop
addr16
add
rcr
or
cs
lock
inc
inc
adc
inc
inc
pusha
or
or
sbb
mov
inc
pop
cmp
and
or
sub
jne
out
movs
inc
lock
lock
pop
fwait
pop
bound
mov
add
add
bound
idiv
xor
xor
or
je
jmp
push
push
loope
mov
mov
or
adc
add
cld
pop
add
jne
adc
popf
adc
daa
in
add
out
aas
fist
(bad)
xor
push
pop
push
push
in
add
dec
jne
pusha
add
jp
sti
add
shl
into
retf
mov
or
mov
add
mov
sbb
xchg
loope
or
sub
mov
and
(bad)
dec
lea
ss
cmp
je
rol
loopne
dec
lock
jb
sahf
aam
jnp
pop
gs
fisttp
sbb
or
mov
sub
test
jle
je
dec
mov
or
cwde
popa
mov
aas
cmps
lea
add
call
inc
fist
pop
inc
pop
push
mov
jle
push
mov
inc
jmp
lea
stos
adc
stos
and
sbb
mov
push
jne
mov
and
push
test
xor
sub
pop
sbb
clc
xchg
aaa
mov
out
jmp
fdiv
jecxz
pop
adc
movs
jo
cmc
rcr
leave
push
add
mov
push
push
mov
ds
test
or
pop
icebp
sar
sbb
add
sbb
call
adc
rcl
jle
or
inc
push
push
test
out
dec
fs
push
jp
push
push
scas
inc
(bad)
and
push
mov
cmps
mov
cmc
ret
and
test
or
cmp
push
pop
movs
std
das
mov
push
jbe
ret
lahf
push
xor
push
adc
std
cmps
ins
inc
lahf
and
push
dec
xchg
ds
inc
jl
addr16
fwait
dec
add
mov
(bad)
push
add
ficomp
mov
maxps
dec
adc
mov
out
mov
xchg
daa
in
lgs
loopne
xchg
jge
push
mov
test
and
nop
and
inc
lds
adc
adc
fiadd
mov
push
or
imul
mov
sub
out
pop
add
and
fcomp
rcl
push
dec
iret
pop
push
mov
add
add
mov
xor
mov
pop
add
mov
js
sub
call
sub
mov
pop
mov
icebp
aas
inc
inc
xchg
cmp
jne
push
mov
mov
(bad)
pop
cmp
loopne
pop
das
pop
mul
dec
imul
(bad)
loope
popf
aaa
cmp
ins
jl
xchg
xor
sub
and
imul
xor
dec
shr
lock
sbb
pop
xor
(bad)
pushf
adc
or
ja
repz
adc
pop
cmps
fcmovu
pop
and
jno
ss
stc
je
dec
ror
push
neg
cwde
cmp
inc
or
(bad)
int3
loopne
leave
mov
lock
aad
jnp
les
sub
push
jmp
dec
je
jmp
cmp
sub
mov
push
js
ins
jo
sub
cdq
(bad)
mov
mov
or
mov
mov
test
jne
mov
or
add
cmps
in
adc
je
inc
out
mov
jmp
fidiv
add
jne
cmp
push
jecxz
int
das
out
push
push
inc
lds
add
push
inc
call
mov
add
pusha
out
mov
enter
dec
mov
test
push
in
mov
ja
inc
add
repz
mov
xor
push
adc
out
mov
jo
add
mov
sbb
sub
mov
lock
aaa
xor
adc
clc
sbb
je
adc
sub
pop
or
je
xchg
std
sub
pop
jmp
add
adc
push
mov
adc
adc
jmp
push
cmp
cmp
in
jne
jnp
sub
inc
test
jne
out
push
pop
sbb
imul
mov
mov
add
dec
xchg
sub
por
add
jne
pop
iret
adc
mov
or
xchg
test
or
idiv
or
lock
add
dec
inc
js
push
and
mov
xor
jae
scas
cmp
jne
cmp
fwait
adc
repnz
or
inc
pop
jne
inc
push
pop
pinsrw
test
cmp
adc
lds
pusha
hlt
or
push
push
mov
cmp
pop
mov
mov
int
std
mov
xchg
cmp
mov
or
cmps
jmp
lea
dec
push
jo
lea
lea
and
dec
and
cmp
pop
gs
pop
jb
mov
test
jbe
add
ret
or
clc
and
inc
lods
iret
hlt
test
xchg
mov
in
mov
dec
jne
clc
aam
jecxz
cmovl
cmc
adc
sbb
jbe
push
push
push
jbe
loopne
add
mov
xor
lds
mov
sub
adc
adc
inc
inc
cmp
aam
push
or
sub
lods
adc
push
stos
xlat
jne
jmp
or
sbb
push
xor
push
cld
mov
sbb
int
mov
inc
leave
cmp
dec
fldenv
push
sub
adc
add
outs
add
dec
and
test
mov
push
pop
cwde
add
loopne
loope
shl
ss
fmul
mov
cmp
pop
push
push
inc
push
or
mov
(bad)
mov
jg
mov
lods
xchg
stos
sbb
movs
ret
push
inc
adc
sbb
addr16
add
data16
fcomi
or
xor
and
cmp
lahf
sbb
and
sbb
retf
xchg
ins
inc
xor
(bad)
rol
jecxz
sbb
or
add
hlt
mov
push
jmp
retf
jne
les
dec
or
push
push
pop
push
add
inc
sub
inc
dec
jne
sub
movs
or
or
lea
or
je
mov
cmc
fsub
in
nop
lock
test
mov
hlt
out
fscale
xchg
xor
clc
jl
push
inc
jg
fcomip
sub
idiv
xor
cmp
jg
les
(bad)
je
mov
test
sbb
cmp
data16
int3
jnp
mov
je
push
cmp
test
fdiv
mov
mov
lea
add
add
lods
mov
jmp
sub
and
push
mov
out
or
sub
daa
jo
fadd
call
div
cdq
ret
test
cld
add
push
or
cli
test
in
pop
inc
mov
adc
fld
and
mov
out
pop
adc
ret
mov
xlat
je
push
popa
scas
sbb
sbb
aas
popw
mov
jmp
pusha
in
xor
rol
push
aas
mov
bound
sub
(bad)
ss
add
clc
nop
or
xor
cmp
jo
sub
add
adc
(bad)
sub
aaa
dec
cmp
or
mov
retf
aas
adc
adc
xor
adc
mov
sub
popa
add
xchg
mov
(bad)
stos
pop
fwait
dec
sbb
imul
mov
cld
mov
imul
ror
hlt
sbb
lds
jne
jmp
push
cmp
adc
cdq
icebp
mov
rcl
mov
mov
cli
sub
mov
jo
xor
(bad)
jo
sub
lods
jp
movs
mov
sbb
push
push
dec
ins
aas
or
call
rcr
jp
test
jge
cs
or
(bad)
add
cwde
adc
pop
test
fiadd
pop
or
ss
xlat
mov
rcl
jp
aaa
cmp
dec
and
lock
pop
cmp
(bad)
dec
movs
ja
xor
mov
add
or
clc
in
stos
dec
cmp
loopne
mov
push
inc
(bad)
push
jno
gs
sar
jne
adc
mov
cmp
sbb
je
cmp
mov
cmp
jge
and
xor
inc
add
adc
mov
fidivr
mov
add
outs
or
dec
mov
mov
dec
cmc
cli
cdq
or
daa
push
push
cmp
(bad)
and
fsubr
(bad)
mov
sbb
(bad)
loop
push
inc
add
xor
sbb
shr
mov
inc
sbb
jne
popa
mov
mov
pop
inc
pop
cmps
test
cdq
mov
jo
nop
enter
mov
dec
cmp
adc
ucomiss
fst
push
shufps
enter
xchg
jnp
fstp
sub
fidiv
inc
adc
fdiv
adc
arpl
pop
(bad)
jo
xchg
mov
jle
ror
mov
mov
push
cld
mov
stos
arpl
data16
into
cmp
ins
repnz
adc
add
jo
cmp
js
xchg
jno
xchg
lock
retf
jno
adc
or
retf
loop
fistp
ret
lods
cmps
cmp
jbe
dec
mov
int
sub
clc
popa
push
scas
and
test
mov
or
jno
xchg
cmp
out
push
mov
popf
clc
add
and
mov
ds
cmp
cmovnp
shl
adc
mov
cmp
mov
mov
add
push
mov
jne
daa
push
sbb
mov
mov
push
fsub
pusha
pop
jmp
cmp
pop
sbb
sbb
xchg
out
test
sbb
clc
ds
or
push
dec
adc
and
or
xchg
xchg
sub
and
out
sbb
push
pop
and
sbb
or
push
dec
jne
xor
test
dec
adc
mov
loop
jmp
sub
pop
or
adc
pop
test
mov
lock
and
sbb
test
cwde
lea
(bad)
xor
out
ret
loope
das
test
mov
add
cmp
adc
fldenv
(bad)
push
shl
xchg
scas
dec
or
pop
(bad)
scas
push
and
mov
jne
dec
(bad)
mov
mov
mov
pop
inc
hlt
idiv
adc
or
lahf
scas
pop
fcomp
sbb
mov
push
sbb
xchg
movq
add
fldcw
jge
dec
and
push
fstp
inc
jle
xchg
or
jmp
or
pop
lock
lock
push
jne
xor
jmp
sub
push
xor
sbb
jp
call
mov
or
mov
cmp
xor
mov
cmp
sti
mov
push
jge
lock
add
cmp
jne
or
or
mov
inc
mov
hlt
or
stos
add
jg
hlt
push
xor
push
and
div
pop
adc
pop
pop
loop
test
push
popa
pop
adc
lods
cwde
and
or
push
add
dec
jne
mov
or
mov
adc
mov
mov
sbb
cmp
outs
imul
popa
loopne
or
xchg
loop
and
xchg
adc
movs
push
xor
push
std
push
adc
shl
pop
jmp
or
pop
or
push
inc
fmul
mov
or
shl
repnz
or
add
mov
push
adc
or
adc
inc
bound
je
ja
test
aas
add
add
add
push
sar
xor
mov
cmp
and
add
sahf
cmp
cmp
sub
out
stc
dec
pop
pop
or
mov
ds
pop
cmps
mov
pop
add
int
jl
or
enter
fadd
mov
pusha
adc
inc
in
jne
mov
inc
mov
ja
jne
mov
(bad)
test
sub
int3
xor
xchg
les
sub
mov
mov
add
push
xor
sub
sub
pop
xchg
cdq
mov
test
pop
or
je
(bad)
pop
or
nop
popf
ins
push
call
dec
push
sub
fmul
sub
enter
sbb
inc
jne
xor
sti
imul
push
in
aas
fsub
cmp
inc
adc
cmp
bound
xchg
shr
add
mov
jl
ins
sub
jb
sub
jb
push
clc
sti
std
fwait
mov
mov
jmp
or
jmp
cmp
add
ss
adc
dec
inc
hlt
rol
or
dec
ror
pop
add
mov
adc
push
mov
or
adc
add
inc
sbb
nop
adc
and
adc
inc
inc
or
or
int3
mov
dec
movs
push
mov
mov
mov
pop
adc
mov
dec
or
jl
or
repnz
outs
and
shr
push
dec
jmp
iret
mov
inc
(bad)
mov
xor
sub
es
add
rcl
mov
popa
lock
adc
cwde
mov
loopne
mov
cmp
sbb
mov
cs
iret
jge
adc
mov
and
adc
inc
lock
mov
sub
and
lods
imul
push
add
arpl
or
mov
cmp
shl
push
add
xor
fmul
dec
fdiv
fsub
fcom
cmp
cmp
jmp
pop
aam
imul
dec
sbb
mov
and
jb
retf
and
pusha
push
pop
mov
add
mov
push
or
adc
rcr
bound
and
xchg
add
bound
sbb
or
shl
lods
mov
adc
add
loope
test
ret
or
clc
adc
stos
adc
push
push
add
mov
mov
xchg
jge
ret
fdivr
lahf
mov
and
cmp
fimul
sti
jecxz
pop
loop
ins
add
and
cmp
adc
mov
(bad)
jmp
mov
cs
fsubr
addps
and
lock
jle
rol
jle
xor
mov
pop
or
push
ss
cmp
lea
ins
mov
js
add
sub
jae
pop
sub
cmps
call
(bad)
jge
sub
xchg
enter
call
cmps
xchg
adc
test
dec
sbb
(bad)
call
mov
movs
in
dec
jne
(bad)
div
lea
out
sbb
push
push
ret
add
rcl
inc
stos
push
jae
cwde
aam
xor
or
dec
cld
add
or
(bad)
les
ror
add
inc
rol
outs
xor
mov
mov
or
xor
pop
or
cdq
nop
cmps
jo
dec
jle
hlt
scas
lahf
call
ret
nop
sub
es
adc
pop
jmp
cmp
bswap
push
pop
mov
shrd
push
rcr
lods
sbb
sar
and
sbb
fadd
rcr
nop
shl
mov
cmp
aam
mov
aas
xlat
or
xor
lock
pop
stos
test
ss
(bad)
jecxz
cmp
mov
adc
imul
stos
out
xchg
stos
add
and
loopne
div
arpl
je
add
adc
inc
add
mov
add
rcl
or
das
mov
pusha
mov
cmp
sub
jbe
add
cmp
pop
lods
gs
(bad)
int3
cld
inc
push
int3
mov
out
sub
push
daa
scas
adc
hlt
aam
mul
adc
neg
xchg
pusha
lock
in
push
call
mov
xor
jno
jge
xchg
cmp
call
in
add
ss
ret
mov
inc
xor
or
data16
(bad)
lock
in
push
cmp
hlt
sub
or
add
or
xchg
push
and
xchg
xchg
sub
pusha
xchg
bound
add
mov
adc
pop
sub
push
mov
fcomp
ds
sbb
inc
cld
sbb
sahf
mov
pop
ja
xor
or
sbb
xchg
cmp
shl
retf
and
aam
ins
rol
sbb
sbb
add
sbb
inc
xlat
jmp
bound
and
or
enter
cmp
in
and
(bad)
in
fld
ror
push
lock
fadd
fcom
add
popf
clc
xor
add
add
fild
jmp
pusha
in
gs
mov
movnti
call
or
test
dec
(bad)
(bad)
fcmovbe
push
aas
add
sbb
fneni(8087
inc
and
adc
inc
jo
or
sbb
lea
test
push
jl
jmp
arpl
popa
inc
in
mov
test
jo
pop
and
pop
ja
into
push
mov
sbb
les
or
jo
jb
adc
js
test
xor
cmp
xor
push
sbb
aam
loopne
cmp
fiadd
xor
sub
jmp
sahf
aad
push
add
push
pop
and
adc
sbb
test
cmps
sub
jle
into
cmp
outs
pop
jp
test
movsx
(bad)
dec
mov
add
add
xchg
jo
clc
push
inc
xchg
or
sub
cmps
adc
xchg
or
aas
or
sbb
inc
inc
mov
sbb
mov
jp
xchg
sbb
loop
or
das
pushf
rol
outs
add
or
jne
push
lock
int
add
std
ja
or
dec
cmp
jmp
je
es
or
ret
in
adc
cli
js
sbb
mov
push
call
xor
sub
loop
std
out
aam
cmp
push
mov
sbb
inc
arpl
fisubr
pop
je
adc
adc
test
adc
mov
dec
loope
sbb
aam
sti
dec
repnz
cmps
and
les
lds
test
sub
in
and
jns
cmp
xchg
sbb
retf
jp
jmp
les
(bad)
fisubr
pop
add
jne
out
mov
adc
cmc
neg
push
jecxz
xchg
sbb
mov
rcr
add
pushaw
(bad)
sbb
shl
pop
cmp
int3
and
lock
push
and
mov
jge
mov
cwde
add
mov
sbb
cmp
test
adc
fsub
cwde
popa
jmp
pop
add
mov
mov
scas
jecxz
je
mov
fstp
sub
cmp
ja
shl
std
adc
mov
inc
mov
fsub
ror
je
in
mov
inc
mov
and
sti
stos
cmps
and
inc
push
loopne
mov
pop
push
je
add
ja
push
ins
js
add
shr
mov
dec
and
xlat
pop
or
je
or
push
pop
or
inc
std
add
dec
sbb
jge
jae
ins
jmp
mov
sbb
bound
mov
inc
add
rol
clc
adc
call
or
pop
xor
mov
mov
add
and
dec
mov
pop
add
fsub
add
or
hlt
iret
push
add
pop
adc
scas
sub
xchg
adc
ja
xchg
xchg
imul
jo
ret
sahf
ror
int3
scas
mov
aas
push
ret
pop
mov
test
fisttp
fdiv
out
fmul
sbb
push
mov
fstp
cmps
sbb
pop
or
test
push
push
mov
or
mov
dec
je
movs
pusha
xchg
adc
push
mov
imul
inc
push
mov
sbb
push
sbb
nop
dec
add
rcr
call
(bad)
jg
xor
cmps
inc
sahf
fimul
leave
add
add
add
(bad)
(bad)
fistp
push
imul
outs
ins
cmp
idiv
add
push
arpl
add
mov
pusha
inc
cmp
add
hlt
movs
pop
push
pop
add
mov
call
repz
sub
cli
pop
in
mov
lahf
mov
cmp
jg
int3
push
ror
(bad)
push
sub
mov
jne
add
loopne
push
add
loopne
je
cwde
mov
add
out
lea
sbb
iret
ins
dec
push
cld
push
ins
mov
push
dec
pop
and
inc
dec
and
je
test
int3
mov
mov
fisttp
rcl
mov
(bad)
push
sub
dec
out
js
call
jmp
loope
call
inc
out
add
inc
xchg
enter
not
and
or
sahf
adc
in
jmp
sub
or
out
cmp
mov
mov
mov
pusha
mov
cmp
jne
bound
sbb
jg
push
imul
push
xchg
nop
cmp
daa
imul
pushf
add
push
add
mov
adc
and
pop
and
adc
or
mov
les
push
in
mov
sub
xor
inc
jae
mov
(bad)
(bad)
(bad)
daa
lds
retf
mov
nop
test
fcom
in
loope
mov
ins
ret
inc
adc
push
fist
sbb
mov
mov
inc
sbb
jae
ins
adc
inc
(bad)
jb
push
push
jae
mov
fdivr
sub
xchg
fild
xor
out
inc
push
mov
xor
sub
sub
cmp
stos
mov
call
mov
jecxz
push
sar
adc
lods
mov
xor
fadd
add
pop
cmp
mov
xchg
or
push
add
jo
adc
and
or
push
push
pop
shr
ror
stos
xor
xrelease
rol
mov
(bad)
mov
emms
mov
jg
bt
jae
mov
not
and
or
add
cmp
jne
sbb
mov
ret
aas
add
cmp
je
out
or
data16
in
inc
pusha
jmp
(bad)
and
sbb
lock
test
shr
adc
lock
outs
mov
jmp
or
mov
je
jne
leave
jne
in
adc
push
jge
push
sahf
(bad)
mov
or
or
mov
pop
xchg
ins
lods
or
adc
outs
sbb
add
dec
mov
cmp
fmul
ret
out
cmp
fld
dec
jg
jge
add
mov
fisttp
movs
or
shl
adc
pop
loop
push
mov
sbb
dec
fs
test
adc
retf
fs
fistp
pop
lock
xchg
and
jl
inc
xchg
out
sub
add
adc
dec
jne
test
stos
add
sysret
inc
fisubr
or
sbb
add
pushf
mov
add
push
pop
ret
or
aaa
or
gs
repz
inc
mov
inc
dec
mov
push
int
sbb
iret
imul
fsub
adc
mov
out
mov
or
adc
sbb
div
and
mov
in
inc
cmp
jne
repnz
pop
ins
mov
sub
ins
jne
add
add
aam
mov
inc
fcomp
pop
out
js
je
not
jne
adc
icebp
dec
sti
or
jmp
xchg
sbb
test
xchg
fistp
mov
inc
pop
sbb
ret
jbe
jo
push
or
push
adc
push
sbb
mov
adc
push
add
adc
into
in
dec
outs
mov
and
or
je
dec
jmp
data16
push
mov
call
shl
jae
mov
call
int3
push
mov
ja
dec
jge
jge
mov
push
fst
pop
sbb
or
push
adc
mov
cmps
mov
fcomp
pop
das
mov
fcom
lock
retf
out
inc
sub
dec
loopne
movq
pop
inc
jo
mov
enter
xor
(bad)
push
pop
ss
shl
mov
pop
cli
ins
xor
add
jle
and
push
cmp
mov
push
std
inc
cmp
test
pop
pop
mov
(bad)
mov
into
xchg
adc
push
div
fmul
pop
cmp
mov
pop
xchg
ss
jle
arpl
push
out
cmp
push
in
sbb
sub
lock
push
cld
std
out
cmp
add
lahf
std
pushf
aas
test
aas
scas
adc
jne
int3
mov
mov
mov
mov
shr
mov
sahf
sbb
adc
je
mov
xor
xabort
jb
das
mov
inc
mov
add
mov
test
mov
lods
xor
cmp
inc
stos
cmp
pusha
or
cld
jbe
stos
call
cmp
and
inc
(bad)
clc
xchg
push
es
(bad)
xor
or
push
pop
or
jo
xchg
(bad)
mov
mov
push
add
mov
mov
sub
push
sbb
popa
adc
loope
add
add
xor
es
dec
mov
fdiv
test
jne
lea
cwde
pop
mov
jo
ds
mov
cmp
push
aad
jmp
out
cmp
call
sbb
pop
or
fisubr
mov
add
in
jp
mov
jae
or
pop
shl
les
mov
mov
inc
inc
hlt
aam
push
cmp
mov
adc
add
and
repnz
or
xor
shl
int3
mov
or
ret
add
add
jmp
aaa
add
pop
or
xlat
mov
sub
cmp
pusha
cmp
fs
inc
add
(bad)
add
in
cmp
popa
or
add
push
hlt
push
cwde
call
(bad)
jge
sub
lahf
adc
pop
push
ret
dec
add
xchg
dec
push
call
test
jno
push
cwde
or
mov
push
(bad)
sti
inc
pop
je
add
pop
add
cmp
mov
cmp
add
je
push
add
cmp
xchg
cmps
xor
sub
pop
je
test
out
jb
(bad)
fdiv
push
push
or
ss
jl
mov
scas
imul
xor
add
and
rcr
xchg
cmp
xor
fsub
jle
xor
adc
push
or
push
adc
scas
inc
adc
sbb
inc
dec
punpckldq
push
inc
ret
aam
clc
fstp
gs
adc
mov
sub
and
add
mov
cmps
adc
jl
add
sbb
aaa
es
loopne
lock
fldenv
in
pop
xor
cmp
jg
pop
inc
push
push
cmc
test
adc
rcr
sbb
add
pop
sbb
int
shr
lods
xor
pop
mov
pop
repz
pop
add
cmp
jge
cmp
test
sub
cmp
dec
jae
loopne
jb
loope
dec
pop
add
mov
pop
and
sub
xor
and
sub
xchg
lock
imul
pop
loop
add
mov
xor
and
pop
hlt
sub
pop
push
pop
push
jbe
jp
cmp
(bad)
dec
pushf
sub
jns
cmp
mov
aam
out
or
push
adc
clc
cs
mov
add
add
sbb
mov
adc
call
in
mov
(bad)
loop
test
or
sbb
or
push
xor
call
jecxz
mov
mov
fcmovnu
xor
fist
mov
jne
jb
fnstsw
or
or
pop
div
add
mov
mov
loope
pushf
mov
pop
or
into
sub
shl
movs
add
in
arpl
fmul
das
dec
and
mov
sbb
(bad)
inc
popa
addr16
and
xchg
or
inc
push
and
xor
pop
(bad)
in
mov
leave
ins
and
pop
shl
jne
push
mov
(bad)
sub
stos
sbb
xchg
push
cmp
and
mov
(bad)
pusha
js
push
mov
sub
push
mov
loopne
inc
hlt
(bad)
push
adc
out
sbb
push
cmp
retf
loope
test
leave
popf
retf
sbb
or
call
pop
sub
bound
jmp
xchg
(bad)
mov
call
mov
clc
sub
or
mov
stos
jg
clc
sbb
or
adc
fild
call
ror
les
loopne
mov
add
fsub
shr
loop
mov
jb
mov
add
loop
jg
cmp
xchg
jo
aaa
xor
mov
inc
adc
push
adc
cmp
cmps
loopne
adc
push
and
mov
xor
push
je
inc
push
jmp
(bad)
push
popa
pop
cmp
sbb
jnp
faddp
mov
xchg
sub
xlat
add
push
test
in
jns
fsubr
push
pop
xchg
loopne
jnp
xor
xor
clc
push
lahf
loopne
or
or
mov
imul
sti
mov
adc
fimul
ret
add
stc
cs
outs
mov
xchg
hlt
scas
add
fild
pop
sbb
sbb
sub
adc
or
inc
loopne
jg
ja
jle
lahf
daa
push
mov
test
mov
sti
jecxz
test
rol
pop
pop
mov
ss
jne
pop
test
and
push
das
cmp
pop
add
das
add
sub
or
or
fdivr
call
fnstenv
or
sbb
fst
cmps
adc
mov
mov
sub
xchg
je
(bad)
int
lds
add
push
xlat
push
xchg
lock
and
or
add
int3
mov
inc
push
loopne
jecxz
push
or
icebp
aaa
popa
bound
and
movs
ss
or
pop
aas
cmp
sub
sbb
mov
xor
inc
push
dec
jnp
and
xor
or
jnp
push
loop
cmps
(bad)
fsubr
add
or
and
(bad)
shl
mov
test
cmps
jge
jp
cmp
adc
sbb
inc
fs
js
sbb
add
xor
xchg
sbb
mov
ins
js
retf
push
push
aaa
mov
or
ror
and
inc
xor
pop
mov
xor
or
dec
add
cs
and
sub
fadd
or
xor
inc
add
mov
imul
pop
popf
mov
lahf
cs
or
xor
div
loopne
push
cmp
rcr
mov
dec
adc
cmp
jne
in
push
stc
add
jle
cld
outs
push
jmp
xor
mov
add
mov
jo
or
push
(bad)
in
xor
push
sbb
mov
out
inc
push
sub
adc
cmp
or
daa
aad
fild
fisttp
loopne
cwde
cdq
cs
data16
sbb
(bad)
xchg
inc
xor
mov
enter
mov
jnp
por
cmp
cmp
add
adc
test
pop
(bad)
js
out
pushf
faddp
push
push
mov
cmp
jne
std
sub
push
je
cmps
add
ss
jbe
and
repz
idiv
or
push
add
push
adc
sub
imul
dec
mov
rcr
lods
pop
sub
jmp
or
sub
jmp
clc
stos
push
cmp
pop
mov
in
push
ret
popa
lds
pusha
fnstenv
rol
scas
int3
cmp
xchg
or
addr16
adc
push
mov
adc
and
and
movs
pop
sub
jmp
inc
pop
loopne
pop
mov
sbb
mov
cdq
idiv
dec
push
inc
shr
xor
sbb
sbb
call
pop
add
add
or
mov
push
xchg
or
mov
mov
pop
or
sub
mov
sub
push
add
sub
add
jb
push
or
sar
rol
push
mov
sbb
inc
sbb
shr
xor
and
(bad)
mov
clc
and
mov
jmp
arpl
pop
mov
cmp
mov
rcl
aam
enter
cmp
sbb
add
xchg
adc
or
scas
push
sar
inc
pusha
lods
jo
aad
or
ficom
shl
mov
cwde
rcl
(bad)
jmp
nop
out
jecxz
cwde
add
sbb
mov
inc
and
and
push
pop
or
jl
push
push
push
sbb
jp
(bad)
adc
and
push
adc
pop
adc
lahf
mov
movs
mov
lock
pop
or
and
adc
mov
sbb
pop
or
or
push
js
jo
jnp
cmp
push
cmc
xchg
je
and
inc
adc
add
push
and
push
fst
imul
jmp
cmp
sbb
push
loopne
pusha
add
add
aaa
xor
or
in
push
mov
sbb
das
outs
sub
sbb
fs
xor
xchg
sbb
adc
cmp
lea
xchg
push
nop
or
int
popf
mov
out
adc
adc
push
cmp
and
mov
and
push
xchg
mov
inc
or
jo
shl
push
push
ror
mov
xlat
(bad)
pusha
jge
je
repz
mov
daa
je
jg
test
jge
push
ss
ins
push
push
and
adc
fcomip
jmp
movs
es
adc
(bad)
sub
jo
lods
mov
and
sub
mov
push
pop
jo
xchg
and
test
ins
cmps
dec
push
add
cli
push
push
mov
mov
xor
adc
dec
cmps
push
imul
push
jbe
dec
ror
repz
inc
cld
ins
sbb
cmp
jne
lock
pop
sbb
sahf
pusha
push
push
aas
mov
mov
es
or
or
movs
(bad)
pop
adc
inc
rcl
scas
mov
loop
adc
lods
(bad)
sub
cmp
dec
mov
xor
les
jl
inc
xor
test
mov
test
mov
push
loope
rcr
inc
dec
jne
push
sbb
sbb
sahf
scas
jo
mov
sub
jle
or
add
dec
sti
popf
out
dec
dec
mov
or
(bad)
dec
jmp
mov
mov
les
jmp
cmp
push
cwde
lods
add
inc
mov
ficom
adc
sbb
sbb
or
inc
adc
adc
dec
adc
and
xlat
ins
dec
sub
pop
fdivr
add
add
ret
add
cmps
inc
ret
dec
cmp
add
loop
ins
sahf
inc
inc
lock
jns
cmc
inc
cmp
xor
add
sbb
js
add
popa
mov
inc
pop
aaa
cmp
xor
add
push
cmp
fs
jmp
mov
dec
mov
add
add
inc
or
int
in
pop
les
and
or
pop
lods
fs
xor
add
and
push
mov
in
or
cmps
inc
mov
cmp
dec
pop
and
xchg
enter
and
jmp
push
ret
mov
mov
pop
les
pop
or
cmp
test
(bad)
adc
psubd
loopne
mov
jle
add
cmp
mov
adc
sub
jp
or
fadd
imul
jge
xchg
dec
js
sub
mov
cmp
and
loop
test
jl
adc
loop
and
ds
sbb
push
dec
iret
push
add
lods
test
sbb
jge
sar
cmp
pop
push
stos
scas
into
fnsave
jl
aas
push
xor
call
jg
jo
fiadd
(bad)
xor
adc
mov
xor
jae
fs
out
push
gs
out
push
aaa
push
rol
mov
dec
jne
daa
test
jbe
sbb
mov
adc
xor
inc
sbb
(bad)
pusha
mov
mov
aaa
xchg
jl
cmp
adc
jo
stos
push
daa
(bad)
das
mov
pusha
sub
repz
fsub
pusha
lds
adc
test
mov
xor
sahf
not
add
and
xchg
xlat
push
sar
sub
xor
push
cmp
sub
push
cwde
inc
gs
lods
xor
cmp
and
icebp
push
xchg
sub
inc
or
inc
adc
ss
push
adc
push
push
hlt
test
mov
fcomp
add
push
inc
mov
loopne
add
inc
xor
push
or
push
or
push
ret
add
push
loope
mov
push
ins
fmul
jl
fstp
xor
rcr
add
sar
jns
adc
sub
adc
popa
inc
push
and
mov
xchg
sbb
xor
shl
mov
scas
scas
pop
imul
fiadd
repnz
or
fiadd
or
retf
push
inc
or
or
retf
sbb
inc
cmp
ror
test
sub
pop
cmp
push
mov
popf
cmp
sub
sub
jmp
inc
retf
leave
daa
sbb
xor
repnz
mov
pop
jno
add
aad
(bad)
mov
cs
je
add
out
cmp
inc
or
and
mov
add
cmp
or
push
add
sub
push
sub
sub
test
add
cmp
in
ror
push
popa
es
repnz
ret
pop
ds
fmul
cld
push
div
je
sbb
cmp
jg
ret
or
(bad)
and
(bad)
lods
push
mov
cmp
adc
adc
add
mov
push
add
sub
cmp
jge
or
add
jmp
daa
fsubr
adc
jl
or
xlat
(bad)
out
jbe
add
ret
idiv
stos
add
lock
scas
sbb
push
push
sub
ret
es
sub
mov
ret
push
mov
inc
(bad)
sar
inc
jl
retf
rcr
cmp
add
adc
icebp
mov
mov
mov
jmp
pop
sub
mov
sub
mov
push
and
mov
or
xor
push
cmp
data16
daa
mov
adc
mov
sub
test
movs
pop
or
push
adc
adc
cmp
xchg
lahf
popa
and
inc
xchg
lods
pusha
daa
cmc
cmp
das
and
sub
xor
push
push
adc
fcom
dec
push
lock
dec
enter
add
add
push
xor
xchg
add
inc
cmp
lea
or
into
sbb
lock
push
inc
sub
push
sbb
rcr
pop
mov
xor
dec
dec
dec
loop
pusha
test
push
xor
push
jo
mov
inc
daa
js
jno
mov
mov
xor
mov
adc
or
push
(bad)
lock
cmp
je
xlat
fild
jo
(bad)
jmp
push
mov
call
or
(bad)
daa
xor
lahf
cmp
or
retf
inc
nop
lahf
jb
inc
mov
mov
cld
aas
and
sbb
jbe
mov
jmp
or
fidivr
stos
pop
lods
xor
scas
int3
dec
scas
(bad)
adc
pusha
or
push
mov
cld
sahf
xchg
in
add
sbb
push
mov
rol
cmp
or
dec
mov
push
hlt
int3
mov
push
dec
or
les
scas
push
psrad
or
cs
mov
push
stos
and
retf
inc
xor
cmc
xchg
mov
je
inc
fbld
clc
add
lahf
jno
pop
out
sub
or
xchg
sub
hlt
(bad)
outs
clc
fimul
stos
call
jne
hlt
rcr
loope
push
je
addr16
pop
ret
in
jmp
pop
xor
jl
sub
cmp
js
adc
retf
pop
fwait
cli
pop
shl
or
dec
movs
add
out
add
ins
sti
inc
nop
int3
jl
inc
mov
(bad)
cwde
pop
xor
xchg
adc
aaa
lea
xchg
pop
ret
scas
sbb
push
cli
ins
sbb
call
stos
stos
and
call
mov
cwde
imul
(bad)
je
mov
fisubr
sub
cmp
sbb
xchg
push
not
jle
xchg
jge
cmp
pop
popa
je
adc
pop
lea
xchg
std
int3
(bad)
int3
sbb
push
std
dec
test
jl
ret
or
dec
ins
and
xchg
ds
test
sti
add
loopne
pop
fs
cmp
jne
cmp
data16
adc
jmp
test
pop
adc
arpl
sbb
pop
xlat
sti
out
dec
pop
jge
pop
add
sbb
pushf
loop
in
jle
pop
loopne
push
test
jle
mov
ss
pusha
les
jl
jmp
and
inc
mov
push
sub
and
or
cs
cmp
fisttp
push
cmp
popa
shr
aas
enter
cdq
ss
test
aad
ja
cmc
or
xor
add
sub
arpl
add
add
add
sub
popf
or
mov
inc
xor
xchg
pusha
or
or
push
jmp
xchg
sbb
or
sbb
bnd
arpl
iret
inc
pop
sbb
xor
pop
xor
add
adc
ret
inc
inc
mov
daa
aam
pushf
and
fild
push
sbb
js
into
pop
jae
or
fiadd
inc
xchg
and
imul
add
xchg
js
shl
shl
or
outs
adc
aad
(bad)
jno
push
int3
pop
into
dec
out
in
and
xchg
movs
inc
push
gs
mov
add
aaa
xor
in
scas
test
loop
sub
add
outs
dec
or
jmp
inc
sub
xchg
fisttp
cmp
in
sbb
mov
sbb
ror
adc
or
adc
sbb
or
xor
call
sub
pop
ror
adc
add
fsubp
cmp
js
into
ficomp
mov
add
dec
cmp
or
je
pushaw
xor
movs
push
or
sbb
add
test
dec
test
das
mov
adc
inc
push
jae
inc
(bad)
cmp
push
inc
sbb
or
or
adc
jnp
mov
lods
cmp
jne
mov
or
jo
adc
xor
mov
loopne
clc
hlt
jne
nop
pop
and
mov
cmp
xchg
inc
cdq
out
ret
jb
into
cmp
xchg
add
fst
fiadd
call
add
xchg
or
(bad)
xchg
jmp
adc
sbb
adc
inc
add
(bad)
cmp
(bad)
fdivr
rol
imul
sahf
out
enter
or
lods
cmp
sbb
hlt
pop
xor
sar
inc
rol
loop
out
push
sub
leave
and
push
ror
test
push
inc
add
jle
push
or
or
mov
push
and
pop
cmp
pop
push
std
add
or
ret
xor
cmp
lock
sar
jns
adc
jmp
cmp
pop
push
sub
icebp
fwait
shr
push
jne
add
jmp
hlt
add
xor
loope
test
mov
inc
js
jecxz
add
aas
icebp
and
and
add
outs
ins
jo
push
xchg
cmp
repz
call
or
xor
pop
mov
cmp
outs
cmps
push
nop
enter
sub
mov
pop
sbb
test
sbb
push
cmp
jne
cdq
loopne
rol
mov
pop
xchg
nop
addr16
cmps
mov
cmp
jne
jl
mov
(bad)
call
mov
xor
push
add
hlt
imul
and
inc
xor
fsub
outs
and
loopne
lock
mov
adc
sbb
pop
call
in
call
cli
mov
and
clc
add
scas
push
mov
test
clc
test
ror
(bad)
mov
(bad)
adc
clc
cmp
xchg
outs
rol
and
shl
cmp
dec
jp
js
jge
jne
cmp
ret
and
or
xchg
and
js
sbb
fisttp
sahf
hlt
icebp
xor
sbb
int3
and
ret
xchg
les
cmc
dec
inc
aam
test
cmp
and
inc
jle
out
(bad)
xchg
mov
add
arpl
push
pop
jp
push
aad
js
xor
(bad)
or
fmulp
and
push
adc
mul
add
adc
jne
sbb
xchg
inc
jo
sbb
dec
add
outs
lock
movs
sub
add
sbb
dec
(bad)
adc
mov
push
je
sub
sub
ror
pop
(bad)
mov
test
arpl
jecxz
add
int3
sbb
inc
fiadd
rcr
mov
(bad)
cmp
sub
inc
call
add
sbb
(bad)
js
mov
add
adc
sbb
fst
cwde
je
jb
mov
and
sub
pop
xor
inc
or
lea
dec
add
sbb
clc
enter
test
dec
sbb
popa
je
je
and
pop
jmp
push
adc
retf
and
cmp
fwait
xchg
xor
adc
mov
jle
sub
scas
loopne
cld
inc
fs
cmp
out
jno
push
sub
add
js
push
pushf
lods
fs
dec
ds
cmp
fs
dec
push
adc
push
adc
ins
data16
sub
add
inc
ficomp
inc
mov
xchg
loopne
out
xor
cs
lock
add
inc
dec
jne
mov
out
cs
repnz
fmul
add
xchg
xchg
cli
adc
pop
jmp
(bad)
ror
push
inc
outs
arpl
jb
xchg
xor
adc
adc
arpl
outs
outs
je
outs
ins
jae
add
pop
and
imul
cmp
lea
rcl
rol
add
jle
sub
ror
add
clc
mov
pop
jecxz
and
loope
inc
push
jp
inc
sub
(bad)
mov
jmp
lock
call
pop
dec
push
inc
ret
test
xchg
sub
rcl
jne
jmp
sub
inc
lea
out
xor
adc
pushf
add
xchg
xchg
push
retf
and
mov
sbb
dec
adc
into
cs
and
lock
sub
push
pop
and
or
inc
mov
shl
inc
mov
add
sub
add
loopne
xor
xor
sbb
mov
inc
jne
daa
in
test
and
cmp
push
jo
cs
jecxz
in
hlt
cmp
xor
cmp
inc
(bad)
outs
mov
or
addr16
cmp
fs
dec
xchg
or
adc
out
add
xchg
sbb
xlat
add
(bad)
sahf
sti
xor
add
cmp
call
sbb
push
adc
pop
xchg
mov
lock
pop
dec
jne
inc
bound
in
dec
ja
adc
cmp
scas
mov
sub
push
mul
ret
xchg
mov
xchg
loop
jo
sbb
inc
inc
pop
or
daa
jecxz
push
cmp
adc
adc
xchg
dec
xchg
cmp
inc
mov
mov
dec
push
popa
dec
test
sbb
pusha
daa
mov
or
pop
pop
shl
(bad)
test
sub
pop
not
jl
cmp
mov
dec
stc
test
inc
sub
test
mov
fdivr
cmp
jne
(bad)
push
add
sub
add
add
rcr
ds
mov
jmp
jge
clc
mov
jmp
retf
cdq
cmp
sub
in
sub
mov
push
pop
mov
mov
or
(bad)
push
or
pop
lock
fisubr
fld
mov
adc
pusha
cmp
in
mov
je
aad
add
add
sbb
mov
cmp
ins
icebp
lea
movs
movs
mov
push
pusha
mov
outs
mov
mov
push
mov
daa
je
pop
push
pop
or
add
push
loopne
mov
cld
call
jne
xchg
lods
jne
mov
ror
cmp
push
inc
in
push
adc
jp
sbb
leave
add
sbb
dec
jmp
push
sahf
lock
inc
ja
inc
fcom
sub
shl
adc
and
xlat
adc
pop
dec
xchg
push
xor
mov
arpl
loop
mov
js
pop
or
inc
xchg
(bad)
xchg
pop
jg
sbb
fadd
jae
test
je
inc
pop
inc
std
inc
and
and
retf
add
arpl
dec
ror
inc
and
mov
outs
add
sbb
es
jmp
addr16
hlt
xor
stos
add
push
(bad)
mov
cdq
out
adc
sbb
test
outs
adc
sub
mov
push
mov
push
dec
sahf
popa
jg
mov
sub
dec
adc
push
dec
or
arpl
(bad)
ret
scas
pop
sbb
sbb
imul
mov
jbe
or
cmp
jle
or
mov
ss
aaa
je
add
div
xchg
lock
or
push
jmp
xchg
mov
mov
dec
enter
je
test
pop
ror
fsub
shr
adc
aad
add
inc
or
mov
outs
push
adc
movs
add
in
or
scas
and
cld
test
mov
arpl
push
xchg
push
loopne
sbb
adc
and
lock
add
pop
clc
mov
add
add
xor
into
cmp
push
loopne
daa
aaa
inc
ss
sbb
add
fisttp
sub
mov
sub
rol
lock
and
xor
push
and
xor
retf
cmp
push
pop
ins
adc
adc
sbb
adc
les
dec
outs
add
push
imul
push
call
sbb
les
inc
jo
mov
inc
out
fild
mov
std
dec
jo
cmps
jg
fcom
cs
cmp
add
inc
pusha
xor
jle
aaa
nop
xchg
mov
add
add
fild
cmp
pop
dec
aad
lods
leave
pop
pop
pop
test
fisubr
push
and
mov
popf
pop
inc
mov
jp
inc
mov
data16
ins
xchg
add
adc
jbe
mov
shr
(bad)
jecxz
and
inc
cmp
inc
or
ins
and
ror
cmp
jmp
pop
rol
xor
adc
psadbw
js
ror
and
nop
jle
push
rol
mov
xlat
cmp
aas
inc
cmp
and
adc
mov
bound
xor
jmp
into
dec
call
xchg
mov
or
ffree
jmp
(bad)
(bad)
push
or
pop
add
jg
mov
xchg
cmp
add
sbb
out
call
sub
clc
or
dec
mov
and
imul
mov
aaa
mov
std
dec
pusha
jb
sub
jne
sti
mov
cmp
in
sbb
add
fcom
mov
clc
movsx
push
in
movzx
cs
addr16
sub
repnz
call
cmp
dec
fcom
dec
ja
cld
enter
fcomp
pop
adc
add
add
add
lahf
sbb
dec
cwde
sub
lea
pop
jne
aam
pop
outs
adc
pop
js
jge
sbb
nop
jb
or
adc
mov
call
rol
test
not
test
jb
push
jl
adc
inc
rol
pushf
mov
adc
fcomp
and
(bad)
mov
fs
rcr
add
hlt
mov
in
inc
daa
rol
call
out
jo
cdq
push
cmp
sti
push
cwde
and
push
cmp
push
xor
xor
mov
cs
outs
lds
out
pop
sbb
fistp
mov
daa
fdiv
pop
push
inc
sbb
div
mov
sbb
jg
pop
ja
stc
fmul
adc
jae
rcr
outs
cmp
jne
lahf
bound
les
ret
and
ss
sbb
add
inc
push
add
sub
inc
add
push
cmps
shr
adc
sub
pop
pop
sub
and
out
add
push
pop
cmp
mov
mov
sub
xlat
unpckhps
add
mov
mov
test
sbb
push
icebp
inc
inc
retf
or
and
inc
je
add
mov
out
ja
dec
push
ss
jge
retf
clc
clc
pop
jbe
dec
push
xor
jo
cmp
fimul
xor
ss
pusha
mov
pushf
in
push
popf
(bad)
mov
loopne
dec
adc
ja
or
pop
jmp
leave
jne
push
push
fimul
pop
xor
and
sbb
shr
imul
cmp
fidivr
adc
add
rcr
cmp
or
addr16
or
pop
push
add
mov
add
pop
mov
mov
jl
or
xchg
test
pop
rcl
push
in
add
adc
mov
push
add
pop
leave
sbb
xor
xor
rol
jbe
inc
scas
imul
jg
bound
adc
hlt
sub
mov
cmp
das
cmp
lock
mov
jp
cdq
add
int
sahf
fadd
fidivr
push
pop
push
ror
mov
and
ja
push
cli
sub
xchg
jne
pop
add
dec
and
call
movs
push
push
xor
cld
adc
sub
dec
outs
adc
or
mov
fcmovne
jmp
(bad)
push
test
add
or
outs
fcom
add
ror
xchg
pop
push
or
jmp
or
and
or
or
es
jo
pushf
push
jecxz
jge
ret
add
cmp
sbb
popf
push
lods
push
mov
push
scas
sub
leave
jp
aas
mov
cmp
sub
push
inc
pop
mov
fst
cs
inc
and
cmp
pop
test
repz
hlt
aam
loopne
mov
mov
xchg
rol
xlat
mov
add
add
inc
jae
fiadd
leave
and
fiadd
mov
xor
pop
mov
adc
pop
mov
adc
mov
adc
jge
adc
mov
fild
or
or
pcmpgtw
fs
mov
(bad)
xor
enter
jnp
and
ficom
or
fwait
inc
dec
adc
leave
mov
call
mov
push
xchg
lods
ror
and
and
jle
mov
inc
push
adc
push
(bad)
xchg
push
or
adc
and
clc
cli
or
mov
std
add
sub
cmp
rol
mov
pop
sub
(bad)
dec
xchg
or
jae
rol
inc
push
out
add
inc
sbb
inc
mov
mul
pusha
xchg
das
lock
xor
inc
mov
ja
push
inc
or
inc
adc
pop
and
add
lods
pop
push
lock
outs
mov
sub
dec
adc
push
and
sbb
and
xor
xor
and
pop
jg
push
clc
cmp
call
adc
jne
into
je
push
mov
and
out
mov
enter
or
add
pop
shl
push
js
push
in
les
xchg
rcl
mov
pop
adc
leave
mov
adc
fdiv
(bad)
jmp
adc
jmp
push
pop
cmp
sbb
fwait
std
cdq
lods
sbb
pop
ins
xor
or
sub
and
inc
mov
test
rol
inc
sbb
test
aas
push
mov
dec
mov
add
mov
push
test
add
push
cmps
gs
cmp
fisttp
push
mov
idiv
jl
out
in
fld
add
imul
lods
adc
icebp
in
(bad)
fadd
mul
and
call
or
jmp
js
test
sub
push
pop
jbe
dec
sub
push
xadd
enter
cmps
inc
mov
out
push
call
inc
mov
push
dec
lahf
mov
push
sub
and
cmp
(bad)
js
jp
push
pop
iret
push
xor
stos
jge
pop
lock
mov
adc
push
test
or
and
mov
pop
push
push
or
daa
pop
aaa
push
ret
push
outs
xor
mov
pusha
and
rol
aad
ret
push
(bad)
push
mov
pop
push
push
xor
aam
pop
pop
pop
imul
in
mov
rcr
sub
das
in
or
cmp
xchg
test
cmps
in
pop
add
pop
mov
in
sub
pop
in
movzx
in
inc
inc
enter
imul
cmp
into
xchg
inc
or
ret
(bad)
xlat
and
inc
int
or
adc
xor
(bad)
pusha
(bad)
mov
add
dec
inc
and
mov
xchg
dec
out
aam
mov
pop
adc
ins
adc
mov
in
push
push
call
or
dec
mov
add
mov
hlt
xlat
push
mov
sub
add
lods
mov
sub
loopne
mul
or
sahf
and
jbe
addr16
pop
div
add
dec
js
test
movaps
aas
pop
xor
cmp
clc
and
cmps
jp
pop
and
sbb
js
lock
test
jbe
cld
loopne
adc
fdiv
(bad)
mov
adc
jo
push
push
cmc
pop
sbb
cwde
mov
test
cmp
add
in
setg
or
pop
std
pop
inc
or
inc
add
jo
cwde
adc
add
outs
adc
inc
add
outs
fiadd
jb
push
dec
add
or
jae
xchg
push
add
scas
loope
dec
add
and
bound
adc
(bad)
xchg
jp
popa
fld
addr16
add
cdq
sar
into
ss
call
push
push
push
div
ja
pusha
ret
dec
stc
mov
push
bound
mov
rcl
(bad)
clc
(bad)
pop
loopne
pop
push
(bad)
out
(bad)
mov
add
adc
or
and
push
mov
push
adc
adc
outs
mov
ror
dec
or
push
push
cmp
jnp
loopne
or
sbb
push
sbb
mov
fmul
or
idiv
jo
mov
dec
je
add
lahf
std
scas
sub
cmp
je
mov
ret
ret
sbb
and
int3
outs
data16
adc
push
add
sbb
sbb
mov
cmp
jo
hlt
imul
pop
add
push
push
mov
add
xchg
mov
xor
pop
or
pop
mov
test
cmp
push
cmp
cmp
jl
inc
adc
or
cmp
cwde
ror
popf
sub
push
and
and
or
pop
add
push
pop
(bad)
adc
ret
xchg
lods
add
sub
aam
or
mov
jnp
pop
xor
push
xor
shl
sbb
cmp
sahf
pusha
js
add
jo
pop
pop
imul
fadd
pop
lock
pop
and
sub
push
push
scas
mov
mov
fucomip
into
mov
retf
nop
mov
lods
mov
cmp
(bad)
pop
push
push
jne
movs
jne
cmp
jne
cmp
adc
lods
cmp
push
mov
xchg
xchg
add
ret
data16
sub
jmp
mov
cmp
loopne
xchg
add
and
push
cmp
repz
sbb
jp
mov
cld
mov
test
ss
ret
(bad)
cmp
dec
push
sub
neg
cmps
adc
pop
push
or
sbb
push
push
inc
pop
add
add
arpl
pop
push
leave
int
fs
arpl
outs
add
movs
adc
sbb
sti
pop
adc
jmp
adc
adc
inc
lods
inc
xchg
jmp
sbb
arpl
xchg
mov
mov
pop
shr
dec
mov
cwde
jle
adc
sahf
ins
dec
es
adc
jbe
adc
or
enter
dec
call
int3
test
mov
nop
movs
xor
mov
rcl
or
xchg
jl
pusha
mov
lods
push
mov
or
punpcklbw
jle
cmp
mov
push
dec
and
pop
loope
or
adc
movs
and
push
fs
push
sbb
lahf
or
cmp
mov
fild
xchg
shl
retf
xchg
xor
inc
xlat
push
aam
scas
mov
loope
sbb
lods
mov
rcl
pop
add
add
mov
push
jl
jo
adc
and
mov
mov
ja
dec
sbb
jle
cmp
inc
ins
mov
add
xor
mov
add
inc
push
pcmpeqd
ss
cmps
scas
push
inc
push
pop
mov
inc
add
nop
movs
fdiv
retf
add
fiadd
inc
pushf
jl
push
shr
add
je
pop
push
pop
push
aaa
ret
clc
in
lea
and
or
ror
(bad)
in
lahf
push
push
jp
cmp
adc
loope
mov
jno
push
push
xchg
jb
mov
rcr
pop
loopne
add
jnp
jl
out
xor
js
mov
retf
mov
popf
pop
xchg
push
jg
nop
mov
or
xor
xor
mov
test
rcr
push
push
shr
inc
and
xor
out
jo
push
cmp
push
cmp
sbb
adc
and
lds
(bad)
std
mov
push
mov
lods
mov
jle
call
sub
leave
xor
inc
sub
sbb
cld
loop
mov
inc
mov
add
add
xor
add
add
xchg
xor
add
inc
cmp
xchg
stos
test
push
jle
push
sbb
jnp
jmp
and
ror
jmp
sub
adc
js
ret
adc
push
add
dec
retfw
dec
test
imul
clc
scas
ror
sub
rcr
jg
addr16
cmp
inc
pusha
pop
mov
fild
dec
push
pop
hlt
xchg
push
pop
xchg
inc
push
outs
int3
inc
xor
jle
jnp
test
push
sbb
(bad)
cli
dec
addr16
test
dec
in
test
pop
clc
mov
fs
mov
nop
mov
hlt
or
retf
mov
xchg
adc
jne
cmp
jne
loope
and
(bad)
in
fbld
push
cld
cwde
or
pop
add
scas
push
pusha
sbb
mov
pop
mov
jo
mov
pop
sti
pusha
pop
rol
fsub
jmp
lods
push
push
dec
sbb
mov
sbb
ins
pop
fwait
mov
jecxz
sbb
dec
retf
sbb
pop
imul
fisubr
faddp
add
in
or
mov
mov
fnstsw
or
aas
retf
lock
dec
aam
mov
cmps
test
or
aam
test
push
mov
pop
call
add
xor
mov
rcr
fmul
dec
add
fidiv
sub
aam
pop
in
int3
lods
dec
call
(bad)
adc
outs
jne
popf
cmp
sar
inc
xor
les
popa
(bad)
sbb
or
shl
mov
xlat
int
leave
test
push
add
cmps
in
cmps
std
pop
ss
mov
add
in
and
jae
out
or
in
je
cmp
jne
dec
pop
mov
xchg
sbb
nop
push
push
xchg
mov
clc
pop
xchg
push
inc
add
call
movs
imul
xor
inc
rcl
in
jmp
adc
popf
jge
jle
push
in
push
add
call
inc
sub
and
sti
jbe
sbb
dec
ins
aaa
jmp
(bad)
sub
sub
jbe
jae
jbe
push
in
push
add
loopne
(bad)
push
cmp
rcr
icebp
push
(bad)
lock
adc
mov
dec
cmp
mov
(bad)
add
pop
mov
sub
xlat
inc
fiadd
aam
sbb
cmp
pop
popa
mov
xchg
xor
cmp
push
ins
sbb
or
shl
sbb
dec
mov
mov
pushf
adc
loope
sti
add
adc
mov
lods
sub
push
mov
mov
outs
jo
jg
movs
ret
test
scas
mov
int3
adc
test
pop
jle
push
loopne
mov
stc
mov
mov
movd
mov
aam
movs
int3
push
jae
stos
push
mov
or
adc
cmp
jae
mov
(bad)
jmp
sub
movs
or
or
(bad)
cld
jnp
adc
and
push
add
sti
push
retf
inc
je
clc
sti
std
jo
cli
push
hlt
ret
movzx
and
or
pop
push
or
js
or
scas
cld
xchg
add
jns
pop
or
fstp
(bad)
jge
sub
clc
scas
ins
xor
jne
or
sbb
mov
imul
jmp
adc
call
jle
mov
add
out
ds
sub
sub
ds
add
pop
sbb
sahf
test
adc
call
dec
cmp
dec
cmp
jne
xor
test
sbb
mov
cmp
popf
icebp
adc
out
xor
mov
push
mov
scas
and
pop
pop
and
mov
not
jge
ins
sub
movs
loope
push
stos
add
sbb
fwait
ror
(bad)
sub
out
add
or
mov
adc
adc
cs
or
mov
jg
xor
adc
lock
sbb
jno
(bad)
sbb
add
mov
rcr
cmp
sbb
fidivr
mov
add
outs
cwde
out
jge
ss
jl
and
loopne
cmps
or
push
ret
sbb
pushf
int3
out
xchg
pop
pop
repz
cmp
add
or
mov
loope
mov
fdiv
push
jmp
add
jl
test
cwde
in
add
loop
xchg
fld
arpl
into
add
lock
add
movs
call
cmp
sub
pop
mov
add
and
inc
and
loopne
sub
jne
fmul
int
adc
add
cwde
push
rcl
mov
mov
inc
push
and
mov
mov
mov
jge
inc
mov
mov
fistp
lds
xchg
dec
movs
pushf
and
daa
jno
outs
in
mov
cmp
jbe
dec
outs
arpl
daa
mov
sbb
(bad)
bound
mov
jle
test
push
in
or
popa
cs
add
dec
daa
sub
jne
xchg
xor
push
lahf
loopne
pop
les
adc
pop
jle
adc
ror
jmp
push
push
arpl
pop
std
fmul
(bad)
rol
jge
loopne
retf
mov
adc
mov
int3
adc
lfs
fsub
adc
add
jne
push
out
pop
sahf
int
mov
jns
adc
jl
or
sbb
sub
pop
mov
dec
mov
sti
lds
inc
push
jg
mov
push
rcl
aas
adc
scas
xchg
stos
or
push
push
push
mov
jae
cld
sub
mov
clc
mov
pop
rol
pop
cld
mov
cmp
cmp
push
(bad)
outs
outs
jb
lea
add
das
ror
dec
je
add
push
xchg
add
adc
or
jo
mov
repnz
inc
cwde
push
or
or
movzx
mov
cdq
add
scas
inc
adc
add
outs
cmp
es
push
adc
cmp
sbb
inc
sbb
xor
movzx
data16
jmp
adc
pop
adc
clc
cmp
cmp
jo
outs
pop
retf
adc
push
lar
jne
ins
push
inc
add
pop
mov
xchg
add
add
aas
pop
jne
push
inc
ja
test
add
pop
shl
jbe
cmp
sbb
and
add
repnz
adc
inc
jle
dec
mov
jbe
xor
push
mov
adc
iret
and
in
push
mov
mov
inc
mov
mov
add
add
mov
push
pop
xor
push
fiadd
aaa
adc
imul
in
mov
aas
(bad)
test
jae
je
nop
inc
in
mov
sub
dec
jnp
pop
add
adc
daa
lds
out
and
dec
sub
shl
jmp
je
hlt
sbb
je
adc
ret
out
xchg
clc
test
repnz
jl
inc
xor
mov
xor
mov
shl
daa
je
inc
dec
jne
cmp
je
mov
mov
in
fcomip
push
add
jp
je
test
jne
outs
in
mov
pop
pop
ss
lea
mov
mov
imul
add
test
xchg
es
or
adc
push
xor
fadd
out
bound
data16
es
inc
sbb
sub
jo
and
xor
add
xchg
leave
or
mov
jl
xchg
xchg
xchg
js
mov
push
xlat
arpl
cmp
xor
xor
jo
push
push
into
or
push
aam
test
jl
lahf
add
adc
fisttp
loop
push
in
add
push
push
gs
dec
popa
jns
jne
cld
imul
add
(bad)
(bad)
jle
mov
je
jb
inc
outs
je
outs
ins
or
arpl
je
outs
or
fs
je
ins
jae
sub
mov
push
inc
ins
ins
imul
in
jae
outs
or
outs
fwait
mov
ds
xchg
mov
gs
and
push
or
popa
in
or
sbb
outs
sbb
push
outs
mov
sub
pop
inc
dec
inc
jb
ja
jnp
push
imul
pop
inc
inc
add
add
(bad)
out
fild
jae
imul
arpl
or
or
dec
push
mov
es
popa
rol
aam
inc
add
or
clc
adc
mov
mov
and
inc
mov
push
adc
pop
outs
mov
shr
jnp
test
mov
pop
xchg
cmp
dec
push
jbe
push
add
cmp
hlt
xor
dec
add
ret
ins
adc
mov
mov
fsub
xor
mov
or
push
sub
cmp
repz
ins
fwait
push
lock
movs
pop
dec
add
or
sbb
push
mov
pop
mov
add
in
(bad)
mov
add
test
pusha
fidivr
ds
and
lock
in
data16
adc
push
add
pop
push
fwait
int
jb
pop
or
fwait
push
push
sbb
inc
adc
push
push
outs
mov
fldcw
ins
dec
jno
outs
(bad)
test
fs
out
sbb
pop
xchg
je
jne
cmp
mov
pop
nop
push
xchg
or
cld
inc
nop
jo
movd
inc
outs
arpl
inc
and
addr16
lods
pop
outs
ins
outs
xchg
push
dec
xor
inc
inc
mul
lock
loop
mov
pop
cdq
or
outs
push
imul
fisubr
icebp
xchg
push
xchg
pushf
pop
sar
ins
outs
ja
aam
pop
inc
jmp
outs
mov
stos
aad
fst
rcr
lahf
pop
jo
(bad)
push
inc
push
push
gs
outs
aas
aaa
inc
push
inc
push
push
outs
jae
pop
and
shr
push
gs
scas
fdiv
inc
sub
or
outs
xor
aaa
repnz
add
cld
(bad)
mov
mov
mov
mov
mov
inc
inc
repz
push
dec
je
dec
daa
ret
in
lds
push
inc
xor
fst
add
add
cmp
add
mov
mov
or
data16
or
pop
jno
xor
ja
push
inc
dec
ja
fs
pop
xchg
xor
mov
ret
add
mov
mov
ss
add
push
or
adc
je
add
or
inc
nop
jo
cld
rcl
sbb
xor
jno
rcr
sub
popa
jae
add
pop
sub
pop
jbe
icebp
test
dec
rcr
nop
mov
jmp
jb
test
and
xchg
xchg
sbb
lsl
sub
unpckhps
push
popa
nop
xlat
jl
push
inc
in
scas
int
ror
leave
xor
pop
adc
out
sub
loopne
xchg
repnz
adc
xor
inc
icebp
adc
inc
outs
arpl
jb
popf
call
mov
mov
or
pop
shl
sbb
jmp
push
inc
adc
mov
mov
imul
adc
ret
sti
add
mov
adc
(bad)
call
sbb
shl
jb
inc
rcr
lahf
and
lahf
fild
push
add
mov
popa
imul
dec
pop
dec
hlt
xor
cmps
das
push
pop
fadd
rcr
mov
pop
xor
pop
dec
dec
nop
or
and
inc
jo
jmp
sbb
xor
mov
retf
bound
mov
inc
je
pop
mov
inc
outs
(bad)
ins
gs
push
and
outs
sbb
ret
ret
inc
rcr
je
sbb
shl
adc
add
or
push
adc
js
mov
or
mov
arpl
rcl
adc
and
push
and
loopne
xor
dec
imul
fcomp
dec
and
dec
sub
dec
call
inc
or
mov
xor
add
jmp
and
add
jne
dec
push
jne
jmp
add
(bad)
(bad)
add
jne
cdq
xchg
jo
cmp
sub
cmp
push
fld
movs
mov
in
enter
frstor
in
jne
cmp
mov
sub
sbb
aas
daa
add
mov
dec
jmp
mov
int3
sbb
rcl
pop
(bad)
sub
imul
(bad)
in
test
add
mov
loopne
inc
mov
in
je
test
gs
jae
or
and
fimul
pop
adc
xchg
sub
outs
inc
or
mov
sub
imul
jmp
push
xlat
adc
enter
xchg
xchg
sub
push
clc
or
inc
ins
fwait
adc
or
or
dec
fucomi
in
call
dec
or
lock
pop
dec
xor
or
jb
ret
sbb
pop
dec
jne
adc
xor
dec
outs
inc
add
xor
ds
inc
xor
sar
inc
push
push
xor
push
push
xor
inc
cmp
pop
inc
xor
andps
call
jbe
add
ins
pop
push
das
fcomp
xor
outs
xchg
mov
dec
fdiv
ss
pop
daa
mov
les
clc
lock
xor
jmp
aaa
sub
inc
cmp
inc
ja
sbb
inc
pop
ins
pop
xor
dec
cmp
loop
lds
xor
in
inc
pop
dec
cmp
mov
jle
stos
lods
and
jae
xchg
inc
pop
dec
cmp
sbb
mov
add
retf
xchg
xchg
shl
pop
mov
xchg
xchg
xchg
xchg
pop
jg
lds
retf
xchg
jmp
movs
pop
jge
mov
ret
out
mov
pop
and
repnz
sbb
jnp
(bad)
call
adc
sbb
sbb
sbb
mov
jae
sbb
aam
xlat
mov
xchg
mul
xchg
push
pop
cwde
push
test
div
mov
xchg
push
dec
mov
sub
jb
and
push
mov
psrlw
div
sub
popa
fild
lock
sbb
imul
imul
hlt
push
js
jle
xchg
or
and
nop
add
push
cwde
dec
jns
adc
mov
and
daa
test
not
out
inc
pushf
movs
cmps
imul
jle
add
pusha
stc
neg
sbb
push
dec
ds
mov
shl
push
cwde
sub
push
dec
push
loopne
push
sub
int3
ret
xchg
outs
jnp
jmp
push
push
(bad)
push
push
std
push
sub
mov
fsub
push
les
mov
mov
xor
in
adc
test
bswap
out
call
(bad)
mov
mov
mov
sub
hlt
test
je
sub
adc
sbb
inc
inc
cmp
js
push
sbb
push
dec
rcr
or
jae
lods
pushf
push
jb
push
cmc
or
sub
test
jns
popf
in
jne
shl
sub
cmp
fldenv
imul
dec
imul
adc
lods
les
inc
dec
jl
add
cmp
or
add
mov
mov
or
int
sub
gs
sbb
sub
dec
outs
inc
jne
data16
or
sub
fidiv
mov
pusha
add
ins
loope
int3
sbb
les
rcl
ins
fs
arpl
mov
xor
mov
das
dec
jne
(bad)
retf
cmp
mov
xchg
mov
xchg
jp
cmp
xchg
jb
enter
mov
in
push
inc
sahf
call
xchg
cmovp
ds
push
(bad)
jmp
sbb
xchg
cmovno
int3
jnp
add
outs
in
bound
std
adc
push
(bad)
adc
mov
sbb
mov
inc
and
and
mov
je
pushf
push
and
push
push
adc
push
out
push
pusha
push
ror
call
and
or
or
sbb
femms
sbb
and
call
add
hlt
sbb
push
sbb
das
rcr
(bad)
js
btr
outs
add
outs
mov
mov
xor
aas
rol
fwait
push
inc
gs
jne
sbb
fs
je
ret
cmp
pop
dec
gs
xchg
sar
adc
sbb
mov
inc
jae
mov
jo
sub
imul
adc
inc
fs
dec
pop
shl
and
jo
add
cmp
in
loope
mov
cs
or
pop
cmp
push
add
out
and
mov
fiadd
xlat
pop
inc
or
ins
ret
fndisi(8087
add
ret
and
retf
pop
or
stos
push
lahf
sub
leave
push
retf
push
fcom
loopne
or
push
and
adc
fwait
and
fwait
and
inc
daa
add
pop
lods
or
bound
jmp
repnz
inc
or
into
mov
jmp
fisttp
jle
popa
bound
or
enter
cdq
or
enter
ret
in
call
jge
loope
mov
jmp
movs
or
cwde
adc
jno
xor
outs
mov
rcr
inc
pop
int3
push
inc
or
inc
nop
cmp
and
cwde
sub
or
out
ss
scas
fnsave
mov
mov
mov
jae
xchg
inc
(bad)
sbb
or
add
mov
ror
sgdtd
inc
bound
pop
pusha
xor
in
inc
daa
adc
and
fnstcw
scas
xchg
and
int3
xchg
daa
xchg
mov
mul
adc
cmps
adc
or
movups
nop
test
inc
in
outs
inc
ja
and
xchg
jecxz
inc
xchg
adc
in
pop
dec
xchg
in
mov
add
mov
jbe
aam
gs
in
dec
mov
mov
mov
push
xchg
ror
or
xchg
pop
jmp
sbb
jbe
xchg
pop
sbb
dec
sub
xchg
jmp
dec
push
imul
sbb
out
(bad)
jo
mov
bndstx
or
jno
mov
aad
xchg
mov
nop
xchg
push
mov
call
fs
sbb
and
mov
push
dec
pop
mov
inc
aas
sub
cmp
jmp
and
outs
jne
das
call
or
dec
mov
and
sbb
xchg
and
in
pop
inc
and
mov
mov
inc
ret
sbb
fsub
aam
test
ror
mov
mov
loopne
pop
pop
jb
jle
sub
popa
push
ja
or
cwde
push
ret
cdq
(bad)
inc
sub
mov
cs
(bad)
inc
in
or
(bad)
mov
sub
mov
out
hlt
popf
aaa
sbb
add
dec
dec
or
cmp
cmps
dec
mov
pop
pop
mov
pop
inc
sbb
cmp
jmp
and
push
test
stos
inc
xor
jmp
adc
xor
xor
xchg
inc
cmp
or
adc
ss
push
xchg
sbb
inc
test
mov
xor
loopne
mov
inc
xchg
sub
and
(bad)
dec
leave
cmp
inc
shl
add
cmp
sub
cmp
inc
aas
adc
add
and
sub
and
lock
fs
add
pop
pop
push
pusha
inc
js
jns
out
xchg
inc
add
in
add
js
je
inc
push
out
pushf
push
rol
add
gs
aam
inc
test
pop
inc
dec
out
inc
push
mov
xchg
dec
inc
pop
dec
add
or
push
jo
enter
dec
dec
in
add
jmp
add
add
sbb
in
add
push
jbe
add
add
jb
and
sbb
fs
arpl
fs
sbb
xchg
xchg
popa
xchg
xchg
lock
xchg
xchg
and
push
jne
xchg
xchg
xchg
fwait
shr
mov
xor
retf
xchg
xchg
fscale
and
xchg
data16
xchg
jmp
xchg
xchg
jns
(bad)
in
xchg
xchg
xchg
retf
adc
xchg
xchg
xchg
pushf
shl
movs
xchg
xchg
xchg
xchg
sub
mov
leave
out
adc
daa
in
xchg
cmps
daa
out
mov
cmp
test
push
dec
push
addr16
push
cmp
push
nop
sbb
scas
sbb
movs
sub
scas
daa
loopne
sbb
rcr
adc
push
fsub
push
cmp
enter
(bad)
loopne
inc
dec
imul
dec
std
dec
sub
inc
push
arpl
inc
cs
mov
int
or
fidivr
push
or
popa
lock
gs
cs
mov
push
jae
fisttp
clc
test
add
call
push
cmp
inc
movs
push
adc
ins
outs
ss
test
inc
mov
ror
cdq
jecxz
xor
push
mov
ins
test
add
out
mov
enter
out
mov
aaa
dec
add
or
mov
fld
or
jae
les
outs
(bad)
push
stos
inc
add
ficom
lods
sahf
add
stos
pop
(bad)
mov
das
cmp
das
mov
xchg
test
adc
adc
imul
test
sub
xlat
test
cs
stos
in
adc
imul
pop
pop
sbb
or
sbb
movs
pop
lea
add
xchg
sbb
push
pop
and
xchg
sbb
and
movs
add
and
or
int
add
adc
ror
inc
cs
daa
nop
stos
in
sub
or
or
add
sub
sub
sub
das
xor
or
inc
aaa
sub
or
pop
push
and
xchg
push
and
mov
xor
cs
inc
(bad)
ss
ret
sbb
add
imul
cmp
call
and
push
(bad)
push
sar
cmp
push
jb
cmp
mov
shl
push
movs
push
xor
sub
stos
xchg
(bad)
inc
xchg
push
mov
shl
inc
add
xchg
pop
inc
dec
mov
ror
add
add
push
sub
add
inc
push
repnz
push
mov
lods
inc
sub
push
and
and
jb
mov
and
and
and
xchg
mov
add
and
xchg
scas
and
and
and
and
stos
xchg
and
and
mul
and
jae
mov
and
mov
or
mov
mov
mov
bound
mov
cli
push
mov
mov
pop
mov
mov
fcom
mov
jp
call
dec
mov
repz
sub
xor
xor
jmp
cmp
add
pop
cmp
push
mov
int3
sub
push
in
push
add
out
push
pushf
pop
(bad)
push
loopne
xor
fidiv
(bad)
cmp
dec
sbb
test
repz
sti
push
push
pop
push
(bad)
aam
mov
push
hlt
push
add
push
or
sbb
es
mov
jo
sbb
push
pop
pop
sub
jl
xor
or
push
mov
push
sub
push
push
jl
add
mov
mov
inc
out
call
and
push
inc
jne
je
outs
pop
sbb
add
pop
call
test
jmp
xchg
pop
imul
or
loopne
push
sbb
mov
jnp
es
inc
pushf
push
in
mov
shr
xchg
mov
or
xchg
je
jne
enter
sbb
mov
sbb
mov
cmp
mov
mov
push
dec
mov
sub
fisub
shl
mov
setg
out
pop
stos
jae
imul
and
push
dec
(bad)
js
es
inc
repnz
(bad)
loopne
dec
popa
lds
fcom
push
push
in
push
jge
mov
cdq
mov
mov
test
cmp
(bad)
scas
jno
shl
push
dec
ins
popa
addr16
call
cmp
imul
in
data16
or
cmp
je
push
push
outs
jo
or
int3
add
fisubr
inc
vpermi2q
fidiv
push
jl
fild
push
and
sub
cmovg
js
je
push
jl
jle
mov
add
cwde
loopne
pop
sbb
inc
dec
mov
leave
jo
push
and
rol
pop
adc
lds
mov
and
and
(bad)
sti
pop
dec
(bad)
sub
dec
popa
jb
ds
push
sbb
sbb
or
jae
push
aaa
mov
push
sub
outs
bound
arpl
add
inc
gs
(bad)
xchg
test
pop
pusha
sbb
dec
xor
lea
ins
test
test
add
das
cmp
inc
xchg
imul
push
dec
inc
xchg
pusha
ins
aas
mov
push
ins
adc
and
pusha
data16
sbb
jns
jg
mov
or
in
pop
sbb
lock
sbb
push
inc
mov
and
push
clc
es
das
xor
cld
sbb
mov
daa
jl
daa
inc
cmp
push
push
jne
push
xchg
pop
xor
add
pop
add
add
push
jnp
add
adc
push
or
mov
leave
or
outs
fs
lods
jmp
je
cdq
mov
icebp
sub
push
rcl
ret
out
jns
xlat
push
pushw
outs
ret
fldlg2
push
jl
add
push
pop
iret
jo
out
add
mov
ds
shl
add
pushf
test
cmp
xchg
mov
test
iret
and
loopne
adc
xor
shr
pusha
jnp
add
int3
pop
fst
bound
test
cdq
xchg
loop
sahf
(bad)
ins
adc
adc
movs
ret
push
pop
out
scas
add
inc
jle
jne
daa
inc
mov
movs
cmp
movs
push
adc
stos
xchg
outs
jnp
aaa
dec
jo
js
loopne
adc
test
cmp
pop
sbb
cmp
les
hlt
push
adc
sahf
jo
dec
mov
cmc
gs
imul
jge
xor
inc
dec
cwde
mov
cmp
push
cmovbe
and
add
cmc
push
jne
jne
mov
mov
fwait
rol
push
loopne
cmp
mov
push
xor
and
jp
leave
fiadd
outs
popa
ins
xor
push
smsw
fidiv
cwde
pusha
xor
jae
shr
push
add
xchg
lods
in
jne
stc
fmul
push
cmp
sbb
popa
fmul
adc
sub
cwde
loopne
push
jo
enter
jmp
sub
or
(bad)
cmp
push
add
jmp
inc
(bad)
dec
push
mov
mov
push
ss
xor
mov
scas
xor
aas
push
mov
xor
enter
je
clc
nop
or
sbb
or
scas
ss
outs
mov
and
sbb
int
lock
inc
ins
add
and
dec
aaa
sub
push
mov
ss
push
outs
cld
jae
int
aaa
ins
xchg
ins
add
xchg
sbb
add
popa
sbb
pop
push
les
mov
cmp
xchg
mov
and
dec
jp
mov
loopne
xor
fwait
inc
xchg
push
push
xchg
clc
mov
loope
lods
sbb
fldcw
(bad)
in
push
and
push
pop
cmc
out
jmp
inc
ja
scas
mov
add
adc
dec
pop
mov
push
pop
popa
or
mov
push
jmp
inc
(bad)
call
in
stos
push
xchg
jmp
push
or
mov
push
dec
mov
jno
test
call
scas
mov
fisttp
pop
adc
pop
inc
jmp
mov
cdq
jecxz
inc
jnp
call
push
adc
scas
call
out
mov
retf
jmp
mov
adc
add
push
ja
push
inc
sub
pop
sub
dec
ins
mul
cwde
enter
test
pop
into
mov
add
inc
ss
add
sbb
sbb
pop
mov
repnz
push
or
sbb
arpl
xor
movs
pop
inc
and
popf
push
sbb
jb
das
xchg
xor
adc
adc
add
fcomp
push
jnp
push
push
je
xor
mov
dec
mov
pop
or
adc
aaa
aaa
push
add
pop
or
push
jb
outs
sbb
popf
pop
and
xchg
sbb
jb
pop
and
adc
xchg
sbb
add
and
push
sub
leave
pop
and
add
test
and
push
xchg
or
and
xlat
and
xlat
and
xlat
mov
mov
rol
xchg
sbb
sub
adc
shr
leave
add
jo
adc
lods
sub
add
adc
pop
sbb
clc
and
nop
mov
cs
adc
das
xor
test
xor
or
xor
aas
xor
push
inc
dec
call
add
xor
jmp
nop
mov
leave
add
jo
test
test
call
mov
mov
xchg
pop
jo
sub
push
fld
ror
xor
xor
inc
push
fs
sbb
sub
add
or
add
xchg
rcr
or
cmp
cmp
xor
lods
shl
and
xor
xor
jo
mov
jb
xor
or
sub
xor
xor
shl
xor
or
cs
xchg
xor
xor
xor
xor
je
ret
cmp
in
into
sub
xor
je
mov
cmp
iret
xor
cmp
xor
popf
mov
enter
or
in
enter
shl
jl
rcl
rol
push
push
inc
push
push
test
outs
js
call
and
push
sbb
or
push
adc
inc
sar
loop
adc
test
add
mov
mov
push
dec
ror
lea
test
les
push
xor
sbb
cwde
inc
fdivr
fdiv
inc
es
push
aaa
ja
inc
mov
outs
lock
inc
(bad)
push
int3
mov
sbb
push
pop
mov
retf
out
or
pop
int
aam
adc
ins
fcmovb
mov
cmp
cdq
lods
inc
jae
shl
push
pop
es
mov
push
add
inc
add
add
mov
out
push
outs
int3
push
aam
dec
jo
pop
xchg
jp
pop
not
popf
jp
mov
loopne
or
enter
dec
xor
adc
gs
jae
sbb
xchg
rol
jae
pop
add
cmps
mov
dec
adc
test
pusha
outs
mov
scas
adc
xor
clc
repnz
mov
sub
xor
xlat
pop
mov
xchg
cmps
push
mov
shl
cmps
imul
inc
or
iret
pop
sbb
or
dec
mov
xchg
adc
push
adc
enter
sbb
jno
ror
movs
add
xchg
fisub
xchg
gs
sub
rcr
add
inc
add
inc
les
inc
xor
xchg
sbb
add
mov
int
dec
lods
in
dec
add
xchg
sbb
push
xchg
and
dec
xchg
adc
sub
sbb
aaa
leave
add
xchg
sub
leave
sbb
ins
push
and
cmp
and
lock
inc
pusha
ds
and
push
sbb
and
and
push
xchg
or
cs
inc
scas
sub
(bad)
fmul
add
cmp
or
in
sbb
cs
inc
dec
scas
xchg
xor
xchg
test
xor
sbb
xor
scas
xchg
test
sbb
sbb
cmp
add
add
cmp
add
add
sub
repnz
(bad)
and
and
(bad)
fistp
stos
xchg
fcomp
inc
inc
or
xchg
mov
inc
inc
inc
fdivr
push
fnstcw
inc
inc
inc
inc
mov
cs
inc
hlt
adc
cmp
inc
inc
inc
inc
mov
inc
inc
sub
inc
inc
inc
inc
mov
neg
fadd
inc
cs
imul
fnstsw
inc
inc
inc
inc
bound
inc
inc
stc
and
inc
ins
pushf
pop
inc
inc
xchg
mov
lods
adc
in
loopne
loop
loope
fiadd
or
out
ror
lods
pop
pop
mov
aas
fdivr
aas
ins
dec
enter
mov
loopne
add
push
fisttp
les
inc
push
ja
mov
push
mov
out
mov
push
lock
push
mov
call
push
push
popa
imul
mov
mov
and
add
xchg
jge
cmp
jmp
sbb
mov
js
aad
mov
inc
pop
jbe
aad
cmps
aas
movups
sbb
aad
adc
mov
xor
mov
add
mov
add
adc
dec
pusha
inc
mov
dec
mov
and
push
pop
add
and
xchg
shl
and
add
and
and
and
inc
dec
daa
or
inc
leave
push
xor
jb
or
push
dec
sub
push
xor
sub
xor
pop
loope
pop
push
jecxz
cmp
jmp
xchg
pop
adc
adc
xchg
xor
adc
xchg
fild
les
xchg
dec
mov
sub
xchg
inc
push
inc
cmp
mov
(bad)
xchg
cmp
dec
push
inc
cmp
add
ret
ret
add
pop
mov
or
pop
mov
jecxz
mov
in
push
je
mov
in
mov
pop
mov
xor
mov
mov
in
out
pop
mov
out
shr
or
fisttp
xchg
or
and
or
daa
ret
add
xor
pop
mov
inc
add
add
xchg
or
push
or
push
arpl
data16
mov
push
inc
mov
dec
bound
mov
cmp
(bad)
mov
or
dec
int3
pop
or
and
mov
xchg
mov
inc
pushf
(bad)
data16
test
jae
mov
lods
and
arpl
jnp
ins
cmp
push
iret
in
in
push
sbb
in
mov
dec
mov
push
mov
pop
mov
int
int
and
cmps
mov
and
add
sbb
fadd
call
inc
cmp
adc
pop
mov
xchg
push
or
imul
sub
add
dec
dec
pop
pushf
adc
mov
scas
ss
imul
jg
or
push
dec
inc
popa
nop
outs
rep
loopne
fsubr
mov
or
push
ins
popa
cli
push
stos
add
mov
xor
pushf
shl
pop
sub
xor
sub
icebp
scas
icebp
clc
fcom
and
dec
push
inc
(bad)
(bad)
push
inc
dec
push
and
adc
add
push
mov
cwde
push
hlt
sbb
mov
in
push
push
or
aaa
push
jecxz
std
movs
mov
std
fiadd
fwait
pop
mov
gs
popa
ins
jae
or
push
loopne
xor
aam
inc
dec
ret
mov
mov
add
mov
inc
and
sbb
inc
popa
jo
daa
lock
inc
je
push
sar
fcom
mov
cmpxchg
adc
enter
adc
adc
adc
stos
add
mov
sbb
cmps
aaa
push
(bad)
clc
jmp
(bad)
(bad)
jge
pop
cmp
bndldx
outs
dec
mov
dec
or
mov
loopne
jmp
in
dec
jbe
(bad)
(bad)
dec
cmp
inc
jmp
or
cmps
or
add
stos
(bad)
pop
jns
pop
push
and
xor
jl
or
and
test
imul
fcomp
fcos
pop
and
and
ror
lea
aam
xor
test
sub
or
inc
push
arpl
mov
jb
pop
push
popa
sub
and
das
inc
xor
loope
das
popa
xor
and
int3
mov
shl
ins
add
aaa
popa
inc
cs
jno
jae
ret
add
jae
test
cmp
add
jle
in
or
pxor
pop
js
xor
xor
xor
xor
dec
jae
cmp
xor
scas
sar
and
xor
xor
jns
shl
cmp
jecxz
repnz
xor
xor
jo
shl
xor
or
cs
jbe
xor
xor
xor
xor
dec
jb
dec
cld
ret
test
sahf
cmps
ins
(bad)
push
jo
push
mov
fld
dec
or
cmps
out
inc
add
cmp
dec
out
push
mov
mov
push
push
daa
push
aas
out
mov
js
jmp
sub
inc
push
inc
sti
test
or
push
dec
outs
outs
imul
into
push
mov
je
arpl
loop
jmp
mov
pushf
test
mov
lods
and
ret
cdq
cs
push
push
test
or
cs
repnz
leave
call
dec
pop
pop
mov
lea
int3
fisubr
sti
add
aad
aaa
or
ja
xchg
(bad)
inc
dec
inc
inc
sbb
xor
packsswb
pop
inc
or
aaa
adc
cmp
nop
es
push
dec
and
add
(bad)
out
or
(bad)
xor
(bad)
sub
int3
clc
jno
mov
out
call
inc
mov
cmp
sti
ficom
ins
inc
ror
inc
fcom
cbw
xchg
mov
push
push
add
or
icebp
or
push
xor
sbb
sub
push
push
ins
imul
mov
jo
cs
sbb
das
inc
cs
repnz
dec
mov
dec
pop
(bad)
loope
inc
je
add
jbe
stos
js
mov
adc
aam
test
ins
sub
add
dec
or
call
add
sahf
mov
cwde
pop
push
mov
push
push
xchg
add
out
push
adc
or
cmp
cmp
test
mov
sub
jbe
mov
stos
adc
mov
push
in
ja
aaa
shr
and
or
push
add
xor
xchg
inc
mov
jno
pusha
cmp
pop
cmc
dec
or
adc
pop
add
int
jnp
add
or
push
push
push
pop
loop
cmp
out
cld
(bad)
cmp
pop
sbb
sahf
out
(bad)
mov
and
push
jl
out
push
mov
or
adc
out
push
inc
push
pop
pop
sub
adc
lods
loope
bound
push
inc
imul
lods
push
fadd
ins
and
sbb
add
mov
pop
inc
push
push
push
pop
push
push
dec
ds
pusha
pop
push
pushf
bound
ins
mov
lods
push
xor
(bad)
(bad)
neg
or
inc
push
shl
ret
xor
les
push
ja
pop
fsub
jl
fmul
ins
shl
xchg
lods
movs
push
mov
pusha
xchg
push
jbe
aaa
inc
arpl
ja
dec
aad
out
mov
push
je
fld
out
push
aad
cmp
iret
jo
mov
add
add
pop
or
jae
loope
test
in
ja
ja
cmp
sbb
adc
ins
fs
dec
mov
cmp
xor
inc
out
or
dec
cmps
daa
sub
sub
std
sub
mov
outs
xchg
sub
stos
add
mov
inc
cmp
rol
and
ja
cmp
pushf
pop
cmp
push
rol
sbb
and
pusha
adc
popa
push
jno
add
mov
inc
fwait
dec
add
add
add
imul
data16
adc
mov
popf
ret
pusha
mov
xchg
call
(bad)
enter
push
lods
cmp
(bad)
push
das
lahf
mov
xor
std
push
sbb
jnp
lock
icebp
dec
into
sub
enter
add
cwde
push
adc
jo
dec
enter
jne
xor
fdiv
or
jecxz
ins
jbe
add
add
pop
lods
das
and
fdivr
fild
cmps
sbb
(bad)
cmp
leave
dec
sub
sar
xor
adc
xor
xchg
popa
or
popa
iret
pop
movs
or
dec
in
loopne
pusha
pushf
addr16
add
dec
sbb
cmp
pushw
xor
cmp
addr16
loopne
jo
dec
pop
pop
push
pusha
imul
sbb
mov
dec
or
ins
pop
mov
and
jp
sti
pop
mov
push
push
sbb
push
pop
push
dec
shl
clc
ins
push
adc
je
jnp
ja
push
mov
xchg
push
lock
inc
jbe
out
repz
mov
push
test
add
mov
push
or
sub
mov
fdiv
dec
mov
movlps
int
ror
ss
jns
imul
inc
mov
mov
lds
push
cwde
xor
gs
jo
pusha
mov
xchg
add
pop
sahf
push
sbb
push
push
add
je
add
mov
repnz
jb
add
ja
pop
push
sub
jb
sub
pop
lea
test
je
add
pusha
push
imul
fstp
mov
mov
xor
mov
sbb
sahf
or
mov
mov
adc
xchg
(bad)
fist
and
jmp
mov
call
test
je
mov
aam
not
and
or
mov
fidivr
paddusw
pop
das
mov
loopne
pop
ret
loopne
add
mov
mov
popf
adc
outs
inc
sbb
pop
mov
outs
(bad)
repnz
jge
adc
cmp
rol
cld
xor
in
xchg
int3
xor
cld
cmp
or
sub
sbb
test
je
or
mov
add
cmp
mov
add
mov
sbb
sbb
pusha
outs
pop
hlt
js
push
push
or
push
lea
mov
mov
and
jo
fld
dec
int3
pop
mov
call
sub
pop
pop
adc
nop
es
pop
ret
cmp
clc
pop
or
xor
icebp
mov
mov
test
add
sbb
inc
(bad)
push
xor
push
or
push
je
add
and
jb
nop
lahf
in
xor
mov
add
scas
xor
xor
add
test
jp
push
mov
(bad)
aam
or
jg
out
call
ss
cmp
jne
mov
jmp
cmp
mov
cmp
jne
adc
lods
add
les
xchg
shr
mov
into
or
lods
adc
pop
cmp
push
ja
je
jae
sub
cwde
in
pushf
lock
jnp
sbb
dec
fsubr
btc
or
aaa
sbb
cld
adc
jb
lods
mov
sbb
sbb
test
push
aad
in
inc
loope
iret
xor
jae
sbb
mov
in
add
aam
jecxz
sub
(bad)
fild
mov
push
out
in
(bad)
xchg
cmp
icebp
ret
xor
push
push
int3
aaa
mov
test
enter
sub
jae
adc
ret
lock
loop
jle
in
adc
js
setg
pop
push
mov
or
arpl
(bad)
add
dec
mov
and
mov
add
dec
rcr
mov
and
jae
shl
cld
pop
in
cwde
mov
jle
mov
neg
adc
and
mov
into
xchg
clc
cli
test
add
mov
jnp
mov
adc
dec
add
jo
(bad)
xchg
inc
push
jbe
inc
or
or
adc
inc
aaa
mov
pop
pop
sbb
push
scas
cmp
rcr
dec
mov
jmp
and
add
mov
rcr
test
jmp
add
cmps
add
out
inc
or
dec
inc
movs
mov
dec
call
push
and
push
push
call
aad
xor
into
loopne
clc
mov
jbe
or
pop
and
cmp
fstp
test
mov
in
cmp
adc
das
sbb
clc
mov
lahf
push
stos
maxps
test
xor
push
pop
xchg
and
xor
mov
or
mov
jne
pop
(bad)
push
jmp
adc
sub
outs
fst
dec
inc
pop
repz
popf
mov
sbb
iret
inc
and
mov
or
jmp
shl
and
lea
das
pop
mov
dec
iret
lea
sbb
mov
inc
lock
pop
sub
mov
sub
jg
or
pop
and
stc
jns
adc
xor
push
cmp
xor
imul
lds
inc
sub
push
addr16
jne
ins
add
inc
sbb
test
cmp
test
out
push
in
imul
sbb
add
aas
mov
fcomp
and
xor
ins
push
or
push
or
xchg
push
mov
xchg
ins
stos
inc
icebp
mov
pusha
mov
loope
jl
ja
repz
lds
mov
dec
neg
ror
and
cmp
jle
inc
pop
sub
add
or
jnp
dec
push
cmp
pop
clc
arpl
ret
fnstsw
cmp
vmread
outs
aad
clc
xchg
movs
inc
pop
addr16
jnp
mov
and
pavgw
(bad)
pop
push
cmp
shufps
stc
(bad)
fsub
(bad)
std
fimul
shl
mov
je
xchg
or
sub
adc
iret
cmp
or
or
invd
dec
pop
pop
sub
(bad)
out
outs
push
js
adc
je
ror
jno
mov
add
mov
xlat
mov
call
out
adc
jnp
sar
xchg
lds
sbb
adc
test
add
fstp
ret
retf
pop
mov
sti
adc
mov
jne
lock
ins
adc
outs
cmc
sbb
leave
mov
je
ret
ror
pusha
es
push
pop
adc
mov
nop
push
out
or
fsub
add
or
ja
dec
and
leave
mov
pop
fldcw
or
mov
or
dec
cmp
inc
or
dec
ja
xor
xor
pop
push
sbb
xchg
mov
out
ja
cmp
mov
dec
push
mov
mov
mov
push
lock
mov
push
push
loope
xor
sbb
adc
pop
mov
js
sub
and
adc
inc
inc
adc
je
nop
sub
in
aas
add
push
jecxz
in
not
mov
mov
add
pop
dec
mov
hlt
and
mov
ins
jbe
add
dec
popf
sbb
retf
push
mov
xchg
dec
call
out
add
xor
xchg
shl
nop
in
in
pusha
cmps
push
(bad)
stc
push
add
cmc
add
inc
push
mov
fwait
retf
fs
or
sbb
sbb
xor
lds
(bad)
and
icebp
and
aaa
pop
or
or
mov
mov
mov
pop
jno
sub
pusha
mov
add
scas
sbb
pcmpeqb
mov
cmovs
daa
(bad)
fsub
adc
call
cwde
aaa
jnp
pop
mov
mov
mov
outs
seta
cmp
xor
sbb
mov
inc
sbb
mov
movs
adc
rol
lahf
cmp
adc
sbb
or
dec
or
test
sti
arpl
xchg
mov
mov
xchg
jno
add
popa
js
(bad)
daa
loope
ror
mov
mov
dec
pushf
data16
(bad)
nop
inc
xchg
xchg
pushf
ret
push
push
loopne
pop
mov
add
jmp
and
adc
push
push
sbb
ja
mov
rcl
lock
and
fcom
push
adc
es
and
mov
fisub
imul
out
sbb
adc
lock
gs
scas
cmp
xor
jb
retf
scas
test
fs
sub
loopne
xchg
ror
and
pop
inc
or
jmp
add
dec
pop
fldenv
xlat
not
mov
xor
popa
push
mov
pop
jnp
out
xchg
sub
cwde
pop
call
movs
add
mov
push
or
ins
mov
pop
std
mov
enter
(bad)
push
add
adc
jge
sbb
daa
add
add
sbb
rol
and
cwde
and
fadd
xchg
aaa
add
or
jo
mov
je
inc
mov
stc
jp
adc
div
add
or
cld
add
inc
movs
pop
clc
pop
push
ficomp
adc
mov
mov
push
js
jge
jg
dec
mov
call
add
add
outs
aas
test
xor
xor
lahf
add
clc
cmps
jp
xlat
or
aaa
mov
ds
shl
(bad)
mov
pop
add
xor
adc
cld
inc
nop
bound
mov
xchg
mov
jl
clc
lea
fistp
into
add
mov
xchg
pop
dec
mov
dec
test
ins
imul
test
add
daa
jmp
(bad)
mov
dec
adc
(bad)
and
not
loop
rcl
cmp
je
or
inc
je
push
mov
popa
push
cmp
ror
das
and
dec
sub
dec
in
inc
jle
fwait
popf
mov
es
lds
lds
sub
add
add
fdivr
sbb
adc
mov
ret
cs
dec
into
mov
(bad)
or
stc
push
and
jno
sbb
sbb
xchg
mov
sti
mov
and
cmp
rol
jo
scas
jae
mov
push
push
xor
or
and
(bad)
mov
push
out
cmp
jg
je
sub
je
or
je
je
dec
push
or
adc
and
cmp
dec
mov
sti
sub
inc
hlt
in
mov
mov
mov
test
sub
rcl
jnp
wrmsr
push
loopne
adc
mov
hlt
ficomp
and
jnp
xor
jnp
cmps
movs
call
arpl
sub
inc
nop
cmps
xchg
or
inc
adc
sub
push
add
aas
jmp
scas
jle
fwait
inc
int
in
aam
jg
cmps
loopne
adc
adc
sub
into
cdq
xchg
push
mov
adc
pop
push
jae
rcl
push
xor
out
pusha
cmp
iret
test
jne
mov
ret
push
add
add
jbe
add
or
and
jae
outs
ins
shr
dec
(bad)
adc
inc
fs
cmp
and
outs
je
adc
add
xchg
pusha
add
push
add
clc
ins
add
aas
pop
jle
fdiv
aam
fadd
adc
jge
and
int3
test
or
jnp
enter
aam
sbb
dec
push
push
sbb
fnsave
pushf
push
daa
ins
push
add
push
sbb
pop
add
push
outs
call
out
scas
outs
or
and
add
fimul
loopne
pop
cwde
push
pop
adc
add
daa
sbb
arpl
arpl
pop
shr
push
popa
cmp
jmp
cmp
or
add
sbb
pop
and
enter
push
jbe
clc
mov
mov
je
xor
ror
clc
jmp
jo
jae
dec
jne
daa
retf
out
mov
push
dec
or
jmp
ret
xchg
icebp
imul
pop
inc
and
ror
ds
es
add
and
xor
inc
jae
sub
ret
test
jne
enter
movzx
(bad)
jg
push
cwde
add
jl
dec
fwait
add
dec
test
push
and
sbb
ins
lahf
mov
jg
push
xlat
inc
lods
push
mov
stos
add
jmp
fisubr
(bad)
lea
add
and
mov
imul
jg
mov
mov
or
sub
fist
(bad)
cli
or
or
jns
fs
and
sub
add
push
test
inc
ficomp
xchg
test
cli
jns
inc
sbb
pusha
mov
adc
adc
and
test
and
loopne
inc
mov
inc
add
push
imul
(bad)
sar
out
mov
mov
dec
jo
inc
mov
add
inc
add
jmp
call
pop
rep
add
jg
jl
mov
mov
ret
add
pusha
push
pop
mov
cld
add
aad
rcr
pop
int3
sub
daa
push
push
sbb
sbb
iret
mov
loop
sahf
sub
adc
fs
int3
pop
pop
add
out
pop
nop
push
jb
cmp
dec
jle
nop
xor
scas
enter
je
add
mov
ror
sbb
jbe
mov
sbb
jg
outs
and
(bad)
push
xchg
cdq
or
sbb
sbb
lock
les
sbb
jno
push
and
pop
rol
push
mov
les
hlt
sbb
outs
jbe
rol
fmul
sbb
add
adc
xchg
sbb
and
cld
jne
data16
and
dec
outs
adc
fcomp
fwait
call
mov
arpl
popa
inc
rol
push
inc
cwde
and
adc
sub
scas
cmp
pop
gs
add
pusha
pop
hlt
bswap
js
cld
scas
fsubr
and
cmp
jle
pop
mov
add
add
sar
add
lds
or
adc
shl
dec
mov
scas
adc
in
or
loopne
into
data16
gs
test
pushf
cmp
or
aad
das
sar
je
sub
sub
xchg
cmp
jae
test
mov
data16
mov
fdiv
push
sbb
push
into
shr
jne
scas
xor
inc
mov
add
xor
je
enter
std
push
inc
pop
or
enter
mov
xor
outs
xor
jl
dec
fld
jno
test
jne
in
add
mov
or
in
iret
cmp
in
or
push
push
data16
push
push
xlat
fsub
ja
xlat
mov
lahf
ja
xchg
or
(bad)
fs
pop
test
popa
jbe
cmp
je
inc
pop
mov
pop
sub
jne
xlat
inc
test
mov
jle
loopne
jnp
or
adc
aaa
movs
push
imul
pop
sbb
mov
jp
add
cmp
(bad)
(bad)
mov
add
xchg
adc
adc
jo
shr
add
xchg
loop
jg
or
imul
xor
xor
mov
outs
ins
mov
sub
add
pop
lea
(bad)
retf
nop
push
popf
jecxz
jb
cmp
and
mov
add
loopne
pop
pop
out
push
dec
fild
cmc
sbb
cwde
and
xchg
add
adc
daa
adc
inc
sbb
aas
cmp
and
or
mov
ret
push
push
ror
jno
and
outs
push
mov
or
or
or
mov
push
add
retf
sti
popf
jmp
mov
mov
jg
fld
lea
ss
pop
aas
sub
push
dec
sub
push
ds
or
out
mov
les
lock
or
jl
jne
push
mov
lods
sbb
jo
je
test
xchg
add
or
mov
jmp
mov
loope
adc
cmps
xor
cld
arpl
fdiv
test
xor
push
cmp
lds
inc
pop
sbb
aas
or
push
push
or
pushf
add
cli
xor
aad
push
xor
ins
cmp
add
jne
test
aas
inc
add
dec
stc
dec
les
push
jnp
add
or
push
push
int3
movs
or
pushf
test
adc
pop
movs
sub
test
jl
aaa
data16
adc
aas
sub
sahf
sbb
leave
fnstenv
je
rcl
dec
mov
loop
dec
cld
or
adc
mov
mov
pop
pop
dec
pop
dec
and
adc
aaa
sbb
push
cs
add
and
push
or
movs
call
mov
push
test
jp
mov
adc
jl
int
out
cwde
add
jnp
sti
inc
or
jecxz
shr
dec
or
push
xor
sub
fisub
inc
cmp
mov
lds
xchg
ss
push
cdq
pop
push
mov
pop
fwait
pop
sbb
and
cmps
and
push
cld
inc
or
cmp
xor
push
xlat
data16
push
add
add
sbb
cmp
idiv
sbb
je
pcmpgtw
iret
(bad)
add
lock
xchg
xchg
sub
adc
and
mov
cli
add
imul
sub
sbb
je
mov
rcl
add
mov
add
jmp
push
and
lods
xor
neg
mov
jl
adc
add
ss
loopne
push
shl
push
sti
and
js
and
gs
mov
add
sub
mov
js
inc
push
sar
lock
shl
pop
pop
adc
inc
pop
jl
or
aaa
jp
mov
into
dec
inc
add
add
or
sub
in
jbe
pushf
loopne
loope
adc
fsubr
out
mov
adc
cmp
sub
xor
std
add
clc
mov
push
push
inc
pushf
call
(bad)
xor
popa
inc
xchg
sbb
xor
(bad)
sbb
adc
or
in
scas
dec
clc
test
je
push
jb
add
std
pusha
jae
jb
add
and
cmp
cmps
add
outs
push
or
lods
add
sbb
mov
and
or
xchg
cmps
jno
imul
or
push
mov
sub
pop
test
add
iret
repz
out
inc
or
adc
call
mov
push
ins
pop
push
cmps
dec
in
mov
mov
dec
push
or
and
and
mov
push
cmp
(bad)
imul
cmp
xchg
rol
xchg
mov
adc
xor
add
xlat
test
jo
(bad)
cmp
jo
lahf
xor
mov
into
adc
xor
push
ins
ror
xor
or
sub
jb
je
jmp
mov
and
dec
cmp
retf
mov
push
cmp
fcom
pop
div
and
or
add
into
iret
sub
mov
jmp
(bad)
pop
add
or
mov
(bad)
cmp
sbb
punpcklbw
shl
daa
pavgb
mov
iret
cmp
dec
or
addr16
pop
and
data16
and
sbb
loope
inc
sti
pop
jb
movs
pop
outs
add
xchg
or
or
mov
pop
jg
jmp
xchg
inc
ds
std
test
mov
sub
jge
dec
ins
adc
ins
push
shl
push
adc
inc
jo
push
dec
mov
mov
fisub
out
movs
ins
mov
inc
mov
inc
inc
in
add
sub
sub
xor
add
cmp
and
ret
mov
pop
adc
and
dec
inc
cmp
addr16
jne
mov
loop
je
inc
shl
int
retf
arpl
mov
loope
xor
sub
push
imul
jo
(bad)
push
sub
rol
xchg
lahf
dec
mov
loope
jo
cmps
mov
add
sbb
inc
pusha
ret
test
js
or
aaa
cwde
sahf
les
xor
out
icebp
jne
or
sub
call
bound
sub
jmp
add
pop
sbb
push
jb
push
push
xor
inc
pop
or
and
cmc
jae
fisub
je
jmp
sbb
jne
sub
mov
int
cmp
fsubr
test
inc
out
cmp
adc
add
daa
js
or
pusha
lahf
or
mov
mov
sbb
sub
mov
inc
or
push
push
dec
test
jbe
ja
(bad)
dec
dec
out
shr
dec
lods
push
jbe
sbb
inc
xchg
add
inc
dec
into
leave
cdq
xchg
xchg
xchg
adc
lods
mov
dec
aam
and
mov
mov
push
add
pop
inc
or
or
pop
rol
add
dec
mov
dec
cmp
xchg
mov
ja
aaa
bnd
sub
push
dec
je
add
int3
fisub
jmp
cmp
je
mov
jg
sbb
sbb
or
sbb
push
sbb
sbb
jle
(bad)
sbb
mov
pop
jmp
nop
retf
push
mov
ror
inc
loope
and
mov
(bad)
daa
push
jmp
out
push
sbb
inc
or
mov
xchg
inc
sbb
(bad)
sbb
dec
not
or
loope
stos
sub
lds
(bad)
nop
mov
or
add
(bad)
lahf
cmp
test
imul
cmp
or
cmp
dec
xor
xchg
not
sbb
not
and
push
imul
and
and
shl
cmp
dec
fcomp
and
je
mov
lahf
mov
std
in
(bad)
inc
push
ret
ds
push
cmp
aas
mov
xor
pop
push
xor
xor
xchg
mov
(bad)
daa
mov
pop
xchg
jge
cmps
push
jmp
push
jp
xchg
cmps
js
mov
sub
scas
fadd
add
ret
xchg
sbb
icebp
sub
mov
cdq
sbb
pop
in
xor
fwait
cmp
iret
call
mov
ins
adc
or
std
mov
add
inc
mov
or
sti
popa
aaa
shl
sbb
daa
inc
push
mov
sbb
fwait
rcr
sbb
push
and
shl
push
ret
xor
and
and
add
or
fadd
ret
pop
xor
lock
jmp
mov
add
lea
fcomp
push
retf
ds
mov
ja
mov
nop
and
pop
outs
cmovle
pop
pop
pop
pop
push
push
add
adc
sti
je
test
fs
mov
mov
pop
rcl
scas
push
lea
sbb
dec
pop
out
xchg
sbb
cmc
lods
add
sub
clc
out
inc
in
ror
xchg
enter
ins
jae
lds
int3
imul
aaa
lods
xor
cld
test
je
mov
jne
push
push
jl
nop
xchg
push
push
jmp
call
test
mov
cwde
push
mov
cld
jno
and
(bad)
lock
(bad)
aad
dec
push
push
push
adc
test
jmp
stos
cdq
in
je
das
ror
push
mov
xchg
mov
rcr
mov
dec
xor
add
nop
jnp
and
pop
pop
out
out
clc
frstor
xchg
cmps
je
mov
cmp
sub
mov
movs
sub
rol
pop
ret
cmp
mov
jo
push
push
xchg
dec
xchg
sub
pop
pushf
adc
xchg
push
iret
add
adc
add
cmp
or
mov
pop
adc
pop
adc
pop
out
add
sbb
push
jo
or
fimul
ret
xchg
lock
xchg
xchg
xchg
and
(bad)
push
sbb
rcl
sahf
popa
adc
adc
outs
popa
mov
imul
outs
xchg
lds
dec
lods
cmp
je
(bad)
mov
rol
fimul
inc
or
inc
mov
in
shl
add
sbb
and
push
ret
loopne
jae
mov
jo
inc
cmp
shl
xor
jmp
lea
xor
inc
mov
mov
cli
add
mov
or
aam
ret
push
push
or
adc
outs
ret
jmp
add
repnz
inc
push
push
mov
xchg
mov
rol
les
aam
xchg
mov
lock
add
loopne
cmp
ret
outs
xchg
shl
cmp
inc
cmp
or
push
mov
popf
add
push
(bad)
xchg
cmp
xor
fmul
test
push
push
cld
test
je
mov
xor
pop
pop
and
dec
jne
jns
loopne
hlt
sub
cmp
dec
sub
xor
test
sub
xor
adc
fwait
hlt
xchg
sub
(bad)
fisubr
inc
lahf
ret
mov
inc
sti
cmp
push
adc
push
mov
cld
push
push
loopne
mov
pavgb
aam
ror
mov
xchg
mov
inc
pop
jle
cmp
add
push
cmp
mov
or
pop
aaa
add
pop
hlt
sub
adc
add
not
and
in
xchg
nop
pop
ret
cmp
pop
shl
pop
arpl
sbb
mov
xchg
arpl
shr
test
rol
ret
repnz
lock
inc
fs
aaa
xchg
add
add
dec
xor
cmp
or
jns
pop
mov
pop
or
pop
iret
rol
cmc
lea
push
jmp
ins
sbb
inc
adc
pushf
adc
or
add
jo
dec
addr16
cmp
cdq
shr
mov
sub
lahf
push
adc
scas
jle
imul
sbb
outs
xchg
dec
int
sbb
(bad)
outs
int3
pop
or
sbb
imul
mov
sub
and
in
jno
call
xchg
sub
inc
stos
xchg
das
fldcw
cwde
xchg
dec
stos
and
sti
dec
sub
mov
ja
adc
jne
ror
loopne
fnstenv
pop
pop
das
iret
rol
scas
lahf
mov
jnp
shr
popa
aas
scas
ss
or
dec
or
dec
adc
sbb
mov
out
aaa
mov
pop
push
nop
and
lods
cmp
jne
mov
scas
mov
(bad)
fwait
jecxz
pop
(bad)
fsubr
inc
lods
daa
call
push
test
fxch
pop
xlat
lods
adc
xchg
add
mov
(bad)
mov
add
sbb
push
inc
jle
dec
adc
ja
or
jmp
add
lods
rol
es
fwait
jecxz
jg
jo
add
montmul
cmps
push
mov
std
pop
cmp
or
stos
adc
push
nop
sub
cmps
ret
rcl
mov
cmp
jne
pop
daa
loope
ds
aas
in
call
loopne
sub
sub
pop
lea
push
sub
adc
add
lea
popf
test
in
dec
movs
jmp
neg
call
loopne
imul
movs
stos
pop
movs
in
mov
mov
fcom
pop
fcom
and
pusha
mov
dec
adc
or
mov
dec
mov
mov
loope
sub
add
add
and
mov
sbb
pop
jg
mov
ss
in
in
inc
xchg
dec
hlt
inc
sub
jae
sub
xchg
mov
adc
add
or
sbb
out
call
mov
out
fst
and
sbb
cmp
sbb
push
add
ret
into
and
es
xchg
fisub
mov
fdivr
fldenv
fcmovne
jno
std
mov
rol
inc
xor
inc
cwde
xchg
mov
push
mov
sub
or
cmp
sti
push
push
lahf
sti
dec
test
adc
mov
fwait
add
mov
lds
ret
push
add
jp
jmp
xor
jbe
sub
jae
outs
ins
inc
push
outs
js
dec
(bad)
(bad)
div
jb
add
fs
cmp
and
dec
outs
je
adc
call
push
shl
add
arpl
je
inc
clc
imul
jb
jae
outs
int3
add
in
ret
xor
(bad)
adc
mov
int3
jns
add
mov
leave
add
idiv
push
test
add
pop
ja
push
daa
cmp
add
sbb
dec
mov
cmp
clc
jge
jle
adc
or
jnp
jnp
aad
xor
sub
or
push
jl
pusha
jp
pop
and
add
(bad)
aad
rcr
pop
jl
push
gs
data16
add
cmp
je
cmp
pop
pop
or
adc
cmp
sti
xchg
jmp
pushf
sbb
cmc
push
inc
or
and
lock
push
xchg
lea
rol
aaa
inc
leave
test
inc
mov
push
cmp
je
or
add
sbb
or
jne
daa
lock
sbb
pop
out
cmp
pop
inc
enter
(bad)
aas
movs
xor
pop
pop
jmp
test
je
call
mov
mov
shl
sbb
adc
push
cmp
loopne
xor
mov
pop
jl
dec
fwait
add
cdq
jmp
test
repnz
out
add
fild
leave
fs
and
or
bound
sub
jb
sub
sar
mov
adc
sar
push
ss
and
(bad)
pusha
rcl
or
and
add
add
push
and
pop
hlt
or
cmp
inc
imul
push
cmp
(bad)
cmovb
pushf
pusha
add
pop
cs
enter
mov
push
cmp
bound
mov
and
and
daa
push
push
sub
and
fwait
or
and
add
push
test
xor
jl
cwde
jae
jl
js
shr
mov
add
aam
std
test
jmp
nop
push
or
or
mov
aaa
push
mov
enter
add
mov
xor
out
xor
cmp
and
push
inc
aad
loop
cmp
cs
hlt
daa
test
jo
hlt
adc
and
rcr
add
and
mov
inc
dec
icebp
or
add
sbb
add
and
sub
inc
cs
mov
add
or
mov
(bad)
push
jg
mov
ret
mov
bound
movs
adc
xor
adc
loop
jmp
mov
cwde
push
mov
xor
inc
cmps
mov
mov
fimul
test
pop
or
(bad)
ror
idiv
(bad)
js
fstp
push
addr16
xor
xor
xor
cld
je
shl
jbe
fild
sti
fst
jl
adc
pop
xor
add
cmp
sbb
test
or
inc
and
ins
(bad)
in
dec
jne
das
jbe
movs
pushf
xchg
outs
jns
vunpcklps
loope
jo
and
and
retf
cwde
or
icebp
and
daa
push
sahf
cmp
pop
pop
or
xor
jae
lods
imul
pop
xlat
jg
dec
aad
dec
leave
in
ja
or
mov
inc
cs
mov
xchg
or
adc
dec
push
out
scas
test
push
mov
inc
dec
adc
in
and
mov
cmp
push
mov
push
test
das
cmp
cmp
push
mov
push
cmc
cdq
xor
add
cmp
mov
mov
lock
jns
scas
adc
push
out
pop
cs
pop
push
cmp
mov
jmp
push
cmp
mov
sub
add
stos
add
ror
jp
jne
outs
test
clc
(bad)
mov
jmp
inc
lds
out
adc
mov
mov
sbb
adc
stos
jmp
inc
jae
push
or
jmp
or
xlat
ds
lds
cmp
mov
push
add
fdiv
xchg
call
dec
movs
inc
adc
aam
push
cmp
xor
(bad)
push
jo
and
das
call
ins
push
push
leave
sar
push
sub
cli
adc
ret
add
fild
add
int3
ret
cmp
sbb
push
jae
inc
jmp
xor
sub
js
movs
or
pop
data16
or
push
clc
dec
stc
inc
shr
iret
cmp
(bad)
jp
test
mov
xchg
inc
pop
push
push
add
jnp
push
mov
call
cdq
jae
xlat
sub
push
sar
into
arpl
and
cmp
jl
aas
ins
push
fdiv
mov
sbb
mov
push
add
dec
sbb
outs
push
add
jge
jge
mov
cmp
jge
inc
data16
sbb
fld
out
imul
mov
pop
inc
cmp
add
cmp
jno
neg
sbb
cld
push
or
mov
mov
jge
xchg
mov
shr
xchg
add
sub
sbb
push
adc
jl
stc
lea
add
and
push
jmp
leave
pop
mov
test
loop
and
lods
iret
jmp
or
and
add
rol
pusha
fisttp
mov
aas
xor
pushf
or
xor
es
retf
push
push
mov
xchg
mov
adc
inc
sub
cs
add
pop
lock
sbb
push
retf
adc
mov
jnp
inc
movs
or
stos
cmp
(bad)
or
in
outs
mov
shl
ins
bound
mov
mov
ds
mov
pusha
ds
sbb
sbb
mov
mov
pop
ja
dec
push
fsubr
jns
out
jl
sahf
scas
out
mov
movzx
imul
test
clc
daa
add
jmp
and
fsub
les
pop
and
or
or
and
(bad)
pop
push
je
or
sbb
xchg
(bad)
mov
data16
sbb
xchg
lock
dec
retf
sahf
loop
dec
push
jle
push
fnsave
je
mov
dec
lods
fstp
cmps
inc
lock
ret
jmp
ins
dec
js
loop
sub
or
mov
retf
and
(bad)
inc
cmps
pop
(bad)
rol
retf
nop
jg
sbb
adc
retf
mov
int3
jge
sbb
mov
pusha
rcl
pop
xlat
ret
and
pusha
pop
adc
push
out
ins
shr
lods
mov
or
add
and
jo
test
add
daa
adc
les
push
mov
push
mov
jb
sbb
int3
rcr
pop
push
jl
mov
cmp
leave
dec
push
push
push
push
in
jmp
cmp
jp
push
push
aam
adc
or
mov
and
adc
out
cwde
shl
(bad)
(bad)
push
push
adc
and
inc
rol
je
xor
add
mov
les
push
ins
pop
jmp
hlt
mov
mov
or
js
dec
lldt
icebp
lods
hlt
into
or
cmp
xchg
fild
pop
push
dec
movs
fnstenv
loop
xchg
dec
fsubr
xchg
in
call
popf
jmp
test
iret
jnp
sbb
into
pop
pop
push
pop
pavgw
cs
mov
inc
sub
inc
sub
push
xor
add
push
das
push
xor
xor
xor
push
push
jg
hlt
or
xor
movs
mov
lea
mov
add
ins
jmp
mov
mov
add
enter
iret
pop
fisttp
test
or
adc
sbb
cmp
mov
add
add
scas
aam
fdiv
or
jns
pop
mov
mov
test
push
cmp
adc
add
mov
out
jle
je
outs
mov
sub
adc
sbb
cmp
adc
aaa
pushf
jmp
mov
cmp
dec
add
lahf
or
aas
imul
pop
scas
xor
xor
xor
cmp
mov
cmp
mov
loopne
push
jl
fisttp
pop
xchg
mov
mov
inc
adc
sub
rcr
enter
jl
adc
not
loopne
push
ins
or
jbe
xor
and
imul
push
cmp
repz
mov
pusha
adc
or
(bad)
lds
or
dec
imul
add
inc
cmp
sub
mov
fild
push
xor
sbb
jmp
inc
inc
mov
test
fisttp
test
xchg
bndldx
push
jne
mov
test
iret
jae
pop
mov
inc
jb
int3
inc
add
push
loope
repnz
inc
push
add
and
jbe
push
cs
pop
add
pushaw
adc
inc
adc
pushf
lock
shr
dec
cwde
out
push
mov
add
xchg
sub
jne
das
sbb
jo
fsub
lea
fimul
inc
mov
or
jne
jecxz
outs
pop
mov
mov
jo
sbb
sbb
mov
js
push
mov
aam
fld
jl
idiv
not
adc
mov
sub
mov
add
daa
or
or
inc
xlat
mov
mov
add
mov
xchg
add
mov
test
add
or
or
add
test
idiv
xchg
out
mov
cmp
cmp
jbe
inc
ins
dec
ror
sub
mov
jle
adc
jo
or
and
add
je
xor
push
cmp
pusha
add
dec
fist
ins
pop
push
lea
outs
sub
and
pop
fsub
daa
dec
out
dec
xchg
and
cli
in
(bad)
jae
and
sub
clc
jge
mov
push
add
loopne
nop
or
pop
mov
mov
mov
jb
push
add
inc
sub
push
fwait
mov
sti
pop
cmps
rcr
adc
and
test
add
retf
mov
mov
cmp
shl
inc
push
fsub
inc
push
ret
ret
(bad)
clc
jns
adc
xor
and
jbe
push
bnd
das
jmp
sbb
and
xor
sti
and
xor
xchg
mov
cwde
ret
and
push
nop
xchg
xchg
fidiv
das
out
lahf
cmp
inc
daa
(bad)
jns
add
adc
push
fisub
test
movs
daa
loopne
adc
or
or
mov
jo
shl
ss
adc
les
fiadd
push
imul
mov
cs
push
js
dec
and
and
and
adc
or
add
rol
add
push
jmp
aaa
sbb
aaa
sbb
nop
sbb
ins
std
push
les
cmp
pop
sub
add
daa
dec
jmp
push
inc
mov
stos
sbb
push
fistp
dec
mov
push
mov
fistp
mov
add
mov
mov
popa
mov
xchg
pusha
add
cld
mov
inc
sbb
add
add
fist
adc
jp
jge
xor
addr16
(bad)
je
int3
add
or
test
xchg
xor
call
loop
lock
test
mov
push
je
and
add
or
dec
pop
retf
inc
inc
lea
adc
xor
ret
xor
xor
mov
lods
imul
xlat
inc
lods
jne
ins
cmp
mov
mov
xchg
push
test
add
mov
mov
pushf
pushf
mov
and
mov
sahf
sub
div
cmp
ja
dec
mov
pop
add
jmp
popf
jae
nop
test
inc
pop
xor
arpl
xor
daa
jae
lods
add
mov
data16
ins
inc
mov
and
cwde
or
fisubr
jle
sub
sub
fistp
neg
jmp
dec
dec
sbb
mov
add
or
imul
movzx
ins
mov
call
popa
cdq
mov
imul
sub
ins
or
xchg
iret
daa
add
xor
add
push
xor
push
cmc
add
loopne
or
sbb
les
or
aam
add
mov
js
js
enter
enter
cmp
mov
push
out
mov
test
inc
test
and
shr
out
out
xchg
sbb
inc
in
imul
mov
mov
cwde
and
cwde
out
fstp
rcl
mov
sub
ret
mul
mov
pop
loope
sbb
popa
xor
in
(bad)
push
std
fcom
mov
cmp
xor
adc
mov
out
loope
adc
in
xchg
rol
lds
ins
fcmovnu
xor
sbb
mov
push
das
stos
and
daa
and
pop
pop
add
jo
jmp
sub
add
mov
mov
xor
xor
mov
mov
(bad)
jecxz
mov
out
sqrtps
jne
loopne
mov
cmp
popf
jg
les
xor
mov
or
inc
or
push
or
test
xor
add
dec
movs
ficom
sub
jg
sbb
out
out
lock
sub
adc
or
push
push
xchg
xor
sub
adc
cs
jnp
cmp
call
adc
pop
sub
inc
fdiv
mov
int3
out
adc
dec
rcr
dec
pusha
pushw
inc
inc
aad
adc
icebp
sahf
xchg
pusha
xor
and
int3
into
mov
das
(bad)
dec
sbb
inc
jo
sbb
cmps
jb
jnp
dec
mov
mov
lock
jmp
or
sbb
add
mov
iret
jnp
inc
in
push
add
arpl
jmp
fwait
out
fwait
jae
pop
nop
nop
xchg
pop
cs
aam
sub
mov
mov
das
push
sbb
outs
fs
xor
leave
pop
leave
cwde
inc
push
mov
or
mov
xor
jne
loope
add
mov
loope
xor
call
add
(bad)
dec
sbb
adc
cmps
add
sbb
dec
pop
push
loopne
pop
test
adc
(bad)
cmp
(bad)
mov
and
jo
sub
test
jmp
add
es
imul
push
mov
fadd
mov
ror
test
jmp
into
fmul
inc
retf
pop
retf
mov
loopne
arpl
xor
mov
fiadd
rcl
and
inc
cmp
clc
pop
sub
imul
nop
pop
or
cmp
or
or
jo
lahf
inc
repz
mov
das
mov
enter
dec
add
xor
mov
xor
xchg
fcom
retf
mov
dec
scas
retf
(bad)
retf
dec
shl
outs
retf
inc
retf
pop
retf
or
leave
xor
pusha
sti
retf
cwde
retf
out
retf
push
retf
out
and
retf
pop
mov
and
adc
retf
jl
adc
sbb
out
pop
enter
add
push
jo
ss
das
sbb
das
shr
push
out
cmps
scas
mov
inc
enter
dec
loope
lock
aaa
aam
or
add
fadd
cmp
sbb
add
push
or
mov
jns
retf
push
inc
push
outs
push
clc
rol
xor
adc
inc
or
test
or
popf
(bad)
vmwrite
(bad)
mov
cmp
push
lea
sbb
cmp
fs
fs
add
add
sub
mov
test
adc
inc
add
mov
or
leave
nop
inc
sub
add
mov
idiv
loope
ins
sbb
inc
or
mov
jle
lahf
mov
mov
mov
call
out
sbb
and
xor
sub
add
adc
push
pop
mov
add
mov
out
mov
mov
and
pop
inc
jae
and
cli
or
sti
inc
mov
scas
xchg
mov
sbb
pop
arpl
ins
dec
mov
ins
sub
idiv
add
xor
jg
mov
cld
fld
pop
je
test
add
xchg
inc
jnp
test
enter
pop
(bad)
push
mov
jmp
push
jmp
or
sbb
jge
das
jle
push
sub
add
call
adc
stc
mov
adc
lods
cmp
add
adc
pop
push
push
loopne
or
mov
sbb
icebp
test
add
fwait
test
(bad)
scas
add
or
jmp
lods
and
sbb
xor
pop
dec
test
out
push
ss
rcl
adc
(bad)
fbstp
adc
scas
lock
jl
inc
xor
and
dec
(bad)
std
mov
adc
inc
mov
jne
jg
mov
xor
pop
push
or
cmp
je
xchg
push
or
add
mov
cmp
and
jne
lods
add
mov
lahf
fdivr
cmps
sub
jo
or
mov
int3
call
and
popf
std
arpl
fistp
scas
inc
adc
data16
pop
jno
jae
push
mov
cmp
push
cmp
mov
sbb
popa
mov
out
mov
fmul
sbb
or
adc
push
push
leave
adc
add
pop
add
sub
push
imul
imul
sbb
int3
cmc
dec
and
icebp
lods
fidiv
xor
rol
call
pop
sub
mov
xor
inc
push
out
add
hlt
int3
ds
jns
lds
add
and
cs
and
popa
popa
imul
mov
pop
sub
dec
or
push
adc
jp
outs
sbb
mov
(bad)
push
clc
scas
push
pop
mov
sar
sbb
add
jbe
pop
fld
(bad)
mov
push
or
push
ins
pop
fnsave
ss
loopne
add
push
aaa
cmp
jbe
gs
push
push
jns
push
out
mov
xor
std
mov
out
xor
push
pop
cs
xchg
xor
push
ins
in
retf
test
js
push
shl
wbinvd
sub
push
mov
inc
icebp
push
cmp
dec
xchg
repz
inc
fsubr
mov
sbb
fmul
jne
out
ja
fsubr
inc
ror
sub
adc
(bad)
and
call
in
jecxz
(bad)
adc
mov
sub
pop
push
sbb
test
adc
ret
mov
cmp
(bad)
fadd
mov
add
add
dec
add
add
xor
and
push
push
inc
or
sbb
push
das
jge
mov
leave
cmp
mov
dec
xchg
push
mov
or
lea
sub
je
xchg
inc
push
test
mov
pop
cmps
jo
mov
or
in
call
pop
pop
sahf
cld
imul
xor
jns
push
mov
pop
or
mov
xlat
jmp
add
scas
or
mov
mov
aas
cmc
or
in
mov
ds
mov
dec
xchg
callw
push
cmp
call
aaa
add
inc
scas
xchg
jmp
cld
fiadd
or
inc
sbb
fild
and
imul
add
pop
and
inc
push
sub
cli
sti
inc
xchg
sub
push
gs
in
mov
scas
das
jnp
movs
gs
les
out
test
les
das
and
cli
add
(bad)
ins
aam
and
mov
inc
mov
stos
cs
aam
in
add
sub
sar
push
lods
sub
cwde
out
ret
cmps
adc
stc
cmps
mov
scas
test
and
adc
std
push
cmp
jne
cmp
add
movs
psubusw
mov
test
fadd
mov
xchg
je
(bad)
outs
push
push
xor
mov
adc
data16
pop
ret
cmps
out
jge
lock
sub
ins
nop
retf
mov
lods
push
lods
(bad)
push
pop
pusha
enter
jne
mov
pop
test
movs
push
inc
pop
in
movs
sub
pop
xchg
mov
or
mov
imul
adc
push
clc
add
xchg
dec
repz
mov
lds
or
mov
push
mov
mov
jmp
shl
sar
add
pop
js
sub
mov
mov
ret
ret
jbe
pushf
aas
pop
jo
(bad)
rol
mov
scas
js
mov
dec
(bad)
push
cs
lods
rol
gs
aaa
inc
loopne
xor
xor
add
mov
xor
pusha
call
mov
movs
push
cld
std
push
test
adc
arpl
adc
and
adc
test
mov
push
cwde
femms
scas
leave
pop
lods
or
cmp
test
ja
add
add
and
jg
add
jecxz
cmp
adc
lods
adc
sub
add
rcr
cmps
test
test
hlt
lock
xchg
xor
ins
add
mov
test
pop
ror
mov
nop
add
cmps
hlt
scas
xor
jl
or
add
cmp
xchg
xchg
and
mov
mov
rol
outs
and
push
int3
xor
xchg
dec
or
push
push
pop
bound
and
push
mov
sub
pusha
add
sub
or
fwait
adc
add
test
out
and
imul
xor
in
cmp
pop
ds
push
mov
int
and
adc
and
mov
and
jbe
rcl
or
mov
shl
mov
ret
pop
jno
cmp
icebp
sub
ins
shr
pushf
pminsw
dec
jns
mov
sbb
dec
loope
pop
shr
retf
scas
call
push
ja
stos
sub
add
cmp
les
adc
enter
fldcw
mov
dec
and
clc
mov
fild
xchg
sbb
sbb
push
and
in
xchg
sbb
sub
pusha
retf
sbb
outs
imul
int3
test
enter
mov
sub
add
xchg
jge
sub
add
fld
adc
adc
and
out
sub
dec
and
out
adc
push
xchg
xchg
std
test
mov
sub
mov
sub
out
popf
frstor
call
and
push
(bad)
(bad)
dec
cmp
jne
jmp
gs
push
ret
mov
fcom
and
stos
cmp
sahf
lea
fcom
out
jmp
mov
sbb
imul
pop
sub
mov
cmp
add
add
xchg
lods
jp
jns
popf
je
cmp
adc
jne
inc
cdq
add
sbb
add
dec
pop
les
jns
(bad)
clc
sbb
mov
and
stos
add
lea
sbb
add
add
or
dec
clc
and
movs
adc
adc
cmp
add
cmp
pop
cmc
(bad)
(bad)
dec
aas
jle
enter
adc
fwait
loop
pop
mov
and
push
sbb
movs
aaa
jno
inc
add
add
lods
inc
lock
jl
es
sub
iret
and
out
shl
xor
nop
dec
cmp
and
mov
sub
mov
or
push
je
mov
fldenv
cmps
scas
hlt
lock
jecxz
adc
lods
or
sub
or
cmp
push
jmp
jns
addr16
add
imul
int3
push
mov
jg
sbb
push
sub
out
mov
ins
lock
jne
mov
cli
int3
jmp
sti
jbe
mov
aas
aaa
out
aam
les
or
shl
adc
pop
or
test
idiv
sete
mov
(bad)
pop
pop
inc
aas
inc
or
js
and
dec
add
add
mov
data16
cmps
xchg
or
(bad)
push
je
fimul
sub
mov
movs
dec
lock
jne
mov
push
ins
std
iret
jne
pop
push
and
cmps
push
ds
outs
add
(bad)
mov
or
sub
xchg
and
ins
or
inc
sub
lods
add
sahf
cmps
push
mov
jg
je
push
stos
adc
je
xchg
and
push
pop
retf
jno
out
int3
adc
add
scas
data16
pop
xchg
std
cmp
xor
je
mov
cmp
and
popa
das
xchg
jo
mov
das
pop
mov
mov
and
sti
mov
dec
dec
add
(bad)
add
dec
mov
cld
xor
sub
sar
into
or
rol
addr16
movs
dec
push
adc
sbb
mov
xchg
les
mov
scas
jns
xchg
aas
push
lods
add
jp
mov
add
add
mov
xchg
push
mov
(bad)
pop
test
mov
add
sub
jb
add
outs
sbb
enter
mov
jmp
mov
jmp
mov
jae
sbb
lock
mov
add
inc
mov
jmp
mov
jmp
mov
jmp
inc
cld
pop
sti
jmp
mov
jmp
mov
jmp
mov
jmp
aaa
or
adc
dec
or
inc
pop
push
shr
mov
sahf
mov
in
hlt
mov
cwde
rol
xor
mov
jmp
inc
arpl
pop
int
movs
ret
test
inc
sti
aam
sti
loop
inc
add
or
mov
(bad)
dec
adc
jmp
and
inc
loopne
mov
or
pushf
jb
inc
sub
mul
cmp
add
mov
mov
push
mov
pop
fadd
mov
in
add
dec
jecxz
movs
iret
in
loop
mov
or
push
retf
inc
dec
mov
icebp
jbe
xor
dec
ins
call
in
or
cmp
xor
inc
test
out
fiadd
xchg
pop
js
clc
jmp
dec
dec
mov
outs
jp
adc
sub
dec
cvttps2pi
xchg
pop
test
lock
pop
inc
or
or
(bad)
pusha
add
aaa
fcomp
sub
sub
aaa
shl
ret
mov
mov
cmp
cld
test
add
mov
imul
ficom
and
stos
adc
inc
xchg
outs
fstp
sbb
es
or
fdiv
sub
and
or
mov
and
shl
rol
repz
mov
mov
dec
xor
jmp
js
mov
adc
xchg
mov
jmp
mov
inc
mov
sub
dec
pop
mov
pop
xor
les
jge
inc
ret
jle
iret
pop
cmp
jge
cmps
mov
cmova
or
(bad)
xlat
dec
not
test
mov
xchg
in
mov
test
pop
adc
sub
mov
adc
sbb
or
or
push
fistp
inc
xor
outs
inc
test
add
inc
or
lock
cmp
je
jmp
mov
jmp
mov
jmp
bswap
add
xor
or
xor
sbb
or
cmp
push
mov
out
out
(bad)
aas
cmp
jl
out
inc
jne
mov
adc
adc
push
into
pop
xor
test
into
xchg
nop
pushf
cld
push
stos
cwde
xor
dec
fdivr
adc
mov
mov
push
adc
inc
and
(bad)
jle
add
xor
pusha
in
or
add
add
mov
outs
iret
mov
test
and
mov
inc
fbstp
cmps
adc
sub
sbb
mov
jo
jecxz
test
sbb
sub
bound
and
inc
inc
jb
aam
fisub
aam
jb
jb
int3
enter
dec
lock
mov
dec
dec
inc
dec
inc
pop
inc
dec
dec
push
inc
push
push
push
pshufw
inc
ficom
add
xchg
dec
pop
pop
jo
jp
popa
ins
sub
push
and
push
add
(bad)
jg
(bad)
dec
push
push
je
ins
adc
dec
add
ins
add
out
inc
mov
push
mov
dec
jo
cs
ins
dec
bound
jle
out
daa
push
add
jb
jns
jecxz
inc
test
outs
inc
mov
cli
test
cmp
dec
outs
fs
ins
inc
outs
ja
stc
(bad)
jg
push
push
(bad)
outs
retf
pop
pop
sbb
(bad)
std
or
jns
xchg
jbe
dec
inc
imul
in
(bad)
(bad)
std
inc
jbe
outs
je
sbb
jge
inc
mov
test
sub
push
sti
cmp
add
push
push
inc
outs
ins
fs
mov
xchg
xchg
test
or
and
fbld
aam
add
push
clc
inc
jle
pushf
inc
test
faddp
(bad)
icebp
in
pop
adc
jae
xrelease
fcomip
pop
mov
xchg
test
pop
pop
pop
xchg
push
push
push
push
fs
or
push
jne
nop
and
call
jb
loopne
xchg
hlt
add
fld
pop
jl
sbb
inc
add
xor
push
nop
stos
inc
add
push
sub
xor
mov
or
push
push
cwde
test
mov
add
inc
push
jb
mov
sti
push
dec
mov
ret
gs
add
arpl
jae
add
xlat
add
sub
pop
push
push
es
add
mov
pushf
push
xor
push
out
aas
mov
pop
aas
lock
in
test
cmp
jnp
mov
call
outs
cs
rcl
pop
inc
inc
popa
outs
jbe
jae
(bad)
dec
lock
xchg
inc
inc
outs
push
and
sahf
and
inc
push
popa
addr16
jne
bound
fild
sti
add
sub
push
pop
xor
sbb
or
js
sahf
sbb
mov
lods
push
imul
and
jg
sub
or
clc
ss
or
bound
gs
adc
cmps
mov
jo
bound
adc
std
imul
popa
push
and
pop
and
xor
add
jo
xchg
and
pop
int
and
dec
(bad)
mov
push
sub
fsubr
push
in
inc
gs
and
add
arpl
cmp
movs
jmp
hlt
dec
push
dec
xor
push
(bad)
push
leave
leave
leave
ins
pop
xchg
(bad)
mov
(bad)
and
clc
lds
(bad)
add
ins
fisubr
lea
or
pop
hlt
jmp
jae
jb
(bad)
mov
outs
jns
and
pop
clc
sub
mov
fdivr
dec
or
scas
pusha
les
add
dec
xor
dec
push
pop
adc
inc
dec
dec
xor
mov
dec
gs
dec
push
scas
mov
data16
dec
jo
cmp
inc
gs
push
mov
pop
fs
inc
add
movs
inc
and
outs
xor
pushf
xchg
stos
and
bound
in
sbb
cmps
loopne
popa
or
xchg
movs
(bad)
test
pop
movs
not
xchg
pop
push
mov
adc
loopne
(bad)
nop
and
data16
lea
into
out
adc
mov
cmp
mov
retf
xor
pop
mov
jnp
adc
jmp
inc
dec
and
push
pop
ins
test
sbb
mov
inc
cli
sbb
test
add
mov
adc
push
xchg
and
mov
movups
cmps
inc
ins
push
inc
or
xor
shr
mov
inc
lea
or
xchg
add
add
test
or
add
je
adc
xchg
jo
jnp
xor
push
add
add
daa
std
ret
push
pop
ins
xchg
or
cmp
pop
test
call
outs
clc
push
cmp
iret
push
mov
cmp
xor
mov
movs
cmp
je
mov
sbb
mov
test
je
jl
fstp
out
xor
or
inc
mov
lock
bound
mov
mov
mov
test
or
mov
sub
paddb
sbb
sbb
pop
ret
cdq
jne
mov
pop
call
jne
dec
push
push
lahf
add
sub
lahf
out
dec
pop
dec
pop
pavgw
or
add
push
mov
push
and
imul
fadd
sub
inc
cmps
xchg
mov
sbb
and
call
ror
add
lea
jae
cmp
mov
shl
or
or
ret
into
and
leave
cmp
mov
cld
xchg
shl
xchg
es
add
fwait
mov
add
adc
add
jnp
je
or
sub
mov
je
test
add
cmp
sub
mov
mov
inc
or
mov
mov
xchg
sub
xlat
add
push
fs
movs
(bad)
repz
push
dec
pop
dec
add
pop
iret
repz
sub
push
les
jl
dec
push
inc
les
push
dec
and
iret
rol
mov
and
ds
mov
cwde
and
or
ja
out
pop
mov
push
jns
jge
cwde
aam
sub
push
fsub
in
nop
sub
push
mov
push
cld
push
cmp
push
stc
mov
mov
repz
xchg
and
adc
in
pop
adc
fld
outs
or
sbb
adc
and
jle
or
fs
(bad)
shl
icebp
scas
jmp
push
xor
sbb
les
add
or
push
mov
sub
clc
pop
mov
aam
inc
mov
mov
add
mov
shl
or
inc
add
push
sbb
or
dec
aaa
bound
add
mov
loope
inc
mov
mov
mov
sbb
mov
scas
mov
movs
pop
cwde
(bad)
cmps
mov
ja
push
and
adc
ins
xchg
inc
nop
es
lahf
push
int3
sub
enter
sbb
push
fsubr
ins
inc
int
adc
jae
dec
movs
into
cli
cmp
je
and
xlat
rcr
mov
out
fcomp
jo
push
dec
cmps
lds
inc
adc
xchg
das
mov
outs
sub
cmp
pop
sti
outs
lock
xchg
dec
adc
retf
popf
rcr
push
fiadd
aad
and
push
sub
xor
xor
adc
sbb
adc
hlt
rol
mov
rcl
or
mov
add
scas
dec
clc
xchg
cld
pslld
xchg
cmp
je
jg
pop
jle
sub
sub
jmp
add
pop
cmp
pcmpeqd
cmps
in
dec
sbb
dec
icebp
lahf
imul
das
cmp
jle
mov
jmp
pop
div
sub
xor
push
add
and
setns
out
add
or
add
dec
(bad)
scas
out
mov
popw
sub
(bad)
xlat
repnz
jne
lea
mov
and
clc
mov
mov
add
or
or
rol
or
pop
dec
mov
pusha
or
or
dec
std
xor
je
and
push
push
xor
pop
add
adc
push
repnz
jmp
movs
sub
add
cmp
ja
jne
fild
adc
sbb
xor
push
adc
fidiv
add
xor
jbe
xchg
scas
xchg
test
push
inc
sbb
inc
inc
or
mov
mov
rcr
pop
clc
int3
test
loopne
mov
inc
and
push
popa
fsubr
(bad)
sbb
push
adc
mov
add
jbe
and
add
xor
sbb
sbb
xchg
scas
dec
sub
mov
pop
ss
xchg
xchg
sub
jecxz
test
test
mov
push
push
inc
pop
cs
inc
cwde
mov
and
mov
adc
inc
lods
loopne
test
sub
pcmpgtb
ins
fiadd
outs
cmp
ja
mov
test
dec
push
add
retf
jo
pop
add
add
dec
or
xor
out
test
in
add
repnz
jne
sti
call
pusha
adc
repnz
lock
mov
and
sub
aaa
mov
push
clc
div
sub
cmc
jbe
push
cmp
or
pop
jmp
mov
push
enter
(bad)
sbb
add
into
pusha
cmp
dec
push
jl
inc
xor
push
xchg
mov
cs
enter
dec
je
pop
push
sbb
add
jg
adc
add
inc
dec
jne
cmp
sub
jne
inc
add
mov
sbb
push
lds
mov
dec
jmp
call
call
aaa
cmp
mov
scas
adc
in
inc
fsubr
mov
inc
sahf
push
shr
pop
rol
ror
lods
adc
lea
fcom
adc
jge
jnp
fsub
popf
adc
into
sti
inc
adc
push
mov
pop
xacquire
push
push
push
pop
cmp
popa
jge
sti
or
mov
shl
(bad)
push
jge
lds
out
mov
es
xchg
(bad)
dec
and
arpl
out
add
pop
jo
cmp
inc
inc
add
clc
jne
sub
push
dec
gs
(bad)
adc
fimul
or
ds
sbb
pushf
inc
cmp
or
and
push
add
shl
pop
dec
stos
push
js
push
adc
push
ror
sub
add
js
jne
inc
aam
sbb
pop
mov
jle
es
bound
and
dec
fimul
jl
inc
inc
inc
ret
add
push
push
fbld
pop
sbb
mov
ror
ret
sbb
enter
push
mov
repz
ins
xor
cmp
pop
ror
add
lahf
xchg
pop
gs
sbb
jo
sub
loope
cld
mov
sbb
and
movsx
fdiv
inc
add
sub
xor
int3
repnz
(bad)
lock
shr
in
stc
ret
adc
or
xchg
mov
in
sub
dec
add
mov
jmp
and
cmps
(bad)
mov
arpl
loope
mov
sbb
adc
aas
dec
movzx
movzx
rcl
fadd
call
push
fnstsw
add
rcr
jp
stos
popa
xor
je
fldcw
mov
sti
adc
push
xchg
stc
movs
scas
mov
or
xchg
add
pop
cmp
xchg
mov
seto
inc
cmp
jl
lea
jo
cwde
cmp
test
fistp
and
mov
cmp
je
(bad)
jmp
(bad)
push
call
lea
loopne
mov
sahf
sub
(bad)
cld
sti
sub
jle
push
mov
xor
mov
int3
cdq
adc
pop
popa
mov
rcr
popa
iret
push
sar
adc
or
gs
into
(bad)
(bad)
shl
add
fsub
aaa
mov
aad
es
sbb
xor
pop
out
pop
dec
aaa
sbb
xor
add
(bad)
push
jne
mov
repz
or
sbb
xbegin
shr
add
push
or
arpl
rcl
xor
lods
or
jge
fwait
ins
dec
ret
in
add
ins
call
cli
mov
inc
push
call
jne
jae
mov
mov
(bad)
sub
jl
pop
sbb
push
loopne
clc
add
mov
xor
adc
xchg
xchg
pop
fcomp
adc
mov
mov
nop
or
jl
jne
inc
add
in
jg
cmp
push
pop
push
fsubr
pop
mov
push
push
xchg
adc
push
aam
in
sbb
push
enter
int3
or
ss
movs
mov
mov
mov
sahf
cmp
inc
test
aad
sbb
test
xchg
leave
xor
adc
loope
(bad)
mov
jmp
rcr
sbb
jge
or
xchg
push
dec
dec
xchg
rol
and
mov
xchg
xchg
adc
sbb
loopne
mov
ffreep
mov
lock
xchg
or
add
cli
adc
aas
add
push
cmp
je
adc
sbb
jmp
cmp
jl
jmp
jp
lds
inc
retf
icebp
jp
fisub
out
rcr
push
in
fucomi
lock
(bad)
add
ds
jmp
(bad)
xlat
in
xchg
cmps
enter
shr
(bad)
dec
icebp
fwait
cwde
mov
add
sub
xchg
jge
into
shl
sbb
and
test
hlt
lock
(bad)
cmp
jo
fmul
fucomi
adc
mov
popa
popa
push
mov
or
xlat
popf
loope
ja
fsub
test
mov
xor
jb
ror
jne
inc
xchg
jb
fcmovnbe
in
test
mov
hlt
xor
pop
inc
ret
push
fdivr
and
ds
dec
jne
(bad)
jno
mov
and
lds
lds
mov
push
mov
dec
ss
or
adc
adc
je
stos
pop
std
adc
push
jl
push
ret
xor
push
xchg
loopne
push
cmp
inc
inc
in
lea
mov
mov
imul
es
or
pop
sub
push
rol
test
mov
daa
retf
add
outs
rcr
popf
rcl
jne
inc
aad
dec
js
pop
push
push
fadd
lea
dec
sub
and
cli
sub
xor
outs
lods
es
mov
inc
fcom
adc
inc
push
inc
add
adc
mov
fnsave
mov
fiadd
test
mov
ins
(bad)
fucomi
test
(bad)
fidiv
je
push
cmp
cld
sbb
sbb
xchg
(bad)
push
rcl
int
aaa
push
nop
jg
mov
or
ss
jmp
scas
cmps
mov
pop
lahf
out
lods
sub
fiadd
ins
in
cmps
jo
dec
fsub
test
not
push
je
ss
sti
in
mov
mov
add
add
out
mov
push
cwde
mov
fcomp
fidivr
pusha
ds
pop
cwde
push
test
fidivr
repz
adc
clc
scas
adc
test
dec
mov
push
cmp
dec
mov
nop
mov
stc
(bad)
jl
mov
mov
cmp
dec
(bad)
xchg
push
pusha
cmps
outs
push
add
push
dec
into
inc
arpl
neg
push
adc
push
inc
dec
xor
pop
pop
lea
sub
fcom
fidiv
outs
fs
test
push
(bad)
jnp
mov
jnp
scas
xchg
adc
inc
jbe
test
call
out
mov
dec
or
mov
add
mov
shr
aas
cmc
stos
aad
jne
sbb
jo
dec
outs
ss
popa
ins
add
mov
sbb
imul
inc
ins
inc
je
ins
clc
mov
cmps
adc
scas
mov
sbb
je
sahf
ins
or
lods
jbe
mov
dec
jno
gs
mov
cmp
xchg
aas
mov
jle
mov
push
jb
push
popa
jne
gs
pusha
mov
pusha
mov
mov
out
dec
cmps
mov
mov
les
enter
dec
rcl
push
(bad)
mov
or
pop
ror
xor
push
sub
data16
xchg
ins
push
jge
enter
sar
mov
hlt
or
push
and
dec
in
push
call
ss
data16
inc
pop
push
or
in
imul
push
scas
loopne
push
push
outs
pop
and
mov
ins
dec
dec
jno
mov
xor
ins
mov
dec
push
pusha
stc
push
inc
lock
mov
pop
ds
mov
push
cmp
push
lahf
xlat
ins
test
sub
dec
push
loopne
ret
(bad)
and
es
and
add
or
push
push
push
and
inc
std
push
fsub
ss
mov
enter
adc
and
push
inc
imul
add
and
rol
xchg
cwde
popa
js
mov
mov
jae
adc
outs
push
shr
mov
popa
jbe
scas
ret
faddp
xor
adc
test
or
test
imul
cmp
push
ins
outs
outs
je
and
add
pop
stos
add
adc
and
mov
mov
outs
push
jle
jae
inc
loop
adc
adc
call
gs
ins
pop
ins
out
out
sub
ins
outs
jne
inc
pop
mov
mov
stos
or
cmps
retf
out
add
mov
inc
xchg
jl
int3
adc
leave
test
bnd
clc
imul
pop
push
movs
cmp
sbb
(bad)
push
dec
fsubr
xor
imul
add
ud2
jbe
jns
inc
xor
inc
sbb
je
pushf
push
retf
xchg
cmp
mov
das
jl
rcl
ins
mov
cmp
xor
mov
pop
ins
imul
add
adc
xor
add
movs
aas
or
mov
ret
arpl
jae
in
or
inc
loopne
push
sti
rol
shl
add
xor
pushf
jmp
dec
adc
inc
push
bound
inc
jne
push
mov
int3
pop
mov
pop
popf
je
pop
fucomi
pop
js
jb
addr16
jne
stos
mov
test
or
pop
out
or
sub
mov
or
cs
shr
adc
ror
xor
xchg
call
push
mov
outs
popa
es
nop
add
ffree
pop
mov
or
clc
or
push
(bad)
jl
jns
mov
lock
ret
popa
dec
and
cmp
popf
cmp
imul
cmp
push
cmp
cmp
test
mov
xor
mov
lock
bndstx
dec
or
push
scas
cmps
dec
lds
dec
repnz
nop
mov
ja
mov
add
fmul
or
jne
dec
push
jne
mov
test
jo
mov
adc
push
fild
jmp
inc
in
pop
push
mov
call
pop
mov
dec
sub
dec
sbb
sbb
rol
cwde
lock
cmp
or
inc
sub
stos
rcr
icebp
call
dec
cmp
aad
outs
(bad)
outs
(bad)
(bad)
or
mov
jbe
bswap
jo
cmp
aas
and
add
int3
adc
push
fiadd
pushf
sub
ja
mov
retf
or
inc
fstp
and
or
cwde
inc
rcl
inc
sub
mov
mov
xor
push
push
out
sub
mov
hlt
sbb
fcmovbe
jle
xchg
cmp
mov
outs
pop
or
dec
inc
add
cmp
pop
rol
adc
sub
out
je
sbb
push
call
fldenv
cmps
fcom
push
dec
xor
dec
add
xor
mov
dec
js
mov
aaa
dec
dec
or
dec
or
pop
stos
xor
ror
dec
call
mov
sbb
pop
inc
loope
add
or
pushf
popa
pusha
outs
pop
pop
inc
xor
inc
add
cmp
pop
inc
xor
hlt
inc
call
push
int3
pop
inc
xor
inc
gs
fdiv
mov
inc
and
shl
push
call
out
jnp
int3
or
add
imul
dec
xchg
pop
adc
dec
aaa
fs
ja
or
fld
pop
dec
cmp
pop
test
xchg
mov
sbb
dec
xor
iret
pusha
pusha
out
inc
pop
dec
cmp
dec
mov
push
not
clc
lds
(bad)
mov
xor
lods
xor
ja
or
inc
pop
dec
cmp
pop
mov
xor
add
adc
or
jb
sbb
xor
xor
xor
xor
dec
jnp
jb
xor
enter
sub
xor
xor
mov
xor
or
xor
jb
mov
xor
jb
add
xor
xor
xchg
mov
jb
sub
cmp
xor
out
mov
int3
add
mov
scas
scas
jge
call
push
push
mov
push
xor
or
div
add
rol
jg
fs
push
jno
pushf
push
clc
sahf
adc
jge
cmp
dec
adc
bndldx
sbb
dec
or
add
into
mov
mov
ins
je
cs
iret
rcl
inc
bound
or
ret
int3
push
popa
or
in
shr
xor
inc
dec
or
jle
and
push
push
imul
add
adc
push
jb
inc
shr
dec
add
into
or
push
popa
jbe
dec
mov
inc
ins
popa
jae
sub
loop
xlat
mov
aaa
inc
clc
je
sbb
mov
fldenv
jo
mov
add
mov
outs
xor
(bad)
or
ror
cmp
cld
sahf
test
push
pop
cmc
pop
dec
xor
mov
xchg
ins
mov
nop
mov
jge
mov
inc
mov
mov
mov
mov
push
rol
push
in
inc
sbb
shl
sbb
lods
push
scas
xchg
dec
add
rcr
or
outs
outs
imul
mov
loope
xor
inc
xchg
add
pop
movs
mov
adc
sbb
add
ja
shl
add
daa
stos
add
mov
js
add
adc
dec
out
add
ja
mov
inc
mov
cmp
sbb
inc
test
jne
mov
pop
lock
pop
xchg
call
(bad)
push
add
or
xchg
jg
cdq
add
push
sbb
push
mov
scas
add
xchg
test
xchg
les
ret
inc
pusha
mov
sbb
mov
(bad)
push
mov
mov
jge
and
adc
je
xchg
xor
push
jnp
push
jmp
push
ds
hlt
xchg
push
paddw
inc
dec
add
adc
fstp
dec
adc
ja
sub
aam
cld
add
retf
and
out
cmp
push
retf
or
or
mov
sbb
pop
daa
inc
xchg
hlt
push
lods
jb
adc
into
cli
and
sbb
int3
loopne
mov
fcomp
lods
push
mov
jl
leave
fimul
inc
jb
dec
add
sbb
dec
sbb
sbb
jmp
mov
adc
sub
jmp
jb
pop
or
push
(bad)
sbb
cmps
movs
sti
sar
sbb
or
addr16
mov
adc
mov
popa
popa
push
adc
cmp
jmp
fucomp
std
outs
add
gs
add
add
push
xor
mov
mov
or
push
push
lods
inc
inc
icebp
dec
and
jmp
lods
mov
mov
inc
or
popa
or
add
and
and
shl
or
push
push
ins
pop
data16
xchg
push
xchg
(bad)
ror
xchg
fcmove
xor
mov
sbb
mov
sbb
movzx
and
dec
cmp
pop
rol
hlt
lock
test
mov
aaa
rol
sete
adc
push
mov
sbb
mov
add
xor
and
jnp
mov
push
push
pop
or
mov
and
outs
dec
outs
cdq
nop
mov
or
pusha
fbld
jmp
das
add
xchg
iret
and
mov
mov
add
stc
pop
add
pop
jg
int3
sbb
push
cmc
jle
lea
add
push
mov
loopne
dec
inc
clc
mov
retf
xor
mov
and
dec
lock
adc
add
or
idiv
idiv
(bad)
arpl
test
jl
adc
dec
pop
add
cmp
js
or
mov
pop
sbb
push
push
push
push
repz
arpl
jno
in
add
shl
ret
cmp
in
leave
inc
mov
adc
test
cmp
sbb
jge
hlt
mov
in
mov
lods
xchg
mov
cld
sbb
mov
fcomp
out
jle
xchg
xchg
adc
dec
cmp
not
ret
xchg
ret
retf
mov
mov
add
popa
or
xlat
cmp
rcr
sub
vmwrite
xor
and
push
push
sub
cmc
add
rcl
dec
out
std
sbb
cmp
(bad)
mov
jae
fcom
es
(bad)
xchg
cmp
or
(bad)
test
cwde
xor
ret
sbb
aad
inc
cmp
push
ins
mov
lock
inc
es
sbb
add
add
out
(bad)
or
dec
lds
std
sub
and
mov
dec
adc
mov
inc
sbb
arpl
or
push
xor
add
(bad)
jno
sub
out
dec
cwde
sub
mov
add
xchg
or
or
pop
ret
or
dec
cld
bound
into
rol
add
daa
sub
mov
dec
or
or
inc
loopne
jle
aad
sbb
inc
jp
adc
add
jge
push
mov
inc
xor
loop
mov
inc
mov
fnsave
test
dec
inc
mov
cs
inc
call
jge
xor
call
pop
or
adc
sbb
or
pop
or
sbb
pop
fcmove
test
sub
mov
les
adc
aas
mov
jo
dec
jne
sub
pop
adc
je
xor
lahf
sbb
call
jbe
mov
push
or
test
ds
(bad)
push
mov
inc
clc
adc
adc
and
dec
mov
jg
cmp
jg
mov
sub
je
sub
adc
out
mov
mov
adc
fdivrp
fstp
fwait
jmp
jne
jo
pop
fld
inc
inc
outs
js
jnp
inc
pop
push
push
pop
(bad)
out
pop
add
repnz
(bad)
call
js
sub
mov
test
sub
dec
or
inc
adc
push
test
jnp
stos
jg
cmps
mov
fist
fcom
mov
dec
pop
adc
adc
enter
jmp
sub
push
into
inc
pop
or
ficom
sbb
pop
jle
hlt
lock
mov
xchg
dec
ror
(bad)
jmp
push
xchg
cmc
xor
jle
lea
adc
pop
test
cmps
inc
xchg
or
stos
popa
stos
push
jmp
sbb
push
mov
add
nop
sub
shl
lock
popa
imul
and
lea
and
cmps
xchg
sbb
xor
pop
out
fwait
icebp
or
mov
mov
sub
add
imul
or
ins
retf
sub
sbb
mov
not
xor
aam
not
outs
nop
xchg
and
ins
xor
ds
or
out
xor
xor
pcmpgtb
mov
or
xlat
pop
aaa
ror
fstp
not
sbb
or
loopne
cmp
jne
mov
adc
push
in
outs
pop
scas
add
pusha
xchg
push
push
rcl
sti
xor
enter
rdmsr
aaa
imul
int3
(bad)
loopne
push
sub
clc
jmp
mov
cld
(bad)
mov
rol
movzx
test
je
test
ja
data16
into
rcl
ficom
cmp
inc
pop
rcl
or
push
ja
nop
je
mov
or
jo
jmp
(bad)
arpl
adc
ins
pop
xchg
cld
mov
pop
rcl
mov
add
dec
lods
cmp
push
jns
je
ins
cs
stos
data16
call
mov
or
xchg
jl
inc
jnp
push
mov
hlt
jg
xor
pop
mov
loop
push
inc
mov
movs
leave
aam
pop
jns
lahf
and
xor
jg
lock
shr
out
call
xlat
popf
rol
jg
jnp
es
jg
adc
jne
outs
ins
cmp
imul
or
mov
popa
addr16
fisttp
add
ret
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
pop
in
jbe
jmp
pop
push
seta
iret
pop
sbb
(bad)
pop
cmp
cwde
test
cld
xor
out
push
add
adc
dec
inc
js
gs
pop
or
xlat
pop
xor
sub
ret
jno
loopne
test
out
sahf
xlat
pop
movs
push
sbb
pop
push
adc
cmp
je
test
add
push
mov
push
and
adc
xchg
mov
loope
gs
push
cmps
mov
dec
pop
test
sub
repnz
dec
shl
sbb
pop
cdq
aad
sub
icebp
inc
push
mov
fistp
pop
ror
or
test
mov
mov
fldenv
int3
pop
inc
or
sbb
sahf
unpcklps
in
ins
cli
dec
sbb
dec
and
pop
and
in
cmp
int3
sbb
and
sbb
add
xor
test
add
adc
jbe
and
dec
fsubr
test
xchg
and
lock
inc
repz
in
ins
in
cmp
das
in
psubsw
leave
outs
xor
shr
paddsw
rcl
sti
adc
adc
aam
jecxz
and
dec
adc
cmp
pop
int3
lea
push
mov
jne
test
shl
sahf
out
out
pop
fistp
jecxz
jmp
sti
iret
repz
ror
stos
push
mov
ret
repz
cmp
inc
sub
fst
sbb
loopne
test
push
leave
sub
aaa
or
mov
pop
daa
outs
test
movs
ss
mov
jo
adc
out
mov
outs
inc
add
(bad)
push
(bad)
out
mov
daa
cmc
push
xor
jb
ror
push
dec
call
add
(bad)
sbb
mov
mov
pop
xor
push
xor
jb
jmp
inc
retf
retf
fs
lock
shr
dec
imul
add
adc
mov
popf
push
xor
mov
inc
out
cmp
adc
sub
dec
add
les
pop
mov
adc
out
inc
imul
add
pop
(bad)
sub
push
dec
add
leave
in
mov
fwait
pmaxsw
xor
in
jns
psubusb
jns
rcr
fldcw
leave
dec
ja
add
(bad)
data16
or
pop
lahf
push
add
ja
jo
add
push
add
fbld
sti
(bad)
fmul
rol
outs
jb
jns
dec
add
in
jo
nop
dec
push
gs
xchg
nop
nop
out
pop
inc
pop
add
pusha
mov
outs
inc
jecxz
fisubr
dec
push
or
add
ins
bound
pop
stc
pop
out
mov
loope
in
mov
inc
dec
gs
rol
inc
shl
adc
ins
jo
mov
loope
push
xchg
push
push
ds
(bad)
scas
add
add
xor
(bad)
sti
cs
sub
imul
pop
xor
add
cld
and
arpl
and
jbe
or
(bad)
mov
pop
add
outs
pusha
inc
jae
imul
bound
push
mov
add
xchg
push
ja
mov
sbb
int3
scas
call
or
int3
push
add
and
call
push
fs
add
shl
out
cmp
aam
dec
inc
inc
adc
in
scas
inc
sub
dec
push
push
scas
dec
sar
inc
or
mov
fwait
outs
popa
jb
push
pusha
(bad)
add
pushf
mov
inc
adc
ret
xor
jne
or
inc
gs
add
push
test
jge
add
data16
mov
and
dec
jno
mov
pop
add
add
sti
sub
cmp
add
or
add
sub
popa
jae
jae
inc
or
add
or
sbb
adc
sbb
cmps
shl
cmp
dec
(bad)
nop
sbb
pop
imul
push
loopne
pop
inc
push
cwde
adc
sbb
fs
adc
push
inc
jb
popa
jns
sub
mov
out
cs
ds
mov
xor
mov
arpl
add
or
sbb
fldcw
pop
(bad)
mov
out
ss
xchg
sub
test
or
outs
xor
sub
shr
mov
dec
outs
jbe
sbb
test
pop
xchg
adc
mov
jno
addr16
mov
neg
push
in
fistp
push
mov
sub
sub
jp
js
fdiv
jns
add
adc
lds
jne
add
sbb
fstp
xor
pop
pop
das
jp
call
in
xchg
adc
fcom
xchg
dec
ret
iret
push
scas
cld
push
not
loopne
sbb
test
daa
mov
xor
sahf
sbb
lock
xor
sub
pop
in
enter
dec
pop
ret
pusha
fadd
pushf
inc
push
mov
and
and
sub
adc
jg
xchg
(bad)
cwde
(bad)
adc
push
sbb
popa
jns
push
mov
fldenv
fist
sub
jo
mov
push
int
xlat
int3
add
push
test
iret
inc
popaw
jne
je
mov
and
add
or
push
call
je
jns
push
retf
mov
jb
or
jb
dec
bound
or
dec
sub
test
cmp
mov
pop
pushf
in
hlt
pop
icebp
push
adc
outs
ret
loopne
add
and
mov
out
sub
ret
jb
dec
(bad)
scas
sbb
ja
pop
nop
das
scas
push
pop
push
add
inc
push
pop
cmp
fimul
jl
add
(bad)
xor
xchg
mov
ja
cmp
adc
add
gs
xor
push
pop
sbb
mov
scas
test
mov
pushf
adc
mov
ins
jg
add
dec
and
add
into
jne
sub
fcmovnu
sbb
mov
mov
(bad)
jmp
push
cli
sub
or
and
std
bound
ror
stos
dec
shl
mov
call
ror
out
or
jno
aad
pop
mov
dec
mov
verr
mov
scas
data16
xchg
(bad)
sub
jns
and
mov
xchg
jecxz
jecxz
mov
in
mov
push
cwde
or
mov
ret
in
in
add
ror
std
add
mov
adc
inc
ret
dec
xor
loope
out
dec
push
pushw
lds
pusha
cmp
jecxz
bound
test
fmul
fisttp
and
test
push
shl
pop
das
or
or
xlat
push
pop
outs
test
inc
dec
clc
adc
xchg
dec
js
mov
jne
xchg
push
adc
das
or
out
cld
hlt
xchg
or
aam
push
pushf
repnz
call
test
push
sub
jmp
pusha
mov
test
and
jae
sub
push
ror
jb
jns
sub
sub
test
retf
or
or
add
add
out
add
mov
push
dec
ins
(bad)
jnp
sbb
push
inc
cs
push
mov
leave
leave
leave
cmp
cmc
in
fs
jmp
repnz
imul
mov
pushf
mov
xchg
mov
inc
sahf
pushf
fcom
out
dec
xchg
and
dec
shl
sbb
push
inc
daa
daa
daa
fwait
mul
fdiv
frstor
cmp
pop
adc
punpckhdq
mov
popa
pop
and
push
aad
leave
lahf
dec
cmp
ins
or
fcomp
stos
ror
or
inc
in
loope
jmp
(bad)
jno
mov
imul
jmp
push
imul
js
add
xchg
movs
in
cmovns
add
fidiv
lods
inc
loope
or
mov
(bad)
push
add
xor
es
jle
add
xchg
cmp
adc
popa
fs
mov
push
add
loope
rol
push
adc
hlt
add
outs
pop
or
jp
xchg
int3
outs
cdq
jbe
push
stos
or
ja
cmp
push
adc
push
jl
movs
add
jo
add
mov
push
call
sub
inc
loopne
or
add
sbb
xchg
and
das
leave
call
and
(bad)
jp
pop
setp
popa
arpl
push
pop
xor
cdq
pop
jle
in
add
jae
imul
add
xchg
loope
sahf
dec
ror
add
pop
add
or
lea
or
xchg
push
xor
mov
ins
sbb
inc
push
add
lea
and
mov
dec
add
mov
push
inc
cmp
loopne
xchg
cmp
or
xchg
pop
jb
or
mov
clc
push
sub
add
dec
mov
js
sub
(bad)
cdq
jge
xor
sbb
or
and
fnsave
lds
mov
adc
jo
inc
jae
fist
cmp
add
popa
inc
add
stos
mov
dec
inc
out
add
add
cli
jo
int
pop
adc
dec
aaa
push
add
adc
imul
push
inc
sbb
loopne
dec
mov
mov
mov
push
out
mov
cdq
push
pop
test
jb
or
test
adc
adc
dec
sbb
xchg
inc
xor
aad
stos
(bad)
lods
ror
dec
add
or
and
lods
sbb
add
push
xchg
arpl
xlat
and
and
add
push
xchg
and
dec
push
ret
sub
push
jb
add
inc
or
ins
je
sbb
dec
xor
sbb
outs
bound
inc
lods
pop
sar
fsub
pop
and
adc
mov
add
or
ja
(bad)
dec
les
xchg
pop
mov
pop
inc
xor
xor
call
sub
mov
imul
inc
sub
xchg
or
push
mov
inc
popa
pop
arpl
jns
sub
adc
inc
popa
test
mov
shl
(bad)
(bad)
add
cmp
pop
mov
mov
push
loop
jae
cli
mov
rol
fdivr
jo
push
mov
mov
push
mov
test
je
xor
mov
push
add
ret
mov
mov
pushf
cmp
setne
pop
pop
ret
out
in
inc
xchg
scas
or
jnp
out
jmp
icebp
mov
mov
xor
mov
sbb
add
and
adc
pop
test
cmova
fs
jge
dec
les
pop
pop
pop
ret
nop
xchg
sahf
lock
jg
clc
lock
sbb
dec
mov
add
sbb
mov
ror
xor
call
bound
(bad)
jl
inc
pop
push
or
mul
mov
adc
test
in
call
std
xor
loopne
jge
cmp
mov
lea
adc
push
mov
and
sbb
ins
fisttp
jle
adc
(bad)
mov
add
repnz
mov
mov
mov
inc
push
push
push
mov
mov
ss
mov
movs
mov
inc
dec
inc
lock
sbb
scas
or
mov
push
sbb
and
call
add
enter
mov
add
mov
pop
sub
fst
cmp
mov
in
(bad)
imul
xchg
ret
push
ss
push
sub
pop
cmp
add
imul
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
mov
stc
cmp
cld
inc
(bad)
push
adc
jne
pop
push
dec
push
addr16
jo
cmp
cmp
jle
mov
and
es
sub
pusha
neg
cmp
sti
mov
or
jl
inc
xor
sbb
push
inc
push
sub
jne
pop
adc
xchg
jl
lock
mov
sbb
inc
js
movs
clc
loope
inc
xrelease
jbe
jge
sbb
ss
push
hlt
inc
jb
icebp
fimul
push
xchg
out
mov
movzx
int3
sbb
es
fmul
push
rcl
fisttp
sbb
push
inc
mov
jmp
sub
out
stos
ins
out
mov
push
(bad)
out
cli
mov
pop
ret
and
scas
push
adc
(bad)
cmp
clc
div
adc
jns
rcl
xchg
mov
xchg
add
mov
pusha
clc
or
pop
pop
push
mov
lea
inc
adc
lds
loopne
jp
sub
pop
add
dec
inc
jl
push
aaa
cmps
mov
ds
inc
lock
test
sbb
add
pop
ret
adc
lds
sti
xchg
fistp
dec
fdiv
push
mov
jne
adc
ss
lahf
xchg
dec
cwde
aam
fmul
call
pop
mov
sahf
or
hlt
iret
add
xor
dec
adc
call
outs
xchg
loop
mov
and
dec
or
jl
mov
sbb
jbe
mov
xor
mov
jbe
inc
in
in
xchg
xor
std
mov
dec
test
jl
inc
mov
mov
mov
jo
cmp
call
push
sbb
mov
cmp
sbb
inc
out
in
dec
jne
mov
mov
lock
jne
mov
push
js
inc
jg
(bad)
or
sbb
cmp
mov
adc
cli
add
jecxz
out
mov
jbe
push
push
das
jmp
pop
dec
loope
push
retf
sbb
ins
adc
pop
ds
mov
push
cmp
pop
mov
mov
xor
and
mov
add
mov
scas
in
sub
add
es
aaa
test
mov
add
mov
mov
pusha
rcr
into
loop
cmp
jmp
xor
call
gs
ins
(bad)
in
ins
pop
enter
shl
dec
call
add
sti
lods
sub
repnz
call
ins
push
cmp
nop
inc
adc
xchg
pusha
cmps
hlt
adc
pop
ror
push
jns
pop
or
enter
mov
ret
inc
pusha
push
adc
sahf
cmp
jge
jecxz
push
pusha
in
jne
ins
mov
xor
sub
pusha
rcr
push
rcl
add
dec
aas
jnp
cli
movs
pusha
(bad)
call
fldcw
adc
sub
xor
push
or
mov
outs
cwde
push
sbb
jp
xchg
pop
xor
pop
sbb
dec
arpl
add
aam
fadd
lar
int3
push
loope
lea
enter
add
mul
fs
cmps
ror
push
shr
pop
jno
aaa
mov
cmp
fcom
push
iret
cmp
push
iret
xchg
jmp
jno
xchg
adc
sub
repz
jno
mov
and
push
cmp
pop
fmul
mov
push
arpl
imul
jmp
idiv
retf
stos
sar
ret
sbb
sar
cld
push
pop
adc
cmp
dec
adc
ror
cmp
sub
loopne
or
add
pop
mov
push
sbb
adc
pusha
adc
mov
add
(bad)
(bad)
or
xor
or
in
(bad)
loopne
rcl
xchg
xchg
aad
call
jmp
dec
cwde
and
sbb
mov
leave
inc
ret
push
jecxz
mov
mov
add
cdq
nop
std
add
mov
adc
std
inc
adc
jne
lods
and
or
push
das
sbb
ret
cmp
push
or
inc
add
and
test
xor
inc
repnz
push
mov
and
(bad)
not
cdq
add
jge
nop
mov
scas
je
mov
dec
je
or
sub
je
jmp
cmp
or
ret
mov
sbb
test
and
in
jmp
jmp
jmp
mov
outs
dec
(bad)
aaa
add
mov
bound
jo
and
mov
hlt
jle
push
and
aad
call
add
hlt
dec
dec
hlt
or
mov
mov
out
shl
lahf
cmp
mov
shl
inc
cmp
adc
js
stos
in
push
add
into
out
or
inc
clc
sbb
add
inc
or
add
adc
push
je
xor
mov
rcl
mov
out
inc
out
out
or
dec
jne
inc
and
out
lods
cli
lock
jg
or
cdq
dec
sahf
adc
data16
inc
mov
mov
and
call
repnz
add
push
or
bound
push
push
mov
push
mov
sub
mov
inc
and
push
sub
mov
inc
jne
xlat
imul
in
retf
aad
cs
pop
pop
xlat
inc
test
xchg
push
popf
mov
outs
shr
mov
inc
je
or
inc
fstp
and
sbb
in
lods
cmps
xor
sub
mov
add
shl
leave
(bad)
mov
retf
mov
sbb
xor
test
add
popa
shl
pop
or
add
ss
icebp
inc
(bad)
in
fdiv
inc
mov
mov
(bad)
mov
inc
retf
adc
and
and
dec
mov
pop
in
dec
jmp
out
dec
jne
daa
cmp
sbb
movs
mov
add
pop
inc
cmp
call
and
shl
cmc
xor
add
sub
cmc
cwde
shl
rol
aaa
push
or
test
cmp
push
add
pop
cdq
aas
cs
dec
xchg
test
mov
cld
dec
xchg
xchg
xor
movs
pusha
call
mov
xor
inc
shl
rcl
es
rcl
ret
fsubr
push
sbb
sub
mov
(bad)
out
(bad)
mov
push
call
jmp
sbb
add
ins
cmp
jne
jle
dec
sahf
sbb
inc
push
push
pusha
sub
jns
pop
sub
pop
lahf
jne
sti
fdivrp
cmp
adc
pop
adc
xchg
xor
mov
(bad)
fidiv
add
lods
or
dec
jo
add
arpl
mov
lock
adc
call
ror
push
pop
hlt
push
xchg
adc
rcr
pop
push
or
test
arpl
nop
das
jmp
add
pop
call
xchg
and
pop
shl
and
jne
jmp
or
mov
shl
cld
and
fnstsw
cwde
pop
mov
sub
in
fnstsw
test
add
push
xor
add
mov
dec
std
fwait
push
add
add
jg
push
dec
jge
jae
jge
jo
adc
inc
add
clc
push
inc
outs
add
(bad)
mov
out
pop
test
jge
adc
(bad)
les
push
sti
popa
jg
enter
mov
or
jge
cmp
sub
daa
nop
jo
in
test
push
add
popf
mov
add
cmps
push
lock
push
pusha
jae
test
mov
int3
push
(bad)
xor
mov
rcl
push
pop
pushf
jne
xor
sub
sbb
or
inc
mov
jp
push
fucomip
lsl
rol
mov
jg
cmp
xchg
cwde
jge
mov
adc
mov
mov
xor
pusha
je
jae
je
add
xor
add
xchg
add
inc
enter
jo
jnp
sub
je
or
pop
push
mov
mov
(bad)
push
push
xor
add
cld
push
or
mov
push
clc
cmp
push
adc
ins
in
mov
adc
sub
dec
inc
adc
adc
cmp
add
test
or
mov
mov
je
imul
push
pop
dec
push
xchg
aam
pop
jo
popf
repnz
add
out
stc
hlt
jmp
push
mov
sbb
xchg
push
mov
lea
adc
or
jbe
jb
out
sub
cmp
test
adc
inc
leave
mov
daa
mov
cmp
arpl
cmp
(bad)
and
ss
add
imul
and
in
sahf
mov
cmc
loopne
pusha
add
iret
sahf
xchg
jo
push
mov
hlt
mov
pop
jmp
rcl
sbb
lahf
mov
mov
jbe
in
jnp
mov
or
xchg
cmp
retf
inc
xor
loop
lods
std
pop
fwait
lahf
dec
inc
mov
inc
and
cmp
mov
fsubr
or
jns
cmps
das
mov
cmp
call
xlat
sub
sub
or
test
pop
daa
ror
jbe
in
mov
add
(bad)
jle
(bad)
adc
adc
cmp
push
add
sub
inc
push
add
in
bound
(bad)
jmp
je
jnp
fcmovne
das
scas
jl
push
lea
xchg
sub
or
lods
add
retf
stos
xor
mov
pop
push
xchg
add
ret
push
cld
std
pop
add
(bad)
retf
adc
enter
jg
add
movs
ficomp
data16
pop
mov
shl
cmp
mov
inc
add
add
and
aaa
sub
pop
cmps
call
sub
cmp
jmp
and
adc
mov
mov
cs
imul
and
push
push
in
loopne
in
outs
loop
inc
mov
add
pop
adc
jbe
cmp
inc
add
dec
jne
jmp
add
sbb
xor
ds
pop
mov
cdq
out
mov
adc
xchg
push
pushf
stos
out
jl
sub
adc
push
test
mov
add
adc
push
adc
fidivr
out
nop
in
lds
mov
lock
xchg
test
mov
ss
push
jns
imul
mov
das
test
retf
pusha
movs
cmp
aad
push
loope
daa
mov
rol
arpl
mov
aas
ret
dec
pop
mov
popa
push
sub
dec
ins
dec
popf
mov
dec
adc
out
fdivr
ins
jmp
and
pop
outs
adc
fmul
jl
lock
popf
(bad)
mov
retf
add
pop
or
push
sar
adc
dec
hlt
jbe
lock
mov
inc
jg
mov
inc
mov
out
cmp
test
xor
mov
hlt
pop
or
xlat
adc
pop
sbb
mov
lock
loopne
xor
ret
inc
add
lea
test
jl
push
sbb
jecxz
adc
loopne
mov
les
jbe
(bad)
dec
stc
bound
push
add
xchg
mov
mov
add
sbb
fcomp
add
ins
sub
mov
in
pop
not
mul
pop
xchg
pop
aad
dec
clc
add
cmp
push
mov
cwde
or
push
xchg
adc
pushf
mov
and
jmp
pushf
push
push
jge
xor
scas
jbe
dec
jmp
push
jo
sahf
sbb
xlat
add
xor
fisttp
push
in
dec
dec
loopne
jge
ins
xor
js
inc
aas
movs
clc
push
js
xor
(bad)
and
enter
test
adc
(bad)
jmp
push
bound
push
pusha
push
js
cmp
xor
nop
push
fcom
jae
inc
xor
call
mov
sbb
push
std
adc
jmp
inc
shr
jge
scas
push
daa
dec
nop
pop
cmp
xchg
and
jmp
stos
mov
icebp
xor
mov
rol
and
pop
ss
mov
mov
fadd
sbb
xor
jge
mov
lds
sbb
jl
cmp
cmp
fwait
mov
add
mov
xor
rcr
in
mov
jo
sub
jl
les
in
into
jl
js
loop
mov
xchg
jne
push
cmp
es
inc
xchg
rdpmc
ror
cs
(bad)
push
or
shl
mov
daa
pusha
add
lock
add
ret
mov
and
ret
gs
and
ret
pop
pop
mov
add
pop
popf
rcl
retf
adc
mov
and
lea
sub
push
call
pop
inc
dec
jne
or
pop
scas
fild
out
cmp
add
ret
or
jmp
mov
add
aam
(bad)
and
xor
xchg
sbb
outs
and
adc
jne
cmps
test
fbstp
xor
inc
pusha
jo
or
jno
inc
cwde
outs
jl
or
retf
in
(bad)
mov
cmp
pop
dec
xor
jbe
xor
mov
dec
pop
sahf
fucom
inc
xchg
mov
pop
ins
scas
push
jbe
and
mov
leave
push
jmp
mov
push
out
cmps
sbb
(bad)
pusha
je
push
sub
jbe
push
and
pop
or
jne
and
test
movs
lods
js
jne
dec
clc
jns
sbb
xor
fs
ins
jns
cmp
jno
hlt
jle
je
xor
or
inc
repnz
pusha
(bad)
mov
stc
pop
je
xchg
mov
retf
daa
ror
(bad)
jecxz
pop
movs
adc
push
fidiv
dec
jnp
add
sbb
aam
sar
inc
or
push
dec
push
loopne
mov
jg
and
push
ret
inc
and
sbb
fidivr
xor
mov
add
cmp
cmp
mov
in
retf
push
and
adc
or
hlt
mov
neg
mov
cmp
or
leave
add
fbstp
pop
adc
dec
dec
or
dec
mov
aaa
push
mov
adc
mov
sub
add
bound
or
or
adc
lods
pop
stc
sbb
movs
xor
sub
jae
or
out
out
jle
aad
shl
jl
mov
lock
jg
lea
dec
cmp
jg
es
push
fwait
push
or
push
sub
sub
push
add
test
test
push
add
ret
sbb
scas
retf
mov
push
pop
retf
adc
call
es
push
adc
add
inc
test
mov
les
pop
lock
sbb
outs
mov
sub
shr
add
(bad)
inc
adc
lock
push
lea
jmp
popa
sbb
mov
lds
sbb
dec
adc
test
leave
push
lea
shl
mov
test
out
(bad)
pop
fadd
test
mov
test
mov
jle
pop
ret
out
sbb
daa
shr
add
or
loopne
or
xchg
add
ds
adc
xor
test
fldcw
cmp
cmp
mov
or
(bad)
cmp
mov
pop
les
pop
cdq
push
repnz
dec
cmp
cmp
jle
sbb
or
ins
cmp
or
mov
sub
xchg
(bad)
ins
xchg
xchg
(bad)
dec
ror
sub
jo
jb
jae
outs
cmp
jns
je
(bad)
jmp
cs
gs
jo
outs
je
jae
push
adc
gs
outs
fs
mov
add
sbb
outs
imul
push
gs
jne
je
jl
add
scas
fnstsw
jp
add
sahf
sbb
xchg
ret
sub
sbb
adc
cmp
push
iret
stos
ror
add
cmps
sbb
ss
add
cwde
lods
push
xor
add
sbb
mov
into
push
ret
loopne
push
js
jge
jle
adc
or
(bad)
jl
aad
xor
sub
or
push
jnp
clc
fidivr
dec
xor
aad
add
jle
dec
or
jmp
pcmpeqb
xor
sub
in
jne
add
sbb
js
outs
pop
aaa
stos
jae
mov
inc
or
add
pop
data16
pop
jnp
ins
scas
add
adc
add
mov
jne
pop
mov
arpl
or
ins
dec
lds
(bad)
(bad)
or
inc
add
bound
push
jp
adc
sbb
or
dec
mov
out
fist
mov
ds
or
push
imul
ret
popa
xor
pop
in
loope
inc
and
cmp
xchg
aad
pusha
les
pcmpeqb
add
push
pop
sub
test
ins
je
jno
loopne
(bad)
mov
xor
xor
ror
or
test
adc
sbb
dec
lar
xor
jbe
inc
jb
popa
jns
popa
outs
popa
addr16
add
shl
jno
push
out
dec
xor
add
sbb
inc
mov
xor
add
inc
jb
cmps
test
fadd
js
cmps
pop
push
outs
and
add
jnp
fiadd
mov
out
fcmovnbe
and
(bad)
ret
test
inc
imul
mov
imul
stos
adc
in
cmp
fiadd
sbb
jmp
imul
out
js
(bad)
mov
pusha
xor
push
popa
arpl
xor
or
and
(bad)
sub
mov
jo
add
lock
pop
pop
cmp
adc
adc
hlt
push
or
adc
cmc
inc
or
in
push
out
fnstsw
ret
ss
je
mov
xchg
out
xchg
cld
push
daa
mov
or
pop
sbb
add
lock
xchg
inc
in
xor
mov
pop
enter
jge
mov
or
hlt
adc
bound
pop
cmc
cmp
cmp
sbb
add
in
add
add
fsubr
mov
adc
and
xchg
push
scas
das
les
mov
pop
mov
mov
push
scas
sbb
add
fmul
(bad)
push
and
rcr
dec
add
inc
in
add
xor
push
xor
push
jo
push
inc
fs
js
setge
and
or
push
inc
pop
outs
adc
jb
cli
or
xchg
or
fadd
or
inc
add
sub
jno
or
xchg
mov
mov
sahf
push
xor
dec
xchg
and
mov
push
mov
loopne
mov
sub
mov
xchg
mov
push
ja
pop
mov
pop
push
je
dec
push
movs
movs
pop
push
ins
cmps
adc
ds
jnp
jl
mov
push
mov
mov
scas
jnp
mov
test
mov
les
fdivrp
sahf
dec
push
dec
divps
cmp
sbb
pop
cli
je
xor
or
inc
cmp
inc
and
idiv
adc
setl
pop
pop
inc
xor
pop
cs
outs
jge
add
push
mov
or
sbb
imul
xchg
sub
inc
push
ins
jo
out
dec
mov
pusha
arpl
mov
out
in
or
outs
jae
pusha
mov
push
push
jnp
js
sub
(bad)
push
ficom
outs
arpl
ins
mov
bound
jb
mov
fcom
adc
loopne
mov
add
cld
adc
aad
pop
and
cs
pushf
jbe
dec
push
retf
add
push
(bad)
stc
mov
add
(bad)
out
inc
push
sbb
xor
pop
fdiv
cmps
sub
imul
lds
mov
or
sbb
mov
and
test
sbb
scas
loopne
cs
dec
pop
inc
js
jne
xchg
cld
push
add
es
sub
or
rcr
xchg
xchg
jae
add
sub
ror
xchg
lahf
jb
add
or
dec
push
or
mov
les
add
or
ins
jae
lock
dec
sub
ret
jmp
or
or
jl
(bad)
pop
aas
or
pop
push
sbb
inc
mov
mov
cwde
mov
scas
push
sub
enter
pop
loopne
xchg
fldlg2
or
inc
or
or
arpl
inc
add
push
push
mov
jbe
test
das
xor
out
pop
pop
cmp
inc
gs
out
sbb
mov
sbb
ja
test
jmp
add
inc
push
mov
mov
ins
push
dec
jae
in
jmp
sub
jo
fild
cmp
cmp
daa
adc
sti
mov
add
imul
jbe
movs
adc
outs
dec
jbe
push
clc
adc
mov
imul
push
jns
ss
and
outs
inc
push
cmp
jb
push
imul
sub
pushf
mov
sub
lahf
icebp
push
fsubr
adc
data16
fcomip
mov
sub
lea
mov
adc
dec
dec
imul
call
and
rcr
dec
add
ja
pop
cmps
add
int3
frstor
inc
or
mov
popa
fs
jns
je
jb
daa
jb
je
xor
ja
dec
or
push
mov
rcl
push
lods
outs
pushf
and
mov
pop
xor
push
adc
(bad)
push
mov
cmp
inc
outs
inc
fs
sar
mov
add
mov
adc
add
iret
xor
je
jbe
adc
dec
jnp
icebp
cmc
inc
jae
sub
adc
jl
loop
add
add
or
jo
or
scas
mov
or
xchg
cmp
or
arpl
pop
data16
popa
dec
aaa
mov
std
shl
div
ror
and
int3
jae
rcl
jecxz
xor
add
repnz
mov
aaa
sbb
ds
adc
aas
ret
aas
or
inc
pop
inc
outs
or
outs
out
(bad)
lock
jae
call
ja
popa
pop
sbb
out
dec
mov
push
ja
mov
adc
test
rcl
leave
sar
cld
jne
and
dec
sub
(bad)
sbb
push
adc
xlat
loop
sbb
xor
inc
aas
popf
push
mov
and
push
pop
mov
pusha
(bad)
xor
aaa
in
fimul
sub
mov
repz
push
fimul
dec
add
and
pusha
xor
xor
iret
fucomip
adc
pop
lock
mov
and
jo
push
xchg
pop
push
les
mov
mov
nop
pop
push
xchg
mov
fmul
jo
or
dec
add
xor
test
inc
hlt
push
ins
cmp
push
test
add
cmp
mov
inc
mov
imul
pop
arpl
or
mov
sub
pop
add
ror
xor
xchg
js
test
arpl
test
jo
ret
out
pop
add
cmp
adc
sbb
xchg
(bad)
daa
mov
fwait
es
xchg
enter
or
add
shr
cs
nop
or
push
xchg
mov
imul
movs
gs
inc
pxor
nop
outs
push
cwde
je
push
push
mov
mov
mov
cmps
loopne
lods
pusha
cmps
fistp
jnp
popa
push
cmp
inc
inc
clc
gs
(bad)
cld
les
inc
bound
stos
ins
mov
nop
bswap
ficom
data16
mov
ret
jnp
and
cli
loop
test
jno
fstp
ins
pusha
jb
outs
arpl
ins
xchg
adc
cmp
add
es
sub
ss
jge
mul
inc
gs
shl
push
pop
pop
bound
outs
xor
add
imul
add
push
fiadd
imul
enter
dec
sbb
enter
inc
fld
outs
adc
shl
mov
push
and
add
pop
ja
xlat
push
push
push
push
xor
cmp
pop
add
sbb
shl
jg
(bad)
je
and
jg
dec
ja
pop
push
add
and
dec
outs
arpl
rol
and
popa
jbe
pushf
mov
aam
sbb
pop
pusha
xor
call
xor
add
fldcw
jnp
mov
jo
mov
outs
dec
add
es
mov
push
(bad)
mov
pop
push
pop
add
add
dec
lock
add
call
jo
or
push
sbb
(bad)
stc
aad
adc
dec
mov
inc
outs
jne
mov
add
into
or
jmp
or
sub
je
rol
into
jl
xor
jge
sub
add
adc
push
or
and
dec
dec
pop
jo
adc
and
arpl
lods
pop
inc
pop
outs
mov
add
push
push
fnstcw
adc
add
push
dec
add
pop
pop
sbb
sti
fnstsw
int3
add
das
adc
addr16
mov
dec
pcmpeqw
mov
xor
and
data16
add
adc
outs
call
adc
and
or
mov
out
mov
push
add
rcr
cmps
or
fcom
push
sbb
add
rol
or
push
out
lds
add
sub
push
mov
(bad)
fcom
add
push
ds
cmp
sub
push
pop
mov
push
push
cmps
mov
push
add
imul
mov
or
sub
xchg
test
fs
fwait
loopne
cmp
sbb
inc
add
in
movs
fcom
setle
cmp
lea
push
js
pop
pop
jle
jne
sar
imul
jne
sahf
fist
fs
outs
cmp
mov
or
popf
adc
or
cmp
inc
jo
lods
xor
test
movups
inc
popa
pop
jne
ja
and
lahf
jecxz
test
bound
cmp
or
sub
xor
clc
(bad)
int3
push
ficom
push
sar
xor
mov
jb
pop
or
pop
sbb
lods
fistp
dec
imul
je
outs
fst
sti
nop
pop
arpl
scas
adc
cmp
push
xchg
ins
lods
sbb
test
sub
test
pop
and
pop
push
call
push
mov
mov
xor
add
arpl
(bad)
fs
nop
xor
xor
imul
cmp
sar
aam
cmp
sub
adc
mov
arpl
scas
movs
mov
mov
cmp
ss
or
popf
imul
add
adc
fs
pushf
push
jne
test
iret
lods
pushf
push
dec
cli
add
(bad)
(bad)
(bad)
mov
in
(bad)
in
(bad)
jmp
jmp
jmp
jmp
out
std
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
mov
iret
repz
push
pop
js
xchg
jl
imul
jo
pusha
mov
jbe
ins
ja
js
test
adc
ins
add
add
test
push
popf
and
fisubr
scas
fucom
push
sbb
popf
ins
dec
cs
cmp
inc
mov
(bad)
dec
jno
shr
adc
scas
lds
sub
sbb
mov
cmp
mov
cmp
xor
retf
popa
or
cmp
xor
in
cmp
xor
sahf
leave
and
xor
sbb
inc
and
das
sar
and
dec
pop
sub
push
inc
int
adc
call
mov
neg
push
or
add
pop
or
xchg
fwait
call
mov
mov
sub
mov
push
stc
aas
inc
add
daa
cmc
(bad)
fsubr
add
loopne
jo
add
add
mov
int
or
xchg
(bad)
and
ret
inc
or
inc
cmp
pop
sbb
imul
gs
push
and
xchg
add
sub
push
pop
sub
adc
and
sbb
jmp
pop
ror
push
pusha
or
mov
pop
lods
sub
inc
dec
push
fcom
adc
aas
inc
shl
loopne
add
dec
adc
test
dec
adc
outs
inc
stc
mov
out
shr
aad
add
add
push
push
jge
mov
mov
scas
inc
icebp
out
push
jo
adc
outs
clc
adc
outs
jb
fistp
and
jae
jb
and
and
sbb
xor
mov
arpl
shl
or
out
movs
pop
and
outs
ja
dec
outs
dec
xchg
in
js
movs
inc
lods
cli
mov
mov
inc
jns
shl
data16
mov
xor
test
inc
adc
sub
jne
in
or
mov
cmovs
imul
sbb
xor
ror
mov
or
ss
xor
cli
or
outs
mov
sti
shl
sbb
inc
rol
imul
imul
das
xchg
out
add
adc
fadd
or
pop
aas
(bad)
fimul
add
je
bound
push
or
sbb
or
int
or
or
push
inc
pusha
add
sar
sbb
jae
rcr
neg
cwde
adc
inc
aas
add
inc
fstp
lahf
(bad)
jg
or
(bad)
jne
daa
(bad)
sub
es
das
test
mov
js
pop
xchg
int3
out
add
bound
adc
mov
jmp
sub
mov
jmp
pop
add
cmps
mov
pop
adc
pop
jl
clc
(bad)
mov
and
pop
add
mov
mul
test
clc
inc
dec
add
push
pop
xchg
mov
add
sbb
xchg
xchg
inc
mov
pop
inc
adc
mov
or
or
or
loope
mov
adc
ret
or
into
inc
fstp
lods
add
push
inc
dec
int3
popf
outs
or
push
imul
push
mov
mov
inc
lock
push
add
fwait
jmp
xchg
or
idiv
pushf
inc
mov
or
mov
(bad)
bswap
enter
add
mov
xor
(bad)
push
ss
das
pop
mov
and
clc
jnp
jmp
add
cwde
jl
jns
pop
ja
ds
push
push
js
push
sub
pushf
jge
lahf
ret
push
and
push
(bad)
inc
pop
popa
inc
js
sahf
pop
xchg
xchg
or
mov
dec
aad
call
mov
outs
mov
sar
add
js
add
sbb
fild
sbb
mov
sub
push
push
cld
(bad)
cmp
js
dec
or
lock
rcr
cmp
imul
xchg
nop
adc
mov
or
jne
and
fcomp
fisttp
dec
pop
mov
fwait
push
comiss
and
pop
out
mov
push
add
inc
into
mov
cdq
test
adc
lods
daa
dec
fcom
sub
mov
inc
xchg
add
popa
mov
pop
popa
dec
xchg
mov
mov
ds
mov
out
rcr
inc
jns
sbb
test
mov
pop
push
or
lods
loop
icebp
jmp
and
mov
or
push
rol
enter
push
fimul
sbb
add
push
sub
xor
test
daa
and
ror
jle
fsub
outs
pop
fs
add
and
ins
test
add
test
adc
xchg
inc
jbe
cmp
push
iret
dec
xor
sub
dec
je
stos
adc
lods
mov
push
or
mov
xchg
or
pop
iret
pop
or
and
rol
push
inc
push
movaps
dec
sub
inc
ret
shl
xchg
ins
sbb
mov
mov
or
dec
or
ds
add
push
add
pop
cmp
ins
or
sbb
mov
pusha
and
mov
movs
jg
ins
shr
lods
mov
into
sbb
test
inc
fcmovnu
test
push
adc
fabs
mov
movsx
mov
xor
ret
pop
mov
inc
stos
js
adc
jp
je
outs
test
and
dec
dec
cmp
or
fstp
das
xchg
push
dec
add
lock
xchg
inc
mov
retf
pop
shl
je
sbb
ret
xchg
mov
inc
jp
shl
int3
leave
and
fcmovne
jge
out
or
xchg
push
push
mov
jmp
jo
xchg
add
loopne
xchg
nop
(bad)
adc
add
add
xchg
dec
fidivr
js
jg
push
test
inc
push
xchg
push
fcomi
js
jns
out
cli
pop
ror
inc
mov
add
and
pop
sub
daa
scas
movs
hlt
js
fiadd
cld
push
sub
loope
loope
retf
inc
mov
shl
nop
lods
sbb
sbb
inc
packuswb
aam
cli
inc
fistp
cmp
adc
dec
sub
cs
daa
out
add
push
js
mov
add
ins
mov
sbb
dec
inc
xchg
jl
push
mov
scas
dec
fisttp
test
ret
enter
cmps
push
xor
push
adc
or
pop
adc
cmp
mov
inc
mov
les
pop
sub
pop
sbb
add
cmp
imul
loopne
fadd
mov
sub
push
or
in
pop
sub
retf
push
mov
fwait
pop
mov
inc
mov
mov
and
ins
addr16
inc
retf
pop
add
pop
push
dec
bound
sbb
or
sbb
call
add
les
mov
call
out
dec
inc
add
ss
xor
xchg
inc
xchg
mov
outs
pushf
adc
fcom
or
or
loop
(bad)
cmp
les
test
xor
and
lods
or
pop
mov
xchg
cmp
data16
push
push
push
jge
sub
out
add
cld
shl
inc
add
outs
daa
movs
bswap
cvtps2pi
not
je
ror
sete
pushf
mov
and
pusha
pop
pop
add
add
and
and
scas
inc
(bad)
push
add
push
jle
fdivr
push
xchg
xor
retf
fst
mov
pusha
mov
cmp
mov
cdq
jne
push
add
adc
push
sub
mov
pop
jge
mov
add
ins
sbb
or
xor
aam
dec
mov
jnp
cdq
xor
and
scas
or
push
popf
sub
sub
stos
xor
and
jmp
or
and
loopne
xchg
test
mov
retf
xor
xor
add
test
icebp
fisub
mov
mov
shr
xchg
pop
test
add
add
ud1
sub
pop
add
push
push
dec
pop
xor
out
mov
in
jge
shr
sbb
adc
cdq
retf
dec
xor
add
jnp
into
rcr
dec
or
(bad)
out
aas
lahf
aaa
enter
dec
ret
xor
cli
lock
sub
enter
jnp
or
rcr
dec
popa
jbe
addr16
repz
xlat
fsubr
adc
sti
call
outs
push
adc
punpckhwd
es
dec
movs
add
or
cmp
dec
pushf
clc
repnz
xchg
dec
push
push
add
push
call
ror
mov
test
fmul
push
push
jns
jl
jo
add
call
(bad)
out
lock
add
push
clc
jecxz
(bad)
loopne
mov
test
mov
xor
popa
sbb
push
add
jae
lea
popa
ins
dec
icebp
push
sbb
and
pusha
xor
push
sbb
arpl
and
push
adc
pop
xor
inc
push
pop
addr16
jo
xchg
add
push
pop
hlt
or
inc
cmp
mov
cs
inc
fmul
pop
sub
inc
je
mov
inc
add
inc
inc
inc
inc
call
inc
cs
dec
jae
gs
inc
inc
retf
neg
push
adc
sbb
pop
jo
loopne
ja
pop
adc
add
xchg
dec
mov
and
rcl
xchg
fcom
inc
or
mov
sbb
pop
inc
or
adc
call
adc
sbb
sbb
add
sub
push
or
sbb
and
inc
in
(bad)
fcomp
cmp
pop
dec
in
jmp
aam
dec
or
js
loopne
jae
cmp
mov
sbb
dec
add
test
aam
push
dec
lea
and
movs
sbb
push
dec
mov
jecxz
push
inc
push
mov
adc
inc
dec
adc
push
fsubr
push
jp
(bad)
hlt
add
test
push
std
xchg
inc
pop
int3
dec
push
inc
dec
jne
or
and
or
adc
adc
or
lods
sbb
jbe
cmps
jmp
add
jbe
cmp
jmp
lods
fist
mov
or
add
sti
lds
adc
pop
dec
test
test
cmp
adc
mov
push
dec
ret
and
scas
inc
add
pusha
jno
nop
cwde
and
mov
test
pop
push
or
aaa
adc
test
cdq
xor
xor
push
mov
dec
int3
int
(bad)
pop
dec
adc
lods
es
idiv
pop
adc
pop
sbb
test
xor
inc
inc
adc
push
hlt
dec
unpcklps
jo
xchg
loop
jnp
push
jne
jns
jne
arpl
and
mov
mov
in
mov
outs
test
add
add
(bad)
mov
cld
fild
mov
je
sbb
test
mov
pop
lahf
mov
push
test
je
add
cmp
jae
add
outs
dec
ror
cmp
inc
inc
add
lods
pop
fstp
mov
mov
test
je
push
sar
shl
les
pop
pop
ret
nop
mov
mov
je
or
push
cmp
sbb
pop
test
nop
nop
adc
mov
mov
adc
xor
mov
push
xor
shr
test
jle
adc
push
mov
mov
loopne
sbb
fwait
or
fstp
pop
dec
xor
fmul
ror
jle
in
call
jb
ror
adc
adc
sbb
cs
mov
xchg
xchg
or
jle
fs
mov
push
push
mov
(bad)
mov
test
jp
mov
or
push
push
add
push
sub
push
cmp
jmp
mov
sar
and
ud0
xchg
push
mov
push
jbe
inc
cld
xor
push
push
cmp
inc
sub
or
fistp
push
adc
sbb
push
mov
push
cld
hlt
inc
out
fbstp
or
or
pop
xchg
popa
in
outs
fidiv
mov
adc
out
rcr
cmp
fisub
je
fld
das
sub
mov
in
fnstenv
clc
outs
sbb
inc
add
mov
fs
sbb
dec
or
add
fs
jge
cmps
mov
pop
clc
mov
call
pop
hlt
mov
cmp
push
fldcw
ret
les
xchg
push
lock
(bad)
adc
fistp
in
outs
jecxz
xor
in
pop
sub
shl
hlt
mov
data16
push
pop
xor
int3
les
call
sub
out
or
ja
cdq
rcr
shl
sub
aam
pop
in
xor
shl
push
add
fs
push
xlat
fsubr
push
cs
rcl
dec
cs
movs
mov
mov
cmp
outs
xchg
aam
js
dec
and
inc
adc
sbb
jo
ins
adc
jnp
push
or
data16
dec
inc
out
jl
push
mov
cmps
in
add
push
sub
cmp
mov
imul
cmp
push
dec
cmp
scas
ins
into
mov
(bad)
pop
(bad)
cmc
cmp
out
mov
push
and
push
inc
add
or
imul
cmps
pop
cmps
inc
fldenv
adc
cmps
pop
sub
mov
jmp
push
or
mov
mov
adc
push
push
add
jle
mov
js
dec
cld
jl
inc
xor
mov
stos
clc
jle
pop
push
xor
push
inc
cs
ss
jg
pusha
daa
xchg
inc
fiadd
dec
jne
pop
sbb
stos
daa
outs
test
shl
loope
clc
mov
push
dec
icebp
js
or
aam
dec
(bad)
jecxz
mov
inc
mov
(bad)
dec
lahf
inc
jo
mov
jp
push
add
pop
imul
cmp
setg
mov
sbb
ds
rol
xor
add
adc
or
daa
xchg
(bad)
cs
pop
and
or
push
pop
push
pop
adc
push
sbb
(bad)
adc
(bad)
adc
ins
(bad)
cmp
int3
add
sbb
out
sahf
out
jnp
sub
sahf
dec
push
pop
xchg
fist
xor
adc
jmp
inc
mov
test
sub
push
mov
call
retf
push
mov
add
gs
ja
add
es
add
push
cld
loop
cmp
lds
aad
hlt
dec
inc
cmps
inc
loopne
(bad)
mov
popf
fimul
imul
sub
inc
push
gs
imul
sbb
mov
loopne
fdivr
push
jo
fs
mov
test
push
(bad)
jae
add
cwd
push
mov
stos
xor
pop
pop
and
add
push
add
mov
sub
sub
jnp
lock
fisub
or
mov
std
push
add
fs
mov
inc
push
jns
sti
mov
add
pop
nop
sbb
push
loopne
imul
cmp
ds
push
stos
test
je
loopne
adc
pop
sbb
sbb
nop
push
push
dec
mov
or
sbb
sbb
es
sbb
(bad)
lock
stos
and
and
add
sbb
cld
cmp
loop
pop
dec
mov
add
pop
cmps
and
sub
pop
outs
add
xor
add
pusha
or
add
add
inc
mov
cmp
xor
stos
jmp
lods
loopne
add
pop
pop
ret
push
xchg
mov
call
pop
retf
push
jle
cwde
add
dec
adc
xchg
adc
or
add
gs
mov
jae
stos
inc
fwait
or
ss
pop
inc
mov
int
and
push
push
adc
rcr
and
xor
inc
pop
jl
cmp
mov
fidiv
mov
or
or
ss
push
push
and
jo
mov
ins
xor
jno
imul
pop
push
js
test
cwde
sbb
add
ss
sar
rcr
fs
and
lods
fmul
cmp
adc
xchg
jae
aas
ret
push
mov
dec
mov
add
(bad)
cmp
imul
movzx
push
dec
lods
add
xchg
hlt
dec
(bad)
jb
mul
xchg
lahf
xchg
jnp
mov
dec
sbb
adc
adc
pusha
push
es
jb
xlat
lods
cmp
fidiv
jg
inc
push
in
add
jg
mov
cmp
jg
lock
mov
je
sbb
adc
xor
mov
xchg
add
sub
mov
mov
cmp
sar
push
mov
jne
sbb
mov
push
push
(bad)
mov
retf
cmp
jge
lea
cmp
mov
out
bound
rcl
inc
fcom
lea
retf
popa
sub
xor
dec
or
outs
xor
xor
(bad)
adc
js
in
mov
mov
leave
jmp
lods
pop
clc
push
push
push
and
aam
mov
ret
dec
mov
mov
push
ins
push
pusha
inc
and
sub
jne
push
sbb
xchg
mov
push
mov
push
mov
and
cmp
xchg
daa
shl
push
mov
mov
in
and
jb
nop
xchg
ins
lods
dec
jl
enter
jl
inc
xor
mov
inc
jo
mov
cmp
xchg
xchg
scas
sbb
or
scas
sbb
adc
test
inc
xor
mov
mov
pop
fs
jle
jmp
repz
cs
push
mov
push
test
jge
adc
pusha
xchg
mul
push
jo
dec
in
push
mov
cmp
ja
and
bt
jae
or
int3
cmp
inc
add
cmp
jne
xor
and
and
pop
rdmsr
pop
push
rcr
ins
add
jne
jmp
cmp
xor
mov
add
pushf
dec
test
xor
push
loope
mov
ins
xor
xchg
add
fcom
adc
fisub
aaa
cld
ret
movs
adc
inc
and
int3
stos
in
cmp
dec
inc
dec
stos
mov
out
add
push
sbb
loopne
sahf
sar
lock
mov
je
xchg
sbb
ss
adc
jne
xor
add
mov
add
cwde
cwde
dec
dec
cmp
push
fcomp
or
mov
mov
pop
fiadd
jo
fst
iret
adc
and
mov
jmp
inc
test
in
fbld
fadd
in
mov
dec
cmp
lock
mov
lods
mov
jg
rcl
ficom
jl
mov
std
scas
mov
mov
pop
mov
pop
les
mov
add
xor
call
xor
add
add
idiv
inc
add
adc
sbb
inc
add
xor
neg
pop
push
es
adc
loopne
ss
and
mov
mov
test
es
jg
imul
mov
or
dec
das
popf
loopne
loop
xor
icebp
rol
push
inc
je
inc
sub
xor
clc
test
fcom
je
pop
aam
out
aas
or
in
jno
xchg
push
add
pop
nop
lods
pop
sub
jo
lock
(bad)
fld
inc
cmps
adc
mov
addr16
arpl
adc
mov
sbb
xlat
or
leave
jmp
add
dec
adc
call
pop
pusha
inc
jb
in
add
div
add
add
xor
jmp
push
(bad)
add
test
push
arpl
or
mov
popa
dec
repnz
pusha
pusha
add
in
inc
(bad)
mov
xor
push
sbb
jno
lods
in
cmps
adc
hlt
push
jmp
jmp
(bad)
shl
je
hlt
ret
xor
xchg
mov
daa
xor
push
add
clc
and
jmp
fs
cmps
mov
adc
sbb
push
or
pop
loopne
cmp
pop
adc
or
jnp
mov
mov
int
fisttp
loopne
mov
cmp
sbb
push
lock
jmp
pop
adc
or
fmul
fs
outs
jns
outs
pop
mov
push
loopne
dec
mov
inc
icebp
call
jae
add
call
shr
add
ds
or
sbb
test
sbb
jns
adc
adc
rol
jl
inc
sbb
sbb
xchg
mov
nop
mov
and
js
add
cmp
pop
dec
jne
xchg
or
push
lahf
nop
jle
pop
daa
inc
sti
bound
loopne
xchg
jecxz
jno
mov
sbb
add
test
fdiv
sbb
jns
mov
dec
dec
nop
push
xor
xor
neg
fcmovnbe
mov
movs
call
push
mov
and
inc
idiv
xchg
add
add
adc
lds
mov
cmps
jmp
add
call
lods
dec
jecxz
jo
lods
sar
scas
mov
and
fld
jo
mov
add
pop
pop
inc
xor
pop
test
es
fsub
add
aaa
into
clc
rol
mov
push
imul
add
xchg
adc
cmp
rol
xchg
inc
mov
ins
jne
mov
fmul
mov
shl
push
pop
or
push
mov
aaa
dec
adc
and
jmp
imul
add
inc
adc
inc
add
adc
push
idiv
jmp
xchg
lods
xor
mov
outs
push
and
outs
fild
cmp
nop
jmp
cmp
je
test
je
mov
pop
inc
inc
mov
(bad)
jge
scas
add
adc
iretw
das
pusha
or
mov
int3
pusha
sbb
jne
inc
mov
test
xchg
xor
sar
or
pop
mov
add
or
push
xor
push
js
jbe
sbb
cmp
sbb
call
cmp
inc
or
loopne
or
push
loop
jmp
or
inc
sbb
and
push
loope
cmp
pop
jns
ret
in
xchg
push
or
jbe
adc
push
jo
dec
push
repnz
sbb
test
add
ds
mov
push
push
stos
cmp
adc
clc
std
test
inc
add
inc
inc
ins
neg
add
js
int3
sub
inc
imul
(bad)
(bad)
(bad)
rol
shl
or
push
nop
push
test
inc
push
(bad)
or
rol
scas
xchg
in
push
jp
or
adc
xchg
add
sbb
cli
cmp
je
mov
or
xor
add
(bad)
xchg
add
or
jg
shl
sbb
push
push
mov
add
mov
rol
sbb
test
bound
push
or
sub
mov
cmp
je
mov
mov
sbb
push
mov
sub
lea
in
add
cmp
je
mov
cmp
push
push
cmp
out
add
in
pop
dec
setne
jbe
inc
neg
sbb
push
push
je
loope
int3
shr
or
cmp
cmp
pusha
pop
xor
push
or
test
test
cmp
cmp
call
popa
stos
fmul
shl
push
sub
mov
add
sbb
mov
or
mov
sbb
icebp
loop
ins
sbb
or
mov
sbb
aaa
adc
cmps
cmp
outs
nop
dec
and
or
sbb
arpl
and
fs
adc
cdq
test
cmps
leave
add
cmps
cmps
clc
rcr
mov
cs
xor
sub
mov
dec
mov
add
adc
out
and
es
daa
mov
and
das
cmps
enter
int
pusha
lea
or
or
xor
shr
jno
cdq
loopne
loopne
aad
ret
pushf
mov
sahf
fidiv
sub
cmp
js
call
dec
mov
cld
inc
inc
push
test
repz
xor
cmp
pop
imul
clc
mov
push
or
lock
mov
inc
and
gs
sub
inc
and
out
push
add
clc
and
and
pop
cmp
xor
xchg
and
and
jae
and
ins
mov
shr
sbb
or
ss
and
lods
push
(bad)
push
aaa
fstp
ins
je
adc
or
add
push
sbb
and
outs
push
scas
pushf
test
fistp
cwde
cmp
mov
pop
xor
ret
xor
jge
sbb
and
test
fild
iret
cmps
or
jno
push
scas
dec
and
movs
jg
mov
lahf
daa
mov
sub
push
sbb
cmps
nop
xor
mov
mov
adc
cmp
inc
mov
xor
pusha
sbb
sbb
ret
bound
jl
ja
inc
repnz
dec
jne
jmp
mov
loop
pop
pop
lds
js
lds
jmp
xchg
shl
mov
cmp
jne
or
stos
jno
cmp
xor
fistp
push
jb
jge
dec
or
addr16
popf
xlat
lock
mov
xchg
outs
add
pop
das
push
push
inc
cld
call
adc
gs
sub
inc
xor
sbb
cld
or
loope
xor
cmp
mov
mov
mov
mov
into
js
dec
adc
outs
ja
mov
inc
mov
dec
xor
push
dec
int3
or
adc
add
ja
pop
add
mov
les
mov
les
mov
(bad)
loope
inc
sub
mov
in
mov
cmps
xchg
adc
out
pusha
add
fstp
ss
sahf
push
int
and
mov
lods
xchg
adc
pop
dec
xor
ins
sbb
test
sahf
mov
cli
adc
ja
lea
xor
jnp
jns
push
cmp
and
mov
dec
push
xor
jl
push
call
mov
dec
dec
push
aad
jo
cmp
jge
jb
xchg
jb
cmp
pop
je
inc
dec
mov
or
rcl
dec
inc
es
sbb
rcr
jno
fcomip
push
retf
jno
adc
sbb
inc
sub
xchg
jmp
sbb
add
loopne
fmul
sbb
movs
xor
jmp
ror
xchg
sbb
inc
mov
adc
jmp
mov
or
loopne
pop
mov
je
mov
adc
sete
inc
sbb
sub
cmp
dec
ror
inc
mov
pop
push
adc
dec
sub
adc
popa
inc
sbb
push
adc
add
out
popf
lea
retf
in
or
jo
js
loop
sub
mov
add
cmp
out
ja
pop
test
jl
cld
adc
inc
or
lea
sti
jb
push
pusha
pcmpgtd
push
adc
pop
dec
add
idiv
add
rol
loop
bt
jb
add
jae
mov
or
mov
jne
push
stos
into
mov
xchg
mov
or
add
xor
rcl
push
jne
cmp
add
xor
mov
or
test
mov
dec
jae
xor
and
push
or
sbb
jnp
sbb
jne
into
pop
add
idiv
dec
dec
loopne
push
xchg
mov
pop
icebp
xor
sbb
jmp
(bad)
cdq
stos
sbb
pop
push
sub
pop
pop
in
sub
or
sub
jo
mov
jo
mov
in
into
mov
and
mov
(bad)
xchg
mov
mov
aaa
mov
sbb
repnz
adc
arpl
jb
(bad)
(bad)
jnp
inc
popf
jae
and
inc
mov
adc
bound
in
daa
cld
dec
pusha
mov
test
jbe
out
jo
sub
loope
add
ss
shl
mov
cmp
mov
test
sbb
int3
imul
pop
push
mov
movhps
pop
mov
mov
add
sbb
push
and
sbb
call
push
lea
in
push
loope
adc
aad
mov
or
inc
sti
mov
mov
stos
inc
sti
shl
inc
jmp
mov
in
lods
jmp
in
or
or
push
arpl
(bad)
jnp
rol
jp
push
ins
add
or
call
mov
dec
and
xchg
adc
stos
push
inc
std
frstor
mov
not
stc
xchg
and
and
nop
stos
adc
into
mov
daa
or
fcom
outs
out
ins
imul
scas
jmp
sub
and
scas
jae
mov
mov
inc
adc
inc
inc
mov
add
xor
stos
mov
push
inc
imul
loopne
popa
dec
jmp
or
loopne
or
(bad)
mov
jecxz
popa
lock
or
pop
maxps
xor
adc
lea
nop
inc
sbb
int3
and
adc
ret
shl
xor
aas
pop
cmps
clc
cmp
fimul
shl
pop
div
sbb
stos
cmps
loop
push
idiv
adc
retf
inc
loopne
fbstp
lods
push
mov
loopne
(bad)
or
lahf
je
les
mov
cld
xchg
xchg
sbb
add
mov
push
adc
pop
or
and
jo
push
lock
pop
or
data16
(bad)
push
loopne
js
pop
xor
add
mov
fwait
sub
stos
sbb
inc
cmp
dec
shl
and
rcr
push
push
fisub
scas
jno
inc
push
and
inc
fs
pusha
sbb
inc
dec
adc
test
mov
add
mov
adc
lock
push
je
test
adc
push
ficom
cld
iret
ret
jle
add
push
jmp
mov
cmp
adc
das
jge
clc
loopne
push
push
(bad)
xor
cmp
jle
xchg
clc
lds
cmp
mov
push
std
add
push
push
push
push
imul
enter
outs
jo
inc
pop
sub
push
outs
(bad)
jl
push
pcmpgtb
mov
or
jg
dec
hlt
jbe
hlt
daa
cmp
sti
adc
cmp
xor
push
outs
and
sbb
inc
add
or
aam
cmps
jecxz
add
(bad)
fiadd
cmp
push
cmps
xchg
sbb
or
inc
rcl
jl
pop
std
mov
sbb
add
cmp
add
cmp
mov
aas
jmp
(bad)
sbb
cwde
mov
call
not
cmp
jbe
push
mov
pop
push
add
rcl
fsubp
daa
jle
add
(bad)
xchg
hlt
cmp
add
clc
xor
add
aam
into
inc
adc
call
sub
cs
mov
xchg
sahf
es
mov
ins
rcr
mov
mov
and
push
and
sub
aam
add
and
rsqrtps
mov
dec
lock
div
stc
mov
sahf
mov
jmp
fisttp
pusha
nop
push
fmul
push
add
inc
mov
add
jge
mov
adc
jo
dec
cs
es
push
xor
jne
neg
test
push
or
sub
xchg
push
or
add
call
pop
dec
cwde
xchg
jbe
inc
cwde
pop
mov
xchg
add
in
push
mov
int
test
pop
pusha
ds
jle
ins
fstp
push
and
dec
mov
fadd
add
fdiv
(bad)
mov
pop
push
xchg
lahf
jge
cmp
popf
push
push
neg
enter
pop
(bad)
mov
es
mov
lods
into
xor
idiv
les
jle
add
pusha
stc
push
jmp
fcmovnu
push
mov
push
stos
push
nop
ret
jbe
push
js
pop
div
sub
push
dec
push
hlt
leave
push
into
fs
fidiv
outs
cmp
push
in
rcr
push
ins
sti
push
(bad)
push
fsub
outs
push
aam
cs
push
mov
cmp
mov
fist
adc
sar
dec
jbe
push
jo
cmc
mov
cmp
sti
(bad)
jo
inc
int
lods
icebp
add
das
out
inc
cli
mov
gs
popa
addr16
scas
pop
mov
adc
push
(bad)
mov
xor
jb
dec
xchg
or
gs
je
dec
gs
mov
or
add
pop
add
gs
data16
(bad)
ja
or
sbb
ja
gs
pushf
adc
adc
jns
lds
or
sbb
push
mov
pop
push
shr
shl
and
cld
dec
sub
nop
inc
sbb
cli
out
je
cmp
stos
ret
adc
js
xchg
repnz
cmps
iret
pop
ret
mov
outs
push
xchg
add
pop
xchg
ins
sbb
out
jne
bound
inc
jne
outs
cmp
and
mov
out
adc
cmp
push
add
pusha
sbb
mov
ret
and
push
mov
add
movs
xchg
retf
and
jge
cs
je
cmp
scas
push
jns
inc
xchg
add
add
loopne
clc
add
add
mov
pop
fmul
arpl
loope
arpl
test
add
loope
sbb
add
jg
jbe
mov
xor
push
sbb
add
cmp
test
ja
test
mov
mov
xor
sub
sti
into
(bad)
ss
or
sub
imul
ret
push
inc
test
pop
call
add
dec
in
inc
xor
dec
in
call
jno
into
mov
icebp
js
cvtdq2ps
mov
sub
jecxz
or
ret
adc
movs
or
cld
clc
ficom
out
mov
and
adc
fiadd
ror
push
cmp
jne
xor
sub
adc
cld
es
shr
int3
hlt
and
add
shl
sub
pop
fidivr
mov
sbb
scas
or
scas
js
loopne
sub
in
rol
sti
mov
inc
cwde
adc
nop
(bad)
or
retf
inc
pushf
mov
push
aad
jge
movs
test
push
lods
adc
shl
xor
cs
int
mov
adc
pushf
(bad)
lods
ins
dec
inc
int3
adc
ds
push
fdivr
adc
jge
fcom
loopne
xchg
mov
add
inc
stos
ret
inc
add
and
xchg
adc
or
(bad)
por
push
loope
dec
add
mov
xchg
in
sbb
push
in
adc
inc
in
(bad)
dec
dec
pop
jg
fadd
out
push
and
fisubr
add
inc
add
outs
dec
daa
dec
nop
idiv
aaa
xor
push
push
inc
add
outs
add
ins
aaa
mov
call
je
int
bound
push
pop
es
or
fdivr
dec
add
ds
push
cwde
xor
inc
xchg
mov
imul
push
push
aaa
imul
rol
push
dec
arpl
das
data16
aaa
sahf
sub
sbb
push
push
add
iret
cmp
add
data16
scas
add
mov
xor
push
or
or
pusha
cli
in
inc
push
pusha
or
lods
out
adc
adc
es
retf
push
inc
xor
call
and
add
pop
mov
mov
js
pop
mov
xchg
sbb
mov
and
adc
mov
std
xor
xchg
or
sbb
add
cmc
adc
hlt
jge
push
pop
lock
push
cmp
push
in
adc
fld
cmp
sbb
cmp
loopne
xor
fadd
(bad)
or
xchg
fs
dec
jle
lahf
dec
push
pusha
cmp
loopne
stc
jae
je
adc
lock
jne
mov
jl
or
sbb
in
fisttp
ret
or
push
cmp
adc
mov
rcl
sahf
mov
pop
mov
xchg
push
sbb
xchg
sub
shr
movs
mov
fiadd
cmp
jle
sbb
add
push
movs
add
sti
or
test
jnp
sbb
hlt
cmp
jg
add
pusha
pop
aam
or
cli
adc
clc
xor
inc
lock
adc
push
sub
or
xor
xor
fwait
mov
mov
adc
lods
xchg
inc
push
mov
bound
test
or
mov
jle
or
enter
in
xor
mov
and
and
jge
and
xchg
or
cmps
pop
sbb
mov
ror
push
push
rol
mov
call
ret
inc
sbb
fmul
scas
ror
nop
jecxz
shr
shl
xchg
int3
adc
jle
push
jmp
fadd
data16
shl
adc
sbb
add
add
es
sub
lods
add
rcr
inc
mov
in
xchg
sub
mov
xor
test
pop
enter
stos
xchg
add
push
test
add
and
jmp
cmps
and
pop
push
jmp
cmp
pop
ss
std
sbb
and
scas
ror
iret
push
sar
pushf
int
les
pusha
mov
and
xlat
adc
add
aam
mov
add
dec
inc
cwde
pop
or
push
hlt
and
cmps
cli
xchg
mov
jnp
clc
adc
outs
mov
shl
aaa
in
adc
mov
mov
mov
adc
pop
lock
jno
adc
ficomp
add
add
xlat
dec
mov
shr
(bad)
fstp
in
and
adc
push
aam
xor
sub
pushf
sbb
out
mov
mov
je
mov
jmp
push
add
sar
cs
or
(bad)
mov
add
fsub
mov
or
adc
jae
mov
sbb
inc
pusha
push
stc
adc
lea
rcl
xchg
pop
or
push
pushf
sar
cmc
mov
cmp
jne
pop
cmp
and
pushf
mov
mov
or
sbb
data16
in
mov
jmp
call
dec
cmp
aam
(bad)
hlt
loop
pop
loop
jne
xor
or
add
push
or
cmps
(bad)
pushf
or
pop
pop
add
mov
mov
mov
shl
xlat
dec
cmp
add
add
aaa
mov
pop
jge
and
add
rol
add
or
add
inc
test
dec
cs
xor
add
enter
out
dec
ret
sbb
lea
imul
mov
dec
cmp
jne
push
push
pop
mov
mov
es
add
add
dec
push
add
out
sti
xor
(bad)
mov
ror
shl
stos
add
adc
xchg
cmp
inc
pop
jo
fcom
int3
dec
ins
xor
das
fstp
xor
sub
sbb
movs
push
add
cli
setge
test
(bad)
loopne
out
fistp
cmp
(bad)
in
push
cmps
les
push
out
xchg
rcr
ds
idiv
and
adc
sub
cmps
mov
and
or
cld
retf
stos
loopne
cmp
pop
pop
xchg
fsubr
adc
rol
(bad)
mov
cmps
adc
mov
jmp
arpl
call
test
movs
xor
fs
or
or
push
lds
ret
es
mov
(bad)
pop
mov
and
out
mov
cmp
xchg
lahf
mov
sahf
xlat
push
ror
sbb
push
inc
out
mov
sub
push
(bad)
sub
fcom
sub
(bad)
push
movs
ffree
enter
mov
ss
push
jmp
adc
jl
pop
leave
pop
xchg
(bad)
and
push
(bad)
mov
mov
cs
push
cld
enter
xchg
(bad)
push
and
adc
mov
and
jle
dec
inc
dec
gs
jo
imul
sti
(bad)
jg
or
popa
jb
outs
je
outs
sub
ficom
call
jae
je
outs
outs
cmps
stos
push
stos
push
in
aaa
sbb
out
(bad)
in
(bad)
jmp
int
mov
xor
aam
mov
jae
(bad)
jnp
inc
leave
mov
js
arpl
out
movs
shl
add
nop
pushf
adc
adc
stos
jne
sub
pusha
xchg
fnstenv
push
out
fs
adc
pop
pop
jo
xor
rcr
int
adc
pop
inc
pop
adc
jae
add
push
inc
inc
mov
cmp
stos
push
or
xchg
push
enter
push
or
popa
mov
mov
add
fcomp
adc
push
cmc
test
jb
mov
mov
pop
push
(bad)
aad
test
xchg
and
sbb
loopne
popf
fiadd
and
ret
sub
sar
in
imul
jbe
add
jl
xor
push
sub
or
push
add
jnp
imul
clc
sar
cmp
lods
pusha
add
push
add
push
call
cmp
lods
sbb
imul
or
xchg
mov
xchg
or
sbb
push
imul
pop
push
mov
outs
and
hlt
mov
or
pop
movs
loop
test
adc
sar
push
test
add
pop
inc
js
std
nop
dec
xor
xchg
push
add
and
inc
scas
sahf
hlt
inc
adc
or
adc
out
mov
ins
and
ja
add
mov
adc
mov
mov
and
or
xor
dec
aaa
push
adc
sub
jno
dec
push
mov
push
lock
jb
outs
inc
inc
inc
jmp
mov
adc
push
shr
pop
ins
sub
or
call
ret
adc
add
jne
and
inc
clc
add
xor
pusha
inc
jnp
imul
sbb
push
rol
push
add
clc
pusha
xor
fcomp
push
dec
fwait
adc
mov
sbb
sti
push
inc
sbb
jnp
addr16
sbb
push
js
add
(bad)
lahf
xchg
cmc
adc
fadd
jl
xchg
push
and
sub
and
out
outs
loopne
call
adc
ret
adc
mov
cmp
xchg
adc
loope
or
mov
jg
(bad)
shr
or
test
arpl
in
retf
add
jmp
xor
sbb
sbb
cmp
or
dec
jno
ret
not
add
add
or
inc
push
push
sbb
push
cmp
iret
jae
push
or
push
push
push
fs
push
fadd
stos
mov
xchg
dec
cmps
push
(bad)
adc
jne
push
stc
push
add
push
iret
push
movhps
xchg
(bad)
iret
pop
xchg
rcr
sub
push
rol
and
and
inc
inc
ins
outs
jae
push
jne
jb
inc
jne
arpl
loopne
dec
push
push
ds
dec
outs
jo
je
jge
inc
push
sub
or
test
and
mov
sti
loope
sysret
sbb
mov
pop
idiv
adc
je
adc
adc
xchg
push
ja
or
lock
ret
mov
push
mov
or
outs
movs
hlt
xor
cmp
sub
push
daa
test
cli
push
fadd
lock
mov
xor
jge
std
jge
icebp
pop
pusha
dec
lea
jl
in
loopne
out
push
ds
inc
push
pop
hlt
push
sub
xor
pusha
cmp
pop
jbe
les
ins
clc
adc
ins
adc
cmp
xor
and
jnp
pop
je
push
unpckhps
and
bound
jnp
cmp
and
and
je
adc
inc
add
cmp
int3
cmp
add
adc
ins
add
mov
cmp
int3
mov
xchg
xchg
or
jns
popf
sub
test
idiv
xor
push
repz
add
mov
inc
(bad)
sbb
mov
cld
pop
jno
outs
mov
aad
sbb
or
pop
and
fild
das
cmp
pop
xor
jbe
(bad)
dec
js
in
add
add
movs
or
outs
ins
jo
ret
scas
jecxz
inc
outs
div
push
sub
inc
or
inc
arpl
arpl
pop
aaa
mov
shl
fild
xchg
or
cmp
setb
int
push
adc
loopne
fadd
mov
add
rcl
push
cmps
lock
cwde
mov
lock
test
sar
jg
or
mov
cmp
or
adc
push
sub
outs
inc
inc
sbb
add
repnz
in
adc
push
add
(bad)
loop
enter
loop
inc
lock
or
(bad)
jnp
cwde
cld
hlt
aam
ret
add
jne
sub
fimul
cmp
or
sbb
adc
int3
test
mov
retf
mov
jmp
cli
add
pop
sbb
pop
maskmovq
not
mov
popa
fmul
in
stos
add
aam
pop
movs
je
cld
in
sbb
dec
icebp
mov
xor
movs
lahf
inc
into
adc
les
adc
(bad)
jb
sub
mov
test
sub
jmp
push
cdq
or
dec
hlt
lea
mov
jmp
adc
enter
push
loopne
int3
mov
mov
mov
sbb
sbb
loope
dec
out
scas
push
cmp
into
sbb
enter
dec
pop
jo
jmp
mov
pop
in
push
out
sbb
(bad)
aaa
mov
push
fld
fsubr
rol
rol
add
mov
repnz
fild
inc
add
inc
cmp
jle
add
jl
adc
xor
cld
mov
dec
jge
movs
sub
mov
xchg
mov
sub
add
shr
and
cmp
scas
test
add
fldcw
sub
jo
mov
push
jo
or
xor
jle
xchg
and
add
daa
mov
dec
sbb
sbb
call
loopne
mov
xchg
mov
sub
stos
xchg
jne
dec
out
and
push
je
adc
sub
pop
and
ins
inc
mov
mov
inc
stos
out
push
movs
dec
mov
call
ss
int3
mov
in
adc
retf
xor
push
pop
mov
adc
sbb
out
loopne
scas
and
pushf
adc
out
adc
(bad)
loop
out
out
(bad)
int3
mov
mov
add
push
push
imul
add
int3
icebp
pop
jnp
jg
pop
xchg
mov
ficom
sub
rcl
push
add
sub
pop
lahf
in
jae
jg
push
or
push
sar
push
adc
das
mov
or
jl
add
xchg
popf
xor
inc
fisttp
inc
add
outs
(bad)
std
aad
dec
jne
cmovg
out
int3
int
ret
loop
pop
and
sub
adc
or
fs
pop
ret
push
cmps
jo
sbb
xchg
shl
sub
cmc
inc
nop
add
leave
add
add
add
inc
ret
fdiv
sar
mov
add
sub
push
mov
sti
clc
not
and
or
cmp
dec
jne
xor
mov
push
xchg
loopne
mov
les
push
sbb
adc
aaa
add
rcr
shr
cld
inc
aaa
pop
adc
inc
inc
bound
add
mov
ds
mov
popa
loope
in
aas
xor
cmp
sub
push
xor
jae
add
pop
mov
test
push
jmp
jmp
das
cs
add
mov
fistp
push
inc
jle
pop
pop
fimul
shl
add
call
(bad)
sbb
popaw
jne
je
scas
adc
imul
out
jae
add
fmul
mov
sub
dec
mov
add
adc
pop
mov
popa
mov
push
sbb
jb
or
dec
test
mov
or
ins
bound
imul
xor
push
jne
arpl
fdivr
xor
fisub
mov
mov
ja
xor
ret
outs
pop
mov
fwait
scas
aad
or
push
aam
ucomiss
add
and
cmp
and
pop
das
xchg
sbb
sbb
sbb
add
sub
push
push
cs
shl
xor
fsubp
push
fs
add
daa
les
scas
mov
push
and
cmp
inc
add
(bad)
dec
adc
xor
adc
sub
dec
mov
push
pop
imul
data16
push
(bad)
xchg
mov
push
push
or
or
or
je
adc
push
adc
cmp
pop
ret
nop
clc
(bad)
in
mov
jne
push
xchg
and
test
stc
mov
fsubr
mov
icebp
xor
dec
mov
and
pop
and
ret
mov
dec
fdivr
jo
mov
or
adc
add
sub
mov
inc
ins
jg
hlt
mov
ins
es
jne
dec
add
clc
jmp
mov
lods
push
dec
push
and
nop
mov
dec
in
xor
loopne
dec
mov
xor
dec
fdivr
sub
mov
fsub
sbb
imul
and
fistp
call
fwait
sbb
pop
rcl
pop
icebp
mov
sbb
sbb
and
jns
xor
add
mov
inc
int
push
adc
xor
adc
xor
ja
xchg
jne
jg
mov
aaa
shl
jg
in
fidiv
or
and
mov
shl
daa
dec
push
add
dec
mov
inc
test
lods
bound
sbb
xor
xor
leave
xchg
nop
(bad)
test
xlat
iret
add
mov
mov
pop
xor
xor
call
cmps
shr
in
cmp
(bad)
rcr
in
in
and
cmps
icebp
mov
clc
fild
movs
inc
and
xchg
ins
js
sub
loopne
pusha
push
ins
jmp
mov
push
sbb
fsub
push
and
std
test
sbb
aam
mov
adc
push
(bad)
jg
jmp
pusha
add
add
sar
call
jo
out
std
inc
add
outs
sbb
inc
es
inc
in
call
jb
and
je
and
shrd
mov
shl
xchg
scas
adc
je
and
jo
sbb
cmp
push
add
and
or
repnz
xor
add
in
repnz
mov
pop
movs
cs
lea
adc
add
add
xlat
add
mov
rcr
pop
xor
cmp
sub
dec
xlat
sub
mov
ror
pop
xchg
jle
and
imul
jne
mov
pop
jbe
push
lds
bound
sub
mov
mov
cmp
and
push
in
sub
xlat
xchg
les
icebp
jecxz
outs
lahf
mov
adc
pop
ret
daa
inc
sub
jne
push
push
cmp
sub
dec
sub
sahf
or
dec
cs
pushf
fsubr
out
sbb
addr16
shl
mov
or
das
push
popa
ds
out
data16
fwait
push
jo
cmps
jge
add
xor
shl
sbb
mov
mov
in
in
das
lock
and
ss
push
lock
inc
ror
in
push
call
es
push
jb
rol
daa
or
and
daa
jnp
cwde
in
shr
dec
jno
cwde
test
ja
add
call
add
into
push
mov
pop
inc
mov
push
enter
push
imul
jne
clc
cmp
es
outs
add
mov
addr16
jae
std
pop
mov
push
push
je
je
push
sbb
pop
inc
inc
call
push
outs
arpl
cs
ins
inc
imul
or
sti
iret
ror
push
jb
outs
sub
das
aam
inc
cs
outs
addr16
aad
rol
outs
jb
test
push
mov
cmp
push
ss
fdivr
sar
cld
inc
call
mov
push
repnz
pushf
scas
push
push
dec
ins
push
jl
adc
ss
push
(bad)
nop
sbb
jg
inc
lea
into
lods
das
push
inc
rcl
loopne
ja
xchg
add
lds
inc
cld
repnz
ins
add
(bad)
ret
adc
xchg
pop
ror
jg
shl
mov
sbb
mov
jbe
jae
rcl
call
test
cmp
subps
ins
imul
ds
xor
aas
jecxz
pop
inc
mov
rol
idiv
sbb
inc
inc
inc
je
push
imul
sbb
mov
sbb
hlt
cmp
cmp
fisub
xchg
inc
add
int3
popa
lock
lock
mov
shl
ja
pop
dec
hlt
rcl
or
addr16
dec
jae
mov
(bad)
or
out
xlat
adc
pop
ror
xchg
arpl
clc
fiadd
arpl
test
xchg
call
pop
sub
or
(bad)
bound
popf
inc
mov
pop
pop
jmp
xchg
add
xchg
xor
sbb
or
dec
(bad)
in
aaa
(bad)
sbb
js
gs
bound
cs
or
jne
dec
call
call
hlt
fistp
jne
dec
cli
popa
dec
cdq
xchg
jo
or
out
sub
push
xchg
sbb
js
mov
loopne
push
jp
addr16
out
inc
mov
jbe
inc
mov
pop
pop
adc
push
pop
in
dec
scas
(bad)
clc
and
loope
jne
ror
mov
hlt
std
rcl
scas
fbld
into
push
test
or
dec
xchg
pop
adc
iret
and
sbb
arpl
retf
sbb
fdivr
pop
adc
enter
cmp
into
jmp
sub
push
sbb
outs
sar
lods
push
inc
(bad)
fwait
adc
call
gs
dec
and
xlat
and
xor
dec
hlt
inc
dec
imul
mov
aam
push
cmp
fstp
inc
sbb
pop
inc
ja
or
sub
ds
(bad)
stos
xor
inc
sub
cmp
pop
movs
in
xor
inc
daa
cs
sub
gs
jae
imul
jbe
aam
push
shr
and
cs
add
shl
dec
xchg
pop
dec
sub
and
cmp
push
sbb
dec
sub
add
adc
mov
ins
enter
or
add
xor
inc
pop
dec
das
iret
xor
pop
jle
push
jo
inc
inc
fdivr
loopne
xor
aaa
clc
lds
out
pop
dec
xor
out
mov
je
lods
rcl
inc
push
dec
push
out
dec
xor
sbb
mov
ret
add
add
fs
popa
and
in
adc
fs
shl
fs
push
mov
fs
ret
xchg
xchg
xchg
pop
or
retf
xchg
xchg
enter
cmp
xchg
xchg
clc
sbb
adc
mov
xchg
add
inc
inc
pushf
mov
add
dec
fisttp
in
dec
add
lds
sub
push
mov
test
cs
push
cmps
(bad)
push
mul
sbb
call
ins
dec
ret
pop
adc
jl
iret
fadd
jnp
scas
push
cmps
add
aad
inc
cmps
add
clc
fmul
inc
cs
or
js
push
push
loop
je
pop
inc
sub
add
fs
enter
xor
loopne
pop
out
jmp
ret
jb
imul
mov
adc
dec
clc
adc
jne
sbb
pop
adc
fbstp
pop
std
fild
add
or
mov
sbb
addr16
cmp
sbb
push
push
or
jge
mov
cmp
movs
inc
call
mov
or
push
pop
mov
jmp
xor
pop
add
sbb
push
or
xchg
(bad)
aas
add
dec
mov
or
pop
xchg
adc
cmp
aas
(bad)
bound
shl
je
push
cld
push
push
fcomp
xor
sub
(bad)
cmp
(bad)
loopne
mov
js
jle
add
hlt
or
push
out
add
mov
cwde
(bad)
cmp
mov
jnp
xchg
push
int
(bad)
mov
out
jle
ds
stc
push
push
pop
xchg
jo
dec
mov
ret
cmps
dec
cmp
pop
stc
dec
ror
mov
loopne
imul
int3
ret
and
add
les
femms
(bad)
jo
and
inc
std
push
fsub
inc
popa
clc
fidiv
push
mov
xchg
clc
push
mov
xchg
push
dec
cwde
nop
or
das
pusha
rcl
and
jecxz
xchg
mov
sub
pop
mov
in
push
add
gs
fldenv
xchg
fiadd
sub
xchg
movs
stc
sub
fs
jae
iret
idiv
jno
outs
jb
adc
xor
das
mov
pop
ss
push
(bad)
scas
rcl
jns
and
ins
push
gs
jle
and
pop
inc
dec
inc
jge
div
(bad)
and
push
adc
ins
inc
dec
stos
cmps
dec
ins
addr16
or
xchg
gs
sbb
ret
aaa
inc
jo
push
nop
pop
adc
push
push
mov
out
arpl
push
xchg
out
leave
push
push
or
inc
rcl
mov
adc
inc
jmp
sahf
aaa
mov
cmp
pop
cmc
mov
or
jne
outs
ins
retf
and
pop
ins
(bad)
mov
(bad)
test
mov
mov
mov
lea
movs
push
inc
xchg
loope
jno
popf
push
sti
ja
std
mov
add
cmp
ds
mov
push
pusha
sahf
in
mov
mov
sbb
data16
jmp
mov
imul
bswap
mov
mov
pop
ins
mov
push
jge
mov
js
mov
push
call
xor
or
inc
mov
or
jb
adc
ret
icebp
or
inc
mov
int3
in
sub
sbb
gs
inc
(bad)
out
xchg
inc
jb
push
xchg
shl
fst
dec
mov
add
adc
and
lods
push
xchg
xor
idiv
cmp
movhps
jae
cmc
and
and
mov
inc
cmp
sub
sbb
rol
xchg
call
sbb
ror
loop
lods
push
in
dec
sbb
push
popf
push
rol
pop
add
ror
(bad)
dec
or
into
call
sbb
lods
dec
icebp
rol
sbb
and
xchg
or
add
mov
and
test
dec
ret
cmps
sti
sbb
mov
inc
aas
push
test
imul
nop
push
in
xchg
sbb
jmp
xchg
push
test
mov
sbb
dec
dec
hlt
rol
mov
pushf
jmp
mov
inc
jne
xchg
gs
in
mov
mov
sub
inc
add
push
jmp
or
loope
cs
sbb
mov
inc
(bad)
pusha
sbb
adc
mov
mov
cwde
pop
and
test
pop
pop
fs
retf
cdq
or
cs
sub
or
push
sub
push
js
pop
pop
push
test
jle
cdq
pusha
and
sbb
loop
dec
or
dec
inc
mov
dec
mov
cmps
cmp
aas
cs
(bad)
and
jmp
pop
imul
lds
or
bound
(bad)
pop
ins
mov
xor
push
dec
enter
dec
or
jb
retf
dec
leave
xor
cmp
je
mov
or
pop
rcr
in
mov
xchg
inc
jne
outs
or
mov
ss
ror
jmp
les
daa
fcmovnbe
and
sbb
mov
inc
mov
add
fld
xchg
jae
adc
sti
adc
cmp
adc
fucomip
mov
inc
gs
pop
pusha
jnp
bound
xor
jp
shl
ret
clc
cld
stos
pusha
(bad)
push
sar
pusha
outs
inc
pop
push
cmp
push
stos
cdq
sbb
mov
fdiv
cmp
xchg
and
aas
lods
pop
xchg
retf
lahf
ret
aas
or
pushf
adc
pop
push
lods
cs
test
pop
inc
js
(bad)
out
push
add
pop
dec
sbb
pop
pushf
pop
js
inc
xchg
imul
inc
inc
pusha
outs
lock
repz
pop
inc
fst
popa
inc
repz
js
or
pop
inc
dec
add
sub
ins
cwde
mov
(bad)
and
daa
sbb
inc
pushf
sbb
dec
shl
dec
add
add
xchg
fs
dec
push
loope
or
pop
clc
ds
inc
push
test
mov
sub
pop
push
add
sub
out
lock
push
hlt
pop
dec
jmp
dec
push
xchg
add
xlat
pop
ds
pop
add
lods
or
retf
cmp
pop
and
lock
mov
mov
pop
jge
mov
into
mov
cdq
pop
mov
xor
pop
mov
mov
and
inc
push
mov
pop
mov
ror
sahf
pop
mov
cmp
mov
mov
hlt
sbb
cmp
mov
mov
imul
fdivr
mov
mov
fdiv
mov
(bad)
dec
mov
jg
add
ins
outs
outs
outs
inc
ins
sub
lods
scas
std
jge
inc
ss
bound
cs
or
push
js
adc
pop
or
cld
mov
call
add
out
cmp
iret
pop
push
mov
adc
add
aad
inc
cwde
or
test
ficom
xchg
rcr
out
add
pop
imul
shl
test
add
cld
sub
bound
inc
inc
ret
adc
ins
dec
aam
test
pushf
jnp
das
sbb
popa
fisttp
je
popa
ins
add
lahf
or
and
sub
sbb
add
dec
dec
jae
xlat
fdivr
int3
mov
pop
push
mov
and
dec
arpl
jle
cs
add
push
add
inc
cmp
pop
sbb
dec
imul
mov
lock
sub
jno
test
call
cmps
cmp
and
cs
and
cli
js
rsqrtps
sbb
add
mov
fsub
sub
xchg
sub
push
add
cs
cwde
das
inc
add
mov
mov
loopne
xor
mov
or
push
inc
add
(bad)
out
sbb
ror
jmp
dec
jns
xor
movs
mov
pusha
mov
test
add
push
add
dec
dec
or
test
sub
push
gs
retf
enter
cs
adc
js
fsub
daa
pop
sub
jecxz
das
int
int3
inc
sub
bound
pop
jmp
call
popf
imul
adc
(bad)
daa
or
fs
mov
jb
(bad)
jo
fs
mov
add
fs
dec
jo
mov
xchg
inc
cdq
cmp
cmp
fnstcw
loopne
cmps
and
sub
add
ins
add
inc
(bad)
cmp
sub
xchg
int
xchg
ret
add
jmp
scas
xor
push
dec
jmp
mov
mov
jecxz
or
dec
push
mov
movs
je
inc
js
push
sbb
cmp
lock
jmp
add
sub
add
jae
(bad)
mov
pop
ds
repz
(bad)
fdivr
pop
xchg
ret
scas
xor
and
(bad)
out
imul
scas
shl
inc
(bad)
out
inc
push
xor
and
out
dec
jne
pop
dec
sar
rcl
mov
mov
push
cmp
clc
inc
xchg
loope
icebp
pop
mov
rol
jae
imul
imul
mov
push
push
dec
add
ret
iret
cld
inc
or
rol
add
push
xchg
fs
mov
dec
bound
arpl
cmp
mov
imul
pop
in
fisttp
mov
movs
add
cwde
mov
push
popf
popa
mov
add
ja
dec
popa
bound
jb
lods
mov
cmp
mov
iret
or
jo
cmps
xor
mov
pop
jle
out
push
iret
add
add
das
pushf
mov
sub
loopne
into
mov
iret
pop
jo
imul
push
pop
sbb
cmps
iret
lock
pusha
out
add
push
push
xchg
mov
femms
iret
or
jmp
mov
adc
add
push
daa
and
jo
xchg
mov
or
sub
jmp
inc
cmp
cmp
jno
ins
clc
or
push
int
js
pop
pop
ret
mov
repz
mov
cmp
fs
ret
les
or
or
(bad)
rol
cmp
popf
fwait
pushf
add
and
bound
jns
pushf
lds
aas
jmp
inc
pop
add
add
sbb
or
ror
cdq
xchg
pop
mov
cmp
test
mov
jecxz
je
mov
fs
dec
rsqrtps
int3
adc
aas
xchg
test
ror
(bad)
in
pop
and
adc
les
sbb
add
adc
add
and
inc
mov
mov
and
rcl
adc
and
call
jb
add
inc
leave
push
sbb
loopne
sbb
inc
add
inc
test
mov
xchg
pop
dec
imul
add
add
in
or
sbb
mov
arpl
es
and
loopne
pop
daa
inc
cmp
jo
outs
sub
sub
stos
add
sub
sub
and
das
in
add
xor
or
xor
add
add
xor
nop
add
add
push
or
cmp
mov
push
xor
add
data16
lods
or
and
xchg
in
pusha
test
(bad)
in
adc
xor
pop
jp
mov
in
out
push
and
and
ja
mov
and
fisttp
add
popf
push
scas
popf
add
or
cld
mov
mov
add
mov
or
add
or
push
jecxz
out
jmp
cmp
xor
or
xchg
mov
cmp
inc
mov
cmc
sub
fdivr
xchg
push
aas
jl
in
pop
xor
push
nop
mov
inc
mov
cmp
ror
or
cmp
rol
push
in
inc
inc
pop
(bad)
sbb
or
adc
lds
jmp
dec
outs
outs
imul
sbb
xchg
push
sbb
ror
call
lods
inc
cmps
pop
movs
stc
xor
adc
test
shl
cmp
in
add
push
push
mov
mov
mov
mov
or
mov
pushw
rol
or
hlt
mov
imul
push
or
inc
inc
cmp
or
lock
or
fcom
imul
clc
scas
mov
cld
in
lea
addr16
sti
mov
call
xchg
or
dec
int3
imul
cwde
pop
call
enter
sbb
push
jo
pop
mov
pop
shr
hlt
push
mov
push
xor
or
mov
in
jg
push
fstp
dec
push
sub
fmul
pop
and
leave
inc
cli
sub
jg
inc
inc
push
inc
or
rcr
push
inc
test
je
clc
in
call
int3
lock
jae
mov
mov
xor
mov
sbb
out
inc
cmp
(bad)
or
mov
mov
retf
xor
xchg
mov
mov
and
add
vpshufd
inc
and
imul
adc
dec
pop
adc
jge
je
sub
mov
shl
lock
inc
lock
fcomp
daa
es
(bad)
sahf
push
cmp
push
fcmovbe
mov
cld
int
jl
and
mov
sub
test
pop
adc
shl
pop
mov
dec
or
leave
je
mov
inc
mov
call
mov
mov
ror
mov
ret
cmps
push
push
sar
jmp
xor
sbb
shl
mov
mov
loope
or
mov
cmp
imul
test
add
xor
jg
cmp
int3
les
mov
aaa
je
test
jle
test
scas
ins
(bad)
(bad)
jle
mov
fstp
mov
adc
stc
fstp
fwait
cmp
mov
sub
je
ret
or
scas
idiv
lea
mov
push
add
dec
xor
jmp
sub
xor
repnz
and
loopne
add
sub
bound
jge
xor
mov
mov
jns
adc
adc
sub
sar
(bad)
mov
inc
dec
cmp
pop
pop
mov
ds
mov
outs
push
sub
(bad)
cmp
ds
mov
push
push
ins
xchg
add
push
call
push
or
loopne
add
sub
push
push
xor
inc
aas
shl
mov
ins
mov
fld1
loop
sbb
int3
jno
adc
xchg
push
or
mov
lods
iret
adc
adc
pop
jl
jp
push
das
into
clc
ret
jmp
sub
and
cmps
inc
mov
inc
sbb
je
adc
inc
ins
cmp
pushf
inc
test
or
scas
(bad)
pop
enter
xor
rcr
jl
idiv
and
mov
aam
mov
sbb
pop
add
addr16
mov
icebp
xor
(bad)
or
inc
fs
inc
arpl
test
jne
inc
ror
sub
clc
loopne
pop
jmp
or
ret
or
mov
adc
and
lods
cld
mov
push
sti
mov
pop
je
lea
mov
call
mov
std
fwait
sub
jge
je
test
jne
and
mov
and
imul
jne
mov
ret
jmp
and
pop
imul
fs
cmp
xbegin
xor
je
cmp
jge
ins
push
mov
cli
push
(bad)
loop
lds
and
and
add
cmp
add
loopne
loopne
mov
push
cmp
mov
cli
ficomp
test
sbb
out
push
jg
loope
enter
mov
xor
pop
mov
mov
and
repnz
adc
sbb
or
(bad)
sbb
call
pusha
xlat
aam
ret
hlt
push
movs
mov
test
jne
pshufhw
jne
sahf
cwde
in
ins
add
add
xchg
out
pop
(bad)
push
push
and
call
sbb
popf
mov
pop
push
clc
jp
loopne
dec
mov
add
dec
pop
inc
fs
pop
mov
out
jmp
or
add
ja
push
fsubr
and
hlt
mov
retf
in
sti
jge
lock
hlt
cmp
adc
add
(bad)
mov
hlt
sub
mov
pop
adc
or
add
shl
sahf
add
inc
fwait
inc
jae
xchg
out
inc
ror
das
out
add
mov
comiss
mov
mov
mov
pop
pop
call
nop
adc
ins
enter
in
push
pop
ins
pop
popf
call
cmp
inc
add
dec
es
xor
sub
and
sbb
cmp
push
dec
cmp
jnp
sbb
mov
inc
sbb
movs
xchg
cmp
stos
xor
pop
push
dec
push
mov
pop
xchg
lods
fnsave
and
pop
inc
je
ret
and
adc
pop
and
mov
not
or
cwde
inc
cmp
test
mov
inc
cmp
jg
or
sbb
pop
push
cmp
jl
aam
pop
jl
mov
cmp
cwde
int3
adc
shl
xor
lahf
sahf
push
or
cmp
hlt
add
push
cmp
iret
inc
cmp
popa
in
inc
clc
fbld
out
imul
adc
jo
cmp
je
inc
adc
call
sub
shr
adc
movzx
mov
mov
adc
aas
add
lods
mov
cli
test
sub
inc
inc
sbb
or
add
sub
jae
push
mov
xor
arpl
and
lods
push
push
dec
xchg
or
je
sar
add
jg
dec
pop
pop
inc
and
push
or
pop
lea
rcl
push
pop
nop
pop
add
cmp
inc
int3
push
push
xchg
cmp
mov
mov
mov
(bad)
xchg
add
jle
sbb
popa
sub
add
je
rcr
test
mov
ror
xlat
xchg
shl
aas
ror
or
cmp
and
mov
add
jno
xor
mov
in
sub
mov
shl
xor
add
or
push
inc
add
push
inc
inc
inc
jp
adc
clc
sbb
cdq
out
push
xchg
clc
int
pop
inc
inc
aad
call
mov
inc
and
pop
imul
jnp
or
fs
inc
and
add
shl
cld
pop
out
add
push
adc
inc
add
in
xchg
stos
and
or
cmp
push
mov
pop
push
mov
mov
or
dec
sub
cmps
push
sub
ins
shr
dec
lock
dec
xchg
inc
mov
stc
xchg
inc
pusha
inc
jmp
mov
cmp
mov
cmp
ror
pop
adc
mov
xchg
add
or
add
out
sbb
mov
mov
(bad)
add
int3
and
add
xchg
fisttp
adc
in
dec
scas
adc
shl
test
dec
pop
cmps
push
fisttp
sub
inc
pop
mov
(bad)
out
call
fisttp
loop
shl
adc
nop
sub
pop
sub
add
pop
adc
add
(bad)
jg
or
mov
movs
lock
hlt
mov
repz
scas
cmp
xor
outs
out
mov
and
nop
adc
dec
and
and
mov
or
retf
sub
mov
sti
mov
pusha
inc
sahf
inc
sbb
mov
ret
dec
movs
pop
cld
cmp
pusha
xor
sub
dec
mov
mov
dec
pop
call
pushf
adc
jb
and
cmp
pop
rol
mov
inc
adc
sbb
and
xor
sub
dec
pop
push
cmp
popf
dec
or
fldenv
outs
push
adc
push
mov
ficom
sbb
outs
add
sbb
pushf
push
push
sbb
sub
inc
pop
lods
cmps
mov
dec
adc
cmp
ficomp
push
sahf
icebp
scas
cmp
lods
repnz
or
daa
lahf
mov
dec
imul
xchg
aas
cmps
sar
sub
loopne
cmc
pusha
hlt
jl
(bad)
pop
imul
jl
sub
adc
pandn
test
lds
xchg
push
in
add
cmp
xchg
mov
add
icebp
jmp
jno
xor
pop
je
push
les
dec
mov
inc
add
hlt
enter
ror
cli
rcl
imul
cmp
mov
in
mov
mov
add
push
pop
call
sbb
jmp
xor
sub
xor
xchg
loopne
loope
lods
hlt
inc
adc
test
mov
push
lock
xchg
in
je
push
or
mov
cmp
imul
adc
mov
shl
jae
mov
je
adc
loopne
mov
xor
enter
sbb
aas
or
sar
test
bound
je
lds
pop
inc
xchg
sbb
or
or
push
sbb
pusha
push
jbe
es
push
sub
nop
dec
sbb
fidiv
xor
cdq
or
xchg
jl
inc
mov
pop
mov
mov
xchg
dec
push
cmp
sbb
xlat
mov
or
mov
adc
xor
push
fxrstor
add
popa
das
shr
pusha
push
outs
dec
lock
mov
mov
pop
mov
push
je
mov
mov
into
add
cmp
and
and
inc
push
call
xchg
popa
in
in
pop
rcr
xchg
sub
into
std
mov
sub
pop
neg
mov
mov
mov
and
inc
scas
jle
dec
xor
outs
ds
xchg
scas
dec
retf
or
dec
or
pop
dec
imul
dec
lea
movs
add
repz
dec
je
push
jne
and
loopne
stos
cmp
mov
test
xor
sub
sahf
jmp
cmp
jb
jne
jne
inc
pop
imul
push
sub
push
xor
imul
pop
fdiv
sub
push
hlt
xchg
or
dec
jmp
xor
xchg
xor
mov
xchg
sub
cdq
xchg
stos
(bad)
icebp
and
jns
mov
mov
push
shl
cmc
or
mov
popa
leave
nop
push
stc
push
cld
xor
into
push
jne
mov
inc
(bad)
bound
mov
inc
fcomp
movs
push
push
sti
pop
lea
mov
or
or
ret
jo
xchg
fs
inc
sub
jb
dec
sbb
outs
add
pop
inc
add
sub
mov
sti
call
mov
mov
dec
add
pop
cli
jl
jg
adc
adc
mov
ret
sbb
fild
fs
ins
xchg
dec
add
push
shl
ror
add
or
sbb
out
mov
inc
sbb
adc
pop
mov
shl
data16
mov
push
cmova
add
test
out
jae
inc
bound
adc
daa
fs
loop
adc
mov
loopne
or
and
lahf
adc
push
mov
or
push
add
test
mov
add
add
or
pop
call
sbb
stc
xor
push
movs
sbb
or
jge
xor
fs
test
mov
mov
nop
out
sar
clc
push
xchg
pop
jl
push
gs
and
outs
ins
pop
aad
ins
xchg
shl
add
pop
jo
pop
rcr
add
mov
and
pop
mov
adc
add
popa
cvtpi2ps
cmp
pop
iret
adc
ds
ds
or
aaa
sub
jne
scas
hlt
movs
nop
lods
fnop
cs
sbb
ret
pusha
pushf
mov
(bad)
mov
stc
add
push
aaa
std
cmp
je
sahf
mov
dec
int3
out
push
xor
in
mov
neg
adc
jne
add
push
cli
test
das
inc
push
lds
push
and
mov
cmp
jno
rcl
pop
push
loope
mov
pusha
or
jp
adc
mov
ss
inc
clts
xchg
cmp
iret
mov
ds
je
stos
ins
aas
mov
mov
push
jo
sbb
fsubr
mov
add
not
jne
mov
(bad)
pop
test
mov
int3
add
fdivr
data16
or
push
pop
add
adc
jo
inc
add
add
inc
retf
pop
lock
mov
je
or
lock
jecxz
xor
pop
mov
xor
pop
inc
stos
mov
in
xor
cmp
ret
xlat
inc
or
mov
clc
add
mov
test
push
dec
xchg
push
int3
push
pop
cmps
sti
pop
mov
or
mov
cmp
imul
sbb
dec
or
in
sti
div
ret
add
add
add
xor
and
enter
cmc
mov
cli
add
in
and
ins
and
inc
and
into
cmps
xchg
pop
sbb
pushf
dec
call
je
dec
lock
imul
ja
sbb
or
jnp
mov
nop
or
push
loopne
jnp
outs
cmp
sbb
je
call
jne
dec
lock
mov
mov
add
push
pop
mov
dec
pop
and
cmp
inc
xor
mov
movs
sub
fisubr
adc
cli
jnp
jno
into
jnp
jnp
in
or
arpl
sub
sbb
shr
inc
jno
sahf
je
pop
lock
sahf
push
add
mov
not
cmps
loopne
add
or
and
or
aad
inc
lock
xchg
addr16
dec
movs
and
adc
inc
jp
and
inc
jl
mov
dec
pop
bound
push
cmp
nop
or
push
fst
retf
or
and
jo
pop
dec
out
icebp
mov
pop
test
and
outs
or
scas
nop
pop
mov
lahf
out
loopne
pop
ret
in
xor
inc
sub
sbb
inc
shl
pop
xchg
ins
or
movs
aam
xchg
ins
movs
or
sbb
xchg
in
and
xchg
iret
pop
imul
push
mov
mov
dec
mov
div
fmul
inc
ins
jle
push
mov
mov
or
lods
test
mov
add
add
outs
sub
(bad)
outs
add
arpl
aas
call
outs
sub
jo
fldcw
iret
jmp
rcl
call
shl
push
pop
pop
and
or
xor
fnstenv
retf
cmp
inc
mov
ja
jne
cmp
jne
in
pop
add
pop
xchg
mov
dec
cld
sbb
movzx
loopne
xchg
movs
pushf
mov
pop
pop
ja
and
and
add
aas
fild
push
cli
or
adc
je
xchg
pushf
imul
xchg
or
xchg
sbb
xchg
jae
movs
mov
cdq
pop
mov
adc
add
inc
or
outs
cmps
fcmovne
fisttp
mov
sbb
imul
xor
sbb
aas
iret
mov
dec
dec
add
adc
sub
sbb
cmp
hlt
(bad)
cmp
push
pop
loopne
(bad)
dec
call
hlt
add
pop
stos
inc
push
std
hlt
or
lea
add
test
inc
hlt
cmp
call
jmp
sbb
add
outs
add
sahf
adc
sbb
or
mov
es
fisub
add
inc
sub
test
jg
daa
cmp
hlt
add
add
or
sbb
mov
dec
or
push
mov
(bad)
sbb
gs
add
je
or
popa
dec
inc
je
add
dec
daa
rol
dec
les
icebp
(bad)
mov
sbb
and
add
add
adc
jo
pop
cld
es
sbb
jle
dec
and
outs
rcr
jmp
test
pop
je
test
adc
dec
adc
jns
pusha
sbb
jne
fsub
js
outs
add
in
cmp
and
xor
jg
test
push
out
xor
push
ret
bound
cmp
sbb
xor
out
dec
or
lods
push
(bad)
dec
mov
xchg
lea
stos
cli
pop
add
(bad)
mov
loopne
lea
test
mov
add
adc
scas
push
dec
stos
cmps
pusha
cs
mov
aas
nop
adc
and
cld
fwait
push
rcl
jns
add
add
imul
ja
cmp
push
add
dec
add
or
push
stos
lods
fs
cld
adc
xor
dec
outs
daa
in
adc
adc
sub
add
or
mov
movs
(bad)
jmp
cmp
adc
inc
inc
mov
hlt
test
adc
dec
xor
add
lea
lea
rcr
mov
lea
and
cld
mov
sub
cmp
inc
movs
cmp
cmp
mov
mov
or
push
jmp
dec
jnp
out
jle
or
xor
sbb
arpl
call
push
mov
xchg
push
subps
xor
pushf
loop
xchg
push
or
jo
sub
les
clc
inc
imul
shl
aas
rcl
jbe
nop
shr
sbb
xor
or
movs
dec
int3
int3
mov
xchg
xchg
fdivr
nop
jb
retf
adc
push
mov
pop
clc
jg
das
mov
inc
les
mov
pop
cwde
call
cmp
ret
sti
dec
jne
ins
add
mov
xor
or
nop
bound
mov
aaa
sub
imul
inc
cmp
jmp
outs
out
mov
mov
outs
push
add
push
out
cmp
call
bt
setb
cmp
popa
addr16
jg
and
fcom
mov
jle
jp
jge
jle
or
(bad)
sub
dec
mov
hlt
mov
fs
rol
push
hlt
out
ficom
or
xor
push
inc
sub
mov
sub
jne
sub
add
xor
push
aas
jns
pop
add
push
pop
and
push
in
fwait
mov
jl
jo
jnp
jl
inc
push
dec
lods
lods
mov
sar
das
jne
sub
add
jb
fisub
mov
inc
xlat
jmp
add
mov
sbb
je
test
xchg
inc
or
inc
(bad)
push
je
add
loopne
and
or
pop
mov
ja
es
imul
aaa
mov
std
inc
ins
pop
(bad)
hlt
popa
sub
add
ins
jb
push
sbb
int
fst
xchg
add
clc
or
mov
mov
dec
and
mov
xchg
cmp
div
paddd
rol
push
add
out
movq
jg
adc
push
push
mov
ret
jl
cwde
push
xchg
add
pop
les
inc
add
add
dec
stos
rol
ret
mov
sub
adc
sbb
in
mov
jbe
mov
jbe
sbb
add
(bad)
and
inc
leave
scas
sbb
xlat
ins
and
movs
sbb
loop
and
jmp
push
mov
push
push
push
inc
ins
or
sti
(bad)
ficom
add
push
mov
inc
jne
je
outs
pop
adc
ins
outs
arpl
push
outs
ins
bound
outs
js
adc
popa
push
push
imul
jb
adc
imul
and
sti
sti
mov
jb
inc
ins
jns
adc
gs
fs
dec
imul
or
je
imul
and
push
je
inc
popa
ins
les
jbe
out
iret
fisubr
int3
imul
gs
jb
addr16
ins
in
xor
gs
into
or
push
arpl
ins
ins
out
imul
jb
je
je
outs
gs
cld
mov
je
jae
adc
or
imul
iret
ins
ja
adc
imul
jmp
in
gs
push
mov
adc
fdivr
imul
adc
dec
add
fild
das
gs
out
or
outs
ja
bound
mov
xor
jns
jae
and
inc
je
jo
sub
add
into
or
(bad)
adc
popa
adc
pop
xchg
mov
fs
mov
inc
add
mov
dec
ins
and
cdq
sbb
jbe
push
ins
inc
and
lahf
pop
cld
or
ins
cs
xchg
rcl
idiv
xchg
or
mov
imul
mov
xor
push
sbb
push
(bad)
mov
imul
jl
and
dec
inc
adc
je
(bad)
or
outs
into
add
out
cld
shl
push
shl
gs
jne
cmp
js
push
sub
imul
jbe
addr16
push
mov
aas
push
outs
arpl
ds
fadd
sbb
add
out
push
sbb
ins
jecxz
xor
ficomp
das
fild
aaa
xlat
test
push
mov
push
xor
ss
sar
sub
ins
mov
iret
jo
mov
das
sub
inc
jnp
sbb
ret
pop
push
mov
add
mov
jo
cmp
mov
shl
lods
and
pop
inc
fsubr
imul
loope
push
jo
xor
imul
outs
xor
or
and
mov
ret
jge
xor
sub
mov
sub
xor
xor
xlat
sub
sysenter
xor
and
push
mov
adc
lods
xchg
lods
adc
pop
jbe
(bad)
mov
dec
mov
adc
and
cmp
out
and
rcr
sub
push
aas
inc
ins
jns
push
aaa
xor
sub
xor
mov
xor
and
add
add
jmp
adc
mov
arpl
mov
pop
add
or
es
xor
sbb
mov
gs
inc
cwde
and
inc
jle
adc
xchg
mov
test
ficomp
leave
dec
jo
outs
sub
cmp
sub
pop
push
outs
pop
xor
repnz
sbb
jge
adc
pop
adc
mov
sbb
movs
jo
arpl
cmp
test
ins
pusha
imul
ror
inc
jo
or
enter
xchg
scas
inc
bound
sub
(bad)
bound
lea
jmp
sub
xchg
daa
adc
dec
fadd
aaa
fisubr
test
lods
mov
out
or
mov
cmp
xor
lods
inc
xor
fldcw
in
icebp
nop
pop
mov
test
inc
imul
out
aam
and
jbe
inc
daa
fisubr
rcl
pop
js
(bad)
ins
sbb
test
inc
sub
fldenv
rcr
dec
xchg
daa
pop
daa
mov
pop
pop
adc
ret
ja
mov
frstor
rol
jbe
adc
pop
pop
mov
push
jecxz
push
nop
outs
bound
(bad)
test
hlt
xor
or
leave
or
mov
push
push
imul
ja
cmp
sbb
loopne
add
fimul
mov
mov
cmp
les
jmp
daa
xchg
ss
and
xchg
push
jo
outs
das
in
sub
bound
jnp
sub
(bad)
push
sbb
dec
xor
push
adc
fbstp
cmp
pop
xor
retf
push
aas
inc
pop
cmp
aam
dec
sub
call
and
xchg
pop
push
adc
add
push
(bad)
dec
outs
ins
movs
push
and
add
pop
sbb
and
mov
fisub
push
popa
xlat
das
xchg
push
imul
mov
xor
cmp
lds
cmp
adc
mov
push
das
test
xlat
and
jne
push
(bad)
or
fdivr
lea
mov
push
add
outs
ja
mov
cmp
stos
mov
sub
xchg
jbe
bound
ret
and
and
cli
mov
ret
ret
sub
int3
adc
jnp
daa
pusha
inc
pusha
mov
fcomp
ss
and
push
push
dec
mov
pop
sbb
inc
shl
sub
mov
mov
inc
movs
xchg
or
test
into
or
push
pop
xlat
push
ret
and
movs
xor
or
mov
nop
adc
sbb
lods
xchg
push
movs
(bad)
and
ret
jmp
ret
pop
cmp
ins
dec
or
inc
les
dec
push
sub
and
imul
and
cmp
ins
mov
not
shl
popa
adc
shl
es
add
cmp
add
pop
xor
push
or
int3
or
ret
rol
mov
xor
or
adc
cmp
push
mov
jo
xor
cmp
ror
xor
cmp
iret
rcl
pop
sub
add
xor
rcl
adc
sbb
ja
add
inc
sahf
adc
sub
and
lea
fisttp
div
or
fsub
in
loopne
fsubr
push
sub
icebp
pusha
(bad)
cmc
std
xchg
popa
sub
addr16
xor
retf
sub
mov
push
dec
sbb
jo
xor
dec
(bad)
pop
cdq
daa
ins
adc
pop
inc
adc
adc
or
jne
dec
inc
ss
or
fadd
js
and
pop
cmps
vmovhps
mov
inc
lods
stos
cmp
cmp
add
jo
out
movs
(bad)
mov
movs
out
out
cmp
and
or
xor
xor
xor
adc
mov
pusha
or
or
or
xor
test
mov
nop
pop
mov
pushf
mov
sub
add
xchg
lea
adc
(bad)
push
pop
adc
aaa
sbb
popf
mov
jne
sbb
mov
push
ins
jo
popa
jae
jp
sub
ss
sbb
call
sub
lea
pop
dec
add
popa
int
clc
and
and
and
imul
add
fwait
jecxz
int3
push
shl
loopne
test
shl
shl
jmp
idiv
cmp
stos
ret
and
jecxz
imul
daa
das
sbb
mov
mov
dec
ficom
test
sbb
sbb
daa
ret
and
test
jmp
ss
ror
xor
mov
or
outs
ret
mov
mov
sbb
sub
mov
imul
inc
cmp
mov
cdq
mov
xor
ror
mov
arpl
ret
daa
cmc
fidiv
pop
add
sub
add
mov
jno
lahf
int3
cmp
adc
cld
sub
(bad)
lds
mov
pop
sub
cdq
das
shl
jnp
inc
shr
push
mov
pop
xchg
fsubr
sub
ins
popa
and
inc
call
and
ins
ins
hlt
add
pop
adc
cmps
cmp
mov
xor
xchg
cmc
cmp
mov
imul
aad
repz
xor
mov
and
adc
mov
xor
add
sbb
or
push
and
lea
daa
push
inc
push
or
push
test
pop
push
das
mov
fadd
push
sub
paddsw
je
adc
push
jo
xor
push
or
jge
push
add
rol
shl
and
push
cmp
pusha
sbb
inc
jo
das
dec
shl
mov
pop
or
sub
add
cmp
test
add
cmp
fadd
sbb
into
jl
neg
not
adc
popf
push
push
push
mov
loope
shl
(bad)
xor
imul
push
cwde
cmp
ss
addr16
mov
fisub
xor
sbb
mov
mov
or
push
or
mov
popf
cmp
sub
ficom
inc
gs
loopne
dec
mov
push
lock
sub
jns
cmp
jmp
or
adc
xor
lods
pop
or
xchg
adc
inc
int3
sbb
in
xchg
pop
dec
test
test
and
sbb
inc
push
xchg
or
jo
and
les
fidiv
nop
bound
cdq
daa
dec
and
add
mov
inc
mov
inc
and
mov
xor
enter
inc
adc
xchg
or
mov
jl
inc
or
adc
mov
sbb
rcl
test
jp
in
out
addr16
rcr
sub
das
rol
sub
pusha
push
nop
shr
push
mov
je
push
fst
aas
or
vsubpd
sbb
pop
mov
cmp
jnp
cmp
pop
cld
or
inc
xchg
jne
outs
jo
inc
add
fldcw
mov
mov
pop
fadd
adc
sbb
fist
sbb
out
jnp
cld
mov
ins
daa
mov
sbb
lds
adc
mov
data16
lahf
xor
fwait
or
or
fist
pop
mov
xor
stos
sub
cmp
dec
push
mov
sahf
les
xor
jo
dec
outs
adc
cmps
xlat
jnp
or
mov
sbb
adc
adc
cwde
daa
add
pop
test
push
jo
pop
xor
ret
div
test
jae
sbb
cmovns
inc
ins
jne
push
push
xchg
pop
push
test
jge
dec
mov
xlat
sbb
mov
pop
inc
imul
or
inc
xchg
jb
mov
or
sbb
stc
daa
push
xor
add
push
jne
mov
jns
ret
aad
or
mov
pop
sbb
sti
sub
js
ins
les
cdq
dec
push
pop
mov
or
mov
cmp
mov
pop
jmp
sar
pop
pop
sub
sub
add
retf
out
xchg
and
repnz
or
pusha
jo
shl
xor
pusha
mov
(bad)
dec
push
bound
ja
jnp
add
sub
and
jae
pop
ins
lea
(bad)
pop
or
xor
lahf
arpl
and
or
pop
test
xchg
inc
pop
cmp
pusha
dec
pop
vmovapd
and
add
js
cmps
fs
adc
je
mov
ret
fcomp
ret
daa
cmps
inc
or
aaa
pusha
and
jae
arpl
movs
or
hlt
inc
sbb
movs
lea
bound
cmp
inc
mov
inc
pusha
mov
outs
fs
jns
xor
mov
popa
jae
je
shl
xchg
push
daa
addr16
mov
push
push
out
mov
adc
and
xor
xor
cmp
jo
imul
inc
jae
sub
pusha
les
or
sbb
mov
jae
aaa
mov
inc
push
dec
fist
dec
dec
popa
jbe
out
arpl
and
sbb
adc
(bad)
and
xchg
xchg
int
xchg
xchg
and
mov
adc
push
ins
adc
xor
and
mov
jo
cmp
icebp
es
mov
in
mov
sub
popa
add
pop
fdiv
mov
imul
fdivr
mov
not
cwde
or
not
neg
loope
popa
xor
ja
mov
mov
ja
ja
rcr
add
(bad)
imul
pop
mov
add
int
add
addr16
pusha
xchg
or
addr16
ja
fcomp
ja
ret
add
inc
(bad)
xor
sub
sbb
inc
sbb
and
and
push
pop
mov
sbb
loope
mov
lahf
inc
test
addr16
and
add
lock
(bad)
lods
shr
mov
pusha
inc
xor
outs
frstor
pop
and
adc
add
or
mov
outs
inc
xor
ret
outs
mov
mov
fsubr
sub
or
inc
and
inc
pop
inc
daa
stos
cmp
nop
xchg
inc
inc
pop
or
cs
ds
xor
cmp
data16
bound
or
inc
fsubr
(bad)
and
jb
lds
lds
sbb
sbb
and
and
sub
jg
jg
jg
nop
mov
push
sbb
mov
lds
ja
popa
jne
or
ja
ja
ja
xchg
es
pop
cmp
pop
adc
cmps
mov
cmp
adc
inc
mov
xchg
xchg
xchg
inc
nop
and
adc
lock
adc
int3
test
pop
ja
push
or
arpl
push
push
add
and
and
ja
in
jne
mov
dec
bound
push
and
mov
sub
(bad)
dec
clc
dec
pushf
stos
es
ins
jns
jo
dec
jae
or
gs
push
sub
(bad)
lods
sbb
mov
mov
das
popa
ins
mov
(bad)
das
mov
mov
sub
movs
inc
(bad)
push
popa
adc
push
arpl
cmp
(bad)
es
jp
or
das
pop
mov
(bad)
loopne
adc
push
sti
and
ret
push
loope
sub
cmp
sbb
adc
dec
xchg
jb
arpl
fadd
push
sbb
mov
push
pop
push
lds
mov
sar
sbb
pusha
ins
sbb
and
inc
push
push
cld
dec
dec
or
stos
mov
or
clc
xor
sub
xor
pop
pop
push
fsubrp
xor
pop
imul
in
gs
adc
mov
push
or
fdivr
push
adc
mov
pop
sub
das
push
call
sub
dec
add
fninit
in
dec
out
and
dec
outs
jo
popa
xchg
and
call
mov
add
cs
add
out
push
lock
sub
push
int3
pop
xor
push
mov
or
and
adc
inc
mov
jbe
or
jbe
imul
pop
mov
mov
shl
lods
fdivrp
int3
nop
fcomp
dec
sub
stos
adc
das
scas
(bad)
fadd
ins
sbb
(bad)
jno
dec
aas
pop
bound
scas
jecxz
xchg
sbb
jb
aas
mov
xchg
dec
inc
jb
es
lock
adc
cmp
test
adc
cdq
daa
js
inc
xor
pop
sbb
pop
or
and
cwde
jecxz
sub
gs
mov
out
arpl
popa
test
test
push
mov
enter
(bad)
(bad)
out
daa
out
and
iret
mov
fs
adc
ret
inc
and
xchg
inc
push
and
pop
mov
xor
xor
adc
aad
mov
inc
je
dec
inc
and
sbb
call
and
mov
mov
sub
aaa
pop
add
cmps
xor
das
cmps
sub
imul
pop
ins
xor
push
ds
addr16
rcr
into
jne
daa
out
and
jns
test
mov
adc
sub
(bad)
sub
add
add
cmc
sub
sub
(bad)
push
jo
cmps
sub
jae
add
jl
push
dec
ins
adc
sub
bound
lds
add
lds
sub
daa
jne
jae
jecxz
dec
dec
sub
jecxz
jecxz
mov
(bad)
adc
mov
and
or
jae
or
(bad)
jnp
or
pusha
(bad)
jg
add
(bad)
jecxz
add
sub
mov
das
mov
or
outs
or
xor
rcr
ret
ja
sub
lds
lds
movs
add
std
je
dec
inc
outs
js
inc
ins
or
mov
jae
daa
jecxz
mov
pop
fisubr
push
int3
sub
add
data16
ins
in
fsubr
addr16
jne
cmp
pop
sbb
sbb
les
or
push
jo
stos
fs
xor
loop
adc
neg
test
inc
add
mov
jno
mov
cmp
loopne
in
mov
arpl
sbb
sbb
outs
mov
bound
daa
mov
test
mul
jle
adc
mov
movs
push
das
cmp
js
pop
or
jp
es
shr
out
push
je
ret
jns
sbb
sbb
ja
jo
inc
or
inc
and
cwde
je
lds
ins
jae
pop
lods
adc
ja
push
adc
test
mov
dec
lods
stc
push
and
(bad)
pop
fbstp
ins
push
pop
sub
bound
xor
mov
jae
adc
adc
xchg
fsubr
inc
sub
sti
imul
jmp
imul
push
push
jae
adc
mov
mov
out
or
push
mov
xor
mov
sub
dec
pusha
mov
dec
push
outs
fs
pop
test
gs
pop
pop
pop
adc
sub
sbb
and
adc
push
aaa
stos
xchg
jo
sbb
lea
ins
inc
mov
loop
lods
test
int
push
xchg
and
arpl
push
ret
ret
push
push
add
shl
mov
lods
xchg
pop
aaa
cmc
add
clc
pop
repnz
adc
sbb
mov
gs
xsha256
cmps
adc
push
aad
push
inc
mov
into
or
mul
add
fdiv
sub
mov
mov
pop
or
test
inc
mov
jp
test
mov
shr
dec
xor
je
retf
xchg
(bad)
add
repz
and
jge
pop
mov
dec
add
inc
(bad)
and
and
xor
push
in
pop
dec
inc
sbb
push
call
xor
scas
xor
dec
fild
xor
ror
loopne
loope
movs
imul
icebp
push
and
ret
icebp
das
xor
sub
test
popa
cmps
sub
aaa
pop
(bad)
sub
jmp
mov
sub
call
bound
xor
push
inc
das
pusha
rol
icebp
cmp
push
push
test
dec
cmp
sbb
lds
retf
cmp
aaa
adc
xor
pusha
and
cmp
xchg
or
sub
jmp
adc
xor
cmp
add
or
ja
ins
xor
inc
cmp
imul
and
pop
mov
in
push
daa
sahf
cli
je
jo
add
shl
pop
push
jne
cs
push
fld
jo
push
sbb
xlat
loopne
add
imul
ds
add
fsub
cmc
add
sbb
sti
push
out
push
jmp
sbb
cmp
outs
in
loope
out
shl
dec
lock
jo
push
jb
push
add
ins
cmps
jnp
cmp
pop
iret
and
inc
sbb
mov
inc
cmp
rcr
imul
add
sahf
cmp
dec
and
outs
int3
fisttp
dec
and
imul
xor
lds
push
inc
ds
mov
aad
add
in
imul
push
push
dec
popa
lock
scas
add
je
jne
sbb
into
hlt
das
dec
sub
les
lds
mov
add
mov
rcr
mov
pop
jbe
test
movs
ret
mov
lea
xchg
adc
cmp
add
push
or
push
jb
and
mov
cdq
shr
inc
jno
lods
adc
sbb
inc
sub
test
adc
xchg
test
mov
sti
test
rcr
test
imul
retf
std
lods
or
add
add
xor
add
pop
movs
cmps
jo
out
test
cmps
push
pop
shl
mov
jnp
ret
dec
loope
nop
dec
pushw
push
stos
pop
pusha
dec
or
in
jg
movs
pop
daa
mov
jo
outs
test
dec
add
pushf
cmp
ret
push
ins
xor
movs
sub
add
push
fisub
in
and
push
je
dec
dec
push
sbb
test
xor
ret
and
mov
shl
fidiv
repnz
xchg
sbb
ss
push
imul
and
xor
add
call
cwde
push
repz
bound
or
outs
sub
or
cmp
fwait
cs
mov
push
pusha
sub
and
inc
ins
not
pop
mov
push
pusha
cmp
xchg
or
and
and
add
pop
(bad)
jecxz
icebp
mov
add
daa
jbe
fstp
dec
and
imul
mov
and
test
dec
je
jb
sbb
cli
movs
bound
daa
push
das
add
into
sub
pop
int3
mov
xor
sub
sub
inc
add
iret
xchg
shl
xor
test
xor
pop
sub
and
fsubr
test
rol
inc
push
movs
xchg
call
and
cwde
adc
mov
ja
cmp
mov
pusha
mov
retf
cmp
jns
fsub
test
cmp
sbb
pusha
test
cwde
shl
mov
shr
xor
sub
push
test
push
or
cs
daa
inc
xchg
(bad)
add
mov
pop
or
dec
das
addr16
push
sti
pop
xor
das
div
jge
mov
je
mov
test
ins
jns
lods
gs
mov
pop
ins
cmp
mov
cmp
mov
cmp
cmp
inc
add
stos
cmp
push
push
imul
lock
adc
push
fs
inc
pop
and
and
js
ins
push
and
push
pop
or
mov
fild
adc
inc
xor
cmps
inc
or
adc
cmp
sbb
(bad)
fmul
and
jnp
add
daa
sbb
sub
and
mov
inc
mov
inc
aam
adc
shl
xor
push
fisubr
sbb
enter
mov
adc
or
jae
or
adc
int3
pop
adc
pop
adc
add
mov
sar
adc
xor
push
test
add
lods
adc
scas
gs
mov
pop
nop
pop
sub
cmps
sub
push
cmp
retf
test
shr
and
mov
mov
sub
sbb
pop
xor
and
or
int
and
shl
and
mov
mov
sbb
imul
push
pusha
or
pusha
daa
mov
inc
out
sub
mov
and
cs
daa
mov
lods
fwait
sub
push
ret
aaa
daa
ret
push
ins
imul
aas
jl
mov
imul
mov
arpl
aam
pop
bnd
sbb
sub
jns
sar
into
pop
mov
cmp
cmps
shl
outs
jns
push
or
and
pop
add
shr
adc
mov
div
or
dec
cmp
das
or
and
or
les
rcr
dec
adc
rol
sbb
push
jae
xor
xor
mov
rcr
xchg
mov
fs
and
mov
and
cmp
inc
ins
lahf
push
imul
jecxz
push
inc
ss
ja
pop
arpl
pop
(bad)
and
aam
jo
inc
or
push
xchg
cwde
loope
pop
dec
outs
int3
and
xchg
ja
ss
jno
push
ss
add
jnp
aaa
cwde
loopne
das
ja
push
sub
mov
sbb
and
ins
lea
adc
mov
js
adc
adc
fisttp
add
ja
lock
call
jg
pop
mov
pop
xor
and
push
not
in
bound
pop
or
push
dec
add
cmp
or
sbb
jmp
push
jns
gs
xor
push
rcl
adc
push
adc
sub
xchg
je
sbb
and
sub
or
push
and
sbb
xor
xor
sub
bound
push
or
xor
jnp
xor
sub
popa
or
sbb
jno
movs
fsubrp
test
daa
in
xchg
add
mov
ins
popf
sti
cmps
mov
test
xor
or
lds
aaa
cwde
shr
sub
push
cwde
inc
pop
test
push
mov
sbb
sub
sub
pop
sub
shr
pop
fidiv
pop
xchg
sub
in
push
adc
mov
gs
jo
in
rcl
(bad)
and
and
mov
and
ret
pusha
sbb
or
sbb
inc
xchg
add
jmp
push
arpl
xor
inc
pop
inc
jo
sbb
cmc
sub
inc
xchg
cmc
and
inc
xor
cmc
sbb
les
and
mov
and
and
dec
sbb
pop
and
and
sbb
and
lea
add
mov
call
nop
popa
or
jo
popa
je
sbb
inc
add
pop
sub
push
mov
cmp
es
rol
sbb
aaa
adc
adc
pop
or
dec
ins
jns
sub
fwait
dec
adc
sub
imul
jg
jo
inc
add
mov
inc
adc
and
push
in
pop
inc
sbb
bndldx
dec
jg
arpl
jb
ret
sbb
ins
pusha
mov
pop
adc
lahf
shl
dec
mov
adc
adc
push
push
lahf
mov
adc
andps
mov
and
inc
fadd
imul
xor
xor
add
or
xor
jbe
mov
lods
ins
imul
mov
mov
js
popf
shl
sub
ja
mov
(bad)
into
or
sub
mov
and
pop
lods
arpl
cmp
add
das
sbb
ins
daa
xor
loop
stos
pop
pop
inc
dec
js
jo
jb
or
cmc
pop
xor
xor
push
popa
mov
pushf
dec
outs
outs
cmp
push
jne
imul
dec
sbb
cmp
sbb
add
or
je
inc
jbe
lods
inc
adc
dec
clts
and
rcr
push
pop
cmpxchg
popf
shl
aaa
in
inc
adc
pop
add
and
mov
sub
push
call
push
cmps
mul
pop
or
out
jne
or
or
mov
pop
das
jp
xor
jne
out
test
and
les
mov
pop
adc
and
pop
lds
das
dec
lock
lock
imul
push
inc
fs
sbb
or
push
xor
pop
or
jp
adc
into
adc
jae
sbb
ds
aaa
mov
aas
dec
mul
jbe
jmp
retf
in
sbb
ins
mov
jno
mov
inc
push
inc
xchg
push
push
ins
fisub
inc
fwait
inc
clc
adc
fdiv
add
xchg
pop
mov
jns
daa
xchg
add
inc
lock
inc
pop
push
sbb
sbb
retf
cmp
dec
data16
mov
je
push
jge
or
jnp
sysret
fimul
cmp
push
scas
aaa
dec
cmp
sbb
jae
inc
add
cmp
mov
loope
add
inc
retf
pop
sub
or
jmp
sub
adc
add
add
pop
adc
sub
neg
sub
je
mov
or
es
push
add
add
jl
adc
jbe
arpl
ins
jae
xor
and
adc
adc
jp
xor
fidivr
nop
ins
mov
icebp
rol
add
pusha
jae
pop
leave
add
push
xchg
call
push
mov
pop
ficom
xchg
lea
mov
arpl
pop
sub
js
inc
sbb
jae
pusha
(bad)
int
adc
sub
and
add
and
xchg
push
data16
and
jb
das
jae
and
pop
inc
push
inc
popa
pusha
sbb
and
adc
adc
sbb
or
loopne
outs
jbe
or
adc
retf
(bad)
pushf
inc
imul
mov
retf
and
sub
repnz
add
dec
fsub
dec
or
dec
jmp
adc
test
push
int3
pop
adc
jle
inc
mov
hlt
push
inc
push
popa
xor
xor
test
push
mov
xlat
mov
call
jle
or
adc
test
sti
imul
sbb
sbb
or
push
pop
out
or
or
or
inc
sub
sub
xchg
jnp
es
fdiv
lods
push
push
fsub
cmp
shl
fwait
jge
inc
addr16
pop
imul
mov
sub
sbb
lea
xor
lds
inc
cli
cmps
cmp
lods
cmp
sub
jo
sub
or
adc
sub
mov
ins
mov
mov
mov
sub
push
retf
(bad)
and
cmps
test
cmps
stos
cmps
add
sub
fsub
mov
daa
retf
cmps
pop
push
sti
adc
imul
and
dec
sub
hlt
dec
retf
mov
dec
add
xchg
sub
jge
sub
js
xor
mov
push
sbb
cdq
sbb
dec
lds
xchg
cmp
fsub
xor
sub
xchg
sub
adc
std
in
inc
jmp
dec
jb
aad
sub
test
sub
sub
mov
jo
mov
mov
movs
fsubr
fwait
sub
adc
shr
mov
xor
xor
sub
xchg
sub
jo
icebp
pusha
push
jmp
and
mov
fs
ja
jo
mov
xor
push
inc
pop
fsubr
in
add
push
retf
xor
and
fsubr
xor
gs
add
lea
adc
jge
outs
or
pop
daa
test
mov
call
adc
xor
and
and
and
lods
ins
aad
aad
rcr
sub
adc
jge
movs
adc
js
jbe
jl
xor
scas
outs
cmp
inc
jo
cmp
cmovo
ret
cmp
test
es
sbb
pop
add
fs
sbb
push
inc
sub
jge
xor
push
add
and
cmp
jns
sub
sbb
or
std
mov
mov
add
test
cmp
push
nop
mov
push
mov
mov
jge
jle
add
iret
repz
daa
jl
push
and
add
sti
dec
xor
pop
add
add
cmps
retf
add
sbb
mov
xchg
das
pop
scas
sbb
push
sbb
mov
jbe
jb
add
mov
add
xor
retf
xchg
mov
imul
add
and
dec
and
in
add
stc
in
xchg
(bad)
sub
leave
sub
adc
pop
sub
popa
sub
lods
sub
cs
retf
mov
xor
jb
adc
add
xor
or
push
xor
movs
aaa
add
mov
add
cmp
aad
mov
xchg
(bad)
add
add
imul
aas
add
popf
pxor
jmp
xchg
pop
inc
add
or
add
push
push
inc
bound
jb
xchg
jb
imul
mov
inc
gs
add
cs
cld
add
in
add
data16
mov
outs
mov
push
dec
push
push
or
jg
add
test
nop
cmp
sbb
and
mov
inc
inc
enter
push
dec
adc
pop
and
leave
and
punpckldq
add
inc
push
test
push
sbb
cmp
jns
xor
and
or
in
enter
sub
adc
pop
and
cwde
xor
and
inc
push
mov
test
sub
sub
or
mov
das
push
jo
cmp
repnz
xchg
and
in
enter
add
adc
xchg
pop
and
inc
loopne
and
inc
clc
dec
call
call
cmp
sbb
jb
jns
pusha
dec
add
dec
push
or
inc
repnz
nop
and
and
leave
or
inc
push
xchg
pop
jo
sub
cmp
fdiv
adc
nop
cmp
pop
cmp
and
pop
inc
inc
enter
pop
dec
adc
pop
and
leave
pusha
popa
pop
or
inc
push
xchg
addr16
adc
test
push
sbb
dec
ins
jns
xor
(bad)
jns
add
fs
jb
ins
fisubr
fld
popa
ins
nop
cwde
stos
jbe
mov
or
dec
dec
jnp
add
or
adc
pusha
arpl
jae
add
ror
sti
or
int3
or
inc
or
iret
popf
adc
jb
movs
cmp
nop
or
mov
cld
push
popa
jbe
push
outs
sbb
mov
ja
jo
popa
(bad)
push
add
nop
add
call
xchg
mov
lods
jae
aam
inc
xchg
jno
cs
test
add
inc
sub
pop
into
add
push
inc
xchg
imul
push
mov
stc
add
mov
xor
ss
sbb
inc
push
and
jae
xchg
sub
cdq
ja
cmps
imul
push
mov
js
pusha
add
test
and
push
pop
pop
div
int3
push
push
lods
add
and
push
outs
mov
or
push
fsub
inc
dec
outs
mov
fisub
sub
push
daa
add
adc
add
push
inc
and
sub
jmp
mov
xchg
daa
daa
out
jb
xlat
fs
enter
cmp
repnz
mov
xor
mov
inc
movs
jg
and
jns
cmps
outs
fstp
inc
sahf
pushf
mov
ds
and
test
jae
cmc
sbb
out
dec
stos
cmp
in
pop
jbe
out
psrld
push
push
sar
jmp
stos
add
lock
es
add
mov
mov
movs
mov
jo
ins
jns
ror
pop
rol
ins
outs
jb
outs
push
inc
inc
push
clc
ds
add
out
loop
(bad)
lock
pop
popa
and
or
js
cmp
adc
les
pop
in
or
xchg
adc
push
add
out
push
add
adc
add
jne
loopne
pop
clc
imul
ret
push
add
or
(bad)
loope
inc
fs
pusha
sbb
or
add
fld
out
add
inc
jg
icebp
stos
push
add
inc
add
pushf
add
fiadd
sbb
add
and
and
add
xor
or
sbb
fisubr
leave
or
movntq
add
cdq
lds
xor
dec
arpl
ret
xor
ret
loope
daa
or
ret
jo
fld
dec
ins
fcomi
rcr
push
dec
pushf
gs
test
mov
push
popa
sub
adc
scas
adc
imul
cmc
loopne
mov
cmps
sbb
push
jl
test
cli
sbb
outs
pop
and
loop
jae
aad
sbb
mov
adc
mov
add
xchg
pop
test
(bad)
push
inc
and
jp
mov
or
xlat
mov
cs
push
ss
push
jmp
aad
add
sbb
add
and
pop
xor
shl
cmp
add
adc
pop
dec
inc
clc
loopne
mov
sbb
or
add
fldenv
mov
fsubr
psubw
in
sbb
adc
add
aad
sub
dec
jbe
or
sbb
xchg
prefetch
sbb
sbb
dec
xor
mov
add
push
or
push
mov
mov
sub
jmp
dec
jmp
cmp
mov
iret
push
pop
add
fadd
loope
in
retf
cmp
in
and
push
xchg
imul
scas
out
mov
imul
add
mov
js
push
push
imul
adc
push
mov
int3
call
sbb
jl
test
ror
(bad)
jns
idiv
push
or
lods
and
mov
fsub
aas
add
pop
enter
and
in
in
add
jge
add
lods
jmp
ins
ja
add
daa
cmp
or
add
sbb
(bad)
fs
jg
or
mov
mov
or
add
mov
loop
pop
dec
add
pop
dec
popa
jae
inc
imul
fs
outs
jae
in
xor
sbb
add
movs
or
mov
gs
mov
mov
jmp
add
std
js
repnz
daa
fadd
popa
ins
jnp
leave
lods
rol
jg
pop
inc
pop
inc
jg
or
inc
xchg
loopne
sbb
pop
or
movaps
jbe
popa
bound
shr
add
push
sub
and
xor
jae
popa
ins
imul
push
scas
dec
add
and
or
mov
dec
outs
outs
popf
cmp
push
dec
mov
imul
add
pop
fld
jno
pop
mov
or
jg
ins
mov
push
lods
add
add
or
jge
enter
add
inc
push
or
rcr
pop
inc
or
inc
and
or
inc
jb
mov
dec
and
inc
push
cmp
stc
add
or
loop
sar
movs
(bad)
popa
push
rcr
adc
inc
lea
jo
sub
sbb
inc
sbb
jae
and
fld
fwait
add
mov
xchg
push
in
and
out
mov
into
mov
ds
or
jo
mov
push
lahf
push
lahf
push
bswap
push
adc
push
pop
adc
push
push
adc
test
test
sbb
mov
or
push
xor
cmp
push
and
pop
sti
ficom
push
push
push
sub
push
shl
daa
ja
jge
outs
push
xor
es
div
inc
sub
or
push
sbb
push
and
sti
pop
jnp
push
push
loopne
fcom
mov
xchg
fcmovbe
faddp
ss
xor
not
sar
aaa
mul
jo
fs
sub
(bad)
sub
sub
pusha
aaa
cs
imul
std
or
cmp
(bad)
(bad)
xchg
(bad)
(bad)
cmps
adc
in
add
inc
outs
sub
jmp
ret
cmp
inc
aaa
retf
mov
sub
sar
inc
dec
or
inc
and
inc
sub
push
jo
lahf
jae
icebp
add
inc
sub
out
popa
je
push
xor
cdq
enter
mov
aam
push
dec
add
mov
mov
sbb
retf
push
mov
add
in
xchg
bound
scas
sbb
inc
mov
pop
mov
and
fisub
add
mov
dec
stc
in
add
add
and
repnz
sub
and
cmps
daa
add
sub
ds
cs
scas
sub
mov
add
sub
stc
jb
add
add
retf
pop
shl
push
mov
jmp
ss
add
xor
mov
(bad)
add
add
in
dec
ror
cmpxchg
(bad)
add
movs
cs
sub
aas
add
mov
jp
cmovno
stos
dec
and
pop
inc
mov
push
inc
es
pop
push
xchg
adc
pop
fldenv
pusha
adc
sub
outs
jns
mov
pop
ins
lds
xchg
popa
add
sub
xchg
push
and
add
leave
sub
dec
sar
out
lahf
xchg
hlt
pop
or
inc
das
xchg
data16
and
or
dec
xchg
cmp
in
in
sbb
mov
fadd
sub
cmp
(bad)
xchg
(bad)
xchg
push
movs
and
or
pusha
xchg
pop
sub
xchg
or
push
cmps
pusha
and
xchg
xor
cmp
add
inc
(bad)
cmp
daa
pop
fmul
xor
xchg
adc
cmp
push
add
mov
mov
push
push
xchg
and
add
cmp
xchg
mov
and
je
adc
rcl
sbb
cmp
clc
dec
or
jae
shl
dec
pop
outs
xchg
inc
and
add
or
(bad)
xchg
pusha
dec
in
ins
mov
fcomp
sbb
leave
je
scas
xchg
imul
fcom
or
pusha
xchg
dec
push
dec
dec
rcl
xchg
jo
cdq
cmp
test
out
xchg
ins
mov
jle
inc
and
leave
sub
push
xchg
pushf
pop
adc
sahf
xchg
sbb
das
sub
mov
add
pusha
popa
mov
push
or
dec
or
pusha
xchg
adc
dec
rcr
xchg
shr
or
cwde
dec
add
(bad)
xchg
dec
push
enter
ds
mov
icebp
sbb
mov
or
pop
ja
mov
xor
call
or
jo
adc
mov
xchg
ror
pop
xchg
mov
inc
popa
add
test
andps
outs
outs
imul
rep
mov
stc
in
add
jae
imul
outs
fs
imul
scas
mov
or
dec
gs
push
imul
sub
je
inc
add
mov
idiv
test
leave
xlat
adc
xchg
jmp
cmp
and
pop
scas
push
and
fst
add
retf
pop
or
jle
ja
(bad)
xchg
pop
add
not
loopne
rol
ror
push
outs
daa
out
stc
inc
add
inc
rdtsc
fwait
cdq
pop
in
mov
dec
jle
push
rcr
jl
shr
sbb
cmp
call
shl
xchg
dec
xor
sub
sbb
sbb
adc
add
inc
and
loope
rol
add
inc
outs
fisubr
outs
inc
ins
push
outs
bound
cmc
rol
fisubr
pusha
hlt
and
pusha
and
add
test
jg
add
in
adc
jno
sub
sbb
push
arpl
or
pop
sub
scas
pop
or
hlt
fsub
icebp
adc
mov
fist
push
and
fild
aas
or
xchg
xchg
xchg
retf
or
sub
xchg
xchg
xchg
xchg
xchg
xchg
retf
adc
cmp
push
xchg
xchg
xchg
scas
shl
pop
mov
or
lods
and
push
push
pop
pop
push
jb
loope
sub
fs
add
add
es
call
not
int3
nop
mov
cmc
mov
add
inc
js
inc
xor
add
in
mov
je
aas
in
sar
and
dec
gs
add
enter
scas
pop
mov
add
jo
in
scas
add
push
or
inc
rcr
inc
enter
(bad)
add
mov
in
sbb
xchg
aaa
push
push
cmps
inc
ficomp
dec
push
sbb
pop
push
lea
adc
outs
ja
push
pop
out
xlat
push
push
sahf
cdq
inc
fs
dec
jo
pop
pusha
rcl
xor
dec
adc
out
mov
add
ficomp
loopne
inc
iret
mov
pop
or
dec
inc
shl
js
add
sub
xor
push
lds
push
add
sahf
div
imul
rol
add
add
mov
movs
fldcw
xchg
push
ror
int3
cmps
push
mov
jge
cmp
sbb
sub
fdivr
adc
push
popa
test
mov
adc
mov
xor
or
jae
lock
xor
repnz
cmp
sub
into
imul
lock
jb
fild
mov
mov
adc
adc
push
jb
gs
test
imul
adc
add
(bad)
xor
fmul
mov
popa
pop
lahf
bound
pop
aaa
aaa
inc
mov
push
xor
or
inc
inc
adc
xor
inc
mov
sbb
ret
dec
xchg
dec
js
mov
or
pop
add
adc
sub
inc
fadd
jne
push
push
mov
xchg
or
or
cmp
mov
add
mov
jnp
or
test
test
invd
dec
sub
in
add
inc
inc
and
sbb
pusha
dec
inc
adc
loop
js
mov
add
scas
jo
scas
test
or
leave
xor
setae
add
dec
icebp
xor
or
push
sbb
lock
retf
sbb
add
mov
push
(bad)
fistp
mov
inc
outs
add
and
adc
jbe
xor
lds
push
sbb
bound
push
clc
adc
cmps
inc
mov
dec
cmp
sahf
push
xchg
fisubr
pop
inc
icebp
les
and
pop
or
shl
popa
and
adc
inc
les
xchg
sbb
daa
movs
out
sahf
sub
push
js
push
ss
cld
add
clc
ins
mov
add
dec
adc
cs
inc
add
or
inc
sti
test
xor
sbb
retf
int
pop
fidivr
out
stc
loop
add
push
cmp
inc
or
call
add
shl
rcl
cmps
pop
or
rol
xchg
retf
pop
outs
iret
or
sbb
retf
cmp
sbb
mov
pop
int3
xor
sbb
sbb
cwde
mov
mov
int
or
pop
pusha
and
push
xchg
or
sbb
pop
inc
fisttp
jbe
push
mov
xor
or
xlat
sbb
call
pop
arpl
inc
dec
push
aam
add
and
mov
and
dec
int3
pop
dec
psubusw
outs
push
sar
pop
and
pusha
or
dec
add
bound
mov
sti
in
ficomp
mov
inc
loopne
xchg
add
sub
mov
push
xchg
add
sbb
push
out
pop
outs
xor
jge
inc
nop
arpl
push
inc
adc
inc
enter
es
add
pop
pop
or
pop
jmp
pop
add
adc
xchg
mov
outs
jnp
push
adc
inc
aad
push
outs
into
enter
add
xchg
cs
adc
scas
jo
mov
jb
in
cmp
fdivr
sub
xchg
push
add
(bad)
gs
sbb
add
imul
jb
jae
(bad)
nop
add
inc
and
and
shl
outs
adc
gs
shl
outs
mov
add
pop
mov
push
xor
ins
addr16
xor
add
fcom
push
pop
iret
lock
imul
mov
dec
aaa
pop
cmp
ror
call
shl
cmp
mov
arpl
arpl
jl
in
dec
ret
(bad)
or
mov
addr16
adc
loop
pop
fadd
movs
pushf
add
fwait
add
xor
xor
out
ins
shl
add
xchg
or
xor
add
push
and
pop
cmp
ret
jo
dec
call
mov
inc
push
popa
cdq
pop
ins
adc
jle
adc
daa
mov
adc
(bad)
or
jmp
or
inc
dec
icebp
loope
mov
mov
xor
adc
pop
push
out
ret
sub
leave
pop
push
out
inc
ror
loope
push
pop
dec
push
push
mov
or
stos
jecxz
mov
ret
neg
xchg
icebp
lea
jmp
pop
pop
xor
and
mov
pop
cmps
cli
fidivr
inc
cmp
or
and
mov
jb
dec
shl
jnp
jb
jo
jb
mov
movs
add
lahf
(bad)
clc
pusha
int3
add
and
inc
jle
ret
mov
jecxz
loopne
jle
test
jae
jg
adc
jne
arpl
jns
fsubr
and
mov
inc
rcl
jbe
cs
jnp
nop
pop
cmp
test
push
sbb
dec
dec
out
or
imul
xor
imul
sar
add
ret
add
in
ficomp
or
jo
das
add
aaa
mov
cmps
push
(bad)
push
(bad)
xchg
xchg
daa
daa
loop
aad
leave
leave
enter
(bad)
jne
xor
leave
inc
sbb
jb
stos
sub
jle
cmp
cmp
shl
mov
push
loope
mov
cmps
inc
sub
adc
arpl
je
addps
and
and
bound
add
pop
cmps
push
sub
les
imul
sar
add
push
outs
or
daa
or
into
jae
xlat
cdq
or
in
and
add
cmps
mov
jns
adc
fmul
mov
imul
cdq
pop
add
push
xchg
adc
adc
cmp
add
push
stc
cmps
or
push
and
ret
scas
outs
add
mov
imul
cld
bound
add
sbb
and
mov
test
fcomp
xor
xchg
cmp
test
xor
adc
xchg
pop
add
sbb
pop
pop
add
ins
icebp
dec
or
add
inc
push
pushf
xchg
jle
stc
push
std
add
data16
sbb
popa
sar
repz
aaa
add
imul
or
inc
test
inc
push
hlt
cmps
cmp
jb
dec
mov
inc
scas
mov
dec
xor
movs
loopne
cld
or
push
add
pop
add
fcmovnu
push
inc
or
push
push
ins
jb
addr16
add
addr16
lock
mov
(bad)
jl
cli
or
(bad)
bound
dec
add
jnp
add
add
ret
les
bound
(bad)
dec
xchg
adc
inc
inc
loope
shl
pop
push
je
xchg
add
ret
jno
jnp
int
add
inc
dec
lds
mov
cmp
shr
xor
call
aaa
aam
into
inc
aad
add
push
in
cmp
mov
push
sbb
dec
dec
jle
sub
fistp
push
loop
shr
fcomp
inc
outs
fmul
fs
sahf
out
mov
jo
(bad)
rcr
xor
sub
add
psubsb
mov
fisttp
push
fimul
add
jge
scas
fisttp
dec
mov
push
fsubp
bswap
fld
push
inc
loope
or
icebp
and
bound
sbb
loopne
ins
sahf
inc
inc
mov
imul
mov
popa
mov
xor
sbb
in
add
mov
loop
mov
adc
js
pop
ret
fld
retf
or
jns
sub
pop
lods
add
and
pop
jbe
jne
add
jns
cmp
or
adc
aam
add
push
inc
or
xor
add
bound
fidiv
mov
pop
inc
clc
cmp
mov
xor
add
mov
stc
mov
aas
add
push
ja
adc
add
movaps
lods
(bad)
xchg
jns
dec
lods
(bad)
out
adc
and
cmp
pop
dec
daa
pop
mov
hlt
jmp
popf
adc
adc
jnp
or
adc
and
or
xor
imul
and
sub
das
in
pop
mov
out
inc
pop
adc
imul
lods
sub
inc
pop
dec
jnp
mov
add
add
dec
jb
cmp
popa
or
add
scas
jp
push
xlat
inc
and
ss
fst
push
add
stos
xchg
adc
mov
loope
cmp
sbb
aad
popa
or
mov
push
retf
adc
push
or
dec
hlt
repnz
imul
lods
sbb
pop
ret
fisttp
dec
out
sar
int
sbb
pop
add
ror
hlt
rcl
pop
iret
pop
ins
adc
push
xor
jns
in
fld
sub
xlat
mov
or
mov
and
fldenv
lock
jg
dec
in
loope
pushf
fst
jecxz
es
cmp
cmp
pop
xor
adc
into
mov
mov
add
js
inc
inc
shr
inc
jne
mov
push
mov
or
inc
(bad)
popf
ja
mov
add
dec
lds
inc
mov
fmul
out
lds
dec
mov
in
pop
jge
(bad)
mov
jle
pop
into
int
loope
(bad)
(bad)
mov
pxor
or
pcmpeqb
and
jmp
outs
mov
daa
sub
jo
daa
xchg
aad
inc
inc
test
sub
inc
inc
push
icebp
push
xchg
adc
cmp
xor
lods
inc
outs
rcr
xchg
call
xchg
add
jne
mov
das
inc
push
bound
xchg
mov
xchg
or
add
sbb
xchg
cmps
cmp
cmps
dec
push
mov
nop
mov
xchg
out
inc
mov
add
add
lods
fwait
add
das
mov
shl
fnstcw
fistp
in
mov
sbb
movs
inc
cmp
or
push
test
aas
inc
xchg
mov
or
inc
add
pop
add
das
push
push
inc
xchg
jns
(bad)
adc
test
fistp
jo
or
inc
out
or
test
jge
call
or
outs
imul
sbb
sbb
pop
inc
shl
jg
arpl
nop
ja
sbb
out
pop
mov
stos
adc
out
cld
das
mov
dec
imul
out
jns
dec
add
das
mov
xor
ins
ret
lock
add
sbb
(bad)
test
xor
mov
fdivr
adc
mov
bswap
adc
sub
fwait
rcr
mov
pop
sub
inc
sbb
or
add
mov
mov
fild
enter
cmps
push
adc
adc
test
test
out
push
add
rcl
push
popa
(bad)
inc
jge
add
cmp
(bad)
lahf
pop
repnz
(bad)
iret
and
pop
test
stos
push
es
xor
cmp
je
ret
loopne
iret
push
es
out
mov
nop
push
shl
out
jb
jl
cmp
sar
cwde
pop
ret
neg
out
xor
push
punpcklwd
pop
jb
jno
pop
pop
cmc
jge
ins
cmp
mov
add
push
cmp
stc
push
test
test
adc
xor
jbe
mov
nop
mov
inc
mov
ss
out
xor
pushf
xchg
inc
adc
rol
push
in
inc
push
add
das
push
in
lock
retf
xor
push
inc
inc
jb
jae
xchg
add
sbb
or
xchg
sti
mov
or
popa
ins
ins
inc
gs
jne
je
xchg
or
inc
inc
mov
ins
inc
data16
fs
mov
daa
(bad)
or
push
jo
ja
sbb
mov
ja
shr
fcmovu
mov
adc
and
lock
popa
popa
mov
push
or
inc
dec
jbe
mov
gs
sub
inc
imul
sbb
cmp
jno
sbb
add
dec
xlat
sbb
idiv
aaa
sbb
daa
dec
outs
cmps
dec
cmp
test
or
dec
mov
push
dec
out
call
push
inc
add
jmp
add
mov
inc
and
mov
aaa
es
adc
lds
cmp
mov
push
test
inc
lea
push
add
je
or
cmp
je
jl
push
inc
cli
cmps
movs
and
enter
xor
movs
pop
ins
adc
mov
daa
stos
xor
or
add
loopne
adc
jne
mov
jns
jmp
pusha
fild
jo
xchg
mov
pusha
cdq
ins
and
push
inc
cmp
jo
pusha
aad
inc
imul
xchg
lods
ja
adc
push
aam
push
or
or
sub
movs
adc
mov
mov
xor
in
dec
jnp
pop
or
mov
sub
cmps
mov
push
lock
pop
out
nop
mov
stos
iret
scas
ja
scas
pop
adc
push
movs
je
test
xor
cmp
mov
add
sti
loopne
dec
sti
ds
push
jnp
lahf
sbb
pop
ficomp
pop
cmp
cmc
inc
pop
mov
neg
jo
fcom
push
xor
shr
add
call
jnp
lock
imul
add
les
xor
jns
or
inc
or
inc
inc
xor
jo
dec
cmp
idiv
add
sbb
push
mov
xlat
movs
fnsave
je
mov
sbb
frstor
enter
jno
mov
pop
add
and
fisub
clc
or
push
fidiv
cmp
adc
mov
add
fmul
loope
add
push
cmp
adc
outs
mov
add
pop
add
adc
or
sub
pop
xor
pop
and
xchg
sub
pusha
inc
cmp
inc
outs
jne
test
jb
les
or
add
scas
jmp
push
jmp
xor
sub
adc
sbb
in
xor
ins
imul
rcl
sar
sahf
inc
push
add
or
jne
push
inc
std
xchg
fsubr
sbb
pop
dec
das
pushw
xchg
lods
(bad)
jg
push
ret
xor
xchg
or
dec
push
cmps
dec
adc
xor
xor
xor
inc
xor
mov
shr
stos
cmp
out
pop
xor
dec
xchg
pop
push
outs
cmovl
mov
inc
sub
add
adc
cmps
add
mov
sub
push
shr
mov
sub
or
cmp
popa
pop
outs
push
aaa
leave
neg
cmps
inc
popa
fadd
(bad)
dec
xor
je
test
fist
and
fcmovb
or
add
xbegin
jae
or
cmp
cwde
outs
cmps
jge
xor
outs
or
inc
adc
fld
jle
or
fs
dec
bound
add
div
not
sqrtps
inc
lods
pop
lds
cmps
adc
xor
adc
sbb
out
fwait
cmp
xor
xchg
inc
ret
add
fwait
mov
push
add
out
sub
out
pop
pop
das
jp
or
pop
cmps
jbe
jne
scas
fisub
push
and
or
xor
or
(bad)
xor
outs
pop
dec
mov
add
push
rcr
add
mov
popa
jge
sar
inc
adc
inc
movs
mov
mov
dec
sbb
or
and
add
xor
es
add
int
test
adc
fisttp
lods
shl
fwait
mov
into
or
rcr
add
lods
or
pop
bound
xor
push
std
xchg
push
push
jns
ret
cmps
push
scas
pop
add
daa
dec
jg
aaa
gs
add
fild
lahf
sub
(bad)
int
mov
cli
arpl
sbb
mov
add
inc
add
jo
fwait
sbb
mov
movs
pop
into
lods
add
das
or
jecxz
add
mov
inc
scas
mov
adc
ret
jnp
(bad)
outs
hlt
call
pop
add
mov
ror
call
fdivr
lods
or
jae
add
add
or
pusha
mov
mov
push
rol
mov
aas
mov
js
mov
cmps
mov
outs
xor
movs
cmps
dec
push
mov
push
inc
jno
inc
call
mov
fdiv
in
push
ret
dec
xchg
sub
mov
dec
xlat
adc
xor
shl
loopne
pop
xchg
aaa
imul
xor
mov
jne
shr
dec
movs
sub
aaa
or
or
add
dec
outs
cmp
seto
ds
jno
icebp
push
test
or
inc
cs
mov
mov
or
loope
dec
inc
sahf
das
or
(bad)
daa
daa
and
or
xlat
xchg
xchg
xchg
daa
or
leave
enter
or
leave
leave
jle
jmp
push
in
in
jb
mov
idiv
and
jbe
mov
pop
and
fimul
push
(bad)
push
push
and
fs
dec
mov
sbb
mov
dec
add
push
pop
or
or
ss
pop
cmp
jno
outs
mov
or
popf
xor
push
lods
pop
ja
shl
sbb
adc
add
vmread
dec
imul
and
std
into
push
adc
inc
push
xor
leave
dec
data16
mov
outs
dec
dec
xor
out
add
les
enter
mov
imul
popa
ins
jne
cmp
out
bound
push
clc
xor
(bad)
iret
sti
jmp
pop
mov
add
cwde
add
cdq
sub
and
or
add
sbb
dec
mov
nop
push
or
cmp
enter
add
out
out
or
dec
in
xchg
add
xchg
or
ror
or
mov
inc
mov
sub
call
and
mov
xchg
sub
mov
add
int3
or
dec
jae
imul
cdq
mov
push
push
push
je
mov
inc
jne
das
add
imul
add
test
pop
push
mov
or
push
inc
repz
ss
mov
add
outs
or
xor
dec
clc
push
xor
add
pop
push
dec
push
cwde
or
movs
loopne
stos
xchg
xchg
xor
pop
xor
popa
mov
xlat
xor
gs
and
sub
jo
inc
jae
fld
imul
sbb
inc
dec
add
popa
inc
sbb
imul
pop
dec
add
jo
int
add
cmp
jo
jo
inc
dec
jo
add
call
int3
ins
loopne
dec
data16
push
test
mov
jo
push
hlt
imul
add
das
and
or
pop
push
xchg
or
int3
int3
mov
adc
dec
sbb
inc
mov
in
inc
add
push
adc
bound
icebp
rol
add
mov
fs
jb
dec
or
(bad)
dec
dec
xor
xchg
stos
dec
mov
sub
add
sbb
xchg
dec
dec
xor
or
ins
les
add
movs
or
mov
inc
rol
test
outs
(bad)
pop
pushf
cmp
mov
mov
pop
and
push
add
xchg
inc
add
add
imul
inc
dec
or
mov
mov
test
sub
fild
mov
adc
sbb
scas
xor
sub
jae
scas
pop
or
push
repz
stos
push
popaw
push
arpl
xchg
fsub
mov
add
sbb
inc
sub
aaa
scas
adc
icebp
test
test
arpl
adc
lock
ret
dec
loopne
ja
add
mul
js
shl
push
in
sub
inc
inc
or
jmp
adc
popa
add
dec
cmp
mov
jno
adc
cmp
add
inc
addr16
push
mov
pusha
adc
dec
inc
inc
nop
xchg
xchg
mov
movs
pop
sub
adc
add
pop
inc
rsqrtps
fidivr
xchg
push
jmp
pop
xchg
or
push
or
add
test
out
mov
add
out
sub
adc
or
mov
lea
adc
adc
loop
das
cs
xchg
sbb
push
cmp
dec
push
cwd
scas
lds
push
cmps
in
push
pop
arpl
adc
daa
cmp
sub
and
pop
add
add
xchg
call
mov
add
dec
cmp
cmp
sub
xchg
sub
or
popa
mov
sti
rol
push
pop
push
inc
inc
xor
ins
adc
inc
test
inc
imul
pushf
fs
sbb
sbb
daa
ja
add
xor
pop
push
mov
push
mov
loope
and
rol
push
mov
sbb
and
jno
add
ja
pop
rcl
pop
lods
test
push
sar
aas
inc
add
xor
fdiv
sbb
in
repz
mov
cmp
xor
push
push
test
mov
push
mov
loopne
sub
xchg
fcomp
inc
xor
ror
or
ss
push
daa
adc
add
ss
jo
outs
add
pop
mov
into
scas
pop
lock
mov
xchg
mov
or
add
adc
sbb
add
shl
popa
dec
sbb
sbb
les
nop
sbb
or
fwait
pop
int3
das
jmp
inc
int3
ja
push
inc
add
cmps
jbe
push
addr16
push
push
sbb
adc
mov
rcr
fdiv
mov
push
push
xlat
mov
xor
xlat
or
or
fadd
test
push
add
jo
das
aaa
jnp
(bad)
lock
fist
cmp
ins
das
sbb
ja
push
fiadd
sbb
sar
add
xor
inc
inc
outs
fsubr
mov
xor
mov
les
and
inc
sbb
cmp
push
es
std
add
ror
xchg
and
into
or
sbb
mov
add
jo
xchg
retf
push
repnz
sub
jnp
imul
adc
les
push
je
inc
dec
mov
push
les
push
and
outs
dec
jmp
imul
inc
xlat
jo
test
lods
add
and
aad
mov
pop
mov
mov
retf
arpl
xor
adc
test
bound
arpl
int3
ret
and
sbb
lock
arpl
mov
xor
dec
pop
adc
xor
mov
bound
imul
(bad)
movs
scas
jge
adc
push
adc
lods
or
pop
add
stc
sub
pushf
fld
(bad)
mov
cmp
dec
mov
aaa
cmp
out
test
sbb
iret
(bad)
jno
sub
jg
int
nop
pop
stos
push
jge
and
add
push
pop
lods
fwait
sbb
add
rcl
ret
int3
pop
scas
jmp
faddp
clc
push
or
mov
fist
or
and
push
loope
xor
outs
stos
jo
test
lock
lods
adc
test
mov
mov
sub
pop
scas
lea
sub
std
scas
pushf
sub
and
ja
data16
test
fwait
push
sub
pop
pop
mov
fsubr
cmp
repnz
push
add
pop
pusha
xor
add
or
ror
mov
xor
xor
push
pusha
ins
ret
push
push
ret
jbe
je
call
add
pop
pop
push
sub
mov
mov
sub
xchg
pop
add
xlat
push
loopne
push
nop
es
jo
mov
mov
add
ja
outs
add
aaa
inc
clc
addr16
scas
jmp
push
addr16
pop
or
mov
adc
je
mov
mov
int3
ret
and
sbb
lock
mov
push
mov
xor
xchg
sub
test
or
out
sub
push
xlat
cmp
or
add
sub
scas
cmp
push
sub
xor
inc
push
push
test
push
stos
in
fist
inc
add
cwde
add
push
sub
pop
mov
out
jmp
lods
adc
dec
push
push
loopne
push
or
push
add
push
pusha
stos
add
je
jns
inc
xchg
ret
mov
ret
pop
je
nop
arpl
aad
mov
ins
mov
rcl
enter
rcl
sub
inc
push
push
js
in
and
mov
cmp
add
(bad)
call
sbb
pop
push
push
fwait
sub
add
mov
hlt
popa
push
popa
add
xor
ret
jo
out
push
and
inc
outs
or
mov
outs
ja
test
xor
fs
pop
sbb
or
dec
outs
dec
dec
cs
fldcw
(bad)
adc
and
inc
xor
outs
mov
nop
fs
mov
mov
add
adc
test
daa
mov
fist
mov
adc
pop
dec
test
mov
jne
ret
psadbw
xor
sahf
pushf
pushf
mov
sbb
mov
jl
mov
and
pop
mov
push
pop
dec
cmp
jo
pushf
inc
shl
and
lds
or
dec
call
inc
ret
or
jno
push
mov
jno
add
mov
jns
add
add
or
adc
add
and
adc
jmp
rcr
ins
fwait
add
mov
adc
inc
loope
add
sbb
xor
and
inc
icebp
jl
push
nop
mov
lock
inc
add
sbb
pop
outs
movs
js
es
dec
mov
add
addr16
js
sub
fmul
push
adc
inc
add
arpl
push
or
in
jns
mov
adc
sar
sub
pop
ds
dec
add
movs
xchg
mov
(bad)
(bad)
pop
xchg
out
adc
cmp
mov
or
cmp
pop
mov
lock
cmp
mov
outs
int3
test
jb
rol
out
stos
cmp
imul
fsub
(bad)
xor
ins
ret
add
dec
fld
or
xchg
sub
xchg
inc
push
rol
lods
adc
jg
or
pop
and
adc
adc
dec
dec
adc
cmp
ins
icebp
cmps
push
jae
sbb
cmpxchg
xor
aaa
adc
out
inc
mov
rol
adc
or
add
clc
push
sbb
adc
xchg
lea
jbe
sub
mov
adc
jno
scas
sub
lods
lock
int
mov
or
cmc
fsubr
mov
popa
je
adc
dec
mov
inc
arpl
imul
gs
clc
jg
adc
cmp
pop
cmp
inc
inc
lods
inc
xchg
daa
mul
(bad)
arpl
xchg
xchg
dec
sub
dec
inc
mov
sbb
jmp
sub
mov
stos
push
push
addr16
jne
xor
add
push
in
scas
cwde
inc
mov
sub
das
loop
pop
sahf
je
jne
sar
mov
adc
scas
lds
push
daa
or
adc
bound
daa
in
mov
mov
xor
sub
push
scas
data16
xor
sbb
jo
xchg
fadd
scas
jg
push
add
outs
push
add
out
cmp
pop
(bad)
ds
(bad)
mov
adc
scas
jo
cmps
test
aad
out
mov
push
add
xchg
cmp
push
pop
add
adc
xor
xor
stos
iret
add
aas
dec
test
mov
fs
inc
and
clc
or
pusha
je
loop
bound
adc
push
aas
and
and
shr
shr
rol
push
xor
mov
push
shl
(bad)
xchg
cmp
and
aaa
mov
(bad)
in
pop
pop
or
sub
(bad)
cmps
add
inc
xchg
sub
push
mov
mov
pop
mov
sbb
ins
adc
sbb
add
test
cmps
jo
rcl
bound
(bad)
cmp
push
or
ins
inc
das
bound
push
test
stos
sti
and
aam
jns
xchg
jne
pop
(bad)
movs
push
ror
dec
js
mov
fisub
lea
cmps
add
pop
int
mov
adc
lahf
mov
sbb
or
fadd
dec
inc
sub
pop
das
dec
push
add
jo
das
aas
scas
sbb
add
sbb
push
cmps
mov
pusha
fbstp
pop
loop
ins
sbb
push
add
xor
call
or
push
adc
pop
movs
rcl
and
fst
fldcw
stos
gs
and
push
sub
add
cmp
dec
cmp
sub
sti
shl
add
inc
or
aad
sub
add
push
mov
scas
dec
and
shl
add
adc
imul
jno
out
loop
cmp
fbstp
push
inc
stos
imul
push
and
inc
out
aam
test
out
test
fcom
out
inc
test
push
mov
pusha
xor
mov
stc
mov
mov
dec
rcl
jg
inc
push
jne
pop
inc
or
jb
les
jae
or
mov
and
loop
xchg
inc
add
mov
add
mov
inc
cmp
pop
and
xor
test
mov
fstp
ins
sub
and
pop
in
es
mov
aaa
shl
addr16
mov
mov
pop
push
daa
and
push
retf
pop
xor
sbb
add
inc
ja
popf
sbb
das
mov
ds
or
jl
push
test
or
jmp
push
arpl
sbb
add
mov
test
xor
lods
ja
popa
adc
dec
shl
xor
inc
pusha
dec
mov
ror
popa
dec
out
inc
sub
aas
jo
adc
loope
add
outs
xchg
clc
out
sbb
inc
push
push
xor
add
push
dec
mov
sub
mov
in
xor
push
add
xor
xchg
xchg
call
mov
push
sub
xlat
add
movs
(bad)
fwait
cld
pop
inc
add
sub
hlt
ffreep
hlt
mov
fld
sbb
xchg
arpl
mov
adc
add
hlt
pop
aaa
sti
fiadd
cld
es
add
jecxz
sahf
adc
sub
out
shl
mov
fsub
enter
lds
out
push
imul
sub
add
out
imul
aad
into
mov
iret
icebp
add
iret
std
push
and
jmp
mov
mov
cmp
lods
repnz
loopne
mov
push
add
and
stos
es
das
sbb
cmc
mov
cwde
pop
fst
adc
stos
rol
pop
les
outs
mov
push
dec
mov
pop
dec
inc
pop
enter
loopne
pop
and
pop
rol
scas
push
or
jns
or
add
xor
in
mov
fcom
lock
ret
imul
std
push
add
dec
neg
push
xor
dec
push
or
adc
push
(bad)
fs
ins
(bad)
sub
sub
call
fist
jl
push
push
or
xlat
enter
push
clc
or
adc
xlat
or
imul
inc
push
xor
adc
lock
push
and
cmp
xchg
and
leave
xlat
in
xchg
xchg
fld
sbb
sar
dec
mov
scas
fs
lods
(bad)
cmpps
in
fwait
in
push
out
test
mov
test
cmp
(bad)
jmp
mov
mov
popa
inc
dec
mov
mov
and
push
and
xchg
xchg
xchg
jno
mov
adc
inc
ret
fimul
and
add
cmps
cmp
or
jmp
sbb
fistp
xchg
fs
xchg
inc
ret
xchg
mov
ja
ret
xchg
enter
adc
xchg
or
fs
or
ds
xchg
cmp
and
mov
sub
xor
inc
xchg
push
inc
mov
adc
test
dec
and
dec
dec
mov
mov
adc
pop
cmp
mov
push
fadd
and
jae
or
shl
push
ins
adc
lods
imul
adc
bound
push
lds
das
pusha
inc
ret
xchg
sub
push
pop
ror
push
xchg
xchg
and
lock
xor
pop
adc
xchg
ror
mov
fimul
in
or
mov
loope
mov
dec
push
es
sbb
test
dec
sbb
adc
mov
test
push
mov
sbb
in
mov
add
and
push
mov
push
addr16
in
sub
les
push
or
push
adc
inc
dec
ja
jae
imul
mov
psubd
ds
xlat
jecxz
add
add
jo
mov
pop
aam
das
nop
bound
sbb
sub
pop
cwde
lock
popa
add
pusha
mov
cdq
sbb
mov
sub
lahf
pop
test
inc
inc
loope
or
out
xor
push
fadd
or
inc
imul
pop
loop
mov
inc
fstp
ds
pop
(bad)
(bad)
pop
pop
inc
pop
str
sbb
sbb
out
xchg
xchg
jge
add
inc
addr16
cli
mov
jne
jo
fiadd
mov
and
inc
pop
and
out
cmps
lahf
retf
and
shl
mov
inc
(bad)
sub
add
jno
add
std
sub
add
or
add
pop
cmc
imul
inc
push
out
mov
popa
test
in
rol
pop
pop
les
loop
call
mov
lods
call
xlat
mov
cmps
sbb
push
(bad)
jo
imul
push
cmp
mov
inc
push
mov
daa
out
or
xor
xor
pop
xor
push
ins
dec
jbe
sbb
sub
inc
sub
out
lods
adc
out
pop
pop
mov
(bad)
aas
pop
frstor
pop
mov
mov
lods
add
push
add
daa
pop
dec
dec
push
je
pop
add
push
adc
cmp
repz
xor
adc
lock
(bad)
dec
inc
jno
and
loopne
adc
mov
push
xchg
ret
add
lds
popaw
jne
je
push
push
mov
inc
fisubr
push
out
jno
xor
leave
push
push
aas
loopne
xchg
pop
div
jmp
ds
add
sbb
shl
xchg
add
push
jmp
pop
pop
pop
sbb
addr16
mov
xor
(bad)
out
lods
inc
push
scas
cmps
push
or
pop
add
imul
cmp
adc
and
adc
jnp
rol
sbb
sbb
cmps
push
or
adc
jg
add
pop
pop
lods
test
rcr
mov
cs
out
xchg
and
and
icebp
pop
sub
mov
loopne
add
add
mov
jno
dec
pop
popf
add
jo
mov
push
pop
pop
mov
sub
push
frstor
ins
dec
add
add
cmp
push
outs
test
aas
sti
shl
xchg
dec
push
or
xchg
push
aas
icebp
or
icebp
daa
jo
push
loopne
jmp
outs
sub
int3
dec
jmp
xlat
pop
xor
dec
or
dec
nop
or
sbb
or
das
dec
pop
add
dec
cdq
jnp
(bad)
lock
pop
neg
push
pusha
es
das
xor
ja
push
adc
test
sbb
rol
fld
add
shl
xor
(bad)
sbb
sbb
add
scas
add
jl
sub
xchg
sub
or
out
or
or
call
add
add
arpl
xor
push
push
out
xlat
lock
icebp
mov
add
out
push
popa
ja
in
inc
test
sub
or
test
imul
mov
in
in
push
add
lds
add
idiv
in
fsub
daa
or
push
inc
xchg
xor
mov
push
test
je
icebp
push
push
cmp
mov
push
mov
loope
mul
pop
push
sub
mov
shr
enter
adc
pop
ins
jge
push
add
inc
scas
adc
jg
call
mov
add
loopne
mov
xor
das
fimul
pop
adc
push
xlat
inc
add
push
int
cmps
ins
and
add
mov
stc
or
cmp
and
movs
int
sub
stos
add
push
inc
add
gs
fwait
sbb
pop
adc
cs
or
xor
push
pop
out
or
jmp
push
and
sbb
stc
sbb
stc
daa
jo
xor
mov
call
xor
lods
out
pop
cmps
cmp
(bad)
dec
cmps
dec
ret
out
inc
sub
movs
pop
lods
rol
mov
mov
inc
data16
cwde
es
das
adc
daa
(bad)
push
outs
jo
paddusw
adc
or
or
gs
add
dec
jo
mov
jae
xor
jo
cs
(bad)
dec
shl
xchg
(bad)
mov
add
imul
push
movs
lea
adc
bound
outs
jno
add
imul
add
cmp
idiv
xor
in
je
mov
sub
out
push
sbb
mov
xchg
push
popa
xchg
sub
call
loop
(bad)
(bad)
call
ret
and
je
stc
xor
sar
inc
xor
rol
push
xchg
shl
mov
mov
addr16
adc
dec
push
sbb
test
sbb
pop
ja
in
rol
imul
es
das
adc
add
addr16
addr16
adc
push
cs
pop
call
inc
ret
pop
addr16
xchg
(bad)
pusha
loopne
clc
gs
gs
jno
rcl
or
mov
gs
and
push
icebp
add
iret
cmc
sbb
add
ret
out
or
rcr
in
in
cmp
aam
jmp
push
xor
adc
cmp
imul
out
push
mov
movs
push
mov
push
fwait
sub
inc
or
popa
xchg
push
mov
dec
or
popa
xor
popa
ja
(bad)
xlat
and
imul
xchg
pusha
js
inc
inc
jb
sahf
sub
sub
int3
sar
inc
mov
cs
adc
(bad)
cmc
xchg
jno
push
(bad)
xor
pop
pop
and
iret
sub
adc
mov
adc
test
ins
jb
pop
mov
jge
sbb
icebp
push
scas
in
fs
jo
arpl
in
cmp
test
stc
cmps
sub
push
mov
pop
ins
push
mov
sub
cmp
sbb
aad
cwde
add
or
jo
push
inc
leave
or
or
sbb
dec
inc
jno
push
cmp
xchg
jecxz
push
lock
or
cmp
cld
or
and
call
sahf
lods
lock
and
jae
daa
sbb
pop
jmp
add
lods
dec
add
fs
loope
add
pusha
mov
pop
pop
add
dec
pusha
add
inc
repnz
mov
xchg
xor
sbb
out
add
or
les
fild
repz
adc
and
add
fidiv
sub
dec
or
(bad)
arpl
jl
sbb
push
inc
add
sbb
inc
jns
mov
xor
pop
mov
dec
jne
mov
xchg
jl
ret
sbb
test
loopne
sbb
call
rcl
sbb
cmp
adc
xor
cwde
data16
out
out
ins
xor
push
ins
in
imul
cmp
or
add
push
xor
jmp
pop
cmp
ror
jge
xchg
jo
adc
xchg
addr16
add
inc
sub
inc
mov
cmp
ret
(bad)
ins
jae
mov
sbb
lea
pusha
ja
loope
add
or
lea
cwde
add
push
pop
sub
sub
add
rol
fdiv
in
cmp
push
add
inc
inc
and
adc
outs
inc
dec
or
cmp
je
adc
jbe
test
push
dec
je
mov
add
mov
in
data16
clc
mov
sbb
or
push
ja
(bad)
or
jae
imul
xchg
(bad)
stos
dec
setnp
inc
inc
inc
sahf
imul
dec
add
cld
lock
mov
inc
mov
cdq
pop
or
ficomp
in
add
in
adc
movs
xor
outs
test
adc
push
jns
inc
jae
adc
aaa
je
push
aaa
dec
fistp
pusha
rol
fs
outs
ds
ficom
clc
add
and
ins
int
loope
je
sbb
cld
out
xor
jge
lods
sub
push
inc
jnp
adc
or
push
push
(bad)
dec
arpl
jl
add
sbb
mov
mov
fadd
mov
cmp
loopne
out
push
lahf
ja
imul
cmps
sub
cmc
inc
mov
jns
pop
pop
adc
sub
or
sbb
adc
sub
retf
jns
pop
repnz
jae
jo
adc
add
mov
jns
jp
inc
jno
mov
add
mov
cmp
(bad)
push
xor
or
sbb
push
gs
out
add
mov
stos
inc
mov
out
sub
loopne
push
(bad)
pop
xor
jns
dec
add
sub
shr
xchg
mov
add
push
pop
ja
mov
push
inc
pop
rol
pop
shl
mov
fwait
stos
std
ja
fcmovb
or
jae
pop
fs
add
xlat
xchg
(bad)
daa
aaa
xlat
outs
add
cmp
or
or
push
or
sar
shl
sbb
jl
xor
das
or
inc
cwde
sar
cmps
nop
dec
lock
sbb
aam
push
jge
add
add
adc
push
mov
adc
and
push
sbb
(bad)
jg
push
adc
and
mov
xor
push
aad
jae
mov
pop
fsubr
mov
and
and
push
das
imul
push
or
push
xchg
cmc
test
add
loopne
scas
jo
mov
repz
pop
pop
stc
dec
rcl
dec
xor
xor
xchg
out
mov
nop
je
pusha
mov
imul
mov
dec
inc
and
pop
shr
cdq
sub
push
push
jg
pop
or
jnp
mov
push
jno
push
push
xchg
mov
adc
loopne
cld
pop
pop
loop
jne
mov
pop
pusha
shl
and
mov
push
and
cmp
sbb
pop
pop
adc
shr
xrelease
sbb
sub
add
or
call
add
ja
mov
fbstp
xchg
loopne
or
inc
sbb
sub
inc
stos
inc
add
cmp
inc
xchg
outs
or
fucomi
rol
sbb
das
mov
inc
mov
pop
fucom
xchg
inc
shr
or
or
pop
or
sub
lods
fisttp
lds
pop
mov
add
call
aaa
add
cmp
lds
lahf
push
push
(bad)
jmp
cmp
out
adc
pop
push
lahf
mov
mov
arpl
add
loop
or
outs
sbb
rcr
dec
lods
out
call
xor
inc
iret
add
cmp
sub
aas
outs
mov
call
inc
add
add
scas
jo
xlat
dec
add
(bad)
push
inc
push
or
mov
sub
sub
scas
in
sub
adc
mov
imul
adc
mov
or
mov
call
or
cmp
mov
xchg
lds
pop
mov
add
test
add
ja
jne
xor
mov
mov
mov
iret
push
cmps
adc
inc
nop
test
adc
pop
in
mov
mov
push
clc
call
inc
push
sbb
mov
fimul
repnz
stos
repz
adc
or
mov
jmp
dec
add
pop
push
(bad)
xlat
ja
mov
inc
mov
push
ja
fst
out
mov
neg
ror
or
xchg
pop
ja
shl
aam
mov
xchg
xchg
push
xchg
pop
adc
mov
or
jne
push
enter
vmwrite
mov
pop
imul
sub
jno
jp
mov
pop
push
scas
rcr
push
or
shl
jmp
or
xchg
pop
call
pop
pop
and
out
add
dec
sar
adc
es
jl
sub
or
sbb
xor
cld
aam
or
test
jbe
sbb
jmp
shl
inc
dec
leave
lods
ret
inc
lea
into
enter
xor
daa
daa
mov
packuswb
xchg
daa
inc
(bad)
mov
pushf
std
(bad)
das
jo
pop
xchg
sbb
adc
mov
cmp
adc
lea
cmp
push
popa
pop
pushf
jno
push
and
test
add
pop
push
add
(bad)
cmp
inc
shr
fs
or
pop
fsubr
xchg
sub
push
hlt
dec
data16
loopne
sbb
cmc
pop
sub
pop
fs
jo
inc
mov
mov
repz
dec
pop
add
fsubr
test
mov
rcr
sub
or
ret
add
add
cmps
or
sbb
and
push
test
sbb
dec
mov
loopne
pop
test
cmp
mov
xchg
outs
fisub
and
loopne
pop
je
rol
imul
push
sub
stos
cmp
int
add
and
mov
or
loopne
callw
ds
sub
test
and
xor
loope
mov
sbb
daa
mov
test
sbb
xchg
pop
daa
adc
add
rol
pop
test
ret
daa
test
dec
test
scas
sbb
add
xchg
push
cwde
es
psraw
aad
daa
push
(bad)
push
repnz
test
push
add
in
or
btr
and
jb
add
add
das
adc
stc
xor
or
das
mov
fwait
loopne
add
dec
cdq
mov
cdq
sub
cmps
pop
retf
or
pop
mov
fist
popa
sti
add
pop
mov
mov
xor
retf
cmc
dec
popa
push
je
adc
xchg
sbb
arpl
mov
mov
dec
or
movs
loope
dec
lock
jae
outs
and
xchg
lods
xlat
dec
cmp
sub
not
loopne
cli
mov
pop
jbe
retf
mov
fdivrp
add
popw
add
adc
je
mov
mov
xchg
push
or
or
push
sub
loope
rol
sbb
pop
std
jge
push
sbb
cmc
add
pop
jbe
xchg
pop
add
adc
(bad)
mov
sbb
add
adc
push
jne
out
mov
push
aas
pusha
push
aad
or
sbb
dec
mov
sti
jnp
sub
mov
test
mov
xor
loop
sbb
dec
inc
jo
add
sub
jmp
add
maskmovq
ret
and
and
add
aaa
inc
inc
pusha
call
mov
adc
sbb
sti
(bad)
mov
pop
cmp
mov
inc
stos
inc
ja
les
cmp
push
popa
xchg
arpl
push
pop
cmp
inc
(bad)
js
je
xchg
or
push
mov
jo
mov
add
bound
retf
scas
jmp
push
add
push
adc
or
inc
push
(bad)
push
lods
mov
jge
fisubr
or
push
dec
adc
jns
add
adc
shl
cmp
inc
pop
lds
cld
add
sahf
ss
jno
mov
sahf
push
js
or
mov
in
sbb
and
push
loopne
push
pop
add
clc
movhps
add
push
clc
inc
mov
dec
push
push
fild
push
add
call
test
fimul
sub
sub
sub
sbb
into
inc
add
or
mov
lods
rol
add
ja
push
sub
mov
lock
push
sub
jge
fbld
adc
test
add
and
call
add
jo
pop
add
mov
iret
out
mov
inc
xor
add
nop
pop
add
and
pop
adc
pop
mov
std
outs
dec
mov
ret
add
xchg
xchg
jg
mov
ret
frstor
pop
das
jp
scas
mov
xchg
cmp
lods
pop
xchg
push
mov
sbb
adc
and
daa
mov
inc
xor
aas
fsubr
mov
pop
cwde
sub
aad
push
adc
data16
adc
sub
ret
sub
dec
(bad)
push
cmp
or
add
hlt
pop
jmp
mov
add
mov
push
add
and
push
movs
cmp
fst
and
inc
push
add
xchg
call
push
iret
push
popa
push
sub
dec
mov
add
in
stos
out
mov
adc
jns
push
pop
push
pop
mov
and
adc
push
mov
movs
pop
out
test
cmps
dec
xor
dec
push
inc
jo
adc
enter
fwait
test
cld
push
add
add
pop
mov
push
jecxz
pop
or
test
mov
call
loop
inc
xlat
jne
push
in
je
scas
sar
and
pop
or
dec
loopne
pop
pop
sysret
xchg
and
jo
xchg
sti
xchg
add
lds
mov
cmp
inc
cmps
jg
test
dec
es
jmp
push
xchg
adc
xchg
or
scas
in
fsubr
push
add
fucomip
(bad)
sbb
xchg
inc
ret
dec
fwait
or
call
jge
loopne
jne
cmp
pusha
je
pop
add
jns
xchg
mov
add
jne
sbb
inc
pop
xchg
ficom
ffreep
fwait
mov
div
xor
data16
ror
push
cmp
sbb
add
loop
sbb
dec
mov
ror
call
mov
mov
and
xchg
rdtsc
xchg
adc
jmp
cmp
mov
add
inc
cmps
mov
adc
fisttp
ror
lods
sbb
and
pop
add
(bad)
mov
psllw
dec
dec
retf
dec
xchg
outs
(bad)
mov
and
aas
cmps
or
test
cmp
mov
cmp
push
adc
das
aam
inc
cmp
xchg
sub
or
sub
or
and
jno
jmp
or
jecxz
push
fwait
and
out
sbb
adc
push
inc
ret
mov
or
jl
add
mov
xor
das
adc
xor
mov
pusha
and
sub
push
pop
sub
and
push
inc
or
test
int3
push
adc
xor
dec
add
inc
ret
test
cmp
les
adc
add
inc
add
mov
lea
loopne
js
cmp
dec
sub
and
bound
ror
adc
add
loope
adc
jge
and
adc
into
pop
xor
loope
sbb
adc
mov
sub
sbb
add
add
sbb
add
adc
mov
pop
sar
cmp
mov
cmc
mov
adc
iret
sub
add
clc
push
jo
ds
mov
inc
loop
jecxz
clc
or
adc
int
movs
jae
dec
lock
js
xchg
pop
les
out
add
les
clc
add
sub
mov
pop
add
push
pop
leave
and
xchg
aad
xchg
xchg
pop
push
and
mov
sub
movs
add
fdivr
add
mov
in
add
adc
xchg
cwde
jbe
push
imul
sub
xchg
gs
out
push
inc
mov
xchg
and
retf
rcr
mov
xor
push
sub
mov
jo
xor
push
jbe
call
inc
adc
adc
mov
lea
jmp
xor
mov
mov
push
dec
imul
repnz
push
push
test
push
add
cmp
cmp
int
adc
jg
or
pusha
add
out
pusha
popaw
jne
je
loopne
adc
mov
cli
inc
add
sub
add
mov
add
not
push
mov
add
inc
adc
or
fs
and
pop
jo
mov
wbinvd
adc
adc
out
or
int3
mov
adc
mov
shr
lar
cmp
fcom
mov
pop
sbb
add
adc
sbb
push
aaa
sbb
loopne
xchg
sbb
int
adc
inc
pushf
mov
das
and
add
in
pop
shr
jnp
int
mov
outs
lods
shl
pop
shl
push
movs
into
push
adc
or
imul
xchg
scas
add
popa
xor
pusha
setl
pop
and
movs
mov
add
out
cmp
dec
test
aad
retf
mov
cmps
clc
mov
push
inc
clc
xor
arpl
aad
sti
jnp
les
mov
das
jb
add
push
sbb
out
pop
(bad)
iret
pop
cmp
ins
push
add
adc
jg
je
ret
add
aaa
adc
push
fsub
mov
sbb
mov
mov
call
les
sub
or
inc
inc
cmp
les
mov
or
add
inc
test
inc
or
xchg
inc
xor
add
add
js
(bad)
push
inc
mov
and
sub
in
mov
xchg
sub
mov
ror
push
pop
cwde
jo
(bad)
xor
shr
mov
ror
sub
in
mov
sub
mov
or
sub
shr
mov
wrmsr
mov
(bad)
lock
push
dec
(bad)
ror
inc
cs
fwait
jecxz
mov
mov
sbb
repz
rol
sbb
dec
inc
sahf
pushf
imul
ja
daa
daa
and
ret
pop
mov
daa
jmp
dec
leave
enter
mov
lds
in
leave
leave
leave
gs
or
aas
outs
(bad)
cmp
pop
out
arpl
das
sub
xor
cmp
dec
cmps
(bad)
xlat
test
mov
jle
add
aas
dec
or
mov
xor
xor
sbb
aad
push
mov
daa
xchg
xchg
push
add
ret
rol
iret
cli
icebp
rcl
dec
jae
not
add
xchg
mov
inc
push
popa
jg
sub
add
jg
pop
or
sbb
mov
xor
loopne
test
jns
or
xor
dec
dec
test
push
sub
jmp
cmp
outs
or
call
xor
adc
and
push
sub
push
dec
mov
sbb
in
enter
test
sbb
enter
repnz
jb
xchg
adc
lods
add
or
dec
mov
add
xchg
ss
call
and
ins
das
call
int
inc
pop
xor
bound
dec
jae
inc
or
outs
iret
push
in
add
push
cmp
jno
jno
fiadd
clc
add
data16
add
push
ret
mov
lea
inc
in
add
pop
push
jne
push
inc
jecxz
xchg
loopne
xor
in
jle
sbb
mov
fist
out
or
pop
xchg
lea
aas
js
sbb
adc
scas
dec
add
push
sar
das
pop
xor
popa
mov
shl
bound
dec
gs
xor
arpl
cmp
pushf
inc
pop
jae
pop
cmp
dec
jg
daa
pusha
aas
shr
fs
add
popa
pop
and
mov
mov
xor
es
xor
cmp
add
mov
std
call
xor
adc
xchg
loope
popw
dec
mov
into
imul
add
push
xor
aaa
js
retf
dec
push
fisttp
in
dec
sbb
fistp
sub
or
loop
cmp
jb
dec
or
sbb
adc
and
mov
pop
fs
mov
xchg
dec
inc
loopne
cmp
sub
mov
add
xor
imul
ret
xor
stc
sub
pop
int3
mov
mov
in
pop
es
and
sub
in
call
add
add
cmp
pop
mov
mov
addr16
sbb
add
push
enter
dec
add
mov
pop
pop
xor
les
or
push
iret
xchg
frstor
add
or
add
rol
inc
adc
sbb
outs
sub
out
inc
ret
shr
cmp
sub
inc
jne
pushf
and
addr16
int
inc
sub
xchg
push
fild
call
push
add
fld
pop
cmp
dec
lahf
xor
jp
jl
rol
add
fidivr
pusha
inc
pop
add
fwait
outs
pop
mov
xor
adc
jo
jne
push
mov
sbb
retf
pop
nop
das
scas
pop
or
fadd
lahf
add
fiadd
fs
lds
xor
or
xlat
sbb
mov
xchg
pop
dec
cld
mulps
add
inc
dec
inc
mov
cwde
add
inc
dec
inc
sub
inc
jg
mov
and
(bad)
or
jae
(bad)
adc
add
inc
push
test
xchg
mov
cmp
jle
mov
add
pandn
aaa
inc
adc
mov
rcl
jmp
fild
imul
popa
(bad)
dec
add
outs
aas
loopne
cwde
or
add
fld
(bad)
enter
je
fnstcw
pop
aam
repnz
jg
stos
or
(bad)
and
adc
mov
(bad)
or
or
xor
pop
add
scas
pusha
jo
shl
jecxz
jbe
adc
in
add
int
add
and
cmps
ins
into
scas
mov
dec
adc
push
xlat
push
jo
jne
add
into
rcl
ror
xchg
retf
fisubr
shr
mov
cmps
push
add
outs
loopne
or
rol
mov
das
dec
push
pop
fadd
push
les
clc
dec
out
cmp
dec
addr16
fiadd
fdivr
sub
lahf
pop
lods
fwait
and
clc
lods
mov
popf
fsubr
sbb
and
mov
loope
iret
das
cs
popa
fisttp
jnp
jo
mov
add
pop
xor
aaa
enter
jge
outs
fcom
push
mov
push
popa
shr
mov
sub
aaa
xor
(bad)
fisubr
and
nop
not
push
fmul
loopne
aaa
enter
add
mov
or
xor
or
aaa
pushf
lock
sub
push
(bad)
loopne
or
loope
pop
adc
fs
aad
inc
jp
jnp
out
shl
xchg
fistp
ss
stos
push
jnp
mov
fs
fild
xor
in
pop
fnstcw
cmp
jns
mov
mov
cmp
sahf
pushf
pushf
pushf
gs
call
dec
inc
dec
ins
movs
in
cs
ret
aas
fisttp
jae
movs
dec
dec
rcr
ror
or
inc
adc
es
add
call
xlat
in
push
cmp
pusha
cmp
pusha
dec
or
pop
les
jno
push
adc
xor
outs
mov
inc
xor
xor
popf
pop
add
repnz
mov
mov
pop
inc
cmp
bound
push
xchg
mov
ins
push
cdq
push
mov
outs
dec
dec
shr
(bad)
pop
cld
adc
xor
or
inc
jae
sbb
sub
rcr
xchg
add
add
or
or
or
mov
das
mov
mov
pop
sbb
and
clc
call
xor
rol
and
inc
add
push
push
pop
jno
xor
add
pop
fs
rol
push
add
pop
sbb
gs
xor
pop
lds
add
or
jo
repz
inc
add
or
repz
add
push
mov
xchg
and
inc
and
fistp
loopne
and
dec
fld
add
cmp
cs
dec
es
dec
pop
int
or
cmp
add
dec
and
sub
mov
or
push
sub
inc
(bad)
mov
cmp
adc
adc
daa
add
inc
adc
(bad)
jge
inc
adc
inc
adc
or
adc
or
mov
xchg
dec
and
mov
mov
push
shr
or
sub
mov
push
fidivr
fcomp
(bad)
xchg
loopne
or
xchg
inc
add
adc
sbb
push
add
adc
sbb
mov
inc
cs
mov
stc
or
inc
add
sub
stos
dec
fadd
lahf
or
lahf
mov
push
add
pop
lahf
pusha
ret
mov
daa
lahf
mov
add
pusha
jb
fisubr
cdq
ret
pop
pop
in
stos
adc
fld
add
or
push
scas
ror
aad
mov
(bad)
sub
nop
and
ror
sub
pop
mov
rcl
rcl
add
and
mov
push
loope
xor
pop
pop
sbb
push
lahf
ins
ror
sub
test
retf
div
(bad)
movs
sub
or
mov
pop
inc
aaa
push
sub
mov
dec
nop
dec
dec
push
add
jns
cmps
add
pop
push
dec
adc
mov
pop
add
fadd
jne
add
xchg
jg
shl
mov
das
ja
push
add
pusha
xor
rcr
xor
ret
stos
mov
jecxz
aaa
nop
mov
(bad)
or
jno
adc
add
add
imul
add
adc
sub
adc
ja
add
inc
dec
pop
mov
imul
mov
pop
mov
cmps
push
push
pop
inc
inc
sub
js
inc
ror
sbb
ret
or
pop
add
xor
xor
add
imul
pop
mov
fldenv
add
int
mov
test
into
push
add
adc
push
sub
push
addr16
(bad)
and
add
sub
or
dec
adc
out
test
in
xor
push
test
out
neg
mov
call
das
icebp
push
les
jbe
mov
rcl
add
mov
and
rcr
or
inc
adc
and
fstp
sbb
xchg
adc
push
stos
jno
dec
jl
or
push
int3
xor
sub
das
ret
push
xlat
(bad)
daa
ja
jmp
(bad)
adc
pop
call
jl
mov
jnp
pushf
loop
jmp
fidiv
mov
dec
push
and
or
jo
inc
mov
or
and
mov
inc
xor
add
lods
imul
rol
and
mov
jb
xor
sbb
out
or
inc
or
(bad)
cmp
inc
ret
hlt
bswap
leave
leave
enter
movs
call
xor
or
jb
xor
daa
out
pop
test
cmp
sbb
lock
stos
repz
pushf
mov
icebp
pusha
test
iret
push
repnz
and
dec
ret
jmp
daa
mov
adc
ja
frstor
jae
ficom
adc
punpckhdq
mov
sbb
push
inc
push
or
dec
push
pop
push
movs
push
dec
or
push
jnp
add
dec
jno
and
in
inc
adc
inc
adc
test
adc
nop
add
sbb
adc
test
inc
dec
sbb
pop
ins
adc
inc
loopne
stos
pop
test
mov
or
cmps
and
ja
test
pushf
jbe
pusha
mov
rol
out
xor
ud2
inc
pushf
push
inc
rol
add
jge
xor
fwait
gs
mov
dec
inc
rcr
sti
xor
loopne
or
add
loopne
call
aam
adc
and
add
adc
add
push
inc
add
adc
push
ins
jae
sbb
sbb
push
add
add
cmps
dec
dec
push
not
fnstenv
dec
add
cwde
and
add
adc
xchg
inc
in
adc
jo
inc
xchg
mov
push
mov
(bad)
or
inc
inc
and
rol
adc
mov
dec
rcl
mov
dec
aaa
inc
or
mov
mov
ins
jo
adc
push
mov
adc
add
cmp
loopne
inc
inc
shl
or
inc
add
test
adc
push
jge
inc
inc
shr
inc
adc
pushf
ins
inc
inc
add
or
sbb
or
xchg
inc
xchg
and
and
daa
mov
test
xor
xor
rol
dec
pushf
cmp
sar
outs
(bad)
div
fcmovbe
pop
shl
in
mov
fsubr
pop
inc
pop
or
xchg
xchg
inc
add
inc
rcl
imul
rol
cwde
adc
ins
out
inc
shl
jmp
cmc
sti
xchg
or
shl
cmp
loopne
add
outs
pop
imul
stc
shr
and
push
imul
add
pop
divps
jno
(bad)
nop
stos
inc
xchg
mov
cmp
push
add
or
add
jecxz
pop
out
jmp
xlat
pop
xor
sub
or
xchg
outs
adc
inc
into
mul
pop
or
and
movlps
aaa
xor
xlat
inc
pusha
adc
sub
jb
in
ror
sub
push
pop
lods
lock
std
sbb
jne
ins
loopne
aaa
sbb
cmp
fistp
add
jne
je
outs
add
push
mov
arpl
imul
pop
xlat
adc
or
js
add
gs
pop
jnp
push
add
adc
push
xor
jae
shl
pop
push
ds
mov
aas
jp
dec
data16
mov
fsubr
jecxz
push
and
mov
or
pop
es
call
daa
push
adc
pop
pusha
data16
mov
xchg
xor
enter
scas
xor
push
cmp
add
adc
test
push
iret
ds
es
ror
pop
(bad)
sbb
int3
inc
lock
aaa
pop
outs
and
inc
mov
data16
pushf
inc
dec
sub
stos
es
add
imul
push
dec
cmps
sbb
add
cdq
jle
and
ja
int3
add
xchg
rol
xchg
aas
dec
mov
or
dec
xor
sub
pushf
rcr
pop
sub
pop
into
int3
ret
daa
cmp
dec
shr
ss
das
cmps
add
sub
and
jo
pop
mov
sbb
ret
outs
xchg
aas
test
inc
sub
dec
pushf
sub
dec
inc
sub
iret
test
shr
lahf
scas
repz
ret
shl
xchg
cmps
mov
xchg
xlat
xor
pop
out
or
sbb
cmps
ss
inc
and
and
add
call
pop
iret
push
mov
xor
test
je
test
je
cmp
cmps
outs
sub
push
test
and
mov
pop
mov
adc
push
xchg
rcr
mov
add
into
pusha
fs
pop
or
jmp
pop
jmp
sbb
mov
push
push
jmp
push
jne
das
mov
call
jmp
test
je
mov
jmp
jnp
jmp
and
cmp
and
mov
dec
(bad)
scas
(bad)
fild
mov
ss
xor
push
mov
je
pop
adc
push
mov
add
sti
out
mov
ret
dec
mov
adc
and
inc
clc
dec
fnstcw
mov
mov
xor
mov
mov
(bad)
div
ins
push
or
(bad)
movzx
sbb
rcl
shl
push
push
push
shr
pusha
xor
(bad)
sub
call
add
out
int3
xor
mov
add
mov
push
jl
pop
gs
xor
mov
mov
adc
xor
out
clc
lock
cld
lock
pop
sbb
push
adc
push
call
inc
jmp
jmp
sub
sbb
inc
or
je
mov
in
mov
inc
xchg
inc
fcom
(bad)
in
test
or
loopne
push
cs
in
(bad)
mov
push
dec
ins
add
lods
popf
mov
push
jb
inc
ins
rcr
cwde
or
rcr
pop
rcl
fidivr
jne
mov
pop
call
push
mov
jo
sbb
dec
inc
sbb
push
jo
scas
and
pop
pop
cmp
mov
dec
rol
adc
add
sbb
xchg
sub
adc
mov
push
or
ja
mov
jb
mov
cdq
and
inc
mov
add
and
in
ficomp
inc
dec
mov
adc
pop
and
mov
in
in
test
mov
or
inc
fist
fistp
aaa
and
lea
movs
add
add
cmp
push
inc
mov
iret
mov
fdiv
inc
or
or
fs
or
jmp
or
mov
xchg
pop
sbb
xor
repnz
push
sbb
data16
sbb
push
sbb
popf
dec
cmp
sbb
sar
lods
mov
inc
shl
call
push
shl
xchg
mov
pushf
cld
add
adc
clc
sbb
les
jbe
sbb
pop
outs
in
push
sbb
jge
mov
test
xchg
outs
mov
jle
jne
adc
inc
push
or
ret
sbb
cld
ds
cwde
pop
mov
es
or
inc
adc
adc
fdivr
xchg
adc
push
aam
lock
or
or
cli
sub
inc
and
je
lock
adc
and
xor
mov
xor
lock
lods
(bad)
out
jp
dec
enter
int3
add
(bad)
dec
daa
cli
adc
sub
adc
or
(bad)
jge
jo
sbb
bnd
out
or
pop
lock
mov
dec
add
push
add
or
mov
lea
push
push
loop
cmp
mov
mov
(bad)
or
data16
mov
test
into
aam
sub
push
add
inc
ins
rol
mov
ja
mov
das
shl
dec
or
inc
mov
rcr
cdq
fisttp
retf
(bad)
adc
aaa
std
pushw
clc
adc
nop
js
hlt
mov
lea
dec
jo
ds
int3
add
cld
test
fist
inc
cmp
hlt
dec
or
push
or
jne
out
lea
dec
hlt
cld
dec
inc
or
add
fs
xchg
scas
inc
or
mov
lods
test
mov
ss
cmps
mov
fdivr
jb
or
div
jo
bound
and
mov
inc
aas
repnz
or
pop
lahf
dec
adc
jp
pusha
ror
adc
sub
(bad)
imul
movs
xor
mov
push
movs
push
bswap
adc
pop
push
outs
ror
pop
or
or
xchg
cwde
sbb
aas
aaa
jns
mov
push
in
add
in
test
or
push
push
hlt
test
dec
shl
outs
mov
ds
sti
addr16
cwde
es
cld
cld
push
mov
lea
jae
mov
loopne
mov
cmp
cli
xchg
mov
mov
pop
aam
or
pop
sbb
lods
fst
and
mov
aaa
jbe
inc
xlat
out
retf
add
dec
xchg
dec
push
paddq
or
aam
mov
in
mov
add
xchg
fstp
inc
ficom
cli
add
imul
stos
cmp
push
adc
xchg
int3
loope
test
push
repnz
xor
xchg
pop
test
(bad)
(bad)
inc
arpl
dec
gs
les
and
dec
cmc
mov
es
scas
or
sub
test
xor
mov
dec
pusha
cmp
outs
nop
mov
call
jecxz
jmp
xor
mov
push
mov
sub
jmp
pop
aaa
loop
push
ret
add
loopne
lahf
nop
lahf
sub
or
push
add
clc
jb
add
mov
mov
ror
pop
xor
or
rcr
and
pop
(bad)
popf
fcmovb
call
fst
(bad)
or
xchg
bound
pop
cmps
xchg
mov
scas
(bad)
lock
(bad)
adc
in
push
out
and
je
fldl2t
inc
fsub
xor
test
jmp
aas
cwde
in
add
inc
push
or
call
fld
cs
mov
repz
jae
xor
adc
xchg
push
gs
mov
clc
push
adc
pop
push
in
mov
or
or
hlt
mov
pusha
dec
call
add
inc
hlt
sub
call
(bad)
push
jb
mov
lock
test
dec
push
cmp
dec
nop
call
jns
fidiv
push
push
test
in
call
fadd
push
fmul
or
add
xchg
test
add
push
xlat
dec
pop
rol
xchg
jl
cmp
pop
stos
pop
push
sbb
mov
dec
add
(bad)
imul
(bad)
sbb
mov
sub
sbb
inc
into
mov
scas
call
repz
dec
xor
call
or
push
adc
xlat
repnz
icebp
test
mov
pop
out
adc
in
mov
retf
mov
mov
and
cmp
pop
imul
out
sub
xor
push
push
xor
sar
mov
pop
cmp
inc
mov
or
add
inc
push
cmp
outs
mov
xor
(bad)
mov
add
and
cmps
aaa
or
out
sub
add
xor
loopne
sbb
pop
mov
cmp
jne
push
iret
js
mov
test
push
fst
imul
push
mov
ret
jmp
and
out
push
push
push
mov
xor
mov
sar
movs
or
ret
call
ret
add
sub
jae
pop
das
and
popf
add
cs
popa
sbb
inc
xchg
adc
daa
les
aas
jb
add
xor
ins
pop
outs
popf
sbb
cdq
cs
mov
xchg
push
mov
call
mov
cmp
push
aas
and
push
add
sub
cmc
and
sub
and
and
test
enter
mov
scas
sahf
mov
aaa
inc
adc
shl
sahf
loop
or
jmp
mov
call
cwde
push
mov
xor
cs
aas
enter
js
movs
jp
rol
sahf
cmps
frstor
test
push
in
push
push
lock
push
lock
js
sbb
push
and
mov
clc
les
sbb
retf
pop
or
scas
fsubr
or
or
push
std
adc
mov
addr16
dec
add
pushaw
(bad)
sbb
lock
lock
mov
enter
ja
and
xchg
(bad)
jmp
add
mov
ret
push
jne
mov
mov
out
inc
rcl
sbb
cwde
les
inc
sbb
movs
clc
or
fcomi
mov
pop
adc
add
rcl
xor
adc
icebp
bound
pusha
je
adc
dec
rdmsr
mov
sbb
push
in
leave
int3
into
cwde
xchg
outs
pop
xadd
scas
enter
ins
add
inc
inc
xor
(bad)
hlt
lods
or
push
int
das
mov
pop
lds
sbb
loope
popa
pop
xor
and
(bad)
or
jmp
dec
or
pusha
jp
clc
das
(bad)
aad
imul
mov
addr16
push
sbb
inc
cmp
jmp
fisub
adc
enter
push
lods
mov
cmps
movs
cmc
in
sbb
adc
add
add
jmp
sbb
cmp
add
xor
add
sub
inc
or
div
pusha
sbb
sub
push
and
cmp
rcl
leave
sbb
dec
clc
fild
jle
cmp
ja
sahf
push
hlt
and
imul
jecxz
jmp
int
sti
add
pop
or
iret
sbb
and
iret
repz
dec
inc
dec
push
repz
repz
popa
ins
jae
repz
jns
test
mov
mov
mov
rol
or
add
mov
jbe
into
or
mov
sbb
or
pusha
sbb
push
movs
pop
cmps
or
cmps
(bad)
xchg
mov
add
sbb
pop
pop
cld
sbb
jne
mov
xor
outs
aad
push
bound
push
scas
sar
pop
sub
xchg
adc
push
repz
mov
out
sahf
ss
dec
push
pop
push
jb
popf
mov
repz
and
(bad)
iret
repz
jmp
cmp
pop
pop
sub
jge
out
xchg
mov
std
and
sahf
out
fimul
aad
cmp
sar
daa
xor
imul
loop
sbb
jns
out
data16
sahf
ret
sbb
cs
cmp
cmp
repz
dec
push
jp
dec
sahf
aaa
cli
cmp
out
sbb
push
dec
ins
pop
movs
out
mov
popa
mov
mov
sub
adc
ins
outs
(bad)
fiadd
pushf
pop
jmp
add
add
rcl
mov
xchg
add
lds
retf
inc
xchg
jo
arpl
mov
mov
rcl
pop
push
sbb
pop
xor
push
adc
push
mov
sub
push
mov
rol
cmc
inc
mov
adc
hlt
or
push
ja
pop
add
push
inc
(bad)
adc
push
xchg
inc
outs
push
adc
sub
adc
or
adc
inc
shld
mov
inc
(bad)
or
cmp
leave
push
push
push
inc
add
sbb
call
(bad)
and
add
inc
out
aam
sub
or
inc
cdq
push
or
cmps
inc
mov
popa
mov
mov
lods
mov
add
mov
adc
daa
popa
stos
cmps
or
stc
inc
sub
add
mov
mov
ror
pop
pop
(bad)
jmp
popa
push
loopne
inc
push
pop
inc
ret
cmovae
xor
adc
mov
icebp
jmp
or
mov
ret
mov
jo
mov
add
jmp
or
sub
jae
mov
clc
push
(bad)
aas
cmp
mov
loopne
mov
and
dec
rol
push
or
sub
and
scas
cmp
cli
sbb
pop
mov
outs
fdiv
dec
push
fsubr
jmp
sub
or
add
shr
add
pop
xor
jne
or
add
mov
imul
lea
push
mov
jmp
xchg
or
add
fist
imul
ja
jae
mov
out
int
sbb
ja
sub
sub
pop
or
pop
jb
inc
add
add
push
pop
or
fdiv
or
pop
cld
je
jns
out
push
cmps
mov
rcr
mov
sahf
out
sti
or
inc
in
mov
enter
and
loope
mov
ja
cli
mov
fsubr
imul
imul
jmp
sbb
mov
add
ret
adc
aas
jbe
fneni(8087
sbb
mov
mov
jmp
das
sbb
outs
mov
mov
or
push
sbb
sub
inc
mov
ret
ss
ret
sub
jae
call
push
pop
rol
pop
(bad)
adc
inc
mov
cmps
jge
xchg
add
scas
std
pusha
add
or
xor
out
push
ret
in
cli
rol
bound
loope
jmp
ret
ret
and
rol
xor
clts
out
or
js
cmp
loope
cld
and
or
add
(bad)
ret
outs
mul
xor
and
ficom
pop
out
sahf
out
add
adc
xor
inc
dec
push
data16
cs
mov
dec
sahf
or
rcr
in
ror
pop
xchg
pop
sub
xchg
and
and
aaa
and
mov
pop
and
pop
and
loope
dec
mov
(bad)
int3
stc
and
adc
jge
dec
je
xchg
inc
gs
(bad)
cmp
sbb
fcom
cmp
sbb
movs
sbb
sbb
add
mov
in
cmp
idiv
out
mul
push
jb
push
adc
sbb
and
jnp
daa
js
out
or
and
inc
test
cmps
or
lods
div
(bad)
add
fisubr
or
dec
(bad)
push
out
clc
push
push
sahf
out
ficom
and
ds
pop
pop
add
jns
cmp
and
xlat
and
loop
loop
xlat
mov
loope
mov
jmp
mov
pop
cmp
jecxz
shr
mov
out
test
inc
mov
dec
or
mov
cld
mov
jmp
(bad)
mov
xchg
adc
pop
pop
js
in
mov
clc
inc
shr
sahf
out
jge
fbld
cs
push
popa
jns
out
outs
jge
cdq
cmps
or
xchg
out
ret
shr
adc
and
and
imul
mov
rol
rol
mov
shl
shl
mov
shl
and
cmp
das
out
aaa
sbb
iret
push
push
sbb
imul
xlat
ret
xlat
cmp
jo
xlat
ret
mov
add
(bad)
mov
and
adc
sar
call
mov
or
and
adc
xor
out
or
inc
dec
aaa
dec
or
xor
jmp
lods
pop
jno
push
cmp
pop
retf
loopne
or
xchg
test
add
in
jne
push
push
cmps
ror
es
test
fsubr
aas
lods
sub
scas
mov
iret
repz
mov
call
cmp
loopne
stos
or
loope
cmp
push
stos
push
(bad)
retf
mov
stos
daa
push
inc
cmp
(bad)
stos
scas
(bad)
jl
mov
(bad)
test
(bad)
(bad)
and
mov
or
sub
add
dec
push
movs
mov
jecxz
inc
inc
mov
xchg
cmps
and
retf
popf
daa
mov
mov
xor
pop
mov
sub
push
add
adc
sahf
out
sahf
and
imul
out
jns
xchg
pop
mov
lock
cmps
pop
and
mov
inc
xchg
xchg
nop
add
sbb
xchg
and
sbb
mov
add
add
and
sbb
data16
rcl
(bad)
fadd
scas
data16
pop
inc
shl
push
lods
iret
repz
push
push
push
sub
dec
push
cmp
repz
jb
mov
add
mov
push
shl
and
sub
movs
shl
inc
jmp
inc
sbb
sbb
inc
sub
cmp
cmp
inc
or
xchg
icebp
inc
jns
sub
aas
push
scas
mov
in
cmp
jbe
pop
push
adc
dec
cs
xor
dec
sbb
out
push
arpl
mov
jo
iret
sub
cmc
repz
mov
adc
div
cmp
sbb
imul
inc
scas
sahf
cs
fst
pop
out
hlt
push
add
adc
in
out
push
sub
dec
pop
or
mov
add
fstp
mov
in
pop
loope
inc
mov
loopne
pop
mov
int
in
inc
(bad)
sbb
cmp
test
pop
lea
imul
push
shr
fs
push
out
jns
neg
push
push
sub
sub
pushf
out
push
ffree
mov
jcxz
mov
cdq
mov
cdq
dec
cdq
push
sbb
adc
rcr
xchg
mov
sbb
pop
push
push
pmovmskb
dec
push
xchg
jo
lods
add
shr
xchg
loope
ins
adc
sub
out
jecxz
icebp
pop
push
or
stos
inc
jo
aaa
inc
jmp
push
inc
nop
(bad)
lods
and
stc
jne
das
push
out
fnstsw
push
pop
mov
aaa
fisttp
jo
es
pop
sahf
or
push
sbb
sbb
or
mov
cs
jmp
es
cmp
inc
push
rcl
retf
and
(bad)
sbb
sub
in
retf
cdq
sbb
lds
push
pop
push
sub
inc
movs
or
dec
pop
push
imul
adc
je
cs
or
jge
lds
or
jns
add
add
cmp
adc
out
sahf
out
adc
sahf
pop
sbb
sbb
sbb
or
jg
push
pop
and
and
and
es
xor
jae
push
push
data16
iret
repz
cdq
stos
mov
sbb
cmp
adc
push
xor
out
inc
push
gs
out
sahf
out
test
fidivr
in
dec
out
push
cs
jns
out
pop
data16
icebp
sub
nop
sub
das
adc
and
inc
and
fcomp
dec
je
test
and
js
cmp
and
mov
and
sbb
adc
fadd
and
lods
and
js
mov
and
(bad)
inc
mov
mov
(bad)
xor
mov
xor
mov
pop
jmp
cmp
fnstcw
xor
jns
xor
rcl
pop
bound
inc
and
test
and
(bad)
jbe
adc
pop
(bad)
mov
pop
and
mov
popa
or
push
mov
bound
outs
mov
mov
jb
aas
std
mov
pop
pusha
aas
adc
sbb
scas
fs
mov
push
mov
jb
aas
cmp
sbb
aas
es
and
sub
enter
and
and
push
mov
mov
mov
fmul
jmp
jg
sbb
add
je
dec
or
add
push
fisttp
fucomp
push
fild
sbb
dec
je
xor
xor
aaa
jo
add
or
(bad)
push
xor
ds
repz
dec
pop
push
sbb
cmp
aad
scas
ret
mov
psraw
or
or
pop
adc
retf
adc
into
push
sbb
(bad)
cs
out
in
movs
mov
fcomp
mov
or
push
sub
inc
push
sahf
dec
sahf
sub
jle
ret
cmps
shl
and
ret
jae
inc
cwde
ret
inc
jns
and
popa
mov
lods
xchg
and
movs
rol
add
cmp
and
or
sbb
jge
ror
cmps
div
sbb
add
jno
push
jb
test
imul
retf
add
xlat
gs
xlat
and
aam
adc
sub
shl
cmp
add
xlat
adc
loop
push
adc
adc
jb
or
arpl
daa
or
test
pop
sbb
or
out
(bad)
jne
clc
xor
and
jnp
into
sbb
or
add
pop
and
jae
adc
adc
and
popa
scas
push
and
jne
les
and
adc
xchg
push
out
ret
or
push
imul
and
(bad)
mov
adc
fistp
push
jmp
dec
xor
ins
shr
inc
cmp
not
pop
cmp
out
push
sbb
cmp
out
sahf
out
jle
mov
nop
ret
in
jo
neg
push
and
popa
and
mov
and
or
add
add
inc
fsub
cdq
and
test
and
and
push
or
push
and
cmp
mov
aad
mov
clc
mov
arpl
arpl
push
jmp
inc
popa
jno
mov
vunpckhpd
(bad)
pop
add
(bad)
and
lea
or
sub
cmp
mov
or
pusha
into
push
iret
repz
push
sub
inc
push
add
loopne
pusha
ss
sub
lods
mov
daa
and
sbb
scas
(bad)
out
add
sbb
cmps
mov
bound
sub
and
add
mov
pop
cmp
pop
test
sbb
jg
mov
sbb
cmps
out
int
cmp
xchg
mov
pop
rcl
loopne
out
jae
idiv
or
sbb
es
es
xor
pop
mov
cmp
push
cmp
inc
sub
push
retf
stc
daa
addr16
push
inc
movs
repz
repz
cmp
sti
iret
pop
scas
mov
pop
sub
xor
and
sbb
ret
sub
jae
cmp
je
retf
jmp
sar
sbb
sti
and
mov
adc
inc
clc
push
mov
inc
mov
cmp
cmp
adc
cmp
fidiv
jl
or
add
mov
ret
idiv
in
jmp
push
push
push
xor
lea
mov
es
daa
adc
adc
neg
fucomi
sti
sbb
xchg
sub
or
adc
lea
mov
sbb
movnti
retf
push
dec
xchg
jge
pop
pop
pop
scas
lods
retf
pop
leave
shl
dec
lock
dec
repz
test
je
push
mov
sbb
ja
es
cmp
jne
repz
fadd
jnp
pop
and
adc
push
pop
inc
mov
mov
inc
cmp
push
cmp
push
push
imul
mov
fadd
add
inc
sbb
mov
sub
mov
xchg
xchg
pusha
mov
dec
repnz
test
dec
add
(bad)
mov
in
jne
arpl
test
or
add
add
stos
add
call
push
add
inc
jb
popa
jns
push
jns
je
ins
cs
jns
xor
in
jo
jae
push
outs
imul
mov
idiv
dec
adc
frstor
pop
cmp
dec
pop
xor
clc
jge
jle
adc
cmp
sub
xor
sub
xlat
daa
jl
push
and
xor
pop
add
add
inc
add
(bad)
fisub
push
inc
outs
jne
gs
je
std
add
outs
jb
sub
in
pop
loopne
outs
jbe
dec
gs
mov
cmps
adc
pop
add
gs
sbb
ins
data16
pop
popf
jge
mov
mov
cmp
sar
mov
imul
arpl
outs
add
xor
mov
xor
inc
out
cmp
add
jl
mov
inc
jne
xor
outs
sbb
cmp
pop
je
xchg
push
outs
mov
hlt
addr16
add
pop
mov
dec
jo
push
jg
or
dec
push
(bad)
bound
pop
pop
repz
mov
inc
and
jns
add
cmp
lea
inc
ret
or
xlat
mov
in
xor
push
outs
test
hlt
dec
add
and
fadd
inc
js
mov
adc
sub
test
dec
add
cwde
std
jmp
xchg
cmps
adc
push
dec
imul
call
push
idiv
and
mov
push
dec
xor
mov
mov
loope
test
sbb
ins
je
dec
sti
mov
sbb
mov
inc
pop
sub
outs
sbb
adc
or
inc
into
mov
stos
dec
push
cmp
dec
bound
stos
in
std
push
push
aas
mov
pop
(bad)
mov
movs
hlt
mov
popf
xor
loope
cmps
push
adc
add
(bad)
sub
xor
mov
mov
push
inc
mov
pop
das
jp
(bad)
jb
scas
push
aaa
aas
push
mov
mov
adc
push
pop
daa
inc
adc
mov
popa
xlat
sti
and
popa
sbb
fcomp
inc
pop
aas
xchg
int
add
rcl
rcl
cmp
cmps
adc
or
ins
dec
or
add
mov
mov
mov
enter
(bad)
xchg
jnp
loopne
mov
add
shl
sbb
push
add
inc
fistp
into
or
popa
ins
imul
mov
pop
push
popa
xor
mov
iret
pop
cmc
aas
jge
push
push
imul
inc
mov
dec
or
pop
je
inc
mov
imul
stos
pop
sub
jp
jns
shl
push
popf
pop
dec
inc
pop
pop
ret
push
inc
mul
inc
lea
jg
xchg
push
add
or
mul
icebp
imul
je
add
test
lods
adc
jno
or
inc
fcom
inc
jne
mov
icebp
push
add
cwde
add
inc
fwait
xor
inc
xchg
sbb
data16
jne
pusha
xor
or
or
inc
add
rcl
sub
shr
add
mov
pop
shl
sbb
mov
dec
pop
adc
sbb
sub
cmp
add
inc
push
lods
pushf
and
xchg
push
cmp
inc
fiadd
out
stos
push
adc
fnstenv
pusha
in
pop
push
fsubr
cmp
cmp
push
test
dec
imul
aaa
mov
xor
js
sbb
mov
sbb
retf
sub
push
or
dec
xor
sub
fmul
sbb
sub
and
daa
mov
punpcklwd
or
add
dec
outs
cmp
jae
shrd
daa
and
dec
push
cdq
adc
dec
mov
fs
leave
cmps
fsubr
dec
pop
xor
in
test
inc
dec
mov
sbb
rol
dec
xor
cmp
cmp
call
pushf
mov
mov
sahf
cmp
xadd
in
call
pop
out
pusha
mov
mov
add
shl
push
mov
movs
mov
cmp
push
pop
xor
dec
or
or
inc
sbb
cmp
fs
jno
movs
jmp
jae
inc
xor
jno
iret
xor
mov
mov
dec
cmovns
(bad)
jle
dec
jae
rcl
inc
imul
je
dec
jg
clc
repz
add
add
fs
or
or
cmp
popa
ins
jne
arpl
out
popa
add
and
mov
sub
mov
jmp
adc
or
outs
add
ins
pop
shr
adc
js
push
dec
out
add
jae
jo
nop
add
enter
push
scas
out
out
dec
pop
xor
pop
bound
int
pop
xchg
or
scas
ror
add
adc
push
and
call
(bad)
add
arpl
xor
xor
nop
lds
dec
jae
imul
or
push
js
iret
sub
add
push
adc
repnz
inc
imul
add
data16
lea
or
inc
add
loop
inc
in
or
mov
jmp
inc
and
sbb
push
jo
or
or
push
aaa
lock
cmp
pop
fsubp
xor
sbb
push
add
scas
mov
ins
sahf
mov
or
sar
rcr
ss
into
pop
sub
xchg
xor
sbb
(bad)
lock
ja
xor
xor
pushf
inc
sub
xor
jae
dec
lock
and
pop
add
cwde
or
pop
and
call
pop
push
es
dec
push
es
int
pusha
and
cmp
add
xor
and
pushf
movs
je
imul
mov
pusha
fcmovb
cmp
dec
popw
dec
add
push
imul
add
out
cmp
jo
addr16
daa
sbb
and
jmp
xor
fisttp
push
mov
outs
fistp
or
les
inc
pop
or
fld
jge
dec
sahf
ins
or
loop
jns
rcl
xchg
or
adc
and
mov
pop
add
pop
xchg
dec
test
fist
sub
int3
mov
push
jb
ins
mov
jae
xor
loopne
or
mov
dec
dec
cdq
icebp
inc
jno
add
in
xlat
push
sub
mov
outs
test
arpl
in
inc
xor
or
mov
(bad)
sbb
dec
pop
outs
ins
pop
(bad)
add
pop
push
inc
xchg
xchg
pop
inc
or
mov
sub
and
mov
call
pop
arpl
jns
add
xor
jno
rol
ins
or
mov
call
pop
ret
add
add
pop
inc
add
clc
(bad)
inc
stos
je
lock
mov
mov
addr16
or
push
mov
dec
inc
clc
push
dec
rcl
xchg
mov
jg
lock
adc
mov
mov
sbb
test
jne
rcr
imul
mov
call
dec
and
scas
test
lock
sahf
add
jmp
js
sar
pop
ret
cld
add
das
call
out
mov
add
mov
shufps
mov
mov
mov
cmp
sub
call
inc
shr
out
fisub
xor
cmp
clc
outs
dec
ror
pop
cmp
aam
fadd
je
mov
or
cwde
mov
ror
nop
loopne
xchg
cmp
add
cdq
out
in
sti
pop
xchg
in
xor
mov
add
adc
adc
and
jo
or
mov
cmp
push
mov
sub
cmp
mov
jg
xchg
xor
ins
lock
xor
pop
fs
push
in
sub
adc
in
sbb
fcomp
xor
ja
out
mov
jge
sar
sub
sbb
push
and
push
cmp
mov
cli
dec
mov
or
inc
sbb
std
jmp
in
adc
sbb
loopne
ret
jg
stos
jne
lea
movs
add
fsubr
push
cs
addr16
mov
add
in
out
push
loopne
loope
add
into
push
inc
mov
out
data16
mov
sbb
pop
and
inc
ins
and
mov
lock
jge
fs
xchg
pop
stos
inc
pop
ds
icebp
fimul
pop
add
and
or
lds
arpl
dec
ret
add
dec
in
cmp
or
add
adc
shl
or
jle
lds
jge
mov
mov
sbb
mov
in
in
call
jno
push
rol
or
shl
dec
or
push
mov
push
mov
fcom
fadd
icebp
repnz
and
push
sbb
pop
xor
or
lock
push
jge
and
mov
xor
mov
and
ret
xor
ret
lea
out
mov
add
push
push
mov
icebp
ss
push
cmp
xor
mov
push
jne
ss
adc
popa
add
jle
das
sub
jb
je
ss
xor
mov
pushf
out
and
movs
pop
adc
into
fimul
mov
(bad)
movs
dec
xchg
jmp
jl
xchg
mov
sbb
sbb
loopne
cmp
rcr
push
push
cmp
loope
outs
iret
sub
ss
in
jo
and
cmp
nop
mov
daa
cmps
or
mov
gs
int3
or
das
mov
aad
xor
lock
mov
cmp
dec
adc
(bad)
jo
cmps
scas
inc
add
shld
add
ins
xchg
sbb
and
push
xor
fadd
les
dec
pushf
pop
je
push
xor
js
fisubr
lods
aam
push
lock
jne
or
sub
js
mov
fisttp
push
fdiv
mov
ror
cmps
sbb
jo
sbb
test
sti
imul
fdiv
cmps
adc
mov
sub
ret
popa
xor
(bad)
pushf
mov
xor
in
fcom
daa
pusha
retf
mov
pop
adc
cmp
dec
hlt
sub
(bad)
stos
jmp
jno
jl
loopne
add
cmp
dec
pop
cwde
hlt
adc
dec
je
mov
loopne
jbe
mov
mov
mov
sub
in
pushf
ja
push
call
jle
in
xor
jne
test
inc
mov
lock
mov
sar
nop
or
or
pop
call
inc
jne
pop
js
or
sbb
test
xchg
and
mov
sbb
into
push
sbb
ins
or
push
nop
out
pop
iret
retf
ror
sbb
lahf
inc
adc
mov
sub
ins
cmps
add
ret
mov
iret
ja
or
pop
int3
pushf
test
jmp
mov
in
aad
inc
mov
add
mov
loope
add
push
lods
add
sub
xchg
and
call
add
mov
je
mov
push
shl
rcl
xor
xchg
mov
test
sbb
cld
mov
jge
call
aam
daa
xor
pop
into
sbb
xor
cmp
push
repnz
shr
mov
or
es
lods
xor
push
push
fsubr
inc
fiadd
mov
xor
push
and
mov
mov
mov
mov
push
adc
xor
and
addr16
ret
bswap
and
(bad)
fdiv
mov
sbb
dec
add
add
(bad)
pop
call
dec
mov
(bad)
mov
icebp
imul
dec
in
call
in
enter
pusha
mov
push
xor
cmp
adc
push
outs
sbb
in
push
push
xor
ins
clc
mov
dec
mov
and
js
pop
and
xor
loop
xchg
mov
push
fdivr
push
mov
adc
aad
adc
out
cmp
sub
(bad)
cld
pop
pop
add
out
hlt
mov
inc
pop
(bad)
jo
or
sub
sti
mov
shr
and
or
mov
rcl
mov
sub
call
add
mov
or
push
pop
cmp
mov
add
and
pop
or
cld
adc
dec
xchg
xchg
jg
sub
jo
lds
or
jno
sbb
mov
add
add
mov
dec
fisttp
add
mov
ror
mov
call
xchg
jns
add
push
pop
stos
int3
sbb
xchg
(bad)
mov
or
adc
xchg
or
cmp
js
mov
xor
ss
jl
xor
fucomip
call
sete
inc
aas
push
les
sub
rcl
push
pop
pop
add
xchg
mov
mov
lds
fcmovnu
imul
sub
pop
sub
or
jo
and
xor
and
jmp
stos
ret
addr16
adc
mov
loope
rcl
push
xor
push
out
xchg
push
mov
lods
(bad)
xchg
popf
mov
inc
call
scas
hlt
push
mov
push
fimul
nop
arpl
nop
jbe
cmp
scas
push
sbb
lods
xor
cmps
loopne
or
je
clc
loope
pusha
inc
outs
jne
shr
loopne
pushf
retf
lock
push
adc
lods
inc
aaa
nop
cli
adc
inc
lea
enter
cdq
lods
rol
xor
xor
xor
clc
mov
std
push
pop
sbb
or
sti
push
push
jmp
xor
sahf
sbb
jp
mov
cmp
or
jp
inc
pusha
jb
or
dec
pop
and
sbb
mov
nop
add
in
jecxz
gs
sbb
add
(bad)
add
mov
ins
mov
or
loopne
push
and
push
pusha
jne
(bad)
sbb
test
outs
jp
mov
es
adc
add
push
push
nop
dec
mov
je
popf
arpl
mov
aam
inc
cmp
loop
pushf
enter
cmp
mov
adc
xchg
adc
mov
fs
ja
push
or
jp
mov
cmp
fcomp
test
inc
test
jne
cvttps2pi
mov
mov
ret
xchg
sbb
outs
xchg
cmp
pop
cli
js
push
jl
xlat
lock
mov
mov
inc
mov
pusha
in
or
lock
dec
jge
arpl
and
and
push
jg
mov
inc
les
jne
mov
(bad)
int3
adc
xor
sahf
push
leave
das
pop
xor
mov
fisub
push
mov
push
in
pop
pop
jl
jno
mov
dec
mov
mov
mov
inc
xchg
call
inc
pop
inc
xor
cmp
loop
pop
push
fcomp
cmp
cmps
sbb
sti
leave
cmp
mov
inc
movs
pop
push
adc
ror
test
fwait
clc
es
gs
(bad)
je
mov
mov
fisubr
push
pop
push
mov
jp
es
push
in
dec
test
inc
xchg
pop
ror
sub
push
jmp
push
in
fcomi
dec
ja
and
adc
mov
mov
sbb
(bad)
shr
dec
sti
nop
rol
aam
dec
jmp
mov
mov
push
cmp
or
(bad)
push
in
fsubr
imul
sbb
jb
(bad)
jne
(bad)
jmp
(bad)
xchg
test
lods
rol
jne
mov
sbb
fadd
(bad)
sbb
push
jp
dec
and
xor
xor
mov
push
js
jne
rcr
and
inc
xor
jmp
movs
cmp
xor
popa
shl
jge
xor
lock
mov
int3
mov
test
test
dec
clc
(bad)
mov
xor
movs
and
loop
imul
or
pop
lea
fist
inc
jecxz
imul
push
or
pop
sub
add
in
aaa
mov
cmp
add
es
pop
cmp
xchg
sub
js
jle
dec
sub
push
dec
jo
jmp
or
fucomip
popa
cmp
jne
ins
stc
fld
scas
inc
sub
sbb
xor
cmp
jne
push
or
arpl
or
clc
loope
in
mov
xchg
jb
mov
movs
fld
and
and
xor
sub
rol
and
adc
push
add
sahf
mov
outs
add
in
and
or
pop
loope
icebp
and
out
call
sbb
sub
shl
neg
out
std
and
(bad)
push
ins
test
je
add
aaa
int3
enter
adc
sbb
cmp
cmp
jne
pop
and
xor
mov
ja
cmc
or
pusha
push
bound
inc
xchg
mov
les
stos
cli
cmp
loop
mov
outs
add
ret
jl
scas
int3
fcomi
pop
adc
lahf
push
pop
cmp
out
adc
xlat
fidiv
and
xor
add
pop
xor
cmp
sbb
enter
cmp
sbb
rcl
sub
int
cdq
mov
ins
pop
ret
mov
adc
iret
add
push
mov
pop
rep
pop
ds
ja
mov
das
(bad)
xor
add
mov
(bad)
das
inc
xchg
add
sub
jb
push
add
or
and
push
inc
pop
cmp
adc
add
out
je
dec
je
push
aaa
push
jmp
mov
add
jmp
adc
je
inc
push
lods
mov
sub
aad
pop
repnz
inc
inc
and
cmp
aam
aaa
clc
shl
xchg
movs
jo
stos
imul
repz
pop
jnp
fiadd
and
dec
loopne
add
cdq
xor
or
dec
mov
adc
data16
sar
cmp
setge
scas
shl
mov
or
rcl
sub
sub
or
push
dec
shl
push
jo
sub
sbb
or
or
out
mov
push
mov
and
sub
sbb
rcl
add
rcr
add
jmp
cmps
add
add
mov
cmp
adc
popa
call
mov
add
sub
jb
add
icebp
fcmove
imul
add
lods
adc
adc
pop
pop
xor
aaa
xchg
pop
inc
sbb
nop
ins
add
ins
btr
mov
sbb
xchg
data16
movs
jno
imul
pop
or
add
jae
sahf
out
jns
iret
jecxz
je
call
iret
rol
mov
or
xchg
mov
xor
loop
inc
adc
shl
mov
cmp
jmp
xor
movs
cmp
jbe
aam
ret
xor
or
ret
or
jne
add
sbb
or
sbb
outs
inc
arpl
mov
sbb
(bad)
mov
clc
cmp
xor
dec
adc
push
dec
jge
inc
dec
sbb
nop
test
mov
or
jle
adc
mov
xchg
cmp
pop
je
fisub
push
push
or
outs
adc
in
shl
push
sbb
jbe
adc
mov
adc
sti
and
or
add
and
enter
in
mov
jge
xchg
enter
add
enter
je
aaa
add
xchg
dec
rcr
and
add
adc
out
push
cmp
test
lea
pop
test
inc
sbb
(bad)
and
dec
sar
or
add
or
mov
test
inc
mov
push
cli
les
fiadd
adc
adc
or
sub
mov
mov
mov
ins
add
adc
pop
pushf
loopne
adc
icebp
pop
xor
mov
xchg
(bad)
cmp
inc
mov
fadd
fwait
push
and
adc
sbb
test
pop
sbb
sar
arpl
cmp
jo
sub
lock
loopne
push
dec
mov
test
out
scas
pcmpgtb
add
aas
dec
and
adc
push
push
stos
in
mov
add
test
jo
ret
or
inc
call
test
mov
add
cli
jl
lods
sbb
sub
inc
add
jo
les
popa
or
retf
lods
rcl
hlt
jmp
fsubr
test
movs
xchg
into
js
jae
jo
fiadd
adc
mov
stos
mov
mov
sub
(bad)
fdivr
iret
(bad)
mov
(bad)
fst
push
dec
jo
es
add
push
mov
mov
bsf
call
jmp
jmp
movs
loope
sbb
je
jmp
and
mov
jmp
push
xchg
adc
and
data16
or
clc
jbe
mov
bound
pop
cmp
mov
add
cli
aaa
jmp
jo
jecxz
ss
sub
or
or
aam
data16
pop
jmp
or
and
xor
(bad)
ss
lea
loope
jne
ret
cmp
call
push
jl
sbb
push
call
xchg
jnp
dec
or
fmul
fld
loop
inc
or
ds
hlt
test
daa
jmp
sti
nop
aad
jl
mov
xor
push
popa
(bad)
xor
adc
dec
popa
mov
jno
ja
add
jnp
lea
stos
mov
out
xor
popa
push
mov
pop
scas
dec
js
jns
or
imul
dec
sbb
shl
dec
hlt
add
rol
cmps
add
push
ret
xor
jmp
lahf
jne
cs
aaa
ins
adc
push
aas
shr
rcl
or
sbb
inc
inc
pop
pop
pop
cmp
mov
dec
sbb
jns
pop
pop
test
or
lea
add
add
sahf
out
test
dec
jge
inc
ss
xor
jnp
cs
push
push
sbb
shl
mov
push
adc
jb
cmp
icebp
adc
in
add
add
jno
sbb
or
pop
dec
dec
or
repnz
and
pop
dec
xchg
xor
and
pop
std
add
sbb
sub
jmp
add
push
inc
pop
shr
mov
clc
mov
outs
mov
cld
jmp
fstp
push
fdiv
add
jo
adc
or
jne
jnp
aas
hlt
cmps
dec
test
es
dec
sbb
inc
or
push
adc
mov
dec
or
cmp
jmp
test
or
sbb
pop
xor
dec
pop
in
rol
inc
sti
inc
retf
sti
pusha
sbb
cdq
stos
push
mov
jmp
and
ret
jl
sahf
out
cmp
pop
and
or
add
add
or
mov
cld
mov
enter
or
mov
sbb
jmp
adc
cmp
push
jmp
pop
cmps
push
mov
cmp
das
aaa
retf
cmp
outs
ins
sti
and
cmp
sbb
call
xchg
adc
adc
dec
xchg
dec
adc
fcmovnbe
mov
movs
pop
pop
das
mov
inc
dec
adc
jno
jb
jb
and
cmp
add
fwait
ret
sbb
or
add
sub
push
arpl
jmp
div
add
adc
ins
lds
jl
cli
pop
ja
or
sbb
add
cmp
pop
sbb
into
add
adc
loopne
pop
shl
addr16
fidiv
pop
push
(bad)
or
out
outs
jp
lods
loope
fsubr
push
push
mov
ret
gs
neg
and
push
pop
outs
inc
mov
inc
and
or
nop
mov
or
mul
dec
loope
xor
cmp
hlt
call
or
pop
mov
xor
ret
or
adc
inc
sbb
mov
and
aam
mov
test
pop
or
or
add
push
cmp
pop
or
test
add
mov
xchg
xchg
cmp
add
or
in
retf
or
and
sbb
adc
inc
fild
push
mov
mov
out
scas
sbb
and
dec
pusha
sub
and
push
retf
mov
out
or
cmp
mov
mov
iret
add
loopne
int
mov
sbb
cs
push
add
sbb
or
sbb
mov
std
cdq
ret
sbb
push
sbb
mov
arpl
and
push
mov
adc
mov
and
sbb
sbb
jae
xor
and
cmps
sar
daa
fidivr
pop
daa
or
enter
sub
pop
daa
or
add
and
daa
xor
dec
(bad)
cmp
(bad)
ds
je
cmp
adc
cmp
loop
sub
pop
or
push
je
mov
push
clc
push
xor
pop
adc
(bad)
into
repz
mov
xchg
js
imul
mov
outs
cmps
pop
fwait
push
mov
jnp
test
adc
out
jne
popf
mov
rol
les
push
mov
das
das
je
inc
call
adc
retf
add
pop
or
add
push
lods
push
cwde
or
fldcw
push
mov
rol
pop
retf
or
cmp
dec
mov
push
push
adc
adc
inc
add
jo
push
push
dec
aam
lock
inc
fdivr
adc
fsub
lahf
sub
mov
pop
adc
sub
(bad)
and
test
dec
ret
es
or
(bad)
rol
inc
xchg
mov
pop
jmp
and
adc
mov
jnp
je
pop
or
sti
out
call
sub
inc
or
mov
inc
push
dec
sbb
(bad)
push
in
inc
rcl
dec
push
je
inc
and
sub
dec
and
cmps
imul
sbb
pusha
or
lea
int3
dec
fscale
cdq
dec
enter
call
push
jmp
or
add
add
out
aam
call
mov
push
sbb
ror
inc
inc
stos
xchg
sbb
les
or
inc
aaa
rcr
ror
add
jne
mov
add
sub
shl
and
xor
cmp
mov
daa
sub
je
or
(bad)
pop
call
and
sub
add
push
int3
shl
pop
out
aas
mov
out
xchg
fisttp
pop
cmp
popa
pop
or
or
dec
mov
cmp
dec
idiv
je
mov
push
jmp
add
and
mov
ins
test
push
mov
jo
call
repnz
push
push
aas
out
stc
fcom
fcomi
addr16
mov
push
mov
aaa
adc
and
or
mov
mov
xchg
adc
and
sar
mov
and
cmp
inc
or
in
mov
cmp
add
cmp
pop
outs
inc
add
mov
add
add
out
add
outs
je
cli
sbb
aam
push
popa
aam
sub
and
enter
mov
adc
push
mov
mov
jns
lea
add
push
and
xor
loope
inc
mov
ja
jl
jae
lods
es
stos
adc
lock
push
push
mov
push
push
inc
int
and
sbb
les
std
test
sbb
inc
ss
aas
arpl
jno
or
jbe
pusha
ja
cmp
push
cmp
in
pop
cmp
test
xor
aaa
mov
test
add
inc
dec
test
xchg
call
je
ror
pop
pop
je
add
xor
pop
push
adc
rol
xchg
inc
push
sbb
dec
int
pop
mov
jmp
int
push
push
adc
outs
cmps
add
div
das
rol
jle
inc
add
cdq
cmc
repnz
pop
push
lock
imul
lea
scas
outs
add
jmp
sub
dec
cwde
sti
sbb
fldenv
sbb
inc
cmova
adc
test
into
add
or
mov
jl
shr
cwde
in
ins
clc
or
mov
push
shl
pop
mov
bound
adc
adc
ret
xor
push
shl
pop
or
inc
aaa
sub
call
(bad)
cmp
mov
rcr
stos
inc
jmp
add
or
cmp
mov
ret
push
popa
sub
test
mov
pop
mov
fbstp
mov
lods
js
push
mov
jae
sub
jo
jp
bound
clc
shl
out
add
ficom
xor
add
(bad)
sbb
enter
xlat
jo
xchg
ins
sbb
dec
jno
dec
add
loopne
or
lods
add
dec
mov
leave
jecxz
nop
sbb
pop
lds
repnz
stc
xchg
mov
mov
dec
add
and
fsubr
cmp
js
pusha
jbe
movs
mov
sub
jl
mov
inc
or
push
shl
push
add
data16
ret
push
pop
pop
jg
push
fldcw
mov
push
add
shr
pushf
xor
or
mov
addr16
pop
mov
jb
jmp
imul
add
mov
dec
push
inc
or
inc
adc
dec
lock
imul
mov
fadd
not
dec
mov
call
add
mov
(bad)
in
pop
mov
sub
movs
(bad)
sbb
adc
mov
pop
and
push
out
push
sub
mov
inc
(bad)
xchg
jl
mov
cmp
adc
add
mov
or
sub
(bad)
push
add
xlat
iret
push
fcom
mov
mov
add
sbb
sbb
(bad)
sbb
add
cmp
loop
inc
and
cdq
jnp
mov
push
cmp
shl
push
sbb
out
lock
ret
iret
loop
mov
call
cdq
or
inc
xor
and
pusha
or
(bad)
push
pop
mov
add
lea
mov
mov
mov
or
adc
je
or
cmp
shl
rcl
fimul
in
cs
pop
dec
lock
inc
jnp
or
push
jne
dec
inc
adc
fldcw
xor
je
out
xchg
adc
xlat
pop
sub
cli
scas
xor
lock
inc
stc
mov
mov
ins
mov
adc
lea
dec
sbb
les
pop
cld
mov
pusha
ror
sbb
cmp
lods
push
inc
cs
imul
cld
xchg
ins
js
add
ror
adc
in
fsub
in
or
pusha
aaa
shr
adc
mov
repz
sub
adc
jne
pop
mov
lock
iret
movs
add
jecxz
adc
inc
push
movs
fld
ror
add
xor
sbb
adc
mov
(bad)
aaa
or
pop
cdq
hlt
int3
les
ja
loopne
fld
adc
xor
push
jl
jne
shl
jmp
sti
cmp
adc
mov
pop
mov
shl
mov
mov
xor
mov
add
ret
call
ja
stos
push
mov
fsubr
pop
lds
sbb
ja
ins
mov
mov
shl
push
daa
inc
enter
jp
call
xor
xor
push
xor
cmps
sbb
inc
nop
inc
xchg
popa
or
add
ss
inc
xor
popf
xchg
shl
int
call
bound
cld
xor
clc
scas
jl
or
clc
cmc
add
(bad)
and
sahf
push
mov
cmp
icebp
inc
add
or
pop
fadd
inc
inc
jbe
cmp
es
inc
jne
pop
or
sub
or
mov
test
je
cmp
add
cmp
loopne
sbb
addr16
jnp
mov
pop
test
mov
dec
enter
or
addr16
loopne
inc
cld
push
lea
fdivr
push
add
or
shl
loopne
in
sahf
adc
movs
and
ret
inc
jmp
call
movs
cmp
sub
stos
mov
add
aaa
mov
inc
pop
je
jb
ins
sbb
mov
jae
add
(bad)
out
test
dec
push
add
pop
add
sub
push
test
or
loope
dec
or
pop
lods
int
pop
add
or
popf
mov
cmps
das
push
sub
mov
pop
lea
out
rol
mov
out
mov
cwde
(bad)
mov
jg
cmc
(bad)
jo
sbb
add
or
sbb
add
pop
ret
add
(bad)
mov
mov
loopne
pop
mov
inc
dec
cmp
add
or
inc
or
shl
call
pop
addr16
scas
or
jl
mov
jbe
out
stc
je
and
sub
out
sbb
xor
pop
mov
cmps
inc
and
sbb
scas
adc
jle
mov
cld
mov
cdq
inc
lock
mov
and
mov
mov
out
sub
sub
popa
fcomp
dec
out
mov
lods
popa
js
sar
sbb
int3
cwde
je
dec
mov
fimul
sbb
nop
nop
push
jns
push
adc
dec
and
jae
or
inc
lods
cmp
scas
add
pushf
cmp
rol
push
sbb
cli
jle
dec
mov
ret
add
add
aaa
push
das
and
mul
inc
xor
dec
mov
mov
stos
lock
mov
call
nop
push
pop
movs
test
add
push
outs
push
pop
lds
seto
ror
cwde
jno
pop
call
inc
fmul
mov
pop
xor
ja
(bad)
loopne
hlt
lods
mov
retf
adc
inc
inc
jl
dec
mov
dec
and
push
sbb
mov
mov
retf
add
inc
call
adc
mov
mov
(bad)
add
or
in
or
int
fist
inc
add
cmp
inc
inc
in
retf
call
sbb
jns
std
mov
jae
iret
cld
lock
inc
mov
loope
sbb
and
cmp
push
jne
lea
pop
jmp
xor
cli
adc
jbe
inc
or
mov
gs
and
ret
cmps
arpl
push
sub
js
xadd
inc
je
pop
pop
jo
clc
leave
and
mov
and
inc
mov
push
add
xor
adc
push
cmp
adc
jo
mov
inc
lahf
leave
mov
inc
scas
mov
mov
in
xchg
add
stos
inc
add
jmp
sub
clc
sub
push
mov
ja
(bad)
mov
cmp
push
pop
icebp
mov
adc
aam
movs
sub
mov
jp
add
daa
sbb
enter
sub
outs
dec
inc
mov
mov
and
jl
jmp
inc
pop
add
push
adc
je
mov
add
mov
cmps
pop
xor
and
or
scas
es
or
adc
mov
ret
inc
or
add
cmp
pop
sbb
es
aad
add
ror
or
stos
mov
ror
(bad)
push
pop
mov
enter
sbb
sbb
and
adc
cmp
or
sub
cmp
mov
xor
inc
cwde
ins
aas
sub
dec
jb
or
dec
add
adc
mov
inc
adc
mov
adc
xor
and
jl
or
add
or
push
dec
fwait
or
mov
push
call
sbb
add
mov
mov
pusha
enter
add
cmp
and
jo
aaa
jne
test
dec
(bad)
pop
or
or
mov
popf
push
jecxz
mov
adc
fcom
mov
xchg
in
loopne
in
(bad)
jmp
in
or
mov
inc
mov
mov
nop
sbb
dec
cdq
pop
(bad)
push
ins
push
sar
push
push
sub
xchg
in
mov
jb
sbb
xor
mov
fdiv
outs
jg
jbe
xchg
daa
repz
addps
add
fiadd
inc
jge
add
sbb
cmp
inc
or
or
xor
or
xchg
xor
xor
out
lock
xchg
or
in
in
sar
xor
jmp
call
and
xchg
aaa
aaa
fs
pop
cdq
xor
test
cdq
jne
xor
scas
sub
pop
mov
outs
shr
movs
xor
scas
adc
jl
push
and
xchg
dec
dec
push
sbb
add
adc
mov
inc
cmp
xchg
push
dec
pop
mov
add
push
add
push
mov
enter
xor
inc
and
ret
sbb
push
push
aam
pop
mov
or
push
add
pop
or
scas
xor
aas
ss
aad
fdiv
cmp
xchg
fdiv
mov
cmp
jle
sub
sar
jns
adc
test
stos
jp
pusha
cli
dec
jmp
push
jbe
into
adc
sbb
sub
mov
test
xchg
pusha
aaa
shl
loop
scas
inc
mov
and
pusha
cmp
mov
aam
lock
inc
push
ficomp
icebp
out
sub
inc
sbb
retf
(bad)
cld
imul
test
je
and
adc
sbb
inc
test
sub
lods
xor
je
jmp
mov
cmps
dec
and
cmp
setne
xor
push
or
inc
xor
ror
push
dec
sub
rcr
push
or
mov
add
mov
jo
push
or
add
push
mov
inc
pop
push
or
add
je
or
test
add
enter
cli
pop
xchg
xlat
lods
xchg
(bad)
push
adc
pop
bound
xchg
test
sar
sub
inc
je
cs
clc
data16
and
rcl
cmp
or
pop
cmp
lea
cmp
or
je
sbb
je
pop
lods
in
sbb
mov
es
push
lock
test
pop
pushf
sbb
or
shl
out
xor
or
add
push
out
shr
jns
and
pop
inc
and
and
dec
pop
out
xchg
repnz
pop
ja
hlt
or
push
mov
bound
sbb
jnp
mov
test
rcr
adc
out
cmps
lahf
adc
mov
neg
js
neg
xor
dec
xlat
sahf
pop
cmp
add
cmps
dec
jne
push
call
test
movs
mov
test
test
scas
xor
sub
adc
fs
sbb
stos
inc
movs
hlt
je
add
mov
sub
mov
aam
mov
and
out
inc
lods
push
jne
mov
add
mov
shl
sub
push
add
and
(bad)
sub
pop
pop
xor
bound
jle
in
dec
js
or
clc
lds
fiadd
push
loopne
(bad)
fadd
adc
(bad)
mov
cli
or
dec
sbb
sub
dec
int3
xchg
mov
test
or
lods
cmp
popa
(bad)
xor
(bad)
mov
loopne
ja
ret
push
or
jl
sbb
push
call
sbb
jmp
pop
loopne
add
mov
xchg
fcomp
push
fdiv
adc
jmp
lods
test
sbb
pop
enter
pop
clc
jb
ins
jne
retf
push
mov
adc
lods
adc
repnz
ror
push
loopne
ficom
cmp
sbb
jbe
sbb
int3
jmp
add
sbb
addr16
pop
sub
js
add
adc
dec
ret
movs
inc
adc
adc
stos
adc
sub
cmp
in
xor
outs
(bad)
push
mov
mov
mov
(bad)
fld
push
test
add
adc
jmp
stos
mov
pop
dec
jnp
fs
sbb
mov
or
xor
push
jmp
leave
fldenv
fincstp
in
mov
in
adc
add
scas
or
or
mov
mov
or
add
aad
mov
test
(bad)
not
sub
sbb
das
sbb
inc
add
jb
or
adc
mov
mov
xchg
inc
mov
les
and
call
xor
int3
stos
loop
dec
and
imul
ret
jae
pop
dec
hlt
pop
mov
and
sbb
rcl
bound
mov
fbld
jno
cmp
sbb
add
mov
test
loopne
out
cmp
out
mov
sub
adc
lahf
dec
sub
daa
shl
sub
pusha
jb
mov
div
cmp
sbb
shr
test
stos
pushf
jns
mov
and
sbb
push
test
loopne
das
adc
mov
ins
xor
sti
add
pop
mov
xchg
xlat
jge
mov
nop
jne
es
in
mov
dec
push
jle
mov
in
sub
cwde
push
daa
stos
jmp
sub
fs
jp
mov
gs
shl
in
loopne
or
or
mov
or
jge
jo
sub
push
call
cli
sbb
sahf
lock
popa
adc
or
xlat
or
out
fcmovu
jmp
or
or
adc
loopne
loopne
adc
lea
outs
sub
xor
hlt
adc
mov
enter
add
cli
mov
or
aaa
mov
mov
push
test
clc
push
cwde
mov
pop
jge
outs
jne
or
movs
mov
and
(bad)
and
das
pop
inc
mov
je
lock
xchg
xchg
ins
lods
rcl
cmp
push
add
rcl
cmp
call
cmps
hlt
(bad)
sub
mov
je
jp
scas
mov
jecxz
push
jmp
dec
call
loope
outs
inc
test
sahf
les
push
std
jle
outs
pop
clc
ja
pushf
divps
push
loope
adc
sti
jb
pop
push
push
jle
inc
pop
push
mov
out
pop
lds
arpl
or
adc
lea
lahf
cli
push
mov
cmps
add
cmp
aaa
pop
test
jge
mov
out
mov
les
add
xor
int3
cmp
jle
sahf
in
ins
rcl
or
jge
xor
into
daa
test
fdivr
adc
add
test
jl
cmp
jl
or
adc
je
out
lock
push
inc
test
mov
xor
xchg
xcrypt-ctr
cmps
pop
push
adc
jl
or
retf
adc
mov
nop
jg
cli
sub
jne
fucomip
lsl
adc
sar
add
stc
jp
mov
pushf
pop
xchg
mov
or
add
sub
in
xchg
or
dec
pusha
into
xor
div
jae
je
cmp
jp
cs
or
lea
push
push
xchg
sub
inc
enter
pop
add
sbb
sub
rcr
popa
jg
dec
push
push
cmp
xor
or
pusha
sbb
jp
push
adc
ins
call
(bad)
cmp
sub
sti
mov
mov
dec
inc
adc
dec
add
and
mov
aam
cmp
out
inc
inc
(bad)
lea
mov
sbb
jmp
mov
mov
push
push
idiv
pop
je
xor
inc
lods
mov
(bad)
mov
bound
pusha
xchg
loope
inc
ins
(bad)
adc
cmc
iret
add
lea
fnsave
jg
or
inc
ficom
sbb
cmp
xadd
xor
mov
pop
inc
lea
daa
mov
arpl
cmps
mov
add
pop
ss
add
pop
and
inc
dec
and
loopne
outs
sbb
clc
adc
mov
hlt
xchg
jo
mov
push
sub
add
nop
enter
pop
mov
iret
xchg
and
in
push
xchg
jnp
add
mov
stos
retf
dec
dec
or
ja
mov
in
push
aad
inc
test
lahf
outs
xchg
push
xchg
push
ja
pusha
adc
ret
fsubr
push
scas
push
stos
or
jns
rcl
movs
add
cmp
inc
push
adc
dec
es
push
add
mov
xchg
push
mov
test
pop
adc
dec
inc
std
jbe
call
cmps
adc
rol
scas
pop
mov
pop
add
or
or
in
dec
loope
or
xchg
dec
xchg
je
and
pop
adc
pusha
gs
stc
push
lea
xchg
sub
or
test
mov
pop
mov
sbb
push
cld
std
les
mov
js
and
sar
inc
add
in
jl
popa
inc
lock
cmp
xchg
pusha
xchg
pusha
sub
inc
add
or
into
mov
mov
pop
lods
je
add
addr16
call
pop
jne
test
rol
mov
or
adc
mov
ins
int
and
jb
adc
imul
dec
mov
dec
xor
inc
mov
push
or
push
ss
cmp
add
out
add
inc
add
dec
jne
es
(bad)
push
jge
test
or
jl
inc
dec
pop
xchg
jge
test
mov
cmc
push
in
mov
adc
movs
add
sub
adc
jbe
pop
call
adc
sub
(bad)
fidivr
cmp
jbe
mov
and
pop
enter
cli
lds
loop
adc
jp
test
(bad)
add
les
and
addr16
retf
rcl
push
sub
mov
inc
rol
shr
add
xor
mov
sbb
lods
fisub
adc
int
mov
add
lock
(bad)
mov
test
add
pop
or
bound
aad
hlt
(bad)
or
out
fs
enter
inc
inc
cmp
mov
lods
mov
je
dec
cmp
xor
mov
jo
cmps
(bad)
hlt
fld
xchg
loop
in
inc
out
sbb
jp
mov
add
xor
add
jl
add
jmp
pop
out
icebp
adc
movs
stos
enter
ss
test
ret
fsub
mov
sbb
or
sbb
stos
stos
or
sub
idiv
inc
mov
nop
mov
dec
clc
inc
loopne
jmp
adc
sub
or
or
repnz
js
xchg
and
jge
sub
jp
jmp
push
dec
sub
add
xlat
add
and
rcr
push
in
int
jl
dec
cmp
mov
jbe
out
mov
aas
sar
dec
sub
jno
xchg
push
adc
mov
jb
jmp
push
adc
jl
cmp
adc
push
sub
push
arpl
arpl
call
add
out
sbb
push
std
adc
cdq
mov
ret
rol
mov
daa
loopne
retf
inc
ja
adc
and
jbe
aam
or
cmp
jmp
stos
mov
mov
in
mov
inc
sbb
loopne
ss
mov
mov
xor
adc
in
fdivr
mov
jl
mov
ss
xchg
fwait
mov
fild
hlt
adc
in
mov
jo
sub
add
xchg
in
loope
lahf
jg
jl
jo
lock
mov
or
dec
push
xchg
rdpmc
shl
fs
add
aaa
(bad)
push
or
data16
jbe
xchg
lahf
adc
sahf
in
push
arpl
mov
mov
jne
jne
mov
ret
pop
retf
adc
add
pop
add
(bad)
(bad)
and
clc
xor
xchg
jl
inc
in
lea
sub
inc
ret
jmp
inc
dec
jne
or
pop
scas
adc
out
pop
jle
in
push
or
jmp
mov
push
fnsave
push
es
dec
cmp
push
sbb
out
mov
dec
dec
cmp
jne
cmps
test
dec
cmp
pop
jo
sub
mov
mov
popa
(bad)
jl
or
retf
mov
in
mov
loop
dec
and
hlt
xchg
pushf
mov
xchg
jp
or
mov
cwde
jne
loopne
push
ja
push
push
mov
or
retf
dec
xchg
push
out
cmps
(bad)
mov
pusha
je
push
lds
pusha
pop
or
jne
and
add
ror
iret
xchg
jl
clc
dec
clc
jns
test
fisub
jns
(bad)
and
or
pop
and
retf
add
inc
stos
pop
sti
popa
sbb
sbb
pop
sbb
adc
call
(bad)
or
fidiv
push
jnp
lods
clc
xchg
pop
inc
std
rol
ja
mov
lea
int3
add
pop
inc
and
push
(bad)
sub
outs
sbb
scas
add
lock
js
adc
cmps
push
sbb
pop
retf
mov
rol
or
xchg
xchg
pop
add
scas
add
push
fadd
add
add
xlat
pop
cs
xchg
adc
cmp
jne
or
pop
and
sbb
fadd
std
popa
cmp
pop
add
mov
das
retf
or
xor
add
arpl
test
cmp
sar
sbb
into
mov
inc
imul
enter
aam
mov
inc
dec
pop
sub
inc
lods
aas
fbstp
cmp
jle
bswap
stos
fiadd
leave
or
shr
push
xchg
mov
jecxz
into
test
pop
mov
loopne
lahf
add
(bad)
je
mov
push
(bad)
dec
pushf
sub
ins
pop
std
scas
cwde
push
sub
and
daa
icebp
sub
cmp
mov
mov
mov
out
mov
pusha
(bad)
out
push
repnz
inc
jb
out
add
(bad)
push
inc
add
fcom
push
cs
cs
es
add
or
and
jl
or
xor
aad
jo
adc
add
pop
push
mov
in
fistp
nop
jp
add
push
scas
gs
lods
pop
xchg
rol
scas
adc
mov
or
loope
push
mov
nop
std
mov
mov
cmp
cmp
and
xor
cmp
js
pop
call
cmp
sbb
test
dec
cld
pop
jmp
inc
call
adc
adc
pop
test
test
sbb
addr16
ret
aaa
ins
mov
and
pop
mov
bound
add
jl
xor
and
es
stc
sub
fiadd
xchg
inc
mov
sub
mov
or
mov
pop
or
xchg
add
or
xchg
add
daa
(bad)
popa
lahf
cmp
not
lea
imul
dec
jne
xor
adc
xchg
add
pop
nop
push
cld
push
jmp
jne
push
ficomp
adc
dec
or
cmp
push
je
add
push
fcomp
imul
(bad)
sub
push
inc
cmp
adc
lods
mov
or
fld
add
xchg
fdiv
cdq
or
add
jo
fsub
mov
push
or
dec
mov
cwde
mov
mov
xchg
push
add
mov
sbb
scas
data16
jle
add
in
aaa
ret
in
adc
cmp
jne
mov
jae
mov
popf
push
push
add
jae
neg
pop
loopne
fsubr
fdiv
jae
fsubrp
data16
fmul
pop
adc
cmp
add
mov
fwait
nop
or
cmp
jle
sbb
and
clc
sbb
jmp
les
inc
imul
ins
add
xor
jnp
or
int3
inc
sub
mov
adc
retf
mov
inc
loope
pusha
inc
inc
adc
push
xchg
add
imul
or
div
push
xchg
push
jle
sti
dec
jb
inc
loope
adc
mov
xchg
inc
loopne
hlt
xchg
ficomp
scas
nop
ja
je
movs
mov
sbb
sbb
xchg
in
and
pop
cmp
mov
push
sbb
mov
push
jae
loope
fsubr
ins
gs
push
sub
jno
outs
(bad)
push
inc
inc
dec
in
jne
mov
and
stc
aad
ins
movs
adc
pusha
mov
mov
adc
jbe
ret
adc
mov
movs
(bad)
jne
ret
outs
sbb
jb
cmps
pop
(bad)
push
sbb
sub
dec
movs
mov
pop
push
mov
adc
test
es
test
bnd
xor
cs
and
and
fsubr
test
shl
movs
cmc
pop
hlt
add
xor
sub
jno
sbb
lods
xor
sbb
jl
lahf
je
add
iret
xor
push
adc
push
jae
test
xor
shl
mov
mov
xchg
mov
sbb
mov
pop
ins
or
sbb
jmp
add
nop
sbb
fcomp
fdivr
js
sbb
cmp
lock
in
out
daa
push
jo
dec
retf
(bad)
leave
cwde
and
cs
test
test
or
movs
daa
scas
push
xchg
dec
or
xor
dec
out
ds
stos
adc
popa
add
out
cmp
add
icebp
mov
inc
dec
jne
sbb
xchg
out
fistp
sub
cwde
xchg
jl
add
mov
gs
call
push
shr
inc
or
mov
push
scas
xlat
mov
push
cmp
and
adc
adc
mov
xlat
mov
les
sub
(bad)
iret
and
inc
sbb
cmp
mov
or
add
sub
xchg
add
and
cli
sub
pusha
aas
cld
xchg
je
mov
jmp
repnz
jne
pusha
cmp
jo
test
xchg
stos
xchg
add
ficom
jl
scas
xor
jp
jge
jl
add
or
je
xchg
repnz
push
adc
inc
repnz
mov
mov
fistp
or
mov
ds
pusha
dec
mov
sbb
lds
add
mov
ja
and
ja
pop
enter
fs
pop
xor
(bad)
adc
xor
dec
sahf
je
jecxz
pushf
xchg
dec
jb
int
xchg
jno
lock
mov
je
js
push
dec
mov
adc
mov
div
(bad)
ds
pop
pop
test
sbb
gs
je
mov
es
cmp
js
push
(bad)
cld
fcomp
shl
or
test
stc
mov
add
outs
(bad)
ss
or
adc
push
mov
push
pop
push
sbb
(bad)
lock
jmp
into
adc
out
movs
add
(bad)
int3
enter
push
add
jg
mov
outs
add
mov
test
mov
ror
into
movsx
lds
das
js
and
jge
vmread
je
jns
je
je
movq
mov
sbb
js
xchg
dec
add
retf
add
and
dec
mov
cmp
xadd
push
(bad)
movsx
pop
or
pop
pop
mov
mov
or
mov
mov
pushf
sbb
cmps
(bad)
mov
dec
jg
sub
sbb
sbb
mov
mov
inc
mov
dec
mov
retf
inc
push
std
mov
xor
sahf
nop
cmp
cmp
hlt
jo
ret
jl
xchg
jmp
lea
xchg
or
shl
push
int3
mov
(bad)
cmp
pop
call
rol
pushf
adc
add
and
popf
shl
mov
mov
(bad)
mov
loope
cmp
adc
sbb
add
push
sahf
inc
push
adc
and
or
and
push
mulps
mov
jbe
jno
pop
aad
sbb
inc
and
inc
add
inc
aam
ret
lock
test
sub
adc
push
imul
lods
sub
daa
aam
dec
push
push
mov
add
rcr
aad
pmulhw
push
and
mov
pop
lds
push
pop
sbb
push
mov
pop
into
adc
(bad)
lea
pop
test
mov
(bad)
(bad)
ds
mov
or
popf
mov
cdq
xor
or
outs
imul
lods
addr16
sbb
mov
mov
mov
jl
fadd
push
enter
std
clc
push
push
xor
mov
sbb
sbb
jge
xlat
and
pop
push
dec
in
sbb
(bad)
imul
mov
es
loopne
loopne
jbe
and
js
mov
push
mov
cmp
mov
(bad)
push
sti
mov
sbb
and
mov
mov
add
jg
push
(bad)
or
adc
cld
xor
pusha
inc
push
xor
mov
(bad)
cs
or
cwde
out
adc
in
stos
adc
cwde
je
mov
push
stos
popa
xchg
inc
push
cwde
cli
dec
dec
pop
ja
cmp
sahf
retf
xor
retf
add
push
addr16
rcr
add
nop
push
mov
or
addr16
inc
mov
(bad)
and
add
xor
(bad)
mov
stos
addr16
repz
fisttp
xchg
je
pusha
mov
fldpi
sbb
push
lea
das
mov
and
hlt
jo
(bad)
push
push
xor
mov
cmp
inc
lods
stos
jge
(bad)
mov
xadd
add
fcmovnu
dec
fild
ja
loop
fild
fcom
nop
inc
enter
test
add
or
xor
push
rol
rol
fneni(8087
(bad)
adc
ins
sbb
push
ror
xor
repz
or
pop
popa
jecxz
and
in
push
cli
mov
push
out
jmp
fst
or
sbb
gs
movs
loop
push
mov
push
(bad)
pusha
adc
push
fld
dec
sbb
fisttp
loop
mov
loopne
fdivr
test
sbb
mov
push
dec
aas
jno
shl
cmp
lods
rcl
inc
aas
aam
add
int3
dec
sub
xor
xor
pop
fisttp
lea
adc
push
pop
mov
inc
dec
pop
ror
add
fwait
sbb
ds
dec
sub
pop
call
pop
cwde
adc
push
push
push
sar
mov
or
addr16
dec
mov
loop
xchg
push
jmp
ja
loope
jl
je
pusha
adc
adc
arpl
adc
push
shl
mov
cmp
cmp
cmc
jle
mov
movs
cmp
sbb
fcom
shl
pop
pop
xor
pop
sbb
sub
ret
cmp
cmp
ror
cli
jecxz
cmps
pop
push
cmp
or
iret
clc
das
mov
jbe
mov
sub
adc
add
je
cmps
dec
sub
xor
adc
iret
shl
add
jl
jae
inc
and
rcr
mov
maxps
loopne
in
pop
jne
pop
pusha
inc
cmp
movs
dec
enter
inc
push
in
jno
add
div
add
inc
stos
in
push
jae
or
pop
mov
add
adc
(bad)
aas
adc
add
add
loopne
shr
dec
pop
sbb
pmullw
push
dec
mov
movq
mov
pop
mov
xchg
mov
aad
stos
add
and
mov
push
push
mov
in
ss
hlt
push
enter
add
test
je
mov
push
jb
pop
jmp
or
not
sub
rcl
or
jnp
add
mov
cdq
xlat
cmp
dec
xchg
mov
fwait
xchg
xchg
mov
ret
ret
mov
dec
and
(bad)
mov
cmp
je
pushf
xor
aad
add
inc
adc
pop
add
call
out
daa
ret
ins
push
fsub
add
jge
lea
loope
push
adc
jae
mov
push
fadd
fldenv
rol
xadd
popa
stos
pop
mul
lods
pusha
pop
out
nop
and
aas
pop
fsub
mov
push
jmp
mov
lds
mov
mov
mov
mov
movs
add
test
jns
xor
mov
pop
ret
out
or
push
add
rol
(bad)
mov
pop
or
mov
add
add
nop
inc
inc
outs
fdivr
add
xchg
aad
adc
outs
or
push
adc
lods
das
fist
mov
pop
adc
xchg
sub
lea
mov
shl
adc
xchg
or
sbb
dec
or
push
pushf
push
shr
das
push
push
xchg
add
sbb
dec
or
cmp
add
rcl
push
imul
pop
xchg
pop
add
shl
add
or
pop
add
addr16
fimul
push
js
scas
mov
cs
adc
mov
add
pop
adc
inc
je
add
pop
ror
aad
cmp
and
xchg
add
jae
pop
loopne
pop
jo
outs
jbe
jae
adc
and
in
cmp
inc
add
sub
pusha
rol
jmp
les
pop
sub
adc
or
adc
mov
push
mov
push
pop
jo
sbb
inc
cdq
add
mov
ret
xchg
push
sub
xor
jo
add
sub
adc
dec
pop
adc
xchg
inc
nop
pop
add
hlt
xchg
or
nop
push
ja
in
sub
inc
mov
add
pop
add
neg
push
loopne
shr
aaa
cmp
(bad)
ret
(bad)
fldcw
sbb
and
(bad)
pop
add
and
add
test
sti
push
(bad)
jne
rol
push
lods
std
cmps
add
sbb
xor
sbb
es
dec
xor
sbb
test
fimul
ins
test
jo
jge
or
movs
sar
pop
push
adc
mov
ins
arpl
loop
add
and
xor
retf
inc
jo
add
rol
add
outs
sbb
inc
pop
outs
rol
ss
mov
cmp
xlat
fadd
outs
xor
push
lods
push
sub
and
and
test
add
ss
sar
xor
cwde
add
outs
out
jmp
mov
pusha
outs
adc
xor
ud0
push
and
outs
imul
xchg
test
adc
push
sub
and
add
add
lds
add
sbb
rol
xlat
in
pusha
das
sbb
inc
out
sbb
push
outs
cmp
jmp
sbb
push
jmp
or
addr16
test
call
out
mov
jp
mov
dec
(bad)
fidiv
or
jl
jno
rcl
test
enter
gs
push
jae
cmp
test
rcl
pop
pop
jo
sbb
push
out
jmp
pop
imul
aam
mov
sbb
add
push
or
push
mov
dec
mov
push
cvttps2pi
mov
int
clc
getsec
inc
outs
dec
jmp
lods
cmp
inc
paddusb
pop
aad
sbb
pop
inc
add
(bad)
push
push
or
paddusb
fdiv
inc
pop
xchg
js
pavgw
psrad
add
test
pusha
(bad)
mov
cmp
dec
leave
add
adc
add
mov
jmp
inc
mov
lods
lock
pop
or
mov
pop
add
mov
or
mov
clc
or
or
xor
jmp
mov
inc
add
mov
loopne
rol
adc
enter
dec
fild
test
stc
sbb
inc
dec
dec
add
mov
inc
ja
shr
or
mov
push
or
push
add
sub
scas
stc
jmp
(bad)
in
ja
pop
mov
std
sbb
pop
cdq
adc
jg
cmp
mov
adc
call
into
adc
sbb
push
add
jl
xor
push
mov
cld
pop
pusha
in
push
in
sbb
push
mov
pop
dec
inc
pop
pop
jmp
in
jbe
pop
psubusb
mov
rol
add
jge
mov
pop
sbb
mov
sbb
sbb
cmp
sub
xchg
pushf
and
inc
cmps
and
add
jnp
push
add
fwait
or
jne
ret
xchg
sbb
or
sbb
push
iret
add
retf
(bad)
xlat
jnp
rol
pusha
jo
fist
add
fnstcw
inc
add
or
inc
add
add
add
shl
pop
and
lock
shl
enter
(bad)
(bad)
or
dec
sbb
or
out
or
sbb
cld
shl
push
add
cmp
mov
sub
int3
mov
xor
(bad)
pop
mov
nop
es
nop
and
push
nop
adc
cmp
sti
mov
sub
dec
int
adc
add
pop
inc
mov
out
xor
ds
dec
pop
or
rol
pop
pop
fimul
pop
sbb
or
xor
mov
enter
adc
imul
push
and
bound
fld
shl
sbb
or
add
icebp
push
es
inc
xchg
sbb
inc
add
xor
push
popa
jo
xor
cld
sbb
out
js
push
jmp
mov
aam
and
mov
daa
push
cwde
retf
add
and
(bad)
dec
adc
pop
outs
and
mov
rol
call
repz
lahf
cmp
or
or
cmp
jle
lock
(bad)
fidivr
test
sub
call
add
jae
adc
mov
in
adc
and
ficom
mov
in
loopne
mov
imul
loopne
dec
and
lock
loopne
jne
mov
push
cmp
lahf
xor
data16
sbb
xchg
or
add
js
lds
inc
js
fcom
pop
lea
sbb
inc
and
mov
out
mov
pusha
mov
or
xor
inc
mov
outs
add
jb
mov
inc
rcr
xchg
dec
aas
mov
cmps
cli
and
add
add
mov
xor
inc
inc
and
and
push
cwde
jno
push
loopne
push
scas
mov
add
add
(bad)
scas
jo
add
in
xor
scas
cld
fistp
and
fld
sub
dec
stc
sbb
add
stos
loope
loop
or
mov
loope
add
add
leave
mov
lea
inc
adc
add
add
mov
out
xor
sbb
mov
cmc
and
add
or
rol
sbb
push
out
mov
out
and
out
pop
add
xor
js
icebp
sbb
add
(bad)
into
std
sbb
in
test
sbb
push
xchg
(bad)
pop
mov
retf
adc
mul
fadd
test
push
shr
mov
loope
add
inc
mul
push
imul
es
adc
push
sbb
fs
or
jo
ja
popf
ret
popw
fbld
pop
loope
push
pop
jmp
ja
test
dec
jno
jmp
adc
jo
inc
mov
(bad)
jne
or
das
cmp
xor
imul
xor
cmp
test
mov
hlt
mov
lods
add
or
ret
das
mov
shr
in
pushf
jne
add
mov
enter
or
psubd
das
add
cmp
pusha
das
jne
mov
(bad)
aam
aaa
cli
xchg
pop
je
push
mov
sti
dec
inc
call
sti
dec
mov
mov
add
dec
data16
ss
je
xchg
add
cld
mov
mov
or
daa
lea
sahf
xor
cmp
push
dec
bound
xchg
sbb
std
dec
call
(bad)
mov
jb
mov
xor
and
pop
cmp
cmp
push
mov
movs
mov
cli
jle
les
cmp
adc
sbb
dec
push
sbb
sbb
push
inc
mov
pushf
das
aas
mov
xchg
push
stc
mov
aas
sti
les
mov
pop
inc
pop
adc
or
pop
sbb
xchg
arpl
mov
std
sub
cmp
jmp
ja
shl
scas
fwait
aam
or
popf
mov
cmp
xor
mov
add
repz
iret
pop
pop
fmul
mov
shr
popa
mov
iret
sbb
dec
mov
adc
repnz
mov
add
ins
int
xlat
adc
mov
xor
push
(bad)
rol
mov
add
jb
pop
cmp
scas
lea
adc
nop
ror
adc
lock
movs
pop
hlt
inc
sbb
push
inc
in
popa
rol
add
and
pushf
sub
adc
sub
(bad)
mov
push
enter
adc
repz
sub
sbb
cmp
push
add
jmp
push
mov
add
adc
pop
add
mov
rcl
mov
inc
adc
inc
and
jle
pop
and
add
pop
push
mov
gs
arpl
push
into
jmp
add
loopne
outs
inc
mov
add
out
push
add
pop
out
mov
adc
out
adc
add
add
ret
cmps
adc
adc
adc
pop
or
daa
out
inc
add
repz
sub
out
mov
add
mov
xor
mov
sub
jmp
jmp
mov
cmp
shr
mov
or
addr16
fucomi
mov
add
add
mov
jne
add
sub
enter
inc
data16
pusha
mov
inc
nop
cmps
out
loopne
icebp
sbb
mov
xor
push
sub
in
popf
add
clc
in
iret
push
or
mov
shl
mov
fcmovu
adc
retf
dec
rcl
leave
and
(bad)
(bad)
rcr
or
adc
lea
add
(bad)
mov
sbb
add
int
adc
push
stos
push
or
add
jmp
xchg
mov
or
add
in
jbe
mov
sub
add
mov
rcr
jbe
mov
mov
add
lock
pop
mov
push
(bad)
nop
lahf
cmp
fsubr
add
loop
fstp
mov
sbb
or
mov
retf
add
jl
jns
sti
out
add
mov
xchg
adc
and
pop
nop
push
xchg
add
mov
xchg
test
movs
pushf
push
test
test
or
add
add
add
cs
push
cmp
add
add
hlt
outs
popf
adc
add
fadd
jne
lea
loope
lea
mov
sub
or
sti
inc
mov
cmp
rcr
adc
(bad)
adc
fcom
push
pop
dec
jns
mov
retf
gs
add
int3
pop
or
test
out
sbb
fdiv
cmps
or
or
shl
mov
fcomp
add
add
adc
sbb
call
out
call
les
xlat
bound
pop
leave
dec
jmp
pop
pop
jbe
xchg
aas
sbb
pop
sbb
add
clc
adc
(bad)
fcomp
adc
loopne
or
dec
repz
outs
push
loope
int
cmp
mov
outs
push
loope
add
ficomp
xchg
add
or
enter
dec
fist
mov
push
ror
fndisi(8087
dec
push
push
adc
xchg
sbb
add
or
nop
bndstx
in
ret
mov
adc
pop
not
sbb
mov
xchg
push
cli
mov
xor
or
pop
das
xchg
pop
enter
xchg
add
inc
std
push
xchg
inc
add
or
(bad)
jb
ins
in
lods
cmp
add
(bad)
repnz
stos
gs
(bad)
(bad)
and
pop
sub
adc
cmp
je
jmp
xor
inc
push
xchg
daa
cmp
and
xchg
lds
add
xchg
cmc
test
cmc
das
lahf
(bad)
rol
scas
mov
or
add
jg
cs
inc
push
loopne
lea
add
add
cmp
add
jns
push
and
adc
ja
add
xor
adc
cmp
cmp
push
cmp
les
ja
and
sbb
jb
cmp
sbb
movs
and
in
add
jle
dec
test
cmp
cmps
or
mov
sbb
mov
jo
fild
ja
cmps
sahf
push
inc
icebp
sub
adc
push
lods
push
mov
cmc
jnp
fwait
mov
loopne
inc
xor
inc
jp
data16
mov
mov
loop
movs
mov
adc
aas
(bad)
dec
cmp
mov
add
inc
add
cmp
xlat
adc
sbb
in
icebp
ins
movs
movs
and
sbb
retf
jo
xchg
clc
mov
push
loopne
push
enter
(bad)
sub
sbb
dec
lods
jp
jge
fisttp
mov
jo
xchg
daa
sub
je
xchg
loopne
push
xchg
add
jo
sbb
not
push
xor
mov
das
push
cmp
dec
ret
jmp
inc
test
sub
sbb
xchg
sub
xchg
xchg
mov
sub
stos
or
pushf
mov
shl
push
push
add
stc
enter
inc
cmps
enter
and
inc
push
(bad)
pop
cli
nop
or
push
jle
sub
sub
aad
or
lahf
mov
push
pop
lahf
cmp
inc
inc
(bad)
in
push
loop
bound
adc
hlt
loop
jmp
and
sbb
(bad)
pop
(bad)
into
sub
in
enter
jmp
cmp
dec
and
ins
in
push
je
call
(bad)
in
or
call
mov
fs
add
pop
sub
dec
mov
fwait
cmps
mov
and
mov
push
inc
mov
jae
jge
sar
push
(bad)
fsub
outs
lods
and
fdivr
xchg
mov
pop
jmp
jge
mov
sub
in
dec
test
imul
and
(bad)
das
lock
mov
dec
jg
dec
adc
xchg
mov
pop
sub
ja
xchg
data16
adc
cli
sub
aam
push
movs
mov
inc
in
mov
push
cmp
nop
mov
pop
neg
mov
jne
fucomip
lsl
add
ret
popa
clc
icebp
lods
mov
nop
adc
fcom
test
add
pop
cmp
mov
cmps
je
dec
inc
mov
jle
(bad)
lea
push
xor
sub
push
push
sbb
xor
retf
fs
push
sar
pop
fsubr
js
fimul
push
dec
xor
and
pusha
mov
out
rol
or
cmps
mov
push
sub
scas
adc
stos
adc
sub
sub
fimul
aas
xchg
out
cld
mov
mov
inc
sub
or
mov
out
mov
into
cmc
(bad)
shl
sbb
add
movs
and
adc
sbb
inc
scas
sub
add
dec
push
popf
scas
inc
adc
ja
iret
pop
mov
arpl
push
mov
je
ja
inc
add
outs
ss
mov
add
and
inc
sbb
loopne
and
and
push
lock
mov
mov
test
lock
rcl
push
mov
or
xor
mov
jnp
ins
xchg
mov
nop
sub
sub
std
jae
bound
mov
push
xchg
shr
mov
inc
pop
inc
adc
data16
jmp
test
inc
mov
push
addr16
loope
mov
cdq
fmul
inc
stos
mov
adc
pop
nop
push
ret
or
dec
xor
sbb
pop
push
push
sbb
push
mov
mov
push
adc
sub
xor
or
dec
scas
inc
ror
jae
inc
add
pop
jl
and
test
sti
xor
(bad)
call
aaa
xlat
push
adc
pusha
or
adc
sbb
or
into
adc
inc
cs
push
pop
and
jg
jge
add
sahf
(bad)
cmp
and
or
inc
add
dec
add
add
fucomip
pop
mov
je
mov
jge
xor
call
jo
sub
test
or
and
ins
add
push
ins
and
add
dec
test
jl
inc
pop
add
jmp
hlt
add
call
push
pop
or
ret
adc
dec
lock
cdq
and
push
ss
add
xchg
sbb
dec
pop
push
add
xor
popf
dec
fadd
loopne
mov
dec
out
sub
adc
inc
nop
mul
xchg
mov
mov
addr16
dec
push
sbb
sub
add
stos
fsub
pop
pop
jbe
push
stos
xchg
rcr
pop
loop
aaa
icebp
bound
sub
xor
stos
sbb
sub
and
inc
cmp
fnsave
inc
outs
loope
sbb
sbb
out
sbb
js
retf
pop
fidivr
push
sbb
mov
add
xor
fwait
adc
bound
aam
popa
xor
sar
ud1
mov
add
stc
cmp
cmp
pop
push
add
cmc
xchg
push
test
je
test
jmp
jmp
inc
cmp
jge
test
pop
inc
cdq
and
sbb
jmp
adc
loope
retf
jge
out
mov
jmp
call
add
dec
pop
or
int3
xor
inc
xchg
je
push
push
xor
cs
test
fwait
or
into
hlt
sub
inc
fidiv
sbb
fnsave
aaa
xor
and
mov
or
add
shl
or
sbb
add
inc
js
and
es
ror
out
mov
sbb
xlat
pop
mov
nop
mov
adc
pushf
outs
fdivr
sbb
fdivr
fbstp
loopne
xlat
cmc
jge
repnz
(bad)
adc
(bad)
cmp
jg
adc
mov
neg
aam
push
jl
jmp
loope
stc
ret
sbb
cmp
dec
or
mov
cwde
in
mov
rcr
push
adc
push
add
mov
stos
push
inc
inc
add
or
sub
retf
xchg
(bad)
adc
cmp
ds
jmp
sbb
add
enter
adc
into
push
or
sbb
imul
and
sbb
fcomp
ret
push
fdiv
jne
ret
out
add
or
fldenv
fldenv
das
lods
add
or
pop
and
add
mov
jge
inc
and
xor
das
fucom
xor
mov
and
lods
rcr
pushf
mov
jo
pop
cli
xor
push
adc
outs
add
and
lods
das
xor
shl
cmps
add
sub
xor
cmp
push
repz
fnsave
push
mov
in
sbb
pop
movs
jp
rcr
add
sub
std
adc
jmp
cmp
or
mov
(bad)
pusha
xor
xor
loope
mov
and
lahf
push
fsubr
mov
stos
xchg
les
shr
add
sub
add
dec
pop
adc
pop
xlat
nop
shr
xchg
ret
je
sub
std
and
jno
mov
ret
pop
pop
xlat
jno
dec
cmp
pop
cmp
dec
loop
and
popf
pop
and
and
xor
push
ins
adc
jmp
inc
dec
jne
add
jb
or
(bad)
ja
xchg
sti
rcr
ss
jmp
cmp
jne
(bad)
scas
cli
mov
hlt
fsubr
xor
loop
cmp
jl
sbb
cwde
(bad)
(bad)
add
add
fcomp
(bad)
mov
push
or
sti
shl
inc
test
pushf
fs
ficom
pop
and
and
and
shr
or
fimul
pop
inc
imul
adc
or
inc
cmp
jle
push
mov
mov
stos
ret
mov
pusha
mov
call
mov
les
push
mov
or
xor
imul
add
test
push
jmp
xchg
add
xchg
push
(bad)
cld
clc
not
(bad)
call
je
mul
fbstp
loop
push
je
or
add
scas
push
fs
js
or
and
jo
cmp
lods
les
xor
dec
int
jns
je
and
rol
in
movlps
push
add
cmp
or
test
mov
pop
lea
xor
and
shl
adc
in
xor
sbb
ret
inc
pop
push
jg
mov
jbe
je
mov
jo
cmps
push
test
push
mov
daa
adc
mov
mov
pop
fsub
xor
xchg
or
jg
add
int3
cs
inc
and
lahf
push
mov
hlt
inc
xchg
or
jo
sar
push
(bad)
mov
cmp
cdq
adc
and
hlt
das
test
in
loop
ror
das
test
sub
mov
hlt
xchg
data16
jmp
mov
add
loopne
jb
inc
adc
sub
retf
and
cmp
mov
inc
jo
push
test
cmp
in
fadd
cwde
ret
cdq
loop
(bad)
lock
test
dec
or
adc
xor
cld
pusha
sbb
test
dec
sub
sub
xchg
inc
pushf
lahf
pop
inc
lock
mov
sub
or
mov
nop
dec
cs
pop
pusha
je
mov
jle
cs
adc
dec
add
xchg
sub
inc
sbb
pop
popf
inc
xchg
pop
adc
or
xor
and
lods
das
pop
push
or
js
cmp
or
shl
dec
inc
adc
adc
add
adc
mov
sub
pop
push
shr
pop
scas
pop
arpl
xlat
in
fisttp
mov
or
dec
in
pop
shr
daa
add
add
(bad)
and
jno
adc
pop
hlt
pop
or
or
aam
aas
pcmpeqw
sub
or
sbb
sub
stos
les
xchg
pop
pop
push
pop
cmp
ficom
xlat
mov
mov
pop
cmp
xor
xor
jl
lods
inc
mov
dec
adc
pop
bound
retf
adc
xlat
pop
push
test
pop
mov
sbb
adc
or
ds
jno
push
retf
mov
jo
inc
pop
lods
je
addr16
test
push
push
sar
cmp
lock
fcom
fnstcw
jnp
out
mov
mov
hlt
mov
inc
mov
cmp
pop
add
jbe
cmp
inc
jge
pop
jmp
rol
(bad)
(bad)
add
popa
dec
imul
dec
pop
sbb
add
in
lods
dec
aad
push
pop
out
jo
mov
dec
add
push
stos
push
xchg
into
pop
mov
jb
mov
sub
ja
in
adc
mov
jo
js
ret
repnz
or
int3
or
(bad)
repz
pop
(bad)
retf
ret
adc
icebp
push
aaa
(bad)
add
pop
lods
aas
mov
fild
push
inc
fsubr
nop
push
pop
adc
xor
mov
mov
pop
pop
sbb
adc
ret
lods
shl
jecxz
retf
pop
sub
cwde
dec
hlt
data16
int3
scas
out
fs
inc
inc
cmp
fwait
xor
(bad)
out
jp
or
cmp
xor
mov
hlt
pop
or
cmps
cmp
lods
xlat
sbb
cmc
rcr
(bad)
push
test
jne
repz
sbb
cmp
pop
aaa
mov
xor
aas
dec
enter
aas
pop
sub
nop
mov
stos
inc
xchg
cmp
jne
and
cmp
xchg
cmp
lods
call
add
ret
ss
mov
aam
imul
adc
and
sbb
xchg
shr
pop
pop
sbb
xchg
stos
inc
mov
xor
shr
jge
mov
dec
push
sub
jl
cmp
ss
test
hlt
adc
ja
sti
xor
mov
jo
sub
jl
icebp
adc
jg
jl
movs
xchg
cmp
mov
xchg
add
rol
dec
pop
xor
xor
in
popa
adc
push
jmp
pop
push
test
outs
sbb
jne
sub
push
sub
lea
jle
(bad)
js
(bad)
out
cmp
add
repnz
mov
xor
add
test
les
xor
cmps
xchg
rcl
push
popa
int3
or
test
popa
(bad)
jl
or
retf
mov
jle
mov
jg
pop
adc
xchg
imul
mov
test
call
xor
push
out
push
sub
push
push
and
pop
or
jne
adc
and
test
movs
lods
js
jne
dec
clc
jns
sbb
xor
fs
ins
jns
mov
dec
es
cmps
or
jg
push
das
shl
stos
mov
je
mov
pop
je
inc
sbb
adc
call
(bad)
push
test
fwait
test
fidiv
adc
cmp
daa
cmp
nop
js
add
daa
cmp
das
daa
aaa
and
retf
cmp
cmp
push
daa
dec
and
leave
or
aam
cmp
mov
mov
daa
cmp
add
scas
daa
mov
mov
ins
ror
jbe
sub
das
daa
cmp
cs
xlat
push
daa
test
jmp
js
sub
inc
daa
sub
xchg
outs
jns
jmp
daa
adc
cmp
adc
sbb
inc
daa
hlt
daa
jb
nop
pop
cmp
push
mov
mov
dec
push
xchg
mov
inc
sub
inc
cwde
pop
cmp
or
test
mov
pop
add
push
push
daa
add
inc
fld
inc
cwde
or
and
or
lods
inc
or
pop
js
retf
daa
test
adc
push
jmp
dec
inc
test
push
lods
jnp
inc
push
mov
inc
adc
int
adc
test
dec
dec
mov
in
aas
fs
or
movs
cmp
enter
enter
stos
sub
shl
daa
inc
xchg
adc
xchg
add
inc
and
inc
sub
mov
adc
cmps
call
push
pop
push
adc
inc
mov
push
sub
test
aam
out
xor
xchg
lods
dec
js
jns
sub
daa
pop
fild
or
push
push
cmp
fwait
dec
fimul
aad
push
daa
jp
jl
dec
pop
mov
mov
sbb
inc
das
(bad)
pop
movs
xor
inc
daa
dec
and
add
jmp
(bad)
fidiv
loopne
scas
ins
adc
dec
push
push
sbb
loopne
mov
test
lock
sub
pop
(bad)
cmp
push
pop
shr
xor
adc
mov
push
dec
call
xchg
or
sbb
add
in
cli
stos
push
xor
dec
rcl
mov
add
ss
mov
mov
outs
out
or
ror
and
adc
pop
xor
shl
jge
push
test
pop
ja
ror
in
push
call
mov
pop
mov
mov
pop
or
out
cs
mov
or
pop
mov
gs
mov
xchg
or
adc
test
loopne
adc
xchg
jo
adc
xor
cmp
xchg
mov
aam
jle
or
nop
inc
adc
push
sub
adc
cmps
push
xchg
cmp
xor
je
xchg
dec
mov
je
or
add
jg
inc
dec
aaa
adc
or
pop
adc
cmp
push
adc
pop
sub
inc
test
dec
cld
aam
xchg
pushf
fsub
mov
pop
fs
or
cs
(bad)
adc
push
popf
in
push
stos
retf
xchg
repnz
ret
lock
xchg
(bad)
push
es
mov
xor
cwde
push
sbb
pop
or
adc
mov
or
jo
cmps
dec
adc
adc
and
leave
aaa
lds
or
mov
jne
or
jl
add
or
and
mov
pop
sub
adc
push
mov
and
addr16
pop
push
test
pusha
stc
cmp
cmp
sub
sbb
dec
push
je
fcom
add
and
fs
bound
mov
test
xlat
adc
test
sub
dec
sbb
xor
in
mov
out
pop
inc
mov
fnstsw
and
mov
out
cmc
arpl
ss
loopne
sub
out
xchg
dec
scas
push
out
mov
daa
and
mov
xchg
and
lea
push
add
(bad)
fimul
mov
pop
sub
and
pop
add
(bad)
cmp
aas
and
mov
pusha
arpl
ret
(bad)
nop
sbb
mov
in
and
or
jne
adc
pop
mov
push
xchg
imul
ret
ds
push
push
mov
pop
lds
mov
mov
mov
mov
jmp
push
mov
add
mov
mov
rcl
sbb
pop
(bad)
sbb
inc
call
rol
(bad)
es
shl
fdivr
mov
sbb
call
push
ret
sbb
cld
and
mov
inc
cmps
push
icebp
dec
adc
neg
(bad)
stos
shrd
mov
(bad)
or
arpl
sbb
cli
inc
imul
imul
jge
and
sub
dec
aad
cdq
jo
shr
xor
or
fs
or
inc
ret
fstp
fiadd
into
sbb
fst
and
add
pop
(bad)
push
int3
sbb
nop
enter
cli
mov
(bad)
jnp
dec
sti
pushf
dec
sub
dec
xor
ret
or
aam
sti
pop
push
pop
sub
pop
adc
mov
mov
pop
adc
sbb
push
stos
inc
adc
push
bound
jle
addr16
stos
jo
dec
test
inc
or
inc
jbe
les
xor
dec
jne
das
dec
cmps
in
cdq
outs
lock
lock
ss
fbstp
loop
push
je
or
or
xchg
pop
jo
xor
das
xor
pop
xor
in
mov
or
fild
clc
jns
push
ins
push
xchg
mov
jns
imul
out
mov
push
imul
out
jp
jae
and
popa
add
push
cmps
mov
mov
(bad)
hlt
inc
add
shl
test
pop
inc
daa
adc
test
mov
adc
cmp
mov
or
in
retf
movs
test
or
or
hlt
fcmovnb
push
pop
into
dec
iret
ss
repz
dec
pop
lock
add
mov
pop
pop
adc
dec
int3
ret
pop
fild
ss
xchg
push
cmp
xor
inc
dec
(bad)
fsub
mov
pushaw
inc
or
ud1
aas
cdq
popa
cmp
ficom
shl
lea
pop
out
into
(bad)
scas
iret
int3
jl
xor
sbb
mov
adc
sub
push
stos
add
push
aas
ret
add
push
add
enter
jo
aaa
dec
mov
sbb
sahf
retf
or
add
add
retf
adc
xor
nop
push
adc
add
int
cmp
push
or
(bad)
neg
jg
mov
sub
shr
add
sbb
adc
mov
std
jge
into
push
and
lea
jmp
fincstp
pop
into
popa
sbb
jle
push
mov
or
lods
sbb
mov
lods
adc
out
daa
jns
pop
and
js
dec
inc
mov
xor
out
pop
cwde
in
fcomp
out
mov
pop
push
or
out
pop
and
outs
sub
cmc
inc
xchg
mov
lods
sbb
xchg
push
out
aad
push
xor
mov
out
inc
pushf
mov
test
out
inc
and
and
out
mov
cmp
adc
dec
(bad)
out
scas
sbb
jae
mov
daa
add
push
pusha
adc
mov
and
jl
cld
out
push
shl
out
sub
dec
sbb
fs
or
out
out
jp
in
ja
out
sbb
outs
outs
jle
dec
inc
out
int
push
mov
addr16
fidiv
sub
mov
ins
shl
bound
add
ins
les
ds
repnz
push
jg
loope
dec
dec
add
xchg
xor
lods
out
out
sbb
push
mov
pop
out
lock
lods
xchg
mov
movntq
push
lods
mov
out
and
pop
hlt
out
sbb
out
mov
sbb
out
mov
xor
and
adc
stos
mov
ss
dec
les
or
out
adc
or
das
popf
sub
and
jg
test
adc
out
pop
fnstsw
adc
outs
cmp
adc
out
adc
push
pop
and
mov
lock
nop
pushf
in
jo
jo
dec
test
jo
jo
sbb
mov
scas
add
outs
dec
mov
or
fs
add
sbb
pop
jmp
out
sahf
pop
(bad)
sub
pushf
pop
add
das
xor
jae
adc
sbb
push
add
jae
pop
cld
ror
lea
push
push
xchg
sub
push
add
add
lods
add
sub
mov
sbb
mov
cmp
cmp
and
cli
or
inc
adc
jmp
ins
movs
xchg
or
loopne
xchg
ss
aam
cmp
jb
shl
adc
or
mov
shl
test
jmp
daa
adc
nop
inc
push
cmp
push
pop
test
adc
push
and
mov
xchg
mov
jno
sub
cmp
push
pop
cmp
into
jp
adc
(bad)
dec
dec
test
inc
test
xchg
pop
rcr
or
and
mov
or
mov
push
pop
cmp
mov
jmp
mov
cs
push
mov
inc
popf
les
rol
jnp
cmps
into
jo
scas
push
pop
mov
test
nop
cmps
mov
in
loop
cmps
inc
test
adc
mov
sbb
mov
loop
adc
mov
mov
inc
xchg
jmp
adc
fmul
lods
repz
scas
test
xor
stos
retf
push
js
scas
push
ja
adc
mov
mov
or
scas
inc
cs
in
lods
cwde
cwde
aad
mov
xor
pop
or
add
mov
fiadd
je
or
push
add
fs
dec
add
aas
mov
fadd
loop
pusha
test
add
pop
test
sbb
div
jnp
xchg
and
jmp
xor
sub
and
lahf
or
out
jb
cwde
xor
push
ins
or
mov
arpl
adc
fdiv
mov
mov
pmuludq
xor
mov
jo
adc
xor
mov
adc
jg
jl
sbb
jl
mov
xchg
mov
cmp
dec
pop
mov
cmp
ror
test
cmp
or
add
jo
adc
ja
loopne
mov
call
jns
sub
pop
cmp
sbb
pusha
adc
add
or
ret
stos
es
mov
mov
mov
loop
outs
add
aam
aaa
push
jne
sbb
arpl
pop
push
push
and
rol
outs
pusha
pop
or
jne
sub
xchg
jne
dec
clc
jns
gs
lods
fs
ins
jns
and
and
dec
pop
pop
pop
jg
or
adc
bound
(bad)
push
call
ficomp
mov
xchg
jg
jmp
and
push
xlat
jg
jb
inc
push
push
add
and
cmp
mov
or
fs
xchg
adc
push
jp
add
fcom
movs
cmp
pop
add
je
push
fdivp
push
jmp
cdq
push
test
push
mov
inc
push
and
adc
daa
inc
jo
mov
xchg
push
sbb
cmp
add
push
mov
and
inc
xchg
outs
or
cmp
test
xchg
add
mov
pop
adc
push
sub
and
add
xchg
test
adc
mov
mov
jmp
push
mov
sbb
push
push
cwde
in
adc
dec
or
mov
push
test
mov
mov
add
call
fst
adc
call
repnz
shr
and
inc
and
add
push
jb
push
adc
push
push
jmp
aam
inc
xchg
push
pop
stos
push
sub
test
test
ror
je
push
out
dec
push
mov
test
js
je
or
push
test
sbb
cmp
movs
movs
(bad)
mov
push
jp
mov
inc
add
xchg
push
(bad)
inc
jb
mov
mov
push
pop
sbb
jno
sub
lea
or
dec
jl
mov
hlt
jo
mov
adc
aam
inc
(bad)
mov
push
push
push
push
adc
add
fcom
call
repz
adc
add
jo
push
xchg
jb
dec
clc
cmp
out
call
pop
xchg
pushf
and
cmp
test
mov
cmps
pop
mov
push
mov
cmp
aaa
mov
pop
xor
dec
loopne
push
enter
add
aas
mov
adc
or
cdq
inc
fisttp
push
mov
dec
fisttp
rol
lods
adc
lea
(bad)
mov
movs
retf
cmp
xchg
fcom
adc
cmp
call
push
jmp
mov
push
inc
jmp
adc
dec
adc
inc
jo
mov
daa
call
inc
cmp
push
cmp
push
sub
ret
jb
enter
add
push
add
stos
jmp
clc
cmc
dec
mov
sub
mov
sbb
fimul
test
xchg
je
cwde
pop
push
inc
sub
pop
mov
pop
sbb
popa
adc
adc
xchg
and
xor
(bad)
aaa
rcl
push
ja
jge
add
inc
mov
mov
test
icebp
pop
or
in
das
inc
popa
and
(bad)
aaa
inc
shl
aam
lahf
je
mov
dec
add
fadd
test
or
mov
inc
jne
pop
arpl
dec
xchg
push
mov
pop
jnp
push
inc
add
(bad)
call
push
add
add
add
mov
dec
and
sbb
inc
cmp
in
cmps
xor
stos
cmp
inc
cmp
sub
mov
dec
adc
outs
sbb
jne
in
cmc
xchg
xchg
push
fsubr
mov
push
in
xchg
rcr
cmp
fbstp
add
adc
cmc
loope
cmp
add
jo
cmp
mov
out
or
adc
inc
hlt
(bad)
jecxz
loopne
cmps
fnsave
lds
ja
xchg
inc
fisub
inc
cmps
dec
call
mov
repz
adc
dec
test
jmp
out
mov
sbb
jg
retf
aam
xchg
jle
in
(bad)
jmp
stos
cmc
sub
(bad)
sub
add
pop
sub
lea
xchg
push
leave
jno
xor
adc
mov
add
inc
add
(bad)
jge
test
push
sub
inc
daa
imul
mov
jle
add
push
cmps
xchg
push
ss
aam
push
jbe
xchg
lock
mov
xor
adc
push
inc
add
cmp
ror
movs
adc
gs
jmp
lahf
call
loopne
nop
dec
jns
outs
push
ds
ds
inc
push
and
fist
inc
leave
mov
cmps
push
pop
mov
pop
lock
xor
sbb
arpl
or
and
(bad)
mov
push
pushf
test
mov
inc
push
jae
push
add
jmp
sub
mov
hlt
sahf
enter
ja
jecxz
add
aas
pop
lods
ins
and
inc
int3
cmc
sub
cmp
daa
repz
jno
mov
nop
out
loopne
sar
push
jb
daa
popf
scas
cmp
into
loop
adc
xchg
movs
xchg
cmps
scas
xor
(bad)
or
das
lea
push
and
xlat
stos
mov
jmp
shl
sub
pusha
ret
adc
mov
or
pop
mov
or
clc
ja
arpl
aam
stos
in
sub
shr
dec
sub
(bad)
mov
add
xchg
add
mov
(bad)
aaa
ja
dec
sbb
loopne
sti
pop
outs
push
mov
push
sbb
aas
cmp
jne
call
jmp
arpl
inc
mov
pop
movs
adc
pop
fs
lods
outs
xor
cmp
rcr
pop
movs
out
push
pop
push
sbb
call
imul
xchg
sub
(bad)
jle
sti
inc
mov
sbb
fwait
jmp
inc
int
cmp
(bad)
sbb
jo
ja
mov
aad
ja
jl
jle
pop
jnp
outs
fs
adc
jl
or
je
loopne
ror
and
push
or
shl
dec
jp
pop
add
outs
je
int
xor
dec
je
cmps
ret
pop
push
sbb
xchg
push
loop
cmp
adc
lods
mov
shl
inc
pop
dec
cwde
(bad)
pop
nop
xchg
add
mov
push
fcmovu
movs
ror
jns
lds
push
xor
mov
test
stos
jnp
cmps
(bad)
mov
xchg
mov
push
xor
add
sbb
adc
(bad)
xchg
daa
cmp
leave
pusha
xchg
add
and
sub
xchg
push
ja
int3
push
dec
loopne
mov
gs
push
and
ins
xchg
(bad)
bound
hlt
pop
xchg
adc
mov
inc
test
pop
call
pop
inc
and
jg
loopne
fsubr
out
add
xor
call
mov
jae
(bad)
adc
xor
rcl
or
xchg
mov
outs
lea
push
xor
rol
or
push
les
movlps
(bad)
jmp
cmp
ret
adc
dec
adc
mov
movs
mov
test
jne
dec
popa
cmp
sbb
stos
push
iret
cmc
jmp
stos
lods
adc
mov
inc
and
push
iret
dec
movs
xchg
sub
inc
adc
nop
daa
iret
test
loopne
in
in
mov
add
hlt
iret
jb
nop
pop
sar
mov
pop
aaa
push
jmp
iret
inc
mov
xor
jmp
cmp
sub
lock
call
mov
scas
test
dec
stos
ins
pop
in
bound
and
sub
cdq
inc
bound
(bad)
xchg
js
dec
movs
or
mov
pop
add
lods
or
pop
sbb
or
ds
mov
lahf
or
pop
js
std
push
lods
je
addr16
xchg
aam
push
test
rol
mov
push
fcom
fnstcw
dec
int
or
push
inc
dec
mov
and
jne
add
or
push
ss
cmp
inc
add
(bad)
aaa
(bad)
mov
jmp
sub
mov
sahf
pop
mov
pop
inc
jl
pop
pop
pop
scas
pop
cmps
out
fdivr
es
test
cmps
into
jb
fcmove
jo
test
jnp
stos
push
jne
fist
mov
das
shl
les
lgs
les
mov
adc
out
push
push
pop
repnz
fisttp
sti
push
adc
mov
daa
push
out
fdiv
fistp
jo
jo
fild
dec
ffree
mov
cmps
fidiv
shl
mov
popf
retf
push
cmp
sub
ins
ja
jns
xor
inc
inc
cmp
out
aam
xchg
mov
cmp
sub
xor
mov
call
loop
pushf
loop
cmps
aaa
sbb
dec
adc
lea
cmps
dec
dec
hlt
cmp
repz
sbb
out
mov
repnz
aas
ins
test
movs
js
add
push
mov
add
sbb
out
pop
lods
out
mov
or
inc
lods
pop
ss
push
cs
and
jmp
stos
mov
pop
or
jp
sbb
pop
ss
or
add
inc
mov
xor
jge
mov
xlat
jl
cmp
inc
stos
push
adc
fdivr
xchg
hlt
adc
in
mov
jo
sub
sbb
sbb
push
dec
cld
jg
jl
mov
shl
sbb
or
dec
push
xchg
rdpmc
ror
mov
(bad)
push
or
adc
mov
push
test
sub
push
test
aam
xchg
cld
lods
icebp
ja
out
cmp
add
in
jle
jp
jmp
imul
mov
mov
neg
test
mov
push
mov
adc
aaa
jmp
or
retf
mov
ficomp
inc
cmp
and
mov
adc
push
push
out
test
push
pusha
dec
push
dec
in
push
xor
and
pop
or
jne
and
imul
jne
dec
clc
jns
int
add
fs
ins
jns
pushf
or
hlt
jle
dec
mov
mov
hlt
add
sub
jl
adc
sbb
mov
clc
adc
call
pop
js
mov
sub
xchg
fidiv
xchg
mov
mov
adc
mov
dec
push
nop
pushf
sbb
mov
push
inc
push
leave
mov
mov
jmp
ror
mov
inc
test
cmp
je
add
pop
ret
ja
and
push
jle
push
add
aam
sub
cmp
std
test
stos
xchg
pusha
or
lahf
cmp
xchg
add
lahf
push
call
fnstenv
cli
adc
mov
push
lock
add
push
add
repnz
push
arpl
in
(bad)
rol
xchg
popf
mov
or
adc
adc
leave
push
leave
inc
mov
cmp
jo
xchg
stos
rcl
ret
dec
xlat
push
nop
inc
adc
adc
pop
repnz
xor
push
test
ins
popf
add
fisttp
mov
sub
mov
inc
mov
shl
mov
inc
daa
cmp
sub
mov
pop
mov
nop
jl
(bad)
push
or
mov
or
mov
lds
pop
dec
pop
in
sbb
ret
sub
or
ret
mov
pop
mov
lock
fbld
das
mov
mov
ins
push
add
cmps
dec
adc
adc
and
icebp
xor
sub
movs
inc
dec
mul
ins
or
into
ret
into
add
je
cs
mov
add
xchg
add
dec
add
and
adc
loopne
pop
(bad)
sub
sbb
sbb
mov
and
sbb
adc
dec
shl
shl
xor
dec
pusha
mov
pop
into
call
in
adc
cli
mov
pusha
in
fstp
bound
jge
in
movs
mov
imul
jmp
(bad)
int
loopne
(bad)
ss
btc
push
pop
mov
psubsb
sbb
pop
adc
xor
and
fdiv
mov
xor
cs
pop
sub
pop
aas
ficomp
cmp
xchg
sbb
(bad)
inc
aas
sub
adc
and
popa
arpl
jnp
jns
ret
aas
mov
leave
mov
jae
or
xchg
inc
or
mov
jp
aas
push
stos
dec
sbb
push
mov
push
mov
das
push
mov
mov
push
or
add
mov
das
ret
mov
mov
shl
add
pop
(bad)
or
mov
xchg
call
ror
sar
and
and
push
add
mov
jl
sub
sbb
and
js
or
cmp
push
fadd
js
mov
icebp
nop
cmp
pop
push
pop
stos
fcmovbe
jecxz
xchg
push
clc
les
jne
ss
add
cli
imul
adc
add
sub
dec
mov
sti
xor
push
mov
or
xchg
mov
sbb
fld
xor
push
pop
(bad)
or
clc
loope
add
sbb
lock
pop
push
out
push
test
sub
inc
mov
mov
inc
sub
and
sti
inc
sub
xlat
push
inc
mov
scas
inc
push
mov
inc
test
popf
cmp
inc
test
adc
inc
bound
jle
stos
jo
mov
test
inc
dec
sub
jg
mov
inc
test
(bad)
aas
hlt
cmp
or
dec
cmps
cdq
outs
lock
lock
ja
fs
adc
jl
or
je
or
xchg
loop
(bad)
pop
cwde
sbb
push
and
adc
adc
mov
clc
jns
xchg
jns
xchg
loope
(bad)
dec
mov
push
test
xchg
ins
push
sub
pusha
and
jp
aaa
gs
mov
je
mov
xchg
in
push
dec
rol
pusha
daa
jle
fnstsw
adc
daa
adc
(bad)
mov
xor
pop
pop
add
rol
sub
add
js
dec
ds
mov
add
pop
and
pusha
aam
les
and
icebp
pop
addr16
retf
addr16
dec
scas
sbb
or
push
sbb
inc
or
add
out
mov
inc
add
pop
pushf
das
add
jae
add
sub
dec
add
scas
nop
add
or
xchg
and
mov
sub
mov
mov
push
add
add
mov
icebp
mov
jo
cmp
xor
test
push
adc
and
mov
(bad)
dec
ror
mov
mov
(bad)
push
jmp
mov
mov
inc
movs
pop
test
movs
ror
test
inc
pop
adc
cmp
les
push
jb
enter
movs
fadd
outs
push
mov
test
test
outs
std
ja
jne
nop
mov
adc
push
ret
rcl
cmp
rcr
or
in
xchg
in
and
inc
(bad)
and
dec
pop
shl
jne
fisttp
adc
push
fbstp
and
push
test
test
(bad)
mov
mov
adc
push
fs
sbb
mov
lea
or
inc
stos
(bad)
push
jnp
cmp
add
cmps
into
jo
leave
dec
outs
dec
scas
push
cmps
fidivr
mov
in
loop
inc
test
mov
cmc
and
rcr
pusha
adc
dec
ja
fucom
sbb
test
(bad)
cmp
sub
aam
lods
push
mov
push
out
hlt
scas
lahf
retf
cmps
and
(bad)
push
jo
scas
int3
test
test
scas
and
sub
adc
imul
fs
es
fs
inc
mov
sub
adc
adc
jg
movs
push
add
push
aas
cmp
and
sar
xor
adc
sub
sbb
jo
lods
jg
pop
cmp
jg
ss
dec
call
xchg
or
or
mov
jmp
cmp
jl
mov
adc
jg
cmps
mov
push
lds
repnz
fdivr
xor
mov
jo
xor
pop
ret
in
adc
adc
jl
xor
mov
xchg
cmp
sbb
dec
pop
mov
xchg
add
cmp
les
xchg
xchg
adc
imul
push
ja
ja
mov
ja
xchg
sub
mov
sbb
and
and
shl
dec
or
retf
neg
aam
mov
mov
jg
pop
add
jmp
mov
out
xor
xchg
pusha
pop
push
imul
pop
or
jne
adc
popf
jo
iret
xchg
icebp
inc
test
dec
clc
jns
push
pop
ins
jns
adc
xor
lods
nop
je
sub
sub
sbb
ja
shl
pushf
clc
adc
call
pop
loopne
ror
mov
jnp
in
jne
xor
rcl
push
sar
xchg
outs
adc
pop
add
jns
shl
or
pop
pushf
xchg
adc
push
jp
add
out
mov
add
(bad)
push
add
aaa
push
push
hlt
call
shl
movs
add
push
push
fld
or
push
jno
inc
xor
daa
push
fistp
inc
jo
cmp
popf
add
push
in
and
call
xchg
outs
stos
ja
push
xchg
cmp
jns
rcr
fiadd
pop
cmp
push
imul
mov
pop
add
mov
push
mov
imul
call
jmp
push
jmp
mov
in
jb
push
push
push
dec
in
pushf
(bad)
rcr
jmp
mov
mov
sub
loop
mov
cmp
aad
xchg
adc
lds
push
jb
dec
sbb
test
sbb
push
adc
push
jb
dec
adc
push
movs
outs
or
daa
push
push
sbb
stos
push
mov
push
cmps
sub
fnstcw
sub
cmp
mov
je
in
xchg
push
sub
jmp
pop
push
sbb
ficom
stc
dec
fnstsw
fcom
cmp
cmp
mov
cmp
xchg
sbb
pop
jecxz
in
cwde
push
movs
push
mov
shl
jp
xor
sti
movs
add
adc
xor
add
add
mov
add
pop
les
cmp
and
aam
mov
mov
adc
and
push
movs
cmps
in
xchg
shr
push
add
mov
and
clc
sbb
or
add
call
add
dec
popa
xor
loope
or
rcl
xchg
(bad)
in
ret
xor
lea
and
pop
mov
add
or
mov
jle
mov
retf
adc
adc
jb
dec
out
idiv
loope
test
out
add
fnsave
xchg
sub
jp
sbb
leave
push
or
push
out
push
and
int
inc
add
test
out
mov
adc
adc
stos
add
enter
cmp
movs
fwait
sub
out
push
js
push
mov
movs
adc
in
mov
push
mov
rol
jae
pop
leave
mov
pause
pop
jmp
cmp
or
mov
les
or
push
(bad)
adc
adc
push
push
mov
inc
pop
dec
add
mov
inc
leave
adc
es
call
pop
jb
jo
sub
or
(bad)
jecxz
xchg
sbb
sub
loopne
ins
daa
addr16
jns
jp
xlat
movs
sti
xor
and
jae
sbb
add
cld
aaa
fadd
xchg
aaa
cmp
pop
in
outs
(bad)
out
mov
fistp
fadd
add
jmp
out
adc
mov
out
sbb
fstp
(bad)
outs
cmp
je
dec
xor
leave
or
mov
in
ins
out
xchg
pop
jno
mov
loopne
dec
jo
and
lea
in
sbb
aad
nop
push
ret
loopne
ret
ja
adc
push
aam
jp
jo
loope
sub
push
jae
and
cli
jno
jg
jb
adc
dec
and
shl
bnd
cwde
aas
aam
xchg
loop
cwde
cmp
in
mov
jg
fsub
jmp
in
or
into
cmp
xor
jo
cmp
xchg
lock
mov
mov
lods
cs
and
pop
pop
xor
std
mov
mov
pop
out
dec
aas
cmp
adc
mov
xor
pop
cmp
sub
lods
dec
jge
xor
cs
or
mov
mov
gs
nop
or
int3
enter
aam
jb
push
jo
xor
or
lea
loop
div
sete
int
in
cmp
hlt
pop
lahf
jne
push
ret
out
jb
clc
cmp
add
xor
stos
inc
dec
out
add
daa
call
repnz
jmp
xor
sbb
rol
xchg
xchg
lahf
adc
ret
fnstsw
sub
popa
ret
push
push
push
push
push
push
cmp
ret
push
cmp
xchg
scas
data16
je
sbb
sub
cmps
mov
pop
and
hlt
daa
push
test
(bad)
in
sub
jecxz
sub
mov
adc
inc
or
inc
test
iret
and
push
arpl
repnz
fs
jmp
xlat
test
ret
enter
lods
mov
jb
(bad)
js
adc
out
mov
mov
fidivr
or
adc
nop
sub
data16
mov
jo
push
add
and
imul
mov
xchg
adc
cmps
pop
inc
cmp
cmps
mov
xchg
push
dec
push
out
adc
jl
pop
call
je
or
mov
sbb
pop
adc
clc
int
jo
inc
fidiv
jns
push
ins
jns
jp
movs
je
jbe
or
sbb
ja
xchg
mov
push
cli
sbb
hlt
or
xchg
clc
mov
adc
shl
push
fisubr
sbb
dec
xor
xchg
adc
lods
out
sbb
hlt
sbb
adc
cmps
ss
pop
imul
add
fadd
push
daa
cmp
out
sbb
sub
add
shl
call
dec
aad
inc
ror
pop
rcr
dec
nop
mov
push
or
jmp
fldcw
mov
mov
mov
jne
nop
or
jo
jo
mov
mov
push
dec
sub
sbb
xor
mov
sbb
or
loopne
push
xchg
add
pop
pushf
popw
mov
mov
push
mov
mov
pop
push
sbb
fs
mov
xchg
mov
sub
add
mov
sbb
add
mov
sbb
das
mov
push
aaa
and
popa
cmps
and
or
shl
daa
inc
aam
xchg
dec
daa
popa
movs
mov
and
daa
push
add
cmp
daa
repnz
movs
daa
std
cmp
add
or
adc
test
fs
movs
push
adc
jb
add
std
daa
inc
repnz
mul
and
mov
movs
xor
sti
sub
fimul
mov
push
inc
aaa
ja
ret
mov
aaa
push
inc
ret
pop
dec
outs
xor
and
pcmpgtd
mov
adc
push
dec
out
sub
inc
imul
sub
inc
dec
cmp
cmp
sub
(bad)
jl
push
js
mov
or
dec
mov
or
aam
push
pop
ja
adc
or
mov
mov
pop
adc
cli
cwde
inc
movs
out
mov
sbb
xchg
mov
cmps
push
fist
add
mov
in
(bad)
std
dec
pop
cmp
pop
adc
int
and
sub
mov
out
mov
mov
ret
daa
pop
adc
push
cmp
mov
retf
ror
add
rcl
popa
sub
pop
mov
dec
sbb
push
sub
outs
pop
sbb
dec
dec
mov
pop
cs
stos
add
cmp
push
movs
pop
imul
adc
push
inc
pop
or
mov
xor
push
pop
cwde
pop
xor
sbb
jno
mov
push
sbb
movs
push
sbb
add
out
push
mov
push
mov
adc
sub
mov
or
(bad)
sub
les
cmp
mov
mov
push
popf
shr
or
gs
add
data16
nop
push
push
(bad)
xchg
and
mov
sti
mov
xor
and
mov
mov
ins
mov
mov
cmp
or
add
loope
js
or
dec
mov
push
xchg
push
imul
sbb
or
xchg
neg
iret
xor
test
jecxz
icebp
(bad)
push
sahf
and
mov
mov
mov
or
(bad)
or
leave
push
sub
xor
push
push
aam
mov
mov
sbb
es
aam
call
dec
or
inc
xchg
mov
pop
push
push
popa
popa
mov
sub
mov
and
cmc
add
sub
add
or
lods
mov
xchg
lea
scas
mov
test
mov
inc
imul
div
pop
pop
xor
mov
mov
mov
inc
shl
mov
inc
dec
loop
jo
out
jae
cli
push
outs
pop
outs
xor
or
mov
xchg
mov
dec
xchg
mov
js
mov
test
lock
rol
dec
out
aam
imul
jns
mov
sub
or
sub
lock
sar
out
in
dec
xchg
fiadd
push
inc
out
test
push
adc
adc
test
mov
sub
sub
adc
test
push
stos
lea
adc
sbb
xchg
sbb
mov
xchg
inc
mov
adc
xor
inc
hlt
xchg
pop
js
jb
sahf
nop
mov
sbb
push
pop
push
jbe
in
inc
(bad)
bound
mov
inc
daa
mov
lea
mov
outs
cwde
sar
pop
lahf
push
pop
aaa
ror
lods
aaa
jmp
add
out
loopne
mov
dec
add
pop
js
add
gs
test
jno
adc
add
pop
loopne
dec
mov
push
jno
inc
push
shr
sbb
mov
jb
dec
mov
sbb
mov
or
sbb
test
cmc
outs
pushf
(bad)
pusha
shl
or
push
lock
inc
sub
and
sbb
cwde
cmp
pop
call
int
and
add
push
sbb
cmp
pop
mov
push
push
fisttp
jge
or
shl
mov
add
or
cmp
test
xlat
lods
(bad)
stc
loopne
bound
scas
sbb
aam
mov
sub
and
scas
jae
xchg
scas
sbb
sbb
push
das
cmps
shl
xchg
js
stos
inc
adc
adc
into
sahf
icebp
or
fiadd
add
xchg
mov
push
lahf
fiadd
cli
xchg
sub
je
mov
call
add
test
sbb
xor
test
(bad)
arpl
push
ror
dec
call
(bad)
pushf
push
pop
notrack
adc
(bad)
loopne
(bad)
pop
fisub
push
push
dec
dec
or
xor
push
and
add
xchg
sbb
dec
add
sub
hlt
add
pop
fwait
pusha
ja
jl
or
xchg
xchg
shl
ins
loop
sbb
xor
mov
es
frstor
aad
adc
das
and
push
jmp
hlt
xor
jl
add
add
mov
dec
sbb
sub
jecxz
retf
test
and
imul
add
or
arpl
xor
aas
sub
jb
sbb
mov
mov
(bad)
mov
jne
push
sbb
cmc
call
xor
jae
(bad)
jmp
sbb
sub
test
or
call
(bad)
ror
out
mov
jmp
inc
add
ret
fcmovnbe
jge
mov
sub
and
cmp
jle
or
dec
rol
dec
pop
cmp
lahf
enter
(bad)
mov
pushf
jl
hlt
push
loopne
sbb
mov
mov
and
push
out
out
(bad)
pusha
lock
imul
mov
push
cmp
dec
mov
sbb
xor
sbb
adc
sub
jns
lods
test
(bad)
and
daa
pushf
fmulp
lods
or
and
rol
out
or
mov
and
and
dec
push
mov
sbb
inc
cld
test
daa
pushf
or
jbe
repz
fisub
sub
shr
xchg
sub
cmp
mov
repnz
fsubr
and
mov
pop
(bad)
push
pop
or
mov
jo
ret
push
mov
xor
movs
call
and
and
xchg
rcl
jo
xchg
xchg
(bad)
mov
xchg
cwde
cmc
clc
pusha
xlat
sbb
inc
mov
dec
imul
imul
mov
and
add
aas
outs
clc
das
sti
mov
xchg
add
jge
add
pop
iret
xor
xchg
fsubr
xor
mov
add
jnp
add
and
or
mov
push
jmp
add
stc
pushf
mov
fnstsw
ret
push
lea
inc
scas
mov
sub
xchg
inc
cmp
jle
inc
fcom
jl
inc
mov
fiadd
dec
je
lahf
dec
or
nop
xor
out
mov
ds
and
xor
in
xor
push
add
cmc
sub
(bad)
fnsave
push
sub
shl
loope
sub
dec
jo
xchg
or
sub
jno
in
shl
lods
mov
pop
jmp
push
sbb
xchg
sbb
dec
(bad)
sbb
sbb
jle
and
sub
add
or
pushf
sbb
cmp
jb
inc
sbb
sbb
jns
daa
cmp
enter
in
sbb
cmp
mov
and
out
mov
sub
xchg
loopne
dec
rol
add
push
jne
add
dec
adc
je
popf
in
mov
push
inc
pop
in
sbb
dec
sbb
mov
in
das
in
sbb
pusha
mov
or
in
push
xor
and
cmp
sbb
lock
lock
and
sub
jp
aam
repnz
addps
daa
or
test
ror
xchg
push
adc
push
test
adc
fsub
dec
(bad)
neg
xchg
pop
push
sub
jl
sub
cmps
xchg
fs
dec
xchg
lods
cmp
sbb
ror
xchg
sbb
xor
iret
inc
les
movs
xchg
jo
lods
inc
iret
mov
inc
daa
add
mov
and
les
iret
adc
(bad)
(bad)
pop
iret
adc
mov
lock
xor
pop
cmp
mov
mov
jns
pusha
and
in
push
xchg
das
cmp
cmps
cmps
push
es
(bad)
xchg
pop
push
(bad)
and
dec
adc
pop
call
or
add
(bad)
aaa
bound
xchg
inc
or
adc
xor
ds
mov
mov
cld
push
add
fs
mov
cli
push
test
mov
inc
add
or
or
jle
loop
dec
lods
je
sub
push
iret
push
push
add
ror
dec
fdiv
lock
lods
sub
fdivr
test
xlat
(bad)
shl
clc
dec
dec
daa
inc
mov
ficomp
or
push
ss
cmp
mov
inc
add
jle
dec
cmp
cmp
in
inc
rcr
push
jp
jo
rol
jmp
mov
inc
sbb
xlat
xor
xor
cmp
jmp
push
mov
and
inc
int
push
xchg
out
mov
out
xor
fcomp
push
push
popa
shr
call
hlt
bound
push
ffreep
lods
xchg
popa
pop
outs
cmp
mov
mov
imul
pop
mov
(bad)
ss
cmp
(bad)
sbb
enter
sub
pop
push
retf
inc
fninit
mov
outs
mov
adc
dec
push
loope
pop
and
pop
das
xchg
mov
retf
fimul
pop
add
xchg
jp
or
pop
loopne
fcmovb
jmp
jle
jle
or
cmp
sub
xchg
ret
fwait
push
arpl
out
(bad)
pushf
dec
xor
pop
lea
popf
pop
sub
push
push
inc
xor
dec
sub
or
pushf
dec
or
mov
pop
jb
repnz
xchg
gs
sub
(bad)
mov
adc
dec
arpl
jb
dec
inc
sub
push
sbb
cli
outs
dec
es
push
mov
mov
not
add
add
push
rol
or
sbb
mov
rcl
add
rcr
sbb
xchg
mov
shl
push
je
push
cli
and
add
add
fnstenv
xchg
jo
fimul
xor
mov
inc
repnz
and
cmps
test
dec
and
or
arpl
les
in
dec
ins
jp
cli
cmp
add
sub
imul
push
mov
mov
test
(bad)
test
mov
and
ret
fldcw
loope
sbb
fst
and
(bad)
push
arpl
clc
loope
add
sbb
mov
scas
mov
jp
xchg
jp
mov
loopne
test
mov
test
jmp
lods
jb
jmp
sub
ja
mov
cmp
add
mov
jne
add
sbb
mov
push
retf
fwait
push
(bad)
xchg
and
pop
movs
adc
adc
dec
jno
inc
outs
ja
cmp
jle
adc
add
test
inc
test
mov
sub
jg
mov
enter
dec
inc
sub
mov
sub
repnz
movs
js
sbb
cmp
mov
inc
movs
icebp
outs
mov
jecxz
lea
push
lahf
jno
adc
outs
aaa
je
gs
fistp
fidiv
fld
push
sbb
daa
xor
sub
pop
sub
das
add
jmp
daa
dec
test
cmp
mov
pop
(bad)
pop
frstor
daa
ds
retf
call
dec
pop
cmp
hlt
ret
data16
mov
xor
inc
or
sar
adc
ds
lds
lea
cs
add
jb
and
pop
sbb
dec
pop
push
jecxz
repz
leave
dec
pushaw
or
and
sbb
mov
aas
popf
jmp
xchg
data16
mov
sbb
jle
jg
lea
or
std
or
pop
push
push
or
add
fcomp
push
aad
add
dec
or
add
pop
mov
mov
or
dec
add
retf
idiv
imul
mov
mov
jmp
or
fwait
jno
mov
les
pop
lock
mov
adc
cld
sub
shr
add
or
stos
pusha
or
cmp
mov
add
push
imul
jle
inc
mov
movzx
or
dec
jbe
aam
aas
pop
and
dec
(bad)
pusha
pop
pop
sbb
push
pop
add
and
or
or
pop
adc
je
mov
pop
and
sbb
push
sbb
ret
pop
lock
add
or
dec
bound
add
cmp
call
pop
push
test
dec
pop
push
loop
xor
into
adc
jb
mov
stos
add
in
loopne
push
and
add
and
push
popa
clc
or
mov
add
xchg
in
push
cmp
cmps
stos
fadd
inc
sbb
pop
pop
pop
mov
or
adc
jne
mov
pop
push
test
jecxz
pop
mov
test
push
pop
sti
inc
cmps
inc
dec
rcl
pop
xchg
push
pop
xchg
hlt
add
js
inc
clc
inc
add
sbb
jle
aas
daa
shr
add
xchg
inc
jp
sub
neg
shl
cwde
mov
(bad)
inc
aam
adc
jl
cs
icebp
cmp
xlat
das
jg
cmp
jl
push
je
cmp
popa
out
lea
mov
adc
push
mov
inc
sub
jmp
lods
cmp
jle
or
ins
add
or
cmp
ds
sbb
push
ror
mov
arpl
mov
lahf
aas
movs
adc
xchg
mov
out
push
push
aas
stos
nop
add
mov
push
adc
push
add
pop
daa
fs
push
test
add
test
pop
sub
cmps
pop
aam
push
jmp
pop
pop
clc
icebp
call
test
add
jg
push
push
call
shl
popa
xchg
pop
adc
cmp
add
pop
mov
dec
int
or
pop
push
ins
push
icebp
add
pop
push
mov
and
repnz
add
test
pop
pop
int3
pop
and
push
pop
retf
or
pop
pop
or
push
enter
sub
cvtps2pd
inc
inc
retf
cmp
pop
add
call
add
rol
jbe
pusha
add
cmp
lahf
push
jno
or
inc
add
sbb
lods
(bad)
test
and
pop
pop
xor
inc
stos
test
cmp
sub
mov
mov
adc
addr16
push
iret
or
dec
jp
adc
pop
xor
enter
ds
shl
dec
(bad)
shl
mov
pusha
add
pop
mov
pop
in
inc
xlat
fistp
lahf
mov
outs
push
pop
clc
jecxz
add
pusha
push
xchg
pusha
pushf
pop
mov
xchg
mov
adc
inc
adc
lds
fcomp
fmul
push
ret
fadd
adc
mov
add
add
mov
xor
nop
add
imul
mov
cmp
sub
add
rcr
adc
sbb
xchg
test
scas
cs
pop
or
(bad)
out
shl
xchg
push
(bad)
mov
sti
add
inc
cli
scas
fsubr
int
and
(bad)
in
adc
data16
js
popf
adc
cli
jge
ret
pusha
jbe
jle
sub
ret
or
inc
push
pop
pop
pop
add
(bad)
loope
adc
sbb
add
sbb
fdivrp
call
push
nop
mov
test
or
xor
or
or
enter
mov
call
mov
or
cwde
fadd
inc
sub
repz
mov
cmp
mov
xlat
scas
push
in
push
fmul
repnz
ds
fdiv
and
sub
in
or
ret
jg
call
jne
sbb
xor
push
test
push
and
cvtpi2ps
sub
add
cmp
sub
inc
in
lea
icebp
ret
imul
pop
addr16
add
jo
adc
sbb
fcom
or
or
cdq
jecxz
or
and
cdq
packssdw
cdq
adc
ds
dec
popa
add
sub
sub
out
pop
or
imul
sbb
cs
adc
out
mov
adc
(bad)
xor
adc
aaa
pop
shl
pop
push
mov
repnz
pop
pop
int3
or
jecxz
pop
add
daa
pop
adc
and
or
sbb
sub
lea
movs
add
pop
add
test
movs
rcr
aaa
fild
lea
jge
pop
movs
aam
rcl
gs
jmp
xor
ins
push
lea
xchg
jns
and
xor
add
push
fdivr
pop
sub
in
jmp
sub
add
or
(bad)
add
arpl
adc
sbb
fnstenv
jg
mov
push
jne
fsubr
inc
inc
loopne
ins
or
xor
push
jge
add
mov
mov
inc
push
sub
dec
mov
mov
es
mov
fcom
sbb
fld
enter
adc
xchg
pop
xlat
add
add
in
clc
data16
sub
sbb
xchg
sahf
inc
jo
sub
sub
or
or
xchg
lahf
scas
sbb
or
or
ret
cmp
push
and
or
ss
mov
mov
jb
es
and
or
enter
(bad)
push
and
shl
or
mov
dec
inc
mov
ret
adc
and
jo
nop
jno
(bad)
push
inc
outs
ins
jo
jb
jae
outs
(bad)
(bad)
in
(bad)
cmp
arpl
push
or
je
ins
gs
outs
outs
imul
jae
adc
sti
mov
sbb
jae
pop
mov
lods
jge
inc
outs
and
gs
jne
je
add
into
clc
fcomip
mov
add
add
push
mov
add
ret
add
loopne
mov
cmp
int3
std
aam
sahf
neg
pop
jb
adc
push
mov
sti
out
or
sbb
push
add
(bad)
pop
add
(bad)
add
fcmovnb
and
adc
jl
jge
jle
adc
mov
call
sub
mov
push
or
push
jl
and
xor
fld
add
(bad)
(bad)
jle
dec
jmp
scas
punpckhdq
xor
ss
and
push
ror
add
ins
pop
stos
das
sahf
std
jnp
sbb
xor
ins
lods
popf
ins
scas
sbb
mov
sub
bound
int3
(bad)
outs
push
jne
addr16
addr16
mov
jnp
push
sbb
mov
pop
push
pop
dec
fcmovnb
fdivr
adc
mov
mov
shr
cmp
sbb
ret
push
xor
add
and
cmp
jge
cs
into
ja
and
frndint
jne
je
xchg
push
mov
inc
test
clc
push
jg
push
xor
or
jg
loop
xchg
xchg
pop
mov
adc
daa
mov
adc
call
dec
outs
jbe
inc
jb
popa
jns
popa
outs
popa
addr16
addr16
and
add
adc
popa
lock
retf
mov
mov
jbe
outs
fs
mov
push
outs
and
mov
and
add
jnp
cwde
pop
cmp
sbb
int
out
in
lods
shl
aaa
cld
popa
push
or
push
ins
imul
mov
scas
add
and
js
xor
sbb
test
inc
cmp
pusha
jbe
xor
xor
adc
call
arpl
xor
and
and
je
mov
and
inc
jmp
add
mov
loopne
scas
adc
adc
jmp
int
hlt
cs
aaa
xor
add
ja
add
loop
mov
cwde
sahf
push
nop
movs
and
sbb
js
mov
sub
sbb
add
inc
jns
loopne
fwait
and
and
jns
pop
jne
retf
and
push
ins
pop
push
inc
ret
inc
js
cmp
jge
in
cmp
ss
jg
add
xchg
and
pop
jg
push
inc
push
dec
ins
xchg
xor
pop
adc
push
popf
sub
imul
add
popa
cmp
fcom
daa
movs
adc
shl
or
rcl
cmps
push
leave
add
sbb
ret
jp
jne
int3
xor
data16
pop
adc
retf
popa
inc
dec
dec
push
push
cmp
bound
adc
add
mov
loopne
mov
rcl
xchg
xor
js
push
adc
jnp
adc
popa
inc
xor
scas
sub
dec
inc
push
jbe
xlat
ss
sbb
push
pop
jnp
ins
fsubr
cli
push
mov
dec
dec
iret
dec
(bad)
clc
test
aas
daa
fcom
into
jp
rcl
shr
sub
dec
mov
push
es
push
rcl
int
add
push
jo
dec
and
fdiv
push
push
dec
dec
nop
jecxz
jae
(bad)
setle
test
add
mov
add
dec
inc
outs
jne
inc
bound
add
inc
cmp
add
pop
or
daa
outs
andps
jo
test
arpl
lock
out
push
clc
mov
das
cmp
ds
sahf
fscale
inc
pop
aas
push
jg
add
add
jl
cvtpi2ps
mov
add
xchg
add
jbe
add
hlt
(bad)
fisttp
inc
and
mov
xchg
xor
xor
jb
sbb
jo
or
or
push
sbb
sub
or
jp
mov
or
dec
xchg
jbe
bound
ins
(bad)
sbb
xchg
pop
mov
push
retf
add
sbb
fadd
pop
shr
cmp
jne
pop
lahf
or
jne
adc
xor
jg
push
sub
pop
push
leave
add
pop
test
and
adc
sti
call
jno
int3
jle
push
xor
xchg
or
in
xchg
(bad)
pop
adc
cmp
push
imul
mov
imul
xchg
sub
(bad)
(bad)
sbb
mov
sub
or
imul
add
or
test
lods
inc
push
dec
sbb
xchg
scas
hlt
test
js
push
fwait
test
fimul
xchg
jmp
adc
xchg
xchg
xchg
daa
sub
enter
mov
in
fs
mov
mov
repnz
xlat
std
xor
push
jns
jb
icebp
sbb
jae
sbb
jmp
push
xchg
rcl
push
loop
and
inc
add
pushf
call
xchg
inc
cmp
dec
dec
cmp
(bad)
or
add
add
push
and
or
jae
daa
adc
outs
jns
inc
lahf
dec
and
add
test
mov
adc
add
addr16
push
adc
or
leave
lods
pusha
add
push
popa
jg
cmc
out
(bad)
add
xor
fadd
inc
fs
pop
add
stos
mov
outs
jp
push
popa
ins
jne
arpl
out
sub
or
bound
jl
(bad)
and
outs
add
test
hlt
outs
or
and
jbe
stos
shr
adc
push
push
cmp
sahf
movs
mov
pop
or
jae
cmc
enter
adc
adc
mov
and
ror
or
rcr
in
xchg
cmp
in
or
dec
add
push
inc
and
mov
call
gs
call
pop
xor
cld
bound
dec
jae
sbb
js
push
xchg
sahf
add
iret
dec
add
push
and
in
mov
add
shr
add
sbb
xor
aad
jns
add
cld
push
aad
push
inc
adc
xchg
xlat
scas
dec
lea
sbb
push
or
push
jo
gs
jg
cmp
add
gs
mov
aas
mov
mov
mov
jns
add
scas
or
push
lock
push
sar
sti
pop
xor
pop
sbb
or
dec
mov
dec
gs
xor
xchg
jae
fwait
add
sar
xor
add
popa
pop
and
push
mov
cmp
push
adc
es
dec
push
out
xor
jo
sub
dec
outs
adc
movs
je
imul
stos
xor
cmp
dec
popw
sar
jge
imul
sar
add
push
cmp
dec
jb
and
xor
retf
xor
mov
mov
dec
sbb
fisttp
(bad)
aad
sbb
inc
or
lods
sub
fcmovu
movs
out
sbb
or
push
jb
dec
sbb
and
or
adc
and
or
xchg
and
inc
dec
mov
in
dec
test
shl
or
(bad)
dec
mov
jae
or
in
xor
jnp
pop
xchg
cmp
adc
adc
or
sbb
sub
inc
and
inc
outs
adc
mov
in
js
mov
mov
dec
mov
xor
lea
jg
sbb
add
xchg
inc
mov
add
and
add
cmp
or
or
sub
shl
adc
push
pusha
inc
aad
imul
in
arpl
cmp
push
add
out
shl
aas
add
pop
push
push
ret
jg
js
push
mov
adc
xor
xor
pop
adc
sub
adc
pop
lock
nop/reserved
push
push
add
je
inc
jo
fldcw
adc
push
add
add
mov
loopne
push
inc
and
add
shr
mov
inc
stos
pop
push
pop
stos
adc
adc
cld
int
int
or
or
jmp
stos
and
cmps
or
pop
lods
mov
outs
jns
pop
pusha
sahf
shrd
(bad)
lods
sbb
fwait
add
push
movs
xchg
pop
mov
aad
(bad)
push
xchg
mov
and
popf
push
push
inc
sbb
popf
dec
fdivr
add
int
mov
mov
push
pop
repz
sbb
sub
daa
pop
into
test
push
movs
mov
nop
cmp
daa
mov
lods
daa
ins
ret
test
ret
es
pop
pop
mov
daa
jo
js
xchg
mov
fs
pop
inc
(bad)
fiadd
hlt
pop
fnstsw
push
push
push
push
add
jecxz
xchg
bound
cmp
add
or
bound
xor
jne
push
enter
test
mov
pop
bound
add
xchg
ins
pop
clc
test
push
xchg
xorps
mov
xchg
xchg
(bad)
mov
cwde
pop
nop
jb
ficomp
cdq
pop
mov
cmp
inc
sahf
pushf
pushf
popf
rcr
fwait
push
and
dec
sahf
aam
pushf
imul
(bad)
cli
pop
xchg
xchg
xchg
xchg
popf
inc
jl
jb
jb
lock
sahf
pusha
test
ins
jnp
mov
mov
mov
pop
jmp
call
adc
je
loope
out
out
lods
leave
sub
out
xor
dec
mov
cmp
out
jno
shr
mov
inc
cmps
out
add
jb
or
jg
out
xor
jne
out
cmc
cmp
sub
xor
jmp
stos
jbe
dec
cdq
out
outs
fcom
test
out
ja
push
push
add
out
or
jae
push
adc
ins
out
mov
xchg
or
pop
xchg
sub
add
jmp
add
mov
test
inc
adc
xor
jne
push
or
xchg
cmp
mov
mov
cmps
out
dec
add
pushf
or
mov
push
sbb
add
add
cmps
cmp
xor
mov
out
push
out
push
dec
clc
push
xor
jae
dec
adc
mov
sbb
cmp
mov
push
mov
sub
sbb
test
add
nop
nop
das
xchg
cmp
xor
(bad)
cmp
jne
jl
add
(bad)
jne
inc
mov
(bad)
cmps
outs
test
mov
sub
mov
xchg
(bad)
or
daa
add
jns
dec
sbb
adc
ror
jge
inc
mov
es
(bad)
pop
and
jmp
adc
add
push
ja
jmp
inc
or
retf
or
adc
(bad)
xor
mov
test
mov
sub
sub
pop
call
aam
jns
xchg
mov
or
push
lea
and
push
fnstsw
ret
in
pop
movs
(bad)
aad
cwde
clc
or
mov
adc
push
jmp
push
jecxz
mov
lea
pop
pop
xchg
xlat
pusha
cmp
cmp
aam
push
in
mov
mov
cli
or
aam
getsec
(bad)
test
dec
repz
add
aad
mov
(bad)
push
dec
jp
pop
pop
add
(bad)
adc
cmp
jno
lock
add
pop
lea
pop
je
push
test
test
lea
sub
sahf
mov
lea
lea
adc
(bad)
retf
cmp
push
lea
pop
sub
pop
and
mov
fdivr
cmc
fimul
cmp
fistp
stos
pop
or
stos
pop
add
fcomp
call
movs
jmp
das
add
(bad)
fsub
push
adc
pushf
bound
lahf
dec
push
ja
fsub
mov
xor
and
das
lea
pop
in
shr
mov
out
and
pop
add
gs
pop
inc
inc
fsub
push
or
inc
int3
pop
cmps
movs
add
add
imul
fstp
push
add
push
ins
retf
test
loop
in
dec
jno
(bad)
test
mov
xor
push
nop
repnz
sbb
out
push
fcomp
(bad)
pop
inc
or
mov
(bad)
xor
push
les
(bad)
imul
mov
mov
sti
test
dec
data16
and
sbb
push
(bad)
sti
push
dec
outs
jae
(bad)
cmp
loope
daa
and
lods
popa
stos
stc
xchg
xchg
xchg
daa
inc
lods
imul
and
in
xlat
and
ins
mov
repnz
fscale
and
jb
mov
mov
cmp
xchg
out
aas
jge
cmps
arpl
in
push
mov
and
(bad)
xor
call
add
jge
mov
int
cmp
dec
or
sbb
out
jno
and
xor
xor
and
xor
mov
pop
shr
jmp
mov
xor
mov
fstp
bound
test
adc
shr
pop
push
add
cld
ja
push
dec
leave
test
mov
adc
cwde
jne
fadd
mov
sub
jne
xchg
imul
inc
xchg
mov
shr
push
fs
add
adc
enter
push
repnz
(bad)
mov
sbb
pusha
mov
add
push
add
push
ins
jae
aad
mov
cld
call
dec
xor
stos
sbb
add
xchg
xchg
int3
mov
mov
xchg
sub
xor
xor
inc
xor
or
pop
sub
es
dec
repz
cwde
add
movs
mov
xor
ins
add
mov
je
lds
adc
cwde
add
push
xor
xor
fnsavew
test
inc
(bad)
sub
mov
or
push
and
add
bound
adc
add
dec
add
rol
arpl
xor
add
test
int3
jb
add
sbb
imul
fcomp
add
rcl
add
push
inc
imul
lods
inc
in
call
fcomp
sbb
mov
cmp
pop
mov
inc
sar
pop
or
xchg
sbb
push
outs
sub
inc
aam
inc
xor
in
push
xlat
push
mov
or
or
sub
xor
adc
imul
rcr
movs
inc
sub
sbb
mov
cwde
outs
pop
jl
inc
mov
nop
push
or
sub
cmp
rcl
mov
push
push
out
cmps
and
jb
dec
bound
adc
xor
inc
rcl
movs
cli
push
(bad)
out
pusha
test
inc
add
sti
pop
loopne
cdq
add
or
pop
adc
push
scas
sbb
fisub
jbe
add
push
mov
sbb
mov
(bad)
retf
inc
into
lahf
lds
and
dec
jns
mov
pushf
mov
sbb
cmp
adc
shl
int
dec
aad
pop
and
jmp
lds
sub
pop
pop
inc
(bad)
loopne
(bad)
jecxz
cmp
push
dec
(bad)
pop
adc
inc
add
shl
dec
dec
mov
push
add
cmps
out
neg
mov
das
aad
push
lods
inc
adc
fdiv
aas
mov
and
(bad)
mov
or
add
fs
add
es
jp
ret
mov
push
dec
or
movs
cs
xchg
test
xor
or
sbb
push
inc
ins
push
adc
jg
sbb
mov
xor
add
mov
add
popa
sbb
add
and
into
das
jnp
fs
sub
mov
push
pop
cs
jo
or
test
adc
inc
addr16
add
and
mov
test
loopne
addr16
or
or
shr
jp
out
pop
mov
add
push
data16
and
add
sbb
pmulhuw
leave
leave
push
loop
shl
in
jo
or
xor
jb
gs
sbb
inc
sahf
pushf
pushf
mov
dec
dec
dec
inc
cmp
repz
daa
and
(bad)
push
js
cmp
(bad)
movd
fsubr
add
pop
fisttp
rol
lock
push
dec
inc
jecxz
jo
add
cli
pop
call
adc
cmp
loopne
test
cmp
or
add
mov
mov
mov
add
push
shl
shr
xchg
jg
push
add
mov
movs
xchg
sbb
inc
dec
fnstsw
add
nop
or
dec
ins
push
f2xm1
stos
pop
add
fcom
ror
push
add
mov
add
cwde
jbe
jae
dec
adc
jge
push
enter
js
add
and
xchg
or
pushf
cmps
in
xchg
ins
je
add
leave
call
gs
inc
add
add
call
xor
dec
adc
test
je
in
mov
jae
dec
je
mov
mov
add
adc
add
inc
mov
mov
add
mov
mov
or
mov
xchg
xor
ja
fsub
add
pop
add
and
add
sub
scas
add
sub
or
add
sub
mov
and
xor
lods
scas
push
dec
jge
push
push
jg
das
add
dec
mov
rcr
and
fdivr
and
es
shr
aaa
add
and
stos
inc
add
push
ins
loope
loopne
shr
add
std
rol
loope
add
ret
inc
daa
call
xor
adc
loope
and
shl
add
or
add
mov
and
add
loope
cmps
add
adc
loope
add
mov
pop
inc
and
xor
add
(bad)
jo
add
cmp
adc
loope
add
in
pop
in
lea
or
push
add
in
jo
sub
sub
xor
add
lea
push
mov
sbb
bnd
pop
add
sbb
add
xchg
xchg
dec
addr16
sub
xor
ins
lahf
rol
sbb
popa
adc
sbb
jne
femms
nop
cmp
sub
and
xlat
pop
add
test
dec
int
imul
or
add
xor
add
ss
jecxz
retf
pop
int3
pop
mov
out
fimul
xchg
retf
pop
jmp
ja
psubd
jbe
dec
inc
leave
addr16
test
xor
inc
inc
pop
mov
cmp
adc
jbe
dec
int
pop
test
pusha
int
and
inc
push
into
lods
push
inc
stos
inc
retf
push
mov
inc
inc
fild
add
arpl
mov
(bad)
ja
mov
fisubr
int
das
stos
pop
add
mov
rcl
add
test
mov
push
les
loopne
rol
aad
pop
fld
add
out
push
ja
fcomp
add
cmovae
out
push
test
mov
pop
mov
cmp
mov
inc
aas
pop
push
in
xor
pop
imul
rol
ffreep
sbb
add
push
sub
mov
jg
pop
adc
pop
mov
cmps
or
call
sar
inc
mov
pop
mov
shr
sub
pop
imul
lock
retf
imul
sbb
pop
movs
test
retf
rcl
cmp
fs
push
imul
in
fwait
xchg
xchg
xchg
fst
ror
dec
mov
cmp
ja
mov
cmp
aad
jle
dec
inc
sahf
pushf
dec
or
daa
and
xlat
pop
and
icebp
sub
enter
pop
stos
in
ftst
leave
leave
leave
xor
or
fucomp
pop
addr16
push
sub
push
mov
add
(bad)
push
xchg
push
xchg
inc
cmp
enter
xor
dec
or
cmc
test
mov
ins
mov
inc
inc
bound
add
xchg
push
xchg
aam
sub
inc
mov
add
lock
adc
mov
mov
ins
push
pop
hlt
stos
pop
mov
pop
outs
or
mov
ja
sub
jbe
rol
jae
lods
add
adc
in
mov
cmc
or
jo
sub
adc
xchg
das
sub
mov
call
and
pusha
mov
adc
add
inc
or
mov
sahf
call
iret
dec
add
push
inc
lods
(bad)
enter
mov
mov
pop
shr
jae
mov
(bad)
ss
adc
add
clc
push
jge
inc
ss
dec
add
cwde
fwait
xchg
aaa
inc
lods
adc
mov
xchg
daa
mov
mov
(bad)
cwde
dec
dec
pop
mov
test
movs
stc
bound
add
cmp
inc
sbb
shr
mov
ins
outs
lods
sbb
mov
outs
mov
add
in
outs
or
daa
add
jns
pop
inc
sbb
adc
mov
jge
inc
mov
outs
or
les
mov
bound
rol
outs
xchg
(bad)
sbb
in
mov
lds
and
xor
je
xor
jl
inc
sub
xor
inc
sub
(bad)
and
jbe
mov
mov
or
loopne
xchg
xchg
push
mov
ds
add
imul
jecxz
cmp
inc
mov
pop
sub
lea
fiadd
les
push
xchg
test
mov
aam
xor
sub
sbb
push
pop
(bad)
xchg
inc
fwait
jo
xor
or
and
xor
pop
sbb
dec
out
(bad)
push
cli
jo
cs
sbb
sub
dec
inc
jae
xchg
sbb
pop
and
pop
push
push
or
jmp
add
pop
out
push
cmovns
pop
js
and
fisttp
push
push
xlat
or
cmp
call
ds
xor
jb
dec
bound
adc
pop
sub
adc
push
adc
rcl
push
adc
daa
out
test
add
jbe
add
add
cmps
(bad)
push
scas
pop
mov
cdq
add
mov
pop
xchg
das
mov
scas
sub
in
add
addr16
adc
dec
test
lock
cwde
test
xor
test
arpl
and
int
pop
test
icebp
and
icebp
dec
into
icebp
inc
lods
push
inc
retf
icebp
hlt
pop
push
sub
pop
pop
sub
in
rcr
xor
fadd
cmovnp
add
fisubr
out
pop
push
fstp
add
add
loop
sub
push
cmp
arpl
jns
neg
push
aas
jbe
push
dec
dec
rcr
pop
push
add
stos
pop
pop
aam
lock
shl
push
add
add
push
add
or
sub
add
mov
pop
sub
out
and
test
add
add
cs
xchg
or
push
mov
adc
mov
inc
sub
adc
push
xor
dec
lds
add
in
inc
add
loopne
or
pop
push
leave
das
pop
out
adc
pop
aas
fs
(bad)
in
(bad)
out
add
imul
push
and
aas
jo
push
mov
push
add
add
aas
xor
adc
add
inc
aas
adc
push
or
mov
test
mov
les
ds
add
movs
push
sbb
dec
dec
inc
fimul
psubsb
retf
daa
daa
and
jmp
xchg
xchg
daa
or
aas
mov
leave
enter
jmp
movs
in
in
in
xor
fs
xor
in
mov
jns
jb
cwde
sar
sbb
sbb
and
loopne
jnp
aas
push
push
pop
or
sub
push
jecxz
xchg
add
pushf
pop
xlat
fs
cmp
aam
adc
jle
mov
shl
push
or
mov
or
sub
ficom
pop
jg
add
ror
push
add
add
jecxz
pusha
add
js
cdq
ins
sub
push
loope
jmp
mov
outs
or
or
add
push
adc
and
xor
out
and
push
enter
pop
daa
add
or
fiadd
ficom
hlt
fwait
add
pop
inc
gs
push
adc
inc
add
adc
sub
sub
enter
add
sub
xor
add
or
or
push
add
add
pusha
mov
xchg
push
add
xchg
ja
pop
add
and
sub
scas
dec
add
adc
add
sbb
jb
iret
xchg
repnz
lods
xor
sbb
jmp
adc
addr16
imul
bound
add
aad
and
sub
fld
es
call
dec
adc
mov
fnstenv
mov
rol
fldcw
xor
or
fcom
push
cmps
pop
cdq
cmp
or
sbb
inc
add
in
fld
and
aam
or
or
inc
pop
cmp
add
cmp
and
fnstcw
in
mov
fnstenv
add
shl
fnstenv
(bad)
or
arpl
fldz
push
adc
mov
and
mov
imul
ret
fnstenv
out
add
int3
shr
sub
cmp
hlt
fist
fimul
add
je
pusha
push
mov
fnstcw
or
add
xor
xchg
push
adc
push
and
push
xor
jb
rol
fistp
push
adc
add
fldcw
sbb
add
pop
pop
or
push
inc
pusha
and
mov
xlat
mov
cmp
adc
loopne
pop
dec
das
pushw
(bad)
pop
push
lods
mov
fidivr
imul
and
or
cmps
and
aam
les
push
stos
pop
push
pop
test
adc
int3
int
int
or
or
and
adc
into
adc
adc
pop
(bad)
stos
mov
aas
inc
scas
pusha
xchg
sar
dec
and
lods
pop
mov
push
or
(bad)
adc
cmc
div
imul
imul
adc
push
(bad)
dec
pop
psubusw
xor
inc
jecxz
dec
push
add
push
mov
rcr
push
fsub
dec
mov
loop
cmps
pop
add
mov
jmp
pop
push
mov
dec
lds
add
das
pop
pop
sbb
xchg
push
jbe
push
xor
mov
mov
hlt
push
pusha
pushf
push
test
jno
mov
clc
addr16
push
pop
pop
mov
in
xlat
data16
push
fsub
add
and
addr16
add
mov
addr16
sub
xor
into
rol
pop
push
sbb
mov
loopne
addr16
test
adc
pmaxsw
fs
xchg
push
(bad)
arpl
mov
out
push
data16
jae
in
ss
sets
adc
dec
dec
outs
sub
setle
cmp
daa
daa
daa
and
enter
xchg
xchg
std
dec
xchg
retf
leave
enter
cmps
int3
in
in
lock
icebp
in
test
das
add
cmpxchg
mov
aas
mov
popf
fld
jo
mov
mov
push
adc
adc
sbb
(bad)
push
adc
cmps
aam
pop
adc
adc
or
adc
fisub
fdiv
pop
mov
adc
adc
jle
push
or
lods
or
sub
jle
and
inc
adc
shr
sub
sbb
ins
push
jmp
adc
outs
or
add
push
sub
inc
ja
test
push
jbe
push
or
adc
pop
mov
adc
adc
mov
or
jne
(bad)
adc
jne
inc
mov
add
sub
enter
lods
mov
and
fcom
and
lods
inc
inc
lods
mov
dec
je
in
(bad)
dec
add
push
and
test
xor
pop
les
pop
sbb
jmp
inc
mov
adc
inc
lods
add
ss
push
or
adc
pushf
cmp
push
dec
push
push
mov
add
and
cwde
in
fwait
loopne
rcl
les
adc
loopne
shr
dec
lods
(bad)
js
movs
sub
nop
test
les
mov
cmps
dec
add
mov
jne
aaa
add
mov
dec
mov
aaa
push
mov
inc
push
adc
cmp
or
cdq
mov
sahf
daa
add
jns
les
dec
mov
jge
cmp
les
mov
push
ins
mov
jns
jnp
ror
jmp
push
ja
mov
or
sbb
xor
mov
or
adc
push
data16
mov
sbb
imul
xchg
xchg
sti
sub
xchg
inc
add
imul
pop
call
sbb
pop
pop
(bad)
dec
push
sbb
mov
push
lea
into
ficom
xor
or
jle
inc
fwait
call
inc
dec
movs
(bad)
xchg
mov
push
cmp
mov
adc
lahf
mov
pop
pop
mov
add
pop
pop
fdivr
cmc
adc
and
fild
dec
lea
jo
outs
mov
push
aad
push
pop
jl
call
ret
pop
jae
sub
adc
and
daa
jno
dec
pushf
cmp
addr16
data16
push
push
pop
sbb
les
cmps
jno
pushf
or
cmps
jmp
and
retf
or
loop
mov
outs
inc
or
push
cli
cmps
loopne
jns
mov
and
ja
adc
les
jne
xchg
add
mov
or
mov
mov
leave
push
sbb
push
out
jo
aaa
xchg
pop
add
in
repnz
push
add
movs
mov
(bad)
cmc
fadd
imul
and
pop
je
test
mov
nop
pop
cmps
or
cdq
inc
repz
push
add
and
fs
mov
fcmovbe
sub
loopne
mov
xor
addr16
push
mov
jge
(bad)
pop
push
int
and
push
sahf
mov
cmp
loop
in
test
dec
fnstsw
les
rcr
lahf
pop
cmp
adc
jns
push
lahf
lods
cmp
pop
dec
test
dec
pop
pop
jo
sub
lahf
inc
cmp
imul
std
aam
add
sahf
inc
push
mov
imul
mov
in
xchg
xchg
xchg
daa
sub
enter
push
(bad)
mov
fs
call
jb
repnz
pop
adc
sbb
cld
and
inc
push
cmp
cmp
sahf
pushf
pushf
mov
dec
dec
inc
dec
stos
aad
aam
ds
pop
cmp
xor
ficomp
push
ins
punpckhdq
xchg
es
pushf
inc
cmps
push
adc
call
dec
mov
sbb
add
cmp
jno
gs
pop
test
mov
mov
or
jl
inc
and
pushf
test
cmp
loope
test
hlt
stos
pop
cmps
test
add
jne
mov
jmp
mov
inc
cmps
test
les
or
shr
xchg
dec
popf
cmp
or
push
add
mov
cmps
test
mov
add
call
xor
jne
push
test
rol
adc
iret
add
xor
test
jno
push
or
test
add
adc
push
and
cmp
test
jno
inc
ss
dec
adc
push
mov
pushf
cmp
xchg
test
jne
test
push
test
je
lods
(bad)
and
rcl
sub
test
pop
loop
test
push
daa
outs
dec
test
cmp
add
test
mov
adc
push
push
or
test
jo
add
test
sahf
daa
add
test
adc
in
push
aam
popf
pop
test
nop
loopne
jns
dec
sbb
test
pop
sub
push
test
mov
cmp
test
cmp
mov
test
push
cmps
test
mov
fmul
xchg
not
add
or
(bad)
or
xchg
push
jno
and
mov
lahf
mov
adc
lahf
dec
or
push
push
adc
xlat
test
mov
inc
xchg
sbb
icebp
andps
cmp
loop
sbb
cmp
push
pop
stos
pop
pop
push
push
bound
xchg
mov
dec
inc
push
jb
sbb
(bad)
or
or
add
jo
adc
pop
mov
inc
push
sub
adc
pusha
and
int3
call
call
out
mov
ja
xchg
call
jb
dec
bound
or
fisubr
add
loopne
xor
pop
gs
jo
cdq
not
cmps
leave
push
adc
int3
call
add
xor
sub
inc
mov
int
mov
pop
xor
mov
add
pop
push
mov
ss
das
pop
push
xchg
repnz
ja
mov
sbb
pop
xchg
mov
(bad)
mov
fild
mov
adc
and
lock
mov
adc
int
xchg
or
(bad)
cmps
clc
hlt
fist
fld
jp
test
daa
pop
dec
loopne
inc
sub
sub
mov
cmovg
mov
adc
or
add
out
push
xchg
fisubr
in
neg
or
push
bound
push
push
xor
std
aad
outs
add
add
add
shr
xlat
mov
mov
ror
and
add
pop
sub
inc
mov
test
add
sub
rcr
xchg
mov
outs
pop
mov
adc
js
or
or
pop
jnp
ret
scas
or
add
push
aam
in
out
sbb
push
add
pop
sti
push
jo
jg
jns
mov
pop
add
jnp
test
idiv
es
jo
mov
and
and
add
add
add
adc
aaa
adc
sub
add
and
js
and
push
jl
loopne
in
push
outs
(bad)
out
bnd
and
sub
pop
dec
adc
fisttp
xchg
jb
repnz
sub
jns
cmp
jns
rol
and
mov
and
sahf
pushf
cld
sub
pop
and
dec
dec
cmps
fst
daa
pusha
daa
daa
daa
daa
call
xchg
sub
jmp
out
jno
jle
cmp
dec
inc
and
push
jmp
push
scas
and
bound
push
sub
daa
cmp
cmp
mul
sub
cmp
or
or
push
sbb
sub
push
mov
jg
mov
jo
sub
or
inc
fwait
lods
push
pop
xchg
xor
jo
aam
ins
push
sbb
call
sub
push
adc
hlt
ja
add
mov
pushf
add
jae
loopne
push
(bad)
out
add
loopne
loopne
rol
lock
or
sub
sti
aaa
inc
mov
sub
call
and
cld
rol
mov
or
add
clc
rol
pop
push
std
iret
or
add
dec
add
jno
or
and
or
rol
push
add
push
shl
stc
adc
rol
xor
jb
adc
ja
loopne
mov
jmp
aas
xchg
add
loop
scas
mov
dec
push
adc
add
sbb
outs
call
push
add
xor
in
or
add
call
cmp
dec
jg
xor
les
push
pop
adc
pop
and
jo
sub
push
jae
add
cmp
push
push
into
add
test
into
adc
dec
add
pop
inc
xor
std
add
inc
cmps
xor
cwde
sub
test
pop
mov
sub
add
sub
adc
pop
jo
push
add
add
jns
mov
sub
xchg
or
mov
mov
adc
adc
out
pushf
mov
add
mov
xor
mov
or
push
add
sub
or
mov
call
stos
mov
inc
add
in
out
add
push
scas
in
inc
push
hlt
es
push
cmp
loopne
adc
or
add
push
pusha
push
mov
xor
cdq
or
pusha
adc
pusha
inc
add
pop
js
xchg
or
test
and
out
xchg
sub
or
or
inc
daa
or
ins
int
sub
sub
(bad)
aas
adc
mov
inc
mov
ss
add
ins
jbe
sub
push
iret
fidiv
into
(bad)
cmp
pop
xlat
cld
push
into
iret
sub
leave
add
call
gs
adc
jne
mov
push
sub
pop
mov
test
or
adc
push
or
xchg
pop
add
pusha
cmp
xchg
aaa
pop
stos
pop
mov
mov
dec
out
js
mov
cmp
aas
sbb
inc
fucomp
mov
test
inc
cmp
(bad)
aas
sub
in
dec
test
call
xchg
jmp
mov
call
push
shr
sbb
mov
pop
add
ins
inc
aas
fsub
adc
pop
daa
leave
or
push
or
ins
call
or
mov
add
cmp
or
push
mov
in
out
sbb
push
add
xor
mov
push
fcom
loop
pop
cwde
jne
fld
pushf
adc
pop
or
pusha
jb
popa
sbb
mov
imul
cld
jnp
pop
mov
pop
or
jne
outs
jae
xor
push
pop
ds
push
retf
push
push
or
leave
leave
lods
(bad)
push
xchg
jge
mov
repnz
in
xor
jb
jb
push
jnp
in
cmp
jns
aaa
data16
sahf
pushf
mov
cmp
dec
dec
inc
cmp
mov
icebp
cmp
mov
daa
daa
ret
cli
inc
cmp
mov
leave
push
sti
pop
sub
push
imul
stos
add
push
xchg
push
(bad)
cmp
mov
or
mov
adc
(bad)
rol
mov
pop
inc
xchg
mov
adc
pusha
adc
pop
add
jle
mov
add
mov
jo
shr
bound
push
push
mov
loopne
or
mov
nop
ja
push
lods
fwait
mov
push
arpl
bound
mov
mov
sub
xchg
ror
or
inc
test
and
sub
mov
add
mov
mov
pop
xor
pop
or
or
mov
add
add
(bad)
or
cmp
dec
push
push
mov
cmp
mov
push
mov
mov
loopne
sbb
push
and
pop
lods
sbb
mov
fsub
mov
mov
and
mov
mov
rcl
cmp
mov
mov
mov
pop
mov
push
and
dec
jg
(bad)
fst
mov
and
add
mov
adc
es
adc
cmp
add
mov
add
rol
mov
mov
mov
cmp
adc
adc
add
mov
jmp
mov
pop
mov
dec
mov
jge
inc
pop
xchg
cmp
add
adc
mov
push
xchg
or
cwde
mov
push
dec
mov
add
mov
pop
(bad)
popf
mov
lea
adc
sub
add
mov
sbb
sbb
pop
mov
add
in
inc
add
mov
es
pop
pop
lock
stos
adc
lea
inc
or
xor
xchg
bound
inc
sbb
mov
mov
in
push
jae
stos
pop
sbb
outs
sub
xchg
(bad)
jae
push
cmp
push
jae
mov
add
in
es
push
loopne
inc
and
xlat
sbb
mov
gs
jo
or
mov
pop
push
add
stos
xchg
dec
(bad)
pop
es
ret
or
push
or
arpl
add
xor
dec
pushw
pop
inc
jb
imul
fstp
dec
bound
adc
mov
ins
sub
sub
es
push
and
cli
sbb
add
dec
or
pushf
jbe
fstp
inc
int
outs
mov
add
pop
dec
das
push
mov
mov
mov
cmc
mov
push
mov
lods
jmp
clc
mov
in
xlat
mov
fdivr
int
shr
stos
outs
xchg
or
xchg
outs
movs
or
xchg
mov
push
or
add
cmc
pusha
pushf
push
sqrtps
and
inc
adc
aaa
add
inc
not
cmc
test
pusha
xchg
inc
fstp
jecxz
jg
inc
sub
xor
dec
or
aam
(bad)
movs
xchg
psubusw
push
add
add
push
xchg
pop
and
push
loop
push
or
rcl
sar
mov
and
push
mov
xchg
pop
mov
mov
pop
es
push
pusha
inc
stos
add
xchg
adc
dec
mov
pop
sbb
outs
out
loopne
lock
ss
movs
das
sti
inc
in
adc
aas
daa
cmp
pop
jl
loop
add
imul
push
mov
mov
mov
add
or
add
imul
shr
push
rol
daa
cmps
daa
in
(bad)
or
jecxz
(bad)
pop
ds
loopne
pop
dec
inc
imul
xchg
xor
jb
sub
mov
test
sahf
pushf
in
and
daa
and
in
cs
xchg
xchg
xchg
xchg
daa
push
dec
inc
jne
xchg
xchg
xchg
call
leave
leave
jp
(bad)
jecxz
fs
push
jg
add
sub
aaa
push
pop
fs
adc
fimul
movs
push
jmp
loopne
adc
ja
xor
cmp
cmp
lock
stos
xchg
dec
or
mov
add
jno
cwde
pusha
adc
add
mov
inc
add
mov
ror
ja
rol
jg
ja
pop
enter
inc
jge
mov
mov
cmp
enter
shl
push
pop
add
push
pusha
cmc
stos
outs
or
shl
test
mov
jae
scas
add
(bad)
mov
inc
pop
and
xor
push
add
fist
add
fwait
or
and
inc
adc
ja
xor
xor
or
ja
and
jl
and
dec
add
and
add
sbb
pop
and
adc
fadd
ja
cmp
add
aam
or
sbb
add
ja
sbb
push
ja
rol
loopne
bound
scas
ja
and
adc
sar
jo
ja
enter
ja
add
push
dec
jg
out
sbb
pusha
stos
gs
and
or
ja
pop
sbb
dec
ja
sbb
add
ja
cmp
add
ins
clc
inc
sbb
and
adc
add
std
push
rcr
fcom
add
in
sub
xor
mov
inc
push
rcr
add
adc
jns
jno
add
loopne
sub
add
cmp
add
add
xor
add
mov
adc
add
stos
mov
mov
in
inc
pop
ja
scas
inc
add
in
rol
mov
xor
jns
or
icebp
or
lea
rcl
test
(bad)
xchg
push
mov
mov
xlat
imul
mov
fwait
push
push
(bad)
hlt
inc
and
mov
arpl
add
sti
rcr
xor
and
out
mov
sbb
cmp
ss
add
xchg
adc
and
mov
xor
push
pop
pop
das
jbe
stos
mov
mov
jp
fist
adc
movhps
adc
mov
(bad)
cmp
addr16
xlat
cld
push
sbb
and
adc
in
test
int
outs
push
sub
int
and
aaa
push
mov
hlt
into
mov
add
push
shl
inc
out
pop
adc
adc
xchg
retf
outs
add
push
les
ss
pop
add
(bad)
mov
jo
or
lods
mov
aad
pop
lahf
pusha
cmps
adc
jge
adc
rcr
gs
je
mov
inc
push
inc
or
lods
shr
lods
xlat
pop
cld
int
mov
call
xlat
cmp
or
ins
push
dec
pop
ror
or
jmp
xor
into
jecxz
imul
sub
push
pop
pop
xchg
push
mov
icebp
das
inc
pop
xchg
cld
hlt
ins
ja
push
sub
imul
adc
sbb
xchg
sbb
pop
xlat
inc
shr
mov
xor
push
xchg
cmp
xchg
xchg
addr16
mov
arpl
jb
or
xchg
xor
jecxz
jne
xchg
jae
xchg
mov
cdq
and
(bad)
mov
nop
bswap
enter
fldenv
pop
jno
in
leave
mov
xor
in
cdq
into
sbb
adc
jb
cli
inc
popa
leave
leave
leave
dec
scas
pop
(bad)
in
in
fs
bound
loopne
jb
repnz
arpl
bound
pop
xor
pop
ja
push
xchg
punpckhdq
stos
es
sub
cmps
shr
mov
dec
push
dec
mov
sbb
pop
xor
push
mov
push
gs
add
mov
push
push
jg
pop
aaa
shr
enter
add
push
inc
adc
lods
xlat
lods
push
sub
outs
push
es
ins
push
mov
pop
mov
push
inc
outs
or
fcom
sub
dec
ja
test
pop
jbe
push
or
push
jae
imul
rcl
enter
les
xor
or
xor
xchg
das
push
xor
push
in
fwait
gs
add
pusha
pop
push
mov
xor
pop
or
or
adc
and
sub
add
push
mov
push
loopne
inc
ret
bound
imul
add
push
push
xor
enter
xchg
(bad)
retf
ja
cwde
xor
mov
(bad)
pop
les
scas
push
and
mov
daa
cwde
jne
mov
add
xchg
nop
in
adc
push
(bad)
lods
add
push
sub
push
jne
push
pop
and
push
mov
inc
lds
fimul
(bad)
stc
push
cmp
add
push
stos
adc
jmp
push
imul
mov
add
push
std
cmp
cmps
push
cmp
adc
mov
xor
mov
mov
dec
push
jge
mov
cmp
push
call
and
lods
cmp
ins
push
cmp
cmp
xchg
pop
and
inc
adc
xchg
mov
lods
mov
or
xor
xor
mov
sub
sbb
imul
adc
sub
sub
out
in
sub
adc
jns
(bad)
or
pop
pop
stos
mov
(bad)
lock
inc
aas
imul
retf
jecxz
xchg
int3
aam
mov
in
pop
adc
xchg
sbb
outs
sub
pop
jnp
ds
push
cmp
mov
sub
(bad)
mov
add
jae
arpl
leave
pop
mov
push
fdecstp
pop
adc
shl
mov
add
test
xchg
ret
add
jp
adc
cmp
faddp
xchg
lods
inc
mov
shl
add
fdiv
mov
pop
addr16
fsub
add
jmp
jbe
push
jp
adc
mov
test
jl
call
lods
push
call
in
inc
imul
prefetch
es
jmp
push
add
mov
in
push
(bad)
pop
not
mov
dec
sub
sub
or
mov
pushf
dec
add
gs
inc
cmp
(bad)
retf
(bad)
or
push
cmps
mov
pop
jno
push
mov
mov
and
mov
dec
ds
sbb
mov
cmps
mov
imul
sbb
xlat
pop
or
ret
cmp
int
mov
push
jno
das
inc
imul
mov
outs
mov
add
push
aam
inc
push
jmp
or
loop
xchg
cmp
push
out
xchg
mov
shr
fld
sbb
pop
loope
fistp
dec
or
in
cmc
adc
add
adc
pusha
mov
push
and
and
add
add
sbb
adc
add
js
std
stos
rcr
test
ret
imul
xor
add
inc
call
xor
add
xor
and
or
push
push
je
sti
fwait
sbb
ficomp
das
add
or
loopne
add
pop
int3
jmp
js
loopne
loope
or
out
add
push
sbb
out
mov
lods
mov
push
inc
mov
add
add
(bad)
mov
mov
inc
inc
mov
and
call
add
or
icebp
sbb
out
add
test
pop
scas
jge
or
cmp
leave
in
jmp
(bad)
arpl
or
test
jne
xor
inc
outs
addr16
pop
push
shr
push
aad
mov
loopne
daa
sbb
int3
in
outs
push
lock
fwait
pop
jo
add
jo
mov
add
cld
ret
sub
or
xor
cmp
emms
ucomiss
jno
sub
in
bound
loope
inc
mov
cmovs
outs
jo
push
rcpps
jl
je
push
cdq
mov
xchg
pop
ficomp
movsx
and
inc
pop
cmc
inc
cmp
cmp
fdiv
or
pop
dec
das
pushw
div
into
imul
ds
inc
push
ins
loope
jo
scas
pushf
mov
add
idiv
div
or
ret
es
push
(bad)
jns
push
push
and
(bad)
adc
sub
and
fild
fist
push
nop
retf
fist
xor
dec
mov
test
inc
jae
push
test
push
xor
scas
out
pusha
and
cs
ds
push
aad
adc
cmp
jmp
add
pop
test
ja
outs
dec
add
push
daa
test
sbb
or
add
mov
ret
adc
pusha
ror
shl
jg
sub
adc
sub
adc
jnp
inc
xor
inc
stos
loopne
dec
imul
push
jl
hlt
outs
cvttps2pi
xor
mov
jbe
sub
inc
test
gs
dec
push
or
push
push
jns
pop
test
and
cs
hlt
loop
out
mov
add
js
adc
add
push
inc
in
or
pop
jle
(bad)
unpckhps
adc
push
movs
or
jne
aas
aaa
stos
pusha
mov
inc
sub
push
add
pop
adc
mov
push
inc
loope
ret
and
das
push
cmp
dec
mov
adc
aas
mov
inc
shl
lds
add
jp
in
add
and
cdq
mov
js
mov
ss
nop
sub
pop
into
aaa
xor
xor
pusha
mov
jae
or
push
gs
pusha
sub
int
int
pop
test
xor
xor
xor
xor
mov
ret
sub
xor
add
(bad)
sbb
push
out
add
dec
test
xor
add
iret
sub
arpl
ins
push
out
stos
jo
js
das
fcomp
add
push
mov
add
daa
sbb
stos
jo
push
add
push
das
and
dec
leave
lock
cmp
mov
pop
jge
test
xor
mov
(bad)
in
(bad)
push
push
popa
sbb
adc
adc
(bad)
jge
mov
sbb
and
repz
jns
mov
cwde
shl
call
push
out
push
stc
fsin
cwde
jo
pop
add
(bad)
in
inc
pop
add
push
adc
add
inc
sub
fnstsw
jle
add
dec
cmp
push
adc
out
fsubr
rcr
(bad)
test
out
out
pop
dec
enter
xor
out
out
rol
xor
mov
mov
loopne
cmp
out
sub
cmp
repnz
iret
inc
adc
loope
mov
pop
dec
das
push
into
clc
inc
popa
and
or
cmp
outs
xchg
mov
pop
sar
(bad)
jae
iret
add
test
es
test
mov
pop
pop
jmp
add
inc
dec
mov
dec
or
movs
push
or
cmp
retf
sub
cmps
pop
bound
lock
or
mov
inc
add
xchg
adc
sub
cwde
popf
cmps
add
jns
mov
outs
fidiv
outs
mov
dec
add
(bad)
sub
push
add
daa
pusha
push
add
sbb
rol
sub
mul
shl
add
adc
clc
mov
pop
adc
add
and
aad
add
xor
add
mov
lock
rcl
ja
pop
dec
loopne
push
dec
sbb
xor
sub
jb
aas
xchg
icebp
ficom
pop
push
or
sbb
add
or
and
pop
pop
xor
jecxz
push
pop
fiadd
xor
pop
xchg
push
stos
push
pop
inc
add
addr16
mov
out
test
dec
outs
outs
imul
movs
cmp
mov
inc
dec
(bad)
sbb
in
rol
fcomp
shl
mov
cmc
xchg
popa
add
ins
je
jno
cmp
sbb
ja
popa
call
jmp
push
pop
cli
es
ins
imul
sub
ret
mov
and
adc
int3
shl
sahf
test
out
test
(bad)
add
ja
jns
cwde
push
sbb
add
mov
frstor
pushf
daa
mov
loop
and
add
jge
punpckhbw
dec
xor
adc
xor
pop
mov
shl
pop
and
jo
adc
leave
mov
mov
fimul
movs
adc
xchg
fisttp
xchg
sbb
cmps
aaa
pop
ins
sub
xor
push
or
aas
jl
mov
mov
or
dec
movs
add
aas
xlat
jecxz
mov
fs
xchg
lahf
jnp
mov
loop
ins
pop
into
popa
push
movs
xchg
aas
jo
and
addr16
mov
pop
adc
dec
mov
dec
mov
or
int
test
xchg
shl
movs
in
rcl
dec
adc
adc
push
pop
lock
jge
(bad)
pop
lods
sbb
or
mov
pushf
pop
out
xor
rcl
or
dec
xor
ret
pop
int3
push
mov
inc
push
add
fadd
jmp
mov
daa
adc
out
jbe
add
sbb
aam
mov
bound
sbb
(bad)
and
pushw
jmp
ins
mov
sbb
inc
add
pusha
and
(bad)
push
xor
sbb
shr
test
into
repz
(bad)
xchg
push
mov
cwde
out
lods
cs
enter
cmps
(bad)
and
xchg
push
mov
pop
test
jne
cmp
add
aas
mov
jle
movs
paddsw
jns
lea
dec
xor
inc
lahf
adc
ret
sub
sbb
pusha
(bad)
sub
lahf
sbb
fcom
xor
outs
cmp
lea
pop
mov
adc
inc
sbb
xchg
pop
int
inc
or
xchg
jmp
adc
sbb
xlat
loop
xchg
ins
push
cwde
pop
sub
(bad)
xchg
bswap
or
ud0
jno
rol
cdq
pop
fs
and
lods
ret
pop
adc
pusha
push
pop
pop
add
add
loope
pop
dec
push
add
inc
mov
mov
add
mov
mov
loopne
mov
das
pop
adc
and
add
faddp
pop
mov
jbe
push
push
push
sub
in
push
add
daa
(bad)
jecxz
sbb
or
push
out
push
pop
mov
es
popa
pop
pop
pop
fist
js
adc
pop
stos
or
int
push
inc
xor
xchg
(bad)
scas
inc
adc
xchg
xchg
stos
mov
aam
(bad)
jno
sub
test
repz
push
and
test
pop
cdq
loope
cmp
jns
movs
cs
fimul
hlt
xor
ret
cmp
xor
add
sbb
mov
mov
(bad)
mov
mov
push
lea
add
dec
mov
sub
mov
sub
or
push
sub
dec
jp
push
xchg
cs
adc
sbb
(bad)
test
ror
pop
add
dec
adc
jnp
fwait
pop
sbb
cmp
pop
fiadd
in
mov
test
dec
mov
pop
aas
ret
push
add
pop
mov
pushf
(bad)
std
lea
mov
shl
popf
pop
sub
push
add
outs
push
adc
or
aad
and
xlat
pop
std
add
test
push
movs
(bad)
xor
inc
inc
lahf
stos
nop
push
repz
pop
cmp
cmp
loopne
push
mov
add
pop
aam
das
mov
pusha
popf
push
in
add
push
daa
push
test
scas
js
add
pop
xor
mov
inc
imul
pop
mov
xor
in
push
test
movs
push
adc
add
rol
cmp
fwait
adc
sub
fisub
mov
push
test
sub
xor
cwde
add
or
iret
cmp
push
mov
hlt
cs
cmp
das
or
add
mov
mov
pop
dec
add
das
mov
fcom
cvtps2pi
das
dec
icebp
cs
sbb
xchg
dec
lods
push
or
pop
pop
mov
push
or
pop
jo
or
push
jo
popa
jo
pushf
push
jl
adc
test
je
xor
sbb
pop
add
mov
loope
sar
mov
jnp
movs
pop
pop
das
jp
jle
inc
and
xchg
mov
jo
mov
pop
retf
mov
mov
lods
movd
nop
and
pusha
loop
mov
or
ss
aad
mov
mov
xchg
int
xchg
and
aam
mov
or
mov
cs
add
push
orps
adc
pop
pop
shl
fistp
les
pop
push
jmp
or
jmp
ret
out
sbb
rcr
push
push
add
xchg
mov
daa
(bad)
repz
out
push
dec
leave
cmp
dec
shl
cmp
pop
push
adc
das
sub
push
adc
dec
les
sub
dec
(bad)
add
sub
cmp
jecxz
push
cmps
jbe
outs
and
lods
das
jns
ror
dec
sub
add
pop
push
cs
push
mov
push
loopne
fs
add
test
pop
in
add
das
jae
les
jle
pop
shld
push
js
das
sub
pop
adc
sbb
call
pop
ins
out
sub
jecxz
out
and
out
(bad)
ins
addr16
les
out
push
out
cmp
out
hlt
sbb
jle
dec
mov
dec
int
out
sbb
nop
loopne
out
mov
cs
mov
in
xor
test
inc
lods
pop
mov
fsubr
outs
das
ror
movs
pop
retf
faddp
inc
dec
nop
js
movs
or
das
ins
lahf
add
in
adc
xchg
mov
addr16
cwde
cmp
mov
inc
outs
jg
and
pop
loopne
and
and
mov
inc
stos
retf
outs
jns
bound
pop
fld
add
movs
(bad)
(bad)
and
stos
or
iret
in
sub
cmp
sbb
xor
iret
cmp
ret
out
sbb
enter
add
jo
mov
daa
loopne
push
out
sub
adc
xor
dec
or
push
xor
jge
outs
mov
fist
test
in
das
add
pop
push
nop
cmp
out
mov
xchg
mov
pop
loope
not
push
in
imul
sub
dec
inc
add
push
out
rcl
data16
jns
fild
in
addr16
sub
lock
mov
outs
mov
aaa
ss
add
jo
push
loope
aaa
call
scas
sbb
nop
(bad)
dec
cmp
js
scas
sub
jns
lods
or
js
test
cmp
jns
mov
test
movs
xchg
adc
push
sbb
popa
adc
test
sub
cmp
mov
cmp
jns
mov
scas
push
mov
ficomp
push
lods
xchg
or
add
push
movs
sub
test
clc
jmp
stc
cmp
popf
xor
pop
sar
mov
and
xchg
scas
or
and
sbb
lds
cmp
ret
add
push
xorps
pop
pop
inc
mov
or
rcr
jbe
push
jno
ja
scas
or
jl
jg
outs
fdiv
push
mov
add
daa
and
add
push
jg
cwde
xchg
add
lock
add
sbb
jg
inc
mov
pop
mov
and
adc
adc
sub
inc
(bad)
repnz
repz
jae
sar
mov
jbe
jg
adc
inc
and
daa
out
pop
push
gs
outs
push
jns
or
dec
je
ins
ror
xchg
add
adc
mov
add
push
daa
fmul
jno
push
jle
or
sbb
push
loop
push
stc
pop
sub
pusha
pop
xor
shr
shl
sub
mov
shl
(bad)
mov
sar
cmp
loopne
pop
rcl
loope
ret
or
sbb
ret
xor
sar
rcl
push
lahf
pop
aad
lods
mov
aas
rcr
xchg
push
mov
push
popa
scas
loopne
mov
popa
mov
push
je
push
mov
adc
ja
(bad)
repz
mov
jbe
pop
test
movs
and
xor
test
jno
pusha
push
imul
pop
add
loopne
and
add
popa
mov
sub
mov
int
fdiv
rol
out
or
inc
adc
jns
push
mov
cmp
movs
pop
sbb
adc
jmp
ret
out
sbb
enter
add
stos
jo
mov
daa
loopne
push
jg
js
sbb
or
shl
lar
pop
gs
or
sbb
add
adc
adc
xor
or
cmp
fidivr
into
and
xor
das
jno
ja
jge
xchg
xchg
jno
or
sar
int
mov
push
lods
add
rcl
sub
dec
push
das
jo
dec
mov
psubsb
jne
lahf
das
and
cmp
xchg
es
bound
cmp
dec
js
adc
cmp
xchg
cmp
xor
mov
sbb
or
mov
cmps
pop
frstor
inc
add
inc
fldenv
es
add
cmp
mov
das
or
aas
sbb
out
add
aas
jp
push
mov
dec
mov
ds
lar
test
(bad)
sbb
aas
sub
popf
xor
loopne
bound
gs
stos
or
xchg
dec
int
pusha
daa
and
int
add
cwde
dec
and
pop
hlt
dec
retf
inc
mov
in
adc
adc
cli
pop
xor
aam
rdtsc
push
add
pop
xchg
xor
test
inc
repz
dec
les
push
push
pop
fadd
add
inc
xchg
push
es
ror
add
mov
daa
or
add
push
call
xor
sbb
sbb
and
xchg
ret
xor
mov
adc
and
sub
cmp
shr
sub
add
sbb
dec
ror
daa
inc
push
je
add
stos
pop
ins
push
outs
das
out
pop
add
outs
repz
std
ffree
test
inc
aas
or
xlat
inc
sbb
(bad)
push
sbb
add
enter
fwait
pop
cwde
daa
mov
xlat
out
test
movd
lock
dec
add
push
aaa
stos
pusha
mov
sub
push
loope
add
pop
adc
xchg
push
jo
or
push
sub
popa
jo
cmps
sub
lods
or
not
aaa
push
add
rcr
jmp
or
or
test
push
leave
frstor
sub
das
into
dec
test
test
push
mov
out
jnp
mov
cld
into
and
lock
sub
(bad)
push
es
mov
nop
inc
fcmovne
adc
or
int
add
fisttp
jo
mov
movs
test
sub
fild
sub
pop
and
loope
sub
push
cvtdq2ps
add
pop
push
and
jg
fmul
adc
cmp
test
jg
fidiv
outs
fdiv
add
jne
mov
rcl
cwde
xchg
sub
fadd
sbb
xchg
lds
test
inc
sub
adc
stos
adc
or
xor
jnp
xor
push
inc
test
shld
cmp
sahf
sub
inc
pop
adc
cmps
adc
inc
jg
dec
out
pop
push
mov
mov
jno
enter
sub
push
rcr
in
mov
push
fsub
add
pop
pop
cs
jbe
jg
jle
out
jbe
outs
ror
sbb
loope
dec
ins
popa
mov
cld
xor
sbb
xor
or
or
sub
xchg
or
test
or
cmp
and
sbb
pop
pop
mov
inc
ror
pop
xor
sbb
scas
pop
in
mov
ins
mul
ret
fild
sub
ds
faddp
scas
into
jnp
sbb
sbb
movs
out
(bad)
mov
ret
push
into
fild
mov
mov
xor
test
(bad)
pop
aam
or
xchg
add
xor
int
mov
xchg
jmp
movs
push
inc
retf
outs
or
shl
mov
fnstsw
add
test
dec
adc
shr
mov
sti
mov
inc
hlt
inc
jns
shl
push
popf
cmp
fnsave
dec
add
daa
dec
push
add
jmp
cmp
cmp
pusha
xor
xor
inc
and
add
pusha
adc
dec
in
sbb
and
xor
into
daa
iret
inc
xchg
mov
movs
(bad)
es
lahf
shl
cmps
mov
push
mov
aaa
fstp
call
mov
inc
je
daa
out
dec
sub
aaa
pop
add
in
push
push
add
fst
call
push
push
fcom
push
jle
test
(bad)
pop
push
cmp
xor
pop
outs
sbb
xor
mov
outs
addr16
inc
test
push
cmp
mov
adc
cmp
xchg
mov
mov
sub
pop
xor
leave
mov
hlt
inc
mov
pop
nop
push
cmp
call
add
push
ret
mov
mov
shr
pop
pop
into
mov
rcl
push
es
bound
pusha
mov
push
int
int
pop
mov
ret
psubsb
(bad)
test
cmovb
pop
pop
sub
loope
inc
pop
inc
fdiv
pop
pop
inc
pop
sbb
scas
mov
adc
xchg
push
cmc
cmps
push
xor
test
ret
push
or
daa
movs
stos
push
xor
push
pop
inc
xor
mov
bound
cmp
mov
dec
mov
inc
and
retf
cmp
lahf
rcl
push
xchg
test
out
sbb
fisttp
mov
scas
cmp
sub
adc
sbb
and
pusha
pop
xor
scas
mov
push
mov
inc
push
add
loope
rcr
mov
push
mov
les
inc
or
das
dec
jge
test
adc
add
adc
ret
sub
je
outs
and
outs
cwde
sahf
outs
ror
push
push
outs
js
or
adc
aam
fdivr
fistp
xchg
and
push
test
add
dec
jnp
daa
and
mov
sub
pop
shl
ss
das
mov
cs
mov
das
pushf
xchg
int3
xchg
scas
out
mov
push
or
ucomiss
sbb
dec
xor
leave
addr16
loope
loop
out
sub
test
dec
pop
xor
out
int
rol
push
pop
out
jnp
test
mov
mov
adc
push
scas
pusha
aad
outs
cwde
(bad)
(bad)
scas
add
outs
push
jo
cmp
in
and
mov
adc
cmp
out
sbb
cmps
les
dec
push
jo
mov
add
daa
fsub
push
dec
leave
cmp
test
or
test
sub
cwde
out
xchg
test
dec
inc
sbb
rcl
jo
xor
add
sub
test
mov
lods
push
mov
push
mov
push
adc
add
(bad)
jnp
stos
add
sub
popa
das
sbb
js
and
cli
inc
mov
imul
push
inc
push
inc
add
out
ss
push
adc
neg
test
sbb
popa
jae
push
arpl
fld
jb
cmp
pusha
sbb
inc
je
ror
mov
test
test
ins
push
and
inc
sbb
les
pop
test
lds
popa
inc
lds
mov
dec
jl
daa
fstp
scas
mov
dec
in
fld
fiadd
xchg
push
scas
das
fwait
push
je
mov
fldenv
sbb
adc
dec
outs
loop
mov
push
xor
cmps
ss
inc
jne
cs
bound
and
sbb
mov
outs
adc
(bad)
jno
add
add
sbb
lds
ja
dec
aad
cmp
pop
cmp
xor
push
bound
push
or
mov
mov
pusha
lock
push
test
sbb
push
ja
add
mov
jbe
sub
sbb
ja
sub
jno
mov
adc
jno
pop
stos
xor
jno
stos
and
push
jno
jno
sbb
jg
imul
pop
push
imul
popf
aaa
clc
push
fsubr
xchg
push
push
add
in
enter
jle
popa
and
jl
and
mov
mov
fisub
push
addr16
adc
std
cmps
push
jns
loop
mov
push
outs
pop
je
cmp
pop
xchg
fucomp
push
sbb
pusha
pop
sub
adc
adc
fcomp
dec
addr16
add
aaa
out
loope
push
inc
mov
jg
mov
jno
xlat
mov
push
sahf
push
mov
dec
test
xchg
jb
xchg
aaa
push
pop
mov
push
aaa
jno
xchg
push
inc
xor
and
cld
call
dec
outs
outs
imul
pop
add
add
je
dec
(bad)
retf
shl
shr
adc
rcl
movs
adc
pusha
sbb
(bad)
jnp
mov
in
mov
mov
sbb
add
outs
rcl
icebp
push
ror
out
das
add
nop
adc
jnp
loopne
call
sbb
and
jno
fisub
push
lods
cwde
out
and
mov
sub
lods
(bad)
(bad)
movs
test
sbb
push
pop
sub
(bad)
jno
adc
xchg
je
adc
sbb
pop
pop
sub
adc
daa
fidiv
leave
or
push
push
pop
repz
xchg
sub
das
cwde
push
daa
fcom
cld
fs
daa
mov
daa
(bad)
push
adc
daa
inc
mov
mov
sbb
gs
ret
test
dec
sbb
push
test
mov
lods
sub
lds
push
cdq
test
(bad)
hlt
cmps
jno
xlat
mov
push
cmp
push
das
ins
push
inc
dec
test
lahf
adc
sub
jp
and
pop
fadd
mov
adc
dec
adc
leave
aam
dec
(bad)
cmp
push
test
test
aas
leave
cmps
leave
sbb
rcl
shl
imul
nop
sub
sbb
mov
and
mov
mul
sbb
adc
ins
jno
xlat
push
cs
dec
das
pusha
push
out
test
inc
dec
test
ret
out
fiadd
inc
mov
retf
xor
inc
shl
and
cmps
xor
adc
cmp
add
sbb
cmps
jg
bound
hlt
test
addr16
and
rcl
sub
clc
push
loop
(bad)
das
adc
addr16
les
xchg
sub
call
lahf
push
addr16
ja
push
and
cs
mov
in
outs
ja
dec
push
dec
inc
mov
jno
lds
out
mov
dec
inc
test
test
mov
sbb
mov
mov
sar
scas
jge
out
push
mov
push
(bad)
push
repnz
or
(bad)
out
inc
push
enter
mov
imul
out
(bad)
push
mov
jno
nop
mov
pusha
push
mov
std
pusha
test
add
and
push
cmp
xchg
and
adc
cmps
push
pop
push
in
adc
sbb
fwait
mov
aaa
pusha
push
push
cld
push
jb
mov
inc
enter
push
aaa
sar
or
adc
lds
popa
and
rcr
aaa
or
lds
sbb
inc
shr
call
inc
dec
sub
sbb
jno
retf
pop
xchg
cmp
out
xor
popa
or
xor
push
xchg
std
out
aaa
adc
(bad)
cs
test
cmp
push
push
push
cmp
push
jb
dec
and
mov
cmps
ficom
pop
push
pop
fisttp
push
push
int
or
ds
push
je
outs
ins
gs
pop
push
stos
in
stos
and
xor
cli
cmp
rcl
mov
jno
fcomp
lock
jg
stos
or
call
cmp
lds
lahf
int3
enter
mov
or
pop
add
push
ss
dec
push
inc
adc
cmp
in
ins
cmp
lds
popa
and
jge
test
mov
cmp
stos
pop
sub
mov
lahf
stos
std
push
popa
xor
stos
gs
outs
test
jno
ins
aad
adc
push
jg
imul
shl
popa
daa
inc
sahf
mov
push
fadd
mov
mov
push
into
push
jmp
and
inc
loopne
mov
or
addr16
mov
addr16
push
addr16
lods
nop
mov
jmp
push
lods
shl
sbb
push
mov
mov
jno
mov
xchg
arpl
mov
inc
shl
pop
mov
stos
sbb
pop
mov
dec
rcl
add
ror
out
das
add
jb
pop
fs
jo
mov
add
fadd
pop
cmp
sbb
inc
cwde
pop
cmp
test
push
test
push
add
test
out
mov
xchg
sub
jne
jno
dec
push
or
inc
inc
loope
mov
mov
xchg
mov
xchg
fldcw
adc
push
daa
mov
and
jnp
(bad)
into
adc
cwde
push
ja
mov
mov
xor
mov
xchg
test
enter
cld
add
mov
cld
outs
fs
and
or
add
cmp
or
outs
or
test
cmps
adc
add
pop
fadd
push
push
push
xchg
sbb
sbb
mov
dec
dec
xchg
imul
inc
sbb
or
jns
adc
push
cmp
or
push
add
les
xchg
sbb
pusha
fild
mov
ffree
push
shr
fisttp
addr16
gs
or
inc
fdiv
jb
xchg
inc
push
add
or
mov
inc
(bad)
xor
inc
push
pop
sbb
mov
adc
push
mov
sar
sbb
aas
fs
outs
arpl
or
fistp
adc
outs
call
ins
popa
or
fcomp
ins
or
jae
outs
je
js
ja
ss
scas
or
bnd
or
test
imul
mov
jae
inc
ror
push
push
retf
inc
mov
jb
inc
push
in
jae
or
adc
outs
outs
xchg
pop
jo
dec
jbe
ins
popa
jns
lods
inc
test
out
outs
popa
fs
jnp
shr
jge
add
ins
jb
ficomp
imul
ret
push
imul
jo
sub
ins
inc
imul
inc
add
jae
sbb
sub
inc
lock
push
cmp
sahf
out
in
cmp
push
icebp
ss
add
ror
movs
jmp
cmp
mov
arpl
adc
dec
xchg
loop
and
mov
cmp
xor
rdmsr
sub
push
xor
dec
add
pop
div
jge
inc
pop
dec
push
or
inc
in
sahf
push
mov
or
fadd
push
push
div
jo
dec
fsub
fld
dec
xor
cmp
mov
int
jge
adc
push
jl
mov
push
mov
mov
out
mov
mov
add
pusha
ins
mov
jl
mov
sbb
mov
mov
fcomp
adc
dec
adc
scas
dec
gs
out
clc
out
push
inc
push
imul
lock
ins
cwde
arpl
es
mov
xor
and
cmp
or
push
pop
fwait
enter
in
and
sbb
mov
cmps
push
or
lds
sbb
or
je
inc
imul
pop
or
add
jnp
sub
inc
inc
or
arpl
gs
popa
(bad)
aaa
je
repnz
push
mov
cld
lea
imul
fs
ja
je
sbb
and
mov
xor
retf
jo
pop
lds
jl
jb
loop
push
jo
add
jne
fnstsw
repz
or
and
xchg
and
sub
data16
mov
loop
push
xor
push
adc
test
mov
push
cmps
cwde
(bad)
inc
test
mov
in
cmp
xor
or
jb
jle
inc
adc
or
dec
outs
out
out
call
aas
push
dec
hlt
and
xchg
daa
daa
and
pop
adc
leave
enter
adc
mov
adc
sbb
repnz
push
mov
pop
push
or
stc
adc
jo
jmp
js
cmc
ret
jnp
push
sysret
push
mov
or
cli
or
test
inc
dec
ja
jo
int3
add
lahf
jae
rol
push
jae
mov
es
jb
mov
aad
jecxz
daa
rcr
das
or
ss
jae
jo
dec
sub
mov
fmul
rol
and
inc
fs
cmp
mov
add
mov
or
push
jmp
and
mov
cmp
fcomp
sti
xchg
inc
stos
push
or
test
sbb
or
dec
cwde
jne
push
mov
jne
or
mov
and
xor
aaa
and
mov
and
repz
not
lahf
or
inc
fadd
sub
les
inc
addr16
sub
aas
and
add
mov
jno
mov
bound
cmp
pop
das
pcmpgtw
or
push
nop
sub
jns
xor
push
xchg
cld
sar
mov
pop
xor
movs
mov
mov
jle
sub
outs
popa
bound
les
push
rcr
adc
mov
sbb
add
push
sbb
push
or
mov
shl
xchg
cs
nop
adc
ja
aaa
aam
and
inc
pop
aaa
and
or
sub
sbb
jmp
fcomp
adc
mov
inc
loopne
inc
and
inc
pusha
dec
cmps
or
adc
test
idiv
add
mov
pop
lock
sbb
cwde
dec
push
rcl
call
outs
lock
pop
lahf
jo
adc
fwait
cwde
sub
jg
jg
sub
add
inc
and
ficomp
mov
inc
push
adc
or
lahf
ins
add
mov
je
jo
mov
stos
adc
mov
add
add
add
push
xor
sub
repz
stos
sbb
test
loope
mov
sbb
add
add
push
out
pop
push
fild
test
fdiv
mov
jo
rcr
jmp
fmul
sbb
bound
fwait
ror
add
mov
jae
push
adc
adc
xor
sti
mov
xlat
cmp
mov
adc
ror
pop
or
xor
pusha
ins
pop
xchg
ja
add
(bad)
jecxz
or
and
add
in
addr16
push
bt
mov
popf
push
pop
add
or
xor
popf
push
add
xchg
test
mov
dec
add
hlt
add
cwde
mov
enter
pushf
mov
lods
and
aas
dec
loopne
sub
dec
hlt
xor
jbe
or
cld
add
add
dec
gs
sbb
test
mov
aad
adc
mov
dec
cli
dec
inc
vcvtss2si
add
jb
addr16
sbb
sahf
sub
or
adc
aad
lods
cs
add
dec
xor
outs
pop
jmp
inc
fcmove
xor
mov
sub
mov
cmp
fs
adc
in
mov
dec
add
movs
das
ins
push
cld
mov
sub
pop
xchg
mov
push
adc
xor
cmp
clc
test
sbb
dec
adc
and
and
mov
mov
das
inc
xlat
lods
push
pop
push
mov
xchg
je
call
cmp
shr
xlat
mov
push
sbb
stos
rcl
or
xor
test
xor
adc
aaa
pop
pop
div
xor
add
call
pop
loopne
add
mov
xchg
push
add
ds
mov
or
jb
(bad)
inc
inc
xchg
fadd
jl
enter
fwait
dec
jge
pop
inc
cmp
pop
jae
pop
push
or
pop
jae
iret
mov
mov
popf
xor
jge
inc
inc
and
and
and
add
inc
xlat
inc
or
sbb
or
jmp
dec
mov
data16
cmp
pop
push
loope
inc
daa
or
push
loopne
pop
cdq
mov
pop
mov
adc
xchg
jp
add
retf
call
or
mov
pop
or
jno
ret
fbld
fcom
stc
mov
rol
dec
je
jmp
into
(bad)
or
xchg
ret
mov
xor
add
(bad)
jl
jne
mov
push
test
je
add
nop
xor
in
inc
jae
mov
mov
xor
mov
sbb
cmp
inc
inc
pop
or
mov
dec
inc
sub
or
(bad)
shl
or
pop
pop
xchg
push
mov
xor
mov
(bad)
nop
cdq
jge
mov
inc
or
(bad)
aaa
jo
pop
(bad)
pop
sahf
pop
ret
mov
cmp
shl
jl
sbb
or
xor
mov
cmp
fcmovnu
sti
jg
mov
pop
ins
xor
vmread
lock
lods
jne
pusha
sbb
inc
ins
(bad)
cld
and
push
loopne
dec
sub
adc
ins
cmp
clc
mov
jb
push
out
ins
push
mov
mov
mov
add
mov
clc
add
xor
cmp
jge
lea
mov
or
dec
cld
data16
add
or
inc
push
add
and
inc
sbb
cs
xor
dec
cmps
and
mov
fwait
arpl
ins
clc
jmp
pop
dec
rcr
adc
cmp
inc
cld
mov
jbe
(bad)
in
mov
jmp
lock
pop
pop
ret
nop
cmp
setne
ret
pcmpeqw
and
push
mov
push
jbe
mov
adc
in
mov
ds
mov
or
push
jle
out
repz
sbb
cli
adc
std
or
mov
or
and
sahf
adc
adc
pop
pop
ror
std
gs
ss
clc
in
sub
mov
rcr
xor
push
jnp
lock
sbb
lock
cmp
jbe
cmps
mov
inc
push
hlt
mov
(bad)
je
ins
lock
adc
xadd
xor
in
addr16
adc
inc
mov
inc
mov
push
(bad)
ret
cmp
outs
adc
push
push
add
and
xor
or
cdq
pop
pop
mov
outs
sub
nop
cmp
add
cmp
pop
xor
mov
mov
inc
dec
test
xchg
ret
mov
std
(bad)
inc
push
push
sbb
xchg
in
lock
adc
xchg
push
rol
pop
in
inc
repnz
cmp
jbe
addr16
movs
jbe
nop
test
add
cld
jo
adc
lods
in
ds
cld
stc
jmp
mov
sbb
int3
test
push
jmp
sub
mov
fstp
sub
or
cdq
mov
jmp
adc
out
mov
call
pusha
xchg
jb
or
arpl
mov
or
out
dec
rol
imul
inc
rcl
pop
aas
test
je
cmp
cmp
or
mov
xchg
push
or
das
mov
dec
nop
xor
imul
push
push
adc
mov
int3
adc
sti
ins
and
push
push
or
ins
pop
popf
call
xchg
mov
test
ins
test
jne
push
sub
loopne
cmp
or
jnp
add
bound
pavgb
add
mov
jle
push
je
shr
shl
mov
es
or
add
pop
dec
fbld
push
add
sub
scas
xchg
add
mov
jne
or
jnp
lea
cmp
cmp
(bad)
imul
xchg
push
in
outs
dec
add
mov
and
out
xchg
mov
retf
mov
pop
adc
cmp
adc
nop
hlt
nop
mov
inc
sub
add
nop
xchg
test
rcl
loopne
jl
je
test
stos
ret
push
gs
bnd
adc
adc
jmp
inc
je
or
pop
retf
cmc
mov
sub
ja
and
inc
add
aaa
in
sbb
push
dec
mov
sub
inc
mov
jmp
sub
rcl
xchg
cwde
push
jle
nop
cmps
imul
and
clc
lahf
push
into
mov
clc
mov
cmp
repnz
cmp
mov
lahf
sbb
scas
and
sub
je
mov
lods
inc
add
cmp
or
inc
hlt
add
loopne
call
jge
mov
or
cmp
or
fst
scas
mov
cli
aad
pop
sbb
je
aas
cs
inc
or
xchg
sub
retf
mov
or
pop
arpl
dec
mov
cwde
loopne
imul
test
push
fadd
(bad)
fbstp
fisttp
and
and
sbb
cmp
add
or
mov
and
sbb
add
xor
stos
and
push
push
push
or
das
mov
enter
mov
cmp
sbb
jno
clc
mov
add
loop
mov
icebp
adc
je
ins
xchg
dec
call
mov
loope
mov
push
xor
mov
adc
pusha
jbe
xchg
mov
loopne
add
and
stos
jmp
out
sbb
mov
stos
fisttp
retf
test
test
jo
outs
hlt
loopne
xchg
ins
or
popa
cmc
cmp
push
dec
lahf
cmp
sub
add
mov
push
or
nop
in
rcl
cmp
push
(bad)
iret
loope
cmp
fdivr
pop
cld
adc
movs
ins
shl
call
inc
dec
dec
cwde
jo
jbe
dec
nop
sbb
jae
call
scas
inc
test
mov
dec
aad
cmp
mov
xlat
sub
sub
xchg
or
mov
gs
add
or
jo
rol
push
cmps
or
sbb
push
jg
int
test
std
std
cmp
jl
pop
fwait
rcl
popa
fcomp
and
add
lds
cmp
xchg
jmp
lock
es
jmp
mov
in
add
mov
cmp
adc
rol
xchg
mov
or
inc
push
mov
mov
outs
ja
push
xor
les
into
into
lock
add
cmp
leave
mov
adc
inc
or
(bad)
clc
push
inc
push
push
mov
dec
mov
ret
push
rol
add
es
push
or
mov
sub
sbb
mov
mov
leave
adc
out
sub
push
dec
(bad)
jl
inc
movq
out
jmp
inc
add
mov
leave
and
xor
retf
and
shl
and
jl
mov
xor
int
pop
sahf
xor
xor
mov
cmp
add
pushf
dec
dec
jne
push
pop
and
mov
xchg
cdq
std
aas
xchg
stc
outs
push
outs
adc
xchg
(bad)
mov
aam
mov
push
je
push
pop
jg
inc
(bad)
fdiv
rol
cmp
stos
mov
pushf
inc
cs
pop
add
sub
inc
sbb
cmp
fwait
xor
sub
lea
test
and
pop
add
push
xor
div
aam
add
adc
pop
pop
sub
mov
loopne
jo
mov
push
mov
pop
jmp
mov
loop
out
pop
jp
inc
jl
es
mov
ror
xor
ret
push
cmp
and
(bad)
and
imul
inc
pusha
cmp
push
push
add
or
stc
ret
mov
xor
inc
sub
pop
pop
aam
fs
fiadd
sbb
sbb
jo
push
inc
push
pop
jmp
sbb
or
rcr
push
das
inc
or
imul
inc
pop
and
imul
mov
add
cmp
sbb
pop
mov
inc
push
scas
push
mov
movs
aam
mov
dec
sbb
push
inc
hlt
add
push
subps
pop
loop
adc
or
clc
adc
adc
dec
sbb
mov
sbb
inc
popf
sub
ret
ficomp
daa
mov
loop
or
or
inc
adc
loop
mov
or
mov
mov
dec
mov
jle
sub
mov
or
dec
or
add
jecxz
xchg
lea
sbb
adc
retf
dec
mov
inc
cmp
(bad)
(bad)
popa
sub
adc
retf
add
mov
adc
push
and
fldcw
nop
neg
cmp
shl
call
dec
(bad)
dec
or
stc
sbb
je
(bad)
xor
retf
retf
mov
jmp
sbb
inc
test
push
loope
lea
fdivr
inc
fadd
or
loopne
dec
mov
mov
and
ja
sub
jge
pop
xor
cmp
sub
test
push
sbb
std
dec
ins
push
out
ins
pop
xchg
ss
in
and
dec
in
xor
ficomp
and
push
jecxz
add
mov
dec
fmul
xor
cmp
je
cmp
jne
(bad)
movs
dec
cdq
outs
dec
lea
out
popa
xor
retf
hlt
fstp
sbb
cwde
push
push
push
cld
xchg
fimul
push
or
les
jne
mov
sbb
in
sub
aad
inc
cmp
pop
push
adc
bound
popa
setge
and
add
jne
or
adc
sub
arpl
push
fdivr
and
in
lahf
adc
(bad)
mov
mov
adc
call
cdq
sub
mov
sub
jg
inc
mov
and
add
xor
sbb
retf
dec
sub
cmp
mov
xlat
pop
pusha
xor
sbb
call
and
sbb
xor
push
xor
cmp
in
push
in
rcr
add
aad
xor
js
enter
inc
add
fdiv
(bad)
aas
push
mov
pushf
cmp
test
push
adc
(bad)
test
je
inc
mov
outs
mov
test
pop
jge
sbb
jecxz
push
add
dec
test
inc
std
fstp
xor
arpl
mov
lods
inc
dec
jne
stc
sbb
neg
xchg
jnp
jl
inc
jno
cmp
xor
int
jmp
inc
fnstsw
pop
jmp
add
push
jmp
jge
or
dec
sub
jl
add
sbb
jmp
inc
(bad)
ins
aaa
ss
sub
daa
lea
jg
dec
mov
jno
dec
push
jecxz
pop
jmp
je
jmp
cmp
push
(bad)
int
push
mov
add
cmp
adc
leave
fmul
xlat
inc
push
cs
je
adc
loope
add
push
shr
mov
xor
inc
cmp
dec
movs
fild
nop
sub
movs
ja
and
inc
fs
mov
dec
mov
add
sub
fld
rol
add
cmp
leave
call
cmp
cwde
jg
cmp
jl
mov
pop
std
push
inc
sbb
add
pop
and
sahf
jns
cmp
je
mov
scas
push
dec
xor
and
adc
cld
or
out
inc
add
pop
pop
js
pusha
inc
test
inc
cmps
mov
dec
jno
adc
dec
mov
push
ror
mov
test
aas
(bad)
mov
mov
add
out
sbb
add
test
je
sub
xchg
test
and
test
or
add
mov
mov
clc
shr
call
shl
and
inc
fs
push
jecxz
mov
pop
pop
jmp
ret
retf
daa
(bad)
mov
and
adc
ror
push
sbb
cdq
mov
adc
jle
fiadd
dec
hlt
mov
mov
mov
xchg
add
add
das
and
cmp
or
xchg
add
shl
mov
(bad)
not
xor
cmp
(bad)
jns
cwde
adc
push
mov
inc
imul
ins
sub
outs
pusha
mov
addr16
iret
jne
ret
or
inc
dec
fild
scas
push
ror
es
jmp
add
add
fwait
cmp
xchg
mov
cmp
jg
mov
or
mov
or
jl
inc
xor
mov
adc
icebp
mul
inc
add
inc
dec
jne
pop
jp
je
cmp
inc
jl
push
js
pop
(bad)
mul
lock
jne
mov
jmp
inc
outs
mov
imul
mov
leave
je
mov
jo
mov
hlt
sub
adc
push
cmp
add
jne
push
pop
jne
xor
add
adc
push
inc
mov
cmp
add
iret
loopne
or
std
sub
gs
je
mov
add
push
mov
jae
xchg
mov
imul
adc
pop
sbb
jne
cmp
push
bound
and
dec
add
hlt
inc
adc
push
sub
sub
aam
stc
ja
fsub
sub
movs
pop
daa
lds
push
sub
enter
lea
ja
push
adc
ret
mov
nop
and
jmp
push
push
dec
add
test
std
cmp
das
xlat
xchg
addr16
or
pusha
lods
lahf
adc
jo
icebp
jnp
push
and
stos
adc
je
sbb
pop
pop
cs
or
ret
add
and
dec
mov
inc
add
inc
popa
mov
daa
jmp
mov
data16
ins
pop
or
sbb
push
adc
imul
jge
cs
mov
pop
out
inc
call
add
xor
inc
bound
test
ror
sbb
and
jns
inc
lea
jns
or
(bad)
xlat
ror
xor
cmp
idiv
dec
inc
mov
sub
out
xor
cmp
int3
mov
push
mov
jns
je
inc
and
ss
sub
aaa
sub
add
test
add
cli
xor
inc
call
sub
movs
sub
pop
adc
mov
push
xchg
or
lds
mov
adc
dec
lods
jge
in
dec
jne
loopne
push
and
adc
sbb
imul
pusha
dec
dec
outs
retf
cmp
inc
ja
jb
fistp
or
mov
sub
push
add
xchg
mov
(bad)
stc
cs
fnsave
ror
push
mov
test
test
push
loop
inc
ins
ds
or
xor
mov
xor
sbb
mov
pop
sub
out
mov
outs
icebp
mov
call
dec
jne
cmp
jne
dec
repnz
sti
xlat
test
daa
sahf
out
or
xchg
sbb
stos
adc
ret
add
pop
or
and
sbb
or
or
xchg
je
mov
hlt
push
add
or
clc
or
cmp
adc
xchg
shl
mov
jo
rol
in
(bad)
retf
add
pusha
cmp
mov
call
add
pop
and
and
mov
and
call
lea
or
or
jge
pop
mov
cmp
pop
cmp
jne
cmp
jae
dec
jne
inc
(bad)
sub
jmp
adc
inc
mov
mov
repz
xchg
push
pop
gs
sbb
daa
adc
xchg
push
adc
jle
sbb
(bad)
cmp
cmp
sti
add
mov
push
add
push
jg
add
mov
push
loop
and
push
enter
je
xlat
sbb
jg
dec
or
mov
inc
enter
xor
pop
lock
call
sub
mov
and
xor
sub
cmp
cli
sbb
sub
mov
lock
fucomi
arpl
outs
and
je
ins
dec
add
add
push
push
add
aaa
out
ja
add
add
pusha
imul
sbb
pusha
ss
js
mov
jae
inc
ret
push
mov
dec
je
js
ss
adc
iret
push
adc
loopne
pop
xchg
nop
inc
add
pop
mov
call
mov
and
mov
and
jle
inc
mov
sub
test
push
loope
or
cld
push
pop
or
clc
mov
and
inc
in
out
fld
lods
pop
xchg
setp
mov
pop
cs
nop
stos
inc
add
push
sub
lahf
out
push
xor
or
push
push
outs
jo
ficomp
fmul
add
inc
dec
gs
adc
outs
jne
jb
outs
fcmovb
pop
and
pop
int3
ret
or
ins
cs
cmp
ja
imul
fdiv
add
push
daa
inc
jb
popa
imul
sti
aas
lahf
xor
push
ins
bound
outs
gs
or
or
(bad)
push
popa
jb
xchg
push
sbb
push
or
fistp
in
inc
addr16
jbe
ret
push
push
push
fs
out
mov
dec
bound
arpl
jne
arpl
push
dec
mov
pop
pop
push
bound
ins
fs
inc
outs
outs
ins
scas
outs
add
pop
sbb
mov
push
jbe
adc
add
inc
popf
push
sub
xchg
sbb
pop
xchg
or
mov
popa
ja
and
cdq
fnstsw
pop
inc
inc
call
movups
cdq
fld
add
sub
gs
aas
adc
adc
push
call
mov
inc
mov
xlat
ret
adc
popa
sar
jne
mov
sbb
pop
outs
mov
push
push
movs
fs
push
je
js
and
mov
xchg
pop
sbb
fiadd
cdq
lds
sbb
jbe
fild
adc
push
es
add
out
push
fs
pop
dec
pop
gs
add
dec
imul
out
arpl
pop
mov
arpl
pop
mov
sbb
adc
mov
jne
outs
inc
ins
popa
addr16
int3
or
fisubr
je
arpl
dec
lods
jne
ins
adc
pusha
sbb
and
out
pusha
retf
or
xlat
push
in
push
mov
push
sub
scas
lahf
xlat
popf
inc
add
and
out
push
daa
mov
jmp
xchg
mov
stc
fiadd
out
jo
enter
cld
out
call
xor
out
cmp
dec
add
es
push
xchg
or
mov
fidivr
loopne
cmp
fs
nop
hlt
daa
ds
adc
push
mov
sahf
mov
pusha
push
sbb
push
jl
mov
fdivp
loopne
es
add
vmaxpd
pop
inc
inc
ins
imul
add
dec
sbb
mov
fidivr
pop
pop
das
add
je
or
xchg
lods
rol
xchg
xlat
adc
xlat
fnsave
mov
push
add
mov
ds
and
loopne
iret
dec
add
gs
push
inc
leave
loopne
inc
sbb
js
mov
les
inc
jae
add
jns
sahf
fs
push
lods
inc
in
cmp
ss
inc
or
dec
push
mov
jb
cld
xor
inc
xchg
jp
jae
cs
test
or
outs
add
mov
clc
sub
ret
or
inc
rcr
cdq
(bad)
fld
sub
jo
or
je
retf
and
add
sub
stos
lahf
cmp
dec
outs
or
dec
or
movs
mul
dec
addr16
inc
xor
cmp
mov
and
in
cmc
adc
fstp
jo
call
cmp
mov
push
sub
push
(bad)
dec
out
dec
jp
les
or
dec
inc
jo
adc
sub
mov
ficomp
jne
jl
jle
xchg
ds
jnp
outs
jp
mov
cmps
push
mov
push
mov
mov
mov
cwde
mov
cwde
mov
jge
pop
pusha
ds
sahf
push
cwde
jle
movs
push
fsubr
stos
jbe
push
push
push
or
add
mov
pcmpgtb
clc
xor
stos
popa
(bad)
add
push
pop
mov
ds
push
in
or
bound
jge
pushf
inc
popa
jne
and
inc
sar
jnp
dec
outs
je
jns
das
dec
cmp
push
gs
xchg
inc
test
xchg
add
inc
push
popa
fs
into
mov
mov
call
or
dec
mov
jne
xchg
add
and
cmp
inc
dec
sub
xor
sub
sets
or
adc
into
aas
sub
and
hlt
push
add
inc
imul
pop
or
js
lock
and
mov
dec
pusha
mov
jmp
jo
stos
sbb
mov
fnstenv
lods
add
sbb
shl
xchg
add
je
xchg
push
push
pop
loopne
jmp
or
jb
jmp
add
rcl
mov
add
push
mov
dec
jmp
lahf
pop
addr16
je
jo
push
aam
js
pop
mov
in
or
mov
outs
jne
call
inc
imul
retf
imul
xchg
cwde
sar
xor
ins
imul
adc
aad
pop
and
jo
test
adc
cmp
sbb
mov
cmp
bnd
add
pop
icebp
mov
sbb
mov
(bad)
arpl
pop
add
add
jmp
adc
dec
out
aaa
push
ins
in
add
add
ins
test
fnstsw
dec
aas
adc
pop
setb
push
add
nop
pop
sub
addps
in
cmp
icebp
dec
loopne
jb
jnp
push
getsec
jns
cmp
jns
jmp
push
push
and
fstp
lods
sahf
idiv
in
push
and
push
ins
data16
(bad)
clc
call
jmp
or
in
test
mov
(bad)
fsub
push
invd
adc
and
xchg
(bad)
adc
or
test
inc
(bad)
add
add
adc
enter
xchg
jae
outs
jns
add
cs
les
pop
imul
push
jae
ins
dec
add
add
addr16
add
xor
into
xchg
push
fsubr
lea
fwait
test
and
pop
mov
add
(bad)
out
add
dec
inc
dec
test
cwde
fs
lods
inc
pop
test
stc
inc
push
sub
clc
or
imul
or
push
dec
mov
pusha
jo
pop
sbb
shl
xchg
aam
adc
xor
and
or
cs
repz
mov
push
adc
in
dec
add
arpl
scas
mov
cmp
outs
outs
retf
add
lahf
pop
or
adc
sahf
out
adc
inc
pop
xor
retf
sbb
ds
push
imul
push
pop
xor
adc
lods
pusha
push
add
in
mov
add
aas
mov
add
sbb
push
pop
int
mov
jae
cmp
pop
dec
sub
mov
mov
outs
jo
or
(bad)
call
inc
ss
aad
cdq
inc
pop
push
dec
pop
adc
jo
mov
data16
inc
jno
(bad)
retf
add
pop
add
cmp
dec
ror
xor
(bad)
mov
add
xor
popa
push
mov
pop
add
mov
push
push
imul
ret
int
push
mov
xor
mov
imul
(bad)
mov
aas
cmps
xor
inc
mov
ins
pop
or
movs
push
imul
adc
lock
dec
adc
fld
add
mov
add
pop
sub
xchg
mov
push
mov
mov
clc
sub
or
popa
add
mov
sbb
adc
sahf
cmp
dec
add
inc
inc
sbb
and
or
xlat
jmp
inc
mov
inc
ror
loop
sbb
adc
mov
loop
data16
cmps
xor
inc
sub
test
pop
add
xor
pop
rcl
dec
inc
jl
pushf
or
push
xor
or
loopne
or
jmp
sbb
jo
pop
or
cmp
(bad)
jmp
rcr
push
or
and
push
jbe
xor
cwde
inc
xchg
or
inc
test
gs
aam
jno
fwait
adc
jbe
mov
ins
pop
cmps
cld
cmp
adc
sti
movs
(bad)
call
and
cmp
(bad)
adc
inc
daa
in
nop
sbb
mov
out
inc
adc
pop
dec
inc
cmp
xor
cmp
or
out
push
pop
mov
dec
or
cmp
pop
sub
sbb
or
cmps
les
pop
dec
dec
mov
rcl
jno
popa
pusha
outs
inc
pop
pop
ficomp
sbb
pop
inc
inc
or
mov
in
int3
or
mov
add
inc
fs
neg
cmp
fs
in
adc
rcr
loopne
mov
xor
adc
sbb
sbb
mov
xlat
xor
jbe
inc
push
addr16
inc
fisubr
test
dec
in
cmp
jo
mov
aas
or
mov
test
test
in
xchg
jp
imul
push
pop
loopne
or
xchg
pop
or
xor
push
pushf
or
test
not
jne
rcl
push
ss
mov
push
xchg
push
cmp
and
mov
push
add
into
pop
pusha
je
stos
inc
mov
ss
add
mov
movs
add
dec
not
mov
outs
pop
enter
lds
add
cmp
sub
ret
sub
inc
imul
dec
push
xchg
inc
ds
lds
inc
or
ja
mov
aaa
(bad)
and
or
mov
dec
or
inc
pop
lods
movs
ja
fdivr
mov
shr
fdecstp
pop
call
retf
clc
add
push
add
call
fdivr
push
inc
cmps
push
mov
mov
mov
pop
cmovge
cmp
xchg
pushf
fstp
sub
in
jbe
orps
out
call
call
cmpps
mov
jb
int3
enter
enter
or
daa
adc
sub
mov
ror
shr
xchg
push
lea
nop
imul
jnp
push
pop
mov
sub
and
mov
jae
stos
arpl
jecxz
adc
mov
sub
mov
add
push
and
adc
jne
jge
adc
jo
jl
inc
inc
add
ret
popa
sbb
add
ret
jo
shr
shl
xor
add
push
and
sbb
push
mov
xchg
repnz
dec
inc
jns
sub
loop
or
push
outs
dec
gs
jmp
cmp
xchg
std
cmp
mov
mov
(bad)
jae
mov
dec
in
and
inc
adc
fs
test
cbw
imul
adc
sub
ror
call
xchg
and
xor
add
and
add
pop
das
pop
sbb
mov
lea
addps
pushf
mov
(bad)
xchg
sbb
mov
mov
add
call
pusha
fs
mov
or
fs
pop
daa
ins
test
les
call
(bad)
sar
mov
adc
in
and
or
hlt
(bad)
aaa
sub
jmp
mov
and
mov
push
std
js
popf
add
or
sbb
mov
ins
scas
(bad)
bound
add
inc
pop
mov
sub
scas
retf
adc
rol
sub
add
dec
js
or
push
ja
jp
cmp
je
xchg
fild
fist
add
popa
mov
mov
add
test
nop
push
jns
out
jle
xor
imul
imul
xor
ins
push
popf
sbb
jnp
loope
add
or
outs
xchg
pusha
dec
imul
adc
cmps
or
sub
rcl
js
je
inc
arpl
inc
inc
cdq
scas
or
push
pop
out
icebp
bound
mov
add
neg
aad
mov
adc
daa
inc
std
(bad)
rol
std
(bad)
lock
adc
inc
and
leave
and
sti
jne
loop
(bad)
not
pop
movs
adc
gs
mov
xchg
mov
jnp
push
xchg
add
sbb
push
adc
xchg
adc
out
adc
sahf
ret
push
xchg
and
cmps
ret
outs
inc
sub
or
popa
inc
popa
and
or
aam
mov
popa
inc
inc
inc
sub
xchg
adc
pop
inc
mov
mov
push
adc
imul
add
inc
and
push
jo
mov
mov
push
pop
or
or
inc
ffree
or
inc
xchg
ja
(bad)
or
shl
push
mov
movs
outs
mov
push
jnp
or
movs
xchg
pusha
bound
pop
sbb
test
outs
imul
mov
sub
outs
(bad)
movs
or
mov
out
pop
data16
ret
sbb
and
xor
dec
call
arpl
push
fild
int
push
in
mov
add
mul
xchg
fs
mov
mov
adc
test
cmp
fmul
cmps
inc
adc
push
idiv
adc
inc
cmps
pusha
jno
fmul
push
xchg
test
and
ins
push
scas
jno
or
test
call
mov
xor
loopne
icebp
adc
inc
sar
sub
cs
lea
cdq
outs
imul
and
mov
xchg
lds
jo
mov
and
push
dec
push
stos
push
sub
mov
sti
inc
mov
xor
push
jecxz
add
mov
ins
outs
jae
fwait
icebp
loope
push
cmp
add
jl
add
or
aad
push
lock
inc
pop
movs
mov
loopne
loop
adc
or
xor
cmp
int
xor
xchg
loopne
pop
or
pop
and
pop
or
lock
arpl
cmp
out
loope
popa
cmp
mov
mov
add
jmp
test
add
xchg
inc
lea
sbb
cwde
mov
aam
pop
push
xchg
aad
mov
xor
inc
pusha
inc
adc
shr
and
and
(bad)
pop
inc
movhps
adc
add
xor
push
mov
xor
sar
xor
jb
and
dec
imul
(bad)
daa
addr16
(bad)
xor
jo
cdq
dec
add
ja
pop
and
mov
mov
test
add
in
cmp
xlat
das
in
push
sbb
push
inc
jge
push
inc
or
sti
(bad)
sar
inc
dec
imul
pop
inc
push
loopne
pop
inc
fmul
iret
fs
adc
aam
xor
mov
push
clc
mov
mov
add
mov
mov
xor
mov
add
push
shl
jno
daa
pop
adc
(bad)
enter
add
scas
pushf
add
pop
out
aas
sub
pusha
push
sub
adc
fwait
lods
xor
je
mov
(bad)
add
ret
push
cmps
ins
(bad)
pusha
(bad)
loopne
push
inc
lds
and
xlat
popf
or
xor
mov
push
je
cmp
or
and
pop
rol
sbb
adc
ret
shl
gs
pop
popf
lahf
mov
(bad)
daa
ret
mov
out
add
push
xor
xor
adc
add
bound
pusha
add
xchg
loop
inc
add
add
stos
inc
jo
fimul
add
mov
cld
out
stos
push
pop
mov
or
push
inc
add
push
cmp
pop
pop
push
push
push
mov
xor
mov
(bad)
call
mov
test
je
push
add
ret
sub
cld
push
test
jne
mov
mov
pop
pop
pop
ret
lea
mov
push
mov
push
mov
int
cld
dec
cld
mov
mov
xchg
pusha
jmp
pop
(bad)
(bad)
(bad)
mov
mov
xor
movzx
shr
test
jne
mov
test
je
data16
add
add
mov
pop
ret
push
add
repnz
fmul
stos
add
ret
push
adc
and
test
shl
inc
sub
and
in
fist
xor
and
shl
aam
das
push
add
pop
add
jb
outs
pop
pusha
push
push
mov
mov
mov
add
mov
mov
enter
jge
add
sub
jb
(bad)
push
outs
outs
or
je
push
je
push
(bad)
xor
jb
cmp
jge
sub
imul
in
push
sub
aas
pop
pop
rcr
sar
mov
pop
cli
sbb
(bad)
fld
jg
xchg
hlt
ror
xor
jb
aas
mov
or
nop
fld
add
xchg
jmp
sub
enter
sub
add
and
jo
push
and
int
inc
inc
cmp
pusha
dec
sub
outs
int3
sub
sbb
clc
inc
mov
mov
or
sbb
test
js
loop
cmc
test
or
mov
cwde
pop
daa
inc
push
iret
cs
sbb
adc
bound
pop
push
adc
arpl
mov
repnz
mov
dec
push
sbb
repnz
inc
inc
(bad)
pop
inc
dec
shr
adc
loop
(bad)
clc
hlt
mov
jb
inc
sti
ror
js
add
mov
rol
fiadd
cmp
jg
fsub
outs
adc
out
or
dec
push
pop
div
into
pop
or
call
add
mov
enter
push
call
ds
ja
inc
mov
ins
or
cmp
call
int
push
xor
fadd
in
cmp
out
pop
push
das
inc
jmp
xchg
and
cdq
xor
mov
dec
sub
mov
push
mov
jb
dec
add
sti
sbb
sti
or
jmp
inc
(bad)
sti
push
add
neg
xchg
inc
add
add
add
sti
test
mov
or
fsub
shl
and
pop
cmp
cmps
not
outs
push
xor
inc
jmp
mov
repz
cmps
mov
call
cld
jg
mov
outs
push
sbb
push
add
fs
fcomip
inc
cmp
or
lock
jg
cli
test
(bad)
call
outs
enter
sahf
cld
or
in
xor
or
call
je
xor
mov
xor
hlt
or
hlt
pop
lock
ss
push
push
pusha
retf
(bad)
call
or
jmp
cmp
jle
add
imul
dec
cmp
jle
sub
ja
loope
mov
jmp
cmp
ja
sbb
xlat
cmp
pop
xor
jmp
cmp
fdiv
xor
jae
add
fst
sbb
mov
cmp
push
outs
jno
adc
jg
or
rcl
ds
pop
adc
mov
xor
in
cs
nop
jo
mov
mov
icebp
std
add
cmp
js
mov
pop
and
rol
loop
mov
mov
mov
lea
cld
ss
adc
mov
xor
clc
arpl
cmp
sub
pop
pop
push
push
fcomp
push
mov
cmp
je
cmps
add
inc
jno
jecxz
addr16
push
jmp
dec
dec
js
lahf
retf
jae
inc
mov
mov
mov
or
fsubr
push
push
cmp
jbe
jmp
add
in
cmp
sbb
sub
ror
fidiv
mov
lods
sbb
pushf
mov
dec
push
push
mov
mov
push
movs
cmc
imul
ror
adc
mov
dec
or
and
xor
rcr
scas
dec
push
imul
loopne
push
jmp
pop
mov
sbb
scas
enter
ds
xchg
cld
(bad)
cwde
sbb
xchg
push
cmp
push
sub
xchg
je
aas
sar
sub
arpl
cwde
sbb
xor
push
clc
cmp
sti
mov
cmp
add
adc
mov
inc
mov
add
inc
aas
cdq
aas
jb
sbb
inc
and
dec
jnp
mov
ds
aas
xchg
jmp
aas
in
push
or
pushf
pop
pop
ret
xchg
push
test
je
jmp
jae
mov
mov
shl
add
mov
and
ins
inc
cwde
pop
sbb
push
cmp
dec
or
pop
push
imul
retf
setg
in
sbb
push
call
mov
mov
jmp
cmp
inc
dec
add
inc
inc
add
jo
push
in
jns
xchg
pop
mov
loopne
and
add
in
fbld
inc
push
mov
mov
and
push
add
mov
sbb
xchg
mov
mov
push
int
test
sbb
ins
push
fcom
pushf
lods
call
je
imul
pop
dec
jg
mov
mov
imul
into
dec
sbb
mov
add
dec
ins
out
dec
je
mov
jg
push
mov
pop
shr
or
xchg
xor
pop
cmp
xor
ss
sub
(bad)
fucomip
fild
aas
mov
and
or
or
jle
jae
adc
cmp
push
daa
push
js
fisttp
mov
push
lock
js
cmp
je
lock
push
ror
jg
xchg
add
imul
(bad)
aam
dec
cmp
inc
mov
and
test
mov
mov
adc
and
jne
push
hlt
mov
inc
ins
jl
loopne
mov
out
mov
pop
loopne
in
clc
push
pop
pushf
cmp
cmp
and
idiv
fnstsw
jne
mov
jle
mov
adc
popf
sub
les
xchg
sahf
aam
mov
add
enter
lock
jle
adc
cmp
push
cmp
imul
or
push
jl
add
add
and
jo
pop
je
mov
adc
cmps
movs
push
xor
sbb
popf
sub
lods
pop
pop
and
shl
adc
or
or
jg
neg
lods
inc
mov
in
sete
and
mov
inc
lods
inc
dec
mov
dec
push
or
push
test
add
mov
rcl
mov
iret
in
lea
pushf
adc
cmp
pop
or
adc
aam
cmps
or
popa
xchg
sbb
test
sbb
xchg
dec
adc
clc
rcl
add
shl
sbb
push
adc
jae
mov
fist
sbb
js
inc
push
adc
mov
sub
or
jge
and
and
and
push
in
jmp
and
adc
xor
out
mov
mov
mov
aaa
call
scas
adc
or
sub
push
or
dec
sti
cmp
push
into
xchg
arpl
mov
imul
mov
icebp
dec
inc
mov
and
adc
and
cmps
mov
adc
mov
pop
inc
xor
je
sbb
xchg
(bad)
(bad)
ds
fdiv
xchg
sbb
movs
mov
mov
push
addr16
(bad)
mov
(bad)
mov
xchg
xchg
push
inc
stc
pop
xor
add
xchg
push
mov
push
std
test
jne
xor
je
lods
pop
in
jmp
mov
mov
sbb
mov
shr
or
js
sbb
mov
sub
mov
mov
mov
sbb
fs
into
pop
je
adc
shr
test
cmp
sbb
stos
add
mov
sbb
cmp
arpl
jle
hlt
inc
jp
clc
fs
test
push
ret
or
cmp
mov
dec
push
inc
jl
add
adc
fsubr
dec
data16
push
dec
and
jbe
jle
cmp
jl
daa
add
ror
stos
das
hlt
dec
test
push
xor
mov
mov
call
pop
(bad)
fwait
mov
aaa
scas
push
mov
adc
jg
lock
jmp
sub
jge
aad
paddb
lods
cmp
jae
mov
sub
xor
sbb
pop
stos
push
js
shl
movs
jne
add
loopne
cwde
cmp
jne
movd
or
inc
or
test
mov
mov
mov
bound
icebp
or
pop
(bad)
mov
jo
push
int3
jo
call
enter
dec
push
(bad)
push
call
aas
jmp
add
inc
mov
out
or
pop
inc
jmp
invd
xor
cmps
cld
or
sbb
mov
cmp
in
push
and
out
movs
not
jmp
jecxz
xor
jmp
mov
imul
es
add
enter
test
mov
cmp
jne
out
ds
adc
jne
mov
mov
rcr
nop
xchg
jne
mov
mov
cld
adc
push
test
push
push
jo
adc
mov
adc
outs
dec
and
inc
dec
jne
imul
add
or
push
and
mov
mov
enter
in
or
xor
inc
add
mov
call
mov
icebp
mov
pop
mov
out
bound
in
stc
mov
or
push
inc
push
xor
sbb
or
ja
aam
retf
shl
xchg
adc
ret
xor
lock
or
cmps
sbb
jmp
and
pop
mov
loope
icebp
add
ret
xor
push
test
sahf
stos
push
sub
lock
or
push
scas
dec
or
(bad)
push
mov
movs
sub
xchg
mov
clc
push
in
in
mov
repnz
xchg
clc
out
adc
mov
(bad)
mov
sbb
test
in
add
movs
ins
fsubr
sbb
adc
fisubr
push
shl
add
adc
ret
xchg
adc
cmp
add
mov
and
aaa
jno
cmp
sub
sub
adc
pop
add
push
jo
pusha
ret
fadd
xchg
dec
je
out
aam
push
mov
ins
mov
sbb
adc
xchg
loop
pop
sbb
fst
mov
add
push
dec
mov
test
lods
mov
(bad)
scas
adc
push
add
or
inc
sub
inc
sub
xor
(bad)
pop
jg
fadd
nop
xlat
mov
lea
inc
pusha
lock
xor
push
or
test
inc
pushf
sub
push
jl
setne
call
xor
inc
ret
and
lea
or
inc
xor
scas
jbe
dec
retf
xchg
(bad)
aas
repz
jno
ss
jmp
push
pop
or
and
push
mov
loopne
cmps
xor
push
jmp
std
adc
mov
mov
nop
test
fnstenv
jno
or
cmp
lock
in
fisttp
test
mov
fdivr
enter
and
xor
adc
jo
mov
inc
in
add
je
in
or
or
add
add
and
nop
test
in
jmp
addr16
test
aas
clc
sub
jg
mov
sub
add
push
lea
lea
loope
call
js
je
pop
fadd
in
cmp
jle
sub
in
add
mov
inc
sbb
sbb
leave
je
inc
clc
(bad)
cmp
sub
imul
sub
sar
jns
adc
fisubr
lock
or
sub
sar
push
rcl
retf
out
add
add
jge
xchg
retf
loopne
shl
lds
mov
mov
ja
lock
mov
fdiv
adc
ss
fmul
jmp
into
fidivr
inc
mov
outs
jne
aam
mov
xchg
mov
sbb
mov
or
(bad)
sub
shr
pop
sti
xor
outs
and
retf
into
jle
xchg
(bad)
fwait
ror
push
pop
mov
ins
mov
pop
or
xchg
push
pop
scas
outs
pop
mov
cmp
pop
pushf
jo
xchg
cli
adc
cmp
jl
(bad)
or
sbb
inc
push
push
pop
outs
pop
mov
push
mov
push
cwde
pop
or
or
stos
mov
lea
jae
inc
cs
jne
ja
cmps
ror
pop
jle
mov
mov
or
sub
push
pushf
cmp
fisttp
dec
outs
cmps
stos
fidivr
add
jg
sub
movs
cli
mov
push
test
cmp
push
mov
loopne
enter
or
arpl
add
mov
outs
rcr
push
xor
hlt
test
test
mov
adc
cwde
push
mov
ins
xor
mov
xor
add
sub
daa
std
rol
retf
add
mov
cmp
cmp
and
loop
jp
xchg
cwde
fnsave
push
aas
neg
int3
mov
and
pop
shl
pushf
pushf
aas
loope
lods
imul
pop
add
das
mov
lds
lock
sbb
pop
cmp
adc
push
shl
push
js
jmp
retf
in
push
mov
adc
cmps
andps
jne
add
mov
jecxz
jl
or
jbe
mov
push
lds
push
push
pop
test
cmp
jne
inc
movs
movs
sub
sub
xor
sub
rol
sbb
dec
shr
xchg
sbb
mov
xchg
iret
into
mov
xor
loopne
loop
movs
adc
iret
xor
rol
cmp
ja
xor
xchg
cmp
(bad)
loope
sub
add
add
bts
(bad)
imul
or
mov
pop
nop
test
je
xchg
lock
test
pop
lock
jl
inc
mov
loope
push
mov
push
or
(bad)
iret
adc
mov
sbb
outs
aam
or
not
mov
les
fsubr
sar
push
or
ss
test
test
jbe
(bad)
aam
sub
xor
add
mov
ins
test
pop
push
and
jecxz
lds
sbb
push
push
rol
push
sbb
pop
pop
sub
add
push
cwde
push
out
es
add
sub
adc
push
adc
je
imul
add
ins
pop
jmp
push
mov
sar
jmp
inc
mov
inc
mov
ret
je
jmp
sub
in
pop
mov
test
push
ret
das
das
mov
mov
sub
addr16
sub
hlt
sbb
adc
mov
add
bound
add
and
js
jae
cmp
xor
pop
xchg
dec
aas
adc
(bad)
sbb
cmp
xchg
sub
push
sar
sti
adc
rol
and
ret
push
dec
adc
test
pop
adc
push
and
sbb
lock
ins
mov
in
jmp
jne
add
adc
mov
jl
mov
outs
pop
cmp
out
jge
cmp
dec
lock
call
fdivr
mov
test
pop
imul
xchg
repz
je
mov
call
sbb
je
xor
and
les
mov
ins
sub
in
jmp
loopne
ret
jbe
dec
sbb
shl
lds
add
sub
(bad)
mov
xchg
push
mov
add
jle
xchg
fld
sub
jnp
cmp
mov
push
dec
das
lods
sbb
and
push
or
xchg
inc
fisttp
inc
mov
xor
add
dec
dec
pop
cwde
adc
jecxz
cmp
(bad)
enter
and
jge
sbb
addr16
inc
dec
mov
and
scas
mov
add
jno
ds
in
push
sahf
adc
push
pop
mov
mov
test
mov
clc
jg
mov
les
mov
xchg
pop
add
mov
lods
xchg
pop
xor
xchg
(bad)
jmp
jge
lock
sub
mov
dec
in
adc
cmc
dec
pop
loopne
ror
inc
leave
pop
sub
fwait
dec
loop
adc
pop
cdq
mov
in
and
add
and
fistp
pop
out
sub
cmp
jge
icebp
inc
mov
cmp
inc
add
das
pop
pop
adc
xor
xchg
shl
(bad)
movs
lahf
or
bound
es
sbb
pop
into
jns
dec
(bad)
sub
push
adc
sbb
stc
mov
xlat
pop
out
rcl
sbb
lock
push
retf
jge
stos
inc
and
adc
jp
dec
inc
cmp
leave
daa
sub
cmp
dec
xchg
xor
add
push
add
cmc
adc
pushf
inc
add
ins
push
or
or
add
(bad)
xor
add
add
lea
lea
add
sbb
mov
scas
dec
jo
mov
shr
xchg
or
or
outs
test
movs
sub
xchg
aad
and
test
sub
cwde
ror
jne
and
pushf
pop
inc
loopne
cmps
add
ret
iret
loopne
push
add
sahf
js
fdivr
xor
ret
push
or
push
(bad)
sub
nop
and
adc
jecxz
fisttp
or
cmp
fild
int3
push
inc
pop
retf
aaa
inc
mov
push
xor
or
ret
mov
ins
es
and
and
add
jmp
sti
jge
popa
leave
pusha
adc
add
(bad)
push
or
bound
and
push
add
sub
sahf
sbb
les
inc
xlat
cmp
mov
xor
jp
and
add
mov
sahf
ret
adc
push
pop
sbb
es
clc
xchg
sbb
inc
and
xlat
dec
test
ins
test
(bad)
inc
pushf
dec
jno
mov
imul
in
inc
and
inc
loope
xchg
enter
pop
push
loopne
jl
xor
pusha
(bad)
add
inc
pop
pusha
and
xchg
(bad)
mov
movs
or
(bad)
mov
cdq
sub
and
call
test
sub
dec
xchg
push
and
sub
test
adc
iret
pop
cmp
adc
sub
iret
loopne
add
sub
sbb
or
iret
in
test
add
add
jmp
xchg
in
sbb
mov
jge
in
mov
lea
pop
xchg
ret
cmps
xchg
lock
pop
add
shr
jo
aam
sbb
ret
outs
mov
mov
add
aam
ss
fwait
add
test
inc
into
mov
add
jg
adc
mov
frstor
dec
cmc
dec
scas
cmp
xor
add
lock
mov
cmp
add
frstor
mov
jge
mov
ret
sbb
sub
add
push
rol
inc
pop
mov
movs
jge
or
inc
rcr
dec
ret
add
sbb
mov
jo
neg
mov
add
les
xor
sbb
xchg
mov
retf
(bad)
ds
pop
push
add
cmp
fadd
std
mov
mov
or
test
sub
icebp
or
push
lods
adc
int3
xor
or
test
(bad)
push
xor
sar
les
sbb
cmp
and
dec
loope
jge
aas
or
jnp
xor
adc
sub
enter
push
sub
sub
nop
push
xor
push
jo
xlat
or
std
add
stos
cmp
cs
sub
push
jecxz
pop
mov
pop
ret
(bad)
add
sti
xchg
add
mov
add
movsx
add
movs
pusha
fsubr
(bad)
sbb
mov
xchg
loopne
add
movs
sbb
cld
fcomp
jno
test
aam
jne
(bad)
call
fst
add
jg
adc
fcomp
mov
clc
ror
xor
adc
mov
mov
push
push
and
mov
rol
mov
in
sbb
adc
shl
jle
sbb
imul
lock
gs
lahf
fs
add
cmp
add
imul
shl
clc
jbe
mov
push
push
mov
xor
ss
xchg
jle
hlt
lahf
mov
adc
push
or
call
jbe
or
sub
sbb
in
add
pop
int3
pop
cmp
es
or
imul
mov
outs
and
in
sbb
ins
mov
call
pop
mov
dec
cld
mov
shl
test
xor
pop
cld
ss
or
push
lea
lea
es
push
fild
or
or
or
inc
int
pop
adc
or
fcomp
je
lea
ret
sub
adc
push
test
dec
aad
add
shl
inc
push
inc
mov
mov
push
mov
pushf
mov
mov
call
cwde
data16
mov
rol
xor
xor
sbb
or
mov
and
sub
rol
add
xor
add
inc
jbe
pop
and
mov
jg
(bad)
aam
dec
in
mov
xor
sbb
mov
mov
loopne
aas
or
pusha
nop
test
fsubr
sbb
push
add
(bad)
push
int3
adc
cmp
add
imul
jnp
test
xchg
into
ins
ret
cmp
test
sbb
les
or
in
push
call
lock
fs
addr16
xchg
mov
clc
ret
pop
scas
shl
add
test
jb
mov
xchg
cli
jmp
mov
cld
je
cmc
jne
out
and
loopne
mov
jne
out
frstor
pusha
jle
stc
in
or
in
out
inc
push
sub
or
test
das
fs
and
xchg
pusha
cmp
push
and
and
(bad)
(bad)
cmp
in
xchg
mov
in
mov
sbb
cmp
adc
inc
jbe
loopne
jmp
adc
push
adc
cmp
enter
pushfw
push
add
dec
sub
xor
mov
xor
loop
push
test
imul
mov
enter
sub
xor
call
sub
and
or
leave
js
jno
xor
call
pushf
stos
mov
lock
xchg
lods
loopne
push
push
cld
mov
add
fcom
mov
mov
xor
inc
imul
je
lea
mov
mov
ret
push
fmul
(bad)
fbstp
iret
cwde
lock
jl
sub
dec
fist
jmp
cdq
add
fdiv
js
mov
cmp
loope
aas
(bad)
jne
or
xchg
enter
fsub
ret
fcomi
lahf
push
cmps
xchg
call
inc
mov
mov
push
out
test
mov
test
sbb
mov
es
adc
add
dec
mov
loope
adc
cmp
or
call
test
ror
push
and
lock
cmp
mov
enter
push
cmp
test
ins
outs
icebp
jg
dec
je
(bad)
int3
sbb
jnp
mov
popa
pushf
js
retf
ja
or
adc
dec
push
ja
inc
je
int3
push
jl
mov
ret
cmps
popf
loop
aam
mov
cs
jne
daa
inc
or
or
fwait
mov
rcl
inc
push
adc
xor
call
mov
push
jns
or
dec
mov
in
push
cs
dec
cs
dec
das
pop
sub
dec
pushf
leave
adc
arpl
or
jg
scas
lds
fidivr
mov
jge
xor
cmp
jg
xchg
dec
jg
ins
cmp
je
mov
nop
jo
ret
or
lods
adc
call
(bad)
push
xchg
ds
fstp
outs
mov
cmp
xchg
push
daa
call
inc
outs
xchg
daa
and
icebp
loopne
adc
mov
stos
and
pop
test
push
cld
clc
test
cmp
push
xor
aas
retf
inc
pop
xchg
gs
and
aad
retf
inc
push
inc
lds
inc
dec
jne
inc
and
pop
imul
jbe
inc
add
push
xlat
(bad)
loop
es
call
inc
(bad)
push
jl
jmp
mov
mov
dec
test
jl
int3
push
outs
loopne
xor
mov
push
inc
dec
jbe
fimul
cmps
shl
dec
add
shl
scas
scas
cli
mov
inc
xor
mov
mov
sbb
push
cmp
xchg
bound
push
sete
inc
call
nop
sub
enter
push
mov
and
push
xor
xor
jo
xchg
add
or
out
repz
rol
lea
xor
or
fst
jns
push
mov
mov
test
inc
mov
inc
pop
cmp
push
inc
xor
out
jb
and
call
dec
fcomp
and
sbb
adc
pushf
adc
xchg
pop
jmp
test
jne
add
shr
ss
mov
in
sbb
sbb
mov
jo
xor
dec
cmps
sbb
hlt
pusha
mov
es
sub
test
into
adc
ret
sbb
outs
cmp
jmp
xor
sbb
mov
adc
scas
fadd
adc
add
ss
inc
mov
jecxz
xchg
sti
xchg
sbb
jge
shl
pop
es
test
shl
xlat
and
add
dec
mov
data16
sbb
loopne
lods
psubusb
add
add
loope
cdq
add
sbb
mov
xor
es
sahf
adc
sbb
push
in
pop
je
cmp
(bad)
mov
mov
jbe
test
mov
js
push
adc
outs
mov
push
mov
(bad)
mov
or
mov
test
sar
inc
hlt
scas
leave
out
xchg
or
sub
adc
sub
js
push
xor
inc
mov
mov
fnstsw
and
shld
aam
xlat
mov
xor
jl
test
lock
add
fld
nop
jmp
cmp
add
cmp
into
mov
xor
ja
inc
xlat
not
shl
push
dec
dec
je
mov
movs
add
or
(bad)
sub
push
push
pop
xor
mov
(bad)
clc
fcomp
or
push
xchg
(bad)
mov
lods
push
daa
mov
mov
(bad)
dec
push
jo
enter
push
pop
jno
sbb
pusha
clc
cli
int
loope
js
pusha
pop
fs
lea
mov
addr16
adc
int
scas
je
xchg
gs
or
pop
test
pusha
jbe
outs
jle
xchg
movzx
dec
jl
rcl
cmp
mov
sbb
scas
jecxz
inc
jle
pop
adc
mov
fdivr
lock
loope
pop
xor
std
scas
push
sub
xlat
xlat
cmc
pop
lea
ret
add
inc
leave
inc
xor
mov
xor
cs
mov
mov
or
xchg
retf
mov
pop
and
(bad)
clc
and
mov
pusha
adc
push
adc
xchg
out
adc
mov
jge
push
pop
inc
push
shr
pusha
push
mov
rcl
jmp
dec
or
xchg
jno
mov
push
pushf
sbb
add
clc
mov
out
mov
sbb
mov
arpl
jle
jne
pop
imul
movs
or
mov
daa
hlt
dec
mov
lock
ss
jg
mov
nop
loope
and
ret
adc
mov
add
idiv
das
push
push
or
push
add
adc
push
or
xor
imul
push
push
and
call
or
jbe
add
enter
outs
jne
jo
popa
je
int3
cmc
sti
gs
add
xor
inc
outs
jl
and
jae
jmp
add
xlat
ins
sti
push
gs
data16
and
push
xchg
add
sbb
push
add
mov
jae
pop
add
push
arpl
(bad)
sar
fcomi
ret
push
fdivr
je
pop
fsubr
or
sub
pop
push
cwde
inc
(bad)
clc
jge
je
mov
and
icebp
push
jl
lahf
test
adc
adc
add
dec
jne
or
in
call
jl
mov
rcl
scas
jmp
mov
pop
das
adc
add
pushf
xor
enter
xchg
ret
je
xor
ins
jo
mov
xchg
dec
lods
and
out
nop
ss
shl
adc
fst
sbb
and
dec
adc
xor
sub
or
sbb
lea
xchg
mov
adc
imul
mov
mov
cmp
add
mov
mov
pop
cmp
fucom
xor
loope
mov
sub
adc
xor
push
js
(bad)
jle
mov
cmp
inc
jo
ins
mov
add
pcmpeqw
add
add
dec
lods
mov
add
test
outs
add
adc
add
add
fstp
jb
mov
xchg
inc
jmp
dec
imul
jmp
pop
rcl
push
outs
imul
je
sbb
push
mov
sub
ins
mov
push
enter
js
dec
dec
push
cmp
dec
daa
fsub
xchg
sbb
fcomp
call
cmp
adc
dec
int
call
mov
add
enter
pop
es
add
xchg
xchg
shr
sub
fistp
mov
rol
loopne
cld
pop
or
xor
jmp
and
sbb
movs
ror
push
not
mov
test
mov
sbb
jl
movs
mov
dec
ja
hlt
or
aam
push
stos
jo
and
js
lea
jl
pusha
inc
es
sub
xor
jl
or
sbb
mov
adc
dec
cmp
add
mov
dec
sti
sbb
cmp
cmp
test
lea
aad
mov
dec
les
rcr
xor
dec
dec
adc
inc
clc
inc
xchg
push
xchg
sub
loop
adc
inc
outs
lods
mov
or
push
movs
xor
dec
sti
rol
pop
pusha
(bad)
out
into
push
into
jl
or
pop
mov
(bad)
push
call
push
lds
inc
test
cmp
ds
jl
push
shl
out
aas
push
call
adc
sti
dec
pop
gs
(bad)
es
push
lea
cdq
cmps
int
fmul
scas
push
stos
sahf
test
je
(bad)
cmp
jb
push
add
jbe
add
pusha
jnp
inc
jmp
fidivr
pop
gs
xlat
mov
aam
je
mov
sub
add
cmp
dec
cmp
jmp
push
es
pop
mov
out
push
add
xor
sti
xor
adc
(bad)
dec
cmp
cmovae
mov
mov
dec
shl
dec
add
pop
sub
xchg
fcom
das
movs
fs
neg
jle
fdivr
pop
stc
cmp
shl
fdiv
adc
pop
sub
loopne
rcr
dec
jp
mov
jne
das
mov
sub
shl
lock
data16
lahf
imul
retf
add
neg
dec
add
mov
js
shl
call
mov
xchg
push
outs
movs
bound
(bad)
ret
push
mov
adc
inc
sub
out
lods
into
jnp
fs
pusha
pop
icebp
pusha
enter
mov
out
push
mov
push
ja
push
inc
ins
xor
xor
mov
fsubr
pushf
arpl
cmp
add
add
add
or
pop
sbb
sub
aas
pop
push
push
cld
clts
push
retf
cmps
fmul
and
xor
add
jo
daa
push
pop
xchg
cmp
mov
push
add
push
enter
rcr
push
pusha
dec
out
push
in
add
mov
js
(bad)
jbe
mov
jo
cwde
lock
push
call
push
sbb
mov
push
xor
sub
jns
shl
rcr
push
jo
iret
test
push
and
into
(bad)
pop
shr
mov
or
cld
mov
out
jecxz
(bad)
fidiv
test
std
cmp
xor
cmp
xor
shr
sbb
mov
pop
dec
mov
cmp
daa
xor
dec
inc
cwde
jecxz
xor
bound
mov
pop
adc
push
int
(bad)
pop
pushf
sbb
adc
adc
inc
push
push
cmp
jge
cmps
inc
mov
mov
mov
cdq
outs
repz
dec
inc
cmc
inc
xor
retf
rol
sub
retf
dec
test
jg
push
or
push
jmp
push
mov
add
lock
or
or
shl
push
popa
adc
(bad)
fdiv
ja
and
dec
mov
and
mov
add
jecxz
xchg
adc
inc
and
icebp
pop
sbb
sub
jl
inc
data16
mov
mov
sub
mov
inc
sar
ficomp
test
mov
pop
fbld
test
cmp
mov
(bad)
mov
test
call
sub
push
sbb
add
xchg
movs
aad
dec
mov
sbb
aaa
mov
aad
adc
jmp
pop
adc
jne
out
dec
dec
mov
jb
push
outs
scas
rcl
shr
push
inc
inc
cmp
jne
xchg
mov
fwait
mov
jb
pop
ror
cmova
lea
dec
mov
or
xlat
push
test
jmp
fdiv
pusha
jae
mov
mov
loopne
push
and
cmp
fs
mov
mov
mov
dec
mov
rcr
sub
mov
xor
es
inc
or
inc
dec
push
lock
sahf
iret
leave
or
cmp
inc
mov
inc
push
dec
push
xlat
sar
jmp
shl
or
sahf
cmp
xchg
movs
ror
jb
dec
sub
or
retf
pop
call
lahf
mov
and
test
lods
xor
mov
add
push
add
inc
inc
mov
pop
add
ror
push
inc
cwde
add
sbb
scas
xchg
xor
data16
and
dec
je
loopne
std
mov
xchg
jb
and
sbb
(bad)
ins
lods
mov
jp
or
push
lods
movzx
inc
clc
push
pop
cmp
je
sub
adc
add
cmp
sahf
push
sub
test
out
daa
pop
sbb
xor
and
mov
ins
and
stos
adc
xor
cmp
mov
or
sub
pushf
(bad)
dec
(bad)
stos
hlt
push
mov
push
or
hlt
mov
xchg
rcr
pop
xchg
pop
pop
call
ja
mov
pop
lea
mov
stos
push
pusha
xchg
imul
imul
lods
cmp
lahf
retf
lods
push
jmp
add
add
pushf
jmp
sub
cmp
fnstenv
and
mov
inc
mov
mov
ror
pop
lock
arpl
dec
(bad)
stos
push
clc
xor
movs
mov
mov
and
pop
jmp
test
mov
mov
adc
enter
sbb
mov
cmp
add
pop
sbb
mov
mov
cmp
push
push
std
mov
add
adc
and
and
dec
out
icebp
and
adc
pop
and
clc
sub
sbb
and
and
imul
add
inc
and
jle
push
cld
push
or
outs
imul
cwde
fcom
or
sbb
add
pop
lock
outs
add
add
add
arpl
gs
mov
push
jmp
outs
or
add
aas
pushf
pop
xchg
adc
add
fcom
test
fadd
outs
or
test
add
xor
mov
add
fucom
icebp
pop
inc
push
sub
test
mov
push
rcl
loope
adc
lods
xor
shl
cmp
fsub
mov
jg
xchg
add
dec
push
sbb
push
mov
mov
push
push
adc
in
(bad)
push
or
ds
pop
in
mov
dec
dec
add
xchg
rol
dec
xlat
ins
out
push
mov
xchg
add
pop
add
in
mov
je
lock
inc
jo
inc
sub
add
fisubr
jno
popa
retf
cwde
adc
dec
out
cmp
ja
sub
ret
clc
mov
and
rcl
aam
sub
mov
js
pushf
dec
retf
inc
dec
sbb
sub
inc
add
je
pop
cmp
sbb
imul
sub
dec
cs
mov
sbb
cmps
and
cmps
adc
xor
and
xchg
dec
test
out
cmp
push
cmp
add
data16
add
xchg
cwde
cmp
jp
inc
ja
adc
jo
push
bound
add
push
push
lds
data16
getsec
je
xor
cmp
xlat
pop
push
pop
outs
test
sbb
sbb
adc
shr
add
mov
push
popf
add
les
and
and
inc
and
and
dec
lods
ret
pop
lods
ret
mov
add
jle
nop
hlt
dec
add
loope
cmp
xchg
or
in
sub
adc
icebp
add
lea
cs
push
mov
mov
pop
fcomp
inc
and
or
pop
dec
pop
bound
push
add
out
sub
js
imul
adc
or
inc
cli
je
and
push
cli
test
mov
test
cmp
cli
add
cli
sub
jge
mov
mov
cmp
lock
xor
cs
test
popa
enter
es
je
call
sub
test
sub
pusha
jl
dec
sbb
or
cmp
jae
mov
add
and
rcr
in
jecxz
sbb
fisub
or
push
nop
loope
add
cmps
xchg
(bad)
(bad)
mov
bound
xchg
in
mov
data16
hlt
(bad)
fcompp
jmp
jbe
mov
aas
fwait
leave
xchg
loope
add
cli
bound
push
shl
adc
push
jo
mov
loope
sbb
jmp
leave
out
sbb
inc
rcr
je
push
mov
push
or
mov
mov
shr
lods
dec
xor
mov
test
push
or
jnp
and
je
adc
or
xlat
lods
mov
inc
aam
push
or
or
and
cmp
xchg
out
or
jle
add
idiv
xor
pop
adc
pop
pusha
retf
in
retf
rcl
and
jmp
mov
je
mov
push
push
test
and
jecxz
cli
cli
add
rol
ret
cmp
dec
pop
mov
mov
loopne
lea
add
mov
ret
or
ins
scas
and
mov
aaa
or
loope
push
les
inc
clc
cwde
ret
sbb
cwde
add
std
push
rcl
loop
lea
call
cmp
call
inc
hlt
or
clc
jns
dec
push
push
(bad)
shl
cmp
push
into
fwait
scas
call
data16
mov
fisttp
mov
mov
test
or
loopne
add
ret
add
cli
es
lods
fnstenv
daa
or
pusha
daa
ret
dec
xchg
in
or
sbb
fdiv
scas
cmp
jge
cmp
sub
push
pop
cmp
scas
pop
push
mov
adc
pop
test
sub
je
dec
sbb
pusha
mov
loopne
jno
loop
inc
pusha
add
jbe
js
sahf
inc
or
pusha
xor
or
pusha
mov
lock
cmp
je
mov
mov
call
add
addr16
push
inc
inc
adc
jmp
pop
inc
jbe
js
movs
int3
cmc
push
jb
repnz
cmps
ror
jbe
xchg
lods
adc
stos
pop
jbe
outs
mov
test
test
in
dec
loopne
loop
mov
jae
lea
cwde
or
aam
call
inc
jle
ret
xchg
mov
pop
push
xchg
retf
pop
stos
jg
cmp
mov
xor
imul
xchg
dec
mov
dec
adc
push
and
adc
push
cmp
jne
ss
mov
xchg
pop
jo
rcl
or
add
push
push
fiadd
pop
fcom
test
xchg
sbb
xchg
iret
or
adc
daa
ins
les
dec
adc
or
xor
push
cdq
cmp
push
cwde
ror
and
jne
mov
lods
mov
push
xchg
call
adc
ins
aam
or
adc
xor
pop
lock
sbb
ins
cmp
or
xchg
xor
cmp
daa
sub
and
push
xor
jle
lahf
pop
mov
push
mov
in
adc
seto
and
inc
(bad)
out
push
fsubr
outs
xor
mov
and
push
pop
popf
je
jl
lock
push
adc
cmp
shl
dec
xchg
scas
inc
sub
or
or
adc
hlt
jl
dec
or
adc
sbb
push
jecxz
add
jp
repnz
sbb
dec
or
and
mov
js
(bad)
(bad)
js
and
add
push
or
in
bound
out
mov
stos
jl
push
call
(bad)
jae
jb
bound
mov
and
xlat
mov
not
cwde
jmp
inc
mov
(bad)
mov
(bad)
jmp
sbb
rcl
lock
adc
xor
add
cmp
(bad)
mov
add
inc
dec
jne
dec
cmp
rcl
pop
das
jb
cmp
push
adc
and
or
add
shl
or
in
jmp
push
add
mov
push
bound
loopne
sbb
add
ret
aaa
iret
repz
push
or
cmp
mov
and
js
paddsb
jne
rcl
sar
sar
jne
xor
test
mov
inc
mov
xchg
adc
dec
test
adc
(bad)
add
cmc
cmp
(bad)
xchg
pop
mov
pop
loop
xor
test
leave
ror
ret
cmp
add
mov
or
add
dec
jle
(bad)
xor
or
sbb
and
add
jne
cwde
push
jno
dec
call
imul
sbb
lds
pop
ds
push
and
neg
inc
inc
or
sbb
xchg
or
xor
sub
dec
cwde
mov
ins
mov
not
test
sub
push
sbb
push
shl
dec
icebp
add
ins
add
jg
mov
sbb
cwde
inc
div
arpl
xchg
pop
loope
inc
pop
push
sbb
js
adc
jl
jge
cwde
add
ja
adc
loopne
adc
test
cld
ret
mov
add
dec
dec
je
dec
inc
jne
xor
xlat
call
pusha
add
xchg
movs
adc
setg
ret
inc
pop
(bad)
mov
mov
data16
dec
mov
test
push
mov
or
adc
add
xadd
xchg
aam
push
inc
fstp
xchg
pop
mov
add
jmp
add
or
inc
clc
jmp
inc
pop
adc
jl
inc
ja
ret
inc
dec
jne
sub
out
or
dec
or
int
sbb
or
dec
cmp
mov
xchg
or
sub
dec
test
lock
ret
add
movs
hlt
test
out
add
adc
cwde
rcr
sbb
mov
aad
cmp
add
and
pop
js
add
call
call
add
aad
lods
inc
movs
xchg
sbb
loopne
pop
or
scas
lods
aam
add
data16
jmp
adc
cmp
sbb
cdq
inc
sub
dec
repz
push
shl
sub
ret
add
jne
fs
dec
pusha
xor
xor
daa
jg
add
test
jl
lods
or
sub
add
div
into
cli
mov
aam
je
sub
push
sub
dec
lahf
pop
ins
add
es
scas
xchg
xor
nop
adc
sbb
sub
sub
dec
enter
nop
or
(bad)
fcmovu
icebp
add
cmp
sub
(bad)
pop
rol
out
adc
adc
cmp
pop
sub
adc
mov
sub
je
inc
jno
das
loopne
jg
sub
js
mov
add
in
or
push
add
fadd
in
cmp
mov
pusha
(bad)
mov
add
inc
push
adc
les
jl
jl
push
mov
add
inc
jle
cmp
push
call
adc
hlt
or
adc
pop
cmp
loop
pushf
or
dec
fs
cld
add
cmp
jmp
test
and
sbb
cdq
push
sbb
cmp
adc
push
fimul
and
sub
es
cld
pop
mov
aaa
push
and
mov
das
mov
rol
sub
cmp
push
mov
push
jmp
inc
or
mov
jge
loopne
inc
std
int3
mov
adc
xor
je
mov
sub
loop
mov
js
test
sbb
dec
enter
pop
jbe
and
and
in
(bad)
and
add
movs
in
sbb
in
popf
and
adc
mov
add
sbb
(bad)
int3
or
xchg
xchg
(bad)
pop
mov
adc
cmp
nop
test
xor
xchg
outs
and
sbb
lds
xchg
sbb
inc
xchg
mov
aam
adc
aam
dec
sbb
clc
dec
add
xchg
int
fstp
aaa
mov
xor
push
out
out
or
ja
shl
test
adc
mov
adc
or
pop
repnz
push
push
and
add
shl
loopne
adc
push
or
inc
sbb
jne
in
ficom
je
mov
fidiv
adc
pop
mov
xor
loopne
jnp
xor
clc
adc
add
rcr
adc
xchg
loope
out
jbe
ins
xor
dec
push
cmp
loope
sar
shl
cmps
ins
(bad)
xlat
or
loopne
add
and
jo
sub
(bad)
and
(bad)
sbb
lds
mov
push
jecxz
movs
mov
add
push
enter
adc
sub
push
jne
push
push
ins
mov
adc
lds
xorps
(bad)
aaa
adc
cwde
dec
jo
or
sub
cmp
in
mov
mov
mov
cmp
mov
nop
cwde
adc
or
outs
dec
mov
(bad)
mov
cmp
adc
adc
or
imul
fistp
mov
dec
xchg
jo
adc
mov
add
add
xchg
pop
cmp
(bad)
adc
movs
ror
add
fcomp
lea
pop
hlt
and
les
loop
jmp
lahf
cs
push
sahf
inc
loopne
jle
or
cdq
jns
movs
cwde
sub
sbb
addps
(bad)
test
mov
jmp
pop
sbb
pop
daa
jo
loopne
push
ret
fbstp
stc
gs
stos
inc
xor
or
mov
mov
stos
cmps
dec
movs
outs
or
adc
movs
shr
lea
fiadd
fadd
push
jo
fisttp
jo
or
xchg
shl
or
push
icebp
repz
mov
push
push
movs
imul
inc
add
ja
mov
mov
push
dec
cdq
add
push
pop
or
inc
js
inc
xor
pop
jbe
cmps
inc
jb
out
mov
inc
xor
sbb
or
adc
xor
sub
lahf
test
bound
dec
push
jge
adc
fdivr
ss
or
(bad)
and
test
sbb
out
lea
or
cli
popa
cmps
(bad)
push
jmp
mov
outs
je
adc
jg
ds
dec
icebp
adc
movs
add
repnz
je
bound
popa
mov
push
and
mov
jl
dec
mov
xor
sbb
adc
sub
inc
inc
dec
push
je
ss
pop
inc
dec
adc
aaa
lock
dec
es
js
push
xchg
mov
mov
test
pop
and
inc
add
out
lock
(bad)
jnp
mov
or
iret
push
jl
push
add
jb
or
fbstp
mov
inc
dec
imul
es
fidivr
dec
sbb
ins
cmp
jle
cmp
loop
push
or
mov
call
jmp
lds
popf
es
in
scas
cli
jmp
(bad)
or
clc
stos
xlat
inc
addr16
cld
sub
xchg
retf
xor
xor
aas
mov
push
mov
jecxz
xchg
fistp
sbb
pop
inc
or
jbe
dec
mov
fdivr
pop
push
pop
or
mov
aas
js
pop
mov
mov
cmp
enter
jl
push
je
(bad)
dec
push
jmp
cmp
es
std
sub
dec
jl
inc
pop
in
stos
je
ins
sti
pop
push
adc
xchg
jo
xchg
jge
out
inc
popa
(bad)
fcom
clc
add
inc
add
or
jge
test
jl
pop
cld
sbb
jo
add
jne
jne
xor
mov
lods
adc
or
jg
jno
dec
fnsave
pop
iret
sbb
les
adc
aam
pop
add
and
dec
push
push
iret
enter
and
and
and
das
inc
aam
addr16
das
inc
push
mov
cmp
cmp
sbb
je
cmp
xor
xchg
iret
enter
es
xor
fstp
push
lods
xchg
pop
ja
mov
and
ja
push
push
ja
push
loope
mov
out
mov
add
xchg
(bad)
loope
add
push
test
or
and
out
and
test
cdq
push
cmp
inc
cmp
cld
sub
adc
shl
loopne
adc
in
ror
push
fnstenv
inc
or
dec
add
jge
add
adc
cmp
mov
push
push
fsub
jnp
push
or
push
push
mov
je
dec
push
movs
push
movs
pop
sar
adc
jl
mov
push
mov
jnp
out
mov
scas
cwde
mov
int3
mov
pusha
ds
mov
jb
mov
cs
add
jecxz
retf
pop
shr
ins
paddb
aad
fneni(8087
adc
or
push
add
add
(bad)
jg
push
popa
jae
bound
dec
popa
outs
fs
gs
inc
ss
inc
outs
push
shl
mov
push
outs
ja
jb
jbe
gs
gs
gs
cmps
clc
ud0
or
add
xor
gs
pop
add
jb
adc
ins
bound
and
add
int3
adc
push
popa
ins
sti
mov
pop
dec
imul
das
addr16
add
and
jle
in
push
je
outs
outs
dec
outs
je
data16
add
jne
add
dec
je
ins
dec
inc
test
cmp
add
push
jo
ins
jns
jmp
scas
sub
imul
ins
imul
or
add
push
imul
lahf
jmp
and
inc
arpl
or
push
pop
push
pop
inc
mov
push
or
cs
push
push
jns
ins
cs
cs
inc
outs
loopne
into
or
repz
sar
jae
lss
out
pavgb
add
mov
je
ss
push
cwde
mov
pop
push
es
aam
and
xchg
mov
out
pop
lods
fisttp
mov
or
mov
jb
xor
cwde
xor
sbb
pusha
add
inc
nop
shr
push
cmp
out
sbb
inc
xchg
rol
push
sbb
inc
cwde
add
fadd
dec
push
jbe
xor
sbb
call
xchg
inc
inc
sbb
sbb
push
sbb
cmp
ins
or
push
or
xor
xor
cs
adc
dec
and
outs
sub
scas
dec
push
or
inc
adc
es
add
push
dec
or
push
pop
pop
pop
add
pop
push
sti
cmp
(bad)
fist
jo
mov
adc
or
adc
bound
sbb
sub
mov
(bad)
sbb
sbb
push
mov
push
cmp
addr16
sbb
xchg
pushw
scas
add
cvtps2pi
adc
js
dec
cmps
inc
push
xchg
add
push
push
arpl
ins
ins
inc
mov
test
shl
sub
bound
cmp
je
mov
sbb
scas
arpl
push
arpl
movs
jge
ins
xor
adc
mov
add
add
jg
ror
cmp
aas
push
je
rcl
mov
clc
sar
int3
or
push
mov
les
lods
adc
je
jae
je
jb
arpl
sti
sbb
fnstcw
add
jp
sti
test
jmp
arpl
dec
fsub
fadd
test
(bad)
or
mov
pop
dec
mov
jbe
xchg
or
jp
push
ror
mov
inc
rol
shl
add
add
es
push
or
jb
ins
xor
sub
push
neg
fimul
push
push
inc
push
popa
xor
adc
add
les
outs
jae
adc
push
fcom
push
inc
cmp
lods
inc
mov
arpl
add
fcmovb
add
push
aaa
icebp
sbb
dec
ds
(bad)
push
addr16
imul
bound
xlat
adc
(bad)
dec
sub
(bad)
gs
adc
cmp
sbb
rol
and
and
jl
out
or
push
pop
mov
or
sub
ins
and
mov
or
or
es
xor
pop
scas
(bad)
jne
inc
cmp
and
cld
pop
dec
sub
jbe
cmp
ret
ss
dec
lods
daa
icebp
adc
aas
js
inc
push
jo
in
dec
gs
mov
dec
shr
outs
xor
(bad)
fisttp
xor
push
stos
jo
pop
inc
xor
std
push
inc
clc
imul
not
(bad)
jno
scas
and
or
mov
push
outs
jne
arpl
scas
lock
add
add
push
jecxz
imul
dec
or
jl
jae
jne
bound
lods
dec
test
dec
popa
arpl
and
mul
(bad)
mov
jnp
sub
dec
add
test
clc
dec
mov
add
add
(bad)
rcr
loop
push
call
sub
jae
lea
neg
aas
and
mov
es
rsm
or
call
sub
or
ret
push
inc
test
inc
out
mov
pop
xchg
inc
rcl
bound
pop
push
mov
xor
push
jnp
call
in
pop
je
and
or
jnp
xchg
mov
aas
or
arpl
inc
push
mov
enter
add
lea
cli
pop
add
mov
push
or
mov
cmps
mov
in
adc
xor
sbb
sbb
nop
mov
retf
imul
enter
and
adc
(bad)
inc
push
lock
jle
cmp
or
ds
ss
mov
ins
adc
push
mov
std
call
in
push
mov
push
loopne
dec
rcl
xchg
sbb
enter
pop
shl
xor
push
sub
data16
mov
ins
push
cmp
mov
or
mov
jle
xchg
or
mov
fadd
add
mov
fild
nop
add
push
cwde
(bad)
push
inc
pop
push
or
xor
in
push
scas
loopne
push
fcmovu
mov
push
outs
pop
and
jno
mov
xor
(bad)
mov
les
jle
push
pusha
stc
shr
push
inc
mov
mov
ret
xchg
xchg
imul
cmp
push
int3
sub
dec
push
loopne
fidiv
push
in
and
add
or
push
push
and
inc
std
push
fsub
ss
mov
fild
mov
push
js
das
loop
outs
sub
or
inc
inc
pushf
outs
xchg
call
xlat
movs
js
xchg
push
or
push
test
mov
pop
sti
and
mov
outs
cwde
inc
call
ret
mov
adc
and
fs
pop
push
dec
in
sub
push
loopne
psraw
lock
inc
ss
adc
adc
mov
out
jl
pop
(bad)
ins
jle
push
push
(bad)
push
dec
inc
cs
(bad)
adc
pop
xor
push
or
add
push
inc
nop
call
test
and
pop
cwde
loope
push
inc
dec
ja
pop
jmp
cmp
pop
inc
add
add
pop
shr
adc
cmp
popa
rcr
in
out
das
mov
cmovne
jne
add
or
sbb
ja
shl
outs
jmp
or
rol
push
rol
pop
sub
imul
inc
xchg
add
in
xchg
xchg
pop
xchg
mov
dec
outs
inc
and
jae
jae
push
call
mov
pop
pusha
push
pop
pop
adc
mov
lds
mov
adc
or
pusha
jo
mov
xchg
add
inc
jle
test
ret
rol
sub
popa
lods
ror
push
mov
push
fs
push
sar
rcr
push
bound
pop
cmp
push
cmp
or
jp
lds
cmps
popa
ins
outs
addr16
not
adc
sbb
mov
fisttp
xlat
cld
push
out
or
pop
mov
loope
jbe
mov
imul
dec
sti
push
movs
sbb
out
mov
das
mov
imul
inc
jo
outs
or
mov
adc
test
add
ficom
adc
sbb
lds
hlt
pushw
or
lods
and
jne
push
mov
add
retf
addr16
pop
add
pop
inc
or
mov
dec
pop
fwait
test
and
ins
xchg
push
inc
jb
popa
jns
jae
ja
out
and
icebp
sbb
or
add
call
fdiv
xor
data16
mov
inc
dec
inc
push
adc
pop
inc
add
mov
jo
hlt
loopne
xor
xchg
lods
movs
ss
inc
and
or
lahf
fisttp
popaw
jne
je
adc
ins
jns
cmp
and
push
mov
gs
push
unpcklps
cmc
lea
jo
or
mov
retf
or
and
daa
mov
cwde
cmc
(bad)
retf
inc
pusha
add
dec
dec
push
xor
xchg
(bad)
fstp
or
adc
imul
ins
cwde
adc
or
xor
dec
push
cdq
fdiv
sahf
out
pop
ret
out
cmp
xor
sbb
xor
sbb
xor
sbb
daa
or
adc
inc
neg
ror
xor
sub
or
adc
push
adc
dec
xchg
bound
pop
jbe
jbe
popa
js
cwde
and
test
cmps
inc
push
mov
mov
adc
xchg
cs
push
jo
xchg
fdiv
int3
shl
es
not
inc
or
and
add
push
(bad)
jmp
push
dec
bound
push
add
pop
fisubr
hlt
in
dec
sbb
adc
cwde
mov
fld
sub
jge
jne
imul
aas
jns
inc
push
inc
mov
inc
jns
or
ds
test
cs
fisttp
mov
rcr
dec
jae
mov
add
cmp
mov
and
mov
add
xchg
adc
adc
jo
push
sub
pop
sub
sub
inc
adc
popa
mov
test
mov
test
icebp
sbb
sbb
cmp
iret
or
xor
or
(bad)
jg
jne
fist
add
addr16
push
push
dec
dec
gs
pop
fsub
and
rcl
jb
pop
loopne
adc
adc
ins
retf
imul
mov
inc
test
jo
add
inc
pop
sbb
enter
or
or
les
or
ret
imul
inc
ins
ins
pop
in
lea
mov
pop
or
cmc
add
js
ret
dec
mov
add
lock
ss
pop
jg
scas
sbb
sub
mov
push
mov
js
ins
pusha
aaa
xor
sub
push
add
int
jbe
sti
push
aam
ja
das
popf
push
std
or
pop
pusha
add
pop
adc
add
or
jge
jecxz
inc
jle
dec
out
sbb
lods
sub
sub
lock
mov
jl
cs
and
jmp
lds
sbb
push
shr
or
push
or
sub
adc
js
ret
jg
or
je
inc
ins
popa
jae
movs
stos
les
fadd
push
mov
loop
jb
sbb
inc
lsl
jmp
jbe
pop
inc
jb
ins
gs
mov
pop
test
mov
int3
pusha
loope
dec
fild
push
call
sbb
pushf
or
cmp
fcomp
jns
dec
xor
pop
adc
(bad)
in
or
xchg
inc
call
sub
hlt
or
leave
sysret
xlat
call
and
sbb
jmp
pop
or
fimul
mov
add
and
xchg
mov
inc
sbb
adc
into
leave
cmp
mov
xchg
dec
add
xchg
pop
xlat
push
pusha
aas
mov
adc
dec
or
pop
mov
cld
xor
push
sbb
int
push
retf
ins
or
sub
fcomp
inc
jne
push
inc
or
and
mov
jge
movs
sbb
add
inc
mov
loopne
fistp
aas
mov
push
mov
test
pusha
mov
and
aas
fcomp
push
clc
push
inc
cwde
cs
cmp
ins
mov
inc
ds
push
in
out
nop
mov
push
aas
xchg
lahf
xchg
push
ficom
aas
jge
mov
mov
es
mov
mov
pop
stos
push
rol
or
enter
hlt
idiv
xor
leave
push
into
aas
in
rcr
push
fldcw
cs
shl
test
ds
loopne
dec
jbe
push
jo
cmc
jle
jo
test
push
cmp
or
and
nop
int3
out
lds
push
lock
ror
add
jl
loopne
add
lar
pop
adc
mov
inc
(bad)
ins
jp
sbb
mov
add
xor
mov
sbb
dec
pop
mov
in
sbb
or
(bad)
jnp
dec
push
lock
jno
pop
push
test
push
or
fld
sahf
jecxz
cmc
ror
lock
rol
inc
rcr
faddp
push
or
sbb
ret
push
jns
or
adc
les
pushf
adc
out
ror
icebp
loopne
dec
fcmovnb
or
push
xor
scas
loopne
and
sbb
cwde
xchg
sbb
or
aaa
mov
inc
jno
cmp
mov
mov
fdivr
push
push
push
add
sub
sbb
inc
dec
mov
sbb
imul
pop
cmps
nop
pusha
jmp
call
adc
in
jo
daa
sbb
sub
and
mov
addr16
xchg
call
inc
jae
mov
outs
arpl
loopne
popa
push
frstor
pop
mov
mov
jmp
xchg
hlt
sbb
idiv
push
or
adc
xor
and
sub
in
and
sbb
inc
gs
popa
push
add
shr
neg
adc
cmc
jmp
cmp
xor
cmc
xor
scas
add
adc
aam
rcr
cmp
in
sub
scas
adc
mov
inc
and
fisttp
xchg
test
popa
mov
jno
jmp
mov
and
sar
rcl
dec
sub
sti
push
push
jnp
or
out
and
mov
out
and
sub
xor
jbe
add
jo
repnz
push
pushw
daa
fsub
mov
mov
outs
mov
or
lds
adc
xchg
enter
pop
(bad)
js
or
adc
dec
rcl
add
or
pusha
addr16
sub
repnz
xor
cli
test
pop
pop
pop
push
cmp
loope
arpl
lea
sub
add
dec
or
or
scas
pop
jo
inc
repnz
sub
pop
sbb
cwde
cmp
(bad)
in
rol
sub
out
addr16
sar
(bad)
sub
push
push
rcl
push
mov
ja
pop
pusha
dec
ja
xor
popa
dec
gs
shl
inc
test
xor
xchg
rol
sbb
ret
leave
sbb
cs
(bad)
fnstenv
mov
cmovnp
mov
ror
xor
push
dec
xor
or
lods
jne
paddb
popa
test
cli
lods
mov
or
(bad)
jle
pop
stos
ud1
in
(bad)
das
mov
dec
push
push
enter
jns
cmp
pop
lods
loopne
fcomp
sahf
test
and
das
adc
fucomip
pop
dec
xor
dec
ror
cwde
(bad)
(bad)
mov
dec
psubd
push
test
or
push
jp
daa
add
add
or
mov
and
pop
add
ins
add
sub
add
adc
imul
adc
(bad)
jmp
add
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cld
(bad)
(bad)
push
sub
dec
mov
mov
mov
mov
mov
jmp
stos
or
call
loop
test
jmp
jmp
stos
jmp
add
int
dec
cs
mov
imul
mov
enter
adc
mov
cmp
xchg
push
test
mov
add
sar
dec
push
or
shl
loop
fidiv
push
or
or
add
or
push
call
sub
ss
pop
test
outs
sbb
push
int3
push
sbb
jp
mov
push
in
jmp
add
push
mov
pop
push
inc
lods
push
test
nop
push
dec
mul
clc
ds
idiv
xchg
pushf
cmp
sbb
popf
(bad)
mov
scas
adc
sub
or
mov
adc
push
hlt
loop
aam
(bad)
lock
into
pop
ins
dec
cmps
mov
pushf
push
fsub
jne
ins
inc
cmps
adc
or
adc
push
sbb
neg
and
or
jmp
add
jno
sub
pusha
shl
ins
pop
mov
sbb
mov
and
jno
cmp
dec
sub
rcr
lea
imul
inc
inc
je
aas
pop
push
pop
xchg
pop
adc
mov
jae
jge
add
arpl
adc
inc
push
add
rcr
daa
cs
or
psraw
jbe
fwait
inc
ja
push
imul
shr
imul
movs
fdiv
and
inc
or
sub
inc
sub
mov
clc
or
je
ja
test
aad
mov
icebp
sub
add
push
cmp
sub
in
push
mov
xchg
mov
hlt
orpd
push
add
or
imul
mov
inc
stos
inc
loope
inc
mov
pop
sbb
dec
popa
imul
and
ins
jns
and
dec
sub
ret
cmp
hlt
push
loopne
mov
loopne
push
adc
xor
pushf
inc
mov
dec
je
and
mov
pushf
lock
jae
leave
ds
popa
sub
cdq
xlat
imul
pop
adc
dec
ds
(bad)
mov
arpl
movs
adc
or
jne
jns
sub
jnp
lods
or
mov
inc
xchg
adc
or
pop
inc
jmp
retf
ret
mov
adc
and
inc
sbb
push
rcl
xchg
pusha
or
push
loopne
or
adc
jae
in
dec
movs
or
fcom
sub
mov
lea
je
sbb
sbb
les
pushf
fisub
add
sbb
clc
add
fs
mov
mov
push
popa
inc
das
lea
inc
test
lods
sbb
add
dec
push
xor
fchs
lods
scas
mov
cmp
adc
int3
retf
imul
into
daa
push
xor
dec
or
mov
mov
lea
shl
sbb
mov
movs
pop
mov
cmp
mov
add
sub
rol
retf
inc
or
popf
adc
jbe
pop
dec
movs
gs
call
xchg
sub
lds
dec
es
(bad)
call
mov
xchg
add
lods
dec
jno
test
or
cwde
push
adc
jns
int3
mov
pop
push
es
or
cmp
repz
popf
test
in
jne
jnp
shl
jl
push
or
loope
jo
inc
test
popf
and
loopne
and
mov
shl
test
or
xchg
or
scas
push
je
cmps
(bad)
into
sbb
dec
add
scas
mov
adc
pop
or
lock
xor
dec
adc
rcl
or
dec
repz
mov
loopne
sub
lds
sub
mov
add
aaa
xchg
push
add
inc
pop
pop
dec
xchg
or
xchg
or
mov
mov
cmp
inc
or
movs
jmp
jmp
sub
lods
or
or
inc
dec
mov
sbb
rol
aas
xor
in
push
inc
adc
or
mov
push
cmp
dec
pop
mov
push
sbb
(bad)
pop
mov
shl
mov
xor
cmp
mov
dec
adc
jle
add
(bad)
adc
sbb
in
inc
pop
cmp
imul
mov
mov
sti
and
inc
rcr
clc
jns
push
add
popa
rcr
call
mov
push
cmp
test
adc
rcr
rcl
(bad)
mov
xor
popa
adc
push
shl
sbb
pop
stos
cdq
jno
inc
sub
loop
xchg
cwde
in
xor
mov
rol
xor
int3
xchg
test
jae
daa
dec
sub
xchg
sar
mov
pop
adc
push
pushf
es
arpl
imul
push
loop
repnz
push
int3
mov
and
ins
inc
jmp
aaa
cs
dec
pop
lods
pop
data16
inc
adc
push
add
pop
cmp
adc
adc
(bad)
pop
sub
sbb
jae
adc
xor
push
add
fadd
pop
iret
add
cmp
hlt
add
dec
pop
loope
loopne
push
jo
and
ins
dec
push
add
xor
add
sbb
and
xor
dec
jle
pop
cmps
add
imul
nop
inc
jae
dec
ror
inc
aaa
add
call
push
inc
pop
or
rol
popf
adc
dec
cmps
jl
or
js
inc
jb
rol
sbb
dec
mov
mov
jg
scas
push
cmp
loop
or
js
add
fsub
and
mov
dec
pop
shl
jno
cmp
and
sub
sub
add
adc
fstp
shl
stos
cmp
lahf
inc
and
inc
ins
mov
out
loope
add
and
dec
push
inc
pop
ret
cmps
sti
inc
es
je
xor
test
cmp
stos
adc
push
push
jae
xchg
dec
div
pop
ror
jb
inc
dec
in
push
mov
mov
dec
jae
pop
dec
in
test
and
cmp
sub
sub
ret
jmp
or
xchg
sub
loopne
or
mov
pop
adc
fadd
sub
push
ror
into
cs
out
es
rol
cmp
inc
call
call
test
mov
cs
adc
ret
push
das
popw
push
inc
loopne
retf
push
cmp
or
repz
mov
push
xor
push
cmp
pop
sbb
lds
gs
mov
push
push
xor
xchg
xor
pusha
cmc
ficomp
xchg
adc
rcr
inc
xor
cmp
dec
sbb
ja
inc
xor
sar
lods
inc
or
shl
push
inc
jo
and
and
icebp
stos
call
xor
test
push
loope
xor
test
ss
mov
inc
and
in
or
jecxz
fs
or
mov
adc
(bad)
(bad)
push
jns
in
pop
fcom
je
ins
push
add
sbb
mov
vsubps
cwde
(bad)
fcomp
mov
int
adc
push
adc
add
push
push
xor
or
and
jb
test
pop
inc
adc
aam
aas
(bad)
in
(bad)
jmp
loopne
in
(bad)
adc
xor
xor
div
rcl
inc
retf
jecxz
scas
dec
fidivr
or
cmp
mov
mov
and
loopne
mov
out
shl
test
mov
ds
mov
ret
mov
popa
aas
jmp
mov
mov
mov
mov
adc
push
loopne
arpl
fdiv
loope
enter
inc
xchg
lds
cmps
push
mov
push
xor
mov
(bad)
rol
xor
mov
dec
in
(bad)
push
aaa
xchg
add
in
push
dec
push
daa
inc
add
push
pushaw
outs
push
inc
cdq
dec
ja
push
add
lock
cwde
pop
loop
pop
mov
add
dec
pushf
pop
jmp
out
in
mov
pop
pop
adc
pmaxsw
push
(bad)
popf
pusha
(bad)
push
rcr
int
pusha
pusha
stc
dec
fisub
mov
and
cwde
sbb
aaa
lock
sbb
imul
or
xor
inc
dec
lock
int3
jb
jg
inc
dec
add
loope
add
push
add
sbb
jne
ror
or
mov
imul
pop
xor
pop
pop
push
add
fdiv
pop
jo
je
add
sti
xor
popf
mov
inc
push
cmove
or
mov
adc
data16
or
cwde
gs
xlat
and
mov
rol
mov
push
pop
leave
test
push
fbld
pop
les
add
dec
sbb
dec
push
jae
mov
dec
jbe
adc
dec
call
dec
js
push
dec
sbb
out
dec
lock
pop
dec
sbb
add
inc
fnsave
push
add
inc
mov
nop
cmps
sub
jae
inc
push
inc
or
jne
je
cs
adc
test
xchg
enter
push
xor
mov
sub
and
push
inc
xchg
mov
pop
inc
rcr
inc
call
retf
pop
mov
mov
sbb
ja
aam
cmp
ret
inc
sahf
jae
xchg
dec
inc
jg
add
dec
pusha
or
xor
aam
pop
inc
popa
sbb
and
stos
adc
xor
ja
hlt
ror
pop
push
bound
and
push
sub
pop
dec
dec
dec
add
loop
inc
sbb
xor
pop
dec
fs
sbb
xchg
mov
add
dec
xor
or
pop
loopne
pop
dec
pop
cwde
mov
add
inc
push
fadd
loope
add
sbb
in
adc
pop
dec
push
or
rcl
dec
pop
mov
stos
adc
add
cmp
sub
clc
js
lods
push
out
inc
imul
xor
add
ins
pop
mov
mov
pop
(bad)
push
inc
and
int3
pop
(bad)
ins
mov
pusha
outs
loopne
clc
lds
jae
popa
outs
lahf
or
mov
dec
outs
add
pop
xor
add
and
mov
es
jns
mov
(bad)
out
sbb
mov
pop
jg
sbb
sbb
sbb
mov
mov
jmp
pop
inc
sbb
sbb
ins
mov
sbb
sbb
dec
jo
sbb
sbb
sbb
arpl
stos
iret
icebp
adc
sbb
sbb
mov
sti
and
inc
sbb
sbb
imul
sbb
or
and
jb
sbb
fs
fs
jnp
ret
fs
fs
pop
xor
fs
(bad)
jmp
popa
or
xchg
xchg
popf
mov
xchg
xchg
xchg
ss
and
stc
and
inc
xchg
xchg
xchg
xchg
mov
add
push
xchg
mov
movaps
mov
add
rcr
pop
movs
mov
test
pop
adc
neg
or
and
cwde
dec
or
in
sbb
jmp
fild
stos
adc
shl
pop
cmp
add
dec
push
jmp
lea
shr
pop
adc
push
dec
push
xchg
(bad)
adc
pop
xor
pusha
jo
add
pusha
je
lock
not
push
add
or
(bad)
fistp
add
mov
mov
mov
(bad)
mov
stos
rol
loope
int
mov
push
in
xchg
sbb
adc
jl
lgdtd
pop
scas
in
inc
ss
jmp
jmp
clc
fwait
test
pop
xchg
and
push
push
inc
dec
ja
xchg
pop
xchg
pop
adc
adc
sbb
movs
mov
shl
and
inc
sub
add
mov
add
(bad)
xor
push
sub
dec
stos
and
stc
mov
inc
or
out
test
das
inc
push
adc
xor
ds
push
sub
or
xchg
jmp
sahf
sub
movaps
(bad)
pop
cmp
and
add
xchg
inc
pop
dec
pop
iret
test
lods
dec
jne
cmc
or
jne
inc
aad
or
and
adc
mov
data16
cs
(bad)
mov
jbe
or
inc
sbb
cmp
rol
sahf
lds
popa
sbb
loopne
or
or
cmp
sbb
cmps
push
cmp
cmc
inc
jo
add
pop
dec
sti
stos
adc
movs
or
mov
xchg
scas
push
add
imul
inc
sbb
dec
pop
add
dec
jns
js
or
jb
popf
sbb
addr16
sbb
hlt
push
push
or
or
add
loopne
in
rcr
dec
push
add
or
add
inc
push
xor
out
and
adc
pop
cmps
add
(bad)
add
and
aas
push
pop
aad
jle
ins
cmps
jle
push
adc
ins
and
sbb
push
add
sub
mov
push
dec
push
push
xor
xchg
push
les
sbb
(bad)
mov
push
fist
push
je
or
ss
ins
jnp
mov
jl
out
and
push
iret
add
out
mov
out
push
mov
or
push
out
fiadd
rcl
retf
movs
add
sbb
(bad)
dec
pusha
adc
inc
adc
cld
jmp
add
and
mov
div
movs
sub
jl
push
mov
hlt
not
push
inc
push
test
push
pop
or
scas
bound
and
add
pushf
xor
mov
sub
xor
je
add
jae
jle
push
sbb
mov
and
ins
aaa
fcmovne
adc
adc
arpl
leave
cmp
ins
fld
mov
cmp
fwait
js
adc
pop
mov
retf
cmp
inc
sti
jb
arpl
sbb
fs
jae
push
call
xor
dec
imul
pushf
mov
sub
sub
lods
sbb
jae
ror
sahf
sub
sub
repnz
cwde
pop
mov
rcr
int3
cmp
sub
push
sbb
fwait
push
add
rcr
sub
jo
jb
push
inc
sti
pop
inc
push
bound
adc
(bad)
or
cmp
mov
push
in
in
jge
cmp
sbb
add
ret
adc
iret
ror
dec
je
stc
push
jp
xor
push
and
dec
cmps
cld
push
xor
cmp
cmps
mov
dec
dec
dec
inc
mov
add
or
add
xor
or
mov
xchg
icebp
arpl
mov
add
adc
adc
loop
jmp
push
sahf
push
or
and
add
push
sbb
rcr
pop
fdivr
inc
add
outs
movs
pop
dec
inc
js
scas
push
add
pop
adc
out
adc
push
dec
aad
push
jae
push
retf
inc
ins
and
inc
test
pop
(bad)
sbb
mov
push
lods
add
adc
mov
pusha
aas
push
(bad)
popa
push
sub
xor
or
push
or
out
jne
adc
push
cmp
adc
dec
pop
cmp
mov
add
sbb
int3
jns
adc
(bad)
int3
xor
cmp
mov
push
aas
xor
dec
adc
mov
(bad)
arpl
mov
xchg
sbb
add
cmp
push
mov
jno
jns
mov
pop
adc
adc
mov
push
mov
and
xchg
adc
xchg
xchg
xchg
retf
sub
dec
jo
xchg
retf
xchg
xchg
shr
aaa
aaa
xchg
xchg
xchg
xchg
pop
test
xchg
clc
and
dec
outs
xchg
xchg
xchg
xchg
xchg
mov
xchg
retf
and
retf
xchg
xchg
xchg
scas
sar
push
cmp
outs
(bad)
mov
pop
js
jb
sub
popa
add
lods
pusha
cmp
sbb
inc
jne
mov
sahf
imul
enter
add
add
dec
or
mov
adc
aam
sub
dec
dec
pop
lock
fimul
xchg
jnp
loope
popa
mov
adc
int3
cmp
jo
ficomp
dec
dec
xor
lea
cwde
cvtdq2ps
fdivr
pop
loope
test
cmovo
mov
aad
rcr
sub
jbe
adc
dec
pushf
mov
jmp
lods
cdq
sub
(bad)
(bad)
in
or
mov
adc
fwait
aad
dec
rcr
sbb
mov
mov
dec
scas
adc
inc
adc
xor
dec
push
inc
nop
push
test
ins
dec
xchg
sbb
dec
or
and
lea
test
cmp
inc
inc
fisubr
mov
pop
push
dec
adc
xchg
jns
call
push
mov
dec
and
dec
mov
add
mov
adc
icebp
popa
movs
mov
ficomp
pusha
inc
add
outs
das
sub
cmp
sbb
lea
lods
and
push
dec
or
mov
sub
or
pop
mov
sbb
xor
cmps
lds
xor
aas
bound
xor
bound
pop
pop
adc
add
sub
add
push
push
and
jmp
pop
cmps
popa
or
xor
je
rcr
mov
adc
inc
inc
pusha
xchg
xor
inc
mov
add
push
xor
add
mov
repz
dec
mov
push
popa
pusha
mov
dec
repnz
adc
cld
jb
mov
add
inc
adc
mov
mov
inc
inc
aaa
shr
pop
add
add
addr16
dec
push
inc
dec
xchg
ret
mul
outs
push
cmps
outs
popa
or
pmaddwd
pop
adc
ins
push
cmp
sbb
(bad)
ss
js
in
fcmovnbe
arpl
retf
or
push
push
pop
test
push
dec
bound
or
inc
or
(bad)
scas
ins
(bad)
ret
js
or
ins
adc
push
enter
mov
mov
dec
push
dec
inc
mov
and
add
xchg
dec
jge
sub
inc
xor
adc
fdivr
inc
repnz
mov
sbb
and
mov
out
xor
xrelease
push
sub
call
test
or
inc
int
dec
into
dec
popa
pop
pushf
or
mov
mov
sti
mov
scas
std
pushf
xor
sbb
scas
mov
sbb
daa
or
mov
ins
push
pop
sbb
in
pop
or
adc
call
lock
popa
into
and
sub
add
into
push
xchg
sahf
mov
fld
adc
inc
ins
push
sbb
popa
xor
pop
adc
push
sahf
(bad)
aas
loope
popf
adc
rcl
rol
icebp
fcomp
dec
out
sar
ss
xor
push
sbb
jo
fisub
cld
out
imul
imul
add
fisub
out
fdiv
sub
mov
sub
gs
dec
cmovle
adc
push
fld
dec
dec
dec
xor
fwait
sbb
adc
push
cwde
and
add
repz
iret
add
push
or
ins
mov
pop
in
faddp
xchg
jbe
push
fs
jnp
xchg
cmp
rcr
call
idiv
jecxz
sbb
pop
js
inc
sub
inc
sahf
adc
jp
mov
sbb
ins
xchg
inc
fsubr
sbb
push
rcl
mov
scas
push
pop
push
mov
dec
pushf
dec
xchg
mov
and
sbb
faddp
pop
push
into
cli
pop
(bad)
mov
push
pop
inc
jo
push
jg
(bad)
loopne
loopne
shld
dec
(bad)
shl
mov
push
jp
shl
popa
or
ds
push
mov
add
cwde
aaa
stos
adc
and
xlat
or
sub
fwait
aam
aam
into
and
(bad)
pop
imul
rcr
into
add
shl
xchg
pusha
imul
add
xchg
jg
or
gs
sub
jmp
mov
add
jmp
add
ret
sar
mov
ja
or
inc
push
jo
push
pop
rcr
inc
mul
dec
adc
inc
lock
arpl
add
outs
pop
out
or
sbb
adc
xor
push
loopne
mov
inc
nop
sbb
adc
mov
clc
je
das
sub
jne
shl
les
xor
fstp
xor
into
lds
pop
fstp
and
pop
sub
pushf
add
fimul
xor
push
mov
mov
push
aas
inc
xchg
mov
xchg
test
out
or
popf
in
and
cmp
sub
mov
sbb
xlat
ret
push
cs
popa
fistp
repnz
jo
prefetchwt1
mov
xchg
pop
popa
das
mov
in
inc
pusha
jecxz
xchg
imul
xor
outs
sub
pusha
mov
ins
mov
sub
or
mov
push
icebp
inc
ins
pop
ja
push
int3
pop
cmp
shl
sbb
jne
pop
add
and
pop
push
jne
ret
cdq
pusha
add
sti
xchg
push
int3
xchg
imul
lea
popa
adc
popf
push
add
xlat
mov
or
popa
jmp
mov
pop
fdiv
push
and
rcl
hlt
gs
out
es
ins
fidivr
(bad)
bound
pop
sub
adc
jmp
xchg
sbb
loope
stos
stc
pop
add
arpl
aaa
or
jmp
imul
sbb
cmp
mov
push
dec
ins
ret
pop
push
xor
jmp
or
inc
push
popa
jae
inc
pushf
xor
in
add
cmp
adc
pop
call
and
test
jne
push
mov
mov
mov
push
or
jo
ret
js
les
fdivr
mov
sbb
add
ret
add
out
jne
adc
adc
mov
xchg
inc
sbb
mov
mov
and
push
(bad)
int
pusha
add
sti
inc
gs
enter
xor
(bad)
pusha
mov
clc
push
cmp
sub
or
and
fmul
push
dec
and
pop
shl
xor
push
jbe
lds
pusha
jmp
add
jp
push
xor
nop
sub
sub
dec
mov
and
sbb
sub
pop
sub
sub
int
xor
sbb
mov
ret
jmp
mov
jmp
aaa
test
pop
nop
xchg
jno
or
popa
std
inc
ss
clc
jmp
xchg
adc
gs
push
jmp
jl
jo
xchg
cmp
cmp
jle
push
push
dec
test
int3
dec
in
push
pop
sar
imul
dec
outs
pandn
dec
pop
test
lock
dec
xchg
xchg
cdq
add
leave
leave
enter
xchg
shl
daa
mov
or
(bad)
mov
daa
xor
nop
leave
enter
in
push
ds
leave
leave
jb
rcl
fs
mov
jb
repnz
sub
sbb
xlat
or
cmovae
jo
jb
loop
mov
repz
test
mov
mov
(bad)
outs
or
add
push
or
add
inc
lds
sub
mov
retf
jno
(bad)
lock
jbe
sbb
jmp
sub
mov
xchg
add
jb
fs
rol
imul
mov
push
loopne
or
inc
scas
mov
aaa
jle
adc
add
es
fisttp
imul
xchg
jp
and
adc
cli
fiadd
in
pop
lock
xchg
clc
push
dec
and
std
push
ds
(bad)
stos
and
add
pop
jl
call
popa
jae
inc
add
or
mov
rcl
aad
and
cmp
(bad)
mov
out
outs
out
push
add
int3
pop
sti
inc
push
sbb
outs
pop
xchg
rol
adc
lock
enter
into
in
inc
sbb
mov
inc
or
scas
push
jl
in
ficom
sbb
sub
jge
aas
and
jnp
dec
add
inc
jo
push
jo
cmp
ins
ins
data16
sbb
mov
ror
ja
dec
xlat
cs
add
mov
and
pop
push
inc
add
cmp
ja
ja
adc
dec
jne
jo
cmp
pusha
jno
aam
mov
ret
out
inc
add
and
jne
lods
jb
pop
dec
ja
mov
test
js
ficom
data16
add
sub
mov
push
enter
add
cmp
mov
mov
cmp
inc
adc
or
fprem
scas
and
test
mov
(bad)
mov
pop
out
ficomp
pop
ja
sbb
adc
pusha
push
jns
mov
push
mov
test
aam
imul
in
sub
push
xchg
loopne
(bad)
jo
sub
fdiv
test
inc
pop
daa
mov
push
jb
add
mov
or
pop
or
cli
jl
add
enter
jmp
xchg
add
das
in
test
popa
das
enter
lods
push
test
sar
lea
pop
inc
mov
les
adc
outs
mov
add
xor
jg
xor
ror
and
dec
inc
stos
adc
test
add
sbb
pop
add
add
out
add
bound
or
sti
call
add
adc
ret
sub
not
sbb
cmps
adc
fst
jnp
fadd
test
or
sub
in
out
xchg
in
and
push
outs
ins
mov
xor
ins
adc
push
popa
sbb
push
rol
pop
mov
aam
adc
jno
(bad)
or
ins
bt
rcl
sbb
jle
mov
outs
js
or
data16
push
adc
xor
sbb
daa
xor
add
mov
push
loop
sub
stos
test
sub
in
ss
je
xchg
xchg
or
inc
in
adc
bound
inc
inc
mov
inc
inc
xor
cwde
cs
inc
inc
shl
pop
xor
push
jge
leave
inc
cs
inc
cmc
sbb
inc
inc
inc
inc
lea
inc
inc
cs
jne
gs
inc
inc
into
neg
mov
sbb
cdq
or
sbb
mov
dec
jae
sbb
sbb
adc
sbb
xor
sub
xchg
add
stos
icebp
push
mov
es
pop
inc
and
loopne
inc
mov
push
xchg
scas
mov
sub
out
inc
push
or
xchg
pop
movs
push
dec
inc
in
pop
cwde
dec
movd
xchg
xchg
mov
mov
jne
or
push
cmp
mov
jecxz
(bad)
clc
cmp
adc
int
inc
jo
inc
loope
sahf
loopne
mov
mov
les
dec
sbb
loopne
push
add
mov
dec
popa
jmp
pop
inc
add
jmp
outs
jo
adc
inc
inc
add
sbb
sahf
add
or
add
add
add
jae
pop
inc
inc
or
jg
inc
adc
push
inc
adc
push
pop
xchg
mov
aaa
add
mov
pop
dec
mov
add
push
shl
(bad)
fadd
push
add
inc
and
sub
push
jmp
sub
or
pop
inc
mov
les
fidivr
lds
adc
xchg
test
aas
inc
mov
test
mov
pop
pusha
push
sbb
mov
and
stos
loopne
or
shl
push
dec
and
mov
sbb
in
dec
int3
xor
inc
or
loopne
add
dec
stos
test
add
pop
popf
or
nop
push
add
sbb
add
out
mov
cwde
jmp
fcomp
inc
pop
lods
rol
retf
pop
bswap
pushf
and
imul
pop
out
and
std
inc
jmp
sbb
aam
jns
pop
add
mov
jns
loopne
xchg
dec
or
xchg
inc
dec
add
xor
or
mov
cmc
inc
add
or
out
cmp
inc
outs
test
inc
inc
out
add
sahf
xchg
inc
inc
add
or
jge
pop
lods
ror
sub
stc
inc
adc
lods
sbb
test
pop
xchg
loopne
add
xor
pop
add
push
sub
ret
fwait
pop
inc
xchg
pop
add
data16
push
rol
test
pop
sbb
cmps
bound
add
mov
and
xor
push
push
in
pop
sbb
cld
jb
mov
and
ficomp
push
xor
pushf
sysenter
or
fs
push
aas
dec
rcl
in
and
push
or
pop
ror
ins
fild
ds
push
sub
or
push
aas
in
mov
aas
pop
pusha
js
jle
xchg
shl
and
dec
in
push
call
neg
nop
add
push
cwde
(bad)
push
inc
pop
push
or
stc
mov
scas
loopne
push
push
outs
xlat
mov
fistp
dec
dec
jno
mov
mov
cmps
xlat
add
mov
in
jle
ret
push
xor
mov
push
lock
mov
out
pop
fstp
push
push
dec
loopne
enter
ret
and
push
or
aaa
fcomp
ja
push
and
inc
std
push
fsub
ss
shl
mov
inc
arpl
push
ds
fist
jo
popf
push
or
gs
dec
ror
pusha
ja
xor
push
in
mov
add
movaps
dec
js
(bad)
aaa
mov
imul
lock
cs
jmp
mov
inc
add
mov
or
jb
out
(bad)
push
mov
gs
add
and
cs
xchg
xor
pusha
or
fadd
mov
int3
fnsave
or
pop
inc
or
mov
lock
jnp
mul
inc
bound
pop
iret
push
cs
pop
loope
fld
or
inc
xor
sbb
sub
pop
cmp
mov
mov
push
rol
and
push
xor
sahf
xlat
ins
les
ss
inc
mov
ss
nop
push
cwde
xchg
loopne
inc
push
shl
ins
shl
not
push
clc
push
add
mov
or
cmp
mov
or
add
sub
stos
dec
mov
xchg
xlat
xor
adc
dec
xchg
jo
xor
xor
push
jo
ja
or
inc
scas
add
and
fild
mov
xor
or
xor
add
shr
cmp
push
ss
xor
mov
mov
in
call
lea
sub
xor
xchg
lea
adc
push
ret
lock
jge
enter
jecxz
and
shl
adc
or
cmp
add
add
pop
pop
cli
lahf
push
add
call
repz
movs
je
mov
int3
jne
xor
mov
pop
pop
push
sub
imul
push
dec
ds
jle
aad
fmulp
outs
rol
xor
xlat
icebp
or
imul
add
cmps
test
fs
jno
xlat
pop
repz
add
sbb
ret
xlat
mov
outs
push
xor
push
in
lea
or
sub
dec
mov
fs
push
pop
movs
add
mov
mov
fidiv
and
and
pop
ins
and
xchg
int
es
loopne
pop
push
xor
fs
loopne
sub
sub
xor
fadd
jl
int
test
sbb
sub
push
lock
das
and
lods
cwde
push
add
dec
and
add
js
sbb
call
and
ins
and
out
and
sbb
sub
outs
jne
ror
xchg
jmp
or
adc
push
mov
mov
cmp
inc
xlat
dec
out
inc
pop
sub
and
add
sbb
mov
mov
mov
js
mul
sub
dec
jl
popa
mov
nop
xor
sbb
lea
mov
adc
dec
add
sub
xor
arpl
xchg
ins
xor
add
out
inc
test
xchg
in
out
or
sub
cmp
cmp
fwait
xchg
out
push
adc
jb
fisttp
(bad)
shl
sub
call
pushf
cld
es
jae
lea
jecxz
add
jecxz
out
mov
ss
mov
arpl
or
dec
outs
inc
mov
inc
sub
test
out
sbb
or
sbb
neg
cmps
pusha
xor
gs
push
xor
push
pop
sbb
jmp
movs
test
sub
pop
movs
mov
(bad)
in
sub
or
dec
scas
stos
ret
or
rcl
or
cmps
push
inc
fisubr
test
push
and
dec
(bad)
int3
or
es
daa
daa
jge
out
sub
rcl
and
push
cld
push
inc
add
leave
sub
cmps
jae
add
fwait
or
push
pop
sbb
pop
pusha
or
mov
push
mov
sbb
inc
mov
pusha
pop
add
sub
push
jb
fs
je
or
xchg
mov
adc
add
gs
or
sub
add
mov
jns
add
xchg
adc
mov
adc
int3
aam
adc
jl
(bad)
lahf
adc
jno
test
and
jns
add
mov
xchg
jns
aas
into
sub
pop
jge
scas
inc
int3
popa
inc
or
xor
jge
fwait
ins
jle
or
add
add
js
scas
std
inc
and
cmp
rcl
dec
push
add
gs
mov
mov
gs
sti
inc
das
add
mov
daa
push
add
scas
or
ins
cwde
mov
add
adc
ret
retf
imul
jmp
cwde
rcr
mov
and
push
sbb
lods
fild
ret
lock
stos
add
and
or
scas
jmp
inc
jo
jmp
mov
pop
inc
or
es
jne
pop
dec
sbb
dec
adc
dec
int3
dec
in
inc
pop
adc
push
jmp
xchg
outs
push
pusha
push
adc
ret
and
inc
add
add
loopne
push
jno
jne
push
lock
repnz
iret
fs
xor
mov
push
call
jle
loopne
mov
push
mov
lods
mov
pop
cmp
dec
iret
pop
jmp
push
into
cld
xor
hlt
rcr
mov
cmp
and
enter
or
test
xor
adc
jae
or
inc
ins
xchg
cld
clc
in
or
call
and
test
test
shl
dec
ins
outs
pop
and
mov
test
add
cmp
rol
sub
jnp
pop
pop
sub
out
pop
and
ins
jo
add
xor
mov
xchg
xor
pusha
sub
pop
rcr
ss
js
sbb
push
mov
jo
sub
xchg
inc
mov
or
push
mov
mov
clc
jne
push
enter
retf
jne
and
hlt
jne
in
test
cs
adc
inc
fldcw
adc
cdq
mov
push
xor
inc
fld
adc
in
mov
mov
pop
dec
gs
je
jae
push
pop
inc
sbb
cmp
dec
pop
cdq
add
movs
inc
pop
mov
cwde
pusha
inc
rcl
or
xor
loop
fs
enter
xor
sbb
or
enter
loopne
xor
jbe
mov
ds
xchg
jo
add
inc
pop
loopne
inc
cmps
xchg
adc
xor
inc
ins
jne
jg
in
jle
outs
mov
pop
lahf
push
push
push
sub
xchg
mov
add
push
adc
dec
push
or
jne
dec
mov
repnz
push
xchg
cld
mov
mov
add
je
ret
mov
sub
mov
cmp
scas
inc
and
sub
sub
jns
popa
aad
leave
xchg
dec
int3
jb
enter
cmc
and
and
push
test
aam
xchg
add
addr16
dec
sub
mov
jmp
mov
aam
out
loopne
cmp
out
or
test
mov
push
fs
xor
adc
inc
mov
fbld
jle
xor
dec
gs
and
sbb
sbb
lea
push
mov
imul
xlat
mov
add
add
les
dec
add
mov
mov
cmc
sbb
ret
push
call
ret
mov
mov
push
mov
push
push
push
mov
mov
test
je
push
mov
push
dec
and
or
les
jne
or
je
and
dec
inc
mov
ret
(bad)
adc
aaa
push
add
and
pop
lahf
push
ret
iret
outs
out
mov
cmps
lock
or
sahf
or
mov
xchg
ins
loopne
cwde
sub
or
push
add
add
cmp
pop
inc
mov
pop
int3
out
jge
lods
add
mov
or
cwde
out
mov
pushf
mov
or
pandn
rol
ins
add
and
pop
int
adc
add
or
jmp
test
adc
lea
outs
out
out
cmp
pop
inc
and
nop
push
mov
dec
adc
xor
into
nop
push
mov
push
mov
cmp
push
lods
hlt
stc
inc
adc
inc
xchg
sbb
pusha
cmp
adc
add
ja
lods
dec
push
dec
or
pop
pop
ret
cmp
(bad)
hlt
stos
hlt
mov
pusha
lods
cmp
lods
adc
jae
hlt
mov
mov
xor
push
push
mov
mov
xor
sub
fs
ja
sub
je
xchg
inc
cld
inc
pop
pop
pop
cmp
jmp
outs
outs
rcr
ss
sub
push
cmp
push
mov
inc
jae
inc
push
push
push
clc
pop
ret
jp
add
paddsw
loope
cld
pushf
mov
pop
es
inc
call
daa
mov
mov
adc
or
sbb
ret
and
xchg
(bad)
arpl
loop
cwde
and
ja
inc
xchg
test
jne
jo
lock
pop
mov
xor
xor
adc
xor
or
mov
dec
or
popf
je
mov
scas
cmp
mov
movzx
push
pop
and
bound
sete
inc
or
pop
xchg
or
enter
call
mov
mov
(bad)
ds
shl
jmp
or
lea
addr16
push
jne
adc
inc
inc
sbb
sahf
pop
outs
and
fmul
movs
mov
lock
adc
mov
push
push
jl
adc
mov
inc
pop
fst
cld
call
cli
adc
(bad)
jl
inc
(bad)
mov
sub
inc
jg
std
scas
sbb
or
fcom
cmp
jne
int3
dec
mov
inc
and
jae
loop
pusha
out
lock
loopne
fisttp
mov
retf
idiv
out
add
jl
or
je
es
or
nop
(bad)
push
div
mov
mov
aaa
cwde
cmp
jae
inc
add
add
or
adc
add
xchg
cmps
jae
or
adc
mov
adc
pop
sub
push
jge
add
(bad)
push
mov
mov
sbb
retf
add
out
jge
adc
add
(bad)
pop
and
push
cs
daa
mov
call
sub
adc
add
push
inc
inc
inc
add
inc
xor
ror
adc
and
out
lods
repnz
and
jmp
(bad)
and
iret
cmp
pusha
push
shr
jo
mov
pop
sub
adc
mov
push
cmc
cmp
push
mov
and
jg
aas
gs
push
pop
jmp
mov
mov
rcl
fnstsw
jo
sar
jbe
bound
je
pop
int3
inc
aam
adc
test
add
imul
dec
hlt
mov
mov
test
jae
push
inc
or
clc
(bad)
das
adc
pushf
adc
in
(bad)
hlt
mov
neg
lea
retf
adc
add
dec
sbb
xchg
push
adc
xlat
shl
test
(bad)
test
(bad)
lock
xor
inc
clc
jae
mov
rol
sbb
aaa
sub
add
inc
or
push
add
mov
jo
dec
or
div
push
inc
or
cmp
int
inc
sbb
mov
or
ficomp
inc
cmp
or
adc
cmp
add
inc
xor
mov
lds
pop
sbb
push
es
ss
inc
pop
xor
iret
dec
jbe
test
mov
inc
inc
push
sbb
pop
jae
mov
and
cdq
stc
adc
jb
xor
mov
or
or
mov
pop
mov
xor
dec
ins
rcl
add
or
pusha
xchg
test
sbb
jnp
inc
cmp
imul
inc
ins
xchg
jb
sub
push
dec
je
jmp
cs
jo
ins
add
mov
jae
adc
clc
cmp
jne
shr
push
inc
or
inc
push
add
test
pop
clc
jle
push
xchg
aas
adc
adc
push
push
pop
add
ret
(bad)
push
hlt
fstp
stos
xchg
mov
mov
arpl
jb
enter
add
add
and
add
pop
or
sub
pop
mov
sbb
add
mov
mov
or
sub
adc
xchg
add
scas
outs
call
inc
or
or
stos
les
cmp
imul
dec
icebp
in
loop
js
push
cmps
cmp
sti
xchg
jmp
sub
test
inc
sbb
rcl
fcom
mov
repz
pop
je
sub
push
sbb
or
adc
sbb
adc
add
lock
test
setne
push
xchg
xchg
jnp
push
inc
cdq
and
fs
mov
sti
test
adc
fsub
stos
push
jns
add
ret
mov
sub
neg
jmp
pop
and
shl
pop
je
sub
dec
push
js
dec
cli
mov
mov
push
mov
inc
and
add
aas
adc
push
mov
lds
pop
stos
lods
jb
aaa
jno
adc
sbb
jmp
push
mov
inc
push
xchg
aam
call
push
loopne
outs
adc
jns
lods
or
inc
adc
pushf
lahf
dec
in
mov
outs
jp
cmp
mov
jo
pop
sub
mov
push
push
es
sbb
mov
jl
adc
fidiv
mov
xchg
cmp
mov
inc
mov
adc
xchg
imul
pop
mov
inc
sub
push
mov
dec
inc
cdq
idiv
push
ret
andnps
mov
jmp
sahf
inc
sbb
inc
or
nop
hlt
cli
xchg
popf
sar
cmp
cs
jmp
xor
clc
cmps
cmp
or
in
test
jle
(bad)
push
pop
enter
add
pxor
repz
fnstenv
jae
movs
and
(bad)
ja
loopne
scas
add
cmp
fcomp
jmp
dec
push
enter
add
and
or
and
les
mov
pop
pusha
cmp
mov
inc
or
jb
push
popa
fld
jl
stos
(bad)
xor
lahf
sub
sub
fldenv
add
jmp
clc
and
and
xchg
sub
into
repz
out
or
cs
xchg
mov
(bad)
div
xor
shl
sub
out
aaa
dec
mov
and
in
push
dec
inc
pop
jg
xlat
xor
js
(bad)
jg
pushw
test
push
lahf
push
dec
test
shr
sub
or
sbb
arpl
rcl
or
gs
adc
dec
push
je
jg
cmp
je
mov
push
adc
fstp
add
cmp
ins
ror
or
enter
dec
add
inc
inc
and
cmp
je
mov
mov
rcr
popf
push
dec
jecxz
aaa
cmp
loop
add
and
es
jmp
lahf
xor
jno
daa
adc
jle
mov
test
sbb
sar
shr
push
test
jge
push
je
adc
add
imul
mov
sti
mov
pop
das
adc
ret
loop
clc
or
in
ins
mov
and
sbb
mov
paddb
jo
adc
mov
mov
and
sub
jmp
dec
ins
hlt
or
adc
in
or
xor
pop
enter
xor
add
xor
es
(bad)
adc
call
fidivr
or
retf
adc
jae
aas
(bad)
cmp
xor
xor
push
add
jae
call
dec
or
jbe
sbb
push
(bad)
pop
cmp
jmp
retf
ds
push
mov
dec
xor
je
mov
and
jge
in
mov
js
repnz
xor
fsub
push
cmp
push
xor
cmp
pusha
mov
push
sub
adc
mov
pop
mov
add
lea
inc
cmp
add
mov
loopne
pop
inc
es
push
push
xchg
jnp
jmp
mov
clc
sbb
pop
ja
out
and
fdivr
loopne
or
shl
shl
jmp
cmp
mov
(bad)
lahf
inc
add
je
fadd
imul
mov
dec
mov
mov
lea
push
dec
ret
xchg
je
enter
stos
test
into
sub
rcr
sti
push
mov
stos
je
mov
movs
int
aad
xor
push
xor
loope
push
sub
fcomp
adc
je
push
xchg
or
mov
jo
fmul
xor
cwde
jge
popw
aam
hlt
sub
add
aaa
mov
xchg
push
je
sbb
adc
mov
jge
xchg
xchg
sub
mul
inc
jle
or
pop
fs
je
cmps
push
leave
ins
lea
test
fmul
mov
es
mov
mov
ss
or
aas
loop
cmp
adc
dec
test
jle
(bad)
mov
mov
pop
(bad)
clc
sub
and
(bad)
cmc
test
cli
lods
mov
fisub
mov
enter
cmps
movs
xor
adc
and
ror
mov
cli
aaa
mov
iret
test
xor
dec
sti
xchg
pop
sbb
sahf
mov
ret
mov
mov
cs
mov
push
adc
mov
push
mov
mov
add
adc
outs
test
jg
shr
mov
inc
mul
div
pusha
push
mov
in
and
inc
or
mov
pop
push
sar
xor
sub
out
scas
nop
enter
adc
mov
mov
cmp
jo
sbb
outs
pop
xor
stc
pop
mov
pop
push
je
in
or
loope
sbb
loop
xchg
pop
mov
mov
in
shl
push
or
stos
(bad)
test
cmp
add
test
je
inc
add
dec
push
sbb
and
jmp
out
adc
mov
int3
ja
pusha
sub
fnstcw
xor
or
pop
mov
sub
not
mov
jnp
int
sbb
sbb
sbb
shl
push
test
sahf
cmp
dec
jg
adc
and
cmp
out
je
mov
push
or
int
xchg
outs
jae
sbb
pop
in
lock
call
sbb
jp
scas
scas
mov
pop
loop
test
dec
mov
out
and
sub
pop
jl
fst
xchg
arpl
loope
imul
add
and
pop
mov
and
outs
inc
outs
and
dec
lea
sbb
scas
pusha
push
sbb
sbb
mov
sub
stos
add
push
xchg
push
icebp
mov
mov
mov
jo
test
pop
test
adc
icebp
out
cmps
or
or
into
jnp
ret
inc
pop
push
cmp
adc
or
in
push
das
cmp
xchg
nop
imul
jmp
je
pusha
push
dec
fucomip
xor
or
dec
inc
sub
fld
jbe
and
mov
xchg
cwde
sub
adc
popa
jp
jne
push
and
adc
ret
push
push
mov
cmps
int3
pusha
push
std
dec
cmp
cwde
sub
add
add
inc
dec
inc
or
dec
and
push
addr16
cmp
pop
in
push
sbb
mov
imul
adc
loop
adc
pop
or
push
push
js
bound
mov
sub
aaa
or
leave
add
lock
(bad)
mov
mov
test
sti
or
lds
sbb
out
sbb
add
mov
or
push
jle
test
pop
xchg
mov
dec
mov
outs
push
cmps
movs
pop
pop
fisubr
pushf
sbb
pop
loopne
paddb
aaa
mov
pop
mov
ds
push
mov
pop
dec
cmp
je
test
add
pop
mov
xor
(bad)
daa
xchg
movs
repz
inc
mov
icebp
jge
cld
sahf
in
inc
adc
sbb
cmps
stos
cmp
xor
pop
in
add
out
cmp
movs
add
nop
sub
cmps
fcmovu
jne
test
call
sub
cmps
push
(bad)
rcr
mov
sub
pop
push
jl
out
mov
shr
mov
inc
hlt
clc
loope
add
cmps
and
shr
mov
daa
out
out
and
test
aaa
mov
sbb
ds
push
sti
call
rcl
jecxz
mov
jne
adc
test
(bad)
nop
xchg
jno
xchg
jge
cmp
test
popa
jns
fcomp
mov
iret
xchg
ret
inc
sub
fcomp
inc
xchg
inc
shl
xchg
ret
mov
scas
jmp
dec
test
mov
or
xor
shl
mov
and
data16
sbb
or
push
mov
hlt
je
push
or
lea
mul
xor
pop
and
adc
into
(bad)
icebp
jge
in
cli
lea
aad
xchg
push
nop
push
movs
mov
cmp
fld
mov
mov
out
add
push
mov
fs
ins
fstp
lods
push
add
xor
je
adc
or
push
push
repz
int
aaa
pop
xor
loop
call
gs
cmp
enter
std
jne
mov
xor
cmp
adc
inc
inc
xor
loopne
adc
xchg
jmp
cwde
mov
adc
jo
mov
xor
pop
mov
mov
sub
mov
cmp
test
mov
test
jnp
mov
lock
popa
and
xor
push
lea
cmc
add
sahf
sub
pop
mov
and
pop
mov
call
push
mov
or
adc
jmp
push
(bad)
cmps
out
and
inc
cmp
ss
ret
or
sub
sbb
and
pusha
pop
jbe
scas
pop
rcr
xchg
test
clc
xor
retf
lea
frstor
sub
imul
test
or
inc
pop
xchg
sbb
rcr
or
and
out
dec
and
and
ret
aaa
fsub
inc
push
ror
psubq
mov
lock
mov
xor
dec
xchg
sbb
push
dec
aas
fdivp
not
xchg
lock
outs
fmul
push
pop
cmp
cmp
and
push
cmp
daa
mov
pushf
enter
pop
push
loop
sub
fs
mov
mov
(bad)
or
aam
mov
push
mov
call
ins
stc
and
inc
idiv
call
pop
and
inc
and
std
cmc
mov
call
sbb
out
mov
cdq
mov
imul
cmp
mov
popa
and
pusha
jp
shr
and
sar
or
mov
or
sub
pop
push
or
loopne
(bad)
dec
xchg
popf
ret
or
in
mov
add
inc
sub
stos
jmp
pop
shl
leave
push
aaa
cmp
fstp
or
adc
adc
call
ret
adc
clc
loopne
pop
add
pop
in
mov
add
retf
shl
fs
cmps
jp
mov
xchg
or
mov
jg
xchg
jo
aam
mov
xlat
sbb
dec
rol
fwait
inc
jo
sbb
lahf
into
mov
push
ins
add
pop
push
cmp
rol
repnz
mov
ins
in
dec
push
adc
in
pop
push
js
adc
ss
test
add
iret
in
cmp
adc
ss
clc
test
push
and
loope
adc
and
sbb
sbb
push
inc
jp
mov
and
xor
pop
loopne
add
jae
fldenv
aaa
pop
or
in
mov
shr
pop
mov
mov
mov
jb
je
add
jmp
adc
xor
je
out
mov
in
loopne
not
inc
push
xchg
adc
nop
retf
fs
pop
push
pushw
rol
scas
out
dec
rcl
iret
push
mov
cmp
cmp
push
mov
sub
call
aaa
mov
imul
inc
mov
cmp
sbb
mov
inc
dec
je
sub
test
xor
cli
dec
js
shl
or
pop
(bad)
mov
xor
stos
xor
inc
jbe
and
mov
sbb
mov
or
jle
adc
sub
das
xor
pmovmskb
(bad)
fadd
xor
cmc
xor
shl
sub
in
in
arpl
je
and
js
inc
dec
xchg
push
and
xor
inc
or
loopne
call
sub
xchg
push
sub
imul
out
or
xchg
push
add
add
adc
pop
icebp
push
rol
call
cmp
mov
fs
setbe
dec
xor
ficom
cld
pop
ror
xlat
xor
clc
or
adc
push
ins
mov
xlat
or
hlt
mov
xchg
aam
cs
mov
lock
push
xchg
std
mov
mov
inc
cmc
pop
cmp
adc
je
jo
ins
jns
js
div
push
xchg
inc
lea
loopne
mov
sbb
fiadd
add
cmp
adc
mov
test
cmp
pop
push
lock
in
mov
enter
repnz
lock
jns
not
sbb
mov
add
and
push
call
push
mov
sti
mov
(bad)
rcr
enter
je
test
inc
mov
xor
xchg
adc
or
inc
xchg
out
shr
sbb
sbb
loopne
nop
or
mov
mov
dec
push
and
mov
jmp
cmp
jbe
sub
xchg
sub
cmp
pop
mov
add
stos
sti
out
les
div
add
ret
dec
mov
add
loopne
or
cmp
and
sbb
mov
sub
xchg
mov
(bad)
(bad)
fisttp
dec
add
add
push
test
add
outs
add
push
outs
div
push
ss
je
dec
push
bound
push
int3
pop
or
inc
jle
xor
xchg
push
push
inc
cmps
sbb
xor
xor
fidiv
sub
pop
iret
pop
pusha
(bad)
or
(bad)
out
add
shl
mov
inc
and
mov
or
or
daa
aaa
aaa
test
add
adc
scas
inc
xchg
push
dec
and
adc
mov
inc
mov
aas
adc
mov
and
loopne
cmp
icebp
push
aas
pop
movs
mov
push
pusha
pop
mov
sbb
out
cmc
xor
lods
es
pop
mov
mov
and
call
jns
or
cs
je
push
out
lods
push
imul
adc
mov
test
mov
nop
sahf
cmp
inc
cmp
inc
xor
cmp
add
int3
push
push
push
mov
inc
ins
rcr
loopne
hlt
adc
popa
or
pop
lea
push
daa
cmp
popf
hlt
cmp
std
mov
push
shr
mov
popf
and
adc
add
push
and
push
imul
(bad)
sbb
xor
sbb
mov
jle
xchg
(bad)
or
cmp
cmp
jb
nop
addr16
ds
push
push
(bad)
adc
mov
pop
mov
jl
rcl
sar
fadd
mov
mul
push
clc
je
inc
pop
je
xlat
mov
pop
fs
fidivr
sahf
and
push
mov
enter
in
push
cmp
loopne
neg
push
into
sub
hlt
mov
cmp
sub
add
push
adc
add
push
retf
xchg
lods
fild
or
sbb
jne
add
aas
imul
add
idiv
fidiv
adc
xchg
or
add
clc
(bad)
or
adc
pop
sub
dec
adc
out
xlat
push
mov
js
or
push
dec
clc
jne
dec
(bad)
xor
add
or
nop
ds
push
push
ret
loop
push
sbb
add
ret
push
pop
in
mov
mov
cmp
adc
mov
fs
xchg
(bad)
scas
sub
mov
cmp
sete
bound
sub
imul
adc
push
or
ror
sar
mov
sub
adc
test
cmp
pop
adc
rol
sbb
add
pusha
jg
test
jl
inc
xor
jbe
or
sbb
mov
dec
int3
add
jmp
inc
dec
jne
or
sub
inc
hlt
ss
jb
jge
inc
ret
in
inc
adc
psadbw
cmp
jmp
or
jp
xlat
lods
mov
test
and
add
add
push
jo
leave
jnp
push
fcomp
pop
add
sar
rcr
je
lods
or
sar
adc
dec
sub
cmp
hlt
mov
ret
sbb
pop
sbb
jne
mov
push
push
stos
sti
rol
jmp
or
inc
or
fcomp
fild
jne
cmp
daa
inc
test
clc
push
jne
lea
lock
mov
add
das
sub
out
or
(bad)
icebp
lods
inc
fcom
mov
cmp
cmp
mov
cmp
or
loopne
test
adc
xor
mov
arpl
mov
hlt
cmp
aam
pushf
mov
jnp
jne
sub
sti
add
adc
jle
and
mov
mov
xchg
mov
sub
jmp
or
cmp
adc
das
and
popf
(bad)
xor
(bad)
pop
add
test
add
cli
push
(bad)
push
lock
mov
cmp
jg
cli
fcom
cli
ret
ret
sub
jb
sub
fisttp
push
sbb
xor
inc
cmp
add
push
jnp
test
sbb
xor
cmp
add
add
sti
mov
cli
lods
enter
pop
jmp
sbb
jmp
ja
in
mov
and
icebp
mov
sbb
xor
push
popa
push
es
pop
sbb
jle
cmp
test
mov
pop
rol
add
jle
mov
mov
adc
xor
out
pop
adc
push
or
dec
nop
and
sti
loopne
pushf
ss
dec
cmp
int3
loope
mov
rcl
sbb
xor
sbb
push
cmp
mov
in
out
pop
test
sub
xor
mov
xchg
lahf
jmp
scas
mov
add
jmp
xchg
es
fsubr
movs
push
sahf
test
je
push
cmp
call
stos
imul
mov
fnstenv
js
inc
xor
in
mov
jo
push
xchg
xchg
adc
clc
loopne
jmp
inc
pusha
inc
iret
xchg
out
in
aaa
sbb
inc
(bad)
loopne
outs
sub
ss
sub
rcl
stos
inc
mov
jg
movs
sbb
and
ja
push
mov
call
mov
add
and
mov
adc
cmp
add
or
inc
inc
jae
add
and
rol
jb
ret
das
add
fwait
dec
sbb
idiv
nop
mov
pop
test
pop
fld
dec
and
cmp
or
mov
not
or
scas
jmp
xchg
sbb
push
enter
cmp
mov
adc
push
imul
sbb
call
jmp
sub
pop
ja
xor
scas
popa
dec
add
push
loope
dec
or
jo
ficomp
scas
pop
jmp
mov
or
call
push
pop
push
out
xor
mov
or
shl
lea
cmp
sbb
and
inc
sbb
out
sub
mov
or
loope
mov
xchg
jo
inc
pop
mov
xor
rcl
mov
mov
loopne
fisttp
xor
jnp
(bad)
push
sbb
ret
stos
popa
mov
cmp
jmp
dec
xchg
and
or
out
xchg
adc
add
inc
sub
(bad)
icebp
push
cmp
push
mov
dec
xor
sbb
mov
jo
loopne
mov
and
adc
adc
mov
movs
call
mov
scas
and
mov
shl
cmps
mov
js
cmp
inc
mov
test
mov
jne
push
loop
mov
push
inc
dec
jne
pop
pop
stos
jno
inc
daa
mov
sti
pop
sbb
pop
lods
call
scas
test
pop
sub
mov
adc
cmps
sub
add
movs
clc
sbb
push
call
adc
fwait
push
xlat
ror
inc
enter
add
outs
push
xchg
and
lea
fadd
cmps
js
mov
mov
cwde
out
cmp
movs
icebp
add
movs
inc
jmp
js
adc
mov
inc
lea
shl
mov
and
cdq
xor
mov
push
jmp
icebp
inc
lock
(bad)
arpl
cdq
cmp
adc
loop
daa
sbb
fs
inc
or
ret
stos
lock
rcl
inc
and
mov
movs
xor
hlt
inc
or
neg
xchg
movs
push
jnp
int3
in
inc
pop
pop
jl
add
retf
or
adc
push
pop
icebp
(bad)
adc
add
test
dec
icebp
fcmove
popa
ja
aas
cmp
mul
inc
push
mov
sti
aaa
sti
jle
sub
push
adc
push
sub
push
push
push
push
fwait
and
lds
popa
or
imul
pop
test
je
ret
and
or
aad
adc
add
sub
dec
inc
lods
into
xor
add
pop
and
dec
inc
sub
and
jmp
inc
or
clc
in
lea
xchg
inc
fadd
dec
mov
jbe
int
test
les
and
sub
clc
or
mov
mov
inc
stos
call
or
mov
jl
inc
push
dec
add
push
sub
xchg
je
push
jg
(bad)
das
xchg
shr
(bad)
pop
sub
xor
add
push
cmc
mov
add
push
mov
push
cmp
mov
inc
inc
jp
ja
popa
jne
imul
dec
xor
cmp
out
and
pushf
xchg
push
fsub
fnstsw
scas
rol
out
(bad)
popa
pop
add
push
cmps
inc
add
out
loop
jg
and
or
push
xchg
jl
aaa
fwait
test
cmps
dec
xchg
clc
lea
arpl
xor
(bad)
hlt
lods
xor
inc
xor
fild
adc
mov
adc
out
dec
mov
dec
add
int3
adc
cdq
xor
jmp
inc
fimul
mov
scas
mov
imul
push
push
fcomp
pop
mov
mov
mov
and
gs
sti
adc
add
xchg
mov
mov
lods
adc
jne
add
stos
lods
lods
(bad)
adc
mov
dec
sub
jle
adc
dec
or
push
jmp
sbb
dec
enter
jg
and
jmp
adc
pop
add
fimul
ret
add
ret
push
or
clc
add
cmp
ret
pushf
adc
je
or
add
shl
or
or
int3
fdivr
enter
aaa
loopne
mov
add
out
adc
push
lahf
adc
xchg
mov
cdq
dec
jne
adc
inc
std
add
dec
and
lea
ins
dec
or
cmps
stos
sbb
sahf
xor
sub
sbb
jmp
outs
or
jmp
adc
push
jo
or
ror
(bad)
cmp
jle
jle
or
(bad)
imul
mov
cmp
movntq
add
mov
push
push
cmp
xchg
sahf
inc
dec
pop
cmp
xchg
ds
mov
in
jne
add
shl
scas
rol
popa
je
aaa
sti
fwait
jae
cmps
or
mov
mov
or
sbb
mov
or
into
xor
dec
jb
test
push
push
rcl
or
retf
and
jbe
je
dec
clc
adc
mov
shrd
pop
push
cmp
dec
vmread
fdiv
scas
cmp
or
cmp
je
xchg
mov
jns
sub
dec
jb
(bad)
adc
push
cmp
sub
cmp
cmps
dec
(bad)
mov
and
(bad)
in
sbb
push
loopne
mov
cmps
xor
imul
push
ja
mov
cmp
and
add
push
data16
or
push
xchg
movs
add
rcl
jae
scas
idiv
(bad)
jmp
in
push
jae
mov
leave
mov
push
and
pop
push
add
push
pop
lock
inc
inc
sbb
jle
clc
mov
lea
movs
add
pop
ins
ror
mov
sbb
dec
dec
je
cmp
jne
cmp
in
cmp
adc
fld
cmp
int3
push
jbe
push
ins
jmp
push
in
fsubr
in
jns
adc
(bad)
pop
loopne
mov
add
push
mov
xor
rol
in
and
inc
cwde
loopne
push
sbb
adc
ins
es
xor
sbb
mov
jge
pop
cli
js
mov
daa
sub
mov
inc
and
mov
test
aas
xchg
mov
sbb
dec
rcl
mov
pop
daa
movs
pop
adc
mov
mov
add
adc
cwde
scas
rcl
mov
push
fsub
add
jp
add
or
add
push
jmp
fmul
dec
(bad)
dec
mov
std
pop
xor
cmp
and
jge
pop
mov
jmp
inc
dec
jne
and
or
pop
sbb
lds
lods
out
add
cmp
adc
jp
jo
add
mov
pop
cmps
add
adc
sti
push
scas
pop
pop
outs
outs
cmp
push
sahf
push
sbb
dec
sbb
xchg
dec
adc
and
jnp
sbb
push
mov
sahf
jo
inc
jne
stc
ds
jmp
push
push
pop
add
mov
movs
push
pop
inc
dec
scas
ret
cmps
push
fdivr
dec
inc
and
stos
push
lods
sbb
fist
sub
pop
mov
push
mov
loope
and
dec
sub
mov
(bad)
repnz
sbb
out
rcl
in
add
out
cmps
fld
test
rcr
and
inc
sub
mov
hlt
fistp
icebp
test
push
(bad)
adc
mov
pop
adc
inc
movs
test
add
test
fmul
and
sbb
lods
pop
or
pop
(bad)
xchg
ret
push
push
push
adc
inc
or
(bad)
push
adc
div
cwde
enter
fmul
cld
sti
or
sub
adc
cwde
sbb
stos
adc
jmp
mov
xor
icebp
or
cmps
fsubr
(bad)
or
lock
leave
mov
les
add
and
cwde
and
jno
add
pushf
pop
ins
adc
mov
jne
daa
fdiv
shr
hlt
mov
(bad)
shr
mov
lock
lock
es
dec
jne
repnz
mov
add
adc
adc
jp
add
add
ss
and
lds
(bad)
rol
or
adc
jns
mov
cld
(bad)
call
push
je
nop
and
mov
bound
xor
pop
out
push
adc
or
out
jae
or
xor
js
neg
ss
dec
sti
pusha
les
adc
sbb
jb
shl
pop
rcr
dec
cmp
icebp
inc
mov
div
lea
mov
dec
mov
push
cmp
sub
imul
lock
lea
pop
inc
mov
jmp
push
jne
shl
jl
outs
not
or
les
jo
mov
push
or
xor
sub
dec
or
das
ss
je
out
add
adc
xor
mov
std
cmp
adc
cmp
movups
add
mov
xchg
jo
push
mov
cmp
mov
mov
xchg
mov
js
adc
ret
and
pusha
adc
ror
inc
push
cmp
je
pop
loope
hlt
xor
outs
ss
add
push
fadd
xor
leave
sbb
loopne
stos
cmp
or
push
int
adc
stos
fdivr
(bad)
sbb
sti
push
pop
jl
mov
and
cld
jbe
xchg
in
inc
add
fimul
sbb
mov
ret
cld
sbb
xchg
or
add
mov
in
adc
cld
pop
int3
out
cli
arpl
jne
mov
popf
push
inc
pusha
int3
mov
adc
daa
mov
or
je
out
jmp
mov
push
ret
scas
(bad)
cmp
xchg
je
mov
ins
jne
cmp
daa
sbb
mov
add
mov
sbb
pop
js
pushf
pop
cmp
(bad)
mov
lock
cmp
std
adc
adc
sub
rol
adc
sbb
movs
mov
int
xor
jmp
jns
add
jo
cwde
xor
repnz
push
cmp
adc
fmul
in
jg
fld
into
jl
out
mov
cs
cmp
or
jae
jb
test
and
jo
sub
adc
call
mov
sub
adc
ret
push
mov
jno
and
mov
mov
push
arpl
xchg
shl
inc
pop
push
outs
sbb
and
sub
dec
pop
sar
jns
adc
int3
sti
in
mov
sub
and
push
pop
sar
sub
pushf
inc
daa
loope
pop
xchg
loopne
(bad)
(bad)
mov
scas
push
cmp
jne
(bad)
(bad)
ins
das
mov
mov
sub
clc
shl
cwde
rcr
or
cwde
fnop
add
and
add
lods
push
lds
xor
outs
xchg
mov
xor
push
int
cld
sub
mov
in
not
loope
mov
cmp
jge
popa
xchg
jnp
sub
mov
add
push
xchg
adc
popa
cmp
mov
ja
or
mov
xchg
(bad)
jmp
rcr
sahf
push
jo
pop
mov
cmp
cmp
rol
dec
adc
or
xchg
push
jne
sub
and
je
or
repnz
scas
xchg
jo
mov
and
(bad)
cmp
jne
pop
js
scas
mov
test
push
jmp
rcl
jnp
inc
daa
mov
imul
lock
cmp
xchg
jo
jbe
adc
adc
jmp
mov
sub
push
movs
sbb
test
pop
or
mov
jmp
test
adc
fadd
jnp
cmps
scas
mov
(bad)
loopne
and
jne
add
mov
stos
mov
(bad)
neg
dec
pusha
adc
popf
ds
mov
leave
fcomp
xlat
out
stos
or
cmp
adc
jo
push
cs
sbb
mov
in
je
inc
call
fs
or
mov
mov
daa
cmp
dec
add
test
adc
adc
xor
and
daa
push
sub
cmc
pop
and
sub
inc
cmp
jg
push
and
fcom
push
in
lods
mov
daa
push
cdq
jmp
or
cmp
sub
ret
cs
adc
push
fwait
and
loopne
jnp
add
in
mov
(bad)
adc
or
(bad)
scas
shr
je
push
pop
mov
cmp
movaps
pop
jo
dec
and
test
adc
js
mov
sbb
xor
dec
adc
push
xor
test
inc
adc
call
pop
adc
jg
push
dec
cwde
shl
daa
leave
dec
ret
adc
pop
test
jo
inc
xchg
pop
jmp
bound
pop
xchg
jne
call
mov
sub
and
inc
cmc
aaa
xor
mov
or
add
push
and
mov
nop
ins
dec
mov
jae
inc
nop
push
push
sbb
rcl
sti
and
inc
int
mov
jp
adc
jne
or
cmp
stc
das
push
sbb
add
push
ins
stos
mov
or
lea
lea
test
in
loopne
add
sar
jge
rcl
xchg
shr
xor
add
ror
or
mov
mov
mov
pop
out
ds
std
sub
jb
test
xor
sbb
pop
(bad)
mov
sbb
jmp
or
inc
js
mov
jmp
das
dec
pop
or
cmp
and
pusha
out
adc
adc
dec
pop
push
loope
add
pop
in
adc
adc
shl
rcl
(bad)
clc
in
jp
push
cmp
xchg
shl
sbb
inc
inc
dec
push
or
es
jmp
or
add
pop
in
sahf
inc
push
cli
sub
sbb
push
or
sub
add
cli
fld
sub
xor
sub
pop
test
xor
or
(bad)
or
mov
fisubr
push
test
inc
adc
fwait
or
inc
mov
es
push
xchg
sbb
aam
pop
pop
sar
mov
sbb
mov
outs
leave
mov
xchg
call
call
adc
imul
addr16
xchg
(bad)
push
push
retf
sub
mov
mov
sbb
add
or
mov
sub
js
jp
shl
xor
jge
xor
pop
mov
xor
daa
add
ror
daa
pusha
mov
shl
sub
test
fld
std
pushf
sbb
jle
push
adc
sbb
(bad)
shl
fidiv
daa
mov
push
ins
jne
xchg
dec
mov
in
sub
xlat
mov
jle
jmp
sti
out
or
inc
add
inc
add
add
push
dec
ds
lea
adc
add
dec
in
ror
out
mov
or
jne
lea
jo
inc
mov
sub
pop
in
pop
lea
mov
mov
or
mov
ins
xchg
imul
adc
inc
adc
lock
and
sbb
add
or
inc
cld
lea
in
(bad)
jmp
and
jg
pop
in
add
inc
stos
or
repnz
lds
xor
rep
and
inc
aaa
mov
jmp
mov
and
leave
loopne
cmps
cli
lea
and
in
scas
push
mov
sar
pusha
pop
or
push
je
cdq
fdiv
jecxz
loop
push
shl
add
push
jne
sahf
cs
bound
call
enter
mov
test
or
call
adc
xor
test
or
shl
in
lods
ins
test
loopne
fcom
cmp
shl
xadd
inc
adc
cmp
push
inc
push
in
add
retf
lea
dec
clc
hlt
dec
add
adc
arpl
mov
push
cmp
pusha
(bad)
adc
(bad)
dec
pushf
inc
and
fist
enter
mov
loop
sbb
sub
push
push
icebp
add
and
je
mov
xor
rcr
sub
adc
sub
aam
in
push
mov
fisub
sbb
pop
lock
push
mov
mov
pop
rcr
out
cmp
jne
push
ror
or
mov
mov
jmp
cmp
or
adc
inc
xchg
push
clc
adc
test
dec
pmulhuw
leave
cmp
cwde
int3
adc
je
push
mov
dec
lea
fbstp
jnp
addr16
jne
jne
(bad)
stos
and
mov
(bad)
jne
lea
mov
cwde
fisttp
xlat
mov
ja
(bad)
std
pop
ror
lods
xchg
lods
lahf
cwde
jne
or
aaa
addr16
pop
adc
lods
add
wrmsr
push
xchg
push
into
or
fld
mov
mov
add
inc
push
add
dec
xchg
xchg
push
add
mov
inc
ds
in
xor
pop
mov
pop
call
xor
das
cmp
pop
(bad)
leave
sbb
pop
xor
mov
add
jp
sbb
inc
(bad)
ror
(bad)
repnz
add
xchg
loop
push
jmp
xchg
mov
inc
mov
mov
cmp
fwait
xor
arpl
jbe
jmp
pusha
adc
add
ins
adc
add
shl
mul
or
fsubr
fdiv
adc
iret
sbb
or
adc
je
mov
cmp
jne
fisub
and
or
push
push
sub
test
pop
push
add
pop
test
ror
push
fs
repnz
add
dec
xchg
call
xor
loope
ja
xchg
nop
aaa
mov
and
add
lock
or
cmp
add
mov
add
add
popa
pop
mov
push
mov
mov
sar
lock
sub
xor
and
sbb
movs
sbb
mov
aam
inc
enter
out
(bad)
push
cld
jmp
mov
mov
cmp
push
adc
push
dec
jmp
jne
gs
mov
or
out
shr
(bad)
and
xchg
and
or
xchg
or
push
mov
movs
(bad)
in
pop
popa
test
pop
icebp
test
fadd
adc
adc
add
sub
cmps
mov
dec
not
and
and
dec
mov
or
mov
fadd
mov
pop
add
repnz
cmp
sub
jne
lock
dec
and
test
popa
and
mov
sbb
mov
and
inc
pushw
dec
push
cmc
pop
jmpw
sbb
js
mov
outs
sub
push
add
dec
mov
or
sub
dec
retf
mov
and
push
mov
pop
rol
or
add
xchg
adc
add
out
clc
xchg
ins
(bad)
clc
inc
mov
add
xchg
or
push
sbb
cmp
mov
inc
add
pop
ja
iret
and
push
sbb
mov
nop
xlat
or
push
test
fadd
rol
jns
xchg
mov
pop
cmp
jmp
cmp
je
scas
inc
std
push
adc
mov
and
and
mov
push
or
add
jns
clc
outs
inc
lock
add
inc
push
or
push
in
and
mov
or
inc
frstor
clc
push
je
scas
adc
fist
sti
sub
push
fsub
out
les
cmp
iret
fs
mov
sub
pop
ret
adc
imul
inc
ror
adc
mov
mov
jg
pop
es
out
pop
sub
cmp
(bad)
adc
xchg
outs
lds
add
dec
cmp
push
jecxz
pop
and
pop
add
pop
ret
fimul
and
daa
jl
or
cmp
aaa
test
mov
mov
mov
xor
pushf
jno
push
cmp
sub
mov
sbb
stos
js
lock
cmp
mov
push
in
mov
or
scas
jl
sbb
test
inc
lock
(bad)
in
or
jg
push
sub
push
or
cmc
sbb
loope
dec
pop
ret
jne
push
cmp
fs
lea
xchg
pminub
sbb
add
inc
dec
mov
and
mov
sbb
and
inc
add
adc
mov
sbb
jge
mov
push
in
outs
scas
inc
mov
sbb
jmp
pop
movs
loopne
push
jle
pop
test
ficomp
mov
fcomp
les
mov
(bad)
sub
leave
dec
fisttp
add
retf
jmp
daa
mov
adc
add
xor
or
or
push
pop
or
jl
push
adc
and
sar
mov
rol
dec
cmp
jl
push
shl
test
inc
out
mov
test
mov
xchg
fcom
jne
ror
(bad)
cmp
sub
mov
sbb
ins
lock
mov
sbb
popf
adc
int3
mov
not
and
jmp
push
nop
lock
pop
popf
je
sahf
inc
push
in
or
in
rol
mov
aaa
or
or
add
or
test
aam
scas
or
or
call
inc
adc
popa
das
int
lods
add
cdq
and
js
nop
dec
mov
mov
add
xor
imul
adc
push
shr
fnop
jo
inc
mov
daa
int
and
(bad)
loope
mov
and
fst
ror
retf
and
rol
push
xchg
pop
and
js
mov
frstor
pop
in
mov
inc
push
std
inc
mov
push
sbb
dec
lock
push
in
and
xor
jmp
dec
add
in
out
in
xor
cmp
mov
sbb
mov
shl
mov
ret
add
outs
or
test
mov
sbb
enter
je
push
out
mov
imul
shl
jle
or
rcr
test
push
inc
and
popa
cmp
lock
mov
push
aaa
mov
sbb
ror
repnz
jae
mov
test
outs
mov
shl
loopne
cmp
je
js
lods
xor
xchg
scas
(bad)
sub
test
jl
inc
mov
lea
add
fcomp
pusha
jnp
inc
dec
jne
fdivr
push
push
adc
xlat
jno
lea
ds
xor
mov
fsub
or
cmp
call
ror
and
inc
cmp
les
das
mov
shr
add
int
ret
jmp
fisubr
mov
sbb
mov
sub
or
movs
sub
mov
pop
cld
loope
mov
sbb
mov
mov
or
loope
imul
lock
jne
movzx
mov
arpl
sub
outs
fucomip
sub
mov
lahf
mov
mov
xchg
or
sbb
pop
iret
(bad)
xchg
pop
jle
test
xchg
sbb
push
push
push
ror
xor
lds
cmp
sbb
mov
aad
push
jle
mov
(bad)
xchg
sub
out
clc
add
icebp
fs
js
push
(bad)
jp
(bad)
push
cmp
sub
rcl
dec
inc
add
inc
push
ss
mov
adc
dec
xor
ret
pop
mov
(bad)
je
or
cmp
mov
fs
mov
adc
or
sbb
ror
(bad)
sbb
pop
push
in
mov
inc
cmp
sub
addps
adc
add
nop
add
dec
or
or
push
push
mov
push
fmulp
and
aad
cmp
add
xchg
test
xorps
jg
call
push
adc
gs
sbb
adc
or
mov
xor
or
dec
pop
pop
jecxz
jb
add
pop
ins
es
pop
outs
lea
mov
mov
and
lock
cmp
adc
sbb
mov
mov
dec
adc
jmp
cmp
or
adc
push
sahf
nop
shl
mov
cmps
call
pop
xchg
popa
stc
addr16
pusha
adc
maskmovq
imul
add
cmp
sub
je
jb
scas
fstp
ret
retf
or
and
and
outs
lods
adc
or
add
mov
push
aam
and
arpl
adc
inc
pop
aaa
sbb
mov
sbb
push
popa
or
call
daa
or
cmp
cmp
inc
add
shl
push
ins
and
or
xchg
add
sbb
sub
jmp
jb
jmp
add
jp
dec
add
stc
add
leave
stos
into
and
neg
(bad)
adc
shl
mov
pop
out
adc
daa
loop
pop
inc
cmp
mov
push
push
xor
pushf
pop
mov
mov
fcomp
xor
mov
and
dec
nop
xchg
js
je
xor
loope
add
sub
xor
sub
out
mov
xchg
sub
xor
jne
outs
adc
xlat
xchg
imul
mov
cmp
shl
push
dec
clc
inc
jle
push
cs
loopne
pop
jmp
adc
xor
mov
add
mov
mov
sub
push
add
adc
fdivr
mov
pushf
call
loop
mov
clc
push
lea
pop
repz
shl
sub
loopne
inc
lock
pop
in
inc
mov
adc
rcr
push
pop
pop
enter
int3
adc
mov
push
outs
in
xchg
sub
ins
push
mov
mov
test
or
jge
jne
rcr
add
fild
pop
xchg
and
loopne
or
jle
jecxz
mov
in
ds
mov
mov
(bad)
adc
stc
pop
hlt
sub
xchg
sub
xor
push
add
xchg
fmul
add
dec
xor
data16
push
xchg
dec
adc
clc
dec
inc
jle
xor
adc
leave
jbe
mov
icebp
in
lock
adc
add
or
ror
inc
outs
push
ret
push
dec
sbb
loopne
call
stos
jo
xor
cmc
pop
imul
add
shr
cdq
xor
sub
fcom
cmp
fwait
cmp
sub
mov
sub
mov
fdiv
int3
push
repnz
ret
loopne
sbb
sbb
and
(bad)
in
test
test
popf
adc
mov
jne
movs
push
jbe
xor
pop
adc
xchg
dec
cmc
mov
movs
xchg
push
cmc
int3
push
lea
cmp
fucomip
sbb
fcomp
or
sbb
jae
pop
inc
and
pop
dec
add
addr16
and
and
sbb
add
mov
sbb
cmps
ror
neg
mov
out
test
cmp
inc
rcl
ds
ja
jo
ret
adc
(bad)
and
inc
(bad)
xor
jp
push
adc
push
pop
mov
pop
rol
pop
nop
xor
ror
xchg
in
sbb
sub
mov
mov
mov
dec
push
cld
cmp
jg
ins
jle
loopne
ret
and
enter
clc
jp
mov
mov
add
pop
xor
cmp
lods
jge
cmp
and
cmp
jle
call
pop
inc
retf
arpl
cs
fsub
in
dec
add
enter
mov
inc
popf
jo
add
mov
(bad)
je
mov
adc
pop
bound
lock
or
xor
es
loopne
pop
cld
adc
add
not
or
and
mov
inc
cld
sbb
cmp
mov
or
mov
sbb
xchg
and
xchg
jo
xor
test
lods
pop
jb
lahf
inc
mov
rcl
dec
(bad)
fild
push
dec
sub
data16
fiadd
sub
call
or
shl
add
xor
addr16
inc
xor
push
psrad
mov
adc
outs
lods
add
(bad)
push
or
je
or
je
push
jmp
bound
pusha
add
imul
test
adc
sbb
out
pop
movs
push
pop
jo
mov
jmp
add
je
cmp
call
stc
ds
or
adc
cmp
add
fld
and
in
cs
jmp
bound
icebp
add
mov
xor
imul
ret
dec
lods
add
cmp
push
int3
loop
ins
add
pop
jae
pop
jne
in
icebp
popa
adc
xor
xor
sub
test
jo
sar
jns
adc
mov
ja
cmp
js
sar
jns
cmp
dec
aas
add
or
mov
jne
aad
dec
std
jnp
jge
jge
syscall
pusha
imul
push
mov
pop
fidivr
sbb
pop
sbb
clc
xor
dec
or
(bad)
or
scas
pop
lods
jno
loopne
nop
jp
dec
mov
push
fsub
movzx
sub
jae
loopne
pop
xchg
jne
mov
add
sub
mov
jle
js
cmp
je
dec
mov
pusha
cmp
int3
clc
rol
cli
cmps
rol
add
sub
and
xor
and
dec
cli
mov
add
retf
(bad)
cmp
and
popa
xchg
cmp
leave
and
inc
xor
add
sbb
sbb
sub
cmp
adc
ss
or
popf
add
and
sbb
inc
sub
int
(bad)
fld
push
push
test
sub
dec
jnp
jg
push
pop
shl
or
xor
shl
fld
xchg
sbb
cwde
push
cmp
xchg
ficom
jp
mov
fcmovb
add
int3
clc
data16
and
jnp
inc
nop
dec
xor
fnsave
xchg
sub
cmp
mov
sub
inc
pop
imul
and
push
and
mov
das
inc
adc
push
push
hlt
pminub
xchg
jo
xor
mov
xchg
mov
nop
push
mov
arpl
out
cmp
mov
fistp
adc
add
outs
in
jae
sbb
ins
xor
add
ret
pushf
cmps
cmp
or
cs
dec
pop
xor
add
mov
sahf
xor
cmp
sbb
aam
sub
or
fstp
cmp
jmp
ja
push
and
loopne
les
push
pusha
dec
pop
ds
push
push
mov
pushf
dec
out
adc
add
ficom
out
cmps
repz
sub
jbe
sbb
lahf
jecxz
test
stos
aas
js
movs
(bad)
fdiv
pushf
jb
fidiv
fbstp
add
add
or
and
or
shl
shr
je
outs
lea
xor
test
ss
mov
mov
sbb
add
loopne
jne
movs
pop
stos
call
pop
arpl
mov
jo
cdq
fild
clc
mov
(bad)
lock
inc
xor
pusha
xor
sub
and
dec
jne
das
mov
and
add
and
shl
cmp
xor
int
in
or
cmps
xchg
adc
jno
and
lea
sub
test
sub
jb
dec
mov
cmp
pop
cdq
jmp
xchg
and
or
stos
dec
mov
add
mov
pop
and
je
sub
fcom
cmp
push
push
pop
cmp
sbb
in
xchg
mov
cdq
cmp
mov
ja
mov
(bad)
sbb
sbb
inc
in
jge
mov
and
or
rcr
(bad)
push
add
pop
fdiv
sbb
add
add
test
sbb
mov
xor
pop
nop
dec
inc
add
inc
pop
loop
inc
loop
mov
aad
dec
fcomp
ss
sahf
xchg
push
xchg
(bad)
dec
mov
pushf
xchg
lock
jbe
fild
rcl
mov
js
aaa
jnp
push
xchg
hlt
(bad)
xor
dec
add
sbb
push
xor
xor
pop
int
and
loopne
loopne
pop
fs
mov
adc
mov
mov
pop
je
and
repnz
or
jle
rcl
dec
(bad)
push
dec
test
ret
inc
add
sbb
fist
not
sbb
push
add
call
cdq
mov
cwde
or
adc
cmp
inc
jb
repnz
inc
ins
shr
adc
dec
jge
push
rcr
imul
push
push
daa
loopne
pop
xchg
cmp
adc
pusha
xor
(bad)
call
push
mov
push
je
xchg
shr
aas
popa
push
and
sbb
mov
add
cmp
push
jne
ss
inc
popw
or
stos
jbe
shl
jmp
pop
pusha
outs
mov
mov
xor
out
sub
icebp
test
jne
cmp
xchg
jo
and
pop
and
mov
lea
xchg
mov
jmp
push
add
retf
fadd
or
or
push
int
pusha
out
fs
jp
add
(bad)
and
pop
add
mov
cmp
dec
loopne
rcl
lock
lock
inc
add
push
dec
cs
leave
and
outs
cmp
mov
data16
retf
clc
dec
cs
cmp
loopne
adc
jmp
pop
sbb
xchg
lock
pop
pop
xor
js
nop
cmp
xor
dec
movs
mov
mov
jae
daa
inc
jmp
mov
in
xor
lock
cmp
loope
popf
pop
mov
xchg
outs
or
jo
test
inc
pusha
not
mov
fmul
xor
nop
aas
or
sar
movzx
data16
out
and
push
cmp
cli
or
mov
enter
fldpi
inc
inc
push
loopne
or
pop
add
add
add
shl
ret
sub
cmps
rcl
xchg
mov
sbb
out
fdivr
inc
mov
sbb
jle
je
shl
xchg
sbb
pop
jge
mov
ret
push
or
(bad)
jne
ds
out
arpl
sbb
xor
gs
sub
cs
jle
fst
xor
sbb
std
sbb
or
sbb
adc
loopne
jmp
nop
cmp
adc
xchg
test
and
or
imul
shl
scas
fbld
test
cld
cmp
xor
inc
add
jbe
cmp
ins
dec
adc
sbb
rcr
xlat
stos
fidiv
pop
inc
cli
fidiv
nop
xor
and
je
mov
jb
jae
adc
mov
into
xchg
nop
mov
xor
pop
jmp
dec
jne
call
inc
mov
arpl
dec
adc
stos
sahf
jg
dec
xor
inc
mov
mov
dec
test
loopne
clc
in
jl
inc
(bad)
mov
cmp
or
cdq
scas
inc
pusha
adc
pop
out
add
dec
dec
jne
rcl
cli
mov
dec
mov
dec
out
sub
sub
push
mov
sbb
clc
sbb
add
adc
adc
test
add
adc
les
rcl
pop
aam
mov
add
test
and
pusha
cmp
jne
xor
add
cwde
inc
cs
jbe
jo
sub
mov
repnz
add
add
cmc
jnp
jae
dec
xchg
jge
sub
scas
daa
scas
xor
bound
mov
out
dec
xor
lods
sub
pop
(bad)
neg
mov
push
shl
push
xchg
dec
and
sub
lock
outs
or
cmp
ss
iret
sbb
jmp
imul
inc
aad
sbb
rol
xor
ror
push
add
or
outs
pusha
cmps
inc
pop
or
out
out
xchg
and
xchg
test
mov
fldenv
rcl
sbb
xor
scas
pop
fcom
aam
xchg
pop
or
xor
sub
adc
ret
stos
jle
mov
and
adc
mov
sbb
popa
fisttp
mov
cmp
sbb
js
mov
or
test
adc
add
lock
dec
adc
add
mov
mov
jg
cmp
out
adc
dec
shl
icebp
mov
lods
jge
ror
stos
stos
js
or
inc
push
or
adc
xchg
sbb
cli
or
pushf
outs
adc
or
add
add
mov
pop
ficomp
add
inc
cmps
dec
add
shr
push
fs
and
jmp
scas
add
pop
mov
test
leave
(bad)
bound
mov
sbb
mov
push
cs
scas
inc
test
call
mov
nop
pop
pop
div
lea
or
inc
mov
stos
sbb
enter
or
or
cmp
test
stc
mov
sbb
xchg
adc
lock
lahf
lods
out
push
jmp
(bad)
dec
pop
or
xchg
push
xlat
mov
mov
nop
fild
cmp
in
jmp
daa
cmp
out
mov
daa
xor
je
loopne
inc
je
mov
leave
cmps
sbb
jo
add
pop
pop
sahf
sbb
add
rol
and
xchg
pusha
add
xchg
dec
mov
loopne
and
adc
or
dec
jb
bound
into
jp
add
loop
add
adc
adc
daa
cli
cmp
cmc
cmp
rcl
jle
(bad)
add
pop
cmp
jge
inc
inc
add
sub
jbe
ja
inc
ins
cmp
push
pop
xchg
jbe
ins
cmp
(bad)
inc
pop
cmps
fcomi
xchg
std
push
add
sub
inc
ins
xor
mov
sbb
jp
cwde
pop
mov
xor
not
test
in
mov
test
pop
push
mov
ret
xadd
cmp
jb
add
mov
mov
push
retf
sub
and
in
xor
iret
mov
sub
lock
loopne
xchg
mov
mov
mov
push
or
jbe
lds
or
jp
push
adc
push
and
dec
das
adc
adc
sbb
lods
xor
add
sbb
ja
xor
and
(bad)
(bad)
pop
add
inc
fs
adc
shl
push
mov
xor
mov
cmp
push
xchg
dec
nop
sub
and
popa
xchg
div
push
and
leave
adc
adc
push
ret
or
(bad)
push
fadd
push
js
in
jl
or
jle
push
sub
push
lock
jnp
loopne
inc
jns
dec
jo
test
ins
ds
cld
imul
out
daa
bound
add
rol
push
aas
shr
adc
aas
cmp
pop
mov
call
xor
add
jle
sub
inc
xchg
data16
ins
and
jl
sbb
xor
ins
jg
sbb
jge
xor
fist
add
adc
dec
(bad)
fild
or
fwait
inc
mov
out
or
dec
xor
icebp
jne
ja
retf
clc
mov
jns
adc
jbe
mov
jge
xor
or
or
ja
scas
(bad)
xor
adc
into
pop
loopne
pop
adc
sbb
sub
aaa
add
and
mov
lds
movzx
mov
sbb
(bad)
and
dec
push
outs
push
adc
mov
push
dec
sub
sub
(bad)
adc
dec
test
je
rol
push
cmp
push
stos
test
jle
movs
push
adc
mov
mov
add
loopne
add
movs
in
cmp
adc
shl
sbb
adc
fistp
scas
out
fisttp
hlt
add
sahf
jb
add
vaddsd
or
fs
mov
aas
xchg
sub
push
stos
sub
inc
add
sub
xor
es
dec
sbb
xor
mov
ds
js
inc
mov
mov
push
push
pop
(bad)
data16
mov
es
lock
fisttp
cmp
push
adc
bt
setb
jmp
shr
xchg
fmul
inc
dec
jne
push
xor
shr
add
daa
je
push
dec
push
or
add
sub
(bad)
sbb
out
adc
add
shl
pop
into
cld
adc
xor
out
aas
test
push
push
xor
scas
cmp
dec
test
jl
inc
xor
pusha
mov
adc
cmp
rcr
fistp
loop
mov
jne
pop
ret
cmps
loop
ins
pop
mov
jge
movs
movs
stos
jmp
jg
sbb
ret
push
js
cmp
jg
xbegin
or
xchg
add
in
test
daa
cmp
push
dec
xor
out
sti
mov
fwait
add
ins
mov
cld
fcom
mov
push
jo
retf
dec
pop
and
imul
bound
push
push
cmp
mov
out
je
inc
nop
js
leave
call
fadd
jl
addr16
pop
enter
and
ret
adc
push
inc
push
ss
cmp
jo
lahf
loopne
push
das
fidiv
sahf
inc
push
jo
(bad)
lock
mov
push
jg
mov
cs
movs
push
fisub
add
sar
add
mov
xor
or
sub
jmp
inc
add
push
imul
es
mov
imul
fcom
push
mov
pop
ins
sbb
les
sbb
repnz
inc
inc
retf
ret
lock
mov
cmps
fcmove
sahf
fld
or
jbe
jecxz
fdiv
(bad)
jecxz
inc
or
and
sbb
je
rcl
sbb
jmp
adc
cmc
mov
lds
push
das
dec
in
test
cmp
das
int
in
adc
sub
shl
mov
fild
lods
fdiv
outs
add
push
adc
cmp
or
and
setne
pop
and
lods
pop
mov
enter
adc
dec
or
mov
ja
lahf
adc
adc
adc
test
adc
in
xchg
ret
mov
mov
jecxz
push
(bad)
lea
cmps
in
mov
test
mov
sbb
jl
icebp
adc
mov
xchg
cli
push
lea
or
cmp
xchg
ins
sti
add
add
mov
add
xchg
loopne
nop
stos
mov
xor
inc
dec
cdq
fdiv
pop
jmp
pop
sbb
or
(bad)
outs
lods
xor
push
in
sub
add
sub
adc
push
enter
call
push
mov
sar
pop
pop
fstp
inc
cdq
fsubr
mov
nop
mov
and
ficomp
pushf
cwde
iret
and
ins
mov
pusha
outs
lock
or
mov
pop
popf
pop
cdq
pop
add
ss
cmps
in
call
adc
jne
sbb
or
(bad)
cmp
or
jmp
cmp
push
rcl
cmp
test
lods
mov
or
popf
xor
arpl
cld
pop
cmp
cmp
xor
inc
enter
xor
jbe
dec
pusha
sbb
xor
into
into
cmp
addr16
xchg
sbb
sub
pop
adc
loopne
out
or
and
sub
jmp
push
mov
call
and
sbb
add
idiv
in
mov
jl
push
jge
add
lds
mov
push
add
pop
mov
and
inc
add
test
pop
adc
mov
push
dec
pop
cmps
dec
sub
ret
cmp
dec
dec
sub
dec
dec
daa
ds
sahf
mov
dec
clc
or
or
dec
dec
mov
jno
outs
push
das
push
pop
inc
pop
and
mov
mov
jo
inc
jl
sbb
out
in
push
hlt
mov
adc
call
js
dec
repnz
js
mov
int3
add
inc
test
(bad)
iret
xor
xchg
add
out
push
sbb
int3
(bad)
and
dec
test
jg
ins
mov
sbb
fsub
pop
hlt
sti
add
inc
inc
jne
and
loope
pop
adc
sbb
ja
fisttp
mov
add
ins
out
push
cdq
fist
lock
add
and
mov
call
shl
sti
out
jl
mov
hlt
jg
cmp
push
fwait
xor
pop
mov
bnd
sti
cmp
add
dec
push
lds
mov
jae
dec
jno
imul
jmp
add
adc
jp
adc
sbb
or
fcomip
rcr
loopne
scas
sbb
xchg
cmp
je
push
push
mov
outs
bound
repz
push
push
add
repz
mov
mov
mov
add
push
ror
sbb
scas
xchg
stc
clc
push
test
nop
cli
dec
and
and
or
sbb
sahf
sub
xor
cmp
jne
das
clc
into
push
mov
adc
or
add
push
inc
bound
cmp
cld
nop
pop
push
sub
(bad)
imul
je
xlat
(bad)
stc
rol
popa
xor
xchg
push
dec
push
icebp
xchg
mov
mov
sub
push
out
add
test
adc
jmp
and
popa
pop
aam
inc
call
pop
aam
and
inc
neg
clc
or
inc
inc
cmp
int3
(bad)
mov
in
fld
push
jae
dec
inc
jl
enter
lock
add
test
push
loope
call
jge
loope
jnp
pop
fs
test
sbb
fimul
cmp
sbb
adc
fsubr
or
(bad)
les
sbb
int3
pop
imul
inc
sbb
ins
ja
ins
test
ins
or
jae
sbb
inc
mov
dec
cmp
lea
pop
sbb
xchg
sbb
sbb
ret
sbb
cmp
pusha
or
inc
movs
dec
repnz
jno
ins
xor
adc
push
lock
out
add
test
lock
sbb
lahf
jo
in
cmps
mov
xor
arpl
and
outs
push
add
jae
add
(bad)
inc
push
jb
sbb
cdq
pop
mov
sbb
push
push
ins
push
sub
scas
pop
or
inc
sub
dec
xchg
popa
xor
mov
and
dec
adc
push
xchg
dec
mov
out
aaa
inc
and
add
bound
add
xor
out
or
jecxz
setno
xor
cmp
push
es
push
lock
leave
mov
sar
cmp
aaa
rcr
cmp
sar
ins
push
je
mov
das
add
jmp
cmp
xor
mov
add
push
cmc
aad
stos
mov
out
jmp
mov
rol
hlt
lahf
mov
cmp
sbb
loop
(bad)
shr
push
in
inc
cmc
popf
pop
fiadd
sbb
hlt
sub
adc
or
xor
out
jp
adc
push
mov
jne
cmp
mov
popa
lods
and
sti
fisttp
jae
les
mov
or
rol
push
and
pop
test
mov
or
hlt
inc
add
and
std
pusha
pusha
shl
and
loopne
nop
cmps
jp
cld
add
or
pop
push
addr16
mov
mov
pop
sub
jns
cdq
pop
and
loopne
cmc
pop
pop
test
test
sbb
rol
mov
inc
mov
push
or
pop
or
cmp
mov
xlat
test
(bad)
cmp
movs
jl
pop
mov
cmp
std
add
(bad)
add
sub
int3
sub
cmp
mov
lock
xor
(bad)
shr
popf
data16
mov
div
xor
or
xor
int3
fstp
xor
xor
mov
popa
pop
cmp
add
and
loop
ins
ins
ins
sub
daa
movs
daa
cmps
ret
fwait
xchg
pop
hlt
push
out
fcmovu
add
xlat
pop
popa
cmp
arpl
(bad)
out
dec
ret
mov
adc
call
jnp
mul
xchg
push
call
push
hlt
jle
xchg
mov
repz
test
ror
push
fadd
imul
mov
sahf
push
push
push
add
iret
and
dec
jmp
sub
ficom
cmp
setl
jmp
sbb
add
mov
ror
cmp
sti
addr16
sbb
sub
push
loop
xor
(bad)
jo
mov
gs
push
loopne
push
dec
jp
jle
rol
add
sub
jae
shr
es
jne
stos
(bad)
adc
inc
inc
inc
lock
jl
dec
dec
fisttp
adc
xor
jne
cmp
jne
cld
adc
adc
(bad)
shr
lock
mov
fwait
jnp
add
lds
mov
push
sbb
xor
inc
inc
push
lock
add
add
cmp
sub
cmp
jbe
out
add
jmp
adc
jo
je
sub
mov
loop
push
ins
xchg
dec
xchg
test
call
cmp
sub
hlt
sub
add
bnd
lock
push
fmul
je
jae
jmp
iret
repz
ins
js
out
adc
mov
cmp
test
mov
add
jmp
sub
sub
lds
or
sbb
pop
popa
push
mov
push
xor
xor
pop
pop
(bad)
mov
and
inc
pop
push
daa
hlt
repz
add
pop
hlt
std
cmp
cmp
lods
inc
(bad)
das
pop
sahf
inc
ins
cmp
adc
xor
daa
mov
outs
xchg
cmp
fdivr
or
mov
jl
jne
mov
cmp
movs
mov
inc
pop
in
scas
gs
les
cmp
cmp
pop
hlt
je
cmp
inc
sar
in
push
cmps
xor
add
mov
(bad)
xchg
add
mov
retf
aas
xor
sub
js
cld
sub
mov
cmp
popf
xor
call
in
push
xor
scas
mov
(bad)
loopne
adc
lock
cmp
xor
fcom
lock
scas
mov
ins
inc
or
dec
bound
jecxz
dec
data16
sub
sbb
lock
fmul
scas
and
hlt
adc
addr16
and
scas
push
retf
push
mov
or
dec
jnp
add
add
adc
inc
pop
sar
clc
mov
pop
iret
or
mov
les
push
lock
add
mov
or
jmp
sti
add
dec
sbb
lock
mov
pop
jg
lea
nop
push
pop
dec
cmc
shr
mov
push
loopne
je
imul
ja
add
add
xchg
sbb
inc
call
or
mov
pop
lea
pushaw
mov
rol
dec
push
push
clc
add
xchg
cmc
shr
ja
cdq
inc
daa
or
icebp
ret
das
loopne
pusha
or
add
inc
and
jp
test
and
inc
fwait
pop
add
adc
scas
rol
fnclex
push
jmp
movs
xchg
mov
or
fisub
mov
lahf
sahf
das
ds
xor
aam
cdq
dec
lock
inc
js
or
inc
push
push
xor
aad
pop
test
inc
inc
dec
mov
jge
mov
test
fiadd
cmc
or
loopne
push
pusha
jg
jmp
cmp
mov
pop
loopne
lods
mov
je
clc
xor
rol
inc
pusha
sbb
sbb
out
pop
outs
push
mov
jl
add
push
lods
mov
je
inc
add
fild
ins
or
or
push
mov
outs
push
sbb
adc
lahf
into
inc
sub
bound
pop
ret
push
push
lahf
pop
jg
popa
lds
inc
jne
push
push
or
sbb
or
or
out
inc
pop
push
adc
out
mov
xor
sbb
push
das
bound
mov
sub
mov
cmp
je
inc
js
inc
arpl
aam
mov
jb
in
xor
cmp
cmp
inc
pop
mov
mov
add
or
sub
jp
push
ds
and
je
and
fld
int
pop
push
lock
mov
mov
push
add
dec
mov
sbb
cmp
or
xchg
nop
sub
add
ds
cli
cmp
cmc
sbb
pushf
ins
dec
push
sbb
pop
div
aaa
push
jbe
adc
sbb
mov
pop
mov
mov
add
pushf
and
push
add
cli
sub
pop
test
sbb
xor
cli
sbb
and
sbb
sbb
mov
fs
add
inc
xchg
or
cmp
or
out
aaa
mov
xor
cmps
add
xchg
sbb
fadd
jl
fwait
call
add
ss
cmp
sub
in
push
mov
dec
movs
(bad)
push
jb
pushf
clc
mov
mov
dec
xlat
adc
(bad)
mov
inc
xor
sbb
inc
jne
mov
inc
fadd
or
pop
sbb
pop
cs
and
cmc
clc
shl
or
add
xchg
inc
mov
cmc
out
xchg
cmc
cwde
pop
aaa
shl
add
sbb
add
imul
jne
fmul
add
inc
(bad)
mov
jmp
or
(bad)
jne
repnz
sbb
aaa
ins
sbb
add
or
add
push
punpcklbw
shr
mov
js
ds
loopne
add
enter
and
inc
or
ja
cmp
aas
mov
clc
mov
xchg
es
mov
push
push
xor
add
mov
and
pop
mov
pop
out
(bad)
or
sub
adc
cdq
mov
outs
mov
je
and
sbb
dec
push
cmp
add
loope
cmps
mov
cmp
and
fidiv
push
jl
enter
xchg
dec
mov
xchg
jae
cmp
pop
xor
xchg
add
sub
and
inc
mov
sar
push
pop
or
inc
or
ins
add
or
and
loop
enter
hlt
push
sbb
sbb
(bad)
or
sbb
aas
xor
mov
les
xor
sub
xor
aam
sbb
pop
sub
adc
mov
push
mov
and
pushf
or
push
push
dec
in
adc
or
cwde
adc
inc
adc
xchg
cli
lea
in
mov
push
and
in
in
or
add
lea
sub
aas
dec
cmp
cs
inc
cs
data16
fist
jbe
cdq
mov
and
fist
fdivr
and
addr16
sub
sbb
adc
loop
adc
cld
inc
outs
push
outs
or
push
jmp
inc
jge
cmp
and
shl
fisttp
jge
cwde
or
adc
jnp
dec
ret
(bad)
push
inc
add
add
add
fwait
lock
mov
mov
packssdw
or
cs
ds
push
push
dec
jg
inc
sbb
xor
dec
sbb
xchg
scas
sub
test
popf
test
xchg
pop
pushf
jb
adc
jae
test
jl
pop
pop
dec
iret
imul
icebp
shl
sahf
dec
cs
mov
test
sbb
out
mov
push
addr16
sbb
cmp
enter
popa
scas
ret
and
mov
add
mov
stc
jne
mov
out
add
fucomi
sbb
mov
xor
pop
jb
mov
addr16
add
adc
enter
cmp
add
inc
cld
add
pop
xor
mov
push
gs
xor
pushf
mov
fs
xchg
adc
lods
add
in
retf
retf
jo
stos
idiv
inc
js
add
adc
out
cdq
sub
aam
add
ret
xchg
xchg
jo
xchg
jp
cmp
test
push
mov
fadd
enter
sub
jbe
and
xor
lea
lock
mov
ins
aad
mov
cmp
sub
(bad)
data16
(bad)
hlt
mov
sub
or
push
adc
xchg
sub
add
or
sar
add
clc
clc
jns
adc
cmp
retf
out
sub
daa
sar
add
pop
mov
imul
outs
mov
or
pop
lds
out
adc
and
das
in
les
lahf
push
cld
fmul
cld
sub
in
add
xor
and
gs
cmp
les
xchg
sub
jl
pushf
cmps
or
pop
in
sbb
lock
pop
and
jo
enter
adc
add
pop
aam
je
aad
sbb
inc
(bad)
das
sbb
push
pop
jne
xor
mov
adc
jb
(bad)
sbb
push
ins
adc
xor
mov
sbb
push
add
outs
ss
je
xchg
cdq
(bad)
imul
ret
or
or
jb
cli
pushf
out
add
jmp
aaa
pop
or
add
into
lock
je
sbb
sub
pop
out
and
clc
push
int3
and
add
ins
mov
push
bound
push
or
aad
imul
test
clc
pop
sbb
inc
sbb
aam
pop
loope
and
shl
inc
or
dec
push
test
pushf
stc
test
jmp
ret
mov
xchg
or
js
ficom
scas
fisttp
(bad)
jle
sbb
xchg
mov
push
push
jmp
cmps
int
dec
cld
xor
add
or
jns
add
pop
stos
cmps
ficomp
xchg
push
ret
sub
add
jp
push
imul
xchg
and
add
aad
in
pop
stos
je
fnsave
inc
add
or
add
cwde
mov
inc
fsubr
xchg
sub
push
dec
inc
mov
xor
fstp
xor
fcomp
mov
xchg
and
add
cs
fs
or
pop
loopne
inc
cmp
inc
cmp
jne
mov
pop
mov
pop
lock
in
add
dec
jne
jno
jo
je
fsubr
or
mov
fld
or
mov
xor
ins
andnps
ins
push
push
push
and
lock
xchg
pushf
sbb
cmp
std
mov
cmp
mov
bound
push
jne
jg
jmp
jge
cwde
and
xlat
ds
scas
lods
je
leave
jne
pop
push
cld
jb
jne
je
add
bound
push
mov
adc
les
push
aaa
add
mov
inc
lods
ror
movs
lods
xor
aas
sar
jo
xor
mov
adc
dec
sub
or
lds
test
push
mov
shr
mov
push
loopne
sub
inc
cmc
hlt
cmp
shl
xlat
loop
pusha
test
or
adc
fisubr
lock
mov
pushf
sub
jmp
into
int3
dec
and
mov
stos
mov
jmp
fmul
add
push
outs
mov
addr16
cmp
dec
add
inc
add
pop
repz
inc
xchg
popf
arpl
adc
push
or
inc
test
or
add
cmp
je
jle
ss
inc
inc
jb
nop
mov
xchg
adc
retf
cmp
add
fcomp
out
sbb
cmp
je
shr
fs
enter
ret
sub
or
xchg
addr16
daa
or
mov
cmp
mov
mov
pop
cli
arpl
sahf
sbb
add
or
outs
sub
push
or
or
cmp
mov
fsubr
mov
retf
jmp
fiadd
test
or
mov
jbe
cmp
jmp
shl
inc
ins
sub
adc
adc
push
mov
das
add
add
clc
mov
(bad)
dec
add
push
sbb
pusha
test
sbb
jnp
sbb
add
push
pop
pusha
das
sub
lahf
mov
inc
gs
xchg
mov
adc
loopne
inc
and
cwde
jle
sub
xor
adc
arpl
test
push
test
cld
mov
call
stos
or
lahf
sub
scas
sbb
cmp
sbb
push
cmp
jge
jg
push
push
adc
pop
test
cld
movs
adc
adc
xchg
push
mov
pop
popf
push
js
lea
and
getsec
mov
mov
push
ds
push
mov
sar
sbb
sub
call
jo
imul
adc
cli
imul
sbb
bound
call
int
lahf
jle
cmp
and
cmp
add
sub
sbb
pop
pop
jb
mov
or
xchg
sub
xor
xor
cmp
xor
sbb
add
out
mov
or
pop
add
sbb
sbb
mov
and
movs
and
fsubr
ss
mov
sbb
and
dec
nop
sbb
cld
in
sbb
pop
xor
cmp
data16
dec
pop
mov
sti
mov
arpl
ds
fisttp
cmps
fcmovne
das
mov
stc
cs
fmul
mov
mov
sbb
and
(bad)
sbb
mov
cmp
jg
pusha
or
(bad)
lea
movs
add
shl
loopne
rol
sub
sbb
pop
pushf
adc
stos
mov
mov
sbb
cdq
(bad)
loop
push
cmp
outs
and
adc
enter
cmp
jecxz
scas
and
out
inc
pop
std
adc
mov
mov
loopne
mov
cmp
add
xchg
cs
shl
inc
inc
mov
pop
stos
jbe
and
add
mov
lds
pop
mov
mov
je
push
js
add
sbb
add
mov
cmp
les
or
fwait
es
mov
xchg
or
add
jge
push
and
sbb
jg
xor
pop
xchg
bnd
loopne
and
(bad)
cmp
fs
xchg
sbb
mov
ret
dec
adc
mov
pop
inc
lock
add
rol
lock
mov
dec
adc
sub
pop
pop
je
lods
mov
add
pop
sbb
xchg
pop
or
or
sbb
gs
les
fcomip
mov
sub
adc
(bad)
in
in
cmp
push
es
sub
pop
xor
jg
stos
pop
xchg
ins
loopne
sbb
cmp
pushf
or
sbb
or
data16
sbb
movzx
mov
xor
mov
push
and
jo
push
inc
mul
cmp
push
jno
or
mov
sbb
rol
dec
inc
push
mov
mov
mov
xor
add
xchg
loop
adc
popa
mov
sti
mov
outs
or
loopne
inc
lods
shl
sub
ins
sbb
or
hlt
imul
shl
cli
js
cli
push
(bad)
sub
loope
cmp
stos
in
call
pop
dec
gs
data16
loope
sbb
or
mov
je
pop
retf
adc
or
xchg
adc
pop
outs
xchg
and
adc
pop
outs
or
jg
sub
inc
outs
ret
push
aas
lahf
or
jp
mov
mul
mov
dec
jbe
inc
inc
sbb
or
aam
stos
call
mov
jo
or
cmp
sbb
fidivr
cwde
or
adc
jl
movs
je
push
sub
xor
dec
adc
dec
or
add
push
jmp
les
and
mov
inc
sub
xor
cmp
or
cmp
mov
dec
test
xchg
pop
pop
dec
jo
push
dec
sbb
jge
sub
cmp
nop
jp
and
popa
sbb
pop
sub
jb
popf
sbb
sbb
push
adc
adc
jne
or
lds
push
es
loopne
jae
sbb
push
mov
test
sub
or
pusha
push
pusha
clc
popa
ins
push
or
or
ja
adc
jecxz
loopne
out
scas
cs
lock
fidiv
add
adc
push
mov
or
add
mov
(bad)
int
dec
and
add
in
and
enter
(bad)
fidivr
adc
jo
aam
mov
fisttp
into
or
ror
push
gs
cmp
push
inc
je
mov
test
mov
adc
in
push
add
loop
clc
push
dec
ds
mov
cmp
or
adc
xchg
inc
gs
xchg
push
sbb
lea
jle
inc
pop
int
or
adc
xor
push
and
dec
mov
adc
add
test
xor
arpl
add
xor
in
je
dec
sub
inc
sub
mov
loopne
js
mov
pushf
inc
bound
out
js
xor
push
call
ins
cs
mov
js
jp
imul
out
fsub
outs
and
adc
jno
jae
cmp
jmp
sub
sbb
push
jl
arpl
repz
(bad)
bound
jne
mov
and
pop
in
cmp
jnp
les
cdq
pop
imul
add
ja
cmp
repnz
jmp
mov
test
jne
mov
mov
sbb
test
loopne
fsub
jmp
add
movs
adc
ret
xor
pop
rcr
adc
push
inc
mov
add
mov
popa
mov
jmp
cmp
int3
inc
ds
xchg
cmp
mov
loopne
and
shr
add
sbb
sub
add
pop
pop
pop
test
nop
call
hlt
jo
xchg
pop
in
sbb
push
adc
loope
adc
mov
push
mov
jle
jb
mov
mov
push
je
or
jnp
jo
cmp
dec
inc
ret
(bad)
adc
rcl
mov
mov
dec
add
push
ror
add
xlat
js
inc
pop
dec
outs
cmp
mov
sbb
lea
ficomp
sub
test
sub
push
mov
add
shl
lea
mov
cmp
js
aam
sbb
(bad)
jg
jl
push
lods
add
mov
dec
xor
cwde
loope
fsubr
mov
add
pop
cmps
nop
sbb
inc
dec
jne
jmp
mov
fiadd
retf
inc
les
inc
or
adc
xor
mov
cmps
fnstsw
or
fcom
mov
inc
and
cwde
mov
push
ss
push
sbb
cmps
imul
adc
sub
mov
mov
inc
(bad)
in
push
test
pop
mov
xor
and
loop
ret
into
dec
and
mov
sbb
cmp
dec
and
data16
sbb
into
in
loopne
mov
test
pop
or
xor
mov
paddusb
pop
mov
inc
ret
mov
jnp
sbb
movs
xor
sbb
test
jbe
das
or
cmp
adc
sbb
ja
daa
lods
lock
inc
loop
inc
lea
push
xchg
test
cmp
jg
test
or
retf
js
add
inc
mov
push
or
ror
adc
inc
xor
pop
scas
push
cs
ret
pop
add
pop
fld
jbe
cmp
cmps
jmp
dec
adc
fs
std
xchg
in
(bad)
xlat
inc
xor
inc
dec
jne
inc
daa
pusha
adc
out
mov
js
add
sbb
rol
(bad)
aam
xlat
adc
ret
(bad)
es
pop
add
mov
pop
aad
(bad)
jne
xchg
in
ja
retf
loope
div
leave
push
push
mov
pop
call
push
pop
add
fist
dec
mov
call
mov
call
mov
cmps
xchg
bound
mov
setle
cdq
pop
div
sbb
jns
inc
mov
mov
pop
or
add
add
push
fwait
and
fisttp
cmps
sub
adc
pop
outs
xor
imul
pop
fs
js
xor
loop
aaa
inc
sub
sahf
and
sbb
add
rcr
mov
push
mov
inc
lds
or
int3
call
je
dec
add
xchg
add
xchg
jmp
add
inc
adc
or
cmp
add
and
out
add
add
and
cmp
jb
test
loopne
jb
inc
repnz
jne
(bad)
in
push
jb
out
daa
xchg
pop
xchg
mov
sbb
and
daa
aad
adc
rol
test
add
test
or
scas
push
inc
es
add
das
hlt
inc
cmp
add
push
inc
jmp
and
call
and
push
sbb
add
lock
add
jne
cs
popa
and
not
xchg
loopne
hlt
mov
jbe
mov
sub
nop
add
loopne
cmova
pop
sbb
adc
pop
sbb
dec
fistp
pop
mov
jl
xor
cmp
or
jne
dec
out
add
or
mov
push
xor
sti
xor
xchg
or
jmp
ror
aas
xchg
mov
adc
sahf
pop
mov
jo
xchg
mov
(bad)
das
test
hlt
pop
xor
test
fisttp
inc
lock
and
jns
jmp
inc
cli
mov
add
lock
adc
pushf
ds
fisubr
dec
in
cmp
fisub
mov
imul
cmp
sbb
popa
push
push
repz
stc
or
out
xchg
jge
add
retf
push
mov
and
inc
sbb
sar
jne
fimul
cmp
call
(bad)
push
sub
or
jle
cmp
ret
lock
push
push
and
add
inc
jo
lea
jno
and
lods
and
and
cmps
add
inc
push
inc
les
and
pushf
mov
cmp
pop
pusha
add
unpcklps
and
daa
and
and
data16
push
in
push
cmp
rcr
cmp
imul
aas
jmp
jge
and
push
mov
cs
jg
std
jl
(bad)
cs
push
mov
pop
push
sub
and
pop
cmp
sbb
imul
(bad)
pop
and
xor
jo
cmp
mov
xor
jno
push
add
push
daa
hlt
les
cmp
and
push
xchg
test
add
dec
mov
(bad)
pop
ss
fadd
jmp
fisttp
inc
sbb
js
add
lock
mov
jmp
push
in
add
mov
jne
inc
add
pop
or
mov
dec
hlt
into
je
xchg
adc
dec
int3
ret
cmp
add
test
repnz
or
mov
pusha
or
ins
pop
push
fsubr
loop
fs
lods
xchg
fidiv
ds
or
push
lea
xchg
cmp
add
push
movzx
push
push
sub
test
adc
dec
or
aas
loopne
pop
mov
push
adc
xor
xchg
test
add
rcl
icebp
imul
xchg
add
push
je
aam
int3
ret
push
pop
xor
es
xor
lds
jg
jle
cmp
je
jns
pop
retf
add
cmp
sub
pop
cmp
mov
or
stos
sbb
xchg
cmp
loop
jo
push
inc
(bad)
call
cs
data16
add
loope
and
mov
add
sbb
js
or
inc
xor
jmp
and
out
mov
mov
loopne
into
ror
or
sbb
iret
adc
and
mov
adc
ror
add
pop
jbe
aas
fadd
add
pop
dec
dec
xor
adc
jecxz
or
dec
mov
inc
or
adc
xchg
loope
jmp
add
add
add
pop
add
cmp
lock
mov
cmp
jo
je
mov
mov
mov
mov
fsubr
add
ss
int3
jmp
or
sahf
ins
ror
scas
cmp
and
mov
or
aas
shl
xchg
imul
call
sbb
cmp
push
or
inc
and
xchg
call
sub
in
pop
sub
retf
jmp
jge
xor
adc
push
or
call
jne
int3
jl
adc
push
shl
les
mov
inc
or
xchg
cmp
je
mov
pop
pop
aaa
pop
add
fld
sub
push
and
mov
in
imul
xor
sbb
out
cmp
adc
sbb
sub
sub
out
sbb
(bad)
pusha
pop
pop
hlt
add
loop
in
push
ret
pop
cmp
cwde
or
or
in
cmp
pop
add
push
cmp
dec
inc
hlt
pop
mov
loopne
and
sbb
daa
out
hlt
icebp
inc
sahf
add
cmp
mov
mov
pop
lock
push
cmps
dec
adc
mov
popf
push
rcl
mov
popa
fnstcw
or
aas
sbb
out
add
not
rcl
hlt
or
add
cmp
test
push
push
jae
add
popa
xlat
shl
jb
adc
add
outs
cld
add
ror
inc
add
rol
xabort
push
pop
and
push
push
nop
cmp
out
mov
add
adc
adc
lea
dec
(bad)
mov
cli
imul
push
ror
outs
mov
cmps
cmp
mov
push
clc
ins
pop
or
mov
dec
or
outs
fsub
hlt
xchg
pusha
popa
cwde
push
and
push
loopne
adc
mov
lock
loopne
inc
bnd
and
pop
push
mov
adc
shr
sbb
cmp
xchg
jbe
imul
lods
inc
push
mov
add
sbb
inc
not
or
neg
inc
or
jo
inc
scas
push
ficom
xchg
mov
(bad)
mov
cmps
test
sub
pop
mov
mov
pop
or
jmp
stc
cmc
pop
daa
ds
push
inc
imul
cmp
jl
sbb
jb
or
iret
aaa
cmp
sub
loop
or
mov
or
inc
push
jbe
add
add
jmp
out
push
loopne
push
jmp
call
add
dec
test
jl
inc
xor
mov
sti
xor
jnp
aaa
mov
loope
mov
popa
and
sbb
sar
ret
and
scas
pop
js
xchg
jne
push
mov
and
(bad)
jmp
inc
dec
jne
push
mov
or
xchg
jne
ins
pusha
call
push
loop
and
iret
dec
rol
loopne
mov
mov
fdiv
mov
pop
xchg
pop
push
fs
rcl
sub
test
sbb
sub
adc
sub
add
push
movsx
xchg
clc
out
out
adc
lea
lea
inc
push
mov
pop
xor
fcomp
dec
or
cdq
and
pop
mov
popf
call
and
data16
xor
outs
push
ret
sbb
ftst
retf
adc
adc
xchg
ins
sbb
js
hlt
sub
add
outs
jmp
bound
mov
dec
mov
mov
push
cmp
mov
daa
adc
pop
push
and
dec
sbb
cli
loopne
ror
add
inc
les
push
inc
loop
mov
cmp
ds
(bad)
mov
sbb
adc
mov
add
in
daa
jbe
sbb
inc
sub
icebp
sbb
loopne
hlt
loope
xor
and
nop
pop
adc
scas
leave
inc
sub
jmp
mov
sbb
cmps
push
push
and
js
mov
xchg
mov
mov
inc
xchg
lods
je
jp
adc
js
pop
push
mov
or
jg
rcl
push
mov
mov
mov
pop
repz
mov
mov
jge
movs
xlat
outs
fmul
stos
pop
jle
add
lea
jae
movs
shl
sbb
imul
sub
adc
inc
mov
add
pop
sar
push
dec
rol
pop
clc
sbb
push
das
dec
jne
mov
movs
arpl
out
add
js
add
sar
push
sub
dec
push
imul
add
and
test
mov
icebp
out
xor
pop
sar
mov
fsubr
jge
mov
sub
xor
mov
xlat
mov
or
retf
push
add
sar
ret
popa
pop
(bad)
sub
mov
inc
mov
adc
stc
sbb
sub
pop
sbb
dec
test
add
xor
add
fnstenv
cmp
inc
add
movs
adc
and
sbb
test
test
in
ror
lods
cmp
inc
(bad)
cmp
or
and
xlat
push
dec
cld
(bad)
adc
pusha
mov
and
loopne
neg
shr
enter
mov
xchg
push
and
jo
jno
imul
movs
and
test
mov
sbb
and
mov
sub
adc
add
cli
sub
adc
adc
(bad)
cmp
jle
or
mov
pop
cmp
adc
clc
sub
sbb
shl
pop
and
xor
add
xor
add
les
lock
fisttp
or
mov
lea
mov
cmp
sub
les
cdq
add
inc
or
adc
shl
fnstcw
pop
xlat
lods
push
outs
js
push
clc
mov
mov
xor
mov
loop
mov
lock
inc
je
test
pop
in
dec
call
les
mov
inc
cdq
or
push
data16
mov
add
popf
cdq
test
int3
push
jo
rcr
ins
add
aam
sub
imul
mov
or
in
jmp
test
jo
xchg
or
mov
mov
jmp
cs
adc
in
add
add
push
pop
adc
mov
push
repnz
dec
mov
movs
sub
ss
dec
lea
xchg
and
test
out
test
lea
xor
test
sub
fs
mov
cmps
out
push
xor
or
test
ror
sbb
jg
push
or
xor
lds
jge
int3
add
jns
bound
pop
stos
mov
mov
cmp
js
push
cmp
inc
add
jge
adc
test
sar
es
or
sti
rcr
sbb
clc
inc
mov
loop
pusha
(bad)
jno
scas
inc
adc
adc
ficom
cdq
das
xchg
inc
push
sub
fiadd
cwde
loope
pop
inc
mov
mov
mov
lock
in
add
sahf
sbb
nop
add
lods
aam
pop
in
xchg
adc
mov
dec
pop
leave
mov
dec
fcom
xor
dec
aas
push
rcr
inc
lock
pusha
inc
outs
mov
cmp
add
sbb
or
mov
or
sbb
add
sub
lods
out
push
sbb
inc
pop
adc
pop
dec
inc
jge
xchg
(bad)
(bad)
jmp
lock
js
loope
shl
mov
daa
add
(bad)
pop
jle
fucomi
sub
or
ins
mov
and
add
add
mov
sub
cmp
xchg
inc
cmp
std
retf
sbb
stos
sbb
fdivr
loopne
or
adc
jge
xor
cmp
jg
inc
lods
jae
xor
ds
adc
jmp
or
xor
sahf
std
ffree
lea
or
mov
pop
mov
jmp
les
xchg
rol
or
mov
or
lock
pop
mov
lock
lods
sbb
sbb
(bad)
mov
cmp
or
fs
jae
mov
cmp
ds
and
adc
add
cwde
fwait
pop
inc
inc
ret
and
mov
out
mov
xor
not
add
jmp
mov
jne
jo
daa
test
cld
inc
and
mov
push
or
xchg
adc
dec
or
movs
dec
sbb
pop
push
sbb
and
cld
cmps
popa
dec
dec
scas
xchg
sbb
adc
sti
out
jnp
cmp
or
ja
cmps
xor
xor
inc
inc
les
mov
add
and
and
cmp
je
jo
popa
dec
cld
aaa
jp
add
jne
xchg
scas
add
add
add
inc
sar
sbb
test
mov
bound
pop
ret
adc
aad
jo
jp
cmp
and
scas
adc
loope
adc
shl
pop
mov
popa
dec
add
dec
add
jg
pop
mov
movs
pop
add
mov
scas
leave
or
mov
xor
cwde
mov
add
add
add
add
mov
add
pusha
add
cmps
sub
out
popa
add
push
ss
add
data16
int3
out
ja
inc
cmp
and
adc
jmp
add
pop
cld
xchg
pushf
xor
mov
mov
push
add
mov
push
or
ret
sub
fdiv
mov
ins
add
test
(bad)
jne
jmp
inc
ret
stc
es
push
pop
jo
imul
je
push
je
(bad)
inc
mul
scas
aaa
mov
push
ret
sbb
inc
out
sub
jae
(bad)
je
sbb
cmps
ret
push
aad
or
push
sahf
dec
call
bound
sbb
adc
sbb
out
jo
or
and
jp
or
mov
mov
(bad)
push
bound
sahf
clc
cmp
test
mov
mov
add
jmp
mov
in
mov
test
test
cmp
mov
daa
add
xchg
call
jo
and
sbb
sbb
and
sub
jmp
cli
push
mov
das
pusha
adc
sete
and
ss
or
shl
hlt
pusha
sbb
xor
push
in
sub
cwde
hlt
adc
dec
jl
xchg
push
and
arpl
add
leave
sahf
daa
push
psubusb
mov
mov
dec
data16
mov
xchg
scas
test
or
mov
ss
mov
in
pop
mov
shr
outs
ja
mov
js
inc
jo
inc
inc
adc
sbb
inc
sub
jp
jo
jo
imul
popa
test
or
sub
or
(bad)
push
aam
stos
mov
mov
mov
mov
push
sahf
push
(bad)
add
push
adc
push
push
sbb
sbb
sub
pop
add
(bad)
sbb
dec
mov
ret
mov
jne
cmp
movs
sub
add
pop
inc
and
adc
sub
push
mov
sahf
pop
adc
sub
fiadd
pop
sti
or
cld
xor
out
dec
mov
in
dec
or
ja
mov
mov
sbb
cmp
push
mov
in
sbb
or
or
xor
aam
sbb
or
fwait
mov
cmps
enter
mov
push
fisubr
pop
sub
push
fs
stos
daa
adc
and
push
or
lds
sub
inc
dec
popf
pop
xor
and
inc
jo
test
rol
es
inc
xlat
lock
lock
and
dec
add
call
lea
sub
(bad)
js
dec
adc
sub
jmp
and
or
sar
push
loope
bound
xchg
addr16
loop
adc
repnz
fist
nop
cmp
jb
je
dec
sub
(bad)
fwait
loop
xor
or
cmp
aaa
(bad)
loopne
jmp
dec
xor
adc
and
fs
adc
(bad)
movs
imul
add
or
push
sub
cmp
int
mov
and
xor
adc
cmp
sbb
inc
pop
loopne
mov
int
je
mov
je
movs
pusha
pusha
add
inc
pusha
mov
push
add
(bad)
mov
bnd
jmp
add
pop
xchg
adc
mov
out
rol
add
and
pop
test
stos
pop
jmp
mov
sbb
into
cmps
pop
sar
sub
rol
mov
add
cwde
sbb
xadd
mov
sbb
cmp
icebp
icebp
push
inc
scas
mov
fsub
popf
mov
mov
sbb
rol
sbb
and
inc
mov
xchg
outs
mov
xchg
inc
in
jg
test
sbb
mov
test
push
nop
jbe
xchg
call
push
test
(bad)
clc
pushf
imul
pop
sbb
es
sub
dec
and
jbe
cmp
dec
aas
daa
push
pop
dec
or
pop
adc
std
mov
sbb
xor
push
mov
or
mov
push
fnstsw
jp
pop
stos
rol
or
pop
cs
xor
popa
or
inc
test
or
sub
ss
add
dec
in
push
push
lock
push
clc
sbb
jle
adc
cmps
(bad)
sub
arpl
and
pop
cmp
mov
cmp
cmp
mov
ror
pop
jnp
cli
fs
inc
mov
inc
scas
sub
pop
or
dec
enter
or
sbb
xchg
xor
dec
push
push
xor
add
jne
popa
xchg
pop
mov
jne
mov
in
sbb
cs
in
add
or
xor
pop
addr16
cmp
push
inc
or
inc
adc
push
xchg
inc
adc
sub
cmps
dec
mov
in
clc
push
add
inc
push
add
push
add
xlat
dec
adc
fs
gs
add
inc
(bad)
popf
(bad)
(bad)
and
pop
jnp
adc
jmp
push
and
mov
imul
imul
or
arpl
or
repz
cmps
mov
add
xor
gs
imul
shl
mov
aas
and
les
xchg
(bad)
dec
ins
push
pusha
rol
xchg
inc
dec
sbb
xor
mov
fldcw
add
xor
push
xor
xor
dec
popa
cmc
ret
rcl
sub
dec
es
and
jle
es
sbb
addr16
ret
push
inc
cmp
loope
cmp
push
int3
int3
in
outs
xor
inc
out
mov
push
pop
int3
int3
push
jmp
dec
and
inc
fadd
dec
fild
sbb
add
jmp
icebp
dec
mov
inc
out
repnz
mov
xchg
cmp
pop
je
xchg
and
cdq
je
sti
xor
test
(bad)
adc
push
test
ins
and
movs
loop
icebp
je
jl
mov
fnstcw
adc
push
push
imul
mov
hlt
iret
inc
mov
inc
push
iret
or
and
sbb
test
les
cwde
cmp
jno
inc
mov
retf
push
sbb
mov
dec
mov
shl
sub
push
lea
outs
loopne
add
inc
mov
xor
add
pusha
lahf
clc
jmp
sub
ins
lods
ret
clc
cmp
or
ins
ins
outs
and
inc
mov
mov
xchg
inc
sar
inc
test
fcom
popf
jo
int3
test
sbb
in
adc
out
adc
inc
test
in
shl
dec
std
loopne
fidivr
ss
(bad)
ret
mov
and
sub
jecxz
mov
loopne
jle
jecxz
sti
mov
and
xor
lea
mov
mov
call
xchg
cmp
pop
jo
aaa
pop
push
dec
pop
adc
or
add
ret
xchg
inc
jae
mov
imul
dec
jp
daa
pop
test
test
call
pop
sbb
je
ret
dec
aam
and
adc
pusha
xchg
pusha
pusha
xchg
pop
sbb
cwde
jmp
adc
cmp
sbb
add
call
imul
push
ret
add
outs
xor
ret
xor
push
mov
test
adc
and
popf
mov
dec
add
ret
mov
add
mov
sub
test
xor
dec
or
or
push
mov
pop
mov
or
js
sub
fidiv
test
stos
pop
loopne
push
add
test
adc
push
in
pop
xor
sub
aas
pop
jb
push
in
pop
jle
xor
mov
add
jmp
jmp
aaa
stos
add
add
mov
jmp
stos
or
pop
pop
xor
push
push
dec
pop
aad
aam
jmp
cwde
gs
in
jmp
dec
clc
jg
push
jp
mov
sub
mov
mov
fild
or
jbe
shr
sbb
scas
loope
or
cmp
push
cmp
xchg
div
adc
mov
es
sub
ret
push
pusha
in
mov
cli
test
xchg
adc
(bad)
cs
cmps
ins
and
add
adc
sbb
or
dec
adc
jb
adc
movs
adc
cmp
inc
or
retf
xchg
inc
pop
adc
fisub
scas
cmp
test
jne
test
mov
int3
jo
test
sub
inc
iret
not
arpl
add
sub
jbe
bound
add
mov
ja
(bad)
popf
es
adc
inc
cmp
inc
js
mov
cmp
(bad)
jno
and
add
ins
add
paddd
repnz
fs
stos
loopne
(bad)
icebp
ins
daa
iret
inc
(bad)
push
mov
addr16
out
mov
adc
or
(bad)
fild
add
and
jle
ret
sub
add
call
xchg
adc
xchg
and
outs
ror
xchg
test
and
dec
dec
sub
pop
dec
xchg
jle
ja
pop
mov
jg
movs
bound
pop
jnp
add
xlat
movs
in
movs
or
cmp
or
inc
in
inc
inc
adc
xor
push
inc
and
adc
pop
mov
mov
push
sub
sub
lock
push
push
or
or
jp
sbb
arpl
push
pop
or
dec
out
adc
fisttp
sbb
add
pop
push
add
aad
jo
adc
pop
adc
push
jbe
ja
hlt
mov
lods
adc
push
push
adc
adc
rcr
mov
std
enter
fwait
(bad)
fwait
lea
inc
fdivr
aam
mov
nop
dec
pop
rcr
adc
test
sbb
jl
fadd
in
ficom
push
sbb
cmp
mov
adc
ins
pop
leave
pop
outs
adc
lods
icebp
inc
xor
fcom
pop
sbb
sub
popa
inc
je
fwait
add
call
movs
inc
iret
sbb
imul
test
imul
loopne
push
mov
push
lea
(bad)
sahf
dec
sbb
ds
mov
sbb
and
out
inc
lods
fadd
add
jnp
add
sbb
pop
(bad)
out
xor
push
and
xlat
gs
ror
stos
push
push
adc
xor
mov
(bad)
and
and
out
xor
bound
adc
mov
ret
cmp
push
push
xchg
ret
lods
jmp
inc
pop
jge
adc
push
sub
jmp
inc
xor
fiadd
mov
ja
add
inc
xor
xchg
push
pop
ficom
ja
mov
adc
mov
push
push
sub
loop
jo
and
enter
push
sbb
mov
xor
in
jmp
mov
nop
mov
sbb
or
int
push
lods
popa
pop
xchg
rcr
sar
sub
or
xor
jno
mov
mov
sub
and
das
pop
cmp
jle
jne
xchg
sbb
jbe
mov
jmp
jge
adc
test
iret
jne
sbb
dec
sbb
scas
inc
fxch
and
sbb
das
adc
(bad)
adc
popf
int3
retf
xor
mov
add
retf
out
retf
mov
retf
movs
pop
in
shl
movs
xchg
pop
movs
xor
adc
inc
icebp
inc
and
sub
pop
dec
add
sbb
stos
loop
ins
sub
data16
jmp
cs
mov
mov
cmp
out
test
test
mov
iret
into
add
out
out
or
movs
xchg
sbb
out
loopne
xchg
es
or
sbb
cld
out
adc
mov
pop
sbb
loopne
adc
(bad)
out
out
add
jae
push
push
out
sbb
adc
jnp
popa
cmp
out
mov
leave
cdq
push
pop
dec
inc
pusha
outs
sbb
add
in
out
pop
pushf
dec
fmul
adc
xor
js
xchg
adc
cmps
add
cmp
popa
add
and
sahf
lods
mov
add
adc
push
cmp
jbe
mov
das
je
jbe
or
push
fs
push
jge
add
mov
daa
xor
test
and
out
mov
mov
mov
jge
jmp
sbb
or
mov
retf
and
ror
rcl
mov
mov
test
adc
enter
rol
mov
sub
jo
mov
push
dec
ja
aad
mov
cdq
cmp
jne
cmp
pop
test
jo
pop
je
je
inc
out
fstp
or
loopne
ja
je
inc
cmp
inc
fcomi
push
inc
scas
test
or
popa
push
sahf
addr16
pop
push
ins
inc
fdivp
sti
and
fdivr
mov
xlat
cmp
fnstsw
sahf
jbe
push
and
daa
jae
inc
adc
lock
outs
call
add
adc
add
jge
fidiv
push
xor
mov
sbb
push
xor
cmp
add
jns
dec
inc
dec
sbb
pusha
lock
dec
pop
xchg
xor
dec
cli
or
dec
sbb
inc
dec
xor
pop
data16
std
push
or
mov
movzx
aaa
stos
aaa
jle
sbb
pop
adc
sub
mov
sbb
push
sub
cmp
sbb
pushf
or
xchg
das
jo
stc
sub
cmp
setge
jle
inc
iret
cmp
add
sub
cmp
pop
or
pop
cmp
and
je
lds
pusha
test
mov
aaa
loopne
add
add
nop
mov
aaa
pusha
inc
(bad)
fld
jnp
xor
out
or
inc
dec
je
cmp
or
rol
inc
sub
pusha
or
cld
jae
ins
dec
daa
std
jae
add
cmc
(bad)
adc
scas
inc
sbb
or
ret
xlat
cmps
sbb
icebp
mov
scas
dec
js
sbb
and
fcomp
jl
mul
pushf
imul
sbb
pusha
int
pusha
mov
shl
jo
pop
add
inc
ret
push
mov
retf
mov
or
sbb
add
lods
pusha
pusha
or
mov
sub
fidivr
pusha
repnz
movs
add
neg
mov
or
(bad)
jae
repz
stos
push
pop
sub
sar
jns
adc
xor
inc
xor
mov
inc
sbb
mov
xchg
les
or
sbb
call
clc
out
shl
dec
jae
nop
mov
data16
pop
jp
inc
call
jle
lea
sbb
mov
or
xchg
das
shr
add
mov
xchg
sbb
mov
lea
xchg
push
mov
test
xchg
pop
enter
inc
sbb
outs
mov
ins
movs
scas
xor
adc
ficom
fld
mov
mov
mov
sbb
btr
fs
rol
xchg
add
shl
cwde
test
addr16
cmp
push
mov
adc
lea
pusha
mov
jb
mov
xor
mov
and
out
mov
pop
dec
push
sub
in
js
clc
mov
xchg
push
push
les
sbb
mov
jne
ins
pop
pop
sbb
mov
inc
sbb
mov
or
mov
aas
stos
mov
xor
test
jne
addr16
pop
enter
(bad)
in
and
dec
push
add
push
sub
cmp
pop
or
pusha
sub
jbe
cmps
pop
push
cmp
fisttp
mov
mov
mov
jae
(bad)
mov
push
sbb
jne
(bad)
daa
mov
mov
push
add
push
pop
push
clc
push
jne
push
pusha
jnp
ficomp
push
adc
test
sub
sbb
lock
push
sbb
clc
xor
pop
mov
mov
sbb
fist
idiv
inc
icebp
cmp
and
aaa
lock
push
xor
loopne
add
jle
dec
dec
push
ins
fild
push
test
imul
pusha
cmp
xchg
je
mov
mov
push
inc
adc
jp
push
cld
or
test
pop
mov
mov
dec
sub
test
lock
xor
mov
add
add
fimul
or
pop
jo
pop
(bad)
jg
shr
add
dec
jne
sub
rcr
cmc
aas
aam
inc
and
pop
add
cmp
ss
jo
jno
add
cmp
mov
scas
mov
test
or
call
mov
add
(bad)
jg
pop
inc
mov
rol
je
push
mov
jge
pop
xor
daa
cs
fsubr
gs
int
test
bound
pop
dec
ret
inc
adc
dec
fdiv
aam
and
pop
mov
call
sub
cmp
jne
rol
xlat
mov
jae
mov
add
retf
(bad)
jae
rcr
dec
cmovle
iret
ss
mov
sbb
add
mov
outs
cmp
jne
mov
inc
and
add
add
or
mov
in
sti
jne
aas
arpl
out
add
add
out
pop
inc
pop
fadd
retf
aam
sub
jns
pop
lods
jbe
stos
or
push
push
push
mov
jmp
mov
scas
mov
aas
loopne
fdiv
sbb
mov
test
inc
repnz
mov
jo
add
adc
and
adc
fidivr
fstp
cmp
jg
sub
call
xchg
pushf
adc
sub
sahf
xlat
sub
cmp
sub
pop
mov
aaa
sbb
adc
add
sti
push
jg
jge
add
mov
add
jge
je
sub
add
mov
adc
sub
sbb
jl
or
out
sub
jmp
pop
out
(bad)
sub
adc
mov
inc
and
ret
dec
test
inc
loope
mov
mov
or
cmp
jne
data16
xor
push
inc
pop
add
cmp
cdq
jo
and
sub
pop
pop
lock
jg
je
fmul
sahf
stos
or
xor
adc
pop
dec
je
mov
lock
inc
sbb
inc
dec
jno
jnp
add
push
lahf
or
sbb
mov
fdivr
dec
xor
mov
mov
mov
or
inc
aaa
push
pop
ret
pop
mov
push
addr16
loope
in
push
mov
pop
je
push
jmp
loop
adc
dec
jmp
xchg
jmp
mov
cmp
fidivr
ins
inc
es
mov
fsub
xchg
add
dec
dec
and
hlt
scas
cli
hlt
push
bound
dec
test
jl
inc
add
or
rol
sub
dec
ror
ss
cli
jl
pop
jg
fcomp
or
jmp
cmp
mov
popf
push
mov
adc
(bad)
jmp
inc
dec
jne
mov
pop
(bad)
fldz
jmp
sub
cmp
jl
mov
add
add
retf
ret
add
je
or
jle
rcl
xchg
push
bound
(bad)
daa
lahf
hlt
mov
das
pop
xor
mov
loopne
movd
inc
push
ret
int
and
int3
push
sub
daa
push
push
rcr
push
add
jle
dec
jmp
or
jne
push
arpl
ret
daa
and
mov
mov
clc
and
add
jp
dec
sub
inc
adc
mov
xchg
inc
(bad)
mov
inc
jp
cwde
div
mov
or
adc
inc
jae
fadd
jne
xor
test
add
ds
scas
pop
mov
sbb
mov
test
outs
dec
call
cmp
clc
icebp
sbb
jne
mov
jb
add
mov
ins
or
mov
pop
push
or
fidiv
and
in
and
add
sub
inc
push
pop
add
cmp
pop
popf
xor
push
xor
and
jnp
and
sub
test
call
(bad)
pusha
add
pop
aas
add
sahf
sbb
adc
jecxz
pop
or
dec
mov
cmp
je
mov
vhaddps
scas
push
js
jmp
push
xlat
push
dec
push
jo
mov
and
jge
xor
je
cmova
mov
cmps
xlat
jne
pop
out
jmp
sub
jne
fxtract
jbe
fld
mov
sbb
pop
push
inc
outs
pop
pop
int3
cmp
mov
shr
inc
jmp
jge
mov
cmp
sub
lfs
jge
xchg
cmp
punpcklwd
inc
inc
cld
pop
enter
pop
dec
rep
pop
mov
aad
and
add
sub
or
cdq
add
ficomp
mov
push
sbb
sub
mov
and
fadd
test
popa
xchg
cmp
lods
add
jb
and
mov
add
mov
ds
or
aam
cmp
je
xchg
push
les
je
cmp
xchg
fadd
cwde
xor
jmp
cdq
cmp
jle
sbb
clc
dec
mov
inc
js
cmp
or
add
gs
adc
outs
inc
add
or
sbb
inc
mov
mov
mov
cmps
pusha
push
(bad)
jmp
test
sbb
push
in
inc
add
div
xchg
fsub
mov
out
inc
or
stos
cdq
sbb
sub
rcr
(bad)
hlt
sbb
sbb
ret
mov
inc
add
pop
lea
push
pusha
sub
push
ins
shl
(bad)
out
ja
or
sub
jo
pop
lock
jmp
xor
jmp
stc
call
lods
clc
add
fs
or
(bad)
cmp
jmp
jns
loop
cmp
jne
mov
adc
sbb
mov
jle
dec
test
jl
inc
jmp
push
sub
adc
cmps
lods
out
cmps
ja
or
imul
push
test
xchg
cmp
cmp
mov
(bad)
cmp
movs
jo
jbe
sub
gs
pusha
push
imul
sub
push
dec
mov
aas
outs
mov
inc
mov
dec
cmp
jne
sbb
push
push
push
add
in
inc
(bad)
das
fimul
mov
in
push
lea
jg
dec
mov
lods
movs
inc
retf
jne
jbe
push
js
xor
je
mov
or
dec
pop
xor
mov
sub
inc
inc
mov
inc
sbb
call
add
cli
test
jl
inc
repnz
pop
test
ja
cdq
jle
dec
cmp
sub
lods
cdq
shr
and
frstor
cmps
xchg
lods
shl
push
push
ror
sbb
xchg
or
push
and
int
mov
add
nop
fld
dec
data16
jp
adc
lods
xor
add
shr
or
jp
cmp
ins
dec
xchg
dec
xor
adc
xor
jmp
les
sub
test
div
ja
inc
lock
lds
push
hlt
lea
pop
scas
hlt
es
or
xlat
(bad)
mov
lods
test
in
inc
dec
ja
dec
lock
push
dec
sbb
(bad)
bound
into
add
es
enter
and
pusha
jae
les
pop
ins
jne
mov
rol
das
nop
out
ror
mov
jmp
jp
or
push
xor
mov
data16
pop
jecxz
jmp
inc
mov
je
mov
add
push
fcomp
mov
push
and
loop
nop
push
adc
jae
imul
daa
and
dec
outs
adc
cmp
xchg
push
rcl
aam
test
sbb
inc
cmp
or
xor
hlt
pop
inc
mov
sub
cwde
in
ins
out
ud0
push
cdq
pusha
add
mov
jecxz
ja
retf
loope
or
mov
add
adc
lahf
lock
add
sbb
xlat
mov
sub
int3
sbb
lods
ret
dec
pop
push
jge
mov
(bad)
ins
cld
sahf
cdq
push
ss
movs
mov
cmp
cmp
out
jle
ss
(bad)
or
in
test
mov
pop
pop
pop
adc
mov
test
sub
adc
call
add
sahf
jle
adc
ds
inc
fdivp
clc
ds
pop
cmp
push
dec
dec
scas
add
cmps
push
sub
rol
xchg
mov
cmc
xchg
pushf
add
push
arpl
push
push
xor
dec
icebp
sbb
push
mov
popa
pop
rol
pop
cld
cmp
cmp
sub
cmp
inc
push
push
adc
cmp
jle
mov
imul
jo
ins
xor
mov
shl
sahf
das
mov
repnz
mov
mov
mov
cmp
movs
hlt
push
fs
mov
sbb
mov
cmp
loop
add
int3
jne
popf
leave
jnp
test
aaa
and
pop
idiv
or
jmp
xchg
aad
into
add
sbb
or
in
lea
dec
shl
sbb
xchg
mov
out
dec
into
sbb
push
test
xor
fwait
xor
lea
sub
test
jns
stos
lds
inc
pop
pop
mov
xchg
sub
out
fs
fs
cld
mov
xchg
das
clc
sbb
add
sub
sbb
sbb
adc
and
lods
jp
xor
mov
sbb
jmp
aam
dec
jle
xor
(bad)
ins
cmp
lock
adc
sub
je
cmp
pop
add
mov
add
jne
aas
sub
mov
and
add
lock
push
pop
pop
jbe
push
jno
ss
or
push
fmul
adc
inc
popa
xchg
adc
mov
add
cwde
jne
outs
adc
push
cld
push
sbb
adc
loope
or
push
mov
lea
hlt
aam
dec
lods
out
jp
imul
push
mov
xor
sbb
inc
sti
add
ds
jo
rol
sbb
mov
jmp
mov
push
movs
dec
push
popf
add
test
adc
xchg
sbb
enter
add
adc
inc
dec
imul
mov
or
scas
push
add
cwde
jmp
cmp
pop
loop
ret
cld
je
fsub
rol
sete
cvttps2pi
pop
add
int3
adc
sub
and
push
loopne
shl
dec
add
ror
test
jo
stos
sahf
loop
pandn
mov
jp
or
sub
jle
sbb
jo
push
cs
out
sub
sbb
dec
or
adc
add
xor
xor
xor
adc
rol
std
xor
jnp
mov
scas
sti
cmp
xchg
xchg
les
sbb
enter
add
xchg
mov
rol
mov
add
and
push
sub
loope
xor
adc
aaa
dec
or
jle
or
or
add
sub
das
push
pop
mov
(bad)
aas
jbe
adc
push
push
or
push
dec
or
push
loop
push
mov
push
shl
lods
in
sbb
push
ins
add
push
fmul
int3
jmp
add
arpl
push
cmp
jne
cmp
fcom
sbb
jmp
dec
add
pop
mov
repz
add
repz
cmp
pop
enter
push
mov
loopne
loopne
adc
mov
jne
test
pop
push
push
lea
lea
pop
in
add
xchg
push
jbe
mov
adc
or
mov
sbb
or
pop
cmp
cmp
loope
retf
and
adc
shr
mov
fsubr
xor
loopne
xchg
sbb
dec
icebp
add
test
jmp
loop
pop
inc
push
repz
bound
fistp
frstor
pop
adc
dec
lahf
jmp
cmp
mov
add
sub
rol
adc
or
and
pusha
mov
pop
imul
sbb
jne
cmp
pop
into
adc
dec
or
or
adc
xlat
mov
add
pop
sbb
(bad)
jp
shr
inc
add
pop
js
and
sbb
jecxz
imul
and
and
push
lahf
inc
mov
inc
lods
loop
adc
dec
int3
sub
dec
mov
cwde
loope
pop
sbb
sbb
pop
int3
int3
sbb
or
and
aas
push
inc
and
or
js
jle
lea
inc
imul
push
inc
test
or
cmp
jb
pop
in
inc
fisttp
stos
mov
lea
imul
pop
cmp
jl
call
push
dec
mov
rcr
sahf
xchg
sahf
mov
jle
inc
fmul
call
ret
rcl
ret
daa
cmp
aad
jmp
mov
div
test
inc
jmp
sbb
test
sub
shl
xchg
out
in
fsub
jo
adc
cmp
adc
fs
mov
jecxz
dec
mov
hlt
pop
lock
pop
push
movzx
out
mov
call
sahf
xor
dec
cmp
or
rol
dec
push
js
rol
mov
clc
je
inc
iret
and
jecxz
addr16
mov
cmc
mov
jge
cmp
scas
adc
mov
pushf
loopne
add
loopne
or
push
xor
adc
js
out
es
addr16
xor
fld
add
sbb
push
push
loopne
scas
adc
sub
std
sbb
outs
lods
add
cmp
inc
mov
ds
xchg
add
xor
or
int
and
adc
sub
paddsw
sub
xchg
push
rol
ror
lds
add
popa
test
rcr
cwde
mov
mov
retf
xchg
inc
add
call
lods
test
popa
imul
fidiv
push
or
push
pusha
data16
push
(bad)
sbb
in
and
adc
mov
add
test
mov
aad
adc
inc
pop
add
mov
das
shl
pop
mov
clc
repnz
push
push
push
mov
jnp
(bad)
inc
inc
test
mov
xor
pop
or
dec
and
or
shr
test
je
jne
es
mov
push
inc
sub
aam
(bad)
push
outs
jmp
and
cmp
mov
mov
mov
xchg
xor
scas
adc
clc
daa
jne
(bad)
push
iret
mov
pop
and
sbb
out
cmps
sub
cmp
adc
in
arpl
dec
out
sub
jo
jmp
add
fisttp
add
xchg
rol
jl
popa
push
lods
xor
pop
add
mov
pop
ins
ins
vcvtdq2ps
(bad)
cmp
add
xor
loope
jl
sbb
pop
or
jge
sbb
pop
mov
jno
inc
add
adc
out
call
cmp
enter
daa
push
ins
or
in
xchg
mov
inc
leave
fld
fisttp
add
sub
push
and
mov
add
sbb
xchg
neg
jne
and
je
(bad)
ficomp
loope
cmp
fucomp
pop
jmp
mov
fdiv
pop
cmp
mov
sub
or
nop
adc
lea
or
pop
inc
mov
jmp
mov
jbe
rcl
and
inc
je
sbb
fsubr
nop
sbb
jp
xchg
push
inc
push
sbb
loope
dec
and
and
and
cmp
rcl
aam
xor
xor
dec
cmp
mov
(bad)
shld
xor
or
cmp
pop
je
dec
je
mov
xlat
fucomip
and
dec
adc
aas
adc
jmp
add
add
mov
lds
mov
or
js
jmp
dec
inc
and
mov
cli
add
dec
push
add
xor
loop
std
pop
add
and
jg
fmul
fmul
xchg
(bad)
mov
mov
dec
inc
push
rol
dec
pop
or
popa
pop
clc
mov
sbb
fcomp
or
sbb
aam
sbb
int
neg
push
stos
push
add
xchg
test
test
mov
cmp
add
(bad)
jge
sub
mov
mov
or
pop
sbb
add
or
adc
push
xchg
push
je
or
pushf
movs
jne
and
push
jnp
stos
nop
ss
das
mov
sbb
rcr
call
imul
dec
cmps
inc
test
jnp
mov
pop
pop
push
ret
mov
add
or
unpcklps
add
aaa
mov
xor
fs
cmp
push
pop
sbb
inc
sub
and
jnp
test
sub
imul
or
pop
fstp
clc
or
int3
push
push
inc
cmps
adc
add
ficomp
sbb
mov
mov
and
adc
adc
clc
xchg
fild
jl
dec
(bad)
sub
adc
lods
imul
ret
sbb
test
or
sub
pop
or
adc
jns
les
cmp
xchg
xchg
test
inc
add
mov
jae
mov
cld
jnp
mov
dec
in
fiadd
inc
xor
xor
cwde
test
in
rol
add
call
and
fsub
xlat
mov
mov
add
push
fst
(bad)
and
fild
(bad)
push
and
sub
in
jle
das
out
inc
lea
movs
jns
jl
adc
mov
sbb
loopne
mov
push
or
inc
xchg
xlat
imul
and
js
inc
add
adc
inc
ret
mov
das
js
test
je
call
ins
mov
and
push
rcl
adc
sbb
shl
scas
stos
jns
sbb
lods
add
add
add
inc
sub
fdivr
dec
sbb
je
das
add
mov
mov
sbb
mov
mov
push
stos
test
cmp
push
adc
movs
xor
ds
sbb
push
je
xchg
add
cmp
jns
(bad)
pop
cmp
xchg
shl
(bad)
sbb
mov
call
inc
cwde
push
push
adc
cmp
mov
push
xor
lahf
xchg
push
jecxz
push
jmp
out
loopne
inc
pop
movs
je
scas
mov
add
imul
xchg
retf
in
in
movs
mov
xor
shl
daa
add
mov
(bad)
xchg
add
cmp
adc
call
ins
push
xchg
ins
inc
sub
adc
mov
sub
mov
push
and
pusha
pop
sbb
mov
mov
cmp
and
push
and
push
inc
cwde
addr16
je
sar
mov
shl
shr
(bad)
xchg
adc
paddusw
cmp
dec
adc
je
lds
dec
or
cmp
cmp
dec
adc
pop
dec
adc
int3
icebp
inc
mov
and
and
inc
jle
test
dec
mov
or
cld
dec
popa
cmp
push
loopne
add
out
sbb
cli
inc
mov
inc
call
outs
xchg
(bad)
cmp
lock
loopne
dec
call
fisubr
imul
or
mov
lock
mov
mov
mov
std
mov
lock
aam
nop
or
nop
or
enter
cmp
sbb
xlat
call
cmp
jne
mov
inc
xchg
(bad)
sub
push
mov
pop
movs
lods
inc
ret
sbb
ret
scas
pop
xchg
fwait
xchg
or
shr
push
cmp
cmp
nop
xor
ret
or
adc
ret
cmp
iret
hlt
lods
mov
add
test
adc
test
dec
xor
lock
jo
add
push
lock
xchg
cmps
movs
dec
dec
loope
pop
lock
and
imul
jle
inc
adc
xchg
or
jo
lahf
and
bnd
xchg
mov
jg
or
shl
int
dec
fidivr
clc
mov
stc
mov
sbb
in
aaa
mov
ror
inc
out
iret
xlat
das
pop
xchg
test
mov
and
push
inc
xor
je
bound
xchg
dec
out
inc
and
js
sub
dec
and
neg
mov
pop
jmp
test
js
cmp
mov
or
pop
repz
dec
mov
and
out
or
jne
inc
and
movs
inc
push
sbb
test
cmp
jl
add
call
mov
in
push
sbb
or
aas
hlt
push
inc
repz
mov
and
(bad)
out
fnstcw
popa
outs
popa
mov
pop
in
sub
ret
pusha
pop
pop
pop
outs
fmul
inc
push
mov
test
(bad)
cmp
invd
or
daa
push
cdq
fs
mov
push
jmp
imul
loopne
pushf
mov
xor
push
add
sbb
lea
mov
pop
pusha
and
lds
ja
jmp
pop
pop
add
jle
jg
and
xor
and
xchg
fst
jnp
add
loope
je
rcr
lods
icebp
test
inc
sar
out
cmp
(bad)
sbb
cmp
(bad)
or
jmp
push
in
rcl
add
or
cli
sub
popf
adc
add
xor
aaa
sub
mov
mov
mov
clc
xor
xchg
pop
nop
adc
pop
pop
jno
cmp
pop
mov
aas
sbb
sbb
pop
adc
adc
push
pop
test
xor
pop
sbb
in
adc
or
sub
xchg
xchg
xchg
xchg
pusha
call
pop
call
push
mov
imul
or
pop
xchg
and
dec
out
es
sub
je
mov
sbb
dec
or
mov
jp
mov
les
fadd
addr16
push
imul
push
test
cmp
fst
ds
mov
sar
fild
pusha
add
push
int3
outs
add
or
not
sbb
inc
or
push
cs
inc
jo
and
add
pop
bound
jmp
arpl
adc
cmp
sbb
add
mov
xlat
or
inc
es
shl
or
dec
cmp
mov
sahf
sub
(bad)
icebp
sbb
scas
cmp
adc
pop
(bad)
jp
shr
xchg
pop
sub
cmp
push
or
sub
push
xor
mov
jnp
sbb
cmp
jnp
inc
or
cmp
or
add
push
add
add
ins
dec
ins
and
(bad)
cmp
pop
jo
sbb
lds
enter
mul
mov
jg
push
add
gs
daa
xor
ins
jno
lock
das
cmp
je
adc
clc
sbb
pop
push
pop
movs
inc
or
adc
and
arpl
adc
cmp
dec
adc
in
test
jge
les
ror
sub
mov
test
les
fbstp
mov
push
sub
je
or
inc
pop
adc
adc
test
pusha
ror
push
out
inc
add
clc
inc
mov
push
add
and
js
xchg
pusha
add
data16
bound
pop
call
jmp
outs
dec
jb
or
or
jge
adc
cmps
out
cmp
sahf
sbb
xor
or
and
(bad)
inc
rol
add
and
clc
(bad)
push
mov
shl
sbb
sbb
pop
xor
fadd
dec
mov
inc
lods
add
jbe
loopne
sar
xor
add
dec
jb
or
sub
sub
and
aam
xlat
fadd
lock
push
xor
jnp
dec
cmp
cmc
cmp
mov
pop
and
std
pop
int3
xor
pop
add
jmp
mov
add
mov
sbb
xchg
mov
push
sbb
adc
adc
(bad)
add
inc
mov
pusha
add
pop
int
push
xchg
mov
mov
out
stos
sbb
mov
add
adc
mov
les
push
enter
fisttp
cmp
movs
movs
mov
(bad)
jnp
cmp
add
mov
jmp
cmp
xchg
shr
push
adc
mov
(bad)
mov
loopne
push
mov
push
lods
pop
jo
push
push
call
add
sub
or
and
aam
sub
dec
pop
push
gs
and
pop
xor
xchg
cdq
add
adc
in
sahf
mov
adc
loopne
and
cmp
sub
push
scas
sub
push
xor
xor
xor
xor
sub
add
xchg
cmp
add
xlat
sbb
out
movs
ds
jne
aam
hlt
sub
aam
add
rcl
and
cmp
sbb
xor
sub
sub
test
dec
in
addr16
je
cdq
je
xchg
mov
add
cs
push
aaa
inc
cmps
sbb
inc
das
adc
sub
fs
mov
fwait
out
xor
sbb
xor
adc
fadd
int3
xor
sbb
jnp
pop
in
add
jmp
xchg
fnstenv
xchg
gs
cmp
adc
inc
ret
enter
add
mov
pusha
sub
xchg
mov
pop
adc
pusha
jnp
test
rol
dec
adc
adc
push
and
add
mov
jge
dec
test
sub
mov
retf
inc
pusha
add
xchg
mov
push
push
add
mov
mov
jmp
push
popa
ins
mov
pusha
jecxz
push
shr
popf
xor
js
mov
cdq
sub
mov
pusha
addr16
iret
inc
cmp
jnp
sahf
aam
rcr
inc
xlat
out
fimul
sbb
cmp
push
in
lods
dec
cmc
xor
cmp
fsubp
inc
pop
mov
movs
sub
dec
in
pop
push
dec
inc
popf
sub
sub
das
xor
lock
mov
add
fs
(bad)
lods
mov
fist
das
std
jmp
cwde
adc
push
hlt
leave
pusha
add
shl
lock
je
jns
xchg
popf
push
imul
add
sbb
adc
xchg
xchg
or
pop
cmp
cwde
sbb
fnsave
xor
imul
ins
data16
cld
inc
add
cs
push
lods
xchg
xchg
push
cld
lds
cmp
push
aas
ret
jmp
mov
sub
jne
aad
mov
xchg
mov
loopne
dec
pop
pushf
inc
bts
retf
mov
sar
push
call
mov
mov
jne
sbb
out
div
jmp
push
jne
push
ja
iret
or
sbb
retf
or
pop
(bad)
ja
cli
xchg
test
jne
cmp
sbb
push
(bad)
lea
xor
cmp
add
(bad)
xlat
(bad)
xchg
jnp
mov
sub
sub
and
mov
pusha
add
loopne
push
lods
js
and
fiadd
mov
loopne
add
and
mov
push
push
icebp
mov
imul
xchg
xchg
js
mov
adc
hlt
aad
ror
(bad)
adc
adc
pop
cmp
adc
add
test
je
neg
or
arpl
outs
sbb
shl
bound
(bad)
ins
mov
movsx
(bad)
or
sbb
push
popa
mov
xor
cmps
mov
pop
xchg
and
or
dec
adc
ret
or
sub
and
in
je
lock
enter
xor
sbb
hlt
mov
sbb
xchg
sbb
imul
jne
fs
and
clc
mov
mov
jmp
xor
xchg
ja
adc
pusha
test
pusha
adc
out
dec
test
and
cwde
ja
cmp
mov
inc
mov
sub
clc
loopne
or
loope
xchg
mov
aas
add
mov
das
add
pop
pop
cmp
jmp
test
add
add
mov
jae
sub
popa
or
push
adc
clc
mov
sbb
and
test
pop
pop
push
push
scas
imul
mov
out
mov
ret
call
fcomp
xchg
jo
and
sub
xor
adc
push
clc
call
xor
mov
jae
shl
mov
inc
and
mov
arpl
scas
and
mov
and
sbb
push
mov
xchg
push
ins
xor
push
xor
mov
push
adc
jnp
call
fidivr
jo
sbb
ins
nop
cwde
loopne
inc
pop
adc
jae
adc
xor
mov
sbb
jg
push
call
sbb
inc
int3
jge
pop
cmp
push
mov
push
or
cli
jns
adc
add
call
dec
push
dec
jo
mov
push
clc
jmp
test
and
pop
call
xor
adc
adc
add
fcomp
fistp
mov
in
in
pop
out
cmps
mov
inc
adc
pop
loope
bound
shr
pop
lods
and
jge
adc
outs
inc
sub
and
dec
dec
xor
cmp
xor
div
jle
sub
push
add
xchg
jo
arpl
inc
cli
mov
adc
enter
shl
stc
cmp
das
dec
enter
pusha
push
and
sub
cs
cmps
fcos
nop
mov
cmp
jle
mov
adc
or
outs
add
cmp
mov
and
jg
xchg
add
mov
or
pop
inc
mov
push
pushf
es
les
sub
mov
jge
mov
lods
cmp
mov
sbb
or
ds
add
adc
fdiv
sbb
jnp
dec
xchg
fisubr
push
pop
jmp
ja
jb
push
mov
push
push
ins
shr
add
mov
or
stos
mov
add
lea
sti
inc
jns
jo
mov
shr
ins
xchg
add
mov
scas
push
and
push
add
mov
jmp
add
out
cmp
adc
rcr
cdq
cwde
leave
adc
push
xchg
test
add
adc
or
xchg
(bad)
sub
push
or
or
mov
call
movs
cmp
sub
inc
fst
int3
bound
call
sbb
mov
jg
hlt
mov
(bad)
dec
fidivr
es
push
ins
in
mov
leave
jne
sbb
push
xor
cs
les
mov
hlt
int3
lea
push
or
mov
sub
pop
icebp
adc
enter
js
pushf
xchg
fadd
test
add
mov
lea
cmp
inc
leave
inc
js
cmp
fidiv
dec
js
inc
mov
adc
sub
push
jecxz
xor
adc
clc
sub
inc
add
ins
mov
add
std
pop
or
js
jb
ret
add
sbb
add
adc
push
mov
add
push
test
in
jmp
sbb
ins
push
xchg
pop
jecxz
jle
(bad)
in
(bad)
mov
call
or
and
data16
rcl
xor
mov
aam
adc
mov
xchg
or
retf
or
sub
ja
mov
mov
push
inc
push
push
push
ror
ds
mov
imul
mov
inc
scas
test
shl
ret
shl
xchg
fs
outs
or
mov
mov
inc
pop
push
fiadd
lock
cwde
push
hlt
cld
test
mov
xor
pop
lock
push
pop
push
mov
and
add
pop
pop
add
cdq
xor
sub
adc
outs
add
jb
push
sub
adc
xchg
jmp
adc
push
sub
pop
hlt
mov
sbb
mov
or
inc
sti
cmps
je
mov
xor
in
popa
(bad)
adc
xchg
mov
mov
out
jmp
jns
pusha
push
aas
add
add
rol
call
nop
xchg
cmp
ret
cmp
mov
cli
mov
push
push
mov
ss
je
dec
loopne
xor
xor
aas
or
jmp
jne
jmp
sbb
pop
ret
cmp
jb
or
ret
inc
xchg
enter
pop
fbld
imul
jge
jbe
test
in
scas
xor
xor
test
push
fwait
push
ret
mov
jmp
mov
or
xchg
mov
push
inc
inc
icebp
sbb
icebp
inc
inc
ret
ins
ret
les
icebp
sbb
icebp
mov
pop
xor
push
dec
scas
in
add
cmp
xor
icebp
ficom
mov
or
xor
xchg
and
sbb
imul
and
outs
or
pop
push
mov
sub
jne
fst
jmp
and
packsswb
xor
movs
test
xchg
adc
push
pop
dec
xchg
sbb
pop
ret
dec
xchg
dec
dec
mov
jo
js
mov
inc
test
enter
push
and
add
outs
les
jns
lea
stos
dec
xchg
fcmovb
sub
les
pop
je
ja
mov
dec
mov
cmp
ss
aas
aas
push
push
lods
pop
cmps
imul
or
fcomp
neg
xchg
sub
sbb
lea
enter
pop
mov
ins
xor
mov
inc
test
xlat
or
in
fwait
adc
sbb
jns
in
pop
(bad)
push
and
dec
loopne
in
xor
xchg
and
fcom
out
sbb
and
aas
sbb
sub
pop
sbb
push
mov
add
es
push
push
add
or
sbb
or
sar
push
pop
loopne
dec
fisttp
and
adc
std
outs
test
nop
pop
pop
pop
fs
jae
hlt
mov
push
mov
mov
jmp
addr16
push
sbb
ins
seta
mov
loopne
push
out
or
js
or
cmp
mov
add
push
adc
cmp
jl
cmp
rcl
xor
adc
inc
add
std
mov
cmp
dec
cmp
inc
sbb
jne
mov
loopne
adc
push
add
popf
pop
push
jmp
retf
loope
adc
add
adc
push
ror
push
push
or
mov
and
mov
sub
sub
or
cmp
mov
mov
sbb
and
and
push
or
cmp
pop
cmp
ret
test
mov
xor
fdiv
mov
sub
shr
add
leave
cs
mov
push
mov
stos
aam
or
inc
test
(bad)
add
xchg
in
add
push
xor
das
xchg
push
mov
add
mov
mov
movs
adc
add
add
pop
arpl
movs
and
cld
mov
clc
mov
clc
add
test
mov
scas
dec
mov
inc
mov
jno
(bad)
mov
mov
inc
mov
push
test
mov
sub
xor
add
(bad)
sti
mov
pop
fsubr
jne
cmp
inc
mov
cmp
out
add
dec
jo
mov
pcmpeqb
adc
add
add
ror
(bad)
xchg
cmp
add
push
nop
pusha
cmp
push
adc
sub
add
add
mov
cmp
je
or
rol
xor
jge
jmp
inc
or
dec
dec
inc
inc
add
mov
ror
addr16
(bad)
push
push
(bad)
inc
int
jl
inc
je
or
shl
sbb
sbb
mov
mov
inc
lahf
mov
gs
mov
mov
inc
jno
pusha
push
inc
and
sub
dec
and
addr16
or
xchg
sbb
scas
js
add
mov
adc
sbb
test
push
pop
push
fdivr
daa
cmp
scas
loopne
xchg
je
js
rcr
inc
jno
dec
jne
(bad)
(bad)
aas
call
fwait
cmp
cmp
xchg
je
add
sub
lds
mov
adc
pop
sar
push
or
adc
loopne
ret
inc
cmp
ror
or
push
sbb
ret
or
ret
add
mov
push
inc
jo
icebp
ins
xchg
fcom
test
xor
jp
cmp
jne
inc
adc
jle
push
pop
and
shl
les
mul
mov
adc
push
jo
add
sbb
and
sbb
movs
or
loope
jp
in
sbb
aad
jae
inc
leave
mov
add
test
xor
js
add
sar
or
and
cmp
out
outs
or
pop
xchg
dec
inc
push
pusha
imul
inc
js
add
push
xlat
shr
stos
and
rol
add
sub
adc
adc
adc
or
sub
scas
cmps
iret
int3
rol
sbb
sahf
mov
add
ror
xor
je
sar
shr
dec
scas
neg
or
or
or
or
jne
es
sbb
push
mov
add
or
stos
adc
arpl
or
xchg
pop
inc
test
test
pop
cmps
ror
add
mov
push
or
shl
and
add
xchg
out
adc
xchg
sbb
mov
push
fcomp
loopne
xor
push
mov
scas
push
and
pop
or
xor
jp
loopne
mov
inc
cmp
and
aad
sahf
xchg
and
jo
shr
call
and
sub
cmc
pop
mov
dec
or
rol
shl
or
jmp
add
adc
sbb
mov
loop
mov
inc
(bad)
mov
xchg
cmp
push
sbb
test
xchg
into
jle
jnp
pop
push
sbb
sbb
inc
push
or
adc
out
pusha
pop
sub
outs
test
adc
mov
int
and
add
adc
cs
or
rcr
rcl
add
cmp
jne
cs
dec
and
not
xor
cli
mov
jbe
dec
jmp
ins
icebp
out
adc
pop
outs
mov
outs
xchg
in
loop
in
outs
sbb
adc
lahf
add
ja
or
into
sub
xchg
daa
rcr
jbe
je
jmp
je
mov
je
xor
outs
aad
xchg
and
je
adc
xor
push
or
daa
test
sub
mov
aad
out
cwde
lea
cmp
stos
dec
stos
xor
stos
push
arpl
mov
push
or
arpl
inc
outs
les
dec
pusha
lock
jnp
sub
pop
(bad)
stc
dec
repz
inc
add
and
aaa
push
mov
push
test
adc
cmp
xchg
jmp
xor
or
pop
pop
(bad)
push
adc
mov
mov
and
mov
sbb
iret
test
mul
fadd
test
stos
and
pop
shl
sbb
mov
dec
sub
pop
shl
sbb
pop
scas
je
or
xchg
sbb
sub
pop
loopne
sub
push
sbb
fisttp
sbb
add
jecxz
dec
add
add
cmp
ds
fs
in
jl
test
loopne
and
ret
or
movs
outs
push
ins
cs
and
pushf
lock
cmp
in
push
xor
fidiv
sbb
cmp
(bad)
ficomp
add
jae
push
out
pusha
addr16
or
push
dec
outs
je
xor
pop
jbe
xchg
shr
xchg
icebp
push
loopne
push
jl
(bad)
das
cmp
push
or
push
data16
jge
dec
mov
push
add
or
repz
daa
jl
push
and
mov
xchg
fcomi
xor
push
les
or
add
adc
mov
fistp
ja
gs
pop
add
inc
add
jmp
add
fidivr
sahf
pushf
push
retf
movzx
daa
push
push
dec
inc
ds
push
push
push
test
(bad)
jmp
outs
or
or
dec
inc
outs
arpl
je
jb
add
push
xor
or
inc
jb
popa
je
out
call
or
ins
data16
xor
out
pop
inc
add
dec
mov
call
sub
add
outs
mov
adc
imul
push
imul
pushf
cwde
rol
das
fs
test
dec
add
jg
xlat
jbe
add
movs
popa
sbb
push
dec
data16
je
ror
enter
sbb
push
or
and
add
mov
dec
xor
add
loope
(bad)
std
inc
test
pop
mov
test
jns
gs
cmp
add
pop
or
in
stos
fdivr
jmp
mov
ins
dec
cmp
or
sbb
cmovne
sbb
les
xchg
push
lock
push
scas
push
inc
repz
js
and
out
cmp
sub
push
push
lock
push
lods
push
push
xor
push
imul
adc
(bad)
xor
dec
(bad)
aad
mov
fisub
outs
addr16
pop
jbe
jnp
adc
jae
push
inc
cmp
or
je
xchg
aaa
in
data16
sub
outs
mov
sbb
ins
gs
push
outs
popf
push
cli
(bad)
fisttp
ds
fisubr
dec
ret
inc
xchg
movhps
push
call
pextrw
inc
lock
inc
dec
push
data16
repnz
adc
in
pusha
and
pop
and
jae
dec
xchg
mov
shl
add
test
rcl
movs
in
movs
les
push
jns
sub
loopne
pop
ja
inc
bnd
ins
gs
into
mov
sub
lds
push
gs
pop
sub
mov
je
dec
dec
xor
dec
pop
dec
popa
jae
ds
push
push
mov
or
cmp
icebp
push
pusha
xor
mov
jo
into
test
add
cmc
lods
xchg
add
push
add
je
mov
mov
ja
mov
(bad)
aas
nop
stos
inc
cwde
test
jmp
inc
fmul
out
lds
mov
push
inc
dec
inc
js
dec
imul
cmp
sbb
ret
nop
sbb
sbb
fwait
add
or
jb
fs
mov
pop
nop
bound
movs
push
pop
movs
test
rol
int3
ret
push
pop
rcl
add
je
mov
push
mov
in
xor
push
scas
push
js
sub
ja
cmp
xor
ds
test
loope
mov
call
rol
into
jl
pop
ins
sbb
pop
push
je
imul
fisub
(bad)
popa
jb
xor
jns
shld
jns
out
clc
dec
movs
push
jg
scas
aad
inc
or
(bad)
stc
clc
inc
push
sub
push
popa
imul
and
add
mov
add
int
bound
popf
or
mov
retf
mov
mov
das
adc
sbb
daa
cmp
dec
dec
adc
fnstcw
pop
push
loope
addr16
inc
bound
dec
std
cwde
test
xor
push
and
shl
popa
imul
cmp
pop
jecxz
arpl
mov
push
or
xlat
loopne
mov
mov
inc
adc
gs
and
and
xchg
ror
cld
sub
(bad)
fnsave
cvtpi2ps
test
mov
xlat
neg
clc
cs
lock
fld
add
add
and
sbb
xor
and
pop
rcl
clc
jle
and
pop
call
push
push
sti
xchg
xchg
popa
pop
out
int
or
pop
mov
jae
outs
bound
ss
pop
stos
stos
xchg
and
mov
nop
stos
mov
invd
stc
cmovs
add
scas
sbb
mov
mov
dec
xor
sbb
inc
lahf
mov
xor
mov
push
inc
mov
dec
inc
lea
mov
adc
scas
add
(bad)
shr
aam
repnz
dec
std
fadd
mov
ins
mov
fisub
je
jo
mov
and
mov
fs
mov
iret
xor
sub
iret
fs
add
aam
pop
jle
out
inc
or
inc
jne
gs
rol
mov
push
or
mov
push
clc
sahf
psrlq
sbb
or
sub
out
pop
punpckldq
xor
ror
ins
add
lds
add
add
outs
mov
add
add
rcr
imul
push
adc
xor
and
inc
stos
dec
ins
sub
mov
push
popa
push
ja
sub
mov
push
pop
inc
fs
adc
fs
push
xchg
xor
cwde
pushf
inc
gs
sbb
push
or
cld
inc
pusha
dec
sub
sbb
pop
add
js
cmp
pop
dec
sub
repnz
adc
push
adc
pop
leave
fidivr
mov
add
je
add
fsubr
sub
ret
je
(bad)
mov
push
push
xlat
mov
imul
movzx
add
add
into
mov
setno
daa
daa
(bad)
sti
ret
sub
call
outs
cmpps
sbb
movnti
ins
bound
mov
data16
test
pop
leave
jnp
dec
or
cmps
adc
adc
adc
push
movs
in
xchg
and
or
add
sbb
call
lahf
call
dec
fwait
push
pop
inc
push
(bad)
fwait
test
mov
fwait
int
in
dec
mov
call
xchg
pop
and
popa
out
fst
push
lahf
xchg
cmp
push
push
pop
mov
jne
fcomp
adc
ja
or
inc
outs
xchg
push
imul
bound
in
loopne
sub
daa
xor
aas
out
in
add
xor
ss
cld
loop
fsubrp
rol
add
es
push
add
jb
inc
push
xchg
mul
or
add
das
mov
fs
add
sub
dec
imul
(bad)
pop
int3
mov
pop
xlat
mov
sub
es
push
jb
sub
lock
out
mov
or
mov
mov
sub
and
dec
inc
jne
jb
mov
(bad)
jo
cmp
dec
xor
push
or
jbe
dec
sub
dec
daa
bound
dec
cmp
cmp
aas
or
push
add
stc
mov
pushf
and
fcomp
cwde
push
add
push
dec
icebp
mul
fsubr
ret
fbld
jle
in
outs
sar
cmove
push
xchg
push
xor
inc
jbe
or
cmp
add
sbb
push
mov
inc
dec
xchg
sahf
jae
push
mov
into
(bad)
sar
cmovns
mov
daa
and
outs
sub
pop
mov
fidivr
sbb
sahf
pushf
pushf
lahf
loopne
or
dec
syscall
add
add
lods
hlt
cmovae
jp
enter
lods
pop
ror
add
xor
jns
or
and
js
cld
push
das
dec
bound
arpl
cwde
or
sar
scas
ins
mov
adc
mov
add
fadd
pop
push
sub
test
or
add
(bad)
nop
and
xor
adc
frstor
add
and
ins
mov
mov
xor
dec
cmps
or
cmp
add
test
inc
repnz
loopne
and
add
popa
sub
push
outs
fwait
cld
les
adc
push
dec
mov
ret
addr16
fcom
rcr
or
sar
enter
push
sbb
ss
sub
aam
dec
popa
sahf
imul
fcmovnb
add
mov
cmp
mov
jge
adc
test
rol
push
push
and
and
adc
mov
cmp
js
push
bswap
or
es
xchg
lods
or
popa
lds
add
mov
push
inc
mov
dec
inc
mov
sar
mov
int
js
mov
leave
push
outs
sub
dec
add
jg
jg
and
inc
outs
jne
imul
daa
xor
jo
jns
push
pusha
je
add
add
xlat
xor
test
sub
pop
ins
mov
jo
or
loopne
mov
pop
xor
add
adc
stc
add
aad
add
arpl
xor
adc
push
dec
pop
mov
cmp
test
inc
mov
sub
adc
mov
ja
sub
ins
add
add
push
push
pop
jge
stos
inc
sub
scas
es
push
imul
vmread
sbb
push
pop
ja
push
pop
sbb
loope
fcmovnbe
push
outs
mov
mov
push
pop
lock
push
or
jle
pop
cmp
(bad)
jg
push
fdivr
or
pop
hlt
push
cld
push
pusha
push
fcomp
push
movaps
in
mov
push
sahf
maskmovq
shr
setno
cmc
cmp
inc
std
xor
dec
and
test
maskmovq
mov
sub
pop
adc
shl
mov
cdq
dec
popf
mov
enter
paddsb
add
pop
xchg
push
(bad)
das
push
bswap
fadd
cs
iret
aaa
(bad)
in
pop
mov
xchg
add
push
aaa
adc
adc
iret
inc
movntps
scas
push
xchg
into
mov
xchg
add
xchg
inc
data16
shl
pusha
adc
bound
lods
or
xor
sar
shl
movs
pop
pop
rol
push
inc
test
cdq
dec
pop
cmp
add
or
rcr
fisubr
les
loop
adc
icebp
or
aaa
int3
pop
rcr
test
popa
jns
test
outs
sub
mov
cdq
push
or
add
inc
and
push
push
jo
sbb
ror
bound
pop
cmp
movs
add
les
test
lock
mov
pop
pop
inc
dec
push
enter
mov
push
mov
sbb
inc
inc
outs
out
pusha
shr
aaa
adc
inc
aad
inc
mov
loopne
pop
inc
dec
test
sub
xchg
lock
inc
add
and
jae
inc
inc
ins
sahf
and
xchg
pop
mov
pop
out
lods
lds
cmp
bound
test
in
rol
adc
in
mov
cmp
jne
fisttp
pop
jne
mov
jmp
pop
scas
xor
mov
inc
aas
cmp
hlt
mov
jmp
inc
arpl
jbe
push
loope
mov
sbb
xchg
fiadd
push
dec
loopne
mov
cmp
inc
jno
cwde
jno
and
(bad)
jb
add
inc
arpl
fs
in
push
inc
data16
mov
mov
repz
pop
push
push
add
dec
retf
daa
mov
(bad)
idiv
add
push
ins
sub
dec
jne
pop
cs
inc
je
push
bound
mov
addr16
add
inc
addr16
jnp
ins
(bad)
addr16
and
cmp
mov
cmp
repz
ins
iret
dec
iret
je
xchg
cwde
push
es
leave
mov
adc
push
xchg
add
(bad)
cmp
fwait
dec
mov
cmc
xchg
aam
adc
dec
rol
inc
pop
adc
push
dec
test
shl
add
jmp
sub
ins
sub
sbb
outs
pushf
inc
sbb
mov
add
pop
jmp
mov
add
loopne
out
popf
push
scas
icebp
lock
dec
xchg
add
cmp
push
test
xor
adc
xor
mov
xchg
sbb
add
dec
popw
jbe
xor
sbb
sar
fimul
inc
pop
push
push
or
mov
cmps
pop
fisub
push
lea
sub
in
push
sbb
rol
xor
push
pop
movs
(bad)
enter
jae
inc
cwde
out
push
mov
mov
ret
jnp
push
jae
mov
test
sbb
pop
or
sub
add
outs
xor
mov
aam
or
xchg
pop
add
and
js
and
inc
and
leave
gs
pop
int
pop
xor
in
xor
inc
test
ror
shr
nop
and
dec
pop
lds
inc
loope
dec
xlat
ror
xor
mul
dec
aaa
js
popa
dec
outs
push
pop
sar
cmps
inc
xor
nop
mov
or
xor
jo
dec
(bad)
adc
mov
scas
ins
cmp
sbb
cld
popaw
jne
je
sub
mov
push
shr
mov
in
dec
outs
or
inc
jmp
and
dec
xchg
mov
add
jo
repnz
or
push
or
xchg
pop
scas
add
xchg
add
aad
in
or
add
xor
out
mov
push
scas
sbb
cdq
popf
sbb
push
pop
add
mov
sub
out
out
mov
inc
mov
adc
or
loopne
mov
jle
(bad)
outs
popa
sub
enter
pusha
add
in
adc
add
sbb
add
lea
push
int3
push
ins
mov
or
lods
ror
fadd
mov
sbb
int
mov
jge
shl
cld
inc
pop
push
cmp
or
or
stos
mov
mov
aas
fisub
fsubr
test
in
popa
xor
pop
test
push
xor
inc
mov
mov
and
inc
sub
add
xor
jp
cmps
inc
pop
xchg
daa
pop
push
add
je
inc
fisub
mov
shr
retf
clc
mov
add
and
push
sub
rol
jo
xlat
push
inc
jmp
pop
sub
add
rol
call
jecxz
icebp
mov
push
and
dec
lds
inc
xor
add
push
popa
daa
push
xchg
push
and
mov
push
or
ss
pop
pop
loope
push
and
push
inc
sub
sbb
sbb
xlat
test
add
sti
push
fidivr
push
inc
and
xchg
and
cmp
pop
ror
scas
mov
mov
shl
mov
sub
jmp
sub
add
pusha
xchg
ss
stos
push
jno
movs
add
outs
pop
pop
push
jmp
call
cmps
sub
sub
stos
inc
xor
jmp
jmp
mov
mov
sub
psllq
sbb
and
cdq
push
jecxz
imul
xchg
mov
inc
cs
push
jb
xor
jnp
and
cmp
sbb
es
daa
pushf
pushf
pushf
mov
mov
dec
dec
inc
sahf
movaps
frstor
daa
and
sub
mov
xchg
daa
daa
fild
sub
enter
outs
mov
leave
leave
leave
inc
ja
sbb
fsubr
adc
test
pop
movs
push
mov
mov
xchg
fimul
push
xchg
push
xchg
cmp
bound
ja
cmp
xchg
fimul
jmp
adc
sub
jecxz
scas
xor
jno
shl
or
jae
and
xchg
cmp
xor
(bad)
mov
inc
mov
dec
cmovns
es
add
les
sbb
nop
xor
pop
test
add
xor
rcl
and
mov
push
cmp
inc
(bad)
out
bound
mov
and
sub
stc
sti
push
add
fsubr
push
or
mov
cdq
sub
and
sub
add
xor
push
dec
xchg
xchg
movs
jne
jae
test
test
jne
mov
add
mov
xchg
js
or
adc
and
das
leave
add
movs
call
and
xchg
dec
scas
arpl
push
test
adc
ret
xor
pushf
dec
jae
lds
mov
imul
iret
dec
add
ficomp
mov
push
jno
push
pop
add
mov
add
fimul
fld
dec
add
push
loop
inc
mov
jo
sub
ss
sbb
push
push
mov
or
out
dec
clc
push
add
jae
dec
add
push
lods
or
arpl
xchg
xor
pop
or
pop
xchg
in
xchg
adc
daa
push
and
dec
gs
and
adc
adc
lods
(bad)
xchg
mov
mov
popa
inc
nop
push
adc
add
add
jo
xor
(bad)
cmp
add
jo
cmp
or
cmps
call
call
adc
mov
sar
add
mov
rcr
mov
int3
sahf
loopne
adc
loopne
sbb
sbb
sub
or
test
xchg
sub
cmp
(bad)
dec
add
sbb
ins
or
call
add
sbb
adc
jb
cmp
stos
popa
pop
add
or
xchg
xor
fadd
test
clc
hlt
iret
dec
mov
push
jb
ins
test
mov
test
rol
dec
push
data16
sub
sbb
loopne
fcmovnu
test
loopne
sub
mov
or
imul
and
sbb
imul
mov
add
cdq
cwde
test
or
mov
or
add
adc
shl
test
fcomp
xchg
push
popa
(bad)
test
imul
inc
enter
add
xlat
and
mov
fwait
sbb
inc
ret
bound
stos
out
fs
sub
sbb
dec
cmp
fidivr
inc
es
sub
mov
mov
and
pop
les
ror
xlat
pusha
inc
movs
xchg
ficomp
xchg
loopne
inc
and
call
icebp
push
sub
leave
fnstenv
push
or
inc
add
jmp
clc
push
add
xor
punpckhwd
xchg
ja
adc
outs
les
mov
push
xchg
add
icebp
push
sbb
add
daa
lahf
xor
enter
sbb
push
loopne
fistp
pop
push
scas
sahf
aaa
lahf
and
pop
dec
inc
sub
das
dec
add
inc
pop
mov
adc
and
(bad)
es
mov
jmp
add
xchg
test
push
add
jmp
jnp
or
fs
inc
add
add
or
mov
pop
jbe
inc
jmp
lock
add
pop
cld
das
sbb
out
add
add
inc
mov
scas
loope
out
cmps
pshufw
or
outs
mov
mov
cmp
addr16
(bad)
and
mov
adc
xor
int
pusha
or
lock
loopne
add
add
push
mov
icebp
adc
stos
and
icebp
mov
add
jns
pusha
push
lock
mov
and
mov
add
popf
stos
stc
cmp
xchg
fild
stc
mov
clc
into
add
ss
push
loopne
neg
sub
add
push
imul
xor
(bad)
test
sub
mov
aam
mov
imul
mov
test
sub
sbb
enter
lds
sbb
cmp
add
push
cmps
shl
(bad)
sbb
inc
or
inc
push
mov
add
add
xchg
test
add
push
mov
cmp
xchg
cmp
mov
mov
mov
sub
jmp
adc
mov
retf
push
dec
dec
(bad)
fdiv
(bad)
fcmovnb
loopne
add
mov
sub
addr16
fisttp
adc
dec
cmp
(bad)
mov
xor
jecxz
(bad)
cmc
push
jnp
cmp
pop
adc
xlat
sbb
in
dec
push
btr
cmp
in
(bad)
fist
ds
jb
pop
xchg
fisub
aas
cmp
cmp
outs
xchg
mov
pushf
pushf
mov
inc
cmp
dec
inc
sahf
pushf
neg
and
rcr
pop
jns
cmps
push
out
push
mov
mov
punpckhdq
js
int3
or
aam
dec
dec
ja
cmp
popf
loopne
mov
fisttp
add
les
sbb
sub
sbb
cmp
and
or
sub
jg
pusha
and
cmp
dec
lahf
push
loopne
mov
cmp
das
adc
push
or
mov
outs
or
mov
add
adc
enter
call
mov
push
enter
mov
and
add
mov
gs
das
leave
call
gs
mov
call
xor
loopne
loop
mov
pop
loopne
add
shl
cmp
dec
xor
add
or
add
xchg
add
add
add
pusha
add
loopne
add
inc
pop
adc
mov
mov
add
loopne
into
clc
push
jae
not
add
rol
xchg
adc
add
cmps
jne
add
xchg
sbb
lods
loopne
inc
inc
(bad)
lock
inc
nop
cld
sub
cmp
add
pop
ror
pop
jo
call
and
push
dec
mov
shr
cmp
mov
cmp
adc
daa
mov
add
add
adc
loopne
je
add
test
jge
inc
(bad)
(bad)
add
rol
jns
inc
sbb
add
adc
sub
xchg
mov
add
add
push
retf
xor
popa
or
sbb
sub
outs
bound
sbb
sbb
add
xchg
inc
loop
add
mov
mov
add
pop
arpl
cmp
fimul
mov
or
mov
or
jo
rol
xor
inc
enter
push
and
or
adc
or
(bad)
push
nop
mov
jp
ret
push
mov
push
mov
fld
add
fstp
fwait
mov
mov
rcl
pop
pop
pop
ret
in
pop
stos
mov
clc
inc
mov
pop
pusha
fstp
fld
pop
pop
pop
ret
xchg
xor
mov
mov
add
push
push
push
mov
mov
(bad)
(bad)
fiadd
or
push
mov
cmp
jne
cmp
jb
jmp
jl
daa
(bad)
fistp
adc
jle
mov
mov
lea
push
jmp
mov
(bad)
cmps
mov
retf
adc
mov
outs
fild
inc
xchg
push
pop
pop
pop
rcl
push
(bad)
data16
sub
push
add
mov
xchg
sbb
mov
in
adc
xchg
push
push
push
mov
mov
inc
enter
push
adc
sahf
nop
mov
ins
or
aas
mov
movzx
cmp
ja
outs
out
jnp
std
(bad)
jmp
add
stos
add
mov
jo
xor
inc
push
ficomp
inc
ror
mov
mov
out
xor
xchg
sahf
add
iret
push
out
jns
loop
inc
je
(bad)
push
or
std
shl
jmp
bound
jmp
push
mov
ins
adc
sbb
sub
rcl
and
or
in
rol
(bad)
jg
lea
adc
mov
inc
mov
js
in
sbb
push
fistp
xchg
in
adc
pop
mov
pop
adc
and
sbb
std
shl
push
pop
mov
lea
sahf
rep
movs
mov
sbb
xchg
fbstp
cmp
ja
sbb
xor
sub
vunpckhps
or
adc
xor
sub
outs
cmove
cmp
pop
fincstp
push
jge
add
nop
and
adc
lods
sbb
push
fsubr
sete
test
je
xor
nop
and
jne
loopne
pop
jo
sub
cli
lock
es
add
mov
pusha
xor
rcl
enter
icebp
mov
dec
arpl
lock
sub
jmp
out
inc
loopne
push
pushf
(bad)
xor
xlat
add
adc
out
sbb
addr16
mov
enter
jns
mov
cmp
pop
xchg
and
adc
adc
push
xor
adc
jno
lods
fistp
fwait
add
add
jbe
jae
inc
cmp
add
adc
out
mov
add
add
cmp
dec
rcr
mov
inc
xchg
jo
and
mov
adc
aaa
pop
(bad)
xor
dec
sbb
add
sbb
push
pop
adc
mov
aaa
mov
outs
jo
mov
sti
rcr
mov
pop
pop
pushf
ret
inc
mov
(bad)
jle
cmp
push
bound
outs
add
add
outs
aaa
enter
xor
add
or
(bad)
fistp
sbb
je
push
je
imul
push
add
outs
imul
and
mov
les
push
dec
inc
gs
popa
ins
or
sbb
inc
dec
inc
and
mov
jg
jo
int
lods
or
adc
add
push
mov
mov
push
es
cs
add
scas
sub
sub
aaa
cmp
fld
jo
ror
add
ret
push
jbe
or
mov
ret
push
sbb
inc
iret
xor
comiss
add
xor
xchg
mov
and
pop
xchg
aaa
popa
popa
and
arpl
or
mov
jo
mov
xor
adc
xor
adc
dec
sbb
arpl
mov
scas
sub
test
xchg
outs
xchg
aam
and
shr
pop
jmp
ins
xlat
mov
lahf
popa
bound
or
and
cmp
mov
adc
shl
mov
cmp
dec
test
mov
mov
add
les
mov
xchg
test
je
lock
adc
mov
mov
mov
cmp
xchg
jmp
popf
clc
or
fsubr
lea
sub
fild
dec
lea
or
jae
scas
cwde
mov
(bad)
ja
call
scas
popa
popa
push
inc
loop
mov
fs
mov
(bad)
cs
xor
push
mov
mov
mov
pop
add
cmp
setle
pop
push
mov
xchg
fimul
mov
adc
(bad)
cld
xchg
jno
call
push
cmp
push
push
add
mov
inc
or
data16
test
sbb
xor
mov
or
loopne
xchg
ret
xor
sbb
and
jbe
ss
dec
mov
push
mov
adc
(bad)
fsubp
jbe
mov
add
test
mov
xor
pop
ret
adc
cmp
jne
outs
clc
loopne
mov
inc
cmp
pop
clc
add
pop
aam
(bad)
jle
mov
pop
iret
sub
dec
imul
push
ret
lock
repz
sbb
shl
ja
mov
cmp
mov
jne
pop
das
(bad)
adc
adc
test
call
dec
mov
add
test
div
or
(bad)
xor
js
and
lds
inc
and
mov
jmp
cmp
xor
push
add
sbb
and
movs
and
pushf
xchg
lea
mov
ins
xchg
or
je
jne
lock
fisub
sbb
test
pop
stos
jne
mov
movzx
jmp
adc
dec
je
sbb
xor
(bad)
sbb
xor
cmps
xlat
sbb
lea
add
data16
js
pop
and
sbb
cmp
pop
add
in
clc
and
clc
mov
xchg
clc
push
and
jle
addr16
std
sbb
test
js
and
sub
dec
cmc
mov
add
imul
xor
jo
ds
dec
std
pop
or
pop
inc
and
mov
test
jne
and
daa
adc
push
cmp
adc
hlt
es
(bad)
dec
je
mov
je
jle
jns
sub
jmp
pop
mov
ret
(bad)
jns
xor
je
popa
popa
cmc
aaa
jne
mov
jmp
or
mov
add
lds
mov
(bad)
fimul
pop
cli
lock
add
inc
add
ss
(bad)
sub
cdq
dec
gs
neg
aad
scas
and
inc
cmps
rol
mov
call
and
push
fmul
int3
dec
mov
jmp
sbb
inc
ss
adc
jo
pusha
inc
push
mov
add
pushf
retf
sar
sbb
push
adc
adc
jo
(bad)
int3
cmps
xchg
cmps
push
push
hlt
push
jne
sub
or
test
js
dec
mov
sbb
ins
mov
fld
or
xchg
outs
jb
or
mov
je
add
inc
cmps
push
adc
fisttp
ins
and
leave
stc
mov
sub
adc
retf
(bad)
sti
jbe
fmul
inc
fadd
mov
les
pmaxub
cmp
xchg
cmp
or
mov
loopne
lock
ret
push
jge
mov
sbb
fcos
jle
cmp
out
jne
push
cmp
jne
adc
mov
add
sub
js
aad
push
jge
inc
inc
and
inc
and
jnp
xchg
dec
jo
pop
jo
call
ret
and
mov
adc
lods
or
popa
sar
cmp
jne
mov
push
or
sbb
xchg
fadd
xchg
out
outs
push
add
adc
and
shr
add
stos
ds
sub
adc
mov
stc
adc
div
inc
or
xor
push
retf
fs
gs
add
nop
sub
pusha
push
cld
pop
or
gs
inc
lock
cmp
je
mov
outs
test
jo
mov
in
call
mov
inc
jb
push
lea
xchg
out
ins
sub
(bad)
mov
add
rol
jb
sahf
adc
inc
imul
sbb
rol
add
pusha
cmps
sub
add
add
push
xor
and
push
rol
jmp
adc
cmp
or
mov
outs
lock
mov
add
in
jae
aam
or
or
jae
xchg
sub
and
fwait
add
mov
lahf
int3
ret
mov
stc
pusha
adc
pop
popa
daa
or
rol
cmp
inc
xor
sub
dec
push
add
sub
ins
clc
cmp
es
mov
pop
daa
push
and
xor
enter
sub
add
push
les
fwait
nop
or
or
loop
sbb
popf
pop
fsubr
and
ds
inc
clc
mov
imul
sub
or
aas
sub
call
movs
ret
loopne
or
or
adc
ret
cwde
and
jle
cmc
in
outs
jl
sub
daa
mov
out
mov
or
and
cli
or
mov
loopne
mov
mov
sbb
lea
ds
(bad)
dec
or
adc
jl
sub
loope
mov
test
mov
fiadd
in
or
mov
scas
pop
in
sub
adc
add
mov
pop
leave
push
fistp
sbb
jge
jmp
lods
fnstsw
mov
mov
mov
dec
fdiv
jecxz
stos
xchg
sbb
mov
mov
das
jnp
mov
scas
retf
or
and
inc
mov
dec
lahf
ror
xor
loop
push
leave
inc
sub
and
pop
mov
mov
cdq
inc
pop
or
mov
(bad)
jbe
into
ret
rcr
scas
push
xor
mov
mov
xor
push
xor
dec
cmps
dec
or
inc
mov
mov
(bad)
push
jle
je
lods
cmp
pop
lea
shl
add
adc
xor
mov
sbb
icebp
inc
xor
je
sbb
lods
pop
sbb
mov
pop
push
fisttp
fcomp
push
mov
and
xchg
and
jle
cmp
jg
jae
pop
pop
out
ret
cmp
add
cmp
or
sbb
sbb
test
sbb
mov
fcom
fadd
aaa
pop
retf
sub
inc
adc
adc
add
jp
push
push
mov
mov
jg
mov
push
cmp
push
adc
popa
inc
xor
mov
mov
xor
and
jmp
inc
mov
outs
xchg
pop
add
xchg
or
jnp
je
out
cmp
(bad)
jo
push
push
mov
push
popf
cmp
or
dec
adc
fdiv
push
test
les
xchg
sbb
xor
ins
push
scas
push
test
jecxz
push
and
xlat
sbb
push
xchg
cmp
scas
cwde
or
sbb
mov
pushw
add
or
or
add
or
jp
mov
jae
sub
fcomp
movs
jo
(bad)
loopne
sbb
mov
mov
outs
cmp
push
mov
lock
mov
or
je
and
or
xchg
jp
jne
xlat
(bad)
loop
lock
xlat
pop
push
add
or
sbb
xchg
add
jb
mov
sbb
cs
xor
mov
clc
add
aad
xor
fcmovne
popa
scas
sbb
cmp
int3
je
out
cmps
lods
dec
hlt
cwde
loope
add
sbb
add
xor
popa
xchg
in
(bad)
jg
and
sub
pop
add
adc
jp
push
push
out
sahf
adc
pusha
aam
push
pop
mov
cli
mov
daa
fstp
bound
cld
mov
or
sbb
outs
dec
mov
inc
mov
push
adc
push
ret
fcom
jg
inc
adc
xor
xor
xor
xor
ret
cmp
cmp
inc
out
inc
or
add
inc
add
aas
xor
in
test
repz
out
and
xlat
mov
jecxz
push
xor
add
add
lock
add
rol
jne
jne
add
adc
add
nop
push
pop
xchg
lea
popa
test
call
clc
frstor
fst
sub
jb
cmc
pop
icebp
push
add
sub
or
je
sub
jne
lds
jp
inc
and
mov
mov
movs
je
sbb
mov
addr16
sub
mov
xchg
out
jo
jl
and
fmul
div
and
push
imul
add
retf
dec
(bad)
pop
pop
inc
push
je
pop
outs
dec
ins
call
test
pop
sbb
dec
cmp
cmp
std
out
jmp
inc
mov
xor
js
xchg
loop
js
add
push
or
xchg
ins
popa
cli
ja
or
mov
dec
sar
inc
movs
or
mov
or
rcl
sbb
loop
or
mov
call
stc
pop
movaps
xor
inc
cmps
nop
das
bound
sub
jb
out
pop
cmps
je
cmp
jb
or
xchg
add
mov
ja
mov
push
and
enter
pop
mov
cmp
daa
lods
cmp
daa
sar
xlat
xor
fidivr
cmp
fisttp
sbb
push
mov
sub
sub
cmp
add
inc
mov
dec
ss
cmp
xor
fimul
rcl
sub
loope
movs
add
mov
test
stos
aas
cmp
xor
das
and
push
in
jne
pop
arpl
pop
add
ret
jge
mov
rol
imul
daa
or
loop
sub
mov
sbb
push
jb
call
aad
adc
rol
or
jo
xor
leave
sti
xchg
dec
test
sti
(bad)
xor
shr
test
ret
or
mov
and
aaa
mov
pop
retf
lods
adc
sbb
arpl
adc
xlat
addr16
imul
sub
mov
(bad)
xor
fdivr
lahf
lea
mov
xchg
daa
adc
cmc
fistp
ret
mov
ja
jmp
jmp
add
cmp
es
popf
dec
hlt
add
dec
sub
add
stos
dec
jg
cmp
aaa
sbb
outs
int3
mov
jbe
(bad)
fmul
leave
mov
add
stos
int3
add
jno
imul
jae
adc
push
ret
inc
or
call
add
cmp
enter
movs
lea
fsubr
cs
push
add
fwait
jl
call
push
outs
in
loopne
mov
pop
(bad)
mov
sub
(bad)
mov
das
sub
push
adc
test
inc
mov
pusha
jecxz
movq
xor
add
pop
pop
adc
pop
call
xchg
mov
inc
hlt
push
dec
ins
dec
mov
push
xor
or
adc
mov
sti
fstp
fwait
stos
fmul
sbb
shl
js
push
and
adc
dec
sub
das
pusha
ins
sub
dec
jg
add
stos
cwde
lods
dec
push
stos
jmp
shl
cli
cmp
or
or
not
sub
add
ret
adc
mov
aam
add
push
das
bound
push
mov
paddq
lock
jno
pop
mov
pusha
xor
jb
jl
fisttp
push
push
mov
iret
cmp
repnz
sub
add
ret
xor
clc
popf
sbb
adc
jne
or
dec
mov
dec
jne
adc
loopne
jp
jbe
xor
jno
sbb
daa
movsx
and
rcr
shr
sub
mov
cmp
ds
adc
pop
pop
mov
in
fcom
sar
sar
mov
sub
add
into
cmp
outs
sub
loope
ret
sbb
ror
test
sbb
or
mov
and
or
xchg
sub
pop
push
in
inc
lea
jle
jns
cmp
and
pop
and
dec
out
(bad)
dec
pop
stos
loopne
mov
mov
xlat
jbe
xchg
xor
pop
jl
cdq
push
shl
adc
sbb
add
add
push
inc
mov
cwde
(bad)
test
int3
int3
inc
cmp
ja
mov
add
xor
addr16
int3
xlat
xchg
scas
add
cmp
dec
sbb
dec
movs
inc
cmp
push
inc
dec
jne
mov
mov
push
ret
push
push
lahf
xchg
cmp
and
movs
push
jecxz
add
ja
inc
jno
fisub
mov
mov
inc
stos
jg
test
jl
inc
xor
ja
aaa
push
mov
dec
test
xchg
jb
sbb
jne
lea
jge
scas
add
in
and
in
jp
or
cmp
add
sbb
cvttps2pi
sahf
ret
das
push
inc
cwde
jne
test
sbb
pop
enter
sbb
xor
and
pop
pusha
ins
ffree
or
lds
in
loopne
push
jbe
outs
push
push
jae
cs
push
pop
push
add
push
fist
(bad)
xchg
mov
les
dec
je
mov
adc
popa
cmc
cmp
sub
arpl
clc
lea
mov
jo
icebp
sbb
cmp
inc
mov
jne
mov
int3
(bad)
dec
pop
or
push
pop
fcmovbe
push
test
pop
stos
ins
imul
scas
jle
xor
pop
mov
mov
call
inc
imul
les
add
mov
sahf
sub
sub
push
adc
rcr
and
aas
mov
std
push
loop
pop
or
fstp
cdq
adc
inc
xor
in
or
test
jb
inc
dec
jne
adc
(bad)
ficom
repz
bound
add
neg
mov
ds
jne
popa
cli
mov
add
icebp
jg
(bad)
nop
add
jmp
push
push
jns
xchg
mov
fmul
push
jae
pop
test
jmp
and
mov
sub
lods
aam
(bad)
retf
jae
repz
add
sbb
adc
add
sub
mov
clc
jnp
stos
push
dec
add
jae
xchg
mov
ins
dec
dec
out
test
mov
inc
ja
ins
xchg
add
jne
in
add
jge
jnp
test
jne
aas
fsubr
cmp
test
ins
(bad)
in
pop
in
jp
inc
lock
jno
pop
hlt
mov
add
add
cwde
dec
push
jcxz
jo
shl
mov
mov
dec
mov
or
jp
(bad)
scas
pop
or
mov
dec
jnp
push
mov
push
aam
in
cmp
jle
adc
aaa
dec
fisttp
arpl
mov
mov
xchg
pop
jmp
adc
and
je
push
ins
mov
cmp
xchg
jmp
shl
jne
or
aad
adc
xchg
pop
jno
xchg
or
pop
adc
jmp
xor
pop
jno
xchg
pop
add
sub
jae
movs
xor
xchg
dec
icebp
movs
loope
inc
outs
mov
push
or
je
or
je
add
push
or
or
je
popa
inc
adc
std
dec
push
push
je
or
je
das
sub
and
inc
shr
in
hlt
fs
int3
pusha
movs
in
adc
int
mov
add
or
in
jb
push
pop
jne
adc
push
jo
gs
rol
imul
adc
lods
in
adc
or
mul
xor
ins
adc
lock
pop
push
stos
adc
mov
jmp
std
push
imul
add
(bad)
in
and
in
(bad)
in
je
and
jo
adc
neg
inc
aaa
mov
push
mov
push
in
adc
dec
pop
or
dec
adc
adc
in
cmp
mov
and
sete
cdq
in
jne
dec
cld
sbb
call
or
jmp
inc
dec
mov
outs
in
fcomp
adc
dec
mov
push
sub
mov
icebp
push
pusha
xor
in
or
sbb
shl
movs
jns
imul
push
pop
cmps
or
imul
add
mov
cmc
shr
jae
stos
cmp
pusha
push
ins
add
xchg
dec
mov
cmp
push
pop
test
fdivr
add
dec
cwde
cmp
jne
out
cmp
push
add
ja
push
shl
dec
mov
js
pop
inc
jne
sub
push
cmc
outs
popf
pusha
ror
sub
and
xchg
(bad)
rol
and
outs
mov
cmp
mov
or
fmul
mov
mov
sahf
jno
cmp
cdq
xchg
jl
jne
push
or
or
push
lds
pusha
dec
and
xchg
or
push
pusha
mov
pop
test
xor
ret
or
pop
pop
scas
cmp
ret
and
mov
ret
xor
outs
adc
sbb
add
adc
dec
xchg
cmp
mov
inc
int
daa
dec
fwait
sbb
pop
inc
sbb
sub
cmp
retf
ins
rcr
ins
pop
lock
or
inc
inc
je
add
sub
out
inc
push
imul
push
sbb
or
or
loope
or
shl
leave
cmp
or
add
mov
xchg
and
mov
pushf
div
jmp
mov
push
or
or
nop
jae
imul
add
add
mov
push
loopne
lock
cmp
lock
sub
aaa
mov
aam
xor
rcr
inc
aaa
add
clc
mov
dec
test
jle
add
push
dec
sbb
inc
retf
rol
mov
mov
mov
sar
repnz
arpl
xor
outs
or
add
sbb
add
sub
lock
cmp
daa
adc
adc
sbb
dec
ret
sub
add
sub
mov
inc
movs
in
shl
movs
in
inc
xchg
jo
rol
inc
jo
jmp
and
pop
and
xchg
jo
xlat
jp
mov
xlat
nop
jp
scas
mov
(bad)
leave
sbb
fnstsw
stos
xlat
dec
jo
xor
push
sub
shl
imul
sbb
cwde
in
(bad)
and
or
pop
adc
sub
xor
aad
mov
push
das
adc
movs
adc
push
jae
in
dec
adc
push
pop
pop
aas
daa
pop
pop
daa
push
sbb
aaa
push
mov
jb
inc
je
fsub
shl
inc
lea
jp
push
sub
adc
and
dec
jns
fistp
push
mov
test
mov
fistp
add
push
aad
iret
unpcklps
mov
mov
mov
jb
push
dec
loopne
or
outs
(bad)
pop
pop
cmp
jl
in
lods
and
add
fs
in
imul
daa
loop
data16
test
test
loopne
xchg
dec
sbb
fadd
fcmove
or
iret
ds
call
xor
cmp
push
or
xchg
mov
pop
ret
inc
jnp
push
pop
xchg
inc
lea
cmp
inc
fstp
mov
ret
pop
addr16
dec
cwde
pop
sbb
inc
addr16
jmp
aaa
jae
push
or
or
mov
sub
push
pop
and
push
ja
and
lods
jno
dec
mov
sub
inc
cmp
push
jo
ins
aam
lods
inc
pop
xchg
pop
pop
xchg
lock
in
xchg
mov
mov
or
jp
gs
gs
pop
mov
sbb
lea
xchg
push
mov
js
push
arpl
out
fadd
pop
mov
lds
ficomp
outs
inc
sbb
inc
cmp
push
xlat
mov
add
jl
inc
adc
outs
add
mov
test
ja
cmps
mov
adc
pop
test
jp
ret
mov
jbe
push
or
and
lahf
ret
inc
ret
or
test
or
lahf
loop
inc
fmul
fcom
fild
pop
sbb
sti
mov
add
adc
cld
or
adc
add
loope
jnp
mov
fild
sbb
and
adc
cs
adc
bound
xchg
lock
hlt
push
adc
pop
xchg
outs
mov
jns
sahf
sbb
mov
pushf
xor
jmp
mov
arpl
inc
and
add
jns
loope
packuswb
jge
xor
shl
fild
cmp
mov
pop
(bad)
cmp
imul
test
add
push
ss
add
add
fimul
jae
jge
lock
adc
or
mov
add
jl
sbb
add
push
movs
add
or
jmp
xchg
pusha
push
or
call
mov
lock
(bad)
enter
adc
icebp
test
jl
or
popf
movs
sbb
clc
(bad)
add
out
jbe
add
in
push
jb
mov
push
sbb
(bad)
xor
mov
mov
addr16
leave
out
mov
push
adc
into
sbb
mov
push
fucomip
lsl
adc
pop
idiv
ret
and
sti
jg
cmp
xchg
in
mov
or
or
clc
add
or
dec
pusha
je
mov
cld
adc
je
jmp
push
push
jmp
retf
dec
out
pop
mov
push
je
and
dec
rol
mov
(bad)
push
push
ret
out
xor
test
lods
and
(bad)
jmp
(bad)
fiadd
sbb
fimul
cmp
or
adc
or
test
adc
adc
test
(bad)
clc
call
call
cmp
outs
push
dec
test
xchg
pop
add
or
xor
lea
(bad)
mov
dec
jl
inc
sbb
cmp
mov
inc
sbb
cmp
fcom
inc
adc
and
mov
test
daa
mov
or
or
add
ss
and
inc
div
inc
sbb
xor
mov
mov
imul
push
mov
jo
jb
(bad)
jmp
sub
nop
nop
enter
sbb
not
inc
mov
xor
mov
test
cmp
test
adc
xchg
add
das
add
mov
add
std
scas
sbb
in
push
test
pusha
dec
aas
clc
cmps
inc
add
dec
and
ret
dec
cmc
scas
out
jmp
sub
mov
push
pop
cmp
call
gs
add
sub
inc
cwde
inc
js
push
and
add
jbe
add
(bad)
cmp
mov
sub
xor
addr16
out
inc
in
ror
dec
pusha
(bad)
aad
push
(bad)
aad
pop
mov
jnp
jl
fwait
stc
lds
push
lea
xchg
sub
or
push
es
retf
stos
call
pop
push
dec
and
mov
and
sar
retf
test
cs
jmp
dec
in
mov
adc
ds
cmp
js
dec
pop
add
jne
inc
add
push
mov
push
sub
or
pop
imul
addr16
call
or
push
test
rol
mov
push
fcom
fnstcw
pop
int
add
in
adc
push
push
lods
push
loopne
enter
and
jne
add
mov
push
ss
cmp
inc
add
dec
jne
sbb
pop
xor
(bad)
add
sbb
pop
xchg
ds
test
add
in
stos
scas
sbb
out
sub
mov
pop
imul
test
ins
iret
add
cmps
into
aad
xor
inc
adc
outs
add
mov
push
jne
in
out
xchg
jo
push
push
repnz
loopne
or
(bad)
or
xchg
das
mov
pop
(bad)
adc
ret
(bad)
retf
fist
sbb
retf
pushf
or
mov
in
pop
push
fild
or
dec
or
push
shl
and
nop
shr
imul
(bad)
mov
and
push
jo
jmp
add
hlt
pop
aaa
adc
sbb
add
lock
je
movs
ret
inc
add
pop
or
bound
cwde
dec
hlt
(bad)
fwait
ins
ja
xchg
xor
inc
inc
cmp
pop
sbb
mov
popa
test
dec
cmp
xor
mov
and
(bad)
hlt
pop
or
(bad)
inc
xlat
in
inc
out
sbb
cmp
sub
inc
add
lea
jmp
inc
repz
or
daa
pop
pop
mov
xchg
lock
stc
or
aas
xchg
inc
push
jge
mov
sbb
pop
fcom
pusha
ror
stos
icebp
mov
push
popa
fcomp
adc
mul
stos
pop
fnstsw
dec
clc
add
cmp
inc
or
cs
xchg
bnd
cmp
jge
jmp
mov
jp
xchg
in
dec
sub
mov
adc
add
sbb
push
mov
jle
jnp
test
mov
test
js
inc
add
push
inc
push
js
inc
jno
rcr
xor
mov
dec
xor
int3
pusha
fisttp
jno
sub
add
add
xor
or
adc
in
xor
mov
inc
mov
call
std
test
sbb
jmp
call
lods
jge
add
and
or
sub
nop
test
sbb
aam
imul
adc
xchg
mov
xor
test
sbb
mov
or
xchg
jge
mov
mov
xlat
jl
enter
cmp
ss
inc
pushf
mov
imul
hlt
adc
in
mov
jo
sub
jl
daa
ret
jg
cmp
jno
jl
mov
pusha
add
xchg
mov
pop
xchg
add
sti
push
sub
jae
dec
adc
sahf
jb
mul
mov
retf
adc
pop
adc
inc
xor
cmp
add
sub
aam
js
ret
ret
pop
out
imul
mov
popf
add
sbb
(bad)
and
hlt
pop
cs
and
mov
mov
mov
pop
ret
jmp
inc
dec
jne
or
xor
ret
ja
out
fisttp
lahf
int3
jne
jp
jmp
jl
mov
scas
dec
cmp
push
sbb
out
mov
jne
out
repnz
bound
sti
add
jno
jo
or
xchg
jl
or
retf
ret
push
xchg
push
mov
pusha
adc
dec
jbe
xchg
sbb
or
mov
xchg
mov
movs
jns
cmp
test
push
jmp
inc
jl
xchg
push
out
(bad)
cmps
pusha
je
push
pop
in
push
xor
and
pop
or
jne
adc
popf
push
ss
xchg
icebp
inc
test
dec
clc
jns
push
pop
ins
jns
loop
xor
mov
inc
or
inc
stos
xor
dec
and
fistp
ja
mov
adc
call
(bad)
dec
mov
xchg
adc
mov
jnp
ja
pop
and
push
test
mov
ja
mov
mov
cmc
add
jg
jmp
jnp
test
mov
outs
test
dec
push
daa
dec
cmp
jmp
mov
inc
das
daa
pop
inc
pop
mov
daa
test
in
push
cdq
dec
pop
jae
xchg
adc
mov
and
and
cmp
jl
xchg
sub
jo
nop
daa
push
test
sub
daa
and
cwde
cld
pushf
je
cmc
call
daa
lea
inc
test
pop
add
stos
je
fcomip
mov
add
sub
movs
inc
daa
add
adc
inc
daa
or
mov
cmp
inc
call
hlt
daa
xchg
pushf
sub
mov
dec
inc
mov
mov
cwde
xchg
les
inc
adc
cmp
mov
or
sub
pop
daa
pushf
add
adc
mov
ja
aaa
nop
daa
inc
push
mov
pop
js
push
daa
repz
daa
mov
pushf
in
test
pop
mov
dec
adc
xchg
js
test
jo
xchg
sbb
xchg
mov
sbb
aas
daa
mov
leave
mov
stos
movs
or
xchg
pop
push
mov
daa
cmp
sbb
test
xchg
ins
push
adc
cmps
push
outs
mov
les
test
adc
stos
daa
fldenv
mov
daa
popf
push
and
sub
cmp
sbb
push
daa
je
or
in
and
adc
xor
fisub
jp
push
nop
jl
test
call
mov
(bad)
and
jb
mov
stc
cmp
mov
cmc
add
mov
imul
sbb
inc
mov
fdiv
or
loopne
mov
iret
ficom
(bad)
mov
mov
dec
or
leave
add
es
pop
pop
adc
dec
hlt
ret
xor
push
fwait
push
mov
adc
cmp
push
push
inc
rol
inc
dec
bound
aad
fisttp
dec
add
inc
or
pop
stc
stos
xchg
jecxz
sbb
fcomi
xchg
adc
mov
xchg
shr
jge
cmp
sbb
js
jl
add
ja
mov
adc
fidivr
rol
scas
es
push
push
sub
test
imul
add
add
push
ds
retf
retf
int3
pushf
dec
or
pop
retf
adc
xor
lock
adc
add
popf
cmp
jmp
or
(bad)
neg
jg
mov
sub
shr
add
(bad)
adc
cmp
add
add
pop
add
push
popa
sbb
test
sbb
adc
int3
retf
adc
(bad)
cmp
sub
repnz
cmp
push
and
add
sub
lea
lods
xlat
mov
shl
sub
inc
sbb
clc
inc
add
mov
jle
loop
in
into
aas
daa
shr
add
or
xor
int3
push
dec
out
test
pusha
add
mov
cs
mov
sub
jmp
daa
jbe
jae
cmp
mov
xor
ja
adc
push
mov
inc
dec
cmp
cmp
jle
xchg
ror
or
ins
cmp
ds
or
loopne
push
sub
ins
or
sbb
sub
jg
aaa
pusha
daa
add
clc
mov
inc
outs
ins
jo
idiv
jmp
imul
jae
gs
cs
push
dec
dec
cs
or
imul
int3
or
add
sbb
outs
gs
mov
outs
js
jae
inc
gs
jne
je
add
retf
int3
add
push
xor
xchg
ret
cmp
ins
(bad)
adc
cmp
int3
mov
out
push
shl
scas
sbb
cs
sbb
push
scas
push
in
add
pop
ins
cs
inc
jae
mov
rol
cld
jbe
jge
jl
in
jp
push
adc
or
aad
clc
(bad)
fidiv
sub
or
push
jl
and
xor
fisubr
aaa
rol
add
fisttp
and
mov
popa
jmp
add
pop
pop
pop
xchg
lahf
sbb
pop
fisub
add
gs
out
mov
mov
sbb
cwde
add
adc
add
pusha
ss
scas
outs
sahf
jb
arpl
ins
test
cmp
popa
pop
pop
pop
aas
div
adc
mov
mov
dec
ds
vpmaxsw
or
push
imul
inc
add
pusha
cmps
pop
frstor
push
xchg
and
xchg
and
fild
mov
pop
sub
dec
push
cmp
sbb
outs
sub
xor
adc
mov
je
pop
pushf
test
adc
adc
push
into
push
or
and
dec
outs
jbe
inc
jb
popa
jns
popa
outs
popa
addr16
dec
loope
addr16
add
sbb
pop
xchg
mov
sbb
nop
inc
jb
mov
outs
fs
jo
push
outs
and
ins
sub
ret
jne
loope
add
push
outs
int
mov
jnp
shl
or
or
or
imul
mov
scas
add
or
mov
fistp
jg
xchg
test
sbb
xor
or
data16
cld
je
xor
or
imul
and
and
je
jg
adc
fld
xchg
push
and
add
jg
add
adc
xchg
xchg
aaa
inc
xor
jg
cs
add
push
sub
pop
ja
or
push
add
mov
add
mov
add
add
sub
rcl
cs
jno
loop
jmp
pop
ins
mov
(bad)
and
add
pop
adc
push
mov
(bad)
(bad)
cmp
in
mov
clc
add
sbb
or
add
clc
out
dec
push
xor
rol
pop
rcl
repz
std
or
pushf
fst
or
aaa
rol
add
sbb
add
lods
cwde
daa
mov
push
rcr
adc
fdivr
or
clc
test
jns
movs
or
gs
lods
add
call
loope
pop
bound
or
pop
adc
cmp
jo
pop
push
pop
cwde
div
popa
dec
pop
mov
sbb
sbb
test
add
mov
push
mov
adc
adc
pop
dec
mov
jnp
mov
push
push
fiadd
in
xor
push
int3
test
or
or
orps
es
push
mov
jo
pop
fsub
inc
xchg
or
rol
loope
xor
inc
stos
and
pop
movs
pusha
push
mov
or
nop
xor
add
dec
cmp
cmp
jbe
pop
xor
popa
pop
leave
dec
sbb
lods
add
jns
es
shl
int3
cs
cmp
aaa
in
cmp
add
daa
jo
add
pop
and
and
das
icebp
fwait
and
jno
pop
ins
xor
and
popa
mov
adc
and
stos
frstor
pusha
inc
fdiv
fucomi
add
arpl
or
fwait
mov
push
push
cmp
ret
ja
push
pop
adc
scas
sbb
pop
push
sub
mov
dec
add
adc
push
add
jp
inc
xor
push
into
gs
jo
fincstp
inc
cmp
push
and
pop
jmp
or
xchg
pusha
ins
pop
test
or
inc
jmp
sbb
mov
adc
sahf
adc
pop
push
pop
cs
fstp
lods
clc
add
ret
ja
push
fisubr
hlt
push
inc
cmp
sbb
inc
push
and
inc
and
pop
cli
inc
push
push
push
add
sub
dec
inc
call
mov
test
dec
dec
sub
sbb
jno
pop
push
pop
or
pop
icebp
add
mov
nop
push
ret
in
loop
mov
jb
movs
mov
pop
stos
inc
pop
cwde
test
pop
cmp
push
in
(bad)
aam
mov
or
adc
inc
dec
fs
js
gs
xor
pop
sub
mov
pop
loope
cmp
adc
jae
fsubr
xor
push
push
outs
jae
arpl
mov
mov
lods
rol
outs
lods
or
int3
ret
or
push
pop
mov
jbe
sbb
cmp
adc
popa
retf
fld
jbe
push
mov
ret
mov
xchg
cmp
inc
mov
push
add
add
je
fild
xor
das
jp
xchg
stos
mov
pusha
sbb
dec
les
pop
push
sub
cvtps2pd
mov
(bad)
pusha
mov
sub
jbe
jb
push
adc
sub
pop
cmp
inc
mov
jo
mov
jg
pop
adc
sbb
push
adc
out
adc
outs
arpl
je
popa
outs
push
in
sti
xchg
jb
outs
jb
pop
xor
xor
pop
adc
jo
pop
add
in
pop
int3
psrld
cld
outs
imul
pop
iret
mov
outs
inc
mov
loopne
shl
or
outs
adc
(bad)
movs
pop
test
mov
and
dec
outs
xchg
stos
imul
inc
push
inc
jns
jae
stos
add
ss
xor
add
xor
outs
or
in
ss
pop
cmp
inc
outs
sub
je
mov
sbb
fild
mov
xor
inc
push
ja
enter
adc
fsubr
(bad)
ja
inc
mov
cmp
outs
push
pusha
les
xchg
cmp
pop
cmp
inc
test
sbb
pop
mov
pusha
xor
adc
jbe
and
jne
pop
xor
xor
fs
add
xor
outs
and
xor
jb
adc
mov
push
add
push
outs
lods
or
add
into
push
jge
cld
inc
inc
fimul
add
or
(bad)
pop
add
lock
mov
push
push
clc
add
loopne
pop
inc
add
pushf
pushf
pushf
pushf
add
pushf
xchg
pushf
pushf
mov
pushf
pushf
mov
pushf
pushf
jb
je
pushf
pushf
pushf
pushf
jbe
js
pushf
pushf
pushf
pushf
jp
jl
pushf
pushf
pushf
pushf
jle
pusha
popa
pushf
pushf
pushf
pushf
bound
gs
pushf
pushf
pushf
addr16
pushf
pushf
pushf
push
ins
ins
pushf
pushf
pushf
pushf
outs
outs
push
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
push
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
xchg
pop
add
mov
das
dec
jmp
(bad)
popf
push
pushf
sbb
xchg
in
dec
data16
jno
scas
pop
int
mov
adc
mov
dec
gs
jo
jge
aaa
ins
push
inc
dec
imul
es
call
adc
icebp
add
dec
jl
das
adc
dec
jl
inc
jge
das
mov
mov
iret
in
push
push
imul
pushf
mov
in
sbb
data16
(bad)
inc
aam
push
jb
scas
and
adc
lock
add
data16
aaa
bound
dec
xor
xor
and
xor
imul
pop
test
pop
idiv
aaa
sub
xlat
adc
or
in
stos
cli
out
pushf
jge
xor
mov
cmp
or
adc
ret
mov
jge
jmp
adc
retf
(bad)
fistp
sub
sub
cmp
je
sub
mov
adc
(bad)
push
push
cmp
jge
lea
push
cmp
dec
mov
aam
push
cmp
or
fdiv
sahf
test
push
mov
sbb
div
push
(bad)
mov
push
push
mov
or
adc
adc
lock
jnp
jg
sbb
das
push
mov
mov
push
add
lock
movzx
xchg
or
push
and
and
jo
or
(bad)
(bad)
push
xor
or
std
data16
add
push
mov
cs
ins
outs
bound
(bad)
jmp
test
push
imul
lds
out
add
addr16
cmp
cs
gs
inc
outs
(bad)
aas
stos
loop
outs
fs
mov
in
xchg
jecxz
xor
retf
es
das
mov
test
ss
mov
rcr
ins
setne
xchg
into
jp
mov
es
imul
push
and
repz
fmul
hlt
push
not
aad
or
sbb
adc
call
ins
jne
imul
adc
je
je
int3
inc
sub
enter
jg
xchg
pop
lods
pushf
pusha
adc
and
mov
pusha
sar
iret
in
mov
ins
(bad)
and
adc
sub
push
pusha
push
je
bound
repz
rol
into
inc
xchg
shl
sub
arpl
xchg
pop
in
imul
push
loopne
das
pop
shl
adc
sar
and
es
mov
pusha
pop
push
or
sub
bound
clc
fs
lods
and
push
mov
in
pop
int3
psrld
sbb
and
ret
sub
push
jbe
inc
fs
fild
push
test
ins
fwait
or
shr
pop
add
jbe
jp
xor
cmp
push
outs
je
rol
mov
gs
or
test
push
push
dec
popa
clc
cmps
in
call
sahf
mov
lock
stc
popa
push
int3
fnstcw
push
sbb
dec
add
enter
dec
popa
js
mov
enter
ficom
cmp
adc
or
sar
push
push
jo
je
xlat
pop
or
or
xchg
in
sbb
pop
or
ss
retf
cwde
dec
mov
jp
imul
add
inc
cli
lods
sar
sbb
gs
or
ins
pop
daa
mov
jg
(bad)
imul
scas
das
mov
(bad)
cld
fdiv
ret
scas
idiv
push
adc
push
and
test
add
nop
push
ins
push
fbstp
push
pop
add
adc
adc
neg
dec
push
fild
push
or
or
popa
ficom
inc
stos
add
enter
jnp
jns
mov
push
inc
jne
retw
shl
and
sub
add
and
xchg
add
ret
fwait
add
out
mov
inc
xor
or
jo
mul
dec
add
loopne
or
pop
push
shl
lahf
rcl
add
int
xchg
call
push
outs
pushf
out
sub
aam
add
push
test
push
mov
nop
add
xor
pop
cmp
add
and
push
pop
icebp
fild
jo
push
push
xor
lods
adc
enter
ret
lea
and
lods
mov
loop
outs
push
lods
add
jo
pop
pop
pop
inc
adc
push
(bad)
icebp
pushaw
cmp
push
push
push
mov
cwde
psubusw
in
out
push
mov
add
lock
mov
into
subps
or
jbe
fcmovne
inc
movs
xchg
mov
js
fsubr
in
icebp
push
mov
icebp
jb
fwait
jbe
or
repz
pushf
xchg
or
jb
repz
hlt
in
jl
or
fisttp
(bad)
push
sbb
hlt
nop
bndstx
aaa
pusha
out
adc
mov
mov
sahf
xlat
mov
or
cwde
adc
add
out
sahf
sbb
sahf
out
sahf
sub
pop
jns
out
bound
jp
out
sahf
out
xchg
lahf
cmps
scas
sahf
out
sahf
mov
int3
(bad)
repz
add
jmp
daa
cs
sub
adc
mov
scas
sbb
push
mov
add
in
dec
add
cmps
sub
pusha
adc
cmp
push
addr16
or
dec
jae
outs
ins
adc
pop
push
sbb
gs
fidivr
jno
xor
inc
sub
(bad)
fdiv
(bad)
(bad)
xor
pop
mov
pop
fstp
jns
xor
dec
fisub
adc
jg
or
ror
cmp
jns
loopne
call
scas
rcr
push
pop
fisttp
dec
loop
mov
into
and
or
push
in
in
xor
push
add
fadd
syscall
add
call
mov
aas
sysret
add
or
shr
mov
ret
sbb
arpl
ins
sub
mov
or
inc
inc
sbb
popa
add
ja
outs
or
add
in
pop
nop
(bad)
test
js
jmp
push
mov
aas
rol
sar
adc
xchg
pusha
mov
(bad)
lahf
cmp
or
adc
push
rcr
lahf
push
jae
inc
jae
pop
push
push
inc
shl
xchg
push
in
scas
je
movs
xchg
inc
add
add
or
sub
xor
and
test
call
add
and
aad
aam
or
lea
test
arpl
int
outs
adc
adc
mov
pop
xor
add
mov
or
xor
fisttp
movs
sub
add
imul
rol
jl
sbb
push
push
inc
push
imul
sbb
shl
mov
add
leave
or
push
rol
jne
pop
mov
lahf
aas
xchg
pusha
push
fcomp
mov
inc
ja
or
adc
mov
add
lahf
inc
mov
aaa
(bad)
fld
xchg
or
jecxz
xchg
pop
add
pop
adc
xor
test
add
jmp
aas
inc
aad
sub
xchg
fsub
xor
add
jecxz
dec
add
fld
sti
mov
or
sub
mov
pop
mov
mov
and
jns
sub
push
test
jbe
stos
(bad)
das
fmulp
pop
and
addr16
add
cs
cmp
sbb
pop
xchg
fst
sub
arpl
fwait
test
sbb
cmp
out
or
and
jge
fadd
push
mov
sbb
fiadd
pusha
push
inc
aam
sub
add
ror
jge
xchg
stos
call
adc
mov
(bad)
shr
mov
pop
add
push
sub
push
popa
xor
add
divps
add
out
test
sub
push
setg
xor
rol
clc
sbb
sahf
out
xor
and
add
push
jbe
mov
sbb
adc
inc
out
lea
or
in
push
popa
addr16
sub
inc
or
inc
dec
inc
push
outs
push
or
xor
add
fdiv
cmp
movs
add
ins
dec
js
mov
or
push
mov
jmp
push
jmp
pmaxub
jbe
add
sbb
pop
push
mov
mov
inc
inc
push
(bad)
lea
or
pusha
es
stos
or
sbb
or
xor
inc
dec
add
outs
or
push
xor
xor
push
fdiv
pop
sbb
adc
pop
movs
sub
dec
mov
xor
rol
shr
inc
popf
out
sub
mov
pop
stos
mov
stos
adc
dec
pop
lods
movs
mov
in
or
lods
dec
add
push
pusha
dec
sub
jnp
rcl
jmp
add
das
add
in
aaa
fwait
popf
mov
(bad)
in
pop
dec
das
jo
pop
ja
push
xlat
pop
test
fmulp
push
push
clc
jl
mov
mov
inc
lods
mov
jmp
xor
adc
jl
dec
int3
jmp
push
adc
xchg
jl
xlat
adc
push
push
inc
aaa
xlat
rcl
mov
shr
inc
cmp
mov
dec
ins
push
sub
rol
xchg
push
and
les
dec
shl
dec
push
push
stos
jg
rol
sub
in
sbb
in
in
pusha
sbb
xchg
or
sub
rol
iret
dec
jge
push
cmps
sbb
popf
nop
out
mov
pop
jo
xchg
push
push
push
dec
dec
enter
arpl
repz
mov
jmp
inc
out
cmps
(bad)
dec
int3
push
movlps
inc
push
push
(bad)
mov
movs
jmp
xchg
cmps
and
push
adc
call
mov
addr16
adc
push
and
adc
pusha
jecxz
jnp
push
add
loope
mov
inc
sub
push
in
(bad)
adc
or
mov
clc
repnz
xor
jbe
mov
mov
jp
push
adc
sbb
dec
pop
sar
xchg
mov
mov
push
iret
or
jns
cmp
xlat
bound
pmaxsw
es
mov
mov
stos
test
xor
dec
imul
sbb
cs
pusha
mov
sbb
stc
push
add
add
add
or
adc
add
add
add
vmovups
pusha
sbb
mov
push
sub
fld
mov
fnstcw
push
bound
fst
loopne
shl
adc
xchg
add
lods
imul
push
idiv
mov
and
imul
or
popf
xlat
push
hlt
mov
push
sbb
inc
imul
xor
mov
js
and
pop
add
inc
mov
and
or
in
xchg
loope
pop
ins
int
fmul
out
push
fsubr
xor
pop
mov
out
push
(bad)
cmp
loopne
pop
xchg
pop
push
mov
repz
(bad)
sub
xchg
(bad)
dec
into
push
arpl
sub
scas
in
ds
fwait
aaa
movs
(bad)
fimul
add
cmp
inc
push
inc
dec
dec
xlat
test
xlat
sub
xlat
dec
xor
and
cmp
mov
ins
adc
pop
inc
add
sub
add
out
popa
mov
sub
mov
push
rcl
inc
or
ins
in
sub
bound
cmp
add
jmp
pop
xor
imul
sbb
sti
pop
fsub
add
outs
das
push
stc
dec
and
into
repz
call
jmp
daa
popf
dec
clc
es
dec
push
dec
or
dec
pushf
fxrstor
dec
shl
sbb
pop
clts
int3
cmovle
mov
dec
adc
and
adc
xor
xor
sub
or
dec
push
mov
add
shl
xchg
dec
mov
jb
fwait
dec
out
pop
adc
fsubr
xor
es
adc
dec
adc
pusha
sub
dec
pusha
sub
(bad)
lea
cmps
shl
adc
(bad)
dec
push
push
add
mov
mov
mov
test
je
sub
mov
test
jl
(bad)
jg
(bad)
cmp
jg
mov
mov
push
mov
mov
mov
sti
in
dec
ss
add
dec
xor
sti
sub
sub
sar
bnd
nop
loopne
mov
jle
lea
jmp
xor
pop
pop
pop
pop
ret
aaa
pop
repnz
xor
and
cmpxchg
jmp
cmp
jle
cmp
sti
arpl
cmp
add
ret
ror
fdivr
inc
loop
and
pop
clc
mov
lea
push
loope
test
jge
ficomp
pop
ret
add
je
mov
add
fcmovnu
dec
out
adc
jg
push
cmp
sub
inc
cmp
repnz
push
(bad)
lock
mov
mov
sbb
dec
push
jmp
adc
push
loopne
inc
mov
mov
mov
mov
mov
mov
div
adc
shl
mov
int
shr
push
fimul
clc
aam
push
mov
in
mov
and
or
je
retf
mov
imul
xlat
in
cld
jl
mov
mov
fstp
sub
(bad)
sar
(bad)
inc
mov
mov
pop
mov
cs
out
push
icebp
lock
movs
or
mov
push
add
mov
adc
js
in
mov
xor
jp
sub
push
pop
add
in
lods
xor
bound
sar
(bad)
pop
push
add
push
rcr
pop
xchg
mov
cli
rol
imul
mov
sbb
sbb
ins
movs
push
add
jne
sub
or
or
add
or
inc
nop
ss
ins
add
imul
dec
cmp
lock
(bad)
mov
mov
sbb
adc
js
cmp
and
xor
cwde
stos
lock
adc
xchg
or
push
add
retf
dec
in
pop
or
mov
push
and
inc
or
sbb
xchg
adc
push
xor
in
xor
push
mov
mov
movs
add
addr16
sub
aad
sub
cmp
pop
wrmsr
pushf
je
std
test
sub
xchg
jg
lds
sbb
adc
mov
mov
jp
pop
mov
pop
mov
and
jl
bound
sub
popa
jecxz
mov
cmp
xchg
vaddps
jcxz
push
fist
push
ja
jb
jmp
jb
test
(bad)
call
add
sbb
test
stos
inc
add
push
daa
lea
test
push
push
daa
push
daa
push
ins
and
or
popa
ds
or
push
add
cmp
test
rcr
push
aas
and
push
mov
and
fist
(bad)
cli
add
add
adc
cmp
pushf
rol
xor
xchg
push
pop
push
sbb
shl
test
jle
push
mov
mov
or
enter
pop
pop
xchg
(bad)
lds
dec
push
test
or
clc
test
movzx
aaa
dec
xchg
ret
fs
mov
cmp
xlat
hlt
lock
outs
mov
inc
cmc
mov
mov
add
ds
fmul
pop
cmp
dec
adc
cmp
(bad)
and
mov
mov
pop
bound
jnp
dec
jae
aad
add
leave
or
loopne
xor
fwait
push
inc
mov
cmp
pop
cwde
add
inc
sbb
or
xchg
test
inc
xchg
push
jle
push
das
loopne
mov
js
inc
sbb
xchg
ins
call
inc
add
std
(bad)
call
sbb
neg
mov
cmp
(bad)
mov
movs
add
dec
sbb
mov
cmp
lods
jecxz
imul
lock
mov
call
push
adc
xchg
ror
ret
sbb
push
or
mov
outs
loope
sti
inc
and
jl
les
mov
xchg
dec
ins
mov
sbb
outs
xor
ds
imul
ret
nop
aas
cld
pop
fisubr
and
je
sub
push
out
push
pop
add
sub
mov
or
fmul
add
cs
lods
push
xor
inc
(bad)
dec
mov
push
fnstsw
ss
into
dec
jo
sahf
fcmovnbe
pop
lock
js
test
mov
dec
test
or
mov
and
pop
hlt
lea
add
ss
sbb
jmp
mov
lea
add
push
fsub
sub
mov
and
push
rol
iret
jp
and
jbe
retf
dec
pop
add
cmp
sbb
mov
sar
jns
adc
neg
mov
sti
push
rcr
retf
add
popa
pop
int
ins
adc
test
or
lods
sub
inc
inc
(bad)
jmp
jg
inc
das
retf
cmp
jl
movzx
shr
mov
sbb
mov
and
adc
jne
jg
arpl
jb
jge
push
sub
inc
cld
dec
test
jl
ins
mov
mov
popf
imul
(bad)
adc
shl
or
mov
mov
rol
add
dec
jne
or
adc
sti
rcr
gs
rol
(bad)
loopne
dec
sub
sub
imul
sbb
cmp
pusha
dec
(bad)
jbe
mov
jmp
dec
or
inc
dec
jne
cmp
push
(bad)
pop
pop
mov
test
mov
pop
adc
xchg
jo
adc
(bad)
fadd
sti
push
std
(bad)
jmp
sbb
loopne
aam
mov
jo
mov
rol
sbb
cmp
push
and
mov
inc
(bad)
xchg
(bad)
or
jbe
js
repz
inc
sbb
pop
and
cmp
ja
jmp
inc
pop
loop
and
push
hlt
push
std
sbb
push
clts
sbb
cld
xchg
inc
ds
test
adc
pusha
clc
cmp
nop
jmp
ret
js
adc
add
cld
enter
mov
mov
inc
ret
cmp
mov
sbb
and
ds
sub
xor
ret
mov
fstp
lea
daa
xchg
adc
shl
adc
mul
pushf
jmp
lds
(bad)
lock
mov
or
(bad)
mov
mov
pop
sti
lods
fwait
ss
jg
inc
fdiv
ds
or
mov
cmp
ret
cmp
lea
pop
scas
mov
out
ret
add
dec
inc
rcr
aas
pop
ret
(bad)
int
mov
push
push
ret
inc
cs
mov
or
(bad)
das
aam
xchg
pop
out
cwde
pusha
pop
add
cmp
cli
hlt
push
mov
add
xor
mov
pushf
rol
sbb
mov
mov
inc
jo
sub
nop
dec
push
push
push
xor
nop
pop
dec
cmp
clc
mov
push
das
aas
das
in
sbb
or
add
push
das
mov
das
mov
dec
adc
add
or
jo
das
push
int3
das
cmp
xchg
and
lock
loopne
add
pop
inc
das
push
dec
add
push
das
aas
das
in
cli
push
and
push
mov
(bad)
call
enter
xchg
pop
sub
mov
pop
push
jle
call
loopne
sbb
(bad)
addr16
add
sbb
es
inc
outs
cmp
or
pop
cmp
push
lods
and
sbb
push
bound
(bad)
push
or
xor
mov
mov
inc
dec
jne
lahf
sbb
xor
and
mov
adc
push
cmp
dec
jl
inc
xor
js
data16
test
out
inc
in
adc
in
je
jmp
adc
in
(bad)
jg
xor
test
jne
inc
add
dec
jne
or
(bad)
push
pop
cmps
scas
mov
adc
adc
or
loop
or
shr
movzx
int3
mov
mov
xor
xor
add
push
add
sbb
adc
(bad)
and
add
push
push
sahf
ja
rol
outs
sti
out
push
ror
dec
test
jl
inc
xor
stos
aaa
fwait
ret
lea
loop
add
jmp
pop
and
add
xlat
pop
fsub
xor
pop
add
hlt
pop
into
mov
pop
inc
dec
jne
mov
lds
ss
mov
mov
inc
mov
(bad)
movs
xchg
inc
imul
icebp
ret
test
hlt
rcl
mov
jo
hlt
nop
pop
setae
into
and
cdq
push
dec
sbb
dec
test
add
adc
fidiv
call
jne
pop
xchg
call
xchg
aas
dec
and
sahf
in
push
wbinvd
or
add
add
or
popf
or
adc
ror
dec
push
pop
cmp
(bad)
or
dec
dec
pop
push
or
das
pop
sub
idiv
mov
jno
je
mov
inc
call
adc
loope
mov
jge
adc
fsubp
push
inc
jmp
pushf
(bad)
call
sbb
and
inc
or
(bad)
pop
rol
xor
iret
dec
sbb
sti
sub
mov
mov
push
lea
cmp
inc
jg
jmp
addr16
(bad)
push
sbb
jp
cmps
and
scas
ret
cmp
shr
cdq
add
or
pop
jge
adc
pusha
mov
push
aas
mov
nop
lock
lea
lock
(bad)
sbb
pop
shl
rcl
cmp
pop
into
shl
add
sbb
shl
rcl
mov
fiadd
scas
cmp
call
inc
xor
dec
rcl
push
cmp
ja
sub
mov
sub
sahf
(bad)
xor
add
xchg
dec
ror
les
je
aas
add
jp
xlat
and
xor
push
lock
add
inc
xchg
int
xchg
adc
jnp
add
jae
fdiv
mov
aaa
push
push
scas
cs
pusha
dec
xor
sti
sub
cmp
add
mov
mov
cmp
sub
pop
add
jmp
rcl
cmp
fmul
call
sbb
dec
ss
adc
sbb
div
fadd
sahf
push
jle
push
int3
mov
add
sub
iret
cmp
jb
or
cmp
out
mov
das
mov
xlat
leave
xor
aas
dec
hlt
adc
jno
xchg
ins
(bad)
nop
sbb
add
cmp
pop
dec
ds
ja
cmps
add
sbb
pop
cld
fiadd
jne
nop
sub
int
(bad)
movntq
sub
mov
mov
inc
(bad)
or
sti
mov
push
cmp
inc
fadd
xchg
or
xchg
cmp
test
inc
mov
sbb
call
sub
mov
pop
push
lock
leave
add
gs
jmp
dec
in
rcl
mov
and
frstor
ds
outs
and
(bad)
test
push
retf
mov
or
aam
or
add
or
cli
xor
dec
fcom
xor
inc
add
jmp
pop
and
inc
sbb
fidivr
ret
inc
adc
popa
pop
data16
push
add
jnp
or
xor
les
sub
ret
mov
or
jbe
sub
push
jb
call
add
dec
dec
(bad)
and
jmp
and
pop
add
push
sub
into
rcl
dec
add
push
and
lods
js
in
mov
adc
xor
lods
loopne
outs
loopne
lods
xor
sub
dec
lods
jne
pusha
(bad)
imul
pop
(bad)
aaa
jle
mov
or
push
inc
dec
jne
mov
push
mov
pushf
lea
pusha
inc
enter
sbb
add
rcl
adc
inc
sub
les
sub
shl
adc
test
push
mov
sbb
test
shl
add
pop
(bad)
pop
in
lahf
mov
cs
pop
inc
xor
js
add
or
pop
adc
cmps
inc
cli
fsubp
cmps
inc
daa
xchg
mov
push
or
fcmove
cmp
jmp
mov
xor
aaa
in
and
fisubr
push
lea
add
jne
mov
cmp
dec
jne
(bad)
mov
arpl
push
nop
loopne
mov
jo
sbb
jne
push
ret
inc
rol
pop
sub
adc
popa
mov
xor
enter
mov
xchg
sar
push
inc
je
mov
loopne
pop
cdq
mov
jp
mov
inc
std
jmp
mov
cmp
and
mov
push
loop
sbb
push
jb
push
clc
xchg
jge
out
sub
stos
cmp
(bad)
rcr
mov
jmp
sub
hlt
or
dec
mov
stos
fs
jmp
lea
(bad)
cwde
and
jle
jne
gs
jle
or
add
test
and
cld
shl
add
inc
test
cmp
je
push
jmp
inc
push
dec
sub
loopne
int3
mov
mov
mov
cmp
fidivr
(bad)
adc
pop
inc
out
das
push
add
xor
cmp
data16
mov
pop
pop
cmp
adc
int3
dec
inc
push
call
inc
add
mov
cmp
jne
mov
movs
xor
xchg
xor
or
mov
jle
push
repz
in
outs
mov
mov
dec
jne
jmp
pop
lods
sub
or
xlat
inc
mov
xor
mov
or
ins
or
jle
push
xchg
test
ja
inc
call
sbb
push
movs
add
jmp
mov
aam
ss
rol
or
loopne
mov
push
and
pushf
push
scas
fisttp
stc
pop
fadd
sub
aaa
call
add
xchg
xchg
jnp
call
nop
cmp
add
pop
stos
nop
pop
adc
mov
mov
mov
ret
pop
(bad)
dec
xchg
mov
test
sbb
shl
jmp
bound
or
mov
push
inc
push
cmp
sbb
scas
and
mov
lea
call
(bad)
jmp
lods
xchg
out
adc
and
push
xor
or
or
aas
pop
pushf
adc
in
scas
lock
stos
cmp
and
inc
lds
pop
push
ja
adc
fldcw
mov
fdivr
adc
or
fisubr
push
lock
sbb
retf
call
arpl
test
push
add
push
lock
test
pop
scas
mov
call
or
ffreep
nop
and
and
aam
pop
fistp
xchg
add
je
jmp
sbb
cld
mov
dec
movs
xchg
push
mov
dec
push
fwait
jmp
or
add
fmul
adc
mov
or
ins
pop
(bad)
add
mov
ins
jo
sub
(bad)
mov
pop
inc
jge
in
pcmpgtd
adc
xor
pop
test
push
add
or
cmp
sbb
add
sar
push
push
jge
xchg
loopne
aas
sbb
adc
push
or
cmc
inc
ret
jbe
adc
add
and
or
or
xchg
dec
lahf
cmp
dec
cs
mov
push
sbb
(bad)
jmp
shl
inc
xchg
cmp
je
inc
dec
jne
ds
fisubr
cld
movs
ret
jg
shl
inc
xchg
mov
dec
fstp
ins
jb
ja
jo
jne
test
inc
push
mov
jmp
popf
push
sbb
aas
push
icebp
adc
mov
mov
je
jnp
fld
dec
mov
cmp
ja
(bad)
imul
nop
inc
into
fimul
mov
mov
or
add
push
xor
push
out
test
and
xchg
movs
jmp
sub
out
aam
and
int
pop
jne
int
adc
enter
add
leave
es
and
or
push
xor
mov
lods
mov
popa
push
mov
pusha
cwde
adc
add
pop
in
dec
out
call
or
call
adc
adc
mov
jge
xchg
loop
ja
mov
dec
add
push
inc
int
adc
cmp
xor
adc
unpcklps
cmp
jbe
movs
popa
xchg
ret
sar
fild
retf
mov
jge
pop
arpl
sbb
add
mov
fwait
add
cmps
xor
inc
jmp
cmp
adc
or
push
cmp
adc
xor
pop
call
scas
adc
pop
sar
sar
ret
jl
fistp
xor
and
xchg
lods
movs
pop
push
aam
push
add
int3
add
int
gs
rcl
sbb
add
inc
sub
rep
repz
and
(bad)
repz
setns
leave
add
sbb
shl
and
sar
retf
xchg
or
int
jl
xchg
mov
mov
inc
(bad)
idiv
scas
dec
adc
dec
cmp
shl
cmp
xchg
xor
xor
cmp
mov
mov
outs
jno
ins
sbb
jb
cs
or
cwde
rcl
and
push
call
shl
test
push
leave
adc
dec
out
dec
test
jmp
daa
mov
into
adc
or
sub
sbb
pop
pop
fsubr
mov
in
inc
jge
add
fadd
jae
test
mov
loopne
(bad)
or
push
add
or
or
pusha
adc
sbb
or
adc
jge
xchg
cmps
les
sar
jl
popf
jnp
and
add
scas
pop
jo
cmp
fdiv
ins
rol
in
mov
mov
add
daa
dec
add
mov
and
dec
gs
push
and
ja
fs
push
jb
imul
mov
(bad)
lods
daa
pushw
or
dec
mov
pop
aaa
xchg
jo
jns
mov
mov
lahf
es
add
test
retf
sbb
dec
dec
add
dec
jle
outs
or
push
daa
add
ds
sub
lea
in
lea
xor
(bad)
out
jle
nop
and
imul
xor
in
cmp
sub
test
or
mov
shl
loopne
pusha
mov
sub
push
add
test
cmp
add
sub
adc
xor
bound
outs
mov
push
js
sub
movs
add
inc
push
sbb
ins
test
sbb
mov
sti
sbb
or
jl
sbb
cwde
fucom
jb
jmp
adc
retf
leave
in
sbb
xchg
lods
and
pushf
pop
sub
xchg
xor
mov
pop
rol
nop
xchg
dec
sub
enter
xor
int3
and
xor
dec
push
cdq
aam
fsub
push
fadd
xchg
dec
in
call
fsubr
fwait
adc
out
(bad)
and
mov
xor
gs
mov
xchg
in
test
(bad)
loopne
leave
gs
or
cmps
or
adc
and
dec
adc
sbb
dec
gs
jo
nop
and
adc
lods
sub
inc
sahf
jl
xchg
mov
or
inc
retf
lods
xlat
mov
and
lds
add
push
cmps
ror
in
mov
cmp
sub
test
xchg
add
mov
xchg
add
aas
adc
add
add
sub
int3
adc
imul
cdq
ror
inc
(bad)
daa
push
pop
xor
test
push
push
add
test
push
adc
add
(bad)
mov
pop
mov
int
cmp
mov
adc
add
stos
(bad)
das
inc
add
pop
imul
cmp
jle
sub
mov
add
xlat
xor
or
outs
or
pusha
sbb
jbe
adc
xlat
addr16
add
lds
or
das
(bad)
mov
nop
pop
add
aaa
lahf
lock
aam
daa
scas
or
lahf
xor
loope
cmp
daa
(bad)
rol
xlat
push
cmp
shl
sbb
int
(bad)
jnp
mov
push
pusha
inc
sbb
mov
std
xor
clc
stos
ja
push
jne
lea
mov
lea
sahf
arpl
daa
pop
adc
mov
test
xor
xor
fs
movzx
mov
mov
inc
xchg
enter
fldcw
add
adc
add
cmp
pop
sar
test
xchg
call
call
adc
lock
les
mov
and
pop
out
ja
int3
or
jp
and
push
mov
adc
add
pop
inc
out
dec
xor
(bad)
daa
push
push
and
lods
jnp
add
jbe
inc
xor
cmps
les
or
mov
push
or
push
inc
mov
push
push
aaa
xor
std
mov
jmp
or
sub
bswap
push
je
fst
mov
cwde
pop
jmp
sbb
out
or
std
adc
ja
cmp
sar
(bad)
mov
aaa
xor
or
jmp
cdq
out
bound
sub
pop
out
clc
fistp
mov
in
ins
or
pop
clc
fwait
jl
or
cld
sub
pop
mov
jge
imul
cmp
and
loope
sub
cmp
dec
ja
mov
mov
xor
dec
lods
add
dec
mov
fs
xor
mov
xor
push
lea
leave
shl
lea
into
and
and
xchg
jmp
popf
mov
arpl
cmp
add
jmp
and
mov
and
shr
test
call
ret
mov
mov
mov
(bad)
push
lock
stc
push
pop
test
mov
test
out
add
fldz
fsub
sbb
add
adc
xchg
call
sbb
in
mov
mov
jg
lods
add
scas
in
adc
mov
push
xchg
push
iret
dec
inc
pop
push
loope
js
add
lods
fwait
jmp
jno
jnp
in
test
xchg
and
cmp
mov
adc
(bad)
fdiv
jmp
imul
cs
clc
aam
xchg
cs
outs
fsubr
cmc
mov
add
mov
sbb
fimul
pop
mov
cmp
mov
adc
imul
adc
cmp
loopne
inc
cmp
adc
or
ins
(bad)
into
mov
cwde
aad
or
icebp
cmp
jg
int3
lds
mov
sbb
mov
xor
xchg
pop
inc
cli
push
push
adc
fstp
inc
popa
or
and
sub
inc
test
xchg
out
adc
cmp
dec
popf
mov
push
retf
pop
xchg
or
js
add
sti
lods
mov
mov
call
jmp
cmp
rcl
xor
scas
sub
mov
test
ror
outs
cmp
jnp
(bad)
popf
fs
out
jae
push
mov
push
(bad)
ja
jp
mov
fisttp
call
into
sub
ja
add
jb
push
push
cmp
pusha
xchg
cli
mov
mov
int
xor
adc
popa
add
bound
dec
mul
fild
adc
int
(bad)
and
mov
(bad)
xor
jmp
fimul
adc
xor
mov
rol
add
bound
adc
add
mov
stos
lods
push
call
scas
push
mov
dec
xchg
jle
sub
enter
leave
ret
cmp
cld
pop
int
fwait
rcr
dec
outs
xor
(bad)
lea
mov
(bad)
mov
and
add
dec
xor
xor
or
or
add
add
lock
xchg
push
adc
mov
push
add
in
mov
add
add
fidiv
pop
enter
push
xcrypt-cfb
cmps
loope
jno
shl
lahf
(bad)
movzx
out
mov
push
fild
inc
xor
sub
push
push
cs
hlt
push
pop
das
in
and
mov
and
push
inc
lock
jo
and
or
adc
cmp
or
cmp
jo
xor
lss
clc
add
jae
adc
mov
push
or
and
loopne
push
clc
add
push
cmp
scas
adc
and
add
jl
adc
mov
inc
pop
aam
pop
inc
mov
sub
pop
pusha
adc
nop
or
cmp
jo
sahf
leave
enter
or
cmp
adc
ds
add
or
movs
js
or
jno
dec
xor
out
or
xor
call
xor
neg
(bad)
mov
cld
ret
dec
rol
js
lds
outs
fwait
xchg
sti
add
add
pop
mov
dec
mov
adc
mov
fistp
and
(bad)
fnsave
or
push
or
sbb
test
inc
nop
mov
aas
cmp
and
test
adc
sbb
mov
out
xor
mov
xchg
jne
out
add
inc
call
add
mov
xchg
sub
ror
adc
pop
push
fisub
mov
popa
mov
add
push
ds
jo
xor
sti
add
icebp
aaa
lods
and
daa
bound
sbb
mov
xchg
cdq
scas
xchg
push
mov
pop
sub
push
ret
jo
(bad)
add
jmp
mov
mov
push
xchg
pop
mov
pusha
(bad)
and
and
mov
inc
mov
mov
mov
retf
sbb
adc
sub
pop
dec
and
xor
add
dec
push
xchg
add
bound
push
shl
lock
lods
sar
cdq
add
adc
or
add
push
adc
inc
adc
mov
pop
addr16
mov
or
push
call
mov
jle
jmp
out
(bad)
clc
retf
jmp
bound
or
mov
(bad)
fimul
adc
push
mov
adc
inc
loopne
ss
push
adc
cmp
cmp
sub
jo
xor
inc
fcomp
add
inc
mov
lock
bound
(bad)
scas
ja
ja
repz
sub
adc
sbb
xchg
aaa
cmp
mov
cld
rol
jae
xchg
es
popa
add
jnp
jp
iret
push
cmps
or
jmp
mov
pop
xor
inc
std
or
(bad)
or
clc
lea
push
sub
mov
pop
lea
aam
pop
add
cmp
scas
or
imul
mov
mov
(bad)
mov
pop
mov
addr16
jmp
in
dec
jne
pop
enter
jns
and
push
or
inc
jo
aam
push
cmps
sub
sbb
or
jno
adc
imul
or
fwait
dec
xor
sbb
dec
daa
cli
jmp
mov
jmp
ret
out
sub
cmp
sahf
xchg
sahf
push
mov
ret
pop
(bad)
mov
fsubr
push
cmp
cli
shl
sub
dec
sub
jl
pusha
jg
sti
inc
xchg
lea
xchg
movzx
or
jne
adc
xor
pop
dec
out
aas
sub
inc
retf
lds
fistp
push
call
xchg
test
mov
loopne
push
popa
jmp
dec
maskmovq
test
mov
dec
push
les
xor
pop
push
jbe
add
loopne
mov
call
in
cdq
push
push
lds
add
lds
call
cmp
fcmovb
add
push
into
retf
mov
out
cmps
or
imul
out
and
inc
mov
clc
rcl
pop
jne
sbb
add
push
movzx
scas
pop
mov
loope
call
mov
inc
(bad)
jne
clc
jmp
mov
fdiv
inc
dec
jne
out
setg
aas
sub
jbe
add
adc
mov
cmps
or
push
fiadd
dec
sbb
fadd
ins
push
aas
or
jl
(bad)
test
jle
push
(bad)
mov
arpl
retf
jmp
out
mov
sub
jl
inc
mov
cmp
jne
mov
mov
dec
jne
or
xchg
push
pop
xchg
mov
and
dec
mov
push
push
jecxz
jp
mov
cld
jmp
or
inc
inc
pop
push
sbb
adc
js
push
in
jmp
addr16
imul
push
xor
gs
jns
or
cs
sbb
aaa
cmp
test
je
retf
cmp
xor
sbb
sub
push
les
ins
clc
adc
in
dec
push
loopne
or
daa
inc
loopne
sub
mov
stos
add
rcl
imul
mov
mov
pop
mov
ror
imul
cmp
lock
mov
popa
shl
pushf
inc
add
mov
cli
jmp
or
add
data16
cmp
int
cmp
mov
add
lea
push
pop
push
add
jb
mov
push
mov
xchg
ss
add
or
pop
pop
jbe
jbe
test
test
and
adc
jns
out
lds
cmp
or
(bad)
dec
rol
xchg
cs
loopne
xchg
push
sbb
cmp
dec
daa
lock
pop
adc
mov
scas
rcr
cdq
and
mov
mov
push
sbb
fadd
in
adc
fisttp
jb
jmp
jl
in
scas
and
inc
adc
mov
inc
lds
or
jle
cmp
es
call
enter
mov
or
enter
push
out
or
inc
fs
xchg
sbb
inc
pusha
std
sahf
push
les
stos
pop
out
out
les
push
or
push
in
jbe
ss
sbb
add
or
add
jge
mov
sub
imul
push
sub
push
adc
lds
arpl
and
call
xor
stos
addr16
les
mov
adc
add
setae
xor
(bad)
rol
inc
and
sbb
push
shl
mov
add
and
pop
sbb
fcom
adc
push
and
inc
js
adc
xlat
pop
pop
mov
and
repnz
mov
add
and
pop
ror
cmp
cmp
cmp
push
jne
clc
jle
and
test
add
jbe
push
dec
inc
pop
mov
pop
cwde
aam
psrad
mov
xchg
adc
mov
push
cmp
mov
sbb
jle
add
xlat
je
in
clc
inc
mov
ins
jbe
dec
pop
cld
das
adc
inc
push
or
aaa
fild
outs
add
adc
jo
dec
(bad)
xor
add
fsub
jl
mov
(bad)
push
mov
je
dec
push
movs
push
movs
pop
ins
cmps
fwait
dec
sti
pop
adc
jl
mov
push
mov
mov
scas
in
jnp
xor
test
mov
pusha
sti
stos
mov
ds
push
add
sub
hlt
call
(bad)
(bad)
push
add
push
dec
fs
outs
imul
jb
outs
ins
jo
outs
outs
ss
div
and
inc
jb
popa
je
in
add
inc
dec
jbe
or
ins
call
pop
jnp
dec
add
sbb
sub
cmp
push
inc
dec
ja
jb
das
div
mov
cmc
mov
cmovo
aaa
test
xor
in
ss
rcr
(bad)
push
shl
iret
pusha
xchg
iret
mov
cmp
mov
ror
fs
pusha
cmp
mov
ret
push
popf
adc
xor
pop
ret
mov
add
cmp
mov
add
mov
or
sub
sub
push
(bad)
jae
data16
shl
loope
or
push
in
push
sub
cmp
dec
inc
or
btr
(bad)
rcl
or
shl
sub
jnp
(bad)
lods
inc
(bad)
test
setne
ret
push
adc
xchg
xchg
rcr
xor
dec
push
cmc
sbb
push
xor
xor
push
test
adc
adc
xor
cmps
push
outs
add
add
ins
dec
push
sahf
push
in
das
sti
push
sub
push
mov
clc
scas
nop
stos
inc
xchg
cmc
js
scas
xor
scas
cwde
xchg
cmp
push
in
outs
mul
push
mov
out
dec
clc
adc
lods
or
imul
xor
jb
or
pop
adc
std
gs
popa
cmp
push
cmps
ins
and
push
iret
jo
or
jae
arpl
je
bound
pop
push
mov
mov
jne
ins
fs
data16
pusha
inc
adc
inc
daa
lods
sbb
adc
xlat
adc
inc
adc
(bad)
mov
in
ficom
jae
outs
das
sbb
lods
pop
jecxz
jl
dec
out
mov
fadd
or
lock
add
and
add
outs
pop
inc
outs
adc
nop
xor
adc
xor
push
dec
push
add
popf
sub
push
push
push
inc
inc
add
dec
push
adc
or
pop
arpl
les
sub
inc
xlat
push
pop
add
pop
mov
out
add
and
pushf
iret
pop
aad
xchg
push
je
pop
bound
and
pop
and
push
nop
mov
dec
loope
jle
cmp
push
test
mov
push
mov
shl
ins
adc
lahf
push
xor
push
out
sub
mov
out
outs
out
push
and
xchg
mov
lea
daa
(bad)
push
mov
sub
lahf
std
adc
adc
pop
sbb
push
ins
(bad)
pop
xchg
xchg
loope
fs
outs
and
fadd
sbb
mov
or
mov
sub
dec
out
adc
mov
add
cmps
push
sub
push
rcl
sbb
dec
jne
or
xor
xor
stos
pop
mov
loopne
or
fdiv
mov
inc
lods
sbb
sbb
nop
adc
sub
out
pop
and
and
idiv
mov
or
test
js
mov
dec
push
jns
mov
popf
pop
cmp
lahf
and
adc
test
clc
outs
push
jo
lods
lea
cmp
or
sbb
and
or
jmp
hlt
xchg
out
or
test
call
xor
ja
push
sbb
mov
arpl
cdq
cmp
hlt
jne
ret
aad
jmp
sbb
add
push
jo
add
mov
sub
jge
call
(bad)
ds
adc
aas
pop
in
pop
or
enter
shl
inc
ins
push
push
or
or
push
push
mov
dec
mov
push
aaa
jb
in
xor
mov
push
mov
icebp
imul
dec
xor
pop
shl
push
mov
mov
fisub
lock
in
mov
mov
paddusw
loopne
pop
mov
add
adc
adc
push
clc
sub
xchg
dec
push
add
add
dec
push
cwde
scas
movs
lock
sub
sbb
jb
mov
and
xchg
in
(bad)
xor
(bad)
in
lds
movs
aaa
xor
out
or
inc
xor
inc
push
leave
stos
and
sbb
shl
pop
dec
(bad)
xor
xor
mov
fsub
mov
sbb
and
mov
mov
adc
pusha
scas
mov
inc
mov
mov
add
je
lock
(bad)
mov
jge
pop
or
arpl
sub
mov
aaa
lahf
rol
lock
lahf
ret
sbb
and
inc
xor
cwde
and
fdiv
lahf
call
cmps
das
dec
pop
or
outs
add
push
dec
popa
mov
sbb
add
fdiv
adc
ja
or
xor
inc
sahf
int3
sbb
inc
dec
outs
stos
push
push
and
xlat
sbb
mov
or
dec
sbb
xchg
popa
mov
int3
movs
mov
mov
push
and
aas
pusha
push
jae
sub
add
adc
inc
mov
ja
lahf
or
xchg
mov
lahf
out
or
add
pop
sub
aaa
xchg
add
lahf
movs
and
xor
lahf
loopne
repnz
or
adc
ret
and
daa
inc
xchg
mov
pop
fadd
or
dec
dec
iret
jo
ret
push
movs
iret
ret
sbb
add
and
xor
dec
xor
iret
addr16
mov
pop
jo
add
popa
add
inc
in
nop
add
xchg
pop
push
pusha
mov
fadd
and
iret
cld
movs
fimul
sbb
lods
and
sbb
iret
pushf
nop
iret
pop
mov
inc
dec
pop
or
outs
add
dec
dec
popa
mov
sbb
ins
movs
fadd
gs
sbb
adc
aaa
or
fisttp
and
pop
or
bound
inc
dec
or
aad
stos
sub
stos
in
bound
push
pushf
dec
fbstp
fbstp
adc
lods
loopne
dec
push
push
jb
das
mov
mov
loope
pusha
ja
dec
ja
sbb
lock
ja
sbb
bound
sbb
test
fmul
call
frstor
sub
ja
mov
or
add
push
ja
ret
sbb
mov
(bad)
mov
sbb
jne
or
pop
lods
jno
mov
pop
repnz
aad
add
cmps
xor
push
repnz
dec
cmps
pop
shl
dec
cmps
mov
adc
movs
cmps
rcl
jne
movs
adc
sbb
sbb
retf
sub
aad
cmp
test
pusha
mov
rol
loope
lahf
fsub
lahf
les
pop
aaa
or
mov
inc
stos
test
xchg
sbb
into
xor
inc
mov
aaa
xchg
loope
xchg
push
int
in
dec
sbb
add
sbb
xor
enter
shl
adc
xor
push
int3
stos
push
aad
ja
push
push
pusha
mov
dec
sbb
xor
ja
sbb
es
iret
adc
pop
adc
add
lahf
das
sub
add
push
imul
ja
dec
xchg
cs
ja
movs
ja
mov
xor
xor
sub
and
pop
adc
cmps
jb
push
int3
jge
arpl
jbe
das
(bad)
mov
pop
dec
sbb
xchg
add
or
ins
aam
stos
sbb
mov
mov
lahf
sbb
xchg
je
xor
data16
ins
jg
mov
xor
push
ret
outs
iret
and
iret
pop
shl
dec
iret
pop
sub
or
movs
iret
fsubr
ror
xor
xor
add
or
test
push
ds
inc
mov
stos
aaa
scas
pop
and
xchg
outs
js
scas
in
add
test
loopne
pusha
sbb
xchg
sub
add
fild
pop
jo
leave
test
jns
ret
or
jno
call
cmp
scas
fwait
xchg
jo
inc
xlat
aas
jmp
add
xor
push
and
inc
mov
mov
movs
inc
push
adc
in
inc
jne
lock
sbb
or
scas
mov
div
or
dec
add
or
fisttp
jbe
movs
fucomip
or
ret
sbb
fmul
push
mov
sbb
push
inc
or
ja
aas
dec
pop
or
outs
add
cld
dec
add
or
scas
sbb
or
jg
mov
or
dec
enter
push
inc
stos
mov
xchg
adc
add
pop
xor
pop
dec
xor
add
lock
xor
lahf
lock
sbb
pop
rcl
fimul
push
jle
jle
aaa
dec
repnz
add
jge
add
fcom
dec
out
mov
out
movs
cmp
or
hlt
xlat
xor
xlat
test
dec
aaa
(bad)
sbb
inc
dec
xlat
add
mov
in
add
push
movs
adc
pusha
sbb
clc
prefetcht0
sbb
hlt
js
adc
stos
dec
or
inc
punpcklbw
jo
(bad)
mov
dec
mov
inc
(bad)
cld
xchg
ficomp
dec
and
sbb
push
(bad)
pop
jo
push
adc
mov
xlat
dec
mov
jnp
loopne
add
add
add
xor
out
adc
add
scas
push
or
and
dec
fild
sub
shr
pusha
mov
movs
sbb
or
jo
lock
xor
pop
and
inc
sub
aaa
xor
cmp
xor
cmp
pop
pop
pop
and
jle
adc
add
dec
pop
cld
dec
pop
fs
add
fwait
mov
adc
mov
popa
and
inc
inc
fs
adc
push
out
out
sub
xor
add
mov
dec
in
or
in
out
sbb
nop
or
jmp
mov
jmp
(bad)
pusha
pmaxsw
push
add
cmp
sbb
push
loop
dec
dec
sub
xchg
xlat
push
fcom
stos
iret
xchg
and
add
loope
dec
loope
es
pop
or
xchg
xor
or
pushf
into
(bad)
or
ret
inc
ret
das
inc
xchg
mov
mov
ss
add
fisttp
fild
push
lods
add
adc
call
and
js
fisub
push
data16
dec
push
inc
xchg
shl
and
ins
xor
dec
jo
leave
stos
(bad)
imul
(bad)
dec
xor
xchg
jo
(bad)
sbb
popa
or
shl
add
aaa
or
mov
das
xchg
outs
stos
loop
push
pop
xchg
mov
dec
daa
push
dec
mov
mov
cmc
inc
or
es
stos
inc
loope
push
cmovnp
pop
mov
test
pop
or
outs
add
dec
pop
(bad)
add
sbb
cwde
out
sub
xchg
into
inc
add
and
pusha
cs
scas
dec
aaa
and
inc
pop
xchg
xchg
push
repnz
daa
cmp
add
nop
dec
daa
adc
pop
enter
pop
adc
dec
inc
pop
cmp
dec
lds
test
rcl
or
cmp
add
push
call
sub
inc
or
jnp
in
repnz
pop
jmp
sub
inc
dec
pop
and
movs
pop
sub
pop
lock
imul
jmp
push
jno
xlat
mov
dec
push
fadd
adc
lock
pop
xchg
or
adc
add
xor
daa
sbb
add
ja
aam
ror
aaa
(bad)
mov
mov
add
ins
dec
outs
lods
dec
lds
push
outs
in
movs
outs
icebp
inc
enter
or
outs
push
mov
jo
jg
adc
xchg
nop
xor
or
outs
add
xchg
mov
movs
xchg
call
and
lds
xchg
dec
inc
bound
pop
inc
aas
outs
fcom
stos
push
lds
add
sbb
pop
push
mov
cmp
icebp
push
inc
pop
ds
sub
push
addr16
push
addr16
and
inc
pop
outs
addr16
fcom
popa
xchg
or
inc
jno
mov
adc
movs
addr16
cmps
loop
mov
add
push
xor
xchg
push
jno
or
outs
aaa
mov
sub
or
outs
add
and
movs
aaa
inc
cmps
loop
cmps
xchg
dec
adc
mov
mov
rcr
(bad)
cmps
xor
sub
push
jbe
adc
push
pop
push
fcom
test
inc
jno
int3
dec
pop
hlt
sub
adc
movs
pop
inc
fdiv
xor
sbb
mov
test
dec
inc
add
and
and
mov
and
outs
add
and
pusha
movs
(bad)
or
dec
fbstp
sub
fistp
push
aas
push
pop
jo
inc
sbb
jo
leave
stos
(bad)
push
cdq
je
add
or
(bad)
dec
xor
fwait
xchg
or
adc
inc
and
pop
inc
lahf
xchg
inc
pusha
push
cdq
inc
loop
cli
ja
inc
or
xlat
fld
clc
dec
xlat
ret
sbb
inc
push
xlat
test
xor
pop
daa
inc
or
loop
pop
loopne
daa
xor
push
add
add
inc
sub
test
xor
out
push
dec
out
jl
xchg
cs
out
test
out
loopne
xchg
pusha
stos
mov
add
jo
mov
js
xchg
jb
adc
sbb
stos
and
ins
push
ffreep
jo
leave
mov
ror
loope
inc
push
add
cmp
sbb
shl
pop
and
mov
test
dec
adc
push
mov
mov
imul
ja
and
ds
dec
lahf
push
mov
sub
shl
fimul
das
push
nop
mov
inc
sub
movs
das
loope
adc
add
add
xor
add
icebp
inc
xor
call
sub
mov
cwde
dec
das
nop
pop
push
(bad)
dec
das
or
jo
das
inc
and
pop
or
xor
pop
inc
mov
push
dec
aas
ja
jb
inc
jae
repz
outs
fcom
stos
inc
sbb
jno
push
inc
ins
dec
inc
adc
pop
pushf
movs
inc
je
adc
and
inc
ret
inc
adc
adc
inc
arpl
(bad)
sahf
push
(bad)
(bad)
add
xchg
mov
movs
fadd
adc
enter
dec
or
cmps
fwait
mov
xchg
js
pop
mov
or
or
and
pop
out
mov
push
dec
pop
or
outs
add
mov
movs
pop
jl
adc
lea
call
pop
shr
dec
pop
or
push
mov
pop
mov
fimul
pop
enter
lds
pop
outs
push
mov
add
fcom
stos
jmp
call
jo
movs
dec
jmp
sub
call
fbstp
inc
xchg
sbb
dec
imul
popa
sbb
inc
and
mov
sahf
mov
xlat
ja
dec
pop
adc
lods
add
dec
add
push
mov
movs
outs
xchg
aaa
adc
pop
add
outs
movq
push
push
jb
inc
stos
sbb
mov
cwde
dec
(bad)
mov
dec
(bad)
fsub
push
and
nop
call
dec
inc
and
dec
cwde
enter
scas
mov
inc
add
loope
hlt
dec
mov
scas
add
sbb
js
js
mov
mov
and
mov
outs
movs
sbb
pop
mov
fbstp
mov
dec
mov
or
outs
mov
test
ret
and
sub
push
fist
ret
movs
add
shl
les
and
dec
dec
inc
sub
outs
pop
aas
pop
and
mov
or
add
dec
out
dec
out
add
add
js
xchg
dec
fisttp
or
and
cmp
imul
mov
add
jo
leave
stos
mul
mov
dec
add
or
test
call
dec
and
sub
stos
jmp
xchg
das
dec
bound
mov
aas
sub
and
jle
mov
dec
mov
dec
xchg
cs
mov
movs
mov
push
or
xor
xchg
mov
aaa
pmulhuw
nop
mov
mov
mov
add
stos
or
pop
xor
pop
retf
add
pop
sbb
shl
inc
aad
mov
sub
pop
push
call
aaa
xchg
mov
push
dec
mov
loope
mov
sbb
push
jp
dec
sub
daa
xor
inc
aas
daa
inc
jb
or
inc
mov
psubusw
clc
dec
movaps
or
sbb
inc
push
ud2
inc
mov
clc
pop
push
test
dec
lds
popw
sbb
adc
cmp
xchg
ja
mov
pop
dec
xor
add
or
ret
push
shl
xor
add
add
jo
mov
sbb
ss
inc
rcl
dec
ja
mov
fmul
fadd
or
clc
dec
xlat
xchg
or
cmps
loop
mov
inc
pop
(bad)
(bad)
or
push
cmps
ret
mov
xor
dec
fs
mov
or
sbb
cdq
pusha
sbb
mov
test
sbb
loopne
cmps
daa
sub
jns
and
lods
mov
int3
dec
paddsb
and
mov
js
or
push
add
test
(bad)
push
jp
dec
pop
or
outs
add
inc
dec
popa
mov
sbb
push
and
(bad)
adc
or
xor
or
ret
or
inc
mov
jne
xchg
dec
mov
mov
popa
mov
movs
mov
mov
mov
out
push
push
mov
or
imul
ss
inc
mov
ret
ret
add
dec
sub
dec
xor
movs
inc
outs
nop
cmp
or
push
cwde
out
and
shl
pop
les
jbe
ret
or
movs
nop
dec
xor
outs
cmp
fs
mov
(bad)
add
add
add
ins
push
out
shl
add
xor
aam
sub
push
inc
fistp
xchg
stc
dec
or
xchg
pop
mov
add
loope
(bad)
mul
jo
jbe
adc
lahf
jg
pop
adc
outs
add
in
add
or
xchg
enter
ror
xor
mov
xchg
lea
xchg
fs
xchg
sub
add
retf
mov
aas
xor
add
xchg
push
dec
aas
push
dec
aas
mov
lds
push
inc
jno
icebp
xor
cmp
add
scas
xchg
push
inc
aas
ror
lock
retf
xor
lds
rcl
aas
fadd
scas
or
lds
dec
aas
les
fiadd
test
inc
mov
aas
js
aas
push
xchg
nop
dec
imul
addr16
pop
adc
outs
add
fs
bound
js
cmp
xor
mov
mov
dec
pop
addr16
mov
ror
in
adc
add
nop
add
out
cmp
or
loop
xor
mov
push
aas
dec
sar
dec
aas
movs
dec
mov
mov
pop
cmp
mov
das
(bad)
xor
dec
push
pop
dec
loope
ror
inc
add
jo
loope
inc
or
jp
adc
fisub
(bad)
ja
push
inc
sub
shl
and
adc
pop
inc
pop
nop
movs
pop
adc
and
inc
adc
add
adc
ja
push
leave
stos
pop
test
inc
push
inc
pop
add
inc
and
and
pop
aam
sub
pop
mov
(bad)
jl
sub
mov
dec
pop
and
in
movs
pop
mov
push
sub
adc
adc
or
ja
dec
push
mov
ret
ret
and
add
pop
and
dec
pop
dec
xor
add
mov
loopne
adc
push
dec
or
dec
inc
rcl
test
ja
mov
int3
dec
or
add
add
nop
add
out
cmp
dec
in
cmps
loop
sub
sub
push
dec
dec
fstp
dec
dec
pushf
dec
mov
mov
icebp
sub
or
aaa
adc
sub
xor
sbb
mov
pop
cmps
inc
inc
xorps
fsub
cmc
adc
scas
xchg
fcom
jno
pop
pop
movs
xchg
adc
push
mov
test
nop
mov
sbb
add
pusha
dec
ret
ins
inc
mov
push
fidiv
outs
add
and
in
movs
mul
pop
adc
jmp
sbb
adc
popa
es
jbe
xchg
add
and
adc
ja
cmp
jbe
lds
dec
dec
xchg
movs
xchg
dec
rol
icebp
adc
or
pop
add
ja
repnz
or
loope
add
les
add
push
mov
dec
les
dec
lods
es
pop
inc
adc
add
movs
dec
bound
mov
or
dec
inc
and
rol
ins
sbb
inc
or
into
pop
outs
adc
in
mov
in
dec
mov
mov
das
ror
movs
or
mov
scas
inc
inc
mov
arpl
data16
shr
xchg
mul
addr16
mov
out
adc
add
push
addr16
push
enter
adc
mov
addr16
ja
sub
jl
sbb
dec
addr16
add
movs
movs
fiadd
cdq
mov
mov
addr16
add
pop
and
add
addr16
lds
inc
xor
push
lds
or
push
adc
inc
or
addr16
jne
dec
dec
inc
xchg
or
jo
jae
mov
mov
mov
add
int
in
dec
xchg
jb
xor
je
sbb
add
test
mov
aam
xchg
pusha
inc
test
push
inc
xchg
and
xchg
dec
xchg
add
add
out
mov
icebp
push
sbb
push
push
xchg
loop
mov
enter
mov
movs
sub
mov
and
outs
pusha
out
ret
stos
or
pop
stos
or
or
inc
add
mov
das
lahf
pop
and
icebp
fs
add
dec
xlat
mov
xlat
fs
add
cmps
loop
and
dec
out
xor
repnz
or
xlat
xor
add
push
push
dec
xlat
mov
dec
xlat
lock
outs
and
adc
lods
and
adc
adc
loop
xchg
pop
sbb
mov
adc
dec
xlat
fwait
mov
xlat
adc
cmps
loop
mov
and
and
sbb
xchg
or
or
push
add
fcom
popf
idiv
add
dec
call
fimul
inc
sbb
or
outs
sbb
movs
out
inc
rcl
out
push
scas
sbb
mov
clc
(bad)
cmp
sbb
dec
jmp
in
add
cdq
sbb
jmp
adc
popf
stc
push
pusha
mov
clc
cmp
adc
and
inc
add
(bad)
xor
inc
sbb
adc
ins
jbe
addr16
push
and
xor
push
mov
mov
and
mov
inc
add
loope
cmp
inc
sub
push
inc
cmp
rcr
or
jae
cdq
neg
fiadd
or
sub
std
es
cmp
dec
cwde
mov
mov
mov
sbb
js
adc
pop
adc
or
mov
jo
inc
add
int3
xor
add
add
cwde
enter
arpl
leave
push
add
shl
pop
mov
push
or
lock
xchg
mov
xchg
cmp
fs
std
test
push
enter
mov
add
push
mov
dec
pop
xchg
pop
in
lea
xchg
pop
dec
sub
sbb
popa
ficomp
dec
popf
int3
mov
in
mov
imul
outs
pop
jecxz
jmp
mov
jg
dec
(bad)
out
aas
inc
dec
add
add
add
adc
and
push
pop
mov
or
push
cwde
push
xchg
aas
mov
xchg
and
fcomp
call
dec
ret
pop
sub
(bad)
and
(bad)
dec
push
xchg
(bad)
loopne
sub
and
or
push
mov
dec
fidiv
in
retf
pop
ja
pushf
into
lea
pop
cmps
sbb
in
retf
dec
cld
pop
enter
aas
xor
xlat
or
adc
dec
push
mov
push
nop
pusha
xor
sub
xchg
outs
sub
fs
into
lea
sub
add
scas
jb
data16
and
add
add
nop
adc
call
mov
mov
fcomp
inc
pop
repnz
pop
mov
pusha
sub
popa
mov
repnz
push
les
retf
enter
sub
scas
repnz
(bad)
imul
lahf
retf
(bad)
ins
adc
ins
outs
loopne
outs
repnz
jno
xor
retf
fdiv
mov
adc
mov
jbe
or
lahf
jns
mov
movs
fdivr
add
jl
cmps
repnz
mov
movsx
xor
fwait
mov
scas
xchg
popf
clc
adc
lock
push
out
adc
mov
adc
jl
lahf
out
adc
cmp
nop
retf
test
movs
mov
pop
lea
mov
sbb
hlt
mov
adc
dec
sub
in
clc
push
pop
adc
pop
adc
leave
mov
mov
nop
retf
adc
scas
cmp
es
aas
dec
cdq
adc
fwait
repnz
pushf
push
retf
clc
lahf
cmp
pop
rol
adc
call
rcl
lods
dec
sub
nop
mov
cmps
repnz
dec
cmps
mov
pop
lahf
retf
adc
mov
xchg
adc
ret
adc
adc
and
adc
adc
adc
xor
pop
lods
adc
lods
mov
fistp
stc
push
(bad)
(bad)
loopne
ja
adc
xlat
push
sub
int3
pusha
jl
push
xchg
rcl
aas
rcl
aam
rcl
mov
fcmovu
sub
adc
jne
dec
loopne
xlat
in
fcom
push
and
fist
call
in
xchg
mov
mov
movs
outs
sub
sbb
jbe
lock
hlt
test
xor
mov
test
icebp
add
lea
ss
jmp
cld
es
loop
add
pop
mov
cmps
repnz
fst
mov
lods
mov
adc
daa
mov
mov
adc
rol
and
jb
mov
jnp
xchg
iret
push
in
and
shr
ret
scas
jmp
push
mov
fcom
sub
retf
adc
(bad)
int
xor
into
mov
mov
adc
es
adc
nop
push
push
mov
mov
push
fstp
cmp
sbb
inc
pop
pop
cs
mov
ret
lea
push
inc
mov
push
retf
shl
and
pop
pop
fimul
adc
div
jle
or
push
mov
inc
adc
sub
shr
add
add
mov
(bad)
mov
push
adc
push
adc
ret
xor
or
dec
cmp
and
push
lock
xor
mov
mov
inc
or
push
or
(bad)
dec
cdq
cmp
outs
aas
mov
cmp
ja
xchg
sub
pop
out
sahf
out
ins
je
lahf
out
sahf
or
fisttp
jno
jmp
mov
inc
mov
sti
sbb
mov
jmp
mov
stc
xor
jge
adc
jp
add
arpl
push
les
ret
mov
clc
test
je
sbb
ficom
(bad)
mov
xchg
out
shl
xchg
xchg
xchg
xchg
add
nop
xchg
cwde
pushf
inc
xor
push
adc
sbb
call
jno
(bad)
scas
pop
js
mov
sub
dec
cmp
jae
or
jge
adc
ins
pop
ret
pop
xor
xor
mov
mov
push
sub
add
ja
jnp
idiv
push
cmp
fbstp
test
push
jb
push
pop
adc
jmp
out
js
or
cs
inc
adc
movzx
test
jne
cmp
rcr
xor
popf
(bad)
out
les
mov
sbb
mov
and
push
push
jno
mov
or
or
sbb
xchg
mov
lods
lock
pop
push
pop
add
popf
or
add
das
xor
es
test
mov
inc
push
inc
mov
push
adc
data16
or
inc
lock
or
sti
add
and
or
test
es
sbb
add
scas
ror
add
nop
fnstenv
sbb
xor
fcomp
(bad)
aam
pop
jle
add
movsx
cli
add
cmp
sti
or
xor
cmc
and
fisttp
outs
test
jne
(bad)
push
mov
add
jge
retf
add
cmp
mov
lods
inc
retf
push
push
and
mov
enter
cs
sub
mov
or
add
daa
fimul
adc
sbb
imul
mov
and
mov
adc
adc
mov
hlt
cmp
(bad)
arpl
push
inc
call
mov
jbe
les
(bad)
call
les
jnp
dec
or
lea
nop
ins
inc
add
xchg
and
out
dec
mov
clc
xor
sbb
or
ret
jno
je
push
push
or
xchg
call
loopne
mov
mov
jo
inc
sar
xchg
rol
cmp
adc
adc
in
adc
add
pop
dec
cli
mov
pop
shl
mov
adc
or
pop
sub
sub
push
or
je
mov
inc
add
and
push
shr
cs
sbb
inc
add
(bad)
pop
sbb
ror
mov
sti
jge
mov
inc
sub
jnp
sbb
push
pushf
xlat
cmp
jbe
out
xor
sbb
aam
push
adc
jo
call
loopne
mov
or
add
rcl
inc
xor
and
test
sub
or
sbb
or
adc
out
in
adc
mov
or
call
loopne
or
xor
std
out
mov
js
shl
adc
dec
lahf
or
jne
or
dec
aad
mov
xor
shl
add
push
mov
xor
int3
push
xor
ss
sub
fldcw
add
sti
add
xor
sti
push
cmp
pusha
cmc
add
test
add
sub
push
rcl
mov
loopne
pop
outs
pop
aas
add
lock
lock
push
pop
movs
daa
pop
dec
shl
(bad)
fstp
test
(bad)
jne
mov
loopne
xchg
mov
out
jne
push
cmp
fadd
cmp
adc
les
je
and
jge
xchg
push
es
dec
xchg
sar
xor
push
add
jo
stos
div
push
inc
jmp
mov
or
push
pop
sub
fcomp
xor
sub
je
cs
mov
xchg
test
mov
out
out
pop
add
inc
mov
add
in
push
add
clc
push
push
xlat
xor
push
test
add
cmp
add
shl
mov
push
jg
outs
js
or
ins
idiv
xor
sbb
rcr
aam
mov
ins
cli
cmovs
push
mov
fisubr
test
lods
mov
mov
mov
xor
mov
sbb
call
jmp
inc
sub
sbb
adc
lods
sbb
in
sub
fcom
pop
xor
sub
cmp
mov
aam
fs
push
pop
add
in
jne
in
and
out
clc
push
cld
repz
idiv
loopne
clts
dec
push
sar
adc
adc
and
retf
mov
dec
pop
push
aas
push
fld
outs
sub
je
push
popf
jle
mov
imul
pop
sub
push
or
fcomp
jbe
sbb
push
repnz
or
repnz
xor
rol
(bad)
cvtpi2ps
fcom
sub
add
jmp
pop
adc
sbb
rcr
xor
cld
xor
and
push
je
mov
add
call
mov
sub
inc
add
push
or
aam
ins
lds
cmp
jbe
dec
sbb
push
ret
daa
mov
xor
mov
aaa
jbe
or
rol
mov
add
and
mov
and
cmovs
test
xor
or
add
xor
sub
jno
adc
add
test
mov
mov
xor
pusha
mov
pop
add
ds
mov
je
add
jmp
and
iret
push
xor
adc
inc
push
fcom
lahf
pop
cmp
jbe
repz
adc
sbb
inc
and
fstp
jp
mov
or
ja
and
xor
mov
jb
mov
shr
clc
inc
lods
add
cs
mov
adc
push
fbstp
dec
xlat
mov
xor
push
mov
or
cmp
and
fs
xor
imul
lea
mov
sbb
push
mov
in
xor
sub
mov
lock
int3
cdq
loopne
lds
sub
clc
fsubr
lock
mov
adc
and
outs
sub
xchg
sub
bound
sub
pop
int3
lock
and
or
mov
inc
add
cmp
sar
xor
add
sub
addr16
dec
xchg
cmp
add
jae
imul
and
or
cmp
push
sbb
mov
add
mov
data16
add
add
and
add
mov
and
and
pop
pop
add
push
dec
and
pop
ja
jne
mov
xor
add
add
jg
mov
in
shr
and
outs
inc
sbb
enter
ss
jnp
inc
loope
bound
sub
xor
mov
push
int3
pusha
mov
mov
jns
jnp
imul
in
jge
cmps
jbe
fistp
adc
inc
jb
stc
int3
test
mov
pushf
and
fs
rdmsr
pop
int
outs
cmp
jge
adc
adc
or
iret
repz
xor
daa
jl
fsubr
push
push
cmp
push
xor
cs
test
mov
int3
movs
inc
mov
imul
mov
inc
ja
movs
push
adc
cmps
stc
(bad)
push
dec
shl
push
dec
sub
and
sub
push
shl
movs
push
test
push
in
inc
sub
sbb
inc
ss
add
scas
push
retf
add
cli
xlat
jo
repnz
pusha
sbb
sbb
out
push
fnstenv
cmp
sbb
fist
push
das
mov
push
inc
add
dec
in
mov
das
xor
jp
dec
xor
mov
in
das
ja
xor
mov
add
xor
(bad)
aaa
sub
outs
adc
mov
mov
and
and
xchg
and
push
dec
jo
(bad)
push
and
dec
fs
je
arpl
push
jle
pop
cld
inc
inc
popa
jae
es
push
inc
jb
popa
je
add
or
pop
mov
add
gs
jmp
sbb
inc
push
push
gs
imul
imul
push
rcr
push
add
or
xchg
inc
mov
push
mov
jbe
pushf
jne
mov
pop
push
test
sub
push
outs
fsub
and
push
iret
xchg
or
push
inc
jne
cbw
xchg
xor
(bad)
punpcklbw
mov
cmp
outs
enter
inc
outs
loopne
(bad)
inc
in
dec
push
adc
mov
imul
or
mov
pop
inc
jb
ins
(bad)
push
gs
mov
add
sbb
jo
mov
push
sbb
shl
cwde
lds
lds
inc
mov
outs
out
ror
leave
adc
inc
jb
or
mov
sbb
inc
mov
cs
ins
sub
sbb
dec
jo
nop
stos
enter
or
(bad)
lock
or
inc
dec
mov
movs
cmp
popa
ins
and
or
shr
bound
push
popa
inc
add
test
pop
in
imul
sub
add
push
xor
shufps
ins
pop
adc
in
adc
xor
in
push
and
push
add
retf
mov
popa
outs
jae
inc
jle
inc
fs
int
lock
outs
sbb
add
js
add
mov
mov
xchg
or
inc
mov
out
retf
jne
add
push
and
sub
int3
fucomip
iret
das
xchg
sbb
jmp
imul
jg
loope
mov
add
stos
push
push
popf
sub
inc
jns
add
push
xlat
xor
ror
imul
inc
mov
call
mov
mov
lods
dec
jne
bound
sbb
loopne
imul
add
(bad)
or
in
out
add
mov
add
jb
jb
mov
jge
pop
popa
sbb
fdivr
sbb
je
and
inc
inc
cmps
and
push
dec
addr16
mov
ret
je
or
jo
mov
adc
fsubr
or
push
or
add
push
xor
adc
(bad)
inc
mov
arpl
fbld
jne
stos
xor
add
vandnps
leave
or
lods
jnp
jb
jo
gs
loop
add
ins
out
add
jmp
iret
shl
push
outs
jne
fs
cmp
mov
out
mov
push
fwait
cmp
dec
gs
dec
or
fs
cmp
jg
push
push
jns
sub
popa
add
push
sbb
adc
adc
and
test
push
popa
sbb
sti
icebp
pop
xor
dec
jle
test
loop
js
pusha
dec
fisttp
jo
xchg
popa
add
sbb
or
xchg
pop
inc
lock
(bad)
mov
gs
jae
imul
xlat
outs
(bad)
pop
mov
jo
aad
jnp
pusha
and
and
push
jnp
(bad)
jg
push
push
std
cmp
lea
add
lfs
inc
xchg
out
xor
or
shl
xor
cpuid
js
into
in
ss
movs
pop
test
mov
nop
loopne
js
ror
pop
xchg
inc
cwde
test
push
in
jo
push
outs
add
outs
jbe
pop
sub
imul
xor
sbb
mov
adc
ja
pop
inc
or
outs
cmovbe
ins
pop
sbb
ja
inc
js
sub
add
pop
dec
jp
dec
add
pop
into
scas
lods
push
out
pop
inc
push
rcl
inc
xor
mov
test
in
xor
xor
or
adc
push
shl
js
outs
les
pop
cmp
or
add
jl
int3
add
add
xchg
jg
inc
jle
sub
jb
pop
add
jb
movzx
add
add
jne
out
adc
(bad)
dec
sub
sub
lock
call
add
call
loopne
mov
cmp
gs
or
mov
mov
movzx
lock
or
call
ds
in
mov
sub
js
push
loopne
jns
add
mov
or
outs
sti
add
cmp
dec
cmps
xchg
fcomp
add
mov
add
(bad)
mov
movs
add
add
jmp
data16
push
push
jmp
push
pop
aas
lods
sbb
push
aas
int3
fisttp
mov
add
in
cmps
(bad)
cli
pop
lock
fdiv
inc
or
or
test
loope
pusha
add
test
or
push
mov
mov
shr
sbb
push
xchg
cdq
in
sti
and
mov
cmp
jb
sbb
sub
sub
fdivr
jae
dec
push
aas
add
sub
aaa
mov
pop
adc
sti
jg
mov
call
lea
mov
movs
add
pop
aad
js
add
nop
add
popa
add
xchg
movs
jecxz
scas
xchg
push
retf
add
mov
mov
out
(bad)
ja
or
add
(bad)
lock
mov
xchg
pop
adc
fcom
(bad)
js
push
and
shl
pop
and
fild
shl
xchg
fnstsw
mov
mov
cmp
mov
ror
test
je
cmp
fs
ret
or
ffreep
jbe
push
mov
mov
cmp
mov
jmp
sbb
mov
mov
mov
sbb
xchg
test
loopne
cmp
sti
popa
sbb
aas
clc
jp
icebp
xchg
pusha
pop
add
pop
fadd
inc
and
mov
or
mov
mov
adc
sub
ret
cmps
and
or
daa
sub
or
in
lahf
or
xchg
clc
or
push
adc
dec
jl
es
mov
inc
pusha
cmp
scas
in
rol
and
call
adc
adc
scas
mov
xlat
out
(bad)
data16
cdq
or
push
lea
shl
push
mov
shr
icebp
(bad)
push
or
dec
ret
fimul
add
add
push
xlat
inc
aam
or
retf
dec
repnz
and
add
push
or
or
adc
mov
jg
pusha
xchg
jg
mov
jg
test
fcmovnu
add
or
adc
mul
out
pop
mov
ret
imul
test
dec
cmps
push
pop
sti
lods
or
push
inc
into
jecxz
push
xor
scas
or
scas
mov
mov
stos
push
add
lock
je
xor
das
out
add
adc
mov
or
xor
adc
sbb
dec
in
xchg
or
fist
inc
xchg
sub
jmp
arpl
add
xchg
add
xchg
loopne
add
adc
push
cmp
mov
add
mov
add
or
add
jmp
test
push
shr
mov
xchg
enter
and
sbb
jge
jl
sub
ins
xor
cmp
sbb
cmp
jg
sti
rol
cmp
cmp
cmp
adc
push
loopne
and
push
adc
jbe
or
pop
pusha
mov
in
xchg
sub
jmp
out
je
mov
mov
popa
lea
sub
push
add
mov
adc
or
add
inc
rol
inc
rcr
adc
ss
adc
push
mov
ds
adc
jmp
arpl
dec
lock
leave
lahf
rol
sub
sub
shr
sbb
rcr
es
sub
aam
lock
pop
jne
dec
rcr
pushf
sti
int
inc
je
push
push
cs
sub
enter
test
push
fadd
je
jo
fisttp
push
scas
add
push
or
inc
mov
sbb
sub
adc
add
stos
push
cmp
inc
push
popa
dec
cmp
imul
push
adc
sub
dec
push
add
pop
jae
xor
push
bound
repz
ficomp
jbe
ins
add
ror
sbb
xlat
cdq
fnstcw
push
push
cmp
and
aaa
data16
jbe
mov
add
das
add
mov
push
xlat
es
call
sbb
clc
enter
inc
push
dec
adc
pushf
lds
test
or
or
pushf
(bad)
jns
or
or
ret
push
pushf
rol
push
loopne
add
ins
inc
sub
xchg
xor
in
ret
add
add
ror
rcl
pop
out
push
mov
fwait
out
mov
es
push
pushf
push
dec
pop
sub
movs
mov
xor
add
add
(bad)
not
dec
sub
push
inc
inc
inc
int3
in
or
cdq
repnz
sbb
add
int
add
adc
sub
dec
lsl
out
fimul
pop
add
xlat
mov
lods
xchg
push
ds
inc
(bad)
hlt
mov
adc
push
loopne
sub
outs
ja
xor
add
test
and
lock
push
gs
outs
cmovae
sub
inc
outs
jne
push
add
imul
fs
xchg
retf
add
add
dec
outs
outs
sbb
push
shr
ret
aam
aas
icebp
push
(bad)
popa
mov
fwait
push
(bad)
jae
mov
pop
cmps
(bad)
or
cmp
adc
jo
push
jg
in
rcr
sub
mov
push
add
arpl
and
ja
or
or
fwait
lds
popa
and
je
daa
sbb
inc
add
sub
or
imul
mov
jo
or
cmps
xor
jne
cs
mov
ja
jg
and
or
(bad)
xchg
fcmovb
cmc
test
inc
scas
pop
pop
dec
imul
mov
(bad)
jmp
xlat
dec
outs
mov
pop
aam
loope
cwde
xor
mov
addr16
push
inc
movs
mov
call
stos
ss
push
cmp
inc
xchg
mov
and
test
push
fsub
adc
jbe
push
and
dec
ds
push
mov
data16
popa
sti
clc
outs
lock
sbb
mov
xchg
cmp
cmp
xchg
addr16
clc
out
adc
pop
push
jns
and
sahf
not
(bad)
sub
shr
dec
ds
and
into
ds
inc
addr16
idiv
cmp
inc
ins
jo
sahf
pop
adc
xchg
mov
mov
and
scas
ret
add
ss
cmovle
in
imul
cmps
prefetch
or
neg
addr16
aaa
unpckhps
movhps
movhps
pop
daa
sub
repnz
cmp
call
int3
wrmsr
fidivr
bswap
pop
ret
in
add
push
cmp
pop
add
jb
add
add
sysexit
add
add
xchg
scas
imul
xor
cmp
(bad)
add
(bad)
and
jnp
adc
dec
push
xor
rol
repnz
pusha
nop
comiss
push
xchg
pop
dec
and
loop
add
inc
daa
add
sub
cld
and
jo
cld
mov
mov
mov
js
xchg
add
and
push
arpl
cs
out
cmp
xchg
or
dec
xchg
fmul
add
jmp
adc
and
mov
pop
jns
sbb
jns
mov
mov
sub
mov
jecxz
outs
gs
movs
push
neg
cmp
xchg
adc
adc
shl
dec
outs
sub
xor
ins
popf
inc
or
cmp
xor
adc
sub
mov
stos
inc
ret
adc
or
sbb
ror
fwait
jno
test
inc
enter
inc
jns
jl
mov
adc
dec
add
stos
sub
mov
rcr
aaa
nop
fcom
pusha
aad
or
mov
movs
pop
pusha
mov
and
imul
dec
pop
mov
sub
jbe
cmp
fdiv
mov
inc
or
dec
adc
sbb
jmp
pop
lock
jge
test
or
test
cmp
cmc
inc
jb
jb
dec
adc
adc
inc
addr16
cmc
(bad)
cmc
or
push
mov
lea
dec
pop
xchg
xchg
lea
mov
adc
hlt
pop
adc
add
jmp
inc
pusha
aam
int3
lock
add
mov
push
dec
xor
outs
icebp
iret
mov
es
push
in
addr16
inc
inc
push
stos
ficom
pop
ret
pop
daa
jecxz
inc
les
pop
mov
dec
cmp
push
mov
push
imul
inc
mov
and
dec
pop
or
cmp
adc
out
pop
hlt
les
or
jnp
fild
pand
jmp
ffreep
lock
es
mov
rol
mov
jo
jo
or
or
shl
out
inc
pop
or
adc
and
and
inc
adc
adc
lods
pop
dec
aad
shr
in
mov
inc
dec
aaa
jmp
add
xchg
or
(bad)
(bad)
arpl
ror
inc
add
popa
jb
sub
pop
xlat
popf
dec
jne
div
jno
lods
ret
or
popf
out
adc
xor
popa
jae
mov
lds
pop
mov
or
add
add
adc
lea
popa
push
pusha
push
in
cmp
jae
arpl
cwde
mov
test
nop
mov
enter
dec
push
pop
call
sbb
add
jo
ins
dec
or
lock
and
push
dec
sbb
mov
bound
adc
or
loope
inc
sub
cmp
push
mov
lea
lock
inc
mov
cmps
mov
push
adc
cmp
cmp
add
mov
mov
add
mov
jne
mov
jge
mov
adc
pushf
xchg
addr16
mov
xor
jo
add
(bad)
stos
xor
add
shr
iret
xadd
or
cmp
mov
or
pop
sbb
inc
xchg
pop
call
div
adc
xor
es
aaa
push
xlat
add
loopne
push
pop
sub
and
add
add
and
xchg
or
push
movs
inc
push
or
sbb
sbb
inc
jmp
pop
xor
push
test
mov
pop
push
mov
adc
imul
(bad)
ja
jge
sbb
std
or
jbe
mov
pop
xlat
xchg
inc
clc
or
xor
sbb
loopne
or
jp
add
inc
push
push
push
inc
cmp
adc
xor
jp
imul
push
pop
mov
mov
adc
adc
add
adc
sbb
mov
pop
jne
test
add
sbb
test
mov
ins
pop
test
push
add
in
adc
add
sbb
test
cwde
ret
out
push
add
pop
add
add
sub
push
add
pop
inc
shl
test
fwait
int3
adc
sub
jle
test
mov
jo
push
add
fsub
add
adc
xchg
and
xchg
div
mov
sbb
or
or
je
inc
mov
and
call
jle
push
adc
sahf
add
push
call
or
add
hlt
add
adc
fist
clc
push
lea
mov
(bad)
jge
mov
cmp
test
sub
je
push
add
dec
mov
add
sub
and
daa
loopne
adc
icebp
mov
pop
mov
out
daa
mov
add
jbe
retf
pop
inc
dec
xchg
pop
xor
in
mov
xor
std
jmp
push
mov
retf
ins
cmp
bound
inc
out
ror
dec
call
and
add
inc
outs
sub
pop
pushaw
cmp
jmp
add
mov
xchg
jo
add
adc
lea
add
xchg
adc
movs
dec
lea
mov
fist
add
cwde
add
or
dec
and
xchg
jmp
xor
ins
push
push
test
or
das
(bad)
cmp
adc
or
retf
sahf
cmps
fcomp
add
mov
ret
sub
jb
xchg
sbb
push
mov
and
(bad)
mov
sub
add
mov
dec
xchg
pop
loope
mov
fcom
(bad)
clc
arpl
xor
das
jno
outs
and
adc
(bad)
mov
dec
jmp
sub
clc
mov
add
add
add
out
inc
push
mov
inc
jnp
pop
push
or
sbb
mov
fsubr
mov
push
pop
xchg
mov
scas
cwde
mov
das
fadd
sbb
sbb
and
lock
cmp
sbb
xchg
fs
pusha
cmp
sbb
mul
xchg
sub
dec
out
mov
push
or
add
ret
mov
add
(bad)
call
push
test
sub
dec
popa
push
inc
push
cld
into
pushf
jmp
aad
mov
cmp
cmp
stos
adc
jl
aad
mov
int
int3
rol
(bad)
mov
add
leave
adc
xor
nop
xlat
fist
mov
xchg
lock
in
(bad)
ror
outs
jns
xlat
push
test
jmp
cmp
add
push
xchg
push
cmc
mov
stc
xchg
pop
(bad)
mov
jno
jge
outs
jge
xchg
push
xchg
jge
fild
push
and
or
or
(bad)
push
mov
call
cmp
cwde
scas
sbb
in
xchg
stos
retf
loop
pop
jg
mov
popa
jmp
lds
pop
sti
sub
sti
je
push
mov
sbb
inc
ds
(bad)
xchg
in
adc
imul
add
cmp
imul
enter
sbb
out
cmp
adc
popf
mov
pop
and
jmp
dec
test
clc
xlat
out
push
test
and
in
mov
nop
mov
aam
mov
add
pusha
and
xchg
jb
jae
sub
cmp
ret
shl
ret
loopne
and
fdivr
inc
int3
aad
add
push
dec
fmul
lock
in
lock
lea
enter
or
fmul
cdq
add
call
cs
in
or
or
js
xor
in
add
cmp
sub
push
cmp
dec
push
xor
popf
add
lods
shr
movs
cli
lock
jne
pop
adc
fstp
ja
pop
clc
mov
lock
cmp
add
cmp
jbe
jmp
ss
fild
mov
adc
inc
mov
test
rcr
inc
jecxz
jmp
mov
mov
or
or
xor
pop
or
test
push
sbb
dec
push
push
hlt
inc
idiv
mov
out
jb
mov
hlt
loop
arpl
cmp
pop
dec
lock
ror
dec
or
sub
call
fistp
mov
sahf
push
push
cmp
inc
push
lea
cwde
adc
add
adc
inc
push
add
ds
adc
loopne
psubsb
mov
mov
push
push
push
push
cmp
add
or
xor
and
sub
aaa
mov
xchg
or
xor
je
jmp
cmp
push
hlt
call
pop
inc
xor
inc
retf
hlt
push
pop
lods
jmp
push
cmp
ins
cli
sbb
lock
jmp
test
jne
lods
lock
jbe
add
pop
add
dec
or
ss
push
shl
es
push
push
lea
aaa
jge
cmp
fcom
cdq
cmp
jle
sbb
dec
jne
cmp
fcomp
xchg
fwait
shl
pop
mov
aad
pop
mov
pop
pop
scas
cmp
outs
in
sbb
push
movs
test
push
stos
add
test
mov
cmp
mov
js
sbb
mov
rol
mov
fs
or
push
and
clc
fbstp
clc
outs
jg
je
fxch
fsub
jmp
sub
jg
je
sub
jmp
out
mov
cmp
cmp
fild
fdiv
cmps
cmp
adc
push
popa
inc
xor
jae
xchg
or
stos
(bad)
mov
add
mov
clc
sub
sbb
test
sbb
inc
cmp
sti
sti
outs
pusha
test
mov
call
add
hlt
inc
xlat
dec
enter
pop
lahf
(bad)
push
in
mov
sub
lea
and
call
das
pop
loope
lea
cmp
inc
mov
movzx
sar
jmp
out
jne
idiv
dec
dec
push
or
xchg
sbb
ja
jg
push
in
call
dec
imul
pushf
mov
mov
js
dec
sar
and
in
in
cmp
mov
adc
push
sar
cmp
pop
or
cli
jp
test
imul
out
cwde
xchg
xchg
cmp
jae
sbb
mov
add
icebp
sub
sbb
pop
pop
or
cdq
adc
jecxz
imul
(bad)
ret
stos
inc
jmp
nop
enter
shr
push
jecxz
dec
movs
iret
mov
jp
cmc
sbb
push
jmp
(bad)
mov
sar
lds
push
push
xor
fmul
jb
inc
inc
xor
add
shl
mov
fcom
not
div
and
int3
call
sub
scas
leave
clc
das
adc
lock
shl
fmul
push
sub
lock
adc
add
or
je
or
xchg
inc
repz
aaa
mov
push
pop
movs
cmps
sbb
mov
test
ret
jb
and
xor
das
push
inc
sbb
hlt
sub
mov
jmp
push
loop
div
lea
push
add
pushf
lock
xor
cld
mov
mov
out
es
in
je
mov
lea
je
pop
sbb
je
sbb
sub
and
mov
lock
mov
dec
push
dec
mov
lds
fidivr
(bad)
dec
test
sbb
dec
test
jbe
adc
adc
jg
jb
nop
out
xor
xchg
pop
ins
test
mov
inc
jo
sub
mov
adc
inc
in
daa
pop
mov
(bad)
aaa
jb
mov
das
and
fistp
mov
xchg
dec
(bad)
nop
pop
(bad)
cld
adc
or
test
mov
pushf
inc
mov
sub
jle
dec
jl
addr16
jno
and
mov
nop
jae
dec
and
adc
(bad)
test
mov
sbb
add
cmp
(bad)
cdq
adc
pop
pop
push
jno
neg
or
fld
jmp
test
sub
adc
push
cld
cmp
jb
push
mov
xor
and
push
inc
or
mov
sbb
sbb
das
sahf
mov
aad
dec
cmp
pop
mov
outs
push
jp
push
pusha
or
xchg
ror
mov
mov
rol
imul
cdq
sbb
nop
in
lods
hlt
je
push
jb
mov
mov
rol
inc
addr16
push
dec
es
fwait
mov
inc
mov
xchg
sbb
aad
hlt
aas
loopne
call
sbb
js
push
jl
aad
ret
jbe
mov
jb
sbb
clc
jmp
hlt
hlt
dec
mov
xor
test
out
cmp
mov
push
push
push
sub
cmp
push
and
add
xor
jg
std
cmps
inc
into
dec
test
jl
inc
scas
adc
cmp
jne
sub
mov
clc
xor
jle
push
ss
mov
mov
mov
sub
add
dec
jne
and
mov
data16
xlat
(bad)
sub
add
repnz
mov
pop
aam
movs
jno
inc
push
ficomp
and
inc
in
or
push
inc
clc
sub
(bad)
mov
int
xor
mov
dec
mov
icebp
aas
dec
sbb
jmp
mov
dec
fsubr
fwait
mov
lea
add
push
adc
jl
inc
pop
jne
aam
dec
cmp
lea
call
gs
add
dec
pusha
cmp
seta
push
add
test
data16
(bad)
shr
jo
or
shr
mov
(bad)
mov
inc
mov
jnp
imul
dec
rcr
cmp
mov
fcom
shl
or
lahf
rol
add
push
adc
push
dec
push
ret
mov
jo
cmp
or
test
sbb
push
push
and
xchg
fwait
push
test
sub
stc
test
push
rol
je
les
iret
pop
loopne
xchg
xor
push
mov
or
xchg
call
push
lock
add
in
imul
sub
push
dec
ret
pop
pusha
pusha
add
xchg
call
or
xchg
and
test
push
rcl
je
adc
xor
xor
add
cmc
repz
mov
xchg
(bad)
cmp
inc
jno
sbb
jmp
jmp
cmps
mov
push
ja
icebp
add
mov
push
push
jle
add
fadd
repz
mov
icebp
push
mov
xchg
dec
test
(bad)
xor
cmp
push
inc
add
sbb
sub
cwde
fs
cs
mov
jno
and
sbb
jge
data16
xor
cli
mov
and
sbb
xchg
cli
mov
shl
ror
js
jmp
push
mov
js
jmp
sbb
cmps
pusha
inc
in
rol
in
sahf
js
icebp
pop
sbb
push
(bad)
cmc
push
add
sbb
jmp
push
add
inc
or
mov
popa
lea
add
mov
dec
shl
js
sbb
add
xor
and
nop
mov
adc
rol
and
or
aaa
jmp
add
push
xor
and
jmp
(bad)
je
(bad)
rol
pushf
jmp
rcr
jg
fdivr
call
sub
push
dec
and
out
scas
push
dec
sub
daa
jb
adc
sbb
mov
das
adc
sub
ror
mov
pop
call
xor
mov
imul
jno
test
arpl
xlat
fisub
adc
cs
mov
call
inc
cmp
jne
ret
ret
sbb
add
aas
int
push
in
jmp
jl
pop
mov
mov
imul
xchg
shr
jge
mov
push
jmp
aam
push
jecxz
or
ins
bound
pop
dec
add
movs
ins
fs
inc
(bad)
out
xor
int
inc
sti
les
adc
enter
jnp
adc
das
and
push
fs
shl
sahf
fdivr
jmp
mov
test
and
pop
loop
adc
xchg
loopne
clc
add
pop
mov
test
cmps
adc
aam
icebp
mov
add
bound
test
inc
aam
dec
or
repnz
outs
inc
ret
push
mov
out
add
dec
xor
add
push
into
pop
adc
pusha
pop
push
add
adc
in
(bad)
jl
imul
jae
xchg
sbb
sbb
inc
(bad)
test
push
push
lods
add
mov
dec
mov
std
rcl
aaa
xor
add
add
cmp
dec
or
push
xor
outs
jecxz
jo
mov
mov
sbb
addr16
mov
add
and
fwait
scas
push
xchg
jmp
movs
jg
add
xor
shl
mov
add
ror
xchg
xor
adc
stos
adc
(bad)
push
or
mov
aam
dec
xor
cdq
cld
or
push
pop
data16
xor
mov
or
adc
sbb
sub
sar
les
xchg
inc
mov
or
mov
xchg
push
mov
or
int3
cmp
add
inc
xor
mov
cmp
shl
jmp
inc
mov
push
jo
ret
inc
jae
(bad)
and
pop
inc
mov
dec
imul
inc
cs
data16
mov
add
lods
adc
jecxz
xchg
push
ins
and
sbb
test
mov
add
or
adc
and
fstp
jmp
inc
add
sahf
add
(bad)
push
leave
dec
or
mov
rol
and
mov
neg
mov
cmp
mov
imul
fist
inc
adc
pop
xchg
mov
lods
add
mov
cmp
dec
pop
adc
(bad)
rcr
(bad)
pop
dec
push
out
in
retf
mov
mov
(bad)
nop
mov
call
popa
je
add
push
pop
sub
push
inc
ins
in
adc
hlt
(bad)
pop
push
pop
mov
cld
mov
jle
mov
push
cmc
push
loop
icebp
lds
mov
mov
cmp
pusha
mov
fist
mov
cmp
adc
fdivrp
cmp
setne
pusha
test
dec
mov
cdq
push
loope
mov
scas
push
or
loope
mov
and
xlat
push
adc
test
inc
jbe
pushf
xor
inc
push
jg
pop
or
xchg
push
mov
push
aaa
stos
push
cmp
pop
adc
inc
and
scas
adc
sub
out
lods
and
retf
mov
or
xchg
jne
cwde
mov
add
sub
outs
js
lods
mov
stos
dec
add
mov
loopne
out
mov
(bad)
push
mov
inc
(bad)
movs
cs
pop
add
(bad)
loopne
or
test
inc
cmp
push
jmp
pop
lock
push
dec
mov
push
mov
pop
mov
push
mov
adc
or
out
add
push
fucomip
fstp
inc
pop
xor
xor
ret
nop
pop
imul
cmp
jecxz
das
xchg
push
aam
rcr
imul
nop
stos
inc
add
push
sub
xor
mov
jl
push
cwde
test
or
mov
outs
pop
xchg
(bad)
add
inc
sbb
inc
dec
popa
jae
inc
jb
outs
jb
xor
ror
add
push
inc
dec
fs
outs
arpl
cmp
inc
popa
je
and
or
fidivr
fcomp
in
dec
add
gs
data16
mov
outs
push
repz
dec
sbb
jae
push
mov
mov
mov
mov
(bad)
xor
je
xor
add
nop
fldenv
ins
sub
pop
mov
cmp
or
push
mov
lods
push
popa
xor
add
add
or
(bad)
cmp
adc
movs
mov
fsubr
ror
js
push
cvtps2pd
loopne
dec
mov
jg
rcl
dec
and
jae
outs
outs
push
outs
jae
jo
inc
ins
push
and
and
push
add
imul
or
pop
adc
sbb
add
cmps
ja
inc
adc
push
or
dec
jnp
cmp
iret
and
sbb
outs
jmp
push
pop
fsub
push
xchg
add
jo
scas
mov
push
mov
das
push
and
push
fadd
inc
out
jnp
mov
aaa
daa
fadd
or
or
dec
jne
arpl
pop
add
mov
loope
dec
sbb
or
push
fsubr
ret
ja
je
push
inc
sub
push
pop
xor
fcom
or
fild
inc
inc
gs
mov
pop
jae
mov
dec
fcmovbe
and
push
jne
popa
scas
jg
mov
and
add
push
push
dec
sbb
ds
in
or
lods
jge
mov
outs
and
push
sbb
jo
cs
stos
dec
loope
ret
fistp
push
sbb
sbb
fs
xchg
jo
bound
fs
int
sbb
or
pop
pushf
rol
cs
pop
inc
add
sbb
mov
xor
or
mov
call
dec
int3
pop
dec
pop
call
adc
inc
setae
inc
loopne
(bad)
inc
sub
cmp
inc
fisttp
(bad)
inc
int3
pop
sbb
xchg
in
jo
dec
or
popf
inc
ror
shl
or
push
inc
dec
inc
xlat
add
fwait
mov
rcl
pop
adc
pop
add
mov
xchg
pusha
mov
push
retf
push
outs
mov
dec
cmp
push
dec
inc
push
in
mov
cs
or
pxor
call
inc
push
fisttp
imul
xor
ss
test
faddp
dec
loop
das
push
pop
loopne
jnp
mov
aas
xchg
push
stos
repnz
cmp
cmp
fisttp
es
push
mov
sti
int3
pop
sti
mov
cmp
daa
stc
pop
lds
jns
xchg
jbe
add
fs
add
js
add
cs
outs
sub
out
fs
gs
sbb
inc
ins
push
(bad)
pop
mov
and
popa
aad
outs
inc
jle
xor
mov
sub
pop
aaa
pop
add
mov
ins
outs
jbe
popa
pop
mov
add
int3
imul
scas
adc
add
dec
push
pusha
cmp
imul
(bad)
psrlw
nop
add
sti
jle
xor
je
push
sbb
arpl
dec
adc
dec
int
shl
mov
inc
enter
and
or
inc
push
jb
dec
daa
sbb
not
or
js
jo
ret
rcr
or
imul
neg
lods
and
movs
jl
jnp
ja
ja
add
push
movs
cmp
test
outs
or
mov
sbb
test
mov
push
or
sub
or
pop
inc
push
ret
loope
addr16
pop
icebp
push
inc
dec
or
ins
add
xchg
add
out
mov
popf
mov
out
je
push
mov
pop
ja
add
rol
cdq
pop
lfs
popa
add
push
pushf
ja
fimul
adc
or
add
push
pop
xor
dec
xchg
lahf
mov
adc
je
push
jl
pop
jnp
div
push
les
fcom
and
mov
push
loope
test
inc
cdq
dec
out
push
cmc
jb
push
push
jae
adc
xor
fistp
cmp
popf
outs
mov
pop
and
mov
adc
sbb
or
push
dec
and
mov
add
sahf
or
sbb
add
cmp
pop
stc
ret
mov
mov
movs
(bad)
fisub
(bad)
stos
mov
inc
pusha
ret
inc
aam
jnp
xor
sbb
mov
mov
mov
shl
mov
push
xor
dec
and
cmps
iret
call
and
inc
mov
pop
xor
and
or
dec
jge
xor
or
xchg
test
adc
push
test
test
add
test
ret
mov
add
arpl
fwait
push
add
add
cmps
iret
sbb
mov
adc
cmp
dec
add
fbstp
cmp
jo
sub
dec
mov
add
aad
mov
lea
push
inc
aad
jo
nop
pusha
(bad)
scas
ss
(bad)
shl
and
cmp
push
nop
jl
ins
das
xchg
push
dec
inc
or
pusha
cmp
jbe
push
sbb
cmp
inc
inc
sbb
gs
les
inc
bound
sbb
cmp
add
aam
sbb
push
and
pop
inc
and
ror
mov
xor
xchg
and
data16
and
add
push
mov
jl
mov
dec
add
dec
imul
push
clc
ret
cmp
mov
push
or
and
dec
push
pop
movs
pop
scas
inc
lock
std
jnp
xchg
mov
add
pusha
push
add
adc
dec
pop
xor
dec
xchg
push
aam
xor
in
imul
lods
jg
cmp
jo
mov
push
pop
xor
pop
int3
movs
inc
push
cmp
lock
outs
or
xchg
push
xor
inc
test
sbb
cdq
jecxz
xchg
popa
inc
dec
mov
xor
or
aad
jne
in
movd
push
mov
mov
call
mov
cmp
arpl
jbe
ds
sbb
push
mov
out
xadd
ud2
add
or
prefetch
or
out
jbe
pop
push
out
outs
jge
cs
pmaxsw
movups
dec
adc
or
sbb
dec
(bad)
bndstx
aas
jmp
mov
mov
unpckhps
movhps
add
pop
sub
dec
sbb
mov
sbb
jg
sbb
repnz
dec
mov
mov
hlt
wrmsr
cli
nop
out
cmps
shl
xor
movd
mov
lea
data16
xchg
and
mov
enter
mov
jmp
add
and
outs
xchg
dec
retf
pop
daa
add
sbb
fs
sub
sub
addr16
push
jbe
add
mov
inc
enter
xor
fisttp
jbe
shr
pop
add
mov
sar
inc
movs
inc
cwde
pusha
adc
movs
scas
jmp
jo
jp
cmp
push
mov
imul
mov
add
push
fmul
inc
outs
leave
pop
add
xchg
dec
pop
mov
sbb
iret
add
pop
sub
cmc
and
jno
lds
pop
dec
cmp
add
push
push
outs
ror
add
add
or
test
ins
jnp
or
and
add
js
arpl
pop
lock
(bad)
popa
jb
or
or
shl
dec
outs
arpl
popa
scas
cmp
or
popa
dec
lock
and
(bad)
cwde
jo
push
mov
push
gs
popa
ins
xor
arpl
fiadd
jmp
ins
pop
add
cwde
add
outs
or
ins
pusha
cmp
jnp
pop
add
dec
outs
push
inc
jns
sbb
push
inc
movs
pop
mov
pop
and
or
mul
inc
add
mov
cmp
inc
ja
push
xchg
inc
and
jecxz
mov
cld
push
popa
ins
jne
push
cmp
jns
leave
lds
inc
adc
cs
mov
movs
jns
push
jns
rcr
adc
jg
jns
sub
push
add
rol
fdivr
xor
and
mov
xor
ror
push
pop
sub
bt
jecxz
rcl
test
mov
inc
jle
push
mov
cs
push
push
push
cmps
inc
or
sub
sub
loop
sar
pop
pop
and
std
arpl
cmps
add
mov
imul
push
jb
outs
jae
jns
add
cdq
mov
adc
lea
(bad)
ins
inc
sbb
adc
mov
xchg
inc
mov
dec
and
or
mov
sbb
xchg
xchg
outs
sbb
push
stos
and
outs
push
test
std
sub
adc
popa
cmp
dec
stos
sbb
sbb
pop
mov
mov
pop
dec
test
pop
jl
test
unpckhps
ja
sbb
rol
imul
push
jns
imul
mov
outs
outs
ins
and
cmp
pop
test
dec
jbe
mov
or
fwait
xchg
dec
mov
mov
test
and
jns
cmp
ficomp
and
dec
inc
adc
std
ror
adc
push
sub
dec
gs
mov
pusha
test
icebp
dec
mov
adc
popf
fs
push
retf
in
adc
jl
fwait
adc
pushf
cmp
es
lock
loope
jno
add
adc
(bad)
sti
call
pop
mov
imul
popf
add
lods
pop
push
les
data16
xchg
data16
pusha
mov
push
test
mov
xchg
adc
fwait
sbb
imul
jge
movs
retf
inc
xchg
add
sahf
enter
gs
sbb
adc
jns
xchg
rol
pop
out
sbb
sbb
mov
or
adc
cwde
add
mov
rcr
mov
xor
das
pop
icebp
jl
pop
add
push
mov
fild
adc
imul
mov
add
mov
lock
loope
pop
lahf
scas
push
sbb
jae
imul
fcomp
arpl
inc
pusha
add
dec
push
int
leave
xor
ds
ss
rol
not
pop
dec
gs
les
fdiv
xchg
xor
xchg
push
dec
shl
xchg
add
popa
bound
push
shl
push
dec
push
and
and
test
je
jbe
fs
push
or
pop
dec
jno
loope
push
int
inc
add
js
inc
dec
xchg
mov
and
pusha
add
and
les
mov
shr
jl
add
gs
bound
imul
adc
cs
ja
jno
cmp
and
and
jecxz
cmp
add
push
pushf
std
ins
dec
sbb
inc
inc
arpl
or
dec
add
or
mov
lock
popa
je
jne
add
cmp
retf
ja
add
add
dec
mov
mov
adc
jo
add
jbe
add
push
lahf
or
es
jno
dec
mov
add
in
test
mov
lea
lea
(bad)
dec
sbb
mov
aaa
fist
xor
repnz
add
mov
dec
add
inc
(bad)
xchg
retf
jbe
pushf
jo
out
mov
call
or
dec
pusha
mov
retf
fs
dec
loopne
or
xchg
(bad)
push
inc
or
push
mov
push
mov
mov
fcmovnu
add
rol
mov
loop
adc
ror
inc
xor
ja
sbb
sbb
or
add
ret
nop
scas
add
test
je
or
push
scas
mov
rcr
ins
add
std
neg
inc
lods
push
adc
fmul
add
cmp
je
push
out
fcomp
fs
daa
jl
pop
icebp
mov
je
cdq
and
add
pushf
and
clc
xchg
fnstenv
cmps
and
add
push
out
push
dec
lock
adc
ins
xor
and
and
jle
sbb
mov
ja
sbb
cmps
aas
mov
adc
adc
mov
ins
addr16
mov
push
hlt
mov
push
pusha
sub
xor
ret
push
add
mov
pop
jle
dec
dec
or
fdiv
sub
mov
sbb
or
es
dec
mov
cmps
or
cmps
or
cmp
mov
sub
push
cli
push
or
push
mov
cmps
mov
and
xor
daa
push
push
or
and
xchg
cmp
or
sub
mov
xchg
iret
push
push
mov
or
rcr
imul
in
(bad)
sub
fs
cs
add
outs
add
(bad)
dec
sti
test
jl
inc
xor
lock
lock
dec
mov
mov
cdq
fld
(bad)
in
jne
xor
push
dec
popa
lahf
gs
idiv
cmp
inc
in
in
mov
in
sub
adc
mov
cmp
jne
add
fld
test
mov
(bad)
(bad)
fist
imul
xchg
movs
cs
dec
pusha
push
xor
lea
mov
(bad)
pop
retf
cmps
dec
clc
and
ins
cmp
add
jnp
or
push
jmp
lea
jo
(bad)
fwait
or
in
sub
imul
(bad)
mov
in
out
in
jo
lock
in
mov
call
jne
pop
(bad)
ins
inc
xchg
lock
mov
xchg
pop
and
cmp
mov
cmps
in
mov
mov
mov
jnp
adc
imul
pop
enter
repnz
jnp
pop
pop
pop
cmp
(bad)
dec
inc
jge
cmp
imul
hlt
jge
js
add
and
ins
or
cmp
shr
inc
mov
pop
mov
cmp
pop
fdiv
mov
cmp
or
js
jne
loopne
adc
and
dec
or
adc
xchg
xchg
adc
xchg
shr
jb
pop
repz
lock
into
mov
or
fnstenv
sub
cmp
and
arpl
das
inc
xor
push
inc
scas
adc
loop
cmp
scas
inc
sbb
mov
cmp
mov
push
adc
add
sbb
ja
sub
loopne
in
jnp
push
add
ins
pop
ja
out
(bad)
push
shr
(bad)
mov
mov
fadd
or
mov
outs
das
popa
mov
clc
jle
or
jmp
mov
xchg
xchg
dec
or
shl
and
in
in
cmp
or
(bad)
loopne
leave
gs
adc
clc
ja
nop
data16
add
test
icebp
jae
pop
jecxz
pop
retf
cmp
add
adc
add
pop
or
push
popa
jg
and
jb
je
jmp
mov
cld
or
xor
test
or
mov
add
xor
push
in
and
sbb
or
add
sbb
sub
call
cmp
sbb
jb
mov
push
mov
xlat
outs
or
dec
add
fild
jo
push
dec
adc
push
aas
sub
add
mov
es
pusha
mov
push
push
mov
push
data16
adc
xchg
fdivr
jno
sub
sbb
mov
out
fist
jg
cmp
dec
mov
mov
mov
sub
pop
and
add
out
out
add
cdq
or
fild
adc
sbb
sbb
js
scas
std
mov
clc
ror
sbb
mov
sar
mov
ja
add
mov
in
jae
mov
ins
hlt
mov
inc
mov
jmp
pop
sub
or
loop
pop
adc
js
pop
inc
ins
or
pusha
inc
adc
xor
loop
mov
scas
sub
jle
cs
(bad)
add
cmp
mov
ds
movs
call
dec
push
(bad)
and
push
(bad)
add
call
sub
clc
ss
mov
or
call
xchg
or
cmp
lock
xchg
xchg
xchg
mov
sahf
lock
fsub
dec
fdivr
fisttp
sbb
or
dec
ror
push
mov
in
fcomp
jnp
jle
clc
ds
test
rcl
push
popa
ffreep
push
jbe
pop
in
neg
or
dec
pop
sbb
sub
jns
pusha
mov
ds
push
push
(bad)
out
sahf
out
xchg
jns
into
loopne
add
and
jns
out
sub
dec
pop
jo
out
sahf
adc
out
jmp
or
sbb
daa
mov
jns
ss
push
cmc
push
fmul
mov
xchg
pop
and
and
sub
daa
sbb
aam
rcr
inc
and
jne
dec
das
sbb
inc
xor
and
and
nop
in
inc
mov
xchg
and
loopne
inc
hlt
imul
or
div
mov
pop
sbb
sbb
push
jo
inc
xor
sti
imul
enter
adc
sbb
sbb
sub
pop
sbb
mov
add
cmp
dec
mov
jmp
sbb
mov
jg
push
lea
inc
sub
inc
sbb
fadd
inc
loopne
cs
lods
mov
push
call
sahf
bound
sbb
cmp
jns
mov
cmp
mov
xor
mov
or
call
inc
je
pushf
mov
or
xchg
sbb
jg
sub
push
mov
rcl
push
outs
in
ret
add
idiv
cwde
or
int
inc
les
mov
mov
not
cmp
pusha
pusha
jb
out
jo
xor
in
(bad)
mov
aaa
mov
cmovns
pop
push
sbb
sbb
pusha
add
pusha
pusha
or
lea
adc
xor
clc
jmp
bound
push
scas
add
mov
loop
shl
sbb
rcr
add
jmp
test
cs
jo
(bad)
ror
mov
add
adc
loopne
in
adc
in
add
inc
xor
fs
sti
int3
fimul
xor
loope
mov
mov
jl
loope
inc
call
out
mov
jnp
cmp
and
inc
not
loope
bound
push
rcr
mov
lock
adc
loope
cld
add
lods
pop
retf
inc
inc
push
add
or
je
jae
outs
pop
add
(bad)
mov
or
adc
addr16
inc
outs
outs
outs
aaa
shr
arpl
sbb
push
inc
imul
aaa
push
pop
cmp
mov
lock
js
gs
data16
push
jb
outs
jae
adc
mov
popa
fs
adc
scas
sub
pop
or
ins
jo
outs
inc
rol
or
aaa
inc
pushf
add
sub
(bad)
(bad)
out
and
push
add
fisubr
loopne
lea
or
jb
pusha
add
xor
lods
out
fcom
fs
mov
add
xor
int3
dec
cmps
adc
outs
mov
mov
outs
ins
outs
or
inc
rcr
pop
or
stos
lock
mov
emms
inc
les
inc
xor
into
lods
mov
add
dec
ffree
data16
js
adc
xor
cmc
adc
or
add
cmp
cs
dec
lods
and
dec
pusha
fcomip
ja
mov
or
add
(bad)
adc
inc
add
hlt
out
and
or
movs
jg
dec
stos
sbb
add
(bad)
call
push
mov
or
dec
dec
bound
clc
jge
jle
jnp
rcl
sub
fsub
xor
push
or
push
push
ins
lods
add
ins
pop
dec
push
movs
movs
pop
push
ins
cmps
sub
jl
mov
push
mov
mov
fidivr
and
cwde
mov
pusha
dec
into
jbe
sti
pop
pusha
ds
fs
push
shl
push
add
add
enter
push
push
ror
lea
lock
out
cmp
dec
push
and
cwde
mov
jl
pop
or
sub
data16
repnz
mov
nop
sub
push
popa
jb
push
jmp
dec
add
add
out
jbe
js
dec
mov
push
push
adc
test
adc
mov
xchg
or
xchg
add
lds
add
adc
push
push
add
lock
mov
pop
inc
js
outs
push
push
repnz
jns
add
add
push
inc
outs
fld
push
pop
fimul
std
pop
dec
mov
inc
xchg
cmp
pop
pand
ret
cli
push
fcom
inc
pop
cmps
inc
or
add
(bad)
fld
lock
push
cvtpi2ps
sbb
push
or
es
popa
mov
push
push
es
mov
mov
mov
sbb
mul
ror
test
fsubr
push
(bad)
in
test
jle
sub
pop
pop
ror
cli
push
mov
dec
popf
movs
loopne
inc
scas
outs
push
push
xor
mov
(bad)
sti
sub
push
push
rcl
jle
ror
push
pop
mov
shl
inc
cld
push
xchg
hlt
xchg
outs
aaa
loop
inc
clc
mov
add
sub
clc
(bad)
jnp
leave
lds
retf
mov
mov
call
jmp
sub
xlat
dec
dec
xchg
arpl
pop
jo
push
loope
rcl
xlat
inc
sbb
xor
sbb
hlt
push
mov
ud0
dec
shl
jmp
fcmove
lea
inc
cmp
aaa
popf
in
sar
mov
mov
or
ins
(bad)
xor
add
mov
jns
les
add
jle
mov
mov
push
pop
call
test
aas
ret
cmps
aam
push
fsubp
dec
jmp
push
pop
fild
mov
icebp
jo
sub
cmps
neg
leave
or
inc
icebp
pusha
adc
mov
push
jge
jl
pusha
mov
(bad)
mov
popa
loope
mov
xchg
or
dec
adc
pop
xchg
or
pop
call
js
dec
cs
sahf
cmp
(bad)
mov
push
cmp
adc
nop
popf
dec
mov
cwde
adc
xchg
adc
sbb
repnz
lock
in
sar
xchg
hlt
mov
jno
test
mov
cwde
and
cmp
shl
inc
cmp
and
sbb
loope
jp
pop
xor
pop
call
sbb
pop
out
mov
(bad)
jne
inc
mov
pushf
and
sbb
dec
pusha
imul
fcomp
add
ins
jbe
mov
in
jmp
cwde
out
nop
stos
retf
mov
xor
out
into
mov
cmp
push
in
outs
add
loop
push
rcl
inc
aam
ins
jb
add
sub
mov
pop
xor
xor
loopne
(bad)
js
gs
imul
cmp
popf
in
add
add
or
ja
inc
inc
ins
outs
jae
fwait
mov
arpl
xlat
pop
sub
and
xchg
dec
mov
fld
jo
push
cvtps2pd
push
cmp
push
imul
pop
sub
pop
fs
add
mov
xor
pop
or
push
pop
dec
add
addr16
cmp
pop
mov
dec
imul
je
das
sar
jae
dec
adc
cmps
add
rcl
add
mov
fsubr
or
and
mov
imul
and
pop
aaa
xor
pop
dec
cmp
sbb
icebp
movs
mov
add
pop
mov
mov
dec
add
cmps
icebp
push
or
add
jne
add
or
jnp
xlat
pop
sub
pcmpgtb
movs
adc
sar
pop
punpckhdq
push
dec
add
addr16
cmp
addr16
pcmpgtd
pop
or
adc
nop
hlt
rol
or
or
inc
jb
adc
pop
xor
xor
jbe
or
jg
pop
fmul
push
jo
loopne
jg
adc
inc
sbb
test
dec
outs
je
sub
cmp
jne
jo
out
cmp
inc
xor
(bad)
jae
dec
enter
pop
mov
add
dec
dec
popa
out
icebp
aaa
cld
outs
fs
gs
into
jo
outs
jbe
ins
imul
mov
ins
adc
bt
pushf
push
rcl
popa
je
push
outs
rcl
adc
add
jmp
inc
pop
or
xor
sbb
loope
adc
and
xchg
xlat
add
addr16
enter
or
in
push
int3
das
shl
cwde
inc
int3
nop
mov
inc
pusha
and
and
adc
loopne
shl
movs
and
outs
pop
or
addr16
mov
push
push
dec
je
outs
arpl
adc
mov
jns
out
cmp
inc
mov
cmp
dec
sbb
xchg
dec
push
inc
ins
mov
mov
std
cmp
lock
sbb
pop
cld
das
add
adc
push
outs
clc
and
rol
mov
jnp
or
add
or
loopne
mov
push
shl
inc
fnstenv
(bad)
outs
je
stos
fistp
inc
js
inc
sbb
inc
imul
rol
xchg
push
(bad)
frstor
in
js
pushf
pop
test
sar
mov
jae
iret
pop
cmps
add
movaps
adc
sub
mov
cmp
cwde
ror
or
cmp
cmp
popa
push
cmp
xor
xor
mov
dec
adc
sbb
jb
hlt
jg
cmp
gs
add
or
(bad)
sub
ja
call
fwait
mov
add
jnp
mov
sub
shr
push
xchg
mov
xor
sbb
int3
rol
xchg
out
xchg
inc
xchg
or
dec
xor
add
lods
pop
mov
xchg
and
push
sar
outs
outs
ja
fild
xor
xor
sar
fild
pop
dec
cmovle
or
ja
shr
sub
sub
inc
sbb
xor
invd
ret
adc
sbb
inc
add
xchg
test
or
jg
inc
jne
push
xchg
out
add
daa
out
inc
jbe
pop
adc
int3
xchg
pop
sbb
shr
pmaxub
clc
dec
cmp
adc
adc
cmc
add
or
in
nop
setbe
push
pop
inc
dec
inc
push
or
pop
call
pop
push
pusha
adc
push
les
pop
pop
punpckldq
rol
sbb
push
outs
add
imul
inc
mov
popf
mov
lds
cwde
add
and
dec
hlt
sbb
lock
bound
test
movs
gs
clc
pushf
fucomi
test
pop
add
or
rol
and
test
pop
push
mov
mov
aam
add
(bad)
pop
loopne
adc
shl
and
add
adc
imul
cmp
or
mov
mov
add
pop
mov
adc
jns
push
dec
mov
jo
push
out
xor
xor
inc
push
fwait
or
stos
push
add
add
jbe
setb
mov
rol
out
xor
sub
test
cdq
dec
leave
xchg
sbb
or
in
pop
divps
inc
fs
mov
or
mov
sbb
xor
sbb
add
mov
inc
pop
and
sub
push
pop
arpl
test
jmp
xor
xor
add
scas
fdivr
mov
pop
in
jmp
push
jg
add
push
ss
or
or
mov
push
inc
mov
cwde
and
push
lods
mov
add
pop
mov
add
daa
and
popa
or
add
adc
or
inc
ss
mov
ret
imul
add
sbb
add
sub
mov
add
aas
push
push
xor
mov
cs
mov
xor
cs
out
push
adc
xor
cmp
ss
xchg
imul
es
or
mov
cwde
test
push
out
int3
int3
dec
dec
xor
push
cmps
jbe
cmp
push
data16
or
mov
adc
push
sub
(bad)
nop
pushaw
pop
mov
fstp
icebp
push
ss
push
addr16
push
inc
bound
iret
mov
jo
das
pop
mov
or
and
(bad)
xor
ret
sti
or
push
add
inc
add
pop
out
pop
pop
push
out
xor
dec
adc
push
xor
dec
scas
xor
add
scas
add
mov
data16
adc
bound
retf
xchg
(bad)
mov
mov
push
adc
cmp
or
inc
mov
jne
ret
xor
scas
xor
jl
pop
push
outs
add
push
call
pusha
xor
pop
(bad)
cmps
xor
xchg
cli
data16
(bad)
push
push
or
add
shr
fild
aas
fbld
mov
pop
imul
dec
rcr
add
jp
push
pusha
push
call
ins
test
ror
sbb
inc
bound
or
in
and
ja
sti
dec
or
inc
out
(bad)
mov
xlat
or
add
and
fild
fisttp
mov
cmp
xchg
xlat
imul
add
inc
mov
sub
fbstp
push
xchg
or
out
xor
cmp
inc
xor
pop
(bad)
lock
jae
out
(bad)
(bad)
push
mov
adc
cwde
inc
push
adc
add
inc
mov
inc
sub
push
pusha
mov
dec
popa
or
dec
pop
test
mov
xor
daa
push
push
data16
push
sbb
fisub
add
ficom
cmp
iret
(bad)
add
cwde
ror
push
jbe
outs
add
pusha
jle
das
data16
pop
dec
dec
dec
lahf
out
pop
or
push
inc
or
push
aas
inc
and
sbb
retf
ret
jg
jg
add
or
cdq
pop
sub
dec
das
sub
add
add
adc
inc
xchg
or
retf
dec
inc
pop
push
nop
push
data16
jnp
push
gs
das
aas
mov
nop
fsubr
jns
add
mov
or
(bad)
and
dec
xor
add
jp
adc
rol
inc
and
mov
xlat
push
pop
cmp
mov
push
mov
xchg
add
loop
mov
sub
push
outs
cmp
stos
push
(bad)
dec
inc
je
daa
sbb
push
rsqrtps
add
pop
aas
ror
or
sub
outs
add
dec
ja
fmul
mov
bound
push
nop
cmp
addr16
out
inc
sub
(bad)
ds
adc
and
jg
xor
add
jbe
jmp
inc
aad
push
(bad)
jle
dec
mov
push
cmp
adc
ds
add
inc
add
and
iret
mov
loopne
sub
aaa
inc
xchg
or
pop
add
or
sti
rol
add
cs
inc
data16
push
mov
shr
push
sahf
or
cli
aas
sahf
call
mov
adc
das
push
mov
jmp
sti
lea
dec
mov
sti
lahf
inc
pop
push
cwde
popa
or
bound
add
fistp
mov
mov
push
rcl
ret
fild
and
out
ins
adc
cmp
js
cs
xor
loopne
pop
push
fwait
and
add
adc
neg
inc
pusha
or
movs
or
fidivr
adc
cwde
jle
jae
sub
movs
and
dec
mov
and
daa
push
cwde
inc
and
fbstp
nop
or
adc
inc
adc
xchg
mov
out
(bad)
scas
add
and
push
not
das
jp
loope
sub
(bad)
jnp
sbb
out
mov
xchg
out
aas
(bad)
sub
int
ficom
scas
stos
addr16
enter
jbe
inc
sti
shl
lods
jae
and
mov
je
add
xor
pop
or
aas
push
pop
call
sub
jo
ins
mov
addr16
bound
aaa
xchg
(bad)
and
or
pop
(bad)
bound
fistp
mov
int3
and
inc
and
int3
and
pop
mul
cmps
rcl
test
inc
loopne
mov
push
imul
pop
xchg
mov
dec
pop
imul
cmp
ffreep
push
or
fisub
pusha
push
pop
xchg
adc
out
lahf
and
push
or
aas
sbb
cs
xchg
ds
mov
add
aas
xchg
push
add
adc
cmovg
and
fcmovbe
out
mov
xchg
jecxz
or
cs
sbb
xchg
add
pop
inc
or
daa
xchg
sub
lahf
inc
repz
mov
and
lds
pop
jbe
push
adc
push
jg
push
test
inc
xchg
cmp
lock
pusha
add
scas
sub
add
(bad)
scas
dec
pop
add
or
dec
mov
rsqrtps
inc
xlat
pop
loopne
mov
sahf
pop
data16
or
mov
lahf
sub
xor
mov
gs
mov
outs
jne
push
cdq
adc
cli
cmps
add
(bad)
push
jo
pop
out
aaa
out
xor
mov
mov
scas
iret
pusha
sbb
popa
iret
xchg
outs
adc
pop
xlat
mov
and
or
jg
(bad)
sbb
xchg
mov
pop
fisttp
imul
shl
das
ja
sub
loopne
arpl
push
mov
dec
pop
fisttp
push
dec
cwde
rcl
adc
push
cmps
xor
cwde
adc
and
loop
sbb
mov
pop
or
sub
(bad)
pop
dec
daa
pusha
adc
sbb
aas
test
or
cdq
mov
add
push
ret
and
aaa
loopne
mov
out
jle
adc
cs
dec
or
mov
xor
pop
sbb
pop
push
repz
bound
loop
add
inc
outs
xor
jo
scas
aaa
push
and
seta
adc
test
pop
aaa
addr16
and
aas
retf
shl
or
(bad)
into
push
push
out
jg
aaa
mov
adc
and
outs
dec
and
aaa
dec
sbb
jo
ins
test
or
mov
pop
adc
lea
cmps
push
push
mov
xchg
cmps
jg
lods
dec
push
push
pop
pop
add
add
adc
sbb
ja
sub
out
mov
fild
ror
inc
daa
(bad)
outs
test
rol
dec
dec
addr16
adc
ja
addr16
jne
push
nop
ja
push
add
pusha
mov
xchg
sub
sar
(bad)
fbstp
daa
ss
aam
push
das
mov
mov
add
pop
xchg
fld
outs
xchg
pop
pop
or
ret
aas
pop
inc
adc
test
mov
push
xchg
inc
lahf
push
int3
add
call
and
lahf
push
xchg
scas
jmp
inc
outs
dec
push
jmp
push
pop
push
(bad)
mov
and
ror
nop
add
inc
pusha
sbb
sbb
lahf
adc
imul
cwde
gs
aaa
xchg
nop
call
mov
ror
aas
push
xor
sub
adc
rcr
aaa
lahf
inc
and
adc
aas
xchg
sbb
dec
xor
out
add
and
aaa
aas
mov
shr
xlat
add
add
lea
push
ja
mov
mov
xor
fild
aas
pop
aas
and
seta
mov
aas
bswap
and
xchg
inc
popa
test
inc
xchg
or
aas
daa
inc
bound
mov
out
pop
mov
adc
(bad)
daa
sub
adc
add
or
or
mov
add
add
and
inc
mov
mov
xlat
xlat
jmp
es
xor
repnz
aam
and
adc
xchg
jp
aaa
ret
mov
ja
xchg
rol
sti
outs
push
and
pop
or
or
cmp
jle
dec
inc
mov
mov
inc
outs
xor
retw
push
rol
scas
adc
les
jae
push
fbld
xchg
push
scas
cmps
shl
add
rcl
xor
adc
cmps
pop
movs
add
scas
aaa
xchg
inc
add
adc
stos
push
adc
inc
(bad)
aas
xchg
or
iret
add
mov
outs
fbld
and
inc
or
outs
xor
bound
out
xchg
test
rol
repz
or
lods
dec
push
cmp
inc
push
or
lahf
(bad)
js
shr
out
mov
adc
pop
mov
(bad)
call
or
out
test
dec
out
cmp
inc
mov
inc
add
and
iret
pop
cmps
enter
pop
dec
inc
xchg
sub
push
dec
push
xlat
pop
and
adc
lahf
xlat
ret
bound
mov
call
jecxz
inc
iret
or
pop
data16
adc
aas
cmps
mov
add
jg
adc
scas
pop
les
xlat
data16
dec
dec
or
jmp
cmp
add
push
dec
pop
shr
cmp
inc
call
out
out
dec
sub
or
into
pop
push
into
push
adc
mov
out
jae
or
pusha
and
stos
xchg
(bad)
repnz
data16
pop
fst
outs
or
push
call
pop
cmps
push
rol
jns
add
or
xchg
inc
adc
mov
add
lahf
push
mov
(bad)
cmps
push
sbb
retf
adc
push
(bad)
xlat
sub
mov
pop
xor
ins
add
int
adc
jecxz
push
push
sbb
mov
(bad)
aas
xor
mov
sub
push
inc
or
(bad)
bound
stos
rcr
inc
out
sti
aas
push
adc
iret
out
pop
adc
ja
in
or
mov
and
jae
xor
adc
loopne
dec
push
aaa
inc
and
inc
inc
pop
xchg
aaa
add
sub
add
cmps
push
jg
inc
test
(bad)
mov
and
and
movs
addr16
test
pop
push
cmps
stos
push
and
dec
inc
(bad)
mov
lahf
xchg
fadd
add
pop
inc
mov
test
inc
(bad)
and
mov
ror
mov
push
test
adc
xor
add
dec
or
pop
out
push
or
or
ins
test
cmps
push
es
add
sbb
daa
jg
mov
add
call
and
or
movs
jbe
(bad)
xlat
rol
push
fistp
outs
scas
daa
or
ins
xor
rol
pusha
out
test
out
dec
pop
fldenv
popf
xchg
push
out
jbe
inc
push
out
push
add
or
pusha
xor
into
pop
push
adc
dec
ds
add
mov
adc
push
pop
(bad)
outs
push
add
or
or
adc
sub
jbe
mov
lea
or
js
out
es
pop
fwait
into
xchg
pop
sub
fbstp
mov
pusha
push
and
shl
push
arpl
jo
and
aas
jno
or
pop
out
jae
sub
ja
shl
and
cmp
mov
push
add
das
aas
shl
add
cmp
(bad)
out
fwait
iret
test
inc
aam
inc
test
out
adc
loop
aas
add
in
push
sti
out
inc
push
sbb
pop
cmp
xchg
mov
aaa
xor
pop
push
dec
aas
jo
retf
(bad)
out
or
pop
pop
outs
push
pop
adc
mov
int3
in
push
sub
rol
int
dec
pop
data16
pop
add
rcr
test
cmps
or
sub
das
mov
push
ja
data16
test
cmp
repz
rol
xlat
sbb
out
xlat
cmp
xchg
inc
mov
out
imul
push
aas
fistp
mov
(bad)
mov
dec
shr
sbb
aaa
mov
ss
packuswb
fist
fidiv
xchg
mov
lods
add
cmps
xor
div
outs
add
int3
xor
scas
outs
push
stos
inc
mov
inc
and
popa
dec
sub
add
pop
push
add
not
mov
fstp
ret
mov
xor
mov
movs
adc
sbb
mov
loop
mov
add
or
les
or
xchg
scas
retf
or
xor
dec
pop
jmp
cli
inc
arpl
dec
mov
nop
or
test
or
gs
ret
ret
xchg
xor
outs
cmps
iret
xchg
or
addr16
push
or
je
test
ins
xor
ins
aaa
xchg
ret
add
dec
sub
ret
scas
out
xchg
sub
lahf
das
out
push
sbb
jmp
add
push
movs
mov
and
rcl
or
sbb
inc
and
dec
jle
sub
dec
xor
xor
stos
test
adc
sbb
push
daa
pop
mov
dec
dec
das
inc
nop
(bad)
inc
inc
out
mov
inc
daa
xchg
aaa
addr16
inc
nop
out
inc
add
adc
es
inc
mov
mov
daa
or
push
out
inc
mov
adc
imul
outs
pop
ret
xchg
xor
fimul
xor
pop
mov
(bad)
inc
xor
inc
or
mov
mov
pop
sub
inc
xor
add
into
not
jno
pop
fistp
neg
lods
out
out
aam
add
popa
test
mov
mul
adc
push
pop
pop
sbb
das
fadd
ss
daa
icebp
xchg
enter
cmps
into
pushw
test
push
mov
das
movs
movs
out
repnz
inc
pop
and
mov
out
les
cwde
xor
aaa
adc
jae
jmp
bts
das
xor
aaa
and
jb
lahf
and
dec
pop
mov
xlat
mov
adc
sbb
aas
out
aaa
mov
jne
and
and
or
(bad)
push
add
pusha
or
idiv
adc
pop
mul
sub
xlat
iret
or
add
iret
daa
ror
add
(bad)
arpl
and
iret
dec
xor
outs
add
bound
sub
mov
iret
daa
iret
mov
ss
(bad)
(bad)
bound
iret
shl
iret
push
cmps
lds
xor
pop
mov
ss
xor
imul
lea
daa
fadd
xor
cmps
mov
iret
mov
sub
xor
addr16
fild
ja
cmp
xlat
mov
add
bound
xchg
or
pop
in
or
xlat
mov
aaa
sub
or
xlat
cmps
add
cmps
daa
dec
mov
movs
(bad)
(bad)
push
popa
mov
mov
add
out
xor
lods
and
mov
ss
cs
push
and
adc
adc
add
pop
dec
pop
mov
dec
aaa
fmul
pop
and
out
adc
pop
add
cmp
movs
inc
fild
or
inc
add
mov
out
rol
inc
or
or
mov
cmps
ret
pop
mov
das
fld
xchg
inc
or
cwde
fwait
iret
inc
pop
fadd
push
push
mov
mul
and
stos
or
scas
mov
(bad)
aaa
data16
or
add
dec
lods
mov
adc
dec
sbb
jb
out
jae
lahf
(bad)
arpl
(bad)
push
pop
push
pop
cmps
pop
mov
pop
pop
scas
inc
mov
push
dec
dec
xchg
cwde
cmps
call
add
test
lahf
ins
push
push
stos
addr16
adc
dec
out
and
lahf
out
cdq
and
out
push
test
(bad)
or
inc
pop
sub
int
dec
inc
lahf
and
inc
inc
cmps
or
pop
add
mov
pop
pop
push
xchg
retf
inc
int
push
xchg
lods
or
imul
gs
cmovae
pusha
pop
sub
add
pop
pusha
sub
cmps
push
addr16
inc
xchg
test
adc
and
mov
ret
ret
push
or
pop
push
sub
push
outs
or
push
outs
push
data16
mov
jae
es
mov
or
pop
or
daa
cmp
test
pusha
inc
or
repnz
add
das
sbb
pop
sahf
ja
push
fiadd
or
aaa
jae
mov
xchg
fbstp
bound
test
(bad)
fbstp
and
ret
push
dec
ins
es
outs
aas
and
cs
adc
inc
pusha
mov
ret
mov
dec
int3
leave
and
cmp
ror
(bad)
bound
xor
dec
cmp
sub
loopne
aas
xor
aas
inc
sub
adc
sbb
dec
daa
add
popa
adc
sub
add
pop
dec
sub
xor
sahf
dec
daa
xchg
add
inc
daa
cmp
sub
xchg
aaa
adc
add
pop
pop
adc
or
movs
or
(bad)
or
dec
adc
inc
pop
xor
cmp
xchg
pop
xchg
push
xchg
stos
clc
push
outs
mov
(bad)
daa
inc
mov
and
mov
inc
or
add
xchg
daa
sub
scas
cmps
pop
shl
xlat
(bad)
sbb
dec
and
adc
add
pop
sub
and
cwde
inc
inc
(bad)
(bad)
sbb
push
daa
mov
add
rol
inc
pop
xor
or
daa
int3
or
push
daa
xchg
and
daa
inc
xor
nop
pusha
or
inc
jbe
das
dec
sub
xor
inc
inc
stos
push
sub
out
pop
or
or
push
daa
cmp
and
daa
outs
inc
inc
or
pop
outs
sbb
pop
and
sub
jbe
mov
and
add
sbb
and
inc
dec
push
add
pop
and
jnp
out
add
and
adc
test
inc
inc
popa
push
mov
outs
push
retf
mov
rol
test
fsub
inc
cmp
test
or
add
scas
mov
loopne
shl
addr16
or
push
jle
sbb
sbb
jbe
outs
outs
js
xchg
add
ds
loop
jo
mov
pop
or
mov
xchg
outs
inc
add
loop
adc
ins
jmp
cmp
repz
pushf
in
add
mov
nop
cmp
ret
jbe
cmp
and
pop
pop
movs
stos
test
add
dec
pusha
lods
adc
sbb
adc
ss
or
mov
and
fbstp
aaa
inc
outs
push
cwde
ins
mov
lods
add
push
cmps
ret
and
pusha
mov
dec
cmps
xchg
push
mov
push
sbb
inc
outs
cmps
call
ss
aam
xor
inc
ficom
pop
xchg
mov
sbb
das
ja
sbb
fild
in
inc
das
iret
push
(bad)
add
out
cmps
dec
xchg
cdq
add
mov
outs
mov
sub
cmp
ret
cmps
push
push
dec
fabs
mov
into
ds
pushaw
xchg
xchg
pop
aas
xchg
(bad)
xor
call
and
xchg
inc
ja
sub
int3
pusha
outs
cmp
push
aaa
and
js
daa
or
(bad)
cmp
xchg
mov
adc
shr
fld
test
jnp
jo
or
out
sbb
jo
adc
mov
adc
setbe
int3
sar
sub
data16
xchg
test
adc
push
pushw
das
and
mov
pop
aam
inc
mov
add
mov
mov
inc
xchg
ret
mov
xchg
mov
sub
pop
mov
add
mov
add
cli
jb
das
push
add
pop
push
mov
arpl
mov
push
ds
add
or
outs
mov
fld
pop
out
inc
adc
pop
add
pop
or
dec
push
dec
mov
xacquire
dec
adc
ror
add
out
push
or
adc
cwde
pop
push
push
xor
add
pop
inc
test
or
dec
sti
mov
adc
xchg
and
or
push
lahf
push
push
adc
inc
xchg
xlat
in
adc
xor
adc
sbb
push
fistp
in
add
xchg
ds
or
add
jg
pusha
xor
sub
jp
(bad)
ror
pop
(bad)
xchg
and
(bad)
out
rol
sub
xchg
adc
mov
mov
mov
aas
aas
or
aas
inc
inc
das
pusha
shl
inc
xor
dec
xor
daa
dec
xor
inc
fs
sahf
addr16
xor
test
xchg
jae
push
ret
pop
and
outs
jg
cs
aas
aas
pop
aas
push
jne
imul
and
push
add
ins
xor
xlat
sbb
ss
or
loopne
fistp
or
sbb
mov
sub
inc
pop
xor
out
popa
or
out
mov
data16
push
mov
nop
push
test
inc
xchg
pusha
mov
push
dec
inc
pop
and
addr16
int
rol
xor
test
pop
push
inc
inc
in
lods
push
mov
inc
adc
inc
(bad)
mov
push
inc
xchg
cmps
jmp
or
add
push
or
adc
rol
cmp
loop
idiv
dec
and
push
push
mov
scas
cmp
or
push
pop
cmp
das
sbb
pop
sbb
mov
rol
and
mov
xor
xlat
or
adc
jb
jg
pop
or
ud0
ja
ja
pop
add
push
push
xchg
pop
and
sbb
cmps
(bad)
ins
bound
jnp
adc
push
jle
xchg
adc
add
iret
xchg
mov
adc
add
sub
push
xlat
dec
mov
jae
xchg
inc
adc
inc
xor
shl
pop
adc
or
call
sub
pop
iret
xchg
or
or
fbld
cmps
add
push
pusha
fist
push
xor
scas
pop
sbb
add
push
and
sub
adc
or
cmp
sbb
sbb
mov
pop
pop
mov
and
ret
stos
xor
daa
and
push
push
arpl
sbb
dec
or
imul
pop
push
add
mov
adc
or
arpl
dec
mov
test
enter
cmps
fwait
dec
adc
sub
pop
xchg
pop
mov
pop
mov
cmps
out
and
cmova
xor
ror
inc
xchg
add
pop
sbb
inc
mov
cdq
xor
jbe
sub
push
push
movs
sbb
addr16
fisubr
out
add
fiadd
ficom
dec
xor
pusha
inc
ja
dec
mov
sbb
push
mov
adc
xchg
movs
rcl
lahf
adc
scas
inc
pop
ja
aaa
test
retf
inc
cmp
(bad)
mov
adc
adc
sub
movs
loope
ds
ds
jae
rol
jae
fist
add
dec
mov
adc
sub
xchg
outs
ror
ins
xchg
aaa
iret
or
add
and
and
inc
(bad)
mov
xor
push
popa
or
mov
and
add
addps
add
out
sub
push
xchg
mov
dec
add
fistp
and
aam
xlat
mov
xor
pop
dec
iret
push
sub
sbb
dec
movs
lods
nop
sti
daa
pop
mov
js
push
arpl
sub
and
iret
lea
rcl
iret
or
pop
mov
sbb
iret
out
and
pop
lds
adc
ja
pop
mov
ins
dec
ror
out
pop
add
add
test
cwde
inc
push
add
out
xlat
jae
sub
je
maskmovq
mul
mov
or
or
data16
sub
or
fsub
pop
out
add
rcr
iret
push
loop
sahf
cmp
adc
data16
sub
mov
xlat
jg
adc
sub
sbb
push
bound
pop
pusha
jo
dec
pop
mov
dec
dec
inc
nop
and
xchg
mov
or
xchg
push
push
push
scas
jo
outs
push
pop
mov
(bad)
and
mov
and
daa
ret
pandn
inc
pop
mov
imul
xlat
mov
adc
xor
jns
outs
not
xor
movs
test
pop
dec
pop
xor
xor
shl
xor
lahf
repz
sbb
mov
xchg
push
push
add
xchg
dec
dec
mov
dec
jmp
rol
dec
out
(bad)
inc
add
jg
mov
adc
push
jnp
inc
sub
dec
push
add
cmps
mov
test
dec
push
dec
cmps
dec
fisttp
push
mov
rcl
push
dec
xchg
adc
js
sub
xchg
mov
mov
dec
adc
js
and
out
jecxz
int
xchg
ja
or
add
jmp
add
stos
dec
(bad)
dec
jae
add
dec
dec
sar
aaa
mov
mov
pusha
ss
xor
xor
outs
aaa
cmp
dec
stos
dec
lods
ret
scas
xchg
add
or
add
pop
xchg
and
or
cs
mov
movs
sbb
add
into
or
adc
data16
lds
(bad)
pusha
xor
adc
data16
and
out
movs
gs
sub
inc
cmp
sub
lea
sub
das
aas
mov
dec
dec
push
or
jbe
or
xchg
loope
cs
add
add
sub
shr
(bad)
or
inc
or
pop
or
inc
xor
jg
adc
add
xchg
pop
dec
inc
mov
arpl
lds
dec
or
lds
push
mov
dec
push
ins
xor
iret
dec
add
xchg
mov
or
sbb
mov
adc
xor
xor
call
push
push
push
mov
xor
xor
mov
mov
mov
call
test
shl
jmp
inc
add
cmp
jne
mov
pop
pop
pop
pop
ret
mov
int
jle
push
mov
mov
dec
and
mov
mov
add
inc
nop
div
nop
xlat
push
jnp
xor
add
dec
push
xor
imul
mov
inc
add
jge
out
call
sub
fistp
daa
jl
push
and
aam
sbb
cs
add
adc
cmp
lock
push
jbe
mov
pop
aam
inc
or
xlat
retf
fs
jns
sub
in
shr
out
mov
push
pop
add
push
jb
cmp
loopne
call
cmp
arpl
push
jnp
mov
lods
add
push
dec
outs
fwait
gs
es
int
outs
pop
push
xor
inc
push
popa
je
add
add
(bad)
std
fisttp
loopne
mov
fadd
add
and
dec
popa
imul
imul
dec
bound
arpl
pusha
add
add
adc
sub
cmp
sub
jnp
pop
xor
jnp
or
sbb
sti
ins
xchg
jb
imul
jb
inc
outs
ins
jo
sahf
or
shl
test
jnp
popf
add
or
push
inc
jb
or
fnsetpm(287
xchg
xor
push
push
or
outs
dec
inc
jns
mov
push
iret
fild
xchg
push
inc
or
out
pop
mov
fimul
loop
or
sub
outs
mov
xor
push
or
inc
inc
ret
ins
jmp
fdiv
add
mov
xor
lods
cmp
jae
je
imul
enter
mov
out
(bad)
lds
cmp
xchg
mov
or
mov
add
ret
mov
xor
xchg
leave
hlt
ror
inc
je
clc
(bad)
(bad)
inc
xchg
shl
push
add
leave
push
push
aas
loopne
push
mov
movzx
mov
cmp
dec
inc
jne
ins
sti
stos
jle
jne
mov
jp
mov
lahf
ins
jo
hlt
cmp
jbe
mov
jae
or
gs
(bad)
jmp
out
dec
or
push
inc
or
mov
in
push
out
pushf
push
inc
in
adc
cmp
xchg
pop
jbe
jbe
adc
jp
shr
sub
cld
dec
cld
out
push
inc
cmp
jne
mov
pop
call
adc
inc
add
stos
mov
xor
jmp
jmp
cld
pop
ret
idiv
dec
mov
pop
dec
push
test
je
add
inc
jae
add
(bad)
mov
mov
pop
mov
pop
add
inc
mov
scas
inc
mov
(bad)
shl
xchg
imul
iret
jb
mov
cmc
in
lock
sbb
add
or
push
(bad)
jg
xor
cmp
mov
mov
fucomi
xor
xchg
lods
xor
pop
sub
out
mov
retf
add
ins
add
in
push
ins
push
fwait
(bad)
mov
xor
jnp
in
(bad)
into
cdq
sti
add
inc
aam
fcom
mov
add
shl
sub
inc
xor
pop
sbb
je
add
mov
mov
sahf
lea
add
pop
fcom
ret
mov
mov
dec
dec
mov
dec
push
push
jbe
pop
mov
or
hlt
push
ficom
stc
cmp
(bad)
mov
pop
jmp
adc
mov
mov
xchg
inc
jg
mov
cs
pop
dec
push
and
mov
pop
icebp
fbld
dec
jg
add
mov
sbb
(bad)
jle
jle
sub
mov
je
lea
cmp
push
shl
pop
les
mov
ror
push
out
popa
jns
sub
pop
mov
cmp
push
mov
inc
fidiv
and
inc
in
fs
add
add
xor
(bad)
jmp
jle
adc
cmp
adc
inc
mov
jmp
lea
inc
push
ss
mov
les
dec
jnp
cmp
cmp
push
sbb
push
jge
aaa
or
jp
adc
shl
fldcw
loopne
nop
les
je
jmp
das
and
ror
adc
pop
retf
push
mov
ins
in
or
push
inc
dec
in
in
dec
dec
dec
dec
in
in
dec
dec
dec
xor
in
in
xor
xor
in
in
ss
cmp
in
in
cmp
cmp
in
in
ds
and
in
in
and
and
in
in
es
sub
in
in
sub
sub
in
in
cs
adc
in
in
adc
adc
in
in
push
pop
sbb
in
in
sbb
sbb
in
in
push
pop
add
in
in
add
add
in
in
push
pop
or
in
in
or
or
in
in
push
(bad)
std
jb
jb
icebp
repnz
jb
jb
cmc
div
clc
jb
jb
stc
cli
sti
cld
jb
jb
std
(bad)
jmp
jb
jb
loope
jecxz
jb
jb
in
out
jb
jb
jmp
jb
jb
out
out
shl
jb
rcl
rcl
jb
jb
aad
xlat
fdiv
jb
(bad)
fcmovnu
cmp
add
cld
int3
bound
clc
pop
jo
imul
add
into
xchg
or
gs
dec
test
les
adc
outs
popa
sbb
jecxz
mov
ins
dec
push
push
or
dec
mov
or
jne
ins
fs
popa
arpl
add
dec
xor
mov
dec
dec
dec
inc
dec
imul
dec
or
push
gs
js
pop
xor
pop
dec
into
jmp
pop
setns
aas
mov
setne
push
dec
in
out
lea
xchg
daa
dec
imul
sub
or
out
hlt
bound
popa
add
or
ins
ss
ins
jns
push
or
cmp
lds
sbb
or
xchg
or
adc
add
aas
cmp
stos
psraw
loopne
gs
popa
enter
sub
dec
popa
mov
jo
jno
add
js
jns
adc
popa
jne
cmps
and
dec
fwait
pop
mov
sbb
sysenter
movs
fwait
sub
sbb
daa
adc
in
pop
pop
or
inc
dec
or
add
or
(bad)
xor
push
add
scas
or
cmp
(bad)
mov
das
push
dec
adc
add
imul
lods
pop
jno
cmp
dec
jns
sbb
jb
jg
mov
ds
adc
inc
ins
outs
bound
or
fldcw
mov
outs
ins
xor
pop
sbb
mov
sti
bound
cmp
sub
mov
nop
mov
out
fs
jne
sahf
cmp
add
outs
lahf
mov
in
mov
gs
ins
cli
outs
or
xor
or
call
dec
push
push
push
fwait
stos
aas
or
cmp
int
or
cvtdq2ps
sub
aaa
(bad)
sbb
fisttp
dec
rol
enter
mov
call
dec
hlt
pop
outs
xor
xor
mov
mov
(bad)
sbb
in
or
loop
add
inc
loope
in
jg
retf
shl
add
add
out
mov
call
pop
call
fisttp
mov
pop
dec
cmp
jne
cmp
std
mov
stos
lea
push
mov
rol
call
jne
dec
fisttp
je
and
dec
in
add
repz
pop
or
add
nop
rcl
inc
pop
lock
sti
push
or
aam
sbb
lock
shl
mov
fwait
pusha
jne
mov
mov
push
lods
inc
dec
hlt
js
call
loopne
loopne
push
je
sbb
jne
ds
sar
lock
jle
in
adc
add
mov
mov
inc
stos
in
in
into
xor
pop
push
inc
enter
add
enter
jne
jmp
inc
add
sub
aam
push
adc
push
out
jnp
fstp
iret
das
adc
push
rol
inc
mov
jnp
es
(bad)
out
mov
push
mov
push
jg
rol
xor
mov
dec
popa
nop
(bad)
das
fadd
or
mov
pop
add
mov
sbb
lods
mov
psubsw
rol
sub
inc
mov
cli
xchg
inc
std
std
sub
repz
jb
inc
(bad)
sti
and
rcr
mov
mov
dec
jne
xor
daa
cmp
add
mov
add
pop
test
xor
push
clc
or
pop
cmp
cld
mov
push
jle
call
fisub
and
adc
mov
lea
inc
mov
loop
or
pop
out
mov
(bad)
pusha
mov
xor
mov
sub
push
sub
mov
sbb
hlt
mov
cs
pusha
mov
outs
lock
push
mov
stc
scas
and
mov
dec
push
pop
sti
push
sbb
mov
adc
xchg
push
mov
movs
sbb
dec
out
push
js
test
(bad)
adc
and
fist
hlt
repnz
lock
in
stc
clc
(bad)
call
out
push
pop
sbb
and
icebp
jmp
cmp
jl
sub
adc
sub
lea
loope
jp
jg
push
das
inc
hlt
push
lea
mov
(bad)
pop
pop
mov
mov
add
or
aad
dec
mov
mov
in
jb
arpl
add
shl
pusha
cmp
pop
and
in
mov
cs
iret
cmps
inc
jl
out
idiv
daa
or
call
lock
cli
add
or
pop
stos
pop
pop
add
inc
in
in
mov
adc
shr
std
pop
je
lea
push
or
xor
sbb
mov
mov
mov
in
jle
sub
mov
dec
enter
inc
add
push
dec
test
jge
inc
jmp
fwait
pop
jle
outs
inc
dec
out
dec
sub
fcomp
mov
mov
pop
sbb
aaa
pop
mov
sbb
add
dec
xor
cmp
shl
rol
and
add
mov
or
jmp
xchg
mov
xor
push
add
aam
add
mov
jmp
push
add
adc
pop
xadd
js
outs
push
mov
ret
pusha
pop
loop
xchg
ins
and
mov
js
adc
xor
and
add
shl
push
movs
stos
js
jbe
push
pop
cdq
fld
sub
adc
pop
xchg
shl
int3
add
aad
pop
lock
js
int3
pushf
enter
add
and
std
lods
add
dec
adc
dec
jle
sbb
in
sub
add
stc
sub
sbb
cmp
jge
dec
test
xchg
jmp
sbb
and
les
sbb
fcom
ins
fstp
pop
or
adc
jns
xchg
dec
mov
movs
aam
sub
sbb
jmp
jmp
pop
nop
popa
jno
inc
fsubr
sbb
push
push
mov
ret
sbb
aaa
lods
sub
out
test
repz
mov
ret
les
cmp
jne
xchg
jmp
in
fidivr
rol
jmp
sbb
ja
ins
xor
imul
dec
push
dec
data16
out
push
hlt
push
sbb
ins
cmp
pushf
sbb
jl
jle
add
sub
inc
fild
push
fidiv
mov
nop
pop
mov
in
inc
inc
movs
pushf
fiadd
into
dec
jb
xor
or
xchg
adc
fsubr
sbb
addr16
nop
iret
mov
out
cld
out
cld
xchg
pop
sub
mov
(bad)
mov
inc
lods
push
cdq
fs
lods
lock
mov
cmp
or
popf
and
out
inc
hlt
or
(bad)
push
movs
std
test
pop
mov
fimul
dec
mov
jne
push
mov
adc
pop
xor
sub
jae
or
or
cmp
mov
data16
mov
cwde
jae
push
cmp
mov
mov
rcr
or
outs
and
mov
or
add
lods
mov
dec
(bad)
dec
sub
or
xchg
add
or
pop
sub
pop
mov
pop
xchg
inc
xchg
or
out
add
push
pop
je
outs
mov
or
aas
cmp
push
mov
or
mov
inc
jge
pusha
(bad)
call
dec
push
push
and
pop
inc
adc
mov
xchg
cmp
and
ret
or
fisttp
xchg
xchg
(bad)
fisttp
mov
dec
or
jecxz
pop
dec
in
clc
jae
lock
mov
xor
bound
adc
je
jl
xlat
aad
mov
fild
push
mov
in
mov
jle
adc
dec
das
cmp
sti
add
mov
cmps
pusha
loopne
inc
(bad)
sub
cmp
dec
ret
add
dec
test
jne
push
pop
sbb
mov
xchg
adc
mov
mov
adc
lea
add
scas
mov
cdq
call
outs
cs
test
mov
rcr
shr
mov
loop
or
test
es
sbb
call
retf
aaa
test
and
push
add
jle
nop
or
xor
adc
mov
mov
push
adc
shr
sbb
push
or
adc
fimul
push
sbb
inc
loopne
scas
sub
or
jmp
mov
xchg
inc
leave
cmps
das
loopne
mov
push
and
fchs
fstp
fst
pop
pop
ret
push
sub
mov
(bad)
mov
inc
idiv
cmp
in
add
mov
adc
cmp
loopne
and
mov
mov
in
punpcklwd
mov
lods
sbb
hlt
bswap
xor
xchg
push
cli
test
cmps
les
bound
push
dec
ja
ja
inc
daa
push
and
push
call
push
mov
adc
inc
inc
mov
out
jbe
inc
aas
cmps
mov
int3
dec
mov
adc
pop
(bad)
fbld
ins
mov
daa
dec
lahf
es
adc
and
or
push
inc
(bad)
mov
cdq
sbb
dec
jbe
daa
xor
pop
stos
das
xchg
cwde
and
push
adc
pop
fcmovne
repnz
daa
inc
push
sub
or
inc
dec
push
das
ja
adc
mov
xor
mov
sub
jp
xor
jg
cwde
sbb
call
cmps
scas
pop
push
das
inc
or
xor
mov
and
test
sub
dec
aaa
cmovs
ret
xchg
push
mov
mov
push
daa
and
sub
or
add
out
xor
xor
xor
cmp
(bad)
fist
je
or
ss
mul
xor
xchg
and
out
push
xor
sub
(bad)
fucomip
jmp
cmps
outs
ss
mov
test
je
mov
or
mov
rol
or
addr16
inc
fisub
add
sti
or
xor
fsub
or
add
or
fdiv
adc
add
std
cwde
fld
jae
sbb
dec
cmc
and
and
or
retf
cmp
and
and
int3
inc
cvtpi2ps
and
add
sbb
jp
mov
pop
pop
lods
add
cmp
push
xchg
gs
push
sub
add
pop
add
add
pop
pop
xor
pop
pop
pop
push
mov
pop
cmp
nop
cwde
rol
sub
xor
xchg
fiadd
pop
mov
ja
lods
add
(bad)
mov
mov
addr16
addr16
cmps
fistp
push
test
cmps
mov
push
lahf
push
xchg
cmp
adc
xor
mov
and
or
loopne
pop
pop
push
adc
and
add
(bad)
pop
inc
shl
rcl
pop
bound
aaa
push
mov
cmps
dec
das
mov
ret
pop
dec
test
test
and
call
or
xor
add
pop
pop
sub
(bad)
aaa
pop
or
sbb
mov
and
or
pop
sub
or
sbb
inc
push
pop
sbb
test
dec
scas
lsl
dec
call
or
adc
pop
call
pop
adc
push
adc
or
mov
jb
call
iret
push
mov
add
push
test
packsswb
adc
pop
adc
pop
xor
push
neg
daa
dec
mov
ret
add
push
rcl
mov
adc
rcl
adc
xchg
pop
push
inc
add
bound
shl
lods
adc
jg
inc
pusha
test
dec
mov
cwde
addr16
dec
ins
adc
push
dec
mov
add
repnz
add
adc
ja
jo
(bad)
shl
das
or
dec
cmps
lods
push
test
out
and
pop
adc
mov
adc
push
push
add
push
mov
mov
ins
dec
pop
xchg
dec
dec
xor
push
dec
mov
push
inc
xchg
and
push
adc
push
dec
push
movs
xor
or
cmps
add
add
push
dec
shl
imul
das
xchg
pusha
xchg
jb
dec
mov
(bad)
push
dec
push
stos
or
pop
int
push
addr16
inc
fcomp
pop
inc
sbb
inc
push
dec
scas
inc
fisttp
mov
aaa
mov
scas
mov
pop
add
out
and
loopne
pop
outs
or
mov
add
pop
dec
cmp
push
add
sbb
mov
inc
lahf
lahf
dec
ret
movs
(bad)
std
mov
mov
mov
inc
je
inc
or
lds
add
dec
jne
and
test
jne
inc
frstor
jbe
leave
push
add
mov
rcr
test
sbb
xor
add
mov
inc
add
loope
xor
pusha
(bad)
loopne
jecxz
dec
shr
add
sub
push
rcr
mov
dec
push
ret
rcr
stos
adc
sbb
adc
and
dec
clc
sub
daa
and
pushf
ins
sub
test
add
outs
add
jmp
pusha
mov
xor
int
es
aaa
jne
jne
jo
adc
add
lods
inc
in
xchg
adc
jo
mov
in
push
and
cmp
popf
retf
and
mov
pop
lock
cwde
or
lods
inc
add
cdq
or
into
adc
daa
add
cmp
adc
call
cs
pusha
or
repz
jecxz
xchg
pusha
jno
or
xchg
rol
push
call
bound
ins
stc
cmp
push
lock
cmp
sti
sub
mov
call
or
loopne
jbe
jge
cmp
or
fsub
or
sub
pop
jnp
sbb
add
inc
mov
inc
or
sbb
jb
adc
or
fucomi
adc
pop
lock
adc
xor
dec
idiv
jg
pop
add
sti
jg
test
jle
cmp
jl
push
mov
retf
rcl
and
bnd
ds
pop
ret
sub
mov
push
shr
inc
jle
fild
(bad)
sub
dec
jmp
sahf
movs
and
dec
push
je
mov
inc
cmps
xor
mov
push
lods
xchg
sub
retf
jne
je
add
add
repnz
pop
sar
sub
rcr
outs
and
je
imul
retf
cwde
sub
mov
inc
adc
sub
or
jp
je
and
js
pop
jle
int3
cmp
cmp
xchg
and
add
inc
or
push
adc
mov
loopne
dec
test
icebp
call
and
adc
add
jbe
popa
add
fisubr
dec
mov
xchg
imul
mov
fnstsw
push
ins
adc
addr16
inc
and
inc
je
mov
fwait
mov
mov
mov
repnz
(bad)
cmp
adc
dec
test
lds
dec
sub
dec
mov
pop
inc
xor
and
in
pop
data16
pop
je
push
and
les
pop
loopne
out
mov
repnz
add
push
xchg
or
mov
mov
jg
enter
mov
jl
repnz
mov
fdivr
retf
xchg
pop
mov
mov
and
xor
std
lock
mov
stos
pop
mov
mov
paddsb
xor
jno
jne
cmp
or
ror
inc
cmp
xchg
test
mov
add
inc
inc
int3
mov
test
aaa
pop
xor
bound
xor
loope
imul
sbb
dec
jmp
xor
outs
lahf
es
ins
jo
push
retf
inc
mov
push
imul
push
daa
inc
xchg
sub
mov
jg
mov
mov
test
jne
(bad)
cmp
inc
call
sti
sti
cmp
call
arpl
add
sub
jl
adc
or
xchg
adc
adc
test
mov
mov
jno
or
mov
push
mov
push
cmp
sbb
push
push
or
mov
jb
ds
mov
pop
mov
cmp
xchg
jp
inc
call
sub
retf
pop
in
inc
adc
mov
adc
aam
lods
adc
push
dec
mov
push
add
push
in
push
scas
xlat
jg
xchg
cmp
test
leave
push
in
pop
jo
fsubr
jle
xor
lea
push
xor
jle
in
xchg
lock
jne
push
ret
add
je
nop
out
aam
jle
pop
jmp
cmp
ds
add
cmp
xchg
cmp
pusha
or
adc
sbb
sbb
stos
cmp
je
or
add
fisttp
push
push
in
cld
out
mov
fstp
fwait
fs
clc
daa
jle
push
out
fadd
fstp
test
fld
faddp
dec
fsubr
shl
mov
xor
sbb
nop
ja
outs
(bad)
aaa
and
push
and
and
and
and
add
add
add
jb
jle
add
add
add
add
add
pop
add
add
pop
add
jnp
sub
stos
push
sbb
jle
lahf
xor
mov
sbb
mov
sub
sbb
xlat
mov
icebp
xchg
jne
fimul
cmps
jp
cmp
imul
push
fdivr
push
enter
adc
adc
inc
pop
jb
mov
cmp
mov
loopne
cmps
mov
js
xor
dec
cs
test
leave
and
rcl
test
in
mov
leave
sub
cdq
in
adc
xchg
dec
movs
fmul
jb
and
in
dec
pop
or
pop
mov
aam
scas
cmp
xchg
les
jns
lock
xchg
xchg
ror
push
pop
jb
and
fs
xchg
cmp
dec
cs
sub
pop
pushf
fmul
xchg
dec
cs
inc
je
and
sbb
dec
xchg
pop
jb
js
call
xchg
mov
jl
dec
repnz
dec
aam
mov
jb
and
in
dec
pop
sbb
push
test
dec
cs
and
mov
pop
jb
shl
mov
ficom
jl
loopne
sub
pop
das
mov
enter
jb
and
jo
cdq
in
xchg
in
mov
cs
fmul
lods
mov
cwde
xchg
dec
repnz
fcomp
push
and
pop
fs
xchg
pop
fsubr
jo
and
mov
xchg
xchg
pop
jb
loopne
ret
mov
mov
ret
cmps
pop
int3
or
jb
and
in
dec
pop
xor
test
leave
and
pop
cwde
xchg
dec
pop
jb
sub
jo
das
mov
enter
leave
push
mov
aam
retf
leave
and
mov
mov
retf
addr16
mov
add
cmp
fs
xchg
pop
int3
or
pop
leave
dec
cs
and
mov
in
iret
je
xlat
push
lock
hlt
cmp
addr16
int3
cs
in
sbb
fs
or
pop
lods
mov
ror
fimul
fcomp
aam
pop
and
mov
aad
pop
jb
push
nop
int3
sbb
mov
mov
pop
xor
dec
inc
xlat
mov
mov
fmul
leave
dec
fsub
pusha
fs
xchg
pop
cwde
or
jo
and
mov
fimul
jns
fsub
mov
xor
movs
jns
in
and
sub
repnz
dec
es
and
in
inc
and
pop
mov
dec
cs
in
jecxz
nop
xchg
dec
repnz
aam
in
lods
es
and
dec
repnz
dec
int3
and
pop
jnp
and
out
xchg
xchg
pop
pop
pop
in
call
xchg
hlt
cmp
dec
pop
jb
jl
add
lods
mov
add
inc
ss
scas
pop
mov
ins
add
in
jg
xchg
xchg
pop
jb
rcr
out
dec
cs
xchg
pop
xor
or
fs
fsubr
cdq
in
and
ins
les
dec
sub
dec
pop
hlt
mov
repnz
jb
and
cmp
adc
xchg
dec
pop
sub
js
leave
and
je
xchg
dec
es
not
and
or
pop
dec
es
mov
clc
pusha
xchg
mov
inc
stc
test
js
and
mov
test
cmp
jns
and
cld
in
dec
es
dec
scas
lods
mov
enter
leave
adc
pop
cwde
fsubr
inc
pop
lods
jae
xchg
dec
lock
in
xchg
or
int3
adc
xchg
dec
cs
push
pushf
lock
add
in
add
dec
repnz
fsubr
add
enter
and
mov
mov
jb
and
sbb
push
and
xchg
pop
lods
loopne
pop
xchg
dec
cs
dec
js
and
add
xor
movs
call
xchg
or
fcomp
dec
sbb
inc
ins
pop
lock
cwde
cmp
lods
stos
gs
cmp
pop
or
mov
xor
push
push
fidivr
mov
cmp
dec
or
jmp
clc
or
je
mov
inc
cmp
jo
add
mov
sbb
int3
outs
inc
mov
and
mov
dec
test
jl
lea
mov
clc
pusha
call
js
call
push
cdq
push
cmp
mov
mov
cld
mov
cld
test
add
and
xor
jnp
shr
sbb
or
ds
pop
sahf
ins
sbb
jmp
dec
jne
dec
inc
inc
and
test
lahf
mov
push
push
lock
dec
inc
fcomp
fdiv
mov
(bad)
outs
inc
xor
popf
jb
aam
mov
or
outs
add
sbb
mov
push
cmp
je
pusha
sub
clc
mov
loope
push
add
int3
adc
adc
jnp
out
imul
mov
ret
cwde
ins
xor
retf
xor
pop
adc
sbb
mov
cmp
loopne
add
sbb
div
add
sub
rol
mov
inc
imul
push
stos
add
int
cwde
daa
jbe
jg
sbb
arpl
jp
sbb
jae
mov
xor
adc
pop
imul
push
js
das
mov
shr
pop
adc
arpl
xor
push
pop
scas
adc
push
xlat
adc
cmp
addr16
outs
push
imul
push
pusha
mov
push
ja
popa
adc
xor
xchg
loopne
cwde
cdq
out
mov
int3
pusha
mov
pop
adc
add
mov
mov
inc
mov
pop
jg
add
or
(bad)
int3
mov
mov
xor
pop
add
das
and
push
ret
and
inc
pop
pop
setp
sub
idiv
sub
outs
add
sbb
xchg
addr16
in
int
jno
addr16
retf
int3
jmp
ficom
adc
push
sub
or
add
nop
imul
mov
out
push
mov
or
jnp
add
xor
and
and
and
cs
and
ret
jg
sbb
dec
fwait
pop
ja
sub
add
pop
popa
fld
push
pop
ds
ret
addr16
cmp
xor
push
out
jo
aas
inc
das
inc
sub
adc
jb
add
mov
sub
push
push
xchg
inc
or
or
mov
xlat
jmp
je
inc
inc
xlat
pop
and
pop
xchg
(bad)
adc
xchg
adc
add
pusha
push
push
push
cli
out
popf
add
int
scas
cs
sbb
xor
ja
add
nop
push
daa
ja
jo
and
push
pop
push
sbb
xchg
add
mov
inc
push
adc
sub
dec
repnz
pop
and
imul
mov
(bad)
das
imul
push
imul
mov
daa
push
push
inc
pusha
pop
push
and
js
daa
retf
xor
mov
sub
mov
es
aaa
das
push
mov
cmp
daa
jbe
add
bound
pop
mov
mov
sbb
adc
push
jae
int3
xor
push
shr
retf
adc
cs
dec
data16
cs
es
data16
inc
push
dec
outs
adc
or
jbe
adc
(bad)
shl
jns
pop
or
mov
stos
or
rol
mul
sub
call
add
and
push
pop
(bad)
pop
repz
or
sbb
add
add
out
test
adc
xor
pusha
and
(bad)
das
pop
xchg
stos
out
xor
jno
dec
arpl
sti
imul
pop
fs
outs
pop
dec
xor
aas
push
jbe
fwait
dec
dec
in
sub
out
push
mov
sbb
mov
mov
and
inc
pusha
pop
push
das
pop
sub
and
inc
ret
fisttp
shl
pop
test
pop
test
mov
cwde
daa
sub
pop
aas
aas
jp
sbb
and
cmp
dec
or
xlat
adc
add
(bad)
repz
xor
jae
and
mov
dec
pop
ss
add
cwde
or
inc
push
pop
daa
push
add
pop
push
xchg
ret
jo
dec
outs
or
cwde
out
das
iret
xor
sub
pop
xor
push
cdq
xchg
or
(bad)
outs
inc
adc
xor
hlt
xchg
pop
push
cmp
retf
inc
data16
daa
push
or
xlat
mov
xchg
test
pusha
cdq
and
daa
cmps
or
inc
push
pop
mov
(bad)
(bad)
js
fiadd
jle
and
daa
add
adc
mov
arpl
pop
outs
rcr
or
adc
add
cmp
cmps
xchg
and
sbb
mov
mov
(bad)
xchg
push
aas
outs
add
add
outs
push
mov
or
mov
and
scas
inc
jo
mov
jg
sub
or
sbb
fisub
(bad)
cwde
popa
data16
pop
cmp
cmp
cmp
(bad)
dec
xchg
and
movs
add
daa
repz
xor
outs
cs
imul
out
and
mov
iret
rcr
pop
jbe
push
mov
push
or
gs
(bad)
fimul
and
pop
and
shr
pusha
repz
add
fild
lods
push
and
add
xchg
mov
pop
pop
aaa
cmp
push
dec
push
in
shr
sbb
enter
outs
imul
cmp
inc
addr16
xor
cmp
pop
(bad)
push
or
push
sbb
int3
jb
push
ss
push
pop
daa
xlat
mov
or
int3
xchg
add
or
push
aas
imul
adc
pop
sub
push
outs
(bad)
arpl
add
inc
sub
test
shl
(bad)
out
ss
inc
sub
add
test
das
pop
add
loope
or
arpl
add
sub
pop
or
mov
rol
rcl
lea
add
push
sbb
addr16
and
xor
sub
popa
lods
gs
pop
mov
mov
inc
popa
push
loop
das
arpl
adc
jnp
cmps
sbb
xchg
daa
test
xor
pop
aaa
xor
sbb
into
lods
or
inc
add
scas
jbe
add
xchg
pop
pop
xchg
xor
or
add
ins
inc
adc
mov
push
and
xchg
mov
imul
lahf
fisttp
ret
lahf
adc
add
lahf
mov
jmp
aam
adc
lahf
xor
in
mov
lahf
push
or
xchg
adc
daa
inc
and
adc
jmp
inc
jp
daa
pop
test
add
inc
add
inc
add
mov
xchg
xor
pop
add
jl
sub
add
mov
fsub
mov
ja
ja
cmp
push
scas
pop
and
outs
stos
inc
aaa
nop
or
mov
and
add
iret
daa
sbb
push
add
sahf
mov
movs
and
mov
sub
add
inc
inc
out
adc
xchg
popa
cmps
aaa
jnp
add
div
jg
mov
es
pop
mov
pop
add
mov
scas
test
xchg
mov
imul
ins
adc
xor
xchg
popa
jo
inc
push
push
ja
jae
or
inc
pop
push
ja
jae
mov
fild
out
clc
xchg
bound
xor
iret
xor
dec
pop
popa
inc
add
inc
mov
ins
adc
lahf
push
out
add
test
inc
inc
lar
adc
inc
lahf
push
test
iret
lods
fst
mov
js
movs
sbb
add
jg
xchg
xor
imul
daa
add
xor
arpl
sbb
daa
movs
jb
test
jae
sub
pop
jmp
test
shl
fld
and
jg
xchg
sub
sbb
stos
xchg
shl
mov
push
aas
jg
js
rol
mov
or
mov
mov
(bad)
mov
and
add
stos
inc
mov
ins
xor
mov
push
sub
ja
push
dec
adc
lahf
bound
dec
sbb
int
push
or
ss
jg
cmp
inc
sbb
xchg
aad
rol
inc
mov
test
inc
inc
mov
fdivp
out
das
mov
jecxz
fisttp
daa
das
jmp
cmp
fwait
(bad)
repnz
pusha
into
ret
cmp
sti
push
inc
test
shl
push
or
int3
mov
sub
or
xor
ja
add
xlat
cmps
pop
neg
jmp
bound
add
pop
or
inc
addr16
cmp
pop
cmp
sub
push
scas
cmp
add
adc
icebp
add
and
and
cmc
add
xchg
pusha
mov
and
xchg
add
push
(bad)
jns
xchg
inc
in
inc
xor
outs
iret
sbb
outs
sbb
iret
add
mov
jmp
dec
jg
add
mov
jg
push
into
add
repz
retf
push
pop
push
jle
adc
cmp
or
xchg
pop
aaa
ret
popa
pop
add
xor
cmp
jbe
inc
push
and
sub
stos
dec
add
xor
int
or
test
mov
pop
lahf
pop
mov
dec
sahf
sbb
mov
push
sub
ja
mov
mov
movs
gs
and
push
scas
or
daa
jno
fld
add
jmp
adc
mov
cmp
mov
jae
pop
xor
add
jb
out
mov
repnz
aas
pop
and
jmp
mov
call
clc
inc
pop
xchg
pop
mov
inc
or
and
(bad)
stos
inc
xchg
ret
es
cmps
jg
inc
int
add
cmp
mov
daa
jecxz
cmp
add
inc
and
sbb
jnp
jnp
xor
ds
and
inc
pop
imul
push
sub
cmp
shl
js
sub
mov
inc
adc
das
mov
pusha
add
xchg
(bad)
ficomp
(bad)
and
add
or
cmps
out
lods
adc
inc
das
cmps
and
aas
sub
add
xchg
sub
adc
dec
movs
pop
add
xchg
mov
loopne
out
mov
push
mov
loop
sbb
inc
call
ror
movs
pop
mov
(bad)
(bad)
nop
in
xor
rol
sub
scas
jnp
and
scas
or
movs
call
pop
mov
sbb
adc
out
int
sub
call
xor
ja
adc
popf
test
pusha
dec
sub
aam
inc
adc
dec
out
mov
mov
fist
test
push
push
das
adc
pop
das
mov
dec
sbb
ja
inc
inc
fs
sbb
fcmovu
pop
ret
inc
inc
xlat
cs
arpl
out
inc
aad
rcr
pop
jne
or
push
popa
stos
xchg
jmp
and
ja
add
pop
iret
cmps
shl
jge
or
daa
inc
and
(bad)
pop
xchg
aaa
call
and
test
sub
push
inc
popa
mov
adc
adc
and
mov
fst
cmp
adc
and
cdq
push
pop
pop
das
xor
ja
push
movs
sbb
repz
sub
test
jle
(bad)
add
fistp
sub
ret
iret
(bad)
adc
add
cmps
mov
pop
xchg
dec
mov
xlat
outs
sbb
xchg
jnp
(bad)
ja
adc
xchg
xor
iret
xor
mov
adc
pop
jnp
fild
(bad)
es
xor
xchg
das
adc
rol
(bad)
cmps
mov
adc
int3
adc
repz
stos
and
je
or
jmp
sbb
push
mov
push
das
iret
in
add
iret
add
adc
fcomp
ss
mov
lea
fdiv
ja
inc
mov
or
(bad)
fcomip
xor
sub
cmp
test
inc
movhps
or
add
xor
iret
call
xor
out
jae
sub
jo
dec
mov
push
inc
fisub
adc
ret
jg
aaa
mov
push
mov
mov
scas
lds
ja
ja
xchg
and
ins
cmps
pop
repz
mov
adc
sti
jno
push
mov
sbb
mov
(bad)
dec
out
sub
inc
or
dec
sbb
es
sbb
and
mov
nop
mov
pop
cmp
push
dec
xlat
ret
mov
xchg
pop
adc
shl
data16
rol
retf
pop
call
inc
xchg
jo
dec
retf
imul
jmp
mov
xor
jnp
mov
push
xchg
add
or
inc
mov
cmp
fimul
adc
bound
movs
adc
add
sbb
lds
pop
mov
mov
xchg
dec
jbe
cvtpi2ps
pop
loopne
adc
aas
or
mov
(bad)
push
scas
and
rcl
xchg
loope
outs
and
daa
xor
inc
cmp
or
cmp
mov
jns
test
lahf
ss
pusha
pop
mov
in
dec
js
pop
outs
loop
inc
in
(bad)
es
add
aad
dec
pop
and
stos
(bad)
cmps
out
sbb
xchg
and
mov
xor
nop
fadd
mov
nop
add
cmp
pop
mov
cmps
dec
jg
add
inc
or
and
jno
or
mov
push
sbb
xor
aas
xchg
or
es
pop
pop
xchg
sbb
mov
les
out
push
fdiv
sub
cdq
xor
movs
adc
scas
add
dec
ss
test
test
imul
push
xchg
pop
out
dec
adc
push
adc
add
pop
aas
inc
test
or
pop
or
jnp
daa
push
push
xchg
adc
dec
(bad)
(bad)
push
add
or
inc
cmp
lds
out
xchg
sbb
ss
and
sbb
mov
add
inc
mov
retf
das
aas
inc
(bad)
imul
push
out
mov
pusha
daa
rcr
(bad)
pop
jne
cs
mov
push
jo
pop
xor
mov
sti
inc
aaa
sub
outs
ins
ja
outs
mov
(bad)
into
scas
sbb
mov
(bad)
xlat
jnp
adc
and
(bad)
pop
retf
and
dec
sti
pop
inc
pop
mov
sbb
dec
mov
add
ins
push
xchg
push
push
jo
rdpmc
ja
test
pusha
adc
add
mov
mov
xchg
add
mov
pusha
mov
mov
adc
ja
mov
cmps
sub
jg
or
dec
ja
push
out
sbb
mov
xchg
adc
fsubr
aas
mov
mov
inc
pop
ja
pop
jae
or
push
(bad)
mov
loopne
in
push
push
push
jnp
push
js
sub
out
xchg
push
sub
xor
push
xchg
push
sub
xchg
push
add
inc
add
add
and
ficom
push
(bad)
sbb
fiadd
add
sar
jg
inc
push
push
add
loopne
shl
dec
sysret
inc
pop
xchg
imul
sub
data16
push
fst
jle
or
fisttp
and
daa
xchg
xlat
push
push
cmp
jle
dec
add
mov
sbb
aas
jp
cmp
sbb
adc
bound
fstp
dec
cwde
push
push
sbb
data16
mov
arpl
fsub
rol
xor
test
imul
mov
scas
jnp
adc
mov
xchg
dec
jg
mov
shl
add
cmovae
loope
punpckhdq
adc
xchg
add
push
add
mov
pop
inc
ja
inc
ins
add
ja
ja
enter
das
add
mov
bound
xchg
in
or
xchg
lahf
ds
bound
xor
inc
mov
lock
mov
push
and
mov
xor
inc
add
popaw
dec
rcr
jb
inc
push
mov
xchg
ja
bound
sbb
(bad)
ror
add
mov
sbb
add
or
aaa
jo
sub
or
loope
(bad)
sub
arpl
adc
adc
call
xlat
mov
jne
cmp
adc
mov
div
cwde
cmc
outs
das
fist
dec
mov
add
call
in
lods
xor
jnp
inc
xor
dec
ret
scas
(bad)
or
mov
add
sub
jbe
push
sub
pusha
into
inc
xor
push
jg
cwde
xchg
jle
jg
or
in
add
aaa
push
push
pop
xor
daa
and
cmpxchg
gs
pop
ret
inc
mov
pop
fcomp
and
(bad)
pusha
ror
inc
xor
imul
(bad)
xor
cmp
sub
daa
xor
or
pop
push
xchg
or
call
test
movq
mov
movs
jg
sub
jg
mov
lods
repz
ret
in
add
add
shl
inc
xchg
mov
in
sub
add
(bad)
outs
pop
mov
sti
dec
adc
jmp
mov
add
cmovbe
or
(bad)
dec
or
test
es
or
or
imul
xor
daa
dec
ror
stos
cmps
mov
sbb
xchg
mov
sub
xor
test
xchg
loope
adc
(bad)
test
pop
dec
dec
dec
pop
add
xor
inc
cmps
adc
lahf
fist
add
xor
push
sar
outs
push
stos
adc
mov
mov
mov
in
or
mov
or
push
xchg
or
ja
rol
mov
mov
mov
sbb
jno
sbb
or
jbe
ss
pop
ret
rol
jg
(bad)
or
cwde
jge
or
jbe
inc
aas
lahf
sub
mov
imul
xchg
sbb
or
imul
jne
mov
scas
lahf
loopne
mov
ds
xchg
pop
movs
cmp
push
adc
dec
push
outs
mov
adc
xor
adc
arpl
add
daa
(bad)
retf
push
or
push
pop
cdq
sub
loop
pop
outs
dec
xor
addr16
sub
jae
addr16
push
inc
or
mov
out
xchg
mov
mov
arpl
retf
inc
pop
add
es
pusha
test
out
movs
or
addr16
mov
inc
mov
add
xchg
and
cs
push
and
cdq
push
push
fisub
pop
or
sbb
cmps
dec
adc
xchg
test
pop
es
inc
pop
bound
scas
pop
add
push
movs
ins
inc
cvtdq2ps
inc
iret
test
sub
mov
aas
adc
adc
(bad)
jg
inc
cmp
bound
ja
cmp
dec
or
xchg
jae
and
shl
add
add
outs
push
icebp
and
pop
fbstp
sub
fisttp
bound
mov
xchg
add
ja
adc
xor
popa
mov
es
xor
shl
int3
mov
add
pop
pop
mov
int
xchg
or
inc
push
movs
inc
fnstsw
push
lahf
mov
outs
addr16
mov
dec
push
inc
adc
ret
add
rol
push
mov
xor
(bad)
mov
cmp
cmps
aas
int
adc
push
mov
and
push
push
push
mov
pop
cld
push
mov
mov
mov
xor
push
push
xor
lea
mov
call
test
inc
cld
test
je
sub
mov
adc
test
je
mov
inc
lock
dec
add
adc
in
fidivr
jmp
cmp
jb
cmp
mov
jns
in
mov
(bad)
neg
loop
cmp
je
lea
mov
mov
or
inc
adc
and
call
inc
jne
mov
mov
sbb
xchg
adc
ins
enter
mov
fchs
or
pop
pop
pop
rcl
not
shl
mov
es
call
add
sbb
mov
sub
pop
pop
pop
mov
pop
ret
dec
fmul
or
or
call
fld
push
and
call
retf
sbb
push
lods
adc
es
push
mov
mov
or
jl
mov
scas
xor
or
fidiv
sbb
movzx
sub
lock
lods
mov
ret
sbb
loopne
imul
cwde
pop
inc
outs
mov
inc
out
aas
sti
leave
ins
xor
pop
pop
pop
(bad)
push
test
je
add
cmp
outs
push
cld
push
jmp
add
inc
add
xor
ret
and
add
pop
jge
mov
scas
mov
xchg
shl
mov
sub
mov
addr16
lea
sbb
cmp
outs
ins
mov
enter
add
mov
adc
xor
mov
inc
sub
mov
pop
xor
jl
or
mov
and
mov
sti
push
jle
sar
mov
mov
pop
cld
cmp
mov
in
push
push
mov
cmp
mov
hlt
and
or
jne
xor
int3
and
nop
xchg
call
sbb
jmp
es
mov
repz
sub
loopne
(bad)
outs
sub
sub
sub
xchg
xadd
or
or
dec
fidivr
xor
and
out
or
fdivr
push
xor
or
inc
push
and
loope
call
push
pop
jo
dec
dec
fsubr
add
cmovbe
dec
jne
xchg
inc
cmp
call
mov
hlt
jmp
inc
scas
dec
lock
fisttp
jp
cwde
jmp
inc
dec
test
jl
xor
sti
int
lea
fild
mov
out
mov
scas
jmp
clc
push
xor
pushf
xor
test
inc
inc
out
lock
push
mov
dec
mov
es
mov
lea
mov
loop
inc
dec
lock
push
(bad)
jo
and
sar
dec
jne
test
js
push
mov
int
add
cmp
jmp
(bad)
std
sahf
adc
pusha
imul
cmp
dec
(bad)
jl
inc
popa
(bad)
in
loopne
jmp
in
cmp
push
inc
jne
loop
bound
dec
icebp
cmp
in
cmp
sbb
mov
inc
dec
jne
pusha
icebp
jo
(bad)
movs
hlt
jle
push
sbb
inc
jne
pop
ja
xor
cmp
and
dec
cdq
out
and
xchg
inc
jne
dec
xor
inc
aam
push
outs
adc
adc
mov
pusha
dec
aam
jge
add
xchg
inc
inc
push
xor
add
add
xchg
jb
aas
push
mov
div
adc
lock
mov
push
fadd
mov
rol
(bad)
cmps
xlat
sub
jo
push
(bad)
sbb
and
push
lock
stos
add
or
mov
idiv
push
repz
sbb
pushf
sti
mov
xlat
dec
cwde
pop
adc
push
pop
dec
int3
adc
mov
mov
push
add
push
mov
(bad)
mov
cdq
in
jne
cmp
jne
test
mov
sbb
jne
dec
in
inc
enter
pop
(bad)
jl
(bad)
cs
mov
retf
imul
test
add
imul
ror
or
movs
lock
pop
cmps
mov
xchg
or
mov
(bad)
loope
or
and
fist
in
dec
adc
dec
loopne
fnstenv
in
dec
or
dec
outs
jo
sub
adc
jmp
xchg
imul
(bad)
jmp
fcom
aaa
inc
imul
inc
lods
jo
push
pop
xor
sub
push
push
test
imul
or
mov
add
cmp
xchg
and
daa
jge
adc
inc
xor
dec
xchg
das
gs
pusha
dec
mov
pop
das
inc
ins
mov
fiadd
dec
sub
call
mov
aaa
or
pop
push
ss
cmp
dec
int3
add
and
push
es
add
jnp
xlat
bound
push
inc
pop
(bad)
xor
adc
mov
pop
push
pop
jne
sti
jge
lea
xchg
js
pop
adc
inc
or
test
loope
mov
and
pusha
rcl
pop
loope
or
or
sub
aas
lds
ja
push
xor
ins
add
popf
sti
xor
das
or
and
(bad)
jno
loope
xor
dec
sub
push
(bad)
cmp
xlat
push
dec
in
int
add
inc
push
pop
clc
aas
jne
push
jmp
stos
pop
stos
inc
and
in
dec
cmc
mov
mov
push
push
mov
mov
xor
pushf
inc
add
sar
cmps
or
adc
jle
xchg
cmp
(bad)
in
pop
ins
outs
jno
jne
pop
add
inc
jmp
xor
jne
adc
cmp
ins
cdq
jle
fiadd
dec
sub
sbb
inc
jb
shl
push
and
xor
inc
sbb
or
cmp
pop
sub
mov
(bad)
out
pusha
inc
jmp
mov
mov
fiadd
jb
je
sub
fist
mov
adc
or
daa
nop
ds
inc
ror
or
sub
jl
mov
add
add
adc
jb
mov
mov
ins
or
mov
dec
je
stos
ret
add
add
mov
stos
push
movs
add
dec
or
or
retf
adc
adc
nop
or
push
mov
and
in
sub
or
adc
mov
xchg
cmp
js
push
sbb
sti
mov
sbb
ss
cmp
push
imul
cmp
pusha
inc
mov
call
paddusb
inc
retf
leave
leave
aam
int3
rcl
add
and
and
int3
mov
mov
push
add
test
pop
ror
sub
push
fmul
dec
ret
test
and
jo
(bad)
and
jmp
in
loopne
sbb
sbb
mov
in
arpl
int3
loop
repnz
bound
pop
mov
adc
or
outs
pushf
xor
jecxz
pusha
cwde
pop
das
jne
push
sbb
sub
and
sub
mov
inc
mov
xor
test
or
mov
aad
cmp
push
add
add
inc
in
push
pop
pop
dec
std
sub
mov
mov
inc
movs
push
mov
mov
xchg
cmp
dec
mov
jl
imul
call
bound
pop
or
mov
cmp
or
je
test
stos
cmovge
je
or
push
cmp
out
xor
bnd
mov
fmul
adc
or
fwait
cld
xchg
out
bound
in
adc
cmc
retf
add
mov
sub
lds
shl
pop
in
test
sbb
inc
les
bsf
mov
lods
sar
in
push
es
push
and
call
add
push
and
sbb
push
pop
jp
push
dec
shl
adc
imul
clc
mov
jb
add
and
add
add
cmps
mov
outs
xchg
xchg
or
inc
test
mov
sbb
xchg
test
pusha
and
add
sbb
repnz
lock
jb
mov
and
or
sub
jg
nop
pop
jecxz
sub
cdq
test
inc
and
test
fld
sbb
push
add
(bad)
adc
jo
loopne
je
mov
and
sub
dec
pop
mov
icebp
mov
outs
enter
xor
adc
adc
push
mov
xchg
jo
add
pop
ret
sti
xchg
xchg
or
hlt
lods
push
out
enter
add
rol
add
dec
push
pop
push
pusha
or
add
or
mov
out
jge
xor
fstp
mov
inc
jle
test
test
daa
push
jnp
jb
mov
inc
xor
add
movs
fst
inc
push
inc
movs
rcr
sbb
cmp
dec
rol
inc
out
xor
js
add
pop
aam
sahf
xor
or
xchg
or
or
add
sbb
push
jno
popaw
jp
jp
mov
mov
mov
mov
je
(bad)
cmps
add
imul
cmp
and
xlat
jmp
sbb
mov
fs
out
inc
sub
rol
dec
in
pop
add
add
mov
inc
mov
nop
mov
mov
push
int3
jle
push
mov
xor
movs
push
or
add
inc
sbb
cwde
fsubr
xor
addr16
in
xor
inc
lock
(bad)
stos
imul
or
(bad)
mov
or
pop
xchg
call
inc
outs
mov
test
test
(bad)
jno
in
sub
inc
ror
out
jecxz
in
cmp
xchg
in
test
nop
clc
sbb
cmp
js
jmp
cmp
mov
or
jo
adc
icebp
cmp
sbb
arpl
xchg
add
cwde
mov
adc
add
sbb
loopne
add
out
sbb
or
mov
loopne
test
sbb
aad
arpl
std
mov
sub
push
or
add
add
add
test
out
inc
push
popa
add
fs
data16
imul
jbe
bound
or
mov
je
jne
mov
add
js
jns
jp
jb
mov
inc
add
inc
sbb
dec
add
dec
adc
sub
push
es
adc
inc
mov
add
pop
paddd
mov
add
add
add
xor
add
add
add
dec
pop
add
pop
out
adc
xchg
and
addr16
add
xchg
cli
es
or
add
ja
or
adc
cdq
push
loop
(bad)
push
or
cmps
mov
scas
das
add
(bad)
aas
loop
adc
aaa
or
outs
lods
inc
and
(bad)
cmp
push
inc
pusha
pop
jp
sub
xor
mov
add
jbe
sub
arpl
push
mov
sub
push
push
mov
dec
cmp
repnz
or
push
mov
sbb
or
add
adc
or
push
mov
mov
add
xor
mov
mov
or
mov
inc
fadd
ss
jmp
pop
inc
pop
ret
or
sbb
push
cmp
fmul
aaa
add
sub
sub
ss
sbb
mov
nop
call
imul
pop
add
add
(bad)
jge
mov
ja
outs
clc
add
add
xor
mov
mov
outs
in
lock
cmp
push
inc
mov
pop
mov
call
dec
mov
adc
(bad)
pop
jne
mov
test
je
sub
mov
js
mov
cmp
jle
mov
imul
push
and
push
sti
fistp
mov
mov
push
iret
pop
mov
pop
jmp
loopne
adc
rol
jge
pop
mov
cmp
and
lock
add
xor
mov
not
leave
shl
icebp
test
xchg
sbb
sbb
or
mov
cmp
cld
ja
mov
push
in
mov
pushf
push
sbb
adc
jne
movzx
push
inc
jmp
jle
imul
lea
mov
adc
loopne
aam
jge
jb
or
cmp
and
fmul
(bad)
fsubr
jmp
jg
aaa
jle
into
and
and
mul
ins
sbb
mov
pop
push
pusha
aam
jnp
lock
jmp
rol
popa
retf
xor
cld
cli
cld
mov
cmp
dec
ret
dec
xchg
loope
pop
add
je
test
js
push
popa
fldcw
xor
imul
rol
aaa
sub
push
fsub
nop
push
sbb
call
test
test
push
jns
or
jb
pop
pop
pusha
pop
dec
jg
pop
(bad)
ret
mov
mov
xchg
jecxz
jae
mov
mov
or
xchg
fldenv
sbb
in
push
xchg
xchg
sub
jge
mov
mov
pop
popf
loope
loopne
pushf
movs
and
lods
ins
xor
cmp
inc
ret
pop
or
add
stc
sub
mov
mov
or
inc
or
inc
or
iret
loop
and
inc
rcr
adc
scas
push
push
add
fimul
xor
not
jp
call
sbb
fisttp
mov
dec
in
iret
in
fst
sub
or
lock
fs
(bad)
inc
mov
xor
dec
sub
jae
xor
dec
movs
dec
adc
fstp
add
mov
push
scas
rol
pop
adc
add
and
mov
popa
ins
jmp
or
aaa
lock
xchg
cmp
mov
ja
inc
xchg
jo
das
clc
aaa
and
jne
cmp
sbb
and
push
clc
jo
or
fimul
scas
or
in
scas
fidiv
jge
gs
pop
or
pop
add
inc
aaa
pop
push
push
lock
push
mov
shl
adc
std
sbb
lea
cld
fild
or
in
xor
jae
jne
hlt
sbb
adc
inc
sbb
cmp
test
jl
repnz
fiadd
in
outs
and
call
sbb
cmps
push
dec
in
adc
aas
add
cmp
sbb
xor
bound
push
outs
jge
int
mov
sub
scas
retf
and
loopne
jbe
fistp
call
jmp
add
pop
ins
dec
or
mov
cmp
or
fist
sub
push
sbb
dec
test
jl
inc
xor
push
push
jo
push
test
fsubr
sbb
aam
mov
jle
xchg
xchg
sub
mov
lds
and
fsubr
cmp
push
cmp
nop
mov
or
jecxz
ret
add
sub
pop
ja
rcl
cmps
jmp
or
inc
mov
retf
call
adc
or
ficom
clc
fsubr
sbb
mov
cmp
push
inc
cmp
cmps
les
dec
ret
pop
lea
adc
aaa
add
or
inc
aam
xor
sub
aaa
int
mov
jmp
nop
inc
fisttp
nop
outs
add
mov
pop
sar
idiv
sti
fucomip
pushf
out
mov
jmp
add
dec
jne
out
popa
sbb
in
pop
add
inc
xchg
xor
out
mov
sbb
cld
or
or
push
lea
into
cmp
jo
gs
cmp
add
ins
fisttp
mov
pusha
call
add
ds
lea
push
jnp
add
add
push
and
ret
mov
inc
jg
mov
mov
pop
and
sbb
mov
inc
add
clc
adc
push
mov
shl
adc
or
(bad)
push
in
sbb
or
sub
js
add
mov
jmp
ds
outs
or
ret
or
add
or
ret
jnp
daa
xor
scas
push
nop
inc
test
imul
leave
repnz
push
cs
js
repnz
xchg
sbb
shl
jp
cmps
add
dec
mov
push
dec
or
(bad)
xlat
cmp
inc
lock
enter
call
add
sti
repnz
pop
sbb
and
or
cmp
rcl
mov
out
fidiv
inc
add
cmp
jno
icebp
mov
daa
add
push
fprem
pop
pop
or
repnz
aas
mov
loopne
push
jmp
jne
adc
outs
jne
add
outs
std
jno
adc
pop
xchg
ret
cs
cmp
cmc
adc
lahf
mov
cmp
jne
in
push
inc
or
mov
fstp
or
and
sub
jmp
push
fisttp
loope
jge
or
inc
and
std
shl
std
pusha
jnp
inc
loope
cmps
mov
mov
and
sbb
or
mov
bound
fs
sub
and
inc
jg
fs
mov
hlt
pop
fs
pop
mov
or
and
lods
div
mov
inc
push
add
mov
nop
dec
push
(bad)
push
dec
inc
das
ret
fcomi
or
push
ins
stos
clc
jge
add
out
sahf
data16
or
xor
sti
out
mov
push
mov
pusha
imul
fnstcw
xor
mov
mov
pusha
ss
xor
mov
data16
test
push
mov
data16
adc
rcr
adc
jle
je
mov
mov
push
aam
lock
inc
jbe
mov
mov
push
test
sar
add
ss
sub
je
in
jne
fisub
push
push
shl
mov
adc
pop
pop
add
es
dec
popa
ins
gs
popa
ins
jne
push
gs
jb
je
jb
fs
xchg
inc
push
outs
outs
ins
fs
imul
in
out
or
sub
and
outs
addr16
mov
out
arpl
outs
je
push
jns
gs
shl
dec
add
les
inc
or
inc
pcmpgtd
inc
or
dec
in
repz
xchg
enter
in
fs
mov
sti
(bad)
movntps
or
popa
fs
jae
cmp
push
cld
das
or
push
je
fs
mov
mov
or
pop
mov
ins
push
or
dec
inc
lock
dec
mov
add
retf
or
fs
rcr
ja
add
push
jb
jae
mov
push
out
xor
jb
imul
cmp
inc
test
(bad)
sbb
lea
pop
cld
or
outs
jbe
je
outs
or
mov
mov
ds
inc
jb
imul
je
inc
jo
ins
adc
dec
dec
pop
inc
js
adc
fcomp
arpl
or
loop
pusha
std
pusha
push
pop
or
push
js
dec
popa
adc
cwde
nop
mov
jmp
pop
mov
cld
ss
out
fisubr
aas
std
xchg
push
jmp
addr16
add
pusha
sub
or
sub
adc
in
or
rcl
push
add
push
add
xchg
sbb
adc
lea
adc
xor
xor
pop
sub
mov
xor
rcr
push
inc
add
push
ficomp
push
out
adc
ins
dec
int3
imul
add
cmp
or
(bad)
mov
add
push
mov
ins
loopne
loopne
test
adc
xchg
fstp
outs
inc
or
dec
jl
add
xor
call
or
add
dec
sbb
xchg
or
add
xor
fiadd
scas
mov
pop
retf
pop
pushf
int
rol
nop
push
dec
int3
pop
pop
or
or
dec
or
aaa
add
mov
inc
inc
push
jo
xor
cmc
addr16
bound
sub
push
mov
clc
sysenter
dec
xor
sahf
pop
loop
ss
test
mov
inc
sbb
push
int3
(bad)
push
mov
popa
test
xor
mov
push
adc
or
bound
int3
sbb
pop
xchg
stos
push
lods
inc
sub
ret
test
ja
add
shl
and
call
xchg
xor
add
add
xchg
je
push
push
push
retf
and
inc
pop
jmp
and
outs
inc
hlt
inc
xchg
cmp
and
fadd
or
bound
adc
out
inc
jo
cmp
or
dec
mov
pop
mov
dec
and
int3
adc
or
xor
and
or
out
fwait
dec
ss
push
hlt
lea
push
sub
jne
mov
adc
push
jmp
dec
fld
sub
jo
push
shr
jbe
inc
sbb
push
cdq
xchg
add
mov
add
mov
jg
push
inc
jbe
cmp
fs
dec
shr
(bad)
loope
adc
aam
fistp
lahf
sbb
call
sbb
mov
mov
inc
rcl
jl
(bad)
in
mov
mov
push
push
pop
add
sar
cmp
mov
mov
add
cmp
cmp
setns
fs
mov
jae
mov
mov
inc
in
inc
cmp
int3
and
sbb
inc
inc
cmp
xor
lock
jmp
test
sub
retf
sub
xchg
inc
js
mov
arpl
pop
mov
retf
xor
xchg
push
sbb
ja
xor
add
das
jg
cmp
jge
hlt
mov
inc
dec
push
imul
or
je
push
aas
(bad)
clc
jmp
push
cmp
xchg
sub
xchg
ins
pavgb
shl
lea
xor
int3
or
popa
jnp
jmp
sub
mov
mov
mov
xor
jmp
scas
push
cmp
inc
pop
push
stos
cmps
adc
shr
in
mov
mov
push
mov
sbb
or
(bad)
sar
dec
stos
call
lock
je
mov
jnp
mov
push
cmp
add
fld
rcr
and
sti
(bad)
jle
retf
int3
es
sbb
fs
fstp
and
dec
jmp
(bad)
jmp
dec
push
and
fild
rol
inc
jo
xlat
call
mov
sti
inc
pop
mov
mov
or
add
mov
je
sbb
push
sbb
ins
rcr
mov
lods
inc
mov
jne
iret
lea
mov
mov
xor
ret
adc
sub
push
adc
sub
and
daa
or
push
outs
daa
out
inc
lds
sbb
daa
shr
cmps
mov
imul
scas
mov
shl
xor
call
push
aam
pop
cmps
ror
xchg
fdiv
in
push
fstp
push
fstp
sbb
push
lock
or
imul
ja
adc
push
adc
movs
loop
xchg
jnp
stos
push
imul
loopne
mov
outs
xchg
pop
shr
push
jl
ficomp
inc
pusha
ss
cmp
mov
aad
call
mov
pop
ret
add
add
lds
xor
nop
add
xlat
cmp
pushf
retf
cwde
cmp
loopne
out
inc
popa
jmp
sar
pushf
cmp
cmp
add
mov
mov
or
push
push
inc
and
adc
dec
xchg
out
cmp
mov
rdpmc
sbb
dec
mov
or
mov
loope
inc
inc
pop
loopne
push
add
stos
add
shr
xor
xchg
sbb
sar
cmp
xor
loopne
adc
add
mov
lods
cmp
dec
iret
xor
pusha
push
ja
cwde
ror
call
mov
and
adc
sub
mov
out
add
jo
mov
scas
ss
pop
lock
enter
sub
dec
les
add
mov
jne
(bad)
pop
xchg
mov
dec
mov
jmp
dec
jl
pushf
or
inc
jne
mov
pop
jp
clc
ror
(bad)
sub
iret
aas
add
inc
add
rcr
add
add
sub
inc
jns
xlat
dec
out
xchg
adc
add
(bad)
into
int3
int3
sub
adc
push
aas
mov
(bad)
push
mov
icebp
push
mov
cmps
pmovmskb
xchg
xor
and
loopne
xlat
or
dec
inc
jp
jo
fnsave
pop
dec
jno
dec
mov
jp
push
adc
inc
hlt
jle
xlat
add
test
jne
repnz
mov
push
sub
in
cld
jb
loopne
jmp
pop
mov
fimul
push
movs
sbb
(bad)
mov
mov
call
mov
xor
jge
inc
lods
popa
mov
mov
or
fsub
fcom
cwde
test
into
sbb
mov
out
mov
sbb
jecxz
cmc
lods
pusha
inc
(bad)
shl
or
mov
pop
ror
cwde
loop
fild
cmp
ror
clc
jb
xor
xor
daa
rol
dec
sub
dec
pop
push
inc
cmps
fist
rol
(bad)
adc
pop
sbb
dec
push
add
sub
mov
inc
adc
push
sub
push
adc
adc
jl
cmp
adc
shl
adc
call
push
mov
or
clc
jb
ins
sbb
mov
loop
aaa
inc
ret
adc
add
popa
pop
mov
add
add
jo
dec
bound
lds
fcomp
mov
je
data16
add
push
movs
pop
ins
cmps
ss
idiv
mov
push
mov
mov
scas
(bad)
fisubr
mov
pusha
dec
into
pusha
add
idiv
pushf
push
xor
fiadd
verw
push
inc
sahf
fcomp
inc
jle
fidivr
js
repnz
pop
push
xor
(bad)
adc
push
lods
movlps
cmp
jns
mov
push
jmp
or
inc
outs
arpl
in
push
sub
mov
loope
xchg
sbb
jle
lds
inc
dec
outs
cmp
sub
or
gs
into
(bad)
sub
bound
repnz
mov
add
adc
jne
cmps
aad
cwde
mov
mov
adc
or
mov
es
imul
add
outs
lods
movs
aam
mov
sbb
dec
push
test
xor
(bad)
out
aad
mov
mov
xor
lock
add
jl
mov
lea
fstp
push
imul
adc
clc
retf
aad
sbb
jae
call
ins
push
leave
ja
mov
add
add
push
stc
push
push
jae
jne
ins
mov
mov
add
xchg
mov
cmp
adc
xchg
rol
dec
dec
lods
arpl
jl
add
dec
add
test
ret
movs
add
dec
out
aad
imul
es
es
and
clc
push
loope
push
shr
cmp
pushf
dec
jb
jnp
adc
mov
outs
cmp
sbb
push
jg
xchg
adc
mov
add
dec
pop
add
jg
cmp
adc
sub
add
add
add
xor
loope
xor
adc
cmp
or
inc
gs
imul
xor
lods
and
sub
jg
fs
rcl
xor
add
ins
and
push
xlat
and
sub
dec
lods
rol
les
sub
not
and
adc
das
or
mov
gs
sub
shr
add
mov
inc
inc
adc
adc
test
push
mov
dec
mov
outs
sbb
(bad)
fucomip
fstp
xor
push
mov
ret
cmp
test
(bad)
popa
sbb
push
shl
adc
sbb
stos
cmp
jmp
iret
jle
sub
add
clc
sbb
push
sar
nop
or
loope
mov
addr16
inc
in
mov
mov
test
xchg
adc
and
inc
addr16
jecxz
int3
cmp
mov
fiadd
enter
rcl
mov
cmps
(bad)
mov
mov
rol
pop
or
mov
mov
cmp
add
or
inc
es
and
push
scas
push
pop
cld
movs
xchg
add
rol
inc
rol
or
pop
pusha
rcr
mov
pusha
lea
(bad)
mov
ror
fidivr
jbe
lods
inc
mov
loopne
enter
lods
mov
mov
pop
jb
dec
dec
add
push
leave
fnsave
pop
cs
push
inc
jbe
pop
dec
cmp
pusha
xchg
push
or
mov
xchg
jge
xchg
lds
(bad)
push
and
loopne
cmp
adc
or
inc
outs
pop
push
test
mov
or
mov
in
aas
clc
pushf
push
loopne
aam
mov
add
mov
mov
or
enter
mov
and
mov
or
loopne
xchg
mov
or
in
jno
lock
push
sbb
mov
jo
ins
inc
fild
jne
mov
daa
adc
bound
mov
sbb
mov
sub
outs
mov
mov
xor
aaa
jg
loopne
adc
cmp
shr
and
pop
out
adc
scas
clc
jmp
jmp
jno
inc
sbb
lahf
push
add
(bad)
add
ror
sbb
sub
and
inc
nop
stos
je
inc
aam
xor
lock
push
lods
test
fld
cmp
arpl
adc
daa
fldenv
inc
or
aas
inc
aas
pop
cmp
sub
or
and
gs
and
pop
and
push
ret
inc
and
gs
leave
dec
inc
mov
mov
mov
pop
aaa
daa
mov
mov
imul
cmp
mov
add
push
push
repz
mov
daa
mov
pop
adc
or
jg
add
xor
(bad)
out
and
jbe
or
mov
js
adc
jge
(bad)
inc
sub
push
and
inc
jbe
pop
shl
jne
test
je
(bad)
imul
dec
mov
loopne
adc
jp
dec
dec
outs
mov
je
pop
test
xchg
or
outs
pop
ret
retf
lods
ret
into
inc
inc
add
(bad)
xchg
sbb
cmp
fld
lea
mov
cmp
bound
mov
adc
mov
popa
ja
pop
ds
dec
add
into
sar
push
push
inc
add
or
je
inc
add
inc
cmp
mov
or
xchg
xor
push
sbb
(bad)
jne
and
(bad)
add
and
(bad)
clc
call
inc
inc
imul
test
xchg
pop
push
(bad)
popa
call
outs
xor
rcr
rcr
xor
pop
ss
ret
(bad)
out
pushf
fcom
cwde
retf
lea
push
sub
jns
loopne
mov
add
sub
jno
or
in
mov
cmp
ja
pop
call
(bad)
dec
outs
fdivr
jb
hlt
push
sub
add
xor
add
out
aam
fild
push
push
sub
les
out
cs
cwde
dec
addr16
out
mov
out
xor
push
fcomp
pop
int3
cs
push
sub
aam
cli
adc
push
adc
popa
lds
xor
xor
adc
fisubr
ficom
outs
mov
lods
jb
cmp
outs
or
xor
xchg
mov
inc
jb
popa
jns
ja
leave
and
out
and
push
xchg
mov
add
(bad)
jg
not
loopne
mov
and
pop
scas
dec
or
(bad)
not
jg
adc
mov
add
inc
dec
outs
scas
push
(bad)
jne
xor
mov
test
sub
mov
lock
jle
add
fstp
mov
inc
dec
fistp
pop
add
push
adc
inc
dec
jne
pop
fs
fs
jp
add
add
ret
cdq
push
les
add
fstp
scas
shl
push
pop
cld
mov
xor
inc
xor
add
test
fs
push
call
mov
pusha
add
cmp
loopne
call
mov
push
adc
xchg
bound
and
adc
aad
or
or
jb
mov
pop
dec
cmp
(bad)
cld
adc
xchg
data16
push
pusha
or
sar
cmps
popa
rol
add
inc
test
cmp
std
aaa
ss
add
sar
add
ror
mov
sbb
stos
push
cmp
call
and
pop
inc
or
push
jmp
cmp
jge
pop
sub
mov
adc
adc
adc
imul
add
and
cmp
push
dec
and
add
sbb
push
push
inc
mov
jmp
or
mov
pop
inc
lahf
pusha
xadd
sbb
int
stos
pop
add
inc
or
cdq
sub
pusha
mov
push
popa
add
js
ins
pop
aas
add
push
ss
mov
adc
inc
and
lahf
push
mov
jmp
ret
adc
bound
jmp
mov
cmp
ret
cmp
lds
dec
or
fldl2e
mov
movs
dec
jo
daa
cmp
movs
or
outs
push
and
inc
in
inc
imul
mov
cwde
pop
cmp
in
les
jb
xchg
fsubr
ja
lods
xchg
jb
mov
mov
and
mov
push
shl
or
fild
push
xor
stos
xchg
xchg
push
cmp
jge
int3
xor
sub
mov
or
adc
mov
or
push
add
sbb
or
fsubr
nop
mov
and
les
add
pop
fild
jmp
inc
sub
add
ja
ins
xor
shr
loope
mov
cmp
sbb
mov
xor
cld
(bad)
leave
shl
mov
jo
in
enter
int
mov
push
(bad)
dec
rcr
add
pop
push
push
add
imul
aas
xor
mov
cli
add
dec
dec
inc
and
pop
push
xor
dec
jne
sbb
je
(bad)
imul
adc
out
dec
jns
or
jbe
lods
pop
nop
setbe
pop
lods
inc
adc
or
jnp
push
add
dec
dec
dec
inc
dec
iret
ret
outs
sub
ins
and
pop
mov
xor
out
fwait
or
mov
sub
loope
push
dec
xchg
xlat
mov
pushf
and
add
jo
sub
cmps
and
out
add
pop
(bad)
js
xchg
sub
lods
or
lods
dec
and
dec
ret
or
add
call
add
pop
add
inc
arpl
xchg
add
lock
push
add
imul
outs
add
jle
outs
xor
jno
jb
jae
add
jbe
ja
add
ja
inc
jp
xor
xor
xor
xor
xor
add
add
adc
sub
das
pop
iret
xor
(bad)
repnz
mov
mov
jnp
mov
lock
loopne
movs
movs
xchg
xor
mov
and
jle
mov
fisub
test
test
fbstp
add
jl
fnsave
inc
(bad)
mov
push
sbb
inc
icebp
call
pop
pop
dec
add
jbe
jne
push
jae
gs
(bad)
jg
sbb
push
pop
cmp
ja
inc
jae
push
push
pop
xor
popa
ins
or
inc
outs
push
gs
loop
push
inc
popa
pop
mov
in
imul
arpl
mov
add
cmp
xchg
jecxz
das
les
sahf
add
sub
pop
mov
push
scas
xor
pop
and
adc
cld
and
push
pop
jnp
sbb
pushf
push
int3
mov
and
sub
aaa
adc
add
xor
push
icebp
sbb
jb
push
je
jo
clc
imul
cs
inc
push
popa
ror
repz
sub
adc
push
mov
ror
cld
inc
and
addr16
jg
je
dec
wbinvd
add
pop
ficomp
cmp
or
push
call
dec
es
push
inc
and
add
cmps
adc
sbb
daa
jmp
stos
cmp
pop
ret
dec
pop
xchg
loop
and
je
mov
xor
sbb
xchg
fcomp
mov
fisubr
push
push
push
push
jb
xchg
je
add
and
xor
mov
add
daa
or
hlt
or
lock
ins
imul
out
and
push
add
inc
or
inc
cmps
pop
mov
or
dec
cmc
or
fdiv
push
and
jo
ins
jle
or
mov
or
out
mov
or
ror
xchg
ins
jmp
adc
sub
inc
or
bound
shr
sub
inc
fdiv
jae
outs
jb
test
cmp
mov
rol
int
cdq
jae
test
lock
aas
pop
retf
jg
or
(bad)
call
inc
add
adc
das
stos
push
movd
push
stos
add
and
test
xor
jecxz
addr16
push
push
jnp
pop
or
mov
push
inc
mov
popa
ins
imul
aad
add
jbe
inc
sub
or
mov
pushf
xchg
add
lods
sbb
dec
stc
cs
add
jbe
ins
inc
stos
inc
loope
loope
mov
ss
in
(bad)
adc
ret
or
jge
lock
daa
mov
mov
sar
gs
and
jae
and
xchg
and
and
fwait
pop
cmp
jnp
sbb
jns
or
dec
inc
pusha
adc
inc
push
cmp
(bad)
jle
in
mov
mov
mov
shl
(bad)
jae
loopne
jne
sbb
xor
lea
mov
fidivr
adc
push
jp
and
or
mov
mov
test
je
jge
fs
adc
call
add
xor
lea
mov
push
mov
outs
mov
retf
xor
mov
fucom
(bad)
aam
xor
or
ds
jne
ret
sub
pop
pop
outs
mov
outs
loopne
(bad)
nop
or
lock
inc
mov
mov
out
scas
lock
mov
rcr
lea
xor
sti
add
dec
test
jl
inc
ins
lea
mov
adc
das
loop
call
dec
test
mov
xchg
shl
mov
or
dec
jne
and
mov
aad
enter
cmps
sbb
mov
ret
nop
pop
push
push
and
or
add
cmp
dec
sahf
add
(bad)
scas
add
nop
mov
and
inc
or
out
push
adc
add
jb
and
pushf
mov
outs
mov
xor
xchg
jle
in
mov
retf
mov
loopne
ins
or
pop
call
add
mov
rol
sbb
xor
lock
and
out
popf
cmp
lea
std
dec
adc
je
push
push
test
inc
sub
xchg
and
jmp
adc
stos
push
(bad)
ja
fisttp
push
pusha
ss
mov
movs
and
jno
in
cmp
mov
inc
in
mov
or
jno
(bad)
jl
ret
scas
cmp
pop
push
push
inc
pop
imul
or
jo
out
or
pusha
lock
test
jae
push
nop
icebp
xchg
outs
jl
mov
mov
hlt
jmp
sub
dec
not
inc
xor
aaa
lods
mov
mov
mov
pop
push
daa
lds
and
ins
xlat
(bad)
dec
xor
sar
mov
jae
push
call
rcr
cld
lea
xor
sub
xor
outs
jns
and
jnp
jne
out
in
dec
xchg
fisubr
in
cli
add
add
jo
lock
push
test
add
sbb
pop
data16
pop
xchg
test
ja
ja
pop
xchg
(bad)
xchg
pop
add
lock
mov
cmp
pop
xchg
add
call
(bad)
add
adc
adc
mov
icebp
mov
sub
loopne
push
xchg
push
in
or
xor
mov
pop
mov
pushf
lock
or
mov
ja
cmps
pop
ins
ret
lods
sahf
movs
push
test
dec
xor
or
xchg
pop
push
jo
mov
add
xor
nop
setne
leave
cmp
adc
daa
xor
push
les
(bad)
fild
inc
dec
ja
adc
mov
ret
add
inc
inc
popa
arpl
cmp
hlt
pop
data16
popa
ja
gs
xor
ss
loopne
or
fadd
xor
ds
pop
push
sar
cmp
mov
jnp
fild
inc
imul
pop
sub
xor
shl
xchg
in
dec
popa
cs
addr16
adc
mov
ss
push
addr16
xor
imul
lods
pmulhuw
int3
sub
cmp
push
je
in
add
cmp
sbb
dec
rol
dec
cwde
push
arpl
jo
popa
sbb
mov
jbe
test
xor
xor
push
jns
popa
cmp
das
mov
xchg
pop
leave
push
imul
outs
ins
iret
aam
push
mov
out
pusha
icebp
inc
js
mov
adc
hlt
jecxz
dec
mov
push
cmp
and
pusha
sahf
dec
pushf
imul
ins
or
ins
popa
and
or
and
inc
dec
push
xchg
add
loope
cmp
data16
(bad)
add
push
dec
add
dec
out
stc
call
loop
push
test
mov
int3
jne
push
ficom
mov
test
je
mov
fst
xor
inc
data16
pushf
and
add
fmul
cmp
inc
ins
test
ss
call
or
add
add
inc
lods
push
push
imul
mov
pop
popf
or
push
mov
rcr
nop
dec
push
push
push
xor
dec
pushf
push
dec
je
push
pusha
jecxz
lds
ins
push
sub
or
jae
inc
ss
and
ja
out
pop
dec
fcom
stos
scas
adc
add
pop
sub
mov
jae
pop
inc
push
lock
stos
push
test
cmp
dec
mov
call
or
aad
inc
dec
scas
or
jo
jns
call
out
push
mov
mov
(bad)
pop
push
ja
mov
or
sbb
les
add
inc
lock
(bad)
(bad)
js
push
add
jle
jmp
jecxz
pop
dec
or
push
shr
scas
shl
and
xchg
bound
inc
mov
xor
ud0
cmp
das
xor
pop
cmp
(bad)
pop
xchg
outs
inc
shl
xchg
je
shr
fst
inc
inc
inc
inc
xchg
or
jo
fs
movs
(bad)
xchg
nop
or
repnz
adc
sub
fs
push
jg
fs
fs
mov
push
fs
mov
mov
pop
or
retf
add
aam
push
lds
mov
test
mov
adc
push
cmps
nop
out
sub
andnps
push
nop
or
inc
push
pop
shr
or
or
neg
push
lock
push
cmp
sub
in
push
(bad)
das
hlt
push
sbb
enter
mov
cs
add
test
sar
xchg
add
add
ror
push
inc
mov
add
fldenv
mov
sub
sub
pop
inc
push
mov
inc
retf
leave
jo
leave
xchg
test
shl
std
jnp
inc
jns
gs
jne
test
cmp
ret
inc
bound
xchg
ret
js
mov
cmps
mov
out
jns
leave
jo
inc
jo
leave
in
test
es
mov
push
dec
and
or
pop
pop
dec
daa
add
stc
bound
in
ins
dec
fdiv
retf
push
adc
js
or
test
push
loopne
stc
cmps
inc
push
and
cmp
dec
push
popa
inc
stos
aam
dec
jmp
adc
or
push
jnp
and
push
or
xor
aaa
add
cld
inc
popa
sub
inc
pop
rol
and
sub
xchg
retf
cmc
xlat
sbb
jmp
jnp
ret
xor
lahf
lds
dec
sub
jnp
add
in
mov
ds
mov
push
add
push
sub
das
add
pop
fidiv
aad
into
xchg
rcr
xchg
pop
push
(bad)
enter
mov
add
je
or
call
mov
in
sub
ss
inc
or
imul
inc
sub
rcl
or
loop
inc
cmp
pop
bound
adc
pop
mov
adc
add
xchg
sbb
ja
sbb
xor
les
(bad)
mov
or
stos
and
push
push
int
add
or
push
mov
cmp
jne
scas
and
pusha
or
jp
or
xchg
fnstcw
inc
add
xchg
pushf
sbb
les
add
push
(bad)
push
lock
xchg
pushw
sar
popf
in
adc
lods
pusha
sbb
ds
mov
cmp
inc
inc
clc
gs
xor
out
les
inc
bound
add
push
xor
push
inc
jmp
sbb
lahf
cmp
and
and
mov
ss
mov
test
rcl
add
push
inc
fs
push
lock
fs
mov
fiadd
aaa
or
ins
or
test
ror
ret
adc
push
call
add
mov
ins
inc
xor
and
ins
push
pop
cmp
push
inc
push
popa
ins
jne
jnp
adc
pop
push
pop
frstor
adc
fwait
cmp
mov
inc
fadd
arpl
arpl
jmp
out
adc
or
jo
cmc
cmp
sub
xlat
mov
or
push
jmp
or
push
mov
mov
mov
inc
test
mov
push
movs
rcr
xchg
rcr
nop
xchg
jb
jb
cwde
pushf
mov
jb
lods
mov
cmp
ja
fild
les
fild
arpl
jo
test
push
iret
add
push
popa
push
inc
xor
adc
js
xor
add
mov
or
and
inc
test
xor
and
ror
ret
pop
inc
shl
push
dec
test
add
dec
or
test
sub
sar
mov
inc
and
jmp
fucomi
test
cmp
xor
dec
shl
fiadd
and
and
pop
jmp
cs
ret
movs
and
xchg
xchg
mov
mov
cmc
movs
push
sbb
lahf
ins
or
lock
inc
pop
leave
imul
push
in
push
setno
pop
add
inc
rol
fcomp
adc
push
in
out
pop
dec
and
add
push
les
xor
ja
add
pop
push
pop
fcom
inc
and
adc
sbb
mov
pop
lods
sbb
mov
inc
cmp
sbb
push
mov
sbb
ror
add
adc
inc
mov
in
out
pop
inc
fwait
(bad)
and
sbb
mov
mov
ror
cld
inc
inc
pop
rol
adc
jns
xor
push
and
xor
in
mov
fdivr
out
cmps
or
or
pop
adc
push
sub
sub
js
and
into
xor
repnz
and
dec
jbe
xor
xor
xor
jb
dec
outs
cwde
in
les
xor
rcr
pop
jg
mov
test
add
lahf
push
mov
mov
pop
push
cmp
sbb
lock
push
ror
mov
pop
add
lock
pop
xor
push
ins
lea
add
popa
outs
mov
shrd
in
retf
inc
or
inc
dec
outs
mov
adc
or
pusha
or
aaa
xchg
cmp
add
mov
fcomp
xor
push
mov
jmp
outs
add
xor
add
adc
mov
jo
(bad)
jno
sub
add
jno
pop
inc
add
pop
add
pop
inc
push
sub
cmp
adc
scas
adc
or
stos
pop
push
jmp
adc
test
jno
inc
xor
mov
inc
pop
jecxz
dec
adc
jl
and
add
push
in
sbb
jb
xchg
xchg
pop
loope
push
mov
sbb
add
pop
sbb
xchg
cmp
mov
sbb
pusha
mov
arpl
mov
mov
add
add
inc
cmc
pop
daa
(bad)
sti
les
cmp
mov
clc
xchg
popa
jno
clc
mov
inc
jno
imul
pop
outs
cmp
pop
inc
jae
xor
cmp
dec
cwde
adc
mov
jae
mov
movs
and
cmps
mov
es
jl
scas
sbb
jp
ins
add
das
add
add
pop
pop
rol
jl
aam
xor
mov
je
bound
jo
adc
add
push
jb
push
push
sub
sar
call
les
mov
mov
mov
xor
mov
adc
add
pop
mov
std
dec
xor
ds
mov
and
mov
sbb
push
jp
(bad)
(bad)
add
shl
mov
xchg
push
and
fidiv
sub
adc
push
adc
nop
push
sti
mov
je
clc
lock
mov
mov
or
inc
mov
xor
mov
xor
and
sti
(bad)
lods
mov
or
mov
and
mov
adc
fstp
jbe
dec
je
jle
adc
fimul
xchg
sti
mov
pop
fild
ror
lds
mov
lahf
inc
push
or
jae
pusha
adc
push
adc
daa
int
sbb
and
jae
dec
push
push
mov
mov
call
sub
xor
imul
imul
xor
pop
or
sbb
push
sub
or
and
(bad)
popf
adc
or
mov
mov
in
adc
loopne
pushf
setg
cdq
push
sbb
add
inc
inc
call
cmp
inc
inc
inc
xor
inc
push
aaa
add
cmp
add
dec
add
xchg
or
jmp
not
out
loop
mov
dec
jne
adc
inc
lock
fist
pop
icebp
push
push
push
fsub
lea
mov
mov
xchg
lock
or
adc
shl
mov
and
rcr
inc
cmp
push
out
and
xchg
data16
inc
and
xchg
mov
test
aam
shl
and
inc
lock
mov
dec
int3
inc
in
iret
or
adc
je
inc
fcomp
jb
inc
enter
push
and
out
dec
mov
mov
jmp
sti
js
add
or
setae
jmp
setge
mov
mov
loop
push
jl
mov
outs
cdq
pop
inc
and
pushf
mov
pop
cmp
sti
push
fild
test
les
sbb
clc
jge
mov
mov
jp
jg
enter
inc
clc
lods
sub
mov
mov
int3
mov
ins
dec
dec
push
cmp
sub
xchg
int3
test
mov
sub
enter
mov
jnp
sti
out
(bad)
push
je
sub
sbb
pop
fwait
jmp
sbb
fs
mov
fwait
ss
sbb
scas
(bad)
push
inc
mov
je
pop
pop
inc
jnp
and
push
in
loop
xor
or
add
mov
jmp
jl
aad
ins
call
faddp
cmps
pusha
inc
outs
cli
sub
push
adc
ror
jmp
xlat
int
rcl
out
outs
ret
fistp
sub
jmp
jmp
fld
pop
mov
inc
cli
or
movs
jo
lock
push
and
retf
jnp
mov
and
inc
js
inc
jl
outs
test
and
(bad)
pop
xor
push
mov
cmp
or
ret
test
pop
push
sub
ror
shl
arpl
sub
adc
dec
pop
dec
fmul
data16
add
xchg
sbb
inc
(bad)
mov
jbe
or
pop
push
out
ficomp
adc
jo
pop
mov
adc
and
adc
pop
aaa
sbb
dec
(bad)
dec
jne
adc
cmp
sbb
dec
pop
push
and
pop
push
mov
scas
adc
push
(bad)
push
mov
push
push
pop
stos
sbb
dec
test
inc
pop
imul
pusha
mov
push
loope
push
cs
mov
or
push
pushw
mov
out
pop
push
xchg
js
xor
(bad)
aas
xor
pop
add
test
mov
mov
inc
cs
xlat
rcr
push
xor
fiadd
push
push
(bad)
cs
or
cdq
rcr
adc
bound
repnz
add
pop
jne
(bad)
xor
push
add
adc
scas
push
test
dec
push
adc
in
fistp
add
jle
mov
mov
mov
jmp
push
push
aas
push
mov
sbb
jl
pop
sbb
mov
enter
les
xor
es
call
push
mov
cmp
sub
cmp
add
sub
and
sar
push
push
add
push
ret
mov
inc
pop
xchg
call
mov
mov
fldz
fcomp
fstsw
sahf
or
nop
pop
add
mov
and
jb
mov
nop
clc
mov
add
enter
xchg
lods
imul
jae
mov
shl
pop
sti
test
js
add
xor
imul
mov
out
add
std
cmp
lea
dec
push
adc
jae
(bad)
adc
in
lock
(bad)
cmp
and
aas
sbb
cwde
pop
ret
sbb
std
add
fcomp
bound
ret
mov
add
sti
daa
stos
inc
add
cmps
jmp
call
sbb
das
shr
adc
scas
pop
add
add
pop
mov
or
aaa
int
dec
cmp
or
or
cmp
rcl
or
pop
ret
mov
scas
std
and
inc
repnz
mov
test
mov
mov
mov
aas
bound
or
loopne
and
test
jne
cmp
jge
jmp
das
jg
aam
in
adc
cld
sbb
mov
jp
mov
mov
mov
test
mov
jge
mov
sub
pcmpgtb
frstor
cmc
mov
or
sbb
pushf
cmp
or
mov
jno
pop
(bad)
out
push
and
pop
mov
das
cmps
fadd
mov
sbb
sub
lds
mov
pushf
scas
and
mov
ret
aas
jmp
sahf
scas
inc
ficomp
fild
mov
daa
cwde
popf
push
enter
cmps
scas
ror
pop
jb
aas
cmps
icebp
fsubrp
jge
add
dec
inc
cmp
xor
inc
cmp
xor
(bad)
jns
inc
ret
push
daa
jb
ds
daa
mov
call
ret
call
mov
pusha
jo
pop
test
je
xor
pop
popf
mov
mov
jmp
sub
movs
test
push
jge
jb
movs
jle
add
jmp
push
cmps
pcmpeqd
sqrtps
or
aam
sbb
mov
jge
dec
xchg
push
jnp
mov
mov
adc
push
movs
aad
dec
mov
sbb
hlt
movs
lds
push
cmps
xchg
(bad)
out
cli
ret
pop
dec
dec
cld
mov
movs
mov
pop
shl
lahf
jae
lock
push
inc
adc
jmp
cmp
inc
jle
mov
jecxz
pushf
jle
mov
enter
cmp
inc
or
or
adc
push
test
test
mov
dec
out
xchg
cli
sub
dec
popa
ja
mov
lock
aam
ss
not
sub
sbb
xor
ror
adc
inc
ja
dec
ret
or
inc
push
add
sub
add
fsubr
push
mov
ret
mov
sub
out
cmp
je
mov
or
or
push
mov
js
call
jne
arpl
lahf
and
mov
dec
and
xor
or
sbb
or
sbb
and
add
adc
out
inc
cmp
(bad)
in
loop
add
js
pop
adc
jmp
jge
adc
push
jb
xlat
outs
inc
jl
pop
cmp
dec
or
into
and
cld
xchg
jecxz
bound
mov
mov
cmp
push
imul
mov
cmp
or
(bad)
call
mov
pop
push
sub
les
movs
jae
(bad)
enter
mov
add
or
mov
pop
xor
pop
pop
pop
shr
jp
mov
xor
and
cs
ins
push
cs
cmp
push
add
stos
and
mov
pop
add
jnp
in
mov
mov
out
push
cmp
ror
or
cmp
and
movs
and
sub
loope
inc
add
inc
push
pop
xlat
add
jnp
dec
xchg
ret
push
adc
sar
test
scas
sub
js
or
mov
hlt
hlt
add
push
rol
adc
das
push
fadd
loopne
push
mov
test
push
js
or
add
inc
inc
xchg
retf
dec
test
jl
inc
xor
xlat
jno
in
push
cmps
or
dec
sbb
or
mov
les
adc
scas
sti
inc
dec
jne
cmp
sbb
aam
rcr
mov
push
inc
fld
push
pop
xchg
xchg
mov
cs
loopne
cmps
call
lods
sbb
js
hlt
fs
mov
mov
movs
sti
shl
aas
cmp
or
js
(bad)
cmp
xor
xor
lods
push
adc
inc
nop
jle
cmp
xor
push
push
lods
mov
outs
and
or
fbld
gs
push
je
inc
or
sar
ficom
test
jl
inc
xor
lea
sbb
push
movs
inc
call
fwait
loope
inc
shr
popf
xchg
mov
es
xor
cli
ss
aas
pop
sub
lock
dec
jne
jmp
and
push
inc
jmp
cmp
and
jno
jo
imul
sub
dec
push
sub
test
sbb
push
xor
jnp
inc
push
adc
or
je
cld
sbb
dec
dec
dec
mov
and
push
ret
and
mov
js
mov
test
xor
xchg
inc
add
xchg
mov
daa
sbb
add
push
add
push
addr16
cmp
mov
sbb
and
cld
lea
sbb
loopne
cmp
call
mov
fild
cmp
mov
mov
in
mov
cmp
mov
mov
mov
cmp
mov
sub
and
jae
loopne
fdivr
sbb
stos
aam
jbe
pop
mov
cmp
jbe
out
sbb
ja
jo
push
mov
cmp
scas
scas
inc
sub
test
push
add
aas
nop
dec
add
es
sub
and
push
(bad)
push
mov
inc
fsubr
push
or
bound
fild
inc
or
das
push
dec
jae
mov
aaa
out
mov
jo
pop
adc
adc
inc
cmp
jnp
add
push
push
pop
push
sbb
loope
push
add
dec
pop
add
dec
add
sbb
and
xchg
cwde
mov
test
xor
or
and
xor
pop
xchg
and
repz
and
xchg
and
and
out
popf
xchg
out
scas
and
and
and
(bad)
adc
xchg
and
cmc
gs
sti
movzx
or
inc
out
inc
enter
shr
adc
fbstp
mov
add
sbb
(bad)
retf
push
dec
add
lods
push
popf
push
fmul
mov
movs
add
adc
das
cli
or
sub
cmp
xchg
adc
outs
pop
inc
dec
inc
jo
push
cmp
jno
imul
mov
push
cmp
or
outs
call
loopne
and
test
frstor
add
add
sub
pop
lds
jno
ficomp
and
mov
ret
pusha
mov
test
stc
push
jnp
cwde
dec
pop
ror
lds
dec
or
and
mov
dec
and
mov
or
dec
dec
xor
pusha
dec
xor
ror
adc
ret
xor
mov
push
jno
inc
fwait
mov
pop
push
jo
add
out
stc
mov
(bad)
or
popa
cmp
je
std
pop
scas
shr
mov
mov
mov
xor
cmp
mov
or
imul
pop
and
(bad)
sub
bound
add
addr16
movs
out
out
sub
mov
iret
or
or
dec
stos
sbb
push
scas
and
imul
inc
movs
pop
jg
adc
inc
pushf
sbb
lea
sbb
mov
xor
(bad)
ds
mov
fnstcw
pusha
mov
daa
fst
mov
sbb
push
ret
sub
and
push
pop
ror
mov
jo
push
lods
mov
clc
add
jge
mov
popa
pusha
push
sub
cmp
and
jl
hlt
mov
xor
jl
faddp
sub
(bad)
pop
lea
retf
jl
(bad)
pop
pop
ins
cmp
pop
cmp
pop
cmc
mov
fcom
test
hlt
push
(bad)
adc
xor
adc
add
xor
bnd
loopne
imul
aaa
out
pop
push
bts
vmaxsd
sub
add
inc
dec
inc
ins
mov
outs
adc
and
dec
xchg
scas
shl
dec
adc
add
test
xchg
inc
add
shld
mov
or
jnp
setne
mov
dec
jg
mov
lods
inc
cmp
dec
ror
and
in
push
xchg
fsubrp
movs
loopne
mov
jo
fstp
push
(bad)
mov
mov
fadd
aam
mov
pop
fidivr
mov
imul
push
xchg
fs
rol
cmp
dec
sbb
inc
mov
loope
jno
or
jbe
dec
popa
rcl
dec
mov
sub
(bad)
pop
mov
push
add
dec
psrad
mov
jmp
(bad)
pusha
mov
ja
das
and
cmp
pop
or
lds
mov
jmp
pop
jmp
push
sub
das
pop
sbb
adc
sbb
inc
pusha
dec
call
lahf
add
test
mov
or
inc
stc
adc
arpl
pop
sbb
(bad)
loope
jno
mov
adc
push
inc
pop
das
stos
das
inc
test
mov
push
mov
ret
add
ret
pop
sbb
sbb
or
or
fnsave
sub
(bad)
(bad)
sbb
cmp
adc
pmulhuw
pop
scas
add
inc
iret
fild
nop
popa
outs
scas
jge
nop
rol
mov
ror
shr
daa
xor
dec
add
jge
adc
adc
or
idiv
sub
xor
daa
jl
pop
repz
push
add
data16
push
jl
dec
add
mov
iret
imul
push
mov
push
hlt
fidivr
jge
in
in
xor
outs
push
pop
adc
or
or
test
push
(bad)
loopne
fldcw
xchg
adc
addr16
xchg
inc
inc
outs
fs
dec
(bad)
call
adc
cmovbe
jb
popa
je
gs
gs
jns
jg
sti
xor
(bad)
xchg
adc
or
push
gs
jae
push
fmul
mov
or
pop
repnz
add
mov
push
cli
pop
add
mov
push
push
sub
xchg
out
cmp
retf
push
pop
adc
(bad)
cmp
cmp
movlps
sbb
push
adc
inc
push
and
in
or
adc
loopne
aad
inc
ins
gs
jb
add
es
shr
push
gs
data16
ret
add
xchg
dec
push
inc
jb
or
adc
or
jo
or
inc
imul
je
outs
outs
jne
lea
push
imul
int3
loope
xchg
or
sub
mov
daa
rol
gs
jb
jns
cmp
xor
lock
outs
fs
into
imul
push
or
push
xor
outs
jl
out
shl
push
popa
dec
xor
out
imul
push
sub
or
js
leave
sar
(bad)
rcl
lahf
or
pop
movs
push
mul
sbb
pushf
jp
push
mov
sbb
aas
or
aaa
pusha
aam
pop
mov
mov
add
pop
or
fs
loopne
dec
sub
mov
jns
call
fs
pop
and
add
fsubr
cmp
or
fdivr
push
icebp
xchg
push
repnz
test
add
add
xor
sbb
push
sbb
sbb
push
or
jne
add
arpl
fiadd
ja
add
call
std
xor
jae
inc
fsubr
fdiv
add
add
aam
shr
jbe
push
xchg
aaa
lods
pusha
data16
fnstenv
shr
sbb
cmp
inc
(bad)
xor
inc
clc
gs
les
inc
bound
fsubr
sbb
push
mov
dec
outs
lods
xchg
test
lds
aad
loop
jne
bound
loop
add
scas
push
iret
push
and
add
mov
imul
daa
or
lds
jecxz
fild
mov
inc
sub
inc
push
push
inc
mov
add
pop
pop
jne
aaa
cli
pusha
xchg
or
sbb
inc
dec
ja
pop
jecxz
mov
imul
inc
xchg
add
(bad)
sbb
inc
dec
or
enter
outs
es
xchg
(bad)
xor
scas
add
(bad)
cmp
jb
inc
fs
jb
add
retf
outs
popf
dec
inc
mov
inc
add
shr
ins
sbb
add
imul
pop
cmc
scas
in
rol
mov
out
adc
push
rcl
loope
neg
add
add
test
ds
shl
cli
push
clc
shl
stos
and
fincstp
fiadd
inc
fmul
in
outs
push
pop
mov
add
jl
mov
pop
and
adc
adc
loopne
sbb
mov
fdivp
je
(bad)
dec
jbe
xchg
ror
inc
sbb
cmp
or
xchg
into
js
cmp
lea
cmp
and
cmps
xchg
and
jle
sbb
mov
mov
inc
adc
pop
ret
jge
xchg
inc
pop
ss
cmp
inc
mov
inc
adc
aam
ret
sbb
xchg
sbb
or
jmp
push
push
push
xor
lods
mov
sbb
cmp
enter
jne
js
icebp
jmp
cmp
fwait
sbb
ja
pushf
jecxz
cmp
cmp
jo
adc
(bad)
daa
lock
outs
pop
repnz
mov
bound
xlat
push
inc
xlat
nop
xchg
lock
out
mov
mov
iret
pop
popa
and
leave
(bad)
(bad)
packuswb
cs
inc
add
cdq
test
ret
and
scas
and
push
adc
hlt
aad
lods
ret
ret
pop
ret
adc
cdq
in
je
add
sbb
clc
(bad)
into
adc
push
push
mov
mov
push
mov
mov
dec
xchg
push
into
mov
cmp
xchg
mov
pop
sub
xor
xchg
das
dec
mov
xor
or
in
pusha
and
(bad)
mov
pop
inc
push
cmps
into
xchg
les
push
pmovmskb
xor
ss
call
xchg
push
outs
data16
sti
push
jnp
sbb
dec
push
ret
xchg
arpl
adc
push
hlt
cmovg
cmp
push
dec
clc
push
fadd
ins
jno
push
(bad)
fisubr
sub
push
mov
mov
adc
retf
pop
test
mov
int3
jo
xor
add
jmp
cwde
xchg
push
mov
adc
lahf
sub
scas
scas
add
movs
push
xor
push
movs
(bad)
push
push
push
pop
pop
mov
jmp
lock
je
idiv
dec
test
jl
inc
xor
mov
(bad)
(bad)
scas
mov
aad
jne
sub
out
cmp
add
(bad)
mov
retf
pop
push
fisub
and
push
rol
adc
out
aaa
sub
retf
mov
mov
call
xor
mov
cmp
or
sub
lahf
push
ja
cmp
das
call
mov
adc
(bad)
or
adc
push
je
xlat
lods
sar
lock
xlat
out
inc
and
cmps
push
mov
shl
mov
icebp
jle
pop
push
inc
inc
cmp
inc
fdiv
jmp
cmp
movs
sbb
aaa
mov
push
scas
add
dec
icebp
xor
sub
dec
(bad)
in
cmp
ins
sahf
aam
repnz
or
cs
das
test
or
fs
or
sbb
rcl
(bad)
fmul
inc
jmp
lock
ror
or
std
push
dec
push
test
imul
or
out
push
push
and
std
push
or
dec
jae
popa
addr16
pop
fld
cld
sti
popa
enter
inc
add
or
mov
cmps
add
inc
lods
aam
or
aaa
ss
dec
mov
xchg
or
push
adc
lock
mov
xor
adc
stos
inc
and
nop
or
push
int
or
rol
fs
add
lock
adc
and
mov
add
jmp
mov
std
test
jo
std
or
adc
ds
jns
loopne
pop
add
mov
add
pop
test
lock
pusha
jecxz
sub
jns
xor
pop
dec
and
add
mov
sub
xchg
ror
outs
mov
push
cs
add
ds
adc
dec
cmp
or
in
int3
(bad)
shl
in
sbb
shl
mul
inc
dec
hlt
jne
jmp
mov
or
push
xchg
pop
add
inc
add
inc
in
adc
bound
outs
jecxz
xlat
loop
add
outs
sub
adc
clc
push
lock
or
jp
and
xchg
rol
push
ror
sbb
push
jl
sbb
add
cmp
enter
sbb
pusha
lods
cmp
sub
dec
jbe
or
sbb
sub
jg
in
jg
enter
or
pop
test
push
lock
ror
sub
ret
test
dec
fmul
cld
jo
xor
push
or
ins
push
in
mov
call
cwde
sub
mov
(bad)
ss
test
jl
inc
loop
dec
mov
sub
sbb
hlt
inc
lods
push
in
nop
jg
lds
mov
mov
arpl
push
jne
add
or
push
adc
test
push
adc
in
fcmovnb
es
in
or
mov
(bad)
push
mov
mov
rol
jg
in
jns
aaa
mov
mov
enter
add
inc
scas
jo
(bad)
loope
add
jle
mov
inc
mov
adc
je
ss
ins
stc
mov
mov
push
adc
jl
mov
push
mov
mov
neg
and
cwde
mov
pusha
dec
fs
rcl
pusha
ds
out
add
bound
sbb
int
jbe
and
call
dec
popa
jae
add
add
test
xlat
rol
inc
dec
fs
gs
imul
fdivr
div
cs
jns
push
sbb
add
inc
mov
ins
dec
push
inc
add
pusha
daa
mov
bsr
ss
inc
outs
lods
sub
jmp
inc
repnz
stc
xchg
and
push
mov
cwde
add
xchg
in
push
outs
arpl
mov
or
nop
push
imul
push
xchg
xchg
or
inc
dec
dec
jb
jg
fadd
xchg
sub
jne
fs
inc
or
aaa
movs
lods
add
call
jo
movs
(bad)
imul
jp
retf
sahf
fld
push
in
xchg
sbb
mov
ja
xor
inc
jno
pop
add
mov
int3
pop
jno
sar
inc
pop
xchg
mov
(bad)
or
int3
pop
popa
cli
jno
pusha
out
mov
inc
lods
fadd
inc
inc
hlt
or
push
stos
mov
cwde
dec
or
test
inc
cmp
enter
dec
xchg
pop
aad
je
pop
stos
mov
xchg
jl
nop
test
mov
pop
arpl
in
(bad)
fild
pop
mov
dec
xor
or
jne
cmp
or
or
inc
add
add
fisubr
push
movs
(bad)
sub
shr
pop
jp
sbb
dec
sbb
in
fnstsw
and
mov
push
inc
add
inc
inc
mov
adc
add
pop
adc
loop
nop
or
push
cmp
or
inc
addr16
fist
retf
add
cmp
fs
jg
adc
mov
sub
xor
mov
cmp
scas
fld
outs
dec
js
cmp
jg
popf
inc
aaa
jmp
lea
les
add
loop
ror
push
mov
jmp
cwde
jge
push
or
ror
je
outs
xor
sbb
inc
repnz
dec
outs
inc
jne
data16
out
xor
idiv
pop
std
cmp
pusha
inc
arpl
push
sbb
cmps
test
dec
out
mov
bts
jmp
outs
outs
dec
ins
loopne
shl
out
cmp
ds
inc
mov
aaa
adc
adc
push
das
sar
push
gs
outs
jo
loopne
retf
mov
pop
inc
pop
lods
jb
push
dec
bound
sti
push
inc
sub
inc
pop
mov
addr16
dec
lock
pop
push
popa
xor
xchg
scas
or
jne
jbe
imul
inc
mov
add
pushf
cmc
int3
rcr
push
into
push
pop
jmp
(bad)
in
jle
inc
and
push
cwde
push
outs
mov
pusha
fsubr
inc
lds
bound
adc
sahf
(bad)
mov
hlt
add
popa
add
inc
sbb
lds
or
imul
and
je
inc
popa
addr16
adc
inc
xor
inc
dec
gs
fs
add
fdivr
sbb
inc
inc
test
jbe
push
dec
dec
call
in
adc
mov
(bad)
loopne
cmp
out
fs
leave
ins
fistp
pop
xor
in
call
jns
mov
pushf
mov
retf
sub
jne
dec
dec
inc
sahf
sub
jae
add
(bad)
cmovle
or
and
cwde
ror
dec
add
inc
pop
fcomp
xchg
and
popa
push
and
xor
push
sub
test
push
push
add
in
add
jge
mov
inc
sub
jns
adc
inc
cmp
repz
les
dec
addr16
test
cld
or
(bad)
outs
ins
jo
lds
mov
or
popa
outs
push
push
je
imul
xor
fimul
js
xor
dec
retf
add
xor
aad
pop
and
daa
pop
mov
not
ret
add
mov
test
add
leave
ds
and
leave
push
dec
or
or
dec
sub
mov
sbb
add
pop
mov
arpl
and
sbb
dec
retf
mov
sbb
cli
jp
dec
ins
mov
aaa
jns
lds
push
add
xor
ret
xor
mov
pusha
test
push
dec
in
or
or
or
mov
mov
int
enter
jns
push
cmp
cmp
inc
jns
add
js
dec
outs
mov
ret
jns
fs
add
pop
inc
mov
dec
adc
xor
adc
jecxz
ror
add
add
push
jbe
inc
dec
mov
and
sub
push
sahf
mov
ja
jno
test
dec
inc
push
inc
inc
loope
mov
or
pop
xlat
ja
fidiv
xchg
dec
js
xchg
or
push
movs
stc
xchg
xchg
inc
mov
xchg
push
cmps
cmps
fcomp
pop
pop
mov
jmp
mov
or
sbb
in
adc
push
gs
idiv
add
and
push
fistp
sub
mov
hlt
jecxz
push
push
popa
outs
shl
push
jg
add
aaa
pop
test
mov
sub
push
or
adc
sar
mov
dec
and
sub
push
call
sbb
gs
aad
push
add
sub
addr16
add
inc
nop
sub
push
(bad)
movs
xchg
adc
mov
adc
add
or
dec
pop
xchg
pop
stos
push
jb
mov
repz
rcl
xchg
mov
mov
pop
jne
into
cmp
fisub
mov
push
in
pop
or
or
inc
push
jno
(bad)
xchg
push
dec
ss
mov
or
pop
clc
(bad)
dec
inc
popa
cli
sbb
shl
cmp
mov
popa
sub
sbb
cwde
or
dec
popa
dec
inc
or
add
add
cdq
sub
pop
pop
push
cmp
in
inc
jae
xlat
cli
paddd
fist
out
push
mov
mov
xchg
(bad)
fiadd
dec
and
fnstcw
xchg
xor
xor
xchg
outs
in
je
mov
add
xchg
xor
(bad)
dec
cmp
jne
add
mov
jmp
mov
adc
sar
dec
mov
loop
mov
push
data16
inc
adc
and
push
lock
add
mov
mov
ins
leave
mov
inc
push
sahf
dec
lock
add
pop
and
push
mov
ja
stos
add
das
pop
sub
lock
rcl
lea
mov
or
xor
jo
push
mov
dec
add
adc
inc
cmp
adc
rol
add
imul
add
or
sbb
sbb
outs
fcomip
jle
pop
lock
xchg
stc
mov
rol
add
push
scas
sahf
test
jge
mov
mov
or
(bad)
lahf
jmp
push
inc
mov
adc
add
jle
aam
mov
out
dec
add
and
mov
adc
sub
push
hlt
pop
call
aam
add
mov
push
cmps
jle
and
loopne
mov
pop
dec
cdq
shl
(bad)
movs
push
and
mov
dec
je
icebp
jmp
jge
pop
scas
test
pusha
sbb
clc
mov
mov
rol
test
jge
mov
jle
scas
sti
mov
lods
mov
push
jo
ret
sbb
push
(bad)
mov
(bad)
cmp
pusha
in
xchg
cli
pusha
or
sub
and
sbb
mov
stos
mov
loope
jns
push
inc
add
pop
stos
or
add
push
jo
dec
inc
(bad)
sub
mov
adc
cmp
and
loop
cs
add
xor
add
sub
out
stos
iret
jmp
xor
cmp
or
ret
jmp
push
cmp
lahf
and
add
in
cwde
jmp
cmp
push
cmp
xchg
xor
jo
xchg
loopne
cwde
mov
leave
shl
out
pop
mov
or
or
daa
lods
or
add
xor
test
push
xor
mov
jecxz
scas
sub
xchg
dec
hlt
out
nop
hlt
jno
je
push
fmul
ja
hlt
lods
hlt
pop
pop
xchg
pop
mov
sub
mov
cmp
mov
fdivrp
shl
mov
fsub
mov
mov
out
dec
pop
or
push
ret
dec
add
mov
and
cmp
cmps
inc
outs
out
jno
inc
push
mov
add
jmp
add
sub
jl
xchg
cmp
jle
cmps
cmp
scas
mov
mov
inc
sbb
push
sbb
xor
jmp
push
and
dec
rcl
and
and
and
cdq
data16
out
sub
add
inc
rol
add
cmps
pop
sbb
stos
fistp
cmp
mov
popa
mov
out
cmps
ss
clc
add
push
rcr
(bad)
inc
dec
not
push
sbb
push
fcos
mov
test
jge
sub
jmp
sub
add
and
call
enter
sub
sbb
pop
pop
cld
sub
and
mov
xor
add
sbb
jae
nop
loope
das
or
add
arpl
test
adc
sub
loope
sub
adc
stc
(bad)
scas
scas
add
aaa
mov
mov
loope
mov
jne
pusha
popa
push
mov
mov
loope
imul
ret
and
mov
jg
(bad)
sbb
push
xlat
or
inc
and
fcom
(bad)
loopne
inc
xor
xchg
nop
inc
add
or
adc
inc
push
js
nop
cmp
ins
push
sub
adc
cmp
sbb
xor
sbb
out
dec
cmp
dec
fsub
and
in
dec
or
xchg
inc
inc
jo
add
pop
aaa
jo
(bad)
enter
sub
sar
sbb
in
inc
jmp
in
dec
test
jl
(bad)
stos
inc
or
jne
jge
mov
pop
add
mov
xor
(bad)
imul
push
je
push
add
add
dec
jne
scas
jg
call
mov
push
push
inc
dec
ins
sbb
jne
jg
call
ret
lock
das
loop
pop
dec
mov
pop
loop
test
hlt
pop
push
inc
xchg
popa
push
fcomp
sub
jle
test
jl
cmp
imul
imul
add
div
nop
rol
pop
dec
sub
jl
inc
mov
jo
cmp
mov
shr
push
dec
cld
jge
push
push
fcom
dec
push
aam
inc
cmpxchg
int
cmp
cmova
pusha
bound
fst
add
and
or
ds
cli
(bad)
retf
mov
jns
std
inc
dec
adc
adc
stos
inc
inc
sti
pop
aas
ror
push
inc
rol
out
inc
fsubr
jl
mul
inc
(bad)
lds
arpl
imul
sbb
outs
push
sbb
fnstsw
add
ins
add
jb
loope
mov
xor
adc
jp
add
loopne
sbb
and
(bad)
pop
sbb
les
jnp
dec
sub
jne
cmp
sub
imul
shr
ins
mov
jae
jle
xor
adc
inc
and
jbe
sahf
push
pusha
mov
outs
jg
jne
add
mov
aaa
adc
dec
inc
xor
out
jbe
jp
pop
push
push
imul
cmp
cmp
and
mov
adc
dec
(bad)
xchg
sub
loope
(bad)
push
push
inc
pop
cli
push
in
ror
jmp
test
sbb
test
jle
sub
push
xor
add
call
sar
pop
add
sti
lea
movs
add
or
retf
mov
loope
adc
scas
mov
add
loopne
test
mov
jmp
pop
mov
das
shr
fisubr
call
sub
push
rcl
mov
pop
mov
pop
test
pop
xchg
or
ret
inc
xor
cmp
xchg
fs
daa
inc
bound
xchg
hlt
xor
mov
or
or
iret
dec
ret
outs
xlat
leave
jge
mov
cmps
out
jo
and
lea
push
and
scas
or
xchg
icebp
stc
xlat
sub
push
xor
jecxz
xor
add
in
or
retf
movs
jns
ja
add
mov
mov
xor
jl
inc
mov
xchg
add
in
mov
aas
adc
adc
mov
cmp
push
cmp
inc
sub
xor
fs
cmp
sbb
enter
mov
jecxz
aaa
scas
mov
jne
push
add
dec
xor
push
cmp
dec
jmp
int3
add
and
or
push
adc
add
(bad)
les
dec
mov
dec
cmp
push
popa
add
sar
dec
or
push
mov
mov
je
ds
or
nop
jle
inc
mov
jge
cwde
retf
or
sub
inc
fs
or
and
sahf
xlat
sbb
imul
and
inc
js
push
stos
cdq
sub
jle
ja
cli
(bad)
xchg
add
inc
or
jbe
outs
mov
(bad)
sub
jle
movs
add
imul
inc
add
mov
push
jmp
push
sub
movs
sub
cmp
push
push
out
inc
and
sbb
jns
adc
jl
fbld
push
or
jmp
std
loope
outs
ret
add
pop
fmul
ficom
sar
test
inc
imul
and
sbb
inc
xchg
pop
rcr
fld
or
mov
or
cwde
pop
sbb
mov
sti
dec
cwde
imul
add
cld
frstor
and
outs
outs
out
fisubr
mov
or
xchg
add
xchg
cwde
fs
shr
mov
pop
mov
and
mov
out
jl
push
hlt
jmp
jmp
jo
adc
fiadd
movs
add
nop
pop
enter
sti
es
das
mov
(bad)
in
mov
and
mov
dec
fsub
sub
es
dec
push
movs
push
movs
pop
imul
jle
push
mov
mov
and
cwde
mov
mov
jge
pusha
dec
into
pusha
adc
pop
mov
inc
jbe
in
jle
data16
pop
stos
pop
dec
add
inc
xor
mov
inc
dec
outs
fisub
jo
or
jae
ins
imul
into
enter
(bad)
mov
popa
and
push
ja
outs
fcomp
pop
or
xor
mov
xchg
pusha
pop
push
and
imul
pop
in
add
mov
add
test
adc
movlps
push
adc
fadd
dec
push
adc
push
adc
adc
movhps
pop
xor
add
jecxz
iret
mov
or
xor
sub
inc
adc
inc
sub
imul
out
push
je
add
jno
pusha
push
pop
push
jne
add
rol
xor
pop
adc
dec
mov
sub
pop
mov
add
mov
push
retf
add
les
int3
pop
xor
pop
inc
fcom
mov
mov
mov
mov
pop
dec
adc
dec
sar
pop
inc
stos
movaps
push
add
cmc
sbb
retf
ins
add
or
or
fxch
cmps
mov
das
push
push
test
sar
outs
mov
or
int
pop
inc
mov
xor
or
(bad)
dec
push
add
das
(bad)
push
cmps
test
test
call
(bad)
cmp
mov
jno
push
push
dec
pop
pop
and
push
retf
xchg
leave
push
mov
shl
cmp
or
cmp
rcl
dec
mov
sbb
cmp
push
inc
arpl
lahf
push
xor
mov
dec
cmps
(bad)
push
jmp
xchg
jge
pop
in
jne
mov
outs
inc
xchg
int3
test
mov
ins
popa
xor
les
xor
inc
inc
ds
or
scas
pop
push
or
das
cld
stos
pop
call
mov
imul
inc
inc
push
push
push
jns
sub
xor
sub
jo
cmp
cmp
dec
xor
jo
sbb
dec
outs
xchg
push
or
push
xor
mov
add
aam
mov
and
or
inc
add
jg
jo
jge
je
mov
test
je
cmp
jne
mov
push
hlt
out
mov
inc
clc
adc
enter
outs
stos
sbb
add
xchg
push
or
mov
bound
or
hlt
mov
push
adc
and
xchg
sub
lock
adc
jge
outs
cmp
cmp
jne
call
pop
inc
jl
adc
push
xchg
and
add
js
fld
out
add
add
les
dec
or
jge
dec
dec
popa
ds
mov
mov
and
cmp
aaa
not
out
fwait
or
pop
sub
xor
sub
dec
pop
dec
adc
sub
jno
imul
addr16
ins
jbe
gs
test
or
add
data16
xor
sub
pop
cld
das
add
dec
add
push
lahf
push
push
ror
outs
outs
pop
xor
fcomi
pop
dec
pop
icebp
or
adc
les
test
jae
test
and
mov
mov
aas
and
mov
das
sbb
(bad)
push
mov
add
shl
ds
les
xlat
out
push
(bad)
popa
movs
scas
out
push
xor
dec
xor
mov
push
nop
dec
push
test
cmps
jnp
pop
sbb
fidiv
mov
push
enter
push
inc
jl
in
repz
sar
in
popa
mov
cmp
pusha
js
sahf
pop
push
push
fist
add
inc
repnz
push
cmp
cmp
mov
push
(bad)
(bad)
sbb
nop
push
cmp
stos
mov
mov
mov
sbb
jge
or
or
adc
adc
outs
jae
fs
jb
arpl
jne
ins
adc
inc
mov
cmp
push
mov
mov
outs
jne
loope
dec
cmp
or
and
or
push
add
inc
dec
pushf
push
sub
std
cmp
outs
jo
jmp
bound
lods
cs
sub
jle
jecxz
sbb
je
shl
dec
fs
cmp
test
mov
push
sub
cs
add
ins
mov
addr16
mov
loop
cli
jo
xchg
pop
sar
sbb
inc
push
outs
jb
les
xchg
pop
popa
fisubr
jo
imul
ss
dec
std
xchg
gs
call
jbe
mov
nop
fprem
xor
inc
adc
inc
aam
jns
sbb
push
jb
gs
fsubr
adc
push
push
xchg
cmp
pop
inc
int
or
dec
ja
and
and
mov
jb
push
mov
jns
ja
lock
mov
ret
and
push
cmovg
stc
repnz
jnp
add
out
ds
cmp
and
xchg
push
jmp
and
out
es
call
(bad)
push
movaps
xlat
aas
into
pop
sub
sbb
sub
iret
xchg
xchg
fldz
aas
add
(bad)
xchg
into
leave
enter
pop
ins
mov
outs
(bad)
sar
pop
and
or
sub
push
cs
das
add
aas
aam
jnp
and
shl
outs
xor
into
ins
ja
pop
or
(bad)
into
in
dec
stos
pop
dec
es
cs
daa
and
daa
pop
int3
ud2
sub
(bad)
xchg
xchg
daa
daa
int
sub
mov
sahf
xor
pop
cmps
popf
xchg
fist
jmp
xchg
mov
pop
add
scas
cmp
aaa
add
sub
push
pop
popf
add
mov
(bad)
cs
push
push
xor
or
sub
test
cmp
test
test
dec
mov
push
jnp
shl
outs
fidivr
mov
lahf
jo
je
adc
call
dec
add
fcomp
frstor
push
popa
push
gs
js
cmp
data16
dec
xchg
(bad)
leave
mov
outs
stos
aad
push
mov
jbe
push
adc
les
add
push
bound
add
cmp
xchg
test
sub
adc
add
pop
adc
cmovns
push
adc
outs
xor
adc
push
mov
gs
je
sbb
ins
push
xor
or
adc
dec
ja
mov
iret
push
xchg
ret
push
inc
popa
in
or
push
jns
inc
lahf
sub
js
adc
add
adc
ins
rcr
mov
mov
les
les
ins
push
icebp
shl
pop
dec
push
xchg
je
dec
outs
xor
pop
lods
sbb
xor
dec
xchg
inc
repz
adc
gs
outs
jbe
inc
mov
lea
out
outs
arpl
cmps
push
punpckhbw
push
add
rol
push
popa
retf
ror
mov
sub
dec
mov
xor
cmp
or
pop
mov
or
and
cmps
push
retf
add
test
data16
mov
and
add
sbb
xor
or
popa
bound
in
add
ins
scas
xchg
adc
cmp
pop
pop
rol
out
pop
test
cmp
cld
jmp
dec
dec
dec
aas
jae
adc
out
jae
dec
push
sti
(bad)
adc
or
pop
je
and
xor
ins
mov
popa
ss
adc
pop
(bad)
adc
cld
inc
push
mov
adc
adc
mov
add
jno
sbb
imul
dec
in
(bad)
shr
and
inc
outs
aaa
xchg
xor
shl
dec
mov
mov
add
inc
leave
or
int3
jl
sbb
jno
jmp
cmp
lea
xlat
inc
dec
lea
jb
xchg
adc
and
shr
add
call
add
lods
scas
rdtsc
mov
cmps
inc
arpl
fiadd
cmp
add
pusha
push
fs
sub
xlat
inc
inc
inc
addr16
loope
popa
rcl
iret
push
(bad)
pushf
and
add
popa
outs
jae
cmp
jo
rol
add
ins
xor
jae
mov
sub
xchg
int3
lods
iret
xchg
or
sub
mov
popa
jae
aaa
sbb
add
arpl
push
adc
push
push
pop
lds
push
imul
sbb
add
int3
xchg
xor
and
dec
pop
mov
hlt
sub
or
add
sti
adc
add
cdq
in
popa
ror
cs
loopne
mov
ins
imul
push
jae
inc
outs
je
jo
pushf
into
fst
test
out
(bad)
outs
cmp
mov
and
xchg
ret
inc
(bad)
or
or
xor
xchg
ins
lods
xor
xor
mov
dec
sub
(bad)
lods
mov
or
pop
test
test
xchg
and
inc
sbb
js
and
and
inc
jo
mov
dec
dec
inc
push
push
adc
fs
int3
sub
adc
aad
sub
inc
sub
inc
mov
push
arpl
mov
sub
fmul
pop
jno
mov
inc
adc
and
loope
dec
add
shl
adc
test
js
mov
shl
mov
cdq
and
sbb
xchg
mov
or
pop
or
push
push
ins
movs
jmp
lahf
add
or
pop
int
inc
enter
or
imul
dec
mov
aas
ret
inc
push
xor
push
pop
push
sub
movs
ds
push
aaa
sahf
xor
test
and
mov
sbb
xchg
and
jo
retf
sub
xor
ret
ret
ds
dec
xchg
loope
or
outs
cmp
xor
lea
xor
(bad)
test
jp
js
into
push
in
pop
jns
add
jo
xor
jne
and
xchg
(bad)
cmp
arpl
jae
fdiv
jno
pandn
popa
ins
ins
gs
ret
cmp
mov
dec
test
rcr
mov
fs
pushf
push
and
stos
pushf
fdiv
mov
push
test
mov
add
sub
test
ret
call
movs
push
xor
or
and
sub
jno
push
je
(bad)
cmp
inc
ror
test
add
inc
popa
push
jne
mov
adc
ins
mov
test
mov
cmps
sbb
adc
inc
push
loopne
call
sbb
push
pop
pop
das
add
fld
push
inc
fstp
or
mov
push
push
imul
add
mov
mov
cmps
mov
add
cs
ror
shl
jae
ins
jo
push
arpl
ss
push
bound
push
outs
inc
call
push
jmp
imul
scas
inc
jae
mov
xlat
pop
std
or
push
loope
in
arpl
sbb
ficomp
push
pop
push
pusha
(bad)
mov
loopne
or
or
dec
sbb
clc
call
add
add
sbb
jmp
or
jo
add
add
sti
xchg
inc
inc
ret
shr
js
push
add
xor
inc
xchg
pop
add
pop
dec
cmp
fdivr
pusha
out
mov
cli
cmp
pop
inc
cmp
xor
push
jp
inc
ror
push
or
adc
add
or
cmp
mov
and
mov
nop
or
dec
xor
push
das
add
xor
jb
pop
cs
xchg
shl
enter
pop
xor
dec
adc
push
mov
aad
(bad)
cmp
adc
shl
arpl
push
jae
xor
pop
dec
add
jmp
sub
xor
inc
add
sbb
sbb
mov
test
push
retf
xchg
dec
int3
xor
xchg
pushaw
add
cwde
add
push
rcr
push
push
sar
cmc
add
int3
sub
ror
dec
loop
adc
loopne
jmp
push
pop
xchg
out
leave
scas
ret
imul
inc
repnz
adc
pop
or
inc
inc
push
es
outs
outs
jl
inc
dec
or
mov
jmp
lea
dec
cld
xor
push
push
xor
mov
mov
and
adc
push
dec
xor
pop
pop
pop
xor
push
int
cmp
adc
rcl
jmp
pop
pop
ret
push
push
add
ret
mov
sbb
adc
mov
xchg
add
mov
adc
xor
mov
dec
ins
pop
jae
adc
inc
and
mov
ss
or
mov
and
mov
popf
push
add
(bad)
(bad)
jae
pop
pop
pop
pop
ret
mov
xchg
fadd
and
in
pop
or
jl
fucomi
out
sub
out
inc
add
push
lahf
sti
or
jne
cmp
fisttp
jl
addr16
cmp
je
cmp
je
sti
ret
mov
or
sar
or
hlt
mov
and
outs
jo
adc
sub
mov
shl
cmps
push
outs
or
sub
xor
rol
ret
inc
je
lea
out
mov
adc
adc
(bad)
mov
push
cld
je
(bad)
lock
fbstp
js
sub
out
pusha
aaa
(bad)
enter
mov
push
mov
cmp
cmp
cmp
mov
pop
adc
mov
inc
mov
add
or
inc
jne
sbb
xor
pushw
fadd
pop
lock
mov
repnz
or
mov
pop
or
sti
add
pop
xor
dec
xor
lock
test
daa
sub
push
call
and
inc
pop
push
lea
dec
push
push
cld
(bad)
mov
rol
inc
clc
adc
sbb
mov
retf
fs
in
jbe
js
sar
shr
xchg
push
add
or
in
mov
mov
in
jecxz
mov
jo
in
dec
das
enter
(bad)
mov
cdq
push
push
or
call
push
push
sub
inc
pop
jge
adc
jmp
icebp
cwde
mov
sbb
mov
xchg
or
cwde
xchg
sub
adc
js
xor
add
mov
inc
je
clc
fldenv
enter
mov
loop
inc
jo
das
and
sbb
(bad)
loopne
jnp
pop
xchg
xor
pusha
pusha
or
mov
and
jle
adc
(bad)
shr
sbb
or
nop
stos
rcl
ret
shr
ret
es
xchg
adc
push
cmp
fcomip
aaa
add
shl
ret
pop
push
pop
dec
int3
sub
xchg
pop
fst
out
clc
push
mov
and
dec
and
in
mov
lods
jo
sub
rol
adc
jle
out
add
cmp
cdq
adc
call
out
or
lock
fadd
sbb
mov
test
pop
mov
or
xor
inc
mov
es
aas
pop
and
jl
loope
loope
pusha
pop
xchg
pop
pop
pop
mov
out
fst
xchg
or
push
jbe
add
jp
pop
les
pusha
mov
cmp
push
cmp
jmp
into
test
je
mov
and
xor
or
movaps
xor
pmullw
push
xor
cmp
inc
enter
out
in
ss
add
out
mov
xchg
mov
imul
xor
or
mov
clc
mov
xchg
inc
in
(bad)
stc
test
and
in
pushf
mov
les
or
aaa
loopne
and
test
daa
jmp
pop
out
ss
sub
xor
mov
push
mov
test
inc
mov
fild
inc
mov
loopne
mov
shl
cmp
daa
fmul
fstp
xor
int3
in
jmp
call
aam
dec
movs
sbb
push
inc
dec
jne
iret
or
out
rcr
push
pop
jmp
loop
mov
loope
ror
or
or
pop
(bad)
xor
mov
int3
cdq
pop
test
jo
jno
add
push
outs
rol
sub
jno
sbb
push
push
jne
sbb
or
sbb
jmp
push
push
pop
xchg
test
test
jns
inc
in
xchg
inc
mov
push
ss
and
xchg
xor
adc
jecxz
test
into
movs
mov
cmp
mov
xlat
mov
xchg
and
mov
xchg
fcmovnu
shr
mov
mov
mov
pop
add
xchg
inc
fwait
mov
or
jge
ds
mov
xchg
sbb
push
cmp
add
dec
sub
cwde
pushf
or
cmp
in
adc
or
dec
ret
inc
or
ret
aaa
cwde
and
mov
mov
mov
xchg
leave
mov
inc
xchg
pusha
pop
lahf
sub
sti
sbb
inc
and
rcl
retf
add
push
sub
add
daa
or
push
adc
dec
cmp
or
ins
push
nop
imul
pop
in
add
inc
add
int3
jo
dec
mov
cmp
in
cmp
xor
adc
adc
push
push
outs
pop
or
lods
xor
add
add
mov
aam
data16
pop
inc
bound
aas
sub
ror
mov
or
xor
cmp
inc
ins
cmp
ss
pop
pushf
test
jle
mov
dec
test
fdivp
test
pop
hlt
cmp
mov
xor
dec
jne
inc
jg
jp
dec
call
movzx
cmp
mov
outs
sub
popa
mov
stc
int3
xchg
(bad)
xor
pusha
ja
icebp
popa
pusha
adc
sub
cdq
mul
mov
clc
dec
sub
cmp
adc
cmps
dec
ret
xor
inc
pop
cwde
and
dec
jns
dec
lock
pusha
sub
add
pop
jecxz
or
loope
lods
hlt
pinsrw
lock
fnstenv
test
cmp
push
and
bound
pop
jg
daa
mov
sub
sub
inc
add
pop
in
icebp
fisttp
ds
shr
fs
push
push
sbb
adc
mov
rcl
popw
shl
mov
shl
mov
add
stos
add
or
out
dec
add
xor
mov
(bad)
ret
add
out
jno
repz
fild
(bad)
push
jmp
xor
mov
mov
scas
out
pop
loopne
or
cli
mov
sbb
pop
or
lea
jmp
jmp
or
inc
pop
pop
jo
jge
add
mov
mov
adc
add
adc
loopne
inc
mov
imul
dec
lock
nop
pop
int3
jbe
sbb
into
(bad)
fisubr
pop
test
call
test
jle
cmp
mov
scas
xlat
jle
push
hlt
push
xchg
cmp
add
ins
sub
dec
push
mov
mov
shl
inc
mov
(bad)
sbb
jle
cmp
jle
cmp
push
sbb
sbb
arpl
mov
cdq
adc
dec
inc
cmp
jmp
jl
(bad)
shl
add
je
and
loopne
xor
and
xchg
ror
fcomp
add
scas
or
mov
cmp
push
js
pusha
jb
in
push
je
gs
pusha
into
jle
and
or
jl
sub
jmp
in
jne
dec
adc
cmp
jne
rol
cmp
add
dec
add
pop
inc
mov
sbb
or
movs
lds
pop
inc
mov
inc
cwde
or
sti
dec
add
push
arpl
not
mov
popf
ins
adc
mov
out
sbb
dec
cs
add
cli
xchg
pop
dec
ret
dec
pop
sbb
clc
rcpps
in
addr16
ins
xor
adc
ret
add
and
mov
and
and
mov
or
ins
dec
sbb
push
xchg
sub
jo
cmp
fsub
pop
hlt
push
fisub
test
cld
push
fdiv
stos
js
fadd
(bad)
sbb
pop
add
adc
dec
adc
scas
inc
xchg
and
gs
fld
shr
mov
mov
mov
sub
call
push
xchg
or
cli
jge
cmp
movs
adc
mov
push
pop
push
xor
mov
data16
xchg
clc
jge
push
cmp
in
mov
call
pop
test
js
sbb
jg
cmp
mov
ret
test
lock
popa
ja
pop
mov
mov
movs
push
in
add
jae
and
mov
cmps
shl
inc
sbb
inc
call
and
mov
mov
push
xchg
and
sub
xrelease
hlt
das
(bad)
push
pop
scas
nop
cli
push
jae
in
scas
stos
mov
cmp
(bad)
int3
lds
jmp
jmp
add
push
pop
int
jo
je
cmp
xchg
and
push
shl
xor
mov
imul
jne
pop
and
xchg
push
or
sub
adc
pop
shr
mov
jo
push
push
adc
add
aad
sahf
fwait
or
add
jne
dec
xor
sub
std
imul
pusha
add
stc
add
mov
cmp
mov
mov
outs
cmp
call
push
in
sbb
inc
jecxz
test
xor
nop
xor
push
mov
mov
mov
dec
daa
cmp
je
cmps
lock
mov
je
call
add
je
lods
aaa
push
jae
sbb
mov
sub
fs
or
sar
sar
js
jmp
jmp
jno
sbb
pop
dec
and
pusha
add
add
aas
xchg
push
ds
cmc
std
fs
icebp
pop
lock
fcom
(bad)
loopne
xor
fdivr
add
sbb
adc
jmp
mov
(bad)
and
jl
sub
ret
cwde
int
(bad)
aaa
xor
jg
fucomi
add
add
out
test
cli
cs
push
add
or
or
or
push
xor
xor
or
push
or
adc
pop
mov
xchg
imul
add
jl
pop
call
pop
jne
sbb
cmp
or
xor
cs
dec
mov
push
out
pop
lods
sub
lea
add
jbe
adc
retf
ror
dec
add
hlt
pop
fistp
jnp
fcomp
inc
sbb
adc
imul
jmp
mov
test
out
ss
mov
sbb
test
shr
push
ret
lock
mov
mov
inc
fmul
jp
and
sbb
add
ror
adc
dec
and
cmp
ja
jmp
mov
push
jg
jbe
add
adc
push
adc
dec
xor
sub
arpl
int
lea
sub
cmc
lea
push
jmp
push
push
shl
aas
loop
mov
jo
jle
inc
js
push
(bad)
xor
lock
ror
arpl
sbb
test
aaa
cli
mov
stos
inc
pop
push
ins
(bad)
(bad)
push
dec
xor
in
lds
inc
dec
mov
and
loop
popa
lods
xor
dec
inc
or
arpl
icebp
mov
sub
fidivr
mov
jb
sbb
mov
loope
in
add
push
stc
rol
mov
mov
nop
and
nop
inc
add
(bad)
subps
ret
mov
mov
and
mov
inc
lea
add
in
inc
rcr
arpl
push
pushf
mov
or
cmp
mov
leave
out
or
cmp
cmp
push
(bad)
enter
mov
cmp
mov
jnp
jmp
push
sub
xor
sahf
and
and
jne
jge
mov
clc
je
xor
sbb
or
(bad)
aam
pop
aaa
pusha
aam
mov
add
mov
jbe
push
or
cmp
add
and
or
mov
or
xor
in
pop
and
inc
mov
and
push
in
in
or
sub
push
mov
mov
fdivr
shl
rcr
sbb
fadd
aam
xor
sbb
add
sbb
add
pusha
jbe
lahf
add
es
ja
jle
in
inc
jg
jge
mov
adc
ins
pop
sbb
xlat
das
jmp
pop
cmp
cwde
jmp
jbe
push
imul
imul
and
xchg
shr
jo
jnp
xor
in
cwde
loopne
and
daa
xlat
jae
ss
mov
out
and
mov
adc
sub
and
loope
jmp
and
repnz
adc
push
push
sbb
sti
fnstsw
rcr
jle
pop
movs
mov
inc
loopne
mov
jg
(bad)
pop
cmps
adc
push
mov
xchg
pusha
imul
adc
add
fidiv
or
jmp
or
leave
stos
sbb
jecxz
xlat
and
jmp
push
out
es
or
cmp
mov
or
pushf
mov
in
cmp
push
daa
sub
jmp
sub
push
and
mov
add
pop
pop
jae
mov
jge
rol
dec
mov
lds
aam
pop
push
loop
iret
adc
or
es
jbe
retf
sub
aad
jae
cmp
mov
jae
out
jg
stc
setb
jmp
setl
mov
sbb
test
aas
inc
mov
sub
and
or
push
ror
in
cwde
ret
push
pop
test
add
jmp
jl
ret
sti
add
or
dec
jge
pop
fmul
dec
cmp
jo
and
pop
dec
xchg
push
or
out
(bad)
aas
pushf
xor
lds
or
sbb
aaa
push
pop
or
dec
gs
pop
jmp
inc
ja
inc
mov
inc
daa
movs
push
push
pusha
inc
xor
test
sbb
and
xor
push
rcr
inc
mov
xchg
aas
or
adc
xchg
das
in
adc
cmp
adc
sbb
in
addr16
cmp
icebp
adc
mov
push
dec
lods
adc
jbe
sti
sbb
or
mov
in
push
add
(bad)
movs
das
inc
and
daa
enter
push
ret
add
inc
out
aam
xor
pop
inc
lods
mov
cmp
push
fisttp
sub
xchg
xchg
xor
ds
inc
sar
rcr
inc
clc
push
push
mov
and
shl
movs
fild
pop
sub
push
mov
iret
lock
mov
mov
cmp
add
pop
daa
mov
sub
adc
inc
lea
out
fscale
adc
pushf
cmp
gs
fucomip
xor
cld
push
nop
aaa
loope
add
dec
in
mov
inc
pop
sbb
or
and
sub
mov
jl
xor
push
dec
sub
stos
inc
or
mov
push
and
sbb
sbb
retf
leave
dec
je
mov
mov
pop
test
sbb
inc
js
push
scas
unpckhps
fild
ds
test
xor
mov
and
icebp
mov
sub
pop
dec
test
mov
data16
pop
and
mov
xor
(bad)
push
xchg
fisub
(bad)
sub
int
in
pop
inc
outs
add
sub
inc
mov
dec
inc
pop
ins
sub
push
repnz
clc
ds
add
imul
mov
neg
cmp
adc
xchg
je
dec
pop
cmp
jmp
push
test
jnp
cmps
add
stos
push
jae
jo
lds
mov
les
mov
fadd
or
adc
das
ficomp
jecxz
les
cmp
fwait
jne
add
inc
jo
adc
adc
push
push
add
jecxz
mov
popf
daa
push
or
xchg
pop
or
pop
shl
xchg
push
repnz
xchg
mov
aam
imul
cmp
es
in
pop
jae
pop
push
fcmovbe
sbb
adc
loopne
cmp
cmps
add
push
mov
xchg
repnz
test
ret
loope
mov
mov
sub
loopne
sbb
sub
mov
or
inc
xchg
mov
inc
inc
movs
dec
push
pushf
sub
cmp
xchg
movs
or
mov
fidiv
push
(bad)
lock
add
out
mov
sbb
add
push
inc
imul
cmp
push
xchg
mov
add
sbb
lock
add
je
push
or
hlt
sbb
push
cdq
loope
xor
mov
jle
jmp
xchg
mov
jge
daa
shr
arpl
and
xor
push
cmp
psrlq
je
xchg
fisttp
pop
sti
(bad)
pop
xchg
cmc
push
and
rcl
mov
add
dec
pop
fsubr
les
sub
nop
push
push
dec
xchg
popa
pop
xchg
push
sbb
or
cmc
pop
movs
xchg
(bad)
xlat
fiadd
das
sbb
push
or
loope
out
je
cmp
jo
cmp
repnz
pop
jmp
push
in
pop
mov
pop
(bad)
retf
leave
loopne
sub
push
pop
test
push
lock
imul
push
frstor
sub
fcom
loope
mov
xchg
mov
mov
int3
adc
mov
mov
add
inc
lahf
and
loopne
inc
daa
push
lahf
in
stos
jo
(bad)
cmp
jnp
pushf
adc
ret
retf
rol
mov
aam
mov
lahf
xchg
shl
sub
loopne
inc
xor
popf
jg
mov
nop
sahf
mov
jmp
outs
shl
sbb
lods
call
pop
test
add
mov
clc
pop
test
in
push
or
enter
jmp
add
mov
and
imul
or
jbe
sbb
cmp
jl
test
sti
aad
into
sub
gs
cmp
stc
inc
and
jge
pop
jp
mov
addr16
or
in
inc
xor
ret
xor
sbb
xor
sub
mov
test
push
inc
xor
sub
adc
mov
call
sbb
sbb
das
(bad)
sti
jle
inc
dec
jne
mov
cs
pushf
retf
js
adc
pop
js
icebp
repz
ret
loopne
add
pop
add
jg
mov
or
inc
add
lods
test
call
scas
scas
adc
add
fsub
sbb
sbb
add
mov
jne
cs
(bad)
and
lock
add
sbb
add
imul
loopne
mov
add
loop
retf
mov
push
and
js
mov
xor
inc
dec
pop
leave
cmps
(bad)
cmc
push
and
xchg
cwde
das
test
sbb
xor
arpl
daa
outs
mov
xor
loope
sbb
dec
test
out
rol
lahf
popa
push
and
shr
outs
sbb
push
inc
xor
push
xor
push
out
fcom
adc
lahf
ins
mov
pusha
adc
add
xchg
adc
cmp
and
jl
jo
std
add
jmp
xchg
add
lea
retf
stos
xor
push
xchg
push
mov
or
sub
jle
push
jbe
daa
loopne
call
out
pop
fcomp
sbb
enter
arpl
jo
mov
out
push
add
arpl
(bad)
sub
lods
push
dec
xor
dec
cs
lock
dec
ret
cwde
shr
out
in
loop
clc
test
jle
je
dec
sbb
jmp
ins
pusha
ret
jge
call
call
enter
jp
je
mov
jecxz
dec
add
xor
dec
js
jo
mov
push
xor
mov
mov
and
add
sub
pop
(bad)
je
add
sub
jmp
add
daa
jb
not
mov
adc
in
mov
mov
add
pushw
xchg
es
fcmovnb
jg
loop
and
cmp
clc
jge
jle
adc
cmp
sub
xor
sar
push
push
lods
pusha
dec
push
push
jl
cmp
out
popa
cmp
inc
inc
clc
gs
int3
mov
inc
bound
add
icebp
inc
in
add
adc
add
gs
jne
je
outs
jb
outs
sti
sub
add
add
jmp
xor
inc
push
dec
jg
cmp
mov
ret
adc
or
jmp
arpl
je
popa
outs
fs
gs
js
cmp
inc
jb
popa
sub
les
loop
or
retf
mov
ins
les
push
sub
outs
add
dec
ja
gs
add
cmp
inc
add
fs
inc
call
add
gs
sti
adc
inc
imul
fisttp
in
mov
adc
pop
inc
shl
pusha
pop
inc
push
push
das
pop
inc
dec
xor
add
outs
add
inc
scas
imul
add
cmp
add
loope
sti
out
or
push
popa
ins
jne
mov
push
adc
cmp
add
into
fst
mov
cmp
scas
sub
cdq
ret
in
test
(bad)
jae
imul
or
xor
push
fisubr
mov
and
inc
fnstenv
into
add
push
pusha
sub
push
xchg
push
fisubr
das
iret
cwde
ins
fndisi(8087
mov
iretw
xor
rcr
xchg
pop
stos
mov
jnp
push
mov
jbe
ins
(bad)
neg
push
adc
fld
and
icebp
add
adc
shr
push
inc
inc
ins
imul
mov
xor
cmp
add
mov
inc
lds
pop
adc
and
fcomp
test
shl
sbb
add
aad
and
mov
sbb
or
jne
cmp
inc
maskmovq
not
dec
imul
pop
sub
inc
sub
sub
scas
or
mov
sub
pop
aam
ss
or
push
cs
outs
fisttp
shr
xor
ficomp
arpl
pop
shr
cmp
outs
clc
inc
out
dec
mov
inc
outs
popa
bound
lahf
cmp
call
gs
popa
arpl
lds
mov
pop
jne
das
adc
scas
mov
dec
push
jne
ror
or
movs
(bad)
packssdw
push
cmp
ud2
add
dec
jle
lock
dec
mov
xchg
xchg
(bad)
dec
push
jns
enter
scas
add
repnz
jg
ins
outs
les
sbb
jo
fcom
jno
pushf
pushf
mov
mov
dec
inc
ins
cmps
out
mov
dec
aas
jge
inc
cmps
aaa
cmp
dec
arpl
jo
gs
pop
repnz
inc
mov
add
mov
inc
push
sub
push
stc
xor
push
jno
add
mov
arpl
or
inc
push
pushf
adc
retf
outs
ins
jnp
lea
cmp
sbb
outs
lods
fcomp
or
xchg
call
and
imul
inc
add
mov
shl
cmps
call
movs
push
mov
js
cmps
lds
push
inc
inc
pusha
add
cmp
dec
sbb
xchg
dec
das
cmp
sub
or
stos
pop
inc
and
pusha
aad
popa
mov
call
xchg
aad
aad
test
or
mov
shl
pop
pop
mov
add
dec
cmp
adc
sub
jo
into
dec
and
add
inc
pop
inc
gs
xchg
sub
jns
and
jecxz
xor
cmps
ret
xor
push
jne
gs
jne
jne
das
adc
sub
or
and
int3
loopne
push
arpl
add
xor
cmp
aas
imul
scas
lock
pop
push
inc
jne
data16
imul
add
fsub
inc
mov
ins
je
jno
jno
or
mov
or
add
enter
repz
or
out
add
add
popa
adc
cmp
jge
push
mov
dec
mov
xor
adc
(bad)
push
(bad)
scas
retf
enter
jne
or
dec
in
test
xchg
xor
push
adc
push
and
jne
ins
add
and
(bad)
push
imul
jl
fsubr
mov
sbb
fcom
inc
movs
or
popa
adc
xchg
jo
or
ret
fbld
jp
adc
xor
ror
mov
sti
add
push
int
stos
lock
or
push
stos
test
invd
ret
push
add
push
pop
mov
add
adc
lods
pop
loop
jb
cmp
or
mov
jno
inc
pop
fiadd
inc
add
leave
mov
push
std
stos
fwait
push
inc
dec
gs
pop
cmp
or
in
cmp
dec
popa
ins
and
out
test
jmp
out
ins
mov
test
add
sub
jb
test
push
imul
test
adc
js
stos
or
in
xor
push
xor
bound
jle
push
or
popa
dec
add
shl
push
xchg
dec
push
imul
dec
gs
(bad)
jmp
inc
mov
inc
(bad)
jne
aam
test
mov
inc
and
pop
pop
cmp
push
dec
outs
jo
ins
jno
xchg
(bad)
xor
xchg
mov
or
xchg
leave
xchg
dec
push
and
mov
outs
sub
daa
xor
test
or
mov
inc
popa
call
sub
aas
aas
add
in
and
dec
jge
(bad)
cmp
add
jo
int
cmp
(bad)
pop
pop
pop
inc
in
inc
mov
dec
adc
addr16
call
push
dec
add
int3
js
rcr
enter
pop
add
inc
adc
pop
dec
outs
add
cmp
pusha
outs
inc
dec
loopne
inc
cmp
push
pop
aaa
push
adc
dec
(bad)
(bad)
int
pop
test
mov
out
inc
push
in
dec
sysret
pop
add
sbb
enter
adc
arpl
retf
int3
add
mov
je
dec
addr16
jns
je
leave
push
push
call
xchg
sub
push
xor
xor
push
push
xchg
mov
xor
inc
or
sub
mov
inc
add
sbb
stc
adc
or
mov
mov
adc
inc
test
shl
sbb
inc
inc
test
daa
mul
nop
cmp
pop
loopne
add
ror
dec
loopne
stos
sub
add
outs
ror
inc
sub
mov
fnstenv
sbb
xor
push
push
add
jo
inc
jo
jmp
mov
xchg
aam
ja
and
js
cmp
aas
adc
xor
add
add
add
mov
cmp
mov
add
popa
(bad)
lods
cmc
sahf
jbe
aas
xor
jge
add
in
addr16
rol
(bad)
movzx
lock
inc
and
inc
outs
popa
test
sbb
sbb
push
adc
nop
add
add
push
inc
sti
or
add
and
or
xchg
int3
pop
es
push
add
mov
lea
mov
mov
adc
xor
mov
xor
sub
mov
mov
xor
clc
cwde
or
mov
and
or
push
pop
stc
pop
test
jle
add
pop
pop
int3
(bad)
mov
push
add
aad
(bad)
js
push
add
in
inc
test
add
push
(bad)
mov
and
or
ret
push
mov
outs
ins
loopne
push
stc
sub
data16
mov
lock
push
pushf
iret
dec
adc
push
cmp
call
push
dec
ror
inc
adc
or
add
jmp
js
dec
rol
xchg
ja
setl
mov
test
inc
pusha
adc
jg
or
add
loop
or
add
dec
mov
or
push
dec
shl
pop
mov
or
mov
cmp
add
cli
popa
xor
push
push
jmp
and
xchg
js
add
int
loopne
push
je
pop
push
mov
mov
in
call
sub
add
aad
ror
jmp
mov
or
add
or
mov
push
mov
cmp
adc
and
test
(bad)
fld
or
adc
sahf
adc
push
xchg
inc
inc
or
cmp
jbe
adc
mov
hlt
sub
sub
cld
inc
push
push
lea
sub
pop
shl
imul
movs
push
xlat
sbb
xchg
mov
stc
inc
mov
ins
xchg
call
cmp
nop
xchg
sar
xchg
and
shr
mov
sbb
mov
push
mov
clc
xor
add
cdq
shl
in
mov
push
mov
mov
mov
imul
lods
mov
imul
dec
xchg
fild
add
or
test
pusha
icebp
call
mov
dec
sub
jae
push
mov
pop
jnp
pop
stos
adc
ins
in
push
enter
add
add
jl
add
rcl
test
mov
or
push
push
test
movhps
mov
add
(bad)
mov
xor
inc
clc
adc
lea
cmps
cmp
outs
xor
mov
inc
mov
and
and
mov
dec
sbb
push
mov
push
mov
adc
pop
nop
sahf
push
sbb
pushf
push
dec
mov
dec
inc
aaa
xor
dec
(bad)
push
es
dec
cmp
dec
inc
adc
dec
leave
test
test
dec
dec
mov
and
push
std
or
inc
inc
rcr
stc
ror
mov
jb
ds
ret
test
je
js
fs
cli
dec
jo
push
or
push
mov
dec
pop
inc
mov
test
(bad)
and
push
mov
mov
mov
clc
mov
add
(bad)
in
and
inc
xor
add
(bad)
or
and
aaa
es
fmul
jno
and
mov
push
mov
pushf
mov
add
mov
push
ret
es
sbb
inc
mov
loope
bswap
shl
out
sub
dec
sub
daa
movs
or
push
test
inc
gs
fimul
jne
mov
cmps
clc
hlt
sbb
ret
cmc
mov
rol
lods
mov
loope
push
jmp
inc
mov
push
mov
add
in
je
cs
movq
jne
push
mov
inc
mov
fcmovnu
cmp
dec
mov
aas
in
sub
popa
js
cmp
jg
dec
adc
fdecstp
adc
(bad)
hlt
jle
test
add
xor
cmp
ins
or
and
sbb
dec
adc
and
sub
dec
mov
push
xchg
sub
sub
and
and
and
jne
(bad)
push
lea
adc
xor
je
dec
mov
(bad)
pop
mov
adc
xor
inc
or
jns
sbb
inc
(bad)
bound
dec
mov
cs
in
mov
sbb
jle
jmp
inc
jge
xor
mov
push
pop
(bad)
clc
sub
ja
or
ja
dec
hlt
(bad)
jg
sub
jmp
dec
inc
jne
ins
pop
xchg
mov
adc
pop
test
and
or
xchg
ret
(bad)
sbb
inc
inc
sahf
ds
popa
jl
inc
adc
je
mov
clc
pop
adc
or
lock
icebp
jmp
inc
mov
sbb
or
cld
jo
cmp
ds
mov
ficom
(bad)
cmp
je
cmp
jmp
rcl
out
jb
movs
xadd
movs
push
pop
pop
mov
and
popa
xchg
or
in
in
add
and
add
test
stos
cmp
or
cmps
jb
aaa
shl
test
xchg
xchg
inc
push
or
sbb
inc
nop
xchg
movs
xchg
pusha
pop
push
cmp
mov
xchg
shl
aas
cld
and
call
js
push
xor
punpckhwd
add
pushf
push
pop
fs
es
cs
in
sub
js
sbb
ins
xor
retf
xor
aad
sub
push
hlt
sub
dec
and
push
outs
mov
inc
mov
in
sub
jmp
ficomp
dec
cmp
jl
dec
cmp
arpl
jae
cmp
jne
sbb
or
out
stos
fisttp
or
sahf
add
mov
add
xor
(bad)
ja
pop
push
mov
fst
lahf
xor
aam
aam
add
out
cmp
pop
loopne
out
mov
clc
ror
inc
icebp
pop
cmp
cmp
push
in
std
(bad)
out
mov
inc
dec
fs
jb
outs
jae
popa
jb
mov
(bad)
jb
js
inc
imul
imul
jg
or
aad
add
push
inc
jne
je
add
pop
fbstp
mov
mov
in
pop
mov
add
fwait
hlt
call
push
dec
outs
je
jne
jo
gs
repnz
outs
(bad)
(bad)
xlat
mov
lock
add
jo
aas
scas
mov
lods
push
add
push
mov
stos
arpl
cmp
or
mov
(bad)
fsub
push
(bad)
ins
lods
push
fnstenv
xchg
ins
jle
cmps
push
movs
(bad)
fnstcw
jl
mov
mov
mov
scas
mov
jnp
cwde
mov
pusha
dec
bound
ds
mov
jo
xchg
shl
push
xor
scas
mov
xchg
in
inc
cmp
ins
adc
les
in
cwde
setl
or
movs
int
out
mov
inc
dec
outs
lods
push
pusha
js
adc
jae
ja
xor
dec
loopne
outs
sbb
push
inc
fdivr
ffreep
push
popf
add
sub
js
pop
test
sub
out
add
inc
or
add
pop
xlat
je
repnz
sbb
xchg
(bad)
add
push
mov
sub
ret
adc
es
cmc
xchg
or
xor
fld
(bad)
jo
mov
stos
outs
mov
outs
push
rol
outs
and
fwait
test
pop
pusha
das
nop
das
jns
das
scas
cmp
adc
or
jne
fs
out
loopne
neg
ins
sbb
add
push
les
es
aas
in
mov
push
fimul
and
push
push
rcr
test
repz
or
sbb
and
adc
and
pusha
or
pusha
or
mov
out
push
xor
jecxz
test
jnp
dec
stc
jne
adc
dec
mov
fnstenv
xlat
adc
nop
push
and
sar
daa
daa
ss
shr
and
adc
inc
push
push
pusha
pop
dec
mov
ds
rol
cwde
jmp
in
ins
mov
es
into
cmc
pop
xchg
out
jns
ja
mov
dec
adc
sbb
push
mov
fcom
rcr
push
or
push
push
or
pop
mov
stos
inc
add
ja
sbb
(bad)
inc
cmp
or
jecxz
loopne
and
pop
mov
int3
int
xor
into
or
(bad)
or
add
cmp
dec
push
jb
lock
lea
xor
and
or
mov
mov
or
mov
or
and
pop
pop
loopne
std
mov
mov
test
je
pop
aas
cmp
push
add
mov
rcl
mov
jp
(bad)
add
pop
out
iret
clc
push
ret
add
aam
sbb
dec
jmp
xor
pop
in
mov
loope
(bad)
sbb
movaps
mov
dec
fstp
push
mov
in
push
rcl
mov
scas
fist
outs
xchg
push
push
lods
mov
jo
(bad)
loop
test
ficomp
add
ss
lock
sub
dec
cmp
jne
cmp
fwait
jne
sub
pop
jp
jl
out
(bad)
push
lock
fldenv
or
mov
pop
cmp
je
mov
sub
repz
pop
add
push
inc
push
push
lock
mov
hlt
mov
push
pop
push
enter
adc
xchg
and
mov
jne
in
push
mov
or
hlt
mov
and
xlat
or
sub
mov
add
sbb
mov
inc
add
cmp
pop
jp
and
test
das
push
fcom
shr
test
xchg
out
out
scas
inc
outs
mov
jmp
add
das
dec
xchg
pop
fsubr
punpckldq
jl
push
sbb
add
sbb
push
test
mov
data16
mov
pop
addr16
fild
(bad)
enter
in
nop
xor
cmp
push
pop
push
bound
cmp
push
xchg
fisubr
in
dec
into
sti
pop
mov
repnz
popa
push
and
jle
cs
push
mov
jl
dec
push
aam
cmp
dec
mov
arpl
push
pop
jle
push
add
stc
fidivr
pop
test
les
push
nop
ds
loopne
or
test
neg
add
push
inc
imul
imul
add
(bad)
out
and
in
and
or
adc
adc
xor
sub
jmp
push
inc
outs
jb
ret
inc
imul
test
ret
jnp
rcr
es
gs
js
gs
pop
js
and
jae
dec
adc
dec
outs
stos
gs
cmp
(bad)
push
pop
pop
bound
add
add
push
or
xchg
fs
add
push
cmp
int
mov
call
adc
add
(bad)
std
add
cmp
outs
outs
jne
adc
or
xchg
ja
fcomi
ficom
push
lock
and
ficom
enter
sbb
nop
(bad)
cmps
in
or
push
cdq
outs
pushf
xchg
push
sbb
sbb
push
dec
fild
or
test
inc
pop
add
fisubr
adc
and
inc
jb
mov
sbb
aas
adc
(bad)
aas
dec
gs
popa
addr16
cmp
arpl
xchg
cmp
sub
hlt
inc
adc
or
push
fmul
push
out
push
inc
push
cwde
cmc
in
pop
(bad)
int
or
inc
jmp
and
pop
pop
popf
sub
xchg
mov
js
adc
add
mov
ret
mov
lods
bound
sbb
adc
push
cmp
add
ret
add
loop
push
push
sbb
inc
clc
gs
test
loopne
xchg
shr
mov
cwde
sub
mov
or
add
gs
loopne
add
jge
clc
out
sub
jmp
mov
dec
jmp
sub
adc
ds
pop
mov
ret
mov
loop
xor
sbb
mov
mov
jg
fadd
int3
adc
or
test
pop
inc
loopne
or
push
mov
nop
add
cmp
daa
jmp
pop
and
pop
(bad)
call
sbb
cmp
lea
sub
push
es
lea
int3
sub
fneni(8087
mov
fmul
jl
push
ins
xor
cmp
jle
and
clc
shr
xchg
add
ror
jl
fimul
js
mov
add
sub
call
xchg
shl
daa
ds
test
jmp
dec
lods
sti
out
les
shl
dec
cwde
sub
mov
inc
push
inc
mov
mov
clc
push
xor
cmp
sbb
mov
test
mov
lea
adc
sbb
xor
mov
jae
loopne
jl
sbb
out
pusha
xchg
dec
and
aam
jge
add
or
fadd
mov
and
mov
inc
fisub
and
inc
sbb
mov
mov
(bad)
and
shr
push
push
mov
das
(bad)
(bad)
call
and
pop
push
das
ds
jb
pop
sub
or
pop
pushf
xor
mov
js
xchg
xchg
test
xor
test
shr
mov
xchg
(bad)
daa
push
clc
add
or
push
inc
ret
fstp
push
and
pop
movs
mov
test
retf
int3
hlt
xchg
sub
cwde
mov
jmp
inc
rcr
out
xor
inc
inc
sbb
or
je
or
or
outs
pop
inc
nop
mov
movq
clc
sbb
das
dec
or
aam
pushf
ror
aam
rol
push
fwait
inc
lds
pop
xchg
std
push
or
loopne
outs
idiv
and
mov
test
pop
push
or
rcl
add
mov
sub
add
das
jle
sbb
cmp
sbb
mov
jne
in
fbstp
daa
or
add
mov
ror
adc
xchg
add
pushf
jge
jno
das
pop
pushf
jle
test
sub
or
repnz
cmps
shr
push
mov
push
iret
test
mov
stos
inc
push
mov
lods
ss
dec
jo
sbb
cmps
inc
and
outs
cmps
fiadd
dec
or
mov
or
sub
mov
jb
gs
mov
push
lods
push
mov
mov
repz
jo
cmp
sub
inc
test
adc
push
ins
inc
ins
fs
gs
ins
pop
mov
inc
dec
pop
push
cld
or
and
or
dec
pusha
cmp
inc
dec
outs
fbld
push
inc
test
inc
div
push
or
or
pop
cli
jo
jns
ins
dec
jne
rol
ja
sub
push
push
cmp
retf
bndstx
es
aaa
mov
sbb
fisttp
in
shr
pop
add
nop
js
sbb
aas
push
lahf
or
out
loopne
and
shl
cmps
mov
fadd
jne
mov
mov
jo
pushf
es
pop
cs
jmp
daa
sti
cld
je
push
(bad)
adc
adc
or
js
pop
das
in
push
jns
cmc
popa
fistp
xchg
popa
inc
callw
mov
mov
pop
cdq
or
mov
cmp
jo
xor
dec
in
outs
dec
or
or
inc
inc
ins
ins
outs
ja
and
add
xor
shl
mov
cmp
mov
mov
inc
xor
xlat
dec
or
in
(bad)
stos
dec
pop
inc
jno
xor
ins
dec
sub
loope
or
or
push
mov
cmc
push
adc
or
imul
into
jge
imul
in
retf
adc
sub
dec
push
pop
aam
scas
idiv
sub
scas
inc
outs
sti
mov
popa
retf
sub
or
loope
loope
mov
add
push
adc
scas
xchg
add
inc
imul
mov
mov
or
test
and
popa
lea
jo
dec
sbb
jo
xor
shr
push
call
jnp
pop
es
or
jno
lods
adc
sub
stos
pop
mov
or
(bad)
pop
pop
ins
rcl
xchg
pop
sub
adc
mov
hlt
mov
pop
ficom
mov
xchg
sub
int
push
push
cmp
test
sbb
jb
push
dec
push
test
les
dec
adc
add
inc
pop
and
push
inc
inc
push
push
mov
jo
or
sbb
shr
or
mov
push
add
loopne
cmp
test
xor
pop
into
(bad)
jmp
add
add
popa
xchg
inc
inc
add
add
mov
test
xor
adc
push
push
add
push
sub
fsubr
xor
pop
inc
pop
stos
inc
inc
gs
xor
adc
inc
pop
dec
ret
mov
dec
ds
mul
inc
push
dec
xor
mov
int3
add
pop
or
jbe
inc
inc
inc
lahf
shl
loopne
jo
inc
call
inc
sbb
push
or
cmps
es
mov
pop
dec
dec
mov
adc
movs
ss
push
push
sub
mov
sbb
adc
push
push
repnz
cmp
out
jns
nop
add
neg
or
mov
sub
inc
movs
test
sbb
jne
retf
mov
mov
jnp
adc
or
pusha
lock
icebp
nop
arpl
add
or
jae
add
setne
add
mov
inc
ret
outs
or
push
and
sub
adc
outs
(bad)
fld
dec
shl
mov
mov
adc
push
dec
pop
xor
mov
data16
ss
or
mov
and
outs
mov
test
jle
add
pop
shl
mov
push
xor
popa
not
mov
or
jl
adc
mov
cwde
push
(bad)
mov
pop
test
mov
xchg
push
fisub
ret
or
cmp
js
nop
push
cmp
xor
xchg
pop
out
push
in
or
mov
sub
jp
int3
jo
add
push
add
rol
daa
xchg
mov
pop
xlat
ror
int3
call
push
sub
jo
and
push
push
xchg
pop
jge
push
or
push
sahf
cmp
mov
and
xor
add
outs
mov
xchg
adc
fs
inc
js
das
hlt
into
dec
mov
loop
add
mov
mov
inc
rol
loop
neg
mov
cmc
ficomp
or
sbb
xchg
lods
test
or
xchg
test
jmp
cwde
sub
retf
inc
sti
call
or
cmp
popf
in
xchg
adc
pop
and
jne
and
hlt
sbb
adc
outs
mov
loopne
pop
xor
(bad)
ficomp
rol
xchg
mov
cmp
pushf
sar
pop
cmc
mov
sub
mov
add
cmp
arpl
mov
xchg
lods
arpl
arpl
sub
ror
dec
dec
into
mov
and
xchg
sub
gs
cmps
push
test
js
or
fbstp
sub
loope
shl
lock
sbb
cmp
je
sub
mov
push
sub
clc
cmp
addr16
dec
adc
enter
adc
cmc
lods
or
mov
sbb
xor
clc
xchg
ss
ins
add
adc
cmp
jb
pop
call
jge
pop
xor
out
or
and
push
inc
je
pop
outs
aas
jbe
pop
popa
sbb
adc
call
add
sti
adc
neg
cmp
fbstp
sahf
jl
inc
xor
adc
push
xchg
ret
xchg
jg
push
push
lods
sti
pop
stos
inc
in
mov
or
and
cwde
dec
jo
lock
sahf
add
jne
idiv
mov
clc
fisttp
cmp
push
fmul
jmp
mov
mov
adc
aad
ror
mov
jge
out
outs
xor
add
mov
cmp
int3
mov
jge
push
push
ss
clc
pop
fist
jo
add
xor
jne
cmp
cmp
fst
imul
xor
cld
movs
xor
idiv
add
xchg
and
daa
sbb
test
fwait
stos
xor
push
mov
jb
or
das
jo
push
cmp
jle
je
int
cmps
or
jl
inc
inc
cmp
jne
pop
push
rol
cld
add
dec
jne
xor
xchg
shl
(bad)
lock
xchg
iret
hlt
push
mov
inc
dec
int3
cmps
aam
sub
jle
bound
dec
or
cmp
inc
cmp
clc
pushf
cs
or
mov
adc
lods
enter
sahf
cmp
mov
and
call
nop
int
lock
out
mov
xor
mov
push
mov
movs
jmp
inc
xchg
popf
fcmovnu
pop
dec
mov
imul
mov
(bad)
(bad)
rcr
js
push
add
and
or
xchg
shl
inc
pop
jns
scas
mov
stos
dec
or
jl
rol
inc
jmp
das
cmps
mov
in
jns
nop
add
sub
dec
fs
and
push
dec
xor
inc
push
push
int
dec
imul
and
cmp
pusha
ret
addr16
or
sbb
add
fcomp
addr16
pop
add
cmp
mov
mov
pop
inc
bound
inc
pop
aas
icebp
sbb
adc
rol
or
shl
or
pusha
or
rol
push
and
cmp
fist
inc
add
cmp
ret
cmp
jne
daa
push
jecxz
ss
push
pop
xchg
cmp
add
arpl
lds
jl
push
cs
and
push
(bad)
out
jbe
in
imul
lock
js
xlat
lock
pop
ror
add
push
mov
mov
pop
mov
or
sbb
mov
sub
mov
or
mov
mov
push
loopne
mov
loopne
mov
push
cs
ror
sub
cmp
aam
cmovb
jo
imul
mov
outs
jne
fs
push
sbb
int3
(bad)
in
or
add
sbb
(bad)
or
dec
popa
js
inc
xor
adc
jb
and
adc
pop
fisub
test
mov
or
or
adc
or
(bad)
outs
lock
pop
add
and
popa
sub
adc
dec
pop
fist
sbb
or
dec
outs
add
test
jge
or
pop
add
call
aas
in
cmps
and
push
or
jae
rcl
cmp
jae
sbb
sub
sti
push
mov
cmp
cmovle
ins
das
jb
fiadd
data16
sahf
shl
xor
popa
inc
into
jae
movs
data16
adc
js
(bad)
retf
arpl
out
(bad)
cmp
mov
sub
mov
add
cs
jg
fld
sub
outs
je
inc
je
(bad)
jecxz
ins
daa
xor
xor
cmps
pop
ja
push
and
mov
adc
inc
add
mov
pop
and
test
aam
cwde
or
add
cmp
mov
push
mov
ds
pop
in
aad
retf
add
pop
sti
push
pop
stos
out
daa
push
add
aaa
dec
out
push
pop
jo
inc
cmp
(bad)
jg
mov
and
add
push
pop
mov
sub
push
ja
add
popa
leave
(bad)
cmp
test
pop
jmp
rcl
fsubp
jmp
or
add
test
and
add
push
sbb
adc
cmp
ror
xlat
jbe
and
cmp
call
mov
jge
push
dec
add
dec
outs
imul
js
cwde
mov
add
(bad)
fisttp
mov
call
ret
shl
mov
fild
and
cmps
add
pop
(bad)
setl
fmul
fisub
mov
inc
pusha
jmp
xor
push
jecxz
adc
push
xchg
inc
inc
jecxz
add
and
add
in
out
cmp
ret
add
or
pop
add
push
xor
jbe
stos
dec
jmp
mov
or
call
or
in
adc
adc
or
and
call
pusha
xor
mov
ror
mov
cmp
sbb
sbb
push
jge
cmp
mov
ds
mov
ret
jbe
data16
add
push
jmp
add
shl
rol
addr16
push
jae
inc
nop
clc
push
inc
adc
add
in
sub
int3
and
imul
or
mov
test
mov
movs
shl
mov
stc
mov
call
rcpps
inc
or
(bad)
jne
inc
inc
sbb
and
idiv
out
mov
pop
ja
pop
mov
sbb
mov
sbb
aad
mov
pusha
push
jns
pop
icebp
xchg
lock
jne
les
into
inc
out
sbb
cmp
test
mov
loope
lea
ror
sbb
sbb
xchg
pop
cdq
cs
mov
xor
and
and
jmp
mov
lock
ins
(bad)
jo
mov
xor
lea
mov
call
aam
adc
adc
movs
push
add
xor
je
lahf
push
or
xor
jp
ja
adc
mov
push
add
(bad)
and
pop
mov
mov
mov
mov
lea
mov
sub
xchg
fcmovu
movs
cmp
(bad)
cwde
cmps
ror
pop
lahf
and
mov
jg
test
dec
jle
ins
test
je
mov
ss
and
sti
cwde
add
lea
test
fs
add
inc
push
pop
fsub
cmp
iret
adc
aas
adc
(bad)
mov
and
leave
inc
xchg
mov
(bad)
xor
and
push
mov
mov
or
rol
mov
das
outs
out
test
out
mov
outs
pop
mov
cmc
ret
dec
movs
ror
push
adc
mov
add
or
xchg
shl
sbb
mov
xchg
and
cwde
shl
sbb
sub
rol
or
pop
scas
add
add
push
or
imul
stc
loopne
sub
out
mov
cmps
pop
call
mov
add
cs
inc
cmp
adc
adc
mov
fldenv
inc
and
out
popa
xor
sahf
shl
adc
outs
mov
outs
pop
outs
pop
fiadd
pop
xlat
pop
or
xor
es
and
cmp
xchg
push
movsx
jmp
(bad)
in
jmp
icebp
adc
add
jne
fild
adc
mov
xchg
push
out
movs
rcl
mov
sbb
mov
mov
xlat
sti
mov
lahf
mov
adc
pop
jle
jle
nop
xchg
xchg
nop
ja
adc
xchg
pop
xchg
nop
xchg
mov
(bad)
xchg
mov
inc
ret
(bad)
cwde
add
addr16
daa
lock
mov
mov
cmp
movs
outs
test
lds
js
cwde
push
pop
xor
lods
(bad)
xchg
cwde
pop
mov
cmp
mov
fs
sub
adc
mov
mov
out
cmp
pop
push
adc
pop
loop
add
xchg
hlt
sub
add
mov
ins
sbb
lds
or
mov
xor
xchg
push
xchg
mov
push
in
outs
add
add
(bad)
clc
(bad)
jp
push
inc
push
dec
outs
je
jne
jo
gs
jns
dec
inc
dec
sar
pop
push
mov
inc
dec
call
pusha
pop
jle
inc
outs
shl
add
or
imul
push
or
mov
or
sysenter
and
pop
or
ss
and
lahf
adc
adc
and
je
ins
imul
lods
or
lods
aas
jbe
xchg
cs
retf
pop
aaa
or
lods
push
ret
mov
div
xor
das
jns
add
jo
cmp
xchg
in
fnsave
xchg
(bad)
push
xchg
repnz
movs
lea
shl
push
(bad)
out
mov
push
mov
in
in
shl
xor
sahf
jmp
inc
jo
or
add
inc
test
lock
inc
adc
xlat
div
popa
icebp
inc
cmp
das
ins
int
ret
dec
or
addr16
dec
mov
dec
mov
push
dec
adc
mov
mov
dec
les
inc
call
lods
lds
sbb
sbb
adc
mov
sbb
sbb
outs
aaa
ja
cli
jge
push
int3
imul
lds
sub
push
(bad)
xchg
add
mov
push
sbb
jns
outs
iret
into
clc
rol
push
add
inc
adc
add
mov
sub
dec
dec
popa
dec
and
adc
sub
pop
or
pop
add
(bad)
bound
add
push
dec
imul
(bad)
fs
mov
hlt
push
ds
adc
push
jbe
sub
dec
jo
or
jo
or
jae
sub
imul
arpl
mov
and
sti
mov
add
sahf
or
mov
xor
jne
xchg
or
push
push
sub
add
sbb
push
sbb
push
adc
fbstp
dec
dec
ss
mov
xchg
or
rcl
or
or
mov
inc
or
push
hlt
call
hlt
xchg
mov
popf
or
xchg
and
jne
movs
div
pop
mov
mov
scas
mov
loopne
sub
xchg
loopne
pop
rcl
push
lds
dec
push
inc
fwait
je
out
dec
add
push
add
cmp
jp
pop
cmp
cmp
add
cmp
push
mov
cmp
xlat
loope
xor
mov
movs
dec
add
mov
add
xor
mov
mov
jb
dec
loopne
(bad)
call
inc
or
fiadd
fwait
loope
scas
inc
push
icebp
or
inc
push
push
idiv
inc
xchg
hlt
lahf
or
mov
and
mov
mov
sti
mov
push
adc
push
sbb
push
clc
add
adc
loopne
shl
aad
test
clc
es
pop
add
or
push
clc
dec
jmp
or
dec
imul
cmp
adc
test
test
mov
das
es
jmp
mov
movzx
sbb
sbb
mov
mov
or
mov
mov
sbb
pop
cmps
les
mov
push
cld
xor
test
push
and
rcl
cwde
push
and
pop
ss
xchg
pushf
pop
leave
in
call
jb
in
in
cmp
test
add
pushf
pop
ss
cmp
sbb
and
inc
(bad)
shl
push
xor
or
popa
ins
aas
fldlg2
inc
pop
xchg
lock
mov
mov
jecxz
inc
popa
adc
jb
(bad)
es
fld
xor
cs
xor
push
bound
jle
push
mov
sbb
or
movs
es
mov
into
jo
xchg
or
cmps
call
cli
jns
ror
test
enter
sub
imul
(bad)
clc
dec
xor
and
sar
popf
(bad)
jmp
inc
hlt
mov
mov
inc
lock
or
stc
pop
mov
and
lahf
imul
or
out
jo
loop
xchg
add
or
ja
xchg
loope
stc
dec
fbstp
dec
ror
fisttp
icebp
int3
mov
pop
adc
push
add
out
aaa
jl
push
push
daa
inc
retf
mov
and
inc
mov
adc
jge
inc
test
clc
xchg
jp
ret
pop
clc
cmp
sub
fisttp
jno
add
or
cwde
jbe
and
and
inc
test
push
pop
add
add
xchg
xchg
push
mov
shl
add
cmp
loope
xor
fnsave
test
xchg
cmp
mov
cmp
add
mov
mov
pop
rol
dec
inc
add
test
jbe
push
fcmovb
pop
xor
or
inc
add
push
add
adc
pop
inc
popf
dec
loopne
mov
pop
mov
inc
add
clc
bound
loope
pminsw
ret
aaa
sbb
sqrtps
jne
push
xchg
push
push
sub
push
jg
nop
ror
cmp
sub
xor
mov
mov
or
pop
push
pop
outs
fistp
push
cmp
sbb
push
int3
add
push
lock
mov
mov
sbb
inc
rcl
push
int
adc
add
mov
popf
aaa
mov
fs
in
or
cld
fwait
pop
push
scas
cmp
ja
test
imul
into
retf
push
xor
push
push
jge
outs
neg
ss
jne
xor
popf
and
and
or
sub
retf
dec
call
push
inc
sahf
call
inc
stos
mov
enter
test
or
mov
das
imul
(bad)
fsubr
sub
call
(bad)
jno
mov
add
jno
(bad)
mov
inc
shl
sbb
int3
aaa
rcl
add
inc
mov
pop
(bad)
popw
jmp
cmp
inc
out
(bad)
jmp
cs
add
pop
je
fcom
and
repnz
xchg
and
(bad)
xchg
inc
push
enter
or
or
dec
jne
iret
lds
cmp
fdiv
test
fimul
push
add
or
mov
cmp
pop
add
cmp
retf
mov
test
xchg
xor
inc
xchg
jnp
or
test
xchg
add
sbb
or
adc
dec
xor
xchg
adc
xor
adc
adc
adc
movs
or
xor
mov
mov
or
test
ret
xchg
mov
xchg
es
mov
mov
in
cld
add
loope
shl
enter
icebp
loope
mov
ret
push
stos
sbb
mov
pop
cmps
push
movs
push
pop
loope
xchg
mov
push
out
loopne
imul
and
add
mov
cwde
stos
dec
sub
jb
sfence
add
push
jmp
cmps
pop
or
jb
push
jmp
pop
bound
or
sbb
adc
sub
setb
fisub
and
push
mov
xchg
or
hlt
rcr
add
lock
pop
sbb
add
dec
cmp
add
or
push
xchg
add
or
add
cmp
jne
cld
fisubr
push
inc
cmps
cli
adc
mov
and
sub
add
mov
pop
xchg
mov
dec
push
lahf
dec
and
clc
jo
dec
aaa
mov
mov
loope
push
aam
push
mov
jne
ins
xchg
imul
cmp
jne
add
xor
add
imul
push
mov
or
outs
or
add
mov
xchg
ja
clc
test
push
jmp
mov
xchg
int
in
test
hlt
mov
mov
(bad)
and
lods
icebp
adc
movs
mov
repnz
dec
aaa
loop
xor
mov
in
add
mov
ficomp
adc
fdivrp
fild
xchg
mov
inc
cmp
jbe
dec
aad
or
enter
mov
add
jne
cmp
dec
or
xchg
or
out
test
cmp
loopne
cld
ror
jmp
ret
or
push
or
cmps
sub
loopne
outs
movs
mov
mov
pop
mov
dec
jnp
push
mov
mov
mov
add
xchg
ret
ret
fdivr
xchg
cmp
xor
sti
add
in
popf
lock
push
pop
popf
mov
add
pusha
shl
or
adc
stos
(bad)
in
mov
ret
cmp
add
cmp
dec
loopne
xchg
xor
cmp
mov
push
push
add
test
xchg
add
stos
pop
stos
imul
mov
or
fadd
stos
push
jns
jnp
rol
neg
mov
adc
scas
jbe
out
xor
xchg
inc
repz
les
rol
pop
sbb
ss
int3
push
cmp
das
lods
adc
enter
je
adc
dec
(bad)
repz
dec
repz
shr
and
ror
inc
mov
repz
fsub
repz
mov
imul
cmp
jb
add
hlt
hlt
(bad)
(bad)
adc
mov
ss
das
mov
test
pop
pop
cli
retf
mov
in
or
test
aaa
and
icebp
add
xor
outs
ins
lods
sbb
js
sub
cdq
sub
inc
inc
and
xchg
ds
mov
cli
xchg
dec
fs
movs
mov
in
sbb
call
jb
and
mov
mov
jo
xchg
in
imul
cs
mov
inc
bound
das
ins
scas
jecxz
sbb
inc
movhps
or
add
and
adc
sbb
or
dec
into
xchg
(bad)
addr16
push
adc
je
pusha
pop
dec
or
and
test
ficom
and
sbb
fld
mov
jmp
pop
jg
fidiv
fld
sahf
out
pop
jmp
adc
push
aaa
pop
sub
out
xchg
int
pop
shrd
jg
jg
sub
mov
loop
xor
jg
pop
add
outs
je
arpl
pop
push
pop
xchg
bound
jg
and
jg
push
xchg
add
pop
mov
pop
jg
jne
nop
push
jg
adc
push
jg
or
add
sahf
stos
neg
test
movs
loop
inc
pop
clc
mov
jge
cmp
mov
sahf
pop
gs
mov
xor
movs
xlat
test
inc
out
scas
add
inc
add
movs
lea
mov
mov
push
mov
mov
or
cmp
ret
adc
sbb
inc
cmps
pushfw
test
sbb
add
retf
and
push
fwait
jne
mov
sar
call
lahf
fwait
and
pop
mov
es
sbb
add
(bad)
mov
ret
sbb
loopne
pop
dec
mov
xchg
or
add
mov
out
add
sub
xchg
lock
sbb
mov
lods
shl
dec
hlt
jbe
add
das
mov
ret
xor
and
icebp
ds
aad
outs
daa
loopne
or
ffreep
cmp
adc
ins
mov
and
ja
daa
cmp
pop
mov
(bad)
jmp
inc
fmul
ror
inc
(bad)
clc
cmps
fwait
loope
mov
daa
sub
mov
test
inc
clc
scas
add
iret
repz
sbb
push
sub
js
les
or
adc
pusha
mov
adc
cs
dec
in
mov
xor
pop
pop
xor
call
mov
xor
xor
sub
pusha
leave
rol
sbb
aad
add
push
xchg
pop
add
dec
daa
push
and
scas
inc
(bad)
jae
aaa
adc
push
jmp
ffree
inc
repz
sbb
jl
ins
hlt
jmp
in
add
dec
cmp
sbb
lds
xchg
jo
and
pop
and
in
mov
mov
push
sub
les
add
les
and
mov
fsubr
ins
imul
dec
test
inc
xchg
pop
mov
mov
outs
push
mov
mov
fs
seta
in
jl
sbb
dec
sub
jmp
cs
aas
movs
mov
nop
shl
sub
and
pusha
jo
gs
xchg
dec
pop
in
dec
lock
pop
xlat
push
xor
fdiv
xor
fmul
jb
inc
cmp
pop
clc
or
jle
(bad)
fmul
add
jmp
ror
mov
mov
dec
loopne
mov
xchg
clc
add
xchg
add
sub
pop
imul
ins
mov
sbb
in
movs
inc
out
mov
adc
fwait
(bad)
(bad)
outs
fimul
fistp
push
sti
add
stos
lea
cmp
scas
into
adc
push
loop
push
loopne
inc
retf
mov
popa
add
mov
ins
cs
xchg
add
add
lds
inc
adc
mov
add
dec
jne
ins
adc
adc
fdivr
add
add
shl
or
ds
imul
adc
inc
add
cmp
ds
xor
(bad)
loop
and
xlat
das
add
or
cli
fdivr
inc
dec
jecxz
inc
or
lock
outs
ins
and
fcom
and
jo
add
mov
jmp
inc
adc
lock
mov
inc
call
mov
jno
mov
add
jne
repz
add
add
or
fcomp
push
mov
jmp
add
inc
jmp
sbb
add
in
and
ins
aaa
or
push
mov
push
icebp
push
mov
hlt
leave
lods
mov
and
push
in
add
out
lds
addr16
das
call
mov
push
(bad)
mov
fld
add
add
lock
jns
and
inc
jo
outs
js
add
js
push
xchg
inc
cmp
loope
mov
shl
retf
jmp
xor
in
pop
adc
jne
push
or
mov
test
fsubr
pop
mov
mov
jo
jo
inc
jo
push
cmp
add
ja
out
jo
xchg
mov
xchg
xchg
pusha
adc
sbb
mov
aam
sub
adc
sub
mov
mov
inc
outs
mov
dec
test
les
pusha
mov
test
test
xlat
dec
push
sbb
push
inc
addr16
push
sub
inc
jb
fsubr
mov
cmp
je
jbe
inc
fsubr
lea
add
outs
fnsave
and
mov
cmp
cld
and
cs
xor
jle
adc
jle
fisttp
mov
in
push
mov
push
loop
inc
out
jbe
icebp
data16
jl
adc
mov
push
clc
jge
adc
outs
mov
push
adc
jo
dec
add
fsub
out
sub
or
push
push
sbb
push
je
dec
push
movs
sti
fisub
movs
pop
push
ins
cmps
sub
es
mov
push
out
xor
mov
scas
cwde
mov
jnp
mov
push
ds
pop
fs
arpl
call
cmps
mov
enter
ds
dec
test
xor
fiadd
push
pop
jo
xchg
cmp
lock
in
dec
mov
push
enter
pop
pop
jle
jbe
xor
push
dec
dec
aam
cmp
dec
mov
sbb
dec
add
imul
test
dec
es
test
les
xor
sbb
nop
push
scas
push
lea
(bad)
int3
div
mov
adc
in
add
xor
(bad)
and
or
imul
dec
sahf
out
mov
dec
push
es
adc
or
fild
outs
jb
sub
or
dec
popa
js
in
mov
std
aas
or
inc
gs
jne
je
or
dec
inc
fmul
std
popa
dec
outs
inc
xor
gs
xor
(bad)
push
xor
je
jb
(bad)
imul
arpl
je
ins
ins
push
popa
(bad)
pop
ror
cmp
or
adc
jb
outs
jae
popa
mov
outs
aam
outs
js
cmp
push
or
sbb
push
(bad)
ins
jo
imul
inc
push
jae
dec
popa
cs
sub
push
gs
call
cs
adc
pop
shl
pop
push
inc
jae
outs
(bad)
add
sbb
push
add
push
inc
add
jmp
jae
sar
dec
add
add
stos
push
and
bndstx
jl
add
add
sahf
push
dec
loop
dec
js
imul
daa
add
pusha
jae
cmp
mov
or
gs
data16
xor
pop
adc
rcr
and
sbb
test
pop
fiadd
fwait
and
add
sbb
xchg
jne
loopne
jb
gs
imul
mov
call
cmp
inc
outs
popa
bound
push
lock
xchg
cmp
scas
aad
xchg
test
or
pop
inc
push
add
or
cwde
mov
into
or
mov
(bad)
mov
or
push
xchg
sub
xchg
add
mov
inc
aad
sbb
mov
xchg
(bad)
fist
dec
jl
or
outs
clc
add
xor
add
movups
cmp
dec
add
cmp
cdq
or
pop
mov
add
int3
or
lock
mov
xchg
gs
mov
or
(bad)
fcomp
inc
inc
or
mov
pop
dec
push
jae
fstp
fst
pop
dec
shr
js
jmp
or
adc
ror
or
fisttp
pop
jp
data16
nop
cmc
push
xor
xchg
mov
ret
xchg
cli
add
loopne
movzx
or
jno
xor
mov
dec
(bad)
push
clc
sbb
pop
je
lea
mov
pop
push
mov
mov
xchg
inc
and
and
mov
push
jo
sub
dec
aas
add
out
mov
movs
imul
lods
dec
xor
shr
pop
rol
js
adc
out
xlat
mov
adc
xor
push
mov
push
sbb
les
or
mov
jle
inc
ret
push
int3
xlat
push
cmp
mov
mov
xor
cmp
ds
cld
fld
ret
aas
add
pop
jp
mov
add
mov
ds
inc
xor
(bad)
call
and
mov
cmp
je
test
jle
push
inc
in
setle
add
mov
jne
(bad)
and
inc
mov
dec
dec
cli
mov
pop
ret
idiv
or
and
push
xlat
and
push
ret
jne
pop
jl
mov
jle
ds
mov
es
ror
sub
inc
xchg
int
xchg
push
push
ror
sbb
dec
cld
adc
cmp
push
fdiv
jle
mov
out
sbb
sbb
mov
add
mov
dec
imul
(bad)
test
mov
sub
add
retf
retf
dec
pop
lahf
fadd
lds
pop
ret
lds
lea
mov
or
fadd
adc
push
xchg
in
fnsave
jl
mov
jo
cmp
call
ja
mov
std
leave
setne
test
add
push
adc
ret
sbb
(bad)
hlt
std
mov
ret
push
pushaw
inc
stc
or
add
add
sbb
add
fadd
inc
cwde
call
pushf
mov
fs
sbb
xchg
sub
dec
jnp
test
es
adc
cmp
sbb
mov
pop
xchg
(bad)
call
clc
rol
jle
cmp
enter
ds
push
jnp
and
push
out
rol
sub
js
nop
cmps
pushf
rol
push
pop
mov
or
mov
adc
je
mov
pop
ficom
aas
or
sahf
mov
jle
out
je
fst
add
test
adc
mov
add
test
xchg
imul
hlt
mov
mov
clc
dec
daa
jnp
mov
sbb
clc
je
push
mov
movs
xchg
cmp
pop
jne
push
jge
adc
jl
and
mov
popa
xor
sub
or
mov
adc
ret
or
add
inc
jmp
cmp
push
pop
dec
or
sub
aas
(bad)
cmp
pop
add
mov
or
jne
stos
add
xchg
mov
add
aaa
xor
data16
rol
test
mov
cmp
jne
cmp
cwde
add
jl
cmp
ins
mov
int3
ror
ins
mov
cmp
in
push
inc
test
inc
mov
sub
inc
inc
push
inc
dec
cmp
mov
cld
pusha
add
stc
pop
das
add
jb
or
or
push
pop
sub
dec
xor
dec
and
aaa
loop
dec
add
cwde
pop
popa
jb
scas
pop
or
jbe
sbb
push
aas
sar
ins
sub
add
sub
test
in
sbb
outs
pop
cmp
ror
sub
data16
call
cmp
push
pop
ret
gs
rol
dec
jecxz
ret
push
inc
mov
jne
inc
outs
outs
jecxz
xor
dec
std
add
popa
xchg
cmp
push
or
outs
mov
and
repnz
fsubr
push
dec
test
shl
aas
pushf
pushf
clc
add
imul
push
push
inc
in
outs
mov
fild
or
sub
xchg
ins
or
inc
loope
mov
(bad)
imul
add
or
js
or
stc
mov
add
sti
xor
inc
ins
push
and
test
and
lahf
adc
arpl
je
mov
sbb
lock
ret
or
fistp
push
pop
push
out
inc
and
push
outs
sbb
and
jae
push
mov
or
adc
daa
dec
or
scas
scas
inc
dec
add
leave
loop
sub
lea
pusha
inc
cwde
shr
pop
mov
and
cmp
mov
sub
icebp
test
jo
add
xor
mov
cs
fs
mov
add
sub
xlat
inc
or
add
stc
or
push
adc
adc
mov
fs
scas
xchg
addr16
push
or
or
in
popf
push
ins
and
fdivr
push
es
and
mov
scas
scas
jp
data16
add
push
add
mov
popa
mov
mov
adc
imul
lods
out
inc
(bad)
dec
cmps
jmp
cs
dec
lea
pop
aas
mov
pop
mov
or
popa
call
gs
dec
jecxz
fistp
push
sub
call
jl
add
fadd
movs
cwde
sbb
outs
sbb
nop
or
ja
push
mov
dec
or
sub
dec
or
mov
(bad)
es
iret
mov
mov
sbb
push
hlt
jne
pop
adc
mov
ja
nop
cmovs
call
dec
outs
fsub
sub
mov
daa
inc
mov
ins
adc
imul
sbb
sbb
jo
push
add
cmp
push
(bad)
pop
mov
les
(bad)
push
inc
xor
add
faddp
aam
(bad)
fiadd
test
and
ins
mov
test
les
dec
pop
div
xor
sub
push
adc
int
add
add
out
(bad)
push
pop
das
push
loop
iret
scas
es
mov
inc
outs
outs
ins
adc
xchg
sub
push
outs
addr16
sbb
pop
push
sub
xor
les
sbb
xor
aas
pop
add
fsubr
and
pop
pusha
das
cmps
push
sahf
pop
shl
push
xchg
aas
or
xchg
jo
sahf
or
mov
int3
pop
repz
add
dec
push
pop
xchg
xchg
xchg
pop
lea
mov
cld
mov
adc
dec
imul
jae
addr16
mov
and
test
pusha
mov
or
ins
and
ror
jne
sbb
add
mov
aas
jp
pusha
imul
mov
dec
je
fdiv
cmps
pop
or
clc
pop
dec
out
mov
jns
fidivr
sub
daa
add
aas
dec
mov
xchg
dec
and
mov
cmp
mov
inc
in
add
adc
jne
loope
fsubr
sbb
std
mov
push
push
gs
arpl
mov
sbb
mov
push
sbb
cmps
fisttp
es
mov
rcl
lock
outs
jae
bound
jae
inc
mov
faddp
xor
mov
adc
jno
xchg
pop
cdq
imul
ret
add
scas
leave
sti
or
fsubr
xchg
dec
sub
pop
or
inc
mov
pop
dec
jb
outs
fs
test
aaa
test
loopne
sub
test
lds
jb
adc
pop
lds
ror
lods
xor
dec
test
jae
pop
or
push
adc
fmul
ret
(bad)
pop
or
or
add
mov
sbb
adc
std
and
mov
fisub
cmc
jo
retf
mov
std
push
cli
xor
or
dec
lfs
sbb
inc
arpl
ja
or
or
ja
jae
bound
push
lods
aad
xchg
push
sub
inc
lods
mov
test
jb
jns
jo
pop
fwait
xchg
les
nop
arpl
adc
adc
sbb
lods
add
add
inc
out
push
xlat
push
fs
push
cmp
dec
sub
retf
lock
jmp
seta
ss
inc
sbb
xor
scas
js
xchg
xchg
out
inc
push
mov
push
jb
cmp
sub
int3
loopne
mov
test
sub
ins
jmp
js
push
cs
loope
sbb
and
inc
cmps
push
sub
(bad)
jge
mov
popa
pop
stc
in
pop
(bad)
and
test
cmp
mov
mov
loopne
add
inc
add
cmps
fidiv
push
cmp
sbb
fdiv
test
hlt
dec
cmps
jl
inc
xor
lods
rol
xchg
fcom
cld
dec
xor
adc
dec
jne
(bad)
xchg
xchg
popa
adc
loopne
mov
mov
add
mov
and
outs
clc
mov
mov
out
lods
leave
mov
or
and
inc
mov
sub
inc
or
loopne
sub
mov
fld
ror
jno
push
leave
or
add
add
ja
ret
inc
xchg
lea
mov
dec
sub
sbb
pop
ja
out
(bad)
push
adc
add
mov
cs
fistp
jo
inc
sti
popf
or
pop
mov
inc
inc
iret
ficom
ins
push
mov
mov
iret
das
jle
adc
lea
xor
nop
sbb
sbb
inc
aas
stos
mov
or
cmp
sbb
loope
iret
jae
sbb
shl
fiadd
cwde
test
push
push
fcompp
in
outs
add
add
inc
out
push
adc
fild
xor
test
pop
adc
or
lea
push
mov
shl
repnz
adc
sbb
push
gs
imul
add
imul
push
xor
test
pop
sub
popf
pop
(bad)
jmp
dec
outs
fs
xor
outs
(bad)
jle
or
scas
or
push
jne
adc
sbb
push
fs
xchg
jl
or
jnp
jbe
mov
ror
pop
imul
(bad)
or
fld
iret
mov
sub
sub
mov
cmps
dec
outs
and
sti
lods
fs
stc
add
xor
(bad)
xor
lds
add
xor
lock
adc
dec
and
mov
loopne
cld
fs
and
adc
fnsave
sbb
xchg
sbb
aas
pushf
jl
adc
xchg
jo
sbb
outs
jae
stos
(bad)
rcr
sbb
outs
push
imul
das
cmps
push
xchg
ss
mov
sbb
repz
pushf
pop
push
push
nop
push
cwde
xchg
out
call
clc
int
pop
add
data16
push
push
sbb
sar
dec
push
add
mov
andps
test
adc
mov
and
(bad)
sub
and
mov
xchg
and
ins
pop
mov
push
and
inc
or
ins
sbb
sub
inc
gs
or
(bad)
adc
cmp
jmp
add
inc
pop
sbb
sub
jae
loopne
ja
add
js
pusha
and
or
popf
clc
cs
or
sbb
add
add
push
dec
add
xchg
pop
ins
jg
dec
mov
pop
verr
movups
cwde
pop
in
inc
sbb
(bad)
push
add
cmps
add
mov
sbb
add
mov
xor
scas
test
sbb
mov
or
movs
push
out
mov
adc
and
stos
and
sbb
inc
cmp
mov
lock
push
arpl
add
movs
pusha
mov
es
add
gs
shl
fbld
push
cs
xor
(bad)
fsubr
shl
movs
mov
pop
jmp
ror
enter
xchg
fnstcw
dec
pusha
mov
aam
xchg
retf
xchg
repz
cmp
retf
xchg
xchg
xchg
xor
push
xchg
sub
cmp
sub
cmc
aaa
inc
mov
scas
push
inc
xchg
(bad)
cmp
in
cmc
scas
pushf
inc
push
mov
je
mov
xor
ja
mov
out
or
les
inc
lock
es
in
inc
sbb
push
adc
test
inc
pop
cmp
aad
push
add
or
stos
adc
pop
popa
in
mov
xchg
xchg
inc
stos
push
mov
jnp
lods
cmp
mov
iret
add
xchg
mov
push
js
ja
add
push
jl
dec
add
add
fcom
and
cs
adc
loopne
das
or
add
add
enter
ins
sar
pusha
jmp
mov
loopne
fidiv
aas
adc
scas
xlat
xor
push
inc
(bad)
dec
aaa
or
mov
add
retf
xchg
or
and
test
xchg
pop
pop
sbb
pop
push
fmul
xor
(bad)
clc
retf
sar
adc
scas
push
ret
add
ret
xor
repnz
push
repz
lea
mov
mov
retf
adc
cmc
and
loopne
or
xor
xchg
aas
pop
or
aam
xchg
mov
jno
(bad)
mov
cmp
jg
xor
adc
dec
mov
push
daa
dec
or
retf
sbb
mov
test
sub
mov
or
jbe
mov
shl
daa
pop
cmp
jo
jo
test
mov
sub
pusha
sbb
add
je
pop
dec
shl
mov
jmp
inc
sahf
pop
jl
or
sub
jmp
cmp
jo
out
pop
and
movs
ror
mov
sbb
push
jne
gs
pop
rcl
mov
mov
sbb
adc
js
inc
adc
(bad)
dec
pop
cmp
or
mov
and
jnp
xor
aad
adc
(bad)
push
push
mov
loopne
xchg
adc
inc
sbb
sbb
cmps
mov
xor
js
ins
pop
push
mov
pop
jne
pusha
adc
dec
hlt
jge
xor
push
rcl
dec
fs
jb
inc
xor
add
and
cld
add
imul
sar
push
outs
add
sub
xor
mov
mov
dec
aas
sahf
inc
push
mov
or
mov
inc
sahf
or
dec
lea
scas
je
xchg
push
stos
ds
daa
or
outs
ja
jle
mov
idiv
jge
pop
or
sub
push
popf
and
add
pop
(bad)
imul
cmp
sub
or
dec
ja
fistp
test
mov
adc
push
hlt
mov
imul
cwde
adc
dec
test
jno
xor
mov
outs
xchg
dec
mov
push
pushf
sub
mov
adc
shl
daa
mov
sti
adc
ffree
fwait
push
mov
jns
pop
scas
and
jno
xor
and
repz
popa
mov
add
pop
adc
dec
clc
mov
mov
cs
out
loop
mov
(bad)
push
sub
jae
sbb
xchg
cmp
aad
adc
cmp
xchg
xor
xchg
sbb
fld
jne
adc
add
rcr
(bad)
jmp
mov
out
ins
xlat
test
inc
add
es
(bad)
push
cmp
or
(bad)
fs
or
inc
ins
call
push
bound
pusha
jae
es
push
pusha
mov
add
or
mov
xor
mov
rcl
and
dec
sub
lea
repz
call
inc
mov
mov
cmp
or
sub
pop
aas
fidivr
inc
aas
fnstenv
add
or
push
cdq
retw
adc
xor
outs
fisttp
mov
ins
add
call
adc
adc
scas
ins
daa
icebp
sbb
(bad)
js
push
or
mov
mov
daa
or
ja
adc
mov
es
scas
inc
push
cs
push
xlat
jo
mov
xlat
pop
rcr
lahf
js
cmp
add
cmp
cmp
pusha
scas
mov
mov
inc
stos
call
lods
xor
mov
(bad)
daa
pop
das
ds
push
or
and
dec
sbb
mov
sub
ins
ins
xchg
pop
sub
dec
pop
dec
push
movs
movs
pop
dec
sti
pop
mov
ins
cmps
adc
jl
mov
push
mov
jnp
xor
cwde
mov
ja
jnp
pusha
dec
into
pusha
ds
xchg
push
mov
pop
pop
xchg
push
add
jmp
cmp
inc
inc
arpl
gs
rcr
push
pop
add
les
push
retf
push
or
add
add
adc
sti
das
adc
inc
fimul
mov
lods
push
cs
add
cwde
xchg
cmp
fisttp
fs
gs
cdq
stos
out
test
stos
sub
adc
in
loopne
or
imul
jo
push
and
add
outs
imul
mov
dec
jb
jae
push
add
leave
movs
int3
dec
out
jbe
add
sbb
mov
arpl
or
jle
cmp
and
xor
xor
xor
ins
ins
das
(bad)
pop
in
sub
adc
or
and
pop
sbb
cmp
pop
dec
push
stos
std
fsub
(bad)
bswap
je
in
(bad)
push
clc
sub
pop
pop
and
pop
adc
cmps
adc
in
push
inc
nop
fiadd
add
nop
dec
cmp
add
out
xor
push
loop
out
push
jle
rcl
push
sahf
les
or
sti
push
sbb
and
adc
(bad)
push
xor
sub
out
or
add
inc
cdq
jmp
xor
int3
jmp
daa
sbb
data16
add
push
aas
in
in
es
das
sub
push
movs
mov
in
adc
out
scas
fidiv
stos
out
scas
xchg
shl
repz
push
test
mov
movs
or
scas
(bad)
sub
mov
xor
add
jp
aad
push
xchg
mov
(bad)
fmul
(bad)
stos
pushf
test
sub
sbb
sbb
jns
sbb
ins
push
jb
dec
dec
popa
outs
fs
jecxz
test
push
jle
jp
sub
test
repz
jmp
and
pop
jae
inc
push
stos
gs
popa
pop
call
inc
mov
add
and
jle
dec
mov
adc
ins
dec
add
outs
inc
ins
imul
xor
mov
jge
jmp
or
jne
outs
ja
push
mov
mov
stos
(bad)
rcr
test
or
fisttp
in
hlt
mov
xlat
add
mov
lods
jle
adc
xchg
adc
outs
mov
cmp
and
push
cmp
jne
cmp
mov
fisttp
lahf
jl
push
dec
or
aas
sub
lock
les
and
cmp
inc
mov
push
sbb
jl
jbe
push
jl
fnstsw
add
push
sbb
lock
xchg
xor
fistp
push
or
outs
and
cmps
mov
enter
shr
test
xor
ds
sahf
neg
push
push
cmp
push
xchg
(bad)
div
fistp
repnz
popa
push
and
idiv
cs
push
dec
push
aam
cmp
dec
mov
pop
jle
out
ins
mov
push
add
sahf
dec
es
test
pop
idiv
les
push
nop
or
ja
jns
test
test
cwde
pop
test
mov
pop
lock
sahf
dec
sbb
adc
js
sub
jl
adc
xlat
sti
adc
or
push
sub
jne
push
sub
cs
dec
jae
gs
ja
cmp
dec
push
outs
inc
inc
(bad)
adc
call
ss
std
std
retf
add
mov
push
dec
call
jo
stos
es
shr
xor
cmps
imul
bound
mulps
pop
ja
dec
(bad)
bound
dec
add
jnp
pop
pop
(bad)
inc
xchg
xor
imul
addr16
jmp
retf
sbb
cdq
sbb
add
inc
sbb
adc
xor
inc
dec
push
push
sub
push
dec
(bad)
lock
or
out
cmp
fs
ss
add
pop
fdiv
add
sub
and
adc
stos
shl
enter
dec
cs
pop
dec
sub
mov
push
push
sbb
mov
mov
xchg
sbb
popa
sub
cmp
sysret
adc
aaa
call
gs
push
cmp
or
lea
(bad)
fnstsw
and
gs
push
push
push
jbe
push
outs
mov
and
call
and
jbe
lahf
dec
add
mov
or
xor
inc
dec
xor
rol
mov
(bad)
pushf
call
jecxz
test
das
aas
scas
cmp
cmps
push
fist
xlat
add
push
sub
das
scas
(bad)
or
popa
dec
pop
pop
(bad)
div
mov
(bad)
push
xchg
pop
push
add
jnp
les
jb
mov
or
movups
prefetcht0
(bad)
add
or
add
sbb
je
sub
rol
pop
inc
push
add
call
add
or
outs
jo
jb
jb
int3
cmp
cmp
or
arpl
xchg
rol
cmp
push
push
push
and
ja
nop
sar
cs
shr
mov
add
mov
xchg
adc
push
gs
bound
cmps
pop
daa
sbb
xchg
cmp
cs
add
add
in
enter
sub
mov
retf
aaa
movs
inc
sbb
inc
dec
push
push
dec
ret
pop
xchg
ror
ins
sub
outs
sbb
pop
aad
out
xchg
dec
add
popa
add
xchg
mov
mov
int3
pop
dec
frstor
add
cs
int3
das
repnz
in
inc
pop
xchg
cwde
xor
pusha
ds
mov
sbb
cmp
inc
inc
clc
gs
mov
imul
push
(bad)
or
and
push
mov
push
and
mov
fdiv
or
aas
shl
ja
and
add
add
inc
hlt
jl
ss
sbb
inc
cmps
nop
ins
dec
(bad)
sbb
sub
js
inc
repnz
pushf
jo
scas
imul
imul
mov
xchg
inc
es
dec
inc
xlat
cmps
adc
adc
pusha
pop
or
push
(bad)
jmp
mov
push
dec
fisttp
mov
mov
mov
ins
sar
pop
int3
mov
lea
mov
dec
mov
adc
cmp
adc
imul
mov
cmp
and
ret
adc
mov
mov
push
mov
xor
jne
and
xchg
or
push
jmp
sub
call
test
out
pop
xor
(bad)
scas
lea
push
xchg
inc
lods
fs
mov
hlt
mov
rol
jb
or
(bad)
ds
inc
pop
or
(bad)
or
mov
mov
or
(bad)
adc
pop
dec
inc
push
xchg
loope
adc
mov
data16
push
call
xor
sub
dec
gs
ins
mov
adc
int3
inc
add
mov
add
aaa
pop
xor
setp
(bad)
fild
(bad)
pushf
push
add
pushf
(bad)
or
sub
test
mov
pusha
mov
movlps
push
xchg
cmps
inc
je
xchg
ror
add
xor
pop
add
scas
bound
fs
and
outs
sbb
adc
bound
mov
jb
rcl
or
push
pop
fisub
sbb
mov
adc
mul
or
dec
and
test
je
add
in
inc
int3
mov
pop
dec
popf
push
pop
(bad)
ins
push
xor
rol
xor
or
xor
into
jmp
sbb
sbb
test
jno
jno
push
out
rcr
xor
je
rcl
xor
dec
fimul
pop
adc
addr16
add
adc
xor
mov
fimul
aad
and
sbb
fwait
shl
or
movs
add
ror
mov
fist
(bad)
inc
(bad)
or
dec
inc
inc
mov
in
pop
inc
cmp
add
rol
mov
test
push
dec
(bad)
xor
and
fsub
lea
test
jo
outs
adc
or
mov
icebp
mov
adc
dec
push
frstor
scas
adc
xchg
adc
add
and
pop
inc
dec
add
imul
add
test
adc
ror
sti
gs
cmp
adc
push
ss
push
xchg
lahf
(bad)
test
sub
add
shl
clc
pop
or
adc
fdivrp
pop
cmp
lea
mov
iret
add
add
push
cs
out
fild
in
pop
hlt
das
rol
adc
sub
sbb
in
and
push
adc
mov
add
and
add
xor
popa
clc
in
cmp
sub
rcr
mov
pop
mov
jnp
cmp
jne
(bad)
jnp
sti
and
push
cmp
jne
dec
adc
fadd
jo
adc
xlat
cmp
nop
sub
dec
jo
std
mov
jb
add
in
lahf
sub
cli
push
push
ficomp
sbb
mov
or
out
repz
jo
dec
daa
mov
push
push
retf
push
or
outs
repz
add
dec
xchg
pushf
push
mov
or
pusha
mov
xchg
jl
push
sub
call
scas
push
scas
jge
or
into
dec
rcr
push
retfw
adc
les
pop
add
xor
mov
stc
adc
faddp
aam
or
(bad)
int
cs
fdivrp
popf
mov
pop
inc
out
fstp
cmp
and
sub
add
jle
xlat
mov
pop
push
inc
sbb
pop
neg
inc
adc
cmp
push
push
inc
push
inc
sar
dec
imul
sub
int3
leave
cld
into
add
inc
or
sub
sar
sub
cs
add
(bad)
dec
and
call
pushf
mov
call
loopne
mov
clc
adc
add
mov
icebp
test
je
mov
test
clc
rcr
out
xor
ret
push
call
or
mov
call
sub
pushf
xor
xlat
lea
fdiv
pushf
xlat
and
pusha
add
jb
or
aas
mov
sub
jbe
data16
adc
add
adc
fwait
adc
lds
ret
nop
push
mov
dec
mov
inc
xor
mov
add
(bad)
rcl
clc
fimul
je
adc
ins
cmp
mov
je
xchg
jo
loopne
mov
xor
inc
setg
sub
out
mov
bound
mov
je
ret
repz
out
nop
mov
add
adc
out
jg
outs
popa
ins
inc
imul
jg
clc
pop
mov
inc
jne
push
outs
outs
imul
hlt
ins
popa
jb
mov
inc
add
dec
push
pop
pop
add
dec
dec
cmp
inc
push
stos
ror
fwait
jge
xchg
das
int
xor
push
inc
(bad)
clc
xchg
inc
ret
movs
sti
or
out
mov
xchg
or
movs
ret
movaps
test
and
outs
arpl
int3
in
push
inc
dec
retf
sub
pop
mov
repnz
xchg
lds
xchg
add
pop
xchg
or
and
jae
sub
push
sub
push
jae
jb
push
push
sub
pop
add
push
dec
add
shl
jns
cmp
mov
push
pop
aam
lds
xlat
or
dec
push
push
jp
jae
movs
inc
cmp
repnz
unpckhps
xchg
inc
int
cmp
jns
inc
jg
mov
out
jbe
inc
sub
or
int3
pop
fcmovb
data16
or
inc
xor
dec
mov
push
mov
ins
sub
pop
ins
push
movs
add
test
xor
mov
inc
mov
mov
add
fwait
cmp
pop
call
scas
inc
outs
fs
cmps
inc
js
and
jne
inc
or
inc
sbb
ins
imul
rol
outs
mov
out
ja
add
arpl
or
mov
out
add
sub
push
and
not
arpl
mov
sub
inc
jns
inc
outs
outs
imul
dec
int3
sub
cmp
mov
push
add
pop
add
xor
inc
xor
mov
fistp
add
inc
jb
xor
int3
or
xor
xor
push
jno
mov
xor
shl
mov
or
add
lea
xor
(bad)
mov
pop
inc
push
push
sbb
pop
inc
gs
add
lods
loope
iret
add
test
ret
add
cmp
es
cmp
stos
add
repz
or
push
pusha
adc
dec
nop
fmul
les
stos
add
dec
cmp
sbb
add
inc
inc
in
jne
test
or
jae
or
and
pop
loope
rol
stos
mov
sbb
pop
inc
cwde
test
sub
leave
jp
scas
(bad)
js
cmovne
js
movs
xlat
pop
in
test
sub
adc
xor
xor
pop
ret
inc
clc
enter
mov
bound
sub
mov
jle
stos
pop
not
cs
xor
or
push
mov
aam
rcl
fmul
xchg
mov
sti
xchg
in
sub
pop
mov
xor
test
mov
fidivr
ror
xor
ret
add
das
mov
jg
sub
movzx
cmp
je
or
je
fild
loopne
jne
inc
nop
or
inc
cmp
add
adc
cmp
jle
pcmpeqd
pop
cmp
cmc
js
add
jle
test
inc
dec
jne
popf
enter
adc
ror
sub
inc
sub
mov
xor
or
(bad)
dec
mov
fimul
sbb
retf
leave
leave
and
mov
jbe
jge
xor
ss
outs
lock
lock
jle
mov
dec
mov
lds
add
push
xor
jg
jle
data16
inc
push
lea
mov
lahf
sbb
push
sub
rol
and
pop
cwde
and
mov
add
fdivp
lea
mov
inc
or
imul
addr16
sbb
les
leave
push
(bad)
in
lock
pop
and
mov
and
and
fwait
lock
and
rcr
cmps
add
or
icebp
sub
or
pusha
dec
pop
mov
sub
jge
repnz
aas
lock
cmp
jle
ins
xor
in
mov
out
add
cmp
(bad)
ds
mov
enter
imul
pop
xor
jmp
loopne
xor
loopne
pop
ret
inc
fist
inc
dec
sub
ins
sbb
je
push
fst
lock
popf
dec
fcomp
push
push
fisubr
jne
sar
add
inc
pusha
mov
mov
jo
leave
cmp
pop
(bad)
leave
fcom
and
leave
mov
mov
inc
xor
push
in
and
inc
loopne
mov
daa
stos
outs
add
call
pop
dec
mov
xor
dec
xlat
push
jmp
inc
add
add
idiv
adc
and
or
retf
inc
mov
aas
or
xor
xor
add
inc
add
(bad)
mov
dec
xor
inc
lds
enter
sub
push
adc
pop
pushf
cli
mov
xor
mov
lock
push
cmp
add
ins
bound
pushf
fmul
(bad)
inc
movs
loopne
add
push
pop
push
mov
rol
in
and
(bad)
outs
xor
adc
cmp
std
es
dec
(bad)
push
call
push
and
fwait
loope
shr
cmp
dec
sub
and
mov
ja
dec
or
jne
dec
popa
daa
je
mov
xchg
ss
dec
and
sar
push
in
or
sub
int
hlt
mov
jge
push
or
fsubr
cmc
jg
sar
repnz
jge
add
aam
mov
or
add
enter
mov
push
call
mov
xchg
push
movs
loopne
jl
xor
leave
inc
xor
pop
adc
movs
int3
icebp
jge
inc
rol
out
sub
js
dec
fisub
(bad)
add
mov
test
mov
popa
lods
lea
pop
daa
xchg
call
jp
xchg
test
dec
dec
pop
jle
jo
mov
and
inc
jnp
add
xor
mov
stos
push
pusha
xchg
aaa
fmul
push
jnp
fadd
dec
and
pop
inc
sbb
bndldx
(bad)
mov
adc
hlt
add
test
sub
or
call
push
ins
push
gs
pop
xchg
ds
ins
lds
push
pusha
inc
loop
push
jbe
xchg
lock
pop
add
adc
adc
jp
pop
sub
and
adc
jbe
inc
or
jnp
inc
add
adc
jo
lock
pop
pop
mov
fdivr
sbb
inc
jne
dec
xor
cli
test
jl
inc
xor
out
push
push
test
sub
sub
mov
add
push
ret
mov
inc
cdq
dec
in
dec
jne
mov
mov
or
por
inc
loop
inc
mov
imul
mov
sbb
loope
adc
and
push
pop
std
aad
mov
cmps
mov
push
dec
cmps
in
inc
lods
mov
test
stos
cmp
jp
bound
imul
add
adc
sub
pop
push
scas
sub
std
adc
stos
into
mov
mov
dec
jle
sub
cmp
xchg
push
push
adc
clc
push
xor
add
loope
sbb
adc
rcr
es
cmp
dec
aaa
es
in
sub
push
or
sbb
sub
out
daa
cmp
(bad)
sbb
sub
adc
mov
inc
lods
push
inc
nop
add
xchg
jecxz
ins
mov
loopne
lock
xchg
push
add
push
xor
add
lea
xlat
pusha
sub
retf
adc
cmp
shr
rol
mov
dec
sbb
xchg
lock
adc
mov
cwde
mov
and
cmp
inc
sti
add
push
and
sbb
and
out
cld
push
scas
dec
rcr
mov
fst
jnp
add
fcomp
push
iret
ret
inc
arpl
or
mov
or
lods
dec
sbb
adc
fs
inc
shr
in
sahf
and
in
mov
aam
pop
je
dec
je
jmp
adc
mov
mov
test
jmp
dec
jmp
pop
sub
push
js
or
pushf
cmp
clc
push
xor
lods
xor
loopne
inc
mov
inc
adc
mov
mov
nop
outs
jno
movs
xchg
dec
and
xchg
add
dec
pusha
mov
stc
(bad)
pop
aaa
push
sub
xlat
lea
add
adc
popaw
mov
pop
inc
pop
adc
not
cmp
xor
fisttp
add
inc
(bad)
xor
rol
add
pop
pop
bswap
cmp
or
cld
mov
dec
sti
sub
push
push
push
je
xor
(bad)
das
mov
xchg
pop
dec
add
mov
push
movs
push
das
fidiv
add
ror
add
das
dec
pop
imul
mov
sub
data16
add
push
(bad)
imul
pop
push
les
fwait
in
jge
jbe
js
in
lods
jp
lds
test
xchg
xor
pop
pop
aaa
or
daa
push
pop
or
add
imul
or
js
imul
sub
mov
jo
dec
and
dec
outs
ins
jns
add
sub
jo
sub
mov
fcomp
push
inc
push
popa
ins
jne
cld
add
or
fs
lock
or
inc
jecxz
in
add
inc
dec
popa
mov
or
inc
arpl
jae
pop
cli
pusha
add
push
mov
xor
dec
lods
ja
add
pop
pop
push
dec
jp
push
dec
xor
xchg
add
(bad)
(bad)
or
jbe
or
add
ja
xor
cmp
xor
aaa
xor
fs
or
mov
icebp
or
mov
ins
ins
enter
outs
loop
daa
xchg
pop
inc
adc
in
add
jns
add
mov
ret
push
add
adc
xchg
sbb
xor
ret
test
jae
in
ja
jo
inc
and
xchg
sbb
mov
or
mov
xchg
adc
nop
inc
popa
or
ins
in
cmc
movs
nop
or
pop
in
in
jo
fisttp
gs
add
mov
xchg
jns
mov
jbe
mov
mov
pop
cmp
ins
adc
frstor
pop
cwde
push
and
bound
fs
outs
nop
mov
jb
fs
adc
fs
jge
lds
subps
mov
into
retf
loopne
dec
sbb
fcom
pop
or
inc
pushf
mov
or
or
popa
pop
in
in
dec
xchg
dec
jmp
xchg
push
test
imul
lea
sub
or
pop
inc
sub
retf
sub
stos
xchg
add
add
or
jnp
sti
imul
add
inc
jne
sub
dec
popa
js
gs
adc
inc
or
pusha
pop
and
sbb
and
jmp
inc
inc
and
and
cs
pop
xchg
or
mov
jnp
mov
mov
pushf
ror
outs
das
mov
mov
(bad)
loopne
clc
inc
sbb
inc
push
loopne
push
adc
cmp
in
psraw
push
and
add
mov
pop
loopne
add
retf
ins
pop
pop
push
or
lahf
mov
shr
mov
xlat
loopne
jo
jp
pop
ret
test
jae
mov
retf
outs
dec
lods
outs
xor
dec
xchg
cmp
add
jb
cmp
add
inc
jne
add
lods
adc
add
int
sbb
mov
call
daa
sbb
cmp
jle
psllw
pop
movs
lahf
or
cmp
arpl
sbb
(bad)
jb
xchg
scas
test
fimul
push
fs
mov
mov
neg
push
(bad)
dec
(bad)
or
pop
test
ds
ins
push
cmp
push
inc
push
inc
clc
gs
sbb
mov
les
(bad)
xlat
add
jno
or
sub
push
shr
in
inc
movs
add
push
dec
outs
arpl
jge
fsubr
adc
arpl
inc
sbb
jnp
ror
jecxz
inc
pusha
fs
leave
add
popa
push
test
in
fsubr
leave
leave
ins
cmp
mov
arpl
mov
addr16
retf
lsl
icebp
sub
(bad)
add
adc
outs
push
push
cmp
sar
outs
into
and
daa
jge
ins
dec
js
add
add
inc
fs
loop
mov
pop
js
or
inc
je
sbb
dec
mov
or
sub
xchg
add
in
mov
mov
sub
add
dec
ud1
inc
and
push
jg
pop
inc
pusha
jp
rep
in
adc
and
jae
cmp
dec
mov
or
test
mov
and
dec
test
fist
call
pop
popf
xor
lahf
cmp
and
jnp
sbb
mov
push
mov
icebp
inc
xchg
mov
add
pop
jb
jecxz
sbb
push
add
and
mov
cmp
add
cli
loopne
hlt
inc
imul
imul
push
push
sbb
adc
or
xchg
jns
test
jnp
mov
push
sbb
movq
adc
pop
in
dec
add
adc
ins
mov
or
pusha
mov
pop
add
rcr
inc
jns
inc
dec
adc
adc
out
push
inc
sbb
nop
or
mov
add
mov
popa
mov
sub
(bad)
lea
icebp
xchg
mov
add
xor
xchg
sub
inc
popf
pop
cli
mov
mov
dec
ret
and
and
and
push
adc
add
cmp
jle
pop
(bad)
lods
test
add
or
(bad)
mov
cmc
dec
add
mov
adc
inc
mov
scas
ror
and
inc
adc
mov
push
push
fisttp
sbb
mov
adc
clc
add
or
jge
xor
push
pusha
dec
sar
add
and
out
mov
cld
test
jns
inc
pop
data16
add
test
push
out
cwde
test
aas
xor
xor
adc
adc
aam
jg
jnp
xor
(bad)
or
js
or
xchg
cs
cli
cmp
inc
rcr
add
outs
mov
sbb
mov
ret
and
ss
jmp
sbb
lea
iret
lock
add
nop
popa
xor
jmp
sbb
pop
or
fdivr
pop
mov
rcr
adc
lea
out
mov
fwait
leave
add
pop
pop
out
sbb
inc
xchg
add
push
shl
jae
add
mov
xchg
xor
xor
adc
ret
mov
xor
cmp
fsubr
sbb
sub
jns
push
sub
xchg
cmp
mov
and
pop
nop
mov
(bad)
adc
push
pop
bound
cmps
xchg
push
idiv
stc
or
call
lods
push
sahf
mov
jmp
fstp
xor
push
shl
cmp
je
inc
dec
jne
or
(bad)
pop
arpl
test
je
shl
out
push
bound
shl
or
add
pop
xor
fstp
neg
inc
fwait
sub
(bad)
shl
cmc
or
(bad)
clc
add
add
mov
es
movs
mov
mov
mov
mov
xor
and
jmp
add
inc
mov
push
loop
(bad)
cli
sbb
and
adc
sub
and
xchg
cmp
sub
popa
sti
sbb
inc
mov
loop
add
jmp
cmp
jle
jae
pop
xchg
or
cmp
vmovups
inc
xor
mov
xor
adc
adc
inc
sbb
dec
sar
sbb
adc
cmps
xor
cmp
and
xchg
xor
outs
inc
push
ins
inc
xor
xor
cmp
sbb
loope
mov
and
dec
(bad)
imul
push
push
aad
ret
(bad)
sub
cld
sub
push
ret
js
nop
es
in
xchg
pusha
pop
jo
mov
inc
push
or
cld
call
arpl
fwait
sub
ss
mov
xchg
add
jo
mov
mov
mov
jnp
test
pop
pop
ss
fucomi
push
fsub
daa
push
adc
xor
jg
cmp
pop
div
fmulp
pusha
or
push
adc
popa
cmp
jl
das
xchg
retf
sar
enter
(bad)
mov
and
or
push
cld
inc
sub
mov
add
push
pushf
xor
xchg
jle
mov
sub
ror
dec
fbld
or
fstp
aam
rcl
fbld
mov
pop
add
and
shl
imul
mov
inc
int3
shr
bound
adc
and
push
out
not
push
add
push
enter
or
push
mov
rol
daa
push
pop
xor
push
cmp
imul
inc
hlt
xor
inc
fisttp
cld
mov
mov
hlt
push
push
jbe
push
in
xor
ja
or
xchg
pop
push
nop
mov
sub
loopne
add
xchg
and
addr16
push
enter
mov
cmp
imul
mov
addr16
push
cmp
mov
and
adc
retf
push
(bad)
stc
mov
inc
sahf
movs
mov
int3
xchg
sub
mov
add
mov
add
mov
push
cld
and
xchg
or
inc
ja
xor
and
sbb
inc
pop
mov
or
outs
mov
cmp
cmp
jne
add
fadd
jb
idiv
push
pusha
mov
push
push
fdivr
call
add
(bad)
mov
xor
nop
(bad)
ins
nop
faddp
(bad)
ds
pop
rcr
data16
push
ss
lock
inc
rcr
cmp
fwait
in
call
pop
lock
add
mov
xchg
mov
cwde
mov
push
dec
aas
and
push
add
fldz
fmul
fnstsw
sahf
push
ret
(bad)
fmul
shl
add
ret
xchg
push
jmp
dec
inc
ror
out
dec
jb
adc
loopne
sbb
push
mov
inc
adc
push
loopne
mov
jmp
mov
dec
ret
pop
aas
arpl
mov
mov
outs
sbb
outs
daa
adc
mov
jl
mov
sbb
cmp
pop
sub
adc
fsubr
jo
adc
jne
add
fidivr
dec
push
nop
lea
mov
add
lea
mov
daa
xchg
cmp
mov
repz
std
mov
movs
mov
jb
nop
mov
(bad)
mov
jb
sbb
sub
inc
mov
out
pop
mov
xchg
and
lahf
pop
push
inc
add
mov
or
add
shl
popa
cmp
xchg
call
push
dec
pop
mov
sbb
jne
cmp
cs
das
addr16
xchg
sahf
call
aaa
jne
std
out
dec
xchg
ins
add
or
dec
jbe
add
push
pop
mov
add
xchg
test
push
rol
adc
inc
aas
mov
sbb
aaa
push
pop
loopne
outs
and
pop
rcl
pushf
inc
out
xchg
dec
iret
or
mov
pop
fsub
xchg
fadd
push
outs
repnz
add
aaa
or
js
(bad)
pop
retf
add
sub
pop
lahf
lock
mov
dec
cld
retf
lds
retf
mov
adc
push
adc
sbb
ss
dec
sbb
cmp
or
ret
out
(bad)
or
inc
add
jae
or
mov
mov
vmwrite
push
cmc
inc
loopne
out
int3
les
imul
pop
ret
nop
inc
aam
add
mov
inc
aam
fsub
adc
rol
push
clc
inc
pop
jmp
mov
addr16
add
push
or
or
add
les
(bad)
js
js
inc
js
push
cmc
loopne
dec
pop
mov
pop
dec
pop
adc
push
enter
sbb
push
into
mov
lods
inc
mov
into
mov
dec
in
mov
push
das
sub
xlat
or
xor
fwait
dec
mov
in
hlt
loope
xor
mov
mov
xor
pop
pusha
push
adc
push
cld
dec
xor
add
pop
(bad)
push
loopne
fwait
or
daa
fcomp
jg
sub
push
mov
fadd
push
cs
mov
mov
mov
xchg
mov
cmp
cmp
test
jmp
and
ret
(bad)
inc
imul
(bad)
fsubr
mov
jnp
jb
popf
xchg
ja
mov
aam
das
mov
test
push
pop
pop
test
xor
sbb
sbb
push
pop
push
jmp
adc
push
inc
jbe
aad
lahf
push
sbb
hlt
add
nop
xchg
mov
sbb
jo
retf
adc
(bad)
inc
repz
cmps
pop
shl
stos
push
sbb
add
inc
add
xlat
das
sub
or
(bad)
aaa
and
xlat
lock
aam
push
push
sahf
or
outs
inc
mov
sbb
in
dec
(bad)
and
add
xchg
(bad)
xor
imul
or
cwde
or
popa
or
add
mov
xchg
cmp
(bad)
loopne
mov
cs
loopne
mov
test
in
jp
call
jbe
and
movs
test
mov
sbb
mov
adc
ficom
int3
xor
or
mov
jge
cs
add
push
push
pop
and
xlat
pop
or
xchg
jge
icebp
lock
arpl
maxps
test
movs
jb
fadd
and
sbb
adc
adc
pop
pusha
cld
add
movs
cmps
les
sbb
and
nop
pop
lahf
test
add
es
mov
and
adc
das
mov
popa
jmp
or
nop
pop
xchg
sub
nop
inc
sub
test
push
inc
mov
icebp
cmp
cmp
dec
jp
pop
outs
and
push
push
sub
dec
push
xor
xor
div
gs
jae
cmp
fild
jl
(bad)
cmp
xchg
ret
xchg
adc
inc
data16
mov
ds
push
push
lea
adc
inc
dec
jb
jmp
xlat
mov
fisttp
test
test
mov
or
mov
xor
in
hlt
js
je
sbb
mov
mov
loopne
mov
loopne
inc
push
add
(bad)
call
push
push
fcomp
adc
xchg
adc
icebp
shl
je
stos
(bad)
fild
outs
inc
push
push
sbb
jle
inc
daa
push
and
xchg
mov
mov
push
(bad)
jmp
pop
in
push
sbb
xor
adc
iret
test
clc
pop
inc
sub
add
rol
adc
and
and
jge
jge
pop
and
das
jl
out
cmp
jge
dec
pop
rol
jp
inc
dec
pushf
dec
adc
jne
add
or
test
pop
cmps
(bad)
mov
push
pop
push
fs
test
pop
cmps
jmp
mov
xchg
mov
sbb
push
lods
(bad)
cmp
add
ja
pusha
mov
mov
mov
mov
add
lea
test
add
jp
and
mov
js
and
mov
loop
or
cld
and
push
test
jle
adc
cdq
mov
clc
hlt
push
hlt
sbb
sbb
dec
inc
loopne
pop
inc
sub
xor
lds
outs
pop
ins
pop
and
cmp
stos
(bad)
loopne
mov
inc
or
jl
or
xor
das
pusha
mov
daa
add
int3
push
push
aas
mov
lods
lahf
jnp
mov
push
fcomp
push
and
sbb
dec
repz
ficom
div
xor
rcr
jle
or
ror
xor
dec
jno
and
push
xchg
jecxz
(bad)
jmp
inc
dec
ins
sub
ins
out
xchg
sbb
sbb
cmps
data16
jne
push
pop
add
jmp
out
out
and
add
ds
fwait
sub
sbb
dec
test
or
loopne
dec
enter
imul
sbb
sub
jno
in
idiv
or
das
add
add
push
shr
cli
push
sbb
lahf
sub
jg
adc
pusha
inc
les
or
adc
and
add
inc
fiadd
push
jno
dec
pop
stos
cmp
and
bound
out
cmp
cwde
jg
push
jg
ret
cmp
jb
loop
xor
dec
mov
loopne
lods
add
adc
add
or
push
mov
ins
mov
sbb
jp
xchg
rol
xor
add
imul
and
or
pop
push
cdq
sbb
jne
sbb
lock
push
pop
mov
out
cmp
push
and
push
shl
and
dec
xor
or
(bad)
or
or
mov
xchg
jbe
xor
add
pop
mov
and
cmp
xor
popa
les
fadd
add
adc
out
and
sbb
push
loopne
add
cmp
xchg
test
std
xchg
enter
loope
jae
fsub
aad
push
xchg
arpl
and
cmps
xchg
fiadd
or
adc
sub
pusha
rol
xchg
sbb
out
ins
add
sar
clc
cmp
test
xor
in
push
jmp
or
sub
scas
cs
out
enter
jo
dec
test
jl
inc
xlat
mov
ins
aad
pop
adc
call
fwait
jo
stos
ja
ins
imul
xor
xor
or
mov
dec
add
ret
scas
das
or
inc
imul
jns
(bad)
loopne
mov
cmp
outs
xchg
mov
jb
cmp
mov
push
popf
ror
push
scas
(bad)
push
push
push
clc
cmp
rol
sar
jl
inc
xor
xor
cwde
adc
sbb
dec
pop
add
add
dec
push
lds
sub
lea
popa
cmp
movs
add
and
fisttp
(bad)
jl
inc
sbb
ficom
aam
add
in
sub
and
or
pop
add
les
or
call
inc
dec
jne
test
add
xchg
push
out
imul
push
pcmpgtd
add
xchg
nop
test
movs
mov
test
aam
or
loope
loopne
jle
sub
jb
je
jmp
xor
fnstcw
add
adc
jnp
push
inc
or
adc
(bad)
scas
std
adc
pop
ss
mov
adc
dec
gs
outs
(bad)
mov
outs
je
add
pop
inc
push
adc
pop
cmp
arpl
sti
int3
add
and
push
dec
adc
pop
push
inc
arpl
mov
je
inc
push
ins
gs
outs
add
pop
inc
fs
movs
int3
sbb
call
pushf
test
sub
dec
mov
sbb
pop
cdq
addr16
das
adc
addr16
ins
dec
es
add
xchg
or
js
push
push
imul
add
sub
mov
and
call
imul
out
push
sbb
jnp
add
bound
clc
jge
add
sahf
out
data16
jo
dec
add
fsub
mov
push
push
pop
mov
pop
dec
push
movs
movs
imul
ins
cmps
adc
jl
mov
push
mov
mov
and
cwde
mov
mov
jge
pusha
dec
into
pusha
ds
push
adc
jo
xchg
popf
fadd
into
add
js
shl
jp
add
inc
jle
cs
mul
or
inc
sub
jns
div
jns
dec
push
or
or
sbb
sbb
adc
sub
rol
add
out
dec
out
push
dec
dec
inc
inc
hlt
(bad)
cmp
mov
add
adc
and
or
cdq
daa
or
pop
(bad)
lods
add
repnz
xor
data16
add
mov
inc
fs
jb
pop
push
ror
lock
cmp
add
push
push
dec
fwait
mov
jns
(bad)
enter
popf
aam
sahf
pop
or
dec
dec
or
pop
in
cmp
cmp
or
mov
outs
jne
pusha
mov
inc
push
adc
cmps
rcl
add
push
inc
jbe
mov
add
cs
mov
inc
add
mov
mov
inc
mov
and
hlt
ins
push
or
daa
mov
dec
mov
test
xlat
pop
jne
mov
push
or
out
adc
inc
add
pop
rcr
inc
inc
pop
xor
push
js
aaa
xor
sub
or
pop
inc
mov
jnp
sbb
sub
push
or
xor
in
xchg
call
je
mov
inc
or
push
push
jbe
jle
jge
mov
inc
push
repnz
or
test
adc
dec
mov
jb
cmp
sbb
mov
mov
in
loopne
out
mov
retf
test
jmp
pop
mov
outs
data16
add
xor
inc
push
push
fld
fcomp
sub
or
inc
in
jo
das
aam
xor
dec
jp
mov
or
sub
icebp
push
push
adc
xor
pop
jne
in
adc
js
or
gs
mov
movs
cdq
pusha
push
mov
add
aam
mov
rcl
sbb
xchg
push
in
mov
repz
lods
daa
push
repnz
push
push
adc
push
hlt
rcl
xor
mov
mov
dec
cwde
inc
cmp
pop
jne
int3
(bad)
fwait
dec
(bad)
sbb
mov
fmul
inc
pushf
out
push
outs
inc
inc
xor
repnz
ins
and
retf
xor
stos
mov
add
das
push
aam
in
pop
xor
ds
sahf
call
loope
push
and
test
xor
cmp
pop
scas
mov
inc
(bad)
adc
movs
loope
scas
push
jmp
xlat
lods
mov
icebp
sub
imul
jl
clc
pop
clc
mov
add
or
xor
and
xor
xchg
mov
jmp
jp
inc
push
clc
adc
push
cmp
sub
jmp
(bad)
mov
or
pusha
cdq
loopne
pop
inc
sbb
test
je
cmp
add
push
sub
mov
lahf
xor
inc
or
lea
push
test
jb
inc
lahf
mov
leave
pop
(bad)
retf
js
push
iret
and
rol
sbb
push
sbb
or
pop
and
push
add
mov
rcl
push
dec
xchg
dec
jmp
dec
inc
mov
mov
sbb
ins
add
push
pop
or
dec
cdq
popa
cli
inc
push
call
xchg
add
repz
mov
xchg
cmp
inc
sahf
push
inc
fild
dec
dec
daa
push
adc
loope
stos
or
or
iret
pop
dec
inc
xlat
adc
push
pop
mov
jp
add
add
ret
mov
add
or
push
pusha
ja
fnstenv
push
repnz
lahf
fbld
cmp
imul
mov
rol
(bad)
fld
inc
fistp
push
pop
xchg
push
inc
cld
mov
das
dec
fisttp
les
push
fbstp
xchg
jl
lods
push
rcr
xchg
pop
push
cmps
jge
les
add
or
pop
fdivr
mov
push
push
dec
pop
adc
push
pop
inc
push
popa
jb
mov
popa
ins
cmp
add
les
add
push
sbb
push
or
dec
or
or
adc
push
xor
popa
mov
mov
push
fcom
or
call
or
fidiv
(bad)
or
add
xchg
ja
adc
inc
jae
imul
xchg
loop
push
pop
mov
add
inc
leave
movs
add
cmp
jmp
lock
fadd
xor
mov
or
jnp
push
lahf
jmp
push
rcr
xchg
jl
(bad)
loope
ja
push
sub
pop
(bad)
int3
cmp
pusha
out
out
xor
sbb
cmp
inc
inc
clc
gs
clc
sahf
cld
les
inc
bound
add
stos
(bad)
faddp
repz
push
inc
add
and
ds
mov
imul
add
xchg
dec
add
adc
rol
add
mov
bound
dec
test
sub
pop
or
dec
ja
pop
mov
mov
inc
gs
dec
mov
jne
pushf
shr
jb
jp
inc
dec
int3
js
cmp
jne
fwait
lods
cdq
cmp
jmp
jne
pop
(bad)
or
or
push
popa
ins
jne
pop
rcl
add
and
loop
add
in
sbb
mov
xchg
fstp
sub
push
inc
jl
mov
mov
mov
out
jb
enter
add
push
jge
or
adc
xor
iret
inc
and
push
jg
sbb
sbb
push
clts
push
xchg
inc
cmp
call
dec
adc
mov
or
jg
xchg
fadd
pop
sbb
int3
xor
(bad)
mov
(bad)
push
mov
jbe
into
add
and
jecxz
push
lea
add
xchg
xor
push
dec
loopne
xchg
data16
sbb
das
and
shr
pusha
call
inc
dec
mov
xor
mov
inc
test
in
add
mov
cmp
mov
pusha
test
adc
lds
adc
stos
icebp
jne
mov
jg
inc
inc
mov
aaa
push
loope
cmps
call
inc
ret
rcl
aas
xor
stc
in
dec
and
pusha
hlt
cmp
inc
or
popa
pusha
add
inc
pop
inc
adc
jne
sub
rcl
sub
inc
dec
pop
imul
lock
fiadd
(bad)
mov
push
sbb
add
sub
mov
sbb
sahf
sbb
push
lock
or
js
and
push
sbb
jmp
jg
sbb
add
cwde
pop
jl
sub
fsubrp
xor
push
push
push
cwde
push
div
and
or
outs
sbb
out
or
push
xor
adc
call
pop
push
jge
sub
or
push
dec
inc
fnstenv
arpl
cmp
push
push
push
cmp
sbb
push
iret
popa
mov
inc
inc
and
inc
inc
test
ffree
lods
xchg
mov
mov
xor
cmc
shl
cmp
add
cmp
ret
fadd
data16
xor
mov
xchg
lds
mov
cmp
sub
popa
jae
lods
xor
ins
adc
outs
inc
ins
inc
jae
mov
sbb
ds
pop
mov
mov
sub
sbb
ror
mul
cwde
test
push
in
outs
xchg
sub
add
adc
or
inc
jb
outs
jb
pop
xor
setp
lods
mov
jbe
or
pop
je
cmp
lahf
adc
push
inc
clc
inc
dec
mov
jbe
xor
loopne
pop
inc
fcomp
xchg
xchg
xchg
push
adc
dec
imul
inc
ror
pusha
inc
jno
push
rcl
(bad)
addr16
movs
mov
sbb
jl
scas
or
ror
cmp
out
add
scas
push
add
push
(bad)
mov
push
cmovb
and
mov
call
xor
jmp
loope
or
(bad)
cmp
ret
or
inc
mov
mov
pop
dec
sahf
hlt
mov
rcl
pushf
or
je
jmp
js
mov
sbb
and
push
push
lahf
loopne
pop
or
mov
inc
sti
add
sub
test
add
dec
jnp
call
sti
add
cmp
fcom
into
inc
xchg
mov
lahf
outs
sti
pusha
and
cmps
in
ja
cmp
scas
aas
lock
and
push
add
gs
test
xchg
bound
cmp
cs
imul
adc
push
push
fsub
or
push
in
mov
retf
loopne
in
shl
and
retf
add
rol
jno
inc
test
dec
cmp
std
sub
adc
xor
sahf
sbb
cmps
sbb
xor
cmp
aaa
adc
add
adc
ror
xchg
ins
xor
sahf
mov
enter
mov
push
push
scas
pop
out
lock
test
mov
mov
ud1
mov
mov
sub
leave
add
sbb
or
or
leave
add
cmp
pop
cmc
push
imul
and
adc
aam
add
cmp
stos
jle
retf
cwde
add
sub
inc
(bad)
in
or
xor
jne
or
adc
pusha
loope
call
and
push
and
lds
mul
pop
fidivr
and
mov
or
pop
or
bnd
mov
sbb
sub
dec
pop
sbb
imul
or
add
push
(bad)
dec
add
daa
in
sbb
jb
sub
add
and
inc
pop
push
push
int
inc
jp
dec
jp
adc
mov
(bad)
sub
cmp
xor
xor
add
or
out
mov
or
imul
or
ds
out
mov
add
fs
xchg
fwait
xchg
mov
das
mov
push
xchg
in
xlat
jmp
cmps
xchg
mov
mov
xchg
xor
rcr
dec
push
in
mov
add
shl
mov
pop
cmc
and
shl
cmp
cmps
push
inc
cwde
sub
popf
popa
dec
or
les
or
addr16
xor
cmp
pmovmskb
jg
mov
cmp
jne
inc
lea
cmp
and
test
not
add
jne
adc
sbb
add
push
aad
xor
rcr
and
mov
daa
xchg
xchg
ja
mov
mov
mov
pop
mov
and
shr
adc
push
cli
pop
jae
fnstsw
jno
add
mov
and
mov
sbb
gs
pusha
stc
pop
jmp
or
inc
stc
jle
pusha
es
daa
dec
test
add
sbb
lock
and
sub
jmp
call
inc
adc
js
or
pop
inc
dec
pusha
push
and
popf
jecxz
cmp
sub
call
mov
imul
add
pop
xchg
cmp
sbb
and
sbb
dec
pop
inc
btc
adc
ret
(bad)
out
mov
pop
(bad)
cmp
jae
(bad)
je
js
nop
out
xlat
mov
ret
adc
inc
js
cmps
mov
and
mov
mov
in
lock
pop
idiv
add
je
dec
je
inc
pop
dec
bound
adc
push
sti
aad
iret
cmps
in
add
add
add
ins
jle
push
pop
and
enter
fimul
cmp
mov
xor
push
jge
sahf
sub
(bad)
je
sub
xor
sbb
xor
jb
mov
pop
and
inc
adc
shr
mov
xlat
sbb
pusha
loope
add
inc
push
or
dec
cmps
xchg
push
cli
int
leave
or
pop
cmp
push
or
cmp
cdq
mov
(bad)
jno
and
dec
pop
mov
jmp
lds
cmps
jg
ret
inc
popf
out
sub
cmps
mov
ja
pop
fsubr
cli
push
lahf
jnp
scas
mov
push
xor
mov
je
sbb
sahf
dec
and
lock
xor
jge
mov
and
push
mov
ret
enter
or
xchg
aaa
or
jg
imul
mov
jg
lods
jg
pop
cmp
jno
in
jle
xchg
shl
jbe
(bad)
mov
call
or
jmp
cmps
jge
int
enter
sbb
mov
mov
xor
push
inc
xor
cmp
dec
add
or
or
push
lods
adc
mov
push
jbe
ud2
xchg
jae
add
push
push
or
in
in
cmps
push
add
fucomi
fbstp
sbb
and
pop
js
jg
(bad)
(bad)
cli
xor
mov
add
add
cmp
jne
cmpps
or
push
mov
jo
mov
loopne
sbb
outs
pop
jl
je
cmp
jg
sti
jle
mov
inc
mov
test
sahf
or
xor
inc
jecxz
mov
stos
dec
clc
test
je
inc
cmp
inc
mov
cmp
or
lock
sbb
mov
jl
dec
mov
cmps
adc
(bad)
inc
or
adc
push
adc
sub
dec
adc
lods
std
or
iret
sub
imul
ss
xlat
or
add
add
pop
dec
adc
cmp
cmps
aas
sub
xor
bound
addr16
push
call
rol
fsubr
dec
push
jo
sbb
out
shr
xchg
aaa
pushf
out
add
mov
sub
push
repnz
mov
cmp
mov
xlat
jo
add
into
mov
out
inc
sbb
popf
jle
adc
ror
pushf
xor
mov
in
cmp
and
add
and
jne
mov
jge
add
or
data16
adc
(bad)
in
setle
jmp
jmp
mov
je
mov
add
shr
add
fdivr
cmp
or
add
lock
hlt
add
int3
loope
leave
jmp
out
inc
jnp
pop
push
ds
dec
cmp
jle
popa
outs
jge
std
pop
sar
add
sti
add
mov
inc
fwait
cld
add
sar
js
xor
add
jl
push
ret
mov
add
add
inc
dec
fs
cdq
mov
mov
daa
call
sbb
div
hlt
add
add
out
mov
enter
or
xchg
mov
shl
div
jmp
popa
sbb
push
sub
sbb
test
in
and
scas
mov
inc
push
mov
sub
out
add
dec
aas
and
mov
sbb
call
test
jmp
fmul
add
xchg
push
lea
cmovnp
sbb
push
cmps
std
push
scas
idiv
cs
loop
sbb
jo
test
and
inc
and
jmp
test
pop
inc
ret
ins
pop
pop
and
out
mov
mul
stc
out
add
xlat
sub
out
icebp
rol
dec
mov
gs
push
inc
loop
or
push
cli
cmp
push
mov
mov
idiv
pop
or
in
or
dec
add
mov
adc
fiadd
clc
hlt
ficom
into
jmp
rol
data16
cs
loop
mov
fisttp
fwait
sbb
(bad)
push
cmps
mov
aam
cs
mov
sbb
mov
pop
pushf
enter
mov
mov
pop
jecxz
jne
inc
les
push
loopne
mov
and
xor
fdiv
push
or
bound
push
aam
jo
jnp
adc
aam
in
in
pop
fstp
jmp
add
in
xchg
leave
mov
enter
adc
call
loopne
push
and
inc
push
in
int3
xchg
int3
adc
mov
out
add
mov
stc
test
lds
push
ins
(bad)
out
inc
sub
and
ins
icebp
(bad)
jno
(bad)
xor
mov
add
arpl
cmc
dec
(bad)
or
(bad)
jle
cmp
lds
or
mov
cli
push
pushf
cwde
pop
into
or
push
push
cs
aaa
inc
xlat
push
inc
or
inc
lock
rol
clc
adc
mov
push
or
mov
js
out
mov
sbb
cmp
sbb
pop
sbb
inc
jp
jmp
inc
and
inc
sbb
call
enter
jne
xchg
sbb
xchg
push
imul
and
loopne
(bad)
sbb
sub
lahf
mov
imul
sbb
sub
jl
push
fild
cld
mov
xchg
mov
scas
adc
cmps
mov
clc
dec
jle
mov
jo
fnsave
push
fsubr
xchg
push
in
pop
add
test
test
push
pop
fs
stos
mov
add
or
push
in
adc
shl
add
jo
pop
rol
ja
movs
xor
add
pop
jo
ror
add
fcomp
dec
in
(bad)
jne
adc
mov
scas
mov
add
add
shl
call
and
shl
(bad)
loop
and
shl
cmp
ins
xor
xor
xchg
sbb
cmc
mov
xlat
enter
ins
adc
and
aam
add
push
popa
xlat
jnp
les
movs
loopne
sbb
sub
arpl
inc
in
add
pop
adc
mov
dec
mov
mov
mov
cmp
aas
aaa
inc
mov
ins
xor
mov
ret
add
jne
or
fadd
and
fisttp
mov
adc
pop
pop
inc
and
and
or
mov
int3
mov
scas
xlat
popf
pusha
inc
push
jge
inc
ror
push
shr
ret
dec
dec
lea
test
cld
jg
jg
dec
test
jl
inc
inc
mov
add
mov
mov
inc
dec
jne
or
aaa
push
icebp
dec
cmps
(bad)
jle
xchg
into
mov
mov
jle
js
daa
les
mov
jecxz
lock
mov
out
mov
add
lock
mov
pop
(bad)
mov
out
cmp
push
mov
sub
push
mov
mov
mov
daa
movs
xchg
js
jbe
stos
in
cmp
and
jp
ds
mov
shl
shl
xor
sub
sub
dec
aad
dec
mov
pop
(bad)
push
in
or
add
sub
mov
hlt
push
or
or
jns
push
add
or
daa
sahf
(bad)
adc
push
mov
and
mov
div
push
popf
or
fistp
sbb
xor
mul
mov
cmp
jge
add
jge
jg
pshufw
imul
jb
push
je
sub
je
mov
xchg
jmp
jmp
push
inc
(bad)
jno
adc
sahf
stos
sbb
mov
or
mov
test
je
jo
push
sbb
xor
inc
lods
test
iret
cmps
add
fstp
sub
lods
cmp
inc
les
adc
cmp
pop
ins
test
imul
mov
lods
adc
test
ins
mov
ds
add
rcl
lahf
enter
push
mov
jecxz
sti
and
jbe
sbb
add
cdq
popa
pop
xor
push
popa
test
or
lea
out
pop
inc
push
sub
scas
out
ins
fucomi
rcr
add
pop
mov
pinsrw
ret
adc
aaa
jo
dec
mov
mov
xlat
ins
mov
je
dec
push
movs
push
movs
pop
ins
cmps
adc
int
sar
push
mov
mov
scas
cwde
sahf
std
fidivr
mov
test
mov
push
ds
pop
xchg
mov
adc
fadd
dec
call
std
add
add
add
mov
outs
je
adc
jmp
push
jb
outs
je
bound
call
pushf
stc
add
or
idiv
jne
dec
or
dec
pushf
or
jb
push
je
cmp
mov
gs
ins
daa
or
inc
inc
gs
sub
pushf
mov
push
inc
inc
jns
jae
in
nop
bound
test
dec
pop
xor
inc
mov
pusha
and
cmps
call
add
mov
out
cmp
fnstsw
(bad)
and
add
add
cmp
enter
dec
push
in
jecxz
inc
and
jmp
lock
call
dec
xor
lock
pop
and
jne
cmp
adc
and
aad
push
mov
push
cmp
sub
mov
fs
dec
or
adc
sbb
les
shl
fsubr
mov
cld
les
(bad)
cmp
setg
jmp
pop
xor
clc
or
fadd
pop
(bad)
lock
mov
pop
sbb
daa
stos
sbb
test
jb
inc
jl
cs
cs
rol
xchg
push
aaa
or
adc
and
adc
or
lock
xor
mov
ret
push
das
clc
fmul
test
in
mov
adc
inc
xchg
sbb
inc
sub
scas
xor
cmp
dec
pop
inc
and
and
and
fwait
mov
add
fiadd
sub
sub
sub
loopne
inc
adc
add
push
jmp
xor
add
push
aaa
add
loop
add
mov
ds
push
adc
inc
sahf
inc
add
inc
inc
adc
push
into
dec
test
and
push
mov
push
stos
das
adc
push
push
out
add
pop
lock
add
pop
dec
pusha
add
push
jne
sub
add
xor
imul
stc
call
add
jb
jae
add
jbe
ja
js
jns
jp
jnp
xlat
shl
mov
loopne
test
mov
fist
cmp
add
push
jp
js
das
add
sub
mov
mov
fmul
cwde
xchg
fldenv
call
rcr
xchg
pop
(bad)
jns
sub
nop
es
ret
sub
push
and
in
movs
cmp
unpcklps
sbb
or
sar
cmc
popa
add
inc
inc
imul
rcr
gs
inc
push
jmp
cmp
outs
add
mov
gs
jns
push
rcl
das
jb
mov
jae
fidiv
sti
or
and
xlat
loopne
add
xchg
sub
pop
daa
sar
or
push
popa
ins
jne
ret
adc
rol
mov
push
add
nop
pop
imul
enter
dec
jo
sbb
cdq
add
push
sub
inc
add
mov
adc
imul
(bad)
fidiv
(bad)
adc
jo
mov
out
(bad)
push
loope
inc
ror
inc
mov
aam
pop
cwde
or
test
pop
or
ret
or
arpl
pop
mov
xchg
pop
test
jns
xchg
nop
popa
jne
add
retf
arpl
or
adc
jne
test
movs
je
mov
add
xchg
retf
xchg
xchg
shl
sbb
ds
xchg
xchg
xchg
popa
xchg
push
adc
call
and
mov
or
setge
in
adc
or
cmp
cmp
pop
xchg
inc
mov
out
add
mov
cmp
ins
jecxz
inc
stos
mov
stc
jne
adc
xchg
outs
xchg
xchg
xlat
inc
rcl
mov
dec
test
imul
(bad)
test
retf
xlat
jnp
loopne
or
dec
add
push
or
ret
ret
push
jl
popf
loopne
jmp
dec
cwde
xor
xchg
adc
sbb
sar
cmp
inc
inc
clc
gs
sbb
bound
add
loopne
jbe
ins
enter
inc
push
test
or
cmp
pusha
rol
push
cmp
sub
cli
mov
imul
aam
pop
call
fstp
or
push
mov
enter
jg
add
fs
push
imul
sbb
or
sub
xor
adc
out
retf
add
xchg
gs
mov
sub
or
sbb
(bad)
xchg
sub
add
push
sub
sbb
lea
aad
sahf
pusha
mov
(bad)
fld
dec
(bad)
out
in
jnp
jl
jo
sahf
push
xchg
lds
ror
cmp
add
jge
aam
out
int
lahf
out
bound
bound
and
or
into
push
fmul
rcr
mov
ins
xlat
out
push
xchg
mov
push
dec
add
sbb
push
or
sbb
jo
sub
mov
xor
pop
adc
adc
aaa
scas
pop
sbb
inc
outs
jne
push
jns
jo
ror
inc
push
gs
jae
xchg
mov
lds
adc
ror
inc
jmp
out
dec
gs
and
ds
outs
ucomiss
outs
xor
data16
lods
cmps
jnp
push
outs
jae
mov
xor
lock
inc
mov
sub
stos
jmp
jmp
adc
xor
push
stc
enter
fs
(bad)
jecxz
mov
or
add
mov
lea
int3
cmp
jbe
mov
popf
outs
push
pop
sbb
inc
iret
and
mov
ja
leave
adc
outs
cmp
movs
add
or
xchg
mov
ss
mov
jecxz
test
push
or
mov
sub
pusha
pop
pop
pop
hlt
rcr
add
shl
mov
add
xor
outs
push
inc
rcl
mov
dec
mov
nop
push
sbb
push
pop
adc
cmp
int
cmp
adc
xor
sub
push
adc
add
ss
clc
rcr
inc
mov
pop
inc
or
add
fs
loop
js
push
adc
jno
add
or
test
or
jmp
dec
pop
add
fsubr
adc
xchg
pop
je
jp
or
jmp
imul
test
add
(bad)
push
in
mov
jecxz
and
inc
std
leave
pusha
sar
pop
xor
push
cli
sbb
xchg
outs
mov
loopne
retf
pop
xor
cmp
adc
jg
dec
push
or
jne
jo
stos
dec
inc
jb
add
push
retf
cmp
inc
mov
(bad)
and
pop
adc
mov
das
add
(bad)
push
mov
dec
add
(bad)
pop
popa
pusha
mov
cmp
mov
outs
fist
pop
fadd
and
and
ins
adc
push
es
adc
loop
push
rol
movs
das
sbb
loope
push
push
sub
cmps
jns
dec
stos
shl
cmp
add
xor
repnz
sub
pop
inc
push
push
stos
ins
sub
mov
xor
ss
stos
add
lahf
push
daa
sub
je
cmp
les
cwde
push
jl
(bad)
xchg
or
or
rcr
or
inc
pop
or
mov
popa
mov
xchg
inc
cmp
lea
dec
mov
lods
mov
cmp
cld
aaa
test
daa
ret
ror
inc
add
sahf
and
mov
pop
sbb
or
lea
sbb
shr
es
out
xor
fwait
adc
push
sbb
jbe
sbb
outs
cmp
dec
add
daa
jmp
jl
pop
scas
in
push
retf
loope
cld
fist
pop
xor
add
mov
loope
mov
push
cmps
adc
sub
cmp
into
adc
ret
(bad)
out
xchg
or
sub
clc
pop
mov
clc
mov
popa
addr16
add
(bad)
mov
loopne
adc
dec
mov
ins
sub
mov
test
test
and
rol
cmp
push
push
call
xlat
adc
outs
jo
imul
mov
pop
cmps
or
das
lock
pop
pop
mov
icebp
mov
pop
and
xor
push
xor
das
lock
add
cs
popa
push
and
mov
popa
(bad)
cmc
jmp
fdivr
or
push
out
movs
add
lods
cmp
cmps
and
sbb
mov
add
call
loope
in
mov
cs
mov
test
or
add
je
aam
jmp
pop
call
push
and
je
adc
test
mov
sbb
sbb
mov
push
or
jmp
inc
mov
aaa
or
in
in
adc
mov
and
jb
test
xchg
shl
push
mov
push
sbb
pop
adc
imul
dec
or
je
and
sub
adc
push
pop
jmp
mov
and
pusha
mov
mov
test
pop
loop
js
pusha
push
add
inc
in
sub
lahf
pop
add
and
cmp
leave
mov
jp
xchg
inc
jno
into
arpl
mov
pop
push
or
or
or
sbb
(bad)
mov
adc
sub
jecxz
(bad)
fwait
shl
sub
sub
adc
pushf
in
mov
aam
jnp
in
or
add
(bad)
int3
mov
inc
outs
add
and
adc
xchg
mov
xor
inc
out
xchg
pop
mov
cmps
(bad)
mov
es
loope
mov
inc
fwait
push
add
inc
adc
jl
mov
je
jp
mov
loopne
int
and
cs
ins
stos
mov
add
jns
loopne
add
add
sbb
movs
popa
pop
pusha
or
fdivr
mov
mov
int3
or
adc
mov
dec
cmp
xor
call
jbe
int
add
sub
sub
fwait
in
dec
jne
cmp
enter
jmp
cld
mov
mov
cdq
push
ret
sub
rol
rol
add
and
push
and
pop
mov
cdq
push
jno
xlat
test
adc
outs
test
lods
ins
push
loop
jl
push
cmc
(bad)
movs
cmp
mov
add
lea
js
loope
and
or
or
mov
mov
scas
lods
sub
push
clc
loopne
and
aas
adc
sar
jne
mov
cmp
inc
sub
rol
int3
(bad)
mov
mov
in
retf
sub
fcom
and
fdiv
shl
adc
mov
xchg
enter
repz
in
adc
fmul
fadd
fcom
adc
mov
mov
dec
int3
pop
imul
xor
or
sub
dec
adc
add
rcl
push
sub
dec
cmp
outs
ss
jae
aaa
outs
int3
or
enter
in
data16
outs
enter
adc
sbb
adc
cld
adc
adc
mov
mov
push
and
add
in
into
dec
add
fwait
push
xor
push
outs
xor
or
jp
loopne
push
and
and
cmp
mov
es
neg
rol
and
or
and
xchg
ret
pushf
fild
push
or
mov
iret
hlt
push
jbe
adc
push
cs
fs
mul
mov
jmp
jo
add
arpl
or
mov
dec
jmp
jmp
or
pop
push
in
in
mov
inc
mov
mov
out
mov
xchg
xchg
jne
ins
xchg
fsubr
add
or
jge
je
cmp
mov
pop
add
(bad)
ins
pop
cmp
cmp
push
push
or
cdq
cmp
int3
pusha
nop
mov
fwait
sbb
(bad)
aaa
std
mul
test
enter
test
xor
and
imul
dec
shl
movs
or
sbb
or
mov
out
push
inc
jg
inc
clc
pop
or
xor
jmp
retf
jmp
scas
or
or
pusha
test
add
inc
stc
adc
pop
dec
jno
dec
pushf
in
mov
int3
and
mul
jmp
sbb
xchg
sbb
cmp
inc
or
or
pop
push
cmc
or
test
pop
inc
sbb
dec
sar
mov
add
dec
pop
in
data16
mov
mov
mov
dec
arpl
aaa
leave
or
pop
ret
push
or
les
icebp
loopne
or
adc
repnz
dec
pop
mov
adc
add
sbb
shl
jbe
out
cmp
fdiv
push
loop
cmps
dec
pop
inc
jo
dec
and
loope
fmul
xor
mov
aas
jo
push
or
and
fisttp
sub
or
push
jmp
mov
aaa
popa
xor
sub
mov
or
adc
rcl
mov
xchg
push
aas
xor
pusha
push
adc
and
inc
daa
lock
push
mov
or
and
dec
cmp
add
pop
add
ret
mov
test
stc
push
popa
(bad)
stos
test
fcmovnb
stos
lds
mov
or
mov
aad
test
xchg
mov
xchg
or
lock
pop
call
push
dec
xor
daa
movs
jae
and
call
sbb
test
sti
add
mov
movs
or
test
xchg
jle
jp
mov
fsub
mov
into
or
xor
loopne
xor
mov
ss
cwde
xchg
cwde
pop
or
lods
sub
xor
push
aam
enter
add
add
inc
adc
rcl
pusha
fisub
lock
sbb
add
test
out
sbb
pop
test
mov
enter
lock
idiv
int
push
sub
out
(bad)
adc
test
loope
addr16
xor
outs
mov
mov
mov
jo
or
jne
(bad)
push
aas
cmp
push
out
jp
and
pushf
adc
or
mov
cdq
pop
inc
jb
ss
sbb
adc
fidivr
push
idiv
adc
xchg
daa
mov
ss
mov
fbstp
sbb
adc
mov
into
mov
push
and
adc
sbb
ret
loop
inc
push
inc
or
(bad)
sar
mov
das
int3
push
(bad)
int3
add
adc
mov
or
and
sbb
popa
les
or
adc
mov
fs
cmp
out
sbb
cmp
test
xchg
jo
sbb
or
out
js
cmc
and
mov
cmp
jg
sub
add
cmp
lea
add
push
xchg
sbb
lock
lock
int
das
mov
fs
fild
add
push
dec
push
dec
mov
mov
pop
mov
dec
out
jmp
push
lock
or
mov
push
sar
cmc
fcmovu
push
add
sbb
inc
shl
dec
push
test
mov
mov
mov
test
jg
or
std
clc
retf
cmp
or
push
aam
cdq
xchg
xor
sub
jne
jb
test
and
mov
pop
lods
ret
cmp
mov
xor
arpl
int3
xchg
mov
pop
sub
lods
cdq
popa
push
ds
jae
adc
or
ret
and
add
add
pop
fidiv
mov
mov
lahf
mov
add
dec
fld
mov
add
adc
cmp
inc
mov
cld
(bad)
mov
inc
mov
and
inc
dec
int
inc
(bad)
movs
lock
or
rcr
aam
jecxz
sub
xor
inc
inc
inc
or
inc
clc
cdq
fsub
sbb
jmp
daa
ins
push
ficomp
cmp
fisubr
sbb
pop
sbb
fwait
add
xor
inc
push
xor
and
mov
sbb
test
jg
xlat
test
push
inc
mov
inc
cmp
arpl
or
jg
push
jo
inc
push
dec
xchg
push
jmp
pop
push
cwde
ret
sub
mov
or
mov
xor
adc
call
ret
mov
jns
sbb
inc
fst
ja
cwde
cld
std
dec
fistp
daa
sub
daa
sbb
fs
scas
push
shl
or
push
cld
les
ror
test
(bad)
retf
shr
jecxz
and
jnp
je
outs
jno
(bad)
or
xlat
cmp
fimul
xchg
(bad)
jb
aam
int
dec
fmul
push
jmp
or
inc
jecxz
inc
loope
mov
and
pushf
sysenter
das
cmp
jno
mov
(bad)
scas
xchg
and
sbb
scas
in
(bad)
mov
sbb
pop
mov
rol
or
inc
lods
push
(bad)
mov
std
scas
scas
enter
add
or
add
xor
in
popf
mov
mov
and
in
das
in
test
inc
add
inc
push
stos
mov
stos
jne
mov
ror
mov
sbb
jo
mov
idiv
or
not
das
das
or
pop
je
mov
jb
retf
fadd
pop
push
daa
fild
pop
movs
aaa
aas
out
addr16
add
into
int3
xchg
push
jp
add
daa
sub
xor
f2xm1
mov
adc
and
jnp
or
adc
(bad)
pop
sbb
or
lahf
addr16
xchg
adc
mov
sub
sub
addr16
out
adc
cld
mov
add
add
jmp
jae
je
ds
cmp
mov
pop
sbb
dec
push
clc
mov
ret
pusha
or
or
jecxz
stc
loop
rcl
outs
cmp
cmp
lock
push
ins
xchg
(bad)
ss
leave
leave
dec
(bad)
rol
leave
leave
leave
ret
(bad)
leave
leave
mov
leave
into
leave
leave
leave
retf
int
ret
outs
pop
xchg
daa
fmul
add
sar
xor
fst
push
popa
mov
(bad)
mov
push
push
inc
ins
outs
jb
je
ins
dec
outs
je
ins
outs
adc
gs
outs
inc
retf
fimul
or
cmp
clc
xchg
pusha
call
or
cmps
and
mov
leave
mov
test
push
add
popa
adc
ret
pop
outs
and
jbe
pop
sub
daa
ficom
jb
add
(bad)
mov
xor
pop
je
pusha
iret
xchg
jecxz
inc
sbb
mov
xlat
or
push
or
jmp
mov
push
xadd
add
lock
dec
add
dec
adc
add
mov
call
mov
add
ins
sub
adc
and
push
sub
push
cmp
sbb
and
fisttp
jp
or
popa
pop
arpl
add
arpl
jo
adc
cdq
push
and
out
push
je
mov
idiv
daa
add
dec
and
push
pushf
std
dec
push
inc
push
pop
push
push
dec
pop
inc
pop
pop
inc
inc
pop
loope
(bad)
sti
and
mov
imul
add
(bad)
shr
push
mov
mov
mov
or
dec
pop
push
dec
dec
dec
inc
clc
jle
mov
out
push
inc
dec
inc
dec
push
dec
and
add
fld
je
lods
sbb
sbb
cmp
js
js
inc
or
jae
shl
inc
in
push
pop
fstp
and
push
or
push
pop
dec
mov
sub
push
add
sub
mov
fcomp
add
sbb
adc
inc
dec
sbb
xor
push
mov
pop
add
add
mov
cwde
jbe
sbb
pop
or
icebp
sbb
xor
cs
mov
dec
lods
in
pop
shl
fwait
push
or
push
dec
dec
inc
aam
add
pushf
and
sub
and
jns
gs
popf
ret
fld
outs
popa
ins
push
add
popa
pop
loopne
test
in
or
add
push
icebp
adc
mov
and
add
or
fstp
je
ins
pop
gs
test
pop
add
mov
pop
fs
outs
call
add
add
(bad)
bound
imul
mov
push
add
jne
push
scas
add
mov
fiadd
mov
cmp
in
rol
cmp
arpl
jb
pop
xchg
pop
stos
add
outs
int3
xor
jae
sub
daa
scas
add
inc
cmp
fmul
xor
pop
cwde
call
cmp
add
pop
cmp
inc
mov
push
js
pop
lods
xor
outs
daa
xor
jo
jbe
popa
fstp
mov
and
gs
outs
arpl
arpl
jnp
add
add
ret
dec
mov
cmp
pop
retf
jecxz
ror
sbb
out
pop
dec
xor
inc
dec
inc
sbb
sahf
sbb
add
sbb
ins
pop
add
lods
imul
fcomp
and
pop
rcl
add
lahf
add
ins
pop
pop
sbb
xor
cs
pop
sbb
push
lods
aas
fist
or
add
sub
pop
add
mov
fld
loopne
push
inc
outs
or
loop
xor
retf
pop
or
fs
pop
lahf
lods
sub
fsub
ja
sub
or
rcl
dec
ror
push
dec
and
add
fmul
out
fild
push
inc
inc
inc
push
xor
xor
mov
imul
inc
cmp
pop
mov
aaa
adc
push
or
addr16
(bad)
aas
ss
push
xor
bound
inc
inc
dec
inc
inc
add
inc
pmulhuw
not
cmp
icebp
aaa
dec
inc
xor
xor
push
push
clc
dec
add
cmps
push
aaa
out
into
dec
jb
rol
dec
dec
pop
mov
mov
or
xor
cmp
out
lods
mov
dec
dec
push
inc
push
(bad)
sub
inc
add
outs
inc
dec
ss
fidiv
dec
push
dec
and
repnz
cmp
aaa
sub
push
or
push
inc
aas
push
(bad)
leave
call
cmp
cld
cmp
test
xchg
lods
call
adc
mov
or
mov
pop
outs
bound
shl
push
rcr
pop
inc
sahf
add
jl
cmps
adc
xlat
fcom
ins
pushf
add
mov
mov
call
aam
shl
and
clc
or
xor
push
sub
sub
xor
mov
mov
push
ins
xor
pop
bound
sub
pcmpeqw
pop
jae
rol
pop
xor
imul
dec
pop
mov
jp
xor
mov
imul
loop
or
sub
shl
add
add
sbb
sbb
jne
popa
cld
repz
mov
xor
lods
push
pop
jne
or
or
mov
push
fistp
pop
add
aaa
mov
outs
imul
loope
out
xchg
jbe
aam
sar
sbb
mov
add
leave
and
out
pop
xchg
pop
jo
bound
add
sub
mov
xor
xchg
pop
lea
pushf
adc
pop
js
add
mov
sub
ror
adc
rol
mov
jae
fstp
shl
fwait
shl
xor
das
add
or
fsub
js
iret
sbb
scas
or
push
sub
clc
xor
sub
jns
sbb
dec
js
xor
cs
push
mov
pop
adc
cmp
mov
add
jns
inc
imul
mov
scas
lock
xchg
jecxz
loope
loopne
rcl
outs
ins
pop
fdivr
add
add
loope
mov
dec
add
mov
fsubr
dec
add
aas
mov
jo
pop
cmp
js
xor
test
loopne
adc
fdiv
sub
cmp
xchg
xchg
loope
inc
dec
aad
jle
int3
adc
lea
xor
mov
xor
inc
push
loop
add
sub
adc
push
sub
dec
mov
push
ins
aam
out
pop
sahf
bound
add
dec
adc
jo
mul
test
add
fcomp
stos
test
add
mov
xor
(bad)
xor
push
ret
xchg
xchg
push
sbb
js
mov
push
sbb
scas
lds
pusha
cli
push
sub
sbb
pop
sbb
int
adc
loope
in
fs
lds
shl
mov
jo
dec
jne
ja
or
popa
sti
test
or
aaa
jmp
and
aaa
imul
mov
inc
xor
or
ret
jge
cmp
jb
out
bound
rcr
adc
jo
dec
inc
and
mov
fs
xchg
shl
je
add
push
cdq
or
arpl
jmp
adc
pop
xchg
test
mov
xor
hlt
adc
out
daa
cmp
fs
dec
jbe
fbstp
and
movs
sbb
icebp
sub
jmp
sub
dec
pop
dec
and
and
lods
jmp
loopne
push
ins
mov
push
inc
push
push
pop
mov
dec
cld
push
dec
inc
pop
test
(bad)
mov
push
push
sub
pop
mov
loop
and
cmp
sbb
out
aad
fldcw
sbb
sbb
add
adc
jno
mov
lock
pop
int
fimul
cmp
push
cmp
push
inc
dec
inc
mov
dec
fs
adc
dec
and
lods
mov
or
cmp
call
push
sub
push
ret
(bad)
push
stc
and
je
or
jbe
ror
aaa
ins
and
inc
sub
and
mov
sbb
ss
dec
call
mov
xor
(bad)
daa
sub
pop
scas
lods
int3
das
dec
or
xor
push
xor
sub
out
cmp
pop
call
pusha
bound
adc
mov
push
add
and
add
je
add
push
mov
lahf
in
pop
and
dec
push
(bad)
(bad)
or
dec
ret
push
cmp
cmp
add
std
pop
mov
and
inc
and
(bad)
pop
sub
fild
adc
loopne
arpl
or
add
mov
sbb
adc
jno
imul
inc
jne
add
push
imul
mov
pop
xor
push
xchg
adc
inc
mov
loop
setne
push
dec
inc
push
jno
dec
loope
mov
push
push
dec
jno
aaa
inc
and
or
sub
jge
xchg
add
xor
push
or
xchg
popf
add
loope
pop
(bad)
lock
shl
or
mov
jo
add
jo
js
mov
jo
test
sbb
mov
dec
lods
imul
adc
adc
popa
lea
xchg
xor
lods
or
je
jg
push
(bad)
mov
pushf
sub
call
das
sub
jb
mov
xor
pop
add
outs
test
add
inc
add
les
into
jo
mov
jg
call
pop
and
or
jne
and
or
cmp
sub
ins
lods
push
fdivr
inc
daa
lods
add
push
jl
cmps
(bad)
sar
(bad)
daa
or
lock
pop
dec
inc
dec
inc
rol
fsubr
push
sbb
or
aas
mov
push
loopne
test
sbb
jge
sub
inc
dec
push
adc
sbb
adc
out
scas
inc
xor
mov
add
ins
jb
inc
mov
dec
add
pop
shr
int
dec
loopne
mov
out
push
inc
push
fmul
dec
sbb
jle
pushf
ror
add
or
or
or
js
test
dec
add
sub
ficom
daa
out
add
(bad)
mov
add
add
pop
rol
inc
fisttp
ins
and
jo
push
add
adc
adc
push
out
or
mov
test
adc
push
int
sub
fld
call
movs
jne
in
mov
adc
dec
adc
push
dec
mov
stos
cdq
jbe
dec
jbe
adc
ja
fdiv
cmovno
adc
dec
push
pop
pop
enter
xchg
cdq
jne
sbb
or
pop
dec
in
shr
jae
cmp
sahf
repnz
xor
imul
retf
mov
xchg
push
inc
add
bound
add
fidivr
dec
push
adc
dec
dec
int3
loopne
pop
jp
cld
push
popa
scas
jmp
fistp
adc
ins
imul
jne
je
gs
adc
arpl
aaa
jns
movaps
or
dec
sub
int3
add
out
push
mov
xchg
iret
or
mov
lahf
or
fnsave
inc
push
or
push
add
and
mov
jecxz
dec
sub
fisttp
ja
sub
nop
xchg
and
xor
ja
(bad)
shl
out
fwait
nop
mov
push
sub
inc
lods
cmp
outs
outs
je
gs
or
jnp
sub
sbb
inc
data16
into
dec
jge
add
xchg
in
jae
cs
or
ror
icebp
sub
js
rol
dec
lds
call
imul
cwde
dec
lods
sub
pop
jno
aas
lods
out
mov
dec
fcmovnb
out
in
mov
sbb
es
mov
adc
xor
retf
bound
nop
jnp
rcr
outs
jnp
dec
sbb
jnp
pop
aaa
push
xchg
test
adc
push
pop
push
dec
pop
ja
outs
fcom
jle
xchg
push
jecxz
or
mov
xor
add
dec
loopne
imul
in
xor
inc
or
dec
or
pop
jo
idiv
jl
ucomiss
jne
bound
ds
js
xchg
pop
or
and
je
push
mov
pop
and
xor
jbe
fdiv
and
pop
inc
addps
es
xor
add
push
ins
or
jne
ins
push
pop
ret
fbld
call
adc
js
pop
add
add
call
test
mov
push
pop
dec
mov
arpl
add
js
mov
add
inc
xchg
popa
int3
bound
arpl
sub
push
ins
mov
and
xor
push
pop
stc
enter
in
cmp
fsub
pop
xchg
dec
add
aam
add
cmp
imul
sbb
jb
movs
mov
sub
mov
xchg
syscall
jmp
xor
fadd
cmps
les
push
sbb
mov
pop
jae
aam
or
jl
sub
jmp
inc
fld
mov
sub
imul
ins
retf
sub
sub
mov
das
cmp
loopne
jae
xchg
rcr
aaa
rcl
outs
add
pop
fidiv
xchg
xor
cs
dec
push
jecxz
test
loopne
xor
dec
call
add
loope
test
add
sbb
cmps
in
popa
xor
pop
pusha
cmp
push
and
add
jg
or
mov
cli
inc
dec
dec
dec
dec
push
push
leave
add
or
xor
jge
cwde
inc
adc
sub
inc
pop
in
push
mov
jbe
cmp
inc
adc
adc
loope
inc
clc
sbb
jae
call
sub
ins
adc
cli
sbb
sbb
(bad)
jnp
addr16
add
or
and
js
ret
add
xchg
or
loop
xor
shr
add
fs
mov
das
(bad)
outs
ror
push
pop
je
add
ja
cwde
add
jnp
sub
and
or
outs
outs
mov
mul
test
mov
hlt
and
push
pop
sub
cmp
or
adc
test
inc
push
xchg
mov
push
jl
sbb
adc
add
iret
in
sti
gs
adc
or
pop
ret
test
std
add
or
pop
or
lods
test
jb
jae
loope
or
sbb
add
(bad)
in
cmps
fcom
jns
cmp
pop
inc
sbb
(bad)
dec
inc
push
push
pop
mov
or
(bad)
pop
jle
cs
mov
adc
aam
ja
jb
popa
mov
mov
sbb
mov
inc
cmp
xchg
push
pop
push
jb
stc
sbb
je
int3
mov
aam
or
in
popf
fcom
dec
dec
push
hlt
sbb
in
das
jge
fbstp
mov
adc
add
push
or
outs
dec
or
test
cdq
cdq
(bad)
push
xor
pusha
rcr
dec
sbb
loopne
in
or
add
xor
push
or
in
outs
repnz
jne
add
or
xor
mov
ror
inc
shl
xchg
or
add
mov
mov
add
xchg
cmp
into
fbld
mov
popa
sub
jl
pop
mov
jo
mov
push
push
rcr
mov
icebp
and
test
add
add
sub
inc
std
cdq
std
or
adc
adc
add
js
push
xor
and
rol
pop
or
jns
xor
xor
pop
mov
xor
jo
xor
lods
xor
lods
ror
xor
add
cmp
xor
lods
sub
pop
call
pop
daa
and
loopne
mov
aaa
imul
in
jbe
ffree
jbe
jns
xor
adc
daa
push
push
pushf
and
and
jbe
je
ds
and
or
push
jae
push
mov
lock
jb
out
popa
scas
add
test
jnp
or
pop
imul
mov
daa
adc
lock
imul
or
retf
dec
(bad)
and
push
sbb
pop
loope
pop
and
sub
ins
cmp
pop
push
dec
in
nop
or
xchg
pusha
adc
das
or
sub
lods
fs
enter
or
mov
sub
adc
mov
push
jnp
or
lods
sub
popf
sub
lods
push
out
cmp
mov
xchg
jnp
push
push
sbb
mov
mov
mov
jnp
jmp
adc
(bad)
mov
int3
inc
push
xor
xor
loopne
dec
pcmpeqb
mov
in
push
mov
aam
test
pop
jo
fmul
movs
sbb
neg
xor
add
lods
loop
jp
adc
jae
jo
jb
rcl
fcmovnbe
add
adc
loopne
mov
add
and
bound
dec
and
push
dec
push
loopne
pusha
out
call
mov
cmp
sub
mov
sbb
sbb
xchg
or
outs
sbb
and
push
add
push
or
and
add
add
add
mov
sbb
add
sti
int
sbb
adc
ja
mov
popa
and
adc
and
mov
push
rol
ss
loopne
pop
pop
xchg
or
enter
sbb
mov
push
mov
pop
push
dec
adc
push
jle
cmp
mov
jbe
or
push
inc
mov
or
add
int3
push
add
pop
test
jns
test
loopne
adc
in
int3
adc
jne
pop
push
(bad)
shl
sbb
add
rcl
add
int
add
lahf
leave
or
mov
jb
sbb
inc
arpl
scas
pop
add
cmp
add
shl
inc
loopne
stos
push
jnp
ret
xchg
push
scas
nop
or
enter
data16
or
sub
popa
pop
sbb
mov
in
push
movs
jb
ja
lahf
inc
test
xchg
test
data16
adc
scas
icebp
daa
pop
and
mov
adc
add
xchg
out
test
add
fdivr
push
cmp
adc
daa
loopne
int3
dec
js
ins
sti
jecxz
pop
pusha
mul
into
outs
ja
fldenv
test
test
push
mov
lods
adc
xor
fidivr
shl
mov
xchg
xor
push
jb
xor
imul
add
xor
adc
xor
aam
add
add
sub
inc
aad
rol
xor
push
das
or
test
jae
not
retf
arpl
jo
cmp
sti
movs
outs
adc
adc
fs
dec
xchg
data16
pop
jb
and
xor
ja
xor
ret
inc
mov
xor
sar
ror
jmp
xor
out
add
sub
ret
test
jmp
stos
and
(bad)
cwde
adc
jno
add
inc
inc
mov
fwait
add
aad
or
push
mov
jbe
sti
mov
push
or
xor
stos
mov
fisttp
ret
push
xor
or
inc
mov
and
test
ss
jl
sbb
push
adc
and
out
add
push
push
out
movs
cmc
enter
arpl
xlat
add
and
push
add
sbb
scas
adc
push
sbb
clc
mov
push
pop
xor
aas
rcr
sbb
or
sub
(bad)
pop
adc
cs
dec
inc
and
hlt
adc
mov
lock
jo
jg
and
scas
test
lock
xchg
add
pop
xlat
mov
and
add
xlat
adc
ins
ins
(bad)
leave
iret
push
iret
pop
fld
inc
in
jae
add
dec
add
icebp
mov
add
fmul
sti
inc
or
sbb
pop
loop
in
sub
sbb
xor
sar
push
cmp
cmp
ins
pop
sub
jmp
aam
mov
adc
stos
aad
ins
loop
sub
mov
fild
add
and
mov
cmps
clc
push
pop
aas
cs
data16
xor
rol
aaa
xchg
mov
inc
mov
aaa
outs
(bad)
add
mov
iret
popa
xchg
adc
call
fs
ins
pop
dec
mov
push
jns
jg
jmp
inc
push
push
push
pop
push
jle
or
push
dec
cld
xlat
adc
dec
dec
jmp
and
sub
fistp
cmp
les
cs
mov
std
add
mov
inc
test
(bad)
shl
cdq
jns
ins
cld
add
fadd
or
xlat
inc
xchg
cmp
or
arpl
ret
ins
cld
movs
jb
dec
cmp
and
adc
test
mov
mov
add
cmp
xor
fnstenv
add
inc
jl
in
fst
fmul
mov
and
add
fist
pushf
mov
rcr
pop
call
sub
sbb
add
add
nop
aad
mov
inc
mov
cmps
cmp
pop
rol
fist
mov
popa
mov
(bad)
cmps
leave
mov
push
out
inc
leave
fcom
xchg
adc
add
push
out
js
and
call
mov
les
lds
jge
adc
aas
pushf
cmp
dec
sbb
xor
jae
xor
sbb
inc
inc
jge
push
hlt
ror
sub
add
mov
xchg
xchg
xchg
add
hlt
cs
or
add
inc
outs
pop
rol
or
inc
bound
push
in
inc
stc
pop
outs
hlt
cmp
repz
in
xor
test
or
sbb
sti
inc
lea
enter
mov
js
mov
or
jae
xor
adc
inc
and
cmps
xchg
imul
xchg
mov
lds
arpl
sbb
call
test
inc
adc
cmp
adc
enter
push
sub
cmp
xor
xor
sub
xchg
mov
sar
cmp
push
and
test
pop
rol
sbb
xchg
adc
lea
inc
adc
adc
bound
loopne
inc
mov
aas
adc
mov
cdq
sbb
inc
sahf
cmp
jns
jo
xchg
ds
cs
aaa
je
nop
nop
adc
cmp
pop
pusha
sub
jo
add
inc
outs
adc
inc
push
dec
mov
pop
stos
aam
hlt
dec
icebp
retf
add
mov
xor
mov
xchg
push
cmp
mov
(bad)
rcr
push
psllq
inc
and
dec
pop
aaa
or
cmps
leave
movs
popa
pusha
xor
and
lock
or
and
nop
outs
je
fs
mov
xchg
mov
shl
inc
retf
lods
jge
or
imul
mov
sbb
fcom
add
adc
imul
fisttp
pop
movs
daa
outs
xor
push
inc
mov
inc
mov
jmp
xor
xor
pushf
or
inc
sbb
xor
add
fadd
cs
test
retf
outs
pop
or
fdivr
inc
(bad)
shl
jo
lods
push
jo
in
test
or
jg
sub
mov
sub
inc
idiv
mov
les
test
and
test
sbb
into
or
enter
and
rol
add
pop
xor
test
fisub
movs
xor
call
jecxz
push
mov
cwde
adc
or
dec
ror
mov
sub
retf
or
test
push
test
mov
push
popf
test
push
and
mov
je
xor
push
and
or
mov
pop
cdq
loope
dec
retf
mov
and
pop
daa
sbb
daa
sahf
jbe
ret
xchg
xor
mov
aad
push
inc
sub
cmc
add
sbb
xor
stos
sbb
es
rol
fs
stc
loopne
inc
test
stc
adc
into
call
gs
mov
xchg
jae
mov
mov
mov
pop
cmp
xor
sbb
push
das
sub
lock
pop
cmp
xor
call
mov
or
mov
push
mov
mov
or
push
mov
adc
mov
clc
add
sbb
mov
or
cmc
fidivr
sbb
dec
fisttp
test
fsub
test
hlt
fisttp
jge
mov
rcl
out
add
pop
mov
jecxz
and
push
inc
cwde
inc
mov
add
ror
add
imul
mov
loope
frstor
add
pop
and
ffreep
or
cmp
lods
sub
loope
and
xchg
fadd
add
popa
movs
adc
aaa
popa
mov
popa
xor
xor
or
imul
pop
das
adc
adc
inc
and
push
xor
or
movs
jae
shr
push
ja
adc
sbb
or
and
mov
adc
xor
inc
adc
dec
movs
sub
sbb
add
mov
pop
mov
pop
cs
adc
fs
sbb
add
push
cli
out
ins
rcl
popf
ins
test
xor
mov
arpl
and
jo
xor
ficom
pop
cmp
dec
adc
test
sbb
sbb
sub
push
adc
fadd
bound
sub
cmp
or
sbb
dec
cdq
cmp
add
cmp
fst
mov
ret
push
fisttp
dec
rcl
adc
adc
mov
pop
adc
sub
mov
inc
cmp
mov
add
mov
push
mov
dec
sti
hlt
cli
jo
outs
arpl
in
lods
or
das
inc
dec
imul
out
clc
ins
aaa
mov
ins
xchg
aaa
and
or
jne
sbb
test
jno
loope
mov
or
jecxz
test
je
pop
loope
gs
pop
add
inc
xor
lock
adc
in
int3
or
inc
or
jmp
and
push
inc
push
inc
test
popa
dec
or
xchg
retf
and
test
pop
popa
mov
mov
ja
mov
loopne
repnz
data16
jmp
imul
xor
mov
sub
pop
sub
mov
pop
shr
bound
cmp
sub
mov
push
xor
sbb
icebp
cdq
ror
ficomp
dec
mov
(bad)
cmp
pop
ins
fs
push
sbb
and
fbld
rcl
dec
adc
hlt
mov
add
(bad)
fist
sub
adc
add
push
or
add
popa
aaa
sub
sub
bound
jae
(bad)
lods
rcl
imul
jo
adc
sbb
or
adc
mov
xor
push
das
xchg
or
popa
ret
test
mov
addr16
xor
push
enter
shr
mov
xchg
push
icebp
adc
cmp
rol
jnp
push
or
adc
push
test
inc
adc
rol
mov
movs
icebp
xor
sub
dec
mov
mov
inc
pop
xor
jo
dec
or
add
push
dec
fnstcw
dec
push
ret
nop
dec
inc
cmps
and
mov
sahf
fistp
and
adc
lods
adc
pop
or
xor
enter
femms
jb
loope
mov
jge
(bad)
push
inc
inc
dec
push
inc
shl
ss
push
or
xchg
add
cmp
mov
and
jb
xchg
and
add
inc
cmp
adc
repz
and
push
cmp
popa
lea
jo
stos
sbb
je
scas
push
(bad)
jno
pop
aam
inc
push
inc
inc
inc
push
xchg
out
add
xchg
cmp
popf
cs
ret
ins
loope
dec
add
scas
add
imul
inc
pop
xchg
(bad)
xor
jo
cli
add
dec
fld
and
fs
fstp
cs
in
imul
pop
mov
mov
pop
xchg
add
aas
outs
xor
gs
shl
gs
jmp
jmp
inc
or
ins
ret
cdq
xor
(bad)
xor
loope
xor
gs
inc
sub
inc
leave
dec
and
fnsave
in
adc
fwait
jmp
sar
in
sub
jmp
inc
mov
mov
aas
ins
loopne
or
mov
aas
pop
add
pop
push
jmp
add
popa
adc
mov
push
xchg
es
sbb
mov
scas
xchg
jg
sbb
sti
and
sti
mov
pop
sub
inc
add
jmp
sub
add
push
jecxz
shr
adc
nop
sbb
cmp
aaa
cs
test
jo
adc
test
xor
push
cmp
out
cmp
add
add
inc
push
(bad)
dec
xchg
dec
adc
sub
test
out
sub
lock
mov
scas
jns
int
dec
lea
pop
dec
je
xor
lea
mov
cmp
rol
push
arpl
or
xor
clc
pop
inc
add
mov
sti
cwde
pop
aaa
pop
mov
add
push
arpl
shl
xchg
cs
addr16
xchg
cmp
ins
cdq
imul
adc
pusha
outs
fwait
add
fcomp
(bad)
out
cmp
push
outs
test
int
add
xor
mov
nop
clc
jne
data16
repz
adc
test
fisttp
mov
mov
push
daa
sbb
aaa
push
push
jb
movs
jo
sbb
je
pusha
adc
add
xor
jne
and
pop
and
jae
jae
daa
mov
daa
jg
ja
jp
jno
xor
or
add
lods
lea
inc
jno
shl
retf
inc
jo
xlat
jge
add
xor
jns
and
popa
das
mov
sub
inc
int3
out
or
icebp
repnz
xor
movs
push
xor
bound
adc
sub
push
rcl
mov
add
sbb
xor
ret
jns
or
add
ja
cmp
xor
jmp
data16
jns
add
inc
cmp
jecxz
mov
rol
pop
sub
dec
cmp
movs
jg
ins
sub
pop
xlat
add
pop
jbe
outs
push
mov
lea
sbb
lea
mov
mov
mov
adc
addr16
es
jb
add
inc
bound
aas
inc
mov
sub
mov
cmp
dec
jo
adc
push
sub
pop
cs
fs
pusha
jbe
mov
cwde
aam
ret
data16
jmp
jbe
jmp
out
pusha
ja
ds
(bad)
movs
add
cs
pop
add
sub
dec
mov
inc
xchg
push
sbb
cs
xchg
or
aaa
es
mov
pop
aaa
add
(bad)
test
stos
scas
lods
sbb
stos
ins
int3
adc
in
mov
ins
repnz
push
fstp
pop
sbb
or
xchg
lock
std
inc
dec
push
dec
inc
push
out
movs
test
pusha
push
add
jmp
jmp
inc
dec
ja
clc
aam
xor
cmp
sub
sti
add
push
mov
inc
pop
fdivr
outs
jbe
xor
scas
inc
or
or
es
call
adc
push
cmp
push
test
push
mov
dec
aad
push
in
sub
jo
pusha
stc
pop
sub
cs
nop
bound
adc
daa
ds
lock
add
mov
mov
pop
dec
pop
dec
sti
xor
adc
xchg
xor
or
addr16
cwde
enter
fist
icebp
or
xor
cmp
push
inc
popa
inc
mov
add
sbb
adc
es
fadd
ds
add
push
pop
or
sbb
fwait
mov
cmp
xchg
push
shl
push
xchg
mov
popf
das
sub
pushf
add
sub
sbb
or
push
xchg
adc
or
jnp
and
test
ja
sub
fstp
mov
gs
cmp
jb
inc
cmp
hlt
dec
mov
dec
mov
pop
xor
pop
adc
test
lock
jne
adc
sahf
xor
test
aaa
dec
push
xor
push
mov
call
xchg
add
push
outs
cmp
jle
sbb
imul
scas
fistp
adc
xchg
add
je
push
je
jo
pushf
js
mov
fs
sub
lock
adc
jnp
mov
add
and
mov
ins
out
jne
mov
add
aaa
test
push
test
or
add
test
xchg
add
cmc
push
stos
loope
add
out
dec
or
and
xor
scas
push
mov
loopne
es
add
and
mov
pop
pop
clc
shl
not
push
jge
jle
nop
stos
inc
push
sti
cmp
jae
push
xor
or
push
into
mov
test
push
in
outs
add
test
inc
dec
fs
lods
mov
add
pop
sub
and
test
adc
sub
dec
add
mov
jae
outs
stos
in
popf
dec
xor
es
shl
adc
shr
dec
das
loopne
sub
outs
xchg
cmp
xor
daa
mov
push
inc
add
inc
pslld
lds
dec
rcr
push
sub
es
popa
hlt
inc
js
sti
call
add
cmp
paddsb
add
add
mov
je
out
or
mov
adc
add
js
fs
mov
xor
out
mov
mov
xor
sub
ins
test
adc
cmp
lahf
add
pop
push
retf
jmp
ret
scas
add
add
sub
push
xlat
dec
sbb
sbb
aaa
or
sub
jne
jo
inc
das
pop
push
out
jecxz
or
add
mov
push
xor
jne
inc
icebp
rcl
pmuludq
push
inc
jb
mov
clc
push
sub
imul
sub
shr
pop
jmp
pop
cmp
mov
(bad)
jge
add
ret
lea
mov
cmp
or
mov
add
or
outs
mov
fld
int3
pop
add
fsubr
fisubr
pop
les
pusha
push
adc
sbb
pop
push
outs
outs
add
jns
mov
sbb
sbb
fadd
jg
adc
stmxcsr
push
pop
inc
imul
adc
sub
or
dec
outs
sar
pcmpgtd
mov
scas
inc
sahf
outs
adc
adc
inc
shl
xlat
pop
sub
and
imul
or
or
outs
xor
sbb
and
add
push
outs
add
dec
jl
inc
pusha
inc
js
xchg
sub
or
adc
cld
push
call
xor
ret
mov
ret
(bad)
cli
in
fild
test
ror
and
mov
mov
jo
sete
dec
pop
nop
imul
ins
out
push
addr16
push
call
jo
lock
inc
mov
push
sub
outs
jo
pop
push
push
adc
add
dec
mov
out
push
or
mov
lods
pushf
mov
pop
pop
ret
push
xor
bound
push
or
in
imul
push
mov
outs
sbb
cdq
push
sub
and
or
add
outs
push
add
xor
add
lods
loopne
xor
pop
inc
pop
cmp
add
nop
sbb
pop
add
and
and
pop
push
dec
sbb
pop
dec
add
pop
adc
(bad)
jmp
nop
dec
mov
test
je
sub
mov
push
push
push
or
popa
xlat
rcr
pusha
sub
add
dec
add
inc
cmps
adc
retf
mov
into
push
mov
mov
inc
mov
mov
aad
adc
lods
xor
add
mov
out
add
js
rcr
add
push
jno
or
outs
push
xchg
adc
or
pop
pop
mov
or
ins
and
(bad)
aas
push
adc
adc
sub
xchg
sbb
clc
and
push
mov
(bad)
or
push
mov
mov
push
xlat
lock
out
mov
test
pop
add
push
jmp
mov
(bad)
je
push
cmp
imul
or
jmp
sbb
xor
pop
push
out
push
mov
daa
out
out
add
mov
call
add
out
out
sub
or
test
gs
mov
push
mov
gs
das
pop
xlat
aaa
out
je
dec
mov
dec
ret
or
push
scas
push
into
pop
sub
xlat
(bad)
push
cli
ja
idiv
mov
inc
call
sub
mov
jae
sbb
xor
pop
dec
sub
outs
outs
jo
mov
cmp
cmp
mov
cmp
or
sub
sbb
sbb
data16
push
mov
dec
into
(bad)
lock
psubusb
add
xor
mov
outs
ficomp
add
hlt
mov
mov
hlt
cwde
push
push
xchg
sub
mov
test
je
push
pop
pop
add
and
jae
mov
loopne
je
sub
lea
je
(bad)
push
xchg
in
push
push
xor
mov
std
sub
mov
mov
into
mov
jl
push
hlt
pop
xor
call
mov
dec
cld
mov
dec
outs
or
cs
add
sub
pop
inc
adc
sti
mov
mov
call
push
add
jg
or
in
push
cli
mov
fdivp
mov
mov
dec
mov
push
push
sub
popa
mov
inc
in
test
add
fmul
inc
out
addr16
mov
adc
or
dec
and
or
clc
push
dec
adc
xlat
dec
cwde
mov
or
imul
mov
dec
je
sub
test
xor
shl
adc
add
jae
jge
add
dec
fld
jne
mov
jbe
sahf
lea
cdq
cmp
lahf
mov
ret
or
cmp
inc
sbb
mov
cmp
mov
and
mov
pushf
fst
sub
dec
adc
stc
jo
and
and
imul
mov
adc
mov
push
or
xchg
mov
pop
mov
aaa
sbb
cld
push
push
add
cwde
mov
jmp
mov
jmp
fmul
call
mov
sbb
outs
call
adc
xor
add
push
call
push
xor
rol
cmps
lds
nop
cmp
push
arpl
inc
pop
mov
sub
sub
xchg
or
sbb
dec
xchg
or
pop
ins
imul
pop
pop
cmc
rol
jmp
mov
xor
xor
cs
add
push
or
sbb
pop
sbb
sub
icebp
test
jne
outs
mov
lds
int
add
inc
jo
cmp
sti
sub
push
pop
scas
xor
push
add
(bad)
fdivr
lds
push
adc
adc
cmp
call
add
pop
mov
cmp
jo
lahf
into
dec
arpl
js
jne
push
dec
dec
cli
pop
xchg
pop
push
lea
mov
add
cmp
and
xor
mov
mov
jmp
pop
sub
sbb
jle
int3
popf
sub
int3
mov
cmp
aam
in
loopne
or
inc
loopne
sti
ja
push
pop
mov
test
and
int3
cmp
enter
sbb
hlt
pop
clc
xor
cld
aam
xor
dec
sahf
and
add
and
or
sbb
enter
test
sbb
jb
and
mov
and
test
cmp
push
sub
sub
xor
popa
and
cmp
sbb
fs
cmp
inc
enter
xor
mov
jb
jbe
fsub
dec
clc
xchg
popa
aaa
sbb
pop
xchg
pop
cmp
dec
push
jo
jns
or
test
and
pop
sbb
push
fs
and
mov
nop
xchg
popa
and
push
sbb
mov
in
add
jl
mov
mov
xor
adc
and
sbb
mov
pushf
inc
nop
test
mov
xchg
enter
inc
cwde
jl
sbb
jb
mov
loopne
ret
outs
xchg
jb
enter
mov
adc
mov
push
call
mov
inc
adc
ins
jbe
and
std
and
xchg
cmp
(bad)
rcl
inc
push
sbb
arpl
or
push
push
and
mov
sub
or
inc
inc
push
fsubr
nop
xchg
loopne
in
fsub
sbb
adc
fadd
and
neg
cmp
jp
fsub
or
test
cmp
inc
or
and
cmp
je
ss
sub
inc
or
dec
inc
sbb
ins
clc
and
cmp
push
sbb
xchg
inc
or
and
xchg
js
sub
mov
and
dec
jo
xor
xchg
and
in
sub
sbb
or
xchg
and
inc
xor
mov
jb
push
xchg
xchg
sahf
pop
and
cmp
xchg
mov
and
inc
dec
enter
inc
ins
dec
sbb
jb
nop
dec
mov
in
mov
or
xchg
and
test
mov
nop
retf
hlt
cwde
sub
je
xchg
or
js
push
fsub
and
or
nop
push
sbb
in
cwde
xchg
push
mov
and
xor
and
xchg
jb
in
mov
call
rol
inc
je
inc
mov
pusha
mov
lods
rol
mov
fwait
and
ins
rol
mov
sbb
int3
les
stos
add
xor
push
fsub
fsub
prefetcht2
mov
inc
dec
and
cmp
fdivrp
jae
push
test
in
jmp
xor
adc
and
push
and
mov
aaa
stos
sahf
inc
clc
and
mov
mov
shl
and
lock
and
sbb
in
xchg
loopne
hlt
mov
(bad)
cmps
cmp
fstp
adc
hlt
and
mov
enter
dec
enter
test
add
mov
jb
mov
fsub
(bad)
xchg
test
cmp
mov
cmp
cmp
js
and
and
mov
push
sbb
and
call
mov
(bad)
mov
jo
(bad)
cmp
test
push
mov
mov
aaa
int3
and
hlt
and
mov
jbe
inc
inc
mov
inc
push
inc
add
push
and
movs
and
arpl
and
int3
adc
and
ss
movs
sbb
and
in
je
retf
and
aam
add
popa
ins
add
xor
fs
sbb
test
push
sbb
push
lods
dec
xchg
into
mov
mov
dec
inc
cld
and
inc
cmps
shl
and
and
stc
popa
cmps
cmp
enter
adc
and
arpl
je
push
and
jl
pop
and
sub
js
xor
xchg
inc
jl
test
sbb
nop
test
popf
sbb
cwde
inc
add
inc
inc
sub
pusha
sbb
fs
nop
test
xchg
inc
inc
push
lods
lock
xor
enter
inc
push
and
(bad)
push
stc
and
cmp
enter
and
mov
inc
push
fs
(bad)
and
mov
je
and
add
jl
and
sti
lods
and
cmp
mov
sbb
cwde
push
enter
pushf
mov
les
inc
inc
pop
lods
cli
mov
and
or
inc
in
and
and
adc
in
sbb
mov
xor
cmp
sbb
sbb
mov
inc
inc
push
and
sub
fs
dec
sub
xor
mov
and
mov
and
sbb
inc
xchg
xchg
inc
inc
xchg
inc
cmp
fs
pop
dec
adc
push
sbb
xor
xchg
pop
add
pop
sub
xchg
jbe
enter
ins
retf
cmp
and
je
and
dec
xor
enter
pushf
and
mov
sbb
enter
mov
div
sbb
xchg
jmp
cwde
test
mov
or
retf
sub
lods
and
(bad)
push
mov
jb
shl
mov
lock
and
cmp
inc
inc
push
sbb
xor
adc
test
aam
and
fsub
push
fmul
loopne
and
enter
js
movs
mov
jb
aam
add
in
fadd
clc
in
cmp
in
fs
nop
add
inc
push
mov
ret
cmp
inc
jb
enter
adc
and
pushf
int3
sbb
ss
add
and
push
sbb
test
xchg
or
in
or
xchg
push
jbe
and
enter
mov
hlt
dec
and
dec
dec
push
test
fs
mov
inc
push
pop
hlt
pusha
in
xor
sbb
jl
and
mov
cmp
sbb
jb
movs
rcl
nop
xchg
inc
mov
mov
fs
push
inc
push
aam
fmul
in
cld
fsubr
shl
and
xor
enter
lock
inc
mov
sbb
hlt
cmp
dec
clc
jl
nop
outs
call
xchg
popa
aas
loope
push
add
and
fs
xor
fs
inc
push
sbb
jbe
adc
or
and
test
jb
pop
and
and
sub
sub
les
xor
and
cmp
enter
cmp
mov
jb
in
adc
loopne
xchg
inc
dec
inc
dec
push
sbb
mov
and
push
in
add
pop
push
(bad)
and
sbb
xor
std
shl
and
push
sbb
jbe
and
fadd
push
and
cmp
lods
xor
jmp
loopne
test
mov
inc
xor
mov
enter
test
cwde
hlt
pushf
sbb
loopne
xchg
inc
mov
sbb
test
xchg
and
mov
ds
nop
and
retf
pop
xchg
arpl
and
cmp
rol
enter
or
int3
test
push
sbb
enter
int3
fmul
dec
and
and
aam
popa
addr16
xchg
sbb
daa
cmp
push
and
xchg
jo
mov
jb
cld
js
into
in
xchg
inc
jl
adc
and
sbb
fs
lock
iret
enter
nop
dec
xchg
sbb
jb
jo
mov
mov
mov
fs
xor
push
lods
nop
mov
mov
nop
shl
fidiv
and
shr
xchg
inc
enter
mov
adc
rcl
shl
cwde
fdivr
and
xor
jbe
xchg
and
cmp
xchg
jb
enter
lock
push
cmp
hlt
xchg
clc
and
xchg
in
add
in
in
fsub
or
and
sbb
fs
adc
adc
inc
mov
and
pusha
arpl
cwde
and
inc
les
mov
arpl
sub
xlat
and
jb
enter
mov
xchg
sbb
and
fsub
inc
inc
inc
push
sbb
movs
jb
nop
xchg
dec
fmul
and
push
jo
enter
mov
popa
pop
sbb
lock
xor
and
xor
push
sub
jo
jb
enter
je
js
mov
js
lods
and
and
loopne
adc
xor
sbb
and
push
sbb
push
and
cwde
or
pushf
inc
inc
push
sbb
cwde
mov
shr
xchg
jb
enter
mov
cld
mov
nop
xchg
shl
and
mov
int3
test
sbb
inc
loopne
sbb
nop
sbb
in
into
mov
xchg
fadd
and
inc
and
and
retw
and
inc
push
and
mov
enter
lock
arpl
hlt
clc
sbb
sbb
xor
pusha
hlt
(bad)
and
and
les
clc
mov
add
sub
and
jb
enter
mov
xchg
in
xchg
fwait
and
xchg
sbb
and
xchg
sbb
enter
out
mov
push
sbb
jo
fnstenv
inc
shl
push
cld
adc
(bad)
and
cmp
add
adc
lock
shr
in
dec
or
xor
test
je
mov
add
add
and
jb
ins
and
(bad)
xchg
clc
sbb
jmp
cs
cmps
and
popf
sbb
fdivr
(bad)
loope
xchg
dec
add
aaa
and
jge
push
clc
sbb
cld
sti
movs
inc
inc
jl
cmp
sbb
(bad)
in
sbb
(bad)
hlt
and
and
hlt
enter
pop
clc
mov
xor
lods
lods
inc
mov
xlat
in
and
nop
xchg
mov
mov
cmp
mov
iret
or
and
xor
mov
mov
mov
fild
hlt
mov
and
xor
sub
cwde
fs
and
xchg
enter
shl
xchg
inc
mov
add
fcomp
loopne
sbb
jg
and
mov
arpl
push
and
fs
and
js
add
push
and
or
mov
call
test
mov
ja
pop
pop
pop
mov
push
inc
loopne
add
fisttp
jb
pop
add
add
jmp
fimul
ret
pop
mov
pop
ret
sub
add
inc
or
ins
add
bound
out
jle
add
jns
add
add
add
add
shr
push
jae
sub
push
scas
fscale
mov
pop
add
push
add
push
je
arpl
dec
adc
add
jb
xor
or
ja
or
data16
dec
popa
imul
add
or
stos
or
inc
sbb
jne
push
push
cmps
ds
rcr
out
es
adc
int
xchg
call
push
pusha
or
data16
int3
rcl
jle
sbb
ja
jnp
and
outs
push
sub
pushf
sbb
jg
sbb
sub
inc
(bad)
adc
ja
out
or
dec
iret
arpl
xor
add
int3
or
ins
and
repnz
mov
int3
adc
add
mov
mov
rol
xchg
xor
in
ja
add
pop
xor
ret
jmp
pusha
out
sbb
xor
pop
jg
push
pusha
and
sbb
outs
arpl
mov
pop
pop
push
pop
push
out
xor
gs
add
adc
ins
and
pop
scas
push
inc
sbb
push
or
mov
sub
imul
jg
aaa
push
mov
or
inc
pusha
push
mov
add
jns
ds
retf
adc
iret
retf
scas
and
add
aas
ret
sub
xchg
xchg
inc
or
adc
jb
inc
(bad)
mov
add
inc
push
adc
sbb
int3
imul
arpl
add
lods
scas
das
mov
aad
dec
mov
add
adc
jae
xlat
adc
xor
push
ds
mov
es
(bad)
adc
adc
sub
add
call
xor
and
addr16
xor
outs
add
sbb
adc
push
add
mov
bound
adc
sub
xor
inc
sbb
outs
xor
sbb
pop
dec
dec
add
addr16
push
xor
adc
daa
cmps
push
pusha
add
inc
das
outs
sub
push
adc
iret
inc
adc
and
outs
aaa
shl
dec
xchg
and
dec
mov
and
jg
int
pop
sar
jne
inc
dec
ja
dec
ror
jl
push
(bad)
jnp
xor
imul
adc
pop
aas
inc
mov
retf
sbb
and
das
aaa
and
inc
(bad)
mov
shr
push
pop
xor
inc
add
stos
push
rol
cmp
out
mov
pop
pop
and
test
push
mov
add
dec
xlat
scas
add
or
mov
xor
or
(bad)
out
inc
push
push
aaa
ror
scas
ret
ss
add
add
adc
add
dec
mov
dec
ror
movs
jbe
jbe
adc
dec
int3
cmp
pop
sbb
push
call
dec
pop
inc
adc
xchg
imul
dec
push
mov
or
adc
pop
outs
mov
fbld
sub
sbb
outs
test
adc
outs
fcom
imul
mov
xchg
inc
sbb
repnz
dec
add
imul
jmp
mov
cmp
mov
push
push
xlat
addr16
test
pusha
add
addr16
xor
adc
xchg
jg
fisubr
cdq
pusha
jg
inc
cs
add
popa
sbb
push
mov
pop
lahf
xlat
push
or
sub
imul
scas
outs
lds
jmp
jle
mov
lods
add
mov
ja
push
or
sub
pusha
addr16
jg
(bad)
add
pusha
sbb
sub
or
rol
lahf
emms
xchg
dec
or
call
jp
cmp
jne
fiadd
(bad)
fistp
or
jecxz
push
pop
pusha
xor
adc
jmp
cmp
enter
push
push
sti
or
mov
out
pop
ret
addr16
addr16
and
dec
fwait
xlat
inc
add
inc
mov
rol
mov
xor
mov
mov
push
cwde
dec
or
add
and
aas
jg
fadd
sbb
xchg
push
xlat
xchg
inc
or
js
xor
mov
inc
mov
mov
cmp
popa
fisub
dec
dec
daa
mul
sbb
inc
or
push
pslld
sti
dec
jns
scas
cmps
jb
out
pushf
mov
adc
jmp
add
ror
xchg
(bad)
mul
pop
sub
mov
add
outs
push
bound
or
mov
or
es
push
arpl
lahf
push
pop
aaa
inc
mov
(bad)
stos
add
or
add
and
xor
mov
bound
(bad)
lahf
bts
out
inc
add
cs
mov
push
add
or
sbb
add
int
ja
fsubr
xchg
fsubr
inc
xor
adc
push
outs
or
and
pop
jbe
stos
lods
fild
push
mov
push
inc
pop
pop
pop
imul
or
inc
mov
sahf
or
inc
out
mov
dec
pusha
add
ja
adc
mov
jae
inc
inc
pop
pop
xor
mov
xor
shl
pop
pop
or
(bad)
lahf
xchg
(bad)
ss
and
dec
popa
push
and
addr16
les
and
push
lods
adc
lahf
push
jnp
or
imul
inc
test
xchg
and
into
cmps
mov
adc
add
ds
mov
jns
add
movs
mov
pop
dec
cmp
add
inc
push
ja
fmul
mov
xchg
push
outs
repz
inc
and
fwait
and
adc
cli
fiadd
stos
and
jmp
xor
test
add
inc
and
push
mov
out
and
mov
xor
push
jg
test
or
xchg
cmp
add
or
cmp
dec
jmp
add
js
xchg
adc
xor
mov
mov
adc
adc
or
addr16
pop
pop
or
mov
dec
dec
dec
and
adc
pop
push
and
stos
push
test
xchg
leave
push
cli
sub
push
inc
inc
pop
sub
mov
and
jnp
movs
xchg
aaa
outs
push
aaa
lds
xor
aaa
shl
adc
inc
cs
aas
das
cmp
mov
enter
test
inc
and
mov
inc
dec
in
add
ja
add
and
fisub
outs
xchg
enter
push
push
dec
ror
retf
dec
aas
(bad)
aas
add
cmp
dec
pop
push
movs
add
mov
mov
push
pop
aas
add
test
xor
fimul
or
das
scas
add
dec
push
iret
aas
stos
adc
add
aas
out
or
xor
ja
pop
pop
outs
add
dec
ins
adc
(bad)
dec
lods
push
sub
addr16
push
sub
pop
inc
shl
dec
aaa
aas
fist
call
pusha
mov
aas
pop
add
pop
dec
dec
mov
adc
dec
lahf
lods
fiadd
push
mov
push
test
lea
mov
adc
out
movs
mov
mov
pop
test
sub
(bad)
call
cmp
mov
jmp
dec
inc
mov
inc
dec
push
and
dec
div
in
test
div
sub
neg
add
es
xchg
push
or
xchg
jae
or
adc
sub
push
cmp
add
shr
push
mov
push
xlat
movs
push
scas
inc
scas
pop
add
lahf
lea
xchg
lahf
mov
(bad)
push
adc
out
inc
ret
xchg
push
xchg
cli
(bad)
xor
inc
daa
mov
pop
fild
mov
out
shl
and
mov
add
ror
pop
push
fisub
ss
sub
ror
pop
inc
retf
push
and
imul
or
push
push
push
inc
sbb
rcl
mov
(bad)
nop
fsub
pop
movs
or
inc
mov
pop
and
xor
or
sub
call
jb
pop
pushf
inc
ficomp
imul
pusha
xchg
sbb
mov
xlat
sbb
sub
dec
xchg
push
pop
stos
outs
and
push
cmp
push
movs
pop
outs
sti
movs
ficomp
xchg
xchg
adc
and
xchg
mov
and
xor
ret
xlat
in
or
pop
and
adc
push
mov
neg
inc
mov
addr16
push
div
sbb
adc
mov
xchg
call
add
and
mov
jg
sbb
dec
inc
outs
xor
add
mov
out
adc
fisub
jmp
add
pop
cmp
es
inc
das
ja
and
add
mov
arpl
pop
push
jbe
loopne
or
adc
adc
or
shr
push
push
pop
mov
div
lods
fldenv
inc
les
jle
not
sbb
(bad)
aas
xor
and
mov
push
scas
aaa
scas
xchg
or
cs
retf
test
inc
out
pusha
mov
dec
or
inc
inc
test
aaa
jecxz
inc
inc
cwde
aaa
(bad)
aaa
add
add
xchg
es
cmp
ret
(bad)
jp
add
push
dec
pop
lods
nop
ss
mov
add
xor
imul
cwde
jae
fcom
add
pusha
dec
inc
jg
out
or
movs
jg
mov
pop
inc
dec
add
push
push
sub
fs
cmovg
adc
cmps
and
mov
dec
test
test
adc
inc
aaa
pushf
int3
mov
push
push
push
retf
xor
ficom
xchg
pop
push
mov
inc
test
adc
and
push
dec
or
aad
(bad)
xchg
cmps
popa
mov
add
inc
ret
popa
xchg
xchg
sub
sbb
out
xor
ror
pop
add
and
inc
add
add
(bad)
push
or
push
sbb
daa
mov
dec
sub
adc
inc
stos
dec
mov
sub
mov
test
xor
mov
lahf
dec
outs
push
sbb
dec
push
outs
cmps
js
xchg
add
xchg
or
dec
push
pop
pusha
or
sbb
pop
call
add
xadd
jg
sbb
or
cmp
shr
ins
test
pop
jg
and
iret
(bad)
pop
push
cmp
add
sub
inc
pop
push
(bad)
pop
mov
sub
pop
adc
or
mov
(bad)
scas
sub
aaa
add
or
pop
add
or
push
test
movs
sub
add
test
scas
inc
push
mov
pop
jmp
(bad)
out
add
mov
iret
dec
adc
mov
dec
mov
mov
out
dec
add
cmps
dec
mov
adc
not
pop
adc
push
push
fadd
fidiv
ss
dec
dec
push
pusha
sub
push
out
push
push
xchg
loopne
xsavec
or
pop
push
jbe
push
add
mov
xlat
add
push
push
pop
inc
outs
sub
adc
push
ret
xlat
push
sub
imul
cmp
mov
out
mov
in
test
pop
xchg
rcl
test
inc
out
and
and
rcl
and
pop
or
cmp
adc
mov
xchg
sub
or
push
jmp
mov
or
or
pop
fist
sub
adc
push
out
sub
dec
adc
cdq
push
push
mov
add
retf
movups
cwde
inc
mov
push
and
(bad)
dec
addr16
rol
iret
adc
lea
out
add
test
fbld
mov
jo
dec
mov
pusha
or
adc
rol
dec
lahf
mov
push
sub
movs
scas
add
push
cmp
or
pop
push
xor
add
pop
adc
add
push
addr16
adc
addr16
inc
adc
or
mov
push
push
dec
push
push
sbb
or
test
(bad)
(bad)
sub
and
or
xchg
test
ja
stos
pusha
je
inc
fimul
sbb
fmul
or
arpl
arpl
jle
fcom
dec
jae
pop
inc
cmp
or
adc
cwde
ret
ss
mov
add
and
mov
sub
popa
or
add
(bad)
adc
cmc
xlat
add
retf
push
aas
bound
xor
adc
sub
dec
out
dec
ins
or
pop
pop
stos
mov
mov
outs
(bad)
push
inc
mov
cmp
and
and
mov
or
retf
mov
add
inc
and
cwde
out
scas
and
xchg
jp
push
or
test
jae
ror
push
cmps
add
add
sub
outs
adc
(bad)
(bad)
outs
or
(bad)
pop
pusha
or
jp
pop
fs
aas
inc
mov
mov
xor
pop
ds
add
and
lahf
(bad)
loopne
xchg
sub
jae
add
inc
(bad)
(bad)
test
push
xchg
bound
and
mov
mov
outs
and
fsub
adc
sub
popa
sub
inc
ret
stos
add
sbb
out
jg
and
push
jmp
adc
jg
sbb
or
push
mov
mov
iret
mul
adc
dec
dec
mov
call
fadd
movs
fiadd
jno
idiv
add
arpl
adc
push
or
test
push
pop
and
fmul
bound
adc
adc
bound
mov
add
adc
sub
not
sub
and
push
sbb
mov
outs
mov
shr
je
add
pusha
outs
jmp
sub
inc
xchg
dec
xchg
mov
xor
inc
pop
loopne
inc
jecxz
inc
test
pop
test
sbb
cmps
movs
pop
mov
pusha
adc
and
pop
mov
and
daa
ficomp
adc
push
add
pop
or
rol
xor
pop
mov
pop
lahf
mov
jbe
pop
mov
pop
addr16
push
inc
or
outs
inc
mov
pop
mov
outs
outs
jne
inc
or
cdq
push
ds
cmps
mov
cs
out
dec
int3
adc
inc
jbe
outs
dec
and
leave
cli
mov
imul
push
fucomip
mov
scas
mov
scas
sub
sbb
pop
jg
out
mov
mov
add
sbb
adc
mov
sub
test
int3
pop
ja
add
icebp
and
xor
adc
pop
outs
inc
inc
adc
add
or
xlat
(bad)
imul
pop
push
xor
mov
aaa
aas
div
xchg
xchg
ss
imul
mov
aaa
or
ja
mov
or
cwde
xor
fmul
sbb
push
inc
jbe
pop
push
mov
or
sbb
inc
mov
stos
dec
sub
cmp
adc
add
push
ja
add
cmp
pop
push
dec
scas
mov
or
add
mov
xchg
push
sub
xchg
(bad)
lock
scas
retf
xchg
inc
test
outs
jg
sub
jo
mov
call
cmps
or
jg
adc
sbb
(bad)
loopne
jb
dec
ja
mov
inc
or
jo
or
pop
push
cmp
xchg
mov
lahf
dec
test
sbb
push
lock
xor
mov
sub
fild
sub
mov
sub
inc
test
xor
ins
addr16
xchg
(bad)
jae
das
jg
rol
push
or
or
mov
fbstp
or
and
ja
inc
or
adc
xlat
repnz
call
sub
adc
mov
sub
dec
rcl
inc
and
sub
fistp
or
les
cmps
add
ret
push
daa
push
dec
push
sub
aaa
adc
imul
push
inc
mov
test
pop
addr16
pushf
inc
mov
jecxz
fidiv
push
sbb
and
ins
dec
iret
xchg
jno
sub
sbb
sbb
shl
jmp
cli
mov
pusha
inc
shl
rol
ret
outs
sub
nop
pop
sub
shl
xor
pop
ja
loop
push
push
or
adc
rcl
or
push
addr16
adc
dec
daa
or
movs
lea
es
push
mov
add
sbb
sbb
mov
shl
out
mov
out
xor
mov
out
pop
sub
les
inc
inc
iret
addr16
sub
pop
iret
outs
iret
test
mov
aaa
nop
sbb
jne
mov
xor
push
pop
pusha
or
add
adc
add
mov
pop
add
test
and
or
sbb
mov
push
and
push
dec
arpl
ja
jmp
and
ja
pusha
ret
aas
jg
sub
sbb
add
sar
bound
sub
movs
pop
jg
movs
add
push
pop
xchg
push
int3
pop
cmp
jg
add
add
mov
adc
jg
push
add
daa
sbb
add
lea
stos
push
push
add
pop
mov
inc
retf
daa
xchg
dec
push
rcr
dec
shl
test
ja
fistp
fistp
inc
or
sysexit
mov
xchg
or
dec
pushf
mov
dec
scas
bound
push
mov
push
mov
inc
aaa
mov
push
aaa
inc
or
inc
pop
adc
push
data16
push
add
pusha
push
setae
add
push
daa
pop
or
int3
cdq
pop
fiadd
imul
stos
add
xchg
sub
inc
add
or
and
xchg
rcr
movs
enter
mov
add
stos
push
xlat
push
adc
xor
loopne
les
or
push
ja
sub
test
xchg
pop
imul
mov
neg
mov
add
scas
sbb
test
add
mov
push
test
fs
or
rol
sub
lahf
pop
or
lods
adc
cmp
inc
aas
and
rcl
dec
cmps
call
dec
dec
aas
(bad)
jmp
or
sar
add
neg
and
add
dec
xchg
mov
mov
rcl
ja
mov
loopne
mov
push
push
add
push
xor
pop
push
mov
adc
imul
fcomp
adc
out
push
and
aaa
(bad)
aaa
xchg
test
jo
adc
xchg
ror
daa
inc
test
jle
and
dec
or
xor
mov
sbb
jmp
hlt
mov
cld
add
add
popw
sbb
sbb
or
inc
inc
sbb
and
inc
inc
inc
inc
sub
xor
inc
inc
inc
inc
cmp
inc
dec
inc
inc
inc
inc
dec
push
pop
push
inc
inc
inc
inc
pop
pusha
fs
ins
jo
js
inc
inc
inc
jl
test
mov
inc
inc
pushf
mov
inc
inc
lods
mov
mov
mov
inc
inc
inc
int3
rcl
fsubr
(bad)
push
or
enter
call
enter
or
inc
inc
enter
dec
dec
push
push
fs
std
loopne
mov
mov
fs
rcl
fsub
jb
(bad)
inc
pusha
fs
dec
dec
xor
xor
jo
xor
xor
js
adc
cwde
pushf
mov
movs
test
mov
xor
xor
mov
rol
int3
xor
xor
mov
aam
xor
xor
fsub
in
xor
xor
lock
clc
outs
fs
fs
fs
push
pop
add
adc
fs
sbb
fs
sub
fs
cmp
fwait
bound
rol
xor
xor
and
or
xor
sbb
enter
add
pusha
or
enter
adc
enter
or
push
enter
dec
dec
pop
pop
fwait
dec
xor
cld
jne
xchg
jo
je
xor
xor
add
nop
xchg
cwde
pushf
xor
xor
mov
enter
rcr
pop
pusha
ins
ror
fs
enter
js
or
enter
mov
xchg
cwde
pushf
mov
movs
test
mov
mov
or
adc
and
and
sbb
and
and
and
sub
cmp
in
pusha
and
sub
enter
push
enter
push
pop
pop
pusha
enter
fs
enter
jl
enter
test
enter
pushf
mov
movs
test
mov
enter
mov
enter
int3
ror
enter
fcomp
loopne
enter
call
enter
cld
add
enter
or
mov
and
sub
mov
inc
mov
push
mov
pusha
fstp
mov
stc
mov
xchg
rol
int3
xchg
xchg
xchg
xchg
rcl
fcomp
xchg
xchg
xchg
xchg
loopne
call
xchg
lock
clc
cld
sub
or
or
inc
inc
inc
or
sbb
inc
inc
inc
and
sub
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
dec
dec
inc
inc
inc
inc
push
push
pop
pop
xor
pusha
fs
push
or
inc
inc
sbb
or
inc
inc
inc
mov
inc
inc
pushf
mov
inc
inc
lods
mov
mov
mov
inc
inc
inc
int3
rcl
fadd
inc
inc
fsub
in
inc
inc
inc
inc
in
lock
clc
inc
cs
inc
cld
add
inc
inc
or
adc
inc
inc
inc
inc
sbb
and
inc
inc
inc
inc
sub
xor
inc
inc
inc
inc
cmp
inc
dec
inc
inc
inc
inc
dec
push
push
pop
inc
inc
inc
inc
pop
pusha
fs
ins
jo
js
inc
inc
inc
jl
test
mov
inc
inc
pushf
mov
inc
inc
lods
mov
mov
mov
inc
inc
inc
int3
rcl
fadd
inc
inc
fsub
in
cdq
inc
inc
inc
in
lock
icebp
sbb
hlt
sub
mov
dec
add
or
fldlg2
fwait
or
sbb
sbb
and
xor
int
sub
outs
xor
xor
push
stos
ins
or
ret
add
cdq
or
sbb
sbb
mov
sbb
sbb
sbb
sbb
(bad)
enter
sbb
rcl
fcomp
sbb
sbb
loopne
call
iret
jmp
adc
and
and
sub
jle
neg
sar
or
fldcw
cmp
mov
jmp
or
mov
mov
xor
test
fs
pushf
fs
(bad)
rcl
dec
mov
fs
pop
mov
fwait
sub
or
lea
cmp
test
movs
lods
mov
adc
je
call
adc
jne
sub
sub
xor
ins
or
adc
pop
pop
dec
xor
push
sbb
and
push
jo
in
ds
and
aaa
neg
xor
sbb
sub
inc
or
and
jmp
es
pop
jnp
inc
or
adc
imul
imul
add
outs
jp
inc
xor
adc
fwait
sbb
push
sub
lods
ret
nop
push
mov
push
mov
jmp
add
stc
xchg
push
push
mov
mov
xor
push
push
push
fs
jbe
std
mov
mov
cmp
mov
push
pop
(bad)
idiv
outs
dec
mov
xchg
xchg
xchg
add
push
clc
adc
and
inc
mov
and
js
shr
mov
js
sub
push
mov
dec
sti
jg
add
and
add
mov
dec
in
int
sbb
add
mov
inc
adc
pop
cmps
sbb
cmps
retf
inc
jno
call
or
add
mov
es
xchg
imul
mov
bound
adc
ficom
fsub
fmul
cmp
jae
add
xor
mov
or
mov
stos
pushf
popa
ins
adc
lock
mov
cmc
out
sysret
xor
addr16
sbb
jmp
out
mov
je
inc
movzx
(bad)
int3
jl
cmps
loopne
je
inc
sub
jne
fcomp
sar
imul
inc
imul
nop
imul
outs
jno
sbb
les
push
ins
popa
fistp
push
mov
sbb
mov
ret
jmp
fild
in
ret
jb
mov
inc
and
add
into
sar
dec
xor
or
mov
sbb
inc
in
lahf
fisub
sbb
mov
xlat
sub
nop
outs
jne
fadd
and
js
jmp
pop
pop
push
mov
mov
daa
adc
pop
push
add
out
inc
or
mov
inc
add
mov
sahf
mov
xor
movs
and
add
mov
popf
mov
and
outs
js
pop
mov
push
movs
sahf
sub
shl
push
aaa
fiadd
mov
aaa
sahf
aaa
pop
mov
and
dec
imul
or
inc
adc
adc
jmp
enter
adc
mov
sub
sub
in
xor
jne
loope
inc
xor
mov
adc
jle
ins
xor
(bad)
out
push
(bad)
ins
retf
clc
pop
ret
in
or
outs
outs
je
(bad)
jmp
je
jne
add
or
inc
sbb
outs
ins
dec
lock
add
add
add
into
pushf
xchg
and
popf
cmp
cmp
(bad)
inc
jbe
push
dec
mov
fwait
outs
add
add
jo
test
mov
sbb
dec
(bad)
(bad)
sbb
or
(bad)
ret
loop
outs
int
int3
and
inc
jg
fs
jnp
mov
inc
add
jl
daa
add
fcmovnb
jg
inc
push
inc
xor
data16
jge
jle
adc
cmp
sub
xor
mov
jl
push
add
sbb
push
fmul
add
push
call
add
sbb
add
inc
cmp
or
pop
inc
add
mov
pusha
loope
jo
arpl
and
cmovbe
outs
jae
loopne
fisub
xor
aam
cmp
sub
outs
jb
das
xor
int3
(bad)
mov
inc
callw
mov
pop
pop
stos
add
aaa
add
inc
cld
dec
clc
jge
or
dec
pusha
ror
inc
add
pop
pop
test
push
and
ret
arpl
imul
sbb
jl
loopne
xchg
stc
mov
hlt
js
push
int
or
sbb
or
cmp
or
inc
pop
popa
jb
daa
ins
inc
outs
jg
sbb
inc
gs
outs
jns
pop
push
retf
mov
xchg
mov
cs
pop
(bad)
mov
gs
outs
jo
push
ins
jg
pop
rcl
pop
jg
push
pop
hlt
pop
cmp
add
jg
int3
fisubr
fs
popf
ret
lea
jae
jnp
movs
jo
ret
sub
add
in
pop
xor
outs
fs
mov
imul
jbe
push
push
dec
imul
pop
dec
or
jae
lods
jecxz
inc
dec
add
push
out
inc
mov
pop
xor
test
test
loop
jae
jmp
(bad)
ror
mov
and
jmp
mov
mov
mov
mov
es
je
push
shl
add
(bad)
sub
outs
neg
bound
cwde
push
ss
xchg
mov
jmp
je
mov
xor
or
cmp
pop
lea
mov
inc
mov
mov
mov
xor
or
mov
and
mov
fdiv
mov
fsubrp
and
jle
adc
ret
nop
repz
inc
push
mov
call
and
sub
inc
sti
rcl
push
es
and
shr
and
mov
push
jbe
fs
in
xor
xor
mov
retf
dec
sub
mov
mov
test
call
test
push
mov
aas
int3
fiadd
xchg
xor
pushf
or
std
shl
sbb
scas
ret
push
cmps
mov
out
jg
or
arpl
fs
push
sub
xchg
loopne
push
push
jmp
mov
ins
stos
ror
stos
lods
sbb
dec
dec
stos
push
push
ror
movs
dec
add
ins
jae
mov
or
inc
loope
or
jb
pop
inc
fisttp
dec
mov
gs
pop
adc
lock
dec
inc
xor
nop
fisttp
cmp
loop
push
ffree
push
pop
push
or
sti
fimul
mov
push
or
xor
repnz
popa
lahf
pop
sub
xchg
pshufw
mov
int
ins
push
movs
movs
pop
push
ins
cmps
adc
ds
jnp
jl
mov
push
mov
mov
scas
(bad)
mov
test
mov
push
neg
mul
ds
xor
xchg
push
dec
cmps
xor
lods
es
push
add
(bad)
cmp
or
popa
js
movaps
lds
(bad)
(bad)
dec
push
ds
fist
push
jb
add
jns
hlt
sub
fmul
push
xor
inc
ins
popa
jae
fs
pop
add
add
dec
add
add
mov
xchg
fidivr
push
adc
stos
xor
mov
mov
loopne
outs
push
ins
mov
or
gs
pop
or
ins
push
dec
push
int3
jecxz
or
inc
in
push
add
sar
xor
mov
push
je
sub
push
jae
pusha
jae
add
xchg
(bad)
jb
mov
or
push
push
imul
jecxz
push
shr
out
xchg
sub
push
adc
xchg
add
or
pop
dec
jecxz
add
xor
inc
addr16
out
mov
inc
dec
pop
mov
push
fbld
add
lds
fild
adc
add
add
ud0
fld
ds
cmp
(bad)
mov
call
icebp
daa
adc
idiv
out
push
mov
mov
mov
ss
or
pop
xor
data16
ins
add
push
clc
add
mov
dec
mov
test
je
mov
jno
sub
inc
mov
mov
jne
lea
and
call
retf
(bad)
sbb
sbb
fstp
or
hlt
adc
xor
mov
pop
and
cwde
cmp
mov
inc
push
or
das
sub
inc
dec
cmp
je
mov
cmp
cwde
jno
sbb
les
outs
xor
lock
mov
xlat
inc
ss
aas
ret
cs
push
out
and
jl
mov
mov
dec
mov
add
and
test
inc
mov
shl
jo
aas
mov
mov
std
pop
js
sub
pop
push
shl
ret
push
pop
adc
mov
and
popa
inc
or
or
jne
enter
out
pop
sub
cmp
jo
and
mov
push
inc
mov
push
adc
push
push
and
push
clc
or
mov
jae
mov
ja
pop
jnp
mov
mov
xchg
pop
pop
push
cmp
add
cwde
mov
(bad)
push
sbb
dec
inc
add
mov
call
push
or
inc
or
dec
jmp
push
adc
inc
dec
dec
dec
popa
outs
or
lods
(bad)
clc
outs
arpl
je
mov
sbb
jbe
and
pop
clts
or
pop
ja
xchg
push
lods
and
aas
push
shl
ins
lods
mov
pop
inc
add
and
aas
xor
pop
int
cs
push
xor
mov
or
fcom
add
xor
add
mov
pusha
lock
(bad)
fstp
push
add
add
mov
icebp
ja
imul
inc
arpl
add
xor
test
sub
add
pop
cli
sub
mov
jl
sbb
cmp
xchg
outs
sbb
or
and
enter
add
outs
pusha
mov
sar
bound
arpl
pop
inc
mov
in
shr
add
cmp
cmp
mov
push
push
xchg
retf
mov
lods
and
and
xchg
les
fstp
mov
jmp
mov
jo
dec
(bad)
push
jb
sub
stc
mov
sub
adc
jp
loopne
mov
mov
mov
mov
sti
sub
dec
push
enter
xchg
sbb
iret
xchg
xlat
mov
lahf
ins
mov
ja
add
(bad)
into
ins
jbe
adc
or
push
pop
pushf
outs
and
out
and
sbb
retf
jne
cs
lds
popa
jbe
outs
adc
lds
mov
xor
pop
ss
mov
or
inc
in
xchg
aaa
pop
int
(bad)
cmp
xchg
jmp
push
inc
cld
and
sub
xor
adc
ins
jbe
clc
ret
inc
adc
ins
adc
mov
fdivr
add
adc
(bad)
loopne
push
(bad)
loopne
add
push
xlat
xor
aaa
or
ss
in
push
adc
push
adc
aas
mov
adc
leave
inc
gs
test
cmc
ins
push
je
scas
or
imul
inc
mov
push
movs
cmp
or
jl
or
pop
and
push
aad
xchg
cmp
sub
lds
add
pop
mov
and
lods
mov
xor
out
push
icebp
lock
test
std
cmp
nop
pop
cmp
(bad)
adc
aaa
outs
lods
jl
dec
retf
or
test
daa
sbb
sbb
sbb
aas
jae
movs
jnp
jbe
push
dec
or
std
or
push
bound
or
mov
pop
add
aam
mov
repnz
cld
pusha
shr
inc
xchg
lock
mov
sub
adc
xor
aas
mov
test
neg
mov
xor
xchg
push
neg
push
push
xor
mov
inc
data16
pop
stos
(bad)
fcomp
mov
sbb
hlt
jge
lea
jo
or
mov
mov
jo
pop
test
mov
js
mov
sub
mov
jle
shl
add
cwde
or
ret
mov
imul
and
fld
pop
pop
sbb
or
add
mov
lds
adc
enter
jne
outs
ins
push
inc
push
xchg
mov
addr16
outs
jle
or
dec
adc
fldl2e
rol
mov
pop
mov
sbb
mov
xchg
ja
push
sub
jne
or
and
add
jge
mov
xchg
add
add
nop
nop
test
or
sbb
or
cmovno
imul
leave
inc
neg
les
xlat
push
push
sbb
xor
movs
(bad)
xchg
out
cmp
out
jle
add
sbb
add
sbb
or
shl
add
add
mov
mov
pop
das
or
push
inc
in
test
sub
inc
imul
and
adc
adc
sbb
hlt
lods
ds
cmp
add
jle
pop
push
and
mov
pop
jb
jo
cs
test
adc
xor
vmwrite
jge
sub
add
sbb
cs
lods
repz
mov
push
mov
out
mov
dec
push
and
sub
hlt
inc
call
iret
and
push
mov
mov
jecxz
sub
xchg
mov
pop
xchg
mov
push
scas
ins
inc
lds
or
push
sbb
add
add
loope
mov
movs
sub
xor
adc
ins
jo
imul
rcl
and
push
(bad)
jnp
cmp
sub
sub
xor
test
dec
mov
dec
push
mov
bound
or
push
jne
add
mov
cmps
xor
gs
fisttp
add
push
push
jae
dec
gs
jmp
xorps
ins
mov
scas
mov
data16
adc
xor
xor
inc
cmp
cdq
cmp
push
ss
arpl
int3
jp
sub
repz
lock
fidiv
mov
pop
lods
das
xor
sub
cmp
jne
add
leave
push
lahf
add
lahf
xor
xchg
or
leave
jnp
fcomp
adc
cmp
popa
sbb
sub
in
cli
push
bound
je
lds
xor
add
ins
xchg
jo
(bad)
cmp
ror
sub
inc
xor
xor
mov
push
xor
xchg
rcr
or
inc
inc
ins
adc
add
int3
xchg
push
push
pop
outs
jo
pop
pop
test
imul
push
in
pop
add
sub
cmp
push
(bad)
xor
mul
daa
xchg
adc
jno
xchg
inc
outs
cwde
add
add
int3
xchg
bound
inc
add
jne
ret
push
in
je
push
dec
test
sbb
push
push
je
jbe
dec
jmp
inc
pop
test
inc
inc
lods
test
or
and
dec
inc
scas
or
ins
mov
mov
ret
push
out
mov
jmp
inc
dec
or
fwait
push
mov
pop
push
push
xchg
jecxz
xor
ja
pop
push
push
mov
add
push
test
and
xchg
rol
inc
dec
adc
sbb
inc
dec
out
sbb
push
sub
shl
xlat
adc
xor
or
sar
pop
dec
xor
mov
jno
int3
pop
dec
inc
inc
mov
or
loopne
push
pusha
(bad)
jle
adc
inc
push
pop
xor
sub
and
and
push
imul
nop
and
and
mov
(bad)
daa
and
and
int
xchg
and
icebp
sbb
ds
and
and
or
add
and
push
pusha
or
push
mov
adc
(bad)
jne
stos
and
sub
(bad)
push
fsub
sbb
xchg
movs
pusha
add
mov
mov
les
add
out
nop
stos
inc
jge
sbb
cmp
push
in
add
pushf
outs
add
adc
push
jmp
jb
xlat
pop
sub
and
xor
nop
mov
rcr
dec
fmul
xchg
ror
add
add
mov
(bad)
pop
ret
mov
push
add
pop
ins
adc
or
data16
adc
inc
and
mov
ss
or
addr16
mov
cmp
push
cmp
syscall
inc
or
and
xor
call
jg
add
addr16
add
and
or
ins
ror
out
daa
fadd
fsub
js
adc
jo
push
mov
and
lahf
sub
pushf
mov
scas
jle
test
shr
sub
mov
inc
arpl
push
(bad)
jmp
push
jmp
daa
cmp
fs
push
jbe
and
stos
in
je
cwde
outs
or
mov
sbb
jle
cmp
push
ja
pop
imul
xchg
cli
movs
in
pop
xchg
cmps
mov
jo
fadd
fcom
shr
inc
js
pop
loop
in
outs
das
sub
aaa
jmp
out
mul
jl
outs
xchg
inc
inc
sbb
xchg
push
xor
outs
push
push
mov
jb
add
cld
clc
or
les
push
movzx
(bad)
aaa
(bad)
adc
or
push
out
ss
adc
adc
mov
mov
stc
add
cmp
inc
jne
xor
mov
add
sub
ret
pop
jne
or
adc
pop
and
jne
and
push
clc
push
add
jl
fild
loopne
or
add
pop
pushf
push
or
pop
jmp
bound
xchg
sbb
je
xor
mov
retf
dec
or
add
push
shr
jmp
outs
ror
outs
jge
xor
mov
cmp
jmp
pop
lock
clc
mov
in
jo
ror
or
ret
adc
mov
in
mov
cmp
adc
xchg
hlt
lds
mov
dec
rcl
push
and
int3
dec
mov
lea
add
jo
jg
mov
cmp
je
inc
add
clc
mov
xchg
sbb
inc
and
iret
test
and
punpcklbw
jb
mov
mov
test
push
out
mov
shr
scas
cmp
imul
ja
and
mov
inc
nop
xor
(bad)
or
adc
mul
inc
push
mov
jne
dec
jo
clc
cmp
je
and
and
jmp
stos
loope
pop
pusha
push
and
and
and
pusha
xor
xchg
inc
lds
pop
scas
or
pop
(bad)
ja
mov
add
jne
xor
mov
add
pop
leave
cmp
push
pop
int
and
hlt
arpl
cmp
mov
pop
addr16
push
retf
pop
test
mov
xor
jns
sub
inc
add
pop
sbb
movzx
xchg
jle
mov
pop
xor
xor
enter
mov
(bad)
in
jb
(bad)
fdivr
and
dec
icebp
in
dec
aaa
dec
cmp
push
mov
jl
adc
sub
jge
outs
nop
nop
jge
and
push
add
push
mov
xchg
ja
push
pusha
rol
jg
or
fmul
mov
inc
loop
inc
pop
add
nop
push
pop
fdiv
xor
lock
dec
cld
mov
pop
loopne
push
dec
pop
add
or
cld
inc
push
push
sbb
(bad)
clc
push
mov
add
xor
add
mov
cmovb
mov
mov
and
mov
and
xor
bound
mov
add
loope
mov
cdq
loope
mov
test
xor
and
mov
xor
out
stos
inc
mov
jl
inc
in
mov
frstor
cmp
ret
mov
jmp
add
pop
jae
(bad)
and
cs
jno
inc
jns
mov
daa
sub
xor
xor
nop
add
pop
aas
sbb
jo
inc
add
out
or
ins
cmp
jg
push
cs
popf
loope
add
jb
pcmpeqd
stc
mov
cwde
push
pop
pminsw
pop
jno
call
cmps
or
sub
jno
popa
ret
xchg
inc
mov
add
push
pop
sbb
fild
ins
mov
sar
inc
xor
cli
in
out
pop
outs
sbb
aam
es
call
adc
adc
and
sbb
loopne
pop
inc
bound
adc
cmp
js
(bad)
push
adc
and
mov
stc
and
addr16
in
aaa
xor
test
adc
jecxz
pop
adc
outs
and
add
and
dec
lahf
xchg
add
mov
lods
dec
in
fs
lock
mov
sub
movs
pop
sbb
shr
sbb
fst
sub
cmp
or
js
in
inc
fild
stos
test
pop
test
mov
std
add
jne
out
cmp
retf
dec
jne
adc
shl
mov
sub
push
sbb
sbb
sti
cmp
and
add
jno
stos
adc
ret
jne
dec
dec
stos
addr16
xlat
arpl
sbb
mov
ss
imul
sbb
push
imul
add
push
or
mov
gs
addr16
nop
lahf
push
cmp
sub
push
fcomp
mov
dec
wbinvd
push
push
add
add
(bad)
fs
ins
psubsw
test
daa
push
mov
push
daa
mov
jnp
in
or
call
out
push
push
fsub
repnz
sbb
shr
fdiv
xor
jo
or
je
out
sub
retf
shl
inc
sbb
or
es
lock
(bad)
fmul
lods
outs
xor
lock
xor
pushf
add
xor
adc
fadd
int3
cs
jb
inc
in
xor
jmp
movbe
cmp
cmp
out
pop
sub
cmp
push
pop
jbe
jo
stos
aas
stos
call
mov
in
or
jo
sbb
iret
push
xchg
and
mul
leave
sub
pop
sbb
sub
hlt
call
(bad)
push
mov
clc
mov
pop
sbb
pop
outs
mov
pusha
push
push
add
inc
jl
or
xor
imul
(bad)
push
xor
loop
js
cmp
bound
xor
cmps
push
imul
dec
xor
xor
or
fs
dec
movs
mov
add
cmp
pop
test
inc
sbb
push
or
inc
aaa
pop
rcr
sar
stos
adc
jo
jne
inc
inc
mov
dec
retf
fwait
push
ret
call
pop
or
into
in
jbe
iret
xor
sbb
push
cmp
iret
pop
mov
cmc
xlat
aam
ins
xchg
sub
dec
(bad)
int
add
inc
movs
shl
pop
jmp
pcmpeqd
aam
test
push
test
loopne
inc
add
shl
add
add
ret
pusha
sbb
pusha
sbb
je
popf
cmp
and
pop
pop
inc
or
mov
lods
xchg
push
rcl
add
and
scas
lods
aaa
xor
inc
add
pop
mov
enter
mov
mov
popa
xor
push
pop
or
jo
add
xor
or
dec
jae
rol
cmp
(bad)
or
ins
jbe
or
xor
in
nop
aas
sbb
push
dec
push
jbe
or
push
jo
push
xor
or
mov
fadd
push
fbstp
shl
aam
jle
rcl
ss
outs
sbb
xor
xor
cmps
ins
push
outs
xor
imul
inc
ins
imul
adc
outs
je
jmp
sbb
mov
out
pop
pushf
outs
in
imul
jb
popf
jmp
cmp
adc
dec
push
and
ins
add
adc
push
push
nop
push
adc
or
outs
inc
cmp
dec
xlat
(bad)
loopne
fild
js
or
or
lds
mov
fld
test
or
retf
jne
addr16
add
fwait
cli
add
add
pop
sbb
sbb
cmp
enter
xor
sbb
and
(bad)
outs
push
sbb
push
outs
jl
dec
int3
jne
cmp
cwde
neg
cmp
daa
pop
es
push
push
pop
dec
inc
inc
das
push
lock
dec
mov
xor
mov
loopne
mov
inc
jns
inc
jb
popa
jns
mov
int3
movs
lea
and
popa
clc
ja
into
xchg
and
jbe
inc
popa
ins
ins
bound
imul
xchg
inc
mov
dec
jae
push
xlat
sub
mov
adc
dec
fbstp
add
cmp
inc
and
jo
outs
xchg
push
cld
mov
xchg
xor
js
pop
push
dec
bound
mov
or
or
adc
test
add
inc
push
inc
push
push
cdq
sub
sbb
loop
sbb
or
daa
adc
jle
or
retf
ror
rol
test
pop
sbb
add
mov
push
dec
rcl
pop
aaa
inc
ret
addr16
into
ja
jb
mov
or
outs
xchg
lea
dec
sub
pusha
push
jbe
adc
cmp
or
mov
add
inc
dec
jae
adc
pushf
outs
ins
gs
outs
fimul
sar
repz
and
pop
pushf
adc
mov
adc
jp
push
test
xor
cmc
add
or
imul
ss
pop
xor
dec
imul
dec
mov
mov
mov
cs
push
pop
ret
sub
xor
mov
inc
mov
pop
mov
adc
into
popf
or
cmp
xor
fist
xlat
sbb
dec
cld
inc
mov
cwde
and
or
ja
and
jne
dec
jl
cmp
or
add
out
int
not
cmp
push
test
cmp
add
sub
fsub
inc
mov
inc
inc
test
js
lods
test
out
push
xchg
push
push
call
(bad)
adc
and
add
iret
fsub
data16
in
je
inc
imul
adc
jbe
push
mov
sub
jns
retf
fdiv
mov
shr
xor
sbb
sub
pop
dec
jbe
outs
mov
mov
adc
mov
jnp
ds
cs
add
test
scas
enter
xchg
ret
ins
mov
lds
inc
imul
lods
mov
imul
and
push
add
xchg
sbb
mov
adc
movs
inc
mov
xchg
bound
jno
or
mov
add
inc
or
outs
leave
inc
imul
jecxz
pop
push
add
dec
push
or
call
add
pop
inc
push
pop
sbb
pop
inc
inc
nop
or
scas
or
xor
jl
sub
or
dec
xlat
inc
push
push
inc
fsub
adc
inc
sbb
pop
outs
imul
cmp
and
iret
inc
or
icebp
add
pop
scas
out
or
fcos
pop
inc
sub
or
sti
push
data16
bound
fs
mov
inc
shl
sbb
inc
inc
inc
inc
pop
sub
add
aaa
sti
fcmovb
inc
push
fimul
pop
aas
das
xchg
push
loope
push
neg
cwde
push
or
sub
mov
jnp
mov
ret
mov
pop
add
or
or
stos
xor
cmp
pop
popa
mov
aas
nop
mov
cs
sub
inc
aas
clc
inc
push
movs
mov
and
stc
sub
add
or
mov
dec
outs
data16
sub
fnstenv
or
push
in
data16
cmp
sar
jl
es
mov
push
sub
movs
out
jno
push
scas
retf
mov
push
inc
push
leave
leave
leave
int3
add
inc
push
dec
nop
sbb
mov
xchg
rcr
push
and
pop
pop
test
and
and
inc
ins
mov
mov
cmp
pop
sub
dec
or
outs
popa
fs
mov
push
les
or
mov
dec
pop
or
inc
in
xor
hlt
mov
(bad)
pop
push
add
jo
mov
minps
ret
sub
mov
lods
rsm
inc
scas
mov
dec
inc
addr16
xchg
mov
fdivrp
and
inc
inc
inc
inc
inc
ins
mov
inc
mov
mov
inc
xchg
out
mov
popa
(bad)
fst
inc
push
test
dec
or
inc
call
adc
inc
std
shr
sbb
push
movs
mov
push
push
aas
mov
sbb
rol
jmp
inc
sub
repz
mov
jo
lods
jnp
pop
and
mov
pop
shl
sbb
xor
lds
jo
shl
and
pop
mov
in
sub
mov
mov
dec
fwait
cmps
int3
add
loope
or
xchg
add
pusha
mov
add
add
sub
ficomp
inc
loopne
xstore-rng
cmps
add
sub
or
push
in
sub
jo
xor
dec
push
sub
jns
jne
sub
adc
cmp
cmp
imul
xor
dec
inc
add
lahf
xor
or
das
add
pop
pop
popa
lock
int3
leave
or
daa
push
dec
add
fsub
push
rol
aaa
push
mov
mov
add
cmp
jo
add
je
cmp
lahf
mov
push
aam
outs
push
add
mov
rol
xchg
push
pop
jecxz
pop
push
iret
popa
inc
inc
jne
data16
or
push
jae
shl
leave
in
and
and
or
push
push
jbe
pop
add
inc
cmp
lods
cmc
mov
sbb
cmps
add
int
dec
mov
add
ins
aas
add
in
adc
jae
push
not
jge
fidiv
ja
sub
call
sbb
jnp
sbb
sub
outs
int
sbb
inc
test
pop
xchg
pop
pop
inc
pop
jns
mov
add
inc
pop
add
sub
and
add
pop
fiadd
mov
test
test
pusha
dec
push
addr16
das
popf
or
jmp
adc
in
add
ins
pop
bound
outs
sahf
sub
out
mov
repz
push
push
enter
push
mov
xor
nop
xor
add
add
fcom
push
add
ins
outs
push
xchg
ficomp
mov
lods
lock
push
and
push
dec
cs
push
dec
dec
fwait
int
rcl
sar
cmp
cmc
js
adc
ins
ss
pop
push
dec
add
inc
lods
movs
inc
push
cmp
fiadd
test
scas
stc
les
push
nop
mov
push
mov
test
mul
test
(bad)
outs
hlt
loopne
enter
mov
cld
nop
movs
push
fdivr
add
(bad)
push
push
aam
and
mul
add
and
mov
imul
jl
sbb
or
js
add
jecxz
xchg
cs
and
push
test
add
jp
sub
and
dec
jbe
xor
enter
inc
inc
js
jne
xlat
test
cmp
pushw
xor
mov
rcl
das
imul
dec
rcr
pushf
lock
adc
push
push
rcr
dec
popa
jns
ins
outs
in
clc
dec
add
pop
lahf
inc
gs
retf
outs
mov
mov
loop
ins
fs
inc
and
inc
add
sbb
shl
pop
add
or
add
pop
daa
pop
sub
aam
ja
ffreep
sub
inc
fistp
fs
jno
dec
sub
(bad)
into
scas
mov
sub
or
sub
jbe
jb
out
cwde
rcr
xor
push
(bad)
mov
add
inc
sbb
xor
jno
mov
mov
mov
cs
out
inc
dec
adc
mov
(bad)
ins
pusha
dec
adc
fwait
jo
int3
ffree
inc
dec
adc
loop
jecxz
pop
push
sbb
call
inc
dec
pop
mov
sub
sbb
xor
inc
cmp
push
das
mov
test
or
xor
jb
or
dec
sub
xchg
ret
xor
push
push
and
xlat
cs
sar
pop
inc
fcom
push
pop
fisubr
mov
push
add
and
stos
rol
push
dec
push
or
sbb
pop
push
aam
sub
inc
repnz
mov
adc
push
out
add
mov
mov
popf
or
rcl
pop
push
mov
pop
push
sbb
cmp
and
add
rcr
or
mov
dec
or
fsubr
daa
xor
rol
ja
adc
outs
add
shl
add
adc
rol
sbb
test
jmp
cdq
ucomiss
ucomiss
cmp
lahf
loopne
jmp
ds
cmp
or
arpl
inc
xor
add
jo
push
jo
jg
jbe
cmc
or
xor
outs
ja
vmovq
pop
loop
aaa
test
and
sub
or
cmovno
in
pop
xor
ss
push
stc
push
xor
inc
pop
popa
jb
inc
inc
xor
loopne
retf
or
add
(bad)
xor
adc
mov
or
out
adc
mul
cs
gs
push
push
push
jbe
push
and
pop
mov
adc
inc
cmps
jg
or
cs
adc
sub
jb
test
gs
dec
int3
pop
dec
add
push
or
sbb
add
lods
jbe
pop
push
ja
sbb
sbb
xchg
inc
push
sub
dec
push
addr16
(bad)
scas
inc
push
pop
add
add
add
push
add
adc
cmp
push
push
retf
enter
ins
pusha
jno
mov
aaa
adc
push
pop
call
aad
jecxz
pushf
icebp
fcom
add
jl
stos
pop
mov
or
out
cld
ror
ins
or
out
mov
or
cmps
or
dec
sub
aaa
push
sub
cmp
sbb
mov
and
or
aaa
or
mov
add
add
jae
hlt
and
cmp
or
addr16
push
sbb
push
out
pushf
push
pop
ja
daa
dec
das
push
push
out
or
dec
push
test
inc
and
shr
xor
arpl
pusha
add
cwde
adc
bswap
test
popf
or
out
push
outs
or
pop
fisttp
or
fwait
and
fwait
or
inc
pop
das
es
push
add
push
(bad)
sbb
sbb
adc
or
xor
jo
je
mov
pop
jmp
shr
out
or
xchg
xchg
xchg
xchg
sub
pushf
xchg
retf
xchg
xchg
mov
ja
js
push
rcl
(bad)
daa
push
mov
dec
inc
xor
mov
dec
or
mov
(bad)
std
sub
cmp
mov
cmp
cmp
neg
inc
push
dec
xor
xor
sbb
push
inc
xchg
adc
xor
and
shr
dec
stos
outs
dec
in
shl
daa
nop
inc
xchg
inc
in
in
xchg
mov
fst
inc
xchg
ins
sbb
mov
lock
das
rcl
push
xor
int
push
pop
sub
xlat
push
cs
icebp
mov
mov
lock
nop
or
stos
outs
xchg
mov
into
mov
jns
mov
mov
inc
push
cld
repnz
sub
popf
add
mov
mov
scas
data16
stos
or
and
xchg
ds
inc
xchg
dec
sbb
or
inc
or
shr
inc
inc
popa
outs
inc
fisub
push
or
pop
sub
sub
add
add
das
and
call
popf
hlt
dec
jae
jne
cmp
jnp
sub
sahf
inc
imul
mov
daa
push
or
call
mov
or
add
je
rol
and
popa
ins
clts
sbb
test
pop
add
daa
or
pop
mov
ficom
retf
or
mov
iret
inc
cmp
jmp
mov
mov
(bad)
push
mov
fimul
pop
mov
lods
ret
(bad)
lods
aad
imul
inc
mov
cs
adc
jmp
xor
xor
cmp
nop
jo
dec
aam
loopne
mov
rol
dec
in
outs
outs
je
inc
mov
mov
outs
mov
mov
outs
xor
inc
or
sbb
fist
popa
ins
dec
jne
bound
and
ror
jne
pusha
pusha
add
daa
mov
les
iret
in
mov
and
sbb
xor
aam
or
das
pop
fnstenv
jle
test
and
add
mov
push
ror
gs
inc
dec
ja
adc
or
pusha
test
fs
lods
add
pusha
rcr
add
inc
or
pusha
and
adc
popf
aaa
adc
out
pop
mov
arpl
and
cmp
jp
imul
fs
xchg
add
jbe
cwde
pop
jo
jbe
inc
loope
dec
lock
cmps
xchg
nop
stos
inc
fsubrp
mov
cwde
test
push
in
popa
(bad)
ficomp
or
inc
dec
dec
jne
fs
std
outs
and
imul
push
mov
out
pop
inc
push
ins
inc
mov
daa
(bad)
xor
mov
inc
push
(bad)
pop
xchg
pop
pop
cmp
inc
or
cmp
into
rcr
xlat
pop
sub
mov
pop
lock
fsubr
mul
cmp
inc
jo
pusha
push
inc
jb
adc
xor
or
push
add
outs
mov
pop
lods
lss
sub
sbb
mov
nop
adc
mov
dec
out
or
ins
pop
inc
push
xchg
mov
pusha
(bad)
pushf
pop
je
sbb
jae
in
add
inc
pop
(bad)
mov
(bad)
add
(bad)
xor
into
in
ss
cmp
inc
pop
adc
out
(bad)
and
or
(bad)
mov
add
or
pop
dec
les
pop
cmp
inc
jg
outs
xor
test
ror
(bad)
loopne
or
retf
push
mov
mov
gs
out
inc
pusha
mov
cmp
adc
arpl
pop
test
inc
add
into
mov
sbb
popa
ins
jae
or
cmp
out
pop
pop
adc
push
xchg
inc
pusha
iret
loopne
outs
ret
add
dec
rsqrtps
add
aas
sbb
pop
mov
inc
add
out
cmp
push
sub
fadd
push
push
test
js
adc
inc
add
xor
cmps
or
or
hlt
addr16
rol
mov
(bad)
aad
or
retf
push
movnti
inc
popa
je
inc
mov
ja
inc
int3
loopne
ja
inc
dec
add
or
add
jp
cwde
adc
or
jmp
ja
pop
xor
sbb
xor
pop
add
cmovb
or
cwde
adc
loope
add
sub
xor
push
mov
xor
push
add
push
mov
std
pop
or
xor
push
push
xor
mov
mov
adc
push
inc
mov
push
cmp
xor
mov
pop
sysenter
adc
cld
(bad)
call
call
adc
jnp
mov
mov
dec
jmp
test
setg
lea
xor
call
lahf
test
add
and
or
jae
jl
fs
data16
xor
push
js
or
add
loopne
mov
push
mov
fs
data16
outs
add
cld
enter
clc
sub
fidiv
adc
test
mov
imul
repnz
out
ss
(bad)
push
in
adc
shl
nop
pop
dec
push
popa
sub
int3
sbb
hlt
sbb
dec
mov
or
pop
pop
pop
pop
in
push
(bad)
fidivr
push
add
jmp
out
cmp
jo
xchg
push
lock
inc
inc
jmp
xor
add
pop
xchg
or
loop
scas
push
mov
fiadd
hlt
pop
pop
pop
mov
pop
ret
(bad)
(bad)
test
mov
dec
jne
mov
mov
xchg
add
cmp
cmp
outs
pop
xchg
loopne
or
sub
adc
fcomp
mov
inc
push
push
mov
rcr
shl
call
call
cwde
in
(bad)
xor
jb
adc
in
aam
dec
xor
adc
adc
shl
xchg
sbb
push
out
icebp
je
ficomp
sbb
mov
jo
cmp
(bad)
cmp
sbb
std
jl
test
adc
adc
loope
mov
lahf
cmp
mov
sub
in
push
aaa
sub
sbb
outs
je
or
cld
dec
mov
pop
loopne
hlt
es
push
adc
mov
lock
scas
push
dec
cmp
cmp
push
dec
lea
or
or
fdivr
cmp
fdiv
fsub
and
mov
push
mov
mul
mulps
sub
and
pop
aaa
enter
and
fldenv
and
push
jb
out
js
adc
cmp
push
push
in
fld
and
test
out
push
call
iret
mov
mov
enter
mov
inc
pop
mov
lahf
mov
push
push
je
lahf
pop
jp
rcr
dec
push
aam
aam
mov
rol
popa
mov
sbb
int3
mov
int3
mov
add
lea
adc
adc
or
cli
sbb
xchg
fnstcw
cmp
call
je
or
cmp
and
pop
fiadd
jnp
add
test
adc
rcl
call
add
fs
dec
inc
cmp
test
jne
mov
std
shl
loope
enter
popa
popf
add
loopne
shl
clc
mov
mov
test
in
int3
or
ret
jo
sub
mov
pop
and
or
mov
cmp
out
or
sbb
xor
xor
add
add
add
and
sbb
aad
jl
fsubr
push
(bad)
movzx
addr16
xchg
and
pop
and
ror
or
test
jl
mov
popa
pusha
add
cmp
xchg
mov
mov
and
adc
in
jp
cmp
or
loop
jmp
(bad)
and
push
adc
aaa
adc
das
je
in
and
ins
and
outs
and
arpl
out
pop
push
pusha
fidiv
outs
add
xor
js
js
xlat
inc
adc
adc
adc
mov
sub
dec
cs
pop
clc
push
adc
leave
sbb
call
pop
mov
dec
fs
test
setne
and
jmp
mov
push
adc
repz
(bad)
bound
push
mov
loop
pop
stos
icebp
push
add
adc
leave
adc
mov
jbe
pop
retf
nop
ret
inc
(bad)
in
loope
or
sbb
push
mov
sbb
jmp
jns
lock
cmp
mov
fimul
or
lock
clc
or
mov
fsub
and
daa
mov
dec
mov
out
push
jl
sbb
or
mov
fmul
hlt
faddp
jecxz
es
mov
(bad)
jmp
je
ret
loopne
mov
inc
add
mov
mov
cmp
lock
sbb
sub
mov
je
jecxz
pop
enter
test
push
mov
xchg
pop
xchg
xchg
adc
cmp
lock
shl
cmp
test
and
or
xor
inc
imul
aaa
out
mov
add
or
popf
pop
and
mov
cld
into
mov
jmp
invd
xor
sbb
not
mov
lds
aaa
mov
pop
jmp
xor
xchg
pop
rep
fucomip
mov
xor
enter
sbb
call
stos
ficom
sub
call
mov
je
loope
repnz
cmp
inc
mov
jne
or
adc
cmp
jbe
jge
push
mov
sahf
adc
and
mov
ror
sbb
sub
xchg
aas
imul
ret
pop
mov
mov
pop
loope
xchg
dec
sar
inc
xor
call
mov
mov
cwde
sub
add
cdq
mov
cmp
fnstcw
inc
dec
jne
sub
mov
sub
pop
retf
sub
call
xor
add
popa
adc
js
fmul
mov
shl
inc
jmp
sbb
push
neg
mov
in
mov
mov
adc
cmp
dec
cmp
dec
movs
sbb
sbb
mov
fdiv
dec
mov
(bad)
lea
push
loopne
cmp
pop
hlt
push
hlt
jmp
shr
jns
sbb
pop
xor
and
sub
clc
push
cmp
dec
enter
movs
shl
mov
and
add
ss
jno
imul
das
jg
mov
xlat
sbb
inc
mov
mov
dec
inc
mov
mov
xor
pop
jl
mov
mov
jmp
inc
mov
and
ret
mov
rcr
sub
imul
mov
push
aam
je
push
cmp
adc
test
(bad)
mov
ins
push
fadd
xor
and
shl
outs
push
loopne
sub
inc
mov
arpl
hlt
stc
in
jmp
stos
ins
das
cmps
imul
mov
sbb
call
popf
cld
jnp
adc
jle
scas
mov
mov
xchg
dec
dec
je
add
jmp
mov
or
inc
jo
dec
ins
push
icebp
adc
jmp
sbb
ret
mov
push
js
push
sti
movs
shl
mov
jge
cmp
jb
mov
aaa
popa
jbe
jo
call
cld
sbb
inc
in
adc
mov
inc
lds
mov
inc
add
or
xchg
ins
lods
pop
sub
and
or
pop
sahf
dec
mov
pop
push
dec
jne
daa
nop
mov
and
ret
push
pusha
mov
pop
dec
(bad)
adc
adc
adc
inc
pop
mov
xor
js
pop
push
inc
inc
cld
sub
pop
hlt
mov
test
lea
sbb
jo
xor
pop
je
push
jmp
xchg
in
outs
nop
inc
aad
clc
jo
rol
xchg
dec
mov
or
jns
test
dec
jne
pop
ins
inc
add
(bad)
sar
cld
adc
xchg
fsub
dec
push
popf
inc
cmp
add
aaa
or
or
rol
inc
loopne
sbb
inc
mov
lock
pandn
xor
(bad)
test
cli
idiv
(bad)
push
and
pop
sahf
dec
aad
fbstp
mov
sbb
add
xor
js
aaa
cld
call
mov
cdq
jo
dec
inc
es
fdivr
cdq
or
fiadd
inc
cdq
mov
push
call
add
mov
inc
push
or
ret
cmp
jb
(bad)
and
fs
inc
jge
inc
outs
mov
clc
mov
inc
add
leave
or
cmp
push
xchg
xchg
shr
inc
adc
mov
pop
imul
repnz
push
bnd
sbb
mov
mov
jl
inc
sbb
rol
jge
sbb
(bad)
fsub
out
cmp
push
adc
into
popa
(bad)
in
test
cmp
jg
fdivr
push
xchg
inc
dec
aaa
inc
jbe
clc
push
mov
jo
cmp
or
shl
cli
shr
(bad)
mov
inc
jb
jp
movs
mov
jge
pop
pop
sbb
xchg
addr16
jo
adc
xor
loopne
imul
pop
ficomp
jge
mov
pusha
and
and
out
movs
mov
and
lea
lods
mov
(bad)
jo
mov
xor
sub
adc
inc
inc
fadd
js
inc
popa
fistp
out
movzx
mov
push
pop
pop
into
call
mov
rol
dec
jae
cdq
jae
mov
and
adc
rcr
adc
scas
jne
inc
mov
xchg
mov
aaa
adc
mov
fimul
xchg
(bad)
xlat
jbe
jnp
sub
iret
jl
add
iret
enter
jbe
shl
lock
jae
ins
clc
add
sub
loop
mov
mov
add
adc
cmovnp
fs
(bad)
pushw
hlt
das
add
mov
add
(bad)
mov
and
cmp
ja
jmp
mov
jns
out
(bad)
rcr
movs
adc
sub
ret
adc
lock
jb
adc
cld
fnstsw
cwde
and
data16
jo
xchg
add
mov
(bad)
sub
and
inc
adc
cmp
jne
mov
pushf
cmp
add
and
push
add
pop
das
jns
in
cwde
add
dec
pushf
add
mov
dec
sahf
mov
add
sbb
je
out
mov
adc
push
test
jo
shl
dec
inc
add
ds
std
xchg
inc
add
push
add
mov
push
push
pop
mov
mov
xchg
jmp
mov
mov
adc
sub
adc
adc
cld
inc
push
pop
push
or
sbb
inc
sbb
inc
sbb
push
and
push
and
das
shl
je
dec
jo
adc
loopne
and
lahf
ins
push
js
rcr
mov
push
jo
scas
mov
lea
add
push
aaa
cmp
out
xor
mov
mov
cld
and
and
cdq
mov
mov
mov
cmp
pop
mov
pop
cmp
xchg
mov
jbe
sti
mov
sub
adc
fwait
and
and
mov
sbb
mov
adc
mov
sub
ret
es
cmp
mov
cmp
xor
inc
sub
retf
push
adc
jne
push
xchg
or
jb
add
and
(bad)
push
adc
stos
sbb
lods
cmp
adc
push
cmps
pop
sub
jg
xor
add
sbb
lods
outs
mov
wrmsr
mov
add
lock
and
loopne
pop
xchg
cwde
addr16
clc
div
jmp
ins
cmp
lea
jo
mov
adc
cld
shl
jo
push
cld
mov
dec
retf
add
inc
push
mov
add
shr
sti
and
or
mov
pop
ret
mov
jbe
sub
ret
adc
cmp
push
mov
push
or
push
retf
or
(bad)
rcr
into
xchg
ret
in
mov
ds
mov
mov
aaa
ret
jl
mov
les
fbstp
jbe
shl
or
pop
push
jne
idiv
or
or
rol
pop
dec
mov
adc
fnstenv
dec
adc
mov
je
nop
push
fcmovb
mov
ja
sbb
xchg
sub
sbb
push
nop
xor
pop
mov
icebp
iret
or
icebp
sbb
inc
push
add
mov
or
and
lea
mov
daa
adc
or
add
adc
xlat
xchg
adc
and
pop
aas
add
es
rcl
sub
ret
movhps
cmp
add
add
stos
adc
mov
mov
mov
das
sbb
or
ins
add
in
cmp
shl
leave
inc
es
sub
test
xchg
lahf
cmps
pop
cld
push
pusha
mov
mov
ret
adc
rcl
loop
mov
ja
ins
xchg
es
test
mov
mov
mov
outs
cmp
pop
mov
scas
pop
cmp
adc
cmps
cs
sub
lock
daa
mov
pop
inc
cmp
dec
aas
push
inc
cmp
outs
ret
push
sub
(bad)
sbb
out
or
fmul
adc
dec
mov
pop
rol
inc
jne
in
jge
sbb
push
push
cmps
fucom
adc
lea
test
pop
add
inc
sbb
test
sbb
cmp
jb
sbb
ins
nop
dec
mov
outs
jo
js
add
mov
dec
sti
shl
mov
test
movhps
cs
mov
(bad)
clc
xchg
push
shl
push
aas
test
cli
int3
or
mov
rcl
inc
xchg
sbb
cwde
add
mul
ins
loop
push
xor
add
adc
(bad)
jno
cmp
int
inc
jno
test
xor
call
test
or
jae
mov
test
or
xor
dec
and
and
mov
sub
les
sbb
xchg
lods
adc
and
fs
or
dec
sub
dec
dec
or
psraw
sub
dec
mov
inc
mov
bound
ins
dec
xlat
dec
sbb
xchg
sbb
sbb
cmp
sbb
dec
pop
dec
scas
or
fbld
iret
sub
call
lea
outs
xor
mov
outs
cmp
call
outs
inc
aaa
outs
push
test
in
nop
inc
mov
jge
adc
dec
dec
(bad)
adc
ret
xlat
scas
push
inc
cmp
add
mov
bswap
scas
mov
mov
dec
mov
test
jg
mov
mov
adc
sub
ficom
adc
cmp
daa
mov
xlat
clc
mov
xor
sbb
xor
inc
and
add
pop
mov
dec
adc
mov
xchg
push
js
and
imul
cld
out
nop
or
mov
btc
push
sub
mov
loope
push
jmp
and
sti
inc
dec
sbb
pop
pop
or
xor
jo
ds
mov
xor
sbb
mov
addr16
and
int3
imul
and
mov
call
aam
mov
or
sti
(bad)
mov
sub
aam
mov
(bad)
sbb
push
inc
jo
dec
push
or
push
test
test
sub
adc
scas
xchg
xchg
mov
das
inc
add
xchg
sbb
and
jne
push
and
loopne
call
inc
jne
xchg
push
add
or
pop
push
jb
adc
jge
cmp
adc
push
popf
xor
popf
or
sub
je
xor
es
push
add
mov
int
xchg
in
sub
cld
mov
adc
out
dec
stos
lock
adc
add
or
nop
mov
sbb
push
clc
mov
stc
fdiv
clc
adc
inc
add
fcomp
out
sbb
mov
sbb
add
or
add
ret
je
cmp
cmp
lock
or
or
js
jmp
mov
xor
and
fcom
je
(bad)
jne
fs
xor
rcr
xchg
add
shl
(bad)
outs
das
sbb
les
xchg
add
call
mov
add
jl
jecxz
(bad)
or
call
test
jo
int3
mov
rcl
or
inc
pushf
push
or
ins
fild
ja
lock
mov
adc
push
push
in
mov
push
mov
sbb
push
adc
or
lods
es
scas
sub
push
in
sub
mov
mov
rep
jp
and
stos
add
sbb
in
dec
and
movs
(bad)
mov
push
jg
sahf
cmp
cmps
loopne
sbb
loopne
cdq
jle
hlt
icebp
jne
jbe
inc
sbb
mov
dec
sub
int3
adc
and
(bad)
push
push
lea
in
ins
or
sub
push
int
sbb
sahf
sub
cmp
add
outs
push
daa
mov
mov
or
sub
sahf
shrd
daa
mov
and
xor
inc
inc
push
cmp
dec
cmp
popa
dec
push
or
cli
call
xor
inc
push
push
push
inc
dec
inc
push
dec
inc
inc
push
neg
jmp
je
test
je
mov
add
sbb
mov
add
enter
mov
add
push
push
push
mov
add
or
pusha
lds
pop
icebp
inc
daa
add
add
fisub
cmp
push
lea
cmp
add
sub
inc
repz
pop
lock
mov
out
cwde
push
mov
and
mov
push
jne
call
dec
cmp
mov
ja
or
or
push
inc
pop
pop
sbb
test
ja
jmp
push
pushf
iret
mov
mov
ja
outs
cmps
out
sub
movhps
mov
or
dec
mov
or
xor
lds
(bad)
adc
add
pop
orps
push
add
pop
pop
inc
sahf
mov
inc
add
cmp
lock
push
xor
mov
add
(bad)
jmp
jmp
add
push
sub
xor
sub
mov
jo
push
fcomi
mov
out
add
or
push
(bad)
jmp
iret
scas
shr
das
sub
sub
and
mov
js
or
xchg
inc
ins
mov
push
rcr
test
pop
dec
sub
(bad)
sbb
imul
into
push
mov
mov
lahf
adc
outs
jl
push
pop
xor
adc
sub
sub
repz
or
add
add
xchg
inc
push
sbb
jecxz
jle
or
das
mov
lods
cs
hlt
ja
(bad)
dec
add
(bad)
mov
inc
cmp
mov
mov
push
xor
adc
or
xor
mov
adc
test
cmp
push
push
push
dec
sbb
add
adc
pop
stos
sub
add
add
push
jnp
or
push
ja
push
out
pop
ret
or
sub
jns
inc
cmp
sbb
mov
ins
(bad)
or
mov
add
or
mov
sbb
in
sbb
and
and
and
shr
or
adc
clc
xor
adc
dec
call
inc
jecxz
or
push
adc
xor
mov
sub
mov
jl
adc
repnz
dec
pop
xor
mov
pop
inc
retf
movs
addr16
pop
popa
jg
jb
inc
popa
inc
lock
shl
push
mov
or
rol
cmp
mov
or
(bad)
and
jae
mov
xor
lods
imul
iret
push
inc
addr16
call
and
inc
adc
pop
add
xchg
xchg
sbb
hlt
sub
push
fisub
mov
aaa
call
jmp
push
shl
inc
fmul
add
ffree
sub
fdiv
jns
inc
mov
aam
outs
fsubr
lahf
iret
mov
clc
out
cmp
or
push
jp
ins
cmp
adc
push
fdivr
sub
jecxz
add
cmp
inc
movhps
ins
nop
push
sar
add
cmp
and
outs
add
sbb
cmp
movs
push
ins
cmp
daa
push
push
jbe
mov
add
(bad)
je
outs
xchg
or
mov
push
fisttp
push
jbe
add
cmps
adc
xchg
push
mov
cmp
cmp
adc
xchg
pop
or
ror
add
into
int
in
jge
or
mov
cmps
inc
xchg
fdiv
imul
je
add
add
aaa
rol
sub
inc
sub
or
(bad)
jg
mov
sub
or
call
dec
push
movs
daa
lea
neg
test
jle
ret
jmp
push
sub
aam
dec
je
or
je
push
mov
ds
(bad)
xor
cmp
jge
xor
out
xor
inc
hlt
aam
mov
fcomp
lidtd
add
sbb
jg
sub
cmp
jl
jmp
xlat
ret
mov
pop
xchg
jmp
mov
hlt
pop
(bad)
rol
jg
jmp
imul
ds
push
mov
mov
or
push
sub
sub
sbb
adc
movs
lods
mov
rol
mov
xor
sbb
jo
push
add
push
(bad)
scas
push
xlat
cmps
mov
je
inc
test
cmps
add
call
or
xchg
in
sub
and
inc
jmp
inc
movs
dec
cmps
jb
inc
(bad)
cli
test
and
cld
add
dec
movzx
sbb
call
jmp
test
inc
xchg
fcomp
xchg
pushf
ja
mov
cdq
cwde
pop
jmp
jne
sbb
shl
or
pop
sub
cmp
add
sbb
cmc
addr16
outs
data16
(bad)
popf
jbe
(bad)
clc
xchg
add
jnp
jp
inc
mov
jmp
push
mov
mov
jle
and
rol
xor
add
add
mov
in
inc
jae
div
les
pop
dec
pushaw
jmp
scas
mov
pop
mov
or
mov
loop
shr
data16
mov
cwde
(bad)
pop
out
and
fcom
jno
push
daa
es
cmp
add
jns
mov
mov
lea
mov
cmc
adc
sbb
adc
inc
cmp
xchg
fist
call
(bad)
cmps
dec
sub
xchg
mov
xor
sub
xor
lea
push
or
div
pop
sbb
push
sahf
lods
test
mov
daa
loope
dec
inc
inc
dec
jne
xor
fisttp
mov
sbb
dec
(bad)
shr
xlat
xchg
or
xchg
sbb
pop
mov
and
fwait
cmps
xchg
les
bound
enter
sbb
add
out
(bad)
(bad)
mov
push
(bad)
shl
jae
sbb
add
sub
jb
je
add
dec
ret
jo
enter
imul
loope
xchg
shl
jbe
dec
rcl
jmp
mov
shl
popa
and
ja
ja
stos
cmp
mov
ret
ja
or
or
xchg
xor
inc
loope
bound
ja
ins
xchg
cmp
sbb
ja
stos
inc
repnz
ret
ja
dec
loope
xor
ins
jbe
jl
or
ins
ja
(bad)
jo
sbb
ja
fcom
lods
ret
fwait
dec
push
inc
ja
test
xchg
cmp
shl
ins
ja
and
pxor
hlt
push
and
dec
push
xor
adc
add
fsin
xlat
inc
mov
test
push
add
mov
lock
pushf
rol
aaa
inc
add
and
mov
dec
fsub
sub
jl
dec
add
popf
pushf
scas
inc
fmul
outs
(bad)
mov
sbb
ja
(bad)
fild
inc
or
dec
adc
mov
mov
push
and
je
xor
inc
adc
sbb
jnp
sbb
retf
cmp
xchg
jge
dec
pop
add
adc
sbb
xor
dec
inc
pop
xor
xor
pop
xor
mov
jmp
adc
ror
outs
(bad)
in
adc
cwde
xor
push
jecxz
inc
dec
jl
push
lock
cmp
and
jmp
and
test
repnz
and
dec
pop
and
or
mov
mov
out
pop
clc
or
push
mov
inc
jmp
aad
mov
mov
scas
call
lds
sub
pop
outs
clc
in
pusha
imul
cmp
es
push
cld
shr
std
int3
and
pop
test
call
js
xchg
(bad)
cmp
inc
xor
mov
adc
mov
sbb
pusha
mov
sbb
sub
add
pop
imul
lock
retf
iret
fcomip
jmp
fist
aam
push
mov
jb
inc
pop
test
ja
cmp
test
mov
sbb
or
test
push
movs
push
bound
ja
push
ins
movaps
jne
and
dec
cli
ss
hlt
push
jp
inc
(bad)
rcr
pusha
push
test
mov
add
add
jbe
ja
call
push
ja
add
or
(bad)
ja
in
and
sub
(bad)
jg
pop
adc
sti
pushf
sbb
xor
lods
jo
adc
cmp
xchg
xlat
or
out
mov
repnz
jne
cmp
lods
push
add
dec
mov
or
push
cwde
in
jne
xor
xchg
and
dec
movs
push
es
dec
and
in
adc
and
in
shr
movzx
adc
cmc
mov
or
adc
mov
retf
fstp
fwait
push
xor
sbb
lock
pusha
mov
adc
or
lods
mov
test
or
sbb
add
mov
and
push
fsubr
fwait
jp
xor
adc
repz
xor
outs
adc
fld
(bad)
dec
scas
jmp
rol
xchg
mul
jns
leave
mov
xor
push
cmc
push
sbb
inc
sub
and
pop
push
push
inc
rcl
retf
hlt
xchg
das
js
mov
fisub
outs
hlt
stc
sub
movs
or
mov
push
add
pop
test
pop
sbb
mov
aad
mov
add
pop
fdiv
sbb
push
movlhps
adc
sbb
mov
add
mov
add
push
es
push
idiv
jge
repz
data16
or
iret
xor
daa
jl
push
and
xor
pop
aad
outs
cmp
mov
or
retf
cmps
jnp
lock
lock
dec
add
add
mov
add
push
or
jns
aam
mov
cdq
bt
push
inc
ud0
push
fiadd
push
dec
fs
popa
adc
iret
push
inc
jb
popa
mov
gs
add
or
jmp
push
gs
jmp
dec
jae
jbe
dec
sar
popa
imul
push
stc
std
scas
mov
push
pop
push
mov
je
imul
push
push
iret
popa
ret
mov
sub
jb
sbb
mov
or
inc
inc
fnsave
(bad)
jae
inc
outs
arpl
jb
inc
jne
add
add
gs
mov
mov
xchg
mov
ret
mov
or
inc
jns
jae
cmp
mov
xor
mov
outs
inc
or
inc
sahf
add
push
aas
sbb
inc
ins
lea
inc
add
imul
ins
adc
out
pop
or
dec
test
lds
mov
sub
pop
dec
sub
xchg
add
and
mov
mov
sbb
add
adc
and
je
outs
jae
inc
loopne
add
sub
rol
and
sub
pop
pop
or
cdq
adc
dec
adc
cmps
inc
mov
add
mov
mov
fcomp
pop
(bad)
iret
add
xor
aad
iret
loopne
clc
rol
lods
ins
daa
call
rol
adc
out
and
pop
pop
jle
iret
test
push
mov
outs
je
sbb
neg
andps
pop
adc
push
mov
aad
push
das
pop
out
sbb
outs
add
push
bound
das
cmp
das
jl
pop
or
add
sbb
imul
and
xor
push
fcomp
and
cwde
push
sub
or
rol
fcom
push
(bad)
out
jp
ret
dec
test
sbb
adc
inc
pop
daa
or
sbb
push
stos
xchg
(bad)
cmp
ja
mov
jb
stc
and
xchg
inc
sti
cmp
jge
xor
mov
retf
scas
xchg
mov
(bad)
pop
cmp
adc
cld
pop
jmp
cmps
in
add
les
pop
out
jl
and
pop
ss
test
xor
mov
imul
outs
ret
or
daa
shl
aaa
add
push
and
mov
jmp
jge
scas
push
cmc
rcr
or
ja
bound
dec
xchg
sbb
cwde
mul
or
pop
imul
sub
mov
lahf
jb
push
out
inc
sub
sub
add
out
or
imul
mov
xchg
adc
lods
sub
xlat
outs
mov
push
not
int
dec
xor
(bad)
es
call
ss
scas
mov
ror
xchg
dec
adc
mov
add
out
mov
call
jge
cmp
jmp
jl
push
add
ret
xchg
mov
push
aas
lds
push
retf
sub
sbb
and
into
jp
or
ins
and
je
(bad)
sub
lods
jge
es
pop
mov
add
mul
inc
adc
(bad)
popa
push
fdiv
jo
cmp
adc
adc
mov
div
pop
xor
fadd
outs
psrad
inc
mov
or
mov
enter
add
leave
stos
and
and
addr16
daa
mov
push
outs
push
mov
or
popa
sub
push
ins
cld
pop
push
mov
rcl
or
test
xor
imul
movs
les
inc
sub
add
add
cmp
jnp
xchg
sub
jmp
add
jae
push
repz
cs
sub
mov
xchg
push
sbb
sub
fsub
sbb
mov
cmp
push
adc
inc
mov
jo
out
retf
pop
addr16
int3
xchg
rcl
int3
movs
clc
loope
lahf
push
push
adc
mov
call
(bad)
sbb
fistp
in
nop
sbb
add
fisub
pop
add
ins
cmps
retf
loop
test
je
sti
jmp
fsubr
adc
or
ror
js
push
or
dec
outs
outs
addr16
outs
jb
push
arpl
adc
push
clc
les
sub
rcl
ret
test
pusha
adc
ror
out
outs
push
push
cmp
lds
int3
rol
ret
adc
xchg
inc
inc
inc
jne
gs
sti
pop
and
ret
dec
gs
popa
addr16
imul
jae
xor
cmp
or
adc
fmul
or
adc
rep
out
sbb
dec
das
fs
sbb
adc
pushf
retf
pop
xchg
fimul
mov
mov
enter
es
jmp
xor
inc
push
je
sub
add
int
push
xchg
mov
and
sti
in
and
test
pop
loope
shl
shl
dec
mov
ins
jnp
and
sub
push
push
ja
push
mov
cwde
mov
fdivp
push
loopne
lock
retf
jo
jo
cmps
mov
jae
fcom
into
imul
sahf
xor
dec
xor
xor
add
add
fadd
adc
pop
loopne
sub
adc
add
pop
push
jmp
sbb
stos
les
(bad)
in
lods
sub
das
cmps
add
mov
sbb
adc
js
sub
or
push
and
adc
jg
iret
jg
add
add
push
add
mov
add
in
pop
dec
mov
mov
dec
push
adc
call
add
sbb
sbb
mov
(bad)
mov
or
jl
adc
(bad)
push
loope
lock
fdivr
xor
xor
and
xor
add
or
add
add
(bad)
ins
fbstp
(bad)
xor
and
cmp
lds
inc
add
pop
xor
and
outs
pop
aam
ret
and
(bad)
xor
mov
cmp
xor
outs
ret
add
xor
adc
mov
mov
add
adc
dec
div
js
pushw
dec
xlat
and
or
test
inc
xchg
adc
add
add
and
inc
or
pushw
add
and
daa
dec
pop
dec
or
data16
into
xchg
adc
dec
or
push
popa
push
xchg
test
pusha
and
jle
mov
mov
pop
add
cmp
and
rol
shl
add
xor
in
fcomp
inc
xchg
cmp
mov
sbb
in
cmp
sub
inc
mov
and
or
or
inc
mov
mov
and
sub
out
stc
aam
add
add
add
inc
mov
push
pop
imul
inc
mov
clc
inc
pop
ja
jp
mov
or
fstp
pop
mov
sub
sahf
or
cmp
retf
lea
or
push
jo
out
sub
(bad)
repnz
cdq
sub
push
hlt
xor
(bad)
pop
ret
inc
jae
pop
int
ss
dec
cdq
imul
lea
outs
movs
enter
jle
mov
test
sti
aas
jg
dec
cmp
add
inc
cmp
idiv
inc
jne
mov
add
data16
pusha
pop
(bad)
sti
stos
inc
or
movs
or
xchg
add
cmp
and
jbe
xchg
jmp
ror
shr
xchg
mov
push
aad
aad
sbb
or
shl
imul
ret
xor
cs
(bad)
addr16
add
js
in
or
into
call
cmc
add
push
mov
sub
cwde
xchg
inc
je
push
push
dec
ins
retfw
add
xor
cmp
xor
je
push
push
xchg
cld
add
loopne
mov
pop
mov
mov
cmp
enter
mov
test
mov
dec
mov
neg
mov
pop
mov
mov
and
mov
(bad)
cmp
imul
cmp
neg
(bad)
in
sub
shl
cmp
div
cmp
idiv
cmp
mov
cmp
shl
inc
cmp
(bad)
scas
pop
aam
inc
cmp
neg
add
not
jp
dec
repz
loopne
fld
out
jae
loopne
jbe
lock
loopne
test
cmp
sbb
jb
div
(bad)
cmp
jbe
cmps
jp
neg
xchg
imul
hlt
div
mov
cwde
cld
mul
inc
mov
test
neg
ja
nop
or
sti
cwde
or
mul
mov
mov
fcmovb
mov
sbb
lods
jnp
xchg
shl
and
add
out
in
sbb
push
cmp
out
retf
lods
test
cmp
sar
sub
not
xor
jbe
bound
dec
xor
sar
out
bound
and
cmp
bound
test
out
inc
out
and
mov
out
dec
and
xor
mov
bound
sub
pop
out
bound
and
pop
out
not
or
pop
pusha
cmp
jnp
out
cmp
out
test
out
loope
jb
(bad)
cmp
ja
cmp
jne
cmp
mul
sar
test
jo
xchg
je
ds
in
bound
push
in
push
imul
(bad)
lds
movs
test
nop
mov
push
mov
lds
not
ds
in
bound
xor
mov
neg
mov
sub
jl
add
out
bound
push
add
add
mov
(bad)
clc
jmp
sar
pushf
xor
jg
fidivr
(bad)
jle
push
mov
dec
mov
and
sti
test
adc
mov
mov
push
lea
jbe
addr16
das
jmp
sar
adc
pshufw
outs
xchg
pop
push
pop
and
dec
jl
dec
or
loop
cmp
movs
movs
adc
test
mov
loopne
and
push
push
add
retf
in
sti
out
jmp
shl
and
inc
add
enter
or
mov
jmp
inc
push
add
add
movs
stc
push
or
shr
or
dec
or
out
jg
test
jmp
rcr
xor
test
mov
or
push
mov
test
push
je
add
fsubr
inc
aas
mov
sbb
mov
mov
xor
daa
mov
aam
mov
pop
ss
dec
push
or
es
adc
push
add
sbb
dec
in
ins
push
mov
lods
and
pop
popw
xor
(bad)
push
pusha
pop
add
inc
push
cs
outs
pop
sub
sbb
(bad)
inc
test
or
test
ror
xchg
dec
fwait
sub
xchg
add
push
test
and
mov
ficomp
cld
pop
cld
inc
inc
cld
test
repnz
add
mov
lea
cmp
ja
ret
mov
or
js
cmp
jg
pop
fisubr
pusha
adc
inc
sbb
jne
loopne
mov
adc
test
mov
ret
jmp
pop
push
call
arpl
loopne
lahf
inc
out
xor
mov
lea
or
pop
jbe
call
lea
inc
hlt
mov
mov
loope
inc
mov
sbb
xchg
pop
sub
dec
adc
mov
lds
aam
pop
mov
jns
je
jg
call
fcom
daa
fst
sbb
jo
inc
mov
sbb
jg
pusha
test
sbb
sub
jae
mov
xor
sti
pavgb
jmp
pusha
push
xor
and
push
shl
inc
ret
and
pop
sub
jmp
loop
les
push
lods
ret
jp
les
adc
push
pop
lock
xchg
adc
pop
std
rcr
pop
push
rol
and
inc
enter
mov
ret
fsubr
les
test
or
push
and
aam
mov
sbb
inc
test
mov
aas
call
mov
mov
or
fisttp
adc
inc
adc
dec
mov
sbb
xor
in
mov
aad
sbb
cmp
push
iret
mov
push
xchg
inc
sbb
in
fild
sbb
adc
adc
rcr
and
adc
sbb
sbb
sbb
inc
push
jo
mov
push
imul
or
fsubr
cmp
adc
inc
and
mov
sti
or
jb
lock
fimul
inc
icebp
and
mov
mov
hlt
inc
call
test
add
lahf
mov
call
dec
pop
test
or
xchg
jo
adc
stos
dec
fsubr
mov
mov
aam
jne
pop
pushf
pop
mov
mov
pop
lds
xor
(bad)
sahf
push
cwde
and
sbb
cwde
out
or
mov
or
xor
push
cmp
loopne
adc
mov
dec
pop
xor
test
sub
pusha
pop
test
pop
mov
movs
and
adc
add
sub
lods
sbb
adc
call
or
sbb
adc
in
ins
imul
adc
data16
mov
ficomp
push
push
sub
ret
mov
inc
ror
cmp
jne
jne
in
std
dec
pop
or
push
cmp
fwait
data16
add
adc
push
cmp
xchg
jge
cmp
jae
out
xchg
mov
cwde
cmp
repz
ficomp
sub
sub
xchg
mul
sub
cmp
xor
movs
mov
cmp
loop
pop
outs
add
sbb
push
lods
and
rcr
movs
popa
sbb
sbb
sbb
xor
sti
cld
mov
mov
add
(bad)
mov
shl
pop
cwde
pop
or
push
out
add
add
or
and
mov
mov
mov
push
jp
int3
das
jmp
mov
push
addr16
test
adc
dec
add
pop
scas
adc
xchg
xchg
neg
jnp
and
sub
clc
ss
or
arpl
xor
cwde
je
adc
nop
mov
jp
push
add
inc
dec
push
sti
fnsave
cld
dec
dec
dec
outs
outs
sub
imul
and
ins
jmp
pop
inc
inc
outs
ins
popa
imul
pushf
sahf
xor
jo
mov
add
push
dec
add
add
es
fistp
jne
push
arpl
inc
xor
outs
outs
mov
mov
dec
and
test
mov
les
add
mov
sub
add
push
add
pop
sub
dec
gs
ins
imul
ret
pop
inc
or
movs
add
sbb
or
(bad)
(bad)
add
xor
adc
pop
out
inc
stos
add
aam
pop
add
xor
and
sbb
js
jnp
mov
retf
out
lock
and
add
cwde
pop
inc
mov
mov
pop
add
xchg
pop
dec
daa
push
add
cdq
or
mov
sbb
loopne
out
call
xor
cmp
jmp
push
xor
je
inc
adc
(bad)
push
xor
jmp
xor
jmp
sbb
sbb
loopne
fcom
imul
mov
add
ret
pop
cmc
adc
xor
lods
mov
test
mov
mov
cmps
mov
mov
arpl
loope
push
push
add
pop
adc
or
add
or
test
add
ret
test
push
mov
loopne
sar
int3
mov
push
push
adc
add
enter
(bad)
out
hlt
mov
mov
aas
adc
sub
jno
jne
jbe
mov
xor
mov
enter
jbe
cwde
inc
mov
and
cld
rol
in
add
xchg
or
das
jbe
xchg
add
fdivr
and
dec
pop
xlat
sub
add
pop
sahf
pusha
mov
xchg
inc
dec
adc
sar
or
or
sub
push
cmp
inc
jae
ds
je
test
or
sbb
xchg
out
xor
int3
lods
xor
xor
(bad)
jecxz
shl
fld
test
(bad)
push
cmps
cmp
inc
das
lds
pop
pop
das
add
jp
sbb
jg
mov
inc
fwait
not
pop
inc
sbb
pop
mov
and
xor
je
es
mov
cmp
jo
inc
clc
lea
lea
sub
xchg
inc
adc
cmp
mov
pop
xor
cmc
lock
add
jne
mov
inc
push
mov
jmp
add
push
push
push
push
dec
dec
inc
in
test
push
push
cmps
sti
(bad)
inc
push
push
dec
push
pop
pop
push
push
inc
push
push
push
pushf
cmp
or
arpl
outs
fs
cmp
addr16
push
or
aad
aaa
jo
mov
push
pop
fs
outs
ja
and
ja
push
jo
fld
push
imul
jo
adc
xor
lahf
dec
ret
sub
cmc
add
lods
or
int3
shl
or
js
lods
sub
std
inc
inc
jnp
or
popa
bound
imul
scas
ins
int3
xor
or
xor
clc
pop
data16
daa
imul
inc
push
and
aaa
jo
retf
add
arpl
popa
js
outs
imul
enter
(bad)
or
add
js
pop
and
outs
ins
and
fiadd
in
inc
jne
data16
sub
mov
push
(bad)
sub
js
lods
arpl
in
cmp
and
jns
pop
push
cbw
sub
push
pusha
xchg
retf
in
inc
ss
mov
arpl
test
adc
xor
fstp
sub
jecxz
arpl
std
add
adc
push
dec
inc
mov
cmp
aaa
xor
(bad)
and
mov
push
jb
outs
arpl
ins
and
push
dec
gs
out
mov
cli
sbb
jbe
sbb
aam
sti
fistp
aam
(bad)
pop
inc
inc
push
push
dec
push
inc
pop
inc
push
fcmovne
(bad)
jg
inc
dec
push
dec
inc
dec
push
pop
dec
inc
dec
inc
dec
and
pop
push
out
jmp
lods
or
jae
fprem
push
pop
jmp
imul
std
push
pop
mov
out
pop
jb
fs
int3
xchg
inc
or
mov
push
sub
and
inc
and
ja
mov
inc
gs
inc
inc
retf
fst
fs
jne
das
lods
pusha
loopne
mov
ret
es
jg
js
jae
js
imul
add
sbb
mov
inc
or
xchg
imul
xchg
sub
jbe
or
jnp
jnp
popa
push
ret
popa
mov
mov
(bad)
sbb
out
xchg
pop
push
inc
push
push
push
dec
push
rol
sahf
xchg
aaa
out
xchg
movs
push
xor
or
jge
push
inc
arpl
jne
sub
jge
sub
xchg
ja
jb
pop
(bad)
leave
ret
sub
ja
push
bound
mov
or
shr
aam
lahf
sahf
mov
and
loopne
pop
jo
loopne
xchg
jo
sbb
call
dec
push
add
adc
sahf
sti
inc
dec
hlt
or
pop
push
scas
movs
call
test
inc
pop
scas
xor
jo
xor
je
js
add
push
popa
xchg
movs
mov
sbb
jno
fist
fsub
or
sub
xor
imul
dec
outs
imul
xor
and
rol
add
mov
cmp
test
cmp
mov
mov
pop
scas
jmp
add
push
mov
push
add
and
jo
push
xchg
dec
mov
push
push
dec
loopne
shl
push
dec
dec
clc
sahf
jle
dec
push
sub
in
lahf
push
ja
mov
(bad)
pop
dec
mov
push
and
xchg
imul
inc
iret
mov
jmp
xchg
push
jmp
add
or
add
jl
jge
xor
sub
or
cmps
jl
sbb
xor
sahf
sahf
sbb
cs
mov
push
dec
dec
sbb
in
or
lock
add
mov
lds
pushf
dec
inc
pop
inc
inc
sub
fadd
mov
ins
adc
fcomp
or
or
add
sbb
xchg
dec
cs
mov
mov
pop
jo
inc
dec
add
dec
add
scas
jecxz
xor
adc
in
mov
loopne
push
sub
rcl
(bad)
adc
shl
das
mov
inc
inc
popf
arpl
or
loopne
fnstsw
pavgw
ret
jo
movs
lahf
out
jle
dec
inc
add
imul
adc
sbb
push
dec
push
push
cmp
cld
push
xchg
or
gs
pop
or
out
or
jne
(bad)
dec
xchg
add
leave
mov
cmps
adc
dec
inc
js
add
rcl
pop
popa
call
ror
adc
or
sbb
pop
mov
push
inc
mul
or
cmp
iret
or
or
iret
push
cs
pop
inc
test
sahf
push
les
out
pop
add
push
inc
inc
dec
in
push
mov
push
or
jge
mov
push
or
adc
mov
add
div
inc
dec
mov
lock
pusha
add
scas
mov
dec
cmp
sub
push
jle
daa
push
data16
inc
ins
mov
add
rcr
inc
int3
fistp
fist
lock
add
sbb
pop
addr16
std
stos
cmps
mov
jns
jne
arpl
cmp
push
popa
bound
cmp
popf
shl
mov
push
push
jmp
add
mov
pushf
push
push
mov
ss
xor
popa
xchg
retf
push
dec
fsub
sbb
add
jns
pushf
call
(bad)
cli
mov
mov
arpl
imul
xchg
dec
movs
push
mov
mov
cmp
xor
sbb
pusha
add
mov
or
mov
imul
arpl
fcomp
jo
inc
inc
xchg
test
add
sbb
jo
sub
js
pop
add
mov
jp
gs
jnp
inc
sub
and
mov
jb
ins
jg
sub
pop
ja
sbb
aas
movs
cli
inc
mov
push
xchg
mov
retf
call
add
or
clc
jb
cld
mov
cmp
dec
popa
hlt
push
imul
pop
jb
adc
xor
mov
imul
je
add
jmp
clc
or
outs
jne
push
or
fldcw
or
push
push
stos
mov
outs
and
inc
popa
cli
loopne
fsubr
dec
pop
xchg
inc
fs
jbe
or
inc
subps
cmp
mov
or
sub
push
inc
mov
dec
push
(bad)
arpl
xchg
push
cmp
xor
push
xor
xor
popa
and
inc
mov
jo
inc
xor
je
inc
push
mov
fucom
movs
mov
mov
push
ins
add
std
adc
iret
mov
in
in
mov
mov
in
in
mov
mov
mov
in
in
mov
in
mov
in
in
cmps
cmps
test
in
in
stos
stos
lods
in
in
lods
scas
scas
nop
in
in
xchg
xchg
xchg
xchg
in
in
xchg
xchg
xchg
cwde
in
in
cdq
call
popf
sahf
lahf
and
in
add
xchg
mov
in
lea
in
jno
jae
in
in
jne
ja
in
in
jns
jnp
in
in
jge
jg
in
in
popa
bound
in
in
gs
shl
push
jo
fld
pop
jo
xchg
jle
mov
inc
(bad)
nop
stos
inc
mov
mov
cmp
push
ret
mov
hlt
(bad)
jmp
inc
and
shr
push
and
push
xchg
push
push
or
inc
lock
aad
jb
xor
add
cmp
bound
jo
outs
xor
inc
sbb
(bad)
js
add
cmp
add
inc
popa
imul
dec
add
cmp
stos
adc
fdivp
mov
pop
add
bound
add
pop
add
xor
mov
pop
sbb
add
jg
ret
mov
mov
outs
shr
xchg
jo
pmaxub
adc
adc
cmp
push
adc
es
popa
inc
xor
add
jge
pop
cmp
mov
int
jbe
(bad)
daa
add
das
daa
inc
adc
ret
cwde
push
and
sub
sbb
pop
xchg
sbb
pop
mul
outs
popa
fs
adc
sub
fs
das
loop
rcr
cs
jae
jbe
pushf
les
adc
push
bound
or
sub
inc
dec
dec
xchg
leave
ror
push
je
mov
add
inc
fisttp
dec
mov
adc
push
push
push
pop
inc
or
adc
jae
inc
xchg
loopne
movs
add
popa
pop
sub
rol
or
rol
sbb
fwait
inc
cmp
pop
add
mov
es
push
imul
daa
xchg
pop
lods
adc
(bad)
or
jns
addr16
add
mov
xchg
pop
add
add
mov
jo
add
neg
pop
je
scas
or
enter
jnp
fld
daa
call
push
not
inc
jnp
and
pop
and
add
add
sbb
dec
pop
imul
fs
pop
and
add
mov
cmp
out
mov
lock
pusha
dec
fwait
add
inc
pop
fmul
or
test
cs
popf
out
fisub
xchg
stos
sbb
and
cmp
outs
adc
add
(bad)
ffree
lock
mov
push
daa
cmp
out
push
push
scas
jo
mov
xchg
in
mov
(bad)
mov
out
push
data16
sahf
jmp
push
adc
je
push
daa
cmp
call
xor
mov
mov
sub
test
popa
mov
add
pop
repz
xchg
pusha
push
or
das
outs
push
ja
mov
scas
int3
xchg
ja
jg
jg
jno
out
adc
push
dec
dec
cmp
xchg
jo
test
sbb
pop
jge
or
pop
dec
inc
call
jg
clc
jmp
test
dec
call
jne
mov
repnz
xor
lahf
loop
pop
adc
movs
inc
lock
jbe
add
mov
and
sub
data16
push
sub
add
scas
inc
or
sub
data16
mov
and
inc
jmp
or
ins
movs
xor
enter
or
ss
call
pop
push
pop
xchg
push
lods
and
outs
pop
xchg
push
adc
cmp
push
or
sbb
rcl
outs
xor
sub
les
call
sub
sbb
in
std
in
mov
iret
daa
aaa
or
dec
fst
or
ins
mov
shl
cwde
inc
scas
dec
xor
jmp
dec
inc
add
sub
or
aad
or
hlt
and
cmp
clc
das
push
push
loop
sub
pop
push
scas
sub
jle
pop
cmps
aas
adc
movlps
mov
je
mov
ror
xor
div
add
add
sbb
ins
int3
imul
aas
pusha
add
popa
inc
fs
daa
mov
jb
mov
mov
push
and
and
pop
add
lods
pop
jge
mov
dec
fs
xlat
dec
or
mov
das
out
fisttp
inc
jne
(bad)
in
and
and
shl
outs
xor
ss
add
sub
adc
jne
cmp
arpl
push
mov
xchg
sti
dec
pop
stos
inc
mov
push
pop
mov
push
dec
fwait
stos
push
cmps
retf
mov
mov
lods
xchg
dec
xor
xchg
call
mov
xchg
lds
xlat
gs
pop
(bad)
cmp
push
(bad)
(bad)
add
or
xor
int
or
pop
mov
xchg
or
neg
or
or
rcr
xchg
cmp
or
add
or
fsub
cmp
xor
(bad)
int
dec
push
pop
or
or
(bad)
out
mov
mov
add
push
shr
add
and
mov
xchg
hlt
enter
pop
retf
das
jmp
adc
add
les
pop
outs
sub
sbb
test
loope
add
icebp
and
div
ins
sub
or
nop
mov
fs
mov
add
jbe
sub
(bad)
adc
adc
or
push
iret
popa
xor
out
clc
adc
popa
inc
clc
ins
push
gs
retf
add
pop
push
sub
mov
pop
cmp
and
lods
fwait
sbb
or
(bad)
push
sub
adc
lods
fwait
das
aas
push
inc
jo
iret
mov
in
push
mov
push
mov
nop
rol
out
push
push
mov
enter
sub
or
addr16
mov
sbb
retf
or
lods
ss
jne
xor
add
add
rdtsc
inc
sub
sbb
shr
xor
test
mov
mov
clc
push
pop
arpl
test
add
sub
mov
xor
cmps
imul
movaps
sub
inc
(bad)
jne
movs
dec
les
mov
loop
fiadd
push
movs
fbld
add
in
das
and
inc
pop
mov
push
cmovl
cmps
pop
cmp
push
dec
cmp
les
add
nop
or
test
add
add
push
test
sbb
pusha
lds
mov
push
jo
jns
ror
(bad)
push
gs
ss
xor
or
std
out
or
js
stos
cmp
stos
cmp
fsubr
sbb
cmp
pop
sbb
int3
sbb
jns
jecxz
icebp
or
jecxz
cli
pop
loopne
pusha
imul
out
xchg
mov
popf
test
(bad)
xchg
imul
bound
(bad)
cmc
test
loope
xor
cwde
push
popa
sbb
daa
push
add
push
bound
jge
pop
test
ret
jg
add
(bad)
mov
daa
or
add
rcr
pop
push
or
or
out
neg
aaa
nop
push
int3
push
push
mov
push
add
loop
push
mov
idiv
out
lea
loopne
jle
dec
add
pop
mov
fidivr
push
pushf
test
add
shl
sub
dec
sub
mov
and
inc
mov
inc
cld
out
scas
or
add
or
push
push
add
imul
push
xchg
arpl
dec
in
loope
xor
ud2
push
sbb
and
test
xor
and
test
adc
cmp
and
in
and
add
and
loopne
add
cwde
popa
ret
inc
shl
inc
add
mov
mov
enter
adc
out
xor
push
aad
cld
(bad)
call
rcl
cmp
jg
cmc
int
inc
cmp
jg
cli
cmp
xchg
aam
and
out
fist
push
mov
int3
fidivr
add
adc
repz
repz
pop
adc
cmp
je
nop
push
es
mov
es
repnz
jns
push
pusha
pop
push
cli
push
cmp
jnp
pop
push
push
bound
jo
mov
push
fdiv
call
lahf
out
sahf
(bad)
shl
out
cld
or
into
repz
scas
push
es
push
push
push
pop
mov
pop
outs
xchg
sbb
(bad)
cld
sbb
out
ja
and
pop
push
ins
jp
repz
mov
ins
jnp
test
clc
das
pop
out
cmps
add
adc
sbb
sahf
ds
pop
test
dec
sbb
add
test
and
mov
dec
test
xchg
mov
mov
fcomp
hlt
push
add
add
and
fst
hlt
sub
dec
or
test
test
out
jle
and
adc
cmp
mov
adc
adc
shl
fbstp
add
retf
adc
sbb
and
les
and
and
in
mov
mov
cmp
mov
sub
sbb
pusha
add
sti
pushf
aaa
les
sub
fsub
pusha
pop
ror
mov
mov
push
cmps
or
ins
sub
aam
dec
and
ret
rcl
pop
lock
add
sub
sub
push
add
je
sbb
and
les
and
adc
adc
addr16
push
jbe
cmps
mov
push
add
sbb
pop
rcr
push
jbe
mov
sti
shl
loop
cmp
(bad)
pop
sbb
lods
sbb
jbe
sbb
mov
sbb
adc
fadd
jo
mov
sbb
mov
and
cmp
adc
ret
ror
sbb
push
mov
adc
pusha
pop
pusha
sti
cmp
dec
and
fadd
jo
and
xlat
rcr
or
mov
shl
adc
cmp
sbb
pop
lods
iret
js
inc
jno
pop
dec
arpl
sti
sbb
sub
and
add
push
mov
add
push
push
push
xor
pop
sti
neg
mov
add
test
je
and
cmp
push
dec
add
jge
xor
push
push
xor
test
jne
mov
xor
mov
idiv
mov
dec
add
fadd
inc
loopne
mov
or
add
mov
mov
lock
(bad)
inc
sub
xor
inc
mov
hlt
adc
cld
fild
clc
adc
add
mov
dec
aam
push
les
push
adc
jbe
mov
ret
jmp
or
push
cmp
je
inc
shl
push
lock
add
sub
pop
pop
mov
pop
ret
js
or
movs
mov
mov
and
sbb
test
cmp
jne
adc
mov
or
adc
mov
in
rcr
dec
and
and
jmp
pop
pop
pop
ret
nop
jp
shl
pop
or
lock
in
loopne
movs
sub
ds
mov
test
setge
loop
psraw
adc
retf
enter
sub
push
add
leave
dec
mov
cmp
loopne
ss
add
cld
popa
loope
add
inc
mov
push
and
mov
mov
mov
(bad)
out
mov
sbb
xor
or
in
cmp
or
jbe
dec
push
xor
push
and
int
cwde
call
mov
mov
inc
inc
fisub
inc
bound
inc
cmp
call
or
sbb
cmps
imul
dec
adc
or
outs
das
js
push
cmp
jne
push
scas
mov
mov
fisttp
sub
push
push
not
adc
push
or
fs
push
arpl
add
add
cmc
outs
call
add
push
jae
add
add
xor
xor
cs
in
sbb
ins
add
inc
fst
scas
dec
add
add
add
outs
int
sub
das
push
es
xor
xor
push
pop
inc
sbb
inc
ja
in
pop
jo
dec
cs
add
(bad)
aas
out
lds
pusha
cmp
pop
adc
mov
test
push
test
mov
sbb
cs
mov
push
cmp
out
lea
pop
sti
out
dec
jno
cmps
mov
sbb
mov
push
dec
push
ins
xor
mov
(bad)
out
cs
in
mov
loopne
inc
pop
adc
rcr
and
pop
adc
dec
pop
fimul
clc
hlt
(bad)
mov
adc
pop
and
pop
mov
lock
mov
mov
adc
sub
adc
inc
mov
mov
sbb
push
call
xor
mov
mov
cmp
xchg
inc
push
adc
mov
lea
push
push
dec
push
cmp
not
int3
call
mov
and
loope
sbb
mov
rol
sub
pop
sbb
into
mov
or
push
inc
jmp
xlat
imul
inc
cmp
cli
outs
repz
or
bound
jle
das
push
sbb
sub
lea
push
xor
adc
inc
push
dec
je
or
js
push
inc
jo
aaa
mov
imul
repnz
add
inc
add
mov
mov
sub
(bad)
dec
jg
dec
add
add
inc
adc
inc
inc
and
cmp
aad
sbb
mov
aad
xor
jno
mov
pop
jb
dec
xchg
add
push
sub
mov
clc
or
mov
inc
fdiv
clc
mov
and
(bad)
movs
cmp
ja
inc
adc
jb
je
dec
push
jmp
mov
mov
jmp
mov
or
cs
mov
xor
inc
lea
jp
cmp
inc
hlt
xor
push
push
mov
jle
or
hlt
dec
push
push
lea
cmp
mov
adc
(bad)
pusha
les
leave
mov
fisttp
(bad)
lahf
rol
adc
ins
daa
inc
out
sbb
add
retf
cli
push
fs
pop
es
ins
rol
or
jbe
xor
push
repnz
add
or
sbb
div
push
mov
mov
mov
call
add
nop
jl
or
scas
clc
pop
xor
or
mov
call
test
call
xchg
add
push
cmp
push
push
loopne
add
mov
push
daa
ret
mov
xor
dec
hlt
xchg
loopne
pop
mov
sbb
xor
data16
fisttp
shl
add
adc
xor
sbb
dec
add
ret
retf
add
fiadd
inc
sbb
adc
call
xchg
sbb
push
xor
mov
adc
hlt
mov
or
leave
int3
cmp
in
(bad)
adc
movaps
rcl
mov
mov
dec
jmp
jge
add
xor
lock
fidivr
es
jl
inc
mov
pop
cld
cmp
fwait
test
xor
jne
sbb
xchg
es
jne
inc
int3
inc
xor
adc
retf
aaa
loop
retf
or
pop
lea
out
jmp
jmp
div
dec
xchg
inc
adc
cmps
aas
mov
push
push
push
add
loopne
inc
es
or
sete
xor
adc
nop
mov
fsubr
ror
jp
sbb
mov
push
clc
adc
jo
mov
call
jno
mov
sbb
mov
or
sbb
sbb
iret
and
mov
add
sar
add
sahf
scas
mov
jg
cmp
out
jo
ret
and
push
jg
sub
out
or
adc
lahf
cs
mov
mov
xor
cmp
je
gs
lds
pop
fisubr
aam
sbb
inc
add
pop
mov
aaa
sbb
inc
and
inc
dec
mov
cmp
xchg
shl
jne
push
push
popf
adc
jo
ds
pusha
fisub
mov
popa
mov
test
xor
lds
cmp
jbe
mov
lea
push
push
add
jmp
pop
inc
unpcklps
les
sub
loope
push
sub
ja
mov
mov
imul
into
dec
and
push
(bad)
(bad)
mov
call
xor
(bad)
in
cld
idiv
sub
jae
lea
loopne
xchg
je
or
ret
sbb
sub
push
xor
rcr
and
push
dec
hlt
test
xor
cmp
scas
mov
push
cmp
jb
fnstsw
in
add
xchg
je
lea
inc
(bad)
call
or
or
cmp
scas
cwde
xlat
jle
das
jge
test
pop
xchg
xlat
cmp
sbb
jnp
jne
and
pop
fmul
mov
sub
imul
ins
outs
sbb
dec
ret
outs
inc
pushw
push
mov
aaa
sub
inc
in
adc
add
push
add
xor
enter
sbb
call
test
push
fimul
ss
call
(bad)
sub
jge
or
push
pushf
imul
es
mov
add
push
pop
push
mov
std
push
lds
add
(bad)
mov
loop
push
not
add
xor
dec
dec
push
jp
pop
inc
hlt
das
or
add
jmp
sub
and
add
or
mov
mov
lods
sub
loope
pop
mul
cwde
inc
stos
adc
loopne
push
push
push
mov
mov
adc
xor
mov
test
sub
mov
pop
xor
pushf
popf
imul
lock
xor
or
or
or
pop
mov
inc
or
pmullw
and
call
mul
movs
adc
cmp
fisttp
push
sbb
jb
popf
and
add
jb
cmps
xchg
push
inc
adc
mov
enter
push
push
jmp
inc
test
shl
or
stos
div
push
mov
out
xor
nop
ss
add
je
or
je
imul
pusha
sub
add
push
adc
mov
adc
adc
push
mov
sbb
pusha
push
pop
test
es
fwait
in
in
or
sbb
mov
aam
xchg
clc
cmp
ret
xchg
xchg
popf
or
or
mov
cmp
sub
adc
leave
fidivr
add
adc
test
xor
retf
or
test
add
push
pminub
fs
pop
fsubr
xor
inc
adc
xlat
sub
shl
sub
fild
pop
shr
jge
adc
dec
call
jp
js
push
mov
cmp
xor
adc
das
jo
mov
out
loopne
push
push
fbstp
loopne
sbb
mov
push
adc
ins
xchg
and
int3
lea
cs
inc
lods
add
hlt
js
movsx
adc
inc
push
aam
loopne
add
dec
mov
and
dec
jl
imul
(bad)
jp
pop
adc
shr
and
or
xor
push
sbb
test
ret
jmp
mov
je
leave
(bad)
xlat
pop
and
sbb
dec
sub
dec
jg
add
add
inc
sahf
inc
fcomp
fcomp
mov
loopne
outs
pusha
add
fsubr
add
scas
scas
pop
fadd
xor
mov
and
scas
hlt
xor
xlat
movs
adc
jp
push
mov
lock
jo
push
add
and
mul
outs
mov
and
xchg
imul
push
push
sub
fmul
enter
in
out
shl
dec
adc
dec
adc
and
jmp
enter
rcr
pop
push
mov
shr
push
jo
rol
in
mov
mov
mov
add
push
sbb
mov
inc
nop
adc
fs
jl
or
adc
mov
sub
fimul
das
test
cs
in
frstor
push
sub
imul
adc
rol
hlt
(bad)
add
fild
clc
shl
add
nop
stos
iret
repz
or
sub
jnp
mov
test
push
in
outs
cld
(bad)
fnstsw
add
dec
outs
jbe
ins
imul
je
pop
add
jae
fild
xor
dec
clc
sub
add
add
jae
mov
add
add
push
and
xchg
fwait
call
das
cmp
push
add
loop
adc
jnp
lock
dec
add
dec
ret
pop
in
push
or
jnp
xchg
push
loopne
and
js
xor
xchg
jo
push
dec
push
push
fild
push
mov
adc
sbb
movaps
popf
pushf
pushf
sub
xor
add
sbb
in
or
add
sub
into
dec
repz
push
pop
fdivr
ret
mov
popa
jno
and
or
inc
outs
ins
popa
imul
arpl
and
jne
pushf
xchg
and
or
jne
mov
inc
pop
sub
mov
fs
imul
sahf
inc
(bad)
cs
inc
dec
jns
cmp
fcomp
inc
jno
sub
mov
cmps
jb
push
inc
inc
mov
jbe
outs
pop
popf
sub
js
dec
adc
(bad)
pcmpeqd
mov
test
push
or
pop
mov
lock
adc
inc
jb
je
ins
add
ja
or
or
sub
ret
loop
std
mov
jb
jns
cmp
push
ret
pop
rcr
adc
sub
add
mov
or
je
adc
lds
imul
inc
cdq
and
inc
xchg
test
sbb
inc
dec
push
sbb
sbb
daa
pop
cdq
mov
test
pushf
add
adc
add
dec
or
inc
sbb
ja
pop
inc
add
cwde
cwde
mov
or
xor
push
aad
sub
cmps
sbb
add
or
sbb
scas
pop
mov
pop
push
sbb
adc
mov
pop
ret
jl
dec
clc
dec
and
cmp
adc
mov
mov
jne
sbb
or
cmp
outs
mov
sbb
lods
jo
into
mov
mov
addps
rcl
push
and
and
xchg
mov
jle
and
inc
mov
faddp
pop
ror
inc
leave
and
dec
and
pop
loopne
push
add
lea
adc
cld
sub
push
push
mov
mov
adc
mov
fsubr
sbb
push
lock
jae
ins
push
xor
cwde
pusha
xor
add
xchg
pushf
dec
fscale
pop
xchg
cmp
lock
jmp
xor
sub
mov
fucomip
dec
push
and
mov
push
fisubr
hlt
ja
sub
mov
or
std
cmps
int3
cmp
sub
sbb
inc
jle
cmp
jbe
mov
push
inc
xor
and
jle
sar
sbb
daa
mov
xor
or
pop
push
std
je
lea
mov
sub
pusha
jo
call
inc
dec
hlt
paddsb
iret
inc
lock
loopne
call
jl
neg
push
mov
mov
and
mov
cmp
xor
mov
cmps
adc
xchg
ret
sti
xchg
and
scas
hlt
cld
jge
pop
cld
sbb
cmp
sub
push
fs
jge
js
push
fnstenv
inc
inc
push
push
pop
test
in
cmp
or
push
repnz
xchg
or
shl
mov
ret
aam
jnp
sbb
inc
pop
jns
pusha
jae
push
cwde
and
inc
add
outs
mov
and
sbb
jge
xor
fiadd
scas
pop
jmp
push
add
jae
pusha
lds
inc
(bad)
cmp
add
loope
xlat
dec
jp
add
or
or
test
out
retf
push
pop
aas
lahf
bound
dec
das
push
sub
adc
pop
mov
mov
out
pop
sbb
jb
ins
adc
das
xor
lds
sub
daa
add
mov
add
adc
pop
and
push
sbb
pop
mov
cmp
add
pop
aas
es
adc
push
jno
mov
push
daa
ja
jbe
call
adc
inc
pop
dec
shl
out
xchg
push
adc
pop
outs
sar
mov
mov
push
add
pop
push
fistp
dec
add
mov
sbb
movzx
mov
cmp
je
or
inc
inc
xor
retfw
sub
scas
std
or
xor
push
add
mov
inc
js
mov
push
or
inc
pop
adc
inc
sbb
pop
jo
sar
shl
clc
or
and
sbb
fisttp
push
adc
and
dec
mov
out
dec
fist
add
(bad)
dec
push
cmp
repnz
in
mov
ss
aaa
add
add
clc
inc
or
inc
or
ins
dec
sub
loopne
cmps
or
add
movs
add
or
not
fsub
cld
fidivr
mov
and
and
xchg
out
iret
test
sahf
aaa
sub
test
nop
fsubr
and
mov
outs
aam
rol
clc
cs
sbb
cmp
lods
jmp
movs
push
int3
pop
loopne
add
int3
int
dec
lock
data16
cs
mov
cmp
cmp
repnz
add
test
test
lock
cmp
and
cdq
in
outs
jnp
(bad)
mov
jae
xor
shr
cmp
and
out
push
xor
cmp
rol
iret
test
test
sbb
or
cwde
test
jbe
out
mov
inc
mov
cmp
fstp
cli
xor
sbb
push
js
dec
adc
mov
dec
adc
test
cmp
int3
ds
xchg
mov
add
mov
(bad)
and
lock
jl
test
and
rcl
es
or
jl
adc
fmul
cmp
jmp
movs
pop
(bad)
and
movs
or
in
arpl
pop
loope
add
fistp
ja
movs
aas
es
sahf
xchg
or
loope
inc
xchg
ror
add
pop
pop
mov
out
pop
add
push
mov
das
xor
push
fs
nop
cmp
add
add
or
out
mov
mov
adc
fistp
pop
ficom
adc
push
daa
iret
daa
or
and
mov
or
or
inc
add
out
outs
and
dec
add
dec
jb
fild
push
push
push
push
push
gs
cdq
mov
add
or
inc
outs
push
outs
push
push
dec
or
dec
jne
je
js
je
and
outs
outs
je
outs
outs
ja
fsub
fs
dec
or
jbe
cmc
enter
iret
adc
jg
outs
gs
push
jns
gs
rcr
(bad)
test
dec
outs
jb
popa
ins
add
pop
or
outs
js
leave
cmp
mov
sbb
or
push
xchg
inc
adc
punpckhbw
dec
outs
data16
sub
push
dec
gs
mov
sti
jo
jb
sub
outs
ins
adc
fadd
outs
dec
sub
outs
sbb
popa
jb
ins
jae
es
je
pop
push
gs
push
aaa
inc
push
and
dec
sub
popa
out
inc
shl
jbe
sub
popa
sub
xchg
inc
xchg
popa
adc
push
ret
ins
push
xor
dec
imul
sti
inc
jb
jb
test
adc
mov
dec
jne
push
jo
je
dec
dec
inc
xchg
inc
add
mov
add
popa
xchg
outs
and
mov
bound
loope
add
jo
xor
or
mov
test
mov
or
jbe
data16
push
push
ds
sub
dec
bound
add
mov
jmp
add
dec
jne
popa
pop
loop
addr16
jo
outs
push
add
dec
popa
bound
inc
outs
adc
or
push
pop
imul
pop
inc
(bad)
jp
dec
mov
dec
int3
scas
xor
aaa
add
jmp
aam
inc
icebp
pop
in
dec
lods
rcl
jmp
out
cs
or
mov
loope
enter
cmp
inc
pusha
xchg
pop
push
popa
bound
icebp
ds
or
dec
ret
adc
xchg
add
push
push
imul
lock
and
or
ja
scas
rol
cwde
cmp
inc
lods
addr16
adc
imul
sbb
inc
sbb
stos
jmp
add
test
push
lahf
inc
pushf
fmul
sub
clc
pusha
adc
sbb
outs
inc
jg
fisttp
add
inc
fbstp
jnp
mov
or
pop
or
jns
sbb
mov
and
loope
aaa
sbb
sbb
mov
dec
inc
push
out
xchg
inc
das
mov
push
int3
movs
sahf
paddsw
add
sbb
mov
pop
jo
sete
push
ror
push
jo
jae
jge
cwde
(bad)
push
mov
mov
pop
lods
pop
cmp
mov
add
and
mov
jo
sub
shl
push
add
mov
or
lahf
fisttp
mov
ins
dec
pop
adc
dec
fisubr
push
inc
sbb
in
sub
sbb
bound
mov
add
adc
ja
add
jns
add
cmp
cmp
and
dec
jb
pandn
loopne
fsub
add
pusha
aad
loopne
aam
cmc
or
dec
icebp
push
add
or
xchg
pop
call
add
les
add
add
les
xor
xor
pop
mov
push
push
inc
cmp
or
movs
sbb
cmp
sbb
mov
or
sbb
mov
ret
(bad)
fdivr
cmp
lods
push
(bad)
in
sub
dec
mov
xchg
adc
(bad)
and
ret
mov
dec
inc
mov
inc
dec
psrlw
ja
aaa
inc
aas
cmp
pop
in
add
push
xlat
(bad)
inc
adc
es
mov
in
adc
lahf
in
cwde
pop
jo
cs
in
fwait
cmps
rcr
mov
and
push
popa
cli
push
or
pushf
je
and
rcr
and
jg
adc
arpl
push
dec
pop
jae
or
aam
bound
xchg
push
outs
jne
xor
sbb
sbb
jbe
sub
popa
add
sub
rcl
or
pop
imul
(bad)
sub
les
mov
xor
mov
adc
stos
sub
pop
xchg
adc
fwait
push
and
addr16
bound
and
xor
push
dec
lea
cwde
cmp
inc
cmc
add
dec
int3
(bad)
pop
cmp
test
pop
sub
xchg
add
or
popa
or
xchg
ror
inc
jo
adc
mov
push
ins
lods
add
daa
into
das
cld
push
in
xor
xor
push
call
push
add
cmp
inc
push
retf
dec
retf
xor
adc
addr16
or
and
jp
(bad)
and
add
mov
inc
push
ins
outs
push
inc
push
or
(bad)
add
add
xor
sbb
or
add
prefetcht2
mov
add
popa
jle
outs
pop
push
js
aaa
sbb
adc
adc
dec
lock
push
inc
dec
outs
outs
es
jo
push
aad
fsub
inc
fsubr
adc
cmp
not
mov
imul
addr16
sub
push
add
lods
mov
fs
jae
sahf
pop
mov
xchg
js
inc
dec
popa
dec
and
mov
push
inc
inc
xchg
cwde
dec
das
js
pusha
dec
popa
loop
out
pop
pop
jl
or
cmp
push
mov
imul
mov
lods
jns
lds
sbb
pop
mov
in
popa
push
adc
inc
addr16
daa
push
ds
scas
popw
xchg
ins
in
jo
outs
pop
fsub
test
fbstp
ss
mov
outs
ins
cmps
push
push
pushf
es
mov
push
mov
scas
fnstcw
and
cwde
mov
mov
mov
push
ds
mov
scas
arpl
push
xor
mov
fisttp
movs
push
cwde
cmps
les
scas
jge
cmps
push
mov
scas
lods
ss
movs
push
jo
dec
mov
int
push
call
mov
pop
shl
loopne
mov
xlat
mov
push
push
cs
mov
cmp
add
mov
cmp
lahf
mov
(bad)
js
sbb
or
cdq
sti
pop
sahf
out
or
das
sbb
loop
dec
sti
pop
cmp
and
and
imul
or
xor
or
xor
sbb
adc
mov
sub
inc
dec
sub
je
test
sub
cmovbe
xor
mov
or
sbb
push
xchg
push
cmp
out
or
and
adc
mov
mov
mov
jmp
xor
pop
xor
adc
xor
dec
fstcw
pop
rcr
xchg
(bad)
(bad)
ss
xchg
and
stc
dec
jmp
je
es
cld
add
cmp
or
dec
push
test
addr16
mov
inc
sub
adc
test
ret
sub
push
inc
mov
inc
mov
sbb
dec
mov
call
popf
out
aaa
adc
pushf
add
fcomp
jo
hlt
stos
psubsw
push
and
inc
js
es
bound
add
fist
push
lahf
shufps
and
push
fwait
clc
push
scas
xchg
xchg
xchg
push
mov
pop
jo
rdmsr
out
inc
rcl
inc
into
gs
cmp
(bad)
fisttp
sbb
jnp
add
adc
cmp
dec
xor
or
ror
inc
cmp
adc
aas
fwait
aas
mov
(bad)
call
rcr
inc
sbb
dec
push
imul
push
imul
or
push
or
mov
xchg
add
adc
mov
push
popf
loope
cmp
aam
(bad)
mov
ja
mov
or
sbb
cmp
jp
push
inc
arpl
ds
ins
or
ss
imul
jno
add
jg
sbb
jnp
add
xor
bound
pop
aaa
mov
push
and
add
or
add
mov
inc
in
out
fmul
xchg
mov
mov
shl
fbld
mov
popa
or
inc
inc
jns
pop
int3
sub
addr16
leave
sbb
adc
push
jmp
push
jl
ins
enter
movs
mov
movs
pop
sbb
adc
inc
je
bound
in
add
ret
div
mov
or
mov
ret
or
test
or
rcl
cmp
or
pop
push
jne
in
pop
sbb
nop
jbe
les
and
or
add
mov
arpl
test
and
adc
mov
scas
pop
adc
clc
imul
mov
add
rcr
push
sbb
cmc
(bad)
mov
mov
fiadd
pop
sbb
sbb
mov
in
pop
xor
pop
xchg
adc
and
xchg
xchg
xchg
jne
retf
xchg
xchg
retf
sub
sub
or
xor
pusha
int3
cwde
inc
fisttp
lds
inc
add
mov
lods
inc
and
aas
jne
dec
cvtps2pd
dec
fcmovnb
loopne
sbb
fwait
(bad)
add
clc
inc
mov
iret
pop
pop
sub
cmp
aaa
add
add
mov
les
adc
out
mov
pop
push
(bad)
ror
push
sbb
out
popa
outs
push
sbb
push
or
bswap
jae
outs
outs
popf
inc
push
rsqrtps
(bad)
les
stos
add
sbb
inc
dec
bt
call
ins
jne
inc
jmp
or
jmp
int
xor
lahf
inc
xchg
mov
mov
shl
es
in
mov
ss
out
shr
pop
mov
dec
pop
sub
add
inc
dec
adc
aaa
add
ror
xor
cmp
pop
dec
adc
mov
sbb
mov
pop
dec
add
cwde
imul
add
inc
push
adc
shr
icebp
imul
add
sbb
push
mov
push
adc
push
jne
mov
pop
ror
(bad)
(bad)
les
xlat
fmul
cmc
xor
pop
and
pop
sbb
jns
sbb
loopne
(bad)
adc
adc
aam
pop
inc
and
or
or
aas
mov
push
test
xlat
pop
cmp
and
xchg
test
push
fst
sbb
adc
pop
adc
adc
es
dec
push
out
add
(bad)
out
pushf
push
cmps
or
or
lds
cmps
out
xchg
sub
sbb
sub
retf
sbb
add
and
mov
or
and
pusha
cmp
and
and
mov
and
mov
bound
pop
xlat
iret
jae
sbb
shl
stos
inc
xlat
push
push
add
inc
stos
add
in
outs
add
enter
outs
imul
(bad)
mov
fiadd
xor
mov
loopne
add
test
sbb
fstp
push
cld
push
inc
arpl
jno
int3
shl
and
fisubr
mov
mov
jecxz
mov
retf
sbb
adc
and
and
jb
mov
or
fiadd
mov
mov
sbb
push
inc
js
gs
outs
mov
add
repz
or
dec
cmp
cwde
dec
pop
mov
jb
cmps
jo
int3
or
mov
cmc
das
xor
or
or
dec
ror
mov
pusha
rcr
xchg
ss
mov
mov
aad
cwde
jge
cmp
add
sub
push
xor
cs
daa
pop
icebp
jmp
add
in
push
push
test
je
add
into
add
mov
repz
(bad)
mov
mov
push
xor
mov
and
sbb
push
or
mov
test
je
dec
shl
push
shr
sub
pop
ret
rcl
mov
mov
fistp
add
mov
add
push
mov
mov
xor
pop
ret
daa
or
cmp
jmp
je
js
das
push
or
add
jo
addr16
aas
adc
adc
and
call
ss
mov
cmp
push
imul
push
dec
pop
adc
mov
xlat
push
or
xchg
push
push
lock
push
push
jg
mov
and
hlt
mov
out
psubb
hlt
stos
inc
test
cld
cmp
getsec
xor
jb
push
lods
dec
mov
(bad)
lock
xor
mov
mov
retf
sub
lea
(bad)
mov
shr
sub
ret
ret
pop
push
inc
mov
push
scas
outs
shl
adc
push
xchg
or
and
pushf
cmp
sbb
lahf
aas
imul
out
mov
mov
daa
adc
add
das
(bad)
jne
cwde
or
pusha
mov
outs
test
sar
and
leave
mov
cmp
xor
mov
ss
or
mov
(bad)
cmp
inc
cmp
or
sub
adc
es
les
pop
adc
ins
sbb
jmp
icebp
icebp
push
sub
and
dec
push
inc
retf
mov
xor
js
push
push
(bad)
add
cld
push
push
mov
cmps
push
out
sub
pop
pop
mov
call
sub
push
mov
add
inc
pop
push
push
add
hlt
cli
push
xor
mov
pop
jecxz
jo
in
stos
pop
mov
mov
add
ret
call
imul
push
cld
push
jl
add
inc
or
ins
je
cmps
push
aas
je
jge
cwde
xor
xlat
push
pop
sub
adc
sub
into
pusha
or
cmp
loope
mov
and
loope
inc
xchg
call
out
dec
xor
ins
push
fild
fdiv
fild
pop
dec
add
shl
xchg
dec
(bad)
mov
or
clc
fbstp
or
cmp
fistp
mov
aas
jae
add
sbb
fs
(bad)
or
sbb
(bad)
xlat
sbb
pop
movs
push
mov
xchg
arpl
fcmove
push
mov
mov
lds
ja
sub
cmp
mov
sahf
push
mov
inc
sub
sbb
jmp
add
push
xor
mov
out
sub
outs
(bad)
ja
fdecstp
and
inc
clc
and
nop
ins
xchg
movzx
and
test
add
push
mov
call
test
je
call
fs
(bad)
jae
adc
cmp
xchg
jbe
jp
fmul
push
mov
jno
xchg
inc
retf
add
mov
into
loopne
cmp
push
retf
es
test
or
dec
hlt
js
cmp
push
sar
rol
push
add
pop
add
add
add
addr16
add
push
push
imul
pop
out
inc
outs
jb
add
je
jne
jbe
mov
push
jns
jp
xor
sar
mov
add
xor
add
add
add
mov
add
mov
outs
aam
fcomp
test
popa
xor
bound
xchg
(bad)
popa
outs
adc
dec
adc
ret
aas
sbb
push
mov
pop
es
mov
or
push
ins
fisub
lods
stos
mov
test
mov
pop
sbb
hlt
movzx
callw
out
ja
outs
push
cmp
jne
sar
pop
inc
dec
mov
fild
push
out
les
and
sub
retf
fdiv
inc
xchg
jo
fdiv
pop
pop
lods
jne
lea
scas
push
add
in
adc
mov
lock
inc
dec
cs
mov
push
inc
xor
js
lahf
inc
in
jge
(bad)
jle
(bad)
cmp
jge
aas
je
ds
sub
mov
pop
pop
push
lock
inc
out
fwait
pusha
sti
aas
jne
(bad)
fs
mov
jne
jnp
clc
and
push
push
or
sahf
lea
aaa
xor
sub
push
loopne
and
cmp
xor
sub
retf
jmp
jge
xchg
sub
loopne
aam
jo
mov
cmp
fst
push
jnp
pop
sbb
push
sbb
cmps
(bad)
dec
cmp
jl
fsubr
mov
jge
aam
mov
jo
mov
pop
aad
push
sbb
ja
pop
or
mov
pop
(bad)
cmp
jge
and
repnz
clc
xchg
imul
jo
data16
jle
addr16
ins
ss
hlt
sub
sar
ins
xor
sbb
add
add
jge
cld
mov
or
scas
js
adc
loopne
int
push
adc
dec
loope
mov
fsub
xchg
inc
lock
and
loope
into
stos
add
mov
fiadd
jl
mov
mov
add
stos
test
sbb
cmps
test
add
or
and
or
in
dec
mov
sar
fsub
xchg
shr
test
dec
jg
or
inc
push
mov
mov
jnp
aas
dec
mov
call
ss
xchg
call
push
sbb
ja
sbb
pop
in
push
inc
(bad)
mov
push
jb
push
loopne
in
in
adc
adc
add
cwde
in
and
sbb
cmp
(bad)
cdq
(bad)
dec
jne
shl
mov
mov
push
dec
xor
fadd
daa
or
cmp
sub
dec
and
fcom
or
sbb
enter
and
inc
fist
lds
call
or
loopne
iret
clc
stos
dec
pop
(bad)
(bad)
arpl
lds
shl
add
aaa
movs
cmp
sar
pop
out
or
stos
inc
xlat
test
rol
sbb
mov
pusha
pop
jns
pop
js
add
xor
cmp
aaa
pop
push
repz
inc
mov
inc
aaa
and
dec
and
xchg
bound
adc
test
mov
js
lods
add
or
or
adc
mov
and
mov
cmc
les
sub
loopne
sbb
push
(bad)
jge
les
or
xor
sub
jmp
push
subps
mov
pop
mov
mov
jno
push
(bad)
jno
sbb
loopne
fbld
adc
scas
sub
cmp
push
data16
adc
sub
pop
es
out
popf
loope
pop
pop
(bad)
out
outs
mov
sub
sub
sbb
clc
jp
cwde
loope
adc
arpl
cdq
pop
int3
cmp
fwait
lea
mov
loope
push
popa
pop
push
sub
ror
cmp
adc
adc
inc
add
popa
mov
xchg
add
pop
loope
sbb
out
cmp
add
sbb
ja
ja
aaa
stos
fsubrp
fst
retf
mov
xor
sub
outs
test
mov
in
lock
mov
xchg
xchg
add
out
retf
adc
pop
xchg
sti
xchg
xchg
xor
ss
xchg
arpl
pop
in
mov
cmp
enter
inc
add
push
ret
fdivr
fbstp
cmp
shr
js
or
mov
outs
add
pop
or
out
or
dec
loopne
mov
outs
add
mov
(bad)
fdiv
pop
or
call
mov
stos
ror
and
sbb
mov
mov
stc
sbb
clc
mov
test
je
cmp
sbb
push
inc
or
test
retf
icebp
daa
jp
pop
xchg
test
sbb
add
paddsb
pop
(bad)
mov
xchg
sbb
call
cmps
mov
test
je
sub
sub
push
adc
sti
push
fadd
pop
fimul
movzx
in
out
mov
and
adc
mov
xor
jle
push
adc
mov
jbe
mov
jl
repnz
or
inc
sti
add
outs
sub
adc
push
mov
pop
push
sub
je
mov
jle
imul
dec
sub
jecxz
adc
mov
and
push
in
leave
inc
xor
(bad)
or
lock
mov
or
pop
push
test
add
add
xor
stos
pop
cmp
es
mov
inc
call
jo
int3
test
cs
rcl
push
cmp
xchg
jmp
sub
dec
or
push
sub
adc
adc
enter
pop
(bad)
fisub
inc
nop
cmp
pop
add
mov
aaa
inc
adc
sbb
ss
jl
call
xor
push
(bad)
in
iret
mov
cmp
sbb
cmp
jne
or
ret
pop
sti
adc
xor
lahf
or
loopne
add
jp
pop
adc
rcr
xor
or
setne
cs
test
stos
adc
xor
test
push
mov
js
std
jne
xor
clc
sub
mov
jo
jno
sti
push
dec
cdq
idiv
dec
je
sub
ins
shl
xor
jne
out
add
pop
sbb
je
and
jle
imul
mov
add
clc
add
push
mov
mov
push
jl
mov
std
and
jmp
arpl
into
pop
nop
test
imul
rcl
xor
and
ret
mov
enter
in
jle
or
test
inc
sub
jbe
mov
inc
dec
push
clc
adc
mov
dec
mov
clc
adc
dec
hlt
push
clc
out
add
mov
out
mov
xor
inc
xchg
test
and
mov
loopne
fiadd
add
add
jge
add
cmps
jg
loopne
test
add
mov
scas
push
push
mov
adc
inc
retf
mov
xor
popf
movs
adc
and
inc
pop
sub
je
jge
push
ins
xchg
outs
mov
add
aas
out
mov
cdq
sbb
pop
ins
lahf
addr16
cli
cmp
cmp
inc
mov
inc
loop
scas
jne
stc
cmp
fs
les
in
jecxz
sbb
jge
adc
xor
or
mov
test
inc
in
pop
mov
jecxz
movq
sbb
adc
nop
sub
(bad)
jmp
es
sub
dec
inc
je
inc
push
(bad)
xor
clc
sbb
add
repz
mov
mov
push
inc
or
or
aas
sub
and
je
sbb
mov
sub
mov
lea
pop
fdiv
or
std
push
retf
inc
add
(bad)
popa
lds
dec
lods
or
retf
push
push
pop
mov
and
ins
inc
xchg
sbb
in
jne
pusha
xchg
(bad)
shl
adc
mov
mov
ja
push
adc
xchg
mov
pop
pop
jle
(bad)
ret
add
xor
push
mov
outs
icebp
gs
movs
jmp
aaa
xor
aam
mov
js
or
stos
popf
or
add
popf
inc
pop
fucomp
push
dec
sub
add
ret
daa
cs
and
adc
mov
arpl
or
cmovge
mov
inc
dec
mov
rol
pusha
push
add
loope
mov
inc
in
cmp
dec
sbb
retf
pop
in
pop
cmp
adc
in
add
dec
jmp
inc
gs
in
test
jle
jo
fs
jmp
fs
fimul
pop
div
and
shr
sbb
sub
mov
or
mov
test
dec
mov
mov
or
sbb
loopne
push
aas
ret
or
je
and
add
or
push
cmp
je
or
std
pop
add
push
xor
and
mov
or
mov
pop
pop
or
mov
(bad)
in
push
sbb
mov
aas
inc
xchg
mov
aad
and
inc
cmp
push
push
(bad)
jo
add
and
dec
inc
ss
ja
inc
hlt
pop
cmc
arpl
jmp
sub
fs
jge
mov
mov
jmp
stc
sbb
(bad)
leave
leave
cmp
mov
fld
fwait
inc
push
ss
adc
jle
push
in
jmp
mov
jmp
ror
ret
xchg
jmp
sub
push
fisub
loope
out
inc
mov
xchg
(bad)
std
cmp
jle
sub
pushf
inc
inc
sbb
mov
pop
jae
in
inc
cdq
mov
out
out
(bad)
loop
in
int
push
in
mov
arpl
outs
in
cmpxchg
ins
aad
rol
pop
lock
or
cmc
stos
ins
pop
adc
outs
or
jo
mov
add
stos
adc
push
(bad)
cli
push
div
and
sbb
aaa
out
dec
mov
mov
xor
xor
call
jnp
into
aas
cmp
pop
loopne
pop
out
movzx
shl
mov
push
push
add
loop
or
sbb
add
add
mov
and
out
mov
mov
bound
sbb
test
test
pop
leave
in
mov
mov
jecxz
push
fcom
mov
and
out
scas
pop
sub
scas
rol
dec
pusha
fs
outs
and
or
addr16
call
pop
jne
pushf
jge
xchg
cmp
jnp
jno
sub
mov
mov
and
(bad)
cmp
jne
mov
cdq
add
jl
xchg
sub
dec
push
call
imul
retf
jne
mov
add
scas
repz
pop
cmp
sbb
jnp
inc
mov
jne
sbb
push
aas
add
and
cmp
jbe
sub
xchg
aam
outs
push
pusha
dec
ret
clc
pop
ja
jns
mul
pop
and
sahf
pusha
jg
adc
mov
movs
xor
add
loopne
xchg
test
ror
push
rol
mov
mov
mov
fst
adc
adc
mov
inc
dec
jne
mov
add
inc
inc
mov
mov
push
loop
adc
mov
sub
add
mov
and
pop
cmp
xchg
mov
add
xor
jo
ds
add
cwde
push
adc
test
sub
sub
mov
push
enter
inc
adc
fucomp
push
movs
pop
adc
jle
idiv
sub
sbb
pop
pop
and
cmp
jne
cmp
push
add
sub
jbe
adc
pop
adc
xor
push
ins
add
pop
add
retf
or
std
sub
nop
push
imul
aas
push
and
aas
pushf
xor
clc
test
inc
mov
movs
into
push
or
inc
push
lea
push
movs
sbb
and
mov
mov
pop
add
and
push
xchg
sub
lock
pushf
push
mov
and
pusha
mov
xor
push
jae
shl
jne
icebp
(bad)
jmp
out
jo
mov
mov
hlt
jmp
and
adc
dec
push
sbb
cmp
adc
xor
daa
and
sbb
cmp
cmps
xchg
or
mov
ins
or
jmp
dec
pushf
add
js
push
hlt
cmp
scas
mov
mov
mov
sub
test
mov
and
mov
add
lahf
imul
addr16
daa
pop
cmp
dec
mov
add
ins
xchg
fmul
push
nop
ficom
pop
mov
shr
add
sub
cmc
cmc
sub
push
xor
inc
xchg
xchg
jp
and
dec
aaa
pop
out
sbb
add
adc
lahf
push
cs
push
es
xor
inc
dec
adc
les
ret
adc
hlt
cmp
mov
lea
inc
xor
stos
(bad)
xchg
inc
and
lea
fs
push
push
and
and
imul
shl
and
add
xor
imul
push
daa
(bad)
xchg
call
ins
push
mov
mov
ins
hlt
mov
add
mov
adc
shl
or
add
dec
or
daa
sub
cmp
ins
or
inc
data16
push
dec
or
mov
outs
adc
dec
mov
(bad)
jmp
sub
push
jnp
adc
push
adc
or
retf
add
or
sbb
iret
jbe
push
or
imul
pop
sbb
or
sub
cmp
daa
in
imul
mov
add
jb
aaa
movs
mov
jne
js
cld
das
cdq
neg
std
js
in
xor
bound
or
call
scas
cmp
or
pusha
addr16
imul
cmps
xor
sub
adc
lods
dec
movzx
mov
lods
adc
in
inc
sub
enter
add
jp
pop
cmp
xor
not
(bad)
xor
cmp
cli
sbb
shl
int3
and
shl
stos
mov
sub
or
cdq
xor
dec
jmp
scas
sbb
sub
push
xor
loopne
dec
sbb
sbb
shl
adc
mov
fdivr
sub
sub
pop
mov
add
and
ja
push
push
dec
pop
or
(bad)
pop
(bad)
sbb
add
loopne
(bad)
mov
inc
mov
dec
inc
dec
ret
jo
xor
fist
cdq
xor
add
jae
test
xor
sub
test
aas
inc
imul
aaa
jg
out
mov
mov
cmps
mov
inc
(bad)
popa
rcr
stos
sbb
call
lea
mov
dec
test
sub
xor
add
das
loopne
sbb
mov
add
or
jg
fwait
ins
sub
gs
mov
fmul
add
pop
mov
dec
je
push
sub
jl
cwde
daa
ret
mov
adc
mov
add
jmp
out
adc
adc
mov
jae
push
clc
cmp
arpl
out
in
add
xchg
ret
xchg
xchg
nop
popa
rol
out
cmps
and
or
jbe
mov
fwait
mov
das
out
add
mov
sbb
call
rol
fisub
xor
cdq
call
push
jae
jmp
cdq
in
sub
push
in
imul
cwde
xor
into
outs
les
hlt
mov
fwait
adc
aas
dec
pop
outs
aam
push
test
cmp
mov
imul
dec
imul
mov
sti
or
add
pop
pop
icebp
add
dec
jl
push
inc
popa
add
ins
(bad)
jnp
(bad)
push
int3
test
inc
adc
inc
movs
movs
arpl
inc
mov
sbb
stos
ja
xchg
pop
sub
jp
mov
xor
jmp
push
inc
and
cmp
pushf
sbb
mov
jne
std
dec
xor
jo
mov
cli
pop
pop
imul
je
pusha
ror
je
jmp
test
pusha
lock
test
cmp
imul
scas
lds
mov
xor
mov
adc
pop
iret
in
pop
jmp
daa
aam
in
jb
fwait
lock
and
fwait
cmp
inc
scas
in
fwait
pop
sub
loop
push
cmp
xor
mov
lock
add
push
loop
popa
mov
repz
adc
out
mov
mov
pop
and
(bad)
cmc
xor
push
fimul
sub
inc
cmps
pop
or
add
movs
xchg
or
ret
sub
pop
out
add
call
dec
sbb
fist
sbb
test
or
ret
fwait
call
pop
and
dec
pop
mov
sbb
xor
(bad)
pushf
dec
add
int
jg
jne
mov
sbb
neg
fdivr
or
je
das
or
loopne
ins
push
adc
shl
test
xchg
sbb
dec
jge
jne
mov
sbb
stos
and
mov
and
pop
mov
outs
mov
xchg
daa
div
movs
mov
xor
out
jmp
add
sbb
mov
mov
(bad)
stc
cmps
pop
sbb
lods
sbb
push
jle
push
sub
push
ins
pop
jbe
sub
bound
lods
adc
pop
push
sub
and
out
pop
inc
jmp
cmps
aaa
or
ficom
pusha
jbe
shr
adc
pop
and
inc
cmp
pop
push
aas
xor
arpl
add
xchg
inc
dec
inc
cmp
push
add
wbinvd
aaa
add
iret
movhps
mov
retf
xor
or
bound
push
scas
push
jg
add
nop
xor
and
nop
mov
aaa
stc
fcom
mov
div
cmp
push
jo
hlt
jo
aaa
and
inc
movs
add
sub
add
jle
jne
and
les
std
or
stc
push
jmp
cld
mov
aas
jl
xchg
sbb
cmp
or
(bad)
sbb
inc
xchg
and
mov
and
push
ret
mov
fiadd
mov
ret
jg
movs
inc
push
cmp
jne
cmp
mov
adc
cwde
adc
sbb
dec
movs
jne
and
cmp
adc
adc
stos
jne
and
scas
xchg
sbb
xchg
push
pop
ret
cmps
push
add
cmp
je
cmp
xor
je
adc
fdivr
loopne
add
or
(bad)
push
or
hlt
mov
dec
in
lds
or
sub
clc
rol
rcr
movs
or
lock
push
mul
inc
cmp
inc
lahf
inc
add
mov
test
sub
cmp
sbb
test
jl
inc
(bad)
nop
data16
inc
in
dec
mov
mov
or
in
adc
sahf
mov
mov
clc
mov
cmp
push
inc
fsubr
mov
mov
out
xchg
js
in
mov
adc
scas
aam
movs
push
fisubr
mov
(bad)
sbb
mov
push
sbb
xchg
jp
sbb
repnz
sub
stc
push
ret
or
add
cmc
mov
je
sbb
aad
xor
sbb
mov
dec
fmul
add
fdivr
add
gs
and
push
jae
scas
push
loop
xor
les
pop
inc
je
outs
sub
mov
retf
aaa
mov
jl
js
imul
sbb
fadd
shl
or
or
jp
test
out
aam
or
std
das
pop
mov
add
add
or
leave
dec
jge
pushf
rol
add
mov
add
mov
mov
leave
or
cdq
add
push
sbb
sbb
aaa
loopne
loopne
adc
add
inc
cld
and
mov
or
sbb
cmp
mov
add
cmps
jle
(bad)
cmp
or
and
lock
or
and
and
and
and
dec
cs
or
and
adc
xchg
or
xchg
adc
lea
stc
mov
out
xor
clc
push
push
ds
not
or
aaa
pop
mov
mov
jle
push
popa
dec
lock
mov
and
sub
daa
nop
jne
sahf
jns
xchg
xchg
js
xchg
cmp
xchg
nop
adc
xchg
je
xchg
mov
imul
into
mov
(bad)
mov
adc
mov
fistp
sahf
xor
rol
cmp
mov
or
or
push
or
js
inc
push
mov
sbb
test
ret
cmp
loop
pop
dec
imul
sub
fistp
sub
xchg
les
ins
pop
mov
je
pop
rol
mov
cwde
daa
add
js
cmp
inc
mov
outs
pop
sbb
nop
pop
sub
rcr
test
push
and
inc
cmps
shl
(bad)
jno
cmp
inc
fnstcw
inc
mov
or
iret
inc
and
mov
lock
push
pop
mov
mov
mov
outs
mov
push
xor
hlt
lock
sub
add
jmp
ins
fstp
pop
add
and
stos
and
repz
pop
pop
das
pop
int3
mov
pop
bound
add
shl
adc
gs
jmp
cmp
aad
mov
loopne
fimul
sbb
inc
jg
mov
mov
pop
out
cmp
in
cmp
mov
stos
(bad)
and
shl
or
xor
adc
loopne
adc
lock
out
rcl
push
and
leave
mov
movs
mov
push
lds
add
sbb
mov
test
loopne
inc
outs
xchg
adc
div
lds
add
hlt
add
push
cmp
dec
or
add
and
inc
fdiv
push
fwait
push
imul
xchg
addr16
push
jmp
call
dec
cmp
(bad)
inc
jo
mov
popa
test
pusha
cs
cld
in
cwde
and
jb
mov
(bad)
cmp
inc
dec
jne
dec
outs
fidiv
inc
mov
(bad)
jo
fwait
inc
(bad)
inc
sbb
loopne
adc
and
movs
cmc
xchg
bound
push
mov
repnz
sbb
rcl
cmps
xchg
sub
pop
xchg
lock
(bad)
or
sbb
imul
push
cmp
int3
test
fld
int3
dec
jne
push
mov
lea
ret
cmps
dec
lods
xchg
bnd
pop
cld
push
dec
sub
push
cmp
push
shr
rol
jo
rcl
or
lods
jge
xchg
lock
sbb
add
imul
sbb
ret
add
pusha
sub
cli
mov
lds
dec
stos
adc
add
das
scas
sbb
mov
dec
and
push
add
pop
loop
cmp
push
lahf
inc
jl
push
add
scas
sub
sbb
jmp
je
hlt
xor
push
adc
mov
sbb
or
push
inc
mul
mov
pop
push
sub
dec
pop
jns
inc
sub
retf
jg
sbb
and
mov
(bad)
mov
and
inc
xchg
pusha
cs
movs
pop
or
imul
xchg
xor
jno
in
cmp
sub
mov
jmp
hlt
test
call
mov
push
mov
or
inc
add
cmp
jne
or
sbb
loopne
mov
mov
xor
pop
push
pop
xchg
stc
mov
fwait
imul
rcl
mov
add
mov
cdq
add
inc
fwait
jns
push
xchg
and
int3
mov
xor
jge
cmp
ret
addr16
add
xchg
cmp
inc
or
or
inc
and
pop
mov
ror
xor
push
daa
shl
dec
call
or
ficom
lods
push
cmp
arpl
jmp
test
adc
or
cld
xchg
mov
call
inc
arpl
int3
gs
push
xor
mov
std
loope
mov
xor
add
aas
es
mov
bound
adc
push
mov
push
add
pop
or
mov
or
inc
adc
mov
add
movs
jmp
xchg
mov
mov
dec
jae
add
dec
or
inc
clc
test
jl
inc
inc
dec
add
in
pop
call
sub
inc
xchg
xor
bound
inc
dec
jne
aaa
data16
cmp
lods
add
xchg
fwait
xchg
sub
(bad)
(bad)
rcr
retf
sbb
es
vunpckhps
ror
add
outs
cli
and
add
cmp
data16
adc
mov
test
push
inc
stos
les
leave
cmp
ror
test
jg
cmp
jg
add
out
dec
(bad)
jle
push
lock
popa
add
movs
add
add
mov
icebp
jns
add
adc
jo
pusha
push
lock
stos
or
jg
mov
lock
(bad)
scas
sub
scas
add
retf
movs
cmp
(bad)
push
sar
adc
adc
add
and
push
or
xchg
shl
pop
sbb
jb
jg
add
sbb
xor
fnstsw
in
cmps
inc
clc
cmp
jle
mov
jg
jp
sbb
sub
cwde
dec
or
movsx
cmp
sbb
aas
mov
addr16
dec
jne
cmp
fisttp
jge
and
xchg
mov
cs
aad
jl
or
mov
xor
xchg
jl
dec
hlt
push
les
sub
dec
movs
and
ret
jb
xchg
idiv
push
or
out
inc
push
fcomp
push
ss
lea
fsubr
(bad)
xlat
(bad)
fxch
cmp
(bad)
(bad)
inc
push
ins
cmp
bound
pop
push
arpl
sbb
test
stos
cmps
adc
in
xor
jle
outs
scas
mov
add
mov
or
dec
sbb
(bad)
mov
cmp
add
inc
test
js
shr
loopne
inc
mov
dec
push
jns
mov
adc
push
cmp
or
mov
xchg
push
iret
shr
inc
pop
ins
dec
gs
jle
mov
mov
push
jmp
hlt
pop
mov
push
add
test
cmp
and
test
popa
pusha
ja
add
jne
mov
add
add
xor
mov
mov
daa
pusha
add
xchg
loopne
sbb
in
push
and
ins
jo
push
dec
cmps
les
lds
mov
shl
ja
nop
inc
or
lock
out
dec
loopne
aaa
in
leave
lock
cdq
call
sar
adc
das
push
jo
or
add
dec
xchg
lea
jg
das
sub
cmp
das
sub
and
xor
add
add
retf
pusha
imul
jo
mov
push
mov
pop
imul
sub
pop
popa
clc
movs
je
mov
xor
sub
sbb
and
adc
inc
sub
add
dec
jo
and
pusha
jo
(bad)
adc
dec
std
add
xchg
ret
lds
mov
mov
cdq
fcom
in
lods
cmp
retf
or
cld
loope
icebp
jmp
cli
sbb
pop
sbb
xchg
imul
xchg
shl
mov
pop
pop
imul
lods
ror
dec
fidiv
ret
push
in
(bad)
movs
lea
jg
mov
mov
inc
lea
out
jg
es
mov
es
add
movs
fcom
das
outs
shl
dec
jp
dec
jg
cs
or
ds
hlt
cmp
daa
sub
push
and
ret
sub
sub
mov
movzx
cmp
data16
mov
sbb
or
stos
pop
pop
loope
mov
xchg
ds
mov
jne
mov
test
inc
mov
in
movs
les
ret
adc
sbb
(bad)
movups
in
jne
xchg
bound
fiadd
test
mov
and
mov
sub
cli
out
mov
arpl
mov
jo
push
mov
mov
or
push
pop
or
pushf
sbb
cdq
int3
dec
inc
mov
add
push
cmp
pusha
sbb
bsr
or
adc
inc
jo
and
jbe
into
js
out
and
sub
repz
inc
adc
pusha
adc
shr
push
jmp
ret
out
mov
push
ret
add
inc
test
enter
ins
repz
dec
push
mov
retf
leave
js
or
in
xor
jo
adc
rcr
int
sbb
in
mov
jne
push
adc
mov
in
loopne
enter
push
xor
mov
lea
add
xchg
mov
and
xor
adc
dec
push
cmp
or
sbb
hlt
mov
push
and
mov
cli
movs
push
fmul
cdq
scas
sub
sub
daa
inc
adc
nop
enter
and
mov
pusha
or
adc
inc
and
inc
mov
(bad)
imul
test
add
xchg
jb
mov
mov
or
xchg
or
sub
mov
inc
and
push
pop
or
fstp
test
dec
sbb
lahf
std
mov
or
je
mov
mov
jo
lahf
test
ja
pop
mov
out
out
scas
push
mov
test
jnp
push
loopne
mov
pusha
and
pusha
mov
pop
sbb
mov
pop
and
sbb
fisubr
jecxz
or
mov
into
mov
lods
jmp
shl
cmc
fdiv
xor
shl
push
mov
mov
call
in
push
shr
shl
loopne
push
add
adc
inc
pop
aad
(bad)
sbb
cmp
mov
sub
push
dec
mov
dec
sbb
pop
sub
push
lods
jb
retf
inc
(bad)
aas
loopne
adc
inc
add
dec
xor
sub
add
add
nop
loop
xor
cs
inc
pop
in
sbb
push
outs
pop
mov
fisttp
dec
mov
ins
ret
outs
daa
lods
jecxz
add
jge
add
adc
jo
out
jnp
out
dec
add
fsub
jl
mov
inc
clc
push
hlt
out
pop
dec
push
movs
movs
pop
cmps
jge
(bad)
ins
cmps
adc
jl
mov
push
mov
neg
scas
cwde
mov
sar
sti
push
pusha
dec
bound
ds
out
mov
sti
(bad)
call
sbb
dec
add
add
add
outs
je
inc
jb
gs
daa
inc
fistp
jb
arpl
jae
add
pop
or
push
sub
add
gs
data16
jg
and
in
push
add
push
arpl
rol
jmp
fsubr
call
push
dec
and
ja
and
mov
ja
jg
and
add
add
in
pop
add
or
shl
ins
mov
and
push
ins
or
daa
daa
daa
popf
mov
outs
daa
daa
daa
daa
outs
push
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
pop
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
dec
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
ds
daa
daa
dec
xor
adc
sbb
call
fadd
or
inc
push
gs
imul
mul
addr16
outs
imul
outs
add
(bad)
popa
or
popa
adc
ins
popa
imul
fmul
bound
aam
mov
cmpps
push
div
stos
inc
into
(bad)
div
out
mov
rol
neg
fmul
cmp
or
inc
js
jo
xor
mov
ins
adc
test
or
sub
out
or
jbe
imul
or
addr16
outs
outs
(bad)
jae
popa
and
fidiv
jle
adc
xor
pop
cmp
dec
rcr
es
jmp
mov
push
out
lods
push
or
idiv
mov
jmp
and
lock
push
xor
xchg
add
add
cmp
push
sbb
and
shr
loop
stos
push
retf
nop
jo
inc
int
xchg
hlt
dec
inc
paddw
or
ss
xchg
push
outs
popa
sbb
add
dec
push
mov
jae
dec
(bad)
inc
aad
cmp
fdivp
adc
inc
or
popa
mov
je
ins
ja
add
and
cli
pop
push
dec
in
cli
cmps
call
push
dec
outs
popa
fs
outs
ins
mov
mov
jnp
movs
and
repz
int
adc
imul
or
fiadd
imul
jbe
repz
and
jnp
pop
cmp
mov
or
cmp
cs
sub
stos
push
icebp
loope
pushf
mov
mov
sar
adc
lds
pop
stos
xchg
inc
add
loopne
clc
popa
xor
(bad)
in
inc
hlt
xor
pop
push
lds
push
es
loopne
inc
ja
push
pop
inc
and
add
call
lss
cmp
sbb
ds
jae
add
loop
(bad)
pop
ret
(bad)
stos
inc
dec
test
ja
leave
enter
rcr
ret
ds
leave
leave
jae
fisub
les
dec
mov
push
mov
pop
in
out
push
and
push
repnz
out
mov
je
add
fidiv
mov
dec
adc
gs
sti
repz
sub
xor
pushf
add
fs
xor
or
inc
out
lock
pop
popa
and
and
add
es
cmp
dec
std
push
jnp
add
add
outs
fs
dec
xor
cld
pop
enter
popa
in
add
shl
pop
xor
sbb
add
mov
inc
sbb
pop
imul
mov
cmp
jae
mov
mov
inc
lods
test
or
add
popa
aaa
adc
out
inc
dec
outs
sbb
or
jb
jmp
or
ja
xor
lock
and
add
xor
add
add
jnp
push
mov
mov
pop
push
test
or
imul
mov
imul
inc
adc
mov
pop
sar
imul
enter
jb
or
pop
ret
push
test
inc
add
call
jmp
add
inc
outs
jne
je
sub
or
add
push
lods
imul
or
or
ins
outs
in
push
(bad)
add
add
(bad)
popf
adc
and
add
and
mov
add
ins
jne
addr16
loop
(bad)
sahf
adc
stos
loope
adc
or
sub
and
or
and
fnstsw
add
nop
push
push
addr16
pop
or
pop
in
fld
add
pop
push
jo
or
jo
or
sbb
ja
mov
or
and
aaa
out
ins
imul
rcr
call
push
xor
psrad
ret
xor
push
leave
(bad)
dec
adc
pop
xchg
xchg
xchg
mov
(bad)
retf
mov
or
add
das
sub
daa
daa
mov
pcmpeqd
shr
sub
and
es
ja
sbb
xchg
scas
pusha
into
jl
or
push
xchg
cmps
ja
ffree
popa
lds
out
mov
inc
daa
add
xchg
mov
cwde
js
inc
pop
outs
xor
and
test
test
mov
adc
fwait
inc
add
cwde
dec
mov
jbe
push
or
imul
cmp
mov
inc
inc
aaa
sti
mov
jae
imul
shl
mov
arpl
or
push
js
add
add
and
into
xchg
jge
push
outs
imul
outs
xor
mov
test
(bad)
sub
mov
imul
xor
pusha
test
sub
mov
push
pop
ins
ficomp
or
aam
jo
push
popa
pop
pop
retf
dec
xor
leave
pop
dec
jnp
mov
jb
jp
stc
push
popa
bound
pop
sbb
inc
sbb
in
add
shl
aas
add
jb
dec
inc
lahf
ret
sbb
sub
mov
jb
add
and
pusha
pusha
jge
ins
adc
or
sub
js
clc
push
sbb
xor
enter
mov
fld
test
push
inc
add
ins
mov
mov
ins
in
and
or
push
cmps
rol
push
pop
inc
call
test
add
or
jnp
sub
dec
jo
jnp
rol
pop
dec
dec
add
xchg
inc
popa
je
add
add
fcomp
lahf
add
pop
aas
jnp
loope
or
and
call
inc
imul
js
or
rcl
fs
sbb
adc
adc
arpl
push
arpl
push
push
pusha
int
push
imul
add
les
add
dec
push
imul
mov
sub
push
add
mov
sub
cld
arpl
inc
imul
cmp
das
popf
add
cs
fisttp
push
inc
aas
push
fdiv
add
arpl
imul
add
ror
fwait
jge
(bad)
es
sbb
mov
call
and
push
cmp
push
mov
xchg
outs
shl
sbb
inc
test
jp
xor
xchg
mov
jmp
and
push
pusha
and
push
lock
xor
mov
mov
stos
popa
xchg
push
and
jb
cs
sub
mov
sar
call
xchg
(bad)
fwait
sbb
fdiv
std
add
rol
dec
aad
sub
sub
inc
aam
shr
push
add
repnz
push
mov
test
je
fisub
dec
loope
arpl
pop
fistp
inc
or
xor
jnp
push
shl
dec
or
xor
mov
push
mov
cmp
mov
mov
or
pop
aas
hlt
cmp
or
dec
ins
lods
inc
add
neg
ds
push
push
xor
mov
inc
push
add
add
sbb
dec
push
or
hlt
sbb
in
fadd
dec
inc
fild
mov
mov
xchg
push
mov
or
pop
add
call
xchg
dec
popa
mov
push
mov
clc
add
cs
push
cmp
mov
(bad)
mov
dec
sti
pop
ffreep
push
mov
(bad)
loopne
in
fidiv
push
cmp
xor
add
jl
cmps
push
inc
add
cmp
jne
cmp
cdq
mov
push
movs
cmp
vmwrite
add
cmp
mov
or
cmc
mov
outs
push
imul
imul
(bad)
retf
mov
add
dec
xchg
cmp
mov
pop
pand
push
pop
iret
push
sbb
push
fld
sbb
aas
mov
iret
add
or
dec
xchg
mov
daa
push
in
out
pusha
sub
adc
jne
jg
add
xchg
dec
or
les
or
leave
pop
ja
(bad)
aam
pop
cmp
push
sub
or
shl
hlt
push
add
mov
push
xchg
std
adc
fimul
add
and
test
lods
popa
pop
sub
push
jae
(bad)
mov
add
push
jo
mov
mov
cmps
mov
inc
mov
jnp
inc
aas
cld
mov
in
ds
mov
add
cmps
lahf
cs
fimul
add
pop
cmovle
sbb
sysret
mov
shl
push
mov
ja
test
cmp
push
lea
arpl
adc
and
xchg
sbb
mov
jp
mov
xor
pop
jge
xchg
sub
fadd
add
shl
or
daa
out
cdq
mov
stc
das
loopne
ins
add
(bad)
icebp
sbb
mov
xor
cld
sub
cmc
inc
jl
adc
adc
das
add
test
mov
and
outs
jo
jl
mov
data16
jo
test
add
add
or
imul
lock
leave
outs
or
je
inc
or
jecxz
fldenv
rol
adc
psrad
and
sahf
jbe
adc
daa
cwde
sar
ret
sbb
mov
pusha
ret
not
hlt
push
daa
pop
inc
pushf
push
or
mul
js
stos
jo
popa
jae
adc
outs
dec
gs
pop
les
jecxz
sub
or
ror
sub
into
fsubp
jl
push
and
dec
xor
adc
js
sbb
pop
inc
and
cmp
add
sub
imul
and
xor
inc
inc
clc
mov
fld
dec
verr
pop
pushf
sbb
outs
iret
mov
pop
push
sahf
jo
retf
paddsb
fcom
aas
push
aas
test
popf
xchg
xchg
ds
and
add
pop
fmul
inc
pop
inc
call
fnstsw
(bad)
aam
xchg
ror
sbb
sub
jae
sbb
shl
dec
sub
bound
mov
push
inc
xor
jmp
mov
loope
mov
aas
adc
aas
sbb
shl
sub
rcl
ss
pop
imul
gs
enter
addr16
mov
shr
xchg
inc
inc
out
jbe
and
adc
shl
daa
push
adc
lock
rcl
pop
inc
or
hlt
sub
sub
dec
sar
ror
popa
mov
push
in
je
push
and
xchg
arpl
jl
aaa
add
hlt
dec
gs
sbb
pop
sbb
enter
add
inc
sub
mov
push
push
sub
add
inc
test
or
into
sub
push
xchg
test
fidivr
sbb
mov
mov
add
add
sbb
out
jnp
cs
mov
sbb
aaa
js
pop
add
(bad)
cmp
outs
ins
imul
add
lahf
push
cmc
add
lds
bound
cdq
cmc
shr
mov
sbb
jmp
sbb
sbb
jns
(bad)
sbb
dec
js
sbb
sbb
(bad)
pop
sbb
test
das
push
sbb
cdq
enter
rol
fdivr
dec
mov
push
and
or
inc
push
ret
inc
fnstcw
mov
ror
outs
idiv
sub
xchg
mov
sbb
and
enter
xor
les
mov
xchg
jae
dec
and
add
imul
dec
xlat
pop
xchg
fs
je
mov
dec
dec
inc
push
ins
popa
js
mov
push
push
out
inc
mov
test
push
inc
retf
gs
push
aam
test
outs
dec
or
adc
aad
and
test
pop
dec
pop
ror
mov
xor
arpl
push
add
push
ins
ror
mov
aas
cmc
lock
add
xor
inc
inc
push
jg
std
test
inc
add
aad
fdivr
add
pop
inc
add
mov
dec
inc
imul
popf
ficomp
fwait
cmp
jbe
or
mov
mov
cs
neg
clc
or
js
dec
call
mov
dec
and
push
es
lds
xor
add
les
add
push
mov
push
xor
sbb
inc
jb
pop
mov
add
sub
xchg
popa
dec
pop
adc
add
dec
cmp
cmp
outs
cmp
mov
add
mov
arpl
adc
loope
aad
or
nop
xchg
or
add
imul
mov
push
ins
aaa
daa
mov
mov
add
push
mov
outs
jae
dec
xor
outs
fs
mov
scas
ret
sub
ins
dec
ins
gs
jbe
mov
or
mov
or
cmp
ins
mov
xchg
mov
sub
pop
pushf
cmp
in
xchg
int3
test
push
push
xor
scas
inc
fs
rcl
loopne
sub
in
into
push
jecxz
xor
mov
push
pop
jl
cmp
sbb
test
adc
sub
and
and
mov
or
sbb
test
loope
loope
and
sbb
jnp
push
pop
cmc
cwde
cs
aaa
or
add
out
cmp
pop
mov
pop
mov
jl
test
cmp
sub
sub
(bad)
rcr
push
sub
jecxz
inc
test
inc
mov
fs
test
push
mov
cwde
jmp
or
mov
ret
je
xlat
ins
test
mov
push
inc
xchg
push
stos
pusha
scas
xor
push
xor
adc
push
add
test
loopne
and
inc
mov
dec
sub
jo
jae
push
sub
sub
xlat
imul
or
(bad)
div
jnp
inc
jmp
adc
jmp
mov
retf
push
cmp
aam
sub
test
push
add
loopne
mov
shr
cmp
test
adc
shr
xlat
das
fdiv
das
adc
data16
cmp
das
js
ja
dec
jns
mov
repz
mov
adc
or
icebp
xor
and
shl
retf
and
xchg
ret
jmp
mov
jnp
push
or
arpl
les
xor
or
inc
jmp
pusha
mov
(bad)
jmp
mov
in
aas
imul
lea
repnz
add
adc
cmp
imul
adc
or
adc
inc
or
ja
ja
inc
pop
xchg
inc
push
push
pop
xchg
xor
fadd
sbb
dec
stos
sbb
adc
pushf
or
adc
mov
pextrw
outs
mov
pop
mov
mov
outs
pop
sub
cdq
dec
inc
add
fucomp
mov
xchg
out
push
fs
mov
addr16
(bad)
iret
ror
push
out
or
push
sub
cwde
push
adc
out
aad
mov
mov
push
mov
scas
aad
adc
mov
rol
adc
aam
ins
hlt
cmp
mov
push
and
shr
aad
test
sub
inc
push
push
stos
mov
mov
lock
jnp
pop
jecxz
mov
bound
inc
and
jbe
daa
js
sbb
inc
adc
cld
push
or
out
dec
fcmove
imul
mov
pop
xor
popf
sub
push
push
inc
jne
or
adc
arpl
pop
mov
jnp
out
pop
pop
push
mov
jo
ins
js
cwde
mov
cwde
jb
add
clc
adc
add
jae
call
aad
jge
inc
lods
add
mov
(bad)
aaa
and
outs
and
add
fild
and
ja
push
push
fucomip
dec
and
inc
idiv
cs
fadd
test
cmc
jg
push
sub
push
inc
sbb
(bad)
add
or
jne
xchg
rol
out
push
add
dec
scas
ror
add
sbb
inc
mov
nop
sbb
sbb
pop
adc
dec
add
jno
add
test
jno
pop
add
stos
mov
imul
jmp
xchg
mov
mov
pop
xchg
sbb
rol
push
loope
pop
add
test
(bad)
retf
shl
pop
mov
mov
adc
add
or
push
mov
push
cmc
mov
ror
cli
bound
in
push
add
out
add
mov
lods
hlt
push
daa
mov
push
das
sbb
jmp
pop
add
mov
mov
gs
retf
shl
pop
cli
inc
cs
jo
arpl
cli
push
ds
mov
out
mov
mov
fs
hlt
inc
xchg
out
sub
add
jno
add
call
call
jbe
add
scas
sub
add
mov
pusha
or
cmc
push
mov
test
rcl
pop
sbb
in
xchg
shr
mov
pusha
neg
mov
retf
das
cmp
test
inc
test
xchg
(bad)
cmps
jbe
shl
hlt
retw
mov
push
add
xchg
loope
inc
je
inc
pop
pushf
add
aaa
push
and
push
prefetcht2
stc
or
xor
inc
add
mov
addr16
outs
imul
call
cmp
out
pop
jo
push
push
dec
sbb
adc
scas
out
inc
pop
inc
pop
popf
push
sub
out
movs
jl
xlat
aaa
mov
jo
stc
push
and
aas
or
in
mov
sub
test
aas
out
cli
cmps
js
sti
aas
mov
or
push
and
cmp
lds
cmp
add
push
or
mov
mov
push
icebp
mov
jno
ret
dec
and
lods
dec
iret
xchg
es
inc
fwait
dec
ds
push
jmp
inc
or
or
push
(bad)
inc
div
mov
scas
jbe
add
shl
fs
push
fsub
imul
and
add
(bad)
fmul
and
mov
push
fstp
push
sbb
fimul
add
adc
sub
dec
cmp
push
into
cmps
jae
loop
sbb
popf
daa
jle
xchg
or
pop
test
push
adc
and
and
fwait
adc
mov
imul
inc
add
and
jnp
rcl
cmp
out
mov
add
div
push
dec
cmp
shr
add
popa
inc
add
ds
adc
add
pop
shl
iret
pop
adc
mov
loopne
pop
lea
loopne
mov
seta
inc
div
push
jb
or
cmp
fidiv
xor
xor
outs
lea
cmp
pop
jbe
sar
pop
popa
movs
adc
jae
jo
jne
imul
mov
sbb
inc
shl
(bad)
sti
pop
or
call
ficom
loop
xor
mov
pop
add
sbb
adc
jns
lods
inc
push
bound
mov
push
mov
cmp
lock
adc
dec
jne
dec
fimul
adc
ins
sub
cmp
add
fdivr
ror
push
outs
(bad)
aad
mov
cdq
fadd
sbb
mov
sbb
loopne
adc
adc
mov
mov
jae
mov
ds
in
fstp
inc
outs
cmp
pop
add
or
inc
or
or
pusha
mov
(bad)
out
or
or
ins
jns
xor
mov
in
in
ss
mov
fs
push
or
push
adc
imul
bound
ror
lods
jb
push
dec
bound
int3
cmp
je
dec
sbb
into
test
add
dec
jae
push
sbb
adc
or
movs
ja
jmp
mov
or
mov
cmps
xor
in
ins
mov
pusha
cwde
fs
es
add
lahf
jbe
cmps
sub
push
pushf
movs
aad
add
push
mov
or
sbb
dec
pusha
sbb
out
mov
add
xor
int3
push
lods
dec
rcr
xlat
jl
clc
cmp
xor
rcr
neg
or
js
enter
cwde
xor
xor
rcr
sbb
adc
ins
scas
shl
mov
push
and
mov
cmp
test
or
mov
mov
xchg
jle
sub
fdiv
or
sub
adc
and
adc
daa
mov
loop
dec
cs
sub
or
adc
out
cmp
outs
or
xor
sub
adc
or
jae
ret
sbb
push
aaa
cmp
pop
xor
push
add
mov
pop
and
(bad)
out
inc
dec
and
and
inc
inc
out
cmc
jp
pop
bound
mov
xor
add
jo
and
xor
or
xchg
push
pop
js
test
dec
outs
fiadd
call
jns
push
mov
cmp
call
pop
adc
aam
or
adc
ds
mov
ds
int3
xor
jmp
int3
xor
call
pop
inc
pushaw
pop
add
xor
xor
and
push
scas
jecxz
fs
xor
fisubr
outs
fwait
mov
pop
movs
add
lods
nop
sub
pusha
and
ja
xchg
cmps
jno
out
pop
dec
jp
cmp
and
xor
stc
cmp
pop
mov
ret
pop
push
mov
push
into
cmps
push
dec
sbb
jb
in
js
mov
emms
fistp
jns
cmps
and
dec
pop
sbb
mov
nop
cmp
(bad)
popf
xchg
push
dec
fmul
add
comiss
jecxz
daa
push
mov
test
out
(bad)
cld
mov
daa
jecxz
cmp
mov
mov
dec
xchg
mov
call
lods
push
or
and
repz
sbb
jle
cmp
inc
fs
test
mov
jmp
in
or
fs
js
lea
mov
fild
iret
cmp
inc
pop
or
add
sub
stos
dec
test
adc
dec
aad
push
jae
or
fisub
or
cmp
ret
add
aad
sbb
rol
xlat
dec
js
xor
outs
sbb
adc
add
adc
adc
xor
stos
add
mov
or
or
jecxz
imul
xchg
cli
mov
add
jo
sbb
or
mov
or
add
add
add
add
add
ret
enter
call
adc
aad
daa
sub
adc
adc
ja
add
inc
sub
fmul
sbb
(bad)
aad
sub
mov
or
jne
gs
mov
outs
jcxz
ret
lods
mov
push
xor
add
add
push
sbb
cdq
std
push
push
sbb
pop
push
jnp
sbb
sbb
sbb
sbb
mov
(bad)
and
sbb
imul
adc
adc
or
pop
and
aad
adc
xchg
inc
pop
pop
push
mul
push
pop
push
dec
dec
leave
jno
pop
int3
or
test
mov
jae
jne
push
xchg
adc
shr
or
push
cli
imul
and
dec
lock
dec
mov
and
push
xor
push
mov
push
jb
mov
xchg
(bad)
mov
les
inc
(bad)
or
les
movs
dec
js
dec
or
bound
ud0
dec
adc
and
pop
inc
les
mov
adc
jns
jo
std
mov
ret
inc
inc
movs
add
jno
inc
mov
add
xor
sub
loop
daa
jae
pop
inc
inc
test
adc
xchg
repz
outs
inc
mov
bound
inc
out
inc
les
sub
bound
and
inc
inc
imul
arpl
pop
inc
daa
(bad)
sbb
inc
bound
pop
sbb
outs
cmp
xor
jmp
pop
cwde
push
xlat
lods
das
or
addr16
(bad)
push
push
adc
or
adc
imul
sar
enter
or
repz
inc
imul
inc
mov
clc
push
push
sub
adc
mov
adc
push
sbb
lock
mov
aas
push
dec
hlt
push
mov
hlt
sbb
or
or
sbb
daa
(bad)
cmp
push
or
add
cld
shl
or
inc
inc
js
popa
loop
in
pop
cmp
cli
jo
or
pushf
sbb
inc
fisttp
adc
stos
popa
outs
sbb
mov
adc
cmps
and
xchg
out
sbb
and
sbb
dec
jb
popa
adc
inc
jns
pushf
fcmovnb
push
adc
mov
popa
dec
daa
pop
xor
adc
mov
push
or
lahf
repz
call
into
push
cmp
dec
add
add
loopne
vmread
mov
into
movs
adc
adc
adc
jo
rol
outs
ins
lock
inc
sub
ret
mul
loop
mov
cmps
inc
pop
add
push
jo
in
add
fidiv
xor
sbb
adc
aad
mov
enter
or
xchg
fadd
sub
add
(bad)
and
mov
(bad)
adc
aad
and
leave
or
cmps
aad
imul
movs
or
and
add
inc
cs
jb
call
pop
inc
inc
inc
inc
jg
(bad)
jmp
inc
cs
or
sub
rol
xor
in
pusha
rcl
inc
loope
push
jne
pusha
push
aad
vmovaps
call
mov
cmps
inc
vcvtpd2ps
adc
sub
or
mov
cli
cwde
stos
mov
jmp
stos
lods
addr16
or
bound
je
push
jb
(bad)
dec
or
ins
xchg
inc
fist
jmp
pop
push
push
pop
mov
xor
add
lods
or
popa
or
dec
dec
or
lock
adc
out
adc
dec
aaa
sub
and
or
or
jne
adc
das
data16
in
rcl
fdiv
push
fcomp
push
push
sahf
test
cs
pusha
push
push
call
ss
(bad)
loopne
add
push
and
scas
cmc
mov
ror
xor
mov
ret
jbe
mov
shr
mov
jmp
or
xor
xor
add
or
out
stos
xor
fwait
and
int
inc
push
cmp
jns
sub
adc
mov
or
push
add
rcl
push
push
xor
xchg
add
pop
fsub
xor
push
in
in
add
movups
push
js
sbb
rcr
sbb
xor
xor
adc
jne
or
mov
mov
push
dec
pop
mov
mov
rol
inc
or
loope
adc
int
bound
push
js
int
dec
and
fild
jne
or
loopne
sbb
xchg
out
mov
data16
adc
xchg
pop
xchg
xor
loopne
jnp
inc
jmp
mov
dec
or
add
cwde
add
imul
cmp
clc
push
or
mov
das
cmp
sub
outs
cs
add
add
push
(bad)
mov
cmp
add
dec
and
aas
idiv
jne
aaa
(bad)
mov
movs
out
push
mov
or
pop
jbe
push
mov
xchg
mov
je
inc
ins
sub
(bad)
movs
dec
mov
inc
rcr
mov
adc
inc
ins
jne
add
fdiv
ins
stos
or
push
adc
js
in
retf
outs
mov
or
sub
jnp
test
inc
(bad)
xor
xor
nop
cmp
add
pusha
or
push
inc
inc
cmp
fs
xchg
jns
mov
mov
mov
not
sbb
and
sbb
sbb
scas
popf
cmp
pop
pop
push
and
push
das
jne
and
push
add
daa
pop
cs
sub
mov
pop
jbe
add
test
sahf
test
sub
jns
outs
in
mov
add
push
sbb
pop
aas
fiadd
scas
mov
dec
outs
adc
push
inc
ret
push
push
push
ja
fild
pop
cwde
ja
rol
outs
mov
xchg
lds
inc
bound
mov
or
jbe
ror
in
xor
int3
sbb
push
cmp
ins
hlt
das
or
fbld
iret
mov
jno
scas
int3
pop
xchg
push
push
sub
outs
push
sub
out
xor
sbb
and
iret
jecxz
call
inc
pop
aad
xor
test
cmp
cmp
pop
push
shl
out
push
les
pop
popa
or
loopne
jo
fistp
sbb
sbb
(bad)
fild
inc
xor
aas
jo
add
mov
cwde
push
int3
mov
test
inc
ret
frstor
aam
jmp
cld
push
inc
xor
cld
xchg
loope
xlat
xlat
xor
shl
ret
arpl
mov
sbb
ins
xor
ins
fldenv
jge
pop
xor
push
push
add
data16
sti
pop
in
fiadd
add
and
lea
(bad)
sbb
mov
xor
mov
mov
movzx
imul
mov
adc
out
popf
sub
pop
add
inc
rol
ret
stc
fdiv
aad
push
(bad)
sbb
(bad)
xchg
add
fadd
(bad)
into
push
call
lock
stos
pop
pop
pop
ret
mov
push
mov
sbb
std
push
push
loope
xor
xor
mov
push
push
sti
and
and
mov
test
je
push
ficomp
test
dec
push
std
cmps
shl
sub
int3
dec
adc
das
sti
out
popf
cmp
pop
xor
xchg
add
lea
into
(bad)
jle
mov
mov
add
daa
push
out
inc
jae
mul
retf
adc
push
fchs
or
pop
pop
pop
sbb
push
loope
rol
xchg
cmp
push
(bad)
call
ret
lea
pop
jne
sub
adc
ror
movs
pop
fimul
es
movs
cs
dec
retf
push
ret
data16
cmp
jge
inc
add
or
stc
fcomi
sti
(bad)
xchg
push
mov
mov
inc
mov
push
adc
cmp
or
(bad)
sub
push
cwde
xchg
mov
dec
push
push
ss
push
cld
xor
xchg
adc
xor
mov
push
mov
call
cmp
je
lea
mov
or
sbb
clc
pop
or
lea
mov
loopne
cs
outs
into
lock
ret
js
dec
lock
fimul
ficom
xor
imul
push
sbb
lock
cld
adc
xchg
(bad)
cld
into
dec
mov
call
sub
lahf
loop
dec
xor
idiv
sub
jmp
mov
mov
fild
rol
hlt
sbb
out
push
adc
add
sub
push
cmp
lock
rcr
cli
shrd
push
ja
push
push
dec
xchg
mov
movs
mov
cmps
repnz
jg
pop
movs
pop
mov
mov
call
mov
pop
pop
xchg
stc
adc
dec
jne
cmp
jbe
push
jbe
or
xor
int3
cmp
inc
sti
mov
jge
mov
sbb
inc
sti
inc
xchg
je
push
ja
jp
shr
jl
push
xchg
sbb
push
add
mov
js
mov
jmp
in
(bad)
fisubr
adc
lds
cld
test
je
cmps
dec
jae
mov
sahf
adc
pushf
test
sbb
add
cmp
shl
push
je
(bad)
push
or
mov
stc
sti
jb
ins
inc
lock
loopne
mov
or
loope
and
je
aas
mov
ret
nop
into
push
xchg
test
jb
sar
mov
xchg
or
cwde
and
inc
inc
sbb
sbb
lahf
cmp
xor
or
mul
fcomp
out
adc
ret
add
not
adc
adc
(bad)
(bad)
loopne
cmc
sub
sub
jp
push
xor
dec
ja
cmps
js
sub
mov
and
outs
sti
mov
jle
mov
mov
rol
loope
inc
push
or
daa
mov
pop
ss
push
add
push
sti
jnp
dec
(bad)
adc
cmp
jne
imul
(bad)
or
or
push
bound
js
add
pop
shl
lds
inc
sar
jecxz
cmp
cld
sub
div
call
xor
out
sbb
cmp
xor
ja
jg
sbb
adc
push
je
call
(bad)
pop
or
fstp
xor
sbb
sbb
or
inc
dec
jne
pop
xcrypt-ecb
cmps
mov
gs
mov
stos
ss
sub
sub
fisttp
push
or
add
int3
push
dec
push
jnp
mov
push
sbb
arpl
and
sahf
hlt
xchg
lods
mov
mov
and
jl
or
push
cwde
add
in
shl
sti
(bad)
fimul
push
inc
dec
inc
cmp
pop
and
or
je
adc
lea
sub
adc
ror
mov
or
sbb
xchg
mov
or
mul
sub
in
adc
xchg
test
mov
fcomp
movs
bsf
add
push
ja
pop
shr
push
out
in
je
in
adc
int3
sub
push
lock
imul
jmp
scas
shl
or
push
gs
jo
xor
les
sub
test
sbb
loope
icebp
mov
or
popa
test
out
loope
xor
fwait
mov
adc
lahf
mov
xor
mov
outs
xchg
data16
xchg
test
push
mov
add
push
loopne
mov
inc
xchg
push
sub
pop
add
sbb
popa
ds
outs
outs
clc
int
test
sub
daa
out
leave
lock
hlt
sar
dec
push
imul
jle
movs
test
(bad)
adc
push
(bad)
sbb
cli
dec
imul
lds
push
mov
pop
mov
loopne
push
push
inc
push
mov
cmp
enter
jno
test
push
or
pusha
mov
or
push
inc
pop
pop
sub
mov
ins
dec
fwait
mov
xchg
ins
loope
call
and
add
sub
test
fs
or
and
(bad)
push
pop
jno
es
call
popa
imul
into
bound
or
in
add
stos
das
sub
add
mov
inc
in
add
adc
push
or
jne
and
mov
test
ret
scas
shr
pop
sub
aas
rcr
xor
push
mov
adc
pop
rol
or
outs
test
js
xchg
lock
pop
adc
clc
mov
or
pop
not
push
ja
push
push
mov
int
jg
cmp
sbb
retf
pop
sbb
mov
push
jge
fcmovnu
nop
mov
aam
int3
cmp
or
mov
dec
sti
inc
and
sbb
inc
or
les
mov
inc
add
push
jmp
or
pop
daa
pop
sbb
lds
inc
inc
push
push
mov
cmp
das
fs
jle
aam
icebp
push
neg
cmps
clc
mov
clc
or
jl
cmp
jl
daa
and
dec
hlt
mov
movs
sbb
ds
xor
test
jle
sub
dec
pop
aam
jmp
push
push
mov
scas
retf
not
and
mov
fcomi
rol
add
clc
add
mov
inc
fnsave
inc
hlt
ret
push
aam
pop
mov
aam
icebp
les
inc
pop
cmp
xchg
dec
js
or
cld
and
js
xchg
push
call
dec
jns
jmp
push
xor
and
(bad)
mov
sub
shl
lods
sar
xor
jmp
jmp
sar
clc
not
inc
pop
fisttp
cmp
jne
fwait
lock
cmp
mov
pop
les
xor
pop
js
pop
(bad)
data16
mov
dec
(bad)
frstor
mov
add
push
or
call
inc
or
pusha
inc
inc
or
sti
pop
add
jne
loop
loopne
call
cli
push
push
push
sbb
sbb
in
cli
xor
or
shr
call
int3
shl
sbb
add
out
cdq
std
xchg
sbb
jmp
scas
dec
mov
and
fcomp
sub
push
es
cli
add
add
inc
nop
mov
sbb
fiadd
push
cmps
mov
jmp
inc
sbb
cdq
popf
fsub
or
dec
cs
dec
ins
jno
mov
(bad)
add
cli
mov
loopne
jmp
ret
push
xor
inc
jno
jg
sbb
and
jo
jo
test
jne
loopne
sub
lock
std
test
(bad)
fnstcw
pop
data16
jb
aaa
mov
push
scas
mov
sbb
daa
cmp
retf
and
data16
mov
(bad)
inc
fmul
push
xor
or
aaa
cmp
into
retf
xchg
rcr
dec
dec
xchg
ins
test
jne
adc
int
(bad)
lahf
and
je
sbb
cwde
adc
jae
add
add
data16
(bad)
aas
stos
add
test
rol
and
xor
out
inc
dec
mov
push
inc
push
and
xor
mov
mov
adc
push
aas
sbb
push
popf
sbb
xor
dec
lea
aaa
movs
inc
outs
jo
adc
(bad)
mov
mov
ds
or
sub
sbb
pop
mov
mov
mov
push
or
mov
mov
cmp
or
push
jle
jo
mov
mov
add
push
jl
call
lahf
mov
or
xchg
popa
or
pop
xlat
xchg
jg
imul
dec
pusha
cmps
ret
add
lods
imul
adc
push
mov
or
push
gs
dec
hlt
retf
mov
mov
push
sbb
sub
pop
add
or
mov
mov
sbb
adc
mov
jl
mov
iret
mov
dec
retf
(bad)
push
pusha
cmp
hlt
rol
xor
sbb
push
mov
inc
jmp
xor
push
out
mov
pop
push
fisttp
xor
je
adc
add
add
rcl
aam
imul
mov
push
push
push
or
setne
pop
cmps
mov
dec
xchg
fisttp
or
imul
ret
inc
sbb
xchg
mov
dec
xor
popa
mov
xchg
or
aaa
sar
pusha
popa
pop
jg
je
dec
rol
jp
push
neg
xchg
pop
sbb
repnz
or
cwde
mov
mov
add
jmp
call
sbb
add
ret
ror
push
inc
jb
mov
and
add
cmp
adc
push
cwde
sbb
xchg
jg
or
imul
sub
pop
inc
out
neg
xor
push
pop
les
repnz
adc
das
bound
outs
sbb
inc
jbe
push
mov
hlt
push
add
pop
or
sbb
imul
in
in
and
and
in
ret
jne
and
fsubr
and
dec
addr16
xor
push
add
in
fwait
jo
xchg
add
push
sub
mov
inc
push
fisubr
arpl
lock
fmul
mov
sub
pushf
adc
push
adc
shl
inc
jae
xchg
(bad)
sbb
loope
cmp
sahf
xchg
or
repnz
aam
push
gs
je
mov
cmp
sti
pop
nop
fdivr
pop
pop
add
adc
dec
gs
jbe
lock
push
xchg
xor
mov
or
push
pop
xor
pop
pop
test
loope
jge
mov
fisubr
mov
cmp
push
push
or
popa
fstp
add
out
inc
push
or
xor
mul
push
movs
ss
ror
push
(bad)
lock
out
dec
push
sub
dec
sbb
mov
push
jo
loopne
(bad)
movzx
sahf
je
adc
repnz
push
and
dec
fs
mov
and
sti
jne
imul
and
pop
dec
mov
sub
mov
xor
dec
in
pusha
sub
outs
ja
cmp
or
sub
push
cmp
push
shl
xor
cdq
dec
xor
dec
pop
sub
cmp
mov
inc
in
bswap
add
push
inc
jle
fs
pushf
or
mov
pop
mov
pop
add
sbb
shl
mov
add
and
and
loope
sub
and
and
and
or
outs
adc
add
xchg
pop
mov
aam
outs
mov
enter
fldenv
scas
es
cmp
mov
fs
pop
repz
cmp
mov
push
mov
sbb
add
push
loopne
cwde
test
or
daa
inc
sti
daa
or
std
ja
adc
add
adc
add
sub
imul
daa
sub
sub
ja
pushf
inc
nop
retf
jmp
gs
dec
and
and
cmps
adc
jno
dec
popa
fwait
push
ret
jno
mov
rol
jno
ins
fdiv
or
push
jno
mov
pop
and
popf
ror
aaa
sub
pop
stos
sub
loop
in
jbe
jae
push
push
ret
push
lods
scas
fmul
imul
imul
mov
cmovbe
push
xor
retf
push
(bad)
push
jns
mov
pop
mov
sub
push
lea
pop
test
cdq
push
dec
add
retf
fist
inc
mov
and
push
xor
or
cmp
stos
jb
inc
push
cmp
lods
into
in
rcr
push
inc
push
inc
jne
aas
cmp
js
adc
xchg
push
fimul
push
cmps
jne
imul
adc
inc
test
int3
adc
adc
adc
mov
add
push
pusha
mov
pop
fcomp
je
or
inc
ret
pop
or
ret
jne
push
push
pop
xchg
sahf
pop
imul
jb
pop
addr16
mov
cmp
adc
push
cmp
jg
mov
xchg
nop
push
or
ja
sbb
cdq
arpl
sub
push
pop
inc
pop
enter
push
sahf
lods
jecxz
loope
pop
dec
popa
dec
jne
das
xchg
in
pop
mov
push
mov
push
or
aas
fsubrp
sbb
xchg
inc
das
ror
test
sbb
xchg
jnp
rol
pop
jle
mov
jg
(bad)
ss
pop
fadd
inc
mov
push
daa
test
test
test
or
movs
or
mov
idiv
ins
and
pusha
jno
dec
sbb
push
movs
or
jo
test
imul
stos
and
inc
ficom
out
adc
push
outs
(bad)
pshufw
fsub
jns
dec
hlt
gs
jb
stos
imul
add
dec
cmp
add
adc
jp
jo
mov
jnp
jno
test
jnp
adc
js
or
lahf
pop
call
dec
jnp
test
add
ror
mov
mov
das
fisttp
jno
cmp
xchg
aas
pop
bound
push
xchg
les
fs
or
mov
mov
dec
sub
mov
test
and
mov
shl
cmp
test
jnp
outs
fs
or
pop
repnz
andps
jb
cmp
xor
(bad)
arpl
es
dec
push
xor
xor
xor
and
lahf
xor
and
outs
xor
push
loope
fist
push
sbb
loop
fiadd
mov
mov
test
pop
push
cmp
and
scas
fcomp
push
out
or
push
mov
sub
push
push
mov
cwde
or
mov
xchg
add
add
neg
scas
push
out
add
dec
jne
push
or
addr16
dec
getsec
add
nop
mov
fs
iret
clc
add
test
arpl
ds
pusha
out
and
ss
xor
outs
jo
pusha
adc
mov
fsubrp
not
neg
sbb
adc
xor
inc
repnz
call
dec
sbb
ret
out
add
rcl
jl
pop
jge
fwait
loopne
loopne
pop
jl
fiadd
ss
retf
push
ins
sub
imul
sub
push
and
fs
and
dec
test
test
inc
mov
and
ins
xchg
(bad)
jne
movs
and
add
test
movs
cld
add
sar
mov
or
adc
loope
and
jg
iret
sahf
pop
jmp
cmp
sbb
cwde
mov
push
outs
xor
call
sbb
mov
sbb
mov
and
sub
cdq
pop
adc
xor
cmp
inc
loope
mov
rcr
lods
add
je
pop
xor
daa
mov
add
pop
mov
ins
jae
(bad)
xor
cmp
sub
cmp
scas
add
scas
std
scas
clc
in
mov
daa
mov
jp
mov
xchg
scas
xor
add
xor
dec
scas
and
mov
mov
or
daa
mov
jp
mov
mov
push
addr16
pushf
scas
dec
scas
and
cmp
out
or
(bad)
pop
or
and
shl
sti
add
adc
stos
push
pushaw
mov
xchg
rcl
mov
mov
jmp
ret
push
mov
dec
xor
xor
pop
push
pop
(bad)
loope
pop
cwde
pop
ret
pop
mov
lods
lock
xor
push
xor
cdq
or
and
sub
jno
adc
and
addr16
mov
call
lods
sub
add
lods
das
xor
mov
mov
jns
inc
xchg
and
xchg
pop
xchg
or
xchg
xchg
pop
xchg
cmp
pop
xchg
pop
xchg
add
and
pop
or
or
dec
and
mov
sub
or
and
push
inc
jnp
sub
sub
sub
sub
mov
sbb
and
inc
or
add
add
pop
adc
adc
jne
popa
adc
dec
adc
xchg
lock
mov
hlt
mov
push
loopne
xchg
mov
sar
push
xlat
mov
shrd
cld
outs
sbb
imul
or
mov
fstp
popa
mov
pop
cmp
lock
mov
or
data16
mov
adc
sbb
pusha
fcom
jnp
xor
dec
jae
hlt
hlt
hlt
hlt
or
pop
nop
hlt
adc
fwait
xchg
cmp
(bad)
pop
mov
mov
loop
aam
lock
enter
jl
xchg
in
call
mov
loopne
jge
sub
push
dec
jge
mov
sub
cmp
sub
dec
hlt
add
rol
xchg
or
inc
and
mov
or
or
ja
addr16
cmp
sbb
cdq
jge
jmp
sub
sbb
sbb
loopne
sbb
in
add
test
cdq
xor
xor
out
inc
pop
pop
gs
test
neg
test
mov
xchg
stos
or
pop
xchg
pop
fwait
and
std
push
call
and
mov
jae
push
loopne
inc
or
int
add
sbb
sar
inc
psllw
add
add
ja
lahf
xchg
ja
sbb
rol
xchg
loope
(bad)
push
xor
rcr
and
sub
cmp
sub
dec
and
push
and
and
or
test
int3
mov
push
rol
mov
or
xor
xor
add
clc
or
sbb
inc
sub
mov
mov
(bad)
mov
mov
jo
or
or
pop
arpl
mov
or
into
adc
ficom
fld
mov
int3
into
aam
jo
dec
or
mov
sahf
ins
mov
dec
mov
sbb
enter
test
push
dec
test
xchg
and
and
outs
push
je
lea
imul
jnp
inc
js
inc
mov
adc
add
adc
push
or
add
and
inc
nop
or
cmp
xlat
aas
sbb
ins
lea
mov
outs
push
icebp
clc
add
sub
sub
rol
mov
push
inc
cmps
adc
pop
sub
fsubr
(bad)
sub
pop
sub
(bad)
sub
adc
(bad)
sub
pop
sub
pop
sub
sub
pop
sub
(bad)
sub
pop
sub
sub
sub
in
xchg
sub
xor
fsubr
sahf
shl
ins
adc
adc
jns
dec
clc
mov
aaa
inc
sbb
leave
je
sbb
cmp
mov
xchg
or
add
sbb
fadd
push
inc
xor
and
lods
aad
call
lea
sbb
mov
sbb
pop
pop
fwait
mov
shr
(bad)
imul
sub
(bad)
sbb
adc
fstp
jo
mov
lds
or
xchg
add
daa
sbb
mov
mov
loop
add
js
sub
fs
cmp
stos
sar
imul
cmp
mov
shl
into
sahf
adc
ja
ret
cmp
lds
sbb
in
add
test
fimul
test
jl
(bad)
mov
(bad)
dec
mov
mov
cmp
int3
xor
cli
int3
mov
push
push
fcom
mov
adc
test
dec
clc
pop
imul
xor
imul
pusha
imul
cmp
jo
js
or
fldcw
xor
mov
adc
add
icebp
pushf
icebp
pushf
movlps
pushf
sbb
and
inc
lock
daa
adc
jae
adc
adc
adc
or
push
add
js
test
in
arpl
test
test
nop
inc
push
test
test
inc
push
cmp
cmp
test
ss
adc
mov
aaa
lds
xor
mov
mov
lods
pop
inc
mov
adc
test
dec
push
(bad)
outs
pop
xor
fbld
das
mov
stos
pop
ret
mul
lahf
or
pop
bound
jno
mov
mov
and
loop
ja
sbb
lahf
shl
lahf
sbb
(bad)
shl
faddp
shl
sbb
jg
sbb
xchg
scas
sbb
daa
push
mov
(bad)
push
(bad)
fmul
daa
leave
push
daa
(bad)
lea
push
fnstenv
fmul
push
loope
sbb
and
and
stos
and
pusha
jno
jno
add
retf
inc
add
mov
xor
xor
xor
mov
xor
xor
xor
mov
xor
push
mov
mov
or
pop
or
and
out
jno
adc
pop
push
bound
sub
sub
sub
inc
and
or
adc
or
iret
fucom
dec
dec
add
test
je
add
mov
mov
push
inc
test
xor
cmp
adc
inc
loop
sbb
sbb
sub
cmp
int3
adc
sar
imul
sub
dec
jno
cmps
std
fnstenv
add
test
adc
lds
add
jle
cmp
jbe
add
das
dec
sti
adc
mov
sub
lahf
nop
and
ror
mov
fimul
mov
sbb
inc
or
and
adc
jae
pop
cld
fidivr
adc
pop
mov
push
adc
jns
jns
adc
inc
mov
pop
jmp
pop
test
test
cmp
nop
test
test
push
pop
(bad)
pop
es
pop
dec
add
adc
push
test
movs
mov
ror
add
std
pop
fbld
cmp
fild
fist
aam
inc
ffreep
fild
fild
mov
push
sub
mov
mov
and
mov
xlat
and
adc
xor
mov
mov
pop
add
andps
fs
imul
gs
add
cmp
imul
mov
dec
add
daa
xchg
fcmovnu
outs
pushf
push
inc
cwde
push
or
jge
jle
adc
cmp
sub
xor
test
push
adc
cmps
pop
ret
sbb
pop
call
popa
pushw
add
jg
push
imul
outs
je
or
fs
in
cmovl
jne
and
outs
daa
xlat
and
adc
inc
ins
jne
and
fild
add
gs
jl
sbb
add
fs
sti
add
test
inc
add
call
push
dec
add
push
out
sbb
je
das
mov
fld
push
inc
sbb
je
add
add
and
push
inc
push
repnz
lods
mov
push
sbb
in
das
jp
outs
jb
imul
push
pusha
jo
test
test
inc
or
daa
dec
pop
inc
sbb
mov
or
out
add
adc
pop
sbb
pop
pop
std
call
cmp
pop
and
cs
ins
popa
imul
rcr
scas
adc
lea
aam
add
fwait
in
push
ret
push
push
sub
popa
mov
inc
push
xor
das
and
shl
or
xchg
popa
maxps
js
sub
sbb
sbb
ja
lds
jmp
inc
push
mov
fdiv
jne
in
jp
jb
dec
push
loop
shl
add
and
cmps
sub
add
push
sti
mov
inc
add
jnp
xor
popa
into
pop
add
loop
mov
or
inc
inc
bound
jb
jns
sub
xlat
inc
pop
cdq
imul
nop
add
or
mov
pop
add
or
or
xor
mov
push
ror
or
adc
fisttp
cwde
sbb
cmp
jne
lock
hlt
cmp
sete
mov
jb
sbb
mov
jmp
adc
xchg
or
add
jns
dec
pop
imul
jg
xor
inc
jl
xlat
mov
sbb
inc
sub
dec
jne
pop
or
pusha
stos
movaps
adc
pop
cmp
mov
xor
xchg
or
dec
sub
or
pop
dec
jl
mov
add
je
lea
sbb
cmc
dec
push
xor
mov
push
mov
mov
and
add
inc
fcomp
cld
mov
js
adc
mov
inc
inc
adc
jmp
pop
inc
ins
out
add
inc
adc
mov
hlt
inc
push
mov
inc
outs
adc
jo
sbb
in
sbb
adc
add
push
sti
adc
shr
xchg
mov
(bad)
jle
dec
sbb
stc
inc
shr
call
xchg
sbb
ret
push
or
push
(bad)
loop
sbb
push
inc
push
dec
adc
push
adc
(bad)
loopne
je
pop
int3
imul
outs
xor
daa
mov
mov
mov
xchg
lods
inc
loop
or
(bad)
cmp
dec
les
in
push
or
inc
xchg
pop
dec
adc
inc
add
cld
fwait
test
push
cld
lea
mov
fwait
jbe
pop
mov
mov
lock
adc
jle
pop
sti
movs
imul
or
add
jbe
jmp
inc
bound
and
mov
mov
sahf
sbb
rcr
das
es
rcl
(bad)
loop
(bad)
xchg
sbb
or
fimul
add
jle
cmp
sbb
sub
cmc
mov
mov
mov
xor
stos
jle
jae
cmp
lock
add
dec
push
add
or
test
in
add
cmp
adc
pusha
es
mov
mov
xchg
mov
in
xchg
or
dec
loop
add
nop
inc
xchg
iret
imul
adc
push
mov
push
inc
adc
sbb
push
call
rcl
fcomi
jmp
and
push
xor
jo
hlt
mov
sub
out
movs
outs
aaa
ins
cmp
(bad)
clc
pop
das
stos
push
mov
jl
(bad)
jg
xor
or
or
cmp
push
add
push
loopne
in
jae
mov
mov
stos
jl
pop
hlt
icebp
xchg
or
add
cmp
pop
popf
adc
add
push
add
bound
and
mov
inc
and
mov
inc
push
adc
push
and
pop
in
mov
dec
jl
inc
or
mov
mov
push
push
inc
push
adc
xor
add
test
hlt
jl
push
or
out
adc
dec
add
mov
out
jae
clc
add
dec
jne
inc
dec
xchg
jne
xor
out
xchg
aas
sub
(bad)
cld
retf
fadd
or
pop
or
(bad)
mov
bound
adc
push
sbb
dec
lea
rcl
add
or
add
mul
add
je
(bad)
sub
mov
lock
scas
inc
ror
pop
add
jbe
sbb
add
mov
add
pop
sub
push
mov
push
jg
les
inc
retf
popa
mov
sub
es
iret
rcl
cmp
push
cmps
cli
loopne
jge
cmp
(bad)
xchg
adc
or
cmps
ret
inc
retf
push
pop
cli
in
(bad)
rcl
mov
xor
cmp
push
cmp
xor
sub
mov
mov
push
ret
jmp
add
imul
lock
je
pop
mov
test
daa
push
push
push
sahf
rcl
inc
adc
mov
cld
ret
mov
mov
test
mov
inc
cld
add
add
aaa
xor
mov
push
lahf
popf
xor
cdq
int
xor
or
add
add
aaa
xor
cmp
add
add
xor
lds
push
inc
push
mov
mov
(bad)
aad
and
sbb
sbb
bound
xchg
sub
sub
xor
push
in
ss
pop
pop
or
and
push
jl
dec
jb
cmp
fdiv
jae
jae
jl
in
inc
xor
xchg
add
pop
xor
call
out
xchg
fidiv
rcr
and
or
neg
sti
rol
outs
mov
cmp
out
sahf
mov
movs
fwait
xchg
mov
pushf
data16
outs
jmp
adc
bound
xchg
pop
mov
adc
daa
loope
fwait
pop
call
adc
xor
popa
rol
or
add
imul
clc
push
popa
repz
inc
jmp
pusha
pop
mov
and
xor
lea
mov
lock
mov
icebp
jmp
sub
neg
sub
je
dec
je
push
adc
pushf
mov
ins
(bad)
test
adc
xchg
pop
or
mov
(bad)
pop
mov
test
mov
sbb
sar
imul
push
ret
push
cmps
stc
cmp
shl
repz
mov
fistp
xor
mov
xchg
cwde
ss
ret
push
in
pause
iret
inc
aaa
and
cmp
stc
cmp
or
les
lahf
xchg
inc
pushf
inc
inc
rcl
ret
inc
out
sar
inc
mov
push
sahf
adc
and
enter
xchg
lods
test
and
push
push
or
in
pop
sub
or
inc
sar
test
imul
cmp
shr
jle
mov
call
loopne
pop
out
aas
cmp
fldcw
aam
fs
sbb
pop
jno
jb
stc
sub
jae
cmp
sete
push
inc
or
sahf
sub
loop
push
fs
push
popa
sahf
or
add
jmp
push
lods
sbb
mov
mov
fs
pop
sbb
mov
hlt
pop
jne
sub
cmp
ror
jbe
fs
push
cmp
push
mov
xor
lock
je
in
rol
jb
mov
sub
ret
ja
ds
and
inc
movs
shl
sbb
sub
pop
or
dec
fistp
push
jo
pop
aam
inc
mov
mov
scas
call
rcl
rol
rcl
sbb
mov
pop
jl
call
mov
inc
jp
or
adc
xor
(bad)
call
cmp
jge
sbb
cmps
push
jmp
fidivr
mov
je
into
rol
or
xchg
call
jo
pop
and
lock
out
mov
sbb
mov
mov
jmp
and
loope
(bad)
mov
pop
or
adc
sbb
jecxz
add
xor
pop
inc
jl
fidivr
icebp
or
inc
or
(bad)
push
lods
add
adc
fsubr
cmps
and
pop
or
sbb
nop
scas
add
or
ds
sbb
cwde
adc
scas
jg
ins
add
inc
rol
ret
adc
xchg
test
or
and
adc
pop
cdq
mov
cli
push
or
loop
adc
or
push
ja
dec
mov
adc
sbb
inc
mov
or
and
mov
xchg
sub
(bad)
fsubr
daa
mov
clc
adc
fcom
cli
imul
(bad)
iret
mov
cli
dec
adc
sbb
(bad)
int3
jbe
and
mov
call
int3
das
pop
jo
push
add
cmp
xor
jmp
lea
dec
xchg
jp
cmp
jne
jo
push
mov
dec
adc
mov
clc
or
je
inc
cmp
or
jmp
mov
xchg
sub
push
jge
fadd
popa
imul
mov
cld
pusha
inc
(bad)
add
add
cmp
xchg
cli
mov
cmp
jg
mov
xor
add
dec
push
nop
sbb
and
pop
or
xchg
lods
hlt
les
lock
xchg
iret
sar
or
shl
lea
push
lahf
and
inc
mov
loop
out
dec
outs
mov
jp
cmp
mov
adc
mov
daa
inc
mov
mov
sub
sbb
stos
push
daa
push
inc
dec
add
add
dec
rol
jbe
mov
(bad)
fild
or
push
int3
push
test
mov
jo
fdiv
(bad)
aaa
adc
pop
sub
ret
push
test
inc
mov
cmps
mov
cmp
cmp
faddp
adc
sub
leave
sbb
push
es
rol
mov
sbb
adc
cmp
xchg
dec
fldcw
popa
pop
pop
fbstp
movs
call
inc
test
add
ret
jl
jnp
add
add
sbb
lock
mov
push
lods
(bad)
pusha
pop
or
sub
outs
call
shl
cmp
pop
(bad)
cs
adc
mov
or
push
addr16
add
(bad)
jl
inc
sub
sbb
ds
sub
xor
ficomp
aas
pop
loop
add
pop
jmp
fcmovb
add
jne
movs
add
lods
ror
lods
aas
not
cmp
dec
or
jnp
test
push
xor
hlt
mov
test
pop
aam
sub
xchg
(bad)
(bad)
sbb
push
push
xor
mov
or
ror
xchg
dec
fsubr
sar
mov
adc
add
add
xchg
push
lea
push
sbb
mov
mov
(bad)
aas
lods
fwait
inc
mov
(bad)
in
fmul
sbb
sbb
loopne
xor
test
cld
push
add
mov
mov
bnd
push
(bad)
push
pop
mov
add
add
sub
or
rcr
popa
xor
add
sbb
mov
ds
add
jle
das
and
in
fdivr
xor
adc
push
or
add
clc
mov
and
loope
test
call
lar
xchg
shl
pop
ficom
xchg
and
not
shl
je
pop
pop
stc
imul
dec
imul
push
xlat
leave
ins
ret
clc
and
daa
add
xor
test
or
and
or
push
xchg
ins
mov
outs
push
pop
test
push
jbe
pop
add
mov
add
call
clc
cmp
mov
add
test
sbb
(bad)
push
jg
mov
dec
lock
cmp
jl
and
pop
adc
outs
lock
dec
cmp
pop
push
arpl
mov
cmovae
icebp
pop
lock
pop
cmp
jl
jns
cmp
sbb
pushf
ror
jle
neg
jge
(bad)
sti
jg
mov
adc
pop
add
pop
xor
mov
call
iret
mov
adc
repnz
dec
cmp
jne
inc
sub
sub
jmp
jl
rol
mov
push
mov
cmps
push
(bad)
lock
cli
cmp
mov
fnsave
pop
daa
lods
cmp
js
mov
lock
dec
push
in
popa
and
adc
sub
push
mov
add
xor
icebp
sbb
loopne
movhps
mov
dec
jl
es
pop
hlt
cmp
push
cmp
rcl
test
add
mov
mov
sahf
lea
les
icebp
mov
fwait
mov
cmp
push
fs
push
loopne
(bad)
jns
jo
jo
test
ror
pop
dec
int3
push
cli
lea
xchg
jno
or
xor
jmp
or
mov
mov
add
sbb
mov
jne
push
das
add
stos
fisttp
cmp
shr
iret
cmps
jge
dec
add
mov
test
mov
sub
add
gs
fs
stc
ja
fsub
enter
add
add
mov
repnz
ins
outs
bound
adc
add
xchg
dec
popa
jo
loop
or
adc
loopne
in
test
iret
sahf
or
push
leave
dec
dec
fs
pop
or
or
je
ins
inc
or
bound
mov
inc
push
fs
inc
xchg
dec
add
inc
pop
sbb
xor
inc
mov
data16
icebp
push
test
mov
cld
dec
addr16
jns
add
push
jmp
lock
call
and
sbb
inc
dec
push
and
ret
mov
js
sub
inc
xor
mov
pusha
mov
stos
cld
inc
mov
fistp
jne
lods
lea
out
daa
mov
sbb
jl
in
push
js
rol
inc
sub
imul
mov
sub
mov
sub
inc
sub
scas
call
cmp
jbe
cmps
adc
stos
inc
inc
sbb
icebp
inc
cmp
cmp
xor
push
push
les
xor
or
dec
test
aad
xor
adc
mov
push
lock
and
xor
sub
sahf
imul
ins
sbb
or
or
scas
(bad)
loopne
mov
dec
out
jmp
cmp
and
inc
xor
ficomp
adc
or
xlat
inc
pop
add
inc
dec
push
adc
dec
icebp
retf
not
(bad)
jle
add
add
sbb
xor
push
fild
jnp
data16
test
jbe
jne
mov
ja
push
call
xor
add
and
mov
imul
push
pop
mov
lahf
pop
adc
cmps
add
and
call
mov
mov
push
mov
pushw
or
inc
push
mov
jmp
addr16
dec
mov
mov
xchg
outs
sbb
rol
add
mov
cmp
es
or
add
popf
shl
shl
jo
loopne
adc
ficomp
lock
and
push
mov
push
bound
lock
xor
ficom
xchg
inc
jl
xchg
adc
or
dec
cld
rol
lock
dec
jle
jnp
outs
add
mov
clc
es
mov
or
add
xor
and
nop
fist
mov
cdq
movs
xchg
div
push
xchg
push
scas
mov
adc
pusha
fwait
and
and
cmp
jne
shl
sub
mov
loope
jo
scas
retf
aad
add
aam
adc
add
stos
cmp
xor
nop
jge
clc
ja
inc
or
jecxz
mov
and
xchg
pushf
push
out
ss
add
sbb
sub
cli
mov
loopne
je
jb
push
stos
lea
sbb
fld
(bad)
cmp
call
inc
enter
xor
mov
push
lods
jb
fwait
xor
loop
cli
jg
scas
xor
adc
and
mov
inc
lahf
or
loopne
or
mov
sbb
outs
fs
xor
jle
xchg
imul
rol
loopne
ja
and
xchg
mov
outs
int3
or
shr
add
hlt
inc
cdq
add
jne
cmp
cmp
and
add
jg
dec
cli
push
test
sbb
(bad)
loopne
outs
fs
xchg
mov
mov
rcl
add
movs
loop
sub
sbb
and
retf
jg
bound
shl
sbb
fcom
sub
test
cmps
mov
mov
cmp
push
das
jno
xlat
loopne
add
out
outs
outs
hlt
pop
mov
mov
jl
jne
clc
cmps
sbb
into
push
jl
cmp
ror
adc
test
inc
inc
jb
ins
gs
jmp
in
cmpps
in
pushf
dec
outs
arpl
out
mov
cmp
pop
fcmovnu
mov
or
inc
(bad)
pop
xor
ficom
fild
ficomp
mov
add
push
lock
pop
cmp
aad
add
loope
adc
xor
in
add
sbb
pop
mov
push
push
movzx
push
pop
loopne
add
pop
or
(bad)
mov
xor
lea
mov
xor
mov
inc
popa
sti
not
and
repnz
jbe
pushf
add
add
inc
adc
cmc
push
loopne
cmp
(bad)
stc
loop
inc
fs
repz
dec
push
retf
mov
cmp
jbe
pusha
test
imul
push
mov
inc
sbb
sbb
or
pop
js
mov
xor
movs
mov
push
outs
mov
in
stos
cmps
jnp
shl
xchg
cmp
pushf
mov
jge
adc
mov
jecxz
repz
mov
nop
mov
call
push
ins
push
pop
push
pusha
pop
and
std
sbb
pop
mov
or
outs
push
popa
jb
aam
adc
in
bound
fsub
pop
daa
imul
and
or
xor
push
movs
addr16
jae
je
and
js
loopne
stos
or
mov
mov
fdivr
inc
or
xchg
pop
sbb
mov
nop
cmps
jge
push
inc
pop
adc
add
pop
pop
fmul
jle
push
cmp
and
adc
pushf
test
xor
push
push
sbb
(bad)
sbb
or
mov
add
dec
sub
pop
mov
scas
add
or
push
fdivr
sbb
ja
dec
mov
push
scas
cmps
call
or
out
neg
mov
es
das
lds
cmp
inc
add
push
mov
ins
xchg
push
mov
mul
xchg
push
xchg
inc
jne
data16
inc
aas
and
mov
popa
and
fwait
add
inc
push
mov
iret
call
outs
je
xor
inc
inc
dec
pop
sbb
pop
adc
pushf
clc
sbb
jnp
pop
int3
dec
sbb
inc
push
push
dec
(bad)
jb
int3
jle
push
jnp
add
sti
mov
inc
or
mov
cli
std
sbb
or
enter
aam
fcom
pop
inc
push
dec
outs
jns
je
sbb
mov
pop
jl
imul
lock
add
inc
jecxz
outs
or
imul
pop
jl
push
xlat
sbb
push
out
fist
mov
fbld
das
sbb
lahf
retf
ret
add
mov
sbb
into
jle
xor
sti
pop
aad
sub
inc
pop
js
lock
add
mov
scas
dec
push
xlat
cmp
lods
fiadd
movs
push
xor
adc
sahf
or
or
and
push
pop
sbb
cmp
push
push
pop
je
inc
inc
pusha
cmp
add
fcomp
pusha
pusha
adc
jnp
jne
add
inc
loopne
sub
sbb
adc
sbb
(bad)
mov
add
ror
push
sub
loop
aaa
sub
mov
add
pusha
jo
and
sub
or
add
xor
stos
fidiv
in
test
in
je
mov
inc
and
jne
inc
adc
adc
cmp
add
sbb
pop
pop
pop
inc
xor
fdivrp
or
sbb
fisubr
pop
jbe
jmp
or
hlt
mov
arpl
xor
(bad)
std
data16
and
dec
mov
push
jg
dec
xchg
inc
cmp
jle
out
test
mov
pop
or
sbb
imul
pop
push
iret
sbb
add
or
lahf
sbb
fidiv
jl
cwde
add
push
(bad)
cmc
mov
add
mov
mov
push
push
adc
inc
mov
ret
(bad)
in
jle
cmp
jge
mov
jmp
mov
inc
out
clc
mov
mov
out
les
jae
add
jp
push
adc
inc
xor
jmp
fisttp
xor
fiadd
push
js
mov
xchg
(bad)
xor
out
mul
sahf
das
les
xchg
aas
scas
xor
mov
inc
add
and
out
push
or
dec
dec
gs
ins
jne
std
iret
add
pusha
pop
std
add
add
in
cs
das
rcl
or
push
jb
loopne
ss
sbb
jno
stc
test
sbb
pusha
inc
std
sar
shr
push
adc
or
add
mov
cmp
cwde
pop
or
loope
add
sub
mov
adc
xchg
and
out
pusha
push
stos
mov
(bad)
push
push
or
jno
inc
add
xchg
test
arpl
in
call
je
pusha
or
mov
pop
xlat
add
push
xchg
sbb
dec
ror
mov
das
lock
mov
cld
in
jb
cmp
sub
cmps
outs
cmp
fnstsw
sti
jge
fisttp
mov
mov
mov
aaa
pop
adc
sahf
xchg
sub
mov
mov
std
pop
xchg
mov
xor
lea
push
sub
xor
jo
jne
fld
daa
add
add
or
ror
xchg
sub
(bad)
cwde
jno
xor
aaa
cmp
pop
xchg
add
int
fisttp
dec
je
inc
and
sbb
js
call
sbb
daa
pop
jo
hlt
(bad)
daa
lds
imul
push
(bad)
(bad)
mov
mov
cmovbe
cmp
int
cwde
push
scas
hlt
cmp
pop
inc
test
add
pusha
outs
mov
pop
sub
fmul
and
xor
dec
inc
sub
sub
add
inc
xchg
lds
mov
pop
mov
les
pop
sbb
or
and
jge
ja
aaa
mov
jmp
or
and
mov
pop
xor
fimul
pusha
sar
or
adc
xor
leave
ret
test
test
inc
(bad)
mov
das
mov
iret
mov
adc
and
inc
pop
pop
fnsave
icebp
add
push
add
getsec
sub
mov
cld
mov
sbb
cld
and
jecxz
cld
pusha
mov
sub
iret
push
mov
cmps
jne
lods
pushf
inc
add
xchg
adc
adc
or
push
mov
mov
sbb
cmp
rol
inc
dec
jnp
jae
fucomip
imul
push
cmp
rol
sub
push
adc
clc
jg
fmul
and
cli
add
jnp
mov
add
sar
ret
push
xor
int
clc
add
clc
jne
dec
adc
xor
pop
push
cmp
jne
fcomp
and
or
je
jae
mov
jmp
jl
iret
cmp
icebp
aaa
mov
and
clc
shr
and
clc
sbb
mov
fstp
xchg
sbb
ret
push
mov
test
shr
and
mov
cmp
(bad)
ror
and
cld
cmp
jbe
shl
mov
adc
call
sahf
out
xchg
sti
shl
ins
aam
mov
add
adc
cmp
jg
dec
xor
inc
pop
push
pop
mov
add
or
pushf
and
loopne
pusha
xchg
mov
xchg
arpl
sub
mov
lahf
push
sbb
jae
test
lock
pop
mov
in
xchg
scas
adc
xor
adc
nop
in
jg
lock
pop
shl
in
enter
jns
push
jne
es
paddsb
leave
mov
jne
inc
iret
dec
lock
pop
inc
(bad)
cmp
lea
test
inc
add
or
jbe
add
pusha
sub
arpl
adc
mov
jae
mov
stos
sub
inc
dec
outs
add
mov
or
stc
dec
add
daa
in
sub
(bad)
sbb
dec
je
cmp
iret
aas
fsubr
adc
cmp
dec
fdivr
jl
daa
mov
lods
nop
mov
push
icebp
sbb
into
and
pop
jnp
mov
jl
adc
mov
mov
pop
adc
or
add
mov
xor
mov
sub
outs
jg
aas
lods
push
mov
sbb
cmp
or
cmp
adc
mov
xor
mov
ror
mov
in
cwde
ret
add
test
ret
aas
xor
or
lea
nop
dec
cmp
adc
test
add
repnz
push
sahf
call
jne
fsubr
mov
outs
lea
das
mov
mov
(bad)
xchg
iret
popf
test
sbb
xchg
imul
sti
inc
out
test
jbe
iret
std
adc
imul
pop
pop
cmps
sub
js
cli
or
mov
or
or
push
fs
test
mov
mov
jb
xchg
cmp
push
test
and
cs
shl
xchg
adc
pop
xor
xchg
jge
mov
cmc
and
or
xor
inc
je
or
(bad)
sub
je
dec
fmul
push
push
(bad)
mov
mov
sub
pusha
loop
push
mov
mov
enter
imul
popa
add
hlt
int3
das
lock
push
jl
inc
push
mov
clc
movs
not
cmps
cmp
or
inc
add
test
dec
jne
mov
out
in
push
(bad)
mov
inc
cmp
addr16
push
loope
clc
js
add
sbb
or
cmp
ror
push
sti
ret
dec
fldcw
sbb
es
inc
add
cmps
movs
sub
mov
adc
jo
pop
clc
in
and
mov
mov
pop
mov
clc
loope
fsubr
mov
jne
push
inc
fnstcw
sbb
clc
lock
iret
das
push
push
sub
jmp
mov
pusha
shl
cmp
aaa
pop
jnp
push
loopne
cmp
xor
dec
jg
(bad)
adc
mov
sub
adc
sbb
in
aas
sbb
pushf
popf
loop
mov
add
aas
xchg
fdivr
(bad)
mov
push
or
jae
inc
jb
popa
jns
jge
frstor
es
pop
inc
add
movs
fnsave
push
adc
data16
pusha
xlat
movs
sub
shl
into
mov
pop
and
or
cmps
cmps
cli
adc
mov
bound
add
cs
cld
push
xor
lock
dec
outs
pop
and
jns
pop
mov
es
mov
push
jg
sub
dec
and
mov
jb
inc
xchg
out
inc
add
jb
dec
add
add
jns
xor
cld
xlat
pop
jmp
xor
or
jne
movs
fadd
cmp
add
es
adc
sub
mov
mov
rol
add
sar
mov
ret
mov
sub
data16
push
mov
jge
cs
xor
ror
(bad)
cmp
adc
mov
test
xchg
xchg
xor
mov
xchg
fistp
mov
or
das
jmp
sbb
push
xchg
or
jmp
mov
mov
fmul
mov
sub
xor
mov
shl
and
lds
clc
inc
idiv
cmp
push
mov
mov
mov
popf
fucomp
lods
sti
shl
dec
push
mov
and
je
fwait
sub
cmp
cmc
jne
xor
movs
popw
ins
mov
sub
std
outs
jne
mov
mov
dec
push
data16
sar
rcl
add
push
fsub
cwde
stos
sbb
lock
add
mov
push
xchg
inc
popf
inc
jno
add
pop
xlat
cld
or
push
add
js
push
and
es
mov
push
xchg
push
imul
cs
inc
lods
jg
cwde
imul
fs
call
push
and
push
dec
imul
cli
mov
push
or
cs
sub
popa
arpl
add
push
add
add
or
add
xchg
xchg
or
jne
je
(bad)
inc
jne
imul
xor
xchg
sti
lods
mov
movs
iret
cmp
in
inc
sar
cmps
add
pushf
adc
popa
ins
cmp
arpl
inc
mov
xchg
fdiv
dec
dec
shr
dec
fwait
inc
sbb
daa
or
inc
(bad)
sti
outs
lahf
fld
pop
sbb
sbb
and
lods
aad
add
mov
or
inc
outs
arpl
or
ins
jo
enter
xlat
adc
or
inc
sub
adc
arpl
adc
dec
and
adc
outs
mov
cmp
dec
or
lds
arpl
or
inc
(bad)
in
mov
mov
adc
cmps
pop
jne
pop
and
cdq
mov
pop
test
pop
push
loop
mov
mov
add
lds
pop
pop
sar
mov
(bad)
shl
add
ins
pusha
and
or
mov
jmp
pusha
mov
in
mov
inc
cmp
inc
jmp
movzx
and
sbb
add
call
imul
imul
xor
test
cmp
jne
dec
sbb
jmp
jg
ja
inc
cmp
pop
push
inc
mov
call
sbb
dec
cmp
(bad)
lock
js
jg
adc
jne
mov
mov
or
jmp
or
je
add
jmp
add
sub
and
inc
(bad)
sbb
jmp
das
sub
jne
inc
and
das
outs
xchg
adc
jmp
add
imul
add
in
push
xor
fimul
hlt
dec
add
pop
js
mov
or
fisttp
sub
ret
jl
shl
adc
or
add
adc
ja
adc
adc
cmp
inc
push
call
fistp
lea
inc
sbb
in
add
leave
mov
mov
xchg
jno
ficom
fwait
mov
cmp
dec
ins
mov
pop
test
mov
inc
adc
sub
mov
(bad)
loopne
cmps
jb
xor
cmps
push
mov
fs
push
jmp
sbb
push
fucomi
or
popa
push
addps
push
je
cmp
xchg
aam
sbb
jb
scas
jo
push
cmp
clc
mov
mov
push
or
cwde
pop
je
adc
pop
cmp
jae
pop
jmp
dec
push
push
or
dec
pop
xor
jo
add
sub
or
aaa
xchg
popa
jle
inc
sub
enter
cmp
mov
mov
xchg
rol
scas
dec
cmps
out
mul
cmp
add
ins
js
fistp
outs
call
add
mov
push
fwait
adc
xor
and
or
jb
pop
xchg
sbb
push
push
cmp
add
pop
push
shl
xchg
push
out
cdq
test
adc
sub
ret
jp
fwait
les
bound
inc
inc
jg
cmp
aas
or
mov
fistp
xchg
dec
mov
xor
dec
jmp
jmp
jne
data16
sub
or
shr
dec
out
inc
lahf
and
inc
int3
inc
data16
mov
fiadd
pop
cmp
sub
dec
into
mov
mov
and
inc
out
aas
out
pop
cwde
xchg
sbb
inc
add
cmp
stos
hlt
cld
push
add
inc
sbb
shr
inc
adc
mov
mov
mov
cmps
mov
int
adc
add
mov
jo
shl
int
movs
mov
mov
or
pop
lock
or
data16
xor
sbb
js
jmp
inc
sub
mov
dec
cmp
jge
inc
mov
mov
lea
jmp
sbb
popf
dec
inc
or
scas
icebp
inc
mov
xchg
xchg
mov
lea
ins
test
inc
or
adc
mov
jno
fsubr
adc
mov
or
lahf
out
xchg
inc
xor
repnz
dec
ror
test
push
test
sub
(bad)
loope
or
push
mov
cmps
cmp
push
cmp
xor
dec
nop
sub
lock
lahf
xor
retf
push
adc
mov
(bad)
xor
fwait
sbb
pop
(bad)
cmp
out
adc
iret
adc
xchg
pop
in
sub
jmp
in
mov
stos
test
std
sbb
popf
sbb
jmp
or
jl
clc
and
mov
(bad)
mov
fcmove
inc
hlt
cmp
imul
mov
or
rol
in
xchg
push
and
pop
pusha
int3
xor
push
xchg
es
je
sbb
jge
jne
cmp
jmp
sub
int3
cmp
and
mov
mov
sub
enter
push
lock
push
inc
mov
dec
hlt
sub
pop
rcr
adc
jo
mov
je
jl
or
arpl
es
(bad)
adc
or
or
lock
add
lods
jecxz
fs
push
lods
or
push
mov
dec
mov
lahf
mov
into
or
fild
clc
std
sub
and
mov
jnp
and
(bad)
ror
push
loopne
and
out
and
xchg
out
or
sub
inc
sub
mov
or
adc
adc
test
inc
or
inc
cmps
add
inc
pop
loopne
mov
cli
je
jno
hlt
xor
test
movs
jl
popf
retf
test
jmp
mov
call
jo
das
inc
jbe
mov
pop
jnp
loopne
test
adc
jae
mov
inc
xor
out
mov
je
ror
bound
loopne
or
add
(bad)
jmp
jae
jne
add
jno
push
fmul
jp
jmp
adc
cmp
faddp
das
je
test
push
mov
xor
(bad)
jae
(bad)
jmp
js
cmp
jle
xor
loopne
mov
mov
ret
fbstp
adc
lock
out
jnp
push
ror
pop
cmp
jmp
xor
js
jg
add
inc
and
outs
adc
das
jmp
jecxz
sub
fidiv
imul
neg
mov
push
bound
adc
adc
test
je
lea
mov
xor
xor
dec
es
push
ficomp
dec
lahf
test
pushaw
push
fisubr
mov
rol
imul
aaa
and
sbb
inc
mov
and
pop
sbb
xlat
cmp
sbb
add
mov
pop
setne
cmp
xadd
ror
and
ror
mov
pop
dec
xchg
in
push
jl
fdivr
cwde
in
push
fcom
ins
sbb
sbb
xchg
push
or
inc
or
pop
outs
out
add
daa
in
das
or
leave
movs
js
push
xor
mov
jns
lahf
xor
adc
sub
xor
jnp
push
push
pop
xor
fs
pop
nop
or
push
and
imul
pop
fadd
dec
sub
movs
lea
xor
movs
inc
mov
sub
jmp
jle
or
add
in
(bad)
add
inc
in
out
ror
inc
pop
pop
cmp
mov
(bad)
mov
mov
jb
pushf
cmp
lods
inc
fimul
outs
inc
mov
std
fistp
enter
or
xchg
outs
adc
inc
dec
sub
xor
cdq
lock
and
push
pop
xor
or
fist
dec
nop
and
jne
xchg
xor
mov
pop
(bad)
aad
cwde
cmp
cmp
sbb
mov
shr
inc
cmp
fadd
fstp
test
mov
mov
fistp
push
(bad)
inc
add
adc
jg
push
loop
mov
dec
fisttp
dec
fild
xor
push
push
outs
dec
pop
add
sbb
mov
add
fdivr
mov
pop
fldenv
sar
iret
push
rcl
mov
add
shr
add
enter
shr
stos
(bad)
fisub
pop
cmp
mov
pop
dec
ja
dec
xchg
and
sbb
cwde
test
aas
dec
push
xchg
adc
out
or
sbb
adc
inc
(bad)
out
pop
adc
dec
sub
int
fcmovnbe
sbb
call
pop
inc
jle
inc
pushf
add
ss
jne
in
mov
sbb
mov
mov
dec
lods
mov
lds
lods
inc
inc
sub
inc
jno
and
dec
mov
inc
push
jb
in
cmp
scas
sbb
leave
in
adc
add
jne
cmp
dec
sub
push
add
or
scas
js
push
xchg
ret
btc
cmps
pusha
inc
or
data16
call
mov
cmp
jne
add
inc
mov
mov
clc
in
ins
and
es
adc
sbb
push
xor
cmp
add
mov
in
cs
cwd
xor
xchg
shr
pop
adc
sbb
(bad)
jmp
push
cmps
lahf
fnop
and
add
dec
inc
pop
add
shl
mov
lock
mov
loope
xor
mov
call
dec
sub
push
or
add
push
and
xor
or
xchg
je
pop
dec
pop
mov
push
add
sar
sub
or
inc
or
cmps
clc
cmp
pusha
ror
retf
xchg
retf
mov
imul
ins
add
ins
mov
in
in
jge
nop
mov
mov
xor
lods
sub
lods
push
adc
sbb
jo
aaa
mov
repnz
pop
rcl
sbb
test
leave
lea
adc
add
leave
cmp
loopne
sub
mov
and
adc
cld
add
xor
sub
sbb
jmp
bound
adc
shl
and
jmp
daa
mov
adc
in
mov
adc
addr16
fwait
add
jmp
fild
imul
repz
sub
scas
stos
xlat
sub
lock
or
nop
cs
sbb
mov
and
scas
mov
jle
je
dec
sar
mov
mov
and
inc
and
sub
ror
ror
into
mov
push
mov
xchg
jp
push
jne
or
fdiv
cwde
fst
repnz
jne
bound
jne
sbb
int3
or
jmp
mov
cdq
or
adc
fistp
xchg
jne
dec
je
(bad)
push
inc
adc
xor
fdivr
adc
sbb
sub
ret
add
into
fnstsw
es
inc
rol
ja
into
jo
shl
jp
sub
lea
fistp
xchg
ja
pop
nop
push
loopne
cmp
fdivr
shl
pop
fimul
les
cmps
dec
sub
jne
outs
repnz
popa
repnz
add
(bad)
hlt
fst
add
fstp
loopne
rcr
sub
dec
movs
or
add
cmps
mov
inc
sub
test
lods
or
push
js
ds
push
pop
(bad)
hlt
sub
ja
and
mov
fdiv
pop
add
inc
and
or
jb
fsub
mov
cmp
push
dec
adc
cmp
push
fdiv
cwde
push
mov
or
sbb
jle
add
retf
(bad)
mov
inc
push
ret
push
adc
cmps
pop
mov
lods
or
push
mov
in
xchg
and
std
xchg
and
adc
sbb
sub
mov
push
test
xor
ret
and
hlt
or
cmp
push
xchg
mov
xchg
je
mov
jp
pop
test
(bad)
adc
cmp
mov
and
(bad)
in
fndisi(8087
sbb
jae
or
cmp
nop
cmp
jl
ffreep
or
sub
dec
inc
cdq
popa
mov
bound
pop
mov
jg
jmp
mov
add
push
push
jle
xchg
test
enter
sub
mov
sub
in
sti
outs
fild
sub
rcl
push
enter
out
das
dec
sub
xor
frstor
retf
push
sub
iret
out
rol
add
scas
call
add
popf
xor
stos
xchg
mov
push
fisttp
clc
hlt
sub
scas
imul
jmp
sbb
add
adc
test
dec
add
or
(bad)
clc
pop
sbb
(bad)
xchg
push
clc
push
daa
push
jae
jnp
sub
cmp
sub
imul
push
xor
jmp
push
mov
cmp
rcl
sub
or
mov
idiv
(bad)
mov
dec
cmp
pop
push
mov
in
je
push
jl
mov
lock
pop
xor
push
icebp
loopne
xor
push
sbb
ret
(bad)
sbb
pop
or
fld
pop
stos
stos
je
jnp
add
ficom
(bad)
xchg
inc
not
dec
pop
daa
push
push
or
jne
movs
adc
add
ins
or
mov
sahf
(bad)
jl
cdq
ret
mov
add
xchg
fs
test
and
mov
movs
test
push
mov
inc
add
mov
and
fwait
push
(bad)
not
add
xor
ds
jg
lock
(bad)
retf
clc
cmp
je
adc
mov
aas
test
rol
push
jg
dec
fcom
push
fimul
hlt
adc
add
fbstp
pop
retf
loope
mov
mov
jbe
fstp
xor
movs
xor
add
xor
or
push
adc
inc
jl
cmps
arpl
or
into
je
jo
sub
dec
repz
xor
mov
and
push
xor
clc
or
mov
outs
xchg
push
mov
js
ja
dec
inc
jne
cmps
clc
lea
inc
test
push
and
or
push
xlat
or
mov
cmp
push
add
push
leave
push
mov
aad
add
sbb
adc
cmp
cmp
test
or
cdq
pop
movs
adc
icebp
adc
and
dec
sub
push
test
cld
inc
shl
cli
mov
lock
call
xor
xchg
jb
add
and
jo
mov
inc
sub
push
pop
push
cmps
add
pop
std
xor
fadd
or
add
mov
sub
pop
pop
mov
mov
call
xor
enter
mov
inc
js
and
lock
mov
adc
ret
mov
iret
or
sub
das
imul
sbb
xchg
jecxz
hlt
mov
retf
xor
cmp
(bad)
adc
cmp
mov
pop
addr16
cmps
push
rol
adc
lea
fistp
inc
(bad)
in
add
adc
pop
mov
push
imul
je
dec
or
retf
retf
add
mov
nop
or
lods
mov
fstp
aaa
add
adc
mov
push
stc
imul
dec
daa
adc
pop
aas
push
sbb
mov
test
mov
in
cld
xor
test
jne
cmp
call
stos
sub
sbb
call
push
mov
xor
or
adc
push
jmp
mov
adc
hlt
push
or
ret
xlat
cmp
sub
clc
inc
dec
rcl
adc
and
jo
pushf
in
jge
cld
push
shr
mov
adc
mov
call
and
fstp
cmp
ja
mov
xchg
inc
dec
sbb
icebp
mov
sbb
cdq
jl
xor
adc
inc
rol
ret
push
leave
dec
jmp
push
or
pop
xchg
mov
scas
pusha
js
loope
clc
(bad)
xor
jmp
pop
adc
add
and
scas
shl
cmp
hlt
adc
fistp
sub
and
test
jne
mov
pop
sar
jmp
adc
movlps
push
mov
clc
inc
dec
jne
jmp
clc
and
jo
xchg
add
sub
xchg
scas
nop
or
lods
int
or
inc
hlt
push
pop
dec
xor
mov
shl
or
test
ficomp
pop
(bad)
or
sub
leave
jle
into
or
ficom
inc
mov
shr
jge
mov
add
push
dec
dec
dec
jg
into
jb
sbb
loope
fwait
jae
sbb
loopne
iret
ret
mov
xchg
iret
jnp
sub
push
int3
add
add
inc
ret
clc
or
jp
adc
imul
in
in
sbb
push
sub
or
xchg
imul
lahf
shr
jo
dec
and
inc
test
mov
mov
dec
lods
push
mov
daa
mov
cmp
jne
movs
adc
mov
fsubr
cmp
pop
mov
push
jle
add
fdiv
dec
loope
cmc
xor
add
jecxz
and
fwait
clc
mov
mov
jmp
test
fiadd
dec
jne
add
push
sti
les
inc
ins
push
xchg
fisubr
add
es
adc
lock
pop
or
adc
xchg
mov
sbb
dec
sbb
jns
push
out
mov
mov
ret
mov
and
cmp
fild
rdmsr
xor
mov
in
repnz
cmp
aam
mov
inc
ds
mov
ror
dec
or
in
cdq
jo
fcomp
inc
mov
fidivr
into
ret
fisub
add
or
loop
sbb
add
(bad)
push
or
fiadd
hlt
mov
nop
sbb
jge
jl
mov
add
icebp
push
jbe
(bad)
rol
and
rcl
jl
test
mov
pusha
test
imul
mov
pop
xor
cwde
or
or
add
jmp
xchg
dec
dec
in
jne
jmp
shr
cmp
invlpg
pushf
pop
clc
mov
lea
ja
ins
cmp
lods
pop
sbb
ja
or
dec
ret
sbb
xor
adc
sbb
dec
lock
mov
and
mov
gs
sub
loope
jg
or
mov
pop
sbb
in
nop
dec
xchg
jo
sbb
fcmovnb
sub
add
sbb
shr
sbb
cmp
dec
sbb
dec
test
inc
dec
or
pop
jb
or
dec
dec
mov
je
mov
aam
mov
jo
and
and
or
mov
nop
mov
neg
add
outs
rol
(bad)
cmp
ds
into
arpl
pusha
ret
push
mov
push
or
std
imul
jmp
inc
xchg
dec
push
add
adc
(bad)
mov
rol
mov
mov
les
fdivrp
test
mov
mov
cmp
(bad)
hlt
cmp
inc
inc
xchg
idiv
outs
je
or
jne
addr16
add
add
or
fdecstp
add
sub
or
cmp
jecxz
dec
mov
in
jo
push
and
push
adc
ins
sub
data16
pushw
dec
or
hlt
popa
mov
sbb
int3
push
(bad)
test
adc
xor
push
lods
cmps
call
mov
push
mov
add
nop
sbb
(bad)
mov
imul
inc
or
or
push
xchg
iret
xor
xchg
xor
inc
aas
inc
mov
jmp
xchg
test
and
js
mov
sub
pop
sbb
mov
sbb
sbb
push
imul
xchg
test
(bad)
aas
mov
cmp
cmps
dec
je
sub
loopne
out
add
add
adc
add
or
jmp
daa
adc
mov
adc
or
or
or
xchg
data16
lock
scas
(bad)
xor
mov
aam
mov
push
cmp
gs
add
mov
cld
add
(bad)
jo
push
gs
pusha
nop
and
pop
inc
or
(bad)
cli
pop
test
xor
inc
sbb
sbb
add
imul
ret
repz
sub
jb
sub
je
push
and
dec
or
sbb
dec
dec
dec
sti
ja
push
or
mov
adc
dec
adc
inc
shl
dec
xlat
shl
inc
outs
xchg
outs
cmp
xlat
mov
popa
dec
fnstsw
or
add
ret
out
push
push
fmul
fs
mov
and
push
ja
imul
clc
push
mov
sub
popf
inc
push
sbb
adc
and
test
pop
adc
jecxz
xchg
jmp
rcr
retf
lods
adc
inc
jecxz
aad
and
loop
fild
popa
and
cs
mov
xchg
sbb
jne
and
in
jmp
arpl
inc
lock
daa
hlt
push
mov
jae
or
xor
outs
and
fbstp
or
cmp
aas
icebp
ficom
jae
xor
sub
mov
rol
sbb
add
das
sar
cmp
ret
sub
cmp
pushf
mov
cli
ret
in
jmp
(bad)
mov
push
inc
or
jecxz
call
push
push
mov
mov
mul
adc
(bad)
mov
cmp
sub
out
ficomp
cmp
push
popf
adc
xchg
clc
movs
and
sbb
inc
push
cmp
sub
in
rcr
jne
fisubr
loopne
add
ret
jmp
sbb
and
or
adc
add
xor
or
popf
jo
cmp
frstor
jo
int
and
mul
sbb
mov
jl
xchg
xor
ja
out
xchg
fs
xlat
pop
xlat
sub
mov
xchg
or
je
rcl
aas
int
push
(bad)
fisttp
pop
jmp
jne
cmp
add
call
inc
icebp
ja
sub
hlt
loopne
sbb
mov
or
or
xchg
dec
or
imul
and
outs
add
popa
add
pop
sub
or
and
int3
add
add
jnp
or
push
jo
or
add
pusha
retf
pop
sub
jo
xchg
push
xchg
sub
mov
dec
repz
iret
jnp
sbb
out
cmp
in
sbb
mov
sbb
mov
push
and
pop
mov
dec
cmp
mov
sbb
push
arpl
ins
dec
ins
cmp
mov
pop
or
adc
lock
or
add
mov
icebp
dec
icebp
ret
stos
bswap
ret
mov
or
adc
push
sub
daa
loopne
icebp
cli
cwde
pop
or
xor
push
xlat
add
add
daa
lea
outs
test
iret
loopne
inc
ret
test
push
xor
xchg
ror
mov
retf
sbb
mov
and
or
sbb
or
lds
dec
pop
ds
int3
mov
imul
mov
mov
pop
hlt
mov
push
not
add
sub
sar
push
add
mov
retf
mov
out
add
add
mov
(bad)
and
jmp
sbb
jge
sbb
stc
or
lods
aas
fisub
test
fimul
push
imul
leave
cmp
add
adc
adc
and
loope
mov
arpl
cmp
(bad)
sub
mov
mov
sub
enter
mov
pop
dec
scas
loope
xor
adc
push
(bad)
sub
xchg
ret
and
adc
inc
xor
int3
xor
xchg
sub
gs
and
mov
mov
mov
mov
and
mov
and
retf
jg
or
dec
movs
xor
xchg
sbb
popa
sbb
dec
and
fbstp
or
cwd
sbb
push
or
mov
ret
mov
inc
and
push
adc
or
into
jo
sbb
mov
out
sbb
push
and
(bad)
ds
out
pop
ret
test
jae
adc
inc
sbb
add
adc
sbb
loopne
lea
jp
xor
arpl
js
inc
loopne
push
loope
ds
sahf
inc
cmp
adc
or
movzx
mov
jmp
mov
ins
test
jl
mov
mov
mov
mov
cmp
xor
jmp
inc
sti
dec
lock
inc
xchg
jg
and
ret
and
dec
sbb
add
enter
dec
mov
and
movs
cmp
adc
or
pop
inc
xor
or
ret
popa
das
jle
pushf
sahf
inc
idiv
std
mov
jle
mov
shl
push
pop
add
jne
jmp
or
loopne
mov
daa
int3
cmp
sub
cmp
sub
fisttp
mov
and
adc
rol
sbb
inc
icebp
inc
push
shl
sub
shl
sbb
(bad)
mov
pop
js
sbb
popf
ret
lahf
or
lock
sub
and
cmp
push
sbb
test
and
(bad)
mov
data16
(bad)
fcomp
pop
push
add
mov
gs
xchg
scas
or
inc
and
popf
loopne
add
mov
adc
aad
and
adc
lods
add
addr16
pushf
sar
mov
out
sub
mov
pop
sbb
dec
pop
test
cmp
sbb
(bad)
dec
pop
mov
cmp
pushf
jbe
(bad)
sub
pop
aam
cmp
and
mov
sub
push
cmp
lss
loop
add
shl
inc
jne
das
xor
sbb
jmp
inc
dec
jne
cmp
jecxz
and
pop
stos
xor
aam
pop
dec
clc
and
sub
mov
push
iret
out
in
rcl
xor
daa
jbe
or
dec
xor
pop
pop
push
(bad)
adc
fbld
cmp
push
sub
das
imul
mov
adc
movs
adc
test
mov
(bad)
ror
xor
rol
xor
in
mov
mov
(bad)
enter
mov
jge
sar
pop
pop
mov
aaa
mov
ins
dec
in
cmp
fs
arpl
out
push
loopne
gs
hlt
daa
mov
sub
call
daa
sub
push
add
enter
push
mov
pop
dec
or
mov
inc
inc
add
imul
stos
and
pop
and
into
jne
jecxz
sub
gs
retf
xor
jge
add
xchg
inc
lock
xor
push
mov
jo
je
shr
les
add
lods
je
mov
sbb
out
je
les
adc
mov
push
je
sub
outs
add
add
rol
shl
adc
or
mov
inc
sbb
pop
sbb
lahf
je
jno
mov
aaa
jmp
mov
inc
inc
dec
jne
jmp
adc
mov
sub
add
loop
popa
cmc
jne
adc
add
pusha
inc
adc
push
add
push
add
cmps
push
out
adc
jo
sbb
jno
cmps
fwait
movs
sub
or
inc
lahf
out
inc
or
outs
in
xchg
mov
mov
mov
adc
or
inc
outs
adc
add
call
inc
ret
shl
xchg
jl
xchg
shl
mov
mov
add
cmp
lds
add
loope
jg
lods
push
int3
das
cli
push
adc
push
dec
add
jge
iret
shr
push
adc
or
xor
pop
idiv
sub
jl
push
mov
mov
xor
add
dec
push
pop
inc
fadd
add
push
jl
cs
add
jmp
push
dec
add
push
inc
push
cdq
(bad)
dec
(bad)
add
push
push
inc
js
outs
jae
outs
outs
dec
imul
ins
movs
push
inc
jb
popa
sub
add
repnz
gs
data16
pop
xor
add
icebp
pop
inc
gs
jb
jns
in
lods
sbb
jmp
adc
add
add
outs
fadd
gs
popa
bound
push
adc
or
daa
call
popa
jae
test
int3
test
inc
imul
dec
mov
add
push
clc
iret
rcl
add
sbb
gs
outs
jbe
inc
outs
and
xor
and
outs
je
add
push
arpl
ins
popa
loope
sti
and
cs
dec
inc
adc
mov
or
adc
js
mov
jae
mov
pop
fcomp
jbe
push
add
or
cmp
fsin
sbb
mov
inc
xchg
sbb
push
test
sbb
fild
add
mov
les
sbb
(bad)
or
xor
outs
cmp
or
adc
fimul
or
xor
pop
xchg
add
sti
jge
mov
and
daa
xor
sahf
jle
adc
xor
(bad)
fisttp
push
inc
lds
mov
cmp
jl
clc
push
or
adc
dec
call
jle
dec
cmp
jl
xchg
into
cmp
jne
mov
fld
jmp
push
pop
(bad)
add
pop
in
inc
pop
or
sti
pop
and
push
ds
pop
cmp
jne
aaa
and
ins
cmp
add
pop
cmp
jne
adc
push
out
mov
ret
mov
pop
icebp
inc
push
loop
sbb
fimul
sbb
mov
lea
movs
(bad)
pop
inc
test
inc
movs
das
xor
and
adc
and
ret
jmp
lock
int
(bad)
div
fisub
push
fwait
nop
cwde
adc
cmp
pop
inc
pop
push
push
shl
out
icebp
mov
das
test
cli
cmp
in
ror
loop
adc
xchg
sbb
movs
fimul
or
add
cs
je
ja
sub
dec
(bad)
mov
je
mov
mov
pop
arpl
call
mov
call
add
dec
(bad)
or
add
or
cmp
push
rol
lods
push
mov
sbb
pop
push
add
in
data16
push
cmp
mov
add
add
aam
sbb
jae
mov
in
cld
inc
retf
rol
sti
nop
push
push
add
(bad)
pop
fwait
push
pop
loopne
pop
mov
(bad)
and
add
mov
pop
mov
inc
fadd
cmc
or
sbb
cmp
test
in
fnstsw
in
stc
(bad)
fdivr
shl
rcr
cld
mov
add
jmp
inc
jp
vmptrst
inc
add
scas
fisttp
adc
sub
repz
fidivr
mov
push
or
popa
inc
push
clc
inc
adc
adc
pop
rcr
cmp
mov
jmp
pop
and
fs
xor
and
add
xor
cmp
mov
je
test
mov
xlat
inc
mov
scas
fsub
mov
cmps
clc
inc
or
xchg
adc
mov
or
xor
arpl
lods
das
xor
fistp
push
fimul
ins
les
ja
loope
push
cmp
sbb
(bad)
adc
pop
push
mov
sahf
ins
out
mov
jno
(bad)
sbb
mov
jp
jmp
aas
popf
sbb
jne
and
jge
in
xor
inc
scas
adc
loope
mov
jmp
ins
mov
jmp
pop
xor
xor
cli
mov
sub
xchg
pusha
sub
or
out
bound
mov
aas
cmp
mov
add
rcr
add
and
push
aaa
jge
mul
es
cmp
call
and
or
mov
(bad)
mov
mov
dec
jecxz
pop
push
lock
bound
ins
or
push
and
sbb
cmps
mov
pop
nop
xor
aas
add
pop
jns
ds
or
test
adc
inc
or
inc
adc
jns
cmps
retf
adc
push
sbb
mov
ret
ds
mov
push
pop
movs
mov
(bad)
push
sbb
pop
add
shl
add
xor
ror
les
rol
mov
push
cmp
push
faddp
ret
jo
push
sbb
pop
or
xchg
ror
and
inc
inc
and
adc
scas
mov
lahf
xchg
xchg
or
ja
cmp
repnz
hlt
pop
mov
ja
push
fist
(bad)
xchg
fisubr
mov
push
mov
(bad)
clc
dec
add
adc
jo
cmp
outs
sub
stos
in
add
mul
sbb
mov
add
in
sub
pusha
inc
adc
(bad)
fcom
dec
fs
sub
and
js
mov
push
(bad)
sbb
in
xchg
test
das
pop
sub
jge
sbb
neg
mov
cmp
in
and
mov
hlt
ja
stc
or
cmp
movs
movs
movs
movs
mov
mov
mov
cmc
and
push
add
or
pushw
or
xor
push
or
(bad)
cld
push
adc
xor
sbb
ins
dec
jp
adc
lea
mov
push
jmp
fmul
dec
push
popf
aas
popa
xor
adc
push
push
and
fistp
or
outs
fld
lods
mov
sub
std
ror
push
(bad)
inc
xor
rol
pop
add
mov
test
aaa
jmp
ja
jl
or
xor
iret
mov
mov
(bad)
js
push
movzx
or
dec
xchg
pop
into
stc
dec
jge
je
mov
iret
nop
push
add
out
outs
ret
sbb
adc
and
lock
jne
test
push
or
iret
pop
aam
xor
cmp
leave
mov
lods
scas
xor
xor
mov
movs
add
inc
or
sbb
mov
mul
push
adc
push
adc
push
cmps
test
add
pop
ret
mov
outs
mov
lea
stos
add
xor
daa
push
jae
xchg
sar
or
idiv
xlat
ins
int3
aaa
xor
aaa
cmp
lods
repnz
(bad)
inc
inc
add
add
adc
mov
inc
aaa
adc
sar
xchg
xchg
adc
lods
cmp
xchg
add
mov
out
xlat
push
or
pop
cwde
cmp
sub
and
ret
pop
mov
mov
loopne
loope
jno
xor
or
jge
sub
movs
adc
sbb
adc
inc
retf
cmp
shr
cmp
adc
jno
jmp
sub
dec
dec
sub
cmp
lea
sbb
push
xor
push
mov
sbb
arpl
shl
sub
and
lea
sbb
je
into
push
mov
sbb
shl
mov
pop
push
ret
clc
mov
sbb
add
dec
mov
aam
mov
mov
sub
and
jo
mov
retf
fisub
loopne
and
sahf
jmp
push
add
or
dec
xchg
(bad)
adc
aas
push
loope
mov
inc
sbb
inc
ret
sub
push
sbb
sbb
sbb
dec
ins
xor
hlt
int3
movs
dec
xchg
and
inc
out
and
out
mov
loopne
add
or
fstp
cmp
sbb
aad
pop
pop
push
mov
pusha
(bad)
fild
pop
cmps
hlt
or
daa
pusha
jo
cs
inc
and
sub
and
call
rol
and
sbb
and
popa
jmp
sti
push
inc
imul
loopne
jmp
js
jnp
xor
mov
mov
jb
call
and
sub
sti
sub
xchg
push
idiv
inc
(bad)
pusha
adc
shl
in
ret
push
scas
arpl
out
test
and
push
sbb
or
div
sbb
jbe
mov
dec
add
mov
jo
inc
daa
cs
xchg
lock
push
add
lock
mov
ja
push
arpl
add
sub
inc
cwde
mov
lahf
xchg
and
out
add
sar
loopne
dec
je
add
test
cli
jmp
cmp
inc
hlt
mov
push
cmp
push
arpl
out
add
das
pusha
add
sub
add
popa
ja
sbb
call
pop
pop
mov
sbb
xchg
sub
cmp
push
adc
adc
ja
(bad)
dec
push
add
(bad)
ja
mov
adc
adc
loopne
loopne
enter
push
cli
adc
dec
mov
jno
inc
sbb
pop
add
jno
mov
rcl
or
ja
mov
and
sub
sub
push
iret
mov
push
das
(bad)
movs
jl
leave
mov
addr16
inc
retf
mov
adc
fs
sub
lods
add
cmp
call
clc
in
arpl
and
sbb
out
mov
test
xchg
mov
shl
std
jmp
jo
and
cmps
je
fchs
add
add
arpl
cmp
add
mov
xor
mov
fsub
aam
cmc
loopne
jo
fcom
add
es
jne
fdiv
ins
push
sar
cmp
mov
adc
loope
ficom
scas
cmps
in
in
pushf
bound
nop
dec
mov
jl
inc
(bad)
cmp
int3
shl
pop
mov
push
loop
mov
mov
js
and
adc
inc
dec
jne
mov
sbb
lods
loopne
adc
push
dec
jo
imul
je
mov
dec
add
ss
or
ins
outs
jb
arpl
pop
js
popf
add
pushf
or
add
gs
or
scas
mov
and
jp
push
push
popa
ins
cmp
(bad)
gs
mov
push
fist
add
mov
cld
ja
mov
add
dec
ins
fs
outs
fs
dec
and
dec
gs
mov
or
add
cmp
imul
add
movq
jl
adc
pop
push
mov
fstp
add
add
daa
lds
and
ds
repz
sbb
push
xor
adc
cmps
ds
push
int
push
dec
mov
mov
rol
inc
sbb
lods
int3
sti
loopne
sbb
int
and
dec
popa
jo
push
fisub
adc
add
dec
fisub
jl
push
popa
addr16
push
int
mov
or
xchg
in
aaa
add
adc
enter
icebp
movsx
push
mov
jno
push
add
push
or
or
or
inc
daa
sub
sub
ins
or
pop
and
inc
arpl
sbb
loop
out
retf
jl
fidivr
movs
jne
add
add
je
push
mov
fs
dec
or
adc
cmc
push
in
(bad)
or
push
jae
push
push
outs
jae
popa
loopne
arpl
cmps
cmp
sbb
xor
cmp
shl
jns
pop
leave
push
adc
xchg
fisubr
add
jbe
lds
pop
in
dec
loope
mov
pop
or
fist
sti
cmp
inc
add
sub
inc
xchg
mov
mov
mov
(bad)
nop
push
xchg
pop
sar
loope
push
fwait
popa
push
stos
cs
add
mov
xor
lea
adc
imul
inc
out
push
int
inc
inc
cwde
add
and
inc
xchg
mov
or
sbb
pop
movs
sub
xlat
jmp
push
jg
aaa
ret
xor
add
adc
aad
ss
or
data16
push
sub
sub
cmp
dec
add
add
add
adc
pop
cmp
mov
(bad)
(bad)
pop
pop
loope
add
mov
sub
mov
scas
mov
sub
adc
add
push
mov
push
dec
je
mov
or
adc
jge
int
shl
sbb
add
mov
mov
out
xchg
lods
int3
push
ins
in
aaa
test
dec
je
aaa
int
hlt
mov
sbb
or
dec
fadd
imul
add
inc
or
add
cmp
fisttp
mov
mov
mov
mov
mov
adc
jne
mov
or
adc
xlat
movq
and
mov
sub
push
or
out
fstp
jne
fisttp
pop
data16
ja
sbb
movzx
cld
in
fistp
or
imul
shl
pushf
mov
jmp
(bad)
jbe
jle
or
push
test
add
(bad)
(bad)
dec
push
stos
cmp
jl
mov
lahf
sbb
push
in
mov
stos
adc
mov
mov
and
ret
add
cmp
(bad)
je
adc
jmp
inc
test
outs
(bad)
inc
dec
retf
and
mov
neg
movs
sbb
inc
xor
cmp
imul
and
xchg
lea
in
push
js
or
mov
mov
(bad)
mov
cmp
jae
test
sub
xor
sbb
out
sub
std
aaa
sub
jl
inc
js
ret
aad
sub
push
in
mov
push
shl
aaa
in
inc
sub
cmp
dec
jmp
and
mov
and
jo
push
rol
cmps
inc
inc
and
mov
cdq
and
idiv
int3
mov
pop
add
jmp
movs
in
(bad)
adc
adc
aas
xchg
fwait
jl
xor
cmp
bound
inc
mov
sub
ja
push
inc
(bad)
repnz
mov
pop
xchg
nop
and
add
mov
inc
in
xchg
bound
sbb
(bad)
sub
bnd
(bad)
and
pop
fisttp
dec
adc
add
and
add
ss
sbb
or
sbb
add
cli
sbb
fcmovbe
arpl
imul
sub
lahf
mov
and
inc
or
inc
fist
cli
add
ror
mov
adc
add
je
pop
call
loope
sar
mov
clc
xchg
inc
sbb
dec
sub
mov
in
pop
adc
sbb
cmp
aaa
dec
pop
or
enter
inc
aad
push
sahf
xchg
mov
inc
jnp
pusha
mov
sub
(bad)
pusha
cmps
xchg
pop
cli
out
lock
(bad)
neg
cmp
cmp
rol
loopne
add
cmp
and
call
shl
unpckhps
and
or
js
jle
add
data16
push
dec
and
lods
and
jmp
test
jnp
aaa
push
aad
add
pop
(bad)
mov
push
stos
arpl
repnz
adc
mov
popf
or
inc
clc
mov
cmp
or
add
jbe
mov
int3
pusha
dec
fisttp
in
mov
cmp
and
mov
call
inc
adc
ror
cmp
js
sar
mov
add
aas
jp
inc
int3
or
push
loope
pop
or
fimul
or
xchg
cmp
adc
mov
add
xor
mov
adc
add
mov
daa
dec
sub
jo
jmp
shl
and
pop
inc
pop
and
std
in
jo
out
push
add
add
or
cwde
icebp
cmc
sub
push
or
ret
push
out
das
or
iret
shr
push
int3
jge
adc
or
add
add
or
enter
in
jge
cld
or
mov
popa
dec
mov
add
cmp
dec
sub
lea
std
mov
setno
push
inc
mov
fisttp
or
mov
sbb
or
xor
sbb
pop
rol
fs
in
das
rcl
and
and
mov
pop
mov
test
dec
repnz
push
and
mov
or
inc
and
jl
ins
repnz
adc
pushf
adc
cli
xchg
cld
sub
jle
sbb
add
and
sub
push
add
inc
dec
jne
das
test
dec
mov
or
paddb
adc
inc
clc
cmp
mov
add
sbb
rol
test
dec
jne
loopne
inc
sti
xor
enter
cld
pop
(bad)
lock
adc
je
xor
fisttp
or
cwde
push
sbb
mov
ja
cmc
jl
mov
jo
lods
cmps
test
test
xchg
into
fstp
mov
dec
test
movs
sbb
push
cli
push
inc
mov
je
test
dec
cmp
or
sub
clc
mov
inc
and
pop
call
push
jbe
adc
mov
sub
jnp
push
hlt
xchg
iret
dec
cmp
jg
sub
es
in
add
test
(bad)
dec
or
cmp
jmp
adc
retf
add
dec
mov
test
je
inc
aas
cmp
ror
pop
je
push
jmp
add
adc
xchg
push
sub
lea
adc
inc
sub
cmp
lea
stc
in
xor
mul
cs
sub
clc
enter
test
xor
lea
movs
add
xchg
ins
sub
push
mov
xchg
dec
jo
test
ja
mov
loopne
adc
or
mov
(bad)
mov
xlat
gs
jmp
inc
adc
mov
jnp
add
jg
int
test
jne
jle
mov
xchg
inc
push
fnstenv
imul
aaa
sub
lds
cmp
mov
stc
sbb
and
shl
mov
mov
adc
inc
xor
push
and
cmp
xchg
rcl
cmp
shl
add
sub
or
xor
sbb
jae
cmp
inc
test
push
enter
and
or
ja
dec
sub
push
pop
xor
(bad)
or
xor
(bad)
stos
rol
mov
pusha
sbb
mov
cmp
pop
dec
adc
dec
aad
add
or
pop
out
ja
pusha
fadd
cld
in
jecxz
or
int3
test
ja
sti
or
and
jecxz
int3
sub
aas
in
inc
dec
mov
inc
push
and
int3
add
dec
sub
outs
or
adc
jmp
or
ret
sub
outs
scas
mov
adc
ss
sbb
sub
jno
loope
pusha
mov
mov
je
push
jbe
pop
jmp
enter
(bad)
cli
int
ss
inc
sub
inc
mov
je
adc
cmp
les
popa
fild
je
or
jg
(bad)
int3
push
pop
pop
or
sub
cmp
jge
mov
inc
je
sub
and
cwde
gs
adc
add
sbb
mov
sub
mov
pop
xor
sbb
(bad)
sub
lea
bound
nop
xlat
cmp
inc
lahf
sbb
inc
cwde
lock
cdq
inc
sub
mov
add
adc
add
loopne
mov
shr
js
add
ss
xchg
add
dec
jne
call
popa
push
stos
xor
stos
xor
jg
movzx
jle
ret
jl
test
push
cmp
fld
or
pop
add
adc
pop
pop
jmp
pop
clc
mov
call
pop
ja
and
(bad)
test
clc
aam
ret
add
call
add
adc
aad
loopne
and
loopne
sub
mov
mov
pop
mov
and
jnp
jno
xor
inc
es
lea
or
in
bound
call
sub
gs
and
imul
xchg
jmp
out
sbb
sub
fstp
out
rcl
mov
shl
sar
adc
or
ror
ret
xor
mov
xchg
add
mov
xor
pop
outs
adc
or
aad
stos
rol
test
aad
xor
fmul
sbb
jae
ins
je
and
aad
and
adc
paddsb
fsubr
std
add
inc
inc
add
fadd
(bad)
mov
adc
adc
mov
add
div
xchg
xor
div
fs
aaa
push
shl
adc
rcl
lahf
imul
or
pop
cmp
out
out
xor
adc
jle
jnp
aaa
mov
imul
and
push
enter
pop
(bad)
push
(bad)
mov
xchg
xor
sbb
push
loopne
jl
cmp
jne
sub
inc
inc
push
and
sbb
push
sbb
icebp
push
xor
pop
push
cdq
sub
icebp
out
call
push
dec
je
jmp
mov
in
cmp
jmp
lahf
int
pop
sub
sti
int
inc
push
and
aam
pop
or
pop
sbb
jmp
adc
bound
(bad)
fild
scas
lds
daa
js
pusha
cmc
lahf
or
or
js
mov
cmp
sub
cmp
std
int3
mov
pop
mov
arpl
lods
pusha
or
mov
scas
push
cld
mov
fisttp
int3
es
imul
xor
repz
jl
xchg
ret
push
pop
out
lock
je
cli
pop
stos
pop
call
adc
sbb
enter
data16
int3
mov
mov
dec
sub
and
push
and
or
inc
sbb
lahf
imul
dec
std
adc
hlt
mov
push
clc
push
in
adc
cmps
and
jne
xor
or
push
pop
inc
mov
inc
pop
sahf
outs
mov
add
sub
mov
repnz
cmp
lock
pop
inc
and
(bad)
push
mov
sub
pop
(bad)
pop
mov
push
test
sub
push
xor
hlt
adc
inc
out
cmps
push
sub
mov
mov
lods
clc
dec
dec
je
jbe
push
xchg
adc
mov
inc
inc
xor
or
and
test
xor
adc
pop
data16
push
cld
or
or
movs
xchg
aaa
pop
cmp
lods
aas
sar
(bad)
mov
and
mov
sbb
jae
(bad)
push
mov
ss
jge
cmp
jb
pop
mov
nop
jns
mov
sbb
scas
dec
fcom
adc
cld
stos
hlt
(bad)
movs
cmps
mov
cmp
jge
and
or
cmps
cmps
xchg
sbb
ret
ins
cmps
aam
shl
cmps
nop
outs
sub
push
xor
pop
or
je
and
adc
imul
and
loop
mov
out
and
inc
sar
push
aaa
jno
ja
fidivr
sti
mov
xor
and
xchg
mov
femms
je
sbb
div
cmp
je
pop
mov
push
jbe
ret
push
dec
sub
inc
rcr
add
cmp
inc
mov
push
pusha
jo
imul
(bad)
in
jge
sub
sti
call
or
mov
cmp
out
mov
shl
mov
imul
xor
lock
pop
push
or
add
(bad)
mov
in
psubsw
cmp
jl
or
jle
lea
mov
push
add
pop
inc
dec
cmp
enter
sti
sahf
push
pushf
and
mov
icebp
lea
sbb
imul
nop
sbb
daa
mov
mov
dec
cld
jp
add
fdivrp
loopne
inc
and
inc
(bad)
lods
or
adc
pusha
cmc
sub
pop
jmp
js
pop
inc
mov
mov
repnz
mov
in
xchg
dec
scas
mov
int3
mov
add
shl
add
mov
movs
test
mov
out
or
rcr
ret
push
sbb
push
(bad)
loop
mov
lods
dec
rcr
add
fadd
fadd
push
mov
leave
inc
clc
in
sbb
retf
lods
xor
clc
mov
xor
mov
add
jo
sbb
rol
test
addr16
push
out
xor
sti
push
jle
sbb
jle
cwde
add
cmp
lock
stos
ret
adc
jmp
lock
push
data16
fsub
call
test
or
sub
jne
push
or
add
add
jl
or
push
mov
inc
sbb
and
sbb
adc
popa
add
dec
and
retf
or
add
movs
or
cmp
sub
sub
or
sub
xchg
out
jl
mov
add
sub
jae
xchg
or
lods
xor
mov
mov
pop
add
sbb
rol
stos
push
fst
stc
xor
outs
xor
outs
je
inc
fbstp
mov
push
jb
retf
dec
mov
popa
inc
cmps
add
sub
sbb
jge
dec
add
js
imul
jne
dec
jmp
popa
add
dec
retf
xchg
mov
mov
and
push
sub
je
and
inc
or
aam
ret
sub
in
fadd
aas
or
clc
les
jmp
xchg
fsub
xchg
rcr
sub
fwait
test
ret
jbe
mov
sub
mov
iret
popa
inc
adc
fadd
push
leave
adc
pop
call
jne
dec
imul
mov
dec
sbb
adc
pushf
nop
stos
xor
test
imul
out
or
push
adc
je
add
jecxz
lds
and
push
inc
and
dec
sub
adc
popa
das
std
xor
or
inc
xlat
movs
add
fwait
cwde
push
rcr
sub
or
xchg
jle
es
sub
je
mov
dec
fdiv
mov
add
mov
bound
or
sbb
aad
push
stos
shl
rol
push
rcl
inc
or
push
xor
out
jae
mov
movs
sbb
dec
in
sub
jb
adc
mov
adc
inc
stos
lahf
nop
sbb
sub
and
hlt
pop
mov
xchg
push
mov
pop
ins
inc
inc
add
mov
movs
adc
loopne
mov
les
call
pop
jmp
ret
xor
xor
gs
rol
and
push
dec
or
loope
(bad)
and
push
pop
fcmovbe
lea
pop
jg
xchg
test
add
or
push
(bad)
das
out
or
xchg
dec
xor
and
fld
or
jne
mov
(bad)
lea
jo
fimul
mov
ss
stos
test
fadd
jne
mov
and
or
in
mov
js
daa
loopne
test
pushf
or
push
add
stos
jbe
adc
dec
ficomp
pop
sbb
dec
out
paddsb
mov
ret
push
imul
mov
push
fbstp
getsec
jo
aaa
pusha
test
into
cmc
xchg
call
fdivr
mov
fdivr
push
ins
mov
imul
aas
aam
enter
aaa
outs
add
mov
mov
sub
aaa
xor
retf
cmps
ins
adc
xor
inc
jo
add
xor
movs
inc
arpl
sbb
or
int3
inc
xor
push
mov
mov
or
cs
adc
es
adc
cmp
adc
mov
ss
cdq
push
jl
jmp
add
xor
adc
mov
aam
mov
leave
movs
je
arpl
adc
push
pop
sub
dec
shr
sbb
dec
push
(bad)
jnp
test
mov
xchg
xchg
sahf
stos
sti
jle
mov
ins
sbb
lea
in
cmp
jne
xor
test
mov
or
pop
sti
push
jne
and
sub
jbe
cmp
xor
sahf
sbb
mov
and
mov
adc
inc
cmp
xor
out
les
(bad)
mov
xor
and
add
cs
std
aam
jl
sbb
inc
inc
stos
xchg
add
xor
test
push
cli
or
out
cmp
or
adc
pop
xchg
add
or
(bad)
xlat
mov
movs
ror
je
xor
lss
daa
lea
mov
inc
push
cmp
or
test
ins
inc
test
sbb
mov
lahf
hlt
fimul
or
cmp
mov
std
add
add
das
xor
(bad)
mov
xor
push
mov
mov
adc
fldenv
dec
lods
xor
sub
(bad)
dec
push
pop
sar
jb
xchg
inc
push
aas
outs
rcl
movs
cmp
outs
pop
add
adc
dec
loope
jae
xchg
call
or
(bad)
shr
jb
fwait
mov
dec
inc
inc
mov
jmp
mov
pusha
enter
xchg
aad
sub
imul
sbb
add
fild
shr
aad
adc
or
mov
fwait
imul
adc
test
push
test
(bad)
rcl
add
sbb
pop
pop
cmp
cwde
xchg
aaa
or
mov
sub
pop
aas
cmp
je
lods
sub
sub
je
xor
daa
xor
sti
pop
pop
cli
rcl
dec
jne
je
fwait
pushf
(bad)
add
loope
sub
pop
push
cmp
sbb
pop
sub
cmp
pop
sti
mov
inc
pop
xor
adc
inc
add
imul
inc
js
fs
mov
push
jle
sbb
std
mov
mov
xor
add
icebp
aaa
cwde
xor
xor
clc
aas
loopne
add
cmp
je
pop
in
cs
sbb
add
xlat
cmp
pusha
pusha
ja
jne
mov
mov
mov
and
cld
jecxz
push
mov
pop
lods
(bad)
jmp
in
add
or
sub
das
inc
mov
pop
cld
daa
mov
push
sub
add
sar
inc
or
sbb
aas
or
and
xor
mov
and
ja
sbb
dec
push
nop
sub
or
add
scas
adc
loopne
mov
mov
sub
adc
rcl
or
(bad)
jge
jne
mov
movzx
mov
loop
mov
mov
clc
pushf
cmp
jecxz
and
adc
pop
aas
sub
add
loope
mov
cmp
cmp
lds
mov
jb
int3
add
mov
jmp
push
mov
retf
push
inc
mov
lock
add
sbb
jo
push
add
pop
shl
rcr
cmp
clc
cmp
and
push
ss
mov
sub
push
dec
push
sbb
sar
or
sbb
sbb
mov
mov
xor
sub
or
inc
scas
dec
add
(bad)
cs
push
in
adc
jb
mov
sbb
and
cmp
xchg
pop
jbe
inc
pop
inc
push
adc
rcl
mov
data16
sbb
xor
inc
cmp
cmp
(bad)
sbb
mov
jmp
ins
and
pop
fnstsw
into
xchg
mov
sub
xchg
lea
jmp
mov
add
inc
(bad)
js
lock
jmp
fnsave
xlat
xchg
push
bound
or
cmp
inc
ds
ret
movs
adc
jg
push
loop
cmp
and
cs
push
das
add
lock
adc
push
out
(bad)
aam
sbb
inc
js
aam
lds
lds
push
or
push
ja
imul
xor
sbb
dec
mov
sub
out
retf
stc
pop
adc
leave
outs
sub
xchg
sub
mov
cmp
nop
cmps
jbe
in
jae
inc
and
add
lds
sub
mov
push
pop
pop
add
dec
mov
xchg
cmps
xchg
xor
lock
cmp
or
popa
push
cld
or
ret
jno
adc
and
cmp
lahf
mov
jmp
adc
push
xor
cmp
cdq
pushf
rol
cmp
dec
sbb
lahf
pshufw
mov
sbb
add
cmc
outs
pand
(bad)
mov
push
pop
outs
cmp
pop
mov
push
call
or
pusha
dec
js
cmps
push
mov
je
cmp
jne
loope
inc
xor
or
adc
sbb
push
fs
push
xchg
mov
cmp
mov
fwait
push
mov
mov
data16
repnz
sbb
imul
add
cmp
dec
pop
lock
adc
push
dec
gs
mov
or
sub
and
test
xchg
repnz
sub
adc
pushf
aad
cmp
fcom
gs
push
push
mov
sub
daa
push
inc
xchg
and
addr16
add
fldenv
push
jnp
in
lahf
cmp
xchg
inc
icebp
xchg
imul
test
ret
sub
sub
je
or
inc
addr16
test
jne
test
mov
div
inc
inc
sub
pop
cmp
mov
dec
sbb
and
add
mov
sbb
pop
pop
in
stc
mov
adc
js
xchg
out
xchg
leave
aam
pop
imul
xchg
cdq
cmp
cmc
ret
dec
cmc
call
out
jbe
vmovmskps
cmc
push
not
and
fidivr
lods
push
push
dec
fs
inc
shl
ror
int3
push
inc
ins
xchg
cmp
test
or
adc
cwde
cmpxchg
ins
and
sub
push
push
push
dec
or
mov
js
loopne
not
adc
inc
and
push
cmps
icebp
and
jo
stos
sub
xor
loope
mov
or
fadd
(bad)
rcr
pop
(bad)
or
pop
lea
pop
xchg
out
cmp
ret
sub
and
shl
rol
mov
mov
daa
cmp
or
push
jae
test
shr
pop
jo
add
lods
dec
and
push
hlt
sbb
(bad)
cmp
push
aas
pop
pushf
test
mov
pop
cmp
dec
sbb
mov
sbb
jl
xchg
dec
jo
jmp
cmp
repnz
pop
pop
cmp
inc
push
jl
jne
mov
mov
ret
lahf
dec
mov
ficom
xor
rdpmc
leave
leave
leave
leave
xor
ss
leave
leave
leave
leave
cmp
cmp
leave
leave
leave
leave
cmp
ds
leave
leave
leave
leave
and
and
leave
leave
leave
leave
and
es
aas
cmp
iret
sub
sbb
xor
cmc
add
outs
lock
popa
dec
push
bound
data16
lods
xchg
gs
add
jb
jae
cmp
or
sub
jg
cdq
cmp
ficom
pop
jne
add
xor
pop
xor
sbb
cmps
addr16
repnz
xor
cwde
cdq
data16
pop
add
push
ja
imul
jg
aam
loopne
fs
push
xlat
xor
int3
int3
int3
inc
into
push
cmp
scas
sbb
mov
or
sbb
xor
push
fbld
and
pop
jg
out
in
cmps
push
adc
ss
push
pusha
push
push
push
psllq
jbe
ror
(bad)
aas
and
and
aas
iret
in
ss
pop
sub
xor
mov
call
add
nop
stos
inc
add
push
sub
xor
out
repz
sub
push
push
cwde
test
pop
cmp
push
add
or
dec
jne
dec
ss
lods
sti
gs
outs
jb
mov
pop
sti
dec
les
adc
arpl
ins
popa
imul
adc
add
adc
lock
inc
jo
pop
fmul
loop
or
repnz
jb
xor
add
std
dec
jl
sar
jp
push
adc
push
outs
gs
arpl
inc
outs
add
pop
sub
repnz
pop
pop
cmp
stos
loopne
cmovb
mov
(bad)
aaa
inc
dec
outs
jbe
ins
imul
add
xor
(bad)
push
mov
inc
push
lock
test
and
push
iret
pop
sub
pusha
add
add
stos
call
mov
imul
je
jo
gs
inc
inc
pusha
adc
push
fild
cmp
push
xchg
sbb
dec
push
jo
movd
push
pop
dec
dec
inc
add
ja
or
and
inc
mov
adc
cmp
sbb
push
or
sub
pop
adc
mov
push
or
add
pop
xor
daa
jns
(bad)
or
hlt
pop
aam
fidivr
inc
inc
imul
gs
fs
pop
xor
sub
jg
out
fwait
mov
xchg
setp
aad
push
adc
dec
outs
je
mov
pop
dec
jb
je
pop
sub
adc
inc
dec
outs
push
pop
clc
rsqrtps
adc
inc
push
imul
pusha
xor
iret
mov
mov
stos
rcr
clc
addr16
jo
(bad)
pop
clts
addr16
call
dec
sbb
push
outs
imul
outs
inc
jb
js
and
fstp
and
pop
cmp
cmp
fld
add
pop
enter
add
inc
(bad)
push
push
outs
ins
jo
mov
push
outs
outs
fild
cmp
aaa
mov
xchg
or
inc
pusha
lahf
jecxz
stos
jb
popa
pusha
xlat
pop
xor
sub
outs
or
dec
rsqrtps
stos
loopne
rcl
fild
pcmpgtw
popa
iret
jmp
sbb
out
mov
pop
clts
mov
and
ins
fs
dec
outs
popa
fs
xor
jb
pusha
mov
out
(bad)
cmp
cmp
mov
sub
bswap
(bad)
jne
jo
sbb
outs
inc
je
fild
push
ds
push
jb
jae
popa
rol
int
pop
out
inc
dec
mov
push
sbb
pop
xchg
setp
fnstenv
jmp
mov
sysexit
lods
or
sub
fild
dec
dec
jg
pop
push
cvtps2pd
movs
sub
jg
pop
mov
mov
xlat
ja
xor
add
add
or
sub
adc
push
stos
xor
pop
xchg
mov
lock
sub
pop
dec
xchg
(bad)
mov
push
dec
inc
pop
inc
dec
or
dec
inc
dec
sub
inc
sub
xchg
or
imul
ins
outs
jb
sub
clc
jge
mov
push
ja
jno
popa
in
jns
outs
ins
add
ins
sub
fnstsw
gs
push
inc
imul
jp
pop
push
add
loop
push
sar
push
inc
jns
gs
jb
jns
xchg
push
fnstcw
popa
mov
inc
add
or
fdivr
push
loope
das
or
daa
cwde
jl
cs
mov
inc
or
mov
in
ins
dec
in
dec
add
xlat
push
call
cmp
sub
ret
adc
mov
test
dec
xchg
xchg
fldenv
dec
ja
iret
clc
sahf
pusha
xor
or
les
dec
xor
and
mov
out
pop
dec
cld
inc
add
inc
fistp
inc
sysret
lods
dec
imul
push
inc
sbb
and
pop
jo
push
jg
push
gs
data16
add
inc
std
add
dec
pop
inc
mov
xor
jb
jns
add
pop
push
out
add
pop
sbb
dec
add
mov
test
(bad)
clc
loop
add
rcl
pop
call
mov
adc
push
mov
jae
popw
jbe
cld
jae
cs
push
pop
test
mov
push
aaa
mov
push
sar
jle
mov
clc
rdmsr
mov
inc
or
add
jo
mov
cmp
or
fs
jo
rol
push
loope
cmp
push
movs
ins
or
adc
or
jbe
jge
test
(bad)
test
in
iret
popf
xor
jae
add
(bad)
inc
ret
or
ins
or
scas
bound
int3
ins
das
or
gs
jne
add
xchg
scas
sbb
dec
pop
gs
add
popa
mov
aam
add
and
shr
ficom
push
jecxz
idiv
fdivr
and
push
jle
outs
mov
aad
or
popa
ins
aaa
rcl
out
sub
adc
sti
dec
add
std
cmc
dec
mov
push
xor
xor
lods
mov
popa
xchg
int
add
jne
add
push
add
or
mov
inc
and
div
jle
int3
loopne
push
scas
jae
mov
mov
inc
aam
mov
das
test
fucomip
xchg
push
movs
aad
in
seto
pop
dec
adc
sbb
inc
loope
pushf
mov
mov
(bad)
lock
push
mov
int
jae
xchg
push
dec
repnz
fisttp
add
mov
xchg
push
xchg
push
test
mov
mul
push
cmp
push
mov
fidivr
push
outs
les
es
icebp
outs
lock
or
lock
call
or
loop
inc
xor
call
sub
lock
adc
in
cmp
ret
neg
sub
or
es
das
push
sbb
adc
pop
cmp
xor
or
dec
popa
js
call
mov
sbb
adc
xchg
mov
cmp
or
xchg
and
xchg
cmp
gs
jns
xor
rcr
popa
bound
push
sahf
fdivr
push
daa
into
psubw
pop
out
jnp
inc
jno
dec
pop
push
pop
jl
add
pop
bound
xlat
in
ds
movhps
add
pop
ss
dec
fucom
pop
out
mov
pop
xor
outs
(bad)
mov
prefetchnta
stos
outs
dec
push
pop
jno
fwait
add
psrlq
and
or
mov
sbb
dec
push
inc
lock
ds
in
add
xor
rcr
imul
imul
pop
popa
or
stos
(bad)
mov
push
lock
rcl
pop
(bad)
arpl
or
and
pop
lock
pop
je
mov
sub
gs
outs
jb
and
add
push
fmul
dec
jp
addr16
adc
inc
ins
imul
push
inc
bound
xchg
jge
repz
inc
dec
and
cmps
add
push
sbb
xor
inc
adc
inc
fwait
xor
cmps
cs
mov
shr
rol
xor
shr
cli
retf
mov
or
and
mov
xor
pusha
cmc
push
int
mov
mov
sbb
xchg
add
test
pop
adc
imul
mov
pop
mov
pop
(bad)
int3
and
inc
adc
push
inc
mov
add
loopne
or
mov
neg
inc
scas
ss
arpl
inc
inc
jp
mov
xor
push
mov
stos
imul
imul
sub
mov
imul
sub
jecxz
imul
fs
inc
popa
ror
xchg
push
sbb
scas
(bad)
or
arpl
and
sub
sub
sub
pop
adc
inc
xchg
repnz
inc
ret
pop
xor
xor
adc
dec
out
pop
es
loop
add
mov
enter
or
mov
push
push
add
mov
fiadd
pop
addr16
jns
stos
and
dec
or
jne
cmp
cmps
out
xor
or
sbb
adc
xor
dec
jno
enter
jns
dec
dec
aad
fnstsw
imul
adc
adc
push
or
or
dec
cmp
and
sahf
icebp
bound
sbb
dec
imul
or
mov
je
lods
(bad)
lock
dec
push
arpl
inc
xchg
inc
bound
int3
les
or
jns
mov
adc
adc
push
arpl
test
xor
aas
xchg
or
push
sbb
adc
or
add
pop
inc
xor
add
pusha
mov
pop
jge
cs
aad
push
popa
ins
jne
pop
jp
xor
(bad)
xchg
push
mov
jecxz
or
enter
or
enter
aam
sbb
mov
enter
add
js
or
or
mov
mov
sub
adc
inc
and
sub
sbb
cmp
loopne
call
sub
inc
push
or
repz
mov
mov
jg
bound
adc
jmp
inc
push
push
pushf
push
loopne
pop
cmp
add
pop
mov
call
les
push
add
pop
lahf
add
aas
and
out
(bad)
imul
inc
xor
daa
es
aaa
inc
push
pop
jne
and
inc
jo
adc
or
and
inc
ins
jo
jns
inc
push
xor
cmp
xor
cmp
jae
sbb
xchg
push
(bad)
aaa
clc
xor
push
pusha
mov
neg
loop
adc
add
add
ja
jmp
sub
imul
cmps
push
mov
stc
mov
fiadd
cmp
push
pop
mov
sbb
add
out
aaa
sub
adc
sub
scas
faddp
xor
bound
sbb
mov
fiadd
scas
inc
addr16
iret
xor
push
dec
lods
pop
fs
addr16
add
fldenv
push
dec
adc
push
cmp
scas
xor
push
inc
or
jo
cmp
jns
dec
jmp
pop
mov
lds
mov
or
dec
and
push
mov
test
push
dec
add
xchg
inc
add
pop
or
adc
inc
(bad)
(bad)
sbb
(bad)
pop
fwait
xor
add
pusha
loope
add
or
push
aas
and
adc
inc
add
push
sar
ja
mov
mov
jnp
push
mov
jb
or
out
or
push
or
push
add
jne
movs
inc
or
pusha
aas
mov
stos
push
add
cmp
or
rol
dec
mov
inc
dec
loop
lds
out
aas
sahf
ss
ret
cwde
add
pop
push
lods
into
in
fmul
loop
lods
mov
xchg
pop
mov
inc
fild
and
movs
test
loope
cmp
or
or
mov
add
pop
and
mov
and
adc
pop
xor
dec
imul
or
shr
push
pop
jp
sti
add
adc
cmp
push
popa
lock
mov
fs
jo
out
lea
out
xchg
pushf
push
sub
adc
push
popa
fwait
xchg
mov
and
and
addr16
mov
loope
aam
mov
and
inc
loopne
sbb
or
mov
adc
sub
inc
push
cmp
sub
sub
lea
sub
or
xor
or
push
or
cs
and
sub
(bad)
pop
sub
pop
daa
and
push
mov
loop
jb
outs
ja
jo
xor
scas
outs
push
into
out
add
stos
cwde
aas
push
inc
or
add
add
pop
add
stos
out
adc
and
jbe
add
mov
or
push
and
adc
sbb
imul
inc
pop
cmp
stc
mov
mov
push
mov
(bad)
push
fs
add
cmps
or
ss
fs
mov
jo
ins
mov
push
mov
xchg
rcl
or
scas
sti
dec
add
imul
sub
and
cmp
push
mov
(bad)
out
mov
inc
pop
and
bound
pop
inc
cwde
mov
arpl
push
out
mov
fs
pop
xchg
bound
add
mov
or
bound
pop
or
or
imul
pop
adc
inc
inc
xor
pop
add
xor
xor
dec
add
shr
in
add
jo
daa
push
mul
pushf
push
adc
bound
push
and
nop
or
cmp
add
adc
cdq
cmp
and
pop
and
mov
aad
push
into
cld
jo
pop
jae
aad
mov
popf
dec
mov
xchg
aad
mov
in
sbb
sbb
sub
ret
outs
pop
fs
(bad)
mov
(bad)
std
inc
int
pop
mov
pop
pop
sbb
pop
inc
cwde
fcom
pop
mov
inc
mov
add
push
xor
dec
xchg
mov
sub
push
js
pop
(bad)
les
jbe
test
lds
(bad)
fnstsw
jne
add
jecxz
xor
fiadd
addr16
dec
inc
gs
inc
inc
xor
xor
sub
and
es
fsubr
xor
xchg
daa
lahf
daa
pusha
shl
pusha
mov
daa
sub
sub
or
sub
mov
addr16
inc
pop
add
add
push
add
push
cmp
rcl
ret
inc
test
lahf
ja
shl
enter
scas
mov
push
cvtsd2ss
aas
mov
xor
stos
ret
push
dec
push
inc
fcom
test
test
test
push
ret
clc
pop
add
mov
push
shr
sub
sub
cmp
test
and
ins
lods
sbb
pop
mov
push
or
add
push
push
loope
inc
scas
dec
pop
or
inc
mov
and
cmp
xchg
mov
add
inc
jae
jl
push
mov
jge
fwait
push
sbb
addr16
int3
popf
cld
push
pushf
push
add
adc
sbb
or
push
or
or
push
cmp
dec
lods
inc
into
icebp
jmp
punpcklwd
push
pushf
(bad)
jno
sbb
js
popf
mov
xor
popf
mov
pushf
and
imul
test
daa
pop
ret
addr16
sbb
mov
mov
pop
rcl
in
mov
mov
or
mov
lds
pop
daa
mov
add
ds
jbe
add
pop
push
push
jg
ins
jnp
inc
and
push
shl
or
out
pop
sbb
dec
xor
adc
nop
inc
sbb
rol
push
loopne
inc
ins
sub
dec
data16
shl
lock
imul
push
jne
fld
jnp
in
sbb
or
sub
add
cmp
mov
arpl
mov
mov
ret
ins
inc
inc
push
and
jns
inc
inc
xchg
mov
or
jns
xor
inc
(bad)
pop
neg
mov
mov
fwait
jge
pop
mov
es
js
xor
jb
push
mov
inc
lods
pop
push
fadd
add
mov
and
pop
cmp
mov
push
rcl
aaa
dec
outs
jl
mov
pop
add
hlt
fmul
jecxz
mov
and
into
dec
add
jne
and
sbb
lods
xlat
(bad)
shl
test
and
mov
dec
adc
mov
mov
mov
dec
mov
test
push
xor
les
(bad)
pop
or
add
ror
aad
je
xchg
jbe
and
mov
or
sbb
inc
cmp
out
or
mov
mov
mov
(bad)
fdivr
pop
aas
add
fcmovnb
bound
addr16
in
cwde
mov
push
sbb
push
jae
adc
pop
inc
xor
add
in
push
mov
xchg
mov
push
out
enter
jl
in
push
test
addr16
xchg
stos
icebp
setnp
aas
in
xor
xor
or
gs
outs
jb
mov
in
gs
mov
ror
imul
cmps
cmp
inc
hlt
setns
je
push
rcr
cdq
fiadd
mov
cmp
lea
and
imul
inc
je
rol
(bad)
ror
and
mov
retf
xchg
dec
and
mov
or
rcr
das
sbb
push
outs
xor
outs
adc
nop
push
je
lahf
push
lds
jp
push
cmp
nop
or
push
sbb
ror
inc
mov
das
jo
or
pop
push
outs
inc
nop
push
mov
add
push
jg
mov
jne
lea
movs
add
inc
cld
mov
call
mov
ret
in
in
clc
push
sbb
push
push
push
sub
push
or
inc
daa
dec
sti
outs
dec
ror
sub
adc
or
(bad)
std
outs
outs
push
mov
int3
mov
sub
mov
lahf
mov
jb
sub
pop
aam
shr
add
movs
jmp
push
and
imul
lock
sbb
push
hlt
push
push
fsub
scas
xor
push
lock
aam
or
in
push
fsub
push
fiadd
sbb
sbb
push
or
jge
les
add
or
cmp
pop
push
fdiv
test
sbb
lea
adc
aas
in
ds
cli
dec
or
aaa
lahf
adc
shl
add
inc
ret
dec
test
pop
or
movnti
call
inc
outs
mov
dec
sbb
dec
and
lods
leave
pop
cmp
cmps
mov
dec
or
pop
mov
pop
ret
sub
add
xor
in
jmp
js
mov
fadd
xor
jmp
adc
jg
push
mov
inc
add
cmp
add
das
push
fimul
stc
push
mov
cmp
cmp
(bad)
sub
sbb
and
rcr
mov
push
xor
and
rcr
pop
fldpi
or
jp
dec
jne
mov
sbb
push
mov
fcomp
and
stc
sub
inc
fwait
popf
inc
fimul
add
add
outs
dec
outs
or
add
and
cmp
jl
xchg
jmp
cmp
mov
push
sub
bswap
pop
shr
jmp
mov
xor
cmp
ja
jmp
push
lea
mov
pop
jbe
ror
rol
ret
sar
or
cli
add
add
fdiv
sar
daa
cmp
shr
jmp
rol
fadd
outs
cmp
push
adc
leave
mov
mov
jbe
cdq
add
ins
mov
sbb
pop
js
ins
ret
out
xchg
mov
inc
jne
mov
out
je
xor
fstp
mov
sti
out
jl
xchg
inc
dec
jne
and
mov
jo
inc
jno
mov
int3
adc
adc
adc
fs
mov
aam
push
push
inc
adc
xor
adc
fiadd
mov
iret
push
xor
mov
add
mov
ret
pusha
push
cli
push
push
push
mov
mov
test
test
jl
inc
xor
cwde
in
mov
mov
pop
aaa
ins
scas
lea
clc
mov
inc
mov
lock
adc
cmp
add
dec
jne
mov
ret
inc
xchg
les
call
in
dec
outs
jo
loopne
inc
adc
pop
pop
pop
cld
adc
adc
add
jmp
jmp
inc
push
mov
inc
outs
dec
fiadd
cli
cmp
je
pushaw
mov
xor
jae
push
mov
jno
mov
adc
fmul
push
push
aaa
icebp
mov
jo
pop
arpl
loop
cmp
mov
inc
or
adc
or
adc
je
and
add
and
add
addr16
push
fisub
adc
dec
mov
mov
inc
inc
mov
push
add
add
or
add
mov
and
cmp
xor
add
jl
jge
sbb
pop
jp
add
or
sbb
jmp
mov
fcomp
lods
mov
add
es
scas
mov
mov
repz
sbb
sbb
mov
arpl
sbb
sbb
mov
sbb
sub
push
inc
or
and
jne
push
sbb
and
call
mov
or
adc
mov
jle
popf
adc
loopne
dec
mov
push
pop
xchg
xchg
dec
div
cmp
addr16
xchg
loopne
pop
mov
add
jnp
les
lea
popa
js
pusha
sbb
add
icebp
mov
sbb
ret
je
or
inc
nop
add
mov
cdq
pusha
pop
push
sub
dec
mov
or
dec
jmp
add
xor
mov
mov
popf
xchg
and
add
jmp
dec
mov
lock
sub
pusha
adc
scas
in
jg
jo
mul
or
and
push
dec
inc
loope
jae
add
or
sar
cmovge
pop
xchg
sub
cmp
mov
mov
pop
int
ja
retf
das
pop
xchg
les
add
jne
mov
(bad)
stos
jmp
in
test
jl
mov
das
mov
dec
loopne
call
jge
mov
lea
mov
dec
test
jle
pop
sbb
pop
pop
xlat
std
cmp
adc
es
adc
mov
jb
inc
cwde
sbb
aas
jo
enter
mul
inc
or
shl
add
add
push
ins
and
and
movs
ins
and
paddb
dec
or
shl
inc
pusha
div
rol
mov
cli
in
jge
add
jb
shl
sar
add
sbb
mov
add
add
jl
cld
shr
mov
or
iret
mov
cmp
add
cmp
ja
pop
jo
xchg
enter
pop
cmps
push
mov
(bad)
std
(bad)
loopne
jb
sub
push
daa
(bad)
or
lods
jmp
xchg
ss
push
push
mov
and
sbb
loop
sub
sar
ins
jo
test
xor
ret
add
jo
inc
push
retf
inc
push
cmp
call
inc
push
mov
and
cmp
out
call
push
mov
repz
lock
and
xor
pop
out
rcl
pop
into
push
mov
sub
cmp
jle
movs
sbb
test
repz
jle
retf
les
xor
mov
jmp
mov
adc
ds
jnp
dec
xor
pusha
cmps
cmp
fdiv
rdtsc
sbb
xor
cli
jne
xor
xor
in
ss
sub
adc
sbb
pop
or
ss
outs
push
jo
clc
jmp
mov
dec
call
dec
add
xsha1
cmps
or
push
push
push
and
and
pop
mov
add
adc
xchg
cmps
pop
nop
jnp
sbb
xor
mov
xor
adc
or
sti
xor
(bad)
adc
xor
ins
and
hlt
in
jmp
aam
mov
bound
aaa
sub
or
and
pushf
(bad)
and
push
mov
lahf
add
xchg
ja
sub
stos
mov
cmps
xchg
xor
add
inc
imul
dec
xor
adc
or
jl
inc
mov
rcr
mov
xchg
push
mov
mov
in
lds
push
dec
xor
adc
and
loope
les
xchg
inc
adc
fwait
ret
mov
test
jbe
xor
add
jnp
je
xor
push
add
je
mov
jb
test
lea
mov
adc
scas
mov
sub
out
into
ss
lods
jno
call
xchg
inc
add
mov
cld
mov
mov
add
pop
call
jne
lea
inc
ss
fidiv
cmp
adc
sbb
and
add
jmp
leave
jecxz
leave
inc
mov
enter
jecxz
mov
add
mov
xchg
ret
adc
xor
shl
inc
nop
aaa
lods
sub
imul
loopne
push
adc
xor
mov
scas
push
mov
inc
(bad)
and
cmp
nop
adc
test
ins
push
mov
push
xor
xor
mov
xor
pop
or
or
push
mov
jb
jo
test
sub
push
mov
call
pop
leave
ds
sbb
lock
sub
mov
out
out
cmp
adc
push
mov
mov
mov
add
add
jge
jg
adc
jbe
cld
push
sbb
sbb
retf
mov
pop
add
add
aad
xchg
or
mov
pop
adc
hlt
push
xchg
jmp
xor
push
jo
jbe
cld
in
sar
sete
idiv
or
mov
or
mov
xor
iret
and
call
lea
in
add
scas
or
pusha
adc
pop
es
dec
and
push
cmp
jne
or
or
loope
mov
adc
retf
dec
pop
es
push
retf
movs
adc
mov
pop
add
pop
cs
ja
push
sbb
inc
push
push
sbb
adc
out
(bad)
push
mov
or
pop
sbb
fwait
out
sbb
sbb
mov
sbb
ror
mov
ins
jle
adc
jno
jae
mov
add
inc
sbb
lock
push
dec
sub
push
imul
and
xor
sub
fwait
pusha
mov
sub
sub
push
xlat
in
push
fist
bound
cmp
movs
ret
xchg
rcr
stos
(bad)
call
sub
call
add
imul
mov
bound
or
aad
pop
mov
loopne
(bad)
imul
outs
inc
ret
xchg
(bad)
jne
das
ins
sbb
pop
push
pop
jns
mov
pop
repz
clc
test
push
out
aas
sbb
mov
jnp
aas
lods
sbb
push
sbb
sub
sub
fadd
mov
icebp
dec
jae
sahf
and
jge
xchg
ror
test
dec
aam
xor
fs
or
add
mov
lahf
pop
sbb
test
push
shl
movs
hlt
add
mov
jmp
mov
inc
or
adc
repz
fadd
lahf
cmps
fimul
and
or
adc
(bad)
xchg
ror
jg
push
add
or
add
into
push
mov
loope
loop
pusha
icebp
je
sbb
pop
(bad)
xor
pop
mov
or
mov
test
ret
bound
pushf
jge
mov
xor
push
pop
or
dec
lock
mov
sbb
xchg
inc
and
popa
stc
in
ret
cmp
xlat
clts
idiv
mov
mov
pop
rcr
pusha
adc
adc
push
sub
hlt
jnp
adc
mov
jp
pop
sub
jl
and
(bad)
mov
adc
cmp
adc
add
push
jmp
mov
and
ja
adc
bound
push
add
push
mov
xlat
fist
outs
add
sub
(bad)
xor
lea
inc
jno
mov
fidiv
jnp
inc
pop
push
inc
adc
sbb
je
push
sbb
mov
mov
sub
jbe
xlat
push
test
sbb
aaa
pop
inc
fiadd
xchg
and
es
xchg
mov
pop
lea
or
adc
adc
jo
jle
adc
xchg
or
pop
or
jnp
sub
push
cdq
arpl
jge
mov
in
xchg
dec
enter
jnp
cmp
rep
ret
ss
mov
sbb
push
cmp
jmp
sbb
push
jmp
(bad)
cwde
mov
mov
das
push
xor
sbb
mov
push
jns
jb
sbb
loop
rcr
aaa
or
fxch
push
or
cmpxchg
mov
sub
cmps
loope
or
mov
aam
jne
shl
imul
jg
push
test
cli
or
jle
or
and
mov
in
xor
push
push
lea
imul
(bad)
jmp
pop
jnp
and
and
jge
ret
push
and
jbe
mul
lods
rcr
jo
shr
dec
(bad)
out
lahf
jmp
cmp
mov
jnp
adc
xchg
scas
rcl
cmp
popa
in
mov
mov
mov
popa
cli
popa
sbb
pop
cld
mov
mov
call
jl
fidivr
add
xchg
mov
jmp
pusha
dec
add
mov
and
dec
movs
or
clc
cmp
mov
int3
adc
inc
inc
sbb
push
lock
adc
sub
sbb
mov
sub
cld
sti
retf
cmp
jne
mov
mov
in
fdiv
scas
mov
push
mov
adc
mov
data16
movzx
cmp
dec
pop
and
sbb
dec
push
push
das
jbe
jmp
fs
out
pop
pushf
add
inc
add
dec
jne
les
pop
cld
iret
pop
sbb
or
lea
pop
out
mov
das
rcr
test
or
or
and
mov
or
dec
dec
pop
adc
repz
mov
loop
les
xchg
adc
dec
cld
mov
xor
div
push
cld
add
mov
mov
sbb
jnp
dec
push
sbb
fisub
fcom
or
add
dec
inc
adc
adc
cmovne
lea
sub
inc
adc
out
ret
ss
push
popa
sub
aad
inc
jb
dec
je
dec
sub
jb
adc
je
cmp
pop
ret
or
cmp
ja
push
xchg
xchg
cdq
push
push
add
or
add
repz
add
sub
in
mov
mov
int3
mov
pop
jmp
push
adc
test
in
pop
push
mov
ret
push
push
push
mov
add
xor
jbe
and
shr
add
aam
mov
je
push
fst
idiv
jne
and
pop
pop
add
mov
cwde
fdiv
scas
nop
aas
add
pusha
pop
daa
sub
jns
neg
out
cmp
int
test
(bad)
push
sbb
lods
push
sub
ficomp
ins
cmp
and
js
xor
sbb
push
or
inc
sbb
adc
xor
adc
addr16
(bad)
sbb
fidiv
cmp
inc
xor
mov
adc
sbb
jo
rol
push
push
mov
push
adc
jnp
popa
adc
sahf
std
pop
or
mov
or
mov
(bad)
pusha
lea
and
out
fidivr
cmp
sbb
mov
add
(bad)
or
fimul
jns
jl
cdq
adc
push
adc
(bad)
push
push
or
or
lahf
dec
dec
outs
and
pop
loope
data16
mov
push
mov
add
jmp
mov
inc
inc
inc
dec
test
jb
inc
es
mov
adc
and
push
inc
call
dec
ss
push
mov
lods
push
inc
xchg
pop
and
inc
lock
fisttp
push
mov
(bad)
push
shl
retf
jmp
jmp
pop
fmul
stc
sbb
adc
mov
or
jmp
loopne
push
ror
lods
push
jae
sbb
mov
mov
inc
xor
cmp
hlt
xor
cwde
and
or
push
inc
movs
jl
lahf
fnstenv
cmps
add
dec
jne
mov
lea
and
cmp
ror
add
push
xchg
stc
mov
push
xchg
sbb
mov
adc
ret
xchg
call
jnp
out
add
ins
les
push
or
into
aam
dec
arpl
ins
cmp
test
jle
add
sbb
int3
out
mov
inc
ret
adc
xor
into
jge
cmp
movs
xchg
jp
jno
pop
inc
or
and
pop
mov
popf
bswap
or
inc
inc
pusha
cwde
xor
hlt
dec
sete
mov
(bad)
les
jo
and
cwde
mov
inc
adc
loope
or
jne
(bad)
cmp
adc
dec
sbb
scas
or
or
sub
dec
sbb
inc
inc
xor
je
sbb
aad
dec
jo
and
inc
call
icebp
sahf
loopne
add
dec
jne
fbstp
pop
xchg
call
pop
or
adc
dec
ja
fadd
fadd
loopne
test
in
fimul
ret
push
or
add
fs
push
icebp
ficom
or
push
adc
cdq
mov
pop
test
inc
pop
pop
div
jl
cld
cli
pop
cmp
xchg
adc
pop
jmp
call
dec
dec
sbb
test
loope
enter
xor
cmp
je
(bad)
out
xlat
test
or
in
sbb
add
push
or
or
push
in
mov
inc
loopne
ja
mov
sub
ss
jnp
in
mov
mov
aad
or
pushw
shl
adc
ds
inc
dec
ffreep
push
add
test
rol
push
or
(bad)
ins
stos
and
or
lea
sub
cwde
mov
cmp
jmp
pop
or
cmp
sub
or
popf
sbb
inc
push
test
mov
or
add
and
or
mov
in
clc
xchg
jge
ret
fsub
retf
js
xchg
hlt
adc
cwde
lods
data16
test
xchg
pop
or
(bad)
rcl
pop
jmp
stos
xchg
popf
jno
arpl
pop
shrd
dec
daa
or
call
add
(bad)
dec
dec
add
add
ror
pop
jbe
jo
sbb
jne
or
sbb
enter
lea
add
lea
sbb
lds
repnz
pop
push
inc
es
fcmovnbe
mov
shl
xchg
sbb
xor
cmp
sub
add
add
cmp
jl
sub
es
clc
sti
leave
loopne
mov
add
sub
clc
or
sub
add
adc
inc
inc
or
ss
sbb
xor
bound
sub
cmps
test
mov
sbb
test
sub
ds
add
xchg
xchg
imul
pushf
push
mov
ror
mov
popf
add
mov
daa
cdq
retf
mov
mov
leave
jns
fadd
sar
dec
mov
sti
fwait
dec
mov
clc
ss
and
jne
mov
and
dec
or
inc
sub
shl
push
fistp
jbe
lock
pop
dec
inc
adc
push
xlat
xchg
mov
jecxz
nop
push
jge
inc
hlt
outs
and
addr16
push
sti
hlt
int3
loop
outs
dec
cmp
xchg
sar
ss
mov
dec
inc
or
or
sub
loope
pop
std
or
dec
or
inc
push
dec
pop
sub
daa
clc
sbb
popa
or
add
add
test
jge
or
lods
xchg
sar
pop
nop
add
add
add
prefetch
scas
lahf
loopne
pop
cmp
std
or
mov
add
sbb
jge
mov
jge
xchg
fidiv
dec
push
sbb
ret
or
pop
and
cmps
mov
and
push
pushf
call
or
fst
dec
sub
push
mov
cwde
dec
or
fmul
cmp
jg
jo
cwde
inc
sub
loopne
cmp
cmp
stos
dec
mov
pop
or
addps
xchg
(bad)
addr16
pushf
pusha
add
xchg
sbb
ret
xchg
inc
into
test
add
mov
or
xor
rcr
cmp
ret
sbb
and
mov
xor
and
dec
mov
inc
pop
loopne
in
loop
test
scas
or
cmp
idiv
mov
xchg
and
and
out
ins
add
inc
mov
pop
test
ret
or
adc
cwde
cmc
mov
imul
(bad)
stos
xor
sbb
inc
shl
xchg
jo
push
nop
(bad)
fs
scas
or
shl
popf
xchg
in
fwait
mov
cli
add
push
cdq
cmp
push
and
cmp
stos
int3
jle
push
jmp
cmp
jge
or
cmp
jmp
push
lods
jmp
pop
push
(bad)
bound
adc
cmp
addr16
or
fisttp
add
pop
fwait
xor
xor
pop
sub
push
fmul
(bad)
clc
ror
stc
mov
lea
inc
and
dec
xor
and
mov
mov
or
add
add
add
sbb
sub
scas
ror
rcl
mov
rcl
scas
jge
add
cmps
add
or
mov
jmp
mov
inc
push
lea
push
add
mov
adc
test
cmps
adc
lahf
jl
dec
lock
call
push
sub
js
mov
loopne
mov
push
int3
adc
inc
imul
sub
in
imul
sub
add
sbb
ja
cmp
xor
jbe
mov
fdiv
(bad)
fadd
pop
jne
ror
or
das
jp
idiv
lea
sbb
dec
lods
pop
test
es
and
dec
jne
stos
cmps
sbb
retf
test
xor
shl
dec
xchg
fnstsw
in
dec
(bad)
je
and
frstor
push
add
add
add
jne
pop
cmp
mov
xchg
xchg
leave
sub
fadd
mov
bound
jle
out
call
sub
shr
and
and
or
mov
inc
and
enter
outs
xor
pop
sub
shr
inc
call
cmp
shr
add
jecxz
or
mov
mov
cwde
cmp
add
add
mov
push
inc
ret
ss
sbb
in
add
and
aas
cdq
add
test
push
fdiv
ja
pop
lods
sub
adc
lea
or
mov
sub
mov
xchg
pop
cs
or
xchg
mov
or
mov
mov
jno
adc
adc
push
jmp
inc
inc
js
ja
ret
push
and
sbb
and
jne
adc
sbb
mov
or
or
cmps
sub
pop
scas
push
(bad)
pop
mov
adc
outs
pop
mov
in
sub
je
or
cmp
sahf
mov
loopne
ret
sub
call
mov
cs
add
inc
pop
pop
sub
ret
aad
push
bound
fnstcw
fwait
push
stos
in
cdq
push
mov
ins
pop
push
pusha
lock
dec
pop
xor
out
or
jmp
cmp
sub
dec
lods
sub
cmp
xor
retf
mov
fist
dec
mov
add
mov
clc
inc
int
rol
mov
inc
mov
or
mov
add
ins
adc
call
mov
add
push
jge
inc
hlt
add
add
add
retf
fmul
inc
add
push
push
je
sbb
mov
push
inc
sub
jb
push
popf
sub
push
lods
dec
push
aam
(bad)
fldcw
add
and
mov
inc
dec
jne
addr16
jl
jne
test
jbe
neg
dec
xor
and
jnp
xor
xchg
js
ror
push
js
js
inc
test
xlat
sti
outs
js
xor
into
dec
into
and
retf
xor
jmp
sbb
xor
retf
cwde
push
sub
add
sar
cli
ja
xor
add
and
iret
int3
add
sbb
test
jp
xor
jbe
fld
mov
das
(bad)
dec
cmp
sti
fidiv
sub
xor
loop
test
js
or
adc
mov
lods
sti
adc
adc
mov
call
add
sub
jne
pop
nop
imul
jne
mov
(bad)
or
mov
jp
rcr
add
xor
adc
jg
add
les
jae
push
mov
sbb
jmp
or
mov
imul
lea
mov
mov
jb
add
add
outs
repnz
js
push
call
js
sbb
inc
inc
or
test
test
sub
jmp
jg
push
xor
dec
mov
popf
nop
mov
and
xchg
mov
mov
loopne
cdq
jne
movs
mov
xchg
pop
inc
movs
call
mov
call
xor
sbb
jmp
jp
cmp
clc
aam
stos
jo
arpl
xor
fwait
add
ret
popa
fisubr
xor
call
lock
and
add
cmp
fisubr
xor
add
xchg
bound
cwde
enter
sub
mov
sub
bound
mov
neg
stos
mov
shr
sub
lds
jae
xchg
adc
cmp
sahf
mov
pop
cmps
cwde
jmp
sbb
jno
js
xchg
ret
jge
sub
or
sub
sbb
push
or
sub
pusha
and
les
shl
or
icebp
mov
pop
xchg
xor
aas
(bad)
cmps
out
mov
outs
ret
mov
call
mov
xor
and
mov
test
cmp
mov
sbb
mov
jmp
mov
xchg
sbb
push
adc
xchg
cwde
add
out
lods
aaa
repz
mov
jne
imul
add
(bad)
mov
cmps
movs
push
sbb
mov
or
ret
outs
push
mov
and
shr
xor
add
or
test
push
push
std
add
in
lods
call
data16
ret
mov
sub
retf
bound
push
loop
les
sbb
sbb
fisttp
fwait
adc
outs
xchg
fild
jb
ss
je
into
inc
cli
aaa
sub
xor
es
daa
aam
mov
dec
inc
sub
pop
mov
inc
test
sbb
push
mov
inc
fdivp
arpl
cmps
inc
stos
xor
pusha
or
mov
sub
daa
mov
ret
or
mov
scas
daa
faddp
daa
das
inc
push
or
mov
push
dec
pop
retf
movs
popf
or
pop
jmp
mov
push
mov
adc
cmp
jnp
add
fs
push
mov
pop
daa
out
jbe
pop
push
push
add
or
test
mov
adc
mov
mov
mov
retf
outs
mov
adc
or
push
ds
add
adc
inc
pop
pop
jmp
push
and
pop
aas
sbb
(bad)
pop
dec
inc
mov
sbb
popa
inc
xor
pop
sbb
fadd
jmp
sbb
call
xor
pop
xchg
mov
stos
jnp
out
and
dec
push
push
(bad)
adc
shl
adc
dec
pop
add
push
or
cmp
jo
adc
and
(bad)
fsubr
sub
je
jo
mov
movs
dec
cmp
lahf
add
pop
bound
lds
cwde
pop
retf
fild
and
or
sbb
iret
pusha
or
or
mov
ja
sahf
push
add
ffree
ret
daa
jecxz
jmp
mov
push
pop
inc
push
and
fcom
es
int3
or
and
push
add
or
mov
mov
jo
lods
(bad)
shl
adc
add
ins
push
dec
jle
sub
fst
repnz
inc
dec
or
inc
sub
fadd
popf
add
mov
loope
clc
sub
mov
mov
xchg
inc
sub
aam
push
lods
dec
mov
push
loopne
and
mov
or
retf
jl
and
push
xor
outs
sbb
mov
cdq
add
add
rol
or
mov
or
add
adc
sub
push
movs
sub
and
push
rol
clc
and
xor
pop
pop
or
movs
pop
sbb
add
cmp
sahf
push
add
adc
jnp
pop
pop
jge
add
out
dec
in
add
ret
cmps
mov
add
call
mov
fadd
fistp
mov
clc
push
sbb
or
cmp
push
neg
sub
pop
ja
enter
pop
add
sbb
cmp
int3
pop
aaa
call
imul
add
push
or
loopne
fstp
loop
push
add
sbb
jns
out
pop
scas
lods
call
sbb
inc
cmps
cmp
add
or
push
sub
je
sub
push
xor
popa
add
mov
dec
test
hlt
pop
mov
out
ss
inc
cmp
cmp
mov
mov
lock
lock
mov
add
mov
(bad)
mov
adc
and
xor
and
movups
adc
pop
rol
xor
stos
inc
call
add
add
add
nop
adc
jbe
adc
add
bnd
jmp
ror
pop
and
push
mov
or
mov
sub
mov
cmps
aam
add
loope
add
stos
das
add
rol
sbb
mov
add
loope
loopne
retf
(bad)
cmp
adc
(bad)
mov
cmp
and
out
mov
push
ret
sub
xor
les
cmp
test
xchg
fidivr
jb
inc
xor
sub
cmp
jb
mov
sub
adc
xchg
cs
icebp
inc
adc
jmp
push
jb
dec
pop
push
sub
add
inc
dec
jne
sub
inc
and
in
push
dec
sub
or
pop
jmp
out
pop
dec
in
sub
adc
xchg
and
mov
cld
rol
push
push
adc
sub
mov
mov
mov
je
jns
push
adc
dec
xor
ror
or
mov
jmp
or
(bad)
fisttp
cmp
(bad)
add
outs
in
jo
out
lods
bound
call
xchg
add
adc
xor
pusha
cmp
cwde
jne
pop
jge
sub
shl
pop
pusha
loopne
xor
pop
ja
mov
ds
bt
jae
fbstp
frstor
add
imul
and
cmp
and
pop
int
out
add
pop
mov
add
lahf
fsub
lods
add
push
add
adc
(bad)
jne
inc
xchg
js
inc
xchg
sbb
adc
mov
sbb
xchg
gs
sbb
and
adc
cmps
or
add
mov
fbstp
inc
mov
push
push
inc
adc
cmp
sub
les
mov
adc
inc
pusha
push
loopne
mov
pusha
imul
jnp
(bad)
scas
xchg
out
aaa
dec
rcl
inc
clc
jo
xchg
add
fs
lahf
sub
add
sbb
cmp
adc
adc
xchg
sbb
dec
pop
jle
mov
je
cmp
mov
shl
sbb
sbb
lea
lods
mov
pop
mov
inc
and
push
sbb
pop
enter
lock
cmp
mov
and
cmp
mov
test
adc
sbb
sar
aam
cld
sub
je
ret
jnp
mov
pusha
cmp
loope
dec
add
rcl
dec
dec
nop
and
add
add
inc
clc
push
add
inc
outs
mov
call
add
pop
mov
pusha
xchg
or
push
cmp
jno
inc
and
shl
in
jnp
ss
push
push
push
rcl
stos
dec
cmp
or
mov
in
or
inc
(bad)
lea
and
sub
pop
and
fucompp
and
push
push
push
lahf
push
ja
xor
dec
mov
ror
(bad)
and
lea
or
std
push
rep
pop
pushf
adc
jl
inc
xor
adc
loop
or
push
scas
popa
pusha
xchg
sbb
push
add
call
int3
pop
fadd
push
mov
or
pcmpgtd
into
dec
mov
jo
inc
sar
je
inc
adc
xchg
arpl
push
cld
mov
jg
ja
sub
rcl
and
xchg
add
out
(bad)
shl
push
dec
pop
mov
bound
out
or
cmps
sti
lahf
sbb
xchg
cmp
jae
addr16
push
push
shl
in
mov
jnp
ror
(bad)
shl
pop
in
xchg
outs
outs
cmp
or
loop
je
mov
xor
stos
in
fiadd
cmp
call
test
fld
fcompp
fstsw
sahf
jbe
sti
push
or
call
jmp
sub
or
push
push
test
clc
fst
mov
and
jmp
cmp
push
out
pop
mul
int3
push
leave
test
fstp
fwait
and
popf
sub
sbb
xchg
inc
test
add
test
and
sbb
xor
mov
dec
sti
shl
fild
cs
sub
sub
or
fdivp
adc
adc
popa
add
fwait
pop
pop
sub
jo
pop
loopne
push
test
das
ret
out
dec
mov
ret
inc
int
add
push
mov
jle
xchg
mov
mov
push
(bad)
push
cld
arpl
or
enter
jnp
cs
add
or
aam
jmp
nop
fwait
or
sub
inc
cmps
adc
adc
mov
(bad)
mov
call
es
outs
pshufw
je
je
cmps
jo
jg
or
out
out
push
pop
cld
add
sub
xchg
pop
or
jl
inc
add
xor
xlat
and
call
xor
jne
push
sub
sbb
jo
ja
(bad)
push
adc
adc
dec
sub
jge
ret
addr16
xchg
add
xor
clc
mov
aad
ds
add
or
jne
push
sti
outs
add
jb
sbb
jb
lods
idiv
or
cmp
jne
call
add
sbb
or
test
mov
sbb
jnp
retf
add
mov
sbb
mov
lock
sub
cwde
and
cmp
pop
and
mov
arpl
fcomip
add
inc
or
sub
cmp
and
mov
jle
add
stos
pop
sbb
xchg
stos
iret
lahf
shl
mov
cmp
adc
pop
outs
inc
shl
rcr
pop
fdiv
pop
push
icebp
lahf
loopne
(bad)
xchg
adc
hlt
mov
mov
or
dec
adc
and
sub
add
rol
dec
mov
pusha
or
add
xchg
push
inc
into
jo
push
dec
jbe
mov
jo
jo
adc
mov
xor
fldenv
sbb
jg
push
mov
into
add
add
push
test
pop
dec
mov
or
push
fnstenv
xchg
inc
xchg
fadd
int3
(bad)
int3
ins
sbb
xchg
xchg
sbb
dec
cmp
imul
add
push
push
retf
or
popf
out
and
cmp
jae
mov
fst
jne
mov
dec
aas
or
pop
movzx
lea
ror
in
inc
mov
add
sub
nop
xor
or
aad
and
or
pop
das
add
jge
pop
je
sahf
jne
xor
add
dec
adc
or
rep
dec
(bad)
cmovae
xchg
and
bound
shr
push
test
mov
int3
sbb
xchg
add
or
or
outs
jge
mov
pop
ret
mov
push
out
cmp
pminub
add
mov
out
cmp
movs
movs
icebp
aas
ss
push
sbb
pop
cmps
add
sub
movs
adc
fild
sub
(bad)
sti
mov
pop
and
fwait
push
cmp
fwait
push
xchg
jl
mov
xor
fmul
cmp
add
data16
mov
and
add
inc
test
and
popa
add
test
fnstcw
imul
adc
sub
xor
ins
adc
mov
and
popa
pushf
call
rcr
pop
or
and
push
lock
add
xor
add
inc
xor
or
pop
xor
(bad)
sar
push
mov
xor
sub
dec
fwait
push
(bad)
call
push
jnp
loopne
xchg
lds
sbb
aaa
jne
sub
jl
sbb
sbb
aaa
(bad)
mov
sbb
sub
sub
push
lea
inc
sbb
mov
addr16
add
and
jmp
cmp
xor
jecxz
jecxz
daa
xor
popf
pop
mov
cs
mov
push
or
jae
cmp
jle
mov
xchg
push
or
push
sub
pusha
xchg
add
add
fwait
sbb
xor
xor
fstp
xchg
mov
mov
jno
jnp
add
cmp
pop
mov
add
sbb
xor
ror
push
push
scas
mov
push
push
push
push
mov
cdq
jbe
jne
adc
add
mov
inc
jne
sbb
mov
add
out
lods
loope
jmp
mov
mov
cmp
cmp
mov
test
ins
int3
jge
or
inc
push
fild
call
sbb
push
fld1
popa
test
jg
add
cwde
push
bound
inc
leave
mov
pusha
aam
out
mov
movs
fidiv
xchg
hlt
cmp
mov
mov
cmps
inc
hlt
cmp
or
lea
or
push
push
mov
fiadd
lock
and
out
lods
sub
call
adc
cwde
cmp
or
call
mov
enter
jae
mov
sbb
scas
pop
fadd
add
cmp
jg
sbb
aam
xor
inc
cwde
or
jmp
into
sti
inc
enter
push
pop
imul
add
and
out
outs
test
xor
mov
imul
imul
dec
inc
jb
push
mov
cdq
pop
mov
pop
ins
pop
mov
push
add
mov
les
or
mov
and
daa
lods
data16
adc
add
lock
sbb
adc
test
(bad)
(bad)
fstp
out
jbe
mov
mov
inc
sbb
nop
xor
aaa
retf
das
call
jne
rcr
mov
cmp
xlat
mov
jmp
cmp
pop
aad
pop
inc
les
adc
or
or
loopne
outs
xor
inc
mov
enter
or
push
mov
push
mul
jl
retf
jl
push
add
jle
mov
adc
or
mov
mov
cmp
inc
int3
jae
cwde
dec
mov
outs
sbb
js
inc
mov
out
inc
add
adc
ss
dec
ss
nop
mov
inc
lds
int3
add
test
dec
and
fcmovnb
jb
jmp
xor
push
int3
shl
shr
mov
mov
not
xlat
dec
jp
enter
(bad)
inc
xchg
ret
cmps
push
cmp
xchg
test
mov
ret
add
ins
prefetch
push
sub
je
loop
and
lock
loopne
dec
or
call
sar
clc
push
jbe
aam
mov
mov
add
shr
and
mov
shl
sub
dec
fucomi
push
mov
push
cld
(bad)
sar
ror
jae
inc
mov
gs
pusha
retf
add
test
and
add
ret
or
mov
xchg
les
push
xor
cmps
mov
popa
and
mov
add
push
sbb
mov
xchg
mov
mov
mov
jb
lods
xor
push
loopne
lods
jne
sbb
shl
movs
shl
xor
adc
add
jne
jmp
fcom
adc
repnz
mov
cwde
rcr
push
mov
shl
popa
adc
jo
ret
cli
adc
sub
inc
or
mov
push
mov
imul
arpl
popa
es
out
push
inc
add
sbb
ret
cmp
sub
adc
imul
sub
lahf
jg
sbb
adc
jge
sbb
mov
aam
lea
jbe
pushf
in
call
inc
cdq
lar
mov
adc
jl
add
mov
and
(bad)
dec
xchg
sbb
jb
push
shl
rcr
mov
inc
and
push
sbb
js
dec
lea
xchg
and
cld
cmp
xor
(bad)
jmp
push
xor
mov
lock
pushf
or
xchg
push
pop
loope
movs
or
(bad)
in
jle
lock
or
inc
ins
inc
or
push
push
xor
mov
mov
ret
arpl
stc
fnsave
test
sub
in
loope
xchg
(bad)
mov
sbb
mov
sub
sbb
add
fidivr
daa
repnz
movs
je
inc
loopne
pop
sub
or
je
and
test
out
inc
repz
pop
in
fisttp
iret
stos
and
aad
rcl
jae
enter
pushf
inc
fidivr
mov
into
pop
stc
sbb
push
lea
push
in
dec
addr16
mov
pop
xor
and
mov
cld
enter
push
lock
in
add
mov
adc
xchg
push
fdivr
in
jno
pop
fdiv
aam
dec
xor
inc
mov
stos
stos
dec
fcmovne
inc
mov
pop
mov
sar
jns
int3
int3
mov
sbb
xor
call
lods
sti
aam
push
dec
and
sub
add
add
and
lds
rcr
(bad)
mov
cmp
or
inc
in
ror
in
inc
jmp
adc
sbb
outs
les
aaa
pop
xchg
das
shl
or
ret
jae
sub
and
stc
dec
pop
adc
push
icebp
pusha
in
push
pop
jmp
adc
add
jge
mov
mov
mov
cmp
mov
ret
sbb
mov
add
pusha
dec
and
in
dec
jnp
xlat
in
out
ja
cwde
enter
jno
push
pop
scas
daa
mov
movs
mov
add
add
inc
add
add
sub
push
or
out
push
dec
pop
jo
add
add
cdq
out
retf
fnstsw
aaa
int3
pop
add
sbb
aaa
addr16
inc
or
fsub
std
fwait
adc
clc
imul
mov
fdivr
clc
movs
and
mov
mov
or
mov
ins
aaa
adc
nop
sub
mov
pop
mov
(bad)
lock
mov
bound
push
lods
ja
pop
pop
ins
pop
push
xor
jg
movs
add
stc
jae
popa
scas
dec
shl
ret
iret
ror
cmp
and
test
leave
sbb
xchg
mov
mov
add
iret
(bad)
dec
and
push
push
add
xor
add
xchg
nop
xchg
shr
aas
adc
(bad)
fild
ins
adc
jne
pop
cmp
outs
sub
add
or
loope
mov
ret
fsubrp
jg
jmp
jns
adc
mov
mov
adc
arpl
(bad)
add
pop
adc
or
mov
or
jae
xor
in
and
xchg
inc
jmp
xchg
push
adc
mov
sbb
push
mov
pop
sbb
inc
call
mov
add
add
inc
shl
add
add
mov
aad
jmp
cmp
loope
pusha
cmp
bound
jecxz
push
cwde
cmp
stos
lds
pushf
mov
dec
push
in
shl
or
sbb
sbb
cmps
ins
cmp
mov
cmp
cmp
mov
mov
sbb
jg
in
sub
mov
pop
dec
fs
cmp
rcl
iret
pushf
adc
adc
add
dec
add
sub
sub
xor
push
clc
js
jmp
mov
jmp
mov
inc
test
dec
fbstp
fadd
pop
jmp
mov
jmp
leave
push
inc
adc
mov
stos
cmp
ror
popa
aaa
add
xchg
retf
sysenter
adc
lock
aam
rcr
aas
add
cmps
ror
test
fs
cmp
jge
rol
pop
repz
cmp
push
ins
out
add
nop
pop
pop
push
mov
adc
adc
sub
ret
jbe
lods
dec
test
or
fadd
in
or
outs
xor
imul
and
in
ror
jbe
(bad)
mov
loopne
mov
pop
xor
push
test
jne
add
ret
div
mov
mov
popf
dec
loopne
inc
pusha
adc
sbb
int
lea
and
ss
cmp
mov
scas
cld
add
(bad)
fsub
inc
push
pop
popa
rcr
int
dec
jo
pavgb
xchg
lock
dec
(bad)
jp
inc
sbb
lock
push
fld
ins
add
fisub
test
or
add
cmp
adc
in
and
mov
adc
ret
sbb
movs
jmp
xchg
adc
mov
shr
xchg
sbb
xchg
fldenv
sti
pop
add
push
scas
rcr
ja
int
mov
xlat
mov
ret
mov
push
test
push
jg
std
mov
mov
jmp
lea
pop
aam
test
sti
xor
mov
dec
test
ja
lock
jl
inc
lods
outs
fsub
mov
xchg
dec
mov
call
mov
push
dec
inc
fstp
dec
jne
mov
sahf
mov
aas
sub
je
or
add
fsubr
test
adc
dec
outs
push
push
enter
pusha
neg
hlt
mov
xor
mov
test
in
or
mov
or
pop
sbb
or
not
xlat
and
das
ja
shr
scas
rol
push
jl
inc
mov
repnz
test
ret
pop
push
mov
or
jl
mov
push
shr
rol
dec
jne
lea
lea
mov
mov
sar
mov
ret
add
cli
push
je
or
mov
add
pop
and
mov
loopne
mov
mov
adc
sub
adc
sbb
mov
mov
(bad)
push
adc
push
dec
jg
xor
ficom
adc
mov
inc
cmp
loopne
jmp
and
xor
jmp
sub
or
mov
pop
sti
jmp
push
mov
pop
cld
std
xlat
mov
sbb
adc
add
adc
or
js
jo
in
jne
add
add
gs
out
pop
xlat
ja
xor
dec
arpl
repnz
adc
into
test
add
sbb
adc
addr16
xor
es
fisttp
add
dec
je
adc
je
jmp
or
ret
inc
das
xor
cmp
cmp
leave
test
mov
mov
call
and
repz
or
dec
mov
jb
loopne
add
lods
lods
mov
arpl
stos
fnstenv
inc
inc
test
xchg
xor
xchg
in
jb
sbb
add
fadd
nop
cwde
xor
push
mov
inc
push
pop
adc
pusha
not
push
or
or
ret
sbb
add
je
dec
enter
mov
sbb
outs
add
cwde
jno
jmp
lock
mov
jb
push
jne
adc
or
loopne
mov
mov
mov
inc
push
cmp
cmp
mov
loop
(bad)
or
adc
xor
adc
xor
push
loopne
push
or
pusha
int3
xchg
fwait
adc
mov
push
test
data16
add
sti
mov
(bad)
adc
movs
dec
hlt
xor
pusha
adc
movs
dec
xor
pusha
es
out
pop
out
cmp
jbe
or
int
sub
cwde
mov
push
mov
into
sbb
and
adc
idiv
pop
mov
jo
inc
outs
cmp
pop
aaa
fmul
pop
fadd
jle
sub
sub
out
shr
ja
mov
das
sub
sub
lds
fxrstor
jnp
and
push
out
push
mov
(bad)
mov
out
mov
xchg
add
and
loop
mov
push
ror
or
adc
cmp
sub
ins
push
cmp
add
bound
inc
jg
push
dec
mov
jmp
mov
jae
push
push
sti
inc
imul
inc
jecxz
out
iret
cs
ja
sub
jg
pop
cmp
and
xchg
pop
jl
inc
scas
or
cmp
or
stos
xchg
out
out
or
out
lea
lds
mov
aaa
xchg
out
and
adc
test
adc
and
ss
jle
or
gs
or
pop
xchg
je
push
das
push
lea
add
in
mov
mov
adc
jmp
shl
jmp
shl
mov
xchg
dec
add
fwait
imul
(bad)
in
xchg
mov
pop
dec
xor
daa
mov
push
or
or
xor
cmp
jge
fcom
loope
clc
hlt
jmp
loopne
add
jge
jne
mov
add
inc
jmp
leave
inc
xor
mov
test
inc
inc
sbb
push
add
add
inc
mov
(bad)
adc
fcom
push
add
out
test
arpl
push
xchg
sub
mov
add
xor
ins
clc
ret
pop
retf
test
rol
clc
push
mov
adc
ins
xchg
test
pop
pextrw
mov
(bad)
loop
inc
or
pop
rcl
adc
test
sub
cwde
dec
hlt
shr
mov
adc
push
or
(bad)
cwde
dec
enter
or
dec
dec
jne
jbe
popa
xchg
pop
and
add
or
dec
js
inc
jnp
pop
js
fsub
retf
ror
cmps
popf
pop
mov
nop
push
adc
popa
sub
jo
pop
dec
mov
or
dec
mov
ret
lar
loopne
push
adc
gs
inc
rol
dec
adc
mov
xor
dec
pop
retf
rol
pop
or
scas
adc
(bad)
jle
js
jl
inc
mov
or
cmps
dec
fild
push
and
and
pop
inc
sub
pinsrw
sbb
shl
xor
mov
shr
add
push
jb
call
cdq
inc
int
lock
test
popf
ds
jl
arpl
es
jl
ja
xor
add
add
nop
fisub
sbb
xor
add
and
frstor
daa
fdivr
cdq
and
push
test
jbe
bound
inc
adc
sub
jmp
fsub
out
inc
aas
fstp
loope
test
cmp
bound
stos
fidiv
sbb
fs
push
fistp
ret
sub
test
ficom
clc
mov
sub
jle
mov
imul
jle
mov
dec
inc
lock
outs
add
or
inc
add
test
and
mov
or
sub
mov
sub
(bad)
mov
enter
push
leave
jae
ret
mov
and
lock
sub
adc
xchg
popa
push
not
test
mov
pop
cmp
mov
test
xchg
in
dec
and
clc
sti
lahf
sbb
and
cmps
push
or
add
xchg
adc
push
xor
pop
ret
or
je
jecxz
dec
test
adc
mov
sub
rcr
add
add
outs
aad
cmp
inc
sub
imul
mov
jo
mov
enter
fcomp
adc
lahf
mov
jo
mov
addr16
ins
pop
sub
push
aam
pushf
je
sub
sbb
lock
mov
das
or
mov
imul
jge
jle
adc
(bad)
cmp
or
xor
daa
jl
xlat
add
push
push
mov
loope
loop
push
or
popa
je
fdivr
out
test
dec
imul
push
sar
inc
push
imul
loope
out
dec
inc
inc
jb
jns
arpl
sub
add
fild
push
inc
inc
test
gs
jb
jns
jo
add
pop
gs
imul
aas
rol
pushf
jecxz
fcom
ins
cs
ins
popa
imul
cs
gs
in
dec
add
addr16
sbb
or
jns
popa
dec
add
mov
add
push
gs
outs
jb
outs
arpl
add
or
inc
inc
cmp
or
push
shl
test
repz
call
cmp
lods
pop
xor
push
inc
jne
ins
push
imul
(bad)
adc
cmp
or
jb
hlt
or
inc
adc
push
inc
shl
inc
push
je
mov
sar
push
xor
inc
mov
cmp
imul
adc
mov
ss
in
push
stc
das
fs
pop
movs
aad
inc
inc
enter
push
outs
sbb
dec
push
rcl
pop
test
add
inc
pop
neg
idiv
ins
add
adc
push
lock
jge
jns
sbb
push
enter
hlt
push
mov
mov
movs
adc
xchg
inc
es
push
sub
out
mov
xor
push
dec
push
inc
xor
int3
out
jns
sub
add
repnz
push
mov
xlat
shl
pop
rcl
je
and
ror
xor
inc
sub
lods
xchg
or
or
aas
xor
inc
add
xor
inc
push
gs
jo
ss
jbe
pop
fnstsw
scas
push
ins
outs
outs
jle
sub
cmp
lea
pop
outs
adc
pop
cs
pop
lock
popf
(bad)
es
add
push
add
jb
fdivr
jbe
inc
imul
or
cmp
inc
dec
outs
add
hlt
mov
cs
std
mov
xchg
push
or
inc
dec
mov
repnz
js
gs
or
outs
jmp
xchg
push
inc
mov
addr16
jmp
prefetch
or
mov
xchg
mov
stos
sbb
out
mov
call
inc
lock
cdq
push
inc
je
gs
jmp
mov
jmp
cld
push
aam
mov
inc
outs
sub
adc
sub
or
xlat
lock
adc
add
add
lods
or
mov
ss
sbb
add
dec
add
or
dec
aas
push
jg
push
push
outs
jne
or
ds
dec
outs
lods
inc
mov
popa
fs
mov
push
mov
jnp
inc
adc
dec
jnp
adc
and
or
popa
in
outs
ja
or
je
popa
pop
repz
fdiv
int3
inc
(bad)
push
jb
sbb
mov
dec
add
dec
mov
inc
gs
jb
mov
and
push
jl
clc
or
gs
shl
add
sub
xor
inc
add
add
xchg
mov
jo
mov
or
bound
cld
xor
xor
dec
or
jb
xor
and
inc
data16
shl
dec
dec
push
jl
test
add
mov
mov
inc
ja
stos
mov
popa
add
cmp
pop
adc
sbb
jbe
mov
xor
or
mov
shl
movs
jge
cmp
mov
add
or
dec
aas
or
mov
shl
or
daa
outs
scas
les
(bad)
jbe
jae
sbb
add
push
imul
mov
into
xchg
bound
pop
das
adc
rol
(bad)
jg
jno
mov
pop
sbb
and
dec
movs
test
loopne
nop
stos
jbe
in
mov
cwde
test
push
add
out
or
leave
mov
adc
loop
movs
fild
fisttp
sub
mov
mov
sbb
hlt
xor
mov
push
aad
sbb
add
adc
cld
ins
clc
loopne
ficom
mov
(bad)
shl
push
add
push
loopne
pop
mov
xchg
dec
ins
sbb
add
jp
adc
fs
lods
mov
or
mov
and
and
test
jle
add
mov
inc
lahf
adc
test
je
sub
add
inc
dec
jbe
daa
pop
or
adc
test
sub
push
mov
not
mov
or
or
mov
mov
mov
in
adc
or
inc
or
outs
mov
xor
je
je
scas
add
popf
int3
or
mov
outs
dec
cmp
push
mov
inc
mov
or
add
push
push
arpl
and
ud2
dec
je
fsubr
xchg
(bad)
mov
iret
outs
and
sub
dec
inc
add
inc
ss
fisub
int3
pop
mov
push
sub
add
xchg
loopne
push
test
in
es
(bad)
push
or
and
jo
adc
pusha
(bad)
adc
popa
cli
sbb
add
dec
jo
cmp
ja
sub
ret
or
jo
call
rcl
(bad)
popa
int
cmp
adc
test
push
xor
iret
(bad)
push
cmc
fsubr
pop
pop
adc
aas
push
sbb
push
lock
cmps
sub
fadd
or
adc
add
pushf
push
cmp
push
pop
pusha
add
xchg
xchg
mov
push
mov
push
and
nop
or
or
inc
and
sbb
je
sbb
fimul
adc
pop
aad
outs
fild
inc
add
or
stc
or
rcr
test
shl
adc
les
cmp
je
mov
shr
pop
ret
es
iret
mov
aam
xchg
xchg
clc
add
popf
shl
loop
and
adc
ret
std
and
jecxz
iret
mov
enter
mov
shr
lea
lock
loopne
pop
sbb
mov
jmp
adc
mov
and
and
pop
pop
mov
and
jbe
xor
add
mov
addr16
mov
rol
xor
jne
fcmovnb
add
ret
ins
aas
sbb
xchg
ror
daa
loope
ror
xchg
adc
mov
xor
lods
sbb
sbb
sti
retf
xor
mov
jmp
data16
cmp
cmc
sbb
ss
cmp
ret
mov
mov
je
sbb
shl
or
push
sbb
jo
mov
popf
push
dec
ds
mov
nop
adc
das
adc
dec
imul
test
inc
jle
mov
imul
inc
inc
inc
adc
cmp
inc
pop
neg
dec
int
and
jo
clc
adc
in
jmp
aam
mov
ror
test
cmp
or
(bad)
mov
js
(bad)
js
jb
add
xchg
sbb
test
sub
test
cmp
cmp
and
mov
mov
movs
adc
push
in
adc
into
outs
sub
and
push
cdq
add
in
nop
enter
sub
push
push
and
push
push
dec
add
mov
and
fsubr
push
retf
cmp
ins
sbb
push
sar
test
js
test
xchg
push
sub
inc
sub
sbb
enter
shl
cmp
push
inc
push
cmp
pop
or
pusha
hlt
daa
mov
push
dec
daa
pop
pop
(bad)
cmp
sub
fld
inc
fimul
sbb
imul
aaa
sbb
adc
push
mov
idiv
inc
xor
cmp
lea
sbb
cmps
sbb
xor
adc
xchg
cli
add
xchg
sbb
loopne
adc
scas
mov
pop
cmps
push
mov
mov
or
lods
adc
push
test
inc
and
pop
jge
sub
lds
adc
mov
mov
in
lods
ret
inc
or
sbb
rol
mov
inc
fdivr
jbe
addr16
cmp
fbstp
pop
hlt
cmp
ret
add
call
cs
adc
or
or
xor
add
test
sbb
xor
xor
stc
xchg
lock
pop
xor
sbb
fsub
leave
out
inc
lock
sub
imul
add
setle
out
cmp
jb
cmps
icebp
fst
cmp
mov
pop
cld
add
cmps
jmp
dec
push
inc
add
mov
fmul
mov
mov
push
sub
call
sti
push
fistp
and
pop
or
inc
add
push
or
or
mov
stos
das
dec
inc
jl
test
dec
add
mov
pop
ss
sbb
xchg
mov
adc
inc
clc
pop
cs
sahf
mul
(bad)
push
mov
jp
xchg
sti
mov
or
xor
jmp
cmp
sete
ret
pop
retf
bound
mov
xor
sti
loop
lock
clc
mov
movzx
and
ins
xlat
outs
pop
sub
jne
and
dec
test
jl
call
add
mov
push
add
(bad)
xchg
call
jmp
pop
inc
xor
and
popa
sbb
rol
xchg
push
inc
inc
cmp
mov
jecxz
ds
sbb
sbb
andnps
push
call
push
cmps
push
std
out
adc
jp
je
push
mov
(bad)
push
and
push
or
in
sbb
daa
arpl
dec
test
jl
inc
sub
mov
cmc
dec
mov
dec
push
add
jo
ror
push
lea
(bad)
push
inc
adc
pop
add
dec
jne
adc
or
loopne
pop
pusha
ins
mov
dec
and
test
div
mov
push
or
daa
fisub
add
add
pop
shr
pop
push
les
sub
dec
jecxz
sub
test
add
add
test
outs
scas
and
inc
mov
dec
cmc
and
(bad)
ror
push
pop
and
push
xor
lds
out
mov
ins
es
xchg
mov
add
inc
push
cmc
add
add
sub
das
xor
jae
pop
mov
das
inc
push
sbb
ret
daa
and
pop
add
rcr
inc
dec
imul
inc
loopne
div
mov
js
and
cwde
add
jae
aam
mov
dec
mov
fsubr
test
and
pushf
push
cmp
pop
fdiv
iret
popa
or
je
psubusb
imul
in
fld
out
or
xor
jbe
mov
stos
ret
sub
mov
adc
adc
(bad)
and
(bad)
or
mov
out
loop
push
mov
and
ror
pusha
cld
out
xor
cli
cmp
sti
push
in
pop
pop
test
mov
cmp
add
sub
int3
and
sbb
ret
adc
and
add
inc
and
shr
pop
mov
push
in
fisttp
or
scas
sub
jne
mov
cwde
xor
inc
pop
mov
mov
mov
add
aas
jo
fmul
cmp
jl
jbe
mov
lock
aas
jb
ins
cmp
sbb
pop
mov
add
adc
test
test
loopne
ins
or
cmp
ins
add
sti
inc
fidiv
je
xchg
shl
out
ficomp
xchg
pop
adc
xor
and
add
push
mov
pop
jae
sub
rcr
dec
or
ds
push
pop
test
inc
int3
(bad)
mov
dec
call
add
outs
push
xchg
test
jle
or
sbb
cmp
inc
xchg
cli
das
daa
adc
rol
adc
fcom
stc
sti
and
mov
and
sbb
test
pop
ror
inc
mov
jl
mov
call
enter
add
ds
sbb
or
adc
xchg
sub
add
out
mul
shl
jns
test
jmp
push
add
cmp
and
ss
xor
popf
std
pop
fdivrp
clc
push
push
jle
mov
push
adc
scas
jnp
mov
jg
sbb
scas
mov
push
pop
inc
pop
inc
lock
fild
pop
and
loopne
adc
or
repz
push
test
push
xor
push
xor
push
gs
rol
fisub
hlt
jo
ror
ss
movs
or
(bad)
sub
(bad)
sbb
das
inc
fstp
jbe
cld
adc
loope
adc
add
push
adc
aam
ss
and
(bad)
cmc
mov
push
add
cmp
ins
mov
lahf
push
push
aam
imul
xor
call
into
mov
imul
aaa
(bad)
mov
dec
clc
fs
sbb
imul
test
sub
and
adc
jnp
(bad)
cdq
push
mov
add
js
push
push
mov
test
mov
adc
dec
jno
xchg
pushf
cmp
ret
(bad)
xor
push
push
movs
daa
sbb
jmp
dec
fld
pushf
mov
cmp
adc
popa
test
jmp
enter
xchg
ror
lods
rol
inc
xor
jbe
dec
or
and
push
scas
fcmovnbe
inc
or
and
test
ret
inc
pop
add
out
xchg
or
stos
pop
pop
test
push
push
out
cld
call
cmp
test
mov
mov
adc
and
sub
fnstsw
xchg
cld
mov
adc
test
xor
fnsave
sbb
inc
inc
outs
cmp
je
mov
lods
test
outs
and
cmp
jne
jp
add
cdq
aam
outs
push
cs
shr
mov
inc
shl
mov
(bad)
cmp
pop
fistp
jae
mov
js
cdq
jo
dec
mov
gs
mov
(bad)
dec
inc
inc
dec
jae
adc
data16
jg
xchg
xor
xor
push
cwde
sbb
push
ja
dec
ja
or
popa
sbb
pop
cmps
js
test
sahf
push
loopne
push
outs
scas
and
and
jle
jne
xchg
sub
push
or
jmp
add
sub
xchg
(bad)
add
xor
push
lock
or
cmp
mov
call
jmp
mov
xchg
push
inc
add
cli
ds
je
mov
(bad)
in
push
ret
push
or
mov
nop
hlt
jmp
sti
mov
in
and
mov
push
cwde
mov
in
mov
sbb
test
push
mov
loope
adc
pop
leave
mov
xchg
movs
mov
(bad)
int
push
inc
mov
cmp
data16
in
dec
or
mov
xor
inc
xor
out
mov
mov
push
out
iret
add
in
mov
and
adc
test
xor
jno
pop
pop
or
sub
pop
ja
sub
adc
outs
movs
add
cld
sub
call
push
mov
jb
je
jmp
inc
inc
pusha
out
movs
xor
inc
inc
jbe
add
inc
jb
arpl
ret
loop
add
jmp
enter
jmp
mov
sub
push
mov
jmp
(bad)
jne
push
add
cmp
test
push
inc
cs
inc
inc
jecxz
ret
outs
icebp
jmp
loop
(bad)
sbb
mov
xor
cs
or
aaa
or
arpl
dec
int3
and
retf
push
lock
adc
xor
outs
push
(bad)
dec
or
enter
dec
test
(bad)
add
pop
xor
cmp
push
shl
aas
inc
pop
xor
in
inc
inc
sbb
or
push
lods
popf
(bad)
push
cmp
call
enter
mov
push
enter
push
mov
push
cmp
leave
cmp
xor
and
pop
jns
jb
add
jmp
push
jmp
pop
aaa
add
mov
and
jnp
ds
mov
mov
pushf
pushf
imul
adc
pop
cmc
out
or
or
mov
and
sbb
add
add
pop
jg
jno
push
bswap
repz
das
or
loopne
add
test
push
sbb
jne
ins
int3
pop
xor
sbb
fadd
xchg
cmp
stc
sub
mov
(bad)
daa
in
jge
das
dec
sub
ror
popa
jae
ja
mov
addr16
nop
or
loope
int
data16
or
add
mov
push
jge
xchg
cmp
push
je
mov
mov
adc
outs
nop
adc
iret
jmp
cmp
add
and
adc
add
js
add
cwde
xchg
push
ins
fdivr
xchg
call
loop
jp
and
pop
mov
and
push
mov
xor
(bad)
into
mov
jl
or
icebp
loopne
leave
call
cmps
inc
mov
mov
or
fidiv
mov
cld
sub
rol
repnz
jl
or
jl
or
adc
pop
jl
fcomi
xchg
add
in
adc
or
or
outs
call
loopne
repz
xchg
bound
fimul
inc
sbb
fistp
test
push
mov
xchg
add
cmp
jbe
in
adc
add
sub
jae
pop
jne
ret
adc
pop
sti
xor
mov
daa
outs
jmp
pusha
or
push
add
es
or
mov
pop
jl
pop
or
jne
dec
or
inc
mov
add
pop
sub
adc
cmp
jo
sub
ret
xlat
enter
call
lock
popa
mov
jmp
lds
push
mov
lds
in
test
adc
jg
inc
mov
add
add
pop
mov
and
(bad)
cmp
inc
jae
sub
xor
push
mov
call
jecxz
mov
and
inc
or
jne
push
xor
fidiv
adc
push
imul
aad
(bad)
cmp
jge
mov
jmp
mov
dec
push
jge
mov
xor
jge
shl
inc
repz
nop
pop
mov
les
cmp
int
sti
call
loopne
sub
pop
jbe
inc
jns
jae
lods
inc
push
cmp
xor
daa
clc
mov
scas
adc
or
shl
lock
xchg
in
dec
cwde
test
jbe
mov
mov
jp
div
push
ja
test
inc
and
test
or
rcl
pop
mov
in
or
mov
xor
and
pop
xchg
sbb
cmp
or
dec
lds
push
cmp
mov
je
std
push
mov
scas
sbb
mov
pusha
mov
push
or
lock
inc
xlat
xchg
dec
push
mov
and
sbb
adc
mov
adc
inc
inc
leave
or
or
and
dec
or
iret
data16
push
push
mov
int3
sbb
jo
cmp
or
push
into
sbb
or
pop
dec
jecxz
fisubr
repnz
push
enter
mov
pop
nop
retf
mov
sub
mov
loope
push
shl
out
arpl
nop
sbb
inc
inc
(bad)
or
add
and
push
scas
fcmovne
cmp
pop
mov
cdq
idiv
or
add
jg
lods
sub
jg
mov
dec
test
inc
cmp
jl
xor
(bad)
mov
jmp
mov
lea
out
dec
neg
lods
sub
pop
dec
int3
sub
int
popf
and
dec
inc
mov
xor
xchg
cmp
adc
push
pop
dec
adc
inc
sbb
movs
fwait
loopne
push
xchg
mov
add
push
out
jmp
jns
in
or
nop
xchg
popa
mov
cs
mov
mov
and
xor
pop
imul
cmp
jle
or
neg
inc
out
sbb
retf
jl
adc
push
adc
mov
loopne
jl
and
xchg
push
sahf
add
pop
in
push
mov
sbb
push
xor
neg
push
push
xor
loope
fidiv
fs
jae
aam
sub
adc
inc
adc
hlt
sbb
dec
pop
bound
push
pop
cld
mov
cmp
ja
inc
or
add
add
pop
ins
xchg
sbb
ja
movs
clc
jbe
sub
dec
sahf
or
cmc
arpl
xor
adc
add
adc
into
in
(bad)
int
cmp
mov
mov
data16
sub
int3
jge
inc
sbb
test
jae
jae
cmp
xor
fcom
and
xor
pop
xlat
jmp
ss
add
and
pop
test
sub
sub
(bad)
jbe
outs
fld
jle
mov
pop
xchg
push
out
out
jmp
addr16
or
cdq
jl
add
sbb
jb
sbb
xchg
pusha
xchg
sbb
xchg
ret
mov
xchg
sbb
(bad)
ins
ret
jb
retf
data16
test
inc
fcom
add
adc
mov
and
inc
add
mov
mov
add
sbb
xlat
pop
inc
ja
inc
(bad)
cmp
add
push
inc
dec
popf
dec
ret
(bad)
mov
fmul
(bad)
mov
cmp
dec
xchg
cmp
pushf
pop
and
add
dec
sub
rol
push
ret
push
hlt
retf
mov
fcmovnu
adc
popf
ins
xchg
xor
jne
jne
imul
add
mov
dec
cs
iret
test
and
(bad)
nop
sbb
pusha
ins
push
adc
xchg
das
mov
jnp
jecxz
mov
xchg
sbb
or
out
sub
push
and
mov
imul
push
add
imul
jmp
mov
mov
clc
sbb
or
cwde
sbb
sbb
push
sbb
adc
sbb
push
sbb
and
pop
and
mov
xor
jmp
dec
or
inc
mov
jge
push
loopne
and
dec
push
dec
mov
jl
and
push
adc
add
ret
unpcklps
pop
fwait
pop
ds
sub
add
leave
or
adc
add
add
daa
mov
xchg
inc
sbb
fdivr
xor
or
sbb
mov
enter
ret
imul
mov
mov
push
and
fwait
xchg
and
xor
fist
or
cmp
push
push
hlt
push
mov
sbb
inc
mov
adc
dec
mov
sbb
or
adc
or
pop
movs
scas
adc
or
jecxz
ins
lods
sahf
jecxz
mov
movs
adc
scas
sbb
inc
or
xchg
adc
loopne
or
adc
ss
cwde
idiv
out
ins
(bad)
in
outs
mov
ret
shl
pusha
imul
stc
sahf
rcl
push
lods
test
das
and
and
aam
daa
lds
es
daa
sub
or
xor
loope
btc
pop
scas
push
add
dec
xlat
mov
push
xchg
jl
in
data16
sub
pop
ficomp
jmp
xchg
pop
cmp
pop
dec
pcmpgtw
and
sbb
push
pop
ret
xchg
mov
add
inc
jno
out
fisttp
or
dec
sub
dec
pop
dec
inc
inc
sbb
jno
or
fadd
inc
sbb
fs
xchg
push
or
sbb
fndisi(8087
cmps
loop
pusha
add
das
loope
push
dec
repz
sbb
dec
shl
pop
xlat
xor
add
xor
lea
jo
pop
and
jns
ror
push
xor
mov
xor
mov
adc
jns
pusha
pop
cwde
shr
inc
test
ror
or
lods
pop
daa
cmp
push
cmp
jmp
call
cld
cmp
mov
icebp
mov
add
test
jg
inc
inc
fucom
add
jl
sbb
ss
or
lea
xchg
sub
mov
jle
test
jl
cmp
jge
cmp
cld
xor
mov
mov
add
mov
or
sbb
ins
jo
outs
dec
cwde
and
jecxz
dec
sub
mov
xchg
iret
push
xchg
std
ds
loopne
sbb
mov
push
inc
lods
adc
or
mov
push
adc
lock
(bad)
shl
cmp
jo
sbb
nop
jle
outs
xor
add
add
jo
clc
cmp
push
sbb
repz
sbb
sbb
inc
or
jmp
es
in
inc
ror
jmp
pop
adc
sub
lahf
jno
inc
scas
cmp
xchg
xchg
popa
cmp
pop
nop
pusha
into
icebp
std
push
cmp
jp
cli
dec
push
cmp
or
mov
sub
ror
js
test
xor
sbb
jmp
je
jg
push
mov
push
mov
into
retf
outs
dec
add
or
cmp
adc
mov
push
push
xor
stc
aaa
mov
mov
inc
mov
(bad)
sub
cmp
test
aaa
test
and
fild
and
outs
(bad)
mov
js
push
rcr
mov
push
add
inc
fsincos
mov
repnz
jge
lock
test
mov
jle
jmp
sub
mov
sbb
lock
sub
pop
push
xchg
add
sbb
xor
cli
jmp
sub
and
dec
pop
adc
(bad)
mov
lea
adc
push
loopne
ret
cli
and
(bad)
jl
inc
clc
repnz
mov
leave
inc
rol
sub
jnp
inc
xor
or
pop
jmp
xlat
test
jmp
(bad)
pop
out
push
adc
out
out
sbb
adc
push
adc
xchg
jne
dec
pop
mov
xor
retf
shr
lock
inc
(bad)
adc
je
dec
jne
loopne
xchg
(bad)
inc
jp
or
dec
inc
fild
lods
fs
jmp
idiv
sub
loopne
adc
scas
sub
sub
pop
je
cli
fsubr
mov
sbb
fdivr
lock
dec
ficom
out
dec
je
cmp
xchg
loope
outs
mov
shl
inc
add
or
mov
xlat
push
in
inc
xor
mov
int3
push
rol
inc
inc
push
mov
mov
sbb
aas
in
push
xchg
inc
cli
stc
xchg
cmp
adc
mov
ins
jb
ror
adc
jnp
xor
aad
loopne
inc
lds
ret
add
pop
in
cs
mov
or
add
pusha
adc
mov
push
imul
inc
pop
in
cmp
dec
clc
cli
imul
clc
leave
pop
pop
ins
push
out
mov
adc
sahf
arpl
mov
or
sbb
ja
adc
mov
cmp
js
fadd
xchg
mov
xchg
js
mov
(bad)
pop
cmp
inc
shl
aaa
adc
add
inc
shl
and
sbb
pop
adc
fdiv
and
aad
jecxz
imul
adc
js
cmp
je
js
add
or
test
add
js
scas
outs
lods
jmp
and
pop
add
mov
(bad)
out
cmp
or
jg
or
sahf
js
iret
inc
mov
pop
and
jmp
or
pop
mov
inc
sbb
loope
cmp
add
das
or
pop
add
loop
xor
leave
inc
jo
cli
pop
je
push
sar
call
add
pop
mov
std
dec
ins
add
imul
imul
mov
cmp
mov
(bad)
data16
or
das
aaa
pop
loopne
arpl
daa
jmp
add
xchg
or
fidiv
push
loop
push
or
add
stc
adc
shl
(bad)
pop
push
sar
shl
lods
in
dec
cld
sub
inc
and
mov
adc
fwait
jno
fdiv
outs
and
imul
cmp
mov
xor
in
xor
mov
or
jb
or
sbb
shl
pusha
rol
jmp
dec
and
sbb
push
or
xor
js
jl
and
sbb
add
mov
scas
nop
or
andnps
mov
mov
sbb
mov
add
or
mov
int
adc
into
(bad)
into
call
cmp
stos
outs
jno
mov
or
add
cmp
hlt
push
or
sbb
sub
push
jl
push
jmp
xchg
add
sbb
mov
call
xchg
sar
ret
lea
sbb
retf
cmovle
hlt
test
push
adc
hlt
mov
outs
dec
sbb
scas
je
arpl
bswap
fs
push
ds
ins
xor
(bad)
ret
movs
das
sub
add
cmp
dec
push
ins
int3
std
inc
js
and
sub
mov
push
je
in
fs
sub
dec
ja
mov
sub
push
add
loopne
inc
int3
sar
ins
and
jns
or
retf
add
dec
sub
push
call
mov
adc
or
stos
inc
sub
dec
or
fadd
pop
or
loopne
jmp
fld
xor
xchg
(bad)
xor
xor
aas
cld
stc
jne
loopne
add
inc
sbb
sub
or
or
push
push
ret
sbb
repnz
jg
fadd
dec
in
stos
push
and
adc
add
cmp
add
sbb
or
retf
lock
cmps
push
fisub
pop
inc
jo
xchg
iret
or
or
inc
test
pop
jmp
fidiv
scas
sbb
imul
inc
pop
sbb
sub
hlt
icebp
add
outs
pop
fiadd
jne
pop
(bad)
in
ret
inc
scas
call
or
icebp
jns
imul
mov
or
cs
xor
add
mov
inc
jo
sbb
pop
aam
cmp
pop
adc
sub
add
shr
fsubr
pop
cmp
loopne
xchg
iret
or
mov
adc
sar
hlt
out
lock
arpl
push
xchg
add
pop
pop
xor
dec
outs
mov
xor
xchg
pop
jne
adc
sbb
push
add
clc
jo
mov
js
mov
pop
cmp
xchg
inc
or
jo
inc
or
in
and
sub
xchg
inc
dec
repnz
lods
imul
nop
retf
xchg
jle
jne
add
jmp
fcomp
jnp
call
test
cmp
pop
outs
and
inc
jmp
nop
outs
sete
and
mov
or
sbb
pop
mov
dec
mov
dec
es
or
pop
cmp
cli
inc
or
mov
je
xchg
cwde
or
shl
sbb
push
dec
push
pushf
add
or
xchg
sbb
xor
mov
movs
xor
xor
cmp
mov
and
cmp
jp
imul
xchg
test
and
sahf
xor
mov
or
retf
shl
add
jle
in
add
imul
push
fmul
dec
xchg
sti
aas
sbb
adc
jmp
popa
movs
pop
or
push
pushf
test
pusha
jns
sbb
sub
popa
adc
dec
push
and
cmp
mov
sbb
or
sbb
mov
mov
rol
sbb
mov
mov
call
inc
jmp
adc
(bad)
das
sbb
sbb
adc
inc
xchg
sbb
out
adc
mov
pop
and
rcr
shl
and
xchg
in
in
sbb
fisubr
cs
xchg
cmp
adc
test
push
ror
(bad)
gs
cdq
push
adc
inc
adc
push
inc
adc
mov
sub
test
call
or
sar
rol
clc
jo
add
add
ret
cmp
add
add
mov
sbb
mov
mov
out
xor
loope
arpl
adc
loopne
mov
lock
mov
mov
mov
fimul
ret
jo
push
cmp
add
jns
sahf
std
mov
dec
ss
hlt
pop
mov
outs
test
inc
inc
sub
test
imul
and
mov
fdivr
lea
retf
dec
fild
push
xor
aaa
ins
jo
jns
push
in
loope
xor
lea
(bad)
(bad)
mov
ficom
test
add
retf
enter
mov
pusha
sbb
xor
adc
add
or
test
jle
pop
xor
dec
jge
in
jns
xor
into
mov
push
cmp
dec
mov
push
sub
xor
(bad)
dec
mov
jmp
lea
sar
and
(bad)
sbb
adc
lock
bound
sub
add
xor
or
rol
push
sbb
fsubr
sub
cmp
cmp
adc
jge
push
push
cmp
jle
push
popa
jo
or
sub
cmp
pusha
cli
call
dec
and
cmp
push
dec
fisttp
jl
popf
xor
adc
shr
scas
sbb
jb
pop
test
pop
hlt
(bad)
call
shl
mov
sbb
mov
and
sbb
xchg
and
or
rcr
inc
inc
xchg
adc
push
cwde
and
push
cmp
sub
scas
lea
scas
dec
(bad)
mov
sub
les
shl
aas
int3
push
aad
loope
sub
ins
daa
mov
or
cmp
ins
mov
out
sub
fiadd
add
stos
das
or
add
push
int3
lods
or
sbb
enter
or
and
repnz
mov
or
mov
ds
push
dec
jecxz
or
add
pop
mov
outs
or
in
push
push
xchg
pop
mov
rol
bound
adc
add
cmp
inc
cs
shl
push
sub
mov
push
ss
or
push
xor
mov
dec
sub
and
mov
add
mov
ja
push
push
sbb
outs
clc
push
mov
sar
out
or
or
je
add
sti
xchg
mov
sub
cmp
sar
mov
gs
das
gs
dec
and
cmp
(bad)
iret
(bad)
(bad)
mov
jg
out
(bad)
mov
and
sbb
adc
jl
add
cmp
jmp
push
movzx
mov
mov
mov
xor
repz
or
sbb
adc
xchg
sub
lds
dec
sub
ins
jno
and
mov
js
imul
shr
mov
rol
or
cmp
push
xchg
bswap
sub
xor
and
or
pop
push
daa
mov
jbe
or
mov
ror
mov
xlat
out
xor
outs
or
cli
mov
xchg
in
xchg
lds
push
jl
inc
xor
cmps
test
mov
dec
mov
push
or
clc
add
push
cli
adc
or
pop
pusha
mov
jp
fdivp
dec
mov
int3
sar
test
adc
or
inc
(bad)
mov
cmp
ret
aas
jl
mov
into
mov
push
(bad)
test
xchg
mov
das
rcl
fmul
inc
inc
add
scas
push
mov
lea
pop
or
adc
and
retf
and
or
ss
add
and
jle
xor
add
xchg
mov
inc
ins
xor
mov
nop
call
test
cmovo
stos
inc
sbb
sub
and
sbb
jmp
mov
sbb
sahf
int3
xor
cld
dec
fs
push
xchg
call
push
mov
mov
mul
(bad)
sbb
imul
cmp
inc
xchg
test
int
(bad)
in
test
in
frstor
int3
out
xchg
inc
imul
mov
fsubr
xchg
jmp
jecxz
push
dec
je
push
inc
add
dec
jbe
pusha
mov
push
or
push
je
popa
dec
and
test
mov
jg
(bad)
or
outs
or
jmp
inc
sbb
je
add
xlat
and
push
xor
mov
and
imul
jbe
jge
cdq
adc
push
push
loope
sub
push
imul
add
xor
add
add
cmp
inc
pop
adc
fiadd
mov
shl
shl
push
jl
and
add
mov
adc
js
mov
cli
xchg
add
mov
add
and
add
push
ds
jo
mov
pop
mov
outs
sub
(bad)
push
mov
std
push
xchg
xchg
jge
cmp
mov
add
das
mov
mov
add
adc
sbb
aaa
sub
adc
jle
jle
aam
gs
mov
pusha
or
fnstsw
sbb
pop
stc
push
test
dec
add
add
ror
jo
jmp
sub
and
or
ds
sub
sbb
cmps
in
cwde
sbb
cld
clc
jl
int3
push
loope
in
push
enter
bound
dec
mov
xlat
inc
fsubrp
imul
xchg
popa
mov
jo
inc
ror
daa
push
mov
jl
loop
test
and
loope
addr16
inc
xor
pop
mov
sbb
out
jl
fsub
inc
enter
jl
inc
loopne
ja
call
scas
pop
jne
fdivr
mov
in
ret
and
das
fdiv
or
jp
push
sbb
cmp
loopne
sbb
test
add
mov
or
enter
sub
(bad)
fld
cmp
iret
add
pop
jl
fs
mov
mov
xchg
and
mov
lds
dec
lea
out
dec
js
imul
mov
popa
out
fcom
pusha
js
jp
call
pusha
push
in
sbb
setg
and
mov
jne
lea
fs
push
sahf
adc
jp
rol
pop
add
movs
(bad)
mov
xor
mov
push
xor
xchg
je
cli
movs
mov
icebp
mov
mov
pop
or
push
push
sub
sbb
daa
clc
push
ss
out
mov
sbb
fdivr
lock
ret
mov
adc
or
mov
cmp
rcr
add
les
xor
push
mov
aam
mov
push
lds
xor
lock
push
nop
mov
add
inc
in
pop
hlt
lea
sub
add
pop
jmp
mov
mov
inc
in
add
cmp
cmp
adc
out
mov
sub
in
lea
aam
inc
call
lock
ds
jne
inc
inc
mov
in
xor
mov
jb
ins
in
mov
or
sbb
inc
xchg
inc
(bad)
(bad)
ret
xchg
xchg
push
fimul
shl
outs
push
or
icebp
je
mov
add
ret
jg
scas
pusha
add
add
sbb
fucomi
sbb
mov
and
test
mov
push
dec
lock
jae
pavgb
aam
pop
sub
sbb
dec
jbe
or
sub
sub
dec
mov
cmps
jg
sar
inc
sub
jo
out
inc
and
mov
stos
push
add
or
xchg
(bad)
in
pusha
xchg
loope
stos
inc
mov
aaa
imul
add
or
loopne
sbb
inc
rcr
lea
sub
jge
(bad)
mov
shr
fsubr
pop
data16
sub
push
mov
test
out
push
lea
jg
adc
pop
aam
leave
ss
out
and
mov
mov
dec
ret
sub
mov
mov
inc
push
dec
and
ret
sub
mov
ficom
xor
pushf
inc
push
loopne
popa
jo
or
fs
inc
jbe
sbb
or
ss
call
sub
mov
ja
loope
pusha
clc
unpcklps
(bad)
cwde
push
jl
jmp
mov
xlat
mul
(bad)
or
je
dec
and
fisttp
push
cs
cmp
cmps
sti
ror
mov
jge
pop
mov
adc
dec
sbb
outs
cmp
test
add
fiadd
mov
mov
shl
lea
pop
cmp
je
inc
mov
jmp
movs
adc
or
clc
shl
or
pop
clc
pop
xchg
ss
or
dec
xchg
jo
inc
push
xchg
jle
leave
cmp
jne
or
push
xor
cmp
mov
pop
loopne
mov
inc
sbb
jecxz
mov
adc
jge
(bad)
bndstx
sahf
mov
inc
push
rcl
jmp
pop
xor
xchg
xchg
hlt
mov
outs
call
sbb
jle
push
retf
pusha
shl
jo
ret
(bad)
enter
ins
icebp
in
cmp
dec
or
cmp
pop
or
adc
(bad)
vpunpckhbw
cmp
sahf
lea
cmp
jmp
add
fs
push
mov
in
mov
pop
or
mov
rol
or
inc
push
lds
cmp
jg
jne
push
mov
or
movs
fs
adc
loope
sbb
mov
add
sbb
retf
add
mov
lds
inc
inc
or
mov
pop
push
(bad)
sahf
adc
(bad)
test
addr16
and
(bad)
jle
sbb
sbb
scas
pop
adc
cmp
or
cmps
mov
sub
pop
popa
xchg
aas
ret
mov
mov
inc
mov
inc
xor
pop
xor
aam
adc
jo
push
loope
inc
lahf
dec
jp
mov
or
sub
or
int3
sub
mov
push
dec
dec
xor
adc
inc
adc
inc
and
lds
cmp
movs
call
xor
scas
adc
movs
test
(bad)
in
push
and
pop
repnz
cmp
cli
and
out
add
outs
jo
aad
js
enter
out
inc
add
je
inc
mov
dec
or
mov
sub
scas
sbb
xchg
rcl
or
iret
and
(bad)
test
imul
or
jmp
outs
pushf
bound
lock
mov
rcr
add
ja
mov
xor
inc
jmp
(bad)
sti
cdq
push
sbb
lds
inc
cmp
in
nop
xchg
or
sar
adc
sbb
push
push
inc
es
sub
lea
loop
or
fistp
iret
sub
and
arpl
call
xor
xor
mov
in
lea
pop
dec
test
push
mov
call
mov
jo
mov
pop
pushf
dec
(bad)
or
xor
inc
sub
cli
add
jle
xor
inc
sbb
mov
test
js
mov
test
daa
mov
inc
pop
daa
add
jg
pop
mov
jmp
add
outs
aam
jae
sar
or
sub
cdq
adc
dec
xor
adc
stos
in
pop
out
sbb
and
add
sub
or
inc
je
inc
sub
add
inc
and
mov
dec
jmp
mov
ss
sub
add
or
enter
or
mov
cmp
mov
jbe
ret
add
retf
jae
push
mov
sbb
je
dec
in
jbe
mov
push
jmp
pop
and
mov
jl
lea
or
add
call
and
xor
jae
adc
mov
cmp
jb
fnstcw
pop
push
xor
(bad)
adc
or
inc
push
add
pop
pop
imul
cwde
jno
rcr
loope
popa
mov
ror
les
dec
scas
jne
mov
mov
sbb
bound
in
mov
adc
mov
daa
cwde
mov
or
cmps
out
push
push
dec
jo
dec
outs
or
shr
push
loopne
jge
pop
mov
adc
inc
mov
adc
pusha
ins
imul
lock
pop
pop
mov
sbb
ret
retf
push
xor
xor
movs
xor
inc
les
pcmpeqb
lea
mov
mov
icebp
sbb
sti
adc
pop
hlt
mov
mov
sti
cdq
adc
add
(bad)
inc
jecxz
inc
xchg
js
inc
jo
je
add
push
or
dec
or
ins
jnp
inc
jmp
shr
mov
mov
add
mov
das
(bad)
test
icebp
add
inc
shl
mov
shr
daa
jo
loop
add
bound
enter
adc
les
(bad)
fmul
push
xchg
push
inc
xchg
mov
mov
test
and
adc
sub
xchg
test
push
jo
jmp
jmp
int3
cmp
bound
sbb
push
(bad)
int3
jne
in
call
xchg
adc
push
iret
pop
jns
int3
adc
push
dec
pop
pop
cld
loop
nop
hlt
lea
rcr
mov
adc
aas
adc
lea
jmp
mov
xor
add
fcomp
cmp
push
add
mov
fmul
pop
adc
or
add
cmp
jo
(bad)
sbb
imul
repz
sbb
jmp
ret
pop
and
xor
adc
daa
(bad)
push
add
leave
push
or
cmp
jbe
es
add
adc
xor
xor
sbb
add
cmp
out
(bad)
push
mov
call
mov
lock
push
jge
add
add
push
ins
jo
(bad)
push
jo
pop
mov
js
pop
cmp
mov
icebp
fcomp
jp
sbb
push
js
add
fisubr
call
xchg
jmp
inc
enter
ja
add
sub
add
mov
inc
add
pusha
stos
rcr
int
sub
sbb
out
or
or
and
nop
pop
out
aaa
js
jl
int3
adc
xor
inc
fimul
(bad)
or
or
movs
mov
pusha
xor
jl
inc
fist
mov
cmps
xor
les
add
cwde
adc
sbb
xor
lods
sbb
mov
scas
or
ds
pop
fcmovb
jo
or
jl
and
mov
ret
in
ret
pop
(bad)
lea
push
data16
out
int
aam
adc
add
xor
sti
adc
inc
nop
inc
inc
cmp
mov
ret
add
ret
call
jb
mov
jns
movs
adc
and
add
add
rcl
adc
cmp
jge
std
call
adc
add
test
mov
mov
push
shl
sbb
dec
push
ja
fdiv
fdiv
neg
fdivr
jo
jl
inc
repz
xchg
ficom
mov
loopne
push
loopne
inc
add
ret
pop
aas
jbe
pop
adc
push
paddb
and
sbb
push
cmp
jle
cmp
stos
mov
push
add
jmp
and
ror
pushf
inc
adc
pusha
nop
lahf
mov
mov
or
mov
adc
sar
scas
js
mov
mov
sub
inc
stos
out
push
inc
add
add
push
push
sbb
icebp
enter
and
and
repz
icebp
into
push
sti
fdivr
inc
pop
shl
sub
add
mov
loope
fimul
sbb
mov
push
mov
sbb
add
jecxz
or
sbb
push
repnz
or
add
sbb
cmp
mov
sti
call
sub
or
jb
or
jmp
and
mov
push
mov
ret
mov
ins
int
fisttp
jmp
sub
je
imul
mov
add
es
adc
cs
je
add
out
outs
add
sub
je
cdq
int
loopne
cmp
adc
je
jle
push
and
mov
jo
arpl
idiv
add
imul
rol
push
mov
cmp
jl
test
mov
sbb
test
mov
sahf
pop
add
(bad)
inc
xor
mov
add
test
and
jne
lock
ds
push
jmp
add
imul
jne
int3
leave
mov
jbe
mov
jns
sbb
or
dec
sub
dec
inc
pusha
popa
stos
dec
dec
js
sbb
add
mov
mov
or
jl
into
xor
imul
cs
xor
sbb
ret
lods
mov
arpl
mov
adc
jge
imul
inc
adc
shl
mov
jle
dec
cmp
jge
inc
in
adc
cmp
cmp
inc
dec
fist
fcmovne
lods
test
jl
psllq
xchg
fsubr
xor
ss
shr
sbb
(bad)
call
push
push
add
fnstenv
xor
(bad)
pop
mov
cdq
test
les
inc
pushf
ret
mov
cmp
xchg
adc
xor
jae
(bad)
jbe
mov
add
xchg
js
sbb
cmc
lea
push
shl
mov
cli
loope
call
sti
loop
mov
add
dec
dec
loop
inc
(bad)
pop
jae
add
add
add
aam
test
sti
int3
repnz
pop
aam
push
and
and
xor
add
push
in
add
mov
push
push
and
adc
lahf
inc
and
and
sub
mov
pop
jmp
jmp
(bad)
enter
lds
xchg
push
sbb
sbb
push
inc
cmp
jo
sub
push
mov
pop
mov
adc
ss
or
call
dec
sbb
frstor
movs
ds
popf
dec
rol
add
(bad)
(bad)
int
mov
jnp
pop
retf
sub
jge
dec
sbb
rol
cmp
test
in
dec
in
jbe
clc
ja
into
and
push
rcl
out
or
es
pop
lock
sbb
fld
fadd
fistp
ror
mov
jg
add
jl
test
cmp
xchg
adc
sbb
mov
cmp
std
cmp
push
adc
(bad)
dec
adc
or
jne
push
or
xor
loopne
add
je
adc
fcom
mov
mov
xor
xchg
sbb
push
bswap
test
mov
or
xor
lock
xchg
mov
pusha
lock
daa
dec
xor
xchg
mov
push
adc
push
jno
test
test
ja
pop
shl
sahf
xor
outs
ret
adc
hlt
cs
aaa
mov
and
div
sub
pop
out
inc
cs
mov
mov
push
jne
maxps
mov
inc
nop
sbb
sti
add
icebp
loopne
call
lahf
shl
jo
cmp
fiadd
retf
adc
mov
mov
inc
inc
jns
inc
adc
jmp
cmp
jl
xlat
lock
inc
mov
pop
inc
or
lods
cmps
xchg
loope
mov
mov
shl
add
mov
lock
movs
mov
push
outs
lods
lock
pop
jecxz
jl
add
sar
stos
retf
retf
data16
lods
loope
neg
cmp
jmp
adc
mov
xor
add
mov
int3
pop
push
popa
or
add
test
push
jmp
sahf
popa
jo
jmp
mov
jg
lock
and
fidivr
cmp
sbb
dec
mov
jmp
int3
and
fsub
jne
jle
push
cmp
sti
(bad)
test
dec
adc
add
mov
inc
hlt
xor
mov
(bad)
mov
mov
jo
inc
js
and
mov
inc
mov
popa
push
loopne
sbb
fmul
sbb
jbe
jge
add
sbb
cld
sar
(bad)
ds
push
mov
mov
movzx
add
inc
and
sub
push
clc
mov
and
jmp
ja
adc
push
mov
loopne
inc
in
dec
ror
lahf
cwde
in
mov
xor
mov
jle
neg
and
nop
adc
pop
adc
test
dec
push
jo
add
push
jne
test
jbe
cmp
les
inc
xor
adc
inc
sbb
mov
push
inc
rcl
inc
dec
sbb
les
ja
inc
sub
cmp
or
dec
cmps
jl
xor
das
aaa
jno
add
ret
fs
loopne
ror
push
sbb
fdivr
jge
mov
sub
mov
shl
popa
mov
pop
sbb
cwde
xor
(bad)
ror
inc
int3
xor
or
or
jge
scas
adc
or
xor
xor
loopne
ret
cwde
push
mov
(bad)
pop
lock
loop
cmp
push
pusha
mov
call
add
fmul
hlt
pop
mov
inc
add
inc
jp
loopne
ror
add
push
lock
loopne
shr
jl
and
loope
or
ss
xor
call
dec
ret
nop
xchg
adc
jno
lods
push
pop
add
mov
mov
jae
sub
adc
pusha
mov
or
int3
fist
cmp
and
xchg
dec
sbb
adc
sar
and
cmp
push
mov
shl
pop
mov
test
ss
jns
adc
xor
cmp
jge
adc
mov
fcom
push
ins
push
or
mov
push
inc
stos
lea
pop
popa
xor
or
sub
cmp
call
mov
inc
xor
inc
movs
lahf
call
inc
and
push
stos
ja
pusha
or
bound
cmovge
and
sub
add
adc
(bad)
mov
sub
inc
mov
inc
cmp
enter
dec
and
sub
mov
pop
sbb
push
enter
pusha
mov
xor
mov
xor
mov
cmp
ins
fcom
cwde
sbb
fistp
add
ror
sub
mov
enter
dec
lods
imul
add
xchg
es
add
add
inc
add
retf
jmp
sub
adc
dec
xor
inc
lock
or
rcr
sbb
in
add
inc
test
push
outs
sub
jmp
ins
movsx
add
inc
add
mov
scas
lods
pop
out
and
adc
xor
mov
pop
sub
fstp
dec
add
dec
add
or
mov
loop
shl
rcr
jne
dec
retf
mov
cmp
ja
outs
jmp
mov
dec
and
pusha
rcl
out
cmp
js
sahf
mov
cli
add
jmp
aas
mov
outs
in
je
push
mov
and
test
mov
push
push
push
push
mov
add
ins
xor
or
or
fwait
clc
sub
call
mov
in
clc
ds
inc
retf
inc
push
lods
or
mov
adc
xchg
test
dec
pop
sub
jb
je
dec
je
mov
push
arpl
popa
jecxz
jns
push
jb
dec
cmp
nop
arpl
scas
push
test
je
cmp
jne
dec
pusha
sbb
dec
sbb
sbb
fimul
not
jmp
dec
test
push
mov
xor
sub
inc
dec
push
pusha
mov
lea
add
mov
lds
mov
aad
adc
fs
and
pop
add
mov
ds
call
xchg
and
jae
add
push
or
or
sbb
pop
pop
jo
dec
xor
add
xchg
mov
aaa
outs
or
out
mov
cmp
lock
dec
arpl
and
out
jnp
add
pushf
shl
mov
add
arpl
cli
push
es
add
dec
jp
clc
test
jbe
clc
pop
or
sar
sar
shl
div
and
xchg
add
sub
inc
add
adc
inc
pop
xchg
fidivr
test
movs
dec
jo
(bad)
popa
and
sbb
les
cli
dec
jmp
mov
jle
adc
inc
sti
jo
cmp
jge
js
jle
nop
fidiv
and
jg
mov
pop
push
adc
frstor
dec
push
lea
or
dec
ja
mov
jo
mov
dec
push
sbb
inc
cmp
nop
sbb
daa
push
sbb
or
into
jo
mov
fidiv
xchg
push
sbb
adc
cmp
(bad)
int
xchg
jle
push
sub
xchg
fs
or
stos
pop
inc
mov
or
cld
cmp
adc
aas
push
and
sub
add
cld
xor
(bad)
lock
cmp
add
test
test
sbb
xor
in
jge
cmp
jle
inc
aas
mov
sbb
lea
data16
pop
mov
mov
jl
fdivr
sub
sub
out
dec
xchg
mov
or
std
in
dec
inc
sbb
mov
jge
add
push
test
adc
mov
loope
or
imul
pop
or
xor
add
imul
bound
imul
call
cs
sar
je
jle
out
cmps
inc
mov
fst
cmp
and
fucomp
das
cmp
or
retf
push
sub
fisttp
das
loopne
add
sbb
add
enter
movs
loope
mov
cwde
ffree
cmp
les
cmp
fnstsw
or
fst
sbb
out
mov
pop
or
scas
push
cmps
outs
xor
mov
add
fcom
imul
shl
sub
cmc
push
sti
aaa
cwde
mov
imul
mov
add
xor
add
fimul
sub
sbb
inc
inc
jle
sbb
jo
inc
sti
jg
rol
adc
or
lock
cmp
out
out
addr16
push
pop
and
dec
sbb
dec
pusha
add
push
scas
mov
pop
push
loope
jge
jne
test
(bad)
mov
xchg
and
movs
jmp
pop
rol
ror
ror
xchg
adc
jmp
adc
inc
push
push
sub
or
or
call
cwde
inc
sub
loop
int3
ror
sti
dec
sub
int3
pop
xor
sbb
dec
ins
push
cs
or
dec
or
stos
push
js
test
push
hlt
jge
cli
inc
sub
pop
je
dec
je
jmp
xchg
add
ins
sti
cmps
test
inc
mov
jmp
es
fadd
inc
xor
sub
jmp
adc
sbb
push
xor
rcl
inc
mov
mov
push
(bad)
rol
aam
cmp
add
cmp
mov
cwde
xchg
or
dec
push
or
and
scas
add
jp
or
dec
xchg
jb
pushf
ret
mov
(bad)
mov
je
xchg
mov
jg
div
leave
lods
mov
fwait
jle
pop
sar
add
jae
jl
test
rcr
mov
add
and
shl
cmp
mov
call
add
sar
sbb
sbb
and
test
test
add
xor
movs
sar
mov
add
call
shl
fisub
xchg
imul
dec
shr
sbb
fsub
(bad)
mov
dec
mov
rol
jo
aas
pop
loope
push
fadd
(bad)
mov
dec
pop
mov
(bad)
push
test
retf
dec
adc
dec
jg
cmp
push
mov
add
push
pop
jmp
adc
xchg
test
sub
(bad)
cs
mov
jmp
jmp
scas
enter
sub
cmp
mov
out
add
and
je
mov
xor
test
(bad)
sub
or
xchg
in
cli
inc
es
stos
xchg
enter
push
or
fisttp
push
clc
push
call
ret
fisttp
aam
jg
and
push
cmc
loope
mov
jo
cmp
push
rcl
(bad)
jmp
movs
cmp
dec
ror
and
outs
xchg
ret
sub
push
mov
cs
cmp
loope
mov
cmp
xor
movs
lods
call
cmp
mov
inc
clc
jge
imul
sub
sub
push
scas
lock
sbb
inc
pop
mov
repz
xor
in
jp
pop
dec
clc
and
jg
sbb
daa
or
xchg
cdq
out
or
ror
sbb
ins
add
call
jae
inc
popa
inc
and
jg
fadd
dec
xchg
outs
push
dec
ficom
mov
cmp
jge
or
sub
fwait
cmp
cmc
inc
ror
into
or
retf
jb
lds
sub
jg
mov
inc
mov
inc
xchg
cmp
shl
add
mov
hlt
push
bound
xchg
out
lahf
lea
dec
adc
cli
sub
add
(bad)
jo
loope
fidiv
adc
adc
and
mov
sbb
push
mov
xor
jmp
sar
adc
xchg
dec
mov
inc
hlt
pop
adc
pop
ds
sub
lea
cmps
jo
inc
scas
pop
cmc
scas
push
add
push
mov
adc
dec
adc
retf
lds
mov
add
sub
push
(bad)
hlt
adc
mov
out
call
jb
cs
dec
or
enter
data16
sbb
gs
or
pop
shl
pop
xchg
lods
push
jne
enter
xor
mov
outs
add
loopne
pop
add
mov
cmp
inc
or
loopne
pop
jge
mov
call
in
in
mov
mov
sub
(bad)
sub
adc
mov
adc
out
ins
and
dec
gs
jmp
sub
adc
sar
push
pop
push
or
dec
inc
add
shl
shl
mov
jp
(bad)
jl
or
cmp
ret
fcom
mov
mov
mov
sbb
jns
xchg
mov
bound
gs
mov
dec
cmps
in
aam
mov
add
nop
dec
mov
or
push
test
mov
inc
mov
out
pop
xor
add
out
inc
cmp
jl
add
dec
push
push
mov
jo
push
bound
shl
in
adc
push
xor
movups
sbb
daa
push
cmp
neg
loopne
in
in
jbe
(bad)
sti
pop
push
hlt
mov
inc
in
mov
inc
sar
mov
sar
outs
frstor
int
mov
jbe
xchg
pop
icebp
cli
push
or
cmp
sbb
in
retf
pop
call
jl
mov
add
mov
sub
ja
jg
inc
cmp
mov
mov
aaa
xchg
rcr
sahf
dec
clc
test
jmp
mov
push
call
ss
push
lods
cmp
test
fcmovbe
push
mov
inc
sbb
jp
sbb
lods
push
pushf
jb
cwde
mov
inc
cmp
xchg
adc
int3
inc
pop
inc
pushw
es
aas
dec
xchg
push
cmp
sub
jns
dec
mov
aas
and
push
mov
and
add
test
cmp
push
or
or
mov
pop
lods
mov
adc
inc
and
and
popa
pop
push
ja
mov
lock
pop
dec
jle
mov
add
cmp
add
inc
mov
retf
sahf
mov
add
adc
xchg
inc
xor
ins
fisttp
add
push
push
inc
xchg
sbb
cs
push
sbb
jl
add
ficomp
cmp
sar
and
rol
(bad)
sbb
xchg
mov
adc
add
int
adc
inc
mov
push
test
lods
mov
fwait
add
adc
xchg
cmp
adc
int3
jne
xor
add
inc
xor
call
lods
mov
(bad)
push
mov
clc
les
(bad)
out
jne
jo
push
push
sub
into
test
std
jmp
sbb
bound
mov
dec
mov
imul
mov
or
xchg
clc
pushf
sub
mov
dec
push
mov
(bad)
(bad)
data16
mov
cs
push
adc
jge
lods
or
cwde
cmp
fwait
inc
sti
push
fadd
lock
(bad)
adc
push
sbb
sbb
cwde
xor
xlat
nop
push
retf
aam
push
shl
cmps
push
push
inc
loopne
adc
xchg
sahf
test
mov
je
push
movs
mov
fs
pop
ja
lods
test
call
dec
or
adc
ret
push
rol
mov
not
jecxz
mov
mov
adc
push
inc
pop
imul
ror
add
push
add
out
xor
data16
neg
neg
div
clc
mov
mov
pushf
add
push
clc
adc
sbb
push
jne
push
in
xor
cmp
jmp
xor
pushf
pop
dec
fistp
mov
jg
pop
inc
pop
add
add
rol
and
sub
aaa
imul
mov
or
shr
inc
cmc
pop
inc
push
dec
jle
pop
fldcw
cmp
shl
jmp
inc
or
js
sub
jbe
imul
jne
stc
ss
outs
adc
push
call
mov
loop
inc
ret
test
jmp
pushf
pusha
test
jp
xchg
jb
add
mov
mov
jo
dec
cmp
adc
xor
inc
and
xchg
inc
js
or
loope
cmp
(bad)
sbb
sbb
push
add
or
adc
setle
jmp
dec
sbb
test
add
out
xchg
mov
or
mov
mov
clc
jns
mov
push
sub
pop
jmp
xchg
je
das
push
adc
jno
sbb
mov
sub
and
mov
mov
sbb
sahf
ins
test
xchg
sub
xchg
pop
xchg
test
pop
out
or
xchg
or
push
imul
clc
sub
scas
mov
mov
inc
adc
mov
add
pop
add
loope
es
call
rol
ret
loopne
mov
and
mov
adc
ins
pop
(bad)
fcom
jo
or
dec
es
adc
mov
jo
adc
or
sbb
mov
xchg
mov
fcom
jmp
push
mov
fimul
push
mov
arpl
mov
cmps
rol
sti
mov
scas
ins
mov
jle
push
mov
adc
pop
mov
ror
ins
xor
jae
jl
test
xor
int
push
jg
mov
cmp
and
mov
pop
movs
mov
add
cmp
je
inc
ja
ja
add
dec
js
test
inc
cld
bound
sub
or
out
mov
push
adc
shl
cmps
adc
(bad)
repnz
inc
pop
fstp
jmp
in
out
aas
mov
aad
fs
loop
fcom
in
or
sbb
adc
mov
cmp
jl
jp
aaa
sub
stc
cmp
or
int3
push
div
cmp
push
outs
or
jnp
mov
pop
aaa
push
xor
inc
push
rol
pop
movs
mov
js
repnz
clc
mov
sbb
retf
lods
cmc
lock
or
xchg
adc
data16
nop
xchg
pop
or
js
jae
add
or
cmp
or
jle
mov
mov
sub
scas
push
xchg
mov
and
mov
ins
dec
and
sbb
sbb
or
add
jb
lock
or
je
pop
xor
ins
imul
retf
xor
retf
lock
jno
aaa
loope
cwde
(bad)
repz
ret
fdiv
mov
mov
mov
push
fdiv
lea
inc
(bad)
push
sbb
pop
cmp
dec
adc
mov
cwde
xor
sbb
sti
add
dec
cld
jmp
lea
sub
(bad)
scas
out
test
mov
jmp
add
je
jmp
push
div
scas
or
mov
jg
cli
imul
inc
jo
or
jge
fdivr
add
mov
call
xor
adc
call
clc
repz
jbe
pop
out
mov
out
popf
pop
les
lea
call
jecxz
push
imul
nop
xor
mov
cwde
inc
clc
push
push
sub
push
pop
dec
or
dec
xor
in
xchg
mov
inc
xor
inc
jb
xor
adc
pop
pop
test
out
out
jp
rcl
lock
cmp
test
sub
adc
add
inc
dec
jb
adc
jb
je
cmp
je
inc
dec
add
push
push
adc
jg
jo
xchg
mov
jb
jo
sub
call
push
mov
dec
cmp
or
xchg
outs
xor
pusha
ret
jo
or
shr
jo
cli
xlat
jb
test
cmp
ins
dec
add
sahf
icebp
xor
inc
sub
nop
push
dec
mov
not
push
push
jae
pushf
inc
pusha
enter
mov
cli
push
add
outs
jb
dec
mov
fadd
push
lds
ins
jmp
mov
push
xor
fist
mov
adc
cmp
add
push
inc
ror
push
ins
imul
ret
xchg
push
les
arpl
xchg
leave
push
mov
out
cmp
pop
nop
out
aas
test
lds
add
lods
sbb
jmp
dec
clc
push
dec
and
(bad)
mov
aam
sbb
inc
and
mov
test
lea
mov
fisub
or
lock
mov
xor
sbb
push
mov
les
push
sbb
pop
xchg
stos
cwde
mov
inc
dec
fs
dec
js
push
mov
adc
ret
in
nop
pop
mov
or
mov
jle
or
outs
je
in
pusha
hlt
stos
js
fmul
or
mov
lock
xchg
fsubr
test
add
rol
pusha
dec
and
leave
xchg
or
bound
xor
cmp
je
xor
add
pop
ja
shr
push
xchg
lods
and
loop
push
pop
inc
lds
rol
push
and
mov
les
sbb
add
xor
jmp
ror
jle
in
ret
lea
dec
sbb
push
inc
fs
pop
popf
or
add
or
push
mov
jae
xor
add
shr
cmps
sub
add
mov
or
add
add
lods
xor
sub
retf
jbe
shl
or
gs
or
loopne
fcom
or
hlt
jge
pop
shr
dec
mul
fdivr
cmp
sbb
sar
es
jnp
inc
dec
jl
dec
pusha
add
adc
cwde
dec
in
(bad)
cdq
add
jp
mov
ins
cmp
jl
sahf
and
xchg
sbb
pop
fsubr
loop
clc
add
(bad)
mov
push
adc
jbe
sbb
jo
or
and
push
cmp
inc
std
cmp
add
add
jbe
push
fist
adc
mov
pop
mov
mov
test
test
dec
xlat
and
or
sbb
pushf
mov
mov
pop
jmp
mov
hlt
imul
enter
push
push
enter
sbb
dec
sbb
iret
xor
pop
jno
mov
aaa
scas
push
and
sbb
jg
and
pop
mov
jbe
push
daa
jnp
push
dec
call
or
push
xor
(bad)
(bad)
pop
loop
fild
jns
fsubp
sbb
mov
ins
add
test
jo
dec
ret
mov
pop
sub
mov
shl
icebp
in
sbb
add
out
lea
or
jg
cmps
scas
push
inc
inc
inc
ret
xor
loopne
mov
adc
mov
outs
xchg
(bad)
sub
lea
je
sbb
cmp
sbb
mov
cmp
or
adc
outs
cli
(bad)
dec
loop
push
and
or
push
test
outs
aas
sti
fild
(bad)
(bad)
test
call
stos
cs
test
fbstp
mov
pop
(bad)
push
das
add
sar
mov
jb
js
ficomp
push
pop
loopne
jle
cwde
popf
mov
and
lods
daa
xchg
xchg
mov
sub
daa
mov
xchg
push
jbe
cld
mov
ror
(bad)
mov
fild
xlat
retf
fidiv
inc
or
push
jg
jns
pusha
and
xchg
pusha
and
push
les
push
test
out
shl
xchg
fiadd
jp
jae
adc
mov
sbb
data16
test
mov
push
lods
add
cmp
test
push
push
adc
push
in
hlt
xor
cmp
jmp
div
jo
repz
push
push
adc
and
(bad)
sub
push
fwait
mov
je
jbe
sbb
sbb
cmp
xchg
mov
mov
xchg
mov
push
ins
cmps
mov
mov
add
mov
add
das
faddp
rcr
jae
mov
cs
hlt
fmul
inc
cmp
and
pop
cdq
ja
imul
fidiv
(bad)
imul
loopne
cld
scas
and
mov
jo
jae
mov
bound
retf
jns
in
mov
and
cmp
and
adc
add
js
hlt
xor
mov
xchg
jo
push
ror
scas
shr
or
adc
ret
xor
add
adc
inc
mov
mov
cmps
or
mov
pop
fild
cmp
jle
nop
sbb
adc
pop
and
mov
pop
mov
iret
or
add
or
sub
cli
or
jmp
movs
jno
mov
jne
pusha
cmp
and
and
xchg
mov
out
pop
fild
bound
xor
enter
imul
cmps
jl
push
cmp
sbb
cmp
jl
mov
xor
inc
jge
mov
cmps
sbb
stos
push
push
pusha
movs
jo
in
or
sbb
test
and
dec
jmp
and
push
mov
adc
dec
inc
icebp
mov
sub
xor
shr
jae
fcom
mov
(bad)
ins
or
daa
add
add
mov
cs
clc
push
scas
imul
dec
and
dec
retf
mov
mov
push
movs
addr16
cmps
push
sub
xchg
lds
jmp
sub
call
ins
mov
xchg
fs
dec
inc
jno
(bad)
into
ror
inc
daa
dec
ss
adc
test
jo
add
push
scas
jae
cmp
adc
inc
push
fisubr
call
pushf
and
inc
push
push
sub
inc
ss
es
lods
es
inc
adc
cmc
stos
xchg
(bad)
pusha
xor
push
sub
cmp
stos
sub
dec
je
push
and
scas
retf
and
cmp
jecxz
cld
lea
or
pop
ret
sub
dec
test
or
fimul
push
sub
aaa
xor
jp
jp
dec
cld
dec
xor
ret
jmp
dec
nop
sbb
mov
push
int3
push
(bad)
repz
xor
xor
mov
rol
inc
test
(bad)
mov
or
and
daa
mov
jmp
xor
or
jmp
cmp
jl
sbb
and
xchg
push
and
add
push
inc
div
ja
push
pop
out
dec
xchg
jo
in
cld
cmp
ja
mov
jecxz
xchg
push
data16
mov
mov
dec
adc
inc
fs
add
fild
pop
push
mov
push
cmps
test
mov
sub
pop
sub
pop
popa
rcr
leave
test
jl
mov
shr
dec
mov
pop
shl
push
shr
mov
jle
mov
sub
jl
sbb
loopne
arpl
add
jl
pop
rol
mov
mov
dec
sub
into
adc
xchg
test
or
xchg
inc
xchg
loopne
dec
add
mov
mov
inc
push
xor
sbb
fwait
mov
gs
mov
sahf
loopne
add
shr
or
movs
pusha
push
push
imul
add
and
add
ret
call
jo
mov
sti
pop
inc
push
inc
jo
leave
mov
push
sbb
dec
sub
sbb
push
adc
push
add
mov
push
jo
and
scas
leave
sub
dec
je
das
xlat
movs
imul
dec
or
jle
repnz
add
push
lea
daa
sbb
add
jne
xor
dec
push
sbb
cs
mov
xlat
jmp
outs
std
push
fadd
int
cmc
pop
movs
sub
sahf
pop
mov
fild
jbe
sar
inc
and
cmp
ret
or
rol
out
cmp
fimul
sbb
pop
test
cli
and
mov
cli
mov
dec
inc
push
rcr
ror
pop
mov
stc
adc
adc
cmp
mov
das
xchg
inc
dec
inc
clc
mov
es
ret
mov
add
popa
mov
xchg
mov
cld
ds
or
inc
jo
lea
xchg
stos
mov
inc
mov
les
or
pop
mov
mov
inc
or
add
sbb
add
shr
pusha
xor
xchg
lock
push
(bad)
dec
or
push
cmp
adc
or
ret
cs
cmp
jg
or
test
fadd
or
jecxz
adc
and
mov
sbb
int3
fimul
icebp
pop
cmps
fadd
jecxz
add
mov
inc
fdivr
or
fdiv
or
cwde
pushf
xor
daa
out
sahf
add
jb
dec
je
add
jmp
cmp
and
(bad)
cmp
cmp
jne
adc
leave
les
pusha
push
loope
dec
mov
inc
or
pop
mov
sub
dec
push
mov
push
inc
ror
push
mov
xor
mov
xchg
mov
test
push
sbb
inc
inc
addr16
jns
hlt
mov
ds
rcl
sahf
stos
test
ds
adc
adc
cmp
outs
mov
mov
in
dec
xor
push
lea
push
mov
mov
xchg
inc
hlt
push
cwde
dec
and
and
push
xor
ds
adc
test
pop
and
add
test
mov
adc
cs
mov
neg
int
sub
js
push
das
xor
in
nop
adc
and
xor
or
js
adc
sbb
mov
jbe
sub
pop
lock
lock
mov
mov
out
push
or
adc
gs
js
mov
mov
fs
add
lock
dec
mov
dec
inc
push
pop
cmp
pop
aaa
aas
cwde
mov
dec
sub
getsec
jnp
repz
jae
test
jae
jg
daa
xor
pop
sub
cmp
jae
add
inc
je
mov
sbb
mov
and
fimul
mov
inc
cmp
add
lods
add
out
mov
cmp
mov
inc
mov
xchg
xchg
xchg
rol
mov
pop
shr
clc
mov
adc
cli
adc
dec
imul
js
push
bound
fmul
fs
mov
sbb
adc
sbb
inc
ss
retf
ins
cmp
or
lahf
cld
pop
sub
push
mov
bound
or
in
fcom
(bad)
mov
push
dec
jl
in
dec
je
add
sub
je
or
xor
fistp
jmp
jl
stos
xchg
push
xchg
mov
pop
dec
jbe
fsub
add
or
fsubr
ins
add
jmp
adc
jbe
sub
loope
xor
mov
xor
call
into
mov
inc
jmp
jmp
push
add
cmp
into
push
fistp
add
clc
dec
and
dec
pop
in
pusha
xor
xor
mov
rol
aaa
add
jno
dec
sub
sbb
pop
test
and
sbb
sub
lds
or
or
jle
or
add
je
clc
imul
fstp
adc
adc
movzx
int3
out
rcl
add
xchg
clc
inc
jl
dec
scas
mov
out
pop
dec
mov
mov
push
movsx
ffree
cmp
(bad)
and
ret
add
shr
or
rol
xlat
mov
ror
sti
loope
sub
lods
lea
jo
sbb
mov
mov
cmps
jle
(bad)
sub
fstp
fmul
fmul
fstp
jo
jp
cmp
dec
jl
popf
pop
ins
data16
sbb
cmp
sub
pop
add
dec
aam
pop
add
(bad)
test
pop
nop
xor
ja
mov
sbb
xchg
jecxz
test
mov
or
ret
mov
rol
pop
mov
push
push
push
push
pusha
adc
adc
xor
sbb
mov
mov
loope
inc
push
and
sar
popf
mov
adc
inc
pusha
addr16
jg
nop
pop
outs
push
inc
pop
cmp
(bad)
mov
iret
dec
imul
push
push
push
xor
call
push
retf
dec
hlt
jp
pop
cmp
in
jge
psubsb
lock
dec
xor
or
pop
add
mov
and
jo
mov
lock
jo
dec
inc
mov
sbb
pop
mov
adc
pusha
fsubr
jae
adc
(bad)
shr
shr
bound
push
mov
add
sub
es
in
jmp
mov
jb
inc
in
adc
pusha
xor
cmp
xor
add
xchg
or
ds
mov
call
ds
pop
out
fistp
call
imul
inc
sbb
pop
ficomp
movzx
mov
hlt
adc
sbb
ret
sbb
lea
fs
pop
sbb
fwait
add
and
(bad)
adc
jo
clc
cmp
jbe
mov
inc
xchg
test
jle
mov
inc
dec
add
call
push
jg
ja
cmp
jle
mov
mov
mov
rcl
rol
cmp
mov
cmp
add
cmp
mov
or
dec
in
jg
mov
hlt
or
adc
je
icebp
shr
test
sub
call
cli
jbe
push
or
sbb
push
clc
(bad)
hlt
mov
jns
rol
xchg
jl
enter
adc
jbe
loope
loope
loop
sar
lods
clc
lea
enter
jmp
lods
loope
push
pushf
pop
(bad)
fisttp
cmp
loop
inc
mov
inc
add
loop
cwde
and
call
jo
add
push
pusha
cmps
cli
jl
loopne
shl
hlt
adc
push
or
add
shl
xchg
int
sbb
js
adc
xor
push
shl
cmp
mov
add
pop
xor
add
push
sub
aaa
jae
push
add
push
mov
add
inc
in
pop
xlat
pop
clc
inc
sbb
arpl
ja
mov
clc
jbe
retf
test
push
inc
lods
adc
add
sub
dec
adc
out
dec
(bad)
aam
inc
pusha
sbb
xchg
push
outs
push
mov
lods
test
sub
mov
cmp
mov
cmps
dec
aam
or
pop
adc
nop
push
ret
ja
loopne
sbb
jecxz
adc
add
dec
pop
or
in
mov
push
add
sub
ins
popa
sub
sbb
test
xor
or
add
jbe
mov
mov
sbb
(bad)
imul
xor
lods
(bad)
call
jle
test
es
es
jbe
lods
or
pop
sar
pushf
sti
xor
sbb
test
popf
and
ret
cld
add
mov
mov
mov
aad
ds
sub
push
sub
lods
add
pusha
xlat
mov
sbb
jg
mov
adc
mov
mov
add
adc
test
mov
ror
adc
mov
shr
or
imul
dec
jmp
inc
add
test
xor
into
sub
out
repnz
sbb
bound
mov
or
imul
pop
mov
inc
or
mov
mov
sub
and
push
mov
xchg
or
fmul
mov
jg
sbb
sbb
push
(bad)
or
ins
pop
jne
repnz
je
or
sub
lds
shl
jge
mov
jg
add
pop
cmp
push
jle
cmp
mov
add
inc
fidiv
ds
enter
sbb
sbb
hlt
jo
inc
cmp
scas
cmc
fsubrp
push
and
jle
dec
adc
sahf
jne
adc
cli
adc
mov
call
mov
cmp
loopne
and
push
and
les
and
mov
bound
rcr
ret
push
jl
jp
push
xor
pop
(bad)
push
mov
mov
(bad)
sbb
int
cmps
sti
(bad)
add
mov
push
or
lea
inc
or
inc
mov
push
outs
gs
jne
or
ins
or
dec
repz
gs
pop
pusha
push
mov
push
fistp
add
or
fstp
xor
ins
or
or
jo
and
data16
in
or
sbb
shr
pusha
mov
xchg
mov
cwde
xchg
cld
fild
fmul
adc
inc
fmul
imul
lock
push
call
fmul
mov
clc
and
pop
rcl
lock
fisub
sbb
aam
fdiv
cld
dec
addr16
and
cs
mov
mov
in
xor
imul
mov
call
jbe
adc
enter
pop
les
fwait
xor
gs
inc
pop
adc
rcr
add
enter
cwde
pop
(bad)
sbb
int3
fld
gs
xchg
add
mov
push
sub
in
loopne
js
cmps
in
or
paddsw
sbb
xor
pop
inc
jae
push
dec
pop
xchg
xor
pop
or
arpl
pushf
mov
fwait
lods
out
xor
pop
sub
mov
pusha
push
mov
pop
push
mov
stos
mov
mov
add
inc
dec
xor
jne
pop
sbb
push
fwait
sbb
test
rep
test
adc
repz
jl
inc
ret
jns
lahf
adc
inc
imul
iret
popa
inc
sbb
adc
daa
push
xor
ret
sar
and
mov
xchg
loope
mov
mov
mov
inc
sub
add
cmp
push
aaa
cmp
dec
arpl
pop
test
sub
fsubr
into
and
inc
add
sbb
fidiv
or
xchg
in
(bad)
inc
add
aas
pop
sub
aam
mov
jne
daa
rol
mov
cmp
adc
xchg
mov
or
jns
dec
push
inc
int3
lea
mov
(bad)
in
jp
jp
mov
mov
div
cmc
cli
mov
jmp
jne
mov
or
cmp
add
add
imul
mov
sbb
ins
dec
and
pusha
mov
jl
xchg
or
gs
lds
dec
lock
rol
sub
jecxz
dec
sub
pop
jle
adc
and
and
mov
jne
add
ds
inc
shl
mov
sbb
jge
sub
imul
mov
add
sbb
mov
sub
mov
gs
push
sub
push
in
mov
aaa
cmp
loopne
xor
mov
mov
jnp
pop
adc
jns
fadd
add
xor
ins
lock
jge
repnz
sub
push
es
fsubr
imul
arpl
sti
shl
cs
add
fisttp
add
sar
adc
cmps
adc
push
pusha
inc
inc
fadd
add
xor
add
shl
sbb
mov
and
mov
push
es
cwde
or
push
push
mov
in
sub
cwde
aas
xchg
or
pop
data16
cwde
ja
inc
loopne
or
inc
push
sub
sub
or
dec
cmp
(bad)
push
lock
xor
les
sbb
add
movs
fwait
push
add
add
pop
call
dec
or
pop
out
inc
or
push
js
or
js
add
fisub
sti
inc
or
add
dec
add
xchg
pop
clc
adc
mov
jo
fld1
ficom
enter
push
inc
xchg
jp
jo
add
xchg
fdivr
push
cmp
push
outs
adc
(bad)
inc
and
sti
dec
sbb
pop
or
add
adc
enter
fsub
sti
dec
jecxz
sbb
mov
sub
pop
cmp
pop
cmp
sub
pop
addr16
enter
vunpcklps
add
js
or
xchg
pushf
ret
sbb
xchg
mov
xor
add
fdiv
sub
je
sbb
xor
addr16
outs
sbb
in
call
cli
inc
inc
mov
fwait
rol
fadd
test
out
jmp
sbb
or
cmp
xor
out
jmp
dec
sub
and
rcr
mov
cmp
adc
mov
mov
push
adc
into
push
pusha
push
cdq
scas
aaa
(bad)
cmp
push
push
jmp
or
mov
xor
xchg
sahf
in
shl
mov
sti
loop
lea
add
neg
lea
shl
call
or
add
add
and
sub
cs
pop
cmp
push
jo
xchg
xchg
shr
add
and
push
inc
push
ficom
and
push
push
js
add
test
push
push
inc
hlt
xor
fimul
mov
mov
lock
cs
int3
int3
lock
jns
cmp
pop
push
inc
int
add
lock
inc
cmp
jb
fnstcw
jo
div
lock
int
lods
in
dec
push
in
int
xor
jl
js
test
ja
cld
add
add
cmp
hlt
pop
jo
clc
mov
int
add
add
clc
sub
dec
push
movs
pop
inc
add
in
mov
sub
outs
in
fwait
retf
popf
in
in
push
xchg
push
cs
xor
inc
aas
pop
cs
cs
xor
jmp
(bad)
loop
aad
jmp
push
mov
push
push
add
sbb
jmp
retf
cmc
or
in
add
movs
sti
neg
(bad)
sub
(bad)
fild
fld
and
push
sbb
pushf
in
aam
xchg
add
mov
call
clc
imul
push
add
and
into
sbb
out
stc
or
stc
dec
popa
sub
fnstenv
mov
imul
movs
pop
xor
sti
call
dec
xor
adc
shr
gs
test
rol
inc
imul
push
adc
aaa
cdq
fs
inc
push
dec
add
xchg
out
jp
add
and
cmp
cli
nop
jb
adc
pop
pop
imul
push
sub
mov
clc
push
cmc
dec
das
lods
popa
hlt
lea
stos
scas
push
fdivr
mov
sar
enter
mov
jns
sub
and
sub
or
push
neg
or
sbb
pushf
pushf
xchg
cmovb
ins
pusha
cmps
pop
mov
cmps
push
adc
imul
jle
cmps
ss
mov
mov
pop
pusha
inc
out
fsub
xlat
inc
and
inc
add
or
xchg
pushf
inc
imul
ret
jge
add
mov
inc
inc
bound
cmps
adc
retf
mov
clc
dec
mov
or
inc
mov
jle
jle
mov
lea
xor
xchg
add
fucom
pop
repz
sbb
pop
add
je
rol
aaa
js
pop
adc
imul
pop
rcr
or
pop
add
push
hlt
adc
or
push
adc
pop
add
inc
test
jp
lods
dec
mov
adc
mov
mov
sbb
jbe
je
ret
or
arpl
pop
imul
push
mov
mov
pop
sub
cmps
mov
pop
and
or
push
push
or
dec
cli
enter
jnp
add
cmp
and
mov
add
adc
push
and
jl
xor
aas
add
jo
sub
push
adc
xchg
(bad)
push
mov
or
mov
out
mov
add
nop
inc
lock
pop
ret
add
mov
push
push
sbb
out
add
push
sbb
(bad)
push
xor
rcr
inc
xchg
or
out
xchg
loopne
ds
call
test
jne
pop
js
frstor
fdivr
movzx
shl
inc
pop
and
mov
call
lods
es
pop
inc
sub
adc
popa
shl
push
inc
and
cmp
sub
sbb
icebp
push
or
ret
bound
jl
xor
sbb
dec
inc
push
shl
int3
xor
ror
xchg
pushf
pop
add
inc
add
add
aaa
mov
cmp
mov
and
or
jg
sub
mov
jmp
jbe
xor
xlat
data16
fld
push
mov
jo
adc
xchg
ds
pop
mov
mov
mov
idiv
nop
and
scas
inc
mov
shl
stos
cli
mov
scas
sub
ins
inc
call
jp
(bad)
lock
sbb
adc
dec
or
test
adc
mov
add
in
adc
pop
dec
shl
imul
xchg
push
mov
rol
xor
mov
into
call
mov
shl
lea
pop
cli
adc
or
js
in
sbb
sbb
and
jle
dec
add
into
inc
pop
jl
and
pop
add
pop
rol
push
lods
es
pop
inc
pusha
push
daa
addr16
push
je
cmp
jg
out
cmps
add
add
cmp
jne
mov
xchg
push
pop
or
shr
or
test
mov
pushf
cs
adc
outs
mov
jmp
xor
addr16
mov
push
ins
cli
jg
cmp
je
inc
add
cmp
jl
pop
add
ret
mov
or
mov
icebp
sar
loope
js
cmp
dec
pop
sbb
inc
int3
push
ret
(bad)
pop
into
sar
rcl
rol
rol
push
frstor
add
jnp
leave
add
push
pop
xchg
nop
stos
jno
mov
add
jl
push
add
cmp
or
mov
mov
loope
or
dec
add
pop
ins
or
inc
pop
mov
jp
xchg
bound
test
clc
add
popa
mov
cmp
cmps
test
cmps
mov
mov
call
test
inc
pop
loopne
int3
push
inc
dec
es
mov
inc
jl
mov
jmp
dec
push
add
push
cdq
test
inc
sub
add
jae
cmp
mov
fnstenv
not
pusha
xchg
imul
xchg
or
or
cmp
scas
mov
sar
add
inc
dec
adc
fadd
jle
bound
lock
scas
cdq
pop
dec
mov
cmp
jl
js
sbb
and
pop
fcmove
inc
push
and
push
and
sub
push
sbb
push
or
and
inc
dec
and
sbb
pop
and
sbb
sub
es
jg
out
outs
ret
mul
js
cmp
in
jbe
test
adc
fdiv
or
jno
mov
dec
div
jo
popa
jae
mov
idiv
xlat
in
pop
bound
je
and
mov
shl
add
add
pop
arpl
and
enter
push
xor
or
jge
sub
lods
js
push
mov
clc
in
push
lea
push
mov
push
inc
sub
pop
or
mov
xchg
ror
xchg
sar
ror
test
pushf
xor
(bad)
(bad)
ficom
or
fcom
loopne
or
xor
or
ja
les
ds
jl
addr16
enter
sbb
dec
sbb
dec
stos
out
cmps
inc
mov
fbld
inc
and
popa
fist
jns
aaa
popa
add
jecxz
cs
push
jbe
inc
stos
loopne
xchg
push
repz
loopne
sbb
cmps
mov
jg
dec
lds
sti
jg
cdq
xor
(bad)
popf
movs
out
push
(bad)
jo
in
push
push
in
dec
mov
cmp
call
pop
add
adc
sbb
(bad)
hlt
pop
dec
outs
and
pop
wrmsr
movs
add
adc
fsubr
sub
mov
mov
lds
inc
jl
sar
js
add
fcom
mov
sbb
mov
push
or
mov
push
add
or
adc
sbb
outs
aad
outs
or
xor
add
pop
pushf
ds
pop
dec
push
sti
mov
and
mov
hlt
or
aas
test
inc
push
xor
inc
mov
adc
mov
jp
mov
sbb
cmp
xor
mov
aaa
ror
and
push
adc
adc
adc
xor
js
inc
adc
(bad)
xor
push
mov
in
adc
arpl
(bad)
es
scas
cmp
push
or
mov
js
inc
adc
lea
pop
pop
shl
jge
add
cld
mov
cld
add
xor
fwait
test
push
jb
clc
dec
jne
out
sbb
mov
cmp
sbb
mov
stc
dec
sbb
stc
ss
(bad)
call
mov
add
push
push
mov
data16
outs
add
push
sti
mov
add
xor
out
mov
xor
shl
enter
cli
out
xchg
sub
out
hlt
ja
sub
or
mov
xchg
pop
push
pop
sbb
rol
xchg
lock
enter
and
daa
push
or
fwait
add
std
jmp
pop
inc
or
nop
clc
scas
loopne
or
out
push
or
cli
punpckhbw
sahf
fld
pop
cmp
cmps
ins
mov
push
test
adc
or
sbb
mov
stos
xor
into
sbb
push
push
push
push
pushf
push
or
sbb
imul
dec
sub
je
dec
je
adc
je
jmp
cmc
ins
es
jmp
xor
outs
cwde
nop
dec
outs
cmp
pop
ds
pop
add
jmp
push
jb
pop
jnp
push
pop
pop
and
in
hlt
mov
or
push
idiv
cmp
inc
idiv
fs
movs
mov
sbb
bound
xchg
std
dec
cmp
in
dec
add
sahf
push
imul
pop
and
clc
int
rcl
xchg
push
cmp
call
cld
clc
hlt
dec
fmul
dec
mov
dec
retf
jg
mov
into
mov
aam
sbb
dec
or
xchg
mov
fld
jge
xor
mov
sbb
sbb
mov
add
dec
sbb
xlat
xor
loopne
inc
push
jl
mov
pop
sbb
jle
pop
fsubr
cmp
in
or
lea
jl
pusha
fs
xor
pop
jmp
test
ror
add
jb
(bad)
shr
inc
inc
push
xchg
mov
dec
sub
call
in
js
je
push
rcl
rol
stos
in
aaa
jne
das
scas
jo
jae
call
mov
loopne
lock
add
xor
ret
add
enter
push
sbb
xlat
nop
push
outs
(bad)
loopne
inc
mov
pop
loope
cmp
add
adc
push
mov
sbb
xor
push
les
test
jne
fs
pop
out
popf
es
dec
pop
xchg
sub
cmp
or
gs
dec
pop
inc
pop
lods
stos
pop
jbe
adc
(bad)
js
cmp
dec
pusha
rcr
xchg
popf
adc
sbb
shl
sbb
sbb
or
fs
and
adc
xor
cmp
adc
mul
fist
in
adc
mov
mov
xor
adc
xor
inc
mov
fadd
add
xor
inc
mov
nop
jg
mov
cmp
push
sahf
sti
fisub
cli
jmp
pop
mov
cmps
add
xor
pop
push
pop
xchg
inc
or
pop
ja
jne
jae
sbb
test
and
dec
inc
das
in
outs
jp
mov
ja
adc
xor
in
ret
dec
add
mov
sbb
sub
adc
add
fimul
sbb
dec
bound
sub
inc
xor
jno
adc
cmc
fwait
stos
xor
in
jno
jmp
push
xor
fwait
retf
adc
(bad)
loopne
add
rcl
xchg
mov
jne
sub
(bad)
xchg
hlt
mov
test
or
stc
sbb
mov
push
out
rol
cmp
(bad)
dec
jp
enter
sub
pop
push
in
je
inc
xchg
setl
inc
xchg
popa
xchg
pusha
push
add
jnp
xrelease
mov
jle
or
cmp
add
push
das
push
loopne
add
(bad)
out
adc
sub
cmp
mov
inc
or
outs
jne
dec
je
out
xor
lds
mov
inc
mov
mov
loopne
je
shl
mov
aad
ins
push
fiadd
sbb
adc
outs
and
ret
mov
mov
fsub
push
cmp
xor
pop
out
sub
jb
gs
cmp
and
push
inc
sbb
xor
test
pop
jo
daa
in
sbb
imul
mov
mov
mov
icebp
push
cmp
mov
add
repnz
jmp
punpcklbw
and
(bad)
cmp
push
lds
aad
(bad)
clc
jg
je
into
and
inc
cwde
xchg
add
xor
mov
shl
mov
ds
jge
out
dec
(bad)
ret
cli
pop
ja
push
xchg
(bad)
(bad)
ins
add
mov
push
imul
fist
sub
imul
or
xor
inc
sub
or
imul
cwde
push
cmp
std
call
xchg
inc
sub
dec
ret
out
mov
test
lock
jp
xchg
xor
pop
jae
imul
mov
cmp
jo
cmps
or
jbe
add
mov
test
mov
push
jns
js
movaps
or
jmp
or
mov
mov
jbe
lods
daa
movs
sub
test
xchg
stos
clc
imul
sbb
mov
imul
das
push
sbb
mov
dec
jnp
push
inc
sub
sbb
pop
out
dec
dec
cmps
sti
lock
cmp
adc
dec
fucomip
inc
clc
dec
adc
shl
jno
sub
sub
popa
lahf
xor
push
sub
push
adc
jbe
clc
mov
adc
xor
loop
cmp
jmp
mov
out
mov
cld
fdivr
pop
vmovaps
xor
jge
mov
mov
push
push
xlat
jle
inc
jg
and
push
lea
and
add
lea
cdq
fcmovne
je
push
pop
fidiv
sub
and
xor
inc
das
clc
rol
mov
js
xor
or
mov
je
add
cs
add
jp
ffreep
add
jmp
inc
mov
sub
addr16
sbb
pop
or
fsub
pop
add
push
xchg
ins
mov
inc
or
adc
dec
sbb
and
adc
or
nop
pop
add
pop
cmc
out
scas
mov
mov
inc
and
push
out
sbb
or
sub
sbb
ret
shr
add
sti
or
inc
pusha
cmp
jl
and
dec
mov
or
pop
pop
call
mov
sub
cmp
jge
mov
test
test
clc
je
mov
jne
nop
push
imul
out
es
mov
and
in
pop
je
xor
mov
mov
popf
sbb
sbb
dec
pusha
inc
dec
jl
push
out
daa
jle
lock
mov
jge
add
mov
jbe
adc
call
ins
jb
pop
mov
dec
sbb
adc
mov
in
dec
pop
add
aaa
push
lea
cdq
idiv
daa
in
mov
jg
lea
add
mov
and
or
ret
inc
xchg
inc
or
loop
mov
add
adc
mov
add
mov
jle
cmp
xchg
jo
ret
pop
push
add
cld
push
push
push
jl
mov
jg
test
sub
mov
adc
xor
pop
loop
inc
pop
cmp
xor
scas
sbb
push
and
test
jg
xor
adc
inc
adc
and
mov
inc
pop
and
aad
fsub
inc
mov
or
push
je
sub
dec
adc
ret
loope
aas
mov
aad
and
pop
mov
cmp
or
mov
neg
pop
outs
cli
and
clc
mov
cmp
inc
mov
adc
lock
dec
add
adc
mov
mov
in
pushf
cmp
cdq
pop
rcl
inc
mov
sbb
or
pop
sbb
dec
fwait
je
jbe
xchg
mov
push
mov
sbb
add
popf
dec
ret
push
xor
dec
mov
jne
inc
mov
sbb
js
pop
mov
frstor
or
inc
or
or
adc
out
arpl
jg
pop
xchg
pusha
xor
je
adc
add
iret
push
sbb
add
add
push
add
es
cmp
clc
lods
jo
lea
jp
or
push
inc
out
call
mov
mov
xor
movs
push
call
arpl
cmp
jge
into
popf
jne
or
sub
icebp
push
push
cmc
push
and
ror
inc
jl
mov
pop
retf
popa
jno
cdq
mov
pop
cmps
push
js
sar
jae
cld
sbb
out
mov
and
push
add
out
push
lods
pop
push
cmps
fs
mov
fisttp
loop
mov
aaa
call
sbb
fld
push
fild
mov
nop
mov
mov
inc
sti
xchg
push
shl
or
pusha
dec
ins
push
xor
cmp
sar
clc
lea
xor
or
fld
cmp
or
adc
dec
loopne
xchg
test
pop
push
or
ds
xchg
push
das
inc
test
push
sbb
push
pop
inc
xor
out
les
daa
or
push
movs
sbb
loope
mov
ins
mov
(bad)
ins
shl
add
ret
jmp
dec
out
lock
ja
or
push
sub
hlt
(bad)
js
and
inc
inc
adc
mov
jmp
adc
or
out
pop
mov
or
adc
dec
add
sbb
mov
xchg
popf
mov
and
fwait
ds
dec
jae
int3
or
adc
or
(bad)
add
inc
mov
pop
xchg
push
pop
dec
shl
ss
mov
push
sahf
out
push
fiadd
in
sti
test
push
adc
or
enter
cdq
and
setns
sub
sbb
cmps
dec
out
test
mov
inc
cmp
outs
cli
movlps
jnp
rol
aad
js
mov
jo
fnstsw
inc
shl
xchg
aam
sub
stos
xor
cmp
inc
mov
and
jge
or
adc
dec
sbb
cmp
adc
iret
jae
jae
daa
pusha
test
xor
lds
sbb
dec
leave
sub
leave
inc
or
push
dec
inc
enter
outs
xor
cmps
adc
pop
mov
movs
xchg
std
or
dec
leave
push
inc
pusha
cdq
dec
cmp
pushf
push
lods
or
test
and
popa
dec
or
dec
inc
add
or
xchg
pop
shl
fisub
cmps
add
sub
xor
push
inc
movs
leave
shl
adc
pushf
push
lods
popa
adc
das
adc
scas
inc
and
cmp
cmp
clc
add
jmp
jle
test
mov
dec
lock
fstp
sbb
xlat
shr
sub
add
pusha
fdivr
or
shl
add
mov
inc
ins
daa
xchg
adc
inc
cmp
iret
int
lea
push
mov
push
push
push
retf
scas
mov
adc
mov
push
cli
and
push
mov
jne
fstp
sar
addr16
sub
sahf
mov
push
pusha
stos
mov
pusha
js
inc
jg
int3
pop
add
ffree
jbe
add
sub
fisttp
mov
inc
dec
mov
inc
cmp
cmp
or
sub
push
push
mov
sar
test
(bad)
pop
imul
jle
jle
mov
jo
push
scas
mov
jnp
sar
jne
inc
inc
or
mov
mov
sbb
add
or
iret
add
dec
mov
or
push
jbe
add
lods
jg
je
xchg
je
cmp
jge
cmp
jbe
stos
or
push
jmp
mov
mov
xadd
add
or
call
cmp
mov
mov
sbb
out
popa
push
cs
jne
cmp
sbb
(bad)
mov
stos
mov
mov
(bad)
xor
fsubr
shr
dec
ret
test
adc
mov
mov
sub
rcl
leave
or
ss
dec
add
fbstp
fild
test
mov
sub
mov
push
sub
mov
rol
pop
test
je
pop
cwde
adc
and
push
mov
sub
nop
dec
dec
mov
movs
mov
pop
add
gs
dec
xor
mov
mov
icebp
out
mov
adc
enter
adc
dec
std
mov
aaa
arpl
dec
push
mov
sub
and
je
xchg
imul
cmp
mov
data16
sub
shl
add
pop
ret
push
lea
sub
jmp
adc
and
pop
pushw
or
ins
addr16
adc
out
add
jl
mov
pop
shl
cmp
jbe
mov
pop
movs
jecxz
mov
movs
xchg
rcr
mov
(bad)
jg
jbe
cmp
mov
cwde
fcomp
mov
sbb
in
adc
popf
cmp
and
add
inc
adc
and
xchg
push
idiv
imul
dec
adc
pop
sti
add
dec
adc
or
jl
sub
jle
or
inc
or
dec
adc
out
jnp
pop
ret
jp
mov
ins
lock
or
mov
sub
sbb
push
push
mov
dec
(bad)
sbb
or
ds
mov
sti
test
test
xor
mov
push
fidiv
inc
(bad)
je
data16
cmp
cmp
mov
or
jns
add
jae
jmp
mov
jmp
out
rol
test
in
call
and
scas
sbb
xchg
popa
jecxz
inc
cmp
je
or
push
sahf
cwde
sub
mov
inc
jp
add
push
inc
ror
and
iret
add
pop
je
or
popf
or
pop
cmp
adc
adc
jmp
mov
sub
mov
call
inc
add
leave
jne
push
fsub
jnp
adc
pop
loope
mov
mov
jnp
cmp
or
push
add
or
popa
sbb
mov
ror
cmps
adc
mov
or
ds
hlt
je
inc
mov
mov
aas
out
or
sub
sub
mov
movs
movs
jge
jmp
xor
sbb
mov
pusha
mov
xor
push
rol
(bad)
imul
add
push
out
je
loop
pop
movs
adc
or
cmps
outs
fdivr
aaa
pop
and
and
add
jne
xor
add
clc
push
ds
xchg
rcr
pushf
aam
adc
xchg
sub
in
stos
into
cmp
adc
aas
imul
daa
sar
and
clc
or
hlt
mov
push
cwde
push
out
ins
xchg
test
jmp
out
test
push
fisttp
cmp
rol
cmp
jl
shr
mov
or
pop
or
je
mov
pop
xor
sub
(bad)
mov
add
ret
cdq
popf
test
repnz
adc
adc
mov
dec
push
xchg
jo
push
adc
or
dec
mov
fs
sbb
test
add
xchg
pusha
adc
lahf
iret
push
in
or
jl
push
xor
cs
xor
sbb
xchg
and
or
xchg
or
inc
mov
add
push
pusha
and
mov
inc
push
loopne
ss
jg
mov
mov
fisttp
jmp
call
bound
inc
hlt
or
jmp
pop
pop
dec
or
mov
mov
punpcklbw
push
cmp
sbb
cmp
mov
adc
mov
scas
dec
sti
lock
adc
or
sbb
push
sbb
adc
jbe
pop
sbb
not
rcl
mov
stos
cmp
mov
shl
daa
lods
pop
push
jb
mov
sub
mov
cli
outs
adc
(bad)
push
cmp
jl
push
inc
mov
inc
sbb
add
rcl
mov
mov
mov
mov
mov
inc
push
mov
dec
loopne
sbb
adc
jne
enter
je
jmp
fcomp
add
shl
shl
inc
add
cmp
jne
(bad)
sbb
xchg
sbb
test
out
lods
adc
das
cmp
mov
pop
ins
push
sbb
xchg
adc
xchg
cli
sbb
(bad)
sbb
dec
ret
ins
inc
and
sbb
and
cmp
mov
and
aaa
outs
pop
add
pop
outs
pop
arpl
pop
repz
std
imul
jmp
je
adc
sub
fcomp
ret
xchg
icebp
jmp
aaa
and
pop
ins
aas
mov
jg
shl
push
mov
mov
icebp
pop
ins
dec
sbb
sub
(bad)
dec
mov
outs
ror
pop
int3
jg
mov
ror
adc
mov
mov
xor
loopne
push
pop
cmp
add
jmp
mov
gs
jle
jg
jle
add
add
out
repnz
fdiv
lds
lock
js
mov
jne
mov
ret
push
shr
jbe
push
sub
and
jnp
mov
sbb
push
and
jno
mov
pusha
jnp
and
mov
cli
sar
loope
int
je
sbb
mov
hlt
daa
inc
push
jmp
mov
xchg
cmp
imul
sbb
sub
add
into
aad
(bad)
mov
dec
icebp
rcl
mov
adc
add
das
push
add
mov
mov
fisttp
shl
mov
sar
mov
inc
dec
pop
add
daa
add
outs
pop
jne
out
adc
push
mov
pop
mov
mov
jp
push
rcr
cld
or
xchg
in
jmp
adc
aaa
sbb
inc
jg
cmps
jbe
fwait
push
add
or
add
adc
neg
test
fcom
xchg
or
inc
inc
sbb
imul
ret
in
das
popa
xor
repnz
pop
pop
or
pop
lock
sar
push
repz
inc
add
retf
arpl
call
jg
jle
or
jle
adc
mov
js
dec
or
adc
mov
xor
cmp
ss
adc
fnstenv
mov
(bad)
jle
mov
adc
call
imul
pop
mov
outs
mov
and
das
and
jae
aaa
outs
shr
inc
es
ins
or
sub
icebp
(bad)
fstp
mov
push
movs
inc
add
pop
popa
int3
mov
lock
add
cmp
inc
xor
inc
inc
or
je
add
or
mov
rol
mov
sbb
test
inc
jg
and
js
aas
je
mov
and
add
jmp
loopne
add
scas
ret
add
inc
icebp
outs
push
or
cmp
push
sub
jmp
jne
ins
and
mov
lea
and
mov
mov
sub
push
in
sbb
xchg
or
push
fcomi
clc
mov
and
fadd
or
and
test
push
stc
pushf
cmp
int3
xchg
(bad)
fist
ins
mov
jl
push
mov
test
jl
cmp
test
ret
sbb
xchg
sbb
pop
cld
mov
inc
push
cmps
sbb
push
or
inc
adc
adc
xor
outs
out
mov
sub
mov
int3
push
fucom
pop
inc
je
jl
jns
push
in
or
nop
adc
adc
mov
mov
adc
push
sbb
sbb
sbb
pop
xchg
cmp
mov
xor
pusha
cs
add
push
lea
mov
add
or
cmp
fist
outs
and
shl
push
dec
add
fbstp
cmp
jge
scas
pmaxub
lea
push
and
sbb
cmp
or
out
clc
and
sub
sbb
push
or
cmps
mov
lods
add
loopne
pop
and
mov
jmp
loopne
cmp
adc
jne
nop
inc
test
lock
repz
es
xor
cmp
mov
mov
push
cmp
mov
enter
dec
xor
xchg
sub
jle
adc
inc
icebp
je
dec
(bad)
sub
shl
push
cmp
sub
clc
dec
setae
push
jb
shr
jmp
imul
clc
aam
or
xchg
or
shr
push
dec
xor
add
retf
mov
dec
rol
or
mov
mov
lea
push
shl
cli
or
add
mov
inc
enter
jl
mov
inc
(bad)
sub
sbb
mov
enter
push
push
sub
cmp
pop
fisttp
cmp
pushf
mov
and
out
xchg
xchg
adc
xchg
push
pop
add
add
or
mov
clc
sub
xchg
pop
xlat
add
pop
in
pop
ja
inc
fist
mov
ins
mov
inc
or
sbb
or
inc
xor
or
out
dec
cmp
inc
fcomp
ins
push
add
jmp
mov
movs
fmul
cmp
pushf
aas
retf
xor
shl
xchg
in
mov
pop
add
out
shr
sub
rcr
into
out
push
aam
xor
lea
imul
out
iret
or
adc
fs
xor
scas
ror
bound
add
inc
in
cmp
loopne
or
xor
inc
stos
pop
daa
cmp
rol
outs
sbb
shr
sbb
mov
pop
iret
out
and
push
push
adc
mov
add
sbb
cmp
xchg
jo
push
scas
cmp
sbb
cmp
push
and
mov
shr
inc
sub
jb
je
repnz
les
shl
fdivr
fnsave
push
in
mov
mov
gs
pop
fs
fs
mov
push
and
xor
retf
and
loope
jle
xchg
(bad)
pop
add
xor
adc
cmp
outs
jge
dec
xchg
je
dec
or
add
mov
lahf
or
in
retf
lea
xor
mov
or
xor
mov
das
inc
pusha
or
jnp
push
shl
add
inc
xor
mov
fild
push
adc
or
fwait
xor
call
sti
dec
sbb
dec
sbb
xchg
rol
xor
push
int3
or
push
dec
mov
ds
push
aad
pop
and
jmp
lock
mov
dec
pushf
jmp
pop
je
dec
je
jmp
mov
rol
jmp
sub
sbb
int
sub
cmp
daa
jo
hlt
lahf
lods
cli
dec
je
pop
lea
call
(bad)
cld
sbb
out
add
lock
or
pop
(bad)
fstp
push
mov
mov
ret
mov
mov
out
(bad)
in
or
dec
std
stos
xor
and
dec
lods
adc
push
sbb
ret
adc
or
push
pop
add
cmp
push
push
or
ret
jmp
inc
pop
mov
sbb
cmp
mov
mov
or
call
add
add
mov
and
(bad)
cmp
sub
fadd
mov
clc
mov
jle
fistp
call
jnp
or
inc
or
add
or
push
lea
push
push
pmaxsw
ins
pop
mov
call
dec
jne
inc
rcl
add
pmaxsw
popa
lock
sub
and
sbb
not
or
or
and
cmp
sub
dec
add
mov
aad
lds
push
inc
or
pop
(bad)
inc
add
pushf
mov
inc
mov
cmp
daa
sbb
je
cmp
js
mov
dec
mov
mov
loopne
pop
add
inc
and
loope
push
jmp
mov
hlt
(bad)
push
scas
sub
dec
lock
in
cmp
or
or
ins
and
xor
xor
lock
int3
xchg
outs
pop
dec
stc
scas
push
stos
sar
stc
movs
xchg
fistp
pop
or
push
push
(bad)
fisttp
jl
cld
lea
mov
inc
xor
mov
icebp
out
pop
mov
fcomp
mov
cmp
test
in
mov
push
adc
dec
xor
ror
inc
hlt
jbe
and
ins
push
hlt
in
rcr
enter
push
add
lods
ror
xor
add
mov
mov
int
add
add
or
aas
cwde
xor
mov
mov
es
and
lock
jno
int3
xor
inc
add
aaa
fimul
(bad)
cmp
fistp
sbb
in
cmp
push
mov
sbb
push
adc
mov
cmp
mov
pop
dec
cmp
add
and
mov
cmp
dec
and
xor
hlt
test
jmp
mov
mov
push
push
imul
inc
adc
push
fiadd
mov
inc
outs
adc
add
in
add
jle
neg
shl
push
and
into
or
jle
adc
or
enter
mov
ret
adc
cld
(bad)
mov
pusha
fcmovb
sbb
mov
stos
adc
into
xor
shl
int
jo
cmc
dec
cmp
fdivrp
lock
add
xor
sti
push
sti
dec
sbb
js
js
mov
std
clc
lahf
sbb
les
cmp
jne
outs
dec
in
sar
fist
in
cmp
cmp
sbb
sbb
push
dec
push
push
sbb
aaa
clc
jle
inc
push
mov
push
inc
and
mov
or
or
or
sahf
dec
inc
cmp
push
sub
jecxz
jg
or
push
loopne
xchg
mov
xor
inc
jnp
jne
loop
inc
jbe
xor
add
push
xor
push
int3
adc
mov
cmps
imul
jns
sub
test
dec
fs
rcl
mov
loop
mov
movs
ss
sbb
add
popa
out
cmp
call
pushw
mov
mov
sbb
or
push
int
sub
in
ds
ficom
inc
js
cmps
in
rol
hlt
hlt
cs
adc
jne
jo
xor
cmp
xlat
xchg
stos
mov
adc
and
inc
push
cdq
and
or
lock
xchg
jae
add
mov
jmp
daa
(bad)
cmps
mov
sbb
pop
icebp
and
stos
je
idiv
fdivr
movs
xchg
lock
cmp
loop
scas
rcl
fwait
pusha
cmp
adc
or
cmp
je
fild
lea
mov
mov
push
cwde
mov
bound
cli
mov
jge
inc
cmps
ret
daa
les
add
or
bound
movs
add
xor
mov
adc
dec
add
dec
pop
push
adc
jmp
sbb
(bad)
adc
movs
(bad)
movs
sti
daa
in
push
loop
and
ret
fbld
jb
sbb
add
repnz
add
push
cmp
adc
or
and
out
jmp
or
sub
push
jo
or
dec
xor
xor
push
inc
or
stos
sbb
sbb
jae
inc
loope
pop
mov
cmp
jle
jle
in
mov
aam
cmp
jbe
or
add
jmp
mov
jmp
or
fadd
or
cli
mov
cmp
out
inc
and
dec
je
add
jmp
(bad)
inc
mov
shr
mov
cld
mov
mov
dec
cmp
out
inc
sub
sub
mov
das
movups
cld
add
fdiv
cmp
dec
xor
xor
mov
mov
adc
or
je
xchg
rcl
or
or
fsubr
mov
data16
add
nop
call
mov
mov
lods
cmc
jecxz
pop
repnz
jae
jmp
ror
sub
imul
movs
clc
add
(bad)
hlt
ins
sub
sbb
xchg
and
mov
jle
adc
repnz
je
jge
cmp
and
sbb
sub
sbb
dec
xor
shl
in
and
sbb
mov
in
ror
jne
mov
dec
xchg
push
shr
adc
out
xlat
add
pop
dec
aam
and
adc
mov
inc
mov
data16
mov
fild
jl
jmp
inc
out
xchg
imul
pusha
lea
rol
jle
cmp
enter
cmp
jne
je
call
sub
push
xchg
cmp
mov
sub
loope
js
xor
test
sbb
test
inc
sbb
popa
in
xor
inc
jge
cld
and
mov
mov
aaa
push
pop
mov
cmp
mov
das
jo
xchg
iret
sub
mov
jecxz
scas
jns
and
call
std
mov
pop
inc
dec
ds
mov
push
pop
and
xor
es
je
bound
or
add
mov
mov
xor
in
mov
xchg
add
adc
mov
adc
or
push
into
inc
push
or
push
test
sbb
xor
adc
mov
rcr
or
test
pop
push
retf
(bad)
mov
hlt
push
inc
ret
adc
dec
das
pop
mov
repnz
mov
test
jle
out
mov
dec
pusha
cmp
inc
push
push
repz
jns
shl
cmp
mov
lea
jnp
cs
cs
aam
jp
jb
and
push
out
cmp
sbb
lahf
cs
sbb
push
mov
stos
xor
inc
pop
xor
pop
ret
sub
xor
loopne
lahf
xchg
shl
sbb
cmp
jnp
pop
jle
xchg
add
ret
repnz
repnz
rol
daa
adc
and
mov
push
cwde
jmp
js
je
push
mov
ret
adc
repz
xchg
mov
nop
and
loopne
idiv
rol
adc
mov
fistp
pushf
adc
movs
push
mov
into
cmp
pop
js
dec
push
xor
rol
inc
fcomp
mov
lock
jne
inc
pop
jo
lds
(bad)
jno
add
jp
adc
hlt
or
jmp
inc
mov
(bad)
icebp
rol
lods
clc
dec
loopne
pusha
or
enter
or
adc
cs
mov
and
push
pop
or
mov
dec
sti
or
mov
scas
iret
adc
test
push
fiadd
and
pop
sub
rol
push
mov
and
lds
jo
or
out
inc
cmp
pop
and
fild
jb
xor
add
out
sbb
jns
sub
cmp
mov
cmps
imul
xor
xchg
retf
aad
jmp
push
inc
adc
adc
and
inc
adc
xchg
add
add
or
mov
inc
pusha
aam
movs
(bad)
fucomi
jp
inc
dec
adc
jl
ret
loopne
sub
mov
lock
lea
je
mov
xlat
and
push
addr16
push
add
neg
mov
pop
fstp
xlat
or
pop
or
dec
ja
into
jge
add
or
popf
xchg
int
in
ds
out
adc
fist
pop
test
cdq
cmp
loope
mov
(bad)
dec
mov
push
fld
xchg
sar
add
xor
pop
or
pop
mov
js
shr
inc
ins
mov
inc
and
pop
push
mov
sahf
dec
sbb
jo
xchg
adc
outs
out
test
jg
jmp
push
mov
imul
out
mov
cli
out
fadd
jecxz
add
mov
fsub
push
jmp
inc
pop
fmul
pop
or
push
mov
into
pop
or
or
inc
mov
pop
push
adc
fnstcw
or
sbb
imul
inc
xchg
sbb
add
push
das
sbb
xor
push
pushf
and
pop
push
sahf
je
or
stos
out
(bad)
mov
mov
or
push
(bad)
jg
and
mov
xchg
sbb
(bad)
sar
sub
lea
dec
cmp
pop
loopne
sti
sbb
ins
inc
sbb
inc
in
jb
shl
pop
pop
std
lods
add
add
or
clc
mov
loopne
loopne
pusha
inc
in
jbe
ror
mov
jge
outs
test
lock
mov
outs
sbb
mov
jae
push
add
in
mov
mov
mov
inc
hlt
push
add
jb
inc
xor
add
and
rol
xor
sti
adc
into
aas
retf
sbb
aas
xchg
dec
mov
add
adc
pop
adc
inc
loopne
cmp
add
jb
int3
mov
push
fnsetpm(287
lock
psubsb
pop
shl
ror
or
aam
sbb
or
pop
add
cmps
add
sbb
mov
lock
out
push
or
les
in
retf
test
inc
inc
jle
cmp
rol
pop
fadd
cs
jnp
daa
icebp
fsub
add
inc
push
pop
es
or
xor
enter
mov
(bad)
loopne
ror
in
in
idiv
test
push
mov
fdiv
rol
mov
sub
mov
push
lods
adc
xor
test
jb
sbb
xchg
loopne
cmps
or
add
or
inc
mov
mov
bound
sub
push
sbb
cmps
pop
push
fwait
sbb
pusha
pop
push
inc
int3
inc
clc
stos
push
and
push
dec
(bad)
jg
add
cmp
jae
mov
mov
add
dec
test
sbb
adc
cmpps
das
lock
cmp
test
hlt
jmp
push
mov
push
ins
adc
mov
jbe
jo
xor
sahf
jbe
les
and
mov
cld
aaa
sbb
push
or
nop
add
scas
pop
xchg
mov
inc
test
push
je
outs
xchg
mov
or
jb
or
jmp
push
test
jl
or
loopne
sub
inc
sub
je
popa
xchg
out
sub
adc
mov
mov
aas
lock
xchg
(bad)
cwde
push
fdivr
imul
push
nop
push
(bad)
adc
dec
push
inc
cwde
inc
or
or
push
arpl
sub
jne
mov
mov
imul
push
add
nop
inc
add
call
adc
sbb
aaa
inc
cmp
mov
loope
repnz
pop
mov
or
cdq
mov
inc
outs
cdq
add
mov
dec
inc
pop
je
add
dec
push
cmp
jne
cmp
inc
and
sub
inc
jne
xchg
adc
iret
hlt
movs
jo
xchg
cli
push
or
clc
push
hlt
sub
jle
aam
stos
call
test
jo
mov
test
adc
adc
clc
inc
retf
dec
hlt
cdq
xor
jl
dec
inc
push
rol
jp
pushf
je
ret
rcl
add
inc
push
sub
test
movs
push
jmp
dec
popf
leave
jl
push
dec
clc
xor
(bad)
std
cwde
ret
jbe
scas
dec
or
pushf
outs
or
push
fidivr
(bad)
call
dec
add
push
call
push
dec
sub
or
int3
push
add
or
into
repnz
and
pop
or
iret
loopne
cdq
ja
es
(bad)
clc
xchg
fisttp
sub
ins
call
cli
jns
sti
add
aam
in
push
ret
cmc
adc
sbb
fs
mov
dec
mov
call
and
int3
dec
int3
fnstenv
mov
js
and
movs
stos
add
fs
scas
aam
push
lods
loopne
pop
jle
cmp
jge
push
aam
call
mov
push
mov
push
jge
movzx
add
inc
inc
mov
jl
(bad)
call
add
pushf
push
sub
shr
jge
mov
(bad)
shl
add
mov
lods
push
ret
add
sub
int3
adc
or
lea
jg
xchg
sub
bound
int3
add
cmp
mov
mov
pop
jbe
jp
jo
mov
and
cld
push
mov
or
movs
lahf
enter
add
pop
outs
mov
push
sbb
rol
ror
mov
mov
cmp
ds
push
ret
into
mov
fdivr
sbb
fadd
loope
sbb
cmp
fild
shl
add
sti
mov
and
inc
cmp
call
clc
jecxz
ret
clc
jg
test
mov
or
or
int3
adc
sub
add
out
add
call
adc
cmp
jbe
sbb
xor
lds
mov
or
pusha
fiadd
ins
jp
add
and
jb
leave
adc
cmp
jne
xchg
loopne
cwde
and
cmps
enter
ins
icebp
dec
lea
adc
add
inc
js
push
adc
jo
and
mov
and
mov
dec
adc
add
lea
sub
dec
dec
loopne
adc
jge
shl
and
repnz
mov
out
cmps
cs
xor
add
xor
test
add
pop
stos
mov
or
jns
mov
xlat
or
jo
fisubr
or
or
push
xor
inc
data16
pop
loop
add
sbb
(bad)
inc
mov
inc
mov
mov
pop
(bad)
aad
sbb
loope
adc
mov
mov
lods
jmp
add
xchg
pop
inc
cmp
push
mov
push
jp
mov
pop
call
dec
push
push
adc
pop
push
scas
dec
dec
pop
cwde
push
dec
xchg
dec
sbb
push
sbb
cdq
mov
mov
push
adc
fidiv
add
push
outs
inc
xor
test
fidiv
mov
rcr
add
sbb
inc
add
cmp
fdivr
adc
add
inc
clc
and
adc
add
lods
enter
sbb
add
sbb
push
push
xchg
sbb
xchg
cmp
push
js
and
add
adc
xor
sar
dec
stos
rcl
sahf
cs
(bad)
cld
xor
inc
fsub
popf
inc
add
sbb
mov
inc
in
sbb
or
add
dec
mov
jecxz
(bad)
or
push
xor
xor
repz
xchg
loope
sub
dec
push
mov
sar
pop
and
imul
mov
add
hlt
sub
(bad)
and
jbe
cmp
xchg
enter
or
mov
add
mov
sti
ja
stos
fisubr
enter
cmp
es
xchg
add
inc
je
ret
pop
sub
pushf
and
lods
mov
scas
sar
sub
arpl
(bad)
rcr
mov
jmp
push
ret
pop
push
mov
loop
clc
mov
(bad)
into
or
test
int3
or
mov
sbb
ret
dec
and
mov
and
cmps
or
cmp
or
ss
or
jne
jp
jb
sub
jp
mov
aas
mov
push
loop
sahf
and
dec
push
or
cmp
sbb
jp
or
jl
in
rcl
jmp
lods
dec
shl
jge
gs
and
andps
add
fistp
jmp
sbb
or
shl
lock
leave
test
jne
jae
or
push
push
pushf
fadd
push
or
icebp
es
scas
add
mov
mov
pop
add
jl
and
adc
and
inc
push
add
lods
jae
in
test
nop
mov
xor
push
aaa
jl
ror
add
in
(bad)
mov
adc
sti
add
or
cwde
dec
ins
jno
push
xor
add
jno
pop
aas
pushf
loope
fldenv
cdq
dec
imul
cmp
or
popf
mov
and
or
cmp
movs
sbb
lock
pop
fiadd
cmp
je
pop
sbb
movzx
movsx
int3
fild
add
aam
or
cmp
leave
add
adc
pop
idiv
inc
jl
ret
ins
jns
and
popa
sbb
ret
(bad)
mov
call
out
lahf
leave
in
cmp
push
rol
add
ss
add
or
push
inc
cmp
fstp
push
sbb
ficom
or
or
cmp
ror
inc
sti
or
(bad)
fld
sbb
push
mov
rcl
xor
sar
imul
or
cmp
inc
add
aas
xchg
mov
cdq
add
or
test
add
dec
popf
and
in
scas
jo
push
and
jbe
push
adc
call
add
inc
mov
fdivr
pop
add
adc
push
push
push
and
or
or
mov
lock
xor
in
push
pop
pusha
mov
pop
aaa
pop
jb
mov
mov
sbb
jge
test
cmp
ss
call
sub
ret
jmp
add
or
sub
xor
and
and
add
cmp
call
xor
push
stos
es
or
xchg
hlt
cmps
xor
cmp
pusha
cmps
sbb
(bad)
loopne
inc
cmps
inc
loopne
test
adc
mov
lods
fstp
sub
xchg
cmp
and
or
pop
jae
das
fmul
push
aam
das
rcl
cmp
or
das
dec
das
test
sub
xchg
or
sub
mov
bound
repnz
outs
lea
int
dec
sub
lock
push
fstp
fldz
fadd
inc
xor
dec
cmp
add
add
clc
push
push
mov
adc
xchg
adc
pushf
push
mov
add
aaa
imul
data16
loopne
out
aad
clts
xchg
adc
and
in
push
or
or
pop
sbb
in
push
pop
push
in
adc
and
js
push
cmp
cmp
(bad)
push
add
lea
hlt
or
dec
adc
lock
add
out
mov
add
lahf
or
jnp
pusha
bound
loopne
pop
sete
and
push
and
std
xor
or
test
fidivr
adc
sbb
test
push
and
xor
push
aaa
lock
in
adc
mov
add
and
or
out
xor
nop
xlat
or
or
or
(bad)
nop
jnp
push
inc
and
or
push
xor
outs
mov
scas
adc
push
or
mov
mov
jl
out
mov
add
mov
cmp
jnp
adc
lea
mov
test
lods
inc
inc
xor
es
adc
push
mov
pushf
les
adc
into
push
jle
ror
loopne
push
hlt
(bad)
adc
add
enter
pop
sub
push
cwde
mov
cmp
cmp
push
cs
sti
jno
adc
inc
and
ret
test
inc
add
call
or
sbb
aam
push
xor
jbe
dec
jp
adc
lods
push
jge
outs
jb
stc
test
imul
sub
loop
mov
(bad)
out
ja
(bad)
loopne
add
mov
int
out
jae
cli
pop
loopne
cmp
dec
mov
sar
and
push
cmps
push
ins
inc
mov
sbb
sbb
mov
jl
xchg
cli
aaa
mov
cmp
out
add
nop
jge
fidiv
jne
mov
mov
out
push
lods
adc
cld
push
or
(bad)
cmp
rcr
aaa
cmp
push
or
sbb
movsx
jne
mov
addr16
jp
jno
dec
call
jg
sbb
mul
mov
(bad)
ja
(bad)
outs
pop
test
fs
cmp
imul
add
clc
jne
lds
sub
push
add
sti
pusha
lds
push
xor
pop
push
inc
je
jbe
pop
mov
mov
and
xchg
and
pusha
js
shl
mov
(bad)
xor
xor
xchg
(bad)
sub
ret
adc
push
and
aas
and
push
stos
stos
jmp
inc
inc
cmp
cmp
(bad)
jl
loopne
push
shl
cmp
popa
mov
mov
xor
or
cwde
jbe
lods
dec
inc
adc
rcl
adc
mov
cld
call
call
jae
ret
jle
in
ds
call
sub
xchg
(bad)
outs
and
movsx
jge
inc
xchg
cld
dec
shr
inc
sar
fdivr
and
ins
or
adc
pop
inc
call
clc
stc
cmp
jle
jmp
cmp
retf
adc
div
repnz
in
jb
pop
add
push
pusha
mov
adc
add
fs
push
xor
cmp
jnp
or
adc
push
cmp
or
mov
pushf
dec
pop
dec
add
int
leave
sbb
(bad)
push
cmps
test
in
stc
cwde
jno
test
and
xor
xchg
mov
shr
jbe
dec
jmp
cmp
jnp
fwait
les
xchg
cmp
addr16
add
lea
cwde
adc
stos
or
fsubr
lock
jne
inc
add
sbb
jge
neg
hlt
cmp
jno
shl
(bad)
not
xor
dec
pop
mov
push
add
ins
int
call
dec
jle
mov
cmps
mov
jg
or
add
inc
shr
std
or
je
sbb
sub
cld
out
pop
ret
add
jns
int
psraw
fcom
test
repnz
ret
test
inc
stos
add
adc
push
sbb
inc
mov
pcmpgtd
sub
push
push
sbb
jae
jb
inc
sahf
or
dec
jnp
loop
cmps
mov
mov
sub
cli
sahf
mov
inc
mov
fwait
rol
push
(bad)
lock
movsx
addr16
call
mov
mov
push
dec
sub
cmps
add
add
lods
jge
xor
sbb
xor
arpl
and
cmp
push
cmp
and
cmp
lods
pop
into
push
pop
xlat
push
retf
(bad)
js
lea
int3
cs
jo
cmc
int
js
dec
movs
or
lds
cmp
neg
test
push
imul
movs
mov
and
jae
and
mov
cmp
mov
or
test
add
pushf
ja
daa
shl
inc
das
sbb
xor
jne
inc
or
add
push
mov
push
out
sub
mov
in
(bad)
cmp
out
pop
jg
cmp
jle
popa
jle
mov
loop
mov
add
(bad)
jns
rcl
inc
ja
cs
or
cmp
mov
add
cmps
xchg
jno
adc
adc
push
mov
add
jecxz
mov
inc
pop
mov
pop
jmp
cmp
je
adc
mov
add
mov
and
mov
mov
sbb
mov
ret
pop
inc
cmp
adc
nop
jbe
rcr
and
mov
mov
movs
push
push
(bad)
retf
xor
mov
enter
cmp
(bad)
pop
bnd
or
mov
jmp
or
xor
clc
aaa
stos
mov
lea
jmp
or
push
inc
or
mov
rcr
std
dec
call
mov
retf
(bad)
xlat
xchg
add
xchg
or
ins
sub
sub
adc
enter
mov
sbb
lea
xor
mov
push
pop
adc
fs
inc
scas
call
test
mov
retf
sub
add
add
ret
mov
fisubr
xlat
push
dec
rcr
push
push
mov
add
mov
std
test
js
sub
jae
push
fdivr
mov
mov
push
sub
ror
pop
mov
dec
jg
or
sar
cmp
cmp
int3
jns
int3
add
or
pushf
out
sub
add
lods
mov
jge
shl
std
mul
shr
aad
jmp
jg
scas
fs
add
lea
push
shl
sub
add
sar
sti
imul
les
sar
aad
das
jp
xor
icebp
cmps
lea
sub
mov
push
xchg
popa
adc
sbb
sbb
ror
bound
(bad)
lock
mul
jne
cwde
loopne
cmp
cmc
scas
sysexit
pop
mov
and
cwde
mov
pop
jo
mov
sbb
int3
adc
sbb
sbb
or
pusha
add
jge
lock
inc
addr16
mov
out
mov
dec
jo
rol
pop
cmp
lock
mov
pop
(bad)
adc
jns
fld
fadd
fstp
push
bound
inc
add
sub
add
push
inc
or
mov
test
bound
inc
or
adc
dec
in
or
push
cmp
ror
cld
adc
fs
xor
aaa
mov
push
int3
pop
cs
int
mov
sbb
sub
pop
cmps
aam
data16
sub
or
int3
pop
xor
push
pop
push
dec
push
aaa
and
and
sub
(bad)
push
push
push
rcr
lahf
ins
xchg
sbb
pop
xchg
inc
fld
js
fsubr
sbb
xor
adc
jmp
cmp
je
sub
sbb
push
push
inc
or
cmp
dec
cs
add
call
adc
sub
or
adc
xor
leave
push
nop
sub
or
adc
add
(bad)
sbb
add
xor
sbb
lds
pusha
xor
sbb
sbb
sbb
or
popa
pusha
and
push
sub
inc
das
pusha
adc
das
ror
dec
ret
ins
cmp
dec
into
repz
aas
adc
mov
aas
jne
cmps
aas
test
inc
and
je
push
push
cs
mov
in
xor
push
push
clc
sub
sub
and
mov
and
cli
out
fimul
je
sbb
stos
je
adc
inc
adc
rcr
in
dec
not
jl
or
repnz
in
mov
das
ds
xor
xchg
test
adc
jnp
xor
test
imul
mov
outs
test
and
sub
pop
push
movs
ror
pop
push
hlt
cmp
add
daa
fs
add
xor
retf
popa
xor
sub
arpl
sbb
paddq
movs
lds
inc
(bad)
xchg
xchg
pop
mov
and
jmp
inc
add
jp
lock
mov
cld
mov
ins
xor
cmp
or
push
je
sbb
jge
and
jge
jbe
mov
jmp
sub
ror
shr
imul
or
jg
lsl
fstp
push
add
jg
push
cmp
movzx
push
or
push
add
cmps
jbe
or
cmp
test
mov
xlat
inc
mov
inc
mov
add
lods
sbb
inc
inc
not
test
mov
jns
fucomi
inc
lea
test
inc
inc
cli
and
mov
call
iret
pop
pop
fmul
stc
add
test
mov
mov
sub
sbb
test
mov
pop
lea
fmul
add
and
cwde
cmp
jbe
sub
lea
jge
div
adc
jne
jg
mov
mov
ins
fdiv
xlat
dec
or
adc
or
jle
inc
fadd
lods
jl
cmp
dec
lods
aaa
fild
and
cmp
(bad)
rcr
aam
iret
ret
loopne
jge
xor
ss
lahf
jp
inc
mov
sbb
outs
dec
pop
jecxz
inc
cmp
sbb
sbb
push
retf
inc
sar
jbe
fld
out
cmp
pop
out
adc
fs
xor
test
sbb
inc
iret
adc
or
pusha
ror
add
mov
test
inc
mov
push
xor
test
jbe
sar
or
or
mov
dec
or
pop
xchg
test
loopne
push
pusha
mov
jb
mov
retf
inc
sbb
add
lods
ins
push
mov
or
ror
push
cmps
mov
fild
loop
inc
dec
cmp
xor
outs
jmp
test
aam
lock
xchg
jg
int
shr
sub
pop
jg
mov
cld
xor
hlt
xchg
sub
pop
push
inc
js
loopne
add
mov
lds
sub
enter
or
test
outs
scas
inc
inc
das
fucomp
loopne
inc
hlt
mov
push
fstp
arpl
out
imul
aaa
jmp
mov
cwde
cmc
xchg
mov
pop
cmp
and
and
lods
or
add
mov
stc
pop
sbb
and
mov
cmp
fst
dec
push
scas
(bad)
fistp
or
(bad)
in
jne
mov
push
movs
pop
mov
cmp
push
sub
push
lock
sbb
adc
retf
push
loopne
cmc
mov
lea
lock
or
or
mov
mov
push
aam
ja
dec
cmp
and
inc
push
add
or
mov
xchg
stos
test
shl
jae
jge
add
in
ret
add
xchg
pop
mov
inc
and
xchg
pop
lods
imul
(bad)
xchg
jb
push
adc
and
pop
ret
cmp
pop
mov
add
and
bound
inc
test
arpl
inc
adc
aam
xchg
inc
sbb
and
and
ret
push
mov
jge
(bad)
pop
je
sbb
sar
fdiv
imul
mov
add
adc
dec
mov
inc
mov
stos
cmps
je
aaa
xor
add
inc
mov
cmps
(bad)
and
push
push
and
retf
inc
aam
pop
shl
repz
mov
adc
call
pop
lahf
(bad)
and
(bad)
mov
icebp
mov
adc
test
or
and
rol
cmp
mov
add
inc
aaa
lock
jmp
lea
(bad)
shr
aas
xor
cdq
and
jmp
mov
rcl
and
lds
sbb
(bad)
pop
mov
push
(bad)
jnp
sahf
test
sbb
mov
or
je
and
and
push
ret
jbe
push
inc
add
pop
dec
add
mov
jge
jmp
mov
cmp
sbb
pop
(bad)
push
ss
shr
jmp
or
in
add
sar
es
jp
push
sbb
retf
jo
jge
adc
or
(bad)
jl
ret
je
mov
cmp
mov
push
loop
sar
adc
push
push
push
or
add
mov
rcr
in
test
cmp
jnp
xlat
ficomp
xchg
adc
vmread
icebp
sbb
jle
data16
dec
xor
pop
sub
lock
cmp
loopne
test
push
adc
daa
out
add
inc
adc
xchg
and
jo
mov
jmp
mov
adc
add
cmp
stc
add
inc
add
dec
mov
cmp
jg
ret
out
les
dec
dec
cmp
sbb
ret
pop
loop
push
call
jb
aas
mov
mov
inc
xor
sbb
push
inc
inc
inc
jl
stos
mov
in
and
(bad)
fldenv
or
add
(bad)
jecxz
add
aam
cmp
int3
test
das
and
or
xchg
lea
xor
mov
lea
push
sbb
xor
mov
or
xor
push
or
popa
stos
push
stos
pop
push
popa
jecxz
sub
shl
mov
jns
ja
push
mov
mov
sub
inc
es
or
push
and
mov
call
add
sbb
cld
not
jmp
pop
mov
xor
xor
outs
outs
addr16
outs
in
(bad)
fdivr
jb
push
arpl
adc
movs
add
adc
ret
scas
in
out
add
add
push
add
push
test
cmp
(bad)
push
pop
add
dec
popa
fidivr
push
adc
or
sahf
out
sub
xor
daa
jl
neg
idiv
rcr
jbe
jle
push
push
scas
stc
fidiv
xor
inc
push
test
push
mov
pop
nop
sub
add
sbb
and
fisttp
dec
push
ins
sub
fild
jne
data16
pop
sub
push
dec
dec
mov
add
push
dec
fs
popa
jae
push
dec
cmp
(bad)
out
inc
xor
cmc
push
inc
jb
popa
je
jle
inc
mov
mov
or
ins
data16
das
sub
mov
jae
outs
je
inc
jbe
imul
cmp
fadd
pop
add
iret
adc
mov
cmps
clc
popf
lea
rol
loop
mov
loope
or
clc
mov
push
jmp
call
ret
xlat
push
scas
test
into
pop
lock
sub
ret
psubq
retf
les
lea
popa
adc
lahf
inc
lods
xor
mov
(bad)
jb
add
mov
fld
and
sbb
rcr
ins
daa
sub
pop
push
sbb
push
div
or
fisubr
shl
add
rol
rol
mov
div
jmp
jecxz
mov
jbe
push
xor
cmps
std
add
out
or
pop
add
pop
pop
jl
call
or
mov
inc
cmp
shl
xor
push
in
add
int3
lock
pop
dec
pop
or
jne
sub
add
mov
or
xchg
adc
sbb
in
into
in
sar
add
repz
add
mov
fidiv
add
add
lock
pop
jl
jns
pop
mov
push
fadd
add
push
ror
out
add
out
add
repz
shl
lds
fsubr
shr
jae
jae
lock
outs
sbb
retf
push
sbb
(bad)
addr16
mov
xchg
jg
imul
or
in
fsubr
sbb
add
jns
(bad)
push
xor
je
jno
in
mov
in
or
and
fiadd
popf
mov
push
rol
adc
test
cs
push
push
and
push
adc
dec
mov
push
sbb
lea
and
and
adc
pop
xor
rdpmc
push
mov
jns
and
adc
pop
and
sub
lock
das
mov
mov
shl
add
pop
dec
jmp
in
std
mov
xor
push
call
add
sub
ins
cmp
into
push
jns
mov
leave
and
int
cdq
cmp
ffree
or
xor
sti
loope
xor
fnsave
cmp
leave
rol
cmp
rcr
dec
mov
sub
push
fisttp
out
xor
(bad)
sub
sbb
out
call
push
bnd
or
dec
sbb
rcl
mov
add
loope
lds
repnz
sub
push
loopne
add
loope
adc
scas
xor
push
scas
in
or
inc
jge
ss
adc
fld
adc
sahf
pop
dec
loop
sub
retf
and
call
jmp
pop
leave
sub
std
push
cmp
mov
rcl
add
rcl
or
and
or
and
or
sbb
mov
(bad)
or
in
stos
sbb
cwde
jno
adc
mov
jmp
cmp
push
por
mov
call
in
add
or
xor
or
and
mov
sahf
bound
or
test
out
push
sar
or
and
icebp
lods
scas
aaa
jo
or
ret
rcl
add
jo
sbb
shl
cmp
and
or
sub
add
div
sbb
inc
js
(bad)
clc
push
sti
inc
mov
and
jmp
add
add
sub
popf
xor
and
add
sub
jle
mov
add
test
test
add
and
out
repz
adc
(bad)
adc
add
retf
push
hlt
adc
push
pusha
clc
mov
pop
shr
jb
scas
push
ins
add
mov
or
(bad)
fdivr
xor
adc
loope
ret
and
adc
icebp
push
jmp
push
repnz
sbb
ds
int3
pushf
and
pusha
mov
mov
add
enter
mov
sbb
sub
push
movs
ja
xchg
inc
fsubp
jge
inc
jae
push
adc
fdiv
add
fwait
mov
sti
inc
mov
cmp
jl
inc
or
mov
sti
idiv
and
sbb
repz
or
push
aaa
cmp
jl
mov
mov
in
sbb
adc
sbb
or
aaa
sti
cmp
mov
pop
cmp
int
mov
popa
sbb
out
or
aas
leave
xchg
and
adc
adc
sub
adc
xor
push
clc
popa
sti
push
xor
add
add
mov
inc
mov
and
les
cs
jo
mov
push
mov
scas
cwde
push
dec
mov
add
pop
das
or
sbb
lea
xchg
push
(bad)
inc
xchg
call
adc
(bad)
aas
or
inc
dec
gs
jne
ins
fs
add
cmp
and
mov
(bad)
out
mov
inc
inc
sbb
add
enter
mov
pop
sbb
js
dec
push
ja
xlat
or
adc
test
mov
pop
push
xor
push
xor
jnp
jno
lods
push
dec
push
mov
aad
mov
xor
xor
xchg
mov
cs
pusha
dec
pop
call
or
jmp
and
mov
adc
mov
out
test
sub
dec
fistp
inc
inc
ins
outs
sbb
xchg
add
rol
push
les
fdivr
xchg
dec
popa
ins
push
jmp
dec
retf
dec
and
loop
clc
sub
inc
xchg
jb
and
addr16
rcl
or
rol
inc
gs
jb
mov
dec
pop
add
and
lds
mov
ins
jne
jae
push
bound
pop
inc
mov
push
cld
in
ror
inc
push
jb
outs
arpl
push
outs
frstor
push
push
pop
addr16
ret
les
(bad)
lods
jns
fiadd
or
or
push
fnsave
inc
ret
xchg
or
mov
or
sbb
inc
mov
mov
pop
inc
lea
mov
lahf
ficom
(bad)
add
cli
fwait
adc
fmul
fstp
dec
mov
jno
in
clc
mov
mov
or
stc
aaa
shl
add
inc
mov
jp
jecxz
or
cmp
jmp
xlat
scas
repnz
mov
pusha
inc
add
pop
inc
(bad)
call
scas
adc
add
ficomp
add
cld
and
repz
and
fisttp
mov
outs
fwait
or
add
push
lock
mov
(bad)
push
push
push
mov
popa
push
loopne
jne
mov
or
lea
push
inc
push
loopne
sbb
cmp
loopne
ret
imul
xor
add
push
dec
cld
cmp
and
mov
mov
retf
repnz
hlt
movzx
xor
dec
xor
mov
inc
dec
jne
pop
push
push
loope
xor
jmp
or
shl
mov
or
jle
mov
mov
add
or
pop
or
clc
clc
jp
ins
inc
and
mov
cmp
jle
stos
or
pop
mov
inc
or
sbb
pop
pop
pop
inc
adc
push
jne
and
mov
push
popa
pop
and
xor
mov
mov
inc
mov
addr16
js
fld
mov
push
add
pushf
(bad)
div
dec
adc
sbb
cmp
mov
call
mov
adc
xor
jnp
mov
xor
ror
inc
and
mov
cmp
pop
add
movs
sub
shl
and
xor
push
outs
scas
outs
stos
or
cmc
add
hlt
xor
loop
into
adc
aam
cs
mov
xchg
cmps
mov
jg
pop
(bad)
imul
push
ds
and
je
es
pop
clc
jmp
push
pusha
dec
loopne
in
shl
jnp
xlat
out
or
ss
retf
pop
loop
mov
sub
or
retf
lods
add
sbb
ja
(bad)
pop
inc
in
mov
cld
pop
in
mov
pop
enter
or
pop
sub
jo
add
sar
cmps
and
dec
add
sbb
leave
sahf
fild
nop
sbb
add
or
and
sub
(bad)
fdiv
dec
pop
inc
cmp
fadd
jle
jo
mov
es
mov
(bad)
cmp
pusha
add
adc
push
pushf
push
aas
fmul
retf
pushf
push
add
jnp
add
mov
mov
cld
push
add
inc
add
add
sub
cvtps2pi
adc
sub
pushf
adc
cmp
loope
outs
adc
cmovle
push
fcmovnu
movs
mov
inc
add
cmp
inc
fmul
add
inc
(bad)
call
inc
dec
push
push
gs
js
gs
imul
add
mov
int3
ret
mov
push
dec
add
push
cs
out
das
cli
push
call
ins
push
inc
bound
out
pop
out
arpl
jb
jb
push
sub
sbb
push
cwde
pop
sti
mov
push
nop
dec
push
mov
sti
push
xor
(bad)
or
pop
push
inc
mov
or
push
jmp
movs
add
or
es
or
jnp
jae
sub
add
clc
jmp
pop
int
xchg
loopne
data16
dec
push
push
ret
sbb
ins
cmps
in
dec
leave
les
cmp
jp
or
sbb
das
add
adc
add
add
or
adc
movs
or
cs
jp
je
(bad)
ds
xchg
or
gs
popa
addr16
and
xor
fist
cmp
dec
stos
adc
fiadd
jle
mov
add
femms
dec
sub
push
jns
and
jmp
out
ror
pop
dec
test
ror
jmp
loopne
stos
imul
inc
mov
(bad)
adc
cmp
int3
jne
jg
call
xchg
xlat
mov
cmp
sbb
push
mov
popa
add
daa
cmp
add
cmp
call
aad
hlt
pop
or
cmp
fld
nop
fwait
sbb
clc
sbb
ins
inc
imul
out
inc
xlat
jecxz
jnp
push
add
push
in
in
add
sbb
repnz
mov
gs
(bad)
xchg
push
push
mov
and
pusha
sub
sub
jae
jmp
pop
je
and
cdq
leave
push
dec
ins
and
arpl
lock
adc
gs
outs
je
sbb
int
cld
dec
inc
xor
adc
or
fcmovbe
or
test
cmp
dec
mov
push
sbb
push
and
scas
les
jb
jae
call
pop
sar
sbb
(bad)
add
dec
bound
dec
jae
push
jo
xor
aaa
sub
inc
cmps
push
ds
cmp
je
xor
in
push
fild
in
pop
(bad)
add
je
push
xor
retf
out
(bad)
mov
push
imul
jmp
sub
adc
mov
inc
ins
popa
enter
jne
pusha
dec
enter
outs
mov
add
mov
fnstenv
das
mov
jb
mov
cmp
mov
outs
add
ja
or
and
add
rol
inc
pop
bndldx
dec
jne
mov
aad
jge
popa
jb
inc
bound
cmps
popa
push
sbb
ins
daa
les
push
es
adc
ror
fsub
mov
add
add
inc
es
(bad)
ficom
std
inc
xchg
xor
jecxz
push
sbb
dec
jo
out
sub
gs
imul
sti
xor
stc
inc
mov
pop
and
into
xlat
(bad)
addr16
sub
pushf
or
mov
fwait
idiv
xor
mov
add
sub
data16
(bad)
(bad)
push
push
push
dec
arpl
adc
push
mov
dec
mov
aaa
and
sbb
dec
pop
cmps
pusha
addr16
jne
das
xor
loop
imul
popa
outs
loop
imul
push
or
or
inc
fwait
sbb
xchg
cmp
ja
leave
(bad)
(bad)
jnp
imul
cmp
test
xor
xor
adc
or
push
dec
dec
addr16
(bad)
aas
or
(bad)
in
xchg
sbb
sbb
les
outs
add
or
dec
dec
inc
fs
dec
sbb
fst
clc
bound
data16
shr
mov
pusha
dec
cmp
outs
adc
ja
push
push
nop
gs
add
jecxz
mov
push
inc
xchg
or
xchg
ret
sub
jg
and
clc
push
outs
xchg
xor
ja
pop
inc
mov
sbb
lock
outs
mov
inc
loop
fild
gs
mov
outs
fiadd
pushf
sbb
mov
or
pusha
not
push
and
data16
aad
jbe
inc
jbe
adc
clc
or
cli
cmp
push
test
bound
into
pop
xor
mov
pop
inc
call
sub
inc
xor
data16
mov
das
pushf
pop
push
gs
dec
das
fsubr
scas
hlt
add
pop
add
fidivr
(bad)
ret
jne
jge
pop
jo
cmp
adc
(bad)
mov
adc
dec
cmp
or
les
(bad)
mov
mov
sbb
mov
js
outs
out
cmp
leave
(bad)
cli
push
or
ja
jecxz
add
fs
dec
mov
mov
push
inc
movs
call
pusha
fmul
and
ret
outs
xchg
cmp
ffreep
loopne
jg
ja
mov
fist
cmp
(bad)
xor
jmp
jmp
imul
jns
jp
outs
jnp
xchg
cwde
xchg
cs
dec
ja
and
mov
add
pop
push
add
or
pop
push
gs
mov
jl
add
cmp
aam
js
stos
ret
into
push
xchg
mov
xchg
push
ja
jae
mov
jns
iret
in
add
xor
leave
out
je
aaa
mov
imul
push
jbe
lock
cmc
add
jns
outs
outs
repnz
call
sbb
jne
fcomp
les
xchg
lea
and
inc
imul
mov
(bad)
jl
aaa
push
inc
(bad)
call
cmp
jnp
mov
jmp
cmp
xchg
scas
ds
xchg
dec
or
out
pop
ins
jo
ja
mov
inc
jne
outs
ins
js
clc
(bad)
jg
add
daa
pop
dec
cmps
sbb
sbb
jge
and
inc
(bad)
jg
test
fcomp
mov
mov
pusha
sub
arpl
xchg
and
es
(bad)
jg
pop
mov
pop
dec
cmp
(bad)
or
outs
or
(bad)
jmp
add
mov
repz
pop
cmc
inc
mov
(bad)
inc
pop
mov
outs
mov
push
fsubr
imul
push
jle
dec
mov
fistp
inc
in
xor
repnz
jmp
sbb
dec
sbb
and
mov
sahf
or
cmps
jp
(bad)
out
xor
cdq
inc
sub
pop
mov
ins
jns
or
popf
test
add
icebp
rcl
or
and
or
fistp
nop
mov
add
imul
std
adc
xchg
sub
xchg
jo
lods
cmp
rol
les
mov
(bad)
push
je
push
add
rol
xchg
dec
xchg
xchg
sbb
push
add
loope
cld
outs
xchg
jg
or
repz
stos
xchg
sbb
mov
xchg
dec
(bad)
sahf
or
pop
fdivr
jle
jg
aaa
js
loopne
clc
or
sbb
icebp
inc
sahf
movs
arpl
int
lock
jo
jmp
add
inc
add
ja
fs
xor
sub
push
(bad)
sub
inc
aam
mov
outs
or
push
and
or
mov
aaa
daa
aaa
add
aaa
daa
cmp
cmp
add
and
lods
add
jg
fisubr
xlat
jns
retf
and
adc
(bad)
jmp
jb
shl
dec
pop
mov
xor
add
adc
push
inc
ret
push
(bad)
jg
ret
pop
loope
inc
cmp
cdq
aam
popa
push
jae
add
out
push
mov
call
lods
mov
sbb
add
or
call
push
fdivr
and
pop
mov
mov
xchg
inc
mov
sar
or
cdq
xchg
pusha
cmp
jle
push
xor
cmps
movs
mov
mov
mov
mov
jg
movs
jg
add
mov
mov
inc
stc
(bad)
adc
push
jmp
or
add
ja
add
std
call
and
mov
dec
lahf
mov
mov
mov
ja
push
arpl
jg
push
and
test
ins
jle
inc
stos
inc
je
test
arpl
push
leave
(bad)
or
xlat
outs
(bad)
jg
icebp
dec
push
push
add
adc
loope
es
mov
test
mov
adc
call
push
push
or
cmp
mov
mov
inc
ins
inc
mov
xchg
and
fst
mov
push
aam
xchg
enter
outs
jge
stos
sub
dec
sar
int3
jb
and
sub
aaa
mov
pop
mov
push
mov
inc
enter
lea
sbb
test
and
mov
bnd
adc
sub
aam
(bad)
cmp
dec
mov
push
add
jo
addr16
and
stc
loop
out
test
(bad)
jmp
inc
jb
fadd
(bad)
pop
cwde
outs
pusha
sbb
push
pop
push
inc
push
adc
(bad)
jmp
ret
jb
mov
jmp
add
je
iret
sar
or
mov
test
pop
inc
xchg
mov
add
jb
popa
jns
push
jns
seta
cmp
in
test
sbb
add
pusha
inc
xor
push
pop
adc
add
fdiv
loope
dec
ins
int3
cdq
xchg
ret
out
cmps
push
mov
imul
imul
in
and
push
fcom
xor
push
cmp
aad
inc
mov
loopne
cmp
nop
or
and
inc
inc
and
rcr
pop
(bad)
jge
rcr
call
xor
sub
call
cmps
push
loop
xchg
mov
cmps
mov
(bad)
(bad)
cmp
cmps
jae
and
in
inc
jno
pop
or
push
sub
cmp
inc
pop
daa
in
dec
or
mov
lahf
add
das
add
add
push
add
or
or
pop
xor
lock
cmp
push
loopne
dec
or
pop
(bad)
out
push
es
mov
mov
mov
lock
aas
push
(bad)
push
fcom
or
mov
fiadd
push
and
imul
push
inc
push
dec
inc
sub
dec
sub
push
retf
loop
outs
mov
mov
jp
push
push
popa
ins
dec
pushw
pop
lock
or
cmp
(bad)
push
cmp
add
and
shl
adc
leave
inc
cld
pusha
add
add
xor
in
add
adc
push
and
pop
add
pop
sub
cmp
cwde
push
or
or
mov
and
xor
pop
push
jae
add
or
push
inc
outs
jne
je
adc
or
outs
push
sub
icebp
loopne
or
dec
outs
outs
dec
repnz
or
sbb
or
pop
jg
int
imul
sbb
sbb
imul
pop
add
and
neg
add
add
or
pop
pusha
or
pop
sbb
outs
lahf
sub
xchg
das
mov
iret
add
sbb
push
loope
cmp
jmp
movs
adc
fistp
push
dec
push
out
(bad)
loopne
les
xchg
daa
leave
jo
mov
dec
mov
shl
push
(bad)
in
sub
je
int
shl
pop
aaa
pop
xor
mov
pop
popa
pop
push
outs
cdq
dec
je
or
ror
dec
inc
sub
xchg
pop
scas
push
cmp
mov
(bad)
push
sub
pop
data16
jb
mov
add
sbb
fisttp
inc
fcom
shr
push
jmp
mov
(bad)
data16
xor
xor
test
je
push
(bad)
aas
xlat
enter
inc
jno
add
dec
push
pop
jecxz
rol
jbe
jbe
mov
push
mov
nop
push
fbld
xchg
jp
jo
and
jmp
outs
dec
jns
dec
int3
add
mov
push
sub
sbb
sbb
adc
neg
add
xchg
(bad)
mov
mov
adc
call
dec
xor
fldcw
ins
mov
sbb
sgdtd
popf
cmp
inc
xchg
sbb
or
inc
xor
ror
rcr
jl
jns
sub
pusha
aas
pop
lea
shr
rcl
and
out
pop
xor
imul
push
lds
dec
dec
in
xlat
xlat
imul
jae
xchg
mov
pop
loopne
pusha
xor
icebp
add
inc
loope
mov
sub
out
or
inc
mov
add
add
scas
inc
lahf
fs
dec
push
adc
inc
sub
inc
sub
das
dec
or
sub
aaa
inc
add
hlt
test
das
or
test
ins
adc
popa
in
fild
push
scas
pop
jl
add
fs
xor
loope
mov
inc
out
sub
daa
adc
add
inc
dec
mov
inc
ja
pop
inc
call
add
inc
sbb
push
(bad)
jo
mov
test
ror
adc
or
inc
das
add
jmp
push
jns
mov
pop
inc
push
in
push
xchg
imul
dec
mov
xchg
xchg
pop
add
or
lds
jecxz
ins
hlt
aam
add
imul
inc
jno
xor
clc
scas
loope
add
inc
and
lods
add
sub
lahf
push
push
lahf
or
adc
loope
test
push
movs
and
test
out
mov
scas
inc
and
inc
test
jl
test
cwde
add
push
push
inc
dec
inc
add
pop
stos
jmp
add
sbb
mov
add
test
nop
movs
test
mov
das
out
push
mov
loopne
(bad)
mov
outs
nop
push
or
or
arpl
imul
retf
jno
(bad)
pusha
cwde
or
mov
sbb
fdiv
sbb
jns
addr16
or
pushf
cs
add
adc
call
lea
je
jbe
cmp
jo
movs
jno
bound
lods
das
retf
push
iret
ins
sbb
sbb
pop
push
lock
jno
push
lea
pop
mov
aas
push
cmps
ins
push
xor
shr
mov
mov
or
adc
lods
push
mov
mov
adc
bound
pop
ror
mov
pop
xlat
xchg
adc
mov
pop
jo
jae
sbb
adc
push
or
fisttp
add
xchg
lds
xchg
mov
pop
(bad)
fisubr
add
inc
fild
loopne
stos
in
push
add
adc
das
dec
push
xlat
aaa
imul
or
aad
mov
js
push
pop
push
test
aam
je
je
sbb
addr16
xchg
sub
adc
add
fst
lods
jmp
mov
mov
fwait
mov
push
push
xchg
sahf
imul
call
xor
(bad)
or
rol
call
xor
push
fwait
daa
pop
repz
les
add
inc
fsub
mov
les
jmp
fnsave
dec
lock
cmp
jb
ja
jae
enter
and
and
mov
and
dec
neg
and
jge
lds
arpl
add
test
arpl
adc
sbb
inc
loope
adc
pop
jbe
repnz
ss
jns
test
daa
mov
pmaddwd
js
leave
enter
into
pop
jns
mov
push
mov
mov
and
push
pop
push
mov
loopne
cmp
rol
push
inc
fs
(bad)
xlat
setae
fimul
inc
inc
popa
cli
arpl
iret
addr16
xor
inc
or
or
mov
dec
add
cwde
mov
jecxz
ret
sub
call
lds
fsubr
or
jae
sbb
sti
push
lea
lahf
fwait
add
sub
dec
add
fs
loope
push
or
out
(bad)
pop
fwait
or
xor
dec
jno
out
fs
js
fprem
ds
add
add
inc
repz
mov
add
cmp
(bad)
lock
xor
xor
pop
push
js
or
shl
add
and
push
xor
pop
xor
adc
push
inc
add
sbb
sar
mov
inc
ret
inc
shl
pop
dec
aaa
popw
fiadd
mov
jb
xchg
out
clc
and
pusha
or
ins
pop
add
cmp
dec
pop
repnz
push
dec
outs
or
xchg
jae
sub
out
dec
jo
mov
xchg
imul
sbb
sti
sti
aad
rcl
xor
lock
add
movs
dec
std
popf
in
jo
inc
push
xor
xchg
paddusb
xchg
or
sub
add
add
pop
out
scas
les
jnp
cs
xor
enter
inc
or
int3
sbb
jmp
push
add
jae
and
lock
cmp
rol
inc
or
xor
aaa
pop
in
pop
dec
or
pop
movs
mov
pop
loope
or
(bad)
pusha
or
test
xchg
push
daa
dec
rcl
mov
add
sbb
xlat
and
dec
pusha
adc
fadd
outs
pusha
sbb
dec
rcl
in
in
call
jl
push
add
mov
cmp
mov
enter
adc
xchg
pop
pop
das
data16
(bad)
push
pop
shl
push
(bad)
xchg
xchg
mov
or
mov
punpcklbw
out
pop
outs
cmp
mov
ds
mov
add
and
cmps
inc
sbb
das
shl
aam
out
inc
xchg
scas
add
pop
fsub
push
(bad)
sub
mov
mov
aaa
loop
call
loop
or
inc
cmp
xor
jnp
jne
add
xchg
pop
inc
sub
push
jg
add
cmp
jg
mov
adc
call
or
push
mov
arpl
add
add
les
mov
inc
popa
mov
mov
add
nop
adc
push
dec
cdq
fadd
xchg
pop
in
and
lock
add
neg
sbb
inc
sub
or
sbb
xor
test
sub
jbe
ror
sbb
test
add
test
jo
mov
sbb
mov
dec
aas
cs
jmp
and
sub
mov
sbb
jo
mov
mov
sub
sub
jne
push
and
(bad)
clc
stos
push
push
mov
rol
and
jns
or
pop
scas
pop
mov
add
cmc
push
test
stos
sbb
sbb
sbb
add
xchg
outs
dec
add
es
and
out
aad
aas
test
pop
add
jmp
idiv
push
ja
add
xor
das
cmp
cmc
mov
push
sbb
or
jmp
clc
aas
mov
out
je
test
cmp
push
dec
and
shl
sbb
(bad)
rol
pop
lods
and
pop
scas
and
sti
add
cmp
xchg
add
or
xor
cmp
std
add
cdq
aas
adc
jae
dec
rcr
rsqrtps
pop
les
xlat
xchg
add
rol
add
pop
pop
pop
test
pusha
pop
fnsave
jns
jmp
mov
add
mov
add
pop
mov
out
(bad)
push
out
xlat
jmp
std
adc
sbb
cmp
imul
mov
arpl
sub
daa
fiadd
mov
adc
inc
pushf
mov
or
push
mov
mov
shr
dec
test
test
addr16
xchg
movsx
daa
add
push
push
cmp
mov
mov
adc
and
in
pop
pusha
push
add
push
adc
adc
repz
push
leave
pop
ret
mov
add
call
add
jo
mov
ret
jl
je
add
add
pop
mov
imul
mov
mov
sbb
pop
add
mov
es
das
fisttp
push
pop
neg
loope
inc
sub
loopne
cmp
cmp
aaa
je
aaa
mov
in
mov
or
pop
inc
aam
push
pop
mov
retf
inc
pop
or
push
pop
push
pop
add
push
dec
dec
outs
or
les
mov
jne
add
mov
pop
pop
push
ins
(bad)
or
ja
ja
add
jne
mov
in
es
and
dec
jmp
(bad)
pop
neg
out
scas
push
add
mov
mov
or
neg
or
push
stc
xor
lods
aaa
aam
jo
add
push
pop
pop
cmc
jns
lds
mov
aad
mov
shl
jnp
rcl
xchg
inc
sbb
xor
push
mov
das
xchg
xchg
inc
int3
cli
mov
xchg
inc
je
push
cmp
push
enter
loope
inc
push
pop
push
inc
mov
cmp
test
xor
adc
fsubr
mov
cmp
call
or
or
cmp
loopne
scas
sbb
push
sahf
fsub
and
dec
push
(bad)
(bad)
sbb
mov
mov
cmp
test
pop
mov
and
cs
mov
loop
cmp
jo
lahf
adc
cwde
pushf
and
test
or
xchg
loopne
test
push
test
xchg
sbb
in
dec
adc
test
inc
add
(bad)
rol
daa
inc
pop
fadd
mov
sub
mov
or
xchg
adc
cmp
lds
add
repz
adc
mov
xchg
mov
inc
push
xchg
test
pop
push
inc
add
sub
adc
cmp
mov
sbb
test
adc
stos
xchg
adc
shl
les
loopne
inc
and
mov
or
xor
or
xor
add
add
aam
popf
push
test
pop
rcl
xchg
xchg
add
or
add
pop
cmp
pop
xor
call
fdivr
or
or
sbb
adc
and
mov
fld
in
ret
imul
fnstenv
push
push
adc
mov
fwait
push
hlt
adc
adc
mov
mov
daa
sbb
cmp
paddb
iret
ds
or
push
ja
jae
imul
stos
xchg
aam
jo
sbb
wrmsr
adc
add
(bad)
les
add
mov
sub
shr
jnp
or
mov
inc
pop
jnp
jne
mov
add
xchg
pop
adc
pusha
nop
cdq
adc
dec
xor
jecxz
rcl
and
pop
(bad)
stos
push
test
mov
pushf
and
sbb
pop
sub
xor
add
sub
nop
sbb
cvtps2pi
inc
jmp
dec
lock
pop
sub
add
jle
push
inc
popa
les
adc
pusha
xor
outs
push
ja
out
rcl
fs
jo
add
push
jo
into
in
ss
pop
in
pop
js
xchg
pusha
adc
call
cmp
adc
add
jmp
or
jg
int
cmp
inc
mov
fdivr
fcomp
or
fwait
sbb
das
dec
iret
fadd
loopne
dec
icebp
dec
js
mov
cmp
js
jne
mov
inc
and
inc
adc
jno
and
sar
cmp
jo
(bad)
mov
ret
jo
outs
sar
push
mov
dec
inc
sub
add
jo
pop
scas
lea
or
xchg
push
popa
rol
(bad)
mov
dec
std
fild
xchg
pusha
loope
cmps
pop
cs
rcl
and
push
adc
xor
inc
hlt
mov
mov
in
jo
push
mov
mov
or
les
das
mov
outs
add
movs
mov
cmp
aaa
xlat
pop
popa
jo
or
inc
push
xchg
jne
shl
sbb
movs
or
xor
xor
mov
xor
in
call
xor
jns
addr16
and
sub
push
(bad)
lahf
fmulp
jecxz
pushf
and
xchg
add
sahf
or
push
scas
and
(bad)
cmps
push
lahf
sub
in
cld
jmp
scas
imul
xchg
(bad)
loopne
or
lahf
sbb
lahf
inc
push
add
out
stos
mov
dec
out
jl
add
test
scas
je
ret
shl
push
sbb
mov
ins
push
or
sbb
mov
xlat
pop
pusha
xchg
add
gs
add
jecxz
and
mov
dec
pusha
jne
(bad)
movs
pop
fist
daa
pop
cmps
(bad)
mov
mov
add
ja
push
jbe
add
icebp
call
das
sub
popa
push
push
sbb
imul
call
and
push
test
and
adc
add
mov
push
and
inc
add
ror
rcl
xchg
icebp
or
mov
jnp
inc
mov
test
dec
es
xchg
push
sub
add
sub
jl
push
ja
aad
int
cmps
test
cmps
xor
and
jno
adc
push
scas
sub
ins
je
pop
or
sbb
sub
sbb
fisttp
xchg
fcmovnbe
daa
push
pop
movs
pusha
mov
fistp
jne
(bad)
(bad)
daa
adc
test
pop
inc
pop
fucomp
mov
push
pop
lea
mov
or
and
retf
test
push
add
push
jecxz
fsubr
das
pop
sbb
movs
pusha
cwde
xlat
cmp
mov
lds
dec
push
test
mov
aam
push
add
jns
addr16
inc
add
test
loop
sub
add
mov
pop
outs
sub
xor
int3
pop
push
sbb
xor
xor
mov
sti
push
loopne
pop
fisubr
push
mov
sub
mov
ins
xor
dec
xor
xchg
sub
das
add
or
dec
adc
mov
xor
mov
popa
mov
push
pop
sbb
in
push
mov
imul
push
outs
(bad)
cmpps
sbb
scas
sub
mov
in
mov
push
cmp
xchg
push
jmp
shr
cwde
push
push
psllq
add
shr
aam
adc
stc
in
ins
adc
pop
enter
sub
or
(bad)
or
lock
or
adc
jae
push
and
add
loope
inc
pusha
mov
push
loopne
inc
bound
or
xor
pop
lods
pop
dec
push
inc
cld
xor
push
add
pushf
fs
push
adc
imul
inc
repnz
loopne
pop
sub
add
mov
dec
push
push
inc
adc
adc
adc
and
fadd
and
dec
add
mov
test
loopne
pop
pop
shl
xchg
adc
inc
pop
jae
push
pop
and
dec
xchg
inc
test
inc
imul
aam
add
pabsd
int
hlt
shl
movs
xor
mov
inc
xlat
data16
lods
pusha
pop
lea
rol
pop
or
pop
push
and
xlat
enter
or
xor
dec
fnstcw
(bad)
movs
xor
add
xlat
and
pusha
pop
or
cmp
adc
sbb
pop
sub
mov
push
push
mov
mov
cmp
sti
mov
jmp
test
je
mov
and
shr
mov
outs
dec
push
fsub
sete
test
je
mov
push
add
out
xchg
adc
jbe
and
dec
sbb
leave
lds
jmp
je
cmp
scas
nop
add
leave
or
adc
cmp
pop
fist
bound
mov
adc
push
sub
mov
data16
call
rcl
gs
ins
add
xor
xor
sub
jbe
sbb
pop
add
outs
add
or
arpl
add
add
pushw
dec
jo
dec
call
jg
cmp
pop
mov
mov
movs
les
loope
shl
jmp
mov
hlt
es
jp
ret
lea
jmp
ds
xor
mov
mov
js
add
jmp
aad
(bad)
and
jnp
mov
test
xchg
movs
in
divps
mov
mov
sub
cmp
dec
push
mov
inc
xstore-rng
cmps
add
out
mov
pusha
sbb
mov
test
or
inc
or
inc
cld
adc
lods
lea
mov
pop
jns
js
inc
mov
pop
je
push
fwait
loopne
push
xor
or
jo
push
scas
test
pmulhw
fs
jp
pop
pusha
sbb
les
sub
into
add
push
and
xor
mov
add
lods
test
mov
mov
int3
clc
mov
mov
ss
shr
mov
rcr
sbb
and
dec
cmps
hlt
mov
dec
ror
fsub
mov
ror
push
in
stos
push
mov
clc
push
cmp
push
push
mov
inc
aam
inc
fcom
mov
push
cs
mov
loope
daa
retf
adc
dec
add
sti
or
push
mov
shl
mov
jnp
mov
xor
scas
adc
fiadd
mov
test
je
or
std
pop
sbb
xor
sub
scas
aas
cld
ss
or
sbb
mov
or
test
xchg
or
jbe
fdiv
out
adc
push
or
cmps
fs
mov
enter
cmp
rol
and
lods
lods
sub
test
cmp
test
mov
(bad)
push
movs
(bad)
les
mov
pop
sbb
mov
xor
(bad)
loope
call
mov
mov
int3
sbb
sub
outs
lahf
mov
mov
pop
ret
push
mov
mov
xchg
popa
pop
shr
xchg
sbb
add
or
sbb
push
mov
dec
jne
push
xchg
mov
jb
mov
xchg
or
push
into
jae
push
lea
outs
inc
(bad)
outs
js
jo
lea
dec
movs
ror
mov
lea
mov
popf
dec
sub
and
inc
call
and
cmp
std
push
clc
add
std
movs
add
add
ja
sbb
dec
cmp
lea
fst
sbb
pop
pop
inc
movs
sbb
test
sub
push
jl
test
test
pusha
jp
sbb
mov
push
sub
inc
ror
sti
mov
int3
inc
pop
push
pusha
shl
sbb
pop
lea
rcl
outs
or
(bad)
repz
xchg
xchg
sbb
nop
pop
sbb
(bad)
push
mov
rol
and
icebp
cwde
inc
fwait
sbb
shr
and
je
mov
call
mov
adc
xor
mov
xor
xor
imul
stos
in
test
jle
sub
icebp
jae
pop
ins
nop
aas
adc
aas
inc
ret
shl
inc
aas
dec
ret
add
push
fdivr
cmp
jo
cmp
sbb
mov
jl
add
cmp
adc
js
dec
mov
sbb
jo
mov
mul
jl
test
xchg
and
(bad)
mov
adc
sub
sub
shl
push
adc
jl
and
push
adc
sub
clc
imul
pushf
dec
fld
cmp
(bad)
cmp
jo
cmp
mov
enter
push
cs
xor
adc
or
fadd
rol
xchg
enter
cs
dec
dec
inc
hlt
push
clc
hlt
jns
mov
and
fstp
test
add
jmp
scas
mov
fbstp
leave
pop
or
rol
iret
aas
mov
lods
pop
xor
inc
cs
int3
or
xchg
ficomp
adc
lock
push
mov
int
dec
add
dec
ins
add
or
push
(bad)
push
xchg
push
data16
lds
add
je
iret
and
dec
sub
dec
hlt
mov
hlt
sbb
inc
inc
(bad)
leave
cs
pop
pop
push
cs
and
pushf
jmp
or
mov
cmp
pop
mov
js
in
mov
sbb
jne
mov
leave
mov
out
mov
pushf
les
cld
popa
call
mov
sbb
adc
pop
add
mov
dec
out
inc
ret
pop
or
sbb
or
(bad)
repz
mov
lea
call
adc
push
data16
or
or
jmp
inc
and
daa
sbb
cmps
std
jecxz
std
inc
cmp
jne
mov
pop
add
and
out
jmp
or
pop
xlat
jb
mov
outs
lock
cmc
pop
add
je
inc
xchg
(bad)
bound
cld
fisttp
mov
mov
sub
push
clc
in
cmps
(bad)
lods
jbe
add
push
adc
in
movs
inc
xor
or
mov
(bad)
das
xchg
jl
pop
mov
mov
paddb
sbb
lds
nop
jle
adc
adc
pop
daa
cli
aad
add
fmul
clc
inc
mov
retf
dec
sar
hlt
das
dec
jo
cmp
jmp
mov
ss
clc
sub
jge
ret
dec
or
push
push
hlt
gs
sbb
ins
pop
jns
sbb
sub
dec
(bad)
fild
add
cmp
jge
mov
pop
sub
push
push
mov
xor
or
cmp
lock
div
jle
add
or
mov
sub
cmp
cli
jmp
jmp
cmc
push
inc
add
je
shl
sub
xchg
(bad)
loope
jg
clc
shl
and
add
sub
pop
add
clc
scas
cwde
push
hlt
sub
scas
sbb
jl
cmps
pop
test
jl
add
(bad)
adc
push
or
jne
scas
ret
dec
jne
ret
sar
pop
pushf
es
out
add
(bad)
(bad)
mov
pop
int3
adc
call
mov
sbb
adc
adc
push
(bad)
lock
mov
pop
(bad)
mov
or
(bad)
fcomi
loopne
push
cmp
mov
add
ins
js
mov
adc
retw
push
sub
jmp
add
pop
pop
pop
gs
fsubr
mov
jp
mov
xor
inc
pop
mov
push
mov
mov
or
lahf
push
push
xor
std
lods
jmp
pop
jl
push
not
jmp
push
or
inc
adc
jne
mov
in
addr16
js
call
neg
push
ins
clc
not
lods
out
inc
aas
cmp
jg
dec
jmp
add
sub
cmps
sbb
sbb
inc
or
xor
popf
adc
adc
dec
pop
add
and
or
inc
push
fiadd
xchg
stos
fsub
push
mov
(bad)
or
int
mov
retf
or
and
je
adc
and
push
or
adc
sbb
push
or
add
clc
aaa
clc
lahf
or
dec
iret
not
lea
outs
push
imul
adc
lea
jno
mov
jmp
dec
or
adc
add
jp
sub
push
push
lahf
or
fdivp
cdq
test
sbb
ret
sar
push
jl
icebp
sbb
and
or
aad
cmp
adc
dec
sub
adc
mov
add
hlt
test
sub
inc
scas
add
mov
cmp
jb
jno
adc
xor
push
mov
mov
rol
push
add
test
fxch
sbb
in
push
rcl
dec
lock
shr
inc
push
in
in
push
push
sti
adc
inc
in
add
not
and
push
jmp
enter
sub
rol
int3
pop
xor
sub
jae
jae
adc
and
int3
cmc
pop
adc
cmp
xor
or
cmp
jle
loopne
int
sbb
and
jmp
pop
lea
int3
test
movq
or
push
adc
int
push
mov
rol
movhps
dec
and
jo
or
cmp
pop
and
cmps
fbld
pop
sbb
jmp
mov
mov
dec
or
mov
adc
cmp
sbb
and
or
(bad)
cmp
int3
lock
ins
fistp
push
retf
inc
sbb
sbb
nop
push
sub
pop
popa
push
ror
and
cmp
push
sub
clc
jmp
ret
outs
push
ins
(bad)
jno
dec
or
add
rcr
pop
pop
shl
cwde
sub
ret
and
jno
lea
or
cld
cmp
jne
test
add
sbb
or
add
popa
shl
test
(bad)
push
pusha
mov
ret
inc
popa
dec
xor
pop
(bad)
iret
xchg
adc
or
jmp
mov
loopne
xorps
lea
push
sbb
test
jmp
sbb
mov
pop
pop
sbb
mov
in
push
(bad)
cmp
loope
or
retf
xchg
dec
adc
pop
sbb
xchg
push
add
imul
jo
arpl
cli
call
out
add
mov
jl
or
push
sub
mov
fcomp
mov
cmp
inc
adc
stos
cmp
pop
ret
gs
int3
retf
jl
jo
cmps
push
and
cmp
outs
retf
rcl
pop
mov
je
jno
mov
or
push
mov
in
and
adc
sbb
or
mov
call
cmp
sbb
push
in
(bad)
xlat
sbb
pop
aad
pop
xor
pop
test
mov
ss
push
inc
stos
pop
push
scas
push
xchg
sti
ss
jl
mov
inc
dec
or
lahf
or
cmp
je
pop
ret
ror
(bad)
jl
(bad)
popa
inc
sbb
add
clc
jne
repz
sub
data16
out
mov
dec
cmp
pop
xchg
mov
inc
adc
push
enter
ret
or
push
clc
jbe
rcl
ret
pop
jmp
or
mov
push
(bad)
aaa
sbb
mov
mov
jmp
mov
mov
push
(bad)
dec
xor
(bad)
rol
and
aad
sbb
sbb
adc
add
xor
js
xchg
add
mov
or
lods
adc
ja
test
or
hlt
jne
pusha
neg
rcl
lea
dec
femms
ja
fdivr
cli
imul
sub
lods
retf
add
sbb
in
inc
sub
imul
jo
or
jp
or
sub
sub
jb
pop
rol
sub
call
or
nop
shr
cli
aas
fcmovnbe
lahf
dec
pusha
push
sub
shl
pop
call
or
fucom
jl
in
add
das
pop
or
fdivr
shl
lahf
(bad)
arpl
das
sahf
add
jle
test
mov
lahf
mov
or
leave
dec
mov
add
es
adc
fmul
and
or
movs
mov
cvtdq2ps
add
push
dec
in
xor
leave
or
push
pushf
add
dec
dec
pushf
dec
sar
in
dec
or
test
mov
addr16
dec
xor
sub
adc
aaa
mov
add
jmp
dec
xor
push
bound
daa
ret
jb
xchg
pop
adc
in
jg
and
stos
sbb
inc
jg
adc
ret
outs
dec
retf
dec
pop
pusha
sbb
outs
inc
aam
push
ret
xchg
dec
sbb
mov
scas
rcl
test
or
arpl
retf
push
dec
adc
daa
cs
pop
mov
xchg
pop
inc
pop
nop
retf
mov
loopne
add
mov
sub
lods
sub
(bad)
retf
mov
adc
test
push
sub
and
pop
jnp
scas
daa
pop
or
(bad)
fcom
jmp
test
push
mov
popa
jmp
pop
push
rcl
xchg
mov
scas
xor
mov
hlt
(bad)
sbb
test
sar
mov
and
loopne
push
iret
in
dec
inc
sub
push
or
frstor
mov
popf
pop
sbb
loope
cmp
loope
icebp
adc
add
in
adc
out
pop
and
stc
push
jo
add
push
in
adc
ja
fidivr
imul
dec
pop
int
pop
and
dec
cmp
dec
inc
pushf
or
out
cmp
in
cmp
out
aam
and
cmps
push
sub
jmp
mov
out
daa
out
add
cmps
pushf
movs
out
mov
out
cs
cmp
sti
xchg
call
push
(bad)
mov
std
sub
ror
aad
push
fsub
aad
or
dec
or
sbb
cmps
out
popa
add
shl
popf
jmp
or
xchg
mov
daa
out
out
or
sub
xchg
not
imul
mov
adc
mov
je
out
das
or
cwde
in
cmp
xor
imul
cmp
mov
test
dec
nop
dec
iret
xchg
iret
mov
call
jl
fadd
cmps
rcl
and
or
retf
jle
inc
add
adc
and
pop
test
sbb
in
mov
es
in
jbe
call
rol
adc
fcom
pop
jp
cmps
sahf
dec
or
rcr
ror
pushf
xor
rcl
and
add
fisttp
rol
int3
lea
dec
inc
push
lods
call
cmp
cmp
lea
sub
mov
stos
adc
cwde
ret
cmps
out
adc
push
enter
push
pop
sahf
retf
xor
in
lock
xor
adc
das
(bad)
sub
sbb
cmps
dec
push
push
je
jo
adc
push
je
shl
outs
in
pop
(bad)
push
outs
sbb
loop
int
xor
xchg
sub
iret
je
ret
ins
repz
cmps
inc
lock
in
call
test
js
sub
cmp
sbb
mov
arpl
cwde
xor
sub
dec
arpl
or
cmp
bound
in
inc
sbb
push
inc
xlat
dec
out
mov
add
(bad)
dec
or
and
xor
dec
fstp
test
shl
push
pushf
add
ins
das
and
push
sub
xor
rcr
bound
mov
out
sbb
pop
mov
fdivr
cmp
sub
call
sub
pop
mov
imul
cmp
imul
add
out
push
and
adc
add
adc
adc
push
mov
dec
jnp
es
fist
mov
push
lods
mov
cmc
shr
sahf
mov
add
fiadd
mov
mov
retf
hlt
mov
adc
mov
fidivr
xor
sbb
aas
(bad)
mov
adc
pop
fidivr
adc
pop
adc
imul
(bad)
dec
add
es
pop
movs
mov
xchg
jle
push
push
imul
out
adc
sbb
mov
scas
and
mov
cdq
loopne
call
xchg
add
imul
and
xor
(bad)
push
adc
cmp
push
sub
xor
dec
pop
add
daa
shl
mov
sub
inc
and
or
in
out
jno
mov
es
sub
pusha
jno
aam
rol
jnp
jo
jae
cmp
fwait
data16
sbb
sbb
repz
push
aad
fstp
call
pop
adc
mov
add
pop
dec
lahf
nop
jo
aas
popa
cli
aas
fld
(bad)
pfnacc
aad
(bad)
xor
repnz
addr16
imul
dec
push
mov
and
test
cmp
sti
add
test
je
jbe
psrlq
pop
lea
push
add
push
xlat
mov
je
sbb
fisubr
lock
movs
jmp
pop
xor
xchg
mov
xchg
xchg
mov
xchg
sbb
test
and
fs
cmp
je
pushf
xor
push
add
rcl
add
push
push
mov
jp
mov
mov
cmp
lea
int
scas
pop
arpl
test
cmp
out
mov
add
ins
or
sbb
add
mov
out
loop
and
xchg
dec
sub
pop
sbb
or
out
lds
sbb
cmp
pop
ret
loope
adc
push
das
(bad)
mov
fnsave
pusha
fdivr
out
sbb
outs
out
dec
mov
inc
sbb
pop
out
push
outs
and
fdivr
gs
and
call
daa
out
add
and
cmp
mov
aad
test
push
shr
sar
mov
pop
xchg
shr
lahf
jo
pop
lea
push
push
xchg
test
dec
in
jno
pop
fisttp
iret
cmc
cmc
or
xchg
cli
(bad)
ja
mov
mov
shr
cmp
adc
loopne
pop
adc
(bad)
popa
lods
pop
add
clc
sub
mov
pop
test
lahf
pop
adc
push
xor
and
or
scas
mov
fdivr
imul
test
in
or
xor
loopne
dec
adc
add
dec
or
cmp
adc
cmp
in
test
xor
das
cld
pop
in
add
or
push
jge
loopne
add
jmp
jmp
cmp
add
push
pop
push
or
data16
xor
push
loopne
adc
add
jo
pop
in
cmp
sbb
stos
add
push
adc
aaa
pop
fs
push
or
shl
xor
push
mov
sti
pusha
cmc
shl
test
loopne
cs
add
repnz
xor
pop
jno
or
and
pop
lahf
add
adc
out
mov
je
cmps
mov
lods
add
ror
cmp
imul
out
pop
movs
jne
mov
jo
xor
ret
dec
push
and
add
xor
sti
sbb
sbb
dec
fstp
sub
or
pop
sbb
in
sub
dec
sub
jecxz
push
push
inc
xor
retf
shl
or
xor
cmp
mov
(bad)
cld
mov
sbb
dec
daa
out
xor
sbb
pop
add
clc
mov
sbb
cmps
in
mov
pop
fistp
mov
add
shl
mov
loopne
jmp
push
cli
adc
fadd
add
aas
sbb
fcomp
cwde
or
xor
push
add
adc
add
dec
and
dec
fild
push
cmps
mov
mov
ret
dec
out
fst
dec
adc
inc
test
push
loopne
and
add
inc
jmp
call
adc
sbb
mov
push
mov
add
jmp
enter
xchg
mov
dec
dec
push
add
sub
and
pusha
xchg
test
pop
pop
aas
xchg
fadd
adc
push
add
pop
loopne
mov
push
add
lock
in
cmps
aas
icebp
sub
push
adc
out
cld
test
repnz
xchg
cmp
lods
push
movs
lahf
inc
mov
mov
ffree
add
fs
adc
aas
sbb
inc
fild
icebp
push
jno
adc
or
icebp
nop
xchg
inc
repnz
push
pusha
push
xchg
sub
and
and
adc
loopne
pop
lahf
push
cs
dec
jp
xor
psubb
cdq
xor
pop
cmp
jge
jae
lods
das
imul
sub
pop
arpl
pop
push
xchg
cmp
jle
jno
arpl
enter
iret
sbb
daa
std
pusha
mov
lahf
push
mov
adc
sbb
test
jl
mov
jp
cmp
xchg
jl
xor
sti
movs
push
movs
xor
add
in
cmps
cwde
loop
outs
and
inc
popa
push
scas
xor
lea
xchg
int3
pusha
push
lock
push
imul
cld
aam
jmp
add
mov
aad
or
jp
mov
add
jmp
add
mov
or
add
hlt
cmps
push
fmul
jnp
pop
in
je
inc
(bad)
pop
cmp
mov
sub
or
sbb
pusha
pop
xor
test
mov
leave
call
je
push
push
mov
push
je
and
loop
mov
mov
push
sbb
inc
js
loope
push
pop
push
ror
or
push
cs
lea
adc
inc
pop
(bad)
sub
add
mov
cmp
dec
retf
(bad)
test
adc
adc
shl
mov
in
scas
dec
mov
cld
mov
or
mov
jo
je
out
jmp
aad
arpl
or
(bad)
adc
sub
push
cmc
cmc
cmp
aad
in
inc
sbb
add
(bad)
out
inc
add
fst
mov
inc
lea
jg
and
and
js
mov
arpl
sti
push
cmp
or
cmp
mov
mov
std
ja
and
lock
jmp
jmp
jo
cli
mov
lock
(bad)
sbb
rcl
push
mov
ret
enter
jno
add
stos
adc
in
lods
std
call
ficom
xchg
mov
xor
inc
xchg
push
xor
sbb
ret
or
push
jmp
enter
loopne
jp
push
add
jne
pop
test
cld
xor
ret
xor
add
iret
push
sbb
aam
fs
push
retf
dec
lea
les
pop
adc
fiadd
ins
push
dec
pop
cs
pop
movs
dec
lods
cmps
jmp
xchg
out
cmp
jecxz
(bad)
call
(bad)
mov
inc
mov
sbb
or
dec
sbb
jo
adc
mov
retf
loop
and
sahf
cld
test
jl
or
pop
add
sbb
mov
inc
add
xor
lock
dec
lods
cmp
es
out
js
call
fst
lods
pop
add
fdivrp
push
lock
out
loopne
icebp
mov
sub
xor
mov
xchg
push
in
and
loopne
inc
mov
or
lea
add
push
cmp
add
mov
pop
dec
jp
inc
add
dec
jne
xchg
mov
out
inc
or
sbb
sbb
in
fld
ret
push
in
xchg
pop
pop
imul
and
xchg
mov
dec
or
sub
outs
retf
shl
sbb
adc
add
or
push
mov
loopne
inc
xor
xchg
inc
cdq
lods
pop
sub
mov
jo
mov
test
fnstsw
enter
outs
cmp
pop
push
leave
movs
dec
leave
jmp
ror
int
loopne
add
or
je
cmp
dec
ja
add
mov
or
jle
test
cld
xor
mov
mov
test
rcr
cmp
push
sbb
add
test
push
jo
loopne
scas
add
cmp
jge
lea
and
adc
fwait
add
mov
push
adc
sub
aam
jp
sti
push
sub
xchg
mov
ins
jg
xchg
sub
push
retf
cmp
xor
lock
push
xchg
sub
dec
xlat
push
cmp
adc
jnp
test
ret
inc
add
pop
add
jl
add
jae
out
and
jbe
and
outs
xchg
pop
add
les
pop
or
and
pushf
test
daa
lds
cmp
mov
inc
hlt
add
mov
icebp
sub
inc
repnz
jmp
mov
add
adc
add
cmp
test
adc
adc
imul
or
pushf
adc
add
cmc
adc
sub
add
jo
js
test
dec
xchg
clc
push
fs
add
or
mov
ror
add
ficom
outs
add
mov
pop
push
inc
push
push
or
js
stos
icebp
xor
fdiv
pop
rcl
jmp
xor
mov
add
adc
and
push
sub
sbb
aad
pop
push
cli
call
xor
jle
push
cmp
jp
inc
add
jne
icebp
push
sbb
xchg
or
pop
sbb
or
push
call
test
mov
adc
ret
es
xlat
jmp
adc
mov
xor
or
ds
ret
pop
mov
shr
test
ins
data16
(bad)
dec
xchg
add
xor
call
sbb
or
cmp
retf
add
cs
add
aad
cmp
mov
pop
adc
lea
out
in
cld
test
jecxz
iret
xor
test
and
das
stos
mov
mov
push
add
inc
fdiv
dec
sub
lea
daa
test
push
sub
push
sbb
xchg
adc
cmp
adc
popa
cmp
mov
sub
mov
mov
je
sbb
dec
sub
ret
in
ror
adc
xchg
sub
cmp
ret
mov
or
pop
xchg
mov
cmps
outs
sub
call
test
inc
fadd
and
lahf
stos
(bad)
inc
dec
jne
or
fld
sar
fnstcw
add
(bad)
cli
pop
in
cmp
add
cmc
(bad)
jmp
mov
add
dec
ins
jle
adc
imul
scas
aas
shl
movs
stos
(bad)
pop
inc
push
add
aas
clc
dec
adc
fiadd
and
or
ja
mov
jp
pushf
pop
js
fidivr
mov
loop
mov
xchg
mov
cmc
mov
adc
mov
enter
mov
call
mov
or
xchg
adc
push
nop
inc
call
test
push
jmp
pop
out
xchg
push
cmps
ins
jo
or
cmps
test
mov
mul
ss
or
je
jl
shl
retf
dec
js
push
and
arpl
cld
dec
fcomi
mov
jo
clc
jns
aam
or
push
ins
jns
xor
push
es
mov
in
cmps
call
jno
push
mov
jecxz
push
pop
ja
sub
dec
cmp
xor
sahf
je
pushf
or
push
(bad)
add
in
push
push
adc
scas
xor
aaa
add
push
cmp
out
sub
daa
push
pop
xor
stos
push
int3
out
pop
sub
add
ret
inc
and
loopne
cmp
lahf
push
aaa
mov
pop
ror
mov
add
cmp
or
adc
cmp
imul
ss
mov
xchg
jb
scas
jmp
push
aam
or
and
push
cld
push
rol
call
sahf
test
shl
jp
cmc
and
xor
push
in
neg
pop
jo
add
sbb
clc
stc
(bad)
or
inc
test
(bad)
cmc
mov
cmps
rcl
inc
pusha
pop
xchg
(bad)
dec
jp
das
pop
xor
pusha
aam
addr16
neg
cmc
sub
add
scas
xor
not
test
or
not
fisttp
movs
mov
mul
inc
daa
imul
or
mov
mov
cmp
test
sbb
jne
and
test
mov
add
push
jmp
pause
sub
or
inc
dec
and
push
xlat
pop
enter
sub
gs
rcl
mov
adc
ret
mov
push
xchg
loopne
es
in
into
jmp
jecxz
aam
xor
shr
sbb
push
dec
add
cli
or
or
out
aam
sbb
out
mov
enter
or
sbb
aam
in
arpl
shr
out
jle
dec
lahf
int
and
out
mov
das
or
dec
sbb
mov
loopne
aam
inc
mov
out
add
jno
leave
or
sub
test
int3
adc
jns
in
out
out
push
adc
push
repnz
or
sub
nop
inc
cmp
call
cmp
jae
mov
sbb
les
mov
adc
aas
out
mov
or
out
jmp
mov
jmp
mov
jo
xor
in
nop
adc
ins
xor
(bad)
add
mov
lea
icebp
xchg
retf
in
add
jne
ss
icebp
sbb
or
imul
xor
xchg
out
call
daa
call
mov
jmp
or
mov
inc
pop
xor
das
add
push
(bad)
in
sub
xor
mov
es
out
mov
inc
out
out
or
mov
jmp
gs
(bad)
jmp
cs
pop
out
and
xchg
fadd
mov
adc
sbb
js
inc
imul
adc
mov
mov
jmp
mov
cmp
mov
adc
cmps
out
xchg
and
pop
js
xchg
push
and
xchg
adc
inc
mov
inc
ja
movs
pushf
mov
pop
dec
jmp
mov
test
hlt
call
out
inc
xor
aaa
addr16
inc
jne
int3
out
leave
and
cmps
push
xor
xchg
gs
sbb
adc
xchg
sbb
cmps
and
dec
adc
scas
(bad)
or
(bad)
int
push
or
cld
icebp
fcomp
mov
lea
push
js
pusha
adc
outs
daa
and
push
ja
dec
xor
icebp
xchg
mov
(bad)
out
or
or
dec
or
jg
jbe
pusha
adc
add
lahf
push
inc
pop
dec
loope
movs
or
dec
out
jb
loopne
into
mov
icebp
mov
push
test
mov
in
mov
cmps
xchg
push
sub
mov
movs
or
mov
push
xchg
push
jge
and
xchg
mov
ret
mov
xor
repnz
sub
mov
scas
pop
mov
(bad)
push
and
sbb
inc
push
mov
loop
ja
or
in
inc
inc
xor
mov
push
sub
push
add
daa
mov
push
mov
push
adc
pushf
sub
inc
test
dec
xchg
pushf
sub
mov
and
sub
xlat
and
mov
sub
(bad)
jno
xlat
test
mov
popf
in
mov
pop
mov
mov
aam
sub
test
popa
pusha
pop
sub
mov
shr
ret
mov
ficomp
inc
add
add
push
or
cli
xchg
sub
mov
jo
xchg
scas
dec
retf
or
sub
retf
mov
dec
test
dec
xchg
push
ins
or
inc
dec
inc
lock
add
push
push
xchg
cli
xor
inc
add
pop
fist
add
mov
test
(bad)
cdq
dec
in
cmps
push
sub
push
cmps
scas
cmps
cmc
loopne
mov
(bad)
lods
sub
sub
not
adc
sbb
ret
pop
pop
jbe
mov
rcr
pop
loop
aaa
lock
sub
xchg
add
add
inc
mov
push
pusha
sahf
mov
sbb
push
dec
jge
int
sbb
sub
inc
cmp
(bad)
sbb
pusha
pop
add
repz
out
aam
in
adc
fsub
fcmovbe
loop
jmp
cmps
mov
add
call
mov
mov
sar
sub
add
pop
retf
sub
adc
xchg
sbb
shr
hlt
imul
inc
cmp
jge
test
mov
pop
add
test
mov
push
cwde
pop
js
(bad)
(bad)
adc
data16
fwait
pop
outs
pop
aam
pushf
jno
cmp
imul
mov
push
loopne
add
inc
add
sbb
rcr
mov
lds
aam
in
mov
and
(bad)
add
ds
inc
enter
mov
nop
mov
cwde
jmp
cmp
aad
sub
lock
jmp
push
xchg
(bad)
or
mov
jmp
or
mov
inc
dec
out
push
and
jae
pop
sub
jo
pop
add
sbb
or
mov
aas
loop
je
data16
sub
nop
clc
ins
daa
lea
stc
xchg
rol
loopne
or
xor
dec
and
push
push
add
mov
inc
lods
rcl
cmp
sub
mov
iret
ret
adc
mov
fs
(bad)
mov
sbb
ja
(bad)
adc
jnp
jp
movntps
push
xor
ret
or
(bad)
loopne
pcmpeqw
and
sub
mov
jno
jl
and
jecxz
ja
dec
sti
loope
add
pop
outs
mov
aaa
xor
cld
cmp
jne
and
xchg
or
xor
push
pop
movs
dec
inc
jb
pop
lods
outs
xor
sub
in
xchg
scas
ror
push
pop
loopne
sbb
pop
stos
jne
loop
pop
inc
imul
dec
outs
call
cmp
jle
sti
ja
fild
mov
fwait
ins
ret
push
push
pop
xlat
add
push
or
ja
scas
bound
push
ins
sub
retf
push
js
xor
add
(bad)
cmp
push
push
adc
(bad)
ins
push
pop
mov
sub
nop
adc
xor
fcmovu
cs
arpl
shr
ss
fwait
cmp
and
test
mov
pop
(bad)
std
xchg
adc
sub
test
sahf
aaa
pop
mov
pushf
xor
mov
inc
or
mov
stc
cmp
sbb
sbb
xor
leave
add
test
enter
shl
mov
add
gs
xchg
(bad)
sub
data16
lock
hlt
pop
adc
pop
add
aam
rol
(bad)
jno
out
jne
pusha
mov
add
call
ins
xchg
(bad)
cwde
add
adc
jbe
call
je
mov
adc
add
ja
adc
add
xchg
sub
inc
(bad)
and
or
(bad)
adc
xchg
adc
adc
adc
push
les
lds
les
dec
fs
ret
dec
mov
dec
adc
iret
imul
and
in
daa
push
retf
xchg
sub
das
mov
and
push
iret
retf
lods
xlat
test
cmps
bound
mov
or
and
imul
push
adc
call
hlt
iret
fnsetpm(287
test
ds
les
test
mov
inc
test
mov
call
mov
dec
jb
xchg
scas
das
les
lock
rcl
cmp
inc
lods
inc
mov
scas
add
add
mov
adc
sub
jne
xchg
js
cld
and
and
mov
aaa
cwde
mov
sub
sub
mov
bound
aad
lods
je
push
push
loopne
pop
xchg
push
or
rol
xor
fsubr
mov
inc
lods
scas
and
adc
pop
in
push
loopne
xor
inc
mov
lar
jbe
pop
(bad)
push
cmp
inc
add
dec
jmp
call
cdq
xchg
pop
mov
lock
add
in
pop
pop
lods
push
xchg
cs
out
pop
inc
mov
cs
jg
push
test
in
adc
into
jo
cs
fisub
les
push
test
mov
cmc
xchg
and
repnz
fmul
js
inc
sbb
dec
or
adc
loop
adc
adc
sbb
pop
(bad)
repnz
push
xchg
sbb
daa
cmp
lea
fild
fsubr
nop
xchg
in
xor
add
push
outs
sbb
adc
ret
test
retf
aam
icebp
push
out
adc
dec
hlt
aaa
fucomi
out
out
fs
inc
inc
cmp
mov
(bad)
xor
dec
cmp
push
fmul
(bad)
jne
cmp
hlt
pop
or
xlat
cmp
(bad)
sbb
sahf
sub
pop
add
xchg
call
inc
and
out
movs
dec
add
movs
xor
movs
push
enter
out
stos
aam
mov
dec
dec
add
xlat
inc
sub
mov
mov
sbb
sbb
out
nop
ss
je
mov
xchg
push
jmp
stos
mov
jp
cs
into
rol
shl
pop
ss
or
mov
add
xchg
jge
mov
push
inc
pusha
xlat
jl
cmp
ss
push
mov
mov
jnp
adc
in
mov
jo
sub
clc
mov
cwde
jl
jg
push
dec
sbb
jl
mov
loopne
loope
xchg
mov
pop
sbb
aad
mov
mov
ret
cdq
rdpmc
ror
rcl
rcl
xchg
sub
mov
adc
jo
stos
xchg
xchg
sub
or
lea
mov
cmp
add
jns
fisttp
jp
jmp
imul
cs
push
sbb
fdiv
mov
inc
test
cmps
aaa
pop
add
aaa
cmp
aaa
js
jl
or
retf
mov
ficomp
inc
cmp
push
xchg
outs
into
pop
push
push
imul
loope
jns
pusha
dec
push
mov
and
pop
or
jne
ror
xchg
push
iret
xchg
jne
dec
clc
jns
dec
sbb
pop
ins
jns
into
add
or
pop
and
je
movs
jp
push
das
sub
mov
sub
jecxz
mov
call
pop
test
and
cmp
mov
push
xchg
dec
push
jnp
aam
cmp
dec
or
add
cwde
mov
cmp
inc
rol
jmp
sub
iret
or
loopne
out
cmps
inc
mov
aas
imul
movs
pop
mov
into
cmp
jmp
mov
fcom
call
jmp
push
and
xchg
push
add
popa
xchg
mov
and
xchg
mov
icebp
and
xor
sub
popa
lods
ror
mov
cmp
sbb
lods
xor
clc
rcl
loopne
enter
cdq
sub
test
mov
jle
dec
dec
push
mov
in
js
add
rol
lods
adc
jmp
xor
aam
pop
push
imul
enter
jmp
dec
mov
push
pop
jp
idiv
inc
xchg
outs
jmp
je
adc
jmp
inc
daa
or
inc
je
lock
or
jmp
je
and
mov
cs
xlat
adc
imul
dec
sub
shl
add
push
daa
sbb
inc
pusha
push
mov
push
sub
pop
imul
adc
popa
sbb
test
pop
and
mov
(bad)
aaa
test
and
cmp
cmp
add
add
pusha
ficomp
inc
add
and
xchg
ins
das
(bad)
aaa
mov
lahf
je
mov
out
pushf
push
dec
retf
or
sub
pop
test
pop
arpl
push
lock
sub
xchg
call
rol
add
push
xchg
shl
or
fbstp
add
aam
add
mov
sub
jle
dec
in
cmps
xchg
push
scas
and
xor
or
(bad)
adc
dec
dec
push
das
inc
dec
outs
sbb
inc
rcl
and
lahf
add
scas
push
mov
fbstp
sub
cmc
int
add
cmp
mov
adc
add
fmul
inc
adc
loopne
add
(bad)
sub
outs
inc
faddp
inc
sub
imul
adc
paddsb
repz
cmp
in
cli
inc
inc
out
mov
popa
inc
test
inc
(bad)
dec
sub
leave
retf
add
push
cmp
inc
call
xchg
pop
cmp
sub
repnz
sub
sbb
sub
sysexit
mov
or
adc
inc
cmp
jge
test
sub
and
and
dec
mov
je
xchg
dec
adc
add
vcmpps
ds
loope
fnsetpm(287
outs
pop
aam
loopne
sbb
lock
mov
push
push
(bad)
and
add
fcmovbe
pusha
lock
mov
push
xchg
push
fsub
inc
pop
dec
inc
ret
mov
mov
aas
jl
ds
sub
in
ds
fistp
and
add
inc
push
cmp
sub
add
jo
loope
push
fisttp
lods
inc
ins
jo
sbb
outs
iret
or
and
lds
xchg
mov
adc
cs
inc
push
jae
pop
sub
enter
add
add
hlt
sahf
ja
iret
dec
or
jecxz
popa
shr
push
ret
shr
shl
ror
or
loopne
jno
push
rcl
mov
not
movs
cmp
into
loop
ja
xor
cmps
or
js
scas
or
adc
adc
sub
mov
dec
sub
pusha
ret
or
add
dec
(bad)
loop
mov
xor
clc
ja
lods
adc
inc
xlat
in
sub
jno
in
je
in
dec
sub
cmp
mov
mov
add
mov
(bad)
aaa
ja
dec
sbb
loopne
sti
pop
outs
repnz
aaa
push
sbb
aas
cmp
jne
call
jmp
arpl
inc
mov
pop
movs
adc
pop
fs
lods
outs
xor
cmp
rcr
pop
movs
out
push
pop
push
sbb
call
inc
mov
pushf
jnp
push
rcr
sub
(bad)
jle
sti
inc
mov
sbb
aad
pop
add
lods
ja
sbb
ja
jmp
sub
jbe
mov
xor
fs
adc
jl
or
add
or
push
popa
adc
adc
and
loopne
pop
add
outs
cdq
cmp
jns
push
ins
mov
gs
cmp
and
mov
ds
nop/reserved
pushf
adc
mov
sub
sar
pop
nop
xchg
add
jecxz
fiadd
daa
out
sbb
inc
mov
xchg
xor
enter
push
sbb
dec
mov
mov
pop
(bad)
dec
pop
daa
xchg
sub
shl
int
aas
pop
stos
fidivr
xchg
inc
mov
xchg
adc
stc
cmp
dec
mov
pop
fucomp
retf
call
xchg
add
and
jmp
in
test
and
adc
xchg
or
mov
add
add
dec
xchg
dec
data16
dec
dec
push
iret
add
push
dec
rol
jp
mov
add
push
or
xor
mov
push
adc
sete
call
fsubr
shl
jne
xor
sbb
jle
and
aas
mov
lea
dec
cmp
jg
push
pop
push
xlat
or
xor
mov
add
push
add
pop
sbb
jl
or
or
retf
data16
or
ret
sub
inc
mov
pop
pop
ret
call
mov
mov
jmp
or
sub
pop
lock
mov
sub
shr
add
es
sbb
add
loopne
dec
cmp
jge
lea
jmp
data16
rcr
ret
ret
xor
sbb
adc
cmp
aaa
inc
adc
pop
push
je
aam
pop
test
shl
adc
ror
and
daa
dec
mov
ficomp
pop
ja
(bad)
out
pop
dec
pop
and
loop
and
or
enter
aas
arpl
and
mov
enter
add
pop
xchg
mov
(bad)
mov
pop
pop
aam
test
pop
add
xchg
retf
add
pop
add
loop
fdiv
mov
pop
stos
mov
cs
daa
add
lea
sub
enter
xchg
or
xchg
cmp
mov
pop
lds
jl
mov
jo
je
push
or
nop
mov
sub
lods
arpl
jno
push
or
xchg
inc
inc
xchg
mov
push
loope
(bad)
test
pop
pop
mov
and
inc
call
cli
inc
pop
push
push
inc
adc
add
pop
mov
pop
pop
add
and
inc
sahf
mov
ds
nop
sbb
and
xchg
int3
pop
hlt
outs
mov
inc
clc
mov
(bad)
inc
or
popf
xor
jle
inc
daa
rcl
std
out
(bad)
call
xor
lea
movs
add
mov
adc
dec
or
xor
in
pop
sub
dec
xor
jl
push
je
mov
mov
jne
int3
pop
fs
lods
test
adc
cwde
cld
pop
retf
xor
(bad)
xor
pop
inc
dec
mov
lods
push
jecxz
lea
cmp
jle
or
cmp
adc
dec
mov
stos
push
adc
pop
cmps
mov
jne
popa
push
mov
pop
mov
test
out
aaa
gs
loope
out
jns
aam
sbb
test
fld
xor
and
jns
rol
dec
pusha
add
in
sbb
push
xor
nop
xor
nop
sysret
jns
imul
aam
ror
mov
shr
add
cmps
lahf
lds
mov
fcomp
les
jo
stc
ret
add
xchg
jmp
mov
and
mov
(bad)
xchg
popa
ret
mov
adc
sub
sbb
out
jge
out
ret
lock
test
out
popa
xor
ins
in
inc
add
adc
sub
stos
aaa
mov
das
and
lock
mov
mov
add
or
dec
cwde
ret
inc
push
xor
sahf
jns
lds
sbb
jge
cmp
mov
mov
mov
xchg
inc
pop
ja
pop
pop
mov
sbb
bound
inc
dec
popa
adc
inc
pop
imul
adc
pop
cmp
dec
push
pop
dec
retf
sbb
pusha
add
adc
mov
sub
adc
push
dec
imul
jl
(bad)
jmp
jb
push
dec
cs
push
popa
imul
ins
sbb
dec
inc
sub
(bad)
inc
jae
ds
jb
popa
jns
push
loopne
push
dec
mov
push
loopne
push
inc
outs
xchg
imul
ins
arpl
outs
jae
xor
out
ss
xor
mov
in
push
sahf
add
out
sbb
cmove
popa
jne
je
add
adc
or
(bad)
mov
adc
outs
or
inc
jbe
mov
adc
jmp
push
push
dec
sti
test
fbld
cwde
adc
inc
and
push
inc
repz
mov
popa
pop
sub
sub
scas
cmp
ret
cmp
imul
(bad)
out
mov
push
scas
pop
dec
outs
mov
mov
outs
add
jb
pop
das
jbe
popa
fnclex
push
jmp
jge
jle
adc
out
call
nop
idiv
push
and
xor
pop
imul
and
mov
retf
jno
(bad)
xchg
jb
xor
push
inc
sub
adc
popa
addr16
cld
mov
xchg
lds
sub
add
xchg
sub
ins
mov
pop
cmp
add
(bad)
loop
adc
adc
or
ficomp
mov
dec
ins
dec
cmp
and
mov
add
dec
in
data16
jnp
hlt
int
mov
or
lods
cmc
outs
clc
jns
push
add
or
cmp
mov
inc
(bad)
mov
scas
add
stos
mov
push
shl
inc
mov
repz
lahf
sti
add
mov
fimul
cmp
inc
outs
jne
dec
popa
bound
inc
stos
daa
or
lock
(bad)
pop
inc
sub
cmp
scas
xchg
bound
int
pop
mov
test
fstp
xor
fld
icebp
bound
(bad)
push
mov
call
adc
mov
dec
and
add
out
test
adc
add
hlt
inc
or
inc
and
das
cmove
push
mov
mov
fst
fnstenv
sbb
mov
sbb
aaa
or
inc
xor
pop
inc
cmps
ja
add
cdq
dec
xor
pop
push
push
add
pop
fsub
inc
pop
inc
pop
pushf
arpl
pop
data16
jne
mov
popf
in
add
ja
push
add
pop
inc
jne
outs
pop
dec
xor
test
xchg
in
in
cmp
push
int3
scas
push
sbb
push
and
sub
ds
mov
pop
data16
push
out
mov
push
test
push
fwait
sub
test
add
pushf
push
mov
xor
ret
xor
lods
sbb
mov
dec
jo
imul
push
sub
fiadd
mov
or
loopne
add
add
jmp
int3
syscall
js
dec
jnp
add
call
cmps
push
inc
cs
leave
leave
ins
(bad)
rcr
jns
push
mov
fs
enter
movs
jb
repnz
push
jnp
cmp
jns
int3
add
pushf
mov
in
jge
movs
inc
sahf
pushf
pushf
aam
pop
jle
and
dec
mov
adc
popa
daa
daa
daa
pop
xchg
fidivr
mov
pcmpgtb
xchg
pop
ret
push
call
push
add
push
add
xor
add
xchg
imul
stos
sub
aaa
dec
or
xchg
mov
sub
inc
daa
add
add
xor
or
jae
add
lea
jns
xor
add
inc
mov
jle
ror
dec
ins
add
addr16
adc
or
inc
push
popa
jg
call
xor
or
leave
fidivr
inc
fs
mov
pop
jp
push
popa
ins
jne
arpl
add
or
sbb
pop
mov
ins
or
fs
xor
cwde
nop
mov
in
loop
cdq
jbe
stos
rcl
add
ja
add
add
scas
movs
loopne
and
shl
or
ror
out
mov
push
or
dec
xor
or
push
jnp
or
dec
add
or
and
mov
(bad)
push
and
add
call
cmp
pop
xor
mov
add
jae
jmp
add
outs
sub
loopne
imul
inc
in
or
inc
mov
add
dec
inc
or
add
or
lea
add
fs
push
push
inc
ret
xlat
out
imul
lds
clc
push
sbb
and
jo
gs
sbb
add
add
pop
add
push
sbb
mov
add
scas
or
mov
scas
dec
add
arpl
xchg
add
mov
outs
pushf
fnstenv
(bad)
lods
sub
or
loopne
lock
ja
xor
mov
pushf
inc
sub
xor
jae
dec
sti
cmp
jg
add
pop
add
popa
pop
push
sar
mov
inc
push
sbb
es
pushf
add
lock
push
es
sub
jo
rcl
aaa
out
sub
mov
popa
imul
popf
loope
loopne
cmp
dec
lods
out
and
push
daa
mov
cmp
pop
addr16
add
js
retf
xlat
xor
dec
sbb
mov
popa
or
jge
inc
jo
push
and
mov
jge
push
pop
dec
add
ins
or
add
push
xchg
fnstenv
dec
or
sbb
sub
adc
and
cmp
cwde
stos
mov
inc
dec
stos
xchg
mov
and
dec
sub
cli
out
mov
push
jb
ins
mov
jae
and
dec
xor
xor
sub
adc
jnp
fadd
sub
aaa
ins
aam
and
outs
pop
jne
imul
pop
scas
inc
pop
shl
in
add
mov
adc
test
sbb
mov
scas
push
pop
add
cmp
int3
fcmovnb
(bad)
or
sbb
and
sub
sub
mov
mov
push
mov
sahf
popa
mov
je
and
inc
inc
jno
xor
aaa
int
xor
mov
retf
pop
cmp
sbb
adc
adc
xor
sub
xor
add
pop
aas
mov
or
movhps
scas
push
fild
push
add
xlat
jne
fldcw
cld
test
ins
das
mov
iret
mov
mov
or
mov
sbb
or
movs
add
xor
jmp
jmp
cmp
xor
in
call
adc
jmp
stos
jmp
pop
test
sub
jne
shl
pop
bound
sbb
and
dec
test
sbb
fwait
imul
xchg
push
cmp
cmp
mov
(bad)
fstp
es
mov
das
addr16
or
mov
(bad)
pushw
add
test
stos
test
push
and
or
mov
inc
or
dec
sbb
mov
icebp
ins
add
pop
pop
pop
push
sbb
push
bound
aam
pop
inc
mov
fiadd
in
push
mov
loop
push
add
mov
sbb
data16
push
push
in
hlt
or
dec
jge
add
scas
pusha
adc
jne
dec
mov
scas
xor
imul
outs
scas
or
test
fs
push
sbb
lahf
mov
cmps
out
push
out
scas
lahf
push
scas
ss
dec
fstp
push
scas
pop
mov
rdmsr
repnz
mov
add
(bad)
(bad)
lea
cmp
add
xchg
pop
jne
leave
leave
leave
data16
fimul
xor
lds
xor
adc
ins
jnp
into
pop
xchg
aas
setge
iret
pop
cld
push
sahf
cmp
in
adc
aam
mov
push
pop
jno
movs
cmps
mov
dec
push
push
pop
xor
push
into
jno
push
inc
add
inc
xor
add
jno
fsubr
je
jo
cmp
mov
lods
jle
or
cmps
jno
imul
jne
or
jno
sbb
pop
or
ins
push
push
in
cmp
or
jne
or
xchg
inc
add
jno
inc
cmps
outs
cmp
jno
jne
inc
mov
or
jno
sbb
or
sbb
mov
movs
aad
mov
jno
fwait
aad
inc
xchg
gs
sbb
jno
xor
xor
or
jno
push
cmp
je
dec
add
mov
pushf
xor
ds
push
jno
sbb
shl
and
jb
adc
jb
push
ja
xor
mov
inc
int3
sbb
jno
scas
jno
push
push
add
mov
add
and
jno
and
pop
adc
push
dec
jg
push
ja
jno
pop
jno
push
dec
sub
inc
mov
add
aad
cmp
dec
mov
dec
repnz
jno
sbb
aam
jno
push
pushf
cli
inc
dec
add
jno
or
cdq
inc
inc
adc
or
push
mul
add
xchg
call
jno
cmp
adc
inc
inc
cmps
push
adc
and
jne
jno
pusha
inc
pushf
or
xchg
jo
les
dec
dec
jno
lds
loopne
mov
or
popf
xor
xor
lahf
inc
mov
push
inc
sub
(bad)
lds
xor
jno
in
pop
ins
fidivr
adc
mov
out
jb
sub
push
add
jns
fiadd
xor
sbb
dec
sub
xchg
pop
xchg
or
and
and
xor
inc
cmp
xor
push
outs
sub
xor
add
pop
adc
cmp
popa
cmps
mov
sar
jp
push
mov
dec
lock
jecxz
pushf
mov
cmp
mov
pop
inc
sub
ss
out
mov
sbb
fld
jp
loope
test
xor
inc
and
imul
out
in
xlat
mov
dec
bound
adc
and
pop
movs
dec
mov
mov
adc
enter
pop
cs
add
sbb
cmp
jmp
pop
mov
jns
mov
cmps
push
aaa
sbb
jg
mov
mov
jno
(bad)
outs
or
retf
add
es
mov
pop
int
add
loop
stos
outs
mov
or
outs
pusha
into
jecxz
pop
sub
jecxz
mov
pop
lea
sbb
mov
data16
or
(bad)
dec
push
push
or
add
xor
push
fwait
outs
mov
pushf
push
mov
push
sbb
iret
data16
jl
lock
imul
cmp
push
add
clc
test
out
cld
ret
sahf
mov
jne
sub
sbb
sub
add
mov
add
ins
push
sbb
scas
mov
icebp
and
jle
in
xor
popf
mov
add
cmp
push
cmp
push
pop
add
push
cld
pop
mov
div
es
xchg
push
add
lahf
aas
(bad)
cmp
int3
clc
(bad)
int3
sub
loopne
imul
not
push
loopne
aas
or
mov
sbb
add
imul
add
or
aas
dec
outs
adc
(bad)
out
fsub
pop
jo
adc
inc
test
(bad)
ud0
mov
leave
enter
mov
leave
cli
das
movs
jnp
jb
repnz
cmp
xchg
fdivr
cmp
jns
cmps
push
sub
add
sahf
pushf
pushf
ret
test
cmp
dec
dec
(bad)
jmp
test
jb
inc
push
lds
call
add
movs
jmp
pop
xchg
push
cmps
push
cmp
sub
add
cdq
mov
cmp
jmp
pop
jno
add
inc
sub
push
shr
jmp
rol
cmp
push
dec
pop
sbb
mov
adc
jmp
loopne
sbb
cmp
lock
ins
push
push
add
jmp
sub
jne
es
or
cli
jmp
inc
add
adc
sbb
sbb
jmp
xchg
push
or
ja
rol
sbb
jmp
pushf
cmp
add
add
ins
jmp
lock
je
mov
pop
xor
inc
or
shr
xor
test
add
jmp
add
cmp
push
add
inc
add
loopne
jmp
pusha
jae
push
pusha
mov
lock
mov
ja
or
or
mov
mov
pop
or
jo
jmp
rol
or
jmp
jno
aaa
lock
xchg
add
jmp
xor
push
dec
loopne
add
jg
inc
pop
or
and
sar
je
or
jmp
into
push
jae
dec
aaa
add
test
fsubr
je
jmp
dec
adc
push
loopne
sbb
jmp
add
inc
cmps
pushf
cdq
dec
adc
cmp
or
inc
pop
jo
jmp
inc
pop
lock
aaa
jmp
inc
cmp
jge
inc
pop
out
call
ins
inc
nop
loopne
jmp
mov
push
and
add
or
inc
sbb
xchg
rol
sbb
dec
jmp
rol
inc
mov
pop
loopne
mov
xor
jmp
or
adc
cmp
shr
in
stos
or
mov
in
mov
jmp
scas
inc
add
in
push
rcr
inc
fadd
test
inc
xchg
and
mov
inc
xchg
mov
(bad)
aaa
loope
add
inc
adc
loopne
and
cmp
mov
xchg
outs
add
or
inc
ret
adc
aaa
out
mov
add
dec
push
add
jp
add
imul
add
test
add
mov
das
push
pop
call
fld
add
pop
pushf
das
mov
stos
daa
sti
mov
bound
fisttp
es
pop
inc
adc
icebp
addr16
or
dec
add
cmp
les
add
or
or
lds
into
(bad)
adc
test
inc
add
pop
pop
add
sbb
mov
loopne
and
(bad)
pop
outs
sub
test
inc
test
(bad)
jmp
mov
in
mov
or
xor
dec
push
(bad)
loopne
inc
mov
mov
cmp
in
outs
in
push
add
jl
cs
fst
sbb
jmp
or
hlt
push
and
xchg
mov
leave
add
inc
xor
pop
add
sub
pop
dec
sbb
popf
aam
mov
sbb
dec
int
aad
sbb
adc
call
add
je
cmp
rol
add
mov
or
iret
nop
cmp
(bad)
cmp
jl
mov
cmp
xlat
inc
and
sub
jmp
xlat
xor
or
xlat
imul
sbb
sti
xlat
pop
aam
sbb
xlat
adc
leave
ins
mov
retf
imul
(bad)
ror
(bad)
adc
push
push
jmp
btr
pushf
mov
mov
ror
dec
dec
dec
inc
pop
xor
ss
xchg
xchg
daa
cmp
enter
mov
leave
leave
xchg
retf
push
mul
in
js
rcr
aas
mov
popf
fisttp
mov
push
lds
and
punpckhdq
retf
mov
ss
es
jne
call
pusha
stos
stos
pushf
cmp
dec
or
jne
jno
adc
(bad)
pushf
mov
mov
xor
mov
add
mov
jle
(bad)
adc
sar
jne
bound
pop
push
dec
jne
sub
fsubr
out
adc
ja
fwait
stos
adc
jbe
arpl
jns
jmp
out
enter
fiadd
xchg
or
hlt
inc
fldcw
das
mov
ins
inc
fwait
adc
in
jne
pop
mov
push
inc
jne
cs
adc
sub
sbb
mov
jne
shl
jmp
call
push
or
mov
xor
in
sub
inc
je
push
sub
call
imul
nop
or
pop
jae
lods
pop
lds
dec
(bad)
rol
fwait
mov
adc
or
dec
xor
add
lods
fistp
pop
shl
sbb
xor
sub
sbb
dec
add
pop
out
mov
nop
sub
adc
test
bound
sbb
outs
in
sbb
sub
add
inc
sbb
or
sbb
adc
mov
pop
stos
or
sbb
hlt
ins
sbb
add
push
retf
bound
and
jo
pop
inc
sbb
xor
push
retf
sbb
mov
adc
sbb
enter
jbe
neg
mov
or
loopne
xchg
xchg
push
stos
in
inc
add
imul
or
loop
pop
push
call
cmp
pop
cdq
xor
mov
cwde
adc
jae
movs
inc
mov
mov
push
movs
aaa
mov
dec
jno
pop
xor
movs
cmp
movs
or
pop
or
loopne
cmp
sbb
add
pushf
aam
push
dec
aas
int3
stos
rol
hlt
adc
sub
add
lea
adc
or
pusha
jo
adc
inc
jp
loope
dec
inc
add
push
out
imul
(bad)
aam
push
dec
bound
adc
and
lahf
or
movs
into
and
fs
pop
gs
mov
inc
add
shr
add
pushf
in
in
retf
outs
jnp
or
sbb
push
(bad)
frstor
jl
pop
int3
das
jmp
ror
push
pop
cmp
mov
or
outs
pop
pusha
mov
test
sub
cmc
push
fcomp
sbb
retf
add
mov
jo
push
jno
push
nop
retf
push
mov
push
dec
and
pop
and
jo
add
fimul
cmp
dec
mov
fild
push
rcl
ret
push
addr16
jne
inc
cmp
cmps
les
es
das
shr
sbb
sbb
push
add
scas
mov
aas
test
pop
sbb
inc
and
das
sub
xor
dec
jae
into
push
outs
sbb
sub
jmp
xor
xor
pop
inc
jne
mov
or
dec
fstp
pop
ret
cmp
loopne
sub
push
aam
or
jle
es
xchg
push
inc
icebp
mov
add
(bad)
daa
sbb
adc
xor
push
mov
ret
(bad)
push
daa
cwde
cli
add
or
daa
popa
sub
xor
imul
sub
pop
fdiv
or
ins
mov
add
mov
fisttp
es
leave
cmp
cmc
mov
bswap
add
mov
iret
sbb
inc
imul
dec
inc
int3
jp
push
xchg
xchg
xchg
xchg
int
cmps
out
leave
leave
leave
enter
jb
in
in
iret
add
repnz
mov
push
rcl
lods
jae
mov
sets
adc
and
add
in
mov
sbb
xchg
fiadd
int3
dec
ss
or
sbb
jne
jno
lahf
sbb
sbb
ss
mov
aam
cmp
or
fld
jle
push
cmp
inc
gs
sbb
add
xor
cmp
adc
push
or
in
adc
shr
jbe
and
push
jns
jmp
sbb
add
xchg
or
mov
xchg
ins
je
add
leave
call
gs
and
call
xor
in
inc
or
mov
iret
sub
dec
push
mov
sbb
loop
sbb
lods
sbb
push
fdiv
or
lods
cmps
inc
push
sbb
or
(bad)
std
arpl
je
xor
fisub
xchg
dec
lock
scas
dec
sbb
mov
dec
pop
push
xchg
shr
cwde
pop
sub
add
push
dec
lods
sti
inc
sbb
lods
pop
cmp
push
retf
pop
pop
and
and
call
cmp
sbb
add
jne
mov
test
jmp
rol
dec
add
jne
mov
(bad)
and
(bad)
cmp
cmp
jne
mov
dec
adc
loop
jge
xor
xchg
mov
inc
jne
mov
pop
jne
ins
or
and
jne
xchg
pusha
inc
fdiv
xchg
dec
jo
les
xor
lods
mov
lds
loopne
or
inc
je
xor
(bad)
sub
dec
test
xchg
adc
pop
mov
in
lock
jne
or
loopne
out
jmp
dec
mov
jns
xchg
clc
xchg
push
pop
mov
mov
xchg
push
rcr
xor
mov
(bad)
cmp
xor
xchg
inc
fwait
call
or
(bad)
iret
test
mov
add
int3
inc
lods
pop
cmp
cmp
xor
xchg
cmp
adc
xchg
hlt
push
mov
add
inc
and
mov
(bad)
adc
cmp
sahf
push
lock
int3
pop
sar
addr16
jno
sub
xchg
add
popa
xlat
mov
or
push
mov
add
mov
or
add
push
adc
rcr
sbb
call
mov
mov
mov
fnsave
xchg
pand
or
cmp
ret
mov
lea
mov
lock
adc
ins
or
mov
sub
dec
cmp
adc
hlt
dec
jne
fs
addr16
sub
mov
dec
pop
(bad)
mov
mov
cmp
imul
gs
in
popa
dec
or
cs
sbb
xchg
mov
mov
pop
iret
pop
add
cmp
mov
jge
daa
sub
jbe
xor
xlat
scas
jle
into
adc
movhlps
dec
hlt
outs
sub
xlat
mov
shld
iret
push
mov
pop
ret
jnp
mov
push
push
jmp
cmovle
push
int3
xor
cmp
pop
fldenv
aaa
sbb
or
mov
add
push
mov
add
fwait
push
int
add
nop
stos
add
movs
or
push
retf
sub
add
pop
push
stos
inc
or
or
or
push
mov
fadd
jl
pusha
ins
sar
xor
lock
xor
and
je
repz
add
fcmovnbe
add
into
das
dec
push
add
add
adc
cmp
loopne
pop
adc
lea
push
mov
loopne
lods
xchg
fmulp
add
cmp
push
mov
scas
mov
push
add
add
pop
les
lock
pop
add
inc
ret
inc
inc
mov
les
out
mov
or
xchg
jecxz
sbb
add
sbb
rol
jnp
jge
or
and
cmp
xor
add
mov
or
add
xchg
nop
cmps
adc
(bad)
sahf
add
inc
fisttp
fadd
sar
addr16
fdivr
adc
push
jo
add
fsubr
lock
lock
push
push
(bad)
fist
mov
bsf
add
inc
and
dec
xor
or
ror
inc
mov
mov
fsub
mov
sbb
icebp
sub
in
daa
mov
adc
mov
mov
push
pop
xchg
xchg
jmp
dec
mov
aaa
add
pop
cwde
inc
pop
loope
das
mov
inc
or
pop
bound
retf
sub
inc
cmp
rol
cdq
cwde
test
push
addr16
or
inc
xchg
dec
cmp
stos
or
mov
or
push
adc
and
dec
or
push
xchg
pop
es
adc
add
test
rol
(bad)
dec
dec
adc
cmp
push
xchg
loopne
out
pusha
rcl
fild
in
outs
ret
pop
lock
aaa
clc
push
jl
aam
add
push
daa
mov
call
test
push
ret
popa
pop
pop
push
or
sbb
fild
and
push
gs
add
push
dec
int
test
pop
sub
xor
adc
push
dec
cmovle
outs
xchg
add
mov
movs
pushf
mov
inc
and
xor
xor
rol
cmp
js
adc
popa
loop
imul
and
iret
jne
pop
sub
neg
test
sub
add
int
push
add
push
dec
mov
jle
into
xchg
loope
movhps
or
sbb
sbb
xor
lea
jmp
bound
mov
jmp
jmp
(bad)
jecxz
call
jmp
out
hlt
es
fs
mov
call
shl
out
aas
pop
jne
adc
in
inc
test
cmp
pop
nop
push
mov
push
sahf
and
jecxz
mov
(bad)
out
repnz
scas
cld
mov
inc
push
call
loope
and
dec
addr16
fwait
jo
jno
xor
jg
aam
adc
dec
add
jo
dec
int
mov
dec
jmp
test
dec
adc
aas
pop
gs
test
mov
add
push
(bad)
mov
arpl
lahf
push
call
mov
mov
mov
fnstcw
aas
fst
xchg
pop
sti
xor
push
dec
jmp
fldcw
mov
mov
loopne
jge
push
xor
pop
sub
adc
test
or
pop
add
sar
jmp
xchg
add
mov
push
or
inc
psubsb
test
fld
(bad)
jmp
add
adc
shl
iret
sub
inc
in
inc
dec
push
pop
cmp
pop
xchg
cmp
fs
imul
push
je
add
push
and
daa
adc
(bad)
into
in
adc
jle
or
and
shr
pusha
xchg
xor
arpl
test
rcl
and
sub
dec
fs
ret
gs
gs
push
mov
adc
jno
sub
mov
sbb
fs
sbb
fild
adc
adc
outs
mov
add
out
jnp
or
pop
cmp
loop
into
enter
mov
and
xor
pop
inc
and
push
mov
sbb
loope
mov
fld
sub
movs
pop
pusha
inc
or
and
movs
xchg
push
stos
and
mov
icebp
fild
add
add
push
mov
jle
mov
leave
test
fstp
push
out
pop
pop
xchg
pop
fwait
push
movs
mov
mov
cmp
cmp
int3
push
add
or
push
add
push
jb
inc
fistp
add
or
test
addr16
movs
scas
adc
xor
sbb
mov
push
scas
pinsrw
js
pop
lods
xor
jle
jg
mov
hlt
(bad)
cmp
sbb
inc
pop
sbb
ds
jns
mov
xchg
jne
(bad)
fsub
push
sub
push
mov
aaa
cmp
add
pop
xor
add
scas
call
jle
test
add
inc
test
lea
push
dec
mov
pop
jo
ins
sub
jno
pop
pop
ins
ins
fsubr
and
push
pop
sbb
ins
inc
jp
repnz
cmp
sub
mov
iret
pop
add
pop
pop
or
push
test
pop
sbb
ss
not
shl
pushf
ror
jbe
push
fucomp
pop
scas
loopne
(bad)
pop
into
push
aas
inc
or
push
stc
fld
(bad)
dec
mov
cs
shl
pop
int
sbb
jne
and
push
pop
dec
retf
shl
push
or
xlat
pop
pop
test
std
cmp
add
stc
inc
inc
nop
push
cs
repz
aas
push
hlt
sahf
ja
xchg
mov
mov
mov
cs
and
pop
cli
push
loopne
add
cs
ja
push
daa
je
add
aas
or
mov
push
inc
stos
cdq
mov
pop
pop
xchg
in
push
lods
loopne
nop
sti
sub
inc
test
mov
cmps
add
xor
or
cdq
scas
jge
icebp
add
jmp
std
push
jbe
xchg
or
test
pop
mov
cmps
scas
sbb
addr16
push
xor
inc
adc
shl
and
push
cmp
or
mov
push
fiadd
or
xchg
sub
jbe
addr16
inc
sub
push
scas
fs
add
cmp
push
inc
outs
test
ror
rol
or
inc
pop
or
pushf
xor
add
aam
jno
in
or
dec
adc
sbb
push
rol
xchg
sub
inc
sub
jmp
sbb
(bad)
xchg
xor
sbb
push
inc
push
inc
icebp
mov
daa
push
xchg
fist
les
fimul
xchg
xchg
ficom
int
xchg
and
cmc
pop
mov
pop
ret
jo
mov
dec
adc
pop
jno
cmp
pop
adc
or
adc
retf
in
fdivr
js
sub
add
add
aaa
les
add
(bad)
push
repnz
dec
or
mov
daa
push
add
sbb
mov
mov
daa
and
adc
loop
jg
daa
mov
daa
mov
add
and
add
push
test
rcr
dec
sar
test
push
ror
inc
icebp
shl
push
and
cmp
push
lock
pop
icebp
pop
cwde
jmp
ins
cmp
dec
add
push
or
push
adc
cs
cwde
aad
mov
cwde
loop
nop
add
mov
and
shl
cmc
mov
ja
push
ja
and
xor
and
adc
push
adc
or
adc
mov
xor
add
icebp
and
loopne
cmps
pop
pop
xchg
push
icebp
add
jmp
fidiv
cmp
add
dec
add
push
in
push
out
aam
mov
and
mov
nop
add
mov
cmp
or
and
or
xor
push
mov
cmp
stc
lods
mov
loopne
dec
movs
or
pop
mov
add
mov
mov
test
dec
and
xchg
add
enter
dec
xor
mov
dec
jae
cwde
pop
jno
inc
stos
cdq
add
scas
push
inc
dec
mov
pop
push
dec
rcr
dec
add
scas
retf
adc
pop
loopne
sbb
or
mov
sbb
ret
pusha
ja
or
mov
ins
cmp
inc
mov
ss
jmp
(bad)
push
adc
adc
pop
jbe
imul
call
inc
adc
in
neg
adc
pop
int3
add
pop
jns
out
push
imul
sahf
out
jae
sbb
dec
sti
into
loope
fbld
pop
and
into
xlat
movs
xlat
add
(bad)
inc
push
push
es
adc
sar
ficom
rcl
push
push
scas
mov
or
daa
popf
push
add
push
and
adc
push
lahf
adc
clc
and
enter
inc
push
adc
xchg
or
es
imul
popa
outs
arpl
ja
xor
xor
repnz
sbb
lock
in
pop
aas
push
inc
push
push
mov
fisub
jb
and
shl
inc
push
hlt
outs
jb
inc
lock
fnstcw
je
stos
and
lods
sub
ror
daa
imul
outs
jns
sub
int
aaa
mov
and
sbb
push
push
adc
outs
xor
pop
dec
push
sub
dec
push
stos
mov
movs
ins
sbb
sub
dec
inc
push
sbb
sub
push
shl
clc
rol
push
or
fs
mov
xlat
ins
or
repz
call
add
scas
iret
daa
push
popa
ins
jne
inc
cld
jnp
shr
dec
adc
mov
push
inc
cmp
cmp
in
sub
xor
test
jl
retf
pop
leave
leave
int3
sahf
cvtps2pd
sub
leave
leave
leave
leave
shr
leave
leave
cmp
push
stos
inc
push
xchg
out
push
test
test
sahf
out
out
mov
mov
fstp
out
jecxz
repz
add
or
outs
xor
jmp
cdq
mov
movs
call
pusha
fmul
scas
ins
pop
test
and
test
mov
mov
cmp
add
and
xchg
mov
dec
outs
add
ja
gs
mov
ja
pop
clc
cmovle
shl
rcl
inc
dec
sbb
idiv
nop
dec
push
pop
jb
inc
mov
sub
jae
push
jae
xor
add
stos
inc
idiv
inc
jo
(bad)
hlt
mov
or
mov
scas
add
cwde
push
push
inc
mov
loopne
mov
(bad)
xor
out
jae
pop
shl
dec
test
xchg
ja
mov
ss
pushf
pop
xor
pop
in
in
mul
push
pshufb
mov
in
cmps
cmps
cmp
aaa
nop
pop
(bad)
pop
cmps
mov
ss
loopne
mov
mov
fild
in
cmp
pop
or
iret
jnp
out
push
test
push
pop
pop
cmp
repz
das
aaa
aas
inc
push
cwde
into
repz
push
cmps
cmp
xchg
cmps
sahf
and
inc
xchg
sbb
sbb
les
xchg
imul
jmp
push
je
fsubr
mov
movhps
nop
push
add
push
cmps
cmp
imul
ins
ror
je
jge
movaps
lea
mov
push
push
dec
pop
lea
fwait
pusha
push
ins
inc
cmp
aaa
pop
sbb
inc
jle
popa
or
push
fwait
add
scas
ins
lea
add
scas
cmp
call
push
fdiv
adc
clc
pop
aas
jg
jbe
jb
cmp
jo
lock
and
jg
mov
mov
mov
sub
jns
jns
(bad)
push
iret
push
xlat
(bad)
loope
sahf
out
idiv
aaa
inc
paddusw
sar
pop
addr16
cs
call
addr16
adc
push
jmp
les
inc
pusha
push
imul
call
push
sub
mov
mov
sbb
push
daa
inc
push
add
ds
push
addr16
jae
jg
adc
ds
popa
outs
mov
lods
bound
pmaxub
pushf
sub
imul
imul
imul
adc
mov
fmul
adc
add
dec
popa
or
cmp
mov
cmp
addr16
outs
fcomp
cmp
mov
sub
out
icebp
fdiv
movups
adc
cmp
sahf
mov
sti
adc
jl
cwde
xchg
mov
push
scas
out
pop
add
addr16
jno
sahf
out
sahf
push
frstpm(287
out
jnp
jns
out
mov
jns
out
mov
je
inc
jg
cs
xchg
ror
mov
bound
data16
shr
mov
or
push
call
call
outs
div
sub
inc
push
push
push
ret
cwde
mov
outs
test
(bad)
mov
dec
mov
jle
fcomp
pop
pop
clc
mov
mov
cwde
retf
adc
dec
jg
rol
ds
xchg
xchg
dec
pop
ror
hlt
cmp
or
inc
jle
or
je
popa
or
cmp
or
ret
retf
ret
bound
pop
jnp
dec
push
pop
fadd
das
loop
js
into
jecxz
stos
adc
adc
sar
rcl
into
fcomp
pop
mov
int3
xor
inc
das
(bad)
jp
addr16
call
(bad)
pop
aaa
jp
aaa
dec
dec
dec
iret
push
(bad)
dec
rcr
call
sub
sub
(bad)
ficom
inc
dec
push
pop
out
sahf
out
cmp
out
sahf
jnp
mov
out
stos
mov
ret
retf
sar
out
arpl
pop
mov
and
add
jecxz
sub
(bad)
jle
mov
jnp
or
movups
dec
aaa
cmp
jmp
pop
push
add
adc
jns
imul
add
and
loop
pop
pop
icebp
and
bound
pop
pusha
jp
dec
cmp
dec
leave
sub
pop
es
es
popf
pop
cmps
fwait
sbb
or
xor
push
movs
xchg
sar
or
ffree
xor
and
or
clc
jo
shl
popa
or
lds
mov
xchg
into
fiadd
mov
pop
sbb
pop
pop
ja
fimul
add
adc
ins
in
inc
cwde
out
jp
dec
add
fsub
push
or
push
les
mov
mov
je
dec
push
movs
movs
pop
push
ins
cmps
sub
fnstcw
ins
jl
mov
push
mov
mov
scas
mov
jnp
cwde
mov
pusha
dec
bound
ds
repz
ror
push
push
xor
out
ins
mov
push
enter
test
xor
mov
stc
push
push
cmp
push
loopne
mov
mov
push
xchg
ficomp
mov
enter
mov
frstor
pop
jle
dec
cs
push
dec
dec
aam
int
repz
cmp
cmc
js
cwde
pop
mov
ins
ss
dec
add
cmp
es
mov
push
les
push
nop
mov
inc
push
int3
mul
test
imul
jnp
enter
mov
cld
nop
push
add
sahf
out
(bad)
push
push
hlt
and
inc
cmps
call
and
sbb
pop
icebp
and
adc
je
inc
jnp
test
arpl
xor
mov
inc
mov
dec
jo
mov
push
daa
sub
jne
mov
(bad)
fsub
sbb
xchg
movs
dec
add
sub
iret
mov
xchg
xor
ins
jnp
loopne
rcl
adc
adc
mov
xor
xor
pop
ins
pop
in
in
pop
pop
mov
push
aas
pop
sub
das
mov
pop
ror
pop
jno
jle
dec
mov
mov
mov
js
cmp
mov
(bad)
faddp
pop
jo
jmp
jmp
jns
ret
add
push
rcr
mov
iret
repz
dec
push
pop
arpl
cmp
repz
or
repz
cmp
and
sahf
neg
sti
cmps
add
or
adc
push
rol
push
out
jns
fninit
jmp
inc
outs
das
jp
add
pop
mov
call
inc
mov
std
push
inc
fdiv
dec
mov
(bad)
in
xor
cli
es
mov
fwait
mov
sbb
pop
jns
mov
es
popf
push
add
push
push
pop
sbb
loopne
data16
cld
leave
pop
sbb
inc
cs
mov
xchg
jg
cli
xor
aam
jne
add
push
mov
loopne
adc
repz
mov
or
sbb
out
sub
jbe
dec
cmp
or
jle
jns
sub
mov
xor
pop
bound
sbb
xor
sub
cmp
or
mov
fdivr
jo
les
adc
mov
data16
mov
mov
and
mov
jl
jae
add
shl
and
xchg
mov
pop
aam
jae
mov
or
test
inc
or
mov
imul
inc
or
push
or
xchg
mov
adc
arpl
pop
ror
sub
retf
dec
iret
es
cvtpi2ps
test
mov
pop
bt
dec
add
mov
push
movs
or
mov
mov
xchg
cs
(bad)
(bad)
xchg
lahf
iret
or
push
test
xor
xor
cld
ss
mov
vmread
rcr
popa
add
push
add
dec
sets
cmps
cmp
je
inc
imul
and
punpcklbw
or
push
push
pop
dec
mov
cwde
bound
push
sub
inc
ja
jle
popa
inc
mov
add
xchg
pop
pop
xchg
popf
jb
addr16
fbstp
ficomp
cmp
ins
push
xor
icebp
sbb
movs
push
pop
push
loop
loope
push
xor
pop
pop
pop
js
push
jp
lods
mov
jb
int3
addr16
sbb
cs
pop
xor
mov
mov
rcl
mov
mov
cmp
lds
pop
rcl
loopne
fwait
into
jmp
sub
sar
adc
adc
sbb
pop
add
out
pcmpgtd
cmps
ret
sahf
movntps
das
data16
test
fnstsw
adc
add
iret
fs
add
arpl
repz
push
cmc
rcr
ja
loope
stos
and
mov
das
push
vmwrite
pop
daa
das
aaa
out
sahf
out
inc
dec
push
pop
aaa
inc
jne
outs
mov
aas
adc
ins
sbb
dec
sbb
mov
int3
sbb
outs
mov
ret
mov
add
sbb
push
js
int
mov
add
push
push
add
(bad)
jne
push
loope
cmp
and
pop
out
test
stos
cwde
push
dec
pop
arpl
pop
pop
add
add
ins
mov
and
popa
inc
mov
mov
jne
ja
xor
push
pop
push
outs
dec
lds
div
xor
aaa
pusha
arpl
dec
mov
jmp
scas
aam
xlat
mov
cmp
adc
cmp
xor
shl
fmul
sub
mov
sub
add
in
or
jl
add
stos
or
inc
popa
outs
push
and
sub
out
mov
or
and
fcmovnb
sbb
adc
out
sahf
adc
ret
mov
mov
xchg
call
cmps
repz
mov
imul
dec
xchg
popf
cmps
jae
into
repz
or
mov
lahf
pop
mov
repz
pop
cmc
inc
mov
jnp
jmp
enter
mov
xchg
push
add
push
daa
push
test
scas
cdq
push
add
add
sub
add
jp
or
test
lock
and
xor
fwait
(bad)
push
mov
lods
cmp
test
push
pop
adc
sub
push
jle
mov
test
and
add
test
loopne
rcl
jo
pmulhuw
jg
add
pop
hlt
jns
inc
sbb
push
mov
cdq
mov
out
sahf
(bad)
iret
xlat
fbld
or
(bad)
aas
test
mov
fstp
add
out
sbb
aam
fldenv
cmp
add
sub
daa
lock
sbb
in
push
pop
sub
mov
and
popf
dec
jp
lea
mov
jno
enter
mov
rcl
imul
mov
or
pop
and
or
pop
in
mov
cmp
mov
(bad)
ltr
cmp
(bad)
and
xadd
cdq
fisubr
cli
movzx
movs
aaa
or
outs
ror
into
ds
or
mov
inc
push
out
fisttp
aas
mov
enter
sti
pop
cwde
(bad)
call
jae
outs
push
iret
dec
ds
lea
vmread
adc
adc
cmp
mov
adc
aad
xchg
jmp
cmp
push
adc
cmp
sub
push
cmp
repz
gs
jne
repz
repz
repz
lods
mov
vpaddusw
jmp
jp
push
std
inc
xchg
xor
jecxz
push
hlt
cs
aam
inc
add
sar
push
add
mov
push
into
sub
push
sub
cs
dec
dec
data16
xchg
daa
das
daa
daa
daa
and
mov
daa
jo
jmp
popa
mov
dec
xor
repnz
or
jle
cmp
jns
in
das
xor
mov
in
cs
hlt
or
xor
jle
scas
xchg
or
push
push
inc
pop
push
dec
inc
push
xor
inc
inc
inc
dec
dec
inc
inc
xchg
pop
call
mov
add
retf
data16
es
call
call
add
dec
dec
add
movs
mov
addr16
nop
out
clc
jb
imul
jp
icebp
test
mov
jp
bound
sbb
std
fld
or
add
xchg
imul
fistp
imul
jecxz
inc
invlpg
and
push
add
and
xor
pusha
bound
enter
rol
add
jo
xchg
or
add
add
add
sbb
movs
in
add
scas
dec
outs
popa
fs
adc
(bad)
cmp
mov
pop
inc
push
add
(bad)
out
push
pop
ins
push
pop
arpl
jo
outs
pop
in
sbb
mov
xor
ins
cs
popa
ins
ins
adc
imul
add
sub
outs
jae
jp
in
push
or
add
xor
mov
imul
fs
add
ret
add
pop
add
jne
or
mov
aam
sbb
outs
into
xor
mov
inc
popaw
mov
shl
jo
outs
add
jo
mul
repnz
adc
pop
mov
add
aam
xor
movs
jle
sub
sub
adc
mov
ins
cmp
adc
lds
pop
push
push
ret
hlt
xchg
jmp
loope
inc
dec
add
ror
adc
lock
pop
push
pushf
push
push
dec
inc
ins
outs
push
mov
add
add
push
jb
iret
aam
jnp
or
pop
add
push
rcr
js
loopne
adc
or
inc
inc
jns
repz
sbb
popa
add
mov
gs
mov
jae
mov
popa
sbb
lds
adc
push
data16
sub
les
pop
push
push
imul
outs
rcr
inc
shr
jae
add
pusha
mov
std
jns
leave
repz
test
inc
inc
inc
xchg
loopne
das
(bad)
int3
add
inc
push
or
pop
dec
mov
adc
xor
cmp
add
push
push
outs
scas
arpl
inc
push
lea
mov
scas
aam
(bad)
emms
xor
popa
push
jns
add
lock
jae
dec
pusha
push
dec
inc
xor
ins
sub
inc
add
inc
add
loopne
arpl
jae
dec
add
xchg
mov
loope
pusha
inc
xchg
cmp
test
jo
push
add
jae
ja
dec
mov
je
xchg
test
xchg
into
bound
inc
es
rol
pop
repnz
inc
jg
add
sbb
add
mov
es
adc
std
sub
jae
push
add
imul
sbb
pop
mov
pop
dec
stos
push
setae
xchg
scas
stos
inc
ret
adc
inc
push
ins
jne
mov
test
push
pop
add
nop
stc
push
mov
mov
call
clc
add
in
inc
js
ret
movzx
xor
ret
nop
(bad)
or
lea
mov
or
mov
mov
loopne
sbb
pop
shl
xor
cmp
call
jle
outs
pop
mov
and
push
push
je
cmp
cmp
or
div
mov
and
mov
cmp
sahf
dec
test
jle
adc
mov
int
mov
out
loop
arpl
adc
and
and
je
pusha
sbb
and
(bad)
push
ja
dec
addr16
and
push
icebp
aad
jne
ret
cld
cs
add
in
push
fisttp
push
add
push
icebp
aam
je
mov
jo
mov
add
das
inc
addr16
and
add
rcl
xor
je
arpl
and
es
pop
inc
inc
mov
mov
cmp
pop
out
push
mov
mov
adc
mov
cli
mov
cmp
dec
hlt
mov
movs
xor
push
push
popf
nop
push
mov
mov
mov
mov
(bad)
std
idiv
inc
cld
mov
test
sub
mov
jnp
lea
cdq
push
loope
sbb
shl
sbb
arpl
inc
or
mov
(bad)
and
cmp
mov
jb
fcmovne
or
lahf
or
in
adc
lds
int3
add
add
sub
sub
cmp
push
sub
push
push
lock
ret
shl
mov
add
rol
mov
adc
inc
xor
jg
nop
or
ret
jbe
mov
xor
mov
push
test
pop
xchg
mov
out
ror
xchg
into
pop
mov
add
add
push
adc
dec
or
mov
mov
es
imul
dec
cs
jg
rol
mov
jl
shl
retf
cmp
and
int3
loope
xor
cdq
inc
dec
cmp
jne
popa
jg
enter
jo
xor
mov
cmps
int
addr16
into
mov
and
rcl
popf
lahf
jo
mov
adc
sbb
push
scas
mov
sbb
enter
xchg
and
jo
ja
pusha
sbb
in
aad
push
stos
adc
adc
cs
add
push
subps
sub
mov
sbb
fisttp
test
and
sbb
lahf
mov
loope
cld
cmp
jne
aaa
xor
in
loope
or
xor
push
adc
inc
or
xchg
sub
dec
or
jl
and
xchg
jp
mov
mov
inc
inc
push
or
xor
pop
push
pop
push
addr16
test
pop
and
mov
pusha
fist
aad
int3
add
push
add
jno
aam
push
mov
clc
xor
sub
mov
lahf
ret
push
mov
jmp
cmps
cmps
add
add
pop
pop
ret
pop
push
orps
js
xchg
mov
mov
mov
add
imul
cmp
imul
mov
push
push
xor
adc
mov
lds
xor
aaa
(bad)
pushf
shl
popf
test
or
xchg
mov
inc
mov
xchg
mov
sbb
ds
adc
(bad)
clc
je
nop
mov
sub
sub
mov
vpmacsdqh
test
movs
daa
xor
cwde
adc
pop
ins
movs
or
xlat
icebp
jb
add
shr
loopne
fmul
inc
ins
je
or
mov
xchg
stos
ret
outs
sbb
add
push
mov
out
in
jge
lock
xlat
mov
inc
int3
sbb
xchg
rcl
pop
add
and
call
cs
bound
pusha
pop
mov
aad
int3
push
mov
hlt
adc
in
pusha
repnz
ds
lahf
push
out
mov
pop
in
inc
fmul
add
mov
lds
mov
push
mov
addr16
mov
xor
xor
sbb
jge
jge
cdq
ret
jg
loopne
push
inc
movs
clc
jle
movs
jo
xlat
es
jg
jo
loop
jg
mov
mov
mov
pushf
adc
sbb
xor
mov
inc
mov
xchg
jmp
bound
loope
add
int
adc
xor
add
dec
popa
outs
fs
gs
outs
arpl
pop
cmp
dec
mov
xor
xor
iret
cmp
push
mov
pop
xchg
cmp
xchg
cs
dec
clc
scas
das
or
and
push
scas
mov
push
daa
cmp
add
push
sub
push
and
mov
pop
adc
das
pop
ins
xchg
in
dec
push
add
xor
cmp
xchg
inc
enter
je
mov
mov
aaa
js
inc
cmp
and
jp
fsubr
dec
sbb
xor
cmp
jge
loope
add
dec
xor
push
cs
out
call
ret
xchg
and
xchg
test
jl
push
dec
inc
inc
movs
sbb
and
jne
or
call
mov
fld
adc
cmc
pop
xor
xor
popa
adc
sbb
mov
mov
push
aas
(bad)
xor
push
ja
push
sbb
cmp
imul
mov
adc
rol
add
jmp
jo
mov
adc
xor
sbb
fbstp
pop
mov
fild
fild
sub
sub
jg
ss
(bad)
nop
inc
sub
out
push
or
jle
or
push
cmp
push
xor
or
inc
data16
or
jo
(bad)
or
popa
dec
outs
or
sbb
jnp
push
lock
and
pop
cmp
and
or
ins
jo
inc
or
jecxz
jecxz
push
les
loope
sbb
popa
pop
mov
sbb
fdivr
cmps
jnp
push
aaa
push
dec
sbb
sar
adc
fidiv
int3
rcr
sub
aaa
ins
test
mov
cmp
push
cmp
test
add
lds
push
cmp
into
and
cwde
aam
ja
pop
sbb
ja
outs
les
iret
or
xor
aas
fidivr
inc
pop
pop
mov
adc
xchg
outs
enter
mov
inc
cmp
out
sbb
xchg
inc
loopne
sub
leave
and
sub
sub
inc
call
ficom
cs
in
(bad)
push
rcl
cld
inc
add
and
push
dec
dec
push
inc
xor
and
mov
jb
je
dec
pop
jmp
mov
jmp
jmp
and
lea
shr
mov
daa
lock
mov
dec
mov
test
or
add
mov
xor
jb
push
js
fs
cdq
hlt
dec
iret
aaa
add
or
popa
les
inc
ds
dec
inc
je
push
add
add
xchg
pop
cld
add
dec
js
inc
add
test
(bad)
add
inc
dec
pusha
movs
sbb
pop
inc
and
mov
xchg
inc
mov
scas
cwde
mov
(bad)
adc
lahf
sub
adc
js
add
sub
ret
inc
es
enterw
fsubr
int
push
jg
jbe
push
sbb
pop
cmp
add
adc
int3
lar
cmovs
in
xchg
cs
xchg
(bad)
ror
add
jg
inc
icebp
sbb
add
test
sbb
add
les
mov
inc
xchg
fwait
bound
and
cmp
add
mov
dec
dec
dec
dec
pusha
clc
fist
js
add
mov
retf
dec
stos
aas
shr
sub
mov
and
and
jmp
mov
scas
test
jno
ret
cmp
or
out
(bad)
mov
fidiv
popa
lea
xor
in
push
dec
int
pop
aaa
add
aaa
sbb
mov
mov
cli
pop
(bad)
call
mov
lea
xor
pop
pop
(bad)
ds
xchg
and
mov
fdiv
shr
aaa
xor
movs
ss
rcl
cli
adc
(bad)
and
ds
cmp
pop
mov
cs
push
cmp
mov
jno
pop
test
mov
jp
and
mov
sub
daa
ror
fisub
mov
and
es
xor
cmp
shl
fmul
es
jge
dec
imul
jb
mov
and
imul
cmp
inc
mov
mov
(bad)
adc
push
add
mov
inc
sbb
es
movs
or
push
mov
std
mov
cmp
sar
push
xlat
and
adc
scas
cwde
jne
inc
add
adc
or
ret
sub
sbb
ret
push
sbb
in
pop
(bad)
lock
ins
lods
xchg
sub
neg
pop
lock
jmp
popa
test
pop
xlat
add
loopne
push
push
mov
sbb
push
xchg
sub
xor
xchg
jecxz
fld
sbb
dec
xor
and
mov
and
or
inc
lock
sar
leave
inc
aaa
je
shr
and
jbe
js
pop
and
cmp
sbb
xor
sbb
mov
mov
in
enter
out
mov
test
lods
sub
add
mov
in
sub
into
retf
dec
sbb
push
mov
cs
pop
lahf
push
loopne
sahf
push
cli
mov
outs
and
jge
ret
icebp
ja
inc
mov
mov
mov
shl
adc
hlt
cmp
pop
loope
addr16
cmp
out
mov
mov
jne
and
cwde
inc
retf
popa
lock
mov
cli
xchg
jecxz
xor
retf
xchg
popa
jle
sub
(bad)
mov
clc
rcl
or
mov
xor
test
mov
mov
dec
lock
and
adc
daa
sub
lods
aaa
test
clc
clc
dec
xchg
shl
add
lods
lds
into
pop
mov
or
and
push
jl
shl
shl
jmp
ins
mov
hlt
add
push
jo
mov
dec
cmp
in
iret
clc
mov
iret
dec
xor
dec
mov
adc
push
ret
shl
adc
lock
and
into
xlat
mov
xchg
xchg
sub
mov
xchg
out
lea
add
lds
inc
cmp
lea
pop
out
daa
adc
mov
mov
xchg
push
cmp
lds
mov
fcomip
ret
mov
inc
adc
xor
mov
cmp
mov
test
sub
out
mov
test
push
outs
push
ds
scas
push
dec
jne
push
adc
sbb
inc
test
add
js
enter
mov
push
pop
push
mov
add
cmp
cmp
or
repnz
and
ret
inc
ins
cmp
in
sub
lods
xchg
or
(bad)
mov
inc
jo
call
jae
jb
leave
popa
cmp
dec
push
mov
(bad)
jecxz
jl
sub
and
sbb
xchg
imul
push
mov
add
cld
push
pop
pop
ja
mov
call
dec
jo
dec
add
fsub
dec
or
mov
in
test
data16
dec
push
movs
movs
pop
push
ins
cmps
int
jge
pop
cmps
jle
push
mov
push
mov
mov
sti
mov
mov
pusha
dec
bound
fstp
ds
pop
fs
arpl
rol
xor
sti
call
cwde
xchg
les
imul
inc
stos
mov
scas
lods
ss
dec
jo
fcmovnbe
in
sbb
call
mov
pop
call
loopne
mov
fidivr
mov
cs
jecxz
test
inc
add
adc
and
inc
or
loope
push
gs
gs
jb
jns
scas
lods
pop
(bad)
shl
ror
sub
mov
push
inc
push
inc
ins
imul
sbb
dec
or
or
test
mov
sahf
push
push
pop
ja
in
mov
mov
leave
xor
scas
in
xchg
sbb
xchg
clc
adc
aaa
add
(bad)
imul
pop
dec
loopne
fucomi
ja
cvtps2pd
xchg
sbb
inc
pop
(bad)
mov
cmp
sub
popf
popf
jl
nop
in
outs
adc
xor
dec
mov
or
xchg
ss
mov
aas
fdivr
sbb
mov
fist
xlat
mov
push
fist
pop
int3
add
jns
jns
push
sub
push
aas
mov
push
jmp
repz
add
or
jnp
out
adc
and
cs
push
sar
out
fistp
imul
sahf
out
or
sahf
mov
ja
(bad)
push
dec
sti
xor
stc
inc
mov
pop
and
into
xlat
dec
mov
mov
(bad)
mov
pop
dec
cmp
(bad)
pusha
ss
push
outs
iret
pop
fistp
push
es
add
iret
jmp
mov
push
mov
rol
add
push
sub
add
es
imul
add
jo
imul
cmp
lea
push
jbe
jp
mov
inc
aaa
pop
pop
mov
ins
sub
add
or
aaa
or
jle
push
(bad)
push
out
inc
test
xchg
push
and
aad
sub
add
add
cmp
inc
adc
div
and
adc
jbe
shr
ins
dec
ja
cld
mov
dec
ins
retf
xor
xchg
imul
adc
fwait
nop
add
push
add
add
cmps
ss
lds
ret
inc
popa
or
dec
jecxz
sbb
lock
dec
ja
rol
mov
mov
stos
mov
dec
mov
mov
not
sbb
ss
sub
pop
mov
jbe
mov
pcmpeqb
fidiv
pusha
adc
adc
cmps
xchg
pop
push
push
sub
out
outs
jns
aaa
sahf
out
sahf
aas
inc
dec
push
pop
add
inc
je
nop
cs
push
dec
xor
adc
push
mov
dec
mov
aaa
and
movs
ss
out
add
push
push
push
mov
adc
daa
add
xchg
mov
jmp
sbb
repnz
addr16
push
push
dec
arpl
mov
lea
bswap
cmp
inc
push
dec
sub
stos
or
ja
or
sub
imul
mov
call
fimul
adc
js
mov
js
out
pcmpgtd
jg
(bad)
btc
push
jl
packuswb
out
pop
pop
dec
outs
push
push
popa
cmp
inc
mov
jns
out
jnp
mov
(bad)
les
(bad)
adc
ss
int
push
(bad)
addr16
pop
cmps
pop
add
mov
das
add
xchg
cmp
sub
cmp
jbe
jmp
adc
popa
push
outs
jb
mov
pop
mov
(bad)
jecxz
aas
and
dec
add
mov
test
cdq
xor
cdq
jb
push
xchg
loop
mov
mov
ins
setp
dec
xor
in
dec
ja
out
sahf
ja
addr16
jno
push
stos
sahf
out
sahf
mov
jnp
mov
fwait
mov
retf
cwde
outs
gs
fist
pop
(bad)
xor
loopne
fild
push
push
mov
cmp
in
mov
push
pop
push
daa
mov
mov
gs
jne
outs
scas
push
push
fsubr
test
jno
push
imul
xchg
push
jb
xlat
sbb
xchg
mov
imul
popf
jmp
mov
(bad)
lahf
cmp
cvtps2pd
xchg
jno
push
sahf
js
repnz
ja
daa
es
pop
mov
hlt
sahf
inc
dec
add
push
push
fucomi
mov
pop
push
jg
xchg
test
sbb
test
mov
pop
lods
das
outs
pop
xchg
mov
es
pushf
jb
pop
ins
mov
into
lahf
lock
aas
js
fmul
popf
mul
sahf
mov
xchg
stos
pusha
inc
mov
mov
rcr
fdivp
cmp
jecxz
repz
add
repz
repz
adc
and
xor
repz
cmp
push
pop
arpl
repz
jae
or
fwait
mov
aaa
cs
mov
cs
dec
mov
xlat
cmp
add
pop
loopne
(bad)
jl
add
fcmovnbe
movs
(bad)
out
mov
sbb
loopne
jae
push
add
test
pop
or
mov
stos
jecxz
mov
pop
fmul
outs
push
push
ja
sar
or
popa
ja
gs
fs
jae
jno
inc
inc
stos
ror
jae
outs
ins
xor
add
jle
ss
retf
sahf
pop
inc
push
je
popa
leave
push
aaa
sbb
sbb
(bad)
cdq
sub
jle
cmp
pop
popa
or
or
ret
and
add
mov
rcl
stos
into
fsub
inc
outs
ror
mov
outs
jnp
adc
iret
shr
hlt
ucomiss
mov
pslld
das
mov
lods
mov
imul
pop
or
pop
call
pushf
xchg
repz
jg
out
cmc
pop
mov
mov
jns
out
mov
scas
(bad)
jg
jmp
fidivr
mov
mov
xchg
repz
jg
mov
(bad)
jp
idiv
mov
mov
sahf
xlat
xor
pop
iret
(bad)
pop
mov
lahf
mov
mov
jg
push
ficom
fist
pop
mov
push
cdq
jne
repz
xlat
cmps
std
pop
gs
push
or
adc
and
xor
inc
jns
out
dec
push
pop
arpl
jns
out
jnp
mov
fwait
mov
jnp
out
retf
rcr
jecxz
dec
out
fiadd
mov
sahf
retf
rcr
jecxz
push
pusha
sub
push
sti
out
adc
jg
sar
add
cmp
aam
js
stos
ret
into
push
xchg
scas
jp
fidiv
mov
fidivr
add
shl
xor
jne
push
rol
out
add
jmp
out
xchg
call
jp
jge
sbb
data16
sbb
or
dec
xor
pop
popa
psubq
lds
cli
or
scas
ror
arpl
jae
aas
dec
push
push
push
mov
sub
int3
ins
mov
push
jmp
jl
add
popa
push
push
xor
or
or
and
xchg
add
pop
mov
inc
xor
add
not
or
jmp
pushf
xchg
jae
psubsw
xchg
inc
sbb
inc
adc
imul
out
cmc
setle
loopne
scas
add
adc
lahf
divps
retf
jns
setg
lahf
jp
idiv
sahf
pop
sahf
pop
idiv
neg
jg
idiv
mov
sahf
pop
sahf
pop
into
imul
lahf
setg
lahf
pop
sahf
bsr
jmp
lahf
pop
sahf
das
sahf
jmp
fsubrp
pop
sahf
pop
sahf
pop
fsubrp
mov
lahf
sahf
(bad)
mov
mov
adc
sub
jnp
adc
xlat
neg
push
sub
out
cmp
push
push
pop
push
arpl
cmp
repz
or
fwait
mov
cmp
repz
rcr
jecxz
iret
jnp
repz
add
jae
repz
sub
cmp
inc
add
jns
cmp
inc
dec
pop
(bad)
call
fs
cmp
in
add
xor
leave
aaa
mov
scas
jo
fdivr
xchg
pop
clc
dec
in
mov
call
add
jmp
xor
sbb
cmp
jae
push
jae
shl
mov
and
punpcklbw
adc
pop
stc
push
fld
loopne
mov
push
ja
push
stc
imul
jle
jo
push
stc
popa
or
pop
add
mov
xchg
inc
pop
jg
sub
pop
mov
dec
hlt
pop
sbb
fisub
cmp
(bad)
bsr
jbe
aam
fs
mov
cs
out
not
jge
adc
dec
push
shl
jge
out
into
repz
std
fabs
ins
sahf
out
and
pop
jns
out
pop
daa
das
aaa
aas
sar
out
dec
push
pop
xchg
jmp
fld
mov
cmps
add
fadd
mov
xchg
out
dec
sbb
call
cmps
xor
cmp
dec
rol
je
dec
add
out
sahf
adc
es
push
add
inc
cmps
in
xchg
mov
inc
sub
push
add
outs
(bad)
out
cwde
retf
mov
hlt
sysenter
repnz
(bad)
neg
inc
adc
mov
popa
mov
mov
mov
inc
add
push
je
cmp
test
popa
mov
data16
mov
or
xlat
xchg
mov
adc
or
pop
sti
cmps
pop
rcl
cmp
jmp
pop
sub
xchg
mov
pop
movs
jnp
das
pusha
jg
jle
pushf
jle
sub
xor
sbb
mov
pop
adc
mov
cmp
or
jns
inc
mov
xor
ret
mov
xor
pop
or
mov
outs
ins
in
add
and
pop
movs
jne
sub
pop
sbb
push
test
sbb
(bad)
jge
jge
add
outs
imul
daa
push
fiadd
ucomiss
and
or
outs
sub
fistp
sahf
movd
das
sahf
(bad)
pop
das
cmps
inc
cmps
ret
outs
dec
outs
dec
mov
(bad)
jo
jg
jne
and
add
pcmpeqd
ja
mov
das
jns
in
add
outs
jns
(bad)
iret
or
test
jnp
cmp
mov
jle
das
enter
sub
pop
fdivr
jnp
jnp
jle
pop
or
fxch
or
cwde
adc
outs
jge
aas
jb
fdivr
and
inc
jne
sbb
addr16
cmp
loopne
pop
adc
push
jg
push
popf
out
mov
(bad)
jb
iret
adc
xchg
aaa
(bad)
repz
ss
jmp
sti
add
or
jnp
repz
adc
mov
shl
cmp
cmp
mov
cmp
mov
jecxz
iret
repz
repz
add
push
iret
repz
adc
and
xor
cmp
repz
dec
push
pop
arpl
cmp
repz
mov
repz
xchg
fwait
mov
push
pop
cmps
inc
jbe
adc
(bad)
jg
pop
mov
dec
mov
pusha
sub
pop
ss
add
push
imul
enter
push
xchg
fadd
jns
add
push
cmp
pop
test
push
sbb
and
icebp
push
mov
mov
jb
jmp
cmp
inc
push
fadd
shr
ret
(bad)
and
xchg
sub
push
mov
(bad)
ret
add
imul
out
lock
rol
push
mov
clc
cli
(bad)
or
mov
stos
xchg
push
stc
or
lock
pop
or
lea
adc
add
pop
or
sub
dec
cmp
or
adc
dec
popa
lea
test
inc
inc
pop
fwait
sbb
xor
push
inc
mov
or
out
mov
aaa
fwait
push
daa
and
cvtps2pd
cs
loop
and
push
fidivr
iret
sbb
inc
std
push
cmp
inc
push
dec
xor
xor
pop
cs
and
adc
aam
cmps
rol
loop
inc
fwait
sbb
ss
pop
jle
sbb
in
and
mov
add
js
push
loop
jnp
inc
push
add
pop
shl
or
push
popa
xor
xlat
jno
jbe
xchg
cmp
fbld
mov
adc
hlt
outs
imul
mov
addr16
dec
hlt
test
push
mov
dec
call
push
dec
imul
cmp
dec
shl
fsub
or
inc
test
lods
jg
jg
add
push
stos
xchg
imul
sbb
loopne
ins
jns
repnz
jb
jmp
pop
add
gs
fsub
dec
pop
loop
das
mov
test
xchg
xchg
pushf
test
mov
jnp
push
sub
add
adc
iret
fisttp
and
inc
test
cmovo
call
xor
push
inc
popa
jae
arpl
hlt
call
push
sub
inc
pop
sbb
ds
cmp
loopne
or
sti
sbb
cs
push
jbe
push
popf
pop
mov
faddp
aad
mov
test
mov
add
push
xlat
inc
jne
not
fild
out
jg
aas
or
sbb
and
dec
ffreep
jmp
add
jl
sub
(bad)
jg
mov
out
mov
push
in
dec
push
add
pop
out
movs
std
adc
mov
aaa
mov
loope
loop
les
or
sub
lds
loopne
push
sbb
sub
push
jae
inc
imul
out
jmp
jne
(bad)
sub
sub
sub
es
sub
mov
shl
mov
cwde
mov
js
neg
cvtps2pd
cmp
pusha
sub
push
jmp
sahf
pmaxub
faddp
push
(bad)
mov
int
xlat
push
loope
int
jns
lds
jl
inc
repz
repz
adc
and
into
jnp
sub
dec
repz
sti
lahf
inc
lahf
scas
add
pop
mov
or
test
push
xchg
xor
es
add
loop
out
cmp
dec
push
add
lahf
bts
lahf
jno
push
pusha
add
mov
add
jmp
mov
popf
fimul
sbb
adc
neg
push
jb
jmp
shl
or
dec
sub
mov
fisub
(bad)
push
sub
push
pop
je
imul
mov
lods
out
and
cmp
push
push
call
fimul
(bad)
in
dec
mov
and
mov
xor
push
sbb
fstp
adc
pop
js
mov
fmul
lea
(bad)
aaa
add
mov
or
inc
add
adc
cli
add
dec
mov
push
outs
push
mov
add
loop
mov
mov
add
inc
test
js
sar
(bad)
out
add
jns
mov
mov
mov
mov
mov
(bad)
movs
push
clc
xor
push
push
xor
cmp
sbb
sbb
adc
push
adc
xor
repz
mov
ret
in
out
pop
pop
pop
pop
push
adc
aaa
dec
jle
mov
les
add
add
adc
out
sbb
mov
mov
cs
popa
fild
sub
cmp
sbb
xor
push
in
mov
sbb
in
ret
inc
and
push
(bad)
push
ror
mov
movs
lahf
add
sbb
out
mov
mov
mov
arpl
fs
rol
mov
or
add
jne
pop
mov
dec
add
push
inc
cmps
push
push
mov
xchg
fadd
or
cmps
out
dec
sbb
mov
cmp
pop
inc
out
movs
and
fmul
fiadd
add
(bad)
pop
xor
sbb
jns
jg
loopne
pop
adc
xor
mov
mov
xor
pop
pop
push
inc
sbb
sbb
add
into
add
pop
clc
addr16
push
pop
adc
inc
add
cdq
fs
xchg
lods
pop
xor
(bad)
mov
sbb
jge
aad
mov
iret
jbe
sets
push
and
and
and
mov
or
or
shl
dec
je
mov
je
iret
mov
add
push
inc
xor
dec
add
out
mov
lods
inc
lods
push
xor
cmp
daa
(bad)
retf
adc
or
xor
push
je
arpl
pop
inc
push
movs
test
inc
movs
push
rol
test
es
lea
dec
fisttp
je
sbb
js
push
push
sti
in
test
or
imul
(bad)
pop
cli
push
mov
mov
call
push
lds
dec
mov
rcl
xchg
dec
xor
sbb
and
jae
iret
and
retf
sbb
clc
data16
cmp
mov
lea
ins
fld
jmp
pop
xchg
in
inc
jmp
loope
cmp
and
pop
and
push
mov
leave
in
and
into
mov
in
adc
and
jo
rol
test
mov
scas
outs
and
loope
sbb
mov
xor
dec
inc
push
fild
loope
push
push
es
mul
xchg
jns
xchg
sti
add
dec
arpl
test
jbe
dec
or
dec
pusha
in
inc
push
repnz
sbb
enter
push
shl
mov
xchg
or
fs
data16
and
fs
add
pusha
nop
push
dec
mov
and
and
pop
int3
ja
rcr
push
push
fs
rol
scas
not
inc
pop
add
sbb
mov
cdq
or
sbb
push
sbb
cs
pop
addr16
bound
test
add
dec
mov
sbb
mov
adc
add
out
and
push
in
cmp
test
mov
movzx
sar
or
(bad)
mov
in
jae
sti
xor
leave
int3
retf
ror
mov
pop
lds
shr
(bad)
jbe
sbb
std
scas
shl
or
je
and
hlt
or
test
add
add
retf
ror
or
mov
add
or
pushf
mov
pop
jo
push
(bad)
movs
push
push
xor
push
add
inc
mov
ret
pop
xchg
mov
pusha
and
pop
test
cmp
je
ins
imul
mov
cmp
addr16
sbb
sbb
jo
stos
jg
fmul
dec
inc
imul
push
mov
cmp
push
or
xor
pop
fnstcw
hlt
push
cwde
movs
push
mov
test
pop
adc
jl
(bad)
pop
push
popa
push
jmp
jl
or
outs
mov
and
mov
addr16
jmp
jns
mov
in
call
js
hlt
pop
jns
mov
jecxz
mov
mov
sahf
ss
jmp
sahf
ins
push
push
pop
hlt
popa
in
cwde
adc
cmp
jb
or
fs
(bad)
(bad)
call
sbb
mov
js
outs
(bad)
cli
xor
jecxz
inc
mov
jnp
or
setb
mov
inc
mov
mov
outs
jno
push
cmp
add
inc
add
inc
ret
scas
(bad)
ja
ror
nop
test
cmps
push
aaa
jecxz
pop
jne
push
fmul
pop
je
getsec
or
sub
loope
xor
mov
mov
pop
sbb
push
mov
pop
pop
xchg
xchg
int3
dec
scas
out
sar
cmp
ja
sub
or
popa
scas
push
lods
int3
aas
push
adc
ror
mov
ror
mov
je
fsub
xchg
test
mov
mov
sbb
sub
or
lods
imul
or
inc
outs
cmps
in
sub
and
sub
int
nop
mov
sub
xor
push
popa
sbb
pop
push
out
test
pop
fild
mov
(bad)
ja
dec
fcomip
rcl
or
push
pusha
sti
mov
std
cmc
je
push
pop
(bad)
retf
mov
cmp
add
jp
test
or
jg
ret
test
jne
xor
and
jg
nop
das
xor
adc
mov
sub
fcomip
(bad)
in
(bad)
neg
inc
nop
push
dec
mov
fwait
sbb
push
lods
sbb
add
push
inc
mov
mov
xor
call
sub
inc
jle
and
dec
je
(bad)
jbe
dec
cmp
mov
popa
inc
push
add
mov
adc
mov
shr
xchg
test
xchg
or
cwde
neg
sbb
push
or
fsub
nop
xchg
xchg
imul
nop
popa
int
inc
jbe
xchg
imul
jbe
in
pop
push
mov
pop
xchg
push
add
sbb
pop
cs
int
and
xor
push
dec
loopne
xlat
inc
push
or
push
inc
popa
sub
jge
retf
or
add
pusha
ror
and
sub
cmp
jmp
js
out
dec
dec
jns
pop
pop
or
sub
ja
mov
xchg
sahf
xor
mov
adc
pusha
aas
sub
mov
mov
xlat
test
movs
shl
nop
sti
aaa
in
mov
mov
outs
xlat
or
cmp
fs
dec
jo
je
(bad)
xor
inc
or
dec
ja
push
cmp
inc
data16
or
test
loopne
sbb
scas
pop
loope
push
fcmovnb
cmps
lds
ss
mov
mov
movs
call
pusha
fcom
xlat
push
mov
add
and
jb
push
sbb
and
pop
add
adc
xchg
mov
adc
mov
add
fild
mov
fld
pop
pop
das
pushf
jo
or
mov
cwde
and
rol
(bad)
lahf
jg
fadd
je
scas
pop
mov
mov
jbe
lea
mov
pop
test
ror
add
mov
xchg
cmp
das
sub
shl
cmp
sub
or
inc
cmp
aas
loop
xor
inc
jb
cmp
pusha
mov
das
add
and
js
sbb
add
in
stc
shl
jmp
repz
xor
jbe
xor
lahf
cmp
xor
lahf
and
and
aam
enter
lahf
(bad)
cli
lods
aad
hlt
add
and
adc
jg
or
in
shl
in
xor
cmp
imul
sub
push
and
mov
mov
popf
(bad)
addr16
push
cmp
iret
push
mov
daa
inc
iret
inc
push
xchg
retf
jo
mov
pop
xchg
js
jg
into
cs
dec
jno
jmp
push
je
jne
sub
push
pusha
and
inc
cmp
push
maxps
inc
call
sub
add
adc
sub
and
outs
cmp
leave
adc
nop
xor
pop
or
cmp
pop
jg
or
add
pop
xchg
pop
jle
pop
les
mov
push
in
ja
or
xchg
or
xor
loopne
xor
loope
test
jne
xor
je
xchg
mov
xor
test
nop
pop
jmp
sbb
xchg
mov
ret
loopne
mov
xor
xchg
inc
dec
or
xor
or
mov
sbb
and
(bad)
outs
or
push
pop
(bad)
adc
outs
push
pop
out
dec
push
stos
popf
cmps
or
jmp
std
cmps
and
and
out
mov
cmps
rcl
mov
mov
xchg
jne
inc
cmp
lahf
or
cdq
outs
shl
test
or
fild
xchg
les
dec
mov
add
push
inc
push
jae
mov
push
int
xor
dec
or
(bad)
fdivr
fwait
dec
movs
imul
sbb
cs
xlat
mov
push
lahf
push
aam
add
push
daa
push
dec
leave
sub
pop
add
(bad)
pop
pop
push
arpl
xor
imul
sub
pop
or
test
push
pop
sbb
(bad)
sbb
rol
inc
mov
push
cmps
inc
sahf
xchg
sbb
repnz
test
cmp
lods
cs
xchg
xchg
sbb
dec
inc
in
push
add
cmp
pop
adc
iret
es
xchg
xchg
es
dec
xor
mov
mov
and
iret
mov
jns
inc
xor
mov
pop
ss
aam
or
scas
inc
je
and
mov
add
xchg
jns
lds
push
jo
inc
stc
mov
or
pop
add
rcr
imul
mov
sahf
jnp
inc
pop
mov
inc
jns
ret
mov
jns
pop
sbb
mov
xchg
ss
xor
cmp
mov
in
cmp
and
xor
mov
adc
out
pop
test
jne
xor
in
or
fmul
ret
add
stc
stos
mov
and
popf
(bad)
xor
add
lahf
movs
lahf
add
add
add
cmp
sbb
cmp
idiv
pushf
nop
xchg
cdq
pop
popf
and
mov
push
mov
sar
jae
arpl
je
(bad)
adc
outs
outs
test
add
pushf
dec
pop
sar
xchg
ins
and
adc
sbb
scas
inc
cs
data16
push
push
add
cmps
daa
mov
call
out
push
jmp
dec
leave
inc
jle
inc
lods
inc
sub
daa
pop
gs
inc
add
inc
test
sbb
push
loope
xchg
test
aas
sbb
jae
inc
pop
js
or
inc
add
mov
inc
and
push
inc
inc
es
out
push
loop
popf
inc
push
mov
daa
(bad)
jge
lods
inc
xchg
pop
and
xchg
inc
daa
pusha
inc
jo
arpl
xlat
or
xchg
cld
fstp
dec
push
cmp
inc
test
ror
sbb
aaa
jbe
sub
lahf
and
add
or
int3
pop
xchg
adc
lahf
sbb
jo
rol
adc
mov
dec
out
add
loop
pusha
add
daa
cmp
movhps
push
push
xor
sub
cmp
sub
sbb
call
enter
push
add
mov
or
push
or
sub
shr
call
jmp
lea
mov
retf
jl
sbb
dec
call
xchg
sub
or
xor
retf
loopne
pusha
clc
(bad)
mov
cli
xchg
jecxz
xor
retf
xchg
fadd
pop
inc
ins
mov
sbb
stc
xchg
jmp
or
daa
loop
lods
push
sbb
mov
ins
sub
loopne
mov
lds
add
fnstsw
mov
jg
adc
push
push
push
sub
(bad)
inc
sub
cmps
and
sub
int3
cmp
xlat
inc
jno
sbb
ins
xlat
ins
mov
xor
push
mov
movs
push
pop
ja
cdq
jge
das
rcl
out
mov
ror
ror
inc
xchg
mov
popa
sbb
pop
mov
lods
movs
push
mov
add
cmp
xor
ja
lods
push
or
icebp
inc
test
bound
pop
jnp
icebp
ds
adc
repnz
push
repnz
icebp
push
dec
push
fdivr
daa
xchg
ins
mov
cmp
jo
inc
ds
mov
fsub
clc
loopne
sbb
fisttp
jbe
push
jp
pusha
and
neg
add
es
das
sub
fimul
cld
or
jo
loope
cwde
out
dec
add
fsub
push
push
push
push
les
movs
ss
xor
ins
cmps
adc
jl
mov
push
mov
pop
mov
add
and
cwde
mov
addr16
bound
ds
mov
add
push
push
mov
dec
or
lods
or
mov
add
jmp
add
add
inc
push
outs
outs
ins
push
imul
clc
repz
pop
or
push
vmovsd
push
adc
add
dec
into
push
das
pop
mov
add
add
adc
or
push
push
push
sbb
dec
sti
mov
gs
gs
mov
pop
or
cld
gs
jb
jns
movs
add
jo
adc
inc
sub
sti
jg
jne
je
popa
jb
push
or
pushw
loopne
add
add
jo
popf
sub
or
ja
xchg
adc
mov
(bad)
in
or
dec
jae
cmps
add
(bad)
or
push
add
or
bswap
adc
imul
mov
xor
mov
push
retf
push
lods
dec
mov
or
pop
inc
out
mov
pop
xchg
sbb
or
or
mov
add
nop
in
push
sbb
cmp
lock
sbb
inc
pop
mov
inc
jne
xor
or
add
out
mov
sbb
or
mov
aaa
push
sbb
enter
cmp
lea
xchg
or
pop
xchg
sub
xor
mov
(bad)
or
and
jmp
out
xchg
dec
dec
cmp
mov
std
cmp
sti
outs
inc
jmp
inc
mov
test
xor
aaa
xor
mov
ret
fstp
daa
adc
or
cmp
mov
jg
push
push
xchg
jle
dec
cld
cmp
jge
call
adc
cld
cmp
sub
push
int3
inc
or
outs
adc
ja
iret
out
sbb
mov
sbb
pop
mov
and
push
test
in
inc
xchg
in
aaa
aad
sbb
lods
nop
iret
test
push
mov
imul
xor
adc
stc
icebp
(bad)
or
les
push
push
cmp
and
jg
fwait
std
and
daa
cmp
fs
movs
mov
js
jle
out
or
xor
jo
inc
adc
mov
aas
and
cmp
jl
and
inc
jne
lea
imul
add
cmp
es
adc
push
mov
not
mov
push
xchg
push
and
push
cmps
push
shr
fidivr
push
(bad)
fidivr
and
call
fadd
data16
push
xor
cmps
push
xor
mov
test
mov
push
nop
push
cwde
mov
sbb
pusha
mov
mov
jb
xor
idiv
cmp
es
jae
cwde
adc
ror
lock
and
add
repz
fnstsw
pushfw
test
inc
sub
jae
outs
idiv
xor
movs
add
je
int3
dec
into
jne
dec
xor
mov
sub
pop
cmovbe
ins
outs
(bad)
jns
mov
popa
jb
or
jae
push
outs
arpl
gs
pop
mov
inc
dec
push
push
add
ja
inc
inc
add
mov
mov
outs
popa
(bad)
and
and
jmp
in
adc
(bad)
jnp
dec
add
es
push
add
pop
add
mov
ja
in
pop
mov
mov
and
dec
push
loopne
out
dec
or
push
inc
push
cmp
daa
lds
mov
test
mov
lods
popa
push
adc
std
add
mov
push
inc
popa
je
das
sbb
test
sbb
lock
add
lods
mov
cmp
add
inc
jns
gs
arpl
add
bound
in
ins
add
push
jle
retf
sub
aad
aad
jno
dec
enter
jno
xor
mov
scas
pop
cs
pusha
fcomi
dec
xor
retf
pop
ror
xchg
sbb
cli
dec
mov
test
and
loope
add
sub
or
mov
or
inc
shl
or
jge
xor
outs
push
or
mov
pop
inc
mov
pop
test
popa
cwde
mov
enter
ror
inc
(bad)
xchg
add
mov
fmul
push
mov
mov
cmp
cmp
add
mov
(bad)
jle
inc
or
push
loopne
sub
rol
iret
and
push
test
inc
in
add
fst
sub
(bad)
cmc
adc
(bad)
adc
pop
mul
lods
arpl
or
add
mov
pushf
add
and
movaps
or
cwde
fwait
add
pop
inc
sbb
or
pop
in
or
jmp
xor
sub
sbb
push
push
push
sub
int3
push
pop
or
ror
sbb
mov
rol
mov
les
mov
popf
mov
(bad)
inc
xchg
inc
inc
inc
add
cmp
push
arpl
add
dec
push
pop
sub
sbb
inc
jo
and
mov
or
pusha
movs
mov
mov
inc
ror
imul
push
lea
fwait
push
and
mov
and
nop
les
dec
mov
or
adc
cmp
fadd
push
add
stos
xchg
pop
pop
aad
or
xor
adc
and
in
out
es
xor
push
mov
sub
ret
adc
ret
dec
bound
popa
nop
push
xchg
shl
xlat
inc
mov
aas
and
arpl
ins
pushf
pop
popa
mov
mov
ret
or
push
add
sti
ss
arpl
pop
sub
add
int3
inc
cmp
dec
jp
xchg
lea
push
push
stc
push
push
lea
sbb
push
js
cmc
push
data16
jnp
xor
mov
jl
push
or
and
xor
pop
or
mov
test
jne
mov
jmp
bound
retf
outs
mov
neg
fiadd
jmp
adc
data16
adc
push
ret
jmp
mov
pushf
gs
iret
(bad)
and
arpl
cmp
stos
aam
xor
mov
inc
add
pusha
sbb
rcr
arpl
sub
inc
xchg
mov
loop
inc
inc
and
inc
or
rcl
clc
sbb
inc
mov
(bad)
in
imul
loopne
sbb
add
add
sti
push
mov
sub
jmp
pusha
out
and
mov
cmp
outs
fs
push
mov
inc
mov
pop
pop
in
xchg
jg
push
xor
cmp
add
mov
sub
and
retf
mov
lds
and
mov
lods
cmp
hlt
retf
pop
jl
daa
adc
sub
pop
sub
jecxz
jmp
push
cmp
je
cmc
int3
ds
adc
and
push
sahf
int
pushf
push
jns
lods
pop
jp
sahf
iret
ja
out
add
fdivr
xchg
mov
sbb
bsf
xor
mov
adc
mov
add
lea
and
js
std
or
rcl
jge
cmp
and
push
jp
and
das
dec
push
setge
iret
xchg
mov
nop
dec
ins
das
push
fld
xor
pop
mov
jns
mov
ss
pop
push
outs
and
cwde
push
xchg
push
mov
cmp
repz
inc
xor
aam
mov
sbb
fcomp
push
push
sbb
dec
cmp
xchg
scas
daa
js
mov
jl
pop
and
cmps
(bad)
call
inc
arpl
jo
push
popa
imul
add
inc
inc
jne
jb
inc
js
test
in
add
sub
push
inc
ins
popa
jae
inc
adc
ror
cmp
add
xbegin
lds
jbe
dec
pop
ja
mov
add
add
hlt
movlps
inc
dec
imul
push
loop
clc
pop
push
dec
and
and
ret
loope
int
or
inc
dec
ja
push
pop
je
(bad)
mov
or
add
daa
fld
dec
rol
push
and
loope
ret
sub
dec
or
and
mov
inc
mov
repz
retf
in
fisttp
sbb
add
cdq
or
mov
test
ret
or
add
fcomp
and
fimul
push
adc
mov
pop
inc
add
and
js
adc
mov
xchg
ret
inc
cmp
cmps
sub
mov
dec
or
arpl
and
xor
mov
or
mov
and
xor
jae
addr16
popf
mov
inc
cmp
push
mov
add
or
sahf
mov
sub
mov
imul
call
lds
and
push
jne
push
test
cmp
mov
sub
div
mov
ja
js
xchg
or
jg
or
lods
add
rcr
xlat
add
out
jns
jge
pushf
test
xchg
push
call
push
shr
js
cmp
int
leave
inc
test
out
push
out
cmp
sbb
data16
dec
add
push
sub
or
push
add
cmp
movzx
mov
shl
loopne
je
arpl
loopne
ss
ins
inc
cs
pushf
mov
or
hlt
jne
sti
pushf
std
pop
shl
or
outs
cmp
xor
int3
mov
pop
fcom
jb
or
mov
or
or
cld
push
mov
jge
jbe
es
out
call
or
xlat
push
add
fcomp
sbb
jne
ds
imul
dec
jo
add
shr
sbb
mov
sub
sar
push
popa
jne
je
or
xor
ja
mov
fmul
(bad)
pop
add
ret
shl
and
popa
add
idiv
pop
dec
or
cmp
bound
or
pop
inc
loope
cwde
inc
push
adc
shl
jo
pop
cli
and
fisttp
or
and
and
loopne
mov
std
inc
daa
(bad)
adc
cmp
pop
push
push
mov
cmp
xchg
xor
(bad)
cmp
or
idiv
xor
mov
sub
jae
movzx
add
test
pusha
(bad)
es
xlat
mov
arpl
mov
int
mov
movaps
mov
add
xchg
iret
shl
add
out
cmp
xor
or
add
cs
sbb
xchg
aad
mov
inc
and
mov
out
rcr
cmp
xor
pop
mov
clc
rcl
xchg
push
mov
xchg
and
popa
mov
add
imul
cmp
lods
sub
inc
jmp
mov
cmps
cmp
push
loop
dec
in
aad
pop
pop
xchg
or
sub
pop
jo
and
fsub
sbb
jmp
inc
iret
pop
push
push
cmp
sbb
enter
pop
sbb
enter
stos
xchg
ret
(bad)
push
jmp
aas
ret
js
lea
mov
jne
adc
jb
adc
int
test
xchg
retf
into
adc
sbb
or
dec
sbb
enter
or
vmovlps
dec
leave
mov
in
es
inc
fs
sbb
mov
je
ficom
aas
data16
xchg
or
fist
and
cmp
lock
xchg
movs
ins
jmp
inc
jge
dec
xor
xor
add
mov
cmp
mov
pop
or
fstp
(bad)
sbb
or
lahf
enter
shl
sbb
popa
push
adc
call
mov
jmp
and
(bad)
fisub
push
add
sar
pop
sub
lea
mov
push
mov
out
push
ds
xor
dec
jne
loop
sub
shl
push
cld
mov
dec
xor
add
dec
imul
cs
add
retf
mov
fsubr
mov
cmps
outs
add
(bad)
fdivr
jb
and
sbb
mov
mov
retf
push
fs
mov
dec
pop
push
fsub
(bad)
mov
mov
enter
jle
or
pop
mov
daa
push
mov
pop
jg
push
jmp
push
push
push
mov
push
scas
das
aam
xor
or
inc
fiadd
add
inc
jo
mov
lea
imul
ret
rol
jbe
add
scas
inc
stos
mov
sahf
mov
dec
xor
dec
sbb
pushf
push
in
les
jg
mov
mov
jg
push
je
inc
jo
mov
cwde
je
or
and
iret
popa
aam
in
std
js
or
adc
mov
xor
xchg
sbb
sahf
imul
adc
add
push
push
sbb
pop
mov
ja
jo
fcom
ret
xor
mov
cmp
shl
and
pop
xchg
popa
or
jmp
mov
mov
inc
add
mov
cmp
jl
adc
mov
mov
sbb
das
xchg
xor
leave
jl
ret
push
or
out
mov
inc
mov
mov
push
adc
adc
mov
mov
push
jl
nop
inc
jnp
xor
mov
push
push
push
je
fwait
icebp
inc
outs
ins
ins
movs
push
jns
gs
jge
call
mov
push
outs
imul
outs
push
adc
inc
inc
add
or
inc
push
sbb
push
push
mov
inc
inc
dec
sbb
sub
es
push
push
push
pop
or
inc
es
dec
push
push
dec
dec
dec
adc
and
sti
fs
jne
je
vpcmpeqd
push
add
dec
push
dec
add
aaa
mov
add
inc
add
int3
pop
das
imul
jnp
xor
push
push
adc
int3
test
jp
ret
sub
mov
(bad)
data16
pop
sar
push
push
out
pop
dec
adc
ss
push
dec
into
loopne
xor
push
push
enter
mov
xor
adc
add
push
sbb
push
add
mov
cmp
data16
outs
jae
push
and
cmp
or
in
std
les
je
jb
mov
pop
pop
mov
fld
xor
dec
outs
jne
sbb
mov
nop
dec
push
adc
gs
or
push
fcmovu
or
mov
jecxz
add
pushf
sub
outs
xor
pushf
inc
mov
ror
ror
enter
sbb
push
pusha
adc
outs
or
outs
add
dec
test
or
or
lds
popf
pop
push
xchg
mov
add
pop
xor
push
pop
mov
daa
xor
push
dec
mov
rol
int3
pop
add
pop
inc
je
push
imul
or
push
gs
stos
dec
outs
outs
adc
imul
inc
fiadd
gs
inc
outs
outs
ins
xchg
cmps
pop
jecxz
mov
inc
aam
dec
aaa
xchg
inc
add
cmps
je
ja
mov
icebp
push
jle
gs
jne
xchg
pop
test
in
push
jns
invd
jnp
or
sbb
dec
fldcw
mov
jle
mov
or
cmps
jb
add
and
dec
adc
or
ja
jb
and
mov
fs
jbe
rol
pop
jne
aad
loopne
inc
and
loope
retf
lods
rcl
mov
shl
and
pop
push
movs
loopne
adc
inc
mov
sti
cmp
jnp
lds
jo
or
or
sbb
(bad)
daa
(bad)
(bad)
(bad)
fmul
imul
ins
mov
jb
out
(bad)
sbb
or
or
adc
cld
xlat
adc
ret
shl
fmul
xchg
loope
pusha
mov
sbb
pop
sub
ins
dec
jbe
ins
imul
add
call
push
enter
lock
inc
sbb
inc
adc
adc
movs
popa
and
adc
das
adc
out
add
mov
ret
add
punpcklwd
or
add
add
push
movs
scas
mov
dec
or
(bad)
jnp
js
sub
mov
test
bound
sub
push
int
mov
or
dec
outs
pop
mov
mov
xor
or
adc
out
pusha
or
(bad)
sub
and
or
inc
icebp
test
add
mov
add
or
lds
or
xchg
(bad)
or
pop
movs
jo
arpl
rol
sbb
add
add
cmp
push
int
ins
xor
rol
pop
sub
fadd
cwde
aas
push
ss
addr16
jns
push
dec
pop
add
test
push
jmp
imul
pushf
lods
and
outs
cmp
sub
and
aaa
dec
pop
sbb
sbb
shl
js
aaa
nop
stos
inc
(bad)
xor
cwde
test
pop
cmp
push
in
pop
add
add
cmp
rcl
test
push
fild
xor
cs
add
leave
mov
shl
adc
pop
in
das
repnz
add
and
popf
arpl
sbb
inc
ins
call
jns
push
je
out
pop
inc
sub
push
mov
mov
add
pop
mov
cmpps
pop
fld
or
out
pop
inc
sub
sbb
sar
setb
and
in
mov
jo
fsub
adc
(bad)
daa
add
ins
inc
push
test
and
jne
mov
inc
lock
fistp
jb
or
cmp
outs
mov
outs
je
ja
dec
lds
sbb
inc
pusha
or
cmp
pop
pop
push
adc
dec
loopne
sub
retf
loop
aaa
jmp
sbb
xchg
cwde
add
cmp
sbb
loopne
sub
(bad)
ss
mov
or
ret
shl
fdiv
sub
(bad)
add
mov
loopne
sbb
inc
add
add
in
cmp
fwait
adc
adc
or
mov
call
push
dec
fs
sub
inc
dec
loopne
mov
test
cmp
mov
and
imul
and
cmovb
rol
aaa
xor
cmovbe
ja
jg
pop
sub
add
scas
inc
gs
push
sub
out
test
mov
arpl
mov
in
add
push
push
dec
pop
std
mov
ret
adc
and
(bad)
cdq
int3
pusha
adc
dec
popa
push
xor
push
imul
adc
rol
xor
pop
push
mov
pop
mov
call
(bad)
jo
fs
sti
or
push
mov
mov
dec
lea
inc
adc
fs
dec
sbb
scas
shl
jo
loop
add
add
push
add
sub
dec
mov
push
scas
hlt
jecxz
mov
xor
add
or
or
dec
ja
inc
pop
pop
sbb
ins
add
sub
pop
dec
jae
inc
je
int3
fs
and
ret
es
fiadd
adc
shl
fneni(8087
in
fild
mov
mov
movs
fwait
and
ret
test
push
in
add
sbb
cdq
or
fs
sbb
popa
or
fs
int
fs
sbb
ds
mov
mov
xor
lds
je
dec
sbb
fld
inc
push
dec
fldenv
add
fwait
inc
adc
inc
dec
sub
mov
pop
mov
lods
jecxz
std
and
inc
popa
inc
pop
adc
cmp
jmp
mov
xor
movs
imul
std
test
sbb
stos
sub
push
mov
xchg
mov
push
or
sub
or
or
cmps
add
cdq
adc
jo
dec
or
in
adc
or
sub
cmp
(bad)
dec
push
test
push
jbe
inc
shl
push
and
sahf
(bad)
mul
pop
xlat
or
xor
push
mov
lods
int
cwde
mov
mov
pop
mov
sbb
int3
add
dec
inc
xchg
mov
inc
or
enter
mov
mov
stos
fstp
or
sbb
sub
add
push
add
sbb
xor
adc
add
pop
sbb
cs
jmp
or
aaa
rcl
icebp
jmp
cmp
adc
lahf
dec
dec
mov
outs
dec
ins
add
mov
jmp
outs
out
mov
add
ret
cs
inc
mov
add
in
icebp
and
ins
lds
and
mov
push
jge
out
sbb
mov
or
outs
bt
dec
(bad)
cli
shl
add
xor
xor
aas
mov
inc
gs
sbb
push
dec
mov
rcl
inc
sub
pop
ins
and
add
pop
xor
mov
out
add
int
add
mov
sub
and
inc
adc
or
add
pop
jne
bound
inc
dec
dec
adc
sub
add
loope
ror
mov
pop
pop
sub
push
out
les
(bad)
call
cmp
inc
xor
ss
dec
mov
adc
shl
xlat
inc
adc
add
lods
mov
cmp
pop
gs
inc
out
ins
sbb
adc
push
pop
pusha
movs
sbb
jl
loopne
fiadd
ins
xor
ja
sub
mov
sub
loopne
retf
shl
ins
cmps
test
ret
bound
bt
rcr
leave
pop
leave
(bad)
sbb
shl
pop
out
mov
add
inc
lods
jo
adc
dec
ss
inc
inc
scas
sar
sub
inc
inc
inc
cs
ja
(bad)
sbb
inc
lea
pop
add
rol
imul
jmp
mov
inc
shl
cwde
push
or
cs
das
ror
in
dec
add
gs
inc
inc
adc
cmp
and
adc
or
inc
xor
or
xor
mov
(bad)
or
rcr
add
mov
stc
lahf
and
inc
push
outs
data16
enter
ds
jnp
test
out
daa
push
push
inc
fs
(bad)
push
lock
push
out
push
and
push
inc
dec
dec
xor
daa
mov
shr
dec
sbb
push
cmp
sub
pop
(bad)
shr
movs
ins
sbb
jb
push
jo
ret
add
outs
sbb
or
int3
aam
xor
scas
mov
imul
mov
popa
mov
xor
and
hlt
push
adc
inc
add
ror
sar
out
adc
dec
sahf
das
aad
cmp
dec
inc
arpl
cmps
pop
mov
push
lock
adc
inc
loopne
cmovs
aam
and
mov
xor
aas
sti
xor
imul
sub
push
imul
call
test
adc
int3
loope
ret
jl
add
inc
add
rol
add
inc
ins
push
dec
add
lds
adc
jle
fist
xchg
push
mov
jo
cdq
or
cmp
mov
add
pop
(bad)
aam
sbb
aad
cmp
add
push
fist
mov
ja
sbb
pusha
sbb
jl
add
fsubrp
mov
repnz
imul
jbe
cmp
ja
mov
ja
mov
push
ja
es
neg
dec
fdiv
sahf
ins
cmps
push
adc
jl
scas
fnstcw
mov
mov
mov
scas
cwde
mov
test
mov
pusha
ds
push
xor
mov
cs
add
jae
cmovno
outs
jne
loopne
push
push
call
adc
and
push
ret
xor
push
mov
cmps
movlps
lahf
jne
xchg
jmp
xor
unpckhps
movhps
add
les
jo
ins
cmp
mov
lock
cmp
add
and
push
jne
addr16
add
gs
out
out
dec
and
ins
ins
xchg
in
inc
adc
xor
mov
adc
mov
out
cwde
int
cs
or
lds
jge
mov
add
cld
xlat
stos
jns
push
rcr
bound
pop
lea
add
mov
pop
(bad)
pop
xchg
in
popf
inc
adc
cmps
pop
inc
add
fiadd
retf
inc
addr16
and
push
loope
inc
add
push
cwde
push
test
idiv
pop
dec
and
outs
add
add
sbb
outs
or
jmp
in
add
pcmpgtb
fsubr
mov
jo
push
push
push
inc
xor
and
cld
inc
ins
sahf
sbb
or
lea
inc
hlt
pop
rol
inc
push
sub
out
mov
sbb
push
loope
not
dec
push
gs
mov
psubusw
div
movs
sbb
push
ret
pop
add
xchg
push
push
gs
cld
inc
sbb
and
ins
outs
fist
inc
pop
outs
push
ja
call
mov
mov
or
ins
dec
popa
rcl
add
push
popa
push
pop
mov
dec
aaa
xchg
fcomp
cdq
sbb
mov
jle
mov
or
dec
inc
and
shl
push
aam
popa
dec
gs
(bad)
jmp
fadd
shrd
fsub
mov
lods
xor
leave
or
dec
enter
sub
pop
mov
cwde
mov
js
add
jne
cmps
and
dec
fwait
pop
xchg
call
outs
cmp
into
mov
xchg
mov
and
or
pop
aas
or
js
mov
aam
or
pop
sub
and
or
arpl
mov
test
add
inc
arpl
inc
aam
lahf
pop
xor
fdivr
scas
outs
pop
cs
jl
jp
in
pusha
in
xchg
inc
sub
or
icebp
jae
dec
push
or
fmul
loopne
in
pop
fs
mov
dec
cli
push
cmp
pop
adc
and
das
inc
push
mov
aam
imul
sbb
in
jo
push
cmp
ins
fwait
out
fild
fs
arpl
rol
xor
and
cmp
and
lods
mov
sti
sahf
sbb
es
push
call
neg
out
sub
hlt
inc
call
fcmovbe
push
sahf
mov
daa
lock
adc
push
cwde
mov
mov
push
inc
enter
push
and
jnp
inc
movs
xchg
push
hlt
lods
mov
push
cmp
xor
push
inc
and
pop
out
mov
xchg
ret
mov
xor
mov
and
adc
pop
push
cmp
mov
ror
jmp
fsubr
and
lods
adc
jo
mov
rcl
xchg
fidivr
shr
mov
out
xchg
and
cs
or
test
jo
arpl
aas
xor
xlat
xor
ret
aam
add
dec
xchg
add
rcl
cmp
adc
sub
mov
inc
outs
gs
out
inc
arpl
dec
inc
adc
dec
cmp
xchg
dec
outs
fdiv
dec
outs
jbe
jl
adc
jns
aam
push
pop
inc
adc
(bad)
or
pusha
popf
sbb
loope
retf
add
push
dec
retf
add
jbe
and
mov
mov
mov
adc
xor
pop
dec
add
cmp
mov
sbb
nop
sar
cdq
sub
fidivr
cwde
mov
inc
js
arpl
das
pop
sub
out
icebp
push
push
dec
mov
push
mov
add
shr
or
outs
jne
pop
inc
mov
(bad)
(bad)
pop
jo
js
jne
ret
inc
sub
adc
cmp
test
xor
push
lock
in
or
pop
cmp
adc
jbe
lea
lea
adc
dec
mov
and
dec
sub
xlat
add
or
ret
scas
fsubr
js
or
push
nop
or
sbb
or
jae
dec
pop
popf
js
adc
push
outs
cmc
stos
shr
mov
sbb
pop
out
adc
sbb
pop
call
and
push
xor
pop
cmp
in
fs
cwde
cmp
push
test
add
pop
push
lds
sub
cmc
pop
add
mov
mov
lea
sbb
out
int3
fst
jo
or
arpl
pop
sbb
pop
cmc
sbb
mov
add
inc
test
mov
mov
pop
dec
sbb
pop
sbb
sbb
sbb
add
pop
push
ja
aad
push
ja
inc
adc
xor
push
pop
movs
sbb
jae
pusha
adc
pop
push
and
xor
mov
xor
push
out
dec
add
pop
pop
and
scas
(bad)
in
and
jp
push
and
adc
scas
cmp
push
add
cdq
inc
shl
xor
imul
outs
push
sub
dec
std
inc
add
ret
cmp
pop
adc
mov
clc
or
fwait
or
xor
push
(bad)
cmp
cmp
xor
mov
enter
xor
enter
adc
cmp
mov
rol
mov
test
push
or
shl
mov
mov
mov
enter
add
push
sub
inc
push
add
cmp
and
(bad)
adc
inc
xchg
add
js
inc
out
inc
push
cld
mov
mov
les
pushf
test
sbb
jle
and
sbb
call
jbe
sub
push
dec
mov
paddd
loopne
adc
add
mul
adc
stos
and
stos
pop
(bad)
pslld
and
scas
or
cmp
mov
mov
mov
ins
xor
inc
ss
dec
or
xchg
xor
inc
xor
shr
push
mov
popf
repz
and
xchg
lds
repz
or
retf
jmp
xor
popf
inc
icebp
push
xchg
xor
leave
sub
dec
mov
add
push
retf
jecxz
aam
jg
jbe
mov
fld
fsub
fmul
fld
xchg
or
ret
retf
movs
dec
push
push
push
cmp
mov
sub
out
fdivrp
out
(bad)
mov
adc
sub
and
mov
movs
push
push
mov
inc
dec
push
nop
or
ins
cdq
mov
dec
jne
pop
pop
pop
pop
ret
xchg
lock
shr
ja
pop
push
push
std
push
xchg
jp
jne
imul
dec
push
data16
push
inc
jns
js
arpl
jbe
pop
adc
add
push
add
mov
add
add
jl
add
push
mov
add
push
dec
pop
push
sub
pop
loopne
or
test
pop
xor
or
shl
add
mov
test
clc
xor
xor
mov
sbb
and
or
jmp
inc
add
mov
inc
dec
jne
mov
jnp
cmp
out
outs
scas
popf
or
and
das
mov
xchg
loopne
push
sub
dec
xor
xchg
out
stos
jne
push
pop
push
push
in
jbe
push
xchg
cmp
repz
mov
data16
or
fs
push
data16
push
push
sbb
fnstcw
add
and
sbb
lahf
sbb
cmp
clc
scas
push
cmp
add
stc
cmp
ret
sbb
push
test
pusha
js
mov
cmps
jmp
call
or
jo
dec
xchg
jo
push
jne
jns
inc
jnp
add
lods
add
or
dec
cmp
dec
push
imul
xchg
mov
into
mov
mov
cld
scas
rcl
xor
push
xor
mov
xor
(bad)
fucomp
push
aam
xor
je
lea
mov
dec
dec
cld
mov
mov
and
sti
or
adc
mov
mov
push
sub
push
push
out
mov
je
add
cmp
push
dec
(bad)
mov
hlt
in
mov
lods
movs
mov
or
cmp
(bad)
shl
js
in
imul
hlt
cmp
adc
mov
mov
es
jo
mov
xor
and
add
cmp
adc
or
leave
mov
push
xor
pop
nop
in
adc
jns
ins
movzx
test
xor
sti
mov
mov
in
sub
jae
mov
add
std
and
push
mov
xchg
xor
mov
inc
add
inc
sti
aad
ds
xor
or
cmp
jb
fisubr
mov
xchg
xor
ror
nop
dec
mov
cmps
fisub
and
arpl
cmps
or
mov
mov
sub
cs
call
add
cdq
(bad)
mov
in
mov
push
movs
into
push
jb
or
shl
cwde
lds
xlat
mov
fst
es
jae
lods
(bad)
and
out
nop
clc
daa
inc
lods
and
ins
mov
cmps
fs
push
enter
in
cmp
add
jmp
nop
cmps
and
fisub
mov
retf
pop
mov
pop
xchg
push
jg
fs
mov
mov
add
push
xor
call
xchg
jmp
mov
inc
mov
adc
adc
mov
inc
cmp
cmp
iret
or
mov
jg
cmp
jne
cmp
fisttp
(bad)
jb
jo
sub
pusha
lahf
loopne
fidivr
pop
in
add
(bad)
push
xchg
sahf
enter
imul
outs
mov
ja
mov
into
adc
push
or
dec
xor
lea
push
lock
push
clc
mov
fwait
jmp
xchg
mov
test
shl
mov
jns
pop
or
cmp
iret
or
sub
pop
leave
enter
dec
mov
add
popa
mov
mov
bound
mov
push
in
dec
or
push
sbb
adc
test
out
xchg
jb
ja
and
call
ret
add
or
and
(bad)
imul
push
push
js
inc
dec
push
bound
dec
sbb
rcl
(bad)
mov
mov
data16
cmp
mov
test
sbb
xor
mov
jbe
xchg
nop
mov
jnp
fcom
push
push
mov
fwait
sub
xor
ins
dec
dec
and
sbb
push
push
sbb
and
aaa
fild
xor
nop
int3
mov
push
add
retf
loopne
or
cvttps2pi
dec
or
push
mov
and
add
js
sbb
das
das
cwde
mov
inc
push
pop
pop
xchg
test
mov
mov
add
pop
loopne
or
ffreep
adc
cmp
jbe
cmp
je
loopne
mov
add
and
mov
and
scas
sub
dec
sub
sti
sbb
fstp
adc
cli
ja
add
adc
cs
xor
test
shr
dec
jp
sbb
retf
jl
dec
adc
push
test
push
mov
cld
push
inc
(bad)
mov
mov
adc
jle
pop
add
clflush
sub
movzx
dec
mov
daa
rol
add
(bad)
or
pop
ret
adc
das
mov
or
setne
xor
mov
and
add
int3
sbb
sbb
xlat
scas
adc
inc
lock
ins
mov
lea
add
cmp
mov
add
lock
js
inc
jns
jge
mov
mov
cmps
xor
lods
fs
mov
mov
cwde
fs
or
ins
xchg
adc
adc
push
ret
mov
mov
js
sub
mov
call
mov
ret
pop
lea
xlat
pop
mov
xor
sub
stos
outs
pop
je
or
es
gs
out
and
inc
ret
push
loopne
jl
mov
add
pop
out
inc
cwde
stos
cmps
fld
sbb
lock
jl
xor
push
pusha
scas
mov
outs
leave
or
or
xchg
jnp
add
das
push
jo
sbb
push
pop
sbb
cmp
pop
je
fidiv
jmp
push
sub
shl
mov
and
sbb
add
xor
pop
xlat
adc
fwait
popa
push
or
xchg
jmp
jae
inc
repz
movs
sbb
or
push
clc
imul
pop
ror
xor
je
and
test
sub
adc
test
ins
jle
cmp
mov
pop
and
fldenv
call
adc
mov
pushf
pop
jle
xchg
xlat
mov
xor
sbb
or
je
mov
hlt
inc
popf
mov
arpl
jne
xchg
mov
sub
or
loopne
shr
or
sbb
(bad)
sbb
dec
loope
inc
inc
mov
bound
cmps
in
sub
ins
imul
call
xchg
adc
pop
or
ja
ret
fistp
xor
dec
sbb
mov
mov
add
pop
loopne
inc
and
push
push
out
sub
mov
mov
ja
ret
mov
jbe
and
mov
lock
push
clc
mov
adc
retf
dec
stos
jae
add
imul
stos
adc
(bad)
push
aaa
inc
ins
mov
push
push
pushf
loope
shr
or
rcr
dec
rcr
out
mov
add
pop
xlat
sbb
adc
fsubr
and
inc
mov
test
retf
nop
inc
mov
es
mov
dec
test
cmps
dec
dec
or
std
xor
adc
cmp
test
add
or
fimul
xor
xchg
push
rcr
jge
push
ins
xor
cld
sbb
and
in
arpl
call
(bad)
icebp
mov
dec
mov
push
(bad)
mov
ficom
lock
add
loopne
shr
les
sub
cmp
mov
mov
cdq
add
in
lods
movzx
in
sti
loop
xchg
sbb
lock
popa
inc
arpl
pop
sub
arpl
outs
imul
ja
sub
or
sub
xchg
push
add
mov
sub
lods
jmp
adc
xchg
je
int
(bad)
jno
scas
mov
xor
icebp
push
jmp
mov
cmp
lds
adc
inc
jmp
ret
cmp
sub
bound
or
cmp
push
ja
mov
pop
push
push
push
(bad)
imul
cs
ja
pop
and
cmp
shr
mov
stc
stc
pop
movs
shl
mov
add
and
inc
retf
add
shl
jbe
dec
xor
and
retf
rol
call
sbb
les
(bad)
call
jne
jmp
mov
sbb
and
mov
test
aam
das
push
shl
fnsave
out
push
lods
cmp
pusha
fbld
mov
loope
sbb
outs
mov
aam
push
mov
outs
mov
ror
or
push
cmp
call
and
xchg
add
shl
bound
sbb
adc
cld
add
push
lea
mov
sahf
pushf
and
in
push
push
xchg
push
loope
iret
cmp
mov
add
sub
nop
sub
pop
nop
xchg
mov
test
jbe
sub
in
test
sub
jecxz
cwde
pop
daa
clc
mov
dec
push
mov
leave
dec
push
sbb
addr16
sahf
iret
call
sub
sub
clc
cmp
cs
lods
sub
cld
ins
test
je
mov
mov
mov
or
aaa
pusha
dec
sub
cmp
or
ret
or
in
inc
rol
pop
push
xlat
mov
mov
cmp
jmp
xchg
inc
mov
push
inc
lods
cmps
xchg
les
fcomp
dec
in
inc
sahf
inc
sbb
jae
into
xchg
pop
push
xor
dec
pop
xor
fmul
mov
mov
jge
inc
call
dec
push
push
xchg
es
(bad)
mov
movs
cmp
cdq
in
jne
cmp
cmp
daa
inc
into
or
sub
call
daa
fiadd
pop
xchg
inc
int3
fndisi(8087
sbb
movs
popa
push
sub
adc
pop
xor
int3
into
sub
movs
adc
mov
int
push
rcr
pop
inc
push
mov
sub
sub
mov
pop
pop
adc
sbb
push
nop
mov
xor
inc
mov
mov
add
test
cmp
mov
bound
ret
adc
dec
push
es
add
push
ins
dec
pop
ja
sbb
les
and
xor
in
aad
(bad)
aam
add
xor
push
push
inc
adc
jo
sbb
fs
push
pop
mov
cmp
mov
xchg
cmp
sub
or
and
jecxz
xchg
(bad)
push
repz
fild
add
jge
les
mov
mov
mov
adc
mov
pop
lea
ins
inc
xor
outs
mov
adc
stos
shr
fdivr
outs
lock
adc
fcom
aaa
adc
sbb
mov
or
mov
sub
out
test
int3
retf
mov
inc
adc
cmp
lods
and
push
and
out
lahf
dec
sub
jae
js
mov
(bad)
jmp
sub
rol
jmp
in
lock
loopne
add
add
movs
mov
into
mov
xor
imul
or
push
in
push
mov
sbb
mov
jne
or
mov
lock
call
mov
or
xchg
bound
sbb
or
sub
and
daa
add
sub
mov
sbb
push
ficomp
test
pushf
retf
xchg
sti
clc
(bad)
dec
dec
jle
or
adc
cli
dec
daa
xchg
cmps
sar
enter
sbb
adc
or
add
stos
add
sub
mov
inc
(bad)
fcomp
fidiv
aam
lds
mov
enter
shl
mov
mov
fsubr
or
pop
xor
out
mov
adc
xchg
stos
and
push
xchg
or
and
inc
es
ins
or
pusha
ja
and
mov
call
or
(bad)
xlat
fisubr
sbb
js
ja
push
adc
mov
adc
push
inc
sbb
shl
push
les
es
xlat
int3
sbb
push
jo
sub
inc
sub
out
dec
mov
push
pop
push
movs
pop
xlat
je
cmp
or
xor
add
and
mov
add
inc
push
mov
mov
mov
and
or
jl
inc
lods
pushw
mov
add
inc
movs
jg
fistp
mov
adc
xchg
sbb
mov
mov
mov
nop
mov
bound
cwde
add
into
aaa
mov
outs
popa
add
adc
or
ror
add
cs
retf
mov
(bad)
inc
push
inc
xor
enter
and
fwait
mov
fnstsw
mov
lods
mov
jnp
mov
fidivr
(bad)
and
xor
les
push
sbb
pop
push
pop
or
lock
rol
add
(bad)
jb
pop
push
inc
xchg
inc
push
mov
jp
lea
xchg
jo
jmp
jge
test
dec
push
ins
pusha
add
cld
loopne
adc
jmp
mov
mov
pop
xor
pop
sbb
xor
bound
adc
mov
mov
mov
pop
loope
sbb
mov
jne
push
sbb
fnsave
push
cmp
add
xor
adc
xchg
add
mov
loopne
adc
add
sub
jp
pop
movs
sbb
dec
cmp
test
scas
in
xor
sub
mov
push
sbb
arpl
mov
hlt
adc
sub
push
rol
lea
adc
or
sbb
outs
je
ror
dec
xor
add
add
fwait
ins
pushf
scas
add
sbb
inc
jp
inc
lods
jae
ret
mov
dec
add
or
xchg
or
jne
je
sahf
or
mov
adc
dec
sub
add
mov
sbb
rcl
fimul
or
ja
push
push
cld
inc
or
test
lds
cli
cmp
add
xchg
sub
shl
adc
adc
das
inc
push
sub
add
nop
xor
adc
jnp
mov
or
jp
or
outs
mov
inc
add
and
push
lahf
cmp
xchg
cmp
out
cmp
add
cmp
out
and
in
aam
pop
and
mov
mov
inc
pop
xchg
inc
iret
push
jo
dec
sub
dec
das
jp
or
loopne
mov
ins
add
outs
shl
fmul
push
jbe
inc
shl
(bad)
femms
jle
pop
cmc
or
(bad)
mov
call
mov
pop
xor
iret
in
inc
sbb
stos
cmc
xor
adc
loopne
mov
pop
or
dec
pop
pop
test
lods
inc
xor
call
adc
shl
not
bound
sbb
mov
mov
push
fwait
rol
jp
jg
ror
inc
dec
call
aaa
outs
jae
and
jae
lock
add
repnz
fwait
mov
scas
psubsb
mov
ror
add
push
jo
int3
popa
daa
(bad)
cmc
or
das
mov
sbb
add
fisttp
lods
and
xchg
enter
pop
xor
jo
mov
aad
dec
xor
add
or
mov
(bad)
push
add
and
jbe
dec
sub
hlt
movs
in
dec
xchg
sub
jl
pop
push
rol
jmp
adc
je
inc
lock
jmp
cmp
loope
js
jmp
inc
cmps
(bad)
dec
cmp
jg
xchg
jl
(bad)
es
test
clc
pop
mov
div
out
mov
mov
pop
mov
adc
jl
arpl
scas
js
adc
shl
movs
aad
xor
shr
pop
push
and
out
mov
add
mov
lock
pop
mov
jmp
sbb
ins
xlat
adc
dec
mov
mov
popa
mov
pop
(bad)
sub
sub
jg
lds
jbe
lea
or
cmp
cmp
pop
cmp
test
inc
inc
fwait
bound
pop
lods
fwait
in
cmp
in
jl
pcmpeqw
cmp
loope
mov
in
mov
or
xchg
fadd
cmps
sar
daa
or
cwde
loopne
dec
jg
and
jae
adc
fld
fsub
and
fstp
fwait
stc
repz
adc
add
loopne
cmovb
add
xchg
mov
mov
mov
fdiv
test
add
mov
je
adc
dec
inc
or
inc
pop
inc
iret
mov
lea
call
inc
adc
scas
adc
mov
push
pop
mov
ss
adc
xor
mov
fmul
mov
jecxz
add
mov
and
mov
in
loop
mov
lea
mov
mov
inc
mov
ret
pop
nop
cmp
cmc
mov
das
jmp
ins
mov
or
and
jle
lea
fimul
cmp
stos
push
sbb
dec
pop
outs
retf
mov
jo
adc
pop
xchg
push
push
or
xor
cld
xor
cmp
xchg
repz
mov
mov
ins
and
ins
neg
aaa
adc
fcomp
test
mov
fstsw
sahf
jae
push
add
(bad)
and
mov
retf
shr
jl
test
push
or
push
sbb
sbb
imul
cmp
and
push
jecxz
cmp
cmp
jb
ret
xor
aaa
ds
cmp
aas
or
ds
(bad)
dec
jns
int
push
dec
data16
ds
cs
pop
inc
dec
cli
and
and
cmp
inc
sbb
nop
mov
and
daa
cmps
fs
std
(bad)
mov
jg
push
enter
jg
sti
imul
retf
cs
sbb
fidiv
dec
inc
dec
dec
or
push
mov
es
sub
imul
sub
cmps
xchg
dec
pop
jnp
or
lods
jg
and
push
sub
push
pop
test
neg
xchg
dec
iret
aas
fimul
out
stc
mov
jg
clc
inc
lods
inc
int3
xchg
add
clc
or
fst
mov
repz
add
cmps
pop
sub
dec
pop
dec
div
or
not
sti
ds
sub
adc
jnp
mov
or
sti
data16
not
sub
push
adc
dec
lea
adc
daa
or
adc
inc
cmp
and
sub
es
mov
sbb
sbb
nop
cmp
daa
fcomp
cmp
in
mov
inc
sbb
mov
adc
das
pop
ror
cmp
mov
arpl
and
test
movs
xor
add
mov
imul
(bad)
jbe
pusha
(bad)
xor
sbb
mov
sub
in
push
cs
push
pushf
mov
mov
les
mov
outs
and
jno
adc
in
push
pop
xchg
xchg
dec
jb
(bad)
fadd
fnsave
icebp
add
pop
stc
xor
inc
dec
xchg
cmp
test
and
sub
cmp
(bad)
dec
outs
xor
aam
add
dec
fsub
add
pop
dec
jle
jne
lock
mov
push
mov
add
jo
inc
fadd
inc
loopne
aam
mov
mov
inc
in
cmp
rol
pop
out
loopne
lock
das
cld
addr16
(bad)
mov
outs
jb
movzx
(bad)
les
and
ins
or
or
retf
xor
pop
mov
add
or
fisttp
or
sbb
and
or
js
pop
scas
ins
push
cmp
and
cs
pop
fwait
ss
jmp
or
pop
ds
mov
mov
ret
jne
sar
dec
cmp
sbb
fwait
mov
mov
ror
cmps
sub
inc
aaa
xor
mov
scas
pop
pop
ins
xor
mov
es
sub
mov
movs
lahf
ins
imul
mov
mov
(bad)
fsub
fabs
fld
pop
ins
test
fldcw
jbe
mov
push
(bad)
movs
daa
cmp
fwait
or
inc
jo
stos
xor
xor
or
xchg
rcl
retf
lds
xchg
lods
xor
xor
ror
es
mov
lahf
mov
inc
or
inc
cs
sub
add
inc
mov
cmp
pop
pop
cmp
int3
xchg
add
inc
loopne
ins
sbb
jnp
or
call
cmp
pop
sub
ret
inc
jo
nop
scas
jo
add
imul
dec
outs
aas
in
mov
xchg
ret
inc
clc
push
push
push
sub
call
jg
sub
sub
mov
push
adc
xlat
pop
jae
(bad)
lds
movs
adc
ror
and
xor
inc
xchg
(bad)
mov
and
iret
adc
sbb
add
cmps
xchg
cmp
mov
dec
add
push
inc
jno
ss
inc
lock
or
shl
das
dec
(bad)
adc
cs
cmps
add
loop
pop
aas
xchg
mov
ins
push
loopne
mov
push
jno
ds
cld
add
hlt
mov
cli
popa
sub
add
mov
fadd
mov
je
push
pushf
xor
jmp
dec
pushf
sbb
fnsave
fidivr
jne
mov
sub
add
sbb
fst
xchg
pop
enter
popa
sub
imul
push
and
sub
jne
xlat
cmc
jne
cld
xor
and
je
mov
test
pop
sub
test
adc
rcl
pop
mov
dec
xchg
pusha
xchg
mov
jo
test
inc
xchg
cmc
add
rcr
cdq
cmc
test
add
cwde
mov
xlat
xchg
push
mov
or
sub
pop
out
gs
xchg
out
jb
add
and
sbb
pop
adc
mov
push
sti
cmp
cmp
push
mov
clc
sbb
cmps
jl
push
out
in
xchg
mov
out
lahf
xor
xor
mov
dec
or
xchg
call
xor
sbb
pop
inc
or
jl
inc
xor
sub
mov
fdivr
and
fdiv
loopne
movs
push
jnp
cmp
cli
push
loopne
inc
jnp
add
test
push
mov
sbb
pop
adc
imul
sub
jge
push
aaa
jo
loopne
lock
sub
inc
fdivr
movs
out
in
push
fsub
test
popa
aaa
xchg
stos
xchg
aaa
outs
sbb
js
pushw
adc
or
mov
scas
test
sub
aaa
inc
cmp
and
xchg
or
or
add
or
xor
push
fs
push
jns
or
mov
imul
pop
or
ds
rcl
(bad)
dec
inc
mov
and
imul
mov
(bad)
out
xchg
pop
cs
das
sub
fmul
pop
add
sbb
rol
out
bound
aad
sar
inc
ins
retf
leave
dec
call
cld
jno
aaa
or
mov
cmp
sbb
or
mov
push
pop
sar
aaa
dec
or
pop
fcomp
pop
or
mov
mov
bound
mov
jecxz
add
push
xor
call
js
mov
sub
inc
mov
addr16
xchg
rcl
inc
cmp
loopne
sbb
shr
neg
jmp
sbb
(bad)
test
or
push
(bad)
dec
xor
push
or
sub
fstp
mov
cmc
dec
lea
popf
popa
ret
and
or
test
mov
sbb
lock
hlt
mov
jle
and
adc
inc
adc
or
cs
int3
push
inc
xor
pop
aaa
mov
or
sub
cli
inc
mov
and
add
jmp
inc
int3
add
add
lock
ja
cmps
les
or
fwait
inc
jmp
inc
adc
dec
loopne
jne
repz
adc
scas
dec
loopne
jbe
fadd
push
scas
sbb
mov
or
mov
rcr
cmps
aaa
xor
jecxz
xlat
xor
push
sti
in
call
mov
loopne
rcl
pusha
test
inc
dec
je
push
jne
aam
pop
das
pop
adc
or
iret
adc
xor
cwde
or
sub
push
sbb
rcr
push
popf
sar
dec
mov
clc
(bad)
jle
inc
mov
mov
ins
shl
shl
retf
add
fild
jmp
(bad)
leave
jg
inc
jo
and
add
daa
push
mov
add
or
or
or
mov
or
or
mov
rcr
cmc
out
mov
add
movzx
in
rol
push
push
pop
dec
fadd
jnp
mov
fadd
ror
mov
aaa
(bad)
clc
jge
add
adc
jo
dec
(bad)
xor
add
fsub
jl
mov
sbb
data16
dec
push
movs
movs
pop
push
jo
imul
mov
es
push
mov
push
mov
mov
scas
in
neg
imul
mov
push
(bad)
sti
idiv
inc
pop
fs
arpl
rol
xor
and
jns
ins
push
sbb
ret
mov
fstp
sub
adc
es
push
call
neg
out
sub
hlt
inc
call
fcmovbe
push
sahf
mov
daa
lock
adc
push
cwde
ss
xor
inc
(bad)
ins
push
add
mov
push
hlt
lods
mov
push
(bad)
loopne
adc
pop
add
pop
pop
sti
inc
or
push
push
push
push
gs
add
pop
and
lds
(bad)
jl
inc
sub
sub
shr
inc
mov
pop
pop
inc
test
sub
test
(bad)
call
dec
outs
inc
jb
popa
je
push
outs
jae
push
je
ins
enter
out
inc
inc
pop
sub
inc
outs
outs
gs
imul
call
or
pop
pop
sub
mov
ins
ins
popa
outs
fs
movs
adc
or
inc
cmp
or
mov
les
int3
add
add
fild
outs
xchg
ins
(bad)
nop
arpl
adc
cmp
in
ins
in
pop
dec
lock
cvtps2pd
je
fcmovne
popf
movs
push
adc
jnp
jns
std
adc
add
mov
test
iret
push
xlat
(bad)
fcmovnb
repz
(bad)
dec
add
dec
sti
xor
stc
inc
mov
mov
and
into
xlat
adc
add
cmp
ds
dec
mov
(bad)
xchg
add
ficom
add
push
outs
mov
fsub
inc
push
add
jne
cmp
cli
push
outs
and
jge
cld
and
xchg
inc
je
aad
dec
(bad)
mov
cmp
pop
xchg
inc
inc
push
pshufw
dec
popa
arpl
pop
mov
mov
xor
or
dec
bound
loopne
lds
adc
cwde
add
or
fcomp
data16
sub
dec
push
dec
ins
gs
mov
jo
gs
outs
mov
dec
inc
push
dec
dec
add
inc
add
(bad)
jae
add
jo
jb
jae
jbe
xor
and
xor
sysret
dec
push
fs
and
and
test
lea
add
js
rcl
aas
jnp
dec
dec
in
pop
cvtps2pd
xchg
hlt
mov
adc
imul
repz
jp
loope
jmp
cmc
rcr
and
ds
dec
and
push
add
cmp
cmp
add
push
cmp
lods
jmp
lahf
mov
add
sahf
call
jbe
je
dec
push
cs
push
(bad)
mov
(bad)
cmp
push
inc
rcl
adc
imul
cli
or
sub
lods
jae
jno
jle
scas
pop
js
mov
inc
jg
xor
or
sbb
adc
mov
xor
(bad)
lods
push
pop
(bad)
pusha
mov
and
fiadd
mov
inc
cmps
cdq
rcl
jb
or
xor
movs
outs
pop
cmp
add
fwait
mov
sbb
or
paddusb
in
xchg
cmp
push
out
sahf
out
xor
or
test
xchg
std
dec
popa
ret
pop
loope
inc
cmp
cdq
aam
popa
push
cwde
xchg
mov
pop
pop
push
inc
dec
es
add
mov
es
push
add
sbb
pop
aam
cmp
jo
jae
cmc
mov
xchg
scas
ja
mov
(bad)
mov
dec
cs
cmp
sub
push
jb
or
and
and
cmp
mov
popa
or
pusha
add
mov
xchg
xchg
or
pop
pop
jle
and
mov
pop
adc
adc
iret
fdivp
icebp
adc
pop
cmovbe
mov
fcmovne
sahf
inc
mov
lahf
jl
mov
aaa
rcl
in
daa
daa
daa
and
pop
lahf
in
jbe
es
jg
lahf
scas
pushf
iret
fcmovne
test
fwait
dec
pop
xchg
pop
xor
cdq
cdq
mov
das
sbb
test
pop
sbb
sbb
loopne
push
enter
mov
sbb
dec
jge
repz
out
xchg
xchg
ins
jne
dec
jns
jnp
xchg
lahf
fwait
push
mov
jns
out
ret
retf
rcr
mov
jmp
sti
add
out
sahf
out
adc
and
xor
inc
dec
push
pop
arpl
out
imul
fisttp
aaa
inc
aaa
lods
add
xchg
cwde
xchg
cs
dec
mov
add
pop
shl
add
ins
sub
jl
push
loopne
es
add
imul
sbb
push
cli
daa
push
bound
and
xchg
jo
scas
imul
pop
rdpmc
out
mov
fmul
dec
outs
outs
push
and
ret
push
or
popa
ja
cmp
xchg
jno
inc
inc
jne
je
ins
xor
lods
aad
mov
mov
pavgw
stos
cmps
test
xor
jns
es
push
mov
sbb
push
or
ror
stos
rol
xor
inc
aad
adc
popa
push
sbb
add
movs
sub
add
inc
jne
sbb
jb
mov
pop
jb
push
mov
scas
(bad)
pop
mov
mov
into
rol
rcr
pop
fxrstor
aam
adc
jmp
fild
shld
inc
fincstp
fisubr
dec
das
push
pop
mov
nop
movs
lock
mov
mov
ins
dec
shld
pop
jo
jo
pop
nop
jnp
jo
pop
nop
call
loopne
pusha
pop
pop
push
pop
jp
mov
pop
add
pop
push
lahf
lahf
add
scas
pop
add
pop
push
add
mov
or
push
pop
push
aaa
rcr
pop
push
pop
push
pop
fiadd
outs
sbb
push
fild
push
mov
pop
mov
imul
adc
jge
rcr
inc
outs
push
jns
sar
pop
sbb
das
sub
mov
cmp
push
jns
out
pop
arpl
jnp
jns
out
mov
jns
stos
mov
ret
retf
sar
out
fninit
jmp
sti
out
loopne
out
add
or
adc
push
add
or
sahf
out
push
adc
and
out
sahf
xchg
fwait
mov
sahf
out
ret
retf
rcr
jecxz
add
mov
sub
add
or
call
out
popf
mov
xor
cwde
mov
xlat
jbe
les
push
add
and
push
pop
ror
(bad)
push
push
push
daa
inc
push
or
mov
and
dec
add
ret
stos
in
or
pop
jecxz
ret
pop
push
mov
jmp
pop
and
jns
xchg
cmovbe
adc
add
out
add
sub
adc
mov
push
dec
inc
add
jae
inc
push
adc
test
dec
and
shl
lock
or
sub
imul
test
rcl
and
shl
test
jae
inc
pop
jb
jns
add
inc
pop
ror
add
popf
sahf
xchg
xchg
cmps
mov
xchg
loop
adc
out
mov
lea
(bad)
js
adc
push
imul
pop
pop
mov
push
pop
fdivr
fiadd
mov
cmps
(bad)
into
pop
cmps
shr
into
pop
push
mov
mov
sub
mov
pavgb
jo
ds
xadd
loopne
ds
ds
add
pop
ds
sysret
ins
out
cmp
scas
ds
sub
lahf
fistp
aas
scas
ja
cmp
(bad)
pop
fiadd
into
cmp
ds
js
cmp
ds
ds
loopne
lock
pop
ds
and
ds
ds
out
or
pop
add
into
add
adc
ds
jbe
push
sbb
cmp
dec
dec
push
iret
repz
push
push
pop
arpl
cmp
repz
or
repz
iret
repz
retf
rcr
jecxz
repz
mov
jns
cmp
(bad)
xor
cmp
mov
cs
push
fwait
mov
stos
mov
ret
retf
sar
repz
jecxz
repz
into
repz
push
adc
and
jne
add
out
mov
cmps
movs
mov
inc
mov
mov
jg
movs
jg
ss
mov
jp
push
sbb
lock
es
jae
in
fadd
add
cmp
pop
scas
push
bound
push
out
push
pusha
mov
(bad)
rol
push
vmread
inc
or
add
je
and
(bad)
ins
hlt
adc
or
and
inc
and
add
mov
xchg
mov
mov
jbe
add
xor
mov
push
mov
popa
adc
pusha
xor
fbld
inc
xor
loopne
and
add
aaa
(bad)
adc
sub
pop
sub
fcmove
movs
xchg
pop
je
bound
mov
ss
cmp
repz
xchg
jno
scas
mov
ret
lahf
cmps
xchg
push
jg
outs
sub
cs
xchg
test
ins
pop
mov
inc
stos
inc
out
test
(bad)
in
lahf
div
js
rol
pop
idiv
add
fdiv
mov
daa
mov
add
rcl
jne
mov
xor
inc
push
stos
xor
clc
arpl
fs
jb
ss
(bad)
rcr
cmc
or
cmovp
ret
fist
mov
out
jno
enter
push
fsubr
out
call
cmp
jle
inc
xor
fsub
mov
call
pop
jno
sub
pop
mov
xor
xchg
push
and
push
cmps
push
pushf
and
repz
(bad)
fmul
add
rol
outs
ins
es
sbb
outs
test
outs
rol
fcmovbe
xchg
fcomp
mov
pop
sbb
cmp
scas
adc
cmp
int3
and
add
and
adc
je
fs
or
add
sbb
clc
in
xlat
cli
shl
dec
retf
xor
dec
jo
or
nop
or
fcmovbe
jmp
adc
xchg
push
pop
xchg
inc
adc
mov
fmul
or
iret
test
mov
aad
jne
ja
mov
mov
lods
ficom
out
pop
cmovg
sahf
punpckhbw
or
setbe
dec
adc
fstp
ja
push
jne
jg
mov
out
sahf
out
in
retf
rcr
ret
xchg
fwait
mov
jns
add
(bad)
cld
(bad)
(bad)
cmp
mov
loope
xchg
sbb
adc
jmp
adc
pop
pop
xchg
jo
loope
inc
sahf
movs
arpl
enter
aaa
call
test
pop
jg
fisubr
or
clc
pop
push
cmp
jbe
mov
sbb
jle
add
in
bound
scas
mov
xchg
add
outs
loopne
add
add
es
movs
mov
in
xor
xor
mov
fst
xor
out
sub
cmovbe
mov
inc
dec
pushf
xchg
xchg
jb
mov
test
imul
mov
test
mov
or
jmp
sub
mov
pop
sub
push
jmp
cmp
jmp
fisttp
jmp
scas
push
inc
cmp
jecxz
mov
add
lds
loop
sub
jl
retf
cwde
les
(bad)
push
inc
(bad)
daa
pop
outs
jnp
pop
and
and
cli
aam
add
mov
add
xchg
cmp
lock
call
das
mov
dec
sub
pop
sbb
add
mov
arpl
push
push
xor
cmps
jns
out
mov
pop
outs
out
sahf
out
jg
(bad)
xchg
loopne
cs
lahf
daa
enter
inc
(bad)
into
mov
jmp
cmp
xchg
scas
ds
add
sub
(bad)
js
push
test
pop
fstp
pop
adc
push
ret
and
loopne
daa
xor
pop
(bad)
pop
inc
add
add
jo
cmp
(bad)
cld
mov
mov
jl
scas
and
shr
mov
aaa
mov
sub
or
clc
jns
adc
je
out
jp
scas
cmc
call
cmps
cmc
je
inc
push
ret
pusha
add
push
(bad)
enter
loopne
cld
(bad)
call
add
push
ss
rcl
(bad)
or
dec
adc
add
bound
leave
aam
pop
mov
and
ror
and
dec
and
pop
jae
adc
fxrstor
mov
in
add
repz
xchg
jno
iret
repz
push
mov
(bad)
xchg
fwait
cmp
repz
stos
jnp
mov
outs
sub
aam
rcr
rol
xchg
dec
xchg
xchg
sbb
call
mov
lods
addr16
mov
cmp
add
hlt
push
daa
inc
dec
paddusb
push
add
or
retf
xor
addr16
push
std
add
jne
push
shl
push
add
dec
jg
push
add
cs
and
mov
imul
push
rcr
mov
sbb
rol
jb
mov
shl
push
add
pop
mov
inc
mov
imul
sub
push
lods
push
arpl
jecxz
jmp
jno
sub
push
push
inc
inc
dec
iret
jo
mov
cwde
push
iret
xor
xlat
mov
and
mov
fidivr
jns
lods
mov
push
mov
fdivp
push
hlt
adc
dec
push
and
sub
hlt
sub
out
inc
call
push
mov
imul
or
inc
pop
cwde
cmp
adc
and
jno
mov
sub
movs
ret
or
push
adc
mov
or
ja
mov
test
pop
out
sahf
adc
cmp
(bad)
bound
fisubr
jae
fisttp
lock
pop
(bad)
or
outs
jne
int
ret
pop
xadd
xor
ds
js
dec
loopne
scas
outs
push
pinsrw
outs
pop
dec
add
jge
fnsave
push
(bad)
jo
mov
lods
cwde
sbb
adc
cmp
adc
in
test
repz
in
mov
sbb
repz
and
xor
inc
dec
cmp
repz
pop
arpl
repz
repz
mov
iret
mov
stos
je
add
jge
(bad)
stc
loop
jmp
into
sbb
(bad)
lock
adc
add
add
sub
push
add
call
xchg
xor
push
add
push
add
mov
xchg
add
mov
inc
or
mov
add
out
inc
test
and
xchg
lea
mov
adc
loopne
mov
or
inc
shr
mov
dec
outs
add
push
jno
xor
test
xor
imul
cmp
js
jne
xor
out
pusha
(bad)
inc
movhps
mov
rcl
jmp
jo
enter
push
sbb
jmp
add
or
in
(bad)
rcl
pop
cmc
jne
mov
popf
inc
mov
cmp
inc
mov
mov
fsubr
mov
mov
cvtdq2ps
outs
repz
sub
aaa
push
inc
sbb
cmp
outs
dec
pushf
lahf
inc
add
cs
xchg
jb
mov
call
add
nop
ss
xchg
mov
inc
jo
movs
add
jmp
arpl
add
adc
and
and
dec
push
mov
pushf
pop
cli
dec
xor
inc
push
push
add
push
cmp
pop
adc
aas
dec
dec
in
fwait
adc
jno
mov
xor
push
mov
jnp
jmp
stc
push
cld
lods
lds
aas
ficom
cmp
(bad)
aas
pop
adc
data16
fmul
scas
jge
fistp
je
push
xchg
test
mov
push
nop
push
cwde
cmp
repz
mov
or
shl
retf
and
dec
(bad)
not
xor
and
or
(bad)
push
mov
pavgw
ror
cdq
xor
ret
call
mov
(bad)
cmovg
hlt
and
into
xor
xor
xor
mov
int3
pop
les
jnp
pop
pop
fisub
sbb
psrlw
icebp
dec
fcomp
das
into
aam
into
pop
(bad)
loope
scas
pop
mov
or
shr
xor
and
bswap
cwde
retf
fimul
sbb
shr
pop
outs
rcl
adc
ret
jns
into
scas
inc
jg
mov
call
cmp
out
mov
mov
out
rcr
jecxz
repz
out
out
add
push
adc
and
jne
jns
xchg
ss
push
aas
push
or
push
notrack
pop
inc
jno
pop
or
jne
push
add
sub
inc
pop
push
ja
fstp
mov
push
pusha
je
les
add
mov
xlat
(bad)
jp
inc
add
cmp
lods
dec
pop
loop
rcr
outs
cdq
rol
daa
inc
arpl
or
xchg
add
(bad)
jecxz
cmps
pop
pop
inc
push
fsubr
adc
shr
outs
je
xor
addr16
fisub
add
mov
arpl
mov
sub
arpl
int
pop
out
sub
and
adc
pop
push
adc
lea
lahf
adc
bound
xchg
inc
inc
push
gs
add
ins
pop
xlat
pop
or
add
jmp
add
adc
je
ds
neg
push
xchg
stos
das
mov
and
add
cmp
mov
cwde
mov
add
push
push
mov
dec
or
or
mov
pusha
add
add
xchg
and
imul
movs
dec
(bad)
sbb
add
pop
outs
outs
ins
dec
or
icebp
cld
mov
xor
pop
(bad)
adc
jbe
mov
(bad)
pop
inc
add
cs
mov
ret
nop/reserved
pop
test
cmp
push
add
(bad)
fwait
dec
aas
test
aam
call
jo
mov
popa
cmp
inc
mov
jns
out
mov
jns
imul
mov
fsubr
dec
ins
inc
jno
mov
mov
push
aam
lock
popf
pop
mov
sar
add
jns
fmul
push
daa
jmp
and
stos
lahf
jb
test
retf
mov
arpl
or
sub
cmp
int3
push
idiv
and
xor
(bad)
sbb
mov
xor
push
and
xor
arpl
sub
repnz
pusha
mov
push
nop
mov
and
inc
rol
and
or
xor
(bad)
iret
movs
and
sbb
loopne
mov
dec
jp
repz
xchg
push
pop
cmp
lods
mov
cs
cvtps2pd
push
add
jnp
push
adc
add
push
xor
jecxz
xlat
xchg
add
adc
push
pop
jae
cmp
scas
inc
jb
mov
in
inc
ret
push
jno
cwde
inc
into
xor
lock
cmp
in
aaa
es
inc
shl
mov
or
and
retf
stos
inc
movs
imul
or
pop
jge
push
icebp
mov
cmp
popf
out
jge
in
jbe
add
xchg
pop
int3
sbb
pop
pushf
or
(bad)
inc
pop
inc
mov
xor
sub
pop
popf
pop
or
and
push
pop
call
xchg
push
pop
adc
push
cwde
push
shl
xor
inc
sub
and
cmp
push
int3
hlt
lods
mov
push
cmp
cmps
jge
adc
pop
mov
mov
and
xchg
and
mov
fdiv
cmp
movd
push
popa
jno
push
cmp
loopne
inc
push
pop
ja
dec
push
cmp
cli
les
scas
mov
stos
mov
adc
mov
adc
sbb
out
cmc
imul
movzx
sahf
lfs
aas
ror
daa
ret
push
aas
mov
or
(bad)
(bad)
lods
push
arpl
mov
sahf
sbb
in
lods
enter
(bad)
pop
(bad)
faddp
(bad)
out
mov
dec
xor
neg
pop
scas
mov
out
pop
jg
push
lahf
or
(bad)
aas
cs
les
adc
push
fiadd
out
or
aam
push
cmp
sbb
push
mov
iret
repz
mov
ret
retf
ror
repz
fninit
jmp
sti
add
cmp
jnp
or
adc
and
cmp
cmp
inc
dec
push
push
pop
repz
repz
jnp
push
loope
iret
mov
mov
dec
push
(bad)
push
fcom
or
mov
out
adc
es
and
add
int3
sbb
push
add
push
retf
lock
pop
lods
sub
dec
adc
add
push
sub
add
xlat
mov
imul
push
push
sub
adc
push
mov
popa
std
cs
mov
or
(bad)
cmps
rcl
cwde
mov
popf
push
aad
mov
outs
inc
cmp
jmp
mov
mov
(bad)
xor
aaa
adc
push
enter
push
xor
mov
and
add
adc
or
push
or
cmp
call
adc
xchg
jp
cs
and
adc
jecxz
punpckhdq
and
sbb
scas
cmp
clc
or
gs
add
fmul
xor
mov
push
dec
imul
mov
inc
push
hlt
lock
sbb
test
jmp
xchg
pop
add
push
das
pop
inc
and
loop
aam
push
push
or
or
mov
retf
mov
cmps
mov
mov
ja
jb
xchg
or
xchg
fs
rol
dec
xor
pushf
lods
rol
(bad)
nop
bswap
mov
(bad)
and
lds
or
inc
sahf
out
aas
adc
in
out
push
stc
(bad)
push
out
aad
jmp
das
push
dec
stos
cs
dec
push
pop
in
mov
push
and
add
add
add
xor
fsub
xlat
sub
test
lock
push
xor
imul
add
adc
int
inc
mov
xor
push
mov
or
neg
gs
aad
int3
and
add
and
(bad)
pop
sub
outs
add
addr16
push
out
or
popa
add
cmp
push
inc
jb
popa
jns
test
pusha
adc
cmp
pusha
fsub
add
push
push
jns
aad
cmp
xchg
fmul
outs
pop
push
punpckldq
push
xor
pop
pop
lods
xchg
fimul
inc
outs
jne
cmps
je
mov
inc
cwde
stos
sub
loopne
and
dec
outs
jp
and
adc
aam
or
jae
xchg
cmc
addr16
sub
sbb
fisubr
inc
imul
arpl
or
push
jae
pop
mov
xor
jae
or
add
or
dec
lods
or
add
pop
jne
fdivr
add
mov
loopne
dec
add
mov
loopne
mov
push
or
xchg
inc
cli
jo
daa
popf
push
dec
push
sbb
test
mov
mov
in
dec
ror
in
sub
mov
or
mov
std
loopne
pop
xor
push
jbe
test
dec
inc
adc
(bad)
jg
popa
xchg
stos
and
inc
out
(bad)
push
mov
mov
fst
xor
nop
fld
jne
fld
mov
fild
pushf
ror
or
scas
test
push
daa
lods
add
add
push
repnz
in
adc
pop
xlat
loopne
sub
lahf
movq
pop
push
mov
(bad)
dec
inc
or
jno
jno
and
jns
jo
jae
add
cmp
js
push
popaw
jne
div
or
test
mov
sar
dec
outs
or
daa
rcl
shl
sbb
jb
push
pop
ret
or
or
mov
sub
mov
add
and
push
adc
mov
add
fld
mov
mov
les
inc
push
mov
(bad)
scas
sbb
sbb
sbb
and
iret
in
jae
loopne
test
outs
mov
outs
je
sbb
es
adc
lds
dec
add
mov
xchg
or
pop
sub
hlt
xor
jo
movs
adc
popf
mov
add
or
ret
fwait
popf
sbb
cmps
mov
(bad)
pop
push
das
rcl
outs
push
outs
add
loopne
pop
xchg
push
pop
nop
xchg
scas
ret
cmp
in
fild
sbb
icebp
xor
sbb
js
daa
fwait
lea
sbb
dec
jo
xchg
(bad)
xlat
pop
xor
jecxz
jo
lea
sbb
push
jbe
dec
inc
sub
das
dec
pop
or
xor
les
fild
les
jbe
add
add
push
or
sbb
fnstcw
mov
outs
je
out
add
cmp
or
jno
movs
imul
mov
xlat
or
inc
js
push
pop
call
dec
cwde
push
loope
arpl
adc
adc
cmp
test
sbb
xor
jecxz
xlat
and
or
out
or
or
push
shl
je
adc
jns
jg
pop
push
sub
sbb
in
inc
xchg
pusha
out
pop
jbe
dec
out
pop
add
xchg
mov
es
das
or
or
pop
shl
out
(bad)
loop
dec
hlt
push
dec
out
out
jecxz
add
push
xlat
loop
mov
xlat
mov
xlat
add
cmp
inc
out
sub
adc
out
push
or
test
loope
and
shr
adc
test
add
jns
xchg
jge
ins
xchg
inc
xchg
cmp
in
inc
push
add
push
add
xchg
push
in
mov
sbb
aaa
jo
jb
jnp
loopne
aaa
xchg
imul
push
mov
aaa
jnp
shl
xlat
cmc
pop
mov
aaa
inc
or
or
cmp
sub
(bad)
hlt
je
jns
cmp
or
xchg
arpl
xchg
mov
jmp
xchg
aaa
shl
fcom
and
add
mov
scas
xlat
int
sub
aas
test
out
inc
icebp
fisub
or
push
or
pop
out
mov
or
scas
or
(bad)
push
aas
mov
push
scas
inc
inc
adc
or
push
adc
out
pop
test
inc
jmp
stc
add
in
xor
inc
xor
mov
neg
dec
shl
mov
out
dec
test
pop
dec
jae
les
cwde
pop
or
mov
fild
pop
push
dec
hlt
xor
adc
dec
pusha
not
push
jbe
push
push
add
mov
outs
fisttp
dec
inc
xlat
dec
and
mov
cmp
push
add
or
pop
dec
shl
mov
add
cmp
stos
mov
in
ins
js
add
sub
dec
lds
cs
add
out
adc
outs
out
loopne
and
cs
icebp
das
(bad)
fwait
or
xchg
pushf
push
addr16
pop
cmp
out
(bad)
jmp
repz
sbb
push
or
out
loopne
push
setno
popa
add
std
xor
rol
sub
or
fild
shl
repz
aaa
push
inc
inc
jb
jge
xchg
ja
push
push
adc
xchg
rcr
dec
fist
js
xor
jbe
call
in
or
jmp
xor
or
and
leave
enter
dec
cmp
mov
push
repnz
(bad)
cmps
jno
movs
out
sahf
jb
jb
ss
(bad)
scas
mov
xchg
ins
push
pop
cdq
push
push
ret
movs
or
push
fsub
xor
inc
ret
mov
push
(bad)
or
popa
sbb
sub
xchg
out
jo
or
jno
xchg
xchg
aaa
push
mov
xchg
sub
mov
xchg
cmp
lea
push
mov
add
cmp
or
push
or
or
inc
xchg
fwait
add
add
popa
jg
add
fs
loope
sbb
icebp
es
pop
retfw
or
xor
enter
inc
add
cwde
push
fldenv
adc
rol
or
adc
inc
repz
repz
lock
or
mov
add
adc
sub
jl
and
push
ins
(bad)
arpl
push
sub
inc
inc
add
mov
pop
mov
and
pop
dec
add
mov
or
out
call
xor
adc
outs
jae
pop
adc
cmp
jo
or
xchg
jae
jb
push
add
cwde
xor
add
adc
and
sub
push
xor
add
xor
add
mov
dec
jbe
sbb
jge
jge
pusha
adc
sbb
add
push
sbb
pop
add
shl
cmc
push
mov
cmp
adc
adc
mov
rol
inc
inc
xor
cmp
(bad)
jae
dec
and
pusha
cmp
adc
bound
pop
inc
or
dec
int3
dec
test
inc
dec
or
push
push
mov
mov
call
pop
ret
mov
mov
mov
mov
push
push
mov
sbb
mov
push
push
or
(bad)
fisttp
push
inc
mov
mov
call
pop
ret
int3
mov
xchg
mov
mov
lahf
jnp
lock
xchg
inc
push
or
cld
and
mov
pand
fild
jne
test
jle
adc
ret
hlt
mov
mov
jp
dec
dec
dec
popa
outs
mov
dec
sbb
push
dec
dec
jo
or
xchg
add
inc
mov
and
pushf
push
add
and
inc
adc
sub
out
and
test
adc
pop
loope
out
out
pop
int3
ret
jns
rcr
arpl
ins
push
jg
ret
add
push
add
jbe
inc
lock
add
push
mov
add
pop
mov
push
add
push
sbb
push
bound
cmp
ror
push
mov
mov
das
pop
ins
xchg
loop
inc
and
xor
(bad)
mov
ret
push
jle
(bad)
hlt
or
fisttp
sti
cld
test
je
sbb
leave
push
push
sti
mov
xor
push
push
mov
cmps
push
mov
mov
mov
mov
mov
mov
mov
test
sub
and
jo
test
jbe
add
lea
sub
xchg
ins
mov
jg
cmp
or
jo
(bad)
int
fstp
outs
out
jle
pop
pop
pop
int3
adc
loop
adc
jge
jg
aam
push
jge
orps
sbb
add
sub
loopne
mov
pop
xchg
push
or
stos
jl
inc
sbb
pusha
mov
fadd
xchg
mov
mov
pop
(bad)
fidivr
inc
shl
jle
sbb
popa
jmp
or
adc
dec
push
pop
bound
and
addr16
mov
out
adc
dec
adc
mov
dec
mov
mov
sbb
dec
add
dec
add
cmps
daa
push
add
fscale
add
jb
cmp
pop
das
js
mov
jb
pop
xor
mov
jge
mov
cmp
sbb
sar
jmp
jmp
jb
sub
mov
cmp
xchg
adc
clc
push
adc
movs
push
mov
vcvtsd2ss
jl
push
lods
(bad)
pop
jns
lea
mov
cmp
popa
or
in
inc
or
rcr
(bad)
in
xchg
sbb
sbb
les
scas
mov
or
push
sbb
push
adc
cmp
dec
movs
inc
mov
and
sub
xor
push
dec
cmp
fadd
jmp
xor
test
pop
mov
cmp
inc
push
mov
sbb
retf
sbb
cmp
dec
xchg
inc
sbb
push
sbb
pop
adc
pusha
test
push
fsub
adc
mov
or
loop
aam
jae
fistp
xor
retf
sub
mov
cmps
dec
repnz
clc
int3
es
loope
test
mul
add
push
loope
loope
dec
int
adc
push
jmp
loopne
iret
mov
or
inc
mov
and
or
xor
loope
adc
xchg
fdiv
test
xchg
inc
pop
jle
cmp
leave
adc
push
cmp
lods
js
(bad)
mov
inc
gs
dec
data16
aas
or
push
outs
outs
ins
das
xor
pushf
add
sbb
ja
xchg
aad
fild
jmp
jo
hlt
fdivr
lock
jo
sub
jmp
cwde
sahf
push
inc
dec
push
aam
hlt
jns
sbb
and
sbb
dec
les
jmp
cs
aad
push
repnz
mov
jmp
xchg
cmp
loop
jne
cmp
js
ret
lea
mov
ret
mov
enter
(bad)
inc
jno
pop
add
es
addr16
add
pop
cld
pop
mov
and
push
cmps
sti
stos
and
stc
add
adc
retf
mov
stc
or
inc
or
sub
repnz
data16
or
sbb
pop
jae
cmps
mov
fadd
ss
sbb
jb
mov
movs
call
pusha
fcom
rol
add
xchg
push
adc
cmp
push
aam
sub
inc
and
nop
jge
in
mov
or
adc
add
pop
pop
loopne
push
sbb
push
sub
pop
idiv
xor
divps
(bad)
pop
test
loop
push
pop
jle
mov
adc
int3
add
xchg
das
pop
pop
and
sbb
sub
sub
gs
sub
(bad)
aas
xor
inc
enter
mov
cmp
out
dec
pop
(bad)
and
ins
fisubr
js
push
pop
fsub
push
push
mov
ss
ins
stc
cmp
or
mov
fdiv
fild
rcl
scas
loopne
push
iret
lahf
inc
jae
in
scas
(bad)
lahf
sub
lahf
je
and
adc
jnp
enter
or
push
push
add
cs
pop
jo
mov
retf
jg
xor
cs
inc
addr16
cmp
inc
pop
add
ja
fistp
je
pusha
cmp
dec
xor
add
xor
push
scas
popf
xchg
retf
adc
(bad)
addr16
pop
xor
pusha
pop
adc
sbb
pop
inc
iret
jo
xchg
dec
enter
(bad)
inc
enter
into
xlat
cmc
add
xor
ss
inc
test
sub
gs
test
cmps
xor
inc
sub
mov
sub
jmp
inc
jne
push
xor
dec
das
aaa
cld
outs
jg
nop
fsubr
aaa
nop
and
mov
adc
sahf
out
cld
aas
jmp
push
mov
out
stos
lods
mov
imul
add
push
pop
ret
mov
mov
lahf
xchg
sub
or
imul
sbb
push
add
add
jmp
or
add
mov
add
outs
xor
popa
dec
and
mov
add
in
das
scas
lds
and
mov
dec
jg
jge
and
dec
cmp
mov
sub
jbe
jmp
dec
clc
jle
lea
add
test
je
sti
shl
out
sub
adc
cmp
sbb
inc
lods
std
test
mov
sub
sar
mov
xchg
inc
jg
or
mov
retf
neg
enter
stos
push
outs
arpl
ret
mov
cmp
adc
cmp
add
(bad)
cmp
push
loope
jo
das
(bad)
dec
paddusb
xor
aas
shl
(bad)
in
sub
mov
sar
mov
das
icebp
dec
sti
xor
stc
sub
cmp
mov
pop
and
into
xlat
(bad)
call
mov
test
xchg
push
aad
outs
mov
mov
push
in
and
enter
mov
repz
cmps
mov
js
dec
out
nop
packuswb
adc
and
mov
add
mov
inc
mov
add
jae
mov
jg
movs
xchg
sbb
loope
push
mov
(bad)
data16
or
rcl
pop
push
jg
lahf
(bad)
mov
lds
xchg
pop
mov
sub
lea
xor
xchg
mov
xchg
(bad)
retf
jns
fst
cmp
ss
xlat
jg
cmp
dec
mov
mov
movs
push
sbb
add
pop
xlat
mov
and
mov
xlat
mov
xchg
cs
push
int
jbe
jmp
mov
add
out
xor
mov
call
mov
gs
sar
sbb
push
test
push
xor
addr16
cmp
lahf
sub
pop
sub
mov
or
jbe
aam
jmp
xor
jbe
mov
push
adc
xor
arpl
stos
mov
mov
xchg
push
popf
and
cs
xor
pop
ja
scas
push
mov
daa
dec
push
sbb
push
xlat
add
addr16
xchg
inc
pop
pop
push
push
sub
popa
inc
or
cmp
dec
frstor
aas
and
pop
shl
outs
inc
lock
pop
hlt
sbb
sahf
jnp
mov
lea
add
mov
push
fnsave
adc
ror
xor
(bad)
cmovo
push
lods
imul
dec
add
stc
jmp
adc
xor
push
(bad)
js
inc
xor
test
sub
or
adc
jo
inc
adc
cmp
or
fiadd
(bad)
cwde
test
push
jmp
clc
jb
or
shr
sub
sbb
ds
dec
add
inc
sub
clc
je
inc
mov
add
scas
xchg
sbb
dec
add
and
jns
mov
dec
imul
and
inc
les
dec
or
xchg
add
cmp
adc
test
test
int3
jp
out
and
cdq
cmc
sbb
pop
and
js
pop
mov
sub
xchg
push
xor
jp
inc
sahf
and
inc
cmp
cmp
sub
inc
sub
daa
or
outs
inc
inc
repnz
inc
push
repnz
inc
dec
movs
in
push
setl
mov
pop
pop
mov
cvtps2pi
sbb
pop
or
mov
xchg
or
inc
jg
sbb
adc
ret
test
stc
cs
xor
mov
hlt
push
addr16
push
call
push
cmp
mov
dec
or
or
repnz
pop
cmps
adc
hlt
dec
dec
shr
pop
mov
push
std
sahf
xor
push
xor
mov
xchg
test
loopne
add
add
xchg
add
push
and
adc
mov
xchg
mov
add
ret
jge
lods
out
daa
adc
jne
punpckldq
or
ja
jne
fidivr
pop
loop
jb
lea
fsubr
and
mov
stc
enter
xchg
cmp
and
pop
xor
sub
pop
adc
imul
adc
test
dec
add
ret
out
inc
ret
or
cmps
inc
or
mov
sbb
xor
inc
shl
cmp
add
jg
lods
dec
inc
enter
xchg
retf
loopne
or
loopne
jae
dec
push
cli
imul
nop
ds
test
ror
les
neg
and
pop
lds
movs
daa
cmp
add
inc
jae
repnz
pop
mov
imul
and
addr16
adc
lock
or
cmp
cmp
inc
push
fucomip
sahf
je
mov
pusha
dec
dec
jl
add
pusha
clc
outs
jmp
fmul
xchg
push
inc
cs
dec
sub
jmp
push
mov
xchg
inc
inc
hlt
shl
dec
dec
dec
leave
sbb
add
jg
mov
movs
or
or
jp
fiadd
add
jp
shl
in
xchg
inc
stos
rcr
and
push
push
adc
lods
les
test
pop
lahf
es
mov
or
xchg
push
add
iret
cmps
enter
adc
mov
push
js
and
sbb
(bad)
dec
sub
xor
and
cmp
je
sub
xchg
push
or
mov
test
pushf
mov
jl
inc
cdq
into
xor
clc
popf
dec
dec
xchg
sbb
iret
pop
mov
call
call
ret
jns
scas
push
sbb
fidiv
mov
sub
aam
mov
or
inc
rsqrtps
test
mov
(bad)
(bad)
call
sbb
mov
js
outs
(bad)
cli
xor
jecxz
inc
mov
jnp
or
setb
mov
inc
mov
mov
push
cs
xchg
mov
lods
inc
test
or
test
push
and
cmps
inc
retf
jo
movs
add
cmp
inc
xor
jne
xchg
out
sub
les
mov
pop
loop
cmps
or
push
loopne
sbb
retf
mov
pop
in
mov
ds
pusha
mov
stos
add
je
addr16
push
test
push
mov
sbb
mov
nop
adc
mov
lds
fs
dec
add
ficom
(bad)
cli
pop
inc
or
xchg
aaa
scas
push
xchg
and
lock
xchg
adc
rol
sub
or
xlat
and
push
bound
or
mov
pop
or
enter
les
(bad)
push
add
and
out
icebp
adc
pusha
int
add
test
stc
sub
push
bound
(bad)
xlat
jg
ret
lods
rol
adc
sbb
xchg
and
and
jo
inc
gs
ficom
and
xor
and
cmp
aaa
xor
and
push
and
jo
sahf
xlat
dec
cmp
push
xor
cmp
pop
cs
mov
pop
dec
call
xor
stos
jne
(bad)
xor
add
push
addr16
outs
cmp
pop
pop
push
push
aam
pop
xchg
inc
lods
add
cmp
rcr
mov
(bad)
inc
addr16
push
(bad)
xchg
or
pop
cmps
pop
lods
imul
mov
pusha
inc
sub
wrmsr
add
jb
stos
jne
cmp
inc
and
pop
xchg
add
xlat
inc
lock
(bad)
rcl
syscall
push
aam
mov
inc
out
sbb
inc
sbb
dec
mov
inc
sbb
stos
gs
inc
ret
lods
add
inc
int3
lahf
ja
lods
xor
lahf
ja
sbb
lahf
inc
push
bound
sub
mov
sbb
test
addr16
fst
movs
jp
repnz
pop
sbb
push
add
jp
jo
jb
cmps
js
jo
and
popf
clc
xchg
aad
adc
ror
add
mov
mov
cmp
call
sbb
dec
(bad)
push
mov
push
jns
sbb
add
jg
sbb
xchg
nop
mov
cmp
nop
adc
inc
data16
pushf
sub
sub
popa
push
push
pop
mov
add
push
test
fstp
cs
lock
test
jl
inc
xor
inc
(bad)
dec
call
call
inc
retf
int3
jo
sar
sub
dec
dec
cmp
adc
sbb
rol
inc
xor
jne
xor
clc
jno
out
les
ret
sahf
inc
and
fadd
jne
lods
or
ja
pop
inc
mov
xor
in
add
mov
clc
adc
fadd
jmp
daa
jl
and
adc
and
test
or
and
jnp
jp
sub
fdivr
movs
mov
inc
and
cdq
cmc
outs
mov
inc
les
movs
cmp
sub
push
movzx
aaa
add
jl
mov
dec
jbe
rol
fsubr
lds
loope
pop
mov
out
jmp
and
push
sbb
pop
cmp
ret
mov
or
add
add
cs
jge
jl
add
fsubr
and
shr
(bad)
cmp
inc
int3
neg
jo
push
or
or
push
push
fsub
dec
dec
xchg
xchg
mov
ja
mov
push
and
and
int3
sub
ror
dec
dec
sbb
jl
in
inc
loope
xchg
push
imul
adc
daa
xor
jp
in
mov
push
in
mov
and
lods
push
mov
add
cmp
sbb
push
setge
popa
xchg
push
add
or
mov
fdiv
mov
xor
inc
out
sbb
movs
sub
push
push
jb
xlat
ds
add
je
aam
test
xchg
enter
arpl
(bad)
sub
ror
(bad)
fdivp
ds
push
cmps
add
add
add
add
int3
in
cmp
sub
cs
call
ins
loope
xchg
(bad)
rol
loop
ins
dec
mov
mov
jne
add
ja
add
outs
subps
jl
cmp
jo
into
test
lods
inc
sbb
out
sbb
mov
loop
mov
jle
add
mov
inc
ins
pop
imul
cmp
inc
xor
nop
mov
push
or
or
jnp
xadd
fidiv
mov
mov
ins
(bad)
clc
add
mov
push
int3
push
loopne
add
push
cmp
stos
sub
popa
inc
sbb
mov
retf
xor
clc
adc
idiv
callw
sub
mov
femms
sub
out
js
(bad)
aas
pop
movs
repnz
xchg
jecxz
xor
retf
xchg
popa
xchg
loopne
or
pop
add
add
or
xchg
xor
aaa
daa
fiadd
int
shr
fist
into
repz
in
daa
lock
push
jl
test
cmp
add
push
daa
xchg
call
test
sbb
and
daa
mov
daa
push
and
aaa
adc
frstor
and
inc
stos
inc
pop
or
add
and
cmp
adc
or
pop
arpl
add
add
lea
push
mov
out
push
xor
add
sub
inc
das
or
in
out
dec
icebp
push
and
out
mov
push
mov
or
add
inc
and
dec
mov
pop
test
les
add
retf
and
and
push
in
sub
mov
mov
xchg
push
mov
inc
pop
mov
cs
mov
cwde
and
cmp
sbb
retf
or
xor
or
jg
add
(bad)
adc
push
and
mov
add
inc
pusha
mov
dec
jae
popf
loopne
(bad)
loopne
or
cs
mov
and
dec
xor
pop
iret
inc
mov
mov
jo
mov
ror
xor
cmp
or
mov
or
sbb
xchg
test
pop
or
add
cmpxchg
das
call
or
fucomip
push
mov
mov
jne
push
sbb
ins
adc
pop
sub
sub
sub
or
jmp
dec
and
mov
dec
and
add
push
mov
data16
push
xlat
mov
add
fsubp
inc
test
jbe
movs
cmp
mov
scas
dec
mov
add
inc
pop
cmp
movs
add
cmp
and
fdivr
dec
or
mov
dec
add
pushf
sbb
in
adc
add
cmp
mov
mov
mov
inc
test
jae
cmp
jb
leave
or
lahf
pop
sbb
jmp
in
cmps
jbe
cmp
mov
enter
adc
mov
dec
aas
add
mov
outs
cld
adc
nop
or
shl
adc
mov
jge
mov
add
fisttp
xor
add
popa
pop
jecxz
cmp
adc
into
clc
(bad)
lods
sub
and
mov
xor
push
sbb
rcl
or
jge
cld
adc
adc
popf
(bad)
xlat
dec
pop
inc
cmp
push
sahf
push
popf
lahf
push
movs
or
mov
push
or
jo
jb
pop
lock
lock
cmp
cmp
adc
cs
sbb
(bad)
por
fdivrp
xor
stc
rcr
clc
fadd
stc
jmp
ja
push
pop
fld
or
dec
scas
mov
push
cmp
ret
or
xor
mov
xchg
pusha
data16
shr
pop
loopne
push
dec
ret
mov
push
add
or
cmp
sub
aam
cmp
cli
xor
add
jl
add
es
in
pushf
add
shl
push
xchg
(bad)
je
push
lock
jge
mov
ds
mov
cwde
mov
(bad)
ins
inc
clc
cmc
daa
cmc
add
push
arpl
test
call
cmp
je
jmp
mov
test
inc
inc
call
pop
sbb
cmp
je
xor
sti
mov
push
(bad)
lods
pop
shr
push
cli
fnstenv
aad
fdivr
test
call
outs
out
in
nop
jp
adc
inc
rcl
shr
jmp
rcl
add
(bad)
jnp
inc
xchg
call
ins
add
out
push
inc
and
mov
pop
adc
or
sub
cmp
sbb
test
push
push
(bad)
jle
sub
cmp
add
shr
inc
push
or
mov
sahf
jl
jne
push
add
aam
enter
sahf
and
sbb
push
mov
lods
out
inc
aas
cmp
jg
inc
jmp
add
sbb
xchg
adc
fidivr
or
push
inc
or
mov
push
fmul
adc
adc
and
pop
pop
pop
lea
mov
xchg
scas
loope
(bad)
and
out
jno
js
push
out
arpl
std
or
(bad)
in
cli
lea
add
mov
mov
out
jl
mov
and
xor
xor
psrlw
(bad)
test
pop
dec
mov
mov
push
lods
xchg
jmp
pop
inc
lock
sub
popa
or
loopne
adc
test
mov
push
mov
and
sahf
push
jg
xchg
sub
mov
imul
mov
mov
mov
jnp
or
ret
cmps
xchg
push
inc
nop
jmp
or
jmp
aas
push
jo
push
hlt
aaa
les
loop
fadd
dec
and
jl
fcmovnu
adc
cmp
cmp
movs
fidivr
int3
and
lahf
sar
cli
adc
and
pop
dec
xchg
jmp
jge
jmp
pop
push
add
xor
jae
xlat
pop
add
or
sub
jae
jae
ror
scas
pop
xchg
cmp
lods
test
or
and
ror
(bad)
sbb
and
jmp
mov
test
ins
jo
test
jg
adc
dec
adc
push
push
pop
pusha
add
cmp
out
ficomp
mov
adc
shr
mov
inc
cwde
add
dec
or
mov
mov
add
adc
aad
outs
lods
scas
xor
pop
pop
add
xchg
or
cmp
retf
dec
sbb
sbb
or
bound
push
sbb
xchg
push
push
sbb
rcl
sbb
dec
rcr
push
jno
pop
pop
arpl
mov
shl
shr
cmp
xchg
xchg
mov
inc
lods
adc
sti
mov
cmp
jne
sub
cld
pop
shl
retf
inc
sub
movs
sbb
cmp
(bad)
neg
sub
clc
inc
xor
jg
(bad)
mov
out
(bad)
rcl
xchg
pusha
loopne
sub
in
fldpi
sbb
mov
jg
xor
xchg
mov
xor
test
rol
and
jmp
xor
and
adc
fcmovnu
dec
push
jo
adc
loop
fld
and
out
mov
xchg
ss
icebp
loopne
aam
(bad)
mov
push
push
push
and
aam
xchg
push
mov
mov
cmp
jl
or
push
xlat
js
sub
std
add
repnz
and
push
scas
and
push
mov
div
mov
pop
fnstcw
pop
pop
push
adc
mov
add
mov
sbb
add
cmp
rcl
clc
lods
add
lahf
add
ins
sbb
lock
push
push
push
cli
mov
and
ret
lods
aas
das
sub
adc
and
test
push
test
icebp
sub
mov
fiadd
fimul
jnp
or
push
jae
and
jmp
(bad)
ds
sbb
sbb
cmp
add
jb
add
test
and
(bad)
inc
call
add
es
fchs
loopne
adc
adc
scas
mov
sbb
aaa
shr
adc
setge
pusha
inc
xchg
push
adc
jmp
cmp
movzx
les
inc
loop
loope
cmps
call
xor
jmp
mov
push
adc
nop
adc
and
mov
mov
add
xchg
jl
dec
scas
test
repnz
mov
dec
bound
hlt
pop
shl
cmp
pop
outs
cmp
in
xor
push
loopne
fdiv
pusha
das
add
mov
add
xchg
in
sub
loopne
ja
push
das
sub
jnp
add
retf
sub
into
stos
push
xor
and
movs
sub
aas
push
repz
sub
xchg
out
sub
fild
mov
mov
out
xchg
lea
outs
mov
push
cld
mov
push
into
scas
in
retf
dec
not
adc
xor
xor
outs
pop
xor
or
test
mov
add
xchg
nop
cmps
in
xor
loope
sbb
cmp
cmp
adc
rcr
xor
xor
inc
hlt
or
hlt
loopne
mov
adc
ror
inc
fdiv
(bad)
mov
das
jmp
lods
or
push
add
retf
loopne
pop
bound
add
dec
ret
data16
xchg
es
add
(bad)
jle
or
inc
mov
mov
call
fcom
aam
xor
inc
and
ja
rol
pop
pop
cmp
or
mov
cmp
(bad)
outs
lock
dec
gs
add
jecxz
dec
sbb
add
pushf
pop
repz
nop
out
arpl
test
mov
(bad)
inc
pop
and
dec
lock
scas
js
sbb
fsubr
xchg
shr
inc
and
inc
setg
add
stos
sbb
cmp
(bad)
mov
daa
xor
daa
stos
popa
mov
lods
daa
pop
shl
add
das
inc
sub
add
aaa
jp
sbb
jns
and
push
or
xor
push
sbb
hlt
add
or
mov
sar
push
jb
sub
mov
push
or
mov
sub
xlat
pop
cmp
jge
imul
push
pusha
cmp
fistp
xchg
pop
jge
adc
add
hlt
cmp
jle
lea
mov
test
xchg
sub
daa
repz
mov
lahf
and
fild
adc
dec
mov
mov
pop
xchg
and
mov
rcl
cmp
stc
adc
jmp
inc
jae
(bad)
lock
xor
ss
mov
push
xor
call
fcomp
test
cli
mov
jbe
inc
and
jmp
add
popa
aam
inc
jmp
push
xchg
out
call
icebp
xchg
adc
cli
test
icebp
sbb
adc
xchg
xchg
je
jnp
ror
jge
ja
push
add
test
sub
pop
dec
loopne
btc
sbb
inc
movs
inc
movs
push
ins
call
push
mov
push
(bad)
dec
xchg
movzx
adc
inc
and
mov
cli
call
jle
push
fisttp
inc
adc
adc
sub
test
dec
dec
sti
fsubr
xchg
andnps
mov
sbb
push
cld
ins
jmp
adc
jo
adc
xchg
dec
daa
sub
test
mov
imul
je
hlt
inc
sbb
jmp
xchg
inc
or
inc
inc
lahf
adc
mov
icebp
or
lea
inc
or
sub
addr16
mov
arpl
lock
cmp
and
add
add
cmps
sbb
mov
pop
dec
or
inc
hlt
add
push
shl
loop
xlat
xchg
push
scas
ret
pop
nop
sbb
mov
xchg
add
mov
push
stos
sbb
in
lods
std
(bad)
jo
sahf
ror
test
push
and
cmp
cmp
cmp
mov
push
test
sub
rcl
mov
cmc
dec
mov
add
push
jno
push
rol
sbb
es
pop
outs
push
add
pop
xchg
(bad)
movs
xchg
inc
and
imul
lock
shl
mov
jns
pop
mov
inc
das
movs
pop
adc
add
ja
jbe
mov
push
jge
cmp
jne
add
call
mov
int
push
mov
adc
pop
cmp
mov
and
test
pop
(bad)
outs
or
fild
inc
add
adc
mov
ficomp
inc
add
or
adc
add
and
jle
int
mov
std
call
test
ja
cmp
in
in
pusha
add
sub
enter
pop
hlt
dec
loopne
test
jl
and
sub
jmp
shl
ret
shl
push
add
dec
jne
sar
adc
and
cdq
push
pop
ror
cmp
in
cmps
(bad)
push
clc
add
repz
push
clc
(bad)
or
jmp
pop
add
movs
sbb
sub
add
dec
inc
out
and
adc
xlat
push
xchg
(bad)
cs
add
push
or
js
and
ins
add
add
jmp
enter
adc
sub
mov
fnsave
push
sbb
adc
outs
xor
xchg
or
push
addr16
or
repz
rol
ja
nop
dec
sahf
cmp
sar
add
add
xor
mov
adc
in
loop
rol
(bad)
fsubr
fadd
loopne
call
add
popa
std
cmp
je
aas
dec
add
jmp
inc
cmp
jge
xor
test
inc
call
dec
adc
repz
idiv
jne
pop
jge
jmp
inc
dec
fadd
cli
jge
test
xor
dec
dec
mov
inc
push
call
jle
(bad)
cs
clc
js
cdq
adc
dec
sub
inc
pop
adc
pop
outs
pop
aam
ret
mov
loopne
jbe
imul
mov
sub
sbb
mov
dec
adc
ficom
inc
fiadd
add
gs
add
sbb
pop
pop
loop
pop
mov
imul
ins
ds
mov
jne
(bad)
rol
icebp
lea
or
jmp
inc
jl
(bad)
cmp
add
cmp
jg
adc
test
(bad)
mov
xor
shl
and
sub
mov
and
mov
ret
fild
ins
test
in
repnz
push
cld
popa
xchg
xchg
pop
mov
push
jnp
or
js
std
or
mov
dec
adc
sbb
jmp
scas
mov
bound
add
ins
cmp
inc
es
adc
into
push
sub
loopne
(bad)
jae
cmp
mov
imul
lock
inc
push
call
lods
or
sbb
test
sub
cmc
adc
mov
xchg
mov
add
pop
fnsave
fst
in
pop
xor
hlt
mov
ja
jecxz
shr
and
mov
cmc
sub
xor
ins
daa
repz
scas
sbb
xor
mov
or
sub
cmp
into
mov
sbb
movs
xchg
cmps
scas
xor
(bad)
or
das
lea
push
and
xlat
stos
mov
jmp
shl
sub
pusha
ret
adc
mov
cmp
mov
cmp
ja
sbb
xor
jp
cmps
mov
xor
lods
in
dec
sub
dec
jmp
adc
sub
or
movs
mov
(bad)
enter
inc
and
outs
fadd
or
adc
jle
dec
pop
or
pop
mov
or
adc
push
jno
sub
push
dec
cld
das
xchg
xchg
ret
jmp
inc
dec
jne
or
dec
ret
pop
pop
push
ja
dec
sti
jmp
aaa
xchg
or
push
aad
dec
jg
dec
fsubr
xor
add
dec
cmp
inc
ror
(bad)
pop
or
lock
loopne
mov
fidivr
push
or
adc
jo
in
cdq
scas
shr
xchg
rcl
dec
or
add
jg
pop
or
fidivr
pusha
shr
jne
cmp
inc
mov
outs
or
pushf
jnp
cmp
jle
sti
out
or
mov
pop
rsm
pop
push
push
bound
xor
mov
ja
adc
or
inc
or
test
test
jle
jo
push
test
jbe
movs
jns
jmp
retf
imul
push
clc
cmps
js
jge
xor
fs
adc
jecxz
fbstp
loop
push
je
or
sbb
scas
push
dec
jns
jp
pop
add
mov
int
xor
dec
je
inc
sub
inc
fbld
xchg
cs
loope
lods
leave
fimul
and
jo
cmovbe
mov
mov
lock
xor
pushf
sub
xor
sbb
mov
cmp
in
add
shl
sbb
scas
push
jo
arpl
sub
mov
lds
ficomp
(bad)
cli
clc
daa
gs
movs
xchg
pop
mov
sub
dec
dec
in
or
js
inc
xor
mov
and
lahf
push
pop
mov
ja
add
add
cmp
lods
xchg
mov
rcr
mov
outs
mov
and
leave
cld
sbb
dec
sti
rol
xchg
xchg
sti
call
or
enter
mov
add
push
add
pop
xor
pop
xor
inc
cwde
add
pop
inc
pop
pusha
loopne
xor
adc
mov
sub
sub
inc
mov
sahf
mov
pushf
mov
mov
sub
cmp
int
adc
or
inc
pusha
je
and
(bad)
push
iret
lea
rcr
sub
inc
dec
arpl
lods
push
sub
popa
(bad)
int
push
xor
ror
jne
inc
and
(bad)
cmp
enter
ret
dec
pusha
(bad)
add
inc
adc
adc
shld
xchg
mov
jmp
retf
fwait
add
push
push
pslld
int
popf
sbb
mov
push
or
inc
punpckhbw
pusha
stc
inc
invd
inc
add
daa
xchg
lock
add
imul
sbb
jne
xor
hlt
jbe
add
call
push
int3
prefetch
xor
les
add
push
lods
push
dec
and
repz
(bad)
enter
xor
in
mov
pusha
lods
and
pop
pxor
and
dec
or
retf
and
std
jmp
xlat
js
nop
dec
adc
cmp
dec
pop
adc
scas
jle
or
ds
mov
fisttp
aad
icebp
cmp
lods
je
addr16
and
test
rol
jb
daa
push
fnstcw
mov
out
adc
or
mov
and
jne
add
sbb
ss
cmp
inc
add
lods
outs
lods
arpl
inc
push
bound
ret
data16
add
in
push
mov
pop
out
mov
adc
dec
and
in
mov
jo
add
mov
test
in
fcom
and
outs
adc
jns
adc
mov
or
dec
pop
or
jmp
mov
xchg
repz
enter
(bad)
add
push
daa
mov
lods
pop
imul
jge
jb
jg
add
jmp
jmp
pop
cmps
aas
xor
jecxz
push
aam
(bad)
loop
pop
cld
aam
in
cs
dec
mov
cmp
fs
inc
inc
cmp
(bad)
enter
mov
ja
out
cmp
xor
dec
mov
hlt
mov
hlt
pop
or
push
sbb
mov
jp
(bad)
js
cmps
and
add
xchg
repz
cli
(bad)
push
inc
adc
das
sbb
xor
ins
or
aas
das
and
call
cmp
jb
sbb
inc
in
cmps
das
push
pop
sbb
das
nop
push
push
mov
pop
adc
xchg
push
scas
test
in
xor
xchg
test
sbb
dec
inc
mov
xor
jge
mov
sbb
mov
repnz
movs
sbb
mov
xchg
sub
xor
mov
jo
sub
test
fdivr
loop
(bad)
into
jl
mov
pop
or
pop
xchg
mov
test
fmul
mov
add
xor
loop
(bad)
sub
jae
push
or
adc
sub
aam
cld
sbb
sti
call
push
stos
xlat
mov
xlat
lea
xlat
ja
ja
(bad)
(bad)
out
cmp
add
and
cmc
jnp
mov
push
sbb
bndstx
push
inc
sbb
dec
xor
mov
pop
scas
inc
mov
push
xchg
push
jl
or
retf
mov
push
sbb
inc
cmp
add
jmp
inc
mov
out
mov
pop
cmp
push
shl
sbb
pusha
pop
or
jne
inc
cmp
xchg
iret
xchg
jl
clc
dec
clc
jns
shr
jns
rcr
xchg
movs
adc
in
jg
dec
das
shl
inc
stos
js
je
mov
pop
je
inc
sbb
adc
call
pop
adc
test
or
mov
push
cli
adc
or
xlat
xor
push
sub
push
xlat
push
dec
xchg
or
les
pop
push
test
push
sub
push
adc
sub
pop
(bad)
adc
adc
pusha
loopne
mov
in
sahf
xor
and
lods
into
test
push
loope
lods
loopne
test
dec
stos
(bad)
lea
or
fistp
fsubr
data16
sub
ror
int3
imul
pop
pop
xchg
outs
mov
ror
mov
push
ss
mov
adc
aas
push
aaa
adc
xor
xor
cmp
xchg
push
dec
and
movs
or
ret
ret
loopne
dec
push
jae
push
xor
pop
adc
adc
call
sbb
pop
cli
hlt
adc
sbb
mov
push
xor
inc
push
xchg
dec
sar
pop
aaa
test
pusha
shl
jmp
movs
inc
rol
jg
inc
dec
or
adc
cmp
jg
or
xchg
jg
mov
je
and
mov
mov
std
mov
mov
and
(bad)
in
mov
sub
xchg
cs
cmp
adc
pusha
pop
in
movs
inc
nop
or
add
lds
imul
xlat
or
mov
add
ror
sbb
push
inc
add
mov
lahf
into
add
movs
jg
xor
xchg
scas
mov
rol
or
inc
pop
frstor
push
xchg
(bad)
arpl
rol
mov
and
cmp
ret
movs
es
push
add
cs
or
adc
xchg
add
in
sbb
imul
dec
in
mov
(bad)
xchg
stc
int3
xchg
shl
aaa
shr
or
cmp
fsub
(bad)
fist
or
or
or
pop
ss
pop
or
bound
inc
rcl
jmp
and
cmp
adc
imul
dec
xchg
xchg
push
push
cmp
arpl
jb
xchg
or
fsubr
adc
xlat
repnz
sbb
je
in
adc
inc
es
(bad)
xor
xor
sbb
xchg
das
call
(bad)
out
sub
push
mov
test
push
sbb
inc
mov
ret
mov
adc
dec
jnp
js
ins
xchg
sub
dec
sub
jecxz
add
xor
mov
test
jns
push
fdiv
and
sub
popa
sub
test
xor
cs
ins
das
loope
jle
gs
pop
lock
push
enter
(bad)
mov
cmp
daa
add
ins
push
jns
jmp
xor
pusha
pop
ins
mov
dec
inc
gs
or
xchg
xor
push
(bad)
movs
aaa
ror
or
mov
(bad)
push
daa
sub
sub
adc
mov
cwde
nop
test
xchg
movs
retf
xchg
xchg
cmps
test
push
inc
mov
out
ret
sub
pusha
mov
jno
fsubr
xor
add
mov
scas
lock
sbb
loope
retf
call
jo
ror
stos
ret
or
retf
imul
icebp
rcr
jp
push
test
scas
jnp
cmp
jle
and
push
bound
fs
push
sub
push
ja
sub
push
and
push
sub
push
ja
or
fcom
cmp
ret
mov
jb
mov
push
xor
jmp
ins
or
shl
or
add
fdiv
jl
int
loopne
jecxz
ds
inc
pop
leave
das
stos
sbb
bound
shl
xchg
outs
jb
cmps
mov
clc
daa
gs
push
outs
dec
inc
stos
fidivr
inc
add
stc
cmp
push
or
ficomp
retf
cmp
pop
push
call
push
fld
sbb
mov
pop
xchg
pop
call
or
call
add
pop
adc
cmps
fimul
dec
pop
sub
scas
jne
mov
rol
not
mov
dec
dec
outs
add
mov
pushaw
dec
mov
adc
cmps
add
or
test
ret
clc
or
xchg
shl
push
int3
mov
sbb
jmp
idiv
lea
dec
cmp
jg
cmp
push
ss
push
xlat
ja
add
push
add
dec
shr
mov
xor
or
popw
loopne
or
call
sar
xor
mov
mov
jmp
or
add
pop
lock
mov
sub
shr
add
add
cwde
mov
jae
pop
loope
dec
cmp
jge
lea
jmp
popa
sbb
push
test
je
lds
sbb
outs
fmul
mov
jnp
push
xchg
fadd
in
test
add
cmp
cmp
mov
lds
cmp
xorps
adc
xor
mov
test
leave
and
push
adc
pop
outs
enter
int3
jmp
dec
stos
nop
inc
add
xchg
cmp
sahf
inc
mov
pop
or
(bad)
into
push
xlat
push
jno
jbe
dec
in
call
sbb
sahf
nop
repnz
in
sbb
jo
pop
cmovne
inc
pop
test
pop
inc
or
jo
jmp
jns
mov
sbb
call
sub
add
pop
cwde
hlt
pushw
jle
mov
push
xchg
stos
enter
lods
jl
cs
lock
sub
jg
cmp
jl
push
je
and
dec
adc
xchg
popa
add
sub
cmps
sub
outs
cmps
daa
inc
dec
mov
cmp
jle
or
cld
add
jl
in
xor
imul
mov
jmp
add
int3
test
mov
mov
adc
scas
aaa
inc
xchg
ret
xor
lock
and
call
xchg
cmp
call
sbb
pop
kortestw
adc
lds
cmps
cmp
(bad)
das
lds
les
out
data16
push
movs
lea
call
mov
in
add
ja
mov
or
sub
or
xor
push
or
mov
sbb
and
fs
adc
scas
das
xor
push
fs
das
adc
jo
add
pop
sbb
mov
jne
add
pop
xor
loopne
call
cs
daa
and
or
xchg
cmp
pop
or
mov
sub
fdivrp
add
push
jle
(bad)
call
dec
push
dec
imul
gs
add
cs
push
popa
imul
fs
outs
outs
je
js
push
adc
jb
fucomip
dec
cs
adc
ds
jb
popa
jns
push
scas
fucomip
(bad)
xor
test
sbb
mov
gs
mov
outs
push
arpl
fs
ins
arpl
jae
data16
cmp
cmovs
ins
jo
dec
call
mov
loopne
sub
sbb
inc
gs
jne
je
add
clc
mov
push
or
cmp
dec
outs
or
inc
add
and
mov
add
or
jbe
xor
push
dec
bound
adc
pop
pextrw
push
sbb
xchg
add
inc
xor
pop
dec
mov
pop
add
ja
hlt
stos
push
adc
mov
mov
int
sub
push
scas
popw
mov
cmp
cmp
xor
mov
(bad)
push
push
leave
cwde
push
mov
repz
jle
adc
or
xor
daa
jl
push
and
xor
pop
out
cmp
mov
adc
mov
push
or
push
inc
ds
jecxz
cdq
dec
popa
outs
popa
sbb
fadd
fistp
outs
jp
add
add
pop
shl
dec
inc
or
cmp
add
adc
add
inc
jb
loop
mov
and
and
add
add
aaa
pusha
ss
int
mov
sti
mov
and
sbb
push
mov
pop
ins
imul
mov
scas
add
sbb
mov
jp
sahf
pop
pop
inc
je
xchg
(bad)
jecxz
add
xor
or
mov
push
dec
dec
inc
outs
jne
inc
popa
bound
pop
cmps
add
inc
pop
push
adc
aaa
pop
aaa
call
rol
inc
(bad)
je
inc
retf
xor
cmp
and
enter
ds
or
fstp
es
das
adc
cli
dec
in
inc
push
mov
outs
sub
call
jmp
jecxz
sbb
out
inc
cmp
mov
(bad)
fdivr
call
or
and
(bad)
add
shl
cs
inc
jb
sbb
mov
add
shl
push
pop
or
inc
push
add
rcr
push
push
ins
jnp
xor
add
jg
lds
mov
xchg
rcl
dec
aas
jae
mov
sbb
or
(bad)
call
jne
mov
sbb
pop
add
push
mov
loopne
movs
lock
popa
inc
das
mov
dec
inc
shr
sahf
imul
pop
fist
cli
push
pop
clc
fmul
call
movhps
sub
xor
int3
gs
bound
div
shl
and
jae
and
fsubr
sar
mov
dec
scas
add
adc
sub
sub
inc
mov
sub
pushf
int3
neg
test
and
pop
xchg
xlat
xor
push
dec
je
push
mov
cs
sbb
cmps
pushf
mov
loop
inc
bound
dec
inc
ins
mov
(bad)
and
mov
jecxz
inc
or
xchg
xchg
retf
sti
sub
in
leave
leave
jne
loop
dec
in
in
imul
aas
(bad)
dec
xchg
lds
push
pop
push
or
es
pop
mov
sub
push
(bad)
imul
cmp
ins
sti
dec
jle
je
push
pop
or
or
mov
jb
add
dec
adc
imul
or
sbb
pop
inc
les
jns
xor
and
pop
rol
dec
retf
or
mov
push
mov
addr16
adc
or
inc
push
bound
mov
jg
std
mov
jg
add
mov
and
jne
push
jp
cmps
jmp
arpl
cmps
bound
push
mov
cmp
push
push
pop
mov
add
cwde
or
jo
outs
add
ins
xor
shr
ja
and
push
dec
fild
or
(bad)
movs
or
shl
and
enter
in
out
out
mov
push
or
xlat
lods
xchg
or
dec
sub
xchg
icebp
adc
dec
and
ror
call
and
jl
pushf
add
out
push
inc
loope
inc
inc
or
add
jae
es
jns
imul
adc
jo
cmp
dec
jmp
mov
and
sub
ror
mov
push
sub
fimul
inc
add
es
inc
jbe
imul
xchg
xchg
add
add
inc
bound
jo
gs
lock
sbb
push
ja
add
mov
push
sbb
js
sbb
scas
mov
sub
cmp
dec
(bad)
scas
or
sar
mov
xor
pop
xor
(bad)
cdq
(bad)
clc
stc
xchg
mov
dec
gs
(bad)
jne
out
mov
pop
shl
jg
sbb
fcom
add
popa
inc
daa
cwde
sbb
mov
popa
inc
popa
pop
lds
add
xor
push
es
sar
into
sub
dec
aaa
add
pushf
inc
addr16
add
popa
imul
test
cmp
dec
pop
jge
cmps
popw
dec
add
or
loopne
test
imul
add
addr16
pop
bound
mov
or
icebp
xor
outs
fbld
mov
popa
jge
inc
push
adc
pop
pop
pop
(bad)
jge
dec
add
ins
or
shl
dec
rcl
xchg
or
adc
and
mov
pop
mov
xchg
pop
or
bound
inc
pusha
test
mov
push
jb
shl
imul
fisub
sbb
(bad)
dec
mov
mov
and
sub
inc
inc
sub
in
or
mov
pop
in
nop
clc
push
pop
scas
inc
pop
shl
in
fmul
sbb
inc
fadd
es
jns
add
aas
pop
(bad)
je
xor
in
add
inc
dec
cmps
fs
xor
fs
cmp
push
push
or
lods
arpl
mov
inc
add
inc
inc
popa
and
rcl
push
aas
aaa
aaa
push
add
out
(bad)
pop
mov
arpl
ret
(bad)
(bad)
stos
popa
ret
add
adc
sub
adc
(bad)
ret
inc
sbb
les
inc
sbb
xchg
add
mov
add
mov
pop
outs
mov
jl
pop
in
add
jmp
sbb
pop
lea
jae
setbe
pop
and
and
sbb
and
pop
or
sub
in
test
int
cs
sub
int
and
or
adc
test
mov
add
pop
iret
pop
cmc
inc
cmc
cmp
aam
mov
add
cwde
mov
stos
ins
add
push
xchg
cmps
daa
or
lods
sbb
jbe
add
push
add
adc
push
(bad)
mov
ins
xor
or
outs
adc
add
aam
xor
dec
fcom
movs
cmp
jle
repnz
outs
mov
fmul
pop
inc
xchg
fld
mov
or
pusha
push
int
or
shl
add
aad
data16
jl
push
mov
arpl
inc
lods
jge
push
add
(bad)
mov
scas
push
sbb
cmp
push
mov
lds
push
sbb
in
lock
test
inc
lods
ja
stos
imul
ja
adc
imul
mov
retf
sub
ja
ja
cmc
sbb
and
arpl
push
jbe
jno
mov
push
jae
push
cmp
cmp
cmc
pushf
pushf
mov
push
(bad)
(bad)
dec
dec
inc
sahf
xor
imul
mov
xchg
pop
dec
ins
xchg
leave
enter
fcom
pop
dec
in
leave
leave
xchg
shl
sbb
in
push
fwait
mul
mov
push
push
pop
and
mov
push
mov
push
stos
es
or
outs
sbb
xlat
bound
ins
dec
or
and
sbb
sbb
xchg
push
sub
adc
mov
push
and
les
jle
mov
and
push
cmp
mov
icebp
and
mov
or
mov
adc
retf
and
adc
sbb
and
(bad)
stos
out
mov
and
jp
mov
or
sbb
mov
das
and
xchg
fwait
gs
inc
mov
sahf
adc
pop
mov
add
xor
sub
xchg
and
xor
iret
dec
sub
push
mov
and
and
ja
and
push
fdiv
or
lods
mov
gs
mov
clc
push
or
and
jae
dec
popf
cmp
dec
adc
and
jmp
inc
cmps
add
and
push
sbb
lods
frstpm(287
aam
lea
inc
dec
jecxz
push
fiadd
cmps
into
pop
dec
dec
add
jne
call
and
cmp
dec
sub
scas
mov
lds
int
jo
jge
cmp
pusha
cdq
int
sahf
sub
or
mov
adc
dec
in
push
lock
popf
pop
dec
or
int
push
dec
sbb
xchg
int
test
fcom
jbe
xchg
int3
xchg
mov
int
add
mov
mov
in
push
adc
cmps
out
cmp
lock
int
arpl
ins
or
sbb
push
int
popf
jb
add
imul
or
push
je
xor
je
test
or
and
or
push
or
aam
in
push
cmp
int3
adc
jmp
dec
movs
(bad)
retf
gs
pop
addr16
cmp
push
rcr
jge
aas
js
pop
loopne
mov
mov
addr16
retf
add
fnsave
fwait
mov
jae
ss
jge
scas
jmp
cmp
paddb
addr16
addr16
pop
jo
rol
lods
push
inc
adc
push
addr16
int
add
data16
dec
mov
or
outs
movs
into
addr16
inc
or
iret
add
xchg
addr16
dec
shr
inc
or
add
mov
outs
add
inc
jne
shl
mov
adc
aas
das
push
inc
fs
je
(bad)
jo
push
push
xlat
push
adc
pop
sub
add
push
cmp
fsub
mov
cmp
push
add
cmp
mov
shr
or
push
ins
xor
das
addr16
cmp
jbe
test
xchg
mov
sub
mov
loopne
addr16
push
fmulp
push
ins
call
and
out
cmps
addr16
push
push
fild
clc
pop
push
sbb
push
pusha
repnz
xor
inc
or
scas
addr16
call
cmp
test
shr
addr16
sub
repnz
arpl
addr16
out
push
imul
ret
push
jb
jecxz
add
xor
jb
test
pushf
mov
ror
xor
sahf
pushf
pushf
popf
jmp
and
stos
add
xchg
daa
daa
daa
ret
ins
xchg
xchg
xchg
xchg
cmp
test
enter
jnp
jne
inc
fdivr
aas
in
jno
data16
loopne
push
and
mov
cmp
js
add
addr16
fcmovbe
in
sbb
dec
pop
sbb
(bad)
dec
or
addr16
mov
jno
xchg
popf
cmp
addr16
sbb
enter
mov
jne
popf
mov
fdivr
inc
xor
addr16
and
jg
test
shr
or
fwait
cmp
xchg
ja
jne
and
addr16
push
addr16
mov
addr16
add
and
or
and
and
push
leave
call
and
mov
call
inc
aam
push
adc
push
cmp
repnz
mov
iret
add
push
shl
hlt
xor
dec
sbb
addr16
cmp
or
push
or
and
daa
gs
call
mov
add
jge
mov
scas
mov
popf
cmp
dec
add
xchg
cmp
and
mov
daa
pop
sub
xchg
xor
jo
je
sub
push
dec
jg
cmps
out
(bad)
add
addr16
and
mov
mov
push
jae
mov
sub
mov
pushf
mov
sbb
imul
cmp
dec
mov
mov
std
cmps
aam
inc
inc
adc
ret
jmp
xor
mov
and
inc
ja
push
pop
mov
adc
cmp
test
pusha
or
xchg
jmp
mov
bound
jo
or
add
dec
sbb
xchg
cmp
adc
mov
in
bound
aad
in
sbb
push
add
pop
in
out
sub
cmp
dec
or
push
or
out
xlat
loope
push
mov
sbb
(bad)
enter
loopne
stos
add
and
lds
or
and
jne
stos
cwde
push
xlat
enter
rol
outs
in
adc
jecxz
mov
ins
cmp
dec
push
or
push
or
dec
and
push
push
sbb
sub
dec
test
jns
ja
hlt
(bad)
mov
add
push
mov
add
inc
and
hlt
clc
nop
arpl
cmp
int3
stc
jo
and
pop
add
int3
push
in
push
sbb
mov
sbb
ret
popa
not
cmp
loopne
mov
fdiv
test
(bad)
push
adc
popf
mul
aad
hlt
xor
or
das
mov
setle
mov
push
xor
ds
mov
mov
punpckhdq
outs
mov
gs
in
sbb
fisttp
sbb
mov
or
push
test
or
mov
(bad)
push
test
popa
fcmovb
popa
fadd
(bad)
iret
add
outs
cmova
in
test
out
ds
das
cld
jmp
addr16
rcl
pop
sub
mov
and
lds
fsub
xlat
dec
lods
adc
popf
sub
pop
mov
test
dec
in
sar
out
fiadd
or
push
cmp
imul
pop
daa
jne
add
out
into
push
ds
push
push
push
add
add
xchg
cdq
pusha
or
pop
scas
xor
or
adc
and
cmp
or
push
push
mov
sbb
pop
lock
pusha
(bad)
and
stos
pop
pusha
xor
cmp
jo
xor
and
and
je
adc
add
push
xor
pusha
out
mov
adc
jns
sar
pop
int3
xor
mov
stos
ror
cs
(bad)
add
(bad)
sub
push
mov
add
jne
(bad)
add
mov
xor
lods
ret
add
pusha
push
rol
mov
sar
add
pop
adc
mov
pop
add
or
jbe
(bad)
jnp
jge
adc
cs
inc
push
or
mov
into
add
or
mov
js
outs
lds
inc
and
jns
add
pop
mov
xchg
push
popf
jno
dec
out
push
xlat
pop
or
pop
call
es
mov
jl
cmp
add
adc
and
jbe
loope
into
in
push
test
lock
pop
cmps
add
test
adc
test
int
xchg
mov
popa
xchg
int
jne
out
ret
(bad)
int
pop
pop
mov
int
aaa
pop
jo
or
push
int
je
jo
or
cmp
xchg
adc
aaa
mov
int
int
sbb
pop
aad
pop
sub
or
push
pop
xor
aas
add
lock
das
mov
sbb
call
inc
mov
mov
mov
ret
sbb
outs
daa
push
loope
adc
xor
jo
push
pop
aam
or
sbb
ins
sbb
test
inc
stos
pop
sbb
retf
sbb
cmps
es
popa
pop
js
int
adc
mov
sub
sub
jb
push
jg
out
dec
loopne
jg
push
push
cmp
pusha
cs
mov
in
push
jo
add
stos
jo
int
add
add
push
jg
dec
leave
cmp
add
jno
pop
sbb
gs
push
test
jne
or
mov
test
xor
xor
rol
(bad)
xor
add
or
inc
aaa
rcr
rcl
movs
push
scas
push
mov
cdq
mov
es
pusha
push
add
es
ja
ret
add
push
add
adc
mov
aaa
xchg
jle
sbb
fcmovnb
(bad)
mov
pusha
pop
xor
test
pop
mov
clc
(bad)
xor
bound
and
aaa
addr16
xor
aaa
or
ret
aaa
push
dec
ret
es
pop
aaa
mov
aaa
rol
and
aaa
lahf
inc
and
aaa
aad
and
pusha
xor
test
out
ss
test
or
sub
ss
test
mov
aaa
imul
jb
xor
push
outs
push
mov
mov
add
inc
dec
aaa
test
cmps
aaa
mov
sbb
dec
sbb
test
dec
int
fsubr
hlt
dec
adc
adc
dec
aaa
cmps
aaa
push
add
sbb
lods
mov
fwait
add
mov
push
xor
aaa
and
or
pop
xchg
addr16
jno
add
into
push
outs
jl
mov
call
mov
add
or
push
add
push
inc
inc
mov
and
bound
mov
push
add
sbb
test
aaa
jae
in
add
mov
(bad)
and
popa
aaa
pop
jge
ror
jmp
aad
outs
scas
push
(bad)
push
loop
clc
push
dec
dec
mov
push
mov
pop
push
sbb
shl
pop
test
add
xchg
and
cmp
pop
js
inc
add
or
push
push
push
push
adc
in
loopne
pusha
add
add
ss
inc
xchg
test
add
enter
shl
aas
ds
adc
push
jmp
inc
pop
or
jmp
cmp
pop
mov
add
pop
adc
add
out
push
cwde
mov
mov
dec
sub
fadd
dec
add
adc
sub
push
(bad)
and
push
pop
mov
push
out
push
daa
add
sub
shr
movs
les
xchg
jno
sbb
outs
pop
pop
jno
xchg
jmp
fist
inc
add
inc
dec
push
cmp
mov
fld
pop
push
jp
nop
push
inc
clc
in
adc
push
inc
mov
sbb
add
inc
and
mov
push
xor
inc
push
in
cmp
jecxz
adc
push
push
inc
jno
mov
outs
and
mov
jl
jmp
inc
aam
mov
and
push
loop
jb
push
adc
sahf
sbb
movs
xchg
fmul
cmp
(bad)
jp
test
dec
mov
cwde
xchg
test
jbe
add
mov
add
push
arpl
imul
outs
jo
mov
and
psubb
pop
and
je
sbb
or
inc
jne
jle
ins
aaa
lods
popa
js
sub
cmp
nop
adc
jno
scas
lods
aam
cmp
and
adc
push
push
loopne
test
sti
ja
and
add
arpl
cwde
dec
xor
jae
xor
jecxz
loopne
or
fs
outs
popa
dec
in
xchg
inc
sub
sar
jo
out
sub
fs
addr16
push
ja
cmp
mov
aad
je
stc
(bad)
jns
or
dec
jnp
pop
test
dec
jne
add
or
ja
cwde
and
pop
mov
jae
pop
fwait
adc
out
popa
sub
cmp
add
nop
or
or
or
add
adc
cmp
xlat
add
push
(bad)
int
inc
sbb
dec
add
out
or
push
pand
xor
cdq
lods
jbe
sbb
mov
or
rol
adc
jne
out
cwde
mov
mov
and
push
pop
pop
xor
iret
cmp
mov
cmp
or
adc
aad
cmp
push
and
adc
xlat
(bad)
push
xchg
push
es
lods
push
add
push
add
fwait
add
jge
call
cmp
pop
popa
cmp
and
and
imul
and
xor
push
cld
add
or
outs
imul
sar
jmp
cmp
or
sub
jle
(bad)
or
ror
or
sub
div
gs
xor
jmp
xor
xor
xor
push
leave
(bad)
lds
inc
jmp
imul
mov
bound
mov
fs
fs
xchg
sub
push
aaa
pop
mov
dec
mov
add
jmp
sub
push
inc
push
and
or
aas
cmp
sbb
mov
push
mov
scas
push
inc
inc
jns
mov
inc
or
test
or
sahf
mov
ret
ds
outs
or
ja
lock
loope
or
pop
fcmovb
out
aaa
js
pop
push
dec
bound
or
mov
addr16
fcom
test
imul
adc
call
mov
loope
inc
push
scas
add
cli
mov
sbb
aas
dec
ret
push
adc
stos
pop
jbe
call
add
xchg
rcr
popw
shr
fimul
fwait
xchg
pushf
out
and
xor
fsub
push
inc
outs
jne
inc
cli
outs
xchg
scas
bound
loop
rol
xor
dec
push
cmp
stos
xor
mov
cmc
(bad)
into
and
sub
shl
lds
mov
ins
bound
call
xor
or
cmp
data16
cmp
sar
test
sub
jg
sub
push
push
(bad)
bound
daa
fwait
cwde
scas
add
jns
sar
arpl
aas
lea
pusha
imul
pop
ins
mov
scas
xor
pop
dec
xor
aaa
mov
aaa
add
sub
das
dec
pop
add
and
lea
cwde
jle
push
push
mov
mov
add
push
push
add
pop
dec
jge
jg
call
add
call
pop
adc
pop
int3
(bad)
(bad)
ja
xchg
push
mov
cmp
mov
jne
fidivr
cdq
push
mov
push
dec
aam
xlat
popf
add
push
aam
es
pop
inc
sbb
fadd
mov
and
les
iret
neg
(bad)
mov
add
add
adc
test
and
cmps
call
push
mov
mov
mov
mov
(bad)
fdivr
idiv
adc
mov
push
mov
push
push
push
mov
mov
xor
push
pop
es
mov
mov
mov
mov
jo
inc
cld
mov
test
push
lds
mov
std
mov
xchg
xlat
adc
xor
mov
aaa
cs
adc
pop
pop
mov
push
jmp
jbe
pop
ret
mov
mov
pop
pop
pop
pop
pop
ret
nop
mov
call
pusha
pop
or
push
add
repnz
xor
lods
cmp
push
or
adc
adc
(bad)
std
fstp
push
cmp
je
pop
inc
sbb
push
sbb
leave
and
dec
and
adc
iret
js
aam
cli
lock
jns
nop
cmp
or
jnp
sar
mov
cs
pusha
or
ret
jne
aaa
adc
xor
lock
hlt
xchg
xor
mov
mov
mov
ja
push
mov
cs
jb
clc
mov
aad
adc
fs
mov
push
xor
movs
sti
mov
inc
hlt
popa
loop
sbb
iret
ret
jbe
pusha
add
mov
arpl
out
rol
push
sbb
shl
into
adc
mov
hlt
push
push
jno
cld
js
push
sbb
and
in
jp
aas
push
cmp
je
je
cld
and
das
shl
adc
jle
adc
aas
adc
loopne
inc
fcomip
push
xor
(bad)
add
cmp
ja
loopne
pop
xchg
push
pusha
fs
xor
cmp
sbb
cmp
shl
int
jmp
loope
push
mov
dec
adc
mov
fisttp
aaa
sub
lock
ja
std
add
ja
pop
pop
cld
sub
push
add
pop
and
pop
add
mov
cli
jns
jle
(bad)
xlat
push
je
nop
stos
inc
call
(bad)
fmul
add
adc
inc
js
neg
loop
gs
xlat
pop
xor
sub
ret
adc
add
add
push
push
arpl
inc
ins
ins
outs
ja
xor
ins
jo
loope
jnp
ror
ja
ror
add
jb
out
arpl
ror
jecxz
jns
mov
or
popa
xor
mov
ja
out
pop
mov
and
adc
arpl
outs
xor
add
repz
test
or
and
ret
mov
cmp
ins
sub
add
add
ins
add
ss
loopne
add
ror
dec
add
imul
add
cmp
pop
popa
out
movzx
mov
scas
adc
mov
pop
sub
mov
inc
mov
jne
das
loopne
in
and
sbb
push
fs
ror
not
push
loope
cmps
mov
cmp
xchg
loope
sub
jl
je
adc
add
mov
adc
arpl
inc
dec
add
out
and
pop
and
adc
nop
mov
push
push
movhps
push
and
add
cmp
loopne
push
add
ins
je
test
lahf
sbb
xchg
jb
inc
add
test
test
iret
jl
cli
or
push
enter
in
mov
lods
push
ins
ret
mov
mov
or
cld
add
fsubr
rcr
lods
lss
or
loope
jmp
fisttp
dec
in
lock
add
mov
ss
mov
(bad)
out
pop
cmp
inc
add
outs
mov
lahf
mov
add
add
jae
push
jle
stos
loopne
mov
push
hlt
pop
and
sub
lahf
add
pusha
pop
jns
out
lahf
lea
and
mov
mov
push
or
pop
jmp
inc
jae
ins
dec
push
loopne
icebp
push
lds
push
popa
pop
cmovno
int3
gs
cli
lock
mov
movs
push
xchg
ins
dec
mov
mov
test
adc
fld
movs
sbb
popa
gs
pushf
int
or
sbb
inc
aas
movs
xor
lock
movs
inc
idiv
pop
lods
mov
jno
int3
(bad)
push
popa
jae
ja
jb
mov
xchg
or
add
movs
jae
jmp
push
push
inc
mov
jne
jmp
inc
pusha
and
push
adc
or
sub
push
mov
jnp
ja
push
inc
inc
sbb
push
gs
jl
sub
mov
or
(bad)
lock
inc
test
js
inc
or
cwde
dec
cmps
mov
mov
or
fisttp
add
inc
jne
pop
inc
push
pop
push
push
add
rol
aad
pop
or
popa
sti
dec
gs
xor
mov
loope
xor
cwde
pop
adc
or
outs
dec
and
sti
sub
push
and
jge
push
push
outs
mov
outs
shr
xor
pusha
add
or
imul
loop
sub
and
movs
aas
xchg
push
push
bound
adc
stos
movs
mov
adc
mov
add
or
push
add
dec
jae
and
retf
and
inc
and
(bad)
fsub
or
push
or
sub
push
bound
enter
(bad)
and
unpcklps
push
ss
or
or
dec
mov
xchg
outs
adc
add
sbb
(bad)
mov
orpd
and
sbb
and
push
mov
or
test
test
jnp
stos
outs
scas
dec
pop
pop
lods
push
mov
retf
in
loope
push
pop
push
push
enter
nop
dec
(bad)
add
pushf
push
push
nop
add
clc
sub
inc
div
cli
push
imul
sub
clc
in
push
out
dec
outs
sub
es
inc
add
nop
daa
xchg
pop
bound
dec
pop
cmc
pushf
ds
ret
cmc
xor
and
jne
push
mov
movs
int3
nop
dec
xor
scas
sbb
pusha
imul
out
or
ret
shl
add
pop
in
push
inc
and
or
xchg
push
std
sbb
push
iret
pop
xchg
enter
mov
lea
xchg
int3
mov
das
push
outs
push
pop
sbb
mov
dec
and
or
in
mov
fmul
or
push
mov
lods
lahf
call
fstp
adc
shl
cld
adc
dec
and
or
enter
sub
clc
push
pop
jb
call
xchg
mov
pop
(bad)
or
pop
loop
add
cmovbe
in
mov
xor
idiv
sar
ror
inc
and
lods
fdivr
push
(bad)
sbb
das
or
das
or
dec
mov
pusha
ins
ins
sub
(bad)
lahf
xor
add
push
and
scas
xchg
inc
shr
cmps
or
dec
add
push
add
mov
cmps
iret
or
xlat
sbb
or
adc
test
or
add
mov
ss
or
and
sub
mov
mov
sub
popa
cmc
cs
push
pop
mov
dec
mov
inc
js
pop
inc
cmp
push
test
mov
mov
add
xor
mov
sar
lods
call
inc
lods
or
daa
jge
pop
add
pop
inc
xor
or
sbb
movs
jge
add
sub
push
pop
test
jbe
or
leave
lods
fs
mov
sub
movs
fidiv
push
fdivr
mov
pushf
sub
mov
js
clc
ins
push
dec
dec
add
cmc
add
dec
jo
pop
xchg
cmps
add
outs
jb
nop
test
mov
data16
das
add
clc
xor
or
not
add
dec
mov
loopne
or
add
inc
scas
or
push
inc
loopne
jo
mov
sbb
xor
fucomi
(bad)
jns
sbb
ror
sbb
das
mov
pandn
xchg
xchg
mov
adc
nop
call
or
sbb
xlat
xchg
add
pop
or
popa
mov
push
dec
lahf
pop
adc
test
leave
in
retf
mov
or
push
adc
push
pop
test
outs
push
jo
adc
mov
pop
pop
add
or
punpcklbw
push
outs
inc
ins
js
pusha
ja
(bad)
sbb
pop
add
mov
sbb
or
sbb
scas
sub
jo
(bad)
sbb
or
pop
call
add
aas
lds
outs
movs
sahf
test
add
adc
test
sbb
ja
xor
dec
dec
sub
xor
or
sti
jo
xchg
pop
xor
cmp
popa
rcl
mov
fcom
lock
xchg
inc
(bad)
xor
adc
jo
gs
pop
data16
or
jae
dec
retf
sbb
or
sub
outs
ins
ins
or
adc
sti
nop
and
pop
xchg
sbb
cmc
cmp
into
add
add
add
inc
cmps
or
sar
ins
mov
or
sahf
add
inc
cmp
push
pop
sub
ins
or
rcr
sar
jb
cdq
add
mov
test
aas
and
(bad)
retf
mov
xchg
dec
in
inc
cmovns
lock
inc
pop
push
popa
ja
outs
mov
xchg
sbb
mov
push
or
inc
jb
sbb
mov
hlt
loopne
sub
faddp
xor
test
cmps
push
out
jae
loopne
adc
add
enter
push
imul
add
lea
test
js
fnstenv
mov
pop
inc
jne
lar
xchg
xor
push
arpl
stc
push
lock
and
pop
mov
retf
inc
shl
inc
retf
pusha
pusha
ja
jmp
fisubr
and
mov
mov
add
dec
add
push
pop
pop
add
shl
pop
adc
adc
pop
cli
dec
loopne
cmp
dec
jae
fcom
lds
fcomp
add
adc
cmps
arpl
cs
or
repz
cmp
sar
retf
or
xor
push
or
outs
mov
mov
shr
add
loope
jmp
outs
or
push
pop
pusha
xchg
cmp
pop
int
js
add
pop
enter
js
cmp
mov
push
add
or
sbb
push
fisttp
mov
mov
and
mov
and
scas
and
cwde
ins
push
jbe
in
xchg
add
lahf
xor
mov
int
jae
xor
mov
gs
and
add
loopne
push
shr
icebp
sub
push
fild
add
mov
loope
cmps
dec
and
add
data16
or
jge
add
sbb
xchg
(bad)
push
in
inc
movs
rol
mov
pop
xor
add
aas
mov
add
cmp
inc
mov
or
push
and
xchg
ret
or
in
movs
add
or
jp
push
mov
test
mov
clts
add
mov
or
or
out
add
mov
cmps
prefetch
jmp
push
xchg
fisttp
add
cvttps2pi
add
fcmove
or
add
adc
and
loope
mov
in
xor
inc
xlat
fcom
shr
and
fmul
push
ret
imul
push
inc
scas
push
xchg
scas
cwde
mov
mov
mov
or
aaa
sub
fistp
jae
or
test
or
dec
aad
add
adc
in
add
or
fisttp
dec
or
pop
pop
out
mov
push
fisub
mov
add
push
xchg
sub
mov
jl
stc
stc
int3
imul
dec
lea
or
pop
scas
jmp
sbb
mov
data16
pop
cmp
shr
les
xchg
adc
adc
pop
push
sbb
inc
dec
int3
shl
mov
and
rcr
outs
jae
aas
pop
aaa
pop
adc
add
and
in
xchg
xor
add
outs
xor
ins
jo
fld
mov
sbb
or
push
fmul
mov
xor
sqrtps
push
inc
sbb
and
adc
stc
dec
rol
pop
jne
mov
pop
mov
dec
add
inc
je
push
sub
test
cmovo
es
jmp
test
sbb
or
fisttp
jo
mov
add
cmps
adc
sbb
mov
or
cwde
jge
outs
loop
push
ins
add
dec
imul
adc
adc
mov
push
pop
mov
sbb
aas
and
pop
adc
es
das
out
inc
lock
adc
mov
jnp
dec
fist
push
in
xor
sub
scas
jge
loop
push
or
push
cwde
push
fdivr
not
iret
or
push
add
into
push
sbb
loopne
shl
add
sbb
sbb
fst
jge
cmps
das
dec
pusha
je
pop
or
or
push
or
daa
lock
cmp
inc
or
test
movs
mov
out
add
sahf
inc
dec
pushf
inc
daa
imul
adc
dec
adc
bound
scas
scas
push
sub
sbb
inc
inc
pop
ret
cmp
cmp
or
mov
jno
lods
or
sbb
scas
sbb
movaps
xchg
loop
pop
call
and
in
or
loope
fnstsw
adc
pop
add
or
and
add
enter
mov
xchg
leave
pop
cmp
js
mov
mov
xlat
call
inc
push
xchg
cmovl
or
push
mov
nop
repz
or
scas
inc
add
jae
popa
pop
jae
sbb
mov
out
mov
stc
add
call
jo
sbb
cwde
pusha
xchg
or
push
jp
inc
dec
mov
mov
inc
push
fwait
lock
sbb
and
ss
push
je
inc
mov
popf
push
jle
sahf
inc
inc
dec
jne
popf
inc
jne
jmp
pop
pop
cmp
or
(bad)
arpl
nop
dec
mov
push
bound
jne
aad
adc
inc
or
or
inc
pop
retf
shr
mov
xlat
(bad)
xchg
push
fcom
retf
push
aam
pusha
imul
das
lea
pop
add
xlat
jo
loopne
rol
mov
add
dec
push
movs
movs
pop
jge
add
push
push
jl
mov
out
mov
cmps
push
mov
mov
cli
dec
cwde
mov
jnp
mov
pusha
ds
xchg
pop
(bad)
adc
pshufw
imul
sbb
and
je
jg
pushf
test
mul
in
add
shr
jle
xor
inc
jne
cmp
in
or
sbb
cmps
pop
outs
jmp
add
pop
or
jo
aam
mov
inc
cli
inc
std
cld
xor
ret
push
outs
xchg
or
inc
(bad)
arpl
push
das
dec
add
mov
or
push
mov
jno
xor
movs
cmp
adc
push
loope
mov
ins
mov
fbstp
js
inc
stos
dec
call
xchg
xor
nop
adc
jbe
inc
inc
out
pop
arpl
pop
pushf
cmps
xor
adc
nop
cmp
imul
inc
mov
mov
add
inc
test
dec
gs
iret
repz
cmp
dec
jl
inc
pop
ss
into
or
cmp
sbb
ss
clc
cmp
lods
shl
and
sbb
int3
sub
inc
push
fmul
outs
add
outs
or
jo
ret
mov
aam
or
mov
or
mov
adc
lds
cmp
cwde
loopne
ins
ins
cmp
inc
adc
push
retf
xchg
xor
xchg
mov
jae
adc
mov
dec
sub
jnp
pop
(bad)
jle
(bad)
mov
lock
lock
fadd
in
adc
test
add
fadd
cmc
sbb
cmp
cmps
rcr
popa
add
adc
popa
push
in
inc
inc
add
repnz
lea
hlt
fdiv
pusha
pop
mov
fist
and
loopne
arpl
and
mov
popa
add
sub
jge
inc
hlt
and
rcl
and
sbb
jg
scas
push
cwde
or
or
cmps
sub
xor
stos
push
xor
test
sub
sub
or
push
and
push
outs
sbb
aaa
inc
lahf
and
das
add
stos
pusha
push
mov
bound
(bad)
push
xchg
jnp
and
add
ficom
ret
out
push
pop
stos
adc
lahf
xchg
mov
aad
push
in
daa
mov
pop
mov
retf
enter
inc
mov
xor
fs
leave
jle
add
dec
test
repnz
adc
dec
call
inc
mov
test
aas
sub
and
(bad)
xor
clts
inc
dec
ja
lods
daa
add
push
and
pop
out
jo
pusha
mov
sub
retf
mov
cmp
outs
adc
int3
int
popf
inc
pop
and
dec
sub
adc
xor
inc
pop
add
fadd
pop
push
mov
shl
or
int
aas
inc
popa
push
pop
or
add
rol
push
pop
cmps
out
(bad)
inc
push
or
add
sbb
xchg
inc
gs
ret
add
lods
inc
test
out
dec
or
bswap
bswap
int
leave
inc
push
or
pop
out
or
add
xor
out
arpl
rol
and
movs
les
or
cmp
inc
pushf
into
call
inc
fwait
cmove
and
dec
mov
pop
paddd
inc
and
cmp
test
test
call
cmp
xor
jg
or
and
hlt
jb
add
xchg
and
and
mul
aad
and
and
and
xchg
(bad)
cs
jl
sbb
and
xchg
(bad)
pop
inc
or
fld
test
loop
jo
xor
or
fisttp
adc
sub
xor
sub
push
dec
mov
add
mov
pop
cmp
pop
adc
dec
fst
clc
into
jp
test
das
adc
out
mov
test
cmp
(bad)
out
mov
and
pop
(bad)
test
in
inc
out
push
add
out
popf
mov
mov
cwde
add
push
add
mov
das
mov
mov
add
pop
je
sub
inc
fbstp
out
pop
(bad)
xsha1
cmps
dec
or
mov
sub
cmp
push
jg
or
mov
push
mov
mov
xchg
loop
xor
sub
xchg
scas
mov
inc
fwait
mov
inc
pusha
push
sbb
dec
pop
push
nop
shl
imul
push
inc
inc
fdiv
ins
add
(bad)
in
add
popa
xor
daa
pop
add
enter
pop
adc
and
push
imul
xchg
mov
dec
cmp
inc
sti
push
mov
sbb
xor
ror
fwait
or
xchg
or
add
mov
push
pop
loope
and
pop
fst
lods
xchg
sbb
sbb
cmp
add
(bad)
popa
adc
punpckhwd
sar
movs
or
mov
sub
xor
or
ret
rcr
fisttp
mov
ss
inc
add
sbb
xor
sbb
push
stc
jo
test
mov
sar
inc
sub
cmp
test
scas
adc
push
retf
add
(bad)
pop
mov
outs
sbb
scas
cs
stc
push
outs
pop
and
sbb
or
scas
sbb
or
les
or
add
cmp
lock
adc
and
cmp
pop
out
or
pop
sbb
sub
(bad)
js
inc
dec
or
mov
jmp
lods
fiadd
add
(bad)
jge
jo
inc
sub
push
mov
jno
pop
dec
and
enter
outs
xor
pop
add
push
push
pop
push
rcr
xchg
add
repz
jmp
xchg
sub
test
or
test
test
in
lods
adc
sub
enter
shl
mov
enter
xor
add
sbb
enter
mov
adc
and
pop
jecxz
fcom
inc
push
inc
jb
popa
jns
ins
cmps
or
jae
mov
jbe
push
stos
inc
add
sbb
sub
ds
sub
outs
cmps
add
push
aas
adc
mov
xlat
cmp
xchg
mov
test
stos
jae
mov
call
mov
mov
or
mov
and
fisttp
add
adc
mov
jo
stos
adc
out
cmp
pop
shr
push
call
mov
cmps
test
push
add
xor
ins
outs
xlat
mov
push
std
add
add
aaa
call
push
dec
dec
ja
xor
jg
int
add
sbb
jno
cmps
add
nop
cmc
xchg
add
loope
sub
bound
inc
jne
clc
sbb
loop
mov
mov
or
pop
sub
inc
push
(bad)
and
(bad)
ss
pop
mov
jg
les
jne
ror
dec
push
out
lock
bound
and
leave
arpl
cmp
or
sbb
sub
icebp
sub
xor
ror
cdq
dec
or
add
inc
jo
inc
sub
lds
cmp
scas
fcom
clc
mov
cmp
sub
mov
pop
push
xor
push
jle
(bad)
dec
mov
mov
pop
xor
adc
mov
sbb
jle
push
jne
je
test
lock
adc
loopne
in
inc
push
adc
and
cmp
inc
mov
adc
cmp
adc
adc
fist
repz
fsub
and
push
adc
(bad)
rcr
retf
add
gs
inc
push
sbb
pop
mov
dec
out
dec
ja
pop
cwde
das
mov
xlat
jnp
sbb
lock
ror
mov
add
icebp
cmp
sbb
lahf
addr16
add
mov
fstp
add
pop
inc
add
sahf
loop
loop
push
adc
mov
cmp
and
or
and
or
mov
sbb
int
inc
sbb
mov
and
or
jge
add
or
std
lods
lods
or
mov
scas
add
inc
pop
dec
arpl
pop
and
cmp
(bad)
add
add
js
dec
test
sbb
mov
add
push
inc
mov
inc
repz
arpl
mov
repz
test
fdiv
lock
push
lock
sbb
xor
or
push
xchg
add
fscale
inc
dec
mov
dec
je
mov
add
push
jne
push
add
add
loop
loope
add
dec
jo
clc
hlt
jmp
lock
das
imul
or
sbb
add
inc
xor
sub
push
mov
fidiv
mov
inc
add
call
mov
dec
dec
jmp
dec
pop
outs
fmul
pop
add
push
nop
int3
out
mov
pop
jmp
mov
push
and
div
mov
push
mov
sbb
in
lock
pop
sub
or
jmp
dec
add
fsubr
adc
std
shl
cmp
sub
jmp
js
adc
movs
sub
ins
mov
ins
pop
or
test
or
setle
into
leave
inc
jg
push
dec
clc
add
push
or
out
sahf
pushf
fsub
rcr
nop
int3
or
dec
dec
dec
inc
dec
xchg
in
lock
daa
daa
and
ror
xchg
xchg
icebp
inc
mov
leave
leave
leave
enter
mov
in
fs
repz
jb
repnz
sbb
push
jp
jnp
jb
aad
cmc
aas
xcrypt-ctr
cmps
(bad)
into
movs
test
pop
add
and
push
mov
es
ss
cmp
fs
jno
jecxz
stos
stos
sub
aaa
dec
or
or
inc
daa
add
cli
jnp
rcr
in
jno
or
push
xchg
cmps
xor
mov
shr
xor
jb
sbb
mov
paddsw
dec
jae
push
jmp
xor
push
in
push
cmp
sti
xor
cmp
add
fs
cmps
adc
inc
mov
rcr
jmp
ins
jne
cmp
ds
test
bound
or
lods
aad
test
or
test
stos
idiv
loop
sub
jbe
stos
shr
adc
adc
mov
movs
rol
imul
enter
dec
and
or
ins
adc
xchg
dec
xor
or
add
or
dec
push
inc
adc
lea
fdivr
add
gs
nop
inc
call
popa
arpl
xor
sub
adc
loopne
into
mov
jae
imul
loop
mov
mov
push
or
jno
jno
mov
inc
pusha
mov
sub
add
fisub
mov
mov
or
push
inc
ret
jmp
inc
jle
sbb
xor
sbb
or
in
sub
cwde
cmp
pop
mov
daa
sar
sbb
stc
pop
mov
add
shl
mov
in
dec
pop
xor
sbb
sub
cwde
sbb
push
out
add
xor
add
jae
dec
jg
jle
movs
mov
add
popa
pop
push
push
je
and
mov
push
adc
add
add
dec
pop
lods
inc
ret
aaa
test
je
imul
call
retf
loope
popw
jmp
add
imul
mov
in
cdq
add
inc
or
shl
and
loop
pop
xlat
mov
outs
shr
cld
inc
shl
inc
xor
dec
add
inc
or
xchg
jb
dec
or
test
shl
dec
push
mov
xlat
mov
and
add
nop
dec
test
ds
jae
mov
push
jb
ins
mov
jae
xchg
xor
sbb
xor
mov
xor
adc
pop
mov
out
mov
scas
mov
xor
in
inc
add
adc
lea
mov
add
pop
mov
scas
mov
pop
add
sbb
fidivr
or
mov
sub
and
pusha
adc
push
mov
aad
popa
mov
je
and
jmp
imul
sbb
outs
or
cdq
inc
ret
add
movs
ss
adc
inc
das
outs
imul
hlt
sub
add
movs
xchg
jnp
movnti
fst
pop
add
pop
pop
addps
jae
xchg
lahf
xchg
mov
sbb
movs
dec
repz
push
inc
xchg
push
push
or
cmp
pop
inc
adc
das
mov
sbb
cli
pop
shr
pop
or
hlt
mov
xlat
loopne
(bad)
and
pop
cmps
adc
ds
fild
das
mov
daa
leave
sbb
mov
das
mov
inc
xlat
into
sbb
iret
add
mov
or
or
dec
fnsave
mov
fcomp
add
xchg
sti
scas
mov
adc
das
push
add
mov
adc
add
out
stos
test
shr
push
mov
das
stc
sub
pop
inc
add
pusha
das
and
push
(bad)
call
add
inc
adc
or
das
and
xlat
loopne
jmp
xor
dec
push
xlat
jo
adc
loopne
ficom
imul
inc
sub
lahf
rol
add
mov
fadd
xor
and
push
int3
int
add
ins
cs
cmps
stos
add
aam
movs
sub
into
das
retf
xor
adc
pop
push
and
das
test
or
adc
out
mov
das
stos
add
add
das
fisub
cmps
add
add
mov
out
mul
mov
leave
push
cs
call
mov
pusha
je
fcom
shl
nop
cmp
or
mov
push
(bad)
add
das
das
outs
test
pusha
aam
test
or
sbb
xlat
aaa
pop
test
cmp
sbb
push
cmp
adc
das
inc
test
xchg
sbb
outs
loope
dec
mov
and
add
lock
sub
xchg
cmc
das
dec
add
mov
pusha
call
push
scas
sbb
hlt
pop
and
sub
and
push
add
or
push
test
imul
push
das
xor
imul
adc
pop
pop
add
setl
int3
xchg
fst
add
ja
cs
cs
push
shl
movaps
fs
in
mov
sbb
jb
out
and
pop
mov
cmp
inc
sahf
pushf
mov
dec
dec
dec
dec
lods
shl
or
daa
daa
and
adc
ss
mov
daa
into
enter
test
pop
sub
mov
(bad)
cmove
test
mov
test
push
ss
iret
push
pop
xchg
jge
repnz
loopne
xor
dec
or
rol
adc
test
das
add
sbb
push
sub
pop
(bad)
scas
das
rol
fs
or
jle
sbb
das
inc
pop
adc
scas
push
cmp
out
inc
test
push
or
push
outs
or
or
das
pusha
adc
adc
inc
adc
das
mov
movs
shl
pop
adc
push
add
xor
push
xchg
add
das
mov
adc
fwait
mov
add
call
les
adc
or
or
das
js
jo
je
iret
dec
add
adc
or
mov
sub
inc
mov
shr
add
ss
add
pop
gs
stos
sbb
ja
jb
or
js
sbb
mov
scas
sub
mov
das
int3
scas
das
cmp
adc
or
ins
pop
mov
das
inc
xchg
pusha
enter
dec
out
test
cmp
pop
jnp
movs
add
pop
and
dec
push
sub
mov
push
pop
das
cmp
aaa
mov
das
sar
push
push
das
imul
push
or
sub
sub
adc
cmps
xor
adc
add
xor
or
imul
mov
jge
inc
push
add
push
add
ins
das
adc
or
and
add
das
dec
push
rcr
(bad)
mov
mov
mov
and
pop
imul
add
mov
mov
add
pop
pop
in
inc
add
sbb
sbb
add
das
aaa
push
mov
jo
mov
fnsave
not
sbb
cmp
mov
mov
push
das
sbb
ins
push
adc
mov
enter
adc
xor
adc
push
push
dec
add
bound
ds
test
push
mov
out
dec
ud0
popw
jbe
test
sahf
add
in
push
mov
fisubr
or
inc
ja
out
pop
ja
mov
cmovo
mov
sbb
inc
lods
sti
and
mov
sar
adc
mov
push
arpl
int
dec
push
sub
and
sub
into
cmp
mov
aaa
or
pop
sub
pop
in
or
and
and
out
neg
les
push
sub
push
das
push
push
(bad)
icebp
xchg
ds
addr16
push
add
rcl
test
push
inc
mul
mov
mov
pushf
ret
rcl
pop
and
pop
adc
ss
pop
fmul
sbb
in
test
and
push
and
test
or
ret
ins
cmp
fisub
int3
dec
adc
fsub
loopne
mov
add
push
aam
jns
out
xchg
loop
pop
adc
mov
stos
ret
inc
push
gs
fs
sbb
pop
mov
or
mov
cmp
fild
dec
outs
stos
push
fs
push
popa
imul
mov
inc
test
scas
push
pusha
aam
rol
sub
or
shr
pop
clc
rdmsr
adc
ret
leave
leave
lods
(bad)
xadd
and
push
jne
mov
mov
pop
rcl
jmp
test
sbb
ror
lock
or
jne
out
xchg
pop
ins
rcr
cwde
inc
jno
ret
cmp
xor
in
mov
out
imul
add
mov
add
cmp
lock
das
test
add
gs
jns
cmp
pop
and
shl
sub
movs
dec
shl
imul
push
imul
mov
mov
mov
cmps
pop
xor
mov
mov
scas
dec
or
test
outs
mov
pop
ja
aas
in
mov
cmp
pop
mov
cwde
fimul
inc
push
push
sub
lea
inc
push
inc
inc
mov
retf
push
popa
add
mov
lock
ret
cdq
add
loopne
pop
pop
add
jb
mov
add
add
idiv
lea
add
loop
bound
inc
inc
dec
sbb
pop
pusha
ror
adc
retf
or
adc
call
mov
lea
mov
enter
ss
pop
xchg
inc
add
shl
inc
jo
sub
mov
mov
push
mov
pop
adc
add
and
stos
daa
xor
sbb
sar
xor
add
pop
add
sbb
call
loop
jge
push
push
push
jg
push
mov
mov
add
loop
repnz
push
(bad)
mov
lds
push
inc
jns
and
hlt
aad
inc
add
ffree
rcl
out
xor
fwait
inc
adc
dec
ss
cmp
sub
cmp
add
mov
pop
aaa
xchg
mov
jo
sbb
dec
push
inc
cmp
inc
pop
mov
bound
ins
rcl
pop
iret
mov
dec
out
dec
ret
push
mov
lock
add
(bad)
inc
jo
sub
push
aas
push
or
mov
add
xorps
pop
mov
push
cwde
pop
aas
jne
push
pushf
popf
mov
and
out
mov
dec
jb
mov
push
add
or
push
pop
push
pop
and
lahf
repnz
not
call
push
adc
mov
wbinvd
pop
repz
aad
xchg
push
cmp
jbe
neg
in
push
cld
pop
push
hlt
es
push
add
push
xchg
rcl
push
xchg
push
add
xor
pop
sub
xchg
or
sub
jo
mov
int
arpl
aas
or
mov
cmp
inc
sub
rcl
stc
xor
or
inc
outs
pusha
test
je
jns
mov
pop
add
pop
sub
add
and
dec
fimul
das
dec
and
or
pushf
out
mul
xor
jg
push
jl
test
pop
cwde
jne
dec
mov
(bad)
lea
clc
das
mov
and
sbb
mov
stos
fcomp
cmp
xlat
pop
in
dec
sbb
or
cdq
stos
call
cs
dec
das
add
sub
push
mov
movs
sub
loope
shl
pop
push
ss
inc
dec
inc
inc
jo
add
xchg
stos
popa
xchg
sub
imul
aad
xchg
mov
pop
popf
add
cld
pop
adc
and
inc
cmp
repz
pop
adc
adc
and
mov
ja
pop
mov
mov
mov
test
jmp
adc
push
xor
and
jg
push
sub
int
push
fadd
stos
add
jge
je
sbb
add
and
iret
cld
pop
sbb
ss
push
or
movs
ja
shr
adc
jmp
push
arpl
sbb
and
mov
jns
pop
inc
daa
fisub
retf
or
outs
mov
enter
aad
push
aaa
pop
bound
xor
sbb
fadd
dec
inc
sub
push
add
jo
scas
lea
xchg
scas
fimul
shl
shl
push
enter
mul
stc
das
nop
or
and
fs
repnz
add
push
mov
add
add
sub
bnd
push
aad
push
push
or
mov
retf
cmp
ror
cmp
neg
pop
add
push
pop
loope
pop
in
or
scas
mov
cli
aaa
retf
xchg
loope
push
or
jmp
inc
push
scas
test
daa
mov
(bad)
daa
in
push
jmp
and
sbb
aaa
and
or
adc
push
pusha
push
lock
mov
dec
add
jno
pop
cmps
add
xor
jmp
(bad)
mov
adc
or
sub
lahf
cmp
fucomp
mov
push
xor
gs
jnp
xlat
enter
xchg
sub
xlat
pop
out
(bad)
test
nop
sahf
(bad)
or
call
add
jae
push
stos
add
dec
aad
fst
popf
aam
jp
xor
add
push
and
call
loopne
jecxz
leave
sub
ror
int3
mov
push
inc
sub
push
outs
jp
daa
js
xor
iret
push
xor
fisub
cmp
hlt
add
ds
fdivr
push
adc
xchg
push
pop
daa
sub
inc
jnp
pop
mov
add
xor
or
xor
jo
out
sbb
mov
mov
push
inc
inc
jb
ja
push
sbb
dec
pusha
call
test
mov
pop
bound
std
xor
ret
sub
mov
push
mov
adc
fisub
popa
test
xchg
xchg
daa
daa
mov
jns
mov
or
ret
cmp
pmaddwd
xor
dec
inc
sahf
pushf
into
pop
xor
rcr
jo
mov
push
sbb
mov
pop
add
cld
nop
xor
cmps
rol
shl
or
packuswb
xor
or
mov
outs
aam
clc
add
xchg
ret
adc
or
mov
push
ror
js
and
or
sbb
xlat
fwait
add
add
lods
loope
add
fs
loope
scas
xchg
sbb
outs
clc
ds
or
xor
sar
pop
adc
mov
fld
add
or
out
imul
repz
cwde
push
xlat
sub
int
loopne
stos
sub
loope
mov
js
sub
inc
je
or
push
push
push
mov
and
sbb
pop
mov
xchg
out
jl
ret
test
jo
add
call
daa
sbb
mov
add
add
xchg
jae
add
test
xchg
imul
add
bound
push
(bad)
mov
mov
jmp
stos
sbb
and
out
xor
or
mov
aaa
add
xor
jmp
das
or
sbb
add
add
or
or
sbb
pop
fs
mov
cmp
cmp
jae
mov
and
sti
or
es
mov
inc
dec
lock
es
add
jp
adc
(bad)
push
jl
jbe
ins
sub
aam
dec
jo
in
test
test
popa
sbb
mov
add
stos
adc
or
add
shr
adc
add
test
push
add
pop
adc
movlps
cdq
fwait
adc
push
out
shr
imul
add
pop
mov
jne
test
mov
pop
iret
mov
cmps
jne
and
gs
pusha
sbb
sub
mov
or
mov
mov
push
inc
add
out
add
mov
in
add
add
pusha
cmp
cmp
push
mov
push
jg
jnp
lahf
mov
mov
xchg
lock
imul
inc
push
mov
and
(bad)
jns
inc
sbb
or
daa
and
loop
push
mov
sub
in
dec
stos
out
test
imul
(bad)
stos
dec
inc
sub
sbb
and
mov
mov
adc
in
sbb
add
cmp
push
test
test
or
adc
or
sub
int
(bad)
and
enter
push
sbb
adc
mov
add
adc
fiadd
add
adc
sub
pop
popa
adc
inc
jo
xchg
ret
dec
jge
add
adc
jno
push
cmp
mov
test
(bad)
(bad)
push
pushf
pop
mov
jp
push
mov
push
add
adc
pop
or
pop
push
xchg
push
(bad)
rcl
sbb
xchg
or
xchg
test
mov
cmp
mov
jnp
inc
cmp
or
cmps
xchg
mov
mov
add
push
add
pop
in
arpl
xor
in
shr
arpl
push
cwde
push
or
shr
push
pop
jno
adc
sahf
das
add
das
addr16
jmp
pop
aaa
clc
pop
jb
pop
or
mov
sbb
rcl
cmp
call
sub
fidivr
lock
cmp
dec
mov
add
lahf
repz
shl
and
lods
ret
inc
lahf
mov
pusha
add
loopne
gs
add
push
adc
pop
adc
int3
sbb
jge
nop
mov
dec
mov
bound
les
mov
inc
stos
or
enter
push
pop
ret
mov
pusha
xchg
aad
jns
jmp
les
add
add
movs
pop
add
les
xlat
js
or
push
aad
push
pop
xchg
xchg
out
push
aad
add
call
daa
int
fnsave
mov
int
push
jae
pop
inc
push
mov
shr
inc
sub
dec
test
pop
scas
lea
push
cmp
and
sub
in
mov
push
pop
lea
mov
adc
loopne
pop
aaa
test
fst
nop
lock
add
std
call
inc
sbb
and
mov
mov
mov
and
jns
rol
push
add
sub
test
bound
xchg
aam
das
cmp
jo
xlat
dec
mov
mov
jo
scas
mov
jecxz
popf
leave
push
(bad)
fwait
cmp
rcl
jmp
inc
ret
jo
scas
push
(bad)
or
add
lods
je
xor
add
jno
xchg
mov
add
pop
cmps
dec
add
mov
dec
dec
ret
pusha
jbe
xor
cmps
ret
rcl
fld
ror
enter
nop
sbb
cmc
xlat
dec
rcr
test
mov
pop
(bad)
xlat
push
push
adc
mov
adc
stos
sub
mov
cmp
dec
popf
int3
repnz
or
or
jns
cmps
dec
adc
test
add
mov
icebp
sub
test
aad
xchg
and
fcomp
pop
push
test
imul
addr16
add
push
das
das
or
cmp
pop
jmp
jo
das
mov
mov
test
dec
pushf
das
xor
test
das
inc
sbb
sub
das
xor
das
ret
adc
loopne
das
mov
leave
enter
jmp
call
cmc
mov
jb
jb
out
pop
jle
sbb
dec
addr16
out
xor
and
push
push
push
pop
push
mov
or
and
sub
into
or
adc
xor
jno
mov
or
jo
test
push
and
xor
test
add
or
push
test
je
adc
or
xor
cmps
add
fistp
xor
inc
bound
(bad)
(bad)
repz
and
push
xor
mov
faddp
fs
inc
cmp
push
pop
das
adc
sub
pop
add
dec
xor
loope
mov
or
and
inc
and
ins
xchg
loope
and
add
xor
rol
add
inc
and
lea
loopne
mov
xor
add
(bad)
les
adc
add
aad
pop
lds
jle
or
xor
push
pop
adc
xor
shr
sbb
add
mov
xor
xor
mov
or
shl
add
mov
ror
jo
pop
mov
add
jo
adc
stos
adc
and
inc
or
pop
mov
pop
add
pop
and
fisub
and
xchg
sahf
popa
fs
dec
sbb
dec
outs
outs
mov
mov
inc
pushf
rcr
sub
xchg
push
mov
jp
test
push
cmovb
pop
sahf
ror
adc
xor
push
jmp
loopne
and
xor
fadd
mov
inc
jg
lds
pusha
sbb
mov
sbb
jmp
lods
sysret
pop
push
retf
cmp
push
xchg
int
ins
xchg
push
mov
cmps
cwde
jne
fst
push
out
mov
pop
sbb
ss
out
lahf
jne
cmp
jge
sahf
in
mov
dec
fisttp
neg
ret
xchg
scas
or
in
test
jns
mov
push
and
or
push
mov
or
loope
xor
retf
and
rcr
sub
sbb
retf
out
adc
adc
jmp
adc
mov
das
add
push
adc
pop
push
inc
or
ins
ja
pop
sbb
and
fs
pavgw
pop
push
pop
inc
or
jb
daa
dec
mov
and
or
mov
shl
xchg
(bad)
ss
leave
cdq
add
or
(bad)
jno
in
cmp
pop
movs
mov
stc
das
nop
and
loope
(bad)
cmc
gs
data16
add
in
push
mov
mov
(bad)
mov
jmp
les
inc
jl
pop
and
test
mov
mov
adc
xlat
pop
shl
add
add
pause
pop
repz
mov
or
mov
pop
push
adc
cmp
das
pop
push
neg
loopne
fwait
outs
push
add
mov
or
aaa
cmc
sbb
mov
or
ret
jecxz
rcl
pcmpeqw
push
loopne
mov
jo
push
xchg
push
daa
or
mov
ins
adc
sub
push
or
pop
js
popa
add
push
mov
and
adc
pop
sbb
xlat
add
loope
cmp
dec
push
cmp
add
jno
retf
or
rol
add
add
and
push
fild
ja
arpl
imul
jl
nop
add
sub
sbb
jno
inc
loopne
mov
add
mov
adc
and
and
add
mov
mov
loop
mov
pop
test
(bad)
push
aas
jp
imul
pop
js
aad
scas
lds
cmps
push
inc
push
dec
outs
push
push
popa
or
aad
imul
daa
add
loopne
(bad)
leave
movs
mov
je
xor
jo
jae
loopne
int
pop
jb
sar
dec
and
mov
xchg
mov
movs
pop
lds
inc
add
pop
jns
xor
sub
mov
push
jo
mov
ror
xchg
jl
pop
mov
sub
push
add
inc
or
or
(bad)
stos
sbb
jae
pusha
jo
mov
mov
xor
rep
sub
ins
sub
sub
lahf
jns
je
sbb
fild
mov
icebp
dec
xlat
gs
ins
pop
pop
ins
test
or
push
add
mov
cmp
fsub
add
add
and
imul
jp
add
(bad)
xchg
fmul
jecxz
(bad)
dec
mov
adc
lahf
xor
lahf
mov
xor
push
push
cdq
test
xor
push
pop
dec
sub
add
pop
dec
dec
ret
or
(bad)
popa
push
psrad
sbb
xor
push
add
fstp
adc
mov
fs
das
stos
inc
inc
xor
test
push
adc
jo
add
add
push
scas
jb
or
push
push
test
dec
add
or
rcl
lahf
fbstp
mov
add
xor
push
pop
add
xchg
add
pop
add
test
aaa
ins
lahf
inc
jo
cmp
shl
push
sub
movs
push
mov
or
dec
call
aam
push
or
mov
sub
sub
int
dec
push
or
mov
or
addps
daa
into
leave
xchg
fbstp
push
pop
dec
data16
mov
loopne
outs
push
call
pusha
neg
push
pop
sub
push
mov
mov
push
cmp
aam
xor
jge
push
or
sar
or
jecxz
test
push
sar
loope
movs
or
mov
add
xchg
or
sub
shl
mov
fwait
mov
push
ret
cwde
inc
mov
and
adc
jl
adc
push
rol
sbb
jns
repz
out
mov
test
sub
mov
out
and
add
and
push
or
and
ins
push
dec
call
cmp
push
ret
nop
rol
pop
sbb
cs
test
(bad)
out
pusha
push
or
mov
pop
imul
add
mov
add
xchg
(bad)
adc
push
lods
sub
push
or
rol
pop
push
xor
stos
and
loopne
or
popfw
mov
stos
jno
retf
or
pop
inc
xor
adc
adc
cmp
jae
inc
lods
shrd
inc
lock
add
jae
fs
clc
jo
cmp
sub
(bad)
fdivr
pop
inc
or
cwde
cwde
fwait
or
inc
dec
or
in
mov
add
in
mov
push
shl
das
std
push
push
sub
sbb
push
pop
jge
popf
not
push
inc
add
or
inc
icebp
ret
lahf
push
ja
jae
imul
mov
call
or
(bad)
rcr
dec
rcl
out
cmps
pusha
adc
xor
test
jge
mov
cwde
rol
imul
jbe
cdq
adc
test
sbb
out
pop
iret
push
sub
add
mov
add
outs
imul
fcom
mov
pop
mov
mov
les
dec
sbb
and
add
sub
nop
mov
add
pop
sbb
mov
ja
lds
xlat
lea
scas
mov
enter
js
mov
cmp
iret
or
lock
mov
ucomiss
mov
mov
push
popa
arpl
jnp
xchg
add
xchg
sbb
les
xchg
daa
ror
(bad)
mov
pop
mov
pop
push
xor
cld
out
pusha
daa
pushf
int3
xchg
dec
inc
sub
push
outs
push
lahf
test
add
add
dec
imul
ret
sub
push
push
mov
aaa
jmp
dec
in
out
cmp
and
and
add
pusha
js
push
jne
xchg
push
and
cmp
aas
adc
xor
add
shl
xchg
aaa
or
(bad)
rol
xchg
loopne
xchg
aaa
inc
aaa
(bad)
cmps
adc
pop
or
je
push
mov
outs
dec
mov
mov
adc
setle
adc
or
add
xor
and
adc
add
jo
add
dec
movs
mov
mov
ins
popf
mov
shl
add
and
stos
jne
jbe
lods
jnp
cmps
int
mov
aaa
lods
shl
cs
or
push
inc
stos
lock
ins
imul
mov
add
test
mov
scas
pop
sbb
(bad)
dec
sub
cld
adc
(bad)
sysenter
dec
pop
movs
inc
sub
jae
and
je
dec
fdiv
fdiv
push
inc
xor
arpl
lds
push
(bad)
jge
nop
jle
mov
adc
jne
fld
icebp
push
scas
push
inc
in
jle
es
shl
add
mov
ror
mov
bound
inc
leave
mov
ret
das
fdiv
(bad)
popa
push
cmp
lock
sbb
adc
add
sbb
rol
(bad)
sub
and
and
adc
test
aaa
rol
neg
push
or
cmps
push
adc
sahf
jbe
or
out
mov
scas
mov
test
mov
inc
test
add
add
mov
xor
push
add
lahf
imul
xlat
and
dec
sub
xchg
or
sbb
sub
call
sti
mov
xor
fninit
fisubr
fimul
ret
or
vmwrite
xor
add
cwde
out
test
shl
dec
inc
sahf
inc
xchg
or
push
js
rcl
mov
xchg
xchg
mov
addr16
leave
pop
cmps
add
adc
pop
mov
inc
and
not
punpckhdq
jmp
shr
std
call
add
movs
js
ins
push
daa
dec
or
test
cmp
fdiv
loop
adc
cmps
jns
mov
add
ins
or
dec
cmovns
jle
movs
ins
dec
jae
call
adc
push
popa
jg
lds
xor
xor
pusha
cmps
or
sub
pop
mov
adc
mov
adc
out
or
sub
cmp
fldcw
jp
fsubr
add
or
add
or
jbe
scas
push
mov
ja
loopne
push
ja
inc
or
mov
xor
dec
enter
lods
pop
pop
cmp
out
or
mov
fs
retf
jno
or
xlat
pusha
or
dec
sbb
adc
mov
inc
(bad)
and
add
call
lds
inc
xor
jns
pop
inc
fadd
and
imul
or
add
lods
imul
jno
mov
add
pusha
add
imul
sbb
push
sbb
(bad)
in
fisub
add
push
inc
mov
daa
pop
mov
xchg
xchg
ss
sub
push
jle
sbb
sbb
dec
clc
push
or
cmp
jae
mov
sbb
shr
xchg
mul
xchg
pop
xor
sbb
xchg
xor
xor
or
ja
inc
rol
and
inc
jae
pop
shr
sbb
and
dec
add
add
mov
inc
nop
adc
pop
sub
ror
sub
out
adc
jo
sar
dec
or
pushf
scas
aaa
add
add
call
xchg
ins
loopne
dec
mov
sub
shr
imul
push
mov
mov
or
pop
xor
xor
sahf
adc
adc
fcmovbe
xor
inc
cmp
test
ins
or
jp
jns
pusha
or
adc
test
popa
mov
add
xchg
or
dec
rcr
dec
xor
add
inc
or
rol
pop
jmp
test
aad
pop
les
ror
sub
adc
inc
or
test
test
ficomp
xchg
mov
inc
cs
lea
fild
xchg
xchg
fnstcw
or
loopne
xor
add
rcr
inc
mov
and
fld
sbb
in
add
loopne
leave
mov
push
loop
(bad)
sbb
sbb
pop
ret
pusha
add
lea
sbb
aaa
adc
add
inc
fs
jb
sbb
mov
mov
cmps
add
sbb
pinsrw
cmps
sub
sbb
add
push
push
ins
adc
jo
aaa
lds
retf
dec
jae
je
dec
cmps
enter
or
call
mov
pop
sub
dec
push
mov
inc
js
jo
mov
jg
cld
cmps
push
mov
mov
aaa
fnstsw
nop
sbb
rcl
fisttp
jne
(bad)
daa
pop
add
pop
dec
or
lods
mov
loopne
shr
push
test
adc
test
lahf
mov
pusha
add
je
aaa
and
add
ret
aaa
mov
loope
in
adc
and
adc
push
nop
push
adc
xchg
icebp
aaa
add
add
add
or
bound
out
rol
aaa
inc
xor
xchg
cmps
cwde
out
cmp
xchg
pop
test
mov
add
pop
add
inc
xchg
mov
es
(bad)
adc
xor
or
aaa
sub
ror
add
push
dec
aaa
sbb
or
mov
ss
or
aaa
and
fwait
and
aaa
and
push
retf
aaa
inc
dec
add
aaa
shl
mov
aaa
dec
sub
aaa
push
ret
aaa
add
cmp
mov
push
inc
add
xlat
dec
dec
cmps
les
rol
mov
das
or
pinsrw
push
push
adc
gs
and
aaa
or
fmul
mov
push
loopne
mul
or
je
push
jecxz
popfw
test
aaa
cmp
mov
test
ins
add
shl
push
aaa
or
and
jmp
xchg
dec
jo
ret
pop
mov
cwde
jge
outs
fcomp
test
sub
ret
xchg
mov
add
das
xchg
fnstcw
out
push
cld
rcr
scas
cmp
dec
push
aaa
jo
mov
loopne
xor
popa
xor
or
aaa
test
rol
add
mov
mov
repnz
arpl
cdq
dec
cmp
jbe
ss
jno
ror
test
sub
punpcklbw
pushf
mov
add
pop
nop
fcom
popf
daa
daa
daa
and
daa
xchg
xchg
xchg
xchg
sahf
outs
xchg
mov
fld
lahf
cmp
in
leave
mov
xor
in
jns
push
mov
mov
pop
cmps
push
or
pusha
jnp
fisttp
aaa
add
sqrtps
pop
xchg
push
push
sub
dec
cmp
and
jo
add
les
ret
push
mov
xor
aam
push
sbb
sub
aaa
hlt
jle
xor
adc
test
dec
mov
dec
ins
push
mov
aaa
pop
outs
dec
shr
or
or
adc
jo
adc
je
aaa
lds
pop
adc
mov
dec
mov
xchg
or
cmp
add
je
xchg
sbb
push
leave
call
and
fs
aaa
pop
xor
pop
inc
inc
or
sbb
mov
adc
push
sub
xor
add
or
or
add
aaa
push
shl
clc
or
push
jae
add
xor
adc
or
xchg
aaa
mov
add
xchg
aam
aaa
xchg
mov
lods
(bad)
pushf
dec
ins
shl
aaa
inc
nop
test
les
aaa
dec
adc
popa
test
add
aaa
add
rcl
bound
push
mov
add
mov
pop
inc
xor
inc
inc
or
or
daa
add
jns
add
push
jge
inc
dec
shr
aaa
adc
je
aaa
les
or
cmp
or
xchg
ss
es
add
loopne
lock
sub
or
xor
push
shr
dec
jmp
sub
aad
pop
repnz
add
aaa
pop
or
xchg
xchg
inc
add
aaa
imul
les
es
cmps
aaa
loopne
outs
lods
inc
cs
mov
mov
dec
rcl
inc
adc
cmps
inc
push
aaa
aaa
scas
xor
je
leave
dec
sbb
and
rcl
fstp
mov
lock
push
pushf
es
xchg
push
sub
push
out
cmp
ds
lock
or
ja
scas
adc
cmp
test
setp
xor
inc
xchg
pop
jge
cmp
cmps
bound
ret
repz
stos
inc
mov
movs
popa
sbb
and
mov
dec
push
arpl
(bad)
mov
popf
push
add
lahf
dec
push
or
and
sub
jecxz
jnp
scas
cwde
sbb
movs
imul
fistp
les
adc
add
xor
xlat
xor
(bad)
in
push
arpl
fldenv
mov
inc
sar
cmovbe
adc
xchg
adc
adc
pop
add
sbb
push
int
or
adc
xchg
test
in
shr
nop
pop
add
pop
xchg
fistp
rcl
jmp
mov
xchg
out
dec
pushf
adc
sbb
and
sbb
dec
out
sbb
daa
ret
cmp
ja
sub
cmp
pop
and
adc
cmps
out
push
out
sbb
sbb
loopne
fst
inc
add
lahf
test
or
lea
inc
test
add
(bad)
adc
ja
inc
adc
loope
xor
call
add
mov
fistp
or
add
(bad)
fimul
inc
out
pusha
add
stc
jmp
add
jmp
cli
or
pop
xchg
fs
cmps
add
sub
add
push
movs
push
dec
outs
mov
pop
clc
das
push
stos
mov
mov
mov
xlat
lock
out
shld
or
add
out
leave
xor
div
(bad)
add
sbb
je
mov
mov
int
add
add
int
add
sbb
and
test
add
add
or
push
shl
pop
sbb
loopne
adc
push
xor
rol
add
and
(bad)
hlt
test
icebp
cmp
lahf
mov
scas
inc
outs
das
test
bound
or
fmul
sub
shl
add
add
rcr
clc
test
inc
test
cmp
mov
or
rcl
dec
out
pusha
add
xor
inc
push
rep
pop
and
pop
push
pop
aas
mov
lahf
add
jo
mov
mov
mov
test
adc
(bad)
shl
push
out
cmp
jo
mov
pushf
enter
push
mov
enter
push
es
out
loopne
mov
push
loop
ins
lds
test
out
imul
shr
js
inc
out
(bad)
fsub
js
out
das
mov
push
jle
enter
jmp
xchg
(bad)
out
das
mov
push
ret
mov
jb
adc
mov
fild
inc
sahf
pushf
aam
mov
mov
and
aad
mov
mov
call
xchg
xchg
xchg
push
jl
jmp
ss
mov
leave
repnz
sahf
outs
lahf
pusha
repz
and
mov
es
add
ins
cmp
pop
pop
dec
or
icebp
cld
jno
push
mov
inc
xor
xor
inc
mov
adc
dec
add
adc
mov
jae
aam
jo
aam
or
fidiv
call
scas
or
icebp
pusha
adc
xchg
xchg
push
and
add
jae
sub
or
sbb
xor
adc
xor
icebp
add
xchg
adc
and
test
lock
xor
sub
icebp
or
adc
out
call
push
icebp
jno
sbb
ret
bound
inc
inc
loopne
xor
adc
jae
pusha
mov
inc
hlt
iret
gs
xor
push
or
pusha
icebp
jae
inc
adc
dec
add
shl
xchg
sbb
and
mov
inc
lea
xchg
and
lods
fld
jo
and
dec
icebp
inc
mov
icebp
loopne
pop
dec
dec
es
dec
jbe
pop
inc
icebp
cmp
xor
push
and
icebp
dec
(bad)
rcl
mov
icebp
sbb
push
push
or
icebp
mov
add
shl
or
adc
jb
mov
dec
jbe
and
icebp
jge
inc
or
(bad)
shl
add
add
inc
sbb
dec
ror
mov
sbb
inc
xor
xor
ins
adc
pop
add
xor
add
lea
repnz
fcom
icebp
xchg
mov
inc
add
or
(bad)
or
cmps
pop
mov
pop
inc
inc
xor
lea
shl
mov
fisttp
imul
icebp
mov
pop
rol
icebp
add
icebp
mov
lds
in
icebp
mov
push
mov
mov
call
cmp
adc
ror
outs
add
mov
test
je
xor
mov
mov
push
push
push
test
jmp
inc
or
jae
mov
mov
mov
mov
xor
mov
cmp
sar
aam
inc
or
dec
mov
xor
mov
mov
mov
and
dec
test
je
ja
fs
and
(bad)
dec
into
add
pop
ret
fucomi
imul
cmp
lock
adc
lods
lods
mov
and
xor
adc
mov
lock
push
push
jo
inc
dec
mov
call
lea
mov
loopne
mov
mov
mov
hlt
mov
push
ins
xor
push
mov
prefetchw
pop
mov
sbb
push
pushf
mov
scas
push
and
push
push
loopne
(bad)
xor
cmp
and
and
jae
pop
and
cld
cwde
sub
sub
fucomip
jbe
or
adc
jb
inc
cld
sub
test
into
sub
pop
pop
ret
mov
pusha
push
add
(bad)
loop
lea
ds
mov
out
pop
dec
mov
sub
(bad)
pop
call
repnz
or
or
or
inc
fistp
shl
loop
or
mov
jp
rcr
outs
jne
sub
aam
mov
add
shr
dec
pop
or
jecxz
mov
inc
repz
inc
add
sbb
pop
or
sti
jmp
adc
or
jmp
lods
add
mov
shr
or
mov
fnstenv
call
pop
or
add
add
cmp
or
(bad)
aaa
add
push
add
push
loop
pushf
fadd
jecxz
add
call
mov
xor
(bad)
mov
ds
loopne
ins
mov
nop
mov
adc
test
and
or
adc
cmp
gs
mov
jno
inc
repnz
adc
fdivr
mov
(bad)
sub
sbb
mov
ja
add
sub
inc
ja
ins
test
add
cmp
add
push
jae
or
shl
mov
pusha
sbb
je
pop
dec
pop
sub
mov
add
call
mov
ret
call
or
adc
cmp
sub
nop
outs
mov
or
sub
in
push
mov
pop
mov
scas
cli
clc
mov
test
mov
mov
imul
out
jge
pop
(bad)
into
mov
cmp
lock
mov
xchg
loopne
(bad)
out
push
cwde
pop
inc
dec
jne
push
inc
clc
cmp
adc
dec
aaa
mov
scas
push
jg
fimul
xchg
xchg
repnz
scas
cli
push
pop
dec
xor
inc
add
sbb
sar
inc
sbb
shr
xor
enter
ror
scas
dec
jmp
shl
and
pusha
data16
dec
push
pop
mov
in
jbe
add
adc
js
push
dec
inc
movs
push
cmp
add
adc
inc
push
push
adc
push
loopne
loop
add
repnz
add
push
in
push
mov
(bad)
mov
or
(bad)
fdivr
aaa
or
push
xor
adc
loope
ret
pop
loop
mov
(bad)
fbstp
lea
mov
add
sbb
div
and
push
jb
call
jl
mov
inc
jne
fsub
mov
cmp
dec
jg
retf
(bad)
push
add
scas
xchg
mov
add
cmp
mov
cmps
ds
cli
and
mov
cld
movs
add
je
call
mov
inc
push
clc
and
xchg
jmp
je
int
inc
jg
call
jo
sbb
mov
xor
mov
xor
xor
xor
xor
aad
or
ss
inc
jecxz
xor
sbb
inc
dec
inc
add
mov
loopne
add
outs
adc
add
add
push
rol
ficom
pop
add
add
bound
shl
and
gs
addr16
imul
add
add
outs
add
jno
jb
lock
dec
xor
push
ja
js
jns
jp
sub
das
xchg
or
add
pop
push
daa
je
mov
mov
xor
and
lds
in
add
inc
hlt
cmp
sbb
push
icebp
mov
adc
xchg
inc
sti
xor
movs
lock
jl
inc
xor
mov
mov
jne
cdq
in
jne
(bad)
ja
scas
push
dec
jne
xchg
xchg
ror
sbb
or
out
dec
inc
ror
into
pop
dec
clc
out
or
mov
inc
js
pop
or
popf
lock
mov
and
call
shl
pop
aaa
fucomip
test
or
enter
adc
lock
test
jne
mov
cmp
pop
inc
mov
or
adc
mov
cld
mov
sbb
clc
test
sbb
rol
mov
pop
mov
test
je
mov
inc
xchg
inc
jb
stos
sbb
fdivr
push
jo
mov
or
inc
bound
jo
add
call
sbb
add
push
or
sub
in
xor
mov
and
or
inc
nop
or
cmp
cmp
sbb
push
test
sub
jae
sub
pop
js
call
xchg
or
aad
jp
adc
or
add
repnz
addr16
scas
rcr
jg
xchg
xchg
mov
sub
lahf
jmp
sbb
cdq
mov
inc
cmp
cmps
dec
sbb
les
fsubr
fbld
cs
adc
sub
ins
leave
ror
and
(bad)
cld
test
pop
push
push
xchg
inc
gs
jmp
daa
xlat
scas
stc
cli
jnp
and
mov
cmp
mov
cmps
xchg
(bad)
fs
cmp
mov
dec
ror
in
cmp
cs
mov
pop
hlt
add
mov
cli
mov
sub
cs
sbb
xor
loope
(bad)
jb
lea
shl
jb
retf
jnp
sbb
hlt
pushaw
shl
test
add
push
bound
jle
sahf
stos
stos
ret
das
push
cmp
adc
push
dec
cmp
and
inc
pop
sbb
cmp
inc
mov
push
je
adc
outs
jl
pop
cmp
arpl
idiv
call
xor
jne
outs
dec
xchg
outs
in
cmps
rcr
out
inc
dec
out
ins
xor
or
ror
dec
inc
pop
dec
dec
dec
dec
inc
je
mov
and
push
test
inc
mov
out
mov
call
call
retf
std
xor
mov
(bad)
xor
push
inc
(bad)
cmps
sub
push
push
sub
loopne
js
(bad)
ins
(bad)
cmp
popa
(bad)
jmp
ins
mov
push
adc
in
push
sbb
mov
mov
xchg
add
and
icebp
ds
push
xor
cmps
arpl
iret
push
leave
pusha
and
lahf
fs
lock
sar
dec
sar
inc
xor
in
dec
jmp
hlt
lock
pop
cmps
nop
lock
or
dec
jg
sbb
inc
xchg
call
fsub
enter
hlt
bound
sub
dec
(bad)
push
popa
push
ror
ins
and
push
loope
xor
and
dec
outs
je
xchg
mov
movs
adc
cs
int3
add
sbb
mov
add
add
cmp
int3
xor
push
cmp
inc
sub
push
push
cs
ins
out
sbb
push
add
pop
int
out
loopne
fnstsw
push
add
sub
rcr
ret
call
ret
xchg
or
aas
popa
add
ja
js
fsubr
adc
xor
rep
pop
jo
dec
retf
sub
cs
ror
movs
dec
and
mov
adc
adc
je
arpl
inc
and
pop
imul
inc
popa
and
ins
neg
jmp
dec
or
push
and
adc
movs
call
call
add
in
jge
loopne
inc
pop
fld
scas
lock
add
mov
mov
jge
sbb
gs
call
rol
jne
stos
sub
xor
cwde
sbb
fsub
or
ds
mov
(bad)
shl
push
push
or
shr
xor
xchg
dec
mov
cmps
sbb
and
lds
add
daa
pop
mov
bound
inc
fs
jne
outs
push
outs
sub
inc
imul
and
lahf
inc
add
cwde
rcr
inc
ja
lahf
adc
adc
push
adc
stc
ds
and
jbe
jne
xor
mov
push
xor
add
daa
(bad)
retf
inc
adc
fs
dec
jnp
pusha
shl
xchg
xchg
rol
gs
sub
sbb
add
in
call
inc
or
push
in
push
inc
dec
mov
and
xchg
sbb
sbb
and
aam
in
mov
adc
sbb
and
sub
nop
inc
lock
jne
das
mov
push
loope
and
adc
or
idiv
sub
push
in
sub
cmps
lahf
sbb
or
or
pusha
pop
dec
adc
dec
fdiv
push
push
imul
mov
pusha
jbe
jp
inc
mov
loopne
mov
push
push
cdq
rol
pusha
mov
mov
(bad)
xchg
inc
mov
rol
push
sub
sub
mov
(bad)
sbb
inc
or
ins
cmp
push
scas
mov
mov
mov
mov
mov
jmp
mov
test
loop
imul
shl
out
xor
mov
and
into
test
dec
add
push
dec
retf
clc
loop
dec
xor
cs
sbb
cmp
sbb
inc
rcl
sbb
push
rdmsr
xchg
mov
aaa
sbb
jns
inc
adc
xlat
pop
jge
push
in
les
pop
outs
adc
adc
adc
jo
out
sbb
and
aam
xor
pop
add
mov
sub
daa
out
adc
cmc
push
sbb
and
cmovno
pusha
jl
aaa
mov
aaa
push
cmps
(bad)
and
and
addr16
outs
add
adc
sub
nop
mov
inc
push
fcom
out
xchg
(bad)
push
stos
rcl
sbb
adc
popf
int
jnp
mov
push
cmp
add
rcl
fisttp
push
dec
nop
das
adc
je
sbb
mov
mov
ss
fimul
mov
imul
sub
cmp
xchg
xlat
das
sbb
loopne
push
dec
and
sub
cmps
neg
pop
call
xor
iret
sbb
(bad)
jbe
sbb
mov
loope
iret
jnp
xor
pop
cwde
outs
pusha
add
add
ss
add
pop
repz
or
ins
add
daa
cmps
and
add
adc
mov
push
xchg
push
mov
and
daa
addr16
xor
lods
fsubr
xchg
imul
push
outs
mov
out
xor
mov
and
fnstenv
cmps
retf
sub
test
adc
pop
(bad)
daa
(bad)
xchg
mov
cmp
pop
jo
fs
ret
mov
lock
mov
push
ss
mov
dec
xchg
cmp
je
je
cmove
inc
or
xchg
inc
(bad)
mov
inc
clc
mov
push
or
sub
pusha
mov
mov
cwde
test
jo
sbb
shl
inc
mov
test
aas
rcl
pop
(bad)
test
jns
leave
pop
or
dec
das
loopne
lock
dec
push
hlt
jne
or
push
dec
cmp
sbb
cdq
sbb
xor
cld
cld
mov
inc
jo
adc
es
add
cmp
fisttp
add
sub
test
sub
xor
and
cmp
out
retf
dec
out
jns
shr
fimul
xor
cmp
ret
cs
popf
mov
aam
pop
push
add
dec
shl
mov
push
out
adc
sbb
push
xchg
or
xchg
out
add
mov
(bad)
popa
adc
mov
xlat
lods
and
xchg
test
sub
test
xlat
mov
stos
outs
cmp
jl
outs
shr
push
nop
mov
xlat
inc
add
shl
pop
maskmovq
div
or
and
sub
dec
scas
xchg
mov
ret
xchg
jo
in
in
out
pop
aas
imul
cmp
rcl
sbb
xlat
dec
les
fist
pop
sbb
jmp
push
test
inc
pop
and
push
out
adc
cmc
jmp
outs
or
mov
shl
cmp
adc
sub
pop
movs
fimul
imul
or
add
sub
bound
xchg
push
fucom
pop
or
and
jg
pusha
movntps
push
outs
jp
push
sub
or
pop
fiadd
adc
push
cmps
sbb
out
mov
test
sub
add
cmp
ins
sbb
push
mov
aas
push
add
add
inc
stos
dec
outs
pop
popa
push
add
sbb
push
je
mov
scas
mov
into
mov
call
add
fdiv
call
int3
mov
imul
push
cmp
(bad)
iret
ret
mov
sbb
push
js
inc
mov
mov
mov
scas
adc
push
push
inc
and
mov
push
sar
rol
cs
and
push
shl
nop
mov
add
push
adc
sub
sub
sub
out
jo
mov
je
lea
nop
jecxz
shl
aam
cwde
add
lods
inc
jnp
fisub
push
push
add
xor
rol
mov
jo
sub
sahf
sbb
popa
and
loopne
push
pop
aaa
es
sub
dec
(bad)
stos
mov
scas
loope
add
mov
push
ja
push
cmp
call
shl
cmp
cmp
mov
mov
sbb
fdivr
hlt
push
cmp
(bad)
push
add
rol
scas
cmp
dec
add
push
div
push
pop
mov
jo
rol
and
inc
iret
dec
fs
aad
xor
imul
or
icebp
xchg
lods
rcl
add
push
es
adc
in
movs
daa
add
and
arpl
mov
aaa
adc
or
lods
or
scas
cmp
cld
jmp
in
jmp
pop
(bad)
pop
pusha
mov
mov
xor
outs
out
pop
mov
mov
or
push
xlat
or
test
sbb
jo
jmp
int3
daa
xor
(bad)
fsub
pop
mov
sub
pusha
mov
(bad)
mov
rcr
das
mov
retw
sub
not
out
mov
dec
jmp
xor
test
pop
xchg
xlat
jmp
xor
push
mov
pusha
dec
mov
in
mov
mov
push
test
cmps
int3
lock
dec
mov
clc
(bad)
xlat
iret
pop
cmps
mov
push
rol
or
jo
mov
(bad)
jno
sbb
lahf
cmp
in
xor
push
and
scas
and
jb
outs
jb
test
test
mov
dec
out
or
rcl
imul
outs
test
out
in
adc
push
push
stos
stos
add
scas
rcr
iret
inc
ss
jl
fdivr
lock
push
add
je
sub
fisubr
push
iret
mov
shr
pop
adc
mov
imul
cmp
sbb
in
mov
bnd
mov
nop
sub
jp
pop
pop
arpl
mov
push
cmp
(bad)
jecxz
inc
mov
xchg
jl
and
inc
push
mov
cdq
dec
cmp
shr
push
mov
mov
and
mov
mov
mov
pop
pop
call
mov
mov
aad
jmp
xor
icebp
mov
push
test
fst
fcmovne
xchg
jecxz
repz
cmps
fldcw
push
in
sar
shr
ds
out
test
addr16
inc
push
xlat
jnp
jne
xor
xlat
push
jbe
(bad)
es
push
add
pusha
jmp
xlat
popf
cmps
dec
and
sub
xlat
adc
nop
mov
ins
push
or
nop
xlat
push
pop
aad
movs
ds
mov
inc
js
in
sub
xlat
push
pop
add
mov
push
push
in
xlat
rol
mov
sbb
mov
cli
sub
and
push
inc
dec
xor
pop
lds
or
imul
in
mov
xchg
fild
idiv
fstp
test
add
idiv
leave
js
cld
mov
das
mov
fs
mov
and
fcomp
dec
stos
stos
mov
(bad)
push
push
test
lahf
(bad)
loope
jmp
aaa
into
repz
cmc
fldenv
sbb
je
mov
adc
add
add
push
sahf
push
retf
ret
sub
push
imul
ja
push
sbb
jecxz
fld
add
and
mov
iret
in
push
sbb
push
repnz
sub
sub
xor
sub
sti
jge
mov
push
mov
lods
xor
mov
jne
jp
jmp
sub
adc
loopne
pop
xchg
mov
xor
loope
loope
sbb
xor
jne
or
mov
add
mov
mov
shr
adc
fisttp
out
int
or
and
mov
xchg
aaa
sub
push
retf
and
push
and
loopne
adc
push
call
enter
add
or
rol
icebp
cmp
cmp
cmp
stos
add
lea
(bad)
call
inc
inc
in
push
sbb
rol
or
push
add
add
push
pop
pop
pop
pusha
pop
push
adc
call
lds
js
mov
les
mov
ins
sbb
cmps
lock
jbe
add
sub
cmp
call
jmp
mov
mov
pusha
add
cmp
repnz
sub
fst
add
inc
and
jns
cmps
ret
enter
call
add
test
push
aas
mov
mov
shl
sub
xchg
add
fisttp
jno
pop
nop
sbb
jbe
add
xor
not
rol
stos
inc
enter
inc
cmp
mov
mov
in
add
or
call
cld
and
mov
sub
jae
sub
adc
(bad)
or
sub
aam
add
ds
ins
mov
add
add
ja
lahf
mov
cs
ror
(bad)
xor
inc
mov
pop
repnz
mov
push
mov
adc
test
pop
jbe
xor
pop
into
jecxz
pop
dec
mov
or
dec
dec
xor
dec
push
push
ror
inc
and
aam
dec
jne
push
adc
mov
add
push
sbb
pop
lahf
cdq
or
sbb
inc
and
push
cmps
xor
xor
xor
jns
lock
in
add
mov
jns
mov
or
xor
push
cmp
rol
in
jmp
movs
and
push
data16
scas
jmp
sahf
mov
or
push
push
or
xor
adc
add
add
inc
scas
push
and
or
add
mov
fsubr
sti
dec
jb
dec
push
push
push
enter
data16
xor
dec
mov
xor
hlt
ret
cdq
cmp
push
adc
add
clc
cmp
stos
push
and
ds
ins
cmp
mov
mov
push
mov
test
mov
mov
test
push
add
mov
add
add
nop
rol
cmp
adc
rol
xor
sub
popf
cmp
and
test
in
inc
(bad)
inc
or
imul
xor
ins
loopne
out
stc
lock
add
mov
push
in
lods
sbb
lea
pop
mov
je
hlt
fild
js
test
add
fadd
std
sahf
push
mov
xlat
(bad)
mov
dec
out
loop
add
mov
inc
cmp
scas
cwde
hlt
jmp
fdivr
add
outs
sub
aam
add
mov
lock
cmp
sub
imul
js
and
cmp
adc
in
sbb
add
fbld
popa
sbb
clc
ds
jb
lock
cmp
and
jno
or
in
or
lods
push
imul
xchg
pop
cmps
xor
out
inc
jecxz
add
xchg
cs
or
inc
ret
and
add
xor
sbb
adc
fwait
outs
xchg
sbb
xor
or
and
inc
add
not
and
jl
cwde
call
and
and
dec
mov
cmp
sub
adc
sbb
out
mov
sub
or
ds
les
or
sbb
mov
aaa
in
xor
stos
daa
jl
cmp
mov
dec
add
add
outs
or
mov
scas
imul
dec
cdq
cmp
lods
mov
cmp
and
mov
mov
adc
movs
lahf
mov
not
and
jmp
mov
sub
jnp
dec
jne
and
pop
inc
ins
in
adc
clc
shr
inc
inc
pop
ss
xchg
inc
or
inc
jbe
cld
push
sbb
out
jo
push
or
pop
out
inc
inc
lea
in
add
jl
and
call
(bad)
push
ins
sti
dec
dec
or
fsubr
and
push
and
ins
push
jnp
ret
je
mov
loop
retf
jmp
push
mov
(bad)
push
rcl
or
cld
push
arpl
inc
lds
idiv
stos
add
es
xor
and
ins
and
xor
or
bound
rcl
rcl
mov
xchg
ins
out
clc
xor
mov
dec
lock
xchg
movs
sar
lahf
ins
inc
cmp
js
mov
ins
and
(bad)
jb
fstp
jo
jb
xor
cmp
cmp
rcl
pop
sbb
add
ror
stos
sbb
xor
add
adc
rol
fiadd
add
sbb
or
jmp
mov
inc
ins
and
je
pop
inc
out
adc
fsubrp
jg
push
mov
dec
mov
mov
in
in
pop
shl
mov
js
iret
ins
and
xor
and
push
cmp
push
out
or
pop
and
adc
movs
out
cmp
mov
dec
sbb
mov
outs
sbb
sbb
sub
and
add
ss
(bad)
sbb
pop
adc
sbb
ins
ror
cmps
cmp
(bad)
nop
lods
bound
mov
ins
stos
jno
hlt
out
pop
lock
dec
cmp
add
cmp
pushf
jo
adc
(bad)
fild
loopne
lods
fistp
scas
xor
xchg
adc
js
mov
mov
mov
push
mov
nop
push
pop
mov
in
pusha
cmp
or
ret
stos
sbb
fdivr
mov
and
fcom
mov
or
cmp
push
aad
add
rcl
(bad)
pop
cmp
scas
mov
not
cmp
xor
cmp
xchg
mov
push
es
(bad)
or
jbe
test
sub
or
inc
pop
dec
pop
sub
sub
or
mov
out
sbb
jnp
cld
push
xor
pop
adc
fcomi
mov
pusha
mov
mov
iret
ja
pop
popa
js
add
push
mov
add
pop
cld
pop
inc
mov
mov
mov
sbb
mov
sub
mov
lahf
pop
test
dec
xchg
bound
clc
fistp
imul
adc
xor
clc
add
lea
dec
add
mov
add
stos
ds
mov
xchg
and
and
loopne
fadd
dec
xchg
dec
daa
(bad)
es
ret
pusha
push
fdiv
rol
push
js
ja
inc
push
jecxz
or
add
push
sub
movs
mov
out
ds
rep
inc
xchg
dec
shl
sti
mov
xchg
or
rol
inc
test
sbb
test
js
jns
add
push
pop
sbb
loope
ret
adc
test
mov
add
adc
jecxz
dec
jbe
adc
imul
test
pop
cmp
xchg
xchg
ins
sub
inc
mov
inc
mov
dec
test
jl
inc
stc
pop
and
sub
pop
clc
imul
xchg
jne
cmp
xor
aaa
adc
cmp
ret
dec
mov
dec
jne
jge
sub
inc
mov
aam
dec
call
xchg
pop
out
int
mov
adc
jge
in
sub
sbb
push
dec
inc
out
pushf
mov
movs
push
imul
pop
add
int3
jno
sbb
sbb
lock
outs
repz
pop
rol
mov
or
inc
add
loopne
sbb
inc
xor
shl
rol
mov
inc
or
push
mov
pop
mov
jbe
ins
xor
xor
addr16
add
test
mov
loope
je
sub
dec
cmps
lahf
jo
mov
xor
sbb
loopne
arpl
cmp
inc
pop
add
add
pop
lds
mov
mov
jmp
push
push
je
inc
dec
push
sub
jno
inc
dec
hlt
inc
dec
je
inc
pop
mov
sbb
and
push
mov
mov
add
jno
fs
lods
call
les
xlat
sbb
adc
add
and
sahf
mov
call
test
fsubr
push
lock
mov
and
xchg
push
loopne
mov
sti
mov
pop
bswap
push
test
xchg
adc
adc
into
aam
sub
call
clc
sbb
bound
push
jmp
dec
jl
imul
xchg
push
jp
and
mov
cmp
ss
sub
rol
aam
push
jbe
add
pop
addr16
xchg
jmp
xchg
fld
mov
retf
sbb
cmp
cmp
push
cmp
pop
sub
test
les
leave
adc
or
dec
or
in
or
out
push
sub
retf
push
cmp
xor
jne
cmp
xor
mov
imul
cmps
nop
je
cmp
cmp
je
ins
mov
inc
sbb
jne
add
pop
clc
shr
add
outs
test
popa
add
cmp
jg
cs
cwde
scas
dec
cmp
je
mov
mov
scas
xchg
jmp
ret
mov
mul
and
mov
ja
pop
adc
push
daa
sbb
add
xchg
xchg
sub
and
scas
test
or
jmp
test
cmp
add
inc
mov
xor
in
pop
inc
cs
push
repz
cmc
mov
sbb
xchg
(bad)
xlat
lods
aam
sub
push
inc
frstor
mov
mov
mov
inc
fild
into
mov
sbb
inc
push
ror
inc
adc
sbb
sbb
xchg
or
lea
cmp
add
push
shr
add
(bad)
push
aam
xor
add
mov
mov
sbb
dec
add
sbb
inc
adc
add
push
or
in
cmp
xchg
aaa
mov
jmp
test
mov
test
test
push
xor
or
jns
push
dec
std
fisttp
lea
or
in
lods
mov
pop
stc
fisttp
or
mov
inc
mov
mov
pop
cwde
or
mov
jnp
enter
or
and
or
inc
pop
idiv
add
push
add
push
dec
add
dec
push
xchg
fmul
jo
mov
sbb
cwde
pusha
inc
out
test
or
add
xchg
adc
xchg
add
mov
jmp
in
ror
rol
ret
fdivr
pop
sub
push
stc
adc
std
or
lea
mov
push
add
xor
sub
mov
sub
adc
or
or
xchg
ds
adc
push
div
sub
sub
pop
sbb
push
and
mov
adc
mov
add
mov
adc
or
add
push
push
lods
in
xor
or
leave
ds
sbb
mov
call
lods
lods
jmp
loop
(bad)
pop
or
leave
mov
mov
mov
test
pop
fneni(8087
(bad)
ins
inc
push
das
mov
push
daa
aam
pop
cmp
mov
and
mov
sar
xchg
push
cmovle
inc
call
sbb
pop
mov
push
lods
lea
jae
or
and
or
cmps
pop
or
outs
iret
xchg
aaa
(bad)
mov
jo
jo
xchg
aaa
in
mov
adc
xchg
cli
and
cmp
xlat
jae
div
add
add
in
or
mov
leave
les
mov
jnp
push
pusha
pop
push
pop
sbb
mov
inc
xor
adc
scas
adc
jl
mov
xchg
sti
mov
cli
imul
outs
and
pushw
arpl
popa
pop
add
xlat
mov
or
movs
int3
push
lock
sub
mov
sbb
loopne
add
pop
pop
dec
mov
jmp
in
or
retf
mov
dec
pop
xchg
or
fdiv
fdivr
mov
xor
jo
cmps
adc
popa
jb
push
jae
sbb
(bad)
push
outs
inc
outs
outs
outs
arpl
xor
and
and
outs
je
adc
pushf
dec
sbb
add
loopne
xlat
add
out
cmp
inc
add
fwait
xor
add
(bad)
adc
clc
and
adc
int3
dec
(bad)
push
push
rol
iret
popa
inc
inc
add
sbb
sbb
fadd
out
cmp
out
pop
mov
push
or
cmp
mov
push
push
div
data16
or
aad
xor
loopne
idiv
push
jl
and
push
jnp
leave
mov
add
adc
add
push
push
push
push
(bad)
je
ds
jg
clc
adc
adc
push
imul
mov
add
sub
gs
pop
add
ficom
fild
push
push
mov
xor
pop
ja
cmp
shl
popa
pop
inc
sub
aad
nop
push
push
je
clc
push
adc
clc
jmp
xor
addr16
xor
pop
popf
add
sub
jmp
jo
dec
push
inc
mov
and
pushf
jmp
jae
xor
mov
push
or
lods
imul
jo
push
fisttp
pop
mov
scas
mov
add
call
and
inc
xor
pop
mov
enter
mov
adc
lods
sbb
(bad)
dec
mov
xchg
adc
push
jae
outs
jbe
jns
xor
jb
or
push
add
pop
jns
rcl
add
jno
fld
rcl
cs
xlat
mov
and
push
test
add
mov
xor
sahf
ss
jns
push
xchg
mov
fild
pop
add
push
add
dec
push
and
pop
shl
push
call
xchg
cli
push
rcl
ficom
xor
scas
dec
jp
ds
icebp
push
xchg
adc
bound
in
jnp
je
fnstsw
push
push
dec
cmps
adc
lock
bound
add
push
or
mov
push
ins
push
or
loope
lea
rcl
dec
mov
inc
pop
mov
inc
movs
push
or
mov
inc
or
add
sbb
shl
aas
sbb
adc
rol
lods
pusha
div
push
push
or
or
cdq
xchg
push
xor
das
in
push
cmp
loope
dec
sar
test
lock
cmp
inc
ins
mov
or
jo
arpl
xor
mov
sbb
push
lahf
push
loopne
loopne
push
jno
jbe
push
adc
mov
iret
mov
xor
les
and
rol
hlt
push
out
fucompp
movs
jbe
cmp
push
mov
push
mov
add
ja
mov
sbb
je
aad
(bad)
in
mov
(bad)
mov
movs
call
sbb
push
mov
call
add
repnz
add
pushf
sbb
sbb
cmp
inc
ja
outs
push
pop
pop
pop
cmovl
outs
pop
push
add
push
call
dec
rol
enter
push
rcl
mov
lock
xchg
inc
mov
je
xor
iret
movs
jl
int
lods
fadd
inc
fmul
aas
push
fsubr
xor
mov
or
or
cmc
push
pop
lods
cmp
cmp
jge
inc
xlat
sub
ss
in
pop
pop
ins
push
aaa
pusha
xor
cmc
jmp
rol
mov
xchg
int
inc
cmp
add
popa
jp
cwde
mov
dec
pop
cli
and
pop
aam
mov
mov
fmulp
adc
lea
imul
add
jmp
inc
rcr
dec
inc
add
repnz
lods
sbb
data16
pusha
dec
les
test
push
sub
dec
outs
jle
sar
or
retf
out
ret
lods
mov
mov
mov
sbb
rcl
push
and
inc
sub
mov
test
push
imul
pop
mov
sub
or
ds
xchg
add
pop
sbb
lods
shl
fstp
movs
iret
mov
and
fisttp
fiadd
inc
or
and
mov
adc
push
mov
dec
pop
test
inc
je
movzx
mov
or
mov
call
inc
setne
and
je
stc
or
add
ret
xlat
sti
and
xchg
jl
and
int
xor
sbb
or
dec
repnz
fiadd
(bad)
inc
movs
out
fmul
dec
not
popa
out
out
cmp
inc
imul
ja
sbb
push
nop
and
add
add
sbb
loopne
mov
xchg
mov
rcl
mov
cmp
mov
cs
fmul
push
xor
pop
sub
mov
hlt
pop
and
sbb
mov
sbb
sub
push
mov
add
inc
out
lea
xor
pop
clc
inc
ja
xor
push
imul
xor
jo
cwde
push
mov
pusha
arpl
repnz
and
stos
cmps
or
jmp
fldenv
pop
mov
pop
adc
cmp
xor
daa
ins
out
add
add
add
out
mov
push
mov
or
cmp
dec
adc
je
jbe
add
add
add
cmps
jl
inc
push
mov
push
(bad)
cwde
adc
sbb
jg
mov
mov
leave
xor
lods
inc
dec
jne
repnz
call
mov
push
sbb
xor
inc
jno
sub
push
adc
clc
mov
rcr
aam
or
ins
lods
rcr
and
jo
inc
xchg
or
push
mov
(bad)
dec
push
stos
pop
jecxz
aad
mov
adc
hlt
inc
cmc
clc
gs
and
and
xor
ret
jl
je
mov
jae
mov
jp
inc
adc
push
and
xor
ret
or
inc
fwait
pusha
or
cmp
xor
and
add
adc
jo
sbb
movs
mov
mov
dec
mov
or
in
xlat
or
loopne
pusha
or
sub
mov
sub
das
inc
lea
sub
scas
mov
pop
maxps
pop
sbb
jle
push
mov
or
add
pop
mov
(bad)
push
xor
push
mov
add
scas
jne
and
push
js
jmp
jne
fadd
lods
(bad)
retf
dec
pop
(bad)
pop
xchg
xor
in
rcl
pop
push
retf
dec
adc
and
lds
lea
bound
adc
mov
jmp
xor
mov
or
test
inc
sub
daa
jo
pop
jno
mov
outs
mov
data16
inc
fmul
addr16
add
test
add
clc
outs
dec
pop
and
inc
or
dec
inc
pop
cdq
or
xchg
pusha
popaw
push
dec
cdq
xor
ret
mov
or
aad
mov
push
jp
adc
push
data16
mov
retf
or
sbb
lea
popa
je
lea
popf
sbb
ss
nop
sub
jo
pushf
aam
and
inc
movs
ins
aas
inc
cmp
sub
cld
cmp
test
test
es
les
cs
add
loop
sub
aam
add
xchg
xor
sub
ret
(bad)
cmps
jns
sub
test
jl
jle
sub
mov
repnz
comiss
cli
push
cs
or
inc
shr
hlt
sti
stos
mov
mov
sub
push
push
dec
test
ret
fsubr
push
mov
mov
push
jmp
add
es
mov
sub
jb
ins
sbb
mov
clc
dec
push
movs
stos
getsec
inc
scas
js
ins
xor
mov
or
cwde
jecxz
inc
cmp
ss
sbb
add
inc
movs
repnz
mov
xor
dec
shl
xchg
jo
xchg
inc
adc
push
idiv
add
sub
xchg
jb
cwde
add
inc
push
clc
cmp
xchg
fst
cmp
adc
or
xor
push
test
mov
mov
sbb
adc
cs
jge
movs
test
xor
mov
jp
mov
test
push
mov
xchg
mov
cmovle
push
adc
dec
adc
mov
push
and
es
jno
jo
add
outs
sbb
in
pusha
or
or
xchg
cs
dec
push
mov
ror
cwde
jmp
out
cwde
and
pushf
mov
or
mov
mov
enter
loopne
fwait
and
mov
mov
jle
inc
adc
cli
pusha
jnp
stos
retf
xchg
or
pop
jne
mov
sbb
adc
ins
or
fiadd
sub
mov
cmp
nop
dec
in
xor
aad
push
mov
jns
pusha
push
add
mov
jp
jl
and
dec
pusha
sub
shl
ja
xchg
test
xchg
mov
shl
add
or
(bad)
and
xor
data16
pop
add
pop
out
mov
or
xor
xchg
and
sbb
(bad)
cmp
std
call
add
ret
stos
cmp
adc
cmp
imul
inc
xchg
cld
add
xchg
js
xchg
inc
loope
sbb
in
mov
hlt
dec
movsx
lea
or
pop
adc
or
adc
mov
js
test
lds
pop
fild
push
je
or
sar
mov
loopne
sub
push
or
ret
cmps
sub
loopne
fld
or
jo
push
gs
fsubr
pop
mov
aaa
ror
jo
leave
push
push
scas
push
push
push
push
ins
bnd
sbb
xchg
push
(bad)
pusha
or
push
enter
cdq
cmp
xor
sub
inc
cmp
aam
in
sub
xor
(bad)
fisub
mov
cmp
mov
sti
in
push
add
mov
test
push
out
aas
pushf
dec
pop
popa
xor
add
sbb
sub
add
mov
push
in
and
inc
enter
pusha
push
xor
in
call
push
add
iret
sub
sub
dec
lea
jl
jae
inc
aam
repz
inc
pop
mov
or
or
inc
inc
sub
and
push
les
rol
lea
ins
lods
jno
jno
sbb
jns
and
pop
xchg
pushf
inc
ins
aam
inc
xor
test
sar
in
out
or
xchg
aam
jno
loop
cmp
pcmpeqb
or
pop
jmp
(bad)
adc
popa
sub
(bad)
mov
cli
adc
pop
or
fsubr
push
mov
push
mov
sbb
dec
fadd
imul
jecxz
clc
test
sub
inc
rcr
jecxz
adc
push
ret
movs
jecxz
jb
push
mov
mov
pop
frstor
(bad)
sub
daa
pop
cwde
and
xchg
out
push
dec
retf
and
(bad)
and
add
xor
add
jnp
in
add
jg
pop
ja
pop
or
mov
sub
push
lahf
addr16
inc
add
jo
xchg
and
sbb
mov
jo
sahf
imul
outs
add
lods
sub
push
add
inc
jmp
pop
bound
adc
pop
(bad)
xchg
inc
mov
or
outs
and
xor
inc
adc
daa
adc
loopne
mov
adc
sub
sub
or
addr16
dec
rcl
mov
imul
push
or
jae
ja
adc
xchg
sub
cwde
and
or
or
mov
cmp
push
push
addr16
test
and
xchg
and
push
jg
inc
adc
push
inc
add
jmp
jbe
cdq
push
ret
das
dec
in
pusha
addr16
mov
out
add
es
dec
dec
dec
data16
scas
je
ret
(bad)
and
pop
pusha
cld
push
dec
adc
(bad)
sub
sar
repz
jl
inc
idiv
aaa
push
jg
dec
add
dec
jne
dec
pop
mov
or
xlat
pop
xor
jb
jmp
and
mov
mov
mov
push
fdiv
aad
pop
add
je
mov
call
inc
adc
mov
add
xor
xor
xchg
pop
fbld
sbb
cmp
mov
push
jnp
or
iret
adc
push
ins
test
add
mov
rol
iret
adc
and
das
sbb
cmp
shr
mov
or
push
rcl
add
mov
cmps
imul
add
push
es
ins
(bad)
adc
and
sbb
pushf
dec
or
jo
xor
jl
push
cld
dec
rol
lock
inc
or
jge
add
jnp
dec
or
cmc
rcl
push
mov
inc
fsubr
(bad)
scas
add
jg
sub
arpl
add
inc
out
test
inc
or
sub
or
or
or
inc
add
out
out
inc
or
shl
mov
and
mov
cmp
ins
fsubr
loopne
jmp
sub
sbb
cld
adc
dec
inc
adc
(bad)
fadd
fistp
lea
jge
(bad)
gs
mov
(bad)
call
cmp
pushf
arpl
popf
cmp
fwait
adc
and
cpuid
xchg
popa
sub
push
mov
add
sbb
shl
jae
jge
stos
inc
adc
imul
sub
fs
je
das
pop
std
mov
pop
mov
(bad)
les
sti
out
sti
inc
add
xchg
in
lock
daa
mov
or
jge
mov
sub
daa
xor
cmps
inc
shl
cmps
aam
(bad)
fadd
add
lea
mov
or
pop
pop
xchg
inc
frstor
pop
das
mov
mov
xor
outs
cmp
mov
aam
jbe
cmp
push
xchg
mov
aas
inc
push
mov
daa
mov
xlat
es
adc
nop
push
lods
call
mov
pop
or
jbe
cmp
pusha
inc
inc
ja
xor
jo
add
cmp
mov
lsl
adc
xchg
lock
fiadd
xchg
and
sti
jg
xor
inc
mov
add
loopne
dec
jmp
int
adc
sub
push
mov
add
mov
cmps
je
dec
data16
sbb
inc
push
pusha
fmul
xor
(bad)
cmp
add
in
sbb
add
add
shr
leave
cmp
dec
shl
sahf
xor
mov
jmp
loopne
enter
cmps
mov
nop
dec
cmp
and
mov
adc
aam
add
xchg
pop
outs
add
push
jmp
xchg
popa
push
cmp
and
xlat
fs
les
dec
cld
sbb
fcom
in
sti
sub
push
push
loope
rol
pop
inc
inc
adc
out
adc
movs
dec
or
loope
xor
nop
std
sbb
js
pusha
add
sbb
adc
add
inc
inc
lock
push
sbb
cmp
mov
and
sub
cmp
and
mov
arpl
mov
aam
cwde
call
and
jo
int3
inc
sbb
sub
mov
sbb
push
loopne
and
(bad)
mov
inc
or
(bad)
rcl
cmps
pop
nop
nop
enter
sbb
and
aas
(bad)
xchg
outs
in
push
xor
mov
jnp
stos
add
xchg
inc
pop
rol
adc
lods
ret
or
xchg
mov
imul
in
fs
in
inc
pop
inc
cli
movmskps
cmp
cbw
sub
test
cmp
imul
lea
or
mov
(bad)
fdiv
add
xlat
dec
cs
pop
or
push
jg
pushf
into
xchg
mov
inc
xor
adc
push
or
mov
push
mov
add
adc
outs
test
or
push
push
(bad)
loopne
sub
int3
jnp
jge
xor
jl
rcr
push
pop
xor
mov
fdiv
mov
aaa
push
adc
add
add
pusha
or
and
scas
adc
sbb
enter
in
cmp
add
cld
add
retf
ja
inc
icebp
or
inc
add
add
add
cs
pop
mov
lahf
je
mov
jle
jge
call
mov
rcl
add
test
or
in
mov
cmp
inc
mov
dec
call
sub
xor
add
add
cmp
and
add
inc
add
dec
jne
or
sub
outs
mov
inc
sbb
ins
cmp
fstp
xchg
lahf
dec
in
push
push
sbb
out
sub
inc
and
aas
and
out
adc
data16
ds
adc
cmp
cs
sub
inc
adc
adc
daa
outs
add
xchg
shl
loop
xchg
test
pusha
aaa
sub
das
add
or
pop
sub
add
fiadd
push
sub
pop
inc
aaa
cs
dec
call
lea
scas
dec
mov
or
addr16
ror
fidiv
fs
je
sub
jmp
fisub
pop
xor
dec
out
and
sub
pmuludq
sbb
pop
mov
add
stc
push
pop
fs
cmc
sub
jle
add
fwait
shr
test
dec
cs
scas
fucomi
add
pop
or
loope
mov
push
or
ds
iret
adc
jnp
sbb
or
retf
jge
sbb
hlt
jmp
inc
enter
xor
inc
pop
mov
xchg
je
push
jb
xor
ss
adc
ss
push
sub
inc
gs
or
mov
add
inc
mov
sub
rol
sub
ror
cmp
and
pop
das
out
and
adc
mov
mov
(bad)
ror
cmp
test
jle
jl
mov
mov
xor
pop
bound
and
nop
ds
ds
mov
sbb
mov
ja
icebp
add
add
push
inc
add
or
(bad)
mov
add
call
sbb
or
repnz
in
jg
jp
xor
fwait
shl
or
and
push
test
sbb
push
(bad)
in
cmps
test
jbe
rcr
push
sbb
daa
lock
jge
mov
loopne
in
mov
iret
adc
mov
popf
add
push
jmp
adc
loopne
hlt
sub
cmps
enter
rcl
jae
xor
mov
neg
(bad)
sub
(bad)
les
test
or
and
or
or
or
outs
int3
js
cmp
sub
cmp
mov
sbb
or
or
and
xor
into
xchg
ret
inc
sbb
lods
xchg
push
add
sbb
xor
inc
(bad)
inc
test
adc
ror
cdq
lods
cmp
daa
and
cmp
icebp
and
cmp
test
div
icebp
adc
mov
retf
or
mov
repnz
call
hlt
mov
out
call
sbb
das
test
fldcw
(bad)
pusha
sub
call
loopne
adc
add
fwait
pushf
mov
or
jmp
mov
sub
dec
sub
loop
bnd
cld
(bad)
stos
pop
xor
das
je
jle
ret
cmc
test
and
imul
add
xor
add
push
inc
or
inc
jmp
inc
pop
icebp
cmp
or
push
inc
or
sub
push
(bad)
jmp
bound
ret
jmp
inc
dec
jne
or
jl
push
clc
mov
sti
loope
add
sar
dec
std
cmp
jne
xchg
sahf
fsubr
xor
ret
bound
jo
dec
cmp
fadd
fdiv
fild
data16
adc
fimul
inc
push
or
std
loopne
loope
icebp
inc
ret
ds
fs
xchg
add
xlat
pop
or
out
and
pop
add
xchg
test
inc
stos
fucomip
sub
or
xchg
loope
shr
test
inc
cmp
jle
dec
inc
mov
ja
mov
add
dec
repnz
mov
mov
or
inc
or
call
fsubr
imul
push
jmp
or
dec
xchg
push
out
mov
clc
cmps
js
dec
je
mov
fs
adc
jl
or
je
or
sbb
dec
jns
stos
loop
sbb
ja
pushf
add
sahf
js
jge
jne
jns
xchg
call
shl
or
mov
sti
in
js
add
xor
push
add
xor
test
or
inc
jo
cdq
call
add
sbb
or
sub
loopne
sbb
and
test
dec
enter
test
jo
cmp
mov
lahf
iret
cmp
imul
clc
aaa
leave
mov
mov
bound
pop
push
(bad)
push
mov
ss
jle
inc
and
jo
push
setg
(bad)
outs
outs
adc
(bad)
cmps
sbb
or
add
jno
pusha
xor
xor
out
dec
or
push
rcl
cmovo
outs
adc
loopne
rol
push
cmp
cld
push
lds
jge
mov
add
ja
loopne
xor
xor
or
push
outs
adc
repnz
push
and
fs
inc
cmp
sti
out
out
repnz
cmp
or
mov
jbe
rol
mov
or
sbb
mov
sub
lea
mov
cli
iret
outs
add
test
ds
xchg
fadd
fsubr
outs
in
dec
push
fsubr
push
adc
sbb
inc
push
ds
or
xchg
xchg
mov
ds
repz
add
sbb
add
add
jae
add
inc
pop
dec
dec
sbb
rol
jae
jae
rcl
stos
add
mov
ret
add
imul
cmp
sbb
mov
cmp
add
or
sub
sbb
xor
or
adc
or
add
or
sub
aam
lds
mov
xor
scas
lock
add
inc
or
ja
inc
(bad)
in
mov
pusha
push
pop
loopne
ret
dec
repnz
ja
dec
inc
je
add
rcl
fs
xor
push
jae
push
pop
pop
adc
add
adc
and
ja
xchg
test
mov
add
push
jbe
or
cld
ja
add
push
dec
ja
pusha
add
ja
xor
rol
add
xchg
add
ja
add
sbb
pop
inc
push
ja
xchg
rol
mov
ja
inc
push
adc
dec
pop
loop
sbb
(bad)
push
call
xchg
ja
xchg
sbb
pop
inc
mov
add
outs
dec
in
add
imul
sub
sub
in
adc
rol
ja
xor
sbb
add
mov
jnp
add
mov
push
add
ja
dec
(bad)
test
ja
test
sub
push
aam
add
sbb
sub
jnp
sub
rol
xor
mov
pop
jle
cdq
je
xchg
pop
add
jg
add
add
mul
push
dec
fs
mov
jo
cmp
ds
cmp
push
ds
inc
pop
or
add
cmp
inc
sub
push
jbe
add
mov
(bad)
stos
push
pusha
jg
ins
jo
jo
out
mov
sbb
xchg
stos
sbb
push
jg
add
test
loopne
mov
sub
popf
push
push
test
sub
fldcw
cmp
push
enter
mov
inc
add
sbb
gs
cmp
xchg
sbb
scas
pop
lods
mov
add
inc
fmul
adc
repz
popa
add
pusha
mov
nop
add
xor
inc
mov
inc
rcl
and
cmp
xchg
test
xchg
jno
xchg
push
loopne
sub
add
add
and
xor
rol
sbb
add
pusha
cmps
xchg
in
dec
cmp
xchg
or
or
xchg
aas
test
inc
sub
test
xchg
fidiv
xchg
test
adc
push
test
adc
adc
pusha
cmp
add
adc
lock
mov
(bad)
and
add
lock
outs
pusha
mov
mov
jmp
xchg
add
xor
pushf
daa
adc
fist
push
adc
je
adc
retf
or
sub
jne
mov
in
aam
call
jo
jnp
xor
sbb
test
adc
adc
call
je
jmp
pcmpeqw
cmp
jle
ins
mov
sbb
sub
add
push
or
je
sbb
push
lea
cmp
jmp
dec
loope
cmp
xchg
sub
js
shl
sbb
jmp
add
adc
adc
push
aad
ins
xor
cwde
call
adc
pop
mov
or
and
push
xor
mov
arpl
push
enter
lds
or
push
fidivr
push
add
jbe
or
mov
pop
or
xor
sbb
lea
and
pop
sub
xor
push
mov
sub
add
xor
icebp
sub
and
sahf
push
dec
push
sub
jmp
leave
mov
call
mov
pop
xor
js
mov
xlat
jmp
inc
shl
jne
mov
and
imul
jmp
mov
jge
mov
ror
mov
mov
ror
jmp
je
(bad)
retf
mov
mov
inc
push
inc
cmp
wrmsr
or
lock
cdq
icebp
xchg
xor
inc
rcr
ds
fucomip
push
les
add
sub
inc
sub
xchg
mov
mov
push
test
ins
jae
loope
loope
mov
mov
mov
cmpxchg
ror
(bad)
pop
cld
(bad)
sub
cli
(bad)
sub
and
fmul
pop
mov
enter
data16
sbb
leave
cmc
cwde
cld
repnz
mov
xor
and
sar
cdq
adc
jge
loope
push
xchg
das
dec
neg
cmps
cs
mov
cmp
jne
sbb
loop
call
ret
jnp
jbe
sbb
push
mov
data16
mov
push
popf
mov
add
sahf
add
xor
sub
arpl
ds
jmp
push
popa
sbb
ds
pop
jbe
pop
in
xchg
out
push
push
mov
leave
shl
or
jne
sbb
mov
movs
push
cmp
mov
pop
xor
mov
mov
cwde
cmc
or
loope
data16
in
test
nop
test
push
loopne
jnp
out
iret
loopne
xor
outs
enter
pop
jmp
xor
addr16
loopne
jnp
inc
or
add
cmp
nop
adc
lds
movs
iret
mov
mov
and
ror
mov
or
fisttp
aam
pop
xchg
push
js
loop
mov
gs
jo
sbb
dec
pop
xor
inc
sbb
in
cmps
(bad)
cmp
mov
jmp
xchg
xor
retf
fisttp
and
and
out
mov
ja
and
mov
pop
push
add
xor
adc
jae
dec
mov
inc
movs
imul
sbb
cmp
xlat
loope
adc
das
pop
xchg
loope
popf
adc
aaa
and
dec
into
cmp
stc
popf
sbb
in
gs
push
push
aaa
push
ja
and
sub
fcom
lods
cmp
push
mov
pop
sbb
jne
rcl
ret
mov
sbb
sar
add
or
mov
sub
(bad)
push
push
lods
fidiv
add
pusha
mov
cmp
imul
push
mov
test
loop
(bad)
mov
or
sbb
test
sub
aaa
lock
rcl
cmps
sbb
adc
mov
out
out
cwde
(bad)
cmp
add
repz
pop
jb
out
add
(bad)
(bad)
mov
jg
or
dec
xchg
sbb
cmp
xor
jecxz
je
and
(bad)
sbb
cli
pop
enter
sub
xor
fsub
aad
push
ss
imul
add
rol
ret
aaa
(bad)
test
shr
mov
loope
add
sub
inc
pop
mov
cmp
or
ds
mov
sub
rol
not
jmp
push
or
inc
jne
pop
pop
mov
push
add
push
in
cmps
call
push
add
and
mov
sbb
pop
loopne
or
and
and
aas
dec
lahf
xor
enter
fdiv
lods
aam
and
xor
call
and
jp
(bad)
js
mov
jle
je
or
or
sub
sbb
mov
inc
call
mov
or
not
cld
sub
push
inc
xchg
xor
cli
ja
jns
(bad)
call
es
inc
inc
fldcw
icebp
sbb
in
sub
and
fsub
imul
pusha
sub
pop
push
cmp
sahf
sbb
cmps
cdq
and
xchg
jmp
and
mov
add
ins
cmps
mov
and
fcomp
rol
cmps
jl
retf
pop
mov
push
xor
loope
jecxz
js
lea
add
mov
inc
sub
jmp
ds
daa
aad
jp
in
push
jmp
cmp
jne
sbb
inc
(bad)
xchg
dec
imul
pop
repnz
fdiv
add
push
add
test
(bad)
sbb
mov
or
retf
sbb
jo
stos
jo
(bad)
jmp
mov
sub
test
pop
imul
adc
pusha
inc
es
cmp
lea
or
cwde
stos
adc
sbb
push
inc
inc
shl
(bad)
cli
cwde
dec
(bad)
pop
out
sbb
or
push
stos
xchg
or
push
xchg
jmp
je
fcomp
call
and
loope
xor
push
add
cmc
mov
push
ins
(bad)
jno
inc
js
lahf
(bad)
cli
inc
call
adc
test
mov
and
inc
push
in
mov
rol
fs
jo
mov
loopne
outs
sbb
xor
mov
pcmpeqb
mov
push
repz
and
sbb
cwde
leave
add
sub
pusha
add
cld
stos
lock
mov
mov
push
loope
pusha
fadd
sbb
dec
pop
push
in
push
push
mov
jge
fcomip
adc
loope
out
mov
xor
push
jb
or
pop
adc
pusha
jo
jo
fisttp
mov
push
push
das
arpl
sub
xor
sub
add
mov
ret
and
jl
jecxz
pop
mov
sub
sub
js
movs
add
out
jo
movs
sub
xor
add
popf
or
not
lods
pop
pop
sbb
mov
mov
aam
pop
dec
sub
mov
jge
out
ret
sbb
or
sbb
xor
xchg
(bad)
push
cmp
test
mov
imul
adc
sbb
mov
test
lea
cmp
xchg
inc
and
test
xor
cmp
adc
es
out
(bad)
adc
jo
and
mov
dec
clc
jne
jmp
mov
imul
add
test
(bad)
jmp
sub
push
ror
lds
retf
mov
jmp
mov
in
scas
xlat
mov
push
data16
mov
cmp
adc
fild
add
ror
iret
xchg
jno
fcom
add
bound
cmp
pop
popa
or
add
cmp
sti
loope
jmp
repnz
jne
pusha
idiv
push
xchg
pop
pop
movs
adc
cmps
fs
add
or
add
sub
add
mov
popf
push
xor
sub
call
sub
(bad)
movs
idiv
movs
es
sub
stos
and
adc
push
sbb
xor
dec
inc
mov
cmp
push
cbw
out
xchg
or
inc
mov
lea
das
call
sub
pop
dec
outs
xchg
jle
lds
pop
pop
adc
and
jmp
(bad)
jmp
(bad)
jp
inc
sub
pop
push
sub
push
adc
mov
clc
sbb
dec
pushf
jg
inc
in
cwde
xor
add
pop
mov
mov
cdq
add
(bad)
cdq
(bad)
les
xchg
or
test
les
sbb
das
sar
call
jo
push
or
gs
push
mov
xor
pusha
rcr
out
hlt
xchg
pop
mov
inc
sub
out
add
inc
js
out
popa
lods
test
loope
das
dec
popa
loopne
es
jno
aam
pop
push
packsswb
dec
jmp
in
push
data16
test
jmp
xchg
pop
out
jmp
pop
jg
dec
push
inc
mov
jmp
mov
lahf
aas
push
add
es
and
pop
shr
clc
adc
sbb
in
add
das
repz
xchg
loopne
xchg
punpckhwd
and
sub
imul
mov
xchg
cwde
cmps
imul
push
adc
and
adc
ja
jnp
xor
gs
les
imul
xor
push
mov
adc
cmps
ins
test
outs
inc
cmp
fcomp
pop
cmps
pop
jbe
outs
test
cmps
in
mov
cmp
adc
bound
cmps
les
clc
(bad)
icebp
movs
xchg
stc
cmps
jbe
pop
ja
push
(bad)
push
cmp
cmp
pop
or
sbb
sub
jno
in
icebp
jge
cmp
cmps
daa
pop
arpl
mov
and
out
popa
fsub
aad
push
adc
nop
test
and
pushf
js
shl
out
add
push
sub
(bad)
mov
adc
into
xor
cmps
adc
mov
adc
cmps
jo
pop
inc
cmps
add
das
adc
and
shl
inc
ins
mov
or
cmps
mov
or
loope
das
leave
dec
movs
or
sub
ja
xor
retf
shl
mov
jo
repz
mov
cmps
add
test
(bad)
mov
loope
sub
add
in
jbe
cmps
imul
pusha
add
das
pop
jl
cmp
outs
in
mov
jo
cmps
(bad)
or
ss
sbb
push
cmps
mov
xchg
and
cmps
iret
xchg
cmps
and
imul
rcl
cmps
out
pop
adc
or
xchg
mov
mov
cmps
jo
push
mov
in
es
(bad)
dec
cmps
and
in
inc
mov
movs
or
add
shl
push
mov
cmp
popf
and
sub
cmps
sbb
push
(bad)
cli
aas
jnp
cmps
push
adc
push
bound
push
pop
pop
and
mov
sbb
xor
sbb
call
adc
cmps
mov
dec
sbb
jns
lods
jae
push
cmps
jnp
inc
les
jp
inc
jp
mov
inc
dec
mov
xor
inc
out
jno
lock
add
sbb
jae
sub
mov
xor
or
xchg
push
inc
xchg
cmps
jns
dec
hlt
sbb
ror
jl
inc
adc
or
lods
cmps
jl
test
xchg
xchg
jge
xchg
les
push
jne
(bad)
imul
arpl
push
pop
jle
lds
pop
cmps
rcr
xchg
adc
das
dec
pop
pop
ret
and
stos
push
lods
(bad)
cmps
pop
shl
sbb
adc
mov
fwait
add
cmps
push
sahf
push
loop
adc
(bad)
sbb
cmps
les
(bad)
mov
xor
push
cmp
nop
add
jg
xchg
pushf
and
sub
lds
lods
pop
jge
sub
mov
daa
cmps
mov
cmps
xor
or
int3
fsub
aad
sbb
cmps
test
xchg
jp
pop
mov
mov
and
into
cmps
cmps
sub
inc
lods
cmps
test
lock
mov
cmp
mov
inc
sub
test
ins
inc
mov
jno
in
mov
rcl
jg
xor
mov
inc
inc
cmps
dec
ror
push
lods
xchg
cmps
sub
test
dec
retf
adc
mov
retf
movs
jo
push
add
fadd
dec
in
sub
retf
cmps
sbb
jmp
xlat
scas
xchg
cmps
mov
sub
mov
mov
jo
mov
scas
bound
in
add
jle
cmp
and
and
data16
fbld
rol
add
pop
inc
enter
jge
or
xor
cmp
cmps
mov
adc
mov
cmps
mov
inc
lods
xor
cmps
or
cmp
les
cmps
pushf
bound
adc
pop
mov
cmps
dec
and
mov
mov
cmps
js
mov
and
cmps
jge
push
pop
bound
jno
dec
adc
xor
mov
mov
sbb
add
sub
push
les
jnp
movs
addr16
pop
jmp
and
push
ror
test
adc
int
adc
xor
cdq
(bad)
(bad)
(bad)
push
lods
daa
ds
cmps
lods
sbb
fs
movs
inc
inc
cmps
sbb
out
and
pop
inc
and
push
js
movs
mov
jne
les
jae
push
arpl
mov
imul
mov
cmp
sar
sub
daa
enter
mov
mov
add
cmpxchg
inc
xor
cmps
adc
fcomp
mov
and
inc
jbe
test
psadbw
add
in
inc
pop
cmps
les
lahf
pop
sbb
and
mov
cmp
push
xlat
mov
dec
mov
ret
push
movzx
fldenv
or
xchg
je
int3
(bad)
fwait
xchg
jo
add
and
dec
and
add
cmp
je
pushf
xor
push
add
jb
rcl
push
push
mov
mov
out
(bad)
nop
ja
je
jg
xchg
mov
lea
das
(bad)
out
inc
mov
xchg
pop
xchg
mov
into
mov
mov
pop
mov
jb
mov
test
add
dec
mov
addr16
jge
jno
sub
cli
xchg
fcom
pop
jmp
mov
aaa
pop
loope
sbb
sub
xchg
cmp
jle
lods
jmp
or
daa
pushf
cmp
in
inc
lods
ja
test
jl
sahf
loopne
add
add
add
xor
jae
das
xchg
pop
loope
push
dec
int3
pop
pop
mov
push
jecxz
(bad)
mov
push
daa
es
xchg
and
dec
sub
mov
push
fucomip
lsl
retf
cmps
scas
rol
and
mov
adc
xor
cs
sbb
dec
gs
call
jae
dec
sub
add
in
sub
inc
enter
mov
mov
cwd
add
shl
lea
push
push
xor
sub
(bad)
loopne
cs
push
cmp
adc
adc
ins
fisub
adc
adc
div
dec
ins
mov
adc
outs
cmc
push
daa
pop
add
fsub
xchg
xor
sbb
lea
xor
inc
gs
hlt
hlt
add
and
sbb
pop
add
jl
and
sub
inc
mov
(bad)
in
rol
shl
arpl
push
cmp
pop
call
ss
and
and
std
cmp
and
add
rcl
mov
rol
lock
loopne
imul
mov
pop
xor
mov
jnp
sbb
mov
cmps
xchg
add
rcl
cmp
sub
retf
dec
dec
in
lods
push
mov
cmp
mov
stos
inc
add
cmps
and
jl
inc
and
xlat
add
cmp
mov
mov
lods
push
sub
rcr
add
mov
or
push
cwde
sub
xchg
push
inc
add
or
test
xor
cwde
mov
data16
sbb
xchg
neg
cdq
adc
ret
hlt
inc
push
add
in
xor
push
or
je
or
je
jnp
jl
int
loop
push
lea
xchg
sub
add
or
mov
loopne
stos
call
jmp
mov
nop
mov
retf
ret
pop
jge
dec
in
adc
pop
adc
cld
in
jl
or
pop
mov
daa
aam
mov
add
inc
loopne
ds
push
mov
push
pop
or
(bad)
or
pop
add
addr16
and
ins
xor
push
test
rol
fadd
or
fnstcw
(bad)
hlt
jb
fdiv
pop
add
neg
push
loopne
and
jo
ror
or
push
ss
or
push
inc
mov
jmp
or
add
ficomp
or
push
xchg
xchg
ds
fild
cwde
dec
pop
mov
mov
pop
out
and
jo
stos
sub
pop
call
push
push
xor
into
jo
xchg
fsub
sub
(bad)
fidivr
out
nop
in
test
mov
xor
jmp
xchg
ret
add
test
repz
retf
sub
jg
push
add
into
sub
cld
or
add
stos
retf
push
cmp
mov
or
ret
sar
and
add
mov
and
jmp
ss
pop
(bad)
xor
sar
push
add
jle
add
test
clc
sub
pop
or
int3
adc
add
mov
and
fucomi
xor
inc
inc
cmp
mov
aam
push
inc
out
cmp
xor
xor
inc
inc
inc
xchg
hlt
pop
or
xlat
in
inc
out
das
cmp
fstp
mov
mov
push
shr
add
lea
ror
mov
ret
pop
dec
popf
repz
adc
xlat
or
pop
add
inc
lock
stc
pushf
xor
inc
xchg
aas
int3
mov
pusha
test
pop
fsub
xchg
push
stos
stos
icebp
push
mul
lods
arpl
dec
adc
cmc
clc
add
cmp
add
loope
sub
dec
mov
movs
xchg
lahf
pop
pop
ret
stc
jg
jmp
xor
(bad)
stos
sbb
sub
push
adc
pop
and
add
inc
ins
or
pop
jle
in
xchg
clc
stos
dec
cmp
mov
not
sub
inc
jno
and
jbe
push
stos
add
mov
pop
add
loop
ror
pusha
add
add
adc
mov
push
sub
pushf
push
stos
xor
call
pushf
add
bnd
inc
(bad)
loope
scas
mov
retf
outs
ins
lock
sbb
bound
popf
fcom
sbb
aam
imul
adc
std
dec
push
xor
mov
popf
cmp
mov
sbb
mov
push
sbb
inc
mov
or
xchg
push
xlat
jl
pop
push
sub
cmp
ss
les
mov
mov
hlt
adc
in
mov
jo
loop
xor
mov
aas
xor
jl
shl
mov
sbb
mov
pop
mov
cdq
sbb
xchg
(bad)
in
dec
cmp
xchg
sub
dec
adc
mov
sub
loope
add
pop
mov
push
mov
ret
jne
or
mov
pop
pop
cmps
push
pop
loope
add
xlat
(bad)
movs
sbb
dec
jl
inc
push
push
loope
xor
jnp
jg
inc
xor
pop
inc
dec
jne
xor
pop
scas
jbe
sub
cmp
jne
adc
int
xor
cmp
or
and
sbb
add
mov
jne
fucom
(bad)
les
sti
dec
add
shl
adc
fnstcw
jno
jl
or
retf
outs
xchg
mov
jg
shr
loop
dec
jbe
push
and
pushf
pop
or
adc
xor
or
xor
mov
aas
jbe
push
push
test
push
jmp
mov
retf
mov
ja
cmps
pusha
je
push
fisttp
(bad)
gs
and
pop
or
jne
ror
lds
ss
mov
mov
das
jl
clc
dec
clc
jns
test
fisub
jns
jno
pop
sub
je
movs
sub
movs
inc
xchg
mov
rol
je
mov
sbb
sbb
mov
ficomp
add
pop
push
jge
movs
test
mov
cmps
cmp
mov
push
adc
mov
mov
retf
scas
ret
inc
and
sub
lahf
xlat
daa
inc
xchg
mov
movs
push
das
sbb
add
dec
dec
adc
cmps
inc
aam
mov
daa
mul
mov
sub
mov
pop
pop
test
or
mov
and
dec
mov
inc
and
and
das
jns
test
add
outs
pusha
or
mov
push
inc
test
scas
push
daa
dec
adc
push
movs
mov
fdivr
daa
test
daa
test
push
mov
push
jo
daa
jmp
and
stos
adc
lock
daa
hlt
daa
leave
mov
mov
inc
fst
daa
daa
jns
repnz
cmp
inc
test
pop
call
or
push
test
mov
daa
jb
in
fdivr
fld
nop
daa
inc
jge
inc
(bad)
or
daa
pop
pop
js
repz
retf
test
push
lock
fcom
add
stos
push
or
inc
fnstsw
or
cmps
mov
out
enter
inc
daa
mov
aas
and
jl
mov
dec
add
sbb
xor
lods
daa
in
mov
ins
dec
adc
xchg
push
add
movs
and
sub
xor
push
daa
mov
inc
or
push
test
push
daa
push
adc
xor
push
out
sbb
test
mov
pop
js
je
repnz
sbb
daa
ins
xchg
sub
mov
daa
ins
sub
daa
mov
aas
mov
inc
retf
std
mov
cmp
or
sti
add
or
xchg
pop
push
pop
cli
fnsave
cld
add
sbb
mov
or
mov
or
je
jnp
add
and
xchg
test
mov
movs
into
mov
pop
movs
les
mov
mov
add
pop
jl
and
cmps
dec
pop
mov
push
movs
sub
pop
ret
test
inc
test
cmp
xchg
cld
loopne
mov
or
daa
mov
mov
and
ret
shl
push
test
jbe
ss
mov
test
cmp
lods
push
arpl
cmc
iret
inc
test
pop
cmps
dec
movs
and
fisttp
pop
and
jne
inc
daa
sbb
mov
push
rcr
or
pop
mov
test
leave
in
xchg
mov
(bad)
ror
mov
mov
dec
sub
add
pop
or
pop
pop
xchg
adc
xchg
mov
push
outs
nop
pop
push
adc
or
ret
push
pop
repz
xchg
repnz
pop
jmp
adc
int
or
int
mov
jmp
xor
cmp
aas
test
pop
mov
and
iret
cmp
pop
jmp
adc
clc
dec
push
dec
xor
movs
adc
dec
bound
in
adc
mov
push
fistp
daa
pop
sub
inc
push
dec
xor
xchg
mov
pop
aaa
inc
mov
inc
jb
movs
pop
cmp
inc
movs
ins
js
je
enter
test
sbb
in
mov
dec
mov
ret
ficom
nop
jl
outs
jp
loopne
les
aas
fcom
cmps
mov
jb
inc
scas
fwait
dec
mov
mov
retf
or
popf
js
add
hlt
push
addr16
mov
iret
dec
movs
std
(bad)
pop
pop
inc
or
add
ficom
push
adc
imul
add
add
or
ret
pop
dec
retf
sbb
call
dec
rol
sti
add
add
js
pushaw
push
or
cs
dec
fimul
and
adc
mov
xchg
rcr
dec
push
lahf
add
jl
in
jle
sar
into
idiv
lea
dec
cmp
jg
push
pop
push
pop
xor
ds
pop
or
outs
out
jle
push
add
fcom
cmp
or
outs
(bad)
mov
push
mov
adc
call
es
and
mov
mov
jmp
mov
mov
hlt
cmp
jg
mov
loope
mov
sub
shr
add
es
or
jae
sti
add
xchg
addr16
hlt
mov
jp
ret
sbb
ret
les
mov
add
(bad)
aaa
xchg
pop
leave
dec
sbb
aam
cmp
test
pop
fsub
fcmove
push
iret
shr
pop
ror
aaa
outs
jae
fisub
outs
inc
outs
push
cmp
push
push
outs
inc
dec
cmp
pop
push
repnz
jbe
mov
push
adc
xchg
cmp
xlat
enter
jne
mov
popa
jne
xlat
jo
daa
jns
mov
push
pop
dec
mov
scas
xor
xor
scas
push
push
or
pop
popf
mov
dec
hlt
shl
xchg
mov
bound
and
test
pop
test
ja
dec
sbb
dec
daa
mov
(bad)
out
and
xor
icebp
and
movs
jae
dec
sbb
outs
sub
adc
clc
les
iret
sub
popa
inc
xchg
aas
dec
adc
push
out
call
icebp
jo
loopne
lods
dec
test
shr
aam
mov
inc
es
push
or
sub
and
and
mov
xlat
dec
add
scas
adc
cmp
xor
sub
push
inc
add
and
jle
or
rol
lods
adc
mov
dec
adc
pop
cmp
jg
adc
add
adc
sti
jg
jne
adc
adc
inc
jne
add
add
mov
pop
xor
xchg
pop
jg
ins
cmp
cmp
cmp
aas
ss
pop
add
pushf
jg
mov
push
leave
mov
cmp
jg
adc
sub
imul
rcl
dec
mov
jno
add
pushf
push
daa
add
ror
and
pop
push
inc
add
pop
lahf
adc
xor
imul
xchg
pop
add
add
pusha
adc
jl
add
inc
mov
mov
(bad)
sub
ficomp
inc
add
adc
loopne
mov
je
mov
cmp
rol
pushf
cmp
or
push
add
or
mov
call
loopne
inc
sub
dec
inc
jnp
add
(bad)
call
push
add
adc
pop
pop
fbstp
add
test
in
popa
add
mov
stc
add
add
js
(bad)
pusha
loope
add
dec
sbb
adc
add
sub
into
int3
sar
mov
xchg
fsub
rcr
push
jle
inc
or
or
sub
pop
sbb
sub
or
jmp
pop
jmp
es
adc
rol
add
inc
or
sbb
outs
repz
push
dec
and
push
cld
ror
pop
xrelease
(bad)
adc
lods
adc
sub
rcl
out
lds
fdivr
xor
inc
call
(bad)
mov
rol
stos
shl
enter
sub
test
pop
sub
adc
add
not
out
add
lea
add
inc
add
jbe
add
(bad)
jge
test
movs
cmp
rcl
and
popf
je
add
jle
add
vaddps
pushf
pop
mov
fwait
pop
outs
pop
aam
xchg
outs
pusha
xchg
imul
mov
aam
add
add
add
sbb
pop
mov
pop
jno
mov
test
mov
aam
dec
sbb
bound
dec
mov
enter
ds
adc
jo
mov
push
push
add
loope
cmp
pop
aaa
push
add
js
inc
or
and
mov
xchg
mov
inc
sar
pop
sub
enter
add
sahf
ja
sub
aas
les
cmc
push
sbb
ins
xlat
lea
imul
sub
cmps
adc
icebp
shl
aad
(bad)
mov
into
loop
and
shl
jae
scas
or
mov
lea
push
and
xchg
aad
xlat
stos
mov
or
(bad)
pusha
hlt
dec
mov
ret
adc
dec
fs
mov
stos
jge
pop
xor
cmp
ja
cmp
sbb
sub
inc
push
mov
jbe
mov
mov
add
or
inc
mov
adc
add
mov
lock
dec
sti
pop
outs
ds
ret
jmp
add
sbb
cmp
dec
fsubr
xor
daa
push
or
adc
xchg
(bad)
fild
dec
test
fimul
loope
retf
(bad)
in
inc
push
sub
mov
jo
lahf
pop
shr
add
jne
imul
or
pushf
jnp
inc
dec
outs
sub
(bad)
jle
sti
inc
mov
push
push
ja
fwait
and
pop
cmp
idiv
dec
push
ja
mov
fdivr
dec
shl
fs
adc
jecxz
fbstp
loop
push
je
or
rcl
adc
mov
inc
or
mov
daa
out
je
clc
jns
push
push
retf
pusha
jb
je
popf
and
es
ret
pop
push
xchg
lods
adc
leave
mov
(bad)
sbb
lods
and
sbb
inc
push
add
or
xchg
adc
jecxz
fcmovu
shl
les
push
shl
xchg
push
cmps
push
jge
xor
fadd
shr
daa
push
inc
adc
mov
mov
pushf
xor
mov
ja
xchg
xchg
cmp
movs
or
fcomp
out
loopne
call
and
push
dec
mov
daa
adc
cmps
pop
xor
push
inc
test
xchg
aam
push
mov
(bad)
jno
out
pop
sub
pop
sahf
jg
sub
sbb
in
xchg
xor
or
popf
mov
or
push
pusha
je
mov
popa
adc
(bad)
iret
loopne
inc
mov
sar
xchg
ret
push
or
pop
mov
or
push
xor
cs
xor
push
les
lds
js
cmp
adc
push
lods
add
dec
adc
iret
ficom
jns
out
cmp
popa
ds
out
cwde
jo
iret
ficomp
jecxz
cmps
dec
add
pusha
push
lods
push
sbb
iret
jmp
movs
inc
mov
jno
iret
add
lock
daa
cmp
sbb
and
and
and
jmp
hlt
iret
addr16
daa
or
and
mov
iret
int
sub
stos
(bad)
movs
mov
cmp
call
mov
popf
in
sub
loop
jecxz
adc
push
movs
pop
cmp
mov
pusha
dec
scas
add
cs
retf
and
dec
mov
jmp
xchg
js
movlps
mov
pop
mov
or
mov
jne
adc
ds
mov
lahf
or
pop
xor
je
addr16
xchg
int
push
add
add
shl
out
loopne
fcom
fnstcw
dec
int
or
scas
and
adc
das
xor
inc
test
cmp
pop
add
jbe
cmp
inc
jge
sbb
dec
jmp
adc
and
dec
mov
sahf
pop
mov
and
pop
in
jne
out
adc
jg
push
test
cmps
into
push
lods
lods
sbb
mov
or
and
nop
in
test
mov
mov
addr16
(bad)
push
(bad)
loopne
or
adc
adc
dec
test
xor
xor
mov
ror
inc
mov
out
mov
push
ins
sbb
(bad)
xor
shr
jmp
xchg
(bad)
adc
pushf
sbb
movs
lods
push
das
xor
dec
hlt
mov
outs
dec
jns
xor
inc
inc
cmp
popf
pop
and
(bad)
xor
cmp
cmp
xor
mov
and
(bad)
hlt
pop
or
push
pushf
in
push
xlat
aaa
sbb
test
push
lea
aam
mov
inc
push
movs
mov
out
jmp
inc
in
aas
xchg
inc
mov
add
fnsave
mov
movs
push
sub
adc
dec
sbb
sbb
out
nop
ss
mov
mov
jmp
stos
mov
jp
mov
mov
pop
ss
or
in
fadd
sbb
xor
jge
mov
lds
sbb
jl
cmp
ss
and
test
push
mov
ins
fistp
hlt
adc
in
mov
jo
sub
jle
or
jl
jg
xchg
adc
push
cmp
sbb
inc
jne
pop
mov
ins
clc
jo
rdpmc
ror
hlt
(bad)
push
or
test
rcl
xchg
fsub
je
aad
aam
stos
xchg
push
jmp
sub
mov
pop
(bad)
(bad)
out
cmp
add
jp
repnz
mov
es
mov
iret
push
sub
and
inc
adc
aaa
sub
ret
jle
or
retf
mov
ficomp
inc
cmp
pop
pop
or
inc
mov
fcom
cs
push
push
jo
mov
and
pop
or
jne
inc
adc
popf
iret
xchg
jne
dec
clc
jns
xor
(bad)
fs
ins
jns
jb
loop
hlt
jle
je
push
mov
movs
pop
loopne
stos
clc
and
sbb
ja
adc
adc
call
movs
(bad)
push
mov
fidivr
push
jnp
mov
repnz
xchg
jmp
pushf
in
push
push
in
push
sub
dec
sub
movs
xor
or
inc
in
je
sbb
sbb
and
adc
jmp
or
or
dec
test
mov
push
pop
mov
mov
jmp
mov
fcom
adc
loope
call
jmp
adc
xor
mov
adc
push
out
call
icebp
fdivr
adc
test
(bad)
dec
cdq
popa
(bad)
cmps
push
sbb
movs
ror
adc
ret
xor
jmp
das
xor
mov
and
mov
cdq
(bad)
(bad)
cld
push
mov
push
test
add
rol
add
adc
in
(bad)
jl
xchg
inc
rcr
jl
arpl
mov
loopne
(bad)
cmc
pusha
shl
call
movs
movs
inc
inc
dec
sub
popf
mov
adc
push
aam
mov
lds
push
pushf
sub
imul
psrld
movs
jmp
loopne
push
add
push
pop
push
mov
movs
push
cdq
dec
mov
jno
sbb
dec
sbb
daa
sbb
aam
iret
pop
repz
push
xlat
dec
hlt
cmp
aam
adc
sub
pop
test
add
aam
sub
pop
and
and
aaa
add
jge
add
inc
pusha
inc
add
mov
mov
add
inc
add
ins
or
inc
sub
(bad)
adc
mov
push
mov
mov
retf
or
push
sbb
adc
push
and
dec
loopne
mov
and
add
(bad)
cmps
rol
add
cli
rol
or
fbstp
add
dec
and
or
dec
in
cmps
xor
scas
addr16
loopne
and
test
je
add
dec
(bad)
popf
mov
outs
sbb
jne
xor
pop
jbe
jb
iret
xchg
rcr
push
(bad)
fisttp
and
shl
pop
or
mov
add
mov
rol
inc
adc
cmp
scas
inc
hlt
adc
fnsave
sbb
outs
inc
fisub
imul
cli
xor
ror
test
cmc
xor
xchg
in
out
inc
xor
leave
retf
add
xor
dec
in
add
pop
sub
shl
adc
sub
sbb
sub
sysexit
mov
or
adc
inc
cmp
jge
test
sub
and
and
dec
mov
je
xchg
dec
adc
add
vcmpps
ds
loope
fnsetpm(287
outs
pop
aam
loopne
sbb
lock
mov
push
push
(bad)
and
add
fcmovbe
pusha
lock
mov
or
push
fsub
inc
pop
sti
mov
adc
pop
loop
and
and
xor
mov
mov
ret
fbstp
fdivr
or
push
repnz
fistp
sub
movs
adc
fild
dec
das
add
or
(bad)
or
(bad)
mov
mov
stc
and
dec
jo
sub
add
mov
enter
sbb
pmuludq
sbb
ja
sbb
jecxz
(bad)
pusha
popa
les
pop
sub
sub
fsub
repz
or
add
out
loopne
add
daa
cmp
inc
cmp
into
loop
nop
or
ja
loopne
mov
jae
scas
or
mov
lea
push
and
ret
xchg
jmp
shr
inc
adc
dec
sub
jp
pop
xchg
adc
es
mov
stos
jge
dec
sbb
ja
(bad)
cmp
je
push
lods
mov
in
dec
sub
in
sub
(bad)
mov
adc
aaa
mov
cs
push
mov
inc
mov
xor
jno
add
mov
pop
add
jo
outs
cmps
or
cmp
jne
push
jmp
jo
dec
fsubr
xor
sbb
adc
mov
fs
fsubrp
sbb
mov
loope
retf
(bad)
in
lods
scas
push
inc
sbb
out
push
bound
mov
pop
add
inc
imul
dec
outs
call
cmp
jle
sti
ja
fild
mov
fwait
mov
push
mov
push
pop
ja
pop
add
inc
cmp
mov
mov
push
ja
sahf
retf
jl
jle
fs
sahf
hlt
jge
adc
jl
or
je
or
sbb
add
push
cmp
xor
dec
pop
jo
outs
je
clc
jns
aam
sbb
push
ins
jns
rcl
iret
jnp
mov
xor
into
or
cpuid
mov
or
ins
les
imul
nop
xchg
inc
imul
mov
arpl
push
mov
pop
push
mov
inc
dec
stos
pop
pushf
ficomp
push
dec
adc
pop
mov
cmp
mov
stc
cmp
push
add
(bad)
xchg
ja
daa
stc
add
inc
jb
add
(bad)
(bad)
fdiv
or
mov
ins
data16
adc
pop
inc
inc
mov
hlt
pop
aam
adc
xor
aam
mov
pop
out
call
jg
mov
or
out
push
sub
xor
call
push
pusha
je
mov
push
add
inc
rol
jb
push
(bad)
sub
inc
cdq
xor
adc
and
mov
push
dec
mov
add
ins
addr16
lods
pop
jl
push
loopne
cmp
ret
test
push
pop
les
adc
iret
inc
mov
push
mov
sub
(bad)
hlt
lds
iret
xor
ins
or
cmc
adc
jne
xchg
iret
test
iret
mov
inc
iret
and
adc
daa
mov
mov
cmp
loopne
cmp
add
or
mov
adc
(bad)
fst
inc
stos
pop
or
push
push
sub
movs
aam
sbb
gs
push
mov
adc
xor
adc
imul
scas
mov
scas
add
std
adc
sub
jne
xchg
js
cld
and
and
mov
or
mov
sbb
or
mov
cmp
ds
mov
inc
or
pop
lods
push
jecxz
div
pop
xchg
rcr
xor
shl
in
dec
fcom
fnstcw
gs
and
and
sbb
push
loopne
add
cmp
xor
inc
mov
add
cli
mov
ss
cmp
inc
add
dec
jmp
call
les
mov
out
add
pop
pushf
stos
je
pop
pop
out
js
arpl
jg
add
sbb
into
push
lods
lods
sbb
mov
or
and
nop
in
test
mov
push
cmc
jo
mov
cwde
fidiv
js
inc
dec
or
adc
sub
push
repnz
mov
lods
pop
jbe
push
out
idiv
xor
not
pushf
cli
push
push
das
fbstp
shr
sbb
pop
adc
jo
mov
mov
push
inc
ret
dec
hlt
mov
outs
dec
jns
xor
inc
inc
cmp
popf
pop
and
(bad)
xor
cmp
cmp
xor
mov
and
(bad)
hlt
pop
or
push
pushf
in
push
xlat
aaa
sbb
test
push
lea
aam
mov
inc
pop
push
lock
out
xor
xchg
shl
(bad)
fdivr
scas
aas
popa
js
jl
xor
mul
nop
xor
and
mov
or
lods
out
sbb
out
nop
or
sub
lods
or
pop
cs
jmp
stos
mov
jp
pop
or
sbb
pop
ss
or
fidiv
xchg
jge
mov
mov
xor
jl
cmp
ss
push
mov
fdivr
in
mov
jo
sub
cld
inc
sbb
jl
jg
sub
mov
jo
lock
mov
sbb
ss
loopne
rdpmc
shl
pop
(bad)
push
or
inc
mov
push
jb
mov
adc
jno
stos
xchg
xchg
sub
sub
xchg
adc
mov
mov
cmp
add
jns
fisttp
jp
jmp
imul
cs
push
sbb
fdiv
mov
inc
test
cmps
aaa
pop
add
aaa
cmp
aaa
js
jl
or
retf
mov
ficomp
inc
cmp
push
xchg
outs
into
pop
push
inc
imul
loope
jns
pusha
dec
push
mov
and
pop
or
jne
ror
xchg
push
iret
xchg
jne
dec
clc
jns
dec
sbb
pop
ins
jns
into
add
or
pop
and
je
movs
jp
push
das
sub
mov
pop
or
sub
jecxz
and
adc
call
pop
shl
xor
rcl
push
lock
xor
or
xchg
cmp
push
(bad)
mov
stos
xchg
sbb
push
sbb
sub
push
xor
int
(bad)
and
sbb
daa
iret
out
or
loopne
cmps
inc
mov
repz
ret
cmp
cld
jmp
pop
into
jmp
popa
cmp
push
call
jmp
add
push
and
add
inc
xchg
push
lahf
dec
clc
cmp
out
call
pop
xchg
pushf
and
inc
and
popa
(bad)
xor
push
mov
add
and
and
mov
das
mov
enter
mov
cdq
(bad)
and
ja
push
mov
or
in
js
rol
lods
adc
inc
dec
dec
xchg
sub
call
in
movs
in
adc
(bad)
jmp
and
sbb
inc
push
mov
shr
shl
jo
inc
xor
dec
cmp
or
cmp
call
(bad)
jle
add
mov
mov
icebp
stos
push
pop
push
add
cld
jmp
imul
dec
test
(bad)
jno
adc
push
daa
sbb
test
inc
sub
pop
mov
xor
push
xor
popa
adc
or
sbb
and
nop
push
sub
xor
mov
cld
add
inc
xor
add
mov
add
sub
pop
or
in
test
aaa
inc
mov
adc
daa
pop
jae
dec
dec
retf
or
xchg
in
in
or
sub
and
dec
loopne
mov
xchg
dec
dec
cs
add
(bad)
shl
ror
add
push
add
jmp
fbstp
add
cmps
adc
inc
mov
sub
jnp
dec
in
cmps
call
stc
jo
adc
ins
test
xor
dec
dec
out
xchg
outs
sbb
inc
jge
jne
adc
add
lahf
push
sub
fild
adc
sbb
jmp
add
jmp
jmp
add
adc
aam
dec
adc
inc
mov
loopne
hlt
bound
inc
fnsave
int
sub
cmps
imul
dec
lock
pop
in
jmp
cmp
pusha
out
mov
popa
inc
out
inc
fdivr
inc
ror
fdivr
in
sub
add
xchg
pop
cmp
shl
sub
inc
jbe
mov
inc
pop
sbb
sub
dec
jno
xor
lea
ficom
add
inc
add
(bad)
jge
test
add
fadd
cmps
dec
mov
je
add
inc
fs
push
xchg
or
clc
or
jne
ds
xchg
aam
lock
jl
add
dec
xchg
fiadd
shl
mov
cmp
in
pop
pop
pop
or
aam
jecxz
call
push
ds
xchg
xchg
ins
ds
fist
inc
pushf
or
adc
fdivr
test
push
xchg
inc
fild
mov
mov
fistp
mov
push
pop
adc
(bad)
sbb
xchg
mov
push
and
push
inc
push
jae
pop
sub
enter
or
lds
ja
cmp
and
jecxz
data16
cmps
sub
les
and
sub
shl
repz
scas
sbb
xor
es
rol
inc
dec
add
test
loop
ja
aam
or
cmps
es
mov
or
lds
lea
push
and
xlat
stos
inc
adc
ret
mov
pop
xchg
test
(bad)
pusha
ret
or
jp
adc
and
push
pusha
jo
jge
clc
ja
mov
sbb
in
sub
js
in
dec
sub
(bad)
adc
aaa
mov
add
mov
(bad)
aaa
ja
dec
sbb
loopne
sti
pop
outs
push
xor
push
sbb
aas
cmp
jne
call
jmp
arpl
inc
mov
pop
movs
adc
pop
fs
lods
outs
xor
cmp
rcr
pop
movs
out
push
pop
push
sbb
call
imul
xchg
sub
(bad)
jle
sti
inc
mov
sbb
fwait
icebp
ret
nop
inc
int
inc
inc
(bad)
sbb
jo
ja
mov
aad
ja
jl
jle
pop
jnp
outs
fs
adc
jl
or
je
loopne
ror
and
push
adc
and
pop
or
shl
call
ins
jns
jmp
xchg
je
cmps
xchg
push
add
leave
pop
xor
ret
and
pop
mov
adc
inc
xchg
mov
add
jecxz
fisubr
loop
fbld
arpl
imul
hlt
int
test
mov
xchg
pushf
pop
jmp
daa
adc
loope
add
aaa
pop
mov
pushf
xor
add
cmp
mov
xchg
dec
push
inc
sub
in
leave
sbb
and
inc
add
xchg
sub
mov
mov
or
ins
xchg
(bad)
and
or
es
hlt
pop
or
popa
and
pop
add
test
(bad)
jno
mov
sbb
jg
push
rol
jg
in
push
int3
add
or
imul
or
push
pusha
je
mov
and
or
and
push
add
sar
or
or
adc
data16
adc
pop
movs
add
les
sub
xor
cmp
and
retf
push
stos
push
adc
adc
iret
jmp
mov
pop
pop
popa
inc
pop
iret
and
pop
ja
push
iret
dec
ss
dec
test
icebp
xchg
aas
sub
mov
adc
or
mov
pop
adc
cmp
in
cmp
pop
iret
hlt
pushf
sub
inc
iret
lea
aaa
dec
push
lods
xor
iret
repz
int
lods
adc
mov
mov
call
mov
jbe
adc
je
pusha
adc
mov
pop
or
xor
cs
sbb
pop
sbb
ret
xchg
js
cld
sub
cmp
loopne
or
sbb
or
adc
adc
mov
aad
lods
je
add
xchg
push
add
mov
shl
xchg
dec
out
loopne
fnstcw
and
and
or
scas
in
push
loopne
xor
inc
dec
jo
ror
or
push
ss
lods
out
push
inc
add
dec
jmp
call
dec
dec
lods
mov
clc
mov
shr
loopne
xor
adc
push
and
sbb
into
jb
fcmove
jo
sub
stos
push
jne
out
in
ja
mov
das
shl
les
lgs
and
cmp
jmp
loop
adc
mov
xor
sub
fbld
je
sti
push
daa
push
push
out
arpl
test
mov
inc
fild
shr
into
imul
mov
data16
jp
add
jmp
retf
test
dec
hlt
outs
mov
int
out
fs
inc
inc
cmp
mov
(bad)
xor
dec
cmp
lods
mov
jle
fimul
and
pop
or
xlat
jo
mov
aaa
sbb
cmp
mov
pop
add
jne
repz
adc
dec
ins
adc
out
xor
add
nop
add
aas
dec
and
sar
and
mov
ds
or
or
inc
push
pop
xchg
jmp
push
movs
out
sbb
arpl
or
ret
(bad)
rcr
out
lds
sbb
or
xlat
xor
or
pop
xlat
jl
push
lds
cmp
ss
nop
mov
adc
in
mov
jae
mov
jo
sub
jl
ret
adc
adc
jl
xor
mov
add
dec
pop
mov
xchg
add
mov
and
(bad)
push
or
adc
and
xchg
push
pusha
push
stos
sub
mov
mov
adc
or
add
jp
jmp
cs
jns
es
sbb
add
mov
mov
les
adc
aaa
in
aaa
js
sub
dec
cmp
jle
mov
ficomp
inc
cmp
xchg
outs
or
pop
push
add
add
loope
jns
push
pusha
dec
mov
gs
and
pop
or
jne
or
outs
add
xchg
dec
xor
jns
add
test
(bad)
and
push
das
movs
movs
sub
pop
or
jp
pop
sub
bound
ja
clc
adc
call
pop
add
xchg
adc
xor
mov
stc
dec
pop
and
pop
xchg
xor
(bad)
fdiv
push
into
in
retf
sub
pop
push
inc
popf
dec
pop
cmp
xor
fxtract
mov
iret
fidivr
push
cmp
push
push
nop
mov
jge
outs
lock
or
leave
add
pop
adc
dec
push
ins
push
fwait
hlt
ret
push
mov
lods
jne
inc
adc
push
inc
rol
jge
pusha
jmp
dec
bound
dec
add
inc
or
pushf
mov
sub
sbb
mov
sub
jae
or
shr
sbb
aad
shl
jl
mov
out
idiv
lea
dec
cmp
jg
es
push
sbb
ror
sub
or
outs
mov
jle
push
add
fld
shl
adc
inc
retf
int3
int3
jmp
retf
adc
and
mov
mov
mov
mov
jmp
or
les
pop
lock
mov
sub
shr
add
fild
inc
sbb
and
pop
loopne
in
add
pop
add
push
popa
sbb
mov
lds
sbb
mov
inc
and
pushf
retf
adc
dec
and
das
xchg
mov
inc
dec
jo
and
mov
mov
cmp
test
arpl
lea
shl
and
jl
cmp
pop
cmp
pop
int3
sbb
rcr
aam
mov
rcl
cdq
sahf
sbb
es
sar
loope
rol
loope
das
pop
test
pop
inc
or
jns
mov
shl
or
sbb
call
fcomp
add
in
mov
or
lahf
cmp
dec
aas
jmp
fwait
dec
sub
lea
int3
xchg
xor
loop
push
out
dec
mov
aaa
sar
jg
cmp
jl
push
je
fmul
ins
ins
mov
mov
rcr
inc
mov
test
xor
jae
cmp
jle
in
arpl
aam
in
inc
lock
cmp
sahf
push
push
ret
lea
adc
push
ret
loope
adc
xlat
pop
les
out
enter
inc
lahf
push
imul
leave
sub
sbb
popa
mov
rcl
sub
lahf
pop
lods
push
sub
sub
inc
push
sub
les
xor
pop
sar
lds
jae
int
in
adc
frstor
or
sub
sub
pop
enter
bound
add
adc
pop
mov
stc
mov
dec
dec
cwde
add
mov
and
loopne
imul
ret
pop
push
pop
pusha
rol
adc
xor
dec
iret
rol
cmp
cmp
xlat
retf
and
in
and
retf
xor
inc
add
xlat
repnz
mov
xor
xor
mov
xchg
(bad)
mov
xlat
pop
adc
add
pop
das
test
dec
dec
sbb
dec
xchg
pop
jb
shl
or
push
pop
dec
in
cmp
scas
inc
push
call
jnp
xchg
cmp
push
push
call
inc
pop
stos
or
pop
push
mov
pop
pop
mov
(bad)
loopne
mov
push
xchg
pop
inc
push
cmp
push
fdivr
sub
scas
pop
cmps
rol
push
add
scas
lahf
lock
xchg
push
movs
test
inc
clc
dec
mov
inc
daa
shr
add
inc
and
lock
push
test
repz
mov
fldcw
jg
mov
or
push
mov
ins
std
scas
push
jbe
adc
mov
add
push
imul
ret
mov
sar
movs
mov
xor
add
add
push
enter
stos
stc
jo
pop
in
in
test
xchg
loope
lea
jno
in
shr
push
pop
sbb
and
cmp
adc
adc
mov
test
sub
cdq
sbb
sbb
fmul
loopne
xor
in
rol
and
popa
add
and
inc
repnz
nop
punpckhwd
out
in
ret
lock
test
out
xor
push
repz
adc
aaa
in
inc
adc
dec
jl
cmp
mov
pop
aad
ins
add
pop
xchg
push
bound
repnz
daa
pop
inc
mov
rol
adc
cmp
push
sub
inc
pop
lods
add
xchg
sub
push
sbb
add
pop
xchg
dec
xchg
pop
and
pop
daa
cmp
mov
adc
inc
push
adc
add
(bad)
jg
mov
jl
cmp
ins
jo
jb
jae
outs
cmp
jns
je
ins
cs
outs
iret
fdivrp
je
gs
dec
popa
outs
popa
addr16
push
pop
imul
bound
outs
adc
stos
add
sbb
inc
outs
pusha
arpl
inc
gs
jne
je
add
test
sbb
add
push
mov
xchg
ret
add
pop
(bad)
or
mov
adc
int3
sub
int
repz
inc
and
std
in
cs
call
push
pop
push
add
add
outs
mov
pop
fsub
cli
push
adc
jp
xor
sar
jle
push
adc
or
aad
idiv
sub
or
push
jl
and
imul
dec
xor
xlat
add
xor
cmpxchg
xor
ss
scas
cmp
push
mov
ror
push
add
gs
data16
les
add
test
mov
or
outs
retf
arpl
push
or
mov
mov
or
inc
add
fild
imul
in
jo
fmul
adc
jge
or
je
or
push
imul
sbb
nop
push
popa
xor
push
mov
jge
daa
mov
data16
pusha
push
or
mov
in
mov
sub
xor
sbb
push
adc
xchg
ficom
iret
and
dec
adc
add
xor
push
dec
outs
jbe
inc
jb
popa
jns
inc
add
mov
addr16
pop
pop
movs
jo
popa
sbb
or
or
inc
(bad)
popa
inc
mov
jmp
mov
gs
in
pop
push
outs
and
mov
jne
xor
cwde
pop
cmp
mov
shl
das
clc
popa
push
mov
inc
lock
ins
imul
mov
scas
add
cs
pop
std
rcl
ins
(bad)
jg
out
add
xlat
in
dec
mov
ins
ins
gs
imul
cmove
xor
push
popa
arpl
and
and
and
je
repz
pusha
pop
or
add
gs
xor
in
sar
adc
daa
into
repz
pop
int3
pop
imul
jno
add
cs
add
jbe
rcl
or
mov
add
loopne
out
mov
es
and
mov
mov
mov
or
fadd
add
xchg
push
out
pusha
clts
xor
add
add
add
call
push
jnp
rol
daa
add
and
mov
or
dec
adc
pop
cmps
add
imul
inc
mov
push
imul
loopne
cmp
push
xor
outs
sub
pop
cs
inc
xchg
js
sti
mov
push
mov
or
pop
in
daa
or
outs
pop
mov
jae
mov
pop
lea
ins
(bad)
pop
add
pop
sub
mov
bound
or
pop
mov
mov
push
pop
add
jo
loope
pop
or
outs
leave
mov
loopne
inc
sbb
pop
shl
lods
add
jo
enter
mov
pop
aam
repnz
push
int3
fiadd
movs
add
push
cmp
or
cwde
movups
xchg
adc
pop
mov
addr16
xchg
cwde
ins
mov
sbb
inc
pop
fwait
inc
and
pop
loopne
and
and
stos
retf
pop
or
mov
add
test
fdivr
pop
xor
pop
or
test
pop
pop
scas
loopne
repnz
pusha
ins
jno
ja
xor
mov
loopne
mov
sbb
aam
add
inc
or
xlat
add
pop
push
pop
pop
or
mov
add
call
push
or
jecxz
clc
pop
or
rol
adc
mov
xor
push
or
loopne
pop
cmps
popa
ror
mov
sar
mov
in
loopne
pop
sub
inc
fs
jo
jb
ins
popa
jae
ds
mov
jae
push
dec
sbb
icebp
pop
fld
add
bound
add
inc
or
call
add
or
out
outs
dec
(bad)
imul
push
push
sbb
or
add
jb
push
dec
bound
adc
inc
adc
mov
pop
mov
mov
je
pop
inc
sub
or
daa
or
sub
inc
daa
inc
push
sbb
pop
xchg
outs
add
push
ja
pop
mov
cwde
push
test
push
pop
xchg
and
adc
pop
into
push
popa
aad
rcl
adc
fwait
jo
push
out
fistp
cmp
push
adc
int
or
out
out
push
loope
jo
out
mov
test
or
mov
pop
jge
push
sbb
dec
stos
cmp
aas
rcl
jns
fs
inc
outs
jne
dec
popa
bound
inc
inc
pusha
inc
xor
push
adc
das
mov
pop
imul
jns
push
leave
imul
inc
mov
push
test
xchg
jmp
rcr
std
inc
pop
pop
shr
add
push
add
loope
jge
enter
add
cmp
or
cs
hlt
dec
jg
push
xor
xor
in
pop
bound
inc
jb
sbb
and
mov
mov
and
inc
mov
sub
and
xchg
mov
sub
add
push
shl
inc
mov
lahf
mov
cmps
sub
jg
add
jl
dec
push
mov
jno
add
adc
pop
inc
jne
lods
scas
ffreep
sbb
add
push
int3
and
push
ins
jge
icebp
imul
mov
test
scas
sbb
hlt
mov
sbb
loopne
xchg
push
push
fwait
sub
inc
fsub
adc
jecxz
xchg
not
mov
sub
test
sub
outs
add
dec
sub
mov
inc
mov
add
add
jg
dec
jno
mov
dec
mov
sar
bound
adc
or
repnz
and
jb
(bad)
cld
dec
cmp
cmp
enter
test
icebp
and
dec
dec
fwait
ror
xchg
daa
daa
daa
(bad)
mov
adc
pop
mov
cmp
adc
pop
aas
outs
adc
lds
test
add
mov
sub
sub
sub
fsub
dec
or
fdivr
or
inc
jg
cmp
mov
jno
sbb
(bad)
fnstenv
and
repnz
outs
jns
cwde
dec
hlt
sub
dec
add
add
push
aad
mov
mov
addr16
push
adc
or
inc
imul
int3
add
aad
ficom
sbb
add
mov
(bad)
cmp
(bad)
add
arpl
add
push
ss
push
in
mov
or
ins
bound
cmp
mov
push
or
scas
add
sub
mov
ja
shl
dec
outs
and
add
add
loopne
cmc
enter
or
cld
out
add
fild
and
loopne
or
sub
mov
dec
add
loopne
and
das
leave
call
gs
sub
pop
dec
and
adc
addr16
lds
outs
imul
pop
add
lods
jns
xor
xor
dec
adc
arpl
push
mov
xchg
adc
push
repnz
popf
add
add
in
inc
and
and
outs
mov
dec
add
push
stos
mov
push
sbb
in
fs
sbb
push
jo
nop
arpl
ja
leave
sti
pop
fwait
pop
add
or
mov
add
cmp
mov
scas
mov
adc
adc
mov
arpl
mov
xor
pop
xor
cmp
or
(bad)
loopne
dec
or
ja
sbb
push
lock
in
pushf
inc
pop
jae
add
push
lds
es
mov
clc
pop
add
popa
pop
and
fsubr
mov
lock
inc
push
lds
or
push
call
sub
dec
mov
add
movs
je
imul
call
cmps
or
popw
push
stos
jnp
add
push
imul
loope
cmp
jmp
mov
mov
and
les
sbb
loop
jmp
inc
push
push
test
rcr
and
inc
adc
dec
or
and
repz
and
mov
adc
xchg
mov
dec
dec
test
lahf
dec
jb
ins
mov
jae
leave
sbb
or
xor
xor
aam
cmp
adc
push
and
sub
or
add
add
in
pop
ins
or
pop
imul
je
xor
in
inc
fadd
or
lea
inc
jno
sbb
adc
lods
por
or
xor
(bad)
in
sub
sub
push
fistp
pushf
aad
movs
fmul
push
or
push
idiv
xor
arpl
jns
add
in
inc
xor
sbb
aas
or
jo
dec
mov
pop
ret
imul
adc
add
dec
jo
and
jg
out
mov
mov
push
loopne
or
out
inc
sbb
out
fild
or
leave
add
mov
imul
pop
push
das
jb
push
add
scas
mov
pop
push
add
mov
add
jmp
jmp
adc
test
mov
mov
int
pusha
add
adc
add
add
adc
push
clc
hlt
adc
stos
and
adc
adc
nop
and
pop
mov
lods
add
jne
fist
aam
add
(bad)
ds
jp
mov
adc
bound
fld
icebp
push
adc
cmps
fst
sti
repnz
outs
jge
adc
rdtsc
cld
mov
pushw
jp
aas
pusha
stos
xchg
mov
outs
test
or
nop
shl
mov
(bad)
push
call
inc
(bad)
test
pop
or
and
ss
lods
pusha
or
fld
mov
test
xchg
(bad)
fnstenv
push
sbb
scas
push
sbb
cmp
mov
lock
fnstsw
push
jo
jl
pop
jne
sbb
or
jl
test
push
test
xor
push
lods
imul
add
pop
mov
rol
mov
enter
push
xchg
inc
pop
xlat
mov
pop
cmps
push
pop
out
cdq
in
jno
rcr
xchg
sqrtps
leave
or
inc
sahf
pushf
repz
xchg
dec
and
add
daa
daa
rcr
cwde
pusha
xchg
xchg
xchg
xchg
test
leave
enter
scas
call
setp
push
jbe
xor
setnp
pop
imul
(bad)
into
punpckhdq
jmp
push
inc
mov
scas
leave
sub
jge
jno
push
aad
out
aaa
dec
or
in
or
clc
and
sbb
or
ss
push
sub
test
inc
test
mov
mov
scas
sub
inc
fst
or
and
jbe
dec
adc
nop
outs
fcom
or
or
adc
push
or
mov
mov
adc
(bad)
out
mov
repnz
jne
(bad)
inc
or
test
inc
mov
das
xor
or
hlt
fwait
pop
test
cwde
call
xor
and
aam
push
inc
lods
or
push
test
dec
add
push
or
xchg
pushf
mov
mov
add
aam
mov
jae
pusha
aad
push
ss
or
add
push
nop
or
nop
call
fnsave
jmp
inc
xchg
xchg
fstp
(bad)
dec
lock
xchg
mov
frstor
je
sbb
scas
and
dec
mov
fdiv
mov
cmp
xlat
aad
aaa
pop
stc
mov
and
dec
mov
inc
mov
mov
jmp
mov
add
(bad)
cmp
in
cdq
mov
or
enter
adc
dec
push
jge
inc
push
mov
add
out
test
mov
in
mov
mov
xchg
push
mov
adc
push
dec
mov
lds
pusha
xchg
adc
(bad)
xor
clc
and
retf
sbb
mov
sub
fnstsw
add
fdivr
in
mov
add
scas
xchg
xchg
mov
lods
add
fwait
imul
inc
mov
pop
dec
ror
out
int3
fidiv
fadd
or
mov
popf
inc
pusha
sbb
inc
test
push
outs
jl
or
mov
pop
pmaxub
adc
ins
das
add
jb
outs
arpl
ret
leave
lahf
cwde
push
ja
loopne
xor
cmp
dec
sar
packsswb
data16
inc
(bad)
dec
shr
push
add
and
mov
pop
cld
ficom
mov
pop
dec
bound
adc
movs
push
and
not
test
cld
fadd
push
cmps
mov
adc
sbb
and
ror
in
fdivp
push
dec
push
scas
sbb
push
loopne
into
push
loopne
pop
add
mov
out
stos
add
mov
pop
lds
pop
icebp
pcmpgtb
add
jp
cmp
shr
adc
mov
(bad)
adc
adc
int3
int
int
adc
add
add
push
add
add
adc
cmp
sub
(bad)
mov
stos
add
xor
push
and
mov
push
push
mov
push
or
lods
mov
in
cmp
push
push
scas
adc
jp
dec
ss
pop
add
ins
sub
outs
cmp
add
xor
mov
push
push
or
test
xor
inc
mov
sub
es
sbb
pop
mov
dec
adc
adc
pop
lahf
inc
(bad)
fsub
mov
xor
dec
mov
adc
push
fidiv
cmps
addr16
push
xor
data16
add
das
sub
fisttp
les
callw
add
lock
idiv
push
outs
sub
sub
adc
push
outs
adc
outs
sbb
xor
add
rol
test
xchg
pop
mov
and
out
add
outs
mov
pop
mov
push
cmp
leave
leave
leave
enter
lods
icebp
in
fs
stos
mov
sti
jb
xor
xor
sbb
lods
jb
adc
pop
mov
sahf
add
cmp
daa
and
clc
pop
mov
jp
xchg
daa
daa
ret
pop
mov
add
jbe
outs
jnp
test
mov
punpckhdq
stos
add
cs
inc
sbb
push
jg
cmp
push
dec
or
lea
rol
jmp
sub
fcmovnb
xchg
push
or
adc
add
add
or
scas
test
(bad)
cs
adc
sub
or
mov
test
fsubr
ins
push
and
sub
cmps
or
js
(bad)
sub
mov
shl
add
mov
out
push
adc
(bad)
sbb
pop
adc
or
xchg
mov
add
add
lock
or
add
sub
adc
nop
add
add
pop
or
mov
or
add
(bad)
xor
cmp
add
add
daa
dec
add
mov
push
add
(bad)
ja
add
inc
(bad)
js
add
push
add
jae
cmps
sub
or
add
xchg
xchg
push
ja
adc
std
or
fnstsw
pop
les
xchg
jp
scas
ror
lds
xor
dec
adc
add
or
inc
sub
inc
xchg
test
test
xor
or
push
dec
out
fwait
jne
jg
das
add
pusha
stos
in
or
push
loop
pushf
fdivr
dec
pop
es
pop
loopne
xor
add
dec
adc
push
pop
stos
lea
loopne
inc
ins
pop
jmp
dec
add
iret
imul
mov
mov
add
daa
add
jb
ret
call
add
mov
mov
cmp
ins
adc
sbb
jecxz
add
pop
and
add
or
xchg
je
pop
sub
or
ja
mov
add
jecxz
or
adc
pop
les
mov
pop
add
mov
pop
or
in
movs
cld
pop
in
scas
inc
add
in
push
rcr
inc
fadd
test
pop
add
adc
adc
pop
xor
mov
xchg
xchg
out
rcr
btr
add
xchg
(bad)
or
je
test
adc
push
mov
mov
add
add
xor
add
and
xchg
cmp
shl
test
loop
(bad)
mov
pop
aas
idiv
mov
mov
add
les
loop
fsubp
push
add
shrd
popf
(bad)
into
jg
mov
jmp
es
nop
sub
or
xchg
add
mov
pusha
int
add
adc
sub
push
add
and
and
push
add
sub
daa
inc
and
mov
ja
fimul
cmp
fcomi
stos
pop
or
mov
jmp
xlat
dec
dec
xchg
mov
and
push
pop
jne
dec
das
popa
push
outs
loopne
ret
in
xor
(bad)
push
add
mov
pop
jmp
fmul
xlat
push
or
inc
js
in
push
push
movs
pop
leave
fisubr
pop
sbb
shl
retf
cmp
push
sbb
ins
sub
je
pop
inc
or
popa
jo
sbb
ret
movs
hlt
push
lds
fiadd
pop
mov
or
push
xchg
push
add
mov
dec
inc
mov
lods
adc
adc
cwde
clc
fmul
in
pop
cmp
ja
dec
shr
sub
jmp
ja
aam
pop
push
ja
ja
jb
push
inc
cmp
sbb
ins
mov
retf
imul
jbe
push
jbe
mov
pop
push
fisttp
sahf
pushf
pushf
mov
or
mov
push
daa
and
shl
xchg
xchg
xchg
daa
inc
ror
cli
push
ret
fs
leave
mov
mul
in
test
mov
popf
fisttp
scas
jbe
pop
or
sbb
punpckhdq
aad
cmp
es
cmp
cmc
imul
test
add
in
mov
aas
dec
or
mov
cmp
gs
(bad)
mov
test
xor
mov
and
mov
jle
(bad)
adc
rol
int
stos
and
bound
ins
stos
xchg
or
push
sbb
pop
cmps
push
in
clc
outs
or
out
lods
fisubr
adc
push
adc
dec
fcomp
sub
cmps
(bad)
sbb
in
jno
or
mov
adc
test
xor
fwait
gs
lods
or
sbb
and
ins
inc
push
retf
test
adc
iret
dec
or
inc
ins
push
lods
inc
and
mov
add
pop
mov
jo
and
and
lods
pop
ins
ss
sbb
lods
jae
xor
stos
sbb
nop
call
xor
pusha
inc
xchg
xchg
cmc
pop
(bad)
(bad)
dec
pop
mov
xchg
mov
cmc
and
je
sbb
scas
and
dec
fild
bound
dec
pop
cwde
jne
add
aam
repz
aaa
add
dec
mov
xor
mov
mov
cmp
push
cdq
leave
or
daa
add
adc
inc
push
inc
loop
(bad)
push
leave
adc
adc
push
enter
and
leave
dec
xchg
dec
ror
enter
int
dec
leave
mov
leave
or
or
addr16
mov
adc
leave
in
mov
jne
leave
or
mov
pusha
adc
xchg
xchg
inc
mov
loopne
or
mov
sbb
shr
push
add
jno
scas
pop
dec
mov
in
cmc
(bad)
sub
(bad)
idiv
pop
jnp
scas
add
loopne
lods
rol
cld
int3
retf
pop
popa
pop
xor
aaa
push
sub
sbb
cmp
sbb
loopne
pop
and
ins
dec
push
push
mov
push
sub
adc
sub
call
outs
ds
loopne
(bad)
loope
pop
push
pusha
jo
push
ja
(bad)
aas
mov
aam
loop
(bad)
cs
adc
loopne
add
mov
push
movs
mov
hlt
adc
add
jmp
bound
adc
add
std
mov
test
addr16
sub
adc
leave
xchg
add
pushf
and
popa
in
xor
inc
sbb
fwait
sbb
push
aam
pop
loopne
push
xor
aaa
add
bswap
(bad)
into
adc
adc
push
(bad)
retf
sar
rcl
add
add
add
ror
add
jbe
int
push
xor
enter
jo
ror
lds
movs
ror
pop
lods
add
dec
rol
int3
push
jg
adc
loopne
add
adc
loope
test
jno
mov
into
out
(bad)
fstp
jl
push
push
es
xchg
push
xlat
or
pop
les
out
sub
mov
xor
push
add
rcr
jmp
cmp
cld
mov
(bad)
push
jp
test
icebp
lods
cwde
int3
sbb
push
push
shl
lock
add
call
iret
mov
mov
sbb
xor
js
rcr
mov
mov
add
push
les
push
dec
sar
ds
das
mov
iret
xlat
ins
fld
sub
push
and
aam
pop
push
daa
mov
mov
pop
adc
psraw
and
ret
ja
adc
mov
ja
or
adc
ja
and
push
jb
sbb
adc
jns
fcom
jbe
push
jbe
aam
mov
ja
push
jmp
(bad)
add
aas
or
leave
leave
enter
(bad)
ret
in
test
xor
add
pop
movs
in
cmp
sbb
(bad)
xchg
pushf
mov
int
ficom
inc
sahf
pushf
pushf
mov
or
push
adc
dec
mov
jbe
sahf
mov
cmp
out
push
dec
push
add
add
xchg
push
out
cmp
call
push
dec
dec
or
add
adc
add
lfs
inc
adc
xor
cmp
in
pushf
jg
add
pop
enter
inc
jge
jb
cmp
add
inc
shl
push
pop
adc
add
lock
outs
or
aam
xchg
ja
add
xor
push
sbb
add
or
dec
out
and
push
enter
add
es
add
gs
das
mov
inc
sub
gs
clc
call
xor
sub
or
adc
xor
add
sub
dec
add
push
and
fadd
shl
or
push
add
shl
add
sub
pop
gs
push
add
addr16
inc
pop
add
xor
aas
mov
clc
push
outs
adc
xor
sub
sar
je
xchg
xor
mov
pop
mov
rcl
es
pop
ja
add
pop
inc
ror
pop
pop
and
and
jae
add
or
pop
cmp
add
pop
add
push
pop
imul
push
push
popa
adc
std
cmps
and
push
mov
add
push
les
sar
loop
dec
dec
pop
jge
pusha
mov
jo
pop
inc
mov
pop
inc
or
dec
ins
pop
jns
cwde
add
mov
sub
xchg
mov
pop
dec
pusha
add
push
jo
lds
or
dec
push
test
adc
loopne
inc
sub
push
pop
add
in
or
add
scas
xor
pop
mov
in
inc
fadd
outs
xor
cmps
pop
xor
mov
inc
les
mov
(bad)
fdiv
lods
xor
xchg
fnsave
or
enter
add
mov
cmps
inc
fwait
push
rol
jecxz
push
stc
and
add
and
not
adc
push
or
mov
lock
aas
call
push
lahf
add
test
imul
dec
add
loope
pushf
das
mov
jns
adc
js
div
inc
lods
or
pcmpeqd
test
bound
sbb
or
mov
and
dec
in
test
int
add
and
and
add
dec
adc
adc
sub
daa
mov
pop
pop
jae
hlt
push
or
ror
iret
adc
xor
loop
push
shl
pop
lahf
dec
push
cmps
push
pop
jecxz
fs
mov
(bad)
das
movs
push
stos
adc
cli
push
test
dec
xchg
add
ins
push
add
sbb
sti
aam
xor
xor
test
and
xor
js
(bad)
mov
or
pusha
neg
and
or
leave
mov
add
ins
sub
call
jg
stos
ret
xchg
pusha
add
inc
add
adc
mov
add
div
cmps
jecxz
in
adc
add
push
mov
das
pop
out
dec
popa
daa
imul
add
xor
adc
ja
mov
cmp
mov
ja
inc
add
or
daa
shl
add
ja
sbb
xor
call
shl
jbe
ja
fsubr
inc
xchg
xchg
xchg
fldenv
jmp
leave
leave
leave
enter
lods
cli
in
fs
jmp
mov
jb
xor
or
push
mov
cmp
sbb
in
mov
cmp
aad
xor
push
mov
push
out
cmp
dec
dec
dec
jno
push
lock
fsubr
add
jbe
pop
lahf
push
push
lds
data16
push
repz
dec
add
add
pop
xchg
push
sub
aas
in
cmp
shl
push
push
cmps
dec
or
and
adc
add
movs
bound
or
pusha
mov
dec
mov
out
lods
inc
in
mov
add
clc
jle
mov
and
jmp
dec
cmp
jb
pusha
add
pop
pop
mov
add
pusha
outs
or
fcom
sbb
ins
ja
add
add
and
add
js
and
dec
or
cmps
out
enter
dec
cmp
loopne
rcl
pop
daa
js
test
das
and
fwait
mov
add
and
and
or
add
ins
test
nop
cmp
mov
add
and
push
adc
and
add
inc
add
inc
and
push
add
mov
jle
and
add
and
into
clc
push
jae
not
add
push
push
add
cmc
xchg
xchg
outs
fld
cmc
ror
xchg
inc
and
and
(bad)
mov
mov
ins
rol
leave
pop
out
and
lods
pop
int
leave
cmp
add
inc
mov
mov
sub
leave
mov
push
pop
inc
mov
leave
and
add
(bad)
leave
adc
sbb
jge
pop
stos
or
mov
leave
and
or
rcr
mov
xchg
enter
cmp
leave
hlt
lds
loopne
mov
or
(bad)
xor
xor
inc
adc
mov
jne
leave
dec
(bad)
leave
lods
sbb
fmul
xor
or
(bad)
leave
xchg
xchg
test
pop
lock
or
adc
imul
adc
aaa
scas
sbb
jbe
fstp
(bad)
cld
adc
or
or
sub
out
loopne
popa
xor
dec
push
popa
push
xor
mov
sub
int
jo
lods
fcomp
jb
ss
push
xchg
mov
adc
push
push
jb
imul
pop
mov
jg
pop
add
add
push
mov
add
inc
and
hlt
loopne
mov
(bad)
adc
cmp
int3
leave
mov
cmp
rol
fnstsw
call
les
aaa
cmp
fidiv
clc
add
and
add
cmp
pop
call
mov
(bad)
(bad)
mov
jle
out
mul
mov
xor
mov
stos
ret
adc
adc
push
jne
sub
out
sub
dec
push
inc
and
push
sub
pop
jnp
xor
popa
dec
pop
jp
pop
pop
add
add
add
mov
fadd
dec
ds
(bad)
hlt
pop
inc
sbb
push
imul
stos
nop
push
mov
push
push
cmp
scas
icebp
add
ins
cmps
pop
dec
cmc
ja
in
push
cmps
add
neg
pop
das
jbe
and
jp
mov
ficom
scas
and
outs
push
push
jl
out
inc
neg
mov
sbb
pop
pop
add
push
mov
and
addr16
rol
adc
or
jb
aas
dec
adc
rcl
add
and
aas
sub
inc
aas
add
pop
rcl
iret
pop
cmc
outs
adc
push
add
imul
neg
inc
nop
jl
xor
rcl
outs
mov
xor
and
je
jmp
mov
sbb
xor
add
adc
adc
cmp
loopne
int3
in
out
push
stc
fucomp
add
aaa
add
pop
add
out
mov
adc
add
push
daa
add
dec
test
push
int3
loope
mov
aaa
add
or
xchg
sbb
inc
inc
and
sbb
cdq
inc
out
out
stos
cmp
pop
(bad)
loopne
gs
fist
lds
add
push
push
popa
add
push
and
cmp
jmp
lods
adc
ja
add
cli
iret
inc
fs
adc
inc
jb
mov
popf
out
ss
adc
cs
loopne
dec
pop
outs
jbe
mov
push
loopne
add
pusha
cs
push
test
add
iret
mov
ja
ret
jecxz
sub
iret
test
push
shl
or
sub
bound
sub
addr16
xor
push
adc
test
loopne
iret
jo
iret
push
cmp
loope
pop
mov
mov
inc
or
sbb
(bad)
adc
inc
add
std
fsubr
inc
fdivr
pop
inc
das
pop
push
int3
inc
enter
xchg
inc
sub
push
jl
cdq
mov
push
js
mov
bswap
test
into
loope
mov
sub
iret
pusha
sub
int
int
pop
test
iret
and
iret
hlt
iret
mov
iret
lods
mov
push
popa
(bad)
xor
outs
sub
iret
add
xchg
inc
dec
jmp
iret
xor
int
xlat
push
loope
ret
cmp
in
cs
std
scas
iret
inc
push
js
jbe
push
add
jne
fstp
push
daa
nop
push
add
stos
iret
and
stos
jo
xchg
popa
and
or
add
or
add
iret
add
iret
add
sub
lods
iret
mov
add
add
loopne
lods
cmps
je
arpl
or
ror
call
mov
adc
cs
push
test
dec
inc
add
enter
add
dec
mov
pop
ja
add
iret
mov
jle
int3
unpcklps
iret
xor
mov
or
rol
aaa
stos
pusha
adc
mov
loope
shl
or
pop
adc
push
jo
rcl
pop
div
popa
jb
pusha
pop
mov
mov
adc
pop
push
mov
push
std
pop
rcr
movs
loop
sbb
cmps
add
push
pop
in
out
sub
inc
push
into
xchg
stos
lds
and
jl
or
adc
jmp
pop
pop
loope
iret
cmp
jo
mov
sar
sar
xchg
rol
or
rol
push
loope
hlt
rcl
test
stos
retf
sar
push
iret
pop
cmc
jno
lods
push
sbb
or
xor
push
or
iret
aaa
test
push
shl
xchg
dec
iret
aaa
mov
mov
sahf
leave
lods
aaa
aam
mov
sub
pusha
or
in
add
or
push
add
push
jb
sub
pushf
mov
or
sbb
aad
fisttp
sub
add
or
mov
imul
ret
or
or
mov
mov
(bad)
or
mov
dec
das
push
push
xchg
das
xor
pop
fsubr
shr
mov
push
or
fidivr
mov
arpl
push
mov
call
fiadd
or
sub
ins
push
aas
push
xor
and
sbb
and
test
cmp
fmul
inc
ret
mov
push
or
and
mov
adc
inc
adc
jno
js
pop
adc
pop
sbb
sub
pop
add
adc
sub
in
mov
sub
push
inc
push
pop
das
adc
pop
fdiv
nop
ins
enter
nop
dec
mov
mov
push
dec
lods
adc
xchg
pop
jo
or
xchg
mov
xchg
xor
(bad)
int3
xchg
sbb
adc
adc
xchg
sbb
xchg
xchg
inc
mov
and
movs
stos
icebp
sbb
pop
sub
add
imul
loopne
sub
xor
sbb
stos
icebp
popa
jae
ds
sbb
addr16
push
xchg
push
push
popa
jecxz
and
fmulp
push
addr16
ds
jl
add
adc
cld
daa
sbb
outs
xlat
mov
scas
maskmovq
imul
bound
jle
inc
in
add
lds
aad
pop
loope
sub
mov
(bad)
(bad)
lea
mov
(bad)
lds
ret
aam
cmp
adc
push
rcl
and
pop
sbb
daa
pop
pop
pop
adc
add
and
mov
adc
cmp
pop
mov
cld
(bad)
push
es
pop
mov
test
mov
in
add
jecxz
lds
outs
mov
es
push
inc
xor
addr16
adc
push
sub
dec
mov
mov
add
or
or
movs
jmp
outs
test
adc
das
pop
push
lock
das
js
ja
rol
shl
adc
dec
or
inc
inc
inc
mov
or
scas
arpl
ins
(bad)
xor
mov
mov
mov
add
fisttp
push
add
push
daa
jo
add
mov
jno
and
inc
jo
pop
mov
and
xchg
push
sbb
(bad)
sti
inc
adc
push
ins
inc
sbb
hlt
repnz
mov
xor
btc
dec
pop
jge
ins
pop
mov
pop
sub
mov
ds
sbb
cmp
std
fstp
or
out
xor
mov
sbb
loop
mov
add
mov
cs
push
aaa
out
jle
and
dec
pushf
out
scas
punpckhbw
aaa
rcl
(bad)
lea
pop
and
mov
mov
loope
(bad)
lds
loope
pusha
(bad)
loope
lea
sbb
loope
jp
aaa
mov
mov
xor
cmps
sub
xor
iret
pop
add
and
mov
pop
sub
push
or
lock
xchg
mov
ss
xchg
fimul
xchg
ror
aas
add
or
xor
pop
adc
fisub
xor
lea
in
les
add
or
loop
push
xor
hlt
inc
stos
and
adc
xlat
into
adc
adc
loop
sbb
out
inc
xlat
and
test
cmp
sbb
adc
aad
pop
cmp
jg
jbe
loopne
mov
push
dec
push
add
push
mov
cdq
daa
fsub
push
jg
popa
dec
push
adc
inc
xchg
sbb
adc
adc
xchg
in
sub
add
test
mov
and
hlt
or
add
inc
movs
mov
sbb
adc
and
xor
cmp
pop
outs
dec
cs
popf
push
aam
frstor
fstp
add
pop
fsub
test
call
and
or
imul
paddq
push
xor
shl
(bad)
push
jecxz
or
xlat
sub
cs
(bad)
xlat
xlat
sub
outs
xlat
test
jno
push
xlat
sbb
xlat
and
cs
add
pop
daa
pop
pop
sbb
daa
and
ss
and
sbb
ss
fiadd
in
lahf
cli
rol
ja
jmp
jg
mov
or
test
imul
inc
mov
push
lods
ret
in
xchg
ret
and
adc
loope
and
push
jecxz
retf
pop
push
xchg
or
push
xor
mov
fild
nop
mov
fisttp
inc
lea
inc
lock
and
xor
push
scas
aas
push
dec
sub
mov
push
loopne
mov
out
push
fs
add
clc
dec
sbb
mov
and
jno
stc
mov
and
pop
in
sbb
xor
std
inc
adc
aas
gs
push
ret
out
seta
jmp
xchg
cmp
loope
xchg
pop
inc
inc
aas
aad
faddp
leave
rol
fnstsw
add
cs
in
mov
popa
ja
pop
je
(bad)
add
mov
push
aas
jmp
jle
add
mov
adc
or
xor
lods
jmp
xor
sub
repnz
fs
jmp
push
imul
sbb
nop
jl
xchg
push
jmp
test
fcomp
jmp
cmp
pop
or
jae
add
pusha
les
add
pop
push
fld
lahf
sub
mov
push
hlt
ffreep
icebp
cs
jno
sahf
cs
adc
xor
out
and
fld
sbb
pusha
(bad)
jge
pusha
mov
adc
mov
push
xor
int
inc
mov
pop
int
inc
lea
lods
sbb
sub
dec
push
mov
std
cmp
and
jo
icebp
js
cmovbe
add
and
pop
cdq
xchg
scas
loopne
xor
das
push
or
adc
stc
outs
outs
and
xchg
je
lods
push
xor
add
popf
int3
push
sbb
daa
(bad)
retf
and
lds
or
mov
mov
pop
pop
popf
out
lock
rol
push
add
stos
repz
cdq
movs
pop
pushf
add
ja
add
add
out
or
jge
jmp
mov
popa
scas
push
push
dec
dec
ja
jb
sub
ss
lea
jno
xor
or
cmp
jmp
test
fs
test
xor
in
add
sti
ret
xlat
cmp
cmovno
test
xlat
clc
and
pusha
push
pop
push
or
or
popa
and
addr16
push
and
pop
ins
fisub
loope
loope
popa
inc
(bad)
ja
loope
popa
dec
repz
pop
pop
and
xchg
push
sbb
rcl
bound
pop
pop
pop
xchg
add
cmp
test
int
test
push
xor
pop
or
mov
jl
jnp
ja
ss
push
cld
out
add
mov
addr16
invd
rol
and
les
and
movs
add
popa
sub
loope
and
jno
adc
test
push
add
add
adc
pop
test
mov
stc
xor
rcr
jbe
mov
inc
mov
dec
and
mov
loopne
lds
fmulp
push
fnstcw
pop
in
ret
scas
jge
xchg
ds
push
hlt
add
dec
pop
ja
cmp
mov
add
jb
rcr
add
mov
sub
or
pop
and
add
icebp
jle
push
xchg
push
adc
push
and
or
loope
xor
mov
adc
ss
xor
xchg
in
add
pop
shr
jbe
push
rol
push
popf
mov
adc
lods
fiadd
cmp
fsub
add
out
mov
jp
out
int
lahf
mov
cmova
mov
lds
lods
adc
xor
pusha
push
cdq
shl
dec
cdq
sub
and
jo
loope
cdq
adc
outs
push
cdq
mov
cdq
xchg
popf
mov
sti
sbb
nop
xchg
pop
pop
cmp
xlat
inc
in
ror
inc
pop
daa
jbe
fstp
push
mov
fistp
(bad)
div
test
aam
add
cld
(bad)
std
aas
cmc
mov
pop
inc
xlat
movups
ds
mov
adc
sbb
push
jmp
push
mov
xor
jmp
mov
and
stos
shr
adc
add
pop
xor
out
fs
and
les
xchg
inc
and
inc
xor
loopne
scas
loopne
inc
mov
jge
mov
mov
inc
shl
cmp
cwde
add
xlat
pop
sub
add
push
inc
(bad)
les
cmovbe
and
pop
adc
mov
inc
cmp
cdq
sub
xchg
fisttp
stos
fmul
pop
sbb
or
nop
inc
fstp
cmps
out
xchg
push
xchg
inc
push
cmps
push
ret
xor
mov
push
neg
aas
popf
pop
cmp
neg
dec
or
mov
sbb
and
int
adc
cmp
push
adc
jo
js
inc
mov
push
sub
push
cmp
gs
fs
fild
and
imul
push
cmove
or
inc
dec
pop
sub
cs
mov
nop
mov
xor
or
inc
cmovbe
or
or
mov
hlt
fmul
sbb
call
pop
jns
add
xor
sbb
leave
push
inc
xchg
pop
dec
mov
fld
push
xchg
pushf
push
xchg
cmp
daa
inc
mov
xor
pop
adc
or
xchg
inc
lds
or
inc
fs
jo
jb
je
push
test
mov
sbb
push
pushf
pop
jno
mov
sbb
pop
jns
js
jge
cmp
xchg
dec
sbb
and
loop
scas
push
cs
dec
das
pusha
push
xchg
add
test
xchg
pop
fsub
xchg
push
popf
fiadd
xor
push
cmp
(bad)
pop
iret
mov
push
inc
sbb
pop
adc
mov
or
xchg
jno
mov
add
loope
sbb
pusha
add
popw
outs
push
xchg
add
cmp
pop
sti
push
sbb
push
push
dec
das
sub
sbb
pop
push
test
xchg
cmps
mov
xchg
ror
xchg
imul
add
or
hlt
pushf
push
adc
sbb
pusha
test
jno
lods
or
adc
push
xor
jo
adc
inc
adc
jnp
fwait
mov
or
adc
push
push
push
cmp
inc
enter
push
inc
cmp
ins
and
in
pop
push
mov
inc
xchg
fiadd
dec
shl
push
inc
inc
ins
bound
pusha
sbb
cmp
adc
into
icebp
adc
icebp
test
pop
aad
dec
jno
xor
out
pop
mov
mov
mov
add
inc
add
push
adc
ins
jno
scas
push
repnz
push
dec
das
and
cmps
jl
jb
dec
test
sub
push
and
pop
cmps
push
cmps
ins
sbb
adc
stos
dec
adc
push
sbb
push
(bad)
jno
adc
icebp
sbb
inc
test
pop
pop
loope
mov
push
mov
push
jne
push
call
adc
dec
sbb
jno
cmp
push
push
out
sub
pop
in
and
dec
sub
push
xchg
fcmovb
xor
cmc
push
retf
inc
jne
mov
dec
and
call
add
add
adc
pop
add
lods
jno
rol
add
add
stos
mov
sub
fadd
loopne
sub
sub
push
push
push
dec
cmps
mov
mov
cmp
and
ret
push
pop
adc
and
scas
(bad)
jecxz
cmps
xchg
sbb
mov
mov
sub
push
xor
sbb
loope
mov
(bad)
push
or
mov
cmp
cmp
pop
push
call
dec
push
push
or
add
adc
(bad)
loopne
add
cmp
jno
inc
fsub
mov
fidiv
int3
xor
mov
or
sbb
pusha
cwde
mov
cmp
dec
popa
pop
clc
popa
adc
nop
push
popa
mov
popa
jno
je
push
cdq
iret
pop
mov
xchg
mov
or
add
add
xor
xor
xor
das
cld
mov
outs
outs
push
dec
push
jo
pop
push
dec
mov
push
push
push
idiv
ja
xor
push
dec
pop
jbe
inc
dec
ja
imul
add
(bad)
cwde
not
jo
sbb
sub
inc
mov
sub
jae
scas
sbb
in
imul
sub
dec
push
mov
mov
out
xlat
inc
loopne
div
xor
push
lods
fst
add
cmp
cmp
int3
cmp
xor
sbb
jg
pop
push
das
popa
jo
pop
jbe
das
push
ret
(bad)
das
push
je
and
imul
jne
add
cmp
push
jae
fs
gs
mov
sbb
jo
je
(bad)
int
pop
add
mov
in
sbb
shl
call
jns
pop
pop
push
mov
xor
push
(bad)
jg
push
push
mov
inc
jne
mov
fld
lods
mov
pop
pop
pop
call
mov
jo
pushf
sub
pop
ret
mov
xor
call
pop
add
add
push
movs
pop
das
fisttp
fist
test
rol
or
cmp
xor
push
(bad)
pmulhrsw
mov
nop
mov
inc
je
sub
push
ret
push
clc
aas
adc
inc
dec
fs
je
jo
(bad)
push
fneni(8087
jp
inc
push
outs
jb
gs
test
xor
pop
inc
repnz
add
outs
ins
adc
mov
push
dec
pop
adc
dec
pop
dec
popf
jecxz
mov
cmp
imul
cmp
cmp
jae
fdiv
ins
inc
jae
xchg
inc
mov
imul
inc
xlat
adc
arpl
pop
sbb
pop
aas
push
mov
inc
add
add
pop
inc
cmp
setno
js
mov
pop
mov
push
dec
push
jle
shr
outs
ins
outs
popa
mov
pop
pusha
dec
ror
pop
pop
loopne
jne
pusha
adc
or
add
inc
test
adc
popa
sbb
add
dec
je
mov
dec
data16
add
xlat
xchg
cmp
test
sub
or
rol
clc
aam
xor
clc
add
push
jne
retf
loopne
cdq
adc
cdq
test
and
mov
mov
sar
ja
shl
adc
mov
stos
add
outs
sbb
mov
inc
push
stos
or
daa
fstp
mov
push
ins
adc
pop
pop
adc
jmp
add
add
jb
mov
in
push
push
push
mov
in
ins
icebp
inc
pop
adc
jo
imul
cmp
inc
mov
pop
mov
nop
movs
stos
xchg
dec
cmp
scas
inc
pusha
out
retf
inc
pop
pop
ja
inc
push
adc
push
(bad)
inc
sbb
xor
add
fcom
inc
xchg
sbb
pop
rcr
cs
inc
pop
pop
(bad)
pop
pusha
out
retf
lods
pop
sbb
pop
pop
mov
cmp
mov
lds
cmp
test
(bad)
add
popa
add
mov
dec
popa
push
pop
pushf
bound
xchg
xor
jne
push
dec
add
iret
inc
xchg
sbb
mov
xor
dec
add
popa
adc
or
pop
arpl
sub
out
(bad)
mov
push
(bad)
sbb
mov
cmp
adc
mov
jo
call
outs
push
ins
out
xor
pop
lods
add
adc
(bad)
dec
xor
inc
mov
adc
xchg
sub
fcmovnb
outs
inc
or
test
add
add
cwde
ror
or
xchg
pop
lea
fsub
and
ss
and
ficom
imul
push
mov
loope
jge
popa
ja
xchg
inc
shl
sub
mov
(bad)
pop
xor
mov
fwait
dec
and
call
add
xchg
retf
(bad)
push
fs
or
mov
push
lods
mov
in
daa
outs
das
add
jns
test
or
mov
adc
lea
xchg
xor
mov
jne
push
xchg
hlt
loop
js
or
mov
or
add
xor
sbb
sbb
daa
bound
jl
pop
inc
enter
sbb
imul
pop
mov
cmp
cmp
or
sub
ror
dec
fs
add
lock
push
add
fimul
jle
ins
(bad)
call
ja
fimul
push
lea
push
xor
mov
mov
fstp
inc
and
lea
adc
fbstp
sbb
pop
clc
cmp
mul
or
sub
add
mov
adc
pop
mov
push
idiv
or
dec
jne
push
push
jmp
into
jmp
push
lock
adc
adc
and
clc
sbb
pusha
inc
add
mov
ja
cmp
inc
or
add
and
adc
call
dec
in
and
in
adc
not
inc
outs
dec
lock
mov
test
loopne
loopne
and
push
adc
push
jb
mov
nop
(bad)
dec
aam
push
aam
out
sbb
xor
lds
jo
clc
push
ret
leave
add
sub
fiadd
inc
push
add
add
cwde
popf
das
add
imul
dec
data16
ins
add
adc
mov
adc
inc
xor
jae
ds
pusha
nop
outs
add
bound
and
adc
mov
loope
push
push
test
je
add
je
sbb
push
idiv
lea
add
xchg
push
cmp
push
cmp
mov
mov
jg
mov
mov
and
out
icebp
xchg
js
push
fmul
ins
imul
in
test
jne
mov
lea
ror
and
adc
test
mov
cmp
push
cs
cwde
jae
pop
fcomi
push
push
cmps
pop
add
ins
fstp
jge
jl
pop
pop
cwde
mov
pop
mov
inc
jg
xchg
and
pop
jle
in
inc
nop
sbb
jo
jg
data16
cmp
fdivr
rcr
(bad)
jle
enter
mov
out
data16
jg
les
and
and
fidivr
xor
pop
jle
mov
xor
pop
mov
mov
inc
adc
fstp
jle
retf
sub
pop
fcom
mov
shr
out
scas
retf
push
test
je
and
shl
or
or
pop
pop
stc
inc
and
inc
add
cs
cs
xor
sar
jns
and
push
mov
ja
xchg
push
xchg
dec
in
jb
aaa
sahf
sub
test
jmp
lock
and
mov
sbb
mov
add
and
jle
xor
cmp
add
test
les
fcomip
stos
or
mov
shl
call
cmp
cld
cmp
jne
sub
sti
gs
push
xor
push
out
ss
mov
push
mov
test
cld
or
fld
cmp
fidiv
fcom
je
pop
pop
sub
outs
push
neg
cdq
inc
push
retf
jle
sub
shl
mov
mov
pop
imul
in
fdivr
in
ins
or
lods
in
push
or
or
sti
gs
ja
adc
or
adc
scas
rcr
or
pop
sbb
inc
inc
or
xchg
ins
in
pop
out
les
sub
jl
mov
push
mov
mov
add
push
add
push
arpl
bound
or
pushaw
lea
or
and
adc
xchg
sti
jmp
cmp
data16
icebp
and
mov
sbb
mov
sub
xor
add
inc
or
cmc
push
adc
into
fs
jbe
icebp
push
sbb
rcl
push
and
pop
call
push
sub
out
in
xor
inc
stos
mov
test
jmp
push
fdivr
cdq
mov
push
icebp
xchg
dec
push
or
jg
add
lea
push
in
jo
lods
and
je
aaa
xchg
sub
out
xor
test
dec
jmp
sbb
jb
adc
fcmovbe
mov
jl
jmp
jge
sub
xchg
fnsave
xchg
jle
cmp
in
cmps
cmps
adc
xlat
pop
push
sub
mov
mov
mov
pop
mov
aas
cmp
jg
dec
test
mov
push
add
cmp
cmp
mov
add
mov
fdivr
mov
adc
push
dec
rol
push
mov
hlt
adc
xchg
mov
dec
add
(bad)
mov
xchg
ss
mov
je
aaa
jecxz
loope
pusha
cmp
loopne
dec
or
sbb
movs
fnsave
sub
gs
fcom
cmp
xor
and
clc
push
mov
stos
xchg
out
neg
or
push
xchg
arpl
or
xor
loope
ficom
push
in
push
scas
(bad)
sbb
loopne
lock
test
loop
js
js
xor
xor
add
lock
aam
lea
arpl
test
into
fdiv
je
push
rcr
and
cmp
sub
inc
adc
js
sub
out
cs
add
adc
mov
dec
jo
fwait
bound
mov
push
and
xchg
arpl
ret
add
mov
fsub
ficomp
enter
shl
lock
xor
and
iret
mov
nop
sub
sti
push
jle
test
bound
outs
movs
mov
fild
sbb
mov
aas
int3
fsubr
sbb
sbb
or
sbb
fild
adc
retf
test
enter
imul
pop
inc
mov
add
not
cmp
jae
xor
cmp
or
mov
jno
sbb
mov
mov
mov
adc
je
mov
jp
mov
jae
ins
sub
mov
aad
leave
jmp
mov
xor
sahf
daa
xor
xlat
bound
fsub
xor
call
sub
jmp
stc
cdq
fwait
and
pop
xchg
loope
ret
jb
popa
push
jg
sub
and
mov
dec
or
fs
clc
push
loope
shr
mov
cs
imul
daa
mov
inc
daa
inc
imul
add
jne
add
pop
push
pop
je
adc
ja
add
push
icebp
xchg
mov
pop
or
mov
dec
push
inc
or
push
out
inc
pusha
jo
add
ret
push
aaa
out
xchg
inc
ror
scas
loope
mov
sbb
sbb
xor
inc
or
sub
mov
push
xchg
mov
mov
sub
aas
cmp
dec
clc
stc
or
add
or
movs
ins
nop
in
sbb
pop
test
pusha
and
mov
jne
lock
push
mov
cmps
mov
mov
adc
fidivr
and
les
cmp
adc
aas
xchg
xchg
and
and
test
add
and
loope
xlat
jecxz
ret
mov
add
inc
add
push
sbb
inc
fild
push
pushf
pusha
mov
add
sbb
ins
pusha
mov
out
pop
pop
xor
sbb
sbb
out
mov
jo
out
into
adc
fadd
push
imul
mov
xor
push
retf
jae
jg
mov
inc
arpl
push
or
jg
lods
rol
sbb
push
(bad)
lock
cmps
or
mov
xor
lds
and
ret
push
inc
xor
mov
and
xchg
jno
sbb
(bad)
sti
lds
inc
dec
add
in
inc
leave
repnz
mov
and
or
mov
push
mov
cmp
xchg
call
ds
mov
or
jbe
mov
push
jl
xchg
call
jno
sub
push
not
dec
mov
jg
je
or
jnp
call
push
xchg
cmp
cmp
es
xchg
adc
out
int3
mov
mov
dec
cwde
int3
sbb
inc
jg
fs
pop
loopne
rol
outs
lahf
push
mov
cwde
mov
je
push
hlt
push
jmp
pop
iret
mov
adc
adc
pop
and
dec
fsub
rcl
xchg
and
aad
inc
sbb
dec
pop
jmp
cmp
inc
ja
pop
mov
ins
outs
and
mov
dec
movs
js
test
fadd
call
pop
pop
inc
movs
xchg
cmp
add
cmps
or
add
aad
ret
dec
outs
(bad)
call
daa
pop
in
sbb
(bad)
test
push
ins
shr
jmp
fsincos
mov
aas
and
test
jo
mov
xchg
pop
push
push
mov
jp
add
push
add
into
cdq
call
adc
inc
mov
mov
inc
add
add
lahf
push
mov
xor
add
pop
retf
mov
test
xor
cmp
ds
add
push
xor
sbb
dec
jo
mov
es
bound
dec
jp
lahf
jbe
fldcw
aaa
addr16
stos
cs
mov
call
push
(bad)
or
inc
push
call
fwait
inc
inc
push
inc
sub
jae
sub
xor
xor
push
data16
push
push
push
push
pop
(bad)
adc
xchg
fcmovne
or
ret
pop
es
lock
adc
cmps
push
lods
les
mov
(bad)
push
add
pop
jmp
cmp
xor
jno
or
add
in
dec
fild
xor
push
pop
add
push
push
push
or
test
jo
jo
xchg
outs
fnstenv
jl
enter
mov
ret
pop
xor
ins
mov
cmps
adc
push
mov
imul
stc
add
and
mov
pop
sti
fiadd
push
pusha
ds
das
or
ss
call
and
add
cmp
and
and
jg
ror
cld
pop
and
popa
dec
outs
fs
dec
loopne
ins
cmps
push
add
stos
movsx
clc
test
sbb
push
sbb
ror
inc
mov
adc
ins
in
mov
push
and
push
push
imul
mov
mov
pusha
shl
jae
je
aam
adc
jp
aad
jb
arpl
and
hlt
jmp
mov
outs
jo
std
pop
push
movlps
sub
clc
mov
jge
popa
imul
xor
retf
jo
mul
loop
or
ror
mov
mov
test
adc
add
test
jge
cwde
push
loope
and
std
sub
dec
add
dec
sub
add
push
mov
cdq
or
and
cmp
imul
out
enter
mov
xor
test
sub
lock
clc
jo
fisttp
mov
push
hlt
cmp
cmp
add
(bad)
mov
loopne
in
and
mov
adc
or
add
push
movs
adc
test
imul
cli
fcomp
scas
adc
mov
or
mov
mov
sbb
lock
lds
test
popa
sub
lods
pop
xor
pop
add
dec
je
mov
cmp
sub
rcl
push
sub
dec
loopne
sub
in
push
mov
pop
les
inc
jecxz
pop
aad
loope
mov
add
je
pop
pop
inc
sahf
pusha
test
sbb
mov
mov
push
mov
mov
(bad)
jmp
adc
or
nop
cs
push
es
fs
add
outs
pushf
cmps
mov
mov
shl
xchg
dec
pop
test
push
add
pushf
xchg
rol
sub
or
shl
aas
ja
std
fnstsw
scas
js
xchg
dec
in
hlt
in
push
cdq
xchg
lock
add
dec
lods
and
(bad)
loopne
and
test
xchg
add
test
int
push
xor
mov
cmp
push
push
outs
xor
add
ja
(bad)
dec
or
jg
repnz
jmp
push
sbb
test
add
or
mov
pop
bound
jae
mov
js
fs
and
repnz
mov
leave
inc
mov
jge
push
sbb
popf
dec
add
(bad)
popa
jne
or
test
mov
push
push
xor
xchg
mov
xor
test
push
pop
call
dec
mov
sub
jne
pop
rcr
fcom
lock
fstp
mov
out
add
ss
lahf
into
sub
lea
pop
dec
cmp
add
dec
ss
jge
add
fsubr
add
and
fld
mov
pop
jmp
adc
add
sbb
sbb
add
push
or
fcmovnb
adc
xlat
or
or
adc
mov
and
sub
sbb
push
scas
addr16
and
int3
aaa
sahf
inc
mov
xor
cmp
das
out
add
sbb
dec
sar
xchg
shl
xchg
ja
xor
add
or
jo
mov
mov
shl
icebp
adc
imul
clc
(bad)
mov
push
shl
stos
inc
push
add
mov
rcl
ret
pop
mov
mov
scas
inc
and
pop
rol
or
pop
add
scas
mov
les
push
push
pop
lea
adc
dec
add
ja
adc
jo
in
and
mov
std
xchg
dec
mov
push
loopne
fmul
arpl
aas
hlt
xor
loope
pop
mov
lea
add
sbb
(bad)
and
adc
sub
push
rcl
dec
add
inc
call
xchg
shr
mov
and
sub
xor
retf
inc
cmp
jmp
mov
and
rol
cmps
rol
test
fistp
cmp
aam
sub
out
cmp
add
movzx
or
pop
(bad)
jno
pop
jl
add
jne
mov
ins
push
jp
mov
imul
push
adc
js
(bad)
push
mov
xchg
sbb
test
push
push
mov
jbe
test
mov
call
mov
and
mov
mov
push
sbb
nop
retf
sbb
push
sbb
push
shl
ins
inc
aam
shl
ffree
and
push
push
fmul
call
call
cmp
adc
loopne
jg
and
and
je
cmp
enter
mov
push
push
push
cdq
dec
jne
mov
fld
stos
push
outs
cs
into
add
fimul
xor
or
imul
cs
or
push
mov
push
jae
ret
scas
cmp
arpl
dec
jg
inc
push
fiadd
add
aas
dec
es
or
push
lock
or
push
push
mov
xor
cmp
stos
sbb
xlat
out
push
ins
push
es
aaa
fld
add
aas
jmp
or
and
push
cmp
pop
adc
inc
repz
pop
and
test
push
sub
inc
jae
jne
outs
aaa
bound
adc
sbb
pop
cmp
(bad)
jg
jp
test
je
push
push
call
pop
in
cmp
aas
or
inc
cmp
xor
add
ins
je
and
cs
inc
xchg
stos
inc
add
mov
push
xor
test
cmp
push
jp
xchg
fistp
push
jns
je
ins
inc
jb
outs
jb
add
pushf
xor
and
rep
sbb
xor
jecxz
dec
jae
cmps
pusha
add
aas
pop
lea
xchg
call
arpl
jae
imul
dec
cld
(bad)
pop
mov
xchg
push
es
add
push
xor
(bad)
cwde
push
(bad)
daa
mov
iret
jb
mov
or
movs
add
jbe
repz
clc
jbe
hlt
into
(bad)
popa
add
inc
pop
outs
add
xchg
movs
and
mov
and
lods
movs
push
inc
inc
outs
ins
rol
pusha
xchg
xor
mov
lock
push
adc
xchg
int
xor
outs
ret
or
int
or
or
or
inc
sub
sub
push
addr16
push
jne
fdiv
add
add
pop
scas
pop
out
sar
das
push
pusha
pop
outs
xchg
xchg
xchg
fld
xor
jo
add
or
sbb
add
mov
ins
and
jl
ins
and
call
inc
cmp
(bad)
ins
ins
outs
inc
push
or
cmp
fsub
mov
or
daa
xchg
adc
push
jmp
cmp
cmps
in
push
dec
stos
(bad)
ffree
ror
or
imul
mov
xchg
push
add
inc
push
sahf
pushf
fdivr
ins
setb
sbb
fwait
shl
mov
add
push
cmp
aad
jne
or
and
push
(bad)
xchg
dec
sub
in
fwait
and
push
xchg
fs
ror
mov
jl
fiadd
push
jb
aas
add
fdivr
inc
inc
adc
fwait
movs
fldenv
rcl
(bad)
(bad)
mov
cmps
js
add
ins
jle
jg
outs
ret
add
inc
sbb
cs
sub
add
call
mov
cli
lock
add
cmp
dec
test
dec
adc
mov
add
jbe
add
add
movs
add
gs
adc
out
xchg
push
inc
sub
inc
mov
and
dec
pop
outs
xchg
push
fucom
ins
cmp
push
add
call
xchg
lea
je
dec
mov
push
mov
lea
mov
fnstsw
fmul
je
inc
shl
mov
push
add
pop
or
fs
xchg
sahf
mov
xchg
cmp
xchg
ficom
clc
dec
mov
call
cld
mov
add
les
xor
mov
das
sbb
or
jno
xchg
lock
loop
aam
or
fstp
inc
mov
mov
jmp
cld
add
call
cmp
sbb
fild
push
cmp
test
jne
test
mov
popa
mov
or
add
and
arpl
sbb
jl
and
sub
pop
enter
lahf
in
adc
xor
pop
push
push
inc
add
cs
sub
sbb
sub
adc
dec
push
(bad)
and
test
dec
and
sahf
add
cmp
cdq
neg
mov
add
inc
(bad)
pop
js
or
cmp
dec
mov
call
test
aaa
adc
jg
inc
sbb
cmp
jp
jmp
mov
xor
push
mov
xchg
loope
ins
or
xchg
daa
sub
lds
or
sahf
push
clc
xchg
mov
mov
dec
mov
(bad)
sub
mov
sbb
push
dec
sahf
iret
dec
clc
mov
add
push
adc
dec
test
jl
inc
xor
and
test
mov
inc
dec
jne
dec
dec
jno
pop
dec
jbe
outs
fwait
(bad)
sub
in
ja
mov
push
cwde
or
fwait
(bad)
mov
stos
outs
inc
cs
adc
test
out
fbstp
adc
jl
pop
adc
push
shl
sub
mov
add
xchg
mov
pop
(bad)
xor
push
sub
jmp
push
or
xchg
mov
xchg
mov
cwde
inc
cmps
in
ror
imul
push
sbb
scas
xor
mov
mov
xor
push
and
add
and
mov
mov
xor
jb
rcl
jg
dec
test
jl
xor
and
fiadd
inc
add
add
mov
adc
push
jp
jmp
inc
dec
jne
ret
pop
pop
pop
out
sbb
sbb
dec
hlt
add
adc
shl
and
xor
jle
sbb
add
xor
lock
sub
add
add
sub
cdq
in
xor
mov
cmp
jo
fnsave
push
out
in
fs
loope
or
stos
call
pop
nop
out
test
stos
daa
jbe
jmp
push
into
ret
shl
push
xor
in
cmp
adc
imul
and
cmp
nop
clc
fstp
adc
jmp
add
loope
scas
xor
pop
imul
int3
loopne
add
dec
cmp
xchg
adc
jo
pusha
mov
push
aaa
mov
mov
xor
je
enter
pushf
mov
pop
fmul
lock
pop
lock
inc
mov
push
and
sti
cmp
fist
mov
outs
jmp
loopne
jl
mov
mov
sbb
in
mov
push
daa
sub
sub
jge
popf
fdiv
pushf
out
mov
add
out
fisub
push
xchg
sub
das
push
push
mov
stos
arpl
push
ja
arpl
push
bound
or
ja
dec
inc
adc
push
or
xchg
ds
and
and
(bad)
xchg
adc
mov
jb
sbb
cmp
xlat
push
cdq
add
mov
and
or
push
or
and
jl
adc
outs
call
clc
movzx
mov
add
add
cdq
arpl
rcr
lock
sub
jbe
daa
cld
mov
push
xchg
movs
in
imul
ss
pusha
into
es
adc
push
sbb
fiadd
lock
jo
jl
add
ficomp
fdivr
cmp
jne
cmp
push
(bad)
ins
push
ins
sub
rcl
call
repnz
out
and
add
xor
sahf
cmps
add
out
sbb
jns
loop
sbb
into
push
out
mov
inc
ror
(bad)
not
dec
add
loope
add
adc
adc
addr16
(bad)
cmp
dec
test
jb
inc
xor
mov
add
mov
dec
sub
dec
lods
xor
in
(bad)
jge
dec
jne
out
push
xchg
cli
outs
add
dec
scas
sbb
or
or
add
rol
js
and
xor
pop
or
jg
xchg
or
addr16
lock
cs
in
dec
mov
add
sbb
push
push
addr16
cli
mov
cmp
jne
aas
mov
mov
sbb
jnp
arpl
je
mov
sub
out
add
(bad)
adc
(bad)
les
and
add
lds
add
mov
in
sbb
xchg
xchg
push
push
not
(bad)
div
cmp
sub
adc
call
loope
inc
and
mov
outs
or
pushaw
fadd
cs
js
adc
and
push
sub
cmp
shl
mov
dec
pop
and
adc
cld
call
das
adc
inc
pop
inc
push
gs
imul
fdiv
pop
push
dec
fmulp
add
lods
sbb
pcmpgtw
lods
fcom
inc
(bad)
push
fmul
mov
cvttps2pi
leave
add
inc
outs
ins
jo
outs
jns
out
pop
jmp
imul
je
add
or
mov
mov
mov
je
outs
popa
ins
xchg
fidiv
sti
push
dec
add
dec
gs
jo
xchg
addr16
out
(bad)
xor
fs
or
ins
popa
jb
stos
xchg
add
dec
pop
cdq
inc
call
(bad)
xchg
test
fs
je
fcmovne
fsub
ins
sub
jo
add
les
pop
lods
lods
shl
pop
pop
imul
das
mov
aaa
xchg
cs
jo
arpl
das
ret
sub
out
shr
outs
dec
pop
dec
int3
push
cmp
aas
cs
jb
jae
in
dec
aas
push
jbe
pavgb
popf
test
mov
aas
push
dec
ds
pusha
jmp
repz
out
adc
push
adc
adc
adc
shr
rol
add
dec
push
xchg
mov
mov
adc
dec
(bad)
push
add
loopne
pop
dec
xchg
dec
jecxz
add
rol
out
mul
das
or
or
pop
inc
jbe
dec
psraw
sub
test
and
and
cwde
test
shl
xor
push
push
mov
dec
push
mul
ror
sbb
push
push
adc
rcr
push
mov
push
sbb
xchg
mov
or
jge
add
rol
(bad)
jmp
aaa
adc
mov
and
cmp
add
adc
xor
stc
jmp
inc
dec
inc
fist
fbld
cmps
movs
sbb
push
or
aas
outs
cmp
(bad)
pop
fisubr
cs
dec
jp
push
(bad)
test
xor
adc
or
setne
mov
inc
adc
fsub
mov
push
pop
mov
add
xchg
dec
ja
out
or
or
inc
xor
rol
jl
iret
or
xchg
iret
sub
cli
xchg
adc
cmps
jns
add
cmps
xor
xor
stc
mov
sbb
cmp
out
add
mov
sub
push
mov
mov
jo
add
dec
add
dec
add
adc
push
ins
int3
sbb
scas
fisttp
inc
mov
add
inc
jne
pop
mov
fdiv
mov
rcl
aam
aam
stc
push
sub
ins
mov
dec
sub
add
xchg
add
adc
adc
fs
adc
add
(bad)
loope
outs
ja
mov
mov
pushf
pushf
loop
or
push
mov
lods
dec
jne
push
xchg
mov
call
jecxz
(bad)
sti
clc
and
lahf
mov
rcr
test
cld
cwde
mov
jge
push
push
lea
add
inc
aaa
fcom
call
xchg
pop
clc
hlt
inc
(bad)
xchg
add
loopne
pop
add
neg
push
push
loopne
out
dec
mov
test
jle
xor
mov
xchg
iret
xor
and
fsubr
dec
movs
nop
xchg
mov
in
mov
inc
add
adc
xchg
adc
(bad)
and
mov
ror
push
add
sbb
mov
sar
and
loop
dec
jne
jb
je
movs
jp
mov
mov
callw
pop
sbb
movs
sub
fimul
or
fmul
sub
pop
call
stc
(bad)
mov
and
push
add
or
or
mov
or
jle
pushf
cmp
xchg
ins
aas
hlt
push
xor
rcr
dec
inc
test
xchg
(bad)
mov
out
mov
pop
in
repz
xchg
sub
push
fst
int
inc
call
jmp
into
rcr
gs
add
inc
jp
jne
xchg
ins
lods
arpl
mov
fiadd
popa
xlat
pop
or
test
ins
cwde
popa
push
retf
aam
adc
cmp
push
xchg
fcom
mov
aas
xor
and
push
mov
adc
inc
repnz
aam
mov
(bad)
imul
mov
push
mov
fcom
cmp
add
push
inc
mul
mov
add
cld
mov
add
fld
xchg
lods
xor
and
pop
dec
sub
stc
jo
inc
jo
sub
add
pop
jo
push
jns
push
pminsw
xlat
mov
push
add
inc
adc
add
lods
inc
jp
cmp
add
fild
mov
xor
cmp
fwait
(bad)
in
adc
jg
lock
or
pop
add
mov
ficomp
jbe
xor
mov
or
dec
fmul
imul
xor
hlt
dec
jb
call
lock
jb
ins
push
add
shr
push
xor
push
imul
sbb
mov
sbb
push
push
add
add
add
inc
es
out
ds
sbb
pop
es
inc
sbb
aaa
xor
add
add
fldenv
push
test
jge
scas
ja
jb
imul
inc
mov
ret
les
das
inc
popf
shl
or
inc
dec
iret
sbb
ins
dec
push
jns
push
loope
push
mov
push
inc
cmp
mov
(bad)
xlat
addr16
ds
xor
cmp
in
in
add
inc
xor
inc
mov
mov
pop
fadd
inc
fadd
push
adc
and
xchg
mov
inc
inc
push
adc
and
and
ror
add
dec
adc
mov
jbe
adc
inc
in
ss
js
push
je
shl
cmp
mov
ret
(bad)
mov
cwde
cdq
out
pop
call
mov
in
add
(bad)
cwde
icebp
movsx
mov
aam
pop
(bad)
pop
pop
jo
adc
xor
adc
test
add
out
inc
push
outs
xchg
sbb
push
and
add
push
cmp
add
inc
jbe
sbb
push
sbb
out
push
fwait
es
dec
scas
scas
cdq
and
and
ins
add
push
addr16
push
push
lds
es
and
adc
sbb
test
and
adc
inc
cmps
push
je
pop
rcl
push
jnp
daa
mov
jo
(bad)
ffreep
(bad)
xchg
inc
push
xchg
out
or
mov
(bad)
out
cs
(bad)
push
sahf
mov
enter
push
mov
and
mov
mov
out
mov
xchg
clc
mov
and
in
lock
mov
adc
call
sbb
or
sub
(bad)
mov
add
mov
repz
or
int3
xor
pushaw
lea
and
push
add
cld
jp
bound
and
out
cld
and
out
mov
icebp
and
ds
(bad)
sbb
sbb
dec
dec
pusha
jo
sbb
sub
or
sbb
mov
movs
push
and
test
ss
jb
sub
mov
movs
and
sub
mov
add
dec
fwait
bound
add
mov
jl
push
rol
outs
lods
mov
retf
scas
imul
mov
pop
sub
in
dec
mov
rcr
clc
add
and
jo
jns
not
fs
jo
jmp
dec
retf
lock
rcl
adc
sbb
mov
jb
inc
test
scas
test
scas
dec
movs
jl
out
and
add
add
sub
sbb
lods
dec
ds
push
jg
hlt
movs
pusha
add
mov
add
xchg
les
add
(bad)
test
xchg
dec
adc
inc
xchg
dec
jmp
xchg
enter
(bad)
sar
(bad)
dec
mov
inc
idiv
outs
lahf
add
xor
mov
adc
pop
mov
not
in
xor
(bad)
sub
(bad)
push
test
daa
test
cmp
pop
pushf
rcr
xor
stos
pop
push
ret
push
sbb
xchg
mov
adc
adc
push
push
movs
cmp
popa
and
or
or
ins
xor
or
mov
loop
cmp
arpl
rcr
inc
or
sbb
inc
outs
mov
adc
je
arpl
aaa
scas
fisubr
adc
into
ja
mov
push
push
jp
mov
mov
mov
push
or
add
fmul
pcmpeqb
or
jl
cmp
xor
or
mov
jne
pop
sbb
rol
xchg
retf
push
hlt
or
push
jl
mov
cli
push
cmp
pushf
mov
aam
cmp
cwde
jmp
mov
imul
mov
cmp
fist
or
nop
add
or
cli
push
(bad)
cli
add
add
cwde
out
retf
mov
mov
add
push
push
ds
push
fld
and
cmpps
mov
jl
aas
inc
lock
mov
sub
push
adc
xchg
mov
ins
jmp
sub
or
call
xchg
adc
lock
in
ss
inc
xlat
das
pop
test
imul
cwde
mov
cmp
adc
fcomp
sub
sub
arpl
xchg
lock
test
mov
dec
iret
cld
je
jo
mov
jl
test
jb
xchg
jle
ds
cmp
push
ret
rcl
xor
pusha
or
test
rcr
outs
jnp
sbb
pop
sub
fs
ins
pop
inc
xchg
movzx
sbb
xchg
push
mov
in
dec
pushf
sbb
in
lods
xor
mov
ss
shl
in
mov
adc
outs
xchg
pop
push
arpl
aam
(bad)
sub
mov
cmp
pop
push
pop
mov
ret
and
xchg
add
mov
and
adc
mov
fcom
mov
push
enter
mov
adc
and
add
mov
xchg
cwde
mov
sub
mov
sbb
sar
lods
mov
test
jge
sbb
int3
jae
int3
xchg
add
imul
enter
cmp
mov
pop
inc
xor
ficomp
test
sbb
ror
les
dec
daa
mov
rol
mov
ror
mov
mov
in
scas
dec
mov
dec
jb
lods
dec
mov
mov
(bad)
jb
mov
mov
enter
mov
jmp
sub
fdiv
inc
mov
jno
pusha
dec
in
fs
outs
fadd
pop
or
mov
mov
mov
dec
daa
inc
out
lods
mov
pop
cwde
sbb
lods
adc
add
fsubr
xchg
ret
inc
jne
std
fmul
xchg
ret
jmp
shl
and
cmp
jne
sub
xor
jbe
sbb
and
and
movs
leave
add
pushf
xor
mov
stos
clc
sbb
mov
or
aaa
mov
fnsave
aam
aaa
in
and
push
aaa
add
cmp
mov
xchg
and
mov
inc
and
fs
nop
fstp
jno
pop
sbb
sub
sbb
and
or
das
inc
leave
das
sub
or
das
pop
lds
jbe
das
push
imul
mov
sbb
jge
sbb
jl
xor
add
mov
cmp
aaa
cmp
call
xor
in
nop
out
das
mov
in
test
sub
sbb
test
cmp
xchg
dec
sahf
lea
rol
pop
xor
enter
cwde
xor
sahf
mov
clc
push
pusha
scas
jmp
sub
jae
or
sar
rcr
pop
mov
dec
mov
adc
mov
push
dec
add
out
mov
and
xor
add
out
add
sbb
jmp
and
push
out
cmp
adc
lds
jge
mov
mov
sbb
cmp
mov
outs
adc
mov
bound
aaa
cs
es
or
arpl
scas
addr16
call
pop
cs
lahf
sub
arpl
mov
pop
sbb
shl
jecxz
mov
outs
aaa
je
test
lods
adc
fmul
mov
adc
mov
outs
or
add
or
inc
adc
outs
pop
in
adc
cmp
add
call
adc
and
and
mov
add
or
(bad)
sbb
shl
xchg
pop
lock
jecxz
pop
cmp
sbb
xor
(bad)
cld
psrld
mov
pmullw
clc
fstp
fwait
sub
psrlw
inc
cmp
loopne
loop
das
xor
dec
jmp
add
jne
push
mov
jmp
outs
(bad)
mov
or
loopne
dec
test
sbb
add
push
jno
mov
xchg
push
sbb
stos
inc
sbb
mov
mov
dec
sbb
xlat
sub
stos
and
xor
test
add
pop
sub
add
pop
cdq
cmp
push
dec
cwde
fmul
inc
stos
add
mov
sub
push
sub
(bad)
sub
sbb
mov
sub
sbb
push
arpl
add
outs
xlat
inc
push
sub
cld
push
arpl
cs
icebp
aam
fcomp
dec
jnp
push
cmp
jmp
(bad)
clc
push
sub
ins
xchg
pop
xchg
mov
movs
jl
jecxz
push
push
or
inc
add
push
push
xor
aaa
pop
pop
or
cmp
addr16
add
xchg
sbb
add
inc
push
and
sub
adc
mov
ins
sub
cmp
or
lock
dec
int3
mov
cwde
mov
scas
jb
pop
pushf
daa
fwait
sub
sub
sbb
sub
push
loopne
push
adc
mov
xchg
mov
mov
inc
test
adc
adc
or
lahf
pop
cdq
cmc
lods
aad
add
mov
jmp
xchg
add
jae
mov
popf
push
retf
(bad)
rdrand
xor
cmps
(bad)
cmp
mov
sub
and
add
dec
add
hlt
sahf
call
(bad)
mov
push
sub
dec
adc
add
pop
(bad)
adc
xchg
rcr
test
pop
sub
aaa
(bad)
push
pop
xor
arpl
in
lods
add
mov
sub
pop
ja
or
rcl
or
or
mov
push
push
pop
fisubr
nop
jo
les
es
jns
(bad)
outs
movs
std
mov
aaa
sbb
jbe
test
loop
inc
push
pushf
mov
outs
mov
inc
pushf
sub
lods
inc
xchg
add
outs
push
ror
and
pop
stos
cli
mov
push
dec
cmp
je
sbb
loopne
mov
push
push
cwde
push
fsubr
inc
dec
push
lods
pop
sbb
scas
jge
xor
arpl
dec
enter
xor
sub
test
mov
in
mov
shl
inc
mov
cmp
cmp
in
pop
mov
jne
push
push
movs
sbb
sub
movs
mov
mov
adc
or
sub
add
mov
cmp
je
popa
jb
push
xor
xchg
cmp
jge
jo
aam
mov
push
nop
pusha
xchg
push
sbb
mov
cmc
adc
mov
pushf
cmp
test
inc
add
pop
cdq
xchg
dec
addr16
fld
ret
sbb
push
in
cmp
ss
mov
mov
push
adc
xor
stos
sbb
cmp
pop
jb
fwait
or
add
test
add
inc
int3
sbb
or
loopne
add
or
(bad)
mov
inc
outs
outs
outs
arpl
jb
add
jbe
pop
add
add
daa
fst
inc
es
sbb
fdivr
cli
push
inc
adc
rol
repnz
push
ror
sbb
shr
fwait
mov
cwde
adc
pop
add
pop
shl
fidivr
pop
dec
gs
outs
jne
pop
ja
retf
add
or
movaps
ins
dec
cmp
outs
pushf
mov
inc
fsub
mov
and
popf
sbb
cmp
retf
mov
fs
movs
sub
jo
push
clc
xchg
(bad)
sbb
xchg
mov
dec
in
mov
dec
in
push
xchg
adc
xor
mov
push
(bad)
int
test
xchg
sub
add
pop
sub
(bad)
dec
pusha
push
and
push
ror
pop
jmp
fdiv
pop
nop
xor
inc
push
mov
ins
adc
adc
mov
fwait
pop
mov
mov
loopne
cmp
mov
push
add
add
nop
xchg
adc
enter
out
mov
sti
mov
or
lea
mov
lahf
cli
ss
mul
or
ss
aaa
sub
sub
push
cmp
and
push
dec
cmps
push
dec
push
pop
mov
in
shl
mov
add
sub
cmps
adc
cmps
or
cmps
jmp
push
cmp
mov
mov
jne
dec
sub
sbb
mov
pop
retf
aad
add
enter
mov
adc
inc
je
stos
sub
iret
fwait
mov
(bad)
sub
(bad)
fstp
ins
retf
xor
xor
inc
mov
fmul
mov
lds
xor
add
add
cmp
adc
add
out
daa
add
or
jge
add
push
push
mov
rol
das
mov
jo
pop
push
out
sar
xor
mov
mov
call
cmp
pop
jle
inc
ret
pushf
jno
sbb
dec
ds
daa
jo
sbb
add
xchg
loope
data16
xchg
lea
push
jg
pop
push
xchg
add
lock
jae
das
add
cmp
lods
pushf
test
mov
dec
sub
pop
hlt
jp
dec
sbb
fldcw
mov
xchg
movs
fidiv
lods
add
xor
cmp
mov
adc
mov
sbb
and
adc
jl
inc
xor
lea
aaa
rcr
push
mov
test
dec
jne
imul
test
sbb
sub
xor
fmul
das
shl
dec
mov
cmp
lods
(bad)
xchg
pusha
pop
push
jne
or
mov
inc
sbb
push
imul
sbb
adc
aas
enter
shl
add
cmp
jge
xchg
add
mov
add
jle
inc
sub
adc
out
push
add
or
fs
dec
xchg
pop
pop
push
ficom
or
sbb
push
xor
pusha
fld
fisubr
pop
cmp
mov
xor
fxch
or
dec
sbb
ror
(bad)
iret
inc
pop
mov
in
shl
mov
sar
sbb
cld
fmul
lea
push
pop
pop
in
ins
xchg
inc
fisttp
add
mov
push
in
jle
mov
sahf
dec
or
std
movs
dec
outs
pop
push
mov
neg
add
nop
pop
pusha
ins
mov
mov
push
les
pop
jmp
ss
adc
int3
dec
fs
mov
pop
adc
nop
lock
sub
push
add
xor
addr16
add
pop
ss
cmps
fdivr
fcom
push
dec
push
jno
and
add
leave
sbb
and
inc
retf
mov
(bad)
or
cld
cmp
and
mov
rcl
mov
mov
and
mov
daa
cmp
in
lock
and
and
popf
stc
imul
sbb
popa
add
add
loop
inc
xchg
sub
dec
mov
cs
sub
std
movzx
fwait
mov
ins
stos
neg
mov
js
xor
lods
repz
add
add
fcmovu
imul
jmp
mov
daa
push
rcl
jne
pop
lea
mov
pushf
leave
mov
sub
mov
mov
sub
mov
cmps
leave
aas
push
xchg
pop
hlt
shr
pop
xlat
mov
inc
in
cld
jnp
sahf
mov
sub
add
out
or
xchg
pop
sahf
cwde
pop
push
dec
mov
inc
ss
mov
scas
arpl
call
cmp
add
inc
hlt
fisttp
xchg
fdivr
dec
and
add
fwait
nop
or
adc
push
dec
sub
hlt
add
fidivr
pop
retf
test
push
mov
mov
pop
enter
xor
add
inc
cwde
dec
adc
clc
mov
sbb
cmp
xchg
cmps
push
jecxz
lods
cmp
mov
xrelease
or
jno
lock
dec
or
jne
test
pushf
pop
or
mov
pop
sti
scas
xor
mov
adc
cli
or
test
jl
inc
jb
xor
add
int3
mov
imul
adc
inc
test
addr16
call
push
cmps
dec
ins
sub
(bad)
nop
out
fisubr
and
arpl
adc
xchg
sbb
pop
push
je
sbb
cmp
cmp
fld
loope
or
or
jl
fild
dec
test
inc
adc
or
js
into
xchg
pop
clc
mov
adc
adc
or
xlat
or
mov
add
cmp
out
cmp
mov
int
push
xor
add
(bad)
aam
jge
dec
ret
sub
cmp
arpl
loopne
mov
sub
mov
adc
test
xchg
(bad)
lea
push
push
outs
adc
cwde
jmp
mov
mov
mov
and
add
(bad)
ret
ret
sub
jmp
mov
sub
push
or
bound
jne
test
sbb
cmp
jae
(bad)
test
push
mov
sbb
adc
sub
and
bound
dec
mov
imul
sahf
cs
sub
test
mov
test
fs
dec
sub
push
and
aad
jecxz
sub
xchg
call
cs
mov
and
or
jo
fld
sub
dec
add
je
jns
pop
fsub
mov
nop
fcomp
into
cmps
xlat
rol
stos
arpl
add
addr16
addr16
in
pop
fisubr
(bad)
or
ret
inc
or
bound
loopne
in
mov
pusha
or
sub
fsub
das
adc
adc
enter
push
add
mov
loop
push
or
inc
sub
push
jae
push
test
pop
dec
push
imul
adc
(bad)
aas
adc
rcl
xor
rcr
push
imul
inc
pusha
mov
add
jle
adc
xor
pop
scas
dec
sbb
and
add
repnz
mov
sub
shl
sub
les
xlat
xor
or
inc
nop
pop
iretw
(bad)
push
addr16
gs
retf
push
jg
mov
addr16
sbb
pop
cs
jle
xchg
out
mov
pop
push
cmp
jo
pop
(bad)
jae
adc
rcr
or
cmp
and
pop
sbb
inc
comiss
or
rcl
pop
das
mov
daa
repnz
xstore-rng
cmps
(bad)
dec
das
add
push
mov
rcl
sbb
mov
movs
and
inc
mov
and
xchg
mov
push
test
sbb
pop
in
aad
dec
ds
jmp
dec
lods
data16
and
jmp
gs
sub
mov
or
call
adc
and
clc
inc
mov
cmp
ror
test
adc
add
cmp
jo
push
push
adc
adc
or
inc
mov
sbb
jae
cwde
into
xor
adc
sub
pop
mov
and
outs
adc
or
or
and
test
pusha
addr16
push
outs
mov
cs
dec
push
pop
pop
inc
in
sbb
aad
pusha
out
push
ficom
jle
mov
jbe
sar
mov
mov
or
aam
mov
inc
dec
scas
xchg
fcmovb
inc
and
xchg
push
xchg
ficom
stos
mov
mov
xor
cmp
jne
pop
add
push
adc
scas
call
mov
dec
add
ficom
dec
jl
(bad)
push
sbb
das
(bad)
xor
out
ss
dec
ins
cmp
sbb
(bad)
int3
test
aas
pop
add
add
mov
mov
mov
add
adc
sbb
iret
jae
cmp
adc
inc
or
sbb
fnstcw
or
mov
or
repz
sahf
sub
xor
xchg
xlat
sbb
adc
sbb
jmp
ret
aas
dec
(bad)
push
add
jecxz
movs
jmp
and
xchg
dec
add
outs
pop
xor
test
add
les
xor
and
in
sub
adc
jmp
cs
mov
in
lock
(bad)
in
and
popa
aam
inc
mov
mov
call
sbb
clc
xchg
mov
push
push
icebp
adc
jo
jle
mov
or
loop
or
inc
jmp
mov
or
push
and
and
aas
addr16
sbb
cmc
loopne
dec
cmp
push
in
add
mov
leave
push
xchg
rol
add
js
inc
lock
xchg
pop
push
jmp
lea
sbb
and
mov
not
push
push
xchg
cmp
fsub
and
dec
adc
jae
xor
sbb
popa
xchg
adc
add
outs
sbb
add
add
out
adc
sahf
or
push
out
add
xor
adc
cmp
adc
mov
pop
jns
mov
push
rol
mov
push
les
push
mov
jle
adc
adc
xchg
pop
or
add
sbb
xor
mov
lock
clts
cmp
mov
lds
ja
(bad)
pop
add
mov
xor
jl
mov
xchg
out
scas
xchg
lock
ja
arpl
lds
sbb
jecxz
mov
leave
jecxz
mov
ret
cwde
lock
cmps
rcl
lock
mov
and
pop
stc
cmp
fdivr
addr16
inc
jno
scas
dec
daa
dec
loop
vpcmpgtd
or
outs
sub
push
scas
mov
shl
es
cmps
ret
jnp
push
inc
mov
test
mov
push
retf
aad
inc
mov
cmp
sbb
push
or
fisttp
jecxz
or
xchg
aaa
adc
adc
sbb
lods
jno
into
pop
test
lea
push
sbb
gs
cmp
sbb
neg
jne
popa
sub
push
imul
adc
int3
fadd
xor
hlt
xchg
jge
pop
js
vpmuludq
xor
cmps
lods
xchg
xchg
cmps
inc
sbb
shl
in
cmp
inc
cmp
(bad)
jae
loopne
idiv
jp
xchg
push
and
adc
dec
push
xor
mov
js
mov
inc
add
fmul
push
sar
add
fstp
fld
nop
cld
push
scas
and
pop
je
sbb
pop
sub
add
mov
enter
data16
mov
div
mov
and
and
mov
daa
add
add
js
push
inc
inc
shl
enter
rol
add
and
ja
enter
mov
sbb
xchg
xchg
add
and
mov
adc
sbb
mov
pop
int
jo
sbb
mov
mov
xchg
ficom
mov
add
test
push
jae
push
mov
push
sahf
or
and
movs
or
sub
inc
fnstsw
js
dec
enter
mov
out
xor
push
ss
xchg
sbb
push
and
xor
inc
adc
aad
xchg
sbb
pop
and
push
dec
dec
inc
xor
add
shr
mov
push
push
push
or
data16
inc
ss
inc
adc
pop
inc
xor
or
sbb
push
rcl
out
add
sub
or
add
cs
sub
lods
inc
sub
call
pop
pusha
mov
dec
popa
mov
add
(bad)
jbe
sbb
or
push
pop
sub
cmps
sbb
or
inc
pop
inc
add
fiadd
or
add
sahf
in
mov
aaa
aas
data16
mov
and
icebp
pop
call
sbb
(bad)
jnp
dec
dec
retf
push
mov
pop
mov
or
and
imul
mov
out
and
arpl
test
retf
addr16
stos
loopne
sub
add
jns
pop
out
rcl
sbb
or
dec
sub
lahf
pop
int
inc
out
push
dec
jbe
pop
add
push
inc
xchg
scas
arpl
test
xchg
add
fldcw
xor
mov
adc
lea
enter
adc
(bad)
add
jg
add
mov
mov
inc
(bad)
pop
cld
and
add
or
or
cdq
xor
fisttp
ins
cmc
mov
std
mov
jg
leave
dec
sbb
sbb
push
add
inc
clc
cmp
add
fild
add
or
arpl
imul
je
add
push
imul
ins
push
ins
popa
arpl
jnp
out
or
xor
or
and
retf
push
fmul
xchg
add
outs
jo
dec
ins
jo
imul
call
pushf
add
jb
or
dec
adc
mov
fs
add
scas
rcr
fbld
or
add
push
add
into
dec
(bad)
repnz
and
jle
cmp
jecxz
dec
add
cmp
int3
inc
adc
sbb
push
jne
shl
or
es
dec
jne
push
or
pop
mov
inc
imul
inc
dec
adc
popa
jb
dec
gs
jnp
inc
or
lds
xor
sbb
adc
inc
jno
xchg
ret
adc
mov
pop
push
ret
jo
jle
outs
gs
jl
inc
bound
sbb
(bad)
gs
push
mov
cmp
pop
das
test
mov
in
sbb
les
(bad)
addr16
sar
sbb
lock
jae
pop
fmul
fidivr
movs
mov
mov
jle
nop
stos
dec
or
push
sub
mov
xor
or
push
push
cwde
test
cmp
push
add
or
xor
sbb
jo
mov
and
int3
ret
or
jle
jge
cs
ins
je
jns
js
dec
push
out
fwait
mov
dec
or
nop
dec
adc
lock
data16
outs
ja
xlat
pop
xor
sub
sub
add
fcmove
cs
xor
loopne
adc
push
dec
sbb
lahf
clc
mov
adc
adc
push
pop
pop
paddsb
fadd
(bad)
(bad)
call
jmp
adc
push
add
xor
ret
inc
dec
jne
xor
test
je
clc
std
mov
push
rol
jmp
mov
daa
pop
movs
mul
push
clc
fdiv
cmp
push
mov
std
rep
pop
movs
push
or
and
or
mov
or
(bad)
(bad)
sbb
out
dec
test
jl
inc
lea
ins
jg
(bad)
cmp
jne
sub
jmp
not
adc
or
jae
xor
es
dec
jne
cmp
inc
cdq
jg
shr
mov
test
jne
sar
pusha
(bad)
sti
clc
jns
adc
inc
add
and
jmp
pop
je
add
xchg
into
dec
and
movs
(bad)
aas
outs
push
push
mov
mov
jbe
pop
lock
std
mov
lock
movs
mov
mov
outs
stos
and
(bad)
mov
repnz
daa
mov
shl
(bad)
cli
scas
rcl
out
add
test
enter
jne
inc
pop
imul
cmp
cmp
jl
or
dec
cmp
jge
mov
imul
sti
dec
inc
outs
ins
adc
add
clc
div
js
add
sub
sub
and
in
sub
add
pop
mov
add
mov
xor
inc
mov
dec
add
pop
mov
xchg
cld
jl
inc
repz
ins
add
lahf
or
push
mov
stos
cmc
or
icebp
(bad)
mov
(bad)
shl
push
mov
or
mov
sar
push
cmp
jne
or
inc
or
mov
data16
loopne
hlt
lea
sbb
mov
inc
lock
push
jmp
pusha
mov
or
out
push
hlt
cmp
xor
xor
mov
mov
mov
jle
mov
and
out
jg
call
cmp
jge
test
jmp
inc
mov
fadd
mov
push
out
xchg
rcr
fidivr
rcl
add
sbb
add
xor
mov
ret
not
and
jp
jmp
sub
aas
adc
jb
sbb
clc
adc
add
xor
mov
adc
cmp
sub
es
cld
adc
or
xchg
lds
hlt
inc
sar
aam
add
retf
dec
pushf
push
dec
inc
clc
cdq
shl
sbb
adc
jmp
cmp
inc
jl
imul
xor
adc
add
xlat
mov
imul
pop
ss
adc
fadd
loop
sbb
lea
les
adc
inc
lds
inc
sub
adc
mov
hlt
ret
add
mov
and
mov
mov
aas
push
sub
mov
xor
inc
ss
add
and
sub
adc
push
mov
inc
push
add
(bad)
out
mov
sbb
fld
js
ja
push
cmp
(bad)
jbe
jne
inc
call
inc
jne
div
aas
jbe
cmp
dec
fadd
sbb
sbb
sbb
push
fld
out
sahf
push
xchg
or
mov
inc
cmp
mov
lea
mov
enter
or
add
(bad)
bound
icebp
or
shl
xchg
stos
in
std
lods
add
cmp
jl
cli
hlt
dec
xchg
mov
mov
mov
dec
test
jl
inc
lea
jmp
xchg
loopne
cdq
sub
ret
mul
stos
pop
xlat
test
jmp
push
sar
lock
sub
mov
outs
into
mov
jmp
cli
repz
jbe
lock
jmp
(bad)
leave
mov
add
adc
push
pop
loopne
outs
push
call
cld
pop
mov
push
fldcw
adc
sub
mov
(bad)
inc
xchg
jmp
les
cmp
pusha
ja
ss
nop
mov
pop
xor
cdq
popf
fld
mov
adc
and
imul
add
fs
ja
mov
jecxz
ret
push
add
cmp
adc
add
xor
imul
inc
int
dec
int
mov
push
cmp
push
clc
ins
cwde
cli
mov
call
dec
sete
xor
mov
and
xchg
xor
pop
xchg
mov
lahf
pushf
xchg
or
add
or
mov
and
push
or
popf
xor
sti
jno
cmp
adc
and
add
adc
mov
cmp
jge
xor
cmp
and
jmp
push
jb
sbb
imul
mov
add
xchg
retf
xor
cwde
jmp
stos
and
adc
adc
(bad)
cld
push
je
add
lock
mov
repz
test
sbb
lods
mov
push
js
dec
pop
int
or
(bad)
sub
adc
pop
mov
mov
cmp
(bad)
push
or
adc
inc
jmp
or
cld
push
xchg
inc
adc
ret
icebp
test
jae
ins
mov
dec
inc
(bad)
mov
pop
jnp
add
mov
clc
(bad)
sub
push
mov
dec
clc
mov
inc
mov
das
push
lea
cmp
push
sbb
adc
xchg
cmp
div
ds
cmp
jl
sub
lods
push
push
add
mov
adc
adc
jne
cmp
pop
add
mul
(bad)
aam
mov
xchg
aad
adc
inc
mov
fimul
ja
cmp
push
pop
add
shr
cmp
jle
mov
sub
or
out
(bad)
adc
sub
es
test
fwait
add
add
add
rcr
mov
or
lods
or
mov
pop
sbb
cmp
adc
adc
xchg
sbb
ja
mov
cmp
mov
inc
jb
stc
inc
cmp
or
mov
clc
push
mov
out
aam
cld
pop
pop
(bad)
adc
repz
mov
sbb
das
dec
scas
sbb
retf
mov
loope
sbb
dec
mov
ret
lods
loope
push
add
push
pop
je
mov
lea
or
int3
add
mov
clc
out
xor
mov
stc
es
mov
xor
inc
aas
test
jle
test
(bad)
mov
call
add
push
push
add
nop
or
and
pop
and
inc
cmp
jle
(bad)
cli
nop
je
and
cmps
mov
sub
cmp
jae
and
and
or
loop
cmp
fs
xchg
sbb
js
lds
inc
jb
popf
cmp
push
inc
jns
mov
mov
in
xchg
std
shl
mov
jg
cmp
jle
mov
es
(bad)
mov
cmps
clc
aaa
xor
mov
adc
sbb
mov
pop
cld
dec
test
jl
inc
mov
and
shl
mov
cmp
adc
test
jmp
and
jmp
(bad)
dec
dec
jne
movs
mov
mov
adc
clc
push
pop
call
mov
out
or
add
test
jo
shr
and
lea
mov
je
adc
push
and
sar
call
xlat
jl
lods
dec
cmp
adc
mov
mov
enterw
dec
mov
and
loop
jl
mov
adc
mov
mov
int3
in
and
inc
xor
add
push
loop
repnz
sahf
mov
rol
out
cmp
jle
sbb
setp
lea
pop
mov
xchg
shl
or
cwde
nop
bnd
enter
popa
repnz
int
aas
sub
mov
push
adc
lea
xor
(bad)
in
hlt
mov
(bad)
mov
lods
rcr
or
add
mov
neg
pop
adc
int3
das
and
sbb
test
div
xor
adc
add
inc
add
mov
mov
add
aas
outs
add
mov
mov
mov
xor
sbb
aaa
xlat
movs
sub
inc
sub
push
fdivr
adc
fucomp
test
add
test
mov
push
clc
leave
push
out
aaa
pop
cld
cmp
ja
jo
add
xchg
shl
aaa
adc
retf
push
mov
sub
lea
mov
pop
test
retf
sub
clc
dec
test
mov
scas
or
test
cmp
ss
lahf
enter
mov
dec
sub
push
imul
adc
jnp
add
idiv
shl
nop
xor
jmp
pop
in
add
inc
dec
paddusb
sbb
jmp
pop
dec
inc
or
sub
mov
and
div
xor
(bad)
jns
mov
or
add
dec
int3
push
fwait
dec
lods
mov
cmp
sub
and
aad
js
jl
add
cmp
mov
test
test
cwde
sbb
fcmove
or
jno
lahf
push
fwait
add
add
sbb
mov
or
xor
sub
cs
(bad)
lock
mov
(bad)
mov
jo
js
popf
xchg
add
add
clc
and
push
fdivr
in
lock
or
je
or
add
mov
pop
call
mov
xchg
das
fadd
or
adc
mov
cdq
jge
dec
inc
aad
mov
adc
mov
sub
es
xor
rcr
push
ds
pusha
sub
sub
icebp
sub
push
pop
inc
(bad)
not
out
rol
add
dec
ret
mov
inc
mov
test
jo
aaa
add
sub
in
inc
fdivr
gs
test
push
xor
ror
call
jb
or
psadbw
cmp
cmp
jne
mov
push
int
sub
jns
outs
push
mov
sub
dec
xlat
int3
push
sub
cmp
add
dec
cli
jmp
xor
jl
and
mov
sub
mov
rcl
jmp
mov
inc
pop
test
add
pop
jo
inc
je
or
test
ror
jo
or
mov
add
pop
fst
cmp
cmp
sbb
jge
add
mov
adc
call
clc
push
inc
icebp
and
sub
jbe
and
dec
mov
test
or
inc
jle
jp
movs
fisubr
ins
sub
mov
enter
mov
lea
xlat
push
rcl
sub
add
xor
movs
mov
add
and
addr16
test
inc
iret
mov
add
mov
add
bound
jbe
push
mov
add
or
(bad)
shr
sar
add
popa
(bad)
sub
and
cmp
push
int3
fmulp
push
mov
add
call
jno
cmps
mov
pop
fcom
rol
jb
jg
push
push
(bad)
fbstp
add
pusha
aam
pop
xor
test
sub
in
adc
add
inc
pop
xchg
add
or
int
imul
push
stos
hlt
movs
jmp
xor
cmc
adc
pop
shr
(bad)
(bad)
bound
pusha
fstp
fwait
sar
fld
inc
sub
jnp
in
aam
xchg
ja
mov
popf
mov
int
movs
xor
xor
push
mov
aas
seta
jmp
cmp
dec
or
(bad)
clc
adc
lock
xor
imul
aam
fiadd
in
push
inc
mov
and
jmp
mov
shl
dec
xlat
push
daa
xor
(bad)
ror
retf
rcr
femms
call
xor
inc
and
push
sub
push
jge
pop
jg
jg
push
test
push
add
add
inc
fst
retf
fsubr
jo
jg
out
out
push
cmp
jle
fucompp
pop
mov
sub
jnp
clc
pop
lods
fistp
jbe
push
dec
mov
loope
test
cmp
add
pop
cwde
das
into
push
sbb
test
sub
dec
push
xchg
xchg
loop
add
in
inc
in
mov
out
jns
ins
push
cmp
fcomp
sahf
sub
mov
call
xor
mov
shl
push
mov
and
pop
push
inc
push
or
push
into
jmp
jbe
out
jl
xor
add
add
push
dec
add
add
sbb
scas
sub
gs
sysret
add
xor
fmul
out
push
push
add
popa
inc
dec
out
push
popa
jb
popa
outs
je
jns
gs
or
gs
lock
jg
add
mov
add
gs
data16
push
push
or
push
ss
dec
add
outs
cld
add
or
pop
add
gs
out
outs
dec
or
push
outs
jne
arpl
and
push
add
les
dec
outs
imul
cmps
popa
pusha
movlps
push
xchg
enter
push
adc
das
cmp
stos
push
sbb
ret
movs
dec
jo
dec
gs
cld
and
push
imul
outs
les
outs
icebp
pop
xor
ins
jo
gs
jnp
(bad)
fimul
and
or
and
push
int
push
sbb
add
mov
stos
jbe
jnp
inc
hlt
inc
sbb
hlt
sbb
das
or
sub
sub
jbe
sub
js
dec
out
push
jl
push
add
test
inc
xor
add
add
fstp
add
jmp
cvtpi2ps
punpcklbw
dec
push
pop
or
mov
xor
adc
and
pop
xchg
push
mov
mov
xlat
add
and
pusha
xchg
add
mov
ins
jne
add
fisttp
(bad)
ss
push
bound
loopne
fadd
push
arpl
outs
pop
int3
out
nop
or
add
scas
push
arpl
in
sbb
popf
mov
inc
push
gs
and
mov
sbb
or
shl
inc
push
sbb
sbb
out
pop
xchg
rol
or
call
inc
outs
add
push
or
add
(bad)
pushf
loop
call
mov
js
lock
mov
mov
enter
pop
pop
or
xor
iret
sbb
and
scas
add
je
dec
pop
xchg
call
cmps
xlat
sbb
pushf
jmp
movzx
mov
mov
mov
mov
add
jo
add
call
lock
xor
int3
xchg
hlt
mov
(bad)
lock
xor
call
(bad)
mov
mov
in
mov
std
pop
push
ss
retf
xor
add
xor
push
dec
loopne
in
mov
aaa
inc
mov
sub
in
rol
fild
push
lock
jae
jnp
xor
cwde
rcl
push
mov
daa
inc
pop
fdivr
into
mov
cmps
aam
rol
mov
test
int
or
test
in
test
xlat
cwde
adc
push
je
add
jp
push
aaa
and
add
mov
in
pop
pop
aas
and
pop
and
stc
pop
cmps
std
and
aas
les
mov
aam
xchg
cli
xor
jne
mov
and
cmp
jne
mov
(bad)
sub
je
or
test
pop
lds
add
adc
inc
popa
and
popf
int3
or
idiv
bound
aam
push
shl
popa
jmp
push
clc
aam
enter
sar
push
fmul
fdiv
sub
cmp
sar
xlat
mov
mov
inc
fsub
mov
xor
mov
adc
in
mov
ret
test
in
jp
loope
enter
add
mov
pop
loopne
ret
enter
push
lods
pop
sar
jmp
mov
mov
rcr
call
xor
(bad)
shl
daa
push
mov
jmp
jb
je
dec
daa
ds
lods
dec
jmp
adc
call
xchg
sub
pusha
jne
pop
pop
popf
lea
jge
dec
lock
loope
fcomp
rol
cmp
cmps
mov
cmps
loop
cmp
mov
inc
outs
push
jno
sahf
inc
add
loopne
inc
jnp
in
jmp
dec
fmul
xchg
add
jb
adc
jl
inc
push
cli
mov
push
addr16
mov
adc
hlt
adc
sbb
jp
push
rcr
daa
add
xor
nop
ds
add
add
fimul
loop
stos
adc
(bad)
push
mov
out
in
pop
dec
sub
fs
mov
lods
outs
or
(bad)
fcomp
cdq
xchg
lock
fidivr
mov
push
sbb
xchg
add
mov
data16
(bad)
int
sub
pop
mov
imul
scas
xor
inc
or
dec
or
mov
dec
add
xchg
in
mov
jbe
xor
and
jb
jb
ret
stos
jno
and
pop
jo
sbb
pop
lods
cld
and
test
mov
imul
push
sti
es
adc
adc
jmp
in
test
ja
in
fidiv
das
add
mov
fld
inc
mov
push
ds
test
(bad)
into
add
mov
add
pop
daa
add
adc
push
nop
stos
sbb
and
push
xor
int
mov
mov
cmp
sbb
into
movs
sub
push
movs
(bad)
lea
clc
inc
pop
fdivrp
push
and
lock
(bad)
(bad)
jnp
xlat
inc
adc
nop
fsubr
push
or
push
or
mov
push
je
ins
jo
mov
pop
push
inc
loopne
fstp
sub
jnp
call
outs
outs
je
and
add
cdq
sbb
in
inc
popa
jns
push
pop
dec
cwde
pop
int3
push
inc
add
dec
imul
push
ret
arpl
xor
aas
and
inc
jb
arpl
mov
js
adc
data16
je
add
add
push
dec
lods
ror
sub
add
movs
shl
das
adc
mov
xor
scas
movs
daa
(bad)
sbb
pop
clc
das
sub
push
inc
jle
and
pop
mov
push
hlt
call
nop
inc
push
xchg
push
mov
prefetch
je
mov
in
xor
retf
ucomiss
sti
mov
movsx
xchg
lds
imul
add
adc
nop
rol
pop
loop
pop
retf
loop
inc
and
retf
mov
push
popf
cmp
mov
retf
xchg
inc
push
mov
sub
xor
test
inc
push
sub
pusha
stos
retf
sbb
aad
jbe
(bad)
psrlq
dec
dec
popa
mov
call
lods
out
add
mov
sub
(bad)
das
inc
add
lods
cmp
cmp
push
mov
pop
psubsw
cwde
outs
fs
(bad)
cmps
xlat
imul
test
push
jmp
ucomiss
sub
jno
push
or
enter
jns
sbb
sbb
xor
leave
sbb
jb
les
sub
fsub
ss
add
sub
retf
sbb
inc
jg
in
shl
sub
sbb
faddp
pop
add
xor
shl
aas
cs
call
add
or
push
push
pop
push
imul
xchg
mov
sahf
sub
jne
jmp
cmp
push
mov
repz
ss
gs
fs
xor
xchg
dec
dec
and
adc
in
imul
and
imul
and
xor
xlat
inc
xor
imul
mov
ficom
inc
ins
push
and
outs
or
xchg
xor
pop
add
mov
out
add
or
add
sbb
js
test
cmp
scas
push
arpl
add
add
xlat
push
jmp
inc
xlat
ret
mov
(bad)
in
sub
outs
push
jne
je
jns
sbb
mov
dec
(bad)
jb
push
or
push
(bad)
fld
lds
jle
push
cmp
add
inc
jae
cmp
inc
pop
add
dec
push
ds
ret
cmp
inc
ror
lods
int
les
cs
cmp
lds
inc
sbb
loop
cmp
cmp
add
sahf
xchg
mov
fadd
ja
pop
es
push
in
sbb
pop
call
or
(bad)
in
inc
lods
idiv
add
xor
mov
inc
add
or
and
and
outs
(bad)
scas
shl
retf
sub
or
or
sbb
imul
xor
das
xor
add
jo
je
nop
push
jo
out
jo
pop
dec
dec
aam
jb
imul
xor
cmp
sbb
icebp
sub
or
pop
mov
lock
xor
push
xor
push
imul
push
xor
imul
or
imul
add
push
add
ins
and
fiadd
cdq
add
fs
rcr
adc
push
adc
in
add
sbb
pop
xor
test
(bad)
shr
pop
pop
add
sbb
cmp
and
loopne
fadd
inc
add
fnstenv
add
mov
mov
aam
test
aaa
xor
dec
jns
cwde
fs
outs
pop
in
or
inc
popf
rcr
add
loope
add
stos
xchg
loope
mov
xor
pop
aaa
xor
push
cmps
int
push
neg
xchg
test
dec
cmp
jne
or
in
mov
jo
and
jne
js
mov
ss
or
jne
or
push
out
test
enter
add
rol
add
xchg
aaa
xor
repnz
outs
adc
push
sbb
jne
lea
adc
sar
push
mov
rol
pop
jecxz
add
xor
pusha
inc
or
mov
inc
mov
enter
push
add
adc
popf
push
or
mov
inc
or
or
ja
aas
or
enter
inc
shl
fadd
or
aaa
push
daa
adc
ds
cmp
inc
pop
adc
clc
push
add
dec
cmp
data16
pusha
pop
shr
repz
add
or
aam
fsub
ror
fistp
das
in
sub
jbe
ret
pop
int3
jb
enter
shl
sbb
and
ret
add
dec
sbb
jmp
test
mov
cmp
cmps
jmp
pop
sar
fstp
or
mov
shl
jo
xchg
push
adc
adc
or
add
or
nop
out
pop
dec
inc
scas
dec
out
add
scas
aaa
sub
and
sub
push
add
fadd
inc
push
xor
ja
jmp
mov
and
nop
or
nop
xor
sbb
jl
add
push
mov
xor
inc
stc
add
or
rcr
inc
xor
push
cmp
sub
aad
test
jmp
movzx
push
fiadd
add
add
push
ja
fist
(bad)
cmp
or
shr
push
outs
or
lds
lock
pop
push
jl
push
(bad)
scas
pushf
es
and
add
sbb
into
mov
or
sub
jle
mov
pop
ja
adc
test
jl
fst
inc
lock
(bad)
out
cmp
cli
pop
cmp
mov
ret
(bad)
int3
or
mov
xor
adc
mov
pusha
add
stos
adc
popa
into
pop
ja
cmp
xchg
pop
pop
and
jle
push
ins
push
(bad)
cwde
adc
sub
push
dec
push
sub
push
xor
cmp
loope
dec
xchg
xor
push
pop
pusha
add
dec
xchg
test
adc
push
adc
mov
xchg
or
sbb
adc
fmul
push
lods
or
aas
pusha
inc
enter
popf
loop
mov
mov
push
mov
or
xchg
push
mov
push
mov
enter
push
mov
adc
adc
cmp
pop
out
enter
sub
test
sti
(bad)
ss
push
sbb
push
in
sbb
pop
or
retf
sbb
push
push
adc
dec
adc
xor
adc
add
push
jle
jmp
ins
cli
add
aaa
mov
cmp
data16
xchg
cs
adc
adc
movs
fucomp
(bad)
cmc
xchg
shl
shr
fild
idiv
mov
movs
add
adc
pop
dec
gs
in
dec
or
jne
push
int
sub
inc
fadd
add
ins
fsubr
int3
ror
mov
pusha
or
lahf
xchg
or
push
xor
dec
add
sti
cmps
lds
mov
int3
mov
ins
add
mov
lea
or
(bad)
mov
data16
pop
xchg
in
or
dec
push
inc
sub
adc
mov
ret
pusha
add
inc
int3
fcom
dec
add
mov
xor
cmc
nop
jmp
and
mov
jo
mov
mov
adc
push
or
cmp
ja
or
push
and
sub
add
ja
pusha
stos
les
push
bound
outs
cmp
adc
jmp
outs
push
retf
mov
dec
outs
popf
sbb
adc
inc
outs
adc
les
inc
pop
outs
pop
aas
add
test
outs
(bad)
sub
cmp
mov
outs
xor
pop
outs
mov
xchg
jo
outs
fs
cwde
test
cmps
nop
inc
cs
jo
jo
push
outs
out
outs
add
mov
(bad)
aaa
pusha
les
test
loop
pcmpeqb
stc
dec
movs
or
ins
cmp
jmp
pop
or
iret
mov
jo
popa
daa
dec
cld
mov
push
jmp
jb
je
jmp
jno
pusha
test
and
push
xor
sahf
call
xor
mov
add
popa
in
dec
mov
pop
ror
jmp
or
cs
loopne
or
int3
inc
adc
movs
fstp
fwait
push
pop
mov
add
dec
mov
cmp
jb
jo
scas
ror
pop
dec
and
and
aaa
loop
jb
sub
pop
ja
jnp
cmp
clc
or
jb
or
jbe
dec
jo
add
jne
mov
push
dec
jne
push
test
js
ror
adc
into
jp
or
jle
push
je
add
pop
jnp
in
sbb
push
call
ds
hlt
jp
es
fs
ret
fimul
jp
sub
push
ins
cmps
pop
call
jo
sbb
pop
mov
cwde
mov
rcr
pop
cdq
div
inc
pushf
xor
lea
test
jne
xchg
fimul
inc
or
pop
repnz
cmp
jg
xor
mov
or
cld
test
aas
outs
clc
xchg
dec
sti
inc
sti
adc
dec
mov
add
and
(bad)
fcomp
out
shl
inc
and
mov
clc
jl
push
jl
pushf
cmp
mov
mov
and
push
mov
mov
push
test
(bad)
call
jne
push
mov
push
mov
pop
fst
es
mov
push
inc
cdq
cmp
adc
push
pop
test
(bad)
out
ss
inc
ficom
add
pop
mov
fist
dec
mov
cmp
jle
and
xor
push
mov
jb
or
ja
bound
out
movs
lea
shl
pop
ja
push
cld
cmps
sub
xor
add
xor
mov
pusha
mov
sbb
pop
add
clc
out
xchg
pop
push
jp
mov
dec
jbe
xor
mov
call
xchg
xor
out
cmp
sub
sub
aas
sti
pop
sub
adc
loope
mov
inc
mov
or
pop
mov
aad
cmp
sbb
daa
xchg
jecxz
fstp
js
jns
push
fcom
jbe
pop
movs
pusha
add
test
(bad)
pop
test
lods
outs
and
cld
mov
retf
fmul
xor
push
int3
aad
sbb
xchg
sub
or
lock
int3
add
xlat
sbb
mov
dec
fstp
add
outs
and
aaa
cmp
popa
test
add
xor
xchg
pop
dec
push
arpl
jg
push
dec
or
jecxz
fwait
sub
inc
push
dec
or
mov
jp
nop
push
sbb
sbb
or
mov
jo
pop
push
sahf
lock
add
add
fldz
fmul
fistp
je
lock
ja
xchg
inc
sub
cmp
popf
mov
jp
jmp
cmp
sub
into
aas
pusha
rol
xchg
fucomp
(bad)
aas
loopne
loopne
mov
add
shr
adc
imul
inc
fdivr
mov
cmp
rcr
pop
fdivr
call
xchg
clc
adc
out
sbb
dec
mov
jo
add
mov
cmp
push
bound
ins
xor
or
fwait
push
shr
and
jge
enter
add
mov
jg
cld
add
adc
sar
inc
and
in
sar
call
inc
test
je
mov
jmp
in
adc
and
adc
ja
xor
adc
jmp
je
test
cmps
jge
jmp
sbb
mov
dec
cdq
dec
ret
xor
pusha
enter
test
int
mov
push
mov
ret
xor
in
out
call
in
rcr
mov
gs
in
jge
xchg
adc
ins
(bad)
push
sbb
sbb
add
aad
(bad)
mov
mov
out
add
dec
movs
popf
fwait
mov
cmp
outs
das
push
adc
shr
and
sub
cdq
nop
adc
outs
in
ja
or
push
jg
hlt
jl
push
cmp
pushf
adc
jg
mov
add
or
and
push
xchg
in
push
cld
repz
dec
out
les
dec
fucomi
adc
ds
movsx
fdiv
test
je
clc
test
not
fist
xor
add
sbb
add
adc
in
jle
and
adc
fwait
jecxz
loopne
leave
push
es
iret
or
lods
add
js
lea
adc
jle
adc
loop
add
sbb
loopne
loop
in
inc
test
cs
xchg
call
push
push
cmp
jne
inc
pop
cmps
fwait
ss
fadd
adc
xor
shl
in
sbb
data16
dec
add
mov
push
int
and
push
push
lods
xor
(bad)
repnz
add
loop
cmp
inc
jnp
push
aad
pop
cld
sbb
sbb
out
adc
add
ret
loope
jmp
xlat
test
push
push
ds
and
in
pop
or
nop
jbe
ret
stos
dec
inc
test
mov
loope
outs
mov
iret
pop
popf
cmovs
movs
into
add
sar
add
icebp
clc
out
or
or
ds
jne
pop
sub
and
data16
nop
jne
out
dec
je
or
sbb
cmp
ds
aas
jae
mov
or
inc
ss
sbb
ret
add
jne
hlt
call
cmps
sbb
clc
or
mov
popa
dec
jp
or
jmp
sbb
jo
not
and
lock
inc
adc
sbb
sub
retf
jae
rol
sub
jae
or
(bad)
bound
fdivr
movs
and
movs
bound
and
jle
shl
pop
adc
add
clc
adc
push
add
loope
jle
sub
and
scas
sahf
loopne
cmp
sbb
add
psubusb
mov
cmp
inc
push
push
mov
and
adc
test
pop
pop
sar
and
popf
div
sbb
sbb
in
in
dec
cmp
les
es
cli
push
(bad)
mov
movs
sub
ja
scas
paddusb
js
add
fist
xlat
movs
add
cmp
mov
outs
sub
mov
adc
jle
ja
push
aaa
cmp
lock
or
jecxz
in
adc
fld
pop
inc
lock
scas
into
push
sbb
lods
mov
adc
xadd
pusha
adc
test
(bad)
loopne
mov
jge
mov
adc
loopne
rcl
mov
loop
hlt
lods
les
push
inc
aaa
inc
inc
addr16
inc
jmp
std
inc
adc
inc
adc
or
lock
add
loopne
inc
js
mov
shr
xor
nop
cmps
inc
add
or
sbb
scas
gs
sbb
inc
push
push
das
test
lock
or
pop
inc
dec
add
and
into
mov
loope
ds
push
jle
mov
xchg
cmp
add
or
cmc
gs
enter
imul
sub
icebp
push
fcom
xchg
adc
jmp
pop
dec
test
jge
stos
ja
cwde
test
sub
call
push
sub
cld
test
pop
or
add
sbb
(bad)
sub
adc
cs
dec
dec
ins
adc
pop
and
inc
cwde
mov
lea
(bad)
in
jecxz
aam
mov
stc
cmc
cmp
xor
sbb
jg
(bad)
loopne
ret
dec
popa
(bad)
rol
iret
sbb
adc
pop
pop
jo
bound
sbb
aaa
stos
pop
xor
cmp
test
movs
adc
jle
push
or
lea
mul
dec
jo
enter
test
jo
retf
or
xchg
push
mov
or
je
ffreep
or
add
sbb
nop
pop
pusha
cmp
xor
int3
lea
or
int3
mov
ret
jo
adc
shl
ret
sub
inc
push
repnz
ins
movs
cmp
in
push
dec
rol
adc
sbb
add
sbb
test
push
adc
or
inc
or
adc
cli
inc
and
cwde
cmps
push
pop
add
icebp
xor
fdiv
js
and
and
push
ins
sbb
or
sbb
leave
leave
add
add
leave
leave
leave
leave
add
push
pop
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
pmulhuw
fs
cld
icebp
repnz
in
hlt
cmc
div
in
in
clc
stc
cli
sti
in
in
cld
std
(bad)
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
(bad)
xlat
in
in
fcomp
fcmovu
cmps
pop
out
(bad)
xor
daa
push
ret
cmp
je
aad
xchg
movs
mov
jl
mov
mov
dec
les
xchg
sbb
addr16
inc
mov
or
push
mov
jp
cli
add
cld
jge
cld
lds
add
sub
data16
test
xchg
aaa
outs
add
xor
cwde
xchg
sub
and
fcom
ss
sar
pop
inc
inc
push
push
jns
gs
dec
(bad)
out
call
add
jb
push
inc
inc
inc
inc
or
inc
dec
dec
push
dec
dec
push
inc
or
fcmovne
jle
inc
inc
dec
pop
sub
es
push
push
push
push
pop
inc
sti
fistp
dec
dec
adc
push
inc
inc
dec
inc
dec
inc
push
push
dec
push
push
pop
and
(bad)
out
ficom
push
jne
inc
push
push
pop
adc
popa
cs
inc
inc
outs
ins
ins
outs
outs
sbb
add
test
add
outs
mov
pop
mov
xchg
cmp
mov
clc
jge
add
or
xor
daa
jl
push
and
fbstp
dec
clc
mov
dec
adc
inc
ins
popa
jae
push
gs
imul
push
arpl
push
inc
jb
cmp
clc
out
push
inc
ds
add
aam
add
gs
data16
and
das
pop
test
cmp
pusha
adc
xor
adc
fsub
jnp
add
xlat
lahf
out
fwait
cwde
pop
js
jle
movs
mov
inc
xlat
nop
stos
inc
cwde
test
cmp
push
add
adc
add
std
inc
jb
outs
jb
pop
xor
ins
int3
ret
(bad)
pusha
fstp
rol
inc
jl
mov
cmp
add
push
jnp
mov
fstp
(bad)
in
and
push
popa
arpl
addr16
cmc
mov
shl
jo
cs
xchg
dec
popa
outs
fs
xor
inc
rol
sbb
sbb
dec
aam
mov
repz
inc
or
outs
sub
mov
xchg
nop
mov
add
stc
sub
rcr
cmp
je
push
daa
lds
adc
sbb
jbe
xchg
cdq
cmps
sar
inc
test
dec
push
add
out
jns
rol
cdq
jae
inc
and
push
jo
js
xchg
es
ins
sub
push
adc
mov
add
sub
dec
int
out
jne
outs
push
inc
push
lahf
push
fmul
sti
xchg
xchg
xchg
daa
push
arpl
sub
dec
add
leave
cmps
in
xchg
cwde
jo
stc
push
popa
mov
jge
je
dec
xor
or
je
cmp
(bad)
pop
dec
pop
outs
pop
and
lods
std
pop
add
sahf
xor
outs
and
ja
add
mov
inc
add
or
sub
fwait
jo
mov
cmp
test
mov
pop
add
or
sar
jge
inc
mov
outs
sbb
add
push
cmp
push
jae
je
pusha
(bad)
movs
jne
int3
sub
adc
cld
add
pop
add
hlt
and
cmp
xchg
pop
ret
mov
clc
or
push
and
jb
push
data16
cmp
cs
outs
addr16
lods
fmul
add
ret
jmp
dec
gs
add
cmp
mov
(bad)
stos
inc
add
add
fadd
inc
popa
inc
gs
mov
inc
jb
popa
jns
add
cmp
pop
add
lods
mov
loopne
outs
and
push
aas
adc
(bad)
add
inc
imul
es
jno
push
adc
lods
scas
push
xchg
fadd
inc
outs
jne
and
add
sahf
je
push
sbb
jge
sub
lock
sub
jbe
gs
lds
imul
fistp
xor
outs
test
arpl
inc
fild
jmp
pusha
fld
cld
jmp
add
or
add
pop
inc
jne
sub
push
test
push
pop
xchg
fild
int3
movs
imul
push
add
xchg
mov
cmp
dec
push
rcl
bound
daa
jecxz
cmps
cmp
sub
inc
or
pop
xor
push
outs
sti
push
out
push
dec
inc
cmp
sub
lds
sub
fistp
call
jl
inc
xor
mov
push
pusha
cli
lea
add
shl
xchg
fsubr
push
jmp
pop
push
mov
mov
or
pop
xor
pop
add
mov
ds
sub
out
fidiv
push
scas
popf
mov
imul
imul
loope
nop
mov
jae
scas
outs
mov
or
sbb
shl
inc
scas
ret
cmp
pop
sub
pop
push
inc
dec
outs
inc
sbb
add
mov
inc
repnz
shl
push
loope
sbb
das
cmp
fmul
sbb
mov
sbb
sti
or
inc
inc
xor
mov
push
add
sbb
rol
pusha
mov
popa
addr16
sbb
ins
cmp
inc
int3
mov
jecxz
or
mov
test
shr
ja
cmp
push
push
pop
in
lds
loopne
cs
imul
xor
add
fcomp
retf
test
or
and
cmp
scas
add
je
shr
test
pusha
cmp
rcr
rol
and
pop
cmp
add
pop
shr
mov
mov
js
jbe
pop
add
outs
mov
or
and
push
das
addr16
xchg
and
inc
sbb
test
jnp
iret
fadd
push
add
aad
mov
fmul
iret
push
dec
shl
imul
or
shr
or
stos
push
(bad)
loopne
into
and
mov
push
enter
add
pop
inc
add
push
mov
sbb
nop
mov
enter
loopne
div
dec
add
push
fsubr
pop
cld
es
xlat
ins
sbb
cmps
mov
pop
out
mov
add
jge
push
xlat
loop
cmps
mov
xlat
add
xchg
sub
add
sbb
mov
aad
test
mov
sub
mov
sbb
cwde
sub
fstp
or
sbb
in
inc
sub
xlat
and
jmp
daa
mov
push
or
daa
fild
mul
mov
hlt
push
or
cmp
push
jmp
pushf
dec
mov
add
mov
das
adc
push
pop
(bad)
push
xlat
cmp
sub
push
sbb
mov
or
jns
sub
xor
pop
inc
mov
mov
and
push
inc
aad
pop
add
in
dec
jnp
push
in
or
add
sub
js
pushw
and
mov
ins
(bad)
ins
scas
push
xor
push
push
push
jg
ins
(bad)
sub
test
push
mov
push
sub
fwait
shl
imul
push
dec
popa
pop
hlt
push
dec
inc
inc
jb
push
push
pop
cmps
scas
sub
cmp
or
dec
outs
mov
ret
sub
dec
mov
fcom
xor
or
adc
imul
sub
adc
lods
shl
push
test
pop
int
out
fs
jbe
mov
mov
aam
icebp
ja
aas
pmulhuw
leave
dec
ret
fiadd
loop
in
dec
xchg
int3
or
push
cmp
pop
addr16
and
sub
mov
pop
push
paddsw
inc
repz
(bad)
dec
jnp
loope
inc
popa
cld
arpl
or
mov
jne
jno
mov
outs
add
jno
add
lock
sbb
nop
lods
mov
push
or
test
test
or
or
sbb
ret
add
add
fs
loope
dec
loope
add
add
xor
dec
jno
inc
scas
fs
js
(bad)
and
add
dec
movs
adc
retf
mov
push
sbb
loope
pop
cmp
jecxz
add
push
add
xchg
(bad)
arpl
pop
mov
inc
add
mov
mov
add
xchg
mov
punpckldq
xchg
out
cmp
sbb
cld
pop
call
inc
jo
pop
mov
xor
outs
xchg
xor
mov
out
test
xor
imul
mov
inc
jmp
sti
aad
xor
pop
test
pop
cmps
or
inc
push
mov
addr16
addr16
adc
push
pop
pop
repz
or
add
or
stos
int3
repnz
add
add
or
add
mov
out
or
add
shr
mov
push
(bad)
fcomp
loope
retf
inc
inc
fwait
add
ror
out
pop
or
dec
or
dec
(bad)
jnp
inc
sbb
dec
adc
sbb
repz
sub
inc
add
xor
rcl
mov
aam
mov
js
adc
(bad)
cmp
sbb
jo
add
and
imul
add
jge
mov
mov
push
outs
jno
adc
je
aas
in
mov
icebp
mov
push
mov
shr
fistp
push
xor
sub
add
sub
loopne
adc
inc
push
add
lds
and
je
xchg
pop
jl
call
sub
neg
sub
add
push
rcr
je
lods
jns
xchg
push
jns
or
ret
push
loop
push
mov
sub
pushf
hlt
dec
fucomp
mov
mov
push
(bad)
fmul
sub
jo
add
push
add
mov
adc
sbb
sbb
add
push
xor
dec
add
mov
push
inc
adc
add
xor
and
aad
lock
pop
xor
inc
mov
adc
sbb
push
test
or
jl
mov
gs
pop
lds
not
std
mov
adc
sub
sbb
pop
or
fcmovnb
xlat
shr
fadd
scas
pop
xchg
outs
add
jnp
movs
sbb
es
jecxz
jmp
(bad)
sbb
test
mov
outs
push
add
cmp
adc
add
icebp
add
pop
sub
inc
lea
cmp
sbb
aad
hlt
retf
or
pop
test
jns
jl
push
ss
jmp
and
cmp
and
test
xchg
bound
mov
mov
add
test
mov
mov
das
dec
dec
shl
ja
out
in
sti
aaa
jecxz
add
ja
clc
pop
mov
push
daa
ror
add
adc
mov
(bad)
xor
hlt
cmp
jne
sub
or
loope
xor
adc
push
paddq
ins
dec
xchg
pusha
adc
push
pop
cmps
inc
or
repz
shl
xchg
mov
aaa
sbb
or
scas
inc
addr16
push
mov
and
push
xchg
mov
push
fcomp
fs
mov
mov
iret
push
jmp
cmp
mov
inc
nop
xchg
ins
and
and
rol
push
add
mov
xchg
aad
enter
dec
mov
adc
into
and
fdivr
mov
aam
loop
or
repnz
fild
adc
jmp
cmps
dec
jne
out
scas
push
push
out
or
inc
mov
arpl
leave
sub
ficom
daa
rcr
jmp
dec
aad
push
mov
xor
sub
or
pop
add
mov
add
mov
or
pop
loope
scas
push
mov
mov
add
test
mov
test
mov
pop
sbb
scas
pushw
adc
add
mov
adc
push
test
or
mov
ins
add
jns
call
pop
mov
pop
lods
push
or
mov
push
in
es
mov
scas
jo
xlat
push
test
shr
out
push
fidiv
jo
jmp
js
test
fistp
(bad)
fwait
dec
clc
das
xchg
das
mov
rcl
jo
adc
test
ret
jecxz
je
jmp
js
cmp
cmc
jmp
pop
sub
pop
pop
dec
pop
pop
pop
dec
shr
scas
sti
mov
arpl
jle
jmp
scas
mov
loop
jmp
push
add
fidivr
or
push
pop
xor
inc
push
or
mov
scas
retf
push
out
jo
test
add
jecxz
loop
mov
or
pop
out
pop
mov
or
or
in
je
sar
sbb
jns
mov
mov
dec
cmp
pusha
adc
inc
cmp
shl
or
fsubr
jnp
push
cmp
inc
push
add
jo
cmc
and
in
mov
mov
int3
mov
and
cwde
shl
or
push
mov
outs
enter
mov
push
xor
popa
xor
and
pop
mov
(bad)
in
outs
dec
xor
scas
call
int3
cmp
daa
xchg
punpcklbw
xor
outs
(bad)
neg
xor
daa
daa
daa
pop
movs
out
es
pushf
xchg
xchg
bound
xchg
pop
ror
cmc
cpuid
dec
inc
xor
cwde
pushf
inc
rcl
adc
mov
mov
or
inc
or
and
js
les
fdivr
add
xor
push
mov
and
adc
xor
jl
mov
pusha
mov
add
repz
loope
cwde
push
addr16
bound
out
fadd
pop
sub
test
mov
ret
push
inc
add
and
pop
xor
sbb
mov
test
pop
sbb
or
mov
add
add
outs
mov
push
and
out
ss
rol
sub
nop
or
lds
push
loope
xor
mov
push
mov
add
adc
pusha
into
pop
xor
add
push
fcom
repz
add
cwde
adc
sbb
or
add
or
inc
jge
cmp
sbb
pop
cmp
repz
xor
test
je
add
call
inc
jae
mov
mov
xor
mov
sbb
mov
mov
push
lds
lods
mov
mov
add
ins
mov
test
je
sub
inc
and
clc
inc
mov
dec
inc
or
push
movzx
mov
mov
inc
adc
mov
out
jmp
add
or
pop
pop
pop
sar
ret
repz
mov
and
cmp
leave
mov
(bad)
fistp
jl
je
aaa
rcl
mov
mov
cmp
stc
int3
mov
push
clc
mov
add
dec
pop
fcomp
pop
jg
clc
pop
add
jbe
inc
cld
mov
mov
mov
or
or
mov
pop
pop
stos
adc
ror
jmp
or
jle
sub
pop
fwait
inc
dec
pop
ret
aas
call
lock
dec
mov
mov
clc
inc
mov
call
inc
add
inc
push
loopne
pop
call
das
fdivr
ret
xor
ds
hlt
push
sahf
lock
mul
inc
lock
stos
mov
mov
xor
mov
pop
mov
test
rcr
gs
add
jbe
adc
cwde
pop
add
fdiv
or
pop
and
mov
clc
cmp
jecxz
ret
pop
mov
cld
nop
cmp
and
sbb
adc
mov
nop
mov
daa
or
mov
ret
(bad)
ror
dec
sbb
push
inc
into
inc
outs
enter
fwait
xor
mov
add
movs
or
sbb
fisttp
adc
pop
xor
pop
leave
xor
lds
mov
mov
push
bound
inc
mov
push
nop
inc
(bad)
mov
clc
and
mov
inc
xchg
sahf
retf
mov
mov
movs
imul
repz
mov
add
sbb
(bad)
push
pop
dec
(bad)
fild
or
sahf
ficomp
push
in
out
mov
(bad)
loope
ret
inc
ret
or
sbb
mov
retf
in
add
ret
add
hlt
in
shl
lahf
rol
jo
fisub
dec
xor
nop
xchg
call
loopne
loopne
lock
aaa
mov
mov
in
(bad)
dec
aaa
nop
and
mov
xor
bound
imul
clc
jge
sbb
ins
xor
or
and
fcom
adc
neg
cdq
inc
out
xchg
xor
push
xor
clc
adc
pop
pop
test
out
rcr
xchg
pop
xor
and
fadd
push
and
inc
and
fs
inc
loopne
mov
je
sub
(bad)
pop
inc
cld
xchg
daa
sub
movs
cmovl
adc
fwait
sub
mov
fild
movlps
and
(bad)
add
cld
and
jecxz
dec
jno
pusha
pop
ret
mov
jbe
sbb
xor
je
mov
mov
mov
sbb
add
sahf
push
outs
scas
push
enter
add
pop
inc
sub
mov
and
and
or
push
cmp
addr16
ja
mov
jo
sbb
aam
aas
mov
lock
push
push
dec
bound
add
jo
fwait
dec
add
or
sbb
fist
xor
and
mov
(bad)
and
mul
jbe
ss
jns
push
leave
cdq
adc
cdq
xor
and
lahf
add
icebp
or
mov
stos
jmp
mov
lds
mov
aad
pop
call
mov
adc
sahf
nop
sbb
nop
lods
push
mov
mov
inc
cmp
lods
xor
xor
sbb
add
aaa
xchg
in
mov
popa
jmp
mov
mov
call
push
add
mov
and
cmp
xchg
in
xchg
fldenv
hlt
cmp
or
jmp
arpl
pop
lahf
and
push
lock
adc
adc
jo
mov
shl
cmps
in
or
xchg
test
js
pushf
loope
cmp
and
in
das
xchg
retf
mov
adc
and
out
mov
scas
popf
or
movs
loopne
clc
in
gs
ret
pop
fbld
cmp
mov
(bad)
inc
cmp
cmp
loope
call
cmp
(bad)
push
add
sar
or
or
or
(bad)
(bad)
les
add
mul
test
jne
nop
in
xchg
xor
mov
mov
add
or
mov
sub
(bad)
push
(bad)
or
mov
es
push
add
pop
and
mov
or
cmps
test
jge
sbb
lock
xchg
and
iret
sub
ins
imul
xor
ds
cmc
dec
(bad)
loopne
std
mov
dec
test
jl
inc
sbb
std
dec
mov
add
mov
push
jnp
lock
add
repnz
out
or
out
add
(bad)
(bad)
mov
cld
xchg
inc
adc
cmp
je
mov
jnp
nop
dec
or
pop
push
(bad)
lock
cli
cdq
add
aad
pusha
fsub
push
call
lea
mov
jp
adc
xchg
mov
rcl
call
test
adc
adc
pop
xchg
push
inc
and
std
outs
and
jne
mov
mov
dec
nop
cmp
and
or
pusha
pop
and
inc
or
jl
push
not
jmp
push
or
inc
jne
jne
(bad)
ficom
or
inc
enter
or
sbb
dec
lods
adc
push
dec
lods
out
inc
aas
push
and
lock
jg
inc
jmp
out
sbb
xchg
shl
xchg
(bad)
mov
(bad)
out
ret
and
(bad)
jg
or
adc
mov
adc
inc
pop
idiv
fsub
outs
mov
inc
push
fiadd
xchg
cmp
mov
push
mov
cmp
outs
cmps
mov
je
or
push
or
fidiv
sbb
push
or
iret
mov
loop
jno
mov
out
sub
lea
xchg
and
jecxz
adc
adc
sub
cmp
or
sub
fsubp
add
adc
ins
movs
shr
sbb
xchg
mov
aam
and
call
push
cdq
or
outs
inc
xchg
ja
adc
movs
mov
in
jo
jne
cs
lods
sbb
xchg
jg
ror
cmps
fadd
cmps
sbb
lods
ins
push
aaa
fwait
sbb
test
xor
sti
add
add
sbb
in
btr
adc
and
pop
in
xchg
and
jne
jne
(bad)
or
cmp
lods
or
jae
enter
fdiv
add
jae
adc
pop
jp
int3
and
nop
or
xor
jle
sbb
and
cmps
or
mov
sub
test
jg
(bad)
or
adc
cld
call
jb
push
cmp
aas
stos
call
cwde
stos
dec
cwde
push
popa
adc
cwde
push
stos
hlt
or
push
cwde
cli
dec
or
mov
loopne
sbb
test
pop
cmp
xchg
cli
mov
test
je
adc
cmp
stos
sbb
or
inc
xor
push
sbb
sub
and
fild
loop
daa
pop
adc
jo
sbb
ins
(bad)
jno
ret
test
jnp
add
xor
lods
add
stos
and
cmp
imul
je
pop
lea
xor
jo
jg
add
xor
add
xor
mov
xchg
scas
jno
rol
mov
pop
(bad)
pop
mov
das
ins
mov
mov
adc
js
rcl
leave
xchg
dec
fadd
or
das
xor
aad
lock
das
mov
ret
xor
jae
inc
test
rol
rol
adc
cs
xlat
js
js
inc
scas
lods
or
sbb
fucomi
test
cs
dec
dec
test
add
fstp
add
lahf
js
sub
popa
sub
add
cwde
push
adc
sub
enter
sbb
jbe
adc
cmp
jl
or
adc
iret
cs
pushf
jo
idiv
mov
push
and
push
mov
not
mov
pop
loopne
pushf
icebp
cdq
push
pop
aaa
pop
push
jo
cmp
cdq
fadd
mov
cmp
out
imul
or
xchg
sar
push
cmp
or
add
adc
mov
mov
test
outs
out
jmp
daa
scas
push
sub
rol
add
inc
inc
cld
or
push
push
add
mov
push
rcr
and
clc
jne
int
jo
jmp
mov
test
jmp
out
scas
push
or
addr16
gs
clc
push
pop
loope
push
ror
or
pop
fcom
or
xor
push
jmpw
and
mov
jmp
mov
push
inc
xchg
push
movs
adc
or
cmp
xlat
dec
rcr
or
mov
sbb
push
sbb
mov
xor
jo
test
fistp
inc
lods
in
je
mov
jmp
repnz
jne
mov
div
or
xchg
add
in
mov
cmps
stos
outs
sub
repnz
add
dec
mov
inc
sub
aas
sub
call
sub
jmp
jno
mov
adc
adc
pop
pop
imul
aad
dec
add
pop
mov
aam
xchg
mov
das
xchg
push
test
mov
xchg
jle
push
push
imul
push
mov
pop
mov
lock
(bad)
call
mov
jge
sub
icebp
add
loopne
mov
jg
xor
outs
push
mov
pushf
pop
push
sbb
ins
aas
call
in
int3
dec
sbb
cmps
nop
cli
add
mov
cmovne
push
inc
add
xchg
in
mov
cmp
sub
xchg
cmp
jmp
sbb
jne
and
mov
dec
(bad)
mov
aam
push
sar
dec
add
mov
and
mov
or
mov
mov
push
cmp
adc
div
rcr
lods
stc
lea
cmp
std
stc
mov
fistp
pusha
mov
add
add
mov
xor
sub
mov
xchg
adc
daa
mov
xor
push
push
add
fsub
aad
or
sbb
pop
inc
test
lea
in
mov
inc
mov
sub
push
mov
push
or
gs
nop
jg
je
inc
repnz
mov
add
and
(bad)
mov
shr
test
adc
mov
or
mov
movs
jecxz
inc
out
mov
cwde
jo
fcom
jecxz
dec
in
stos
push
add
xlat
mov
or
jg
test
cs
xchg
push
add
out
test
cmps
stos
mov
cmp
repnz
sub
push
imul
mov
stos
cmp
mov
out
sbb
movs
xor
mov
sub
xchg
rol
and
cmp
mov
xor
jmp
push
and
mov
xor
sbb
or
push
fstp
dec
mov
or
mov
sar
movs
dec
mov
shr
aaa
mov
mov
dec
mov
mov
mov
mov
addr16
stos
dec
mov
push
aas
ret
sbb
je
btr
pop
mov
dec
sbb
dec
bnd
scas
pusha
pop
mov
xchg
xchg
or
mov
mov
dec
movs
xor
jno
xor
mov
push
es
js
sar
call
adc
inc
sbb
loop
add
cmp
add
add
out
add
hlt
ror
xor
inc
ins
cmp
jecxz
inc
and
or
(bad)
out
jno
adc
nop
loope
jno
xor
sub
in
pop
ds
shr
loope
ins
jb
repz
data16
or
(bad)
ja
add
ja
sub
add
lahf
aas
mov
mov
mov
mov
lods
(bad)
mov
cmps
push
ror
add
mov
cdq
pusha
test
cli
movs
(bad)
fldenv
push
jbe
lods
xchg
cmp
jne
test
je
mov
pusha
pop
cli
xor
lahf
pop
ror
cmp
(bad)
push
xlat
mov
aad
cmp
mov
fnstcw
dec
jmp
(bad)
fwait
xchg
jo
add
and
dec
and
add
cmp
je
pushf
xor
push
add
rcl
or
mov
mov
add
retf
adc
not
xchg
cmp
jge
mov
lock
dec
mov
or
mov
sbb
adc
fsub
xchg
cmp
or
jge
mov
sub
daa
lds
movs
adc
xchg
bsf
in
mov
or
scas
(bad)
outs
mov
push
or
je
cld
pop
pop
push
add
out
retf
mov
ret
ja
loop
mov
dec
imul
push
xor
aaa
or
sub
shl
pop
sbb
xchg
sub
jno
fidiv
xchg
dec
fisttp
fucomip
lsl
repnz
xchg
xchg
stos
mov
mov
adc
out
call
or
icebp
mov
mov
dec
mov
je
jnp
jge
loopne
adc
push
ja
push
add
mov
xchg
fmul
(bad)
xchg
dec
nop
inc
sbb
sbb
and
dec
push
xchg
ret
mov
(bad)
dec
xchg
in
mov
push
pop
inc
cdq
ja
cdq
ds
inc
and
test
loopne
ins
cmp
mov
mul
adc
adc
sbb
dec
dec
hlt
in
test
push
dec
fwait
lock
mov
push
or
mov
dec
xchg
pop
int
daa
test
xchg
out
mov
and
dec
loope
mov
and
inc
sbb
movs
movs
push
inc
sbb
inc
popf
pop
lods
mov
inc
leave
sub
addr16
or
mov
arpl
ret
shl
cmp
cmp
pop
and
loopne
sar
add
retf
adc
test
stos
cs
inc
hlt
add
pop
pop
push
shl
push
sbb
fbstp
fisttp
mov
jnp
xor
xchg
mov
push
stos
retf
fst
mov
std
cmp
bound
and
add
cmps
inc
pop
sub
ret
jg
ss
test
sub
jmp
dec
add
inc
push
es
xchg
nop
push
mov
add
(bad)
fs
dec
outs
cld
xchg
shr
push
push
push
movs
pop
pop
daa
push
adc
sub
adc
or
fs
inc
ror
imul
pop
push
les
popa
in
(bad)
push
jge
cmp
call
mov
push
jnp
jo
fst
push
popa
pusha
mov
test
(bad)
sbb
loop
add
retf
jge
add
push
sbb
cmp
add
add
mov
sbb
adc
lock
push
inc
lahf
je
mov
outs
and
rol
in
in
mov
push
fs
pop
hlt
dec
inc
xchg
call
fstp
dec
jmp
add
and
outs
aas
or
push
add
call
lock
push
inc
add
loopne
xchg
sbb
sbb
xadd
outs
pop
ror
loopne
or
scas
push
adc
dec
fs
stc
add
(bad)
adc
sar
add
add
movs
dec
add
sbb
mov
mov
adc
adc
mov
(bad)
addr16
pop
pop
jbe
rcr
adc
fbstp
sub
cmc
sbb
or
adc
or
addr16
pop
out
ror
dec
jo
adc
inc
fst
sbb
adc
std
outs
mov
dec
and
pusha
pop
add
pop
loopne
or
xchg
mov
xor
loopne
cmp
add
mov
and
add
xor
mov
imul
fadd
in
add
popa
xchg
jle
add
test
bnd
add
push
jmp
inc
cmp
jge
and
mov
inc
sub
push
(bad)
std
fisubr
sub
pop
jge
sbb
hlt
jmp
inc
xor
test
xchg
mov
mov
mov
lods
xor
push
cmp
jle
dec
lds
test
pop
dec
sub
inc
(bad)
pop
sahf
pop
outs
pop
aam
ret
mov
lock
mov
inc
mov
add
rcr
dec
pop
test
loope
sbb
leave
mov
nop
or
iret
jecxz
cmp
sub
enter
fiadd
ins
push
sbb
ja
and
jmp
pop
sub
stos
je
sbb
add
cmp
call
in
inc
lds
test
les
push
add
call
xor
and
push
dec
or
mov
push
movs
in
add
pushf
in
repnz
push
push
(bad)
xor
xchg
pop
mov
loopne
mov
push
js
std
cmp
mov
dec
inc
loop
mov
lods
jle
add
jmp
sub
cmp
pusha
add
ins
cmp
cmps
enter
into
push
sub
imul
scas
(bad)
imul
lock
mov
jmp
call
sbb
test
iret
or
and
mov
xchg
mov
inc
cmp
push
jae
pop
sub
enter
add
outs
inc
mov
hlt
adc
mov
nop
ja
jecxz
(bad)
or
or
pop
(bad)
cmc
sub
xor
ins
daa
repz
jmp
stc
enter
jns
loopne
shl
push
sbb
cmp
into
loop
test
dec
push
sub
jae
scas
or
mov
lea
push
cmp
pop
and
xlat
stos
mov
inc
loope
mov
fsubr
(bad)
pusha
ret
adc
test
je
stos
jge
push
add
rdtsc
jbe
or
pop
push
cmp
out
dec
sub
ins
gs
inc
fimul
jbe
push
pop
aaa
adc
sub
xor
jne
(bad)
rol
push
loopne
dec
stc
ret
pop
pop
mov
add
and
and
fisub
stos
dec
mov
inc
pushf
xchg
inc
sub
push
hlt
push
dec
cld
das
xchg
ret
jmp
inc
dec
jne
or
dec
ja
ret
pop
pop
mov
leave
aaa
fiadd
lods
cmc
pop
cmp
jne
cli
dec
jo
push
jp
jmp
mov
dec
cmp
add
or
add
pop
or
mov
fidivr
xchg
add
cmp
jne
or
in
inc
scas
pop
movs
rol
xchg
add
xchg
pop
or
fiadd
add
pusha
jl
push
jne
pop
add
jbe
mov
add
xchg
mov
sub
(bad)
jle
sti
stos
out
or
fwait
and
pop
into
adc
rcpps
lods
or
sub
adc
or
loope
push
jl
or
mov
sar
(bad)
jo
xor
test
push
jmp
or
dec
xchg
push
addr16
dec
ja
clc
cmps
js
out
(bad)
push
fs
adc
jl
or
(bad)
xchg
mov
and
push
dec
jns
mov
or
and
imul
jl
je
clc
jns
call
je
icebp
push
push
cwde
push
arpl
pop
push
mov
pop
cmp
mov
inc
adc
gs
mov
sub
xor
pop
nop
xchg
add
jecxz
ror
mov
movs
xor
nop
adc
fimul
int3
fadd
sub
movs
mov
adc
sbb
nop
add
add
add
xor
js
inc
xor
int3
cli
and
lahf
push
(bad)
aaa
nop
pushf
in
int
aam
push
leave
dec
push
int
int
fsubr
in
adc
aaa
pop
arpl
inc
lds
lods
push
push
ss
add
or
adc
add
add
aaa
icebp
or
mov
mov
test
pusha
sbb
mov
push
xor
xor
pop
push
aaa
nop
dec
push
jmp
jnp
dec
(bad)
repnz
aam
mov
shl
lds
add
loope
inc
push
xchg
add
inc
inc
lods
fwait
stos
aaa
cmp
aaa
rol
sub
sub
fdivr
aaa
pushf
daa
or
aaa
cmps
sub
loop
push
sub
aaa
xlat
enter
mov
into
enter
inc
jno
cmps
(bad)
and
aam
aad
pop
inc
push
dec
adc
push
sub
lods
rcl
aaa
stos
xchg
sub
inc
aaa
aam
inc
mov
adc
cld
in
push
sub
inc
inc
cmp
add
rcl
mov
iret
aaa
inc
dec
fadd
mov
daa
xor
cmps
dec
aaa
xchg
das
imul
stos
(bad)
or
outs
aaa
push
inc
cmp
mov
pop
mov
and
pop
in
adc
cli
rcr
pop
aaa
xlat
sub
cmp
mov
push
call
dec
aaa
sub
sub
aaa
sub
aad
shl
pop
aaa
test
inc
(bad)
fsub
frstor
xor
or
jmp
lods
pop
xor
sbb
aaa
ficomp
mov
(bad)
xchg
mov
or
or
aaa
mov
or
aaa
hlt
and
mov
aas
bound
lock
ins
cmc
push
bound
xchg
sbb
cmp
repz
stc
aaa
pop
inc
push
add
jno
xchg
mov
dec
jae
add
aaa
push
pusha
xor
cmp
int
je
jmp
push
sub
mov
adc
pop
or
aaa
and
sbb
or
(bad)
aaa
aaa
aaa
push
mov
dec
aaa
loope
push
inc
lods
or
cmp
xchg
or
mov
aaa
sti
inc
aad
aam
mov
push
lods
aaa
rep
test
add
adc
stos
hlt
add
test
dec
aam
mov
push
adc
mov
push
rol
xchg
rcl
test
aaa
sub
shl
ss
pusha
or
loopne
aaa
add
push
pop
(bad)
loopne
stos
aad
inc
daa
adc
push
pop
mov
test
ja
xchg
mov
add
cmp
rcr
inc
add
clc
mov
adc
mov
add
gs
xchg
(bad)
sub
data16
lock
hlt
pop
adc
pop
add
aam
rol
(bad)
jno
out
jne
pusha
mov
add
call
ins
xchg
mov
or
rol
adc
fmulp
ficomp
je
mov
or
and
add
xchg
sub
add
push
and
(bad)
or
(bad)
lods
fwait
pop
mov
xor
or
(bad)
lds
xor
(bad)
mov
or
ins
sub
inc
adc
adc
jmp
js
mov
cli
daa
hlt
mov
cmp
iret
sbb
inc
mov
popf
xchg
xchg
add
movs
lds
les
add
adc
sub
inc
lods
push
enter
and
sub
iret
mov
cmps
dec
dec
adc
cmc
mov
mov
int
push
mov
or
test
jge
sbb
xlat
bound
pop
mov
scas
jne
and
out
call
shl
scas
dec
pop
or
scas
pop
xchg
adc
or
mov
stos
and
inc
and
stos
jo
pop
cld
mov
mov
cmp
mov
pushf
add
sub
ds
mov
lahf
or
pop
icebp
cmp
lods
je
addr16
push
lods
sbb
rol
jb
daa
push
fnstcw
dec
int
adc
adc
push
loopne
xor
inc
mov
add
sbb
ss
cmp
inc
add
lods
outs
lods
arpl
call
mov
add
pop
mov
mov
pop
out
mov
clc
jg
push
test
dec
and
in
mov
jo
out
jnp
push
mov
in
out
mov
arpl
shl
push
jno
sbb
stc
ficomp
or
sub
inc
mov
mov
repnz
cmp
dec
aaa
push
daa
push
test
daa
out
xor
fist
ja
adc
fucomip
pushf
jmp
adc
stc
test
mov
push
push
js
adc
dec
hlt
jns
xchg
fwait
ins
ja
fs
inc
inc
cmp
mov
(bad)
xor
dec
cmp
xor
mov
cmps
cmp
loop
aaa
adc
mov
mov
dec
cmp
lea
cmp
cmps
dec
dec
push
repz
adc
push
in
push
in
enter
cwde
aas
out
xor
fst
out
loop
dec
dec
add
daa
cld
cmp
push
inc
or
mov
sbb
sbb
out
nop
ss
cmp
push
mov
xchg
push
jmp
stos
mov
jp
cs
into
rol
shl
pop
ss
or
mov
add
xchg
jge
mov
push
inc
pusha
xlat
jl
cmp
ss
push
mov
mov
jnp
adc
in
mov
jo
sub
clc
mov
cwde
jl
jg
push
dec
sbb
jl
mov
loopne
loope
xchg
mov
pop
sbb
aad
mov
mov
ret
cdq
rdpmc
ror
nop
(bad)
push
or
adc
sub
inc
adc
jp
(bad)
xchg
push
test
sub
push
test
aam
xchg
cld
lods
icebp
ja
out
cmp
add
xchg
das
jp
jmp
imul
xchg
shr
mov
(bad)
imul
cmps
aaa
mov
inc
aaa
ret
jle
push
sub
dec
cmp
jle
sar
mov
jg
jne
xchg
pop
push
cmc
inc
mov
adc
popf
xchg
push
pusha
dec
mov
rcr
gs
and
pop
or
jne
dec
mov
lods
js
mov
dec
clc
xor
add
jns
sbb
or
cmp
or
or
js
sub
enter
test
sub
adc
nop
clc
adc
call
pop
mov
and
lock
push
jnp
and
lock
loopne
dec
fidivr
sbb
into
in
or
repnz
idiv
fxtract
mov
iret
ficom
sbb
test
nop
mov
and
or
leave
add
pop
adc
push
pop
dec
clc
ret
leave
push
push
ins
pop
mov
xlat
mov
add
outs
add
or
fmul
pusha
add
dec
mov
and
cwde
inc
dec
cmp
clc
cld
int3
(bad)
sbb
lds
jne
push
cmc
sub
jle
jg
add
push
dec
cmp
jg
ds
push
fwait
push
or
mov
into
add
or
sbb
cmp
pop
les
fbstp
or
inc
pop
retf
retf
int3
pushf
push
or
jae
adc
xor
or
mov
(bad)
popf
cmp
jmp
or
(bad)
neg
jg
mov
sub
shr
add
mov
add
cmp
add
add
pop
add
push
popa
sbb
(bad)
test
je
lds
sbb
mov
jo
xor
jecxz
cs
repnz
add
in
add
clc
pop
clc
movs
xor
add
jno
rcl
xor
add
and
stos
pop
and
mov
adc
(bad)
push
or
pop
add
mov
mov
dec
xchg
ret
test
(bad)
cli
cmp
movhps
into
ss
imul
inc
mov
lea
dec
jno
pop
icebp
in
xor
add
push
xlat
sub
in
call
sbb
loopne
lods
sub
sbb
test
movs
adc
inc
fstp
aam
inc
or
jns
mov
sbb
sbb
xchg
push
sub
or
or
xchg
jle
and
cld
nop
push
cmovnp
in
jmp
lock
cmp
jl
push
xor
xlat
pusha
je
and
loopne
sbb
mov
and
mov
inc
dec
mov
cmp
jle
dec
lock
or
sub
xor
imul
lock
jmp
jbe
push
in
push
or
in
mov
scas
aaa
push
push
inc
or
and
xor
or
push
push
test
cmp
sbb
push
fnsave
sub
aaa
daa
adc
sub
adc
sbb
in
aaa
adc
add
dec
xor
lock
jmp
jne
add
pusha
call
fldenv
shr
add
stos
add
and
jp
out
lds
cwde
ret
sbb
sbb
lds
pop
idiv
push
sbb
add
movsx
and
add
ja
sbb
nop
lods
out
jl
cmp
jo
jmp
jl
daa
add
or
push
dec
imul
idiv
sti
jmp
inc
inc
pop
inc
ins
popa
jae
push
gs
cs
push
popa
imul
fucomip
out
gs
and
addr16
push
push
ds
jb
popa
jns
mov
push
movs
inc
bndcn
push
outs
gs
jae
inc
outs
ins
ins
arpl
outs
jae
xor
jle
pop
nop
dec
inc
dec
cs
jo
inc
rcl
sub
adc
rol
clc
pop
ficomp
inc
popa
jne
je
add
push
loopne
dec
or
das
sub
in
in
dec
outs
or
inc
jbe
and
out
pop
sti
add
or
push
and
dec
bound
adc
inc
and
push
cmp
ja
push
inc
movhps
adc
inc
adc
bound
add
adc
ja
adc
jp
mov
in
in
sub
inc
data16
out
jmp
pop
or
popw
and
pop
fs
or
xor
ret
mov
push
sahf
clc
jge
jle
adc
or
cmp
xor
daa
jl
mul
in
jnp
and
xor
pop
push
add
mov
adc
push
pmulhuw
outs
xor
inc
arpl
outs
popa
addr16
addr16
dec
outs
pop
ins
js
popf
test
adc
add
adc
add
clc
loope
(bad)
pop
cmp
pushf
adc
adc
or
loop
push
adc
fstp
or
push
outs
and
int3
push
rol
add
add
outs
shr
mov
imul
and
ins
das
clc
add
into
or
popa
ins
imul
mov
scas
add
and
(bad)
sbb
es
pop
pop
cmp
shr
add
sub
fdecstp
mov
dec
inc
outs
jne
dec
popa
bound
repz
adc
call
jnp
test
mov
je
jns
mov
inc
shr
in
repz
adc
test
loopne
sub
sbb
add
push
in
mov
add
(bad)
call
push
add
mov
mov
push
out
xor
mov
jge
pop
hlt
push
or
cmps
mov
pop
jg
outs
jb
add
and
inc
jb
sbb
add
or
xlat
popf
or
shl
add
cs
adc
add
je
jno
xor
add
ja
loope
inc
adc
adc
inc
mov
add
ins
push
sbb
jnp
push
add
jne
fdiv
mov
fcom
in
push
mov
out
mov
loop
adc
jne
retf
adc
and
push
push
jl
addr16
into
push
or
out
cmp
push
xchg
push
push
fwait
mov
or
stc
mov
test
adc
xor
into
xor
loopne
js
mov
adc
imul
sub
das
sub
push
mov
aaa
or
add
add
iret
leave
ins
mov
movs
dec
mov
js
push
retf
push
dec
cmp
push
push
inc
dec
outs
(bad)
out
cs
push
add
mov
daa
daa
and
pop
jno
or
push
jnp
leave
leave
enter
sbb
in
in
repnz
sbb
repnz
cmp
sbb
jb
icebp
ds
cmp
ret
cli
inc
sbb
aas
bswap
dec
cmp
sub
dec
sub
cmc
jo
push
shl
test
dec
dec
cmps
inc
sbb
jno
mov
(bad)
out
or
or
add
les
jno
push
jne
fwait
jae
fwait
pop
inc
outs
inc
mov
xor
gs
sub
add
jg
mov
dec
jae
or
xor
popa
jg
(bad)
cmps
pop
or
dec
jg
or
sub
dec
test
fs
mov
or
ins
jne
arpl
add
push
xor
sub
push
mov
add
add
outs
add
fisub
jbe
lahf
adc
jbe
dec
out
add
jae
jo
nop
add
enter
jb
out
out
pop
pop
xor
mov
and
xchg
mov
pop
or
add
rcl
and
dec
mov
jo
gs
sbb
add
sar
call
jae
pop
xor
mov
pop
dec
jae
mov
repz
imul
out
or
mov
iret
dec
add
push
and
mov
pop
nop
add
or
add
aad
push
add
sbb
lea
mov
inc
push
lds
adc
mov
(bad)
jmp
xor
js
jo
push
pusha
xor
gs
push
xor
into
ja
add
adc
xchg
retf
sbb
add
sub
push
das
scas
mov
dec
(bad)
xlat
sbb
lods
or
mov
or
pop
xor
mov
pop
ret
daa
push
dec
or
ja
xor
in
push
jo
fcomp
jbe
sub
nop
jg
add
imul
add
pop
add
popa
pop
and
pop
fnstcw
sahf
jmp
dec
push
es
jae
sbb
cmp
dec
aaa
or
add
movs
je
imul
call
shl
dec
add
inc
dec
outs
jne
into
imul
cmp
ficomp
ficom
daa
add
jl
cwde
mov
push
add
push
outs
fistp
push
or
push
inc
pop
fild
adc
add
inc
inc
fs
call
dec
xor
sub
and
mov
or
bound
xchg
rol
dec
test
shl
aas
mov
push
jb
ins
mov
jae
sbb
or
aad
mov
sbb
cmp
adc
fild
sub
or
xchg
outs
mov
in
cmp
mov
cmp
into
jo
fadd
adc
and
(bad)
mov
ror
ins
(bad)
mov
in
pop
(bad)
outs
or
enter
add
pop
mov
jns
leave
lods
mov
inc
shl
je
cmp
push
in
inc
and
push
aas
out
mov
retf
inc
ret
pmaxub
in
sbb
cmp
push
mov
or
push
sbb
push
test
and
rcr
push
ror
test
aas
(bad)
jl
ficom
xlat
dec
add
adc
or
or
pop
or
sub
pusha
pop
inc
mov
lahf
inc
outs
les
jl
and
lahf
inc
fcomp
push
add
sbb
das
ror
js
push
xor
cvtps2pd
sub
or
mov
popa
fwait
bound
scas
add
je
jecxz
push
loopne
mov
lahf
cmp
jl
add
adc
int
xor
jecxz
add
xor
add
and
jecxz
xchg
or
add
add
inc
add
addr16
add
imul
push
rcr
iret
mov
xlat
dec
pop
pop
push
es
fsub
push
enter
jne
repz
or
jle
jl
in
xor
lock
jo
stos
or
retf
add
in
xor
cmp
(bad)
lods
push
call
pop
push
push
repz
sbb
xor
xor
sbb
xchg
add
push
rep
add
or
add
add
sbb
ins
shl
clc
pop
add
sub
rol
push
add
sub
sbb
outs
jge
mov
clc
loope
sbb
push
mov
loop
jno
add
aam
cmp
and
js
aaa
adc
aaa
sbb
xor
add
call
aaa
dec
sub
outs
push
loop
loopne
aas
or
push
ss
int
mov
repz
fs
sub
jb
repnz
cs
mov
jns
das
outs
movs
out
sahf
pushf
mov
xor
dec
dec
inc
dec
ja
ret
dec
dec
stc
das
xor
xchg
daa
daa
fld
xor
add
pop
sub
fnstsw
cmp
pop
data16
cmps
inc
lds
popa
sbb
adc
cmp
jnp
ficom
xchg
add
dec
out
dec
or
jnp
push
mov
adc
add
mov
inc
pop
jnp
adc
or
sbb
jg
jnp
pop
jo
fdivr
xchg
cmp
or
test
or
xchg
add
loop
ins
push
cmp
pop
mov
jnp
outs
or
add
ja
push
shl
jnp
add
loopne
mov
pop
ins
cmp
or
add
fist
das
jnp
inc
add
or
fwait
gs
les
fadd
les
push
add
or
jnp
call
dec
dec
add
mov
jnp
push
shl
jnp
add
xor
jp
push
jnp
dec
push
je
jnp
jmp
push
ja
mov
sbb
jb
jnp
(bad)
sbb
jnp
adc
add
sbb
jb
jmp
pusha
enter
sub
add
dec
jg
add
cmp
pop
jnp
pushf
pusha
stos
pop
and
push
loop
lds
or
pop
push
loopne
jnp
dec
adc
add
add
push
stos
add
jnp
repz
sbb
add
push
or
jnp
loopne
fcom
cmps
in
cdq
jnp
xor
inc
out
mov
push
pop
jnp
inc
loop
out
mov
stos
inc
push
dec
sbb
sar
and
add
fcom
pop
adc
xchg
add
xor
cmp
add
sbb
into
mov
fadd
shl
rol
jecxz
jnp
je
add
mov
pusha
xlat
in
fcomp
jnp
adc
in
out
cmp
(bad)
jnp
or
jno
sbb
adc
lods
pop
pop
in
add
mov
rcl
ss
inc
mov
mov
mov
or
and
nop
inc
dec
mov
xor
adc
ret
sbb
popa
stc
add
int3
pusha
clc
fsub
aas
mov
out
(bad)
pop
test
pop
idiv
lds
or
loopne
mov
add
pop
sub
push
add
stos
add
mov
mov
adc
rol
ret
push
aaa
sbb
adc
add
int
rol
inc
int
rol
add
sub
inc
or
add
aaa
test
inc
or
pop
sub
scas
icebp
mov
mov
test
(bad)
out
jecxz
inc
fstp
cdq
or
mov
push
push
scas
inc
mov
inc
sar
push
call
jne
push
add
push
xchg
pop
sti
xor
iret
xlat
add
push
mov
rcr
aas
ins
(bad)
dec
imul
and
pop
and
aaa
jmp
movs
pushf
xchg
lds
pusha
pop
fnstcw
jmp
mov
ins
stos
mov
pop
dec
push
je
mov
fmul
aas
cmp
sub
push
adc
cdq
out
loopne
mov
push
pop
aam
push
pop
push
jl
mov
das
mov
xchg
je
mov
hlt
js
push
int3
inc
push
sbb
xchg
xor
fldcw
pop
popa
xor
push
xchg
pop
cmp
mov
loopne
test
adc
cmovns
xchg
stos
push
xchg
ss
imul
push
xchg
sub
pop
rdmsr
repnz
xchg
ror
push
sbb
jb
call
cmp
cmp
inc
sahf
pushf
pushf
nop
(bad)
adc
dec
dec
dec
mov
daa
daa
daa
and
outs
movs
icebp
xchg
xchg
xchg
daa
sub
jbe
fnstenv
inc
(bad)
scas
jne
imul
adc
mov
das
xchg
ss
test
ret
xor
mov
inc
jae
xchg
push
fisttp
sub
mov
push
sub
mov
mov
sub
xor
mov
test
test
push
jg
inc
add
les
mov
retf
inc
sbb
shr
push
sub
inc
sub
cmps
push
pop
or
or
ja
inc
pop
test
dec
inc
jbe
jae
nop
mov
cmp
adc
inc
mov
movs
and
das
inc
mov
add
and
xor
test
inc
pop
xor
xor
or
and
cli
inc
lods
jnp
iret
dec
add
add
add
xchg
rcr
inc
inc
movs
push
inc
jae
push
lods
mov
inc
test
add
or
mov
add
dec
add
mov
push
add
xchg
adc
mov
add
inc
inc
and
fcmovnb
xor
mov
ins
dec
inc
sub
js
test
mov
add
int
dec
aaa
add
jmp
dec
mov
mov
mov
lods
(bad)
jmp
cmp
mov
adc
daa
add
jb
data16
adc
dec
jmp
jge
pop
or
pop
loop
(bad)
(bad)
jmp
push
int3
jmp
jmpw
cmp
into
call
sbb
jmp
or
imul
jp
jmp
sub
mov
sbb
pop
in
(bad)
vmovlpd
fcom
adc
xchg
inc
add
shr
dec
pop
ret
inc
add
inc
or
pop
mov
sub
inc
fs
loopne
dec
or
loopne
xchg
cmp
adc
inc
inc
xchg
sbb
cmp
outs
sub
cmp
sub
mov
push
adc
sbb
push
push
mov
xchg
sub
push
mov
add
inc
std
ret
add
mov
adc
cmp
pop
(bad)
pop
int3
std
push
pop
dec
fiadd
icebp
call
movs
add
ret
out
mov
mov
or
test
sub
add
shl
mov
pop
lods
daa
retf
cld
js
in
inc
mov
hlt
imul
adc
jae
sar
inc
js
jbe
inc
test
and
and
adc
stc
lock
sub
sub
dec
add
bound
sub
cmp
mov
psrlq
and
test
and
test
fcmovnb
push
mov
lods
fs
or
sbb
sbb
retf
or
push
imul
rcr
sbb
cdq
cmp
icebp
lods
pop
sub
(bad)
aas
mov
dec
mov
das
retf
add
push
mov
in
inc
mov
lock
loope
xchg
add
pop
add
dec
push
shr
icebp
xor
add
out
jno
add
adc
jno
jno
inc
and
or
xchg
push
retf
jno
add
adc
pop
adc
mov
(bad)
pop
jl
sti
push
aam
sqrtps
pusha
xor
or
cld
shrd
and
and
je
or
add
scas
sbb
lock
icebp
je
cmp
rcl
adc
into
repz
adc
imul
cmp
mov
test
into
adc
push
cwde
es
arpl
fstp
daa
sub
add
push
sub
mov
add
add
fild
pop
loopne
push
mov
or
in
arpl
push
xor
outs
pop
lods
xchg
add
test
sbb
jae
push
(bad)
mov
jnp
jge
sub
and
cmp
xor
addr16
pop
ja
unpckhps
mov
push
push
addr16
inc
sub
les
sbb
into
repz
sahf
mov
shl
int3
cs
mov
scas
jge
pop
push
push
fsub
add
pop
ja
add
pop
rcr
and
loopne
dec
adc
js
pop
gs
inc
cld
sub
add
out
sub
jno
or
mov
fldenv
cld
pop
test
adc
bound
(bad)
mov
icebp
ret
mov
test
and
pop
test
sbb
push
and
jmp
push
ja
cmp
pop
movs
das
ret
and
push
sub
out
cld
(bad)
xor
das
push
sub
inc
push
(bad)
xlat
lock
bound
push
out
xchg
punpckldq
into
sub
fld
rcl
xor
pusha
bound
push
adc
movs
xor
xchg
sbb
xor
lea
adc
and
push
out
mov
test
mov
push
adc
and
push
cmp
pop
push
cmp
inc
adc
inc
mov
or
push
lds
sbb
pop
das
in
mov
popa
xlat
mov
push
hlt
push
add
pop
daa
push
and
mov
mov
mov
cmp
xor
or
mov
stc
mov
adc
add
mov
inc
mov
adc
sbb
adc
gs
sub
xchg
cmp
ret
cwde
test
test
xchg
push
xchg
mov
cmps
cmp
push
push
(bad)
(bad)
in
sub
and
outs
push
sbb
aas
test
test
mov
adc
(bad)
push
mov
pop
pop
adc
add
mov
outs
ins
jle
jno
xchg
pop
lahf
movntq
adc
adc
xchg
punpcklbw
add
jge
sub
stos
stc
sbb
sbb
bound
jno
and
sbb
and
(bad)
int3
sbb
cmp
sub
sbb
cmp
push
add
ret
dec
or
sbb
mov
fmul
scas
add
jbe
movs
pusha
pop
add
mov
xlat
push
les
pop
xor
cmp
fbld
mov
loope
or
mov
push
imul
icebp
(bad)
xchg
push
xchg
cmc
imul
or
and
imul
adc
popf
fild
add
(bad)
xor
add
popa
add
xor
sbb
jo
dec
mov
cmc
test
pop
mov
mov
mov
push
push
bound
ja
or
rcr
ins
push
add
inc
pop
jb
(bad)
or
sahf
data16
dec
pusha
les
xor
neg
popf
repz
and
sbb
push
stos
and
sub
jp
mov
add
outs
out
aaa
sbb
das
je
mov
(bad)
fstp
add
push
aaa
push
in
inc
sbb
inc
aaa
cld
push
pop
push
rcl
xor
inc
sub
add
or
and
mov
jno
loopne
or
push
inc
adc
add
nop
pop
jno
xchg
pop
or
sub
inc
mov
fmul
test
cmp
test
xlat
stos
sbb
popf
stos
jno
pop
mov
pop
add
or
lahf
jae
xlat
mov
xlat
pusha
push
xchg
addr16
jb
mov
mov
das
movs
push
xlat
add
or
sub
sub
pop
fadd
adc
xlat
dec
push
xor
xor
inc
sbb
arpl
imul
sti
dec
sbb
sbb
inc
mov
loope
mov
inc
rol
dec
pop
mov
ja
in
fwait
mov
xchg
imul
ror
mov
push
push
mov
sbb
pushf
pop
sbb
adc
adc
cmp
push
push
inc
jne
adc
and
xor
add
clc
or
jecxz
push
mov
inc
xor
pop
jno
adc
jbe
lds
test
or
dec
push
push
into
inc
call
or
pop
jbe
inc
jns
sti
or
fldenv
push
cmp
popa
outs
je
adc
je
ins
js
fsub
inc
dec
push
or
add
mov
iret
in
ss
aam
mov
jl
aas
movs
mov
inc
outs
jae
fiadd
inc
fmul
add
sub
adc
test
inc
or
dec
lods
sti
inc
jb
outs
jb
pop
sub
push
or
aam
jg
add
gs
sub
ins
pop
das
jbe
and
push
into
cwde
push
pop
call
rol
xchg
rdmsr
popa
adc
push
push
ins
dec
push
ds
lods
and
cmp
shl
xor
adc
pop
test
cmp
and
push
sub
xchg
cmp
add
sbb
push
gs
lods
adc
test
cs
jbe
push
call
add
shl
adc
dec
ins
jne
cmps
mov
pop
pop
add
pop
ret
movs
adc
mov
pop
adc
imul
or
pop
(bad)
(bad)
fisubr
push
mov
push
mov
dec
jne
xchg
push
push
mov
mov
inc
fdiv
rcl
pop
push
mov
mov
call
lea
mov
fmul
mov
sbb
push
or
int3
add
add
mov
push
lea
mov
cs
lods
test
xor
xchg
enter
dec
lahf
in
mov
cmp
dec
movs
push
loopne
dec
iret
add
push
call
(bad)
xchg
mov
dec
test
jl
inc
xor
into
in
dec
jle
or
mov
add
mov
mov
push
movs
push
mov
dec
xchg
add
dec
jne
mov
test
je
sub
mov
mov
push
movzx
xor
pop
sti
and
dec
mov
inc
and
fsubr
xchg
adc
pop
pop
les
push
and
push
or
sub
mov
fsub
inc
or
je
pop
mov
or
sti
push
add
jl
enter
loopne
scas
ret
rol
and
sbb
ror
pop
inc
(bad)
mov
lock
mov
adc
ret
comiss
xor
aaa
mov
ret
jo
gs
aaa
sub
fidiv
sti
fcom
shl
mov
adc
jne
xor
cmp
push
inc
shl
hlt
sbb
(bad)
sbb
clc
or
adc
push
test
out
push
push
cs
cld
jmp
push
clc
sub
retf
sbb
mov
adc
cld
int3
cmp
jle
pop
int3
dec
cmp
jl
cmp
push
lods
clc
cmp
jle
adc
push
cmp
or
or
cmp
dec
xchg
cwde
pop
loope
cdq
rcr
jl
jne
cmp
mov
push
cmp
and
cmp
xor
inc
pop
inc
mov
aaa
pusha
push
lods
pop
neg
fsubp
lahf
mov
pop
pop
mov
pop
ret
dec
adc
rcr
test
jl
rol
pop
pop
fadd
push
xor
adc
inc
mov
test
hlt
push
or
cmp
loop
stos
(bad)
adc
mov
dec
cmp
mov
jecxz
sbb
pusha
cmp
push
dec
call
and
add
or
cmp
lds
push
pop
out
pop
hlt
test
outs
popa
cli
test
je
cmp
cmps
jnp
jno
lds
or
pushf
push
loope
lods
outs
pop
pop
pop
ss
inc
xchg
ja
in
adc
xchg
add
jmp
out
fmul
push
sbb
xlat
lock
pushf
mov
sbb
push
rcr
sub
sub
xchg
push
mov
js
stos
in
in
lods
pusha
inc
rcl
add
lods
inc
ss
dec
clc
push
jl
mov
aam
inc
int3
pusha
mov
mov
mov
arpl
test
sar
cld
mov
not
xchg
push
loop
adc
lods
mov
pop
lea
mov
sbb
sub
lods
(bad)
xabort
inc
push
mov
pop
mov
xor
pop
out
sti
sbb
inc
xchg
xor
bound
test
mov
sub
jb
push
lea
jno
push
push
and
pusha
xchg
mov
shl
dec
smsw
add
(bad)
sub
inc
mov
jae
pop
jne
or
sub
push
nop
out
sbb
push
pop
cmp
call
add
rol
cmp
jmp
in
mov
inc
test
and
adc
add
mov
add
pusha
pop
out
mov
mov
mov
pop
xor
in
pop
shl
or
aam
pusha
add
adc
push
cmps
movs
push
mov
add
push
dec
add
test
jne
aam
test
lock
mov
inc
and
pop
or
enter
and
(bad)
mov
dec
jne
ss
nop
data16
push
inc
mov
adc
or
mov
hlt
(bad)
xchg
in
sbb
(bad)
jl
inc
mov
jg
in
sub
inc
imul
mov
sbb
icebp
cmp
ins
mov
xchg
fld
pop
je
shl
mov
add
call
(bad)
pop
add
ret
sti
xchg
inc
loopne
loope
ret
mov
adc
rol
xor
adc
add
je
mov
shl
cs
lock
data16
ror
mov
es
movs
jmp
scas
mov
stos
push
data16
or
sbb
xchg
sub
inc
dec
aam
mov
popa
aam
mov
mov
aam
jl
add
sbb
pop
push
out
cmps
mov
sbb
jno
bound
mov
jo
lds
inc
cmp
mov
or
ret
(bad)
push
mov
pop
push
mov
mov
lods
dec
aad
cs
clc
aas
loopne
push
inc
add
inc
icebp
and
into
mov
xor
or
bound
test
jecxz
jnp
pop
jp
or
sub
sbb
or
xor
push
add
ja
inc
mov
sub
push
inc
push
rol
dec
add
rol
sub
fsub
lock
pop
lea
outs
xor
not
add
cld
test
mov
mov
sar
movs
sub
adc
hlt
lea
adc
push
add
hlt
cmps
pusha
push
adc
leave
jae
je
add
loopne
popaw
movs
add
(bad)
xor
in
jae
and
jg
(bad)
push
and
mov
mov
imul
dec
int3
xlat
int3
push
add
loopne
pop
retf
test
adc
inc
sub
addr16
push
or
add
sub
and
inc
mov
test
cmp
outs
setb
test
mov
movs
loop
repnz
enter
test
shl
mov
ja
lods
out
sbb
pop
sub
inc
cdq
les
hlt
or
xchg
ficomp
ror
push
ret
mov
call
daa
xor
add
sbb
mov
repnz
jns
inc
adc
xor
cmp
repz
mov
lods
add
jae
mov
mov
pop
sub
into
inc
xlat
mov
mov
shl
leave
mov
add
je
add
add
or
les
mov
fadd
scas
fmul
jle
les
shl
int
add
sbb
mov
and
aaa
ret
loopne
cs
sbb
test
xlat
mov
push
xlat
enter
xor
mov
mov
jg
mov
cmp
std
(bad)
call
iret
lock
les
mov
in
nop
mov
add
xchg
clc
bound
and
push
jl
cs
lea
dec
jmp
sbb
jmp
inc
add
fwait
and
mov
mov
cli
mov
and
scas
test
pop
js
mov
das
xor
add
push
movs
mov
pop
stos
push
nop
jnp
push
fwait
add
pop
imul
cmp
sbb
adc
dec
xchg
sti
arpl
mov
xor
js
pop
dec
add
pop
sbb
pop
sbb
fist
fiadd
aam
hlt
cmp
or
cmp
push
jg
adc
in
aaa
push
imul
push
fcom
imul
mov
inc
mov
push
jnp
xchg
outs
ins
ins
outs
outs
and
cli
push
scas
push
scas
sbb
ins
push
or
add
in
and
jge
or
je
into
mov
push
das
outs
push
and
imul
idiv
xor
clc
dec
cmp
or
ss
or
xor
dec
or
jge
gs
hlt
push
add
jns
outs
pop
rcr
enter
(bad)
cmp
sub
cmp
or
add
and
push
lods
sbb
or
sti
mov
add
or
and
jmp
add
and
fdivr
popf
out
popf
or
enter
bound
arpl
in
xor
sub
int3
adc
push
outs
sbb
das
inc
or
pusha
out
add
inc
xor
mov
outs
pop
or
imul
icebp
jno
ja
repz
jnp
int3
pop
adc
pop
fimul
xor
clc
cs
or
pop
sub
cmp
inc
jbe
outs
je
or
cmp
jg
jg
mov
mov
out
push
or
addr16
jo
dec
pop
adc
lds
pop
cwde
add
outs
cmp
mov
popa
out
sbb
(bad)
jae
xor
sub
adc
dec
gs
pop
or
cmovbe
jae
bound
addr16
pusha
adc
cmps
push
fsub
loopne
sbb
(bad)
outs
(bad)
and
and
jg
inc
inc
push
push
jns
mov
push
sub
imul
jne
cmp
jo
in
or
pusha
aaa
fistp
add
jbe
sbb
iret
das
std
push
mov
sub
add
inc
cmc
loope
mov
loop
addr16
push
push
push
ror
add
cmc
data16
push
dec
mov
push
shr
xlat
push
cdq
push
inc
push
fist
and
jg
shl
mov
cmc
call
and
lea
daa
or
pop
inc
jbe
outs
jns
cmp
push
and
je
jae
rol
xchg
push
or
call
aaa
sub
or
inc
jbe
iret
xchg
fmul
jecxz
leave
mov
inc
dec
xchg
mov
dec
or
jb
jns
inc
dec
cld
or
cmp
sub
outs
pop
push
jmp
fsubr
ja
add
jge
adc
es
dec
push
inc
gs
mov
test
dec
cmp
in
loopne
lock
add
movs
or
(bad)
iret
xor
ja
mov
jge
test
pop
push
pusha
imul
out
xor
mov
mov
fs
jl
int
mov
mov
push
jnp
mov
mov
push
ins
xchg
adc
jle
je
mov
jne
push
aam
lock
inc
jbe
cmp
jge
mov
jns
test
js
mov
mov
sub
je
das
fidivr
es
je
fdivr
fild
rol
or
add
mov
outs
push
sub
sub
mov
jmp
pop
or
imul
je
cmp
push
mov
lds
cmp
add
inc
jnp
fld
mov
mov
adc
(bad)
inc
ror
xor
lds
lods
push
pop
popa
in
ins
pop
cmp
mov
cld
movs
test
cmp
jbe
repnz
repnz
jl
movs
retf
mov
push
mov
push
and
add
scas
inc
js
mov
mov
sets
xor
rol
test
or
mov
inc
push
loopne
cmp
push
xor
or
sbb
push
gs
dec
sbb
add
inc
xor
cdq
test
or
pop
mov
sub
popa
dec
add
xor
jo
adc
push
clc
dec
dec
mov
repnz
add
mov
stos
jmp
xor
xchg
pop
mov
mov
push
and
pushf
mov
fldenv
mov
pop
cmp
pushf
int3
push
sub
xor
ins
repnz
push
retf
das
cmp
jnp
outs
in
xchg
or
sub
jae
(bad)
rol
add
push
dec
or
xlat
add
xor
push
push
outs
push
rol
add
pusha
shl
rcl
or
loopne
mov
inc
mov
gs
imul
mov
and
or
jo
loopne
or
cmc
pop
daa
sbb
mov
(bad)
movd
cmp
adc
mov
inc
or
mov
add
mov
inc
dec
sub
rcr
outs
or
rcl
cmp
test
lahf
ret
leave
adc
adc
jo
xor
adc
imul
cmp
push
sbb
inc
or
jne
adc
add
sbb
push
mov
mov
or
loope
sahf
ret
mov
in
jmp
add
add
mov
mov
ficomp
xor
push
fs
(bad)
mov
je
inc
add
add
jp
add
pop
sub
loopne
shl
nop
cmps
add
clc
mov
test
sbb
mov
rcl
or
mov
rol
mov
pop
dec
int3
int
repz
aas
or
cmps
ror
ud0
inc
fsub
and
xchg
inc
add
scas
sbb
es
das
fimul
clc
or
mov
cmp
sub
js
push
enter
imul
push
sub
fnstcw
add
cmp
xchg
adc
popaw
jne
and
outs
jb
call
inc
mov
pop
xchg
or
(bad)
sbb
jle
mov
in
das
mov
push
add
rol
cwde
inc
addr16
mov
adc
lock
fdivr
(bad)
in
cmp
popa
bswap
fild
scas
test
push
jl
unpcklps
push
mov
repnz
jge
add
movs
jae
movs
cli
mov
adc
out
test
or
mov
or
es
je
pusha
inc
pop
(bad)
ins
ins
sub
dec
xchg
daa
andnps
and
add
push
push
and
jb
bound
mov
pushf
jae
cwde
adc
ins
or
dec
sbb
ds
arpl
loopne
add
hlt
fsubr
pop
(bad)
lock
dec
shl
or
lea
mov
xchg
sbb
or
lods
ficomp
cwde
test
cmp
adc
pusha
pop
dec
popa
push
mov
dec
sbb
dec
mov
sti
mov
jo
pushf
mov
xor
inc
add
cmp
mov
int3
shl
add
adc
mov
mov
mov
js
fwait
add
xor
dec
(bad)
int3
lahf
pop
sub
sub
imul
pusha
push
fimul
mov
sub
retf
imul
dec
jae
repnz
mov
mov
adc
and
in
adc
(bad)
shl
mov
or
jbe
adc
scas
or
arpl
jp
dec
add
outs
arpl
(bad)
push
dec
cmc
imul
(bad)
dec
or
pop
aas
ss
xchg
xchg
pushf
mov
jo
out
or
sub
(bad)
cmp
stos
add
dec
test
add
adc
pop
pop
inc
pop
add
xor
pop
xchg
dec
shl
or
retf
lods
xor
imul
add
pop
xchg
push
cli
push
ss
das
or
sar
xchg
mov
das
mov
in
lods
adc
in
add
or
cvtpi2ps
xor
lea
inc
sbb
sti
jae
imul
or
das
mov
jno
repnz
push
mov
push
xor
mov
ja
outs
imul
rcpps
mov
daa
loope
dec
mov
cmp
pusha
mov
addr16
mov
das
pop
pop
or
xchg
lds
out
scas
dec
jle
jae
loopne
sbb
sbb
jb
jge
inc
out
sub
add
clc
mov
add
inc
nop
add
inc
xchg
cmp
add
enter
imul
test
jmp
adc
or
pushf
pop
sbb
adc
fldenv
fldcw
push
dec
dec
test
adc
pop
add
xchg
pop
push
xchg
pop
inc
out
adc
aas
popa
outs
fs
add
or
bound
mov
ror
pop
xlat
mov
mov
jnp
or
dec
bnd
imul
xor
scas
cs
cmps
add
sbb
jae
xor
pop
dec
in
pop
mov
test
sbb
inc
pop
push
daa
inc
das
adc
push
ror
mov
add
xor
ss
xchg
nop
and
sbb
xor
sub
sub
inc
adc
outs
arpl
into
loop
adc
ss
and
add
aaa
mov
push
cmps
add
aam
out
sbb
pop
gs
aaa
dec
dec
mov
or
(bad)
test
sub
sub
jl
mov
test
sub
push
scas
cdq
das
in
adc
jns
sub
mov
push
mov
mov
jno
pop
lods
pop
push
dec
cs
mov
aas
lea
ret
add
fisttp
and
dec
cmps
shl
push
outs
arpl
repnz
or
push
adc
ret
or
mov
pop
inc
retf
test
(bad)
loope
fbld
push
test
popa
ins
imul
pop
xor
add
jge
dec
lock
inc
add
jo
cmp
icebp
push
or
fmul
cmp
add
call
out
aam
wbinvd
add
xor
inc
cmps
retf
or
cmp
mov
mov
ret
outs
loopne
mov
dec
aam
bound
leave
dec
jno
or
mov
imul
adc
test
ret
jae
jmp
dec
add
jecxz
sub
dec
int3
(bad)
mov
and
adc
sbb
dec
add
gs
rcr
push
fild
xchg
mov
add
add
in
and
dec
inc
movs
sbb
pusha
test
test
mov
neg
add
lds
popa
xor
xor
pushf
(bad)
rcl
cmp
loop
cmp
push
adc
das
xchg
push
xor
stos
outs
push
pop
mov
push
xor
jns
imul
push
call
retf
shr
push
enter
cld
inc
jnp
bound
push
xchg
in
fdivr
repz
ror
test
inc
dec
mov
iret
mov
add
jne
dec
inc
adc
adc
inc
mov
fisubr
mov
arpl
pop
add
push
call
sbb
fs
popf
push
inc
sbb
movs
pop
cdq
xchg
(bad)
mov
adc
stos
sub
inc
vfnmadd231pd
aam
pop
pop
inc
xor
fstp
jae
in
sub
xor
xor
inc
rep
push
ins
gs
push
test
test
ret
bound
fild
or
pop
xor
popa
and
adc
add
mov
sbb
in
bndldx
lahf
bndstx
pop
mov
(bad)
push
adc
iret
cmp
push
into
cmp
out
jbe
mov
mulps
and
mov
adc
add
sub
popf
xor
adc
pop
push
cmc
inc
cmp
and
push
int
inc
mov
inc
inc
jmp
xor
lock
fs
mov
test
loopne
push
mov
cmp
gs
fimul
ins
retf
or
pop
or
and
xor
rol
cld
je
aaa
adc
dec
inc
xor
and
out
push
mov
sbb
mov
out
hlt
mov
not
mov
and
or
mov
add
xsetbv
iret
dec
cmps
push
push
jns
lds
out
sub
dec
sti
dec
add
or
(bad)
xchg
iret
cmp
mov
fwait
mov
sbb
outs
adc
cmps
xor
push
inc
sub
xor
jne
push
fcomp
adc
jns
out
pop
movups
xchg
mov
xor
mov
or
fs
div
or
fs
mov
adc
or
lods
sbb
push
test
lods
jo
add
ret
cmp
xor
push
xchg
add
sub
add
push
imul
jne
add
dec
or
inc
rol
inc
sti
lahf
cmp
push
and
jo
add
rcl
cli
mov
inc
(bad)
pop
test
(bad)
push
pop
and
add
das
push
pop
cwde
sbb
fst
or
mov
mov
and
in
push
shl
das
xlat
push
mov
xchg
xor
mov
inc
pusha
inc
sub
mov
xor
inc
fs
pop
sub
popa
and
and
pop
adc
push
mov
push
movs
pusha
add
pop
aam
mov
aaa
sti
push
mul
je
loope
dec
cmps
add
or
xchg
cmp
pcmpeqd
sbb
lock
adc
inc
push
jne
jle
popa
sbb
or
jge
or
gs
add
push
jne
jo
je
in
cmp
or
pop
and
fs
shl
(bad)
cmps
js
popa
test
mov
add
cld
jge
outs
ja
push
and
jb
out
fwait
shl
inc
imul
in
adc
imul
popf
cmp
jae
ins
xchg
dec
rcr
dec
int
and
or
and
add
or
push
push
ds
outs
mov
iret
adc
cmp
sbb
push
stos
nop
xor
arpl
mov
fs
dec
push
xchg
add
xor
inc
jne
iret
sub
xchg
cmp
pop
ret
or
(bad)
mov
lock
push
sbb
nop
sbb
push
mov
mov
add
mov
fcmovne
(bad)
sub
or
arpl
pop
test
sub
and
ja
push
add
outs
and
or
and
mov
pop
stos
sub
push
mov
jmp
and
sub
sbb
push
or
pop
sub
jge
rcl
mov
push
adc
bound
sbb
scas
imul
imul
sub
xchg
out
or
push
lods
or
dec
push
push
pop
xchg
and
adc
ins
push
mov
inc
pop
adc
aad
aaa
stos
xor
int
pop
stos
inc
push
push
sbb
push
sbb
(bad)
sub
gs
mov
scas
mov
push
syscall
sub
js
ret
pop
push
mov
popf
jge
jecxz
das
sub
sub
jo
push
loopne
jns
jge
add
out
push
in
cmps
shr
push
sbb
adc
sbb
inc
push
rcl
mov
push
ss
cmp
js
inc
push
and
push
sub
add
and
dec
sbb
mov
sub
inc
push
mov
ret
scas
cmc
lock
dec
add
cdq
pop
and
loopne
movs
dec
mov
sub
loop
xchg
xchg
xchg
mov
and
imul
add
icebp
ja
movs
mov
inc
mov
outs
mov
cmp
ret
cmp
sbb
movs
jg
add
mov
push
xchg
push
pusha
fxch
dec
mov
fsub
dec
shr
pushf
pop
push
rcl
movhps
mov
pop
in
sbb
dec
mov
cmp
pop
sbb
movs
pop
fsub
adc
daa
(bad)
or
test
cmp
or
rol
ds
(bad)
loopne
sbb
cmp
lea
and
dec
lahf
ror
ins
inc
minps
das
dec
sub
rol
mov
adc
fmul
mov
repz
inc
adc
pop
mov
outs
cdq
mov
(bad)
loop
(bad)
xchg
pop
xor
xor
sub
out
test
push
or
push
enter
js
(bad)
jmp
adc
xor
or
jae
data16
sbb
test
cmp
mov
mov
and
loope
mov
dec
xchg
bound
data16
lods
dec
mov
stc
das
call
push
inc
test
push
add
or
(bad)
or
mov
xlat
dec
jae
sti
in
xor
push
sbb
add
out
mov
div
push
dec
add
or
fsub
push
pusha
fcomi
mov
mov
add
repz
push
xor
or
pop
pop
mov
push
test
or
push
ror
iret
jnp
int3
push
cwde
cld
aaa
push
mov
or
add
push
loopne
data16
data16
push
mov
ja
push
inc
lahf
xor
lds
cmp
lds
sbb
sbb
mov
sbb
sbb
add
lock
mov
jne
push
mov
(bad)
rol
punpckhbw
sub
pop
adc
sbb
push
add
add
lahf
fs
xor
add
dec
data16
add
push
adc
or
add
sbb
pusha
add
add
jo
and
jbe
mov
sub
lds
dec
add
add
push
or
rol
mov
inc
out
mov
pop
scas
pop
in
dec
dec
add
ja
and
mov
mov
push
adc
nop
push
add
cmp
push
pop
iret
jnp
mov
sub
mov
jl
ins
push
mov
mov
push
dec
push
movs
ins
push
push
in
push
(bad)
or
jl
add
and
inc
daa
xor
inc
mov
mov
js
jg
dec
jb
adc
popa
adc
mov
pop
jo
call
(bad)
fsubrp
dec
mov
and
sub
inc
ror
or
loope
xor
cli
pop
push
(bad)
mov
mov
pop
stos
add
test
loopne
or
mov
adc
add
sub
popa
sbb
or
push
sahf
sub
jb
mov
les
pop
ja
rol
popa
jnp
pop
aad
cwde
add
inc
mov
mov
cmp
nop
mov
sub
inc
dec
loopne
sbb
(bad)
out
lock
cmp
ins
(bad)
hlt
inc
lea
mov
add
or
hlt
loop
shr
jle
push
push
add
pop
js
mov
lods
inc
add
add
out
mov
ror
fsub
cmp
lock
pop
xchg
push
add
js
lock
cwde
pop
inc
jns
jo
or
push
ja
cmp
adc
iret
mov
or
rol
scas
shl
add
ror
mov
push
jle
outs
out
rol
push
out
movups
jnp
hlt
sbb
mov
loop
or
fst
mov
mov
pushf
loopne
call
dec
and
sub
jne
in
call
add
clc
mov
addr16
sub
ror
fld
or
stos
jp
xor
lea
imul
cmp
lds
or
rol
pop
push
and
and
call
push
aas
popa
mov
xor
push
mov
mov
add
xor
fwait
mov
(bad)
call
and
adc
xchg
ficomp
dec
and
add
or
pushf
mov
ror
ins
pop
add
int
bound
mov
dec
mov
push
pop
mov
outs
push
push
push
iret
mov
xor
scas
xor
pop
sub
pop
push
and
mov
jnp
js
aam
ds
push
jnp
mov
mov
push
test
cmp
repz
fbld
push
aam
pushw
in
js
fidivr
jns
pop
call
push
hlt
push
jl
shl
mul
ret
add
xchg
sahf
popa
jo
add
add
or
or
push
jmp
push
jne
daa
dec
or
pop
jle
ret
add
test
arpl
sbb
sub
push
dec
arpl
mov
mov
adc
ins
fs
(bad)
int3
and
cmp
sbb
jnp
push
jg
xor
pusha
mov
inc
imul
inc
xor
xor
lock
or
mov
dec
outs
cld
cmp
dec
dec
test
mov
fsubr
movnti
jmp
iret
ror
cmp
ja
adc
dec
cmp
adc
cmp
es
jae
or
or
dec
test
or
shl
outs
clc
(bad)
inc
or
xor
push
jb
mov
movs
push
arpl
cs
or
adc
xor
jnp
add
add
test
pop
adc
jbe
imul
push
jg
pop
inc
psubusw
xor
or
mov
xchg
mov
xor
push
mov
fsub
adc
mov
and
shl
and
and
push
mov
and
and
inc
ins
and
and
mov
or
scas
mov
and
inc
movs
xchg
shl
hlt
jmp
add
jae
xor
pop
push
inc
aaa
xchg
movs
xlat
aas
inc
outs
push
imul
mov
push
cmp
push
lods
push
sbb
inc
xor
adc
leave
dec
jp
outs
mov
add
mov
or
adc
inc
pop
dec
push
mov
xlat
loopne
das
sub
add
inc
adc
rol
cmps
sbb
(bad)
ins
cmp
add
dec
outs
ins
xor
loopne
or
fdiv
(bad)
nop
dec
or
call
arpl
lods
push
or
sbb
add
pusha
jp
dec
or
and
inc
adc
scas
dec
add
ss
add
test
test
or
or
ds
sbb
aaa
fst
ja
push
clc
sub
push
push
ret
das
or
mov
clc
adc
jle
mov
mov
jbe
rcl
cmp
fimul
mov
pop
call
in
dec
adc
mov
pop
lock
ds
adc
sub
(bad)
xlat
pop
aad
sbb
xchg
or
mov
push
add
sbb
add
mov
adc
and
and
sub
mov
lods
jge
inc
pop
fimul
imul
push
add
imul
aam
jo
shl
mov
mov
mov
pop
push
data16
out
fld
(bad)
test
mov
push
outs
jne
lods
sbb
sub
in
cli
inc
imul
jae
outs
std
lds
mov
sub
mov
aad
and
std
mov
loopne
lds
or
push
(bad)
imul
mov
inc
and
imul
or
cwde
cwde
mov
adc
add
push
cmc
add
inc
add
add
fsubrp
es
das
sbb
repz
mov
pop
fild
push
inc
mov
or
jnp
jnp
pop
cmp
je
dec
movs
push
fs
adc
nop
fstp
add
call
sbb
loope
data16
jl
adc
sub
xor
push
push
jl
mov
in
or
jne
les
push
mov
push
cwde
jp
ror
push
adc
bswap
pop
aad
add
sysret
add
retf
xchg
mov
wbinvd
add
add
or
push
sub
sbb
adc
shl
test
scas
or
je
dec
scas
push
out
mov
in
push
in
pop
xchg
sbb
sbb
push
and
es
fisttp
dec
in
pop
mov
add
dec
pop
lock
or
outs
in
cmps
add
jbe
inc
pop
test
adc
xor
adc
or
push
(bad)
cmovns
push
adc
jbe
test
movs
pushf
movs
push
gs
add
inc
jbe
leave
sbb
add
je
mov
jg
das
mov
rol
xor
push
adc
xchg
xor
adc
in
adc
pop
cmp
and
push
jbe
sub
leave
mov
mov
jge
or
cmp
and
test
das
pop
push
ret
add
out
imul
add
adc
(bad)
(bad)
sbb
pop
add
aaa
shl
inc
out
or
xor
shl
jmp
push
xchg
cmp
add
call
inc
inc
arpl
add
push
push
imul
neg
lock
cld
mov
push
int3
iret
jnp
jnp
push
push
mov
and
pop
neg
jnp
jo
and
in
rcl
inc
jl
push
les
sub
sub
push
lea
fs
mov
je
fdivp
ficomp
fadd
clc
fs
push
lock
iret
jnp
mov
test
jl
pusha
push
inc
mov
jnp
jl
xor
push
rol
clc
iret
cmp
loopne
mov
aaa
mov
sbb
out
jns
cmp
adc
adc
inc
sub
cmps
and
out
or
xchg
adc
stos
cld
add
cmp
fiadd
inc
dec
jae
add
lock
mov
pop
add
add
test
cmp
pavgb
push
push
repnz
or
nop
sbb
imul
jl
sbb
xchg
sbb
mov
bnd
pop
dec
mov
ja
add
loop
cmp
and
fisub
mov
ror
and
mov
daa
add
sub
ror
sub
jg
retf
xchg
dec
sub
jge
ror
add
pop
out
or
sub
add
pop
xlat
jmp
xchg
sub
pop
mov
aam
xor
push
xor
fwait
xor
xlat
cs
getsec
add
mov
(bad)
add
cmp
shl
xchg
pop
cmp
popf
cmp
and
or
popf
lock
sub
std
or
push
lods
pop
dec
or
sub
fs
test
lods
ret
add
add
std
or
inc
stos
mov
aas
dec
or
xchg
pushf
shl
push
cmp
push
inc
rcr
test
or
sub
mov
xchg
push
jb
pop
add
mov
jae
test
ret
imul
fsub
es
sub
lods
pop
pop
outs
scas
mov
push
dec
imul
or
lods
pushf
xchg
and
mov
mov
aaa
lock
xor
imul
add
(bad)
test
pop
stc
mov
adc
jp
or
fsubr
push
add
pop
push
dec
(bad)
cmp
and
mov
inc
push
add
bound
add
xor
out
shr
pop
test
lods
mov
outs
dec
xor
pop
dec
inc
sbb
pop
bound
xor
push
sysret
or
inc
inc
add
movs
sub
mov
push
inc
outs
jne
push
mov
pushf
add
sti
add
add
adc
pusha
mov
test
outs
pusha
inc
or
inc
jne
retf
sbb
and
pop
dec
fadd
dec
gs
je
fistp
inc
(bad)
dec
adc
test
popa
ins
jo
aam
ja
push
(bad)
inc
loope
int
js
(bad)
or
ins
(bad)
js
add
sub
fdiv
clc
adc
pusha
push
sti
jbe
xchg
inc
xchg
or
add
ins
push
inc
sbb
add
mov
outs
arpl
ja
add
inc
in
rol
dec
jo
mov
ss
gs
mov
pop
(bad)
pop
inc
ins
mov
inc
fist
ins
data16
cmp
rcl
out
adc
add
add
dec
sti
cmp
pusha
push
sbb
push
pop
xor
mov
sbb
bound
imul
adc
cs
in
imul
add
inc
lods
pop
sbb
or
mov
add
outs
adc
dec
popaw
jne
fild
xchg
sti
mov
mov
ds
push
fisub
adc
xor
and
jge
add
test
sub
sbb
les
jnp
mov
test
js
fnstsw
adc
jge
cmp
rcr
adc
or
jne
jae
shl
dec
rcr
jae
clc
ja
popa
pop
sub
jo
lock
mov
dec
pop
dec
add
ficomp
mov
addr16
ficom
pusha
lds
jmp
inc
inc
inc
inc
push
jae
mov
(bad)
pop
fld
inc
inc
inc
bound
inc
inc
out
adc
or
sub
add
gs
movs
inc
enter
push
inc
jae
mov
leave
push
cmp
test
pop
ins
or
cmp
pusha
in
dec
call
aam
adc
push
shl
(bad)
inc
das
shl
retf
rol
inc
adc
inc
push
cmps
inc
adc
das
(bad)
inc
sbb
dec
and
in
xchg
ret
in
mov
xchg
mov
dec
js
arpl
pop
loop
ret
push
pusha
mov
xor
or
pop
ror
sub
ins
test
or
and
cs
or
push
push
sti
add
push
dec
push
loope
sub
push
or
je
in
or
and
push
push
inc
and
jmp
mov
pusha
add
stos
mov
push
cmps
pop
jp
mov
fiadd
fadd
jne
xchg
pop
shl
jo
push
pop
pushf
push
and
mov
addr16
fsub
push
mov
cmp
repz
fs
fdivp
fsubrp
inc
inc
push
test
push
jl
mov
fdivp
fidiv
push
push
push
aam
jl
loopne
movs
scas
in
push
add
in
sub
je
out
jns
or
push
aam
pusha
js
xor
cmp
sbb
cmp
push
neg
sbb
pop
push
push
add
out
mov
movs
push
mov
outs
cs
enter
mov
push
add
outs
sub
hlt
jo
(bad)
sbb
push
mov
sti
push
dec
or
ficom
pop
add
add
cmp
inc
in
pandn
divps
maxps
punpcklbw
adc
adc
xor
arpl
jb
imul
add
pcmpgtd
cmp
jl
add
add
add
repnz
xchg
loop
add
ins
add
jecxz
add
and
jl
add
jo
cld
fldenv
(bad)
fimul
jb
jae
pusha
xchg
lock
xchg
mov
pop
inc
mov
jl
mov
dec
nop
imul
pop
cmp
int3
jl
mov
or
mov
jecxz
push
xchg
push
add
xor
adc
div
jne
jne
and
outs
fwait
sbb
and
mov
sar
or
mov
ja
je
and
mov
imul
cmps
sub
add
push
imul
and
imul
add
xor
xor
call
or
outs
aaa
retf
and
bound
std
ins
jbe
xchg
sub
shr
dec
push
ret
shr
dec
loope
sbb
shr
push
int
sub
dec
ins
or
fdiv
shr
and
(bad)
fsubr
ins
xor
pop
inc
iret
ins
leave
ins
xchg
arpl
and
mov
add
pop
or
fild
mov
jb
fsubr
fild
outs
je
add
arpl
add
jns
mov
mov
jne
andps
cmps
ficom
outs
jmp
push
rol
xor
add
xchg
fcomp
jle
push
xchg
ins
adc
or
or
jg
cmp
rcr
adc
aas
stc
adc
push
test
inc
add
xchg
or
dec
leave
loopne
inc
les
dec
or
xor
shl
push
or
cmp
cmp
adc
mov
scas
int
jp
inc
nop
int
out
inc
bound
xchg
inc
cmp
lock
out
ja
or
inc
fist
adc
nop
in
mov
in
fs
stc
sbb
cmp
pop
and
sub
fs
ret
jne
jg
call
add
(bad)
push
xchg
mov
rol
sbb
xchg
dec
or
shr
test
inc
adc
in
mov
adc
adc
dec
mov
retf
dec
sbb
inc
dec
and
mov
sub
mov
inc
add
inc
mov
xor
add
pop
sub
scas
inc
dec
cmp
sub
push
dec
inc
inc
dec
sbb
cmp
les
adc
add
test
shl
jle
test
jne
pop
mov
jns
push
dec
adc
jo
out
pop
or
sbb
iret
out
pop
xor
or
(bad)
int
xchg
pop
call
jmp
outs
jle
repnz
fbstp
cli
mov
fild
xchg
xor
mov
jae
or
js
jno
jmp
(bad)
mov
add
mov
or
adc
sets
mov
lds
and
pop
(bad)
jmp
inc
in
push
jl
push
push
push
mov
out
push
add
(bad)
in
dec
fwait
sub
pop
mov
push
sahf
data16
mov
push
push
inc
push
test
push
mov
es
mov
cmp
pop
js
xchg
movs
call
xchg
movs
(bad)
xchg
rcr
rol
es
xchg
push
hlt
cdq
ds
push
jge
icebp
mov
cwde
outs
push
cmp
cwde
xchg
mov
ficomp
(bad)
push
movs
es
dec
xchg
sbb
mov
and
mov
(bad)
push
adc
jb
jnp
add
push
inc
cmpxchg
and
jo
stc
push
call
dec
jbe
jb
ins
outs
ja
xlat
and
jmp
fisttp
and
retf
fld
out
nop
cmp
or
stos
mov
xlat
(bad)
dec
lock
add
push
add
add
repnz
xchg
mov
ror
add
or
sub
repnz
lock
or
pfacc
iret
mov
out
and
cmovae
je
repnz
add
shl
cmova
cmovs
jns
add
addr16
cmovl
ret
iret
ds
cmovle
push
mov
fbld
(bad)
and
jbe
dec
push
pop
(bad)
das
scas
fwait
mov
push
ins
je
or
loope
pop
and
push
ret
pop
jmp
cmp
retf
jmp
dec
dec
or
lods
or
cmps
push
or
and
push
out
int
cmp
or
les
fcmovu
rcl
inc
popa
push
sub
push
ret
mov
pop
ins
push
sub
imul
and
sti
push
cwde
add
ins
push
rcl
ins
push
ret
stos
adc
push
sbb
jne
push
sbb
sub
mov
push
scas
push
jge
cmp
bound
std
inc
and
bound
test
dec
mov
mov
mov
rol
clc
push
mov
push
adc
inc
mov
aad
cmp
push
or
les
and
adc
aam
xchg
or
inc
test
icebp
cmp
mov
cmp
add
jne
call
stos
cwde
loop
or
add
es
cmp
outs
and
jl
push
mov
pop
add
jae
call
pop
jno
cmp
jno
mov
xchg
fdiv
jo
aam
or
bound
enter
add
xchg
sub
loop
jbe
jb
jae
mov
xchg
pusha
ror
mul
stc
or
add
mov
nop
fsub
(bad)
outs
les
mov
mov
sub
cmps
cmp
or
xchg
imul
jmp
fsubr
shr
sub
daa
inc
mov
mov
loopne
ins
cmp
pop
shl
cmp
fdiv
push
icebp
xchg
cmp
pop
clc
push
call
daa
lahf
clc
movs
sbb
cmps
mov
push
mov
push
aaa
call
es
jno
daa
mov
out
xor
push
je
mov
cmp
mov
jno
es
push
daa
add
out
push
mov
and
pop
inc
mov
es
jo
add
fcomi
jno
add
dec
add
call
jg
pop
ror
add
stc
pop
add
cmp
(bad)
push
push
subps
loope
mov
lar
cli
lea
push
rcl
retf
lahf
pusha
(bad)
add
jl
jecxz
jae
icebp
mov
xor
xlat
jge
shr
inc
retf
mov
mov
rcr
add
pop
push
xchg
test
es
shl
ret
test
push
popa
lock
cmp
pusha
mov
sub
or
(bad)
cmps
adc
cdq
cs
sub
mov
pop
sahf
fist
pop
shr
popa
adc
adc
jo
(bad)
stos
adc
jne
fwait
rcl
ret
adc
mov
or
movs
fwait
sub
add
pusha
mov
jp
test
xchg
inc
adc
fsub
int
jnp
pushf
test
push
pcmpeqd
or
(bad)
or
fistp
push
push
enter
xchg
iret
xadd
rol
ss
jb
pop
cli
cmp
pusha
pop
pop
lods
and
scas
pop
jne
dec
je
stc
pop
cmp
aas
scas
cmp
sahf
dec
add
add
push
daa
jp
pop
pop
pop
test
iret
repz
mov
jl
cmp
mov
repz
mov
inc
outs
and
lahf
aas
push
push
and
or
mov
fsubr
out
cmp
inc
mov
sahf
sbb
das
aas
in
inc
inc
je
aas
mov
enter
jmp
inc
fild
fsubr
inc
ja
add
sbb
cmp
shl
addr16
(bad)
add
lahf
pop
out
push
hlt
syscall
add
push
dec
pop
repnz
icebp
sbb
psubd
jo
sub
push
add
inc
add
das
jg
iret
(bad)
cmovne
inc
add
jg
retf
dec
into
cmovns
popf
jb
enter
(bad)
or
cmc
adc
leave
rcr
inc
(bad)
leave
push
das
jge
sub
into
call
push
cmp
push
or
sub
or
test
and
xor
std
and
in
(bad)
std
push
retf
mov
std
push
push
pop
or
arpl
jmp
lods
inc
sbb
sti
sti
imul
push
retf
push
mov
movs
mov
or
je
ffreep
push
mov
mov
push
aad
adc
push
stc
aad
or
mov
in
aad
inc
jns
inc
aad
aad
push
bound
jae
add
push
test
jno
mov
jno
add
and
aad
les
cs
xor
pop
ins
stc
inc
mov
shl
or
jne
les
cdq
mov
add
add
mov
adc
ins
imul
fucomp
in
mov
push
xor
stos
add
or
mov
pop
push
mov
lock
(bad)
ins
lods
sub
cmp
push
les
mov
scas
push
push
popa
call
popa
lock
ss
sub
inc
das
outs
mov
mov
test
xchg
adc
les
inc
cmp
mov
or
add
(bad)
(bad)
push
scas
je
xchg
fist
add
jb
repnz
out
cmovb
pmaxub
imul
stc
adc
jge
ror
add
paddd
sub
mov
jb
lahf
or
push
pop
(bad)
icebp
sbb
xchg
fcomp
rol
sbb
cmps
dec
pop
daa
cmp
push
bound
es
push
xchg
shl
mov
adc
cwde
in
shl
dec
add
cmps
sub
inc
jge
cmp
(bad)
push
bound
or
jge
inc
mov
leave
mov
in
push
jmp
jns
push
xchg
push
(bad)
fwait
movs
rcl
ins
push
add
pusha
push
imul
imul
or
xor
inc
push
jnp
add
or
xchg
push
popw
add
hlt
push
mov
xchg
mov
xor
mov
push
fsubrp
jnp
mov
es
test
push
outs
add
(bad)
shl
push
in
mov
fcom
(bad)
shl
mov
outs
clc
add
lock
xor
mov
mov
dec
mov
mov
mov
push
sub
mov
test
imul
push
dec
test
push
push
pop
push
adc
xlat
lods
xlat
stos
ror
or
or
imul
loope
movs
out
add
loopne
push
xchg
repnz
lock
pusha
psrlq
retf
lahf
jle
add
mov
add
push
pusha
scas
jmp
mov
xor
xchg
das
jg
or
add
xchg
mov
adc
arpl
mov
lar
cmovae
packuswb
cmovne
add
pop
scas
cld
repnz
add
dec
add
adc
addr16
add
dec
add
mov
adc
dec
stc
repnz
push
cmovg
jb
not
test
loope
pop
movs
and
out
test
loope
push
test
cmp
sbb
dec
cld
aaa
fdivr
nop
mov
retf
ja
or
cmp
ja
bound
push
pop
aas
jecxz
adc
call
or
sub
imul
lds
push
sub
mov
sub
adc
adc
sti
mov
imul
enter
push
mov
imul
adc
pusha
mov
xchg
imul
imul
(bad)
sbb
dec
push
rol
imul
pop
pop
ss
push
cmp
xchg
adc
push
and
add
(bad)
je
sub
adc
and
adc
ins
adc
xchg
push
sbb
push
xchg
adc
mov
jae
add
jp
adc
or
jmp
adc
xchg
dec
dec
dec
sub
xchg
jno
ret
imul
and
mov
imul
ins
inc
stos
adc
imul
int
lods
xor
mov
les
mov
mov
lods
sub
bound
dec
pop
sbb
imul
inc
stos
and
add
fbstp
call
fidiv
add
loope
mov
scas
sbb
add
xor
pop
push
push
mov
or
iret
repz
xor
push
out
inc
mov
jg
pop
jo
popf
or
cmps
jl
adc
das
dec
cmp
sbb
dec
cmp
inc
mov
cs
dec
pop
or
push
fcomp
clc
push
adc
mov
mov
push
jg
mov
out
and
jbe
lock
add
cs
sub
sbb
inc
addr16
sbb
arpl
mov
stc
repnz
xchg
pop
add
lods
call
or
ds
lahf
loopne
mov
or
lahf
pop
stc
in
xchg
prefetch
std
inc
add
shl
inc
pusha
cmovs
inc
pop
pop
out
or
push
add
mov
add
dec
loop
jp
and
jno
mov
ja
test
adc
push
inc
or
inc
test
push
retf
pop
dec
mov
adc
inc
sbb
jnp
adc
adc
arpl
jmp
sub
adc
sti
xor
push
mov
push
sub
ret
bts
xchg
mov
jmp
cwde
loope
sbb
daa
sbb
add
xlat
dec
js
xchg
xlat
sbb
bound
push
xor
adc
push
mov
gs
push
mov
bound
inc
gs
test
sub
mov
push
jno
sub
or
sbb
add
cmp
adc
push
mov
add
sbb
jecxz
fs
rcl
adc
les
mov
ror
bound
and
sbb
dec
jae
aam
add
xor
mov
dec
ins
mov
test
out
cmc
ins
js
adc
push
sbb
imul
lahf
mov
sub
in
dec
jae
xor
movs
add
test
sbb
pop
push
outs
ja
test
(bad)
imul
or
mov
je
mov
sub
pop
outs
mov
leave
xor
hlt
xchg
lahf
xor
ret
test
outs
cmp
shl
mov
or
and
jo
jns
inc
in
mov
mov
and
cs
cmp
or
ret
outs
push
inc
jmp
(bad)
clc
add
add
add
bswap
lahf
loopne
pop
add
bound
add
repnz
add
pop
add
pushf
and
nop
jg
mov
jp
pop
stos
pop
mov
ud2
add
test
and
or
ror
inc
add
add
retf
dec
add
dec
add
add
cmovnp
and
in
xchg
aas
dec
add
add
jo
jne
ja
adc
shl
loope
sbb
and
and
pop
sub
jne
adc
cwde
in
adc
cs
lds
ja
mov
pop
into
or
push
add
add
or
push
dec
ja
mov
retf
ja
stos
rcl
stos
repz
sub
ja
ss
ret
cs
loopne
push
loop
mov
xor
add
ja
xor
popa
mov
test
jne
sub
in
sbb
ins
mov
les
pop
lock
ja
add
mov
ja
ja
or
sbb
ja
mov
xchg
or
ja
ret
sub
push
loopne
jno
or
mov
mov
bound
cs
ja
mov
call
mov
ret
ja
ja
mov
and
ret
or
mov
imul
sar
cmp
add
mov
cmp
int
add
pop
add
and
or
push
sub
iret
pop
mov
sahf
neg
repz
cwde
cld
push
or
sbb
js
stos
fdivr
es
push
jg
push
pop
mov
scas
mov
jg
shr
push
push
mov
inc
idiv
mov
sbb
ret
lock
cld
mov
sbb
enter
push
pop
push
pushaw
adc
mov
jg
cs
jle
jnp
loopne
jg
test
add
mov
int3
outs
movhps
xchg
jle
jae
gs
add
add
add
push
push
push
sysret
pop
seta
(bad)
retf
add
or
jb
add
sub
add
or
adc
mov
inc
cmovne
cs
mov
pop
inc
add
jg
pop
xlat
sub
jle
dec
add
dec
add
dec
add
repnz
ret
sahf
pusha
setg
js
and
lahf
cdq
sub
dec
jmp
rol
dec
adc
sub
iret
adc
mov
js
pop
shr
repz
pop
push
sub
push
mov
xor
cli
ja
pop
or
push
mov
push
sub
aas
rep
add
addr16
xlat
lds
mov
and
or
push
repz
rol
add
add
sbb
mov
sbb
or
popa
inc
mov
inc
bound
outs
xor
sub
mov
push
test
or
push
gs
add
add
adc
or
mov
inc
and
push
mul
add
add
and
and
push
gs
or
fadd
inc
cmp
sub
sub
gs
or
xchg
gs
adc
movs
inc
fsubr
les
gs
gs
inc
jmp
pop
xor
sbb
(bad)
addr16
fmul
sub
scas
aaa
(bad)
push
hlt
xor
rdtsc
das
in
push
inc
mov
sbb
fild
mov
fdivp
fidivr
clc
push
or
ins
push
inc
les
mov
pop
adc
pop
sub
dec
adc
cmc
adc
call
or
fs
ds
cmp
sar
push
push
or
out
push
jo
sub
addr16
mov
xor
jne
add
and
imul
add
dec
mov
dec
fs
add
scas
call
add
push
repnz
pop
adc
(bad)
push
paddq
wbinvd
int3
(bad)
add
or
or
dec
les
prefetch
imul
sbb
cmovne
inc
add
cld
sbb
dec
jl
inc
add
dec
addr16
add
ss
cmovns
repnz
add
ret
cmp
add
sysret
mov
sub
loopne
push
push
es
mov
dec
cmp
pop
push
mov
lds
fwait
sub
and
outs
ret
pop
test
pusha
out
push
adc
pop
sub
outs
adc
fcom
jg
xor
retf
scas
mov
inc
sbb
lds
test
outs
outs
push
ss
xlat
ss
inc
or
pop
mov
imul
ret
outs
push
adc
mov
sub
outs
les
test
imul
outs
rcl
mov
outs
outs
outs
add
pusha
cmp
or
inc
and
sub
or
and
sbb
and
test
pusha
stos
outs
pop
mov
xchg
pop
adc
jno
sub
or
outs
sub
jae
or
outs
add
and
and
xor
adc
mov
sahf
sub
pusha
test
or
and
pusha
mov
clc
inc
sub
pop
iret
inc
and
mov
fsubp
scas
add
(bad)
jp
and
(bad)
sahf
addr16
add
mov
js
jns
out
cmp
lods
mov
inc
(bad)
xlat
enter
ja
outs
jl
outs
inc
fcom
outs
xor
mov
out
and
outs
xor
outs
adc
(bad)
repz
out
cs
jo
mov
xchg
inc
mov
in
push
and
hlt
into
inc
adc
sbb
test
mov
and
add
ret
jns
(bad)
out
adc
retf
inc
pop
icebp
bswap
lahf
mov
cmp
(bad)
add
xchg
mov
add
syscall
add
stc
xor
fimul
pop
add
repnz
(bad)
test
or
scas
or
fld
adc
add
prefetch
adc
call
repnz
mov
inc
inc
xor
inc
add
dec
add
dec
add
aas
dec
add
add
retf
xchg
lahf
dec
add
dec
mov
xchg
pop
dec
mov
cmp
call
and
pop
jns
aam
or
or
jo
mov
test
push
adc
(bad)
outs
fadd
jae
sbb
mov
xor
lds
mov
push
aad
rcr
mov
or
mov
pop
sti
imul
pusha
mov
and
add
add
adc
sbb
and
ficom
xchg
push
jo
add
jecxz
rcl
dec
ret
add
mov
add
cmp
or
js
adc
xor
mov
push
loope
pop
adc
cmp
push
dec
jo
retf
and
add
ror
bound
outs
jno
push
mov
les
mov
inc
and
jno
pop
adc
je
jno
mov
xchg
inc
jo
and
and
movs
bound
jo
mov
ss
fadd
jae
xor
xchg
jmp
inc
jmp
mov
inc
pop
sub
cmp
add
xor
pop
ins
pop
mov
inc
adc
jne
jae
mov
jae
jae
popa
test
sbb
add
adc
adc
add
mov
dec
inc
mov
mov
ins
cmp
push
add
push
repnz
and
mov
cmp
mov
int
push
cwde
repz
repz
sub
jne
fsub
inc
push
aas
fs
lods
pusha
les
ds
mov
ret
ja
pop
push
into
sbb
jae
mov
push
cs
retf
iret
repz
adc
inc
int3
jo
push
les
aas
sbb
iret
sbb
mov
add
add
or
and
add
adc
sbb
and
jl
out
into
dec
orps
addr16
cmovno
ficom
inc
aas
syscall
add
retf
add
fcomp
wbinvd
enter
xor
jmp
test
prefetch
pop
leave
(bad)
jge
inc
mov
cmp
xchg
aas
cmovbe
scas
inc
loop
dec
add
dec
lahf
add
dec
jmp
add
dec
and
scas
imul
adc
cmp
add
lods
add
inc
mov
add
icebp
in
test
sub
mov
sbb
and
dec
test
jae
or
pusha
scas
jae
or
and
pop
add
sub
int3
shl
jp
ins
xor
mov
sbb
mov
scas
ret
add
mov
push
jecxz
add
scas
push
ins
ror
daa
scas
push
adc
sbb
adc
mov
pusha
les
scas
dec
scas
sbb
loop
cmp
mov
pop
in
sub
add
pop
xor
add
sub
pop
jno
stos
adc
sbb
pop
shr
outs
pop
mov
jae
add
and
pusha
pop
jno
adc
mov
pop
xor
xchg
pop
jno
bound
inc
sub
pop
jno
shr
into
adc
pusha
les
mov
inc
and
jae
pusha
test
ins
mov
jmp
or
ins
inc
mov
jns
sub
pusha
imul
adc
mov
jae
adc
push
out
xor
sahf
out
dec
jae
cmp
stos
add
push
or
inc
in
dec
and
add
adc
aam
aad
(bad)
(bad)
out
idiv
loopne
push
add
sbb
ins
stos
adc
sahf
push
fsub
cwde
push
out
adc
out
push
dec
out
inc
mov
or
out
xor
es
out
xchg
and
out
rcr
pop
iret
jnp
pop
rcr
push
cmp
movs
mov
mov
out
rcr
ins
jo
out
mov
cmps
ror
daa
cmc
adc
inc
lahf
loop
out
call
punpckhwd
retf
add
nop
cli
(bad)
jl
repnz
mov
dec
push
dec
sysret
add
aam
wbinvd
add
or
and
retf
pop
xchg
xor
prefetch
jg
mov
jecxz
mov
inc
add
or
stc
inc
add
dec
jg
iret
mov
cmovnp
cmovl
mov
dec
add
jb
add
or
or
aad
inc
and
mov
(bad)
cmp
sub
pop
pop
dec
js
pop
push
cmp
rol
add
or
adc
and
or
fdiv
adc
popa
pandn
add
jno
sub
adc
stos
fisttp
pop
pop
ins
push
imul
loope
fist
adc
(bad)
fist
or
xor
pusha
adc
pop
fbstp
shr
ins
rol
test
push
xor
dec
test
mov
adc
fistp
fist
mov
mov
imul
inc
test
and
movs
les
test
push
fbstp
adc
mov
fild
adc
mov
xor
xchg
fdiv
bound
inc
sbb
fbstp
shr
(bad)
adc
and
add
inc
and
jno
fadd
jae
xor
xchg
fbstp
inc
bound
inc
fbstp
icebp
shr
sahf
fbld
pusha
test
ins
xor
(bad)
fcomip
dec
or
pop
cmp
das
movs
fisub
inc
or
push
iret
sub
cmps
mov
and
rcl
cmps
push
fild
mov
adc
rcl
shr
jns
or
push
pop
jo
push
cwde
cmp
repz
aam
adc
jno
test
xchg
xchg
mov
xchg
sbb
outs
adc
outs
add
ja
push
xchg
outs
les
loopne
(bad)
out
sahf
out
rol
inc
xchg
mov
in
mov
lea
adc
mov
test
outs
stc
outs
leave
pop
sti
push
icebp
inc
outs
out
(bad)
inc
push
punpckhbw
cdq
and
sbb
sub
sub
int3
sub
push
movaps
xor
movaps
shl
iret
sub
sub
pop
xor
int3
sub
sub
lock
push
sub
add
inc
pop
stc
in
sub
inc
add
inc
add
call
add
das
jg
scas
lock
cmovnp
cmovl
jbe
add
icebp
or
lods
jb
movq
and
outs
cmc
pop
dec
inc
and
adc
sub
rcl
push
cmp
adc
add
cmp
imul
add
jae
test
outs
movq
aad
nop
xor
pop
stos
push
adc
outs
fldcw
outs
push
sub
outs
sti
mov
outs
push
pop
adc
(bad)
outs
push
add
loope
fld
sbb
push
pop
outs
xor
push
lds
test
xor
dec
test
mov
adc
outs
cmp
and
adc
imul
inc
test
and
xor
push
outs
jno
mov
outs
inc
and
pop
outs
outs
ins
inc
mov
and
jae
sbb
mov
and
test
pusha
adc
cli
outs
push
test
mov
and
pusha
adc
outs
(bad)
mov
push
test
adc
adc
adc
jae
mov
mov
sahf
outs
ins
pop
and
push
dec
test
outs
push
mov
push
repnz
and
movs
add
outs
mov
lods
scas
(bad)
imul
pop
push
nop
add
and
ins
push
js
test
je
cmps
in
nop
jecxz
out
inc
out
push
sbb
pop
fmul
jno
jns
lock
pop
push
outs
push
adc
scas
sbb
(bad)
loopne
add
xor
adc
out
js
out
outs
les
outs
and
push
fucomip
jns
adc
les
ror
jl
dec
push
adc
and
pop
inc
outs
adc
outs
pop
ror
(bad)
fadd
outs
(bad)
pop
inc
adc
ds
out
adc
cvtpi2ps
rcr
jg
retf
pop
pop
(bad)
add
add
add
out
add
pusha
(bad)
in
dec
sar
wbinvd
add
data16
push
cmp
or
xchg
(bad)
popa
cmovae
arpl
inc
mov
call
loopne
cmova
pmulhw
lahf
loop
cmovns
mov
sbb
sub
jb
fwait
or
push
mov
or
into
sub
jle
pop
outs
aam
pop
xor
adc
xor
popa
xor
mov
cmc
dec
mov
and
ins
adc
add
dec
adc
sub
and
sub
ins
push
sub
ins
push
sub
sbb
mov
rol
test
inc
ins
push
sub
ins
push
add
or
or
ins
sbb
add
loopne
add
push
xor
inc
sbb
ins
aaa
add
dec
cmp
ins
xlat
sub
ins
jecxz
nop
and
test
push
adc
adc
mov
ins
outs
ins
mov
and
and
cmp
and
mov
add
push
ins
clc
ins
inc
and
or
sub
mov
sbb
mov
and
test
adc
xor
mov
push
jae
sub
loop
pushf
ins
ins
push
dec
test
ins
loop
rcl
ins
adc
test
ins
dec
test
ins
imul
sbb
aad
push
adc
and
fs
jbe
pushw
lock
push
add
addr16
inc
mov
push
inc
addr16
es
add
data16
pushw
fsubrp
mov
cmp
in
lock
cld
unpckhps
fidivr
rol
int3
push
push
push
addr16
and
pop
in
cs
adc
push
aam
xlat
icebp
loopne
and
cmp
fnstcw
js
addr16
mov
out
sahf
out
or
fs
and
mov
les
inc
xlat
addr16
out
mov
cmovbe
fisub
outs
push
sub
stos
inc
mov
cmp
add
mov
inc
pop
loope
inc
cwde
inc
outs
sbb
imul
mov
push
inc
inc
jns
gs
mov
pop
push
xchg
outs
or
dec
pop
addr16
(bad)
jae
js
sub
inc
dec
data16
arpl
mov
jne
cmps
xor
(bad)
pop
ror
push
push
jbe
inc
ins
outs
ja
jno
je
sbb
push
dec
add
inc
add
push
mov
daa
push
cmovl
push
push
packssdw
fs
add
jns
ins
fs
gs
jge
inc
test
jb
jns
add
push
add
in
push
and
or
cmps
into
xlat
push
dec
adc
ret
add
lock
retf
add
mov
or
dec
loope
push
inc
or
xor
adc
test
cli
shr
imul
add
je
push
fadd
bound
add
adc
aas
std
sti
jno
jne
(bad)
inc
jns
popa
ins
or
nop
mov
sub
shr
lock
sub
fstp
aas
add
fsub
mov
fiadd
cwde
push
out
aas
and
xor
pop
adc
add
xchg
retf
(bad)
push
(bad)
cmp
or
loopne
adc
dec
inc
adc
sbb
jp
push
adc
and
add
or
or
test
nop
outs
adc
pop
and
enter
pop
and
enter
outs
xor
push
and
stos
mov
or
les
call
retf
mov
pop
lods
pop
adc
cmp
adc
sub
nop
icebp
or
add
lea
inc
cmp
jge
inc
outs
int3
ins
push
dec
add
push
or
shr
add
je
mul
not
push
add
lock
cmp
add
inc
setno
js
dec
jge
inc
inc
dec
push
pop
or
sbb
dec
inc
dec
popa
jae
outs
outs
imul
daa
cmp
pop
cmps
cmps
or
mov
jle
jle
ins
or
dec
outs
sub
arpl
ja
cmp
add
(bad)
loopne
pusha
int
xchg
outs
push
pop
fs
popa
mov
adc
push
pop
push
push
inc
add
cmp
xor
push
push
inc
orps
mov
mov
into
sbb
push
daa
dec
jg
loope
out
enter
retf
idiv
iret
jns
add
or
lds
lds
push
inc
adc
add
adc
mov
xor
bound
adc
adc
lea
popa
pop
ins
xor
shl
push
adc
ret
mov
push
outs
dec
fidiv
aaa
call
imul
scas
pop
sbb
jmp
outs
xor
(bad)
inc
rcr
or
out
add
xlat
mov
add
mov
or
js
push
(bad)
daa
or
div
adc
jmp
pushf
adc
push
out
fwait
cmp
mov
jno
outs
test
adc
dec
popf
and
mov
inc
push
adc
pop
inc
jne
out
adc
inc
push
jl
jmp
enter
fmul
mov
das
shr
push
pcmpeqd
add
adc
(bad)
sbb
repz
add
push
inc
push
mov
jbe
xor
and
(bad)
xchg
or
ror
scas
jb
movs
push
xor
push
test
in
adc
mov
imul
inc
adc
aas
push
or
dec
cmps
pop
mov
or
sti
popf
push
je
sub
xor
cmp
jbe
cld
nop
add
add
or
or
aas
inc
enter
lock
shl
ja
or
repnz
xchg
push
pop
mov
xor
hlt
mov
bound
lahf
mov
mov
nop
or
rcl
push
enter
add
test
add
or
mov
cmp
lock
mov
jb
cmp
fs
jns
mov
cmp
into
dec
popa
or
cmp
push
or
and
add
push
jo
test
push
(bad)
fcmovu
pop
das
xlat
or
and
shl
or
add
cvtps2pd
jl
jb
mov
cmp
add
pop
add
mov
call
(bad)
cmp
push
pusha
fs
and
enter
(bad)
mov
mov
popa
mov
mov
fs
sar
pop
sbb
in
pop
or
dec
add
add
dec
inc
pusha
adc
cs
inc
addr16
neg
rcl
add
sub
shl
add
je
sub
mov
jmp
adc
pop
push
sub
jp
adc
aaa
outs
mov
dec
lds
loopne
add
mov
mov
test
mov
fistp
push
les
loop
pusha
jns
xor
inc
adc
fmul
nop
(bad)
mov
sub
mov
push
(bad)
pop
or
xchg
xor
loopne
xor
xchg
xor
into
xor
sub
sub
pop
adc
mov
sub
rol
mov
jo
xchg
sbb
add
jl
fld
and
push
imul
int3
jo
rsm
lahf
loop
aam
adc
pop
xchg
aas
push
in
or
fs
add
mov
xadd
movlps
stc
in
mov
add
jnp
dec
add
cmovg
mov
push
(bad)
sbb
rcr
js
mov
loop
inc
and
fstp
jmp
inc
jne
shr
arpl
cmps
aam
mov
push
out
pusha
push
rcr
push
lock
loopne
ret
cmp
mov
ins
add
jne
xchg
adc
fld
jae
xor
add
sub
pop
mov
lock
cdq
xchg
lods
add
dec
gs
aaa
push
push
push
cmp
xor
into
inc
lock
and
mov
sbb
ss
push
xchg
rcl
adc
dec
mov
jecxz
movq
outs
xor
outs
sub
(bad)
jp
inc
pop
jns
sbb
inc
or
pop
icebp
fadd
push
outs
sub
shr
ins
pop
test
sbb
outs
imul
stos
adc
cmc
inc
bound
add
stos
aas
and
add
mov
jp
das
mov
dec
fld
push
dec
lea
dec
mov
inc
jne
pop
inc
fisttp
dec
add
mov
add
ror
fcom
inc
dec
mov
rol
fistp
loop
pop
mov
and
je
adc
and
fiadd
push
push
pop
test
outs
test
pop
cmp
adc
pcmpgtd
imul
or
pop
lods
add
xlat
pusha
dec
push
xchg
xchg
jns
pop
xchg
out
push
sub
inc
ja
int
lods
add
jns
jns
mov
jns
mov
cs
or
cmp
jg
and
add
sub
cmp
fsubr
in
bound
pop
aad
jne
cmp
dec
inc
add
mov
push
xchg
add
push
cmc
adc
inc
lock
xlat
push
inc
daa
inc
add
adc
xchg
xor
dec
push
inc
adc
imul
test
sub
lods
jmp
scas
shl
sub
out
ss
lock
and
xor
ja
and
mov
rcr
ins
adc
push
and
aas
adc
test
pop
in
inc
dec
popa
inc
dec
push
mov
out
jl
loopne
js
test
xor
sub
lahf
loopne
ror
sub
ins
add
std
xor
and
add
push
sub
daa
cmp
add
jmp
add
add
bound
push
bound
leave
jmp
inc
jecxz
test
cwde
push
push
pop
mov
mov
cmps
xchg
dec
ins
add
or
xchg
sub
mov
lock
icebp
inc
lgdtd
sbb
pop
icebp
xchg
xchg
and
loopne
push
mov
sub
lds
rol
or
gs
and
shl
push
rol
push
stc
dec
add
push
inc
dec
stos
push
bound
push
push
inc
add
and
jmp
push
add
jg
mov
add
jmp
inc
out
lea
das
jo
inc
inc
out
or
aaa
adc
out
push
add
and
jle
xor
iret
push
fmul
xor
jecxz
pop
arpl
add
retf
(bad)
push
adc
jg
sub
xor
xor
(bad)
js
sbb
popf
jge
lock
add
add
and
dec
pop
push
stc
mov
sub
jmp
dec
dec
adc
push
sbb
add
sbb
rcr
popa
and
mov
sbb
test
xlat
pop
sbb
mov
lock
adc
push
daa
aam
das
push
sbb
in
sub
inc
outs
xor
mov
mov
dec
mov
popa
hlt
jle
hlt
dec
outs
inc
jb
cmp
test
fdivr
xor
push
pop
and
(bad)
daa
ret
fisttp
inc
and
popa
addr16
xlat
addr16
ss
sub
sub
cwde
popf
and
adc
adc
jne
mov
add
inc
mov
push
or
mov
cmp
add
adc
adc
xor
cmp
or
and
mov
dec
fmul
add
in
in
dec
cs
adc
cs
push
imul
lds
add
xchg
cmc
pop
lea
rcl
adc
cmp
sbb
aas
in
out
movs
and
jecxz
dec
or
sub
aam
mov
pop
xor
sbb
enter
or
sti
inc
pusha
jmp
fimul
add
cmp
mov
movs
imul
mov
or
dec
aam
in
inc
fist
scas
ins
mov
xlat
mov
pop
or
ds
ret
dec
dec
jae
outs
bound
push
ret
inc
pop
outs
or
daa
push
ret
add
addr16
or
popa
push
inc
jne
pop
add
sub
mov
inc
mov
push
xchg
jecxz
inc
mov
mov
and
fwait
stos
test
add
pavgb
jl
int3
ret
out
jb
pop
jbe
cmp
iret
add
dec
jnp
mov
pop
lods
fidiv
pop
ins
pop
ins
mov
mov
cli
and
and
(bad)
clc
sub
push
sbb
add
bts
sbb
inc
mov
sbb
mov
dec
lahf
int
stos
add
or
or
ja
add
jno
xchg
jge
pusha
and
adc
fwait
das
stos
push
addr16
cmp
xor
pop
mov
add
push
js
or
adc
add
xchg
punpckhbw
mov
verr
jp
int3
syscall
enter
pushf
sysret
xchg
mov
paddusb
or
(bad)
or
jb
add
sbb
push
in
das
push
add
sldt
sbb
add
push
sub
cmp
mov
fld
imul
das
xchg
dec
popa
or
push
fs
or
add
fisttp
mov
jnp
fadd
les
imul
mov
je
iret
push
in
fiadd
add
mov
dec
je
loopne
lock
mov
xor
shr
xchg
or
fwait
iret
test
pushf
in
nop
xor
inc
test
push
pusha
loope
mov
xchg
stos
rol
and
jnp
data16
mov
fs
and
add
mov
mov
jb
fsub
inc
jecxz
(bad)
or
loopne
cmp
es
ror
out
stos
pusha
arpl
mov
add
in
ss
mov
add
jmp
lea
clc
and
into
push
mov
mov
adc
mov
ins
stos
das
in
fld
sbb
or
aam
push
xchg
call
enter
lods
and
add
pop
xor
jnp
add
gs
stos
jge
test
pop
cdq
icebp
add
cmp
lahf
out
mov
cmp
je
cmp
inc
add
enter
test
cwde
jle
scas
jge
add
mov
in
das
sti
cpuid
test
push
repnz
jb
iret
test
cs
push
mov
inc
jo
jmp
jle
outs
and
inc
jae
jb
popa
and
jle
mov
or
dec
popa
xchg
dec
sbb
and
adc
daa
cmc
popa
adc
jno
xor
ins
ret
daa
nop
sbb
jnp
sti
out
mov
int3
push
pop
fwait
push
jle
fstp
push
std
das
or
ds
ja
sbb
sbb
clc
mov
sbb
push
call
push
loop
or
add
push
outs
inc
dec
popa
movs
pop
cmp
mov
sbb
cmp
aaa
nop
cmp
sbb
and
addr16
in
push
pop
ret
and
adc
pop
jbe
fwait
mov
pusha
sti
aam
cmp
nop
daa
in
lds
in
popf
test
es
pushf
das
xchg
push
mov
cmps
les
jmp
lods
xchg
jp
into
(bad)
test
scas
xor
xchg
jecxz
xor
jle
aaa
or
inc
push
bound
and
mov
es
add
and
cs
out
push
idiv
inc
push
dec
dec
mov
outs
mov
fcomp
addr16
and
xchg
jb
mov
sub
call
adc
push
xchg
arpl
adc
mov
bound
dec
adc
mov
gs
inc
jb
das
out
enter
mov
lahf
jne
cmp
adc
sbb
push
push
add
pop
cmp
or
xor
arpl
data16
nop
imul
call
dec
xchg
sub
aad
scas
imul
sahf
pop
rcr
add
repz
sub
cwde
push
jl
mov
or
in
and
int3
xor
sub
repz
mov
pop
out
mov
out
cdq
mov
mov
cmp
out
push
inc
sub
cmp
cmp
shr
jno
stc
arpl
dec
(bad)
xchg
pshufw
repnz
daa
shr
add
stos
stos
pop
sbb
(bad)
int3
data16
xor
lock
push
mov
mov
ins
xchg
push
add
mov
ret
sbb
dec
adc
inc
pop
mov
add
mov
jo
pop
push
lods
push
sub
push
and
pop
add
(bad)
mov
jg
(bad)
mov
mov
push
mov
mov
push
adc
add
ret
jg
js
popa
add
inc
xlat
push
mov
xor
or
jo
je
test
mov
hlt
repz
ret
inc
dec
imul
mov
lods
fisttp
ins
sub
sub
mov
mov
and
add
daa
lds
fisttp
fchs
and
out
add
jo
or
cmp
cmp
popa
push
sbb
test
push
imul
xor
xor
and
adc
mov
shl
pushf
cmc
(bad)
inc
xchg
pusha
test
in
pop
and
repz
call
in
pop
cwde
movs
sub
push
xchg
sbb
mov
scas
sub
and
adc
movnti
into
movs
rcpps
xor
or
sbb
je
push
or
fwait
loope
inc
push
add
movs
fadd
ret
xor
es
jb
xor
aad
add
inc
popa
or
loopne
cwde
(bad)
neg
or
(bad)
mov
jne
mov
and
fmul
pop
xchg
add
mov
outs
pop
push
mov
adc
imul
movs
adc
cmp
cmps
xchg
dec
adc
add
mov
gs
fsub
push
jno
out
pop
add
sar
lea
sub
js
movs
aad
or
inc
xchg
shr
cmps
fwait
cs
add
jecxz
inc
jno
add
in
and
mov
push
imul
cmp
mov
movs
addr16
scas
mov
jne
rcr
(bad)
cmp
fisttp
fcom
mov
ja
in
lock
or
cdq
and
into
push
sbb
call
fs
push
and
add
ins
adc
mov
adc
cs
sbb
out
daa
jbe
in
lock
cld
pushf
mov
jnp
int3
push
push
push
mov
and
neg
jnp
push
jo
and
in
rcr
inc
and
imul
fld
rep
test
dec
xchg
fs
mov
lock
(bad)
sar
mov
clc
fs
pop
xlat
(bad)
inc
jl
iret
jnp
push
test
es
push
inc
mov
jbe
jns
and
fdivr
out
mov
loopne
mov
aaa
mov
push
cmp
adc
adc
push
stos
mov
cmp
dec
js
sub
dec
mov
(bad)
xor
xchg
add
in
jnp
jnp
(bad)
cmp
call
jo
jnp
jnp
jl
mov
push
sbb
push
aam
movs
scas
in
push
add
in
div
fs
mov
cs
js
repz
push
xor
push
sbb
cmp
push
push
mov
data16
inc
inc
in
jae
jnp
mov
cmp
movs
push
mov
mov
inc
lods
push
lods
scas
jmp
scas
ror
dec
add
add
sbb
test
in
add
add
add
push
rcl
xchg
xchg
inc
shl
inc
cmc
jno
pop
push
adc
and
je
jne
dec
dec
pop
pop
rol
dec
cmp
pop
fdivr
add
sub
sti
jo
leave
cmp
or
mov
(bad)
fiadd
add
ins
or
jae
fmul
jae
jecxz
mul
sub
imul
dec
mov
imul
clc
cmp
ins
or
xlat
xchg
lods
rcr
pop
ins
xchg
mov
std
in
push
sub
addr16
sub
pop
jo
xsave
mov
mov
push
and
jmp
scas
jmp
sub
daa
fsubr
add
mov
inc
push
pop
aaa
sub
daa
cmp
xchg
stos
dec
or
sbb
inc
ror
out
daa
or
ja
sbb
and
test
icebp
(bad)
cs
jne
add
inc
daa
lds
daa
shr
dec
es
add
in
retf
sbb
inc
pop
inc
aaa
loopne
loopne
inc
daa
cmp
inc
xchg
loopne
jb
ins
daa
jecxz
sub
sub
fldenv
pop
push
mov
jb
sbb
ins
daa
and
aad
daa
std
pop
pop
pop
push
in
mov
mov
nop
mov
int3
scas
mov
jmp
and
cmps
fsubp
mov
out
out
push
mov
hlt
jns
add
mov
push
repz
push
push
pop
loopne
jae
mov
push
sub
xor
inc
xchg
sahf
out
ficom
push
mov
mov
shl
jns
enter
push
in
repz
sub
xor
sbb
jns
idiv
fs
ins
cwde
inc
fidivr
out
cmp
add
push
push
pop
out
mov
and
inc
push
in
outs
push
jl
sahf
cmp
add
adc
jns
out
lods
les
aam
movs
nop
lock
mov
dec
rol
hlt
push
lock
hlt
and
add
pop
jo
mov
popa
mov
out
outs
gs
or
push
push
(bad)
inc
add
or
shr
adc
jmp
(bad)
cmovae
jb
add
sbb
mov
fisttp
mov
cmp
push
sub
dec
gs
retf
(bad)
jecxz
sub
add
pop
frstor
cmp
adc
adc
jae
dec
sbb
lods
pop
sbb
es
sub
or
hlt
fidiv
push
xchg
cli
cmp
adc
test
mov
adc
iret
sbb
or
ds
pushf
scas
ins
mov
mov
mov
sbb
into
outs
or
lea
dec
mov
xchg
or
ins
test
sbb
ror
xlat
adc
mov
push
mov
ins
das
ret
add
add
and
cmps
sbb
sti
in
je
push
ror
sbb
js
syscall
pop
clts
add
mov
loopne
sub
ds
sysexit
sbb
mov
inc
adc
je
rol
or
push
jno
rol
loope
int3
add
sti
lds
add
test
push
xor
lea
inc
cdq
ins
cdq
add
push
push
xchg
sub
ret
add
lods
xchg
push
sub
push
jae
pop
inc
mov
enter
loopne
adc
inc
ret
and
lods
xchg
jbe
daa
jae
jb
loopne
push
mov
xor
popa
inc
lods
inc
lock
les
inc
sbb
add
movs
adc
lods
jb
loopne
jnp
adc
push
and
jno
repnz
xor
pop
lods
lds
pop
xchg
out
or
fild
add
xchg
pop
in
aam
or
test
outs
dec
cwde
mov
or
push
cmp
pop
add
int
or
add
fisttp
mov
push
sbb
mov
inc
adc
mov
lock
(bad)
or
adc
out
mov
das
outs
pop
jnp
adc
pavgw
lock
sbb
pop
je
les
xchg
lods
push
sub
scas
sub
out
mov
jbe
(bad)
out
push
fdivr
fs
out
push
(bad)
ret
ins
push
out
lea
adc
sbb
push
push
mov
mov
js
or
lock
adc
cli
pusha
or
dec
jae
outs
sub
cmp
cmp
push
sbb
xor
arpl
ja
xor
jl
xchg
les
fst
int3
stc
push
xchg
mov
pop
pusha
dec
(bad)
(bad)
pcmpeqb
shl
sbb
xchg
xchg
mov
mov
add
xor
jo
sti
mov
outs
add
dec
cmps
xchg
idiv
addps
jbe
js
inc
fisttp
dec
dec
pop
cmp
push
mov
loope
cdq
enter
popa
mov
jno
lds
ins
mov
jno
add
or
adc
leave
adc
mov
fs
jns
push
imul
frstor
and
add
adc
xchg
dec
sbb
jo
dec
pusha
inc
sbb
sbb
dec
xchg
mov
add
cwde
mov
cdq
adc
jbe
add
cli
add
mov
shl
retf
or
stos
sub
outs
mov
lods
sbb
pusha
adc
inc
add
push
outs
cwde
xchg
cwde
dec
bound
add
jecxz
add
pop
out
jmp
sub
mov
arpl
jbe
nop
ret
inc
xchg
jns
or
pop
add
adc
pop
test
push
add
int
sub
imul
dec
dec
pop
and
or
imul
ret
pop
inc
test
or
fs
in
mov
ficom
mov
test
push
enter
xor
sub
rcr
dec
cdq
cmps
ins
adc
add
cmps
mov
or
mul
mov
xor
inc
xor
inc
inc
cmps
xchg
lods
adc
ja
lock
cmp
lock
or
js
bound
out
js
and
ins
bound
or
inc
(bad)
imul
adc
jbe
push
jbe
push
ss
in
mov
adc
jae
mov
xchg
aas
pcmpeqb
iret
jmp
cmps
imul
push
or
adc
inc
mov
fs
inc
adc
add
pop
sub
sub
inc
adc
cmp
pop
add
mov
adc
jge
fnstsw
mov
sub
imul
rol
rol
dec
xchg
ror
push
mov
dec
mov
inc
mov
adc
loopne
cmp
aas
push
add
cmp
push
aad
or
or
sub
mov
and
aam
sbb
aaa
movs
aad
imul
sub
inc
(bad)
int
test
inc
test
pop
add
ret
mov
and
int3
mov
add
jbe
add
inc
fldenv
rcr
cmp
(bad)
push
arpl
and
int3
inc
outs
je
and
cwde
sub
xchg
imul
push
out
and
mov
add
push
adc
(bad)
xor
cmp
loopne
inc
not
add
and
inc
movs
mov
aam
adc
test
and
pop
inc
dec
inc
fadd
push
shl
sbb
inc
ja
dec
adc
xor
movs
call
mov
pushf
lds
mov
push
add
seto
nop
dec
in
test
mov
call
push
push
sbb
loopne
jp
popa
jo
bound
sub
outs
cli
or
dec
popa
sbb
popa
imul
loopne
pop
add
pushf
and
jp
fist
cmp
push
sbb
and
or
or
pop
ds
mov
out
pop
mov
pop
push
xor
adc
cmp
(bad)
fsubr
mov
lock
push
cmp
lods
das
fisttp
mov
mov
movs
sbb
add
lock
add
stos
pop
(bad)
jae
cwde
xchg
lock
lods
and
xlat
push
push
and
rcl
rcl
mov
std
ror
inc
dec
outs
lods
mov
sbb
adc
xor
(bad)
jmp
mov
loopne
mov
push
push
xchg
mov
dec
jecxz
sti
mov
adc
or
pop
or
push
adc
push
es
in
loopne
and
inc
fs
dec
sub
sbb
fimul
push
add
mov
sbb
add
lods
cmc
add
nop
sbb
mov
add
add
mov
mov
out
ins
cmps
inc
pop
add
enter
or
jae
shr
jbe
mov
xorps
push
in
and
xor
push
or
in
sub
cs
sub
popf
mov
inc
cmp
outs
xor
ds
add
lods
add
mov
sbb
add
jns
or
ins
mov
xor
ins
or
add
add
inc
sar
jno
les
adc
inc
jb
popa
jns
and
imul
in
and
jns
(bad)
hlt
mov
xchg
adc
pop
mov
das
call
gs
pop
cmp
outs
jne
ins
sbb
and
mov
add
inc
mov
sub
sar
mov
mov
ret
and
lods
pop
cmc
ins
jnp
pusha
fwait
(bad)
sbb
imul
add
ins
or
out
cmp
pop
in
dec
cmp
mov
pop
inc
jne
mov
dec
pop
int3
pop
sbb
or
mov
in
dec
xlat
pusha
sub
mov
int
push
das
fmul
dec
xor
aas
bound
lock
add
mov
sub
push
dec
lds
inc
sahf
test
stos
sbb
mov
cmp
mov
dec
inc
sub
or
xchg
mov
add
loopne
jo
cwde
push
push
cmp
push
cmp
popa
jb
fstp
and
dec
push
inc
jnp
dec
cmp
jae
jp
xor
adc
int
inc
pop
push
or
xchg
mov
shl
mov
ins
cmps
std
je
movs
or
xor
or
(bad)
pusha
mov
inc
or
enter
sbb
or
or
sbb
push
sbb
jae
and
adc
push
adc
into
sub
fwait
ret
xor
inc
push
scas
pop
mov
jnp
mov
cmc
das
or
aaa
pop
xor
dec
outs
mov
or
inc
mov
cmp
cwde
xor
xor
cmp
dec
pop
js
push
(bad)
dec
pop
push
call
stos
(bad)
mov
xchg
sahf
cmp
shl
in
add
push
adc
sbb
in
sbb
add
mov
retf
add
ins
cmp
or
test
jmp
shl
stc
inc
xlat
push
in
es
add
rcr
mov
mov
das
add
and
not
push
sub
loopne
push
in
jl
mov
sub
out
mov
and
loop
outs
mov
aad
dec
fcomp
test
or
mov
xchg
mov
xchg
out
xor
out
sub
cld
je
jmp
stc
sub
stos
mov
pushf
ror
sub
mov
stos
out
xchg
add
movs
pop
jo
cmps
add
push
rol
push
sbb
cmc
and
adc
jnp
push
mov
and
loopne
push
inc
and
sbb
sbb
adc
(bad)
sub
out
pop
xor
les
cs
ds
mov
xchg
push
and
imul
nop
xor
pop
pop
lods
pop
loop
push
dec
mov
hlt
push
mov
push
add
jo
(bad)
dec
aad
js
add
(bad)
in
xlat
jmp
xchg
out
adc
(bad)
stos
adc
and
sbb
outs
stos
sbb
xor
dec
pop
outs
int
xor
call
jmp
ret
mov
ret
dec
inc
sub
xor
aas
outs
push
cmp
push
and
daa
add
pop
mov
xlat
es
dec
push
and
push
dec
xchg
sub
in
sbb
inc
scas
fs
jle
add
dec
les
cmps
jnp
ror
and
pop
adc
fisttp
sbb
fwait
cld
(bad)
mov
mov
je
lock
xor
jns
xchg
test
inc
cdq
push
jne
push
adc
frstor
stos
or
pop
ja
lds
fadd
sub
pop
dec
push
mov
test
lds
adc
retf
fadd
sbb
loop
out
push
out
push
imul
sbb
xor
push
adc
mov
iret
icebp
add
iret
sti
iret
cmp
ror
inc
or
shl
and
add
sbb
fwait
aam
jbe
cmp
fwait
sub
pop
sub
push
push
scas
mov
das
jnp
push
sub
or
mov
pop
fnstenv
add
jmp
fadd
call
inc
pop
and
loopne
sbb
sub
mov
pop
push
xchg
je
xor
jmp
call
out
test
push
out
in
stos
out
mov
and
push
cmp
icebp
and
out
xor
inc
out
push
mov
in
adc
das
scas
push
xor
hlt
out
mov
loop
cmp
xor
hlt
push
mov
push
and
add
ins
xchg
add
xor
mov
sub
loope
mov
ins
jo
add
test
add
cld
cs
and
inc
cmp
bound
mov
jo
ucomiss
loop
mov
mov
xor
push
aad
ret
sub
adc
test
ret
add
push
push
and
mulps
loop
leave
movs
fild
adc
cmps
xchg
pextrw
or
jb
jb
sub
rcr
pop
loope
xchg
lea
popa
rol
mov
push
mov
cmp
xchg
shr
sub
scas
mov
inc
inc
popa
sbb
je
push
rcr
xchg
or
sub
stos
or
in
fadd
jecxz
call
xchg
aas
lds
or
or
add
inc
or
pusha
mov
icebp
je
sbb
fwait
xor
or
pusha
dec
add
xchg
mov
cli
xchg
ret
retf
jb
mov
fistp
inc
icebp
cmp
push
push
mov
or
mov
fld
mov
inc
cmp
outs
pop
in
and
outs
push
lods
and
ins
jg
and
add
shl
mov
add
les
pop
inc
push
fisubr
arpl
push
sub
jo
out
push
or
or
and
push
and
js
mov
jb
and
add
es
inc
xor
mov
adc
pop
mov
sub
cmp
add
or
rol
jae
xor
push
imul
std
sub
mov
add
push
jl
mov
xchg
popa
mov
xlat
nop
sbb
jge
jge
pop
pop
lds
adc
call
into
xor
jnp
test
dec
add
fnsave
jmp
pusha
xor
cmp
add
in
add
(bad)
jae
lock
pop
sti
jae
inc
inc
mov
xor
inc
dec
or
mov
and
sbb
addr16
pusha
test
daa
sbb
mov
cli
sbb
add
add
jae
imul
add
in
adc
inc
cmp
sub
mov
jb
push
adc
cmp
fsubr
jmp
push
xor
adc
cmps
fnstsw
test
fwait
sub
call
cmp
ins
das
inc
test
ror
jmp
xchg
fdivp
mov
mov
daa
xchg
out
cmp
pop
push
cmp
(bad)
outs
push
out
dec
jno
mov
inc
scas
xchg
aad
test
ret
sub
sub
xlat
add
pop
inc
xor
add
dec
push
dec
(bad)
dec
mov
xor
sbb
dec
inc
sub
addr16
adc
push
jl
sub
lods
out
das
xlat
lahf
shl
jmp
or
sbb
sbb
push
xor
push
push
push
adc
pop
stos
loopne
push
or
pmaxub
push
in
fdivp
call
in
in
jge
std
add
jmp
sub
aas
loop
fidivr
dec
addr16
xchg
add
add
xchg
or
push
test
movs
ret
mov
ror
mov
inc
xor
jmp
or
dec
sub
pop
adc
adc
pop
inc
inc
jo
mov
sub
add
sub
sub
lahf
int3
pop
add
in
mov
hlt
jmp
aam
std
das
sbb
lds
ror
das
lock
pop
add
mov
mov
push
cmps
mov
add
and
mov
xor
lock
mov
sar
adc
dec
add
jae
cmp
adc
or
dec
adc
adc
xchg
daa
inc
or
mov
sti
xchg
inc
cmp
in
daa
sti
aaa
mov
sbb
pop
fcom
jbe
add
in
push
in
adc
push
ins
jne
xlat
mov
sahf
pop
test
aam
fadd
add
callw
push
xor
xlat
cmp
add
push
stos
cmp
cmp
int3
rcr
ins
sbb
jns
or
inc
outs
pop
dec
stos
ret
andps
mov
inc
out
ror
mov
mov
in
push
(bad)
in
es
das
or
(bad)
mul
or
cmp
test
pop
push
lea
pop
mov
or
or
mov
push
lds
mov
loop
je
mov
leave
and
movs
push
gs
add
sbb
in
inc
sub
xlat
and
and
loopne
ja
pop
daa
push
lock
in
shr
add
icebp
push
fsub
or
sbb
jmp
out
dec
lods
inc
jo
out
pop
test
adc
push
add
pop
call
aaa
xchg
push
out
jae
adc
sub
mov
and
in
and
movs
sub
pusha
add
inc
mov
ja
ret
(bad)
xor
ret
pusha
mov
shr
cmp
push
retf
cdq
repz
aaa
hlt
in
adc
(bad)
clc
mov
push
out
daa
push
mov
push
repnz
push
cvttps2pi
test
or
push
xor
and
dec
pop
sub
dec
cmovo
xor
movaps
shr
daa
mov
xchg
pop
call
xor
(bad)
xor
call
outs
or
(bad)
jns
jb
and
cmp
popa
cdq
aad
push
mov
es
jo
xor
push
push
sahf
sub
cmp
sub
rol
enter
jo
mov
pop
add
jecxz
cmp
add
adc
push
or
cmp
and
(bad)
out
fwait
jecxz
out
pop
and
dec
repz
fcomp
inc
lahf
scas
add
adc
repz
mov
sub
or
fs
or
repz
add
repz
repz
add
repz
mov
sub
add
dec
add
repz
add
pop
repz
jo
xor
cmp
aam
(bad)
add
jae
add
inc
mov
imul
inc
test
repnz
faddp
sar
pop
xor
push
dec
repz
js
push
cwde
addr16
or
jg
xchg
sbb
ret
enter
cmp
mov
xchg
enter
loop
sub
ret
call
fimul
aas
ret
cmp
cmp
sub
push
in
mov
xor
pop
outs
adc
adc
enter
ror
or
add
add
lds
sub
xchg
cmps
dec
pop
jo
fisttp
inc
dec
xlat
imul
mov
in
in
fsub
pmaddwd
inc
sti
sub
loopne
push
inc
or
mov
mov
xchg
dec
adc
movs
jle
mov
add
sti
pop
xor
pop
add
sub
std
ja
jbe
push
ins
push
add
and
cmp
sub
in
pop
add
std
pop
jne
push
push
add
inc
jno
daa
pop
adc
jnp
push
push
hlt
push
xchg
je
out
dec
jl
aaa
test
rcr
cdq
jae
mov
rcl
fsubr
sbb
xchg
dec
fnstenv
mov
sti
pop
xor
cmps
mov
dec
and
add
movs
ret
mov
add
mov
aaa
lock
inc
ins
add
ds
or
add
adc
xor
dec
push
cmp
adc
inc
add
lods
pusha
cwde
jae
push
out
(bad)
aas
(bad)
cs
mul
je
ins
xor
test
adc
cwde
nop
pop
mov
fst
jb
dec
bound
or
add
stos
mov
leave
push
pop
and
push
jge
mov
adc
sub
lds
inc
push
sbb
neg
mov
push
xchg
lds
fisttp
jbe
mov
dec
mul
mov
jmp
xor
push
pop
sub
ds
icebp
inc
ret
sbb
jl
xor
sbb
or
icebp
or
scas
sub
push
xchg
je
xor
sub
pop
jns
mov
adc
arpl
or
outs
mov
sub
shr
push
add
das
push
push
add
push
outs
mov
adc
jnp
fdiv
imul
imul
(bad)
sbb
fist
xchg
pop
mov
or
mov
nop
sub
sbb
out
push
mov
imul
jmp
stc
xor
lea
nop
test
(bad)
not
sub
pop
shl
lods
cmp
xor
sbb
mov
adc
and
add
and
adc
(bad)
cld
mov
ins
add
mov
out
aaa
bound
xchg
push
and
popa
imul
push
push
pop
addr16
mov
stos
es
iret
and
inc
pushf
inc
jbe
retf
pop
add
mov
ret
sub
xchg
and
pop
push
sbb
loope
das
outs
push
xchg
cmp
pop
fld
fs
xor
ret
cmp
in
push
xor
add
mov
mov
daa
lods
xchg
ror
push
popa
xchg
cmps
aad
inc
call
jmp
rcr
leave
sbb
sub
test
outs
ins
mov
adc
mov
fdivr
fdivr
add
or
loopne
test
out
adc
add
push
xchg
movs
push
and
mov
adc
mov
xor
out
add
jno
mov
push
sub
mov
pusha
jo
fwait
mov
jo
aam
fwait
cld
pusha
and
sub
call
enter
mov
add
or
dec
cmp
or
push
fsub
add
data16
and
sahf
lock
test
mov
ins
fdiv
shl
test
imul
out
jne
and
je
jnp
sub
iret
xchg
dec
iret
test
sbb
stos
mov
mov
repnz
clc
or
or
ds
hlt
mov
pop
push
push
ins
pop
push
add
mov
outs
xlat
push
push
dec
xor
sub
mov
test
pop
or
jne
cmp
enter
add
jns
xchg
add
mov
paddsw
xchg
in
sub
inc
js
adc
fstp
js
adc
sub
in
das
mov
push
push
test
or
mov
imul
shl
mov
sbb
test
mov
call
cmps
push
xor
popa
xor
jo
cmps
add
mov
cmps
dec
xor
push
leave
cmps
les
std
(bad)
adc
mov
push
dec
dec
outs
lea
or
daa
daa
daa
and
(bad)
cld
mov
adc
sbb
retf
cpuid
cmp
loop
mov
cmp
shl
mov
adc
(bad)
(bad)
loopne
xor
xor
int3
inc
test
jecxz
push
inc
push
pushf
call
add
dec
cmp
add
and
xor
mov
lds
add
jl
add
fs
xor
outs
push
mov
adc
loopne
lds
sub
mov
or
das
inc
add
and
pop
mov
push
out
dec
add
mov
or
pop
shr
popa
rol
cmp
js
jno
cwde
add
cs
pusha
mov
imul
adc
sbb
test
mov
loopne
xor
mov
vmovmskps
add
inc
push
rol
add
and
or
lods
shl
int3
or
jmp
adc
shl
push
add
pusha
pop
jo
xor
adc
adc
in
push
cmp
push
in
pusha
mov
sbb
push
ror
mov
shr
outs
je
add
imul
push
cmp
dec
out
push
add
jae
pop
hlt
imul
xchg
adc
sbb
pop
shr
fimul
sub
sbb
mov
loop
lods
cmp
sub
sbb
push
sbb
xchg
sub
adc
into
and
mov
std
add
sbb
inc
jno
fldcw
pop
ins
das
mov
aaa
cmps
mov
or
outs
aaa
pop
fsub
out
fld
xor
int
fimul
mov
daa
std
adc
inc
adc
mov
movs
cmp
cmp
xor
icebp
add
dec
push
loope
or
sub
sbb
jo
pop
(bad)
add
js
lock
push
inc
mov
push
or
stos
sbb
cmc
pop
mov
pusha
inc
adc
push
xchg
push
inc
or
shr
shl
mov
push
loop
bound
test
daa
mov
das
mov
push
aaa
lock
add
fisub
sub
aaa
push
pushf
add
adc
pop
sub
sub
es
mov
das
ja
push
push
hlt
and
call
and
in
das
inc
das
jo
mov
push
xor
pop
pushf
sub
sub
adc
dec
sub
loopne
dec
je
jns
je
sbb
add
and
or
sub
mov
push
ja
out
jmp
pop
das
ja
js
push
add
jmp
idiv
jno
ja
cmps
ret
fsubr
push
sbb
xor
sub
fst
stos
xor
ja
jmp
jmp
add
add
add
sbb
or
ret
mov
pop
movs
pusha
push
fcmovnb
ror
push
out
or
sub
sub
push
or
push
sub
mov
push
sub
add
cmp
add
mov
mov
add
and
inc
pop
mov
push
(bad)
jb
inc
mov
icebp
xchg
cmp
jae
sub
shr
dec
jg
pop
mov
mul
jae
out
bound
bound
mov
add
cmps
xor
(bad)
cmps
jne
push
inc
or
lahf
cmp
push
ja
imul
ss
mov
xor
icebp
test
lea
cmp
out
fcomp
mov
dec
aaa
xor
pop
xor
cwde
push
cli
dec
sti
ja
rol
or
push
loope
es
inc
jg
push
or
jne
jg
fimul
das
loope
scas
popf
pushf
and
mov
push
test
xor
inc
jbe
sbb
jl
fadd
(bad)
fbstp
mov
dec
dec
add
jecxz
sbb
xor
cwde
fcomp
cld
shl
sub
pop
push
push
mov
imul
enter
and
push
sysexit
pushf
pop
add
xlat
push
fsub
push
movs
es
jmp
adc
jecxz
out
clc
pop
dec
sbb
jmp
cld
push
push
pop
out
pop
fadd
clc
div
xchg
mov
jecxz
adc
add
push
test
outs
aam
pop
out
inc
adc
aad
out
add
add
push
or
out
or
ret
and
ja
mov
(bad)
shl
hlt
jbe
dec
jo
jmp
push
add
sub
es
add
inc
mov
gs
sub
sub
jmp
pop
jno
jo
jg
push
nop
test
scas
ja
xchg
cmp
pop
xor
aaa
aam
nop
in
pushf
je
ins
push
or
jns
add
mov
push
pop
imul
mov
mov
xlat
test
jecxz
or
and
add
push
pusha
ja
xor
sub
lds
arpl
shl
pop
mov
js
pop
jne
in
jnp
push
jl
je
rol
test
fsub
scas
xor
arpl
mov
cwde
scas
loope
push
aam
scas
mov
lea
movlps
cwde
mov
enter
leave
leave
leave
ins
dec
movd
out
in
in
cs
mov
loop
pusha
mov
test
ror
cmp
sub
add
imul
mov
jno
push
dec
push
mov
jbe
inc
or
sub
or
mov
cmp
add
or
adc
inc
mov
add
or
aam
mov
xor
mov
xchg
push
or
jns
add
xchg
and
aam
fs
repz
inc
push
xchg
push
xor
test
mov
add
pushf
add
dec
push
inc
ds
mov
or
mov
add
mov
mov
mov
cmp
xor
mov
mov
mov
mov
or
shl
jb
ins
push
add
imul
add
sub
test
add
jb
sub
push
int3
addr16
add
inc
add
pop
sbb
rcl
or
shrd
in
adc
inc
(bad)
mov
and
add
mov
inc
and
and
add
aaa
rol
push
xor
jns
and
sbb
popa
outs
fs
aam
adc
shl
jge
mov
imul
dec
mov
jae
cmp
hlt
clc
pop
dec
mov
test
mov
add
pop
mov
mov
test
test
xor
aad
mov
mov
xchg
sub
push
mov
xchg
inc
jge
sbb
or
scas
cmc
sub
je
add
xor
adc
fwait
popf
inc
xor
push
das
call
cmp
jge
mov
aas
xor
cmc
push
mov
xor
push
push
mov
mov
scas
or
dec
xor
pop
xor
out
loopne
xor
add
dec
inc
sub
and
ret
(bad)
bsr
sbb
and
js
pop
lods
or
and
adc
push
in
or
test
push
add
xor
scas
jmp
sub
popf
jmp
outs
scas
sbb
add
sbb
in
sub
sub
loopne
aaa
cmp
adc
mov
add
jg
fstp
push
cmp
dec
push
jp
xor
(bad)
pop
cli
mov
loop
push
add
mov
fst
call
mov
and
xchg
aaa
push
xlat
movs
push
fsubr
ja
push
or
sbb
pop
sub
jmp
jae
pusha
mov
add
dec
add
add
push
pusha
inc
cmps
cdq
pushf
or
cmp
cmp
xor
rcr
dec
push
scas
push
fsubr
fidiv
in
test
clc
inc
pop
fmul
(bad)
call
push
out
sbb
xlat
lods
push
or
jno
adc
xor
inc
mov
je
jmp
sub
cwde
xchg
sub
push
or
cmp
pusha
lods
test
mov
add
and
jb
and
addr16
lods
push
movs
(bad)
pop
adc
mov
or
into
add
add
sbb
dec
loopne
pop
adc
test
dec
lock
mov
xchg
pop
xchg
pop
les
les
xlat
xchg
and
xchg
push
mov
shl
or
mov
mov
mov
mov
push
cmp
add
rcr
mov
add
das
test
add
xchg
mov
dec
and
push
dec
inc
stos
jmp
push
scas
js
dec
or
sbb
sub
sbb
js
daa
mov
lods
cmps
fwait
inc
sbb
xlat
add
jmp
stos
pop
test
pop
jmp
fcomp
jmp
ret
jg
add
sbb
int
dec
adc
adc
inc
sahf
jo
xlat
push
jo
mov
sub
das
iret
push
xor
mov
push
add
fld
push
adc
fidivr
push
or
mov
sti
inc
rcr
sbb
mov
fisubr
hlt
movs
je
or
call
jo
daa
xchg
retf
imul
push
ja
xor
jno
or
daa
ins
inc
ja
in
les
test
push
je
popf
das
mov
or
js
pop
(bad)
jno
sub
push
aaa
add
xlat
or
mul
aad
mov
push
mov
call
jno
(bad)
cmp
movs
fiadd
inc
aad
sub
adc
out
stos
sar
adc
pop
add
dec
loopne
pop
push
out
push
and
js
xchg
shl
inc
jecxz
adc
enter
fld
test
retf
das
push
xchg
jp
repz
ja
enter
push
or
xchg
outs
push
or
loop
add
or
jmp
jg
push
ja
xchg
rol
popf
sub
push
(bad)
movs
mov
ins
fsubr
mov
jne
or
pop
imul
adc
std
mov
inc
retf
fdiv
aaa
in
push
movs
push
add
into
mov
das
das
inc
xchg
call
hlt
jmp
xor
neg
push
xchg
sbb
and
pop
ret
push
add
xchg
xor
(bad)
xchg
sbb
arpl
aad
xchg
imul
push
push
movs
paddusw
dec
xchg
daa
and
rcl
cdq
ins
je
mov
dec
cmovns
(bad)
dec
imul
pushf
mov
in
test
jo
ds
jb
sub
cmp
push
js
cmp
push
aam
xchg
mov
xor
xor
mov
push
jo
sbb
sbb
imul
or
xchg
jl
or
aam
xor
inc
xor
scas
adc
push
or
or
sub
aam
pop
inc
sub
xchg
dec
rol
push
ins
xor
jl
xchg
add
add
into
pop
dec
push
xchg
push
inc
add
mov
not
xor
pop
dec
add
xchg
test
add
jo
xor
cmp
clc
les
add
out
or
or
push
add
movs
cs
(bad)
sbb
jo
sbb
addr16
xchg
test
pop
mov
jo
mov
pop
mov
loope
xor
ja
mov
mov
sbb
xchg
add
xor
sbb
clc
cmp
xchg
xor
xchg
fimul
dec
and
cmp
cmp
add
pop
mov
push
xchg
out
mov
ja
dec
out
xchg
daa
loop
sub
cdq
imul
mov
adc
sbb
fnstenv
mov
jne
fldcw
fldenv
cmps
in
addr16
dec
pop
or
jo
hlt
das
adc
xchg
(bad)
jg
(bad)
sbb
cmp
mov
or
je
lods
stc
loope
mov
sar
cmps
(bad)
jo
adc
rcr
mov
dec
lahf
out
pusha
and
push
pop
aas
dec
add
pop
bound
and
pop
inc
sub
adc
ret
gs
add
sbb
int
je
push
sub
push
stos
test
outs
push
aaa
clc
or
test
(bad)
dec
xchg
push
mov
vmovsd
adc
daa
sub
fadd
sbb
push
popaw
clc
sahf
shl
ins
je
inc
or
in
or
rcl
imul
sti
or
or
push
out
shl
outs
push
add
out
add
loopne
inc
out
(bad)
sbb
push
pop
add
(bad)
inc
xor
jmp
adc
retf
dec
pusha
xlat
lock
into
push
add
sub
dec
loopne
addr16
es
cmps
cwde
addr16
push
jle
add
adc
xor
mov
dec
add
sub
inc
adc
les
mov
jge
in
add
aaa
pusha
int
shl
arpl
into
or
sub
or
std
mov
in
cmpxchg
test
xor
pop
std
sub
adc
jp
push
mul
dec
ja
sub
add
inc
stos
stos
mov
pop
pop
adc
je
inc
cli
arpl
lods
jnp
jnp
bound
push
das
call
das
xor
push
ja
push
xlat
push
popf
pop
pop
bound
enter
or
rcl
xchg
add
aam
jnp
xchg
ret
sub
xchg
and
jo
add
xor
and
popf
xor
adc
or
add
ss
ins
add
cmp
xor
mov
aaa
mov
push
xor
sbb
mov
fcomp
pop
add
push
dec
cmps
repnz
popa
push
das
mov
push
and
clc
scas
ins
xchg
cwde
xchg
push
pusha
mul
push
lods
push
inc
sbb
mov
or
add
xor
repz
sub
inc
dec
popf
ja
fsub
push
jge
or
add
mov
(bad)
jb
loopne
loop
cdq
push
dec
aam
leave
ins
mov
push
inc
sbb
dec
jae
mov
jb
repnz
and
jns
jb
push
cmp
inc
sahf
pushf
pushf
mov
add
dec
dec
dec
dec
pop
xchg
loopne
pusha
daa
daa
daa
and
pushf
in
cmp
imul
cmp
retf
add
jecxz
mov
add
adc
xor
push
push
(bad)
xor
out
bound
mov
mov
add
jno
cmp
xor
daa
pop
outs
inc
mov
(bad)
test
dec
paddw
push
dec
dec
jae
into
push
adc
add
jg
lds
or
cdq
push
nop
imul
mov
and
push
add
sub
inc
cdq
jo
cmp
in
add
or
shr
fisub
jbe
jl
mov
fdiv
dec
mov
movs
js
add
enter
dec
aad
adc
or
xchg
rcl
push
or
fwait
xchg
sbb
das
leave
rol
pushf
gs
test
add
popa
arpl
inc
lds
xor
or
fwait
or
aam
dec
jae
imul
iret
sub
jmp
dec
add
sahf
add
inc
nop
cmp
push
ins
add
repnz
mov
add
xchg
push
sbb
ret
mov
lea
dec
fs
aam
or
inc
repz
xchg
cmc
ss
nop
pop
scas
lahf
sbb
cmp
push
ret
add
push
fiadd
add
dec
rol
push
cdq
jge
xchg
pop
xor
test
jge
lahf
sbb
or
ja
and
push
lock
fist
mov
pop
or
mov
or
popf
dec
add
pushf
scas
out
push
add
add
jo
call
mov
inc
adc
dec
mov
mov
imul
add
idiv
add
cwde
push
or
daa
add
int3
sahf
adc
and
adc
dec
sbb
sbb
sub
lods
inc
test
inc
(bad)
(bad)
shl
rol
add
ins
or
popa
adc
dec
or
xor
and
test
add
xchg
sub
xchg
jo
add
dec
and
adc
pop
xchg
xor
lds
xor
add
sub
outs
bound
cmp
mov
add
scas
adc
out
mov
imul
adc
sub
pop
jecxz
mov
sub
cmp
sbb
cdq
scas
pushf
mov
(bad)
mov
arpl
outs
adc
sub
nop
ret
xor
lods
movs
rcr
fadd
add
dec
lea
inc
ret
or
cmp
push
xchg
cli
bnd
push
push
je
push
mov
adc
ucomiss
(bad)
call
int
inc
add
pop
add
adc
add
push
fild
pop
cmp
pop
adc
and
add
call
movs
push
mov
push
fnstenv
stos
cmps
mov
sbb
or
fld
add
pop
sub
dec
or
ja
ret
xor
add
push
xchg
push
add
(bad)
loopne
icebp
nop
icebp
sbb
js
daa
lahf
div
mov
xchg
out
pusha
dec
mov
inc
test
fistp
cmps
retf
shr
sub
inc
nop
or
add
mov
cmp
pop
mov
push
aaa
dec
and
push
ins
sbb
mov
(bad)
push
pop
call
push
add
rol
inc
sbb
add
and
mov
out
add
add
inc
adc
or
aas
sbb
mov
imul
out
push
pop
adc
push
pop
ds
punpckhbw
sbb
(bad)
and
pusha
push
add
or
adc
add
test
adc
and
int
loopne
pop
aaa
and
push
mov
aaa
sbb
stos
and
aaa
add
push
iret
pop
cmc
mov
retf
mov
lock
cmps
push
and
mov
cmp
nop
call
pop
outs
bound
and
hlt
push
sub
pop
ja
push
push
das
imul
bound
push
subps
jbe
add
dec
js
test
ret
pop
adc
aad
pop
pop
pusha
call
mov
add
jecxz
dec
or
pop
mov
dec
add
lods
shr
jo
inc
loopne
pop
lods
jb
or
push
push
ins
loopne
ss
push
addr16
fidiv
loopne
push
sahf
cli
test
ins
das
mov
mov
adc
or
hlt
mov
sar
pavgb
jo
jp
lods
push
add
and
imul
or
pop
pusha
adc
pop
(bad)
cmp
fcom
into
jbe
popf
push
cmp
test
jo
daa
daa
daa
mov
ja
xchg
xchg
xchg
jno
fld
jb
leave
leave
leave
dec
xor
cmp
jb
xor
mov
jns
jne
popa
xchg
pushf
mov
in
jbe
imul
jmp
cmp
into
push
cli
add
sbb
xchg
es
xor
ja
pop
xor
dec
fimul
jnp
add
add
push
mov
or
test
loop
push
phaddsw
shl
dec
push
mov
jg
mov
in
jle
shl
pop
mov
fwait
pop
inc
stos
cmp
add
ins
push
in
cmp
outs
add
push
fcomp
pop
pusha
ja
add
add
ins
jbe
xor
call
add
rcl
enter
add
push
loopne
pop
ins
lods
nop
sub
imul
leave
call
and
pop
lods
ficom
push
call
enter
push
adc
pusha
add
sbb
test
inc
dec
add
or
loop
or
les
pop
add
push
int3
pusha
add
loopne
pop
jae
inc
pop
adc
pusha
mov
aad
mov
add
loopne
into
clc
push
jae
not
add
rol
jo
sbb
pop
mov
and
adc
pop
xchg
mov
mov
(bad)
xchg
dec
imul
nop
mov
pop
dec
cmp
pop
add
aad
cmp
sub
pop
dec
(bad)
scas
mov
rol
push
pop
push
cmp
mov
cmp
cdq
mov
or
daa
add
jns
add
adc
mov
inc
inc
push
pusha
xor
push
loopne
ins
ins
pop
loop
add
pop
cmp
xchg
push
pop
jo
adc
inc
call
xchg
xor
sub
pop
jno
or
sub
push
pop
arpl
cmp
mov
pop
xchg
not
add
adc
scas
jno
or
add
and
add
call
mov
or
jo
add
adc
and
push
add
cmp
jmp
dec
mov
mov
add
xlat
aas
sbb
cmp
xor
push
xchg
or
ss
sub
inc
xor
test
dec
test
outs
popa
les
fmul
loope
loope
cwde
add
add
dec
gs
push
fwait
ret
test
add
pushf
sar
jae
add
addr16
loop
and
push
inc
dec
hlt
inc
adc
or
add
(bad)
cmp
dec
test
dec
and
adc
loop
fld
dec
jnp
shr
inc
mov
into
push
aas
add
sbb
outs
pop
cmps
cmp
push
and
add
stc
mov
enter
dec
(bad)
adc
rcr
push
retf
jne
sub
dec
cld
rol
(bad)
adc
jo
push
sbb
ja
popf
sub
push
jge
pop
das
jbe
daa
loopne
adc
enter
mov
mov
push
aas
sbb
push
shl
sbb
push
sbb
jp
daa
stc
mov
sbb
dec
sub
pop
or
xchg
pop
sbb
cmp
mov
cwde
dec
inc
sub
femms
mov
adc
push
add
push
push
inc
mov
xor
sub
pop
fsub
lods
fdivr
pop
add
daa
pop
stos
int3
outs
jp
mov
add
push
and
loopne
dec
jae
cli
push
add
ins
jle
inc
sbb
daa
adc
aam
sar
jecxz
and
aas
(bad)
in
or
mov
stc
or
in
adc
push
adc
inc
mov
and
loopne
jg
push
scas
sub
(bad)
or
dec
or
push
push
xor
cmp
pop
jbe
pop
sahf
mov
add
lods
xchg
or
inc
addr16
add
sub
mov
shl
push
or
add
mov
ror
inc
add
add
sbb
out
xor
jns
cmps
sbb
fsub
add
cmp
pop
adc
repnz
mov
adc
add
idiv
mov
es
add
jne
in
imul
sub
cli
mul
fsubr
mov
and
lods
add
sub
out
push
out
mov
mov
or
push
stos
mov
add
int3
ret
bound
icebp
add
sar
sar
add
loope
or
mul
push
sub
shl
sbb
add
popa
jmp
movs
loopne
adc
and
loopne
adc
add
imul
xlat
add
pop
mov
xchg
mov
pop
mov
sub
nop
push
mov
lds
and
inc
pusha
xor
jmp
pop
lods
call
jno
gs
sar
add
test
pusha
sub
mov
je
or
xchg
dec
push
scas
ja
inc
ret
sub
sbb
inc
or
mov
cmps
fwait
inc
sbb
mov
out
jecxz
stos
pop
test
pop
loop
push
fcom
test
cwde
dec
inc
sub
inc
jg
or
adc
jg
adc
(bad)
outs
xchg
push
dec
nop
es
das
mov
mov
sbb
(bad)
dec
(bad)
bound
add
mov
cmp
es
call
cmp
daa
mov
(bad)
ret
fs
mov
je
in
mov
rol
pusha
mov
sub
push
mov
inc
jmp
or
mov
mov
xchg
das
mov
mov
js
push
sbb
push
int3
aam
(bad)
mov
(bad)
fsubr
or
addr16
jns
(bad)
nop
ret
aam
jmp
push
jno
pushf
fdivr
sub
aad
ficom
cmps
(bad)
pop
stos
sar
fild
push
and
jmp
mov
rol
shl
(bad)
out
push
dec
jo
retf
inc
push
ja
in
rol
mov
movs
es
jmp
add
outs
pusha
call
or
outs
push
add
or
sbb
outs
dec
xchg
push
add
dec
push
sub
inc
sbb
ins
pusha
stos
jmp
ins
ins
je
jns
add
(bad)
pop
imul
bound
std
je
mov
fsubr
popa
addr16
pop
add
sbb
mov
daa
(bad)
push
xor
mov
and
jmp
in
mov
ret
cmps
push
dec
push
push
fwait
loopne
and
mov
inc
and
xchg
sbb
jne
add
mov
cmp
jg
mov
xchg
push
inc
inc
jb
ja
aas
call
mov
sub
es
add
or
dec
out
cmp
outs
cs
daa
jnp
cs
xor
xor
push
aad
in
mov
xor
ret
or
push
addr16
bswap
leave
enter
nop
pop
cmps
sbb
and
xchg
cmovo
dec
dec
sub
daa
and
(bad)
cmp
push
movzx
jo
xor
xchg
mov
mov
cmp
fs
cmp
xor
and
pop
cmp
add
stos
pop
neg
pushf
or
add
dec
add
jno
test
dec
push
jecxz
push
shr
mov
add
lods
and
test
or
sbb
and
movs
bound
fwait
add
add
add
mov
pop
or
pusha
cmp
push
or
jmp
dec
push
scas
rol
add
sub
lods
adc
dec
test
repz
addr16
daa
cmp
mov
or
and
lock
int
mov
mov
ins
rol
cmp
dec
add
daa
lock
dec
jb
xchg
out
add
xor
mov
pop
cmp
adc
test
xchg
add
pop
and
or
sub
jne
mov
sub
xor
xor
pop
mov
int
data16
pop
push
xor
rol
dec
and
add
enter
add
push
mov
enter
loope
add
jo
add
sbb
dec
sub
add
xchg
div
cmp
es
ud0
inc
or
(bad)
fadd
inc
dec
lock
and
or
xor
and
adc
test
push
nop
xchg
js
inc
or
push
or
push
add
sbb
mov
push
jle
push
dec
or
clc
out
(bad)
clc
mov
adc
mov
clc
pop
ins
(bad)
xchg
pop
inc
test
(bad)
or
(bad)
pop
retf
dec
icebp
or
rcr
add
leave
test
push
cmp
or
shr
in
aad
pushf
cmp
add
pop
jbe
clc
push
add
cwde
pop
cmp
pushf
enter
lahf
dec
enter
xchg
loop
pushf
xchg
push
aaa
ret
or
loope
dec
xchg
stos
lock
pop
dec
daa
test
xchg
data16
jo
sbb
scas
xor
push
cmp
dec
inc
sub
dec
mov
jl
push
add
jl
(bad)
aas
add
or
push
inc
aad
push
shr
daa
sbb
push
inc
js
push
out
ret
and
aas
dec
sbb
push
icebp
cmp
add
push
add
loopne
add
lods
add
xlat
add
cmp
test
add
in
cmp
push
es
test
into
aas
mov
(bad)
mov
scas
pop
and
rcl
outs
jnp
adc
dec
retf
or
dec
pop
xchg
movs
sar
push
adc
je
and
add
sbb
add
inc
cmp
dec
sub
ins
std
pop
jbe
push
cmps
movs
pop
add
sahf
rcr
push
fsub
aad
repz
sub
push
aam
add
push
neg
or
cld
idiv
scas
lds
clc
out
push
out
mov
cs
test
pop
jns
neg
pushf
pusha
test
shl
sub
sub
ret
icebp
add
ret
push
sbb
cmp
mov
pop
movs
and
mov
cmp
cmp
clc
cmps
mov
adc
shl
rcr
mov
or
adc
loope
outs
adc
pop
and
(bad)
ror
xchg
mov
and
fsub
xchg
cmp
mov
(bad)
addr16
mov
ins
ja
push
sub
push
retf
cmp
mov
fs
ins
mov
xchg
dec
mov
push
sti
mov
xchg
mov
out
push
mov
mov
mov
aad
cmps
adc
cmp
or
add
scas
loop
push
and
(bad)
int
pop
fiadd
pushf
inc
rcr
jl
fisttp
inc
cwde
fadd
fstp
outs
loope
sub
rol
or
push
cld
call
movs
sbb
or
add
cmps
enter
fsubr
add
and
into
sub
aaa
adc
mov
cmps
xchg
call
mov
mov
pusha
jo
mov
stos
xor
call
stos
pusha
stos
jmp
jns
add
scas
(bad)
mov
imul
stos
push
test
ret
sbb
cmp
xor
dec
movs
push
icebp
test
dec
sub
adc
adc
loop
jmp
pusha
inc
jbe
cs
push
add
xchg
fsubr
push
out
dec
xchg
push
xor
call
mov
xor
call
in
mov
je
stc
or
shr
xlat
inc
aad
test
test
rcl
xchg
retf
and
or
hlt
mov
jno
pop
or
add
cmps
addr16
xlat
dec
xor
das
jg
and
sbb
addr16
mov
addr16
hlt
addr16
call
aam
mov
or
sub
gs
enter
inc
ficom
je
sar
pop
arpl
mov
push
cmc
mov
cmc
mov
lods
pop
jle
fnstenv
cmps
idiv
inc
jmp
jmp
push
mov
mov
iret
push
nop
inc
or
push
and
pop
or
mov
pushf
pop
inc
or
add
pop
add
mov
dec
push
add
pop
icebp
pushf
int3
cmp
sub
and
cdq
pop
push
and
lea
lods
aaa
daa
daa
daa
daa
popa
test
sub
cmps
xchg
pop
les
push
clc
cpuid
cmp
xlat
adc
cmp
and
dec
dec
xor
test
push
add
aam
sbb
into
inc
adc
push
ror
sbb
push
lods
repnz
inc
add
or
pop
xlat
shl
fwait
sbb
les
xor
push
adc
add
sbb
bound
inc
or
gs
xor
push
add
sbb
or
aam
sbb
pop
sub
inc
add
adc
sbb
fadd
add
or
and
add
pop
rcl
mov
or
lock
jae
sbb
ins
inc
add
sub
add
bound
or
sbb
mov
fdiv
sbb
add
sbb
inc
dec
mov
sbb
xchg
retf
fyl2xp1
or
push
push
add
loope
adc
aam
sub
xor
or
push
xor
mov
sbb
mov
and
or
and
adc
outs
rcr
add
mov
pop
push
das
jno
popa
xchg
and
adc
fld
mov
push
or
pop
lods
xlat
mov
les
ret
dec
adc
sbb
add
add
mov
inc
mov
jo
mov
ret
popa
sub
das
fadd
mov
pop
js
jne
fmul
xchg
or
test
and
mov
movs
std
pop
push
xlat
xor
dec
shr
in
or
or
inc
cmp
fcom
and
adc
pop
add
pop
(bad)
test
mov
sub
subps
push
stos
cs
mov
leave
pop
mov
mov
add
iret
pop
cmp
sub
and
add
sbb
push
jne
je
inc
sub
pusha
mov
push
add
lods
and
or
xchg
add
cmp
push
add
push
or
xchg
pop
sub
aaa
or
jo
mov
sbb
push
add
cmps
seta
jnp
mov
retf
mov
pop
xor
or
xor
sbb
push
cld
dec
popa
outs
popa
cmp
cld
push
bnd
adc
adc
js
xor
mov
pushf
fist
loopne
ins
sbb
or
and
fnstsw
aaa
pusha
jbe
cmps
int
mov
cli
mov
and
ret
iret
cs
cmp
or
adc
imul
mov
scas
add
inc
nop
jmp
lea
setle
or
push
jmp
add
(bad)
dec
adc
and
push
aaa
dec
mov
mov
dec
adc
je
inc
or
sub
arpl
popf
add
pop
mov
pop
mov
mov
leave
push
pop
int3
rol
in
rol
add
or
arpl
xchg
xchg
neg
repnz
push
test
jnp
or
test
jno
push
call
test
inc
cmovl
push
xchg
ins
ds
or
aaa
pop
pop
mov
pop
fwait
mov
mov
mov
daa
cmp
(bad)
sar
daa
mov
and
adc
outs
clc
loope
mov
loopne
in
and
xor
pop
mov
jb
cld
push
sbb
xor
push
inc
test
xor
add
test
inc
pop
pop
sub
or
inc
dec
or
or
test
pushf
fdivr
outs
xcrypt-cfb
cmps
loope
sbb
jle
or
push
inc
cs
cmc
mov
pslld
mov
push
clc
inc
mov
xchg
mov
daa
daa
and
out
and
xchg
xchg
xchg
shl
ret
leave
leave
es
outs
xchg
in
in
int3
add
dec
mov
repnz
mov
or
push
jno
jae
mov
add
mov
cmp
fimul
hlt
js
test
and
dec
dec
cmps
lds
dec
dec
jne
mov
mov
xchg
les
jno
sbb
mov
out
daa
pop
shl
sbb
or
mov
inc
dec
mov
jae
int3
cdq
cmp
adc
and
dec
mov
sub
jg
inc
popf
sbb
jle
sub
mov
stos
xchg
xor
sbb
push
not
sbb
push
sub
aam
sub
cmp
outs
lds
push
or
outs
cdq
mov
xor
stos
inc
add
dec
mov
jae
nop
add
push
call
arpl
add
push
add
sbb
xchg
and
das
leave
call
and
inc
hlt
in
add
add
popa
arpl
xor
adc
add
call
je
mov
iret
dec
add
push
pop
jno
fiadd
clc
bound
mov
mov
inc
mov
ret
mov
sbb
lea
in
push
add
mov
push
loop
push
inc
jecxz
push
xor
pop
xchg
in
jle
rol
jmp
cmp
imul
sub
add
dec
add
jge
js
xchg
xor
(bad)
cdq
(bad)
movs
sbb
sbb
sbb
or
ja
add
mov
jo
inc
shr
sbb
and
and
mov
test
dec
popa
inc
nop
nop
pop
sub
add
add
push
cli
jo
rcl
pushf
scas
out
dec
aaa
add
jo
and
adc
push
mov
mov
add
push
jo
push
hlt
imul
add
jo
or
push
xchg
or
int3
call
adc
jmp
xchg
inc
adc
dec
or
push
inc
fild
adc
dec
add
inc
test
mov
jb
dec
or
(bad)
dec
dec
xor
jno
stos
dec
mov
sub
add
pusha
or
cmp
lds
pop
inc
or
or
ins
push
retf
mov
sbb
cmps
int3
pushf
pop
mov
mov
or
loopne
xchg
xchg
inc
pop
loopne
inc
add
shr
sbb
and
fnstsw
(bad)
bnd
add
pop
outs
ins
mov
or
xchg
xchg
adc
add
scas
lea
push
in
push
add
adc
stos
shr
ja
sbb
mov
add
xor
stc
push
adc
aam
mov
pop
clc
pop
(bad)
(bad)
call
add
leave
push
pop
inc
test
rcl
mov
and
add
and
dec
or
aaa
pop
and
imul
push
ret
jne
ins
bnd
pop
mov
fsubp
(bad)
(bad)
push
fimul
enter
adc
or
jbe
fs
jmp
mov
sbb
push
mov
ins
xor
mov
dec
xor
dec
dec
xor
sbb
inc
mov
fsubr
jbe
dec
or
cdq
out
jo
mov
mov
fnstcw
dec
add
xor
add
lods
jno
clc
and
xchg
push
outs
ins
push
mov
xlat
out
inc
aad
mov
fst
mov
lods
shl
pop
add
aad
inc
loopne
push
shl
addr16
arpl
fs
jb
pop
arpl
rol
sahf
mov
retf
stos
adc
add
mov
pop
je
xor
xlat
pusha
inc
fstp
fdiv
cmp
mov
push
test
and
call
xchg
aad
test
mov
pop
cmp
pop
retf
popf
add
jbe
mov
fcomp
(bad)
int3
adc
frstor
loopne
dec
xlat
cmps
cmp
in
cmp
sub
cmps
or
loopne
out
push
fbld
xchg
xor
and
in
sub
ret
rol
cmc
sub
(bad)
sbb
call
mov
cmp
adc
add
sbb
jmp
das
xor
out
add
sub
not
and
icebp
and
add
pop
mov
test
and
cld
inc
mov
sbb
add
add
jo
inc
or
inc
and
loopne
jbe
pop
dec
dec
ror
adc
add
call
pop
adc
push
jmp
mov
fsubp
shl
inc
test
shr
sub
loopne
adc
pop
adc
dec
idiv
test
mul
push
or
test
push
push
mov
inc
and
mov
cmp
xchg
call
pop
jne
inc
call
add
outs
imul
inc
mov
push
shl
or
push
mov
add
jb
mov
popf
rol
mov
sub
outs
loope
jno
inc
fdiv
ja
add
sbb
inc
das
mov
push
xor
mov
icebp
loopne
xchg
xor
jae
push
add
mov
inc
or
cmp
les
mov
sbb
aam
lock
mov
or
cwde
pop
add
add
ret
aad
xchg
mov
adc
mov
mov
push
js
mov
or
mov
push
xor
mov
sar
mov
jmp
mov
nop
cmp
push
mov
mov
pushf
pushf
int3
neg
fmul
data16
sahf
and
ins
mov
daa
and
xchg
loop
xchg
xchg
daa
pop
(bad)
leave
leave
enter
fdiv
fs
leave
mov
repnz
in
ret
std
and
jns
jb
dec
jg
and
ja
les
dec
loopne
pop
lods
push
push
mov
add
xchg
push
movmskps
es
cmp
call
test
jecxz
stos
stos
nop
icebp
aas
dec
or
mov
das
out
jno
sbb
xor
add
inc
xor
mov
push
je
cld
jg
sub
mov
jo
js
and
stos
dec
loopne
adc
les
dec
test
jp
scas
adc
fsubr
and
jo
out
ja
or
adc
mov
or
lock
jae
arpl
imul
sub
(bad)
hlt
pushf
rol
or
mov
add
lock
dec
mov
das
leave
and
nop
ins
call
ds
loopne
out
add
adc
add
add
adc
in
sbb
or
iret
ror
adc
push
sub
xor
cmps
add
add
out
xchg
sbb
add
in
mov
add
and
pushf
shr
jo
mov
sbb
out
xor
or
daa
out
mov
or
sbb
out
sti
lods
add
push
dec
push
fiadd
and
bound
out
or
aam
pushf
scas
aaa
add
dec
mov
inc
daa
out
loopne
add
push
mov
cmp
xor
out
test
mov
adc
out
les
stos
or
ja
out
ins
out
adc
dec
jns
daa
loopne
adc
out
push
mov
xchg
dec
add
call
mov
loopne
or
push
sbb
xor
dec
jmp
add
push
jnp
xor
or
fadd
out
out
mov
add
add
les
pop
pop
outs
add
dec
inc
mov
ud1
fadd
rcl
loope
rcl
test
rol
push
inc
mov
pextrw
inc
outs
sub
(bad)
ret
push
pop
cwde
cmp
les
mov
scas
push
out
xor
ins
mov
and
dec
mov
int3
cld
jnp
call
pop
pusha
add
dec
cmp
dec
ds
pop
cli
mov
mov
in
outs
ror
(bad)
pushf
ja
lods
jecxz
mov
inc
or
or
adc
ret
inc
xlat
and
in
add
shl
dec
bound
fimul
dec
hlt
inc
jecxz
inc
dec
stos
lock
xchg
(bad)
call
adc
add
clts
jecxz
add
retf
push
add
rcl
ins
pop
wbinvd
scas
and
adc
push
movs
aaa
add
add
xchg
popa
pusha
pop
xchg
fsubr
push
pusha
jg
test
mov
cmps
js
jg
ds
dec
inc
or
ss
dec
mov
dec
lock
dec
pop
sub
fs
or
outs
data16
popa
or
lea
adc
dec
mov
push
stos
pushf
gs
in
or
pushf
dec
gs
mov
pop
cdq
lds
pop
int3
faddp
or
inc
push
adc
xchg
inc
fmul
add
add
sbb
sbb
inc
mov
outs
adc
inc
ret
ret
in
mov
cli
pop
in
rcr
mov
jl
and
pop
popa
jno
inc
add
adc
gs
add
xlat
add
sbb
imul
pop
xor
data16
jnp
shr
lods
adc
jno
scas
push
or
aaa
mov
sbb
out
imul
xchg
fidivr
xchg
arpl
add
or
xchg
pop
outs
push
dec
mov
ins
rol
dec
push
mov
xor
mov
sbb
jo
sub
mov
push
dec
out
sub
outs
add
pop
add
mov
mov
push
adc
push
dec
jmp
push
outs
push
sub
and
pop
clc
xchg
ins
adc
arpl
cmp
dec
jne
sub
imul
sahf
add
popf
push
cld
imul
out
dec
push
push
push
test
fsubr
es
mov
push
out
mov
imul
push
push
imul
dec
ins
fs
mov
inc
out
in
pop
fadd
neg
jnp
clc
fs
push
lock
push
inc
jl
idiv
jl
pusha
push
inc
mov
jbe
neg
rol
clc
adc
loopne
idiv
mov
push
cmp
push
setle
(bad)
ds
push
pop
femms
movs
(bad)
fsub
xchg
ds
pusha
sti
cs
xchg
push
hlt
cdq
(bad)
xchg
push
push
inc
pop
sti
pop
sti
push
dec
cwde
push
in
push
cmp
cwde
xchg
push
xchg
push
movs
cmp
fdivp
es
dec
mov
data16
push
jl
out
mov
push
aam
movs
scas
in
push
add
mov
cmp
in
xchg
push
je
mov
out
cmp
js
xor
push
sbb
cmp
mov
ins
cld
data16
pop
push
fdiv
fidivr
add
cmp
movs
push
mov
ins
lock
and
add
ds
pop
and
inc
sub
sbb
pop
lock
sti
lods
jp
popa
fdiv
ins
jp
cld
mov
dec
ret
nop
fistp
(bad)
push
pop
add
sbb
outs
jae
lahf
cmps
ds
or
arpl
mov
(bad)
sbb
dec
jae
out
ins
push
dec
daa
cmp
sbb
push
stos
les
mov
pop
fadd
xor
inc
sub
cmp
or
push
outs
adc
mov
imul
cmc
inc
and
scas
cmp
fild
add
loopne
data16
push
fimul
sub
or
in
mov
mov
mov
mov
icebp
icebp
mov
es
test
es
push
jge
dec
push
in
mov
scas
aad
aas
sub
aas
sbb
mov
jle
mov
sbb
mov
pop
lock
xor
sti
out
mov
dec
mov
cmp
(bad)
neg
loopne
push
sub
mov
lock
push
fld
aas
sub
aas
xor
push
aaa
mov
push
mov
xor
add
push
cmp
aas
adc
imul
jecxz
sbb
inc
push
and
jmp
pusha
and
(bad)
push
mov
push
sub
fdivr
jmp
dec
and
movs
pop
jns
and
stos
cmp
shl
xchg
and
sub
and
retf
ja
ret
add
pop
push
bound
js
pop
inc
loopne
test
out
mov
dec
(bad)
pop
mov
repz
push
push
mov
adc
cmp
repz
inc
add
in
idiv
pop
clc
push
in
push
les
push
idiv
mov
pop
adc
arpl
in
sbb
(bad)
lar
cld
std
mov
syscall
add
xchg
sbb
in
setle
repz
(bad)
add
or
push
hlt
push
(bad)
adc
or
add
verw
adc
inc
ins
outs
jae
fs
jns
gs
(bad)
ins
int
or
sbb
fs
or
or
lds
pop
dec
jb
fimul
push
sbb
mov
cmp
push
stos
iret
jnp
inc
sub
push
mov
je
iret
addr16
push
int
inc
les
or
popf
xor
ror
aad
iret
test
xor
lods
push
gs
ss
mov
inc
push
and
jmp
xor
jne
sub
scas
rol
xor
retf
ins
test
push
dec
pop
or
xchg
xlat
sub
adc
scas
push
mov
dec
jecxz
and
fadd
add
test
add
pop
jle
add
mov
add
add
or
inc
sbb
dec
sbb
push
imul
push
push
mov
jl
data16
fld
add
sbb
das
sub
sbb
loope
das
xchg
(bad)
gs
jle
jmp
(bad)
nop
push
mov
push
add
push
mov
mov
xor
push
push
push
fs
call
dec
mov
fmul
push
add
clc
dec
cld
mov
sbb
jo
jge
add
sub
add
mov
daa
mov
mov
push
cmp
pop
test
je
mov
push
ins
adc
pop
sbb
xor
xchg
or
aaa
fstp
mov
adc
mov
dec
in
in
mov
mov
cmp
and
mov
sbb
pop
jo
adc
pop
pop
pop
jbe
push
mov
retf
pusha
mov
ret
jmp
jmp
cdq
jge
ins
pop
pop
pop
inc
pop
ret
add
or
ja
dec
loopne
jbe
gs
dec
add
jae
aam
adc
inc
adc
cld
ss
add
jb
xor
pop
pop
pop
cmp
xchg
cld
xchg
and
lea
mov
add
test
cld
adc
xor
mov
inc
ins
xor
imul
mov
pop
inc
push
or
sub
inc
mov
call
pop
pop
pop
adc
push
mov
(bad)
xor
push
sbb
jg
jmp
mov
mov
cmovge
pop
jae
imul
xchg
je
jns
mov
outs
fwait
std
xor
cld
and
fwait
and
pop
adc
jae
fs
inc
adc
adc
packuswb
sahf
push
mov
push
dec
adc
retf
sbb
add
ror
(bad)
push
jmp
in
fisttp
enter
in
mov
mov
add
cmp
cli
retf
mov
mov
std
cmp
xchg
mov
xor
cmp
xlat
sbb
imul
mov
or
push
mov
sbb
pop
cwde
mov
les
inc
sbb
in
mov
sub
mov
jb
or
outs
js
inc
call
fwait
pop
sub
inc
cmp
mov
sbb
ret
(bad)
sub
adc
clc
aaa
test
and
cmp
jmp
es
shl
jnp
sub
or
inc
push
into
sbb
add
(bad)
les
lods
inc
lds
(bad)
mov
jg
dec
mov
cmps
ja
inc
outs
adc
add
pop
mov
ja
dec
fs
mov
dec
ror
add
enter
or
clc
add
pop
xor
jp
call
mov
jle
dec
and
in
push
retf
or
shr
sti
push
and
or
sbb
xlat
jbe
cmp
sbb
push
or
jne
add
enter
mov
inc
add
call
inc
les
xor
mov
retf
mov
imul
mov
inc
xor
enter
loope
ret
mov
or
add
or
sub
or
adc
loopne
in
sti
inc
outs
test
push
pusha
inc
lods
jo
mov
call
fwait
push
push
and
push
jmp
clc
add
test
push
or
jmp
dec
std
push
cmp
sub
adc
adc
jns
(bad)
add
int3
jnp
test
into
lock
test
jl
xor
(bad)
scas
ror
popa
test
or
cdq
loopne
ret
jb
mov
sahf
push
mov
xor
mov
xchg
and
sub
std
add
test
out
out
aas
nop
mov
mov
sub
xor
int3
jp
xor
mov
mov
fsub
add
jmp
sbb
test
xchg
cmp
test
js
arpl
js
mov
fild
imul
xor
pop
cmps
enter
cmp
mov
xchg
and
fdivr
aad
out
mov
outs
add
adc
cdq
pop
cmp
push
sub
sbb
lock
test
cld
pop
xchg
movs
cmp
call
add
(bad)
loope
rol
adc
mov
sahf
loope
js
add
xor
ja
dec
inc
cdq
jmp
xchg
push
inc
cwde
or
add
pop
adc
pop
sub
or
hlt
mov
jecxz
sahf
inc
ja
push
lds
sub
loop
fiadd
test
lods
jae
add
sub
dec
add
adc
in
sbb
cli
not
adc
add
mov
xlat
pop
hlt
push
mov
(bad)
xchg
into
cmc
hlt
xchg
(bad)
sub
mov
or
mov
push
mov
xchg
xor
in
mov
mov
mov
push
adc
fwait
xor
jo
call
inc
sbb
sub
inc
dec
cmp
jl
rcl
pop
sti
sbb
mov
or
mov
jo
rcr
mov
xor
lds
mov
cmp
mov
into
mov
cwde
or
adc
or
push
pop
push
mov
js
or
jle
add
ss
cmp
sbb
sbb
adc
enter
je
test
loop
cld
jmp
ret
mov
(bad)
repnz
xchg
mov
add
lea
push
bswap
add
daa
push
pop
sub
loopne
jo
in
rep
sbb
or
clc
mov
mov
(bad)
stos
adc
sbb
popa
cs
pop
jns
mov
js
mov
jae
mov
rol
xor
(bad)
cmp
stc
imul
shl
or
add
test
mov
je
mov
inc
cmp
addps
int3
jo
int
je
or
sbb
cmp
sub
and
test
cdq
jg
add
ret
inc
aam
mov
cmp
cmp
mov
lea
lahf
push
sub
out
repz
jo
xchg
inc
xchg
adc
mov
into
mov
xor
or
sub
lahf
xchg
fs
and
shl
test
cmp
in
stos
dec
or
movs
in
ret
cmp
push
dec
sbb
dec
mov
push
or
or
dec
int3
test
inc
nop
xchg
cld
push
inc
sbb
mov
cld
inc
adc
mov
cli
nop
dec
jne
push
out
and
push
ja
ja
imul
jo
fsub
or
test
jl
ret
shl
clc
or
sbb
pop
jl
sbb
push
or
cmp
rol
and
outs
pusha
mov
(bad)
movs
sub
pusha
popa
sbb
xchg
pusha
add
aas
cs
rcl
ret
sub
test
or
stos
push
scas
cdq
mov
pusha
ss
aaa
inc
fmul
mov
stos
stos
adc
movs
push
ret
jmp
imul
(bad)
aam
call
pusha
fwait
jns
jmp
pop
pop
add
sbb
mov
lock
cmp
clc
sbb
dec
in
jne
sahf
xchg
cmp
mov
mov
mov
adc
push
jle
mov
mov
sbb
push
xor
xor
sbb
mov
pop
xor
lock
nop
pop
mov
add
xor
sahf
aaa
xchg
movs
xor
cld
push
addr16
dec
mov
cmp
js
pusha
data16
fs
sub
psubb
movs
test
ficomp
pop
push
sbb
add
scas
xor
adc
add
sbb
xchg
cs
fsubr
pop
in
inc
ret
fucomip
test
cmp
mov
and
pop
mov
add
sti
call
add
mov
enter
and
nop
loope
out
xchg
cli
les
aam
stos
lock
fmul
lock
xchg
dec
adc
ins
je
mov
rcr
cld
cmp
je
add
push
mov
xor
lock
hlt
cmp
out
push
dec
jnp
fimul
mov
inc
and
je
pop
sbb
ret
sub
push
pop
sub
add
pop
mov
je
aaa
fdiv
sbb
je
mov
mov
dec
add
cmp
pop
cdq
out
adc
int3
push
pushf
or
sbb
jmp
sub
pop
mov
sbb
lea
ds
xor
and
sbb
push
mov
shr
test
jp
push
adc
add
lods
lea
add
cmp
ret
mov
dec
(bad)
xchg
rcl
lea
mov
pusha
dec
xor
adc
cmp
std
push
xor
js
sbb
sar
xor
mov
daa
push
(bad)
nop
mov
cmp
rol
hlt
mov
outs
adc
mov
xor
loopne
push
pusha
cld
in
push
push
jle
pop
pop
aam
cmps
or
pusha
lds
and
adc
rol
call
ja
jb
inc
push
js
pop
push
sbb
fs
jecxz
inc
inc
cs
inc
pop
push
xor
xor
xor
ss
pop
mov
cwde
sbb
jae
add
adc
and
push
imul
lea
xor
push
in
and
stos
(bad)
or
push
cmps
mov
fidivr
xor
jmp
sbb
(bad)
dec
mov
cmp
adc
hlt
fcom
jo
push
adc
ja
lds
dec
cmp
mov
or
sbb
push
sbb
lea
rcr
scas
fild
pop
fiadd
int3
loopne
mov
sub
int3
pusha
push
out
push
adc
pop
fs
test
ja
ja
pop
push
jbe
xchg
es
pop
pop
dec
xor
xchg
mov
sti
sbb
adc
push
loopne
les
int3
aas
push
cmp
sbb
jmp
es
inc
pop
into
and
push
sbb
je
inc
test
adc
sbb
pushf
clc
je
mov
fdivr
cmp
enter
jne
add
pop
arpl
cld
xor
adc
or
mov
or
mov
mov
or
mov
push
add
jl
je
test
adc
add
loop
iret
adc
rol
add
push
mov
add
xor
stos
sbb
mov
push
mov
vpmaxub
test
(bad)
pop
add
push
cmp
lock
pushf
inc
ins
lods
jo
cmp
mov
adc
mov
(bad)
sbb
xlat
add
jne
pavgb
push
mov
test
retf
and
inc
ret
and
enter
push
lods
inc
jno
das
(bad)
adc
jns
sub
lds
sub
loop
sbb
sub
pop
push
add
scas
pushf
sub
sbb
pop
or
inc
jge
or
sahf
fadd
ror
pop
stos
imul
aam
les
dec
or
imul
adc
sub
push
fstp
(bad)
jno
xor
or
adc
pop
loope
push
sub
push
aaa
(bad)
(bad)
xor
dec
dec
push
cmp
ds
sbb
lods
xor
fsubr
push
xor
sub
(bad)
cwde
aam
mov
ds
fcom
mov
mov
test
inc
dec
jne
cmp
inc
ror
pop
mov
jae
lods
shl
les
les
or
add
mov
add
fs
mov
in
push
je
loop
out
mov
add
mov
test
xadd
cmp
add
sub
xchg
pushf
inc
gs
dec
mov
cmp
fmul
call
scas
ror
mov
adc
mul
cmp
or
pop
enter
es
ins
push
push
jae
dec
adc
lock
je
sbb
dec
adc
repnz
ror
jecxz
out
mov
jl
push
test
push
jmp
lods
mov
lock
call
shl
sub
jne
mov
mov
cmp
mov
jg
mov
cmp
cld
xlat
in
push
lock
jp
sbb
xor
mov
loopne
add
dec
dec
cmp
sbb
pop
mov
jmp
je
add
nop
push
jmp
enter
or
adc
xchg
clc
das
dec
adc
fmul
imul
or
sbb
push
pop
and
push
inc
pusha
inc
dec
jnp
adc
sub
in
mov
fmul
cwde
pop
xor
inc
lds
fs
sbb
dec
sub
sbb
out
fsubr
outs
mov
and
sub
dec
xchg
ror
jne
popa
mov
imul
mov
or
les
jne
or
mul
pop
sub
repz
cmp
cmp
adc
or
adc
pop
add
cli
ins
outs
shr
inc
xchg
inc
sub
inc
pop
(bad)
movs
xor
jo
inc
adc
mov
sbb
cwde
adc
int3
inc
dec
fiadd
sbb
mov
mov
mov
mov
pop
xchg
mov
mov
in
mov
add
arpl
sbb
arpl
mov
pop
xchg
in
jae
add
and
in
loopne
xor
push
add
cld
cdq
push
push
or
jl
mov
add
ja
push
or
xor
push
push
xchg
lods
arpl
add
ss
imul
jbe
pop
mov
in
xchg
das
in
xlat
outs
retf
imul
jmp
adc
pop
add
lods
and
sbb
fmul
xchg
ins
daa
jb
shr
pop
push
repnz
movs
adc
jnp
rol
jo
add
aas
pop
iret
ja
or
stos
or
xlat
outs
push
cmp
sub
add
pusha
mov
sub
xchg
lods
adc
sar
pop
arpl
jbe
mov
xor
sahf
nop
sub
in
add
stos
add
loopne
inc
add
sti
xor
mov
lea
mov
inc
mov
push
adc
mov
addr16
nop
cmp
ret
pop
jg
outs
sbb
ret
dec
(bad)
push
adc
dec
dec
add
call
jp
nop
mov
sub
stos
mov
push
movs
sbb
xor
in
(bad)
sbb
les
cmp
sti
test
inc
sbb
mov
js
mov
mov
retf
rol
pop
cmp
rol
push
inc
inc
in
cmp
pop
pop
push
or
int3
movs
dec
inc
push
add
adc
loopne
xchg
mov
rcl
inc
add
push
adc
lds
or
je
enter
rcr
mov
pop
jl
idiv
sbb
(bad)
xor
scas
xlat
jg
dec
jno
push
ins
xor
mov
pop
cmp
jns
popf
push
jns
fisub
cmp
mov
js
add
jmp
cmps
clc
dec
call
jo
add
sub
adc
std
fistp
adc
mov
push
xchg
clc
je
add
add
pop
adc
rol
sbb
inc
add
add
pusha
push
jecxz
sub
dec
movs
es
pop
inc
jnp
jmp
inc
push
ds
je
int
daa
fwait
sub
add
int3
lock
lahf
(bad)
mov
sahf
hlt
lahf
push
mov
fldcw
aaa
jle
out
fcom
scas
adc
pop
mov
add
clc
mov
dec
test
jl
sub
aad
inc
popa
mov
dec
loopne
cs
push
mov
shr
push
mov
xor
xor
inc
dec
jne
fwait
mov
add
push
retf
pusha
adc
lahf
push
enter
sbb
sbb
sbb
cmp
jne
xor
sub
mov
inc
add
push
or
inc
jmp
xchg
ja
or
xor
hlt
fadd
dec
repz
test
adc
mov
iret
and
sub
adc
jne
or
sub
mov
inc
imul
mov
add
xor
pushf
push
sbb
mov
sbb
daa
aaa
push
mov
ret
rol
imul
pusha
sub
push
in
iret
mov
mov
add
sbb
aad
add
js
push
jl
aas
push
mov
out
cld
push
arpl
push
pop
and
movs
sahf
pop
test
and
xor
pusha
loopne
imul
addr16
xor
hlt
addr16
and
jne
and
sub
xchg
sbb
or
out
das
jle
sub
ins
nop
dec
push
test
or
shl
inc
bound
movs
cmps
and
ds
sbb
mov
mov
or
mov
mov
jbe
inc
adc
add
sbb
enter
add
add
mov
jmp
jae
jnp
and
sbb
sbb
lea
xchg
push
in
xor
mov
and
adc
inc
and
psubw
fsub
mov
inc
push
push
and
mov
ret
sbb
pop
aaa
lds
add
sub
outs
mov
adc
jbe
sbb
add
cmp
or
sidtd
jae
inc
pop
push
jmp
add
int
pop
pop
test
xchg
sbb
pop
call
inc
(bad)
test
cwde
shr
js
stos
add
rol
das
loopne
sub
repnz
add
adc
pop
stos
movs
mov
bound
inc
push
jmp
rcr
or
add
push
adc
loop
add
pxor
xor
adc
or
rol
jge
ss
xor
jne
and
mov
outs
add
mov
call
sub
sub
ja
sbb
push
mov
pop
add
or
lahf
repnz
loopne
push
(bad)
ja
out
pusha
dec
ret
in
add
je
mov
xor
or
sbb
(bad)
dec
and
xchg
mov
add
mov
adc
xchg
mov
rcl
mov
sbb
add
jl
push
cmp
dec
mov
into
cmp
jne
sbb
xchg
rcl
(bad)
imul
adc
push
adc
mov
cmp
sub
inc
sbb
add
mov
push
sbb
pop
(bad)
lock
ret
(bad)
mov
mov
mov
cmp
push
adc
push
push
mov
mov
in
pop
adc
xor
mov
lods
loopne
cmps
and
sbb
fistp
pop
add
push
inc
ficom
pusha
pusha
push
inc
cld
push
arpl
lods
jbe
or
push
sub
dec
adc
int
push
loop
into
daa
dec
clc
add
jns
add
xchg
add
add
add
rol
jp
bound
push
sbb
call
add
shl
rcl
and
push
dec
mov
add
sub
test
or
pushf
fs
adc
jnp
add
repz
jecxz
xor
mov
and
out
lea
push
pop
sbb
or
cli
test
xchg
mov
inc
push
sub
mov
sbb
and
sbb
sub
push
loopne
stos
adc
cmp
ins
and
cdq
inc
lahf
idiv
jo
clc
or
xlat
pop
jmp
or
mov
cs
mov
fmul
add
and
sbb
mov
data16
lock
push
push
rcr
dec
outs
out
xor
mov
es
fild
jb
inc
add
jo
movs
adc
int3
sub
mov
or
ja
jnp
dec
sbb
jmp
add
or
or
push
ucomiss
(bad)
call
adc
adc
sbb
sbb
push
add
add
and
sbb
adc
daa
push
sub
repz
dec
pop
outs
xor
iret
repz
mov
imul
sub
sub
dec
pop
outs
jg
jns
out
mov
sahf
out
out
pop
out
sbb
sub
inc
je
out
push
popa
outs
jge
push
in
js
loopne
add
sbb
cs
js
loopne
rol
inc
fsubr
movs
and
inc
es
adc
dec
push
bound
mov
sbb
and
in
fmul
pop
fcmovne
sub
xchg
xor
or
pop
cmp
pusha
sub
shl
and
sub
or
int3
and
inc
inc
and
sbb
sub
ret
shl
jmp
inc
enter
jmp
sbb
dec
jmp
sbb
sub
(bad)
sbb
sbb
jmp
sbb
xor
add
jmp
bound
rol
popf
add
mov
inc
je
sbb
mov
pop
dec
inc
js
mov
push
or
inc
iret
fimul
sub
xchg
fsubr
sub
mov
js
add
rol
shr
adc
xchg
pusha
cdq
inc
lea
jo
sub
cmp
les
aas
out
push
inc
and
or
jnp
mov
xchg
mov
(bad)
inc
mov
loop
jbe
cmp
dec
cmp
in
mov
lods
sbb
lea
jg
inc
lea
pusha
mov
jb
aad
xchg
lods
dec
adc
lock
jge
dec
sub
xchg
inc
and
inc
and
imul
mov
xor
or
mov
and
mov
inc
cmp
data16
xor
xchg
inc
xor
stos
inc
popa
rcl
mov
enter
loopne
cmp
rcr
stc
ficom
pop
mov
jbe
mov
jno
xor
cmc
xor
bound
shl
dec
pushf
nop
inc
sub
xadd
sub
mov
test
setne
neg
clc
jmp
enter
test
xor
xchg
fild
xor
(bad)
into
and
inc
push
inc
adc
push
inc
lods
movs
frstor
cmps
add
or
pop
outs
sub
cmp
aas
cwde
aas
adc
and
pmaxub
aaa
gs
rcr
xor
daa
and
test
push
add
or
push
or
cmp
je
mov
pusha
pop
outs
or
inc
inc
add
aaa
adc
cmp
sbb
mov
adc
mov
dec
xor
push
xor
pop
dec
or
xchg
sub
popa
ins
mov
xor
jbe
xchg
xor
sbb
push
inc
and
add
inc
or
pop
jae
or
frstor
nop
dec
sti
pop
addr16
add
sub
cld
and
mov
sub
das
jl
inc
in
clc
and
ja
xchg
mov
sbb
cmp
adc
add
jmp
add
dec
fadd
call
outs
or
push
or
cld
in
add
mov
pop
repnz
imul
push
jns
mov
pop
(bad)
cs
das
push
jo
lock
out
mov
jns
out
enter
dec
pop
out
mov
cmps
or
mov
repz
aad
test
clc
cmps
lds
mov
pushf
out
call
loope
sar
js
and
repnz
lock
and
xchg
or
cmp
push
sbb
xchg
and
cld
leave
nop
pop
enter
push
or
nop
or
mov
rcr
or
xor
cwde
add
sub
ja
pushf
sbb
pusha
pop
test
loopne
out
movs
aas
adc
add
in
and
xor
add
test
shl
sbb
pop
push
mov
aas
pop
adc
push
dec
add
mov
aaa
pop
push
sbb
add
xor
test
xchg
ss
data16
mov
pop
push
sub
ss
(bad)
int
or
(bad)
mov
xchg
pop
fisubr
pop
das
xor
ss
stc
add
add
push
push
xchg
or
cmp
aaa
int3
rol
and
arpl
mov
dec
mov
inc
ds
and
pop
out
push
sbb
lds
or
pusha
aas
push
pop
add
aaa
mov
cdq
push
sub
ror
mov
jp
cs
or
dec
fidiv
and
xor
mov
xchg
xor
dec
mov
add
push
pop
or
push
inc
push
xchg
es
dec
or
das
cdq
inc
sbb
dec
inc
mov
imul
out
jbe
push
sbb
add
xor
push
jmp
lahf
outs
shl
ds
ins
fcom
aaa
ud0
jbe
push
jg
cmp
mov
or
call
pop
add
mov
push
pop
push
push
jo
pushf
or
push
push
add
ror
loopne
mov
jmp
call
in
push
les
ss
dec
test
dec
call
inc
push
cwde
add
lock
fwait
jae
in
daa
jb
hlt
es
ins
aaa
jle
pop
in
push
loopne
pushf
mov
loopne
inc
pop
add
and
sbb
data16
add
cmp
(bad)
shl
add
push
shl
mov
call
dec
sti
repz
enter
jmp
jp
iret
and
(bad)
retf
loopne
je
xor
out
dec
out
je
xor
mov
sbb
sub
add
in
and
mov
(bad)
icebp
mov
scas
aaa
(bad)
call
std
scas
or
loopne
hlt
pop
fisubr
hlt
or
inc
xor
retf
mov
fisttp
mov
test
add
(bad)
inc
xor
das
push
mov
mov
rol
hlt
mov
push
int3
outs
push
pop
jne
aaa
or
shl
rol
outs
imul
ret
div
lea
movs
add
or
es
aam
xchg
sbb
cld
sub
and
(bad)
in
mov
add
cmp
in
call
adc
lock
popa
pushf
jg
cmp
fstp
push
mov
into
push
clc
jecxz
xor
int
cmp
or
out
add
inc
lods
inc
sti
jg
mov
pop
sub
dec
mov
ss
add
ss
into
sub
lea
ret
jg
add
xor
ret
or
retf
inc
xor
pop
xor
jne
xchg
add
xor
sbb
add
xchg
adc
or
fstp
mov
mov
ret
(bad)
cwde
in
(bad)
call
dec
cmp
sbb
cmp
dec
inc
mov
ret
push
adc
dec
mov
xor
pop
icebp
sub
add
scas
pop
ss
add
jne
push
and
ins
jae
and
push
cmp
jae
and
shl
xor
cmp
cmp
mov
inc
or
cmp
ins
sbb
pusha
adc
dec
push
or
cmps
inc
sub
pop
dec
mov
ins
adc
fadd
add
mov
xor
adc
pop
adc
cld
jo
xor
and
ins
or
mov
or
adc
mov
loope
push
xchg
xchg
and
sub
adc
(bad)
loopne
cmp
shr
xchg
cmp
or
(bad)
inc
jbe
repz
data16
leave
jmp
adc
xor
xor
fcom
jge
and
xchg
and
mov
ins
nop
xor
and
shr
inc
test
je
xor
adc
pop
cmp
test
push
add
mov
add
pop
jmp
retf
pushf
rol
(bad)
jo
mov
or
call
or
test
sub
lods
std
pushf
ja
mov
push
jmp
push
dec
and
push
dec
loopne
clc
iret
push
push
mov
and
cmp
push
test
(bad)
into
mov
jne
daa
retf
sub
je
mov
sbb
aaa
pop
inc
pop
lods
rcl
leave
add
xor
pop
fadd
ret
mov
push
scas
lods
mov
jle
mov
push
(bad)
and
test
loopne
call
int3
sbb
pusha
imul
aaa
mov
inc
sbb
or
fsub
adc
or
inc
lds
ins
ror
dec
loop
loopne
push
lods
jne
jb
cli
inc
icebp
mov
in
mov
xchg
ret
adc
enter
jne
inc
xchg
pop
xchg
or
add
ds
cwde
lea
and
shr
rol
mov
hlt
adc
test
loope
adc
out
jg
push
das
push
mov
jo
or
retf
jge
xchg
mov
xchg
jmp
sub
or
add
dec
sbb
outs
(bad)
sub
cld
mov
push
or
in
cmc
je
mov
or
cli
jns
jo
push
je
sbb
call
jo
mov
xor
add
(bad)
mov
out
xor
popa
add
dec
jl
xor
jno
jo
jge
aaa
and
cmp
repz
push
stos
xchg
sub
or
mov
or
vmovaps
(bad)
or
and
cmp
loope
das
daa
xor
int
ins
sbb
pop
or
fst
ss
aad
stc
lahf
ins
das
sub
push
pop
dec
bound
rcr
mov
add
outs
jae
or
xor
cs
jo
add
sbb
mov
data16
inc
outs
into
ins
jno
add
js
push
jecxz
pop
retf
xchg
inc
js
and
cmp
movs
or
movs
xchg
clc
cmp
adc
mov
or
aaa
and
and
jmp
sub
push
shl
sahf
dec
ja
lods
push
js
jp
or
dec
repz
inc
repz
pop
hlt
or
push
or
mov
fild
add
adc
scas
push
inc
das
loop
cmps
aam
stc
cmp
mov
in
jb
addr16
dec
dec
or
mov
fst
hlt
inc
and
hlt
sub
cld
jp
out
cmp
cmp
xchg
xor
mov
cmp
int3
(bad)
in
(bad)
daa
loopne
lods
cwde
pop
push
mov
and
cmps
jmp
sahf
scas
pmaxub
pop
cmovne
adc
sti
cmc
mov
ja
and
inc
or
fiadd
xor
inc
add
je
dec
lock
mov
sbb
xlat
push
and
out
mov
jl
stos
inc
test
add
pop
inc
push
and
jo
xor
je
arpl
xor
or
pop
add
sbb
ins
stos
pusha
sub
sub
jmp
mov
pop
sar
inc
cmp
and
aaa
call
ja
mov
and
mov
mov
lds
sbb
dec
loopne
sub
dec
cmp
xor
add
pop
aad
or
inc
mov
rcr
jbe
std
stc
imul
imul
xchg
or
dec
inc
ret
stos
popf
add
les
xor
push
fst
je
loopne
dec
push
sbb
push
pop
push
jge
mov
(bad)
pusha
mov
sub
inc
mov
jnp
or
dec
xor
xchg
out
lea
fimul
sub
adc
push
adc
pushf
inc
sub
out
push
sbb
inc
push
mov
pusha
inc
jmp
inc
push
iret
add
mov
cmp
mov
cmp
pop
sub
xchg
fcomp
call
and
clc
mov
pop
add
jbe
jmp
ficomp
ficom
cmp
out
test
push
dec
lods
fst
push
mov
ja
retf
add
and
inc
adc
cmp
fmul
inc
or
adc
add
push
xor
push
cmp
push
push
mov
sub
mov
and
jb
sti
sahf
add
push
iret
or
jmp
aaa
cmp
and
sub
dec
sbb
sbb
shr
jne
mov
rcr
cmp
aam
push
fucomip
inc
loopne
or
and
sbb
call
sbb
movs
mov
dec
hlt
js
inc
adc
fist
cli
sub
pop
neg
je
cmp
mov
pop
pushf
sbb
(bad)
xchg
cmp
jne
mov
jmp
push
loopne
push
mov
aas
mov
cmp
dec
dec
cld
and
jbe
mov
leave
data16
jecxz
and
fadd
out
push
les
dec
adc
add
dec
add
out
jle
aaa
je
mov
push
(bad)
shl
push
add
add
sub
daa
outs
fadd
cmp
push
mov
sbb
fldcw
add
pop
jo
push
je
loope
push
cmp
adc
and
mov
inc
cmp
sbb
xor
je
jmp
(bad)
rcl
push
mov
js
add
push
cmps
push
cmps
mov
xor
xor
cdq
aad
sbb
nop
push
js
sti
test
bound
dec
pop
adc
scas
push
rcr
dec
out
add
mov
cs
push
test
aaa
les
pusha
adc
add
pushw
push
push
arpl
ins
add
lods
sbb
push
dec
adc
sahf
push
xchg
xchg
scas
lahf
xor
(bad)
(bad)
mov
test
pushf
push
mov
mov
loopne
dec
sub
and
leave
and
dec
in
dec
es
pusha
test
dec
cs
and
pop
xor
xor
xlat
fs
push
xor
imul
jnp
inc
aas
cmp
jae
push
mov
pop
and
idiv
push
cmp
mov
fisubr
inc
inc
cdq
loopne
sbb
xor
mov
xor
add
fwait
and
(bad)
rcl
inc
mov
pusha
mov
daa
xor
mov
add
test
xor
ja
adc
sub
xor
mov
inc
cdq
and
lahf
cs
pusha
adc
or
adc
xchg
jp
push
adc
call
push
stos
push
mov
imul
iret
xchg
or
mov
push
inc
xor
inc
xchg
adc
sbb
adc
mov
nop
mov
popa
mov
test
adc
xlat
sbb
adc
iret
sbb
inc
lahf
outs
rol
inc
xor
adc
pop
mov
ret
push
pop
mov
pop
jns
pusha
outs
scas
or
mov
or
push
and
das
scas
lea
dec
cmp
dec
mov
mov
mov
inc
lods
mov
fs
mov
mov
mov
jg
sti
cmp
xchg
mov
push
clc
inc
cmp
int3
les
jmp
adc
mov
push
jae
push
cmp
mov
mov
pop
inc
add
sbb
push
loope
cmp
test
mov
or
cmp
and
cmps
pop
xor
sub
ins
inc
push
mov
xchg
dec
inc
iret
xchg
push
test
inc
lahf
ret
stos
das
inc
addr16
and
call
cmp
push
mov
ja
jne
add
call
retf
ret
mov
inc
and
cs
iret
xor
cmp
cmp
sbb
ins
mov
ins
in
mov
dec
add
scas
or
ret
leave
lods
lds
sbb
loop
cmp
inc
add
mov
ror
sti
and
ja
mov
mov
xor
sbb
jp
test
cmp
in
cdq
xor
aaa
mov
aam
addr16
je
pop
mov
scas
cs
xor
and
add
invd
dec
sbb
mul
fmul
cmp
inc
mov
jne
pop
ret
jo
lahf
int
push
cmp
fsub
dec
shr
jb
or
les
pushf
sbb
loope
add
jae
xor
or
add
inc
test
std
sub
loopne
outs
(bad)
in
xchg
not
retf
adc
mov
cmp
mov
fsubr
or
or
jcxz
and
and
add
adc
js
mov
push
sbb
dec
mov
icebp
cmps
push
and
cmp
push
mov
pop
fdiv
push
xchg
(bad)
arpl
cmp
pop
cmp
mov
cmp
stos
jle
jle
or
mov
gs
or
jo
xor
out
dec
mov
pusha
stc
jp
add
inc
mov
pop
jecxz
sbb
scas
xchg
pop
in
cmp
and
inc
aaa
(bad)
cmc
xchg
sub
or
dec
int3
and
or
je
enter
fst
xor
cmp
cmp
mov
push
dec
mov
mov
loopne
popa
clc
push
gs
out
sub
xor
cmp
adc
dec
fwait
int3
push
movs
inc
aaa
mov
add
or
push
jae
test
mov
xor
mov
bound
and
stos
jmp
pushf
add
adc
push
mov
jnp
les
mov
aad
xchg
aaa
(bad)
mov
inc
add
lea
int
xor
(bad)
iret
fdiv
mov
mov
xor
test
xor
dec
int
add
push
jg
jo
loopne
xchg
mov
and
push
(bad)
jl
sub
fcomp
push
(bad)
xor
ins
adc
pusha
sub
mov
ret
sbb
inc
push
nop
sub
call
sbb
test
cmps
sbb
cmp
and
jmp
(bad)
push
test
cmp
adc
push
inc
or
sbb
sbb
xor
fdivr
cmp
dec
mov
loope
jo
outs
ret
inc
lods
or
push
push
dec
es
call
cmc
push
cwde
mov
stos
push
pop
push
iret
add
push
ret
fs
push
xor
adc
lds
outs
data16
add
shl
pop
outs
cmp
add
adc
cmp
and
push
jbe
ss
mov
pusha
jp
push
cmp
xor
jl
mov
scas
retf
mov
inc
mov
sbb
sub
mov
cmp
cs
jno
add
jmp
mov
push
ficom
or
test
add
push
inc
std
or
cmp
arpl
nop
sub
add
dec
cmp
popf
push
inc
cmps
inc
ret
pop
pop
cmp
adc
inc
retf
add
add
icebp
sub
pop
xor
jnp
fsub
add
mov
pop
sbb
sbb
push
xlat
adc
daa
mov
das
lea
dec
es
adc
or
pop
jbe
jmp
jle
jae
sbb
rcr
jae
pop
sbb
ds
scas
xchg
jne
scas
sub
add
push
movs
xchg
push
aad
cmp
xchg
lock
inc
push
clc
xor
lods
adc
push
dec
dec
in
ja
mov
xchg
clc
or
cld
lock
sbb
dec
sbb
and
adc
add
adc
fs
add
daa
dec
xor
or
add
mov
mov
(bad)
mov
xchg
dec
inc
cmp
push
mov
push
fs
sub
add
xor
xor
test
jl
inc
ja
test
adc
xchg
add
adc
inc
or
sub
dec
or
xchg
dec
and
mov
aaa
inc
or
sub
add
xor
test
cmp
xchg
adc
xor
clc
icebp
aam
xchg
inc
inc
dec
or
inc
cmp
pop
retf
pop
ja
dec
pop
popa
stc
shl
out
pusha
inc
aas
shr
aas
pop
cmp
push
(bad)
mov
adc
cmps
(bad)
xchg
sub
push
test
and
mov
jmp
cmp
arpl
jne
je
inc
inc
or
and
or
or
and
sub
inc
sub
dec
cld
xor
hlt
cmp
jo
pop
push
(bad)
cli
call
je
into
inc
add
pushf
pop
jne
sbb
add
arpl
mov
sub
or
jno
ret
inc
cdq
pop
sub
ret
pop
neg
push
xor
cmps
scas
or
sub
loopne
aam
or
(bad)
or
or
das
mov
add
xchg
jo
inc
push
call
pop
add
dec
mov
(bad)
cmp
cmp
sub
mov
or
adc
data16
add
ret
xchg
xor
sbb
and
mov
xor
imul
rcl
add
jne
sbb
outs
xchg
(bad)
push
js
sub
xchg
cmp
and
sbb
xor
xchg
add
je
push
push
enter
das
mov
ja
cli
imul
test
push
stos
pusha
aad
popa
jmp
push
jmp
pushf
mov
push
addr16
das
movq
jge
daa
das
test
pusha
fidivr
cmp
adc
sub
pop
cmp
jecxz
not
push
mov
jl
mov
cmp
mov
(bad)
outs
adc
lock
sbb
loopne
inc
nop
jmp
pop
mov
sti
push
test
in
in
fisubr
jl
shr
movs
adc
fcomp
pop
leave
shr
mov
lock
xchg
mov
pushf
push
sub
in
pop
jg
(bad)
push
enter
or
jne
push
cmp
mov
jnp
stos
sub
xchg
jo
pop
inc
sti
(bad)
in
adc
push
jmp
and
and
xchg
mov
inc
loopne
dec
jbe
and
and
jl
stos
xchg
xchg
push
cwde
mov
or
or
or
jae
loopne
jo
mov
sub
or
jmp
clc
dec
test
sete
imul
arpl
adc
test
aaa
inc
sbb
sbb
and
dec
cmps
fisttp
mov
xchg
xchg
test
adc
or
div
aaa
pop
push
in
pop
mov
mov
jl
and
mov
cmp
xor
daa
aas
xchg
popa
das
and
aas
sbb
sub
or
mov
fs
cmp
and
nop
and
(bad)
dec
adc
repz
ja
das
leave
adc
rcr
add
lock
mov
mov
hlt
sbb
xchg
ror
dec
stos
mov
jb
pop
or
dec
pushf
mov
jle
push
cmp
or
ins
jmp
fst
xchg
shl
sbb
fsubp
or
fcomi
getsec
push
aaa
es
pop
aaa
ja
and
je
loop
or
sub
inc
jo
sbb
fldenv
push
cs
adc
add
fimul
leave
daa
nop
sahf
pop
js
sbb
pop
sbb
or
movs
test
mov
mov
dec
js
cmp
movs
sub
scas
xchg
enter
jg
(bad)
pop
pushf
mov
or
mov
dec
rcl
div
test
jl
fs
nop
mov
inc
mov
pop
cmp
add
inc
jp
jno
cmp
cmps
(bad)
rcl
and
imul
and
das
add
add
ins
sub
outs
and
or
pop
inc
mov
(bad)
mov
mov
movs
mov
or
add
adc
pop
ins
fbstp
popa
pop
mov
xor
out
xchg
mov
add
mov
or
push
add
ins
sbb
aaa
cmps
aaa
jecxz
ins
add
aaa
mov
inc
add
mov
imul
xchg
xchg
adc
pop
mov
movsx
cmc
jo
jbe
lods
or
or
(bad)
arpl
mov
ror
cmp
ja
inc
mov
sub
lahf
aaa
aas
out
aam
lea
fcom
and
xor
mov
lea
js
sub
push
sub
sbb
dec
pop
push
cmps
mov
std
cs
mov
inc
xchg
cwde
sbb
sbb
fwait
inc
xor
not
(bad)
(bad)
nop
sbb
lea
addr16
ret
jecxz
xor
js
fcmovu
push
shl
daa
add
dec
out
or
ja
pop
sbb
cs
dec
pusha
sub
icebp
outs
mov
push
lods
inc
sub
fsubr
or
cmp
sbb
std
rol
lock
(bad)
fld
fstp
add
or
jg
ja
mov
inc
mov
loope
cmps
xchg
test
pop
push
mov
daa
xchg
sub
push
push
mov
mov
sar
xor
add
aaa
push
pop
addr16
mov
mov
ins
and
or
adc
in
inc
fs
xor
add
xlat
les
xor
xlat
outs
xchg
cdq
ret
outs
mov
pop
xchg
das
scas
inc
sbb
cmps
adc
scas
inc
add
sub
inc
jnp
rcl
lock
call
ss
dec
outs
loope
add
cmp
push
mov
mov
push
enter
movs
leave
mov
leave
mov
(bad)
push
je
mov
or
jno
outs
and
push
inc
(bad)
shl
mov
jns
call
and
dec
inc
inc
lock
sbb
sub
add
adc
add
pop
jl
cmp
mov
loop
scas
pop
push
call
push
lods
lods
in
pushf
xor
dec
js
jge
add
inc
sbb
push
daa
cmp
setle
or
dec
ret
cld
pop
out
dec
leave
retf
rol
ret
ds
mov
adc
push
mov
jl
cs
cmp
call
(bad)
jge
xor
movmskps
xor
add
pop
out
jo
add
(bad)
nop
jmp
cdq
xchg
retf
push
and
push
and
sub
jl
inc
bound
add
xor
mov
pop
loop
lods
add
mov
bound
dec
nop
push
jmp
and
add
adc
loopne
push
call
movs
sbb
inc
pusha
mov
jmp
inc
dec
jne
mov
enter
scas
push
call
mov
mov
jno
inc
cmp
inc
or
ret
jl
inc
add
adc
or
test
mov
aaa
inc
scas
inc
movs
inc
call
add
mov
(bad)
cmp
add
retf
popa
push
adc
jg
sub
inc
test
test
jnp
inc
adc
scas
inc
mov
clc
dec
lock
lods
xor
dec
ins
cmp
add
rol
xchg
pusha
dec
inc
addr16
addr16
sbb
dec
inc
add
xchg
aaa
(bad)
cmp
bound
add
pop
cmp
pop
and
cwde
cmovo
jle
repz
xchg
mov
lahf
(bad)
nop
test
push
mov
dec
xchg
in
stos
adc
adc
out
jge
jl
pusha
mov
push
add
aas
les
in
jle
mov
mov
dec
cmp
jb
sbb
xchg
mov
dec
test
dec
and
in
mov
daa
pop
xchg
cmc
cmps
dec
inc
test
push
ds
arpl
iret
out
or
inc
add
test
nop
ss
ss
jg
scas
mov
clc
jle
sub
mov
inc
and
dec
push
pop
sbb
pop
mov
push
scas
push
and
fldcw
stos
je
pop
jmp
jae
(bad)
into
lock
idiv
ret
mov
inc
movs
icebp
sahf
dec
pop
popa
stos
add
xor
test
ret
and
bound
loopne
xlat
pop
inc
lea
xchg
push
cmps
push
shl
pop
dec
cs
sub
mov
cli
inc
or
jmp
push
cmp
pop
dec
loop
aaa
sbb
xor
pusha
mov
(bad)
and
stc
(bad)
and
add
aaa
inc
mov
loop
or
jae
mov
or
sbb
xchg
inc
and
aad
and
outs
aaa
adc
mov
or
ins
aaa
dec
push
rol
dec
or
push
psubusb
mov
fsub
in
jg
jo
ret
in
fcom
jecxz
call
lds
sub
in
and
sbb
and
fst
mov
adc
push
repnz
in
fmul
aas
dec
and
loopne
pop
aas
mov
jns
mov
mov
les
push
ins
mov
mov
fdiv
dec
pusha
sub
cmp
jl
ins
push
fisub
jnp
jmp
or
(bad)
cs
inc
data16
inc
jb
fist
aas
push
test
jns
sub
mov
scas
jo
shl
cld
enter
loopne
xor
cmp
neg
inc
je
mov
scas
mov
fidiv
inc
cmps
fs
lock
fadd
call
sbb
ja
call
mov
sub
push
sub
adc
or
ret
and
jge
pop
jo
mov
mov
dec
xchg
std
add
add
add
pushf
(bad)
fild
add
js
add
add
push
push
cmpps
out
dec
or
inc
aas
cmp
jbe
pushw
jae
inc
inc
push
add
movs
mov
mov
add
jb
int3
out
imul
fs
push
push
es
sub
arpl
sub
cmp
add
outs
fnstsw
in
jbe
inc
adc
push
mov
data16
call
push
push
adc
adc
mov
xor
mov
and
or
add
sbb
xchg
xchg
ja
pop
or
in
mov
fs
add
xor
xor
jbe
inc
add
inc
cwde
sub
dec
bound
or
mov
cmp
cmps
xor
mov
sbb
push
sbb
aaa
push
mov
pop
cmp
jp
(bad)
popa
sub
cwde
outs
sbb
out
out
push
push
ja
arpl
inc
push
jp
jg
inc
jnp
xchg
jg
cmp
jmp
ins
and
inc
cmp
sub
stos
test
mov
mov
pop
nop
test
sbb
and
inc
sbb
jno
xchg
xor
sbb
clc
dec
xor
inc
inc
push
pushf
or
out
adc
mov
push
xchg
les
cmp
xchg
(bad)
retf
xchg
sbb
mov
cld
or
call
dec
jg
daa
into
push
sahf
cmp
add
push
aad
xor
inc
dec
mov
outs
pop
jl
out
rol
jo
xchg
push
xor
mov
xor
jg
mov
push
cmp
pusha
inc
mov
mov
push
add
(bad)
ror
pushf
dec
xor
or
xchg
in
scas
movs
scas
push
mov
jmp
mov
inc
add
jle
into
or
sub
test
xor
jecxz
lods
adc
loopne
jb
outs
clc
sti
aaa
sbb
mov
jmp
sbb
push
inc
outs
push
sbb
xlat
fnstsw
push
dec
push
das
xor
push
mov
sysret
das
pop
lock
daa
mov
ret
cmovp
or
addr16
mov
add
cmp
or
mov
pop
loopne
or
xor
xor
sbb
jb
scas
xor
cwde
xor
bound
ret
adc
and
sahf
rcr
test
xchg
xor
imul
aaa
xor
rcr
push
aaa
inc
aaa
ins
mov
aaa
inc
imul
aaa
mov
call
(bad)
aaa
js
cld
ss
mov
jle
mov
mov
into
or
inc
sahf
pop
jae
and
aam
lods
sbb
jg
outs
and
push
sub
je
dec
fnstenv
sbb
xor
mov
sbb
pusha
xor
mov
or
mov
add
dec
jmp
dec
mov
aaa
bound
push
mov
sbb
lea
ins
sbb
cmps
xor
xchg
jbe
dec
jae
and
push
add
jo
fwait
xchg
fcom
mov
test
ret
lahf
cs
mov
in
repnz
mov
xchg
jno
push
xchg
mov
jmp
adc
xor
add
or
sbb
cmps
imul
imul
sub
xor
xor
fcomp
or
mov
pusha
xchg
fiadd
adc
pop
mov
je
ins
enter
add
dec
dec
dec
test
add
test
(bad)
cmp
int
mov
mov
mov
scas
sbb
xchg
dec
int
mov
xor
or
leave
push
test
test
out
xchg
jae
pop
repz
loopne
xchg
push
xor
das
rdpmc
int3
ins
scas
shr
pop
daa
das
lock
mov
xchg
(bad)
(bad)
push
pushw
jbe
pushf
out
outs
pop
mov
add
mov
pop
loopne
lock
repz
xchg
xchg
and
add
inc
push
ja
mov
rcl
or
sub
cmc
jne
fmulp
out
cmp
in
jl
pushf
nop
(bad)
sbb
pop
movs
adc
in
sbb
shr
dec
enter
aaa
lock
in
xchg
adc
pushf
push
push
pop
mov
(bad)
dec
dec
jne
mov
cmp
pop
or
fdiv
and
inc
sti
inc
dec
in
(bad)
repz
jbe
pushf
nop
and
push
call
daa
enter
or
pop
push
mov
mov
pusha
add
push
jae
xlat
dec
and
pop
dec
test
jne
aas
sbb
adc
(bad)
push
cmp
dec
test
fild
cld
mov
idiv
mov
push
adc
mov
jmp
adc
je
push
add
inc
jl
dec
(bad)
adc
ror
cmp
add
mov
or
in
pop
mov
sbb
mov
xchg
cmp
mov
test
dec
mov
cmp
jne
dec
rol
xor
test
cld
addr16
cmp
je
cmp
push
das
std
lods
xor
dec
call
xchg
cmp
adc
mov
cmp
addr16
adc
push
add
gs
push
test
push
add
or
add
int3
loopne
mov
ror
mov
js
push
pop
adc
add
add
inc
or
ds
inc
mov
int3
inc
mov
xor
cmp
adc
int
add
sbb
push
jl
add
ret
cmp
and
adc
sbb
daa
sub
and
shl
xchg
push
dec
sbb
stc
mov
add
mov
xor
data16
adc
jns
in
loope
rol
mov
add
sbb
adc
(bad)
or
popa
push
mov
aas
arpl
out
jo
into
mov
adc
ins
aad
pop
das
arpl
jg
dec
mov
mov
ja
inc
or
fld
inc
inc
inc
or
pop
inc
adc
mov
adc
jecxz
inc
sub
dec
ror
sub
and
and
push
pusha
(bad)
xor
fadd
test
dec
push
or
jg
test
shr
and
aam
aam
sub
inc
or
xchg
fld
xchg
adc
scas
dec
and
movs
jge
scas
std
mov
cmp
inc
and
add
xchg
add
xor
mov
loopne
cmps
aam
iret
mov
inc
sub
adc
or
popa
and
jp
rol
push
mov
cmp
cmc
pop
and
or
jns
jp
(bad)
adc
test
je
add
hlt
xchg
ds
fdiv
fwait
jp
pop
cmp
cmp
jl
and
stos
cwde
and
cmp
aas
add
sub
js
add
mov
sub
inc
mov
sub
inc
adc
sub
ret
sbb
or
and
push
sbb
inc
cmp
xchg
shl
or
sar
daa
or
mov
or
mov
sub
imul
adc
repnz
push
in
fs
or
adc
daa
mov
jle
push
xor
adc
pusha
ja
xor
xchg
mul
jbe
push
push
inc
xchg
jge
mov
aad
cmp
add
pop
or
fild
cmp
lahf
jge
fs
or
(bad)
lods
mov
cmps
scas
mov
mov
mov
jno
mov
mov
(bad)
ja
pusha
mul
mov
jbe
test
sub
call
push
xlat
push
cmp
mov
mov
push
inc
jne
xchg
fbld
je
adc
jb
sbb
clc
aad
fisubr
push
inc
retf
sbb
sbb
scas
adc
add
rcl
mov
(bad)
push
xchg
mov
adc
or
loopne
repz
adc
mov
or
dec
sbb
scas
(bad)
jg
or
jnp
clc
cmps
ins
jmp
mov
shl
xor
or
mov
push
push
or
dec
sbb
xchg
mov
shr
out
enter
rol
adc
push
jle
pop
sahf
shl
xchg
adc
inc
dec
shr
xchg
rcl
mov
retf
adc
inc
or
adc
jb
lea
xor
and
jp
xor
add
jnp
xchg
mov
scas
lock
inc
inc
leave
icebp
retf
call
jecxz
pushf
ret
xchg
nop
jbe
add
xor
cwde
add
add
and
push
sub
loope
mov
sbb
fiadd
add
dec
xchg
sub
cmp
jle
and
loopne
xchg
rcl
out
or
lods
int3
pusha
loop
or
sub
(bad)
loop
loopne
inc
pusha
mov
mov
cs
xchg
sbb
in
inc
sbb
test
call
lods
cmc
ss
movs
inc
mov
sbb
xchg
aad
test
test
out
rcl
hlt
(bad)
lock
stos
or
rcr
cwde
xor
or
add
js
aad
mov
fs
xor
push
pop
cmp
add
add
hlt
add
clc
push
inc
test
pushf
xor
inc
xchg
or
xchg
pusha
cmp
loopne
pusha
sub
popf
or
inc
(bad)
hlt
aaa
dec
xchg
and
test
cmps
ror
jno
and
push
inc
jnp
mov
cmc
je
cmp
sbb
je
in
shl
jno
jmp
fidivr
inc
and
retf
and
cmp
loopne
jb
in
mov
ret
adc
inc
xlat
add
loopne
fsub
lock
les
sbb
dec
into
rcl
dec
repnz
adc
int3
cli
lods
ds
jecxz
test
mov
inc
(bad)
aam
scas
adc
inc
xor
(bad)
icebp
not
mov
or
rol
mov
xor
pushf
call
inc
in
mov
sbb
mov
sbb
test
lds
mov
pop
test
aaa
sti
mov
loopne
cmc
add
icebp
push
or
inc
nop
sbb
imul
xchg
cmps
loopne
add
not
push
ror
cmp
cwde
or
push
cmc
sbb
mov
cmp
sbb
(bad)
clc
cmps
(bad)
(bad)
fld
hlt
fstp
fwait
push
mov
icebp
xor
sahf
nop
sbb
xchg
mov
mov
sahf
out
jecxz
xor
ds
mov
mov
lods
jmp
cmps
inc
int3
push
movs
cmp
push
movs
push
cmpxchg
ds
mov
or
push
xor
adc
test
or
scas
fisttp
and
cmp
mov
and
push
pop
sbb
mov
ror
and
test
inc
(bad)
fiadd
push
mov
xchg
adc
inc
pop
sahf
xor
fisttp
cmp
add
add
and
cmp
dec
cmp
cmps
out
adc
jo
add
nop
or
add
out
add
and
mov
je
dec
or
scas
inc
pop
mov
mov
cli
xor
xchg
cmps
or
or
icebp
add
sub
aaa
sbb
pop
out
mov
mov
and
loopne
xor
or
jno
ret
mov
jb
jo
cmps
push
mov
or
sub
or
rcl
or
cs
add
cmp
repnz
popa
or
out
mov
mov
or
and
add
ret
mov
nop
cs
in
sete
test
leave
mov
sbb
adc
int
add
popa
ror
dec
xchg
das
hlt
push
(bad)
adc
ret
stos
lea
popf
sub
inc
call
xchg
add
bound
hlt
sub
pop
inc
and
nop
pop
lock
pusha
outs
xchg
aas
sbb
in
(bad)
jb
and
xor
arpl
add
inc
add
pop
hlt
jg
aam
pusha
adc
jg
push
ds
pushf
fstp
fwait
shl
(bad)
inc
inc
sbb
push
out
retf
dec
jb
and
sub
mov
ret
repz
ds
push
in
cs
lahf
inc
push
lahf
xor
mov
stc
ret
mov
push
adc
cmps
or
test
or
call
add
(bad)
or
push
stos
push
lahf
stos
inc
ja
rol
dec
jnp
jmp
pop
cld
pop
je
in
push
aaa
stos
sar
pop
aas
xchg
adc
mov
dec
jbe
aaa
imul
dec
sbb
aaa
xor
aaa
cmps
cmps
sbb
jb
xor
and
inc
and
or
loopne
pop
(bad)
push
ret
adc
adc
loopne
pop
loopne
scas
mov
push
scas
dec
ja
mov
inc
xchg
xchg
lahf
popf
shr
sbb
xlat
push
enter
sbb
in
adc
(bad)
pop
mov
ja
dec
sbb
and
fcmovnb
xchg
test
call
sub
push
aas
push
mov
leave
inc
push
xchg
or
daa
add
movs
push
mov
stos
pushf
push
mov
enter
call
in
(bad)
retf
jne
inc
sub
pop
in
cwde
imul
stos
xchg
pushf
icebp
(bad)
test
inc
ffree
adc
jmp
and
xor
mov
inc
popf
lea
pop
fdiv
jne
rol
leave
sub
or
jb
add
popf
lods
mov
xchg
out
aaa
fcom
add
fild
les
in
add
lahf
fcomp
arpl
ds
scas
lods
inc
xchg
add
adc
in
pop
je
fwait
test
mov
outs
push
pop
mov
jge
push
cdq
outs
dec
es
inc
or
ud0
add
ret
aam
sbb
fdivr
add
and
jbe
int
push
jmp
jle
mov
and
add
pop
mov
fidivr
cmp
sub
push
sahf
sbb
push
inc
rcl
aaa
(bad)
(bad)
sbb
jg
xchg
loopne
cmps
sbb
mov
adc
add
jmp
das
ins
pop
mov
and
fdivr
enter
mov
jle
jge
aad
jmp
lock
mov
or
test
mov
mov
push
sar
or
jae
cdq
dec
data16
ret
call
fs
pop
js
inc
mov
add
test
scas
push
test
fcom
and
jne
or
sbb
adc
mov
fld
les
out
push
jo
adc
and
ror
cs
add
arpl
xchg
mov
xchg
(bad)
fnstenv
cmp
pop
pusha
pmulhuw
popf
mov
(bad)
jle
pop
movs
add
rol
pop
mov
dec
ss
sbb
pop
or
add
pop
ins
mov
test
arpl
aaa
pop
retf
movs
out
xor
fwait
ror
call
movsx
mov
femms
or
fst
add
pusha
push
rol
outs
cmp
ins
xor
ja
(bad)
ror
sbb
sbb
cmp
cs
cwde
xchg
cdq
and
mov
jg
push
inc
add
dec
fadd
inc
push
movzx
xor
int3
icebp
fwait
mov
cmp
cmc
jbe
jmp
pavgb
xor
cmp
jne
je
outs
call
cmp
mov
add
outs
mov
ins
push
jl
cmp
retf
mov
inc
mov
sbb
mov
loope
ins
adc
xor
test
out
ins
(bad)
and
cmp
cmp
sbb
rcr
jmp
cdq
stos
mov
adc
leave
jg
or
and
adc
pop
xor
dec
test
aam
inc
jmp
mov
dec
add
push
add
(bad)
xlat
adc
cmp
push
rcl
dec
pop
cmp
sub
xchg
rcl
or
mov
aaa
pop
sub
lahf
iret
into
fisub
dec
add
xchg
add
sbb
addr16
cmp
push
aaa
loopne
(bad)
jmp
inc
cwde
push
daa
not
out
push
daa
jg
or
iret
ret
mov
add
imul
push
sbb
test
pop
dec
pop
pusha
jnp
mov
lds
mov
or
xchg
or
or
adc
cmp
fild
aad
js
push
and
sub
fistp
test
or
shl
test
or
push
scas
add
cs
fild
cmp
fist
or
fisttp
or
fbstp
mov
mov
and
rcl
cmp
arpl
xchg
fisub
es
push
in
xchg
movs
sub
and
jnp
in
or
test
lods
std
scas
iret
or
cmps
sub
pop
(bad)
push
pop
push
or
add
sbb
popa
add
or
fistp
pusha
ins
and
jecxz
xor
or
int
rcl
js
jmp
mov
push
daa
outs
cmp
inc
dec
jne
fcom
sar
cmp
fild
add
out
and
hlt
cmps
pop
(bad)
xor
cmps
inc
cmps
jbe
rcr
cmps
dec
ret
xchg
aaa
bound
add
sub
shl
(bad)
jecxz
fldenv
mov
ror
mov
cmp
add
sbb
push
xor
cmp
je
mov
add
jecxz
jp
test
xchg
test
mov
sbb
mov
jbe
imul
lea
iret
fdivr
add
clc
or
iret
add
sub
xor
iret
jl
xchg
push
and
or
iret
aaa
les
fadd
add
iret
add
lods
iret
or
add
shl
mov
jg
or
mov
push
leave
adc
cmps
lahf
lods
or
stos
or
mov
iret
sub
iret
or
adc
jmp
pop
iret
and
cmps
mov
stos
stos
iret
sbb
iret
xor
test
xor
fadd
or
pop
cmp
mov
push
arpl
cmp
pop
bound
and
sbb
add
add
push
cmp
ror
aaa
sub
mov
push
xor
jmp
jns
aaa
dec
and
ret
dec
sub
dec
scas
mov
aas
cmp
mov
scas
and
mov
daa
popf
adc
fs
push
mov
add
and
std
add
mov
(bad)
repnz
push
lods
icebp
add
test
jle
push
add
push
mov
adc
in
sbb
fwait
cwde
cmps
mov
es
in
pusha
loopne
cld
ja
xlat
mov
xor
cmp
xor
inc
test
mov
xor
lock
sbb
and
div
sub
sar
pop
adc
scas
sbb
out
pop
mov
fs
inc
push
aaa
dec
and
mov
xor
push
sub
test
pop
pop
xchg
sub
mov
ficom
push
jb
or
adc
scas
or
fistp
sbb
jge
xor
dec
xor
pop
add
add
pop
lods
jno
cwde
outs
jle
xor
push
adc
(bad)
push
cmp
loopne
pop
in
test
sub
lods
xchg
daa
pop
call
outs
mov
dec
and
mov
push
jo
push
and
xchg
adc
inc
mov
bound
pop
push
cli
jbe
push
and
shl
xchg
mov
add
push
xor
mov
mov
jbe
pusha
sahf
jmp
fs
jne
adc
mov
js
cmp
push
sbb
lahf
sbb
jb
push
(bad)
gs
add
cmp
not
rcl
outs
mov
int3
xchg
mov
xor
jo
xchg
mov
fwait
adc
in
sbb
movs
push
inc
xor
sbb
sti
sbb
loop
js
xor
add
or
cmps
xor
pop
mov
pop
sub
add
xor
add
add
cmp
mov
movzx
(bad)
adc
add
cmp
pop
(bad)
jg
cmp
jg
xchg
jge
add
cmp
or
xor
dec
mov
fcomp
fnstsw
sahf
ja
sbb
dec
jb
jp
sub
jmp
pop
stos
in
or
mov
xor
cmp
push
sub
jmp
jbe
ds
cmp
jg
and
pop
ret
mov
and
jl
add
fld
or
add
xchg
adc
xor
pop
or
sub
nop
rol
sbb
es
sbb
or
sar
add
push
cmp
fist
pop
pop
pusha
fist
out
or
jo
inc
jae
nop
cs
and
das
daa
mov
adc
es
mov
test
or
outs
pop
movs
sub
push
xchg
xchg
or
js
add
dec
out
test
xchg
add
das
fidiv
fild
mov
or
aas
and
mov
and
inc
or
and
add
cmp
add
fnstenv
mov
or
mov
sub
dec
(bad)
jae
lahf
std
and
push
fld
inc
pop
xor
pop
or
pop
js
add
pop
je
es
movs
add
(bad)
fmul
and
iret
adc
out
add
es
inc
cmps
pop
xchg
and
xor
mov
xor
cwde
in
out
nop
add
xchg
cmp
jb
dec
imul
add
out
inc
and
and
hlt
adc
mov
pop
inc
mov
sbb
(bad)
pop
out
inc
adc
add
pop
gs
jae
pusha
and
fist
scas
push
mov
xchg
sbb
das
(bad)
lods
mov
inc
lock
pop
pop
loopne
imul
mov
jg
dec
das
pop
sub
mov
dec
ror
push
gs
xlat
ss
pusha
pop
popa
mov
mov
or
je
test
push
shr
(bad)
push
ret
pop
inc
cmp
push
push
daa
fdivr
idiv
add
ins
adc
je
push
ret
adc
leave
xor
popa
push
sub
mov
aad
fisttp
inc
sbb
and
js
mov
add
sub
fwait
stos
cmp
ret
jmp
adc
dec
test
les
or
ja
push
pop
enter
or
ja
pop
add
mov
rol
jns
push
je
lahf
clc
ret
pusha
and
xchg
pop
das
mov
je
pusha
or
inc
test
sbb
mov
push
and
or
pop
test
pusha
pop
pop
jne
mov
sub
pop
mov
add
out
inc
mov
outs
sub
das
xchg
xchg
sbb
inc
pop
and
std
pop
sub
or
jo
add
adc
add
mov
cmps
shl
neg
push
adc
or
iret
mov
xchg
cmp
sbb
add
cmp
xchg
xchg
cmp
and
pop
lahf
pop
jecxz
adc
add
sar
add
or
lahf
pop
adc
mov
pop
pop
inc
or
inc
jg
test
imul
(bad)
call
sub
sub
cmps
sub
adc
cdq
adc
mov
cmp
jbe
mov
add
adc
pop
popa
cwde
and
xor
cmp
push
fcomp
mov
or
aaa
int3
mov
fist
add
inc
mov
ds
pusha
ror
mov
cld
xor
cwd
adc
in
fist
ds
inc
enter
sar
add
or
pusha
mov
out
and
ret
(bad)
pop
pusha
repz
nop
outs
test
aas
mov
and
shr
sub
out
cmp
push
pop
mov
or
cmp
inc
fldz
push
dec
xchg
(bad)
sti
out
inc
test
cmp
or
pop
js
add
sbb
push
ja
das
add
inc
loope
sub
mov
(bad)
mov
fstp
cwde
add
lock
mov
pop
adc
add
mov
pop
les
xchg
lea
sbb
popf
add
popf
test
add
in
stos
inc
ficom
add
inc
lea
imul
mov
movs
inc
je
aas
add
sbb
mov
aad
inc
movs
call
hlt
lahf
fld
ret
lahf
push
push
dec
mov
and
sub
das
das
mov
fistp
sub
aad
hlt
rcr
repz
fcom
stc
dec
or
push
fistp
inc
or
dec
ins
cmps
fistp
loopne
fwait
imul
pop
fwait
mov
das
div
test
add
push
lea
inc
daa
retf
mov
mov
push
xor
loopne
ret
cmp
ret
xor
and
(bad)
mov
(bad)
enter
jg
jo
adc
xor
add
dec
adc
push
wrmsr
fild
or
iret
pop
jae
adc
inc
pop
retf
xor
xor
addr16
daa
call
pusha
sub
push
add
loopne
adc
cmps
pop
or
gs
push
add
pop
adc
sbb
ror
adc
sbb
hlt
add
test
jbe
(bad)
ror
call
popa
adc
xchg
mov
lock
call
adc
mov
jecxz
push
mov
cmp
jne
add
jp
sahf
jne
or
jbe
fisub
sbb
mov
dec
push
jne
jne
add
cmp
aaa
loopne
mov
ss
cmp
cmp
jae
and
leave
cmp
les
pop
add
mov
mov
adc
rcl
mov
and
pop
(bad)
and
js
shl
xchg
adc
out
ds
cmc
fbld
cmp
sub
dec
hlt
lea
dec
push
pop
adc
retf
xchg
add
jmp
ficomp
push
data16
(bad)
(bad)
outs
dec
push
xchg
xor
js
call
idiv
int
adc
ror
in
xor
add
xchg
jns
cmp
pop
jmp
inc
inc
xlat
add
pushf
outs
mov
sbb
pop
pop
or
push
cmp
inc
or
(bad)
adc
or
inc
sub
xor
retf
dec
mov
push
mov
add
adc
add
pop
mov
sbb
mov
and
xor
shl
and
arpl
inc
sub
or
or
ja
lods
sar
jge
add
ins
test
dec
inc
jnp
jge
mov
je
mov
xor
ficomp
mov
xor
and
in
push
mov
push
cmp
push
push
dec
add
sbb
jp
pop
(bad)
add
and
outs
mov
cmps
dec
inc
cmps
mov
loopne
fnsave
cmp
xchg
in
cs
jo
ins
fs
or
and
dec
inc
and
mov
outs
(bad)
(bad)
adc
mov
inc
inc
mov
mov
and
pushf
add
rol
add
or
test
cwde
or
mov
xchg
cmp
add
adc
lock
imul
inc
push
add
push
mov
dec
sar
or
pop
adc
shr
retf
cmps
add
por
loope
stos
mov
mov
add
sbb
jae
sub
add
xor
lea
push
loope
dec
dec
xchg
xchg
test
lea
in
aam
ret
int3
or
xor
lods
sbb
push
add
daa
das
mov
pushf
xchg
in
lea
add
pop
xchg
add
jbe
daa
push
jo
and
mov
add
inc
fs
and
add
inc
hlt
push
pusha
les
xchg
mov
aam
mov
jo
or
pop
add
test
inc
push
repnz
outs
mov
mov
js
ret
in
push
mov
es
adc
rol
inc
fadd
or
push
outs
lahf
and
(bad)
mov
ffreep
jb
retf
xchg
cmps
ja
int3
cmp
jbe
test
push
lock
adc
pusha
xor
and
sbb
or
adc
loop
(bad)
into
imul
adc
nop
sbb
mov
lea
pusha
cmps
or
xor
cmps
repz
fadd
scas
fadd
ins
scas
mov
and
xchg
daa
out
pusha
pop
in
movzx
dec
into
fsub
sbb
add
or
dec
or
mov
mov
mov
dec
test
lds
add
adc
or
add
mov
arpl
dec
out
ror
mov
add
jmp
(bad)
mov
or
fdiv
movs
data16
add
push
mov
jl
rol
push
movs
sub
push
int3
sub
in
sub
ss
clc
dec
dec
iret
inc
push
or
and
add
daa
ja
shl
adc
inc
ja
xchg
jne
pop
psrlq
push
mov
pop
push
inc
test
shl
sbb
and
pop
mov
xor
sbb
mov
loope
jl
in
(bad)
outs
push
xor
sub
daa
mov
test
inc
lock
push
push
fisubr
mov
push
and
cmp
sbb
test
inc
dec
loope
inc
aas
daa
xor
xlat
imul
jmp
into
inc
int
cmps
cmp
fisub
pop
adc
sub
xchg
vmptrst
pop
sbb
or
cmp
(bad)
movs
pop
sbb
inc
jp
cmp
dec
aad
mov
aad
xchg
pop
sbb
xchg
push
sbb
addr16
dec
add
dec
mov
push
mov
push
and
retf
mov
inc
fnsave
cmp
cmp
lock
ins
pop
and
add
xor
scas
pop
and
jmp
or
pop
jo
or
outs
daa
syscall
pusha
dec
and
mov
xchg
test
adc
pop
or
inc
dec
dec
pop
pop
cmps
pop
sub
test
push
add
sbb
inc
jae
mov
cmps
add
jne
sti
fs
or
sbb
mov
jl
sub
dec
sti
jmp
adc
sbb
cmp
clc
scas
jecxz
jge
clc
mov
shl
push
jmp
ss
call
jmp
pusha
mov
mov
inc
xlat
(bad)
mov
or
mov
test
stc
push
js
xor
mov
aaa
pxor
test
cmps
dec
sbb
add
fcomp
and
retf
int3
or
popa
ror
ins
mov
adc
mov
jae
in
test
mov
dec
adc
add
or
add
sbb
cmp
inc
in
push
iret
sub
push
and
rcl
add
xor
jns
mov
jl
push
sbb
add
adc
fldcw
add
call
jmp
push
mov
mov
or
inc
add
imul
(bad)
fdivr
push
push
add
je
inc
adc
mov
arpl
imul
push
dec
add
nop
imul
pop
pusha
daa
mov
sub
add
imul
xor
shr
cmp
pandn
ins
mov
push
outs
out
inc
lock
inc
add
jbe
in
push
out
dec
or
xchg
call
push
mov
inc
push
test
push
sbb
or
push
xor
es
pop
data16
push
outs
xchg
aas
cmp
in
cmps
push
or
add
or
out
stos
mov
out
xor
push
add
sub
in
inc
mov
push
mov
inc
cld
add
popa
xlat
int
pusha
cmp
mov
jmp
add
sbb
mov
sahf
in
mov
push
sti
jle
sahf
cmp
je
ja
aaa
mov
push
xor
push
xlat
imul
xor
cld
jb
test
mov
cmp
xchg
dec
lods
lock
(bad)
hlt
pop
loope
add
inc
cmp
jne
mov
jo
fisttp
je
fwait
jecxz
iret
shl
cmp
arpl
fist
fistp
sub
xchg
out
add
inc
pusha
ret
int3
sbb
cmp
xchg
aaa
sub
test
cmp
scas
jno
xchg
and
push
in
jo
and
cdq
push
add
sbb
test
sub
mov
dec
cld
fmul
fnstcw
ja
jmp
cmp
xor
add
xchg
shl
dec
sbb
or
and
xchg
cmp
push
mov
mov
inc
adc
rcr
push
ins
inc
add
jmp
adc
mov
(bad)
and
adc
push
in
xor
mov
push
pushf
and
jmp
inc
(bad)
push
adc
test
xor
aam
lock
lea
or
adc
or
adc
hlt
dec
push
sti
add
adc
neg
xchg
inc
test
in
cmp
mov
mov
pop
outs
dec
fadd
push
cli
and
sub
mov
dec
add
jnp
push
cwde
ins
fsubr
push
call
push
push
jae
cmp
add
jne
pop
cmp
xchg
dec
adc
jo
das
push
scas
rol
cmp
sahf
sub
pusha
xchg
xchg
jae
or
add
mov
out
data16
(bad)
cmp
jo
adc
imul
fs
mov
sbb
(bad)
pop
push
ins
lea
push
rol
scas
ins
loopne
lods
inc
add
fild
not
shr
xchg
or
push
xchg
inc
sub
dec
mov
and
std
add
dec
push
jne
xchg
adc
aas
pop
xchg
push
sub
pop
pop
hlt
test
cmp
scas
push
(bad)
push
add
or
or
or
inc
mov
ja
mov
adc
jle
test
sub
inc
arpl
pop
jmp
add
das
sub
dec
je
repz
loopne
stos
sar
loop
cmp
and
cmp
or
int
in
ins
jmp
cmp
ficomp
or
mov
cs
repnz
jge
cwde
or
jmp
push
and
add
sbb
mov
outs
add
adc
lahf
shr
push
popa
mov
jl
push
pop
xor
push
cmp
je
inc
inc
jb
push
and
add
inc
push
add
add
xlat
das
cmp
add
or
push
out
retf
movs
jo
stos
shl
xor
addr16
nop
repz
loopne
xchg
push
fcomp
test
and
out
les
add
add
add
or
mov
xor
pop
fxch
pop
aaa
adc
jl
cmc
in
ret
adc
xor
mov
dec
out
out
xor
cmp
cmp
inc
rol
add
dec
ins
sub
xor
xor
aam
stos
xchg
inc
inc
aaa
fldcw
pop
popf
inc
jmp
mov
shl
addr16
or
dec
arpl
rol
add
(bad)
or
dec
cmps
inc
daa
jb
xchg
ds
push
add
jl
imul
(bad)
loopne
fadd
adc
(bad)
mov
and
aam
popa
pop
cdq
call
mov
xor
push
add
jo
jne
push
std
shl
jb
push
sub
add
xchg
shr
in
ret
inc
pusha
popa
push
scas
inc
scas
dec
fadd
or
push
mov
mov
adc
push
jnp
jmp
add
adc
add
or
loope
retf
adc
push
push
mov
sbb
ss
sahf
cdq
jl
loop
mov
mov
bound
xlat
adc
xor
imul
xlat
add
push
inc
ss
aam
(bad)
push
pop
cmps
cli
cmp
or
les
pop
mov
or
xor
pop
pop
pop
daa
cmp
cmps
pop
popa
mov
cmp
std
jb
ds
in
mov
xchg
add
int3
adc
or
jne
imul
adc
aad
xchg
ror
test
mov
jge
sub
scas
push
cld
lea
mov
sub
into
xchg
push
or
jmp
outs
jbe
cmp
dec
jl
jmp
push
cdq
inc
dec
inc
or
push
xchg
out
ja
sbb
or
test
add
(bad)
(bad)
lods
arpl
inc
jb
adc
es
rcr
or
or
out
and
xor
or
and
jne
sbb
sbb
jmp
test
xchg
jp
iretw
fwait
outs
cmc
loope
test
ins
inc
cmp
dec
mov
mov
pop
jnp
test
xor
sbb
cdq
call
sbb
pushf
test
aaa
nop
add
sub
mov
xchg
mov
std
enter
ror
push
js
xor
fwait
sub
cld
push
mov
or
lea
shl
inc
into
sar
test
test
adc
adc
mov
cmp
shl
loope
add
out
cmp
push
xchg
loop
lea
arpl
cmp
ret
push
fsub
and
mov
fiadd
ret
mov
add
sub
or
or
inc
pop
push
mov
pop
je
inc
mov
adc
loope
xor
xchg
rcl
mov
aaa
ret
(bad)
cmp
jge
push
adc
adc
call
or
add
push
lea
jp
add
mov
in
adc
sbb
and
(bad)
mov
push
in
jno
inc
scas
aam
scas
stc
mov
inc
fs
xchg
add
test
mov
and
or
adc
inc
ja
loope
jp
push
mov
add
mov
ror
leave
and
fistp
push
test
add
add
das
lahf
dec
xchg
or
out
je
mov
inc
mov
add
mov
or
sti
mov
dec
out
ins
sbb
xchg
loop
fdiv
xchg
push
cs
xchg
and
pop
test
pop
cmps
jge
inc
stos
arpl
lods
sbb
jmp
hlt
arpl
fild
sbb
push
mov
mov
or
imul
pop
add
dec
add
inc
add
adc
das
fst
outs
add
cli
push
add
test
iret
aas
rol
out
add
or
stos
cmps
sbb
fnstenv
xchg
add
mov
sbb
jo
push
shl
xor
adc
and
mov
das
(bad)
push
lods
lods
adc
test
fisttp
add
stc
cmp
and
inc
fbld
mov
jp
add
pop
lock
lea
neg
in
jne
add
in
and
lahf
jmp
mov
add
clc
ja
(bad)
xor
and
dec
lods
add
pop
mov
or
cmp
jne
cmp
loope
mov
sti
cmp
push
mov
or
pop
pop
push
adc
dec
pop
rcr
push
jne
daa
into
adc
sbb
mov
stos
sub
or
sbb
dec
aaa
call
(bad)
inc
cmc
dec
inc
loope
xor
jge
and
sbb
or
cmp
push
vmovss
js
pop
out
pop
dec
jb
xchg
or
mov
in
jl
les
sbb
pop
and
andnps
dec
popa
(bad)
icebp
add
pop
xchg
sub
rol
and
(bad)
dec
jno
push
sbb
pusha
js
add
or
push
pushf
sar
enter
add
push
cmp
sbb
sbb
pcmpgtb
in
leave
nop
sbb
dec
sub
jl
push
imul
in
mov
push
sub
xlat
xlat
push
pop
mov
sub
movs
mov
into
je
gs
pushf
cmp
cmp
fbstp
call
or
adc
ds
js
fsub
(bad)
inc
movs
adc
or
inc
or
enter
jle
pop
or
push
fcomp
push
jmp
jl
jne
pushf
cmp
ret
jno
shr
xor
pop
sub
addr16
lea
or
sbb
inc
pop
xchg
(bad)
fsub
lods
out
jns
and
inc
sbb
add
adc
xchg
jb
(bad)
xchg
push
mov
inc
mov
sbb
jg
inc
sbb
xchg
mov
pop
and
inc
shl
push
sbb
inc
sbb
test
dec
sbb
or
lods
or
fcomip
call
xchg
push
call
xor
mov
jbe
add
add
ret
or
and
sbb
or
push
scas
dec
and
inc
pop
int
inc
and
adc
dec
and
inc
lods
adc
jne
(bad)
in
pop
rcl
add
sbb
retf
jne
sub
fwait
add
clc
push
nop
add
fs
das
clc
addr16
xlat
dec
test
jl
inc
xchg
mov
mov
mov
inc
dec
jne
retf
lock
pop
jg
sub
push
xchg
mov
jmp
cmp
adc
jmp
or
xor
dec
jne
std
sbb
out
jns
cmps
mov
in
push
les
or
mov
adc
inc
movs
add
rol
mov
cmp
scas
inc
retf
or
cmps
idiv
inc
sbb
lea
rol
push
cmps
outs
rol
inc
movs
pop
in
push
lea
repnz
mov
in
or
lahf
mov
mov
xor
popf
jmp
push
sub
xchg
push
or
scas
pop
mov
adc
mov
cmp
scas
shl
mov
inc
xor
enter
data16
sub
xlat
cdq
clc
dec
je
sub
jle
mov
inc
movsx
mov
cmp
sub
pop
mov
hlt
or
fild
sbb
and
fisttp
daa
pusha
add
aaa
push
mov
out
aad
fwait
test
aas
das
jns
push
push
adc
add
shl
fldenv
leave
add
sub
not
test
inc
shl
xor
pop
pop
mov
jg
adc
cmp
or
dec
adc
mov
mov
jns
std
inc
fcomp
fstsw
sahf
ja
sbb
data16
popa
mov
dec
pop
outs
sub
inc
in
cmp
(bad)
or
lods
adc
dec
cld
pop
xor
or
push
or
out
cmp
pop
cmp
ja
jmp
jg
push
int3
(bad)
and
adc
jbe
call
ror
sbb
fldenv
add
das
sbb
sbb
test
cmp
xor
stos
pop
or
push
pusha
outs
mov
inc
xchg
jae
(bad)
movs
clc
cmc
adc
mov
pusha
lock
mov
sbb
aas
adc
inc
jae
sub
mov
jae
je
mov
push
ret
fisub
xchg
outs
ins
mov
fidiv
mov
push
jno
xchg
pop
add
and
scas
jnp
xlat
and
jne
outs
xchg
mov
sbb
aam
sbb
push
pop
cmps
mov
test
imul
idiv
dec
cmp
popa
push
xor
out
fcomp
pop
add
mov
pop
outs
pop
jg
data16
clc
adc
cli
push
jg
(bad)
mov
outs
xlat
push
xor
xor
xlat
xor
push
add
cdq
(bad)
jb
and
or
pop
repnz
jg
pop
xor
cmp
test
mov
rol
addr16
(bad)
addr16
add
pop
jp
xor
and
popa
sub
xor
div
pop
push
pop
mov
sub
test
inc
xchg
dec
std
sub
xor
and
inc
shl
add
mov
push
and
pop
xchg
mov
out
pop
je
lahf
push
sbb
mov
ret
ret
jle
jo
loopne
pop
push
loopne
popa
sar
adc
out
lahf
mov
outs
mov
and
pop
dec
enter
jnp
sbb
inc
sbb
xor
push
rcl
fld
sbb
ja
pop
or
scas
fmul
inc
test
or
aaa
dec
mov
push
lahf
hlt
and
in
vmread
push
es
aad
push
in
add
add
and
pop
aam
fs
aam
clc
mov
stos
and
push
clc
mov
shl
clc
push
cwde
pop
outs
mov
mov
mov
or
mov
dec
inc
add
test
aas
cli
xchg
call
sbb
lock
into
adc
or
mov
scas
jmp
sub
pop
sbb
inc
mov
sbb
and
jbe
mov
dec
ret
hlt
inc
pop
jg
pop
jecxz
stos
and
aas
aaa
imul
arpl
ret
stc
sbb
test
div
ret
stos
mov
ror
pop
jp
jbe
or
out
xor
xor
mov
push
cmp
addr16
mov
pusha
pop
cmp
push
jmp
xor
xor
ror
inc
fnstcw
ins
jl
mov
mov
in
mov
push
ja
dec
push
imul
gs
dec
lods
add
sbb
xor
shr
mov
fs
dec
mov
test
xchg
sbb
xor
cmp
arpl
pop
add
jbe
rol
daa
xor
fiadd
into
mov
inc
or
inc
sbb
or
leave
sbb
sbb
pop
cmp
sub
push
pop
aaa
int3
(bad)
or
pop
cmp
aaa
push
xor
xor
xchg
add
aas
xor
cmp
in
(bad)
push
push
adc
(bad)
in
hlt
push
(bad)
ins
adc
jl
aam
nop
inc
dec
pop
pop
je
test
out
mov
fld
call
leave
faddp
fstp
fwait
mov
in
test
inc
inc
inc
push
loopne
out
or
mov
push
jmp
inc
xor
js
cmp
jge
(bad)
shr
fistp
fmul
fdivr
fbstp
mov
jle
mov
jecxz
stos
xor
add
sbb
jle
and
int3
loop
inc
cdq
fdivr
add
add
in
xchg
cs
mov
cmp
in
shl
mov
vmwrite
inc
push
add
mov
not
call
popa
pop
cmp
in
xchg
jge
int
ins
data16
adc
mov
xor
push
inc
clc
lods
test
xor
push
add
sbb
das
or
push
xlat
(bad)
in
jl
mov
push
(bad)
lock
add
pop
sub
mov
das
stos
lock
cmp
or
dec
aaa
aaa
clc
dec
scas
ins
dec
jmp
cmp
xor
adc
or
mov
or
mov
cmp
inc
addr16
xor
add
jl
mov
cmp
mov
je
ins
mov
cdq
mov
cmp
inc
dec
inc
xor
cmp
inc
cmp
and
push
xor
div
jp
test
shr
les
xlat
push
push
in
push
jmp
mov
adc
addr16
push
outs
jg
inc
clc
adc
cwde
push
and
ds
cld
sbb
push
adc
fdiv
ds
and
and
nop
cmp
inc
outs
aad
aad
ss
or
mov
jge
scas
mov
lods
adc
test
and
add
clc
inc
cs
or
or
call
cmp
loopne
rol
jle
dec
push
in
push
sbb
test
cmp
mov
sar
jp
push
into
xchg
ins
hlt
add
sub
inc
adc
jecxz
pop
adc
cmps
cmp
inc
push
ins
fst
sbb
pusha
int3
sahf
jnp
mov
cmps
push
pop
popa
xchg
mov
push
or
jmp
outs
lock
mov
jp
fisttp
xor
jmp
adc
in
js
add
add
dec
(bad)
adc
add
or
sub
ror
into
imul
retf
mov
jmp
or
das
mov
(bad)
out
cmp
in
mov
adc
ss
icebp
stc
icebp
push
sub
xor
aam
loopne
sbb
mov
ror
cmp
(bad)
adc
pcmpeqw
jge
lahf
cmp
pop
out
cmp
add
cmp
add
in
es
mov
nop
sub
(bad)
pop
stos
add
mov
leave
test
or
fisub
addr16
inc
lahf
rol
pop
lock
aas
pushf
pop
sbb
js
cmp
adc
or
mov
mov
adc
sbb
in
jne
(bad)
jp
inc
(bad)
xor
xor
rcr
aaa
jl
mov
inc
xor
cmp
cmp
jne
add
sub
stos
pusha
or
add
inc
lock
cld
fsubr
fld
mov
fsub
outs
jle
cmp
pushf
or
clc
pusha
mov
mov
inc
bound
in
sub
inc
sub
out
aas
test
jge
add
push
jle
push
dec
or
add
fcompp
imul
and
and
xor
cmp
je
push
neg
js
icebp
cmp
and
inc
lock
pop
jmp
cmp
mov
shr
mov
jo
inc
push
xor
adc
inc
or
shl
ins
(bad)
adc
inc
add
loopne
inc
add
push
add
push
add
jno
call
popa
es
adc
push
fcmovb
push
add
xor
pop
cmp
xchg
dec
in
and
mov
or
shl
push
lock
(bad)
lock
scas
mov
ins
cmp
sbb
sub
push
xchg
sbb
sbb
cmp
jne
jmp
xor
jp
adc
xor
sbb
dec
and
push
lods
mov
push
mov
jle
ja
and
inc
movzx
mov
cld
mov
push
lods
das
outs
das
outs
mov
add
xchg
pusha
imul
outs
xlat
sub
xor
add
lahf
jmp
sbb
mov
mov
or
mov
sbb
bound
cmp
mov
addr16
push
lods
adc
cmp
addr16
or
mov
mov
add
jg
xor
pop
push
sub
stos
pop
xor
popa
mov
jge
fs
test
movsx
lds
push
pop
push
add
pop
pop
popa
sbb
movs
pop
fistp
lock
add
inc
movzx
push
jb
mov
test
loope
aam
aad
mov
aad
test
inc
loopne
dec
lahf
fcom
pop
sub
adc
add
adc
ss
call
into
lods
inc
sbb
xor
pop
call
ror
scas
mov
mov
jl
(bad)
mov
fiadd
or
nop
cli
test
pop
mov
xor
rcl
js
addr16
xor
(bad)
or
inc
jmp
(bad)
inc
mov
mov
cmp
aam
add
cmp
sahf
mov
and
(bad)
xor
nop
pop
and
js
retf
xor
jmp
sbb
(bad)
dec
aaa
popa
jo
fistp
xchg
add
imul
mov
int
jmp
sub
lock
dec
in
xor
xor
lea
imul
test
lock
jnp
cmp
jb
call
cmp
pusha
jne
es
mov
cmp
lock
cmp
dec
jne
jge
sbb
jae
jo
sbb
enter
popa
pop
neg
fmul
sahf
mov
ror
jmp
fldenv
pop
fsubr
push
repnz
test
pop
scas
cmp
dec
jp
jle
data16
shl
loopne
cmp
sbb
xchg
sbb
xchg
jb
sbb
lock
cld
arpl
retf
and
dec
jne
das
daa
js
(bad)
xchg
jl
call
xchg
dec
call
dec
dec
adc
xor
xor
xchg
loope
mov
(bad)
pop
repnz
pop
add
pop
mov
cwde
mov
je
imul
fwait
sub
test
cs
xor
aam
outs
mov
call
mov
test
ja
pop
imul
test
add
lods
out
mov
pop
int
inc
sbb
ja
(bad)
icebp
rol
inc
dec
js
les
mov
ficom
and
adc
mov
int3
ins
aaa
fnstsw
mov
loopne
outs
mov
inc
imul
fadd
shl
inc
es
out
(bad)
or
jp
clc
jge
cmps
fst
add
adc
or
xor
mov
daa
jl
push
les
mov
push
sbb
inc
mov
adc
push
ja
gs
or
jo
in
add
aam
jmp
iret
loopne
dec
add
push
dec
bound
arpl
(bad)
in
je
imul
jb
cmp
jns
je
ins
or
outs
addr16
popa
data16
push
inc
inc
pop
inc
outs
ins
ins
ds
adc
jb
jo
pop
pop
mov
cld
gs
dec
add
dec
sbb
jl
lods
add
or
ins
data16
or
sub
add
or
popa
jo
arpl
jns
add
cs
or
add
call
jbe
push
adc
add
add
mov
popa
pop
jg
adc
rcr
add
ins
inc
gs
cwde
jae
rcr
(bad)
ins
mov
jae
jecxz
neg
out
lidtd
sub
jecxz
scas
push
cwde
es
aad
cmps
sub
mov
add
push
in
jnp
pop
sbb
add
cmps
sbb
xchg
mov
ds
mov
push
scas
push
bound
or
adc
inc
stos
jnp
pushf
cdq
mov
call
push
scas
cdq
scas
push
xor
xchg
mov
in
pop
cmp
test
je
push
hlt
adc
das
xor
mov
inc
ins
mov
xor
add
push
add
jae
xchg
ror
outs
prefetchwt1
inc
das
(bad)
pop
mov
and
fs
mov
jo
mov
inc
stos
xor
test
mov
mov
sbb
cmps
pop
xchg
dec
mov
inc
sub
mov
cs
push
outs
das
lea
add
inc
lea
data16
fwait
ins
sub
push
mov
pop
push
add
inc
inc
mov
aam
sbb
punpckhbw
mov
inc
xor
dec
outs
popa
fs
call
push
sbb
ret
movs
sub
add
add
(bad)
test
cdq
mov
aad
and
cmp
dec
lods
xchg
lods
xchg
das
cmps
fsubrp
mov
loopne
push
movs
les
loop
sub
and
jle
sub
in
in
push
call
les
push
add
out
loope
jb
and
cmps
push
ja
xor
(bad)
(bad)
mov
cwde
je
cmp
jns
add
sub
sbb
mov
mov
or
fsub
push
jno
sub
or
inc
out
mov
add
xor
daa
hlt
or
xchg
(bad)
data16
popf
enter
js
push
pop
cmps
sbb
pop
lahf
inc
inc
mov
pop
pop
std
test
ins
mov
aaa
lds
hlt
add
xor
inc
adc
add
add
mov
add
shr
das
dec
aaa
js
(bad)
test
or
call
pop
inc
push
add
dec
outs
jae
and
pop
pop
shrd
and
inc
ins
popa
jae
add
push
pushw
ins
inc
call
test
mov
pop
sub
test
adc
data16
jo
inc
jo
cmps
hlt
gs
mov
or
das
pop
or
imul
pop
cmps
imul
jg
mov
xor
das
sub
ins
cmps
inc
not
aam
repnz
xchg
fld
push
js
mov
les
add
gs
aaa
mov
cmp
push
cmp
ret
lahf
sbb
fs
jb
test
test
outs
pop
jne
jp
inc
into
test
mov
mov
out
or
ins
or
ror
mov
pop
xor
imul
loopne
mov
or
jno
lods
and
in
xor
mov
inc
or
push
sub
mov
call
scas
fst
test
cmc
aam
jnp
mov
in
leave
mov
shr
popf
push
pop
mul
add
popa
mov
movs
pop
jmp
and
loop
sar
(bad)
adc
leave
mov
cmp
aam
add
iret
jecxz
mov
jge
or
fisttp
loopne
cmp
pop
addr16
push
push
xchg
adc
sbb
in
mov
and
out
stc
aaa
scas
mov
mov
cli
mov
in
and
sbb
scas
push
in
arpl
jmp
sbb
sub
dec
std
jp
sub
mov
scas
mov
clc
in
nop
add
gs
mov
ret
cmp
mov
ret
test
dec
add
add
lock
mov
pop
xor
les
add
sti
pop
add
test
jne
div
dec
ret
mov
push
add
or
mov
sub
mov
cmp
add
mov
cmp
ror
ja
add
pop
ficom
sub
mov
(bad)
je
jge
in
outs
push
or
inc
cld
jbe
sbb
imul
daa
pusha
dec
and
(bad)
cmp
add
loopne
xbegin
dec
loopne
mov
lock
mov
je
out
add
(bad)
or
mov
xchg
xor
cs
pop
push
adc
cmp
je
mov
ja
mov
aaa
push
mov
push
mov
push
sub
rol
shl
jle
pop
jmp
adc
ja
mov
jb
(bad)
jle
and
ret
jns
and
cld
jmp
stos
mov
cmp
mov
sbb
out
mov
push
add
cmp
or
mov
test
xor
dec
and
daa
push
stos
add
lock
jl
push
not
jmp
pop
or
inc
jne
mov
and
inc
push
ret
fadd
cmps
cmp
push
dec
sbb
adc
adc
ins
adc
mov
inc
aas
cmp
jg
pop
inc
sub
sbb
stc
(bad)
mov
jl
and
out
jg
or
into
or
dec
arpl
pop
and
sub
psubusb
in
and
push
fimul
(bad)
add
add
lea
clc
jmp
mov
test
dec
test
sar
sub
int
stos
jne
dec
dec
push
xor
data16
ror
or
or
cs
push
push
add
sbb
mov
push
out
cwde
imul
push
cld
nop
mov
inc
call
push
push
inc
inc
adc
lea
xor
push
pusha
adc
das
jmp
int3
or
mov
gs
inc
or
in
xchg
cld
add
loopne
dec
leave
cmp
outs
adc
jae
ror
test
out
xchg
ret
into
and
or
lock
add
sar
push
jmp
fadd
jb
jno
test
cmp
(bad)
std
or
repnz
add
pop
mov
push
sti
pmuludq
push
push
or
int
cmp
jne
jns
cli
sub
sar
jge
call
test
mov
mov
loopne
loopne
jmp
jne
adc
pop
xor
cmp
and
fwait
adc
jl
adc
add
js
outs
jp
add
jae
(bad)
iret
cmp
rcr
fcom
(bad)
pop
inc
mov
(bad)
sub
mov
add
adc
test
sbb
adc
imul
push
fmul
pusha
cli
dec
or
mov
mov
push
or
or
push
sub
inc
xor
mov
jmp
js
inc
test
adc
retf
adc
push
sbb
push
add
loopne
and
int3
cmp
and
daa
pop
rcl
push
mov
test
pop
test
or
push
ins
bndstx
clc
jno
sar
out
pusha
jnp
jle
jbe
aas
add
xor
retf
and
dec
lea
cli
pop
mov
jg
adc
push
fdivr
xor
mov
cmp
or
push
(bad)
push
add
mov
pop
add
cdq
imul
ins
mov
mov
sub
js
rol
lea
add
push
shl
jmp
pop
js
nop
inc
outs
xchg
xor
xor
(bad)
sub
or
jle
sbb
stos
mov
in
push
(bad)
add
stc
pusha
ins
mov
pop
push
jecxz
dec
mov
fnsave
or
enter
xor
add
push
cmp
ja
ins
xor
clc
inc
sub
lods
cmp
jo
enter
cmp
dec
stc
rol
inc
adc
inc
ret
add
inc
inc
test
ds
jl
jo
aad
test
dec
push
pop
enter
out
in
push
pop
sub
adc
(bad)
ins
int
add
or
sub
pop
pop
and
mov
pop
jmp
xchg
jno
and
sbb
mov
xor
pusha
sbb
and
add
inc
call
jo
mov
and
push
or
lds
inc
sbb
add
and
or
sub
mov
adc
xchg
adc
inc
bound
cmp
or
inc
mov
jo
push
mov
inc
daa
add
cmp
mov
sar
jo
sbb
sub
cmp
lock
mov
pop
xor
addr16
mov
ret
jge
rol
popf
ret
jne
dec
adc
jns
add
or
xor
ss
jno
jecxz
aas
and
icebp
rcl
(bad)
xor
sbb
dec
jg
push
fcom
jg
push
jge
mov
lock
hlt
jmp
enter
outs
or
test
pop
mov
mov
jmp
daa
enter
mov
sbb
fs
(bad)
into
fist
jge
adc
add
add
outs
icebp
jmp
pop
shl
inc
sub
cmp
inc
sub
aas
sub
xlat
xchg
xchg
loopne
add
and
aam
cmp
xor
push
add
sub
rcr
in
int
loopne
ins
into
daa
int3
aas
add
les
sbb
loopne
pop
mov
stos
icebp
sbb
dec
push
shr
push
cmp
mov
xchg
out
adc
mov
add
lock
push
mov
push
pop
cmp
xchg
push
in
xchg
mul
jb
sbb
inc
jg
(bad)
test
lock
sub
and
rol
adc
push
aaa
jo
push
sub
in
adc
push
ds
mov
aas
loopne
adc
inc
or
enter
add
out
fdivr
jge
or
std
jne
sub
inc
mov
push
inc
or
inc
(bad)
cmp
or
mov
das
jo
(bad)
push
adc
mov
adc
and
dec
jg
pushf
jo
mov
adc
ja
sbb
xchg
fidivr
les
int
sub
xchg
sbb
jb
mov
mov
push
repnz
add
ret
push
push
leave
repz
enter
add
pop
add
cmp
loopne
cmp
aaa
pop
adc
adc
enter
pop
int
add
nop
jge
dec
mov
cmp
xchg
scas
lahf
clc
cmp
test
nop
lahf
dec
mov
jnp
ret
cmps
das
test
(bad)
mov
push
mov
push
mov
(bad)
hlt
or
cmp
push
jmp
and
in
jbe
test
add
and
rcr
sar
mov
xchg
cwde
xor
fcom
jge
mov
adc
or
dec
mov
push
(bad)
les
and
(bad)
in
sbb
cmp
lods
xor
mov
mov
adc
and
aam
dec
icebp
stc
mov
push
push
icebp
mov
das
adc
arpl
sub
loopne
dec
mov
cmp
sub
leave
sub
push
dec
mov
cmps
mov
ins
test
add
mov
mov
aad
dec
mov
mov
inc
cs
mov
lods
sbb
mov
or
xor
mov
aad
pop
mov
popa
fsub
aad
or
nop
scas
test
nop
mov
lods
inc
sbb
cmc
ss
push
sub
test
and
xchg
aas
ds
cmp
mov
sub
arpl
xchg
(bad)
pop
loope
adc
mov
inc
xor
mov
mov
and
or
(bad)
fild
mov
or
imul
push
into
push
mov
aaa
jmp
cmp
int
mov
inc
mov
push
imul
push
pusha
das
add
or
xor
pop
mov
cmp
cdq
or
outs
inc
xchg
mov
movs
mov
jo
jne
cs
add
xchg
xor
pop
(bad)
or
mov
fs
(bad)
xor
push
xor
xor
xchg
xchg
lds
xchg
mov
pop
in
(bad)
int3
push
inc
(bad)
xchg
mov
mov
push
data16
or
sub
push
adc
adc
lock
add
or
cdq
pop
mov
and
stos
or
int3
jg
or
fidiv
pusha
inc
es
xchg
js
std
stos
inc
pop
lea
scas
cwde
stos
retf
xor
iret
scas
cwde
cwde
cli
outs
int
cmp
xchg
or
push
xchg
jmp
je
movs
gs
mov
sub
xchg
pop
push
inc
int3
jno
setp
pusha
ret
adc
cmps
add
mov
or
adc
(bad)
(bad)
mov
hlt
sbb
test
sub
push
(bad)
es
mov
mov
ret
jo
dec
aaa
pusha
ret
in
ds
jmp
push
cmp
fadd
rcr
dec
fild
ja
push
jo
inc
mov
push
jo
fstp
xchg
ss
push
nop
pop
int3
jg
rcl
jo
xchg
adc
sbb
xor
push
and
push
ins
(bad)
pop
inc
das
xlat
pop
aas
dec
pop
fbstp
and
push
sar
rcr
call
(bad)
sub
sbb
pop
cmp
(bad)
xchg
(bad)
push
cmp
bound
das
push
sbb
and
aas
jmp
dec
test
movs
inc
inc
cld
cmp
je
ret
out
rcr
and
clc
lods
xor
jmp
int3
pop
xor
xor
jp
scas
aaa
adc
adc
adc
xor
ss
mov
jmp
or
movs
(bad)
xlat
mov
inc
data16
pushf
jmp
je
ret
push
adc
push
add
sub
xlat
dec
bound
cli
loop
xchg
push
movups
or
or
ins
ret
add
or
pop
add
xchg
(bad)
dec
repnz
hlt
jne
lods
rcl
les
std
stos
xchg
add
cmp
mov
ins
jno
push
cmp
inc
fisttp
fs
aas
dec
pop
jmp
out
js
sub
sub
cmp
cwde
cdq
call
adc
xor
mov
imul
or
dec
push
leave
call
xchg
add
sub
or
or
dec
xchg
pop
popa
mov
xor
in
aas
loopne
pusha
out
stos
push
or
inc
ret
xchg
cli
push
dec
mov
cmp
(bad)
or
adc
sbb
or
inc
dec
mov
mov
dec
pop
mov
push
ror
mov
call
push
cmp
mov
dec
inc
(bad)
pop
mov
sar
inc
clc
cmp
cs
mov
or
pop
mov
fsubr
mov
jo
sbb
adc
out
jae
ss
xor
loopne
lods
stc
mov
cmc
push
inc
sbb
fcom
mov
inc
cmp
lea
dec
mov
dec
mov
test
cmps
mov
hlt
(bad)
test
(bad)
retf
daa
mov
dec
sar
jns
push
pop
test
lea
in
mov
test
xor
dec
test
adc
sbb
push
(bad)
mov
into
mov
cmps
mov
inc
and
test
push
ja
pusha
xchg
rcr
das
mov
push
sub
adc
mov
dec
xor
(bad)
mov
dec
lods
sub
mov
xchg
mov
dec
jecxz
inc
test
push
mov
rcr
dec
xor
mov
xlat
call
(bad)
push
jo
adc
jle
fld
dec
fcmovnb
sub
aad
push
cmp
sbb
mov
dec
mov
cmp
add
push
(bad)
xor
mov
sbb
mov
nop
sub
xchg
xor
inc
mov
lea
mov
les
(bad)
aam
out
mov
adc
mov
gs
mov
mov
inc
es
fild
dec
nop
add
mov
inc
pop
or
mov
adc
mov
adc
sbb
mov
or
pop
(bad)
cs
pop
mov
pop
and
dec
pop
pop
enter
mov
mov
mov
pop
mov
test
call
pusha
pop
leave
loopne
push
cld
cdq
pop
add
cld
mov
xor
sub
inc
adc
jno
les
mov
call
jo
inc
adc
mov
cmp
cmp
lods
add
add
out
ror
xor
hlt
cld
inc
call
ss
inc
mov
adc
nop
inc
jno
in
test
jno
nop/reserved
xor
arpl
jb
add
jmp
lahf
or
(bad)
ja
adc
fnsave
sub
sub
cmps
add
inc
lods
pop
inc
stos
push
dec
jo
pop
les
clc
and
nop/reserved
bound
dec
ds
pop
les
cmp
shl
cmp
add
pop
lods
mov
cmc
pop
sbb
lds
lods
sub
pusha
push
lods
sbb
les
add
out
dec
pop
cmps
(bad)
and
or
sub
and
jmp
adc
arpl
cmps
pop
les
lock
xchg
stc
cmps
jbe
pop
ja
push
data16
and
cmp
cmps
adc
sub
xor
cmps
(bad)
add
sub
xchg
pushf
and
fiadd
mov
imul
cmps
mov
cmps
arpl
mov
div
fsub
aad
sub
bound
addr16
mov
mov
cmps
into
cmps
inc
lods
shr
cmps
add
in
sbb
cmps
fs
inc
sub
push
ins
inc
das
cmps
inc
mov
inc
dec
cmps
inc
mov
ins
jno
add
pusha
mov
xor
or
fadd
ret
sub
pop
dec
sub
xor
retf
fs
add
fcom
dec
in
push
mov
jmp
xor
outs
js
pusha
ins
sub
fisttp
mov
push
jo
bound
(bad)
imul
in
or
xor
cmps
rol
shl
xchg
sbb
cmps
out
retf
or
sbb
cmps
and
and
cmps
arpl
lods
adc
cmps
retf
imul
cmps
push
test
cmps
sbb
mov
or
push
lods
push
xchg
mov
xchg
nop
shl
push
shl
mov
cmps
dec
in
mov
cmps
fnstcw
add
packuswb
loopne
pop
lock
pop
sbb
cmps
rcr
(bad)
cli
popf
and
add
jl
sub
test
addr16
fisubr
cmps
sub
add
mov
dec
mov
bound
dec
popf
dec
(bad)
outs
sub
(bad)
jge
and
add
or
test
push
cmp
inc
loopne
out
sbb
xor
das
rol
lds
lods
and
cmps
mov
push
cmps
jbe
pop
out
mov
adc
jmp
and
mov
ins
jl
cmps
test
inc
movq
int3
pextrw
dec
adc
xcrypt-cbc
cmps
xchg
paddusb
and
and
test
cmp
test
mov
test
loopne
pop
jno
lds
adc
cdq
popa
cmps
rol
adc
jb
mov
and
mov
cmps
jne
cmc
pusha
or
and
jl
jp
loope
cmp
xor
fwait
xchg
das
loopne
pop
mov
fst
jmp
cmps
popf
push
lods
jae
mov
adc
inc
cmps
call
inc
mov
jae
leave
sub
sub
pop
test
ss
adc
dec
daa
cmps
push
add
add
(bad)
pusha
inc
pusha
fmul
aam
dec
push
lods
cmps
test
cmp
mov
mov
je
cmps
(bad)
lea
sub
xchg
into
cmps
cmps
mov
js
add
xor
mov
sub
push
jg
das
cmps
push
aam
and
mov
loopne
add
add
popa
adc
mov
xchg
sub
mov
ret
sub
xor
mov
nop
xor
retf
cmp
add
fcom
dec
in
push
mov
jmp
xor
inc
mov
fistp
dec
mov
es
bound
(bad)
jl
jno
inc
lea
daa
je
das
in
or
xor
cmps
rol
shl
and
sbb
cmps
out
sub
sbb
cmps
jo
pop
push
nop
rol
xchg
xor
inc
mov
lds
cmps
jmp
push
push
inc
cmps
ds
adc
(bad)
cwde
out
cmps
add
sbb
sub
sub
dec
mov
inc
mov
mov
inc
es
fild
dec
nop
add
sbb
test
sub
cmps
jo
mov
mov
adc
jg
adc
ja
cmps
adc
aas
adc
jnp
inc
sub
jo
dec
mov
bound
test
daa
aam
push
lock
cmp
cwde
pop
adc
xor
imul
cdq
mov
adc
pop
push
in
mov
cmp
adc
add
inc
mov
out
(bad)
pop
enter
mov
rol
mov
nop
sub
mov
call
jae
push
mov
call
lods
cmps
adc
xchg
add
lea
adc
sbb
lods
pop
cmps
adc
dec
hlt
and
shrd
pop
and
mov
ins
(bad)
in
pop
cmp
push
xchg
xchg
daa
jae
inc
and
mov
(bad)
arpl
adc
cmp
pop
pop
inc
sbb
push
bound
in
add
mov
das
call
cmp
jge
cmp
jns
and
movs
test
pop
test
jle
dec
lock
mov
sub
test
mov
in
test
jl
cmps
add
ret
popf
add
inc
cli
(bad)
add
test
in
pop
xchg
pop
and
mov
xchg
test
inc
aaa
hlt
out
out
xchg
loope
or
adc
in
dec
mov
jmp
add
dec
test
mov
add
iret
inc
loopne
xor
mov
adc
or
loop
hlt
pop
js
nop
dec
or
jae
lock
dec
adc
or
retf
cmp
jb
sbb
push
enter
pushf
mov
push
xor
add
push
push
hlt
cs
jmp
and
push
adc
ins
test
xlat
mov
adc
adc
rol
(bad)
mov
ror
mov
jo
mov
mov
out
mov
pop
xchg
adc
add
scas
scas
cmc
add
jno
(bad)
je
add
in
inc
sbb
sbb
inc
inc
enter
lahf
inc
mov
adc
add
addr16
dec
cwde
lock
add
arpl
dec
sbb
cmp
dec
cmp
ss
and
sbb
ds
inc
sbb
add
or
push
cdq
call
(bad)
jmp
push
pop
xchg
push
lahf
push
iret
xor
mov
jnp
dec
shl
add
mov
retf
dec
dec
in
lods
in
fst
std
push
mov
push
or
outs
push
cmp
and
mov
mov
lods
aad
xchg
sub
rcr
into
jb
scas
sbb
shr
xchg
pusha
sub
xchg
push
or
ror
xor
dec
mov
pop
sub
mov
add
cmovp
in
out
mov
in
mov
add
pop
dec
push
dec
push
imul
je
jnp
jl
outs
ins
out
push
lea
xchg
sub
fiadd
or
(bad)
stos
jne
add
call
push
iret
ret
push
out
cld
add
pop
push
pop
or
dec
in
(bad)
pop
cld
mov
add
jl
or
pop
mov
or
les
add
push
push
mov
mov
bound
(bad)
or
pop
pop
stos
jmp
addr16
cld
and
push
sbb
(bad)
mov
push
fcom
fnstcw
pop
int
cmp
ins
inc
ror
movs
push
cmp
or
loopne
and
jne
mov
add
add
jbe
cmp
cmc
push
ror
jne
fiadd
cwde
pop
std
(bad)
add
mov
test
dec
pop
xchg
push
hlt
jge
add
in
sub
cs
out
inc
pushf
pop
and
sub
mov
hlt
sbb
into
xor
aam
sub
and
push
adc
sbb
mov
or
push
cmps
stc
shl
or
(bad)
or
jmp
leave
repz
ror
(bad)
retf
inc
outs
inc
lea
shr
fcomp
pop
jo
fild
daa
popf
retf
push
push
loopne
push
mov
mov
pop
push
xor
es
add
or
mov
fmul
lea
jmp
adc
int
mov
add
inc
cmp
je
add
or
xchg
clc
mov
pop
or
xchg
adc
dec
out
out
push
hlt
mov
xor
shl
aaa
fild
outs
inc
mov
or
out
cmp
xor
mov
hlt
pop
fld
inc
or
xlat
in
inc
out
sbb
jp
mov
add
popf
push
shr
pop
add
jl
js
push
dec
adc
inc
rcl
add
stc
mov
cmp
mov
push
loopne
loopne
test
enter
stos
icebp
xor
idiv
and
pop
xchg
add
cmp
adc
cmps
jg
adc
xchg
data16
neg
dec
movs
xchg
addr16
dec
pop
iret
rol
jge
or
jo
xor
add
sub
push
adc
pusha
or
push
mov
or
push
in
dec
cmp
xchg
clc
dec
loopne
jge
mov
add
stos
iret
inc
jno
mov
add
add
cs
jno
stos
mov
xor
or
js
cmp
sub
mov
jae
loopne
stos
rol
xor
out
or
repnz
push
inc
mov
call
lods
pop
sub
imul
xor
sub
adc
jmp
sub
pop
into
xor
mov
gs
dec
pop
fwait
mov
xchg
mov
mov
push
fadd
xlat
xor
jge
mov
xchg
push
repnz
push
ss
push
xchg
hlt
add
in
mov
jo
stos
xor
xor
mov
adc
jg
jl
loopne
loope
mov
xchg
mov
aad
sbb
mov
or
test
aam
dec
xchg
shl
mov
sub
mov
movs
pop
push
loope
and
and
ret
jne
mov
ret
ret
pop
pop
fwait
movs
dec
xchg
outs
push
fldenv
or
xlat
(bad)
and
fst
cmp
jl
inc
cld
lea
mov
push
call
pop
inc
dec
jne
or
pop
scas
fild
out
cmp
add
popa
dec
lods
or
mov
inc
aad
popa
jle
rol
mov
mul
add
cmp
jne
cmps
sub
mov
cmp
pop
jo
mov
or
dec
sbb
or
retf
mov
push
mov
loop
dec
cmp
cmp
pop
or
adc
ret
fsubr
jbe
push
push
test
jbe
movs
jns
jmp
retf
mov
cmps
pusha
je
xor
ss
push
and
dec
sub
pop
or
jne
cmp
iret
lods
js
xchg
jg
jne
dec
clc
xor
add
jns
fadd
and
jle
xchg
mov
mov
das
rol
or
inc
stos
or
push
mov
fistp
jecxz
mov
adc
push
call
jmp
pop
mov
push
fwait
xchg
fidivr
mov
jnp
mov
push
xchg
call
sub
and
dec
pop
shl
add
ret
inc
and
lahf
push
(bad)
outs
daa
popf
or
cmp
ins
mov
nop
and
inc
daa
xchg
pop
call
cmps
cdq
sub
xchg
sbb
mov
mov
push
pop
pop
mul
and
cmp
xchg
push
xchg
add
dec
adc
cmp
daa
movs
cmp
movs
xchg
cmp
cmps
or
mov
test
xchg
rcr
push
push
cmp
fild
call
or
test
inc
jmp
push
add
sbb
daa
pushf
loopne
call
daa
adc
and
hlt
daa
xchg
cmp
cmps
dec
dec
loopne
out
and
xor
cmp
fwait
cmp
push
inc
mov
dec
and
pop
and
lods
jmp
nop
adc
adc
(bad)
or
pop
adc
dec
lods
daa
repz
retf
daa
push
(bad)
scas
and
push
mov
aas
push
shr
daa
popf
les
mov
jne
shr
mov
aam
popf
or
mov
inc
ss
xchg
je
mov
stos
xchg
adc
in
push
push
sbb
sbb
daa
mov
and
daa
and
inc
add
xchg
mov
sub
push
push
daa
stos
test
push
push
sub
mov
daa
popf
and
or
daa
xchg
lods
dec
push
sahf
js
sub
daa
je
sub
or
arpl
push
cmp
push
movs
aad
push
push
daa
jp
dec
push
or
jbe
add
push
stc
xchg
sbb
pop
jecxz
jb
ja
xchg
add
out
add
dec
mov
popa
mov
sub
inc
adc
loope
sub
adc
or
and
xor
xor
out
fsub
or
add
add
rcr
xchg
lock
sbb
pop
lea
nop
add
rol
pop
in
push
cld
or
mov
ins
cmc
in
push
add
js
xlat
loope
adc
das
xchg
jmp
(bad)
jl
in
and
xchg
pusha
and
stc
xchg
dec
or
cdq
push
in
ror
push
sub
push
sub
outs
pushf
divps
push
adc
pop
cmp
dec
js
push
sbb
pop
mov
inc
push
(bad)
jne
xcrypt-ofb
cmps
scas
neg
add
sar
add
or
push
xlat
cmp
leave
sbb
mov
lock
pop
push
mov
sbb
loopne
add
loope
add
(bad)
je
jo
push
idiv
sbb
pusha
sub
scas
cwde
push
mov
dec
mov
cmc
daa
and
inc
hlt
sbb
lock
adc
sbb
jmp
enter
outs
inc
dec
jne
cmps
mov
jecxz
inc
mov
add
add
(bad)
mov
adc
xchg
ficomp
and
cmp
je
ins
cmp
or
call
pop
cli
stos
add
and
aad
pop
fsub
push
cmp
aad
add
lock
ss
out
in
nop
jp
pop
dec
add
add
push
shr
mov
sbb
in
fs
push
retf
add
or
dec
and
test
fs
shr
and
rcr
inc
nop
cmp
sbb
mov
mov
int
sbb
adc
inc
mov
sub
out
sbb
push
mov
jnp
(bad)
fidivr
or
dec
test
unpckhps
fdivr
fsub
test
sub
pop
sbb
inc
sub
xchg
sub
sub
jnp
push
mov
xor
mov
mov
or
or
push
pop
call
cmp
jmp
adc
(bad)
lea
xchg
xor
mov
jge
(bad)
push
mov
sbb
rcr
dec
pusha
dec
or
pop
add
push
and
cdq
or
outs
inc
xchg
inc
add
push
push
je
dec
shl
lods
sbb
xchg
add
cmps
dec
jge
(bad)
and
cmp
sbb
lea
add
mov
sbb
xor
or
xlat
xchg
and
mov
jne
jne
movs
push
push
inc
(bad)
xchg
dec
imul
jl
loopne
loopne
sub
jae
lods
xchg
fst
jae
push
cdq
dec
adc
in
cmp
sbb
or
retf
sbb
and
jmp
mov
sub
test
jg
mov
cmp
or
xchg
cld
aam
or
push
cmp
shr
or
cwde
dec
test
cmp
cmps
inc
xor
(bad)
cli
cwde
push
sbb
or
sahf
retf
xor
sub
lock
xchg
je
adc
sbb
in
rcl
push
and
add
add
int3
jp
add
lods
dec
jo
ins
inc
mov
push
ins
mov
jno
sub
and
arpl
sub
and
dec
xor
cmp
std
push
fs
add
sbb
pop
push
inc
xchg
jle
movs
das
ins
(bad)
add
sub
mov
jmp
fadd
das
sub
or
test
mov
lock
xor
pop
push
loope
xor
xor
in
cmp
lock
add
adc
inc
xlat
ds
(bad)
cmps
or
sbb
cmp
mov
inc
dec
mov
mov
jno
aas
icebp
mov
or
pop
pop
(bad)
push
sub
adc
retf
movs
les
add
shl
inc
adc
sub
das
lahf
xchg
push
adc
iret
xor
jo
or
push
scas
sbb
rcl
cmp
xchg
(bad)
mov
je
stos
aam
fs
jge
out
clc
xor
sbb
or
int3
test
add
sbb
sbb
bound
sbb
or
and
mov
sbb
(bad)
aam
imul
sub
int3
mov
and
test
stos
cmp
and
je
ret
out
mov
xchg
push
inc
icebp
jg
or
dec
jne
jmp
cwde
mov
jl
pop
enter
add
add
jmp
pop
loope
setge
in
shl
inc
pop
fcom
or
or
xchg
mov
mov
or
jmp
in
sub
xor
fild
dec
adc
dec
hlt
inc
iret
arpl
pop
cmps
xchg
ret
adc
mov
aad
fadd
cmp
inc
mov
sbb
inc
lods
in
je
mov
jmp
repnz
jne
mov
div
push
or
xchg
add
call
outs
sub
repnz
add
mov
inc
and
xchg
aas
sub
out
and
mov
mov
sub
cmps
inc
mov
xor
inc
or
mov
push
inc
pop
stos
mov
dec
inc
or
out
xchg
je
sbb
loopne
das
inc
lock
lea
cmp
xchg
loop
imul
mov
mov
aas
fisubr
push
nop
leave
dec
pop
lock
call
inc
cs
call
je
mov
push
adc
xlat
movs
in
scas
int3
add
jg
xor
outs
es
mov
shl
add
cdq
adc
mov
add
into
les
rol
xor
jno
loopne
push
push
add
aad
jmp
sbb
mov
hlt
cld
inc
mov
or
adc
mov
mov
inc
and
jno
mov
cmp
mov
arpl
out
nop
pop
jae
(bad)
data16
fldenv
xchg
dec
data16
dec
out
sbb
ja
sbb
shl
cmp
aas
adc
(bad)
aas
mov
or
mov
aas
xor
push
nop
clc
dec
dec
sbb
repz
or
or
inc
mov
pushf
pfcmpgt
sub
xchg
fs
bnd
mov
mov
mov
xchg
jl
in
xchg
mov
lea
mov
clc
xchg
ja
dec
lds
mov
cmps
pushf
xchg
pop
imul
mov
imul
cmps
shl
mov
add
or
cmc
pusha
pop
add
mov
pop
jl
mov
pop
loope
adc
pop
arpl
icebp
adc
mov
cmps
(bad)
sbb
stc
cmps
ins
mov
aam
pop
xchg
loope
mov
mov
or
mov
adc
cmps
jno
in
sub
or
mov
pop
sub
daa
pop
arpl
mov
and
out
popa
fsub
aad
and
ja
cmp
dec
push
cmps
pop
mov
adc
sbb
test
in
js
nop
inc
mov
mov
gs
vcomiss
mov
mov
cmps
aaa
rcr
push
pushf
and
adc
dec
xchg
add
cmps
sub
mov
or
add
push
js
retf
les
mov
or
movs
push
dec
mov
pusha
push
lods
inc
cmps
xor
(bad)
adc
shl
fucomi
test
fist
repnz
cmps
ret
dec
cmp
in
cwde
mov
and
in
xor
and
bound
test
cmps
xor
or
add
cmps
mov
sub
pop
mov
pop
enter
pop
lods
mov
cmps
and
jb
cmps
push
bound
out
cmps
(bad)
add
inc
and
and
adc
mov
adc
push
lods
push
mov
cmps
les
aad
cmps
sbb
test
cmps
add
mov
dec
and
cmp
inc
cmps
push
(bad)
cli
cmp
movs
cmps
fsub
sub
inc
mov
addr16
fwait
push
sbb
movs
cmps
(bad)
adc
jmp
aas
imul
call
sbb
cdq
lods
jae
dec
pop
shl
xlat
mov
enter
inc
jp
les
rol
test
out
lea
pop
das
add
cli
fst
jmp
call
mov
mov
retf
mov
call
movs
mov
stc
sub
(bad)
and
enter
leave
adc
leave
jo
inc
xor
(bad)
jl
leave
in
mov
pop
xchg
retf
ja
lds
div
push
cwde
loop
or
sbb
mov
jne
cmp
mov
push
xor
mov
ror
fdivr
jo
sbb
sbb
das
call
movzx
loop
dec
test
pop
jns
pop
sar
xor
in
jge
add
sbb
xor
in
scas
jmp
and
paddsb
xchg
adc
sub
pop
stos
add
inc
jne
pop
jnp
imul
fsubr
inc
dec
add
das
iret
fld
rol
fdiv
(bad)
mov
mov
mov
lods
sub
sbb
xchg
push
or
mov
daa
sbb
cmp
and
mov
in
bt
mov
pop
cmp
mov
(bad)
jne
jecxz
iret
adc
jns
or
ja
sub
push
xor
out
int3
mov
ds
fst
mov
retf
sub
dec
cs
add
(bad)
inc
xor
cli
popf
jns
iret
mov
add
xor
jle
cmps
fcomp
int
xor
xor
mov
cmps
aaa
and
pusha
mov
data16
mov
loopne
fbld
xor
cmps
in
or
test
fcomp
cmps
jmp
and
jae
jge
cmp
adc
push
into
xor
or
cwde
mov
xchg
jge
jg
shr
imul
cmp
jle
mov
lock
mov
sub
daa
xlat
mov
xor
jle
or
pusha
popf
scas
add
sub
xor
pcmpgtd
jmp
mov
xchg
outs
test
push
sbb
test
mov
sub
(bad)
fucomip
lsl
stos
jo
xor
mov
cli
sti
push
mov
in
mov
adc
icebp
das
xor
inc
or
dec
or
push
jmp
dec
add
push
pop
adc
enter
sbb
jp
push
cwde
push
repnz
pop
inc
mov
and
xor
mov
xor
or
push
cwde
xor
pop
jmp
adc
mov
or
pop
les
adc
(bad)
add
add
loope
add
adc
adc
shl
test
mov
rcr
sub
mov
pop
adc
adc
xchg
es
pop
test
(bad)
ficom
or
add
(bad)
and
shl
add
adc
ret
iret
ret
sub
xor
cmc
sbb
aas
add
mov
or
std
lods
inc
jecxz
sbb
or
cmc
test
inc
rol
mov
add
mov
arpl
test
out
pop
lods
dec
and
std
xor
lock
int
or
lock
or
dec
(bad)
pop
mov
cmp
add
test
pusha
sbb
inc
not
aaa
xor
mov
jnp
shl
adc
push
or
inc
cmp
cwde
in
lods
std
inc
xor
out
xlat
mov
pop
sub
lods
pop
mov
jo
jb
(bad)
cmp
fdiv
clc
jmp
js
test
js
dec
and
in
add
int3
jmp
in
test
cmp
aam
sbb
xchg
retf
dec
aam
sbb
cli
movs
rol
pop
rcr
add
cmp
pusha
les
jle
dec
push
add
dec
das
scas
(bad)
lock
je
jnp
jl
push
lea
add
sahf
or
adc
cli
call
add
add
add
sub
(bad)
retf
mov
jnp
(bad)
in
les
sbb
jl
mov
and
cmp
and
fwait
mov
inc
add
dec
mov
inc
jno
add
shl
je
addr16
and
addr16
test
rol
jo
daa
push
fnstcw
(bad)
hlt
mov
mov
add
fisttp
loopne
and
jne
rol
add
jbe
daa
mov
push
cmp
inc
out
dec
jne
call
inc
(bad)
add
or
shl
xchg
ds
pop
fadd
pop
pop
xchg
cmp
push
add
nop
test
ds
jmp
test
inc
adc
into
sar
push
inc
sub
fidivr
out
nop
in
mov
lods
xchg
popa
sub
add
ds
adc
xor
mov
and
or
scas
inc
push
out
inc
aaa
repz
fisttp
stos
retf
dec
inc
add
pusha
mov
sub
shl
push
mov
push
jo
outs
push
cmp
mov
mov
int
jo
add
loopne
push
test
jle
add
test
pushf
jmp
or
adc
adc
dec
hlt
fnstenv
xor
out
fs
inc
inc
cmp
movs
push
mov
push
jb
dec
cmp
test
jle
ins
fdivr
call
loop
sub
ds
inc
out
sbb
sar
sub
inc
add
lea
ror
mov
jmp
adc
ficom
xchg
aaa
loop
push
rcr
scas
lock
dec
xlat
dec
popa
mov
je
jmp
iret
cmp
fsubr
stos
icebp
sub
fdiv
aas
jmp
aas
mov
add
cmp
adc
xchg
push
hlt
xchg
and
iret
hlt
inc
jg
shl
imul
xor
dec
add
clc
push
adc
add
add
xor
pop
test
cmp
cmp
mov
mov
push
inc
push
js
inc
add
add
test
fstp
xchg
jb
jmp
sbb
adc
sub
lods
cmp
in
or
xor
sub
scas
add
mov
call
inc
push
jne
lods
push
inc
mov
push
pop
loopne
inc
lods
outs
sbb
outs
jg
or
fnstenv
xchg
push
mov
jmp
ss
mov
mov
inc
add
sbb
mov
sbb
mov
mov
xor
sbb
fadd
jge
mov
mov
cmp
ss
add
cmp
hlt
adc
in
mov
jo
ds
jle
mov
js
iret
into
cmp
jno
int3
in
mov
pusha
add
xchg
mov
pop
xchg
add
in
push
pop
cmp
shl
sub
adc
add
push
push
jo
jbe
adc
pop
mov
push
test
test
push
ret
jne
xchg
rol
ret
pop
mov
das
push
xchg
push
jbe
xlat
aas
scas
adc
xchg
cmp
jl
inc
fs
dec
clc
lea
xchg
fs
jmp
inc
dec
jne
or
pop
cs
push
out
dec
add
cmp
jne
inc
mov
ins
jae
push
es
dec
cmp
push
sbb
dec
inc
aad
iret
(bad)
mov
add
cmp
jne
cmps
sub
mov
cmp
pop
jo
mov
or
dec
sbb
or
retf
mov
push
mov
loop
dec
push
add
sbb
push
pushf
pop
or
adc
popa
out
ins
scas
push
jbe
push
push
test
push
jmp
retf
fdiv
sub
clc
cmps
pusha
je
sbb
bound
push
push
and
daa
adc
jbe
or
jne
or
iret
mov
jne
mov
inc
fimul
jns
fs
ins
jns
lods
adc
jle
sub
mov
pop
add
stos
mov
mov
sbb
cmp
adc
cmp
ficomp
retf
vpmacswd
jmp
fidiv
in
jp
push
test
(bad)
pop
cdq
gs
mov
mov
add
fld
fisub
setg
(bad)
loopne
test
outs
ja
aam
jmp
xchg
out
ja
sub
ins
das
pop
dec
test
ja
ins
ficomp
data16
test
in
in
je
fwait
ja
jb
adc
in
xor
jns
daa
cmp
movs
fidivr
or
ins
out
das
jns
mov
inc
je
aad
mov
or
jne
pop
sub
jmp
pop
inc
push
sub
adc
inc
push
add
sbb
repnz
jo
mov
daa
daa
out
sbb
cmp
popf
add
and
fnstsw
stos
imul
fbstp
or
in
pop
cmp
add
dec
push
sub
inc
daa
pop
ss
sub
pop
aam
cmp
push
daa
jecxz
nop
mov
pop
nop
daa
push
inc
push
mov
pop
js
daa
repz
retf
test
push
sbb
dec
out
inc
mov
or
add
aam
inc
daa
jmp
aas
repnz
push
daa
(bad)
sar
stos
dec
dec
add
dec
ins
xor
loope
lods
daa
sbb
daa
jmp
xchg
xchg
or
add
daa
fisttp
daa
adc
fsubrp
pop
push
test
adc
stos
daa
fldenv
mov
daa
call
push
out
and
mov
jmp
push
daa
je
inc
sub
adc
jmp
rcr
and
and
push
shl
out
xor
fnstcw
xor
cmp
jne
test
je
les
fbld
pop
int3
mov
adc
sbb
add
push
lds
outs
or
mov
push
xchg
mov
jg
adc
or
or
xchg
outs
sbb
or
push
sub
push
mov
or
xor
fld
and
sbb
push
push
mov
add
mov
or
sbb
out
xlat
gs
aaa
jo
nop
adc
lock
test
rcr
adc
aaa
data16
mov
adc
(bad)
js
js
sbb
jo
repnz
xchg
aaa
dec
cmps
inc
dec
js
pop
xchg
outs
daa
mov
aaa
lods
dec
mov
sbb
push
mov
xor
xchg
dec
test
fwait
test
or
ss
sbb
adc
jl
and
je
fild
mov
rcl
sbb
mov
jbe
retf
sub
jb
mov
adc
push
mov
ret
rcr
or
add
add
stc
xchg
out
cmp
push
out
jb
and
addr16
adc
loopne
loopne
ror
adc
pop
sub
pusha
add
div
adc
loopne
xchg
sub
pop
cmp
daa
jns
test
sar
mov
stc
lahf
add
inc
out
lahf
push
dec
add
adc
inc
and
(bad)
sub
cld
push
ds
push
ds
ds
outs
add
loopne
fdiv
sahf
nop
mov
xor
jge
call
(bad)
push
into
dec
iret
mov
cs
mov
daa
into
xor
pop
sub
xor
xor
mov
and
sbb
(bad)
sbb
inc
lock
fcom
xchg
or
jp
or
jl
sbb
pusha
mov
and
fucomi
add
mov
xor
push
call
movs
inc
in
push
add
popf
push
xchg
lods
sar
or
mov
dec
loopne
sbb
jle
add
mov
add
stos
adc
sbb
push
fist
popa
push
add
jmp
loopne
xor
sbb
sbb
aam
and
dec
fist
nop
add
test
add
fisttp
inc
add
daa
add
or
cmp
inc
add
pop
call
int3
cmp
mov
es
or
pandn
add
push
xlat
test
inc
sbb
add
cmc
mov
add
test
xor
test
push
in
inc
add
jb
add
mov
(bad)
aam
sub
dec
(bad)
cld
pop
xor
push
rol
xor
pop
(bad)
sbb
pushf
pop
and
add
and
add
rcl
mov
cld
add
inc
retf
mov
push
shl
or
hlt
xchg
sub
push
mov
clc
xchg
lahf
je
mov
pop
jae
dec
pop
rcl
add
test
or
in
es
mov
packsswb
adc
pushf
adc
shl
xchg
sub
pop
push
add
or
jo
jl
or
ret
adc
fnstsw
add
daa
add
jl
test
and
cmp
in
mov
mov
call
add
test
xchg
mov
push
das
dec
inc
ds
sbb
jo
rcl
sbb
xchg
rol
test
mov
inc
or
and
cmp
das
and
pop
jmp
cwde
inc
adc
cmp
add
jecxz
loopne
fnsave
sub
in
jecxz
pop
dec
lahf
imul
(bad)
nop
add
or
arpl
cmp
adc
jge
add
stos
out
mov
addr16
jecxz
jne
(bad)
loop
cmc
out
xor
fs
and
sbb
mov
mov
sbb
test
pop
int3
ror
sbb
ret
rcl
(bad)
rol
dec
retf
inc
out
mov
mov
jmp
inc
hlt
cmp
jge
mov
dec
je
data16
je
or
xor
dec
mov
adc
or
imul
mov
cwde
xchg
or
sbb
mov
push
loopne
add
pushw
push
icebp
sbb
shr
mov
(bad)
ror
cmp
sub
pop
adc
cmp
add
ret
div
jl
or
mov
jne
and
add
(bad)
test
rcr
(bad)
adc
fisttp
enter
push
mov
mov
jo
fsub
xor
mov
ret
into
mov
lods
bound
and
add
or
cmp
add
jg
or
push
or
adc
cmp
shr
jb
add
out
shr
adc
lea
adc
retf
xlat
cmp
mov
push
ret
adc
pop
adc
inc
push
je
push
xor
cmp
push
repz
jecxz
fstp
and
add
loopne
mov
push
add
cmp
outs
sub
std
imul
mov
cmp
mov
test
add
(bad)
pusha
xor
sbb
bts
mov
mov
cmp
lahf
loop
aam
and
test
les
inc
dec
sbb
or
test
js
loopne
(bad)
aaa
xor
mov
(bad)
mov
(bad)
mov
rol
add
rcl
out
ja
pop
loopne
and
enter
add
jge
add
je
cld
push
mov
ret
sub
(bad)
xchg
fild
and
push
(bad)
loope
loope
int
or
sti
test
mov
inc
ret
outs
scas
loopne
add
(bad)
jmp
jb
and
test
sbb
or
inc
cmp
cs
jle
push
inc
test
stos
nop
call
loop
add
push
add
mov
inc
add
cld
cmp
add
push
in
test
(bad)
fs
adc
aam
fbstp
loop
push
je
or
shl
adc
into
or
cmp
cs
jns
and
push
ins
jns
or
in
psrad
push
add
sbb
sbb
push
test
fs
inc
xor
jle
pop
adc
sub
retf
or
shr
(bad)
jmp
push
ret
lahf
xor
jb
or
pop
cmps
sbb
pop
cmps
push
cmps
xlat
or
adc
dec
cmc
popa
dec
add
xlat
clc
mov
(bad)
aas
cmp
add
cmp
rcr
cmps
and
sub
les
lea
stos
in
fsub
mov
addr16
sbb
mov
mov
adc
jb
and
mov
mov
mov
mov
jae
push
daa
dec
mov
cmp
and
loop
dec
sbb
fisttp
and
outs
clc
call
add
or
pusha
and
popa
or
scas
hlt
cmps
and
push
xchg
(bad)
pusha
rcl
add
dec
into
sub
in
dec
lods
and
je
mov
arpl
stos
pop
adc
adc
or
push
push
add
sub
pop
xchg
inc
sub
cmps
imul
lods
mov
jne
aas
push
xor
test
adc
or
sub
adc
adc
js
push
pop
gs
cmp
gs
fbld
hlt
test
adc
push
adc
scas
push
nop
neg
movs
push
sub
push
mov
es
cmp
push
lds
add
xlat
add
adc
pop
inc
lods
fwait
stos
xchg
pop
dec
movs
pop
aad
inc
loope
in
or
inc
daa
enter
pop
adc
cmp
push
pop
test
inc
sub
sub
and
mov
out
push
and
inc
sbb
jl
stos
cmp
inc
scas
push
js
xchg
mov
and
outs
pop
aam
sbb
lds
sbb
pop
add
pop
mov
xor
add
sub
pop
adc
dec
stos
jne
sbb
(bad)
jnp
nop
push
pusha
add
ret
adc
jle
sbb
add
adc
push
push
push
lock
and
int3
cmp
ror
xchg
cmp
add
sbb
mov
mov
jb
or
mov
cs
aas
lods
je
bound
rcpps
push
sbb
call
pop
jmp
cmp
adc
mov
cmp
inc
mov
adc
loopne
cli
lea
push
ss
cmp
cmp
xchg
into
add
add
lods
cmc
lods
aad
loop
in
inc
adc
addr16
bound
jnp
jmp
pop
jmp
mov
pop
push
mov
and
and
sbb
sti
add
add
push
lods
daa
mov
fldenv
inc
jmp
or
(bad)
cmp
cmp
jp
xchg
popa
xor
ffree
sahf
pusha
test
cmc
hlt
imul
hlt
(bad)
xor
scas
outs
scas
jmp
fcom
addr16
inc
xor
mov
jmp
or
push
jle
sbb
xor
inc
retf
cmps
shl
jmp
imul
loope
les
sti
dec
inc
cmp
clc
pop
mov
mov
dec
je
dec
cmp
xor
cwde
cmp
xor
rcr
xlat
retf
add
jbe
arpl
push
(bad)
int3
sbb
adc
inc
imul
mov
push
jmp
push
shr
add
scas
rol
jns
enter
xchg
lods
cmps
mov
mov
pop
daa
add
mov
daa
dec
pop
or
and
les
outs
xor
stc
rcr
mov
mov
dec
mov
mov
mov
sahf
dec
sub
fwait
stc
cmp
or
add
call
movzx
jmp
or
sub
nop
stos
or
mov
sbb
test
test
and
ret
xchg
cli
pop
mov
or
shl
mov
add
and
cmp
popa
pop
fsub
cld
cmp
sbb
pusha
xor
push
setns
data16
fcomp
xchg
fldenv
aad
(bad)
movs
jp
ins
and
inc
and
call
and
mov
mov
sbb
les
icebp
or
movs
repnz
imul
ins
dec
stos
je
psubw
dec
adc
mov
rcl
push
sbb
inc
nop
sbb
nop
je
dec
adc
daa
dec
mov
or
daa
push
bound
cmp
loop
lock
addr16
jns
clc
lock
popa
cmps
addr16
or
(bad)
gs
cld
aam
push
cmp
pop
jae
inc
cmp
mov
inc
(bad)
push
mov
fidivr
cli
inc
into
test
jne
fldpi
cmp
dec
sub
adc
cwde
add
cmps
adc
retf
(bad)
sbb
sbb
or
pop
in
jge
mov
sbb
inc
pop
cmp
jle
lahf
mov
pop
add
xor
inc
mov
sub
jg
stos
jbe
cmp
in
enter
xchg
push
xchg
clc
push
(bad)
pop
inc
fcomp
mov
mov
or
pop
or
jns
into
(bad)
jp
mov
jmp
push
and
xor
cmp
(bad)
jnp
rdmsr
add
sub
sub
push
jmp
pop
jge
mov
sub
adc
mov
test
push
or
jbe
and
inc
sbb
dec
push
sbb
inc
jmp
daa
sbb
xor
xchg
leave
dec
push
sbb
jb
in
and
dec
dec
sub
popf
(bad)
jmp
push
or
fsubr
dec
pop
xlat
push
mov
sub
xor
push
iret
ret
ja
call
push
mov
jno
add
mov
sub
xor
push
sub
fsub
adc
mov
daa
push
push
retf
daa
out
daa
or
adc
mov
icebp
lock
push
or
test
rcl
add
inc
xchg
inc
and
inc
sub
sub
cmp
dec
jge
nop
inc
mov
xchg
movzx
rcr
xchg
or
push
inc
movs
outs
mov
cmp
outs
jmp
lods
adc
aam
pop
push
lahf
je
fcomp
xchg
adc
in
push
lahf
and
jnp
lahf
movs
pop
lea
push
xor
pop
lahf
sub
or
test
sbb
pop
xchg
lahf
mov
sbb
sub
in
test
mov
lahf
pushf
lahf
dec
dec
adc
cmp
mov
or
cmps
mov
mov
leave
popa
inc
loop
and
aad
imul
dec
in
rol
adc
xchg
daa
es
jbe
adc
push
pop
pop
push
push
mov
push
dec
inc
test
mov
les
jl
into
js
inc
cmps
dec
push
pusha
adc
push
xchg
rol
(bad)
pusha
mov
pop
and
inc
or
test
jg
or
cld
add
inc
mov
icebp
or
inc
add
xchg
push
shl
cmps
mov
aaa
inc
lahf
je
adc
aam
jle
dec
retf
xlat
(bad)
add
test
or
shl
xchg
or
jne
push
popf
dec
loopne
push
xchg
push
dec
cs
sbb
add
(bad)
jle
xor
aam
inc
add
cmps
inc
fistp
inc
dec
xchg
xor
dec
cdq
xor
jne
(bad)
scas
pop
dec
mov
(bad)
js
(bad)
scas
push
test
sub
out
lea
xchg
cli
or
dec
movs
fcomp
inc
out
rcr
pop
loop
aaa
lock
sub
push
or
std
add
(bad)
pop
retf
std
jbe
jmp
or
pop
std
inc
neg
aam
inc
idiv
in
fisttp
dec
fst
aaa
jge
test
adc
aaa
sub
mov
push
mov
sbb
inc
fdivr
ins
xor
add
dec
call
inc
cmp
std
push
and
or
jns
mov
dec
sub
inc
pop
sub
sbb
popa
and
dec
repnz
sar
mov
add
inc
add
and
cmp
jge
test
sub
xor
dec
push
mov
sub
or
clc
or
jne
inc
rol
pop
aam
lock
jl
add
dec
inc
fiadd
shl
mov
add
pop
jno
inc
call
loope
fisubr
lods
mov
mov
aas
xchg
jecxz
jo
push
ds
adc
push
lock
ins
or
push
and
retf
call
push
aam
sub
jmp
sbb
sbb
outs
iret
or
and
lds
xchg
mov
adc
cs
inc
push
jae
pop
sub
enter
pop
dec
mov
add
hlt
push
or
ja
jecxz
xor
push
aas
push
cmp
xchg
outs
(bad)
cmc
sub
imul
movs
adc
mov
xor
daa
loopne
icebp
shl
push
mov
into
loop
inc
nop
sub
ja
mov
aam
jae
scas
pop
es
or
ret
xchg
jmp
stos
mov
mov
shl
sub
pusha
ret
adc
mov
nop
and
push
pusha
jo
clc
ja
dec
dec
int3
pop
sbb
mov
push
mov
imul
jo
mov
pop
add
cmps
rcl
xor
pop
cmps
push
fisub
and
adc
retf
or
retf
pop
sahf
jecxz
loopne
retf
ja
dec
sti
(bad)
pop
js
outs
mov
sti
sahf
add
add
adc
jmp
cs
in
sub
inc
shl
sbb
movs
ins
lock
cmc
sub
loope
retf
call
jo
in
lds
push
mov
or
scas
cdq
jne
push
push
bnd
loopne
push
inc
loop
ja
pop
mov
mov
je
xchg
pushf
jnp
cmp
jle
sti
cmp
jg
fwait
mov
stos
pop
xlat
add
add
out
fcom
imul
sub
mov
jbe
outs
fs
adc
aaa
jmp
ss
or
retf
(bad)
mov
(bad)
dec
js
cmp
pop
or
je
clc
sbb
add
pusha
pop
add
mov
jns
ror
and
sub
bound
push
add
or
imul
in
sub
push
xor
test
mov
push
and
mov
xchg
xchg
xlat
pop
fcom
pop
sbb
(bad)
xor
inc
lods
out
daa
adc
xor
xor
leave
dec
xor
cmp
or
stc
push
icebp
stos
ins
aad
dec
aaa
inc
daa
arpl
inc
lds
lods
push
push
ss
add
or
adc
add
add
aaa
icebp
mov
push
mov
test
pusha
sbb
mov
push
xor
shl
inc
mov
aam
leavew
out
fidiv
aam
and
xor
adc
push
aaa
mov
out
adc
stos
cmc
inc
push
push
lods
aaa
mov
lods
aaa
push
inc
inc
aam
adc
cmp
mov
add
aaa
pushf
mov
dec
and
ret
inc
getsec
sbb
pop
aaa
push
mov
xor
lea
jno
push
repnz
enter
mov
popa
pop
pop
aaa
test
and
aaa
aad
or
pop
aaa
pop
mov
adc
xor
inc
inc
aaa
(bad)
jl
mov
or
add
adc
sub
xor
inc
or
xor
or
ss
inc
sbb
cmp
jo
sub
aaa
mov
pop
ror
imul
pop
mov
aaa
lods
jo
push
(bad)
dec
dec
imul
aaa
jmp
test
push
inc
push
aaa
fstp
pop
cmp
aaa
inc
test
inc
sub
inc
push
push
jmp
sub
ret
and
xor
add
aaa
xor
pop
xchg
or
fcom
pop
adc
xchg
mov
add
test
adc
adc
sub
or
mov
ins
cmc
sub
aaa
dec
mov
daa
repz
stc
aaa
lods
and
and
dec
ret
and
aaa
dec
jae
add
cwde
sbb
clc
ja
daa
push
aaa
xor
cmc
inc
mov
sub
mov
adc
aam
mov
aaa
and
sbb
or
pop
push
aaa
aaa
aaa
push
mov
dec
aaa
popa
scas
push
inc
lods
or
cmp
xchg
or
mov
aaa
sti
inc
aad
aam
cmp
push
lods
aaa
lock
push
ja
mov
leave
stos
icebp
dec
js
and
aaa
push
adc
mov
pop
mov
inc
aaa
xchg
rcl
test
aaa
lods
mov
arpl
push
sub
ss
inc
hlt
pop
and
inc
test
inc
cmp
or
shl
mov
js
mov
and
stc
cmp
rcr
adc
ja
sar
dec
push
nop
inc
js
js
enter
dec
and
inc
mov
push
and
data16
outs
lock
hlt
pop
adc
pop
add
aam
rol
(bad)
jno
out
jne
pusha
mov
add
call
ins
xchg
mov
or
rol
adc
fmulp
ficomp
je
mov
or
and
add
xchg
sub
add
push
and
(bad)
or
(bad)
lods
fwait
pop
mov
xor
or
(bad)
lds
adc
dec
lds
or
ins
sub
inc
adc
adc
lds
mov
retf
test
jp
outs
popa
repnz
xor
scas
add
inc
adc
call
mov
outs
sub
mov
sub
iret
cmp
adc
cmp
iret
dec
cmp
or
pop
mov
hlt
iret
pop
xor
push
jb
cmp
mov
(bad)
sbb
sub
rol
mov
call
mov
scas
adc
daa
cmp
dec
rcl
and
mov
dec
or
and
pop
retf
stos
les
xchg
nop
dec
adc
cs
pop
adc
pop
mov
adc
jne
inc
add
push
jno
adc
mov
jo
inc
pop
lods
je
addr16
mov
push
test
shr
loopne
int
xor
fcom
fnstcw
dec
int
ret
ret
push
xchg
shr
or
dec
xor
inc
mov
add
push
sbb
jbe
cmp
inc
add
lea
add
jmp
dec
lods
xchg
ror
add
in
dec
xchg
adc
pop
pop
xchg
sub
test
(bad)
push
mov
dec
sbb
into
pop
mov
jb
mov
sub
xor
mov
aad
repnz
pop
fcmovu
loopne
sbb
or
adc
(bad)
pop
adc
fbstp
push
daa
sub
cmp
jecxz
fist
pop
fdiv
mov
sbb
fbld
sub
mov
sbb
movs
adc
adc
outs
dec
lods
push
dec
hlt
jns
xor
jb
in
fs
inc
inc
cmp
mov
(bad)
xor
dec
cmp
xor
xor
in
push
inc
xchg
hlt
pop
or
xlat
aaa
test
mov
mov
loopne
push
lea
cmp
icebp
aam
push
repz
adc
ins
inc
push
movs
out
push
je
xchg
enter
aas
mov
adc
cmps
pop
adc
inc
test
scas
movs
ss
jmp
cmp
ss
mov
sbb
adc
xor
jp
ins
dec
pop
sub
fwait
push
pop
ss
add
xchg
or
xlat
xor
shr
jge
mov
inc
push
sub
jl
cmp
ss
test
hlt
adc
ja
sti
xor
mov
jo
sub
jl
icebp
adc
jg
jl
mov
sbb
add
xor
pop
push
adc
push
or
adc
sub
push
pop
push
adc
inc
mov
push
pop
mov
adc
lock
add
jp
jmp
stos
xchg
sbb
push
aam
dec
les
rcl
aaa
neg
mov
or
retf
ficom
sbb
inc
cmp
dec
aaa
add
pop
push
add
add
out
jmp
dec
fisttp
(bad)
mov
push
and
pop
or
je
movs
mov
push
iret
lds
inc
test
pop
adc
ins
dec
clc
jns
fs
ins
xor
or
push
enter
je
add
sub
and
stos
pop
add
fistp
sbb
je
ja
clc
adc
or
ficomp
dec
push
mov
sub
and
movs
sub
add
dec
dec
repnz
mov
push
push
add
pusha
or
pop
nop
cmps
cmp
adc
push
(bad)
pushf
clc
loop
and
cld
iret
add
and
dec
cld
lods
sub
cmps
gs
and
ret
jmp
jmp
xchg
(bad)
loope
rcr
daa
mov
fcom
mov
push
call
jmp
adc
mov
lahf
sbb
add
and
and
call
icebp
movs
pusha
push
jb
test
pop
retf
(bad)
cmps
or
mov
push
mov
fisub
inc
cs
xor
push
or
and
mov
add
sti
sub
cdq
(bad)
sbb
inc
frstor
or
mov
inc
adc
adc
das
js
xchg
jbe
hlt
out
or
call
adc
xchg
dec
add
pusha
shl
jmp
jmp
movs
inc
xchg
add
dec
adc
daa
pop
sbb
dec
call
rol
inc
and
enter
pushf
call
fwait
sub
push
mov
jne
movs
call
mov
mov
imul
test
mov
jno
add
inc
test
or
iret
pop
mov
xor
lock
aam
pop
add
rol
and
popa
xor
push
adc
and
inc
movs
dec
test
(bad)
aaa
or
pop
inc
daa
cmp
cmp
or
add
rcr
or
in
inc
adc
(bad)
aaa
inc
std
dec
adc
lahf
je
mov
int
cmp
or
jo
in
in
mov
in
pop
arpl
stos
loopne
and
sub
cs
les
add
add
ret
push
cmc
movs
dec
inc
add
(bad)
xor
inc
test
or
mov
sub
jle
dec
in
cmps
push
cdq
mov
push
scas
add
push
add
(bad)
in
dec
(bad)
popf
mov
outs
sbb
jne
push
push
pop
jbe
jb
jmp
rcr
push
(bad)
fisttp
and
shl
and
mov
add
pop
sbb
adc
add
fmul
inc
adc
loopne
add
bound
inc
(bad)
xchg
jecxz
aaa
sub
ja
imul
cmps
push
jg
repz
inc
jl
mov
and
out
mov
inc
fdivr
push
push
leave
retf
add
call
add
aam
push
sub
repnz
and
add
cmp
int3
adc
out
test
xor
lea
mov
add
inc
add
(bad)
jge
sub
mov
test
sub
inc
daa
imul
enter
or
sub
add
or
clc
pop
ss
inc
fldenv
pop
aam
lock
shl
jl
push
add
push
add
add
mov
loop
inc
pop
fs
aam
xchg
fcomp
adc
push
ds
bnd
ds
fbld
(bad)
sbb
test
pop
xor
jo
push
test
mov
lods
fistp
(bad)
or
sbb
pop
cmp
push
popa
inc
xchg
and
lds
jae
or
sub
jbe
aaa
pop
add
cmp
popa
sbb
loopne
aas
sbb
dec
sbb
and
jbe
and
shr
sub
repz
sbb
es
sub
icebp
shl
pop
jae
cmps
cmp
cmp
into
loop
xchg
ja
jae
(bad)
xchg
movs
cmps
scas
or
mov
lea
push
and
xlat
jo
mov
jmp
shr
mov
shl
sar
ret
adc
pop
xor
mov
stos
jge
clc
push
ret
ja
test
mov
movs
sbb
push
ins
popa
push
mov
adc
pusha
adc
jo
aaa
mov
lds
data16
sub
aaa
add
adc
dec
sti
pop
outs
and
xchg
ret
cmp
jne
call
jmp
arpl
jmp
cmc
sub
mov
fidiv
lock
or
in
leave
scas
push
mov
shr
push
adc
adc
pop
xchg
mov
and
sub
out
or
sub
sahf
jne
push
inc
push
pushf
jnp
cmp
jle
sti
mov
mov
fwait
movs
ret
xor
hlt
adc
adc
push
ja
in
xor
not
jbe
outs
fs
adc
movs
out
mov
push
je
or
add
pop
rcl
push
jp
or
rcl
pushf
outs
je
clc
jns
mov
xor
je
sbb
(bad)
cmps
mov
ja
or
push
add
mov
mov
ins
add
inc
mov
inc
inc
pop
nop
sbb
jmp
fcmovu
adc
loopne
xor
mov
fiadd
shr
add
sub
adc
push
pop
mov
jns
mov
sub
mov
stc
cmp
sbb
(bad)
xchg
ja
xchg
xchg
sbb
sub
movs
push
retf
xor
addr16
es
inc
adc
jno
mov
mov
adc
xlat
sub
(bad)
es
or
ret
hlt
pop
mov
pop
add
aam
sub
(bad)
jno
out
mov
adc
jg
xchg
and
jg
adc
push
sub
xor
add
into
ficomp
je
mov
xor
jo
or
inc
push
(bad)
ffreep
cwde
and
inc
or
adc
test
push
xor
cs
or
imul
jne
pop
xor
cmp
sub
xchg
enter
push
adc
pop
or
dec
adc
iret
mov
jp
jg
neg
iret
push
scas
addr16
and
push
iret
add
mov
jmp
lods
adc
iret
or
iret
inc
nop
sub
loopne
imul
mov
test
nop
pop
mov
hlt
iret
outs
or
push
jb
mov
(bad)
sbb
sub
rol
mov
call
mov
fimul
les
pop
add
mov
bound
mov
add
sub
inc
bound
or
dec
mov
pop
mov
pop
add
mov
jne
inc
add
pop
dec
ds
mov
lds
aad
lods
je
or
pop
xchg
push
adc
push
test
rol
xor
fcom
pop
sub
int
or
sub
mov
xor
inc
mov
rol
add
jbe
mov
mov
inc
add
dec
jmp
call
xor
mov
sahf
pop
inc
jl
sti
mov
pop
pop
cmps
sub
out
xchg
jg
retf
pop
scas
jg
push
test
retf
sbb
into
jo
ins
sub
jb
jnp
fwait
nop
mov
stos
push
in
das
push
emms
inc
shl
mov
sub
jp
push
fimul
sub
xor
aaa
inc
mov
repnz
push
cmp
dec
mov
push
sbb
pushf
cli
xor
retf
push
js
fist
in
adc
test
or
adc
test
mov
sub
pushf
pop
sub
xor
data16
outs
inc
mov
(bad)
xor
dec
cmp
xor
jp
fimul
mov
pop
or
xlat
aaa
sbb
cmps
cmp
adc
lea
cmp
loope
rcl
inc
adc
cmp
cmps
aam
je
jno
lods
neg
aas
mov
fs
out
imul
push
out
pushf
test
and
mov
or
lods
out
sbb
out
nop
ss
sub
and
xchg
sub
cs
jmp
stos
mov
jp
pop
or
sbb
pop
ss
or
fidiv
xchg
jge
mov
mov
xor
jl
cmp
ss
push
mov
fdivr
in
mov
jo
sub
cld
inc
sbb
jl
jg
sub
mov
jo
lock
mov
sbb
ss
loopne
rdpmc
shl
js
push
or
adc
inc
mov
aad
aam
stos
xchg
push
jmp
sub
mov
pop
(bad)
(bad)
out
cmp
add
jp
repnz
mov
es
mov
pop
cli
sbb
das
and
cmps
test
adc
lock
inc
aaa
sub
jne
outs
jl
or
retf
mov
ficomp
inc
cmp
pop
or
repz
je
out
pusha
sbb
ret
push
xchg
es
push
and
pop
or
jne
push
add
ror
iret
xchg
jl
clc
dec
clc
jns
test
fisub
jns
(bad)
and
or
pop
and
sub
add
inc
stos
or
sub
sbb
ja
call
adc
call
pop
xor
ja
test
push
jnp
leave
push
jmp
inc
push
sub
aam
cmp
in
ja
ja
pop
dec
jno
sbb
add
push
outs
(bad)
push
(bad)
and
cmp
mov
pop
dec
cmps
inc
mov
clc
pop
mov
imul
jmp
ret
pop
fcom
call
call
cmps
add
in
add
mov
out
inc
cmp
mov
stos
in
ror
pop
mov
popa
test
(bad)
cmps
push
mov
cmp
fsub
popa
xor
mov
das
mov
push
mov
arpl
cdq
pop
or
cmp
pop
ins
(bad)
pop
rol
lods
adc
pop
jo
lahf
jmp
dec
mov
inc
xchg
call
jo
jnp
adc
push
cmp
inc
xchg
pop
push
mov
inc
movs
fwait
mov
pop
pop
or
and
add
or
inc
shl
cmp
pushf
push
pop
jb
or
dec
fst
inc
add
cmp
imul
dec
mov
push
dec
xchg
(bad)
jno
push
pop
inc
test
daa
sbb
in
and
inc
pop
jle
jg
pop
mov
xchg
and
test
add
pop
or
sbb
popa
adc
or
xor
(bad)
aaa
and
fisub
cmp
cmp
adc
mov
pop
or
add
ins
das
mov
dec
adc
aaa
inc
cmps
inc
test
lahf
je
mov
dec
pop
scas
mov
or
pushf
add
test
push
arpl
dec
rol
loopne
mov
xchg
enter
add
mov
ret
inc
add
and
mov
add
mov
sbb
(bad)
dec
in
cmps
push
pop
int
adc
cmp
test
push
mov
dec
dec
mov
aam
outs
sbb
scas
push
xchg
mov
shr
rcr
adc
fbstp
js
and
add
add
test
hlt
das
loop
jmp
cwde
mov
dec
adc
add
fist
in
inc
fnsave
inc
test
inc
fisub
imul
pop
jle
loopne
repz
shr
mov
add
out
clc
mov
mov
inc
fsubr
adc
fdivr
in
sbb
cmps
xchg
cmc
dec
sub
repnz
mov
add
ror
pop
sub
xchg
rol
mov
jmp
inc
cmp
add
(bad)
jge
test
sub
adc
dec
mov
je
dec
and
sub
shl
rol
(bad)
mov
xchg
jo
ins
jb
pop
aam
jo
or
jl
adc
inc
add
fisubr
js
pop
mov
xchg
outs
gs
pop
xchg
test
les
dec
sbb
dec
xchg
ds
ds
and
pop
jg
test
pop
xor
jo
xchg
fistp
(bad)
or
sbb
pop
cmp
push
test
mov
jae
or
sub
jbe
aaa
pop
add
hlt
pop
or
sahf
ja
or
adc
xchg
ins
dec
sbb
and
jbe
and
shr
sub
repz
sbb
es
sub
icebp
shl
rcl
test
adc
(bad)
xchg
movs
cmps
scas
or
mov
lea
push
and
xlat
jo
mov
jmp
shr
mov
shl
sar
ret
adc
pop
xor
mov
stos
jge
clc
push
ret
ja
test
and
daa
mov
dec
sub
ja
popa
push
mov
adc
mov
mov
lds
data16
sub
aaa
add
adc
dec
sti
pop
outs
and
xchg
sub
add
call
jmp
arpl
jmp
cmc
sub
mov
fidiv
lock
or
in
xor
shr
push
adc
adc
pop
xchg
mov
and
sub
out
or
sub
push
cdq
xchg
push
inc
push
pushf
jnp
cmp
jle
sti
mov
mov
fwait
or
test
ja
add
loopne
and
stos
in
xor
not
jbe
outs
fs
adc
movs
out
mov
push
je
or
add
pop
rcl
pusha
jp
or
rcl
pushf
outs
je
clc
jns
mov
xor
je
sbb
(bad)
cmps
mov
ja
or
push
add
mov
or
ins
loopne
mov
inc
inc
pop
nop
sbb
jmp
fcmovu
jge
(bad)
loop
loopne
xor
sar
shr
mov
stos
cmc
mov
or
jl
ret
push
pop
mov
js
mov
sub
mov
stc
cmp
sbb
(bad)
xchg
ja
xchg
xchg
sbb
nop
inc
int3
dec
dec
mov
fdiv
pusha
loopne
sub
xchg
lock
sbb
mov
daa
add
push
xchg
(bad)
es
adc
aam
test
xchg
aam
push
mov
(bad)
jno
out
pop
sub
pop
sahf
jg
sub
sbb
in
push
sub
xor
add
popf
mov
or
push
pusha
je
mov
pusha
adc
(bad)
dec
loopne
adc
xor
lea
xchg
(bad)
adc
or
cs
adc
add
ins
addr16
call
or
ret
push
adc
mov
mov
pop
dec
mov
nop
popa
cli
fdiv
sbb
lea
sbb
sahf
xor
(bad)
stos
xchg
xchg
iret
jne
mov
inc
iret
jno
mov
iret
and
or
and
iret
xchg
fist
les
inc
jo
cmp
add
iret
sbb
in
and
mov
js
push
int
pop
shl
sbb
pop
data16
push
mov
pushf
mov
scas
xchg
fs
bound
ret
pop
cmp
lods
inc
mov
dec
add
add
pop
sub
adc
sbb
stos
dec
lods
mov
(bad)
xchg
pop
mov
pop
cld
cs
test
mov
or
bound
push
mov
lahf
or
das
mov
je
addr16
shr
test
shl
and
xor
fcom
fnstcw
dec
int
popa
xlat
adc
in
push
enter
loopne
xor
inc
mov
ja
es
push
ss
cmp
inc
cmp
cmp
rol
call
(bad)
mov
pusha
es
pop
mov
dec
mov
pop
pop
pop
retf
adc
mov
bound
cmps
into
scas
pop
pop
cmp
nop
nop
jnp
stos
push
jne
add
mov
das
shl
ret
lgs
lods
ficomp
dec
lods
cmp
sub
adc
pop
mov
lea
sti
push
mov
push
mov
jecxz
cmp
xchg
fist
adc
jp
add
adc
dec
lea
movs
aad
dec
sbb
dec
hlt
mov
int
jns
xor
inc
inc
cmp
imul
(bad)
daa
lods
mov
xor
dec
cmp
xor
mov
and
(bad)
hlt
pop
or
xlat
aaa
sbb
jo
mov
pop
add
sub
push
repz
dec
ins
adc
movs
inc
add
inc
xchg
shr
push
enter
out
or
adc
mov
xchg
pushf
xor
test
push
movs
ss
out
sbb
cmp
sbb
aam
imul
adc
aam
cmp
mov
push
pop
ss
push
fadd
dec
or
xlat
xor
jge
shr
mov
jl
inc
push
sub
cmp
ss
bsf
xor
mov
jo
xor
jle
mov
icebp
adc
jl
add
mov
stos
add
shl
cmp
xchg
rdpmc
ror
pop
push
push
or
adc
mov
daa
sbb
push
xchg
stos
or
xchg
sub
and
outs
inc
xchg
ja
jmp
and
jne
jp
jmp
dec
pop
inc
push
imul
sbb
shl
mov
in
movs
les
pusha
pop
inc
aaa
sti
or
dec
or
retf
out
sub
mov
jg
movs
sbb
into
pop
push
add
je
sbb
arpl
dec
push
push
and
movs
lds
pop
or
jne
sbb
je
xchg
jne
dec
clc
jns
ror
pop
pop
ins
jns
enter
hlt
jle
je
dec
sub
movs
sub
xchg
pop
sub
nop
inc
push
(bad)
push
call
ficomp
mov
rcr
test
xor
push
xchg
call
pushf
scas
js
xchg
pop
cmp
inc
into
in
retf
push
imul
aad
cld
sbb
fdiv
jmp
ficom
outs
cmp
cmp
lock
or
leave
fwait
lock
add
pop
adc
dec
hlt
ret
add
aaa
push
xor
mov
cmp
inc
dec
lds
ins
bound
dec
add
inc
or
dec
inc
adc
lea
mov
in
fiadd
shr
sbb
jne
xor
sbb
idiv
lea
dec
cmp
jg
es
push
or
sub
push
aad
mov
jle
push
add
xor
cld
arpl
and
data16
or
push
pop
retf
adc
adc
pop
pushf
jg
les
fdivr
push
adc
add
inc
test
call
les
pop
lock
mov
sub
shr
add
(bad)
sbb
cmp
lock
push
lea
jmp
popa
sbb
mov
lds
sbb
mov
mov
adc
dec
retf
mov
adc
dec
xchg
cwde
std
sub
nop
inc
add
je
and
xchg
sbb
cmp
repnz
stos
pusha
mov
push
or
fwait
add
dec
jns
cwde
test
mov
pop
out
adc
dec
dec
cmps
inc
ins
xor
mov
arpl
inc
jmp
daa
dec
or
jmp
mov
fcom
rcr
mov
or
xor
jmp
adc
pop
adc
or
mov
loopne
pusha
pop
mov
dec
mul
jb
icebp
les
test
push
mov
xchg
cmps
push
mov
or
outs
or
pop
test
dec
mov
das
mov
pop
inc
cdq
retf
mov
cdq
(bad)
mov
adc
ja
push
mov
or
rol
lods
adc
add
dec
mov
jmp
mov
inc
jmp
lock
pop
arpl
(bad)
jmp
xor
inc
dec
fisttp
icebp
inc
loopne
fisttp
dec
test
daa
cmp
ret
jmp
cmp
dec
jns
jmp
jmp
daa
mov
mov
mov
cmp
retf
dec
mov
jno
or
sbb
daa
add
xor
adc
or
pop
add
jo
cmps
and
rcr
shl
imul
sbb
push
popa
adc
push
dec
or
and
add
aaa
add
and
cmp
mov
mov
mov
icebp
or
in
mov
(bad)
clc
xchg
sub
mov
dec
mov
daa
dec
retf
cmps
push
pop
jae
test
or
cmp
in
pop
loopne
add
rol
mov
inc
dec
cs
lods
inc
add
(bad)
call
push
add
sub
add
(bad)
xor
and
add
sbb
or
jg
call
cmp
inc
test
sub
jae
pop
outs
sbb
movs
and
fmul
rcr
push
(bad)
fbld
test
aaa
sub
das
ins
mov
imul
mov
jnp
jmp
aam
dec
adc
jl
pusha
adc
bound
jb
adc
push
outs
inc
fisub
add
add
pushf
arpl
push
add
mov
pop
repz
add
int3
mov
cmp
mov
fdivr
retf
int
fdivr
in
and
jp
add
add
sub
repnz
mov
add
enter
pop
sub
adc
or
cdq
jbe
push
ror
out
mov
adc
inc
dec
fcmovnbe
add
(bad)
jge
test
xchg
out
retf
dec
mov
dec
mov
enter
jle
add
(bad)
add
ds
push
sub
pop
aam
dec
mov
outs
jl
add
or
pop
mov
push
imul
gs
pop
add
push
loopne
loopne
stos
pop
mov
xor
loopne
scas
sbb
jns
outs
push
ds
ds
enter
fbld
push
jb
mov
pop
lock
and
add
fistp
(bad)
or
icebp
loop
(bad)
and
adc
mov
inc
push
push
jnp
jae
pop
sub
mov
movups
add
ja
test
aas
jmp
cmc
sub
and
ins
daa
and
stc
push
or
add
es
inc
dec
add
mov
cmp
into
loop
ins
push
inc
sub
jae
add
cmps
scas
or
cwde
adc
and
xlat
stos
push
cmp
inc
mov
sbb
sub
pusha
ret
cwde
call
fs
je
cs
mov
inc
jge
clc
inc
push
pusha
push
ja
ret
xor
cmps
mov
add
mov
dec
sub
mov
cmp
or
inc
shl
mov
sub
add
data16
pusha
adc
mov
mov
jo
add
outs
xchg
mov
inc
push
call
jmp
arpl
inc
dec
jne
add
(bad)
pop
or
push
pop
dec
mov
fimul
loope
retf
(bad)
in
cdq
scas
rol
mov
mov
dec
inc
adc
jne
hlt
sub
out
mov
push
or
(bad)
jle
and
cs
inc
mov
fwait
adc
test
jne
pop
ja
add
push
push
adc
ja
push
push
sbb
imul
outs
fs
adc
jl
or
add
dec
cli
je
or
push
ret
jl
call
mov
aam
and
clc
jns
pop
loopne
mov
jns
jnp
add
cmps
mov
push
js
into
jo
lods
leave
faddp
or
and
xchg
inc
mov
sub
push
inc
inc
dec
xchg
(bad)
jo
push
fcmovu
in
mov
xor
arpl
movs
push
adc
sub
cwde
push
mov
ficomp
sbb
jo
jle
pusha
or
aaa
push
fwait
jns
mov
sub
pop
mov
pop
mov
test
mov
adc
rol
cmp
daa
jns
lods
ja
mov
enter
and
pop
mov
add
and
ins
data16
data16
jmp
pop
hlt
pop
js
adc
aam
add
add
(bad)
jno
add
adc
(bad)
sahf
jg
push
ds
pop
inc
mov
sub
popa
adc
je
push
xchg
mov
jae
(bad)
sbb
jnp
dec
inc
push
sbb
or
(bad)
adc
mov
adc
sub
add
cs
les
push
movlps
ror
cmp
xchg
adc
cs
mov
adc
iret
jnp
in
xor
clc
mov
cmps
inc
lods
dec
iret
mov
scas
aaa
push
arpl
lods
iret
shl
mov
shl
inc
iret
fst
iret
add
mov
add
cmp
inc
add
iret
repnz
sub
iret
mov
cmps
dec
dec
adc
(bad)
ja
pop
adc
mov
int
push
mov
rcl
pop
dec
jge
sbb
push
mov
push
mov
cmp
mov
mov
and
adc
push
ror
or
retf
inc
and
sbb
(bad)
xchg
js
pop
and
and
mov
pop
mov
add
push
mov
jne
xchg
add
rol
push
mov
lahf
or
pop
icebp
cmp
lods
je
addr16
push
lods
sbb
rol
jb
daa
push
fnstcw
dec
int
adc
adc
push
loopne
xor
inc
cmps
push
rcr
or
push
ss
cmp
jmp
fild
inc
add
dec
jmp
sbb
add
dec
jge
cdq
xchg
mov
ret
and
pop
pop
push
lods
push
xchg
out
fs
adc
dec
sbb
bound
inc
into
jo
mov
jnp
mov
nop
in
les
push
mov
test
xchg
shl
mov
cld
shl
loop
dec
or
adc
mov
cmp
mov
(bad)
(bad)
push
push
push
xchg
(bad)
test
retf
sbb
test
push
jmp
aam
fbld
jmp
push
xor
pushf
pop
sub
dec
hlt
jns
data16
out
fs
inc
inc
cmp
mov
(bad)
xor
dec
cmp
xor
ret
mov
test
pop
or
xlat
add
sbb
cmp
push
lea
cmp
test
inc
adc
sbb
jge
out
mov
in
push
aas
loop
inc
enter
mov
fist
and
and
push
dec
sbb
sbb
out
nop
ss
hlt
mov
aam
mov
jmp
stos
mov
jp
mov
mov
pop
sbb
or
in
fadd
sbb
xor
jge
mov
lds
sbb
jl
cmp
ss
and
test
push
mov
ins
fistp
hlt
adc
in
mov
jo
sub
jle
or
jl
jg
xchg
adc
push
cmp
sbb
inc
jne
pop
mov
sbb
jo
rdpmc
shl
dec
(bad)
push
or
fadd
adc
add
daa
xchg
mov
xchg
mov
inc
push
xchg
adc
push
pop
lea
pop
ja
out
cmp
cli
mov
or
jmp
imul
xchg
shr
mov
(bad)
imul
cmps
aaa
mov
inc
aaa
ret
jle
push
sub
dec
cmp
jle
sar
mov
jg
je
xchg
pop
push
add
enter
out
dec
out
push
pusha
dec
in
push
xor
gs
and
pop
or
jne
daa
pop
pop
push
iret
push
mov
jl
clc
dec
clc
call
pop
ins
jns
adc
test
or
js
xchg
movs
sub
xor
sub
cs
clc
adc
push
pop
mov
pop
bound
add
fisubr
push
jnp
fsub
ret
dec
push
inc
push
ret
adc
ret
je
xor
int
cmps
sbb
sbb
and
clc
xchg
jmp
or
or
dec
test
mov
push
pop
mov
mov
jmp
mov
fcom
adc
loope
call
jmp
adc
xor
mov
adc
push
out
call
icebp
sub
adc
test
(bad)
dec
cdq
popa
(bad)
cmps
push
sbb
movs
ror
adc
ret
xor
jmp
das
xor
mov
and
mov
cdq
(bad)
aad
push
mov
push
test
add
rol
add
adc
ret
mov
nop
lods
stos
add
cmps
dec
inc
rcl
mov
and
sar
push
(bad)
or
hlt
stos
mov
lods
(bad)
fst
movs
adc
call
call
inc
sub
loopne
imul
add
test
nop
pop
xchg
pop
pushf
(bad)
mov
mov
adc
push
add
or
cmp
cdq
dec
push
dec
mov
jno
add
push
daa
and
adc
sub
dec
jb
push
inc
mov
inc
pop
imul
inc
test
popa
mov
mov
dec
xchg
push
arpl
xor
test
daa
cmp
adc
adc
inc
mov
mov
pop
adc
add
add
push
or
cli
xchg
sub
mov
jo
test
dec
retf
or
je
call
adc
sbb
mov
dec
test
and
push
ins
mov
inc
pop
jle
pop
add
add
ret
dec
lahf
push
add
(bad)
push
pop
adc
add
mov
sbb
lea
xor
lock
push
scas
xchg
add
(bad)
sbb
dec
inc
mov
outs
jne
add
sbb
in
push
fsub
xchg
sar
push
lahf
push
or
aaa
sub
cmc
aad
movs
cmp
cmp
mov
(bad)
jmp
aam
dec
adc
adc
bound
cmp
inc
ficomp
mov
cmps
dec
sub
sbb
fadd
add
repz
(bad)
sub
int3
dec
out
add
inc
xor
leave
retf
add
xor
dec
in
add
test
cmc
sub
adc
lea
sub
mov
or
push
call
aam
sbb
dec
push
shl
(bad)
cmp
push
hlt
jmp
inc
push
inc
fimul
test
sub
dec
mov
je
inc
mov
push
push
xchg
or
(bad)
lds
jne
mov
ds
mov
pop
aam
xor
xchg
imul
mov
push
sbb
inc
add
and
ficom
mov
pop
jno
mov
jmp
int
mov
xor
loopne
test
cmp
ds
ds
inc
push
and
ffreep
sub
fisttp
inc
leave
mov
dec
jo
push
push
sbb
test
stos
(bad)
or
xor
js
push
iret
js
inc
or
jae
sbb
push
jmp
sub
in
cwde
outs
pop
add
hlt
sahf
mov
ret
(bad)
sbb
sar
loopne
xchg
xor
cmc
shr
dec
dec
sub
shl
loop
push
(bad)
mov
xor
es
push
lock
icebp
shl
xchg
loope
dec
jne
cmp
into
loop
or
dec
jae
push
sub
scas
or
mov
lea
push
and
xlat
loope
sbb
stos
mov
pop
sbb
sub
pusha
mov
adc
mov
push
pop
or
stos
jge
clc
stos
test
ja
or
push
xlat
ret
daa
jnp
dec
cmp
dec
sub
ret
ret
or
(bad)
loopne
aaa
arpl
sub
adc
add
pop
js
and
dec
sti
pop
outs
inc
loopne
(bad)
cli
loop
cmp
jne
call
jmp
arpl
aad
sub
adc
pop
jmp
pusha
sub
mov
fisub
loope
gs
retf
(bad)
in
add
scas
push
mov
shr
push
adc
adc
pop
xchg
mov
and
sub
out
sub
(bad)
xchg
xor
jnp
cmp
jle
sti
fst
jl
inc
mov
ffree
inc
int
push
pop
ja
or
nop
inc
push
ja
jb
sbb
jl
sub
fs
adc
shl
pop
ss
or
je
or
jo
add
push
cmp
mov
pop
std
and
sbb
jne
jns
push
xor
push
ins
jns
add
cmp
into
jo
xchg
lods
leave
cmp
xchg
js
in
mov
ins
pushf
xchg
inc
mov
sub
inc
rcl
jmp
fcmovu
dec
mov
arpl
dec
aad
imul
sbb
xchg
xchg
lods
push
ficomp
cmp
pusha
daa
adc
aaa
ja
jl
pop
mov
js
add
ret
mov
stc
cmp
test
adc
leave
and
pusha
mov
sbb
xchg
sbb
sbb
push
adc
aam
ffreep
mov
push
sbb
mov
mov
add
xchg
(bad)
push
int3
lock
pop
hlt
pop
lock
add
pop
add
or
sbb
add
sbb
jg
add
out
sub
and
xor
call
mov
lea
add
or
push
xor
sbb
jb
shl
shl
inc
(bad)
adc
(bad)
int
adc
inc
sbb
push
cs
les
loop
and
xor
cmp
mov
retf
push
dec
push
adc
adc
test
cwde
call
and
iret
fdivr
scas
lahf
push
iret
bound
xchg
iret
adc
iret
adc
movs
xchg
movs
or
mov
fld
les
daa
iret
fld
pop
cwde
push
cmp
mov
hlt
cmp
mov
(bad)
lods
fsubr
inc
lods
fwait
sub
mov
and
imul
sub
cmc
adc
mov
xchg
sbb
call
mov
scas
fdiv
jne
and
pusha
pop
fsubr
dec
scas
adc
pop
mov
dec
pusha
sbb
stos
cdq
and
pop
and
test
cld
mov
pop
add
push
add
mov
daa
ror
ds
loop
sub
mov
lods
je
addr16
inc
stos
push
push
push
test
rcr
ror
shl
adc
mov
dec
int
test
test
adc
dec
xor
inc
mov
add
rcr
push
ss
cmp
inc
add
jmp
jmp
dec
jmp
xchg
pop
nop
sbb
push
in
xchg
and
push
lods
push
out
int3
in
jg
push
inc
adc
cmps
into
mov
mov
push
test
and
nop
in
cmp
les
das
shl
loop
stos
xchg
sbb
dec
out
sub
sub
mov
fild
mov
lods
pop
jbe
push
out
in
cmp
sub
cmc
push
pusha
mov
lea
cmps
out
mov
sbb
adc
ret
test
retf
mov
sbb
sub
mov
cmp
xor
inc
inc
cmp
ja
(bad)
enter
out
cmp
test
xor
mov
hlt
pop
or
xlat
dec
jno
push
aaa
sbb
cmps
or
pop
add
and
repz
or
ret
out
jecxz
enter
out
fistp
enter
ins
pushf
or
adc
jl
test
mov
jmp
cmp
ss
mov
ss
mov
aam
mov
jmp
stos
mov
pop
sub
mov
dec
mov
ss
or
mov
xchg
jge
mov
xchg
push
repnz
inc
push
ss
sti
test
xchg
hlt
adc
in
mov
jo
sub
popa
xor
jl
xchg
cmp
jg
jl
mov
add
mov
stos
add
dec
pop
mov
xchg
cmp
(bad)
mov
sub
push
push
xchg
push
adc
adc
xchg
inc
mov
pop
mov
push
xchg
lea
retf
xchg
ja
mov
cmp
jne
inc
or
jmp
push
rol
mov
sub
(bad)
imul
cmps
aaa
mov
inc
aaa
ret
jle
push
sub
dec
cmp
jle
sar
mov
jg
jne
xchg
pop
push
add
push
out
cs
xchg
push
pusha
dec
mov
rcr
gs
and
pop
or
jne
popf
jo
push
iret
pop
icebp
inc
adc
dec
clc
jns
(bad)
add
fisub
jns
dec
xor
hlt
jle
adc
jg
adc
icebp
push
sub
enter
lahf
sub
sub
cmp
ficomp
retf
(bad)
test
test
fidiv
adc
inc
xchg
in
and
add
and
js
call
into
in
retf
adc
push
mov
fstp
pushf
pop
jecxz
mov
iret
ficom
(bad)
rcl
test
adc
test
cmp
or
leave
add
pop
adc
dec
call
aaa
push
mov
lods
pop
es
push
inc
rol
inc
jmp
bound
dec
add
inc
or
loope
add
pop
jae
enter
fdiv
ins
clc
mov
xchg
shr
sbb
cmps
stos
ds
mov
loopne
jg
lea
dec
cmp
jg
es
push
rol
mov
pusha
push
jge
jle
push
add
test
xor
xor
add
(bad)
sub
xor
ror
push
pop
retf
adc
mov
cs
jg
loop
out
call
mov
mov
jmp
or
les
pop
lock
mov
sub
shr
add
fist
or
inc
mov
adc
js
jge
add
pop
add
push
popa
sbb
mov
lds
sbb
mov
push
or
daa
retf
adc
jmp
in
repnz
les
mov
and
pop
mov
or
or
and
das
inc
enter
or
cld
rol
rcr
ret
dec
add
xor
mov
mov
and
pop
sbb
outs
xor
or
pop
mov
and
loop
adc
call
pop
rdmsr
push
enter
push
sbb
and
aas
(bad)
out
xor
fadd
xchg
cmp
adc
call
fcomp
pop
por
addr16
pop
je
mov
pop
daa
inc
loopne
scas
sub
sbb
cmps
imul
add
or
rol
add
in
pop
dec
push
add
push
or
(bad)
and
xchg
xor
push
push
xchg
loopne
xor
jmp
push
jmp
mov
mov
sub
(bad)
pop
pop
cmps
das
mov
inc
pusha
ret
add
dec
nop
sub
adc
sar
lods
cmp
dec
lock
inc
jo
pop
in
jb
pop
call
add
in
and
add
mov
jg
call
push
mov
ja
sub
into
ja
jbe
push
icebp
pop
adc
(bad)
mov
scas
inc
jne
adc
pop
mov
cmp
push
mov
(bad)
lock
pop
adc
adc
hlt
loop
jb
xor
test
(bad)
pop
push
stos
cmp
pop
inc
pop
push
inc
pop
xchg
das
adc
int
adc
stos
loop
aam
adc
inc
loopne
mov
sahf
(bad)
mov
add
and
inc
ucomiss
xchg
hlt
pop
ja
or
add
test
out
jo
mov
sbb
pop
test
cmp
aas
daa
shr
add
sub
not
test
pop
or
or
sbb
push
repz
push
je
cmp
(bad)
in
lea
sub
adc
push
mov
inc
dec
cmp
lods
cmp
jle
or
ins
cmp
adc
ins
cld
pusha
mov
adc
outs
ins
xchg
push
and
test
je
and
sbb
dec
jns
iret
sbb
adc
push
inc
adc
loopne
addr16
fwait
and
call
push
int3
add
add
fcom
gs
inc
sbb
inc
mov
call
loopne
adc
add
pop
mov
pop
pop
pop
das
cmp
jg
aad
mov
jl
sub
nop
jmp
push
adc
mov
ds
mov
and
daa
pop
sbb
ins
mov
push
sub
ds
aam
aam
(bad)
fmul
int3
sub
clc
jg
xchg
es
push
push
mov
enter
pop
fadd
pop
outs
xchg
push
sub
int
jge
dec
mov
mov
rcr
lea
push
xor
movs
out
shl
push
push
dec
cmp
ins
in
mov
cli
scas
push
and
xchg
cmps
add
js
jo
xor
adc
lea
pop
push
mov
sbb
jle
sub
or
and
pop
pop
pop
add
push
add
adc
call
push
xor
inc
sbb
mov
ret
push
loopne
mov
sub
mov
xchg
call
or
adc
adc
punpcklwd
call
adc
cmp
jg
sub
xor
out
cmp
nop
or
pop
rcl
lods
jns
mov
repnz
sub
loopne
and
mov
or
dec
or
test
lahf
pop
push
pusha
shl
push
call
mov
cmps
mov
and
pop
adc
call
dec
nop
es
xchg
pop
test
ret
fimul
add
ret
mov
lock
push
enter
call
pop
popa
add
sub
imul
clc
add
or
xor
imul
or
mov
sbb
add
mov
push
add
aas
aaa
bound
lds
push
cdq
aaa
mov
aaa
sbb
pop
sub
mov
mov
push
mov
adc
xlat
inc
lds
rol
pop
xchg
mov
sbb
ins
xor
pop
and
pop
xchg
and
sub
lea
pop
cmp
sbb
adc
adc
adc
arpl
adc
push
pop
or
sub
sbb
dec
xchg
pop
daa
pop
popa
xor
in
adc
lea
pop
adc
sub
xor
inc
arpl
cmp
mov
leave
mov
rcr
add
les
or
adc
mov
add
jb
adc
sbb
fcomp
pop
ins
sub
and
mov
push
xchg
pop
sub
pop
daa
pop
sbb
or
je
inc
add
arpl
pop
sbb
lock
sub
push
dec
imul
je
inc
popa
je
cs
inc
pop
inc
outs
ins
ins
outs
outs
cs
push
popa
imul
ins
in
pop
fidiv
outs
addr16
inc
jbe
outs
je
outs
xor
jne
fild
ds
jb
popa
jns
push
adc
out
fdivr
bndstx
arpl
jle
adc
arpl
jae
ins
and
push
push
add
dec
scas
jo
inc
pop
sub
call
cmpxchg
loopne
inc
gs
jne
je
add
test
in
adc
push
or
aas
dec
outs
or
mov
not
sub
add
push
push
and
push
dec
mov
adc
jp
xchg
add
inc
or
stos
ins
lock
jle
add
pop
(bad)
mov
adc
sub
or
inc
test
add
xor
sbb
adc
inc
push
jbe
mov
scas
pop
or
pop
ins
jnp
ins
adc
xor
mov
cmp
mov
fdivr
adc
or
xor
sub
jl
push
and
xor
fidivr
rol
and
or
or
sub
into
push
add
dec
push
inc
sldt
mul
sub
mov
mov
dec
outs
sub
aam
sub
and
sbb
sahf
inc
add
icebp
or
mov
fs
or
imul
adc
es
sbb
jnp
(bad)
int
mov
push
lods
shl
lock
into
or
popa
ins
imul
mov
scas
add
stos
(bad)
pushf
popa
xor
aaa
cwde
add
adc
mov
dec
icebp
or
pop
dec
add
mov
scas
(bad)
stos
pop
das
jbe
dec
inc
outs
jne
dec
popa
bound
add
push
add
jecxz
cmps
push
push
add
add
xor
xor
hlt
je
inc
loop
jne
jp
mov
xor
mov
jmp
add
inc
movs
js
xor
clc
pop
mov
sbb
push
add
cwde
ds
popa
lock
pop
jmp
cmp
inc
inc
or
ror
mov
push
inc
and
inc
icebp
sub
je
jb
cld
mov
push
inc
jb
sbb
adc
or
fisttp
popa
or
inc
adc
pop
add
add
pop
push
mov
add
adc
or
pop
outs
adc
push
ins
pop
adc
adc
pop
sbb
pop
mov
inc
xor
ins
sub
fsub
adc
add
fidiv
(bad)
mov
pushf
dec
cmp
push
repnz
push
xor
stos
xor
and
fisttp
shl
jl
loop
or
push
out
mov
push
mov
push
fwait
daa
cdq
rol
test
mov
jae
add
imul
sub
mov
imul
push
repz
cs
sub
sub
inc
xlat
add
add
test
xchg
fstp
rcr
xor
idiv
lock
ss
dec
pushf
repz
inc
cs
shl
and
popf
fnstenv
xor
adc
cmp
sbb
cmp
int
pushf
mov
cmp
fimul
inc
sahf
xor
jp
repnz
daa
and
cmp
mov
fldenv
cmp
fist
loop
cmp
outs
cmpxchg
jecxz
adc
idiv
jecxz
or
add
sub
mov
pop
pop
push
mov
xchg
mov
ins
push
push
or
inc
push
add
add
cmps
dec
pushf
push
adc
ror
cmp
push
xchg
jae
stos
pop
inc
mov
ins
and
adc
pop
fld
jb
bound
dec
imul
or
xchg
add
sbb
sbb
jae
or
sub
fidivr
add
xor
pusha
or
mov
leave
push
mov
jg
add
arpl
add
or
or
rcl
inc
sub
push
ins
xor
cmp
ret
xchg
outs
or
outs
add
or
jbe
fild
mov
ja
jbe
dec
outs
add
jae
jo
nop
add
enter
jb
out
out
dec
pop
xor
fmul
xchg
add
mov
or
pop
scas
ror
adc
and
ror
call
gs
call
arpl
xor
test
or
add
jae
mov
das
fild
adc
test
add
popa
iret
dec
add
adc
shl
ins
adc
rcl
xlat
or
add
xchg
mov
fimul
inc
add
push
and
sbb
inc
fs
jmp
jo
test
pusha
or
push
es
aam
ja
add
bound
jb
sbb
add
or
mov
dec
int3
adc
mov
arpl
cdq
jge
js
xor
pop
xor
shl
xchg
or
sbb
or
ja
sub
inc
jae
pop
pushf
inc
pop
jae
pop
adc
dec
dec
jg
mov
push
pop
add
popa
pop
add
ins
mov
jge
test
add
mov
cmp
and
aaa
add
pushf
movs
je
imul
call
dec
sbb
pop
push
sar
sbb
imul
rol
cmp
mov
addr16
daa
retf
and
pop
and
sub
fisttp
mov
sub
fistp
or
imul
lahf
push
ins
or
cli
jb
dec
or
test
repz
and
mov
cmp
fcom
adc
daa
add
add
or
ins
mov
add
gs
or
mov
sub
in
dec
rol
sub
sbb
lods
cmp
inc
and
jbe
test
or
inc
mov
xor
in
inc
add
cwde
nop
pusha
lea
and
or
mov
jl
shl
scas
add
cmp
scas
pop
outs
adc
cdq
or
add
pusha
sub
ja
lods
pop
stos
push
sub
shr
mov
imul
jae
call
xor
sbb
add
inc
hlt
or
ret
or
sbb
cmp
sub
and
pusha
adc
clc
add
pop
int
push
cmp
push
inc
fmul
pop
iret
aaa
inc
add
iret
in
jmp
jbe
add
push
inc
imul
push
mov
mov
mov
mov
sti
and
je
leave
add
rol
inc
lods
outs
mov
mov
jne
add
mov
int
int
mov
outs
push
mov
stos
test
outs
sub
retf
outs
adc
add
popa
daa
lock
adc
mov
inc
cmps
jo
cmp
add
mov
loopne
or
aaa
das
dec
push
adc
(bad)
fst
sub
mov
data16
js
xchg
jge
inc
lods
je
mov
shr
cmp
call
sub
push
cmps
sbb
pusha
add
add
ins
inc
adc
daa
pop
mov
rcl
shr
push
inc
inc
add
pop
int3
pop
rcl
push
pop
addr16
jl
jmp
ins
cmps
mov
ja
and
and
(bad)
lods
jnp
push
sbb
sub
inc
push
pop
(bad)
(bad)
test
sub
push
pop
pusha
pop
xor
sbb
adc
int
or
adc
pop
pop
cmp
shr
and
xor
push
xchg
ds
jne
push
ror
push
adc
daa
mov
xchg
inc
(bad)
mov
daa
cmp
ror
leave
leave
enter
js
in
in
stc
cs
jns
jb
xor
adc
mov
jns
dec
es
sbb
inc
fistp
mov
or
pmaxsw
lods
jae
push
ret
pop
lock
jp
shl
and
mov
push
sbb
(bad)
cmp
push
pop
xor
(bad)
fisub
jno
aad
push
sbb
mov
shr
xor
in
mov
xchg
mov
retf
inc
add
(bad)
jle
in
mov
mov
add
movs
mov
push
and
ins
scas
pop
cdq
jo
push
mov
aad
or
les
je
adc
xor
inc
bound
pop
mov
out
pop
and
xchg
or
mov
and
add
xchg
das
mov
adc
gs
mov
and
mov
inc
pop
xor
test
push
sbb
iret
dec
push
test
add
push
pop
ins
jno
push
jb
xchg
inc
mov
or
pop
pop
sbb
sub
push
les
adc
mov
lods
dec
inc
add
and
pop
mov
xchg
pop
sub
add
jle
add
sub
add
outs
mov
sub
mov
dec
das
sub
test
mov
push
and
test
dec
adc
test
dec
test
stos
stos
sub
sub
jns
add
xchg
add
test
push
add
daa
inc
mov
add
jns
(bad)
sbb
or
push
sbb
mov
(bad)
ins
sub
lods
sub
pop
sub
xchg
mov
and
sub
dec
mov
xor
mov
mov
les
mov
sbb
mov
nop
pusha
lds
jo
cmp
inc
xor
adc
ret
add
pop
fwait
or
sbb
pop
out
mov
cmps
mov
push
xchg
xchg
cmp
pop
xlat
lods
mov
sub
push
sub
pusha
mov
or
(bad)
(bad)
ja
mov
push
sbb
adc
sbb
xor
scas
or
ds
fld
mov
push
push
push
bound
cmp
mov
dec
push
jo
and
clc
or
cli
push
out
jecxz
(bad)
aam
ins
dec
bound
adc
mov
adc
push
(bad)
ffreep
push
mov
add
push
xchg
add
add
xor
mov
pop
dec
test
push
scas
pop
mov
sbb
pop
enter
stos
stos
jne
scas
sub
jne
mov
scas
inc
push
ret
mov
pop
push
lods
fisub
fcmovne
loope
cmp
adc
push
fld
sbb
fst
and
adc
add
xlat
and
pop
pop
sub
mov
add
out
stos
mov
(bad)
(bad)
pop
jmp
ja
pop
xor
inc
push
fisttp
scas
pop
scas
popf
cwde
mov
xor
out
and
push
cmp
cmps
pop
jmp
in
push
(bad)
out
inc
inc
jge
push
push
(bad)
mov
aam
gs
ret
sbb
cs
cli
clc
push
mov
xchg
aas
xchg
cmps
mov
and
inc
or
jae
aam
cmp
rcl
ins
jo
pop
dec
adc
push
in
or
lods
push
mov
jmp
sub
mov
sub
sub
in
fistp
pop
(bad)
inc
push
mov
or
xchg
fdiv
out
push
scas
pop
fbld
aas
dec
push
adc
mov
outs
pop
or
mov
outs
test
pop
popa
imul
cmc
sbb
inc
test
imul
cmp
add
mov
push
jmp
lods
daa
mov
pxor
pop
pop
paddq
jb
cmc
inc
pop
aaa
xchg
daa
daa
mov
mov
pop
pusha
enter
imul
leave
leave
test
adc
inc
in
in
jae
mov
repnz
mov
cmp
jns
std
xor
jge
out
mov
mov
push
pop
stos
cwde
mov
bound
push
mov
(bad)
add
inc
in
imul
ds
cmp
cwde
dec
sbb
dec
dec
dec
call
repnz
cmp
jno
cmp
xor
jecxz
pop
inc
add
je
pop
xor
mov
dec
jg
push
mov
jle
sbb
jnp
xchg
sbb
pop
mov
ins
int3
ss
pop
test
cmp
xor
outs
outs
cdq
lock
bound
jecxz
ja
outs
jmp
mov
jmp
imul
fs
xor
popa
cmp
cmp
push
xor
jmp
pop
ins
jmp
and
gs
test
inc
and
mov
pop
pop
call
jecxz
xor
jo
or
jecxz
sub
das
dec
cmp
call
dec
add
jecxz
add
mov
in
mov
mov
mov
gs
(bad)
push
lods
lds
inc
loop
push
jecxz
iret
and
je
jecxz
cmp
and
lea
jmp
push
mov
jecxz
cmp
outs
jo
aas
xor
pusha
sbb
out
nop
scas
jecxz
shr
sar
and
xchg
aam
test
fs
das
adc
dec
rcl
cmp
pop
add
jecxz
mov
and
(bad)
cdq
cmps
test
lds
or
leave
fist
loope
jl
rcl
aaa
add
jecxz
pop
in
mov
sar
mov
jae
ret
call
jecxz
and
cmps
adc
or
cli
daa
inc
ds
sbb
pop
push
dec
lods
jecxz
push
jge
std
inc
sbb
inc
sti
sar
fst
sub
ins
xor
outs
push
adc
mov
sub
stos
cmp
jno
pop
add
mov
dec
mov
pop
jbe
dec
mul
call
mov
mov
mov
xor
jecxz
outs
xor
sbb
adc
or
sub
sbb
aaa
push
mov
jb
mov
in
mov
pop
xlat
in
shl
dec
out
cmp
inc
fadd
jecxz
aam
or
inc
push
loop
es
ret
adc
test
les
mov
pop
or
ja
sbb
or
rol
and
cmp
lea
push
add
ins
inc
add
lea
leave
jecxz
in
or
mov
or
push
cld
test
xor
adc
jb
jo
add
and
call
pop
ins
loope
mov
xchg
push
cmovl
add
xor
or
push
add
pop
inc
add
adc
test
cmp
sbb
mov
div
lods
iret
add
inc
cmp
pop
mov
mov
cmps
out
stos
add
push
jg
mov
mov
push
movups
push
rol
jmp
mov
dec
add
dec
scas
mov
push
sbb
inc
(bad)
int
int
add
add
add
inc
sub
or
call
inc
adc
push
repz
pop
push
cmovle
add
or
lock
add
out
push
jg
push
add
mov
ret
sub
js
pop
das
xor
dec
sbb
hlt
cli
pop
imul
jge
lock
add
adc
retf
push
ja
xor
push
repnz
or
push
or
clc
ss
sub
push
pusha
clc
or
add
push
sub
fisub
add
outs
pop
fdivr
mov
sub
push
mov
ror
lahf
les
sub
js
cmove
adc
pop
push
int
add
jno
mov
paddusb
cmp
call
clc
movs
push
mov
xchg
mov
pop
pusha
add
ret
inc
das
imul
sbb
add
or
das
ins
test
pop
and
xchg
bswap
add
fadd
jo
cs
push
xchg
mov
imul
lods
push
sub
movhps
xchg
xchg
xchg
push
mov
sbb
in
leave
leave
push
fcom
jne
daa
xor
setb
adc
push
stos
repz
leave
leave
enter
call
sbb
push
lahf
jb
repnz
add
pop
rcr
jb
add
pop
loopne
ucomiss
push
push
or
push
jmp
add
js
add
lods
daa
aad
out
shl
stos
(bad)
dec
or
aad
push
dec
fdiv
std
adc
dec
lods
shl
sbb
sbb
and
dec
add
or
adc
adc
es
bound
and
scas
add
test
or
add
int3
push
dec
pop
add
push
loopne
adc
(bad)
add
jbe
push
rcl
add
dec
int3
inc
mov
or
dec
or
dec
lock
jno
das
inc
cmp
fwait
mov
and
dec
jae
test
dec
pop
xor
inc
or
push
inc
je
in
adc
and
dec
cli
add
add
jno
aaa
rol
and
inc
mov
add
jo
dec
sub
dec
mov
dec
sub
pop
jb
dec
gs
fld
in
push
ja
fcom
aas
rcr
test
scas
inc
add
dec
sub
rcr
add
dec
and
mov
or
or
add
ds
push
add
pop
adc
jg
push
loopne
dec
adc
dec
pop
push
ror
and
je
and
push
jae
add
dec
aaa
push
push
into
add
inc
add
ins
imul
inc
adc
push
dec
std
add
test
test
pop
mov
dec
xor
xor
dec
jge
push
and
mov
dec
cwde
ins
dec
add
add
jns
add
bound
xchg
mov
dec
mov
adc
add
inc
xchg
dec
or
add
xor
dec
out
push
adc
add
xor
dec
mov
pop
in
(bad)
lds
mov
in
pop
inc
dec
in
jo
add
in
xor
into
jo
fadd
sub
mov
add
jl
sub
ins
mov
add
and
fmul
sub
xchg
add
push
add
sbb
add
aad
and
in
sub
and
adc
push
adc
fadd
daa
push
add
or
mov
aas
mov
clc
fisub
add
inc
add
dec
repz
jge
add
pop
ins
pop
push
lods
mov
mov
mov
push
jle
invd
push
popf
mov
xor
sahf
addr16
jo
or
pop
je
rcl
in
test
int
cs
sub
int
and
jg
into
pop
test
mov
fild
add
arpl
ins
inc
lods
out
ins
mov
jne
int
out
shl
jmp
add
es
jge
mov
movs
add
aas
fs
add
arpl
mov
mov
stos
ror
add
or
int
shl
dec
aaa
(bad)
out
pop
pop
mov
scas
sbb
pop
add
fs
sbb
popa
inc
aas
pop
daa
or
jbe
push
shl
push
ret
rcl
add
mov
pop
inc
cmp
xor
push
les
das
test
fsub
lock
jg
(bad)
mov
test
dec
clc
mov
cwde
push
xlat
inc
and
push
pop
popa
sbb
mov
imul
jo
jns
lods
(bad)
loopne
pop
push
test
jp
in
into
leave
mov
push
adc
cmc
mov
push
xchg
push
fwait
(bad)
pushf
mov
paddd
xchg
dec
dec
inc
sahf
add
push
mov
dec
stc
mov
xchg
xchg
daa
daa
cli
xor
xchg
lds
leave
leave
leave
jnp
fmul
mov
in
fs
xchg
mov
repnz
mov
out
out
icebp
lods
push
sbb
pop
inc
sti
sub
and
adc
mov
iret
shr
cmp
sbb
call
or
mov
shl
mov
test
pop
add
iret
xor
mov
mov
iret
sar
push
sub
add
inc
pop
inc
dec
add
mov
pop
iret
cwde
(bad)
out
es
ins
push
pop
popf
pop
mov
iret
lods
outs
or
or
cmps
(bad)
iret
mov
mov
iret
les
xor
iret
jae
cmp
jne
out
cwde
pop
push
add
xchg
or
adc
xchg
ret
mov
xor
cmp
fwait
mov
add
mov
iret
push
lods
pop
inc
pop
xor
mov
mov
mov
jne
fsubr
and
cmp
cld
push
push
jno
add
pop
inc
push
les
iret
dec
adc
shl
pusha
mov
adc
mov
xor
push
scas
(bad)
enter
dec
add
dec
lds
daa
mov
xchg
mov
sub
xchg
and
pop
shr
dec
lods
(bad)
in
fldenv
inc
nop
clc
jle
inc
sub
dec
add
popa
mov
cmp
add
xchg
mov
dec
inc
mov
and
jmp
sub
mov
bound
sub
ja
daa
add
xor
xor
(bad)
fnsave
ja
lods
test
inc
(bad)
adc
mov
les
adc
inc
sub
mov
cmp
adc
dec
add
push
ja
mov
sub
pop
or
xor
add
pop
dec
adc
ja
jb
ja
bound
retf
imul
fcom
sub
xchg
inc
add
es
sub
or
imul
or
les
push
imul
push
inc
mov
fs
loopne
sub
jl
mov
pop
les
sub
scas
xor
pop
push
lods
aam
in
pop
add
jp
int3
cmp
push
outs
ror
addr16
xor
pop
adc
push
sar
push
mov
ss
addr16
push
sub
mov
int
or
or
dec
imul
div
aaa
sbb
pusha
inc
jb
dec
bound
mov
xchg
ss
adc
push
test
push
pop
imul
jbe
icebp
xlat
push
adc
data16
inc
add
nop
xor
fdivr
add
mov
jbe
push
scas
je
mov
imul
pop
das
jp
stos
stos
jne
(bad)
mov
jp
xlat
fidiv
xchg
mov
ficom
mov
sbb
or
dec
and
cmp
fmul
mov
cs
cmps
jmp
and
into
das
retf
js
loop
das
das
inc
add
cmp
lods
push
rsqrtps
sar
iret
sub
pusha
mov
push
daa
stos
inc
adc
aam
sahf
or
inc
das
pop
push
push
jo
mov
jg
ja
add
inc
sub
add
mov
push
mov
mov
push
add
dec
cmp
pop
or
pusha
ds
sbb
inc
std
adc
xchg
pop
add
imul
push
add
outs
ins
and
pop
ja
inc
ins
xor
pop
pop
cmp
adc
mov
ror
ret
fwait
mov
xchg
pop
xor
add
ds
fimul
mov
or
imul
cmp
loopne
jb
push
add
adc
jbe
push
sbb
or
xor
or
mov
mov
mov
add
in
mov
lods
mov
pop
test
or
xchg
pop
sar
mov
fld
jo
mov
dec
dec
inc
fimul
push
fwait
inc
jle
daa
daa
and
pushf
pop
test
xchg
xchg
xchg
daa
add
enter
sahf
inc
fwait
in
in
jecxz
lahf
pop
mov
repnz
scas
aad
mov
jb
leave
lock
cmp
cmp
dec
xchg
lock
mov
push
mov
mov
scas
mov
add
xlat
fs
cmp
aam
cmp
sahf
dec
mov
shl
pop
cmovo
lock
sbb
sbb
mov
mov
jecxz
push
xor
(bad)
jg
xor
push
add
les
sbb
jle
inc
jne
mov
mov
add
push
ins
xor
cmp
add
fidivr
or
push
dec
ja
sbb
push
or
add
add
out
adc
in
imul
addps
sub
inc
rol
leave
call
and
lods
ins
push
pop
xor
add
or
xor
inc
xchg
cmovl
adc
ins
push
(bad)
xor
add
or
sbb
push
or
dec
push
inc
data16
mov
push
ja
adc
push
pop
mov
and
mov
sbb
sbb
push
loopne
inc
sar
sub
enter
cmp
add
add
push
dec
jg
jo
test
pop
push
loopne
push
sub
mov
lds
mov
dec
cmp
add
stos
dec
aaa
add
sub
sub
stos
add
dec
sbb
add
mov
mov
cmps
aam
mov
or
daa
fidiv
add
imul
mov
xchg
addr16
inc
sbb
pusha
add
push
and
jns
bound
and
mov
addr16
cmp
add
mov
xor
or
mov
add
addr16
adc
sub
mov
dec
imul
mov
in
shl
mov
xor
in
fisubr
fiadd
gs
outs
test
add
dec
inc
and
test
popw
xlat
add
test
in
or
add
movs
iret
sub
or
push
iret
jo
cmp
push
sub
or
pop
pop
or
adc
cmp
add
xchg
add
push
mov
mov
aas
xor
mov
movs
bound
sar
pop
movs
arpl
or
jmp
mov
pop
push
cs
push
push
cmps
cdq
inc
cmps
mov
rcl
cmps
adc
add
js
push
pop
sbb
adc
pop
iret
clc
int
or
cmps
stos
xchg
or
push
jmp
iret
retf
pop
lods
mov
pop
push
mov
jmp
add
push
mov
pop
ret
aas
lods
adc
scas
xor
popf
cwde
push
aad
mov
jmp
das
aad
mov
imul
jmp
jbe
outs
and
add
pop
xor
aas
push
adc
and
call
popf
or
test
push
jne
mov
jo
scas
je
or
ins
dec
inc
pop
sbb
imul
data16
enter
(bad)
xchg
adc
sbb
stos
(bad)
fs
fdivr
test
das
inc
lods
addr16
data16
inc
(bad)
in
jns
mov
or
hlt
push
add
mov
mov
ret
or
pop
add
addr16
sbb
addr16
addr16
lods
(bad)
loopne
test
xchg
bswap
cmp
lods
addr16
data16
pop
(bad)
jnp
push
data16
push
stos
fimul
leave
leave
leave
enter
mov
in
fs
scas
push
fdiv
xor
adc
cmp
jns
mov
xchg
fstp
dec
outs
xchg
inc
sahf
pushf
pushf
mov
dec
dec
dec
dec
lods
aam
das
mov
daa
daa
and
(bad)
jnp
push
iret
data16
pop
pop
add
and
sub
es
pop
cmps
stos
aam
es
cmp
test
xor
jecxz
dec
or
pop
lods
pop
in
jno
clc
jno
and
sub
pop
ins
pop
lea
pusha
xor
call
jg
or
lods
jle
adc
pusha
pop
mov
(bad)
pop
add
sub
push
push
ins
push
mov
fidiv
ins
into
add
push
mov
and
cmps
pop
adc
sub
aam
sub
pop
jae
sbb
cmp
pop
mov
mov
dec
pop
xchg
dec
int3
jp
or
sub
add
test
movs
fwait
(bad)
js
sbb
ficom
push
push
mov
lds
or
cmp
repnz
pop
inc
or
dec
add
dec
xor
shl
test
sbb
pop
inc
cwde
jne
or
mov
bound
or
sub
popf
imul
push
nop
or
push
lods
push
pop
dec
repnz
repz
pop
add
outs
xor
mov
dec
adc
rol
push
rol
(bad)
push
dec
(bad)
pusha
jmp
mov
(bad)
dec
add
stos
mov
aaa
add
adc
bound
sub
mov
mov
fadd
mov
(bad)
out
mov
test
cmp
inc
mov
adc
dec
mov
add
(bad)
sti
sbb
(bad)
sub
nop
and
ins
(bad)
jns
sbb
xchg
inc
or
push
(bad)
xchg
dec
mov
sub
(bad)
test
(bad)
xor
xchg
or
dec
inc
mov
bound
bound
mov
lods
(bad)
fimul
fdivr
push
add
xchg
xchg
mov
sub
inc
add
dec
or
xchg
pop
mov
adc
mov
xchg
pop
outs
sub
pop
mov
or
mov
xlat
lods
in
cld
push
addr16
sub
pusha
sub
sbb
(bad)
in
addr16
mov
adc
mov
mov
loopne
and
lods
fcomp
pop
inc
cmp
add
(bad)
rol
mov
adc
pop
or
sbb
test
mov
popa
add
or
inc
mov
rcl
push
pop
inc
jb
push
mov
out
dec
bound
adc
add
pop
dec
popf
or
and
push
adc
mov
push
mov
inc
mov
fisubr
lahf
push
scas
pop
push
out
add
pop
je
xchg
push
lods
mov
mov
lods
ja
push
dec
mov
add
mov
jno
lods
inc
mov
and
sar
lahf
adc
mov
lods
add
int
outs
stos
outs
mov
movs
or
pop
retf
loopne
sub
mov
pop
add
push
cmp
pop
inc
add
mov
push
sqrtps
sub
inc
mov
not
stos
mov
mov
daa
sub
push
xor
pop
das
jno
sbb
lahf
pop
push
xor
jg
call
adc
ds
add
inc
cmp
push
jp
push
pop
or
enter
xchg
sub
xchg
pop
add
imul
fwait
ins
xchg
adc
or
pop
ja
mov
xor
pop
and
push
and
sub
lds
jnp
outs
cmp
inc
push
sbb
pop
push
int
sbb
add
sar
in
adc
loop
mov
lock
je
or
fadd
push
mov
retf
popa
cmp
add
mov
cmps
mov
mov
jecxz
bswap
or
fadd
jo
mov
push
mov
ja
mov
nop
push
xchg
aad
leave
leave
enter
mov
in
lds
retf
xor
adc
cmp
sbb
(bad)
outs
popf
ret
cmp
call
dec
inc
sahf
pushf
fadd
leave
daa
pop
cmp
dec
dec
cmps
add
sub
mov
add
jbe
int
push
jmp
add
pop
add
push
das
fnstsw
adc
shl
stos
xchg
dec
or
aad
push
add
adc
add
or
sbb
and
add
mov
pusha
and
sub
inc
div
cmp
nop
bound
adc
jbe
inc
xor
aad
or
adc
shl
fwait
mov
adc
loopne
push
add
inc
add
pop
out
pushf
mov
fiadd
xchg
or
loopne
add
adc
xchg
das
or
call
gs
adc
add
pop
xor
mov
cmp
mov
iret
pusha
add
mov
push
push
jno
lds
sbb
add
inc
add
rol
shr
cmps
sub
and
sbb
aas
sub
push
push
ja
pop
add
add
js
sbb
cmp
mov
scas
dec
(bad)
scas
push
push
add
xor
mov
xor
mov
xor
xchg
rcl
cmp
jnp
add
pop
xor
xor
inc
pop
and
fdivr
mov
es
pop
xor
pop
cmp
add
xchg
sbb
sbb
imul
out
dec
add
sbb
cmps
or
or
cmp
pop
or
daa
add
sub
pop
or
mov
pop
jge
adc
inc
pop
sbb
ins
pop
add
adc
cwde
adc
mov
xchg
mov
pop
loopne
push
ror
mov
or
push
pop
or
call
pop
loopne
add
add
push
add
mov
mov
mov
xor
pop
add
ret
shl
mov
add
xor
jns
ror
sub
pop
pop
jmp
add
fld
xor
or
or
call
int3
mov
add
test
mov
fadd
sub
add
pop
or
add
rol
or
nop
sbb
ja
add
push
sbb
jbe
xchg
js
add
fidiv
ins
les
ja
jns
mov
pop
(bad)
frstor
add
pop
js
xchg
push
jle
scas
jmp
dec
jge
pop
test
push
das
mov
sbb
mov
rol
ins
jmp
stos
in
adc
sub
push
inc
lods
mov
outs
stos
adc
mov
retf
mov
out
or
jno
add
sub
ja
push
jne
push
das
fsubr
mov
out
sar
jl
push
movs
es
das
in
adc
iret
fst
stos
push
stos
data16
in
out
cld
mov
dec
push
mov
xchg
adc
xchg
hlt
test
inc
xchg
xchg
js
out
pusha
xchg
shl
fsubr
rcl
ins
dec
and
pop
inc
pop
das
push
test
rcr
in
nop
(bad)
or
out
fld
shr
sbb
mov
push
stc
das
dec
aam
adc
aas
push
js
xchg
lahf
loop
cwde
jne
mov
push
sbb
pop
push
push
push
loopne
call
pusha
push
xor
cwde
adc
ss
push
or
cwde
in
push
ja
mov
fdivr
popf
(bad)
adc
push
fnsave
push
push
ja
push
mov
jmp
inc
sahf
pushf
pushf
cdq
frstor
xlat
jne
dec
dec
dec
ret
out
fcom
daa
daa
daa
popf
rcr
xchg
push
mov
leave
leave
leave
push
jns
(bad)
in
in
sti
xor
jle
jb
repnz
add
cmp
fisttp
sub
lds
fisttp
pop
push
jp
add
mov
imul
setg
push
push
cmp
dec
push
dec
cmp
adc
xor
jno
mov
int
imul
shr
rcr
cdq
pcmpgtw
mov
scas
cwde
unpcklps
mov
(bad)
(bad)
daa
ins
jbe
retf
or
shr
pop
push
add
mov
or
mov
(bad)
push
adc
nop
pop
mov
push
mov
sub
jne
mov
jb
das
(bad)
mov
fwait
gs
test
maxps
or
xor
aam
jns
jmp
shrd
add
push
add
push
mov
es
add
mov
push
hlt
push
(bad)
adc
(bad)
jle
sysexit
aad
mov
add
push
mov
clc
push
jae
mov
add
dec
xchg
xchg
adc
es
fmul
sub
jecxz
adc
and
fist
mov
dec
imul
cmp
dec
es
mov
std
push
cmp
add
test
sub
adc
test
adc
ins
mov
mov
mov
test
mov
cmp
fcomp
adc
push
mov
mov
inc
dec
jbe
and
mov
push
test
mov
adc
mov
and
rol
mov
jno
jmp
dec
mov
or
bound
clc
mov
inc
sub
pop
xor
fdiv
dec
inc
sub
push
lods
mov
mov
adc
shl
add
or
mov
or
ficomp
int3
aaa
push
imul
push
push
enter
stos
retf
ret
inc
sub
dec
add
mov
bound
inc
and
pop
popa
das
push
mov
push
sub
loope
hlt
cmp
push
inc
push
sbb
or
and
std
mov
int3
add
push
mov
add
inc
and
hlt
stos
add
adc
cmp
int3
popa
fistp
imul
push
jae
or
adc
mov
nop
add
loope
adc
loopne
(bad)
add
push
adc
jl
popf
mul
hlt
push
mov
aas
cs
(bad)
mov
xchg
into
mov
push
xor
and
sbb
ins
xchg
clc
ror
ss
sahf
addr16
pop
or
mov
xchg
dec
int
mov
or
(bad)
aam
jecxz
sub
cwde
lock
jnp
ja
pop
pop
inc
into
mov
or
push
pop
dec
xor
scas
ret
push
inc
mov
dec
dec
add
imul
daa
pop
scas
pop
in
xchg
jge
lds
and
cmp
jecxz
fsubr
test
xor
xchg
fsub
cvtps2pi
xchg
(bad)
or
pop
add
popf
cmp
push
mov
inc
test
mov
rol
mov
jne
jb
mov
jns
int
cs
mov
stos
mov
push
nop
retf
mov
scas
pop
aad
aam
cmp
jle
jge
xchg
add
(bad)
rdpmc
xchg
pusha
xor
add
(bad)
xor
and
and
je
mov
sbb
cmps
add
mov
rcl
adc
adc
dec
mov
scas
pop
fnstsw
call
mov
push
push
xchg
cmp
daa
cld
add
mov
add
xchg
scas
add
lar
add
add
xor
inc
loopne
adc
add
jns
pop
jb
add
jne
push
bound
into
adc
push
mov
cmp
or
jg
pop
jle
bound
push
out
pop
adc
inc
ins
popa
jae
xor
push
push
je
ins
scas
jns
rcl
ret
push
int
fadd
(bad)
(bad)
fsubr
scas
mov
data16
out
test
mov
sbb
xlat
pushf
push
push
or
adc
loope
sahf
fimul
and
scas
and
xor
add
and
es
cs
dec
cmp
push
cmps
loope
ret
dec
cmps
jo
adc
idiv
fdivr
cmps
sbb
xor
cmps
cmps
xchg
es
movs
or
adc
or
(bad)
pop
aaa
lds
push
inc
jmp
lahf
shl
push
cmp
jg
mov
loopne
ficom
lahf
sub
and
mov
mov
addr16
call
or
pop
test
xchg
pop
pusha
inc
or
and
xchg
hlt
xchg
movs
or
xchg
or
int
pushf
xor
cli
fmulp
pop
call
jbe
and
or
(bad)
or
add
popf
repz
xchg
xchg
jne
aaa
inc
add
mov
in
jl
add
jne
fnstsw
inc
push
add
xor
js
pop
xor
adc
or
es
pop
ins
xchg
or
adc
ja
pop
adc
sub
stos
neg
outs
mov
ja
and
sbb
loopne
inc
test
inc
push
add
sub
ss
popa
xchg
xchg
xor
dec
outs
popa
jo
ds
popa
pushf
bound
fdivr
outs
push
loope
jns
sti
ucomiss
loopne
arpl
bound
add
shl
pop
sbb
sub
inc
add
cwde
push
or
sub
inc
lods
or
and
sub
rcl
jb
dec
bound
push
cmps
xor
test
pop
popa
test
adc
hlt
in
test
pop
ret
inc
mov
cmp
scas
sub
adc
adc
mov
pop
mov
scas
sbb
push
add
icebp
pop
or
(bad)
adc
push
fstp
ins
mov
les
loopne
push
add
push
mov
push
or
imul
mov
jo
add
push
mov
inc
or
and
adc
into
adc
test
inc
fcom
adc
mov
ror
call
push
loopne
adc
pop
repnz
sub
add
ins
bound
inc
jae
push
adc
add
je
push
xchg
push
stos
rcl
sbb
cmp
or
mov
push
mov
es
add
jle
jp
sti
and
adc
jge
push
add
shr
movs
add
push
(bad)
popa
mov
inc
mov
dec
pop
fdiv
pusha
sbb
shl
adc
jb
push
or
cmp
mov
sbb
addr16
pop
mov
add
add
pop
dec
mul
or
xchg
ins
or
jl
leave
pop
ja
mov
and
jns
add
mov
cmc
fild
nop
loop
xlat
cld
shl
xor
pop
pop
mov
dec
jp
pop
add
push
test
fcmovu
ja
out
push
pop
imul
mov
push
and
neg
jbe
mov
mov
in
mov
pop
shl
mov
call
and
mov
loopne
neg
inc
xor
xlat
cmp
ds
aad
adc
imul
and
sub
add
outs
adc
test
data16
test
and
minps
dec
dec
mov
push
fsub
cli
movs
sub
stc
xor
test
inc
sahf
pushf
in
cli
fs
daa
and
cld
dec
sti
outs
mov
fsub
pop
leave
enter
in
std
test
leave
int
sub
push
repnz
in
scas
in
push
jb
imul
js
add
aas
bsf
sahf
outs
pop
mov
push
pop
cmps
sub
cdq
push
aad
mov
cli
xor
add
inc
lock
dec
or
or
cmp
ss
push
jge
mov
jae
mov
add
sbb
add
adc
dec
add
loopne
hlt
dec
mov
add
jae
cdq
ret
aaa
lock
add
jg
mov
leave
and
dec
xor
jle
inc
cmp
mov
sub
bound
lds
cmp
lahf
ins
(bad)
in
push
sub
add
cmp
stos
adc
outs
or
add
sbb
int
add
ja
adc
stos
push
and
push
dec
fisub
add
test
daa
popa
ror
add
adc
xchg
jo
not
test
ror
mov
and
das
leave
call
and
jl
adc
dec
inc
in
pop
xchg
or
cmp
ret
pop
dec
jae
imul
add
scas
mov
adc
or
or
fld
scas
lea
or
movs
and
xor
xor
dec
add
mov
push
inc
jecxz
pop
dec
adc
xchg
in
mov
sbb
or
jb
adc
ins
cmp
pop
add
push
sbb
aas
add
scas
mov
lds
js
sub
arpl
mov
sub
pop
xor
sub
or
or
ja
xor
or
sar
dec
add
push
lds
or
iret
out
inc
das
inc
pop
add
popa
pop
push
push
je
and
popa
pop
cmp
push
adc
es
push
out
add
dec
cmp
adc
movs
je
imul
stos
ss
sub
ins
cmp
dec
popw
push
push
pop
dec
add
mov
ror
cmp
mov
pop
and
(bad)
loopne
add
add
shr
outs
fistp
inc
push
push
test
shr
and
inc
and
dec
or
and
repz
push
cmp
sbb
mov
mov
adc
xchg
mov
xchg
dec
mul
sub
mov
push
jb
ins
mov
add
(bad)
gs
or
adc
dec
lock
sub
ret
inc
or
ja
push
jnp
mov
pop
pop
je
pop
arpl
in
inc
fadd
inc
or
add
jmp
inc
sbb
push
test
add
dec
add
add
or
ins
lock
rol
je
xchg
clc
scas
sbb
adc
adc
add
dec
scas
test
popa
mov
push
add
inc
inc
dec
mov
dec
dec
int3
xor
dec
cli
shl
outs
stc
inc
ret
adc
ucomiss
aam
adc
movs
or
pusha
or
push
sbb
fwait
jns
shl
or
into
cvtpi2ps
xlat
add
mov
stos
jne
mov
pop
add
push
out
jnp
mov
mov
not
imul
out
mov
inc
inc
mov
mov
es
mov
sub
nop
add
cmps
int
retf
add
nop
stos
jne
cwde
into
cmps
push
push
sub
cmps
pop
sub
mov
sub
sub
mov
mov
ret
inc
aad
push
pop
pop
cmps
xor
jmp
and
mov
add
push
test
sub
push
das
imul
mov
in
rcl
push
add
lods
das
shr
iret
pushf
fadd
push
mov
pop
xchg
inc
xchg
outs
cld
bnd
movs
cwde
gs
iret
pop
xchg
sub
cmp
shr
and
icebp
mov
or
cmp
in
mov
ds
es
mov
aas
in
add
xor
push
ins
mov
or
jge
and
ins
ror
push
ds
xchg
mov
in
les
test
les
rcr
push
push
sbb
aas
rcr
popa
sbb
push
fmul
dec
jo
aas
call
xor
sub
aas
cli
pushf
int3
neg
test
and
mulps
ds
fsub
clc
lods
cmp
ins
shld
pushf
loopne
or
dec
dec
clc
inc
push
push
xchg
xchg
daa
daa
aam
andnps
enter
(bad)
and
imul
leave
leave
mov
cld
and
repnz
fs
jle
add
jb
jb
cmp
mov
push
adc
jl
fstp
and
sahf
sub
ds
test
push
neg
dec
cmp
pop
sub
adc
inc
lods
push
in
clc
jno
xchg
pusha
adc
sub
mov
inc
mov
sbb
idiv
sub
or
jl
and
inc
lods
idiv
or
shl
push
xchg
mov
ins
push
jns
ficom
or
sub
ja
sub
add
test
pop
mov
jge
rcl
enter
enter
jmp
or
cld
leave
or
push
les
push
div
jne
adc
call
xor
mov
pop
sub
jmp
not
(bad)
fst
sbb
push
add
push
mov
es
add
mov
neg
rol
div
adc
jle
div
add
push
mov
clc
push
jae
sub
into
retf
pop
add
outs
sbb
mov
adc
rcl
retf
and
nop
dec
and
mov
mov
mov
xchg
mov
inc
nop
xor
dec
outs
dec
stc
push
les
cwde
inc
inc
sub
lahf
dec
sbb
mov
lahf
inc
lods
sbb
pop
aas
mov
cmp
inc
shl
inc
rol
jb
adc
test
inc
and
dec
lahf
jge
(bad)
push
push
out
sub
pop
add
jb
cmp
lahf
lds
dec
rcl
sbb
xor
lds
xor
retf
sbb
dec
inc
sub
fst
lahf
shl
imul
imul
fmul
add
pop
out
mov
imul
or
adc
sbb
xor
ja
pop
ds
ror
or
and
aas
lds
xchg
int3
push
aas
mov
inc
pop
arpl
fsubr
push
stc
aas
je
add
jmp
push
xchg
push
pusha
jae
test
fcomp
xor
xchg
cld
test
jae
fcmovb
add
inc
dec
adc
pop
adc
int
mov
pusha
xor
push
inc
lods
sbb
sub
cmc
outs
cmp
dec
xor
mov
bound
adc
adc
ss
and
inc
pop
pop
scas
jo
ja
aam
icebp
rcl
arpl
sub
or
add
xor
mov
inc
mov
sbb
add
mov
das
push
sbb
push
mov
iret
prefetcht0
or
cmc
pop
out
push
loope
mov
xor
mov
outs
xor
aad
xchg
fcomp
int
int
retf
add
nop
mov
xor
retf
xor
das
daa
pop
dec
jo
and
xlat
push
add
dec
ja
pop
inc
mov
mov
(bad)
out
push
(bad)
push
add
loope
cmc
add
lods
lahf
mov
push
ss
fnsave
jl
jge
nop
push
sub
push
nop
add
pop
push
imul
js
inc
and
ficom
push
pop
adc
xor
sbb
gs
inc
add
push
dec
ins
add
add
pop
hlt
add
xlat
mov
ror
pop
fsubr
adc
jge
outs
mov
push
inc
push
das
fwait
pop
push
jo
add
jo
fnstenv
push
shl
push
push
push
push
cs
(bad)
jo
and
add
or
add
add
test
(bad)
xchg
jnp
or
and
jo
cmove
add
fsub
daa
mov
push
mov
(bad)
retf
xchg
xchg
xchg
daa
pop
and
leave
leave
enter
and
in
in
mov
jb
repnz
and
ins
mov
sbb
in
cmp
cmp
cmp
sahf
pushf
pushf
pushf
jns
aam
sub
xor
bt
fstp
add
inc
push
pop
add
jmp
add
push
sub
aad
aad
push
push
cmp
aam
mov
add
jno
pop
aad
and
push
mov
jno
cwde
aad
add
scas
aad
dec
mov
xor
inc
in
mov
aad
jg
add
jle
add
add
inc
(bad)
scas
dec
xchg
fwait
aaa
cmp
pusha
fcom
push
push
loopne
ins
push
sbb
add
aad
outs
test
inc
cli
aad
sub
mov
ja
sub
outs
sub
mov
nop
sub
jae
nop
pop
add
aad
fld
inc
mov
add
aad
fidivr
sbb
das
leave
rol
(bad)
add
add
in
aad
call
adc
aad
mov
add
test
add
adc
push
aad
add
cwde
and
les
add
or
or
aad
add
xor
adc
gs
mov
push
add
sbb
jl
jmp
xor
sub
mov
dec
(bad)
scas
or
push
add
sar
add
add
add
pusha
and
inc
xor
mov
mov
dec
jg
stos
gs
das
add
pushf
pusha
and
dec
pop
push
lds
or
jle
pop
push
sub
xor
push
adc
add
sub
sub
imul
and
rol
ret
jecxz
cmp
or
scas
lds
sbb
add
sub
cmp
sub
inc
pop
pusha
add
push
push
and
jns
bound
and
add
sub
add
add
sub
add
mov
jo
inc
sub
xor
stos
mov
rol
in
sbb
scas
inc
out
in
inc
(bad)
add
push
inc
add
push
or
and
mov
xor
sub
pusha
adc
nop
arpl
pusha
pop
js
test
xor
test
and
out
test
mov
xor
sbb
adc
aas
add
mov
xchg
js
loope
or
add
sub
sub
mov
div
cmp
test
add
xor
(bad)
xchg
psubb
into
adc
cmc
xlat
sub
(bad)
jge
add
pop
imul
xchg
fcom
int
pop
mov
and
(bad)
js
mov
add
inc
shl
adc
aam
dec
gs
fmul
movntps
jp
call
stos
and
mov
faddp
hlt
add
dec
fcomp
or
xor
xor
mov
enter
sbb
pop
push
scas
call
mov
mov
sbb
push
jnp
xor
outs
fs
xor
lock
fsub
mov
int
test
outs
ins
dec
inc
rol
add
pop
daa
lods
push
pop
jbe
mov
fldenv
inc
xor
or
rcr
lods
mov
loopne
dec
scas
jmp
int
push
cld
daa
adc
jg
out
data16
call
push
cmp
daa
dec
sub
xchg
sbb
mov
add
lods
mov
imul
mov
sub
sub
aad
repnz
arpl
xor
pop
imul
push
jb
jecxz
es
jg
jns
jb
idiv
xor
cmp
and
inc
jp
sahf
pushf
pushf
scas
sti
xor
jnp
dec
dec
dec
mov
inc
cmp
mov
cld
and
pop
(bad)
fmul
leave
leave
enter
popa
cwde
mov
ins
fsub
aas
cmp
es
iret
mov
push
push
cld
(bad)
pop
adc
and
test
sbb
xchg
xor
add
push
pop
or
fild
jmp
shr
push
fbstp
bound
mov
sbb
mov
add
(bad)
or
(bad)
adc
rol
loopne
sub
cmp
imul
sub
push
push
imul
dec
outs
or
enter
pusha
push
pop
ja
adc
cmps
(bad)
fbld
dec
aam
sub
gs
push
les
out
cmp
pop
jno
and
mov
fs
inc
xchg
test
fisttp
mov
mov
fwait
gs
inc
mov
cmp
fistp
mov
mov
or
in
sub
pop
fistp
dec
je
iret
dec
dec
push
fbstp
or
mov
mov
cmp
pop
pop
rol
mov
adc
ss
aad
mov
fbld
push
mov
xor
mov
add
xor
dec
lds
jne
mov
mov
xchg
and
pop
push
xor
(bad)
mov
imul
cwde
cmp
xchg
es
push
lds
repz
inc
sbb
sbb
mov
xchg
sbb
in
mov
cmp
test
dec
adc
mov
adc
xchg
mov
sbb
hlt
xchg
mov
inc
mov
xchg
or
les
bound
rol
xchg
dec
and
sbb
xchg
mov
or
dec
xor
je
xchg
sbb
ja
sub
xchg
movs
xchg
mov
fdiv
loopne
xchg
inc
add
adc
in
jno
(bad)
movs
jecxz
jns
add
pop
xor
fnstsw
or
mov
cs
stos
shr
or
sub
das
mov
rcr
push
das
outs
pop
imul
idiv
pusha
mov
(bad)
push
sub
and
sub
push
pop
adc
test
int3
add
push
mov
add
inc
and
xchg
movs
hlt
mov
adc
cmp
sar
int3
mov
lods
outs
rcr
xor
mov
(bad)
push
call
daa
js
xadd
add
mul
aad
hlt
xor
or
pop
mov
stos
jle
fisttp
and
lods
es
pushf
call
and
data16
pushf
gs
pop
mov
enter
sub
or
or
or
fidiv
addr16
rcpps
pusha
or
or
clc
inc
add
inc
and
inc
mov
jge
aas
cmp
sbb
imul
(bad)
scas
ins
xor
cmp
xor
jno
jnp
(bad)
in
mov
outs
pop
and
dec
add
mov
push
int3
sbb
(bad)
jg
test
push
push
adc
psubb
into
push
xchg
sub
imul
pop
add
pusha
loop
jae
mov
mov
adc
adc
mov
pop
mov
and
xchg
gs
sub
xchg
retf
sbb
mov
push
push
xor
mov
rol
xor
loopne
jecxz
shl
lods
and
xor
and
mov
cmps
outs
cmp
mov
out
fiadd
pushf
add
cmps
adc
fiadd
cmps
adc
jns
xchg
push
mov
test
add
cmp
mov
push
add
adc
jmp
push
push
jl
and
inc
add
mov
or
pop
add
inc
jns
adc
inc
loop
jmp
pop
jne
mov
mov
add
pop
adc
push
jge
loopne
test
jge
adc
mov
and
push
pop
or
add
movs
inc
push
cmp
imul
push
arpl
fs
jb
sbb
es
iret
and
popf
out
sub
xor
ret
cs
test
pop
int3
fucomi
mov
push
push
push
add
inc
pop
shl
fcom
iret
daa
sahf
dec
cmp
mov
cmp
imul
ror
ins
dec
mov
test
(bad)
shl
cmp
mov
(bad)
cmp
dec
les
shl
xor
dec
xlat
pop
or
jae
mov
mov
add
shr
push
xchg
or
push
add
pop
sub
add
push
mov
str
pop
adc
push
loope
pop
inc
enter
jo
pop
(bad)
jnp
adc
push
test
push
or
lods
stos
or
inc
push
inc
stos
ret
retf
shl
test
pop
adc
adc
outs
mov
out
inc
outs
ret
movs
outs
mov
call
out
push
arpl
ins
push
outs
pop
push
loope
js
xchg
int3
mov
jmp
fdiv
add
daa
sbb
add
mov
sub
cwde
xchg
loopne
and
add
pop
popf
mov
out
push
clc
scas
in
pop
adc
or
movs
aaa
add
cs
loopne
mov
aaa
or
les
inc
or
(bad)
addr16
inc
or
push
outs
xor
jb
cmp
push
dec
pop
push
gs
out
cli
fadd
jo
pop
sbb
jle
push
mov
push
add
pop
dec
scas
call
pop
push
mov
pushf
pmulhuw
es
pop
dec
push
mov
rol
sbb
mov
sub
mov
test
(bad)
mov
test
test
sub
jo
loope
test
(bad)
mov
das
pop
clc
adc
enter
ret
lods
test
pop
cs
add
sub
jno
add
pop
add
push
inc
das
mov
and
or
lahf
cli
ret
scas
retf
jo
or
jmp
lahf
lds
sub
push
mov
sbb
out
lds
jo
mov
pop
aam
(bad)
add
(bad)
cs
inc
jmp
lds
inc
icebp
inc
and
add
push
pop
rol
inc
mov
sbb
pop
jmp
jle
push
stc
frstor
ja
push
lods
dec
pop
inc
inc
fs
mov
add
daa
test
push
and
scas
push
pop
cwde
ds
sbb
popa
(bad)
pop
pop
jns
sub
and
pop
mov
adc
push
adc
mov
adc
add
xor
scas
xor
stos
(bad)
inc
mov
adc
jmp
cmps
scas
push
adc
push
cmps
shl
push
or
adc
test
sub
sbb
push
xor
add
push
pop
mov
mov
push
pop
idiv
je
mov
scas
pshufw
xor
inc
add
xor
push
imul
lods
adc
pop
hlt
bound
js
or
and
pop
adc
mov
pop
dec
add
fcmovnb
or
js
adc
mov
or
pop
in
loopne
inc
sub
ins
pop
mov
cs
pop
js
xchg
cs
jo
into
mov
or
or
pop
jo
(bad)
mov
test
mov
test
mov
adc
add
or
jne
mov
pop
xchg
stos
or
jo
and
nop
imul
xchg
pop
fld
lock
push
add
mov
mov
pushf
out
dec
loope
jmp
cmc
fldenv
add
ja
into
mov
push
add
push
daa
mov
stos
push
test
add
xor
push
or
sbb
pop
test
in
pop
loope
or
dec
jo
(bad)
daa
xlat
and
push
jmp
je
dec
adc
je
ja
test
push
cdq
jns
or
inc
inc
movs
cs
sbb
jl
pop
push
mov
add
loope
fwait
pop
xor
add
pop
fstp
test
or
es
cmp
loope
inc
popf
xor
in
std
leave
test
leave
xchg
lock
sub
or
leave
mov
xor
loope
xchg
xor
leave
push
shl
xchg
out
rol
pop
jae
mov
sub
shl
test
ret
fild
adc
test
(bad)
add
popa
pop
sub
inc
test
fs
addr16
out
sbb
mov
push
xchg
out
xlat
lock
jo
test
into
mov
lock
mov
pop
adc
adc
jo
enter
xor
test
push
xchg
int
sub
inc
stos
add
retf
and
push
xchg
cmp
pop
add
inc
test
(bad)
bound
push
mov
sub
or
jmp
and
inc
out
mov
sbb
int
mov
fist
and
out
(bad)
push
add
push
daa
push
adc
push
out
test
cmp
gs
jno
mov
pop
test
add
movs
add
mov
ds
ret
adc
call
lods
mov
jmp
pop
dec
rcl
jno
push
dec
xchg
inc
popa
xor
out
push
push
je
scas
je
ja
frstor
push
icebp
sar
cld
cs
nop
addr16
out
push
inc
mov
push
add
addr16
mov
loope
daa
stos
push
scas
neg
sub
ret
dec
cdq
cs
xor
xor
dec
aaa
mov
sub
mov
jmp
addr16
loopne
pop
push
xchg
int
call
mov
loope
rcl
pop
fcomp
int
and
cmp
iret
inc
xor
ret
in
ins
xchg
mov
(bad)
push
pop
pop
jbe
(bad)
imul
add
push
mov
das
pop
imul
test
mov
jmp
or
sub
test
adc
rcl
or
or
and
stos
or
push
nop
retf
mov
(bad)
jmp
dec
imul
push
cvtps2pd
or
inc
repnz
mov
(bad)
loopne
scas
loopne
imul
lea
adc
aaa
cwde
cs
fadd
into
add
(bad)
add
daa
cmp
add
ret
test
adc
pop
xor
call
les
xchg
lds
mov
ds
xor
cs
iret
xlat
add
movs
push
xchg
mov
ret
rcl
and
adc
movnti
dec
fild
std
add
outs
cmps
sub
xchg
fmul
out
loopne
popf
push
cmps
push
mov
and
jmp
ret
scas
sub
dec
outs
push
int3
add
pop
ja
jo
dec
add
jg
and
mov
inc
test
sub
cmps
mov
xor
mov
aaa
ins
aaa
fcom
ret
aaa
and
and
aaa
addr16
outs
adc
loope
dec
aaa
push
inc
or
adc
push
pop
aaa
add
mov
push
mov
pop
inc
cmp
aaa
sbb
add
xchg
pop
in
inc
jo
bound
out
adc
ins
xchg
mov
add
adc
ss
jge
pop
pushf
div
nop
js
movs
lahf
imul
ror
in
dec
into
sbb
leave
mov
outs
and
addr16
and
cmps
jg
add
loop
int
push
jne
add
pop
sbb
cmps
retf
push
sub
movs
cmps
mov
(bad)
sub
jg
ror
pop
or
mov
push
add
jo
pop
repnz
out
pop
test
pop
cdq
jge
cs
add
cs
in
adc
ja
push
xor
add
jne
mov
daa
dec
push
add
dec
leave
cmp
push
or
jge
ret
adc
xchg
mov
xchg
mov
jne
shr
div
div
and
push
xchg
out
or
repz
adc
push
push
loope
mov
xor
mov
(bad)
lods
in
push
jo
add
ins
jbe
js
lock
push
ja
fsubr
ss
psubusw
xchg
pop
loope
push
xchg
xchg
sub
xchg
add
test
sar
adc
pop
push
enter
and
push
xchg
xchg
xchg
sub
iret
pop
adc
push
loope
xchg
pop
pop
add
rcr
push
inc
out
jns
add
pop
loope
mov
pop
adc
cs
out
nop
out
and
loopne
push
lods
js
mov
out
cmovne
imul
out
or
or
inc
adc
es
ss
aaa
sar
push
aaa
mov
push
mov
aaa
pop
mov
and
aaa
mov
aaa
retf
sub
mov
mov
and
or
inc
pop
xchg
add
xlat
hlt
shl
cmp
lock
jl
push
out
ret
pop
adc
xlat
dec
int3
push
mov
and
add
jge
mov
jmp
mov
pop
pop
xor
ret
inc
cmp
int
ja
lock
mov
adc
icebp
mov
or
aad
inc
js
lgdtd
(bad)
inc
dec
mov
cmp
test
cmp
xchg
bsf
inc
mov
xor
push
cmp
les
movs
movs
aam
in
mov
push
pop
push
add
adc
daa
fcom
iret
and
mov
jge
inc
movs
sub
jne
popa
mov
push
fadd
xchg
or
or
(bad)
jno
xchg
adc
xchg
test
xchg
fs
jo
xchg
push
mov
or
ror
push
sbb
mov
adc
inc
aas
movs
sbb
add
pop
mov
into
or
ror
lds
xchg
test
mov
add
aas
push
hlt
in
add
xor
leave
sub
dec
addr16
or
xor
aam
xchg
rol
stos
cs
inc
jmp
test
mov
shl
push
or
add
ret
sub
mov
mul
adc
sbb
add
movs
sahf
aas
cmp
(bad)
push
push
push
add
test
call
push
aam
jnp
out
push
fdiv
popa
dec
cmp
mov
test
test
mov
xlat
sub
ficom
pop
cmc
mov
push
dec
(bad)
lea
test
pop
popa
or
dec
push
inc
std
inc
adc
push
pop
inc
or
in
jb
sub
mov
or
(bad)
icebp
les
push
add
mov
add
(bad)
jo
int3
ins
jbe
mov
add
mov
mov
fdivr
sub
mov
dec
and
aam
mov
aad
aad
mov
pop
(bad)
aad
push
loope
mov
or
or
aad
stos
mov
aam
pop
push
shr
xor
iret
inc
xor
leave
adc
lods
mov
add
mov
das
(bad)
push
push
adc
ror
loope
ret
setne
cs
sbb
sub
or
or
cmp
mov
inc
mov
and
pop
pop
loopne
push
and
push
mov
and
push
and
sub
loope
mov
jo
push
minps
and
and
push
out
fdiv
push
jo
mov
fadd
cs
mov
inc
lea
enter
push
daa
aam
jmp
pop
push
add
out
popa
dec
push
adc
pop
popa
push
add
push
rol
pop
lds
call
mov
push
nop
mov
loope
mov
test
mov
test
test
cli
psubq
pop
(bad)
mov
inc
bound
or
rol
fnstsw
add
cs
lods
int3
int
mov
push
clc
add
jno
add
xchg
(bad)
mov
scas
sub
push
sub
daa
xor
sbb
addr16
jo
adc
addr16
lods
adc
bound
test
or
dec
and
sbb
and
mov
test
or
xchg
fidivr
sbb
pop
adc
or
pushf
sbb
xchg
xchg
fcom
pop
dec
das
pushw
mov
int
xchg
nop
push
mov
lahf
call
fisub
push
jl
push
xor
push
xor
icebp
shl
pop
adc
xlat
aam
inc
pop
enter
xlat
mov
add
or
or
and
xlat
jae
pop
dec
adc
or
in
jo
(bad)
push
sbb
pop
mov
cmp
out
push
cs
sub
mov
into
repz
shl
(bad)
cs
cmp
push
jmp
fmul
add
push
daa
add
xchg
inc
in
xchg
mov
sbb
push
xor
dec
lds
inc
adc
or
cmovs
inc
xchg
cmps
inc
mov
cwde
push
push
push
jb
mov
scas
mov
fild
scas
popa
jnp
jbe
or
push
cmp
test
and
enter
rcr
lea
mov
inc
or
and
out
push
arpl
mov
mov
sbb
fs
pop
sahf
add
and
cmp
pop
test
jno
or
fdivr
xor
inc
cmc
adc
sbb
adc
pushf
scas
gs
mov
mov
pop
cmp
popa
call
mov
push
test
pop
(bad)
sbb
lock
loopne
push
add
inc
enter
xor
push
or
ins
and
in
or
mov
ficom
adc
push
push
sub
test
inc
ins
popa
jae
cmps
push
push
je
ins
dec
jo
push
fdiv
call
push
loope
(bad)
dec
pop
loop
movs
or
adc
dec
push
add
dec
sbb
mov
pop
out
jo
push
lds
add
in
test
push
not
inc
xor
stos
outs
les
or
psrlw
push
pop
sbb
daa
lock
or
or
fwait
call
pop
add
sahf
push
sbb
xor
in
jle
(bad)
jmp
packuswb
dec
adc
mov
sbb
mov
push
sub
mov
fsub
addr16
loope
push
cmp
outs
push
push
lods
test
div
adc
adc
inc
outs
aad
sbb
push
inc
xor
(bad)
popf
int
jmp
pop
add
cwde
or
mov
movs
out
cmp
aam
push
in
das
or
sahf
jecxz
wrmsr
out
movnti
mov
inc
addr16
cwde
dec
mov
push
in
inc
and
pop
pusha
in
in
xor
adc
stos
retf
in
or
fild
xchg
add
push
movaps
lea
inc
mov
jne
dec
and
ja
adc
xchg
push
lea
cwde
fiadd
aam
and
push
test
jne
in
add
inc
rol
add
aam
xor
stc
and
add
loope
sub
xchg
lds
(bad)
and
rol
xor
inc
shl
lods
lods
xchg
mov
mov
and
mov
lods
cmps
cmp
mov
mov
test
sub
cmps
je
ja
movs
es
push
mov
rcl
cmps
cmp
int
mov
push
aam
add
pop
push
sub
jno
add
cmps
loop
xchg
movhps
cmps
sub
jne
and
push
xor
test
test
jno
sub
and
bound
(bad)
pop
xor
and
and
pop
pop
cmp
pop
fs
loope
mov
call
push
add
pop
mov
or
pop
sub
pop
sbb
call
and
inc
push
mov
xorps
bound
and
lahf
jne
push
push
loop
(bad)
psubsb
pop
xor
shl
mov
jae
inc
xchg
mov
and
iret
pop
loopne
or
and
iret
jno
stos
and
retf
bound
call
adc
mov
add
push
push
test
cmp
add
xchg
and
loopne
aas
add
mov
cs
or
aam
ja
push
inc
test
fnsave
mov
add
dec
leave
cmp
jns
sbb
mov
repz
scas
or
mov
mov
push
push
mov
sub
add
test
fldcw
aam
or
and
test
push
pop
stos
outs
arpl
ins
dec
push
loope
mov
cs
fldenv
mov
push
add
push
mov
add
pop
inc
adc
add
push
addr16
in
or
jle
cmps
pmaxsw
xor
adc
test
adc
lea
sbb
mov
addr16
inc
test
mov
xor
cmp
xchg
add
clc
xchg
sbb
push
lods
mov
scas
inc
add
(bad)
pop
inc
cmc
mov
pop
test
scas
pop
and
ds
not
pop
(bad)
enter
jp
clc
das
xchg
mov
sti
loope
scas
loope
xor
not
bound
adc
jo
cmp
cmp
cmp
sub
cmp
and
pop
and
shl
inc
cmp
or
aaa
shl
mov
add
jg
and
ret
rol
add
jle
sar
icebp
push
aas
mov
ss
sub
fs
push
add
daa
mov
push
pop
mov
rol
adc
adc
inc
dec
add
adc
lds
or
das
or
mov
outs
or
pand
or
mov
cmps
sub
adc
(bad)
into
repz
mov
sub
xor
cwde
dec
inc
cs
sbb
out
or
push
add
adc
outs
mov
pop
shl
out
push
(bad)
fmul
jno
sbb
push
xchg
push
loop
sub
inc
adc
xchg
adc
or
outs
inc
sub
jno
or
bound
mov
fldenv
lods
mov
inc
jo
bound
pop
inc
loopne
xchg
lock
nop
stos
or
icebp
inc
inc
sbb
sub
cmp
sbb
or
xchg
mov
rcr
mov
mov
push
mov
loopne
mov
pop
mov
push
mov
push
cld
lahf
lock
mov
mov
paddd
fld
push
es
jno
nop
popa
adc
mov
mov
push
mov
pusha
int
and
mov
nop
sub
mov
sbb
mov
add
sub
add
or
sbb
sahf
push
lock
and
xlat
sub
daa
nop
in
mov
pop
xchg
mov
adc
daa
mov
(bad)
push
daa
or
jb
cmp
popa
ins
add
cmp
adc
xchg
test
(bad)
adc
(bad)
in
dec
dec
or
add
mov
xchg
mov
cmp
movs
add
lahf
or
out
stos
push
push
lahf
cwde
push
pushw
add
cmp
xchg
lods
xchg
add
loope
inc
ret
inc
pop
mov
rcl
mov
gs
fs
inc
adc
pop
out
push
inc
dec
pusha
ret
scas
push
enter
popa
ins
jae
popa
test
xor
inc
pop
inc
jno
push
test
and
inc
sbb
mov
pop
pop
popa
and
aas
leave
aas
lock
lds
push
inc
mov
dec
push
data16
jl
push
je
in
pushf
or
test
or
push
push
inc
cmc
cwde
or
or
push
(bad)
xchg
push
jle
push
jg
sub
inc
cmp
or
test
cmovb
rcl
les
sbb
pop
lds
test
inc
cmps
sti
es
or
push
mov
fstp
push
cmp
push
push
cmps
movs
dec
enter
rcr
dec
out
mov
movs
fidiv
fisttp
cmps
push
sbb
inc
inc
fsubr
add
in
je
outs
xor
cmp
test
cmp
push
cmp
and
xor
or
pop
inc
int
mov
popa
lods
int
adc
enter
push
int
int
push
inc
lock
rol
dec
cmc
inc
shl
mov
ret
push
ss
dec
push
jb
fs
push
push
je
adc
and
pop
fadd
jge
div
cwde
div
inc
jmp
test
mov
mov
scas
std
scas
and
push
gs
lock
add
cmp
sub
jb
sbb
and
imul
mov
mov
enter
push
jmp
fcomp
sbb
pop
enter
and
out
mov
jg
sub
dec
addr16
std
lods
push
cdq
sbb
sbb
jbe
mov
xchg
(bad)
into
xchg
adc
sub
sub
adc
add
and
cmps
loop
adc
xchg
les
sti
push
mov
push
stos
push
(bad)
das
fmul
mov
cmp
mov
pushaw
sbb
dec
and
xor
mov
push
mov
push
adc
xor
jnp
push
mov
jo
je
gs
aam
dec
mov
mov
jne
inc
lds
inc
aad
mov
xchg
sub
jno
call
rol
rol
mov
mov
addr16
add
(bad)
not
push
ret
enter
push
div
outs
and
in
push
sub
test
test
sub
inc
mov
shl
ret
mov
adc
scas
jno
(bad)
mov
push
mov
sbb
and
inc
scas
jg
push
ins
adc
addr16
xchg
pop
inc
enter
leave
push
pop
and
in
push
jbe
mov
addr16
jbe
sbb
adc
and
mov
addr16
sub
or
std
aad
inc
mov
dec
push
addr16
fcom
aam
mov
hlt
inc
sbb
add
sub
mov
adc
push
mov
sub
pop
mov
add
dec
(bad)
mov
retf
push
pop
push
jp
nop
push
pop
add
fs
lods
and
and
cwde
jecxz
fadd
fiadd
dec
pop
xor
dec
pop
xor
sub
push
(bad)
mov
or
mov
test
push
mov
bndstx
xchg
jno
in
sbb
int3
or
mov
int
push
ss
dec
push
and
inc
mov
inc
xchg
and
or
pop
xchg
loop
je
neg
test
ja
add
dec
xchg
and
inc
mov
(bad)
sub
inc
push
jb
jmp
sbb
rcr
mov
stos
aam
add
aaa
sbb
iret
dec
test
jno
cmp
push
push
pop
sbb
push
jb
dec
pop
and
(bad)
(bad)
mov
test
pop
push
or
pop
xor
adc
mov
dec
sbb
mov
sub
lds
ins
mov
jno
push
mov
mov
xor
ja
popw
inc
les
rol
mov
fstp
push
imul
or
ja
fwait
enter
jo
cmp
and
fidiv
pushf
push
ja
add
lds
or
dec
outs
popa
cmp
mov
loopne
dec
dec
int
shr
add
adc
inc
xchg
sbb
mov
adc
dec
lds
rcl
les
mov
mov
das
or
idiv
mov
or
xor
mov
cmp
adc
loop
div
xor
test
es
sub
dec
mov
or
test
daa
xchg
jno
fwait
jmp
push
add
imul
movs
xlat
mov
js
xchg
aam
mov
test
cmps
das
mov
push
jb
dec
and
shr
addr16
addr16
add
addr16
std
cmp
or
cmp
nop
out
inc
test
cmp
setbe
or
lods
jno
clc
push
rol
push
inc
shl
mov
sub
repnz
div
(bad)
push
xchg
mov
das
mov
inc
popa
pusha
idiv
lods
mov
test
not
shr
mov
clc
scas
push
test
pop
stos
xor
jno
push
jbe
inc
lahf
fild
scas
jg
imul
mov
push
mov
xlat
add
push
adc
mul
bound
mov
push
cwde
push
jno
shl
xlat
sub
xor
push
inc
addr16
addr16
pop
iret
repz
js
fs
and
add
dec
and
mov
inc
inc
push
cmp
neg
xchg
repnz
rsqrtps
push
sbb
inc
push
movs
adc
or
ins
ins
bound
inc
imul
(bad)
pop
inc
js
arpl
cmp
pop
call
sub
movs
cmp
ret
data16
pop
imul
or
addr16
xor
and
push
inc
fs
mov
popa
cvtps2pd
add
jmp
test
and
dec
pop
or
sbb
pop
xchg
and
mov
iret
dec
push
dec
dec
mov
fsubrp
and
lds
sub
xchg
push
cmp
out
sahf
add
mov
add
xchg
push
loopne
sbb
mov
or
pushf
shl
cwd
shl
inc
pop
dec
jb
jp
rcl
es
inc
sbb
xor
js
(bad)
mov
test
pop
cmove
add
les
cmp
das
loopne
jge
pop
push
mov
int3
push
out
jo
test
cmp
sub
push
push
cmp
in
adc
shl
xor
or
xchg
cmp
adc
sub
and
dec
cmc
push
sub
addr16
push
mov
ret
sbb
dec
fs
imul
push
xor
movd
pop
mov
add
adc
xchg
adc
outs
jns
sahf
cmp
xchg
add
rcr
dec
or
lds
push
addr16
and
pop
push
stos
ins
mov
xchg
lds
add
jl
fldcw
inc
and
and
jge
jecxz
xchg
nop
ret
push
pop
inc
mov
mov
mov
dec
pop
add
nop
add
mov
pop
(bad)
mov
cs
push
push
je
mov
mov
lea
mov
mov
mov
mov
xor
mov
push
mov
and
mov
adc
pop
(bad)
je
sti
jae
pop
pop
cmp
ret
paddusw
jmp
es
mov
mov
mov
test
je
mov
das
sbb
pushf
ins
push
or
and
adc
fcmovnbe
into
test
push
push
shl
mov
call
jnp
imul
ror
je
shr
xchg
sbb
daa
int3
pusha
clc
or
mov
push
push
add
out
cmps
lea
das
add
outs
add
imul
jbe
mov
push
mov
(bad)
push
push
jmp
and
pop
pop
pop
push
adc
and
fs
outs
(bad)
fadd
ret
dec
rcr
xchg
pushf
xchg
add
add
sar
fnsave
xor
mov
add
idiv
mov
pushf
cmp
mov
inc
fdivrp
inc
push
ffreep
pushf
pushf
pushf
pushf
rol
les
(bad)
enter
pushf
leave
retf
pushf
pushf
pushf
pushf
int
iret
mov
out
pushf
mov
btr
in
in
mov
mov
in
in
mov
push
orps
jne
pop
push
pop
sti
psadbw
dec
mov
pop
xor
mov
lea
mov
mov
mov
push
hlt
outs
clc
xor
sbb
fdiv
sbb
cdq
in
jne
mov
fwait
jecxz
retf
mov
adc
push
sub
mov
xchg
in
mov
mov
and
mov
xchg
push
es
loopne
fmul
movs
xor
rcr
mov
xchg
(bad)
fdivr
sar
(bad)
mov
xchg
push
loopne
mov
pushf
movs
in
mov
lds
test
and
aas
in
leave
sti
adc
inc
daa
adc
repnz
cmp
and
mov
enter
bound
push
les
sar
sub
push
cmp
mov
adc
das
mov
cmp
mov
push
inc
xor
lods
mov
test
js
dec
sti
mov
mov
cmps
jge
adc
adc
adc
mov
cwde
pop
adc
and
mov
int
jno
fild
or
cs
push
add
or
jmp
pop
pop
mov
sbb
push
sbb
add
cs
add
jb
daa
dec
adc
inc
mov
pop
dec
in
mov
stos
add
adc
jmp
pushf
mov
pop
pop
jo
and
dec
add
pop
test
push
fistp
and
xchg
push
or
add
call
out
out
mov
cwde
pop
mov
mov
add
ins
mov
sti
in
push
add
test
(bad)
fcomi
mov
push
pusha
ds
jle
xchg
or
fs
mov
imul
push
add
push
nop
add
mov
fcmovnb
mov
pop
push
xchg
lahf
push
popf
push
push
neg
mov
out
imul
loopne
push
outs
push
mov
es
mov
fidivr
xor
in
jle
fdivp
call
push
mov
push
stos
ins
pop
fcmovnu
push
nop
ret
jbe
push
js
push
mov
(bad)
in
cmp
push
hlt
leave
push
into
fs
outs
cmp
(bad)
mov
push
in
rcr
push
std
push
fsub
fld
outs
push
aam
cs
push
mov
int3
fist
test
push
dec
jbe
jnp
out
repz
jo
cmc
jle
jo
inc
int
mov
pushw
add
mov
sbb
push
popa
outs
gs
pop
dec
gs
aad
adc
dec
popa
bound
gs
nop
adc
jne
je
fild
dec
mov
pop
or
add
mov
inc
outs
je
outs
ins
les
or
sbb
es
enter
gs
lahf
aad
je
ins
addr16
push
jb
push
sti
fistp
and
adc
mov
gs
addr16
gs
fbstp
ss
outs
ja
ins
inc
imul
out
fsub
add
dec
inc
outs
pop
lods
pop
and
push
xor
cmc
push
ins
cmp
adc
imul
sbb
adc
imul
lods
adc
mov
jns
std
popa
ins
in
sub
lock
cmp
aaa
clc
add
cld
sub
sbb
or
test
ficomp
in
push
sbb
jle
dec
ins
(bad)
mov
sbb
clc
cwde
ror
cmp
pop
xor
data16
push
movs
pop
jae
popa
imul
push
arpl
adc
repnz
inc
jmp
sbb
pmaxub
rcr
push
xor
inc
icebp
fwait
jge
inc
xor
cs
add
(bad)
ja
pop
push
outs
imul
push
jmp
in
add
cmp
out
cmp
xchg
mov
test
xchg
add
adc
and
sbb
pop
and
push
sub
xor
das
cmp
rol
xor
stos
ins
inc
in
js
dec
jae
mov
push
test
pusha
sbb
enter
imul
sbb
(bad)
mov
adc
jg
xchg
shl
pop
mov
inc
xchg
(bad)
push
sbb
sub
push
aas
cmps
adc
ins
stos
mov
enter
mov
or
inc
fs
iret
retf
inc
movs
and
mov
or
jmp
mov
repz
std
call
or
es
rcl
push
mov
ins
push
push
or
pop
and
and
ins
mov
pop
cmp
cmp
je
sub
fiadd
push
enter
outs
mov
enter
fidiv
fs
mov
sbb
mov
jo
xchg
pushf
adc
adc
push
or
outs
pop
mov
shl
repnz
adc
cli
add
mov
dec
and
dec
mov
adc
push
add
daa
daa
lahf
in
inc
sar
xchg
gs
jo
mov
out
fwait
in
bound
rol
push
stos
inc
loopne
mov
es
loop
mov
sub
sub
dec
in
mov
dec
outs
push
sbb
or
inc
mov
sbb
jg
fadd
pusha
sub
add
jno
mov
adc
fld
ret
push
jno
add
inc
jp
inc
dec
lahf
je
inc
mov
ins
inc
repz
test
idiv
outs
nop
mov
push
push
add
push
jns
inc
mov
jmp
mov
je
dec
scas
loope
push
mov
dec
je
pop
stos
sti
outs
add
jmp
call
ret
or
out
add
mov
mov
enter
mov
lea
fsubrp
push
jne
xor
add
(bad)
jg
mov
push
push
add
add
add
add
add
adc
add
fidivr
add
xor
ds
add
add
aas
idiv
iret
outs
inc
je
(bad)
xor
dec
repz
cmp
xchg
in
stos
jbe
and
mov
call
fistp
jmp
xor
mov
lea
mov
rcl
scas
mov
cwde
inc
mov
pusha
test
ds
aam
push
aas
push
lock
test
push
mov
sbb
or
fadd
mov
mov
sbb
dec
movs
and
push
sub
inc
cwde
push
push
pop
daa
dec
aas
(bad)
pop
call
and
adc
je
pusha
cdq
in
sub
ss
sub
jne
lea
push
add
das
lods
xchg
sbb
cmp
std
jae
retf
in
push
pop
cld
mov
clc
pop
or
fmul
cld
fstp
inc
das
es
in
mov
aam
aam
add
add
cmp
xchg
lods
dec
rol
pop
in
in
test
jb
push
stos
cdq
pusha
sti
enter
dec
out
bnd
xchg
xchg
sahf
les
add
fsubr
mov
in
pop
xchg
pop
test
nop
cld
inc
das
(bad)
mov
call
cmp
add
jmp
mov
pop
mov
out
push
mov
popa
mov
push
adc
arpl
push
movs
pusha
cdq
sar
in
pop
test
push
(bad)
enter
in
rcr
fmul
mul
loopne
mov
inc
xchg
stos
out
xor
cmp
xor
lock
ins
ss
jmp
push
outs
mov
dec
out
push
loopne
inc
add
dec
into
inc
push
push
push
dec
mov
fadd
dec
dec
dec
pop
ret
cmps
mov
pop
(bad)
aaa
in
rcr
or
sbb
add
rol
sub
data16
pop
mov
jo
nop
add
inc
or
or
pushf
mov
jae
mov
jp
enter
push
pop
mov
ficom
pop
push
sbb
inc
mov
aaa
adc
push
iret
pop
aaa
xchg
retf
push
out
jmp
sahf
imul
pusha
test
dec
add
xor
add
xchg
pop
push
dec
add
dec
push
adc
add
jb
xchg
or
pop
mov
mov
jecxz
fsub
pop
jg
add
cmp
sbb
or
ret
sbb
sbb
(bad)
mov
mov
adc
aas
lods
add
xchg
add
mov
mov
loopne
fsubrp
je
iret
adc
inc
xor
push
adc
cmp
add
outs
dec
outs
sub
sbb
xor
(bad)
cmp
cs
dec
dec
cs
add
or
sbb
jo
out
or
push
out
sbb
out
cmp
add
pop
or
add
xchg
loop
sub
or
aas
xor
iret
bound
xor
adc
in
aaa
or
push
sub
sbb
cdq
popf
push
adc
ret
inc
pushf
jmp
mov
out
mov
sbb
jo
push
and
shl
les
test
mov
mov
mov
or
inc
or
adc
mov
je
shr
mov
or
dec
nop
mov
loopne
loopne
push
clc
sahf
jge
mov
cmps
cmp
test
mov
ins
imul
fild
xor
pop
loopne
fld1
(bad)
or
in
fsub
adc
fwait
cmp
cmps
add
fisub
in
adc
push
pop
(bad)
dec
push
int3
pushf
pop
add
sbb
mov
cmp
jge
push
pop
xor
in
pop
and
les
adc
and
les
fcmovnu
push
xlat
and
mov
push
shr
mov
and
dec
jmp
jmp
std
js
jb
mov
loopne
dec
loopne
stos
js
inc
sbb
sub
push
retf
out
(bad)
test
add
ins
cdq
xor
sub
and
xor
movs
inc
jg
xchg
dec
rol
and
shl
mov
rcr
ret
pop
push
lods
jmp
inc
jmp
rcr
imul
dec
loopne
add
faddp
push
sub
inc
cmp
sbb
inc
add
mov
sbb
add
add
push
test
inc
hlt
push
aam
pop
or
jo
and
mov
inc
js
loopne
retf
mov
(bad)
push
mov
pop
adc
push
adc
add
adc
mov
mov
lea
and
sub
mov
inc
mov
call
mov
fwait
or
daa
popa
mov
xchg
push
je
je
add
ins
mov
mov
call
sub
ficomp
cmp
int3
jmp
fmul
xor
cdq
sub
enter
mov
push
push
mov
add
add
loopne
nop
or
sbb
push
mov
repnz
push
jbe
pop
pop
mov
inc
push
or
cmp
xor
dec
test
jl
inc
xor
cmp
pop
mov
and
stos
and
jo
sbb
xchg
ss
jle
inc
dec
jne
xchg
daa
adc
xchg
sbb
gs
loope
push
stos
ficom
cmp
sub
sti
or
and
in
xchg
mov
leave
dec
sub
(bad)
cmp
js
lock
or
dec
mov
add
xlat
mov
dec
add
push
cmp
cmp
inc
push
xlat
push
sti
clc
loop
inc
dec
mov
add
add
jmp
mov
sti
adc
dec
imul
dec
das
and
xor
push
lods
pop
clc
add
outs
sub
imul
in
cli
xor
jp
std
add
sbb
or
fadd
mov
and
cli
sub
pop
jg
in
sbb
outs
jne
arpl
push
enter
adc
sub
push
movs
pop
imul
enter
push
mov
imul
imul
inc
add
mov
jne
arpl
out
add
rol
sbb
aam
(bad)
sub
outs
inc
jae
inc
popa
inc
pop
sub
or
lock
or
add
adc
mov
loopne
and
fldcw
loopne
push
jo
or
lds
mov
add
ds
inc
sub
pusha
xor
outs
ss
add
call
add
mov
cmc
sahf
or
add
jg
das
sahf
add
add
pop
sub
pop
lods
gs
jb
cld
sub
sub
outs
inc
jb
pop
add
mov
and
ret
cmp
(bad)
or
shr
test
sbb
pop
adc
in
loop
fadd
cmp
push
(bad)
stc
cmc
xor
push
inc
in
add
inc
mov
and
mov
and
test
xchg
mov
fadd
xchg
cmp
add
dec
stos
enter
pop
pop
lea
mov
mov
fs
jno
xor
aaa
mov
push
or
cs
ins
mov
cmp
jne
mov
mov
or
aas
ins
cld
ror
mov
mov
outs
das
loopne
and
inc
add
adc
pop
sar
inc
jns
xchg
sub
jb
lods
popa
and
mov
sbb
xor
xor
add
pop
aad
ins
pop
adc
sbb
cmp
pop
ret
adc
cmp
or
inc
jmp
jns
adc
or
jo
adc
jl
fiadd
inc
gs
sbb
xchg
fcmove
mov
enter
movs
or
push
es
imul
fst
push
jns
cmp
cmp
loopne
pop
and
sbb
push
push
jns
outs
js
mov
and
sbb
jns
add
not
and
cmp
add
jl
aas
sbb
mov
in
and
pop
or
adc
ins
xor
das
loope
arpl
add
aad
enter
mov
jo
sbb
pop
xchg
loop
push
xor
in
jns
fs
shl
cmp
jns
or
inc
sub
loopne
leave
push
add
adc
popa
mov
es
add
add
jp
xor
and
mov
pusha
mov
ret
es
test
xor
loopne
push
inc
adc
loope
je
sbb
jne
sar
inc
pop
outs
xchg
add
loope
(bad)
pop
inc
jno
pushf
test
jp
inc
imul
es
or
ins
add
leave
adc
xor
sub
mov
bound
cmc
add
inc
cmp
ret
push
xchg
arpl
jnp
add
dec
and
cs
ja
inc
or
jo
xchg
pop
dec
or
int
xchg
adc
xchg
enter
sub
dec
push
push
je
loopne
or
add
pushf
and
pusha
pop
adc
ins
mov
dec
adc
and
pop
(bad)
outs
dec
add
xor
fild
adc
push
(bad)
cmp
inc
sbb
adc
pop
or
in
dec
fadd
adc
in
js
je
add
push
add
outs
inc
pushf
ins
inc
push
jae
inc
lods
jb
inc
sub
je
pop
mov
cld
or
pop
hlt
jg
adc
dec
dec
dec
bound
je
popa
leave
(bad)
shl
add
cmp
pop
popf
rcr
and
inc
jne
cmp
das
add
add
pusha
mov
cmp
or
add
add
cmp
add
xlat
push
shl
add
cs
in
xor
push
ret
pop
push
ds
push
addr16
test
aaa
cmp
int
sbb
xchg
cmps
or
jo
dec
jle
adc
add
popw
rol
inc
add
cmp
or
and
cmps
push
ss
push
xchg
aaa
push
push
inc
add
jbe
jbe
fild
pusha
scas
out
cmp
add
cwde
cdq
pop
mov
and
adc
pusha
into
in
add
out
push
pop
cwd
sbb
jle
cmp
pop
or
push
mov
push
call
out
shl
pop
cmp
loopne
sbb
mov
mov
mov
pusha
cmovbe
push
add
add
mov
out
inc
mov
push
sbb
dec
cs
sub
xchg
outs
pusha
out
or
inc
lahf
push
jmp
push
sbb
and
ss
outs
add
xor
stos
ds
pop
inc
fisttp
sub
or
add
add
bsr
daa
daa
mov
daa
daa
daa
movs
cmps
cmps
test
daa
daa
daa
test
daa
daa
daa
lods
scas
scas
nop
cmp
daa
daa
xchg
xchg
xchg
add
cmp
xor
mov
call
mov
lock
out
cmps
jge
inc
cmp
pop
ret
jb
jb
mov
nop
sub
jae
dec
test
push
sub
fcomp
and
and
jmp
lahf
xor
push
lods
jo
mov
test
bound
add
ret
jp
mov
ja
pop
ins
pop
push
ins
mov
mov
inc
push
loope
push
mov
cmp
dec
ret
mov
fsubr
cmp
mov
push
add
clc
push
adc
arpl
xchg
mov
pop
sub
inc
sbb
or
xor
push
lock
push
nop
int3
into
or
dec
test
push
add
cmp
add
sbb
mov
icebp
imul
add
pop
cmps
push
js
sbb
sbb
cwde
es
arpl
mov
mov
pop
adc
push
cmps
dec
lock
test
leave
out
pop
fadd
jle
dec
(bad)
int3
mov
xchg
mov
cmp
div
mov
retf
push
cdq
xor
ficom
and
add
cdq
xchg
dec
fsub
add
or
and
cmp
push
adc
mov
cld
cdq
xor
in
dec
out
cmps
ffree
pop
mov
mov
cmp
mov
add
mov
es
or
mov
mov
and
or
sub
fidiv
mov
enter
cmp
stos
adc
sbb
fidivr
ds
cmp
adc
sub
imul
inc
in
cwde
sbb
inc
scas
push
or
pusha
pop
dec
inc
jmp
cmps
mov
or
je
jo
mov
imul
mov
mov
and
xchg
enter
push
push
cli
adc
pushf
inc
fmul
xchg
enter
call
ins
dec
pop
fs
sbb
mov
hlt
lods
sbb
mov
sub
dec
dec
jle
out
clc
inc
push
movs
mov
mov
movzx
pop
push
mov
mov
fs
jne
fidiv
cmp
jbe
xchg
pop
or
or
cmp
rol
and
pop
mov
mov
cdq
mov
push
int3
aaa
int3
hlt
ror
repz
ret
dec
sub
std
mov
das
or
mov
imul
shl
mov
dec
xor
mov
loopne
outs
cdq
in
jne
mov
pop
in
add
xchg
mov
fidivr
jno
test
into
push
test
cmp
sbb
pushf
mov
ins
pop
push
inc
das
add
add
jmp
adc
sbb
sbb
xchg
cwde
pop
nop
ret
out
cwde
mov
and
popa
mov
outs
jp
je
xor
out
cmp
mov
mov
add
push
ins
pop
nop
dec
inc
push
in
or
mov
pop
lods
test
mov
mov
movs
or
push
shr
add
out
add
inc
add
adc
add
xor
sub
cmp
xor
pop
mov
js
ret
add
loopne
jp
xchg
je
or
mov
jo
mov
mov
pop
pop
mov
cwde
sbb
xor
mov
ins
xor
lahf
fild
rcr
xchg
ret
ret
pop
jnp
inc
or
dec
daa
sbb
icebp
mov
cmp
lock
cmps
mov
or
jae
adc
dec
ins
sbb
sbb
mov
adc
adc
and
or
pop
loopne
mov
les
mov
or
xor
dec
inc
or
and
inc
cmp
sub
adc
sti
retf
adc
or
add
inc
dec
cld
loope
retf
add
les
leave
or
pop
mov
dec
js
stos
mov
cmp
xor
jns
dec
es
add
lock
in
stc
add
push
pushf
push
lock
fadd
mov
xor
mov
pop
fadd
(bad)
adc
and
mov
xchg
test
arpl
lds
mov
nop
jmp
xor
add
jno
dec
arpl
adc
cmp
or
inc
and
push
int3
lea
les
es
fisttp
mov
pop
ret
out
add
ds
sbb
pop
push
push
mov
ret
pushf
fnstenv
or
aaa
or
add
test
mov
loope
jg
inc
imul
or
sbb
mov
jp
sub
inc
jbe
bnd
sbb
push
pushw
dec
int
xor
jle
fiadd
cmp
jae
inc
or
cmp
xchg
jo
jb
int3
int3
pusha
lahf
out
ds
mov
or
iret
inc
sub
fcom
push
inc
rcr
inc
loopne
push
push
imul
cdq
cdq
or
jb
addr16
(bad)
ins
xchg
(bad)
imul
push
dec
sub
sar
stos
mov
cmp
nop
mov
les
call
xor
aas
das
mov
sbb
xchg
pop
push
pop
and
sbb
addr16
das
scas
das
adc
popa
addr16
scas
mov
aaa
das
not
push
fiadd
shl
sbb
xor
pop
sub
daa
sub
cmp
xor
cmps
daa
call
call
jnp
or
test
add
sub
add
(bad)
pop
cli
test
push
out
cld
mov
pop
jecxz
sbb
in
ins
in
and
into
or
fisttp
push
pop
lock
je
jg
lea
mov
test
data16
pop
dec
sbb
fsub
adc
imul
jecxz
xor
dec
inc
and
test
jl
in
add
mov
dec
and
lods
test
pop
jae
add
adc
cmp
cdq
cmp
fs
mov
ss
aaa
pcmpeqd
in
jnp
lahf
sar
mov
or
add
pop
push
add
add
mov
or
cld
mov
mov
xchg
mov
add
movs
sbb
mov
mov
int3
xchg
test
mov
jne
push
and
mov
inc
sub
hlt
mov
shl
mov
push
pop
aas
cmp
mov
jne
xchg
cmp
adc
dec
xor
fsubr
jo
sbb
add
repz
mov
mov
dec
and
enter
xchg
inc
adc
mov
add
mov
aas
or
loopne
and
or
cmp
(bad)
loop
push
das
xchg
mov
xchg
cmps
loope
mov
sub
push
jl
movs
sub
mov
dec
mov
rcl
sub
push
push
push
push
adc
sub
mov
push
pop
sub
sbb
push
clts
xchg
push
fcomp
adc
or
sub
add
sbb
ret
and
mov
dec
and
sub
and
or
xchg
mov
pop
in
loop
sti
xor
cmp
xchg
mov
stc
mov
je
pop
mov
and
ss
lahf
in
popa
rol
dec
inc
dec
adc
dec
xchg
loopne
add
jne
adc
mov
push
jnp
mov
je
push
xchg
stos
cli
test
outs
add
xor
es
sbb
mov
cmp
adc
cdq
jmp
lock
(bad)
push
mov
mov
data16
add
dec
ins
xor
pop
mov
xchg
pop
jae
and
adc
pusha
inc
or
or
ror
mov
add
mov
enter
or
mov
mov
(bad)
ja
push
pop
and
add
cli
jns
adc
nop
xor
lock
or
push
fisttp
add
mov
lock
jl
push
dec
jne
or
xor
pop
loopne
data16
loopne
or
or
loopne
mov
cli
mov
xchg
es
or
fadd
adc
jecxz
sub
add
scas
pop
adc
xchg
test
and
or
jae
xchg
xchg
test
leave
mov
add
sub
inc
cmp
(bad)
adc
dec
or
or
lods
and
cs
out
cwde
mov
mov
lods
add
push
lock
retf
scas
sbb
popa
lock
cmp
cmp
rcr
inc
or
or
inc
mov
xchg
inc
and
bound
push
mov
jbe
mov
or
push
mov
scas
test
inc
(bad)
sbb
and
leave
(bad)
scas
nop
inc
jb
or
leave
mov
sub
popa
or
dec
mov
mov
adc
push
xor
mov
inc
jns
inc
test
add
test
mov
ja
mov
jg
xor
or
cmp
pop
adc
test
cmp
js
and
add
lods
add
test
mov
jnp
adc
and
stos
push
adc
add
loopne
push
add
cmp
test
test
pusha
and
pusha
out
repz
mov
adc
sub
test
dec
add
sub
pop
or
(bad)
push
or
fnstenv
pusha
add
mov
cmp
push
movs
or
jg
inc
loopne
add
sub
imul
out
xchg
xor
cmps
or
or
or
xor
xchg
jo
pushf
loopne
xchg
call
inc
push
mov
(bad)
cmp
xor
test
adc
push
pop
push
or
mov
cmp
inc
inc
push
ret
cmp
test
ss
push
retf
pusha
dec
jae
cmp
nop
or
mov
loope
pop
push
pop
sub
adc
adc
(bad)
dec
fcom
fmul
lock
mov
lahf
rcl
nop
imul
adc
sti
add
fist
pop
test
push
pop
ror
jmp
les
inc
adc
das
xor
or
clc
adc
ret
(bad)
popa
loopne
xor
cmp
test
or
xor
pop
xchg
jecxz
or
dec
push
lahf
dec
ins
or
xor
popa
int3
movs
test
mov
ret
test
inc
mov
or
mov
nop
call
icebp
jmp
test
shr
loope
sti
push
adc
pop
fsubr
mov
bound
pop
stos
jae
pop
adc
xor
inc
push
arpl
inc
js
inc
fcom
sub
push
cwde
sbb
sub
fild
lahf
push
pop
xor
pop
call
fist
mov
bound
int3
bound
in
fcmovb
push
sbb
add
lahf
xlat
sub
push
(bad)
loope
push
sbb
push
add
inc
adc
test
jb
push
in
pusha
fbstp
ret
out
xchg
int3
mov
idiv
xor
in
sub
stos
push
push
xor
mov
lahf
in
jne
dec
or
rol
mov
call
sbb
fwait
mov
(bad)
mov
push
mov
dec
pop
inc
xchg
mov
mov
pop
mov
ins
outs
pop
js
jmp
pop
in
mov
adc
dec
shl
sbb
adc
dec
mov
das
pusha
stos
add
jb
mov
xor
pusha
(bad)
aad
pop
mov
mov
inc
pop
sar
or
adc
clc
adc
xchg
push
add
and
lock
imul
jge
call
(bad)
or
mov
jo
fld
jnp
arpl
push
xchg
push
das
mov
das
mov
lods
push
mov
dec
mov
call
das
push
call
adc
adc
cmp
(bad)
(bad)
jmp
ins
inc
outs
ja
ins
outs
popa
fs
jae
imul
popa
imul
push
into
cmps
add
or
imul
call
add
push
or
mov
aam
ret
iret
push
pop
adc
loope
xor
mov
fstp
std
hlt
push
push
xor
sbb
push
add
pop
mov
repnz
out
adc
int
add
hlt
fdiv
scas
popa
(bad)
mov
ret
mul
xchg
lods
adc
ret
fsubr
mov
push
ins
mov
dec
fcmovnu
ds
dec
fsubr
aas
inc
lock
in
dec
push
call
xchg
push
mov
jmp
cdq
or
xchg
test
pop
dec
sub
lock
cmps
cmp
cmp
xchg
sbb
sti
add
or
sbb
clc
add
rol
iret
adc
movs
push
pop
test
pop
ficom
mov
add
add
add
sti
(bad)
pop
bound
add
push
jp
pop
inc
or
(bad)
push
push
outs
(bad)
inc
push
xchg
fiadd
xor
dec
push
jns
mov
and
clc
dec
sar
cmp
jne
cld
jmp
(bad)
push
(bad)
fistp
jne
mov
mov
push
mov
sbb
dec
xchg
mov
and
mov
pop
sahf
push
or
adc
in
push
xor
dec
sbb
sar
jno
and
adc
push
sar
fld
or
jl
cmps
cmp
xchg
lods
leave
pushf
mov
xor
add
div
sbb
sub
pop
dec
cmps
(bad)
dec
fadd
mov
pop
sub
test
pushf
(bad)
pop
dec
in
inc
sub
gs
fsubr
enter
in
jbe
or
pusha
inc
enter
add
nop
adc
inc
mov
add
inc
push
movs
cld
scas
inc
jmp
adc
push
mov
imul
cld
lock
xchg
popf
pusha
movs
xlat
and
enter
shl
or
and
(bad)
movs
xor
dec
loop
(bad)
shl
lock
jne
jecxz
cmp
scas
(bad)
out
add
mov
sbb
add
or
dec
call
add
out
dec
jns
and
das
sub
mov
or
stos
inc
jb
mov
mov
movs
dec
lods
dec
and
adc
cmp
mov
or
or
ds
push
sub
jecxz
jge
retf
loope
jge
into
in
cld
outs
add
pusha
mov
sub
aas
xchg
xor
add
mov
mov
cmp
add
jns
aad
add
movs
or
(bad)
jne
inc
dec
jp
neg
mov
cmp
xor
pop
sub
jne
jmp
mov
adc
or
mov
xor
or
push
cmp
pushf
inc
push
mov
test
fdiv
or
test
and
inc
or
push
pop
ficom
or
movs
xchg
outs
and
sub
loopne
xor
pushf
push
pop
dec
lods
mov
xchg
and
inc
iret
and
adc
int3
int3
push
xor
inc
and
es
out
add
retf
nop
push
push
hlt
fdivr
(bad)
add
fxam
mov
icebp
(bad)
data16
xchg
mov
push
sbb
inc
adc
adc
mov
arpl
cmp
int3
jo
cmp
jnp
movs
push
loopne
cdq
pop
jge
push
das
aad
sub
push
test
pop
ror
popf
jg
popf
data16
mov
int3
cdq
mov
jp
test
or
push
push
xor
adc
and
sub
out
push
and
or
xor
inc
and
pop
sub
jo
or
cli
push
xor
pop
inc
push
cs
scas
push
xor
mov
ror
scas
bound
rol
xchg
js
push
js
cmp
cmp
mov
push
mov
mov
push
cli
popf
jo
ja
add
call
jno
scas
and
pop
inc
sub
pop
xlat
hlt
(bad)
(bad)
fistp
mov
add
add
add
add
add
add
add
add
push
sub
mov
or
aas
cs
or
sub
dec
jle
add
add
push
dec
pop
and
adc
sbb
aaa
cmc
mov
fadd
cmps
and
mov
ins
dec
cmp
mov
add
sub
jne
xor
cmp
xchg
push
adc
or
cmp
or
dec
test
mov
push
mov
adc
pop
addr16
adc
pop
adc
movzx
test
ficom
adc
mov
mov
sub
adc
sub
or
mov
dec
inc
xchg
in
mov
sbb
add
sbb
dec
add
mov
xchg
sbb
std
aad
mov
or
push
(bad)
jmp
mov
sbb
cmp
add
push
push
add
or
pop
pop
jnp
push
cmp
es
bound
mov
pop
cwde
adc
stos
mov
pop
mov
movs
inc
mov
jbe
dec
adc
or
(bad)
out
fst
call
cmc
test
cmp
xor
cmp
xor
jnp
jne
and
mov
rcl
mov
clc
jg
mov
push
jne
mov
pop
add
jmp
push
movs
jmp
push
adc
jb
push
pop
ret
movhps
sbb
ds
push
sti
mov
add
je
dec
je
add
ret
jg
mov
enter
push
push
cld
cmp
add
pushf
les
test
outs
sub
inc
in
push
or
push
inc
mov
dec
jmp
or
not
lock
pop
mov
sti
icebp
add
sbb
push
sbb
add
add
push
rcr
add
add
adc
add
ss
push
push
add
cwde
pop
pop
es
adc
data16
es
xor
jl
stos
addr16
xor
inc
adc
dec
add
inc
and
add
cli
sar
lock
js
xor
leave
mov
mov
push
sub
sub
inc
clc
sub
push
test
cmp
and
imul
mov
jne
dec
imul
cmps
cmp
adc
movs
jb
test
rcr
xchg
test
dec
mov
test
mov
xor
jmp
iret
or
xor
pop
inc
sub
xor
inc
add
icebp
ds
jne
das
add
inc
push
addr16
test
arpl
arpl
arpl
xchg
hlt
iret
add
sbb
shl
loop
loopne
or
lahf
in
test
jne
ret
sar
stos
add
or
mov
mov
cmps
mov
pop
xor
clc
lea
push
stos
inc
mov
inc
enter
clc
add
ret
push
mov
pop
or
dec
add
xchg
lock
xchg
dec
rcr
popf
pop
push
or
adc
or
xchg
mov
or
pop
fs
jnp
and
es
addr16
cmp
xchg
loope
call
add
push
add
pop
adc
cmp
inc
(bad)
leave
mov
fiadd
cdq
adc
cmp
dec
jne
sub
leave
loopne
outs
push
imul
inc
lock
jne
push
lock
lock
adc
pop
adc
pop
add
adc
daa
lahf
adc
adc
pop
pop
loopne
or
fld
cmp
js
out
loope
xor
sub
cld
add
add
sub
sar
pop
inc
xor
rcr
mov
cmp
gs
inc
dec
xchg
mov
cmp
cmp
jne
push
not
mov
push
js
dec
or
jg
imul
mov
xor
xlat
aad
sbb
push
pop
aaa
jo
xor
leave
mov
ret
les
out
dec
mov
and
hlt
inc
lea
push
sbb
pushf
in
sahf
nop
and
jmp
(bad)
and
inc
jnp
adc
mov
mov
push
mov
fist
sbb
push
stos
lock
mov
jmp
adc
leave
popw
push
adc
cmp
test
fcomi
and
jmp
call
pop
in
inc
push
das
add
mov
pop
pushf
and
mov
sub
cld
mov
mov
jnp
and
xor
add
rol
jmp
popf
push
mov
pop
fnstsw
pop
jae
pusha
or
movs
xor
and
push
loopne
mov
dec
mov
add
xchg
(bad)
pop
mov
push
lahf
push
sbb
dec
ret
sub
inc
inc
call
xor
xor
ror
fwait
dec
(bad)
into
and
dec
xor
rol
add
fisub
mov
ins
loop
push
aas
rol
push
in
dec
or
or
inc
dec
sub
leave
inc
xchg
fsub
jl
lods
push
dec
movs
pop
pusha
inc
call
scas
scas
inc
xor
aam
loopne
mov
mov
inc
test
fadd
movs
pop
add
mov
lea
into
add
js
mov
call
in
xchg
cli
jnp
pop
mov
mov
lock
inc
mov
xor
inc
sub
sbb
inc
sub
and
sub
jae
add
adc
and
mov
jo
sbb
inc
xor
cdq
jbe
cmp
test
jp
lods
mov
sbb
add
add
sbb
inc
and
ror
cmp
iret
jbe
push
and
pop
mov
std
test
add
rcr
scas
movs
mov
or
sub
xor
mov
cmc
test
mov
mov
or
jne
fsubr
add
adc
ins
fidivr
mov
call
test
cmp
je
dec
je
dec
ja
dec
cmp
pop
les
fldcw
mov
xchg
mov
sub
and
and
mov
test
sub
test
enter
mov
imul
mov
(bad)
loope
or
xchg
jge
xchg
add
mov
xchg
test
les
pop
fwait
jo
mov
cs
test
add
inc
mov
inc
loopne
cmps
pop
shl
imul
cmp
ret
pop
and
adc
cwde
(bad)
sti
adc
xchg
rcl
and
push
or
inc
outs
xor
and
add
adc
sti
jmp
mov
rcr
movs
push
lea
not
sbb
aas
int3
dec
fild
sub
push
fimul
cmp
push
or
fiadd
jne
enter
bswap
cs
xor
push
jmp
dec
pop
or
mov
mov
cmp
mov
test
xor
je
in
rol
arpl
imul
and
sbb
repnz
add
outs
jo
or
inc
je
pop
add
ror
pushf
pop
adc
cmp
cmp
xchg
movs
or
cdq
sub
rcl
xchg
outs
test
loopne
jl
mov
push
adc
push
cmp
stos
mov
cmp
add
cld
mov
and
fistp
pop
xor
out
aam
adc
aaa
dec
push
mov
push
fstp
loopne
cmp
push
push
dec
ficomp
int3
inc
js
mov
jbe
pop
fwait
cwde
(bad)
iret
outs
cs
sbb
push
nop
pop
into
or
cmps
(bad)
call
mov
lock
push
dec
mov
clc
dec
cwde
add
std
les
lea
xor
push
or
loopne
(bad)
cld
cmps
aad
jno
xor
or
and
sub
xor
and
add
sub
inc
retf
mov
jmp
jge
sub
adc
adc
mov
sbb
lods
int3
or
std
jle
sub
xchg
mov
adc
fdivr
adc
je
cwde
jp
pusha
or
bound
lods
or
sbb
xchg
or
(bad)
mov
and
and
xchg
retf
jno
fidiv
sub
pusha
(bad)
mov
pop
jl
or
loope
in
mov
and
adc
cwde
icebp
addr16
xor
das
xchg
mov
(bad)
in
mov
cdq
cwde
xor
dec
mov
pop
loop
fdivr
cmp
add
dec
or
lods
inc
(bad)
(bad)
idiv
cmp
lea
xchg
(bad)
orps
or
mov
cs
loop
or
sar
xor
and
(bad)
std
aam
add
adc
out
sbb
ds
je
sbb
mov
xor
push
ja
sar
addr16
pushf
fadd
sbb
mov
aas
xchg
call
mov
loopne
xchg
adc
mov
shl
repz
dec
hlt
loope
scas
jnp
xor
fdiv
xor
dec
push
cs
jmp
es
sbb
xchg
or
xor
(bad)
ror
fimul
inc
fisttp
lods
pop
sub
aaa
push
(bad)
int3
repnz
cmp
and
jmp
jle
stos
out
mov
fild
or
or
test
mov
or
adc
pop
pop
inc
or
sub
add
pop
adc
push
mov
in
jmp
push
mov
adc
loopne
jl
mov
lock
addr16
cmp
ins
mov
mov
mov
xor
or
inc
in
call
mov
pop
push
push
adc
ror
mov
loopne
mov
mov
inc
mov
or
jns
lods
mov
jo
add
xchg
pop
loopne
push
mov
in
add
inc
aaa
inc
fs
adc
push
shl
add
or
jb
and
xchg
nop
jne
add
fwait
fwait
sub
cmp
push
lahf
add
mov
xor
test
pop
ins
loope
push
mov
mov
mov
rcl
les
add
or
adc
jne
test
add
mov
sbb
sbb
loope
shl
or
lods
add
mov
add
adc
cmc
inc
loopne
mov
push
adc
nop
(bad)
add
push
or
and
add
and
cmp
pop
mov
inc
push
cmp
xor
sub
add
adc
mov
rcr
je
inc
jmp
out
enter
or
or
sub
inc
pop
jl
mov
pop
test
xor
add
mov
push
add
sub
jb
cmp
or
retf
dec
pop
add
dec
mov
not
mov
in
push
loopne
sub
push
push
push
cmp
dec
xchg
cld
xor
hlt
pop
fdivr
adc
add
ret
and
mov
sub
jae
mov
sahf
outs
and
fcmovu
(bad)
or
add
pop
mov
mov
push
lahf
cmp
pop
movs
mov
dec
xor
cdq
sete
mov
mov
lock
jnp
and
or
jp
fist
mov
and
push
mov
icebp
pop
push
cmp
pop
xor
adc
hlt
mov
add
pop
retf
dec
in
push
ficomp
adc
sub
sub
fbld
push
enter
inc
enter
pusha
xor
mov
pop
sbb
pop
or
inc
inc
je
popa
and
add
movs
hlt
rcl
stc
or
les
popa
sub
inc
test
lahf
sub
test
add
call
stos
mov
outs
lahf
sbb
sub
add
and
mov
loopne
jo
xor
push
add
in
int
xlat
test
or
aad
mov
shl
dec
xor
cmp
popf
inc
jae
scas
(bad)
push
push
not
sbb
call
retf
lock
lock
ss
jne
xcrypt-cfb
cmps
and
in
(bad)
loopne
add
retf
clc
pop
sub
adc
fadd
pop
xchg
pop
cmp
xor
mov
scas
arpl
cmp
jne
push
pop
add
lods
je
stos
ins
add
jmp
sub
dec
in
vmrun
mov
dec
lock
and
xor
ss
inc
mov
loopne
sti
stos
aam
add
loopne
xor
mov
inc
ins
mov
not
(bad)
aas
xchg
cmp
bound
daa
addr16
or
ds
aas
test
ret
and
sbb
or
add
add
push
pop
mov
mov
data16
aam
stos
mov
push
mov
add
jb
adc
sbb
jp
xor
fadd
sub
stos
mov
movzx
mov
xlat
mov
scas
js
push
(bad)
rol
jmp
jge
adc
jge
sub
xchg
dec
rcl
mov
xchg
add
jge
sbb
push
mov
mov
pop
out
frstor
cld
mov
push
sub
out
mov
mov
(bad)
inc
imul
jbe
mov
sub
mov
mov
out
enter
cmp
pop
(bad)
cmp
jne
push
mov
int
call
aaa
lock
inc
push
jl
js
lods
mov
push
sbb
mov
arpl
ficom
xor
mov
shl
add
adc
pop
jo
ficomp
or
cmp
and
test
jns
add
push
pop
or
cdq
cmp
pop
add
and
sbb
inc
mov
dec
pushf
mov
pop
add
pusha
loope
ins
ror
idiv
jnp
pop
loope
sti
cdq
jl
cmp
inc
sti
fimul
xchg
xchg
mov
push
or
dec
xchg
lock
pushf
fild
in
test
xor
add
mov
mov
adc
push
popa
inc
xchg
loope
xchg
or
repz
or
(bad)
mov
or
cli
sbb
cmp
or
add
outs
dec
aas
mov
test
pop
and
pusha
push
cmp
adc
es
mov
push
pop
es
or
sub
jp
sub
add
lds
or
dec
sbb
add
sbb
push
mov
push
pop
pushf
push
inc
add
add
or
std
xchg
mov
adc
xadd
in
or
sbb
fsubr
cmp
push
pushf
call
mov
shr
lea
mov
add
dec
and
into
jno
mov
add
cmp
mov
push
jo
mov
or
cmp
and
or
adc
mov
or
das
test
shr
push
or
xlat
mov
xlat
push
jb
pop
push
cmp
shr
js
push
mov
outs
xchg
and
and
imul
popa
ror
pop
xchg
dec
in
jmp
or
adc
push
rcl
add
adc
jbe
mov
repnz
fidivr
inc
pushf
adc
inc
or
jecxz
loope
repz
cs
ds
adc
dec
jnp
loope
repz
xchg
sbb
mov
cmp
push
jp
mov
mov
jno
adc
enter
xor
sti
and
(bad)
(bad)
rcl
add
xchg
mov
fcomp
xchg
cmp
xor
ds
inc
xchg
xchg
adc
in
mov
dec
and
aam
cld
mov
cwde
and
inc
adc
mov
clc
dec
push
mov
sbb
sbb
xchg
in
outs
icebp
mov
nop
mov
dec
mov
hlt
or
add
pop
frstor
or
sar
pop
push
and
je
(bad)
fbld
push
clc
dec
test
jl
inc
xor
cmp
jne
(bad)
or
jae
hlt
in
in
xchg
dec
(bad)
dec
fucomip
xchg
sub
mov
jb
scas
and
or
std
cwde
jno
dec
jne
(bad)
xchg
cmp
mov
out
test
sbb
out
fwait
out
loopne
and
mov
push
and
fsub
loopne
adc
sub
call
and
and
jmp
sbb
imul
add
dec
mov
cmc
mov
stc
dec
sub
push
mov
aaa
inc
sub
repz
mov
adc
xor
not
(bad)
add
dec
jb
push
sbb
aam
push
and
push
push
into
fistp
mov
aam
jmp
add
mov
pop
cmps
pop
cs
das
xor
rol
jb
add
xlat
jo
pusha
aaa
and
daa
ss
mov
and
push
inc
add
mov
xchg
scas
sub
cmp
pop
scas
js
push
sub
pop
pop
bound
int3
arpl
xor
and
jo
xchg
(bad)
or
ficomp
or
and
mov
add
and
retf
and
dec
pusha
mov
xchg
arpl
add
jnp
pop
test
push
jbe
dec
add
out
sub
push
sbb
int3
enter
jp
cli
dec
mov
inc
or
sbb
aas
das
test
psrlw
cmp
adc
pop
and
pushf
in
push
add
push
out
mov
xchg
pop
add
loopne
imul
and
(bad)
ffreep
pop
mov
dec
sahf
ret
pushf
sbb
mov
int3
imul
pop
adc
or
pop
sub
add
pop
das
fild
imul
push
int
lea
push
jb
mov
jo
out
mov
mov
in
jbe
jo
(bad)
ins
(bad)
mov
sbb
mov
adc
(bad)
sub
mov
pop
inc
mov
rcl
ins
lods
and
test
push
adc
inc
mov
sbb
or
scas
mov
push
cld
inc
repnz
cmp
jl
xor
(bad)
adc
pop
es
xor
fidivr
fidiv
jne
outs
and
xchg
nop
mov
add
fbstp
mov
jmp
(bad)
aas
jo
xor
sete
test
je
mov
and
lea
sti
push
lea
inc
and
rcl
gs
cld
les
outs
adc
mov
push
mov
out
inc
pop
add
in
je
nop
or
sub
push
sub
mov
jecxz
xor
and
outs
adc
mov
adc
mov
pushf
sbb
(bad)
aas
mov
shr
fld
ror
mov
inc
out
sahf
push
lea
xor
mov
cmp
in
jne
shr
add
push
or
push
xor
jge
adc
in
test
cmp
cmp
xchg
or
jp
js
test
inc
xor
inc
jno
pop
js
mov
push
movs
jbe
cmp
jnp
sub
cmp
fwait
call
aas
xchg
jmp
mov
and
xor
cs
outs
pushf
mov
sbb
dec
rol
mov
popf
dec
xchg
xchg
adc
outs
cwde
mov
push
ficomp
dec
in
mov
ficomp
sub
rcl
test
mov
and
adc
pop
xchg
mov
xchg
mov
into
add
enter
mov
cmp
test
pusha
sub
jmp
sti
pop
repz
data16
outs
(bad)
dec
push
out
pop
cmps
loope
pop
mov
mov
arpl
(bad)
lock
sbb
das
pop
pop
jno
(bad)
xlat
pusha
adc
add
cmp
xlat
inc
out
pop
pusha
dec
push
lahf
and
out
or
mov
(bad)
out
imul
adc
mov
inc
fisubr
cmps
push
xor
das
push
popa
sbb
or
mov
cld
dec
mov
ss
(bad)
and
mov
in
xor
dec
jbe
fwait
pusha
test
jmp
mov
rcr
mov
jno
retf
mov
or
fmul
jo
and
inc
rol
sub
adc
pop
xchg
cmps
adc
add
cwde
pop
lods
inc
ror
jne
dec
cmp
jle
cmp
add
repnz
sbb
mov
add
jge
mov
add
outs
loopne
hlt
push
pop
fadd
cld
lock
jl
repz
add
mov
push
adc
add
enter
popa
mov
xor
add
rol
mov
xchg
test
jmp
add
sub
adc
xor
pop
push
add
push
push
imul
out
push
add
lods
dec
inc
add
push
clc
or
dec
add
pop
int3
cs
nop
dec
scas
ins
ins
addr16
jg
dec
mov
push
ror
mov
or
mov
aaa
push
pop
xchg
das
in
test
dec
das
push
cmp
outs
push
cs
mov
pop
mov
int
rcl
mov
movs
int
cwde
fldcw
test
add
push
cmp
ins
enter
sar
rcl
repz
enter
fmul
push
in
dec
mov
push
hlt
cs
clc
jg
pusha
(bad)
push
xor
dec
adc
add
jl
adc
mov
ins
test
push
cld
mov
movs
push
fmul
push
push
push
ins
mov
das
in
test
add
outs
fisub
and
dec
aas
inc
push
jo
outs
pop
xchg
dec
pop
fs
test
add
les
inc
xchg
add
stc
xchg
add
dec
xor
aas
pop
push
inc
push
ret
push
rol
out
shl
jle
test
push
dec
aam
outs
xor
mov
or
push
nop
adc
aas
in
jecxz
mov
inc
ror
je
xchg
pop
push
leave
out
push
loope
inc
inc
jecxz
int3
mov
push
push
pushf
xchg
pop
(bad)
std
xor
jbe
js
nop
test
pusha
pop
and
aaa
rcl
push
les
dec
mov
dec
bound
and
push
add
sbb
add
mov
dec
loopne
adc
movs
fisub
inc
inc
mov
fcom
mov
push
inc
mov
sub
push
jl
dec
push
pushf
xchg
lods
into
pop
add
pop
clc
arpl
nop
mov
mov
adc
movs
jle
push
addr16
and
add
out
hlt
jle
popf
adc
xchg
mov
stc
cmps
cmp
mov
les
imul
jo
mov
jbe
mov
lock
jne
push
(bad)
aas
push
add
pop
cmp
jp
fcom
dec
adc
push
sub
add
dec
pop
add
jle
aaa
cmp
cwde
leave
inc
push
and
not
sbb
lods
push
add
outs
loop
xor
jg
test
pop
pop
das
aas
out
ja
pop
jl
sbb
jl
or
ss
push
mov
rcl
mov
stos
fbld
call
push
mov
pusha
arpl
inc
ds
lock
in
mov
jp
push
js
enter
jl
test
add
jg
call
fadd
or
in
pop
push
cwde
bound
loopne
adc
fmul
xchg
int3
data16
(bad)
cwde
push
movs
fwait
mov
fild
aas
js
pop
mov
jo
mov
out
lods
lods
sbb
push
lods
idiv
push
int3
push
loopne
push
mov
repz
es
je
lods
inc
(bad)
fsubrp
mov
push
fadd
hlt
pop
pop
fs
push
mov
iret
sar
fs
adc
mov
fs
mov
push
mov
pop
cmp
aaa
sbb
aam
xor
out
and
pusha
mov
cs
repz
call
fbstp
sub
push
or
xlat
jbe
imul
mov
jo
pusha
jg
push
lock
xchg
loopne
or
mov
iret
shl
inc
sahf
push
dec
fs
cmp
pushf
mov
in
adc
out
call
jnp
xlat
xchg
rol
in
cmp
sar
push
sub
mov
enter
adc
push
fucomip
or
inc
push
adc
ds
in
into
repz
mov
movups
ins
ins
fcmovbe
test
inc
and
(bad)
pop
js
cmp
idiv
lods
push
(bad)
fadd
mov
or
das
or
jmp
fcmovnbe
scas
aas
push
push
push
fist
pop
pop
nop
outs
test
rcr
in
add
pop
or
push
pop
push
dec
mov
mov
mov
imul
sub
je
adc
sub
sub
inc
pop
mov
mov
enter
mov
dec
pusha
inc
push
cwde
push
ror
inc
in
cmp
jnp
push
cmp
pop
xor
ds
jns
adc
sbb
push
aas
loopne
or
pop
jnp
(bad)
push
pop
les
xchg
pushw
lods
ds
repz
xor
or
push
inc
mov
ds
mov
inc
fnstcw
push
out
or
xchg
xor
dec
idiv
popa
pop
je
loopne
inc
cmovs
outs
mov
js
push
sub
dec
idiv
push
or
dec
pop
sub
push
sahf
pop
or
push
adc
pop
clc
inc
(bad)
data16
in
push
push
test
movzx
push
mov
jns
rol
sbb
fwait
lods
loope
push
cli
push
pop
add
push
push
push
or
loopne
(bad)
fdivr
push
dec
push
pop
cld
push
push
dec
arpl
fldcw
adc
push
lock
add
xchg
jl
(bad)
jbe
mov
mov
push
gs
mov
ins
xchg
pop
(bad)
jnp
test
push
xor
popa
aaa
xchg
addr16
push
push
and
pop
in
xor
pop
sti
pop
push
data16
mov
pop
pop
adc
test
jo
jl
ins
ss
int
push
or
sub
adc
xor
push
lahf
mov
fcmovnu
cmp
push
mov
pop
fmul
xchg
pop
mov
push
sub
outs
mov
mov
push
inc
fbstp
push
or
mov
mov
push
mov
push
inc
sbb
int
imul
xor
fcmovne
ins
ss
cld
je
jl
push
sbb
cwde
xchg
push
test
pop
js
fldenv
xor
outs
ror
stos
push
jl
mov
adc
adc
test
cmp
push
adc
ins
dec
mov
jl
sbb
es
call
sub
adc
(bad)
sub
sub
mov
inc
add
push
int3
xor
aaa
cli
cmp
push
xor
mov
outs
sti
mov
sar
add
push
push
fdivr
nop
xchg
mov
ins
push
mov
dec
jl
out
fcmovnu
sar
push
(bad)
push
jle
ds
push
dec
pop
(bad)
mov
neg
pop
push
push
call
pop
push
js
add
int
mov
loopne
push
sbb
lea
out
pop
pminub
dec
pop
sbb
mov
test
sysret
xor
mov
cmp
ins
mov
dec
lds
(bad)
push
enter
jne
into
ss
enter
push
mov
pop
lock
int
push
js
push
jo
sbb
loopne
int
dec
mov
pop
into
add
lods
push
sar
stc
int3
fidivr
dec
shl
push
cwde
shl
ds
mov
cwde
aad
(bad)
push
ins
mov
xlat
neg
push
push
cwde
fld
sar
push
movs
fisttp
mov
sbb
and
jle
js
push
loope
(bad)
data16
clc
push
test
and
mov
jbe
and
call
outs
lods
push
les
mov
shr
daa
aam
adc
pop
data16
rcl
nop
adc
xor
clc
pop
out
ss
add
sbb
sbb
ss
call
dec
int3
std
icebp
push
xor
scas
xchg
rcl
xor
shl
je
ins
jbe
js
pop
out
sbb
mov
lahf
add
out
adc
xchg
rcl
ja
push
mov
push
cmp
rcl
lea
(bad)
scas
nop
mov
mov
movs
xchg
neg
or
push
adc
jne
mov
dec
fdivp
push
adc
int
add
jo
or
push
nop
std
sbb
ror
push
or
adc
adc
les
out
sbb
xor
daa
(bad)
push
adc
and
sub
cmp
mov
cmp
push
and
or
and
dec
inc
push
fadd
dec
push
inc
jl
mov
dec
cmp
push
push
rcl
mov
push
push
pop
in
pop
(bad)
out
mov
pop
xchg
je
ss
mov
gs
div
push
mov
jb
lods
js
ins
mov
cld
push
mov
cmpxchg
out
pop
nop
not
stc
es
or
push
pushf
cli
js
adc
fstp
push
call
ds
outs
adc
push
int3
xchg
and
inc
cmp
(bad)
cmp
in
push
nop
shl
aad
(bad)
xor
sub
data16
popa
cmp
scas
jecxz
push
in
out
ins
ss
test
call
int3
in
mov
out
mov
stc
ss
sti
ds
push
std
pusha
(bad)
hlt
jo
xchg
jp
sub
add
push
or
sahf
int
test
push
or
adc
ins
fs
test
add
sub
ss
sbb
push
and
cwde
and
adc
push
sub
ss
pop
(bad)
cmp
push
inc
xor
push
fidiv
xor
in
cmp
lods
ds
inc
ins
out
loopne
push
movs
inc
inc
push
dec
out
push
ror
jae
scas
push
dec
push
pushf
ss
push
rcr
data16
dec
bound
fs
hlt
gs
dec
mov
imul
es
mov
ret
dec
jnp
push
jge
push
push
jle
add
push
cmps
in
jnp
sbb
sahf
mov
xchg
push
popa
mov
outs
clc
xchg
scas
xchg
push
cwde
js
or
fwait
int
jae
push
movs
pushf
fcomp
cmp
ins
ss
mov
(bad)
scas
cs
repz
inc
pop
mov
mov
out
inc
rol
mov
push
ficomp
call
int
into
(bad)
jnp
adc
jbe
push
mov
jl
lods
call
push
ins
push
mov
fsub
sbb
push
sub
push
hlt
fwait
ins
sti
pop
(bad)
mov
outs
push
sbb
lock
jns
fild
sbb
pop
jge
mov
sub
enter
and
fadd
mov
lea
push
and
xchg
cmps
sbb
sbb
sub
les
cwde
pop
cmp
push
enter
fisubr
sub
push
xor
fcom
xchg
xor
inc
lahf
pop
ret
inc
mov
fs
pop
inc
jo
sub
jl
push
add
mov
mov
adc
call
lods
adc
sbb
push
push
push
and
lods
and
push
push
jle
data16
fs
shl
ds
push
mov
pop
cmp
enter
fnstcw
xchg
mov
inc
adc
stos
(bad)
hlt
inc
inc
dec
(bad)
dec
push
xor
out
jae
jbe
pushw
mov
icebp
push
ss
push
pushf
pop
dec
pop
into
pop
out
pop
idiv
icebp
sub
pusha
xchg
mul
mov
mov
imul
jne
call
push
jp
jl
out
ins
fild
push
sbb
pop
or
pop
sub
loop
jnp
sahf
xchg
mov
loopne
mov
pop
xchg
xchg
cwde
pop
cdq
push
push
cmp
push
pushf
xchg
js
jbe
push
clc
mov
test
scas
mov
fadd
cmp
mov
mov
mov
ss
ins
mov
je
cmps
leave
inc
retf
pusha
xor
cmp
push
pushf
int3
es
xor
ja
out
loope
shr
loop
push
ret
push
mov
pop
jecxz
xchg
push
test
jle
ins
in
shl
ins
dec
out
push
pop
outs
and
(bad)
xchg
push
test
dec
jne
mov
xor
mov
loope
jecxz
push
inc
mov
pop
in
into
adc
adc
shr
mov
enter
ret
mov
push
or
lock
cs
xor
(bad)
push
cmp
js
call
push
xchg
pop
push
sbb
xchg
fld
hlt
sbb
push
sub
mov
clc
pop
inc
pop
and
and
in
mov
sub
xor
imul
cmp
cmp
push
aam
push
inc
sahf
inc
pop
xor
fild
pusha
inc
push
inc
jle
into
push
push
pop
push
jl
xor
fcom
push
lock
pop
push
ss
ret
and
in
push
stos
(bad)
fild
movs
bound
fs
imul
jecxz
inc
sbb
outs
ja
js
ins
mov
out
pop
fadd
mov
mov
in
sbb
push
jo
nop
xchg
icebp
push
mov
test
mul
lock
xor
mov
fwait
movs
push
cmps
pop
test
xchg
push
lea
cmps
mov
inc
mov
adc
push
shr
mov
push
and
rol
add
xchg
daa
sub
ss
aas
pop
shr
in
popa
ss
arpl
je
loopne
fcmovnb
out
data16
push
imul
fldcw
mov
jno
xchg
loopne
push
fs
jnp
jle
mov
stc
mov
push
in
sbb
xchg
cs
mov
aam
hlt
nop
xor
mov
sub
nop
fwait
call
les
test
add
push
xchg
sub
ror
enter
data16
mov
push
neg
mov
aas
jo
cwde
mov
test
sub
adc
xor
adc
sub
mov
jbe
call
mov
sbb
push
mov
(bad)
cmp
lods
push
jo
add
xor
hlt
push
rcl
xlat
add
call
test
rcl
loopne
push
es
les
adc
add
push
mov
mov
aas
xor
push
and
push
pop
ja
adc
pop
cmp
jne
fisub
push
pop
pop
es
push
pop
mov
movs
push
mov
mov
ins
pop
call
sbb
sbb
daa
lods
pop
jnp
xor
dec
push
fs
pop
jl
in
or
(bad)
mov
sub
pop
jl
pop
dec
push
add
cmp
jg
mov
loopne
or
scas
mov
ins
pop
sub
outs
push
sbb
es
mov
sub
mov
inc
sysret
mov
test
or
aaa
pop
adc
add
and
mov
iret
pop
pop
add
push
adc
mov
or
or
mov
xor
cmps
stc
add
pop
je
mov
mov
int3
ds
mov
xchg
mov
lahf
daa
adc
push
int3
and
test
push
int3
lock
mov
xor
out
and
out
mov
xlat
sub
inc
jle
mov
hlt
(bad)
hlt
mov
div
stc
push
add
adc
push
jg
in
inc
fadd
add
dec
xchg
ins
mov
fadd
clc
dec
cmp
pop
stc
out
jge
add
mov
push
ds
mov
ins
mov
inc
xor
push
lock
lods
push
ins
push
retf
jbe
in
sahf
push
das
in
sysret
xor
out
or
pop
and
push
fadd
das
push
lds
pusha
or
test
push
or
pop
add
pop
pop
btc
or
xchg
sahf
pop
mov
ss
mov
in
ror
int3
rcl
mov
pop
fistp
mov
pop
lods
ror
scas
(bad)
in
push
adc
pop
pop
sysret
xchg
push
fs
loop
mov
push
ins
xlat
scas
(bad)
ds
out
ins
sbb
cmovs
dec
pushw
call
out
sahf
push
inc
je
push
mov
in
fwait
jge
lods
lock
das
les
enter
dec
clc
xor
or
les
ja
mov
inc
ins
nop
jge
imul
mov
das
enter
imul
fwait
pop
mov
call
push
or
scas
test
imul
and
fmul
sub
sub
popf
mov
xor
xor
xor
out
outs
cmp
sbb
push
rol
cmp
daa
inc
xor
mov
sete
push
les
jns
jo
fnstcw
jl
jle
sbb
jbe
test
mov
sbb
push
push
pushf
xchg
cld
in
xchg
xchg
xchg
push
push
mov
fsub
xchg
pusha
call
iret
jo
sub
mov
and
lahf
ja
push
in
lahf
dec
mov
js
push
mov
xchg
mov
mov
in
movntq
out
cmp
jo
jle
mov
test
popf
les
(bad)
push
aam
enter
lock
fstp
aad
push
in
(bad)
add
mov
inc
add
pop
sbb
xor
xchg
fcomp
sti
pop
movs
push
loopne
and
fild
jbe
test
or
inc
sbb
pop
imul
or
push
jmp
push
daa
js
in
call
adc
dec
out
push
(bad)
(bad)
xchg
pop
stc
xor
cmp
mov
mov
mov
cwde
xchg
(bad)
ja
js
bound
pop
fs
test
or
push
in
push
push
push
cs
mov
fsubr
hlt
xchg
mov
in
inc
hlt
or
adc
dec
pop
xor
push
xor
cmp
mov
dec
jmp
cwde
pop
jo
dec
(bad)
fild
shl
mov
add
ret
push
mov
je
xor
inc
push
mov
outs
pop
(bad)
ss
leave
out
cmp
add
push
sbb
dec
in
ror
into
aaa
pop
rcr
pop
not
mov
hlt
pop
movntps
in
pop
aas
in
imul
push
inc
into
jbe
je
daa
sub
fsubr
jne
mov
ss
ja
pop
jns
jp
jl
(bad)
inc
xchg
aaa
mov
inc
push
or
sub
add
adc
inc
pop
add
mov
fisub
or
push
push
push
ins
add
inc
in
push
outs
pop
mov
inc
(bad)
fwait
in
pop
rcr
cwde
and
mov
sub
out
in
adc
add
dec
add
xor
les
ss
lods
fisttp
mov
push
jbe
push
clc
in
pop
lock
data16
pop
addr16
fild
sbb
dec
bound
mov
mov
pop
outs
pop
jl
add
jg
pop
cmp
int3
ins
nop
cmp
fs
fisttp
dec
test
push
pushf
jp
xor
push
shl
std
or
and
inc
and
or
in
jg
outs
in
or
mov
(bad)
push
or
push
mov
xchg
test
ja
pusha
popa
mov
dec
fmul
add
push
pop
pop
or
js
jl
scas
pop
in
mov
adc
ja
xchg
push
hlt
mov
int3
jl
inc
jg
push
cmp
in
ins
push
test
mov
ins
xchg
cld
xchg
push
lods
xchg
lahf
cmps
stc
xor
pop
xchg
nop
lods
and
fldcw
lahf
xor
push
call
pushf
scas
div
push
mov
lock
les
retf
xlat
push
int3
in
jmp
fdivrp
cmps
std
push
inc
add
push
data16
in
cwde
cs
aaa
mov
ins
lods
dec
fs
sbb
aam
div
fwait
int
push
pushf
jo
jbe
int
push
add
mov
push
add
mov
mov
inc
xor
andps
call
cld
mov
movs
cmp
ins
ss
sub
jbe
mov
fdiv
movs
ret
ret
push
xchg
fadd
ror
lds
(bad)
dec
pop
in
cs
daa
pop
aam
ja
pop
push
xchg
ins
push
int3
pusha
jo
pop
aam
shl
into
push
pcmpeqb
daa
das
push
sti
neg
sub
pushf
inc
mov
adc
pusha
xchg
push
in
hlt
add
(bad)
and
cmp
push
cld
push
sub
clc
add
data16
out
push
cld
or
push
adc
cmps
daa
ins
popf
pop
adc
int3
pop
xchg
iret
sahf
pusha
pop
and
mov
imul
push
pop
clc
pop
push
xor
push
xchg
mov
ins
repz
dec
push
das
lock
in
in
pop
lahf
call
out
aaa
and
push
push
push
mov
mov
fcmovne
into
iret
push
push
push
das
fld
(bad)
push
das
hlt
in
in
outs
pop
jae
cmps
or
jg
cmps
arpl
div
fmul
jl
push
lock
fistp
sti
xchg
inc
xchg
push
or
mov
mov
add
mov
cmps
ins
into
wrmsr
mov
mov
enter
in
sbb
shl
xor
fiadd
daa
mov
sbb
fsub
cwde
mov
mov
dec
push
test
ins
rcr
div
fwait
ret
add
lds
loopne
xchg
idiv
mov
mov
loopne
ja
retf
push
fdiv
cwde
adc
push
adc
and
ds
test
jnp
and
ds
repz
(bad)
cwde
push
push
sub
xor
fwait
dec
repz
ins
ss
xor
xor
xor
cmp
cmps
fnstenv
in
push
add
ins
out
ins
ss
xchg
and
sub
mov
mov
mov
push
inc
dec
or
dec
es
sti
outs
pusha
cmps
xchg
lock
push
div
push
pop
mov
and
fcomip
push
xor
jo
mov
rol
outs
test
dec
idiv
mov
push
push
shr
mov
push
mov
aam
test
hlt
mov
ins
out
and
and
movs
and
sub
jge
int
mov
xor
fbstp
and
cmp
outs
fldcw
inc
push
rol
dec
call
ins
outs
mov
dec
dec
push
dec
push
push
fcom
push
mov
jl
jo
push
push
fs
inc
pop
pushf
pop
jnp
jnp
sbb
push
popa
out
push
adc
imul
dec
repz
ins
and
outs
push
inc
js
ins
xchg
jge
jg
push
cld
jns
pop
sbb
push
push
push
mov
jnp
adc
push
push
mov
mov
fsub
jle
je
push
xchg
push
mov
outs
pushw
cwde
stos
push
lods
aaa
pop
popf
ins
ds
push
add
pop
rol
das
dec
int
lock
shr
push
mov
sbb
ds
rcl
push
fucomip
fiadd
push
loop
in
out
jmp
mov
out
push
lock
icebp
mov
fld
cmc
mov
dec
neg
mov
push
loopne
sbb
imul
lds
push
aam
add
inc
xlat
push
(bad)
mov
push
pop
clc
push
mov
jbe
push
pusha
in
in
inc
sub
push
emms
pop
push
cmp
add
lds
movs
dec
add
mov
pop
and
cld
fstp
and
jo
pop
cmps
aas
dec
mov
push
dec
cmpxchg
add
pop
scas
mov
(bad)
sar
push
sub
add
inc
push
imul
pop
cmp
mov
fs
ds
dec
mov
sbb
mov
sahf
cmps
stc
push
and
push
ss
ja
push
push
inc
not
push
aam
neg
clc
fcmovnb
out
xor
add
pop
cmps
test
int3
sub
dec
sub
call
test
push
push
push
adc
cmp
and
lahf
ja
xlat
push
jl
mov
cmp
push
shl
sar
int
es
or
mov
fdecstp
int
pop
push
inc
arpl
jl
sub
mov
inc
or
pop
add
nop
ja
shr
or
xor
lds
pop
aam
int
inc
push
adc
pop
test
push
mov
push
rcl
ror
pop
adc
pop
or
ja
or
inc
pop
(bad)
adc
push
add
mov
les
adc
test
nop
mov
mov
mov
mov
shr
push
xor
mov
stc
push
xor
inc
mov
ret
push
xchg
enter
ins
add
(bad)
aad
xlat
test
scas
in
aam
push
add
movs
out
aas
xor
es
dec
repnz
push
push
call
fadd
push
add
lods
or
(bad)
and
fistp
hlt
icebp
sub
pop
aas
lahf
out
in
mov
push
(bad)
xchg
sub
mov
repz
mov
bound
jbe
ror
push
mov
fmul
jl
mov
mov
push
call
and
fcmovbe
cwde
aas
pop
call
push
push
cmps
rcr
in
push
pop
lahf
fs
ins
ss
mov
mov
out
mov
push
test
push
adc
fsubrp
das
test
loopne
cld
xor
daa
dec
stos
into
mov
mov
mov
push
jo
daa
cld
mov
push
inc
mov
xchg
mov
out
ss
rcr
xor
adc
lods
or
clc
and
push
push
pop
les
jbe
fnstcw
(bad)
pusha
(bad)
sbb
ss
push
sub
js
in
retf
out
loope
out
fcmovu
loopne
pop
sbb
push
mov
ror
dec
repz
jl
in
cmp
push
cwde
mov
repz
lock
add
mov
cmp
add
push
mov
push
sub
int
mov
pop
jl
dec
push
dec
and
ins
cmp
mov
and
push
push
and
fs
cs
inc
inc
shl
jb
xor
xor
pop
aas
adc
mov
push
xchg
aaa
(bad)
cmc
inc
ins
mov
push
cmps
fnstcw
call
in
imul
dec
stos
and
push
pop
scas
dec
mov
cwde
mov
ds
mov
movs
push
or
mov
outs
fcmovne
das
jl
push
cld
rol
in
rcr
aam
mov
jnp
(bad)
mov
pushf
jecxz
add
jmpw
out
outs
adc
inc
mov
in
push
adc
pop
fisub
jbe
push
fdivr
xor
ds
push
pop
pop
test
mov
add
mov
das
pop
ins
ja
cmp
add
dec
cmp
pop
loopne
push
fdiv
push
inc
fs
push
hlt
gs
pop
data16
imul
adc
sahf
push
sbb
xor
test
inc
push
inc
pop
sub
push
inc
dec
aam
pusha
mov
stos
cs
push
loopne
push
pop
nop
pusha
out
sub
bound
mov
addr16
int
arpl
jo
pusha
mov
lods
fisttp
mov
mov
xchg
aaa
lds
add
pop
sbb
pop
ins
push
mov
sub
mov
dec
sysret
adc
sub
or
ins
ror
push
add
push
pop
pop
mov
or
(bad)
aas
and
push
or
aaa
inc
mov
in
std
add
mov
daa
pop
aas
push
sar
push
adc
add
and
inc
mov
mov
dec
inc
adc
dec
cwde
int
mov
lods
pop
loopne
nop
(bad)
clc
arpl
adc
jbe
pop
les
ins
psubusb
aaa
sbb
addr16
mov
mov
pop
addr16
lahf
ins
xchg
pop
js
das
rol
push
in
ss
scas
popf
mov
push
add
inc
std
enter
shr
call
add
sar
mov
push
or
push
(bad)
fwait
popf
mov
pop
lock
add
pop
and
fsubrp
mov
cmp
or
cwde
push
mov
int3
cmp
in
(bad)
daa
pop
push
loopne
sbb
jg
bound
xchg
into
les
pop
movs
out
cmp
fucom
push
pop
lods
out
js
mov
imul
push
movs
call
mov
out
add
inc
psubusb
sahf
xchg
in
mov
out
mov
cmp
xor
pushf
aaa
clc
sysret
out
jbe
cmp
push
push
pop
inc
icebp
outs
push
lea
rol
aaa
mov
fsub
mov
sbb
jmp
adc
pop
and
outs
or
test
(bad)
fistp
jg
push
xchg
pop
pop
in
mov
mov
in
fistp
in
add
out
dec
fs
push
jl
mov
jbe
sysret
dec
lock
pusha
(bad)
mov
pop
cwde
(bad)
aam
mov
clc
adc
xor
pushf
pushf
jo
pop
test
jnp
mov
or
dec
pop
cmp
and
clc
repz
pop
ja
push
push
xor
pop
jo
aas
repz
mov
sysret
sbb
push
sub
dec
cli
fisubr
ror
xchg
cwde
sti
inc
mov
scas
mov
pop
push
daa
test
sbb
push
sub
ret
into
repz
pop
pop
call
or
jo
scas
aaa
ins
ins
fisubr
pop
aam
push
outs
ficomp
add
inc
push
jl
pop
stos
loope
sbb
scas
add
push
mov
dec
stos
mov
out
out
mov
mov
inc
push
rcr
push
or
fdivr
add
cmp
push
enter
push
sub
daa
aaa
sti
outs
scas
nop
push
int3
pop
in
push
xor
pop
dec
push
mov
pop
pop
shl
or
mov
lods
out
pop
aam
stos
int
ds
push
in
pusha
or
push
push
ss
fisub
xor
jo
pop
xchg
pop
aad
push
mov
daa
sbb
push
mov
adc
sahf
push
add
inc
in
push
dec
pop
js
inc
mov
pop
mov
add
xchg
add
push
mov
or
out
jl
push
lods
adc
or
jnp
addr16
and
adc
push
fnstenv
push
cmp
pop
mov
enter
out
scas
scas
push
hlt
push
inc
sbb
push
cwde
hlt
cmp
out
inc
sbb
pop
ins
mov
and
push
push
cwde
call
scas
xor
mov
sar
xchg
clc
loopne
cmps
push
xor
popf
out
ds
sbb
pcmpeqb
inc
pop
push
pop
fmul
pop
fstp
push
push
ins
inc
(bad)
sub
jnp
dec
cld
push
ror
scas
inc
ins
xchg
mov
das
call
pop
addr16
xor
shr
inc
lahf
ja
repz
mov
add
ss
xor
inc
outs
push
push
aaa
mov
stc
pop
mov
cmp
inc
pop
inc
mov
call
dec
xchg
push
push
cwde
push
xchg
ins
mov
push
in
push
xor
pop
xchg
pop
jle
push
push
stc
outs
or
fiadd
cwde
pusha
pusha
popa
and
out
fsubp
adc
test
ins
fs
push
push
mov
data16
xlat
fdivr
pop
inc
mov
(bad)
(bad)
movs
add
and
test
fxch
into
jbe
push
data16
pop
imul
xor
out
xchg
jbe
stos
(bad)
adc
pop
daa
scas
ins
repz
sub
push
jo
sub
cs
fimul
loopne
xor
xor
push
push
inc
pop
dec
mov
dec
cs
push
sbb
lock
out
inc
in
loope
jmp
inc
add
mov
into
add
or
js
clts
xchg
xor
pop
pop
clc
mov
mov
push
enter
retf
popf
data16
in
cmp
pop
lea
imul
cwde
cmp
popf
(bad)
(bad)
cdq
push
int3
das
and
ret
jbe
adc
nop
mov
fst
push
cmp
inc
cmp
push
addr16
dec
test
push
ins
mov
fs
cs
push
addr16
mov
push
dec
fs
aaa
daa
js
rcl
aaa
pop
inc
inc
ins
inc
push
stc
xor
int
inc
push
inc
or
jl
fistp
lock
dec
pop
fs
(bad)
fwait
scas
cmp
dec
call
dec
and
ss
out
xchg
mov
jo
sub
scas
in
(bad)
ficom
mov
pop
or
push
xor
dec
data16
cmp
lods
push
adc
push
ss
out
and
xchg
xchg
in
movs
pop
mov
pushf
sbb
data16
push
fnstenv
outs
push
inc
jo
push
popa
mov
ins
push
add
jns
push
nop
jge
jl
inc
pop
mov
jbe
or
pop
push
sub
ja
movs
popf
jb
mov
into
dec
push
das
js
push
inc
lahf
push
js
int3
outs
sti
data16
mov
push
mov
dec
mov
push
js
add
xchg
aas
and
ins
out
mov
dec
test
push
lods
push
enter
mov
xor
mov
fcomp
rol
movs
ret
mov
out
fwait
les
push
clc
cld
rcr
enter
mov
fwait
out
mov
cs
xchg
xor
dec
pop
ret
pop
push
outs
push
dec
push
mov
data16
push
pop
iret
repz
cmp
push
push
inc
mov
hlt
shr
push
pop
push
push
jns
ja
int3
add
sahf
push
jl
cld
iret
rep
repz
jbe
jl
clc
lahf
out
ds
js
hlt
sub
iret
repz
cwde
aam
pop
dec
ja
out
mov
clc
cmp
push
jl
ja
aam
pop
test
fcomp
pop
imul
ror
pop
dec
sahf
ja
out
in
pop
pop
push
xchg
aam
cmps
fnstcw
jo
mov
mov
add
xor
test
aas
or
add
sysret
push
mov
adc
and
shl
push
push
sets
test
sub
test
das
and
daa
fcom
movs
rcl
dec
mov
cmp
nop
sbb
enter
ins
fstp
mov
pop
xlat
push
fsub
fnstcw
fiadd
pop
fisttp
adc
jbe
jbe
fsubp
mov
jecxz
jmp
lock
push
mov
ins
clc
scas
inc
dec
add
idiv
ret
cs
push
and
push
lds
shr
rol
(bad)
aaa
push
mov
pop
imul
out
adc
or
shr
lds
mov
lahf
lods
data16
mov
push
test
push
mov
adc
aad
idiv
int
fdivr
fisubr
jecxz
in
mov
xor
fstp
out
call
out
idiv
iret
push
and
push
mov
repnz
push
or
pop
neg
not
push
lahf
ja
jge
pop
sti
push
push
cmp
push
push
mov
std
fldcw
dec
add
adc
adc
ror
and
test
ins
fld
push
enter
sbb
movs
pop
and
mov
push
mov
pop
inc
mov
jg
dec
push
inc
outs
ja
ins
outs
popa
fs
dec
fs
push
push
push
dec
movs
sti
(bad)
mov
outs
push
push
jns
je
ins
cs
jns
sbb
fisttp
outs
outs
adc
adc
imul
cmp
or
je
imul
sbb
pop
inc
outs
(bad)
imul
mov
arpl
sbb
inc
gs
jne
int
out
fbld
popa
jo
cs
push
dec
sub
loopne
dec
inc
gs
pop
sbb
jnp
mov
push
popa
and
pop
inc
fidiv
jb
ins
cs
js
xor
jbe
mov
push
popa
push
cmp
pop
shl
dec
nop
inc
pop
dec
aas
add
popa
pop
dec
ins
popa
addr16
ins
jo
dec
popa
je
adc
or
pop
inc
mov
outs
or
mov
loop
adc
imul
bound
or
add
adc
ins
push
inc
dec
mov
popa
sbb
add
jbe
pop
std
int
mov
add
jae
or
imul
jne
arpl
scas
inc
mov
loopne
xor
pop
push
imul
xor
push
gs
pop
sbb
dec
bound
xchg
inc
xchg
outs
inc
mov
adc
ret
jb
je
arpl
jae
stc
imul
or
sub
imul
div
pop
inc
adc
cli
jo
jb
sub
sbb
dec
imul
cs
ret
push
adc
sbb
(bad)
les
inc
dec
or
pop
or
push
inc
inc
jb
sbb
ficom
mov
xor
or
mov
gs
icebp
dec
jne
bound
adc
jmp
addr16
jb
dec
or
or
sbb
shl
sbb
sbb
inc
fs
rcr
shr
xor
cwde
fbld
or
js
jo
inc
jne
sub
push
jbe
sub
dec
inc
cs
out
jle
dec
dec
dec
inc
pop
xor
sub
jo
inc
jno
movs
add
add
xlat
call
or
cmps
and
xlat
pusha
inc
pop
unpckhps
in
xchg
inc
push
cmc
jmp
and
sbb
clc
xchg
(bad)
(bad)
mov
mov
scas
popa
ds
pop
dec
push
dec
dec
mov
xor
or
push
adc
xor
mov
sub
mov
or
inc
dec
sbb
in
push
sbb
je
arpl
movs
(bad)
and
bndstx
pop
inc
xor
adc
push
je
call
ins
adc
sub
adc
loopne
shl
les
push
leave
retf
inc
popa
jo
jne
mov
inc
jne
data16
xor
mov
dec
outs
fs
jb
mov
cmp
jne
mov
pusha
jno
mov
pop
mov
inc
inc
adc
inc
push
ja
gs
adc
mov
and
cmp
inc
adc
mov
push
test
je
dec
sbb
sub
js
test
outs
jae
push
arpl
jle
inc
mov
mov
adc
shl
retf
test
sbb
bound
or
xchg
bound
mov
stos
je
and
jmp
mov
shl
or
xchg
add
or
push
js
mov
ins
cs
lea
mov
dec
ins
addr16
je
inc
ds
sub
sbb
adc
pop
dec
dec
sbb
cmp
mov
sub
push
jne
jns
fs
or
mov
dec
jo
adc
xchg
inc
inc
jb
(bad)
ja
rol
(bad)
fsubr
dec
popa
mov
cmp
test
sbb
cmp
pop
sbb
xor
jo
js
in
jbe
(bad)
rol
adc
mov
jo
push
pop
push
sub
sbb
inc
lock
jb
or
inc
inc
push
pop
clc
or
or
bound
ret
jb
ins
loop
aad
and
cmp
add
jp
sub
cwde
arpl
mov
mov
daa
shl
push
push
ins
cmovge
or
adc
enter
pop
or
add
scas
das
cs
adc
gs
inc
ins
stos
leave
adc
jmp
inc
add
mov
mov
xchg
movs
ins
push
sub
fldenv
mov
push
xchg
push
outs
xchg
jo
and
inc
sahf
push
inc
add
xchg
or
scas
sub
mov
fsubr
mov
add
pop
rol
push
push
add
add
enter
push
push
adc
aas
dec
(bad)
mov
fwait
jno
push
and
sub
call
daa
jge
cmp
dec
push
dec
dec
ss
jo
lds
jo
mov
pop
mov
ret
aas
xchg
inc
cmps
test
in
xor
jge
mov
add
cs
and
fcmovu
pop
cs
ficom
jbe
lahf
loop
loop
xchg
dec
push
push
fidiv
into
add
scas
pushf
jno
add
jnp
mov
mov
and
xor
outs
fisttp
push
scas
mov
sub
inc
push
nop
pop
pop
aaa
pop
sub
add
call
je
(bad)
in
pop
out
call
test
sub
xchg
es
stos
mov
pop
sub
sub
fsub
mov
adc
sti
cmps
and
xor
xor
adc
or
add
retf
lock
mov
jp
cmps
push
push
dec
js
fcom
jb
imul
add
cmp
add
mov
das
in
movs
push
clc
cs
imul
sub
push
adc
int3
jne
mov
addr16
dec
ins
or
jmp
pop
jne
adc
push
pusha
ret
rcr
les
outs
std
sub
inc
out
push
mov
rcl
sbb
aas
inc
ins
jne
scas
pop
push
lea
mov
stos
mov
and
cmps
sub
dec
inc
pop
and
jo
push
into
push
inc
push
push
jno
das
ins
sub
inc
jno
imul
jo
push
dec
inc
xor
adc
out
push
retf
mov
sbb
movs
pop
sbb
xor
jns
movs
fld
xchg
ret
adc
inc
dec
sub
addr16
adc
add
fisub
mov
adc
dec
in
std
aas
and
add
jae
clc
sbb
add
test
push
sbb
cld
mov
mov
and
scas
popf
int3
xor
adc
dec
retf
les
mov
in
xor
push
or
leave
div
and
ds
mov
push
cmp
cmp
and
adc
add
mov
cmp
fadd
fcmovne
cmp
data16
push
jo
or
add
je
shl
cs
adc
movs
mov
addr16
in
fwait
jge
mov
loopne
adc
aas
clc
jg
outs
pmovmskb
outs
(bad)
pop
add
ret
nop
add
sub
test
push
xor
and
xor
mov
sbb
pusha
(bad)
push
sbb
push
cld
out
outs
pop
ret
pop
lods
sbb
pop
add
adc
cmp
std
repz
mov
and
mov
dec
in
sub
(bad)
jnp
jl
mov
add
test
mov
cmp
xchg
mov
jg
in
out
pop
icebp
mov
clc
xchg
mov
in
push
jg
adc
mov
inc
jle
mov
mov
mov
fimul
push
or
and
lea
or
add
adc
mov
outs
add
js
mov
dec
push
ins
push
cmp
popf
loop
cmp
xor
sbb
sub
je
test
mov
aaa
sub
jb
je
dec
je
sub
and
in
dec
into
jle
add
xchg
sbb
cmp
leave
mov
arpl
xor
mov
in
sub
daa
fldcw
popa
pusha
mov
cmp
in
add
fwait
pop
pop
je
and
jo
and
or
cmp
jmp
and
popf
loop
(bad)
jne
inc
sub
xchg
es
into
pop
hlt
test
aaa
int3
jae
maxps
and
(bad)
out
js
dec
loopne
mov
add
pop
xor
push
fcom
pop
ror
test
mov
(bad)
shl
or
xor
hlt
cmp
mov
mov
push
mov
sbb
fadd
inc
sbb
les
add
hlt
int3
shr
cmc
out
jmp
mov
add
mov
inc
and
add
pop
pop
pop
cld
adc
cmps
cdq
push
jg
ret
dec
add
ret
mov
cmps
add
mul
fwait
out
add
mov
cmp
mov
js
aas
lahf
neg
mov
pop
adc
lods
cli
jno
jge
mov
push
mov
sub
mov
and
sbb
repnz
sbb
inc
xor
pushf
sub
ret
sbb
sbb
inc
lock
add
(bad)
repnz
rcr
es
push
in
not
mov
in
sbb
pop
xor
pop
cld
ret
fistp
xchg
test
bound
movs
mov
test
in
ss
out
fwait
adc
inc
shr
lods
dec
mov
lea
mov
stc
mov
je
sub
and
jo
retf
test
sbb
hlt
dec
and
or
inc
hlt
mov
pop
rcr
sbb
pop
dec
lock
pop
xchg
mov
out
inc
xchg
adc
jo
jl
retf
fwait
add
sub
ins
mov
jl
cmp
jmp
add
xchg
clc
cmc
pop
stc
out
pcmpgtb
and
mov
push
jl
dec
xchg
mov
rcl
call
lea
adc
ds
xchg
outs
push
sbb
cmps
cmova
pop
pop
push
and
inc
mov
adc
add
das
sub
add
jae
add
adc
cmp
test
pop
ja
addr16
test
dec
sbb
(bad)
sbb
jecxz
iret
mov
mov
dec
mov
std
jg
push
add
cmp
or
mov
outs
pop
fs
mov
das
add
xchg
xor
mov
inc
mov
push
push
push
mov
arpl
lods
xor
bound
sub
psubusb
aas
adc
mov
sub
mov
pop
mov
adc
xchg
mov
enter
push
leave
data16
into
add
sub
enter
jnp
adc
push
add
cmp
jb
pushf
adc
add
xchg
daa
dec
sahf
adc
adc
adc
jns
in
push
or
or
or
sahf
cmp
mov
and
and
in
xchg
adc
adc
adc
adc
sub
cs
xor
xor
in
xchg
daa
xor
sbb
sbb
cmp
repnz
cmp
repnz
adc
inc
ds
jl
and
pop
sub
mov
pusha
mov
div
cmp
not
div
out
rcl
adc
adc
fadd
adc
mov
not
not
pmaxsw
cmp
neg
cmp
not
not
pop
mul
push
not
not
imul
sar
adc
adc
adc
mul
push
fcom
not
not
sar
adc
pmaxsw
adc
adc
adc
push
fadd
dec
popf
push
div
adc
adc
xor
int
inc
enter
adc
dec
popf
inc
dec
sub
dec
nop
fsub
xor
push
push
hlt
mov
enter
push
into
sub
lock
push
call
(bad)
cmp
mov
fist
or
push
lock
(bad)
leave
popf
or
in
pop
(bad)
jecxz
ds
lahf
mov
clc
in
in
lods
add
xchg
cdq
dec
mov
test
cmp
setge
push
add
add
inc
and
fmul
test
jne
mov
jg
daa
dec
mov
in
cmp
adc
and
fild
xchg
leave
sbb
mov
lods
inc
cmp
sub
mov
rol
ror
adc
mov
loop
sbb
push
or
push
cdq
sbb
mov
int3
or
shr
jg
push
and
mov
fistp
clc
cmps
js
mov
push
push
adc
in
or
sub
and
and
mov
cmp
sbb
in
lods
mov
push
cmps
and
adc
js
or
mov
sti
outs
lds
call
pop
mov
sub
mov
adc
cld
or
mov
movaps
adc
test
cld
(bad)
ror
or
(bad)
fsub
cmp
xchg
xor
mov
push
xchg
loopne
adc
mov
cmp
in
push
dec
pop
fisttp
or
jne
(bad)
cli
mov
xchg
cdq
sbb
nop
pop
add
nop
add
sub
xor
adc
add
sar
in
cmp
mov
adc
mov
push
and
dec
lods
jg
pusha
test
mov
es
and
adc
das
in
jmp
xchg
jne
mov
test
sbb
pop
pop
fadd
xchg
std
psubd
addr16
cmp
setae
pop
or
sub
pop
push
mov
or
fsubr
bound
add
test
push
stos
jo
push
cmps
fs
or
cmp
sti
push
adc
mov
nop
or
in
pop
pushf
mov
out
movs
adc
push
inc
loopne
mov
clc
jg
jmp
mov
jg
call
jg
stos
aas
cwde
jg
or
jg
(bad)
addr16
bound
lods
cmps
dec
lahf
jmp
and
add
fs
push
imul
ret
sub
cmc
jg
inc
add
ins
add
imul
mov
je
add
add
fnstenv
outs
lock
outs
cs
xchg
pushf
push
add
mov
jmp
aas
sar
cld
mov
cmc
push
push
es
retf
adc
xor
adc
lahf
shl
adc
jbe
test
or
test
dec
loopne
(bad)
xor
pop
mov
push
or
ins
and
mov
mov
pusha
inc
push
sub
mov
aaa
pop
and
data16
ret
add
dec
sbb
cmp
xor
les
into
mov
xchg
xchg
xchg
push
pop
pusha
dec
mov
loopne
int3
fisttp
xchg
in
push
sbb
in
loop
inc
pop
xor
xchg
ret
mov
xlat
pop
push
mov
sbb
push
dec
imul
push
xor
test
pop
adc
in
sti
out
and
or
mov
jo
mov
push
cmp
leave
cld
out
or
pop
inc
(bad)
mov
push
xchg
ret
add
leave
bound
scas
add
sub
xchg
jl
pop
adc
xor
ret
mov
add
sub
pop
xor
loop
cmp
test
js
imul
add
sbb
out
push
aam
das
mov
les
xchg
mov
cld
xlat
aas
clc
retf
shr
adc
aas
aam
mov
lds
cmp
push
daa
sti
cmp
inc
push
and
mov
push
test
aad
push
retf
mov
inc
out
add
push
cs
xchg
inc
inc
dec
jne
lea
cmp
pop
mul
inc
clc
(bad)
lods
aas
add
push
mov
sbb
jne
cld
mov
fst
sub
push
sub
and
mov
test
out
mov
mul
or
pop
enter
mov
mov
outs
mov
push
imul
jmp
in
mov
out
or
sar
fwait
add
add
pop
inc
push
push
push
lea
retf
fwait
inc
add
mov
sub
clc
cmp
hlt
jg
data16
push
cmc
push
test
add
mov
shl
inc
icebp
repnz
push
fidivr
cmps
stos
das
in
loopne
in
push
out
push
out
pop
in
sti
fdivp
sub
push
jmp
cs
out
call
push
out
out
idiv
push
mov
push
loop
jecxz
pop
mov
fsubr
loopne
call
(bad)
ficom
fcomip
fidiv
ins
fsub
(bad)
fiadd
add
fmul
sub
inc
pushaw
lea
mov
mov
mov
mov
fs
cmp
nop
pop
adc
dec
test
adc
enter
cwde
cdq
add
cmps
dec
cwde
mov
jb
mov
cmp
mov
dec
add
add
or
inc
or
repz
jbe
sub
dec
and
lock
push
sbb
and
or
(bad)
in
scas
fidiv
pop
ins
push
loopne
and
mov
mov
sar
pop
pop
push
es
xchg
xchg
out
push
mov
clc
out
xchg
fsub
or
adc
cmps
mov
dec
cld
jo
mov
and
clc
or
sahf
adc
mov
push
sbb
fistp
pop
cld
bound
pusha
sub
xor
adc
inc
or
pop
ins
adc
push
jp
mov
jmp
ss
test
(bad)
(bad)
adc
mov
jo
add
pop
and
mov
jl
or
add
and
xchg
sti
xlat
out
pop
or
dec
movs
div
xor
dec
aaa
dec
imul
and
or
lods
and
or
jg
mov
add
pop
loopne
test
sub
mov
leave
dec
pop
or
movs
and
sbb
fsubr
mov
pop
adc
add
mov
es
sbb
xchg
ror
dec
inc
aas
xor
sbb
daa
inc
push
add
push
dec
test
sub
xor
mov
jle
test
fwait
popa
dec
jno
mov
arpl
aas
adc
jl
sub
hlt
push
sbb
inc
not
cmps
cmp
cmp
inc
xchg
mov
fisttp
shl
sub
or
pop
cmp
cmc
sub
xor
or
fiadd
inc
add
inc
dec
addr16
(bad)
dec
dec
daa
pop
jb
adc
or
(bad)
out
not
fnsave
aaa
push
jmp
mov
(bad)
pop
in
and
daa
test
pop
js
jge
pop
cdq
lock
pusha
sbb
retf
jae
call
in
repnz
sahf
jo
ins
inc
js
and
jl
sbb
enter
mov
enter
mov
pushf
test
cs
in
lods
adc
dec
mov
retf
jae
pusha
mov
inc
mov
daa
(bad)
enter
in
rcl
push
cmp
nop
fcomp
loopne
out
mov
in
jo
out
pop
xlat
or
sbb
sahf
scas
or
mov
loopne
xor
dec
xor
nop
ins
daa
pop
adc
inc
addr16
add
lahf
les
out
adc
inc
stos
adc
dec
movs
jae
iret
cdq
inc
pop
adc
mov
call
out
sub
fcom
hlt
cmp
add
nop
push
sti
mov
push
push
mov
adc
div
int3
lds
adc
or
push
mov
and
sub
retf
in
push
retf
or
scas
jo
cld
jl
fld
xchg
lock
lds
jl
pop
push
adc
pop
fst
adc
call
mov
call
fs
and
in
adc
push
jae
mov
in
xchg
push
xadd
dec
jne
ror
cmp
mov
inc
cmp
push
or
push
or
in
mov
pop
sbb
movs
push
dec
loop
cmp
ins
and
add
pop
call
push
inc
sub
or
mov
mov
imul
push
int3
push
mov
push
and
sub
add
mov
fmul
out
cmp
mov
call
inc
xlat
in
fiadd
push
jo
sbb
bound
pop
pop
dec
or
or
bound
dec
sbb
out
pop
jae
mov
mov
inc
push
xchg
cdq
xor
inc
and
sbb
pop
push
pusha
push
cdq
(bad)
rcr
lahf
and
fstp
add
add
xchg
xor
int3
cdq
cdq
out
or
bound
loopne
ror
sub
dec
adc
xor
push
ss
rcr
jp
sub
inc
fcom
adc
add
mov
add
jae
ds
add
or
xchg
push
int3
add
add
bound
(bad)
ins
pop
ds
fmulp
fdiv
in
or
and
lods
fild
dec
mov
out
mov
outs
aas
ds
inc
push
jmp
fucomp
dec
or
cwde
sbb
daa
aaa
repz
push
dec
or
movs
shl
pop
fs
jle
rol
mov
adc
das
or
popa
fisubr
pushf
retf
cs
addr16
jo
fld
dec
bound
pop
xchg
scas
xchg
ds
jo
push
mov
add
cmc
cli
lods
jmp
push
cld
mov
das
pop
cmp
mov
push
and
retf
push
clc
cmovne
call
add
push
call
mov
clts
loopne
fdiv
inc
punpckhwd
mov
fiadd
call
mov
mov
mov
in
dec
mov
sti
or
sahf
add
mov
les
inc
mov
div
ret
fs
jmp
jmp
ret
outs
add
mov
mov
pop
ds
lsl
je
shl
mov
xor
sub
data16
jg
adc
jmp
mov
and
xor
pushf
loopne
ret
dec
pop
das
push
in
fstp
xchg
xchg
adc
fwait
push
cdq
aad
and
das
imul
cmp
ds
jg
popa
pushw
pop
jle
inc
outs
inc
mov
fdivr
add
jmp
outs
loopne
aaa
mov
xchg
push
cmps
or
xchg
mov
dec
jp
pushf
arpl
dec
mov
xor
xor
aam
std
inc
or
pop
gs
gs
add
jo
xor
rol
jg
adc
add
xchg
xor
mov
pop
xor
xchg
aaa
fcom
and
dec
xchg
mov
xor
nop
sub
je
cmp
cs
cld
out
out
ss
pusha
in
(bad)
mov
out
neg
repz
mov
aad
clc
retf
retf
mov
ror
or
in
call
scas
rcr
sbb
lock
retf
retf
(bad)
rcl
in
call
int
dec
and
xor
loope
nop
adc
call
stc
mov
test
in
sub
call
mov
fwait
retf
xchg
sbb
call
xor
je
mov
fdivrp
inc
ret
dec
fadd
inc
jecxz
adc
jmp
mov
fwait
call
sub
scas
cmp
jmp
ficom
std
inc
xchg
xor
jecxz
push
ins
sbb
dec
sbb
and
jb
(bad)
(bad)
call
inc
movs
call
pusha
fcomp
(bad)
in
xchg
sbb
sbb
les
(bad)
adc
std
(bad)
jmp
push
jmp
or
add
xchg
and
bound
out
shr
mov
push
jecxz
inc
mov
jnp
or
push
rcr
mov
or
mov
dec
clc
(bad)
(bad)
js
outs
(bad)
cli
les
push
es
adc
ror
and
test
sbb
push
dec
and
icebp
shr
rcl
sub
sbb
pop
cli
in
sbb
jge
cmp
lahf
inc
sbb
arpl
ret
fdivr
inc
sbb
push
fld
sbb
sar
pop
inc
sbb
jl
ffree
mov
cmp
inc
inc
mov
jno
pop
or
push
fldenv
(bad)
inc
or
cmp
(bad)
mov
mov
dec
mov
pusha
sub
pop
mov
(bad)
(bad)
(bad)
call
cmp
(bad)
scas
add
pop
mov
ins
jns
je
popf
xor
adc
push
mov
(bad)
(bad)
jmp
mov
aaa
and
and
dec
ffreep
jmp
add
imul
out
pop
push
xchg
addr16
pusha
jno
xchg
sar
cld
pop
test
ffree
imul
fs
xchg
pop
inc
or
adc
xchg
pop
js
inc
xchg
arpl
push
pop
inc
inc
xchg
cmp
loope
sub
movs
inc
push
sub
xchg
out
xchg
pop
inc
sub
cwde
ins
retf
sti
loopne
xchg
inc
inc
cmp
call
fadd
iret
dec
div
ins
or
hlt
call
pop
scas
jmp
inc
mov
inc
lds
inc
ins
lods
popa
(bad)
cmp
add
or
inc
call
and
js
nop
lods
sbb
lods
add
jg
(bad)
(bad)
(bad)
(bad)
fisubr
add
dec
pop
dec
mov
(bad)
xchg
add
xchg
mov
inc
mov
dec
ds
xchg
mov
inc
ins
inc
mov
adc
stc
loop
jmp
inc
jb
outs
clc
(bad)
(bad)
fadd
(bad)
cmp
push
dec
lea
test
pop
jmp
(bad)
(bad)
mov
and
xchg
jb
mov
jmp
add
mov
add
ret
test
fisubr
das
and
repz
aas
in
out
in
sub
adc
jnp
mov
push
or
lock
aas
pop
mul
psubb
mov
dec
push
xor
ja
mov
jp
sahf
add
and
fild
cwde
and
mov
sahf
or
push
sbb
add
fistp
sub
jns
test
pop
daa
inc
and
xor
mov
jns
mov
sbb
cmp
jnp
fwait
xor
sub
hlt
outs
iret
xor
iret
inc
(bad)
add
cmps
imul
fs
clc
in
mov
xchg
loopne
sbb
or
jno
imul
adc
out
jecxz
or
mov
xchg
fs
adc
in
add
test
jno
dec
cmc
or
ds
jl
cmp
pop
adc
retf
push
shl
mov
in
fcom
aad
shl
(bad)
cmp
push
add
test
inc
xlat
call
daa
xchg
pop
or
pusha
sub
cmp
inc
call
dec
push
push
jg
jmp
push
call
movzx
bound
dec
sub
lea
ja
dec
pop
push
fs
outs
sub
sbb
pop
shl
es
ins
jge
das
xor
arpl
inc
in
pop
jge
cmps
shl
pushf
call
adc
pop
dec
xor
call
and
push
inc
jmp
(bad)
cmps
mov
add
inc
or
outs
push
push
sbb
icebp
mov
push
mov
or
jmp
iret
mov
adc
and
jmp
fld
fisub
into
movs
cmp
jne
xchg
(bad)
and
pop
dec
inc
add
dec
sbb
add
aaa
rcr
inc
aas
sbb
sbb
sbb
add
das
add
aas
sub
add
aas
xor
add
aas
cmp
mov
in
pop
add
dec
aaa
dec
das
add
aas
push
das
add
xchg
fcmovb
push
add
add
aam
push
mov
add
movs
rol
and
mov
dec
in
pusha
add
mov
pop
add
pusha
add
and
pop
push
add
and
add
and
xor
mov
rol
and
xor
mov
cs
mov
and
loopne
pop
in
add
aas
jo
xchg
pop
and
loopne
jbe
inc
and
jo
shl
in
mov
lock
pop
and
aam
push
rol
aas
jo
mov
jo
add
lods
add
mov
mov
sub
adc
add
daa
add
mov
sbb
push
push
push
call
call
int3
enter
enter
fcomp
fxch
or
std
(bad)
(bad)
(bad)
loopne
jecxz
in
jmp
in
out
outs
jmp
stc
ror
(bad)
aas
fmul
sbb
add
jb
or
or
ret
(bad)
mov
adc
mov
and
sbb
add
mov
mov
es
test
out
sub
mov
xor
leave
sbb
aas
push
mov
jbe
imul
cmp
mov
(bad)
mov
mov
lods
(bad)
lods
inc
inc
jp
mov
xlat
fadd
lods
outs
xor
jmp
int
dec
mov
or
push
push
int3
into
sbb
ror
mov
(bad)
inc
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
ret
mov
fsub
or
mov
add
leave
repnz
(bad)
(bad)
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
(bad)
mov
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
(bad)
(bad)
inc
push
daa
cmp
inc
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
(bad)
(bad)
jmp
push
sbb
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
(bad)
(bad)
(bad)
jmp
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
jg
lock
mov
push
cmps
scas
mov
pop
or
add
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
(bad)
(bad)
(bad)
dec
fsub
addr16
repz
mov
sub
and
and
jne
pop
aad
bound
xor
jb
outs
jb
push
jne
je
ins
and
and
inc
xchg
ja
popa
je
xor
xor
data16
inc
inc
inc
inc
inc
push
and
hlt
xor
out
fisubr
push
or
adc
sar
sub
sub
inc
cmp
repz
push
sub
jns
iret
repz
push
(bad)
repz
xor
test
nop
lahf
push
pushf
cs
fdiv
scas
push
mov
push
shr
adc
iret
pop
(bad)
call
or
push
or
push
(bad)
fisub
cmp
adc
push
sbb
loope
jnp
das
push
pop
pop
aam
or
sbb
pop
push
push
push
sbb
jae
jo
pop
push
xchg
pop
aam
pop
push
neg
add
mov
and
pop
push
int3
pop
mov
fmul
sub
cmovp
mov
outs
sbb
mov
jbe
sbb
jg
xlat
inc
or
mov
cmovbe
hlt
das
push
scas
ret
jne
das
push
jg
push
iret
cmp
maskmovq
div
das
inc
push
das
push
fbstp
in
jo
fild
unpcklps
xlat
loop
mov
sub
pop
cs
lds
push
inc
outs
fadd
cmp
mov
cmp
push
in
sbb
add
(bad)
fild
fsub
(bad)
imul
sbb
adc
mov
(bad)
push
or
or
add
or
(bad)
push
adc
add
and
(bad)
pop
add
sti
in
neg
sbb
or
(bad)
(bad)
sbb
adc
xchg
std
sbb
jmp
aas
test
add
adc
rol
loopne
out
jl
rcr
adc
aam
jl
jnp
aad
(bad)
push
xlat
fadd
sub
data16
test
xor
in
cld
ficom
ja
loopne
loope
push
mov
add
push
bound
pop
jbe
cdq
sub
adc
ins
aaa
popa
adc
punpcklwd
pop
pcmpeqd
xor
jne
push
(bad)
bts
movlps
in
pop
and
push
or
sbb
test
push
add
mov
add
call
push
loopne
jae
call
mov
add
or
in
(bad)
jg
ret
int3
add
jb
dec
bound
(bad)
aas
push
lahf
stos
jmp
cmc
es
xchg
out
cs
ss
and
stc
out
sub
xchg
jg
jmp
mov
out
dec
div
fwait
jns
out
lahf
jecxz
enter
ss
(bad)
push
repz
call
fld
test
mov
and
cmps
inc
xchg
inc
(bad)
(bad)
cmp
fisubr
sbb
leave
sbb
arpl
xchg
call
push
pop
push
or
pop
cli
call
fnstsw
arpl
idiv
push
jge
sub
repnz
pop
pmaxub
push
scas
cs
pop
out
push
into
mov
mov
xchg
pop
cs
dec
sub
into
cld
push
mov
cs
jns
jnp
out
es
scas
push
push
push
inc
scas
push
scas
lahf
cmps
std
out
adc
es
dec
clc
in
jae
std
imul
adc
arpl
push
ret
jg
out
ror
fmul
imul
push
jg
xor
ins
pusha
stos
add
cmp
movs
in
in
pop
inc
cmp
(bad)
aas
push
and
push
pop
fimul
adc
mov
jmp
fldcw
jmp
push
mov
xor
(bad)
fbstp
push
stos
push
push
mov
and
or
adc
push
fld
scas
cmp
mov
fstp
repnz
sbb
or
mov
push
sbb
iret
repz
ret
cwde
and
add
arpl
push
sar
push
pop
mov
rcl
pushf
js
ins
(bad)
(bad)
mov
or
pushf
jmp
fsubr
push
xor
sub
mov
es
lods
add
pusha
int
lods
mov
(bad)
add
push
inc
and
pop
loopne
aaa
xlat
(bad)
(bad)
pop
pusha
or
and
cwde
loope
retf
push
sar
(bad)
mov
dec
cmp
sbb
pop
push
mov
jle
dec
add
test
sbb
inc
in
cs
xor
fnstsw
pop
push
les
es
cmp
imul
loopne
push
cmps
push
bound
outs
sti
add
push
add
mov
mov
push
cmp
and
pusha
sub
ror
mov
inc
push
mov
in
sbb
neg
push
call
mov
rol
fcmovbe
in
pop
neg
inc
mov
push
mov
fidivr
jge
mov
mov
mov
jmp
lds
scas
mov
bound
inc
ja
push
push
cmp
pop
cmp
pusha
or
fiadd
(bad)
jb
(bad)
(bad)
jmp
mov
jo
adc
mov
jmp
call
popf
and
jne
fnstcw
retf
rol
dec
or
dec
or
enter
push
out
or
push
pop
push
jb
out
(bad)
stc
sub
cmp
scas
outs
ds
push
aas
dec
jae
pop
test
jo
mov
mov
cmps
cmp
outs
xchg
mov
out
sahf
jg
add
(bad)
cmp
repz
add
add
inc
iret
repz
repz
popa
add
mov
cld
repz
movs
mov
enter
iret
rcr
out
cld
or
sahf
out
add
sub
out
pop
push
mov
jno
xchg
pushf
lods
mov
cld
repz
rcr
call
outs
adc
cmp
repz
xor
add
push
push
data16
mov
jns
addr16
mov
mov
int
repz
out
jmp
or
iret
repz
sub
dec
push
inc
dec
push
repz
aas
push
js
xchg
iret
repz
xchg
add
add
mov
mov
(bad)
in
add
cmp
repz
push
sbb
aas
iret
repz
sub
add
dec
push
add
cld
add
add
add
add
jg
stc
xchg
add
add
add
add
call
jmp
jmp
dec
repz
push
push
push
enter
xor
push
dec
push
sub
push
cmp
iret
aas
bound
xor
outs
jp
xor
xchg
fmul
lea
cmps
push
mov
retf
push
out
retf
push
cmp
(bad)
xchg
loope
cwde
(bad)
jmp
push
repz
out
jns
or
loope
adc
pop
add
push
sub
sahf
jg
out
add
ss
push
pop
sahf
out
jns
imul
add
push
add
cmp
sahf
jg
pop
pop
add
pop
stc
out
outs
mov
pop
add
pop
pop
add
sahf
jg
out
aad
in
pop
add
out
sahf
addr16
jns
or
pop
(bad)
push
adc
or
jg
or
sub
cmp
popa
push
sahf
out
out
inc
dec
push
or
push
pop
fs
out
jle
or
push
ja
test
jns
jg
or
xchg
lahf
stos
mov
out
sahf
mov
or
repz
fistp
or
daa
std
pop
or
or
sbb
adc
daa
sub
or
daa
cmp
sbb
inc
or
daa
dec
or
daa
push
or
jle
bound
popa
scas
outs
push
imul
arpl
je
sub
outs
sbb
imul
and
sub
mov
jg
or
arpl
xor
add
ins
or
xor
fild
adc
adc
aas
xlat
mov
pop
adc
and
mov
imul
pop
xchg
imul
sub
lea
test
pop
lea
sub
retf
mov
lea
(bad)
ins
in
xor
mov
push
pop
adc
jb
ins
ins
fisub
ror
lahf
xor
retf
shr
mov
mov
popa
jb
bound
xor
arpl
shr
push
ja
int
jnp
xchg
ds
mov
sti
pop
push
jb
imul
rol
sub
mov
adc
adc
mov
sbb
push
lea
aas
xor
pop
push
dec
jnp
add
and
pop
pusha
adc
pop
mov
xor
sub
jnp
xchg
cmp
in
lods
push
addr16
mov
sbb
aas
sub
adc
mov
gs
rcl
mov
jno
sub
pop
pop
dec
jg
mov
shl
sbb
pop
jge
mov
cmp
gs
add
pop
cmp
int3
inc
imul
pop
fidivr
and
dec
sbb
outs
ja
pop
bound
xor
ret
inc
adc
jecxz
sub
adc
outs
sbb
or
pop
xor
in
fcom
pop
adc
sbb
cmc
push
sbb
push
addr16
or
std
cmp
adc
sbb
sub
add
or
fsubr
sub
or
add
bound
push
mov
sbb
add
sbb
inc
daa
xor
or
daa
lds
loop
call
pop
adc
daa
mov
daa
sbb
mov
pop
adc
daa
repz
ret
imul
xchg
imul
shl
mov
test
pop
jecxz
ror
fisttp
push
mov
addr16
aam
pop
push
loope
mov
das
xor
ja
scas
das
push
das
cmp
sar
inc
mov
fisttp
jo
fs
push
popa
jo
jbe
gs
adc
pop
or
out
into
jne
je
or
jne
push
xchg
cmp
pop
push
xor
inc
jo
or
xor
or
ins
push
call
jae
arpl
add
cmp
or
out
xor
cld
inc
or
rcr
jmp
fistp
ins
jne
ins
bound
loop
addr16
dec
jnp
dec
cwde
ret
push
dec
pop
or
pop
inc
or
(bad)
adc
or
sti
or
pop
adc
pushf
test
sub
cmp
sub
sbb
adc
mov
out
cmp
jns
sub
loopne
xor
sti
or
daa
push
pushf
xchg
or
xchg
test
cmp
retf
push
loopne
adc
(bad)
adc
xor
out
cmp
and
xor
push
pop
out
push
jo
dec
adc
xchg
retf
fsub
add
sub
dec
cmp
push
or
xchg
cs
sbb
xor
jp
shl
rcr
jmp
push
popa
mov
hlt
and
or
ss
adc
mov
imul
inc
adc
adc
fisubr
data16
and
jo
push
sbb
mov
sub
add
sub
repnz
adc
push
pusha
xchg
sbb
jo
test
xchg
int3
add
adc
push
push
cdq
cdq
cmp
push
add
dec
push
test
dec
push
dec
push
dec
call
push
dec
mov
add
data16
dec
push
dec
push
dec
push
dec
pushf
jae
pushw
dec
push
dec
ror
into
push
add
dec
push
dec
push
into
shr
jo
dec
sbb
int3
int3
cdq
jae
inc
push
add
dec
sbb
cmp
push
dec
arpl
jae
sbb
ror
mov
dec
dec
push
dec
stos
into
cmp
add
ror
addr16
add
push
dec
addr16
pusha
pusha
rep
arpl
shl
int3
cmp
push
dec
push
push
push
push
cmp
stos
arpl
ror
sbb
dec
add
sar
imul
xchg
and
xchg
dec
pop
push
iret
repz
add
inc
push
inc
inc
inc
push
and
inc
jae
push
data16
jle
jle
jle
or
data16
jle
push
xor
xor
jle
jle
jle
jle
test
jle
cdq
cdq
cdq
cdq
push
jle
jle
jle
jle
push
cwde
cdq
push
jle
jle
data16
rol
jle
jle
shl
jle
jle
jle
xor
xor
push
jle
jle
jle
loopne
xor
jle
jle
jle
cdq
cdq
cdq
test
jle
jle
jle
cwde
cdq
cdq
push
jle
jle
jle
int3
int3
int3
inc
push
jle
jle
jle
int3
int3
int3
push
jle
jle
jle
cmp
pusha
and
jbe
push
xor
xor
jle
jle
jle
jle
cdq
test
iret
add
jle
cdq
cdq
cdq
push
jle
jle
jle
jle
pop
js
stos
xor
cmp
push
(bad)
xor
jmp
push
add
jle
xor
xor
jle
jle
jle
mov
lock
xor
jo
push
(bad)
data16
pushf
jae
add
jle
popa
fs
jle
and
loope
stos
xor
loopne
push
(bad)
int3
int3
pushf
cmp
add
jle
ret
enter
adc
ret
stos
xor
ror
(bad)
xchg
cdq
cmp
push
add
jle
xchg
and
xor
add
jae
add
or
sbb
cmp
pop
js
mov
ret
dec
sbb
cmp
rcr
imul
into
repz
inc
es
push
add
daa
jo
push
fild
(bad)
aaa
fimul
add
das
pusha
sbb
cmps
sahf
(bad)
jmp
retf
movs
dec
add
and
add
cmp
adc
mov
mov
movs
lods
mov
(bad)
iret
repz
int3
aam
in
hlt
sahf
cmps
stc
cmp
add
or
sbb
sahf
out
and
xor
inc
out
sahf
out
push
pop
fs
sahf
out
sahf
je
test
jns
jg
(bad)
push
je
gs
cmp
ret
clc
mov
pop
mov
add
add
mov
cdq
mov
ja
mov
and
or
cmp
or
test
int3
jmp
adc
test
add
fdivr
pop
push
pop
inc
pusha
mov
pop
and
inc
cmp
or
ins
pop
rol
and
test
add
inc
rcr
int
or
adc
add
les
test
(bad)
add
cli
out
call
or
int3
loop
or
pop
je
mov
mov
add
jle
les
mov
fnstenv
add
fiadd
lods
or
or
pushf
jne
mov
pop
pop
pop
(bad)
fisubr
or
or
das
or
or
nop
idiv
push
or
or
add
push
sub
inc
pusha
jl
jns
jns
mov
in
or
inc
push
inc
out
sahf
out
js
mov
jns
jl
in
adc
xchg
push
dec
ret
rcl
push
mov
or
sbb
cmp
mov
xchg
and
jb
add
pushf
or
pop
fwait
nop
sti
enter
mov
outs
push
movs
mov
aam
in
or
mov
mov
mov
loopne
call
add
rol
and
xor
pop
enter
inc
pop
shr
pop
in
sbb
das
mov
mov
pop
call
push
std
fdivr
ss
test
pop
enter
fsub
push
cmp
in
fdiv
das
xchg
or
loopne
sbb
clc
es
in
sbb
push
dec
das
cmp
push
sahf
or
lds
fcomp
sbb
pop
push
shl
pusha
mov
add
mov
inc
ror
in
es
mov
es
push
adc
sub
adc
or
jb
aaa
int3
inc
pop
adc
test
add
sahf
test
cwde
test
push
cmps
pop
and
mov
les
daa
fcomp
lock
mov
push
cs
push
pop
femms
push
jbe
enter
daa
and
cmp
fidivr
cld
push
rcr
in
sahf
out
push
clc
or
and
push
aaa
js
and
push
cvttps2pi
mov
pop
xchg
jl
ja
fdiv
aas
add
imul
pinsrw
dec
pop
push
mov
sahf
add
outs
mov
mov
aas
pop
je
jb
mov
pusha
sbb
je
das
fs
mov
cmp
ins
aas
dec
pop
jbe
pop
fnstsw
or
jo
sbb
js
push
pop
div
(bad)
ds
push
push
int
in
fiadd
pop
cld
push
inc
cmp
int3
iret
pop
frstor
sub
aaa
push
push
bound
pop
push
xchg
bound
jo
aaa
pop
scas
cmps
sbb
call
test
pop
sbb
pop
mov
inc
pop
pop
pop
and
pop
addps
pop
pop
adc
daa
scas
inc
rcl
call
xchg
dec
mov
pop
pop
pop
daa
or
addr16
bound
mov
push
pop
pop
aas
add
push
in
sar
cmp
pushf
in
outs
add
pop
mov
mov
pop
iret
sbb
push
and
jo
push
jmp
lods
adc
dec
pop
movs
push
rcr
adc
pop
push
or
out
inc
push
sbb
mov
pop
das
pop
fcomp
nop
cmps
dec
fnstcw
pop
aaa
pop
push
push
popa
enter
mov
movs
xchg
ret
pop
out
into
ja
mov
pop
add
inc
add
add
jns
cmp
dec
add
push
not
xor
add
sahf
or
pushf
aam
or
lods
dec
or
add
xchg
or
jg
mov
lods
je
dec
push
add
lock
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
or
icebp
cs
jnp
(bad)
stos
pop
daa
scas
push
(bad)
fstp
outs
test
pop
add
inc
jnp
(bad)
dec
pop
(bad)
retf
xchg
adc
push
cmp
dec
or
(bad)
(bad)
(bad)
fdiv
or
cld
mov
jmp
nop
fs
jecxz
cli
jl
aas
jno
inc
mov
pop
scas
scas
stos
(bad)
(bad)
(bad)
jmp
lds
rcl
add
cmp
jmp
sbb
mov
call
pop
dec
jge
dec
pushf
sbb
aam
mov
push
jp
inc
inc
xchg
imul
lds
cmp
jmp
add
dec
mov
cmp
push
pextrw
dec
and
mov
or
cmp
aaa
jmp
add
mov
push
out
add
sbb
or
sub
jl
out
fneni(8087
inc
je
push
add
imul
iret
sar
pop
xchg
enter
cmp
fdivr
iret
clc
push
std
adc
sahf
out
sahf
cld
xor
dec
stc
jo
sahf
out
clc
nop
div
aam
hlt
hlt
sbb
repz
repz
push
xchg
sahf
out
pop
je
lock
out
mov
jns
in
lock
inc
pop
jmp
push
jmp
cmps
scas
mov
dec
int3
pop
adc
pop
xor
or
or
inc
ins
iret
jae
pop
xor
push
jl
add
cwde
sahf
jnp
(bad)
push
mov
pop
push
in
jne
fdiv
jg
or
aas
add
push
xor
xlat
ds
pop
push
fs
or
retf
cli
imul
push
push
daa
pop
fcom
inc
push
sahf
jle
fisttp
pop
(bad)
dec
push
jbe
mov
adc
(bad)
dec
gs
(bad)
cld
push
adc
test
push
inc
iret
jae
cmp
and
sbb
sbb
ror
adc
sub
inc
lods
push
ds
sbb
(bad)
in
aam
call
call
sbb
pop
iret
mov
jns
into
pop
push
push
xchg
fmul
cwde
jmp
push
repz
pop
ficomp
add
ucomiss
adc
inc
push
ins
inc
dec
dec
jmp
or
push
mov
inc
mov
xlat
jmp
push
push
ins
mov
out
pop
jecxz
clc
fidivr
fmul
fdiv
(bad)
clc
push
(bad)
in
cs
pop
mov
cmp
int
pop
push
daa
clc
stc
xlat
popa
mov
loop
mov
movs
sub
movs
sahf
push
mov
clc
stc
xchg
sahf
pop
dec
mov
scas
daa
mov
pop
cmp
push
imul
cs
std
mov
cs
fsub
push
cmp
fsub
ficomp
and
mov
movups
outs
push
or
add
mul
loopne
add
add
push
cld
mov
mov
call
das
imul
jae
pop
sti
add
cdq
(bad)
pop
ds
mov
(bad)
push
jp
jmp
mov
fadd
sar
dec
das
sahf
paddq
push
mov
mov
shl
ds
mov
jge
xchg
adc
pop
push
(bad)
mov
add
(bad)
mov
push
into
push
and
mov
push
mov
sahf
inc
inc
push
and
(bad)
mov
inc
pop
ins
push
pop
inc
clc
add
push
and
adc
cmps
rep
(bad)
sub
push
push
mov
outs
push
sbb
add
push
mov
push
mov
sahf
daa
mov
pop
int
xchg
push
add
sahf
push
stc
xlat
mov
mov
adc
jmp
cmc
xor
push
cmp
xor
and
push
out
mov
js
xlat
mov
jmp
enter
jmp
jo
push
xchg
push
nop
out
nop
ds
pop
push
push
lock
mov
jl
jp
movs
stos
mov
mov
ror
push
cli
into
xchg
xchg
push
cdq
mov
bswap
dec
icebp
jae
faddp
mov
push
mov
jmp
push
and
push
xor
xor
jo
pusha
sub
dec
dec
push
add
adc
add
push
stos
int
dec
int
les
jae
push
rcl
into
push
(bad)
ds
push
jge
lahf
loope
mov
into
push
out
push
cli
inc
mov
push
int3
shr
(bad)
push
xchg
adc
jo
sbb
push
retf
hlt
cmp
call
push
mov
lods
push
push
push
pop
pop
cwde
add
jae
push
cmc
std
dec
push
xor
popf
mov
outs
pop
fsubr
inc
lock
clc
push
mov
(bad)
jo
in
stos
call
push
mov
pop
push
out
out
scas
out
xor
xchg
jo
out
push
aad
mov
push
mov
test
call
imul
push
frstor
loopne
shr
mov
push
sbb
and
sahf
push
(bad)
pusha
dec
push
loope
mov
shr
push
adc
adc
push
jb
addr16
sti
adc
movs
hlt
outs
push
push
mov
outs
push
pop
lds
out
lock
push
sub
js
sbb
mov
adc
pop
push
push
nop
xor
push
popf
sub
push
pop
lock
jge
pop
enter
inc
scas
push
mov
xchg
add
mov
pop
sti
push
inc
arpl
push
shl
inc
call
jno
pop
ror
fiadd
loopne
fcom
push
(bad)
scas
and
and
mov
daa
stos
out
call
push
jnp
lahf
add
popa
outs
jae
gs
cmp
ret
add
or
inc
cmp
sti
ret
ins
push
dec
cwde
jmp
ret
iret
cmp
or
xchg
mov
mov
mov
jns
out
mov
or
dec
int3
out
sahf
out
fisub
adc
or
xor
sbb
call
or
ret
out
mov
or
loop
add
std
dec
add
add
adc
sbb
adc
jae
test
add
loop
mov
jle
rol
dec
sbb
loop
test
sbb
js
rcr
out
or
loopne
mov
pop
and
pop
out
push
or
cmp
adc
and
ins
popa
je
and
cs
mov
(bad)
cmp
inc
outs
jo
js
push
xor
xor
dec
gs
call
jne
and
imul
dec
popa
jb
and
mov
(bad)
fs
aam
add
push
mov
data16
rcl
pop
pop
cli
sbb
xchg
pop
add
popa
into
int3
add
push
cmp
das
pop
xor
push
inc
pop
pop
mov
mov
adc
add
push
adc
pusha
push
mov
clc
add
jae
adc
pop
push
jo
ss
push
inc
or
adc
dec
or
add
jo
push
or
loope
call
push
fstp
mov
mov
nop
dec
pop
cmp
js
jnp
and
mov
pop
push
or
sub
mov
fadd
sbb
or
lock
jnp
cmps
or
add
push
je
xor
mov
jle
or
add
push
test
pop
test
ins
les
dec
call
xor
cwde
lock
adc
pop
mov
jl
cmp
fdivr
ror
ins
push
sub
mov
xchg
adc
mov
push
or
jle
out
cli
fimul
(bad)
or
(bad)
mov
sbb
push
xor
(bad)
(bad)
xchg
or
and
and
or
or
xchg
or
jle
or
repnz
xchg
inc
push
cmp
aam
inc
push
push
sub
jno
jne
mov
lahf
mov
dec
push
hlt
jle
and
or
push
push
ds
(bad)
xor
push
fnstsw
jbe
ss
inc
or
or
push
lods
push
fisttp
or
in
jle
pop
mov
push
or
or
(bad)
arpl
jle
popf
mov
fdivr
jb
outs
push
cs
daa
out
push
mov
push
dec
push
cld
add
push
or
sbb
adc
ds
add
push
mov
jnp
ins
ror
fimul
loop
pop
push
sbb
push
mov
jns
cmp
sar
imul
push
add
pop
mov
cmp
call
adc
aaa
inc
add
jne
xor
out
ins
adc
or
test
ja
jnp
inc
push
jmp
mov
or
push
(bad)
xlat
sbb
sub
lea
test
add
dec
xor
mov
inc
dec
push
sti
sbb
mov
cmps
or
mov
or
(bad)
out
mov
ja
push
into
or
fcom
jmp
scas
or
push
lahf
jmp
push
or
push
push
dec
push
aaa
ja
pop
icebp
ds
jmp
daa
push
scas
push
ffreep
pop
icebp
pop
xchg
inc
push
out
call
outs
sub
mov
jg
aas
push
fdivrp
fsubrp
out
mov
mov
dec
push
inc
inc
cs
inc
pop
enter
jmp
xchg
inc
pop
enter
in
cmp
sub
jmp
cdq
fnstcw
stos
(bad)
stc
lds
or
in
cs
aad
cs
sub
sbb
(bad)
in
or
mov
mov
nop
test
push
(bad)
ds
test
mov
pop
call
shl
dec
push
repz
cs
jmp
jmp
inc
cs
cmp
test
cmps
push
jmp
mov
xlat
mov
nop
mov
test
scas
push
(bad)
out
out
inc
cs
fistp
test
(bad)
jle
sahf
pop
push
sub
dec
sbb
adc
add
mov
jno
adc
inc
ficomp
push
fs
push
jno
adc
(bad)
sbb
and
add
ins
rcl
add
push
add
adc
jle
(bad)
jle
test
data16
ds
jle
sahf
jle
test
xor
(bad)
jle
mov
popa
sahf
adc
out
mov
xor
inc
data16
mov
bound
imul
arpl
gs
fs
xchg
jp
push
arpl
ja
sbb
jo
mov
jae
outs
push
ins
gs
outs
push
jbe
ins
imul
adc
xor
xchg
pop
pop
mov
addr16
mov
xchg
arpl
ins
popa
je
mov
in
add
or
je
jo
and
xor
ins
outs
addr16
imul
js
outs
jns
and
xchg
je
xor
mov
arpl
jns
bound
inc
xor
fdiv
fldcw
sbb
loop
xor
lock
cdq
sub
and
sub
dec
push
je
add
adc
adc
jmp
mov
arpl
arpl
push
or
sub
xchg
pusha
bound
stos
fs
sub
add
xchg
jmp
aad
add
cmp
pop
arpl
mov
(bad)
dec
sub
jle
push
movs
push
test
neg
xchg
retf
or
xor
stos
jecxz
add
retf
add
add
cmp
adc
call
push
out
outs
push
cdq
push
es
scas
push
sub
sahf
mov
retf
sbb
xchg
(bad)
test
(bad)
call
out
push
sti
jecxz
scas
or
rol
push
add
add
stos
add
sahf
add
inc
jnp
add
xor
lds
pusha
or
pop
add
jbe
call
pop
add
xchg
ja
test
fsubr
mov
rcr
pop
cmp
sahf
add
pop
sub
and
cmp
add
outs
fadd
(bad)
or
or
or
or
(bad)
push
add
sbb
repz
lods
ins
in
out
sahf
jmp
cmp
fnstcw
mov
sbb
and
fidiv
add
xor
jns
mov
repnz
repz
repz
retf
push
cmps
sub
jmp
sahf
out
cmp
cmp
mov
xchg
cmps
imul
jns
out
(bad)
ss
xor
jns
test
stos
push
into
repz
repz
outs
out
push
iret
repz
sahf
pop
fidivr
mov
cmp
push
push
out
cdq
dec
fs
push
repnz
push
mov
mov
je
shr
and
push
test
cmp
dec
push
mov
icebp
out
sahf
ja
mov
dec
leave
sub
imul
repz
repz
mov
imul
xlat
jns
mov
jns
mov
xor
jns
cmc
mov
iret
repz
dec
int
lods
ins
in
jns
data16
push
popf
pop
fst
jns
out
mov
repz
adc
push
xchg
push
xchg
fimul
jo
ja
push
rcl
push
daa
sar
push
mov
adc
out
inc
out
push
repz
push
mov
repz
dec
dec
retf
retf
repz
push
stos
stos
scas
repz
imul
xor
jns
ja
push
fwait
fwait
pop
pop
sahf
out
sahf
fcmovnu
cmp
mov
jns
jnp
sti
sahf
out
or
xchg
jns
out
mov
jns
out
addr16
sahf
out
add
push
xchg
xchg
push
jns
out
push
xlat
xlat
aaa
aaa
out
sahf
out
mov
ja
repz
push
push
(bad)
(bad)
iret
repz
dec
dec
iret
iret
das
das
cmp
repz
scas
outs
outs
out
repz
repz
pop
pop
lahf
lahf
iret
repz
pop
pop
(bad)
aas
aas
cmp
repz
mov
pop
scas
repz
inc
push
and
js
out
push
xor
jns
out
push
dec
sub
pop
imul
(bad)
push
inc
out
sahf
out
fs
xor
pop
jae
je
add
sahf
out
mov
inc
jbe
out
push
mov
pop
mov
cmp
test
cdq
retf
push
mov
sub
loop
cmps
dec
cmps
pop
retf
push
mov
push
(bad)
pushf
adc
xchg
pop
cdq
enter
add
push
scas
push
adc
xor
jbe
inc
inc
ret
fcom
fidivr
xchg
or
cmp
or
in
mov
xchg
mov
fiadd
mov
adc
adc
adc
push
pop
sbb
and
leave
test
sbb
pop
test
pop
xchg
ss
mov
addr16
add
xor
in
push
add
add
nop
add
xchg
lahf
scas
xchg
inc
or
add
dec
or
add
add
adc
jg
les
les
push
sub
inc
pop
or
rol
outs
mov
add
dec
add
inc
ror
xchg
push
add
loopne
cmp
shr
mov
push
loopne
out
cmp
pushf
jae
iret
(bad)
mov
jae
cmps
lahf
xchg
(bad)
jns
adc
mov
add
push
push
clc
xchg
mov
push
sbb
add
daa
bound
add
push
lgdtd
popa
push
out
mov
les
(bad)
hlt
push
(bad)
(bad)
(bad)
push
xchg
fs
xor
fdivr
jmp
rcl
mov
(bad)
(bad)
inc
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
(bad)
(bad)
call
aam
mov
imul
std
in
leave
mov
add
ins
push
arpl
(bad)
(bad)
jmp
psubd
or
outs
cmp
imul
addr16
add
aam
dec
(bad)
(bad)
(bad)
(bad)
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
(bad)
(bad)
dec
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
(bad)
(bad)
(bad)
call
movs
mov
sub
mov
(bad)
and
or
adc
(bad)
(bad)
(bad)
jmp
sub
fdiv
jno
add
aad
mov
mov
push
cld
jmp
aam
call
xor
jl
test
xchg
sbb
push
(bad)
(bad)
(bad)
jg
cmp
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
(bad)
(bad)
(bad)
jmp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
jg
(bad)
jmp
sub
ror
popa
mov
into
pop
cmp
mov
mov
mov
dec
xlat
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
cmc
(bad)
(bad)
call
mov
add
in
add
pop
dec
or
cmp
add
daa
(bad)
(bad)
call
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fcos
(bad)
(bad)
jmp
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
call
mov
cmp
jmp
fild
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
jl
sahf
pop
jge
xchg
(bad)
(bad)
(bad)
dec
lock
add
inc
push
imul
xor
sbb
push
imul
(bad)
(bad)
(bad)
call
(bad)
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
call
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
(bad)
(bad)
(bad)
dec
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
jmp
sbb
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
(bad)
mov
mov
pop
mov
add
mov
cmps
call
ret
shl
sbb
ret
(bad)
jmp
repnz
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
(bad)
fbld
mov
loop
sub
or
mov
xchg
or
out
fdivr
(bad)
(bad)
(bad)
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outs
ja
(bad)
out
clc
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
(bad)
call
sar
imul
push
js
or
push
add
mov
cmp
addr16
(bad)
(bad)
jmp
dec
inc
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
test
jg
mov
jmp
repnz
retf
mov
cmps
mov
sar
(bad)
(bad)
(bad)
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
push
fild
pop
add
sbb
and
push
ss
push
sub
hlt
ja
xchg
inc
dec
(bad)
(bad)
(bad)
dec
mov
enter
ror
fxtract
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
(bad)
(bad)
call
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
call
sbb
(bad)
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
(bad)
(bad)
jmp
adc
mov
popa
ja
mov
out
repz
gs
(bad)
(bad)
(bad)
fld
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
icebp
push
std
call
repz
fbstp
push
jo
add
hlt
div
sub
pop
ret
xchg
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
(bad)
(bad)
(bad)
mov
sbb
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
(bad)
(bad)
(bad)
mov
inc
mov
and
or
hlt
mov
or
xchg
(bad)
cli
sub
call
or
int3
pop
dec
xor
inc
mov
outs
retf
push
pop
mov
cmp
das
mov
lea
push
cwde
xlat
ficom
test
loope
xchg
retf
(bad)
(bad)
call
pop
xlat
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
xlat
(bad)
cmp
inc
and
inc
out
and
cmp
dec
mov
(bad)
jg
lahf
mov
and
cmps
xor
mov
lods
out
sar
mov
adc
(bad)
dec
xchg
adc
jle
push
jns
das
mov
and
je
or
(bad)
call
add
mov
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
dec
int3
cli
mov
js
mov
test
cwde
cmp
test
mov
mov
(bad)
(bad)
(bad)
jmp
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
(bad)
(bad)
(bad)
push
inc
xlat
ss
push
out
mov
mov
movs
test
jno
mov
ja
(bad)
(bad)
(bad)
(bad)
jmp
dec
sub
or
sub
add
adc
cwde
mov
nop
bound
(bad)
(bad)
push
fst
out
les
fdecstp
jmp
lea
inc
(bad)
dec
out
sub
dec
jo
outs
sbb
sub
loope
fisub
(bad)
call
push
call
dec
in
mov
movs
ret
addr16
test
mov
jmp
mov
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
(bad)
(bad)
(bad)
jmp
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
jg
mov
lods
(bad)
loope
int3
mov
stc
dec
xlat
loopne
adc
(bad)
jmp
lea
mov
test
and
pop
ins
cmp
les
adc
sub
dec
addr16
(bad)
(bad)
jmp
jns
or
cmp
popf
cmps
push
mov
xchg
adc
in
(bad)
(bad)
(bad)
push
dec
cld
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
(bad)
(bad)
mov
mov
push
in
repz
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
pop
or
push
and
sub
adc
jns
movs
dec
mov
movs
daa
sub
jmp
mov
shr
(bad)
in
and
out
mov
shl
inc
mov
aas
mov
adc
out
sar
mov
gs
pop
aad
(bad)
(bad)
jle
aaa
or
jbe
dec
div
lahf
adc
jb
and
(bad)
dec
mov
outs
aam
add
inc
add
test
jmp
retf
push
mov
lea
push
dec
add
(bad)
cmp
(bad)
test
or
stc
sbb
sub
loopne
cmp
es
leave
in
push
ja
pop
sub
das
(bad)
(bad)
(bad)
call
fwait
popa
in
sbb
fild
sbb
repnz
adc
dec
jae
adc
cmp
(bad)
(bad)
call
jp
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
(bad)
(bad)
(bad)
(bad)
aas
or
cmp
push
add
outs
jge
aaa
ss
fidiv
test
push
mov
xchg
xor
imul
fld
adc
nop
in
and
(bad)
mov
(bad)
(bad)
(bad)
mov
sub
and
mov
and
mov
sub
fidivr
(bad)
jmp
sub
ds
sbb
sub
call
das
ror
jno
(bad)
(bad)
dec
fdiv
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
(bad)
(bad)
dec
dec
jg
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
scas
xchg
outs
jmp
loop
(bad)
cmp
(bad)
in
ja
add
push
or
bound
stos
sub
shr
aad
(bad)
call
xlat
cmps
gs
fs
imul
dec
pop
mov
outs
(bad)
jmp
inc
jns
dec
cld
arpl
dec
retf
or
xchg
mov
dec
movs
fstp
(bad)
(bad)
(bad)
inc
lock
inc
test
shl
inc
xor
inc
jae
cmovo
out
inc
sbb
push
call
xor
mov
mov
mov
clc
push
mov
adc
push
aad
mov
(bad)
out
clc
call
push
and
in
pop
mov
movs
pop
lock
add
sub
outs
pop
ins
das
(bad)
(bad)
(bad)
jmp
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
(bad)
(bad)
(bad)
jp
cmp
out
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
(bad)
inc
cld
imul
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
(bad)
(bad)
(bad)
fdivr
inc
les
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
dec
cmc
cli
xchg
(bad)
test
pop
js
push
aaa
mov
fidivr
jecxz
fstp
(bad)
(bad)
(bad)
push
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
(bad)
(bad)
(bad)
jmp
rcr
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
dec
mov
call
dec
retf
lahf
lds
adc
leave
je
jmp
inc
ins
xchg
sbb
ror
mov
xchg
ja
ins
nop
cs
sub
jmp
jmp
xchg
stos
push
fs
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
jns
popf
and
mov
adc
xor
xor
dec
mov
or
(bad)
dec
or
dec
add
mov
(bad)
mov
push
pop
and
push
adc
(bad)
(bad)
(bad)
fcmovu
adc
test
sbb
xchg
shl
test
into
add
stos
stc
(bad)
(bad)
(bad)
jmp
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
(bad)
(bad)
(bad)
(bad)
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
(bad)
(bad)
(bad)
dec
xor
mov
mov
cmovns
push
dec
adc
mov
call
mov
ficomp
mov
aaa
cld
(bad)
fild
gs
stos
out
scas
mov
push
xchg
bound
pop
imul
xor
dec
or
loopne
outs
add
(bad)
(bad)
(bad)
call
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
(bad)
(bad)
jnp
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
iret
sbb
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rol
xchg
(bad)
call
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
iret
aas
sub
in
(bad)
(bad)
inc
ja
push
or
mov
sub
les
and
mov
imul
jg
or
(bad)
jge
aad
shl
(bad)
(bad)
jmp
mov
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
(bad)
ffreep
adc
pop
aas
test
mov
sbb
mov
jbe
push
retf
pop
jg
test
(bad)
(bad)
(bad)
inc
shl
pop
mov
sbb
pop
mov
adc
shl
cmp
das
retf
jnp
dec
ja
(bad)
call
(bad)
push
add
dec
mov
outs
inc
nop
call
cld
jle
(bad)
(bad)
(bad)
jmp
sbb
ficom
daa
mov
mov
out
mov
mov
mov
cmp
(bad)
fcomip
call
sub
pop
outs
xchg
add
cmp
inc
mov
das
xchg
in
pop
xchg
sub
mov
std
(bad)
(bad)
inc
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
in
mov
push
inc
das
dec
leave
xor
inc
arpl
adc
push
mov
(bad)
(bad)
dec
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
dec
and
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
(bad)
call
pusha
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
sub
call
pop
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
adc
add
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
clc
(bad)
jmp
scas
dec
rol
std
shl
pop
xchg
idiv
sub
sbb
repnz
and
(bad)
call
sbb
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
(bad)
(bad)
inc
push
jmp
xor
(bad)
and
push
mov
rol
outs
(bad)
(bad)
(bad)
push
call
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
(bad)
(bad)
(bad)
call
cmp
jbe
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
jmp
inc
push
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
es
aam
jmp
(bad)
stc
mov
mov
lock
imul
(bad)
(bad)
(bad)
push
daa
test
(bad)
cs
mov
call
mov
loope
into
cs
fisttp
mov
aas
add
add
pop
std
pop
jmp
icebp
and
cmp
(bad)
jmp
ds
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
pop
or
adc
cmp
adc
mov
jle
cmp
(bad)
dec
adc
add
sbb
cmps
push
data16
jno
ds
outs
sub
mov
rcl
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
(bad)
jmp
pop
test
or
xchg
popa
mov
fdivrp
ja
xor
(bad)
jmp
cdq
or
pop
ins
les
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
jno
test
aam
ins
fucom
jmp
aam
push
sub
push
fs
(bad)
(bad)
jmp
sar
stc
jp
gs
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
(bad)
(bad)
(bad)
jmp
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
mov
xor
(bad)
(bad)
(bad)
push
leave
(bad)
lods
mov
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
(bad)
(bad)
inc
push
cmp
hlt
mov
mov
and
mov
movs
ud0
(bad)
jmp
add
or
or
mov
or
and
outs
jl
pop
push
sbb
cmp
jbe
inc
nop
add
jno
cwde
shl
mov
jno
test
lahf
mov
pop
test
aam
js
leave
les
and
or
(bad)
(bad)
call
mov
xchg
fs
xchg
out
pop
add
push
hlt
sbb
popa
bound
(bad)
(bad)
(bad)
(bad)
inc
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
(bad)
out
cli
mov
sbb
mov
jl
sti
aam
gs
mov
test
(bad)
inc
push
into
mov
mov
movs
inc
cmp
rol
ins
rcl
hlt
(bad)
(bad)
(bad)
(bad)
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fisttp
dec
push
add
inc
stos
mov
or
xchg
mov
and
mov
(bad)
(bad)
(bad)
call
or
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
and
mov
loop
mov
call
jmp
(bad)
adc
jecxz
or
xchg
cmp
pop
test
(bad)
(bad)
jmp
push
iret
or
add
mov
setae
mov
push
(bad)
(bad)
(bad)
push
bound
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
fwait
(bad)
(bad)
(bad)
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
fadd
(bad)
mov
fcomip
push
sar
addr16
mov
fisttp
ss
fmul
(bad)
fisubr
add
inc
add
fbld
ret
test
fist
outs
mov
inc
imul
fisub
mov
outs
shl
int3
(bad)
(bad)
(bad)
dec
xchg
mov
add
mov
lds
or
sub
add
(bad)
(bad)
(bad)
call
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
push
test
jb
test
add
xchg
mov
jp
jnp
sub
xchg
(bad)
push
cld
ror
repnz
mov
fcmovnu
and
aam
inc
push
icebp
(bad)
call
fiadd
int
mov
ja
sbb
out
punpckhdq
(bad)
(bad)
push
push
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
(bad)
out
dec
add
push
cmp
mov
cmps
addr16
shl
test
ja
scas
shr
(bad)
pop
(bad)
(bad)
(bad)
(bad)
fadd
or
fdivr
lock
mov
iret
jg
mov
jmp
retf
adc
push
mov
xor
mov
add
push
ficom
and
addr16
std
(bad)
(bad)
(bad)
jp
les
mov
sub
xchg
mov
mov
mov
sub
sar
pop
call
sbb
inc
xor
bound
lods
lds
(bad)
(bad)
(bad)
call
xchg
xchg
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
(bad)
(bad)
(bad)
inc
sbb
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
(bad)
(bad)
(bad)
call
test
fwait
add
fld
ja
pop
jmp
aam
(bad)
(bad)
inc
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
(bad)
(bad)
(bad)
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
(bad)
(bad)
(bad)
out
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
sub
(bad)
(bad)
push
mul
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
(bad)
inc
call
jge
fisubr
cmp
jns
add
ret
(bad)
(bad)
jmp
(bad)
xchg
adc
mov
cmp
lds
or
cmps
(bad)
adc
add
inc
xlat
xor
cli
bound
(bad)
(bad)
jg
pop
push
mov
lea
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
(bad)
(bad)
(bad)
push
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
call
gs
imul
and
add
lahf
loop
inc
and
mov
loope
mov
shr
lahf
adc
xchg
mov
leave
dec
and
(bad)
(bad)
(bad)
call
push
adc
sub
gs
das
aas
jns
ss
mov
or
je
adc
xor
(bad)
call
jns
fidiv
jle
xor
out
(bad)
(bad)
std
ret
rcl
(bad)
(bad)
(bad)
(bad)
cmp
call
js
cmps
cmp
sbb
or
retf
(bad)
(bad)
(bad)
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
ja
(bad)
(bad)
(bad)
inc
mov
mov
mov
inc
mov
push
ja
cwde
pop
ins
fcos
jg
(bad)
fst
ss
daa
mov
fnstsw
xor
mov
bound
(bad)
lds
(bad)
out
hlt
push
out
rcl
pop
mov
dec
call
imul
jo
lods
clc
stos
movs
clc
call
outs
loope
sub
data16
loope
lds
(bad)
jg
rep
mov
in
test
xchg
sub
in
scas
mov
(bad)
(bad)
(bad)
call
repz
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
call
sub
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
(bad)
out
fsub
push
scas
xchg
adc
lea
or
(bad)
in
inc
pop
inc
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
test
(bad)
(bad)
(bad)
cli
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
bound
(bad)
jmp
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
sub
(bad)
(bad)
(bad)
call
call
rcr
repz
inc
gs
dec
xchg
outs
jne
mov
call
dec
pop
test
adc
gs
jns
(bad)
mov
sbb
mov
daa
(bad)
inc
loopne
ror
(bad)
out
and
loope
or
mov
aas
aas
xchg
mov
jo
and
imul
inc
cmp
ja
fsub
push
jle
(bad)
(bad)
call
out
push
or
test
mov
adc
xor
push
std
mov
add
pop
lods
test
push
retf
ret
lea
(bad)
(bad)
(bad)
dec
test
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
jg
call
sbb
mov
sbb
lods
sbb
(bad)
(bad)
(bad)
in
popa
fwait
sbb
mov
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
(bad)
(bad)
(bad)
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
ds
(bad)
(bad)
inc
cmp
add
ss
pop
pop
aaa
pushf
jge
xor
sbb
test
mov
aad
xor
imul
adc
frstor
in
mov
cmps
daa
aam
(bad)
(bad)
(bad)
(bad)
es
dec
dec
and
cdq
and
and
adc
sub
pusha
(bad)
(bad)
(bad)
inc
or
jno
hlt
sub
jbe
cs
enter
mov
shl
div
pop
(bad)
(bad)
(bad)
jmp
ja
and
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
or
(bad)
(bad)
call
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
call
jbe
xchg
cli
fisub
nop
jmp
ja
pop
push
jg
jmp
cmp
arpl
popa
sub
push
cmps
xlat
aam
fs
jecxz
and
mov
dec
xlat
retf
and
mov
dec
(bad)
inc
arpl
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
(bad)
call
scas
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
(bad)
jmp
push
xor
addr16
jne
ds
mov
or
ror
adc
push
mov
(bad)
(bad)
(bad)
(bad)
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
ret
out
clc
call
and
jno
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fldcw
mov
or
cmp
in
paddsb
hlt
popa
call
in
mov
(bad)
(bad)
(bad)
(bad)
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
(bad)
(bad)
(bad)
(bad)
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
retf
sub
test
pop
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
(bad)
(bad)
(bad)
(bad)
and
fdiv
dec
in
imul
test
fdiv
shl
add
mov
(bad)
call
out
push
and
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
jg
(bad)
inc
rol
xchg
retf
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
pop
call
push
ins
inc
iret
rcl
into
add
nop
ins
cld
ja
sub
xchg
jmp
sub
xchg
cmps
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
pushf
cmp
xchg
(bad)
call
mov
dec
add
dec
call
xor
inc
mov
mov
sbb
mov
or
mov
(bad)
(bad)
mov
sbb
int3
push
test
arpl
aad
or
test
mov
xchg
stos
data16
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
(bad)
(bad)
jmp
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
mov
sbb
(bad)
(bad)
jmp
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
xlat
and
adc
call
push
test
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
std
(bad)
(bad)
jg
mov
enter
scas
out
(bad)
bound
xor
xlat
cmp
aaa
jl
jge
dec
mov
loopne
xlat
add
mov
(bad)
(bad)
(bad)
(bad)
fucom
fbstp
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
dec
jmp
int
outs
es
lods
jg
sub
mov
xchg
rcr
(bad)
(bad)
call
inc
mov
and
xor
pop
or
addr16
xchg
shr
push
(bad)
(bad)
(bad)
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
aas
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
in
fmul
lock
mov
pop
and
sub
sahf
push
dec
dec
outs
test
or
rcr
lahf
ror
and
(bad)
(bad)
push
lds
sub
mov
inc
and
(bad)
xchg
test
call
cmp
(bad)
(bad)
aas
pop
xor
not
adc
iret
push
retf
mov
ret
pusha
test
jo
out
dec
call
mov
test
fistp
ret
imul
ret
ja
imul
(bad)
jg
or
(bad)
popa
add
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
(bad)
(bad)
call
aaa
sbb
mov
inc
sub
mov
cmp
jg
sar
(bad)
call
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
(bad)
(bad)
(bad)
push
push
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
(bad)
(bad)
(bad)
stc
xor
inc
out
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
out
cli
(bad)
jmp
imul
cwde
and
push
aaa
out
push
add
inc
clc
inc
daa
popf
and
lock
jmp
inc
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
(bad)
cmp
pop
pop
mov
in
sbb
bound
and
inc
sbb
jmp
sub
sahf
(bad)
jg
call
nop
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
or
cmp
shr
ins
mov
cld
sbb
dec
sub
scas
cmc
test
and
(bad)
(bad)
(bad)
dec
sub
sbb
ror
sar
add
push
movs
not
scas
clc
dec
sub
jns
and
dec
imul
cmc
xlat
jle
out
ror
cs
(bad)
jmp
or
aaa
push
add
cs
pop
rcl
and
stc
popa
call
add
fsubr
jmp
rcl
call
xchg
(bad)
loope
xchg
adc
int
(bad)
(bad)
jmp
lods
mov
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
(bad)
(bad)
(bad)
out
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
call
(bad)
jg
inc
push
xor
es
jmp
fdiv
inc
mov
bound
(bad)
inc
cmp
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
adc
push
(bad)
(bad)
(bad)
push
ss
adc
out
mov
loopne
jbe
pop
not
dec
jmp
ds
(bad)
(bad)
call
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
jl
mov
(bad)
(bad)
call
pop
sbb
mov
repz
in
test
adc
ja
mov
ret
add
call
(bad)
cmp
cdq
in
or
pushw
cmps
fidiv
(bad)
(bad)
(bad)
jmp
fisubr
sar
lock
out
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
jmp
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
cmp
add
cmp
push
pop
arpl
(bad)
(bad)
push
cmp
mov
gs
je
outs
outs
popa
jb
mov
jae
jb
popa
ins
and
fs
imul
fcmovnu
dec
je
adc
dec
arpl
pop
mov
pusha
je
ins
gs
and
bound
cmp
mov
std
arpl
jo
imul
mov
cs
jg
loopne
cmp
add
xlat
mov
dec
xchg
jg
jae
neg
sub
xor
call
out
jge
imul
pop
or
pop
clts
sbb
fistp
add
scas
add
push
add
add
ret
push
aaa
add
push
inc
ret
in
sbb
add
add
adc
ror
scas
add
out
iret
cmp
pushf
add
dec
inc
fidiv
xlat
xor
or
lahf
cmp
out
fnstenv
test
icebp
push
sti
add
or
or
jae
or
add
xchg
cmp
out
and
add
or
imul
mov
pop
out
pop
inc
sbb
sbb
jmp
fiadd
push
jge
push
or
fsubr
push
xchg
cmp
sub
fidiv
push
fisub
pop
pop
ret
pop
add
or
sbb
pop
mov
fdivr
push
paddb
push
push
cs
inc
pop
iret
or
arpl
ins
add
cmp
sbb
dec
setle
mov
inc
std
cld
fisubr
inc
in
jne
mov
das
push
push
pop
aas
ja
addr16
add
sbb
jmp
rep
add
push
add
add
ss
out
fisubr
push
xor
dec
push
pop
jns
out
pusha
push
sahf
xlat
hlt
and
pop
js
jns
out
test
fdiv
or
cmp
adc
sub
aas
or
xor
not
cwde
xor
mov
rol
xchg
adc
inc
mov
or
dec
rol
pushf
pop
add
cmp
repz
cmp
mov
cmp
repz
test
enter
ds
call
xor
out
sahf
inc
push
pusha
js
nop
jns
out
movs
mov
loopne
sahf
out
test
inc
push
jo
sahf
out
cwde
mov
in
clc
loope
dec
repz
adc
xor
adc
test
scas
imul
cmp
push
adc
xchg
loopne
adc
out
push
jmp
or
aas
dec
repz
pop
out
jg
push
push
adc
and
iret
sbb
(bad)
pop
add
dec
int
mov
(bad)
aaa
ins
sbb
jne
add
add
lods
push
add
push
xor
cmp
(bad)
xor
out
and
jo
fadd
push
push
(bad)
fstp
out
or
or
or
pop
sbb
adc
and
into
test
xor
adc
cmps
daa
je
fld
adc
adc
rcr
and
pop
out
jo
add
xor
push
xchg
xchg
add
add
pop
pop
ret
or
das
pop
push
out
loopne
arpl
pop
xchg
sahf
out
fimul
cli
sti
add
(bad)
dec
repz
test
add
xchg
mov
mov
fbld
jbe
add
push
pop
mov
out
xor
lahf
xlat
push
sub
inc
xor
xor
xor
xor
fisttp
xlat
add
push
mov
add
lds
lds
inc
xlat
add
jae
push
fdiv
add
sbb
jns
out
inc
push
push
sahf
nop
movs
mov
call
jl
sub
jge
mov
retf
iret
adc
mov
xchg
mov
frstor
mov
jbe
mov
adc
fidivr
xchg
mov
(bad)
cmc
cmps
out
rcl
lock
mov
(bad)
(bad)
call
jno
ror
jbe
outs
(bad)
sbb
fs
xchg
cs
jb
xor
enter
lock
(bad)
call
outs
imul
in
jecxz
ret
and
out
movs
dec
jne
inc
test
pusha
ins
push
add
push
fild
imul
pop
iret
sti
mov
arpl
dec
push
je
sahf
out
cmp
lock
sub
sahf
out
pop
jo
mov
repz
sub
jl
cmp
ds
shl
add
outs
push
pop
js
cmp
repz
lods
shl
shl
jns
cmps
cmp
sar
ja
lock
ss
pusha
test
hlt
or
es
dec
iret
repz
pop
mov
out
call
out
idiv
and
outs
push
ins
mov
jns
movs
enter
pop
push
pusha
mov
mov
push
iret
repz
inc
je
(bad)
fdivr
out
fidiv
xlat
outs
push
pop
jl
dec
repz
mov
inc
pusha
ds
repz
lods
shl
and
iret
repz
scas
push
fs
mov
call
or
xor
cmp
out
sar
sbb
dec
ins
or
mov
out
sahf
out
pusha
xor
ror
mov
in
adc
xor
nop
mov
fadd
fild
xor
cmp
repz
jl
rcr
iret
repz
or
cmps
push
dec
push
loopne
call
dec
pusha
lock
out
mov
hlt
or
iret
repz
mov
enter
sbb
push
push
je
out
out
(bad)
call
cmp
out
sahf
ins
cwde
mov
jns
out
cmps
push
mov
call
push
jo
clc
cmp
mov
mov
fucom
jns
push
call
out
ins
test
cld
and
call
push
cwde
mov
out
(bad)
push
js
fdivr
adc
out
sahf
ja
push
test
lock
(bad)
push
mov
aam
adc
jbe
iret
repz
pusha
test
cmp
ds
jle
ins
mov
hlt
sbb
jbe
push
mov
(bad)
cmp
repz
test
iret
repz
repz
sbb
out
push
ins
pushf
shl
repz
cld
adc
out
jo
cli
cmp
xchg
mov
push
fucom
jns
pop
cwde
mov
out
sahf
out
push
jo
mov
fisttp
movs
enter
out
sbb
into
push
pop
jl
repz
xchg
mov
cld
and
popf
out
fidivr
in
repz
pop
and
sbb
cmps
push
pusha
nop
mov
cmp
mov
xchg
lahf
out
sahf
push
and
sahf
ja
push
pusha
mov
lahf
hlt
sub
(bad)
push
jl
les
sbb
pushw
jo
shl
idiv
or
into
push
cmp
jns
and
jns
out
pop
jl
int3
lock
sbb
push
out
call
out
cmp
and
jns
sub
cwde
mov
jns
adc
cmps
push
pop
jl
repz
mov
in
or
and
repz
sbb
imul
aas
add
int
jns
cwde
lods
int3
in
or
sbb
iret
repz
pusha
je
mov
imul
pop
push
inc
ins
fucom
jns
mov
(bad)
out
sahf
out
cmp
xchg
lods
jns
jge
int3
call
inc
pop
lock
out
lods
int3
call
cmp
push
push
push
jo
movs
int3
sahf
cmps
stc
cmp
or
sub
fs
out
sbb
outs
lock
into
push
pop
js
aaa
clc
cmp
mov
inc
push
sahf
out
sahf
pop
je
mov
lock
pop
jl
push
inc
push
push
ins
test
ds
rep
int3
call
inc
cmp
repz
js
enter
ja
add
dec
push
inc
pusha
js
jns
out
rcr
or
iret
repz
into
push
inc
pop
jo
lods
or
cmp
fdivr
adc
fidivr
out
push
inc
pusha
jl
test
jge
out
in
adc
sahf
push
dec
jns
out
fs
(bad)
loopne
out
out
or
xchg
push
dec
pusha
cmp
pushf
mov
call
iret
sbb
xor
test
repz
pushf
mov
dec
repz
repz
cmp
jo
(bad)
out
call
pusha
lahf
out
sahf
jl
shl
adc
cmp
repz
push
push
iret
repz
and
jns
out
ins
mov
lahf
call
inc
push
cmp
call
pusha
push
lahf
out
mov
cmp
repz
pop
and
loope
sbb
nop
jns
jns
mov
cld
and
(bad)
push
fs
out
test
clc
sbb
iret
repz
push
push
push
jo
lods
(bad)
fsubp
repz
cld
sbb
out
push
jge
out
js
aam
sbb
sahf
out
fidiv
push
push
out
fidivr
and
jns
jge
shr
and
sahf
push
je
sahf
ja
out
call
pusha
jl
lahf
out
mov
hlt
adc
repz
mov
loope
outs
push
ins
mov
int3
adc
ds
pop
je
fsubp
repz
in
or
outs
push
inc
jns
out
and
neg
jbe
pop
jl
shl
jns
jns
adc
ss
dec
ins
fucom
jns
nop
lods
shl
and
ss
sahf
out
fs
movs
mov
loopne
and
pushw
ins
mov
loope
cmp
int3
xor
sahf
push
int3
cmp
sbb
push
push
inc
pop
js
ds
repz
mov
adc
out
idiv
out
pusha
mov
sahf
out
push
pusha
test
mul
out
push
ins
cwde
mov
jns
adc
sahf
push
pusha
mov
cmp
int3
or
push
push
dec
fs
repz
movs
shl
xor
sahf
out
ds
push
je
mov
loopne
xor
in
jns
jge
mov
mov
push
lahf
out
push
js
call
ds
repz
je
hlt
and
mov
xchg
lahf
aaa
clc
cmp
sub
mov
mov
sahf
ja
push
pusha
mov
cld
iret
repz
push
test
iret
mov
nop
mov
out
xchg
clc
adc
jbe
pusha
sub
sahf
lods
enter
xchg
push
inc
mov
mov
push
loopne
cmp
push
mov
iret
xor
mov
hlt
sub
es
js
in
inc
fiadd
out
ds
nop
aam
inc
push
push
js
pop
jl
mov
adc
ss
jo
sahf
aaa
clc
cmp
sbb
push
push
push
jns
aam
adc
mov
cmp
repz
pop
jl
mov
jmp
pusha
mov
call
ins
mov
rcr
dec
fiadd
cmp
repz
pop
js
test
clc
repz
ds
out
push
jl
aaa
clc
cmp
test
fadd
inc
lahf
out
sahf
push
jl
int3
hlt
sbb
fdiv
ja
push
pusha
jl
lahf
dec
add
add
cmps
cmp
(bad)
in
retf
sub
push
add
xchg
pop
xor
scas
outs
mov
pop
bound
sbb
mov
add
pop
add
ficomp
pop
mov
add
mov
add
rcr
pop
and
xchg
add
mov
dec
cmp
outs
add
or
out
mov
in
add
add
add
daa
mov
es
cmp
add
daa
dec
(bad)
(bad)
enter
daa
mov
hlt
pop
add
movs
push
mov
ss
in
pop
pop
arpl
cdq
sbb
popa
bound
add
xchg
xchg
xchg
push
nop
push
add
ja
jbe
push
add
add
inc
jns
add
adc
push
pop
add
mov
push
je
jne
in
nop
inc
ja
jns
in
in
jnp
jge
out
out
sar
loopne
loope
push
adc
inc
je
std
mov
and
in
push
push
fistp
add
push
jmp
dec
pop
pop
add
imul
add
push
add
adc
adc
adc
call
daa
pop
daa
sbb
sbb
and
daa
sub
daa
bound
and
dec
and
(bad)
push
dec
dec
and
dec
mov
adc
dec
popa
push
enter
and
jno
(bad)
loopne
clc
(bad)
dec
stos
fisubr
fisubr
fidiv
fisubr
inc
ds
xor
sub
xchg
inc
mov
retf
pop
std
push
adc
(bad)
sti
(bad)
repz
and
(bad)
test
or
(bad)
jle
and
or
lahf
add
xchg
(bad)
std
daa
add
cmp
call
les
add
into
aaa
add
add
add
add
(bad)
sar
out
out
call
mov
fs
test
push
mov
iret
enter
jo
aaa
ror
push
sub
add
mov
test
das
mov
mov
daa
fmul
in
pop
jno
push
repz
into
sub
inc
push
pop
push
jo
mov
iret
mov
and
add
daa
hlt
push
or
dec
cmp
repz
cmp
nop
mov
mov
movs
add
fidiv
das
add
bound
cmp
inc
sub
fsub
or
mov
push
xor
out
sahf
dec
fs
test
mov
lock
push
cmp
cmp
repz
fs
lods
sub
iret
(bad)
fsubr
in
xchg
cmp
repz
ins
test
cmp
repz
mov
loopne
cmp
jae
adc
push
cmp
push
jl
test
aam
out
ds
in
cld
adc
pop
push
cmp
repz
repz
out
ds
fdiv
or
push
xor
out
sahf
dec
pusha
js
movs
mov
lahf
out
int3
fdiv
or
push
sahf
out
sahf
xor
je
mov
mov
jnp
out
data16
cmp
ins
test
out
cwde
mov
fdiv
repz
lock
xor
pusha
iret
repz
je
mov
aaa
clc
cmp
adc
push
cmp
out
fs
pushf
mov
jge
out
fdiv
or
push
cmp
out
push
push
jl
out
aam
add
push
iret
repz
sub
ins
sbb
(bad)
aam
cld
iret
repz
push
inc
push
ins
jl
iret
repz
movs
mov
loopne
hlt
or
fiadd
xor
out
sahf
out
je
pushf
mov
lock
(bad)
fdiv
or
iret
repz
push
cmp
repz
cld
adc
iret
jle
test
adc
cs
adc
out
call
out
fnstsw
add
push
dec
push
js
pusha
(bad)
fdivr
pop
mov
addr16
repz
out
inc
add
and
push
and
and
and
and
std
jg
and
gs
cmp
and
sub
sub
(bad)
jmp
xor
and
aas
and
inc
and
dec
and
(bad)
fild
and
pop
and
pusha
and
fs
and
imul
outs
and
and
fist
push
dec
add
and
jg
jmp
ss
and
inc
and
dec
fidivr
and
pop
and
mov
add
fisub
sub
sub
aaa
cmp
cmp
inc
dec
dec
dec
dec
push
push
push
push
pop
pop
pop
add
add
(bad)
jg
popa
arpl
imul
ja
jnp
add
sub
or
mov
ds
pop
mov
sub
sub
sub
add
push
jle
das
cli
xor
xor
xor
add
xchg
add
add
add
jge
lock
cmp
push
inc
add
inc
inc
mov
inc
add
inc
sub
dec
add
dec
sbb
jle
scas
clc
dec
add
dec
adc
push
add
push
mov
add
push
hlt
mov
add
pop
add
add
xor
add
bound
add
add
scas
cli
mov
push
add
add
outs
add
jo
jno
jb
mov
add
add
jbe
ja
add
jp
jnp
dec
fimul
jp
and
and
and
and
add
add
add
(bad)
(bad)
(bad)
inc
sub
sub
sub
add
add
add
add
add
xor
add
add
add
(bad)
(bad)
(bad)
inc
cmp
cmp
cmp
add
inc
add
inc
add
add
inc
add
dec
add
(bad)
(bad)
inc
dec
add
add
dec
add
push
add
push
add
add
push
add
pop
add
call
pop
add
pop
mov
pusha
add
bound
arpl
add
add
(bad)
(bad)
(bad)
jmp
imul
ins
add
outs
add
jo
jno
jb
jae
je
jne
jbe
ja
nop
inc
clc
(bad)
js
jns
jp
jnp
jl
jge
jle
add
or
jg
pop
mov
ret
sbb
xor
jns
add
adc
jno
daa
(bad)
jmp
inc
mov
(bad)
fdivr
adc
(bad)
(bad)
(bad)
jmp
push
mov
call
out
into
mov
cmc
sub
xchg
inc
xor
fcomp
sub
inc
mov
xlat
pop
mov
adc
std
mov
cmps
and
mov
bound
push
test
rcl
es
(bad)
mov
pop
adc
(bad)
push
adc
add
sti
shl
out
(bad)
(bad)
(bad)
jmp
and
pop
aaa
ret
xchg
pop
inc
add
mov
outs
mov
lea
(bad)
(bad)
(bad)
(bad)
cli
inc
popa
popf
ins
or
in
inc
jmp
pusha
dec
mov
mov
(bad)
call
jmp
mov
rcl
fxam
cdq
(bad)
clc
jl
pop
gs
lods
les
(bad)
(bad)
jmp
hlt
xchg
jmp
inc
cmps
and
ret
pop
pop
gs
int3
or
jge
out
call
pop
test
(bad)
jmp
(bad)
adc
add
cmp
xor
rcl
sub
mov
outs
clc
or
add
and
and
repz
xor
ins
fs
add
ins
inc
xchg
ja
pop
call
aas
pop
inc
pop
pusha
aas
and
data16
into
arpl
jl
aas
sbb
mov
jne
mov
cmp
arpl
xchg
mov
test
pop
and
inc
fcomp
pop
pop
mov
adc
outs
in
imul
pop
ins
js
inc
pop
or
mov
dec
or
pop
pop
lahf
mov
int3
fdiv
push
add
pop
add
pop
add
inc
push
fadd
sbb
and
cs
pop
or
adc
cmp
sbb
and
dec
inc
adc
inc
mov
inc
adc
add
aas
iret
dec
pusha
mov
sub
sbb
push
lahf
aas
test
aaa
lahf
out
mov
or
cmp
popa
test
cmp
sub
sbb
repnz
pop
or
add
mov
jne
dec
jno
jmp
shl
lahf
aaa
add
add
pop
add
daa
movs
cmp
fisttp
add
push
pop
cmp
push
inc
push
cmp
push
sahf
out
inc
(bad)
(bad)
(bad)
(bad)
jg
xchg
push
imul
inc
push
push
inc
inc
push
inc
xor
xor
dec
dec
inc
pop
sbb
adc
repz
ins
push
pushf
fsub
jns
out
inc
cmp
cwde
jbe
popa
add
popa
push
adc
out
jae
pop
inc
pop
das
or
adc
push
pop
add
mov
or
push
xchg
loop
sub
inc
jae
neg
bound
mov
inc
or
or
add
(bad)
mov
jns
call
push
push
add
rol
aaa
pop
aaa
mov
ror
fisttp
inc
push
add
or
stc
icebp
push
sahf
out
loope
add
mov
lock
xchg
test
add
cmp
jmp
int3
cmp
add
xor
bswap
aas
inc
mov
mov
(bad)
(bad)
(bad)
inc
dec
mov
shr
sbb
and
adc
das
out
pop
fbld
ins
pushf
pop
(bad)
(bad)
(bad)
jmp
outs
lahf
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
(bad)
(bad)
dec
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
(bad)
(bad)
(bad)
jmp
addr16
push
add
xor
push
into
inc
shl
or
inc
mov
mov
jle
(bad)
(bad)
inc
dec
mov
shr
out
push
fisub
loope
shr
bound
pop
(bad)
(bad)
(bad)
jmp
ins
popf
pop
or
cmp
push
(bad)
test
cmp
add
dec
mov
jbe
(bad)
(bad)
dec
inc
mov
sub
sbb
es
(bad)
sub
sbb
and
push
pop
cmps
xchg
push
(bad)
das
or
test
gs
push
mov
inc
lds
push
inc
dec
sti
in
mov
push
dec
xor
and
jae
push
xor
ss
mov
sbb
push
bound
mov
inc
sub
sbb
or
mov
push
and
mov
or
int3
int3
jle
ss
and
sbb
or
int3
int3
in
int
sbb
cmps
mov
(bad)
call
ss
xor
dec
mov
xor
aas
retf
xchg
scas
push
jmp
hlt
aas
stos
adc
shl
sub
cmp
jmp
aas
mov
push
loope
pop
stos
jb
push
test
lahf
pop
sbb
jo
or
mov
xlat
jecxz
or
sbb
or
adc
icebp
add
mov
sub
cmp
jnp
mov
push
and
sti
jne
es
mov
cmp
adc
cmp
repz
xor
and
jno
scas
repz
addr16
push
push
cmp
repz
push
xor
cmp
pop
into
repz
out
adc
pop
xor
add
popf
stc
sbb
inc
xor
loopne
sbb
pop
push
pop
sbb
pop
addr16
out
pop
out
add
femms
cmp
pop
add
aas
pop
pop
sar
pop
scas
push
push
push
xchg
sbb
test
aaa
daa
pop
inc
push
mov
or
cmps
xadd
cmp
xlat
cmc
mov
push
das
dec
add
jne
push
scas
outs
jns
js
adc
out
bound
jo
xlat
sub
push
aaa
cwde
jae
push
pop
iret
mov
pop
pop
add
pop
aaa
xlat
out
inc
aas
mov
aaa
ja
add
pop
cmp
add
out
sbb
add
add
push
pop
or
or
add
mov
add
add
add
add
or
call
sti
(bad)
(bad)
jmp
xor
adc
pop
and
xor
inc
mov
adc
xor
xor
(bad)
jg
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
(bad)
(bad)
(bad)
call
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
mov
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
lock
(bad)
call
aam
(bad)
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
data16
pusha
gs
bound
gs
add
ja
adc
push
pop
popa
jno
stc
add
adc
push
push
lock
shl
xor
and
or
sub
sbb
gs
mov
sub
cmp
repz
movs
add
pop
dec
repz
and
dec
ins
call
adc
call
call
sahf
out
push
js
mov
repz
sub
js
mov
mov
clc
mov
pop
add
mov
jo
sbb
cmps
xlat
mov
mov
push
ffreep
push
mov
test
mov
add
add
ret
repz
jbe
add
inc
jmp
call
xchg
ror
jl
shl
in
add
jns
mov
or
mov
in
cmps
dec
repz
pusha
sub
nop
push
imul
cmp
push
aaa
push
pushf
lea
cmc
push
mov
sub
scas
jge
out
push
mov
cs
lods
pop
xchg
mov
fsubr
sub
fs
push
push
sbb
out
dec
sti
pop
cdq
inc
in
and
push
mov
push
mov
pop
inc
push
add
ds
mov
fs
addr16
in
lods
retf
ds
or
loopne
shr
clc
pop
add
es
pop
pop
(bad)
fs
data16
data16
or
idiv
xchg
int3
inc
push
lods
hlt
ins
add
mov
rol
outs
in
pop
jbe
out
js
jnp
cs
inc
mov
pusha
jle
mov
in
sar
ds
jle
cmps
push
push
xchg
push
push
cmp
loope
pop
push
push
scas
pop
mov
mov
push
mov
rol
cmp
js
rcr
test
adc
sub
out
mov
push
lock
mov
push
fisubr
fistp
xor
push
es
inc
cs
out
mov
div
div
mov
sbb
jnp
inc
cmps
pop
fisub
jbe
push
sub
ss
push
faddp
jnp
loopne
sub
mov
push
fidiv
(bad)
je
pusha
outs
inc
mov
je
jne
(bad)
hlt
jp
sbb
int3
out
loopne
adc
movs
push
test
ror
scas
jge
mov
push
sub
xchg
ds
mov
cmps
pop
cs
out
push
add
neg
push
sahf
fmul
call
pop
ds
or
xchg
mov
pusha
xchg
aam
xchg
xchg
mov
mov
dec
jo
lods
xchg
in
loopne
loopne
push
int3
push
mov
cmp
loopne
int3
push
xchg
xabort
clc
sar
mov
in
test
xchg
(bad)
fisubr
ficom
div
mov
outs
push
inc
jle
jbe
jnp
lock
and
adc
sbb
push
ds
imul
loopne
test
adc
dec
and
add
test
jnp
pop
push
mov
cmp
and
adc
in
mov
inc
mov
ja
fisub
or
mov
jle
add
dec
pop
outs
sar
pop
fdivrp
push
push
int3
es
xchg
fmulp
push
adc
shr
xchg
imul
mov
push
cld
jbe
lods
out
pop
pop
out
mov
cs
sub
jl
mov
lds
pop
inc
mov
jbe
mov
adc
test
push
hlt
(bad)
mov
inc
outs
iret
pop
adc
ins
cmp
test
push
ds
cmps
js
neg
pop
mov
push
les
test
out
add
push
pushf
ss
pop
jbe
cmps
push
mov
fidivr
jbe
mov
out
in
in
mov
sbb
cmp
adc
pop
mov
(bad)
in
jnp
out
loope
cld
push
loopne
inc
out
mov
out
in
add
outs
mov
inc
inc
inc
cwde
push
adc
lock
jbe
mov
cmp
nop
jnp
mov
pop
into
dec
ds
(bad)
mov
sbb
faddp
ret
lds
pop
outs
mov
pop
sti
cs
cmp
fsubr
aam
movs
out
jge
mov
fdivr
(bad)
loopne
jl
mov
enter
inc
pop
scas
movs
push
mov
sar
out
(bad)
dec
ss
ss
cmc
push
lods
sahf
ds
movs
push
sahf
xor
(bad)
cmps
xlat
push
mov
out
loope
sbb
rcr
(bad)
call
jnp
data16
mov
mov
(bad)
pushf
push
out
cmp
or
add
push
add
sbb
fidivr
mov
push
cmp
push
mov
inc
inc
mov
outs
mov
pop
out
jbe
inc
hlt
inc
rcr
mov
mov
fidivr
into
cwde
neg
cs
mov
les
push
xor
out
loop
push
je
loopne
fadd
ins
push
sahf
pop
fbstp
add
add
push
jo
mov
outs
or
(bad)
(bad)
cwde
dec
iret
loopne
mov
mov
and
mov
cmps
jge
dec
inc
push
inc
cs
inc
mov
sbb
or
out
push
int3
lahf
iret
pop
mov
cmp
js
pop
pop
push
pusha
out
or
add
mov
push
les
inc
fisubr
sub
inc
ja
adc
mov
(bad)
dec
in
js
cmp
sar
push
fdivr
jp
ins
es
cmp
inc
int3
adc
test
pusha
xor
fcom
pop
aas
div
lock
cmp
(bad)
adc
mov
mov
pushf
dec
xor
and
in
xor
js
sub
ins
and
pop
mov
test
enter
jmp
mov
or
hlt
loopne
loopne
aas
out
adc
sar
hlt
sahf
ins
push
mov
xchg
out
dec
pop
sbb
push
push
push
scas
jl
jo
enter
jnp
mov
dec
sar
cli
mov
pushaw
das
cmp
out
outs
sub
push
loopne
cmp
xchg
jle
push
cmp
loopne
pop
inc
aam
sub
jp
outs
or
or
cmp
mov
push
push
fisubr
fs
push
pusha
xor
mov
dec
push
push
es
cmc
mov
push
icebp
push
or
cld
dec
adc
daa
fidivr
mov
cmps
test
outs
push
jns
mov
hlt
es
inc
mov
push
dec
push
inc
pop
loopne
aam
jge
pop
adc
dec
je
mov
sti
dec
sub
mov
jo
add
xor
aam
jno
loopne
jle
jle
mov
div
je
mov
ss
test
cmp
jnp
out
loopne
add
jo
and
jl
add
es
and
je
loopne
test
push
pushf
cmp
js
inc
dec
push
les
push
(bad)
push
inc
hlt
mov
lods
sahf
add
test
jo
jo
test
dec
push
lock
dec
xchg
dec
ds
sahf
add
sbb
test
call
jnp
pop
nop
in
cmp
fild
sbb
cs
enter
ret
cmp
es
xchg
inc
sahf
rcl
push
lock
and
loopne
or
test
mov
aam
ja
and
out
hlt
push
add
mov
out
je
pop
mov
mov
out
loopne
sbb
inc
pop
movs
push
sbb
pushf
out
fidivr
ins
out
fmul
xchg
js
loopne
call
push
xor
pop
push
pop
ss
mov
inc
sbb
inc
mov
into
push
loope
cmp
pop
out
test
jnp
lock
xor
ss
shl
pop
les
push
div
sbb
test
add
push
sbb
hlt
push
cs
mov
data16
push
pop
xor
mov
mov
test
mov
cs
dec
pop
sbb
js
in
mov
ins
into
out
cld
(bad)
pushf
loopne
pop
pop
(bad)
out
int3
push
push
jle
push
js
call
es
aam
icebp
jo
ds
push
jo
movs
push
mov
push
push
sub
enter
dec
(bad)
faddp
rol
fs
int3
pop
out
mov
pop
pop
test
fs
js
jo
fidivr
push
mov
into
sbb
add
ja
sub
pop
ins
pop
mov
sub
loop
mov
cs
dec
pop
pop
out
loopne
push
(bad)
cld
outs
nop
ds
ds
fiadd
(bad)
pop
shl
aam
popf
icebp
push
xchg
cwde
mov
push
push
or
mov
mov
mov
lock
jbe
(bad)
(bad)
cld
cmp
sub
xchg
jle
xchg
push
dec
ss
ret
les
mov
mov
ror
mov
lds
(bad)
pushf
jle
push
and
cmp
mov
ret
imul
pop
cmp
push
and
dec
cmp
pop
jne
sbb
test
out
sbb
push
lock
iret
rcl
jle
jbe
les
push
out
mov
clc
mov
pop
pop
push
pop
data16
test
clc
pop
inc
pop
pop
out
mov
pop
fcom
sysret
pop
pop
and
xchg
pop
sbb
cmp
fisub
mov
ja
sbb
es
add
cmp
(bad)
pop
data16
push
pop
push
pop
out
push
jl
nop
push
je
xchg
cmp
cmp
ja
aam
sar
scas
xchg
ret
rol
cld
out
xchg
push
mov
or
lock
out
dec
es
and
test
loop
loopne
pop
in
jbe
out
cmp
mov
scas
movs
outs
push
jnp
cmp
inc
lock
fs
ss
pusha
push
lock
push
fisubr
or
adc
lock
pushf
cmps
push
xor
sar
push
mov
push
js
mov
lock
ror
push
and
dec
ds
jbe
ret
loop
ins
test
jo
push
jle
mov
push
je
(bad)
out
inc
xor
ins
inc
mov
movs
mov
mov
mov
pushf
mov
mov
mov
mov
jle
xchg
les
sbb
data16
shr
mov
ja
push
mov
int3
sahf
cld
neg
add
cmps
pusha
nop
sbb
into
sbb
cs
es
cmp
fadd
enter
test
in
dec
call
imul
sahf
push
xor
pop
xchg
idiv
jl
pop
out
loope
call
push
test
nop
jbe
lock
sub
fs
data16
nop
push
push
push
push
mov
push
lods
cs
jl
mov
not
push
hlt
xchg
jecxz
mov
data16
xchg
jnp
xchg
loopne
add
xor
clc
es
push
loopne
loopne
xchg
inc
mov
pop
out
jle
out
(bad)
mov
cmp
cs
cmp
adc
cwde
mov
sbb
add
push
pop
inc
jbe
cs
cld
mov
mov
xchg
cs
lds
sbb
(bad)
js
adc
movs
sahf
icebp
fidivr
shl
pop
(bad)
mov
pusha
push
sub
xor
mov
fmul
cwde
hlt
cmp
outs
mov
movs
out
sbb
sahf
jo
lods
push
pusha
scas
and
sti
jp
xchg
and
ins
loope
icebp
lock
cld
mov
mov
fidiv
adc
mov
xchg
pusha
push
je
clc
cmp
or
fmul
ja
mov
mov
das
ret
mov
(bad)
push
(bad)
xchg
mov
push
dec
out
fs
icebp
jo
outs
and
out
loope
push
push
shl
lahf
sub
or
lods
pop
scas
push
fistp
jo
push
test
cs
test
jle
mov
out
bound
push
fadd
cwde
icebp
lock
js
(bad)
test
fimul
sub
push
call
pop
movq
cwde
xchg
jbe
xchg
int3
jo
fidivr
loopne
je
clc
ds
test
mov
sahf
jl
xchg
xchg
xchg
push
enter
iret
pop
dec
out
sbb
ins
bts
adc
jg
push
enter
sahf
lds
jg
sub
push
loope
xchg
xchg
(bad)
clc
iret
mov
add
push
push
xchg
adc
outs
sbb
lds
inc
aam
dec
mov
push
pop
mov
outs
inc
scas
add
fmul
xor
mov
pop
mov
sbb
ja
sbb
sbb
push
sbb
jle
push
mov
push
jbe
pop
pusha
data16
cmp
fsubr
mov
cmp
jge
loop
test
cld
push
in
push
cmp
dec
add
xlat
jbe
out
mov
lods
test
(bad)
div
pushf
pop
out
push
cwde
xchg
out
shl
or
(bad)
call
out
push
and
add
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
add
jl
inc
inc
cmc
inc
add
mov
mov
hlt
aas
je
fadd
jnp
jns
sar
rol
fsubp
push
fdivr
enter
push
dec
sahf
out
lods
ss
fcomp
mov
clc
push
cld
ds
jnp
neg
ss
hlt
push
jnp
out
mov
sbb
iret
mov
mov
ds
jns
fidivr
cld
push
sar
clc
push
ds
scas
cmp
call
lock
out
jo
ss
aas
jns
aaa
cmp
stc
out
pusha
jl
sahf
out
in
and
test
adc
xor
sub
cmps
xor
push
pusha
xor
repz
int3
repz
neg
shl
mov
fs
cmp
jbe
mov
inc
push
xor
out
call
movs
iret
repz
mov
push
cmp
or
imul
clc
mov
pusha
test
es
push
dec
add
xchg
cmps
pop
aam
mov
push
add
adc
add
push
dec
jnp
imul
pushw
js
xchg
test
das
jnp
jecxz
in
movups
ss
push
push
iret
repz
outs
mov
fnstsw
add
push
push
add
push
inc
push
xchg
cmp
pusha
jp
movs
push
(bad)
pop
xor
push
out
adc
add
xor
add
aas
add
imul
gs
xor
cs
ins
(bad)
(bad)
out
pop
inc
gs
outs
imul
arpl
jae
jb
outs
data16
sti
cmps
std
div
outs
ds
jae
jo
pop
push
push
push
push
outs
push
gs
in
fidiv
jae
xchg
push
pop
dec
dec
outs
push
data16
mul
jae
mov
inc
je
push
jne
gs
cmp
daa
fimul
outs
inc
sub
gs
ja
or
and
jns
mov
and
push
outs
xchg
outs
imul
addr16
ins
sti
(bad)
int
jb
imul
ins
jo
popa
inc
loope
sbb
cmps
scas
daa
dec
jae
outs
ja
xor
loopne
mov
jmp
outs
mov
push
inc
jo
outs
cmp
ss
add
inc
pop
push
cli
gs
mov
dec
fwait
inc
adc
popa
jb
pusha
cmp
fsub
gs
jbe
ins
xchg
rol
sub
jbe
test
add
dec
gs
js
ja
fs
mov
outs
fs
push
dec
inc
push
imul
push
outs
xor
js
fld
dec
lods
gs
inc
jne
inc
gs
mov
sbb
inc
outs
cmp
sub
mov
and
inc
pop
pop
sbb
xor
bound
arpl
inc
das
mov
inc
mov
xlat
xor
iret
sub
sub
inc
ret
and
pusha
lds
push
fist
addr16
push
rcl
ins
lea
cli
cmp
ror
dec
cmp
cwde
push
xchg
mov
jno
xor
ins
xor
inc
cmp
xor
mov
and
shr
ins
xor
sahf
inc
popa
pop
daa
xchg
loopne
mov
mov
push
dec
inc
push
dec
cs
mov
out
inc
dec
dec
mov
ins
jo
fmul
ss
mov
xor
xchg
sbb
add
or
test
xor
add
mov
les
test
int3
or
test
push
ja
jae
xor
push
dec
inc
xchg
dec
enter
sbb
addr16
jns
and
adc
add
std
repz
pop
sub
sub
xor
add
les
push
xchg
outs
ja
ins
outs
popa
loopne
gs
adc
push
dec
gs
outs
fs
ins
jo
pop
outs
mov
out
mov
inc
push
aad
jmp
dec
mov
sti
jge
adc
ins
adc
xchg
inc
ins
bound
arpl
outs
and
jo
push
and
jb
push
imul
ins
jo
ins
xor
jbe
jae
in
mov
cmp
xor
sub
xor
xor
aaa
xor
cs
in
xor
sub
add
stos
stos
and
or
mov
add
add
dec
add
or
push
(bad)
mov
or
inc
add
dec
add
dec
add
cs
not
inc
push
sbb
dec
adc
push
inc
adc
int3
cdq
pop
push
or
pop
data16
push
push
pop
ss
push
xchg
jae
int3
scas
fnstenv
push
push
es
cmp
jae
data16
dec
push
jnp
or
into
xchg
or
cmp
stos
int
ss
push
or
push
push
cmp
pop
cdq
popf
ja
add
add
xchg
and
inc
sbb
xor
push
lock
rol
jmp
gs
inc
add
idiv
out
pop
rol
sbb
sbb
add
adc
cwde
inc
pop
add
add
(bad)
adc
(bad)
fadd
cld
in
jl
bnd
clc
aas
push
pop
jmp
loop
imul
int3
pop
les
add
cld
or
and
push
adc
(bad)
je
pop
popa
add
popf
sub
add
test
popa
mov
prefetch
push
mov
shl
add
add
cmp
mov
lss
jg
rcr
out
add
sbb
ficomp
neg
out
(bad)
cmp
out
pusha
sbb
js
loopne
sbb
mov
lock
push
sbb
or
pop
pop
push
push
cwde
jae
aas
pop
xchg
sbb
pusha
mov
addr16
mov
pop
push
pop
add
xor
push
pop
std
outs
push
ss
cmp
mov
fs
jl
rol
pushw
jbe
mov
mov
jg
inc
out
loopne
fadd
js
retf
add
outs
jo
jns
mov
dec
nop
pop
adc
cmp
xor
push
mov
sbb
neg
sbb
adc
push
push
retf
inc
or
dec
add
jnp
or
call
and
cmp
jae
xor
cmp
xorps
dec
sub
out
pop
outs
daa
dec
out
mov
gs
push
clc
jae
add
jmp
push
and
push
call
daa
pop
mov
sub
pusha
add
mov
cs
add
sbb
xlat
pop
sbb
(bad)
mov
push
pop
pusha
cs
das
aas
pop
jg
pop
mov
mov
add
fwait
add
pop
in
les
test
ficomp
push
or
push
pop
push
sub
out
aas
add
sbb
addr16
gs
cwde
call
mov
push
pop
das
aaa
add
add
jno
push
pop
jo
dec
sub
jge
jl
ja
cmp
sbb
cmp
push
sub
inc
add
out
loopne
jle
inc
add
xor
xchg
add
sbb
push
push
sbb
inc
add
sub
adc
ret
rol
lock
sbb
xor
dec
sbb
cmp
data16
push
sbb
or
test
add
push
ins
push
shl
xchg
add
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
adc
(bad)
(bad)
test
add
inc
add
arpl
imul
add
js
push
add
pop
mov
add
es
jbe
fstp
or
popa
xchg
push
inc
add
arpl
add
add
xor
mov
or
xor
pop
push
aas
add
jns
jo
adc
int3
push
ret
add
xor
fadd
add
or
inc
or
jne
int
jnp
push
jbe
sbb
push
adc
push
retf
xchg
or
mov
cdq
mov
or
inc
add
or
loop
addr16
mov
add
data16
sbb
mov
sbb
pusha
push
pushw
inc
pop
ret
cwde
jae
es
push
jecxz
xor
pop
and
dec
pusha
neg
cmp
ss
push
or
or
ret
add
dec
dec
adc
add
cwde
or
and
push
sub
xor
pop
inc
and
push
cmp
ror
inc
push
sbb
int3
int3
jnp
adc
push
mul
cmps
xor
bound
and
pushf
ror
mov
jae
out
int3
add
outs
cli
or
pushf
fnstenv
or
cmp
add
push
ss
ds
add
inc
rol
push
lahf
mov
call
mov
cdq
cmp
aaa
sub
jp
rol
mov
fbstp
xchg
pop
out
mov
push
add
aas
cmp
adc
cdq
jle
inc
cvtpi2ps
add
pushf
pop
inc
jecxz
mov
cmp
cdq
and
adc
outs
mov
stos
aas
sbb
mov
outs
ficomp
data16
and
ret
and
dec
push
es
mov
jle
xor
add
xor
out
jbe
es
inc
push
dec
int3
ret
and
inc
or
push
jo
push
(bad)
(bad)
and
dec
push
push
out
outs
mov
fcom
sbb
inc
fild
jae
jle
movs
sbb
cmps
sbb
add
add
inc
add
imul
cmp
outs
dec
and
aaa
xor
mov
inc
add
add
add
add
add
and
cdq
cdq
jmp
es
push
(bad)
int
adc
push
push
mov
(bad)
scas
cdq
add
aas
outs
xor
cdq
and
outs
adc
push
es
jae
int
mov
rol
pop
bound
cmp
call
inc
dec
addr16
int3
or
sub
sub
das
mov
das
push
sbb
ror
out
push
push
add
fisttp
add
push
test
inc
and
arpl
jge
cwde
add
mov
add
aas
dec
xchg
in
xchg
inc
pop
jg
into
int3
pushf
fld
add
fld
or
ds
into
rcl
rcr
mov
outs
dec
sub
and
cwde
xchg
test
xor
shr
pop
sbb
cs
mov
xchg
fnstenv
dec
cmps
scas
xor
cwde
mov
jp
jmp
sbb
loopne
adc
ja
mov
jecxz
inc
dec
sub
mov
add
ret
pop
mov
push
jmp
fwait
iret
jmp
(bad)
aam
mul
sub
push
inc
loope
push
out
pop
sahf
sub
mov
xchg
shr
rol
and
pusha
push
pop
xchg
subps
xor
mov
icebp
stos
pop
(bad)
pop
bound
rcr
inc
bound
xchg
(bad)
into
sub
xor
adc
xchg
jo
sbb
ret
mov
loopne
xchg
adc
inc
mov
dec
idiv
mov
or
push
adc
test
or
add
fwait
mov
outs
into
adc
outs
push
or
push
xor
add
or
mov
imul
push
bound
iret
ror
sub
mov
sub
out
sar
cmp
inc
jae
and
adc
or
fiadd
mov
push
daa
out
sbb
xchg
push
dec
ja
ss
or
gs
push
ja
or
int
dec
sbb
fwait
inc
add
xor
dec
outs
cmp
or
add
add
add
xchg
aaa
jnp
push
fdiv
xor
outs
xor
outs
not
jae
pop
cmp
loop
not
sbb
shl
push
mov
retf
repnz
adc
sbb
sbb
pop
lods
ret
pop
xchg
ret
xchg
mov
daa
cmp
xchg
xchg
jns
(bad)
add
jp
pop
or
push
sbb
retf
xchg
mov
pop
(bad)
repz
cwde
xchg
scas
mov
aaa
pop
pushf
adc
jb
in
push
inc
push
das
add
cmc
movhps
jae
mov
push
loop
sbb
push
or
ss
push
pop
dec
mov
repnz
shl
cmp
mov
iret
arpl
rcl
xor
add
and
iret
or
push
mov
dec
pop
das
mov
test
add
pop
inc
cmp
xor
sub
test
xor
fld
ret
jb
clc
test
and
add
xchg
inc
dec
xlat
add
fmul
mov
fld
push
jo
repz
push
(bad)
maxps
jae
sbb
cmps
fstp
xor
rol
mov
iret
push
mov
sti
das
outs
nop
pop
fidiv
cmps
jnp
pop
push
mov
xchg
xor
mov
inc
rcr
jnp
out
jno
sti
movd
outs
and
add
enter
pop
and
lds
jmp
aas
das
mov
rcl
or
mov
pop
pop
jae
inc
and
cmp
out
pop
or
cmp
stos
pop
pop
and
arpl
mov
cmp
cmp
push
adc
push
xor
mov
pop
jnp
pop
ja
ret
adc
add
add
inc
cdq
push
jge
aaa
xlat
add
lds
jae
inc
popa
dec
sti
imul
movs
sub
(bad)
fld
lea
xchg
call
ss
gs
jae
ret
push
xor
cmp
daa
test
ds
pop
xor
and
out
sbb
into
rcl
out
stos
bound
xor
outs
mov
fwait
xchg
xor
(bad)
jo
and
cmp
ret
fucomp
sub
cmp
das
pop
add
cmp
sub
pop
mov
ja
push
pop
xor
dec
adc
mov
ret
xchg
pop
imul
pop
push
cmp
ss
mov
test
cdq
xor
(bad)
sbb
push
or
fwait
pop
add
adc
loope
scas
pop
repz
mov
pop
push
jb
push
cwde
xchg
rcl
pop
xlat
sub
dec
xlat
pusha
test
test
pop
mov
sub
or
dec
sti
or
sahf
xchg
mov
div
xchg
push
xchg
and
add
shl
mov
cli
add
push
and
imul
xor
fild
mov
add
ins
push
or
into
push
push
adc
cwde
xor
out
and
inc
lahf
adc
arpl
mov
in
arpl
cmp
es
cmp
test
cmp
xchg
push
outs
(bad)
retf
mov
cwde
pusha
adc
inc
add
imul
scas
mov
outs
and
inc
popa
sub
xchg
retf
aad
cmp
adc
push
jnp
adc
pop
jae
cwde
and
mov
ret
mov
sbb
xchg
scas
pop
xchg
mov
sbb
test
pusha
push
pop
adc
xor
mov
sbb
and
push
shl
(bad)
cmp
call
sub
imul
or
push
inc
push
bound
xor
xor
rcl
dec
rol
cmp
daa
dec
stos
popa
sbb
adc
(bad)
sbb
pop
fcom
push
mov
inc
(bad)
popa
int3
jae
jae
push
call
repz
dec
sbb
inc
jnp
(bad)
adc
jnp
test
cli
(bad)
mov
and
dec
inc
es
mov
or
shr
and
fwait
push
retf
sub
mov
xor
mov
shl
les
and
ja
sbb
shl
xchg
pop
mov
sti
outs
add
into
or
xor
mov
jnp
pop
push
add
cmps
rol
xor
or
(bad)
loop
shl
dec
pop
inc
pop
push
lods
btc
pop
(bad)
push
pop
nop
cwde
test
xchg
retf
adc
das
cmp
fild
push
enter
xor
arpl
movs
int
out
pop
adc
push
ja
push
add
repnz
cmp
add
sahf
push
cmps
(bad)
mov
add
out
xor
sbb
push
and
pop
dec
xor
and
rol
repz
test
push
bound
dec
cmp
pusha
push
xchg
scas
xchg
shl
mov
sub
and
adc
add
iret
cs
fmul
inc
mov
ins
mov
or
cmp
add
add
mov
cmp
sub
jae
imul
mov
imul
test
cmp
add
pop
test
(bad)
dec
and
adc
(bad)
mov
and
inc
push
xchg
jae
add
inc
push
xchg
xlat
mov
and
jecxz
xchg
lods
adc
adc
test
sbb
idiv
jo
mov
mov
and
xor
pop
jnp
add
push
push
xor
(bad)
(bad)
xchg
and
mov
and
pop
lods
sbb
cs
inc
cmp
add
repz
nop
arpl
mov
aaa
scas
jecxz
or
push
add
lds
jmp
adc
jnp
adc
pusha
push
pop
add
jo
cmps
mov
and
push
and
jecxz
sbb
movlps
test
repz
lock
aas
imul
cmps
adc
and
adc
out
push
inc
pop
int3
inc
or
add
ret
or
das
into
sar
repz
out
inc
mov
sti
sub
and
jo
popa
cmp
imul
adc
jnp
data16
lock
push
push
gs
mov
jb
popa
add
cmp
push
mov
and
jmp
jne
add
push
inc
arpl
inc
and
push
movs
push
repz
inc
sub
pop
pusha
and
jp
xor
sbb
dec
jecxz
jbe
push
inc
mov
dec
or
out
add
out
sbb
data16
addr16
add
dec
stos
inc
nop
pusha
jp
inc
pop
xor
and
or
pop
mov
add
(bad)
push
mov
push
adc
xor
push
push
mov
inc
loop
push
sub
pop
addr16
or
and
cmp
nop
add
ret
out
dec
sbb
fild
adc
mov
inc
dec
out
shl
mov
pusha
out
add
iret
dec
adc
push
xchg
(bad)
rsqrtps
aas
cwde
(bad)
das
and
repnz
adc
mov
jno
xchg
inc
fild
rol
jnp
fcomp
jmp
push
imul
sbb
add
xor
popa
cmps
and
into
and
xchg
jnp
scas
inc
adc
aas
mov
scas
and
test
inc
pop
xlat
add
push
cdq
xor
pop
inc
scas
or
and
movntq
nop
or
sub
or
out
jo
test
adc
push
popf
add
(bad)
cli
ret
sahf
add
push
xlat
push
out
push
adc
stos
inc
data16
ret
mov
addr16
add
mov
lds
or
fisub
arpl
outs
cmps
or
mov
sbb
adc
xlat
pop
add
dec
lahf
inc
mov
push
daa
fs
(bad)
scas
(bad)
adc
dec
neg
rcl
mov
pop
or
out
pop
cmp
arpl
push
inc
scas
dec
(bad)
inc
add
test
dec
ret
loopne
sahf
or
in
shl
pop
pusha
xor
push
sbb
push
add
xchg
or
mov
add
rcl
out
int3
ss
ss
dec
and
ret
test
dec
mov
(bad)
pop
xor
cdq
push
xchg
sub
cli
dec
or
rcl
xlat
mov
push
xor
mov
test
add
xor
or
movs
shl
pop
inc
pop
test
add
ficom
cmps
jmp
lods
adc
adc
or
add
fnsave
push
pop
(bad)
pop
nop
sub
dec
sti
pop
pop
and
add
das
cwde
add
xor
daa
add
push
test
jp
iret
jae
test
movs
ja
ins
xor
pusha
(bad)
mov
or
in
pop
retf
and
pusha
inc
sub
(bad)
ror
or
ja
push
ret
pusha
xchg
inc
mov
adc
push
adc
jmp
bound
or
xchg
xchg
sbb
or
jecxz
inc
add
mov
popa
inc
xchg
sar
or
pop
(bad)
rcr
sahf
adc
das
(bad)
cmp
adc
xchg
retf
and
jecxz
xor
inc
imul
push
sub
out
outs
and
ja
xor
add
adc
fwait
data16
cs
das
fbstp
jo
popa
mov
(bad)
adc
pop
stos
push
adc
add
test
pusha
mov
cmps
xlat
lea
loopne
shl
sbb
jne
bound
xchg
adc
xor
sub
push
stos
arpl
add
pop
jecxz
in
sub
or
dec
sti
inc
add
add
sar
cmp
xor
or
scas
cmp
inc
(bad)
out
imul
push
pop
sub
into
cmp
ret
adc
jmp
mov
or
add
and
push
ret
rcr
or
or
test
loopne
inc
adc
or
jb
pop
adc
or
add
int3
xchg
mov
cmp
mov
shl
sub
aaa
daa
add
jae
jb
inc
and
lahf
dec
jecxz
pushf
fiadd
sub
jp
and
push
ret
jne
sbb
jae
ss
or
(bad)
fld
push
test
pop
add
sub
jae
pop
push
xor
jb
cmp
or
add
loopne
ud0
test
inc
out
aad
js
test
mov
or
cmp
cmp
ins
push
fisub
xor
add
inc
sub
inc
sbb
cwde
inc
add
adc
ja
loopne
adc
or
test
push
pop
xchg
scas
inc
fld
outs
rol
add
and
ja
adc
loop
pusha
repnz
mov
dec
adc
pop
inc
mov
xchg
rol
arpl
pop
xlat
test
mov
mov
push
xor
loopne
stos
pop
adc
inc
out
mov
shl
inc
popa
sti
sub
inc
pop
and
test
dec
cmp
jae
mov
adc
enter
retf
adc
cmps
xor
inc
lock
jecxz
out
ret
pusha
pop
sbb
xchg
imul
fs
rep
dec
fwait
or
pop
(bad)
mov
mov
and
dec
xchg
push
or
lods
(bad)
mov
push
jmp
mov
cmp
call
push
pop
sub
xor
adc
sub
(bad)
sbb
mov
and
adc
jo
mov
jo
fwait
sub
or
mov
adc
cmp
push
mov
fcmovnbe
add
sbb
xchg
xchg
arpl
sub
jno
les
pop
jae
data16
popa
js
mov
ins
cmps
aaa
cli
or
push
inc
ret
mov
mov
rcr
jno
cmp
mov
hlt
mov
adc
mov
loop
or
sub
imul
loopne
and
adc
cmp
xchg
call
sub
cmp
cmps
stos
inc
addr16
adc
jmp
fisttp
mov
inc
pusha
inc
scas
es
sbb
add
retf
cs
ins
and
mov
pop
mov
push
(bad)
(bad)
push
lahf
lea
(bad)
and
push
mov
lea
pusha
je
jg
push
pop
sti
daa
add
jae
push
pop
pop
push
into
popa
and
dec
xchg
or
addr16
pusha
jo
fwait
arpl
add
mov
jb
outs
lods
repz
(bad)
out
ret
and
call
xchg
cmp
mov
clc
shr
push
bound
cmp
and
(bad)
cmps
retf
adc
mov
outs
cmps
sahf
aaa
outs
cmp
inc
shr
xor
inc
jo
adc
fwait
mov
test
inc
loopne
fwait
mul
add
mov
adc
jb
and
push
xchg
arpl
push
nop
pusha
pop
pop
mov
dec
xor
pop
jmp
add
ins
ret
(bad)
arpl
xchg
and
daa
adc
lock
mov
pop
push
ret
xor
or
mov
mov
mov
pop
inc
push
xor
sub
xchg
cs
xlat
sti
xchg
add
push
xchg
push
movs
or
ja
or
push
push
pop
fistp
pop
xchg
and
push
out
push
sbb
pusha
xlat
lahf
inc
xchg
and
cmps
add
push
test
mov
and
ret
daa
mov
neg
es
mov
fwait
xchg
mov
cmps
daa
btr
loopne
dec
pop
rol
jle
sub
aaa
fwait
dec
pop
or
out
bound
cmp
cmp
xchg
nop/reserved
aas
aaa
xrelease
inc
xchg
mov
push
mov
ja
or
add
add
push
xor
retf
inc
mov
push
add
sub
inc
pop
xor
mov
fsub
das
mov
xlat
shl
add
pop
ret
dec
imul
or
add
fiadd
or
mov
(bad)
mov
lea
push
imul
and
and
fild
jne
mov
inc
inc
mov
popa
dec
inc
pushf
fbstp
or
and
adc
xor
dec
push
xchg
xchg
mov
sbb
mov
das
push
and
popa
cli
xchg
aaa
adc
retf
inc
call
sti
xchg
and
mov
xor
inc
loopne
and
pop
add
jae
cmps
xchg
mov
adc
dec
es
sub
pop
add
(bad)
fistp
rcr
sub
sahf
xor
mov
cmp
jp
pop
or
jb
out
or
repnz
pop
jno
mov
push
mov
shr
add
inc
xor
inc
retf
aas
pusha
pop
pop
and
adc
adc
dec
mov
dec
push
and
jo
stos
pop
push
adc
cmps
daa
xchg
repnz
or
outs
pop
pop
mov
jo
and
add
add
inc
stos
xchg
shl
sub
fstp
shl
cmp
adc
mov
jno
xor
test
or
fdivr
xor
pop
mov
or
and
xor
lods
test
shl
fild
cwde
in
and
add
adc
mov
or
xor
inc
jmp
cmp
or
add
scas
sti
imul
xchg
bound
hlt
add
inc
(bad)
jmp
sahf
add
add
rcr
ds
adc
sbb
iret
adc
inc
mov
and
jbe
inc
add
sub
push
iret
sbb
xor
dec
xchg
shl
inc
xor
adc
push
xor
(bad)
and
jne
pop
fidiv
fadd
adc
sbb
or
test
adc
and
xchg
pop
or
mul
or
out
movs
mov
jae
fldcw
retf
xchg
ror
push
arpl
pop
mov
inc
add
adc
sub
push
lea
enter
or
push
ja
movs
push
mov
lods
dec
mov
stos
xor
imul
jns
add
inc
push
xchg
adc
sbb
mov
push
imul
push
mov
inc
popf
out
pop
or
xchg
inc
push
(bad)
cmp
push
mov
adc
add
cmp
adc
inc
mov
jmp
popa
sbb
and
sbb
sub
not
or
xor
sbb
fwait
xchg
push
movs
ss
(bad)
iret
stos
inc
pusha
sbb
add
ret
or
xchg
add
iret
das
mov
add
fwait
ret
pop
xchg
ss
cmp
jnp
movs
xor
or
cmp
retf
fidivr
pop
shr
retf
pusha
popf
pop
xor
adc
shr
arpl
daa
adc
inc
mov
or
dec
push
or
and
sbb
push
push
(bad)
adc
and
add
scas
les
sub
addr16
and
xlat
xlat
cmp
and
jnp
test
scas
and
xlat
push
push
mov
xor
inc
dec
jo
sti
xchg
add
out
bound
repz
pusha
nop
ret
xchg
pop
push
pop
and
pop
push
or
jg
scas
xor
mov
xor
add
push
shl
or
mov
mov
mov
mov
push
sti
xchg
and
adc
aaa
or
cmps
jae
or
add
inc
imul
aaa
jo
push
mov
or
mov
xchg
and
add
mov
repz
fucomi
and
test
jae
pop
pusha
aad
ja
inc
mov
add
mov
adc
and
xor
pop
loopne
and
xor
push
js
stos
retf
sti
inc
sbb
cmps
rcr
xchg
and
push
and
and
add
or
jp
mov
lods
loope
mov
imul
pushf
shl
dec
repz
or
dec
dec
xlat
push
fadd
dec
movntq
out
push
adc
mov
sahf
pop
sub
add
adc
xchg
jb
outs
mov
and
add
sub
and
xor
scas
aas
dec
ins
inc
mov
xor
add
daa
jo
add
popa
or
enter
mov
add
push
scas
mov
sub
ja
mov
and
dec
inc
retf
mov
and
ss
out
mov
stos
daa
sbb
ret
sti
add
inc
push
scas
push
mov
je
shr
push
inc
inc
inc
mov
sub
sbb
sbb
ret
or
out
das
sbb
cmp
scas
(bad)
dec
imul
in
mov
sbb
inc
outs
dec
push
sbb
scas
sub
pop
data16
push
movntsd
add
mov
add
loopne
(bad)
sti
or
ins
inc
mov
inc
mov
push
ror
mov
or
sbb
dec
or
lahf
add
jecxz
arpl
psrld
test
fsub
setnp
lahf
aas
imul
(bad)
arpl
pop
adc
sub
jo
fwait
inc
sub
retf
shl
leave
cmp
out
iret
add
mov
dec
pop
arpl
out
mov
jno
push
sbb
outs
sub
inc
lea
dec
mov
push
and
or
jmp
xchg
das
or
adc
dec
sbb
inc
out
stos
aam
add
fsub
push
inc
sti
xor
xchg
cmp
push
xchg
lea
mov
jae
xor
sub
stos
ja
mov
pop
dec
and
not
xchg
cmovb
shl
push
adc
adc
sbb
xlat
fistp
jae
sbb
(bad)
mov
xchg
add
xchg
pop
addr16
sub
adc
or
jo
repz
mov
lods
pop
sub
cs
inc
push
sub
mov
sti
add
dec
add
(bad)
test
nop
test
add
dec
(bad)
jmp
out
and
cs
pop
pop
sub
sbb
je
xchg
bound
pop
ret
bound
shr
xor
dec
mov
pop
cmp
push
daa
lods
inc
test
xor
add
lahf
inc
push
adc
imul
inc
lods
(bad)
inc
xor
or
add
pop
and
or
sub
and
cmp
cmp
xor
add
mov
add
sti
adc
mov
call
sar
mov
inc
aas
and
or
shl
add
or
mov
add
jo
arpl
adc
mov
mov
mov
mov
pop
fld
rol
jg
inc
push
or
or
arpl
daa
jae
test
fbld
mov
add
iret
add
das
pop
add
sub
add
add
mov
ja
ss
mov
adc
mov
dec
(bad)
or
ret
es
push
int
add
pop
test
and
out
inc
les
and
pop
xchg
ds
add
push
retf
push
sub
loopne
jecxz
jecxz
mov
retf
add
push
and
jnp
mov
cmp
sub
adc
cs
repz
bound
push
das
sbb
push
movs
jecxz
out
and
bound
sbb
stos
sub
mov
jo
adc
(bad)
inc
xor
and
xchg
pop
dec
lods
dec
cmp
cmp
mov
les
call
cmps
aas
jo
retf
adc
inc
arpl
shr
aaa
push
jno
sub
adc
inc
test
imul
pop
adc
pop
push
or
lahf
addr16
les
ror
addr16
add
bound
jo
ret
(bad)
dec
shl
xlat
adc
adc
mov
stos
add
cmp
jmp
sub
packuswb
sbb
shl
test
inc
out
push
daa
scas
pop
or
push
(bad)
jae
xor
loopne
mov
aas
or
sub
mov
pop
arpl
mov
inc
adc
out
inc
enter
inc
cmp
out
pop
jae
inc
adc
imul
sbb
scas
ret
sbb
loopne
jmp
mov
ds
mov
aaa
pop
xor
inc
sub
xor
arpl
lahf
mov
dec
inc
daa
inc
ret
push
push
mov
test
les
movs
and
inc
lods
dec
sub
sbb
sbb
mov
inc
add
push
xor
rol
neg
or
mov
mov
mov
mov
and
adc
or
(bad)
inc
or
fs
pop
es
push
push
movs
fwait
data16
jnp
or
int
enter
fiadd
push
or
add
bound
inc
pop
adc
jae
xor
xor
or
push
adc
scas
inc
mov
sub
das
iret
call
jb
xlat
cmps
push
mov
add
jbe
pop
and
iret
push
jbe
cwde
ret
adc
pop
push
mov
push
arpl
and
cmps
pop
pop
mov
jnp
cmps
cmp
jo
pop
push
add
jmp
inc
mov
push
sbb
push
fisub
jg
sub
push
loopne
mov
adc
enter
xor
push
in
jb
(bad)
push
inc
shl
sbb
(bad)
pop
mul
mov
mov
sbb
cmp
(bad)
sti
mov
addr16
mov
adc
addr16
shl
stos
mov
jae
ret
retf
sar
or
inc
ss
xor
cmps
or
dec
mov
sahf
cmp
push
sub
ins
les
xchg
and
loopne
and
arpl
daa
jbe
ret
mov
push
mov
or
out
inc
push
mov
fstp
call
(bad)
pop
in
(bad)
fdiv
pop
retf
sbb
xchg
pop
xchg
aaa
popa
popa
pop
add
pop
mov
scas
dec
pop
mov
fimul
or
mov
sar
cmp
mov
(bad)
mov
scas
or
xchg
dec
push
lock
loopne
and
and
xor
shl
push
xchg
(bad)
data16
cmp
(bad)
pop
(bad)
fistp
icebp
add
test
dec
push
push
xor
bound
(bad)
sahf
xor
pushf
cs
sub
pusha
mov
inc
pop
lock
inc
shl
pop
lahf
xlat
or
inc
pop
(bad)
jp
pop
rcl
push
lds
dec
cmp
inc
xor
out
rcl
pop
or
repz
movs
popa
inc
mov
imul
aad
push
and
aaa
adc
adc
lods
adc
dec
(bad)
cs
cmps
pop
mov
inc
add
sbb
xchg
fisttp
adc
sbb
pop
popa
inc
pop
sbb
jecxz
adc
outs
test
pop
sub
or
mov
retf
rcl
cmp
loope
outs
xchg
sub
pushf
or
push
inc
xlat
test
xchg
out
shl
xor
daa
xor
or
cmp
retf
fimul
push
ret
int
repnz
and
pop
pop
xchg
repz
arpl
js
and
stos
nop
shl
out
sub
push
sbb
jae
mov
aaa
sub
sub
(bad)
sub
cmp
sub
(bad)
aas
xlat
dec
xor
dec
cmp
mov
sub
ret
pop
sbb
xor
cmp
ret
mov
add
mov
ret
dec
fild
inc
mov
add
addr16
lds
or
iret
iret
add
and
adc
pop
push
fiadd
xchg
imul
mov
adc
fwait
aaa
(bad)
push
bound
mov
pusha
mov
cmp
push
sub
test
movs
mov
shr
bound
pop
sbb
dec
ds
aaa
inc
pop
aaa
sub
jg
push
cmp
mov
dec
xor
(bad)
inc
inc
dec
cmps
pusha
or
inc
push
push
loopne
in
mov
adc
add
scas
(bad)
ficom
repz
xchg
jmp
scas
ins
pop
jle
or
cmp
add
jmp
enter
lahf
jecxz
mov
and
(bad)
and
ficomp
into
push
fbstp
jbe
ret
imul
inc
add
mov
xchg
pushf
popa
push
cmovle
daa
adc
inc
mov
push
lods
dec
inc
push
fisttp
mov
sub
sbb
loope
pop
xchg
or
cmps
inc
ins
test
jbe
test
sbb
shl
inc
(bad)
nop
cwde
lea
pop
mov
or
iret
push
mov
stos
fistp
or
fwait
pop
mov
ret
aad
shl
push
sub
sti
xor
add
sbb
push
cmp
mov
inc
or
or
pop
cmp
inc
add
adc
rcr
or
rcl
and
sbb
arpl
test
mov
and
arpl
out
cmp
mov
cli
sbb
popf
sbb
xor
retf
aas
push
dec
sub
sbb
dec
mov
xchg
inc
mov
daa
cmp
push
sbb
inc
sub
fadd
xor
push
sbb
push
mov
sbb
adc
dec
loope
mov
inc
mov
popa
retf
dec
xchg
or
fwait
mov
call
push
dec
mov
jae
lods
test
sub
adc
cmp
test
mov
mov
add
jnp
or
cmp
cmps
cmp
pop
fwait
inc
cmp
call
mov
xchg
imul
test
pop
mov
pop
mov
xor
inc
sub
rcl
adc
jp
jmp
adc
sbb
fmul
sbb
add
cs
or
ret
and
not
inc
mov
and
and
or
dec
cwde
fdiv
scas
pop
jg
cmp
das
lsl
add
in
jb
pop
fwait
rcr
mov
mov
xchg
bsf
xlat
xchg
scas
jb
cmp
cmp
sub
add
outs
mov
ror
das
xor
jg
add
cmps
adc
(bad)
stos
lahf
sbb
xchg
test
lahf
dec
add
inc
sbb
push
or
xor
and
push
sbb
add
dec
bnd
and
sahf
sub
jo
xlat
mov
cmps
xchg
xor
cli
push
enter
sbb
sti
mov
sbb
outs
adc
add
or
ror
jmp
dec
xchg
and
mov
lea
dec
outs
mov
jl
dec
mov
cmp
adc
inc
adc
lds
sti
daa
dec
add
or
xlat
push
xor
push
push
(bad)
(bad)
arpl
aas
push
xor
and
sbb
retf
push
test
push
push
cmps
lea
pushf
sub
jle
dec
push
and
sbb
mov
xchg
fadd
mov
or
outs
or
sbb
or
xor
enter
dec
enter
push
add
loopne
(bad)
imul
jae
(bad)
fld
into
push
jb
ret
(bad)
out
push
sbb
es
or
ja
sbb
push
inc
test
mov
xor
lsl
push
repnz
add
or
pop
aam
or
jbe
daa
(bad)
and
xor
xchg
pushf
fsubr
fcmovnu
outs
enter
pop
or
jo
jp
imul
xchg
fbstp
fisttp
add
imul
fwait
sub
add
rcl
das
or
mov
(bad)
call
sbb
pop
stos
dec
js
pusha
inc
push
addr16
mov
sub
sbb
fild
call
mov
xchg
inc
lods
push
pop
loop
iret
retf
lods
add
push
and
test
cmps
mov
add
xchg
sbb
pop
iret
add
cmps
push
call
add
je
sub
pop
scas
push
(bad)
or
add
or
push
push
lahf
adc
adc
and
inc
and
fcmovne
add
adc
adc
pop
mov
mov
mov
push
mov
mov
or
mov
adc
leave
xchg
sbb
and
sub
mov
mov
nop
stos
scas
jae
mov
pop
ret
adc
cmp
and
sbb
xor
sti
adc
jnp
push
cmp
gs
xor
adc
and
setg
inc
in
(bad)
sub
push
and
lahf
js
xchg
adc
loopne
inc
inc
sbb
and
retf
push
sub
add
push
add
xlat
and
mov
add
xor
jo
(bad)
xor
adc
push
cwde
mov
scas
retf
xor
shr
out
inc
xchg
push
aaa
sub
cwde
xchg
and
in
add
mov
jo
sub
push
xor
(bad)
rol
ss
repnz
cwde
lock
loopne
lds
and
xchg
(bad)
sub
push
cmp
mov
xor
lods
and
repnz
cmp
outs
cmp
mov
not
das
and
sbb
push
cmp
ret
cmp
jnp
mov
addr16
fimul
or
jg
pop
pop
or
push
sbb
dec
sbb
cmp
iret
push
inc
ret
scas
adc
nop
and
dec
fcom
cs
jmp
addr16
dec
push
mov
sbb
pusha
imul
rol
or
pop
ja
mov
js
repz
shr
xlat
xchg
daa
pop
mov
out
and
es
aad
inc
push
(bad)
call
pop
lea
push
arpl
scas
xchg
scas
or
gs
enter
repnz
sub
outs
and
push
pop
cmps
or
or
add
add
and
push
scas
push
cmps
add
arpl
jp
(bad)
jp
mov
fistp
fisttp
adc
stos
inc
and
pushf
out
ds
push
imul
call
xor
mov
adc
mov
jb
or
jmp
bound
test
sti
retf
adc
push
xchg
adc
sbb
outs
pop
ja
aaa
xor
adc
iret
es
bound
xadd
rol
push
and
inc
and
inc
mov
pusha
nop
bound
add
enter
shr
fxch
daa
stos
xor
xor
pop
fwait
sub
or
scas
adc
inc
mov
sbb
adc
ss
add
pop
add
xchg
xchg
inc
sbb
mov
add
and
ret
mov
mov
mov
aaa
mov
sub
punpcklbw
mov
fbld
adc
mov
push
jbe
test
arpl
and
adc
mov
dec
ins
ret
xchg
ret
inc
push
inc
xor
xor
shr
jle
adc
jnp
inc
stos
loope
mov
test
add
mov
add
js
lock
pop
xchg
sti
cmp
add
bound
sti
jg
mov
imul
mov
pop
movd
ret
lahf
sbb
retf
mov
or
adc
fwait
push
and
cmp
add
sub
(bad)
ds
jo
push
pop
sbb
sbb
mov
sub
sar
push
add
xlat
and
rol
mov
jae
sbb
inc
cmps
scas
xor
call
adc
inc
pusha
xor
dec
adc
and
test
jo
arpl
inc
cwde
mov
pop
push
out
loop
pop
sub
pop
ja
xchg
pop
rol
push
repz
and
dec
jae
add
inc
loopne
aas
inc
adc
jnp
(bad)
mov
sbb
dec
fidiv
adc
test
fist
fmul
adc
mov
push
fild
mov
adc
adc
shl
and
test
mov
xor
xlat
ret
push
jnp
xor
adc
fstp
jbe
xor
push
add
es
sbb
lods
sar
xchg
jae
mov
daa
ds
add
mov
push
(bad)
aad
mov
repz
in
cmps
pop
xlat
and
mov
mov
inc
or
ficomp
mov
push
sbb
mov
or
scas
into
dec
pop
outs
pusha
dec
pop
and
pop
aaa
adc
push
imul
adc
daa
or
adc
idiv
push
mov
or
push
xchg
sbb
ret
sub
aas
adc
mov
addr16
loop
pop
shl
jns
or
mov
popa
das
sbb
into
pop
xchg
add
scas
inc
sub
or
fild
pusha
ret
inc
mov
fbld
sub
dec
jle
pop
imul
adc
cmp
or
add
add
inc
sbb
inc
xor
test
ss
xchg
jecxz
xchg
push
mov
cmps
mov
or
aaa
jecxz
xadd
sbb
mov
(bad)
das
ja
sbb
sbb
mov
loope
test
push
or
lahf
stos
mov
jbe
out
addr16
add
fisttp
add
sub
pop
(bad)
xlat
lods
add
mov
pop
xchg
shl
mov
das
scas
rcl
add
lods
or
shr
pop
mov
sub
adc
and
enter
mov
cwde
nop
loopne
inc
daa
sub
in
or
sub
add
push
jae
or
xchg
and
cmp
mov
mov
push
add
add
cmp
add
mov
aam
xor
and
sbb
xchg
cmps
cmp
iret
xchg
add
jae
inc
jae
pop
xlat
aaa
sub
adc
das
out
inc
inc
jo
pop
call
ror
sahf
mov
cmp
sahf
mov
xchg
je
mov
sbb
lods
cli
mov
sbb
push
jg
inc
pop
loopne
xchg
sub
and
jmp
aaa
mov
or
pusha
shl
add
cmp
and
ins
je
sahf
xlat
(bad)
rol
mov
inc
lods
sbb
jecxz
daa
push
or
pop
and
ror
dec
mov
imul
mov
sbb
adc
imul
cmp
mov
sbb
jbe
add
push
fadd
jmp
inc
outs
xchg
leave
adc
push
dec
xchg
mov
xchg
pop
adc
pop
add
jmp
add
pop
add
jecxz
mov
inc
call
lds
out
sub
adc
and
push
cmps
rol
mov
clc
inc
xor
addr16
outs
jbe
pop
or
scas
xchg
es
or
pop
adc
das
out
xor
(bad)
test
mov
aas
jecxz
nop
pusha
adc
rcl
add
sbb
sbb
mov
(bad)
je
mov
xor
ret
(bad)
and
or
test
lahf
out
adc
dec
ret
rcr
or
push
push
fisub
test
das
test
pop
push
(bad)
xchg
pop
mov
inc
(bad)
sub
rol
or
lods
(bad)
ja
inc
gs
fld
retf
adc
pop
inc
xchg
aaa
mov
add
inc
aaa
xlat
jecxz
xchg
jmp
push
pop
imul
cmp
cmp
add
xchg
xor
sub
push
retf
outs
sbb
adc
add
jo
dec
jmp
addr16
push
adc
addr16
fcom
xor
xchg
mov
push
in
sbb
push
adc
or
fbstp
xor
fimul
cmp
or
imul
loope
xchg
(bad)
data16
inc
cs
pop
sub
and
jg
sbb
cwde
cmp
xor
pop
stos
mov
adc
data16
add
mov
loopne
adc
push
retf
sub
cmp
out
add
daa
push
mov
mov
out
or
mov
nop
sub
sub
mov
and
inc
add
popf
outs
inc
mov
mov
(bad)
mov
sbb
arpl
or
xor
das
shl
sbb
sbb
stos
cwde
adc
mov
or
xor
xlat
cmp
test
or
sti
mov
enter
daa
idiv
pop
or
pop
(bad)
arpl
neg
sub
daa
das
xlat
add
add
mov
cmp
adc
jp
add
mov
loopne
stos
fwait
xchg
cmps
add
add
push
pusha
add
sar
xor
inc
or
sub
and
cmp
sub
add
retf
jecxz
adc
adc
mov
xor
cwde
pusha
xchg
adc
inc
data16
call
xor
ds
aaa
outs
sub
pop
push
push
dec
arpl
dec
mov
cdq
mov
sbb
lahf
cmp
jo
data16
dec
push
das
mov
xor
and
sub
pop
mov
xchg
sbb
into
xchg
stos
sub
pop
ret
movs
and
and
inc
popa
int3
mov
ret
mov
test
sti
sbb
and
adc
xchg
adc
pop
inc
cmp
jmp
or
sbb
push
mov
add
and
(bad)
sub
or
xchg
xchg
aaa
scas
inc
push
addr16
xchg
pop
scas
rcl
push
mov
out
push
in
loopne
outs
out
fwait
pusha
jno
ret
mov
iret
(bad)
inc
mov
and
inc
js
sbb
adc
daa
enter
outs
data16
(bad)
arpl
dec
out
sti
dec
jo
(bad)
imul
inc
adc
xchg
sub
adc
(bad)
or
fcomp
pop
adc
dec
cmp
call
outs
arpl
pop
push
and
loopne
mov
lahf
adc
aaa
adc
rol
mov
xor
cmp
and
xchg
jo
fild
xchg
add
mov
and
pop
cmps
xor
xchg
add
xlat
aaa
xor
push
pushw
push
cmp
push
rcr
pop
into
and
add
sti
arpl
sub
packssdw
inc
mov
xchg
jp
shr
fnstcw
das
dec
and
loop
xchg
xor
outs
cmps
jbe
adc
xchg
cmps
push
(bad)
xchg
add
and
(bad)
pop
xchg
and
shl
ret
pop
xlat
sub
pushf
inc
imul
xchg
mov
mov
xchg
ficom
pop
cmp
and
mov
jo
call
and
and
aaa
retf
or
lock
adc
loop
sbb
pop
ror
das
sbb
and
push
test
and
ret
push
sbb
pop
stos
outs
test
movs
call
dec
push
xor
rcr
stos
lods
or
dec
add
nop
xchg
sub
and
pop
sbb
or
xor
push
out
pop
xor
stos
shl
add
or
movs
out
cmp
add
fistp
inc
(bad)
lea
xor
dec
mov
data16
stos
xchg
jns
movs
imul
sbb
or
loopne
xchg
cs
adc
adc
out
add
stos
inc
sbb
push
or
out
dec
adc
arpl
adc
movs
fsub
and
fild
adc
repz
pop
mov
cmp
push
fldenv
cmps
sub
add
or
repz
sub
mov
jmp
mov
jg
xchg
and
das
rcl
push
fld
pop
stos
test
adc
pusha
or
pop
pop
scas
add
push
dec
fs
jecxz
mov
das
stos
and
sub
cmps
inc
xor
sbb
cmp
loope
mov
bnd
push
rol
sahf
popa
mov
stos
(bad)
(bad)
xor
and
inc
mov
xor
adc
jmp
fiadd
loopne
pop
stos
xchg
pop
xchg
into
dec
scas
sub
mov
mov
adc
cvtps2pi
jnp
lods
je
mov
and
add
xchg
pop
xor
mov
xchg
add
push
push
add
neg
mov
push
pop
mov
and
out
cmp
fsub
push
xor
pop
data16
rcr
in
jne
adc
aaa
(bad)
adc
in
cmps
lea
das
jmp
sub
lahf
hlt
add
inc
inc
inc
lods
add
and
lock
mov
and
sub
or
stos
dec
add
repz
and
dec
ja
mov
mov
ja
pop
aas
add
add
xchg
pop
adc
fistp
dec
es
push
push
cmps
adc
push
xchg
aad
adc
xchg
mov
das
inc
cmp
stos
iret
and
aaa
push
pop
ja
adc
cmps
push
jae
paddd
out
sub
sub
jg
push
jge
adc
cmps
daa
mov
or
add
mov
push
(bad)
jae
dec
and
aaa
jmp
sub
pop
mov
and
retf
inc
mov
sub
inc
and
sbb
stos
pop
push
sub
xchg
xchg
and
adc
iret
sub
imul
push
nop
imul
fist
aas
loopne
add
aas
sbb
cmp
or
add
and
(bad)
test
jg
nop
in
mul
and
add
adc
or
cmp
lea
sti
add
out
jecxz
rol
add
arpl
(bad)
popa
sub
sub
push
or
bound
inc
inc
cmps
lds
mov
outs
push
sub
push
add
fwait
out
ret
not
(bad)
push
adc
mov
add
jnp
inc
imul
mov
imul
inc
cdq
sbb
add
push
loopne
jmp
and
xchg
jmp
enter
and
push
fild
jbe
push
add
aas
mov
cmp
ror
xchg
inc
or
pusha
(bad)
jo
add
fild
daa
sbb
lds
jg
sbb
mov
loop
das
or
(bad)
daa
outs
pop
add
jle
dec
push
test
test
jbe
bswap
mov
push
ja
pusha
nop
sub
push
push
pop
mov
enter
cmp
pop
fwait
xor
add
out
push
lods
bound
push
cmp
fadd
and
loopne
addr16
cmp
jno
pop
inc
packuswb
(bad)
mov
addr16
push
sub
fwait
jno
adc
outs
or
inc
sbb
inc
ja
js
(bad)
int
jmp
stos
mov
femms
ja
rcl
les
add
pop
sbb
or
ja
inc
add
addr16
and
dec
xor
mov
mov
push
das
pop
sub
jo
in
fisubr
popa
pop
imul
jne
add
ins
xor
adc
jo
and
iret
mov
sub
xchg
loopne
rcr
das
push
add
sbb
inc
or
jo
push
das
mov
inc
fs
ret
add
scas
out
inc
or
xchg
mov
push
jle
pop
test
outs
add
repz
adc
adc
add
sbb
add
xor
or
inc
cs
sbb
fist
inc
xchg
add
jno
mov
xor
sbb
mov
shr
ja
rol
out
sbb
div
pop
and
fdiv
and
or
and
cmp
pop
sub
push
mov
aas
adc
add
jnp
xor
xchg
iret
ss
ret
lods
(bad)
sbb
sub
loop
daa
sub
ret
mov
mov
movs
retf
sub
xchg
rcr
aas
mov
or
pop
jmp
push
pop
pop
pop
repz
xchg
(bad)
cmp
push
inc
or
sbb
or
xchg
out
mov
cmp
pop
xchg
pop
jmp
sub
xchg
arpl
fwait
sub
int
xchg
cmps
daa
imul
jns
pop
sti
outs
loope
jmp
push
cmp
data16
mov
sub
fsubr
or
jnp
and
sub
outs
jbe
pop
pop
xchg
add
xlat
sub
push
stos
iret
pop
retf
aad
movs
ss
or
stos
or
sbb
jecxz
sbb
daa
retf
add
pop
lods
push
or
das
jo
arpl
mov
or
ja
mov
xchg
sbb
add
inc
js
pop
xchg
mov
fdivr
pop
fadd
cs
jnp
mov
jmp
jb
imul
cmp
jae
mov
enter
jecxz
add
sti
xor
dec
sbb
push
pusha
adc
push
or
pop
fild
ret
push
pusha
push
pusha
sti
pop
push
cmp
lahf
(bad)
scas
fnsave
sub
xchg
(bad)
mov
dec
ret
push
fbld
cmp
cs
sbb
jno
adc
jg
lods
add
sub
and
inc
mov
imul
xor
dec
adc
inc
mov
rcl
mov
add
inc
test
repz
pshufw
cmp
scas
iret
mov
add
sbb
aaa
ret
ja
sbb
retf
mov
or
cmp
cmp
pop
sbb
and
jle
dec
jno
and
pop
dec
les
sbb
xchg
push
xchg
add
into
jnp
adc
xor
push
xchg
fld
adc
xor
or
add
inc
movs
xor
lods
sbb
xchg
sub
popa
inc
aad
xor
xor
pop
mov
jmp
daa
das
add
inc
pusha
pop
push
adc
sbb
dec
fbld
(bad)
or
inc
mov
and
add
sbb
mov
push
adc
je
mov
bound
shr
push
and
add
or
pusha
aad
aas
int3
(bad)
fiadd
inc
add
mov
scas
push
push
mov
daa
daa
or
sub
sbb
and
inc
repz
sbb
ret
inc
bound
pop
fadd
mov
push
add
adc
push
push
sbb
xor
stos
mov
jae
add
push
and
jno
push
sti
jnp
or
pop
dec
or
inc
test
(bad)
mov
(bad)
jnp
mov
movs
mov
mov
pop
dec
fwait
in
add
mov
aas
mov
jecxz
mov
sub
and
jg
jg
and
cmp
adc
push
sub
addr16
jb
mov
stos
and
inc
and
or
outs
adc
in
sbb
adc
jnp
adc
into
repz
cmps
pop
dec
pop
pop
in
or
push
repnz
ret
data16
and
and
mov
push
dec
imul
cdq
xchg
retf
fs
rcr
mov
xor
addr16
push
cmps
jecxz
sbb
pop
cmp
stos
outs
push
jbe
int3
xor
jmp
inc
push
mov
btc
mov
stos
push
xchg
push
add
and
push
outs
ret
mov
jmp
ins
mov
mov
or
and
push
jmp
repz
sub
add
xor
add
inc
out
fs
(bad)
or
and
mov
test
ror
shl
pop
xor
or
add
pop
adc
inc
fsubr
xlat
mov
loopne
dec
lahf
inc
arpl
test
push
arpl
repz
sub
(bad)
scas
test
add
ja
cmp
sub
call
add
sbb
not
ret
popa
push
test
push
or
sbb
sbb
test
and
xchg
sub
cs
fnstsw
cmp
pop
pop
add
jp
push
arpl
adc
adc
ins
push
sub
pop
add
out
retf
sub
mov
in
inc
jmp
pop
sub
je
packsswb
inc
retf
push
cmps
(bad)
sahf
or
adc
shr
pop
dec
and
or
(bad)
and
mov
loopne
pop
push
push
lahf
pop
fstp
xlat
(bad)
dec
test
push
or
(bad)
fimul
push
add
mov
fild
push
add
or
pop
js
push
mov
out
jo
sbb
push
mov
lahf
pop
and
adc
add
mov
xchg
adc
scas
pop
aaa
test
and
add
mov
push
push
ret
xchg
mov
add
cmp
or
or
mov
adc
inc
movs
sar
push
sub
jg
add
jbe
repz
mov
jl
imul
sbb
adc
inc
mov
in
mov
das
adc
dec
mov
sub
loope
add
inc
pushf
pop
add
iret
mov
cmps
fcmovne
xor
aaa
jg
out
add
bound
sbb
add
scas
dec
int
and
cmp
call
adc
pop
adc
not
jae
adc
and
inc
xchg
(bad)
and
and
daa
xchg
inc
xor
add
call
push
xchg
cmp
arpl
mov
mov
inc
push
dec
pop
arpl
push
jae
mov
aam
xchg
sbb
mov
adc
push
pop
or
dec
xchg
aaa
mov
adc
sbb
or
rcl
loop
xchg
xchg
xchg
pop
jmp
stos
xor
xor
test
adc
fsub
sbb
sub
aad
jnp
sbb
or
adc
popa
mov
(bad)
and
adc
(bad)
sti
inc
das
dec
dec
add
ret
add
push
fwait
das
or
sbb
add
das
push
inc
pop
or
test
dec
pop
repz
xor
aam
data16
and
or
lods
adc
out
push
call
fwait
adc
cmps
mov
inc
mov
cmp
mov
jecxz
push
mov
adc
inc
inc
jo
push
cmp
mov
stos
sbb
inc
test
mov
push
jns
mov
push
imul
mov
ja
push
pop
inc
pop
cmps
jg
and
ret
fs
imul
add
fwait
sbb
and
sbb
loopne
adc
mov
sbb
daa
xor
pop
sbb
xchg
push
sub
sub
and
(bad)
adc
lods
mov
arpl
add
mov
pop
ret
arpl
ret
cmps
pop
sub
inc
inc
stos
cmps
push
mov
dec
push
lea
xor
mov
push
aad
mov
push
in
jbe
pop
add
or
imul
pop
out
dec
add
pop
(bad)
js
nop
bound
dec
xchg
push
sbb
sbb
inc
(bad)
cmps
jnp
xor
aaa
mov
retf
into
sub
add
mov
add
pop
or
push
out
and
xor
pop
sub
xchg
mov
add
shl
add
pop
div
ror
xchg
stos
or
outs
cmp
adc
add
mov
or
hlt
adc
sbb
xor
add
jnp
adc
add
inc
adc
mov
or
das
ds
adc
or
and
jmp
pop
mov
xchg
add
jae
leave
scas
das
call
sub
aaa
scas
add
cmp
aaa
mov
(bad)
and
add
fwait
cmp
add
push
add
inc
outs
ja
ins
outs
popa
idiv
scas
shl
push
arpl
fs
outs
je
inc
jb
gs
mov
fcmovnu
adc
inc
cmp
popa
xchg
adc
popa
ins
push
push
lock
fild
jb
push
jns
je
ins
cs
ins
popa
jae
gs
adc
sti
xor
inc
outs
outs
adc
adc
ds
push
push
dec
outs
mov
xchg
push
adc
or
push
imul
jo
cs
cmp
mov
dec
push
jns
cwde
jbe
jne
sbb
sbb
pusha
fld
jbe
inc
dec
and
mov
pop
lods
inc
js
xor
jae
push
data16
lock
sbb
ins
or
popa
addr16
push
ins
je
sbb
push
dec
or
outs
pop
imul
popa
jne
cdq
jns
pusha
cwde
xor
hlt
and
inc
push
jge
add
ins
repnz
mov
and
xchg
adc
and
je
shl
sbb
jae
sbb
sub
inc
addr16
and
(bad)
pop
ret
out
sub
inc
lods
jbe
pop
movs
lods
and
pop
jae
shl
popf
sbb
lods
imul
jb
cmps
adc
and
gs
xor
imul
jo
gs
sub
push
ja
or
dec
bound
fst
mul
mov
outs
outs
adc
fiadd
pop
jb
inc
jg
mul
aas
jecxz
addr16
imul
pusha
push
mov
aas
push
sbb
sbb
sbb
data16
fild
imul
loope
fld
jns
retf
inc
sbb
cmp
push
push
je
mov
push
or
outs
ins
ins
and
jmp
mov
and
sbb
jae
inc
mov
ror
dec
jo
jo
sbb
mov
push
jno
arpl
and
push
mov
inc
adc
cmps
lds
inc
retf
xchg
loopne
out
push
mov
es
bound
call
sbb
daa
inc
or
adc
and
rcr
sub
inc
int3
jecxz
fwait
ret
xchg
push
and
add
sub
test
outs
arpl
sbb
fsubr
repnz
cmc
sbb
sub
fcom
neg
mov
rcl
cmp
jae
dec
pop
sbb
mov
and
idiv
jo
je
ror
push
mov
lahf
xor
pop
imul
stos
push
jo
loopne
adc
xchg
add
ficom
cmp
cmp
fmul
push
sbb
mov
jne
dec
push
or
ss
outs
jb
mov
loopne
inc
adc
xchg
pushf
fcmovb
and
jle
mov
fild
inc
push
mov
int
pop
dec
dec
add
js
outs
adc
gs
jne
jns
adc
sbb
fucomip
es
rcl
or
mov
inc
jb
pusha
sbb
sub
movs
loop
adc
push
jo
in
sbb
(bad)
(bad)
push
xchg
inc
fdiv
adc
outs
push
mov
ja
sbb
jbe
bound
dec
jnp
cwde
and
rcr
cdq
lds
mov
fst
adc
sub
inc
mov
ret
scas
ins
xor
(bad)
call
aam
xor
scas
push
dec
xchg
push
rol
sbb
(bad)
mov
and
loope
and
aad
mov
dec
rcr
or
dec
data16
push
cmp
and
push
pop
lea
pop
mov
inc
popw
xlat
adc
ret
adc
lods
inc
push
popa
lods
(bad)
push
out
inc
adc
mov
jns
dec
call
push
mov
ret
inc
inc
sbb
mov
and
pop
xchg
push
cmp
jo
sbb
and
dec
jecxz
and
inc
sbb
fdiv
xchg
mov
adc
mov
mov
mov
inc
in
dec
pop
inc
push
inc
mov
adc
movs
inc
push
push
mov
pop
sbb
sbb
mov
scas
pop
je
inc
push
fadd
stos
jge
js
sub
pop
fs
ror
sbb
sub
js
push
clc
mov
imul
pop
sar
ss
jle
ins
jns
inc
inc
xor
adc
and
and
scas
shl
mov
jo
jp
js
inc
popa
je
lods
pop
inc
sbb
inc
sbb
jne
scas
xor
sbb
push
inc
fs
popa
ror
push
imul
fs
jne
bound
jo
sub
pop
in
mov
lock
dec
xor
out
xor
mov
frstor
sbb
push
dec
push
push
sbb
mov
adc
je
push
aam
in
and
arpl
jnp
popa
inc
fdiv
rcl
scas
cmp
push
dec
push
inc
(bad)
push
retf
xchg
clc
push
dec
sti
ja
leave
dec
dec
dec
inc
sbb
js
rcr
xor
lods
clc
xor
daa
scas
loope
xor
je
xchg
arpl
loope
mov
or
mov
jbe
adc
push
dec
inc
push
mov
mov
push
adc
and
inc
cmp
sbb
mov
mov
xor
dec
test
or
or
adc
xor
push
dec
sti
dec
add
adc
in
int3
inc
push
pop
sbb
sbb
test
sbb
call
add
pop
popa
bound
adc
loope
je
mov
imul
sub
pop
and
mov
shr
xor
and
in
pop
ins
sub
xor
xor
dec
push
sub
and
push
ins
pop
shl
not
add
fsubrp
mov
dec
adc
dec
sub
retf
dec
add
or
cmp
pop
test
fild
xor
out
inc
dec
adc
cmp
inc
xchg
mov
mov
cmp
inc
pop
sub
lahf
adc
adc
popf
lods
popf
add
mov
xchg
cmc
lock
mov
bound
sub
push
pop
push
(bad)
or
sbb
in
and
cmp
sbb
das
mov
mov
add
push
push
movs
add
out
xchg
pop
inc
ins
je
arpl
nop
add
jmp
sahf
je
call
push
jp
jo
shl
mov
push
loop
jb
bound
sub
das
cmps
dec
(bad)
sub
or
loope
pop
fldcw
pushf
cmps
in
shl
adc
ret
inc
mov
out
and
add
mov
out
sbb
sbb
pushf
mov
cs
addr16
add
and
dec
stos
aad
movs
or
out
sub
xor
je
sub
call
ins
sub
sub
rcr
add
and
add
and
cld
repnz
shl
mov
jne
push
xchg
into
sub
icebp
add
outs
mov
inc
push
dec
inc
sbb
sbb
test
add
add
push
xor
div
sbb
inc
push
out
or
sbb
dec
mov
push
mov
inc
dec
mov
ja
push
iret
mov
(bad)
pop
and
add
push
lea
sbb
mov
dec
jb
or
dec
outs
sbb
data16
or
jle
jns
mov
aaa
and
xlat
ja
icebp
je
inc
add
add
push
aas
ret
stos
push
and
or
adc
add
jmp
mov
and
sub
jne
add
dec
mov
ins
jae
lock
jno
or
fimul
xchg
jno
sub
inc
jnp
in
dec
push
addr16
pop
das
movs
or
pop
push
xchg
gs
or
sbb
or
scas
call
adc
outs
enter
cmp
pop
push
inc
arpl
push
push
dec
das
and
sti
aaa
sbb
ins
sub
sub
sub
cmp
sbb
cmp
and
xor
ins
icebp
mov
das
xor
call
cmp
xor
and
push
ss
and
mov
adc
dec
es
xor
xor
je
ins
push
dec
in
imul
fbstp
outs
dec
inc
push
xor
xchg
xor
xor
xor
xor
loop
ins
adc
loope
add
mov
retf
add
mov
adc
mov
jl
mov
push
add
xchg
dec
or
adc
nop
call
mov
add
data16
adc
push
outs
jo
daa
pushf
call
sbb
jo
es
call
sti
iret
sbb
xchg
add
mov
lods
hlt
inc
dec
push
(bad)
hlt
or
ret
fiadd
sbb
mov
imul
add
cmp
or
fcom
or
int3
dec
xchg
fisttp
mov
pop
push
out
fimul
call
inc
je
inc
or
adc
and
aam
adc
xor
ins
adc
mov
cmps
fisubr
(bad)
sbb
pop
es
(bad)
or
inc
mov
push
pop
in
push
push
jo
dec
pop
inc
dec
inc
push
push
inc
push
loope
lss
cmp
pop
push
ret
mul
mov
rol
inc
jnp
push
pop
push
mov
rcl
or
mov
test
outs
push
arpl
add
xor
sbb
test
stos
pop
loop
sbb
or
adc
das
xor
sbb
or
imul
push
sbb
in
add
push
imul
je
arpl
or
or
mov
fcom
or
push
mov
pusha
adc
xor
or
test
jb
in
cmp
add
loope
fs
or
cs
or
mov
popa
sbb
pop
data16
sbb
pop
dec
je
inc
or
fild
pop
test
(bad)
and
inc
gs
dec
inc
push
pop
push
bound
outs
shl
pop
or
xchg
mov
enter
or
sbb
xor
pusha
push
in
push
add
mov
in
add
adc
push
mov
dec
xadd
inc
jp
jnp
sbb
pop
or
pusha
imul
xchg
mov
add
ds
add
adc
or
xor
adc
jnp
rol
enter
ss
mov
bound
in
pop
bound
shl
retf
push
sbb
push
dec
sti
mov
or
or
push
push
clts
adc
push
or
clc
add
mul
call
add
call
push
pop
je
scas
pop
xchg
push
nop
ins
cs
bound
or
add
js
loop
fwait
loopne
mov
sub
out
mov
adc
dec
fdivp
dec
xor
jb
imul
push
arpl
arpl
fs
sub
or
cmp
ins
jne
cdq
or
push
sub
lahf
xchg
imul
and
push
and
(bad)
jg
and
xor
xor
aaa
cmp
xor
and
push
fldln2
jg
das
xor
das
push
sub
xor
xor
and
and
mov
mov
data16
inc
fstp
scas
(bad)
fld
je
cmp
das
ja
cs
cs
das
xor
add
fbld
inc
sub
sub
pop
and
cmp
add
sub
(bad)
sahf
and
scas
test
sbb
rol
push
in
js
jo
cs
imul
jo
ins
xor
pop
sbb
mov
outs
xor
cmp
jmp
(bad)
push
cmp
lock
dec
dec
pop
ins
adc
xor
add
pusha
or
lea
das
pop
pop
leave
mov
popa
xchg
scas
xchg
lods
mov
and
ja
xchg
pusha
mul
cmp
ins
sub
pop
sub
(bad)
mov
push
jmp
xor
retf
ds
xor
(bad)
inc
stos
mov
push
pop
cdq
sub
gs
adc
ds
xor
inc
mov
push
inc
push
xor
xor
(bad)
(bad)
xor
push
loopne
push
jns
jp
pop
or
push
xchg
sub
push
pop
jne
add
mov
arpl
sbb
pop
call
lods
and
push
cmp
inc
sub
jge
and
and
imul
cs
xor
sub
stos
mov
bound
arpl
fs
mov
jge
inc
outs
arpl
int3
mov
push
mov
mov
jne
mov
mov
lock
popa
rol
jo
push
fdivr
jns
aaa
loope
gs
jne
ret
adc
ins
imul
mov
frstor
fild
ins
test
sub
shl
or
adc
ins
adc
sub
jge
ja
(bad)
dec
fwait
inc
add
je
push
add
mov
inc
fldcw
(bad)
adc
loop
sub
loope
sub
fild
adc
scas
xor
jl
or
pop
pop
mov
ins
dec
adc
add
cmp
xor
aam
gs
pop
out
int
scas
adc
(bad)
ds
mov
inc
or
pop
inc
cmp
add
ds
cmp
test
jno
fistp
cs
xor
push
test
or
inc
dec
inc
outs
pusha
add
mov
stos
push
pusha
add
push
pusha
mov
mov
stos
push
add
or
pusha
add
(bad)
(bad)
dec
jo
arpl
je
outs
fs
ds
pop
and
add
dec
dec
inc
inc
push
js
arpl
(bad)
(bad)
aas
add
add
movs
dec
xchg
(bad)
out
in
(bad)
(bad)
push
mov
push
xor
or
cbw
bound
aas
and
movs
adc
loope
xchg
(bad)
std
(bad)
jmp
inc
imul
or
xor
push
fistp
jl
cmps
add
dec
inc
scas
(bad)
(bad)
(bad)
inc
or
outs
dec
outs
jne
gs
outs
ja
pop
sbb
outs
gs
pop
dec
data16
dec
imul
xor
imul
add
jl
(bad)
jg
push
push
dec
ins
popa
addr16
or
arpl
ins
ins
push
jo
dec
gs
add
mov
(bad)
fisttp
add
push
imul
and
(bad)
mov
or
je
push
imul
outs
shl
imul
jae
dec
popa
js
or
fidiv
gs
popa
je
or
cmp
clc
jg
call
jcxz
push
dec
inc
or
or
sti
sti
mov
adc
push
or
or
mov
pop
jae
fistp
add
call
push
pop
je
dec
dec
cmp
ins
test
popa
outs
bound
add
and
sbb
out
mov
dec
(bad)
fist
push
xor
inc
gs
push
jp
push
arpl
arpl
fs
jnp
push
inc
ins
js
sub
and
ins
mov
sbb
cmp
sub
iret
xchg
imul
and
push
and
(bad)
dec
nop
and
xor
xor
aaa
cmp
xor
and
ret
icebp
(bad)
push
das
xor
das
push
sub
xor
xor
inc
and
ins
jmp
or
data16
inc
fstp
scas
in
in
in
aaa
pop
je
cmp
das
ja
cs
cs
das
xor
add
ret
outs
ror
jae
mov
mov
pop
and
je
push
in
sub
imul
je
add
push
scas
test
pusha
arpl
sbb
mov
js
jo
push
adc
xor
imul
jo
ins
xor
pop
enter
fsubr
jo
sbb
outs
cmp
in
or
mov
icebp
pop
dec
dec
pop
mov
int3
es
adc
adc
jbe
aas
ror
add
jae
jns
gs
push
jbe
or
push
pop
jb
gs
xchg
scas
xchg
add
sbb
nop
xchg
int3
push
adc
cmp
inc
out
xor
add
mov
pushf
dec
ret
movs
xor
mov
cmp
lock
push
inc
(bad)
inc
stos
and
and
xchg
push
add
out
push
xchg
call
sub
push
inc
push
retf
(bad)
mov
cmp
xor
xor
xor
mov
jns
mov
shr
xchg
add
jmp
(bad)
pop
pusha
push
(bad)
fdivr
retfw
loope
xchg
retf
imul
test
push
stos
fcmovb
or
stos
and
sub
xor
sub
fcom
cmp
popa
outs
sbb
and
(bad)
add
scas
imul
cmp
cmp
jmp
or
fs
bound
cmp
je
jge
sbb
cmps
pop
inc
outs
arpl
mov
mov
mov
mov
add
lds
fisubr
aad
call
xor
out
gs
loopne
les
xor
jo
or
gs
in
push
pop
and
addr16
add
test
lods
adc
dec
shl
fs
sub
add
jge
xchg
(bad)
ja
cmp
dec
mov
ins
mov
and
inc
xchg
rol
ins
fistp
sbb
inc
sub
lds
out
into
ret
add
test
cmp
hlt
(bad)
pop
daa
pop
add
push
inc
pop
cmps
ins
jne
aaa
je
fwait
adc
add
or
pop
and
pop
jne
cmp
jne
push
outs
imul
gs
jmp
xor
add
add
aas
push
imul
(bad)
jae
pop
sub
mov
xor
pop
or
and
stos
nop
bound
xor
and
pop
dec
outs
sub
mov
push
mov
adc
sub
leave
ins
add
push
add
add
push
push
add
push
ins
leave
add
add
inc
ins
add
add
(bad)
(bad)
aas
push
or
js
popa
arpl
je
outs
fs
ds
(bad)
push
push
inc
rol
inc
dec
inc
inc
push
js
arpl
(bad)
(bad)
aas
add
adc
jmp
jg
pop
push
and
call
pusha
aad
lods
adc
ins
(bad)
out
pushf
call
call
ret
test
mov
sar
mov
push
fbld
add
dec
inc
(bad)
(bad)
(bad)
jmp
dec
outs
dec
outs
jne
gs
outs
ja
pop
sbb
outs
gs
pop
dec
data16
dec
imul
je
or
arpl
push
imul
imul
test
push
pop
adc
popa
imul
call
mov
data16
add
push
outs
jo
add
push
dec
imul
je
xchg
and
cwde
fiadd
outs
inc
or
jg
outs
mov
or
outs
pop
push
bound
mov
inc
xchg
cs
push
add
sbb
rsqrtps
push
dec
inc
dec
pop
inc
dec
inc
push
push
inc
push
or
ret
mov
cmp
outs
pusha
pop
arpl
push
daa
xor
iret
rol
or
dec
popa
ins
gs
pop
push
lods
fs
sbb
(bad)
mov
imul
add
data16
je
mov
or
dec
inc
dec
add
or
cs
mov
jp
add
retf
dec
ins
popa
adc
js
add
dec
arpl
(bad)
pop
jo
xor
xor
xor
adc
mov
sahf
outs
xchg
or
rcr
or
imul
pop
xor
adc
ins
dec
je
aam
adc
rcr
and
test
mov
mov
mov
shl
mov
xchg
inc
cs
jo
mov
shl
pop
mov
or
pop
cmp
arpl
sti
sub
or
popa
imul
push
pop
adc
add
or
cmp
data16
gs
adc
int3
jo
jae
test
xor
inc
mov
add
std
sbb
push
or
cmp
ins
das
test
xor
xor
adc
dec
jb
adc
jg
jne
adc
sar
sar
sar
add
and
test
adc
inc
add
add
push
or
or
pcmpgtd
je
jae
adc
jl
add
fs
mov
fdivrp
popa
and
outs
cmps
jae
and
int3
add
pop
sahf
gs
dec
adc
jb
scas
int3
ins
cmc
xchg
fiadd
inc
mov
lock
arpl
and
mov
cmp
mov
sub
mov
mov
mov
mov
and
mov
push
adc
mov
adc
imul
mov
push
push
cmp
shl
jge
or
popa
jns
push
je
adc
inc
and
je
sbb
ret
sub
gs
dec
xor
add
adc
adc
mov
adc
mov
sbb
push
fcmove
sbb
add
xor
mov
sub
ret
adc
cmc
aas
or
mov
ret
add
test
daa
adc
adc
aad
(bad)
shl
ins
mov
dec
or
imul
imul
inc
ror
push
xchg
or
inc
xchg
push
cmp
popa
imul
add
mov
cmps
imul
imul
clc
add
dec
dec
ficom
inc
push
inc
xor
xor
add
(bad)
sbb
ror
gs
sbb
popa
push
mov
iret
cmp
or
or
inc
mov
xor
sub
(bad)
(bad)
(bad)
jmp
adc
dec
imul
dec
test
push
add
push
mov
pop
movs
xor
sub
fwait
(bad)
push
xor
mov
ror
sbb
and
xor
pushf
add
(bad)
(bad)
jmp
and
dec
inc
sub
adc
add
and
cmp
pop
sar
sub
shr
mov
push
jmp
ja
inc
cmp
adc
ja
bound
cmp
pop
pushf
pop
(bad)
(bad)
(bad)
dec
add
stos
fwait
dec
test
mov
sbb
je
xchg
dec
jae
(bad)
(bad)
dec
dec
jg
adc
or
pop
sbb
dec
inc
cmp
cwde
jg
(bad)
(bad)
(bad)
call
sar
pushf
jae
out
jmp
in
cmp
sahf
arpl
gs
adc
sub
(bad)
(bad)
xchg
aaa
inc
xchg
push
fwait
outs
push
cmps
jmp
adc
aam
(bad)
jg
mov
sbb
dec
test
stos
popf
fs
lock
js
(bad)
(bad)
fcomip
call
add
pop
or
adc
cwde
sbb
sub
adc
mov
xor
(bad)
(bad)
call
cld
es
xor
xor
xor
fstp
sbb
push
(bad)
(bad)
(bad)
jg
and
xchg
mov
mov
jnp
jle
mov
cmp
test
pop
xchg
js
mov
inc
test
test
mov
pop
sahf
xor
mov
sbb
call
jp
adc
push
cwde
imul
imul
mov
jp
push
inc
test
push
lds
in
mov
out
scas
mov
add
movs
mov
xchg
push
and
mov
cmp
sbb
and
pop
out
aaa
(bad)
(bad)
jl
xor
xor
fs
test
xchg
mov
mov
dec
test
sar
adc
xor
loopne
xor
sbb
test
or
dec
mov
(bad)
(bad)
(bad)
inc
inc
test
pusha
adc
add
jo
movs
push
or
add
sbb
enter
sbb
sbb
cmp
pusha
jp
jge
test
push
mov
(bad)
push
fs
jns
imul
and
mov
cmps
jp
stos
jnp
lods
lods
(bad)
(bad)
(bad)
jmp
mov
mov
mov
imul
retf
mov
(bad)
call
les
mov
lahf
leave
inc
mov
mov
cmp
stos
add
add
call
add
icebp
out
scas
mov
adc
movs
or
xrelease
and
push
or
and
(bad)
fbstp
sbb
sbb
adc
push
xchg
(bad)
push
inc
adc
movs
push
adc
mov
xchg
movs
gs
and
cdq
and
stos
add
inc
xor
outs
add
or
xlat
aad
dec
sbb
ja
jmp
fsubr
popa
xchg
or
pop
mov
fimul
push
jne
push
push
(bad)
(bad)
mov
mov
push
test
addr16
jns
and
push
pushf
popf
adc
(bad)
(bad)
dec
mov
test
cmps
popf
stos
or
movs
cmps
xor
(bad)
(bad)
(bad)
jg
jo
mov
adc
xor
dec
les
add
js
adc
(bad)
(bad)
dec
push
mov
enter
test
pop
loop
jns
popf
mov
adc
pushf
jmp
and
stos
(bad)
jmp
cmp
retf
xor
int
dec
ret
mov
cld
xchg
mov
sub
mov
xchg
nop
adc
cmps
ret
push
push
or
xchg
cmp
lods
sti
jp
xchg
adc
and
movs
(bad)
(bad)
(bad)
jmp
fs
and
push
rol
nop
push
add
sbb
push
lea
and
(bad)
(bad)
(bad)
inc
push
pop
arpl
loop
aas
push
shl
das
jo
pop
inc
es
je
add
add
sbb
ins
inc
daa
dec
cwde
add
push
jno
mov
popf
movs
or
(bad)
jmp
xor
nop
dec
add
cmp
mov
cld
(bad)
jg
mov
ror
mov
or
mov
add
mov
mov
pop
push
sbb
add
out
xchg
mov
dec
imul
cmp
(bad)
(bad)
dec
cwde
fs
and
xor
jno
sub
inc
push
mov
repz
(bad)
dec
mov
stos
nop
scas
adc
adc
dec
fs
mov
sub
call
cmc
push
push
mov
xor
or
pop
clc
dec
(bad)
(bad)
(bad)
mov
mov
bound
xchg
xor
jb
test
and
pop
lock
ds
out
das
jb
pop
cmp
dec
xchg
xchg
adc
xchg
xchg
pop
(bad)
(bad)
(bad)
(bad)
cmp
xchg
fwait
pushf
xchg
mov
xchg
stos
cmp
and
add
clc
xchg
mov
popf
adc
push
sbb
mov
mov
jae
(bad)
adc
mov
pop
pop
add
jge
push
or
or
dec
fidivr
(bad)
(bad)
(bad)
call
retf
xchg
fwait
dec
xor
or
rol
inc
shl
add
xchg
fwait
push
jmp
sbb
add
add
inc
dec
shl
sub
test
jo
adc
shl
(bad)
imul
outs
test
and
xchg
ret
mov
push
sub
stos
loope
aad
jnp
xchg
dec
add
pop
inc
(bad)
(bad)
(bad)
call
nop
repnz
jg
push
dec
xor
inc
or
mul
mov
dec
xchg
call
(bad)
xchg
cmp
mov
and
cmp
xchg
bound
dec
and
dec
(bad)
(bad)
inc
lea
lea
add
mov
mov
and
add
test
lahf
es
jg
scas
cmp
cld
fcomip
je
pop
sbb
test
inc
xor
sahf
mov
(bad)
jmp
sub
add
retf
or
or
retf
mov
loopne
or
(bad)
dec
mov
adc
mov
icebp
adc
retf
movs
sbb
clc
sbb
jmp
mov
add
pusha
inc
dec
inc
jmp
inc
jp
(bad)
mov
(bad)
cmp
mov
and
add
cmp
or
xor
and
push
xor
inc
mov
ins
sbb
add
add
push
push
(bad)
dec
rcl
nop
mov
or
add
into
(bad)
call
adc
lds
call
in
in
out
jmp
inc
cmc
(bad)
inc
sub
fwait
push
loopne
push
pop
adc
jmp
and
jp
or
cmp
inc
outs
hlt
test
jbe
inc
jge
sbb
cmps
cmps
xchg
xor
jmp
push
cld
or
ret
mov
pop
pop
cmp
(bad)
(bad)
jg
(bad)
test
(bad)
enter
sub
or
(bad)
push
adc
fimul
(bad)
(bad)
dec
add
jecxz
jmp
out
call
adc
mov
jne
or
sbb
push
xor
nop
push
push
add
je
cmp
push
push
ror
xchg
mov
or
lea
jo
add
jg
push
push
add
pop
mov
jg
add
test
or
sbb
or
jg
sbb
movs
mov
add
es
push
sbb
ror
(bad)
(bad)
(bad)
dec
loope
outs
inc
add
push
aas
dec
faddp
jmp
sbb
adc
pop
clc
rol
cmc
push
mov
or
shr
cld
inc
or
adc
cmps
(bad)
call
add
aad
adc
push
push
js
jnp
dec
imul
jo
arpl
adc
fcomip
(bad)
call
fwait
xchg
sbb
adc
mov
add
sbb
or
scas
scas
inc
jne
jle
mov
pop
mov
push
pop
fcomip
push
sbb
scas
mov
jmp
(bad)
(bad)
dec
fld
pop
dec
inc
xchg
loope
aas
adc
and
int3
jmp
add
sbb
icebp
ds
call
ss
lock
push
mov
and
pop
or
sbb
(bad)
(bad)
clc
dec
xor
ss
or
mov
or
sub
or
dec
fmul
add
mov
add
pop
dec
pop
sbb
mov
cs
(bad)
(bad)
(bad)
inc
push
jp
push
jne
pop
jb
and
push
or
xchg
mov
(bad)
(bad)
jg
and
jnp
fwait
fwait
mov
push
pop
push
mov
mov
sbb
test
clc
and
push
xchg
inc
das
or
mov
(bad)
(bad)
(bad)
inc
cwde
jle
mov
mov
dec
outs
pop
mov
sub
bound
pop
ret
adc
(bad)
(bad)
(bad)
jmp
push
sub
ins
adc
pop
loopne
shl
add
mov
inc
cs
fwait
shl
jle
jno
stos
(bad)
call
cmps
in
adc
pop
inc
(bad)
mov
or
jb
outs
jae
jg
aam
push
or
pop
push
inc
jne
je
fdivr
in
outs
outs
or
jne
popa
aam
dec
in
jbe
sbb
ja
loope
push
add
add
add
adc
pop
cmps
scas
cmp
dec
add
pusha
push
add
push
imul
mov
daa
test
cli
mov
and
add
inc
push
or
test
or
add
mov
inc
jmp
add
add
push
sahf
fdivr
xor
mov
lock
jmp
retf
inc
mov
or
push
mov
jo
bound
sbb
pop
jbe
sub
daa
jae
add
aam
aaa
rdtsc
add
lods
bound
push
push
ins
outs
outs
and
repz
jecxz
inc
add
dec
cmp
or
ss
add
arpl
and
xchg
dec
and
sbb
add
imul
sbb
xchg
mov
ret
push
imul
js
and
mov
jbe
ins
xor
outs
xor
aas
in
and
cmp
test
iret
hlt
test
jp
outs
or
fs
(bad)
mov
mov
mov
adc
inc
jo
scas
or
push
add
imul
jmp
push
outs
and
add
push
(bad)
lods
jecxz
das
cmovno
cli
inc
fs
fisttp
push
push
pop
dec
inc
ja
jb
leave
dec
fcomi
adc
xor
push
inc
cmp
inc
jne
adc
rol
mov
shr
or
cld
lahf
cs
or
imul
jne
mov
pop
or
push
adc
xlat
mov
xchg
add
or
pop
dec
xchg
pop
and
add
xchg
bound
aam
xchg
jne
pop
add
jb
in
dec
dec
inc
push
dec
push
or
sbb
add
adc
dec
popa
push
jge
fisttp
dec
ins
fs
pop
cld
adc
mov
push
jo
push
arpl
cli
ret
ins
arpl
cmp
sbb
jge
dec
adc
ja
push
fwait
(bad)
push
outs
adc
jae
pop
add
aas
add
sub
xchg
popa
fidiv
ret
or
lods
cli
sbb
cmp
imul
xor
lods
jb
sub
pusha
mov
jae
adc
jns
cwde
sbb
and
cmp
inc
adc
or
dec
lock
dec
ds
inc
ins
(bad)
or
arpl
or
inc
mov
pop
dec
mov
inc
xor
adc
add
push
scas
add
inc
pop
shl
(bad)
mov
shl
xor
push
add
sti
inc
(bad)
loopne
or
mov
cmp
cmp
or
cmp
rcr
dec
push
mov
in
pop
inc
pop
add
cwde
mov
fcomp
inc
xor
cmc
dec
cmps
test
sbb
push
cmc
pop
add
cmp
aas
rcl
mov
dec
add
scas
sub
je
xor
add
xor
push
push
sahf
shl
fisub
or
sar
mov
and
mov
mov
and
inc
popf
pop
adc
xor
sub
sub
sub
mov
xchg
jae
test
lea
es
mov
inc
sub
and
aaa
xchg
ror
add
adc
add
cld
inc
xor
jecxz
xor
adc
pop
mov
nop
or
repz
and
add
jae
adc
push
or
jne
test
jno
pusha
stc
add
inc
repz
mov
into
shr
xor
and
dec
rcl
and
adc
dec
or
add
and
jmp
rcr
dec
sub
inc
jo
pop
mov
fistp
push
mov
push
mov
rol
sbb
mov
pop
shl
push
les
ror
pop
xor
je
adc
rol
xor
and
mov
cs
outs
aaa
ret
sbb
ins
aad
out
add
inc
out
add
add
add
fcom
pop
push
inc
add
or
bound
inc
inc
xchg
outs
mov
adc
and
(bad)
pusha
rcl
push
dec
lods
outs
adc
call
xchg
add
iret
cmp
add
popaw
xor
sbb
nop
dec
aaa
dec
outs
pushf
rol
or
pop
or
xor
stos
push
jae
adc
jnp
clc
cmp
fwait
rcr
repnz
adc
mov
or
cmp
shr
cmp
add
sub
push
xchg
cmp
add
adc
movs
or
leave
add
imul
pop
xchg
out
dec
and
sub
jbe
je
mov
mov
leave
xchg
pop
sar
pop
and
adc
pop
bound
cmp
push
adc
push
idiv
mov
mov
jae
lock
fldcw
mov
xchg
mov
in
jo
shr
mov
cmp
mov
(bad)
dec
and
pop
or
shr
cld
dec
in
adc
in
and
cmps
mov
sub
pop
add
add
int3
call
in
jbe
lock
jnp
xchg
mov
inc
dec
imul
push
sbb
push
or
mov
or
shl
xchg
out
inc
pushf
or
pusha
icebp
popa
sar
addr16
sbb
cs
bound
mov
mov
lahf
cmp
and
movs
xchg
sbb
inc
cs
dec
sbb
out
lock
test
out
adc
jecxz
push
or
in
iret
and
test
add
cmp
inc
add
dec
sbb
mov
or
xchg
pop
cld
mov
clc
mov
rol
fdivr
cmp
xor
xchg
xchg
jno
xchg
fnstenv
movs
mov
push
out
mov
and
adc
or
out
test
sub
test
cmp
sti
pop
cmp
sub
pop
or
add
push
loopne
sbb
or
sbb
and
push
fldenv
jo
mov
dec
and
pushf
xchg
xor
or
mov
call
and
(bad)
push
mov
pusha
adc
and
push
jae
xchg
sub
mov
xchg
loopne
push
ja
call
lods
ret
icebp
sbb
or
adc
(bad)
push
and
dec
pop
bound
jo
mov
or
cmps
xor
cvtps2pi
and
das
in
push
pop
mov
cdq
iret
sbb
sbb
dec
and
push
mov
add
push
pop
xor
mov
cmp
push
xchg
out
fnstenv
mov
adc
lds
sub
imul
add
fldpi
bound
xor
jo
movs
cmp
fwait
pop
cmps
adc
in
leave
cmp
adc
pop
xchg
xlat
cmps
push
jne
add
adc
std
dec
adc
sti
jnp
adc
or
mov
xlat
xor
or
or
popa
out
cmp
push
xor
mov
mov
ret
sahf
fdiv
popa
fs
push
mov
mov
or
imul
jnp
sbb
add
adc
add
mov
loope
xchg
stos
pushf
adc
loope
xchg
add
xchg
cdq
das
cmp
popa
jns
imul
arpl
jb
add
ret
mov
add
add
aas
outs
adc
adc
mov
loop
sbb
adc
xchg
ja
mov
fmul
push
in
cmp
and
sbb
push
adc
ins
add
test
jbe
test
xor
push
movs
mov
add
xor
adc
loope
ss
push
cmp
dec
or
mov
dec
sbb
inc
xchg
je
outs
add
dec
dec
call
into
or
lahf
adc
or
adc
xor
cs
sub
sbb
dec
fistp
add
and
push
test
adc
loope
jmp
in
(bad)
dec
lods
mov
popa
js
loope
lods
jno
push
xchg
mov
jbe
adc
jae
neg
or
pusha
lea
inc
or
inc
mov
mov
push
(bad)
or
cmp
mov
test
inc
push
and
sub
jno
jnp
rol
pop
jl
or
sub
ss
rol
mov
or
jo
sbb
xlat
retf
add
shl
xchg
and
push
add
cmp
add
daa
cmp
(bad)
fnstsw
fild
(bad)
add
mov
jo
call
push
mov
sbb
in
adc
or
add
lods
aas
adc
add
and
aad
in
sti
jl
pop
push
sub
or
arpl
jle
sub
pushf
je
inc
pop
cs
jnp
pusha
xchg
ret
outs
xlat
add
rol
jg
add
sub
data16
popa
jae
push
xchg
pop
shr
mov
add
xchg
test
or
adc
lods
push
or
push
pusha
inc
pusha
mov
jo
pop
xchg
mov
pop
mov
test
inc
push
rcr
enter
adc
out
sub
daa
(bad)
sbb
add
and
addr16
retf
mov
push
adc
add
adc
xchg
retf
mov
pop
pop
sbb
fdiv
mov
pusha
jo
jp
arpl
sbb
mov
xlat
clc
gs
adc
mov
mov
daa
int3
add
bound
adc
movs
aad
dec
in
mov
sub
inc
(bad)
add
ret
rcl
cmp
and
push
ins
push
je
push
inc
jb
aaa
into
adc
dec
ror
xor
popa
pop
aas
sub
fcomp
and
ror
add
sbb
push
movs
xchg
adc
jae
aaa
or
ror
inc
stos
push
pop
into
adc
xor
ret
(bad)
sbb
arpl
or
mov
add
xor
jno
cmp
sbb
test
or
push
adc
sti
xor
adc
outs
outs
stos
adc
or
inc
pop
xchg
call
iret
movs
fld
in
jge
lock
adc
sub
jmp
retf
into
adc
bound
xchg
pop
sub
xrelease
inc
outs
popf
mov
inc
mov
icebp
and
shl
lea
dec
push
adc
retf
inc
cdq
push
jmp
cmc
ror
add
mov
push
mov
jno
add
mov
lahf
add
fistp
sub
jmp
xchg
mov
js
sub
mov
add
adc
ja
mov
pop
push
ja
shl
dec
jnp
push
pushf
adc
daa
push
add
xor
ret
cmps
mov
(bad)
cmp
dec
test
or
or
jae
push
outs
mov
mov
xor
imul
into
sub
sbb
push
mov
adc
adc
adc
arpl
lds
sahf
push
jge
and
adc
ds
mov
mov
test
test
mov
or
sti
and
adc
outs
js
mov
mov
adc
lds
nop
mov
int
cmp
and
leave
pop
fs
push
pop
adc
push
push
popa
xchg
adc
and
and
xor
sbb
movs
jns
in
sub
adc
dec
cmps
dec
pop
rol
add
loop
xchg
icebp
outs
(bad)
rcr
add
mov
mov
and
in
scas
pushf
mov
dec
ja
dec
cmp
kmovb
inc
mov
sub
adc
std
xor
mov
cmp
das
jmp
cmp
dec
iret
inc
aaa
xor
inc
rcr
mov
movs
inc
add
adc
add
or
or
mov
adc
test
xchg
imul
in
ja
jne
sbb
sbb
aas
stc
mov
and
leave
mov
jo
xchg
xchg
cmp
pushf
adc
test
mov
jno
mov
test
adc
jmp
cmp
add
add
add
add
add
add
add
add
cmp
out
pop
outs
nop
shl
and
cmp
jnp
cmp
adc
cmp
adc
jno
push
movs
stos
daa
rol
fnstsw
push
sbb
mov
test
fcomp
pop
add
and
test
add
pop
ret
sbb
jo
pop
cmp
and
jb
inc
test
arpl
or
pop
or
sub
lods
mov
pushf
or
inc
scas
adc
xor
cmp
pop
sub
add
adc
sub
pop
xor
(bad)
loopne
pop
test
push
adc
add
add
test
xchg
lds
xchg
and
lds
or
mov
xchg
lock
mov
push
data16
loope
das
mov
sub
sub
adc
iret
add
(bad)
pop
and
xchg
pop
push
add
stos
and
sub
pushf
mov
adc
out
dec
out
out
pop
lods
and
movs
cmc
add
fild
inc
pop
pusha
inc
adc
xchg
(bad)
sbb
stos
jae
xchg
add
inc
aas
out
inc
cmps
jo
pop
daa
daa
mov
scas
adc
xchg
push
or
cmp
sub
retf
lds
mov
xor
sbb
mov
test
add
(bad)
xlat
nop
and
or
mov
out
jg
jne
add
or
addr16
popa
mov
dec
add
adc
mov
ror
stc
shl
in
test
mov
xor
push
shl
aas
les
ror
test
clc
inc
out
push
popa
and
or
dec
and
and
inc
pusha
add
iret
mov
arpl
and
sub
add
popa
xchg
or
add
push
add
or
push
add
in
rol
mov
xor
loop
adc
sbb
daa
cmp
pop
call
add
sti
sub
jg
sub
loopne
fild
ret
and
mov
xchg
mov
sbb
push
add
adc
test
retf
shl
inc
add
sub
sbb
and
aaa
sub
adc
ja
mov
scas
cdq
pop
hlt
loopne
inc
sbb
enter
out
sub
push
pop
pusha
mov
iret
add
dec
inc
mov
or
add
jb
mov
sbb
jmp
lods
xchg
loopne
test
inc
xor
inc
sub
push
and
pop
push
in
mov
sbb
loop
lods
adc
mov
sub
adc
(bad)
fld
pop
sbb
jbe
push
and
add
mov
ret
stos
aad
adc
jmp
push
pop
repnz
add
shl
or
mov
xor
sbb
sti
cmps
mov
cdq
cmp
sbb
xchg
and
add
or
shl
add
cmps
push
lahf
adc
mov
or
and
inc
adc
or
sbb
sbb
sbb
mov
xor
inc
dec
arpl
call
and
mov
push
push
(bad)
jns
or
shr
dec
sbb
mov
adc
mov
ins
jbe
add
xor
jecxz
push
and
adc
push
add
mov
je
adc
ins
sbb
rol
jae
sbb
ficom
nop
pusha
sbb
dec
fwait
add
ror
and
std
movs
imul
sub
mov
add
fild
mov
frstor
inc
adc
lock
gs
pop
xlat
sbb
div
mov
sbb
mov
jae
ins
aas
sbb
lds
adc
aas
fild
xor
push
std
inc
mov
jmp
adc
movs
sbb
jbe
call
out
add
cmp
rcl
inc
mov
scas
or
jecxz
push
icebp
pushf
pop
iret
add
pop
push
and
or
and
push
ror
pop
mov
adc
js
mov
popf
xchg
and
or
jmp
xor
add
or
push
mov
mov
push
ins
push
imul
pop
std
mov
sbb
cmp
loop
or
in
and
sub
pop
and
inc
add
mov
repz
mov
add
or
rol
(bad)
repz
mov
sar
dec
shr
pop
lds
test
popa
xchg
popa
inc
test
leave
xchg
xor
addr16
cmp
jbe
pop
add
cdq
add
inc
pop
adc
xor
ins
sti
cvttps2pi
repz
inc
or
push
mov
jno
xor
js
repz
add
adc
add
add
pop
inc
mov
and
mov
or
(bad)
daa
shl
cmp
and
movs
push
icebp
xchg
in
or
retf
std
jae
aas
(bad)
or
loopne
enter
cmp
popf
(bad)
inc
mov
jns
pop
inc
inc
das
popa
ret
sbb
cs
inc
cmp
lods
add
xchg
push
(bad)
cmp
cli
ja
jns
pop
cmps
fiadd
adc
sub
call
and
xchg
adc
mov
movs
(bad)
dec
sub
test
sub
inc
fadd
or
sub
lds
popa
push
inc
test
shl
in
pop
mov
cmp
sbb
mov
test
repnz
xchg
or
or
mov
or
aad
inc
push
in
jnp
or
or
aaa
pop
and
push
ins
dec
adc
add
mov
adc
push
pop
cmp
fwait
push
jnp
jnp
jae
or
mov
xchg
into
adc
and
in
pop
and
and
mov
dec
add
ror
xchg
cmp
int
popa
popa
adc
cmp
cmp
inc
and
addr16
cs
xchg
sub
in
mov
add
pop
sub
dec
or
lods
cmp
sub
nop
xor
mov
jecxz
and
test
jae
mov
mov
add
aam
jp
shl
jns
add
inc
pop
sbb
adc
or
and
push
adc
lea
and
and
mov
xchg
leave
adc
push
sub
dec
mov
ins
mov
sbb
fisttp
dec
or
add
dec
int
mov
mov
inc
and
inc
or
das
sbb
js
outs
call
shr
(bad)
adc
add
jecxz
popa
inc
pusha
stos
pop
mov
pop
inc
sbb
cwde
(bad)
xchg
dec
nop
and
add
xor
push
leave
movs
sub
jne
push
adc
jmp
jo
sub
xchg
xlat
movs
push
popa
jge
call
rcl
mov
push
das
sbb
adc
jno
push
inc
and
add
dec
adc
jbe
scas
ss
rol
sbb
sub
ja
imul
dec
stos
sbb
pop
mov
inc
mov
inc
add
shl
push
mov
push
pop
mov
imul
jns
sbb
imul
and
adc
jno
cld
mov
sbb
popa
inc
mov
push
addr16
stos
xor
mov
mov
(bad)
sub
and
addr16
add
add
push
aam
pushf
rol
push
stos
or
mov
jae
add
ss
fcmovb
push
xchg
js
mov
push
sub
(bad)
(bad)
jg
and
jae
jo
outs
jb
inc
fs
push
jb
arpl
sub
xchg
and
push
xor
dec
js
dec
(bad)
add
add
(bad)
jne
sub
add
je
adc
test
mov
pop
add
mov
and
in
add
sbb
mov
cmp
push
xchg
add
add
sti
xchg
sahf
dec
lock
mov
pop
shl
leave
mov
test
(bad)
mov
unpckhps
push
arpl
rcr
call
xor
jmp
mov
out
mov
jle
push
repz
xor
pop
pop
or
push
mov
jb
sub
add
and
aad
inc
sub
add
dec
push
loopne
shl
add
popf
xor
fsub
add
cmp
jo
sub
fadd
inc
mov
sbb
test
sub
test
test
push
sub
push
sbb
or
fsub
push
add
and
adc
je
mov
(bad)
jb
pop
pushf
enter
lock
adc
leave
add
jbe
or
jo
cmps
sub
sbb
lods
dec
add
push
sub
mov
add
imul
add
inc
jmp
shl
xor
mov
dec
call
iret
sbb
out
mov
xchg
cmp
pop
arpl
cmps
test
test
test
cmp
inc
sar
jo
jmp
popf
mov
imul
push
xor
sub
mov
or
sub
jmp
mov
xchg
stc
cmp
adc
leave
sub
les
mov
icebp
or
inc
lahf
xchg
adc
cwde
mov
add
pop
mov
repz
adc
ret
sbb
mov
add
dec
or
pop
inc
in
loop
mov
lea
inc
mov
mov
and
jb
cmps
and
xchg
(bad)
jmp
and
dec
jno
pusha
nop
dec
in
adc
or
daa
add
pop
outs
jns
xor
mov
xor
lds
add
cmp
fs
loope
pusha
mov
and
inc
shl
mov
mov
rol
lahf
(bad)
(bad)
pop
push
adc
(bad)
mov
je
xchg
adc
or
(bad)
movs
shl
sub
popa
sbb
les
jns
stc
push
and
xchg
add
pop
add
je
mov
loopne
test
pop
jno
jecxz
nop
jae
jg
add
sub
pop
pop
das
add
test
ret
loop
das
int3
xchg
cmp
xor
cmp
dec
int
repz
jge
add
cmp
movs
cmp
add
inc
and
fisub
mov
cmc
loop
or
push
dec
inc
in
and
sbb
and
and
xchg
leave
jg
xchg
mov
pop
pushf
sbb
dec
(bad)
jmp
retf
xchg
push
adc
(bad)
mov
mov
ins
mov
jl
push
inc
add
jbe
push
push
or
or
adc
xor
pop
or
mov
and
xchg
and
push
repz
imul
adc
jecxz
sub
or
sub
add
or
in
add
ret
push
call
sub
outs
mov
or
adc
(bad)
rcl
mov
rcl
push
das
jl
push
test
xchg
sub
adc
enter
fdiv
jno
rol
jns
stos
idiv
dec
dec
sar
add
adc
fs
add
loopne
cs
xor
sub
imul
outs
xchg
mov
adc
add
iret
sub
add
jl
lock
add
mov
push
pop
lds
adc
inc
ret
dec
add
add
pop
adc
sub
mov
mov
push
inc
mov
call
dec
aam
pusha
in
sbb
fstp
lods
nop
mov
and
mov
inc
sub
or
xor
ins
mov
or
mov
popa
push
xlat
shl
mov
sub
adc
inc
xor
(bad)
and
icebp
pop
xor
pop
aam
jo
add
jnp
jae
xchg
test
push
sbb
mov
push
cmps
xchg
test
push
aam
and
loope
outs
add
push
dec
mov
add
pushf
add
inc
jl
sbb
add
nop
mov
cld
pop
adc
xchg
xor
add
jge
sbb
cmp
inc
mov
xchg
ret
cld
xchg
mov
add
inc
int
and
mov
retf
push
or
test
add
pop
xor
xor
xchg
sub
push
pop
in
adc
mov
retf
sti
mov
or
add
push
retf
sub
cmp
and
mov
shl
add
pop
mov
push
mov
or
xchg
scas
pop
dec
mov
popa
rcr
sub
and
sub
dec
popa
add
mov
and
pop
mov
pusha
lea
popa
sbb
add
mov
lea
mov
scas
push
jecxz
mov
aas
jne
mov
call
sti
aaa
cmps
inc
add
mov
repz
jnp
add
cmp
popf
add
out
or
add
and
enter
aad
mov
or
sbb
jg
(bad)
add
pop
sub
add
je
mov
inc
test
push
add
(bad)
mov
outs
push
jne
add
sub
dec
and
scas
loope
fs
jmp
enter
pop
xor
push
outs
jno
pop
fcomp
sbb
push
pop
fcom
icebp
cwde
dec
aaa
push
out
dec
or
xchg
jno
movs
add
mov
add
jb
sbb
into
add
aad
pusha
mov
outs
push
pop
push
lods
loopne
or
aad
fs
sub
jne
jbe
cmp
in
sbb
jl
cmp
xlat
push
jnp
outs
adc
xor
icebp
add
sbb
or
sbb
push
xlat
mov
cs
inc
repz
mov
push
xor
jmp
mov
aaa
push
jns
aad
adc
loope
or
inc
add
ret
(bad)
jmp
pushf
dec
rcl
and
or
push
imul
inc
push
xchg
dec
pop
push
les
and
(bad)
xor
pusha
mov
addr16
pop
cmc
or
jnp
je
ficomp
add
pop
and
pop
xor
push
std
(bad)
mov
push
xor
(bad)
mov
sbb
adc
xor
mov
scas
add
sub
jno
xchg
adc
movs
lahf
xchg
ret
sbb
xor
loope
dec
or
pop
mov
sub
add
inc
popf
sub
sub
sub
or
fiadd
adc
mov
mov
scas
push
repnz
cmp
mov
push
shr
mov
sbb
push
xor
lods
jb
xchg
rcr
mov
xor
imul
inc
rcl
mov
add
sbb
iret
(bad)
adc
and
repz
bound
push
icebp
retf
add
hlt
add
sbb
adc
div
push
ret
cmp
sbb
test
pop
cmp
mov
retf
pop
ret
add
mov
movs
sbb
add
pop
sbb
pop
je
sbb
or
cmp
mov
repnz
mov
adc
push
int
adc
dec
ja
xchg
mov
xor
add
in
pop
pop
or
mov
inc
cmp
cmps
add
xor
dec
aad
push
sub
jns
push
xchg
ins
arpl
scas
inc
popa
mov
pop
mov
imul
test
xor
mov
sbb
aaa
add
xor
and
das
adc
arpl
imul
mov
inc
adc
shl
push
in
lods
push
add
xchg
push
dec
and
add
movs
pop
and
(bad)
push
sbb
shl
shl
in
fist
pop
imul
xor
mov
rcr
pusha
neg
test
sub
scas
mov
push
ror
xor
dec
aas
fild
inc
ret
fmul
pop
movs
pop
adc
mov
sub
and
push
pop
outs
cmp
dec
lods
cmp
mov
mov
push
ins
xor
push
pop
jecxz
dec
aad
out
loopne
mov
pop
dec
test
inc
daa
sbb
in
pop
lahf
dec
mov
fsub
(bad)
popa
pusha
push
or
cmp
pusha
test
and
sahf
pop
imul
inc
xor
pop
dec
in
cmp
jnp
adc
std
loopne
xor
pop
pop
dec
loope
mov
mov
lock
(bad)
aas
mov
or
mov
cmp
and
cmp
rol
add
inc
icebp
shl
add
jecxz
shr
xchg
mov
stos
cdq
mov
(bad)
(bad)
cmc
pusha
pop
mov
retf
add
xor
daa
push
repnz
push
or
sbb
xchg
pop
mov
cmp
fst
fwait
sbb
push
rcl
fmul
loopne
pusha
fwait
inc
jg
dec
jo
(bad)
or
sbb
sub
sub
popf
cmp
or
data16
aas
and
pop
retf
mov
xchg
sbb
pop
dec
cmp
sbb
icebp
in
imul
sbb
imul
mov
enter
bound
loope
or
and
or
shl
ror
fsubr
movs
and
inc
and
jno
xor
out
add
mov
mov
fs
addr16
xor
(bad)
fild
xor
mov
jp
movs
ds
pop
sub
test
pusha
push
movs
in
or
js
stos
xlat
push
sbb
pop
mov
lods
jns
and
mov
xchg
loop
cmp
cdq
neg
lds
mov
cmp
lea
loop
leave
jg
adc
ins
push
int
mov
sub
cmp
jno
cmp
add
dec
jle
fild
mov
cmp
and
js
mov
arpl
or
pop
mov
dec
loopne
push
adc
in
rol
loope
test
pop
js
dec
sbb
adc
ds
jns
and
jnp
rol
sub
cmc
int
lods
cmp
lock
xor
xor
xor
push
pop
sbb
sub
adc
add
imul
add
sbb
xor
sbb
xchg
pop
out
shr
rcl
(bad)
xlat
rcl
jbe
mov
cmp
jo
inc
cmp
adc
mov
or
movs
adc
shl
add
lss
dec
outs
xchg
pop
xor
sub
or
or
rcr
pop
sub
sub
aad
inc
mov
dec
sub
push
mov
aad
jo
xor
or
push
and
ror
ds
mov
sbb
jae
jnp
xor
mov
out
add
add
sbb
pop
inc
popa
mov
ret
and
cmc
adc
mov
ins
aaa
popf
repz
out
loop
push
xchg
(bad)
mov
cs
movs
xchg
cmp
push
and
xor
lods
xor
das
jg
xor
loopne
loope
push
or
aaa
and
cdq
jb
sub
sar
add
sub
cmp
add
ins
sahf
stos
dec
and
dec
xchg
xchg
xor
sbb
in
xor
bound
mov
and
push
pop
addr16
mov
rcr
pusha
mov
and
push
stos
dec
adc
imul
(bad)
adc
test
cmp
add
add
jge
xor
dec
jne
inc
pop
lods
in
mov
mov
adc
icebp
sub
movs
push
sbb
pop
xor
sbb
aam
pop
aam
stos
add
xor
or
lods
adc
repz
lock
pop
imul
pop
xor
and
scas
adc
aas
jae
outs
lea
jb
inc
add
and
gs
jecxz
sub
fs
add
fdivr
or
mov
xlat
sbb
(bad)
ret
dec
fsubr
xchg
sub
and
out
push
lods
and
idiv
sbb
jl
loopne
inc
fld
cmp
mov
shl
in
and
inc
rsm
pushf
cmp
push
ret
push
cmp
test
das
sbb
in
adc
mov
pop
push
pop
xchg
sbb
fist
rcl
push
or
mov
sub
imul
push
adc
pop
xchg
push
loope
xchg
pushf
jl
xor
loope
and
sbb
dec
mov
pusha
xchg
lahf
(bad)
mul
imul
stos
inc
xlat
cli
sub
pop
cs
and
add
pusha
sahf
ret
push
add
add
add
xor
or
rol
add
xor
push
mov
mov
arpl
shl
mov
icebp
ror
adc
adc
pop
xchg
sub
loope
ret
sub
add
rcr
and
push
xor
jbe
sub
push
xor
mov
aaa
add
push
or
mov
adc
sub
pop
stos
iret
fnstsw
add
sbb
cmp
test
nop
push
jns
mov
dec
pusha
and
inc
adc
jnp
cwde
xlat
call
sbb
add
int
push
and
add
mov
ret
iret
or
cmc
sub
out
jne
add
push
iret
idiv
pusha
xor
or
lods
cmp
add
add
iret
lahf
bound
lods
in
push
jg
pop
movs
sub
add
inc
pop
fcom
neg
(bad)
sub
add
add
mov
rcl
xchg
imul
add
cs
cmp
rol
dec
mov
mov
add
sub
adc
add
xor
and
pusha
jae
xor
aam
inc
loope
mov
jbe
or
arpl
adc
inc
cwde
je
iret
rol
shl
bnd
vphaddbw
adc
inc
mov
sbb
movs
rcr
fistp
push
push
jb
add
cmp
mov
adc
and
sub
mov
sub
nop
jle
push
mov
rcl
cmp
adc
or
sub
sbb
test
les
loope
rol
arpl
fist
dec
mov
adc
inc
mov
enter
sbb
inc
adc
ret
outs
out
out
aas
nop
and
jno
mov
jecxz
and
adc
pop
xor
jbe
pop
pop
je
inc
dec
icebp
std
mov
outs
cmp
push
add
xlat
addr16
adc
lahf
pop
add
mov
add
loop
sbb
ror
sbb
sar
lock
or
adc
pop
dec
jmp
mov
dec
je
sub
or
les
cmp
adc
mov
sub
cmp
or
aas
add
add
add
push
cmp
add
add
add
add
inc
popa
add
mov
sbb
lods
arpl
outs
sbb
xor
or
jbe
mov
shr
loope
popa
xchg
add
lea
pop
leave
mov
addr16
adc
adc
or
fwait
push
mov
dec
sbb
mov
add
mov
mov
pop
dec
sbb
inc
dec
popf
rcr
add
inc
add
hlt
lods
push
enter
popa
mov
ror
pop
cwde
sub
inc
mov
jbe
cmp
mov
xor
mov
xchg
imul
xor
ins
das
pop
mov
sub
pop
cmp
sub
jmp
push
lods
adc
xchg
or
imul
shl
or
add
outs
test
xor
push
shl
inc
cwde
push
jbe
(bad)
add
add
add
pop
push
and
dec
test
cmp
test
test
jbe
pop
inc
loopne
loopne
jbe
nop
and
mov
or
shr
test
sbb
ret
pop
add
push
fstp
mov
jmp
sti
icebp
jo
add
push
inc
hlt
sahf
xchg
popf
xor
mov
shl
inc
add
push
fisttp
ret
xor
(bad)
push
or
icebp
sub
or
loop
shl
sbb
sub
inc
push
pop
icebp
or
sbb
push
jb
or
pop
aad
or
fldenv
ret
retf
and
mov
imul
xchg
dec
push
sub
sub
lahf
shl
push
xor
cmp
sbb
sahf
sbb
and
jg
add
inc
add
lock
mov
jmp
push
or
sub
and
jo
and
sbb
add
daa
dec
xchg
xor
and
(bad)
sbb
mov
aad
scas
cmp
jne
ret
push
lea
jo
adc
pop
mov
xchg
jne
inc
push
cli
stc
repz
jg
test
leave
loop
(bad)
shl
stc
imul
in
sti
outs
pusha
jo
lea
data16
cmp
sbb
fsubr
daa
and
and
xchg
mov
int
ins
ret
mov
mov
mov
sbb
rcl
inc
into
xchg
add
dec
jmp
xor
jg
inc
or
in
clc
sbb
aam
mov
and
test
pop
stos
sbb
aad
jnp
xor
or
inc
loopne
jnp
push
xchg
and
dec
cdq
add
xchg
adc
push
push
outs
shl
stc
jbe
adc
cwde
push
lods
xchg
daa
mov
repz
xor
cmps
and
jge
ins
sub
inc
daa
push
out
add
add
jmp
repz
mov
push
jecxz
mov
push
pop
adc
xor
sbb
dec
adc
ret
add
popf
lea
mov
lea
jo
sti
aaa
mov
adc
dec
add
jge
push
jb
jb
sti
inc
mov
shl
and
xchg
pop
ret
or
xchg
jb
into
xchg
icebp
mov
lea
push
or
jge
loopne
push
repz
dec
xchg
pop
lods
xchg
fnstcw
popa
cmp
cmc
mov
test
push
test
push
mov
push
dec
dec
xor
add
xor
imul
mov
or
mov
sahf
aaa
xorps
lods
xor
or
xor
leave
xchg
sub
sub
sub
dec
push
sbb
xlat
or
xchg
push
sbb
mov
sbb
or
in
cdq
rol
or
idiv
add
add
daa
mov
cli
xor
and
movs
ss
imul
mov
cmp
pop
ret
std
sub
add
mov
scas
arpl
xchg
fistp
add
cmp
daa
push
cmp
sub
sti
(bad)
sub
outs
xchg
fldenv
add
leavew
jae
sbb
and
icebp
mov
and
mov
lea
les
cmp
sub
xor
adc
das
call
mov
pusha
pusha
pushf
or
inc
sub
pop
gs
pop
adc
nop
pop
mov
sbb
mov
inc
popf
frstor
push
adc
xchg
cmp
sub
jno
loopne
add
fild
lods
cmp
imul
popa
add
rcr
fwait
stos
push
bound
dec
mov
xchg
inc
sub
fnstsw
ror
jb
mov
or
add
(bad)
and
pushf
imul
add
inc
popw
in
lods
lods
inc
in
ins
iret
mov
or
(bad)
fcom
jmp
repz
mov
or
add
movs
or
mov
and
rol
inc
leave
push
mov
adc
jmp
mov
mov
and
xchg
sbb
add
mov
stos
imul
adc
aaa
and
add
pop
cdq
(bad)
call
mov
inc
frstor
std
cli
fstp
mov
loop
sar
push
and
and
shr
mov
retf
or
add
xor
xor
xor
(bad)
pusha
aad
pop
add
ins
popf
ret
add
imul
fwait
out
pop
cmp
fucomi
mov
push
sbb
xor
or
adc
add
mov
int
iret
add
hlt
add
ins
push
mov
or
cmp
xor
dec
enter
(bad)
xchg
mov
pop
pop
arpl
mov
mov
jp
mov
or
xor
xlat
out
mov
mov
or
jb
ins
ins
xlat
(bad)
(bad)
inc
jb
pop
or
push
gs
imul
bound
sbb
call
push
push
push
popa
outs
gs
add
outs
ins
xor
gs
add
add
add
in
in
push
add
push
dec
imul
ins
adc
or
push
ins
or
jbe
dec
jne
xchg
pop
push
bound
outs
nop
mov
int
dec
add
or
push
popa
imul
pop
outs
cmps
int3
(bad)
pop
inc
addr16
fistp
(bad)
fnstcw
and
pop
inc
popa
jo
pop
adc
and
mov
imul
popa
mov
popf
aas
(bad)
jbe
dec
sar
push
fs
add
adc
inc
jo
pop
dec
outs
inc
mov
cmp
and
and
jae
add
fistp
jns
adc
cmp
adc
inc
push
adc
imul
xor
pop
mov
popf
imul
mov
(bad)
loope
inc
jo
leave
jmp
cmp
jle
adc
addr16
dec
data16
dec
outs
sbb
or
lock
imul
dec
ins
les
or
xor
cdq
or
iret
xor
add
add
sar
or
mov
(bad)
aam
pusha
jb
or
dec
sbb
push
adc
popf
cs
and
mov
jne
sbb
int
sbb
sbb
pop
clc
sub
pop
inc
outs
pusha
adc
retf
or
inc
outs
in
push
or
mov
outs
jne
and
shl
and
push
inc
jne
ins
push
adc
cmp
xchg
cmp
sbb
jg
mov
push
in
xchg
ss
rol
mov
cmp
cmp
or
adc
inc
push
add
jae
mov
shr
mov
and
mov
mov
lock
lea
cmp
(bad)
sub
cmps
push
xor
imul
adc
adc
add
sbb
outs
pop
ror
sbb
inc
nop
outs
push
imul
movs
hlt
mov
mov
cmp
es
stos
test
sar
ret
leave
inc
and
fistp
and
scas
or
sbb
sar
cmp
and
cmp
je
cmp
das
adc
ins
popa
jae
pusha
pusha
ss
xlat
add
pop
je
jae
cs
ins
pop
bound
ins
and
lea
enter
out
in
pop
fldcw
icebp
pop
fdivr
ds
add
aad
inc
push
cs
push
mov
sahf
std
sbb
inc
inc
push
dec
push
push
dec
inc
push
push
inc
push
or
outs
ins
outs
std
dec
xchg
nop
sub
push
gs
or
clc
mov
or
dec
popa
sub
push
xchg
jne
fsub
nop
popa
jno
jns
xchg
dec
shl
cmps
adc
or
imul
mov
sub
rcl
lea
shl
iret
or
push
inc
outs
and
(bad)
pop
shr
add
out
add
sub
mov
sbb
xchg
adc
or
or
ret
jne
adc
loopne
loop
and
add
xchg
push
or
sbb
rol
xchg
dec
mov
shr
inc
dec
adc
add
int3
adc
cli
inc
pop
std
cdq
loop
js
add
add
add
push
xor
adc
fldcw
add
xor
push
icebp
push
push
xor
xor
adc
sub
and
imul
sar
cmc
sbb
(bad)
xor
sar
sbb
jne
in
push
push
mov
pop
inc
idiv
push
rol
and
aam
xchg
cld
repz
inc
repz
test
in
in
add
pop
cmp
dec
ret
adc
or
fs
jb
inc
scas
inc
sub
leave
xor
or
je
fwait
mov
movs
add
mov
pop
loopne
dec
add
lods
ret
ret
loopne
in
xchg
nop
leave
sbb
add
cmp
test
inc
outs
xchg
outs
sahf
push
sbb
mov
sub
xor
sbb
rep
xchg
inc
bound
pop
(bad)
sub
and
lds
ins
addr16
sub
xchg
or
pop
mov
jae
dec
push
add
push
pop
in
xor
jge
outs
je
mov
mov
loopne
push
inc
loop
out
add
inc
dec
or
jbe
sub
add
in
sti
das
or
les
pop
adc
cmp
ins
ss
test
add
cmps
fcomp
pusha
fistp
lahf
or
sbb
cmps
add
rcr
adc
mov
jge
aad
inc
dec
inc
adc
mov
fsubr
sbb
cmps
aad
add
mov
ja
sbb
cmps
repz
rol
ins
add
mov
add
mov
mov
sbb
xchg
adc
adc
imul
fst
add
sbb
dec
mov
sbb
fdivr
dec
mov
sbb
cdq
add
enter
sbb
mov
sbb
dec
pop
add
cdq
add
test
dec
jo
and
sub
inc
xor
sbb
or
imul
push
dec
sbb
sub
sbb
inc
mov
addr16
aaa
add
add
pop
mov
bound
cmp
dec
or
add
lds
dec
and
add
rol
dec
and
add
dec
fcomp
or
mov
xchg
aaa
add
adc
popa
daa
cmp
or
mov
bound
cmp
dec
sbb
add
or
xor
inc
dec
pop
aaa
dec
inc
nop
or
pop
mov
push
dec
aaa
dec
inc
dec
or
pop
aaa
push
nop
xor
mov
add
mov
inc
or
inc
and
aaa
dec
dec
or
lea
or
add
xor
lea
sub
push
adc
aaa
add
add
push
add
adc
shr
xor
or
add
inc
push
push
inc
xor
or
xchg
push
mov
xor
aaa
add
and
push
or
mov
adc
rol
add
icebp
mov
and
adc
aaa
inc
fadd
push
imul
les
movs
xchg
xchg
push
inc
daa
aaa
or
inc
dec
pusha
test
xor
xchg
inc
dec
sub
or
inc
aaa
add
dec
nop
or
imul
icebp
inc
and
rcl
imul
(bad)
mov
sbb
ins
rol
dec
mov
test
inc
jmp
xor
or
add
test
jmp
or
mov
adc
dec
jmp
dec
dec
mov
jnp
push
pusha
imul
aad
add
push
xchg
push
or
dec
push
adc
pusha
stos
lods
or
mov
jmp
adc
xor
or
dec
pop
jmp
add
pusha
stos
ror
rcl
and
cmovg
fcomp
add
sub
rol
xchg
sub
sbb
ror
sub
jge
push
rol
xor
ja
or
mov
dec
adc
sbb
adc
and
adc
fsubr
or
pop
and
adc
pop
dec
push
pop
push
and
sub
push
xor
dec
push
inc
and
lods
loopne
sbb
xchg
dec
sbb
ret
and
lods
sbb
arpl
pop
and
ins
daa
dec
push
jo
pop
pop
push
daa
movups
ret
sub
add
(bad)
sub
or
sub
push
inc
and
sub
mov
pop
sub
inc
xor
cs
push
or
sub
add
push
sub
sub
mov
add
sub
pusha
and
add
push
adc
mov
aad
add
pop
add
or
rol
add
xor
ins
add
bound
add
inc
or
test
sub
les
dec
push
push
sbb
mov
and
out
xor
ins
sub
add
dec
pop
adc
push
pop
sbb
add
and
add
mov
inc
push
das
and
sub
cmps
retf
adc
inc
and
mov
inc
shl
add
dec
movs
add
dec
mov
or
dec
jno
pop
pop
pusha
dec
aas
or
push
jno
pusha
pop
adc
dec
sub
xchg
fst
add
pop
lea
adc
fsub
xor
cmp
imul
pop
mov
fisub
add
ins
ins
add
sbb
das
add
pop
inc
pusha
dec
outs
sub
aam
inc
sbb
pop
add
sub
fcomp
fild
and
push
add
aas
or
add
test
push
dec
pop
add
add
mov
mov
test
add
add
pop
ins
test
ins
add
aaa
arpl
or
add
sbb
fsub
add
arpl
test
adc
bound
push
add
add
inc
fadd
cmp
add
xchg
pusha
arpl
adc
or
sub
cmp
adc
cmp
xchg
or
cmp
adc
add
mov
adc
imul
and
inc
dec
pop
push
xchg
dec
add
fadd
or
das
mov
mov
add
dec
add
mov
pop
ficomp
add
dec
add
add
cmp
sub
icebp
dec
rol
add
sub
inc
adc
add
add
add
add
mov
dec
adc
or
add
or
push
dec
mov
mov
add
adc
cmp
fmul
sub
mov
shr
dec
sub
and
loopne
dec
add
add
pop
adc
aad
add
mov
add
test
ins
add
loope
aam
xchg
add
or
or
sgdtd
mov
push
add
sub
ror
ss
mov
xchg
loopne
adc
adc
pop
mov
and
push
add
shr
mov
add
push
mov
adc
inc
inc
jo
dec
je
jo
mov
dec
mov
js
xchg
and
test
or
dec
add
pop
and
or
imul
and
mov
add
dec
aas
sgdtd
add
jg
add
or
jg
or
dec
sub
add
jnp
jns
add
pop
dec
jns
ins
push
inc
dec
jne
mov
stos
or
outs
mov
add
mov
add
mov
add
fsub
pop
ins
push
inc
dec
imul
or
mov
add
mov
pusha
ins
add
push
adc
test
dec
mov
dec
push
mov
pop
add
rol
add
mov
mov
mov
push
adc
pop
add
pop
mov
add
or
dec
inc
inc
push
or
sub
add
fisub
push
add
push
dec
inc
dec
push
add
push
add
inc
adc
mov
dec
inc
xor
push
add
rcl
dec
add
dec
add
adc
dec
add
and
add
mov
dec
or
mov
add
fsub
inc
add
inc
add
inc
or
bound
dec
inc
and
add
mov
dec
inc
pop
ins
add
add
cmp
mov
add
inc
ins
add
test
bound
add
aad
pop
aaa
add
aaa
add
xor
pop
dec
xor
adc
pusha
add
dec
add
shr
pusha
dec
das
add
sub
add
rcl
adc
add
push
nop
and
sub
dec
adc
sbb
ror
add
cmps
and
lods
push
cmps
lea
mov
cmps
and
and
pop
arpl
or
dec
lahf
xor
add
(bad)
dec
inc
dec
dec
add
pop
add
dec
add
js
popf
add
adc
add
or
pop
inc
pop
pop
dec
add
inc
push
arpl
add
dec
xchg
imul
popa
add
gs
push
or
push
sub
rcr
dec
inc
mov
dec
inc
gs
inc
push
push
push
xor
push
mov
xor
add
inc
data16
inc
and
popa
add
mov
outs
dec
inc
fwait
ret
pop
imul
push
inc
xchg
add
push
add
jb
gs
and
test
and
arpl
popf
ss
stos
add
add
aaa
mov
ss
add
or
pop
xor
dec
out
push
or
push
dec
sbb
idiv
push
xor
sbb
or
add
dec
inc
add
fsub
dec
inc
add
ss
cld
sub
add
push
or
xor
mov
push
outs
test
inc
xor
test
out
add
test
sbb
fadd
(bad)
fsubrp
xchg
push
paddd
xor
adc
push
dec
xor
fs
popa
push
and
out
add
stos
and
dec
jg
pop
lds
mov
sub
dec
push
xor
pop
or
std
and
test
ror
add
or
cmp
push
mov
push
add
and
sahf
pop
push
or
dec
dec
dec
push
adc
test
push
cwde
inc
nop
repnz
push
sysret
cmps
inc
mov
fisttp
dec
out
dec
pusha
rol
inc
es
and
popa
shr
cmps
test
xor
sub
add
add
inc
xor
sbb
mov
dec
jle
xor
dec
and
dec
rol
add
and
sbb
push
adc
adc
or
or
or
add
mov
dec
push
dec
xor
dec
push
stos
popa
pop
adc
inc
pop
or
dec
and
mov
add
sbb
add
cmp
push
add
or
add
dec
cmp
push
add
push
dec
inc
nop
inc
mov
xor
or
nop
add
dec
adc
dec
fcom
add
mov
inc
push
dec
cmp
fs
add
adc
or
test
add
inc
add
dec
adc
out
loopne
pop
add
mov
dec
xor
xor
pop
fild
xchg
dec
pusha
les
and
inc
and
ja
push
cmps
cmp
movs
push
adc
(bad)
sti
dec
or
in
add
add
rcl
shr
dec
shr
add
ss
movs
ins
dec
mov
daa
in
enter
add
add
add
in
add
lds
or
inc
inc
adc
dec
add
push
add
add
add
test
dec
or
push
adc
add
add
dec
inc
mov
and
add
add
jmp
mov
gs
push
jo
imul
dec
je
cld
or
cli
push
sbb
imul
push
cld
push
dec
popa
bound
adc
pop
push
out
(bad)
mov
gs
inc
ins
gs
add
add
ja
add
iret
(bad)
fs
add
add
jns
and
inc
popa
jo
imul
call
rcl
and
mov
shl
sbb
fcmovne
xor
pop
xor
jmp
aas
adc
mov
and
dec
inc
inc
push
dec
dec
dec
(bad)
test
inc
stos
je
inc
push
pop
cmove
inc
push
dec
push
pop
pop
cld
inc
inc
push
push
inc
push
or
outs
ins
outs
jb
or
ins
outs
outs
clc
mov
gs
or
cmp
popa
mov
push
pop
push
gs
popa
outs
popa
jae
jns
(bad)
fidivr
jae
test
push
retf
xor
or
sbb
outs
movs
fs
jb
or
adc
push
jne
loop
inc
xor
neg
xor
jbe
lahf
es
mov
cmp
mov
mov
pusha
add
xor
mov
dec
push
mov
mov
jmp
cmp
cwde
mov
fisub
pop
scas
add
push
daa
mov
add
and
and
sub
movs
xchg
add
gs
push
mov
jmp
je
popa
ins
inc
jb
sbb
ins
outs
arpl
ins
jae
jge
(bad)
mov
dec
outs
push
das
push
jne
jb
sbb
mov
ins
popa
outs
arpl
outs
jne
je
xor
je
imul
pop
sbb
test
dec
outs
push
sbb
pusha
jae
push
inc
ins
jo
ja
mov
addr16
imul
dec
jmp
popa
and
inc
gs
jne
je
dec
dec
lock
in
lods
and
push
jae
xor
add
mov
outs
cld
push
outs
dec
push
imul
loopne
fldcw
aas
jae
outs
jae
je
or
jne
jo
inc
push
daa
sbb
rcr
xor
dec
imul
(bad)
push
loopne
sbb
and
mov
sub
mov
outs
fs
gs
dec
or
inc
imul
mov
inc
mov
mov
and
iret
mov
popf
loopne
ins
sbb
jb
pop
push
outs
xchg
add
add
push
inc
nop
xor
in
pop
pop
push
je
cmp
adc
fstp
inc
push
adc
xchg
loopne
daa
sbb
mul
pop
pusha
pop
loop
pop
cdq
add
cwde
and
mov
mov
pusha
inc
repnz
push
cwde
cdq
neg
outs
neg
arpl
push
jbe
ret
dec
cmp
inc
pop
addr16
push
sub
add
add
popa
xchg
jl
mov
je
adc
inc
cmp
ret
sub
imul
push
outs
cmp
push
shl
outs
nop
or
adc
in
push
jns
sbb
cmps
leave
out
lds
fstp
test
lods
mov
scas
and
xor
shr
sbb
out
push
inc
fstp
sbb
adc
shl
and
push
cdq
add
sub
inc
mov
push
test
sub
and
mov
fldenv
mov
xchg
push
dec
adc
loopne
fs
or
imul
data16
bound
adc
pop
call
rol
repnz
sbb
lds
jne
test
sbb
mov
outs
sar
push
pop
xor
movs
mov
and
shl
xor
xor
rcl
ins
sbb
push
ins
outs
adc
or
jns
cmp
xchg
inc
pop
or
cli
les
jmp
adc
jne
dec
push
and
jle
lahf
dec
scas
sub
xchg
mov
les
or
fnsave
mov
jnp
adc
retf
aam
test
dec
jle
int
cmp
jo
fist
cwde
les
xchg
retf
sbb
pop
in
(bad)
jae
or
bound
xchg
sbb
sub
and
lods
sbb
mov
push
or
arpl
test
data16
fwait
sub
imul
add
push
imul
call
adc
and
push
or
rol
jl
gs
push
or
adc
(bad)
pop
pop
cdq
inc
shl
inc
cld
outs
test
jae
data16
sbb
dec
push
lahf
sbb
push
sub
sbb
sub
ret
sub
daa
push
add
popa
jo
cli
pop
dec
xor
ss
inc
mov
cmp
bound
add
dec
push
mov
(bad)
jo
mov
add
inc
adc
mov
mov
loope
pop
inc
mov
jb
or
or
push
pop
mov
sbb
sub
pop
ss
ficom
sub
loopne
sub
movs
les
adc
dec
adc
popa
or
fsub
mov
pop
dec
dec
xor
pop
mov
xchg
mov
sub
sbb
or
pop
inc
jecxz
jb
cmps
outs
test
outs
inc
es
int3
and
dec
daa
inc
cmp
mov
adc
push
or
inc
and
sbb
add
sub
add
ins
pop
add
jo
cs
test
arpl
sbb
mov
mov
ror
pop
clc
and
arpl
mov
mov
jo
jbe
push
outs
xor
pop
jge
ins
test
add
pop
sbb
out
mov
stc
inc
jb
push
imul
xchg
aaa
sbb
mov
aas
and
imul
jo
out
data16
dec
dec
dec
loope
inc
or
pusha
dec
adc
push
test
fwait
push
push
jne
inc
arpl
push
test
sbb
loopne
jmp
test
adc
fadd
push
jmp
xor
call
lock
imul
fmul
into
div
add
inc
das
lds
sub
or
push
sbb
inc
push
ins
(bad)
into
div
jo
cmp
mov
scas
sub
(bad)
push
and
pop
pusha
push
sbb
push
arpl
movs
mov
sub
fdiv
sub
push
adc
into
(bad)
sub
push
test
dec
loope
test
jbe
movs
dec
out
cs
les
icebp
shl
jb
arpl
sub
mov
inc
outs
pop
fsubr
mov
das
sub
and
dec
ja
pop
pop
xor
mov
adc
daa
pusha
pop
mov
sub
cmps
inc
mov
and
jbe
outs
sub
dec
mov
daa
adc
sub
sub
inc
push
add
in
fisttp
int3
dec
pop
sbb
jb
jmp
inc
cld
cs
pusha
pop
in
pusha
sub
dec
cmps
mov
or
sbb
mov
push
frstor
xor
ins
frstor
mov
push
outs
dec
data16
frstor
(bad)
jp
and
arpl
dec
inc
push
sbb
jl
dec
cli
push
stc
adc
jo
clc
push
push
test
dec
jb
sub
sub
sbb
ins
or
and
push
gs
int3
jmp
shl
(bad)
sti
push
out
dec
push
xor
push
imul
mov
push
clc
or
and
repnz
mov
shl
and
mov
sub
jb
add
push
retf
jmp
sbb
sbb
add
ret
mov
retf
jbe
xchg
jne
adc
jne
sbb
add
jo
xor
sub
loope
(bad)
pop
(bad)
outs
adc
add
xor
adc
jp
sbb
cwde
push
sbb
add
mov
sub
rol
and
mov
(bad)
xlat
or
xchg
and
push
enter
cmp
mov
push
inc
(bad)
jo
cwde
and
ins
push
jae
mov
fmul
jo
sub
jb
and
or
sub
xor
adc
clc
mov
or
xor
int
dec
lock
inc
outs
or
adc
ret
sub
gs
and
jmp
ficomp
inc
cmp
jnp
test
inc
out
jnp
arpl
iret
jmp
jg
inc
outs
inc
popa
jo
adc
or
jno
outs
add
mov
in
lock
xchg
mov
imul
add
cmc
mov
dec
loopne
xor
mov
inc
sbb
lods
cmp
sub
jecxz
dec
pop
cmp
stos
das
mov
mov
pop
mov
pop
inc
nop
pop
push
add
add
cmps
add
sbb
sub
cwde
retf
sub
and
test
xchg
and
or
sbb
mov
shl
fchs
dec
inc
and
dec
xor
test
sub
jl
or
xor
dec
les
dec
pop
dec
rol
cmps
ss
daa
or
adc
fwait
addr16
sub
popf
add
rcl
sti
inc
jb
stc
or
pop
sbb
push
mov
mov
mov
fisub
jl
arpl
add
xor
xchg
outs
and
push
outs
mov
mov
dec
add
mov
jno
retf
movs
in
push
arpl
add
in
pop
lods
inc
dec
push
dec
inc
push
aam
pushf
xor
mov
adc
xchg
div
sub
aaa
add
call
std
shr
push
inc
push
js
(bad)
jnp
in
jmp
fisubr
cmp
data16
daa
adc
dec
xchg
mov
dec
mov
(bad)
push
adc
push
sub
jmp
sbb
dec
popa
arpl
aam
pop
scas
sub
xor
mov
dec
dec
and
sahf
add
(bad)
call
pop
lds
imul
sbb
shr
xchg
or
and
xor
pusha
adc
dec
movs
mov
dec
cmp
jbe
and
out
cwde
and
push
inc
ins
into
js
sbb
pop
dec
outs
hlt
ins
add
repz
lods
(bad)
xor
in
adc
jae
sub
sbb
sbb
iret
cmp
xor
scas
adc
(bad)
sbb
pop
xor
jo
pop
pushf
inc
add
cdq
inc
es
hlt
sub
xchg
sbb
fdiv
adc
cmp
xchg
ss
or
lea
popa
rol
loop
fmul
and
jo
jo
in
add
xor
jmp
mov
or
gs
dec
ja
mov
xchg
fsub
xrelease
dec
push
inc
pusha
or
pop
mov
adc
mov
or
dec
fstp
ja
pop
mov
adc
ins
nop
or
ss
std
dec
mov
and
or
ficom
sub
mov
int3
mov
inc
jmp
add
cmp
movs
mov
popa
jo
ds
add
int3
inc
shl
push
xor
add
pop
xlat
and
cmp
push
outs
xor
inc
add
xchg
dec
xchg
and
sbb
cmps
jae
mov
adc
adc
lock
pop
mov
sbb
fs
daa
xor
add
push
ins
mov
or
push
xchg
jnp
pusha
and
push
je
sbb
(bad)
inc
int
ss
add
cs
jbe
push
loop
cmp
add
inc
pop
cmps
sbb
sbb
pop
or
add
retf
inc
mov
push
jge
add
inc
and
xchg
loop
sbb
ret
sbb
inc
dec
jae
addr16
inc
aam
fs
pop
ret
mov
into
xor
cmp
in
sbb
adc
dec
adc
popa
pop
mov
sbb
jbe
and
jbe
ret
push
outs
jmp
push
inc
dec
icebp
adc
jno
lea
mov
adc
dec
mov
fwait
jns
mov
xor
stos
les
inc
addr16
sbb
add
mov
mov
mov
xchg
and
jne
push
mov
mov
push
pop
imul
ror
dec
arpl
mov
fimul
jne
sti
lahf
(bad)
dec
dec
ins
sbb
fdivr
or
mov
jae
sbb
and
popa
imul
mov
nop
lahf
or
ja
xchg
mov
ret
fwait
dec
stos
popf
xchg
fsubr
and
and
sbb
clc
jae
sbb
imul
jbe
or
push
ret
xor
cmc
push
ror
sbb
sbb
add
xor
jo
fistp
test
and
jo
inc
test
lods
ss
mov
icebp
rcr
leave
or
arpl
push
sub
arpl
inc
dec
in
das
adc
dec
jno
out
xor
dec
adc
xor
loopne
popa
push
ins
test
mov
sbb
test
test
or
mulps
adc
and
sub
retf
add
arpl
dec
mov
jecxz
sub
sbb
enter
repz
fdiv
mov
rcr
test
cmps
data16
addr16
inc
jmp
pop
jmp
and
jle
mov
jo
push
adc
adc
or
adc
push
rcr
mov
inc
cs
jo
mov
jne
xor
pop
pop
dec
daa
adc
adc
test
and
push
outs
in
or
push
pop
sub
sbb
or
sub
test
test
jl
(bad)
test
mov
ja
hlt
xor
and
pop
pusha
sbb
sbb
sbb
arpl
and
test
mov
adc
add
pushf
scas
add
clts
ins
xchg
xor
add
jg
outs
adc
and
cmp
push
adc
and
data16
sbb
mov
inc
mov
sbb
dec
je
jo
xor
iret
inc
or
cld
cld
outs
arpl
sub
add
sub
xchg
lock
mov
pushf
mov
sbb
es
dec
and
and
sbb
xchg
hlt
mov
fld
mov
popf
add
push
dec
add
add
push
aas
push
and
add
(bad)
or
add
add
neg
out
add
push
adc
pusha
push
xor
sbb
pop
mov
add
inc
ja
xchg
mov
push
pop
push
mov
mov
xchg
or
mov
pop
ds
xor
cmp
pop
sbb
outs
sbb
add
adc
push
add
clc
inc
jl
in
scas
adc
or
sbb
cs
out
mov
sub
xor
push
push
pop
out
imul
dec
and
ror
pop
adc
inc
aam
inc
dec
or
cs
mov
stc
inc
pop
ret
add
mov
aaa
inc
xchg
pop
or
mov
lahf
fs
(bad)
(bad)
and
pop
dec
gs
sbb
(bad)
idiv
fs
inc
or
or
cs
gs
jge
dec
mov
sahf
inc
lahf
pop
push
push
lahf
popw
pop
cmps
xchg
push
jl
mov
add
popa
test
dec
mov
xchg
and
mov
in
add
sub
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
xchg
lock
add
