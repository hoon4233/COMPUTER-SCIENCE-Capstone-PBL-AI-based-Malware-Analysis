push
adc
bound
sub
add
add
or
test
and
add
test
push
dec
or
add
push
cwde
in
add
mov
add
xor
push
or
add
add
or
mov
sbb
add
jno
cmp
adc
add
sub
pop
dec
inc
xor
or
push
push
test
enter
add
add
fld
cmp
sbb
add
and
add
add
add
les
add
cmp
dec
add
adc
sbb
add
mov
jb
add
add
inc
sub
adc
or
add
pop
bound
or
mov
cwde
and
mov
sbb
add
inc
xor
add
movs
cmp
add
pop
add
dec
popa
add
add
or
mov
and
and
mov
mov
and
add
sbb
adc
add
xor
popa
xor
jbe
sbb
add
pusha
or
xor
sub
sbb
add
add
(bad)
fst
dec
inc
mov
test
inc
inc
js
add
rol
dec
add
inc
mov
inc
adc
lock
and
add
mov
xor
and
add
add
or
and
cmp
adc
push
and
sub
mov
add
push
xor
retf
ror
sbb
or
adc
push
and
add
add
adc
push
adc
and
pop
and
inc
push
add
loopne
or
mov
and
adc
or
(bad)
dec
movs
sbb
add
rcl
add
loopne
adc
add
add
sbb
sbb
add
add
enter
and
add
add
add
or
sbb
rcr
inc
add
sub
or
add
add
inc
inc
add
cmp
nop
add
movs
mov
add
inc
test
xor
or
mov
mov
dec
inc
inc
push
or
in
mov
test
add
or
test
popa
inc
movs
mov
add
push
inc
add
test
test
repz
adc
add
test
sub
pop
pusha
xchg
add
or
add
jle
add
add
dec
test
add
push
jo
inc
add
and
xor
and
add
popa
and
and
xchg
inc
nop
rol
ror
add
sbb
xchg
test
add
shl
dec
add
mov
adc
add
aad
add
add
push
mov
adc
rol
or
xor
inc
add
ret
or
adc
add
push
inc
inc
loopne
and
adc
xor
mov
add
or
add
inc
add
or
mov
add
add
add
inc
adc
add
sbb
or
add
or
dec
inc
or
add
push
add
add
stos
fadd
or
add
inc
add
add
or
and
adc
add
pusha
test
add
add
or
dec
inc
sbb
adc
and
add
dec
movs
cmp
inc
add
and
inc
push
add
adc
add
or
add
add
pusha
add
add
add
and
inc
add
mov
retf
jo
arpl
adc
add
adc
shl
xor
add
or
test
inc
add
inc
add
push
sbb
add
add
add
mov
inc
xchg
mov
pop
sbb
mov
int
add
or
adc
or
add
dec
push
nop
add
iret
inc
push
inc
sbb
add
aam
popf
or
sub
rol
add
sub
push
or
shr
add
and
aam
sub
and
xchg
mov
movs
add
or
and
or
add
inc
outs
adc
adc
add
jns
add
rol
add
add
dec
push
add
inc
sub
or
add
add
inc
pop
jnp
enter
rcr
shr
add
sub
xor
or
inc
add
add
mov
inc
pop
inc
adc
add
or
or
push
add
add
adc
jmp
or
call
cmp
dec
adc
and
sub
add
xor
mov
and
add
and
and
adc
inc
rol
inc
or
shl
inc
and
add
push
nop
sbb
daa
adc
add
ret
and
mov
or
into
dec
add
rcr
sbb
add
and
or
sbb
and
or
mov
or
sbb
dec
cdq
aam
xchg
or
add
add
inc
add
add
ins
sub
sub
sub
add
dec
adc
and
rol
adc
loopne
add
adc
sbb
dec
leave
add
inc
add
dec
pushf
and
or
inc
and
inc
ret
push
sub
add
add
push
adc
and
or
add
add
loopne
add
inc
test
add
test
add
sub
cmp
or
add
enter
inc
xor
and
or
adc
add
push
add
or
int3
sub
add
sbb
pmullw
jle
add
add
add
xor
or
push
rol
ins
xor
add
add
inc
sub
test
xor
add
and
add
add
add
and
add
add
inc
and
adc
rol
push
add
add
push
add
inc
and
add
add
fs
xor
push
add
arpl
inc
jo
shl
sbb
lea
add
sbb
add
add
ror
adc
add
sbb
rol
or
add
mov
or
add
in
add
add
mov
sub
add
aaa
loopne
adc
add
xchg
inc
cmp
add
sbb
and
add
inc
add
add
sbb
adc
add
xchg
mov
adc
sub
adc
xor
cwde
dec
loop
sbb
xor
add
rol
and
adc
sbb
inc
or
inc
inc
add
add
add
and
push
sub
and
push
ror
test
adc
inc
add
xchg
pusha
or
sub
or
xor
inc
pushf
leave
pusha
or
add
nop
add
add
inc
dec
or
and
add
add
and
push
inc
add
add
push
add
inc
push
xor
pop
sub
and
sbb
add
inc
add
mov
rol
adc
and
or
add
or
adc
add
retf
add
sbb
push
sub
add
adc
adc
add
sub
xor
add
test
adc
or
ret
adc
adc
inc
inc
dec
xchg
lods
add
inc
adc
add
or
or
dec
inc
mov
xor
add
xor
dec
jecxz
or
add
mov
add
adc
sub
shr
dec
test
sbb
and
test
or
add
adc
add
rol
cwde
les
add
add
add
and
add
test
xor
fmul
mov
add
sub
adc
push
sbb
xor
adc
dec
inc
add
sub
add
or
and
add
inc
mov
nop
dec
push
add
mov
add
test
add
dec
add
and
push
add
sbb
adc
enter
mov
push
and
mov
add
or
inc
adc
add
or
pop
add
pusha
sub
test
inc
test
xor
add
mov
add
rcl
add
push
adc
mov
adc
and
add
and
mov
test
add
sub
add
add
adc
or
xor
fwait
mov
imul
add
xor
or
sub
or
add
add
push
push
mov
add
sbb
add
add
lock
dec
push
or
and
sbb
or
les
add
inc
sub
inc
dec
or
(bad)
xor
and
mov
adc
and
add
add
mov
or
push
movs
add
push
and
adc
push
add
jno
cs
add
adc
and
adc
adc
add
lock
mov
or
add
dec
add
popa
sub
mov
adc
or
xor
add
add
sar
inc
inc
adc
or
adc
add
or
test
es
sub
adc
in
or
and
sub
and
adc
test
nop
adc
add
add
add
(bad)
and
mov
adc
and
adc
popf
xor
jae
add
or
add
push
or
add
adc
and
add
add
add
and
add
or
or
test
xchg
or
inc
adc
add
and
sub
sub
or
mov
add
pusha
sub
inc
sbb
cmp
mov
push
add
sbb
or
cmp
and
sbb
sbb
test
add
add
or
and
jb
test
dec
or
push
add
adc
and
in
sbb
les
sbb
inc
mov
or
pop
and
xchg
and
sahf
add
add
inc
and
bound
and
adc
adc
add
nop
mov
or
push
add
add
jb
inc
inc
or
movs
and
adc
add
push
je
xchg
sub
and
add
add
add
mov
push
rol
sbb
inc
or
pop
enter
test
mov
sub
and
mov
dec
push
dec
push
add
dec
sbb
pop
add
and
and
inc
add
add
inc
dec
adc
rol
and
xor
xchg
add
adc
or
inc
movs
arpl
sub
or
or
inc
add
add
add
inc
push
push
mov
and
add
sbb
add
inc
or
add
adc
push
add
or
add
or
mov
add
add
(bad)
xor
adc
and
and
xchg
inc
and
mov
mov
inc
inc
and
inc
lock
pusha
adc
add
xchg
push
test
lds
push
cmovs
add
add
mov
mov
and
add
add
xchg
add
add
push
and
add
sub
adc
add
add
add
add
add
add
les
test
and
inc
add
or
or
pusha
add
or
inc
or
push
push
add
adc
xor
xor
add
dec
add
and
les
or
xchg
adc
add
test
pop
or
push
inc
push
xor
and
mov
add
or
add
inc
or
ret
and
add
add
rol
add
or
adc
add
inc
sbb
and
adc
sbb
add
and
and
add
dec
inc
dec
test
and
or
add
add
ret
add
add
ret
add
add
xor
adc
push
mov
inc
inc
add
lods
or
push
xchg
xor
or
push
add
push
adc
xor
adc
sub
xchg
rcr
push
test
nop
push
push
adc
adc
xor
push
dec
push
inc
mov
dec
or
loope
dec
test
inc
adc
or
or
or
add
mov
and
add
or
push
sub
fadd
sbb
retf
cmp
mov
and
add
add
add
test
or
mov
inc
cmp
or
add
adc
adc
movs
adc
adc
cmp
inc
rcl
mov
mov
add
inc
add
adc
add
inc
add
and
popa
push
(bad)
les
sub
loope
popf
sub
adc
and
inc
add
xor
and
add
adc
sub
add
add
push
pop
rol
adc
adc
or
add
add
or
dec
and
es
movs
add
add
adc
and
add
nop
or
adc
add
inc
add
loopne
push
add
add
dec
push
add
add
sub
xchg
and
adc
test
inc
add
and
inc
inc
mov
push
mov
inc
add
or
add
mov
fisub
add
inc
add
and
add
dec
sub
lea
jbe
and
add
inc
add
bound
inc
rol
sub
and
or
adc
or
adc
or
push
inc
add
add
or
sbb
adc
or
add
xor
mov
add
rol
cmp
or
imul
and
pusha
or
push
add
adc
and
add
dec
add
push
and
rcr
add
or
inc
add
sub
dec
add
dec
push
sub
leave
and
or
dec
add
inc
movs
add
add
add
aaa
sbb
inc
inc
mov
add
add
push
add
adc
add
xor
or
or
into
or
adc
ret
inc
test
push
dec
add
adc
inc
xchg
or
or
movs
adc
rol
xor
and
add
add
or
(bad)
add
adc
add
sbb
sub
or
or
mov
rol
stos
and
add
jbe
dec
inc
add
add
test
add
and
add
and
add
nop
adc
aam
add
xor
adc
add
add
js
nop
dec
add
or
or
add
add
add
xor
adc
add
lds
inc
dec
inc
inc
inc
sub
or
push
test
es
fs
and
and
or
push
sbb
ret
and
add
sub
add
push
add
add
lds
and
shl
rol
inc
pop
add
sbb
xchg
and
pop
inc
mov
inc
add
jo
sbb
push
adc
fcom
or
nop
mov
push
inc
xor
dec
and
add
or
mov
daa
inc
inc
add
xor
mov
add
adc
sbb
inc
add
add
or
or
test
add
sub
add
add
sub
add
xor
add
movs
sub
inc
add
push
jl
and
add
inc
(bad)
les
mov
add
inc
mov
test
add
les
inc
ror
add
add
dec
xor
adc
push
mov
add
push
or
imul
sub
pop
out
or
cdq
add
inc
push
adc
adc
adc
and
dec
or
push
add
or
sub
or
loopne
pop
xor
sbb
sub
and
add
add
ins
inc
and
add
mov
add
sbb
add
or
push
dec
sub
inc
mov
add
inc
and
xor
push
test
test
dec
test
test
or
or
pusha
and
pop
inc
add
add
add
push
push
mov
sub
add
nop
and
add
fld
and
adc
loopne
ret
or
or
add
xor
or
add
test
pop
xchg
add
add
or
mov
dec
and
in
cmp
xor
inc
adc
or
add
add
add
add
inc
adc
inc
or
add
test
add
ret
adc
add
add
xchg
adc
dec
push
adc
pushf
inc
add
xor
add
or
inc
sub
sbb
or
add
sbb
xor
or
smsw
sbb
add
adc
adc
and
xchg
push
add
add
and
adc
adc
and
dec
mov
add
mov
or
push
add
add
add
add
pusha
shl
pop
xor
inc
add
add
add
mov
repnz
add
adc
or
add
sub
adc
or
push
push
and
and
sub
xchg
and
pop
daa
add
inc
and
adc
inc
or
add
or
ins
test
or
cdq
icebp
add
inc
and
xchg
adc
add
adc
add
push
adc
and
test
or
pusha
add
push
mov
or
dec
add
add
and
sub
add
or
adc
add
or
rol
adc
adc
or
arpl
es
add
add
je
or
or
adc
add
sub
and
add
push
pop
add
add
or
int3
ret
inc
push
pusha
add
and
jecxz
add
or
adc
or
add
and
or
cmp
adc
add
or
outs
add
inc
and
popa
add
add
add
add
les
test
sbb
inc
popa
pusha
and
mov
adc
dec
sbb
xchg
add
or
sbb
inc
dec
xor
add
mov
inc
push
inc
push
inc
push
adc
jo
add
or
xchg
push
cmp
mov
popa
xchg
or
push
add
adc
ds
adc
ret
cmp
adc
adc
int3
inc
sbb
sbb
adc
push
or
or
test
adc
mov
or
mov
and
add
inc
push
es
add
and
inc
add
adc
dec
or
add
push
adc
inc
add
add
sub
fisub
or
mov
ror
or
scas
or
rol
test
sbb
push
mov
or
add
add
in
or
adc
inc
or
xchg
add
push
mov
or
adc
mov
pusha
xor
call
or
inc
inc
add
inc
adc
cwde
add
and
push
and
cmp
xchg
add
and
arpl
adc
sbb
and
or
adc
dec
pop
add
and
and
adc
add
and
sbb
rcl
push
or
add
inc
dec
add
and
add
mov
push
inc
add
sub
mov
ja
add
add
add
xor
enter
add
inc
add
cwde
and
or
rol
add
dec
xor
or
add
and
pop
pusha
add
mov
inc
add
add
ror
adc
or
adc
cmps
and
mov
push
and
or
push
add
adc
sub
sub
jo
mov
and
add
add
les
or
and
rol
loopne
shl
mov
test
and
inc
add
add
sbb
add
call
add
inc
or
lea
int3
add
test
shl
jecxz
pop
adc
adc
shl
push
dec
add
adc
add
cmp
adc
add
daa
or
dec
or
sbb
loopne
add
and
and
adc
add
or
or
sbb
push
inc
test
or
add
inc
xchg
push
sar
pop
add
js
sub
sub
add
push
or
sub
dec
adc
adc
sbb
and
inc
cwde
add
adc
test
add
add
inc
add
or
adc
hlt
adc
mov
xor
cmp
pop
inc
add
inc
add
add
push
cwde
inc
add
inc
or
mov
push
or
xchg
or
nop
push
popa
xor
xor
mov
sub
xchg
push
inc
and
xor
add
and
add
add
adc
inc
loopne
and
xchg
add
add
xor
and
add
nop
mov
add
add
add
test
and
add
sub
inc
cwde
add
add
add
or
or
and
or
adc
xor
and
or
and
pop
add
add
adc
pusha
xor
adc
push
nop
push
inc
add
inc
add
dec
push
or
inc
add
mov
push
adc
add
add
add
add
xor
or
add
add
adc
add
ins
pop
add
js
adc
nop
fs
test
push
dec
xor
xor
sbb
inc
inc
arpl
or
add
add
add
add
or
add
pop
pop
adc
or
mov
or
rol
inc
sub
mov
add
and
add
xor
inc
add
xor
push
mov
pop
and
xor
mov
add
sbb
add
add
push
and
xor
mov
inc
add
xor
jb
rol
adc
add
fld
or
jmp
add
inc
adc
add
add
rol
inc
pop
rcl
dec
inc
add
dec
add
push
add
sbb
and
add
fadd
add
or
adc
push
or
xor
dec
push
adc
push
add
adc
push
add
test
inc
nop
and
add
nop
add
and
mov
dec
arpl
add
add
sub
inc
xchg
add
adc
add
xchg
or
add
add
or
push
sbb
bound
add
add
push
add
add
add
and
push
and
rol
movs
add
inc
in
and
xchg
mov
or
add
adc
test
je
inc
adc
dec
and
test
lea
sub
lds
add
sub
adc
add
es
jbe
inc
cmp
add
inc
or
push
add
or
lock
inc
add
jo
adc
adc
aad
or
and
mov
add
add
fs
adc
xor
and
push
lods
add
add
adc
inc
xor
test
dec
adc
mov
and
inc
sub
or
(bad)
and
pusha
xchg
add
adc
rol
jbe
inc
dec
add
lds
sbb
adc
add
add
inc
inc
add
add
or
inc
xor
adc
push
add
and
and
inc
outs
or
add
inc
test
add
adc
add
add
mov
add
dec
int3
mov
adc
adc
mov
add
inc
mov
and
adc
adc
or
adc
mov
add
rcr
adc
mov
and
add
jne
rol
inc
inc
add
dec
add
cwde
xor
add
or
adc
aad
mov
inc
add
inc
add
pusha
pusha
and
add
add
or
add
and
add
add
add
adc
add
mov
outs
add
add
add
or
and
pop
in
add
add
inc
sub
inc
add
add
bound
add
and
add
and
mov
add
inc
inc
add
xor
or
xor
add
mov
sub
adc
jo
add
or
push
add
enter
add
inc
sub
rol
add
add
xchg
add
inc
or
inc
add
adc
inc
xor
add
or
and
or
adc
sbb
push
mov
adc
rcl
add
adc
add
add
add
xchg
test
dec
or
dec
and
add
adc
add
adc
xchg
add
adc
adc
ins
and
or
inc
or
add
xor
and
inc
add
lods
or
adc
arpl
add
inc
or
call
and
add
inc
add
add
or
add
and
int3
add
add
xor
popa
sub
test
sub
and
les
xor
add
adc
or
inc
add
sbb
pop
adc
pusha
inc
add
push
test
ss
cmp
add
and
mov
sbb
inc
nop
adc
mov
pop
inc
scas
add
or
and
adc
popa
add
inc
add
add
nop
adc
adc
add
and
and
add
test
or
add
dec
and
and
add
adc
or
adc
pusha
or
xor
inc
add
ret
and
sub
add
pusha
sbb
cwde
or
or
arpl
or
dec
and
add
add
add
inc
inc
sbb
or
dec
adc
pusha
inc
mov
add
inc
or
adc
fcom
xor
add
and
or
add
xchg
add
and
call
adc
mov
or
test
xchg
mov
and
xor
and
add
mov
sbb
shl
and
add
adc
test
cmc
shl
inc
and
xchg
or
or
and
add
push
add
or
add
push
adc
add
adc
add
inc
inc
and
out
inc
xor
fs
push
add
mov
add
add
adc
or
mov
enter
inc
xor
or
shl
add
push
adc
inc
or
and
inc
and
int3
sbb
adc
push
add
sub
sub
or
add
add
mov
adc
add
jb
les
inc
and
sar
and
add
mov
add
test
mov
add
add
sbb
or
lds
add
add
retf
add
mov
and
adc
nop
xor
inc
and
inc
inc
add
add
mov
inc
pop
sub
dec
inc
add
mov
shr
mov
and
nop
leave
adc
or
and
cmp
add
inc
adc
sub
and
add
sub
adc
sub
and
mov
add
add
push
adc
add
xchg
xchg
inc
add
add
add
xor
mov
pushf
add
dec
adc
and
or
inc
adc
add
inc
add
add
add
inc
add
les
add
test
or
dec
push
add
adc
add
and
add
sbb
add
sbb
or
add
sub
cmp
and
xor
add
dec
mov
dec
xchg
adc
pusha
and
add
adc
inc
push
xchg
add
adc
mov
sbb
xor
inc
add
adc
mov
loope
add
add
add
js
and
inc
and
add
xor
inc
add
xor
add
or
sub
adc
jo
inc
or
pop
inc
and
push
test
mov
mov
or
mov
stos
mov
add
or
adc
and
or
inc
sub
cmp
add
and
pusha
and
pusha
add
add
or
pop
add
mov
or
add
enter
and
xchg
adc
add
ret
add
sbb
inc
sub
xor
add
adc
add
add
xchg
inc
imul
dec
call
add
add
add
add
mov
inc
add
add
mov
nop
xchg
add
add
sbb
or
and
add
add
xor
rol
and
mov
or
adc
sub
and
cmp
or
and
add
add
and
add
adc
inc
test
add
add
xor
add
pusha
add
adc
add
and
add
xchg
add
sbb
add
dec
dec
nop
add
and
or
add
add
popa
sbb
or
nop
adc
sbb
mov
sub
add
test
and
mov
sahf
shr
add
add
popa
or
popa
sbb
add
adc
add
or
dec
add
add
add
add
or
mov
add
cmp
and
or
adc
inc
sub
add
inc
ror
push
adc
push
add
loope
add
push
or
add
push
cmp
add
xor
leave
inc
push
or
cmp
inc
dec
ret
dec
add
add
xor
add
add
or
add
adc
or
rol
and
and
add
adc
out
xor
inc
add
pusha
pop
add
loopne
and
adc
daa
inc
dec
dec
lods
adc
cdq
adc
sbb
nop
xchg
adc
or
gs
ror
push
add
add
and
or
stos
add
and
xor
add
shl
inc
add
rol
ret
inc
adc
add
leave
sbb
inc
adc
add
inc
icebp
add
and
and
and
inc
xchg
add
adc
and
push
nop
add
and
or
add
add
mov
inc
inc
inc
cmp
mov
add
adc
push
adc
inc
mov
or
adc
push
add
add
nop
enter
xchg
xchg
(bad)
adc
data16
and
add
xor
adc
out
add
or
inc
push
sub
mov
fiadd
or
and
inc
fdiv
push
add
and
cmp
inc
adc
mov
sub
test
or
call
or
and
adc
inc
inc
inc
adc
add
inc
add
mov
or
inc
dec
add
or
jno
ror
mov
inc
add
add
sub
inc
add
sub
xor
or
inc
add
inc
add
xor
add
adc
add
or
ret
mov
adc
dec
in
test
and
or
test
loope
dec
add
and
inc
push
and
ret
dec
inc
add
add
adc
or
adc
inc
and
add
add
bound
rol
add
inc
sbb
sbb
add
or
pop
popa
add
cmp
cmp
shl
add
adc
adc
dec
cs
add
pop
or
sbb
and
sub
add
int3
inc
add
push
adc
mov
add
inc
push
xor
mov
xor
cmp
add
adc
inc
add
or
adc
adc
or
xor
adc
adc
and
pusha
dec
dec
add
rcl
pop
dec
fs
adc
inc
mov
add
add
and
or
add
add
add
add
popa
mov
mov
add
add
inc
add
movs
add
and
cdq
add
pusha
ret
add
push
add
mov
mov
adc
add
inc
or
add
or
sbb
dec
or
inc
inc
rcr
rcl
add
add
sbb
inc
add
mov
add
or
outs
or
cmps
add
xchg
add
popa
add
and
push
or
add
adc
add
or
fdivr
add
inc
rol
add
adc
in
add
and
add
dec
test
add
inc
nop
ret
add
add
ror
dec
push
or
add
add
adc
xor
cmp
and
add
inc
inc
and
add
add
ror
xor
inc
sbb
add
adc
add
xchg
cdq
and
sub
loopne
push
cdq
and
mov
mov
add
inc
rol
add
nop
inc
add
sbb
rol
in
and
adc
rcl
inc
and
add
xchg
add
add
inc
and
dec
arpl
add
or
mov
ins
adc
cwde
or
add
pusha
add
add
add
pop
add
mov
adc
inc
or
and
add
or
mov
add
add
dec
mov
add
push
shl
add
add
xchg
xor
adc
lea
adc
add
add
ror
pop
add
inc
or
pop
retf
push
add
or
or
add
add
add
and
adc
inc
add
xor
xor
nop
inc
mov
or
inc
inc
xchg
or
add
les
or
mov
pusha
or
add
add
and
dec
push
adc
mov
add
rcr
mov
inc
cwde
add
or
cwde
add
add
rol
adc
add
pop
mov
adc
and
inc
or
inc
add
add
add
xor
add
jge
push
lods
add
or
jo
and
inc
inc
and
dec
adc
add
add
mov
inc
sbb
add
inc
add
inc
add
add
and
and
enter
add
add
xor
add
sbb
add
pop
inc
jno
dec
push
nop
mov
jo
imul
add
inc
push
add
sub
add
add
pusha
mov
xchg
mov
add
cmp
mov
adc
enter
adc
add
add
add
pop
test
test
dec
sub
add
xchg
adc
pushf
adc
add
or
add
mov
dec
jo
and
and
add
inc
add
adc
inc
add
adc
test
pop
inc
xchg
add
add
inc
adc
or
popf
add
and
adc
add
dec
mov
or
and
sub
add
nop
xor
inc
add
inc
sub
inc
add
inc
add
add
add
mov
xor
add
push
adc
or
adc
and
xor
inc
test
add
dec
add
mov
add
sub
bound
add
or
inc
push
add
add
inc
sub
add
add
and
or
ds
xor
inc
add
add
add
adc
adc
add
test
test
or
xor
dec
pusha
add
sub
adc
add
add
inc
test
mov
xor
inc
add
or
or
add
xchg
nop
add
sub
and
add
les
add
add
nop
and
adc
pop
test
sub
and
add
and
add
or
sub
add
add
or
push
inc
add
sub
inc
test
test
data16
adc
pop
adc
sbb
push
adc
add
sbb
inc
adc
mov
push
mov
or
add
push
or
sub
and
adc
and
or
or
adc
adc
or
inc
add
add
lods
push
add
inc
add
sub
or
mov
inc
adc
and
or
sbb
add
add
push
add
or
add
and
add
rcl
or
adc
add
loopne
outs
xchg
add
sbb
add
add
cmp
push
add
test
inc
and
and
or
test
nop
adc
mov
xor
add
add
adc
test
inc
add
nop
sbb
mov
inc
and
ret
pusha
or
nop
inc
rol
add
dec
and
movs
add
mov
and
add
sub
inc
sub
or
add
pop
push
add
add
adc
adc
inc
add
pusha
mov
inc
cwde
dec
xor
add
push
or
dec
adc
add
add
and
pop
add
xor
inc
xor
add
adc
or
inc
cmp
or
add
or
pop
add
and
xchg
inc
push
dec
add
add
cwde
cwde
and
test
sub
sub
sbb
add
inc
add
sbb
xchg
mov
dec
inc
retf
mov
shl
retf
sub
aam
add
add
inc
dec
or
sub
add
adc
add
sbb
ins
adc
pushf
add
adc
adc
jo
and
mov
add
mov
mov
add
pusha
inc
add
dec
ret
dec
inc
add
rol
pushf
or
add
add
add
sbb
or
adc
add
call
sub
rol
mov
dec
adc
xor
enter
add
inc
and
add
dec
push
add
add
xchg
mov
sbb
adc
xor
adc
and
inc
sbb
inc
or
add
add
inc
sub
or
les
inc
add
sbb
popa
rol
js
cmps
add
adc
mov
or
add
adc
inc
or
inc
add
add
mov
adc
adc
inc
sub
dec
rol
add
add
adc
dec
pop
aad
push
mov
or
test
add
inc
add
add
sub
add
icebp
add
add
and
inc
add
loopne
push
dec
movs
adc
inc
push
push
dec
adc
or
mov
add
dec
xor
add
add
or
adc
add
jo
add
xor
nop
push
nop
add
add
cs
add
push
push
pop
inc
dec
ret
inc
add
add
or
and
and
add
push
add
add
and
push
add
add
and
and
int3
add
dec
enter
push
adc
adc
add
ror
xor
js
xor
add
push
add
add
inc
pusha
add
inc
and
data16
add
add
add
jmp
add
mov
sub
and
adc
lods
mov
or
push
and
push
inc
je
or
shl
sub
adc
add
inc
mov
shr
pusha
push
sub
pusha
and
add
and
sbb
adc
adc
rol
inc
push
add
pop
adc
xor
ins
or
add
inc
movs
mov
add
dec
arpl
inc
add
test
adc
adc
sbb
adc
add
fs
test
xor
xor
xchg
sub
jo
nop
add
inc
call
add
mov
jns
add
sub
pop
or
adc
push
pop
inc
xchg
or
push
dec
push
dec
mov
add
sbb
xor
or
mov
xor
mov
and
cmp
add
inc
add
ins
and
mov
push
or
add
lds
add
xor
and
and
add
add
adc
test
add
sub
add
or
add
inc
xchg
pop
or
das
sbb
or
sbb
add
mov
or
adc
dec
pusha
adc
add
sbb
add
or
inc
add
adc
add
adc
dec
test
pusha
adc
and
adc
and
inc
test
or
add
push
pusha
or
add
and
add
mov
or
cmps
adc
inc
and
add
add
push
add
sbb
adc
xchg
or
adc
add
push
sbb
nop
add
adc
push
adc
dec
or
xor
inc
xchg
adc
test
les
add
nop
xor
adc
and
or
sub
fs
or
add
cmp
mov
or
xor
inc
or
xchg
fimul
adc
add
add
add
and
add
or
add
or
pushf
and
or
add
inc
add
or
adc
loopne
inc
add
add
adc
add
add
adc
adc
enter
and
test
add
push
xor
and
and
sub
adc
or
cmp
leave
mov
add
push
push
dec
add
nop
or
add
mov
pop
in
add
add
and
add
push
xchg
and
adc
sbb
inc
mov
xchg
cmps
rol
jo
add
inc
and
add
add
sub
and
xchg
push
and
adc
add
or
and
xchg
or
add
or
bound
and
pusha
add
add
inc
jne
push
add
and
dec
xchg
or
or
and
or
nop
add
add
xor
adc
push
cmp
sub
add
or
push
or
test
add
test
push
pusha
add
or
add
add
or
sub
nop
add
inc
add
nop
adc
push
nop
mov
add
push
inc
and
and
and
sbb
adc
push
add
inc
mov
push
test
shl
xchg
or
or
add
movs
add
add
add
nop
dec
mov
add
push
sub
or
movs
add
add
and
adc
mov
ins
mov
sbb
push
xor
add
lock
add
push
xchg
add
adc
add
add
or
adc
add
add
or
loopne
leave
add
add
inc
fs
xor
add
and
add
push
xchg
and
add
add
movs
adc
add
adc
xchg
xor
xor
and
add
add
and
inc
adc
add
and
adc
push
and
or
push
add
inc
inc
inc
popa
mov
inc
push
inc
loope
and
add
adc
pusha
ss
add
dec
or
nop
adc
pop
adc
inc
mov
add
add
add
and
add
add
add
adc
adc
call
add
add
and
or
xor
cmp
add
(bad)
or
add
and
adc
adc
or
xor
add
adc
inc
xor
add
test
push
sub
mov
sbb
add
and
test
sub
push
xor
test
add
or
pop
add
add
or
add
xor
mov
add
repnz
les
mov
and
dec
xor
loopne
push
out
add
and
rol
add
push
inc
push
pop
add
and
and
inc
sbb
add
and
mov
mov
pusha
dec
and
inc
and
sub
pusha
add
int3
sub
adc
add
and
adc
add
rol
add
add
add
or
pusha
add
or
add
sbb
xchg
add
inc
pop
cmp
popa
(bad)
inc
test
add
pusha
or
nop
sbb
or
dec
add
add
add
sub
shl
add
rol
or
ror
and
xor
mov
and
nop
or
and
and
mov
nop
add
or
add
xchg
ins
adc
sbb
push
sbb
inc
or
and
sub
add
add
mov
add
add
add
xor
add
xchg
add
test
add
and
add
push
push
or
nop
add
add
sub
or
add
xor
add
sbb
add
and
and
jl
sub
inc
add
(bad)
mov
mov
and
xor
adc
add
and
test
add
sbb
sub
xchg
and
sub
add
add
adc
xor
mov
pusha
add
add
add
add
sbb
add
add
and
adc
cwde
or
inc
or
or
inc
inc
and
or
add
add
sub
and
add
or
add
push
add
add
inc
test
add
dec
sbb
popa
adc
mov
adc
add
push
inc
add
fiadd
inc
or
add
add
xchg
arpl
add
add
add
inc
test
xor
sbb
push
or
push
inc
push
imul
add
sub
and
adc
mov
add
and
add
inc
or
add
adc
test
inc
mov
add
adc
nop
test
mov
add
add
mov
rol
mov
inc
push
inc
add
cmp
or
ss
(bad)
and
add
sub
xchg
enter
add
nop
pop
add
inc
and
adc
inc
adc
xchg
inc
sub
mov
and
inc
push
inc
rcl
add
adc
add
add
dec
and
add
add
mov
inc
adc
and
sub
shr
and
add
or
add
loop
inc
push
enter
sbb
pusha
add
adc
or
inc
nop
mov
sbb
add
add
and
add
add
add
ret
add
and
or
add
add
and
inc
add
and
jmp
adc
add
pop
add
or
or
sbb
adc
adc
sub
push
inc
inc
xor
add
or
add
or
test
add
inc
or
add
pop
or
movs
add
add
outs
adc
add
test
dec
nop
pop
nop
add
sbb
inc
push
adc
inc
inc
test
push
add
add
xchg
add
and
and
push
add
rol
and
sbb
or
mov
call
push
add
adc
inc
rol
xor
add
les
pusha
lods
inc
nop
mov
add
inc
enter
add
inc
add
add
or
adc
adc
add
add
xor
add
adc
adc
add
add
add
add
add
mov
adc
or
add
and
rol
icebp
or
adc
mov
es
and
ret
or
add
push
add
or
add
add
add
and
or
rol
popa
(bad)
iret
ins
add
ficom
or
inc
or
test
mov
or
adc
pusha
sbb
add
sub
pop
add
add
and
and
or
inc
add
adc
and
rcl
xchg
or
inc
sub
dec
sbb
ss
or
and
push
and
inc
inc
adc
mov
dec
adc
mov
mov
add
add
push
and
mov
inc
and
add
add
adc
adc
and
popa
add
or
inc
adc
inc
add
or
add
adc
shl
fs
add
add
xor
add
push
add
sub
sub
add
or
inc
shl
add
or
add
add
mov
add
dec
add
inc
cmp
add
mov
xor
add
push
push
mov
push
sub
add
or
mov
sub
dec
and
sub
add
or
add
and
add
or
add
add
add
or
inc
inc
jb
add
and
test
aas
add
inc
add
add
mov
aaa
or
add
inc
add
push
sub
or
xor
pop
or
popa
add
adc
add
pusha
add
add
inc
and
or
ror
or
or
add
adc
dec
cmp
adc
and
inc
inc
adc
inc
or
push
inc
add
or
mov
or
adc
in
ja
add
fild
add
test
and
add
rol
add
loope
jne
adc
add
or
dec
test
pop
and
adc
sbb
adc
lods
add
mov
add
test
adc
or
push
or
sahf
push
loopne
or
add
xor
shl
fsubr
test
jno
cwde
or
and
bound
adc
inc
adc
xor
adc
ret
adc
add
push
adc
sbb
inc
xchg
mov
add
adc
inc
and
add
dec
and
adc
add
dec
test
inc
add
rol
add
dec
adc
test
and
add
or
add
push
sbb
rol
bound
adc
mov
int3
or
or
add
mov
add
dec
mov
or
or
adc
add
mov
inc
inc
pusha
or
mov
add
inc
xchg
mov
adc
add
and
add
add
adc
lock
and
and
inc
or
add
nop
sub
adc
push
dec
mov
lds
add
push
xor
pusha
add
xchg
add
sub
adc
or
or
ror
adc
inc
push
ret
push
gs
add
adc
inc
adc
or
dec
adc
or
dec
inc
inc
adc
les
inc
add
adc
and
adc
or
xor
adc
adc
pop
inc
mov
add
mov
or
add
add
sub
bound
add
pusha
inc
or
sub
and
or
aam
add
add
adc
or
or
or
add
test
push
and
and
cmp
dec
and
sub
mov
add
cmp
xchg
cmp
adc
fs
sbb
inc
mov
inc
daa
adc
and
or
cmp
inc
add
add
add
or
inc
inc
test
mov
add
add
add
and
and
inc
and
add
adc
adc
mov
pop
mov
adc
test
inc
dec
add
adc
dec
xchg
mov
mov
and
adc
inc
sbb
sbb
add
or
adc
add
add
pusha
adc
nop
add
cwde
adc
add
add
xor
push
adc
inc
and
dec
push
and
xor
add
adc
sbb
add
cmp
movs
adc
add
or
mov
sub
or
push
xchg
and
mov
adc
add
add
adc
add
xor
add
inc
add
sbb
add
add
pop
mov
add
in
mov
sub
dec
add
mov
enter
dec
add
inc
xor
and
push
test
lds
pop
mov
add
sbb
add
add
and
dec
adc
adc
inc
mov
add
xchg
inc
add
adc
add
movs
add
adc
lock
mov
add
add
adc
sub
add
add
adc
and
test
pop
inc
nop
test
pop
push
adc
add
add
ret
pop
add
add
adc
inc
nop
or
add
mov
shl
and
arpl
inc
jo
and
push
adc
add
and
push
and
or
add
add
and
add
or
add
mov
inc
add
sub
inc
arpl
mov
add
and
push
or
or
into
add
add
add
and
pop
or
inc
rcl
and
adc
add
and
call
add
inc
add
bound
add
adc
dec
add
inc
adc
add
inc
or
rcr
add
and
add
add
add
add
and
adc
xor
xchg
popa
add
push
inc
and
or
add
pusha
add
dec
adc
adc
add
adc
add
inc
sub
add
xor
add
adc
add
adc
xchg
inc
add
and
xor
xor
add
add
add
add
add
or
add
add
add
adc
rol
adc
add
jo
push
add
adc
adc
inc
dec
add
adc
xor
and
add
and
nop
add
xor
inc
and
and
xor
add
inc
add
add
sub
pusha
add
or
adc
add
add
add
add
add
mov
add
add
mov
adc
add
add
sbb
adc
adc
pusha
inc
add
add
les
add
add
or
add
add
add
adc
adc
add
and
sub
adc
add
and
add
mov
add
xor
add
adc
or
add
add
inc
sub
add
rcr
add
mov
adc
and
das
add
add
add
add
add
pop
add
or
or
add
mov
inc
add
sub
add
add
add
fs
add
mov
add
add
pop
dec
or
add
inc
sub
add
or
or
or
and
movs
adc
or
adc
adc
or
rol
add
add
or
add
add
adc
add
bound
add
add
imul
add
inc
lds
inc
add
sub
mov
adc
bound
and
add
add
add
add
or
nop
inc
or
add
movs
add
and
or
add
add
or
and
and
add
or
and
test
add
add
add
add
push
jecxz
add
or
add
mov
add
test
add
xor
inc
adc
add
adc
add
or
adc
add
add
mov
dec
and
mov
add
add
add
adc
test
nop
dec
add
add
or
xchg
add
mov
or
add
or
pushf
add
dec
dec
and
and
sbb
add
xor
and
adc
and
add
inc
add
mov
or
adc
add
add
or
test
add
xchg
adc
add
add
inc
and
adc
add
pop
add
add
add
sbb
add
mov
add
add
and
dec
sub
mov
dec
inc
add
add
add
add
or
add
xor
or
adc
add
add
add
inc
or
add
test
rol
or
adc
add
sub
add
add
or
add
or
add
cmp
add
add
add
and
and
cwde
inc
inc
add
sbb
xor
inc
sub
push
xor
add
add
xor
add
push
inc
add
adc
add
xchg
mov
add
adc
jo
dec
mov
inc
xchg
add
push
add
adc
add
dec
inc
xchg
add
or
pusha
or
add
gs
jns
add
add
and
cmp
add
push
add
add
inc
add
add
sub
and
or
push
and
inc
add
add
xor
inc
inc
test
cmp
test
mov
dec
add
arpl
sub
adc
rol
or
add
and
and
add
add
adc
mov
and
sbb
adc
add
add
add
add
and
sbb
add
dec
xor
inc
adc
or
add
inc
or
or
add
add
inc
or
or
or
sub
adc
or
xor
add
add
add
add
or
or
push
or
mov
add
add
push
add
add
cmp
stos
inc
add
and
add
out
add
adc
sbb
inc
sbb
add
or
add
inc
and
push
add
mov
add
cmps
inc
inc
add
inc
add
dec
and
add
inc
adc
ret
add
mov
add
ss
loope
inc
add
pop
add
or
and
or
add
add
dec
add
xchg
inc
add
inc
add
add
add
adc
add
dec
dec
add
add
daa
add
and
and
and
push
inc
adc
push
add
inc
add
and
add
add
push
add
add
and
adc
add
add
add
xor
and
add
and
add
cwde
add
add
add
add
add
adc
add
or
add
test
and
js
sub
add
add
add
rcl
adc
pop
add
inc
and
js
add
add
inc
add
inc
add
add
add
les
add
and
or
and
or
and
adc
les
add
and
add
add
add
or
add
(bad)
or
or
add
xor
loopne
and
mov
mov
add
add
add
inc
add
or
inc
pusha
and
add
or
add
add
add
mov
add
add
adc
or
mov
add
add
add
add
add
or
add
daa
add
add
test
or
inc
rol
add
adc
add
mov
cwde
inc
add
add
add
adc
dec
xchg
sub
add
push
inc
xor
add
add
push
inc
adc
adc
and
add
inc
xchg
inc
add
pop
add
add
or
and
sbb
add
add
and
add
and
or
adc
add
movs
sub
inc
add
add
adc
add
inc
pusha
or
add
or
adc
mov
adc
add
cmp
add
xor
sub
lds
adc
xchg
add
and
add
add
add
add
add
xor
push
mov
adc
add
add
pop
add
sub
add
add
inc
pop
add
add
add
inc
add
adc
add
add
add
add
test
or
push
and
push
add
add
and
loopne
and
inc
add
add
add
fwait
inc
add
and
add
add
add
add
xchg
dec
inc
xchg
or
inc
inc
or
add
add
sbb
xor
add
or
mov
add
add
inc
or
and
inc
inc
add
add
and
add
add
and
or
adc
add
adc
or
jno
and
add
add
add
add
add
add
and
add
add
and
or
dec
adc
mov
or
add
add
or
pop
add
adc
add
add
add
les
add
add
adc
add
add
add
and
add
adc
add
dec
add
and
add
inc
loopne
inc
push
add
and
and
inc
cmp
add
shr
jge
add
add
adc
add
add
popa
jo
inc
imul
pop
rol
int3
or
adc
nop
imul
add
add
add
xchg
adc
adc
mov
adc
inc
loopne
rol
inc
inc
add
add
or
add
or
add
pop
add
add
add
xor
bound
inc
into
adc
pusha
or
add
add
and
add
mov
and
or
add
add
and
and
and
rol
inc
mov
and
add
adc
add
adc
pop
mov
add
and
add
add
add
add
nop
add
test
add
push
and
adc
add
and
or
add
or
xor
add
push
sgdtd
rol
inc
adc
add
add
adc
adc
add
add
sub
add
mov
add
and
add
add
adc
add
sub
adc
add
add
add
mov
push
add
add
sbb
add
add
and
xchg
pop
and
inc
and
or
inc
inc
add
dec
lods
add
push
or
test
add
add
add
add
adc
add
or
jecxz
add
cmp
adc
add
push
inc
add
and
adc
add
and
mov
add
add
pop
add
or
add
jl
add
and
adc
inc
add
sbb
add
add
add
or
adc
add
sbb
add
xchg
sub
add
add
add
add
add
sbb
fld
pop
add
test
add
or
pusha
add
add
add
xchg
mov
add
add
add
add
add
or
inc
or
inc
and
add
add
add
or
add
mov
inc
sbb
cdq
cmp
xchg
and
add
adc
lock
sbb
sub
and
cwde
and
add
retf
sbb
add
add
add
add
add
inc
data16
add
xor
or
sbb
or
rol
dec
add
and
add
add
mov
add
add
add
lock
rcr
or
add
inc
add
inc
or
or
and
loope
inc
and
leave
add
jo
test
or
add
add
push
push
add
xor
add
add
adc
add
and
sub
adc
enter
add
add
add
and
and
add
lds
add
and
add
add
add
add
add
add
adc
sbb
add
add
test
inc
add
stos
mov
add
add
dec
cmps
and
gs
nop
add
add
mov
add
add
add
add
add
push
inc
add
add
inc
push
rol
add
adc
inc
sub
and
mov
inc
add
add
add
add
or
inc
mov
sbb
add
or
or
add
add
dec
push
or
or
cmp
xor
add
sub
dec
add
and
and
or
sbb
mov
add
add
add
pop
add
add
add
or
stos
mov
push
add
add
adc
add
add
and
add
add
sbb
mov
add
inc
and
add
add
inc
dec
or
add
adc
adc
add
xchg
add
add
movs
add
add
add
inc
popa
add
add
and
add
rol
add
inc
dec
or
add
inc
nop
inc
dec
cdq
fs
add
adc
or
add
add
push
add
add
add
dec
dec
mov
add
adc
add
adc
retf
add
add
add
add
add
adc
sub
add
inc
test
add
inc
rol
add
add
and
add
add
xor
add
and
and
push
add
push
and
add
add
mov
add
add
and
add
in
stos
add
xor
inc
add
add
cwde
adc
adc
add
add
add
add
sub
int3
and
add
add
adc
add
add
inc
inc
add
and
mov
add
dec
and
adc
add
inc
and
or
sbb
inc
sbb
add
inc
add
add
pop
dec
mov
test
or
mov
add
add
and
add
mov
and
add
add
rcl
add
nop
add
inc
push
or
sbb
adc
or
add
add
add
add
inc
sub
push
add
pusha
push
add
add
or
and
push
nop
add
or
rol
xor
or
or
add
inc
push
mov
push
je
cmc
cwde
pusha
add
mov
les
xlat
mov
ret
xor
iret
les
out
pushf
pop
push
cmp
aam
cmp
aam
popa
push
scas
sub
ret
sub
rcl
in
mov
cmps
cs
jmp
or
or
sub
jo
push
mov
nop
mov
inc
lods
movs
and
mov
leave
inc
movs
push
dec
and
cld
js
and
or
sub
popa
mov
cmp
inc
popf
rol
mov
sbb
popa
push
dec
cmp
and
bound
jge
sahf
rol
xchg
nop
xchg
xor
xchg
popf
cmp
xor
or
inc
popf
shr
bound
out
popa
pop
cmp
or
ret
popa
push
dec
mov
ret
fsub
fcomip
aas
popf
ror
xor
push
scas
cmp
out
mov
mov
inc
push
cmp
cmps
pushf
rol
popa
cmps
inc
ss
mov
sar
add
push
into
sub
mov
mov
xchg
stos
pushf
cmp
popa
xchg
xchg
ror
pushf
mov
ret
and
push
mov
lea
mov
cmp
ja
rol
or
sub
jg
cli
dec
cmp
lea
and
popf
cmp
jl
cmp
nop
and
cmc
xchg
lahf
mov
(bad)
pushf
mov
ret
daa
fcmovb
ss
ds
sbb
sahf
or
or
lds
aam
inc
mov
aam
cmp
nop
out
mov
sahf
(bad)
push
push
mov
stos
enter
ja
shl
mov
cwde
rcr
inc
push
(bad)
push
mov
cmp
add
jecxz
inc
in
sub
sti
push
lods
fcomi
clc
add
jmp
sub
popa
push
cmp
iret
sub
jmp
sub
popa
push
cmp
fs
xchg
(bad)
xor
push
mov
aad
mov
mov
jo
mov
(bad)
jecxz
dec
cmp
inc
fild
clc
stos
jmp
dec
or
fidivr
cmp
ret
dec
pop
arpl
mov
es
retf
aas
inc
scas
mov
push
cld
push
leave
fisttp
dec
call
repnz
lds
and
dec
jle
es
loope
ds
mov
dec
not
in
mov
rcl
scas
jl
push
push
popa
outs
mov
jle
rcr
inc
mov
jmp
dec
inc
cmp
inc
sub
inc
cmps
ret
(bad)
mov
inc
popf
shl
inc
nop
adc
out
jg
add
or
stos
icebp
pushf
rol
dec
pop
lds
mov
popa
push
out
iret
jmp
sub
shr
in
loope
int
mov
dec
jg
int3
outs
pop
adc
popa
nop
rol
popf
les
push
iret
aaa
cmp
cmp
jmp
daa
emms
aas
jmp
mov
add
add
leave
into
mov
in
jge
or
inc
cmp
popa
scas
or
out
dec
adc
(bad)
in
xlat
and
or
sub
sti
movs
out
ret
cmp
mov
scas
dec
push
and
ds
shl
cmp
mov
cmp
sub
mov
retf
stos
inc
popf
rol
rol
pop
mov
inc
adc
jo
cmp
mov
inc
jge
fwait
rol
sub
adc
push
(bad)
rol
adc
shr
mul
inc
stos
outs
push
cmp
mov
aaa
xchg
lods
pop
jecxz
inc
sub
pop
add
rol
pusha
and
ret
lods
jno
add
sub
push
cmp
mov
movs
dec
out
popf
rol
lods
cmp
add
xchg
sub
leave
ja
popa
leave
inc
stos
sahf
push
cmp
mov
aas
jo
popf
ror
in
cmp
and
popf
enter
rol
icebp
jmp
sbb
(bad)
mov
movs
dec
fistp
popf
ror
ins
adc
cld
push
daa
iret
aad
pushf
daa
mov
pop
loope
aam
and
dec
dec
dec
mov
xchg
inc
jmp
mov
repz
sub
bound
pop
mov
retf
(bad)
jmp
dec
sar
call
retf
pop
add
call
inc
mov
push
mov
retf
pop
loop
dec
push
cmp
xchg
cli
neg
or
push
sahf
add
ins
pop
dec
push
push
sub
pop
jmp
aad
cmp
pop
add
adc
pop
pusha
cmp
ins
les
aad
cmp
jo
adc
mov
(bad)
dec
lahf
rcr
in
mov
aam
cmp
sub
or
pop
fsub
ja
and
pop
sub
adc
sub
and
in
dec
div
mov
cmp
mov
adc
inc
movs
jge
inc
iret
into
pop
sti
movs
xchg
add
in
movs
sub
mov
popa
leave
inc
stos
push
push
cmp
push
or
scas
ret
or
xchg
in
push
sub
mov
sbb
mov
popa
push
lds
mov
retf
pop
lods
cld
rol
popa
es
pop
jecxz
dec
push
cmp
sub
pop
jmp
add
bnd
out
ret
xor
xor
pop
mov
sahf
push
inc
popf
sar
outs
into
or
ret
int3
ret
jmp
sub
lahf
mov
ret
xchg
push
mov
(bad)
(bad)
clc
mov
pop
cmp
dec
ret
fstp
ins
inc
jmp
push
cmp
mov
mov
iret
retf
add
ret
scas
mov
jmp
adc
popf
rol
popa
pop
nop
out
popf
rol
popa
mov
lods
ret
popa
adc
push
mov
ret
popa
loope
pop
adc
rcl
cmp
test
mov
ss
push
cmp
in
xor
jp
loopne
xchg
push
jmp
repz
ret
mov
faddp
adc
jmp
ret
xor
pop
or
cmp
xlat
or
and
sub
mov
add
dec
movs
xchg
or
fwait
push
pusha
cmp
and
jecxz
sbb
call
dec
int
pop
cwd
(bad)
arpl
push
add
xchg
in
xor
xchg
sbb
in
xor
scas
or
neg
cmps
push
inc
mov
mov
(bad)
fisubr
call
jmp
ffree
xchg
jle
into
pushf
test
in
cs
inc
push
adc
les
fwait
cwde
add
cdq
cmps
or
cmps
shl
jmp
repnz
jge
mov
ins
add
fcomp
int3
and
jno
pop
and
ret
sbb
enter
inc
jae
inc
xor
sbb
gs
retf
scas
mov
shl
js
xchg
ret
mov
hlt
mov
sub
(bad)
mov
cli
push
ret
popf
add
les
lods
call
push
ja
movs
cmps
shl
add
aaa
inc
xor
in
dec
ret
nop
sub
fwait
jmp
and
adc
pushf
push
fmul
push
aad
dec
popa
(bad)
ror
push
mul
fcom
add
or
jne
mov
add
and
outs
in
add
sbb
sbb
pop
jecxz
idiv
push
mov
ret
loopne
aas
data16
push
dec
mov
mov
pushf
push
sahf
scas
cmc
inc
call
jp
mov
pop
inc
ret
scas
mov
xor
xor
jmp
ret
call
sahf
gs
aaa
inc
inc
or
pop
outs
aas
cld
and
mov
enter
call
mov
inc
push
aad
push
mov
inc
iret
lahf
pop
adc
mov
out
sub
pop
sbb
popa
cmp
rcl
mov
cmp
int
sub
shr
test
not
sbb
stc
lock
push
cmp
cmp
test
je
jns
dec
enter
add
imul
jle
test
xchg
cmp
(bad)
mov
inc
jecxz
or
xchg
mov
pop
js
or
aas
inc
push
retf
mov
in
mov
mov
or
or
test
test
sti
mov
cmp
push
sub
aad
fld
mov
jmp
inc
gs
push
sbb
pop
pop
mov
stc
frstor
and
iret
rol
sbb
sbb
pop
int
dec
add
les
lock
xor
fidiv
leave
or
inc
inc
pop
cmp
mov
sub
ret
sti
stc
jns
mov
fistp
jmp
mov
pushf
xlat
add
shl
sub
mov
mov
fbld
sti
jne
xlat
xlat
inc
adc
les
sub
mov
retf
xchg
jecxz
and
inc
jo
test
call
and
or
out
mov
adc
inc
and
cmp
movs
mov
mov
(bad)
jne
enter
test
aam
pop
inc
adc
push
mov
sbb
lock
or
mov
inc
add
mov
xchg
inc
mov
ror
mov
dec
push
add
cdq
add
out
and
xor
adc
lea
inc
inc
je
cmp
mov
scas
cmps
adc
mov
pop
inc
pop
aam
pop
(bad)
clc
stos
stos
xor
adc
cmc
fbld
mov
out
rcl
sti
cmps
adc
nop
sbb
or
lods
in
jmp
mov
xchg
xchg
ror
inc
mov
(bad)
int
aas
aam
test
ficomp
xchg
jl
shr
adc
cmp
shl
vpsraq
jmp
pop
cmp
aas
and
inc
addr16
xor
cmp
fwait
add
inc
daa
daa
add
mov
int3
lods
pop
add
and
adc
fstp
sbb
xor
hlt
inc
xor
std
cmp
repz
push
sbb
mov
mov
sub
gs
dec
pop
dec
add
cdq
int
les
sti
ja
pushf
xchg
jecxz
jbe
mul
adc
dec
hlt
sahf
mov
aas
js
icebp
and
dec
dec
call
jmp
sar
and
movs
fs
dec
(bad)
ror
and
loopne
clc
jle
ret
add
hlt
ss
pushf
pop
lods
mov
test
push
shr
and
je
cmp
push
sbb
aad
aas
test
xor
aam
sub
mov
bswap
cdq
pushf
push
jge
inc
jmp
(bad)
lahf
xlat
in
jbe
mov
rol
dec
cmp
and
fldlg2
sbb
shl
push
mov
cmp
mov
push
or
adc
outs
xor
dec
cmps
and
stos
mul
hlt
call
pop
sub
inc
mov
pop
jmp
xchg
daa
mov
cli
jecxz
push
inc
mov
sbb
xor
lahf
dec
mov
outs
cmp
fs
push
dec
movs
data16
xchg
xchg
pop
retf
push
adc
fdiv
retf
xor
cld
pushf
stos
or
popw
fmul
in
add
(bad)
jp
aad
es
add
jns
mov
aas
in
movs
scas
cmp
mov
push
xchg
xlat
inc
les
or
call
ss
xor
mov
fisttp
ret
es
fwait
xchg
nop
push
xor
pushf
adc
ret
push
pop
hlt
icebp
(bad)
mov
mov
and
ret
repnz
scas
mov
inc
adc
push
mov
add
pop
rcr
and
lods
rol
mov
repz
mov
push
pop
aam
call
mov
push
ret
ret
loope
lea
sbb
mov
fisubr
es
fisttp
das
dec
inc
and
mov
xchg
or
cwde
sti
call
lahf
lahf
(bad)
push
pop
or
add
sub
fsub
xchg
cli
lods
(bad)
mov
inc
push
push
or
xlat
fisub
pop
sbb
jecxz
sbb
ret
ss
mov
loop
mov
pop
in
icebp
shr
xchg
xor
lock
push
ret
jnp
dec
into
shr
add
sub
sahf
mov
push
fld
mov
pop
neg
pushf
dec
test
pop
cmp
bound
mov
dec
enter
mov
and
mov
sbb
bound
jae
xor
and
adc
lock
add
ret
arpl
mov
mov
fisttp
mov
aad
or
in
mov
cmp
inc
rcr
(bad)
mov
mov
sub
hlt
mov
ja
mov
mov
aad
icebp
pop
or
lods
cld
pushf
sti
pop
pop
sti
push
pop
shl
xor
sub
inc
arpl
adc
mov
rcl
jecxz
xor
mov
or
xchg
and
mov
cmps
out
mov
sbb
cld
pop
daa
stc
push
jl
outs
push
xor
jb
add
pop
lods
repnz
sti
addr16
mov
jo
loopne
clc
idiv
stc
mov
xchg
push
xchg
jne
jg
shl
xor
loop
sub
rcl
push
cdq
sub
cmp
sar
call
push
add
not
aas
pusha
sub
xchg
push
jne
movs
sahf
mov
lods
and
pushf
shr
or
jb
not
cmp
jecxz
test
pop
mov
sub
sub
and
lea
mov
ficomp
ret
xor
mov
js
mov
sub
jmp
inc
jle
jg
es
sti
dec
pop
ret
mov
pop
cmp
inc
inc
jno
add
push
mov
and
movs
xor
inc
sar
ins
and
mov
cwde
daa
gs
jno
adc
mov
lods
popa
arpl
add
xchg
fwait
push
mov
xchg
fisubr
jp
mov
shr
movs
or
push
rcl
dec
sbb
rcr
(bad)
enter
inc
scas
inc
nop
cmp
ret
xchg
stos
sti
cmp
loope
adc
sub
daa
pop
or
xchg
data16
xor
outs
stos
aas
add
pop
jo
add
push
add
dec
into
or
push
add
pop
jno
cdq
movs
ret
xchg
and
inc
loop
jle
cs
stos
ret
mov
dec
pop
mov
cmp
pop
ret
sar
ja
mov
stos
(bad)
das
or
pop
lods
into
fcmovnbe
xor
out
neg
addr16
rcl
jmp
scas
cwde
add
inc
data16
sub
rcl
lahf
pop
retf
out
ret
call
push
inc
imul
aad
pusha
fldcw
cmp
jge
push
retf
dec
sar
ds
fisub
rcr
outs
inc
mov
push
dec
add
dec
mov
mov
ret
or
test
cmp
sub
xor
push
xlat
pusha
loopne
(bad)
sub
xchg
data16
mov
fdiv
test
mov
add
gs
aam
push
aam
std
lods
fs
aam
jecxz
fisub
jge
inc
sbb
add
popf
inc
sbb
sub
jbe
xor
repnz
pop
dec
ret
mov
dec
ss
jmp
sub
es
inc
push
xchg
loope
mov
add
or
out
pop
aam
jb
mov
je
mov
xchg
adc
mov
push
cmp
pop
cmp
ret
pop
xor
mov
inc
out
and
es
lods
jmp
mov
retf
out
(bad)
ret
pop
add
jmp
sub
outs
mov
fdiv
and
popf
ror
lock
out
dec
sub
push
loopne
out
adc
pop
mov
sbb
sahf
sti
dec
mov
cmp
mov
outs
rol
xchg
div
sub
iret
push
xchg
(bad)
fiadd
jp
push
xchg
iret
xadd
movs
push
(bad)
mov
sti
mov
push
adc
ret
clc
and
mov
in
(bad)
pushf
fucom
ins
dec
sub
int
aam
and
fucomip
push
inc
adc
out
jbe
in
clc
mov
xchg
dec
dec
dec
sahf
pushf
icebp
shr
mov
add
mov
ret
cmps
mov
out
ret
nop
cmp
mov
cmps
cmp
repnz
addr16
jecxz
mov
std
and
sub
pusha
jp
(bad)
mov
mul
push
dec
pusha
mov
pop
(bad)
jbe
fneni(8087
mov
ret
(bad)
scas
lds
push
or
jle
cld
test
retf
adc
inc
inc
push
das
stos
daa
mov
popf
jnp
sbb
ret
adc
dec
inc
scas
push
jo
or
popf
jge
sub
cli
dec
rcr
outs
pop
loope
ret
in
lock
push
push
cli
sbb
(bad)
aaa
arpl
mov
and
xchg
out
pop
popf
fisttp
mov
rcl
test
xchg
add
pop
ficom
les
mov
jle
popa
pushf
mov
xchg
(bad)
rcl
(bad)
std
xor
jne
scas
push
or
and
and
out
cli
inc
cli
inc
xchg
cld
call
sbb
xor
gs
inc
push
fidivr
jns
dec
sub
mov
pusha
and
shr
push
hlt
sub
jmp
(bad)
lock
push
not
xchg
nop
rcl
mov
fcmovnb
test
sbb
inc
cmp
mov
enter
pushf
push
mov
sahf
mov
dec
and
push
or
retf
dec
inc
cmps
mov
test
jae
test
int
sbb
in
fs
sub
nop
jae
inc
and
(bad)
bound
out
mul
(bad)
add
ret
out
inc
add
out
pop
arpl
ret
jnp
push
xchg
sub
test
sbb
lahf
cmc
retf
dec
sub
jbe
std
jmp
stc
cmp
aas
cs
enter
pop
sub
ret
stc
or
mov
sbb
mov
jecxz
mov
in
repnz
mov
shrd
cdq
push
sub
in
push
and
aam
jnp
les
fs
int
push
(bad)
int
fistp
cld
(bad)
js
and
cld
dec
int
sbb
lock
sub
in
sbb
daa
or
lods
and
(bad)
out
ror
(bad)
adc
pop
jp
mov
cs
mov
scas
mov
inc
ret
movs
jae
sub
xor
and
ja
push
pop
aam
and
movs
and
dec
out
imul
scas
pop
inc
inc
sbb
add
loope
mov
fisub
cmp
mov
in
fsubr
shl
cmps
mov
(bad)
shr
stos
cs
push
xchg
pop
mov
jecxz
adc
jg
jo
fdiv
jae
or
mov
pusha
pop
push
ret
mov
scas
inc
jnp
sub
(bad)
test
jae
cmp
aam
jmp
push
movs
push
addr16
or
cmc
sub
test
xchg
inc
fldcw
fiadd
je
aam
push
xor
jae
aam
cmc
sahf
jl
test
iret
fwait
ret
mov
sti
aas
enter
scas
sti
mov
push
sbb
adc
or
aas
test
call
cmp
gs
cli
mov
sbb
mov
repz
scas
inc
into
aas
shr
xchg
mov
ja
(bad)
(bad)
or
cmp
into
imul
add
call
aam
sbb
or
out
cmp
pop
lods
mov
retf
aam
ins
gs
fmul
adc
jmp
mov
enter
gs
mov
bound
xchg
in
mov
push
dec
aad
movs
mov
lds
adc
push
xchg
cwde
cmp
jecxz
adc
inc
pop
mov
push
mov
cmp
adc
pop
push
xchg
xchg
(bad)
xor
aas
out
fwait
int3
pop
xchg
popa
shl
or
iret
cmp
fmul
cmp
sub
jns
(bad)
not
ror
lods
sbb
pop
cmps
mov
daa
sbb
pusha
dec
into
inc
test
rcr
(bad)
rol
mov
add
movs
fadd
adc
outs
push
jg
idiv
aas
push
cmp
mov
push
pop
cdq
add
and
sbb
cmp
sahf
mov
or
lods
mov
xor
div
mov
sbb
aam
fisttp
inc
adc
out
sbb
add
sub
js
outs
std
fld
inc
push
fwait
inc
pop
gs
adc
ret
push
xor
fist
xchg
pop
lahf
push
or
jmp
(bad)
pusha
add
push
xchg
(bad)
ja
adc
ja
daa
shl
mov
(bad)
arpl
leave
repnz
cmps
(bad)
rdtsc
test
pop
inc
mov
sub
mov
out
imul
mov
dec
jmp
loope
jb
aaa
mov
stos
inc
jmp
mov
stos
cmp
lods
push
jl
sbb
jb
fs
inc
dec
scas
and
addr16
out
call
sub
mov
jg
xchg
pushf
(bad)
lock
jno
add
mov
loopne
push
or
std
jnp
int
stc
enter
inc
dec
in
and
jbe
lahf
scas
movs
ficomp
dec
call
ror
scas
lods
add
xchg
retf
aam
jns
movs
or
mov
int3
pushf
cmps
fnsave
fsubr
loopne
retf
adc
ret
adc
loop
(bad)
popa
add
aam
cmp
dec
ret
xchg
out
popa
movs
(bad)
jmp
aam
sbb
sub
retf
iret
cmps
dec
dec
xor
ret
idiv
in
inc
outs
(bad)
rcr
(bad)
rol
mov
sahf
mov
sub
loop
(bad)
int3
mov
cs
lea
adc
sti
pop
mov
jp
and
add
ins
xor
inc
mov
popa
jns
movs
clc
shr
(bad)
inc
mov
dec
or
inc
inc
rcr
sbb
loopne
not
sub
and
jle
jbe
cmp
push
in
out
aam
ret
sbb
jl
pop
(bad)
mov
xor
out
mov
mov
cmp
dec
mov
cmovl
pop
push
jge
fisubr
mov
popf
or
loop
(bad)
jge
fucomp
arpl
cli
sar
jno
adc
adc
cli
cli
xchg
adc
sbb
sub
inc
arpl
fs
and
outs
and
and
mov
xor
nop
cli
dec
bound
pop
xlat
mov
cmps
or
sbb
push
lods
enter
dec
loope
aaa
retf
pop
test
mov
pop
bound
inc
or
dec
mov
hlt
jns
inc
out
inc
mov
push
xchg
(bad)
mov
and
out
out
jbe
push
pop
add
(bad)
jmp
ins
xor
je
lea
jp
xchg
push
add
mov
jecxz
xor
mov
pop
daa
cmp
pushf
pushf
cmp
pop
mov
repnz
xor
adc
out
popf
add
lea
test
or
pop
adc
dec
pusha
pop
mov
lock
pushf
pop
xor
data16
pushf
jo
jecxz
loop
sub
shl
lods
rol
popf
xchg
das
pop
fsubr
mov
outs
aad
shl
ret
dec
mov
sub
repnz
sbb
sbb
call
mov
pusha
bound
dec
push
xchg
mov
ret
jg
mov
inc
sub
ret
mov
xor
enter
cmp
inc
add
rep
mov
or
(bad)
(bad)
jp
rol
jg
imul
or
mov
sub
dec
int3
sbb
push
mov
gs
ds
pop
add
aad
rol
mov
hlt
clc
stos
pusha
sub
cmp
icebp
jmp
xchg
mov
popa
mov
push
dec
xlat
xor
pushf
cmp
lods
pusha
bound
mov
movs
dec
cmp
mov
fsub
inc
and
lds
pushf
retf
mov
je
push
aam
mov
fmul
dec
mov
or
or
shr
lea
sahf
leave
aad
adc
cwde
push
retf
test
retf
inc
lods
or
pushf
mov
int3
dec
ins
cmps
xor
ss
stos
push
jmp
pushf
push
out
cmp
inc
retf
sbb
jge
aas
sub
sbb
lds
ret
fstp
inc
in
xchg
(bad)
in
sar
add
in
jne
mov
or
shl
loopne
pushf
shl
xor
clc
stos
ficomp
cmp
sahf
push
mov
add
loop
mov
(bad)
mov
adc
cs
nop
add
ret
(bad)
sti
adc
dec
mov
shr
add
inc
ret
outs
mov
pop
jl
inc
and
mov
popf
shl
jns
fwait
jnp
ror
inc
pop
ret
mov
xor
cld
and
jmp
mov
mov
sbb
xchg
adc
pushf
jmp
cmp
pop
in
ret
and
fs
pop
stos
rol
xchg
jns
(bad)
push
ret
and
pushf
stc
mov
add
push
(bad)
push
ret
xlat
xor
lahf
mov
add
jno
das
dec
jb
addr16
lds
xchg
popf
xchg
ins
sbb
(bad)
inc
push
out
aam
pop
jae
ret
stos
int
pop
(bad)
fcomp
scas
cmp
lods
gs
inc
mov
xor
pop
iret
mov
mov
sub
ins
js
test
aad
inc
mov
or
into
adc
loop
fisttp
sbb
fs
cmps
push
mov
loope
or
pusha
mov
and
push
pop
shr
(bad)
cmp
or
jmp
lods
lods
sub
xor
call
jmp
cmp
sub
rcl
fwait
mov
cld
hlt
icebp
ins
int
ret
std
mov
inc
outs
fs
jbe
mov
xor
jle
push
call
xlat
fwait
sub
and
sar
cmc
pop
aas
push
pushf
(bad)
nop
xor
or
ins
push
aam
pop
cmp
mov
je
stos
aas
ins
or
mov
inc
xchg
xchg
les
mov
shl
sbb
inc
xchg
sub
mov
ss
inc
repnz
cmp
jg
cdq
sub
and
xchg
mov
inc
or
fcomp
cmps
pushf
push
or
dec
in
jbe
not
cmp
(bad)
jecxz
movs
inc
ret
(bad)
fbld
repnz
and
cs
retf
(bad)
in
outs
xor
loop
icebp
(bad)
pop
xchg
aam
sbb
cmp
xor
call
cdq
ss
repz
jle
(bad)
iret
mov
fld
sub
push
jmp
es
int3
mov
mov
sti
jo
movs
xor
hlt
cli
sbb
dec
(bad)
jne
nop
cmc
stc
mov
mov
aam
stos
fs
push
sub
dec
repz
ins
adc
aas
sbb
push
jmp
jnp
add
aam
ret
sub
rcr
lea
add
cmp
cmp
sub
inc
mov
retf
popf
sahf
jmp
add
fsub
add
retf
sub
push
cmps
mov
adc
and
fs
inc
jb
fld
sub
mov
push
sub
aam
xlat
fistp
pop
fmul
ret
jg
mov
call
sub
xor
popa
ret
add
xchg
push
ja
jl
xchg
(bad)
bound
xor
das
popf
clc
shl
inc
dec
js
rcl
cmp
or
ret
test
in
pop
fwait
add
test
ret
in
cld
(bad)
shl
mov
fisttp
inc
jmp
rol
test
xor
dec
dec
ret
or
ret
(bad)
ss
push
imul
sar
popf
mov
dec
xchg
cmp
inc
in
push
(bad)
pop
nop
adc
pushf
data16
adc
es
scas
or
mov
aad
fs
jmp
mov
pop
(bad)
push
adc
sub
xlat
addr16
int
inc
mov
aas
leave
pushf
es
ret
leave
add
dec
ror
int3
mov
mov
mov
stos
rol
inc
rcr
inc
mov
fisttp
in
(bad)
cli
popa
rcr
arpl
aas
popa
push
outs
jp
repnz
push
test
ret
xchg
aam
mov
inc
sbb
mov
push
dec
leave
cmps
mov
(bad)
lock
shr
dec
jnp
jp
mov
cmp
iret
scas
movs
sbb
inc
inc
push
xor
or
pop
dec
not
sar
into
cmp
in
ins
pushf
and
pop
cmp
shl
pop
inc
ret
test
(bad)
xor
add
mov
mov
pop
call
sar
lods
xchg
jo
sbb
jp
xor
sar
xchg
call
push
jp
idiv
sbb
retf
jae
inc
stos
dec
in
xor
call
cmp
ror
jo
jg
push
pusha
cmc
inc
nop
and
sti
mov
pop
or
aam
xor
adc
pushf
mov
fstp
sbb
ins
std
pushf
out
hlt
jp
mov
cmp
inc
jle
rcl
out
mov
pop
xor
aad
push
jo
add
pushf
test
rcr
(bad)
mov
call
int
xchg
ret
mov
xchg
push
push
pushf
adc
push
push
inc
daa
xchg
arpl
inc
sahf
and
cmp
in
or
rcr
daa
retf
push
or
push
fwait
cld
clc
fild
fdiv
aad
lahf
inc
inc
loop
push
fldcw
and
mov
adc
sbb
cmp
cmp
push
jecxz
push
jg
cdq
pushf
dec
push
jo
fcomp
rcl
(bad)
repnz
push
iret
lahf
ins
cmp
neg
xor
mov
icebp
adc
mov
xchg
adc
mov
adc
aam
mov
push
cmp
imul
imul
adc
jmp
stos
pop
sub
dec
cmp
xchg
inc
retf
jns
icebp
fcmovnbe
dec
cmc
sbb
ret
mov
stos
inc
test
sbb
cmp
mov
fstp
daa
std
xchg
repnz
call
(bad)
sar
aas
push
jo
lds
int
lods
sub
jl
inc
xchg
inc
mov
mov
inc
dec
xchg
ret
ja
movs
movs
pushf
cmp
push
inc
gs
ins
pop
fmul
jae
adc
xor
sar
push
mov
push
cmp
popf
loopne
pop
aaa
repz
inc
sti
leave
or
pop
loop
ror
(bad)
in
push
cmc
sbb
shl
inc
add
jnp
rol
aaa
popf
and
pop
mov
inc
jno
in
neg
mov
inc
xchg
sbb
push
out
outs
test
inc
fst
inc
pop
fsubr
sub
scas
je
lea
mov
dec
call
inc
add
mov
ret
jnp
ret
outs
sar
pop
iret
inc
ror
inc
cli
xlat
xbegin
mov
mov
mov
mov
jle
xchg
cmp
push
inc
xchg
lock
test
mov
cmp
xchg
jmp
inc
jns
imul
xchg
jle
pushf
cs
iret
shl
imul
adc
push
leave
ret
and
aaa
cmp
stc
sub
ss
and
out
pop
aas
xchg
or
aas
cmp
or
aad
inc
cmp
dec
idiv
dec
pop
ret
cmp
dec
repnz
aaa
xor
sbb
and
ins
mov
inc
or
mov
clc
pop
inc
rol
xor
fs
push
iret
out
shl
iret
dec
or
mov
retf
ret
jns
inc
add
jne
fwait
push
sahf
fs
mov
cli
jmp
sbb
sar
cmp
mov
enter
cld
sub
inc
mov
pop
nop
cmps
xchg
mov
popf
(bad)
in
jmp
dec
mov
movs
and
pop
jo
mov
repz
test
iret
cwde
cmp
adc
mov
jne
dec
jb
pop
add
push
(bad)
cwde
rol
rol
je
not
neg
jecxz
(bad)
jmp
push
cmc
ret
addr16
inc
outs
cmps
adc
sub
out
movs
out
mov
push
inc
jmp
clc
popf
inc
popf
cmp
push
std
call
jle
out
movs
iret
pop
mov
jb
in
sub
cmps
xor
aas
nop
mov
and
pushf
mov
fcom
cmp
imul
sbb
push
jno
outs
pop
adc
bnd
(bad)
in
sub
popf
mov
fdiv
scas
mov
inc
mov
or
jmp
mov
fimul
mov
lods
(bad)
xchg
pushf
cmp
shr
js
sti
xor
and
mov
aas
pop
ret
ss
movs
sbb
fidivr
add
mov
ds
jmp
stc
sar
(bad)
fstp
outs
xlat
dec
ret
je
xchg
test
inc
and
mov
and
out
js
out
mov
aam
dec
enter
xchg
mov
movd
cmp
push
dec
add
mov
call
push
push
lock
pushf
cdq
std
cmp
xlat
mov
jmp
ins
mul
jecxz
inc
jmp
cmp
fidiv
inc
mov
dec
ret
jno
js
stos
mov
cmp
jl
jb
xchg
mov
mov
es
lods
dec
call
out
scas
in
leave
pushf
cmovb
xor
cmps
add
xor
out
fadd
pop
out
aas
sbb
xor
aaa
das
popf
mov
add
repnz
leave
push
push
(bad)
fistp
push
sbb
inc
in
fild
pop
and
leave
lods
call
add
sub
and
add
push
jo
jg
sar
shr
ds
fs
push
mov
sbb
aam
aaa
push
sbb
sub
mov
push
arpl
js
ret
daa
sar
lahf
dec
data16
push
hlt
cmp
rcr
ss
pushf
and
iret
pop
aam
push
(bad)
pop
jge
mov
pop
rol
push
mov
xor
scas
fistp
cs
cld
mov
mov
inc
imul
push
movs
out
sub
push
mov
movs
shl
fld
or
xchg
add
inc
or
aaa
inc
ja
xchg
pop
popf
pop
dec
xchg
out
retf
mov
rcl
(bad)
or
rcr
shl
clc
sub
mov
iret
mov
ins
shl
pusha
push
jecxz
inc
pop
inc
cld
call
xchg
adc
lahf
in
shl
movs
movs
out
push
les
loope
aam
push
ror
stos
addr16
outs
fiadd
retf
sub
popf
push
iret
fdiv
rcl
loopne
jmp
sub
inc
ret
ficom
(bad)
jmp
mov
mov
sub
out
mov
in
xor
shl
leave
aad
xor
add
movs
aas
popa
dec
jp
test
mov
test
jle
imul
ret
sub
inc
stos
pop
out
pushf
or
mov
(bad)
push
ds
scas
int
jo
pop
xchg
inc
mov
adc
out
popa
rol
jb
enter
rep
mov
pop
std
xor
inc
push
add
cmp
loop
nop
mov
ret
call
ret
inc
cwde
sbb
cmp
ins
sub
std
or
jb
cmp
inc
dec
ja
popa
mov
pusha
pop
inc
jmp
fnsave
sbb
loope
test
adc
neg
test
xchg
push
inc
(bad)
arpl
inc
cmps
das
std
jecxz
into
shl
outs
fwait
mov
test
and
dec
pop
mov
xchg
js
xchg
jmp
clc
push
jg
mov
aad
cmps
cmp
arpl
inc
mov
mov
cpuid
mov
ja
cwde
retf
pop
test
lahf
loope
cmps
fdiv
fldenv
fwait
leave
ret
adc
adc
push
in
dec
and
cmps
mov
pushf
popf
xor
sbb
addr16
es
aas
or
je
xchg
cs
pushf
sub
pusha
dec
scas
push
cmp
mov
data16
ret
ret
or
push
inc
jns
inc
sti
cmp
dec
popf
mov
(bad)
retf
inc
push
add
fwait
xchg
(bad)
in
loop
push
dec
adc
mov
fst
shl
xchg
fcomip
push
jl
inc
add
sbb
jge
fidiv
popf
mov
dec
and
xlat
pusha
in
or
dec
ret
or
rol
mov
ja
mov
(bad)
in
pop
test
aas
cmp
ins
sub
ret
jl
or
adc
adc
(bad)
popf
xchg
nop
lods
cld
sub
adc
mov
mov
adc
pushf
jp
(bad)
mov
enter
in
iret
pop
or
(bad)
push
repnz
cmps
sub
dec
or
mov
jmp
add
push
ret
inc
and
retf
fs
addr16
push
(bad)
(bad)
fcomp
mov
pop
add
sbb
fisttp
push
mov
inc
mov
loope
cmps
jp
mov
popf
push
or
aad
xor
fisttp
pushf
xchg
scas
ins
sti
rol
neg
stc
in
test
aaa
mov
fld
aam
ror
neg
ret
(bad)
(bad)
out
push
and
mov
cmp
or
pushf
lock
push
sbb
pop
in
ret
data16
xlat
push
popa
movs
mov
test
push
mov
add
int
xchg
mov
and
inc
xchg
rol
and
pop
ret
es
xchg
rcr
xor
cmp
movs
ds
sar
cmp
or
add
ss
aam
cmp
enter
sbb
mov
mov
es
mov
inc
popf
imul
(bad)
mov
sbb
adc
outs
jae
mov
adc
lock
sub
xchg
call
in
loopne
cmps
sub
lahf
pop
sti
pop
popa
pushf
hlt
hlt
imul
cmp
jae
int3
dec
mov
in
ret
add
jp
inc
pop
xchg
push
retfw
in
sub
ja
js
mov
adc
(bad)
pop
pop
mov
enter
mov
retf
sbb
movs
xor
sub
cmp
or
daa
lods
mov
lea
and
movs
cld
fistp
adc
adc
jo
ret
and
inc
inc
call
popf
cmp
dec
(bad)
jbe
pop
and
aad
dec
dec
inc
retf
pop
dec
mov
sar
xor
aas
mov
mov
push
in
fs
ror
sub
not
push
aam
pop
mov
pop
and
lods
cmp
out
mov
xlat
cdq
lods
rol
sub
icebp
sbb
sbb
jg
jbe
jge
cli
retf
jo
cdq
inc
push
jno
push
call
xchg
mov
sbb
sar
movs
xlat
push
pushf
add
push
scas
test
mov
cwde
mov
jo
inc
jns
xchg
xchg
or
and
cmp
cdq
dec
and
add
idiv
mov
ds
ss
inc
in
ret
dec
mov
push
iret
ror
dec
aad
outs
push
ret
fs
inc
inc
inc
cmp
pop
or
ret
cmps
inc
(bad)
jp
pop
bound
hlt
or
outs
xchg
adc
inc
push
and
xchg
outs
shl
mov
jmp
popf
jno
stc
dec
lock
and
retf
lods
jecxz
rol
push
scas
push
fcmovnb
retf
sbb
cld
push
inc
add
dec
les
sub
addps
aad
pop
das
push
inc
mov
dec
xchg
pop
push
adc
repnz
inc
lea
or
adc
cmp
push
bnd
jg
pop
in
(bad)
jae
aam
xchg
(bad)
aad
jo
pop
inc
leave
cmp
cmps
(bad)
push
mov
mov
out
fwait
dec
pop
jmp
inc
xlat
(bad)
pop
scas
push
push
add
mov
mov
pushf
fcom
jmp
push
sub
xor
inc
adc
aam
in
shl
sbb
or
inc
sti
ret
cmp
push
jne
cmp
jge
mov
mov
and
je
jl
sbb
popa
xchg
sub
mov
(bad)
ds
add
shl
cmps
neg
dec
push
xor
pushf
xchg
push
fidivr
idiv
fst
pushf
inc
pop
out
mov
adc
pushf
daa
fidivr
fwait
jo
lods
rol
or
jo
mov
push
popf
push
and
scas
mov
aas
inc
in
pop
ja
pop
(bad)
adc
jl
rol
bound
and
mov
ret
xor
aas
out
call
outs
das
or
mov
mov
jp
fistp
cs
loop
aas
movs
jnp
outs
leave
push
or
sti
add
dec
lods
push
repz
cli
shr
mov
stos
loopne
outs
jbe
addr16
push
or
les
aas
cmps
xor
adc
cmp
sbb
push
inc
call
jmp
pop
lock
jbe
pop
inc
icebp
das
jle
les
or
popf
sti
xchg
cwde
mov
pop
outs
in
outs
cmp
and
lock
push
add
xchg
or
ds
jmp
(bad)
add
mov
inc
das
cmps
scas
fs
stos
adc
cmc
ret
jmp
repnz
inc
add
adc
dec
scas
aaa
popf
sbb
cmp
mov
js
loopne
or
push
test
xchg
fwait
scas
into
pushf
xor
les
out
cmp
push
sub
cmp
jno
sbb
cmp
rol
cmp
jecxz
repnz
ret
or
pop
xchg
sbb
xchg
ror
out
ds
fstp
cmps
(bad)
(bad)
clc
ds
pusha
cld
inc
stos
xor
mov
fwait
xchg
push
in
cs
inc
xchg
movs
xor
add
or
outs
cwde
sets
pop
mov
addr16
jl
mov
test
faddp
jmp
inc
add
pop
loopne
fwait
add
or
in
test
xor
dec
aam
iret
adc
and
sub
imul
xor
aas
or
fiadd
jge
repz
imul
pop
adc
dec
(bad)
jnp
inc
outs
repnz
arpl
test
sar
popf
lods
inc
push
outs
mov
xchg
push
add
cmps
(bad)
cmp
xor
and
cmp
jae
adc
jecxz
fistp
xor
pop
in
data16
jae
aas
push
repz
cmp
or
call
out
xor
idiv
cmp
cwde
push
add
xchg
int
int3
movs
lea
call
xchg
stc
xchg
(bad)
cld
les
std
sbb
arpl
push
fisub
xchg
add
xor
cmp
retf
adc
ret
xor
inc
mov
mov
dec
mov
mov
mov
ins
add
pminsw
inc
nop
(bad)
das
stos
test
lahf
retf
mov
pop
fcmovnb
jns
add
fidivr
in
loop
mov
mov
call
dec
inc
lds
mov
mov
ss
push
ds
xchg
out
mov
cmp
retf
xor
loopne
jnp
rcl
fcomi
outs
shl
inc
div
adc
in
and
xchg
mov
pcmpeqd
sahf
sbb
(bad)
pop
cmp
mov
repnz
xchg
lock
into
sbb
mov
mov
rcl
call
mov
repnz
sbb
mov
fiadd
lods
fcmovbe
push
outs
jne
xchg
inc
scas
inc
add
push
inc
stos
and
inc
cmp
int
inc
popf
pop
ja
adc
inc
iret
hlt
pop
rcr
fsub
sahf
and
and
sahf
je
es
push
inc
push
(bad)
in
lds
mov
pop
lods
sub
mov
xchg
inc
cmp
dec
push
test
or
jge
mov
xlat
ror
push
push
push
or
push
pop
add
rcl
dec
in
push
(bad)
mov
daa
test
inc
mov
test
xor
(bad)
dec
xor
jmp
movs
ret
mov
leave
dec
cmp
inc
adc
lods
(bad)
jmp
jmp
arpl
dec
wrmsr
xor
loopne
das
rol
ret
cdq
sub
inc
or
aas
pop
fs
xchg
fs
inc
lea
fs
js
sbb
mov
jo
lahf
icebp
or
cwde
clc
js
inc
sub
or
hlt
rcr
mov
sub
mov
xlat
into
idiv
lock
xor
adc
lods
jmp
push
xor
ds
add
cmc
ret
in
sbb
pop
pop
push
inc
cmps
(bad)
mov
ss
and
cmp
push
loop
xchg
std
bound
ret
out
push
sahf
leave
push
inc
mov
and
dec
imul
xchg
pop
stc
(bad)
(bad)
cld
(bad)
aam
ins
fst
ds
push
or
mov
mov
pusha
in
push
sub
push
fdiv
int
stc
push
sahf
or
adc
pop
test
call
mov
mov
outs
or
pushf
jb
inc
jnp
(bad)
and
mov
cmp
mov
fbld
mov
call
inc
cmc
stos
inc
push
xor
dec
cli
into
(bad)
xchg
fcmovnb
outs
inc
push
mov
pop
pushf
xor
ss
mov
or
sub
pushf
xlat
div
jns
xor
mov
inc
mov
adc
push
jbe
inc
or
ins
and
mov
add
in
push
js
or
sub
xor
out
mov
push
mov
xor
aam
ja
sbb
mov
push
sbb
call
inc
stos
ret
or
xchg
add
pop
ret
sar
inc
inc
pop
mov
outs
(bad)
pop
leave
stc
lock
jae
push
scas
xor
mov
mov
xor
sti
xchg
push
ret
adc
dec
push
jns
(bad)
rcl
add
dec
int
ss
fisttp
aam
je
fs
and
js
inc
and
sti
(bad)
shl
dec
push
or
xor
mov
pop
mov
iret
addr16
adc
inc
retf
or
mov
inc
lds
adc
mov
repz
jl
sub
fcmovne
int3
dec
std
dec
add
dec
inc
je
lahf
jle
out
push
pop
add
aas
push
and
stos
mov
ret
jecxz
mov
push
ja
aaa
and
popf
cmps
xchg
add
iret
in
and
pop
adc
inc
mov
mul
push
cli
jbe
cdq
adc
ret
jge
jae
cld
mov
push
jg
enter
and
and
mov
add
or
aad
add
cmp
mov
adc
stc
dec
push
jp
data16
xchg
push
cmp
mov
xchg
sub
push
(bad)
xchg
test
mov
sub
movs
ret
aam
jno
add
cmp
arpl
mov
cmp
pop
fnstenv
sbb
mov
es
js
in
inc
bound
mov
nop
rcr
sub
xchg
ret
sub
or
sbb
repnz
mov
int
push
call
jmp
aam
mov
jle
and
cmp
pop
je
push
adc
xor
dec
int
cmovo
arpl
(bad)
in
aaa
jl
mov
sub
shl
xchg
rol
out
leave
fs
loope
cmp
xchg
mov
rcl
mov
adc
test
out
sub
shr
push
cld
outs
add
mov
sbb
(bad)
inc
fadd
lods
jmp
out
adc
loope
in
ret
std
test
inc
xchg
ja
sbb
inc
shr
add
das
cmps
push
mov
or
in
inc
stos
pop
ins
ins
push
inc
repnz
add
sub
fnstenv
aam
mov
jp
mov
push
pushf
cli
fs
pop
das
mov
test
(bad)
jl
repnz
push
pop
shr
aas
stos
xor
test
cmp
(bad)
in
inc
mul
stc
je
sub
pusha
pop
retw
daa
ret
mov
out
mov
out
cmp
or
lds
and
das
shr
retf
mov
pop
call
add
xor
sub
dec
lahf
(bad)
mov
sbb
iret
inc
imul
pushf
repz
aad
pop
js
repz
xlat
cmp
je
cs
pushf
(bad)
pop
inc
mov
out
jns
push
aam
retf
adc
or
or
je
or
ret
mov
push
xchg
imul
dec
int
push
repz
aas
sbb
xor
mov
test
fidiv
aam
aas
and
push
push
adc
pop
(bad)
test
movs
dec
inc
dec
es
lods
stos
lahf
xchg
ins
xor
mov
xor
movs
mov
push
cmps
ret
(bad)
cwde
and
call
mov
pushf
inc
retf
jmp
push
rol
push
adc
jo
fstp
shl
scas
inc
mov
adc
imul
neg
test
cmps
inc
out
scas
add
pop
sti
out
imul
out
lods
lahf
shl
out
pop
pushf
sub
add
fidivr
lods
rol
push
and
ret
in
ja
lahf
repz
sbb
dec
test
bound
les
jl
call
gs
ror
les
lods
cmp
pushf
lds
pop
test
inc
jo
pop
fadd
mov
cmp
test
pop
scas
(bad)
icebp
cs
test
into
iret
jns
mov
repnz
push
sbb
xchg
jmp
lahf
ret
in
inc
dec
mov
ret
(bad)
sbb
pop
scas
dec
inc
movs
fiadd
aas
test
or
cmp
sbb
hlt
cmps
movs
neg
mov
pop
aad
ret
(bad)
in
test
sbb
add
int3
ret
xchg
cmp
ins
es
enter
adc
add
and
fcmovbe
cs
test
sti
loop
movs
lahf
sbb
inc
sar
call
sub
mov
rcl
mov
stos
adc
js
and
int3
les
imul
jmp
loop
mov
ret
fisubr
jmp
nop
add
(bad)
test
jmp
mov
xchg
clc
mov
inc
ins
push
sbb
jo
ret
mov
xchg
adc
inc
arpl
jl
addr16
ds
(bad)
ja
sbb
pop
aam
jg
pop
stos
push
ins
sbb
pop
out
mov
or
das
outs
outs
aaa
dec
fbstp
ret
dec
adc
inc
mov
jb
rcr
push
xchg
enter
mov
mov
inc
mov
pop
lods
addr16
mov
(bad)
shl
jns
test
add
ret
daa
test
loop
rol
stc
adc
push
lahf
ret
(bad)
cmp
xlat
cmp
stos
sub
dec
retf
je
pop
inc
es
mov
or
test
jmp
add
add
jae
call
mov
and
mov
ret
ds
js
jp
mov
adc
popf
mov
(bad)
jno
or
repnz
dec
jae
ja
jb
push
xlat
jo
sub
vmovq
hlt
stos
sbb
sar
pop
rcl
inc
int3
stc
xchg
adc
leave
rcr
or
enter
dec
test
cli
aaa
xchg
or
jb
es
es
jnp
sahf
xchg
dec
(bad)
pushf
fnstsw
jge
shl
scas
mov
and
in
jmp
and
je
je
(bad)
jge
dec
push
gs
and
pusha
and
aam
test
iret
arpl
or
scas
inc
jl
popf
add
mov
movs
call
inc
fnstenv
xchg
scas
into
cmps
adc
loope
dec
and
aad
imul
mov
mov
mov
inc
mov
xchg
inc
cmp
pushf
das
bound
or
into
ja
sub
loop
jg
pop
pushf
xlat
(bad)
push
fdiv
xchg
cs
sbb
pop
outs
or
iret
push
adc
std
movs
inc
inc
jne
call
shl
ret
and
mov
pushf
push
inc
inc
in
add
jmp
ret
(bad)
in
pop
or
add
mov
daa
cs
push
not
(bad)
loopne
fldenv
rcr
mov
fsubr
fcom
dec
adc
dec
sub
mov
sbb
adc
out
rcl
pop
dec
xlat
pop
and
ret
cmp
push
out
xor
sub
ret
xchg
mov
inc
mov
jle
stos
pslld
mov
ins
cmp
and
(bad)
sbb
adc
dec
add
add
not
aaa
add
cmp
ret
dec
cmps
test
add
jle
fbld
mov
add
sub
icebp
into
pop
dec
xchg
lahf
pushf
fistp
rcr
hlt
enter
xor
xchg
pop
in
dec
ret
xchg
inc
pop
cmps
(bad)
push
aam
pushf
fst
push
(bad)
cmps
xchg
aad
dec
das
ins
fld
jo
adc
lods
test
mov
jg
shl
lds
inc
ret
ror
shl
inc
dec
xor
jg
sbb
push
mov
in
xchg
xor
pop
push
js
cmp
js
in
aam
add
mov
ja
pusha
fcmovnbe
inc
xor
sbb
sub
and
mov
icebp
ret
mov
fsubp
sbb
pop
jbe
scas
ret
out
mov
xor
mov
mov
cmp
xor
cmp
jnp
sbb
pushfw
push
sbb
ds
es
sbb
ret
adc
fmulp
ret
(bad)
sti
xor
inc
std
push
cmp
repnz
mov
sub
mov
adc
aas
ret
ror
out
xchg
cmps
cmp
ret
cdq
sbb
jmp
cmp
adc
frstpm(287
outs
aam
or
pusha
mov
cmc
xor
cwde
es
sub
in
push
jae
ret
pop
js
cld
push
inc
div
stos
xchg
(bad)
sti
dec
ret
pushf
lods
iret
outs
jge
inc
sub
dec
in
mov
mov
(bad)
and
xchg
pop
cmc
out
out
aaa
add
xlat
mov
test
loope
xor
jae
fisttp
(bad)
aam
enter
adc
rcr
jne
dec
ret
inc
cmp
aad
ficom
ins
mov
xchg
ret
push
xor
jbe
inc
enter
mov
cmps
push
cmc
mov
pushf
aaa
loope
mov
mov
aad
inc
hlt
movs
mov
pushf
xchg
bound
bound
neg
inc
sub
clc
pop
xchg
loop
and
or
outs
and
push
rol
popf
sar
lods
sti
mov
add
jmp
pop
fist
mov
mov
or
sbb
lods
call
adc
and
add
ror
push
retf
pusha
ret
lahf
xchg
into
push
das
inc
jno
adc
and
pushf
lea
cmp
mov
in
in
pop
pop
(bad)
rcl
inc
lea
cmp
test
fs
hlt
jno
pop
sar
sub
hlt
dec
or
mov
adc
or
sbb
fdivr
mov
adc
xor
push
xlat
xchg
in
into
dec
inc
sbb
fcmovnu
jo
push
xor
or
(bad)
rdtsc
sbb
lahf
pushf
adc
call
jb
scas
jg
jb
mov
inc
das
push
and
pop
and
and
(bad)
int
or
lods
mov
add
ret
sub
inc
adc
mov
xlat
popf
cmp
inc
sub
xchg
push
sub
sar
sbb
mov
in
adc
inc
aam
shl
or
bound
cli
sti
cs
stc
adc
jmp
mov
cmps
sbb
nop
or
xlat
xor
pop
pop
push
inc
xchg
cmp
mov
leave
dec
stc
fwait
mov
mov
jnp
mov
add
dec
add
sbb
inc
(bad)
imul
or
out
retf
mov
inc
pop
fsubr
dec
in
cmc
sub
push
cmps
xor
fist
mov
sbb
or
xlat
xchg
xor
xlat
dec
inc
enter
rol
in
aas
mov
daa
cld
popf
add
(bad)
hlt
and
inc
push
ins
sub
test
pushf
sub
pop
and
mov
rcr
xchg
int
cmp
pushf
or
and
mov
add
push
xor
sbb
xor
xchg
cmps
pop
inc
dec
mov
lods
(bad)
(bad)
sti
ret
mov
cli
test
ja
jmp
sahf
popa
push
or
inc
ds
dec
or
in
std
pushf
into
push
xchg
mov
shl
int3
sub
or
pop
(bad)
jmp
xchg
inc
aam
mov
dec
dec
or
rcr
movs
fcom
mov
ins
jle
jle
inc
sbb
xchg
sbb
sbb
pop
push
xchg
sbb
inc
push
adc
into
push
xor
pop
daa
das
shl
sub
push
push
adc
stc
xchg
popa
inc
adc
lea
les
inc
adc
jp
and
sub
not
xchg
arpl
and
xchg
sahf
xchg
cdq
push
addr16
push
aaa
dec
popf
test
inc
lds
xor
or
pushf
fsubr
mov
shl
aad
jl
mov
adc
mov
inc
leave
or
cmp
and
xchg
lock
sub
or
push
dec
mov
pop
mov
sar
xchg
sti
arpl
jbe
aam
inc
aaa
jecxz
gs
add
add
fisubr
xchg
lock
inc
sub
aas
adc
inc
push
gs
inc
inc
hlt
cdq
cs
jb
mov
push
mov
aad
outs
pushf
push
pop
xor
test
xchg
cli
and
sbb
ja
sbb
cmp
cmp
xchg
jl
cmc
push
call
mov
adc
pop
adc
jns
cmp
push
jne
shl
or
jno
inc
sbb
adc
mov
add
xor
xor
pop
inc
std
pop
daa
jmp
mov
push
pmulhuw
loopne
psubusw
mov
adc
mov
data16
cli
daa
push
pushf
add
cli
mov
sbb
(bad)
xchg
jmp
sbb
shr
loope
ret
jg
mov
repnz
inc
mov
push
lds
jnp
sbb
pop
nop
mov
in
add
xor
xlat
pop
fs
outs
inc
call
fisttp
repnz
sbb
cmps
cmp
jle
ficom
ret
jns
pop
pop
aam
out
iret
in
call
push
gs
ret
mov
dec
popf
pop
xchg
xor
stos
push
lods
ret
out
pushf
mov
out
shl
pop
xchg
rol
ror
push
(bad)
push
(bad)
lods
xchg
inc
loop
pop
mov
je
(bad)
outs
pushf
lahf
and
pusha
xor
mov
movs
sbb
(bad)
leave
ret
cmp
sbb
daa
push
dec
dec
xlat
into
cmp
sub
push
ja
ret
and
add
out
cli
adc
mov
sbb
in
add
and
cmp
sbb
repnz
out
test
mov
mov
pop
jmp
push
cmp
and
mov
mov
fsubr
or
sbb
shr
les
jg
push
cmp
popa
rcr
mov
dec
add
sbb
pop
fcomp
pop
sub
dec
mov
aas
fnstcw
pop
popf
jnp
or
add
fstp
ror
pushf
cmps
xor
mov
sbb
mov
pushf
sub
dec
mov
ret
xchg
ins
in
pushf
inc
inc
sub
sahf
adc
popf
test
inc
mov
cmp
aam
sbb
sub
call
adc
sub
mov
cmp
popf
out
stos
jnp
jns
call
or
ret
and
outs
call
or
out
adc
inc
pop
pop
or
mov
outs
mov
cmp
mov
adc
fist
xor
ins
push
inc
mov
add
sbb
les
xor
mov
addr16
lahf
sub
pusha
add
mov
fwait
pop
mov
movntps
mov
imul
jno
ret
jle
mov
adc
in
sub
mov
in
movs
ror
test
leave
add
je
popf
mov
and
stos
int3
cmc
out
xchg
fwait
xchg
dec
cmp
gs
rcr
xor
rol
scas
aaa
fwait
and
xlat
xor
inc
sub
jno
sbb
aaa
mov
std
loope
in
int
repnz
adc
adc
jp
popf
mov
jle
inc
fimul
mov
pushf
sub
sti
movs
push
pop
pop
fwait
out
cwde
inc
ret
int
inc
sbb
imul
cmp
push
sub
jb
push
ret
push
popf
stos
in
mov
or
cmp
lock
sahf
outs
inc
(bad)
pop
dec
inc
jne
pushf
movs
sbb
ficomp
sbb
add
imul
fcmovb
mov
iret
cmp
clc
aas
and
mov
aam
lock
and
mov
aad
push
sub
ret
fiadd
pop
sub
inc
push
and
adc
ret
xor
pop
test
pop
mov
loop
loop
adc
push
imul
jle
pop
stos
xchg
ret
outs
xor
sbb
dec
inc
leave
cmps
fdivr
adc
cmp
icebp
imul
jg
addr16
jne
retf
popf
xor
xchg
add
ss
xchg
ror
(bad)
imul
adc
imul
inc
push
(bad)
and
and
daa
enter
loopne
movs
push
pop
push
ret
add
shrd
scas
outs
push
fnstsw
mov
adc
push
push
(bad)
cmp
and
aas
xor
dec
pop
add
add
fisubr
cli
mov
add
ret
or
pop
cmp
sbb
cs
in
loope
push
(bad)
push
ficomp
push
repz
sbb
ret
push
ds
xor
jns
jge
xchg
fs
imul
je
sbb
mov
dec
rcr
mov
xor
mov
test
sub
dec
inc
jle
or
push
or
pushf
jge
inc
les
mov
dec
push
cmp
and
or
call
clc
(bad)
bound
fadd
fcomp
ins
cli
pop
cmp
inc
inc
sti
repz
mov
pop
fbstp
retf
dec
daa
shl
shr
shl
ret
adc
idiv
test
stc
lds
ds
mov
jno
push
fist
dec
mov
aam
mov
daa
cs
popf
in
ret
xchg
lods
jg
enter
or
pop
cwde
xchg
sahf
ror
(bad)
and
inc
xchg
cmc
sub
and
xlat
out
pushf
test
ins
jno
aam
sti
mov
imul
push
or
sub
dec
sub
mov
das
xchg
pushf
cmp
pop
mov
mov
(bad)
and
xor
in
add
cmps
fidivr
sbb
out
in
jg
(bad)
in
xchg
pushf
cmp
adc
out
leave
(bad)
ins
aam
in
lods
loop
cmc
call
mov
and
push
mov
cdq
shl
aaa
cli
dec
sbb
dec
ret
int3
inc
mov
stc
popf
js
fiadd
je
add
dec
sbb
ret
jno
pushf
mov
fiadd
and
dec
inc
(bad)
pop
fwait
sub
push
int3
xchg
sub
adc
cmp
mov
push
mov
popf
jmp
xor
inc
cmp
mov
iret
cli
dec
sub
fabs
xchg
test
in
clc
or
mov
test
jecxz
retf
loopne
es
jg
and
mov
mov
ss
push
data16
sbb
xchg
cmp
mov
dec
lods
sub
mov
sbb
cmp
or
pushf
inc
mov
push
rcl
(bad)
or
dec
es
jo
jge
pop
add
push
pop
xchg
xchg
in
cmp
fisub
aad
ins
hlt
dec
push
rcr
and
xchg
int3
shl
push
push
shl
mov
inc
fcmovnb
sub
cmp
xlat
les
stc
mov
and
dec
pop
jno
leave
sar
pop
popf
jle
shr
sar
arpl
cs
pushf
ret
js
sbb
xor
sub
into
mov
ret
jns
fsub
in
push
ror
pop
cmps
fdivr
lock
xchg
inc
call
or
retf
ss
mov
(bad)
jmp
arpl
ret
loopne
jge
call
hlt
dec
movs
bound
pop
mov
add
sub
ret
and
icebp
cmp
inc
adc
sub
popf
jmp
fiadd
aam
sub
adc
dec
mov
fistp
les
stos
mov
sub
push
popf
hlt
push
leave
cli
scas
mov
cmp
loop
jne
lahf
cmps
lods
mov
inc
(bad)
and
bound
fldln2
cmp
or
xchg
add
sub
(bad)
fstp
pop
pop
xchg
in
mov
sar
outs
and
xchg
pushf
(bad)
and
mov
inc
xchg
int
mov
cmp
rcl
psubw
adc
jg
pop
cmp
aad
mov
pop
xchg
mov
mov
mov
mov
xchg
or
inc
repz
gs
add
popa
pop
outs
pop
std
popf
mov
loopne
cmp
or
cmps
or
xchg
mov
sub
mov
test
into
push
sub
int3
mov
sar
pop
inc
ja
xor
sbb
enter
or
xor
dec
ret
call
adc
imul
js
sbb
mov
or
cmps
les
(bad)
sub
js
ret
pop
jmp
dec
sbb
leave
shr
int3
test
jo
ror
add
xlat
jno
jmp
std
pop
out
mov
or
out
and
ret
push
push
lea
sbb
rcl
jbe
sub
xchg
sbb
jle
sub
mov
sbb
sbb
shl
rcl
cmp
xor
sbb
pop
mov
jns
scas
mov
xchg
adc
popf
xchg
pop
icebp
aas
sub
mov
daa
adc
mov
lods
mov
lods
shl
pusha
pop
into
ret
xor
jmp
cmp
sahf
xor
adc
out
mov
push
inc
enter
test
clc
jle
ins
data16
aam
jbe
jnp
inc
dec
sub
mov
ret
ret
push
test
dec
xor
cmps
sub
das
jle
xchg
out
sbb
mov
jno
xchg
jp
pushf
cwde
sbb
pop
push
fiadd
pop
popf
xor
add
ret
sahf
fwait
mov
jp
inc
xchg
test
js
push
stos
xchg
pushf
std
mov
pop
aaa
inc
fwait
sbb
jne
pop
sbb
in
rcr
mov
pop
xor
pop
mov
inc
test
dec
popa
stos
pop
cmp
cmps
inc
fcomp
fsubr
cmps
aam
loopne
sbb
push
ds
push
lea
rcl
push
test
pushf
mov
mov
pop
mov
test
sbb
stos
cwde
adc
ror
xor
or
and
mov
movs
push
add
xchg
clc
cmp
pop
enter
inc
sbb
(bad)
repz
cmp
mov
jmp
icebp
pop
jo
sar
mov
xchg
popa
into
push
fadd
add
scas
test
cmp
mov
ret
std
add
pop
ret
ins
mov
ins
mov
jg
cli
push
mov
cmp
out
jno
xor
cmp
jge
mov
cmp
sub
ins
inc
ret
scas
and
nop
push
xor
loop
popa
leave
mov
sub
mov
call
inc
xor
or
mov
popf
pushf
sahf
jae
pop
xor
lods
pusha
leave
xor
xchg
push
mov
mov
mov
xchg
push
sbb
jp
adc
loop
mov
shl
aaa
in
adc
pop
inc
push
xlat
push
sub
pop
push
das
mul
push
(bad)
cld
add
jno
push
cmp
pop
pop
mov
sbb
mov
sti
and
pop
cmp
inc
daa
pop
fadd
jmp
add
pushf
push
popf
push
dec
cmp
sbb
inc
not
xor
ret
ins
(bad)
fs
pop
or
ret
or
sub
or
and
dec
mov
sbb
lods
into
dec
leave
inc
loope
xchg
lods
jecxz
out
mov
xor
aam
mov
and
scas
mov
dec
inc
jne
stc
(bad)
outs
sub
mov
xor
scas
push
push
cmp
jns
out
test
inc
lods
aad
mov
add
mov
or
fcmovne
inc
cld
fs
sub
pop
inc
push
cmp
ret
aam
mov
jae
mov
cwde
add
aas
ret
xor
cmps
pusha
sub
adc
shl
inc
scas
and
xor
push
(bad)
mov
repz
or
mov
or
inc
xor
shr
cmp
loopne
inc
ds
xchg
stc
xchg
pop
sub
or
push
in
mov
shl
inc
mov
mov
in
cmc
cmps
cmp
cdq
fild
inc
mov
sub
ds
pcmpeqd
and
std
jmp
pop
sar
inc
pop
ret
push
icebp
leavew
mov
adc
iret
sbb
inc
xlat
jno
cs
sbb
xchg
dec
adc
inc
loope
cwde
test
pushf
jns
inc
mov
mov
ds
inc
fisub
dec
ins
ret
mov
sbb
addr16
repz
and
and
aas
into
pushf
and
push
loop
aam
fs
inc
fidivr
out
pop
xchg
jae
xchg
jo
sti
test
xchg
dec
mov
icebp
lea
mov
xor
sahf
sbb
repnz
mov
push
imul
shl
sahf
xchg
push
dec
in
push
add
or
cmc
lock
or
cwde
sbb
popf
pop
xlat
stc
jbe
dec
pop
ja
lds
clc
retf
popf
fcomip
scas
xor
imul
or
mov
mov
in
mov
inc
inc
mov
popf
ja
jae
mov
lds
sub
fnstsw
lods
mov
push
pop
fwait
iret
jg
cld
stos
rcr
and
data16
cmp
(bad)
aad
inc
inc
sub
loopne
xchg
ss
outs
leave
test
mov
mov
mov
in
inc
cs
in
test
inc
jp
std
stos
cmp
test
jp
jne
and
shl
push
(bad)
push
xchg
xchg
sbb
jle
int
inc
mov
pop
shl
ins
shr
pop
or
in
sub
mov
je
xchg
add
mov
out
ret
sbb
paddusb
mov
dec
ja
nop
out
ret
inc
push
pop
call
das
push
add
pop
pop
int3
out
mov
inc
test
mov
neg
sub
push
cmp
clc
(bad)
jmp
sub
dec
push
push
daa
in
mov
and
dec
ds
mov
add
ror
sub
sub
shr
sbb
fsub
repz
leave
and
or
retf
mov
pop
mov
pop
xchg
sub
in
lock
ins
pop
adc
aam
sar
ds
sub
leave
and
data16
xor
dec
bound
inc
and
ds
loopne
out
add
add
cmp
jae
mov
rol
inc
faddp
sub
gs
adc
dec
and
add
test
inc
mov
movs
pushf
jnp
add
sub
dec
mov
add
jb
sub
mov
outs
aam
pusha
das
or
adc
adc
jno
in
ds
jnp
adc
in
ror
sar
and
out
icebp
or
xchg
or
jmp
sar
(bad)
push
ror
adc
loope
xchg
pushf
rcr
enter
clc
ror
jno
push
lods
lahf
cmp
and
outs
fidivr
int3
jnp
rcl
les
ret
xor
repz
imul
inc
dec
cmps
test
arpl
cdq
mov
jmp
xor
xor
mov
jmp
adc
enter
pop
xchg
sub
ret
xchg
std
int3
cmp
in
ret
sub
add
fs
sar
popa
lods
xchg
or
test
jp
push
arpl
jmp
inc
cwde
fs
dec
inc
pushf
cmp
aam
mov
dec
aam
es
out
or
aam
shr
test
outs
pop
aam
sahf
xor
and
rol
jbe
outs
sahf
push
fdivrp
das
and
cmps
push
pop
in
cmp
mov
xchg
in
es
shl
sar
call
jg
dec
aam
popa
push
(bad)
aad
push
pop
cmps
cli
push
dec
or
push
cmp
sbb
shr
js
pop
mov
test
stos
sar
inc
sub
dec
dec
adc
jmp
gs
pushf
pusha
sub
mov
aad
cmp
and
add
ret
in
out
enter
inc
rcr
gs
fcmovne
mov
add
out
icebp
add
imul
into
cdq
movs
push
xlat
rcl
sub
(bad)
and
stc
retf
scas
mov
inc
test
cwde
imul
ret
dec
pop
pop
movsx
jb
sar
adc
sti
cmps
inc
sbb
stc
jge
pushf
mov
or
out
jge
out
jb
pushf
leave
inc
mov
out
mov
inc
aam
call
sbb
test
xlat
test
jne
add
ins
push
pop
call
js
fcmovnu
add
dec
mov
mov
cmp
push
(bad)
and
iret
cmp
jge
cmp
(bad)
loopne
dec
lea
dec
in
cmp
repnz
out
lahf
xchg
jmp
pop
sti
add
push
(bad)
mov
lahf
sbb
adc
lahf
dec
fisub
mov
sbb
sub
fwait
inc
pop
hlt
out
inc
mov
scas
xor
imul
in
mov
aaa
xchg
xchg
adc
pop
ins
popf
mov
xchg
mov
aas
out
imul
dec
cwde
cmp
jmp
fs
pop
inc
dec
cwde
cs
xchg
shr
ret
adc
and
loop
inc
mov
int
pushf
cmp
inc
lahf
mov
aad
mov
xor
dec
pop
push
call
std
mov
bound
cmp
jnp
dec
mov
dec
sub
leave
ret
pop
data16
ret
outs
inc
rcr
test
cmp
mov
jae
cmps
call
push
mov
fwait
loopne
jnp
adc
ins
fucomip
ins
scas
xchg
aam
inc
add
sar
cmp
sbb
cli
jge
mov
and
stos
cwde
add
test
mov
mov
or
mov
hlt
cmp
sub
popa
xchg
push
es
mov
mov
scas
jg
mov
jmp
fs
ins
scas
jmp
mov
sbb
cmps
icebp
aas
cdq
std
mov
xor
lahf
ret
xchg
push
pop
sbb
dec
push
add
out
fld
jecxz
in
fsub
inc
mov
fadd
adc
loopne
lea
jle
cs
or
imul
adc
fsub
mov
adc
jg
xchg
cmp
in
ret
pop
shr
or
ftst
jmp
ret
jg
push
mov
sub
imul
xor
icebp
push
nop
mov
(bad)
gs
lds
adc
jb
cmp
int3
test
mov
jae
jl
sub
cmp
push
xchg
aam
fild
cmp
js
cld
adc
cmp
jmp
fcmovbe
rcl
(bad)
cld
dec
and
jb
(bad)
ficomp
aad
mov
test
ret
push
push
aas
(bad)
push
and
or
adc
call
rcr
pop
mov
mov
push
inc
cmp
jmp
sbb
cld
ret
jno
jmp
rcr
aad
rep
xor
mov
and
mov
(bad)
sub
fmul
sbb
in
ss
fiadd
and
cwde
jmp
mov
hlt
add
aas
add
hlt
add
add
ds
shl
ret
mov
loope
out
dec
inc
add
or
adc
pop
jmp
mov
aas
or
inc
xor
ret
rol
or
jecxz
mov
pop
call
paddq
adc
pop
push
mov
ret
test
mov
pop
add
aad
les
xchg
mov
aas
jge
cmps
sub
in
mov
mov
int3
retf
pop
test
fadd
shl
mov
pop
and
mov
popf
ficom
arpl
aam
mov
cli
test
add
dec
xchg
data16
jp
idiv
ds
xor
and
pop
fiadd
loop
aam
test
mov
ret
imul
inc
xor
sbb
cmp
jae
in
popf
sbb
repnz
or
sbb
ror
fisttp
push
and
mov
cmp
shr
inc
mov
jmp
cmp
jp
imul
fdivr
jmp
xchg
(bad)
xor
rol
or
sbb
aam
out
add
repz
scas
aam
mov
int3
adc
daa
jle
rcr
pusha
add
aam
mov
xor
fdiv
jb
xor
adc
sub
aas
into
mov
add
inc
icebp
lock
push
xchg
les
stc
mov
in
cmps
lahf
cdq
ins
push
push
and
cli
adc
push
and
push
adc
mov
jb
cmc
jnp
mov
aam
stos
sti
ret
sbb
in
dec
ret
adc
cmps
call
and
pop
sbb
mov
mov
pop
popf
lahf
jae
dec
fsubp
inc
loopne
dec
lds
jnp
enter
aas
rol
jb
dec
fisub
arpl
mov
sub
pop
cmps
mov
xor
pop
dec
stos
retf
sub
je
xor
rcr
aam
je
test
aas
inc
bound
push
xchg
mov
inc
xor
or
(bad)
dec
ds
test
add
add
iret
pushf
ds
retf
push
cmp
aam
mov
add
fcmovu
sub
cmp
and
fcom
xor
mov
inc
jmp
pop
adc
adc
dec
jnp
imul
in
movs
sahf
sbb
inc
pop
xchg
push
sbb
inc
add
call
xchg
popf
mov
ss
imul
fwait
pusha
jnp
adc
adc
add
fs
ror
jmp
and
sahf
and
mov
jp
loopne
ja
add
mov
push
lahf
add
sbb
pop
aam
mov
or
xor
pushf
in
mov
inc
clc
scas
rcr
(bad)
not
xchg
jge
ins
jo
cmovo
mov
jp
pushf
(bad)
in
repz
jns
(bad)
push
add
sbb
pushf
xchg
mov
aam
cmp
(bad)
out
pop
fsub
ret
in
cs
jns
inc
xor
xchg
leave
int
jne
repz
(bad)
stos
std
adc
imul
ja
adc
mov
je
rol
aam
pusha
scas
retf
imul
test
mov
mov
mov
loopne
imul
dec
(bad)
cli
gs
push
mov
cdq
sub
adc
rol
jmp
aam
push
inc
xchg
inc
cs
mov
adc
cmps
xlat
neg
inc
push
mov
movs
cmp
xor
pushf
fcomi
jle
xchg
cmp
push
fstp
bound
(bad)
jae
loope
jl
aas
adc
pop
ds
mov
and
mov
mov
in
add
iret
mov
jle
sbb
mov
cs
test
or
jmp
sub
aam
pop
movs
jle
add
cmp
inc
in
stc
aam
mov
inc
pop
pushf
xor
mov
sub
stos
ret
dec
cmp
push
popa
fnstcw
jle
and
mov
aam
in
or
adc
test
ror
out
jnp
inc
cmp
aas
and
mov
jecxz
fwait
mov
dec
cmc
adc
add
out
mov
mov
xlat
stc
retf
cwde
sub
inc
retf
out
dec
jno
dec
sub
pushf
jne
pop
stc
(bad)
jbe
aam
mov
sbb
ret
ret
stos
aaa
push
or
add
mov
stos
and
popf
idiv
into
sti
call
scas
sbb
rol
cmp
in
(bad)
pushf
jmp
(bad)
ror
mov
imul
mov
mov
or
cdq
xchg
adc
loopne
sbb
push
jmp
mov
test
add
pushf
not
cdq
data16
pop
aam
iret
lea
fisttp
ret
(bad)
mov
cmp
pop
jnp
int
pusha
retw
sbb
mov
sub
inc
cmps
mov
pop
inc
adc
mov
enter
clc
ds
jmp
sti
fisttp
fld
xchg
sub
pusha
add
aam
mov
inc
or
sbb
scas
rcl
imul
adc
xor
daa
inc
mov
ss
std
aam
aad
and
adc
mov
call
(bad)
mov
ficomp
in
test
loopne
stos
adc
js
mov
mov
mov
mov
or
in
inc
cld
mov
aad
sbb
xchg
les
(bad)
mov
push
or
aam
scas
in
xor
and
pop
jb
mov
mov
push
jg
cwde
test
sar
pop
cmps
xadd
sub
pminub
into
xor
mov
sti
add
fistp
or
(bad)
and
(bad)
imul
and
sub
popa
pop
sbb
sub
(bad)
adc
jns
nop
daa
ds
stc
push
stc
mul
aaa
mov
fdiv
call
inc
bswap
fadd
jl
or
sub
jge
sub
and
aad
ret
cmp
ins
inc
je
lods
lock
push
lahf
loope
xor
daa
adc
inc
pop
mov
and
fwait
xor
jmp
xchg
inc
or
aam
xchg
push
shl
fadd
sbb
push
pop
and
pop
push
cmp
or
ds
ret
xlat
mov
scas
cdq
int
adc
xor
cmc
sub
shl
adc
test
nop
jbe
stos
cmp
xor
inc
jp
sub
mov
ret
inc
jae
pop
mov
xor
popa
sbb
pop
test
cmp
ret
in
adc
jle
inc
std
add
mov
xchg
push
xor
dec
cmp
rcl
std
hlt
repz
bound
jecxz
dec
aas
pushf
mov
leave
cmp
mov
rol
jb
add
or
dec
loop
test
push
push
and
dec
stos
sti
les
shl
push
arpl
and
sub
jb
mov
mov
stos
adc
mov
cmp
in
sbb
dec
fdivr
out
iret
mov
ret
pop
push
and
addr16
aam
nop
sti
(bad)
adc
jecxz
ret
mov
call
jecxz
push
test
pop
jle
retf
std
ins
test
out
add
inc
hlt
loopne
mov
(bad)
dec
cld
test
ret
cdq
ret
js
and
jecxz
sbb
stos
(bad)
mov
sar
std
inc
in
loop
inc
enter
push
push
and
cmps
imul
into
mov
xor
ret
pop
jl
mov
sub
(bad)
test
std
mov
je
bound
xor
fisubr
aas
out
loopne
(bad)
iret
fsub
xchg
xor
add
cmp
sti
pushf
enter
pop
(bad)
xchg
adc
sub
movs
jae
jmp
fiadd
pop
gs
inc
jo
(bad)
aad
cld
fwait
ss
sbb
fild
xor
test
data16
dec
mov
popaw
cmc
fstp
mov
cmp
mov
(bad)
mov
imul
(bad)
popa
mov
mov
inc
aam
cmp
leave
mov
out
ins
rcl
add
(bad)
loop
pushf
inc
out
xchg
loop
out
mov
gs
mov
sub
pop
ret
jmp
popa
xor
cdq
sbb
imul
cmc
jmp
xor
sbb
and
xlat
and
pushf
pop
cmp
jecxz
stos
les
mov
scas
sbb
in
es
vxorps
in
cmp
mov
int
imul
add
sbb
sbb
pop
int3
lock
shl
adc
ds
and
call
aas
cmp
mov
adc
cmp
xchg
cmp
push
sub
outs
inc
adc
push
lds
ins
fadd
cs
ret
aaa
jecxz
movs
leave
cmp
iret
ficom
pop
or
sub
pushf
mov
xchg
inc
jl
shl
repz
inc
xor
lds
out
xchg
xor
xchg
js
cld
jecxz
mov
adc
xor
xchg
xchg
pop
cdq
lods
mov
fmul
mov
in
pop
push
inc
out
mov
xchg
(bad)
xor
cmp
mov
cmp
pop
sub
mov
sbb
aam
pop
je
std
stos
pop
xor
and
inc
ret
leave
or
xor
loope
leave
out
cmp
repz
pushf
mov
push
stos
imul
xor
ins
xchg
cmp
rcl
and
adc
mov
mov
es
les
ficom
or
inc
mov
jne
xor
jae
inc
mov
or
ret
(bad)
pop
mov
or
push
inc
in
cmp
ds
mov
clc
je
fs
push
outs
and
xlat
mov
movs
cmp
jecxz
push
inc
ret
xchg
inc
std
mov
repz
cld
dec
sbb
push
inc
ret
es
fild
pop
repz
xor
popf
cmp
call
out
stos
adc
ret
sub
(bad)
push
into
jnp
pop
cmps
pop
not
xor
add
push
enter
scas
outs
sbb
call
shl
mov
sbb
mov
adc
jmp
xchg
sbb
mov
xor
xor
imul
mov
cwde
shl
jmp
inc
xor
pusha
shl
les
loop
popf
aad
cmp
arpl
mov
xchg
inc
pop
cdq
arpl
lea
inc
sbb
rol
ins
iret
push
ret
dec
ja
jae
test
jne
daa
or
ret
test
leave
jmp
in
or
pushf
sbb
push
mov
aam
mov
pushf
xor
pop
lods
stc
adc
stc
rol
mov
adc
fidivr
push
inc
in
dec
aad
jge
out
sar
shl
jl
repnz
aam
jg
pop
add
outs
jl
mov
xchg
gs
add
adc
mov
dec
in
fabs
mov
aam
sub
cld
test
cmps
pop
jmp
xchg
pushf
ds
add
sbb
pushf
mov
lods
lahf
pop
fadd
inc
aam
cmp
movs
sar
jno
(bad)
jecxz
adc
push
cmp
rcr
mov
pop
(bad)
pop
push
mov
or
add
nop
clc
outs
dec
ret
or
fld
cli
call
pusha
popa
push
test
lea
call
aam
stos
ucomiss
ja
loop
add
stos
mov
inc
pusha
mov
test
scas
adc
mov
je
xchg
inc
jo
inc
loope
pop
dec
lods
sub
push
xor
mov
fcmovb
adc
fwait
(bad)
cwde
mov
cmc
xchg
in
jb
add
pop
pop
cmp
and
data16
pushf
inc
fstp
inc
push
cmp
(bad)
aam
loop
fwait
call
push
sar
popa
jb
js
mov
shr
push
xchg
js
shl
push
das
fisttp
test
int3
xchg
push
mov
(bad)
and
or
lahf
inc
out
cmp
cmp
hlt
aas
out
pusha
ret
inc
add
cmps
ja
jo
(bad)
(bad)
and
bnd
scas
dec
aas
int
sahf
mov
fwait
sbb
rcl
adc
add
mov
add
and
ret
push
jb
fmul
(bad)
aas
out
sub
xchg
pop
daa
movs
pushf
fsubr
mov
sti
es
adc
adc
movs
jle
xchg
and
data16
popf
dec
mov
clc
out
shr
pop
and
ret
outs
or
out
aas
sahf
mov
sub
imul
dec
add
les
ret
mov
cmp
jno
pop
push
pop
inc
xchg
adc
std
mov
mov
dec
rol
push
xchg
cld
loopne
add
aad
out
aaa
ins
or
mov
ror
jo
les
test
mov
cwde
add
inc
adc
adc
retf
aad
clc
aas
jg
pop
jb
shr
mov
mov
cmps
int3
repnz
jp
dec
in
adc
ja
fs
popf
js
mov
cmp
jae
sub
sub
mov
ret
mov
cmp
ret
jo
das
jnp
mov
mov
aad
sub
mov
pop
or
fsubr
pushf
loope
test
mov
popf
cwde
clc
inc
pop
and
cli
lods
shl
arpl
and
inc
daa
int3
cmp
pop
xchg
mov
mov
fcomp
frstor
fstp
shr
sub
sahf
in
xor
aam
dec
nop
aad
sub
adc
setge
cmp
push
das
rcr
sub
cmc
inc
inc
ret
loope
ins
sbb
in
into
shl
cmps
(bad)
pop
outs
jl
or
popf
adc
leave
inc
mov
mov
jmp
xchg
pop
loopne
pop
clc
stos
jecxz
mov
or
test
mov
pop
inc
inc
retf
cmp
xor
mov
test
adc
adc
ret
xchg
jo
cmpxchg
cmp
mov
sub
in
scas
adc
mov
ret
cmp
pushf
sbb
shl
mov
xor
jmp
sub
call
mov
jbe
dec
pop
dec
repnz
ret
add
lods
cmp
repnz
add
lods
pushf
xchg
and
dec
aam
adc
ret
aas
jp
add
call
dec
adc
adc
(bad)
adc
dec
xlat
pop
dec
popf
sub
inc
test
push
adc
mov
or
pushf
shl
or
jecxz
push
aas
inc
stos
jmp
lods
or
outs
inc
popf
retf
mov
or
ret
push
ror
test
in
ret
idiv
aas
(bad)
adc
loopne
adc
jns
int3
in
push
aam
fwait
xchg
or
(bad)
aad
ret
pusha
retf
jl
xlat
mov
cld
mov
pop
add
cmp
dec
lods
(bad)
mov
sub
mov
dec
cdq
outs
xor
aad
outs
aas
rcr
pop
pop
sbb
out
movs
arpl
int
fs
add
or
inc
rcl
xor
inc
sub
mov
loop
retf
rcr
shl
jno
xchg
xchg
fst
leave
xchg
dec
rcl
pop
sub
pop
pop
in
inc
cmp
xor
fild
ds
mov
fdiv
retf
pop
or
xchg
ror
ss
or
fdivr
mov
dec
add
(bad)
pop
sub
ja
mov
jl
leave
(bad)
shl
(bad)
xchg
imul
lock
push
inc
adc
sbb
test
ret
ror
jno
ins
inc
inc
test
mov
fs
xchg
aas
cdq
dec
sbb
jle
jg
pop
mov
jecxz
and
dec
test
mov
call
sbb
call
push
push
or
cmp
sub
adc
pop
inc
cmp
xor
xchg
and
out
ret
fadd
repz
ss
lods
sbb
dec
inc
popf
stc
leave
je
sub
test
mov
jae
xor
outs
or
xchg
ret
rcl
mov
cmp
loop
inc
xchg
add
and
pop
cmps
dec
aam
bound
or
cmc
jns
daa
aad
jl
test
aas
ss
xchg
cmps
in
sti
frstor
(bad)
adc
adc
(bad)
fsubr
xor
aam
sub
push
fcom
je
sbb
ds
inc
inc
inc
sbb
dec
pop
pop
pusha
lods
test
and
call
js
mov
aad
je
test
pushf
pop
mov
dec
cmp
test
out
loope
or
ja
jmp
xchg
shl
shr
adc
sti
cmps
aam
das
scas
mov
(bad)
mov
push
sbb
inc
adc
cld
fldcw
mov
dec
scas
dec
ret
fsubrp
and
push
push
mov
cld
dec
ret
stc
ds
and
out
cmp
dec
pusha
lds
aaa
jbe
sbb
shl
sub
mov
add
and
add
leave
dec
ret
sbb
lods
inc
shl
shl
push
popf
mov
aas
movs
cmp
pushf
jno
pop
lahf
into
and
pop
aam
lds
clc
out
mov
retf
sbb
jns
lds
retf
inc
jle
jp
ja
repz
pushf
jae
push
sub
clc
(bad)
inc
sbb
sub
pop
leave
dec
jecxz
outs
cmp
jae
ins
iret
(bad)
jp
push
xor
cmc
mov
add
jb
pop
adc
in
aas
push
iret
cli
cmps
adc
sub
gs
jp
jmp
adc
sbb
(bad)
or
test
xchg
call
(bad)
xchg
stos
push
xchg
aam
sub
push
lahf
add
mov
add
mov
call
shl
mov
xchg
ret
loopne
sub
fild
inc
pusha
retf
mov
mov
xor
cs
aas
dec
cs
out
adc
and
aam
addr16
enter
ret
add
jb
jecxz
inc
mov
pop
repz
ror
aam
pop
mov
xor
popa
scas
inc
in
cwde
inc
sbb
or
sbb
clc
mov
adc
inc
call
xchg
mov
(bad)
add
into
cmp
xor
aam
sbb
add
pop
or
jecxz
xchg
sub
adc
add
jne
add
icebp
or
pop
nop
pop
test
inc
add
push
in
sub
movs
inc
sub
ins
mov
sbb
shl
lods
ret
adc
cs
aam
xchg
xchg
mov
mov
xchg
shr
fisttp
mov
mov
sbb
dec
dec
addr16
xor
cmp
sbb
daa
out
pushf
xor
mov
imul
cli
stc
gs
xchg
test
mov
mov
push
dec
popf
xchg
sub
jmp
add
loope
in
test
(bad)
mov
mov
pop
dec
push
xchg
mov
jae
xor
push
aam
mov
imul
call
in
xchg
inc
aad
adc
add
push
cld
icebp
mov
pushf
inc
test
es
lea
aam
in
imul
fcmovb
aam
pop
out
sar
shl
pushf
inc
addr16
ficomp
je
retf
(bad)
rcr
sbb
adc
test
jmp
push
sub
int
cli
pushf
adc
adc
jne
jge
sub
js
cmp
ret
mov
dec
es
inc
inc
nop
mov
cmp
aas
mov
loopne
xor
or
jmp
bnd
repnz
and
xchg
adc
iret
jne
jmp
adc
(bad)
inc
push
sub
enter
(bad)
ss
shl
and
repz
jmp
xor
movs
leave
je
je
jbe
push
stos
jle
fwait
test
dec
mov
ds
aaa
int
xor
inc
inc
push
pushf
in
aad
or
fs
jg
fisub
sub
cmp
push
xchg
mov
xor
inc
mov
test
inc
sub
das
popf
xchg
xor
mov
jmp
leave
shr
ss
stos
adc
fld
je
sbb
gs
cmps
jmp
mov
out
inc
add
jp
div
in
xchg
mov
mov
inc
add
inc
or
pop
sub
add
mov
dec
pop
jo
jne
clc
pushf
push
dec
dec
outs
or
pusha
push
aam
xor
mov
add
xchg
sbb
push
les
or
sub
pop
ret
cmovs
jae
cmps
or
iret
cmps
pushf
lea
data16
sub
add
pop
jg
or
and
inc
push
movs
mov
cmp
or
icebp
push
stos
mov
loopne
jl
or
or
xchg
cmps
loope
pop
cs
mov
int
daa
(bad)
mov
mov
aam
mov
push
imul
push
clc
dec
add
sahf
stc
sbb
psraw
pusha
shl
cmp
sub
lahf
mov
jp
je
ret
push
jae
imul
inc
addr16
mov
sub
popf
leave
popa
pop
push
add
push
pop
test
(bad)
dec
rol
xchg
xchg
repz
dec
stos
push
inc
test
scas
scas
cwde
add
jbe
xor
inc
test
pop
pusha
icebp
js
inc
push
cmp
pushf
mov
retf
mov
inc
push
jno
shl
(bad)
fst
mov
mov
ror
or
fcmovb
sbb
outs
adc
add
sbb
xlat
jns
push
add
mov
ins
add
inc
call
add
xchg
push
aaa
aam
popf
push
clc
cmps
aaa
mov
ret
pop
push
cmp
aam
mov
out
aaa
dec
mov
cmp
pusha
mov
loope
xor
pop
test
dec
stos
adc
pop
mov
mov
imul
and
inc
xchg
mov
sti
pop
mov
dec
and
sub
jl
mov
xchg
pop
adc
or
and
pop
sbb
cmp
popa
inc
adc
iret
popf
lahf
add
ins
out
repz
jns
adc
cs
rol
popa
nop
add
and
cmp
aad
pushf
test
sbb
jge
mov
ds
xlat
dec
(bad)
call
lods
and
xor
rcl
stc
fsub
ret
mov
cmc
pop
js
inc
jp
test
ret
add
movs
(bad)
sub
xchg
ins
lahf
in
pushf
in
mov
jne
aam
push
xor
fisub
call
es
test
icebp
mov
hlt
add
fisttp
adc
jmp
cwde
or
cld
jb
jb
add
jle
outs
mov
xor
push
mov
(bad)
cmp
mov
mov
in
(bad)
(bad)
test
ret
sub
outs
add
pop
inc
xor
inc
popf
loopne
add
mov
jecxz
adc
int3
and
cli
(bad)
outs
out
call
mov
cmp
inc
adc
ret
jmp
lahf
rol
push
neg
cmps
inc
popf
outs
pop
push
out
es
addr16
jmp
enter
je
push
shr
inc
hlt
idiv
mov
push
daa
sub
push
mov
dec
aad
add
add
xchg
ret
pop
in
cmps
das
ss
mov
sub
sub
sbb
cwde
jp
fcomp
das
es
xor
mov
mov
test
xchg
add
lock
daa
data16
cld
xchg
lea
rcr
aad
cwde
pusha
ret
ss
inc
and
fsub
pop
mov
or
inc
xchg
ror
add
push
std
mov
aas
jno
rcr
jmp
mov
in
adc
mov
hlt
xor
xor
aad
sbb
leave
jg
aaa
fmul
or
sub
popf
push
fadd
loopne
push
aam
mov
inc
lods
mov
adc
xchg
dec
cmp
out
sar
add
or
lahf
push
cmp
pop
mov
pop
jp
xor
xor
in
jns
cmp
js
jmp
imul
test
inc
or
mov
mov
mov
mov
sahf
xor
(bad)
in
xchg
outs
dec
aam
arpl
mov
push
xchg
stos
(bad)
xchg
sbb
retf
lahf
les
aad
cli
cwde
and
hlt
push
out
div
inc
fwait
xchg
add
sbb
mov
scas
rol
shr
add
adc
push
mov
dec
sbb
add
icebp
mov
daa
xchg
dec
lods
inc
iret
jmp
stos
mov
adc
mov
xchg
pushf
sub
sar
or
adc
lock
loope
cmps
in
jp
push
rcl
dec
daa
cwde
pop
das
sub
retf
mov
add
inc
loopne
push
adc
cdq
shl
fisubr
mov
sbb
add
push
inc
or
cmc
jo
add
(bad)
das
dec
outs
push
ret
mov
dec
inc
lds
adc
aas
retf
popf
sbb
push
jg
js
int3
sbb
aas
pop
cmp
and
dec
push
mov
add
rcl
cmp
adc
mov
outs
aam
lods
icebp
in
arpl
adc
cmp
dec
mov
scas
rcl
jae
adc
sbb
fild
mov
loop
(bad)
xchg
cld
inc
add
and
pushf
test
cmp
out
icebp
addr16
shl
and
push
push
fwait
adc
mov
or
inc
lahf
nop
ror
fpatan
inc
mov
mov
out
stos
jmp
push
add
ret
lds
pop
sub
and
(bad)
in
jns
push
xchg
xchg
js
test
mov
aas
(bad)
xor
jbe
add
or
in
pushf
mov
lds
ret
popf
aas
clts
sub
ins
or
cmps
mul
push
adc
ret
lock
mov
das
arpl
jl
xor
cmp
int3
sub
jmp
bound
daa
scas
mov
ror
mov
pop
push
mov
scas
dec
inc
test
cmc
mov
xchg
pop
movs
test
out
cmp
daa
pop
aam
scas
lods
in
in
outs
dec
ret
push
xchg
in
test
int3
leave
xchg
(bad)
jb
popf
(bad)
and
inc
cmp
jnp
dec
sar
ret
enter
test
sub
test
enter
cmp
cmps
xor
jecxz
(bad)
sti
ja
addr16
jb
pushf
or
aaa
scas
xor
mov
lea
test
pop
stos
mov
retf
sbb
out
ret
aas
shl
sub
adc
push
pusha
push
add
cmp
or
inc
sbb
cmp
cmc
sub
imul
icebp
icebp
mov
sub
fcom
jg
lods
jo
mov
aam
or
out
mov
popf
cld
cmp
sbb
xchg
rcr
mov
inc
in
xchg
mov
add
inc
add
or
cmps
mov
xchg
push
ror
mov
pop
jb
inc
jecxz
stos
push
fldcw
xchg
pushf
jmp
scas
cmps
cmps
shl
outs
test
outs
xchg
gs
cdq
daa
push
push
push
das
aaa
or
outs
jbe
xlat
adc
jmp
es
inc
rcl
mov
xor
ret
sahf
test
cmp
mov
xchg
out
outs
push
enter
pop
fs
test
aam
adc
stos
mov
stos
(bad)
sub
scas
mov
out
xchg
sub
js
aam
mov
daa
addr16
sbb
push
mov
cwde
mov
jl
jl
mov
mov
icebp
(bad)
aas
ret
or
js
jmp
pop
jb
loopne
jne
dec
data16
ret
xor
push
icebp
pusha
mov
mov
shr
sub
add
push
(bad)
mov
repnz
fild
mov
ret
adc
jmp
jns
out
aas
aad
pop
js
jae
inc
ficom
pop
sub
and
fsubr
(bad)
test
pop
xor
int3
mov
nop
shl
xor
add
hlt
test
xor
leave
stos
inc
popf
sbb
and
lahf
bound
shr
xchg
inc
push
and
dec
jns
inc
pop
mov
and
and
out
xchg
push
jmp
dec
jg
adc
adc
ret
sbb
out
inc
retf
push
test
pop
pushf
jb
cmp
rcr
jge
addr16
pop
dec
test
inc
xor
fadd
loope
loope
sbb
cmc
or
mov
pop
cmps
js
inc
aam
dec
or
add
adc
ror
and
leave
loope
clc
and
mov
jmp
xor
sbb
ret
popa
add
test
enter
mov
inc
ja
xchg
or
cld
cmp
fcomp
fs
mov
jecxz
mov
cld
mov
inc
ret
inc
cmps
cld
outs
movs
mov
xor
add
out
xor
sbb
jle
or
shr
outs
or
mov
adc
gs
jmp
addr16
and
push
ret
cmp
inc
inc
in
cld
imul
xor
mov
cld
jnp
pushf
pop
ficomp
in
popf
or
xchg
dec
sbb
adc
push
mov
xor
repnz
xlat
aad
rcr
stos
outs
clc
pushf
movs
bound
pop
mov
fimul
mov
or
pop
mov
aad
loope
xor
sub
dec
pop
jo
fcom
movs
jg
(bad)
fsub
adc
call
lds
jge
mov
push
(bad)
das
add
and
mov
fst
sbb
rcr
jp
or
mov
xor
rcr
adc
or
pushf
(bad)
neg
lock
jmp
jle
(bad)
ds
ret
cmps
xchg
inc
arpl
or
div
or
cli
jle
dec
sahf
and
call
pop
call
aas
mov
retf
mul
and
loopne
add
inc
aad
ret
(bad)
ficom
jmp
cld
mov
lea
pop
xor
jne
inc
mov
pop
int
pushf
cmp
lock
shl
add
outs
xchg
es
test
inc
sbb
inc
xor
fcom
popf
xchg
(bad)
cmps
fsub
fsub
inc
lea
stc
(bad)
jg
dec
mov
pusha
(bad)
push
sbb
jecxz
push
loope
xor
out
ret
lods
or
jne
adc
push
xchg
and
jmp
add
dec
pushf
fiadd
dec
ja
loop
(bad)
mov
cli
dec
leave
or
inc
fimul
dec
mov
inc
retf
xchg
jb
xor
jbe
pop
jnp
mov
shl
rcl
mov
mov
cmps
and
lods
out
sub
and
pop
stos
test
pushf
mov
mov
aam
or
movs
jle
aad
ret
shr
xor
adc
xchg
ins
test
cli
add
dec
inc
add
mov
cli
xlat
pop
jmp
push
mov
cmps
dec
mov
test
cmp
jb
xchg
mov
pop
inc
pop
cmp
adc
push
(bad)
iret
fistp
call
adc
scas
int
pop
mul
je
loopne
aas
jae
gs
test
out
clc
mov
jo
stos
ret
cmp
fnsave
xchg
aas
aas
jmp
scas
pop
cmps
js
aad
ret
stos
push
inc
push
repz
popa
xchg
or
fwait
inc
scas
inc
aam
sbb
or
cs
fst
xor
lock
(bad)
ret
push
enter
leave
(bad)
adc
sub
add
add
test
in
ror
xor
jmp
popf
sahf
dec
retf
fsub
xor
aam
sub
loope
hlt
and
xchg
fadd
mov
lods
or
push
xor
dec
pop
fwait
lock
cwde
add
cwde
mov
mov
push
add
iret
rcl
mov
rcr
call
sbb
jno
call
mov
mov
fistp
pop
pop
push
rol
inc
shl
sub
fbld
pushf
add
push
loopne
aam
xchg
add
out
inc
and
test
add
(bad)
mov
inc
loop
mov
mov
mov
ror
mov
ret
mov
mov
lds
add
mov
xchg
dec
(bad)
rol
stos
sub
jnp
aas
stos
and
pop
(bad)
ret
push
or
dec
xor
ror
repz
pop
add
call
mov
sbb
(bad)
fwait
mov
lods
or
adc
add
ret
in
pop
jo
cmc
aas
and
jns
sbb
inc
add
movs
fisubr
inc
or
xor
xor
fst
dec
and
push
pop
cmp
loope
jecxz
xor
enter
push
add
jl
mov
lea
lea
inc
push
push
xor
xor
mov
outs
push
xor
inc
jecxz
cmps
cmp
mov
sub
sub
add
fwait
lods
push
dec
inc
pop
sti
and
cwde
js
mov
pushf
push
pop
inc
imul
or
sti
cmp
shr
pop
scas
inc
in
lock
mov
pop
mov
test
inc
fadd
sbb
das
pop
fist
dec
cwde
and
ret
stos
mov
jbe
je
sub
jb
pushf
mov
jno
les
(bad)
xor
cld
lahf
and
loop
xchg
test
mov
xchg
inc
cmp
or
jmp
pop
aam
(bad)
and
aam
push
jne
xchg
or
in
jmp
in
loopne
or
xchg
jo
loope
and
mov
nop
leave
dec
xor
dec
sbb
mov
dec
mov
mov
mov
mov
out
ds
clc
and
out
xchg
push
je
inc
arpl
pop
pop
and
(bad)
mov
hlt
mov
and
mov
dec
push
inc
pop
fidiv
jb
(bad)
jl
movs
loop
jmp
mov
mov
fs
(bad)
push
into
rcr
loope
mov
mov
pop
pop
and
jp
aaa
pop
cmp
dec
push
adc
shr
rol
jmp
sbb
inc
sbb
sbb
dec
sub
in
cs
push
push
es
pushf
inc
(bad)
jg
dec
imul
push
int
outs
jecxz
mov
popf
data16
push
mov
hlt
adc
mov
dec
add
imul
data16
pushf
xchg
sub
dec
mov
xor
or
enter
movs
xlat
icebp
test
sub
test
pop
and
or
lods
popf
push
pop
cmp
shl
rol
xor
imul
jmp
sub
mov
sub
(bad)
lock
mov
dec
push
bound
leave
icebp
scas
add
ins
push
nop
das
mov
fwait
push
rcl
pop
les
div
cmp
push
shl
inc
inc
in
ret
and
or
jne
cmp
int3
out
(bad)
push
jbe
test
aad
mov
adc
xchg
mov
xlat
push
leave
(bad)
or
jae
fimul
arpl
xor
xor
xchg
xchg
pop
add
pop
add
mov
cld
jne
inc
fnsave
sub
loope
bound
inc
xchg
xor
mov
jecxz
cmp
fidiv
out
or
push
mov
mov
cmp
fucomip
mov
imul
imul
push
aam
ret
in
lods
(bad)
fisttp
or
icebp
cmp
fcomp
push
cli
xchg
adc
inc
aaa
ret
push
stos
jl
popf
mov
mov
leave
ror
in
push
ret
xor
das
pusha
cmps
rcr
jnp
repnz
add
jno
(bad)
test
inc
dec
add
pop
aam
shr
cld
add
mov
in
icebp
out
jmp
cli
push
cmp
retf
shr
pop
adc
cmp
add
lahf
popf
in
dec
icebp
mov
lahf
cmp
ror
mov
dec
jbe
(bad)
push
inc
jp
adc
daa
add
sub
sub
inc
xchg
int3
mov
in
dec
dec
ret
mov
push
out
aam
lods
mov
enter
cmps
ret
sahf
fs
ret
cmc
aas
pusha
rcl
loop
push
xchg
call
inc
js
jge
mov
test
lods
sub
mov
int3
mov
sub
stc
pop
fwait
popf
sbb
and
jne
xchg
cmp
scas
mov
mov
jg
js
iret
test
popa
lds
test
xchg
pop
mov
pop
pusha
test
mov
(bad)
retf
je
xchg
sbb
push
pushf
or
add
mov
into
repz
xchg
sbb
cmp
aas
jnp
lods
dec
nop
pop
pushf
jns
or
fst
movs
add
shl
(bad)
in
out
sub
aas
imul
fcmovb
(bad)
rol
push
pushf
pop
sbb
pop
xlat
ins
jno
mov
cmps
ins
mov
ret
imul
inc
mov
ins
adc
test
fwait
ror
jecxz
add
(bad)
jne
loope
in
pushf
repnz
pop
dec
add
aam
outs
mov
mov
cmp
jge
ret
sbb
in
stos
mov
aas
and
push
xor
add
jp
mov
lock
aam
pop
cmc
mov
jnp
fnstenv
add
mov
rcl
dec
sub
inc
inc
add
mov
call
xchg
retf
repz
call
pushf
sbb
xchg
aad
and
inc
popf
add
aas
test
shl
mov
and
xchg
sahf
rol
cmp
shr
fcomp
pop
inc
rcl
push
mov
stc
movs
out
outs
mov
iret
lock
jbe
test
pop
aad
cmp
push
and
hlt
jge
in
daa
ret
xchg
add
mov
stc
aas
stos
xchg
xor
popa
push
js
pushf
inc
out
div
dec
stos
scas
inc
(bad)
inc
jp
sub
neg
cld
add
aam
je
xor
repz
dec
dec
adc
xchg
mov
loopne
push
adc
jmp
add
xor
ret
push
dec
sub
(bad)
dec
(bad)
adc
ror
cld
xchg
bound
mov
mov
leave
xchg
cmp
add
push
dec
pop
and
xor
push
retf
ret
in
add
leave
ret
mov
sahf
cmp
cmp
data16
out
push
cmp
jecxz
dec
in
cmp
in
dec
aam
popa
icebp
fimul
inc
inc
cmp
pushf
outs
test
outs
aam
jb
mov
ins
xchg
cmp
mov
add
cmp
push
dec
adc
retf
ret
inc
sbb
inc
pop
and
push
cld
test
xchg
jne
out
add
adc
and
push
pop
and
xor
mov
stc
push
sub
inc
or
out
or
fwait
dec
xor
sub
inc
bound
inc
push
outs
adc
xor
aas
ja
cmp
push
setb
and
adc
dec
add
jle
add
sbb
cmp
fcomp
faddp
push
push
nop
lods
rol
out
sbb
sub
inc
js
mov
call
xor
cmps
pushf
push
cdq
xlat
push
push
cmp
int3
and
fidiv
in
xchg
dec
lock
ret
fmul
aas
call
adc
jmp
std
push
out
push
push
ret
xchg
inc
int
(bad)
gs
retf
push
shl
lods
popf
test
dec
out
cmp
arpl
addr16
shl
inc
add
lock
test
mov
cmp
adc
mov
into
jl
pushw
les
hlt
sbb
sub
or
rol
mul
outs
retf
push
jno
shl
imul
cmp
add
push
cmp
push
ret
xor
dec
aam
pop
out
pushf
sub
pop
stc
enter
ror
outs
pop
jnp
push
(bad)
pushf
xchg
and
(bad)
fwait
test
shr
inc
jb
xor
pushf
rcl
out
aam
js
jbe
push
gs
sub
loope
repnz
call
scas
adc
fmul
add
dec
ror
push
aam
xchg
mov
aas
jmp
xchg
cs
repnz
push
shl
add
ret
xor
jge
clts
inc
adc
mov
outs
jae
pushf
outs
repnz
xchg
mov
sub
aas
popf
push
cli
inc
in
pop
pop
rcl
mov
inc
cmp
adc
xor
sbb
imul
leave
arpl
push
into
ins
cmp
jno
js
adc
push
sbb
mov
jns
push
xchg
and
inc
test
xor
outs
lods
pushf
(bad)
push
and
and
xchg
jmp
cld
mov
adc
add
dec
mov
xor
sub
cmp
repnz
lds
xchg
test
fwait
retf
ss
jl
loope
movs
ret
fisttp
jecxz
shl
mov
cmp
out
pushf
fs
jmp
pop
bound
aas
xchg
scas
pop
mov
xor
pushf
pushf
or
inc
ins
mov
cmp
inc
lds
lock
fcom
cmp
xlat
jae
xor
ins
daa
enter
lods
shl
push
pop
ret
fwait
and
mov
call
pop
jae
sbb
add
call
jecxz
(bad)
mov
aam
jmp
test
ret
push
out
test
xor
aaa
sbb
or
and
jbe
sub
in
xchg
enter
cli
xor
(bad)
call
inc
fwait
out
rol
jp
rcr
nop
pop
mov
mov
(bad)
in
mov
adc
push
out
sbb
xchg
arpl
sti
ds
inc
popa
or
push
nop
push
outs
inc
add
in
xor
mov
loop
cmp
clc
dec
rol
adc
mov
or
push
cmps
xchg
add
sbb
in
(bad)
in
cmp
test
and
ins
mov
xor
add
lahf
mov
sub
repz
dec
push
cmp
lock
ret
int3
cmp
adc
and
jno
fs
daa
pop
popf
dec
cmp
mov
mov
pushf
push
adc
cwde
fld
fwait
mov
sub
nop
ins
lods
call
ror
cld
dec
retf
and
clc
add
jo
mov
cmp
les
ficomp
in
ret
cmp
and
mov
adc
pop
stc
push
jno
or
sub
call
dec
fwait
mov
inc
aad
xor
into
dec
aam
rcl
sbb
(bad)
xchg
jbe
loope
sbb
aam
aam
aaa
jne
std
pop
cmp
mov
pushf
inc
cmp
ret
inc
xchg
cmps
mov
retf
pushf
movs
out
xchg
jmp
cmps
das
or
lahf
inc
repz
bound
dec
hlt
pushf
leave
mov
sahf
repz
inc
stos
cmp
loope
stos
jo
pushf
mov
xchg
push
xchg
rcl
dec
add
ret
js
pop
inc
jl
mul
sub
aam
dec
adc
(bad)
inc
(bad)
ret
mov
xchg
xor
out
outs
push
cmp
(bad)
push
xchg
add
es
adc
test
xchg
cmp
rol
add
shl
out
pushf
mov
and
stos
std
je
addr16
pop
popa
dec
push
pushf
leave
das
xor
cs
aas
fist
loop
fistp
xor
dec
mov
sbb
hlt
repz
pop
fsub
scas
pushf
cmp
mov
cmp
cmp
pusha
arpl
shl
mov
sub
xchg
arpl
aam
add
pop
mov
pop
push
jmp
pop
jno
inc
cmp
push
movs
push
mov
fdiv
shl
popf
int3
retf
in
aam
or
aad
test
adc
add
xor
rcr
push
xor
ret
dec
jo
xchg
jo
daa
mov
mov
xor
jp
lods
mov
xchg
xchg
jo
mov
inc
push
adc
sbb
add
out
inc
ret
pop
je
outs
dec
aam
mov
call
xor
fdiv
push
movs
cmp
rol
sbb
and
cmp
test
push
adc
sub
lahf
pop
mov
dec
sub
adc
dec
(bad)
or
fisub
sbb
push
push
dec
sar
ret
test
jmp
xor
or
and
test
stos
call
stos
adc
add
mov
fs
mov
ret
mov
popf
sub
xor
fcomp
cmp
std
shl
ficomp
enter
movs
cmp
mov
movs
mov
push
mov
loope
ret
jmp
xor
daa
cmp
pop
dec
lock
retf
mov
inc
sub
dec
xchg
jecxz
rcl
cmovo
ds
stos
mov
hlt
mov
das
imul
inc
jae
sbb
pop
pop
int
mov
inc
add
xchg
ins
jmp
mov
arpl
and
shl
test
das
inc
pop
jge
jmp
add
dec
or
inc
dec
aad
adc
jge
add
imul
pop
xchg
push
pop
out
pop
sub
lock
ds
dec
test
push
fnstenv
scas
adc
dec
mov
jl
lock
add
sbb
leave
outs
fiadd
add
mov
lahf
in
pushf
cmovl
pop
jmp
sbb
cld
cmps
cdq
sub
mov
inc
ret
scas
push
inc
xchg
std
pushf
dec
xor
adc
xchg
rcr
je
ret
cmp
mov
hlt
inc
sbb
pop
repnz
daa
mov
das
xchg
sbb
pop
retf
lea
fcmovnu
adc
inc
and
cld
push
addr16
ret
add
adc
in
hlt
cli
mov
push
mov
mov
jno
lfs
inc
mov
les
mov
cmp
sbb
enter
hlt
ret
ja
(bad)
movs
inc
in
push
aam
dec
sbb
fstp
in
adc
mov
pusha
int
ret
fs
icebp
(bad)
fild
stos
inc
pop
ja
int3
mov
and
and
dec
loopne
rcl
jns
mov
ret
ret
ja
or
mov
or
or
push
arpl
loopne
dec
jl
push
rcl
out
pop
sbb
inc
cmp
adc
push
pop
ror
adc
inc
cmp
cld
pop
sub
mov
or
pushf
inc
test
stos
sar
ins
cwde
pop
retf
dec
fs
loop
dec
mov
rcl
in
xor
push
jl
loop
pushf
mov
jge
es
add
pop
push
movs
xchg
pop
adc
bound
inc
(bad)
xchg
sbb
dec
push
mov
(bad)
mov
pop
sub
inc
aam
sti
push
aaa
imul
(bad)
in
adc
add
mov
fucomip
xchg
int3
(bad)
(bad)
pushf
xor
jl
inc
enter
mov
add
cmp
cmp
pop
jmp
xor
movs
shl
or
push
in
dec
sbb
xchg
cmp
mov
(bad)
into
pop
inc
xor
in
pushf
and
mov
aam
cmp
xchg
outs
xor
or
aad
push
pop
ret
jno
or
sbb
rcl
in
adc
add
pushf
adc
jle
xchg
xchg
setno
mov
pushf
mov
leave
push
dec
(bad)
lahf
in
cmp
mov
inc
(bad)
sbb
ss
cmp
jno
push
popa
dec
popf
sbb
outs
popa
sbb
sbb
imul
aad
sbb
xchg
cdq
sbb
sahf
rcl
mov
fld
inc
sub
and
js
ja
dec
cdq
cmp
inc
ins
mov
mov
retw
mov
xchg
inc
shl
(bad)
pop
popf
mov
cmc
stc
adc
fisubr
pushf
movs
mov
mov
in
ret
hlt
ret
adc
leave
inc
push
xchg
(bad)
jmp
(bad)
mov
xlat
icebp
and
sbb
js
mov
or
es
hlt
sti
repz
or
or
cs
push
push
daa
in
imul
mov
cmp
jbe
xor
es
mov
pop
pop
jmp
or
das
xchg
mov
mov
push
push
cld
stc
mov
xor
movs
push
outs
adc
inc
mov
and
lock
and
cmps
rcr
inc
inc
sub
daa
pop
mov
scas
call
fidiv
add
cmp
lahf
arpl
mov
clc
xor
movs
inc
xor
ror
jbe
ret
imul
inc
bound
aam
mov
nop
jle
push
or
mov
ds
fstp
fld
jb
push
push
cmp
jae
add
mov
ret
sub
mov
lds
xor
xor
mov
cmp
push
pushf
pop
mov
cmp
aas
mov
fistp
ret
add
jp
mov
inc
jo
sbb
xlat
(bad)
xor
imul
ror
js
and
scas
push
pop
inc
ins
hlt
addr16
jne
aam
int
add
ins
jle
jp
jg
rcr
add
rcl
jmp
mov
mov
std
shl
aaa
sub
xchg
xlat
xchg
ret
adc
icebp
sbb
fiadd
mov
mov
out
adc
pcmpgtw
xlat
fld
jle
jl
fcom
adc
dec
jo
test
push
xchg
pushf
pushf
repnz
cmp
dec
dec
sbb
rol
push
int3
mov
xlat
popa
sub
rol
jge
or
xchg
mov
popf
pushf
fsub
xor
fdivr
push
test
sti
loop
mov
sar
or
cmp
fs
test
jo
inc
xor
add
ret
jmp
outs
xor
jecxz
repz
inc
std
inc
sbb
add
sbb
hlt
icebp
xchg
or
push
cmp
push
mov
popf
ret
nop
and
push
out
rcr
sbb
add
cmp
into
jg
fs
sub
aam
call
xchg
iret
push
test
jns
or
std
adc
fdiv
xor
mov
arpl
adc
mov
xor
pop
dec
cld
push
cmp
mov
push
movs
pop
cmp
inc
(bad)
xor
rcl
inc
add
(bad)
dec
xchg
or
shr
adc
(bad)
add
fcomp
or
gs
sti
pop
push
mov
mov
xchg
jmp
shl
inc
xor
pop
cdq
icebp
pusha
ret
jle
dec
mov
mov
mov
neg
add
adc
(bad)
stc
sbb
ret
(bad)
sbb
cld
cmp
ds
add
jecxz
mov
mov
clc
mov
aas
lahf
icebp
add
push
fwait
push
push
sbb
scas
push
jmp
sub
inc
mov
or
mov
xchg
xor
int3
push
cld
mov
pop
or
mov
xor
and
pop
aam
mov
dec
dec
ret
ret
cmp
stc
inc
mov
xchg
je
(bad)
mov
add
addr16
push
fwait
shl
shl
fist
rcr
mov
aam
jno
pop
punpcklwd
loopne
push
ins
jns
xchg
mov
in
aaa
push
mov
and
scas
jle
fwait
mov
push
xchg
adc
sbb
data16
inc
add
cmp
jecxz
xchg
test
jp
or
xor
cmp
jmp
(bad)
jnp
sar
pushf
push
sub
loop
aam
pop
push
cli
cmc
cli
bound
add
and
inc
aam
mov
dec
jl
sar
pop
add
mov
jne
dec
cwde
sar
push
outs
and
outs
ss
jmp
stc
cdq
sub
and
cmps
sbb
xchg
es
and
or
sti
(bad)
or
gs
push
les
pop
push
outs
jmp
sbb
rcl
scas
in
jg
sar
stos
das
das
pop
push
repz
(bad)
dec
fidivr
push
inc
loope
fisttp
and
into
retf
adc
and
stos
xchg
out
int
shl
neg
dec
dec
popf
ins
outs
mov
cdq
shr
(bad)
int
xor
ret
pushf
lds
cmp
jnp
popf
test
jns
push
cmp
add
mov
mov
push
icebp
mov
pushf
inc
sbb
int3
hlt
(bad)
rcr
mov
xor
lds
or
cs
mov
xchg
arpl
mov
loopne
jb
lahf
pushf
jmp
mov
mov
inc
and
stos
inc
test
xor
retf
jmp
add
sbb
out
jb
stos
sti
sbb
(bad)
imul
ret
or
xchg
inc
push
hlt
xchg
rcr
add
ret
mov
push
jns
cli
mov
fiadd
push
scas
sar
adc
popf
in
cmp
call
xchg
dec
jnp
retf
js
or
fisubr
ror
mov
bnd
leave
push
sbb
sub
fcomp
lahf
in
pushf
xchg
pop
out
enter
aam
pop
in
ss
mov
popf
mov
dec
mov
xchg
xor
shr
xor
popf
mov
ja
aaa
aam
loopne
scas
push
das
or
mov
mov
xor
inc
pushf
cbw
(bad)
into
into
xor
fisubr
jp
aam
dec
rol
add
(bad)
mov
mov
mov
ja
mov
add
add
cld
in
js
sub
dec
lods
and
sahf
(bad)
mul
mov
ret
test
and
xor
or
je
sahf
mov
pop
pop
mov
cmp
lods
pop
sbb
sub
pushf
dec
in
xchg
stos
pop
cmp
les
aad
ret
adc
das
loopne
mov
push
(bad)
call
loop
adc
pop
lods
cmps
mov
push
adc
test
mov
pop
aad
loopne
jge
mov
loop
sbb
fcomp
lock
ins
sbb
test
inc
loopne
stos
fcom
xor
inc
push
(bad)
xor
fild
jmp
jp
test
mov
add
and
movs
sub
out
sbb
push
popf
arpl
cli
out
dec
inc
cs
ret
movs
push
aad
sbb
xor
pushf
loopne
iret
jns
add
sbb
lods
ds
mov
mov
into
mov
(bad)
xor
fdiv
xchg
mov
pop
adc
inc
dec
stos
dec
fadd
imul
aam
xchg
and
xchg
inc
in
pushf
(bad)
cdq
inc
cmp
cs
dec
aam
out
xchg
fiadd
pop
fs
xlat
outs
push
loope
outs
aam
(bad)
stc
inc
dec
mov
aam
add
aam
f2xm1
push
push
int3
repz
jl
dec
cmp
cmps
adc
push
xor
aas
pop
jne
lahf
add
ret
adc
jmp
inc
mov
imul
ret
aam
mov
or
std
sbb
popf
cmp
lea
retf
xchg
jnp
pop
mov
test
out
push
stos
loop
pushf
and
sbb
fnsave
xor
(bad)
or
dec
mov
outs
pushf
xchg
ficomp
test
enter
jmp
lock
shr
add
ss
push
jecxz
mov
push
test
adc
sub
inc
inc
and
ret
inc
int
sbb
popf
dec
jbe
frstor
and
mov
adc
dec
cdq
cwde
test
pop
je
push
inc
jne
mov
aad
jge
cmp
fld
shl
add
ins
dec
adc
mov
xchg
mov
pusha
add
out
leave
fiadd
fs
push
leave
aad
mov
div
shr
jp
xchg
sub
dec
daa
mov
(bad)
jle
aas
jmp
bound
(bad)
repnz
sbb
mov
cmp
enter
push
mov
inc
int
stc
mov
mov
inc
jns
pop
jp
mov
push
jne
lock
pop
pop
lods
pushf
mov
out
add
aam
(bad)
push
cdq
cmp
push
out
loopne
and
xor
xor
adc
mov
(bad)
(bad)
fadd
inc
shl
nop
mov
jb
pop
push
cmp
inc
cdq
shl
sti
mov
and
add
xchg
stc
addr16
push
mov
mov
shl
ret
cmp
pop
jmp
ret
adc
push
and
fcmovbe
test
ds
mov
xchg
icebp
push
cmp
es
imul
xor
push
in
pushf
nop
adc
mov
push
scas
out
mov
int
jno
std
cwde
ret
mov
mov
test
jb
fs
aad
out
(bad)
adc
cdq
ret
dec
popf
and
pop
arpl
test
gs
lahf
pop
ror
inc
push
mov
mov
leave
cmp
retf
pushf
arpl
pop
or
loop
xor
(bad)
dec
popf
aas
cmp
jmp
pop
xchg
std
pop
jb
ret
aas
xor
xchg
sub
aaa
mov
out
mov
(bad)
push
arpl
xor
ret
cmp
push
xor
adc
cmp
popa
ret
gs
pop
bound
sbb
adc
sbb
sbb
xchg
loopne
aam
mov
xchg
gs
hlt
repnz
mov
sar
xchg
pop
add
dec
ret
adc
push
inc
stc
pusha
call
push
sbb
xchg
fst
es
sub
pop
cmp
cmp
cmp
or
xor
adc
cmp
mov
ret
aad
(bad)
inc
push
jmp
jae
pushf
add
mov
lods
(bad)
clc
dec
aam
scas
push
sub
pop
aam
or
stc
fwait
pop
add
add
movs
and
mov
jb
jge
xor
mov
call
or
in
rcr
stc
mov
repz
aas
xchg
inc
dec
addr16
call
in
mov
inc
add
ror
(bad)
sahf
dec
adc
inc
fmul
add
inc
xchg
mov
mov
push
mov
sub
cmp
mov
cmp
fs
stc
sbb
adc
ret
(bad)
adc
(bad)
push
cmp
and
ret
dec
sub
or
rcr
mov
cs
hlt
pop
pop
sub
lea
jmp
sahf
stc
in
add
mov
std
or
shl
es
sbb
or
jb
pop
into
rol
push
mov
fild
in
cld
or
and
cmp
push
aaa
gs
sti
push
hlt
enter
xor
iret
inc
and
xchg
cmps
mov
es
test
adc
pop
ret
pop
jecxz
add
ins
std
fldenv
iret
adc
icebp
mov
movs
or
add
hlt
and
sub
xchg
push
or
js
jae
retf
rcl
into
xchg
or
hlt
add
mov
push
pop
add
and
in
pop
mov
push
in
and
sbb
or
(bad)
xchg
test
stos
jmp
test
jl
inc
clc
cmps
jnp
(bad)
jns
jae
jl
dec
outs
loopne
sbb
jmp
in
rol
ret
cmps
fsin
mov
inc
xchg
jmp
cli
adc
sahf
push
or
xchg
xchg
cdq
jno
pop
lahf
mov
jb
xchg
pop
or
leave
into
add
xchg
jae
fwait
pusha
(bad)
fimul
fild
mov
not
frstor
pop
iret
call
retw
div
dec
cmps
sbb
jnp
jg
call
cld
pushf
adc
push
das
inc
sbb
hlt
aam
push
mov
sar
mov
adc
cmc
and
(bad)
addr16
imul
mov
fcom
mov
and
cmp
fiadd
inc
cmps
repnz
inc
mov
cmp
dec
pusha
ret
je
sub
dec
aas
repz
add
div
ret
(bad)
mov
adc
xor
mov
in
adc
add
inc
loope
fcmovbe
stos
add
stos
adc
xor
test
and
adc
sbb
and
cli
fidivr
in
sbb
jns
sbb
and
xchg
fcomp
mov
add
push
pop
js
ret
cs
inc
and
test
inc
adc
xor
add
mov
lods
imul
cmp
fwait
in
inc
pop
or
cld
ret
jb
xchg
rcr
mov
icebp
cmp
sbb
inc
ret
xor
cmp
jp
inc
push
inc
cdq
jg
push
(bad)
rol
mov
push
and
ret
add
xchg
aas
outs
jo
sub
push
popa
ins
imul
jb
adc
iret
jle
setp
pop
and
imul
loopne
and
ds
(bad)
fadd
popf
sbb
ror
call
jno
pusha
movs
push
rol
(bad)
test
mov
into
cs
cmps
sbb
xchg
ds
inc
xor
mov
shr
jb
std
inc
jecxz
test
ficomp
push
sbb
ret
repnz
push
fcom
icebp
mov
and
fist
cwde
outs
jmp
rcr
jne
and
(bad)
ret
test
pusha
cli
pop
inc
adc
arpl
call
dec
ror
sar
shr
into
loope
in
pop
cmp
sbb
ss
int3
pop
jo
mov
mov
xor
mov
pop
aam
ss
lods
out
stos
das
retw
cmps
movs
movs
jle
inc
test
neg
movs
sbb
cmps
pop
enter
popf
jecxz
repz
in
lahf
mov
adc
push
sub
mov
mov
cmp
fsubr
lods
pusha
cmc
mov
inc
xchg
xchg
loope
xchg
daa
inc
cmps
sub
push
inc
int3
pop
sub
push
fsubrp
sub
shr
(bad)
xlat
fimul
movs
(bad)
std
or
xchg
and
ret
loopne
leave
test
cmc
push
outs
ds
push
xchg
pop
xor
mov
inc
shr
out
cmp
cmp
push
movs
pop
mov
(bad)
and
int3
pop
xchg
push
dec
out
(bad)
cmp
xchg
shl
rcl
inc
dec
adc
ret
test
jecxz
sahf
cld
aas
aas
hlt
and
out
dec
call
or
mov
xchg
neg
shl
aas
lds
fbstp
pop
pushf
inc
test
ret
out
enter
mov
jl
outs
stc
cmps
push
imul
xor
pusha
push
aam
add
shl
sbb
push
sbb
cmc
sar
aas
mov
push
ret
inc
stc
sbb
push
pop
pop
stc
test
mov
jo
leave
icebp
shl
add
adc
adc
(bad)
icebp
dec
ret
mov
and
xchg
out
aas
bound
xchg
cmp
popf
cmp
mov
call
xchg
dec
bound
inc
add
popf
inc
jp
sbb
out
jne
xchg
aad
ins
sub
les
pop
sub
fwait
sub
ret
jmp
aam
pop
loop
rol
lods
and
xor
std
push
mov
cmp
into
ret
xchg
aaa
aas
mov
or
shr
retf
movs
enter
push
or
mov
adc
sar
sub
out
and
(bad)
shl
inc
mov
aaa
es
add
mov
ret
lahf
adc
push
shl
mov
cmp
sub
or
push
repz
jae
(bad)
mov
cs
sub
outs
inc
bound
cmp
outs
stos
mov
outs
aas
dec
loop
inc
jle
mov
neg
mov
movs
std
sub
xchg
pminub
call
fs
fadd
add
aaa
popf
nop
xor
mov
aam
cmp
add
(bad)
fdivrp
icebp
shl
icebp
ins
fadd
gs
mov
sub
pop
ja
add
xor
int3
nop
and
movs
pop
jae
adc
fdivr
fstp
mov
aam
(bad)
clc
mov
pop
jb
sub
ret
ins
ins
bound
xchg
rcr
rcl
cli
pop
ss
ret
xor
aas
jbe
and
fnsetpm(287
adc
pushf
loop
adc
mov
jnp
jle
in
mov
bound
dec
xor
sbb
ds
pushf
or
mov
repz
aam
jbe
dec
pop
fisub
in
aas
inc
shr
inc
stos
pop
repz
or
dec
repnz
or
in
pop
xchg
fstp
popa
shl
pushf
jl
jl
pop
aas
mov
out
push
dec
in
adc
sar
cmp
mov
test
mov
loop
pushf
inc
scas
xchg
repnz
mov
sbb
push
hlt
lock
neg
ret
sub
jg
lods
dec
mov
push
pushf
sbb
sbb
jae
pop
aam
paddq
add
fwait
mov
sar
and
outs
push
out
ret
test
ret
inc
dec
mov
retf
adc
ret
mov
mov
cmp
sbb
jmp
dec
sahf
or
mov
adc
jae
and
xor
mov
repnz
pushf
xchg
sahf
and
mov
es
and
pop
push
movs
or
pushf
inc
mov
(bad)
xchg
aam
leave
fisubr
jne
push
cmps
pushf
fwait
xchg
dec
mov
sub
push
in
and
xor
lock
mov
add
es
gs
or
popf
and
mov
pop
out
retf
cmp
push
or
jmp
jnp
jns
aaa
and
aam
xchg
inc
test
cli
pop
out
dec
and
mov
sub
and
pop
sbb
adc
arpl
mov
mov
mov
jno
pusha
dec
and
and
mov
or
dec
adc
inc
jle
rcl
(bad)
movs
js
xchg
sar
or
shr
fild
and
push
lock
loope
sar
and
fcmovnb
enter
jp
pusha
pusha
and
cld
ret
bound
inc
je
mov
and
dec
mov
and
pushf
pop
loopne
pop
ins
lea
cmp
repz
aad
push
sar
xor
shl
js
inc
jb
add
push
std
cli
in
cmps
mov
adc
enter
sbb
pusha
jmp
outs
and
sub
lods
add
mov
xor
inc
mov
inc
in
sbb
or
pushf
push
push
dec
rcr
rol
dec
mov
inc
loopne
ret
inc
retf
mov
or
mov
loopne
mov
retf
cli
ror
push
mov
dec
ret
fldenv
scas
pop
inc
xchg
jmp
sahf
fcmovb
lods
adc
js
mov
mov
aas
cs
sahf
cwde
fcomp
mov
les
xchg
add
jge
sti
pop
pop
out
xchg
test
stc
xchg
mov
movs
mov
mov
mov
ins
push
inc
adc
pop
cmp
sbb
push
cld
mov
loope
jmp
fst
inc
cld
pop
ja
lock
mov
lock
test
push
dec
lods
add
es
add
lea
mov
mov
inc
mov
dec
shl
addr16
fmul
adc
sbb
inc
fbstp
std
cdq
push
cli
or
cdq
in
pop
mov
lock
scas
pushf
sahf
arpl
add
cmp
pop
xor
pop
neg
mov
pusha
test
ret
das
xor
bound
adc
fwait
sbb
mov
repz
sub
mov
das
add
adc
adc
rcr
jmp
cmp
inc
pop
or
fidivr
bound
jecxz
inc
inc
add
and
mov
fwait
pushf
sbb
push
sub
pop
xchg
aas
sar
xchg
sbb
jb
dec
sbb
xor
sar
mov
cwde
(bad)
idiv
loope
cs
xor
xchg
inc
dec
mov
push
sbb
and
fild
fidiv
xchg
mov
adc
xor
pop
push
ret
shl
sbb
lods
and
push
dec
dec
push
cmp
call
pop
xor
dec
div
and
mov
sbb
test
push
mov
jp
data16
movs
aam
add
loope
jmp
jae
imul
adc
rcr
mov
scas
adc
fild
(bad)
pushf
sahf
add
dec
out
cmp
(bad)
rol
push
mov
imul
gs
inc
test
push
js
xor
aas
lahf
mov
imul
cmps
shl
inc
stos
push
pop
cmc
into
rol
add
jmp
outs
pop
mov
jecxz
add
mov
in
jmp
test
mov
call
xor
stos
sti
mov
idiv
fistp
sbb
ret
mov
icebp
jns
pop
aas
mov
adc
push
jmp
ficom
xchg
xchg
jo
pop
aam
push
and
push
fsubr
das
(bad)
sahf
xchg
shl
inc
movs
mov
inc
bound
pop
xor
push
pop
aam
clc
jne
xlat
dec
add
jnp
and
out
lods
test
aad
cmps
jp
cmp
or
push
push
dec
pop
mov
fcom
mov
xor
inc
or
js
jb
xlat
push
and
rol
test
shl
sub
pop
ffreep
or
sub
sysenter
adc
dec
cmc
mov
daa
call
jne
mov
mov
ins
retf
cmps
arpl
jmp
adc
jge
pop
loopne
push
add
sub
je
dec
mov
xchg
pop
pop
or
cmp
mov
rcl
sub
movs
pop
push
and
adc
cmps
sbb
push
adc
cmp
fst
fmul
push
fsubr
xor
adc
shl
xchg
cmp
add
add
scas
and
inc
mov
fidiv
fcmovu
pushf
mov
je
adc
push
es
clc
movs
call
out
repnz
out
jo
and
ret
lahf
adc
gs
push
rcr
mov
rcpps
sahf
or
fld
pop
stos
push
loop
xor
and
cmp
stos
push
scas
rol
jmp
stc
and
dec
fist
cmp
lds
mov
pushf
jmp
call
sar
sub
pop
xchg
cmp
jb
call
div
inc
fdivr
pop
fcmovnu
out
loopne
pop
cmps
movs
clc
dec
rcl
sub
es
and
out
(bad)
pop
sbb
and
push
fst
mov
aas
imul
mov
xor
pushf
ja
inc
jg
popf
mov
sbb
push
imul
fucomip
xor
xchg
stos
shr
cmp
push
or
adc
jmp
or
pop
rcl
xchg
rol
cmp
ss
mov
dec
cmps
add
es
pushf
(bad)
or
out
scas
rcl
fldenv
xchg
push
push
ret
daa
adc
test
lahf
fwait
and
add
pop
inc
dec
adc
push
add
or
mov
jle
fwait
jge
stos
push
xchg
inc
add
inc
pop
push
mov
into
movs
fwait
cmp
or
push
aad
movs
and
leave
rcr
add
in
cmps
popf
(bad)
lods
not
ror
inc
loop
test
inc
in
pushf
mov
into
or
loope
sbb
out
add
push
push
add
add
jmp
mov
mov
sub
ret
or
mov
push
mov
push
adc
xchg
je
push
cmp
inc
xchg
pop
fld
cmps
adc
add
outs
mov
arpl
mov
std
mov
sbb
add
and
ret
mov
movs
mov
in
dec
cmc
adc
inc
and
mov
xor
mov
sbb
fdivr
jl
pop
into
dec
ret
mov
clc
pop
mov
inc
push
add
retf
cmp
test
dec
mov
aam
sbb
xchg
fsubr
and
xchg
inc
je
cmps
out
aaa
lds
cmp
inc
push
mov
js
add
test
mov
lods
int3
sbb
aas
xchg
in
xor
and
stos
xchg
icebp
je
mov
fld
or
or
fist
jo
mov
xchg
sub
adc
add
pop
xchg
cmp
pop
cmc
lods
dec
ret
iret
leave
jo
fs
iret
cmp
aaa
popf
iret
jb
dec
jns
mov
das
push
lds
sub
or
jo
inc
shl
pop
nop
lds
popf
jle
xor
mov
xchg
std
popf
mov
cmp
popf
pop
cmp
jbe
cwde
movs
mov
mov
xor
xor
mov
sbb
frstor
repz
das
inc
push
sbb
rcl
xchg
or
in
and
inc
sbb
jecxz
sub
out
div
push
(bad)
pop
mov
in
aam
and
inc
mov
test
shl
sub
mov
imul
push
or
std
inc
mov
mov
(bad)
push
movs
inc
ret
shl
not
je
out
mov
ret
or
adc
add
out
enter
xchg
shl
push
xor
fadd
dec
cmp
gs
push
test
pop
pop
test
inc
push
call
pop
loop
xor
and
inc
leave
adc
ins
aas
mov
(bad)
jmp
loop
sbb
ret
pop
icebp
fcomp
dec
(bad)
inc
lahf
sub
pop
popf
push
fwait
arpl
dec
jae
rcr
pop
dec
push
ss
ret
mov
cwde
inc
int3
adc
cmp
push
mov
pushf
push
mov
scas
test
sub
dec
imul
sub
lods
dec
call
pushf
jl
and
addr16
mov
mov
leave
sar
push
pop
stos
sbb
adc
xchg
sub
mov
aam
ins
cli
mov
iret
adc
cmps
outs
leave
push
cs
inc
or
add
inc
lds
(bad)
iret
cmps
mov
ss
mov
shr
push
inc
xchg
cld
jno
out
ret
test
xor
and
cmp
dec
pop
arpl
adc
mov
add
cmps
cmp
xchg
dec
ret
or
xchg
inc
cmp
cmp
test
jb
mov
push
js
and
in
and
dec
inc
xor
xor
dec
sub
or
mov
loopne
loop
gs
fbstp
mov
mov
or
ret
pop
pushf
mov
enter
pushf
mov
lock
out
mov
daa
add
inc
sahf
sbb
cmc
pushf
shr
pop
pop
out
outs
aam
xchg
lds
pop
or
in
mov
pusha
jae
mov
shr
inc
mov
inc
push
int3
sub
cmp
jo
popf
cmp
adc
xor
cmp
mov
sbb
mov
and
ins
lahf
pop
dec
ficomp
sahf
sub
sub
cmps
ret
sub
(bad)
leave
inc
fwait
stos
push
popf
xlat
mov
cmp
jmp
in
bound
add
add
adc
xor
je
repz
aam
xchg
sti
loop
jae
cmps
cmps
int3
mov
xor
mov
sti
scas
sub
pushf
cld
xlat
mov
pop
test
mov
inc
cmp
in
cld
scas
ror
xor
pushf
fwait
mov
pop
movs
rcl
inc
mov
add
add
or
mov
loope
addr16
mov
inc
sar
call
ret
ds
inc
push
mov
mov
dec
mov
push
sahf
xor
mov
lds
fiadd
call
dec
shl
ja
and
or
movs
push
adc
shl
aad
cmp
pushf
in
mov
mov
xchg
cmps
xlat
inc
in
mov
xchg
mov
pop
(bad)
sar
push
xor
movs
clc
loop
cmps
lods
push
and
aam
repnz
inc
and
ret
xchg
jg
mov
rol
jle
clc
bound
xchg
jecxz
imul
cmovl
inc
pop
mov
sub
cli
mov
popa
lds
shl
out
sbb
push
dec
into
fldcw
inc
shl
lock
test
adc
test
rol
inc
mov
inc
cmp
push
or
jmp
ja
and
push
and
or
out
cli
add
xchg
loopne
sbb
(bad)
mov
inc
xor
mov
jae
dec
inc
popf
dec
shl
fwait
push
adc
aam
ja
dec
xlat
adc
ret
inc
add
sub
jge
movs
inc
sbb
into
dec
or
es
push
sub
xchg
cmp
rcl
pop
jp
jecxz
jle
adc
pop
and
retf
pop
xor
sub
imul
dec
adc
cmp
int3
fucom
sbb
adc
into
shl
inc
sti
or
nop
jge
ret
add
jne
rcl
pushf
push
adc
repz
lds
and
inc
dec
fsub
pop
and
in
push
mov
mov
jl
scas
call
out
cmps
mov
fadd
clc
xchg
sub
retf
mov
ss
sbb
add
jb
adc
pop
fsub
fsubr
adc
nop
ret
add
and
add
or
dec
test
jnp
shr
pushf
push
push
arpl
xchg
pop
jo
les
retf
mov
or
shr
xor
sub
push
fadd
int3
dec
(bad)
mov
es
(bad)
sti
movs
jl
pushf
cmp
adc
in
aad
cmp
dec
ins
ret
adc
push
and
adc
or
mov
dec
repz
fiadd
inc
and
xor
xchg
scas
rol
fdiv
ficomp
xor
cmp
pop
mov
nop
ret
fdivp
jmp
dec
mov
and
retf
inc
push
adc
(bad)
loope
jne
repnz
imul
add
ret
push
int
ror
push
add
aaa
ret
pushf
mov
ds
pop
outs
mov
jne
ret
ja
sbb
sub
push
mov
aas
xor
out
and
ins
stc
push
sbb
daa
popf
push
push
stos
push
retf
dec
pop
jmp
xor
movs
cmp
test
sub
push
ins
inc
(bad)
jmp
xchg
pop
xor
or
add
or
je
mov
aam
jp
(bad)
and
ret
out
push
jb
sub
add
pushf
int
pop
iret
inc
shl
paddq
in
mov
xchg
ins
add
sub
(bad)
shl
push
push
add
sub
mov
movs
inc
mov
les
or
sbb
xchg
shl
inc
xor
movs
cld
inc
std
pushf
cmp
movs
pushf
loopne
sub
scas
lea
scas
dec
cmp
call
retf
and
add
stc
jmp
push
inc
or
or
push
popa
aam
xchg
and
rol
retf
and
pop
add
jmp
jecxz
mov
cmps
xchg
jns
jnp
push
pop
sbb
test
push
dec
ss
lahf
rol
mov
mov
pop
inc
sbb
sti
jl
jne
pushf
xchg
jge
(bad)
(bad)
cmc
movq
fdivr
add
std
xchg
dec
hlt
add
(bad)
mov
and
ror
sub
(bad)
icebp
stos
scas
in
enter
push
dec
xchg
sub
push
ins
push
pop
inc
pop
or
lahf
xchg
pushf
jp
add
jmp
loope
rcr
add
and
xchg
sbb
ret
out
mov
xchg
idiv
cmp
ficomp
js
cmp
xchg
or
push
loopne
pushf
(bad)
xchg
xchg
icebp
fiadd
and
cmp
jne
pop
mov
ret
pop
in
outs
in
cmps
pop
stc
shl
int
call
aas
fcom
fisub
mov
aam
mov
sbb
xchg
jp
mov
xchg
jle
rol
int3
(bad)
push
inc
push
inc
lods
test
dec
pop
dec
cld
jg
scas
mov
ret
mov
call
pushf
mov
popf
mov
int3
sti
cwde
mov
test
movs
nop
aad
mul
add
fwait
aaa
jecxz
mov
add
es
(bad)
fimul
hlt
cld
xchg
inc
aad
sub
outs
mov
stc
pushf
mov
mov
jbe
stos
clc
ror
fdivr
pop
loopne
scas
inc
push
xchg
push
shl
inc
mov
mov
int3
and
int
jmp
bound
push
ret
lock
mov
lods
inc
retf
xchg
sub
jns
rcr
rcr
jmp
rcr
pop
imul
popf
ret
fcmovnu
add
cmps
push
jae
dec
xor
stos
dec
inc
outs
out
mov
mov
or
iret
mov
push
loopne
lahf
adc
popa
ds
outs
leave
scas
xor
pushf
retf
aas
mov
imul
and
mov
cmps
add
popfw
add
lahf
call
pop
repz
xlat
mov
jg
shl
aam
movs
or
test
push
cmp
stc
adc
addr16
xchg
in
xchg
add
sub
loop
push
jmp
in
sub
in
scas
cdq
int
mov
int3
push
or
or
mov
push
(bad)
aad
cmps
sub
js
pushf
int3
add
dec
jo
in
ror
(bad)
int
mov
push
ret
ja
cld
jnp
xchg
inc
xor
arpl
movsx
rcl
cmc
inc
out
aas
cdq
cmp
or
ret
mov
aas
inc
cwde
sbb
test
xchg
mov
pop
pop
in
leave
xlat
aad
ret
dec
mov
cmc
push
enter
xchg
inc
loope
test
aam
nop
dec
imul
xchg
call
xchg
inc
(bad)
enter
cmp
rcr
cdq
lahf
xor
xchg
imul
pushf
in
adc
sbb
adc
push
pop
and
es
in
sbb
outs
loopne
mov
ret
(bad)
mov
ds
mov
dec
mov
cld
jbe
retf
out
ins
mov
and
inc
out
sub
mov
pushf
mov
xchg
mov
aam
mov
je
std
pusha
inc
ret
out
push
sbb
mov
push
push
add
popf
xchg
sub
aam
cs
aaa
cmps
jbe
ret
mov
sbb
rep
fcomp
(bad)
mov
test
sbb
xchg
rol
pushf
push
push
pop
push
pushf
je
pop
fist
jns
ins
test
dec
sub
mov
pop
or
retf
in
ror
inc
inc
mov
into
jne
mov
mov
mov
frstor
into
push
jne
lods
mov
mov
pushf
mov
push
cmc
test
cwde
retf
nop
ret
jl
(bad)
ins
inc
push
xchg
xchg
(bad)
mov
bound
sbb
sar
imul
jne
jp
mov
jp
xor
mov
jp
stos
mov
pushf
fsub
rcl
mov
add
cmps
xor
lods
cdq
add
aad
xchg
xchg
sub
push
adc
xchg
loop
mov
mov
ror
sete
ret
dec
gs
out
clc
and
sbb
cdq
fistp
add
les
mov
or
add
inc
(bad)
std
in
aaa
popa
ins
mov
or
cmp
sbb
rcr
scas
xchg
inc
mov
or
mov
fcomp
push
jae
add
xor
adc
sar
cdq
aad
loope
ret
dec
pop
in
xor
add
popa
xor
push
cmp
sahf
and
mov
cmp
push
sar
push
pop
xor
mov
fadd
xchg
idiv
cmp
mov
lods
mov
mov
pushf
call
xor
sar
mov
fadd
int3
sub
jae
js
sub
popa
cmps
and
jl
loopne
inc
xchg
ret
imul
xor
mov
fistp
mov
jnp
shr
mov
cmp
stos
xchg
xchg
xor
pushf
cmp
add
aad
shr
dec
adc
daa
lds
ret
adc
outs
jns
fadd
das
loope
and
jp
sahf
mov
ret
call
inc
cmc
(bad)
jb
test
add
mov
rcr
pushf
sbb
inc
test
pop
(bad)
(bad)
cmp
dec
jmp
aam
scas
inc
imul
out
jns
cmc
ins
mov
shl
rol
shl
(bad)
stos
rcl
out
ins
lahf
imul
std
mov
mov
or
dec
pop
fwait
inc
cmp
and
ret
pushf
(bad)
cmpps
pop
cmc
jle
nop
lahf
and
dec
in
xor
loop
ja
xor
sub
les
aas
fld
sti
mov
outs
add
div
(bad)
pop
mov
jp
loop
pop
push
and
xchg
ins
jp
retf
inc
shr
inc
(bad)
push
pop
mov
lahf
dec
or
out
aam
neg
dec
sub
jno
shl
es
movs
cmp
xor
pop
mov
push
push
jns
popa
bt
sub
push
aam
mov
test
popf
adc
inc
sahf
ret
add
outs
push
inc
cs
add
xchg
mov
shl
aam
stos
push
mov
jno
pop
or
inc
push
mul
mov
sbb
push
pop
inc
inc
in
in
inc
cld
test
pushf
aam
pop
inc
mov
pushf
daa
sub
cmps
add
mov
das
push
dec
mov
rol
movs
pushf
and
nop
ins
aam
in
shl
repz
mov
iret
cmovp
sub
xor
cdq
sbb
les
and
ret
mov
pop
sub
pushf
lds
pop
addr16
adc
arpl
jmp
inc
xchg
push
std
sti
adc
xor
aam
enter
fidiv
mov
push
stc
test
xchg
(bad)
lods
xchg
leave
add
push
and
push
scas
cmp
out
sub
dec
adc
cli
setle
(bad)
push
imul
or
cmp
rcr
ja
fstp
sbb
aam
cwde
shr
fdiv
mov
cmp
iret
xchg
xor
(bad)
lods
cmp
inc
fld
cmp
jno
and
push
in
xchg
cmp
ror
int3
xchg
daa
sti
aas
test
add
push
xor
mov
outs
movs
scas
mov
cmc
push
das
pushf
cli
cmp
or
jmp
mov
mov
ret
inc
adc
sbb
inc
adc
mov
popf
mov
(bad)
push
jmp
xchg
cld
jle
inc
ret
adc
aas
add
call
sbb
mov
imul
jp
or
imul
out
cwde
(bad)
ds
xchg
pushf
out
push
cmp
cwde
sti
sub
jnp
lahf
repz
sub
jb
sbb
rol
ret
mov
mov
cmp
in
pop
call
sbb
push
jne
xchg
les
jmp
imul
(bad)
arpl
mov
out
mov
icebp
lahf
mov
fidivr
add
fnstcw
dec
mov
(bad)
addr16
cmp
mov
repnz
inc
jmp
mov
sub
fstp
dec
adc
and
sub
hlt
xor
sti
out
push
sub
inc
test
ds
sbb
popf
cmp
or
cmc
add
cli
aas
jmp
jb
inc
call
out
inc
mov
or
aas
mov
les
push
sahf
cmp
(bad)
mov
inc
dec
mov
add
sub
push
popf
ds
dec
or
gs
sbb
pop
cmp
ret
inc
cmps
leave
add
add
cmp
sbb
mov
adc
dec
fcmovnu
pushf
mov
xor
int3
push
fs
inc
sahf
mov
in
pop
push
imul
mov
std
retf
outs
shl
xchg
lods
xor
mov
dec
popf
push
pop
cwde
hlt
rcr
push
and
loop
cmp
in
repz
ja
cmc
jae
jnp
repz
dec
lods
adc
fistp
dec
sub
inc
pushf
mov
ficom
(bad)
mov
xlat
rcl
push
xor
ret
inc
ret
or
inc
dec
fimul
xchg
inc
jo
test
nop
(bad)
adc
pop
out
fwait
in
retf
xchg
add
sub
movs
scas
ret
int
sub
cmp
and
push
stc
ret
mov
cmp
loop
and
out
jnp
mov
mov
push
mov
les
mov
fadd
stc
adc
ja
cmp
jnp
retf
(bad)
aas
popf
bound
mov
jb
xchg
stos
hlt
push
pushf
sbb
mov
push
imul
add
cmp
jns
push
lods
rcl
ror
das
push
add
push
jmp
push
(bad)
shr
icebp
push
dec
outs
sbb
pop
jl
mov
enter
push
inc
cmp
rcl
(bad)
mov
fidivr
lea
fmul
callw
inc
mov
xchg
jbe
in
xlat
ret
mov
imul
ror
mov
ret
xor
mov
inc
ret
mov
push
sbb
add
jl
leave
inc
xor
aam
stos
jb
fimul
sbb
pushf
mov
loopne
jl
lea
aad
and
cld
pusha
int3
push
rol
mov
nop
and
mov
mov
pushf
adc
icebp
adc
loopne
or
mov
call
out
mov
inc
rol
fst
daa
xchg
jmp
je
inc
add
and
neg
mov
mov
pop
daa
push
pop
pop
or
iret
mov
popf
mov
sbb
shl
pop
int
fdivr
shl
mov
aam
push
sub
in
out
adc
rol
inc
sub
mov
mov
pop
pushf
scas
cmp
mov
jecxz
sar
sbb
mov
inc
xchg
cmc
xor
adc
aam
pop
push
mov
add
pop
push
stc
pop
xor
scas
adc
bound
scas
jnp
outs
fwait
push
xchg
aam
jb
aas
sub
xor
or
xor
xor
mov
cmc
jp
or
or
xor
imul
xchg
jb
cmp
popf
call
stos
arpl
ror
popw
into
bound
dec
sbb
fs
sub
popa
pushf
push
in
mov
mov
gs
cmp
adc
imul
ret
mov
sub
inc
into
js
sbb
inc
sub
cmp
call
or
in
(bad)
mov
ds
cmps
ret
int3
daa
popf
es
fst
rol
and
gs
inc
test
jne
rcl
cmp
add
outs
dec
jne
stc
sar
(bad)
mov
mov
into
aaa
call
(bad)
and
fldl2e
inc
adc
mov
mov
fcom
pop
cmp
xchg
or
lods
leave
or
add
mov
test
inc
dec
mov
mov
pushf
add
test
shl
jae
and
inc
add
add
push
mov
xor
sbb
pop
xchg
xchg
pop
inc
ret
cmp
xor
test
inc
or
or
jnp
xor
mov
aas
mov
in
test
sbb
xor
mov
sar
xchg
aas
ins
adc
(bad)
sub
test
out
cs
cli
add
push
pop
cmps
inc
adc
xor
dec
outs
adc
adc
stos
loopne
or
xor
mov
jb
jg
pop
pushf
xlat
aaa
mov
inc
sbb
shr
mov
adc
cmp
popf
inc
pop
stc
sar
inc
int3
pop
xor
sbb
icebp
pushf
movs
fcom
fsubr
dec
(bad)
aam
outs
sub
pxor
ret
mov
sub
stc
cmp
mov
jns
outs
add
xchg
pop
aas
mov
loope
in
addr16
icebp
sub
xor
jle
or
xor
push
rol
jmp
pop
mov
and
add
sar
adc
movs
pop
pushf
and
aam
sub
test
cs
popa
(bad)
mov
aam
jno
jmp
and
cmp
test
xchg
lea
cs
pop
inc
je
ret
jbe
(bad)
lods
pop
arpl
mov
fwait
shr
lods
movs
lods
push
add
inc
jecxz
call
pop
pushf
mov
loop
in
arpl
pop
cmp
inc
iret
leave
jl
das
mov
sub
ss
aas
stos
add
ins
xlat
call
pop
out
rcl
xchg
cmp
and
xchg
pushf
icebp
adc
xor
fidiv
test
sbb
fistp
dec
sahf
cmp
rol
mov
and
retf
rol
pop
and
inc
and
inc
mov
push
mov
ret
jno
cs
cmp
(bad)
les
fsub
or
imul
loop
jno
es
imul
pushf
mov
add
(bad)
out
push
push
mov
(bad)
push
inc
call
xchg
dec
rol
push
in
arpl
test
lods
(bad)
and
ja
ret
add
movs
cmp
shr
and
mov
aaa
test
push
adc
pop
jle
dec
call
sbb
(bad)
xor
lods
rcl
sub
cmps
(bad)
mov
inc
into
fbstp
ins
cld
mov
arpl
cli
jmp
loope
add
fwait
shl
push
and
mov
xchg
lds
jge
pop
lahf
pop
pop
subps
stos
cwde
lahf
mov
pop
inc
mov
mov
hlt
(bad)
mov
clc
cwde
imul
psubb
icebp
dec
push
push
add
mov
jmp
std
dec
aam
xor
popa
xchg
ja
aam
sbb
in
push
scas
push
addr16
sbb
mov
sar
xchg
aam
lock
pop
xchg
cdq
mov
pop
push
adc
pop
clc
fdivrp
cwde
loopne
les
xor
sub
xor
cmp
mov
cmp
mov
jmp
fld
cmps
out
aam
sub
inc
sub
pop
sub
daa
clc
jne
cmp
add
push
pop
loop
mov
repnz
fld
fwait
fwait
ror
jo
and
jle
(bad)
cld
xor
mov
ret
cmp
inc
cmp
imul
iret
sub
test
mov
mov
lea
test
pop
(bad)
aas
(bad)
ss
aam
dec
push
jo
mov
dec
add
mov
cmp
int3
retf
test
out
dec
das
jne
fwait
aaa
sbb
or
sub
int
test
in
fmul
fnstcw
jl
gs
pop
repz
add
test
test
xor
(bad)
adc
adc
jl
and
add
(bad)
sbb
cmps
(bad)
nop
cmp
mov
dec
data16
out
sbb
and
add
xchg
inc
mov
and
xlat
mov
adc
fadd
pop
mov
pop
sbb
push
addr16
inc
(bad)
scas
outs
aam
adc
bound
or
inc
test
(bad)
sar
stc
mov
fcomi
stc
and
aam
fdiv
out
das
out
ror
cmp
sar
std
test
ret
(bad)
ror
add
scas
cmc
call
pushf
in
and
(bad)
fld
js
xchg
xchg
or
xchg
iret
fst
(bad)
mov
loopne
call
inc
push
imul
cmps
data16
lods
pushf
push
cwde
sub
cmp
out
aam
test
lods
popa
retf
pop
out
es
mov
ror
sar
sub
mov
das
popf
shl
jl
shl
sbb
sti
ret
push
adc
fs
xor
pop
adc
or
icebp
cmps
pop
aas
fwait
inc
in
jo
scas
pop
adc
jne
and
and
outs
jne
xor
int3
cmps
shr
push
gs
xor
sbb
xlat
pop
scas
pushf
ins
mov
pop
scas
or
mov
out
cmp
imul
sub
outs
inc
cmp
shr
cdq
(bad)
cli
imul
pop
fsub
test
add
mov
out
sbb
test
cmc
rcr
in
in
loop
sbb
fsub
inc
out
lea
shl
or
div
enter
sub
stc
jns
mov
loopne
dec
inc
test
stc
pop
inc
jae
(bad)
fs
hlt
stos
jmp
pop
cld
jbe
push
je
push
icebp
lds
ffreep
outs
ins
jg
clc
sbb
rol
pushf
pushf
mov
jo
out
mov
xchg
push
add
daa
inc
dec
push
nop
bound
outs
pop
cmp
test
(bad)
repnz
jo
or
jae
fisttp
mov
clc
fdiv
add
mov
dec
cmp
arpl
rol
cmp
jbe
ret
nop
and
adc
adc
loop
cmp
sbb
pop
sar
xchg
ret
aas
(bad)
pop
cmp
xor
aas
fst
leave
int3
add
sti
sub
cmp
adc
stos
je
repnz
lock
mov
mov
add
fistp
add
adc
sub
or
mov
inc
xchg
pop
jns
loopne
sub
rcl
add
pop
mov
mov
sbb
popf
popa
inc
pusha
call
jp
ins
or
inc
ins
sar
sbb
inc
push
or
and
int3
or
inc
adc
jns
sbb
sub
ss
mov
sahf
cmp
movs
repnz
movs
add
outs
aam
popa
movs
scas
inc
bound
add
cmp
cmp
cmp
mov
inc
adc
sbb
sbb
xor
mov
retf
sub
mov
call
call
in
add
scas
mov
cmp
mov
adc
pop
das
arpl
mov
repnz
or
retf
cmps
addr16
xchg
loop
adc
ret
xor
and
pop
jl
xlat
repnz
loopne
sbb
sbb
fidiv
aad
mov
mov
mov
push
inc
mov
(bad)
push
dec
mov
out
mov
inc
fisub
sbb
xchg
jb
fld
imul
push
into
inc
test
jns
inc
in
pop
sub
pushf
xchg
aas
(bad)
cmc
xor
cli
stos
xor
xchg
ret
ins
leave
pop
sub
aas
cmp
out
dec
icebp
stc
(bad)
mov
ficom
inc
mov
pop
push
pushf
jg
popa
outs
or
cwde
lock
xchg
pushf
inc
dec
ret
inc
jecxz
test
push
cmp
(bad)
popf
mov
pop
jne
or
das
push
inc
cmp
mov
add
lock
cmc
shl
or
ja
imul
cmps
sub
(bad)
(bad)
shl
sahf
push
and
mov
jecxz
cmp
and
push
mov
rcl
icebp
or
sub
lds
fist
mov
inc
inc
and
stc
pushf
ins
in
mov
nop
iret
jmp
mov
add
adc
fcom
or
or
shl
repnz
aad
leave
pushf
push
add
cmp
cmp
aam
xor
inc
inc
sbb
and
push
add
pop
xchg
jb
fiadd
cmp
test
out
dec
repnz
and
ss
sbb
jb
mov
out
sbb
mov
push
rol
sbb
mov
push
add
popf
inc
xchg
adc
inc
mov
inc
mov
cmc
and
sbb
mov
and
test
jge
or
nop
dec
(bad)
retf
hlt
aam
pop
sahf
mov
dec
jp
xchg
daa
std
loop
retf
ret
lock
or
jae
xor
sysenter
imul
ret
loope
int
lahf
inc
inc
(bad)
cli
fisub
xchg
fld
nop
mov
imul
cmc
inc
popf
mov
sub
mov
jp
cmps
lahf
ins
outs
repnz
adc
inc
cmps
ret
dec
sbb
pushf
jge
sub
add
mov
shr
or
fbld
mov
and
in
pushf
xchg
sahf
outs
pop
or
repnz
call
iret
jmp
std
xor
push
pushf
push
idiv
out
pop
int
rcl
fbstp
jno
clc
or
imul
cmp
sbb
mul
mov
imul
push
xor
mov
inc
push
data16
ss
sahf
inc
cli
out
inc
scas
sbb
jl
and
push
push
add
sar
xchg
mov
mov
rol
imul
inc
out
push
xor
ret
pop
icebp
pushf
les
mov
xor
ror
xor
inc
movs
ret
bound
xchg
fscale
sbb
loop
push
icebp
stos
pushf
adc
jge
popf
ja
rcl
scas
pop
pusha
dec
iret
sbb
retf
sub
push
sti
cmp
xor
pop
dec
jmp
rol
aaa
das
test
adc
pop
lea
sahf
popf
inc
pop
mov
pop
retf
jae
sub
xchg
or
outs
jp
loopne
(bad)
call
inc
push
jg
pushf
sbb
push
gs
aam
sti
mov
adc
popf
mov
push
lds
push
or
sbb
push
jge
cld
cli
mov
aam
jne
call
push
push
pushf
es
ja
push
aas
nop
aaa
jmp
sub
push
pushf
paddsw
movs
jb
test
sar
aas
clc
loopne
inc
xchg
or
and
test
or
inc
xor
ret
dec
popf
jle
shr
aam
mov
pop
ds
sub
ret
frstor
jmp
sbb
sub
ds
adc
cmp
mov
mov
in
mov
fadd
and
shl
in
fisub
int3
stos
pop
clc
add
fstp
arpl
or
mov
push
cmp
or
cli
mov
arpl
aad
mov
test
jno
inc
retf
retf
mov
popf
scas
adc
aas
add
add
add
push
retf
sbb
in
inc
sub
add
pop
sahf
xor
jne
or
std
inc
jl
xor
idiv
cmps
fwait
retf
pop
jmp
cmp
xchg
iret
fdiv
outs
xchg
cmp
je
inc
jb
ret
adc
mov
aam
gs
add
aam
and
movs
mov
rcl
or
push
sub
xor
mov
ret
dec
adc
retf
rol
jl
out
xchg
rol
fcmovnbe
loopne
repnz
push
enter
jg
data16
ret
xor
dec
push
mov
rcl
(bad)
fcomp
ret
popa
scas
inc
mov
xor
in
sbb
xchg
ret
vsqrtps
inc
loop
lods
sub
sbb
push
push
dec
add
pop
pop
fld
xor
fs
jmp
or
pop
out
lods
push
js
fs
mov
jne
add
fiadd
aaa
jg
push
jno
mov
and
test
pop
mov
pop
push
les
lock
pop
into
addr16
cmps
xchg
loope
shr
(bad)
aaa
or
inc
xor
loop
nop
sub
jge
add
pop
push
movs
sar
arpl
xchg
test
pop
jp
adc
outs
fidivr
lea
sbb
jecxz
cmp
jae
ja
int3
gs
or
retf
ret
bound
aas
addr16
(bad)
ficomp
repnz
int
dec
pop
arpl
les
xchg
test
fs
fisttp
lahf
shl
mov
xor
ret
sub
sti
aas
mov
(bad)
mov
pushf
xchg
es
rcl
clc
or
xor
mov
idiv
test
fbld
leave
mov
shl
ins
or
mov
movs
mov
inc
pop
cdq
dec
mov
pop
das
cdq
rcl
scas
shr
jg
jp
test
cmps
mov
push
rcl
into
xchg
adc
ins
ds
sahf
fsub
lds
sbb
ss
aas
push
movs
in
xchg
add
fsub
push
cmp
mov
test
push
sbb
ds
std
pusha
fisttp
stos
adc
fsub
into
mov
or
add
xor
into
pushf
sahf
xor
fwait
scas
ds
in
push
not
div
cdq
ret
ins
dec
fistp
dec
adc
mov
std
mov
ja
xlat
imul
xor
add
or
mov
dec
fs
or
icebp
inc
mov
(bad)
retf
push
das
jo
ins
inc
pop
dec
retf
aam
test
js
ret
call
and
inc
dec
outs
js
test
mov
mov
adc
aaa
jle
cmp
int
add
xchg
add
mul
mov
dec
add
pop
ret
adc
dec
aam
movs
mov
fidivr
lods
pushf
push
cli
cmp
xor
dec
inc
jmp
or
and
xchg
dec
repz
movs
cmps
ret
rcl
inc
mov
inc
retf
stc
sbb
adc
es
xchg
or
(bad)
cmps
rcr
shr
sahf
retf
cs
push
jo
push
dec
repnz
cmp
push
add
sub
cdq
movs
mov
cmp
mov
shr
scas
call
movs
jg
pushf
jnp
adc
adc
pop
add
push
fwait
das
repz
ds
sti
pop
cld
push
or
pop
or
push
(bad)
and
addr16
aad
xor
pop
out
ds
and
ins
sub
outs
mov
mov
mov
iret
ret
cwde
mov
retf
cmp
aam
test
loop
add
mov
aam
gs
js
pusha
cmps
mov
dec
add
les
popf
shl
pushf
adc
data16
cmp
lahf
dec
mov
out
aam
push
adc
retf
lods
cmp
adc
dec
mov
mov
stos
jp
jo
neg
ret
ja
scas
cmp
xor
rcr
add
xor
nop
std
lea
rcl
lods
pop
cmps
push
in
(bad)
cmp
rcl
push
aam
jp
int3
push
repz
pop
ret
rcr
aam
ins
and
dec
sub
xor
in
cmps
cs
xor
lock
pushf
dec
jle
arpl
ins
adc
loope
outs
xchg
mov
and
mov
arpl
aam
fst
xchg
cli
ja
or
rcl
sub
bound
sub
cmp
mov
outs
pusha
mov
out
stos
push
aam
inc
pusha
enter
leave
or
push
mov
aam
mov
(bad)
dec
ret
or
test
add
or
ins
enter
rcl
ret
repnz
in
mov
mov
and
les
fadd
mov
cli
stc
dec
jbe
aam
adc
jecxz
add
out
shl
aam
dec
ret
inc
and
das
aas
mov
lds
(bad)
or
aam
xor
sbb
push
add
fisttp
aad
xor
cld
mov
stos
imul
repnz
xlat
sub
rol
(bad)
call
push
mov
mov
push
shl
xchg
enter
lea
iret
aaa
(bad)
(bad)
ss
cwde
xchg
mov
ret
mov
and
rol
add
popf
cdq
mul
pop
aam
or
cdq
cmp
dec
movs
ret
mov
cld
inc
loope
cmp
add
mov
int3
xor
mov
jo
retf
jns
mov
in
rcl
push
daa
cmp
xor
out
int3
mov
or
mov
cmp
retf
aad
jmp
xchg
push
jnp
aaa
and
pushf
mov
js
data16
push
pusha
out
mov
jae
sahf
dec
test
xor
xor
sbb
pop
pop
inc
adc
jae
adc
(bad)
(bad)
sar
fsub
aad
add
in
xor
cli
sbb
clc
or
rdpmc
jge
inc
gs
shl
add
push
retf
mov
shl
ret
lahf
mov
jo
fldln2
ret
xchg
sar
cmps
int
jno
lds
adc
xchg
mov
jle
imul
xchg
loopne
mov
sahf
lahf
inc
xchg
or
rol
in
icebp
mov
sub
ror
push
add
ret
retf
push
clc
jg
sub
(bad)
mov
xor
gs
mov
aam
pop
push
repz
test
das
or
dec
cmp
and
mov
daa
call
cld
fstp
xor
outs
pusha
inc
pop
sub
mov
xchg
and
xchg
leave
mov
adc
and
add
pop
and
jae
fdiv
xor
push
push
adc
lds
mov
test
inc
into
scas
mov
jb
push
(bad)
xlat
mov
dec
dec
pop
aam
xchg
(bad)
cs
xor
or
pop
mov
inc
sub
and
mov
test
and
mov
lock
pop
add
ss
jmp
pop
dec
loop
mov
jb
test
jg
out
inc
jp
unpcklps
inc
sub
add
repz
and
pop
and
jo
mov
xchg
cmps
int3
add
push
dec
sub
mov
push
in
aas
stos
call
lahf
adc
popf
xchg
xchg
pop
retf
adc
rcr
pop
inc
test
ret
test
pushf
repnz
fimul
mov
push
xchg
mov
(bad)
jge
mov
cmp
xor
popf
jmp
inc
add
jp
aad
stc
adc
pop
fnstsw
or
sbb
ss
adc
je
fsub
repnz
dec
inc
xchg
sub
test
push
dec
sti
fwait
repz
pushf
add
push
cwde
int3
pop
pop
jl
inc
ins
pusha
adc
or
fs
mov
mov
push
in
xor
dec
ja
xchg
sbb
dec
mov
sbb
pop
leave
test
retf
jl
pop
ret
pop
out
icebp
aam
and
pop
not
or
daa
retf
dec
ret
inc
dec
jne
mov
mov
jmp
cmp
cmc
in
in
cmp
cmp
mul
mov
push
leave
xor
cmp
call
pushf
sbb
imul
(bad)
cmp
fnsave
call
lock
xor
mov
pop
xchg
iret
sti
or
shl
sbb
mov
(bad)
xchg
push
call
aam
xchg
inc
xor
cld
pop
inc
sbb
xor
sbb
outs
and
daa
mov
sub
les
jge
imul
daa
inc
fdivr
fsub
pop
cmp
popf
mov
outs
lds
cld
ror
cmp
cmps
mov
lock
pushf
lods
inc
js
cdq
and
xor
sub
rcl
push
into
aas
mov
pop
pop
ror
out
jg
pop
ret
and
ss
icebp
js
sbb
mov
sti
inc
popf
pop
sbb
mov
and
inc
sar
jo
add
dec
aam
daa
add
ret
adc
or
cmp
pop
xchg
xor
retf
fwait
test
jb
icebp
inc
(bad)
in
paddq
loope
push
sar
xchg
ret
sahf
push
pop
pop
aas
enter
ds
aad
inc
in
jge
ja
mul
sahf
sub
(bad)
(bad)
cmc
jmp
dec
adc
popf
mov
xchg
jg
adc
popa
xchg
sbb
repnz
dec
pusha
int
ret
jbe
lahf
pop
mov
popa
jb
cdq
stos
pop
imul
push
pop
repnz
in
inc
jmp
inc
sbb
or
icebp
sti
xlat
mov
cmp
mov
push
neg
sahf
jnp
push
pop
repz
jb
hlt
or
inc
imul
add
mov
sar
cld
in
push
ins
mov
cmp
jno
sbb
iret
xor
cmps
out
mov
loopne
mov
mov
(bad)
mov
inc
retf
ret
sub
out
aas
and
rcr
scas
jg
xchg
add
dec
xchg
fadd
sub
enter
pop
(bad)
aad
gs
std
je
add
out
data16
xor
dec
aam
mov
push
(bad)
or
pop
dec
mov
arpl
(bad)
aad
pop
mov
pushf
xchg
mov
sbb
div
enter
and
gs
xor
popf
xchg
scas
cmp
mov
lahf
push
ins
push
mov
jne
jne
jp
movs
pop
fsub
adc
xchg
add
test
aas
mov
inc
fsub
sbb
ret
fidivr
cli
in
rol
popf
mov
mov
hlt
mov
inc
jnp
leave
clc
out
jne
arpl
mov
(bad)
shl
mov
stos
jne
inc
inc
cwde
xchg
movs
add
pop
jo
repnz
push
mov
lods
loopne
cs
mov
shl
inc
gs
lods
adc
(bad)
mov
or
cmp
ins
mov
ret
jnp
je
stos
loopne
add
mov
repz
push
je
add
out
mov
xchg
icebp
or
ret
loop
or
mov
sti
pop
sub
push
mov
add
sbb
fld
enter
aaa
sub
jge
fs
push
lods
mul
ffreep
icebp
cli
shr
xor
pop
into
ins
inc
ffree
aas
les
cmp
je
adc
dec
movs
arpl
pop
cdq
int
push
popa
test
pop
fcomp
daa
inc
lahf
adc
mov
cmp
ret
dec
jmp
icebp
fidiv
mov
ret
mov
scas
mov
cmp
xchg
fdiv
das
mov
es
sar
dec
or
inc
adc
push
daa
cli
jmp
push
mov
adc
enter
inc
jmp
push
pushf
cld
and
jge
sub
xor
movs
and
jle
mov
pushf
out
xlat
not
scas
cwde
pop
aam
mov
fdiv
jbe
aam
dec
outs
ja
je
aam
adc
xchg
fsubr
add
sar
adc
leave
mov
inc
hlt
ret
sub
inc
mov
into
in
popf
jge
mov
icebp
call
inc
mov
(bad)
pop
out
neg
cmp
ror
das
mov
clc
and
aam
pop
rcl
inc
cli
pop
ret
shr
into
push
mov
sbb
in
mov
shl
jle
outs
hlt
sub
inc
ret
pop
push
add
jecxz
aas
rcl
sbb
rol
jl
popf
xor
hlt
cwde
inc
inc
jl
mov
pushf
xchg
lahf
and
mov
jnp
inc
xor
scas
and
ds
ins
sbb
aam
test
and
inc
cmps
xor
mov
jmp
addr16
adc
pop
and
dec
ret
push
mov
dec
mov
jo
sub
sti
pushf
xor
js
dec
pop
lods
mov
data16
das
xchg
mov
xor
push
adc
(bad)
mov
or
mov
outs
pushf
pushf
and
cmc
movs
push
(bad)
or
rcl
cmps
(bad)
sub
xor
cld
test
sbb
scas
outs
mov
lods
mov
test
cmp
inc
and
cmp
cdq
outs
gs
inc
inc
adc
and
cmps
sub
and
call
fsubr
and
leave
pushf
or
jbe
or
fsubr
push
inc
pusha
jnp
mov
adc
cmps
add
movs
shl
sub
pop
test
adc
(bad)
jns
mov
xor
retf
cmp
data16
jnp
and
mov
jl
mov
sbb
add
mov
in
mov
js
ret
push
add
dec
ins
(bad)
xchg
inc
mov
jmp
inc
ds
dec
hlt
sub
pop
cmp
adc
lock
cmp
lahf
and
cmp
cwde
adc
jecxz
fsubp
sahf
scas
out
fstp
jbe
jmp
cmp
xchg
or
jb
test
outs
fcom
test
cmc
xchg
div
xor
inc
fstp
out
in
pshufw
mov
mov
call
(bad)
cmp
test
push
outs
adc
addr16
push
adc
and
jecxz
in
bound
rcr
cli
add
mov
popf
xor
in
mov
gs
ror
jmp
and
jp
inc
call
leave
push
mov
mov
in
jno
pusha
loopne
push
test
test
stos
kmovb
push
pusha
mov
mov
jl
dec
movs
cmp
or
jp
push
jmp
mov
adc
sahf
adc
int
adc
sahf
arpl
ficomp
xchg
sub
loop
dec
jo
in
retf
sbb
(bad)
and
push
enter
lds
inc
sbb
cmp
inc
cmp
adc
xor
mov
push
push
xchg
xor
fwait
shr
mov
call
adc
imul
into
push
mov
add
inc
mul
sbb
or
mov
xchg
inc
jo
out
pop
inc
mov
dec
dec
out
add
mov
push
fwait
je
ror
pop
in
into
rol
mov
loopne
dec
cmp
and
stos
sbb
pop
aam
cmp
ffreep
cmp
add
inc
das
gs
sub
jae
pushf
rcl
xchg
dec
and
shl
mov
cmp
test
scas
xchg
in
sub
jmp
ja
mov
mov
push
pop
hlt
mov
inc
mov
cmp
sub
mov
inc
mov
test
and
ins
mov
ret
fsubr
aaa
movs
(bad)
lock
add
push
js
mov
mov
pop
ss
ret
mov
test
dec
in
arpl
mov
xchg
aas
(bad)
jae
fild
fisubr
not
jmp
sbb
xchg
sahf
or
sbb
icebp
outs
xchg
sub
mov
inc
jge
mov
stc
and
inc
inc
mov
fidiv
mov
mov
mov
inc
mov
test
push
jbe
stos
mov
ret
sbb
adc
jle
cmp
adc
(bad)
pushf
jb
shl
mov
pusha
cmp
jmp
mov
das
(bad)
(bad)
ret
inc
cmp
pop
out
jb
fld
fistp
jecxz
inc
out
in
aam
mov
sbb
cmp
sub
loopne
mov
ins
out
jecxz
outs
stos
ret
xlat
das
cli
popf
xchg
ret
jg
ja
xor
and
sahf
inc
jecxz
cmps
arpl
sbb
mov
mov
inc
sahf
popa
pusha
inc
xchg
xchg
dec
and
adc
std
xchg
xor
pushf
ret
mov
xor
cli
aas
xchg
aad
stos
(bad)
aad
or
add
push
dec
fisttp
aam
lds
jge
jmp
retf
sbb
jae
push
mov
inc
into
cmp
rcl
scas
rcr
(bad)
and
mov
leave
mov
cmp
movs
push
ins
inc
dec
je
pushf
cmp
or
aam
lods
imul
out
jbe
adc
call
sub
stos
shl
adc
ret
mov
mov
sub
inc
add
test
ret
push
loope
cmp
adc
push
mov
pushf
and
inc
call
daa
jl
add
adc
or
sub
cli
xchg
or
adc
ret
in
xor
pop
cmc
jb
popf
shr
add
pusha
xchg
loope
inc
ja
aaa
sub
pushf
out
stos
test
jb
lahf
ror
stos
jno
fcomp
out
ret
iret
mov
inc
push
xlat
xlat
dec
fstp
adc
adc
push
xor
not
xor
test
xchg
dec
in
ret
movs
mov
shr
mov
mov
xor
in
aam
pop
or
int3
fwait
les
cmp
daa
cmp
ret
push
lahf
test
lods
sahf
mov
sub
sbb
adc
setnp
(bad)
cld
sbb
nop
inc
rcl
and
and
(bad)
pop
aam
xchg
cli
pop
push
outs
fs
mov
pop
sbb
xor
cmp
xchg
bnd
ret
mov
ret
add
xor
ins
stos
icebp
pop
mov
jp
cmp
mov
aad
and
loop
mov
add
cmps
pushf
sti
out
sar
push
in
mov
(bad)
jl
sub
cwde
jmp
inc
scas
cdq
js
mov
fwait
cld
and
rcl
scas
inc
xchg
fst
lds
dec
jbe
cdq
fwait
jno
mov
sbb
mov
loopne
(bad)
pop
cmp
imul
test
stos
fs
xor
mov
or
cmp
and
std
popf
arpl
mov
ins
pop
push
cmp
test
out
ret
xor
fucomi
repnz
idiv
int3
pop
add
imul
mov
iret
test
neg
sbb
pushf
jbe
mov
adc
popa
test
pop
push
ins
aaa
pop
(bad)
into
and
ret
add
push
sbb
adc
jno
inc
jmp
sub
add
sbb
xchg
and
adc
in
add
jg
rcl
ret
jo
and
mov
mov
(bad)
sbb
mov
jmp
add
xchg
ror
stos
movs
call
push
or
test
loopne
rol
jl
(bad)
in
test
add
in
cwde
rcl
sbb
xor
ss
cmps
(bad)
jmp
xor
ins
inc
mov
dec
inc
ror
or
(bad)
sti
xchg
mov
leave
shl
mov
adc
movaps
mov
inc
xor
outs
xor
call
adc
inc
mov
jns
call
dec
int3
out
adc
add
inc
out
sbb
std
outs
xor
call
retf
sbb
sbb
retf
xchg
imul
mov
ret
ret
repz
pop
nop
inc
inc
dec
push
outs
dec
int
jge
add
add
cmp
mov
jb
or
shr
add
dec
inc
jno
xor
inc
lds
cmp
shl
scas
dec
outs
sbb
adc
movs
inc
(bad)
stc
ret
xchg
dec
jmp
sti
movs
inc
test
mov
ret
mov
pop
cmc
add
push
add
pop
adc
fs
adc
adc
mov
dec
je
mov
and
ret
lds
lahf
or
push
popf
sub
or
adc
cmc
lods
mov
xor
pop
aam
(bad)
nop
push
push
pop
sub
sahf
shl
aam
xor
popa
cmp
fst
add
mov
mov
push
add
xchg
scas
retf
mov
retf
dec
add
or
push
lss
mov
fimul
jecxz
jae
add
push
daa
jl
nop
in
dec
mov
inc
push
mov
inc
fimul
dec
dec
xchg
xlat
xchg
jno
push
inc
mov
sub
out
call
pushf
jecxz
cmc
push
xor
leave
test
mov
add
xchg
mov
mov
test
fdiv
mov
cmp
or
aaa
cli
xchg
inc
fdivr
into
stos
or
push
xor
stc
push
pusha
jmp
or
rcl
jnp
lds
sbb
rol
into
inc
xchg
arpl
test
xchg
dec
(bad)
bound
adc
imul
dec
aam
inc
jge
cwde
mov
add
or
(bad)
(bad)
ds
inc
in
jmp
xor
retf
and
popf
push
fadd
inc
pop
stos
xor
retf
sbb
push
int3
cmps
in
fisttp
sbb
and
hlt
or
in
inc
adc
sar
aam
dec
pusha
xchg
sbb
mov
inc
inc
retf
mov
pushf
lds
mov
xchg
cmps
popf
xchg
not
ror
push
ret
loope
inc
test
cmp
xor
int
or
pushf
ins
add
sbb
lock
mov
ret
or
pop
jg
hlt
ds
xchg
xor
ret
arpl
cmp
mov
mov
aaa
mov
fs
not
fild
fistp
daa
pop
pop
mov
in
inc
imul
aam
cmp
or
int
lock
cwde
and
popf
lahf
jle
mov
bound
inc
(bad)
icebp
mov
add
ret
xor
inc
inc
push
neg
mov
xchg
add
pop
cs
push
mov
mov
cmp
xchg
or
out
or
aaa
(bad)
js
popf
push
aas
cdq
out
clc
dec
aad
jl
rol
test
dec
sbb
sbb
mov
add
pop
pop
mov
push
add
inc
aam
jbe
mov
out
cmp
xlat
setnp
add
pop
imul
out
mov
je
and
jle
cmp
mov
and
clc
xor
sbb
ss
push
or
icebp
dec
popf
pop
mov
xchg
mov
sti
sti
xlat
out
dec
and
cmp
daa
dec
mov
(bad)
xchg
sbb
xchg
ret
inc
out
out
int3
and
adc
(bad)
mov
and
pop
popa
call
(bad)
xchg
data16
or
ds
gs
add
iret
and
fldenv
or
pushf
or
push
inc
ins
inc
xchg
add
sahf
or
mov
addr16
(bad)
jae
imul
rol
fsubp
push
aam
push
xchg
ret
mov
repnz
cld
aas
enter
icebp
dec
imul
xchg
rol
pop
rcl
xor
iret
mov
xchg
rcr
xchg
fisubr
clc
outs
(bad)
je
lods
adc
mov
jno
mov
dec
pop
aas
movs
jmp
dec
imul
in
pop
cs
and
inc
add
xchg
push
cmp
or
xor
je
ins
cvtps2pi
mov
pushf
iret
or
cmp
aas
sar
ror
dec
inc
pop
pop
pop
push
xlat
(bad)
add
mov
ret
sbb
mov
sub
movs
nop
push
ret
sub
dec
pop
ds
popa
ja
mov
outs
ret
(bad)
loop
clc
jno
inc
cmp
cdq
lods
out
pushf
mov
mov
mov
pushf
(bad)
add
into
mov
cmp
lahf
enter
adc
jmp
loope
sbb
das
arpl
leave
out
das
outs
ret
push
je
iret
fwait
mov
pushf
loope
adc
xchg
and
sub
cmp
rcl
xchg
ret
test
adc
(bad)
leave
stos
sub
pusha
add
cmps
mov
aaa
ins
fnstsw
ret
dec
push
and
dec
test
test
jp
pushf
jg
movs
xor
pushf
sub
mov
imul
pusha
dec
pop
into
sti
cmovne
movs
pusha
jb
inc
adc
icebp
int3
lods
enter
pop
sub
jp
or
ret
mov
add
leave
sbb
pop
mov
inc
rcl
mov
mov
call
mov
adc
mov
in
jge
cld
mov
fs
and
ret
adc
stc
jnp
fadd
xor
mov
mov
pop
and
imul
jae
or
clc
mov
sbb
sar
ret
xchg
ret
(bad)
push
aas
or
adc
aam
adc
in
add
fidivr
aam
add
xchg
sbb
popf
jmp
push
sbb
shl
mov
cs
adc
ss
push
mov
(bad)
push
jns
push
add
xchg
(bad)
jae
jp
inc
xor
leave
scas
mov
test
cwde
mov
js
int3
pop
mov
ret
or
aas
mov
addr16
xchg
(bad)
icebp
add
pushf
(bad)
(bad)
adc
aad
fs
inc
pop
pop
add
dec
ror
and
inc
dec
mov
in
jecxz
(bad)
dec
test
sub
cmp
add
xchg
xchg
cmc
sbb
xchg
sbb
ins
in
stos
mov
mov
pushf
fldcw
cmps
pop
aam
ja
hlt
into
scas
or
(bad)
fldenv
fmul
sub
mov
push
call
xchg
ins
push
cmp
add
pop
call
(bad)
jl
cli
(bad)
rol
stc
mov
stc
ret
cmp
cmp
fcmovnu
movs
add
inc
adc
add
ret
xchg
(bad)
push
inc
lahf
ret
imul
xchg
push
pop
mov
je
aaa
cmp
outs
(bad)
shl
jecxz
int
aas
in
xchg
push
cmp
popf
mov
dec
jnp
or
sbb
or
cmp
daa
inc
xchg
jl
mov
ret
or
not
ss
fwait
cdq
push
into
icebp
cmp
hlt
aas
inc
ins
xor
stos
cmc
fwait
xchg
pop
sub
or
sbb
cmps
rcr
int
mov
pop
and
lods
sti
jp
and
imul
push
and
lock
lods
adc
add
std
fnstcw
dec
push
das
lock
aam
lods
dec
sbb
mov
adc
sub
(bad)
mov
cmc
push
mov
pushf
and
iret
js
sub
fistp
cwde
cwde
pop
mov
xor
popf
ret
bound
mov
sbb
mov
call
pop
popf
xchg
fld
mov
cmp
adc
mov
push
stos
ret
sbb
xor
and
es
in
inc
xlat
xor
cld
cmp
mov
(bad)
cwde
xchg
jmp
xor
mov
fldcw
add
xchg
movs
std
(bad)
arpl
rcr
cs
sbb
pop
jle
test
mov
xor
xchg
jle
arpl
and
dec
std
pop
xor
pop
test
int
shl
call
ret
in
fimul
bound
cmp
sbb
or
cmps
cmp
jns
hlt
mov
sub
xor
pushf
stos
out
pop
cmp
sub
(bad)
iret
push
hlt
sbb
and
xchg
xlat
or
pushf
fs
pushf
xor
sub
rcl
gs
mov
ret
mov
xor
add
mov
adc
inc
ret
neg
inc
or
cmp
pushf
adc
mov
je
loopne
or
cmp
aas
add
inc
sub
mov
arpl
pop
mov
push
std
fwait
xor
test
call
add
(bad)
xchg
mov
aas
inc
sub
pop
pop
jns
retf
jmp
scas
cmps
loope
sti
leave
mov
xchg
jge
xor
out
popa
outs
aam
or
mov
ret
inc
jnp
cmp
es
std
ret
xor
or
enter
cwde
stc
shl
out
cmp
add
dec
iret
mov
lock
std
xchg
pop
and
xor
fst
aas
test
xchg
test
dec
xchg
pushf
mov
fisubr
cmp
arpl
push
mov
sbb
mov
push
or
test
pop
cmp
movs
and
test
arpl
pushf
out
sbb
sub
push
mov
sbb
sar
pop
cmp
not
out
mov
adc
out
add
add
iret
or
and
iret
mov
pop
popf
jmp
mov
xor
mov
pop
inc
add
jmp
out
xchg
xor
add
pop
aam
cld
int
mov
lahf
leave
and
mov
adc
mov
push
inc
mov
mov
inc
xchg
add
and
repz
std
stos
ret
xchg
inc
(bad)
stc
loopne
jmp
test
sub
imul
adc
inc
in
out
call
or
fsubr
or
enter
cmp
popa
push
mov
movs
cwde
dec
or
inc
pop
rcr
and
(bad)
mov
dec
and
mov
add
sbb
popf
in
aam
add
sahf
cdq
(bad)
aad
push
mov
mov
inc
pushf
pop
sub
xor
pop
add
pop
xchg
nop
imul
sar
in
mov
jp
ret
div
mov
out
inc
pushf
mov
pushf
dec
ror
(bad)
dec
mov
or
push
dec
pop
sahf
leave
int3
movs
mov
jg
mov
scas
cdq
push
and
ins
pushf
push
shl
or
add
mov
jo
imul
les
popf
sbb
pop
stc
fwait
in
loope
mov
pushf
mov
pop
leave
nop
sub
adc
out
and
mov
xor
fstp
dec
add
sbb
push
js
xor
xchg
(bad)
jl
(bad)
xchg
pop
loopne
mov
pushf
sub
clc
shl
fwait
inc
retf
xchg
js
mov
fwait
sbb
sbb
in
das
test
mov
adc
push
sbb
int
data16
mov
xlat
retf
dec
stos
inc
cmp
push
mov
sub
xchg
shr
ret
call
std
out
lods
sahf
out
or
mov
iret
mov
rol
cmp
es
sub
sar
and
jns
mov
loopne
xchg
mov
ja
xor
add
pop
sub
or
lea
rcr
jle
inc
sbb
leave
hlt
sbb
jo
fcomp
outs
cmp
pop
cmp
xchg
fnsetpm(287
shr
sbb
test
aaa
add
test
aaa
(bad)
cmp
arpl
(bad)
push
arpl
enterw
and
loop
push
test
pop
ja
push
dec
inc
push
xchg
ror
aam
pop
into
clc
cmc
inc
sbb
in
inc
sub
or
inc
fiadd
repz
inc
fst
add
popf
aas
sub
and
sbb
or
sbb
inc
add
(bad)
inc
xchg
sti
test
dec
ret
vpand
push
cld
enter
push
popf
cmp
fsubr
rcr
sub
xor
mov
mov
stos
mov
cmp
aam
(bad)
and
test
xchg
cmp
jg
or
inc
lahf
fstp
sub
push
xor
test
or
shr
fincstp
repz
jle
push
cli
sbb
push
sub
adc
je
inc
jmp
rol
push
nop
out
repz
add
or
inc
popf
fldcw
sub
(bad)
push
scas
fcmovnbe
pop
fs
and
push
arpl
mov
cdq
or
jmp
and
xor
pusha
or
cmp
add
jnp
dec
ret
pop
push
retf
cdq
xchg
arpl
mov
cmps
data16
adc
shl
add
add
je
xchg
fisttp
retf
ror
shl
push
lock
and
inc
adc
inc
mov
test
cwde
sub
add
mov
lahf
lods
ret
mov
lds
xchg
adc
or
imul
popa
repz
loopne
ret
mov
mov
repnz
push
dec
outs
shr
push
mov
mov
inc
and
(bad)
mov
movs
and
mov
jmp
mov
imul
cmps
mov
mov
mov
xor
je
aam
cmp
lock
popf
cwde
mov
or
dec
or
hlt
cli
jmp
pop
mov
pushf
or
test
jge
es
sahf
fsubr
daa
xor
popf
test
adc
xchg
inc
and
leave
dec
(bad)
xchg
jle
into
jecxz
add
retf
lods
jnp
inc
call
add
sbb
adc
fisub
fdivp
mov
jb
pushf
xor
xor
ror
mov
pop
cmp
add
mov
inc
dec
inc
aas
cmp
imul
inc
loope
inc
mov
cmp
add
jb
push
and
xchg
in
fs
popa
lods
add
popf
clc
loop
jmp
cli
loop
jge
nop
arpl
in
xor
jns
xor
push
mov
fwait
mov
push
sbb
xchg
jmp
rcl
cmp
je
mov
mov
adc
xchg
retf
lock
aam
dec
push
xchg
aaa
mov
adc
jnp
ret
mov
lea
dec
inc
sbb
sbb
sub
dec
xchg
fisub
icebp
jnp
xor
cmps
or
outs
add
fidivr
aaa
pop
out
pushf
leave
push
retf
mov
xchg
sbb
out
ja
sub
mov
xor
and
or
ret
fadd
cmp
mul
push
out
adc
sub
loop
jb
mov
(bad)
outs
add
jecxz
or
out
into
cmp
or
imul
fimul
ins
pop
fstp
xor
popf
iret
xchg
mov
ror
mov
stc
data16
test
mov
xchg
add
sub
mov
xor
push
pop
retf
push
sub
pop
int
jg
jmp
mov
jo
sbb
rol
mov
aaa
push
adc
xchg
mov
arpl
js
imul
fst
int3
dec
sub
cs
(bad)
push
cmp
in
pushf
(bad)
popa
not
pushf
jmp
int
std
fistp
cmps
and
movs
cmps
test
adc
fst
jb
scas
mov
(bad)
imul
fyl2xp1
pop
mov
clc
(bad)
lds
test
rol
xchg
inc
add
push
std
(bad)
push
pushf
pop
mov
cmp
bound
fild
ret
rol
mov
aas
mov
lock
sub
fldenv
std
adc
sbb
adc
mov
xor
cmp
or
loop
loop
jnp
fldlg2
imul
cli
and
adc
aaa
sub
push
mov
and
enter
cmp
(bad)
jnp
xor
aas
test
push
aam
jmp
mov
xor
pushf
pop
(bad)
std
fidivr
jne
aam
aad
inc
push
aas
jge
adc
test
inc
pop
pop
sub
hlt
add
in
or
ds
cmp
call
popf
sbb
call
pushf
mov
inc
(bad)
pop
mov
mov
push
inc
inc
inc
cmc
jp
movs
and
add
jbe
or
scas
(bad)
inc
stos
inc
cmps
pop
xor
adc
mov
pop
aam
mov
jne
jle
lock
sbb
sub
adc
xchg
add
in
pushf
push
cmp
inc
sar
lock
in
clc
push
sahf
mov
xor
pop
test
outs
adc
sub
push
pushf
or
mov
inc
sub
ds
dec
sbb
push
push
adc
out
pop
sub
or
sub
mov
mov
xchg
fsub
iret
inc
(bad)
cmp
cmc
xchg
ror
inc
cs
cmp
in
mov
stos
inc
ins
movs
xor
and
fsubr
je
jecxz
in
pushf
or
xor
fs
cmp
lahf
dec
mov
and
xchg
inc
dec
add
les
pushf
cmp
jl
in
mov
ret
dec
xchg
push
add
sub
mov
xchg
cmp
(bad)
xchg
inc
test
into
sahf
sub
inc
jl
(bad)
shl
mov
xchg
sub
ret
mov
lahf
inc
push
mov
inc
scas
pushf
jne
aad
or
ja
mov
mov
jle
or
mov
push
xchg
stc
fst
and
ins
aam
stos
loopne
std
pop
mov
fldenv
(bad)
lods
int
inc
mov
sahf
bound
cmc
jae
inc
ret
fidivr
inc
sub
xchg
xchg
jp
in
ret
(bad)
pop
add
cmps
inc
lods
test
fld
fs
mov
xor
and
mov
fimul
ds
cmp
pushf
out
gs
pop
sbb
cmp
fdivr
or
sahf
or
ins
adc
mov
test
sbb
sbb
cld
cmps
xchg
jnp
add
test
aas
pop
add
dec
(bad)
xchg
pushf
inc
mov
dec
add
dec
movs
adc
pop
add
and
test
leave
rcr
cmp
cdq
scas
test
popa
inc
test
(bad)
fild
inc
popf
xchg
dec
jmp
jno
push
arpl
cmps
aas
mov
pop
ret
push
mov
xor
push
ret
sbb
mov
lock
adc
push
mov
jnp
sub
jmp
fwait
shl
(bad)
test
add
std
sbb
addr16
test
push
pop
pushf
jl
and
jae
aad
xchg
inc
fld
inc
xor
or
sar
or
out
xor
sbb
nop
mov
ret
or
xlat
xor
xchg
pop
sbb
lock
repnz
(bad)
and
pusha
ins
cmp
mov
js
aaa
icebp
cmps
xchg
rcl
aam
div
ja
cwde
ret
icebp
fcomp
jg
inc
and
cmp
loopne
sbb
mov
rol
lahf
ds
or
int3
pop
dec
(bad)
shr
inc
add
fdivrp
sub
mov
(bad)
out
push
aam
xor
pop
cli
cdq
popf
ret
xor
xor
push
test
mov
xor
cmp
xor
jnp
adc
push
and
jnp
adc
xor
push
cmps
or
push
xlat
jae
pop
sub
add
inc
jle
sbb
xchg
mov
(bad)
xchg
cmp
cmps
(bad)
mov
popf
xchg
test
or
shr
mul
ret
push
mov
daa
rol
xchg
sub
adc
fisubr
jp
cmp
retf
lea
scas
xchg
lods
shl
les
jbe
or
fild
sub
data16
dec
mov
xchg
sub
sub
inc
sub
xor
pop
lods
mov
in
dec
aam
add
dec
in
stos
stos
mov
pushf
xchg
or
cmp
shr
test
addr16
add
cmps
or
inc
dec
xchg
sbb
ret
pushf
out
inc
push
cmp
bound
sub
mov
lods
pop
mov
es
ja
cmp
in
pop
sbb
test
ret
or
sbb
sbb
jg
int3
push
stc
ret
mov
cmp
jbe
test
loop
icebp
jns
stc
js
xor
out
mov
aas
mov
pop
add
pop
add
in
mov
shl
mov
push
lock
(bad)
inc
fist
(bad)
aam
pushf
and
mov
mov
sahf
iret
or
inc
mov
and
push
outs
loop
je
pop
je
jno
cmp
(bad)
into
inc
adc
ret
lods
fnsave
aas
cmp
xor
mov
pushf
sbb
mov
sar
xchg
loop
(bad)
fadd
gs
xchg
jecxz
inc
sub
das
inc
cmp
out
xor
ret
sar
test
mov
dec
adc
cs
ss
adc
add
jnp
in
clc
add
pop
data16
into
out
jne
ins
test
ret
lods
lock
pushf
sub
jns
or
in
sub
popf
adc
sbb
jmp
mov
pushf
jl
pushf
gs
stos
dec
mov
(bad)
cmps
jmp
push
pushf
jne
mov
xchg
or
jmp
inc
push
fsubr
sub
ret
push
xlat
test
xor
xchg
out
rol
iret
popa
stc
mov
inc
pop
fst
fdiv
call
push
mov
push
ror
xchg
ret
dec
push
or
lds
call
mov
xchg
mov
xor
ret
jbe
sub
inc
ds
movs
and
mov
(bad)
cwde
jmp
ror
jg
hlt
aam
jle
push
push
nop
pushf
pushf
mov
outs
rol
imul
(bad)
jl
movs
out
lea
inc
aam
fidiv
jecxz
ficomp
jae
inc
ja
dec
xchg
inc
pop
mov
xlat
push
fsubr
dec
dec
jo
add
(bad)
shl
mov
mov
clc
mov
inc
ret
jge
inc
test
mov
push
cld
arpl
pop
xchg
test
inc
arpl
into
inc
rcl
iret
(bad)
sbb
gs
iret
jl
shl
inc
or
jmp
dec
gs
jmp
push
outs
mov
popf
cld
sbb
(bad)
test
sub
rcr
and
test
jbe
mov
lds
push
inc
fiadd
mov
pushf
mov
add
mov
idiv
pop
nop
push
push
cmp
jle
mov
jmp
clc
pushf
stc
sub
push
popa
jnp
push
adc
pop
std
xchg
or
dec
cmc
pop
jns
mov
pop
cmps
or
in
inc
popf
loope
mov
push
(bad)
fst
aaa
jmp
pop
ret
ret
imul
add
(bad)
popf
ret
or
mov
mov
popf
push
inc
dec
xchg
jmp
cld
fwait
dec
jle
sub
xor
inc
es
icebp
in
push
or
fidiv
popf
int3
jge
jae
lea
dec
jecxz
out
push
push
cmp
or
fwait
and
std
push
inc
xor
loopne
loope
sub
push
lahf
rol
mov
xor
into
xchg
dec
dec
stc
cmps
shl
stc
dec
jmp
adc
or
popa
pop
out
lea
adc
add
add
popa
adc
call
loop
cld
xor
inc
xor
sub
adc
or
mov
or
jo
inc
push
jb
inc
jnp
dec
shl
ss
mov
es
in
aaa
mov
cmc
loope
ret
clc
mov
fdivr
std
mov
inc
aam
in
sub
pushf
lock
mov
aam
xchg
in
ins
das
adc
ret
icebp
cmp
add
pusha
ds
pushf
jle
fmul
pop
mov
sbb
shl
into
pushf
or
adc
mov
add
pop
cmp
xor
push
mov
mov
lock
dec
mov
and
ret
into
lea
test
pop
lahf
rcl
sub
dec
jo
cmps
scas
sbb
mov
inc
add
gs
lods
cmp
mov
mov
shl
outs
les
in
and
mov
sub
leave
shl
mov
mul
jle
xor
pusha
sbb
xor
test
call
jmp
rol
shr
test
aas
add
inc
pop
ins
ret
dec
mov
pusha
inc
sti
xchg
sbb
div
adc
das
push
add
mov
xlat
inc
or
sbb
jmp
outs
cmps
retf
stc
sub
pushf
xor
mov
pop
dec
mul
adc
push
hlt
mov
in
mov
add
mov
loop
xor
idiv
dec
icebp
pop
fs
dec
mov
adc
mov
mov
in
js
adc
mov
enter
inc
sbb
mov
mov
cmp
movs
fcom
adc
addr16
adc
xor
movs
rcl
push
mov
xchg
xchg
pushf
jle
mov
pop
aam
jmp
ret
xor
out
pusha
inc
sub
jp
ja
and
hlt
data16
loopne
aam
xor
fcmovb
ret
jne
sub
push
or
lds
(bad)
(bad)
data16
loopne
sub
daa
gs
shl
(bad)
jge
aas
inc
sbb
fiadd
push
cmp
xchg
dec
jge
std
jb
imul
add
mov
xor
mov
and
jge
aam
sub
xor
or
scas
hlt
rep
cmp
push
out
nop
je
ins
in
daa
mov
mov
sbb
lahf
bswap
mov
ret
stos
call
hlt
dec
jecxz
outs
cmp
retf
ret
jno
and
pop
xor
aam
adc
out
cmp
test
cmovbe
popa
mov
inc
addr16
mov
shr
lds
arpl
jge
inc
adc
cwde
(bad)
in
lods
fnstsw
mov
and
cmp
mov
jno
push
dec
and
pop
ja
and
adc
xchg
movs
inc
add
xchg
adc
repnz
cmp
sub
rol
pushf
push
and
nop
ret
push
inc
adc
dec
sbb
sti
cmp
mov
shl
fidivr
fbld
mov
mov
inc
inc
dec
xchg
mov
mov
adc
push
xor
scas
das
aaa
and
push
(bad)
fdiv
jmp
add
jge
dec
inc
xor
lahf
lods
xchg
and
mov
(bad)
xchg
sub
out
sub
shr
xchg
inc
out
daa
push
mov
es
and
jl
(bad)
int
push
jecxz
adc
cs
xchg
add
pop
inc
mov
bound
pushf
push
pop
and
ins
mov
clc
mov
addr16
call
sbb
inc
inc
add
lods
push
xchg
popf
sti
shr
test
retf
in
in
sbb
and
loopne
inc
pop
adc
sets
les
popf
and
scas
sub
icebp
jp
stos
es
ss
mov
loopne
addr16
js
int
and
fdiv
test
jno
lock
cmp
pop
arpl
and
sbb
scas
jmp
dec
pop
mov
ret
loope
enter
inc
out
pop
repnz
cli
push
popf
pop
sub
cdq
push
ja
out
aam
jle
aad
repz
in
cli
rcr
lods
div
lods
repz
lods
mov
aas
fsubr
push
repz
add
xchg
pop
cmps
cmp
pop
fcmovnu
xor
adc
je
test
ret
cmp
mov
push
adc
add
fldenv
(bad)
cwde
aaa
retf
pop
xchg
mov
mov
mov
cld
inc
and
mov
mov
sbb
je
test
lock
(bad)
les
ins
clc
cmps
mov
add
aad
lock
or
scas
scas
pop
frstor
not
in
pop
outs
mov
out
pop
rcl
lock
inc
cmp
inc
jmp
inc
dec
or
mov
jecxz
pushf
(bad)
out
(bad)
add
ds
push
sub
push
lods
dec
push
adc
cmp
jle
xchg
push
cmp
push
push
sahf
push
inc
dec
(bad)
rcl
icebp
lock
inc
inc
ret
out
cmp
inc
push
inc
mov
inc
bound
push
ror
and
jmp
cmps
dec
popf
push
pop
pop
mov
mov
xchg
sub
adc
xor
movs
pop
aam
cmc
sub
mov
inc
jecxz
out
push
mov
mul
inc
mov
adc
fwait
in
mov
mov
sti
sahf
aas
lds
in
sub
loopne
scas
ret
and
out
daa
add
ror
daa
push
adc
cmc
dec
rcr
sub
jno
aam
push
test
ret
fcomp
aas
mov
sub
aad
aam
test
add
and
or
sbb
or
pop
aas
adc
int
mov
add
das
mov
shr
cmc
fmul
xor
inc
cmp
test
or
sbb
push
pop
call
cld
jns
lods
cwde
xchg
ret
imul
adc
std
sub
jb
lods
aam
push
adc
aam
fsubr
xchg
inc
neg
repz
xor
int
pop
jp
into
or
cmc
mov
push
adc
shl
or
js
add
sahf
(bad)
std
jl
test
repz
sub
loopne
adc
test
cwde
lods
cld
sahf
pushf
mov
jnp
loop
icebp
aam
je
jl
mov
test
repnz
adc
and
sti
dec
mov
sub
sar
aad
fcomp
test
loopne
mov
hlt
stos
lock
and
sub
ret
rcr
xchg
push
lea
int
sbb
fstp
aam
sahf
mov
ds
add
stos
push
add
push
or
and
adc
mov
call
js
lods
ret
(bad)
pop
cld
movs
sub
cmp
leave
mov
ret
outs
mov
push
stos
jp
dec
pop
xor
pop
das
les
das
jge
jb
fdivrp
mov
pop
dec
sti
push
sbb
or
inc
stc
(bad)
xchg
int3
adc
ret
shl
dec
popf
xchg
popa
jo
iret
inc
sbb
sbb
xor
cmp
xchg
data16
jg
sbb
data16
stos
iret
fdiv
test
push
in
scas
leave
pushf
adc
pop
jmp
(bad)
in
popf
add
dec
push
dec
out
popf
ds
mov
test
aam
adc
xchg
lds
inc
ret
test
jae
retf
adc
xchg
lds
push
aad
cmp
cs
jno
out
test
int3
rol
adc
jo
jns
mov
test
inc
pop
pushf
fs
or
mov
mov
mov
xchg
shr
cs
lods
ret
sbb
sub
pop
inc
xor
mov
cmp
xlat
xchg
test
aam
stos
push
or
sub
ret
mov
jp
adc
test
(bad)
sub
popf
pop
cwde
sbb
imul
retf
sub
sahf
adc
pop
call
es
mov
cmp
pushf
mov
aam
loope
push
adc
cmps
sub
xor
xchg
cmp
icebp
xor
retf
xor
ins
les
mov
inc
sub
cmp
or
add
sub
cld
xchg
inc
xor
and
inc
pop
add
add
mov
test
mov
outs
in
das
(bad)
ja
push
mov
cmp
xchg
shl
scas
jne
hlt
mov
popf
lods
xchg
mov
iret
js
aad
inc
retf
imul
cmp
push
push
jle
call
std
inc
sub
fwait
push
mov
jp
mov
lods
fwait
push
jle
shl
shr
imul
and
mov
mov
ret
mov
movs
cmp
sbb
jmp
mov
fadd
push
and
mov
rcl
jle
mov
ja
int3
xchg
addr16
inc
pop
jp
or
and
out
cdq
or
adc
inc
mov
xchg
or
sub
xor
aam
aam
jo
fdivr
sbb
jmp
int
and
cmp
jecxz
jnp
fist
daa
mov
ret
mov
mov
lahf
mov
scas
inc
imul
xor
popf
pushf
neg
mov
cmps
shl
push
mov
dec
repnz
add
hlt
sub
enter
mov
adc
pop
cdq
mov
movs
cmp
adc
bound
or
sbb
cli
mov
mov
or
sahf
jmp
aas
stos
leave
cmp
pushf
adc
add
or
hlt
nop
ja
popf
push
retf
shl
rol
ins
cdq
push
aaa
push
fidiv
sbb
dec
inc
mov
sub
mov
iret
arpl
sbb
jno
aam
adc
inc
push
std
shl
ret
fidiv
fmul
int
mov
xchg
hlt
mov
ret
fisub
inc
movs
inc
(bad)
call
cwde
test
retf
xchg
push
mov
inc
cdq
pop
fsub
push
clc
ret
in
dec
sub
out
hlt
cmp
jmp
mov
push
pop
pop
dec
xchg
fistp
fs
xchg
shl
xchg
and
cmp
test
and
imul
inc
inc
inc
inc
std
sbb
pusha
mov
cld
and
sbb
rcr
ficomp
mov
ret
jbe
ret
ret
test
shl
xlat
mov
push
pop
jne
loopne
cmp
loop
rcr
dec
cmp
jge
mov
jns
loope
pushf
(bad)
int3
popa
bound
pushf
mov
aad
mov
popf
enter
xchg
xchg
fbld
cmp
pop
inc
jp
pop
or
cs
add
mov
push
inc
outs
or
(bad)
sbb
mov
aaa
pop
scas
stos
pop
ins
cmp
fnstenv
arpl
or
or
into
mov
cmp
and
push
dec
adc
in
dec
ret
mov
sbb
shr
mov
cmp
popf
xor
stc
shl
cdq
mov
jno
xchg
xor
jbe
dec
cdq
pop
adc
inc
inc
jge
dec
pcmpgtd
popf
jecxz
or
push
mov
cmp
shl
adc
jmp
jecxz
rcl
call
std
xor
adc
inc
inc
cmp
and
mov
mov
pop
or
jg
inc
sub
arpl
fs
pop
jmp
ja
lods
push
push
std
dec
loopne
int
mov
mov
test
cdq
ret
in
jg
xchg
and
inc
loopne
popa
cmc
sahf
and
dec
adc
mov
mov
or
popf
inc
jmp
bound
adc
and
out
dec
push
ror
icebp
push
popf
js
push
mov
jbe
jo
outs
mov
mov
inc
popf
or
adc
sbb
sbb
call
pusha
mov
ins
push
fwait
ret
xchg
pusha
mov
cmp
pop
(bad)
push
fisttp
ret
lods
std
push
inc
into
mov
and
sbb
pop
cmc
mov
xor
popa
repnz
scas
sar
sbb
popf
in
or
js
daa
ds
cmp
xor
retf
repnz
gs
popf
inc
add
cmps
je
jae
fstp
adc
pushf
jl
xchg
adc
xchg
aas
dec
cmp
pushf
(bad)
sub
test
mov
lds
fwait
aad
jmp
les
jno
push
mov
(bad)
int
cmps
add
pop
movs
fld
test
adc
ja
jp
not
jge
pop
lea
pop
dec
pop
jecxz
inc
popf
int3
loop
aam
out
je
fstp
ds
into
loopne
jbe
add
adc
add
add
push
(bad)
sar
shl
outs
xchg
push
jbe
shl
movs
xchg
xor
adc
pop
(bad)
mov
aaa
push
push
les
mov
xchg
loop
popf
sub
dec
dec
fnsave
cmp
add
dec
je
mov
jo
adc
mov
cmp
aam
and
movs
mov
popa
sar
(bad)
adc
test
cmps
inc
imul
scas
and
inc
mov
ret
xchg
scas
imul
jmp
cs
push
add
push
jb
dec
cmp
pop
pushf
icebp
(bad)
or
fiadd
aam
jnp
jecxz
lea
in
jns
sub
or
push
cwde
aad
fsubrp
mov
and
ret
pop
xor
push
inc
into
cmp
int3
aaa
test
(bad)
or
pop
sbb
bound
sub
mov
sub
xchg
cmp
test
ins
sbb
test
ins
inc
fs
ret
(bad)
fbld
mov
idiv
cs
or
popf
pushf
iret
pop
into
repnz
psadbw
scas
fcom
push
mov
ss
sahf
iret
push
fcmovb
xchg
popa
inc
jo
jmp
pop
and
(bad)
icebp
sbb
ret
cmp
lock
ret
pushf
jno
sub
push
ss
adc
mov
adc
mov
jge
and
popf
scas
jmp
aam
pushf
outs
or
inc
inc
call
mov
out
adc
xchg
stos
std
jg
sbb
out
fwait
into
push
jg
or
in
add
sbb
pop
inc
repnz
push
jl
mov
mov
dec
movs
inc
push
cli
mov
jae
xchg
and
xchg
popa
pushf
jo
or
pop
hlt
aas
pushf
add
das
and
cmp
or
add
ret
sub
pop
pop
push
and
dec
inc
fisubr
ficomp
dec
xor
ror
dec
ficom
(bad)
fsub
jp
push
inc
mov
fld
lahf
pop
dec
sub
jg
push
xor
montmul
cmps
inc
adc
scas
out
adc
arpl
popf
sub
pop
inc
adc
pop
(bad)
outs
mov
cmp
fadd
push
or
inc
scas
(bad)
mov
jae
dec
mov
int3
out
out
dec
push
mov
mov
fcomp
fcmovnbe
daa
push
loop
jle
call
push
and
lahf
shr
push
pop
cmp
push
ret
dec
shl
add
fnstenv
icebp
push
add
lods
call
sub
sub
xor
and
mov
test
mov
inc
aas
dec
adc
xor
jmp
dec
fisubr
jmp
jge
inc
popf
retf
(bad)
sti
push
jge
loope
or
arpl
repnz
jmp
jle
sahf
je
sti
scas
cmp
enter
xor
(bad)
dec
mov
cmps
mov
xchg
sti
shl
xlat
adc
push
xchg
xor
and
mov
and
aas
cmp
mov
lahf
cdq
in
cmp
call
sbb
shl
outs
pop
movs
cmp
cmps
lock
adc
inc
mov
shl
xchg
and
scas
pushf
fwait
mov
fbstp
out
ins
mov
lahf
jns
xor
xchg
gs
jae
idiv
adc
inc
aad
push
ficomp
xchg
mov
int3
pusha
(bad)
rcr
(bad)
mov
mov
(bad)
fistp
cwde
cs
ret
adc
mov
out
push
or
fbld
aas
add
pop
(bad)
nop
jmp
je
fadd
lods
cli
hlt
ror
cld
aad
adc
gs
pusha
adc
mov
or
add
cmp
or
loope
dec
enter
jl
clc
add
pop
jmp
arpl
mov
mov
mov
jle
or
and
in
sbb
shl
adc
lea
sbb
in
scas
or
iret
ret
xor
in
in
ds
rol
ja
rcr
push
js
pop
sub
jge
aas
pop
adc
rcr
icebp
hlt
cld
dec
movs
inc
jmp
lahf
pushf
cmp
pushf
or
nop
pop
stos
sar
jae
mov
das
mov
shl
dec
sub
pop
out
inc
mov
outs
out
push
out
dec
ret
rol
inc
or
hlt
inc
call
jmp
jnp
push
cmp
fldcw
test
das
enter
pushf
iret
loop
xor
push
aam
aam
and
sub
sbb
xor
cdq
push
clc
repnz
pop
lock
movs
xchg
icebp
cmp
and
mov
aas
std
imul
repnz
pop
loope
cmp
or
into
es
sub
nop
adc
add
sar
lea
(bad)
sub
pop
aam
or
ror
mov
xor
adc
mov
mov
add
enter
rcr
pop
in
ds
bound
and
push
cli
jl
mov
repz
pop
dec
push
mul
arpl
cli
mov
xor
pushf
xor
sub
sahf
clc
cli
mov
pop
cmps
mov
stc
ja
fsubr
popf
test
mov
ret
inc
lds
hlt
inc
(bad)
fsubr
mov
adc
jl
lds
aam
scas
xchg
adc
pop
ins
xchg
arpl
inc
pop
pop
mov
in
or
call
lods
leave
sti
sbb
test
pop
push
aas
inc
int
sub
sahf
mov
xchg
addr16
cmps
push
pop
pop
dec
xor
add
fisttp
rcl
add
adc
ret
(bad)
mov
inc
pop
inc
fwait
call
pushf
imul
push
movs
shl
mov
imul
jne
jns
ror
or
in
adc
add
imul
push
push
adc
sbb
and
xchg
adc
pop
fisttp
add
bound
or
mov
ja
inc
aam
pushf
cmp
ret
(bad)
addr16
dec
push
inc
fbstp
pusha
sbb
out
retf
fcmove
inc
mov
jae
mov
mov
push
cmp
pop
add
fdivr
pushf
stos
cmp
sbb
push
adc
dec
jecxz
aaa
aas
add
or
jb
adc
inc
aaa
dec
fsub
out
aam
dec
pop
xchg
loop
cmpsd
in
stos
shr
aas
loopne
jmp
lock
pop
lds
mov
shl
mov
repnz
inc
ret
push
js
ret
xchg
aas
xchg
xchg
adc
clc
mov
jno
fnsave
push
test
aam
(bad)
fisttp
in
cmp
or
iret
fisub
lods
sub
cmp
add
mov
mov
push
jmp
xchg
pusha
pop
mov
mov
aam
adc
pop
(bad)
jmp
je
movs
(bad)
(bad)
dec
jp
inc
rol
mov
popa
pushf
inc
das
mov
jae
or
xor
add
das
ret
bound
retf
xor
add
out
mov
or
jp
sbb
fidivr
nop
and
add
mov
ret
js
mov
push
mov
adc
rol
sbb
or
mov
aam
push
sar
imul
sbb
imul
test
mov
or
cli
or
cld
sub
out
lahf
stos
iret
push
adc
or
pushf
xor
rol
inc
cmp
lock
shl
or
jo
rep
pop
nop
add
mov
jmp
lods
ret
stos
sar
push
dec
das
mov
loopne
in
add
pop
stos
sar
push
or
inc
mov
lods
call
popf
or
(bad)
mov
fcom
pop
and
dec
inc
pusha
or
pusha
aam
add
mov
dec
jp
fisttp
pusha
test
shl
adc
pushf
pushf
jl
bound
jecxz
das
hlt
(bad)
jb
xchg
fld
mov
push
cwde
lock
(bad)
shr
sub
mov
or
ret
xchg
cdq
scas
xchg
setne
rcr
adc
test
fcomp
cmps
pop
test
int
lea
mov
arpl
xchg
sti
jmp
or
sbb
test
movs
xchg
out
jecxz
popa
ret
dec
imul
fldenv
mov
sub
call
jae
pusha
push
lahf
ret
sbb
fstp
int
aad
sub
jge
inc
popf
test
pop
dec
fstp
jle
aam
fsub
add
ret
stos
fcomi
into
hlt
push
scas
and
ret
inc
cmp
or
mov
call
sub
or
pop
cwde
aas
jne
sbb
or
mov
xchg
inc
retf
iret
pop
inc
dec
xor
mov
pushf
sub
sbb
shr
and
or
cs
out
cmp
lods
inc
fisub
cmc
ret
iret
int3
and
xor
push
lods
mov
pop
add
retf
xchg
outs
xchg
mov
or
retf
mov
inc
retf
jne
jmp
jb
sub
xlat
sbb
outs
iret
popf
popf
cdq
mov
xlat
shl
dec
in
inc
xor
inc
movs
push
cs
(bad)
cld
jno
stos
cmp
leave
in
ins
aas
pop
inc
jnp
popf
fnsetpm(287
xchg
pop
or
sub
data16
adc
cmp
mov
gs
dec
inc
xor
test
add
dec
test
imul
enter
cmp
add
pop
add
(bad)
xchg
inc
frstor
mov
pushf
mov
mov
pop
push
call
push
xchg
addr16
or
xor
pop
hlt
adc
fsubrp
test
mov
retf
lahf
cmc
sti
push
arpl
push
int3
adc
or
fadd
fsubr
and
test
dec
mov
aam
xchg
xchg
push
push
ja
xchg
or
(bad)
inc
push
leave
ss
ja
stos
movs
sbb
(bad)
mov
js
test
retf
mov
pushf
xor
pop
jb
cmp
add
cmp
sub
sbb
ja
bound
sti
cli
paddusw
push
cmp
cmp
aas
cmp
fmul
hlt
xchg
pushf
aaa
dec
mov
(bad)
rol
std
cmp
div
ret
fs
shl
cdq
ds
mov
cld
xchg
add
std
(bad)
retf
inc
outs
push
xchg
cmp
inc
mov
repnz
sti
sub
inc
pop
adc
cmp
jecxz
push
pushf
stos
pop
or
jmp
xchg
mov
mov
in
into
leave
in
idiv
sahf
pushf
add
jmp
xor
mov
inc
mov
cmp
cs
mov
jl
scas
cld
pop
pop
call
adc
or
push
repnz
test
xchg
cmc
popa
mov
xchg
sub
outs
sahf
rol
xor
loope
jge
test
aam
arpl
xchg
leave
push
jnp
sbb
cld
icebp
and
pop
test
sub
push
sahf
(bad)
ror
out
sub
mov
cmp
aas
and
mov
jb
pop
popf
push
fcmovnbe
retf
lea
pusha
add
jmp
add
mov
(bad)
test
out
fwait
pusha
sar
ret
lods
scas
sbb
aas
jecxz
dec
shl
scas
retf
push
ret
push
sbb
xchg
or
and
mov
push
inc
mov
pushf
xchg
les
xor
test
mov
and
fstp
xchg
push
ret
or
jo
push
inc
outs
enter
retf
popf
lock
and
pop
jno
cs
jnp
aas
xor
sbb
inc
cmp
adc
inc
adc
rcl
and
sahf
or
sub
xor
sti
movs
imul
inc
push
ret
dec
jg
xor
stc
xchg
movs
int3
stc
pop
dec
clc
iret
xlat
xchg
pushf
movs
pop
imul
enter
loope
clc
stc
sbb
dec
cmp
pushf
or
pop
test
inc
add
outs
ficom
inc
and
mov
xchg
cmp
cld
cmp
jl
sbb
push
fbld
add
push
push
cmps
cmp
into
les
jmp
iret
mov
lock
mov
cmp
jns
adc
in
push
jl
jo
add
loop
mov
sbb
(bad)
xchg
mov
adc
mov
dec
inc
adc
push
adc
pushf
jnp
and
repnz
ror
add
aaa
ficom
aam
lock
jno
mov
or
movs
jo
mov
lods
pushf
mov
cwde
cli
or
xor
dec
leave
aas
ror
jg
sbb
ret
and
ret
xchg
addr16
pop
and
retf
stos
add
loope
test
sbb
xchg
cmps
imul
push
ret
scas
add
(bad)
and
xor
inc
fldcw
xor
sbb
sbb
cmps
cdq
pop
lods
pop
xchg
cmp
pop
ret
mov
ins
lock
fild
pop
xchg
and
fsubr
test
pop
retf
scas
sbb
adc
repz
ret
fcmovnu
fdivr
fs
fnstsw
xor
lods
stos
or
pushf
and
xchg
dec
sbb
daa
pop
aam
loop
mov
adc
pop
loopne
xchg
sbb
pop
mov
xchg
fild
lods
leave
sub
adc
ret
jae
shr
inc
imul
ret
add
sub
inc
jo
mov
cld
stc
mov
mov
push
push
sbb
xchg
sar
jl
xchg
inc
cmps
dec
pop
test
dec
test
sub
leave
mov
sbb
addr16
mov
add
(bad)
add
aam
repz
shl
push
call
pop
adc
push
xor
ret
inc
retf
push
cdq
in
repnz
aas
ss
add
xor
inc
and
(bad)
push
jmp
sti
in
(bad)
push
in
cmp
mov
out
inc
add
fld
inc
and
out
rol
sbb
adc
pushf
mov
adc
adc
cmp
out
mov
aad
push
fmul
inc
xor
inc
dec
cmp
je
xchg
inc
mov
ret
sub
(bad)
mov
lahf
inc
xor
push
mov
add
adc
shl
pop
nop
mov
push
scas
(bad)
test
push
scas
stos
lods
mov
xor
shl
mov
cmp
das
sahf
lds
pop
fidiv
inc
scas
cmp
pop
push
sub
popf
pop
mov
sbb
ror
dec
mov
fstp
adc
aas
inc
jns
jbe
arpl
inc
popf
daa
and
lods
gs
jmp
out
xchg
pop
inc
rcr
idiv
aas
in
fdivr
cmp
in
ret
(bad)
push
xchg
shl
aam
(bad)
jae
adc
ret
cmp
loopne
fcomp
movs
mov
cmc
push
pushf
ds
(bad)
dec
pop
imul
sbb
scas
inc
sbb
jge
lahf
stc
add
adc
rcr
fidivr
cdq
loop
push
or
or
push
cmp
aam
fist
jns
into
push
and
or
ret
add
sbb
pop
inc
sub
or
movs
ror
fidiv
mov
inc
xor
js
imul
cdq
inc
push
scas
inc
mov
xor
cmp
xor
in
and
ror
dec
pushf
mov
adc
aam
std
add
je
shl
and
pushf
test
inc
ss
icebp
dec
mov
aas
mov
mov
lds
pusha
cmps
rcl
mov
mov
stc
ret
and
loopne
shl
test
jno
mov
push
pop
stc
ret
in
xlat
enter
add
lea
cmps
dec
add
cli
cwde
inc
xor
and
sbb
add
pushf
xchg
push
f2xm1
push
xor
fdiv
xchg
pop
sbb
lods
inc
adc
les
add
cmc
jmp
(bad)
cld
es
or
popf
push
xchg
loop
pushf
pop
ins
sbb
dec
sub
cld
arpl
inc
xor
nop
test
sar
popf
ins
sub
shr
sub
inc
dec
pop
push
mov
jb
xor
aam
sbb
pushf
jno
test
inc
das
dec
dec
repnz
mov
test
inc
scas
mov
popf
sub
fidivr
shr
imul
cmps
mov
lods
cs
loop
inc
mov
imul
test
or
sbb
cmp
(bad)
mov
xor
ins
pop
jno
jmp
loope
adc
sbb
inc
jns
xor
outs
out
push
push
cmps
mov
cwde
inc
mov
scas
push
inc
popf
mul
out
ins
cmps
cmps
(bad)
addr16
test
xchg
pop
out
ret
mov
enter
push
push
popf
loop
imul
mov
call
cmps
or
cmp
fs
rcr
nop
call
retf
jo
jno
pop
push
push
xor
repz
inc
xlat
std
lds
mov
imul
cld
jle
sub
mov
dec
sti
sti
push
pushf
cwde
add
fcmovnbe
clc
fdivr
(bad)
cmps
inc
int
jge
pushf
mov
call
dec
popf
(bad)
cmp
popf
push
cld
push
into
lods
sub
js
inc
mov
mov
mov
repz
add
loopne
psubusb
push
call
lahf
adc
pop
mov
hlt
enter
aam
xchg
loop
aas
imul
push
cwde
pop
rol
jecxz
enter
call
lods
into
inc
aam
adc
inc
fadd
repnz
in
ror
inc
dec
les
sub
dec
ror
pop
arpl
or
sbb
repz
inc
xlat
adc
test
xchg
pop
aam
dec
dec
adc
mov
pop
cmps
xor
mov
mov
mov
shl
adc
xchg
jmp
into
mov
jae
int3
inc
test
mov
mov
enter
gs
cs
stos
add
jnp
popf
push
cmp
dec
mov
stc
mov
mov
ficom
and
ins
mov
leave
mov
loope
pmaddwd
imul
mov
or
sub
(bad)
cmc
push
inc
xchg
in
mov
cmp
mov
in
imul
movs
xor
dec
pop
mov
mov
inc
push
pop
or
sbb
cwde
sbb
adc
jbe
jp
popf
mov
inc
stc
(bad)
sar
pop
jge
jbe
test
aam
adc
pop
fld
pop
bnd
jae
test
mov
mov
lods
retf
add
xchg
push
jl
sbb
mov
push
xchg
xor
jo
loope
sbb
add
lahf
mov
add
sqrtps
inc
mov
rcl
(bad)
xchg
xor
or
sahf
jbe
call
or
push
dec
and
inc
fwait
dec
pop
inc
push
push
mov
jle
lock
aam
out
inc
jmp
shr
out
(bad)
fcmovb
cld
call
gs
retf
jnp
pushf
int
fs
xchg
mov
ret
jmp
stos
jns
loop
or
arpl
loopne
mov
mov
xor
cli
jo
mov
out
lods
sbb
push
mov
and
xchg
leave
loopne
popf
xor
sar
in
rcr
in
xchg
mov
fbstp
data16
push
jmp
dec
mov
pop
fstp
jp
mov
inc
ret
lods
sbb
inc
push
push
scas
cmp
push
xor
jecxz
dec
mov
mov
jo
jp
cmp
add
pop
cmp
jno
add
scas
ja
pushf
dec
jnp
inc
fdivr
(bad)
rcl
sbb
mov
xor
ficom
jno
xchg
and
out
mov
mul
movs
sar
(bad)
std
ffreep
jb
mov
sub
ror
lods
jns
stos
(bad)
dec
add
ins
retf
das
nop
arpl
jnp
aam
push
pushf
(bad)
jo
leave
inc
test
and
les
pop
mov
push
mov
add
inc
fwait
inc
xchg
rcr
sub
arpl
jmp
xchg
adc
popf
cmp
adc
es
sub
fst
retf
sub
dec
push
jae
shl
mov
fldcw
inc
jmp
pop
jle
xchg
mov
xor
ins
cli
push
mov
imul
aam
mov
pop
dec
jb
iret
ret
dec
retf
push
jae
sbb
jl
or
inc
in
pop
and
inc
nop
call
add
mov
jo
jl
push
std
xchg
fadd
add
hlt
lahf
(bad)
cli
aaa
inc
or
jmp
cmp
aas
sub
inc
fisttp
lds
out
rcr
inc
push
nop
js
xor
pushf
cdq
cmps
dec
ret
xchg
ret
add
das
add
stc
cli
xchg
mov
jp
(bad)
sti
jo
mov
aaa
dec
ja
jno
popf
lods
and
ret
dec
xchg
sbb
push
jmp
mov
xchg
inc
add
iret
fwait
add
jne
xchg
push
idiv
xlat
push
add
push
int
fucomi
test
fs
or
jb
inc
aad
mov
(bad)
adc
leave
or
loop
fwait
clc
inc
xchg
jmp
inc
jnp
lods
cmp
jbe
pshufw
repnz
ret
jae
adc
cmp
aas
rol
mov
pushf
aas
sbb
movs
push
push
sub
pop
mov
inc
jne
cdq
ret
and
inc
mov
adc
clc
std
lock
daa
test
sbb
push
call
lea
mov
pop
dec
sbb
sahf
mov
and
jne
cwde
lock
enter
stos
(bad)
sbb
pushf
pop
mov
in
lds
pop
and
xor
sahf
mov
repnz
pop
sbb
sar
fist
add
pusha
xor
cmc
fild
dec
int3
cmp
pushf
xchg
(bad)
pop
loopne
repnz
enter
jp
xlat
test
mov
and
leave
int
xor
retf
sbb
popf
ins
pop
pop
push
imul
adc
adc
(bad)
xchg
cdq
xchg
adc
or
shl
sub
xor
jle
fsubr
pop
and
loopne
adc
ret
cli
xor
cmp
pop
inc
js
lods
cmc
les
sub
adc
aas
leave
jge
xchg
ss
in
outs
aad
retf
ins
outs
imul
mov
jp
mov
ret
cmp
lock
aas
push
sbb
adc
and
out
mov
xchg
jno
inc
mov
mov
jns
repnz
push
dec
cmc
push
add
jo
and
cmp
test
mov
(bad)
pop
sub
push
ret
rol
stos
and
adc
jo
cmp
jmp
sahf
aad
shr
stos
push
mov
pop
repnz
mov
stos
int3
sbb
fsub
push
mov
ret
sub
cmp
cmp
scas
or
scas
call
jge
xchg
addr16
shl
nop
test
xchg
jmp
sub
add
ret
adc
adc
sub
inc
dec
add
lahf
push
pop
jp
inc
xchg
sbb
dec
sbb
lods
cld
sub
jb
adc
xor
and
ret
xor
push
jo
dec
jl
(bad)
dec
fwait
std
loope
(bad)
fild
adc
mov
dec
push
fucom
aaa
cmp
sbb
push
out
sbb
mov
pusha
inc
lods
sub
lds
je
and
xor
jne
stc
mov
push
call
pop
pop
cmp
push
cli
and
push
cmp
mov
pushf
int
pop
xchg
xor
ja
xor
dec
add
pushf
fld
shr
push
and
rol
repz
(bad)
lock
cld
jecxz
sahf
cmp
mov
inc
xchg
jecxz
sbb
and
add
push
into
sbb
add
adc
shr
ret
loopne
and
ds
pop
pushf
inc
jbe
ja
ins
sar
jle
dec
ins
outs
push
arpl
scas
shr
xchg
pop
or
rcl
jmp
mov
cmps
into
les
call
and
jp
inc
sub
test
mov
mov
or
jbe
push
jo
lds
int
add
sahf
adc
stos
dec
mov
dec
rcr
or
xlat
push
push
repz
push
pushf
dec
out
inc
ret
rcl
pop
cmp
hlt
fstp
cmp
mov
aad
inc
mov
add
push
popf
pop
ss
repnz
(bad)
ja
lahf
cli
ficom
out
pushf
sub
xchg
stos
xchg
xor
push
inc
cwde
jl
adc
mov
aam
mov
adc
stc
and
and
dec
fcomp
pusha
mov
inc
xor
push
stos
stos
adc
and
in
mov
sbb
mul
pushf
sub
mov
fwait
dec
sbb
or
mov
call
retf
imul
mov
mov
pop
push
cmp
mov
mov
cmp
jg
add
inc
ins
lea
jo
ret
jmp
xchg
fld
repz
retf
fcmovbe
adc
imul
nop
call
out
je
dec
inc
arpl
aam
xlat
clc
dec
and
pusha
in
mov
or
inc
xor
retf
push
push
inc
xor
cmps
sti
mov
ror
fadd
loope
clc
mov
xchg
push
mov
leave
cld
pop
mov
scas
adc
(bad)
aas
push
icebp
mov
ins
sbb
mov
retf
icebp
fidiv
mov
xor
outs
data16
call
mov
adc
inc
imul
pushf
pop
aaa
scas
xor
xchg
pushf
addr16
jmp
js
mov
mov
rol
scas
ds
pop
ins
sar
push
sub
test
int
arpl
mov
(bad)
scas
dec
aas
xchg
jl
ret
xlat
jl
cmp
mov
shl
mov
ja
jge
ret
add
stc
aas
das
pop
stos
and
add
aam
push
jmp
jmp
xor
push
movs
lock
(bad)
mov
and
mov
or
les
popf
test
adc
dec
fiadd
mov
mov
jne
stos
pop
cs
cmps
neg
jbe
loopne
mov
inc
lds
mov
mov
aam
in
pop
mov
nop
les
push
add
out
xor
and
movs
push
pop
add
popf
or
pop
sahf
cld
test
cs
mov
and
jmp
or
mov
fst
cmp
xor
jl
adc
dec
adc
xor
jmp
push
shl
loope
lea
and
cmp
inc
pop
sar
and
push
dec
daa
es
or
or
imul
xor
jp
mov
inc
clc
push
sbb
jnp
mov
inc
rcl
mov
jbe
push
mov
sbb
cmc
test
inc
popf
mov
jmp
cmp
int
sbb
sbb
mov
(bad)
push
cmp
lds
enter
adc
rcr
dec
or
xchg
scas
inc
push
inc
dec
adc
aad
ret
jmp
iret
xchg
mov
adc
hlt
aas
and
inc
sahf
or
adc
or
test
mov
cmp
mov
mov
int3
cmp
aam
pushf
cli
xor
xor
ret
mov
push
jge
sbb
inc
aad
lock
sahf
fsub
mov
(bad)
or
fs
jno
ja
xchg
outs
jp
aas
cmp
push
mov
outs
ret
movs
mov
mov
rol
out
dec
pop
push
jl
(bad)
inc
inc
adc
shl
rcl
push
mov
jmp
inc
test
inc
(bad)
fcomp
ret
dec
(bad)
xor
add
or
enter
mov
push
js
jae
outs
movs
xchg
sub
and
in
in
aam
lds
cmps
inc
test
loop
je
jmp
inc
repz
adc
sub
sbb
jle
mov
sub
mov
push
pop
ret
(bad)
call
inc
data16
mov
or
arpl
fld
pcmpgtw
hlt
fwait
stc
sub
sti
push
into
push
outs
xor
pop
xchg
in
ret
lahf
sub
pop
stc
pop
mov
push
rol
jb
test
sbb
pushf
push
cmc
in
(bad)
loopne
xchg
aam
in
lods
sbb
pushf
addr16
mov
and
inc
aam
shl
mov
into
aam
aaa
push
mov
inc
cs
add
arpl
shl
aaa
jno
pop
ja
shr
push
mov
add
or
push
pop
mov
scas
xchg
cs
push
jp
icebp
ss
dec
mov
rcr
mov
xchg
lods
scas
rcr
fmul
repnz
xchg
int
pop
sbb
lea
adc
(bad)
mov
push
sbb
loop
sbb
popf
xor
cmp
aam
repnz
fbstp
adc
int
test
aaa
xor
sbb
in
outs
je
jb
jns
mov
dec
sub
aas
cwde
sbb
xchg
jg
imul
mov
mov
loope
bts
lds
mov
mov
movs
hlt
repz
or
jg
mov
outs
add
pop
mov
cli
cmp
mov
inc
(bad)
in
stc
outs
out
call
loopne
mov
or
sbb
inc
popf
jae
ins
mov
cmps
mov
adc
ret
scas
add
push
in
fs
cmp
inc
sub
lods
mov
cmp
fsqrt
add
sti
aas
pop
lds
and
popa
call
fadd
dec
sahf
and
inc
iret
stos
push
mov
pop
mov
ror
and
ror
cdq
je
push
dec
fst
daa
xchg
addr16
jl
sahf
rol
shl
or
adc
out
cmp
add
scas
and
inc
aam
mov
pushf
imul
adc
xlat
loope
push
aam
add
lahf
loopne
push
push
inc
jmp
push
loop
retf
mov
lock
popf
mov
add
leave
inc
mov
xor
aaa
dec
rcl
and
daa
clc
and
(bad)
and
jne
lea
dec
sbb
nop
mov
stos
mov
and
ror
xor
xchg
out
dec
add
arpl
pop
outs
sub
(bad)
jno
mov
pop
push
sbb
iret
aam
sub
cmp
(bad)
sar
mov
leave
xchg
jbe
mov
mov
adc
in
neg
inc
outs
(bad)
call
(bad)
adc
stc
pop
shr
cdq
pop
scas
sahf
out
mov
xchg
lahf
jecxz
cli
inc
fcomp
sbb
movs
cmp
popf
inc
adc
arpl
dec
fdivrp
sub
fucomip
push
inc
ja
ror
(bad)
movs
jg
mov
or
cs
leave
test
inc
mov
sti
mov
fist
fld
lods
inc
push
mov
out
(bad)
out
lock
push
jl
ins
shl
mov
xchg
add
ret
inc
aad
push
clc
xchg
cmp
stos
lods
dec
imul
shl
addr16
jmp
mov
pop
inc
ds
jmp
je
xchg
sbb
pop
push
mov
inc
adc
sub
or
nop
or
repnz
mov
in
mov
movs
mov
cmp
ja
sub
loop
not
mov
ret
sbb
lea
imul
mov
aam
jmp
std
rcr
or
mov
loope
imul
je
daa
popf
and
mov
add
aam
push
ss
mov
add
add
cli
xchg
mov
cdq
sub
fidivr
or
pushf
inc
add
hlt
xor
daa
fisttp
test
pushf
out
ins
mov
loope
push
or
mov
aaa
mov
out
pop
mov
fwait
push
jmp
xchg
cmp
adc
add
pop
shr
test
sti
ds
cld
mov
or
or
sahf
pop
pop
lock
jmp
cld
mov
add
mov
pop
xchg
and
and
inc
pop
je
mov
sbb
mov
sub
retf
into
pop
popf
test
mov
dec
daa
ret
add
and
pop
xor
loop
cld
pcmpeqb
mov
ret
cld
jmp
cmp
lahf
mov
xchg
cmp
ds
mov
push
ret
fld
call
pop
dec
fcomp
inc
mov
inc
xchg
lods
inc
test
xor
mov
iret
data16
pop
inc
fnstcw
ret
push
mov
inc
es
scas
idiv
dec
sahf
jge
mov
mov
idiv
fist
dec
mov
cs
inc
popa
jp
xchg
movs
inc
lods
or
call
movs
push
lods
inc
adc
neg
dec
je
clc
pop
mov
daa
push
cdq
sub
inc
mov
retf
bnd
mov
(bad)
(bad)
pushf
gs
xrelease
mov
addr16
ret
adc
xchg
cdq
xor
adc
ins
enter
popf
cmp
lods
ret
test
retf
loope
xchg
(bad)
adc
shr
shl
std
aas
std
mov
adc
pushf
jge
mov
repnz
pop
pop
aam
ins
pusha
mov
in
and
jae
xchg
jae
and
or
push
dec
push
mov
les
stos
inc
inc
cmps
(bad)
mov
pushf
repnz
shl
jecxz
sbb
idiv
popf
ret
mov
fld
jp
das
shl
dec
or
mov
fucomp
rol
scas
mov
adc
push
adc
sahf
cld
mov
sub
or
xor
add
push
add
or
retf
mov
dec
dec
lods
mov
retf
sbb
sbb
mov
test
popf
pusha
mov
jae
stos
mov
sub
test
jle
adc
loope
aas
in
je
pop
(bad)
pop
inc
jne
push
fucomp
mov
add
hlt
inc
pusha
cmp
imul
mov
scas
aam
(bad)
cmp
into
adc
sbb
loopne
pop
aam
div
adc
dec
repz
pop
cmp
jl
cmp
int
sub
mov
jmp
sub
pop
fwait
push
inc
arpl
xor
mov
movs
cld
fistp
fisubr
push
fcom
scas
(bad)
cmp
pop
iret
push
pop
fwait
int
xor
daa
(bad)
inc
pushf
or
jp
inc
jmp
push
inc
clc
adc
sti
not
pusha
ret
xlat
pop
dec
popf
loope
cs
push
shr
dec
aad
jmp
ds
stc
shl
out
and
int
int
mov
popf
std
pusha
xchg
dec
push
cdq
xor
ror
jbe
ret
test
loopne
or
not
pushf
hlt
fnstcw
xor
aaa
repz
popf
mov
call
add
mov
bound
add
jmp
and
fidiv
out
lods
mov
push
sbb
push
leave
out
movs
mov
outs
xor
add
push
lock
or
fild
cmps
sbb
hlt
pop
into
les
mov
out
push
xchg
mov
dec
add
cld
inc
and
or
jo
sub
xor
(bad)
icebp
pop
xlat
js
dec
aad
fwait
ins
imul
fcom
inc
(bad)
cmps
test
cmps
fisttp
pop
inc
add
xlat
loop
xlat
iret
sbb
mov
and
ret
movs
cmp
adc
scas
loop
(bad)
ror
not
sbb
adc
shl
and
aad
sbb
xor
add
inc
outs
jg
inc
mov
movs
jne
repz
and
jmp
xchg
sahf
cs
fmul
ret
in
cmps
shr
pcmpeqd
call
inc
cmps
test
and
inc
fistp
sbb
scas
jno
xchg
jns
shr
fdivr
pop
xchg
inc
daa
ins
mov
cmps
pop
pop
jl
push
mul
in
scas
cmp
jge
and
lahf
push
shl
cmp
sti
cmps
lods
outs
cs
out
add
repz
sbb
outs
add
add
shl
jle
push
push
aaa
adc
stc
jo
sahf
jo
mov
and
lds
inc
jb
shl
push
mov
call
lea
inc
fisttp
jnp
inc
repnz
and
and
ja
in
adc
shl
and
jp
add
imul
shl
mov
cdq
ret
mov
repnz
dec
fidivr
push
lea
scas
or
sub
dec
dec
popf
cmp
pusha
pusha
movlps
aam
popa
pop
or
mov
(bad)
sar
jmp
sbb
mov
outs
cs
imul
popf
aas
mov
in
aam
fsubr
pop
aam
push
jle
mov
sub
out
or
and
scas
popf
push
je
ret
jecxz
sbb
add
mov
and
mov
popf
xchg
mov
in
or
sahf
cmp
shl
cdq
inc
scas
scas
sbb
inc
mov
popf
xchg
pop
jmp
jp
mov
cmp
sub
sub
inc
test
jge
adc
jg
xchg
cmp
ret
sbb
and
imul
(bad)
aaa
cmp
inc
call
xchg
adc
push
rcl
out
(bad)
inc
pop
adc
or
out
add
mov
jns
lods
icebp
shl
sahf
in
out
push
icebp
push
shl
mov
enter
popa
push
call
popa
scas
icebp
shufps
xor
cs
add
jmp
mov
ret
jg
test
pushf
stos
inc
imul
rol
ret
cmp
aam
dec
inc
pusha
cmp
ins
retf
(bad)
stos
and
test
dec
push
fadd
or
and
inc
rcr
shl
in
sbb
rol
push
mov
jmp
cmp
sahf
ret
or
mov
dec
into
in
std
aam
xor
push
ror
je
fwait
aaa
loope
inc
test
fcom
mov
setae
inc
sub
lock
(bad)
test
inc
mov
pushf
jge
test
pop
cmps
fs
not
cwde
xchg
adc
mov
mov
(bad)
cdq
and
lock
add
in
mov
cmp
mov
cmp
out
cmc
aaa
jl
and
push
or
sub
mov
lahf
jecxz
enter
jg
call
pop
outs
rcr
iret
pop
mov
adc
mov
adc
out
and
add
sub
mov
cmp
fiadd
popa
pushf
push
cmp
out
mov
dec
cmps
push
ret
ins
and
add
pushf
js
pop
jno
inc
pop
inc
push
dec
fnstsw
ror
pushf
xor
mov
dec
fld
mov
push
in
jp
push
inc
call
push
pushf
scas
push
adc
(bad)
lahf
imul
jns
cmp
pop
jae
and
sub
dec
scas
or
mov
jno
push
inc
imul
ja
cmps
dec
hlt
call
push
xlat
mov
int
stos
fbld
cmp
sub
sahf
pushf
push
int3
int3
jg
push
aaa
aas
aam
push
test
int
mov
sub
fidivr
icebp
xchg
in
aas
mov
cdq
xor
rol
jno
mov
mov
dec
sub
std
js
pop
mov
mov
xor
sub
jp
retf
jno
in
outs
jl
cmp
loop
inc
sub
js
sub
xchg
jne
jecxz
jmp
les
mov
fld
or
les
aad
jb
ret
or
inc
dec
ror
mov
pushf
call
jecxz
xchg
xor
xor
fdivr
ret
fnsave
inc
jmp
mov
sbb
inc
dec
call
mov
jle
push
pop
in
inc
movs
ret
lea
test
dec
retf
pushf
ja
pop
hlt
cmps
sbb
ror
test
cli
ret
sbb
jmp
mov
mov
sahf
cmp
test
and
cmp
mov
ss
fcom
popf
into
fnstenv
xchg
enter
xor
pop
popa
ds
lahf
lods
inc
ins
xchg
mov
xor
movs
sbb
jno
sub
xchg
and
mov
push
jae
in
and
jle
enter
lods
ror
retf
jle
sbb
not
push
ret
enter
and
iret
lahf
inc
jg
inc
pusha
stos
mov
aam
and
push
lods
pop
loop
ret
std
loope
outs
or
inc
not
and
into
pushf
stos
rcr
iret
inc
dec
rcl
out
fs
loopne
push
mov
rcl
rcr
xlat
out
mov
cmp
jmp
cs
push
cmps
inc
jo
sti
std
cdq
sbb
dec
sbb
std
mov
sahf
int
outs
mov
hlt
je
mov
aam
dec
pop
pop
ret
jb
or
pushf
fsub
out
push
push
ja
into
rcr
mov
mov
movs
pusha
leave
popa
fstp
push
xchg
out
adc
loop
movs
ret
xchg
mov
push
ret
(bad)
xor
jecxz
fisub
into
rol
xchg
xchg
xchg
fwait
loopne
or
add
fild
mov
sbb
mov
loope
pushf
js
adc
loop
mov
cmp
xor
out
jle
sbb
mov
sbb
ror
(bad)
push
pop
pop
aas
sub
stc
imul
add
sbb
push
loop
in
imul
jb
pop
in
or
mov
ss
aam
fcomp
sti
push
gs
addr16
and
or
push
rol
(bad)
clc
scas
dec
adc
pop
push
and
xchg
jge
das
sbb
lahf
cld
lea
scas
mov
add
lahf
mov
pop
ins
cdq
cmp
addps
ror
push
enter
mov
push
(bad)
mov
xor
mov
xchg
dec
inc
add
push
xor
cdq
dec
sbb
repz
ffreep
fld
push
dec
data16
jecxz
sbb
stc
fst
popf
xchg
mov
aam
(bad)
xor
ret
add
jne
or
mov
mov
sub
pop
pop
fidivr
ret
les
jmp
mov
xor
cmp
inc
mov
jo
(bad)
pushf
pop
or
mov
mov
retf
and
mov
ret
hlt
test
rol
test
retf
and
push
mov
or
aam
cmp
jge
ret
push
inc
sti
stos
leave
inc
outs
(bad)
fnstenv
pop
pop
daa
popf
pop
sti
jnp
fiadd
push
stos
cwde
mov
jbe
dec
ds
jmp
(bad)
or
rcr
xrelease
jbe
or
jmp
inc
mov
data16
aas
nop
mov
push
jae
dec
ret
mov
cmp
jg
out
inc
(bad)
std
fsub
jne
mov
test
dec
test
push
ret
pop
loope
ror
cmp
sbb
das
pop
jecxz
ss
or
std
dec
mov
adc
jae
or
add
xchg
hlt
jbe
and
dec
and
adc
push
xlat
mov
jmp
ds
xor
or
xor
mov
jle
xor
popf
lods
leave
cmc
sbb
fucom
shl
in
xchg
push
or
cmps
pushf
(bad)
fwait
sub
mov
shl
or
mov
lock
xor
das
pop
leave
xchg
cmc
pushf
call
or
xor
add
pop
push
fcmovne
into
fcom
sbb
aam
mov
sbb
sti
arpl
xchg
push
pop
lahf
movs
(bad)
mov
out
mov
add
sbb
mov
retf
mov
lds
xor
movs
pushf
and
xchg
jecxz
popf
ret
test
pop
sti
test
add
test
push
or
sar
psllw
aas
adc
adc
icebp
inc
mov
das
jp
stos
mov
or
ins
dec
loope
jne
xchg
add
mov
mov
cmp
inc
lahf
jp
cmp
ret
jmp
loopne
xchg
inc
aad
(bad)
in
add
faddp
sbb
sbb
push
(bad)
ds
lock
retf
fsub
leave
push
inc
movs
ret
xor
add
and
stos
cld
rcr
stc
rcr
ret
sub
imul
sub
stc
ret
pop
or
mov
mov
iret
icebp
(bad)
or
mov
push
adc
push
pushf
les
inc
xchg
retf
cmc
(bad)
test
aaa
pop
sbb
jecxz
inc
add
or
sub
inc
pushf
xchg
cmps
fnstsw
add
xchg
gs
test
daa
pop
adc
lods
sub
ret
in
fld
mov
or
out
clc
ret
test
inc
ror
ds
pop
jg
pushf
std
add
fcmovbe
call
mov
aad
stos
ret
inc
repnz
xchg
inc
pop
arpl
push
lock
ja
jecxz
sti
pop
add
test
dec
push
aam
or
dec
pushf
aam
out
int
add
sbb
push
xor
fs
cli
stos
or
ret
cs
mov
data16
ret
in
ret
dec
movs
arpl
inc
mov
fs
test
sub
inc
cmp
enter
lahf
pop
xlat
out
cmc
dec
test
in
arpl
mov
fs
test
jp
mov
pushf
pop
(bad)
in
mov
pop
retf
je
gs
pushf
cli
rcr
pop
mov
icebp
dec
jno
rol
and
cmps
mov
xchg
mov
enter
out
mov
or
push
sub
cli
xlat
push
sbb
sbb
out
add
in
jns
mov
jg
xor
pushf
mov
ret
rol
mov
imul
mov
aas
inc
jp
adc
loopne
fnsave
dec
std
cmps
fwait
nop
ret
inc
fcom
dec
mov
into
(bad)
jns
pop
pop
mov
pop
cmp
aam
repz
mov
xor
psubb
out
stos
cwde
pop
fmul
cmc
cwde
mov
mov
jno
jmp
repnz
repnz
and
int
call
icebp
enter
adc
push
(bad)
call
pop
fwait
jg
ja
dec
fstp
mov
xor
rcl
mov
or
retf
jl
mul
ror
(bad)
mov
out
push
pushf
fstp
jae
pop
arpl
idiv
mov
mov
push
or
pushf
or
inc
xor
aas
xor
(bad)
cmp
retf
xchg
verr
adc
jns
xchg
sbb
jecxz
fadd
mov
int
rcl
out
retf
mov
inc
(bad)
fwait
sub
push
dec
sbb
jne
jl
aam
add
bound
or
or
inc
inc
sbb
std
call
pop
mov
leave
or
aam
push
lods
sub
pop
in
or
mov
pop
arpl
shl
sub
loopne
sbb
repnz
sti
scas
sar
stc
pushf
or
mov
clc
sar
add
loope
sbb
loop
ret
cmps
clc
jle
mov
cmps
sbb
xrelease
jbe
enter
ret
adc
stos
(bad)
xor
inc
rcl
push
mov
sbb
mov
rcr
jno
mov
or
shl
pop
cmp
push
shl
pop
cmp
ss
(bad)
add
xor
push
into
rcr
inc
enter
cdq
arpl
fcomp
xlat
gs
aam
stos
xor
xor
mov
aam
push
aaa
xchg
push
mov
inc
je
shr
fiadd
sub
mov
xchg
jbe
bound
rcr
inc
popa
and
ret
or
repz
push
lea
or
xchg
xor
jo
jo
test
or
adc
or
xchg
(bad)
leave
inc
sbb
jmp
adc
mov
and
dec
nop
(bad)
push
and
mov
pushf
cmp
jbe
loop
aam
retf
hlt
sub
es
jp
loop
fstp
mov
mov
mov
popf
push
ret
stos
push
mov
inc
dec
test
jae
mov
or
test
mov
aam
and
ret
stc
add
mov
rol
in
mov
xor
ss
jp
cmps
xor
repz
mov
stos
sar
push
ret
pop
dec
loope
dec
cwde
and
add
cmp
iret
jg
popa
lahf
push
lock
sar
adc
inc
cs
jmp
push
arpl
lock
mov
outs
pop
addr16
or
cdq
test
sub
loope
pop
cmc
imul
rcl
adc
repnz
pop
jge
aad
scas
jp
pushf
jg
mov
jmp
add
xchg
arpl
cs
fistp
push
fwait
imul
jecxz
mov
movs
and
fadd
cmp
lods
shl
imul
fwait
mov
out
icebp
sub
sbb
leave
mov
(bad)
cmp
pop
add
aam
mov
stos
ret
call
imul
pop
test
pushf
int
jne
cs
xor
sbb
call
test
or
scas
inc
pop
xchg
test
xor
inc
cmc
shl
sar
aad
rcr
mov
add
enter
fld
fwait
adc
aam
dec
inc
mov
pushf
les
xchg
adc
mov
scas
push
ret
inc
aas
jge
lahf
ret
jge
movs
adc
push
out
repz
push
movs
and
arpl
repz
idiv
cmp
retf
pop
pushf
movs
and
mov
xchg
shr
outs
and
sbb
ret
(bad)
das
jecxz
add
fdivr
fwait
pop
pop
shl
in
popf
lods
imul
repz
popf
mov
fisub
mov
mov
pop
inc
(bad)
(bad)
ret
xchg
xchg
pusha
shl
and
or
and
sub
cmp
je
loop
pop
mov
mov
push
mov
aas
stos
xor
(bad)
mov
dec
pushf
fsubr
cmp
cmp
sub
jno
int
ins
xor
lahf
iret
scas
call
test
aam
pop
cmp
ret
lea
pop
enter
pusha
arpl
push
or
cmps
and
test
rol
loopne
in
ret
fwait
jmp
adc
js
das
push
mov
(bad)
pushf
popf
pop
pop
mov
add
out
lock
xor
jne
pop
inc
movs
jle
mov
hlt
aaa
or
mov
sub
stos
inc
inc
aam
(bad)
jge
out
push
popf
xchg
inc
dec
imul
inc
shl
loope
addr16
adc
xor
sbb
and
fs
ror
xor
lea
sub
daa
hlt
sbb
cmp
dec
fcom
mov
inc
push
enter
inc
or
(bad)
ja
or
inc
mov
xor
sub
sbb
or
push
ins
xor
push
mov
arpl
rcr
ret
or
sbb
inc
in
in
scas
and
ret
in
sbb
in
aaa
aam
dec
jg
enter
adc
adc
mov
pop
fsubr
fistp
fwait
xor
out
div
xchg
xchg
sbb
add
add
inc
inc
jae
(bad)
mov
xchg
les
ins
sub
cmp
lods
mov
adc
repz
ret
repz
push
cs
(bad)
inc
scas
lods
push
adc
ret
jbe
std
das
data16
or
inc
push
pushf
mov
xchg
mov
data16
cmp
dec
out
ror
ret
movs
daa
js
loop
inc
or
mov
jno
outs
adc
push
xchg
ret
into
fs
jne
mov
or
mov
sub
into
xchg
call
(bad)
sbb
ror
repnz
aas
div
inc
ins
adc
popf
cld
jmp
jmp
test
add
fadd
xor
mov
retf
icebp
leave
arpl
ror
pusha
and
inc
pop
clc
and
adc
in
popf
cmps
xor
es
add
adc
cmps
jns
clc
aas
mov
stos
pop
xor
je
and
loop
outs
cmp
fwait
sub
sar
int
dec
cmc
inc
jns
loopne
or
xor
sub
leave
push
loopne
mov
dec
sbb
nop
rcr
enter
xor
jmp
cld
in
mov
or
inc
mov
add
lock
and
sbb
fs
mov
push
add
std
push
push
mov
int
jmp
add
inc
(bad)
cld
sub
xchg
ret
mov
fs
je
out
ins
cmp
mov
jbe
jo
jns
xor
ins
stos
add
sbb
cwde
fwait
add
movs
cmp
ror
loope
push
push
sbb
cwde
shr
cmp
pushf
test
push
(bad)
xchg
xchg
pushf
xchg
ins
mov
das
pusha
addr16
xchg
push
add
std
push
mov
cmps
push
ja
aam
iret
repnz
xor
movs
ins
int3
rol
popf
fcom
ins
or
aam
jmp
movs
cmc
fwait
mov
mov
add
arpl
add
mov
jbe
cs
sbb
mov
or
pop
hlt
jmp
or
cmc
imul
ja
jecxz
shr
enter
xor
push
dec
mov
cld
xor
outs
les
and
and
clc
ret
jb
or
pop
movs
inc
sahf
sub
mov
dec
icebp
mov
inc
push
or
test
enter
adc
ins
repz
ds
pushf
cmc
aad
pop
repnz
std
sub
ret
pop
aas
xchg
mov
inc
inc
mov
int
pop
ret
ficomp
leave
mov
inc
xchg
in
pushf
cmps
xor
pop
sbb
mov
sub
jo
pop
xchg
adc
jmp
pop
pusha
add
sar
enter
cwde
jae
fmul
arpl
ror
in
mov
aad
iret
xor
cmp
imul
push
stos
fxch
add
movs
pop
cwde
and
shr
cmp
das
pusha
mov
adc
scas
out
sub
call
and
dec
add
add
out
sbb
sbb
ja
xchg
lock
xor
add
cdq
in
nop
mov
push
ss
nop
retf
or
cmp
imul
inc
cmps
test
lds
mov
pusha
mov
pushf
jecxz
push
ja
dec
fst
jnp
mov
ret
ins
cmc
cmp
sub
popf
mov
pop
xor
sbb
shl
hlt
push
lods
mov
adc
(bad)
sub
scas
daa
mov
push
and
xchg
mov
push
pushf
mov
outs
xchg
cmp
xchg
pop
mov
mov
ret
loopne
xor
and
inc
aad
push
or
pop
imul
pop
inc
nop
popf
outs
dec
or
daa
ins
dec
test
xor
adc
cdq
mov
div
push
popf
out
daa
adc
imul
lods
imul
jns
adc
xor
xor
jp
mov
sub
pushf
hlt
add
mov
sub
gs
popf
push
pusha
pop
cmp
adc
inc
cmp
loopne
add
mov
outs
mov
aam
xor
xor
(bad)
cmpps
outs
pop
dec
inc
pushf
add
loopne
or
movs
mov
repz
and
xchg
popa
jmp
cmp
int
out
xchg
inc
inc
xchg
fiadd
pop
fs
or
push
div
jmp
sbb
inc
mov
sbb
sbb
pushf
test
dec
jecxz
sti
out
daa
sbb
pop
or
cdq
test
popf
(bad)
adc
loopne
out
imul
ins
push
pop
inc
jo
call
xlat
inc
adc
arpl
xchg
mov
inc
rol
pop
sbb
dec
push
add
xchg
rcr
sahf
std
adc
leave
mov
cmp
leave
xchg
in
xchg
rcl
ins
inc
and
(bad)
in
(bad)
fwait
pop
stc
jge
enter
inc
call
(bad)
aad
xchg
pop
aam
sub
and
pop
mov
adc
xchg
cmc
pop
add
dec
or
cwde
jmp
repz
(bad)
push
(bad)
mov
(bad)
(bad)
jp
mov
or
sub
xchg
fiadd
mul
adc
or
pushf
adc
xchg
(bad)
fsubr
cmp
sub
sbb
iret
cmp
dec
inc
test
stos
sub
lahf
lods
dec
push
in
sbb
lods
popa
stos
inc
mov
dec
int
popf
xlat
mov
aad
lds
mov
mov
or
loop
ficom
lods
xor
loope
fcomp
push
mov
mov
push
dec
daa
or
and
inc
arpl
sbb
or
call
cli
sahf
shl
pop
cmp
loope
iret
(bad)
mov
shr
imul
out
adc
ss
scas
movs
cld
adc
push
cmp
fwait
xchg
and
add
pusha
xor
jl
sahf
cld
std
sbb
jmp
push
push
cmc
psubusb
xor
sbb
and
frstor
xor
aas
leave
mov
dec
popf
out
mov
out
dec
das
push
(bad)
mov
(bad)
cmp
push
xchg
or
and
je
ja
iret
push
cmp
(bad)
xchg
jne
ror
jns
adc
out
(bad)
clc
pushf
neg
bound
ss
ror
movs
adc
xchg
stc
and
and
add
mov
js
lahf
xchg
and
xor
retf
fld
sub
in
add
popf
cmp
cmp
fadd
mov
mov
loop
stos
dec
ret
cmp
add
sub
jmp
adc
mov
int
or
jge
mov
push
lods
das
mov
sti
enter
sti
or
xor
in
retf
sbb
out
arpl
ror
in
or
movs
shl
addr16
fild
sbb
and
xchg
je
pop
inc
rcr
int
adc
ret
cmp
adc
inc
sar
xchg
iret
pushf
call
or
inc
aam
xchg
jmp
cmp
mov
ret
ror
fucomp
xor
cmp
into
jmp
ret
and
and
inc
stc
fs
neg
fs
dec
xchg
in
pop
shr
inc
jecxz
sbb
imul
les
fst
int
inc
sub
fld
div
add
xchg
stos
scas
inc
push
imul
add
imul
stos
mov
jge
bound
outs
scas
sbb
nop
pop
dec
add
or
lds
gs
push
push
test
daa
popa
imul
ror
inc
and
cmc
jae
pusha
cmp
jb
xchg
push
test
sbb
mov
pushf
jmp
and
or
push
fisubr
fstp
push
ror
mov
xlat
push
dec
aam
inc
(bad)
jl
dec
ret
dec
xchg
push
mov
or
cmc
and
push
cli
cmc
cli
pop
sub
retf
push
sbb
(bad)
or
fiadd
ret
push
(bad)
in
es
dec
inc
jbe
jmp
adc
shl
mov
push
ret
mov
dec
cmps
push
inc
jbe
add
pushf
(bad)
sub
std
ror
rcr
push
std
or
aam
je
test
adc
lods
shr
pop
mov
movs
rcr
ja
sbb
pop
sbb
adc
fistp
mov
cmp
adc
pushf
ret
push
ss
loope
cmp
shr
movs
cld
or
int3
adc
leave
pop
aam
pop
inc
mov
pushf
pop
mov
mov
outs
mov
xchg
imul
fdiv
adc
lods
and
pop
pop
jecxz
inc
in
aas
(bad)
jmp
inc
aad
mov
jmp
pusha
sub
enter
call
cmp
lock
ror
int3
fs
iret
push
dec
sahf
adc
sbb
and
adc
push
push
and
push
pop
jbe
aaa
imul
in
xor
xchg
add
pop
ret
inc
loop
out
adc
fbstp
inc
arpl
and
jmp
fstp
daa
popa
inc
xlat
jns
push
pop
ret
jb
imul
mov
jno
mov
push
mov
and
in
pop
aam
mov
pushf
shr
lods
rol
cwde
arpl
and
js
add
mov
mov
mov
mov
cmp
dec
bound
mov
in
popf
inc
adc
xor
mov
inc
pop
ins
stc
rol
addr16
xor
(bad)
loope
push
mov
adc
ss
xchg
mov
sub
push
mov
shl
ret
dec
retf
mov
inc
inc
push
fcmovbe
cmp
jne
adc
cmp
sbb
jb
xor
inc
mov
addr16
pushf
enter
adc
js
dec
rol
cmps
inc
sahf
ret
or
outs
jmp
and
(bad)
cmc
xor
mov
daa
aam
push
mov
ret
leave
int3
popf
push
jp
inc
(bad)
push
sbb
xchg
jne
adc
cmp
mov
in
jo
(bad)
push
rol
pop
outs
sub
xor
push
les
mov
ss
test
and
push
and
and
nop
mov
sahf
mov
ret
adc
mov
mov
xchg
call
(bad)
ffree
inc
lock
mov
sub
pop
aaa
out
popf
in
stos
mov
pop
iret
gs
aaa
jo
mov
mov
jmp
and
aas
test
hlt
mov
xlat
ret
and
xchg
dec
icebp
movs
pop
ret
sub
mov
stc
adc
pop
xor
inc
or
mov
stos
xor
pop
xchg
scas
xchg
ret
dec
and
mov
dec
cwde
sar
or
lds
sbb
hlt
pushf
adc
mov
or
ret
adc
push
pop
loopne
dec
ret
loope
jno
add
mov
fs
nop
retf
jae
lahf
dec
ins
sti
in
mov
sbb
inc
push
and
xchg
mov
xchg
fcmovnb
imul
sub
jp
mov
lock
test
mov
rol
push
fld
test
ret
popf
sar
cdq
pop
es
cmp
ret
movs
pop
or
movs
outs
fldenv
sub
repnz
jg
xchg
mov
pusha
jae
cmp
icebp
cmpps
(bad)
xor
sbb
repnz
ins
pop
sub
sar
test
or
repnz
push
ss
cmps
mov
push
dec
les
popf
xor
mov
fild
pop
inc
mov
pop
lods
rcr
or
cld
icebp
mov
mov
mov
lock
xor
out
push
addr16
dec
push
imul
xor
sbb
mov
sahf
addr16
fcom
mov
enter
test
lods
ret
jmp
es
sbb
inc
mov
xchg
shl
fwait
inc
hlt
into
push
ret
iret
ret
xchg
cmp
scas
xor
pop
popf
scas
fadd
shr
cmp
fs
fucom
into
dec
pop
cmp
or
dec
mov
sbb
daa
adc
xor
pushf
sbb
mov
mov
jo
dec
sub
push
mov
ret
int3
fild
and
pop
in
aam
mov
xchg
xchg
ret
loop
jle
jg
inc
cmps
es
or
push
ficomp
scas
xchg
add
in
rcl
call
nop
cmp
out
repnz
cs
ror
or
aam
xor
mov
push
add
rol
inc
mov
popa
pop
ja
push
call
xor
out
fs
jmp
loop
fadd
xchg
jmp
inc
retf
(bad)
mov
rcl
out
lods
inc
inc
dec
scas
lods
jp
in
aam
sbb
pop
push
push
or
pop
pushf
sbb
lea
cmps
inc
les
mov
scas
pop
or
push
xor
mov
xor
sbb
js
int3
inc
jge
je
test
loopne
inc
test
jb
cmp
adc
ror
jmp
mov
pop
ror
call
rol
in
inc
(bad)
push
xlat
lods
les
imul
dec
cmp
call
inc
and
repz
out
cmp
sbb
leave
jl
xor
mov
inc
call
test
js
std
ffree
icebp
mov
and
into
mov
fwait
dec
mov
hlt
repz
in
push
aam
mov
xchg
mov
or
leave
not
cli
add
fadd
sahf
mov
mov
cld
mov
jl
jp
addr16
(bad)
xchg
lahf
jmp
adc
ret
and
ins
mov
lahf
ins
mov
ds
sbb
and
cmp
popf
js
bnd
xor
jno
pusha
call
call
add
xor
pop
mov
(bad)
in
xchg
dec
add
int3
mov
cmp
pushf
pop
retf
sbb
adc
lock
sbb
inc
es
xor
xor
aam
dec
(bad)
daa
or
(bad)
or
cmp
ja
(bad)
push
dec
inc
mov
es
sbb
and
scas
fsub
repnz
test
dec
pop
mov
mov
cmp
(bad)
mov
push
lock
fwait
cmp
pushf
adc
outs
sbb
stos
pop
sbb
ret
lea
sub
pop
push
cmc
sar
pop
add
xchg
lods
push
add
xchg
(bad)
add
popf
(bad)
cmpxchg
pop
and
mov
scas
shl
xchg
jmp
fwait
xlat
ror
ror
mov
retf
(bad)
cdq
icebp
out
mov
jae
aas
inc
cli
outs
mov
(bad)
idiv
jecxz
int3
dec
xchg
xchg
(bad)
push
adc
iret
cmp
sub
inc
and
pop
icebp
jle
sti
inc
ja
(bad)
or
cmps
loop
aam
dec
call
in
add
xor
cmp
pop
sbb
jb
pushf
movs
iret
and
push
retf
jle
inc
pop
jmp
frstor
sbb
loope
adc
or
adc
out
pop
les
adc
jnp
pop
inc
cli
mov
sbb
mov
cmc
js
in
das
inc
cmp
push
lahf
adc
mov
xor
sbb
sbb
mov
pop
loopne
sub
and
js
add
test
adc
mov
push
push
jo
bound
retf
sbb
push
rcl
scas
or
mov
pusha
cmp
dec
adc
pop
or
cwde
cld
sub
outs
jo
pop
sub
adc
sbb
test
cmp
pop
dec
or
hlt
xor
or
rcr
dec
add
ret
aaa
cmp
ds
scas
stos
int3
lods
(bad)
fidivr
leave
adc
inc
(bad)
mov
aas
cmp
dec
scas
pushf
cmp
add
rcl
(bad)
adc
pushf
cmps
mov
aad
rcr
push
cmp
les
mov
xor
inc
dec
add
dec
stos
lds
loope
sub
ret
xlat
aam
jle
mov
push
inc
retf
jmp
xchg
cli
ss
push
in
in
push
ins
daa
or
(bad)
retf
inc
call
aam
shl
mov
sbb
cwde
das
mov
mov
scas
and
aas
pushf
clc
dec
xchg
(bad)
sbb
xor
popa
fsubr
fucom
pop
aam
popf
xor
add
mov
ins
inc
jb
loopne
(bad)
pop
mov
mov
sbb
adc
inc
push
shl
sub
aam
(bad)
sub
out
jno
push
xchg
cmp
cdq
fisubr
jo
outs
(bad)
cld
adc
inc
(bad)
(bad)
jg
or
mov
retf
jo
add
push
sbb
or
in
pushf
cmp
mov
cdq
jae
inc
mov
pop
sti
pop
lds
ret
cmps
in
adc
idiv
repnz
popf
shr
call
les
dec
inc
ficom
lahf
jbe
adc
mov
rol
xchg
xor
xchg
jecxz
mov
xor
stos
sub
adc
add
pop
pushf
movs
outs
stc
and
adc
aam
sbb
push
pop
(bad)
push
lahf
fnstcw
outs
ss
(bad)
loope
cmp
test
or
or
data16
and
lahf
jecxz
push
pop
cmc
xchg
aam
and
cmp
mov
push
(bad)
shl
movs
js
cmc
in
sub
xchg
push
add
fmul
lds
xchg
dec
push
nop
adc
xchg
mov
dec
xor
sahf
mov
ret
xchg
inc
cs
in
retf
push
hlt
adc
xor
inc
fndisi(8087
and
jg
and
sbb
pop
cmp
fst
fwait
inc
or
cmp
mov
mov
fiadd
cs
es
lods
lds
xchg
repz
add
jbe
cmps
ret
inc
hlt
adc
xchg
adc
push
shl
jl
sub
sbb
cmp
hlt
push
(bad)
xchg
add
popa
ret
out
out
jae
xchg
mov
lods
repz
mov
repnz
shl
xor
push
mov
scas
cmp
mov
push
or
addr16
stos
(bad)
arpl
xchg
mov
inc
sbb
sbb
lods
fcom
aas
sub
ret
call
inc
mov
sub
imul
cmp
ss
push
mov
xor
push
push
and
jne
or
test
ror
jns
jnp
jl
push
xchg
in
into
aas
mov
cmps
and
mov
cmc
lds
ins
and
cmps
xlat
inc
test
clc
shl
lea
movs
ret
and
cmp
mov
sbb
std
mov
cs
xchg
sbb
aam
xor
jns
mov
xor
adc
test
cld
xchg
shl
adc
ror
test
cmps
pusha
aam
jecxz
push
daa
xchg
mov
ret
or
pop
inc
fsubr
jns
popf
dec
or
cmp
ret
mov
add
cmc
cmp
ret
adc
mov
mov
ror
and
xchg
xor
daa
and
retf
and
call
inc
mov
inc
inc
out
enter
(bad)
jnp
mov
adc
inc
(bad)
aas
sub
mov
inc
inc
aam
aas
add
lods
hlt
(bad)
ins
and
mov
cmp
or
sbb
aam
jmp
or
pusha
xor
inc
and
(bad)
push
pushf
jge
pop
ror
mov
stc
leave
dec
push
lods
iret
mov
pushf
pop
es
test
inc
loopne
jno
stos
and
pop
mov
mov
and
push
dec
das
mov
movs
aad
inc
std
fwait
leave
jecxz
dec
fstp
scas
daa
out
pop
dec
cmps
pop
adc
cmps
ins
xor
pop
jl
and
pop
ret
lahf
add
out
push
inc
icebp
in
adc
mov
or
mov
mov
mov
dec
jmp
clc
fcmovne
mov
pop
push
shl
mov
cmp
adc
and
call
push
loope
jbe
push
xor
dec
rcl
addr16
push
push
sbb
dec
popa
aas
add
cld
sub
rcl
push
and
ror
loope
repnz
repz
pusha
imul
jnp
push
pop
inc
mov
jmp
jg
fdiv
inc
inc
inc
daa
and
mov
mov
xor
jo
push
nop
loop
mov
jmp
push
or
inc
sahf
stos
cmp
fs
ret
inc
imul
cmp
and
jns
xchg
sub
and
pop
fwait
scas
add
fdiv
sbb
shr
or
sub
push
retf
ss
std
aas
mov
sbb
jae
and
pop
mov
ror
inc
xchg
out
mov
retf
dec
or
inc
or
mov
lock
pushf
sbb
sti
pop
je
dec
push
cmp
sub
and
arpl
pushf
out
(bad)
call
sbb
ret
xlat
in
arpl
xor
push
in
test
out
nop
mov
nop
(bad)
fistp
pop
leave
cmp
icebp
jg
mov
repz
lods
cld
std
add
stos
mov
pushf
pop
stc
fnsave
shl
xchg
rol
pusha
jmp
daa
mov
loop
push
aam
inc
cmps
repnz
rcl
mov
and
mov
pushf
push
add
lahf
data16
shr
xor
loop
aas
jg
(bad)
or
jle
lds
xchg
in
mov
jp
adc
int
outs
cwde
inc
fcomp
mov
cmp
lock
inc
sub
xchg
inc
inc
je
cdq
cld
sub
pushf
fimul
jl
jp
adc
addr16
imul
aas
ins
out
test
pushf
sub
jns
jle
ret
xor
cmp
lahf
add
or
aam
mov
pushf
xchg
rcr
or
jae
test
(bad)
adc
ret
scas
(bad)
outs
adc
in
imul
dec
rcr
or
push
scas
loop
mov
scas
xchg
cdq
inc
test
loop
xchg
or
imul
mov
aam
mov
fnstcw
clc
das
mov
adc
mov
mov
push
cmps
adc
add
in
ret
sahf
iret
movs
bound
nop
xchg
and
sub
pushf
out
jg
fistp
out
(bad)
in
add
lods
pop
mov
inc
sbb
sub
out
retf
mov
and
sbb
sub
dec
and
or
das
inc
pop
inc
dec
add
test
pushf
mov
adc
gs
inc
in
retf
repz
outs
dec
adc
dec
mov
mov
ja
jecxz
xchg
sub
inc
xchg
xchg
jne
xchg
jmp
pushf
inc
xor
sub
cmp
push
or
add
xchg
mov
stc
sub
adc
ret
push
xor
push
jne
pop
js
xor
je
and
inc
mov
jbe
or
cmp
xlat
aad
pop
xor
xchg
sub
cli
rcr
pop
add
cmp
int
pop
mov
pushf
push
mov
lea
int3
mov
jne
in
push
sub
mov
jge
mov
aam
int3
cmp
ret
(bad)
nop
sbb
icebp
loop
pusha
xchg
mov
fld
ret
fstp
cmp
jno
jp
lsl
int3
mov
aad
out
pop
cs
lock
pop
in
loope
ret
and
push
movs
xchg
pusha
inc
leave
mov
dec
pop
cdq
mov
pop
or
pop
scas
dec
push
push
pop
rcl
xor
mov
adc
imul
jecxz
lahf
sahf
mov
mov
xchg
imul
das
push
lahf
adc
xchg
scas
mov
cmp
adc
jle
shl
shl
adc
cmps
pop
or
(bad)
mov
xchg
dec
ds
shl
cmp
inc
aad
adc
push
(bad)
add
retf
xchg
ja
and
fld
push
mov
xchg
mov
dec
dec
sbb
stos
or
in
mov
fisubr
test
xor
jg
dec
aam
xor
dec
fwait
rcl
mov
dec
aam
adc
or
fld
ret
stos
dec
ror
adc
inc
push
loope
movs
push
ins
(bad)
push
popf
lods
push
add
lock
fld
pop
cmp
(bad)
mov
sub
aad
xor
dec
inc
sbb
mov
adc
cmc
pop
mov
ja
add
mov
fs
xchg
aad
adc
jp
sbb
inc
loop
popf
fs
mov
mov
sub
cs
add
adc
cmp
mov
ins
aam
adc
fwait
mov
mov
frstor
dec
ret
dec
inc
mov
mov
xchg
ret
in
pop
jmp
pinsrw
mov
popf
cli
pop
lahf
rol
jae
adc
addr16
add
outs
out
pop
scas
mov
stos
adc
call
pusha
cmp
pop
(bad)
mov
inc
call
add
retf
xchg
fcmovbe
add
add
dec
ss
inc
dec
popf
dec
adc
ret
mov
aam
ror
pop
inc
xchg
mov
popf
cmp
popf
shl
dec
mov
mov
jl
daa
dec
mov
sbb
loopne
push
aam
arpl
inc
popa
sar
sub
mov
loop
ins
test
cmp
cli
adc
in
rcr
inc
sub
jns
pushf
sub
sbb
xchg
cmps
stc
enter
adc
sub
lds
outs
stos
inc
push
mov
arpl
dec
jmp
aaa
into
inc
inc
aam
adc
mov
cmp
ret
cmc
out
inc
outs
gs
(bad)
rol
add
add
(bad)
xchg
mov
cmp
dec
xchg
ret
leave
aas
test
add
adc
int3
into
ins
push
arpl
inc
dec
jge
dec
fcomp
cli
pushf
cwde
pop
icebp
sbb
jmp
and
cdq
mov
xchg
mov
xor
cmc
aas
in
cmp
jle
xor
mov
pusha
sub
mov
sbb
outs
loop
add
(bad)
repz
xor
xor
popf
inc
jno
retf
(bad)
iret
mov
adc
ret
icebp
sti
loopne
(bad)
lea
xchg
xchg
sub
test
dec
fst
lods
mov
dec
or
jno
hlt
test
push
inc
int3
cmp
add
dec
pop
pushf
repnz
jp
shl
call
pop
test
imul
js
(bad)
cmp
call
adc
shl
and
call
push
fistp
push
hlt
sti
inc
popf
mov
jecxz
cmps
repnz
aam
ret
test
(bad)
scas
pop
mov
lahf
and
inc
repz
jecxz
movs
or
ret
out
aad
xor
leave
inc
sub
stos
movs
mov
imul
mov
loopne
ret
jae
cmps
and
xor
cmps
lods
adc
rcr
adc
inc
cmp
xchg
lahf
dec
jae
jns
mov
scas
sbb
xchg
cmp
mov
retf
pop
cmp
div
aam
sti
call
fwait
sbb
(bad)
cmp
aaa
adc
jecxz
test
and
cmp
data16
cs
popa
shl
ret
popa
repnz
(bad)
and
movs
xlat
and
cmc
sbb
pop
repnz
cmp
xor
xor
(bad)
sahf
(bad)
fnstsw
gs
mov
aas
popf
aaa
mov
imul
pop
aam
clc
clc
arpl
sub
sbb
adc
pusha
inc
mov
xchg
inc
lahf
jne
cli
push
les
pushf
or
loope
scas
xchg
test
shl
imul
call
xor
shr
lock
dec
adc
mov
push
adc
or
fnstcw
das
jmp
loop
arpl
gs
js
sub
inc
push
div
mov
fucomp
inc
sti
sbb
sub
stos
xchg
(bad)
sbb
add
cmp
test
lea
sub
lahf
adc
call
test
fcom
xor
xchg
push
popa
cmc
jae
xchg
pop
movs
cmc
cmp
jecxz
jb
call
inc
fsub
les
paddq
stos
mov
sbb
cmp
sbb
jb
rol
push
out
clc
and
in
in
lods
inc
sub
sar
mov
dec
cdq
pushf
jg
clc
add
inc
sbb
aam
out
out
mov
ret
sub
mov
inc
push
mov
in
popf
data16
hlt
sbb
call
std
mov
jecxz
dec
ret
inc
xor
and
out
(bad)
mov
retf
and
mov
sub
mov
aas
sbb
adc
and
inc
xor
dec
mov
out
mov
mov
push
leave
jle
imul
xchg
mov
add
leave
int3
icebp
and
and
cwde
fistp
rcl
pushf
inc
movs
add
cdq
std
stos
jno
hlt
aas
popa
xor
mov
xor
and
or
xor
dec
loope
repz
(bad)
adc
inc
cmps
mov
add
loope
xor
mov
mov
movs
out
fwait
div
push
loopne
cli
pop
pop
inc
mov
or
xchg
mov
mov
popa
not
outs
scas
movs
imul
ins
ror
dec
ds
dec
cmp
inc
jne
push
mov
loop
ins
call
sub
inc
add
jp
xchg
fmul
out
ins
xchg
mov
push
add
jle
mov
(bad)
test
xchg
adc
adc
pop
popf
mov
cmp
mov
retf
ficom
repnz
pusha
jmp
cmp
add
cmp
sub
push
xchg
lods
sti
adc
imul
mov
out
nop
mov
push
stc
cmps
aaa
dec
imul
and
fs
cli
pushf
aas
(bad)
icebp
push
pop
test
add
gs
inc
fs
jmp
movs
pop
push
xchg
popf
hlt
jns
add
jmp
ror
(bad)
cmc
test
dec
inc
daa
popf
xchg
dec
pop
pop
sub
aad
js
ret
in
xchg
pushf
pop
ret
xrelease
loop
push
addr16
gs
adc
xor
mov
jecxz
xor
ins
pop
dec
mov
(bad)
bound
int3
xlat
inc
ret
fwait
(bad)
ds
pop
jno
or
sbb
lds
retf
aam
sar
sahf
jbe
push
lock
ret
mov
cmps
std
fdiv
ret
es
jmp
or
mov
cld
sbb
cs
es
mov
jmp
sub
hlt
test
pop
dec
sar
inc
inc
jo
and
out
popa
xchg
pushf
(bad)
push
or
(bad)
and
cmps
cmp
aaa
push
sub
ret
iret
test
and
and
dec
ja
popf
ret
mov
mov
pop
(bad)
dec
pop
mov
inc
fs
enter
xlat
sbb
call
repnz
pushf
shl
jno
gs
ins
pop
inc
mov
jae
inc
call
inc
jle
mov
pushf
retf
xchg
push
dec
or
cmc
push
es
retf
jge
shld
loopne
out
aas
aam
sub
ja
stc
pop
ret
cmp
inc
aas
fucomp
jecxz
lods
push
addr16
and
inc
cmp
les
aam
push
xor
ret
aaa
pusha
dec
scas
mov
mov
sbb
pop
xchg
sub
mov
into
mov
fstp
mov
pop
loope
test
pop
cmps
aam
push
or
dec
inc
sbb
lahf
sbb
mov
js
loopne
cmp
repnz
xchg
cmp
and
push
aaa
sahf
out
mov
sub
mov
pop
dec
jne
xor
mov
aaa
jnp
adc
cdq
or
cwde
pushf
ss
xor
std
mov
aam
addr16
retf
mov
dec
pop
add
mov
enter
dec
rol
sub
mov
into
inc
ret
cld
pop
mov
imul
mov
test
(bad)
imul
jae
and
ins
aam
push
ins
popf
ret
cmp
repnz
jmp
shr
or
cli
ret
mov
sbb
mov
pusha
push
add
scas
mov
loope
outs
pop
add
add
in
and
sbb
fs
mov
sbb
rcl
clc
inc
fucomip
stos
cmp
or
int3
shr
stos
ficomp
nop
int3
mov
call
cmp
pop
cmp
sbb
add
mov
lods
sbb
adc
pop
bound
cld
fld
jmp
adc
in
add
repz
imul
jp
popf
idiv
pop
repnz
cmc
shl
in
push
jns
adc
push
les
push
jmp
mov
inc
jmp
fnsave
ds
fstp
bound
jge
pushf
repnz
add
aam
push
push
jg
or
ret
(bad)
clc
fs
das
mov
sbb
int3
sbb
dec
cmp
nop
rol
cmps
adc
pop
outs
xor
loope
ins
jbe
test
pushf
movs
and
mov
inc
loop
xchg
add
xchg
shl
ret
inc
lods
add
inc
pop
jl
jmp
pushf
sub
pop
adc
in
push
push
daa
inc
imul
pop
mov
nop
mov
je
fidiv
cmp
push
imul
pop
ficom
in
lock
cmp
loope
inc
jne
adc
cmp
ror
rcr
dec
sbb
push
lock
mov
cmps
inc
inc
(bad)
or
mov
pop
mov
add
xchg
movs
fwait
push
cmp
repnz
outs
mov
mov
inc
jno
sub
cmp
push
jae
jae
retf
add
dec
std
je
mov
jle
mov
(bad)
dec
mov
outs
stos
lea
sar
inc
ss
imul
add
mov
retf
fild
push
(bad)
sahf
in
mov
cli
pop
ret
xchg
int
ret
mov
lods
fs
cmovo
(bad)
bound
lock
pushf
adc
or
jae
loopne
(bad)
jge
movs
mov
jb
div
mov
retf
xor
leave
push
dec
aam
and
dec
rcpps
ret
pop
add
inc
(bad)
jns
ror
shl
mov
mov
icebp
and
jge
or
fwait
shl
pop
outs
ret
shl
nop
mov
jae
add
ret
adc
push
push
retf
loop
sub
xchg
xchg
adc
lea
adc
int3
jecxz
mov
das
cmp
pushf
scas
push
out
mov
leave
adc
xchg
add
mov
cli
pmovmskb
cmps
sbb
dec
inc
sub
mov
mov
ds
scas
shr
sbb
cmp
sub
in
cmps
mov
fadd
fld
jge
and
push
push
xchg
loop
aam
aad
fstp
xor
and
push
mov
rcl
retf
loope
push
sbb
mov
loopne
or
add
pop
aam
adc
cdq
es
sbb
movs
shl
push
es
rol
ds
and
mov
inc
scas
into
fisub
jno
movlhps
or
push
aam
sbb
pop
push
es
mov
push
jae
inc
sub
mov
popf
xor
dec
mov
jbe
retf
mov
jge
test
xor
pushf
sub
mov
and
stc
cli
adc
inc
xchg
pusha
mov
test
sbb
mov
cmp
jl
aam
pop
or
mov
mov
jle
mov
pop
lds
imul
jns
adc
aas
mov
adc
sar
add
or
stc
loop
xchg
pminub
jmp
jo
mov
stos
pop
in
fadd
rcl
pop
into
jge
aaa
out
inc
adc
addr16
inc
jmp
dec
aam
jne
jnp
sub
sbb
enter
call
outs
mov
fs
mov
mov
inc
and
xor
cmp
pop
adc
hlt
iret
inc
pop
aam
aam
pop
xor
mov
cmp
push
mov
mov
lods
clc
lea
mov
pop
std
pop
jb
pushf
daa
ret
jp
sbb
ror
repnz
ret
mov
inc
inc
sbb
mov
addr16
pop
(bad)
fist
pusha
in
loope
push
jb
outs
xor
push
xchg
mov
cs
jmp
out
xchg
enter
sbb
fidivr
add
inc
mov
inc
pop
pop
aam
mov
loopne
xor
xor
inc
aas
retf
popa
scas
add
sub
jg
jb
mov
ret
push
cld
mov
jmp
movs
gs
addr16
aad
in
popa
aam
jbe
cdq
outs
outs
add
pop
lds
test
fcom
retf
cmp
jge
movs
xor
inc
adc
hlt
into
fldcw
fbstp
bound
and
cmp
lock
cs
mov
xchg
push
mov
scas
jae
sahf
test
lods
push
aaa
cmp
and
adc
pop
sbb
xor
lds
push
cmps
aad
adc
jmp
adc
sub
ja
mov
shl
inc
add
aaa
sbb
pop
test
popf
in
cdq
fnstcw
inc
cmp
ja
add
fadd
fist
push
fidivr
inc
movs
repnz
(bad)
lock
mov
jp
inc
xchg
or
(bad)
jo
mov
(bad)
out
test
and
stos
in
xor
inc
rcr
xor
lahf
jge
sbb
push
xor
cmp
or
add
popf
and
aas
xor
(bad)
mov
mov
push
dec
les
aam
sbb
sbb
xchg
xor
mov
movs
add
or
jne
repnz
(bad)
icebp
out
sub
shr
xchg
pop
retf
cmp
popf
shl
push
ja
dec
(bad)
das
int
addr16
and
jp
cmps
loopne
mov
not
xor
outs
add
mov
shr
jae
jbe
cmc
xchg
repz
or
repz
scas
dec
and
mov
and
adc
pusha
cdq
or
xchg
mov
ret
jp
inc
cmp
and
mov
pop
sbb
xchg
inc
ret
mov
push
inc
scas
cld
dec
ret
mov
adc
pushf
je
adc
leave
ror
cmp
mov
xor
ret
test
xor
pop
cmp
jp
xchg
int3
jb
inc
ret
imul
mov
inc
and
shl
outs
mov
mov
lock
popf
out
loop
pop
test
cmp
pop
and
inc
mov
inc
add
lods
fild
and
mov
imul
fdiv
popf
add
cmp
mov
cdq
pusha
sbb
repz
push
cld
fcom
mov
test
adc
mov
push
into
shr
fstp
and
push
ins
sbb
ins
out
pop
inc
sbb
sub
(bad)
adc
sbb
fsubr
inc
sub
data16
call
jmp
aam
jne
sub
js
leave
and
lahf
mov
(bad)
lods
cmp
mov
jae
xchg
in
ret
sub
dec
cmc
imul
inc
xchg
mov
mov
ret
jne
hlt
mov
(bad)
lock
leave
sbb
sub
(bad)
test
ret
test
aaa
cmp
push
pushf
mov
xor
xchg
rcl
dec
pop
mov
push
(bad)
lock
ins
loopne
cld
punpckhbw
jno
push
xchg
dec
push
ja
aas
mov
aam
jl
or
(bad)
mov
xor
xor
mov
pop
mov
sbb
xor
push
leave
lods
jb
mov
iret
or
sbb
add
addr16
jge
nop
cmp
jno
idiv
pushf
cld
std
xchg
scas
pop
xchg
das
lods
ror
fnstenv
cld
ja
adc
add
or
data16
ins
or
nop
movs
ret
xchg
arpl
nop
pop
inc
aas
hlt
or
push
mov
out
fucom
into
pusha
leave
test
inc
sar
inc
cmp
in
cmp
mov
cmp
retf
inc
xor
jne
in
jl
out
shr
jp
pushf
fimul
call
mov
xor
pop
or
lods
rcr
scas
mov
stos
test
enter
nop
pop
(bad)
loopne
jg
inc
in
(bad)
test
scas
jle
sahf
nop
add
mov
loop
cli
ror
inc
cld
mov
sbb
sub
cld
sbb
hlt
call
pushf
ret
rcr
stos
rcr
cld
ss
mov
ret
and
mov
sub
dec
shr
nop
jbe
pop
sub
not
data16
scas
fwait
mov
jb
adc
pop
call
jle
out
sbb
inc
cmps
repz
or
dec
outs
outs
or
ret
in
jnp
xor
repnz
addr16
mov
mov
jb
jne
daa
xor
fs
inc
sub
arpl
cmc
stos
lock
jnp
popa
stos
mov
int3
std
stos
jge
inc
call
dec
(bad)
mov
(bad)
fcmovnb
xchg
sbb
pop
ret
mov
out
aas
xchg
into
sub
cdq
jmp
cmp
loopne
inc
xor
aaa
repnz
push
mov
jg
sub
fcomp
retf
sbb
mov
jge
cmc
loopne
pushf
inc
js
out
paddsw
mov
push
push
rol
loopne
pop
adc
xor
std
sub
clc
fwait
mov
popf
call
pop
clc
xchg
xchg
pushf
movs
fnstcw
dec
div
scas
inc
jo
mov
inc
push
ror
add
(bad)
add
int3
in
scas
bound
pop
aam
mov
mov
cdq
dec
(bad)
fdivr
js
jno
push
cmp
pop
pop
xor
stos
jns
les
inc
sub
inc
aad
ja
cmp
in
out
aam
mov
push
outs
int3
xor
ret
loopne
pop
retf
xor
inc
jae
test
pushf
repnz
pop
inc
(bad)
and
xor
add
mov
jecxz
pop
push
nop
inc
inc
ins
js
mov
icebp
int3
sbb
daa
in
sub
test
jns
sub
xlat
arpl
sub
ins
aam
in
mov
call
retf
xchg
je
push
hlt
bound
xor
into
stc
outs
inc
xor
(bad)
les
sbb
cmp
in
or
jmp
xchg
jne
mov
or
cs
aas
xorps
and
mov
inc
jno
sub
and
jns
inc
mov
popa
inc
fstp
push
sbb
(bad)
sbb
inc
mov
and
arpl
mov
mov
ret
jae
jbe
fsubr
jae
jle
popf
jbe
mov
jge
pop
pushf
sahf
xchg
mov
loope
xchg
add
mov
(bad)
aas
mov
push
xchg
add
test
xchg
inc
test
stos
jp
add
jo
push
in
pop
shl
cs
mov
xchg
and
leave
and
xchg
rol
ror
mov
pop
leave
loop
push
dec
adc
into
(bad)
vblendvps
mov
repz
and
ret
mov
inc
inc
mov
adc
mov
idiv
nop
adc
je
inc
add
pop
cmp
jno
pop
inc
dec
mov
xor
push
imul
nop
inc
into
addr16
aas
cmp
mov
jo
jge
add
pop
pushf
nop
shl
xor
enter
es
inc
and
out
retf
les
aam
jl
jp
sub
push
fsubrp
shr
sbb
xchg
(bad)
ds
ds
enter
cmc
fild
dec
in
jmp
inc
and
mov
push
xchg
mov
mov
ins
push
sti
int
rcl
mov
aas
xlat
ret
mov
(bad)
mov
pop
(bad)
stos
pop
fidivr
adc
sub
das
push
adc
jge
jb
sub
push
pushf
xor
rol
shl
sbb
inc
inc
dec
popf
pusha
dec
dec
test
jae
xor
aam
sar
(bad)
test
call
jb
jg
and
test
popf
jge
xor
les
mov
push
add
mov
ds
dec
mov
sbb
test
bound
inc
aad
icebp
fldcw
xchg
or
and
jmp
adc
movs
ret
or
sahf
rol
jp
daa
stos
xchg
popa
pop
movs
inc
(bad)
aad
push
jecxz
push
xchg
mov
retf
aaa
xchg
and
dec
inc
push
inc
sub
mov
js
or
fdiv
pop
inc
add
inc
fdivr
enter
push
dec
popf
jmp
repnz
aam
nop
outs
cmp
jns
stos
ret
or
mov
test
xor
mov
repnz
inc
test
cmp
fsubrp
pop
lahf
cmc
outs
shl
xchg
jo
fld
inc
scas
adc
das
jle
(bad)
aam
mov
ret
sub
mov
ror
movs
jmp
ds
outs
mov
xor
icebp
mov
xor
pushf
pop
mov
jne
aam
(bad)
and
retf
mov
dec
lock
cmc
jp
xor
outs
retf
dec
popf
dec
popf
jne
scas
push
mov
pop
loopne
lods
ror
sub
outs
pop
aas
mov
aas
xor
mov
test
sti
(bad)
xor
add
pop
std
add
and
pusha
dec
cmps
out
add
rcr
xchg
sbb
or
dec
lods
mov
mov
inc
xor
inc
jle
outs
jge
jge
pop
dec
mov
mov
pop
adc
jp
(bad)
(bad)
test
pop
test
iret
sbb
pop
test
dec
xor
sub
dec
cmp
cs
add
retf
retf
mov
iret
cmp
ss
(bad)
cld
add
retf
sub
xor
sub
in
hlt
shl
(bad)
push
xchg
ret
sub
das
xor
cdq
iret
test
fwait
mov
mov
pop
pop
jl
xchg
dec
iret
pushf
les
sti
xor
push
jbe
sar
xchg
push
fwait
ret
push
loope
sahf
outs
cs
mov
aam
pop
adc
mov
cmp
xchg
jb
mov
jnp
ret
inc
sub
mov
cmp
or
adc
jg
add
lods
lahf
sub
cmps
sub
mov
into
shl
pop
jecxz
adc
mov
shl
in
test
mov
mov
call
adc
pushf
push
xchg
in
jp
dec
dec
aam
lds
shr
mov
scas
inc
(bad)
(bad)
or
test
mov
jecxz
sbb
pop
push
fisub
push
sbb
or
sbb
ret
icebp
mov
daa
cdq
mov
fisttp
jmp
and
jmp
fnstenv
repnz
push
addr16
clc
lahf
sahf
cmps
push
inc
ret
in
mov
inc
fwait
test
out
div
mov
int
cs
shr
fadd
adc
push
ds
xchg
xchg
mov
aam
xchg
mov
push
popa
jo
xlat
inc
data16
mov
int
or
inc
inc
and
xor
ins
sbb
iret
xchg
fbstp
loopne
imul
stc
test
jle
or
and
gs
mov
repnz
addr16
ja
push
ins
addr16
mov
arpl
mov
je
mov
jns
inc
aam
gs
mov
xchg
call
call
frstor
push
shl
int3
into
sub
call
dec
aam
push
pop
push
loope
inc
pop
pop
push
or
ret
xor
shl
not
jnp
jle
jno
loopne
cmp
inc
mov
popf
adc
(bad)
pop
test
jecxz
ss
test
je
ja
jbe
arpl
sub
mov
movs
imul
mov
ror
enter
and
sub
rol
adc
in
push
sbb
xor
pushf
push
popf
add
push
add
lds
or
xor
ins
fs
movs
enter
test
outs
ret
mov
fidiv
inc
cmp
cli
ficom
cmp
aaa
mov
(bad)
fwait
test
inc
cs
and
sub
add
in
xor
rol
mov
or
ret
arpl
inc
ins
test
pop
sahf
cmp
and
inc
inc
retf
inc
clc
movs
add
or
fsubrp
and
test
add
aam
mov
shl
imul
dec
jne
ds
outs
and
shr
inc
retf
xor
or
rol
inc
mov
mov
push
jp
js
pop
ret
repz
adc
int3
inc
adc
bound
inc
jbe
pop
pushf
sahf
rol
cmp
push
mov
stos
jb
lock
ret
pop
mov
into
or
pusha
adc
jmp
stos
dec
xor
adc
mov
xchg
nop
cmp
test
outs
cwde
es
fwait
cmp
fcom
out
inc
loop
cmc
je
pop
pushf
jmp
rcl
and
pushf
adc
in
xchg
out
xchg
inc
mov
outs
jbe
imul
dec
test
inc
push
cmp
xor
lods
repz
fld
pop
pop
jl
aad
and
add
xchg
stos
aas
popf
cmc
pop
test
out
dec
hlt
ror
sub
bound
ja
cmp
out
(bad)
in
pop
popf
mov
add
mov
pop
inc
in
add
imul
aas
or
cld
cmp
mov
repnz
lods
out
aas
inc
fs
call
xchg
ins
call
ret
mov
jnp
sar
mov
jg
pushf
xchg
sub
inc
fmul
(bad)
push
mov
fdivr
fidiv
sub
lock
sbb
add
ins
mov
leave
scas
rol
ficom
pushf
bound
adc
outs
dec
and
xchg
pushf
pop
mov
fwait
mov
inc
and
cmc
pop
stos
test
dec
gs
jge
mov
mov
push
inc
xchg
mov
add
inc
pop
std
out
inc
sbb
arpl
iret
rcl
sahf
ins
add
xor
adc
push
outs
jo
lods
adc
add
add
mov
and
shl
xor
or
jp
out
(bad)
inc
(bad)
mov
jb
int3
hlt
je
jae
popa
shl
aas
mov
test
jo
sbb
lea
jae
cmps
mov
(bad)
out
sbb
loopne
inc
retf
mov
xlat
test
cdq
cmp
and
test
mov
cmp
mov
ret
clc
push
pusha
std
mov
inc
(bad)
cmp
mov
pushf
add
fild
rol
test
call
into
dec
fiadd
mov
jp
mov
inc
xor
sub
cmp
sbb
shl
pop
xor
hlt
adc
stc
xchg
out
daa
adc
jmp
xchg
dec
sub
xchg
pushf
(bad)
mov
(bad)
xchg
shr
retf
jo
das
out
sbb
sti
scas
iret
mov
lds
scas
add
xor
xchg
inc
(bad)
or
out
add
shl
(bad)
loopne
push
mov
ret
pop
cmps
setae
enter
pop
or
std
push
fdiv
(bad)
jmp
mov
bound
push
lahf
sar
inc
or
xchg
gs
leave
out
ret
adc
fs
xchg
repnz
fwait
mov
and
gs
add
inc
rcr
or
leave
or
add
mov
jno
sub
mov
add
cmc
cs
aad
(bad)
pop
pop
dec
push
dec
arpl
(bad)
(bad)
sar
inc
lahf
sar
aaa
mov
and
js
je
cmp
or
jnp
push
or
dec
mov
mov
dec
push
leave
cmp
cmps
xchg
(bad)
ret
rol
movs
stc
ror
mov
cmc
mov
ins
pop
pushf
ds
xchg
xchg
push
inc
jmp
xor
pop
add
and
inc
das
repz
sar
jns
and
or
daa
popf
ffreep
(bad)
loopne
call
rol
xor
cmp
and
or
(bad)
xlat
enter
sub
jb
xchg
shl
mov
pushf
jle
or
ficomp
enter
add
sahf
int3
push
ret
mov
adc
cmp
mov
call
mov
cdq
push
inc
inc
pop
sbb
xor
pop
in
je
leave
movs
pop
aam
add
cwde
mov
test
mov
ja
mov
into
inc
xchg
pushf
pop
add
xor
sub
fld
lds
add
lea
dec
adc
pop
and
cld
mov
adc
lds
xor
mov
cmps
(bad)
stos
mov
ds
rcl
outs
shl
retf
push
dec
add
inc
test
je
ins
and
push
xchg
inc
xchg
pop
xor
ds
cmp
cli
test
xchg
pop
ret
jne
pop
mov
ins
lock
adc
add
jp
and
cld
pop
call
sahf
shl
inc
jmp
sub
xchg
jmp
or
stos
xlat
in
retf
push
repnz
fimul
mov
hlt
add
rcr
xor
aam
lods
add
cmp
push
xor
adc
jl
mov
xchg
test
pushf
mov
(bad)
retf
xor
and
jo
lods
ret
je
je
jge
jmp
xchg
xor
mov
sub
and
push
pop
in
mov
sahf
mov
call
data16
fisubr
adc
iret
rcr
fcomp
nop
dec
and
rcr
mov
push
aam
xlat
cmp
outs
lea
nop
lock
test
or
(bad)
xor
push
sbb
inc
xchg
mov
fst
inc
mov
xor
dec
add
jnp
rol
scas
call
xor
fdiv
jmp
clc
mov
cmp
ret
adc
mov
inc
mov
cmp
cmp
shl
aam
std
xchg
mov
sub
loopne
mov
(bad)
es
ret
xchg
(bad)
and
jbe
lds
ret
lahf
push
inc
adc
sbb
jmp
scas
mov
dec
pop
mov
hlt
test
dec
add
(bad)
cs
out
dec
sar
mov
sahf
(bad)
mov
inc
xchg
inc
aam
inc
sahf
aas
ds
mov
mov
lods
sub
cwde
push
aas
push
movs
int3
ja
mov
imul
aam
push
out
dec
sub
mov
sahf
and
or
push
cs
sub
call
xchg
in
ret
or
adc
aas
xchg
jmp
cwde
cmp
lods
sub
add
mov
ins
fidiv
(bad)
xor
outs
cli
je
mov
repnz
aas
aaa
cwde
jne
aas
dec
pop
ds
cmps
jnp
loopne
or
xchg
lods
les
fsubp
adc
(bad)
mov
scas
add
mul
ds
repnz
or
cli
mov
xor
and
call
mov
ins
(bad)
lahf
pop
gs
dec
adc
mov
mov
inc
(bad)
push
sub
fsub
push
adc
adc
mov
xor
pushf
xor
das
inc
push
cmp
add
xchg
adc
mov
jl
jmp
inc
mov
pushf
loope
sbb
aam
fucomi
lds
gs
ret
cmp
outs
push
inc
mov
les
inc
ret
jno
mov
inc
pop
inc
jmp
cmp
movs
pushf
enter
pop
(bad)
jne
aam
arpl
test
das
dec
cli
cmp
pushf
and
pop
mov
shl
(bad)
jl
test
stos
ret
xor
sbb
xor
aam
add
add
xchg
ret
cwde
mov
or
dec
ret
das
add
mov
movs
and
enter
rol
es
jmp
jnp
inc
shr
into
sbb
mov
outs
or
cmps
inc
mov
xchg
lds
shl
fs
dec
lock
pop
xchg
sbb
inc
rcr
add
or
fcmovnbe
pusha
xchg
stc
add
cmp
pushf
pop
mov
aam
xor
gs
ret
mov
dec
inc
xchg
es
and
in
test
das
xchg
pop
es
out
aas
pop
add
sub
adc
shl
cmps
movs
push
(bad)
jmp
mov
aam
jb
push
rol
or
xchg
pop
sti
mov
(bad)
hlt
and
into
cmps
mov
pushf
push
fsub
retf
fsub
loopne
cmp
mov
shr
ds
or
mov
mov
out
jle
repz
out
ds
call
jg
mov
mov
jbe
shr
inc
mov
aaa
inc
outs
ja
sti
pop
xchg
in
call
pop
lock
pop
mov
inc
jno
call
pushf
iret
sub
lea
aad
aam
scas
loope
xchg
rol
mov
icebp
sub
int
inc
sbb
sub
rcr
xor
rcl
cmp
sbb
or
inc
jne
call
pop
aam
and
ficom
mov
inc
stos
retf
add
add
cmp
out
mov
dec
xor
cs
adc
xor
fwait
or
cmp
pop
cmp
ins
mov
mov
xchg
dec
push
aam
cld
aam
mov
and
std
mov
push
sbb
inc
fdiv
cld
das
sbb
add
ds
(bad)
lods
sbb
fld
pop
imul
xchg
push
mov
(bad)
je
dec
test
hlt
jmp
xchg
and
xor
push
sub
mov
aam
jmp
adc
push
fsub
popf
jl
and
xchg
and
xlat
sub
cmp
pushf
add
or
enter
js
xchg
jl
sahf
inc
push
outs
ret
pop
sub
call
sub
test
mov
out
hlt
mov
mov
inc
popa
pop
push
jns
clc
xor
mov
mov
in
dec
ins
add
xor
aaa
fstp
pop
inc
mov
mov
rcr
aad
or
cmps
call
cdq
aam
pop
mov
pusha
and
lds
shl
js
popf
ret
adc
mov
pop
bound
adc
icebp
ret
mov
push
add
inc
pop
pop
sbb
lods
loopne
addr16
out
adc
sub
cmp
clc
rcl
loop
jg
mov
es
add
push
leave
xor
dec
pop
inc
fld
(bad)
je
mov
cmps
sbb
and
xchg
stc
dec
sbb
jmp
shl
mov
pop
jbe
ret
dec
add
imul
dec
test
pop
inc
retf
fdivrp
xlat
adc
cld
dec
fild
lea
sbb
loop
(bad)
rol
bound
mov
dec
add
xlat
jl
push
inc
icebp
and
mov
inc
push
push
pop
cmp
jnp
add
(bad)
mov
lods
add
test
ss
mov
test
and
pusha
je
mov
ins
fwait
cmp
aam
iret
xchg
ret
xor
ret
add
or
(bad)
in
ss
pop
pushf
mov
cmc
stos
add
cmp
dec
fs
xchg
jbe
icebp
mov
adc
fist
pop
adc
fnsave
and
ss
sbb
xchg
movs
push
call
sub
out
cld
xlat
sar
and
sahf
test
lods
pusha
sub
icebp
inc
mov
mov
cmp
jns
dec
or
xor
push
cmp
mov
xchg
jnp
sub
ret
addr16
sub
jo
inc
ret
pop
mov
pop
stc
sub
repnz
push
inc
xchg
inc
xchg
sar
mov
jl
test
cs
aam
sub
inc
adc
data16
add
out
std
jp
pop
loopne
and
ror
retf
pop
jne
add
popf
xchg
dec
add
stc
or
adc
xlat
dec
shl
lods
and
inc
jmp
dec
add
in
xchg
push
loopne
inc
sub
dec
aam
jne
dec
ds
push
ss
jle
test
stc
shl
loop
cmp
pop
add
outs
ins
xchg
xor
inc
cmp
fs
outs
ficomp
pop
adc
rol
je
mov
lds
and
fwait
aam
test
adc
cld
repnz
lea
xchg
lds
add
push
mov
int
add
repnz
dec
aad
aam
adc
cmps
ret
pop
in
and
lds
cmp
xchg
or
es
push
mov
mov
push
add
lahf
test
push
cld
aaa
xor
pushf
pop
sbb
add
rol
mov
imul
call
xchg
je
lods
aas
outs
(bad)
pop
jp
xor
and
xchg
jo
inc
sbb
clc
sub
out
scas
mov
and
inc
pop
gs
loop
adc
push
loope
pusha
scas
xchg
mov
jl
inc
dec
xor
pop
or
push
aam
mov
push
mov
add
pop
cmp
out
sbb
xchg
sub
std
or
xchg
xchg
pop
pop
sub
push
loop
cwde
fwait
das
push
mov
mov
(bad)
in
xlat
std
retf
inc
mov
and
sets
cmp
mov
jecxz
in
jl
and
movs
icebp
pop
pop
xchg
jl
inc
fdiv
xchg
inc
shr
xchg
gs
push
sub
fwait
xchg
fcomp
rcl
sbb
retf
mov
movs
test
test
mov
inc
mov
mov
adc
inc
pop
mov
mov
lea
lods
out
pop
jp
xchg
repz
inc
fdivr
sbb
popf
pop
clc
jne
popa
pushf
(bad)
shl
sahf
push
into
dec
dec
shl
xor
sbb
retf
fdivp
cmps
and
fst
neg
cwde
xor
and
cwde
pop
in
jmp
mov
mov
adc
out
rol
std
loop
fnsave
pushf
gs
jmp
xchg
inc
pop
jge
jge
nop
lock
fistp
add
sub
mov
sahf
add
add
jecxz
in
adc
jnp
mov
je
rcr
into
cmp
or
loope
jnp
dec
cmp
jle
imul
pop
scas
repz
fild
fwait
inc
shl
ret
jle
mov
inc
inc
cmps
inc
xchg
fldenv
aas
add
ja
mov
fisttp
adc
inc
jl
cwde
push
outs
jp
add
fild
add
aam
fbstp
ret
aad
call
xor
es
add
scas
stos
adc
mov
aas
jns
sahf
test
push
hlt
shr
dec
lock
dec
push
mov
div
xor
sar
sub
and
add
jo
imul
and
ret
int3
adc
sti
mov
jmp
hlt
jmp
mov
arpl
aam
mov
fidivr
scas
mov
int
cdq
int3
cmps
std
aam
out
ficomp
aam
xchg
adc
into
ins
mov
mov
inc
mov
test
daa
outs
xor
pop
repnz
test
aam
retf
lahf
sub
mov
jmp
test
mov
cmp
in
lock
sbb
js
ror
pop
add
fsub
ud2
mov
ror
inc
sub
xor
pop
outs
pop
out
sar
jne
hlt
fucom
mov
sti
jle
shl
xchg
and
pop
gs
scas
ret
mov
lods
dec
outs
inc
lods
xchg
xrelease
call
fnstcw
in
cld
arpl
jno
adc
jne
jl
rol
(bad)
xchg
fisub
ret
xchg
inc
sub
mov
aaa
out
ins
lahf
ds
xchg
not
sbb
xor
cwde
es
div
push
out
add
mul
or
iret
add
pop
and
fcmovnb
loopne
fst
inc
shl
movs
shl
call
xor
rcl
shl
fcmovb
ins
sub
mov
pop
(bad)
dec
jo
aas
daa
pop
xor
or
sub
popf
pop
aas
ret
pusha
neg
stos
jp
and
in
mov
push
pop
outs
jecxz
adc
cmp
mov
xchg
inc
jp
ja
fdivp
(bad)
push
pushf
sbb
pop
fidivr
mov
lea
push
fwait
and
cmp
inc
(bad)
xchg
int3
ds
cwde
push
sbb
(bad)
jb
nop
inc
jle
lock
or
shl
jb
ret
mov
(bad)
and
dec
cmp
sbb
pop
ret
mov
lea
es
sub
xlat
out
fild
loop
push
cmp
jmp
sub
or
in
shr
mov
dec
aas
ret
mov
ds
call
mov
jo
test
imul
mov
adc
pop
add
or
rcr
mov
stc
(bad)
sub
fiadd
into
out
mov
repz
sbb
stos
mov
xor
pop
call
fcom
ret
ret
sub
cmps
inc
mov
call
jge
jo
imul
cmps
cmp
inc
je
mov
or
pop
shl
jne
repz
(bad)
cmp
mov
ins
inc
pop
pushf
into
jmp
push
not
fst
mov
in
xchg
sub
sbb
sbb
jmp
sbb
fwait
in
sub
inc
jmp
ins
xor
pushf
push
stos
les
pop
add
movs
or
dec
jge
or
inc
in
pop
repz
aam
cmp
idiv
sar
cmp
sbb
cmp
xor
hlt
sbb
cmp
scas
pop
out
add
mov
jmp
in
sub
into
stos
inc
loop
push
lahf
pop
pop
and
cmps
xchg
loopne
fs
jp
call
cmc
iret
jl
sbb
mov
popf
sti
mov
mov
daa
pop
dec
adc
dec
push
mov
movs
in
lds
jp
in
or
sub
loop
pushf
and
jecxz
aad
jp
mov
lea
xchg
add
fldenv
popa
scas
cmp
cmp
or
dec
mov
sub
ret
adc
pop
push
inc
pop
jp
mov
pushf
or
pop
(bad)
bound
mov
stos
inc
les
mov
pushf
adc
not
push
xlat
mov
popa
inc
call
mov
neg
jbe
sti
mov
scas
cli
fwait
int3
fwait
sbb
pop
push
pop
fld
pusha
into
cmp
sub
sti
fwait
push
aad
imul
test
imul
movs
add
popa
sbb
int3
mov
imul
mov
dec
jae
or
popf
and
adc
pop
aam
xor
test
mov
ret
aas
repnz
cmp
push
fcom
frstor
mov
lods
cdq
sti
and
adc
jge
stc
popa
xchg
pop
(bad)
rcr
rcr
cwde
loopne
jne
push
dec
sbb
mov
ret
cmp
cmp
xchg
xchg
jle
test
sahf
adc
mov
fsubr
inc
jns
pop
xchg
xchg
mov
hlt
hlt
dec
(bad)
push
fxch
ret
adc
shr
jno
pushf
and
mov
adc
(bad)
cmp
rol
mov
call
icebp
or
loope
ds
ss
inc
mov
adc
cmps
loopne
pop
jp
(bad)
mov
lea
cmp
lock
cmp
pop
mov
xor
clc
rol
inc
cmp
add
fst
test
hlt
mov
pop
ja
mov
jmp
leave
popa
pop
fcmovne
add
push
rcl
pusha
daa
xchg
ret
add
fdivr
inc
jnp
pop
mov
mov
arpl
mov
jp
nop
movs
imul
adc
cmp
adc
inc
popa
in
mov
mov
test
les
ja
dec
or
loopne
push
call
aam
sub
xchg
ret
push
or
lds
sti
inc
xchg
xor
popf
xor
std
mov
push
retf
sbb
inc
inc
(bad)
in
shl
and
pop
pop
pop
test
jl
shr
and
imul
sub
fistp
outs
je
(bad)
jmp
retf
imul
cmp
jno
(bad)
pushf
lods
ret
sar
push
int
in
sub
sub
mov
movs
ror
lds
pop
mov
shl
sahf
cmp
jbe
mov
mov
xlat
jne
xchg
(bad)
nop
pusha
xchg
or
lods
add
cld
xchg
cmp
sbb
mov
nop
repnz
pop
xchg
inc
xchg
call
sbb
aam
or
inc
push
addr16
sub
inc
outs
cmps
xor
ror
jmp
mov
sbb
jg
into
and
jns
das
stc
push
mov
(bad)
ret
out
jns
pushf
mov
mov
mov
jecxz
xor
pushf
mov
sub
fcom
cmp
push
(bad)
sub
add
xchg
xchg
mov
pushf
xor
sar
stos
lahf
idiv
popf
lods
lods
cmps
jmp
rcr
jge
jg
rcl
outs
lock
(bad)
sub
mov
(bad)
jmp
mov
in
cmp
add
add
push
leave
mov
popa
push
adc
xchg
(bad)
mov
aas
ror
add
dec
es
mov
mov
sbb
inc
pushf
adc
xor
out
shl
xchg
mov
mov
cld
cld
sub
pop
ja
inc
and
mov
xor
(bad)
push
loope
int3
cmc
add
lods
ret
out
js
mov
pop
inc
ror
pop
and
outs
sub
les
outs
loop
mov
mov
inc
leave
nop
in
int
movs
shl
aam
fwait
mov
push
imul
arpl
movs
add
pop
sbb
xchg
cmp
jae
fdivr
sar
mov
and
push
or
cmps
popf
test
push
cdq
ds
pop
dec
outs
inc
cmp
rol
retf
add
mov
pop
dec
inc
cmp
ss
cwde
adc
xor
lahf
push
lds
mov
push
bound
push
pop
cwde
sbb
mov
call
inc
std
inc
jbe
mov
mov
sbb
aam
jmp
pop
pop
cmp
daa
jns
inc
xor
out
dec
mov
pop
(bad)
mov
push
cmp
inc
loop
pop
mov
cwde
test
ret
call
popa
lods
in
aas
fwait
popf
pop
fwait
pop
cmp
push
add
sbb
ja
loope
jl
fdivr
aas
and
fst
out
stos
les
lock
dec
stc
pop
inc
inc
cmp
int3
xlat
lods
enter
adc
movs
cld
js
int
cld
aam
ins
sub
jp
(bad)
mov
push
mov
aas
cvtdq2ps
xor
push
dec
push
loop
pusha
outs
ror
inc
jb
das
outs
or
and
movs
sub
dec
leave
mov
gs
cmp
mov
aam
bound
jbe
(bad)
push
sahf
jnp
cmp
std
xor
popf
mov
mov
pop
push
push
stc
into
adc
stos
daa
loop
scas
dec
jbe
mov
cmp
mov
ret
push
lods
cmc
inc
aam
mov
add
mov
das
into
mov
jecxz
xor
pop
ret
scas
jle
call
test
movs
dec
das
push
mov
adc
sahf
ret
mov
cs
cmp
push
and
fwait
jg
inc
inc
retf
pushf
ins
mov
adc
adc
pushf
push
repz
iret
lea
sti
ret
das
loope
jb
arpl
aam
and
out
pop
adc
inc
mov
call
dec
stos
or
jnp
jle
add
(bad)
shr
cmp
ret
std
ss
add
xor
loopne
push
(bad)
icebp
push
jbe
outs
(bad)
retf
sbb
lods
rol
aad
pop
lea
xchg
daa
cmps
push
sbb
or
scas
cmps
cmps
jl
clc
lds
or
js
shl
mul
sub
clc
lock
xor
push
xchg
ret
or
inc
daa
mov
sub
dec
mov
std
and
ins
sub
std
pop
adc
mov
adc
and
jmp
mov
arpl
popf
inc
aad
inc
shl
push
add
or
jo
aam
jnp
sar
add
inc
nop
das
cdq
jbe
dec
push
sbb
adc
push
or
xor
inc
add
lea
push
add
cmp
pushf
call
stos
rcl
cdq
adc
std
pop
pushf
push
mov
shl
push
stc
cmps
shl
mov
dec
mov
inc
push
pop
mov
dec
mul
mov
sub
mov
rol
mov
inc
call
jp
dec
rcr
xor
leave
xor
ficom
adc
test
loop
cmp
into
mov
out
das
movq
sub
jo
call
mov
push
push
xchg
(bad)
ins
stos
dec
std
adc
jns
rcl
inc
mov
jmp
fcomp
mov
push
and
loopne
cli
sbb
popf
nop
shl
leave
mov
(bad)
and
inc
fs
jnp
daa
mov
add
inc
xor
shl
push
inc
fcmovnb
sub
xchg
test
jmp
popf
popa
cmc
lahf
(bad)
sbb
pushf
pop
sbb
mov
mov
in
cli
jns
nop
rcr
scas
loope
inc
stos
add
(bad)
jge
repnz
and
or
gs
out
outs
or
iret
call
inc
cmc
push
and
xor
imul
pushf
ja
in
or
push
rcr
and
repnz
mov
jno
xor
pusha
xor
and
sub
adc
fidivr
popa
scas
cmp
aam
add
in
adc
mov
lds
jle
popf
dec
pop
aam
(bad)
loopne
push
mov
adc
jmp
sbb
lock
or
call
xchg
outs
icebp
aam
push
add
mov
out
and
and
cli
jne
movs
mov
shr
jmp
(bad)
mov
adc
cli
cwde
cdq
push
and
push
xchg
push
xchg
(bad)
add
das
mov
pushf
dec
fstp
call
fs
jnp
or
mov
sub
ss
int3
push
lds
repz
jae
and
inc
loope
mov
ins
push
test
int3
mov
cli
xchg
mov
inc
cmps
cmp
and
outs
and
xchg
mov
sub
(bad)
dec
iret
sti
rcl
xchg
outs
add
mov
(bad)
dec
js
bswap
pushf
sub
fisub
fld
xor
dec
inc
pop
adc
(bad)
sahf
fcomp
sub
cmp
mov
sbb
std
mov
aas
jne
push
mov
ins
imul
xchg
and
inc
rol
test
dec
inc
adc
adc
push
mov
test
cmp
test
cmp
inc
cmp
jo
lahf
loope
pop
div
pop
movs
ret
lea
push
push
ret
sub
inc
cmps
and
fstp
call
mov
pop
jb
nop
mov
iret
stos
fsub
outs
lahf
shr
mov
mov
cmp
jo
jge
inc
pop
cmp
enter
retf
adc
sahf
dec
je
leave
add
jb
jbe
addr16
xor
sti
ja
mov
push
pop
xor
in
jg
xchg
xchg
pushf
dec
and
push
or
cwde
sar
jbe
stos
arpl
(bad)
shl
adc
leave
inc
std
fwait
or
push
pushf
pop
enter
out
icebp
xlat
jle
pop
adc
mov
mov
mov
xchg
dec
int
inc
xchg
inc
mov
ret
fwait
ins
test
add
and
inc
arpl
pop
cmp
les
jo
add
ret
xchg
cmp
xor
inc
push
das
xor
sbb
pop
into
test
cmp
inc
pop
mov
imul
mov
iret
aaa
jecxz
fadd
xchg
int
out
jns
or
pop
out
mov
pop
push
sbb
ret
cdq
jecxz
clc
movs
jno
test
inc
push
gs
pop
test
nop
ret
enter
xchg
les
sbb
sub
(bad)
in
inc
addr16
push
int3
pop
or
sar
ss
sbb
jge
ss
arpl
or
in
mov
mov
add
aam
jnp
dec
pop
jle
shl
cs
ret
add
iret
xor
inc
outs
mov
jae
std
xor
dec
jmp
mov
push
jns
add
cmp
or
ret
stc
test
xor
jmp
xor
cmps
inc
push
(bad)
jmp
call
inc
enter
add
cli
stos
movs
mov
push
mov
inc
push
mov
nop
and
and
push
test
mov
sbb
or
push
push
mov
adc
push
cs
and
ds
cmp
repnz
push
sbb
repnz
movs
cld
inc
or
xor
xchg
adc
pushf
fcomp
fsub
or
cmps
push
xchg
inc
aam
int3
pusha
cmp
fcom
lods
jmp
sahf
scas
dec
aam
retf
push
mov
sbb
push
imul
inc
or
stc
dec
test
dec
aas
jg
mul
cmc
ret
(bad)
(bad)
cmps
fwait
lds
ret
or
sub
mov
mov
lods
pusha
jmp
push
xor
push
xor
sar
lahf
inc
cld
ret
sahf
xchg
jmp
xor
pushf
pop
cmps
fcomp
sbb
jo
rol
or
mov
xor
push
aam
rcl
dec
(bad)
mov
fistp
mov
mov
arpl
in
adc
movs
cld
jecxz
cdq
xchg
rcl
cmp
sbb
pusha
rcl
neg
mov
shl
pushf
xchg
(bad)
in
cmp
int
adc
loope
jg
mov
pop
scas
sub
stos
inc
sub
lock
add
(bad)
xchg
dec
push
js
shl
cmp
shl
mov
pushf
das
das
cmps
fadd
adc
pop
std
add
ja
sahf
in
(bad)
cmp
add
fs
adc
dec
pop
nop
mov
call
inc
jle
loop
xor
pop
cmp
sbb
(bad)
dec
add
cmps
adc
dec
add
push
push
call
or
cmp
outs
and
jp
xchg
ret
xchg
and
cwde
cmp
and
or
dec
push
jne
loopne
enter
ins
sub
aaa
adc
sti
mov
xchg
inc
loope
add
shl
sub
xlat
push
or
add
sbb
pushf
sub
rol
and
push
sub
ret
jge
xchg
fisttp
aas
jg
repz
jo
push
mov
dec
dec
cwde
test
xor
add
imul
aam
xchg
ins
xchg
shr
(bad)
xlat
repnz
adc
(bad)
pmaxub
adc
or
pusha
int3
pushf
fimul
test
jecxz
mov
xor
popf
pop
sub
dec
imul
sub
pop
pop
ret
inc
test
fsub
pop
fadd
push
mov
icebp
cli
lods
or
sbb
rcl
cmp
popf
mov
xor
xchg
jmp
push
cmp
popf
adc
fisttp
cdq
out
(bad)
aaa
in
in
ret
fucomi
ds
dec
inc
jae
or
jp
cwde
add
scas
inc
adc
enter
out
rcr
mov
fsub
dec
inc
or
(bad)
mov
imul
icebp
fwait
dec
aad
jge
clc
bound
repnz
ret
outs
dec
out
mov
fld
mov
bound
xor
dec
and
out
mov
(bad)
loop
pushf
adc
jae
repnz
sub
dec
loopne
adc
popf
inc
push
inc
push
ja
push
lods
loope
mov
sub
sub
fnstcw
fmul
arpl
inc
jl
or
cmp
mov
mul
(bad)
sbb
cdq
(bad)
dec
add
push
into
pop
mov
sub
loop
fdivr
add
and
enter
cmc
bound
add
sub
adc
pop
data16
sbb
add
outs
aam
add
cmp
outs
pop
rcl
call
in
imul
daa
cmp
jmp
mov
cmc
xor
icebp
pusha
dec
add
inc
int
add
in
xchg
and
dec
(bad)
aam
ror
hlt
pop
in
pop
shl
scas
mov
cmps
sahf
inc
mov
mov
mov
xor
ja
sub
ret
pop
popa
test
je
inc
push
js
lahf
xor
cmp
cli
iret
inc
sbb
sahf
int3
mov
jge
stc
add
push
fstp
pushf
sub
arpl
inc
xor
xchg
ss
loopne
out
stc
mov
aas
jne
mov
mov
out
mov
xor
rcr
push
ret
pop
cmp
or
push
cmp
cmps
mov
retf
call
hlt
adc
in
leave
test
dec
pop
inc
sub
pushf
fstp
mov
jmp
inc
or
fld
jae
fldenv
clc
(bad)
push
fdivr
cld
sahf
sbb
jno
sahf
push
mov
push
adc
xor
leave
adc
mov
js
call
jmp
cwde
ret
aas
sbb
add
jb
push
push
mov
mov
pop
lahf
std
(bad)
push
pop
adc
loop
cmp
xchg
aaa
pop
inc
std
add
aas
jbe
mov
sbb
rol
mov
jno
ret
and
test
ins
sahf
outs
hlt
jge
dec
inc
mov
sub
or
movs
jl
ret
and
outs
retw
mov
pop
aas
(bad)
movs
(bad)
int3
dec
or
pop
movs
mov
shr
mov
gs
fisub
xor
ret
mov
ins
fmul
pop
fwait
xchg
sub
xor
jno
cmps
jnp
sub
jnp
lock
cs
ficomp
mov
pop
sbb
mov
ret
not
add
inc
inc
fwait
mov
adc
add
cmp
sbb
jo
sbb
xchg
sub
popf
outs
push
sbb
mov
call
fadd
or
mov
pop
fdiv
shr
les
add
icebp
inc
dec
xchg
lahf
jae
cld
xchg
sahf
(bad)
scas
clc
addr16
cmp
jp
aaa
pop
xchg
ret
cld
je
ja
pop
pusha
leave
rcr
fwait
push
bound
inc
mov
dec
or
xchg
inc
mov
push
inc
push
clc
jle
aam
inc
sub
addr16
sahf
(bad)
mov
inc
inc
movs
dec
cmp
loop
aas
ins
xchg
xor
xchg
push
jge
stos
(bad)
shl
mov
cmp
jl
dec
jp
jmp
dec
aas
xchg
scas
jno
fsub
ret
(bad)
jg
icebp
push
cmp
pop
out
loope
std
cwde
je
ins
push
push
dec
aad
shl
aam
ficom
call
out
fcomp
push
cmps
jo
pop
dec
loopne
jmp
pop
ret
ret
xor
test
aam
mov
pop
or
loope
enter
nop
pop
push
sar
mov
or
mov
retf
dec
shl
pop
iretw
dec
adc
jecxz
adc
fadd
rcr
dec
aaa
jnp
inc
mov
out
or
inc
nop
repz
cmp
sbb
cmp
add
dec
mov
cmp
inc
test
adc
out
mov
sub
add
mov
xchg
mov
push
add
scas
lds
mov
xchg
ror
scas
stc
rol
sbb
or
push
outs
sub
int3
pushf
inc
push
add
fneni(8087
sbb
aas
pop
push
mov
cmps
pushf
test
(bad)
std
retf
xor
push
loopne
(bad)
dec
mov
jmp
ins
adc
dec
jno
mov
mov
mov
lahf
in
(bad)
add
ret
pop
cmc
push
pop
ficomp
loope
cli
pop
jns
mov
sbb
jns
and
cmp
nop
mov
pusha
mov
add
push
cld
pop
mov
mov
(bad)
repz
mov
out
pushf
mov
(bad)
mov
fild
cmps
push
xchg
mov
hlt
inc
cmps
loope
(bad)
idiv
or
rcr
adc
jge
mov
and
sbb
mov
lock
or
cmp
pop
or
iret
mov
dec
lods
in
rcl
mov
xchg
xchg
ret
ins
call
pop
pop
add
(bad)
or
sbb
aam
outs
loop
pop
xchg
jne
pop
rcl
xchg
fisub
loopne
jns
bound
popf
mov
cmp
jp
inc
push
sbb
cmp
xchg
mov
sub
into
rcl
mov
sbb
ret
repnz
mov
(bad)
jbe
pop
call
pop
inc
adc
and
aam
rcr
(bad)
fldenv
pop
and
inc
jb
dec
or
les
movs
inc
push
or
push
rcr
xor
xlat
popa
fadd
push
fiadd
cmps
push
or
mov
ds
fild
pop
jmp
xor
cdq
push
iret
popf
call
ret
ds
jle
push
add
cmps
outs
in
xlat
pop
mov
jge
and
je
dec
push
rol
in
jl
dec
pop
xchg
cld
rcl
inc
xchg
addr16
lahf
mov
hlt
dec
movs
movs
inc
xchg
retf
das
mov
pop
les
inc
fimul
and
push
loope
jl
sbb
rcr
xchg
ins
lds
xchg
mov
mov
adc
xor
pop
xor
aam
adc
jp
pushf
inc
test
sbb
cld
or
add
test
pushf
(bad)
ins
test
inc
xchg
sahf
shl
retf
mov
pop
cli
ret
mov
jae
or
xchg
stos
cs
pop
cmps
fdivr
outs
sti
call
add
mov
movs
inc
mov
mov
sub
es
out
sahf
(bad)
(bad)
mov
pushf
mov
cwde
and
push
mov
les
mul
pop
jo
clc
xor
retf
mov
inc
stos
repnz
mov
xchg
adc
cmp
out
cli
lods
scas
aad
mov
sbb
out
popf
jl
add
pop
lea
dec
and
and
in
call
iret
jmp
mov
add
cdq
call
ret
adc
jmp
shl
pusha
pop
pushf
mov
dec
or
xor
(bad)
push
jnp
jmp
dec
mov
retf
or
mov
and
jg
add
xchg
mov
or
and
add
xlat
mov
xor
adc
ret
retf
and
stos
fcmovne
movs
movs
sbb
retf
xlat
ror
js
sahf
jo
dec
or
test
call
sbb
shl
pop
clc
ins
inc
push
in
loope
add
xchg
push
jnp
jo
lods
inc
and
xor
out
pushf
aad
retf
jb
in
pop
adc
imul
mov
xchg
movs
not
inc
popf
enter
or
repnz
xchg
pop
mov
ret
push
jg
dec
adc
jb
add
shr
jmp
xor
shl
xchg
push
mov
xlat
mov
jle
fisttp
mov
js
call
shl
into
push
sub
inc
int3
add
addr16
call
sbb
leave
ret
add
adc
xchg
pop
cmp
jbe
adc
inc
sbb
cmp
push
ins
push
and
nop
scas
inc
push
sbb
inc
leave
adc
sbb
into
popa
mov
cmp
aam
and
not
push
mov
enter
sbb
xchg
lock
popf
repz
les
cmp
icebp
add
in
jmp
sbb
sub
push
sbb
adc
stos
sub
ret
adc
jo
jne
adc
add
shl
sbb
xor
leave
outs
das
ins
aas
add
sub
aam
out
cli
data16
lods
add
or
xchg
mov
lea
mov
dec
daa
cwde
ret
and
test
test
pop
xor
pushf
enter
xchg
add
sbb
pushf
lods
test
jmp
adc
ret
ret
int
ror
shl
mov
ret
inc
xchg
fwait
ja
push
mov
addr16
test
adc
ret
std
sub
jmp
sbb
in
pop
and
das
fild
pop
pop
call
xor
iret
clc
or
in
aas
bound
and
xlat
out
pushf
shr
pop
push
fwait
loopne
mov
cmp
ret
xchg
xor
rcl
xchg
aam
jg
mov
shl
jb
dec
add
xchg
outs
ins
mov
addr16
rol
xchg
jmp
imul
icebp
inc
cmps
inc
imul
push
xchg
add
shr
inc
jmp
test
inc
jl
clc
imul
mov
jmp
or
aam
mov
add
pop
mov
or
shr
sub
cpuid
call
(bad)
out
sbb
loop
es
int
sub
movs
ret
xchg
(bad)
pop
test
xor
xlat
jmp
mov
and
pusha
or
push
inc
add
mov
jne
xchg
xchg
lods
dec
cmp
fucomp
dec
mov
add
or
dec
pop
pop
xchg
cmc
and
add
leave
fs
(bad)
dec
jne
aaa
in
imul
mov
inc
pushf
dec
mov
cmc
push
adc
out
je
or
fsubr
mov
shl
ins
adc
out
popf
mov
push
call
iret
dec
cs
pushf
mov
ret
xor
les
jecxz
xor
jmp
jmp
xchg
pop
push
repz
jp
ins
cld
cmps
and
popf
lods
arpl
sti
adc
test
outs
or
inc
scas
xchg
imul
aas
jbe
es
shl
fdivp
jl
fmul
pop
mov
sbb
cmp
sti
stos
inc
jo
pop
mov
cmp
adc
jl
or
jg
mov
cli
dec
ins
lock
cs
mov
popf
xor
fisttp
mov
ficomp
shr
sahf
xchg
leave
or
dec
inc
mov
mov
mov
fimul
mov
jmp
mov
or
stos
add
sar
(bad)
in
xor
iret
idiv
jle
ins
movs
sub
ja
lock
stc
mov
and
addr16
mov
rcr
mov
mov
jmp
lds
jb
aam
je
and
mov
cmps
scas
ss
bound
inc
shl
imul
xchg
inc
mov
lods
or
mov
push
mov
jp
gs
mov
ret
test
fwait
cmp
loope
sub
cwde
dec
sub
fsub
or
or
in
rcl
push
dec
fstp
jle
into
shr
cli
mov
call
lock
adc
out
sub
aam
cmps
mov
aaa
xchg
xor
mov
loop
dec
cdq
and
ret
or
into
hlt
or
inc
and
shl
or
jmp
push
pushf
shr
jae
stos
jg
ret
lock
or
jecxz
push
movs
movs
hlt
cld
push
pop
sub
into
nop
jmp
mov
div
push
add
in
push
sbb
jp
loopne
xchg
push
sbb
cdq
out
adc
mov
mov
rol
repz
iret
cld
aas
mov
ret
test
pushf
push
loopne
enter
jp
popa
jg
mov
mov
clc
xchg
mov
mov
addr16
jge
pusha
clc
(bad)
iret
daa
sub
dec
movs
(bad)
push
imul
ret
cwde
push
inc
jo
xor
test
movs
add
mov
shl
rol
add
ret
mov
sahf
nop
std
das
mov
and
mov
pop
ins
pop
pop
adc
ror
cmp
out
aam
mov
push
fdivr
xor
sub
adc
cmp
push
loope
pop
lea
data16
mov
ins
cmp
mov
enter
test
retf
pop
in
mov
ins
call
mov
jecxz
mov
popf
test
mov
fcomp
stc
sub
mov
mov
push
cmp
dec
fcmovbe
xchg
jne
pop
jmp
xor
ret
xchg
push
fld
push
mov
add
loopne
add
das
cmp
adc
repnz
aam
imul
mov
mov
fsubrp
sbb
in
pop
sbb
cmp
xchg
retf
jg
int
out
aam
std
ins
mov
aam
xor
jle
imul
rcr
jle
ret
adc
inc
daa
sbb
cmp
outs
test
enter
lock
mov
stos
or
xchg
pop
add
jge
mov
mov
shl
xor
rol
jg
pushf
mov
xor
rol
xor
pop
ret
mov
lds
scas
pusha
test
js
push
cmp
mov
jmp
cmp
sti
mov
jne
pushf
and
sub
pop
inc
outs
jmp
not
bound
in
(bad)
jae
mov
and
jmp
dec
movs
inc
shl
data16
shl
into
je
pusha
cwde
jg
jns
cmc
mov
sbb
mov
sbb
sbb
cmps
imul
xchg
fsub
loope
fisubr
in
into
shl
cmp
adc
push
repz
call
dec
xchg
and
scas
das
inc
mov
data16
adc
xor
pop
adc
out
int
les
mov
cli
sub
xchg
enter
push
bound
xchg
pushf
mov
cmp
cld
cmps
repnz
js
adc
jnp
daa
bound
or
test
(bad)
cmp
xchg
rcl
fisttp
lea
inc
sub
jmp
cmp
popa
sbb
mov
dec
aad
fnsave
add
(bad)
fs
pop
jp
fdiv
push
cmp
outs
jnp
and
ins
shl
repnz
fldenv
dec
inc
aas
lea
test
push
and
arpl
or
pushf
mov
icebp
test
ret
retf
adc
inc
and
inc
mov
adc
js
pop
cmp
jge
adc
int3
imul
aaa
pop
pop
data16
mov
jmp
inc
jo
gs
jp
pop
ret
cs
jo
mov
adc
rcl
lock
addr16
jno
dec
jns
call
repz
retf
mov
sub
mov
popf
adc
imul
adc
cmp
xchg
push
ret
sti
mov
pop
(bad)
and
and
push
std
jo
xchg
xor
or
pop
push
nop
mov
scas
cs
fwait
mov
xchg
enter
jae
fiadd
jo
mov
xlat
mov
(bad)
loope
or
jbe
les
xor
ins
dec
(bad)
loopne
sbb
push
dec
inc
(bad)
sti
daa
push
aas
push
pop
popf
add
fsubr
add
ret
shl
cmp
adc
aaa
xchg
cmc
sbb
mov
sbb
test
pushf
inc
mov
data16
(bad)
call
ret
mov
xchg
xchg
pop
or
rcl
ret
lds
pushw
mov
adc
rcr
ret
xor
adc
lods
repz
stos
mov
inc
aas
icebp
pop
hlt
inc
pusha
(bad)
add
sahf
inc
imul
push
cli
mov
or
test
ret
jl
push
adc
push
hlt
jg
aam
mov
pop
(bad)
dec
dec
push
ret
movs
loop
fmul
xchg
out
shl
cmps
fs
rcl
cmp
jnp
popf
test
adc
ret
scas
scas
js
push
rol
add
push
jecxz
mov
add
mov
inc
test
ins
mov
inc
xchg
dec
ins
inc
div
xlat
mov
mov
jns
in
adc
pop
dec
popf
clc
mov
dec
inc
js
inc
dec
fimul
dec
mov
daa
fnstsw
shl
shl
push
rcl
xchg
and
ins
xor
rcr
or
pop
ins
aad
stos
adc
mov
cmp
stc
pop
xchg
inc
mov
test
sbb
fld
in
sar
outs
pop
sbb
dec
popf
gs
rol
push
shl
hlt
xlat
dec
add
jb
adc
and
pusha
mov
pusha
adc
sub
ret
push
ins
out
fmul
lods
inc
pop
in
sub
call
xor
loopne
je
leave
jae
ffree
xchg
stc
mov
fsubr
cmp
mov
fwait
shr
jmp
xor
fwait
pop
aam
data16
mov
dec
stos
inc
call
push
aam
sti
push
jae
cmp
ret
push
pop
adc
repnz
jbe
xchg
arpl
mov
popa
xlat
packuswb
xlat
mov
shl
inc
add
mov
cmps
les
sbb
cmp
ins
outs
mov
cld
xchg
adc
fld
pop
mov
lods
or
ins
pushf
inc
xor
dec
movs
stc
bnd
dec
(bad)
shl
jno
das
ret
mov
xor
cwde
out
pushf
pop
dec
pop
sbb
pushf
aas
sub
mov
jnp
jne
dec
fadd
pop
je
mov
pushf
mov
and
xor
inc
pop
(bad)
retf
ret
(bad)
adc
cmps
push
inc
rol
shl
jmp
popf
ret
out
dec
ins
adc
inc
or
xor
mov
hlt
adc
ds
sahf
mov
mov
lock
mov
cmp
inc
cs
dec
push
lock
leave
mov
call
xchg
loop
add
dec
aam
retf
call
mov
jnp
xor
aad
xor
outs
mov
jne
aas
inc
jb
ss
inc
dec
ja
cli
mov
jbe
push
xchg
mov
iret
dec
repz
mov
add
int
adc
push
popf
enter
loopne
test
aam
scas
xchg
ret
sahf
and
sar
push
inc
inc
xor
xor
pushf
adc
and
je
sub
je
cmp
dec
ret
sbb
ja
or
(bad)
pop
jns
cmps
pushf
(bad)
jecxz
jmp
scas
nop
mov
mov
repz
es
cmc
imul
mov
cmp
pushf
daa
jmp
pusha
jge
xor
jbe
xchg
sar
sbb
cmps
lock
out
retf
xchg
daa
call
jnp
push
(bad)
int
ins
ror
inc
into
jmp
mov
hlt
or
in
and
fwait
sbb
popa
inc
(bad)
cld
sbb
inc
xchg
mov
mov
mov
lds
lahf
xchg
ror
call
pop
pop
mov
jae
pop
pop
mov
and
push
xor
cmp
loope
pop
dec
into
in
pushf
fimul
or
imul
call
retf
jl
repnz
cmp
clc
aas
jno
inc
test
int3
retf
leave
ret
js
int3
inc
dec
cdq
pop
sti
adc
(bad)
neg
inc
gs
aam
push
cmps
and
add
adc
rcl
xor
add
(bad)
ffree
xor
and
fidiv
sub
and
into
adc
ret
in
jae
jb
mov
dec
cmp
cs
popf
add
mov
cmp
aam
push
inc
es
repnz
ror
jno
(bad)
inc
xchg
pushf
sbb
push
in
jl
push
ret
xor
sbb
inc
sub
mov
dec
icebp
mov
jl
test
pop
sub
mov
ret
cmp
sar
int3
or
arpl
inc
cmp
pop
mov
enter
icebp
adc
nop
ins
dec
mov
xchg
push
adc
out
call
inc
loopne
in
fmul
(bad)
jle
(bad)
mov
dec
lods
aam
daa
pop
mov
je
cmc
sahf
loope
inc
push
popf
adc
int
aaa
loop
arpl
push
mov
adc
push
and
mov
jns
inc
aam
jp
dec
mul
mov
xchg
fisttp
and
inc
jp
xchg
ror
jb
sub
add
xor
push
(bad)
pushf
and
mov
jmp
sahf
xor
pop
dec
das
das
sub
aam
lods
cld
sti
jnp
fwait
push
ret
lea
ss
and
sbb
enter
ds
jl
pushf
sub
or
mov
or
push
fwait
and
out
jb
(bad)
adc
loop
imul
or
enter
test
stc
cmps
test
sbb
fild
mov
mov
int
ror
sbb
shl
fisub
sbb
test
nop
je
inc
ds
jno
push
mov
out
aam
dec
imul
in
or
outs
pop
pop
inc
mov
pushf
cmp
iret
adc
jo
cdq
aas
je
cmps
or
add
xor
sub
das
push
into
sti
aas
sbb
aad
cmps
mov
jecxz
inc
pop
adc
mov
pop
out
mov
retf
stos
pop
jo
mov
lods
push
xor
mov
test
inc
pop
and
mov
rcl
inc
xlat
loope
lods
cmp
mov
test
je
cs
js
sbb
fsub
push
retf
pop
sti
inc
shl
hlt
xor
imul
dec
imul
jno
int3
loop
(bad)
outs
cmp
popa
loope
sbb
dec
stos
out
and
xchg
daa
mov
fdivrp
int
push
adc
(bad)
pushf
dec
jmp
and
aam
mov
add
cmp
mov
dec
(bad)
xor
jne
dec
xchg
iret
int3
loope
ds
mov
cmps
ret
in
(bad)
and
ret
mov
(bad)
aas
popa
dec
ins
cmp
pushf
int3
movs
pop
jmp
popf
ror
sar
cmps
sub
or
mov
cmp
das
mov
ret
mov
mov
pop
imul
mov
add
push
ret
xchg
stos
bound
aad
and
inc
mov
pushf
gs
ret
je
ror
mov
sub
adc
stc
add
mov
popa
retf
cmp
std
scas
jns
outs
inc
iret
les
xor
mov
sub
(bad)
pusha
loop
scas
pop
aam
and
shr
ret
xor
fadd
test
ret
inc
imul
cdq
out
mov
popf
dec
lea
je
fs
scas
push
aaa
fist
and
xchg
mov
repnz
inc
aaa
add
jns
pop
aas
inc
cmps
xchg
push
xchg
mov
sbb
pusha
xlat
mov
ins
das
test
daa
adc
mov
fwait
or
mov
stc
bound
mov
xor
sub
mov
lods
mov
fnstsw
dec
add
pmaxsw
repz
call
jb
inc
shl
mov
pop
bound
lds
jbe
push
mov
adc
mov
lea
out
(bad)
add
pop
xor
jns
push
xlat
dec
jne
sti
aam
push
push
sbb
xchg
sbb
enter
lds
sub
(bad)
shl
lods
mov
in
pop
or
push
(bad)
icebp
ret
sub
or
je
mov
sti
jg
stc
mov
xchg
pushf
sub
mov
data16
adc
std
test
push
ret
int3
inc
dec
cmp
inc
les
inc
pop
pop
pop
out
fcomp
(bad)
push
leave
(bad)
mov
xchg
or
dec
mov
ins
pop
inc
inc
or
jl
ins
push
icebp
push
inc
adc
out
xchg
push
mov
xchg
pop
adc
test
je
test
mov
test
jae
rcr
mov
sbb
xor
inc
jmp
cmp
test
ret
repz
mov
push
call
in
mov
fadd
pop
loop
and
and
sub
adc
sub
cli
or
xchg
pop
mov
mov
inc
cmps
xchg
out
add
(bad)
out
pushf
(bad)
out
jge
cmp
lods
(bad)
push
movs
pop
(bad)
movs
iret
mov
ret
or
pop
xor
aam
dec
(bad)
retf
mov
dec
shl
mov
xor
cmps
data16
aam
push
xchg
lock
dec
fwait
ins
and
mov
std
minps
das
add
js
les
data16
sub
outs
sbb
rcl
mov
iret
jl
popf
xor
gs
ja
and
sub
xchg
push
loop
loop
sbb
pusha
pop
out
sub
aas
lods
xchg
out
xchg
loopne
dec
ret
xor
loope
sbb
push
jecxz
jle
push
xchg
fimul
and
pushf
mov
addr16
lock
add
stos
shr
mov
fiadd
cmp
dec
popa
add
push
add
aam
mov
je
ret
(bad)
pop
mov
test
inc
lods
stc
mov
retf
js
pop
rol
pop
jns
pop
cdq
or
cmp
mov
mov
cmp
fcmovb
pop
imul
pop
or
inc
xor
bound
cmps
push
jg
fstp
pop
into
inc
jo
mov
in
ja
pushf
sbb
mul
rol
aam
scas
cs
cmc
(bad)
lahf
hlt
adc
js
sub
mov
(bad)
mov
js
or
mov
fld
fldcw
cmp
and
stos
mov
inc
and
push
lock
mov
fild
ss
ret
add
dec
xchg
cmp
aas
xor
int
fnstenv
pusha
rcl
push
popf
jge
imul
mov
pusha
pop
push
sub
fstp
imul
inc
mov
(bad)
shl
xchg
pop
jle
adc
pop
mov
rcr
rcl
int3
enter
out
push
xchg
popf
loopne
pop
cmp
aad
clc
add
pop
(bad)
xchg
test
sub
inc
jl
push
data16
iret
stos
xor
ds
inc
pop
hlt
sbb
pop
sbb
lock
arpl
ficomp
sub
aas
push
xchg
jmp
push
xlat
es
push
retf
mov
or
pop
or
shr
cld
push
repnz
repnz
sub
cmp
jae
push
inc
xchg
ret
sub
test
lods
xchg
adc
out
lock
pushf
mov
sub
sar
jmp
mov
retw
scas
clc
or
fistp
inc
aaa
mov
in
inc
inc
mov
idiv
clc
std
shl
inc
or
mov
lahf
fsubr
push
retf
dec
xor
repz
mov
mov
sub
mov
mov
js
mov
test
icebp
data16
ret
shr
mov
inc
and
xlat
jge
(bad)
cmps
cmps
sbb
mov
fdiv
inc
fdivr
inc
or
sbb
xor
out
mov
mov
std
pop
daa
nop
jg
xchg
mov
and
test
(bad)
dec
ret
jnp
push
cwde
lahf
mov
cmp
mov
sar
jmp
rcl
out
xor
stos
mov
ret
loop
enter
inc
dec
inc
mov
outs
mov
ret
int
xchg
inc
mov
cmp
inc
mov
and
or
mov
dec
popf
or
add
jecxz
stos
push
ja
inc
mov
pop
(bad)
xor
push
and
jmp
ret
and
cmc
sub
jle
pop
xchg
pop
pushf
adc
or
shl
cmp
jne
sub
push
shl
pop
mov
xchg
adc
inc
shr
repz
out
outs
aam
push
dec
lods
xchg
ret
xchg
sub
mov
retf
lahf
cmc
aas
jle
pop
or
mov
jle
ror
or
or
mov
jae
ror
jb
adc
inc
cmp
mov
stc
xchg
jp
jno
je
data16
sbb
sub
neg
inc
xchg
inc
mov
retf
ins
in
lock
cmp
ret
xor
mov
loop
jmp
pop
push
ret
xchg
test
add
add
popf
mov
ds
arpl
in
add
jp
mov
push
dec
popf
mov
cwde
jp
dec
mov
daa
cs
xor
cli
pushf
push
outs
cmp
or
mov
jb
mov
int
aam
clc
jg
inc
out
out
ret
mov
test
bnd
cwde
add
jg
sti
mov
push
push
dec
shl
mov
push
pop
aad
dec
mov
cli
outs
cmps
and
mov
jp
shl
push
xor
out
pop
dec
es
cmp
sub
retf
push
test
add
rcl
sahf
push
ja
cmp
or
lahf
fbstp
pop
lods
(bad)
js
xchg
bound
pop
mov
(bad)
repnz
push
or
add
enter
cmps
loop
xchg
out
push
pop
push
xchg
xor
add
cmp
xchg
js
stos
out
dec
addr16
push
int
lock
jge
pop
aam
add
ret
cmp
jp
mov
push
add
mov
xor
mov
rol
sub
sbb
cwde
das
aam
or
lods
pop
das
mov
jnp
cmps
xor
retf
sbb
push
lock
ficom
xchg
mov
out
push
pop
in
aas
sub
loop
in
dec
pushfw
mov
aaa
add
hlt
aas
jecxz
cld
mov
cmp
out
inc
(bad)
(bad)
call
popf
pop
cmp
rcl
mov
or
(bad)
pushf
cmp
lods
add
cmc
add
test
ret
or
xor
loope
inc
mov
sbb
push
retf
test
and
mov
scas
mov
lahf
test
and
xchg
aad
push
aas
mov
dec
rol
xchg
fwait
jecxz
xlat
test
loop
or
cmps
inc
pop
jmp
inc
popf
sbb
lahf
cmps
stos
rcr
es
in
xor
aas
xchg
scas
out
nop
stos
add
inc
jg
sbb
cld
mov
rcl
repnz
retf
mov
sbb
ret
(bad)
mov
mov
inc
xchg
aaa
and
pop
push
adc
fisubr
add
push
jmp
push
push
and
out
inc
push
ret
mov
inc
or
adc
sbb
retf
rcl
sar
and
dec
xor
inc
sub
adc
popf
nop
add
or
imul
mov
xchg
push
adc
(bad)
shr
and
imul
and
jns
push
gs
nop
ret
sbb
scas
or
inc
iret
xor
ja
popf
push
jl
push
sub
pop
xchg
shl
bound
test
mov
inc
(bad)
(bad)
movs
pushf
movs
adc
fisubr
test
int3
ss
loopne
mov
mov
cmp
sbb
and
xchg
in
call
inc
icebp
xchg
repnz
inc
int3
or
loop
adc
imul
bswap
xor
lods
or
xchg
nop
(bad)
pop
pop
mov
fdiv
ss
add
call
jmp
mov
mov
pushf
pop
xchg
in
and
(bad)
shr
je
and
std
jno
push
ds
gs
je
inc
dec
fisttp
mov
pushf
mov
loop
jecxz
into
(bad)
pop
sub
stc
cmp
sahf
daa
pusha
xor
mov
cli
inc
sub
pop
inc
ret
shr
ret
rcr
inc
mov
(bad)
nop
add
jge
lea
xor
outs
pop
std
sbb
lds
add
push
and
xchg
fs
jp
pushf
test
cmps
or
aam
daa
out
enter
nop
sub
mov
cmp
call
imul
(bad)
sar
mov
shl
icebp
popf
imul
loop
mov
shl
jle
or
inc
sub
sti
pusha
fistp
js
sbb
inc
sbb
out
pushf
lods
lea
push
aam
push
mov
or
(bad)
jecxz
ins
loopne
mov
jge
lock
push
cmp
dec
ret
in
pop
aam
lahf
xor
pushf
mov
sbb
mov
aas
xchg
lahf
xor
sub
ficomp
add
out
imul
ret
dec
out
mov
ins
inc
mov
mov
pop
popf
pop
call
jae
shr
dec
sbb
ret
pop
sbb
aas
ror
xor
cdq
inc
inc
pusha
push
xlat
mov
pop
dec
aad
adc
inc
cmp
cmps
lods
dec
cld
das
in
ret
mov
xor
cmp
inc
xor
push
fcomp
push
dec
(bad)
cmp
shl
push
cmps
jp
or
stos
push
ins
test
and
cmp
mov
mov
outs
pop
fbstp
sbb
xor
xchg
(bad)
push
or
adc
loop
cmp
lahf
retf
popf
inc
inc
into
mov
popa
fsubrp
(bad)
fs
mov
stos
leave
dec
leave
clc
loope
mov
sbb
inc
ret
and
cli
jb
sahf
inc
cmp
cs
and
inc
shl
rcl
jne
cmpps
cwde
ins
daa
(bad)
pop
sbb
sub
(bad)
adc
mov
mov
add
aaa
xchg
or
pop
in
dec
pop
popf
pop
(bad)
mov
inc
out
mov
out
aaa
out
int
cmp
adc
push
mov
sahf
nop
xor
frstor
pushf
push
movs
fadd
stc
aas
loop
add
scas
imul
mov
sbb
rcr
mov
mov
scas
leave
pop
cmp
sbb
sub
frstor
inc
mov
add
fbstp
cld
inc
out
aam
(bad)
es
dec
inc
ret
pusha
cmp
inc
mov
adc
push
inc
test
or
popf
mov
das
(bad)
xchg
in
shr
pop
bound
test
jge
rcl
scas
push
movs
lods
hlt
scas
nop
ret
pop
test
cmc
mov
xor
loop
je
mov
stc
pop
cwde
dec
aas
fs
xchg
aas
mov
dec
or
lea
or
lods
push
xor
xchg
clc
adc
inc
and
mov
lahf
xchg
jae
mov
or
scas
outs
ret
mov
je
xchg
jb
inc
std
push
mov
outs
pushf
repz
push
int
faddp
jmp
sbb
inc
pop
sub
pop
add
movs
jmp
stc
mov
and
cmp
mov
jae
cmp
cli
xchg
dec
adc
adc
dec
lock
sbb
retf
jecxz
bound
ret
loope
sub
add
mov
jp
dec
mov
std
ins
pushf
and
hlt
(bad)
mov
mov
sbb
jns
fdivr
sub
rol
xchg
xor
push
or
add
xor
pop
je
fwait
test
sub
inc
mov
xchg
push
cwde
inc
sti
inc
inc
push
or
inc
iret
call
jmp
test
pop
pushf
dec
dec
jns
mov
addr16
shl
push
fs
inc
jl
jns
shl
adc
std
aas
je
(bad)
into
ds
sbb
scas
sbb
retf
aas
jo
dec
repnz
cmc
jg
mov
aad
xchg
cmp
mov
loope
mov
xor
movs
sub
shl
mov
or
lds
popf
retf
adc
popa
adc
or
mov
outs
dec
pusha
push
retf
pushf
xor
jae
push
sbb
imul
dec
cmp
(bad)
xchg
mov
sar
or
aaa
jmp
(bad)
jmp
sbb
and
cmp
je
xor
jp
adc
xchg
jb
scas
mov
ds
or
fwait
ret
imul
stc
into
or
ds
icebp
ret
xchg
mov
mov
mov
ret
(bad)
clc
xor
cs
sub
inc
mov
shl
mov
sahf
pop
sbb
push
das
mov
inc
mov
in
jecxz
popf
ins
xor
xor
add
inc
xlat
test
pop
ret
inc
mov
mov
clc
push
gs
xlat
xchg
lods
mov
(bad)
addr16
aad
lahf
test
retf
shr
push
pusha
mov
fstp
ins
and
inc
aaa
jge
xchg
adc
pop
mov
pop
loope
rcr
xlat
std
jb
in
jne
pop
pushf
or
jp
push
in
mov
data16
into
mov
test
push
ret
pop
je
enter
sahf
pushf
stos
test
add
adc
aam
in
sbb
ret
les
xor
or
ficomp
xor
lods
in
pop
inc
jecxz
pop
fbld
cs
sbb
lock
cld
(bad)
into
pop
inc
mov
mov
mov
xchg
or
pusha
xor
(bad)
push
cmp
cwde
gs
inc
add
outs
loope
sub
leave
add
ret
(bad)
shl
inc
into
rcl
push
leave
pop
out
shl
imul
imul
jo
in
fwait
fs
ins
retf
mov
jbe
inc
sti
in
jecxz
mov
jl
pop
lahf
nop
icebp
xchg
xchg
add
retf
std
(bad)
pushf
mov
stos
imul
and
xor
aam
call
test
pusha
inc
ds
ins
lahf
in
mov
push
xor
add
sbb
outs
add
push
cdq
pop
sbb
test
push
mov
jmp
push
movs
ss
scas
inc
xor
cmp
sbb
xchg
scas
mov
fcomp
add
and
ds
jo
test
ins
scas
(bad)
push
stc
rol
inc
(bad)
fbstp
sub
cmp
mov
mov
add
push
ror
imul
and
pushf
xchg
add
and
rcl
fsub
ret
adc
mov
fldcw
xchg
or
pop
add
jg
mov
pushf
outs
(bad)
fwait
(bad)
push
jmp
ja
aam
int3
push
and
ret
out
push
stos
movs
int
sti
push
into
lahf
push
add
xor
inc
shr
adc
inc
cmp
sbb
test
rcr
inc
sub
sbb
rcl
and
je
or
mov
das
ficomp
pcmpgtw
sbb
pushf
cmps
imul
aam
jns
mov
ret
iret
pop
sti
pop
sbb
dec
push
scas
aas
popf
xchg
shl
(bad)
jb
pushf
popaw
sbb
mov
push
jne
xchg
idiv
pop
mov
sub
aaa
call
stos
ds
ret
dec
mov
(bad)
adc
push
pop
sub
sbb
jb
xor
(bad)
idiv
and
dec
and
push
inc
loopne
(bad)
dec
xchg
pushf
sbb
leave
(bad)
xor
mov
pop
fsubr
ins
lea
jae
adc
int
arpl
aam
and
shl
pop
xchg
aam
int3
cmc
xor
jbe
(bad)
jnp
dec
std
mov
sbb
fadd
cmp
jne
push
jo
lds
(bad)
lock
xor
xchg
cmps
out
loope
icebp
pushf
neg
adc
les
mov
dec
lods
(bad)
push
mov
imul
or
mov
xor
call
sahf
pusha
ds
test
in
inc
pop
in
cmp
pushf
push
jae
test
sar
icebp
aaa
into
xchg
push
inc
push
mov
push
mov
ret
mov
inc
mov
div
into
mov
xor
repz
mov
mov
dec
ret
cmp
test
dec
std
sub
ds
shl
loop
add
push
pop
mov
push
mov
call
mov
ins
stc
cld
(bad)
pop
imul
ret
sub
retf
fwait
or
sub
bound
inc
jge
dec
sub
mov
pop
in
shl
bound
shr
pop
fcomp
pop
hlt
xchg
out
loopne
dec
imul
mov
(bad)
pop
pusha
mov
outs
aam
jmp
fwait
cmp
lds
xor
sub
leave
mov
mov
and
mov
add
sbb
stc
cs
mov
mov
hlt
jb
xchg
mov
adc
mov
xchg
clc
mov
sub
pop
inc
popa
pushf
ins
dec
jns
dec
js
mov
cmp
inc
outs
test
inc
xor
xor
movs
sub
sub
int
jno
push
es
dec
out
mov
ins
mov
(bad)
fnstenv
pop
(bad)
sub
push
int
xor
popf
jns
jb
mov
push
fbstp
aaa
xchg
js
arpl
pushf
pop
xchg
lods
sbb
cwde
adc
sbb
mov
pop
pop
pop
int
push
sbb
jae
adc
mov
add
imul
sub
cmp
xlat
fstp
test
std
sti
aaa
mov
sti
jmp
mov
imul
push
push
jmp
pushf
lahf
nop
bound
aam
dec
and
add
add
cmp
sbb
or
add
js
fiadd
psubusb
int
and
or
inc
cli
ret
push
int3
push
pop
push
pop
hlt
mov
adc
mov
in
pushf
dec
(bad)
clc
neg
mov
push
xor
mov
add
mov
arpl
mov
adc
mov
(bad)
test
cmp
xlat
mov
loopne
cmp
ror
cmp
jmp
dec
lods
test
mov
inc
push
sti
push
jo
jmp
pushf
ss
cdq
mov
cmc
xor
rcl
popf
sbb
retf
xor
jns
leave
push
jmp
mov
sahf
inc
in
push
mov
mov
or
dec
inc
cmp
push
mov
call
aam
inc
xchg
aam
stos
dec
aam
sub
and
outs
in
rcl
loopne
not
adc
icebp
sbb
pop
push
shr
inc
in
sub
ror
je
out
ret
jmp
mov
imul
and
or
jge
xchg
ret
push
xchg
dec
inc
cdq
loopne
sub
jbe
mov
loop
mov
out
test
aad
shl
jno
and
xchg
mov
lods
dec
aam
fwait
mov
push
outs
push
xchg
in
sbb
xor
outs
rcr
mov
popf
add
popf
jnp
adc
cmp
aam
fistp
push
shl
nop
mov
aaa
pop
inc
mov
dec
call
lds
cmps
ror
dec
jge
arpl
dec
and
ror
push
mov
in
iret
cmps
add
(bad)
call
and
xchg
dec
aam
xchg
rcr
or
mov
cmps
inc
mov
dec
or
test
and
rcr
stos
pushf
push
psadbw
and
xor
inc
or
or
leave
adc
ret
adc
add
ret
rcl
mov
int
iret
iret
adc
stos
test
sub
(bad)
jle
inc
sbb
jno
inc
push
aaa
(bad)
mov
setae
cmp
popa
xchg
retf
inc
ret
pop
inc
mov
mov
jge
daa
jl
mov
je
inc
push
loop
push
xchg
ret
add
fiadd
push
scas
mov
lock
rcr
mov
xchg
mov
add
jbe
aaa
mov
xor
repz
mov
mov
addps
daa
sub
stc
adc
nop
call
mov
inc
sub
mov
aas
xor
push
leave
mov
ds
xchg
jb
(bad)
pop
and
shr
lods
xor
sbb
inc
pushf
xor
fiadd
dec
jo
fwait
sub
loope
mov
jb
mov
out
aas
test
cwde
(bad)
push
scas
ret
pop
xor
xor
ret
ror
rcl
ret
jmp
fwait
inc
mov
push
loope
iret
stos
ret
test
cmp
push
pop
pop
push
fwait
pushf
(bad)
aad
hlt
int
nop
fcmovbe
sub
ja
ret
leave
fisttp
sub
sub
mov
in
nop
sbb
aam
mov
jb
les
pop
lds
arpl
nop
ror
mov
adc
enter
sahf
mov
cmps
test
sub
dec
sub
jecxz
inc
imul
pushf
mov
inc
pop
xor
clc
cmp
adc
ss
push
arpl
sub
sbb
adc
inc
and
jnp
pushf
repnz
leave
mov
es
sahf
rcl
outs
dec
and
push
pop
pop
adc
cmp
shl
inc
xor
adc
ss
push
int3
repz
adc
js
push
cdq
rcl
mov
scas
or
pop
cmp
mov
rcl
and
pop
xchg
xor
(bad)
scas
push
fcomp
push
dec
ret
test
movs
(bad)
scas
xor
push
adc
mov
popf
stc
pop
mov
(bad)
sub
mov
mov
fsub
mov
test
rcr
fstp
fisubr
inc
mov
mov
cmps
pop
aam
fldenv
xchg
ret
and
mov
inc
nop
test
(bad)
or
nop
inc
test
ret
cwde
sub
inc
xchg
sub
and
or
xor
retf
test
or
(bad)
sub
push
xchg
adc
xlat
ror
aaa
popf
clc
sub
imul
and
sahf
push
push
in
jg
mov
das
lahf
rol
movs
retf
call
cmc
mov
inc
ss
inc
add
xlat
shr
push
hlt
mov
out
xchg
aas
jle
rcr
sar
lods
pushfw
bound
adc
aam
mov
jmp
ret
add
out
add
iret
loopne
adc
in
mov
iret
xlat
stos
dec
data16
sbb
mov
outs
dec
jmp
inc
lea
addr16
sub
push
fdiv
(bad)
movs
(bad)
enter
cld
ret
or
hlt
nop
xlat
inc
inc
fcmovu
cmp
push
xor
jmp
(bad)
loop
test
test
push
addr16
ins
add
cmps
loopne
pop
xchg
jb
pop
ja
shl
cmp
(bad)
cdq
dec
sbb
inc
adc
cli
jg
loopne
mov
or
cmps
add
aam
add
ins
fwait
inc
add
repnz
aam
push
scas
mov
ret
and
jb
call
je
push
cmps
xor
mov
push
adc
push
std
fwait
pop
pushf
inc
inc
jle
shl
stos
mov
and
push
fadd
icebp
stos
stos
hlt
ror
xlat
mov
push
es
sbb
cmp
xor
sbb
dec
addr16
cwde
cdq
outs
inc
ror
inc
out
lock
stos
cmc
xchg
sub
lods
loopne
stos
rcl
inc
int
xor
hlt
mov
push
inc
stc
mov
inc
push
imul
es
mov
repz
dec
xor
not
mov
clc
stos
xchg
(bad)
adc
mov
inc
repnz
fisttp
pushf
lock
in
inc
imul
je
push
ja
ins
push
jae
hlt
aam
inc
lods
xchg
push
push
push
aaa
mov
addr16
mov
adc
push
cmps
in
jns
mov
sahf
aad
test
vpand
adc
push
cmc
pop
mov
sar
arpl
jg
mov
shl
and
mov
add
lock
inc
or
inc
add
test
rcl
sbb
add
lods
adc
sti
xlat
push
dec
mov
popa
ret
loopne
mov
inc
add
xlat
inc
fistp
or
hlt
vmread
outs
daa
adc
jle
cmp
enter
retf
add
mul
dec
nop
pusha
fxtract
mov
mov
and
popa
mov
sar
push
sub
jne
loop
shr
sti
sub
and
jne
push
sbb
cmp
(bad)
mov
mov
adc
xor
js
test
dec
and
(bad)
lahf
popf
cmp
aad
sub
adc
and
jmp
pusha
ror
cmc
pushf
mov
jno
rcl
xor
push
ret
push
lds
xchg
int3
cmp
out
xor
out
cld
cmp
out
in
neg
ds
jl
outs
cmp
inc
ret
retf
and
lahf
sub
mov
ret
out
jl
into
in
dec
pushf
mov
dec
popf
inc
les
mov
imul
inc
data16
fbld
ret
repnz
xor
jo
mov
jp
aad
jmp
popf
jge
jb
mov
push
mov
ret
sbb
xchg
addr16
xor
add
inc
jl
out
stos
int3
jmp
rol
cli
mov
mov
inc
into
aas
test
hlt
jb
mov
aad
push
sub
fdiv
dec
pop
movs
sub
popf
pusha
ficomp
mov
rcr
or
ret
push
fsubr
mov
inc
fldcw
and
push
popf
jge
das
in
cld
push
dec
mov
fnstsw
inc
aaa
ss
aaa
adc
dec
psllw
aam
add
mov
push
clc
mov
popf
(bad)
scas
arpl
rol
xchg
adc
retf
das
or
ret
pop
sub
inc
pop
pop
pop
xchg
ret
popf
aam
std
hlt
leave
or
movs
(bad)
jle
nop
xchg
sbb
popf
cld
mov
call
lods
lods
sar
xchg
xchg
add
sbb
sysret
rcl
pop
push
aam
jge
sar
adc
xchg
sub
sbb
repz
gs
and
add
rcl
jo
jne
xor
iret
mov
dec
test
adc
mul
fist
arpl
movs
mov
and
or
sbb
add
popf
je
mov
sub
ret
mov
mov
mov
sub
ret
adc
push
xlat
arpl
adc
jnp
or
gs
adc
mov
ret
loope
xchg
cs
fidivr
adc
cmp
cwde
shl
cmps
fstp
lods
repnz
adc
inc
aam
mov
add
out
rcl
jecxz
push
rcl
stos
fcomp
jnp
push
mov
test
pushf
xlat
cmps
jg
mov
fs
fidiv
sub
out
or
mov
into
daa
sub
mov
mov
mov
add
movs
cli
sbb
cmp
sub
mov
xlat
xchg
gs
or
inc
cmp
aad
rcl
jmp
xor
and
xor
pusha
cmp
or
ret
les
xchg
or
mov
cwde
imul
dec
aaa
pop
sub
adc
xor
cmpxchg
cmp
in
mov
mov
aas
scas
fs
lods
dec
add
xor
mov
lea
rcl
pop
mov
jl
sub
call
bnd
ret
inc
outs
or
sub
fsub
ret
jl
adc
bound
jne
mov
mov
inc
jae
fwait
mov
es
mov
cmp
dec
movs
jne
dec
mov
aaa
mov
push
aas
ja
sbb
mov
das
mov
sub
fwait
loope
jno
test
cdq
inc
(bad)
in
in
rcl
dec
xor
lods
push
inc
adc
mov
mov
(bad)
dec
call
js
loope
mov
mov
sbb
aas
aaa
push
shl
and
loope
mov
pushf
idiv
sub
(bad)
adc
or
push
xor
in
mov
inc
xchg
movs
fdivr
or
or
ins
jge
lock
fidiv
inc
sub
jl
dec
call
aad
and
shl
ja
stos
inc
in
pop
out
cmp
(bad)
imul
or
mov
fst
push
loopne
inc
bts
shl
add
stos
inc
xlat
ds
push
pop
jp
mov
inc
(bad)
mov
stos
shl
in
push
push
jmp
xchg
dec
pop
sub
lea
jno
mov
xchg
pop
fistp
push
je
ja
mov
fld
jmp
cli
lahf
lock
into
inc
int
cwde
adc
icebp
test
pushf
and
adc
sti
hlt
pop
xor
sub
jo
jmp
jge
push
fcomp
sub
fs
enter
daa
and
xor
rcr
ret
xchg
bound
inc
add
pop
outs
repz
cmp
pop
mov
enter
clc
fidivr
es
aas
xlat
cmp
pop
fbld
(bad)
or
jp
xchg
xchg
adc
jmp
push
inc
sub
cmp
cdq
fmul
frstor
push
ds
mov
or
adc
cmp
pop
xor
push
inc
adc
mov
pop
mov
sti
rcr
ror
stc
sbb
sbb
loop
jo
mov
or
sbb
clc
mov
idiv
jmp
fistp
cmp
outs
into
pop
add
ss
add
movs
or
jmp
xchg
loopne
ret
imul
jle
jno
gs
and
jnp
pop
leave
lock
mov
not
sub
pop
dec
jno
jno
lock
sub
and
add
adc
jmp
xchg
in
gs
inc
xchg
in
jo
xchg
int
jb
pusha
jmp
xlat
and
(bad)
jae
jns
aam
or
ret
pop
out
in
ds
test
xor
outs
or
sub
sub
ins
sbb
arpl
pop
clc
jge
(bad)
sti
sub
sbb
mov
std
mov
pop
cli
jno
inc
mov
mov
pushf
jl
call
cs
mov
das
jmp
cmp
aam
mov
sbb
cld
ins
pop
cmps
mov
repz
shl
pop
cmp
add
xchg
icebp
pop
mov
jmp
sahf
push
jmp
jae
mov
pushf
loop
cmc
sar
imul
mov
pop
idiv
adc
jns
shr
push
in
jns
sti
inc
ret
cmp
popf
jmp
inc
sbb
xor
mov
daa
adc
push
in
cmp
cmp
enter
adc
cmp
pop
test
pop
popf
dec
inc
sub
inc
mov
mov
nop
xchg
out
push
inc
addr16
leave
sub
inc
repnz
rcl
out
cmp
push
ret
(bad)
ds
ds
xor
pop
mov
inc
xchg
test
sbb
stos
sub
ror
in
mov
stos
test
cmp
pop
xchg
imul
mov
pushf
fwait
iret
dec
(bad)
out
mov
imul
out
xor
movs
data16
test
mov
rcl
adc
aas
mov
sub
inc
xchg
mov
inc
and
add
xchg
aaa
dec
mov
inc
mov
push
stos
ins
and
loop
fdivr
add
in
xchg
inc
in
lods
push
push
jns
push
xor
add
cmp
(bad)
adc
aas
test
xchg
cs
rcl
out
aas
js
jmp
xchg
push
and
call
and
inc
int
fs
jnp
jl
sti
or
or
sbb
in
hlt
iret
pushf
adc
pop
mov
mov
xor
inc
es
mov
mov
sar
jge
push
or
ds
mov
cmp
in
fs
aas
(bad)
cld
mov
pop
pop
inc
ins
call
call
cmp
in
retf
sti
adc
ror
fld
daa
loope
add
sbb
and
xchg
or
js
std
bound
pusha
dec
ret
cmc
lods
sub
cmp
sbb
repnz
aaa
fs
add
jge
sbb
xchg
pop
rol
mov
inc
mov
daa
cmps
test
(bad)
enter
and
aam
(bad)
out
push
outs
in
in
ret
jne
and
fwait
daa
inc
mov
sub
jg
fimul
int3
pop
mov
repz
ret
xlat
pusha
dec
rcr
fs
shl
out
push
add
xchg
push
push
imul
or
iret
shr
push
cld
es
(bad)
fidiv
sar
pop
sbb
ret
cdq
data16
inc
popa
idiv
repnz
push
xchg
ret
out
jo
pusha
and
push
bswap
xchg
movs
fnstsw
cmps
cmc
push
inc
sub
push
js
scas
sbb
mov
(bad)
not
not
popf
adc
cmp
(bad)
jns
sbb
or
inc
cmp
xchg
or
je
xchg
inc
mov
mov
mov
stos
mov
and
add
stc
call
mov
xchg
cmp
sbb
mov
cmps
aam
jo
add
cmp
aas
xchg
popa
jge
inc
inc
leave
pop
pushf
xchg
fild
ins
mov
ficomp
sbb
push
ret
xlat
cli
popf
xor
inc
sbb
arpl
dec
or
jns
add
cmps
outs
jo
je
mov
or
push
cmp
sub
aas
aam
cmp
xchg
imul
pop
and
(bad)
clc
cwde
or
ja
dec
scas
scas
das
xor
mov
push
mov
aas
test
loop
int3
lahf
in
push
pop
mov
js
fdivr
xchg
je
jmp
into
or
scas
or
push
das
sbb
into
mov
popf
pop
enter
stc
xchg
fisttp
or
into
xchg
dec
test
or
or
push
add
js
inc
sahf
cmp
fdiv
add
add
push
adc
(bad)
div
aam
into
adc
push
repnz
scas
or
repnz
jge
repnz
(bad)
shr
cmp
ret
xor
xchg
out
retf
sahf
out
lahf
retf
cmp
fdivr
and
mov
neg
pop
popf
cli
or
pop
inc
retf
repz
pop
rol
cmps
dec
jnp
inc
push
cmp
movs
nop
retf
les
outs
sub
aas
inc
ins
mov
xchg
shl
inc
cmps
pop
sbb
movs
lods
push
int
mov
pushf
mov
cmp
pop
sbb
lods
add
cmp
mov
shl
xlat
out
sub
push
stc
out
stos
jo
ret
or
sbb
ins
in
das
nop
jnp
add
cmc
cmp
(bad)
jne
sbb
or
pop
and
loope
not
ficom
icebp
push
bound
cmps
or
aam
dec
idiv
in
mov
ret
cmp
(bad)
pop
arpl
lds
mov
add
xor
pushf
mov
hlt
arpl
call
pushf
mov
cmps
adc
pushf
test
sub
out
out
ret
xchg
jns
dec
in
out
pop
aam
outs
or
(bad)
mov
push
mov
xor
sbb
mov
cmc
in
ret
sahf
cmp
inc
stos
out
daa
mov
leave
and
js
inc
cmp
pop
fnstcw
jmp
xchg
pop
adc
xchg
dec
ret
scas
xchg
dec
add
ret
inc
push
popa
or
inc
or
sbb
xor
imul
(bad)
stos
sahf
fidiv
jl
pushf
push
je
and
push
jecxz
shl
out
dec
lahf
sub
cld
leave
ret
or
push
mov
add
xchg
jl
jnp
push
push
dec
rcr
sbb
push
test
fisub
(bad)
xchg
cmps
ror
jmp
ret
push
cli
and
add
arpl
addr16
adc
mov
mov
xor
cvttps2pi
scas
mov
inc
fs
ret
das
je
jns
xor
mov
loope
mov
nop
mov
es
imul
iret
cmp
inc
push
mov
lahf
jg
pop
daa
popf
in
pop
xchg
jmp
lock
rcl
aam
(bad)
lds
stos
sbb
retf
adc
add
sbb
jecxz
adc
test
pop
ret
das
mov
and
lds
mov
pop
stc
dec
cwde
or
or
sbb
cmp
out
data16
aam
cld
adc
sbb
jge
xchg
rol
adc
mov
adc
not
pop
js
push
cmp
cs
add
inc
cld
pop
mov
push
pushf
imul
fadd
xchg
retf
mov
mov
in
hlt
fst
ret
cmp
sbb
js
pop
test
add
mov
xor
imul
pop
dec
retf
mov
adc
mov
adc
daa
cmp
cmp
pop
mov
push
push
aaa
(bad)
pop
outs
call
enter
mov
daa
dec
adc
xor
mov
push
jnp
pop
popf
mov
mov
inc
mov
std
lss
mov
cmp
and
or
pushf
popf
ins
cmps
adc
push
jnp
push
mov
outs
pop
inc
leave
xor
inc
imul
and
jns
inc
or
ds
inc
pop
or
std
iret
mov
sub
sbb
in
ror
leave
mov
mov
add
pop
cmp
xor
jmp
fistp
pop
inc
imul
and
sub
movs
ror
leave
dec
das
ret
mov
push
cmp
ds
in
call
stc
push
iret
adc
inc
aam
or
mov
pop
inc
dec
ret
cmp
mov
clc
inc
inc
inc
(bad)
pushf
mov
out
and
popa
inc
pushf
jg
adc
add
(bad)
std
ficom
dec
retf
lock
pop
ret
fdivr
daa
aam
xchg
sub
aad
inc
inc
ret
(bad)
fidivr
jle
or
push
add
jg
add
(bad)
test
dec
mov
scas
push
daa
fcmovnbe
inc
mov
loop
xor
pop
outs
(bad)
andnps
inc
xor
and
fwait
adc
dec
jbe
or
popa
inc
mov
add
sbb
out
sbb
cmp
xlat
cmp
ret
jae
dec
popf
int
daa
(bad)
cmp
mov
push
sub
in
lods
cmps
mov
adc
pop
loopne
mov
sbb
jmp
int
add
rcr
push
fisttp
push
pop
aam
cmp
mov
aam
jge
lods
jnp
mov
mov
pushf
fxch
xchg
(bad)
adc
jg
aam
push
popf
fisttp
sbb
adc
enter
pop
inc
dec
add
ins
je
stc
pushf
in
adc
test
mov
rcl
jb
fnstenv
inc
ss
mov
inc
mov
cmp
and
mov
fild
jno
or
fsubr
and
outs
mov
pop
cli
and
popf
add
push
inc
sbb
out
out
es
dec
ret
retf
mov
ret
pushf
add
aas
ins
push
out
hlt
xor
or
scas
or
lea
enter
addr16
aas
push
pop
cs
ins
adc
(bad)
mov
jl
pop
aam
jb
int3
dec
pop
sub
js
jl
pop
cmc
sbb
movs
xlat
popf
mov
or
jb
mov
xor
ror
movs
(bad)
jns
aaa
fs
scas
and
pop
sub
mov
sti
mov
xor
not
add
lods
fmul
je
xlat
pop
dec
mov
vphaddubq
inc
add
les
add
inc
cmp
jbe
rcr
pop
ret
imul
and
sub
jecxz
pop
(bad)
mov
jge
cld
adc
scas
sar
stos
mov
inc
sub
xchg
rcl
mov
dec
and
popf
and
xor
inc
inc
retf
cwde
inc
cmp
in
xor
leave
add
rcr
cmps
or
fld
ret
stc
shr
inc
dec
sbb
mov
sbb
pop
xchg
ret
outs
aas
scas
ds
inc
dec
and
fcom
jle
xor
sub
jmp
inc
and
stc
enter
jns
aam
ret
or
mov
push
das
sar
jp
pop
fsub
aas
es
sbb
inc
ret
scas
xor
out
(bad)
push
pushf
bnd
(bad)
shl
sti
in
std
mov
ret
pop
aas
stc
jmp
cmp
lods
cmps
push
ret
push
add
sar
push
aam
mov
xor
fs
xor
adc
iret
loope
add
jl
adc
cmp
jmp
mov
and
in
xor
loopne
in
fst
mov
das
std
movs
mov
(bad)
call
xchg
sbb
clc
test
inc
jo
pop
aam
or
popf
push
dec
sbb
aam
push
aas
or
repnz
(bad)
jnp
jmp
pop
mov
mov
and
mov
dec
aam
pop
cmps
xor
push
sti
push
mov
cmp
mov
rcl
ss
cmp
ret
aaa
lods
clc
int3
jns
inc
or
add
(bad)
adc
popa
adc
aaa
push
aam
or
dec
cmps
stc
and
or
inc
xchg
push
(bad)
mov
aam
jbe
loopne
mov
adc
ja
add
pop
mov
jnp
popf
mov
sub
mov
cmp
inc
dec
imul
mov
sub
or
adc
aam
in
les
cmc
pusha
xor
lock
lahf
not
pusha
div
adc
mov
sub
fdivp
mov
push
sbb
(bad)
out
adc
push
adc
fld
xchg
aad
aam
mov
jnp
or
or
inc
(bad)
sti
mov
add
cmp
out
scas
ret
cmps
sbb
fcmovnu
inc
sbb
call
mov
push
or
sar
jle
sub
popf
outs
pop
or
rcl
mov
(bad)
cli
cmp
push
ret
stc
in
or
(bad)
inc
jns
mov
(bad)
iret
les
mov
push
mov
mov
inc
xchg
sbb
inc
mov
div
inc
inc
inc
pop
loop
xlat
and
cmp
xchg
sti
out
jmp
mov
xor
(bad)
adc
sbb
mov
mov
pop
ret
or
or
inc
inc
sahf
popa
ror
push
in
ret
pop
or
add
push
fmul
xchg
imul
xor
sub
mov
les
or
cmps
movs
jmp
and
scas
js
pop
loope
repnz
adc
inc
mov
cmc
cwde
push
xor
jecxz
stc
dec
xor
call
sbb
adc
adc
or
retf
cmc
cmc
and
adc
(bad)
shr
dec
and
(bad)
cli
lock
out
cs
fstp
popa
cdq
pushf
sbb
aam
aam
sbb
aad
dec
inc
push
ret
ds
inc
dec
and
call
ins
stos
shr
ror
adc
data16
jo
dec
mov
jl
inc
aas
inc
loope
es
cmp
ret
imul
adc
jno
bound
stos
xor
jo
pop
pushw
fsub
popa
rcl
xor
and
loopne
scas
hlt
aas
ds
adc
std
not
mov
out
aas
push
retf
dec
fst
stos
pushf
imul
imul
sbb
jmp
mov
test
ja
add
cld
ds
pop
aam
sbb
cmc
adc
lock
ret
(bad)
sbb
inc
xchg
jge
xor
pushf
cmp
js
lea
enter
mov
push
pusha
adc
mov
mov
cwde
dec
jg
inc
inc
daa
aam
(bad)
icebp
nop
sbb
in
imul
pop
popf
stos
shl
ds
loope
mov
lods
shr
mov
jne
sub
shr
pop
xor
push
aas
mov
adc
outs
or
inc
xchg
cmp
mov
mov
(bad)
fs
mov
push
mov
repnz
mov
sbb
icebp
ja
jb
jge
add
mov
mov
mov
mov
inc
ds
push
cld
js
mov
retf
ins
pusha
and
in
lods
and
dec
dec
shl
push
ins
xor
cmp
mov
inc
jnp
sbb
inc
stc
push
xchg
pusha
fwait
lds
pushf
scas
xlat
cmp
scas
ror
xchg
cs
loope
and
hlt
ds
push
sbb
mov
adc
clc
mov
jmp
rcl
pop
jp
ffreep
in
fidiv
aam
stos
sbb
push
mov
pop
inc
pop
rcl
jne
push
mov
jge
ret
loope
push
das
xchg
hlt
aas
iret
jae
cmp
push
xlat
adc
pop
sub
mov
in
cmps
and
mov
popf
stos
repnz
pop
rcr
rcr
xchg
pop
call
and
inc
sub
fs
shr
mov
(bad)
jnp
(bad)
out
cld
daa
shr
das
sub
xor
test
leave
mov
adc
into
ret
lahf
(bad)
ja
arpl
in
add
xchg
sbb
add
pop
cmp
inc
xchg
in
es
lea
push
or
pop
jp
or
xchg
repz
jmp
sub
xchg
add
stos
xor
xor
jae
inc
aas
fidiv
dec
xchg
pop
dec
scas
fwait
mov
loop
mov
mov
movhps
int3
ret
dec
or
jno
cld
xor
movs
push
pop
nop
sub
mov
les
aaa
inc
pop
mov
pop
(bad)
cdq
add
fwait
daa
adc
and
cmp
adc
fwait
pusha
inc
cmp
jae
idiv
and
inc
jp
dec
adc
or
out
dec
adc
jne
sar
in
dec
rol
push
cmps
dec
popf
clc
retf
pop
add
pop
mov
(bad)
pop
xchg
pop
fwait
xchg
mov
dec
add
sbb
bound
pop
or
shl
mov
lods
xchg
ret
shr
outs
and
mov
inc
add
pop
push
enter
push
jmp
and
shl
out
ror
cmp
inc
cmps
inc
dec
xchg
dec
and
cwde
cmp
ins
imul
fcmovb
inc
pop
inc
dec
inc
xchg
jnp
jmp
cmp
fnstcw
push
add
inc
or
retf
xchg
pop
mov
fwait
cmps
sbb
jne
xchg
ror
das
fst
inc
rcr
adc
fadd
outs
inc
dec
call
std
mov
fidivr
sub
imul
jmp
xlat
inc
cmp
mov
pop
rcr
imul
pushf
aas
and
retf
nop
mov
sbb
pushf
dec
stos
push
sub
loop
test
ja
cli
cmp
lea
(bad)
rcr
mov
loop
inc
fcom
add
stos
ret
leave
xchg
add
mov
lods
call
rol
mov
sub
cmp
cmp
rol
retf
dec
popf
and
xchg
jmp
or
cwde
(bad)
add
pusha
(bad)
mov
fsub
retf
out
mov
xor
jno
mov
ror
adc
push
inc
sbb
popa
ins
sar
lea
cmp
xor
dec
es
inc
jo
dec
xlat
sbb
xchg
or
enter
mov
(bad)
xor
mov
push
xor
shl
aas
dec
mul
add
iret
stos
js
sub
add
ja
out
dec
sub
xor
adc
cld
popf
outs
iret
xor
xlat
or
mov
dec
xor
repnz
xor
mov
std
dec
jecxz
xor
mov
mov
sbb
add
cmc
frstor
stc
dec
lods
idiv
ret
sub
outs
dec
aam
fcmovbe
lock
sbb
imul
(bad)
mov
inc
cdq
inc
push
jg
out
jbe
in
cld
mov
jae
sahf
scas
xor
stos
mov
dec
adc
rcr
dec
cdq
cli
dec
push
jl
inc
aam
icebp
test
jle
sar
nop
gs
push
mov
scas
and
cmc
mov
fnsave
outs
fs
cmps
inc
jmp
aaa
dec
fstp
push
pusha
sar
xor
test
pop
cwde
mov
xchg
shr
add
and
sar
ss
mov
outs
pop
and
xchg
popf
mov
jo
fcomip
or
xchg
mov
(bad)
retf
int3
loopne
(bad)
in
jle
jp
fist
xlat
sub
pop
xor
push
mov
ror
fdiv
test
mov
or
pop
sbb
repnz
push
movs
mov
xor
in
rcr
cmc
mov
stos
xchg
outs
pushf
and
enter
cmp
test
popf
cmc
mov
gs
fidiv
push
or
mov
adc
add
addr16
jae
iret
data16
aas
jecxz
and
test
fisub
mov
es
lds
mov
lahf
retf
fldenv
retf
push
push
mov
movs
xor
scas
xchg
in
aam
xchg
pushf
mov
adc
mov
scas
cli
pushf
int3
mov
nop
out
call
test
and
pushf
mov
dec
clc
mov
xchg
sbb
aam
or
ficom
xchg
stos
daa
cmp
adc
loop
jae
inc
je
sbb
jmp
fs
jl
xchg
mov
mov
pop
mov
mov
call
or
das
xchg
imul
mov
dec
fnstenv
sub
dec
cmp
cs
(bad)
cld
rcl
int
cmp
inc
and
rcr
adc
inc
gs
inc
sbb
and
ins
cmp
xor
add
adc
jmp
aam
or
or
and
or
inc
xchg
leave
push
xchg
inc
push
daa
inc
or
scas
test
sti
hlt
inc
xor
shl
fidiv
adc
mov
rol
inc
int
xor
out
inc
retf
shr
mov
ins
cmps
adc
mov
sub
dec
dec
jno
lods
imul
mov
lock
push
cs
xlat
xor
clc
pushf
jb
data16
pop
arpl
leave
lock
sub
xor
(bad)
enter
jb
sbb
popf
xor
mov
(bad)
jecxz
cmp
adc
fsubp
ss
and
push
shl
ret
scas
dec
movs
pop
inc
cmp
stos
cmp
dec
sti
xlat
retf
ret
jne
icebp
xor
aas
cli
mov
int
dec
cmp
pushf
(bad)
test
out
push
push
dec
jecxz
hlt
push
mov
push
pop
ror
mov
in
and
jo
dec
mov
outs
mov
ret
push
stos
cmp
pop
jp
ret
inc
mov
inc
sub
adc
popf
loopne
pop
shl
mov
cs
sub
mov
push
popf
mov
aam
lds
add
jl
(bad)
out
xchg
pushf
test
sub
(bad)
mov
fsub
dec
imul
sbb
mov
int3
mov
aas
push
das
pop
popf
js
adc
pushf
iret
jmp
sar
shl
or
or
pop
xor
pop
dec
cli
push
test
int3
loopne
cdq
mov
mov
mov
movs
dec
cmp
out
sbb
pop
mov
mov
retf
dec
sub
push
jne
(bad)
mov
les
stc
aas
bound
and
pushf
outs
fldz
dec
sub
and
jae
cmc
adc
hlt
ret
jmp
in
add
and
xchg
ret
inc
add
je
jp
pop
inc
mov
out
jmp
mov
aas
test
cs
das
cmps
xlat
js
stc
ret
mov
cli
push
mov
test
and
mov
out
adc
xor
loop
sub
test
mov
pop
aam
mov
push
xchg
push
loopne
dec
adc
daa
in
(bad)
dec
nop
sti
cdq
cmp
jecxz
test
inc
jmp
or
inc
ins
repz
pop
fs
cs
cmp
or
mov
add
sbb
add
fwait
push
dec
jno
sbb
pop
inc
ret
inc
push
sub
ret
mov
loope
xchg
cmps
das
push
sbb
mov
ret
fsub
mov
push
xlat
push
loopne
adc
push
call
sub
xor
push
or
frstor
inc
sub
(bad)
sti
ins
mov
aam
ficomp
addr16
inc
mov
dec
std
rcr
mov
std
mov
cld
or
ins
add
xor
mov
jb
inc
std
pop
xchg
(bad)
icebp
xor
push
(bad)
cmp
inc
dec
popf
mov
adc
mov
and
sbb
test
jmp
push
pop
call
mov
aam
inc
shr
mov
pusha
and
mov
inc
addr16
cld
xchg
imul
movs
cwde
sub
sub
mov
aam
clc
ja
pop
ja
cmp
enter
mov
sbb
repnz
sbb
ret
add
mov
gs
push
jge
std
push
pop
xchg
outs
xchg
or
xor
mov
ret
fiadd
aas
dec
cmps
aam
inc
mov
mov
(bad)
jmp
mov
hlt
sar
test
cwde
mov
loopne
push
mov
cmps
(bad)
das
jl
or
mov
inc
jl
sbb
xor
add
add
jmp
mov
into
mov
inc
int
mov
add
and
push
mov
jo
sbb
movs
ret
xchg
cmp
lds
and
mov
adc
test
push
dec
and
fwait
xchg
inc
sub
cs
stc
pop
mov
test
ds
push
aam
pop
int
add
or
bound
and
mov
push
mov
clc
mov
push
mov
int3
push
inc
ret
dec
xchg
push
jns
and
jne
cmps
jp
hlt
ss
ret
popf
jle
pop
adc
sbb
repz
inc
lahf
jmp
dec
or
int
mov
in
pop
js
jnp
stos
inc
jno
popa
jmp
sbb
fs
push
cdq
mov
int
cmc
dec
pop
jge
ins
pop
bound
push
ins
in
inc
call
sub
stc
add
xor
adc
jae
cmp
(bad)
sub
call
popa
sbb
push
scas
pushf
sbb
push
fisttp
inc
rcl
add
dec
mov
cvtdq2ps
and
and
mov
add
dec
pusha
xchg
mov
inc
mov
jbe
es
ret
pusha
jb
scas
push
adc
into
push
in
push
fcmovne
cmp
jo
jp
out
int3
ret
push
cmp
mov
cmp
loopne
fild
mov
loop
mov
mov
inc
dec
jle
jno
jns
fild
bound
stos
pop
jge
inc
pop
sub
pop
sbb
pop
inc
xchg
push
fdiv
mov
ret
ds
std
jge
or
push
push
inc
mov
push
adc
cs
les
inc
in
ss
xchg
es
inc
mov
enter
out
in
enter
xor
clc
std
aas
sub
popf
sbb
arpl
pop
aam
jl
cmp
inc
push
addr16
leave
cmp
imul
(bad)
mov
ret
inc
sar
stc
mov
imul
mov
scas
rol
mov
pop
cmp
js
push
sub
dec
xchg
rcr
and
pusha
xor
push
std
and
xor
inc
sti
inc
jno
shl
adc
mov
sahf
add
arpl
xchg
xchg
es
loopne
adc
push
test
mov
mov
sub
fcmovne
aaa
jmp
je
mov
sub
add
ja
in
adc
inc
cmps
call
mov
adc
or
ret
jp
jnp
mov
jbe
retf
pop
ror
lock
fs
ja
ret
fsubr
inc
xor
cmp
dec
popf
int
pop
push
mov
adc
hlt
mov
push
sbb
mov
xchg
inc
ret
push
or
popf
sub
in
jae
add
cmc
ror
push
fwait
sar
shl
dec
ret
repz
sub
call
addr16
retf
push
xchg
sub
xchg
(bad)
loop
test
lods
fimul
fwait
rcl
jg
mov
rcl
and
lock
and
xchg
add
fadd
lea
mov
sbb
out
repz
xor
push
pusha
outs
dec
fs
pop
sub
and
aam
shl
loope
fadd
lods
cmp
mov
dec
push
inc
out
fwait
ror
sub
fdivr
(bad)
mov
hlt
iret
cmp
mov
push
push
adc
add
ret
mov
pop
(bad)
shl
jne
nop
inc
movs
xor
pushf
mov
mov
mov
fdiv
xor
inc
call
mov
inc
lea
cmp
arpl
ins
mov
cmp
ins
mov
popf
fild
or
mov
movs
cmp
adc
int
rol
jns
jae
cld
jp
mov
dec
mov
pop
ret
adc
xor
sbb
out
adc
xchg
mov
sbb
sub
loope
rol
pop
es
shr
adc
int3
lahf
inc
mov
test
adc
inc
fcomi
clc
jnp
mov
jmp
or
aas
nop
cmps
sbb
dec
mov
(bad)
add
mov
push
fadd
sar
or
fs
push
inc
inc
scas
imul
xor
push
std
sbb
rol
pop
jecxz
or
cld
pop
adc
xchg
adc
ret
(bad)
fld
das
cmc
mov
addr16
xor
pop
mov
add
and
sbb
sbb
mov
mov
rcl
mov
cmp
mov
ret
cmp
mov
and
push
pop
mov
mov
mov
mov
adc
aam
jl
out
cmc
jns
pop
loop
inc
jns
push
scas
add
add
pop
into
call
div
icebp
add
pushf
xor
jge
jp
cmps
aaa
fst
hlt
sub
xchg
add
shl
in
mov
jb
popf
cs
push
push
inc
pop
ret
(bad)
test
repnz
mov
and
aas
or
inc
std
xchg
and
icebp
ja
fwait
or
sub
mov
aam
lea
pop
sub
movs
and
inc
or
and
dec
or
sar
inc
mov
iret
cmps
arpl
inc
je
aam
sbb
into
test
xchg
jo
ss
inc
rol
cs
inc
dec
cmc
leave
pushf
mov
pop
mov
xchg
jbe
xchg
loop
scas
ret
or
sbb
add
clc
sbb
inc
ret
rcl
add
jg
add
jmp
inc
loope
in
das
pop
ficom
jmp
lea
add
lahf
movs
mov
aam
jbe
add
ret
dec
pop
scas
mov
xlat
push
(bad)
fwait
out
clc
add
mov
clc
add
adc
aam
mov
sub
sbb
xor
pop
inc
xchg
out
int3
ret
adc
les
dec
pop
xor
in
cmp
aam
or
push
adc
and
shl
call
aad
sbb
fld
xor
daa
or
and
popa
nop
(bad)
cmp
bound
or
xchg
mov
jge
jne
inc
aam
cld
mov
and
jnp
sub
push
sbb
movs
leave
pushf
mov
enter
mov
mov
inc
pop
repz
test
fstp
nop
icebp
push
fdiv
pop
outs
outs
daa
sbb
mov
into
push
and
push
sbb
jge
and
lods
sti
cdq
ret
movs
das
jg
das
stos
inc
jbe
loope
xor
add
mul
aam
test
or
mov
hlt
inc
xor
cmp
inc
stc
pop
jb
cmps
shl
mov
mov
adc
dec
inc
bound
je
imul
jmp
ins
mov
mov
pop
arpl
mov
nop
mov
inc
cmp
stc
jo
call
xor
popf
xor
and
daa
bound
sar
in
addr16
sahf
push
adc
mov
rol
and
pop
in
test
stos
mov
fimul
fcmovbe
stos
mov
fs
mov
pushf
and
iret
ret
push
cli
inc
cmp
inc
ins
addr16
leave
pusha
jno
mov
adc
outs
mov
cmc
jno
fwait
and
hlt
lods
in
mov
sub
jg
mov
out
test
ins
inc
lods
int3
inc
jp
xchg
xchg
fstp
(bad)
mov
ret
and
inc
xchg
mov
aad
sub
cmps
cdq
or
(bad)
inc
popa
mov
shl
mov
cmp
addr16
aam
mov
sub
push
xlat
imul
call
test
fwait
jae
cwde
sub
out
stos
sub
lods
fild
clc
jmp
fdiv
pushf
mov
aad
cs
imul
pop
sub
popf
das
inc
lahf
pop
push
push
mov
aad
push
nop
and
cmp
mov
and
(bad)
adc
movs
mov
cmc
mov
jge
xchg
dec
(bad)
sub
retf
cmps
xchg
addr16
leave
ret
cmp
aas
and
sar
test
jp
call
cmps
lods
or
sub
jo
mov
jo
mov
cmp
xor
inc
add
pop
sbb
rcl
ret
outs
add
inc
scas
jp
mov
pushf
xchg
cmp
das
mov
cs
aam
jp
shr
pop
sub
imul
jl
jp
ss
xor
out
jno
mov
call
(bad)
out
bound
cmp
or
sahf
pop
dec
aam
or
jo
xor
ja
dec
popf
fst
std
push
aam
lods
jnp
push
sub
push
sub
aam
pushf
pop
mov
(bad)
mov
ret
cmp
inc
xchg
push
dec
add
arpl
mov
xchg
and
sahf
xlat
inc
fmulp
xchg
cmp
push
push
popf
test
fsub
shl
cmp
mov
add
lds
ss
mov
add
aam
mov
xchg
mov
add
push
adc
jne
popa
das
mov
and
dec
not
dec
inc
push
xchg
daa
sub
push
mov
call
xor
mov
fdiv
imul
or
cmp
inc
sbb
stc
sar
push
cmps
mov
cmp
rcr
out
inc
arpl
cmp
pushf
fiadd
icebp
or
push
ror
dec
or
sti
adc
pop
popf
cmp
push
aas
xchg
inc
loope
inc
in
jbe
mov
mov
or
and
loop
aam
inc
data16
add
push
xor
stc
mov
mov
fbstp
pop
das
cdq
int
xor
dec
scas
ror
movs
pushf
xchg
cmp
fcomp
add
into
mov
dec
add
mov
jl
xchg
(bad)
mov
sub
lds
pop
pop
out
loopne
pusha
xor
cmps
jnp
in
inc
popf
arpl
in
push
aad
icebp
in
es
test
xchg
push
inc
outs
jg
cli
push
in
inc
mov
pop
mov
popf
xchg
mov
jns
out
jmp
(bad)
inc
and
loop
inc
hlt
dec
sub
mul
das
inc
mul
cs
add
pushf
or
lahf
pusha
loope
xchg
jb
dec
inc
dec
sub
pushf
xor
inc
push
inc
ror
push
aaa
ins
rol
popf
xchg
ins
xchg
fadd
aas
cwde
jb
inc
or
lock
inc
or
mov
rcr
mov
mov
add
mov
into
out
lock
jp
or
lahf
xchg
mov
cmc
rcl
pop
stos
ror
xchg
and
add
fsubr
pusha
mov
(bad)
fwait
repz
retf
hlt
inc
xchg
das
enter
aaa
lods
lea
sbb
retf
leave
add
push
jae
mov
data16
(bad)
cdq
lock
in
int3
and
mov
sbb
push
xchg
out
mov
sbb
pushf
mov
mov
push
push
int3
int
push
ret
inc
mov
cwde
cwde
hlt
(bad)
cmc
dec
sahf
int3
cs
pushf
fidivr
imul
daa
and
inc
add
pushf
mov
sti
mov
loopne
aam
inc
pop
push
mov
ret
sub
sub
mov
push
and
lods
mov
hlt
dec
popa
inc
mov
cmp
inc
mov
stc
rol
sbb
clc
jge
jnp
rcr
add
mov
aaa
mov
xchg
cmps
in
aas
dec
(bad)
repnz
push
push
pushf
pop
push
and
shr
cmp
mov
jnp
ss
jne
adc
rcl
mov
sar
push
lea
xor
(bad)
fdivp
jg
stc
scas
scas
(bad)
lea
fcmovnbe
fimul
add
(bad)
pushf
rcr
jmp
fmul
call
mov
aad
pop
sbb
mov
in
dec
add
jl
inc
mov
push
inc
push
or
popf
jb
leave
xchg
cmp
retf
in
cld
or
test
ret
loope
inc
mov
lds
pop
dec
sbb
jbe
mov
mov
fldcw
add
sub
push
pop
adc
xor
fadd
icebp
retf
adc
dec
rcr
iret
leave
sti
sar
sub
or
ret
leave
lahf
pop
inc
xchg
xor
dec
daa
repnz
movs
sub
stc
dec
cmp
lods
pop
hlt
rol
or
lahf
dec
popf
sub
loopne
aam
cmc
repz
into
ret
in
ret
push
cmps
mov
mov
(bad)
sub
adc
jl
xchg
inc
sbb
imul
or
add
(bad)
and
shl
mov
add
in
and
(bad)
lods
push
movs
sbb
pop
inc
mov
pop
xor
xor
out
xchg
outs
stc
pop
ret
pop
cmp
pop
je
cmp
je
inc
pushw
and
dec
(bad)
adc
fs
mov
sbb
jno
in
lahf
arpl
fisttp
mov
jno
enter
xchg
sub
jl
sar
jne
sbb
inc
pop
mov
mov
xlat
call
push
jo
sub
inc
test
pushf
lds
bound
adc
nop
cli
xchg
(bad)
rcl
or
sbb
imul
retf
cld
push
inc
dec
mov
push
cmp
lds
push
add
mov
mov
or
ret
mov
shr
adc
jp
dec
dec
psubd
and
inc
and
push
or
les
cmp
add
xor
mov
hlt
ret
int
fdiv
lods
hlt
mov
ret
test
cmp
and
xor
jno
cmp
push
jge
mov
ret
dec
sahf
pop
faddp
mov
scas
ss
ret
js
sbb
fisub
mov
aam
jo
pop
cmp
lock
imul
stos
test
fsub
bound
repnz
push
jmp
(bad)
aam
imul
add
stos
dec
jne
jb
pop
pop
and
(bad)
cmp
shr
or
sbb
rcl
aam
(bad)
or
shr
sahf
push
ret
popa
and
es
mov
mov
bound
xchg
in
dec
adc
push
enter
mov
and
or
mov
imul
jmp
sub
pop
shl
push
cmc
and
out
dec
mov
in
push
and
aas
(bad)
and
(bad)
fadd
cli
lahf
sub
jge
not
sbb
pop
out
ss
mov
push
mov
sbb
push
out
dec
pop
mov
cmc
lods
push
xchg
push
push
mov
pop
mul
nop
ret
dec
inc
push
out
stos
out
lahf
das
push
fnsave
ret
jne
into
clc
sti
fsub
lock
and
xor
ret
fadd
inc
mov
or
pop
xchg
pop
imul
adc
shr
(bad)
pop
sbb
mov
push
xor
dec
scas
and
xchg
(bad)
dec
add
and
cmp
pop
cmps
pushf
and
outs
cmp
or
cmps
jo
cmps
xchg
ins
fnstsw
pop
pop
jno
cmp
outs
aam
xchg
test
std
cdq
(bad)
jl
aaa
lock
push
scas
xchg
aas
jecxz
pop
sahf
sti
addr16
mov
ret
add
cld
aas
popa
xchg
jae
push
pop
xchg
dec
sahf
adc
push
and
clc
aas
or
lahf
daa
mov
sti
mov
push
clc
add
push
add
shr
mov
xor
jo
test
aas
es
jne
lahf
stos
mov
mov
jo
adc
adc
mov
mov
jo
jg
test
fisttp
cmp
push
push
test
lahf
mov
fwait
addr16
mov
in
pushf
add
ret
(bad)
pushf
cmps
dec
add
in
es
ror
or
sub
fs
(bad)
movs
xor
jmp
mov
inc
mov
outs
imul
and
lods
dec
inc
test
fiadd
ret
push
rol
ds
rcr
pop
sub
arpl
cmp
sub
int3
mov
sbb
mov
rcl
popf
xor
sar
rcl
sbb
shr
fisubr
xlat
test
sub
out
jg
mov
inc
scas
ret
les
stos
shl
xchg
sbb
cli
sbb
js
xor
rcr
jg
lods
mov
or
mov
lahf
mov
inc
fist
jo
lea
aam
mov
push
dec
jb
std
out
aas
add
mov
cmp
iret
and
shl
xor
add
pop
lahf
dec
xor
js
test
(bad)
jns
ror
pop
inc
push
data16
out
pop
int
lahf
les
jl
pop
les
adc
pushf
mov
ret
sbb
jae
bound
jp
out
cs
sbb
fnstsw
xchg
mov
bound
cmps
inc
cmp
sti
ins
add
cmp
fsub
jae
out
bound
sar
adc
ret
(bad)
fisub
cmp
dec
dec
daa
js
adc
cwde
in
ret
cmp
adc
add
inc
int
pop
jno
inc
xchg
dec
popf
pop
out
mov
ss
popa
jb
jp
mov
push
cmp
mov
clc
ss
aam
pminub
into
ds
cmc
and
pop
in
loopne
push
or
aas
std
imul
xchg
ds
test
pushf
(bad)
daa
cmp
rol
test
inc
mov
xor
xor
mov
in
pushf
(bad)
nop
cmp
call
cmp
xor
(bad)
dec
or
pop
xchg
test
sbb
cli
cmp
push
and
xor
inc
xor
xchg
ret
cmp
movs
loope
mov
mov
jge
cmp
and
shld
sub
outs
push
cmc
dec
cs
ds
inc
xor
in
cmp
sbb
sbb
out
sbb
arpl
call
and
inc
outs
pop
sub
xchg
push
add
push
push
sbb
jle
mov
outs
(bad)
cmps
pop
pushf
lods
pushf
dec
std
scas
sbb
aam
cwde
push
addr16
sbb
aad
aad
nop
lea
push
aad
cwde
jle
std
ret
mov
xchg
movs
stos
jb
cmp
jle
mov
ret
xor
lods
jo
inc
or
jg
ins
pop
retf
mov
and
sbb
sar
jbe
adc
add
mov
lods
or
adc
jne
aam
mov
in
lods
pop
mov
cmp
(bad)
aas
in
call
aam
push
int3
inc
scas
dec
push
mov
retf
mov
inc
mov
push
fadd
in
test
inc
jmp
je
test
fiadd
jns
cmp
out
in
int
xchg
popa
sahf
mov
ins
in
outs
cwde
(bad)
xchg
cmc
dec
aam
push
xchg
adc
mov
movs
loop
dec
xor
pushw
or
aam
adc
mov
inc
or
jl
xchg
lahf
add
sbb
pushf
mov
xchg
or
mov
cmp
fadd
mov
fadd
add
ds
pushf
loop
jbe
idiv
mov
clc
inc
dec
repnz
jnp
inc
add
fmul
mov
cmp
add
pop
cwde
outs
clc
mov
mov
pusha
or
add
mov
adc
mov
cwde
mov
pop
mul
inc
pop
pusha
add
or
mov
out
or
add
sbb
test
mov
cmp
mov
sti
pushf
xor
mov
sub
inc
pop
pusha
sub
jno
xor
std
lds
xor
rol
lar
inc
ret
push
jmp
mov
out
dec
in
jmp
mov
pop
adc
xor
stos
add
xor
arpl
int3
in
pop
mov
retf
cmp
sbb
(bad)
push
mov
pushf
movs
mov
push
cmp
mov
and
mov
add
jmp
pop
xor
int
pop
mov
movs
ret
mov
mov
push
inc
ds
loopne
push
test
push
and
and
pop
and
lods
sti
inc
jg
push
jb
pop
pusha
mov
jnp
cmps
(bad)
cmps
mov
mov
xlat
outs
sub
inc
or
mov
pushf
ja
add
call
sbb
adc
in
scas
and
test
push
jno
out
test
adc
test
push
ss
dec
adc
cli
mov
call
sbb
ins
jnp
xchg
cmp
and
inc
repz
cmp
mov
push
cmp
pop
sar
into
inc
pop
or
addr16
inc
xor
inc
pop
xor
jbe
popf
mov
jl
mov
sbb
repnz
mov
int3
push
adc
xchg
outs
retf
xor
add
or
stos
int
jle
(bad)
loop
jle
retf
inc
ret
sub
stos
call
test
adc
cmp
leave
or
mov
cmp
out
pushf
add
add
pop
retf
in
pop
dec
loopne
aam
mov
xchg
adc
ins
cld
ins
in
xor
cmp
jnp
jns
lahf
xchg
adc
jmp
jnp
pushf
xor
pop
ficom
add
dec
aam
fwait
ret
addr16
imul
sti
sbb
jns
fadd
sub
movs
sahf
xchg
pop
in
mov
loopne
pop
cmp
sbb
inc
and
ret
pop
pop
leave
sbb
pop
ret
and
mov
mov
stos
mov
in
ret
gs
push
sti
mov
cmp
retf
push
ds
xor
sbb
aam
mov
xor
inc
popf
fld1
xlat
rol
pop
xor
pop
inc
push
test
push
pushf
call
or
and
push
pop
xchg
push
push
out
jle
add
sbb
rcl
jg
loop
pop
rol
outs
aad
daa
(bad)
mov
or
inc
imul
fwait
sub
(bad)
pusha
dec
or
jmp
fld
jl
mov
xlat
nop
pop
fadd
addr16
pusha
jmp
sub
xchg
jecxz
mov
cmc
test
(bad)
pop
sbb
fmul
nop
jo
lods
shr
jns
icebp
sub
popa
sti
ret
mov
fs
outs
jg
mov
dec
repnz
push
mov
add
mov
inc
push
aam
fwait
and
jbe
adc
pushf
imul
ret
or
mov
pop
popa
push
imul
or
xor
stos
inc
push
and
inc
clc
loopne
cmp
cs
outs
and
mov
cmp
js
adc
and
lock
inc
ret
imul
xchg
dec
push
call
mov
xchg
inc
dec
cmp
aas
xchg
mov
mov
out
call
dec
loopne
jbe
cmp
or
sub
push
imul
lods
jmp
pushf
outs
iret
add
rcr
pop
inc
aad
in
outs
xchg
mov
and
push
adc
add
mov
push
sub
adc
pop
inc
ins
fnstcw
popa
in
ds
cwde
xor
inc
jmp
loop
cwde
rcl
fld
ins
and
test
add
gs
cmp
ret
jle
sub
add
enter
aad
add
stc
push
pop
pop
leave
test
dec
push
pushf
scas
add
fnstsw
mov
lds
mov
pop
xor
pop
jmp
out
push
div
fadd
leave
push
fild
or
xchg
adc
cmp
sahf
jbe
jns
mov
sub
mov
sub
jle
jl
imul
push
sub
adc
stc
in
in
sti
xchg
add
out
rol
pop
(bad)
les
mov
mov
int
and
push
pushf
dec
or
xchg
aas
into
cmp
jno
movs
xchg
sub
pushf
push
add
sbb
(bad)
fwait
mov
leave
inc
push
mov
clc
and
stc
fwait
jbe
dec
push
and
lahf
push
mov
add
xchg
add
or
das
dec
mov
fsub
nop
pusha
mov
jo
or
enter
out
in
jnp
inc
fnstsw
xchg
inc
cvtps2pi
add
push
not
lods
icebp
cmps
adc
dec
mov
pop
add
das
inc
in
retf
inc
cmp
or
pop
adc
jge
in
pop
and
sub
int
xor
cmp
ins
push
dec
xor
shr
pop
push
dec
imul
leave
dec
call
add
je
call
cli
popf
sbb
or
cmp
aas
(bad)
test
mov
hlt
ret
mov
mov
fwait
cli
aas
mov
or
popf
cmc
xchg
xchg
inc
push
push
lahf
mov
sbb
mov
mov
inc
es
mov
popa
inc
fnstenv
mov
pushf
lds
dec
dec
hlt
jmp
or
adc
mov
dec
inc
(bad)
ja
mov
cmp
adc
aas
xchg
mov
dec
cli
scas
jecxz
mov
push
cmp
inc
les
shl
jmp
mov
pushf
mov
sub
push
xchg
sbb
pop
outs
mov
jb
add
mov
push
or
aam
test
retf
retf
in
dec
pop
mov
add
ror
imul
push
pop
or
jp
shr
movs
call
jecxz
xor
fwait
mov
shr
cdq
push
dec
outs
inc
push
mov
mov
dec
(bad)
shl
inc
ret
or
(bad)
aad
ret
pop
out
cli
dec
mov
push
add
xor
cmp
fist
cmp
fnstenv
into
push
dec
(bad)
rol
jne
ror
popa
jp
lock
ss
popf
inc
jnp
inc
out
les
inc
jmp
test
push
stos
pop
pop
inc
sbb
sti
push
jno
xlat
pop
addr16
mov
xchg
mov
mov
sahf
jnp
add
ficomp
xchg
add
mov
inc
int
inc
add
mov
inc
sbb
out
outs
lods
xchg
sub
adc
ja
ret
cmp
aam
aas
(bad)
aam
test
std
pushf
mov
daa
jnp
xor
cmp
pop
pop
add
xor
lods
retf
pushf
jns
or
dec
in
and
pusha
aam
mov
call
dec
sbb
fisttp
int
cdq
inc
or
lods
(bad)
push
and
stos
dec
std
xor
sar
jnp
imul
aam
ds
push
js
ret
adc
sbb
xor
retf
mov
jne
popf
fiadd
adc
adc
lods
inc
push
cmp
xor
mov
add
pop
nop
pusha
ins
fsub
sti
sbb
mov
pop
xor
mov
popf
addr16
jg
adc
rcl
cmp
xchg
ret
mov
aaa
push
jg
sbb
add
and
gs
mov
cmp
or
add
aad
popf
cdq
jb
add
lds
hlt
or
pushf
jo
pop
ret
mov
mov
mov
in
pushf
add
sbb
enter
mov
xchg
mov
inc
or
call
or
out
mov
loopne
ret
xor
stos
clc
jmp
add
pop
call
push
imul
icebp
pop
out
add
inc
je
lods
xchg
rol
in
aaa
ret
and
jl
lods
inc
adc
repz
repnz
lea
lods
or
js
shl
cmps
out
mov
cmp
add
faddp
xchg
in
loop
out
xor
retf
xor
(bad)
inc
loop
(bad)
movs
mov
stos
adc
xchg
lahf
push
test
scas
mov
sti
sub
das
popf
xchg
pushf
and
pusha
add
or
fsubp
jp
lock
cli
sub
icebp
clc
js
and
movs
push
mov
ret
les
mov
add
xlat
loope
rcl
pop
xor
xor
in
and
mov
inc
mov
fistp
pushf
push
repz
xor
adc
sahf
repz
push
cmps
sbb
cmc
cmp
sbb
test
dec
ret
ret
adc
push
cwde
jp
sub
(bad)
mov
movs
ret
out
dec
jns
or
cmp
repz
call
std
push
and
pop
jmp
cmps
icebp
inc
add
mul
pop
mov
loopne
aam
xchg
loope
in
jnp
and
popa
push
pop
fwait
test
inc
mov
dec
sub
adc
jae
and
inc
sub
dec
aaa
pop
icebp
xchg
dec
xchg
pushf
arpl
inc
in
mov
inc
push
jae
push
xlat
stc
push
movs
aam
mov
ret
test
mov
ss
dec
leave
sbb
rol
es
hlt
(bad)
mov
pop
bound
popa
pushf
pop
mov
popf
xchg
rcl
mov
inc
mov
lds
push
inc
outs
pop
inc
mov
mov
mov
inc
ret
push
push
ds
sahf
hlt
mov
jbe
jle
(bad)
scas
and
sar
in
ins
test
ret
fwait
push
dec
int3
bswap
xor
int
dec
loopne
inc
cs
aam
mov
ret
cli
test
mov
fld
sbb
shl
sbb
inc
lahf
adc
mov
shr
or
sub
jmp
add
and
iret
cs
movs
(bad)
mov
rcl
xor
inc
fwait
push
push
lods
sbb
into
popf
sbb
and
add
leave
add
enter
pushf
sar
(bad)
pop
xchg
mov
ror
cmc
adc
rep
adc
sbb
aam
mov
and
ret
xor
popa
cmp
fisttp
sbb
(bad)
dec
mov
out
sti
cwde
jns
and
mov
je
dec
ret
push
leave
sbb
out
jp
lea
xchg
xor
outs
nop
div
and
repz
add
inc
lea
xchg
arpl
mov
cdq
jne
inc
stos
ss
in
lods
or
imul
outs
jl
xchg
sub
aas
daa
into
repz
adc
call
mov
sbb
jg
fcmovnb
jne
pop
cmp
in
sub
call
push
push
push
push
call
add
push
xor
add
mov
push
push
push
push
call
add
push
push
push
push
push
push
call
add
mov
mov
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
push
push
call
add
call
push
push
push
call
add
push
push
call
add
push
call
add
push
push
push
push
call
add
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
mov
call
push
push
call
add
mov
mov
push
push
call
add
push
call
add
sub
cmp
je
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
call
add
call
push
push
push
push
call
add
cmp
jne
add
push
push
push
push
call
add
call
cmp
jne
push
call
add
sub
cmp
jne
push
push
call
add
sub
mov
push
push
push
push
push
call
add
mov
mov
or
push
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
call
add
push
push
push
call
add
cmp
je
cmp
jne
test
je
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
call
push
push
push
call
add
call
push
push
call
add
push
push
push
call
add
lea
push
call
and
mov
push
call
add
push
push
push
call
add
mov
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
add
push
push
call
add
push
push
push
push
push
call
add
sub
push
push
push
push
call
add
push
call
add
add
add
cmp
je
mov
sub
push
push
push
push
call
add
mov
add
sub
or
and
test
je
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
push
push
push
push
call
add
call
and
or
call
call
cmp
je
test
je
push
push
push
call
add
push
push
call
add
call
mov
push
push
push
call
add
push
push
call
add
or
push
push
push
call
add
sub
lea
push
call
mov
cmp
jne
and
push
push
call
add
sub
mov
push
push
push
call
add
lea
push
call
sub
call
push
push
call
add
push
call
add
mov
push
push
push
push
push
call
add
push
call
add
push
push
push
call
add
push
call
add
push
call
add
sub
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
call
add
mov
xor
push
push
push
call
add
add
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
call
add
call
push
push
push
push
call
add
call
sub
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
call
add
push
push
push
push
call
add
mov
mov
sub
cmp
je
add
xor
push
push
push
push
call
add
add
cmp
je
test
jne
sub
call
mov
call
push
push
push
call
add
test
jne
push
push
push
push
call
add
push
push
call
add
call
mov
push
call
add
call
mov
xor
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
and
push
push
push
push
call
add
add
add
push
call
add
push
push
push
push
call
add
push
call
add
push
push
push
push
call
add
add
sub
push
call
add
push
push
push
push
call
add
push
push
call
add
mov
sub
mov
push
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
add
push
push
push
call
add
lea
mov
add
and
mov
mov
push
push
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
call
add
call
mov
push
call
add
push
push
push
push
call
add
mov
mov
push
push
call
add
push
call
add
shr
sub
push
push
call
add
cmp
jne
call
mov
mov
add
sub
mov
sub
sub
cmp
je
add
sub
add
sub
call
mov
mov
push
push
call
add
push
push
push
push
push
call
add
mov
add
push
push
push
call
push
push
push
call
add
push
push
push
call
add
call
sub
add
cmp
jne
add
push
push
call
add
mov
mov
push
call
add
call
sub
mov
push
push
push
push
push
call
add
and
push
call
add
mov
push
push
push
push
call
add
add
push
push
push
call
add
push
call
add
test
jne
push
push
call
add
sub
test
jne
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
push
push
push
call
add
push
push
call
add
cmp
jne
mov
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
sub
push
push
push
push
call
add
push
call
add
add
add
push
push
push
push
push
call
add
sub
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
call
sub
push
call
add
mov
or
push
call
add
push
push
call
add
xor
push
push
push
call
add
test
je
call
sub
push
push
push
push
call
add
and
add
pop
cmp
je
test
je
mov
or
push
call
add
pop
xor
mov
push
push
call
add
pop
push
call
add
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
mov
push
push
push
call
add
push
mov
sub
push
call
add
mov
push
call
add
call
cmp
je
add
mov
call
call
call
cmp
je
test
je
add
mov
push
push
push
push
call
add
call
xor
mov
push
push
push
call
add
push
call
add
mov
cmp
jne
cmp
je
mov
cmp
je
xor
add
mov
add
sub
cmp
je
add
mov
sub
sub
add
sub
mov
mov
cmp
je
cmp
je
cmp
je
add
sub
xor
add
and
test
jne
mov
add
cmp
jne
cmp
je
mov
mov
add
mov
or
add
add
mov
mov
sub
add
sub
add
mov
mov
or
cmp
jne
sub
mov
mov
sub
and
xor
sub
or
add
and
cmp
jne
mov
mov
add
cmp
jne
mov
cmp
jne
mov
add
add
mov
mov
cmp
je
add
mov
sub
mov
and
or
cmp
jne
sub
sub
mov
cmp
je
or
add
mov
mov
add
sub
add
xor
mov
sub
sub
add
sub
cmp
je
cmp
jne
push
call
add
push
push
push
push
call
add
push
call
and
or
je
or
mov
mov
cmp
jne
cmp
je
mov
mov
add
mov
xor
cmp
je
test
je
cmp
je
add
xor
mov
cmp
jne
add
add
mov
mov
sub
and
sub
add
add
sub
xor
add
sub
lea
add
add
push
push
call
add
mov
push
push
push
call
add
push
push
call
add
sub
call
inc
sub
mov
add
sub
mov
test
je
add
mov
sub
cmp
jne
cmp
jne
add
add
cmp
jne
push
push
call
add
mov
sub
mov
or
add
sub
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
mov
or
call
mov
push
push
push
call
add
mov
push
push
call
add
cmp
jne
test
je
push
push
push
call
add
add
push
call
add
mov
and
add
mov
add
cmp
je
mov
mov
sub
cmp
jne
add
add
cmp
jne
cmp
jne
sub
add
test
je
mov
mov
sub
add
add
cmp
jne
add
sub
mov
and
xor
add
add
add
add
add
add
mov
push
push
push
push
push
call
add
call
call
pop
mov
push
push
push
call
add
pop
push
push
push
call
add
call
pop
mov
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
push
push
push
push
push
call
add
push
push
call
add
push
cmp
je
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
mov
call
push
call
add
push
push
call
add
push
push
push
push
call
add
call
and
mov
rdtsc
add
mov
cmp
je
add
add
sub
and
sub
xor
pop
sub
mov
mov
and
sub
add
cmp
jne
mov
test
je
mov
mov
or
and
and
and
sub
sub
pop
test
jne
mov
sub
cmp
je
mov
mov
cmp
je
mov
sub
cmp
jne
sub
mov
cmp
jne
test
jne
mov
cmp
je
sub
cmp
jne
add
add
sub
and
pop
mov
add
add
mov
mov
add
add
and
and
xor
and
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
push
call
add
push
call
push
push
push
push
call
add
call
mov
mov
push
push
push
push
push
call
add
push
push
push
call
add
call
mov
push
push
push
push
call
add
mov
test
je
mov
cmp
jne
add
mov
mov
mov
sub
add
cmp
jne
xor
cmp
je
mov
add
dec
add
sub
add
sub
add
mov
mov
sub
add
and
sub
cmp
je
mov
cmp
je
cmp
je
cmp
je
sub
add
add
mov
mov
sub
and
add
xor
mov
add
mov
sub
test
jne
mov
add
cmp
je
mov
mov
and
sub
add
neg
cmp
jne
mov
add
mov
cmp
jne
cmp
je
add
add
mov
or
mov
cmp
jne
mov
and
cmp
jne
add
cmp
je
and
and
sub
mov
cmp
jne
cmp
je
sub
mov
add
sub
cmp
jne
sub
add
and
sub
or
jmp
push
push
call
add
push
call
add
push
call
add
call
push
push
push
push
push
call
add
push
push
push
push
push
call
add
pop
mov
push
push
push
push
call
add
push
push
call
add
pop
mov
xor
push
push
call
add
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
add
sub
sub
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
push
push
push
push
call
add
push
push
push
call
add
add
push
call
add
call
push
push
push
call
add
sub
and
add
pop
call
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
push
cmp
je
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
push
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
mov
mov
push
push
call
add
add
push
push
push
call
add
push
mov
xor
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
sub
push
push
call
add
push
push
call
add
add
push
add
push
push
push
push
call
add
push
push
call
add
mov
mov
mov
sub
mov
add
sub
mov
or
mov
sub
cmp
jne
mov
or
mov
call
mov
mov
or
and
test
jne
sub
mov
or
push
call
add
and
and
push
push
push
push
push
call
add
mov
mov
push
call
add
mov
mov
push
push
push
call
add
mov
push
push
call
add
push
call
add
mov
push
push
call
add
mov
call
push
push
push
push
push
call
add
mov
mov
or
je
mov
sub
add
mov
add
sub
cmp
je
or
mov
mov
sub
sub
or
sub
sub
repnz
add
mov
push
push
push
push
call
add
add
call
and
cmp
jne
push
push
push
push
call
add
push
push
call
add
xor
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
mov
call
sub
push
push
call
add
add
add
add
mov
sub
push
push
push
push
call
add
cmp
je
mov
add
cmp
jne
cmp
jne
cmp
je
xor
mov
push
push
push
call
add
call
push
push
call
add
push
push
push
push
call
add
and
add
add
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
sub
jmp
push
push
push
push
push
call
add
add
add
mov
call
mov
sub
push
push
push
call
add
push
call
add
push
push
push
call
add
push
push
push
push
call
add
cmp
jne
mov
push
push
push
push
push
call
add
sub
push
push
push
push
call
add
call
mov
push
push
call
add
call
add
push
push
call
add
call
push
push
push
push
call
add
add
cmp
je
add
push
call
add
push
call
add
mov
sub
sub
pop
add
pop
mov
mov
add
cmp
je
mov
mov
sub
add
sub
pop
mov
cmp
jne
mov
cmp
jne
add
cmp
jne
add
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
cmp
jne
or
or
mov
mov
add
add
and
push
mov
or
test
je
or
push
sub
test
jne
add
xor
mov
add
add
and
xor
sub
sub
pop
xor
add
pop
or
mov
xor
and
xor
sub
cmp
jne
xor
sub
add
add
cmp
je
cmp
jne
test
je
xor
mov
cmp
jne
mov
cmp
jne
sub
mov
sub
cmp
jne
add
xor
mov
or
add
add
sub
cmp
jne
add
sub
pop
mov
and
sub
add
sub
mov
cmp
je
mov
cmp
jne
mov
cmp
je
add
sub
or
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
push
mov
mov
sub
push
add
test
jne
cmp
je
mov
mov
add
cmp
jne
add
and
sub
sub
mov
mov
xor
cmp
je
or
add
add
push
sub
mov
sub
add
mov
add
sub
mov
mov
xor
or
add
add
sub
sub
mov
mov
cmp
jne
sub
mov
sub
add
or
add
test
je
cmp
jne
xor
sub
pop
sub
or
cmp
je
mov
mov
cmp
je
mov
sub
add
mov
test
je
cmp
je
mov
add
sub
mov
add
sub
or
sub
add
add
sub
sub
sub
add
add
add
sub
sub
add
cmp
je
sub
add
pop
mov
mov
or
add
add
pop
mov
sub
test
je
cmp
je
mov
mov
xor
cmp
je
or
add
add
mov
add
sub
cmp
jne
or
sub
mov
add
cmp
jne
mov
test
je
cmp
jne
cmp
je
mov
cmp
je
mov
cmp
jne
cmp
je
and
add
add
xor
and
add
sub
mov
mov
add
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
sub
and
mov
sub
and
sub
add
add
push
mov
cmp
jne
mov
push
add
push
add
mov
cmp
je
mov
mov
mov
and
add
sub
sub
and
cmp
je
cmp
je
test
jne
mov
sub
add
test
jne
xor
xor
sub
sub
or
sub
add
cmp
jne
mov
cmp
jne
cmp
je
mov
cmp
jne
add
mov
xor
and
or
add
sub
test
je
mov
sub
mov
sub
cmp
je
sub
xor
mov
cmp
je
mov
mov
cmp
jne
add
sub
mov
and
cmp
je
and
mov
cmp
jne
cmp
jne
sub
cmp
jne
mov
xor
mov
mov
cmp
je
sub
add
cmp
jne
mov
xor
mov
cmp
jne
add
mov
mov
sub
sub
sub
test
jne
xor
test
je
mov
and
test
jne
add
sub
mov
sub
add
sub
mov
mov
or
sub
cmp
je
cmp
jne
mov
mov
sub
and
add
add
add
add
mov
mov
sub
and
or
cmp
jne
mov
mov
add
sub
add
cmp
je
sub
add
cmp
je
add
add
mov
sub
mov
add
cmp
je
sub
mov
mov
test
jne
mov
mov
add
test
je
sub
sub
xor
mov
test
je
add
mov
sub
or
cmp
je
mov
mov
and
cmp
jne
mov
mov
add
sub
sub
cmp
jne
mov
xor
cmp
je
cmp
jne
sub
test
je
mov
cmp
je
mov
test
jne
add
mov
or
cmp
je
add
add
mov
add
xor
cmp
je
mov
xor
and
sub
sub
add
sub
sub
add
pop
add
pop
mov
and
add
mov
sub
add
sub
xor
pop
mov
mov
sub
test
je
mov
sub
mov
sub
and
cmp
jne
add
and
sub
add
add
sub
leave
ret
add
