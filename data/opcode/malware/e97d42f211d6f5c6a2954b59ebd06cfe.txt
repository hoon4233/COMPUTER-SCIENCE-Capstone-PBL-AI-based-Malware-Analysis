mov
add
add
add
dec
add
add
add
add
add
or
add
add
add
fsub
add
movs
test
add
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
add
add
je
imul
add
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
movs
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
aaa
cmp
cmp
cmp
sub
sub
sub
cmp
xor
xor
xor
jge
cmp
outs
fs
gs
push
jne
inc
inc
xor
dec
jp
push
cmp
push
push
jne
imul
dec
inc
dec
xor
push
xor
push
cmp
push
xor
push
arpl
imul
push
xor
pop
push
xor
bound
jae
inc
cmp
add
add
jns
xchg
jmp
cmp
or
and
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
test
add
ret
in
mov
xchg
and
jnp
dec
cmc
dec
xlat
loopne
mov
and
nop
inc
adc
ror
imul
retf
gs
pushw
inc
int3
in
popf
mov
mov
mov
dec
daa
neg
(bad)
aas
pop
add
dec
fcmove
sahf
and
jle
pop
aas
and
xlat
clc
mov
lea
xlat
clc
jne
(bad)
push
(bad)
std
imul
jg
scas
and
out
test
adc
push
stc
pop
(bad)
sahf
(bad)
xlat
clc
fstp
lahf
call
scas
pop
repz
aas
(bad)
mov
mov
pop
movs
shr
fidiv
cmc
jp
push
retf
hlt
jmp
xor
outs
pushf
cld
outs
or
in
scas
icebp
imul
jg
pop
jecxz
ins
jle
xlat
push
out
jg
imul
mov
inc
mov
cld
call
addr16
jg
jle
dec
mov
push
jle
mov
outs
cmp
out
xchg
(bad)
pop
cld
cmp
cmp
xlat
clc
int
jg
cmps
std
ror
inc
jo
les
call
scas
sbb
lahf
pop
jmp
clc
(bad)
call
std
xor
div
rcl
outs
loopne
stc
sbb
(bad)
idiv
push
mov
mov
popf
mov
arpl
int
pop
inc
jecxz
test
sti
xor
scas
sbb
cmp
sub
sbb
daa
dec
cmp
out
dec
lock
rep
jle
xlat
std
xor
xlat
cld
xor
clc
xor
xlat
clc
cmc
mov
retf
popf
pop
sti
xlat
clc
adc
fwait
cmps
call
std
sti
(bad)
adc
jle
call
jle
cli
sub
sti
int
outs
mov
jle
mov
pop
mov
jg
fnstsw
ja
sub
xlat
cmp
xor
mov
std
dec
mov
jmp
jmp
jne
jmp
outs
loop
stc
mov
aaa
les
mov
cmps
inc
sbb
retf
pop
out
xchg
aas
icebp
xchg
loop
fucomip
mov
or
xlat
cmp
add
out
(bad)
sti
(bad)
(bad)
cmc
dec
or
iret
in
dec
(bad)
dec
(bad)
mov
movs
(bad)
dec
aam
sti
aam
ja
in
std
add
cld
aaa
clc
pop
jle
lahf
cld
mov
(bad)
jmp
loope
jmp
mov
in
dec
call
aaa
(bad)
pop
shl
or
out
dec
out
movs
out
xchg
(bad)
mov
mov
mov
scas
mov
(bad)
test
mov
(bad)
sbb
push
hlt
loopne
std
mov
imul
outs
cdq
cld
out
sub
pushf
sar
(bad)
(bad)
mov
jle
xlat
fimul
bnd
ret
push
mov
(bad)
cmp
cld
push
lock
outs
cdq
jl
aaa
adc
sbb
out
outs
inc
ja
cld
ja
in
daa
push
outs
repz
jg
fstp
rcl
ja
mov
(bad)
ins
add
fbstp
cmp
xor
pop
jecxz
clc
xor
lahf
fistp
ja
imul
call
repz
hlt
mov
inc
call
ins
jle
sub
call
push
(bad)
fild
scas
jmp
(bad)
mov
sbb
stc
inc
jg
cdq
clc
aas
cmp
and
call
mov
out
stc
pop
icebp
in
std
xchg
mov
(bad)
mov
stc
cmp
(bad)
out
sbb
jge
addr16
clc
in
xlat
add
mov
cli
call
mov
rcr
and
sbb
cmps
dec
jle
out
lock
push
or
stc
out
jg
dec
(bad)
(bad)
ja
pop
jle
aas
cdq
xchg
cmp
mov
daa
inc
das
clc
in
std
in
aas
stc
xchg
jle
jmp
sub
fist
fmul
add
fwait
inc
dec
pop
hlt
pop
mov
out
hlt
call
std
jg
std
dec
stc
mov
mov
xor
sub
out
call
fbld
dec
jle
fucomip
ja
cld
daa
jg
out
(bad)
cs
std
cli
leave
lahf
cld
mov
stc
out
repz
scas
push
out
add
xor
xor
mov
jecxz
stc
in
(bad)
das
jg
fucomip
dec
dec
dec
pop
inc
push
jmp
outs
repz
aas
neg
jl
ud0
inc
mov
stc
xor
jge
pusha
xor
shr
jmp
outs
icebp
iret
outs
dec
inc
jg
push
sub
fisttp
cld
outs
inc
loop
shr
scas
fst
fcomip
mov
xchg
cmc
scas
xor
ds
dec
std
leave
mov
mov
jmp
sbb
jg
popf
fild
xchg
(bad)
pop
cld
dec
pop
fild
mov
cli
inc
ds
or
cmps
jg
das
cld
add
int
shr
std
imul
xor
(bad)
sti
scas
and
lahf
dec
push
std
das
sar
(bad)
addr16
dec
aas
push
mov
hlt
neg
cli
stc
outs
ror
mov
adc
inc
(bad)
inc
(bad)
mov
jl
(bad)
(bad)
jnp
out
jg
xlat
adc
sub
sti
mov
imul
dec
(bad)
cdq
mov
dec
(bad)
inc
neg
mov
sti
lea
jg
jge
dec
aas
jmp
out
stc
int
retf
fcomip
ja
icebp
fcomip
pop
sbb
pop
inc
cld
xchg
cmps
and
sbb
xor
hlt
jg
mov
aam
imul
(bad)
jg
std
jg
call
dec
aas
lahf
loopne
out
dec
(bad)
out
add
outs
repz
das
sti
pop
jle
dec
inc
fcomip
xchg
(bad)
out
ja
int
stc
scas
jle
fucomip
xchg
(bad)
in
ja
ins
aas
stc
(bad)
lock
mov
add
jmp
std
cs
data16
shl
outs
(bad)
sti
jl
paddd
mov
dec
(bad)
cld
leave
fcomip
cmp
aaa
jmp
leave
daa
jg
out
repnz
daa
jg
out
repnz
shr
jg
mov
cs
(bad)
xchg
aas
in
mov
sub
jg
scas
add
cmc
jg
mov
or
test
or
arpl
in
xlat
adc
push
jmp
addr16
in
movs
idiv
cmps
idiv
dec
(bad)
xlat
(bad)
aaa
cld
in
stc
pop
ror
pop
jmp
data16
test
daa
mov
cld
jge
stc
out
xchg
fcomip
xchg
jg
push
lock
(bad)
in
out
(bad)
pop
jle
dec
(bad)
neg
in
stc
in
dec
jg
out
hlt
outs
in
std
sahf
push
mov
or
cmc
sbb
aas
sar
(bad)
jnp
(bad)
jg
mov
out
popa
push
outs
repz
jg
jg
cmp
rcr
ret
cli
sub
inc
std
inc
hlt
ret
(bad)
dec
dec
dec
xchg
sti
mov
jle
enter
scas
(bad)
das
mov
xor
jmp
cmp
xchg
fist
inc
inc
cmp
xlat
imul
iret
cmp
add
loope
sub
iret
ds
icebp
or
fcomip
ja
sub
pop
sar
pop
jmp
stc
pop
shr
(bad)
in
(bad)
pop
jg
cli
inc
(bad)
movs
ret
jle
jg
(bad)
ins
out
jg
cmc
(bad)
fisttp
mov
psubd
inc
jl
jo
xor
push
push
or
jle
pop
out
stc
dec
or
fcomip
jg
ins
enter
cmp
jg
daa
fld
clc
test
je
out
in
aas
cdq
xor
in
xlat
pop
jg
dec
push
cli
cmps
jle
fcomip
idiv
repz
bound
cld
xchg
jg
pop
inc
sti
daa
or
out
dec
arpl
popf
jle
fisttp
dec
push
jle
cli
loopne
pop
mov
std
push
or
adc
mov
(bad)
rcl
scas
imul
in
scas
retf
sub
test
sbb
clc
xchg
mov
mov
int
pop
adc
(bad)
xor
fwait
(bad)
mov
adc
call
shl
dec
cli
scas
(bad)
jmp
dec
inc
jle
push
cmps
mov
test
xchg
jecxz
repnz
sub
push
jg
arpl
xchg
mov
mov
call
ret
jg
aas
cld
pop
mov
ret
push
jg
jg
xchg
rol
pop
sub
out
scas
xchg
icebp
outs
(bad)
mov
and
mov
call
mov
sbb
mov
repz
cld
out
mov
mov
cmp
(bad)
cwde
imul
(bad)
ja
(bad)
cmp
jg
jg
adc
inc
xor
aas
add
repnz
std
jp
fisttp
loope
inc
out
jg
mov
sbb
push
in
jl
or
xor
add
xor
sbb
inc
in
movs
mov
imul
cli
aas
sub
sbb
repz
jmp
cmc
imul
(bad)
cmp
push
clc
xor
hlt
(bad)
aas
out
xlat
and
(bad)
cs
bnd
out
int
cmp
sub
cmp
dec
cli
aas
cdq
scas
pop
jecxz
(bad)
sbb
mov
pop
dec
mov
ja
test
stc
in
std
ins
aas
stc
scas
jle
dec
(bad)
repz
in
cli
ins
jle
(bad)
aaa
dec
and
add
cmp
cld
(bad)
mov
jmp
inc
mov
sbb
leave
mov
jle
dec
(bad)
imul
xchg
jg
mov
sub
out
out
fucomip
jnp
ret
das
nop
jnp
fstp
pop
call
jl
sti
jl
outs
std
out
xchg
mov
clc
dec
(bad)
pop
push
jg
rcl
sub
popf
xchg
hlt
out
es
mov
push
jle
fcomip
jmp
(bad)
mov
lahf
(bad)
sti
jl
cmps
xchg
inc
not
outs
(bad)
shr
mov
pop
out
out
jg
xchg
jle
jbe
jle
fcomip
mov
int
cmp
sbb
nop
in
mov
lahf
dec
dec
ds
in
cmps
xor
clc
scas
jmp
cmc
out
clc
leave
jg
mov
fcomip
xchg
jg
cwde
xchg
dec
(bad)
cmp
inc
jg
cmp
iret
aas
xchg
cli
cld
scas
or
xchg
pop
cmp
ds
(bad)
clc
outs
cmc
sti
jle
icebp
sti
jle
and
push
clc
cmps
jg
int
std
in
clc
xor
pop
xchg
clc
std
popa
mov
cld
sti
add
pop
shl
push
add
aas
movs
mov
sti
aam
das
movs
pop
jle
push
pop
ror
jg
mov
sbb
pop
shl
xor
cld
retf
call
inc
jmp
std
outs
hlt
(bad)
mov
mov
jge
call
mov
fldcw
fisttp
(bad)
(bad)
aas
test
mov
aam
ss
ins
jle
loope
pop
ficomp
mul
cld
ins
jmp
std
div
sti
cmp
aas
xchg
ds
sbb
stc
(bad)
(bad)
or
cmp
sar
xchg
jle
aas
pop
std
cwde
mov
mov
pop
pop
cld
int
xchg
notrack
jge
neg
enter
mov
ret
call
jne
pop
std
sbb
cmc
mov
push
(bad)
push
mov
push
mov
mov
cld
in
jae
adc
add
mov
stc
cmp
ds
cmps
nop
sub
adc
aaa
and
jle
dec
rep
int3
mov
retf
outs
(bad)
imul
adc
pop
mov
call
mov
mov
(bad)
dec
(bad)
jg
std
dec
movs
(bad)
inc
dec
pop
loopne
movs
(bad)
dec
hlt
(bad)
jg
(bad)
call
sar
inc
(bad)
dec
(bad)
aas
jmp
shr
jmp
(bad)
dec
std
call
jmp
call
daa
push
aas
mov
lahf
test
nop
test
fild
in
cmp
repnz
jmp
mov
stc
fwait
call
mov
repnz
rcr
call
xor
aas
inc
mov
lahf
cld
dec
mov
cld
out
repnz
mov
(bad)
loope
std
leave
lahf
std
fwait
call
in
cld
dec
aas
cmc
leave
lahf
hlt
mov
idiv
std
or
fbld
lock
fldenv
jg
ror
inc
cmp
pop
std
cs
das
std
ds
mov
ret
fmul
pop
into
lods
dec
stc
inc
bnd
sbb
jg
sub
jecxz
sar
retf
sub
sbb
xchg
clc
clc
aaa
cmp
(bad)
lock
pop
mov
pop
call
dec
aad
bnd
into
sar
mov
sub
ja
in
idiv
clc
iret
(bad)
das
add
mov
jg
inc
cli
mov
push
mov
icebp
idiv
clc
jnp
das
(bad)
in
stc
xchg
paddd
cmc
mul
dec
enter
sbb
aas
or
pop
das
ins
(bad)
jns
retf
(bad)
cmp
out
pop
jle
fcomip
aaa
es
or
mov
or
mov
clc
xor
pop
mov
(bad)
jmp
dec
pop
inc
add
(bad)
jg
(bad)
dec
scas
and
loopne
jmp
inc
xchg
(bad)
dec
scas
and
push
cld
dec
jmp
lahf
sar
int
inc
mov
mov
repz
(bad)
addr16
loope
cld
xor
or
(bad)
jg
imul
dec
retf
inc
lahf
cld
jae
retf
or
sbb
scas
rcl
icebp
ja
xlat
outs
dec
(bad)
and
pop
jle
(bad)
xchg
mov
lahf
cld
xchg
hlt
out
aas
cmp
sub
fstp
out
jns
leave
lahf
icebp
mov
cld
cs
stc
adc
xchg
cmps
lahf
cld
adc
add
jnp
leave
jmp
xchg
lock
jg
or
xchg
jecxz
out
mul
out
jg
bound
std
leave
mov
js
jg
jbe
in
cld
mov
and
bnd
out
cld
aaa
adc
icebp
pop
dec
lahf
cld
out
neg
xchg
sub
cld
aaa
gs
ja
(bad)
push
sar
repz
in
mov
jg
mov
in
sti
int
push
or
jle
lahf
call
jle
dec
dec
(bad)
aaa
stc
in
std
sbb
sti
dec
(bad)
jl
add
ins
jge
test
xchg
fcomi
ja
aad
idiv
add
jmp
(bad)
stc
pop
add
xchg
les
cli
add
mov
adc
pop
jl
aas
xchg
or
cmp
pop
mov
out
clc
sub
sbb
sahf
xchg
mov
push
jg
mov
call
addr16
xor
sbb
add
adc
or
inc
inc
pop
jg
cli
cmp
stos
js
(bad)
or
ffreep
and
or
cli
or
push
cmp
(bad)
sub
mov
call
sbb
jl
inc
icebp
retf
(bad)
test
or
fild
and
lock
sub
mov
(bad)
push
jge
jmp
pop
dec
sub
cmps
(bad)
cmp
sti
fwait
(bad)
cmp
pop
cld
int
xchg
(bad)
jne
out
mov
push
jl
std
aas
stc
iret
mov
lahf
push
jmp
mov
enter
icebp
fwait
inc
cld
mov
adc
dec
lea
push
sti
aas
or
jg
fcomip
mul
dec
push
adc
xor
mov
arpl
(bad)
out
pop
call
stc
fnsave
and
shr
das
enter
lahf
jp
jl
daa
jmp
mov
ds
cld
cmp
cmp
repz
sbb
jg
pop
cmc
mov
mov
lahf
(bad)
daa
mov
scas
inc
sti
xchg
jg
add
jle
mov
jne
xchg
adc
xchg
mov
loop
fnsave
sub
mov
(bad)
pusha
cli
mov
daa
mov
pusha
mov
leave
jmp
add
pop
mov
jb
xchg
jmp
mov
enter
jg
iret
sti
pop
jle
cli
call
add
jp
jmp
out
inc
call
fwait
xchg
fnstsw
ja
paddd
mov
mov
jg
jg
mov
data16
outs
adc
aad
sti
daa
jns
jg
(bad)
mov
cmp
lahf
cld
stos
mov
(bad)
mov
dec
xor
cmp
fdivrp
stos
lock
sub
cmp
xchg
or
xor
jmp
xor
cmp
sbb
mov
enter
adc
aaa
(bad)
pop
test
cmp
push
dec
mov
fstp
(bad)
addr16
enter
stos
mov
dec
dec
jg
(bad)
dec
out
or
adc
push
popf
pop
jg
jg
(bad)
xor
jge
push
aas
inc
das
cld
cs
add
mov
push
retf
cmp
inc
pop
and
sub
jmp
std
(bad)
pop
pop
mov
push
scas
cmc
fwait
(bad)
jp
and
out
dec
jmp
leave
fnstcw
or
jle
cmp
shr
cmp
mov
cdq
push
call
icebp
stc
pop
jecxz
hlt
pop
push
sbb
xlat
and
ins
idiv
dec
data16
jmp
stc
ja
pop
ds
(bad)
idiv
pop
fisubr
movs
jge
adc
mov
jg
not
sub
mov
cmp
hlt
test
(bad)
xchg
call
jne
mov
or
add
std
mov
outs
repz
cmps
dec
add
cmps
jle
outs
xchg
inc
stc
imul
dec
mov
adc
aas
jle
pop
dec
clc
xchg
jg
jbe
jg
or
fstp
xchg
xor
aas
inc
pop
(bad)
mov
out
sar
out
std
sbb
out
aas
sti
ins
xchg
(bad)
xlat
dec
jg
mov
mov
pop
out
jg
xlat
std
dec
jle
in
ja
idiv
cld
jp
sub
stc
out
fistp
shl
jmp
cmc
(bad)
push
outs
mov
rcl
mov
xchg
outs
repz
dec
inc
test
aas
call
(bad)
shr
inc
out
scas
(bad)
cmp
clc
jge
jle
sar
pop
fs
jle
dec
(bad)
xlat
outs
std
les
mov
add
mov
mov
xor
xor
xchg
fisubr
mov
add
daa
popa
shr
cld
xlat
cmp
leave
mov
scas
(bad)
mov
(bad)
aas
cmps
(bad)
jmp
icebp
rol
call
cmc
cmp
clc
cmc
sub
repnz
(bad)
mov
dec
inc
cmp
xchg
mov
mov
ror
pop
cli
mov
mov
pop
cli
cli
dec
mov
in
jle
xchg
(bad)
jmp
xchg
pop
sti
sub
jle
push
(bad)
scas
int
test
dec
mov
repnz
jb
out
sbb
jmp
mov
call
or
test
clc
ins
test
mov
(bad)
in
(bad)
pop
ret
pop
rcr
fucomi
inc
mov
pop
iret
(bad)
mov
daa
xor
sbb
inc
arpl
out
cmps
hlt
out
cli
call
iret
fild
ret
repz
pusha
cld
mov
cmp
jg
shl
inc
add
mov
mov
mov
shl
lahf
cld
cmp
sbb
shl
retf
scas
mov
cmp
je
sbb
push
dec
or
icebp
scas
jae
inc
mov
fwait
cld
cmp
mov
cld
fidivr
mov
mov
in
fisttp
pop
sbb
outs
(bad)
jmp
jbe
(bad)
fistp
jmp
jmp
shl
xlat
(bad)
xor
pop
mov
js
pop
shl
pop
jg
std
sbb
or
jno
xchg
push
icebp
(bad)
jg
aaa
add
cmc
repz
(bad)
jmp
ficomp
lods
pop
call
mov
daa
inc
nop
out
and
lods
jle
fist
test
(bad)
icebp
cmp
into
push
add
fist
xor
or
fsub
xlat
cmp
sub
je
add
pushf
aas
cdq
leave
hlt
jnp
repnz
(bad)
cli
sub
mov
mov
sub
cmp
pop
dec
(bad)
sti
jmp
bnd
out
add
fdiv
xlat
rcr
xor
das
cmc
mov
mov
std
aas
xchg
mov
push
mov
jle
adc
cld
leave
mov
(bad)
mov
sti
xlat
retf
sti
mov
jmp
mov
(bad)
out
xlat
cli
or
pop
or
ror
jmp
adc
call
nop
add
sbb
cs
pop
aaa
clc
in
mov
fisubr
dec
jg
aas
stc
mov
push
xor
cmps
hlt
jmp
mov
mov
cmp
mov
and
xlat
daa
ficomp
(bad)
jmp
call
cld
imul
sti
cld
sbb
aas
rcr
movs
test
out
out
pop
jecxz
inc
std
cmp
(bad)
or
or
xchg
cmc
leave
lahf
inc
mov
fsqrt
or
and
xchg
outs
loope
cmps
mov
xor
mov
movq
int
cmp
push
fisubr
imul
jecxz
mov
stos
mov
pop
sahf
jmp
push
xlat
nop
pop
lock
rcr
pop
sbb
jmp
imul
aas
neg
push
gs
dec
jmp
cmp
stos
(bad)
call
lods
mov
adc
xchg
fucomip
aaa
cli
pop
mov
pop
or
xchg
call
scas
fcomp
(bad)
sbb
shr
jmp
lea
nop
dec
in
sbb
shl
scas
sti
cmp
(bad)
aas
(bad)
in
sti
mov
dec
or
xchg
int
rcr
lock
sub
dec
repnz
(bad)
lahf
cld
push
adc
fistp
and
ret
in
lock
dec
call
pop
add
(bad)
lahf
cld
and
add
jmp
xchg
std
sbb
xchg
aas
dec
push
mov
jg
loope
out
mov
neg
pop
push
es
(bad)
sbb
pushf
inc
not
in
cli
mov
dec
mov
sbb
inc
mov
pop
jle
leave
cmp
(bad)
sar
stc
idiv
pop
out
std
(bad)
jg
xchg
les
(bad)
(bad)
das
std
inc
inc
xchg
arpl
xor
(bad)
iret
mov
sar
jmp
mov
cdq
clc
std
outs
rcr
loopne
cli
(bad)
aad
std
push
jg
jnp
nop
fistp
adc
mov
xchg
fcom
stos
out
scas
xchg
pop
sub
mov
push
sbb
xchg
(bad)
cli
mov
xchg
pop
clc
rol
cmp
pushf
push
scas
jle
xor
rcl
and
pushf
pop
sti
(bad)
sar
add
jbe
js
mov
aas
(bad)
cli
jmp
push
jb
fcmovnbe
pop
mov
jecxz
cld
xor
mov
mov
out
jg
aas
mov
(bad)
cmp
addr16
std
inc
ret
jg
aaa
add
jle
imul
sub
push
mov
outs
aam
call
(bad)
adc
xor
cld
shr
inc
scas
jle
aad
xor
pop
xchg
pop
inc
cld
sbb
out
aas
cmc
sbb
fidivr
(bad)
jmp
hlt
sti
add
test
mov
mov
stc
ja
cmp
repz
inc
in
shr
inc
and
popa
mov
std
xor
daa
test
jg
jnp
lods
lds
aas
cmp
inc
sbb
test
sub
jb
add
daa
jg
push
lock
aaa
cmp
std
pop
cwde
ret
xlat
xchg
not
fnstsw
ja
xor
dec
jle
arpl
cmps
xor
rcr
pushf
shl
xchg
add
stos
(bad)
icebp
mov
int
repz
jg
imul
xor
pop
out
sti
lea
push
out
das
clc
xor
cli
repz
call
call
bound
dec
hlt
outs
hlt
leave
aas
pop
xchg
(bad)
mov
outs
dec
(bad)
(bad)
arpl
pop
and
cld
ds
iret
jns
mov
std
fnstsw
xlat
lds
dec
movs
cmp
sbb
mov
scas
(bad)
cmp
aas
int
lock
sbb
jmp
(bad)
push
dec
sbb
je
mov
outs
mov
daa
push
mov
sahf
jg
aaa
xchg
cmp
sti
lahf
std
xor
cmc
and
jl
add
ja
lock
mov
aas
call
das
std
out
mov
mov
loope
xchg
adc
mov
jge
dec
and
leave
lahf
neg
ret
dec
hlt
fistp
sbb
mov
mov
idiv
hlt
xlat
and
clc
or
mov
pop
movs
(bad)
mov
stc
(bad)
out
dec
lahf
and
jecxz
mov
int
push
cmp
jno
sbb
stc
icebp
iret
cmc
div
std
stc
mov
jmp
call
outs
mov
jg
(bad)
cvtpi2ps
dec
(bad)
pop
mov
or
pop
clc
cmp
push
pop
pop
ror
pop
mov
pop
cmps
cli
lods
jl
inc
ins
dec
lea
mov
scas
dec
shl
aad
or
cmc
daa
(bad)
fiadd
std
or
call
shr
pop
(bad)
leave
and
pop
in
cld
cld
es
mov
(bad)
rol
push
call
fist
inc
jle
cdq
ins
mov
outs
test
and
hlt
sbb
mov
mov
lods
jne
std
leave
mov
clc
mov
jmp
(bad)
pusha
mov
(bad)
sub
mov
(bad)
jmp
inc
pop
or
inc
mov
add
popa
mov
idiv
mov
mov
dec
fild
(bad)
ja
out
jg
loope
pop
call
clc
int
xchg
fbstp
mov
std
call
stc
xor
jg
mov
sub
call
(bad)
xor
pop
sub
out
or
(bad)
fndisi(8087
mov
mov
shl
add
neg
rol
jg
int
pop
sahf
inc
leave
cld
iret
out
mov
jle
adc
jmp
push
clc
adc
mov
pop
jle
cs
hlt
pop
pop
adc
dec
es
out
mov
ja
sar
cs
test
clc
int
jge
cs
sbb
(bad)
(bad)
mov
jle
inc
pop
stos
adc
xchg
or
inc
(bad)
(bad)
in
nop
pusha
push
ins
(bad)
cli
(bad)
jg
mov
push
inc
add
or
mov
das
sub
add
out
cld
leave
scas
cli
jne
inc
push
repz
add
jg
dec
std
rcr
arpl
mov
lds
scas
out
jp
retf
pop
mov
or
jge
repz
imul
fwait
pop
fdivrp
jne
sub
cld
(bad)
js
push
jmp
sbb
(bad)
clc
pop
inc
fdiv
pop
ins
jle
std
in
pop
cli
ins
js
jg
(bad)
(bad)
nop
cmps
std
lea
stc
mov
daa
jg
(bad)
cmc
cdq
sbb
adc
jmp
xlat
mul
std
push
lahf
cld
out
mov
inc
lahf
cld
xchg
sbb
fcomip
aaa
data16
ss
mov
cmps
jg
mul
ret
jg
pop
div
int3
imul
(bad)
ss
cmc
jns
mov
(bad)
repz
pop
inc
(bad)
or
(bad)
aas
stos
cmp
call
mov
jge
arpl
arpl
xchg
inc
jmp
repnz
xor
jle
call
(bad)
push
aam
out
bnd
leave
sub
mov
cmp
scas
clc
xor
gs
adc
push
xlat
rcr
cdq
cmps
dec
shr
cmp
lahf
add
repnz
outs
icebp
sbb
jge
xor
mov
jmp
scas
sar
stc
aas
cmp
jle
adc
jno
mov
mov
neg
cmps
cmp
xchg
neg
shl
push
jae
fild
and
das
and
stc
ja
pop
jle
fs
std
xlat
data16
sbb
xchg
mov
out
shl
fistp
push
clc
xchg
ins
fild
clc
push
mov
pusha
cli
pop
cld
test
mov
retf
mov
pop
arpl
imul
inc
cld
sbb
out
js
rcr
and
js
pop
in
add
mov
ja
lea
stc
xchg
and
cmp
(bad)
imul
jle
or
out
xor
pop
inc
lods
aas
(bad)
jmp
xchg
xchg
cmps
jmp
and
lahf
or
movs
push
sahf
mov
(bad)
jmp
jl
outs
int3
mov
sub
fistp
std
fwait
repz
jg
or
aas
dec
inc
fcom
(bad)
scas
(bad)
xor
mov
cli
call
sub
(bad)
bound
fwait
dec
cmc
imul
pusha
sar
ret
stc
pop
mov
cmp
mov
ret
push
adc
stc
popf
(bad)
test
and
dec
(bad)
(bad)
aas
gs
or
sahf
clc
mov
ds
cld
pop
call
arpl
inc
xchg
lock
cmc
xlat
mov
fsubrp
xchg
inc
push
(bad)
cmp
mov
arpl
mov
jae
cmps
call
(bad)
jae
(bad)
inc
(bad)
sbb
aad
xchg
repz
cli
sbb
sti
fist
cmc
fstp
dec
stc
(bad)
sbb
fcomip
not
jmp
mov
aam
repnz
std
icebp
daa
(bad)
fidivr
cmc
mov
les
mov
repz
and
cli
and
lock
sahf
xor
imul
fdivr
aaa
mov
push
cmp
mov
jg
push
repnz
hlt
ja
and
mov
cli
xchg
jle
sbb
xchg
in
pop
(bad)
pop
lods
ud0
add
mov
jmp
loop
push
inc
jns
xor
pop
jmp
(bad)
jne
aam
add
jg
cmps
bound
sbb
or
(bad)
pushf
mov
seto
mov
jecxz
test
repz
in
inc
into
(bad)
mov
fist
and
jg
std
les
sbb
dec
call
xchg
jle
mov
stos
ret
inc
clc
out
loopne
out
mov
aas
out
(bad)
in
mov
ret
mov
daa
dec
aad
enter
idiv
cmc
sbb
ss
fisubr
jle
ss
pop
js
jg
fistp
mov
stc
sbb
iret
(bad)
push
jns
int3
out
jg
imul
xchg
push
(bad)
iret
jle
leave
ret
jecxz
aas
dec
jg
fild
jg
sub
add
mov
xchg
lea
fisttp
ficomp
cmps
lea
mov
movs
lods
dec
mov
inc
ss
cmps
aas
das
int3
mov
daa
sub
das
pop
lods
mov
mov
dec
push
xchg
mov
out
sbb
lods
pushf
mov
jmp
pop
(bad)
push
fdivrp
icebp
rcl
mov
pop
dec
push
call
sub
shr
xor
(bad)
(bad)
shr
leave
pop
call
add
cmc
aas
mov
lods
pop
sti
aaa
cld
popf
cmp
jne
fist
cmp
jle
or
in
adc
iret
dec
sbb
or
loope
movs
pop
push
call
mov
jecxz
push
and
lods
pop
inc
jmp
pusha
mov
lock
jg
or
repnz
icebp
das
movs
sbb
(bad)
ss
xchg
xor
scas
inc
pusha
jg
mov
jg
outs
test
mov
in
push
std
daa
inc
test
(bad)
call
adc
aad
add
(bad)
(bad)
xlat
fs
jb
lahf
in
push
cmps
in
clc
xor
hlt
(bad)
aas
repnz
adc
call
cli
cmp
cmp
das
std
scas
cmp
push
retf
clc
movs
test
scas
repz
jecxz
adc
pop
inc
repnz
xchg
dec
clc
xchg
jg
cli
ja
sbb
popa
cli
xchg
sbb
jne
pop
into
(bad)
in
cli
pop
jle
(bad)
iret
sti
jge
stc
out
fwait
dec
(bad)
sbb
out
clc
dec
(bad)
in
and
fs
jle
dec
(bad)
(bad)
(bad)
xchg
mov
fs
scas
icebp
int
mov
sub
cld
pop
pop
mov
cdq
mov
(bad)
fbstp
mov
fcos
jecxz
(bad)
ja
aam
popf
(bad)
das
add
jmp
cli
push
aam
std
cmc
cmp
jbe
push
dec
jg
and
das
cmp
jecxz
cld
ja
lds
jg
mov
clc
aad
repz
jle
mov
adc
(bad)
hlt
neg
aas
jmp
mov
test
fisttp
jmp
sti
cpuid
fistp
std
mov
cli
in
das
cmps
(bad)
dec
dec
aam
bt
shl
jg
jge
inc
(bad)
call
fistp
(bad)
inc
aam
fbld
out
movs
iret
(bad)
jle
dec
fstp
jle
shl
mov
jg
cdq
mov
call
jmp
mov
cwde
jle
or
jmp
std
cmp
iret
push
(bad)
xor
fstp
mov
das
cld
pop
jle
fcomip
ja
jo
cmps
cli
mov
sbb
pop
mov
jmp
mov
push
clc
lahf
leave
inc
std
int
xchg
(bad)
xlat
nop
push
cdq
sub
scas
icebp
mov
(bad)
xor
sbb
nop
pusha
std
push
jmp
jle
leave
mov
call
dec
pusha
jmp
std
sbb
jge
in
and
fild
inc
call
pop
retf
mov
sti
outs
jmp
jmp
mov
cld
pop
cmps
aas
add
pop
jle
jnp
cld
ja
stc
out
cs
(bad)
xchg
jmp
aaa
inc
out
jge
outs
jmp
mov
out
repnz
daa
push
outs
dec
mov
stc
xchg
jmp
mov
out
repnz
ja
into
lahf
cld
ins
hlt
leave
push
add
sub
sub
enter
mov
repz
lahf
inc
or
aaa
sti
in
stc
sbb
xchg
popf
dec
(bad)
pop
add
cld
dec
(bad)
pop
retf
repz
scas
lock
nop
inc
xlat
das
dec
jg
xchg
dec
jle
dec
imul
mov
jecxz
lods
jno
cli
aam
and
mov
in
(bad)
mov
std
sti
lock
fucomp
repnz
mov
pusha
(bad)
out
ja
popf
cmp
jg
mov
dec
(bad)
sub
push
repz
cmp
jmp
mov
lock
clc
pop
jle
fcomip
ja
pop
jle
cli
push
pop
std
out
fldcw
js
cwde
xchg
lds
and
out
icebp
imul
stc
add
pop
retf
xor
cwde
shr
xor
stc
aaa
and
hlt
leave
scas
clc
pop
idiv
stc
lahf
or
iret
jle
(bad)
xchg
(bad)
call
stc
imul
mov
jbe
cmps
call
retf
adc
lahf
jae
jmp
stc
jno
repnz
dec
pop
mov
(bad)
xchg
mov
xchg
or
(bad)
pop
cli
sti
in
cld
leave
lahf
neg
jl
cdq
xchg
hlt
ret
mov
mov
jecxz
jecxz
cmovb
aaa
jmp
jg
ud0
(bad)
jg
mov
out
std
daa
dec
and
pop
cld
cs
push
sub
sbb
daa
push
out
repnz
fwait
(bad)
vmread
dec
mov
ficomp
lahf
cmp
sbb
sti
or
fist
leave
jecxz
stc
ja
shr
jae
pop
jl
(bad)
(bad)
cs
lahf
cld
mov
mov
test
aaa
out
and
clc
sub
in
jg
aad
idiv
std
fwait
cld
cmp
inc
test
test
cmp
add
std
sbb
(bad)
rol
and
dec
out
inc
lods
enter
cmp
mov
push
adc
hlt
fbld
dec
and
leave
scas
xlat
cmps
movs
call
jne
aas
cli
pop
std
pop
jle
fbld
push
jge
xchg
gs
mov
fldenv
in
cld
leave
outs
hlt
mov
pop
add
mov
jp
jg
dec
mov
(bad)
scas
repz
or
loope
or
ja
(bad)
rcr
and
mov
sub
adc
std
call
inc
pop
call
in
pop
push
cld
jne
add
dec
jmp
and
aad
dec
sahf
scas
jbe
out
icebp
out
outs
dec
(bad)
fdivr
mov
mov
sti
mov
daa
jge
mov
scas
rcr
mov
hlt
ja
(bad)
test
or
cdq
js
xor
lahf
mov
lods
push
(bad)
fcomp
ret
push
sti
dec
(bad)
ds
dec
iret
push
sbb
dec
jle
jnp
retf
jo
std
xor
mov
cmp
mov
int
xchg
xchg
icebp
(bad)
shl
add
pop
adc
jbe
fdivr
push
jg
cli
cmps
(bad)
cmp
xor
std
pop
add
pop
pop
ret
cli
sub
outs
repz
stc
ja
sbb
xor
jecxz
in
xchg
pop
std
dec
lock
scas
xchg
outs
(bad)
out
(bad)
lahf
enter
cld
sti
fwait
(bad)
cli
mov
(bad)
fidivr
push
jle
jg
sti
push
(bad)
pusha
(bad)
lock
cmps
mov
cwde
into
(bad)
cmp
mov
(bad)
pop
mov
les
xor
ret
jo
fisttp
ins
jg
or
mov
mov
fwait
repz
(bad)
xlat
add
std
pop
push
and
ret
dec
jg
div
clc
xchg
jmp
push
mov
mov
or
dec
cmp
jg
ins
shl
neg
dec
or
mov
outs
in
mov
jmp
fbld
mov
mov
(bad)
cmc
(bad)
adc
lods
adc
mov
hlt
call
(bad)
(bad)
cmp
out
rcr
jg
jge
ja
out
outs
call
jg
inc
loopne
jl
(bad)
(bad)
fcmovnbe
out
aas
inc
aas
jg
pop
dec
(bad)
std
push
cli
jmp
aad
icebp
cmp
lahf
les
ja
in
jg
lods
dec
(bad)
test
cld
pop
mov
sti
fwait
call
adc
lods
pop
inc
adc
shr
xor
(bad)
dec
dec
sbb
jge
mov
cmp
cmp
idiv
inc
cdq
hlt
pop
clc
xor
(bad)
xchg
call
leave
jmp
sub
mov
aad
cld
(bad)
ficomp
(bad)
rcr
pop
std
cld
fisttp
dec
retf
outs
hlt
leave
pop
neg
std
xchg
mov
push
cld
xor
sti
js
sti
mov
xor
mov
mov
std
sbb
mov
cld
cmp
ja
cs
jle
dec
(bad)
mov
outs
test
dec
mov
repz
ffreep
mov
jmp
out
pop
xor
in
cli
in
dec
icebp
(bad)
out
mov
aas
stc
mov
loop
inc
cli
jecxz
xor
repz
call
inc
fisub
jg
jg
das
cld
into
lahf
cld
mov
ret
pop
cld
cmps
cmps
push
jg
ds
mov
stc
out
iret
call
lock
idiv
jl
pop
dec
lahf
cld
add
iret
fbstp
xor
stc
adc
cmp
cli
jmp
dec
inc
shl
test
adc
xor
push
mov
cld
loopne
stc
sbb
fcomp
jle
aas
inc
les
jmp
pop
sub
jne
mov
push
dec
xchg
bound
sub
jecxz
xchg
xchg
jp
ds
ins
aas
stc
pop
jle
fcomip
mov
ins
(bad)
test
add
std
lahf
je
push
(bad)
lahf
dec
sar
inc
xchg
pop
cld
xchg
icebp
aas
sti
out
pop
adc
mov
(bad)
pop
cmps
mov
shl
dec
inc
add
sbb
pop
jle
jns
hlt
sti
aas
movs
lahf
mov
repnz
daa
hlt
jg
add
push
cli
stc
out
call
std
sbb
stos
(bad)
xchg
cmp
sti
cld
xchg
fbld
fbld
in
adc
nop
mov
mov
jmp
pusha
out
(bad)
xlat
nop
les
neg
test
aaa
mov
neg
in
jae
lahf
cld
push
hlt
(bad)
out
sti
daa
jg
pop
ror
repnz
sbb
clc
jmp
daa
call
ja
clc
sti
jl
idiv
les
mov
loop
idiv
in
mov
es
dec
(bad)
mov
ins
or
neg
jo
jg
fisttp
iret
mov
jbe
jg
pop
inc
clc
dec
scas
and
xor
shl
jg
mov
stc
pop
dec
lods
(bad)
pop
cli
xchg
xlat
or
out
jge
pop
dec
cld
jnp
and
mov
scas
cld
mov
cmp
fistp
clc
sub
mov
in
(bad)
ins
ds
das
xchg
cdq
xchg
jne
add
jg
mov
in
clc
ins
ds
addr16
dec
(bad)
test
(bad)
(bad)
loopne
pop
cmc
(bad)
ins
call
bound
pop
adc
cld
fisubr
mov
lock
xchg
jg
in
repz
jg
cmp
test
xchg
sti
jg
out
dec
jecxz
std
inc
aad
and
stc
out
xchg
xchg
sbb
sti
aam
das
daa
das
repnz
and
dec
cmps
(bad)
call
hlt
sti
out
dec
inc
pop
iret
cmps
hlt
(bad)
jg
test
hlt
call
sar
test
inc
lahf
jg
push
pop
sbb
pop
cmps
(bad)
aas
(bad)
mov
out
daa
test
cmp
mov
jge
notrack
mov
(bad)
mov
lahf
mov
(bad)
mov
hlt
(bad)
aas
or
(bad)
jg
mov
mov
hlt
repz
push
fstp
mov
(bad)
jne
add
call
xlat
hlt
call
out
dec
out
pop
dec
in
jmp
dec
lahf
std
popa
hlt
cmp
lock
cmp
clc
in
loopne
jg
mov
lods
jne
jg
pop
inc
repnz
loopne
clc
(bad)
loopne
icebp
scas
and
pop
inc
(bad)
push
rol
pop
inc
add
or
out
(bad)
call
cli
aas
xor
push
and
xchg
call
call
int3
ss
std
scas
shr
sbb
addr16
push
jg
dec
jle
out
cld
leave
push
mov
movsx
daa
jmp
out
dec
outs
repz
inc
xor
or
clc
daa
cmps
mov
mov
repz
jmp
and
clc
test
aas
hlt
imul
hlt
adc
jg
dec
(bad)
xchg
(bad)
xchg
mov
xchg
mov
dec
(bad)
into
sub
jg
mov
add
in
iret
data16
mov
stc
mov
repnz
out
and
dec
mov
add
push
(bad)
ds
aas
rcl
out
repnz
inc
jne
movs
mov
push
and
ja
aas
fadd
(bad)
cmp
fcomip
mov
sahf
ret
sbb
imul
jbe
jg
fsubr
sti
pop
jg
or
and
xor
sbb
aas
les
xor
(bad)
fisubr
and
aaa
ret
pushf
in
nop
jmp
xchg
icebp
out
repnz
dec
(bad)
std
fbld
ins
mov
leave
mov
stc
out
in
pop
shl
pop
movs
aaa
dec
idiv
bnd
and
pop
jle
(bad)
xchg
mov
dec
(bad)
in
cld
pop
out
jle
xchg
xchg
cmps
clc
or
fcomip
and
psrad
in
dec
(bad)
xlat
inc
fsub
(bad)
aam
cmp
dec
jge
xchg
mov
xchg
call
ja
out
mov
inc
cli
xlat
sbb
cld
inc
jg
stc
in
ja
stc
sti
ror
dec
sub
sbb
outs
stc
adc
stc
add
push
push
xor
(bad)
aam
xchg
call
inc
loope
out
call
jno
cmps
dec
sahf
xor
mov
cmp
aaa
out
and
inc
jmp
cmp
addr16
and
neg
jp
fisttp
pop
std
inc
clc
jmp
cli
addr16
cmps
scas
rcr
push
jg
rcr
(bad)
mov
in
inc
xor
retf
mov
adc
mov
call
sahf
dec
sbb
dec
xor
fist
push
pop
popa
popf
std
mov
aaa
dec
sbb
icebp
mov
mov
push
in
das
shr
mov
pushf
fist
push
inc
call
sbb
mov
mov
sar
cld
sbb
jne
jg
mov
dec
or
pop
bound
icebp
outs
repz
(bad)
es
test
(bad)
out
(bad)
fisttp
clc
pop
jecxz
fistp
(bad)
aaa
stc
jae
retf
fisttp
xchg
(bad)
aaa
push
cli
and
into
sub
adc
sbb
sub
sti
adc
(bad)
in
dec
loop
push
inc
cmp
pop
jg
xchg
mov
cld
mov
aaa
jo
enter
dec
(bad)
cmp
fnstsw
jne
test
scas
and
arpl
xchg
mov
pop
cld
mov
in
jg
(bad)
sub
loopne
(bad)
push
(bad)
jne
cli
or
nop
cli
xchg
jg
jae
scas
xor
repnz
fs
gs
jmp
cli
pop
add
pop
imul
scas
mov
xor
iret
inc
mov
fs
lock
call
je
fild
(bad)
mov
sti
push
and
mov
data16
aaa
rol
inc
xor
fstp
xchg
fdivrp
fnstsw
lock
test
dec
icebp
out
outs
call
les
mov
inc
(bad)
icebp
jmp
xor
(bad)
cmp
jg
test
jg
xor
mov
pop
push
fstp
loope
jns
fs
in
mov
cld
into
jg
cli
btr
or
jmp
pop
add
mov
xor
mov
stos
outs
adc
cmc
scas
icebp
xlat
xchg
ja
lahf
shr
jg
xor
pop
cmp
bnd
add
repnz
jg
cld
clc
dec
xadd
cli
or
push
call
jmp
std
std
pop
ror
fistp
sub
dec
cli
cld
dec
cmps
(bad)
jmp
out
lahf
movs
mov
sub
cmp
xchg
hlt
repz
mov
push
mov
pop
fiadd
repz
iret
cmps
hlt
repz
pop
dec
pop
sub
popf
call
sub
(bad)
call
outs
inc
out
mov
cli
stc
mov
(bad)
jmp
das
clc
sub
mov
(bad)
aaa
dec
call
xchg
out
inc
(bad)
add
mov
cmp
adc
xor
in
scas
loope
iret
scas
jle
lds
xor
and
sbb
and
inc
(bad)
das
lods
iret
std
scas
in
std
das
mov
cmp
retf
fs
mov
mov
clc
leave
mov
in
push
dec
icebp
lahf
and
(bad)
adc
adc
cli
sbb
repz
out
aas
mov
clc
dec
leave
lock
test
inc
std
daa
adc
aas
add
outs
inc
pop
hlt
outs
inc
push
jle
(bad)
mul
or
inc
stc
rol
in
pop
rcr
mov
div
enter
adc
sbb
(bad)
mov
xchg
leave
stc
std
jp
repz
cmc
sub
and
pop
mov
mov
inc
(bad)
ret
and
call
jl
xlat
adc
call
icebp
rcr
cmp
lahf
cld
mov
mov
add
fcomip
xchg
(bad)
clc
ja
in
mov
stc
xlat
jle
mov
mov
scas
stc
daa
sub
pop
jge
(bad)
dec
(bad)
imul
xchg
push
sbb
daa
jmp
jg
out
mov
and
scas
stc
leave
jg
inc
stc
dec
enter
mov
out
lock
mov
and
call
dec
sar
fwait
inc
and
movq
repz
jg
outs
dec
pop
and
mov
pop
xchg
int
dec
mov
mov
loopne
in
ins
dec
(bad)
cli
xchg
cld
sbb
idiv
inc
aad
or
call
cmp
jmp
mov
in
cli
pop
add
fadd
dec
mov
cmp
iret
inc
es
dec
jg
fcomip
ja
or
aas
xor
(bad)
jg
and
add
mov
adc
cli
mov
push
cmp
fistp
std
pop
jle
jp
inc
mov
pop
repnz
push
call
jg
push
jmp
push
mov
fnstsw
sub
es
fild
xchg
fnstsw
(bad)
jle
dec
std
ds
jle
ds
sub
repz
call
repz
pop
sar
(bad)
cmps
outs
jle
mov
les
jle
(bad)
(bad)
mov
fs
loop
dec
jg
xchg
outs
mov
sub
sbb
mov
das
daa
mov
out
fdivr
add
stc
pop
std
leave
mov
mov
or
lahf
(bad)
cmp
pushf
or
rcr
jg
jg
mov
pop
out
xlat
clc
(bad)
jg
into
mov
sbb
push
cmp
dec
lahf
adc
std
sbb
sti
mov
xor
add
pushf
(bad)
dec
addr16
(bad)
(bad)
sti
call
jle
push
mov
cmp
cli
(bad)
push
jge
ja
out
mov
call
xor
pop
test
or
jg
iret
call
(bad)
inc
push
xlat
xchg
push
xor
(bad)
pop
sub
std
sub
std
clc
sbb
cmp
mov
inc
jb
fwait
add
imul
dec
mov
push
hlt
call
std
mov
out
dec
cmps
(bad)
call
jg
(bad)
fisttp
int
jae
repnz
push
std
int
jle
and
(bad)
ja
clc
daa
repz
and
sar
or
(bad)
std
outs
std
out
add
dec
jge
das
rcl
lods
ret
fucomip
idiv
in
stc
popf
aas
stc
pop
imul
xchg
in
idiv
in
cmps
pop
popa
mov
or
jnp
stc
outs
xchg
inc
cld
jnp
repnz
(bad)
sub
lahf
cld
xor
(bad)
stc
lahf
pushf
(bad)
adc
adc
sbb
outs
sahf
and
stos
cld
mov
aas
test
jg
pop
cdq
adc
fstp
(bad)
and
mov
(bad)
push
std
dec
stos
cmp
int
std
pop
mov
cs
dec
lock
in
xchg
(bad)
out
push
test
mov
out
pop
ret
lods
ins
and
bound
aaa
cmp
pop
cmp
ds
pop
mov
cld
out
cld
push
mov
and
jge
stc
ja
mov
outs
(bad)
jmp
movs
xchg
fisttp
leave
aas
neg
jmp
leave
daa
push
das
clc
in
clc
in
sub
lock
mov
push
inc
sub
jg
cmp
xchg
scas
mov
xor
jl
psubsw
jmp
inc
std
xchg
clc
lock
std
ins
aas
stc
stos
int3
out
sbb
sti
or
stc
lahf
dec
xchg
ret
jno
pop
stc
(bad)
adc
ja
(bad)
in
in
loope
xchg
cld
jne
xchg
pop
daa
sti
pop
xor
jle
sub
outs
jbe
outs
popa
cmp
aaa
and
retf
es
sub
ffreep
cmp
mov
lock
sbb
xlat
cld
jmp
popa
or
add
xor
std
mov
cld
mov
data16
(bad)
dec
lods
jle
fild
repz
jns
repnz
dec
push
mov
iret
mov
cld
add
out
ja
inc
lahf
inc
std
cld
xchg
out
dec
outs
(bad)
cli
mov
in
aaa
mov
and
(bad)
cwde
xchg
push
jmp
xchg
mov
jg
idiv
fistp
outs
add
stc
fwait
sbb
lods
idiv
sbb
(bad)
std
pop
sbb
sbb
(bad)
aas
and
jg
xor
cld
fisubr
cli
fwait
adc
pop
inc
dec
test
add
aas
cld
imul
sub
or
jg
pop
push
(bad)
call
sar
jg
lahf
std
outs
mov
(bad)
popf
enter
gs
ja
test
in
dec
jg
into
sbb
repnz
dec
jg
xchg
loopne
mov
mov
hlt
pop
rol
jns
(bad)
(bad)
jmp
mov
xchg
(bad)
sar
dec
(bad)
sbb
div
fist
std
aaa
loopne
jge
push
jb
jg
fild
and
and
pop
lock
std
and
push
movd
clc
cs
cld
scas
add
test
stc
pop
and
imul
mov
in
(bad)
sbb
push
push
call
addr16
jg
repnz
mov
mov
inc
mov
fbstp
cli
pop
or
in
aas
popa
dec
jg
pusha
inc
xchg
mov
clc
or
shl
push
jmp
std
pop
xchg
aad
jmp
xchg
jg
not
fistp
aas
mov
hlt
jmp
mul
aaa
call
aas
jg
aas
adc
out
dec
fistp
adc
sahf
sar
dec
arpl
out
inc
(bad)
fbld
pop
dec
jg
jns
mov
fbstp
out
push
mov
xchg
rcr
adc
out
out
adc
lahf
cld
mov
mov
std
call
shl
and
jb
call
out
scas
repnz
in
enter
and
int
arpl
cli
bnd
mov
push
cmps
cwde
and
dec
ja
or
cld
adc
jmp
xchg
std
movs
mov
xchg
mov
sar
and
sti
cmps
jmp
mov
jg
xor
rcr
int3
shr
jle
outs
(bad)
cli
pop
loope
pop
adc
dec
es
and
shl
sub
stc
xchg
enter
daa
sbb
xchg
mov
out
inc
int
aas
stc
ja
mov
repz
inc
or
repz
mov
in
ds
jecxz
in
mov
bound
retf
mov
pop
and
sbb
std
(bad)
xchg
cwde
in
ja
jns
jno
in
setle
(bad)
(bad)
cmovle
jb
pop
psraw
jg
fcomip
aaa
clc
pop
push
sbb
jg
pop
aam
pop
xor
mov
cld
arpl
and
imul
or
or
mov
xor
call
fild
into
sub
dec
mov
dec
jg
into
bnd
add
shl
idiv
in
xchg
sbb
or
aas
inc
ss
mov
jbe
pop
mov
(bad)
jg
sbb
cs
xchg
popa
mov
pop
ret
scas
call
mov
mov
out
repnz
bound
dec
and
arpl
cmp
add
sti
jecxz
xchg
jg
cmp
mov
pop
int
(bad)
xchg
sbb
xchg
add
mov
xchg
xchg
jmp
leave
xchg
push
dec
aas
stc
repz
sub
pop
mov
adc
mov
sub
mov
push
mov
or
or
xchg
notrack
fst
or
popa
pushf
cmp
mul
out
xor
(bad)
into
ja
jg
jp
mul
icebp
mov
or
sub
std
sahf
xor
aas
test
cmc
cmp
(bad)
clc
jmp
xchg
jg
sbb
push
inc
(bad)
push
or
xchg
sar
in
xlat
adc
std
adc
dec
and
mov
daa
pop
dec
inc
ds
std
xchg
dec
retf
jge
ret
sar
mov
mov
pop
push
ret
(bad)
shl
hlt
dec
aas
jmp
hlt
xchg
jg
add
and
fnstsw
aaa
cli
dec
jle
fnstsw
idiv
(bad)
enter
pop
hlt
jmp
inc
pop
cld
adc
(bad)
sbb
jbe
(bad)
lea
cmc
fldcw
add
dec
(bad)
mov
leave
scas
push
out
repnz
dec
mov
mov
adc
icebp
jg
lahf
mov
sub
popa
leave
mov
xchg
jg
sbb
loopne
mov
mov
jne
mov
xchg
cmps
pop
jg
scas
sar
sti
adc
sti
mov
xchg
push
clc
test
fstp
dec
jp
ja
jne
sub
or
stc
(bad)
jg
mov
cli
std
xor
out
cmp
sti
pushf
(bad)
jg
out
lahf
shl
sar
ret
jmp
or
sar
(bad)
inc
(bad)
sti
call
aaa
lahf
shl
iret
call
and
jg
std
cld
xchg
call
dec
(bad)
jmp
notrack
out
dec
push
call
cmps
mov
jne
add
xchg
xor
ret
cli
push
or
cli
inc
sbb
cpuid
(bad)
dec
xchg
(bad)
jb
aas
xor
scas
icebp
mov
call
sub
adc
mov
sub
outs
cli
mov
cli
aaa
loop
retf
es
stc
fwait
cmps
jg
sbb
cs
and
stos
rol
clc
sti
mov
xor
popa
out
outs
dec
sub
jg
dec
(bad)
cmp
mov
sub
aas
stc
jae
loope
lds
inc
inc
ins
repz
das
cmp
ret
cli
pusha
and
(bad)
pusha
sbb
loopne
jnp
icebp
mov
fucomip
loopne
push
cld
pop
(bad)
fsubr
inc
enter
les
sub
mov
mov
dec
int3
fsubrp
clc
imul
cmp
and
std
sbb
sub
loopne
std
in
ds
gs
mov
mov
test
xlat
jg
cs
mov
xchg
xor
jmp
test
stc
sbb
lahf
loopne
and
xchg
hlt
cmpps
inc
mov
adc
xchg
ror
dec
dec
pop
or
inc
sbb
dec
cmps
dec
mov
shr
pop
cli
adc
(bad)
fstp
xlat
dec
cld
xor
loop
movs
mov
clc
sub
das
clc
in
stc
popf
ds
and
pop
xor
das
(bad)
sub
cli
xchg
pop
repnz
push
sub
imul
(bad)
aas
stc
ja
add
fstp
(bad)
jg
loope
mov
mov
or
out
xlat
stc
mov
(bad)
idiv
cmc
js
rcr
mov
jo
std
test
mov
jl
mov
lds
xor
fistp
jg
xchg
mov
mov
retf
jle
call
jl
js
jmp
out
repz
xor
cld
not
sbb
or
retf
jg
cmps
repnz
sti
lods
jle
fild
pop
xchg
cmps
inc
sub
(bad)
sbb
aam
dec
out
inc
test
stos
mov
hlt
aaa
movs
jg
call
or
in
inc
mov
xor
mov
retf
fild
std
in
jle
movs
xor
hlt
inc
and
xchg
sti
cmp
mov
jno
std
out
repnz
xor
sub
pop
adc
outs
jl
inc
popf
inc
xchg
jmp
sbb
mov
jmp
out
les
add
mov
mov
in
dec
std
mov
sub
movq
pop
(bad)
pop
xchg
xchg
loopne
mov
cld
es
cli
mov
xor
mov
jae
test
cmc
or
or
pushf
(bad)
clc
xor
js
pop
out
mov
stc
das
(bad)
sbb
jmp
les
sbb
cmp
dec
add
xor
jg
(bad)
aaa
cli
int
mov
lods
fcomip
aaa
clc
in
dec
ret
call
mov
dec
lahf
pop
stc
fnsave
neg
push
pushf
mov
icebp
cmp
das
mov
push
jb
sub
lahf
xchg
cmp
mov
repz
aaa
fbld
push
aad
fcomip
(bad)
daa
mov
imul
call
add
ds
sub
popf
pop
rcr
std
imul
out
stc
call
cld
fist
das
lods
or
dec
std
aad
push
inc
jmp
mov
std
dec
hlt
xchg
movs
or
adc
int3
pop
mov
sbb
add
ds
ins
rcr
mov
and
call
movs
push
(bad)
mov
jo
or
fbld
std
jmp
sub
in
sar
hlt
fcomp
clc
mov
cli
or
pop
xor
dec
pop
(bad)
std
leave
jmp
xchg
fild
std
mov
dec
push
cmp
clc
sub
cmps
jg
inc
push
fnstcw
jg
lods
jle
hlt
pop
stc
adc
(bad)
js
mov
aas
cmc
xlat
icebp
mov
cli
fwait
mov
rcr
adc
hlt
jmp
or
out
aaa
mov
xchg
in
dec
sbb
shr
shr
xor
stc
jmp
out
push
xchg
cmps
pop
or
repnz
adc
stos
js
and
iret
ror
xchg
jae
xchg
nop
jle
push
sbb
lock
pop
add
std
mov
(bad)
out
mov
(bad)
cmp
test
and
mov
push
test
dec
(bad)
dec
movs
(bad)
call
mov
cmp
cli
jmp
call
mul
call
jle
(bad)
mov
xchg
in
mov
sbb
jmp
cli
addr16
(bad)
mov
cli
in
xlat
adc
loope
jmp
cmp
push
jmp
out
loope
jmp
dec
pop
pop
shl
xchg
jg
mov
cmp
(bad)
mov
(bad)
jg
rol
lahf
cld
ret
aam
lahf
loop
dec
fdivr
(bad)
mov
push
mov
pop
mov
call
stc
aas
mov
pop
inc
and
push
std
lahf
and
jg
call
mov
pop
jle
scas
add
pop
std
add
jle
int
std
mov
jo
call
imul
shl
dec
iret
lock
jg
jns
push
sar
cmc
daa
jmp
mov
stc
push
jg
leave
cld
repz
xchg
jg
push
out
imul
fisttp
cmp
into
fild
jge
inc
mov
das
dec
test
mov
sbb
inc
jb
idiv
je
dec
(bad)
pop
pop
nop
pushf
std
out
jmp
mov
mov
dec
les
in
dec
rcr
adc
jno
sbb
rol
fisubr
mov
dec
sahf
dec
inc
(bad)
jmp
mov
cmp
cld
imul
dec
pop
push
ss
test
(bad)
hlt
call
scas
sub
mov
movs
aaa
fdivrp
in
sub
mov
and
jle
push
div
or
or
imul
ror
stc
fistp
outs
enter
daa
shl
jg
ds
mov
cmp
(bad)
cld
xchg
xchg
cld
(bad)
xchg
pop
std
in
movs
pop
(bad)
xchg
sar
xchg
jmp
mov
out
lock
jo
fisttp
mov
idiv
ds
cld
adc
hlt
rcl
repnz
ret
jb
cwde
mov
pop
in
movs
adc
mov
(bad)
pop
test
dec
das
cld
in
inc
jno
in
and
call
fmul
sub
mov
dec
dec
loope
(bad)
ds
cld
xchg
aam
das
loope
mov
pop
cli
repnz
push
and
push
repz
loope
jg
daa
popf
xchg
pushf
jg
out
mov
out
xlat
das
clc
in
clc
sbb
inc
mov
xor
std
xchg
mov
call
stos
in
fistp
adc
mov
jg
ret
jg
(bad)
xor
push
outs
stos
mov
pop
mov
cld
jecxz
scas
dec
sbb
cmp
(bad)
or
cld
jnp
in
pop
test
or
addr16
iret
mov
pop
sar
pop
das
dec
pop
std
push
call
scas
idiv
icebp
gs
sub
mov
out
out
add
loopne
mov
mov
daa
jae
add
lock
sub
jmp
loope
call
push
mov
push
or
pop
cld
std
jmp
aas
xchg
xor
pop
add
out
ja
sub
ja
add
inc
(bad)
inc
jle
rol
and
and
sti
pushf
(bad)
call
call
cld
outs
mov
mov
adc
(bad)
jg
fcomip
aaa
sti
popf
jle
fucomip
xchg
mov
xor
mov
popa
ret
dec
(bad)
aas
mov
leave
xchg
cli
popf
push
(bad)
pushf
mov
jg
dec
mov
cld
scas
mov
enter
les
mov
cld
or
fadd
idiv
in
jle
fnstsw
mov
push
cdq
fbld
std
xchg
jns
pop
cld
ds
pop
dec
into
or
dec
mov
adc
enter
push
(bad)
xlat
dec
cs
(bad)
cli
fstp
retf
dec
mov
outs
inc
push
pop
xchg
clc
dec
or
adc
cld
in
mov
pop
cld
and
test
jg
mov
xchg
push
cld
pop
lods
mov
scas
cld
loop
(bad)
idiv
dec
(bad)
jecxz
sahf
sbb
pop
xchg
mov
push
sar
jg
add
cmp
or
cli
pop
mov
jmp
ret
iret
mov
inc
xor
push
jg
cli
daa
std
sbb
loopne
mov
enter
mov
jg
aas
inc
(bad)
fild
clc
int
add
retf
pop
inc
sahf
dec
(bad)
call
mov
lods
(bad)
mov
sub
mov
mov
pop
jge
sar
or
mov
ss
adc
pop
std
ss
sub
in
(bad)
ins
sub
lock
adc
pop
dec
jmp
add
(bad)
pop
or
fwait
hlt
(bad)
jmp
xlat
xchg
lds
cmp
in
scas
sti
imul
lock
xor
xchg
(bad)
das
jp
(bad)
fdivrp
aaa
call
loop
es
inc
hlt
sti
pop
inc
aas
jg
or
clc
(bad)
pop
dec
(bad)
push
out
fistp
and
mov
sar
dec
mov
in
push
hlt
(bad)
fist
jp
sar
(bad)
mov
(bad)
jnp
out
sub
cld
add
jle
sar
std
jge
fistp
ins
(bad)
ja
call
std
mov
fwait
push
mov
(bad)
mov
cld
mov
aas
vpmacsdqh
pop
hlt
std
pop
dec
mov
outs
dec
test
sub
inc
ins
pop
ror
jg
mov
sar
call
sti
add
jno
call
neg
mov
(bad)
mov
(bad)
mov
jae
das
call
fyl2x
pop
mov
pop
std
cs
adc
xlat
call
mov
into
data16
jmp
and
cld
xchg
(bad)
mov
loop
sar
push
cli
call
inc
(bad)
popa
cli
(bad)
aas
dec
(bad)
push
or
(bad)
jmp
sub
adc
hlt
or
mov
std
push
gs
jg
dec
(bad)
jnp
enter
push
mov
inc
std
in
jg
mov
retf
out
cld
push
mov
stos
(bad)
jle
dec
inc
adc
cld
leave
mov
repz
lahf
cld
in
aaa
stc
mov
out
mov
sti
jl
addr16
jbe
cld
imul
mov
ja
jno
test
stc
jae
into
shr
aas
jle
xor
or
jle
sub
(bad)
addr16
aas
mov
ja
mov
outs
jecxz
outs
jbe
mov
nop
outs
test
sbb
(bad)
daa
(bad)
ds
mov
mov
pop
aas
xchg
pop
sbb
jnp
cld
push
cmp
and
in
adc
mov
adc
xlat
ret
cmps
loop
(bad)
mov
sub
nop
jg
xor
retf
inc
call
ja
xchg
pop
std
lods
jle
loope
arpl
and
pop
ret
in
leave
mov
xor
aam
jmp
lods
xor
jg
add
fbld
(bad)
stc
mov
in
clc
pop
(bad)
lahf
cld
aaa
mov
or
std
daa
inc
xor
xchg
jg
ja
clc
leave
mov
hlt
mov
jae
aad
ret
cmps
jmp
into
cli
mov
movs
aas
scas
ret
std
fisttp
push
jmp
ds
or
pop
lock
lahf
sti
cmp
std
cmp
shl
jg
mov
ja
push
sar
xor
lods
inc
cdq
add
lahf
cld
fwait
call
adc
cmp
inc
jmp
mov
int
pop
dec
jg
mov
jg
scas
add
cli
retf
dec
hlt
(bad)
aaa
sbb
jg
arpl
pop
push
sbb
iret
daa
mov
ins
jb
push
jg
idiv
out
mov
cld
and
xchg
pop
cli
pop
repz
fsub
pop
dec
(bad)
ja
jecxz
cld
jge
into
fdivr
les
or
(bad)
sar
pop
add
inc
hlt
loope
ja
cmp
shr
js
pop
jecxz
outs
jp
fwait
cld
fistp
clc
or
mov
jl
(bad)
div
push
add
xchg
fcomip
dec
dec
(bad)
fdivr
shl
mov
popf
(bad)
mov
jmp
xchg
cld
push
mov
mov
jo
mov
inc
jnp
test
adc
call
cmps
sbb
adc
fistp
or
iret
ret
push
mov
cld
leave
mov
adc
imul
mov
in
xlat
imul
cmp
xor
cld
jnp
mov
icebp
sub
fisttp
in
movs
(bad)
mov
repnz
test
sbb
(bad)
out
pushf
ins
stc
mov
scas
(bad)
sar
ja
jg
and
and
outs
stc
sbb
xchg
mov
test
inc
mov
sbb
jmp
cli
push
leave
retf
xor
lahf
cli
fwait
(bad)
mov
std
cs
push
jbe
jg
(bad)
dec
(bad)
pop
dec
inc
mov
xchg
cmps
clc
jmp
sbb
cmps
jns
cli
inc
js
aaa
cli
in
jg
mov
ja
std
jg
pop
das
std
xchg
outs
mov
fucomi
pop
inc
imul
jmp
(bad)
mov
(bad)
rcl
pop
jp
jle
cmp
mov
jmp
push
into
push
sub
mov
movs
mov
mov
add
push
mov
inc
ja
jge
std
out
ins
(bad)
(bad)
mov
sbb
clc
std
inc
in
pop
adc
lods
push
add
stc
cmps
cmps
mov
(bad)
(bad)
outs
(bad)
jmp
cs
ja
ins
imul
fistp
loop
or
icebp
(bad)
outs
jmp
cli
lahf
push
rcl
lock
fs
(bad)
outs
mov
dec
(bad)
pop
jle
or
push
pop
cli
jne
mov
(bad)
jmp
out
cmc
aaa
dec
idiv
int
in
idiv
push
xor
fwait
jle
pop
sti
int
mov
int
out
(bad)
aaa
clc
(bad)
lahf
call
pop
(bad)
(bad)
fldenv
movs
aas
stc
test
sar
fstp
js
sti
fsub
aas
arpl
add
push
mov
in
push
mov
lock
jg
push
jmp
ret
pop
les
repz
jg
(bad)
jle
fild
repz
aas
jg
(bad)
(bad)
sub
aaa
mov
in
call
mov
(bad)
stc
mov
mov
jg
xlat
aaa
or
jg
fcom
(bad)
push
and
or
pop
push
ret
and
jmp
aaa
test
mov
jmp
or
inc
cli
jecxz
je
cli
pop
call
aad
mov
sub
dec
rcr
push
jle
pop
pop
fbld
and
out
stc
imul
int3
cmp
cmp
pop
inc
js
hlt
repz
cmps
mov
addr16
lahf
pusha
cmp
out
inc
(bad)
dec
jmp
int
inc
lahf
sbb
fistp
std
(bad)
out
std
cmp
push
mov
lahf
cmps
lahf
mov
mov
test
dec
out
mov
pop
inc
(bad)
into
hlt
fstp
dec
jg
cmps
hlt
std
out
clc
jmp
je
sbb
loope
cmps
stc
jae
test
sub
sti
(bad)
jmp
mov
and
(bad)
inc
mov
fucomip
xlat
jo
iret
call
(bad)
scas
and
arpl
(bad)
out
inc
(bad)
aas
stc
xor
imul
stc
in
xlat
adc
clc
mov
(bad)
jg
std
dec
(bad)
jmp
fild
inc
(bad)
jmp
std
(bad)
fbld
push
(bad)
leave
push
fs
fs
jp
xor
iret
test
cmc
sbb
inc
push
mov
pop
xchg
movs
mov
repnz
cld
cs
stc
ja
xchg
(bad)
xchg
jg
cld
popf
jg
mov
in
movs
dec
in
movs
sub
mov
xor
add
loop
out
sbb
pop
and
cld
xor
dec
mov
inc
loopne
imul
mov
adc
call
not
movd
jmp
into
inc
push
push
shl
bound
sbb
repz
sub
ret
jecxz
jle
add
or
div
jecxz
cmp
(bad)
(bad)
fucomip
loopne
ret
sar
pop
inc
cld
push
(bad)
repnz
mov
retf
scas
stos
sub
scas
fwait
aad
aas
push
push
shl
movs
cld
push
hlt
jg
jmp
out
clc
in
adc
jae
xlat
nop
mov
jno
pop
cld
sbb
sbb
cmp
pop
leave
cli
jmp
mov
(bad)
aas
rcl
sar
fwait
jmp
mov
dec
jle
adc
retf
sbb
mov
sub
xchg
hlt
cmpps
jecxz
sar
mov
std
mov
out
xchg
(bad)
ds
cld
lods
mov
fisttp
dec
lock
push
mov
ret
jmp
inc
das
std
test
xchg
(bad)
lock
jmp
xchg
data16
pop
mov
(bad)
daa
adc
lahf
xor
lahf
cmc
ja
xchg
mov
out
clc
add
mov
sti
aas
or
in
clc
sbb
fstp
xchg
xor
jmp
not
jb
jle
dec
mov
fnstenv
test
imul
fistp
cld
ds
jecxz
cmp
fwait
(bad)
mov
sub
mov
sbb
sub
leave
retf
push
repz
lds
cmc
fistp
xchg
pusha
inc
stos
(bad)
cli
(bad)
xor
pop
sub
mov
cld
mov
repnz
(bad)
out
inc
neg
call
pop
sub
dec
sahf
cld
cmps
lahf
cld
push
mov
repnz
icebp
jp
push
bnd
push
sar
jle
frstor
cld
pop
pusha
outs
cli
inc
nop
xchg
call
xchg
sar
add
jp
xchg
dec
call
out
aas
xor
ds
jmp
stos
fcomip
ja
xor
outs
and
jge
icebp
int3
lods
push
aad
cdq
jmp
call
push
stc
mov
and
lods
and
test
cmp
test
into
(bad)
mov
dec
nop
out
fadd
and
xchg
mov
lods
dec
or
aas
clc
mov
std
ja
jmp
aas
cmc
xlat
cli
mov
(bad)
cld
fistp
and
clc
lea
(bad)
sbb
hlt
cmp
or
add
adc
jg
aaa
clc
mov
mov
call
and
leave
loopne
int
pop
clc
ds
sti
lahf
call
xchg
adc
push
std
fild
cmps
jg
movs
sbb
fbld
(bad)
sub
add
or
dec
std
es
outs
add
loope
icebp
ja
out
lahf
call
sti
jg
push
jmp
imul
movs
cmp
les
mov
out
adc
std
fistp
leave
mov
aaa
cmps
(bad)
aas
mov
std
imul
pop
push
dec
js
push
mov
jmp
lods
sti
(bad)
mov
aas
jg
cli
or
jae
add
hlt
jg
fdivr
scas
and
(bad)
out
mov
pop
hlt
cmp
jg
leave
paddb
cld
outs
mov
dec
mov
mov
pop
xchg
jle
lods
imul
icebp
shl
bound
(bad)
fsubr
mov
(bad)
sbb
ret
(bad)
xor
hlt
jmp
mov
movs
(bad)
jg
mov
imul
cmps
jg
mov
xor
xlat
clc
and
lods
(bad)
and
pushf
mov
xchg
pop
dec
mov
daa
and
hlt
repz
xor
clc
ins
leave
imul
inc
stos
push
push
fucomi
repnz
ficomp
(bad)
mov
fs
pop
adc
mov
outs
and
aaa
xchg
popa
stc
jmp
inc
sub
(bad)
pop
sub
stc
dec
sub
dec
sub
stc
(bad)
lock
dec
sar
push
lock
mov
mov
mov
gs
cmc
imul
in
call
mov
fwait
jo
imul
mov
lahf
rcl
(bad)
adc
ret
inc
nop
sti
cld
popf
aas
stc
adc
outs
inc
sbb
aaa
mov
mov
fild
mov
dec
out
repnz
xchg
dec
stc
push
jle
sub
sar
add
call
(bad)
mov
scas
stos
in
cmp
mov
outs
jle
fwait
out
mov
stc
sbb
stc
ja
pop
pop
and
(bad)
mov
and
aas
ins
mov
fneni(8087
mov
sbb
and
lock
and
mul
js
(bad)
jge
mov
xchg
das
add
test
fild
arpl
mov
(bad)
(bad)
in
movs
push
dec
inc
inc
jb
jns
test
out
gs
in
(bad)
psubw
cld
mov
xchg
stc
int
jle
sbb
hlt
or
dec
dec
inc
pop
mov
jg
fwait
push
add
cmp
aas
mov
jg
rcl
mov
inc
addr16
mov
mov
pop
dec
jmp
xchg
(bad)
test
push
repz
aas
out
xlat
add
sbb
pop
pusha
dec
lahf
ficom
lock
xor
jmp
je
push
fnstsw
fbld
aaa
bound
inc
aas
idiv
shl
(bad)
outs
dec
lods
icebp
cmps
sbb
call
pop
push
(bad)
pop
or
xlat
int3
xchg
and
inc
sbb
inc
popf
jg
pop
div
(bad)
out
int3
pop
lea
mov
(bad)
clc
in
cmps
dec
jle
outs
mov
or
fucomip
xlat
in
shr
std
mov
jmp
(bad)
call
hlt
(bad)
(bad)
clc
xlat
adc
out
jle
icebp
mov
jg
cld
cmp
(bad)
cli
hlt
jg
jg
std
test
cld
aad
repz
mov
jle
jle
sbb
mov
xlat
push
(bad)
in
fisttp
ins
mov
clc
sti
mov
mov
call
fbld
call
(bad)
call
cld
repz
dec
hlt
addr16
aas
jmp
and
or
ror
(bad)
fld
mov
loopne
or
in
pusha
or
popf
pop
ret
cmp
(bad)
jle
pop
or
movs
call
fcomip
jp
aam
inc
call
sbb
scas
jg
leave
sub
out
sub
inc
mov
stc
dec
jle
and
aas
stc
lahf
dec
stos
std
ja
into
(bad)
stos
(bad)
xchg
call
xor
sbb
sub
or
xchg
jecxz
and
dec
mov
(bad)
fidiv
(bad)
pop
dec
(bad)
lock
dec
scas
loop
dec
jp
iret
(bad)
pop
ds
in
cmps
pop
in
dec
outs
in
dec
stos
test
in
adc
ror
pusha
gs
sti
dec
dec
jmp
fisttp
sbb
mov
out
out
clc
imul
stc
(bad)
scas
and
push
dec
(bad)
xor
lahf
pop
fs
cmp
stos
jmp
cld
arpl
xchg
loop
das
dec
mov
daa
mov
and
jp
not
(bad)
cmps
mov
jmp
(bad)
leave
aas
dec
push
xchg
in
dec
dec
add
xchg
sar
jg
mov
mov
call
movs
xchg
cwde
leave
cmp
mov
inc
xor
lods
(bad)
sub
in
inc
cmp
lahf
cld
jmp
jmp
mov
call
(bad)
outs
clc
in
es
push
mov
(bad)
out
mov
and
iret
movs
test
inc
adc
cmps
cmps
jg
pop
or
clc
pop
inc
add
mov
scas
mov
sti
sbb
xchg
sbb
test
push
(bad)
aaa
mov
jg
mov
ja
lahf
dec
(bad)
cmp
sub
(bad)
fisubr
add
repz
dec
sahf
mov
call
add
add
(bad)
adc
out
iret
cmp
lahf
loop
call
loope
call
push
add
cli
popf
pop
push
mov
out
jmp
pop
add
sub
jle
fisttp
push
mov
mov
or
jns
jg
pop
retf
ja
dec
(bad)
in
in
inc
cld
dec
aam
test
test
dec
cmp
clc
jmp
cwde
dec
clc
outs
lock
(bad)
jle
mov
xchg
mov
fwait
aas
cdq
fnsave
(bad)
in
mov
call
mov
out
stc
loop
inc
in
test
in
mov
sti
cld
push
cmp
or
mov
sub
adc
aaa
adc
lods
(bad)
sbb
sbb
push
or
ja
ud0
pop
leave
add
sbb
scas
retf
push
inc
push
pop
(bad)
cmp
dec
jae
(bad)
pop
adc
mov
dec
test
jmp
sbb
inc
or
outs
dec
sbb
cmp
repnz
jg
leave
inc
cld
add
dec
cmp
pop
call
(bad)
jmp
(bad)
call
push
je
jle
xchg
shld
cld
fld
call
cmp
shl
jmp
cwde
xchg
addr16
cwde
ds
mov
stos
sar
(bad)
jle
icebp
mov
xor
test
fistp
push
in
call
fldenv
pop
push
push
cld
sbb
inc
test
fbstp
xchg
and
xor
call
stos
lock
repz
mov
cld
mov
jmp
outs
add
scas
sub
dec
ret
out
repnz
cmps
aam
xchg
dec
(bad)
push
push
idiv
dec
fdivr
into
and
mov
nop
pop
popf
fist
jg
in
push
das
sbb
out
sub
pusha
stc
jg
retf
cmp
xchg
mov
int3
cdq
dec
(bad)
cmp
outs
mov
mov
sbb
cmc
cld
int
and
mov
or
(bad)
imul
pop
inc
mov
and
daa
hlt
call
call
sti
ja
mov
loop
xchg
xlat
test
mov
das
xor
fistp
(bad)
cld
mov
(bad)
lock
test
rcr
cmp
jle
dec
(bad)
(bad)
sahf
push
sahf
jle
hlt
out
arpl
mov
inc
lahf
std
and
push
cmp
in
ja
push
(bad)
in
mov
xchg
sar
xor
push
outs
test
cmp
int
stc
dec
jle
push
out
and
repz
nop
das
scas
out
jge
jmp
leave
jg
js
fbld
stc
and
dec
hlt
not
sbb
mov
ud0
pop
aam
dec
push
out
sti
popf
test
pusha
dec
mov
mov
cmc
fwait
cmps
jg
(bad)
mov
inc
jg
sub
(bad)
cli
nop
mov
(bad)
xchg
jg
imul
xchg
inc
mov
inc
lods
aad
dec
sbb
idiv
xchg
aam
mov
jecxz
jns
cmp
dec
jmp
cld
ja
in
push
sar
dec
stc
arpl
idiv
xchg
jp
jmp
mov
pop
cmc
lahf
ins
mov
int
repnz
adc
outs
cmps
cmp
lahf
test
adc
repz
movs
mov
push
pop
lock
lahf
bound
in
mov
pop
jg
cmps
xchg
xchg
inc
jle
into
ret
in
cld
out
divps
add
dec
adc
jmp
jae
dec
fbld
pop
jle
cdq
test
std
xlat
add
(bad)
fcomp
aaa
and
test
xchg
aas
mov
div
je
addr16
dec
mov
jmp
adc
xchg
dec
mov
das
std
mov
hlt
aaa
adc
mov
(bad)
out
jmp
jg
nop
jg
cli
(bad)
mov
mov
add
(bad)
call
hlt
(bad)
aas
out
xlat
xchg
hlt
out
aas
inc
(bad)
out
(bad)
scas
cmps
mov
jmp
and
(bad)
jmp
shl
jg
std
(bad)
out
movs
(bad)
call
hlt
jg
push
stos
icebp
add
jmp
std
call
mov
(bad)
repz
dec
mov
hlt
daa
imul
xor
(bad)
fsubr
lea
imul
cmp
sbb
sbb
adc
in
scas
loope
retf
xchg
pop
sar
pop
cli
aas
xor
pop
addr16
int
jae
add
push
clc
fist
repz
cld
xchg
jg
push
clc
stos
add
mov
test
(bad)
data16
(bad)
out
add
retf
outs
dec
imul
xchg
xor
add
add
in
dec
in
std
xor
arpl
mov
fs
jle
and
mov
xor
aaa
sub
pop
arpl
sub
pop
push
sub
fld
leave
dec
popa
mov
cmps
inc
push
jmp
cli
loop
pusha
ins
(bad)
data16
sti
lahf
and
repnz
xchg
dec
sti
psrlw
push
clc
fwait
cmps
jg
enter
fsub
scas
and
mov
mov
dec
inc
(bad)
out
aad
cli
pop
sub
out
imul
out
sbb
aaa
(bad)
jmp
retf
loop
stc
in
(bad)
popf
aas
stc
daa
jle
dec
(bad)
push
add
(bad)
sti
call
or
hlt
ja
inc
sbb
imul
cmp
aam
scas
std
jmp
mov
iret
fisttp
leave
mov
cld
or
popf
stos
fild
and
int
mov
test
out
repz
mov
cld
sti
and
es
int
fild
push
(bad)
mov
xor
lock
xlat
jle
aaa
das
inc
pop
sar
out
call
pop
xchg
(bad)
adc
pop
sar
pop
sub
jb
mov
retf
daa
mov
aas
sbb
add
inc
mov
call
scas
das
imul
mov
stc
add
fsubr
mov
mov
pop
repnz
mov
inc
mov
cld
pop
lods
pop
(bad)
out
shl
add
sub
hlt
imul
push
mov
mov
sbb
jne
movs
outs
push
shl
mov
int
dec
idiv
ds
xor
xchg
call
shr
test
scas
icebp
addr16
pop
rcr
jmp
std
cld
int
push
hlt
cmp
ror
add
cmp
dec
sbb
outs
dec
imul
daa
jg
jns
mov
xor
fcomip
xlat
nop
les
int3
icebp
shr
out
sar
or
xchg
leave
daa
ret
retf
daa
(bad)
fucomp
inc
push
stc
int
fisttp
mov
mov
cmp
or
out
ja
sub
push
add
popa
cmp
pop
mov
cmp
pop
push
cld
fcmovbe
and
pop
add
add
loop
movs
(bad)
dec
xor
sub
push
clc
int
test
outs
jle
dec
dec
inc
mov
adc
loopne
cmp
imul
pop
nop
cdq
sti
ins
imul
lea
cld
test
and
sbb
mov
inc
loopne
jle
dec
(bad)
push
sbb
outs
mov
clc
(bad)
sar
inc
mov
cli
mov
jle
(bad)
fcmovu
fild
and
pop
mov
mov
jns
mov
(bad)
(bad)
repz
nop
inc
mov
call
(bad)
stc
pop
dec
jl
mov
jbe
adc
push
out
mov
dec
call
psubsw
arpl
stc
mov
inc
jle
leave
pop
shr
dec
inc
cli
std
cmp
arpl
sbb
mov
jle
mov
dec
cld
pop
mov
inc
out
fdivrp
enter
loopne
cmps
dec
ja
pop
mov
std
sbb
ret
mov
sbb
aam
stc
imul
aas
std
xor
call
inc
loopne
cmps
(bad)
(bad)
std
hlt
(bad)
jg
(bad)
dec
sar
jg
xchg
pusha
jmp
mov
pop
adc
dec
xchg
or
mov
jbe
sti
jl
out
std
jbe
push
push
lahf
int3
leave
cmp
outs
sub
dec
mov
movs
jg
cli
inc
icebp
pop
jg
mov
test
stc
dec
jle
dec
inc
lods
ret
icebp
(bad)
push
call
adc
outs
jg
sub
(bad)
mov
mov
ins
pop
or
pop
jl
sub
lock
sbb
(bad)
outs
jae
add
jle
es
push
repnz
sub
btc
mov
mov
or
xchg
mov
movs
jmp
iret
jle
dec
pop
inc
scas
and
cdq
or
aas
push
out
repnz
bound
nop
pushf
std
popf
ds
pop
leave
icebp
std
outs
jmp
(bad)
jmp
sub
cs
std
add
leave
jmp
lahf
cld
xchg
loop
std
addr16
out
and
out
mov
jmp
cld
aad
sub
dec
call
in
stc
jge
out
pop
enter
bound
dec
dec
hlt
mov
in
cli
popf
aas
stc
test
xor
inc
jmp
jg
dec
(bad)
mov
not
test
fistp
cmp
jbe
in
pop
add
jb
(bad)
in
jp
adc
pop
jle
sub
std
push
in
sbb
and
retf
jbe
xchg
in
jg
(bad)
cwde
sub
mov
cwde
out
dec
out
es
ss
aas
js
dec
lock
popa
sbb
xlat
pop
daa
movs
iret
movs
loope
scas
or
hlt
mov
ds
ja
pop
pop
jnp
jno
fnstsw
into
and
imul
xchg
jg
mov
loopne
cdq
jmp
lea
scas
stc
xor
scas
cmps
inc
xor
push
cli
ins
adc
aas
les
pop
cwde
mov
pop
jle
lods
fist
sbb
sub
repz
xbegin
out
out
stc
xor
inc
xor
sbb
dec
sbb
(bad)
mov
(bad)
jmp
std
adc
(bad)
(bad)
cmc
fistp
lods
repnz
shl
out
in
out
movntq
dec
gs
out
cs
mov
inc
(bad)
cmp
mov
cld
idiv
jmp
movs
(bad)
fcmovnu
cdq
pop
mov
call
mov
into
scas
icebp
mov
pop
(bad)
int
pop
icebp
pop
dec
add
call
fwait
hlt
(bad)
inc
push
(bad)
and
enter
fwait
jle
cli
in
dec
stc
mov
cdq
jecxz
mov
rcr
push
(bad)
aas
sti
mov
scas
or
cli
daa
sar
call
cli
call
stc
imul
pop
push
out
dec
out
lods
mov
sub
xchg
(bad)
pop
xchg
pop
clc
int
push
jmp
xchg
pushf
icebp
out
mov
inc
jge
dec
(bad)
inc
(bad)
jg
pusha
(bad)
call
mov
mov
lds
add
repnz
repnz
inc
in
pop
in
(bad)
mov
and
adc
sti
mov
xor
inc
call
jle
dec
push
sbb
(bad)
xlat
jo
mov
jmp
cmps
(bad)
dec
(bad)
aas
xchg
(bad)
call
cli
(bad)
fild
call
xor
ins
rol
mov
call
cmp
push
cmps
nop
sti
in
cld
cmp
aam
jmp
jmp
stos
(bad)
pop
cli
loopne
lahf
cld
leave
aas
idiv
push
div
mov
push
jp
(bad)
jecxz
jmp
std
scas
loope
mov
jl
pop
std
push
xchg
leave
std
in
aas
stc
mov
sar
push
mov
jl
(bad)
adc
pop
enter
mov
call
(bad)
outs
jnp
xchg
xor
fisttp
lahf
std
inc
pop
ffreep
(bad)
(bad)
loopne
jle
jb
push
jne
inc
cld
in
cmp
icebp
jnp
leave
jmp
mov
je
out
repnz
(bad)
ss
data16
sti
jmp
push
aam
mov
jg
dec
pop
sbb
shl
mov
push
adc
sub
inc
or
cwde
cmp
call
mov
push
call
jmp
fwait
movs
jnp
(bad)
daa
jmp
std
not
lahf
cld
adc
fild
ret
fild
std
or
mov
or
popf
mov
xchg
cmp
cdq
ret
cli
aaa
mov
hlt
mov
fsub
jns
dec
inc
jl
call
aas
xchg
dec
ds
leave
cmp
jg
outs
inc
(bad)
es
cld
push
mov
out
lock
idiv
in
xor
daa
jmp
das
add
mov
and
in
add
mov
xor
stos
dec
dec
jle
std
(bad)
cmp
sub
fild
cld
dec
enter
jle
mov
jmp
jmp
xchg
and
fisttp
mov
loop
pop
cli
call
int
pop
lea
cmp
pop
repz
mov
sti
idiv
mov
jmp
out
add
hlt
in
fstp
in
pop
mov
add
nop
shl
in
in
(bad)
fucomip
loop
std
xchg
add
bound
jg
pop
inc
cli
aaa
std
call
mov
fsubr
repnz
push
ja
xor
jae
dec
mov
shl
(bad)
xchg
jg
je
aaa
jg
cdq
or
pushf
push
mov
repz
test
cwde
cld
jno
sub
test
cmc
ja
out
loop
xor
cli
cmp
leave
mov
and
fbstp
xlat
std
xor
mov
sbb
sub
mov
jecxz
call
jns
retf
scas
movs
(bad)
(bad)
(bad)
(bad)
push
xlat
xchg
movs
std
call
icebp
xlat
push
cmp
outs
std
call
pop
cmps
(bad)
inc
hlt
sti
imul
push
push
pop
rcr
pmaddwd
scas
sub
rcr
xor
std
test
jg
cli
sti
iret
stc
mov
iret
mov
outs
hlt
cmp
xchg
or
scas
mov
pushf
cmc
daa
cmp
and
icebp
scas
rcr
aas
mov
dec
fsubp
or
xchg
cld
ss
arpl
stc
xchg
sar
xlat
add
mov
push
and
jg
into
into
mov
loopne
dec
(bad)
gs
loope
sahf
xor
aas
dec
push
int3
aas
dec
xchg
aam
mov
loopne
stc
in
cmps
push
(bad)
(bad)
fstp
push
(bad)
imul
popf
aas
stc
imul
cli
sub
dec
(bad)
xor
cmc
je
daa
jg
call
je
and
or
aas
ins
popa
ds
jae
shr
lea
cli
in
adc
jecxz
push
fs
lock
lahf
jecxz
dec
sbb
sar
stc
ja
xchg
je
outs
dec
mov
cmps
xchg
mov
aas
dec
arpl
pop
js
mov
shr
(bad)
(bad)
inc
xchg
scas
jg
jmp
cmp
inc
sti
xor
cmc
repnz
inc
dec
inc
xchg
sbb
lea
lds
push
jg
cmp
aad
(bad)
cli
scas
add
inc
aas
rcl
daa
mov
sti
leave
fcomip
cmp
xlat
dec
lahf
cld
xor
cmc
in
call
outs
jmp
mov
add
xchg
pop
mov
mov
sub
push
cld
push
jmp
xchg
aaa
shl
cli
push
sbb
leave
dec
int3
inc
xor
mov
mov
mov
(bad)
cmp
mov
jg
mov
stc
retf
cmp
xchg
sar
cld
jbe
and
scas
retf
mov
xchg
add
jae
in
adc
fcmovnbe
inc
call
cli
pop
adc
jg
xchg
popf
fnstsw
mov
add
(bad)
(bad)
aas
sbb
js
das
xchg
mov
out
add
leave
mov
into
shr
aaa
adc
cmc
cwde
daa
loope
gs
sub
adc
movs
out
addr16
data16
hlt
not
push
jg
fistp
hlt
das
loopne
call
xor
(bad)
pop
jle
fild
enter
pop
(bad)
(bad)
call
std
(bad)
lods
pop
lock
(bad)
push
mov
fwait
call
xchg
rcr
adc
aas
cmp
mov
push
mov
outs
dec
mov
out
jg
jge
repnz
xchg
pop
pop
repnz
shr
sbb
fild
(bad)
sti
cld
xchg
mov
outs
(bad)
fwait
jo
ret
mov
adc
cld
into
scas
loope
and
int3
fucomip
mov
shl
xchg
cmps
adc
fistp
in
movs
popa
mov
icebp
leave
mov
scas
cld
mov
jmp
sub
stos
push
inc
pushf
mov
rol
cmp
jecxz
inc
ret
cli
mov
jmp
pop
das
stc
xchg
jns
loope
std
push
mov
movs
dec
jg
push
iret
jg
cli
xchg
repnz
jmp
outs
sti
leave
aas
inc
mov
dec
cdq
cmp
mov
sti
shl
pop
movs
inc
call
add
cmp
push
cmc
sar
xchg
cmc
ret
(bad)
ja
pop
add
mov
out
pop
push
sbb
std
sbb
gs
mov
jp
add
jl
outs
ror
dec
call
std
cld
cmp
hlt
jg
sub
fist
jmp
xor
icebp
aas
clc
xlat
adc
cli
daa
jmp
jge
addr16
pop
loop
inc
cli
cs
scas
icebp
xlat
shl
adc
std
jg
jne
(bad)
scas
cmps
(bad)
push
cli
in
xlat
mov
and
cmp
std
mov
sti
aas
dec
(bad)
(bad)
jnp
idiv
(bad)
call
cli
stc
das
in
jno
mov
les
or
jecxz
mov
pop
(bad)
sbb
mov
pop
je
pop
sar
dec
jle
leave
mul
mov
sti
sar
dec
cli
push
scas
and
or
mov
call
sar
jmp
cli
aas
mov
mov
xchg
fbld
lahf
clc
jge
stc
pop
leave
push
inc
push
loope
(bad)
in
call
mov
call
std
outs
dec
dec
xlat
hlt
dec
in
(bad)
sub
cmps
(bad)
xor
(bad)
(bad)
(bad)
jmp
fucomip
cmps
ds
fstp
lods
stc
movs
adc
in
jg
dec
(bad)
jb
hlt
iret
jecxz
pop
push
(bad)
jge
stc
shr
retf
mov
out
repz
pop
cmc
mov
idiv
sbb
push
icebp
mov
sbb
fmul
daa
cmps
inc
fidivr
clc
add
icebp
out
jp
sti
loopne
fist
leave
jbe
idiv
cmp
xchg
mov
jp
ret
repnz
xchg
stc
cmp
aad
mov
pop
jg
mov
(bad)
mov
push
inc
jmp
inc
mov
inc
call
add
dec
mul
leave
scas
clc
ins
sub
neg
(bad)
out
aaa
popa
push
sbb
clc
lahf
cld
mov
xchg
fisttp
inc
cli
out
xchg
mov
add
inc
or
mov
loop
mov
mov
retf
les
and
mov
dec
dec
into
jg
xchg
sti
shr
and
test
mov
jns
cs
push
jp
sub
xchg
mov
leave
outs
dec
dec
adc
dec
scas
pop
jecxz
aas
fidivr
out
cmp
jle
sti
sbb
arpl
inc
ds
aas
cwde
(bad)
dec
inc
(bad)
movs
fwait
imul
inc
mov
(bad)
xor
jecxz
cld
pop
(bad)
mov
xchg
inc
mul
aaa
push
xchg
and
std
aaa
ds
aas
adc
pop
jg
or
clc
repnz
and
loop
std
icebp
daa
repz
mov
push
mov
stc
lahf
popf
daa
cli
mov
outs
std
ds
jg
or
or
jmp
jae
iret
mov
sahf
std
call
and
cmps
mov
pop
mov
cmc
fs
or
out
pusha
je
(bad)
out
push
pusha
or
repz
fbld
or
and
xchg
or
sub
jle
push
imul
repz
fbld
pop
pop
mov
out
sbb
jg
cmp
mov
outs
hlt
mov
jb
lahf
inc
outs
lods
fmul
rcr
jmp
mov
neg
sti
or
(bad)
cmp
sbb
out
jle
out
icebp
dec
push
cmp
ja
jecxz
xor
push
loop
imul
sbb
cdq
bnd
scas
mov
stc
popf
gs
jle
hlt
punpckldq
mov
push
in
mov
xlat
gs
mov
aas
stc
jnp
or
(bad)
fild
jge
pop
addr16
repz
sub
pop
hlt
sti
aas
inc
(bad)
(bad)
aas
jmp
inc
xor
rcr
das
jle
pop
inc
test
std
(bad)
jle
leave
mov
iret
mov
cli
sti
sti
aam
dec
cmps
lahf
jg
std
jg
jle
mov
jb
mov
jg
mov
mov
pop
cli
jmp
pop
dec
ficomp
(bad)
jg
pop
push
repnz
rcr
sar
xchg
dec
neg
std
es
addr16
mov
out
dec
xchg
and
xchg
shr
xor
and
sub
jg
imul
pop
inc
mov
pop
mov
scas
and
xchg
aas
nop
(bad)
jmp
add
dec
jns
(bad)
loopne
pusha
(bad)
sti
dec
es
cli
dec
jg
in
int3
jp
cmp
(bad)
mov
in
cli
pop
jle
dec
(bad)
xor
lea
daa
xchg
add
fdivrp
arpl
add
mov
xlat
rol
jmp
sub
jmp
addr16
cld
leave
lahf
inc
push
rcr
fwait
jmp
mov
cld
mov
loope
push
in
xchg
jnp
call
loop
pop
js
sti
inc
fwait
xor
cli
cmps
cmps
push
lahf
int
dec
std
sbb
jns
pop
push
jmp
xor
cmp
stc
iret
dec
inc
out
pop
imul
idiv
sti
and
mov
test
out
xchg
mov
jle
pop
gs
add
fwait
cld
(bad)
loopne
fcomip
ja
nop
ds
pop
jle
cld
outs
ret
movlps
sbb
jbe
cld
pop
mov
or
mov
push
jmp
js
lea
ds
cmps
mov
(bad)
fisttp
jg
loop
inc
div
cmp
pop
icebp
leave
jg
cmp
push
sub
out
adc
sub
jle
mov
pop
mov
loop
aam
and
mov
cld
sbb
mov
xchg
aas
stc
mov
mov
mov
sar
and
pop
sbb
sbb
fild
in
(bad)
imul
fsubp
inc
jns
push
hlt
jg
(bad)
cmp
jge
dec
stc
lea
xor
adc
aas
jle
sub
out
outs
stc
daa
cmps
jg
div
ss
(bad)
pop
shl
(bad)
jg
cli
lahf
(bad)
sbb
jg
scas
inc
or
outs
(bad)
push
mov
add
pop
pop
pop
jg
leave
popa
mov
repz
jae
push
mov
shr
xchg
push
scas
stos
ds
in
(bad)
xor
cmc
outs
sti
xor
lea
lahf
cli
or
pop
mov
xor
out
cmps
xor
push
ffreep
lods
sti
(bad)
icebp
pop
pop
cmp
ja
jmp
hlt
pop
push
call
cmps
jg
jecxz
scas
cld
into
pusha
or
shr
xor
mov
xchg
mov
sbb
sbb
xlat
pop
call
sahf
mov
cli
mov
out
(bad)
cmps
pop
retf
adc
(bad)
fbstp
sbb
pop
out
add
and
shr
scas
sub
adc
jmp
ja
cmc
scas
and
js
inc
cli
dec
jle
add
outs
(bad)
sti
jg
jmp
and
std
scas
shl
call
xchg
sub
xchg
mov
aas
jmp
imul
fistp
dec
(bad)
fbld
stc
lahf
jmp
int3
jg
in
neg
(bad)
xchg
mov
shr
dec
frstor
sti
lods
(bad)
in
lahf
data16
inc
jg
into
cmp
fwait
sbb
popf
jle
xchg
dec
clc
mov
call
aas
dec
call
(bad)
jg
std
mov
cli
call
sti
imul
into
pop
pop
(bad)
mov
sar
dec
in
aaa
(bad)
inc
pop
xor
mov
dec
mov
movs
push
loope
std
ds
cld
out
retf
(bad)
jg
pop
push
jecxz
xchg
call
jg
dec
clc
sti
ja
adc
repnz
dec
dec
xchg
add
in
retf
out
inc
sbb
call
(bad)
in
ds
jae
jo
pop
call
dec
shl
xlat
nop
push
jg
jne
xchg
xchg
lods
loop
inc
jmp
add
jg
jbe
jg
in
jle
push
retf
jae
cmp
test
gs
lds
jg
aad
mov
cmc
sar
ud0
lahf
jbe
adc
stc
fwait
sub
lods
(bad)
jle
push
movs
fbld
xchg
movs
clc
cli
aaa
cmp
mov
xchg
mov
sub
inc
jno
jg
retf
das
xchg
mov
dec
mov
call
frndint
dec
ror
fidivr
inc
cmp
lock
jg
outs
inc
or
outs
repz
(bad)
mov
mov
cld
mov
in
clc
add
dec
std
das
dec
pop
std
cmps
mov
lds
repnz
call
adc
loop
mov
mov
icebp
out
in
sti
sbb
stos
aas
xor
jl
int3
push
loopne
xchg
jle
dec
aas
mov
adc
xor
push
cdq
repz
in
and
fld
aas
cdq
xchg
das
and
lahf
mov
mov
cmc
xchg
pop
mov
(bad)
fiadd
jge
fist
div
cmp
xchg
mov
(bad)
sub
jmp
jp
lahf
fs
je
cmp
fnstsw
aas
std
aas
(bad)
push
mov
cli
push
cmp
jnp
leave
scas
stc
jg
xor
in
cld
cs
call
out
xor
pop
stc
mov
stc
ja
cmp
or
push
aaa
(bad)
cmp
adc
and
not
mov
into
outs
lock
inc
mov
mov
out
sti
fstp
inc
sahf
shr
jns
pop
inc
call
jg
jecxz
sub
lahf
lods
sbb
mov
jle
inc
mov
fimul
adc
and
mov
out
mov
push
jg
cli
das
loope
dec
inc
jne
repnz
fs
adc
test
pop
cld
mov
icebp
sbb
call
push
mov
sar
jle
pop
dec
js
aas
mov
dec
(bad)
(bad)
mov
aas
sbb
push
mov
mov
loopne
jp
cli
sbb
fistp
repz
lahf
push
scas
sub
sar
jg
push
adc
mov
movs
and
addr16
lahf
shl
aas
repz
ja
cli
in
adc
call
das
retf
push
mov
mov
jge
jecxz
stos
adc
(bad)
fcmovnbe
(bad)
jg
mov
scas
loope
push
shl
xchg
and
push
cli
jg
(bad)
inc
inc
add
scas
icebp
xlat
call
shr
xchg
sub
iret
mov
daa
dec
pop
std
daa
inc
jle
stc
daa
push
ss
dec
call
scas
pop
std
fisub
jle
dec
(bad)
and
sbb
jge
mov
mov
mov
mov
cld
leave
lahf
inc
pop
jle
daa
jae
sti
idiv
in
cmps
aas
mov
xchg
dec
pop
mov
mov
xchg
fdiv
ja
faddp
out
(bad)
dec
jg
sbb
jle
jbe
scas
and
imul
call
xor
pusha
sbb
loop
lock
(bad)
adc
das
jle
dec
(bad)
ds
push
pop
ret
sbb
(bad)
inc
mov
inc
scas
and
not
inc
sar
mov
mov
sti
jns
call
leave
mov
xor
mov
stc
xlat
int
in
icebp
sti
(bad)
jns
cmc
leave
aas
cld
fist
loopne
es
icebp
fcmovu
dec
cmp
jl
mov
cli
pop
jle
sbb
mov
mov
in
std
popf
les
sbb
jp
mov
mov
or
out
mov
fistp
xchg
fmul
dec
mov
js
(bad)
or
xchg
cmps
in
aaa
movs
imul
jle
dec
(bad)
jle
cld
daa
(bad)
in
dec
loop
cld
mov
inc
stc
sub
(bad)
movs
xchg
dec
stc
or
xchg
sar
sbb
xor
pop
retf
mov
jle
push
cli
sub
push
jmp
adc
inc
aas
sub
outs
std
leave
mov
out
movs
jmp
mov
fdivrp
pop
jle
fistp
int3
sbb
sbb
push
pop
cmp
dec
dec
ss
out
or
imul
cmc
mov
dec
jmp
nop
add
push
hlt
cld
dec
lock
(bad)
imul
jmp
mov
loopne
repnz
xchg
dec
std
jmp
rol
pop
arpl
push
iret
push
add
jg
stos
jecxz
xchg
aam
rcl
cmp
jmp
cmps
in
cmp
and
sub
int
xchg
jge
xor
jge
stos
jns
in
jae
jg
sar
mov
out
loop
or
dec
dec
push
mov
pop
pusha
mov
mov
call
lea
xchg
pop
cld
cmps
cmps
jg
jg
pop
(bad)
movs
pop
call
adc
ja
std
jg
adc
ret
dec
std
out
retf
(bad)
mov
mov
call
sahf
movs
shr
pushf
fist
fisub
(bad)
mov
dec
iret
std
xchg
hlt
(bad)
aas
mov
push
jmp
push
pop
xchg
jle
shl
std
(bad)
cmps
sar
jg
std
push
xlat
sar
jbe
fbld
sti
lahf
repnz
jmp
(bad)
imul
das
shr
jge
inc
shr
addr16
(bad)
(bad)
cmp
push
cmps
iret
jle
jmp
ja
pop
std
cmp
call
cmc
dec
mov
add
repz
xor
cld
sbb
arpl
pop
cld
fisubr
mov
pop
jg
xlat
nop
aam
sti
imul
(bad)
movs
sbb
jp
mov
in
cld
into
xchg
mov
dec
dec
iret
dec
movs
addr16
test
jg
out
mov
shr
mov
sbb
inc
xor
mov
and
xor
xchg
mov
imul
repnz
pop
rcr
jg
jge
outs
out
(bad)
xchg
mov
std
repz
dec
in
lahf
inc
jg
mov
jg
(bad)
pop
imul
loopne
pusha
je
imul
out
jae
xor
call
jmp
sbb
ja
inc
std
or
or
sub
pop
cld
xor
stc
adc
test
mov
fcomi
sub
sub
shl
icebp
scas
and
add
jmp
(bad)
out
dec
(bad)
jg
jmp
xor
stc
shl
clc
sbb
shl
add
div
adc
mov
gs
dec
adc
jmp
(bad)
(bad)
lahf
and
(bad)
lahf
and
inc
jbe
pop
and
iret
daa
jg
lods
cmp
or
lea
sbb
ja
test
cli
addr16
adc
xchg
or
inc
mov
and
mov
dec
push
cld
in
int3
in
xchg
push
(bad)
in
jmp
or
shr
popa
(bad)
stc
(bad)
and
in
loope
cmp
inc
push
clc
fstp
out
shl
lds
mov
ds
pop
js
(bad)
adc
out
repnz
cs
jg
test
dec
(bad)
lods
mov
cmp
call
mov
pusha
pop
push
or
mov
(bad)
scas
in
sub
out
cld
lea
(bad)
push
push
pop
(bad)
sti
call
inc
fninit
(bad)
jg
btc
jmp
test
and
leave
outs
stc
jmp
add
pop
jg
sbb
dec
(bad)
mov
clc
sti
ja
pop
loop
dec
jg
(bad)
(bad)
in
ja
cld
push
rcr
imul
mov
or
retf
cmps
xor
push
pop
sar
pop
das
cmp
retf
cdq
xchg
icebp
ja
call
hlt
(bad)
bound
mov
arpl
shl
pop
retf
stc
add
clc
int
aaa
mov
lock
cs
leave
aaa
and
dec
retf
push
cmp
fucomip
xchg
call
dec
jns
xchg
dec
dec
sub
scas
dec
scas
mov
fild
imul
mov
mov
(bad)
in
(bad)
js
lahf
jb
lods
cmp
jecxz
xor
clc
aaa
or
mov
out
scas
sar
inc
hlt
(bad)
sbb
loop
ret
mov
jmp
jl
imul
xchg
xor
xchg
mov
test
jmp
outs
adc
pop
shr
outs
jmp
hlt
sti
out
dec
(bad)
push
out
out
xchg
jl
jg
(bad)
jg
lahf
std
test
(bad)
mov
(bad)
pop
loop
pop
sar
jg
jp
sbb
call
sar
cmps
jmp
fild
stc
add
adc
cmp
and
inc
pop
retf
out
out
scas
and
sbb
fisttp
lds
(bad)
call
jg
std
jmp
push
cmc
(bad)
(bad)
sbb
dec
(bad)
sar
mov
inc
lods
cld
(bad)
aam
push
mov
adc
sub
jg
mov
add
rcl
jle
pop
xor
sti
test
cmp
jg
out
cld
jnp
repnz
adc
jg
ror
test
lods
sub
fstp
out
mov
adc
das
and
repz
call
sti
sbb
shl
jg
add
push
outs
pop
out
test
sar
xlat
rol
ror
cld
scas
pop
pop
loop
das
cmp
mov
gs
into
je
pop
loop
jnp
daa
jmp
pop
arpl
outs
adc
std
lea
mov
inc
xchg
icebp
mov
enter
cld
sbb
or
imul
push
aaa
loope
repnz
(bad)
popf
mov
retf
inc
add
dec
mov
cmps
fistp
mov
cmp
std
dec
push
adc
xchg
jg
movs
dec
jg
xor
aaa
mov
ret
sbb
(bad)
cs
adc
pop
mov
call
sub
adc
cmp
or
(bad)
cs
mov
or
cmc
jp
gs
and
lods
jle
fild
lods
cmp
sub
inc
mov
jp
sbb
stos
into
(bad)
push
leave
push
pop
std
in
cwde
test
cmp
add
push
xchg
call
xlat
test
mov
(bad)
std
xor
movs
or
std
aas
js
jg
jecxz
std
ja
inc
pop
sbb
push
xor
pop
inc
pop
std
test
hlt
inc
push
mov
jecxz
fisttp
mov
jg
fcomip
ja
sub
call
cli
mov
pop
cld
into
mov
fst
pop
mov
into
out
out
loopne
xor
(bad)
mov
cmp
mov
lock
cmp
xchg
jg
ins
add
std
pop
fcos
scas
mov
add
dec
fldln2
(bad)
das
jle
add
or
fbld
repz
jg
dec
mov
ss
(bad)
mov
fmul
cmc
sub
xor
and
(bad)
ja
pop
call
out
mov
aad
cld
xlat
pusha
mov
and
out
inc
aas
jg
inc
mov
jne
(bad)
(bad)
cmp
fldenv
aas
(bad)
call
fbld
repz
stc
mov
pop
std
inc
jle
shr
or
jnp
std
mov
xor
lock
sti
shl
(bad)
mov
jmp
dec
call
jg
(bad)
out
stc
aas
dec
aas
fistp
je
jb
js
mov
das
sbb
(bad)
jae
jg
jge
mov
test
neg
nop
dec
clc
call
push
std
lahf
jl
into
sub
imul
sub
jmp
sar
scas
jle
icebp
jbe
mov
loope
sti
in
(bad)
pop
mov
or
push
mov
xor
idiv
dec
(bad)
ins
bound
test
xchg
pop
clc
jnp
repnz
xchg
movs
(bad)
push
loop
and
das
jns
jg
das
clc
in
xor
icebp
mov
sar
or
ds
xchg
jg
(bad)
idiv
in
and
sti
(bad)
rcl
iret
pop
dec
fistp
stos
and
jmp
pop
jg
ret
fnstsw
pop
repz
neg
fist
mov
imul
cmp
aad
and
jbe
xlat
or
aad
pop
ret
cmp
jbe
mov
neg
mov
out
sahf
fdivr
fcomip
xchg
inc
(bad)
popf
fisttp
pop
or
repnz
rcl
jo
(bad)
in
in
out
inc
inc
test
dec
mov
inc
out
and
push
call
adc
fist
cmp
(bad)
fidivr
mov
push
call
or
xchg
cmp
adc
dec
stc
add
clc
xchg
mov
push
(bad)
ss
jns
div
(bad)
jmp
hlt
lahf
loope
(bad)
xchg
fcomip
xchg
aas
icebp
ja
in
sti
add
bound
adc
jle
xlat
cli
inc
mov
jg
(bad)
sbb
shr
outs
shl
(bad)
sbb
cld
xchg
cmp
jns
pop
int3
stc
arpl
loopne
popa
stc
retf
mov
cld
in
outs
inc
stos
hlt
enter
lods
cdq
pop
dec
jnp
jp
loopne
repnz
add
or
cld
daa
dec
cld
sbb
ja
das
jg
cli
repnz
(bad)
xchg
adc
scas
xchg
call
lahf
push
cmp
jg
ds
call
repnz
mov
mov
hlt
daa
jmp
mov
mov
fisubr
inc
cmp
mov
jg
lahf
cli
jge
in
xchg
fild
cld
leave
repnz
call
mov
std
(bad)
mov
jle
jp
pop
(bad)
cld
lods
mov
sub
fisttp
jo
sub
cmp
aas
xor
cmps
out
push
xor
jns
mov
push
shr
ja
xchg
jg
fist
out
in
ret
jecxz
cs
dec
ret
jb
push
cld
sbb
mov
pushf
cmps
std
cmc
xlat
mov
loop
jp
(bad)
push
jg
outs
(bad)
sti
cmp
retf
scas
std
imul
mov
mov
aaa
adc
jp
push
hlt
sbb
or
scas
and
lahf
imul
dec
std
(bad)
out
push
std
call
mov
cli
std
daa
jmp
fistp
cli
std
xor
stc
mov
idiv
scas
and
je
cli
jg
mov
jb
inc
mov
sbb
in
sti
pop
cld
imul
std
imul
mov
(bad)
cmp
hlt
aaa
shr
jg
scas
and
(bad)
mov
aaa
mov
mov
pusha
popf
aad
inc
mov
xor
fcomip
loopne
test
std
cmc
cmp
cld
sbb
adc
cmp
hlt
xlat
adc
stc
pop
cli
jg
dec
jmp
mov
cmps
(bad)
(bad)
fxtract
jg
int
jecxz
movs
jmp
dec
aas
xor
cmp
call
data16
out
pusha
add
aaa
mov
aaa
cli
popf
dec
(bad)
cld
inc
in
(bad)
jnp
(bad)
(bad)
pop
mov
push
stos
inc
lahf
leave
jg
movs
lods
cli
outs
repz
fisttp
mov
std
fstp
mov
pop
dec
(bad)
lds
mov
cld
stc
add
sti
in
sbb
test
push
push
repz
pop
jle
not
sar
sti
sbb
jo
jle
or
jl
lock
ret
pop
(bad)
loopne
(bad)
ds
inc
cwde
cld
mov
pop
cli
dec
in
jg
idiv
clc
add
rol
lahf
jle
pop
pusha
mov
cmc
jmp
cld
sub
ds
out
ret
std
xor
jp
xlat
jo
jmp
hlt
(bad)
jmp
add
repnz
cld
lahf
mov
outs
dec
aam
push
or
mov
ds
dec
sub
push
mov
stc
sti
nop
retf
js
(bad)
cmps
jle
(bad)
add
adc
jmp
mov
jge
dec
loope
retf
dec
into
std
outs
inc
stc
rcr
cwde
inc
mov
cld
in
sar
dec
cld
add
stc
outs
pusha
repnz
xor
fisttp
popa
cli
stc
addr16
inc
call
sbb
cmps
add
xchg
dec
std
scas
jle
mov
(bad)
cld
jnp
xchg
inc
(bad)
aaa
nop
hlt
jmp
mov
stc
mov
jg
jmp
or
lahf
repnz
stc
arpl
xchg
sub
lea
cld
sbb
push
sub
lea
fcomip
idiv
clc
std
in
sub
call
lahf
call
xchg
sahf
xor
retf
add
adc
jg
or
jg
sbb
call
sub
(bad)
ins
in
pop
pop
lahf
or
retf
outs
repz
cmps
push
dec
bound
cdq
neg
pop
cmc
ja
(bad)
sub
lock
std
xchg
push
cmp
fisttp
sar
cmp
icebp
sbb
cld
jns
mov
test
mov
xor
inc
adc
cld
fild
sahf
adc
pop
fwait
adc
imul
imul
cmp
mov
out
inc
jle
hlt
pcmpgtb
cwde
mov
jmp
lock
(bad)
push
(bad)
neg
rcr
es
(bad)
call
lds
jg
lahf
int
lock
mov
or
and
cs
cli
retf
stc
lea
imul
stos
(bad)
ja
xor
std
pop
jg
fwait
inc
inc
sti
xor
mov
retf
popf
pop
xchg
mov
sti
sbb
jle
rcr
(bad)
inc
std
outs
sar
jmp
dec
fbld
xchg
test
fist
sub
cmp
xor
jle
inc
hlt
repz
(bad)
dec
rcl
outs
stc
jmp
repnz
mov
(bad)
mov
lahf
cld
or
push
sub
inc
dec
dec
mov
pop
inc
jl
push
cli
dec
(bad)
(bad)
(bad)
jg
cli
(bad)
out
mov
repz
xlat
aas
inc
call
in
outs
mov
mov
(bad)
arpl
inc
cmp
pop
sti
pop
mov
iret
imul
jle
out
jl
jmp
aas
inc
stos
mov
(bad)
(bad)
aaa
push
loop
adc
scas
add
call
jmp
retf
into
mov
jg
das
std
pop
nop
test
out
aaa
cmps
(bad)
xor
mov
out
movs
das
jle
pop
mov
popf
add
aas
pop
dec
sti
aaa
and
dec
retf
pop
inc
cmp
fistp
cld
ja
jle
push
mov
out
fwait
sbb
mov
mov
mov
add
out
hlt
fbld
das
sbb
jnp
jg
cmp
dec
(bad)
inc
sti
sbb
fild
out
(bad)
in
mov
(bad)
cli
pop
mov
shr
repnz
retf
xchg
ret
jmp
clc
aas
icebp
loope
iret
inc
cmp
sahf
test
out
xor
inc
push
loop
test
mov
shl
sti
or
jmp
or
xor
pop
mov
or
sub
jmp
call
dec
js
sahf
pop
push
dec
pop
test
(bad)
fs
jg
mov
test
jl
inc
clc
xchg
call
xor
mov
outs
test
dec
(bad)
aam
shl
mov
xor
cli
xlat
cmp
xor
std
push
mov
mov
daa
repnz
cmp
repz
add
add
(bad)
lahf
std
ins
push
in
mov
out
out
mov
and
shr
pop
jecxz
pop
dec
xchg
add
arpl
jmp
std
scas
mov
mov
jmp
(bad)
cmp
mov
std
leave
jmp
movs
mov
cli
pop
(bad)
cwde
mov
dec
xchg
jg
ja
lea
or
jmp
enter
lock
ror
repz
fist
mov
hlt
and
mov
jnp
int
dec
or
push
in
fist
js
in
push
cld
into
add
sub
and
aaa
rcr
iret
daa
push
out
jg
jns
jg
xchg
push
sub
int
pop
dec
clc
push
dec
push
lahf
pop
pop
(bad)
(bad)
xchg
push
and
retf
pop
out
aaa
push
dec
leave
sar
lock
sub
mov
mov
(bad)
cmp
out
stc
sbb
aaa
adc
in
stc
in
cld
sbb
xchg
jmp
sahf
(bad)
push
adc
shr
jmp
and
out
pop
mov
not
scas
lds
stos
sahf
inc
mov
mov
pop
push
xchg
cmps
jg
std
cld
retf
jmp
adc
iret
nop
pop
clc
jnp
ja
pop
dec
or
add
out
pop
cmp
in
sub
lock
cmp
movs
jg
xor
popa
sti
in
or
es
das
and
loopne
and
push
inc
xchg
jge
test
(bad)
jle
dec
fstp
imul
jg
imul
ss
rol
ja
mov
pop
std
push
sub
mov
pop
cld
push
lahf
cld
cmps
mov
push
movs
add
jmp
xlat
add
std
stos
push
sar
in
cld
jecxz
or
cld
pop
mov
das
clc
in
stc
sbb
jnp
push
pushf
aas
cdq
push
push
pcmpeqb
daa
xor
push
and
sub
cmps
sbb
icebp
lahf
dec
retf
scas
mov
push
jle
inc
addr16
xor
leave
loopne
dec
sbb
into
fsubr
pcmpgtw
clc
in
or
std
push
mov
jmp
jnp
pop
cmp
mov
push
xchg
stc
dec
mov
cdq
neg
clc
sbb
stc
arpl
into
dec
(bad)
in
dec
loope
std
ja
or
pop
inc
(bad)
(bad)
clc
cmp
jmp
pop
mov
cli
aaa
inc
fdiv
cmp
popa
shl
enter
cld
sbb
cmps
fcomp
pop
(bad)
push
and
ss
cli
or
sti
sub
and
lock
out
xlat
xchg
or
jg
jns
das
shr
(bad)
cmp
cld
jne
sub
dec
push
test
pop
fsub
jg
xlat
adc
stc
fild
das
and
out
scas
dec
pop
fsub
dec
and
hlt
int
sub
popa
jle
xlat
adc
cld
push
call
xlat
nop
adc
xor
xor
rcr
les
mov
jge
int3
adc
adc
adc
(bad)
inc
dec
aaa
pop
xchg
aas
cmp
pop
cwde
xchg
add
pop
std
leave
mov
jecxz
shl
dec
xor
mov
test
fcomip
fist
icebp
sbb
cs
adc
jg
outs
(bad)
sbb
or
jg
(bad)
enter
xchg
int3
in
add
cld
lods
ret
adc
icebp
(bad)
jmp
dec
add
lods
popa
das
mov
pop
std
pop
in
xor
or
cld
leave
mov
fisttp
or
out
jecxz
inc
(bad)
jecxz
test
pop
mov
div
out
or
jp
int3
scas
sub
mov
cld
out
pusha
cmp
xlat
(bad)
jne
aas
call
mov
test
iret
scas
pop
dec
idiv
dec
push
lods
sbb
cmp
cmp
cmps
push
bound
push
leave
xchg
aaa
jg
js
pop
mov
pop
push
cld
mov
push
jmp
ja
(bad)
mov
test
add
clc
dec
jmp
(bad)
mov
std
cld
aaa
movs
iret
dec
in
mov
(bad)
mov
cmps
push
push
aas
jmp
cmp
cmp
(bad)
xlat
nop
inc
je
inc
(bad)
sti
cmp
lock
and
fsubr
mov
(bad)
loop
add
adc
mov
inc
inc
cmp
(bad)
mov
mov
hlt
pop
in
inc
outs
adc
jl
outs
mov
test
fdivr
inc
sub
inc
pop
dec
mov
in
(bad)
dec
cli
pop
mov
stc
in
mov
(bad)
push
jg
outs
sti
leave
lahf
and
cli
popf
inc
repnz
sbb
cld
out
push
popf
es
mov
dec
repz
jg
daa
cli
jecxz
std
dec
jle
aas
loopne
cli
std
(bad)
jl
mov
jp
(bad)
xor
clc
inc
daa
fs
cmc
cvtpi2ps
and
paddd
gs
adc
xchg
(bad)
scas
jg
jmp
inc
arpl
mov
(bad)
fdivrp
cmc
sar
mov
cmp
adc
fbld
clc
arpl
stc
push
pusha
xor
mov
dec
add
pop
cwde
leave
(bad)
xor
sti
lahf
(bad)
aas
loope
cld
scas
loopne
out
aas
cdq
xchg
test
cmp
jmp
ja
jmp
cmp
xchg
mov
in
loopne
(bad)
xchg
(bad)
aas
cld
jne
lea
pop
ins
test
mov
call
hlt
repz
movs
lahf
push
jmp
std
cmp
jmp
add
dec
fsubr
fdivrp
xor
hlt
jg
add
cwde
jmp
dec
xchg
or
jg
call
push
add
imul
dec
push
adc
and
jle
loope
pop
mov
inc
mov
popf
out
adc
retf
xor
xor
inc
dec
sub
mov
test
mov
cli
in
movs
aaa
js
sub
or
call
cli
sbb
pop
idiv
xor
aas
cmc
sti
jl
pop
or
(bad)
(bad)
cli
xor
dec
div
push
xor
cmp
ret
aas
retf
jl
(bad)
(bad)
nop
mov
imul
je
adc
mov
iret
lods
xchg
arpl
mov
cld
sbb
xchg
inc
popf
ja
sub
lahf
call
cli
add
movs
int
aad
sbb
icebp
aaa
clc
in
call
loop
stc
daa
jmp
sti
in
adc
xor
in
xor
or
leave
das
and
mov
test
pop
popa
mov
clc
int
gs
retf
or
jle
push
jg
call
pop
jnp
arpl
pop
or
cmp
jb
stc
sar
icebp
aad
and
sbb
stc
scas
sub
clc
outs
xor
loopne
mov
cli
imul
scas
jmp
mov
sti
lea
rcl
imul
or
jp
xchg
dec
(bad)
push
int3
mov
(bad)
pop
inc
(bad)
lods
pop
cld
sbb
or
out
out
dec
(bad)
call
mov
pop
or
mov
test
pop
jmp
leave
out
sar
leave
mov
lods
xchg
pop
adc
push
mov
push
jb
add
mov
xor
jge
repnz
cmps
jmp
push
xlat
nop
jl
adc
push
std
mov
xor
shr
jge
or
push
xor
stc
repz
movs
aas
jg
pop
sub
xchg
fucom
sub
sub
or
shl
dec
jecxz
cld
pop
jle
fist
add
(bad)
hlt
not
push
out
loop
stc
cmp
adc
sbb
fistp
fstp
rol
mov
cmps
retf
(bad)
out
into
je
inc
in
sti
push
jg
(bad)
ja
(bad)
std
(bad)
cld
lahf
xchg
dec
loop
add
push
pop
rcl
cld
(bad)
add
mov
sahf
adc
push
lods
imul
je
sub
stc
ja
(bad)
fdivr
das
or
add
pop
sti
in
rcl
out
aas
xor
push
adc
out
lahf
mov
sbb
rcr
cmp
mov
stc
arpl
lea
rcr
inc
imul
fist
add
call
jg
adc
stc
addr16
arpl
mov
(bad)
mov
or
outs
dec
inc
or
pop
inc
adc
push
push
xchg
mov
(bad)
cli
mov
in
and
push
jp
mov
iret
push
retf
cmp
ret
es
dec
(bad)
jge
out
xchg
jg
inc
repz
ror
out
mov
xor
jle
fild
or
stos
mov
(bad)
cs
icebp
daa
(bad)
cmp
lds
jmp
cmps
(bad)
fistp
mov
stc
pavgb
imul
clc
rcr
(bad)
cld
in
std
in
mov
add
call
in
sti
std
out
mov
fistp
mov
std
dec
loopne
xchg
(bad)
mov
out
out
(bad)
push
mov
(bad)
fidivr
repz
add
dec
fdiv
pop
cli
hlt
xlat
out
fisubr
jg
scas
call
jl
call
les
stos
leave
inc
pop
mov
shl
mov
rcl
les
xor
mov
sub
mov
in
xlat
nop
test
hlt
(bad)
(bad)
xlat
shl
jno
stc
sbb
dec
jle
(bad)
dec
push
fstp
(bad)
ss
std
xchg
ffreep
js
xchg
sti
xchg
jg
mov
bound
call
pushf
xchg
pop
inc
pop
rol
rol
aas
loope
inc
jo
jne
mov
cli
stc
xchg
mov
hlt
repz
(bad)
(bad)
aas
mov
pop
cmps
cld
cwde
scas
push
jge
add
leave
lahf
adc
cmps
sbb
iret
bound
popf
pop
ret
add
push
cmp
mov
popa
jg
dec
mov
(bad)
jge
stc
scas
mov
xor
fbld
jle
dec
(bad)
in
cld
(bad)
jle
pop
cli
clc
cmps
call
xor
shr
hlt
leave
(bad)
fstp
not
fistp
sub
not
sub
cmp
call
jo
loope
mov
sbb
test
xchg
lock
cmps
jmp
jg
adc
out
jmp
repz
aam
(bad)
jg
sub
sar
std
stos
jle
ret
(bad)
in
dec
(bad)
jne
jg
jmp
pop
stos
cld
xor
mov
mov
xchg
fidivr
mov
enter
xchg
ror
std
pop
ss
aas
or
hlt
iret
cmps
jg
mov
xchg
jg
test
mov
outs
hlt
sbb
out
aas
cmc
sbb
icebp
sbb
sbb
pop
cmp
jb
xchg
pop
repnz
cmps
call
repnz
adc
loop
dec
dec
fld
(bad)
cli
sub
sub
das
imul
aas
out
call
pop
cdq
popf
pop
and
rol
enter
repnz
(bad)
mov
xor
aas
adc
std
fnstsw
fistp
fild
loope
mov
dec
fisttp
(bad)
xor
lahf
inc
dec
clc
xor
hlt
adc
jecxz
in
nop
adc
ja
xor
xor
cli
call
sub
or
std
cmp
sub
popf
clc
sti
jl
lahf
(bad)
not
adc
stc
lahf
pushf
(bad)
sbb
int
dec
sub
mov
call
(bad)
lods
fdivrp
cmps
mov
lahf
inc
jp
bound
pavgw
in
stc
in
adc
jg
jb
xchg
cmp
xchg
jmp
mov
(bad)
push
sar
out
outs
ret
add
mov
and
arpl
call
dec
inc
pop
adc
jle
imul
xchg
shl
cmps
sbb
mov
inc
mov
loopne
jmp
ja
jmp
pop
ins
lea
xchg
mov
(bad)
push
ss
fistp
add
pop
mov
(bad)
cmp
push
(bad)
mov
addr16
jl
fnstsw
loopne
add
(bad)
lahf
cld
mov
or
dec
loope
and
mov
fs
rcr
std
mov
(bad)
stc
xlat
add
std
add
out
adc
or
loop
cmps
cld
cmc
fldcw
out
adc
sbb
xlat
sete
imul
hlt
sti
jg
(bad)
(bad)
sti
jg
stc
push
mov
repnz
fiadd
jmp
xlat
push
cmc
stc
jle
repnz
push
cld
push
icebp
ins
(bad)
fisub
adc
int3
fwait
mov
(bad)
or
mov
dec
sar
mov
gs
ja
or
in
inc
jo
data16
jg
sbb
xor
test
daa
(bad)
fisubr
pushf
daa
fst
in
and
dec
pop
and
icebp
or
(bad)
stc
sub
jg
out
dec
jmp
mov
(bad)
mov
sub
push
push
ins
xor
movs
fdivr
bound
xor
inc
aas
or
jmp
cld
pop
sahf
mov
hlt
arpl
jg
out
aaa
arpl
out
xlat
and
out
push
add
cli
adc
cmc
fstp
pop
cld
push
in
xor
lods
imul
into
mov
cli
jmp
sar
daa
repz
aaa
inc
or
fcmovnbe
out
test
jle
lock
cmp
sahf
sbb
mov
out
jg
push
data16
cld
jmp
mov
and
pop
jmp
xchg
test
adc
loope
lds
mov
mov
push
js
cld
add
and
adc
sub
lahf
cld
repz
clc
mov
dec
std
sbb
fistp
(bad)
jmp
cli
cmps
rep
call
loopne
mov
mov
dec
scas
fisub
jg
mov
(bad)
sar
jg
cli
jmp
imul
call
pop
sar
pop
mov
mov
lock
mov
rol
mov
mov
test
pop
jmp
clc
pop
xlat
(bad)
dec
mov
(bad)
push
xchg
fidivr
inc
xor
cmps
sbb
sti
jge
inc
cld
cs
xchg
cld
fsub
jg
mov
mov
call
in
cld
int
xchg
rcl
cmps
aas
mov
sbb
cld
neg
mov
xchg
xchg
(bad)
enter
imul
pusha
bound
lods
aas
xor
loope
test
movs
cmp
pop
stc
jmp
test
sub
fsubrp
cmp
jmp
stos
scas
add
or
(bad)
jae
mov
xor
or
call
loopne
sub
mov
cli
lea
shl
jmp
dec
(bad)
pop
or
aas
stc
gs
arpl
push
rcr
mov
sub
jmp
sbb
les
xchg
add
loopne
cld
jne
sti
push
imul
mov
(bad)
stos
pop
push
hlt
push
repnz
ja
repz
inc
jb
call
mov
sahf
leave
pop
add
jmp
repnz
outs
or
add
lods
adc
jns
sub
shr
xchg
mov
mov
fbld
cmc
ss
lds
lock
jg
cmp
clc
aaa
cmps
xor
(bad)
movs
push
cld
xchg
lock
inc
in
(bad)
sbb
and
push
jo
push
aas
push
and
xlat
xchg
cmp
fidivr
add
movs
dec
xor
fprem
xchg
dec
cli
ins
push
inc
cdq
jae
mov
jle
(bad)
rcr
movs
lds
xchg
jb
mov
icebp
lods
data16
mov
test
mov
push
cmp
(bad)
pop
popf
fsub
pop
cmp
cwde
dec
fst
mov
jmp
or
fcmovnbe
addr16
fisttp
inc
sub
retf
hlt
mov
xchg
dec
sar
sbb
and
idiv
mov
clc
xor
fdiv
mov
imul
sub
cmp
pop
in
cli
sti
adc
and
stc
(bad)
sub
pop
jecxz
movs
fild
xor
adc
je
loop
cmp
mov
imul
pop
movs
call
cli
fstp
dec
inc
(bad)
call
out
pop
sti
or
sahf
ds
aas
inc
(bad)
cmp
jle
(bad)
push
cmps
repnz
sub
mov
xchg
sar
xlat
shl
jmp
jg
jg
outs
jmp
mov
mov
inc
add
add
popa
bound
mov
push
std
cli
sub
clc
pop
push
lahf
cld
add
push
(bad)
and
cmp
(bad)
jg
out
sahf
pop
mov
lahf
stc
fcmovnbe
idiv
push
out
lds
into
dec
cmp
fild
clc
inc
mov
jno
(bad)
(bad)
and
mov
dec
dec
call
popa
jge
cld
inc
jmp
mov
inc
jno
outs
jo
jnp
xchg
sbb
mov
xchg
std
ret
sbb
out
repnz
jae
sub
pop
add
adc
ret
lods
sbb
push
pop
call
jno
out
cld
leave
jg
jmp
dec
pop
sti
pop
imul
cmp
popf
xor
push
cli
popf
lahf
aas
xchg
(bad)
(bad)
mov
sti
aas
jmp
xchg
test
lahf
stos
fbld
mov
or
jmp
push
xlat
aam
lds
(bad)
inc
enter
xlat
inc
inc
loop
call
xlat
jo
add
call
pop
shl
jl
(bad)
std
xlat
pusha
or
aas
cmp
repz
(bad)
jg
mov
in
daa
mov
test
cdq
xlat
int
and
aaa
push
cld
leave
mov
jl
push
adc
leave
int
dec
jle
in
ret
retf
(bad)
je
mov
or
imul
(bad)
(bad)
call
pop
cld
mov
repnz
dec
inc
loope
loop
(bad)
jmp
xchg
mov
push
mov
idiv
aas
icebp
cmc
jg
cmp
xlat
jg
xor
(bad)
ins
rcl
sahf
and
sub
push
push
dec
mov
mov
call
aas
out
inc
jge
lds
test
std
icebp
daa
(bad)
cmp
das
jge
or
aaa
mov
repnz
repnz
bound
or
leave
dec
push
sahf
adc
mov
icebp
aaa
leave
cmp
outs
jae
loope
and
icebp
jmp
test
fnstsw
xlat
jo
shr
imul
ret
dec
(bad)
(bad)
fcomip
xchg
pop
cmc
fist
add
adc
fbld
and
call
jmp
xor
mov
sar
pop
push
cld
jb
mov
xchg
push
icebp
lock
mul
and
jge
mov
dec
mov
js
ja
or
ror
fild
jmp
int3
cmc
das
test
out
adc
jecxz
and
adc
push
ret
sub
in
xchg
inc
std
mov
iret
daa
dec
das
clc
in
movs
jmp
dec
bound
mov
popf
push
aam
dec
dec
jmp
and
fist
fisttp
jbe
xlat
dec
sub
push
dec
jmp
cs
lods
pushf
enter
adc
aam
sub
in
add
stc
scas
add
int3
and
push
rcr
in
fs
ficomp
sti
jg
ja
xchg
ret
icebp
add
adc
sbb
fsubrp
mov
xchg
mov
push
pusha
stos
aas
xor
jecxz
in
cld
leave
mov
test
dec
retf
add
cmp
neg
cmp
jae
sub
lds
xchg
xchg
and
add
xchg
sbb
(bad)
pop
mov
neg
dec
add
sbb
mov
icebp
push
mov
pushf
stc
arpl
(bad)
cmp
adc
cli
lods
push
loopne
cld
out
(bad)
mov
fst
jmp
adc
inc
(bad)
jg
mov
mov
call
(bad)
or
(bad)
mov
hlt
stc
scas
imul
mov
sti
mov
(bad)
(bad)
jecxz
sub
pop
lahf
(bad)
xor
jmp
fild
std
jno
cmps
mov
mov
stc
dec
shl
jmp
std
call
push
mov
out
hlt
pop
(bad)
push
pop
adc
loope
fist
aaa
sti
int
dec
push
in
xor
sub
(bad)
xchg
(bad)
adc
mov
or
sub
mov
iret
lahf
cli
xor
lock
aas
mov
cmp
outs
xor
mov
stc
mov
ja
pop
ds
outs
jle
fisttp
out
hlt
mov
jnp
and
sub
mov
cld
retf
xor
(bad)
cmp
addr16
out
repnz
retf
(bad)
push
jo
push
out
mov
or
fild
icebp
sti
jl
push
std
mov
(bad)
hlt
inc
ds
ror
sub
xor
repnz
cdq
aas
jle
out
sbb
movs
mov
inc
dec
jg
dec
jle
fcomip
aaa
stc
pop
jle
ret
test
scas
xchg
push
std
fcos
jecxz
imul
leave
das
movs
xor
cmp
lock
outs
clc
jmp
jbe
neg
loope
repnz
dec
inc
or
inc
out
inc
adc
mov
xchg
push
mov
inc
movs
dec
jg
cli
loop
xchg
in
(bad)
scas
and
dec
push
stc
lahf
dec
jmp
stc
aas
add
nop
cmp
dec
xor
jg
(bad)
pop
loop
fist
adc
add
mov
outs
hlt
pop
inc
jmp
cmc
jg
dec
(bad)
pop
out
cld
ds
loope
rcr
loop
or
repz
shr
es
fwait
inc
sub
out
mov
outs
jle
(bad)
dec
std
int
fisttp
jle
fs
sbb
lea
(bad)
mov
lea
pop
out
ja
pop
jle
(bad)
xlat
dec
jmp
shr
add
std
push
jmp
(bad)
jg
jp
mov
icebp
sbb
js
retf
push
out
sti
aas
adc
cs
or
(bad)
out
mov
stc
xlat
stc
mov
not
outs
lock
mov
mov
(bad)
sub
sysret
cli
mov
sar
in
inc
push
std
inc
mov
cld
cmps
xchg
jo
mov
bound
jecxz
repnz
ror
aas
in
mov
js
aas
sti
xchg
das
bound
leave
push
sbb
std
adc
or
cld
or
outs
mov
push
jne
(bad)
daa
jmp
scas
shr
ja
mov
test
enter
inc
stc
scas
(bad)
jnp
out
idiv
cld
test
push
mov
idiv
int
sub
test
or
pop
cli
lahf
sar
pop
movs
loop
inc
into
lock
clc
cmps
jg
movs
in
jns
jg
aam
sub
jp
or
pusha
and
and
jmp
inc
stc
mov
(bad)
movs
pop
int
fidiv
sti
(bad)
(bad)
cmp
jmp
fcomip
push
inc
mov
out
mov
mov
iret
mov
mov
(bad)
scas
xchg
pop
pushf
jle
xchg
shl
call
lock
(bad)
sbb
test
scas
lds
jecxz
dec
mov
std
(bad)
imul
hlt
call
(bad)
call
cmp
sbb
jg
pop
inc
xchg
inc
in
mov
jg
push
in
jne
jmp
mov
xchg
mov
in
xlat
adc
inc
daa
rcl
xchg
ins
outs
jle
jno
repz
or
jo
mov
iret
imul
mov
stc
out
dec
sbb
push
hlt
add
mov
xchg
jg
xlat
cmp
jg
(bad)
clc
addr16
retf
jg
out
lock
push
outs
stc
dec
repnz
jg
mov
sub
pop
xchg
pop
(bad)
stc
data16
lock
aas
adc
xchg
jne
jmp
cld
cmp
cs
add
inc
test
adc
stc
(bad)
jmp
movs
xchg
(bad)
sbb
cli
pop
inc
cmp
add
ret
out
daa
icebp
loope
in
pop
out
dec
inc
out
xchg
fcom
cs
(bad)
outs
clc
jmp
out
aas
cmc
jmp
fidivr
stc
pop
hlt
(bad)
lahf
cli
fwait
cld
mov
push
das
mov
shr
cmp
cdq
(bad)
add
mov
xchg
jmp
retf
jmp
(bad)
pop
xchg
fist
movs
ret
jae
dec
hlt
outs
jl
cmps
(bad)
dec
pop
mov
stc
jmp
out
pop
mov
hlt
cmp
sbb
push
(bad)
sbb
pop
and
neg
leave
sbb
pusha
inc
jno
(bad)
std
cs
test
lods
aas
push
or
xor
(bad)
xchg
jg
cmp
and
clc
jl
icebp
scas
lds
sub
inc
pop
push
and
in
fld
pop
rcr
iret
jg
xor
sub
inc
dec
sar
xlat
(bad)
xor
mov
pop
inc
add
or
(bad)
fisttp
cmps
fnstsw
xchg
(bad)
bound
lock
call
adc
jge
cdq
pusha
out
xchg
xchg
jmp
test
push
dec
dec
adc
xchg
loop
lds
std
repz
xor
(bad)
cmp
out
stc
ins
ds
pop
jmp
repnz
mov
stc
std
out
and
xchg
(bad)
(bad)
js
loope
stc
mov
scas
add
dec
(bad)
and
pop
mov
pop
loop
pop
rcr
(bad)
cld
push
jmp
mov
mov
scas
pop
mov
dec
fisttp
push
in
fbld
std
fld
(bad)
jl
push
paddd
cmp
clc
pop
and
lock
push
mov
or
call
push
sbb
cld
(bad)
int3
sub
clc
xor
mov
repnz
call
inc
jg
gs
push
jle
mov
sbb
daa
sar
jg
imul
outs
jg
xor
jecxz
gs
and
sub
push
jl
sar
and
and
loope
pop
dec
jg
stc
xchg
sahf
xor
(bad)
pop
add
mov
push
div
push
add
out
xlat
xchg
sbb
(bad)
jns
cmc
pop
push
popa
ror
add
repz
es
imul
(bad)
dec
pop
push
(bad)
sar
jmp
call
mov
movs
cwde
loopne
packsswb
mov
inc
imul
add
add
in
out
adc
inc
(bad)
jg
imul
and
daa
out
jg
call
mov
jnp
shl
mov
leave
dec
xor
mov
jne
push
pusha
mov
cld
mov
xchg
hlt
lahf
in
call
fidivr
das
cld
shr
mov
jg
aas
cli
jnp
jae
mov
outs
sbb
xor
retf
dec
pop
cld
fnstcw
or
cmps
out
ja
ds
mov
adc
inc
sahf
xchg
jb
mov
xchg
cld
sub
mov
gs
into
dec
xor
dec
imul
rcl
dec
loopne
cli
repz
(bad)
jmp
(bad)
sar
pop
not
jmp
outs
or
pop
push
sbb
xor
mov
lods
push
pop
fild
mov
cmp
push
mov
add
jl
mov
leave
idiv
into
(bad)
in
shl
add
call
mov
cmp
stc
mov
aas
mov
xlat
clc
jge
sub
pop
jg
dec
popa
and
cli
aas
mov
xor
loop
dec
cmp
push
mov
out
(bad)
sbb
out
dec
scas
sub
daa
jle
out
pop
lock
inc
stc
icebp
sub
jmp
(bad)
pop
and
hlt
jmp
(bad)
pop
rol
loop
cmc
adc
aaa
mov
inc
jmp
and
add
xor
dec
out
xchg
sti
out
jge
outs
push
cs
cmps
iret
mov
xchg
jg
cmp
fild
leave
aas
inc
fldcw
out
adc
enter
adc
jae
loop
pusha
(bad)
rol
repnz
dec
dec
jg
jg
xchg
leave
jp
jne
pop
jmp
hlt
dec
(bad)
sub
adc
std
dec
dec
jg
jg
add
lds
cmp
inc
shl
(bad)
cli
mov
mov
jbe
out
outs
cmc
sbb
jbe
push
add
dec
and
fisttp
arpl
mov
add
xor
ins
movs
dec
jle
jmp
std
pop
in
pop
cld
sbb
lods
adc
adc
jg
xor
push
mov
out
repnz
out
push
inc
cld
das
and
clc
scas
jg
shr
cld
aas
mov
std
cmp
imul
into
push
call
cld
out
xor
inc
mov
pop
mov
mov
jg
imul
loop
cli
sti
fist
ror
mov
pop
call
daa
mov
call
lods
jg
xlat
nop
jne
lock
mov
fild
mov
add
aam
xor
push
data16
addr16
call
mov
add
iret
icebp
sbb
mov
dec
xchg
jle
in
inc
dec
das
retf
(bad)
mov
inc
dec
and
jg
jp
pop
sub
aam
imul
jecxz
and
shl
fsubr
mov
std
mov
shr
push
mov
hlt
sti
jl
aaa
rcr
jg
and
xchg
mov
fistp
add
jg
push
mov
xchg
pop
push
in
dec
out
fild
mov
adc
fadd
lahf
inc
(bad)
cmp
enter
in
in
xchg
add
sbb
cmp
ds
mov
jg
inc
(bad)
jmp
mov
cld
push
sar
loop
in
aad
dec
loope
jo
mov
test
cld
push
rcr
vpsubusw
movs
ja
and
dec
mov
les
stc
aas
idiv
cmp
sbb
pop
mov
cld
or
std
into
shr
aas
repz
inc
sar
or
loopne
mov
push
test
pop
or
cld
(bad)
out
and
cld
sbb
arpl
sbb
pop
or
jnp
cmp
xor
jae
aas
dec
call
(bad)
push
dec
loope
jg
(bad)
(bad)
out
jle
stc
or
in
in
and
sti
(bad)
sbb
xor
stc
popf
jg
pop
out
xchg
pop
repnz
add
nop
das
jns
repnz
and
inc
sub
inc
fwait
jle
imul
call
mov
mov
lock
enter
jmp
mov
loop
stc
in
and
clc
pop
adc
sub
dec
sbb
fidivr
rol
pop
inc
sti
xchg
sar
add
add
lods
sbb
ror
lods
dec
pop
adc
push
xor
mov
test
ja
aas
(bad)
idiv
dec
(bad)
add
ret
outs
mov
cld
call
inc
cmp
fidivr
(bad)
aas
(bad)
push
mov
push
xor
and
das
nop
mov
jecxz
out
cld
mov
retf
gs
fadd
jno
stc
scas
or
loopne
fist
cmp
and
fistp
in
call
mov
(bad)
scas
int3
pop
and
fs
ds
sub
outs
jmp
inc
fistp
into
shr
sub
movq
jg
stc
sbb
mov
adc
fdivr
pop
std
aaa
jmp
retf
sub
mov
ret
(bad)
jmp
jg
icebp
iret
nop
mov
pop
hlt
imul
imul
std
xchg
jle
jne
outs
inc
push
push
repz
rol
(bad)
fxam
and
fistp
das
call
xchg
(bad)
(bad)
xor
scas
and
sti
imul
add
std
cmps
ins
call
es
(bad)
jge
xchg
(bad)
jmp
dec
sahf
loop
fbld
add
mov
sti
(bad)
mov
loope
mov
sbb
xchg
xchg
sti
or
cld
fisub
jg
jge
xchg
or
es
sbb
pop
lahf
(bad)
mov
test
jg
stc
jmp
jecxz
call
aad
dec
fild
add
or
pop
jg
test
inc
sub
jbe
sahf
cmp
pop
std
xchg
cmp
fwait
hlt
psubd
es
and
dec
daa
jg
cmp
xchg
pop
cmp
add
je
xlat
add
ja
or
jne
xchg
ja
sub
(bad)
aas
xor
retf
jle
fist
cld
test
push
mov
(bad)
stc
add
in
outs
or
adc
cld
adc
ja
loop
bound
jl
mov
out
cld
xor
(bad)
pusha
mov
out
dec
(bad)
call
mov
xchg
inc
in
in
scas
and
and
into
sub
stos
fbld
jg
pop
fcomip
xlat
nop
les
sub
lahf
sar
jg
cli
push
inc
add
push
hlt
ins
mov
pop
aas
adc
imul
cs
push
adc
scas
jle
xor
outs
repz
aas
idiv
rcr
outs
int3
imul
and
(bad)
sub
mov
ret
pop
lahf
xchg
mov
and
ss
mov
and
cmp
jmp
(bad)
fidivr
not
hlt
add
scas
fwait
jmp
arpl
repnz
clc
dec
adc
push
xchg
jge
mov
xchg
(bad)
lahf
hlt
pop
cli
aas
sar
pop
psubusb
sub
mov
not
cmp
jle
test
pop
jmp
mov
or
cmps
loope
cmp
repz
(bad)
outs
xchg
pop
jg
aas
pop
push
dec
jg
fcomip
dec
not
nop
(bad)
cmp
imul
call
pop
es
push
call
scas
std
jp
(bad)
das
stc
mov
mov
xchg
nop
pop
jmp
mov
jmp
call
std
xor
(bad)
cli
in
inc
(bad)
jmp
mov
std
sti
sub
aas
fs
jle
fistp
jnp
ret
(bad)
fld
dec
sbb
mov
std
xor
add
in
and
jl
clc
fcos
int
sbb
cs
or
lea
stc
iret
dec
(bad)
cld
(bad)
in
jl
repnz
cld
mov
cld
fwait
xor
jmp
fld
fucomip
dec
(bad)
in
and
sbb
mov
fild
(bad)
aas
out
cmps
ds
imul
mov
sar
sbb
movsx
outs
inc
mov
or
or
std
leave
mov
mov
cmp
test
add
test
aas
add
(bad)
(bad)
ja
sub
lahf
cld
mov
cmps
dec
dec
mov
(bad)
ja
lock
call
pop
imul
(bad)
(bad)
es
rol
loope
bnd
cli
mov
pushf
rcl
mov
(bad)
aas
cmp
cmc
imul
cmp
jl
xlat
cld
sub
mov
and
xor
push
mov
jg
(bad)
aaa
out
adc
leave
scas
icebp
adc
jg
stos
pop
jecxz
std
aas
sar
jmp
hlt
(bad)
fadd
dec
es
jg
int3
outs
call
(bad)
lahf
cld
lea
mov
in
std
in
aas
stc
gs
dec
inc
adc
nop
test
out
dec
int
test
sbb
in
repz
mov
cmps
sub
xor
outs
sar
and
jmp
std
call
(bad)
sbb
or
add
jmp
xor
(bad)
out
jmp
inc
inc
out
add
dec
cli
std
xlat
shr
(bad)
cmp
call
(bad)
call
in
sbb
aaa
pusha
pop
lea
ror
jecxz
leave
pop
cmps
push
sbb
data16
aam
inc
mov
fnstcw
pop
inc
int3
out
inc
call
cld
in
sub
stc
test
jmp
mov
in
and
lock
sti
xor
xlat
add
jmp
cmc
cmc
daa
lock
je
cli
sahf
(bad)
clc
xchg
jg
(bad)
ja
ins
imul
mov
jb
repz
es
cld
out
jbe
cld
cmp
das
addr16
or
(bad)
enter
jmp
add
mov
mov
movs
inc
clc
iret
mov
dec
jg
outs
(bad)
pop
xchg
inc
pop
cmc
push
and
cld
sti
leave
lahf
cld
mov
das
(bad)
jmp
cld
ja
push
jmp
dec
pop
iret
pushf
mov
shl
mov
fcmovbe
adc
imul
cmp
(bad)
push
mov
loope
jle
mov
(bad)
out
scas
mov
push
imul
jg
(bad)
sub
(bad)
dec
push
xchg
jne
push
sti
jg
cli
mov
lds
(bad)
fcos
or
cwde
mov
xor
add
fsubr
sti
sbb
(bad)
sbb
daa
cld
jns
push
fwait
lods
cs
dec
mov
jle
adc
call
scas
and
fbstp
(bad)
or
sbb
pop
dec
loop
fist
pop
(bad)
call
(bad)
movs
scas
xor
and
adc
or
push
out
mov
cmp
inc
jo
daa
mov
cmps
mov
jg
pop
inc
jb
jae
(bad)
cmp
aas
sub
mov
lock
std
sbb
loope
in
jg
std
sbb
shr
(bad)
jmp
out
xchg
jg
test
sti
stc
iret
rol
mov
ds
mov
cmps
jg
and
lock
dec
cli
addr16
in
out
imul
paddd
pop
jle
repnz
jmp
xchg
aas
cwde
push
clc
lds
mov
mov
call
punpcklwd
jbe
lock
(bad)
mov
cld
out
inc
clc
or
inc
mov
icebp
sub
mov
lahf
mov
push
ss
clc
jae
or
jg
lahf
cld
mov
xchg
inc
jg
(bad)
mov
cmps
jg
std
mov
or
xor
fisttp
add
and
jle
pop
div
clc
mov
mov
and
outs
xor
std
and
mov
repnz
les
mov
add
rcl
add
loopne
(bad)
(bad)
jle
sar
lea
lods
jle
aas
cmp
xchg
jg
es
call
dec
mov
mov
lahf
mov
test
in
pop
inc
add
inc
repnz
sbb
sar
jns
mov
lahf
inc
loopne
mov
inc
sub
dec
xor
adc
push
fisub
jl
pop
stos
jg
ins
hlt
repz
movs
inc
aad
loopne
lahf
xchg
test
clc
push
sbb
aaa
mov
or
mov
repnz
out
retf
pop
adc
jle
push
mov
mov
jno
sub
add
lock
das
dec
xchg
cmp
shl
dec
(bad)
mov
and
jg
cmp
jns
mov
aas
(bad)
jnp
jecxz
popa
jecxz
(bad)
jge
jmp
sub
cld
fild
(bad)
jb
test
jb
std
leave
mov
movs
(bad)
in
scas
ror
mov
jg
fcom
mov
call
pop
jle
fild
mov
jle
fist
out
pop
push
daa
mov
dec
dec
pop
inc
out
retf
pop
outs
jge
xlat
or
or
add
push
outs
loopne
cmp
jmp
call
sti
sbb
xchg
fucomip
ja
fisubr
jge
push
mov
pop
push
mov
jg
sbb
inc
mov
pop
xlat
std
stc
outs
(bad)
stc
jg
dec
call
pop
inc
scas
cmp
daa
jbe
pushf
jg
ja
cmc
inc
std
pop
mov
jmp
outs
jg
aas
repnz
std
and
cmps
push
(bad)
hlt
adc
iret
xor
ret
cli
adc
jg
jae
mov
cld
xor
call
call
dec
pop
cmp
(bad)
call
sub
(bad)
(bad)
gs
(bad)
stc
outs
jle
jg
(bad)
fistp
push
inc
pop
sti
or
xchg
mov
dec
(bad)
jmp
lock
aas
cmp
leave
in
aaa
(bad)
xor
std
add
aam
hlt
cmp
jmp
ret
das
mov
aas
mov
(bad)
(bad)
jmp
in
jl
pop
(bad)
cli
jg
jg
in
mov
jg
aas
loopne
pop
jg
out
das
jns
out
mov
(bad)
mov
(bad)
popf
(bad)
xchg
std
inc
jg
outs
hlt
out
call
jg
cmc
dec
cld
retf
int
mov
out
std
dec
push
push
pop
dec
in
test
mov
mov
(bad)
jmp
cld
das
cmp
mov
push
(bad)
jmp
xlat
cld
pop
jg
pop
jmp
outs
stc
add
repnz
jmp
cmc
pop
clc
dec
mov
stc
jg
iret
pop
std
iret
mov
xlat
mov
popf
jg
outs
cld
mov
jg
mov
aaa
paddd
mov
mov
fucomip
outs
clc
(bad)
xlat
push
es
fsubp
mov
(bad)
jecxz
jg
outs
icebp
mov
outs
cli
jmp
std
sahf
call
mov
push
pop
cmc
jmp
jmp
sbb
outs
test
cld
aas
mov
hlt
fidivr
fwait
std
out
fidivr
cli
aaa
(bad)
push
mov
cld
cmp
in
jmp
cmc
stos
jg
sti
(bad)
stc
pop
repz
mov
jg
lahf
(bad)
jnp
movs
mov
cmp
dec
cmps
idiv
loopne
scas
mov
idiv
aas
js
aaa
call
mov
outs
stc
leave
push
mov
in
cld
xlat
jle
(bad)
(bad)
aas
stc
mov
leave
out
bnd
adc
in
pop
jo
js
paddd
jg
das
call
(bad)
sub
in
pop
(bad)
outs
jg
outs
test
jecxz
iret
mov
scas
std
(bad)
aas
test
mov
leave
lahf
(bad)
lahf
dec
mov
mov
repnz
into
jg
ja
pop
das
(bad)
mov
ret
push
fstp
cmc
sub
out
jmp
stc
jae
cli
or
xchg
pop
clc
mov
test
cmc
dec
jge
pop
(bad)
mov
mov
jle
rcr
xor
das
pop
cld
imul
jg
iret
cld
sbb
jmp
loope
repz
cli
stos
jg
jmp
xchg
cld
ud0
mov
mov
jle
jmp
(bad)
in
(bad)
out
stc
iret
cld
retf
leave
aas
icebp
pop
std
(bad)
jmp
std
push
mov
(bad)
loopne
inc
mov
xlat
std
sar
mov
idiv
(bad)
mov
icebp
loopne
(bad)
and
xchg
repnz
jp
cld
out
dec
lahf
cld
xor
(bad)
call
cld
sub
paddb
fisttp
pop
mov
inc
jg
test
jp
js
psubb
jle
movd
lahf
clc
xchg
sar
repz
stos
mov
aaa
cmp
jnp
pop
mov
aaa
dec
jmp
(bad)
leave
cmp
(bad)
xchg
cld
push
mov
push
(bad)
xchg
mov
jbe
int
repz
clc
gs
mov
(bad)
es
mov
out
jg
pop
sti
(bad)
cld
ss
inc
scas
stc
pop
daa
cmp
mov
aas
dec
loope
sti
ja
fwait
pop
jmp
fsubr
lock
cld
call
aas
in
std
cli
dec
push
(bad)
jle
mov
in
neg
lahf
imul
jmp
iret
fdivr
iret
pop
std
arpl
inc
jg
std
inc
(bad)
cmp
cld
mov
repz
mov
(bad)
mov
pmaxsw
(bad)
and
(bad)
cld
call
fstp
loope
std
jmp
std
mov
(bad)
dec
jmp
std
imul
test
(bad)
fnstsw
loop
(bad)
mov
(bad)
jmp
stc
push
mov
out
(bad)
idiv
lahf
icebp
cmps
out
pushf
fdivr
outs
movq
addr16
pop
mov
outs
std
cmps
inc
lahf
sti
scas
cld
iret
jg
jmp
(bad)
cld
mov
sti
sbb
idiv
pop
inc
mov
test
std
pop
stc
sbb
jmp
jle
aaa
aas
stc
retf
jle
sar
clc
jg
in
pop
out
cld
fidivr
call
aad
out
cld
dec
idiv
mov
lea
inc
cld
cmps
jg
pop
cmc
retf
dec
jg
dec
stc
lahf
(bad)
stos
out
(bad)
bnd
std
sbb
xchg
(bad)
jmp
xchg
das
(bad)
lahf
std
jmp
inc
movzx
mov
(bad)
std
push
jecxz
jmp
sti
dec
(bad)
hlt
outs
(bad)
jns
shr
jg
fwait
cld
sti
jmp
lahf
cmc
loop
cli
cdq
fnstsw
cld
(bad)
clc
(bad)
std
xchg
push
mov
push
jg
pop
repz
std
loop
stc
out
jge
daa
std
cmps
lahf
(bad)
jns
sar
push
(bad)
das
mov
jg
lahf
aas
std
sub
dec
stos
out
cld
fidivr
das
dec
call
das
jg
cmps
(bad)
stc
aas
hlt
jnp
rcr
(bad)
loop
imul
cli
jne
pop
(bad)
and
jmp
fistp
lds
stc
(bad)
mov
lahf
clc
fst
or
aas
cld
scas
sti
(bad)
jg
scas
std
addr16
aad
fsubrp
hlt
daa
(bad)
jae
out
std
ud0
xlat
jg
mov
jnp
test
(bad)
dec
outs
std
sti
(bad)
mov
sti
lahf
div
jmp
retf
inc
adc
outs
push
div
(bad)
pop
(bad)
cdq
icebp
jg
out
aas
(bad)
mov
(bad)
fidivr
iret
(bad)
mov
cmc
or
in
mov
dec
lahf
sti
push
(bad)
out
aas
cli
out
(bad)
fistp
(bad)
xor
pop
clc
lahf
std
data16
std
aas
lock
aas
(bad)
mov
(bad)
clc
(bad)
sti
aas
jmp
jmp
stc
pop
jge
pop
ds
mov
(bad)
cli
pop
jmp
(bad)
out
scas
(bad)
out
push
clc
(bad)
stc
jmp
call
xchg
test
(bad)
jmp
cld
mov
inc
(bad)
fld
jg
addr16
(bad)
xchg
jg
aas
call
lahf
in
cld
(bad)
inc
pop
cld
inc
std
aam
repz
jmp
out
lock
mov
loopne
sti
das
aas
(bad)
fcmovnu
cld
jle
int3
out
test
lahf
repnz
mov
cmp
mov
clc
das
sti
pop
pop
cld
xchg
lds
lock
(bad)
jge
shl
jle
sti
xlat
imul
in
aas
cmp
popf
scas
dec
sti
inc
pop
push
inc
(bad)
(bad)
movq
(bad)
lock
jmp
pop
stc
mov
clc
xchg
push
(bad)
jecxz
cmp
loopne
jne
mov
mul
jle
mov
dec
ret
fcomip
pop
std
sahf
jg
scas
cmc
sbb
xchg
dec
push
pop
mov
fdivrp
push
leave
xchg
call
aas
cld
out
out
repz
fcomip
leave
lahf
cmc
cld
psubb
dec
js
js
clc
mov
jmp
outs
sti
popf
jmp
pop
push
(bad)
cli
das
cld
idiv
jmp
jg
mov
inc
push
repnz
jg
(bad)
mov
out
mov
daa
aas
repz
std
out
(bad)
out
cld
loop
(bad)
sar
fcomip
xlat
(bad)
fnstcw
pop
lods
jle
jg
clc
mov
jg
(bad)
in
mov
xchg
inc
std
mov
mov
xchg
call
aas
(bad)
(bad)
xchg
jmp
(bad)
sti
das
stc
mov
sahf
std
add
das
(bad)
addr16
fdivr
(bad)
cld
(bad)
scas
dec
(bad)
mov
ds
push
pop
(bad)
and
(bad)
out
pop
(bad)
ja
mov
pop
cld
jg
outs
(bad)
jle
cmc
call
pushf
pop
sti
out
cmp
outs
sti
mov
(bad)
loope
retf
push
(bad)
(bad)
sub
sbb
cld
xchg
mov
iret
(bad)
adc
lock
mov
out
sti
aad
jg
neg
call
dec
in
pop
std
jge
jle
aas
loop
cld
imul
pop
clc
sbb
out
jg
repz
das
std
sbb
ja
dec
outs
std
cmp
jg
fnsave
mov
psubw
scas
int
cmp
sti
push
jg
repz
out
cld
imul
lahf
dec
cmc
mov
dec
mov
cld
cmps
(bad)
(bad)
neg
jg
pop
hlt
dec
push
std
aaa
inc
icebp
lahf
imul
jg
dec
jmp
cld
pop
jg
jg
fwait
std
push
jg
mov
jmp
scas
std
pop
scas
mov
mov
clc
pop
std
mov
std
jg
mov
retf
(bad)
fsubr
stc
(bad)
imul
sub
adc
hlt
addr16
(bad)
stos
outs
jmp
(bad)
call
std
das
(bad)
fidivr
pop
mov
(bad)
sti
jg
std
cs
call
mov
mov
repnz
pop
jmp
dec
call
test
in
jmp
jmp
push
mov
pop
cli
scas
(bad)
sti
(bad)
cld
ja
push
(bad)
xchg
(bad)
jmp
inc
(bad)
xchg
std
adc
jg
out
(bad)
cmc
data16
std
rcr
neg
cli
cmp
aas
loope
aas
call
outs
pop
mov
aaa
cld
fstp
aas
(bad)
scas
std
inc
mov
mov
xchg
(bad)
dec
jmp
iret
mov
ja
mov
pop
out
rcr
jg
das
stc
pop
jle
setnp
inc
pop
iret
(bad)
cld
jg
pop
jg
jg
jnp
out
jg
test
scas
sti
push
(bad)
out
(bad)
(bad)
push
cmp
(bad)
mov
je
jnp
aad
in
std
gs
mov
(bad)
ficomp
hlt
dec
dec
addr16
inc
pop
jg
outs
cli
iret
jmp
mov
inc
push
aas
(bad)
imul
(bad)
idiv
aam
(bad)
pop
sti
cmp
ja
jle
loope
call
cld
inc
leave
neg
jo
dec
jle
mov
jmp
mov
aas
cli
jmp
lods
mov
ret
ja
cmps
(bad)
clc
pop
sbb
jno
(bad)
out
neg
call
jmp
and
jg
lahf
div
int
jg
mov
scas
call
in
jg
das
std
lea
jg
lahf
(bad)
xchg
call
mov
jg
sar
(bad)
mov
popa
(bad)
das
std
or
(bad)
in
pop
cmc
xchg
(bad)
mov
aad
stc
aas
hlt
lock
std
inc
mov
(bad)
outs
jg
repz
jnp
jmp
stc
jmp
popf
cmp
das
jle
outs
cmc
das
(bad)
sbb
cli
repz
xchg
neg
clc
fstp
jg
in
cmc
cmps
jge
jecxz
rcr
(bad)
pop
clc
std
inc
clc
lock
pop
dec
mov
out
mov
aas
dec
jmp
ja
(bad)
mov
repnz
cli
mov
(bad)
sti
dec
(bad)
rcr
cli
dec
cld
repz
fdivr
clc
cmps
std
stos
mov
stc
scas
sti
fwait
push
call
nop
gs
jns
(bad)
addr16
mov
mov
mov
out
dec
popf
fnstsw
cli
outs
std
in
pop
stc
imul
jmp
das
(bad)
(bad)
pop
std
idiv
jmp
cld
fistp
pop
(bad)
xlat
mov
jp
std
out
stc
(bad)
cld
cmp
sti
(bad)
std
cmp
stc
pop
repz
std
lds
loopne
std
mov
sbb
jg
mov
inc
mov
pop
cli
clc
out
clc
adc
loope
neg
stc
pop
call
cli
jecxz
stc
mov
push
outs
std
sbb
scas
retf
lods
lods
aas
sti
(bad)
jg
inc
cld
jno
movs
jg
out
call
out
aaa
std
fisttp
cld
cmp
jmp
mov
in
clc
fstp
pop
(bad)
pop
mov
push
push
in
push
in
xchg
std
pop
(bad)
fsubrp
mov
(bad)
fnstsw
fild
jnp
xchg
dec
dec
jg
pop
icebp
xlat
dec
mov
icebp
iret
cld
stos
push
jg
aas
cld
dec
(bad)
jle
iret
jg
sti
jmp
mov
pop
clc
cmps
cld
loope
jmp
mov
sti
paddb
cld
rcr
out
pop
clc
sar
pop
out
mov
(bad)
(bad)
scas
jg
repnz
push
(bad)
pop
jg
pop
cld
stc
mov
inc
mov
repz
out
clc
mov
cld
inc
xchg
mov
ja
popf
fcomip
in
stc
std
jmp
mov
mov
(bad)
mov
(bad)
jle
popf
jmp
lahf
clc
cmps
(bad)
fdivr
lahf
cld
cmc
(bad)
mov
cld
hlt
outs
repnz
std
lahf
das
inc
sti
call
jg
aaa
(bad)
aad
clc
das
fwait
cld
inc
jg
aas
cld
in
out
sti
inc
jg
into
jg
sbb
cmp
daa
(bad)
and
xchg
cli
xlat
cld
arpl
cmps
jg
pop
pop
call
dec
(bad)
(bad)
mov
std
lahf
(bad)
mov
iret
(bad)
cmps
jg
das
cld
xlat
jle
push
jmp
pop
lahf
std
into
jg
pop
stc
mov
mov
xchg
(bad)
jmp
(bad)
idiv
movs
das
jmp
idiv
cld
lahf
jg
pop
clc
(bad)
cld
cdq
xchg
(bad)
cld
repnz
cld
retf
inc
mov
(bad)
test
daa
aas
cli
into
(bad)
lahf
std
(bad)
int
sti
cmp
shl
out
in
(bad)
mov
dec
jle
(bad)
repz
aaa
fdivrp
fucomp
cs
mov
(bad)
ret
ud0
cmc
pop
cmc
dec
std
sbb
(bad)
out
pop
jmp
jmp
mov
jg
push
sbb
out
(bad)
scas
sti
jg
pop
mov
std
popa
mov
dec
mov
lahf
scas
aas
fscale
sbb
pop
cld
cdq
jg
outs
repnz
ss
out
out
lock
inc
jg
pop
hlt
idiv
and
pop
xacquire
(bad)
cld
arpl
lock
(bad)
(bad)
pop
out
cld
jecxz
(bad)
jmp
sti
mov
xchg
mov
(bad)
neg
jmp
mov
aas
pop
cld
or
pop
sti
iret
std
mov
dec
cli
stos
sar
std
idiv
in
jle
out
std
xor
dec
std
test
out
icebp
daa
das
(bad)
fdivr
and
xor
lods
out
(bad)
mov
xchg
idiv
inc
enter
jg
pop
std
push
jge
sti
cld
loopne
das
jg
das
std
adc
ror
iret
ja
js
out
psubq
cs
pop
dec
cld
test
stos
lds
fwait
mov
(bad)
scas
clc
add
fsubrp
mov
(bad)
jg
jmp
out
lahf
clc
or
loope
(bad)
pop
mov
fcomip
leave
mov
hlt
xlat
cld
loop
std
pop
push
aas
(bad)
(bad)
(bad)
outs
(bad)
in
call
ja
(bad)
fucomip
push
call
xchg
(bad)
dec
push
jg
inc
sti
daa
aas
div
jmp
call
imul
(bad)
jg
(bad)
rcr
out
cli
(bad)
(bad)
fidivr
ja
stc
(bad)
(bad)
mov
std
ins
mov
das
(bad)
ins
dec
std
iret
(bad)
xchg
out
(bad)
mov
fucomip
idiv
jnp
xchg
aas
loopne
sti
repz
mov
(bad)
stc
aas
(bad)
mov
jle
daa
stc
fwait
mov
jnp
sbb
idiv
imul
jmp
(bad)
outs
std
fstp
outs
(bad)
aam
in
cli
xchg
aas
in
jmp
repz
pop
jle
(bad)
cld
jnp
jmp
sti
idiv
cmc
jg
daa
pop
pop
inc
std
fild
jecxz
popf
mov
out
mov
aas
call
cli
pop
jmp
push
(bad)
cld
mov
cmps
(bad)
cmp
outs
std
pop
jmp
std
ins
jg
pop
icebp
xchg
(bad)
sub
(bad)
das
std
aas
aas
(bad)
pop
(bad)
sti
aas
in
(bad)
adc
std
aas
out
fnstenv
cli
jecxz
jmp
xlat
clc
inc
repz
call
hlt
xchg
cld
icebp
outs
(bad)
loopne
loope
jg
inc
inc
push
fst
lahf
hlt
jecxz
jmp
fidivr
idiv
out
fcos
(bad)
dec
lods
addr16
out
test
lahf
cmps
daa
dec
pop
jno
inc
inc
(bad)
imul
dec
jg
cli
jg
stc
ret
dec
jo
scas
clc
(bad)
jg
mov
aad
sti
das
cld
cmps
jg
pop
hlt
mov
retf
icebp
dec
dec
push
aas
repnz
scas
std
neg
jg
(bad)
(bad)
jmp
cs
xchg
aas
hlt
(bad)
das
push
aas
imul
dec
(bad)
in
repz
cli
jae
out
pop
repnz
and
pop
std
mov
scas
dec
mul
(bad)
stos
clc
sbb
mov
outs
fdivrp
mov
fnstsw
aas
jle
repnz
stos
(bad)
call
cmc
jle
(bad)
cli
lahf
sti
xchg
xchg
lahf
clc
mov
(bad)
(bad)
outs
push
pop
cld
mov
jg
outs
sti
pop
iret
jg
pop
cld
scas
cld
sar
(bad)
sti
aas
jne
out
jp
aas
sub
out
ret
push
std
jns
jmp
cmc
(bad)
jmp
jle
lahf
clc
sti
(bad)
out
pop
test
mov
ja
jg
jg
aad
stc
(bad)
pop
inc
call
fcomip
ja
out
in
das
stos
jle
sar
icebp
out
repz
cs
ja
inc
pop
jge
out
cld
aaa
(bad)
ficomp
imul
sbb
(bad)
pop
std
bts
push
ja
(bad)
out
cld
jmp
lods
mov
(bad)
cdq
pop
jg
stos
aas
div
hlt
(bad)
push
(bad)
mov
jecxz
not
scas
(bad)
fstp
xor
fdivrp
pop
mov
aas
(bad)
mov
push
call
pop
call
pop
(bad)
in
aas
jmp
xchg
jecxz
in
movs
mov
std
sti
aas
repz
sar
jmp
cmc
out
cld
ret
jg
aas
hlt
das
(bad)
jecxz
mov
jmp
std
out
(bad)
mov
arpl
jg
lahf
repz
std
and
inc
mov
pop
xchg
inc
mov
std
pop
mov
call
loope
lock
std
loop
cmc
dec
sti
sti
(bad)
fdivr
stc
ffree
jg
jnp
scas
(bad)
mov
out
aaa
stc
aas
jle
pop
icebp
pop
out
(bad)
(bad)
repnz
std
(bad)
sbb
stc
aas
repnz
call
jmp
idiv
sar
outs
dec
pop
cld
cmps
lds
jl
lahf
(bad)
sub
(bad)
das
jle
jg
aaa
sti
retf
jle
jmp
sti
mov
mov
push
jp
out
ret
jmp
push
out
push
mov
idiv
jg
icebp
pop
hlt
ja
ins
lahf
cld
jmp
jnp
aaa
aas
sti
or
(bad)
int
cld
(bad)
xchg
jg
out
std
dec
jle
aas
jg
hlt
outs
int3
call
rcr
lahf
hlt
aad
jle
das
cld
dec
aas
jp
mov
push
leave
(bad)
pop
hlt
lods
hlt
iret
clc
add
fcmovnu
sti
mov
cmp
(bad)
dec
jg
push
loop
cld
cmps
inc
addr16
cld
push
xchg
aas
std
inc
std
dec
inc
jmp
(bad)
mov
dec
outs
imul
hlt
pop
mov
out
ja
stc
out
(bad)
jmp
(bad)
out
paddd
(bad)
jmp
call
sar
sti
mov
jmp
(bad)
in
pop
repz
sti
daa
call
sti
(bad)
addr16
ins
(bad)
jmp
and
mov
cli
xor
dec
repz
out
inc
jecxz
stc
ja
imul
sti
(bad)
sbb
(bad)
xchg
not
fcomip
ja
dec
mov
(bad)
(bad)
jg
fcomip
or
in
out
cli
or
icebp
mov
js
out
jg
std
daa
idiv
test
inc
jg
xchg
fucomip
pop
cli
pop
jmp
(bad)
das
std
mov
out
mov
ja
xchg
aad
lock
jnp
div
scas
stc
aaa
inc
das
dec
out
cli
arpl
sar
in
(bad)
das
jle
(bad)
inc
jg
(bad)
clc
pop
retf
call
outs
jle
mov
call
(bad)
call
jg
scas
cmc
(bad)
mov
aas
(bad)
loope
cli
mov
std
lahf
stc
out
push
(bad)
jmp
ins
dec
dec
(bad)
fcomp
sti
arpl
(bad)
idiv
cdq
icebp
dec
jl
repz
in
popf
(bad)
in
pop
clc
jge
dec
mov
std
sub
aas
cli
mov
nop
(bad)
cmp
stos
jg
jmp
ud0
std
pop
sti
arpl
(bad)
outs
xchg
push
out
cmc
jnp
jmp
repz
fisub
or
push
das
(bad)
xor
(bad)
(bad)
in
cmp
lahf
clc
(bad)
popf
inc
repz
out
aaa
(bad)
xor
(bad)
aaa
mov
stc
jg
pop
std
bnd
clc
(bad)
jg
repnz
clc
addr16
stc
mov
loop
cli
jmp
lds
cli
xor
jmp
cld
cmp
aas
imul
pop
jl
idiv
movzx
idiv
(bad)
cli
out
aas
test
sti
(bad)
jae
movs
sti
(bad)
fdivr
cmc
pop
repz
int3
imul
(bad)
inc
not
aas
std
or
lahf
rep
std
in
cli
outs
std
xchg
jg
dec
mov
(bad)
out
jg
(bad)
(bad)
sahf
aas
clc
addr16
test
out
push
jg
xor
push
(bad)
mov
cld
jno
in
neg
fcomip
das
sub
pop
cmc
iret
std
push
mov
jl
outs
aas
imul
mov
hlt
scas
cli
sub
(bad)
stc
(bad)
pop
idiv
jmp
mov
in
mov
mov
jmp
mov
(bad)
sub
into
aas
in
cmc
outs
stc
out
cld
stos
pop
leave
pop
repnz
pop
out
dec
call
out
fwait
aas
in
scas
cli
lods
dec
jbe
repnz
icebp
fucomip
iret
clc
pop
jle
(bad)
ja
js
idiv
xor
aas
idiv
mov
push
test
sahf
inc
aas
in
cld
(bad)
cdq
pop
(bad)
call
addr16
jecxz
jmp
mov
pop
inc
(bad)
jmp
in
pop
(bad)
mov
sar
lahf
stc
cdq
aad
push
out
jg
xchg
(bad)
popf
(bad)
call
call
call
outs
idiv
out
ds
(bad)
scas
jg
mov
sar
xor
xor
mov
fist
aas
mul
aaa
cmp
jmp
dec
mov
stc
aaa
cld
inc
dec
mov
fcomip
pop
pop
jmp
clc
fistp
stc
(bad)
(bad)
jmp
int
(bad)
repz
repz
std
movs
dec
aas
mov
fwait
jle
jmp
cli
mov
sub
xchg
mov
mov
mov
mov
mov
cld
in
mov
in
(bad)
std
in
aas
std
fnstsw
popf
std
pop
jg
aas
cmc
sti
inc
jg
out
inc
in
inc
mov
dec
jmp
(bad)
fistp
(bad)
jge
fstp
repnz
(bad)
xchg
lahf
clc
cmp
cmc
(bad)
fnstsw
jmp
scas
(bad)
cmp
sti
jg
fcomip
cmps
cld
imul
mov
icebp
mov
(bad)
lahf
jle
sar
aaa
stc
mov
mov
clc
mov
(bad)
jg
ja
and
inc
(bad)
mov
(bad)
jmp
call
fucomip
(bad)
sti
out
(bad)
cli
pop
sti
(bad)
std
mov
(bad)
fcomip
aaa
sti
or
fcomp
sbb
test
es
pop
not
mov
cmp
das
dec
jmp
jg
std
mov
int
in
clc
jnp
test
jg
aas
in
vmread
push
(bad)
pop
(bad)
sub
jmp
jg
(bad)
mov
mov
(bad)
sti
call
shr
ret
pop
cli
mov
in
(bad)
stos
mov
pop
idiv
out
mov
dec
(bad)
out
stc
lea
(bad)
cld
in
imul
out
out
aas
icebp
xlat
cld
mov
cmc
pop
call
aas
clc
cmp
fldcw
scas
cld
jmp
leave
cld
(bad)
clc
out
(bad)
sti
in
jecxz
loopne
cld
push
scas
pop
push
ret
aas
cli
idiv
jno
mov
idiv
retf
xchg
jg
pop
(bad)
and
loop
lock
ror
push
addr16
mov
jg
jg
lahf
cld
sub
rcr
mov
cs
mov
jg
jg
out
xor
addr16
(bad)
mov
cmc
pop
sti
(bad)
stc
repz
repnz
inc
(bad)
mov
pop
std
inc
int
repnz
jl
cmc
xchg
mov
std
xlat
dec
aas
mov
jg
mov
cmp
(bad)
and
test
repz
cli
sbb
outs
cld
dec
(bad)
pushf
outs
std
cmp
inc
repz
(bad)
stos
aas
repz
call
cli
(bad)
aas
test
idiv
xlat
sti
cmc
call
sbb
std
jg
jg
pop
cld
int
neg
repnz
dec
mov
leave
fistp
imul
(bad)
imul
popf
(bad)
outs
mov
mov
loopne
clc
loop
jg
aas
(bad)
in
jg
push
dec
call
call
out
hlt
fistp
in
jg
scas
jg
lahf
mov
xlat
jmp
aad
sti
scas
(bad)
and
xchg
dec
fstp
sbb
mov
je
(bad)
mov
mov
jmp
pop
sti
pop
(bad)
scas
pop
idiv
(bad)
scas
jnp
clc
leave
jg
jmp
clc
scas
icebp
addr16
std
xchg
mov
in
fldenv
out
psubw
mov
lahf
cld
inc
jg
outs
std
out
popf
jg
icebp
xchg
jmp
push
out
(bad)
push
mov
iret
jg
aas
jb
pop
sti
pop
push
repz
aas
sti
sub
(bad)
jmp
iret
jg
daa
inc
inc
inc
lahf
hlt
dec
push
leave
das
(bad)
out
(bad)
xchg
jg
lahf
cmp
ret
(bad)
(bad)
jg
std
scas
std
(bad)
aad
sti
cli
iret
cli
sar
neg
aad
cld
ins
jmp
(bad)
iret
sti
daa
(bad)
test
aas
(bad)
hlt
(bad)
fistp
ja
or
mov
fucomip
lahf
clc
fnstsw
jmp
cmc
mov
lahf
(bad)
repnz
jmp
in
pop
(bad)
pop
(bad)
mov
(bad)
icebp
mov
jle
mov
(bad)
mov
cld
ret
jmp
in
inc
lea
outs
fwait
call
pop
hlt
out
cld
sub
mov
dec
push
out
repz
aas
push
mov
jmp
bnd
ud0
retf
jg
push
dec
neg
int3
dec
(bad)
(bad)
clc
(bad)
or
repz
adc
out
jg
push
std
jecxz
(bad)
outs
idiv
sar
(bad)
sahf
push
(bad)
dec
icebp
iret
cld
fsubr
mov
pop
cmc
pop
inc
(bad)
fisub
(bad)
jnp
(bad)
pop
out
(bad)
in
jecxz
cmc
mov
call
addr16
push
fnstsw
leave
out
clc
cmps
push
mov
mov
scas
(bad)
movs
mov
fstp
push
mov
outs
call
retf
repnz
(bad)
in
ja
dec
(bad)
(bad)
std
mov
(bad)
fdivr
out
paddw
dec
jg
lahf
cld
push
(bad)
cld
loop
stc
int
(bad)
lahf
std
cmp
(bad)
aad
pop
call
cmps
jg
call
test
sti
outs
cs
mov
neg
ins
dec
inc
outs
cmp
dec
jmp
push
xchg
dec
inc
jmp
pushf
mov
shr
hlt
out
(bad)
ds
jmp
pop
nop
inc
xchg
jle
fucomip
iret
cli
push
jg
(bad)
out
retf
dec
(bad)
aam
call
scas
cs
repnz
mov
xlat
call
(bad)
jg
(bad)
call
jg
out
hlt
lahf
(bad)
cmp
pop
cld
imul
mov
test
(bad)
scas
ja
ins
sti
cld
mov
repz
std
jns
dec
pop
div
dec
cld
(bad)
cdq
(bad)
(bad)
in
jg
xor
jg
mov
imul
cld
leave
xchg
xlat
(bad)
mov
call
lahf
cld
ja
(bad)
(bad)
repnz
pop
in
(bad)
mov
jmp
cwde
pop
imul
call
mov
addr16
popf
cld
cmps
mov
push
idiv
test
dec
popf
push
jmp
ja
fidivr
(bad)
sti
mov
std
dec
pop
(bad)
clc
(bad)
(bad)
mov
les
clc
outs
jmp
jle
leave
outs
repnz
cld
rcr
(bad)
std
lods
mov
in
aas
mul
pop
cli
lods
(bad)
mov
jecxz
sti
(bad)
inc
stos
leave
mov
icebp
ficomp
cmc
lahf
inc
loopne
std
ret
(bad)
fcomp
scas
dec
aas
imul
lahf
(bad)
in
(bad)
stos
lds
call
(bad)
(bad)
pop
call
out
cld
mov
jle
aas
in
outs
mov
dec
dec
adc
inc
inc
outs
cld
xchg
jmp
out
loope
icebp
lahf
call
xlat
jg
jg
call
jl
repnz
std
mov
pop
pop
cld
outs
jg
dec
push
jg
outs
repz
stos
mov
add
cli
aaa
jmp
(bad)
jg
mov
xchg
push
out
imul
(bad)
cmp
mov
aas
out
cli
push
mov
jg
sub
pop
das
cld
dec
jg
pop
hlt
out
pop
mov
dec
jg
aas
repz
jmp
(bad)
scas
sti
scas
(bad)
stc
jmp
(bad)
jg
inc
jmp
aaa
pop
inc
clc
outs
mov
neg
jg
lahf
push
cmp
lahf
mov
inc
cld
dec
(bad)
lods
(bad)
jle
fucomip
jg
div
call
das
jmp
idiv
in
clc
out
sti
adc
clc
sti
jg
stos
(bad)
pop
cli
arpl
fwait
(bad)
jnp
cmc
outs
repnz
(bad)
fistp
aas
imul
lahf
sti
retf
call
(bad)
jecxz
in
iret
std
fdivrp
cld
ja
rcr
out
(bad)
pop
ds
leave
aas
jmp
stc
jne
scas
fbstp
scas
(bad)
out
out
cli
sti
mov
call
cmps
cld
fcomp
jg
scas
ds
jmp
in
aad
stc
aaa
xor
fstp
std
imul
mov
aaa
dec
mov
(bad)
fidivr
cld
xchg
(bad)
(bad)
sar
in
stc
mov
xchg
btc
cmp
jg
stos
jmp
push
jg
scas
icebp
cli
out
(bad)
pop
jmp
aas
clc
mov
out
cld
mov
pop
clc
sbb
inc
repnz
cld
pop
mov
jg
psubq
dec
call
sub
pop
clc
cmp
call
lods
aas
jmp
cli
pop
jg
(bad)
aaa
jmp
(bad)
jmp
jecxz
fs
mov
mov
dec
(bad)
cmps
push
ja
aad
out
cld
push
dec
cli
ficomp
pop
call
loopne
cli
jne
pop
repnz
(bad)
mov
idiv
cld
mov
jnp
icebp
outs
sti
aas
cld
fistp
ja
jmp
add
test
stc
(bad)
cli
sti
pop
pop
(bad)
std
jg
aas
push
cld
loope
in
sti
outs
(bad)
pop
inc
dec
std
cmps
mov
inc
hlt
idiv
scas
jg
scas
(bad)
jecxz
call
clc
pop
in
(bad)
sar
scas
(bad)
out
mov
das
pop
dec
(bad)
mov
in
(bad)
fnstsw
scas
clc
jnp
rcr
pop
jg
(bad)
cld
pop
out
leave
pop
repnz
cld
(bad)
jmp
pop
clc
out
scas
push
pop
cli
(bad)
int3
inc
jg
jb
pop
ds
sar
out
(bad)
(bad)
stc
scas
mov
mov
jg
(bad)
mov
loop
mov
mov
mov
fistp
cmps
es
stos
push
(bad)
(bad)
xchg
mov
(bad)
fcos
in
lahf
(bad)
in
mov
mov
jg
out
stc
cmps
stc
out
aas
cmc
stc
addr16
jg
xor
in
mov
push
mov
jg
jecxz
jg
scas
call
fdivrp
jge
out
aas
in
clc
push
jg
fcomip
mov
cli
aaa
sti
fcomi
(bad)
mov
stc
lods
mov
(bad)
out
(bad)
loope
repz
fistp
aas
out
(bad)
dec
stc
repz
(bad)
cli
das
jmp
dec
jmp
mov
(bad)
not
inc
call
(bad)
stc
rol
mov
inc
aas
hlt
cmps
fdivrp
push
jg
out
clc
lds
hlt
xlat
dec
dec
inc
das
mov
outs
idiv
dec
sti
ja
rcr
cld
out
idiv
mov
inc
out
repz
jmp
cli
aaa
std
mov
in
lock
(bad)
out
(bad)
push
iret
push
mov
(bad)
es
jg
jmp
repz
clc
scas
jg
mov
lds
mov
call
das
std
retf
das
sti
addr16
jmp
stos
pop
lock
pop
call
clc
arpl
aad
cld
pop
cld
int
(bad)
jge
enter
(bad)
jbe
jg
jg
(bad)
and
(bad)
out
cld
lods
push
cld
aas
stc
jae
jnp
jg
mov
outs
fwait
out
std
fidivr
pop
pop
cmp
das
jg
(bad)
hlt
scas
cld
or
retf
jle
mov
pop
dec
scas
cld
xchg
(bad)
mov
(bad)
repz
out
clc
mov
das
(bad)
cdq
xor
(bad)
out
in
jg
fisttp
loop
sti
stos
push
(bad)
std
aas
jmp
out
pushf
inc
fwait
(bad)
es
jg
push
cli
in
mov
jmp
ret
lahf
lock
scas
cmc
lahf
(bad)
mov
lahf
hlt
pop
(bad)
cmp
cs
fcomip
dec
clc
xchg
inc
jg
aas
jno
clc
daa
std
repz
(bad)
pop
mov
div
aas
pop
(bad)
mov
cld
out
jg
aas
neg
(bad)
mov
(bad)
fwait
retf
pop
(bad)
hlt
rcl
lahf
jmp
fistp
jmp
jg
das
sti
sbb
out
cli
or
jg
(bad)
clc
ins
jle
cmp
xchg
jle
retf
call
popf
jnp
loop
dec
(bad)
adc
sti
clc
xchg
push
mov
or
stos
pop
sti
sub
fsub
stc
(bad)
lds
(bad)
jae
(bad)
lahf
jge
ja
inc
dec
(bad)
out
mov
aas
loop
dec
lds
cli
jge
mov
das
repz
clc
das
dec
jg
jae
retf
jg
std
jnp
dec
jg
std
fistp
(bad)
dec
jle
pop
std
iret
cld
mul
call
aas
cli
mov
ds
std
sbb
int3
das
mov
daa
mov
jmp
jg
lahf
cld
(bad)
mov
idiv
inc
jg
pop
mov
repnz
dec
(bad)
mov
std
(bad)
inc
pop
cld
mov
enter
dec
clc
jg
std
mov
call
lahf
cld
in
mov
jmp
mov
jg
lahf
cmc
out
xchg
push
jg
sti
cld
mov
jg
pop
(bad)
cmp
cmc
lahf
movs
mov
cld
idiv
jmp
aas
sti
xor
hlt
lahf
clc
(bad)
cmps
lods
jg
scas
cmp
int
aad
cmc
jg
mov
pop
call
stos
cli
(bad)
scas
inc
mov
xchg
jg
mov
lods
scas
jmp
lods
in
idiv
(bad)
ja
(bad)
jg
fistp
clc
retf
ds
aas
jmp
cmc
aaa
dec
shr
sahf
std
ins
mov
std
in
jg
mov
mov
jmp
(bad)
mov
call
jle
out
fistp
(bad)
(bad)
(bad)
cld
(bad)
in
dec
loope
lahf
(bad)
cli
jg
(bad)
call
das
sti
mov
dec
std
aas
cld
loopne
pop
std
daa
inc
fcomip
fistp
sub
mov
icebp
pop
cld
sub
retf
cmp
pop
mov
ret
data16
(bad)
scas
mov
repnz
jg
jmp
ret
inc
(bad)
xchg
jg
iret
clc
scas
jg
(bad)
jmp
cmp
aas
out
(bad)
(bad)
call
loopne
dec
jle
jg
aas
push
push
jg
cmps
call
fwait
push
jg
pop
call
(bad)
jg
mov
jecxz
xor
push
jmp
outs
hlt
inc
cld
inc
call
pop
(bad)
ja
jg
mov
xlat
dec
out
jg
xchg
mov
mov
inc
pop
lock
jg
sti
(bad)
lock
dec
sti
fisttp
(bad)
cmp
loope
std
dec
push
movq
test
clc
out
outs
(bad)
jmp
and
loope
in
push
jmp
std
xor
dec
cld
idiv
repz
inc
idiv
lds
mov
outs
push
mov
sar
std
pop
arpl
xlat
std
retf
jmp
pop
hlt
pop
push
mov
clc
addr16
mov
idiv
leave
pop
jg
(bad)
jnp
stos
call
dec
jg
das
(bad)
stos
(bad)
mov
cmp
(bad)
cli
xchg
std
jbe
jo
out
(bad)
fnstcw
iret
mov
and
cdq
fnstsw
das
clc
mov
push
pop
hlt
jg
into
scas
fwait
aas
call
repnz
in
jle
pop
jge
mov
cld
in
std
mov
popf
call
lock
imul
jge
mov
jg
aas
stc
adc
mov
loopne
std
and
out
cli
iret
dec
paddd
paddd
fidiv
(bad)
je
sar
stc
outs
repz
dec
mov
xlat
xor
fwait
jmp
stos
pop
cli
call
mov
aas
stc
pop
(bad)
in
jg
mov
xchg
aas
out
pop
jl
jecxz
out
std
dec
fstp
jg
sar
jg
(bad)
jae
jg
scas
neg
(bad)
xlat
jg
out
repnz
ja
jae
mov
jmp
fcomip
(bad)
pop
push
das
(bad)
icebp
aas
not
cld
scas
(bad)
(bad)
repnz
ficomp
jg
pop
mov
sti
popf
jg
jg
retf
cli
scas
cli
repz
mul
pop
(bad)
cmps
mov
pop
jg
out
mul
(bad)
outs
retf
adc
mov
(bad)
aam
bnd
mov
jle
das
iret
(bad)
in
std
jg
out
jle
xlat
ins
std
inc
mov
add
ret
mov
jg
mov
(bad)
stc
mov
mov
std
fsubr
push
mov
mov
lods
(bad)
(bad)
xlat
mov
(bad)
jecxz
xlat
cli
lea
jg
fcomip
pop
pushf
pop
dec
ficomp
inc
mov
jg
paddd
inc
cli
dec
int
ret
scas
jge
xchg
jg
outs
stc
idiv
inc
jg
scas
repz
lahf
jg
(bad)
iret
dec
fcomp
xchg
inc
push
repnz
cld
aaa
push
aaa
jg
aas
stc
pop
std
mov
xchg
jge
idiv
aas
push
mov
(bad)
xchg
jg
mov
cli
pop
cld
cmp
outs
std
inc
std
outs
jmp
aas
cmc
popf
das
call
pop
push
pop
cmp
sti
test
addr16
sub
enter
pop
(bad)
mov
shl
push
out
jle
das
sbb
(bad)
(bad)
ret
iret
call
jb
pop
mov
int
(bad)
stos
push
std
xchg
jg
lahf
clc
or
xchg
aas
cld
(bad)
pop
sahf
ds
sbb
push
(bad)
popf
mov
jmp
fdivr
dec
jmp
cld
cmp
jg
fcomip
aaa
call
iret
pop
mov
or
lahf
sti
add
mov
(bad)
stc
mov
cld
or
jg
in
fnstcw
jmp
mov
pop
jmp
lahf
mov
neg
xlat
mov
(bad)
cld
das
jmp
push
sti
jg
mov
fsubr
repz
cld
mov
jle
mov
pop
cld
and
jle
mov
push
out
pop
std
jne
jmp
clc
ja
jg
ja
shl
mov
repz
sti
paddd
pop
jmp
sti
jne
sti
jnp
jle
mov
(bad)
inc
inc
(bad)
jmp
mov
stc
out
push
(bad)
push
jg
pop
repnz
addr16
fistp
retf
aas
out
stc
aaa
call
dec
inc
(bad)
ja
lahf
jle
repz
aas
jmp
jmp
mov
repz
icebp
das
stc
ja
repnz
cld
xchg
aas
stc
cmp
mov
push
jg
outs
repnz
cld
(bad)
lahf
push
jmp
mov
fwait
cld
addr16
outs
stc
xchg
retf
(bad)
(bad)
jmp
(bad)
sti
lahf
sub
pushf
(bad)
ja
pop
jle
aas
loopne
jp
out
stc
xchg
jg
jmp
push
cld
mov
aas
inc
outs
lock
cld
(bad)
aas
cmc
mov
push
aas
clc
xchg
(bad)
in
mov
(bad)
jmp
jg
pop
std
iret
(bad)
cmp
fstp
rcr
jae
fnstsw
push
mov
(bad)
cmps
fucomip
idiv
aaa
jg
(bad)
aas
cmp
sub
addr16
imul
rcr
(bad)
mov
in
cmc
fiadd
jae
sti
fcomip
(bad)
jmp
repz
icebp
xlat
stc
push
das
dec
jg
pop
mov
(bad)
mov
std
in
(bad)
movs
jmp
hlt
jg
sar
in
aam
js
jg
clc
stos
push
dec
in
hlt
pop
cld
push
xchg
jmp
scas
cld
std
(bad)
out
icebp
out
not
movs
jecxz
pop
std
cmp
cli
push
jg
aas
cmc
scas
std
scas
jg
(bad)
std
aaa
mov
(bad)
pushf
jg
das
(bad)
daa
push
pop
(bad)
fstp
pop
(bad)
jmp
mov
jle
(bad)
jge
stc
mov
jecxz
clc
mov
call
(bad)
mov
jg
iret
clc
rcr
outs
cld
lods
call
aad
jle
mul
cmp
stc
aas
dec
jg
cli
jg
stc
xor
(bad)
out
lahf
cmc
aas
dec
mov
cld
inc
fnstcw
repz
repnz
std
clc
in
pop
std
iret
idiv
aas
jmp
dec
cmps
pop
stos
stc
jne
cld
out
jg
jg
lds
mov
std
pop
(bad)
gs
cld
jecxz
(bad)
repnz
scas
jg
aaa
dec
jg
stos
jg
(bad)
clc
xor
daa
call
jg
aaa
(bad)
pop
dec
(bad)
(bad)
stc
in
(bad)
xchg
stos
jmp
aaa
into
jle
pop
call
push
xchg
std
in
jg
mov
in
cld
mov
stc
out
cli
pop
xor
enter
ds
out
dec
mov
(bad)
outs
inc
mov
stos
jg
outs
jmp
sbb
pop
jecxz
iret
sti
mov
xchg
pop
jmp
(bad)
pop
(bad)
loop
aad
cli
idiv
(bad)
sti
aas
icebp
(bad)
jmp
push
daa
push
jg
dec
std
mov
std
jae
repz
pushf
out
sahf
jge
dec
std
sbb
(bad)
pop
std
int
std
cmc
mov
pop
(bad)
(bad)
mov
loopne
aas
fsincos
in
pop
dec
dec
fistp
lods
lahf
jns
fwait
ins
inc
out
aas
cli
jge
jmp
mov
retf
aas
out
rcr
mov
stc
jnp
vmovdqu
cmp
into
jmp
mov
xchg
jg
outs
repz
(bad)
stc
jg
pop
idiv
jmp
(bad)
out
das
stc
xchg
xchg
jg
xlat
sub
sti
icebp
out
repnz
mov
repnz
sti
aas
(bad)
mov
hlt
cmps
lahf
cld
xchg
icebp
fcomip
sbb
sbb
pop
clc
cmps
scas
jg
loop
cli
dec
dec
mov
jg
(bad)
inc
jg
iret
enter
jecxz
(bad)
sbb
out
loop
cld
fimul
jle
jmp
outs
stc
sub
cli
mov
dec
scas
cli
iret
into
jg
(bad)
pop
cld
jecxz
into
mov
test
cmc
iret
mov
loop
jmp
aas
out
sti
pop
scas
scas
out
(bad)
stos
fucomip
fstp
lahf
jae
stos
jle
jmp
mov
fbld
stc
xor
movs
push
pop
jg
(bad)
jmp
sar
loop
clc
mov
sti
cli
mov
inc
(bad)
xchg
jg
mov
hlt
mov
jge
inc
call
(bad)
(bad)
idiv
inc
mov
out
sti
cmp
jg
out
cli
pop
pop
(bad)
push
inc
outs
nop
push
aas
cmc
lods
(bad)
inc
pop
lock
(bad)
mov
mov
jg
(bad)
mov
lahf
jg
call
lods
mov
xchg
leave
iret
cld
jecxz
retf
fist
jg
sti
ds
je
xchg
std
xchg
iret
jbe
jmp
sar
aas
aaa
stc
xchg
jle
aas
idiv
mov
aam
jecxz
clc
loop
cs
xchg
jg
sti
out
fwait
pop
call
pop
idiv
cmps
dec
aas
cmc
arpl
rcr
cld
dec
ja
aad
out
cld
(bad)
dec
jle
(bad)
jmp
(bad)
jmp
(bad)
sti
movs
jg
jmp
jmp
imul
cld
cmps
jmp
jg
mov
mov
pop
idiv
repnz
jnp
ret
(bad)
(bad)
fwait
outs
sbb
scas
stc
pop
push
iret
call
std
jmp
(bad)
push
pop
cmc
lock
cmc
dec
cld
(bad)
(bad)
das
mov
(bad)
in
psubw
outs
stc
pop
push
jg
aas
dec
and
pop
fdivrp
sub
mov
cmc
(bad)
repz
das
stc
ins
(bad)
mov
clc
fwait
mov
sahf
aam
stc
test
mov
cmps
mov
std
repnz
int
ja
mov
scas
aas
hlt
lahf
stc
out
pop
(bad)
(bad)
jg
xlat
(bad)
push
mov
lahf
std
aad
in
jg
stos
in
push
iret
std
dec
push
cmp
icebp
daa
jg
scas
std
pop
jg
outs
fdivr
jp
out
scas
retf
(bad)
aad
clc
lahf
repnz
cmps
call
movs
fild
fcmovnbe
aas
neg
cmp
ja
in
test
mov
in
cld
mov
(bad)
aas
call
jg
fcomip
scas
inc
mov
sar
jmp
(bad)
push
mov
sar
scas
stc
call
bnd
mov
out
jle
mov
mov
pop
cld
(bad)
inc
scas
paddd
jg
pop
clc
dec
pop
cli
retf
mov
mov
call
mov
out
(bad)
(bad)
cmp
pop
stc
into
outs
repz
jg
iret
stc
sbb
mov
in
(bad)
pop
(bad)
mov
jle
pop
clc
iret
pop
jmp
jg
aas
(bad)
scas
std
outs
(bad)
(bad)
pop
(bad)
fcomp
sbb
jns
retf
scas
sahf
(bad)
jbe
sar
(bad)
cmp
ret
(bad)
sti
aaa
sti
(bad)
call
stc
mov
xchg
outs
std
fst
test
(bad)
pop
stc
pop
cld
aaa
std
mov
shr
pop
std
das
jg
mul
cld
fwait
jg
jmp
ja
clc
jecxz
loope
repz
out
loop
call
sti
jmp
stos
dec
(bad)
sti
mov
outs
(bad)
in
call
(bad)
jmp
cmc
pop
cld
xor
jg
mov
out
repnz
mov
lahf
push
mov
jg
std
pop
out
outs
sti
fucomip
cld
cmp
push
cld
inc
jg
pop
jmp
and
dec
cli
rol
popf
(bad)
in
pop
jp
sbb
inc
mov
jg
fcomip
scas
std
addr16
mov
fild
(bad)
jmp
cli
in
dec
icebp
(bad)
cli
call
jmp
aad
std
push
std
mov
(bad)
std
push
cld
jmp
dec
jmp
cmps
cmps
(bad)
sti
fldcw
idiv
ja
test
jle
out
dec
dec
outs
icebp
or
aas
icebp
daa
mov
aas
icebp
das
cld
repz
cmc
outs
jmp
cli
pop
jle
jmp
mov
jg
mov
mov
std
inc
mov
mov
out
cld
stos
jmp
stc
dec
inc
scas
(bad)
call
push
std
jecxz
(bad)
jp
hlt
push
std
push
fstp
mov
mov
(bad)
jge
into
aas
std
(bad)
call
rcr
pop
(bad)
push
fst
(bad)
std
jg
dec
push
aas
jmp
(bad)
xor
lds
test
cld
push
mov
out
xchg
mov
jl
mov
std
(bad)
xchg
cmp
pop
lock
(bad)
mov
in
mov
jnp
pop
scas
jbe
call
mov
out
mov
mov
cli
pop
sti
pop
sar
sti
jne
out
jmp
call
mov
lahf
sti
jnp
xchg
jg
sahf
in
dec
dec
cmc
scas
jl
mov
jg
out
cld
dec
push
jecxz
jmp
mov
(bad)
lds
aas
call
dec
(bad)
std
or
(bad)
jg
mov
(bad)
(bad)
out
iret
(bad)
mov
sti
scas
lahf
cld
sub
std
push
(bad)
fdivr
clc
pop
cld
(bad)
jg
fwait
mov
iret
xor
addr16
out
mov
idiv
pop
cmps
aas
cmc
(bad)
pop
in
std
sar
jno
pop
(bad)
push
iret
stos
xchg
cmps
jg
jg
xchg
cld
(bad)
outs
xchg
fcomip
int
lahf
stc
out
out
lock
std
pop
jg
fistp
jg
(bad)
push
(bad)
stc
outs
std
dec
jg
mov
fcomip
lahf
popf
call
out
lock
out
lahf
ins
jg
aas
out
stc
addr16
jg
aas
cmc
push
(bad)
push
jg
or
jg
aas
sti
jmp
hlt
(bad)
scas
repz
dec
std
dec
(bad)
cli
sti
dec
jg
cmc
lahf
not
mov
(bad)
sub
pop
cld
dec
jg
das
call
daa
(bad)
fdivrp
pop
stc
paddd
scas
icebp
sti
std
aaa
mov
(bad)
daa
mov
lds
cli
movs
mov
clc
mov
cmc
dec
jg
in
cli
jecxz
mov
mov
cld
cmps
pop
jle
jg
stc
mov
jle
cld
mov
icebp
cmps
sub
lea
fist
adc
mov
dec
pop
das
out
cld
cmp
clc
addr16
fidivr
sti
mov
pop
(bad)
call
aas
call
push
jle
pop
std
lds
mov
cmp
repnz
cli
aas
(bad)
scas
cli
loopne
cld
(bad)
jg
pop
clc
or
out
jmp
jg
clc
pop
call
das
jle
sti
fstp
(bad)
out
repnz
std
jp
out
addr16
aad
std
fwait
(bad)
and
fidivr
icebp
(bad)
inc
(bad)
cmc
push
inc
pop
call
scas
std
out
(bad)
cmp
les
call
stc
inc
jg
aas
mov
aas
cmc
pop
clc
xchg
stos
mov
aas
std
in
push
jg
icebp
aas
sti
(bad)
loopne
cld
std
jle
push
pop
pop
dec
mov
(bad)
fidivr
std
adc
(bad)
clc
ja
cdq
pop
dec
fistp
push
mov
call
aaa
cld
xchg
(bad)
cld
iret
dec
(bad)
mov
out
cmp
fwait
repnz
aas
clc
paddw
jmp
jmp
sar
sti
(bad)
cli
jmp
loope
jg
lahf
jmp
outs
std
(bad)
mov
dec
(bad)
out
jg
lahf
stc
jae
pop
repnz
cli
fistp
std
daa
out
rcr
repz
mov
(bad)
mov
std
fstp
in
std
jns
out
pop
lock
dec
jg
pop
jbe
je
std
add
lahf
neg
(bad)
out
call
(bad)
jmp
in
aas
test
mov
lods
(bad)
cmc
out
pop
jmp
ror
std
(bad)
aas
cld
xchg
cld
cmps
jg
sub
xlat
fucomip
outs
stc
out
das
cli
push
aas
std
retf
push
mov
inc
fdivrp
lea
dec
aas
mov
mov
(bad)
(bad)
jle
lahf
clc
loop
cli
gs
jmp
icebp
loope
popf
jmp
iret
cld
or
repnz
das
(bad)
mov
pop
cld
out
jg
mov
pop
std
pop
stos
cmc
aas
hlt
push
push
scas
sti
pop
jge
das
cld
fdivrp
sar
cli
fwait
(bad)
mov
jne
iret
push
jg
sar
cmp
outs
std
or
(bad)
jg
into
outs
cmc
outs
inc
dec
paddw
cmp
call
lahf
icebp
mov
mov
xchg
pop
out
aas
cld
push
(bad)
(bad)
jg
mov
repz
ret
xchg
mov
pop
inc
aas
loopne
cli
(bad)
jg
jg
jo
mov
jg
mov
cmps
jmp
pop
outs
(bad)
shr
ja
mov
sub
(bad)
stc
das
jle
xchg
std
jno
fdivr
lock
enter
mov
(bad)
jg
(bad)
(bad)
fcmovnbe
jg
dec
sahf
jmp
mov
pop
jmp
addr16
std
pop
mov
mov
ret
scas
pop
cld
mov
(bad)
jge
mov
test
iret
cld
fnsave
(bad)
(bad)
mov
idiv
(bad)
aaa
clc
sar
hlt
jmp
mov
cld
mov
dec
inc
mov
cld
pop
(bad)
mov
pop
std
or
sti
(bad)
mov
inc
je
aaa
sti
push
(bad)
ror
repz
sti
jge
cmps
jg
(bad)
clc
(bad)
(bad)
test
jg
das
(bad)
stos
stos
(bad)
call
mov
jle
stc
pop
popf
(bad)
cmp
mov
(bad)
in
pop
out
cld
sbb
mov
in
mov
fdivrp
pop
(bad)
fcomp
lock
into
jmp
lahf
dec
mov
jmp
cli
aas
sti
sbb
mov
gs
stc
aas
sti
pop
(bad)
popa
out
fidivr
jg
pop
cld
and
sub
loopne
aad
mov
fld1
lahf
cli
(bad)
pop
sti
in
aas
cld
mov
push
push
inc
das
cli
mov
sti
ja
xlat
aas
in
idiv
addr16
icebp
jmp
jg
outs
push
mov
std
fstp
(bad)
in
rcr
std
cmc
jmp
sti
das
jns
inc
dec
(bad)
loope
rcr
test
clc
scas
pop
jmp
dec
mov
(bad)
in
stos
fcomip
iret
inc
repz
mov
std
jmp
xchg
mov
(bad)
fdivrp
xchg
jg
ret
inc
push
(bad)
fdivrp
fcmovnu
out
lahf
sti
adc
pop
cli
pop
sahf
std
mov
call
out
(bad)
xor
mov
lahf
clc
lahf
fdivrp
loop
in
inc
jg
jg
(bad)
js
(bad)
aaa
std
pop
mov
icebp
mov
pop
cld
sti
jle
(bad)
jmp
in
repz
mov
inc
mov
das
stc
pop
dec
fcomip
aaa
retf
(bad)
mov
mov
pop
mov
std
fwait
jg
aas
jecxz
aas
std
out
jg
not
es
inc
mov
in
(bad)
cld
mov
sbb
pop
lock
(bad)
pop
jg
aas
jbe
xchg
int
sti
lahf
stc
daa
cld
add
cld
imul
std
retf
jle
jecxz
icebp
pop
stos
(bad)
(bad)
(bad)
sti
jnp
std
fnstsw
aas
call
cmp
call
(bad)
aas
out
loopne
jge
(bad)
aaa
mov
repnz
std
jnp
xchg
(bad)
push
(bad)
sub
out
icebp
scas
lahf
(bad)
mov
cmc
(bad)
cld
push
mov
call
jmp
out
pushf
std
das
pop
std
jle
call
lea
repnz
stc
das
cli
(bad)
outs
sar
pop
jg
aas
stc
daa
lahf
popf
cld
jnp
lock
cli
outs
sar
scas
stc
das
stos
aas
cld
aaa
(bad)
loop
sahf
dec
out
paddb
(bad)
xchg
stc
aas
call
mov
pop
lock
sub
stos
aaa
cmp
scas
sti
xchg
leave
jg
mov
(bad)
fstp
cld
(bad)
jge
scas
cld
mov
rcl
(bad)
inc
inc
jg
mov
clc
jmp
out
jmp
jmp
pop
dec
jmp
jnp
xlat
mov
mov
(bad)
jmp
das
sti
test
outs
sti
out
xchg
mov
add
iret
(bad)
in
aas
out
das
clc
cmp
mov
fmul
aas
sti
mov
je
jmp
stc
in
aas
cmp
cmp
iret
cli
sti
(bad)
cld
(bad)
clc
ins
cli
xor
inc
mov
cld
add
clc
div
scas
jg
out
sti
addr16
aas
sub
out
pop
cld
paddd
jg
out
cmc
imul
cld
inc
(bad)
jmp
push
jg
jg
jl
(bad)
call
aas
neg
mov
jmp
iret
jmp
pop
div
sub
leave
cmc
push
dec
in
div
stc
addr16
jmp
inc
aas
call
xchg
pop
(bad)
fsubr
pop
inc
cmps
mov
mov
bound
(bad)
mov
add
mov
mov
dec
cld
ja
cmc
(bad)
sahf
dec
mov
mov
or
test
mov
(bad)
out
js
dec
fdivrp
test
(bad)
(bad)
cmp
fcomip
jnp
xchg
jmp
pop
call
cld
jns
jg
outs
push
cld
mov
sar
lock
push
(bad)
inc
pop
(bad)
cmp
(bad)
or
clc
in
out
clc
xchg
out
std
jmp
idiv
(bad)
stc
mov
call
jecxz
lock
psubw
(bad)
lahf
cld
jecxz
loop
(bad)
xchg
jg
push
jmp
(bad)
das
clc
aaa
dec
das
dec
std
adc
xor
pop
cld
mov
(bad)
(bad)
stos
lahf
clc
ins
jg
mov
out
stc
mov
inc
mov
jg
rep
(bad)
sahf
dec
loop
cmc
adc
push
repnz
jle
aas
icebp
xchg
jg
dec
jnp
icebp
outs
idiv
mov
mov
inc
mov
push
inc
(bad)
stc
lahf
cli
sub
jle
stos
jg
cmps
(bad)
fcos
out
call
idiv
pushf
mov
in
iret
stc
das
jle
scas
(bad)
sti
std
mov
into
fcomip
das
jle
out
out
pop
repz
sti
lea
jmp
jns
sti
jge
lock
out
hlt
outs
cld
daa
iret
jg
mov
jmp
aas
cmc
idiv
dec
mov
sti
std
cmp
fld
sub
aam
(bad)
out
stc
xchg
dec
(bad)
stos
(bad)
std
push
std
and
lock
fwait
aas
std
loop
enter
mov
inc
jmp
jg
jg
mov
cli
sub
adc
icebp
sar
dec
xlat
mov
lahf
(bad)
xchg
pop
jmp
iret
imul
cld
inc
push
lock
xlat
dec
jo
(bad)
stc
aas
mov
clc
idiv
lods
das
(bad)
sti
jg
cmps
jg
jmp
out
cmovp
xchg
mov
das
dec
jg
pop
mov
pop
jg
(bad)
int
mov
loopne
jge
aad
cld
std
mov
jle
mov
lahf
call
fidivr
idiv
(bad)
pop
mov
sti
sub
mov
repz
mov
call
cmp
dec
mov
into
call
dec
push
jle
out
icebp
xchg
div
jg
mov
mov
jmp
das
clc
out
test
clc
das
cld
jecxz
jge
lahf
jmp
xchg
push
pop
call
mov
(bad)
mov
mov
fist
mul
dec
fcmove
cld
sbb
dec
mov
(bad)
sbb
repz
(bad)
jmp
icebp
mov
popf
jg
ja
(bad)
jmp
loope
cmp
repz
scas
jg
mov
repz
in
cli
stos
dec
loopne
stc
cmps
call
dec
std
arpl
xchg
test
test
scas
cmc
pop
cld
stc
lahf
aas
jl
div
cmp
mov
(bad)
in
stc
stos
jg
outs
mov
shr
imul
pop
(bad)
adc
cmps
cld
pop
jg
outs
(bad)
(bad)
sbb
idiv
daa
jmp
mov
(bad)
jg
aas
out
call
dec
rcr
cli
out
(bad)
sar
jg
jg
pop
dec
jg
pop
(bad)
daa
cmp
(bad)
jnp
mov
clc
push
jg
xor
neg
dec
std
jle
aad
(bad)
clc
scas
push
pop
hlt
ja
hlt
(bad)
jmp
fisubr
hlt
aaa
sti
aas
jle
retf
aas
repnz
mov
hlt
pop
std
mov
dec
(bad)
mov
sar
cld
es
out
cdq
(bad)
fistp
aas
std
call
(bad)
jecxz
repnz
(bad)
cmc
dec
ds
pop
fdivrp
sar
(bad)
out
jg
cld
mov
stos
pop
lock
inc
jg
aas
jmp
xchg
jg
iret
jl
(bad)
(bad)
out
jecxz
dec
daa
call
stc
jg
sti
out
(bad)
push
aas
icebp
(bad)
xor
cli
call
neg
call
pop
pop
cld
add
out
sti
jg
rcr
cld
push
(bad)
mov
outs
(bad)
cld
aas
in
ja
xchg
xchg
sar
sti
mov
mov
cmp
cld
fdivr
imul
jmp
(bad)
jg
(bad)
cwde
jmp
jg
out
hlt
iret
cld
aaa
stos
jmp
outs
dec
dec
cld
pop
(bad)
cwde
lahf
(bad)
sbb
(bad)
std
lahf
push
std
cmp
mov
int
mov
inc
jg
std
jg
scas
clc
sti
jg
stc
pop
hlt
pop
(bad)
stos
mov
aas
mov
cld
mov
inc
mov
clc
out
jg
(bad)
(bad)
(bad)
scas
push
mov
mov
(bad)
cld
mov
loop
lahf
cmc
outs
std
pop
mov
mov
ja
cli
add
scas
jg
push
(bad)
std
push
call
in
jmp
push
into
ficomp
stos
push
das
inc
(bad)
idiv
aas
stc
dec
dec
jge
mov
(bad)
pop
(bad)
lahf
(bad)
dec
jg
push
push
mov
int
fdivr
jg
pop
std
movs
mov
std
iret
fistp
stc
adc
dec
aas
js
xlat
cld
int
(bad)
xor
mov
repnz
std
iret
fs
ret
stos
aas
gs
cld
mov
stc
movq
push
outs
cld
lea
(bad)
mov
push
cld
mov
iret
(bad)
fdivr
out
scas
std
dec
jg
mov
out
mov
sbb
dec
jg
pop
hlt
repnz
fs
iret
dec
pop
cld
push
mov
retf
hlt
in
paddd
loopne
xlat
stc
sbb
test
in
idiv
stos
mov
fcomip
icebp
aas
repz
std
cmp
pop
(bad)
jle
in
pop
dec
(bad)
fdivr
scas
cli
test
(bad)
pop
jg
aas
icebp
(bad)
jle
(bad)
adc
jmp
sbb
loope
(bad)
arpl
jnp
out
call
pop
jle
aas
div
not
fstp
icebp
aaa
cld
(bad)
mov
xchg
outs
push
fistp
out
jmp
cmp
fnstsw
loop
std
jnp
dec
jg
jge
jnp
hlt
ja
scas
jg
pop
cli
xchg
jle
(bad)
jge
stc
jg
scas
fdivrp
cmps
jle
mov
(bad)
scas
aas
cld
out
clc
cdq
mov
iret
jg
jg
lahf
call
repnz
(bad)
aaa
out
lock
sti
stc
mov
test
std
scas
sti
and
mov
aas
jecxz
cld
push
movsx
arpl
std
imul
ja
(bad)
dec
mov
ja
jg
das
dec
(bad)
cli
(bad)
call
mov
jg
pop
std
fistp
dec
cmps
jg
jmp
jg
das
(bad)
ja
out
cld
mov
cmps
std
jbe
sar
std
aas
jge
push
cmp
xchg
jle
hlt
mov
xchg
aas
(bad)
xlat
jg
ficomp
xchg
inc
out
loope
cld
out
hlt
out
clc
call
sar
stc
mov
dec
cli
cmp
dec
das
(bad)
out
jg
mov
in
inc
(bad)
jns
aam
(bad)
mov
ja
jmp
mov
mov
inc
repz
dec
imul
jmp
iret
cld
aas
(bad)
xchg
(bad)
outs
clc
cmc
(bad)
out
neg
jle
mov
mov
mov
out
cld
das
stc
stos
jle
paddw
dec
jmp
clc
outs
mov
jg
call
loope
mov
rcr
stc
(bad)
mov
jnp
(bad)
loope
jmp
mov
iret
lods
(bad)
in
jg
outs
lock
std
retf
mov
cmc
pop
push
jmp
mov
dec
cld
pop
cli
jae
test
push
pop
cli
pop
call
(bad)
push
mov
inc
push
out
out
xchg
mov
(bad)
mov
jg
in
push
std
dec
call
lahf
lock
leave
outs
clc
aaa
push
lahf
jmp
jg
aas
jmp
(bad)
(bad)
call
jmp
ins
jmp
aas
imul
(bad)
loop
jmp
jmp
jg
icebp
paddb
inc
pop
cmc
mov
pop
std
xchg
(bad)
jge
cmc
out
fwait
cld
sbb
pop
icebp
cmp
hlt
mov
ins
(bad)
aad
call
std
in
aas
stc
addr16
(bad)
dec
pop
jmp
out
out
dec
icebp
(bad)
inc
jmp
(bad)
mov
test
stc
idiv
jns
stc
out
jb
das
stc
sti
(bad)
mov
movs
cmc
out
cmc
jmp
mov
mov
pop
clc
paddb
hlt
xlat
inc
xchg
pop
inc
idiv
mov
dec
jg
mov
call
(bad)
in
neg
xchg
jg
hlt
call
std
es
stc
jmp
push
jg
scas
mov
xchg
inc
cld
rcr
add
call
mov
aas
clc
das
push
xlat
jg
pop
js
xchg
sbb
mov
iret
(bad)
in
pop
sti
idiv
std
jle
push
jg
scas
(bad)
div
sbb
mov
out
dec
jg
dec
pop
dec
ud0
(bad)
mov
scas
(bad)
stos
jg
pop
cld
jnp
cmps
repz
in
xlat
cld
xchg
jle
iret
sbb
rcl
fistp
jl
(bad)
das
jg
pop
neg
(bad)
mov
loope
mov
test
lahf
cld
pop
mov
cld
adc
jg
pop
sti
out
pop
jg
lahf
lock
inc
mov
sti
dec
call
mov
jg
dec
jle
push
daa
aas
(bad)
out
scas
mov
pop
sti
cmp
jnp
idiv
push
jg
outs
imul
std
mov
pop
call
call
popf
out
cld
in
mov
(bad)
sub
hlt
fidivr
cmc
pop
push
(bad)
shl
jmp
cld
out
aas
std
(bad)
lods
pop
test
stc
jmp
outs
dec
outs
(bad)
jnp
ins
mov
jg
jg
cld
in
jle
mov
clc
pop
ds
out
repz
mov
loope
retf
aas
icebp
idiv
or
mov
inc
aas
call
mov
cmp
out
std
loope
fisubr
(bad)
jbe
fistp
(bad)
arpl
push
sbb
push
mov
mov
sar
xor
out
outs
xchg
(bad)
mov
addr16
cld
push
(bad)
dec
mov
mov
mov
fwait
jmp
jg
ja
(bad)
outs
repnz
cld
cmp
std
ud0
pop
std
imul
pop
(bad)
mov
inc
(bad)
jmp
mov
jg
cli
scas
cld
and
aas
icebp
cli
mov
jnp
jmp
stc
dec
(bad)
mov
cli
pop
(bad)
lods
jg
aas
cmp
fstp
(bad)
mov
repnz
call
push
(bad)
fucompp
jg
aas
std
xor
in
std
clc
aas
cld
(bad)
fdivrp
mov
dec
xlat
jle
aas
jbe
out
jns
sti
imul
sti
loopne
(bad)
sbb
retf
aas
idiv
pop
mov
retf
pop
lock
cld
(bad)
leave
mov
loopne
(bad)
out
paddd
icebp
xchg
pop
(bad)
jg
sub
mov
fcomip
jmp
push
mov
jg
aaa
cld
push
jg
scas
cmp
movs
dec
pop
icebp
(bad)
inc
pop
mov
(bad)
repnz
push
call
lds
cmp
sti
inc
mov
cmc
hlt
das
sti
popf
inc
cmp
lahf
not
std
bnd
jg
pop
push
inc
(bad)
pop
std
(bad)
sar
icebp
iret
std
imul
dec
jge
lahf
(bad)
(bad)
dec
outs
hlt
out
xchg
pop
lock
cld
xchg
movsx
daa
(bad)
test
stc
lahf
std
sbb
loop
jg
jmp
push
jg
das
clc
aas
ds
mov
popf
cld
mov
std
fcomip
inc
dec
fistp
or
mov
(bad)
mov
stos
mov
jg
jmp
popf
cld
mov
idiv
jnp
mov
(bad)
in
jg
out
jmp
cld
jecxz
jae
das
std
adc
stc
das
jmp
out
(bad)
aaa
std
retf
lock
aaa
clc
inc
jmp
outs
jnp
xchg
xchg
mov
fstp
outs
hlt
addr16
sahf
(bad)
jmp
inc
idiv
dec
stc
sti
dec
push
(bad)
dec
(bad)
out
loop
lahf
cmp
(bad)
loop
pop
icebp
stos
xlat
aas
stc
fucomip
xlat
(bad)
fsubr
popf
mov
jg
lds
sti
push
ds
mov
out
(bad)
cmps
jmp
mov
call
aas
repnz
std
mov
movs
aad
(bad)
(bad)
add
stos
mov
push
jg
(bad)
jl
mov
dec
(bad)
pop
std
mov
xlat
lahf
imul
dec
(bad)
cdq
jmp
xlat
std
jmp
pop
repz
in
cld
add
aas
gs
fwait
iret
jle
(bad)
dec
inc
jmp
ret
push
scas
pop
dec
pop
icebp
retf
call
jne
retf
in
(bad)
mov
jg
lahf
mov
jmp
pop
mov
(bad)
popf
cmps
mov
mov
cli
xlat
cld
pop
mov
inc
gs
xchg
cld
ret
clc
jg
xchg
std
out
push
aas
lock
(bad)
imul
sub
jecxz
loop
out
(bad)
cmc
(bad)
fcmovu
loopne
cli
or
iret
cld
(bad)
(bad)
clc
jecxz
cmc
(bad)
jmp
lahf
cld
pop
mov
fisubr
dec
js
fistp
outs
cmc
mov
jae
outs
cld
popf
jg
repz
in
mov
test
inc
(bad)
add
out
call
iret
pop
(bad)
imul
add
inc
not
push
jnp
shr
push
out
std
push
pop
std
mov
das
lahf
std
fbld
icebp
lahf
(bad)
lahf
jl
(bad)
cld
sbb
mov
out
jle
jg
(bad)
inc
aas
stc
mov
(bad)
(bad)
clc
ja
jge
(bad)
stc
pop
cld
(bad)
dec
(bad)
iret
lahf
clc
xchg
fcomip
xlat
cld
mov
lahf
clc
xchg
pop
(bad)
mov
in
sti
(bad)
mov
push
jg
inc
std
ss
outs
cli
(bad)
pop
mov
std
(bad)
(bad)
in
fcomip
das
std
push
jg
rcr
icebp
xlat
cld
popa
mov
jle
(bad)
cld
in
lahf
stc
jnp
mov
ja
push
lahf
jmp
aas
jmp
pop
sti
ja
jmp
push
jg
std
in
dec
inc
pop
stc
stos
jmp
fcomip
pop
cli
das
jle
cmp
fdivrp
pop
mov
rcr
sub
sar
mov
jmp
pop
mov
out
(bad)
popa
jg
(bad)
pop
cld
xor
std
pop
dec
jg
rcr
cli
daa
jbe
cwde
mov
jg
mov
sar
ja
sub
lahf
(bad)
pop
jmp
xchg
dec
aas
cmc
lahf
cli
adc
lds
call
cld
mov
mov
pop
dec
mov
scas
jmp
mov
pop
push
pop
jge
pop
mov
mov
jge
mov
les
in
pop
cld
dec
inc
lahf
test
jecxz
std
jg
lahf
cld
dec
jg
aas
cmc
pop
cli
jge
(bad)
sbb
outs
(bad)
fdivrp
(bad)
das
dec
mov
std
mov
stc
iret
sti
sbb
addr16
in
mov
jmp
call
inc
leave
(bad)
std
cmp
fucomip
cmps
xlat
jg
outs
shl
jg
popf
jmp
scas
sti
rcr
fs
jg
inc
pop
clc
mov
push
scas
mov
aas
lock
clc
inc
mov
jmp
push
jnp
fidivr
pop
inc
cld
ja
movsx
movq
jmp
int
jg
loop
outs
stc
sub
call
std
aas
in
(bad)
push
dec
cli
pop
sahf
std
clc
jg
clc
in
pop
cmp
cmp
outs
sti
ficomp
hlt
aaa
pop
cld
stc
mov
(bad)
mov
jnp
in
sti
dec
(bad)
mov
sti
jg
out
clc
cld
pop
cli
add
xchg
mov
inc
jmp
mov
push
(bad)
mov
cmps
fstp
stc
sti
dec
jle
mov
popf
(bad)
sahf
(bad)
repz
jmp
ja
jnp
fldcw
daa
inc
das
jg
aas
cli
xlat
jl
jg
fsubr
dec
jg
(bad)
xchg
jno
iret
shr
sti
(bad)
jg
jp
daa
std
pop
daa
jg
pop
hlt
pop
std
and
ret
outs
cli
lahf
jmp
(bad)
push
jg
out
out
aas
xor
stc
idiv
jecxz
mov
jg
mov
scas
cmc
mov
(bad)
jmp
scas
jg
pop
jg
paddw
jg
inc
stc
out
div
dec
call
sbb
jle
jmp
addr16
mov
cld
out
pop
jg
pop
icebp
pop
jge
aas
(bad)
jne
rcr
icebp
aas
std
cmps
jnp
(bad)
mov
out
cld
dec
mov
pop
hlt
aaa
inc
mov
outs
jle
(bad)
std
pop
(bad)
mov
je
pop
(bad)
cmp
loop
test
dec
jg
aas
neg
mov
(bad)
jecxz
call
cli
jecxz
int
jnp
iret
std
int
lock
je
xchg
loop
cli
movs
jg
lahf
stc
aaa
(bad)
sbb
push
aas
icebp
cmp
iret
clc
in
enter
std
stos
pop
cld
xlat
cld
aad
jmp
cld
iret
mov
scas
push
repz
cli
in
call
in
dec
jmp
sti
aaa
cld
ret
ja
scas
(bad)
mov
cld
popa
(bad)
cli
cli
lahf
js
(bad)
sbb
jmp
jg
jg
cmps
jmp
(bad)
(bad)
mov
pop
jle
cmp
xlat
aas
stc
or
jmp
cmp
pop
jge
iret
mov
fisubr
mov
mov
repz
out
cmc
jg
jnp
icebp
std
aas
in
stc
jmp
dec
call
in
(bad)
mov
mov
pop
scas
jg
aas
push
std
sub
stc
pop
(bad)
sar
cld
pop
cld
sar
paddd
(bad)
mov
mov
adc
aas
inc
(bad)
in
clc
push
jg
adc
jmp
inc
not
sbb
stos
call
sti
pop
cli
std
jle
mov
scas
cmc
dec
(bad)
and
std
sti
mov
mov
scas
stc
lods
aas
in
(bad)
cli
dec
jmp
push
idiv
clc
cmps
inc
fistp
(bad)
sub
pop
cmp
mov
lahf
stc
jmp
pop
(bad)
stos
inc
scas
(bad)
mov
leave
pop
cld
daa
jle
mov
pop
jle
idiv
scas
call
mov
sar
(bad)
call
cli
out
mov
loop
jnp
mov
push
cmps
cld
jge
(bad)
mov
mov
out
cld
ret
(bad)
std
out
sti
mov
test
std
dec
jle
icebp
outs
test
(bad)
jg
dec
cld
(bad)
jmp
jmp
mov
hlt
mov
(bad)
jmp
mov
pop
outs
iret
jle
outs
stc
arpl
in
mov
mov
push
jle
push
(bad)
call
fistp
jecxz
std
inc
(bad)
in
dec
cld
xchg
ja
(bad)
mov
pop
push
inc
dec
loop
jmp
lock
jg
jle
(bad)
push
lahf
cld
sti
mov
fnstcw
fidivr
push
(bad)
aam
stc
push
(bad)
cli
aas
repnz
push
mov
ret
dec
inc
scas
inc
stos
call
cmps
push
icebp
aas
in
push
std
push
jg
jg
jl
(bad)
call
mov
mov
out
stc
push
(bad)
sti
(bad)
pop
std
shl
rsm
jecxz
in
daa
jg
loop
sti
aad
loop
call
cld
(bad)
jmp
push
into
jg
sub
in
pop
lock
cli
idiv
(bad)
scas
imul
in
leave
outs
je
pxor
ds
sbb
pop
repnz
call
(bad)
out
stc
adc
jecxz
repz
jg
push
std
mov
out
inc
jg
mov
addr16
stos
(bad)
mov
mov
(bad)
std
add
aad
mov
jg
out
adc
(bad)
das
cld
add
pop
jmp
idiv
jmp
minps
inc
jg
(bad)
hlt
jnp
(bad)
(bad)
call
fcmovnu
jecxz
dec
mov
jnp
jg
lahf
call
cld
and
outs
frndint
sar
loop
sti
mov
ret
(bad)
pop
call
stc
iret
stc
arpl
aam
out
dec
std
add
cld
stos
(bad)
call
mov
test
call
aas
cmp
(bad)
(bad)
scas
(bad)
in
retf
outs
cld
pop
(bad)
mov
leave
mov
inc
mov
aaa
sti
aas
(bad)
(bad)
fucomip
xlat
cli
lods
inc
cli
sbb
pop
imul
inc
sbb
pop
pop
std
dec
mov
es
pop
clc
fwait
in
(bad)
call
(bad)
iret
(bad)
adc
aad
in
aas
hlt
pop
cmp
mov
mov
retf
dec
(bad)
out
jmp
out
repnz
mov
in
cmps
call
pop
push
jg
fild
hlt
scas
cli
call
stc
xchg
out
(bad)
push
mov
scas
jg
ja
push
fdivr
and
movs
(bad)
scas
stc
push
fdivrp
stc
jg
idiv
lahf
(bad)
clc
lahf
std
inc
(bad)
xchg
mov
xchg
dec
jg
pop
div
cld
out
in
push
out
mov
mov
jecxz
cld
ja
(bad)
loop
sti
test
aas
dec
push
mov
(bad)
call
(bad)
stos
inc
aas
cld
(bad)
(bad)
(bad)
stos
(bad)
cld
in
outs
jmp
(bad)
std
(bad)
mov
xlat
pop
sti
mov
addr16
stc
aas
repz
(bad)
mov
cs
aas
lock
into
pop
std
aas
mov
cld
aas
cli
idiv
call
aad
repnz
fdivr
(bad)
dec
(bad)
sti
pop
clc
jg
sub
out
xlat
push
(bad)
sti
jg
daa
dec
daa
call
scas
cmc
sub
(bad)
ja
in
in
aaa
sub
jmp
aaa
jge
das
call
jg
pop
cmp
lods
mov
mov
pop
std
sti
outs
(bad)
fwait
mov
lock
mov
(bad)
xchg
(bad)
jg
mov
mov
jmp
hlt
int
lock
(bad)
cmp
repz
std
and
out
repz
dec
fucompp
mul
call
mov
lock
pop
std
inc
mov
das
scas
pop
(bad)
jle
aas
icebp
aas
(bad)
jmp
cmc
mov
cdq
aas
jg
sti
std
arpl
fcmovne
(bad)
mov
jg
pop
cli
cmp
(bad)
jmp
(bad)
push
(bad)
jmp
sti
addr16
in
xlat
cli
addr16
fcomip
iret
jp
test
daa
inc
pop
repz
sti
std
(bad)
fstp
idiv
dec
jle
pop
stc
fstp
hlt
cmps
call
jg
fistp
jle
pop
stc
push
outs
aas
cld
stos
(bad)
sti
aas
std
(bad)
cmp
sbb
xlat
std
addr16
stos
(bad)
cld
scas
(bad)
jmp
imul
outs
sti
sbb
arpl
jmp
pusha
jmp
cld
hlt
scas
clc
(bad)
inc
jg
daa
mov
in
fistp
scas
jg
pop
jmp
icebp
dec
(bad)
sahf
mov
leave
jmp
scas
mov
fucomi
(bad)
jns
jmp
ud0
aas
fs
dec
and
clc
mov
das
inc
repz
jg
aad
mov
mov
cli
push
(bad)
stc
(bad)
stc
outs
repz
jmp
mov
cld
hlt
paddd
pop
(bad)
jmp
jg
(bad)
fcomip
mov
popf
jg
out
repnz
std
out
(bad)
in
lock
std
call
bnd
inc
jg
mov
(bad)
stc
fcomip
xchg
aad
cmc
jmp
data16
scas
(bad)
in
(bad)
loope
pop
not
pop
std
cs
jmp
(bad)
xlat
jle
aas
jmp
cli
aaa
enter
in
sti
cmp
aas
inc
(bad)
mov
clc
iret
jle
cmps
(bad)
notrack
aas
mov
mov
mov
lods
fucomip
mov
mov
jg
jg
mov
fnstcw
in
(bad)
ja
jmp
stc
cmp
mov
pop
dec
xlat
pop
mov
jmp
jecxz
jmp
cld
(bad)
out
pop
clc
jne
jg
inc
(bad)
jmp
jp
aaa
stc
hlt
das
sti
cmp
aad
loopne
(bad)
cld
sbb
idiv
cli
cmp
or
jg
addr16
fistp
das
cli
sar
sbb
xchg
iret
sti
daa
jle
jg
xlat
cld
mov
stc
xor
imul
jg
out
cmc
pop
jmp
jg
lock
cmp
pop
(bad)
push
jg
bnd
aas
jg
cli
into
push
sbb
pop
jmp
out
icebp
mov
loop
(bad)
stos
call
fnstsw
aas
(bad)
cmc
jg
(bad)
std
aas
(bad)
xchg
jg
jg
(bad)
enter
hlt
mov
(bad)
sti
fcomip
scas
stc
xor
mov
jg
gs
jg
push
jg
hlt
aaa
std
mov
cmps
mov
test
loop
jg
mov
jnp
(bad)
(bad)
ja
popf
call
fnstsw
scas
sti
loop
ins
daa
jg
pop
stc
fwait
dec
(bad)
jg
mov
stc
mov
iret
std
jne
mov
sar
std
loop
clc
gs
out
repnz
inc
dec
mov
mov
dec
inc
xchg
out
push
std
gs
mov
fucomip
int
push
cmps
inc
push
cmp
pop
cld
adc
out
mov
gs
mov
lock
cld
fnstcw
push
aas
cmc
iret
std
fstp
pop
jecxz
std
jnp
out
std
cmp
pop
sti
pop
call
jmp
scas
cmc
out
jle
mov
imul
mov
(bad)
mov
jne
(bad)
pop
std
mov
leave
aas
clc
(bad)
(bad)
push
mov
jg
inc
mov
mov
inc
sar
or
cli
outs
jg
sti
int
jg
idiv
pop
jle
repnz
clc
xchg
inc
vhsubps
pop
cld
jns
aas
repz
pop
jg
(bad)
pop
pop
jle
cmps
jg
mov
ja
or
std
(bad)
jg
pop
hlt
cld
out
stc
int
(bad)
icebp
aas
loopne
cli
pop
mov
push
ja
(bad)
iret
std
inc
dec
pop
neg
stc
mov
mov
in
idiv
inc
mov
jg
iret
(bad)
loope
cld
dec
call
xchg
mov
push
jmp
lods
mov
dec
hlt
das
std
daa
retf
(bad)
loop
sti
scas
(bad)
mov
call
aas
lock
ret
jg
pop
imul
cld
cmp
dec
outs
cmc
(bad)
pop
(bad)
fstp
repz
mov
std
xchg
(bad)
out
std
scas
clc
cmps
sahf
jmp
mov
jmp
(bad)
repz
inc
dec
pop
repnz
pop
jg
lahf
cmc
fwait
pop
cld
cmp
jnp
hlt
pop
lock
std
add
clc
fcomip
mov
jno
lds
jl
lahf
std
cmp
cmps
jg
scas
jle
jg
leave
lahf
std
imul
mov
retf
push
jg
jg
test
sahf
(bad)
out
jmp
push
std
dec
neg
cld
sahf
jg
mov
jg
mov
mov
cld
call
jg
out
outs
std
in
aas
std
scas
(bad)
(bad)
stc
outs
jnp
mov
cmp
(bad)
xchg
(bad)
jecxz
fistp
jg
jg
pop
std
arpl
(bad)
outs
push
aas
icebp
stos
jle
loop
cli
aas
mov
mov
mov
into
aas
repz
and
jmp
(bad)
jg
lods
call
mov
paddd
(bad)
in
xchg
mov
(bad)
std
jg
in
iret
jnp
xchg
dec
out
lock
std
sbb
scas
test
fcomip
aas
cld
int
ror
out
mov
sbb
les
jg
pop
std
pop
push
push
(bad)
jmp
clc
popf
(bad)
mov
movs
mov
xchg
xchg
jne
clc
xchg
(bad)
out
jg
hlt
(bad)
dec
(bad)
xchg
(bad)
xchg
push
jmp
jg
xlat
jg
push
dec
call
scas
cmc
stc
out
cli
idiv
into
jmp
popf
sti
(bad)
mov
jg
mov
call
cld
out
jg
fwait
(bad)
(bad)
rol
pusha
icebp
push
std
jmp
inc
mov
mov
repz
inc
jg
(bad)
out
out
cld
rcr
(bad)
(bad)
stc
jg
aas
(bad)
(bad)
retf
(bad)
mov
in
jg
rcl
test
jae
push
(bad)
and
dec
movd
(bad)
idiv
idiv
idiv
outs
stc
pmovmskb
pop
lock
std
daa
dec
(bad)
call
mov
repnz
clc
cmp
cmp
mov
cli
loope
mov
(bad)
mov
mov
jle
mov
(bad)
aaa
pop
cld
stc
pop
cs
mov
rcr
loopne
cld
sbb
dec
dec
call
aas
push
jg
sbb
(bad)
fcomip
mov
(bad)
stos
pop
std
jmp
pop
cli
outs
std
mov
repz
jge
sbb
sar
(bad)
lahf
not
std
pop
inc
scas
repz
inc
fisttp
jle
mov
into
(bad)
stos
mov
jg
fistp
stc
cld
mov
aas
in
pand
adc
mov
jmp
out
inc
(bad)
ja
call
inc
inc
push
out
(bad)
jmp
loopne
imul
cld
xchg
pop
mov
push
(bad)
mov
adc
iret
std
push
mov
sahf
cld
jmp
push
jle
out
fbstp
pop
mov
dec
sar
scas
std
ja
loope
aas
pop
(bad)
xor
fucomip
pop
cld
cdq
cmps
cmp
out
stc
sti
lahf
std
inc
jg
pop
idiv
std
test
sar
in
cld
fwait
(bad)
icebp
aas
call
aad
clc
jecxz
outs
not
das
(bad)
test
(bad)
out
jl
sbb
pop
jg
scas
(bad)
(bad)
mov
aas
(bad)
xlat
(bad)
fnstcw
jg
scas
(bad)
cmps
repz
lahf
sti
jmp
aas
hlt
dec
(bad)
xchg
jmp
aas
repz
sahf
std
jns
mov
out
jne
pop
cld
xchg
mov
cld
sahf
pop
std
jnp
jg
pop
jmp
jmp
mov
dec
std
int
stc
dec
std
aad
stc
xchg
out
mov
push
adc
scas
clc
or
mov
out
mov
push
outs
std
xchg
sar
clc
mov
rcr
lahf
pushf
cld
cmps
jg
mov
aaa
aas
sti
pop
mov
sahf
inc
(bad)
(bad)
(bad)
scas
dec
out
loopne
retf
inc
(bad)
(bad)
cli
hlt
jecxz
loop
(bad)
clc
pop
push
std
push
mov
retf
jg
jg
stc
(bad)
out
std
retf
cli
adc
fild
fcomip
mov
mov
xlat
stc
inc
call
jg
shl
mov
jae
call
xchg
aas
in
jmp
retf
aas
jmp
cld
pop
jmp
test
ja
xlat
data16
mov
int
jg
xchg
aad
jno
or
pop
sub
mov
jg
dec
cld
fstp
mov
jle
(bad)
stc
cmps
std
jp
fisubr
jg
pop
lock
cld
sti
iret
(bad)
lock
retf
pop
jmp
jle
jg
cmp
data16
stc
dec
jle
pop
repz
jecxz
(bad)
jp
inc
jg
idiv
cld
sbb
std
lea
aas
jmp
(bad)
nop
dec
pop
std
xlat
jmp
movs
stc
fwait
(bad)
repz
icebp
jmp
aad
loop
mov
std
aam
cmp
test
repz
cld
push
dec
fcomip
sbb
loop
lock
sbb
cmp
retf
jg
out
lahf
cli
cmp
daa
(bad)
sti
jbe
mov
cld
das
stc
pop
jle
push
das
cld
paddd
(bad)
pop
imul
lahf
clc
aaa
push
and
idiv
pop
dec
pop
clc
(bad)
repz
jg
jmp
lahf
jg
cmc
add
rcr
out
inc
mov
jmp
(bad)
jns
lahf
sahf
std
jp
out
cli
fincstp
iret
dec
sti
mov
paddsw
cld
gs
and
retf
jg
aas
cld
dec
jmp
repz
pop
repnz
(bad)
cld
add
pop
(bad)
out
(bad)
sti
(bad)
mov
movs
mov
push
jl
cli
or
ret
daa
mov
std
add
jg
iret
(bad)
sti
jg
mov
outs
and
out
cld
jecxz
xchg
aas
arpl
out
(bad)
in
jle
(bad)
in
cmc
pop
cld
(bad)
mov
dec
dec
push
jnp
(bad)
pop
lock
std
mov
ficomp
fwait
cld
mov
inc
dec
adc
mov
loop
jmp
(bad)
pop
sti
fwait
push
jg
aas
cli
outs
std
out
stc
das
cld
lahf
(bad)
clc
(bad)
jmp
out
cmc
jg
test
mov
pop
inc
push
cld
adc
jle
aas
out
push
lahf
jmp
aas
jmp
js
(bad)
cld
std
int
dec
mov
pop
cld
sub
lahf
icebp
paddd
(bad)
call
push
jg
mov
rcr
mov
(bad)
fdivr
jne
sar
(bad)
movq
std
pop
(bad)
jmp
(bad)
(bad)
mov
(bad)
(bad)
out
jmp
aas
mov
(bad)
fld
(bad)
(bad)
aaa
(bad)
movs
(bad)
fidivr
loop
repz
xor
daa
aas
stc
mov
mov
outs
stc
in
jle
stc
push
jl
retf
aas
jmp
xchg
mov
fs
(bad)
push
aas
mul
(bad)
iret
std
icebp
mov
call
cli
idiv
ins
scas
jle
aas
out
pop
cld
push
lahf
jle
xchg
(bad)
mov
aas
call
cld
jnp
rcr
daa
std
std
inc
std
iret
jle
pop
ja
jmp
out
xlat
cld
inc
stos
cmp
(bad)
ficomp
xlat
stc
in
(bad)
test
std
mov
mov
repnz
jmp
outs
push
jmp
pop
imul
psubb
rcr
cli
xlat
std
xor
idiv
retf
jg
fucomip
fldenv
cmp
adc
aas
in
lds
daa
mov
(bad)
out
stc
inc
(bad)
mov
cld
push
dec
push
out
inc
mov
(bad)
lock
das
(bad)
icebp
jg
xlat
cli
movd
lahf
(bad)
sar
sti
fstp
jmp
sbb
fisubr
xchg
mov
aas
in
cli
cmps
lahf
(bad)
cmp
cld
test
retf
out
std
sbb
jo
iret
(bad)
jmp
cmps
aas
sti
xlat
inc
jle
mov
aaa
stc
lahf
(bad)
mov
stc
daa
call
clc
lds
in
(bad)
cld
mov
idiv
movs
aas
(bad)
pop
(bad)
push
jg
mov
jg
pop
clc
jg
repnz
div
std
push
(bad)
fdivrp
push
(bad)
inc
(bad)
sub
(bad)
jmp
(bad)
lahf
std
sbb
jmp
outs
(bad)
cld
aas
cld
hlt
pop
jge
stos
(bad)
mov
hlt
(bad)
inc
div
outs
push
xchg
push
(bad)
(bad)
sti
call
(bad)
movs
(bad)
pop
(bad)
and
mov
(bad)
xchg
(bad)
cli
pop
lock
dec
dec
lahf
icebp
jg
stc
jg
pop
mov
fld
push
push
aas
repz
ret
cmc
(bad)
fist
cmp
or
icebp
(bad)
aaa
cli
arpl
loope
jecxz
jmp
lock
mov
push
jg
aas
rep
sub
aas
sti
fwait
pop
dec
jg
das
(bad)
pop
jg
jecxz
jg
aas
imul
std
jge
repz
inc
mov
(bad)
push
jmp
adc
fcomip
(bad)
cld
push
jg
mov
pop
jg
stos
(bad)
call
repnz
ja
das
jle
xlat
inc
pop
inc
push
mov
mov
lahf
jns
sbb
cmp
repnz
cld
in
shr
fstp
xlat
stc
add
fidivr
out
std
adc
sar
(bad)
inc
(bad)
push
pop
and
mov
pop
iret
mov
repz
(bad)
iret
cld
or
stc
repz
test
hlt
(bad)
call
xchg
dec
std
(bad)
aad
(bad)
psubq
cld
out
(bad)
in
jmp
cmp
fdivr
xor
mov
loopne
jg
out
sti
std
(bad)
mov
(bad)
mov
cli
jmp
sar
jnp
fscale
mov
jmp
jmp
mov
mov
dec
(bad)
call
xlat
out
cld
hlt
jb
(bad)
(bad)
repz
lahf
std
sbb
loopne
stc
mov
mov
(bad)
out
out
cld
(bad)
fdiv
lahf
jmp
dec
js
jmp
jmp
mov
fistp
out
push
inc
aad
div
repz
mov
aam
jmp
jle
mov
(bad)
clc
pop
cld
into
(bad)
pop
push
scas
mov
pop
(bad)
mov
sti
pop
test
(bad)
mov
repnz
(bad)
mov
mov
inc
pop
std
push
jg
ja
popf
fcomip
into
out
cmc
cmp
(bad)
(bad)
stc
cld
jg
sar
std
in
stc
leave
jnp
in
aas
stc
cli
psubw
scas
popf
(bad)
movs
jmp
mov
std
cmps
jg
mov
pop
push
sbb
std
outs
mov
idiv
mov
inc
jge
iret
cld
xchg
push
(bad)
in
(bad)
idiv
jg
out
stos
shl
call
pop
pop
inc
cld
sbb
call
stc
jnp
mov
pop
mov
pop
(bad)
clc
pop
imul
mov
lock
dec
out
inc
mov
inc
mov
test
in
jg
cli
and
cli
jnp
(bad)
jg
(bad)
cld
popf
mov
inc
mov
(bad)
jmp
shr
sti
arpl
mov
in
outs
cmc
out
push
mov
cld
test
aam
icebp
addr16
std
stos
(bad)
std
stos
(bad)
jmp
jg
add
lods
pop
mul
icebp
repnz
aas
cmc
mov
xchg
loop
fucomip
in
std
idiv
(bad)
(bad)
jmp
ret
rcr
mov
aas
cld
iret
cli
arpl
cld
(bad)
mov
push
(bad)
jg
aas
sti
iret
stc
out
iret
fcomip
aaa
stc
scas
(bad)
fldenv
and
shr
cli
idiv
adc
xchg
std
mov
pop
std
jnp
mov
outs
repnz
cld
add
out
pop
dec
cld
not
mov
stc
push
(bad)
in
daa
jg
dec
(bad)
aad
jg
scas
icebp
(bad)
std
dec
call
icebp
call
hlt
aas
icebp
mov
fnstcw
in
aad
push
std
sbb
clc
out
jle
lahf
pop
cld
cmp
lahf
cli
in
jg
outs
cli
jmp
(bad)
(bad)
clc
cli
fstp
aas
cmc
daa
jl
xlat
clc
xor
mov
call
jmp
push
paddb
dec
mov
imul
push
call
in
(bad)
cli
out
(bad)
mov
(bad)
pop
icebp
retf
(bad)
idiv
loop
dec
jg
mov
jg
mov
mov
mov
in
jg
fwait
push
pop
jecxz
outs
(bad)
fnstsw
loope
sti
lahf
jmp
xchg
call
cmp
icebp
iret
std
idiv
cmc
outs
sti
pop
(bad)
out
jg
(bad)
std
xchg
xchg
(bad)
movs
jbe
jnp
clc
mov
ficomp
jg
cld
idiv
fcomp
pop
ds
(bad)
call
jmp
(bad)
jne
mov
fwait
jmp
push
das
jbe
cli
jg
jmp
out
mov
pop
cmc
out
std
cmp
int
pop
hlt
hlt
idiv
pop
jmp
rcr
cli
jnp
loopne
sti
dec
jg
aas
in
clc
mov
mov
xor
(bad)
(bad)
pop
ds
or
scas
stc
(bad)
jg
(bad)
(bad)
jmp
lea
xor
test
cld
(bad)
iret
(bad)
pushf
mov
jg
sar
add
sar
out
cli
outs
mov
(bad)
jg
pop
hlt
out
std
hlt
jecxz
pop
out
xchg
fcomip
pop
(bad)
mov
out
call
(bad)
mov
out
shr
(bad)
xlat
inc
mov
aaa
inc
push
jg
mov
mov
cmps
mov
std
(bad)
fild
(bad)
mov
pop
std
aad
retf
mov
(bad)
outs
std
movs
mov
(bad)
fstp
icebp
in
stc
arpl
hlt
pop
(bad)
adc
idiv
cmc
aad
sbb
inc
std
jg
ds
pop
(bad)
push
rsm
out
cld
mov
imul
or
enter
(bad)
mov
outs
clc
aaa
call
aaa
jle
das
std
mov
scas
cld
ret
jle
pop
(bad)
out
std
xor
psubw
loope
jg
scas
sti
xchg
cld
pop
aas
cdq
std
mov
scas
std
jmp
out
(bad)
clc
scas
fdivrp
sbb
xchg
cld
mov
(bad)
cld
cli
mov
outs
cld
push
mov
mov
out
jmp
jg
pop
div
pop
dec
lock
ds
aas
cld
loopne
stc
imul
jmp
lahf
div
pop
sti
(bad)
aas
clc
(bad)
(bad)
pop
out
cld
mov
jmp
lods
dec
pop
std
fstp
xchg
mov
shr
jg
and
into
push
mov
jmp
(bad)
in
loop
stc
jnp
std
rcr
test
jecxz
mov
mov
xchg
(bad)
jmp
sti
jg
jg
jnp
mov
xlat
cmp
jg
pop
dec
dec
jmp
psubd
retf
clc
test
aas
call
imul
std
push
jg
daa
jg
cmc
das
sti
jne
loope
std
cmp
xchg
das
scas
jmp
out
fistp
retf
call
pop
icebp
sbb
and
aas
dec
lahf
mov
aas
mov
cmp
(bad)
fdivr
int
xor
(bad)
outs
std
imul
jmp
lahf
std
sbb
sti
jg
out
call
mov
dec
push
dec
dec
idiv
fisttp
(bad)
inc
jg
fcomip
scas
std
pop
mov
call
inc
pop
neg
pop
ja
mov
fnstcw
jg
jecxz
out
aaa
(bad)
mov
dec
(bad)
in
jg
cmp
aam
cli
icebp
(bad)
das
inc
ret
mov
stos
jmp
mov
inc
aas
test
call
(bad)
xchg
mov
cld
(bad)
cli
push
out
stc
out
cli
dec
outs
(bad)
xchg
(bad)
(bad)
cld
(bad)
lahf
repnz
ds
leave
lahf
cli
outs
dec
stc
fcomip
leave
jg
hlt
mov
jg
out
jg
clc
out
mov
jmp
jmp
jmp
pop
jecxz
cld
scas
inc
jg
aas
cld
sbb
jecxz
(bad)
jmp
std
jg
pop
(bad)
push
push
pop
repz
es
sbb
lahf
clc
gs
cmc
scas
(bad)
std
out
std
retf
mov
jmp
(bad)
dec
(bad)
stc
scas
cld
daa
push
pop
(bad)
cdq
dec
(bad)
jg
or
aas
stc
cmps
cld
push
mov
(bad)
test
pop
(bad)
fdivr
add
shr
xchg
out
cmc
sub
mov
out
jg
mov
mov
clc
(bad)
(bad)
lahf
(bad)
lods
mov
cmps
push
jg
scas
dec
call
(bad)
test
add
mov
(bad)
lods
mov
(bad)
and
repnz
mov
sahf
push
jmp
loope
neg
(bad)
es
mov
jg
loop
inc
(bad)
mov
sti
paddw
mov
das
sti
pop
(bad)
jg
das
cld
(bad)
scas
dec
(bad)
cmp
hlt
aas
cld
pop
inc
push
jg
out
push
std
es
jmp
call
mov
outs
sar
sti
pop
outs
inc
not
push
jg
hlt
lds
xor
mov
xlat
out
repz
out
sti
shl
pop
in
lods
pop
hlt
aas
(bad)
std
push
cmps
jg
jg
out
dec
test
loopne
call
mov
ss
xchg
(bad)
hlt
inc
stc
mov
xchg
cmc
mov
fidivr
mov
sti
icebp
dec
(bad)
ds
jmp
fdivr
icebp
mov
(bad)
xchg
jg
aaa
fyl2xp1
jge
cli
mov
stos
mov
(bad)
sar
call
call
stc
pop
(bad)
out
cld
les
mov
pop
std
mov
mov
sar
sti
(bad)
and
out
mov
fistp
(bad)
inc
sbb
and
fdivr
out
pop
cld
xchg
idiv
mov
dec
(bad)
out
jmp
into
(bad)
(bad)
lahf
mov
iret
idiv
lahf
cld
outs
call
(bad)
daa
fstp
lock
das
cld
mov
icebp
repz
cli
dec
(bad)
loope
cld
int3
lahf
clc
out
jmp
clc
aas
call
aas
stc
mov
scas
(bad)
mov
imul
push
das
notrack
jne
sub
mov
mov
popf
into
cs
mov
jg
outs
cld
cmp
mov
neg
mov
fdivr
call
mov
dec
pop
hlt
sar
fstp
outs
mov
iret
jg
out
lock
cld
mov
push
pop
aas
fdivr
pop
(bad)
mov
(bad)
clc
mov
mul
and
scas
cld
ins
call
das
std
sub
in
jle
mov
or
(bad)
loopne
in
paddb
out
(bad)
out
jg
lahf
not
(bad)
test
aas
out
std
retf
jg
pop
mov
xchg
(bad)
call
jge
aaa
cli
mov
jg
call
mov
stc
dec
jmp
fucomip
mov
lock
std
aad
aad
jg
loop
(bad)
imul
mov
xchg
(bad)
mov
out
call
sub
mov
jo
pop
(bad)
cli
pop
lock
jle
cmp
pop
(bad)
(bad)
cld
sbb
cli
sbb
mov
ja
arpl
cmp
push
dec
jle
jmp
pop
jl
out
std
out
fld
stos
pop
cmc
mov
repnz
(bad)
sti
inc
(bad)
sti
jle
stc
int
scas
(bad)
clc
(bad)
mov
aas
repz
xchg
mov
(bad)
xchg
(bad)
jnp
int
stc
fwait
std
cmps
(bad)
cdq
mov
(bad)
mov
aas
(bad)
jmp
(bad)
imul
sahf
jg
push
adc
mov
out
std
sti
das
aas
cli
sar
xchg
cld
out
cmp
in
out
clc
iret
std
pop
lahf
jmp
int
in
(bad)
inc
push
mov
mov
fdivr
stc
(bad)
std
sbb
pop
cld
cmc
(bad)
call
int3
jg
fcomip
(bad)
fwait
(bad)
clc
call
fcomp
in
(bad)
cmp
rcl
(bad)
imul
aas
div
jecxz
pop
jg
jmp
inc
cmc
pop
idiv
ins
(bad)
sti
jg
scas
std
idiv
repz
std
fnstcw
std
xor
cmp
jmp
jg
push
iret
dec
jmp
mov
cmc
daa
(bad)
xor
and
(bad)
xlat
mov
sahf
cld
sub
inc
jmp
pop
jge
mov
(bad)
out
repz
cld
loope
jle
fcomip
out
add
cld
idiv
add
push
jg
(bad)
(bad)
aaa
(bad)
mov
clc
mov
mov
data16
scas
(bad)
mov
mov
jg
pop
std
scas
(bad)
fisubr
(bad)
mov
(bad)
icebp
lahf
std
popf
jg
ja
stos
(bad)
(bad)
(bad)
adc
test
test
repz
mov
fistp
fwait
(bad)
fdivr
(bad)
cld
(bad)
in
inc
xchg
pop
sti
(bad)
add
(bad)
xor
daa
(bad)
sbb
jg
mov
loop
clc
or
lahf
mov
mov
shr
push
(bad)
dec
lahf
stc
arpl
loopne
mov
(bad)
repz
std
imul
in
neg
xchg
cld
lds
in
paddd
leave
lahf
call
mov
lahf
aas
idiv
xlat
jle
mov
pop
sti
imul
(bad)
cmp
pop
stc
out
std
cdq
outs
aas
sti
(bad)
jle
scas
stc
repnz
sub
(bad)
jmp
mov
(bad)
loop
(bad)
aas
cli
jecxz
jmp
mov
(bad)
ficomp
aas
and
lahf
out
enter
pop
out
outs
lock
jge
xchg
jmp
jmp
push
daa
(bad)
and
sub
mov
(bad)
pushf
jg
ja
push
jmp
cmps
jg
lahf
cld
out
call
idiv
loopne
dec
out
cld
ja
sar
jg
pop
jle
lahf
clc
mov
out
push
scas
pop
neg
xchg
mov
jmp
loop
lahf
idiv
(bad)
mov
mov
stos
aas
sti
(bad)
pop
jg
lahf
dec
or
dec
pop
(bad)
cmp
out
jmp
call
repz
mov
xchg
iret
jnp
xchg
jg
jg
(bad)
out
cld
mov
(bad)
aad
std
das
inc
pop
(bad)
mov
ret
hlt
mov
xchg
mov
jg
outs
mov
sbb
sahf
jg
call
(bad)
in
std
scas
scas
jle
pop
mov
outs
repnz
(bad)
clc
pop
inc
dec
popf
fucomip
out
lahf
clc
aaa
sbb
clc
ud0
(bad)
fidivr
hlt
psubb
jg
ja
sbb
xlat
iret
jle
loop
mov
call
(bad)
jmp
out
pop
cli
xlat
mov
out
scas
(bad)
cld
iret
clc
pop
(bad)
in
aas
lock
scas
sti
xchg
std
mov
pop
clc
mov
scas
(bad)
stc
outs
clc
dec
jle
daa
std
arpl
out
(bad)
mov
std
(bad)
scas
cli
sti
inc
dec
out
push
jg
pop
mov
mov
cld
pop
in
std
jle
icebp
shr
jmp
cmps
jg
xlat
(bad)
lahf
daa
dec
aas
jne
dec
jmp
cmps
iret
sahf
dec
jg
clc
idiv
movs
mov
lahf
std
ret
(bad)
xchg
aas
test
inc
inc
sti
idiv
sar
mov
cmps
dec
fnstsw
aas
sti
pop
dec
aaa
leave
das
cld
add
lahf
inc
jg
out
hlt
sti
(bad)
out
jg
(bad)
adc
lea
out
pop
clc
sbb
(bad)
pop
jno
aaa
(bad)
mov
in
cdq
std
stc
pop
call
jg
out
cmc
lahf
fdivrp
daa
dec
pop
clc
pop
(bad)
xor
cli
pop
jg
mov
div
jge
scas
std
(bad)
jg
aas
pop
cld
scas
xchg
aaa
push
std
clc
das
std
fstp
scas
sti
pop
cld
fnstsw
mov
cld
(bad)
jmp
(bad)
mov
out
jle
jg
xlat
sti
jecxz
out
clc
das
std
jne
fstp
mov
cmps
aas
loope
std
out
aas
icebp
(bad)
(bad)
jae
(bad)
fidivr
call
pop
cmc
jecxz
fdivrp
dec
stc
jmp
cld
outs
jg
out
hlt
xor
xlat
aas
cld
paddb
pop
clc
rcr
aaa
cld
addr16
retf
jmp
xchg
std
retf
(bad)
cmp
std
out
std
pop
cmc
mov
fnstcw
out
lahf
call
scas
ja
hlt
lahf
repnz
(bad)
xchg
pop
(bad)
out
scas
aad
inc
jg
hlt
push
jge
inc
std
loop
jg
scas
idiv
cld
dec
jg
fdivrp
jp
daa
pop
(bad)
jge
aas
jmp
mov
dec
jg
aas
repnz
pop
repz
clc
cmp
(bad)
cmps
mov
cmp
mov
mov
call
std
lods
mov
(bad)
xchg
ja
leave
out
lock
cld
jmp
(bad)
out
clc
cmps
sbb
lahf
test
(bad)
jg
aas
stc
jnp
loop
in
xchg
std
out
inc
(bad)
scas
pop
mov
fild
dec
mov
push
dec
std
ret
ret
outs
clc
stc
out
repz
push
sti
fistp
scas
jmp
sti
mov
aas
cld
jecxz
cld
(bad)
dec
dec
iret
inc
(bad)
jmp
jl
aas
jnp
repnz
cli
cdq
pop
out
(bad)
and
jmp
sti
pop
(bad)
fcomp
jg
inc
push
xchg
std
aam
je
dec
cmp
cmps
(bad)
std
out
lock
daa
inc
mov
mov
call
out
retf
jg
mov
out
fwait
mov
cmp
pop
jmp
stc
and
stos
mov
(bad)
scas
call
(bad)
in
outs
clc
jg
mov
mov
push
paddw
paddd
dec
(bad)
jmp
mov
cld
and
pop
cld
imul
stc
popf
(bad)
idiv
fwait
dec
lahf
stc
xchg
lahf
stc
ja
call
mov
hlt
loopne
sti
in
(bad)
mov
lea
scas
std
scas
dec
iret
inc
push
aas
pop
std
imul
(bad)
(bad)
std
(bad)
(bad)
dec
push
idiv
mov
std
jle
das
cli
pop
call
(bad)
(bad)
push
pop
std
mov
outs
clc
push
call
outs
inc
cld
inc
sti
dec
das
jmp
in
xchg
aas
(bad)
movs
lahf
jge
lahf
std
stos
jg
mov
pop
neg
scas
int
jg
mov
aas
in
sti
jg
out
clc
jmp
mov
pop
(bad)
jae
std
(bad)
iret
inc
(bad)
fwait
(bad)
in
mov
jle
(bad)
call
jg
jmp
mov
fldenv
jg
(bad)
outs
clc
sbb
stos
jg
jmp
outs
cld
out
lahf
icebp
hlt
(bad)
cli
in
(bad)
out
mov
(bad)
in
outs
std
rcr
sti
mov
leave
dec
(bad)
aad
xchg
stos
lahf
cld
icebp
jecxz
mov
pop
mov
(bad)
jns
lahf
imul
dec
mov
xlat
outs
jg
(bad)
mov
ret
(bad)
std
push
jge
(bad)
fwait
mov
ret
mov
aas
call
jnp
sti
and
iret
(bad)
loop
clc
mov
loope
mov
pop
jg
fucomip
lahf
mov
div
pop
cld
adc
jmp
aaa
push
cli
call
cld
jns
jmp
stc
aaa
cld
clc
push
jnp
jmp
aaa
std
leave
dec
push
fucomip
jg
arpl
scas
cmc
pop
std
jno
icebp
mov
cld
adc
outs
(bad)
out
ja
jae
mov
ds
mov
shl
int3
mov
(bad)
fwait
dec
clc
addr16
idiv
jnp
aas
jge
lahf
jmp
in
aas
(bad)
aas
dec
(bad)
popf
ds
push
jle
pop
out
cmp
jae
std
(bad)
lahf
inc
mov
call
clc
xlat
std
mov
jmp
pop
repnz
std
lea
std
cld
psubd
ret
jg
jg
(bad)
cld
pop
jg
aas
hlt
sbb
imul
jg
dec
sti
mov
icebp
out
clc
xchg
(bad)
call
jg
hlt
jnp
dec
jg
out
push
fdivrp
jg
jmp
jmp
idiv
repnz
(bad)
loop
loope
(bad)
(bad)
aas
icebp
jg
retf
xlat
(bad)
mov
sbb
call
cld
jmp
cmp
shl
jmp
(bad)
cli
scas
(bad)
in
(bad)
mov
jg
jmp
aaa
std
sar
mov
(bad)
stos
cmc
jg
sub
std
mov
dec
mov
cld
outs
jg
mov
jp
in
(bad)
pop
repnz
cld
dec
inc
mov
into
mov
push
(bad)
xchg
jg
pop
(bad)
sub
cli
icebp
fistp
call
pop
(bad)
(bad)
(bad)
fidivr
jp
repnz
jl
pop
std
pop
cli
popf
pop
jmp
dec
cld
hlt
fcomip
(bad)
(bad)
pop
call
inc
(bad)
(bad)
sti
icebp
mov
jle
aas
imul
dec
inc
cmp
daa
push
fucomip
pop
(bad)
stos
outs
lahf
std
pop
xlat
jg
mov
int
lock
(bad)
repnz
not
(bad)
jmp
dec
(bad)
call
add
repnz
icebp
iret
clc
aas
(bad)
stos
jg
int
jns
repz
fstp
out
addr16
mov
(bad)
jns
aad
lock
das
jmp
cli
gs
pop
stc
(bad)
jg
std
movs
(bad)
pop
inc
pop
jmp
push
cld
cmps
pop
out
pop
std
scas
xlat
sti
(bad)
jmp
std
pop
dec
std
(bad)
dec
(bad)
scas
mov
std
call
xchg
jg
mov
(bad)
in
cmps
(bad)
fdivp
in
icebp
addr16
jg
mov
out
clc
mov
repz
inc
mov
pop
jnp
outs
cld
aas
(bad)
mov
jmp
idiv
pop
clc
sbb
jg
lahf
(bad)
neg
imul
(bad)
dec
mov
jle
pop
stc
(bad)
pop
jg
neg
(bad)
mov
leave
lahf
jb
mov
loop
cld
pop
(bad)
icebp
(bad)
jmp
iret
cli
ret
jmp
movs
std
push
(bad)
mov
cmc
icebp
lahf
lock
out
pushf
std
fst
fwait
(bad)
out
jg
das
clc
daa
scas
jle
aas
sti
jg
std
movs
jg
(bad)
call
paddw
stos
das
xchg
(bad)
pop
cld
ja
fidiv
mov
iret
out
call
(bad)
xlat
(bad)
stos
aad
cmc
or
std
pop
call
sti
movq
(bad)
(bad)
sub
sbb
jl
std
iret
(bad)
or
(bad)
mov
sti
push
arpl
inc
(bad)
mov
and
inc
aas
repnz
jle
xchg
std
xchg
(bad)
in
pop
div
jnp
dec
sti
das
jle
lahf
cli
in
lahf
(bad)
sub
call
jg
xchg
jecxz
(bad)
cmp
idiv
inc
jg
outs
imul
iret
sti
and
std
sbb
xchg
(bad)
jg
sahf
(bad)
cli
jg
fldenv
aad
jmp
in
mov
call
jmp
dec
(bad)
jmp
call
lahf
not
std
retf
jmp
jmp
stos
mov
(bad)
idiv
sti
jecxz
out
std
mov
ds
adc
call
ins
jle
jg
xlat
jge
(bad)
stc
out
cld
(bad)
imul
sti
pop
cmc
mov
dec
mov
clc
jmp
call
(bad)
movs
push
outs
sti
inc
(bad)
jmp
push
jle
fild
(bad)
ja
sti
out
xor
pop
jg
(bad)
iret
cmp
sti
push
jmp
mov
xchg
mov
(bad)
cld
mov
pop
repnz
dec
out
jno
mov
dec
idiv
pushf
jg
cmp
out
fcomip
idiv
scas
jmp
lock
(bad)
fcos
cmc
outs
mov
div
inc
(bad)
std
dec
std
mov
(bad)
in
mov
out
lahf
icebp
mov
out
mov
cmc
ja
inc
xchg
lahf
std
mov
mov
mov
ret
(bad)
aad
out
(bad)
cli
jg
ja
sub
cs
jg
mov
jne
outs
call
int
dec
inc
lahf
clc
mov
mov
cmc
dec
(bad)
jle
imul
inc
(bad)
sti
aas
idiv
out
jl
outs
in
inc
(bad)
call
std
imul
(bad)
mov
jecxz
int
sti
xchg
repnz
pop
(bad)
sbb
in
aas
(bad)
aas
aas
sti
out
push
(bad)
push
jmp
mov
outs
cld
daa
adc
dec
std
adc
cli
add
pop
cli
iret
dec
jmp
shr
aad
icebp
mov
push
dec
std
clc
in
idiv
out
scas
jg
idiv
xor
mov
movs
jg
out
sti
out
jg
sti
push
jg
iret
cld
pop
mov
lock
inc
pop
stc
fwait
sahf
std
sub
cld
xchg
mov
(bad)
jp
cld
push
(bad)
fstp
icebp
pop
cld
lea
(bad)
in
pop
repz
cli
stos
jle
cmp
jg
out
jne
or
ja
int3
in
push
(bad)
mov
imul
mov
(bad)
pop
mov
push
jg
(bad)
xchg
jle
das
std
pop
jg
pop
icebp
in
in
(bad)
jg
outs
call
(bad)
(bad)
fst
aas
test
cli
addr16
xlat
cli
out
jg
aad
aas
hlt
jnp
cmp
xchg
dec
(bad)
stc
std
(bad)
jmp
out
cld
aaa
pop
std
jmp
sti
retf
jmp
inc
inc
lahf
(bad)
push
pop
std
cmc
mov
(bad)
rcr
cli
pop
(bad)
xchg
jg
pop
mov
neg
das
push
call
mov
cli
jmp
(bad)
ja
fisub
mov
(bad)
cmc
out
std
loopne
stc
(bad)
rcr
cli
cmp
cld
pop
jg
fsubrp
cmc
idiv
aas
std
mov
retf
jg
xchg
dec
pop
cld
out
jg
out
repnz
cld
loopne
(bad)
arpl
aas
icebp
psubw
addr16
idiv
mov
pop
(bad)
jno
(bad)
lahf
clc
daa
std
pusha
out
repz
repz
(bad)
outs
clc
mov
aas
jmp
lock
sti
(bad)
or
std
cmps
mov
outs
cli
arpl
mov
out
jg
popf
pop
repnz
cld
jns
(bad)
std
cld
scas
sti
pop
pop
dec
inc
pop
(bad)
addr16
jge
scas
leave
(bad)
cld
aas
in
out
fsincos
mov
mov
scas
dec
jg
(bad)
lea
jg
mov
imul
fucomip
cmc
out
imul
in
jg
in
pop
(bad)
jne
in
pop
clc
mov
cmc
aaa
mov
dec
cld
mov
mov
jg
(bad)
lahf
std
(bad)
mov
pop
inc
(bad)
or
pop
cld
ins
inc
sti
dec
(bad)
inc
mov
(bad)
jg
fdivrp
clc
(bad)
std
retf
iret
jmp
jg
stc
aas
hlt
das
iret
dec
pop
lock
call
repz
(bad)
movs
mov
(bad)
mov
mov
shr
mov
jnp
cld
jno
call
iret
mov
mov
adc
das
(bad)
out
inc
popf
jg
fucomp
sti
jg
xchg
jmp
aas
not
std
xchg
scas
out
jmp
cmp
pop
call
(bad)
call
sar
lock
sti
(bad)
push
jg
pop
cli
adc
rcr
(bad)
std
daa
jg
fnstsw
(bad)
aas
cli
xchg
push
mov
mov
std
xchg
lahf
cld
movq
aas
xor
cld
dec
(bad)
fmul
(bad)
mov
scas
(bad)
rcr
aas
call
dec
aad
lock
fistp
xchg
jg
div
pop
std
ja
in
aas
clc
imul
clc
jae
in
push
ja
stos
(bad)
mov
out
fdivrp
xchg
mov
std
jg
(bad)
cmp
stc
sar
push
(bad)
sbb
pop
call
fistp
mov
inc
(bad)
fstp
std
jno
xlat
pop
neg
(bad)
aad
repnz
xchg
jnp
(bad)
das
cli
jge
mov
std
sar
(bad)
in
fcomip
dec
clc
xchg
jg
mov
push
mov
push
scas
cli
jnp
mov
jg
pop
jmp
sti
cmc
(bad)
out
aas
cld
daa
cmps
jg
pop
mov
rcr
cld
clc
pop
jg
(bad)
stc
pop
cld
dec
mov
cli
sar
jg
(bad)
mov
paddd
out
std
shl
(bad)
(bad)
js
scas
cld
cmc
jg
outs
jbe
pop
call
std
fwait
cld
in
(bad)
cmp
ja
loop
stc
cmp
(bad)
fstp
stc
(bad)
mov
jg
mov
ins
inc
aas
out
cmp
xlat
jle
aas
neg
jg
outs
clc
lahf
jle
fistp
in
(bad)
cli
repnz
das
jl
paddw
in
repz
(bad)
jmp
mov
iret
clc
fwait
jmp
mov
jle
scas
jno
xchg
std
arpl
lahf
xor
sub
pop
sti
jae
cmc
pop
cld
or
(bad)
jecxz
pop
stc
dec
jle
das
(bad)
cmps
jg
jmp
(bad)
sbb
jne
mov
sti
mov
fnstcw
(bad)
jg
jg
jmp
scas
jg
paddd
(bad)
stc
xchg
bnd
xchg
(bad)
xchg
outs
jg
pop
cli
jmp
cmp
(bad)
out
cmp
stc
hlt
in
lahf
xchg
inc
xor
popf
push
(bad)
push
push
scas
icebp
addr16
(bad)
ja
hlt
aas
test
jge
std
fistp
in
(bad)
cmp
outs
ss
in
pop
fdivrp
sub
mov
loopne
push
dec
aas
test
cmps
(bad)
fcomp
stc
out
outs
dec
mov
aas
not
pop
(bad)
lahf
jmp
lahf
stc
or
into
popf
iret
(bad)
mov
idiv
std
(bad)
pop
std
xlat
dec
out
hlt
cmps
jmp
jg
mov
jg
in
xlat
clc
sti
scas
(bad)
mov
setle
lods
jg
pop
jp
pop
(bad)
outs
inc
aas
clc
iret
cli
jae
in
lock
cld
adc
cld
mov
aas
jmp
in
cld
inc
mov
sar
lahf
(bad)
adc
paddb
xchg
idiv
mov
stc
repnz
push
pop
aaa
jmp
outs
cli
das
inc
jmp
outs
jge
pop
call
fcomip
aas
stc
aad
icebp
xchg
jg
call
stc
lahf
dec
cld
jp
sar
pop
(bad)
idiv
(bad)
cmps
jg
aas
jmp
sti
iret
jg
fild
repz
cld
int3
out
not
push
(bad)
out
aas
cmc
das
push
fcmovnu
sti
int
fdivp
(bad)
(bad)
fld
dec
lahf
mov
push
(bad)
clc
mov
xor
pop
std
mov
mov
imul
jmp
cld
mov
aas
dec
into
push
sar
jae
iret
inc
sar
cli
outs
fwait
scas
(bad)
mov
(bad)
fidivr
jg
jg
(bad)
cld
sar
stc
fnstsw
inc
mov
(bad)
mov
daa
mov
hlt
setbe
in
(bad)
(bad)
std
out
sahf
cld
lds
(bad)
js
paddw
pop
(bad)
fsubr
sti
imul
push
imul
cld
fwait
lahf
dec
mov
leave
pop
jno
dec
dec
cmc
pop
std
mov
cli
(bad)
and
in
fistp
std
pop
(bad)
repnz
sti
iret
idiv
(bad)
jmp
mov
(bad)
fbstp
fstp
fcomip
idiv
xchg
(bad)
jg
repnz
bnd
cmp
in
cmp
aad
repz
(bad)
cmps
dec
(bad)
aaa
(bad)
movs
mov
mov
int
fbstp
jg
aas
jge
(bad)
out
hlt
pop
cmc
lahf
sbb
fcomip
pop
jge
retf
jg
jg
outs
dec
mov
xchg
mov
jle
jg
clc
das
mov
mov
(bad)
xchg
(bad)
push
pop
cli
mov
pop
cld
movs
jmp
aas
cld
out
(bad)
ja
jmp
pop
clc
cli
mov
fcmovne
jmp
mov
mov
call
dec
std
pop
scas
dec
std
mov
inc
jg
das
clc
in
(bad)
lods
scas
jle
aas
loopne
das
clc
inc
mov
adc
cli
sub
jg
mov
test
iret
cld
(bad)
mov
xchg
pop
inc
pop
repz
push
mov
jne
pop
jp
pop
std
cmp
cmc
dec
cmp
xchg
xchg
(bad)
dec
(bad)
mov
outs
(bad)
adc
in
inc
jg
lahf
aam
stc
sar
jle
stc
das
sti
in
sahf
mov
call
pop
jecxz
std
mov
jg
lahf
std
cmps
inc
or
(bad)
fistp
dec
jg
mov
repz
cld
(bad)
mov
jle
(bad)
(bad)
xchg
aas
out
mov
mov
test
inc
push
mov
(bad)
xchg
stos
ret
pop
aas
(bad)
out
sar
xlat
clc
das
(bad)
mov
out
out
(bad)
push
dec
out
pop
std
sbb
std
outs
aaa
sti
sbb
mov
cld
adc
std
gs
out
mul
clc
cmp
idiv
lds
jecxz
std
sbb
(bad)
aam
mul
std
daa
paddd
lahf
clc
mov
hlt
idiv
or
jmp
movs
fistp
xchg
inc
mov
fnstsw
sti
pop
sbb
bnd
(bad)
cmps
call
lahf
repz
push
jmp
repnz
jmp
cld
xchg
cld
push
xchg
(bad)
jmp
clc
xlat
inc
in
icebp
fnstsw
neg
imul
jmp
(bad)
in
xlat
cli
adc
leave
jg
xchg
std
repz
pop
inc
cmc
retf
inc
fild
cli
mov
pop
fistp
mov
jle
cmp
cmp
in
scas
cli
dec
(bad)
repz
sti
mov
cld
into
push
addr16
sti
(bad)
in
call
fistp
idiv
out
cld
arpl
lahf
std
sbb
idiv
xor
jg
lahf
sti
or
(bad)
pop
imul
sti
movq
fcomip
outs
sbb
(bad)
in
aad
lock
jg
ret
mov
(bad)
jmp
clc
pop
inc
sti
das
jle
pop
repz
dec
(bad)
fwait
jle
lahf
(bad)
daa
jmp
icebp
addr16
(bad)
fidivr
mov
cli
mov
pop
jmp
out
stc
bts
jg
jecxz
imul
ins
pop
call
xlat
jg
jecxz
(bad)
cli
jmp
xlat
mov
mov
pop
cld
jno
ret
pop
lock
out
jmp
idiv
mov
mov
stc
in
daa
jg
jg
pop
cli
das
(bad)
fmul
in
std
aas
(bad)
movs
dec
jle
pop
repnz
std
outs
mov
std
cmps
mov
std
mov
jg
pop
aas
push
fdivrp
mov
push
icebp
jg
mov
jmp
ja
push
dec
jmp
popf
jg
loopne
cli
pop
jg
jmp
std
push
(bad)
popf
mov
call
cli
rcr
or
icebp
mov
cmp
xlat
out
ret
outs
mov
arpl
fidivr
loopne
cli
inc
inc
das
inc
in
call
not
pop
jg
xchg
xchg
pop
push
inc
loop
pop
stc
(bad)
xlat
aas
rep
(bad)
sar
aas
sti
dec
push
dec
pop
pushf
(bad)
(bad)
push
mov
inc
repz
mov
movs
cli
call
mov
fcomip
ja
ret
dec
aaa
(bad)
jmp
inc
pop
mov
push
std
inc
jg
out
lock
pop
pop
cld
leave
jg
mov
(bad)
cld
pop
call
das
sti
pop
mov
xlat
clc
cmp
mov
jle
(bad)
std
(bad)
add
push
mov
jle
daa
aas
cld
mov
out
mov
int3
mov
mov
cld
and
imul
mov
jecxz
jmp
std
idiv
retf
jg
pop
cmc
loop
stc
jae
cli
in
stc
pop
cli
mov
jg
scas
clc
fnstsw
jg
aas
stc
paddd
pop
dec
das
bswap
jle
pop
(bad)
push
std
sar
(bad)
sbb
jmp
jp
out
out
pop
call
mov
jmp
inc
mov
sti
xchg
sti
mov
cdq
fcomip
rcr
jg
(bad)
jg
inc
mov
mov
out
(bad)
mov
daa
jmp
push
(bad)
in
mov
pop
cli
xchg
dec
mov
xchg
call
lds
neg
mov
fdivrp
mov
jg
aas
jle
xchg
push
call
js
repz
mov
jmp
mov
xchg
jg
dec
jmp
pop
mov
scas
inc
fdivrp
leave
mov
mov
fstp
repnz
cld
imul
cli
mov
mov
shr
retf
dec
jg
pop
(bad)
cmps
(bad)
mov
xchg
aas
mov
retf
xchg
inc
loop
std
jg
jmp
xchg
push
jg
outs
hlt
icebp
scas
cmc
xchg
call
aas
(bad)
mov
(bad)
(bad)
mov
dec
dec
mov
inc
rol
jg
(bad)
iret
(bad)
in
lahf
(bad)
and
lahf
lock
jg
mov
pop
ja
in
mov
(bad)
shl
(bad)
xor
cmp
daa
jmp
adc
jg
mov
dec
(bad)
jmp
scas
stc
xlat
cld
add
mov
dec
(bad)
stos
(bad)
(bad)
mov
lock
icebp
(bad)
(bad)
jle
loope
neg
das
pop
pop
push
mov
fcmove
call
addr16
out
(bad)
in
jg
iret
stc
inc
jle
(bad)
scas
jle
aas
jp
mov
mov
lock
jmp
call
(bad)
push
xchg
in
aas
sti
out
cld
or
cli
or
fucomi
(bad)
(bad)
cli
lahf
mov
call
jge
jecxz
arpl
(bad)
pop
inc
outs
fwait
cld
xor
cli
cmp
pushf
fbstp
pop
pop
(bad)
loop
dec
clc
sbb
pop
stc
das
(bad)
sti
aaa
jg
outs
hlt
out
mov
aas
clc
fwait
push
(bad)
in
(bad)
outs
inc
(bad)
mov
std
idiv
std
xchg
(bad)
call
aas
cli
aas
call
loope
clc
(bad)
repz
cld
out
mov
jg
(bad)
(bad)
std
popf
in
push
cld
mov
paddd
out
clc
mov
sti
mov
(bad)
std
lahf
(bad)
sub
std
aas
jmp
jns
loop
std
icebp
aas
cli
push
cld
pop
jg
outs
(bad)
jp
aas
ins
std
daa
dec
scas
repz
inc
int
(bad)
push
(bad)
idiv
int
inc
mov
jecxz
in
scas
clc
inc
(bad)
push
jg
(bad)
lahf
icebp
icebp
stos
pop
pop
jl
mov
jg
fldcw
cmps
gs
fisubr
jle
out
push
push
call
mov
(bad)
out
lock
push
lds
inc
(bad)
jmp
xor
add
jmp
dec
jle
aas
ds
mov
idiv
inc
push
aas
cld
retf
push
mov
scas
dec
fcomip
jg
idiv
mov
mov
std
das
inc
movs
jg
mov
lock
inc
jg
lahf
hlt
cmp
lahf
ud0
daa
mov
lock
cli
movs
in
(bad)
xchg
mov
jle
fldcw
jg
ret
aas
movs
cmp
loop
stc
push
jg
cmc
aas
hlt
(bad)
std
retf
pop
cld
mov
jg
cli
sub
mov
lahf
lock
scas
aas
repz
std
cmp
jle
xchg
cld
mov
jle
cld
fnstsw
fcomip
cmc
(bad)
mov
jg
ret
stc
outs
test
jg
(bad)
jg
icebp
xchg
jmp
jg
idiv
xchg
jmp
in
pop
(bad)
das
jge
cmp
fcomp
push
cld
(bad)
lahf
(bad)
pop
fnstsw
ja
mov
clc
pop
sti
daa
jg
pop
icebp
xchg
call
std
icebp
pop
sbb
push
(bad)
fsubr
sti
sub
cmp
fldcw
jle
aad
(bad)
in
jns
cmc
xchg
std
mov
rcr
xchg
dec
call
repz
cli
iret
inc
test
pop
std
inc
push
mov
dec
in
aas
clc
pop
(bad)
jle
retf
out
jmp
out
stos
jg
ja
iret
jle
into
out
jmp
out
(bad)
out
jmp
lahf
sti
xchg
push
dec
inc
pop
cld
mov
ja
outs
jle
pop
(bad)
cmps
jmp
sbb
lds
mov
repnz
std
push
push
(bad)
jmp
pop
mov
idiv
xchg
stc
push
ja
std
mov
jg
pop
std
stos
mov
(bad)
jmp
jg
jg
jmp
cld
jne
jmp
jg
mov
repz
(bad)
sub
cmc
idiv
mov
(bad)
mov
(bad)
xchg
mov
jmp
(bad)
mov
pop
(bad)
fdivr
out
(bad)
std
jg
(bad)
sbb
jg
out
sti
pop
(bad)
(bad)
jmp
mov
repnz
pop
jg
outs
(bad)
imul
jmp
(bad)
call
jg
outs
(bad)
sti
cld
out
mov
dec
jmp
int
mov
cli
(bad)
aad
jmp
(bad)
fdivrp
repz
jmp
mov
cld
out
hlt
mov
jmp
(bad)
in
in
sti
sar
xchg
pop
jmp
(bad)
bnd
outs
cli
fistp
mov
(bad)
cli
(bad)
out
idiv
cmp
(bad)
pop
jg
aas
cld
lahf
std
repnz
(bad)
jmp
mov
(bad)
sub
(bad)
(bad)
fmul
(bad)
popf
mov
pop
jge
pop
std
(bad)
jg
mov
push
scas
jg
aas
call
(bad)
jle
(bad)
mov
xor
out
test
aaa
mov
fstp
clc
addr16
scas
cmc
das
dec
ret
aas
cmp
xchg
aas
jmp
iret
dec
(bad)
jmp
loop
(bad)
repnz
scas
jg
mov
jg
pop
repnz
(bad)
std
clc
pop
repnz
jg
jg
sbb
cmp
daa
std
mov
jmp
stc
pop
call
mov
xlat
jg
out
xor
(bad)
clc
pop
cli
lods
mov
daa
call
retf
jg
dec
sti
jmp
cmc
outs
cli
cmps
call
idiv
dec
mov
(bad)
stc
inc
push
inc
mov
idiv
(bad)
pop
outs
cld
out
sub
xchg
(bad)
(bad)
xchg
jg
icebp
pop
sti
out
mov
jmp
inc
inc
(bad)
fdivr
das
std
inc
mov
(bad)
ja
ret
(bad)
clc
dec
call
loop
dec
(bad)
in
mov
(bad)
jg
aas
dec
out
ss
lahf
neg
aaa
stc
mov
mov
fs
call
cld
jnp
fidiv
neg
stc
shr
(bad)
imul
mov
(bad)
jle
test
cwde
dec
ds
mov
repz
in
aas
cmc
outs
sti
jge
call
jg
scas
push
daa
mov
push
dec
jle
aas
in
cli
or
aam
(bad)
(bad)
mov
neg
ud0
iret
clc
mov
clc
(bad)
jg
daa
aas
stc
iret
jle
aaa
inc
jg
(bad)
cld
lahf
jg
outs
std
arpl
(bad)
aas
(bad)
scas
jg
pop
sti
cmps
cmp
out
dec
dec
jne
neg
xlat
cli
sub
cli
cmps
inc
out
jg
dec
jg
lock
jl
aas
jnp
lahf
(bad)
jmp
dec
xchg
(bad)
pop
(bad)
out
push
std
(bad)
mov
test
mov
pop
std
pop
jg
(bad)
stc
in
call
pop
(bad)
jmp
repnz
call
mov
lahf
stc
stos
(bad)
mov
pop
in
std
xchg
pop
pop
cld
scas
jg
lahf
stc
(bad)
dec
iret
lods
push
std
mov
mov
(bad)
(bad)
jmp
(bad)
mov
out
sar
cld
lahf
clc
fwait
inc
jg
mov
ja
aas
std
aas
call
std
jnp
fdivrp
hlt
(bad)
fnstsw
fcomip
(bad)
fdivp
pop
neg
aas
jg
(bad)
(bad)
out
fucomip
idiv
retf
sahf
(bad)
popf
jg
repz
cld
xchg
jg
push
mov
fucomip
std
add
fdivr
std
out
jle
mov
mov
jnp
jnp
(bad)
not
lods
(bad)
scas
aas
repnz
cmc
jmp
(bad)
clc
cdq
jg
mov
jge
jecxz
sub
test
sar
mov
(bad)
iret
inc
cmps
lahf
(bad)
sub
cmps
mov
lahf
nop
jg
(bad)
cld
jnp
lea
iret
clc
gs
scas
not
(bad)
xchg
aad
mov
jg
jae
(bad)
jmp
mov
aas
cwde
(bad)
data16
in
pop
call
mov
mov
jnp
repz
xlat
std
mov
std
call
out
(bad)
jmp
push
dec
idiv
aas
in
sti
dec
(bad)
pushf
aas
neg
fdivr
sar
jecxz
in
icebp
call
aas
out
fscale
xor
outs
cli
dec
pop
mov
std
addr16
sti
cmp
daa
jg
addr16
(bad)
mov
jmp
fwait
pop
(bad)
cmp
lahf
std
hlt
outs
dec
out
scas
sar
dec
fstp
xchg
(bad)
jmp
call
idiv
out
icebp
in
cli
dec
dec
(bad)
js
aaa
sti
lahf
sahf
std
bnd
lahf
aas
jge
paddb
std
mov
aas
std
xchg
std
mov
jle
jg
jmp
sti
jmp
jbe
pop
inc
fild
sbb
push
std
fidivr
(bad)
std
mov
out
xlat
sti
arpl
sahf
mov
addr16
pop
mov
mul
aaa
(bad)
sti
jg
fcomip
out
pushf
call
cmc
mov
inc
cmp
cli
(bad)
jle
aaa
std
mov
icebp
mov
mov
mov
clc
mov
outs
hlt
out
push
(bad)
(bad)
scas
js
cli
pop
out
cld
jmp
inc
inc
cld
outs
out
std
push
mov
cld
add
(bad)
jnp
stc
out
std
mov
(bad)
jg
pop
pop
std
icebp
movd
fwait
pop
cli
imul
std
mov
push
xlat
sti
in
call
hlt
pop
(bad)
cli
(bad)
stc
xchg
mov
jg
pop
cld
in
mov
aas
imul
cld
mov
pop
std
arpl
mov
jecxz
sti
ret
mov
aas
jecxz
std
test
stos
dec
clc
xchg
mov
out
(bad)
out
inc
icebp
mov
jmp
(bad)
call
repz
sbb
(bad)
fidivr
xchg
(bad)
jmp
leave
(bad)
mov
fwait
(bad)
loope
mov
xlat
std
inc
push
(bad)
jmp
jg
aaa
std
and
repz
cmp
jg
idiv
sub
imul
(bad)
mov
iret
ret
(bad)
sahf
xchg
mov
in
pop
(bad)
jmp
jmp
pop
sti
addr16
(bad)
out
pop
sti
lods
(bad)
(bad)
pop
cli
lahf
pop
(bad)
loopne
out
cli
rcr
lahf
cld
(bad)
cld
imul
(bad)
mov
fcomi
pop
std
leave
jg
pop
icebp
out
cmp
xchg
aas
idiv
(bad)
fidivr
pop
bnd
retf
pop
clc
in
pop
pop
lods
jg
pop
imul
aaa
(bad)
xchg
jg
aas
clc
test
idiv
(bad)
std
inc
out
mov
(bad)
sbb
sbb
pop
icebp
stos
dec
(bad)
das
dec
neg
std
xchg
mov
cld
push
(bad)
std
scas
cmc
cmp
mov
std
(bad)
jg
pop
cli
mov
fcomi
(bad)
clc
jnp
iret
jmp
scas
cli
sbb
mov
jle
call
retf
mov
jg
pop
cli
iret
call
jmp
cli
pop
(bad)
jmp
push
fcomip
mov
movs
(bad)
pop
std
ins
(bad)
clc
pop
xchg
cld
cmps
inc
push
iret
cld
loop
(bad)
ficomp
stc
(bad)
ja
lds
sbb
jg
sti
cld
pop
lahf
mov
ins
(bad)
cs
jg
pop
jnp
(bad)
cmps
jg
out
stc
aas
(bad)
clc
lahf
jmp
ja
cmp
xor
jmp
inc
mov
jg
std
pop
sar
in
das
sti
(bad)
pop
out
(bad)
cli
or
cld
cmp
std
mov
cdq
(bad)
cdq
aas
clc
xor
xlat
clc
cmp
(bad)
scas
jg
scas
cli
aas
dec
iret
jg
(bad)
jns
ja
(bad)
pop
push
inc
stc
repnz
stc
(bad)
xchg
fucomip
scas
mov
mov
inc
adc
(bad)
jg
aas
loope
cld
jmp
mov
cld
dec
call
jg
imul
aas
jle
aaa
mov
leave
mov
mov
outs
jle
repz
aas
cld
push
scas
jg
mov
pop
aas
sti
push
xlat
jg
pop
cmc
mov
xchg
(bad)
mov
std
shl
repz
push
(bad)
imul
jmp
in
push
inc
sahf
cld
stos
jmp
in
out
cli
mov
jle
iret
jg
mov
hlt
inc
call
xor
fidiv
jle
aas
(bad)
test
jnp
aad
cmc
cmps
dec
jg
call
jmp
fdivr
clc
(bad)
inc
call
cli
(bad)
mov
inc
lock
stc
mov
out
std
jmp
clc
arpl
rol
xchg
(bad)
jmp
out
pop
repz
cld
adc
push
push
aas
stc
popf
out
lods
(bad)
mov
dec
aas
jmp
stc
pop
call
cmp
pop
(bad)
aas
imul
paddb
jmp
pop
cld
inc
std
retf
jg
outs
stc
or
mov
mov
fcomip
sar
cli
call
cld
ret
(bad)
jle
aas
repnz
call
jg
mov
ins
inc
std
(bad)
push
aas
cld
ret
jg
(bad)
lahf
(bad)
daa
call
lahf
mov
dec
cli
cmc
mov
cmps
jg
outs
sub
sahf
ja
sti
push
out
sahf
addr16
jg
dec
(bad)
lods
mov
clc
repz
scas
clc
cmps
jmp
clc
jg
out
repnz
inc
pop
jmp
clc
das
(bad)
cli
jmp
mov
aas
in
cld
fidivr
cli
das
(bad)
xchg
(bad)
mov
addr16
sti
int
mov
repz
das
(bad)
push
cmps
mov
repnz
cli
(bad)
jmp
mov
arpl
das
lahf
(bad)
jmp
idiv
jg
aaa
mov
jle
aas
hlt
out
std
(bad)
into
aas
(bad)
fwait
cld
mov
fist
pop
cld
lahf
dec
mov
dec
dec
cli
xchg
aas
out
std
jmp
scas
cld
jmp
(bad)
fdivp
scas
cli
jne
lock
pop
cdq
(bad)
das
jmp
in
outs
imul
lahf
cli
repnz
dec
cli
out
cld
xor
pop
jl
pop
dec
mov
cmp
fcomip
imul
call
scas
cmc
(bad)
inc
dec
das
(bad)
loop
out
leave
(bad)
fcomp
mov
fmul
(bad)
push
(bad)
xchg
sbb
std
jmp
inc
push
mov
(bad)
stos
fcomip
xlat
std
ficomp
(bad)
call
loopne
in
dec
stc
in
std
out
std
xor
inc
cld
sbb
repz
(bad)
cmp
retf
iret
dec
fcomip
xchg
(bad)
xchg
std
dec
jg
lahf
jnp
iret
clc
xchg
mov
adc
call
imul
sar
out
std
popf
ja
scas
jg
daa
jg
aas
(bad)
in
lahf
cld
sar
jmp
mov
clc
lds
(bad)
std
push
(bad)
cmp
jmp
aaa
(bad)
mov
addr16
mov
jg
outs
hlt
pop
call
jecxz
cmc
(bad)
mov
daa
outs
(bad)
mov
loope
clc
and
hlt
mov
scas
jg
(bad)
sub
push
pop
dec
jge
xchg
aas
sub
imul
mov
inc
mov
(bad)
mov
cmc
push
pop
(bad)
mov
fucomp
cmc
dec
mov
xlat
mov
jg
iret
std
stos
dec
scas
cld
(bad)
(bad)
inc
icebp
iret
(bad)
sbb
(bad)
pop
sahf
std
mov
cmc
scas
(bad)
gs
out
imul
imul
(bad)
push
push
ja
out
jmp
xchg
idiv
sti
jmp
aas
div
stc
(bad)
inc
int3
(bad)
jmp
scas
(bad)
(bad)
mov
stos
mov
popf
jg
icebp
iret
cld
outs
das
call
jge
popf
ins
push
jmp
mov
scas
(bad)
mov
jmp
dec
cmp
scas
repz
outs
iret
retf
aas
mov
stos
jg
pop
cld
mov
(bad)
aas
cmc
mov
imul
jg
cmc
(bad)
aaa
dec
call
call
scas
clc
lea
push
(bad)
pop
mov
aad
(bad)
cmp
pop
jg
outs
jg
sub
(bad)
in
push
jl
iret
stc
or
cli
fistp
ja
mov
fiadd
(bad)
mov
sti
xor
mov
fidivr
std
(bad)
mov
inc
div
jg
aas
out
std
daa
jg
aas
push
pop
std
jp
mov
fcomip
rcr
out
aaa
jl
xlat
jle
jg
mov
outs
pop
(bad)
ss
fstp
std
push
jg
pop
idiv
pop
(bad)
fdivr
aas
neg
push
loop
(bad)
out
(bad)
aam
repnz
(bad)
call
pop
daa
jmp
jnp
lock
mov
push
(bad)
jmp
pop
call
pop
push
inc
inc
mov
mov
out
call
cmc
imul
scas
stc
idiv
btr
cmc
lahf
std
push
cmp
imul
jmp
ja
dec
mov
das
(bad)
pop
cld
push
mov
(bad)
outs
jg
addr16
fidivr
outs
dec
ja
(bad)
fucomip
pop
jge
jg
mov
sti
aad
stc
cmps
std
ins
mov
jle
aaa
cld
outs
mov
idiv
mov
stc
adc
fucomp
jnp
fcmovne
jg
aas
out
cld
fwait
ds
popf
(bad)
loop
jg
aas
cli
inc
call
repnz
pop
into
(bad)
scas
jle
xchg
jg
aas
icebp
cmp
leave
pop
mov
cmc
(bad)
(bad)
outs
mov
aas
in
idiv
test
data16
cld
sbb
mov
jg
std
addr16
push
call
pop
mov
(bad)
loop
in
fwait
(bad)
jae
pop
(bad)
fidivr
mov
pop
mov
out
cmc
pop
inc
cmp
das
call
(bad)
movs
(bad)
in
out
jg
dec
in
(bad)
mov
repnz
mov
mov
in
cli
pop
jg
scas
std
aaa
std
xor
inc
fbstp
lock
jmp
(bad)
aad
dec
mov
sti
sbb
(bad)
cli
xlat
(bad)
(bad)
scas
cli
add
ror
lods
(bad)
mov
mov
repnz
clc
retf
call
(bad)
and
repnz
outs
std
icebp
mov
dec
out
std
mov
call
(bad)
aas
icebp
cmp
(bad)
sub
mul
sti
(bad)
in
das
call
clc
fwait
jg
jg
idiv
jle
stos
dec
popf
std
xchg
stos
aas
in
(bad)
clc
cli
in
repz
cld
jmp
push
in
popf
cld
inc
fistp
(bad)
jle
xchg
mov
mov
add
mov
lock
cmps
cld
pop
mov
cmp
test
sbb
das
std
idiv
in
std
jl
aas
mov
pop
(bad)
jnp
dec
(bad)
clc
outs
jbe
push
mov
pop
jg
clc
das
and
rcr
std
pop
std
fild
lds
ja
push
idiv
out
lds
dec
(bad)
aas
jg
scas
(bad)
out
fstp
imul
mov
(bad)
clc
mov
(bad)
aas
stc
std
(bad)
fdivrp
out
ja
mov
fnsave
std
es
(bad)
out
(bad)
jnp
push
call
call
cmc
mov
mov
push
call
icebp
idiv
dec
stc
arpl
into
(bad)
std
xor
(bad)
outs
sti
sbb
daa
mov
jne
cmc
pop
lock
scas
mov
das
std
dec
jg
in
(bad)
(bad)
in
scas
cld
or
out
(bad)
clc
(bad)
iret
(bad)
mov
pop
jmp
ins
das
(bad)
mov
out
stc
lds
mov
sub
mov
popa
sti
push
paddd
clc
mov
mov
mov
pop
jg
(bad)
in
(bad)
(bad)
stc
scas
(bad)
mov
sti
aas
test
mov
sbb
idiv
in
xlat
push
pop
repz
pop
dec
pop
jg
outs
stc
cmp
sar
(bad)
fist
lahf
std
jmp
clc
out
(bad)
mov
outs
(bad)
das
std
ja
sub
xchg
movs
jg
(bad)
sti
aas
dec
pop
(bad)
cmp
icebp
sbb
cmps
in
repz
cld
shr
cld
(bad)
inc
xchg
jg
(bad)
hlt
mov
jnp
mov
mov
repnz
jns
aas
cld
out
out
xchg
aas
outs
jno
lahf
mov
jns
daa
(bad)
jp
enter
inc
std
add
out
inc
(bad)
fcmovne
(bad)
vmptrst
(bad)
fnstsw
jle
dec
jmp
jg
outs
push
jmp
clc
dec
clc
int
stc
fcomip
jecxz
jnp
loope
aas
(bad)
(bad)
mov
pop
std
data16
out
outs
repz
out
cld
cdq
(bad)
jmp
stc
xchg
(bad)
mov
in
iret
mov
jg
mov
ficomp
cmps
std
jmp
leave
fcomip
xchg
addr16
jg
(bad)
pop
(bad)
cdq
jmp
out
mov
mov
sti
(bad)
dec
ror
xchg
aas
hlt
idiv
lods
(bad)
clc
aas
cli
mov
mov
in
mov
jmp
daa
mov
cmps
jg
dec
fdivr
dec
(bad)
popf
pop
jmp
std
mov
mov
scas
cld
cdq
mov
iret
mov
fcomip
daa
jge
neg
dec
mov
icebp
std
mov
push
jg
(bad)
clc
scas
dec
rcr
repz
aas
out
mov
aas
stc
jmp
cld
inc
dec
(bad)
div
outs
cli
aas
out
jg
(bad)
fcos
shr
div
jle
lahf
(bad)
aas
(bad)
jecxz
call
(bad)
cld
mov
(bad)
stc
(bad)
jmp
(bad)
movs
aas
(bad)
icebp
mov
mov
jge
jne
cli
or
out
pop
clc
cmps
cld
out
stos
jg
lahf
sbb
sub
ins
xchg
pop
jg
mov
cld
add
loopne
repnz
(bad)
mov
sti
addr16
mov
stc
int
mov
mov
jg
jecxz
out
pop
std
or
popf
jmp
jg
addr16
xchg
push
dec
jl
idiv
(bad)
leave
stc
pop
(bad)
out
inc
xchg
das
jle
aas
repnz
repz
in
mov
clc
inc
dec
dec
cld
idiv
(bad)
pop
lock
outs
int
shl
pop
cli
jecxz
mov
pop
xacquire
mov
std
das
cld
sub
(bad)
cdq
mov
inc
(bad)
repnz
(bad)
fwait
inc
pop
icebp
idiv
fistp
jg
mov
scas
jle
mov
inc
push
(bad)
clc
ret
mov
fdivrp
(bad)
jnp
fistp
dec
out
call
jmp
jg
cmp
aad
jmp
aas
stc
aad
cmc
dec
retf
out
pop
stc
jmp
cli
(bad)
(bad)
cmp
sar
iret
cld
int
out
std
pop
push
(bad)
jmp
xor
btr
test
mov
std
(bad)
fnstenv
fdivr
jmp
mov
outs
jg
jg
das
(bad)
imul
arpl
paddd
aas
sti
ja
aas
repnz
sti
mov
xchg
xchg
pop
cld
jmp
pop
std
mov
(bad)
in
fucomip
push
(bad)
jmp
sti
pop
cld
sbb
out
sti
outs
(bad)
daa
push
jg
lahf
hlt
pop
call
jg
out
test
(bad)
fdivr
jno
imul
fcomip
in
scas
cli
or
clc
xlat
stc
pop
(bad)
test
dec
out
dec
(bad)
xchg
cld
out
call
lahf
xchg
jl
paddw
sti
cld
hlt
out
lock
cld
jecxz
cmc
fcomip
jnp
or
(bad)
popf
aas
clc
loope
sar
push
mov
cld
jnp
jmp
pop
repz
jmp
jmp
clc
adc
mov
in
cmps
(bad)
mov
paddd
(bad)
sti
push
jmp
xchg
pop
(bad)
pop
out
cld
(bad)
(bad)
jmp
cld
mov
xchg
jle
mov
jle
fbstp
psubq
(bad)
(bad)
dec
pop
cld
jne
lock
cli
scas
out
cld
add
rcr
jl
sub
iret
stc
jae
out
repnz
inc
std
lods
jg
outs
repz
(bad)
mov
jg
sti
push
das
sti
test
outs
cld
sub
jmp
loope
mov
int
jle
stc
stc
push
jmp
mov
cld
xchg
jmp
inc
(bad)
cmp
cmps
jmp
mov
jg
push
mov
jecxz
hlt
out
js
sti
inc
jmp
loopne
inc
in
idiv
or
cmp
std
iret
std
cli
jg
aas
sti
outs
jmp
jecxz
cmc
or
loope
inc
mov
fwait
(bad)
call
pop
jmp
jg
fwait
jnp
jmp
mov
sti
lds
cld
daa
std
push
jg
jecxz
loope
das
clc
or
hlt
xchg
xor
loopne
cld
(bad)
jg
stos
(bad)
mov
cmp
(bad)
pop
(bad)
stos
jg
sar
daa
dec
mul
fdivr
jg
jg
(bad)
(bad)
sbb
jecxz
push
jmp
lahf
lock
lahf
ds
das
popf
cmp
xlat
dec
clc
repz
(bad)
xor
icebp
jg
aaa
std
dec
mov
call
not
jge
mov
std
cmps
(bad)
jnp
ficomp
in
push
outs
std
jge
(bad)
clc
out
std
aad
jmp
dec
fistp
and
jne
push
jg
jmp
outs
mov
adc
(bad)
stc
out
push
out
cli
ud0
aam
mov
sti
(bad)
fnstsw
icebp
lahf
lock
fdivr
jne
rcr
std
fucomip
(bad)
repnz
hlt
(bad)
jmp
retf
cmp
cmps
inc
stc
das
clc
cmp
(bad)
std
pop
push
push
scas
repz
(bad)
xlat
jg
outs
hlt
pop
(bad)
xor
jmp
jg
dec
cmp
out
(bad)
in
addr16
pop
(bad)
pop
std
loopne
cld
out
pop
pop
std
call
ds
out
cmc
aas
stc
xlat
cld
loop
mov
aad
repz
call
aas
jecxz
cmp
shl
iret
pop
cld
pop
jg
aas
jle
aas
(bad)
pop
(bad)
fistp
sub
ja
aad
jmp
inc
jmp
daa
push
std
sti
mov
push
aas
(bad)
pop
cld
leave
xchg
(bad)
sti
jg
mov
cmp
aas
sahf
scas
retf
(bad)
pop
ds
mov
out
jnp
stc
scas
stc
arpl
jecxz
std
sar
(bad)
sti
mov
std
mov
mov
out
jmp
jg
iret
(bad)
push
dec
inc
aas
icebp
aas
js
inc
out
dec
(bad)
pushf
pop
sub
stc
mov
ds
call
mov
(bad)
out
jmp
scas
aas
fcmovnu
jg
out
sti
(bad)
retf
outs
cld
cdq
cmp
stos
jg
mov
xchg
inc
loope
outs
repnz
cld
mov
ds
imul
popf
mov
das
inc
scas
dec
(bad)
(bad)
daa
dec
mov
repnz
(bad)
jp
(bad)
pop
std
pop
das
inc
pop
(bad)
in
jg
(bad)
cld
(bad)
call
pop
ja
jecxz
loope
neg
(bad)
das
call
das
jmp
call
(bad)
popf
fcomip
das
clc
sar
scas
std
(bad)
call
lock
mov
jg
mov
aaa
(bad)
std
push
aad
pop
hlt
mov
repz
(bad)
pop
cld
sub
std
das
mov
scas
(bad)
mov
rcl
jg
mov
call
dec
retf
outs
clc
ja
mov
std
repnz
mov
jg
cmc
cmps
jge
jecxz
int
clc
pop
std
or
mov
repz
std
gs
loop
clc
int
fnstcw
push
jmp
aas
mul
jmp
ret
out
std
fwait
std
dec
inc
outs
sti
imul
mov
xchg
std
cmp
jl
idiv
arpl
dec
dec
cmc
(bad)
clc
push
jg
lahf
(bad)
idiv
jmp
loope
pop
(bad)
push
(bad)
stc
cld
dec
clc
inc
jg
jg
inc
(bad)
cmp
out
(bad)
addr16
in
jmp
out
inc
fcomip
stos
jg
ja
sti
cmps
mov
cld
(bad)
mov
jg
scas
jae
stos
jmp
jl
pop
cld
das
jg
cmc
pop
pop
in
inc
aas
in
in
pop
clc
jmp
sahf
cmc
lahf
idiv
(bad)
idiv
xchg
out
(bad)
std
pop
(bad)
mov
xchg
jmp
jmp
cld
outs
jp
pop
(bad)
lods
jg
lahf
aaa
dec
imul
clc
int
in
jg
dec
jge
(bad)
std
pop
mov
lahf
dec
stos
fistp
jmp
(bad)
cmps
jle
aas
lock
cmp
pop
jg
test
inc
(bad)
xlat
inc
stos
jnp
jmp
neg
push
int
xor
cmc
call
jg
jg
ins
ds
cmc
iret
std
cmps
push
pop
lock
xor
jg
sub
aas
pop
pop
(bad)
pop
jg
aas
std
sti
pop
std
dec
mov
mov
out
std
stos
(bad)
fstp
jg
scas
dec
jle
pop
std
imul
ficomp
hlt
mov
cmp
fucomip
cld
xchg
cmp
cli
outs
cli
mov
aaa
cmps
mov
mov
outs
std
mov
outs
cld
and
cmc
cmps
mov
loope
cli
pop
cld
xor
cmp
or
push
mov
jmp
mov
(bad)
clc
mov
fcomip
sbb
push
push
scas
sti
arpl
mov
jg
hlt
idiv
outs
jg
out
(bad)
push
inc
fnstsw
das
sti
sar
call
jg
lods
(bad)
out
clc
xchg
std
aas
stc
mov
std
call
leave
(bad)
clc
xchg
cs
sti
pop
icebp
rcr
repnz
dec
stos
sar
jnp
stc
jg
das
cld
push
jg
lahf
cld
daa
(bad)
mov
jmp
jle
idiv
cs
out
(bad)
pop
(bad)
jno
fisubr
fwait
jmp
xlat
mov
(bad)
std
mov
call
shl
xchg
das
cs
mov
scas
cld
aas
(bad)
(bad)
jg
std
inc
jg
fucomip
aas
std
mov
neg
in
(bad)
inc
out
cld
(bad)
neg
clc
jg
idiv
outs
stc
ins
jle
shl
ud0
(bad)
out
(bad)
call
cld
pop
cld
fstp
stc
dec
jbe
lea
(bad)
call
aas
jecxz
mov
pop
xchg
popf
repnz
cld
adc
mov
lods
stos
jmp
dec
cld
in
sahf
cld
popf
addr16
pop
clc
push
lahf
(bad)
ss
out
sti
cmp
add
ret
pop
lock
out
popf
call
(bad)
out
call
dec
dec
(bad)
in
lahf
cld
loop
jnp
mov
push
(bad)
clc
out
lock
es
(bad)
jmp
xor
(bad)
(bad)
out
jg
psubq
outs
clc
cmp
xchg
fcomip
scas
sti
shr
(bad)
cli
jg
xchg
stos
das
jle
pop
stc
xor
call
xchg
jg
std
dec
(bad)
cld
iret
cli
sbb
(bad)
outs
std
pop
pushf
cld
adc
clc
stos
fcomip
lahf
push
int3
push
dec
(bad)
cmps
jle
(bad)
cmp
retf
jmp
rcr
jmp
cli
or
inc
lahf
jl
out
stc
jge
mov
loopne
daa
pop
pop
std
retf
jg
mov
xchg
(bad)
mov
sbb
dec
stc
sbb
into
pop
idiv
(bad)
mov
push
(bad)
mov
jnp
cld
ja
fcmovnu
cmp
sti
idiv
fidivr
(bad)
fisttp
sti
addr16
(bad)
imul
mov
cmp
stc
pop
jle
paddd
lods
sahf
(bad)
sar
scas
mov
(bad)
lea
(bad)
in
push
scas
dec
add
(bad)
jg
btc
cld
daa
jg
jg
stc
daa
call
mov
(bad)
clc
out
test
std
pop
jmp
stc
ja
inc
(bad)
cld
outs
test
out
std
push
ud0
xchg
jg
jg
in
(bad)
inc
(bad)
aas
clc
lods
(bad)
mov
sti
outs
(bad)
mov
out
lahf
dec
fdivrp
inc
inc
leave
pop
cld
lahf
(bad)
hlt
mov
mov
call
js
paddw
cmc
scas
sti
das
(bad)
lods
jmp
pop
call
pop
test
(bad)
out
iret
scas
std
jg
inc
dec
outs
sti
idiv
push
iret
jg
jg
outs
clc
(bad)
test
call
cli
(bad)
jmp
dec
jnp
daa
std
add
leave
jg
outs
mul
cld
add
hlt
std
jg
addr16
cld
xchg
jg
jg
cmp
mov
call
aaa
mov
outs
(bad)
out
pop
pop
std
(bad)
jg
(bad)
div
repnz
jge
(bad)
jne
leave
(bad)
mov
div
lahf
clc
xchg
(bad)
lods
push
(bad)
in
dec
std
mov
inc
neg
(bad)
xchg
(bad)
fcos
cld
das
cli
retf
inc
repz
out
pop
lock
std
adc
ror
jle
out
mul
aas
ja
xchg
mov
jmp
call
imul
leave
lahf
jnp
sti
cld
out
fldcw
test
std
pop
(bad)
push
inc
fnstsw
xlat
jmp
stos
aas
repnz
cld
into
mov
cld
out
fstp
dec
jecxz
repz
(bad)
es
fstp
jg
aaa
dec
jg
stos
jle
aas
cmc
fwait
cld
lods
mov
ja
mov
out
into
(bad)
fnstsw
dec
fbstp
fst
push
std
(bad)
adc
(bad)
mov
(bad)
jp
jg
jg
aaa
(bad)
out
(bad)
cdq
jg
pop
(bad)
idiv
int
hlt
(bad)
pop
dec
dec
repz
ins
pop
(bad)
(bad)
sar
pop
std
cmps
jg
idiv
fistp
cld
retf
mov
loopne
mov
popf
pop
stc
lods
jg
pop
sti
cmp
retf
jg
(bad)
scas
cld
push
jle
scas
sti
aas
jle
mov
(bad)
mov
jle
jg
jg
push
cld
loop
in
aas
clc
outs
stc
adc
icebp
fbstp
aad
push
(bad)
sbb
push
(bad)
sar
pop
cmp
stos
(bad)
jmp
repz
fidivr
(bad)
xor
clc
jnp
(bad)
jecxz
jg
pop
sti
(bad)
mov
mov
out
sti
arpl
mov
hlt
push
std
ret
mov
dec
dec
outs
push
cld
cmp
shr
dec
call
lock
cld
jae
mov
(bad)
(bad)
repnz
jecxz
ds
inc
dec
icebp
jg
mov
fcomip
xchg
std
mov
cld
loopne
lahf
dec
in
jl
jg
pcmpeqd
mov
std
push
cli
icebp
jg
scas
sti
cld
out
jmp
mov
jp
pop
(bad)
mov
sti
movs
jg
out
jmp
in
repz
fpatan
jg
aaa
cld
movs
mov
das
cld
popa
fcmovnb
jg
loop
dec
dec
(bad)
std
stos
(bad)
jmp
(bad)
mov
repz
jl
aas
cld
(bad)
in
(bad)
dec
std
pop
jg
jg
pop
std
inc
call
push
std
daa
mov
pop
(bad)
and
xlat
cld
pop
(bad)
xchg
aas
not
inc
jg
jg
fstp
jg
push
pushf
call
clc
test
mov
popf
xchg
fcomip
idiv
xchg
pop
out
mov
test
jle
fstp
(bad)
cld
fnstsw
call
fwait
das
jle
outs
repnz
push
(bad)
aas
(bad)
pop
(bad)
fsubr
in
cli
out
fwait
div
sti
in
(bad)
mov
retf
aas
icebp
pop
mov
dec
(bad)
test
repz
(bad)
xchg
jmp
push
mov
xlat
cli
mov
call
mov
fwait
(bad)
(bad)
out
mov
(bad)
mov
fidivr
(bad)
mov
loop
(bad)
das
(bad)
stc
mov
jle
aas
hlt
(bad)
repz
idiv
scas
sti
push
jg
stos
pop
jg
aas
clc
addr16
retf
pop
cld
add
imul
out
cld
(bad)
fistp
jmp
(bad)
aaa
(bad)
scas
pop
xor
std
dec
mov
out
call
cmps
std
in
cmc
(bad)
mov
outs
lock
ds
fistp
inc
call
iret
(bad)
cdq
(bad)
in
mov
sub
test
repz
mov
mov
mul
std
leave
(bad)
fcomp
addr16
movlhps
out
stc
hlt
neg
cli
aas
(bad)
(bad)
jg
pop
clc
repnz
fistp
mov
stc
(bad)
ja
(bad)
fnstsw
call
scas
clc
gs
fdivr
mov
jle
(bad)
call
(bad)
stc
jmp
psubd
jmp
and
mov
std
sbb
sti
inc
jg
aad
lock
cld
std
dec
(bad)
adc
pop
repz
jg
(bad)
xchg
jmp
clc
daa
out
mov
jg
aas
(bad)
sti
(bad)
jge
jg
shr
idiv
std
fidivr
addr16
mov
(bad)
(bad)
das
(bad)
call
cmp
mov
jg
in
(bad)
aas
std
xor
cld
xchg
paddusw
mov
stc
jmp
mov
loopne
pop
clc
fwait
call
mov
sbb
pop
icebp
aaa
std
jecxz
das
cli
inc
(bad)
cli
mov
ds
gs
(bad)
(bad)
lods
stos
pop
jecxz
call
jg
jecxz
les
cmc
das
push
inc
jg
dec
call
(bad)
call
les
(bad)
(bad)
scas
dec
jle
jmp
out
sti
cmp
(bad)
mov
push
xchg
mov
cld
dec
aas
ins
(bad)
xchg
(bad)
jp
mov
mov
icebp
scas
cld
cmc
fistp
fist
scas
cld
pop
call
fcomip
outs
sub
xchg
cmp
mov
adc
aad
cli
out
dec
jg
scas
jnp
imul
jecxz
fistp
cld
movs
inc
out
cmc
(bad)
push
aas
icebp
aad
fcomip
scas
std
adc
aas
not
jg
push
pop
cld
fnstsw
jg
clc
mov
in
outs
sti
aas
call
ds
sub
jmp
(bad)
std
shl
xchg
loope
(bad)
in
daa
jg
pop
hlt
sbb
std
jg
pop
repz
mov
push
jg
lahf
(bad)
xchg
std
popf
jg
outs
icebp
dec
popf
(bad)
cmp
(bad)
clc
jg
xlat
dec
(bad)
nop
fild
dec
dec
rcr
idiv
jecxz
fwait
jg
jmp
jg
(bad)
mov
idiv
scas
inc
mov
clc
pop
inc
not
mov
iret
jmp
lahf
(bad)
cmp
(bad)
(bad)
rcr
out
mov
icebp
pop
(bad)
scas
aas
stc
cmc
jg
out
fdivrp
daa
mov
inc
mov
retf
inc
jg
das
stc
add
into
jg
pop
stc
jnp
mov
mov
jg
idiv
mov
cld
out
stc
idiv
jg
xlat
stc
or
(bad)
std
jg
(bad)
clc
cmps
(bad)
lods
repnz
jecxz
cli
xchg
xchg
(bad)
out
mov
outs
std
mov
lock
call
xchg
jmp
rcr
fistp
std
lahf
jg
out
std
idiv
iret
inc
jg
scas
repz
pop
call
jg
scas
repz
push
(bad)
sti
jg
pop
clc
xlat
cld
jne
jmp
jg
mov
dec
std
retf
in
pop
idiv
out
mov
out
cld
ins
lahf
std
pop
jg
fistp
std
sub
jmp
clc
jne
mov
idiv
(bad)
loop
stc
pop
(bad)
movs
aas
loop
(bad)
jge
cdq
cmc
repnz
cmps
cld
sar
pop
repz
lock
cmp
adc
(bad)
stc
aas
cld
std
jg
cli
fidivr
inc
std
xchg
std
scas
cld
pop
aas
jmp
push
call
scas
call
repz
sti
pop
push
fyl2x
aas
clc
out
jl
jecxz
(bad)
aas
not
(bad)
sti
dec
pop
mov
(bad)
mov
(bad)
pop
cld
in
mov
call
(bad)
call
add
stc
in
jg
aad
(bad)
loope
outs
sahf
cld
dec
jg
jg
leave
push
icebp
jg
(bad)
cmc
jg
and
outs
(bad)
aam
pop
(bad)
sti
cld
jge
out
jg
idiv
mov
mov
iret
mov
std
mov
out
out
cmc
xchg
scas
mov
(bad)
out
cli
out
pop
jmp
ficomp
std
arpl
xor
aas
idiv
ja
in
cli
mov
inc
jle
jg
outs
(bad)
pop
(bad)
aad
jmp
(bad)
(bad)
(bad)
aas
jle
jg
out
jnp
clc
xor
xlat
clc
mov
pop
mov
dec
jg
sbb
inc
jg
jmp
cmp
call
fcomip
sti
cld
push
jg
(bad)
(bad)
out
sti
leave
mov
jecxz
cmps
pop
repz
jmp
(bad)
scas
std
int
cli
mov
call
cli
pop
inc
fild
inc
mov
clc
mov
mov
ja
jg
pop
push
icebp
setl
cmps
(bad)
call
(bad)
rcr
scas
cld
dec
push
mov
xchg
mov
pop
(bad)
cld
mov
mov
std
pop
call
mov
out
enter
call
retf
jg
pop
stc
push
fbld
scas
cld
(bad)
fwait
leave
ja
ret
(bad)
cmp
jmp
mov
pop
(bad)
mov
iret
sti
inc
pop
(bad)
in
lock
fstp
fstp
(bad)
fwait
jle
clc
pop
sti
test
mov
lahf
(bad)
xchg
xchg
aas
loope
pop
jl
xchg
pop
inc
call
leave
iret
in
(bad)
mov
cmp
jmp
into
je
ja
idiv
mov
xlat
std
ss
out
std
mov
into
ja
jg
outs
(bad)
std
(bad)
xchg
cld
mov
out
lock
push
aas
mov
jb
fcos
xchg
mov
mov
out
repz
fwait
lahf
(bad)
ss
scas
(bad)
mov
data16
sti
jg
in
out
hlt
cmps
jl
mov
jecxz
jmp
(bad)
pop
jg
(bad)
aaa
stc
mov
jns
cmp
mov
ins
cli
(bad)
aas
push
cld
fwait
cld
cmp
hlt
sar
pop
repz
std
clc
(bad)
mov
loop
jmp
sti
dec
(bad)
mov
(bad)
cdq
dec
jg
pop
repz
cli
clc
push
std
fidivr
scas
cmc
mov
mov
cli
out
std
(bad)
scas
stc
(bad)
jg
lahf
(bad)
fidivr
scas
cmc
imul
jg
daa
(bad)
popf
(bad)
adc
sti
pop
cli
clc
mov
jnp
pop
cld
mov
jg
leave
pop
cld
(bad)
in
push
mov
fcomip
outs
stc
out
cld
outs
jg
jg
out
mov
in
fcomip
lods
(bad)
in
addr16
mov
push
inc
repnz
stc
mov
call
pop
mov
mov
fnstcw
sti
std
xor
retf
(bad)
idiv
arpl
(bad)
clc
cdq
mov
clc
push
ja
mov
hlt
jg
xchg
std
test
paddd
sub
mov
mov
(bad)
xchg
aad
(bad)
std
outs
xor
(bad)
fdivrp
out
(bad)
(bad)
sar
aas
sti
(bad)
inc
jle
jg
hlt
dec
clc
add
(bad)
mov
mov
mov
(bad)
addr16
(bad)
pop
(bad)
sti
lahf
call
jg
push
mov
mov
mov
(bad)
call
jmp
sti
das
dec
jmp
mov
(bad)
mov
paddd
xor
fucomip
jecxz
jno
stc
pop
inc
(bad)
std
aas
jo
out
std
push
aas
(bad)
out
sti
pop
dec
jg
(bad)
outs
(bad)
in
fucomip
push
std
xchg
jg
mov
mov
jg
scas
cmp
inc
push
mov
cli
(bad)
(bad)
sti
mov
call
push
dec
out
not
mov
jmp
clc
mov
cmc
ja
sahf
pop
jge
scas
ins
call
clc
lahf
lods
pop
lods
jmp
mov
jg
std
pop
(bad)
sub
ret
lahf
stc
aas
(bad)
neg
loop
fwait
cld
add
dec
dec
loop
out
not
pop
std
fnstsw
inc
aas
in
repz
in
pop
call
(bad)
jg
out
das
sti
sbb
call
std
and
(bad)
out
hlt
iret
inc
aad
dec
stc
(bad)
(bad)
aas
clc
ja
mov
call
lock
popf
mov
das
(bad)
mov
cmps
std
sbb
cmc
scas
inc
std
or
jg
mov
lahf
(bad)
mov
jmp
cmp
hlt
outs
sub
mov
cld
cmps
inc
xchg
(bad)
fidivr
cld
cmp
stc
sub
(bad)
fwait
cs
cmps
jnp
test
dec
jle
pop
stc
out
lods
(bad)
clc
repz
aaa
inc
outs
pop
cld
mov
call
mov
(bad)
fdivr
(bad)
ja
jg
(bad)
jg
pop
lock
out
shr
lds
or
repnz
call
cmps
call
repnz
cmp
std
out
(bad)
(bad)
mov
mov
(bad)
(bad)
hlt
cld
(bad)
outs
xchg
xchg
jl
(bad)
dec
(bad)
fdivr
mov
(bad)
cs
mov
sub
(bad)
pop
stc
in
stos
pop
call
cmp
pop
dec
jg
iret
jnp
addr16
aas
neg
push
neg
add
in
cld
scas
cli
repnz
stc
cmc
push
cli
retf
inc
aas
icebp
dec
fwait
call
push
(bad)
aaa
cld
sub
addr16
call
dec
jg
(bad)
stc
jmp
dec
scas
sti
sbb
push
mov
cmp
pop
cld
mov
mov
out
std
xchg
cs
lahf
cli
jae
rcr
inc
in
aas
(bad)
movs
call
pop
imul
pop
std
mov
jmp
repnz
aas
in
inc
cli
xor
in
das
cld
test
fld
out
(bad)
mov
lock
lahf
(bad)
ds
das
(bad)
das
pop
cld
push
jmp
mov
icebp
aaa
dec
jg
lahf
cmp
dec
jle
aas
jmp
mov
int
cli
mov
add
neg
(bad)
push
aas
clc
fist
cli
(bad)
ja
pop
hlt
div
dec
dec
(bad)
dec
std
jg
jns
aas
inc
mov
iret
(bad)
test
repz
pop
jmp
mov
mov
sub
loopne
jns
jg
out
das
call
lahf
repz
(bad)
loope
cld
and
jg
lahf
cld
mov
icebp
(bad)
call
cmps
pop
jmp
push
mov
loope
cmp
dec
call
dec
jg
out
(bad)
lahf
(bad)
pop
jg
mov
jbe
ret
(bad)
(bad)
pop
ds
mov
into
fcomip
sbb
movs
jecxz
call
(bad)
aas
in
(bad)
clc
jmp
dec
iret
in
mov
cmp
outs
lock
in
(bad)
jmp
call
push
mov
cmp
std
popf
daa
mov
(bad)
sbb
and
jmp
fidivr
jl
out
fiadd
jl
jmp
sbb
idiv
dec
jg
pop
jecxz
jg
scas
icebp
imul
mov
cld
gs
lods
mov
inc
ret
sub
xlat
mov
(bad)
cld
stos
mov
hlt
repz
mov
mov
xlat
or
xor
mov
add
jecxz
push
int
sar
dec
jg
sbb
dec
(bad)
fbld
add
imul
inc
or
repz
call
(bad)
or
pop
jecxz
adc
mov
dec
jmp
(bad)
std
jae
fistp
jmp
push
(bad)
std
mov
int
loop
cld
cmc
jle
pop
push
scas
mov
dec
jg
scas
call
std
call
adc
(bad)
cmps
icebp
out
jg
scas
stc
psrld
push
jg
aas
icebp
daa
movd
cmc
jle
leave
scas
test
jg
scas
test
(bad)
ficomp
lahf
dec
outs
mov
(bad)
jp
(bad)
outs
imul
repz
mov
clc
fistp
test
std
or
fistp
(bad)
std
aas
jg
in
dec
jle
(bad)
xlat
mov
mov
out
pop
daa
mov
pop
adc
neg
sbb
push
cld
stc
mov
mov
adc
mov
cmc
jmp
xchg
aas
std
xlat
inc
retf
mov
stc
(bad)
mov
std
xor
cmp
mov
mov
jg
cmp
pop
add
popf
sbb
in
xlat
clc
adc
aas
and
movs
sbb
jne
cmp
xor
stc
mov
scas
fist
mov
int
scas
mov
jle
aas
pushf
(bad)
cli
popf
sbb
aas
std
imul
inc
ja
and
arpl
scas
cld
sbb
scas
aas
jmp
mov
mov
jl
mov
(bad)
cmps
mov
aaa
cld
cmp
iret
cld
cmc
por
stc
scas
jg
(bad)
cli
xchg
sti
sti
lahf
jle
hlt
neg
scas
pop
imul
test
(bad)
xlat
clc
cmp
xlat
lds
in
jno
fist
imul
clc
scas
and
(bad)
jmp
mov
(bad)
ja
xchg
jmp
pop
repz
pop
(bad)
(bad)
cli
sub
xlat
clc
push
sar
jg
xor
(bad)
xchg
call
jnp
sti
pop
int
call
mov
retf
pop
jecxz
clc
xor
xchg
mov
jecxz
cld
(bad)
das
cld
call
mov
jle
pop
mov
(bad)
sbb
out
pop
icebp
imul
mov
(bad)
sbb
mov
std
xchg
aam
jo
mov
cli
add
sub
xchg
loopne
fistp
jg
scas
push
(bad)
leave
mov
repz
outs
ds
call
jp
ret
push
mov
(bad)
call
pop
jg
outs
imul
cmc
out
pop
mov
loop
xchg
xlat
fcomip
imul
mov
(bad)
cli
pop
jle
fistp
in
(bad)
out
xlat
cmp
mov
xchg
pop
jmp
mov
scas
pop
push
xchg
cld
mov
imul
hlt
xlat
shr
jg
out
xlat
cli
retf
jmp
cld
cmc
mov
mov
(bad)
dec
ud0
mov
ins
mov
std
sahf
daa
repnz
lahf
icebp
imul
inc
jns
jg
ja
out
sti
imul
mov
jg
aad
(bad)
push
std
xchg
xor
rcr
lahf
fwait
mul
xlat
fwait
outs
fwait
push
jle
std
cmc
cmp
scas
stc
rcr
shl
cs
std
xor
mov
fdiv
neg
loop
das
dec
retf
inc
cwde
out
jle
pop
sti
xlat
cld
xor
movsx
xor
out
rcr
fwait
(bad)
cmc
xchg
call
dec
call
in
(bad)
out
xlat
cld
sub
jmp
jp
mov
ins
fdivrp
add
mov
cli
push
test
adc
(bad)
fmulp
sub
retf
xchg
hlt
(bad)
(bad)
mov
imul
push
cli
(bad)
inc
xchg
jmp
scas
fucomip
(bad)
xor
push
(bad)
div
aas
aad
fsub
pop
(bad)
cli
lds
mov
xchg
adc
mov
jg
imul
call
sti
fnsetpm(287
scas
mov
std
inc
jg
cld
cmc
push
call
jmp
and
fcomip
xlat
sti
xor
pop
xchg
mov
adc
jmp
cli
addr16
neg
mov
mov
cli
(bad)
(bad)
jne
fistp
dec
jg
(bad)
pop
repz
pop
inc
jg
jge
xchg
jns
dec
mov
ret
stc
sti
mov
pop
rol
jg
aas
cwde
out
(bad)
pop
cli
jmp
cli
lahf
or
pop
inc
jg
push
mov
cld
cli
xor
pop
popa
pop
(bad)
div
xlat
out
idiv
scas
ja
mov
call
popa
inc
mov
dec
push
out
jle
ret
add
pop
std
cmp
xlat
mov
hlt
fstp
imul
cdq
mov
(bad)
clc
xlat
cld
psubsw
jg
(bad)
jg
outs
ins
inc
cdq
cld
cmc
mov
call
sbb
outs
popa
(bad)
mov
ins
or
aaa
clc
sbb
fucomip
ja
out
(bad)
jb
xchg
aas
call
lds
jg
sbb
sub
sbb
out
aas
sti
fisttp
mov
gs
(bad)
jae
xlat
lahf
cmc
sub
xor
mov
or
xlat
loopne
mov
sahf
sbb
arpl
jmp
push
ja
xor
mov
clc
xor
inc
mov
leave
lahf
cld
imul
mov
cld
xor
pop
in
lahf
(bad)
xor
sti
xor
mov
loop
icebp
imul
std
(bad)
fwait
cld
pop
xor
cld
pop
mov
jmp
pop
jecxz
scas
cmc
pop
sar
fnstsw
sbb
jmp
jecxz
xlat
cli
cmps
jg
(bad)
xlat
clc
push
jg
sar
jg
pop
imul
retf
mov
std
push
mov
lahf
std
pop
mov
(bad)
pop
mov
imul
cli
mov
jecxz
pop
sti
(bad)
mov
(bad)
pop
mov
std
xchg
call
cmc
scas
jno
imul
hlt
leave
loop
(bad)
ja
int
scas
std
pop
cld
pop
mov
shl
push
jg
scas
icebp
das
std
fidivr
call
call
scas
std
fldcw
aaa
mov
cmp
das
fstp
lea
mov
xor
(bad)
mov
cld
call
jg
pop
cld
jmp
pop
aam
mov
dec
mov
xor
jns
cld
inc
aam
in
(bad)
scas
stc
fistp
cwde
(bad)
std
mov
(bad)
std
mov
fistp
jmp
(bad)
out
adc
(bad)
out
clc
xlat
clc
fisubr
mov
std
call
dec
push
cld
sti
das
out
call
std
(bad)
in
call
pop
repz
movs
jg
fcomp
dec
mov
rep
and
cmp
xor
mov
pop
sar
xor
xlat
sub
imul
jg
pop
rcr
(bad)
sahf
rcl
hlt
adc
out
mov
lahf
call
std
std
fcmovnbe
iret
jg
xlat
add
in
std
repnz
jecxz
push
jle
aad
stc
cmps
xchg
push
pop
(bad)
call
cli
repnz
pop
cld
pop
jg
scas
cmc
mov
pop
jmp
scas
cmc
mov
jbe
imul
neg
cmc
imul
mov
sti
mov
cld
movs
mov
cld
movsx
out
lock
clc
jne
out
pop
neg
scas
sti
out
mov
retf
jg
fucomip
xlat
mov
mov
std
pop
mov
std
addr16
jge
xlat
jg
jmp
mov
call
mov
(bad)
jge
(bad)
mov
mov
call
shl
out
rcr
sbb
fnstcw
cld
fwait
mov
pop
sti
icebp
pop
jecxz
jg
aas
jmp
lea
js
pop
cld
xor
lahf
cld
mov
lds
jg
ds
(bad)
(bad)
scas
stc
imul
mov
xchg
mov
out
icebp
jmp
sbb
(bad)
nop
mov
shl
(bad)
aas
dec
(bad)
(bad)
cmps
mov
call
scas
stc
xor
xlat
clc
jne
and
(bad)
mov
test
(bad)
sbb
mov
sahf
pop
xchg
mov
mov
stc
int
fdivrp
mov
xor
inc
je
or
cmp
outs
dec
sbb
pop
cld
sbb
push
jmp
call
loope
icebp
inc
inc
lahf
ror
aas
(bad)
xlat
std
mov
out
int3
pop
inc
cli
stc
outs
dec
lahf
jecxz
fist
jg
mov
repz
lahf
mov
cmc
out
mov
repz
iret
jg
std
cld
ja
iret
aas
(bad)
iret
aas
rcr
jle
push
aas
(bad)
iret
ja
repz
cli
stc
add
stc
push
jg
push
inc
ins
idiv
out
xchg
out
ror
loop
cld
cld
mov
ret
cld
xor
jle
jl
pop
shr
clc
sti
mul
int
out
(bad)
mul
sub
fs
jle
(bad)
stc
pop
jae
test
mov
das
mov
loop
add
lahf
repnz
(bad)
cmps
sar
xchg
jle
xchg
mov
imul
(bad)
(bad)
and
(bad)
sub
inc
(bad)
(bad)
push
push
imul
jg
(bad)
loope
test
out
(bad)
js
test
std
dec
aam
(bad)
pop
cmp
repnz
stc
sti
das
aam
call
jmp
xlat
jle
dec
movs
iret
pop
dec
clc
cld
pop
cld
push
mov
pop
dec
out
call
jmp
mov
xor
das
(bad)
xor
paddd
or
clc
xor
push
sub
mov
pop
jecxz
mov
(bad)
fcomip
imul
mov
dec
jle
jg
xlat
(bad)
imul
fbld
(bad)
fistp
dec
ins
push
mov
(bad)
fdivp
repz
mov
jecxz
stc
jne
inc
xor
or
(bad)
scas
mov
out
loop
aas
in
clc
das
jg
mov
jg
ja
sti
pop
inc
std
std
popa
aam
dec
mov
std
sub
(bad)
call
lea
jle
mov
(bad)
add
push
call
sar
or
mov
repz
icebp
adc
std
int
not
mov
out
inc
mov
sbb
out
shr
push
loope
cmp
cmp
or
lea
fcomip
(bad)
jle
cli
out
xlat
and
sti
mov
push
ins
call
adc
mov
inc
aas
jg
mov
test
dec
(bad)
jb
fbstp
xchg
mov
cmp
mov
and
lahf
xchg
cmp
push
pop
xchg
pop
pop
shr
test
pop
dec
repnz
push
xlat
mov
sti
pop
call
pop
jmp
pop
daa
fdivr
push
sti
pop
dec
mov
sar
out
sar
mov
nop
inc
hlt
sti
ss
push
jg
cs
mov
jg
push
mov
cmp
movs
(bad)
aas
and
pop
hlt
repz
test
sar
inc
aam
mul
pushf
jle
jmp
popf
adc
jns
jg
dec
in
mov
in
fbld
in
cmp
cmc
add
jl
ins
pop
shl
inc
lahf
cld
sbb
jp
into
(bad)
clc
stc
imul
push
xchg
(bad)
js
fnsave
inc
xor
scas
jno
xlat
fprem1
scas
icebp
in
int
lea
gs
sub
outs
out
sub
dec
(bad)
daa
aad
push
xchg
jns
cmp
cld
sbb
mov
inc
xor
(bad)
xchg
mov
push
imul
(bad)
clc
psubw
jmp
aas
in
movs
pop
jg
scas
icebp
in
cmps
repz
jl
xlat
call
cmps
retf
cmc
and
sbb
int
push
cld
sbb
push
xor
jp
call
lahf
out
jle
stos
stos
test
std
jecxz
repz
ficom
call
mov
ror
imul
fistp
repz
bound
or
fild
cs
pop
jecxz
mov
pop
xchg
call
addr16
gs
jns
push
pop
repnz
sbb
pop
lea
dec
(bad)
scas
std
xor
aad
sub
jge
mov
xor
dec
xchg
mov
dec
sahf
sub
shl
mov
jge
xchg
call
pop
jns
sti
lahf
cs
cli
gs
sub
in
sti
ins
jns
shl
pop
aam
jb
rcl
stc
cmps
cwde
mov
hlt
in
fild
(bad)
sub
frstor
jb
jecxz
std
xor
sub
aaa
jae
xchg
inc
cmp
adc
sub
xchg
xor
xchg
xchg
das
addr16
mov
int
jns
adc
inc
ss
std
(bad)
out
cld
sub
gs
out
and
cmps
shr
push
sub
mov
ss
ret
std
sbb
xchg
into
pop
lea
xor
pop
sub
mov
repz
jne
aaa
jmp
iret
repz
cmp
outs
adc
jmp
jmp
rcl
dec
or
xor
iret
(bad)
mov
mov
mov
mov
adc
sbb
(bad)
adc
add
mov
call
xchg
cmp
or
das
sub
mov
mov
mov
cmp
mov
aas
iret
xchg
jns
dec
jg
ret
fidivr
fidiv
add
(bad)
call
xor
mul
test
inc
icebp
or
xchg
out
xchg
sbb
and
adc
dec
jg
xor
xchg
pop
jg
dec
fs
xchg
(bad)
(bad)
jp
push
call
mov
cdq
addr16
imul
gs
xchg
icebp
(bad)
mov
rcr
(bad)
es
xlat
mov
add
sub
outs
mov
ja
out
mov
jle
daa
(bad)
fstp
aas
(bad)
rcr
ja
pop
ja
(bad)
mov
jno
xchg
sub
dec
adc
jp
xor
int
inc
push
mov
lods
scas
jmp
(bad)
fdivp
mov
cmps
xchg
das
cwde
jle
jmp
pop
dec
repz
pop
stos
mov
mov
sets
out
jnp
or
xchg
and
out
fcmovnbe
jmp
mov
pop
cmp
sbb
jp
(bad)
pop
icebp
daa
jmp
(bad)
(bad)
outs
dec
jg
in
std
fcmovnu
aas
repz
(bad)
outs
lock
loopne
std
leave
fistp
aas
cli
mov
aaa
cld
or
xlat
std
or
fstp
cdq
jle
cli
dec
adc
mov
imul
mov
popf
sti
fwait
push
imul
hlt
repz
call
cli
sub
ja
ja
out
loopne
clc
popf
lock
fidiv
adc
nop
addr16
leave
scas
stc
pop
cld
scas
mov
ficomp
mov
fnstsw
cmp
call
es
fwait
loopne
ins
cld
mov
jg
sti
mov
out
mov
call
fstp
xlat
cld
xor
mov
cmc
jg
fucomip
ja
popf
adc
outs
jno
jp
pop
in
pop
xchg
adc
daa
mov
fwait
into
jg
fnstsw
xlat
cli
add
or
pop
jmp
cld
call
mov
jne
int
lock
cli
loopne
sti
mov
mov
pop
mov
dec
mov
pop
mov
test
scas
std
jmp
xchg
jle
pop
not
dec
jg
push
neg
std
mov
neg
cld
sbb
(bad)
jp
ss
dec
mul
pop
jecxz
clc
mov
sti
int
int
sti
mov
or
sbb
mov
outs
mov
inc
and
(bad)
mov
mov
shr
loop
and
cld
dec
mov
std
mov
jl
xlat
dec
jle
pop
repz
stc
sub
push
mov
mov
cmps
mov
fs
(bad)
(bad)
pop
lock
cli
loop
sub
in
cld
sub
les
aaa
(bad)
cmc
std
mov
cs
hlt
cmp
mov
cmp
dec
mov
cli
jne
inc
mov
std
jp
xchg
loopne
adc
sub
add
js
jmp
jmp
xlat
(bad)
mov
movs
sub
div
fild
sbb
and
test
popa
ror
paddw
sbb
outs
xor
shr
cli
imul
mov
inc
pop
std
sbb
mov
push
mov
cli
sbb
jp
shr
imul
mov
bound
or
das
push
xchg
or
fnstsw
xlat
dec
add
(bad)
xlat
std
sub
imul
mov
cmp
adc
(bad)
(bad)
repz
mov
add
mov
add
mov
in
aaa
call
jecxz
lods
fnstsw
xlat
push
or
inc
mov
push
push
cld
dec
mov
(bad)
cmc
mov
daa
jns
add
jmp
lods
cs
outs
icebp
jmp
shl
jmp
dec
push
leave
outs
jno
jmp
(bad)
mov
rcr
pop
repnz
hlt
daa
cmps
cwde
es
mov
aaa
inc
(bad)
lock
loop
mov
stc
imul
and
mov
pop
cli
in
psubd
mov
lahf
(bad)
aaa
clc
popf
jle
(bad)
aaa
clc
sub
aaa
stc
popf
jle
(bad)
xlat
dec
movs
das
push
hlt
pop
push
dec
sti
cmp
cli
mov
aaa
js
pop
push
daa
(bad)
fidivr
jmp
loop
idiv
outs
inc
cmp
mov
ins
jle
pop
out
xlat
cli
mov
mov
out
cli
cmc
jg
jns
push
dec
mov
cld
dec
sub
cld
cs
xchg
dec
jle
fisttp
repnz
cmp
jbe
push
imul
(bad)
mov
pop
(bad)
stc
(bad)
scas
jmp
fidivr
clc
lods
or
and
jg
imul
das
add
fisubr
int3
test
(bad)
std
push
mov
in
outs
icebp
pop
std
(bad)
adc
xchg
fcmovu
loopne
clc
lods
adc
add
es
das
push
out
push
mov
cmp
cmc
fild
sub
std
cmc
jle
out
sti
(bad)
jmp
call
clc
ins
or
inc
cmp
xor
lds
pop
xchg
nop
fist
inc
(bad)
jmp
mov
cmp
xlat
mov
in
repz
jg
pop
push
adc
js
adc
add
mov
pop
push
push
and
scas
std
fwait
cdq
mov
jmp
push
jle
lss
repz
scas
std
jmp
(bad)
mov
inc
mov
push
(bad)
pop
ret
pop
xchg
or
scas
xor
cmp
cmps
cmps
test
mov
push
jg
(bad)
mov
fistp
sbb
loope
fwait
(bad)
mov
sub
hlt
xor
inc
jno
push
ror
sti
fwait
sar
sub
sub
fdivr
and
(bad)
and
push
mov
cwde
in
xchg
scas
in
cmp
or
out
in
aaa
xor
sbb
jge
aas
pusha
inc
stc
mov
add
jle
fild
rcr
dec
into
outs
and
jl
dec
push
dec
adc
adc
sbb
sbb
lds
hlt
outs
lock
dec
inc
inc
pop
dec
(bad)
std
fisub
int
repz
stc
dec
jg
pop
and
pop
out
mov
(bad)
call
stc
xor
sbb
daa
aas
cdq
std
pop
idiv
stos
push
cmp
sti
repnz
repz
mov
scas
jle
lahf
movs
fsubr
mov
shr
stos
pop
adc
outs
popf
lods
pop
push
retf
shl
pushf
pop
inc
mov
stos
out
in
adc
ins
repz
icebp
mov
movs
(bad)
jmp
in
scas
stc
imul
jg
scas
stc
imul
inc
(bad)
(bad)
cld
in
cmp
jecxz
cmc
aas
in
iret
std
test
test
push
std
mov
(bad)
mov
clc
jge
pop
jge
push
stos
fcomip
retf
leave
stc
mov
or
push
stc
xor
pushf
jmp
jle
cld
sahf
fidivr
and
xlat
mov
xchg
daa
push
dec
xor
sub
bnd
imul
(bad)
imul
push
cmp
cmp
imul
xlat
clc
cmp
lahf
jecxz
ss
push
dec
jbe
mov
ss
gs
pop
push
xchg
daa
sub
mov
sti
mov
jge
imul
icebp
scas
icebp
idiv
cmp
jecxz
and
mov
in
push
push
and
shl
scas
dec
push
mov
mov
push
push
jle
in
xlat
pop
push
into
mov
out
jg
jle
or
or
mov
outs
jns
cwde
sahf
mov
jle
sar
xlat
hlt
int
repnz
dec
jg
mov
mov
in
call
adc
xor
mov
ins
push
hlt
pop
dec
in
pop
jmp
cli
mov
jecxz
cmps
lods
stc
sub
loopne
add
mov
xor
js
pop
retf
adc
mov
adc
hlt
mov
dec
(bad)
(bad)
mov
mov
pop
add
ds
pushf
lahf
movs
call
aam
mov
xor
push
(bad)
mov
lock
(bad)
arpl
and
imul
cs
jecxz
lahf
xor
outs
mov
or
pusha
jnp
fnstenv
fild
push
xchg
call
fdivr
test
mov
xchg
and
jp
lahf
push
aam
call
mov
dec
in
sbb
aad
pop
daa
test
xor
jnp
(bad)
jge
inc
(bad)
sahf
pop
cmp
cld
call
out
iret
(bad)
sahf
pop
cmp
mov
(bad)
sbb
mov
call
dec
test
add
add
add
add
and
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
