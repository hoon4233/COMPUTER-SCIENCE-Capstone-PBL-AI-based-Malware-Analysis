mov
add
add
add
dec
add
add
add
add
sub
add
add
add
add
mov
add
cwde
test
add
adc
add
add
sub
add
or
add
sub
add
push
add
sbb
add
cwde
add
add
add
adc
jle
add
or
jb
add
jo
adc
pop
outs
push
add
or
or
add
or
sbb
add
je
add
add
add
push
jb
add
jo
sbb
add
adc
add
add
sbb
add
jb
add
jo
sbb
add
outs
sbb
add
outs
sbb
sub
add
outs
push
add
or
sub
or
add
or
fadd
jnp
add
add
outs
and
add
add
sub
add
push
add
jb
add
jo
push
add
push
add
add
add
add
and
dec
ins
add
add
add
fiadd
add
add
add
and
add
sub
add
or
add
add
add
and
add
jb
add
jo
and
add
jb
add
jo
pop
inc
sub
add
es
add
jnp
add
add
and
add
sub
add
or
add
add
add
and
add
jb
add
jo
and
add
jb
add
jo
pop
inc
sub
add
sub
add
xor
add
add
adc
jb
add
jo
push
lea
add
add
jae
add
or
adc
push
add
adc
or
outs
add
or
add
or
add
or
pop
adc
add
mov
add
add
pop
jae
add
or
add
adc
sub
adc
sub
xor
cmp
add
add
push
lea
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
or
push
or
or
dec
add
add
or
add
jo
sub
add
jb
add
add
or
pop
sub
add
adc
adc
add
xor
add
pop
add
adc
jb
add
add
push
add
pop
adc
jb
add
add
or
sub
add
push
pop
pop
adc
adc
adc
add
add
jo
sub
add
jb
add
add
or
pop
sub
add
adc
add
or
or
xor
or
sldt
adc
jb
add
add
push
add
movups
jb
add
add
or
sub
add
push
pop
pop
adc
adc
adc
jb
add
jo
sub
add
jb
add
add
or
sub
add
or
or
adc
adc
push
adc
sub
adc
adc
call
jb
add
add
push
add
adc
adc
add
add
or
sub
add
adc
pop
adc
adc
adc
mov
(bad)
jb
add
jo
sub
add
jb
add
add
or
pop
sub
add
adc
add
or
adc
adc
xor
adc
adc
adc
jb
add
add
push
add
adc
add
add
or
sub
add
adc
pop
adc
adc
adc
out
add
jo
sub
add
jb
add
add
or
pop
sub
add
adc
add
or
push
push
adc
sub
adc
adc
call
jb
add
add
push
add
sbb
sbb
add
add
or
sub
add
pop
pop
pop
adc
adc
adc
mov
(bad)
jb
add
jo
sub
add
jb
add
add
or
pop
sub
add
adc
adc
sbb
adc
sub
adc
adc
call
jb
add
add
push
add
sbb
sbb
add
add
or
sub
add
sbb
pop
adc
adc
adc
mov
mov
or
pop
mov
lods
std
(bad)
jmp
sbb
add
fld
add
add
add
add
push
lea
add
add
add
das
add
or
jae
add
or
jae
add
or
add
add
add
or
or
add
add
add
or
add
and
add
add
add
or
add
adc
outs
xor
pop
outs
add
or
add
or
or
add
outs
cmp
add
push
pop
outs
add
or
add
or
or
outs
cmp
add
add
or
add
or
jae
add
or
add
push
add
add
add
add
or
add
or
adc
or
fmul
outs
aas
add
or
add
or
sub
or
add
or
fadd
fimul
or
or
add
or
fadd
adc
sub
adc
sub
add
add
add
add
mov
sbb
add
add
and
call
add
add
add
add
add
xor
add
add
add
add
inc
add
or
sub
add
add
inc
add
or
sub
add
pop
outs
inc
add
or
add
pop
sub
add
push
or
or
add
or
sub
xor
fld
add
add
add
add
push
lea
add
add
add
das
add
or
jae
add
or
jae
add
or
add
add
add
or
or
add
add
add
or
add
and
add
add
add
or
add
adc
outs
xor
pop
outs
add
or
add
or
or
add
outs
cmp
add
push
pop
outs
add
or
add
or
or
outs
cmp
add
add
or
add
or
jae
add
or
add
push
add
add
add
add
or
add
or
adc
or
fmul
outs
aas
add
or
add
or
sub
or
add
or
fadd
fimul
or
or
add
or
fadd
adc
sub
adc
sub
add
add
add
add
mov
sbb
add
add
and
call
add
add
add
add
add
xor
add
add
add
add
inc
add
or
sub
add
add
inc
add
or
sub
add
pop
outs
inc
add
or
add
pop
sub
add
push
or
or
add
or
sub
xor
mov
add
push
add
adc
add
lea
add
add
add
or
push
or
or
das
add
add
or
add
jo
sub
add
jb
add
add
or
pop
sub
add
adc
adc
add
push
adc
pop
add
adc
jb
add
add
push
add
pop
sub
add
adc
adc
push
adc
outs
add
or
or
add
or
dec
add
or
or
pop
adc
sub
add
add
add
adc
dec
add
or
add
push
pop
pop
adc
adc
adc
add
add
jo
sub
add
jb
add
add
or
pop
sub
add
adc
add
or
movhps
adc
push
adc
adc
call
jb
add
add
push
add
adc
inc
add
or
adc
adc
adc
outs
add
or
adc
add
or
dec
add
or
adc
adc
adc
sub
add
add
add
sub
add
or
add
adc
pop
adc
adc
adc
mov
mov
jo
sub
add
jb
add
add
or
sub
add
or
or
adc
adc
adc
adc
add
push
jb
add
add
push
add
push
sub
add
adc
adc
push
adc
outs
add
or
pop
outs
add
or
dec
add
or
sbb
push
adc
sub
add
add
add
cmp
dec
add
or
add
adc
adc
xor
jo
sub
add
jb
add
add
or
pop
sub
add
adc
adc
sbb
adc
sub
sbb
sbb
adc
jb
add
add
push
add
sbb
inc
add
or
sbb
sbb
adc
outs
add
or
sbb
add
or
dec
add
or
sbb
sub
add
add
add
push
outs
dec
add
or
add
sbb
pop
adc
adc
adc
mov
mov
jo
sub
add
jb
add
add
or
pop
sub
add
adc
push
push
adc
sub
push
adc
call
jb
add
add
push
add
and
inc
add
or
and
and
adc
outs
add
or
and
add
or
dec
add
or
and
and
and
sub
add
add
add
push
outs
dec
add
or
add
pop
pop
pop
adc
adc
adc
mov
mov
jo
sub
add
jb
add
add
or
pop
sub
add
adc
add
push
adc
push
adc
push
adc
adc
adc
jb
add
add
push
add
and
or
adc
add
or
outs
add
or
dec
add
or
daa
adc
add
or
add
add
add
pop
outs
dec
add
or
add
and
pop
adc
and
and
add
pop
pop
or
pop
mov
enter
add
add
add
outs
dec
add
or
jb
add
add
inc
sub
add
add
add
add
outs
dec
add
or
add
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
xor
cmp
add
pop
add
adc
add
add
add
and
add
jb
push
add
sbb
add
or
sub
add
sub
add
push
add
sub
add
push
push
add
pop
adc
and
add
add
push
jle
add
add
add
add
add
add
add
sub
sub
add
add
add
xor
add
add
add
add
adc
add
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
pop
add
or
add
add
dec
add
or
sub
adc
push
add
add
or
add
add
add
add
sub
add
jae
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
push
add
or
add
add
add
push
add
or
add
push
add
or
add
add
add
outs
push
add
or
add
add
add
push
add
or
add
or
add
add
add
imul
add
jae
add
or
add
or
add
add
add
pop
add
or
add
or
add
add
add
sbb
cmp
add
jae
add
or
add
or
add
add
add
mov
pop
add
or
add
add
add
inc
pop
adc
or
add
or
add
add
add
or
add
or
add
add
add
scas
push
add
and
add
add
jnp
add
add
outs
push
add
or
add
add
add
push
add
or
add
or
add
add
add
imul
add
jae
add
or
add
or
add
add
add
pop
add
or
add
or
add
add
add
sbb
push
add
add
add
or
add
or
add
add
add
mov
add
or
add
add
add
ins
pop
adc
or
add
or
add
add
add
or
add
or
add
add
add
aad
add
and
add
add
jnp
add
add
outs
push
add
or
add
add
add
imul
add
jae
add
or
add
or
add
add
add
bound
add
outs
pop
add
or
add
add
add
bound
cmp
add
jae
add
or
add
or
add
add
add
stc
push
add
pop
add
or
add
add
add
pop
adc
or
add
or
add
add
add
or
or
add
add
add
outs
push
add
or
add
add
add
push
add
or
add
or
add
add
add
imul
add
jae
add
or
add
or
add
add
add
bound
add
outs
pop
add
or
add
add
add
mov
add
and
add
add
or
add
or
add
add
add
pop
pop
add
pop
add
or
add
add
add
adc
add
pop
adc
or
add
or
add
add
add
push
outs
popa
add
or
add
add
add
adc
and
add
add
jnp
add
add
arpl
add
outs
add
or
add
add
add
fild
add
and
add
add
or
add
or
add
add
add
pop
pop
add
pop
add
or
add
add
add
dec
pop
adc
or
add
or
add
add
add
movq
add
add
jnp
add
add
imul
jo
and
add
add
jnp
add
add
outs
add
or
add
add
add
inc
add
add
jae
add
or
add
or
add
add
add
arpl
add
outs
add
or
add
add
add
sbb
cmp
add
jae
add
or
add
or
add
add
add
jne
add
pop
add
or
add
add
add
dec
pop
adc
or
add
or
add
add
add
adc
add
or
add
add
add
imul
jo
and
add
add
jnp
add
add
outs
add
or
add
add
add
inc
add
add
jae
add
or
add
or
add
add
add
arpl
add
outs
add
or
add
add
add
sbb
add
and
add
add
add
or
add
or
add
add
add
test
add
pop
add
or
add
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
and
add
or
add
add
add
xchg
pop
add
and
add
add
jnp
add
add
outs
add
or
add
add
add
inc
or
add
jae
add
or
add
or
add
add
add
sub
add
and
add
add
add
or
add
or
add
add
add
scas
pop
add
pop
add
or
add
add
add
in
add
add
adc
pop
add
or
add
or
add
add
add
and
add
or
add
add
add
outs
push
add
or
add
add
add
push
add
or
add
or
add
add
add
rol
jo
add
sbb
pop
sbb
jae
add
or
add
or
add
add
add
pop
add
or
add
or
add
add
add
rol
add
xor
pop
add
or
add
or
add
add
add
jmp
add
pop
add
or
add
add
add
fs
adc
add
or
add
or
add
add
add
and
popa
add
or
add
add
add
sti
pop
add
and
add
add
jnp
add
add
imul
add
or
add
add
add
outs
push
add
add
jnp
add
add
pop
or
jo
add
xor
push
sbb
jae
add
or
add
or
add
add
add
inc
add
add
dec
jae
add
or
add
or
add
add
add
and
pop
add
or
add
add
add
outs
imul
or
add
add
add
sbb
add
and
add
add
or
add
or
add
add
add
and
or
add
add
add
jb
or
jo
ins
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
push
add
or
add
or
add
add
add
arpl
add
add
rol
push
jae
add
or
add
or
add
add
add
ins
add
or
add
or
add
add
add
and
add
pop
sbb
add
or
add
or
add
add
add
jge
add
pop
add
or
add
add
add
ret
add
add
sub
or
add
or
add
add
add
sbb
popa
add
or
add
add
add
mov
add
and
add
add
jnp
add
add
inc
sldt
push
jae
add
or
add
or
add
add
add
imul
add
or
add
add
add
outs
push
add
add
jnp
add
add
pop
or
jo
add
xor
push
sbb
jae
add
or
add
or
add
add
add
rol
add
and
add
add
add
or
add
or
add
add
add
leave
or
jo
pop
add
or
add
add
add
outs
imul
or
add
add
add
mov
add
pop
pop
jae
add
or
add
or
add
add
add
outs
popa
add
or
add
add
add
jb
or
jo
ins
add
or
add
or
add
add
add
sub
add
and
add
jae
add
or
add
or
add
add
add
pop
or
jo
pop
add
or
add
add
add
aas
add
add
sbb
add
or
add
or
add
add
add
sub
add
or
add
add
add
push
add
or
add
or
add
add
add
sbb
add
outs
outs
add
or
add
add
add
and
add
add
add
or
add
or
add
add
add
and
add
pop
add
or
add
add
add
cmp
add
pop
inc
jae
add
or
add
or
add
add
add
outs
outs
add
or
add
add
add
sub
add
or
add
add
add
outs
jno
add
add
jnp
add
add
push
add
or
add
or
add
add
add
sbb
add
outs
outs
add
or
add
add
add
and
add
and
add
add
add
or
add
or
add
add
add
cmp
add
pop
add
or
add
add
add
stos
add
add
pop
jae
add
or
add
or
add
add
add
outs
outs
add
or
add
add
add
daa
outs
jo
add
add
jnp
add
add
outs
jno
add
add
jnp
add
add
outs
push
add
or
add
add
add
push
add
or
add
or
add
add
add
imul
add
jae
add
or
add
or
add
add
add
bound
add
outs
pop
add
or
add
add
add
sub
jmp
add
jae
add
or
add
or
add
add
add
push
or
jo
pop
add
or
add
add
add
adc
add
pop
adc
or
add
or
add
add
add
sub
add
or
add
add
add
adc
and
add
add
and
add
inc
and
add
jae
add
or
jae
add
add
pop
sub
or
add
jne
add
outs
push
add
or
add
jne
add
and
add
jae
add
or
jbe
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sub
add
add
add
add
js
add
add
sbb
jns
add
add
push
sub
add
add
push
sub
add
add
jb
or
jo
pop
add
or
add
sub
or
add
inc
add
add
jae
add
or
jge
add
add
jnp
add
add
jle
add
add
jnp
add
add
jle
add
add
push
sub
add
add
sub
sub
adc
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
pop
jb
or
jo
add
add
or
push
push
inc
or
sub
sub
sub
push
sub
jae
add
push
sub
add
test
add
add
sub
xor
add
add
add
add
adc
jle
add
add
inc
or
sub
add
or
jo
add
add
sub
add
outs
xchg
add
jae
add
or
pop
adc
adc
sub
or
add
add
xor
add
add
add
add
adc
jle
add
add
sub
push
sub
add
adc
add
adc
add
and
add
or
add
add
push
add
push
jb
or
jo
push
add
add
mov
add
or
je
add
add
sub
pop
sub
add
adc
add
and
add
or
add
add
push
add
push
jb
or
jo
push
add
add
mov
add
or
je
add
add
sub
pop
sub
add
adc
add
or
add
or
jle
add
add
sub
push
sub
add
mov
add
add
push
jae
add
push
sub
add
pop
add
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jle
add
add
pushf
push
add
and
jb
outs
addr16
add
add
sbb
add
push
add
add
add
add
inc
push
dec
inc
add
add
add
ins
outs
bound
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xchg
add
pop
add
or
add
or
add
add
add
add
add
or
add
push
or
add
push
or
add
push
or
add
add
add
(bad)
rol
or
add
pop
jmp
or
pop
or
and
add
or
or
add
push
jmp
push
jmp
or
and
jmp
or
pop
push
add
or
or
or
add
add
adc
xchg
or
or
xchg
pop
push
add
inc
add
add
add
add
dec
push
push
add
or
or
pop
push
add
add
or
sub
or
add
jl
push
add
add
or
add
fisttp
push
add
or
or
add
or
add
pop
push
add
sub
push
add
and
push
add
xchg
pop
adc
js
add
add
add
xchg
pop
or
push
pop
jmp
add
or
add
or
cmc
or
or
add
or
or
add
pop
jmp
or
or
or
add
add
or
add
add
add
add
or
or
add
push
xchg
pop
push
add
popf
pop
dec
push
push
add
add
add
pop
dec
push
push
add
inc
add
add
dec
push
push
add
test
add
push
add
add
add
xchg
pop
push
add
add
sub
push
add
add
xchg
push
push
add
xchg
push
push
add
add
jmp
or
or
add
jmp
or
add
or
push
push
add
xchg
push
or
xchg
add
or
add
add
or
add
add
jmp
add
pop
jmp
add
or
add
add
or
or
jmp
or
or
add
or
or
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lea
pop
add
add
add
or
pop
add
add
add
or
mov
add
add
add
add
add
sbb
push
add
add
fild
xor
sub
fild
xor
adc
add
loop
add
and
out
add
push
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
repnz
add
add
add
add
repnz
add
add
add
add
test
add
add
add
add
add
add
add
pop
inc
adc
bound
add
adc
daa
add
add
add
and
add
add
add
add
add
add
add
add
sbb
add
add
add
add
push
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
xchg
imul
sub
add
add
add
add
add
add
add
xchg
fild
sbb
or
add
add
add
add
add
add
add
add
add
or
add
add
sub
xchg
(bad)
or
add
add
add
add
add
sub
add
sbb
clc
sub
les
cmps
add
add
add
add
sbb
pusha
cmp
add
add
add
add
add
add
xchg
add
pop
add
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
pop
cmp
add
add
add
mov
add
add
xchg
or
or
add
lahf
cmp
add
add
add
test
add
add
xchg
sbb
add
add
add
add
or
add
add
add
add
xor
add
add
push
push
add
add
xor
add
add
push
push
add
add
mov
add
repz
add
add
add
add
add
add
into
add
add
add
add
add
add
or
add
add
add
add
dec
or
add
add
add
add
jle
add
add
mov
add
add
add
or
add
add
add
add
xor
add
add
push
push
add
add
mov
add
add
into
add
add
adc
dec
or
add
add
or
sub
dec
or
add
add
adc
cmp
dec
or
add
dec
or
add
dec
or
add
dec
or
add
dec
or
add
dec
or
or
add
dec
or
add
add
push
add
add
sbb
cmp
dec
or
add
dec
or
add
dec
or
add
dec
or
add
xchg
push
xor
leave
add
adc
leave
add
or
add
add
cmp
fld
inc
or
mov
inc
add
add
add
add
add
add
add
add
add
add
or
jno
imul
add
or
dec
or
add
mov
add
sub
add
dec
or
add
add
jno
rol
loope
push
add
add
push
add
push
add
icebp
add
push
add
add
push
add
add
push
add
sbb
add
add
add
dec
or
add
add
push
mov
and
ror
add
add
sbb
sbb
repnz
arpl
sbb
sbb
aaa
add
add
add
add
add
sub
add
add
add
add
push
inc
add
add
add
add
dec
add
or
push
add
add
add
add
add
sti
pop
mov
jns
add
add
add
cmps
add
add
add
add
into
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
push
xor
add
test
add
add
add
add
add
inc
add
add
or
add
inc
add
add
jns
sbb
cld
add
add
add
or
add
or
add
or
test
ins
add
mov
push
add
test
push
add
add
add
add
jnp
sub
jno
add
add
or
add
add
or
push
add
pushw
pushf
add
dec
or
or
add
dec
or
add
add
add
add
add
add
add
add
add
add
add
lea
add
add
add
add
add
add
sahf
add
add
sahf
add
add
mov
add
add
xchg
add
add
add
add
add
add
add
add
add
repz
add
lahf
add
add
ja
mov
add
add
add
add
inc
add
add
dec
add
add
add
add
add
in
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
add
push
add
sbb
add
add
add
or
add
int
ja
add
add
add
add
int
jmp
add
add
add
add
add
add
add
add
or
add
add
(bad)
add
add
add
add
add
add
or
add
push
add
add
add
or
add
add
add
gs
xor
add
je
bound
arpl
outs
pop
xor
xor
cmp
xor
xor
add
gs
xor
inc
outs
jb
xor
jo
outs
addr16
jae
inc
popa
jb
add
arpl
gs
outs
js
add
arpl
gs
inc
outs
js
add
gs
xor
jo
arpl
gs
outs
js
add
arpl
gs
inc
outs
js
add
je
outs
js
add
gs
xor
bound
je
outs
xor
ins
popa
bound
xor
bound
je
outs
xor
inc
inc
xor
inc
inc
xor
xor
xor
xor
inc
inc
xor
cmp
xor
inc
inc
xor
inc
xor
gs
xor
xor
bound
add
je
push
push
inc
cmp
bound
je
outs
cmp
cmp
outs
fs
gs
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
inc
pop
push
inc
dec
inc
push
dec
dec
dec
dec
dec
inc
dec
inc
dec
inc
inc
add
dec
inc
pop
push
push
inc
inc
push
inc
dec
dec
dec
inc
dec
dec
inc
add
jp
inc
add
jae
gs
cs
dec
add
dec
pop
push
inc
push
inc
inc
push
dec
push
inc
dec
dec
push
inc
push
inc
push
add
je
dec
push
add
outs
jo
jb
jns
popa
je
add
arpl
ins
imul
xor
outs
popa
add
fs
dec
outs
popa
add
add
push
fs
gs
dec
popa
outs
popa
gs
je
jae
outs
inc
gs
arpl
jo
gs
je
jae
outs
inc
gs
outs
arpl
jo
gs
ins
gs
outs
arpl
jo
gs
outs
arpl
outs
outs
imul
je
dec
popa
outs
add
je
inc
ins
popa
outs
arpl
fs
ins
ins
outs
outs
add
imul
add
gs
je
push
popa
jae
ja
jb
add
jae
ja
jb
add
popa
jne
je
outs
jae
popa
outs
arpl
jae
je
dec
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
imul
add
arpl
gs
outs
js
imul
add
jns
je
push
je
gs
ins
dec
outs
fs
jo
gs
outs
fs
je
dec
ins
popa
add
imul
ins
add
outs
je
ins
gs
imul
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
jb
jo
inc
imul
jns
je
imul
add
je
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
outs
je
je
ins
add
je
dec
popa
ins
add
je
push
jae
jb
popa
ins
add
je
dec
imul
add
je
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
jne
arpl
jne
je
jb
add
je
outs
outs
inc
popa
jae
add
jo
imul
push
gs
imul
add
je
outs
js
popa
jae
add
outs
jae
add
jo
jae
add
gs
je
add
imul
jae
bound
je
je
add
je
push
push
addr16
ins
outs
arpl
imul
add
imul
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
imul
jne
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
je
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
add
ins
jne
add
jbe
add
popa
and
imul
gs
add
je
push
imul
pop
inc
ins
outs
arpl
imul
pop
inc
ins
outs
arpl
imul
pop
inc
jne
outs
push
imul
pop
inc
ins
imul
add
je
dec
gs
imul
pop
dec
gs
imul
jo
outs
jb
dec
outs
imul
add
jae
gs
cs
push
imul
outs
imul
je
imul
push
je
imul
jae
jb
outs
add
jae
outs
jae
outs
add
jae
gs
cs
jb
ja
outs
add
ins
jo
je
dec
popa
jae
add
je
add
je
add
je
dec
outs
addr16
add
outs
dec
outs
imul
inc
ins
popa
arpl
bound
je
outs
xor
ins
imul
je
outs
xor
inc
ins
imul
gs
ss
inc
ins
imul
gs
aaa
pop
inc
ins
imul
je
outs
cmp
ins
imul
pop
inc
ins
imul
gs
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
gs
xor
fs
ins
add
outs
je
imul
je
outs
ins
add
jns
je
push
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
popa
jb
ins
add
popa
jb
ins
add
outs
addr16
ins
add
je
dec
je
ins
add
jae
gs
add
ins
ins
gs
imul
imul
push
jb
je
ins
add
outs
outs
ins
add
jb
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
jne
arpl
popa
outs
add
imul
popa
addr16
outs
js
arpl
add
je
js
outs
jae
outs
outs
add
jo
imul
add
je
dec
outs
arpl
imul
je
ins
cs
outs
outs
imul
je
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
je
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
outs
jo
jb
jns
popa
je
inc
outs
ins
ins
arpl
outs
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
outs
popa
gs
outs
je
bound
arpl
ins
ins
arpl
outs
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
popa
jb
push
outs
outs
add
arpl
je
outs
outs
add
je
outs
outs
add
outs
add
ins
je
jb
dec
outs
outs
add
jae
gs
push
popa
jb
ins
gs
jb
dec
outs
outs
add
je
popa
jo
jae
je
push
popa
bound
outs
jo
push
jb
addr16
jae
inc
popa
jb
inc
push
outs
fs
addr16
dec
outs
popa
arpl
gs
outs
jb
gs
addr16
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
ins
outs
je
gs
inc
popa
je
and
imul
inc
popa
je
pop
dec
outs
arpl
jb
ins
outs
je
gs
jne
imul
inc
jbe
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
dec
inc
outs
outs
je
imul
je
popa
ins
ins
jo
jo
jb
jae
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
jae
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
jae
je
inc
jne
jae
jb
dec
popa
outs
popa
gs
outs
je
bound
arpl
jne
gs
je
jb
inc
gs
outs
jne
gs
je
jb
arpl
add
arpl
outs
jb
inc
jb
popa
je
inc
arpl
jo
outs
jb
inc
jb
popa
je
inc
outs
arpl
jo
outs
jb
push
jns
je
ins
cs
imul
imul
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
outs
jae
popa
outs
arpl
add
jae
gs
cs
gs
jne
arpl
add
popa
pop
dec
outs
arpl
jb
inc
outs
jb
xor
jb
jae
jne
arpl
add
popa
pop
dec
outs
arpl
jb
push
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
jne
imul
jae
inc
popa
je
pop
dec
outs
arpl
jb
push
jb
jo
jb
imul
pop
push
jb
jo
jb
imul
inc
imul
bound
imul
jns
gs
jo
jae
ja
jb
inc
jns
gs
push
data16
cmp
cmp
imul
jae
push
gs
fs
ins
ins
inc
jns
gs
push
jb
je
inc
ins
ins
inc
jns
gs
inc
gs
jns
gs
push
gs
imul
outs
je
jb
jae
addr16
inc
outs
outs
je
outs
ins
jae
push
jns
je
ins
cs
imul
inc
outs
jb
jae
jae
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
dec
gs
popa
addr16
outs
js
jne
je
outs
jae
addr16
inc
push
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
inc
outs
ins
outs
jb
add
jb
outs
jb
add
outs
popa
gs
outs
je
ins
popa
jae
add
ins
jo
outs
outs
je
add
outs
arpl
add
outs
popa
gs
outs
je
popa
jae
dec
bound
arpl
gs
bound
arpl
popa
outs
popa
gs
outs
je
bound
arpl
outs
fs
outs
imul
dec
outs
imul
imul
add
je
inc
gs
jne
je
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
inc
imul
jae
ins
je
push
jns
je
ins
cs
popa
outs
popa
gs
outs
je
inc
outs
jbe
jb
outs
ins
outs
je
dec
outs
imul
inc
outs
ins
jo
outs
outs
je
addr16
push
jb
outs
jae
popa
jb
outs
je
addr16
inc
jne
jb
outs
je
push
outs
imul
pop
inc
outs
outs
je
inc
inc
push
pop
inc
arpl
jo
add
push
pop
inc
outs
arpl
jo
add
jae
outs
fs
popa
jns
jne
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
jbe
dec
gs
add
jae
gs
cs
gs
add
je
push
gs
add
je
push
gs
add
je
gs
add
outs
ja
jae
je
push
popa
bound
fs
dec
jne
gs
dec
gs
popa
addr16
outs
js
push
imul
outs
js
jae
je
dec
imul
inc
outs
js
jae
je
dec
popa
js
ins
imul
push
imul
inc
outs
js
dec
outs
imul
inc
jb
popa
jns
push
outs
inc
jb
popa
jns
jae
je
dec
gs
push
jns
je
ins
cs
arpl
imul
je
addr16
jo
jns
addr16
inc
jae
gs
bound
jae
je
push
gs
fs
outs
ins
jns
inc
imul
jns
outs
jo
inc
jno
popa
ins
imul
jns
add
ja
imul
xor
pop
add
jb
outs
add
add
jae
outs
add
add
add
jo
jb
outs
add
add
jae
outs
add
dec
add
dec
loopne
and
jmp
add
add
outs
add
imul
add
outs
add
and
jbe
outs
add
add
and
jo
jb
add
jae
add
add
popa
add
imul
add
inc
add
add
outs
add
add
inc
add
add
outs
add
imul
inc
add
add
jae
jae
add
add
imul
outs
add
outs
add
add
outs
add
imul
add
add
inc
add
add
inc
add
dec
add
dec
add
add
dec
add
push
add
push
add
add
push
add
pop
add
popa
add
arpl
add
data16
push
add
ins
add
outs
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
xor
xor
xor
xor
xor
xor
add
add
add
or
add
add
jo
add
or
add
add
outs
add
add
sub
add
imul
sub
add
add
add
sub
add
imul
sub
add
jo
xor
add
sub
add
jo
popa
add
or
add
add
add
add
sub
add
popa
add
add
sub
add
ins
add
add
sub
add
jo
ins
add
or
add
add
add
add
sub
add
jb
push
add
sub
add
add
add
sub
add
imul
add
or
add
add
popa
add
add
sub
add
jo
ins
add
adc
add
add
add
add
jp
add
sub
add
add
sub
add
imul
sub
add
imul
sub
add
add
add
sub
add
jae
outs
add
cvtpi2ps
add
add
jae
je
add
sub
add
arpl
add
or
add
add
jae
jbe
add
sub
add
add
or
add
add
add
add
sub
add
jno
ins
add
or
add
add
jo
imul
or
add
add
popa
add
or
add
add
jns
add
sub
add
popa
add
add
sub
add
jae
data16
or
push
jo
add
add
sub
add
jae
add
sub
add
jae
add
or
add
add
jbe
add
or
je
imul
add
sub
add
add
add
sub
add
jae
jo
add
sub
add
add
add
sub
add
data16
add
sub
add
jae
jae
add
sub
add
je
ins
add
or
push
add
or
add
add
jae
add
sub
add
jae
jo
add
jo
popa
add
je
add
jo
jo
je
js
add
sub
add
jo
je
add
sub
add
jae
jae
add
sub
add
add
add
sub
add
add
add
sub
add
ins
add
add
sub
add
ins
add
add
js
ins
add
js
add
sub
add
popa
add
add
sub
add
data16
add
sub
add
jo
ins
add
or
add
add
jne
jb
add
sub
add
add
add
sub
add
add
add
imul
jae
add
sub
add
add
add
add
arpl
js
add
sub
add
add
or
add
add
add
add
sub
add
add
add
sub
add
je
data16
or
add
add
add
or
add
add
imul
add
or
add
add
jo
jae
add
sub
add
jo
add
or
add
add
jo
xor
add
sub
add
push
adc
cmp
pop
add
jae
add
jae
pop
add
adc
add
jae
imul
add
jo
add
imul
add
add
add
pop
add
push
add
or
jne
jae
imul
pop
add
add
jne
ins
add
outs
add
add
adc
add
arpl
je
jne
jb
add
add
pop
add
imul
outs
add
add
outs
add
outs
add
add
add
add
dec
add
inc
add
add
add
add
add
outs
add
jb
and
data16
ins
add
jae
and
push
add
and
bound
add
outs
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
add
jb
jns
jo
je
add
sub
arpl
arpl
add
jae
data16
ins
add
add
add
add
jb
jns
jo
je
add
pop
xor
xor
xor
add
add
add
add
and
imul
imul
popa
add
add
pop
dec
add
jbe
popa
add
add
add
add
add
inc
add
popa
add
imul
add
outs
add
add
outs
add
add
arpl
and
dec
add
add
jne
ins
add
add
outs
add
add
or
bound
add
add
pop
inc
add
add
outs
add
add
inc
add
add
add
or
bound
add
add
and
add
add
jae
add
add
imul
outs
add
outs
add
add
add
or
bound
add
add
or
bound
add
add
inc
xor
add
jae
xor
pop
add
add
jb
pop
add
dec
add
cmp
inc
add
imul
xor
jns
jp
xor
push
add
dec
add
pop
add
cmp
js
ins
add
add
add
punpckldq
jne
je
je
outs
add
xor
add
inc
add
jo
jns
add
bound
jne
je
je
outs
add
xor
add
bound
jne
je
je
outs
add
cmp
add
inc
add
arpl
jb
jns
jo
je
and
inc
add
ins
add
add
je
add
je
inc
add
js
xor
add
dec
add
arpl
jb
outs
add
outs
add
je
and
push
add
outs
add
and
push
add
jb
imul
ins
add
bound
add
add
add
sbb
add
jb
jns
jo
je
and
dec
add
jns
and
cmp
add
jb
bound
add
sbb
imul
push
add
js
je
inc
add
js
xor
add
jb
imul
push
add
js
je
inc
add
js
xor
add
add
je
add
inc
add
ins
add
add
popa
add
jae
and
dec
add
or
bound
add
add
cmp
ins
add
jae
and
jae
jne
arpl
arpl
add
jae
data16
ins
add
add
add
outs
add
jb
jns
jo
je
add
add
add
sbb
imul
push
add
js
je
inc
add
js
xor
add
jb
imul
push
add
js
je
inc
add
js
xor
add
add
je
add
jo
jb
outs
add
jb
add
jae
inc
add
jb
xor
add
jo
imul
jne
jb
add
outs
add
xor
add
jo
imul
jne
jb
add
outs
add
xor
add
bound
add
add
or
outs
add
ins
add
add
or
add
add
xor
add
xor
xor
add
add
add
inc
add
add
add
add
add
add
pop
add
xor
xor
add
add
add
add
add
add
add
add
xor
inc
add
add
add
inc
add
add
inc
add
add
add
add
je
popa
add
dec
add
arpl
imul
add
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
je
arpl
outs
add
outs
add
add
add
add
cmp
add
add
aaa
add
add
add
sbb
arpl
imul
add
add
sub
add
je
add
xor
cmp
sahf
dec
and
das
add
add
or
and
add
adc
add
push
add
add
add
push
push
and
add
xor
adc
ins
adc
add
push
add
add
imul
and
adc
add
push
add
lds
and
adc
add
and
push
add
add
add
add
push
add
push
or
fisttp
push
adc
or
pop
push
sbb
or
push
add
add
add
add
or
add
or
add
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
or
sbb
push
or
add
add
push
add
push
push
push
push
or
add
xor
add
add
push
push
add
sbb
pop
pop
sbb
jns
jge
add
or
add
adc
or
add
sbb
add
or
add
adc
adc
add
sbb
add
sbb
and
sbb
sbb
add
sbb
add
and
add
sub
add
add
push
sbb
sbb
push
sbb
push
push
push
sbb
push
sbb
push
or
push
push
sbb
push
sbb
push
sbb
push
sbb
push
add
add
push
add
or
pop
add
add
lea
add
adc
push
and
add
xor
add
adc
add
or
and
add
add
or
and
add
or
or
push
push
and
add
adc
sbb
and
add
sbb
or
and
and
add
xor
push
and
add
xor
cmp
or
and
add
cmp
add
add
adc
add
or
pop
add
adc
add
add
adc
add
add
add
add
add
cmp
adc
add
cdq
pop
and
add
adc
adc
sbb
sub
adc
adc
add
adc
or
xor
mov
mov
pop
jg
aad
cmp
push
or
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
sub
push
or
and
add
popa
or
add
add
or
push
or
movs
add
test
adc
adc
adc
movs
add
test
sub
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
pop
add
add
add
add
or
popa
and
imul
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
sub
add
xor
bound
sub
sub
sub
sub
popa
aaa
popa
data16
add
or
add
xor
xor
xor
xor
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
add
add
add
add
add
mov
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
aas
mov
mov
add
add
daa
add
add
add
add
jb
imul
push
add
js
je
inc
add
js
xor
add
add
je
add
add
and
imul
push
add
js
je
inc
add
js
xor
add
add
je
retf
add
(bad)
or
popa
je
dec
popa
jo
outs
gs
dec
jns
inc
outs
ins
jo
je
jb
or
jne
and
jo
jb
popa
outs
je
imul
jb
and
arpl
jo
gs
outs
jns
outs
data16
jne
and
jne
outs
je
sub
jo
outs
je
jae
and
fs
jae
and
popa
bound
gs
popa
outs
and
push
imul
and
and
addr16
popa
arpl
jae
imul
arpl
jae
and
jns
push
bound
outs
and
arpl
jo
gs
jns
and
jne
popa
jb
and
jae
and
imul
and
jb
popa
and
jns
je
and
arpl
gs
jns
jne
and
ins
gs
and
je
outs
and
je
ja
jae
and
jne
and
gs
bound
jns
arpl
and
arpl
gs
jns
jne
and
ins
gs
ja
je
outs
jne
and
jb
fs
jo
imul
jbe
arpl
or
inc
popa
outs
and
push
arpl
gs
dec
jns
inc
imul
jb
and
and
popa
jb
outs
je
and
je
jns
jne
arpl
and
arpl
gs
popa
ins
ins
and
jne
and
ins
gs
jae
data16
jns
popa
outs
and
jae
ins
jns
and
je
jns
jne
push
outs
outs
je
jae
and
outs
jne
push
gs
je
imul
ja
outs
je
je
and
jb
jo
and
ins
and
jne
and
ins
gs
and
jne
outs
gs
jo
jns
or
or
ja
inc
outs
and
push
popa
jns
or
jns
outs
je
imul
jo
gs
and
je
outs
imul
or
gs
jae
and
arpl
je
and
jb
outs
je
jo
imul
inc
imul
outs
and
jns
jae
ins
and
je
outs
imul
outs
and
outs
and
and
jb
arpl
ins
outs
jne
je
je
and
and
fs
jae
and
arpl
imul
je
imul
outs
ja
or
and
arpl
jns
jns
jne
and
imul
and
and
jne
and
ins
popa
imul
jae
imul
fs
jb
jo
imul
outs
and
jne
jae
outs
and
and
jns
outs
je
jbe
popa
and
je
jae
das
das
bound
imul
imul
das
data16
ja
ins
ins
gs
and
or
or
and
jb
outs
ins
jns
jb
arpl
ins
outs
and
jne
je
and
je
jb
ins
outs
jbe
and
jae
jae
data16
popa
jb
sub
popa
outs
and
popa
bound
jns
jne
and
je
sub
jae
outs
jb
popa
and
imul
imul
popa
jns
popa
outs
and
and
jns
outs
je
addr16
and
outs
arpl
jae
fs
and
jne
and
je
sub
jae
addr16
and
fs
je
and
and
ins
outs
jbe
jae
je
imul
ja
jb
and
je
ins
popa
je
arpl
ins
jns
and
and
ins
ins
and
je
bound
popa
bound
je
and
arpl
gs
jns
jne
and
ins
gs
gs
outs
and
and
jne
jo
jns
or
outs
outs
je
ins
outs
imul
and
cs
pop
inc
push
and
gs
outs
jae
outs
outs
and
and
jne
and
arpl
jo
gs
ins
gs
and
and
ins
ins
and
arpl
and
jb
arpl
gs
bound
add
add
gs
outs
outs
and
or
inc
jb
popa
je
and
jo
jb
outs
ins
imul
je
jo
cmp
das
bound
imul
imul
das
data16
ja
ins
ins
gs
and
or
push
je
jo
je
outs
and
and
inc
jne
and
xor
and
push
push
inc
and
je
jae
das
das
bound
imul
imul
das
data16
ja
ins
ins
gs
and
bound
sub
or
push
je
jo
je
jb
and
and
push
outs
and
xor
and
push
push
inc
and
and
je
outs
imul
ss
jae
pop
xor
pop
inc
dec
xor
inc
jo
jo
xor
xor
dec
push
pop
push
cmp
xor
add
iret
mov
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
pop
outs
dec
sahf
inc
pop
fwait
mov
xor
add
jle
add
sub
add
je
arpl
outs
add
outs
add
add
add
add
cmp
add
add
aaa
add
add
add
add
add
add
arpl
imul
add
add
sub
add
je
add
jmp
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
add
add
or
or
add
or
add
add
add
add
or
add
add
add
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
dec
inc
inc
push
js
in
pop
pop
js
lds
aaa
imul
das
nop
nop
cmp
adc
mov
int
fcomp
and
sub
or
xchg
lods
dec
jb
inc
adc
inc
dec
or
out
mov
std
(bad)
fstp
dec
(bad)
mov
(bad)
mov
fidiv
int3
pushf
jae
test
mov
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
test
push
sub
sbb
inc
push
push
cdq
cmps
or
mov
imul
aas
adc
mov
ret
imul
sub
add
fld
adc
call
iret
or
adc
test
xchg
nop
and
sub
sar
rcl
fsubp
cmp
xchg
dec
and
jl
idiv
and
jno
add
cs
sub
icebp
inc
dec
cs
xchg
dec
sbb
imul
test
push
sub
inc
cs
pop
data16
test
and
fwait
jmp
fistp
lods
sub
shr
scas
xor
mov
call
mov
nop
arpl
mov
int
mov
fldenv
mov
int3
repnz
movs
mov
ins
pop
mov
xchg
scas
call
ss
not
sbb
test
cmp
imul
and
leave
pop
mov
(bad)
aas
jle
les
call
xor
in
sub
sub
dec
add
or
xchg
jmp
or
mov
or
dec
and
inc
sub
xlat
imul
xchg
fs
mov
inc
outs
(bad)
or
mov
into
sub
mov
push
repz
adc
sbb
xor
xchg
xchg
dec
adc
mov
ss
pop
out
cdq
out
inc
sbb
fld
loop
int
xchg
fild
(bad)
test
out
loop
loop
fwait
pop
mov
or
ss
(bad)
mov
movs
(bad)
out
xchg
mov
jb
sub
sub
sub
(bad)
xchg
xchg
xchg
int
loope
push
(bad)
sti
sub
inc
push
cmp
loopne
(bad)
out
addr16
sahf
mov
push
xor
scas
shl
xchg
stc
mov
mov
add
cmc
je
mov
xchg
sahf
nop
and
scas
add
int3
mov
xchg
and
mov
sahf
xchg
pop
fstp
jb
sar
fist
mov
and
or
push
push
daa
or
loope
out
jne
call
inc
inc
adc
movs
lds
pusha
js
test
adc
ror
pop
push
mov
push
cmp
adc
ds
inc
sbb
nop
mov
test
pop
push
call
dec
stc
sbb
aas
sar
ret
push
cmp
push
nop
fist
(bad)
fsub
mov
div
jp
mov
repnz
pop
data16
xor
lahf
jmp
fs
lds
cld
sub
data16
nop
and
xchg
outs
sub
xor
mov
or
inc
cs
and
repz
(bad)
jmp
push
lods
out
or
rol
push
fisub
fs
mov
sub
aas
and
add
jp
pop
nop
pop
and
loop
loope
ins
retf
jl
fdivr
fnstsw
and
nop
or
pop
inc
mov
outs
or
push
sar
or
xor
cs
cmp
mov
sub
xor
(bad)
(bad)
std
and
xor
and
sub
cmp
lock
adc
mov
ret
and
inc
psrad
ffreep
imul
sub
imul
rcr
jle
leave
fcomip
adc
mov
jne
ja
fstp
popf
repz
(bad)
call
cld
adc
push
gs
and
in
das
retf
xchg
icebp
mov
sbb
or
push
push
push
ss
pop
jnp
mov
sub
push
cmp
popf
sub
test
push
add
fisubr
or
loop
js
cwde
lahf
and
aam
std
sub
(bad)
cmp
cld
jecxz
in
mul
outs
aaa
loop
sub
div
(bad)
nop
jmp
jmp
cmp
mov
stos
push
in
test
ds
xor
add
cli
and
mov
ja
xlat
adc
sbb
add
dec
imul
inc
mov
fst
jo
jmp
es
(bad)
out
icebp
pop
dec
gs
outs
pop
cmp
add
inc
jbe
and
popa
gs
adc
add
jnp
or
test
cli
xlat
dec
xchg
es
xor
mov
xlat
sbb
in
nop
outs
dec
pop
enter
mov
fsubr
je
sub
cmp
jno
test
jle
jl
leave
sub
jno
jmp
daa
pop
arpl
jb
aad
or
es
cld
into
aad
pop
push
push
mov
aas
scas
mov
fld
fwait
jl
scas
push
sub
inc
cmp
cdq
ret
fdiv
add
push
cmp
or
xchg
aas
and
jl
sbb
xor
(bad)
mov
or
popa
sbb
adc
fld
fcmovnu
retf
or
(bad)
mov
and
inc
(bad)
ret
(bad)
lods
cmp
imul
inc
mov
clc
and
js
ins
inc
mov
jl
sbb
leave
outs
jg
jae
sub
hlt
frstor
jl
xchg
loop
mov
ss
les
sbb
mov
adc
pop
jmp
out
adc
adc
add
or
out
adc
xor
mov
rol
icebp
mov
jmp
cmc
mul
push
les
jmp
aam
(bad)
cdq
push
mov
mov
fdiv
movs
or
jne
lock
mov
(bad)
ret
or
mov
or
(bad)
(bad)
enter
cmp
or
xchg
lods
sar
outs
arpl
cmp
fcomip
jg
jmp
push
mov
and
mov
xor
sub
adc
out
std
stos
inc
jnp
ja
enter
add
movs
js
test
cmc
mov
cmp
stos
stos
inc
push
in
sub
loop
push
retf
mov
mov
inc
mov
xchg
cwde
out
mov
fcmovne
mov
xchg
dec
ret
scas
or
ror
cmp
pushf
imul
sbb
pop
jg
enter
inc
adc
out
dec
add
das
inc
jae
sub
mov
fwait
pop
xor
pusha
add
pop
stc
jge
pop
ja
sahf
mov
mov
fst
add
cld
call
jmp
mov
mov
fimul
mov
loop
arpl
sahf
jnp
inc
cld
cmp
mov
jns
or
lgdtd
and
mov
and
aas
scas
test
(bad)
cmp
and
mov
pop
mov
out
inc
je
in
sub
ins
outs
sbb
cwde
mov
mov
pop
outs
and
push
inc
pop
and
imul
adc
xchg
leave
xor
xor
into
jecxz
mov
(bad)
sbb
jle
clc
or
pop
dec
xor
mov
icebp
or
out
cmp
xchg
fdiv
pop
cmc
cmp
mov
xchg
pop
and
dec
es
or
pop
pop
push
xchg
clc
dec
outs
jp
repnz
cmp
push
idiv
cmc
jb
sub
sub
add
fdiv
loop
ret
mov
int3
pop
dec
pop
ins
in
enter
inc
and
cmp
mov
je
repnz
adc
std
sub
mov
retf
xor
push
cwde
mov
and
and
jmp
and
sbb
sbb
cdq
lds
ja
cmps
sub
mov
xor
adc
and
xor
fcomp
(bad)
loopne
dec
dec
mov
rol
mov
dec
jmp
movs
xchg
push
and
jecxz
or
or
les
xchg
enter
pop
cld
mov
call
mov
xchg
cmp
shl
xchg
sub
leave
push
pop
les
push
xchg
nop
and
adc
out
sub
retf
int3
mov
mov
stos
das
cmps
cmp
ror
hlt
data16
add
and
in
(bad)
out
jbe
xchg
js
sub
mov
gs
mov
cmp
xchg
push
jo
xor
xor
adc
int
push
adc
add
add
aas
data16
mov
sbb
mov
mov
push
sub
psllw
sti
out
mov
dec
pop
pop
pop
pop
retf
in
sbb
pop
sub
and
mov
inc
sub
cwde
cli
call
adc
fild
int3
sub
jmp
xchg
sbb
aam
inc
add
push
inc
jnp
sub
leave
xor
inc
ins
cmps
mov
jb
cmp
jmp
fadd
sahf
inc
retf
mov
adc
xchg
pusha
fs
pop
adc
mov
mov
dec
lods
scas
mov
and
repnz
lods
ins
push
and
mov
push
pop
aam
lahf
push
mov
ds
test
(bad)
loope
test
jg
cmps
and
lds
jns
loope
pop
into
push
or
adc
test
nop
jmp
push
lea
push
dec
xchg
or
add
xor
mov
jbe
enter
(bad)
jno
sub
xchg
test
dec
mov
cmps
das
js
mov
mov
sbb
xchg
xchg
cmp
mov
imul
dec
dec
ret
call
push
mov
jmp
cwde
xor
mov
add
mov
mov
pop
xchg
mov
xor
inc
and
or
lods
stos
stos
sbb
mov
jbe
pop
jnp
pop
enter
and
mov
in
lea
sub
mov
mov
pop
xor
sub
mov
jb
addr16
out
mov
pop
popa
adc
xor
sbb
sub
iret
sub
pushf
imul
sbb
rcl
nop
sbb
push
mov
and
jg
mov
pop
sub
inc
jle
pusha
xchg
mov
mov
push
aas
popf
or
mov
into
push
jns
in
fisttp
pop
xchg
imul
psrad
mov
push
stos
lock
shl
inc
mov
sub
ins
mov
mov
and
push
inc
sbb
cmp
push
loop
mov
xor
std
and
add
jmp
add
and
jmp
jmp
cmp
mov
and
nop
dec
pop
jg
retf
sub
gs
fadd
iret
imul
out
(bad)
sbb
leave
xchg
push
in
fmul
and
mov
inc
ja
dec
stc
sbb
fwait
loope
mov
pop
mov
das
stc
mov
jne
outs
rcr
outs
push
loop
gs
out
in
scas
add
jnp
mov
sub
sar
rcr
sub
sar
sbb
xchg
cmc
mov
jbe
stos
test
pop
mov
test
fcom
dec
les
imul
repz
fisttp
repnz
out
aam
les
adc
jbe
push
mov
xchg
daa
call
cmps
mov
xchg
pop
push
jl
imul
mov
inc
and
arpl
ret
pop
int
les
fsub
mov
and
jo
mov
adc
enter
xlat
inc
or
in
in
cmps
pushf
mov
ja
sbb
dec
lahf
ds
aaa
dec
push
sub
cld
and
inc
sbb
push
jns
(bad)
and
lods
adc
xor
aaa
hlt
mov
and
nop
mov
and
mov
pop
cld
push
mov
fdiv
stos
fwait
pop
jns
pushf
jle
xchg
js
retf
les
imul
dec
inc
inc
and
mov
mov
add
pop
cs
(bad)
rcr
call
std
mov
add
xchg
js
in
mov
adc
inc
lods
ret
test
xchg
nop
popa
lods
xor
test
jecxz
out
and
cmp
cmp
mov
ins
inc
sbb
sahf
cmp
or
xor
lea
in
jae
push
and
mov
or
shr
aad
xchg
pop
push
aas
loop
push
mov
sbb
sbb
sub
lods
sub
test
cmp
mov
inc
std
xchg
add
add
or
push
sbb
(bad)
clc
pop
adc
adc
mov
xor
cmps
repnz
jae
mov
or
push
loope
inc
sbb
xor
xchg
(bad)
adc
std
jne
fadd
dec
jmp
push
inc
(bad)
repz
fwait
mov
push
pop
adc
adc
aas
popa
daa
test
mov
mov
xchg
add
int3
ret
cmp
sbb
push
push
mov
outs
repnz
enter
mov
inc
xor
inc
cmps
adc
idiv
aam
push
test
(bad)
add
adc
test
cmps
ror
and
sub
dec
pop
out
(bad)
shr
bound
mov
xchg
scas
or
clc
addr16
pusha
aam
imul
mov
mov
lods
mov
adc
dec
aam
iret
push
movaps
push
or
out
cdq
mov
xlat
dec
cli
mov
pop
cli
xor
jmp
std
xchg
int3
fs
mov
mov
pop
jbe
xchg
xlat
mov
jmp
addr16
(bad)
or
xchg
sbb
mov
jg
mul
daa
sub
call
pushf
and
cdq
dec
xchg
daa
dec
mov
into
pop
push
inc
pop
aaa
in
pop
xor
and
je
aaa
pop
test
mov
push
mov
dec
sub
cli
(bad)
fimul
sub
rcl
pop
pusha
xchg
add
adc
je
push
mul
into
xor
sub
push
dec
and
cmp
shl
xchg
sub
push
sub
pushf
add
mov
aas
idiv
dec
test
inc
stos
mov
repnz
and
sub
stos
and
cdq
es
(bad)
gs
sbb
pop
pop
int3
repz
ret
xchg
ja
fild
addr16
cmps
je
clc
in
int
pop
dec
gs
std
inc
test
jmp
out
xor
scas
ds
cld
pushf
cs
call
sub
and
mov
sub
loop
xchg
paddusb
icebp
jle
adc
jg
daa
dec
ds
inc
js
cmc
mov
pop
jb
enter
popa
and
and
adc
sub
lds
adc
in
mov
jne
call
xlat
jns
add
pop
adc
xor
arpl
mov
out
in
push
and
adc
repnz
fdiv
xlat
jl
and
dec
xchg
cs
push
sub
add
ror
jmp
jl
ja
or
in
xchg
jmp
setb
out
push
cmc
xor
aas
add
xor
sahf
repz
call
rcl
push
aaa
jl
(bad)
and
or
outs
adc
dec
adc
loope
pop
cmp
or
inc
sar
enter
or
cmp
les
cmp
rcl
dec
cmp
(bad)
imul
fstp
fst
mov
pop
inc
in
outs
call
inc
pop
ret
sub
dec
test
test
dec
pusha
add
aaa
arpl
mov
shr
pop
push
aam
xchg
(bad)
xor
je
adc
leave
dec
loope
push
sub
mov
test
jnp
mov
movs
lods
lods
ins
scas
mov
daa
mov
jmp
enter
xchg
std
lods
ret
and
push
arpl
das
and
add
pop
(bad)
mov
mov
cmp
outs
and
inc
jb
icebp
inc
(bad)
xchg
cmc
sbb
lods
shl
int3
fcom
ins
gs
imul
call
test
adc
inc
sbb
or
loopne
(bad)
stc
jge
test
cmp
mov
pusha
inc
sub
xlat
aam
ffreep
aam
out
xor
mov
out
add
mov
mov
fwait
(bad)
mov
push
or
call
mov
ror
in
mov
cmp
cmc
push
fs
out
sbb
pop
jmp
mov
pop
clc
in
test
xor
sub
dec
in
cmp
mov
shl
push
push
inc
and
xor
or
shl
movs
movs
movs
sub
iret
xlat
dec
call
jl
jl
or
sub
ja
mov
inc
lock
pop
adc
push
pop
dec
std
cs
xor
mov
rol
pop
sbb
test
dec
adc
or
dec
stos
xchg
xor
(bad)
xchg
scas
or
pop
gs
mov
xor
jo
push
mov
sahf
sub
add
inc
push
and
mov
push
cmp
mov
mov
and
cld
push
dec
xor
inc
push
jns
xlat
push
and
push
adc
sbb
add
xor
stc
adc
in
inc
xchg
jmp
and
dec
ins
xor
in
jne
in
dec
leave
scas
mov
mov
pop
jl
aam
xchg
push
sub
out
adc
mov
adc
addr16
dec
jns
add
push
retf
xor
cwde
cmp
nop
lods
dec
adc
jae
out
mov
or
pop
(bad)
pop
and
jmp
lahf
inc
jae
cmps
cmps
dec
popf
cmp
mov
in
jnp
pop
out
inc
popf
jg
iret
ror
sub
jl
inc
je
xchg
out
aam
loope
sub
fistp
inc
cmp
rol
jbe
fisubr
jo
lods
add
out
mov
scas
fsub
enter
inc
scas
mov
xor
das
jmp
sub
or
cmp
int3
or
sbb
leave
clc
push
jo
sbb
std
das
in
rcl
cli
pop
jo
or
or
push
dec
stos
addr16
or
cmps
mov
out
dec
std
ret
sbb
jbe
xlat
outs
inc
mov
lahf
push
cmp
lods
int
ins
mov
inc
dec
adc
sti
pcmpeqb
and
and
mov
xchg
cmp
push
sub
mov
lds
jp
je
popf
push
jmp
out
ins
pop
adc
and
fst
shl
dec
cld
pop
inc
(bad)
push
popf
dec
sti
push
sub
repnz
outs
xchg
cld
jb
outs
add
push
aam
dec
mov
mov
loopne
movs
pop
and
lahf
rol
and
(bad)
loopne
jae
and
push
loopne
mov
jno
enter
sub
std
fcomp
and
sbb
in
repz
outs
aam
or
jmp
mov
jae
sbb
mov
das
adc
pop
xchg
mov
xchg
mov
dec
mov
ja
xlat
xlat
jb
adc
push
les
xchg
cmp
mov
ja
into
fbstp
adc
stc
push
jmp
jae
lods
and
ds
jmp
stc
add
dec
cmps
popf
out
jecxz
mov
xchg
xchg
xchg
call
cmc
shr
test
outs
or
jb
add
in
js
loope
fadd
fadd
xlat
(bad)
adc
jno
xchg
mov
mov
in
push
fdiv
(bad)
sti
repz
(bad)
rcr
or
xlat
and
pop
mov
inc
xchg
ja
scas
std
xchg
in
test
jle
xor
pop
mov
daa
sahf
test
pop
shl
movs
jbe
pop
cmp
rcl
dec
pop
test
shr
fisttp
push
adc
and
test
lods
gs
jmp
call
sbb
cmp
jb
test
or
inc
cmps
adc
(bad)
inc
dec
and
call
push
push
sub
not
jb
sbb
mov
aaa
xor
mov
jle
pop
pushf
inc
mov
sub
daa
dec
pop
dec
mov
pop
mov
mov
test
int3
cwde
xor
jae
inc
pop
nop
and
xor
mov
sbb
xor
pop
push
adc
push
cld
sbb
sbb
jge
hlt
adc
lods
mov
je
pop
inc
outs
adc
mov
xor
ds
push
test
lods
sbb
xchg
xlat
push
xchg
and
jle
jbe
out
test
outs
dec
and
jg
iret
or
(bad)
mov
out
and
jno
mov
loop
dec
mov
retf
pop
inc
lahf
pusha
into
dec
scas
arpl
jne
pop
xor
and
cmps
mov
add
pop
scas
std
aaa
xchg
xor
adc
push
pop
hlt
sub
mov
fistp
and
repnz
ja
sar
or
xchg
cmp
pop
mov
xchg
inc
fst
cmp
sub
sti
add
cs
hlt
pop
pop
ret
push
ds
jno
add
jl
push
or
popa
int3
cwde
xor
sbb
jecxz
pop
jae
shl
sbb
or
and
jnp
push
push
dec
imul
lock
jns
xchg
out
neg
iret
sub
lods
pop
ins
fs
out
xchg
inc
adc
das
add
pop
cmp
cwde
test
movs
scas
int
scas
das
pop
mov
adc
or
loope
jge
call
xor
shr
popf
mov
add
mov
xor
and
imul
mov
pusha
cs
jmp
mov
add
push
inc
add
popf
jbe
sub
mov
shl
gs
cmc
jg
jbe
push
loop
imul
cmps
mov
enter
push
fwait
lahf
adc
push
mov
dec
loop
out
cmps
add
jbe
push
cmps
add
cmps
in
jmp
or
jo
fldenv
(bad)
out
adc
test
fcomp
call
mov
cmp
(bad)
or
xchg
pusha
or
dec
mov
xchg
pusha
and
xchg
xchg
outs
sub
lods
jo
push
and
movs
ret
mov
test
fdiv
mov
daa
outs
add
xchg
sub
adc
mov
mov
sub
sub
sub
or
add
out
test
mov
lods
loop
das
repnz
mov
test
dec
pop
push
mov
call
and
dec
fisttp
cdq
into
push
out
xor
neg
js
shl
xlat
adc
popa
xchg
adc
pop
sti
pop
add
mov
pop
loop
push
mov
jo
outs
out
mov
and
jmp
xchg
enter
add
push
shl
sbb
xchg
add
or
je
adc
outs
cmp
dec
mov
imul
xor
mov
(bad)
jno
pushf
rcr
fcomp
sti
jns
pop
sbb
add
mov
xor
mov
push
sub
adc
ja
push
into
scas
cmp
lds
int3
int
mov
push
mov
adc
inc
out
nop
cmp
test
clc
sbb
es
int
bound
lods
aam
and
mov
not
xchg
fdiv
xchg
test
cmp
jl
add
pushf
push
outs
sbb
imul
xor
jae
mov
pop
dec
inc
sbb
jo
sub
nop
dec
mov
jg
and
inc
mov
dec
rcl
mov
lods
lea
fs
mov
sbb
stc
inc
sub
fcomp
sbb
and
neg
adc
addr16
lods
(bad)
mov
mov
loope
hlt
jo
pop
clc
cli
push
xchg
dec
clc
inc
pop
cld
xor
adc
leave
aam
leave
scas
mov
stos
imul
pop
aad
or
out
pop
push
pop
bound
sub
xor
inc
cmp
add
in
(bad)
out
mov
fcmovbe
adc
push
cmps
ja
mov
adc
xor
test
jmp
nop
sbb
xchg
dec
jmp
repnz
xchg
daa
pop
inc
std
xchg
add
add
aad
lahf
sub
and
in
pushf
jb
outs
fdivr
and
sahf
mov
inc
ss
xchg
fmul
sub
dec
mov
xchg
adc
mov
loope
mov
test
mov
ss
call
in
ror
mov
js
cmc
sbb
jbe
cli
bound
pusha
cs
neg
cmp
pushw
and
lock
push
(bad)
jns
mov
jg
fcmovu
cwde
mul
outs
mov
adc
es
mov
jg
mov
xchg
lods
dec
repz
or
(bad)
test
and
xor
inc
sahf
add
add
leave
dec
pushf
jb
leave
je
mov
not
mov
test
mov
cmps
cmps
xchg
mov
jae
mov
jmp
aam
jnp
std
in
outs
ret
sub
inc
sub
xchg
loopne
in
adc
xchg
push
inc
inc
vsqrtsd
pop
jmp
(bad)
(bad)
pop
xchg
xchg
xchg
ins
xchg
mov
pushf
cmp
and
push
loope
add
out
arpl
test
sub
jae
push
cdq
jmp
adc
out
test
xchg
cmc
mov
jmp
les
call
jg
push
iret
add
call
sub
pop
imul
cdq
pusha
pop
cs
mov
pop
push
jae
xor
into
xor
into
ror
xor
das
into
jnp
and
cmp
cmp
jecxz
xchg
dec
add
cmp
add
aad
or
add
loop
icebp
addr16
jl
fsub
and
fcom
pop
pop
inc
std
push
cs
sbb
xchg
out
mov
int
push
mov
jmp
dec
(bad)
pop
(bad)
jmp
dec
xor
mov
aas
jl
les
inc
mov
cmp
pop
fldcw
mov
push
cmp
int3
shl
cli
popa
inc
out
pusha
out
dec
dec
jge
stos
dec
pop
ins
xchg
xchg
call
mov
(bad)
in
imul
adc
(bad)
mov
or
cld
sub
repnz
xchg
neg
and
pop
daa
xchg
rcl
fidiv
xor
repnz
add
xchg
mov
mov
(bad)
mov
lods
in
and
out
ficom
ror
xor
xchg
in
and
and
gs
gs
fistp
ins
sub
inc
aaa
push
inc
scas
or
mov
inc
in
inc
cmps
aas
ret
(bad)
mov
dec
mov
cld
(bad)
mov
push
call
(bad)
pop
sbb
in
mov
fdivr
xchg
push
pop
lods
call
out
ja
std
dec
arpl
shl
cmp
lea
retf
cmp
xchg
jns
lods
sahf
(bad)
mov
in
(bad)
out
lahf
xchg
aas
out
retf
mov
clc
inc
shl
inc
shl
mov
aad
(bad)
int3
add
push
daa
ins
(bad)
dec
ds
pop
mov
inc
rcr
ret
push
xor
add
dec
sbb
hlt
rcl
ss
pushf
enter
lds
xchg
mov
std
and
inc
rcl
push
cdq
and
add
std
jne
lds
or
je
imul
and
push
clc
lods
ins
inc
mov
pop
aas
pop
jl
(bad)
pop
mov
nop
mov
ret
mov
mov
(bad)
cmp
arpl
xchg
cld
sub
sbb
scas
pusha
nop
imul
hlt
lods
test
out
ja
add
fstp
leave
mov
imul
shr
dec
stc
mov
lods
int3
add
jmp
xchg
ins
xor
out
jecxz
mov
in
mov
push
cdq
mov
movs
add
cmps
jne
hlt
jmp
sub
ret
and
fwait
and
cwde
retf
sahf
jo
and
cs
or
scas
int
add
paddq
xchg
mov
nop
pop
dec
mov
xor
fisubr
and
in
int3
inc
push
aas
pop
jmp
fsub
mov
rcr
arpl
sub
xor
cmp
clc
int
adc
inc
mov
and
or
jge
mov
out
sahf
test
or
lods
mov
adc
xchg
xchg
adc
sub
jmp
mov
pusha
leave
imul
repz
jne
cmc
mov
fcomip
or
mov
es
call
adc
int
fmul
or
ja
mov
push
cmp
push
add
stos
ret
rol
cmp
out
pop
or
in
(bad)
and
dec
adc
mov
lea
mov
bnd
es
jp
outs
mov
(bad)
aas
test
movs
push
ror
fst
dec
jns
mov
repnz
(bad)
mov
push
sub
sbb
addr16
or
dec
aas
(bad)
mov
and
fcom
fistp
in
das
cmp
les
popf
mov
inc
out
mov
jmp
xchg
test
mov
addr16
inc
jnp
(bad)
idiv
ret
(bad)
mov
xchg
fild
in
xlat
sbb
pop
fcom
stos
(bad)
aad
inc
rep
sub
sub
push
sub
or
cmc
mov
out
clc
jecxz
xlat
rcl
add
sbb
leave
jg
cmp
and
fs
sbb
imul
in
loop
and
dec
mov
(bad)
mov
push
add
mov
xchg
sub
adc
mov
xlat
cmp
std
xchg
push
test
shl
xor
ins
lea
clc
mov
or
dec
jnp
out
adc
jbe
and
clc
(bad)
retf
inc
push
push
adc
movs
ds
shl
cwde
call
xlat
ins
dec
pop
loop
outs
ds
push
push
lahf
stos
xchg
pop
inc
fbstp
fldcw
test
imul
movs
cmps
inc
das
sub
jg
xor
lahf
inc
out
out
dec
lods
arpl
push
es
or
aas
add
pop
rcr
or
lods
fild
in
jle
fst
fidiv
popa
out
adc
aam
jbe
imul
lods
push
xlat
sbb
mov
int3
es
adc
mov
and
aam
lahf
mov
sub
add
int3
lock
pop
and
add
mov
mov
cmp
sub
lods
mov
xor
fsub
mov
bound
dec
mov
imul
test
hlt
mov
test
mov
push
retf
sub
or
cld
dec
push
out
retf
mov
jl
and
lods
(bad)
(bad)
mov
mov
inc
push
push
mov
fucomip
xor
shr
cmps
mov
add
leave
je
mov
dec
movs
(bad)
adc
in
adc
jno
leave
daa
sar
mov
xor
nop
js
mov
nop
(bad)
repz
and
lock
or
pop
mov
pop
or
stos
lods
xlat
pop
aam
and
loop
ret
shl
stos
push
sub
adc
ja
dec
lahf
ds
(bad)
retf
pop
loopne
addr16
cld
sbb
out
mov
not
inc
xchg
inc
sbb
out
inc
mov
int3
mov
dec
mov
out
rcl
and
sbb
xor
mov
xlat
or
xor
scas
out
mov
test
test
mov
ja
and
outs
aad
(bad)
jmp
mov
rcr
test
xlat
dec
popf
lods
retf
or
sub
jge
fdiv
hlt
xor
cmp
popf
sahf
fs
lods
daa
in
aam
xor
xor
test
push
adc
mov
stc
jno
add
mov
stc
test
inc
dec
ins
sub
test
mov
mov
add
pusha
push
hlt
sbb
in
jns
shl
fsubrp
sbb
push
jg
fwait
mov
test
mov
xchg
ins
and
cmps
out
mov
(bad)
inc
mov
xor
bound
pop
scas
aad
dec
push
pop
out
cli
pop
pop
mov
pop
cmps
leave
outs
jnp
int
jns
(bad)
aaa
pop
fs
xchg
bound
lea
out
inc
dec
mov
in
add
fisub
pop
mov
add
and
inc
ja
stos
and
pusha
popf
sub
sub
enter
mov
je
dec
xchg
mov
mov
push
push
sti
inc
call
(bad)
outs
mov
mov
popf
inc
outs
test
jp
push
stos
push
sub
or
and
gs
sbb
pop
bound
(bad)
xchg
out
loope
xchg
(bad)
scas
adc
popa
outs
dec
xchg
xchg
sub
cmps
ds
or
mov
aas
and
bound
cmps
out
xor
adc
and
cmp
pop
(bad)
cmp
inc
mov
xchg
cdq
or
jnp
int
cmp
jne
retf
sub
cwde
out
call
retf
es
mov
inc
dec
mov
fdiv
xlat
and
leave
xchg
daa
pop
dec
std
lock
xlat
xor
bound
gs
inc
mov
inc
gs
aas
jl
mov
push
sub
test
scas
xchg
jle
dec
push
xor
xchg
into
mov
data16
test
and
bound
or
and
je
jg
imul
mov
out
push
(bad)
imul
(bad)
aaa
in
cld
fistp
jg
js
outs
mov
ss
fist
in
(bad)
mov
mov
cmp
adc
jno
inc
mov
adc
adc
int3
inc
popf
adc
cmp
in
mov
enter
fcom
or
lock
jmp
inc
mov
mov
jle
scas
repnz
hlt
xchg
push
pop
sub
mov
in
or
out
loop
adc
into
push
jb
mov
xor
pop
movs
pop
into
add
scas
fcmovnu
(bad)
pusha
cmp
mov
push
jge
fcmovnbe
push
std
(bad)
pop
pop
mov
je
in
sub
xchg
inc
retf
icebp
add
mov
and
jmp
mov
mov
push
xor
fisttp
adc
and
xchg
test
dec
sahf
(bad)
(bad)
jb
xchg
jmp
das
ficom
inc
rcl
ffreep
or
jp
(bad)
adc
into
push
(bad)
imul
jg
pop
stos
imul
adc
fisubr
pushf
xor
inc
test
xor
mov
jne
(bad)
pushf
sbb
xchg
inc
sbb
std
or
fist
(bad)
inc
adc
jne
push
adc
movs
lods
jo
ss
int
mov
push
cmc
aam
cmc
mov
dec
cmp
or
in
jbe
ja
icebp
mov
and
xor
ins
pop
das
call
xor
call
jbe
lods
repz
(bad)
sub
out
add
scas
jmp
jg
xchg
cmp
test
ficom
fisttp
dec
push
outs
adc
xchg
into
mov
mov
cmp
iret
xchg
rcr
pop
dec
add
repnz
push
aas
jl
imul
jno
dec
and
jno
mov
mov
cmc
retf
idiv
mov
adc
xchg
and
fist
adc
add
int
inc
and
out
sbb
xchg
xlat
jne
adc
cli
ror
sub
adc
enter
ss
scas
and
add
jg
xchg
fild
mov
pop
out
mov
cmp
and
clc
sbb
fstp
mov
mov
ror
lock
retf
out
push
aas
pop
shr
int
inc
xor
jnp
pop
aam
cmp
add
jge
cmps
add
mov
punpcklwd
dec
mov
outs
push
retf
mov
stc
xor
jg
cld
mov
lock
stc
cld
int
jecxz
fistp
sub
pop
leave
aam
data16
sub
call
cmp
lods
dec
scas
mov
inc
mov
dec
jl
scas
dec
in
sub
cmp
xor
(bad)
push
push
ffreep
shl
jne
rcl
je
bound
js
dec
fwait
(bad)
repnz
lock
sub
test
das
jo
push
pop
xchg
xchg
in
or
rcr
pop
and
cli
sub
addr16
adc
or
sbb
xor
mov
xchg
cmps
jecxz
pop
daa
mov
bound
cmp
xchg
adc
fst
xor
test
mov
pop
sar
dec
jmp
repnz
mov
pop
adc
in
data16
sti
rcr
sbb
in
push
inc
ins
daa
or
push
xor
es
in
call
sbb
dec
adc
les
scas
pop
cmp
or
mov
cmp
out
add
xchg
out
inc
fucomp
aad
frstor
cli
in
jo
out
jmp
popf
rcr
cmps
push
and
scas
shr
(bad)
push
dec
mov
aas
nop
test
inc
cmp
lods
mov
ins
in
jmp
add
(bad)
xchg
das
pop
ds
jl
or
mov
mov
iret
sahf
cmp
jl
out
cmp
mov
shl
iret
inc
or
mov
test
retf
mov
out
scas
gs
mov
jp
and
rcr
xchg
out
push
adc
fist
and
inc
es
xchg
rol
jl
adc
jle
ins
dec
adc
sar
int3
sub
mov
jge
sub
add
shl
inc
dec
scas
add
cmps
push
pop
(bad)
fild
lock
sbb
retf
lock
sub
cmc
(bad)
std
scas
cmp
jp
outs
cmps
and
sbb
cmp
lods
and
cmp
jns
in
mov
mov
into
sub
mov
scas
mov
xchg
adc
idiv
xchg
in
push
push
jno
lds
in
popa
ret
pop
mov
lock
jmp
clc
sbb
test
(bad)
xlat
iret
test
fist
pop
push
pushf
lahf
mov
xor
xchg
ins
and
push
fs
mov
mov
add
out
or
cli
fistp
adc
nop
sbb
call
out
cli
test
mov
dec
call
outs
movs
sbb
loope
pop
jle
(bad)
push
adc
push
inc
fiadd
mov
sbb
clc
icebp
jecxz
fcom
fisub
fdiv
push
xchg
jle
inc
pop
push
dec
jge
push
shr
push
cmps
in
and
jmp
jne
test
xor
loope
mov
out
(bad)
mov
call
inc
into
sbb
aas
pop
mov
sbb
mov
sar
(bad)
fistp
fnstsw
frstor
test
inc
outs
pop
fwait
enter
imul
mov
push
popa
jnp
jl
pop
cmova
inc
jle
iret
out
jne
pop
das
(bad)
push
dec
mov
iret
jae
(bad)
sub
div
jl
dec
enter
jb
(bad)
not
imul
(bad)
mov
adc
xor
aad
pop
call
inc
fistp
cmp
(bad)
mov
rcr
int
cmp
mov
dec
icebp
jns
mov
iret
mov
cmp
aam
or
fnstenv
mov
cmps
popf
jbe
shl
jbe
xor
pushf
shr
repnz
ret
pop
enter
fild
xchg
nop
arpl
mov
xchg
popf
xchg
rol
cs
in
nop
lds
sti
cs
outs
movs
adc
shl
ret
jmp
out
icebp
pushf
lds
aas
add
pop
iret
pop
xor
retf
ins
xchg
cld
xchg
push
xchg
loopne
and
sub
sub
mov
rcr
xchg
sub
and
dec
test
adc
lods
or
pushf
imul
cdq
aam
test
sbb
(bad)
sti
out
aas
in
and
adc
mov
lock
pushf
imul
sub
out
(bad)
jmp
in
ja
and
clc
in
inc
clc
lahf
push
lock
and
std
retf
jo
pop
shr
jne
mov
stc
or
inc
(bad)
hlt
fistp
int
pop
enter
add
add
adc
imul
pop
mov
jae
ficomp
cli
repz
cld
dec
and
pop
mov
(bad)
xchg
and
sub
jmp
cmp
jmp
sti
sahf
mov
jp
nop
dec
jo
out
std
sub
scas
lock
inc
aaa
mov
movs
ror
jbe
push
aam
bound
aaa
ins
xchg
test
mov
fs
fdivr
xchg
xchg
inc
mov
int3
push
outs
cdq
retf
inc
jb
lock
jmp
mov
outs
inc
cmp
jl
out
fstp
clc
popf
xchg
loope
mov
xchg
jge
jmp
sub
pop
inc
std
fmul
inc
mov
jae
mov
(bad)
fist
pop
shl
fcmove
retf
js
add
jl
or
scas
(bad)
sti
push
sub
fidivr
cld
std
popa
pop
out
mov
cmp
jg
jbe
sub
mov
neg
imul
loop
sbb
push
leave
sub
cmp
in
jl
mov
xor
pop
xchg
adc
mov
sub
sti
das
adc
enter
and
lahf
mov
shl
mov
pop
push
adc
out
out
inc
mov
movs
scas
pop
out
push
mov
cmps
push
inc
(bad)
dec
mov
adc
rcl
in
sub
inc
sar
sub
hlt
mov
cmp
(bad)
cld
dec
sbb
sbb
sbb
fbstp
adc
cdq
jg
mov
ja
pushf
in
jnp
push
push
ret
loope
addr16
out
jne
jne
xchg
and
cmps
mov
rol
test
pop
clc
rcr
xchg
mov
jp
push
mov
or
leave
xchg
mov
cmp
shl
pop
sub
(bad)
ja
hlt
das
hlt
xor
out
sbb
mov
ds
cmps
or
mov
jmp
mov
mov
retf
and
into
(bad)
divps
dec
pop
ds
ins
sub
inc
call
sbb
movs
sub
in
sub
inc
mov
mov
in
gs
jb
das
das
into
mov
xchg
pop
jmp
retf
(bad)
fld
js
pop
bound
aam
cmp
push
popf
jl
leave
ficomp
stos
or
xor
cmp
adc
jo
clc
lea
dec
dec
inc
sti
clc
xor
iret
inc
mov
test
out
mov
pop
jge
cmps
sbb
jg
or
sar
imul
imul
pop
cmp
fs
rol
pop
dec
(bad)
sti
mov
cli
cmp
xlat
mov
adc
mov
and
imul
jns
std
jns
xchg
inc
mov
faddp
mov
push
test
call
rcr
pushf
fs
cmp
adc
cdq
xchg
add
push
add
add
inc
mov
add
repnz
mov
push
push
aam
scas
dec
in
popa
jmp
xchg
and
into
dec
adc
cmp
mov
push
cmp
shl
mov
call
jecxz
popf
ins
inc
push
movs
mov
(bad)
(bad)
xchg
cmp
adc
ja
mov
jno
xchg
dec
sbb
les
push
push
push
push
add
in
xor
jl
arpl
and
bound
inc
add
daa
push
mov
adc
rol
push
sbb
adc
inc
adc
data16
addr16
lahf
leave
inc
jno
stos
daa
adc
fbstp
int
push
lods
pop
lock
imul
aam
lods
loopne
test
(bad)
sbb
retf
cli
das
es
inc
mov
enter
jmp
adc
mov
adc
call
(bad)
pushf
xor
mov
(bad)
sub
pop
fsub
xchg
fisttp
aas
outs
test
jno
lahf
scas
xor
xchg
xor
adc
retf
sti
mov
clc
dec
mov
pop
cmp
lahf
gs
dec
xchg
pusha
stos
ins
call
jecxz
cmp
mov
adc
mov
mov
cmp
mov
add
cli
inc
fdivr
sahf
jmp
aam
neg
jmp
aaa
jmp
cli
mov
jecxz
ins
(bad)
or
pop
dec
std
pop
and
xlat
(bad)
call
or
ret
outs
inc
(bad)
aas
repz
cmp
fld
sub
mov
inc
jbe
pop
jmp
pop
lahf
call
aaa
mov
xor
mov
int3
stos
jmp
pop
sbb
aaa
jge
jmp
in
cmps
cdq
xchg
retf
mov
int
or
dec
xor
xor
call
xor
mov
fimul
xchg
or
jno
popf
push
sbb
(bad)
pop
cmp
aas
fisubr
std
and
shl
je
or
and
dec
jmp
inc
call
imul
mov
ret
psubw
aam
push
push
mov
or
mov
adc
cli
sbb
adc
in
call
inc
cmp
jne
std
ret
adc
leave
hlt
movs
cmp
adc
es
movs
mov
icebp
mov
scas
enter
(bad)
test
cld
rol
and
inc
pop
pop
xchg
mov
test
or
cmc
pop
hlt
and
add
mov
mov
xchg
int3
push
outs
cmp
sub
fild
lock
mov
mov
and
daa
loop
inc
mov
pushf
out
movntps
nop
pushf
mov
lods
mov
inc
imul
sub
shufps
xor
sbb
mov
cmps
sti
fwait
mov
sti
out
push
aas
iret
jl
(bad)
retf
(bad)
cmps
dec
lahf
mov
push
cmps
dec
sub
nop
jecxz
cmp
lock
fwait
pushf
mov
xchg
call
ins
(bad)
mov
aam
arpl
lea
push
fs
mov
jp
in
dec
sub
cwde
out
xchg
and
and
add
cmps
jne
ret
aaa
enter
inc
xchg
inc
jbe
jnp
lock
mov
(bad)
test
cmp
xlat
or
fsubr
(bad)
cmps
inc
jae
cmp
mov
fisub
xor
mov
pop
clc
jmp
outs
add
div
sbb
mov
and
jg
adc
sbb
or
sbb
pop
xchg
movs
sbb
aas
push
aas
push
add
aaa
inc
mov
mov
and
and
xchg
xchg
mov
adc
adc
ret
and
pusha
jp
retf
(bad)
add
jl
xchg
divps
inc
mov
in
sbb
pusha
jmp
test
push
dec
call
test
push
pop
cmp
cli
dec
inc
cld
cmp
lahf
or
cld
gs
clc
add
xchg
adc
xchg
push
pop
sbb
push
sahf
test
lahf
xor
mov
in
jp
(bad)
jnp
aas
std
jmp
mov
iret
pusha
cmps
aam
scas
scas
shl
jno
std
add
(bad)
js
(bad)
jmp
mov
ret
jne
jo
sub
ins
dec
aam
pop
mov
pop
bound
lods
scas
jbe
cs
add
fisubr
sub
lock
jnp
mov
lock
xor
outs
push
in
mov
sub
or
xor
popf
cmp
test
cmps
shl
xchg
cmp
popf
xchg
sti
setb
sbb
dec
loopne
shl
mov
fnstcw
mov
or
into
pusha
xchg
in
loopne
arpl
fucomip
xlat
xchg
dec
outs
dec
daa
enter
sbb
fcomp
or
sbb
into
cmp
xor
movntq
cmp
inc
mov
in
mov
push
adc
fadd
xchg
rol
mov
je
mov
ds
mov
ins
fcmovne
mov
push
fwait
and
shl
and
lea
and
mov
daa
mov
sbb
sub
hlt
lahf
cmp
push
outs
fdivr
out
inc
jp
(bad)
int
push
and
(bad)
fiadd
cdq
in
lock
sbb
and
xor
hlt
mul
in
xchg
mov
mov
lock
and
ds
xchg
retf
das
xchg
cmp
mov
dec
pop
les
mov
cmp
in
mov
dec
shl
gs
jo
test
and
mov
retf
xor
jle
push
shl
push
fild
dec
out
sbb
sub
mov
sar
dec
pop
fild
ins
pop
enter
lds
loop
sbb
or
ret
mov
ja
push
leave
sar
cmp
data16
xchg
popf
mov
xchg
xor
mov
inc
add
jecxz
jnp
ins
cmp
cmps
in
lea
inc
fwait
in
fisub
or
pop
das
jne
push
mov
jno
jo
mov
clc
popf
repz
in
loop
and
push
das
dec
push
ins
push
cld
sbb
stc
ret
std
neg
dec
ins
fistp
adc
jge
add
rcr
xor
pop
addr16
xchg
sahf
stc
cwde
sbb
push
pop
jle
(bad)
mov
ds
sbb
inc
and
cmps
dec
fst
cmp
(bad)
movs
mov
out
repz
in
xor
jbe
adc
out
test
loope
cmp
xchg
ja
sub
jns
xor
pcmpeqw
iret
jmp
jbe
xor
rcl
sbb
xor
leave
jl
jo
adc
sbb
fld
popa
push
cmp
lods
lods
cld
add
mov
adc
cmc
inc
lods
and
ret
(bad)
outs
mov
jne
cmc
inc
clc
mov
push
pop
mov
icebp
cli
jns
iret
fidiv
sbb
pushw
ja
lahf
mov
cdq
and
cmps
aas
adc
add
xor
leave
adc
rcr
les
shl
jno
jae
fstp
xchg
addr16
cmps
inc
mov
lods
aam
jnp
cwde
daa
nop
movs
push
dec
shl
out
push
ss
movs
addr16
add
sar
cwde
xor
cmp
xchg
js
cmps
jle
and
mov
in
shl
imul
loope
jo
jns
stc
call
mov
inc
jl
jmp
push
jp
in
cdq
cmc
popf
gs
dec
push
xor
and
daa
js
or
in
pop
(bad)
pusha
sbb
iret
inc
xlat
stos
test
pop
jle
ss
outs
inc
cmp
popf
mov
xchg
out
push
mov
sub
outs
mov
pop
add
mov
idiv
dec
pop
pop
fstp
sub
jnp
orps
xchg
push
sub
cli
jae
inc
mov
ss
scas
shr
adc
dec
lock
push
dec
jb
fs
mov
scas
add
call
and
dec
test
sub
jg
outs
cmp
pushf
outs
mov
pop
or
sbb
mov
mov
xchg
test
outs
nop
mov
call
add
call
shl
cmc
fimul
cmp
fsub
jo
dec
pop
jp
rcr
dec
test
stc
sbb
pop
lahf
adc
das
dec
cmp
(bad)
ficomp
jp
push
mov
cmp
pop
adc
rol
out
adc
jecxz
add
jne
cmp
leave
xchg
and
push
cmp
mov
nop
or
int3
(bad)
mov
mov
cmp
call
call
cmp
push
push
ds
outs
pop
jg
cld
scas
ror
pop
add
push
xlat
ror
(bad)
repnz
mov
jno
jl
cmps
mov
fcmovbe
bound
inc
js
cvtdq2ps
or
mov
xchg
xor
cmc
popa
mov
adc
ss
add
dec
pop
cmps
out
sbb
daa
movs
cmps
aas
das
sub
and
enter
loopne
in
dec
retf
movs
(bad)
inc
aam
cmp
push
shr
xchg
repz
retf
sbb
mov
(bad)
cwde
mov
push
and
jle
push
and
adc
push
mov
or
rcl
ins
xchg
fwait
cmp
push
jno
mov
arpl
pushf
cmc
pop
fld1
jmp
ja
sub
and
mov
mov
add
out
nop
nop
leave
or
mov
repnz
sub
pop
sahf
out
dec
cmp
pushf
pop
hlt
mov
mov
into
aam
adc
(bad)
lods
pop
ret
jo
jmp
push
lahf
lds
(bad)
mov
bound
xor
push
cmp
aas
inc
ret
jne
mov
je
jb
adc
movs
mov
call
jo
xor
mov
pop
hlt
mov
sbb
inc
push
leave
cmp
adc
or
mov
fstp
cmc
out
jge
xor
ss
ret
fucomi
cwde
or
xchg
fdivr
mov
pop
mov
in
inc
mov
icebp
jle
fcmovu
cs
cmp
lahf
sbb
int3
xchg
test
out
dec
cmp
adc
sub
push
jmp
int
cmps
cmc
shr
sub
in
popa
fmul
inc
fwait
cmp
repz
pop
fstp
retf
push
cmps
repz
in
jg
adc
push
in
add
outs
pop
clc
and
mov
push
fnsave
call
sbb
lock
aaa
push
or
shl
addr16
shl
test
mov
clc
dec
repnz
aas
or
out
dec
fwait
pop
jnp
mov
cwde
or
mov
and
cmc
jo
ins
lods
jmp
btc
jne
mov
pusha
hlt
and
add
and
(bad)
or
dec
fisub
inc
mov
xchg
ficomp
in
shl
arpl
lahf
in
push
xchg
inc
inc
mov
adc
out
(bad)
outs
or
mov
xchg
mov
mov
out
mov
stos
adc
jmp
mov
bt
imul
mov
inc
mov
(bad)
mov
out
cmp
mov
jmp
adc
(bad)
jns
movs
fnsave
adc
inc
mov
mov
repz
adc
jno
imul
inc
fcomp
rcl
retf
inc
lahf
xor
call
fwait
xor
icebp
adc
cmp
mov
add
dec
imul
loope
cmp
data16
rcl
cs
jnp
arpl
sub
iret
sbb
mov
cld
pop
scas
in
cmp
dec
mov
movs
inc
cmp
dec
cmp
mov
sti
adc
pop
cdq
iret
mov
mov
stos
leave
jecxz
test
bound
in
and
fmul
(bad)
sub
push
out
and
jmp
dec
(bad)
mov
call
cmp
adc
rcr
gs
aad
in
mov
ss
loope
loopne
sub
mov
out
out
cmp
ins
aaa
mov
imul
jbe
sahf
dec
dec
jg
jae
add
int3
and
add
jno
xchg
adc
jnp
outs
xchg
inc
ja
(bad)
sub
mov
mov
mov
pop
mov
fs
pusha
shl
test
call
mov
jmp
out
pop
pop
mov
nop
imul
sar
cmp
xchg
dec
sub
shl
jg
add
rcl
mov
lahf
dec
or
sahf
inc
je
bnd
adc
ds
cli
xor
and
in
xor
ret
inc
mov
sbb
aad
mov
sti
ss
xor
and
gs
inc
lahf
mov
xor
call
xchg
mov
neg
ret
pop
and
sbb
lock
xchg
jnp
cmps
in
jb
add
cmp
(bad)
jmp
sar
inc
sub
les
sbb
loopne
add
jo
loope
jbe
jle
movs
ds
not
mov
pop
loop
or
retf
xchg
mov
idiv
mov
dec
outs
cli
arpl
xchg
cwde
xchg
repz
xor
push
int3
sub
jmp
rol
mov
mov
xor
cwde
xchg
mul
call
cmp
cmps
inc
retf
inc
pop
jne
rcr
cld
xchg
cmp
mov
cwde
xchg
inc
or
clc
icebp
jecxz
ins
inc
xlat
faddp
mov
loopne
aas
inc
add
xchg
jno
xchg
push
xchg
call
pop
loop
xlat
push
call
jle
xchg
jmp
mov
idiv
fimul
jp
sub
jbe
cld
dec
lods
cdq
mov
(bad)
jge
fwait
repnz
jmp
xor
in
mov
in
mov
mov
xor
xchg
sub
mov
call
inc
mov
in
shr
mov
jmp
and
xchg
clc
or
or
pop
fistp
jnp
ret
cmps
outs
sbb
and
cs
dec
xchg
shl
cmp
xchg
add
mov
retf
fs
fisub
cwde
in
arpl
push
leave
pop
dec
arpl
iret
call
cmc
mov
inc
mov
cmps
fs
sti
test
and
popa
xchg
ror
aad
sub
and
stc
pop
shl
cmps
cmps
jne
push
imul
mov
fucom
retf
movs
cmp
cmp
cmps
out
xchg
xchg
dec
mov
mov
inc
adc
inc
jbe
cmp
aam
les
jp
icebp
loope
add
mov
sub
je
je
pop
ds
push
jb
and
mov
dec
xchg
jbe
cmc
pop
mov
jl
das
push
rcl
ds
sbb
sahf
jl
(bad)
out
inc
es
jns
call
pop
movs
repz
nop
stc
call
push
mov
mov
mov
inc
xchg
inc
dec
xchg
jne
ins
(bad)
mov
xchg
arpl
std
ret
jbe
mov
xchg
cli
gs
pop
add
ror
jge
out
std
lods
inc
icebp
cmp
add
and
cdq
je
mov
pop
(bad)
mov
(bad)
out
jne
retf
mov
cli
cli
fisttp
mov
imul
cmp
jns
inc
cwde
and
ins
adc
dec
jbe
outs
scas
sub
xor
or
pop
lahf
and
loop
clc
mov
rcl
mov
and
dec
inc
and
sahf
cmp
inc
adc
and
dec
mov
test
xchg
sub
pop
cmp
sub
into
cdq
aad
mov
mov
mov
data16
outs
jo
cs
movs
int
mov
out
cli
sub
and
scas
mov
cmp
mov
inc
call
inc
mov
jno
sbb
pop
clc
shr
push
stos
repz
ret
stos
mov
sbb
test
hlt
call
in
movs
pushf
loopne
mov
lock
mov
push
(bad)
nop
push
fst
dec
in
(bad)
pushf
xchg
dec
dec
int3
shl
or
and
sub
push
mov
xchg
add
jb
fsub
mov
mov
cmp
cs
push
es
jb
push
jmp
jmp
push
dec
fwait
js
(bad)
jne
shl
cld
dec
and
sahf
test
inc
fisub
aaa
mov
or
shl
push
xchg
xchg
sbb
vpcmpestrm
imul
in
test
push
int
sbb
fistp
lea
gs
ss
push
fisttp
dec
and
pop
shr
push
cld
dec
and
fcomp
adc
add
das
arpl
jl
into
bound
scas
add
cs
cmp
lds
xor
xchg
xor
mov
sbb
push
cmp
or
cmps
call
sbb
fistp
add
out
ret
das
xchg
sti
test
outs
lods
fidiv
jns
adc
xchg
dec
xchg
aam
cs
popa
mov
sub
enter
mov
and
cwde
into
sbb
xchg
push
es
sub
arpl
or
aam
test
xchg
inc
test
shl
test
inc
mov
lock
aam
mov
add
jbe
dec
sub
mov
in
iret
ins
push
xor
jl
pop
pop
mov
xchg
inc
cmc
jae
and
(bad)
jge
jg
mov
dec
arpl
lods
mov
mov
mov
push
sub
adc
jmp
pop
cmp
mov
mov
dec
test
mov
pop
repnz
test
jo
sbb
fisub
cmc
dec
cmps
mov
xchg
leave
sbb
lahf
sbb
outs
sub
inc
or
test
cmc
and
inc
adc
mov
or
push
push
xor
inc
arpl
retf
mov
mov
pop
sbb
out
mov
dec
adc
fdiv
xchg
lods
inc
and
sbb
sbb
imul
fcmovnb
lods
or
inc
mov
xchg
hlt
mov
out
movs
mov
cwde
xor
adc
add
in
inc
es
das
and
dec
xor
aas
icebp
nop
mov
jae
cmp
push
fild
cwde
retf
into
mov
test
push
das
mov
jo
jle
jmp
std
fmul
sub
cmp
jmp
daa
dec
pushf
mov
mov
aas
jl
sbb
push
mov
mov
push
pop
push
pop
mov
das
jbe
jo
mov
loop
in
or
dec
fldcw
in
adc
call
fidiv
cmp
xor
or
scas
mov
dec
shl
mov
test
movs
cmc
mov
cli
fisttp
jle
ss
cmp
fbstp
scas
in
hlt
in
pop
xor
aas
xchg
fild
int
xchg
add
push
repz
cmp
dec
push
leave
pusha
ss
cwde
int
xor
mov
inc
je
nop
fisttp
les
mov
pop
mov
and
jo
inc
mov
cmp
lahf
pop
or
inc
ins
(bad)
sti
lea
mov
adc
xchg
mov
ret
sbb
xchg
hlt
dec
fdiv
je
(bad)
test
or
mov
fmul
mov
ret
xor
ins
pusha
cli
inc
jno
outs
mov
mov
push
pop
jmp
hlt
call
jl
mul
iret
jp
pop
pushf
mov
fnstenv
xchg
aas
xchg
gs
jno
xor
jmp
es
loopne
jmp
iret
sub
and
das
aam
mov
mov
cmp
jbe
mul
jle
mov
add
cli
out
add
sub
cli
inc
pop
je
mov
fsubr
pop
sbb
retf
(bad)
pop
push
loopne
(bad)
rcl
ror
adc
aam
pop
jp
test
inc
das
imul
iret
ds
mov
test
and
pop
dec
cmc
pop
mov
int
push
dec
inc
inc
pushf
push
das
movs
lods
push
inc
mov
(bad)
sub
jge
test
loop
cmp
ret
ja
or
fld
mov
sbb
in
xlat
adc
scas
retf
fstp
cmp
inc
inc
movs
addr16
js
or
mov
jecxz
adc
sbb
adc
mov
mov
mov
push
sub
int
push
scas
call
daa
cmp
cwde
shr
and
add
repz
sar
jg
sub
push
add
or
nop
add
inc
outs
or
mov
out
mov
into
cwde
inc
cdq
jl
pop
pop
into
xor
jbe
xor
lea
sbb
xchg
adc
cmc
pop
jmp
std
adc
data16
xchg
mov
imul
cmps
cmp
push
sub
dec
das
xchg
mov
lock
sub
(bad)
push
cli
movs
test
pop
retf
addr16
cmp
std
xchg
cld
inc
pop
(bad)
pushf
or
sbb
dec
adc
loop
cmp
pop
ins
sti
push
adc
call
(bad)
lock
lea
mov
cmp
(bad)
ins
sahf
jbe
(bad)
das
or
cli
inc
mov
in
mov
xlat
push
sub
hlt
and
cli
jg
std
out
lds
lods
dec
or
enter
fnstcw
adc
loopne
or
jae
mov
cmp
xlat
add
push
mov
push
(bad)
frstor
leave
loopne
int
mov
dec
add
sbb
scas
dec
popf
icebp
inc
call
mov
ds
inc
nop
mov
cmp
mov
mov
sub
aas
jecxz
mov
popa
inc
scas
xchg
(bad)
pop
movs
in
movs
mul
fwait
test
cmp
mov
and
popa
ret
lea
push
inc
std
ins
inc
pop
sub
or
dec
fidivr
bound
aaa
push
mov
fwait
jge
mov
pop
sub
inc
xchg
ja
repnz
jne
je
popf
fmul
mov
push
add
ret
(bad)
dec
mov
lea
mov
repnz
and
pop
jno
pop
lods
add
inc
dec
lods
call
cmc
mov
sub
add
lea
adc
add
clc
not
repz
sbb
sub
ins
aad
sub
sar
xchg
outs
adc
or
mov
sbb
or
cmp
adc
(bad)
ss
jmp
mov
je
push
add
test
push
es
mov
xor
jle
aaa
adc
fldenv
call
mov
sub
dec
sub
dec
leave
outs
test
lea
inc
sbb
xor
jb
mov
mov
test
and
es
lea
mov
hlt
sbb
jecxz
inc
test
cmp
mov
xor
sub
xchg
xchg
je
add
xor
cwde
lea
or
and
xchg
mov
mov
pop
ds
jbe
dec
cld
fnsave
dec
dec
push
push
addr16
xor
gs
mov
cmp
push
cmp
jnp
(bad)
cmps
in
mov
in
dec
test
fnsave
fdivr
imul
(bad)
add
or
mov
dec
sbb
jnp
jmp
leave
lock
cwde
jl
(bad)
mul
push
fsub
or
fs
cmp
fdivr
cmp
mov
iret
mov
dec
outs
jle
ins
movs
iret
and
jg
dec
aas
inc
jge
pop
jno
aam
in
enter
pop
mov
push
and
inc
and
ja
int3
test
(bad)
xchg
lea
mov
mov
mov
dec
sub
or
(bad)
shl
mov
loop
jmp
fild
in
jg
jbe
or
and
dec
rol
push
mov
cld
in
sub
pandn
inc
scas
call
jb
std
das
movs
popw
sbb
jb
jle
ja
cmp
jns
or
movs
mov
dec
sbb
and
lea
dec
mov
(bad)
jo
das
stos
add
push
cmp
push
xchg
aas
sub
cmp
add
ins
(bad)
adc
and
dec
cmp
rol
inc
scas
mov
mov
add
fstp
les
mov
test
cli
xor
retf
nop
popf
jno
gs
jne
mov
add
ja
jge
xchg
dec
fcomp
push
mov
xor
inc
fs
retf
adc
adc
scas
mov
data16
retf
and
jo
jg
mov
into
sbb
js
in
jae
es
in
sub
call
lock
stos
jbe
adc
dec
jb
addr16
xor
fmul
mov
xor
pop
adc
and
stos
push
cmc
mov
cmc
(bad)
ret
leave
fwait
xchg
push
aas
inc
frstpm(287
sti
call
jl
sub
ja
xchg
popf
mov
xchg
jp
cmp
xchg
add
sbb
cmp
push
inc
sbb
dec
pop
ffreep
mov
ret
xchg
les
mov
xor
or
icebp
nop
jmp
mov
in
and
cmps
xchg
loop
call
sub
loopne
push
cmps
outs
cmp
jmp
xchg
(bad)
lds
xor
loop
outs
pop
inc
sub
sar
sub
cmc
inc
cwde
pop
mov
sbb
(bad)
push
pop
adc
popf
mov
add
xchg
test
xchg
jg
jl
(bad)
sub
(bad)
pop
jbe
mov
test
mov
pop
out
fstp
mov
mov
pop
cmp
pushf
xchg
fs
and
(bad)
das
call
pop
(bad)
mov
push
shl
xchg
sbb
and
in
or
pop
retf
dec
xlat
cmp
popf
mov
out
loope
dec
data16
hlt
push
test
inc
test
mov
bound
xchg
push
sub
cmp
mov
add
xchg
sub
test
clc
mov
push
pusha
fidiv
inc
add
and
dec
cwde
jo
ds
fadd
dec
cmp
mov
imul
jl
ins
stc
and
xchg
out
inc
pop
push
mov
pop
call
fs
mov
test
sbb
jmp
xchg
mov
in
xor
repz
sub
jge
(bad)
sub
jno
enter
sub
mov
and
lahf
mov
adc
jo
cmc
mov
popf
dec
(bad)
out
in
xchg
lods
popf
jge
push
ss
push
fstp
adc
dec
(bad)
inc
jg
sti
mov
mov
mov
into
mov
add
mov
test
cwde
xor
mov
lods
leave
jne
rcr
xchg
mov
loop
test
xor
daa
dec
adc
aas
adc
cmp
jg
fwait
sub
add
idiv
sahf
dec
and
and
xchg
sahf
inc
cmp
pop
ret
push
sbb
push
(bad)
pop
das
in
inc
jecxz
mov
int
sbb
sub
int3
xchg
test
mov
cwde
pop
bound
jo
jl
in
sub
movs
fs
push
(bad)
xor
lock
jo
aaa
pop
fidivr
repnz
das
jmp
mov
cmp
dec
mov
xchg
movs
rcr
adc
jp
push
pop
imul
mov
sbb
jae
retf
cdq
add
mov
lds
jle
and
out
loop
sbb
xchg
out
jmp
jle
cdq
fsubr
push
pop
add
jno
jns
outs
loop
and
ror
sbb
and
pop
cmp
adc
jg
push
or
add
pop
popf
push
add
jle
rol
or
push
(bad)
lods
daa
pop
rol
psubsb
jae
dec
jl
es
pusha
std
add
inc
inc
add
xchg
add
jp
in
cmp
ins
ja
or
pop
outs
inc
test
xor
leave
xor
inc
ds
xchg
xchg
cli
dec
sbb
cmp
icebp
ins
sub
mov
js
(bad)
jns
dec
in
out
xchg
xlat
xchg
add
jno
out
gs
test
out
gs
pusha
pop
mov
iret
out
shl
adc
fld
sub
fstp
ins
cmp
cwde
and
push
push
push
mov
cmc
add
(bad)
shr
add
mov
icebp
test
pusha
jge
jl
inc
jb
sub
es
fwait
dec
mov
(bad)
sub
repz
clc
or
dec
fdiv
loope
sub
cmps
adc
add
pushf
(bad)
mov
mov
mov
cmps
repz
arpl
std
out
retf
stc
ret
fs
mov
dec
in
fisub
inc
popf
clc
pop
pop
and
repnz
mov
sub
(bad)
push
cmp
fisubr
dec
lods
out
add
hlt
gs
int
inc
(bad)
lods
jmp
add
(bad)
pop
pop
xor
mov
test
je
js
and
lods
mov
in
cmp
in
in
and
dec
stc
aas
dec
cmps
jmp
sub
mov
mov
push
aam
int3
sbb
jne
ss
sbb
or
gs
push
add
fdiv
xor
aaa
dec
setne
into
pop
inc
cmp
and
cmps
dec
popf
retf
fisub
and
and
out
scas
shr
mov
pop
cld
pop
fistp
sbb
fistp
or
and
push
adc
and
pop
movs
in
ret
fiadd
add
je
push
and
xor
sub
mov
jb
jmp
jmp
sti
cs
mov
cld
jp
mov
mov
jo
aas
shl
cli
not
(bad)
mov
xor
ins
ret
neg
(bad)
jg
in
out
pop
call
(bad)
stc
ret
scas
loop
dec
cmp
pushf
inc
push
out
sahf
xchg
fs
cli
jb
call
icebp
clc
(bad)
sar
shr
cmps
add
inc
pop
iret
sub
pop
push
sbb
daa
imul
xor
sbb
in
call
shr
add
or
inc
ja
xor
xor
outs
mov
fisttp
shl
mov
jge
sbb
daa
mov
fadd
adc
repz
cmp
fist
movs
scas
shl
(bad)
lock
pop
cld
out
clc
sti
pop
nop
push
out
jg
jg
pop
cs
je
xchg
sbb
(bad)
sub
adc
or
mov
fsubr
jb
pop
inc
out
jne
inc
add
push
(bad)
jl
sub
cmp
sub
aam
outs
adc
lahf
(bad)
(bad)
fcmovnbe
mov
ins
adc
push
es
or
std
xor
gs
cmp
neg
test
sub
xchg
inc
into
loope
pop
js
and
fisttp
js
adc
(bad)
jmp
js
sbb
scas
icebp
psubusb
mov
lds
ins
(bad)
scas
aam
idiv
sbb
xlat
xchg
xor
mov
mov
push
cmp
push
call
retf
jmp
mov
rcr
mov
jae
test
jne
clc
jl
(bad)
jle
(bad)
out
and
mov
std
(bad)
pushw
jb
mov
loopne
jge
push
mov
inc
mov
mov
retf
jmp
out
jne
add
ss
jp
in
and
in
fistp
jmp
clc
int
int3
int
outs
lds
mulps
inc
mov
das
sahf
in
sub
lods
xchg
mov
in
fsubr
stc
sub
cmp
sti
out
mov
rcr
fst
scas
pop
cdq
enter
ja
out
stos
ja
jmp
mov
push
dec
push
mov
out
cmp
cmp
push
cmp
fnsave
cmc
pop
mov
fiadd
call
cmp
scas
xor
ficomp
in
fwait
lock
sti
ret
dec
jmp
inc
leave
shr
dec
mov
popa
loope
call
mov
and
lods
stos
ds
push
lods
xor
dec
add
cmps
mov
into
or
sahf
inc
adc
xchg
sub
mov
inc
test
dec
(bad)
sti
pop
addr16
pushf
mov
xor
lea
cmp
cmp
sbb
jg
pop
pop
loopne
scas
fadd
pushf
stos
mov
adc
pop
push
scas
paddq
aad
loop
jl
call
in
pop
mov
sbb
pop
push
cwde
inc
add
test
cdq
je
inc
cwde
push
mov
pop
(bad)
fld
or
dec
cmp
push
pop
addr16
push
push
cmp
test
test
pop
mov
mov
scas
and
daa
jns
or
leave
popa
sti
std
rol
or
(bad)
sbb
stos
dec
inc
xor
hlt
mov
fnstenv
outs
xlat
addr16
jmp
xchg
and
mov
(bad)
cmp
gs
xchg
cmp
enter
mov
xor
retf
mov
pop
das
xor
xlat
pop
loope
push
dec
call
test
in
or
in
addr16
ds
xchg
mov
dec
nop
pop
sbb
std
push
sahf
xchg
adc
cmp
pushf
jo
cld
pop
sub
inc
into
test
inc
fldcw
mov
fwait
pop
jb
jne
xor
(bad)
jl
gs
mov
xor
mov
xchg
dec
dec
clc
mov
mov
ds
not
outs
std
out
(bad)
ret
call
mov
and
mov
or
mov
sbb
rcr
ja
pop
test
push
or
mul
aaa
inc
inc
jp
mov
pushf
fcmovu
fiadd
cwde
psubb
mov
cmps
jo
xchg
jecxz
push
jo
and
or
dec
movs
pop
pop
jno
adc
les
adc
push
(bad)
jecxz
inc
shr
test
and
pop
mov
shr
xor
pop
mov
xor
add
mov
dec
loopne
mov
adc
hlt
vfnmaddpd
inc
into
sti
jp
pop
add
mov
mov
jp
cmc
add
pop
jg
or
frstor
inc
or
mov
jmp
mov
je
fbstp
les
jmp
je
xor
(bad)
inc
inc
xor
dec
clc
sbb
sbb
mov
in
xchg
scas
shl
loope
fwait
push
push
push
mov
cmp
ret
out
sbb
jmp
pop
sar
pop
adc
lock
fdivrp
xchg
jne
mov
retf
push
ss
daa
hlt
sahf
rcr
unpcklps
jmp
retf
add
xchg
sub
mov
jno
lahf
mov
lds
jno
cmps
lods
jg
mov
sbb
clc
sahf
dec
leave
pop
sbb
dec
aam
dec
mov
inc
dec
push
enter
push
sub
sub
inc
cmp
push
push
fiadd
rol
mov
retf
jmp
cmp
(bad)
push
sahf
ja
enter
mov
mov
sbb
and
jg
stos
push
add
sahf
push
xor
inc
dec
adc
jnp
push
fsub
xor
les
lahf
and
adc
sbb
in
in
pop
sti
sbb
add
adc
enter
adc
fcom
add
xchg
pusha
inc
cmc
inc
pop
push
or
add
push
cmp
mov
or
jle
and
pop
lock
and
jbe
xor
neg
or
cli
add
jge
stos
jmp
js
dec
mov
xchg
add
gs
or
pop
out
mov
in
fdiv
dec
dec
pop
cmp
jp
icebp
xchg
inc
push
mov
mov
mov
aaa
inc
pop
fnsave
and
cmp
gs
es
mov
or
movs
rcr
add
cmp
or
and
ds
ds
mov
imul
movs
clc
outs
mov
inc
xchg
repz
xchg
xor
xlat
scas
test
ins
jge
jg
xor
jge
adc
div
mov
cdq
scas
or
cmp
jb
jle
dec
xchg
cmp
test
push
pop
sti
hlt
mov
in
mov
pop
leave
scas
or
push
cmp
sub
dec
out
jmp
jnp
pop
mov
push
mov
jbe
enter
stos
lods
stos
rol
pop
pop
sub
mov
ud0
adc
inc
stos
mov
adc
push
(bad)
popf
sbb
int
jne
push
in
enter
sub
cmp
dec
jle
cmp
out
jne
fisttp
jmp
es
jl
call
pop
mov
sbb
aaa
cmp
and
pusha
lds
pop
and
dec
jg
xor
mov
in
xchg
rcr
add
in
adc
add
repz
je
sbb
(bad)
fs
loope
and
shr
and
out
call
sbb
mov
adc
jnp
mov
or
jo
fisub
ret
jb
cmc
and
mov
jmp
jbe
into
es
fadd
addr16
push
mov
push
inc
sbb
or
push
inc
mov
mov
mov
les
div
loope
pop
cmp
mov
neg
jnp
xchg
cs
cmps
mov
(bad)
xor
aam
jns
mov
adc
pusha
xor
pushf
cmp
je
(bad)
jp
sbb
sbb
jae
loope
clc
jae
(bad)
push
shl
clc
mov
popf
lods
xlat
gs
fucomp
ins
jb
dec
jns
jns
xchg
push
cli
mov
(bad)
mov
(bad)
ds
pusha
rol
jbe
inc
cmp
adc
jmp
adc
dec
shr
shr
cmc
mov
hlt
xor
jge
fcmovnu
or
repnz
inc
jo
rcr
cmc
cmp
out
add
icebp
inc
bound
(bad)
stos
mov
add
ja
cdq
fild
rol
xchg
in
xchg
mov
mov
in
xchg
ins
adc
stos
repz
fld
sbb
daa
out
add
push
sbb
or
rol
mov
lahf
shl
jl
shl
js
rol
xor
cmc
adc
sbb
pop
ins
call
loopne
pop
aad
mov
add
retf
sbb
std
in
jb
xchg
add
lock
dec
out
mov
jl
or
sbb
out
lock
cmp
cmc
fldl2e
call
inc
jecxz
dec
and
xchg
pop
pop
nop
shl
sti
sbb
pop
mov
fstp
mov
mov
push
test
pop
ins
ror
sti
clc
call
inc
dec
cli
cwde
xlat
and
retf
popa
mov
xor
repz
dec
in
popf
pop
push
scas
dec
mov
std
mov
mov
shl
shr
cmc
or
add
cmp
fld
ds
xchg
cli
mov
inc
pop
inc
sbb
dec
jne
sub
push
rcl
cld
or
pop
(bad)
jmp
loopne
and
pusha
adc
inc
stos
jecxz
jns
pop
lahf
out
cwde
mov
inc
mov
sbb
loopne
mov
mov
inc
dec
add
mov
ret
movs
jecxz
aam
arpl
cdq
push
or
jp
adc
push
mov
and
cli
xlat
mov
in
inc
setg
xor
ja
mov
adc
fnstcw
retf
loop
or
mov
inc
add
ret
add
jmp
push
in
mov
retf
ins
xchg
fimul
in
xor
into
cmp
repnz
mov
int3
retf
fist
and
mov
outs
adc
push
lds
mov
arpl
stc
cmp
popf
jbe
dec
aam
sub
jmp
jge
xchg
fwait
xor
loop
xor
and
add
je
jmp
lods
sub
cmps
adc
popf
ds
loop
push
or
mov
jmp
dec
sbb
add
cwde
fs
and
lahf
ss
jle
sub
xchg
fistp
sar
dec
jle
stos
or
or
sub
add
or
imul
mov
sbb
mov
mov
jo
mov
dec
mov
mov
adc
inc
cmp
js
inc
and
xor
mov
add
scas
daa
xlat
inc
xor
in
shl
inc
dec
iret
jl
cmp
fist
xchg
in
dec
pop
cli
sub
inc
or
mov
int
dec
mov
dec
xchg
or
ret
inc
and
or
rcl
pop
mov
push
movs
sub
ja
clc
icebp
jecxz
mov
into
into
js
cmps
jecxz
mov
fmulp
inc
jp
dec
xor
cmp
or
sbb
dec
push
xchg
add
pop
loop
in
test
pop
sbb
and
sti
dec
cmps
cmp
inc
cmp
pop
rcr
cld
adc
(bad)
push
lods
(bad)
cmp
sahf
(bad)
sub
push
inc
mov
nop
xchg
out
xor
outs
cmps
mov
or
pusha
nop
pop
dec
mov
das
pop
xor
ins
aaa
push
loope
mov
cmp
and
pop
adc
jg
cmc
or
fldenv
sbb
rcr
aam
les
cmp
push
dec
nop
and
or
test
inc
add
shl
sub
inc
pop
popa
out
repnz
mov
pop
stos
mov
pop
ins
nop
mov
cmp
aam
xlat
dec
ret
mov
cmp
cmp
repnz
jecxz
lea
jo
fdivr
mov
(bad)
cli
cmp
fistp
nop
(bad)
jg
adc
mov
lods
fimul
and
scas
sbb
mov
mov
and
xor
jmp
mov
lahf
pop
sbb
mov
jbe
dec
std
mov
or
loopne
add
or
icebp
leave
scas
cmp
cld
cmp
cmp
std
out
jns
cmps
repz
cmp
scas
in
hlt
sbb
cs
jge
iret
sbb
in
out
ss
fstp
(bad)
jecxz
int3
rcl
or
sbb
sbb
mov
ja
fsub
(bad)
inc
arpl
fcomp
into
hlt
push
fist
mov
mov
cmps
sub
or
mov
ret
push
lods
mov
mov
add
ja
iret
cmp
mov
push
mov
ret
outs
inc
call
or
cmc
jmp
aam
mov
inc
xor
and
jmp
in
enter
or
pop
push
jecxz
inc
jmp
stc
cmp
jl
ins
in
mov
imul
push
clc
mov
inc
jo
pop
test
jmp
in
mov
mov
into
mov
add
in
sbb
retf
sar
jle
shl
loopne
or
lods
adc
aad
xlat
call
xor
rcr
call
lods
mov
cdq
neg
dec
aaa
popf
iret
pop
addr16
repz
std
pop
nop
jecxz
sub
and
leave
jnp
mov
idiv
gs
nop
and
mov
enter
jnp
adc
pop
push
push
mov
xor
xchg
movs
or
loop
ss
clc
loopne
les
ds
ss
call
jo
(bad)
jo
jecxz
ss
daa
outs
jp
test
jmp
jmp
das
and
adc
aam
loop
aaa
jbe
mov
jne
cmc
ret
ja
pop
pop
ja
cmp
jmp
xor
sbb
or
cwde
adc
ins
shr
sti
fucomip
xchg
mov
cmp
popf
mov
or
sbb
cmp
add
mov
fwait
and
lock
ja
cmp
sub
sub
icebp
lods
dec
and
in
test
jmp
pop
pop
es
in
adc
mov
aas
fidiv
scas
mov
mov
aaa
jl
xor
clc
std
adc
push
or
push
mov
sub
adc
jg
es
aad
dec
sub
repz
ret
jmp
cmp
cwde
mov
call
dec
add
jo
and
fstp
cwde
(bad)
cli
cmp
or
adc
retf
mov
fcom
inc
xor
xchg
add
mov
ins
mov
ret
xchg
xor
std
scas
and
leave
mov
inc
out
aas
jae
int3
shl
aad
test
add
ja
push
mov
fist
cmovs
adc
data16
jmp
shr
mov
fcomp
aam
pop
loope
xchg
sar
call
or
int
test
adc
xor
mov
mov
es
and
pop
in
dec
cmp
call
test
mov
mov
mov
adc
xchg
pop
xchg
mov
jbe
cdq
cmp
imul
shl
ss
jno
(bad)
jo
das
xor
adc
mov
mov
jmp
scas
push
adc
loope
in
cmps
dec
sub
xchg
pop
mov
int
out
pop
xchg
ror
mov
sahf
sub
loop
std
shl
xchg
xor
add
cmp
or
mov
fdivr
sbb
nop
and
inc
inc
mov
inc
inc
sbb
sbb
daa
stc
pop
jmp
adc
sub
push
push
add
jp
dec
sbb
and
dec
pop
and
outs
and
pop
jo
jp
(bad)
fwait
xor
out
jo
pop
sahf
(bad)
stc
rcl
add
xchg
add
fnstsw
dec
cmp
dec
test
and
mov
push
stos
in
dec
rcl
cmp
xchg
out
mov
sub
movs
ds
mov
sbb
push
mov
outs
sbb
cmp
jmp
hlt
dec
jg
lods
or
cmp
lods
mov
jnp
cmps
pop
xchg
cmc
mov
in
xor
fsub
lock
dec
fistp
adc
pop
shr
lock
je
add
aam
fistp
sbb
aaa
add
ficomp
jecxz
movs
inc
jb
imul
(bad)
and
icebp
sbb
or
mov
mov
xchg
jmp
lea
and
scas
ja
xchg
adc
xor
dec
jns
ins
rdmsr
add
and
leave
xor
lock
ror
xor
test
imul
push
mov
sub
je
cwde
cmp
add
out
mov
retf
movlps
xchg
xlat
pop
test
in
cmp
and
pop
mov
inc
mov
cmp
inc
scas
std
and
movs
test
jmp
fiadd
cmc
mov
sbb
inc
add
outs
hlt
pop
jbe
(bad)
mov
mov
push
iret
ins
out
neg
dec
dec
jge
jle
cmps
std
mov
into
pop
inc
scas
daa
dec
retf
or
mov
mov
lahf
ins
mov
nop
xchg
test
fimul
sar
pusha
mov
ret
in
xor
mov
mov
cmp
pop
leave
sub
dec
sbb
fild
add
(bad)
in
or
pop
mov
int
(bad)
sbb
into
jl
sub
icebp
sbb
xchg
lods
out
xor
cwde
mov
jle
(bad)
cli
test
rol
icebp
mov
fnstenv
fidivr
pop
cmp
adc
mov
cmps
shr
lods
add
push
outs
xor
das
or
sbb
nop
or
movs
pop
xor
and
push
push
push
ins
or
mov
or
addr16
mov
add
cdq
pusha
adc
push
pop
outs
or
in
jmp
push
mov
mul
mov
dec
xchg
les
outs
in
mov
call
and
sbb
mov
les
ins
jecxz
xchg
retf
cmps
jne
jne
cmp
retf
mov
ja
add
aaa
jl
push
out
mov
ftst
std
das
aam
cwde
arpl
jp
(bad)
inc
sahf
mov
icebp
inc
nop
ja
cmp
or
(bad)
ins
pop
and
pop
xchg
fsub
mov
je
xchg
xchg
in
dec
std
and
mov
sar
push
movs
movs
movs
xor
jge
inc
nop
outs
call
mov
jp
and
into
jbe
adc
xchg
jbe
jge
out
shl
ror
rol
out
sahf
pushf
out
cmp
das
jmp
inc
xchg
pop
and
xor
retf
mov
(bad)
pop
cdq
loopne
inc
pop
and
mov
pop
mov
xor
xor
das
imul
out
bound
dec
add
pop
and
test
pop
cmp
cmp
mov
jmp
and
out
lock
push
dec
push
loopne
jg
std
pushf
repz
add
inc
std
and
mov
xor
mov
lods
mov
jae
pushf
push
das
fsubr
inc
mov
sar
or
fs
dec
mov
les
xor
gs
xor
fucomi
push
mov
popf
mov
xchg
test
(bad)
imul
imul
retf
nop
and
(bad)
repz
pop
rcl
jmp
inc
retf
mov
cmps
sbb
push
scas
jecxz
in
call
inc
mov
(bad)
xchg
outs
fwait
outs
aas
pop
sar
scas
call
rcr
aam
fbstp
(bad)
mul
ret
jo
popf
(bad)
mov
xchg
out
repz
inc
push
ins
xlat
dec
ss
pop
cld
daa
jns
ret
sub
inc
xchg
pop
sbb
(bad)
mov
sbb
dec
sbb
add
pop
gs
ss
add
sub
stc
jmp
jns
add
mov
cmp
in
movs
jle
sbb
sbb
jge
rcl
sahf
and
add
dec
ss
and
jns
cmp
mov
mov
cmp
fidiv
and
mov
jp
loop
adc
inc
fucom
pop
rol
jb
pop
sbb
inc
loopne
out
inc
jnp
call
pop
call
outs
fucompp
jmp
inc
cld
adc
fisub
fiadd
adc
adc
jb
jg
in
loop
and
jl
xchg
retf
jo
mov
dec
mov
jbe
ret
push
aas
je
mov
pop
mov
fimul
cmp
gs
jbe
xchg
test
mov
loope
fwait
cmps
adc
add
dec
mov
xor
cld
pop
dec
jg
add
mov
and
jmp
test
daa
cdq
out
aam
in
mov
(bad)
adc
leave
xchg
dec
xor
xchg
add
adc
aam
sub
mov
or
mov
adc
in
aad
pop
xchg
dec
ret
dec
in
add
retf
xor
and
dec
inc
xor
sub
outs
into
pushf
cmp
dec
fdivp
and
cmp
sbb
xchg
jmp
int3
mov
sahf
pop
jbe
xchg
test
outs
ins
and
aas
gs
adc
or
nop
mov
jne
imul
scas
cmp
mov
pop
inc
inc
(bad)
sub
(bad)
xor
push
pop
loop
imul
pop
xchg
pop
jbe
and
or
cmp
pop
lock
xchg
mov
into
idiv
mov
sti
bound
mov
ja
and
ret
out
bound
add
mov
ror
add
mov
or
fucomip
inc
xchg
mov
scas
pop
(bad)
mov
std
popf
push
in
(bad)
(bad)
fidivr
imul
(bad)
fist
push
xchg
imul
push
out
pop
cmp
out
dec
jbe
je
jge
xchg
enter
dec
mov
push
ins
add
call
in
push
ret
xchg
mov
xor
cmp
enter
je
jbe
shl
pop
push
push
mov
push
out
sar
add
jae
clc
iret
mov
test
mov
sub
sbb
cmp
inc
add
xor
xor
pop
push
cmp
popa
pop
je
sub
or
repz
xor
mov
inc
pusha
sar
push
jns
stc
cs
aad
imul
inc
xor
mov
jp
inc
jmp
nop
mov
clc
cmps
sub
ins
add
jl
scas
call
cli
jge
ror
int3
mov
or
add
fsub
push
ds
push
mov
inc
pop
pop
mov
mov
js
and
mov
push
inc
addr16
and
adc
push
xchg
pop
(bad)
mov
and
sbb
mov
ins
outs
mov
xor
scas
aad
bound
dec
mov
adc
repz
mov
mov
mov
adc
mov
cli
inc
push
call
inc
adc
inc
inc
fist
inc
mov
xchg
sbb
cmp
call
add
jno
das
mov
rep
push
in
pop
jecxz
rol
out
icebp
jp
retf
jecxz
and
(bad)
sub
lahf
dec
xchg
and
xchg
cmp
nop
jp
je
mov
mov
scas
sahf
arpl
test
mov
adc
xchg
in
fisubr
adc
add
sbb
xchg
mov
dec
std
lock
repz
popa
xor
adc
loope
xor
jge
mul
cmc
add
cmc
lds
into
ror
cli
adc
push
adc
mov
outs
ret
ds
pop
cmp
or
mov
gs
icebp
mov
xlat
cmp
loopne
mov
dec
or
jg
and
inc
mov
test
and
call
cmp
xchg
stos
mov
pop
pop
sub
jmp
retf
mov
or
adc
call
mov
in
test
dec
iret
cmp
loop
mov
sbb
xchg
je
jmp
add
add
test
popa
xchg
not
adc
cmp
cmp
retf
push
popa
inc
sahf
test
xchg
mov
jmp
inc
ins
fwait
arpl
sbb
lods
mov
cmp
mov
cmc
pusha
cmp
mov
fist
cmp
and
sub
pop
xchg
repz
(bad)
and
jecxz
sbb
add
cld
push
mov
jmp
fimul
jbe
ds
std
lods
les
mov
add
push
add
scas
(bad)
loopne
mov
mov
js
out
mov
push
enter
scas
(bad)
jge
jbe
jp
scas
call
sub
cmp
push
movs
rcr
imul
xchg
cmp
sbb
leave
cmp
pusha
push
push
adc
dec
dec
lahf
inc
rcr
pop
or
and
and
popf
mov
ds
std
retf
jmp
in
and
fadd
js
and
div
es
inc
cmp
dec
mov
imul
jge
out
out
mov
ins
jmp
add
pop
leave
mov
dec
cmp
mov
jp
rep
adc
inc
cdq
jb
jne
pop
scas
inc
arpl
rcr
pushf
sub
ja
jnp
ins
mov
pop
mov
mov
fist
cmc
retf
inc
fisub
jbe
xor
jmp
pushf
addr16
aas
call
in
test
aaa
xor
outs
data16
push
popa
cdq
inc
cmps
adc
xor
sub
shl
lods
xchg
mov
jecxz
(bad)
call
adc
cli
fistp
dec
idiv
xor
fdiv
sbb
lods
cmp
lock
loopne
lds
imul
imul
sbb
mov
dec
cmc
jns
mov
cmc
push
ror
dec
push
lds
mov
mov
inc
pop
stc
push
retf
stos
pop
add
mov
jmp
pop
push
push
ss
mov
mov
jae
push
test
and
out
test
xor
popf
je
(bad)
push
xchg
ins
int
jg
add
cs
mov
fcom
pop
repnz
cmp
lods
jo
mov
cmp
mov
cmps
fcmovb
daa
out
imul
iret
adc
pop
test
dec
lods
dec
xchg
int
mov
xlat
xchg
imul
aas
icebp
enter
mov
add
das
jmp
es
jnp
xor
aam
es
mov
cld
sahf
movs
scas
xchg
les
xchg
les
mov
jp
inc
lahf
add
aaa
lods
push
in
daa
add
dec
loop
fbstp
pop
mov
pop
lea
out
jl
adc
xor
jb
jmp
aad
mov
xor
(bad)
fdivr
mov
psubb
and
inc
and
in
mov
sti
cwde
push
cmps
je
adc
fwait
das
cmp
pop
xchg
jmp
leave
jmp
ret
cmc
pop
rcr
(bad)
jnp
cmc
mov
loopne
imul
mov
ds
je
sbb
sahf
in
lock
hlt
pop
repnz
data16
adc
pop
ss
test
mov
sar
cmp
adc
sub
ror
loopne
(bad)
repnz
jg
retf
inc
or
push
push
into
and
hlt
pop
js
inc
jle
es
mov
adc
add
shr
sar
loope
xor
hlt
sbb
push
jo
test
fucomip
cmp
mov
shld
aam
(bad)
fcomp
pop
(bad)
aad
not
fisttp
das
jb
jo
push
in
add
and
adc
cmps
mov
(bad)
div
fisttp
ror
std
out
sub
pop
call
retf
mov
movs
push
mov
std
fistp
fnstenv
mov
mov
push
movs
jge
or
xchg
mov
repz
xor
mov
shr
jmp
xlat
pop
mov
mov
or
inc
inc
movs
adc
sbb
(bad)
(bad)
fild
cs
mov
add
and
push
les
aas
cmp
in
rcl
out
mov
inc
inc
cmp
add
jge
fld
pop
in
jne
mov
push
cmp
mov
jae
retf
call
mov
push
ss
test
in
(bad)
sub
push
jge
iret
loop
ds
lock
in
dec
test
test
nop
mul
jecxz
sbb
add
inc
ss
or
in
xor
fld
jb
aad
push
jg
cwde
cs
jbe
cmp
sahf
jnp
cmp
int3
mov
cdq
cli
cdq
mov
pushf
int3
fcmovnu
mov
sbb
xchg
fnstsw
lods
adc
jge
or
jb
sub
mov
repnz
lods
dec
stc
lods
add
icebp
loopne
rol
jmp
shr
imul
jo
mov
push
scas
xchg
fidiv
repz
in
int3
sbb
adc
adc
xchg
sub
adc
test
and
mov
in
pushf
dec
test
out
jns
(bad)
pop
jmp
mov
pop
pop
gs
dec
cwde
fdiv
pop
push
aas
jl
mov
icebp
inc
js
sbb
ficomp
aam
in
mov
xchg
call
mov
cmp
test
add
retf
mov
inc
fcmovnu
or
mov
mov
ret
ds
ret
mov
std
pop
jle
and
pop
cmp
jnp
jmp
das
mov
cmp
(bad)
imul
call
cld
dec
adc
int3
mov
or
jo
dec
cmp
mov
jae
mov
dec
retf
lds
mov
adc
loop
lock
push
jecxz
inc
push
push
pop
jns
xchg
fld
jbe
mov
pop
(bad)
jmp
add
iret
(bad)
iret
pop
mov
outs
jmp
sub
jg
popa
jno
sbb
mov
jg
adc
mov
rcl
mov
iret
imul
mov
mov
js
jge
xchg
or
cmp
sbb
mov
pop
retf
test
mul
jae
lock
mov
jmp
lea
cmp
pop
ins
cmps
mov
rcr
or
test
xlat
xchg
push
div
enter
push
jle
mov
loop
mov
jg
cmp
aaa
sbb
mov
dec
std
mov
xlat
jbe
mov
jo
lods
fcom
retf
cmp
les
sbb
cmp
and
xchg
push
mov
add
jns
das
sbb
and
pusha
push
daa
imul
dec
je
sub
popf
mov
mov
pop
(bad)
mov
int
mov
je
jo
jmp
mov
pushf
push
push
pop
jne
mov
fcomip
jnp
in
sub
ret
xlat
jmp
and
add
push
jbe
sti
imul
repnz
fidivr
leave
mov
in
rcr
mov
cmp
loop
arpl
adc
adc
cli
pop
add
add
sahf
add
sub
sub
loope
xor
imul
xchg
(bad)
and
mov
dec
add
or
sbb
fdiv
push
shr
es
push
push
out
hlt
pop
inc
call
and
fisttp
mov
stos
ja
add
pushf
test
ins
or
hlt
ins
pop
cmp
lods
mov
mov
nop
xor
fild
and
jns
or
scas
lock
retf
mov
cmps
xor
and
pop
inc
rcr
fcomp
cmc
in
(bad)
pop
call
repz
and
pop
or
xchg
add
mov
out
dec
rcr
in
jp
popa
and
xchg
fidiv
fwait
scas
xlat
jmp
(bad)
sti
pop
shl
mov
retf
nop
loopne
fstp
stos
imul
icebp
lock
mov
add
cmp
ds
cmps
adc
(bad)
nop
arpl
outs
or
push
pushf
ds
xchg
dec
add
stos
inc
dec
call
xor
sbb
dec
mov
pop
dec
fstp
adc
inc
out
ret
icebp
int3
ins
shr
push
xor
or
leave
xor
pop
cmp
inc
fld
cmp
and
lock
aas
repnz
jne
xor
rcr
fs
lahf
mov
daa
xchg
jle
mov
dec
sbb
sbb
out
daa
xchg
dec
or
mov
mov
in
add
cmp
or
cmp
retf
jo
push
cmovb
(bad)
clc
push
in
jmp
inc
xchg
adc
push
test
(bad)
pop
mov
pusha
call
pop
or
lock
cmc
push
cmc
pop
div
dec
lods
outs
xor
lds
cwde
(bad)
adc
xchg
fwait
jmp
cmp
jp
xor
imul
jmp
ret
cmp
xlat
lods
(bad)
jge
cmps
cmc
mov
fldz
jl
pop
mov
cmps
mov
inc
ins
mov
scas
sub
fadd
or
mov
mov
jl
add
add
in
jae
cdq
jb
or
mov
adc
jb
xor
push
das
pop
sbb
mov
(bad)
jo
mov
lahf
ret
push
mov
cmp
lock
inc
rcl
add
stc
dec
shl
and
mov
jl
and
movs
sbb
dec
popf
mov
and
ret
cmc
or
xchg
mov
in
push
add
add
mov
add
jle
mov
mov
mov
or
push
jae
int3
fld
in
mov
inc
jnp
mov
add
popf
mov
mov
out
mov
cwde
arpl
icebp
outs
int3
rcl
sbb
dec
daa
push
cmp
or
loope
jl
fisub
jmp
fisubr
adc
sbb
shl
sti
addr16
dec
jecxz
icebp
call
pop
scas
shl
outs
daa
fsub
fdivr
hlt
jg
adc
pop
hlt
sahf
mov
pop
test
leave
xor
mov
xchg
nop
outs
call
imul
in
bnd
and
xchg
ins
adc
and
repnz
gs
out
sbb
jge
inc
stos
push
xchg
call
pop
sahf
pop
hlt
pusha
cmp
jns
shl
lea
sti
outs
sub
xchg
lahf
repz
mov
add
dec
(bad)
shl
bound
or
add
sub
mov
mul
inc
aad
pop
sar
jns
xchg
inc
cmp
mov
sti
(bad)
cmp
test
mov
mov
jb
xor
repz
xchg
test
cwde
xor
inc
pop
mov
jno
test
xor
and
imul
dec
mov
inc
pop
movs
scas
das
pop
jge
(bad)
test
ins
std
outs
sub
sar
adc
(bad)
and
test
mov
cmp
pop
cwde
fwait
rcr
(bad)
add
cmp
xor
aas
fild
(bad)
cmp
stos
aaa
mov
jl
sub
jnp
cli
arpl
inc
pusha
and
ds
cli
shl
jb
pop
ror
sbb
mov
rol
in
sahf
dec
ret
xchg
les
mov
cmp
cmps
fstp
and
dec
std
pop
stos
adc
sbb
test
pop
call
cmp
mov
ja
xor
rcr
xlat
ds
daa
jb
mov
dec
call
stc
repnz
outs
and
das
ret
shr
mov
xchg
les
int
cli
push
xchg
ins
dec
dec
or
xor
add
aam
mov
cmp
call
sub
dec
mov
mov
cmp
dec
rol
push
aad
sub
jne
(bad)
int
push
cmp
mov
adc
loopne
xchg
ins
sub
aam
jl
test
add
mov
cli
data16
scas
or
addr16
cwde
lds
in
sbb
or
into
jl
ror
add
outs
fsubp
jae
and
cmp
xor
sahf
mov
jnp
cmc
ret
ja
scas
cmp
add
fisttp
and
call
jge
das
iret
into
mov
dec
cld
jmp
sbb
and
xchg
push
jmp
xor
sbb
les
cli
out
xor
fdiv
pop
push
xchg
movs
fwait
(bad)
in
into
fwait
iret
leave
sbb
adc
cs
arpl
mov
and
push
mov
je
jg
xor
push
fsub
jp
bound
(bad)
fabs
mov
in
push
adc
add
aas
jl
pop
push
or
jmp
push
jmp
dec
icebp
cld
iret
icebp
add
xor
or
mov
or
lahf
or
xchg
hlt
cmc
add
and
cmps
stc
mov
sar
in
xor
ret
push
pop
bswap
shr
sub
leave
ss
sar
fwait
add
stc
in
shl
je
mov
dec
scas
outs
scas
into
div
out
dec
movs
mov
daa
inc
add
ss
sbb
and
sub
and
mov
bound
jne
jmp
jge
mov
mov
push
shl
movs
mov
cli
test
mov
lods
dec
call
shl
and
retf
sbb
xchg
in
in
in
jmp
adc
pushf
cmp
stos
mov
jb
jmp
fcmovbe
imul
push
outs
ss
test
xchg
dec
or
mov
xchg
xchg
ins
enter
jns
and
out
jae
adc
lods
rcr
call
mov
pop
inc
aas
jmp
call
cmps
in
gs
mov
les
inc
mov
sbb
mov
and
stos
adc
jbe
mov
sahf
dec
test
lds
lods
add
sbb
jae
dec
sti
dec
inc
or
or
stos
or
retf
cmp
jle
ins
sar
rol
enter
test
icebp
push
xchg
(bad)
cld
lahf
pop
pop
xlat
mov
popf
lahf
pop
cwde
daa
cmp
(bad)
imul
(bad)
repz
daa
jne
test
out
or
je
pop
sbb
hlt
xchg
imul
cdq
mov
sub
or
mov
int
nop
pushf
(bad)
mov
fdivr
sub
out
aam
test
pop
shl
sar
lods
adc
pop
adc
jnp
das
sub
mov
iret
aaa
add
(bad)
push
pop
adc
cs
xor
cmp
outs
cli
xor
jmp
mov
push
cmp
mov
push
sub
ins
inc
sbb
popf
sbb
mov
mov
ret
or
push
ins
fnstcw
inc
jle
jmp
pushf
adc
pop
mov
sub
push
push
iret
push
pop
mov
popf
mov
pop
in
mov
pop
hlt
cmp
jbe
jle
mov
jl
loop
out
cli
add
sub
inc
adc
mov
std
cmps
xchg
in
lods
(bad)
int
(bad)
les
xchg
fwait
neg
(bad)
xor
inc
int3
pop
call
dec
jmp
pop
cdq
push
outs
sub
out
push
add
imul
pop
test
aaa
adc
jns
retf
sub
outs
xlat
or
aaa
call
mov
jnp
jns
test
iret
sub
in
call
rcl
in
rol
dec
sti
push
sub
dec
das
or
adc
add
test
dec
sub
rol
inc
pop
mov
xchg
or
mov
aas
in
call
repnz
and
cmp
add
ins
call
retf
stos
sbb
and
add
cmp
jae
and
shr
jne
add
mov
push
pop
xor
neg
push
or
fcmovbe
sub
lds
jbe
inc
fiadd
outs
and
bound
repnz
bound
shr
mov
inc
mov
outs
fild
or
repz
xor
adc
dec
in
cmp
dec
cmp
xchg
pushf
je
cwde
push
mov
xor
cdq
imul
cdq
jmp
fistp
cmp
mov
cld
mov
out
je
or
lock
xor
loope
inc
dec
fist
pop
jo
cwde
rol
inc
fdivr
in
out
dec
(bad)
pop
mov
(bad)
(bad)
dec
icebp
jns
xchg
les
test
mov
mov
call
rcr
fidiv
test
cmp
imul
movs
scas
xchg
inc
cmp
dec
jg
adc
cld
fistp
jg
out
fdiv
jl
dec
add
movs
pop
mov
jbe
adc
popf
nop
jl
jnp
xchg
les
inc
call
xchg
mov
iret
xchg
or
jo
nop
clc
mov
cmp
aam
mov
push
stc
xchg
je
mov
mov
sti
loope
mov
neg
outs
dec
cs
xor
mov
out
(bad)
in
add
shr
pop
sbb
xor
jns
jecxz
loope
bound
inc
push
push
rcr
inc
stc
test
cmp
jmp
shr
lods
test
sar
push
dec
mov
xlat
adc
adc
push
jecxz
faddp
jp
cli
pop
pop
pop
cmp
jmp
add
dec
lds
lds
xor
adc
jl
push
and
popf
cmp
arpl
jne
pop
and
call
cmp
pop
ins
cmp
fnsave
ret
adc
(bad)
out
dec
sti
(bad)
(bad)
cwde
neg
xor
jg
mov
sar
cld
(bad)
(bad)
mov
addr16
fldenv
retf
lods
out
in
mov
and
arpl
fistp
inc
imul
cmp
adc
rep
js
jae
xchg
push
push
push
icebp
jne
pop
fiadd
inc
bound
mov
push
aas
xlat
fucomi
xor
fcomp
mul
and
inc
pop
and
push
aaa
mov
add
aam
and
sub
pop
mov
mov
fbstp
adc
dec
nop
arpl
or
jne
cmp
cld
aam
lock
and
add
cwde
cmp
clc
mov
push
cs
cmp
loopne
movd
and
push
dec
std
jb
adc
or
outs
push
pop
clc
es
out
cmp
ins
in
aam
test
and
or
gs
lods
and
adc
or
es
(bad)
and
in
lock
shr
sbb
in
pushf
bound
xchg
aaa
jl
inc
xor
mov
fcomi
pop
in
dec
shl
(bad)
and
and
dec
jbe
pop
mov
mov
imul
or
and
out
dec
lea
sub
stos
js
das
iret
sbb
mov
stos
mov
pop
and
js
sahf
dec
mov
mov
rol
rcl
mov
das
inc
or
icebp
lock
je
es
adc
mov
out
push
aaa
adc
or
push
scas
or
neg
adc
and
enter
mov
add
inc
(bad)
mov
addr16
xchg
jp
aas
xor
push
out
enter
pop
cmp
fwait
retf
cmp
xchg
imul
lahf
jp
xchg
cld
in
aam
push
retf
shl
ret
pop
jl
iret
shr
xchg
jge
cmp
movs
jle
dec
repz
clc
mov
or
call
push
xlat
and
outs
fsubr
imul
jbe
xor
xchg
jno
daa
icebp
cmp
cmps
dec
pop
add
mov
shr
and
cmp
ss
out
jno
jo
loope
pop
mov
xchg
test
cmp
dec
lock
movs
jp
shl
sti
sub
jmp
(bad)
sub
test
xchg
test
push
dec
mov
sbb
(bad)
sahf
movs
jecxz
in
mov
dec
dec
int
loope
rcr
cmps
aas
das
out
fild
jle
xor
xor
pop
cmps
test
sbb
cmps
jo
outs
(bad)
cmp
cmp
fisttp
mov
stos
out
cmp
scas
in
dec
rol
cmp
cmp
jnp
jp
ret
inc
pop
dec
xor
pop
adc
xchg
(bad)
or
bound
jmp
sbb
cmps
mov
cmp
fidiv
lock
sti
icebp
and
cmp
sub
fisttp
mov
out
sahf
cli
sub
enter
cmp
jge
xchg
int
enter
and
xchg
ret
dec
or
loope
fild
xor
lods
movd
add
mov
in
and
or
outs
fnstsw
xchg
mov
aas
or
in
cmps
jne
pusha
fst
out
and
xor
add
pop
mov
jmp
outs
imul
rcr
in
adc
cmps
jne
ja
jmp
sbb
aaa
loopne
pop
push
mov
pop
pop
ins
int3
in
mov
add
ficom
sahf
adc
mov
cmp
lock
gs
mov
adc
dec
lock
push
psubsw
sub
std
in
jns
xor
sbb
popa
inc
popa
rol
mov
das
cmc
sub
xchg
test
push
lahf
repz
mov
popa
mov
pop
les
into
pop
mov
loop
aam
sbb
out
or
xchg
loope
ss
xchg
inc
xchg
dec
push
mov
mov
jge
pop
fist
(bad)
loop
sbb
pop
(bad)
nop
xlat
loopne
adc
fist
sbb
cmp
xchg
rcr
rol
cmp
jne
pop
mov
ss
inc
mov
jmp
jmp
push
xor
lds
nop
jne
cmp
sub
mov
and
jae
das
frstor
dec
mov
inc
cmp
test
imul
xor
pushf
sbb
rol
jne
imul
ja
dec
jg
scas
sub
pop
pop
and
sbb
xchg
out
mov
imul
xchg
mov
out
cmp
test
mov
popa
ret
cmp
sbb
and
(bad)
addr16
cmp
xchg
mov
adc
mov
xlat
cmp
fild
mov
xchg
and
scas
pop
mov
cli
cmp
cmp
cld
pop
(bad)
(bad)
retf
scas
dec
push
inc
jae
or
push
mov
js
(bad)
mov
inc
sti
inc
outs
adc
jl
gs
xor
es
movs
sahf
push
(bad)
and
add
mov
or
pop
mov
dec
aam
call
sar
pop
test
sub
push
enter
retf
retf
xlat
mov
hlt
ret
xor
mov
lock
fstp
(bad)
repz
ins
mov
push
mov
sub
add
mov
sub
outs
hlt
aaa
mov
(bad)
vpsubsw
pop
dec
xor
cmps
and
pop
mov
sub
or
xchg
test
inc
in
sub
lods
jne
fadd
ins
and
fild
cs
dec
mov
loope
ret
icebp
fcomp
pop
in
mov
lock
cmp
mov
test
dec
sahf
sahf
(bad)
imul
mov
rcl
mov
imul
push
pop
sbb
bnd
sahf
or
sub
out
jg
enter
or
repz
stc
jl
cmp
lds
call
mov
sbb
sub
stc
fmul
ins
jl
call
out
cld
clc
xchg
js
mov
fist
mov
out
sub
cmp
out
xchg
and
call
cmp
lods
aaa
pop
pop
cld
xlat
push
ds
loop
mov
xchg
xchg
mov
outs
fwait
xchg
call
jae
int3
ret
loope
loopne
mov
repz
sbb
jecxz
sbb
sub
leave
or
repz
mov
lock
xchg
fwait
sti
xchg
pushf
inc
and
inc
daa
(bad)
mov
rcr
dec
mov
lock
aam
xchg
inc
test
cdq
retf
lahf
sbb
jo
ds
iret
mul
bsr
push
jle
and
jg
mov
fwait
jecxz
fcomip
sub
(bad)
cmp
dec
(bad)
fwait
cwde
sub
nop
xchg
adc
xchg
mov
pop
scas
out
add
mov
mov
mov
shr
aas
jecxz
repnz
mul
xchg
mov
pop
pop
dec
std
mov
mov
fist
shl
les
mov
xor
mov
mov
outs
pop
sub
fwait
pop
xchg
add
pop
pop
push
push
adc
inc
xor
jno
ins
dec
daa
les
pop
mov
popa
cmps
mov
mov
inc
inc
sub
xchg
push
lahf
mov
cdq
cmp
mov
fstp
imul
push
and
cmp
aas
popa
and
or
pop
mov
arpl
jmp
jbe
test
stos
xchg
and
and
lahf
das
xlat
inc
loopne
repnz
js
scas
fsub
arpl
popf
cdq
inc
std
mov
mov
cmps
das
imul
xchg
iret
iret
or
mov
and
add
mov
inc
add
lock
pop
adc
mov
xor
pop
add
xchg
ror
fadd
ja
es
sbb
out
inc
cmp
jl
out
and
xlat
test
(bad)
pop
in
fnsave
sbb
loop
loopne
mov
sub
inc
sbb
cmp
fs
outs
xor
dec
pop
pop
fstp
push
(bad)
cmp
setg
in
ja
or
mov
es
inc
iret
fwait
cmp
add
sbb
dec
dec
repz
add
adc
cwde
pop
adc
shl
ss
mov
mov
imul
cmp
cmps
scas
inc
push
(bad)
fwait
jg
mov
inc
inc
inc
icebp
clc
icebp
jecxz
cmp
sub
lss
mov
fwait
rcl
add
xor
xchg
js
mov
idiv
and
and
inc
adc
test
adc
mov
mov
and
adc
push
push
mov
inc
sahf
imul
leave
cmp
ret
and
mov
and
les
xchg
fcmovbe
inc
sub
push
and
mov
rdtsc
out
jmp
loop
push
pop
jmp
hlt
iret
cmp
jo
shl
xchg
pop
xchg
loope
es
es
mov
bswap
mov
mov
push
pop
jmp
push
push
call
xor
(bad)
jo
mov
(bad)
sub
mov
pop
cmps
inc
not
jbe
int
push
cwde
into
jg
popf
and
add
loop
stc
ins
mov
(bad)
std
push
inc
jle
jns
xchg
test
mov
hlt
mov
and
shl
pop
or
add
test
sbb
lahf
cmps
clc
adc
data16
cwde
loope
adc
push
xchg
jg
cmp
daa
ins
popf
icebp
imul
call
inc
mov
xor
(bad)
jmp
lock
xchg
mov
dec
dec
dec
dec
mov
adc
jne
in
stos
or
lock
and
ficomp
pop
ror
add
into
fcom
mov
sub
and
mov
cld
repz
daa
mov
xlat
pop
jmp
jmp
jns
or
mov
jmp
lods
lods
lods
fcomp
outs
mov
js
pop
mov
mov
mov
mov
outs
pop
lahf
jecxz
mov
inc
leave
push
pusha
scas
dec
in
ins
push
lahf
mov
dec
pusha
adc
fs
shl
inc
(bad)
jl
push
add
mov
inc
jne
cli
call
(bad)
jae
jns
lock
cmp
sahf
mov
aas
push
xchg
pop
neg
jg
mov
mov
xchg
dec
pop
mov
add
sahf
dec
(bad)
lea
jmp
fcmovne
retf
retf
mov
pusha
inc
mov
fcom
mov
inc
mov
ja
cmc
jae
(bad)
hlt
add
mov
lahf
dec
mov
mov
add
movs
retf
xchg
scas
pop
add
ret
out
push
mov
add
retf
aaa
sti
mov
mov
les
lock
(bad)
jl
adc
scas
leave
aam
add
cdq
jne
repz
cmps
dec
popf
cli
int
xor
(bad)
jae
xchg
int
sub
pop
xchg
adc
pop
xor
std
dec
icebp
sahf
jbe
mov
adc
inc
mov
fimul
jmp
mov
repnz
adc
jne
pop
std
dec
adc
cli
(bad)
faddp
push
push
ins
dec
jo
icebp
or
cmp
cmps
jne
out
or
imul
push
test
xor
enter
popa
cmp
pop
push
ds
(bad)
out
cmp
pop
cmps
in
stos
mov
in
and
sub
cld
retf
je
movs
cmp
sub
cmps
aas
cmps
sbb
sbb
aas
ins
and
rol
popa
inc
cdq
cmps
cmps
es
inc
or
and
sahf
fadd
(bad)
sub
fcomp
(bad)
scas
ja
add
push
add
ja
mov
outs
jbe
cmps
push
or
shr
lea
(bad)
xor
mov
repnz
fadd
stos
jbe
test
cwde
enter
(bad)
in
push
mov
xchg
nop
dec
(bad)
sub
ficom
mov
das
xor
sbb
sar
out
dec
pop
ret
test
popf
jnp
pop
mov
ret
inc
retf
mov
mov
jmp
sub
(bad)
adc
mov
push
jge
mov
cmc
in
adc
push
pop
(bad)
fcomip
fiadd
scas
les
outs
mov
pop
xlat
call
jle
xor
xor
xlat
nop
or
xor
and
cmps
jmp
mov
rcl
ds
scas
frstor
jmp
daa
cli
out
mov
daa
mov
mov
inc
add
cmc
push
ret
pop
xchg
xchg
inc
mov
mov
cld
dec
shl
inc
xor
imul
mov
adc
scas
dec
data16
adc
stc
retf
dec
pop
dec
inc
ror
add
xchg
fsub
std
call
sti
pop
jmp
(bad)
pushf
aam
and
mov
inc
sbb
aas
pop
add
aad
ret
jbe
sbb
and
cmps
lods
pop
aam
pop
or
xor
push
cmp
lock
ds
mov
lods
call
xchg
mov
in
and
int
movs
fnsave
jmp
pop
inc
fwait
ret
paddusb
je
add
sahf
imul
dec
sbb
mov
or
sbb
es
jnp
mov
xchg
jbe
xchg
popf
jno
sub
aam
push
cld
das
mov
ror
pop
jae
adc
cmc
fild
shl
(bad)
repnz
pop
out
(bad)
and
sub
imul
imul
cmps
cmc
mov
dec
repz
jno
pop
cs
(bad)
mov
std
into
mov
out
mov
xlat
xor
mov
loope
xlat
mov
retf
ins
rol
jnp
cmps
jns
fcom
pop
out
jne
das
sub
data16
mov
or
mov
or
and
test
fdivp
mov
mov
or
pop
push
push
mov
ins
clc
xchg
inc
cmp
not
aad
mov
test
mov
pop
adc
mov
loopne
mov
lods
neg
arpl
pop
shl
rdmsr
fcmove
sbb
int
push
popf
(bad)
jo
test
je
jg
xchg
dec
loop
push
pop
mov
jge
repz
daa
jge
ret
aam
outs
ret
jg
pop
xchg
jb
fwait
mov
and
mov
lahf
or
or
push
jns
retf
lods
dec
daa
frstor
in
imul
inc
mov
dec
test
je
push
rol
mov
mov
pop
in
das
movs
mov
imul
pop
in
and
pop
cmp
mov
out
mov
mov
pushf
and
and
leave
test
stc
enter
xlat
push
das
daa
inc
jp
jbe
mov
mov
dec
(bad)
mov
pusha
xchg
popa
inc
fs
ret
ja
in
cdq
out
fprem1
sar
fistp
pop
fldenv
mov
mov
pop
(bad)
mov
out
call
pushf
in
xchg
cmp
imul
outs
inc
repz
push
and
std
(bad)
xor
inc
lea
inc
fiadd
push
in
mov
push
inc
lds
xlat
pop
jb
in
add
mov
cs
mov
adc
out
lea
mov
icebp
sub
xchg
mov
scas
retf
test
sbb
or
hlt
pop
xchg
mov
xlat
loope
mov
into
mov
fmul
fwait
test
pop
ficom
adc
das
fiadd
fimul
mov
mov
outs
xchg
ficom
in
sbb
push
adc
xor
rcr
cmc
jmp
add
push
in
in
mov
jns
scas
mov
pop
pop
fadd
hlt
loope
adc
test
mov
cmp
test
fwait
call
and
adc
fist
jge
cdq
mov
retf
test
jg
dec
add
je
sti
cmp
(bad)
popf
mov
jns
xor
retf
mov
neg
ficom
xchg
and
xchg
ins
xchg
xchg
(bad)
sbb
adc
pop
rcr
mov
jecxz
fst
ss
aas
mov
xor
push
pop
push
dec
call
rcl
(bad)
dec
call
push
jge
retf
loop
jo
mov
cs
stos
dec
mov
dec
pop
movs
mov
das
pop
cs
mov
mov
mov
cmps
das
fwait
jg
sbb
stc
pop
push
es
sbb
adc
add
sar
outs
jmp
iret
into
jmp
fdivr
test
pushw
jns
into
(bad)
and
cmps
jle
cs
les
pop
pop
mov
add
mov
inc
pop
xchg
jae
inc
inc
(bad)
imul
xchg
repnz
jmp
inc
ror
mov
outs
fyl2xp1
mov
arpl
into
dec
sbb
pop
test
outs
icebp
imul
xchg
cmc
mov
push
jns
sub
pop
scas
out
lods
outs
movs
(bad)
(bad)
popf
mov
out
stc
call
cmps
stc
pop
add
enter
shl
ins
push
mov
in
aaa
dec
xor
cmp
(bad)
ins
cmp
jge
jmp
cmp
jnp
stc
aam
cmps
jecxz
push
shl
inc
xchg
jmp
jle
mov
in
bnd
dec
aad
shl
pusha
pop
lahf
fdivr
(bad)
leave
adc
stos
popf
mov
enter
jmp
lods
sub
sub
inc
inc
call
cmp
mov
aas
rcl
add
dec
cmp
adc
xor
add
sbb
add
jmp
aaa
stos
mov
sahf
pusha
fisttp
in
or
retf
in
inc
push
jns
sub
pop
xchg
lea
loope
xor
loopne
ds
ins
loopne
sub
adc
dec
mov
push
xchg
inc
jg
retf
shr
or
xchg
cli
mov
iret
cdq
xor
or
inc
fucomip
dec
sub
push
in
push
cmp
inc
imul
inc
mov
jne
leave
mov
inc
cmp
jge
mov
cli
test
jg
(bad)
into
pop
cmp
add
pop
lahf
cmp
push
aas
and
sub
and
inc
xchg
dec
jns
test
scas
mov
mov
cmp
rcr
js
add
das
dec
jo
std
out
xor
mov
add
jg
ficomp
shl
pop
das
ffree
mov
jge
adc
fimul
cmps
cmc
xchg
lods
dec
jmp
sbb
stc
pushf
in
pop
int
and
sub
out
add
cmp
mov
outs
jb
xchg
mov
add
jno
out
dec
fnstsw
xor
or
add
out
mov
lods
ret
daa
add
cmps
outs
hlt
pop
and
inc
sti
jns
and
and
enter
shld
retf
or
je
lock
jle
mov
cdq
jb
das
or
(bad)
lods
xor
daa
clc
lods
icebp
and
cdq
ins
adc
adc
cmp
(bad)
iret
dec
add
xor
xchg
and
sahf
pop
pop
mov
cli
xor
pop
adc
lock
dec
sbb
jnp
jmp
sbb
iret
movs
xchg
mov
iret
out
outs
sbb
pop
xchg
sbb
data16
push
aam
mov
out
inc
jl
xlat
mov
push
pop
cli
fs
(bad)
and
mov
add
bound
out
int3
adc
mov
js
jge
mov
jo
adc
ror
and
jmp
scas
(bad)
std
in
and
pop
xlat
push
scas
lods
arpl
outs
lock
cmps
scas
leave
cmp
lods
push
jmp
movs
mov
bound
scas
fnstenv
sub
test
mov
xchg
data16
cld
fcomp
imul
fcom
cwde
dec
movs
ret
ret
jp
pushf
je
scas
outs
push
mov
and
rcl
sar
mov
loop
mov
(bad)
mov
cld
aas
sahf
ja
enter
pop
mov
js
cmc
lds
add
ret
inc
xchg
xor
xchg
push
mov
sbb
addr16
jge
(bad)
jnp
ret
sub
ror
nop
daa
or
(bad)
jge
cmc
int3
out
fdivr
and
cmp
and
adc
aaa
push
test
push
test
call
icebp
gs
sub
xchg
cmp
scas
aas
mov
in
cmp
popf
push
in
shl
in
sub
add
ins
enter
push
inc
das
jmp
sti
inc
leave
pop
cmp
or
fistp
fst
cli
sbb
mov
and
jb
push
inc
loop
cmps
and
test
popf
fs
sbb
(bad)
and
jmp
xchg
xchg
repz
retf
xlat
jno
xchg
or
mov
push
cmp
stc
jnp
test
les
adc
xchg
xor
cmp
(bad)
stos
mov
call
sub
cmp
cdq
jo
out
push
add
dec
loope
aam
adc
les
mov
dec
pop
(bad)
cmps
jle
pop
inc
ror
pop
call
(bad)
test
cmp
xchg
mov
dec
in
sbb
repz
imul
inc
jns
cdq
mov
pop
and
adc
add
lds
dec
nop
sub
add
dec
mov
fild
stc
jnp
std
fsqrt
cmps
fist
cmp
mov
mov
adc
inc
mov
adc
cmp
jo
pop
mov
loop
aaa
add
push
mov
sbb
sbb
daa
jmp
sub
and
ja
push
mov
lea
movs
(bad)
jmp
jne
pop
lock
xlat
push
jno
icebp
int
leave
hlt
out
xlat
push
fldenv
jno
mov
movs
push
pop
push
jmp
or
(bad)
test
dec
push
and
mov
jno
enter
cmc
mov
ins
add
jns
out
mov
rol
ret
outs
div
rcl
addr16
mov
addr16
mov
push
std
add
jbe
iret
pop
and
jl
std
mov
dec
sbb
xchg
scas
dec
fcomi
loop
cdq
xor
add
xchg
xor
call
mov
fcmovu
xlat
push
out
leave
test
mov
out
nop
add
pusha
aas
das
loop
std
cmp
aam
aam
test
sub
shl
mov
ds
adc
mov
sbb
ins
in
ss
idiv
pop
mov
out
sub
jnp
fcmovb
cmps
or
push
addr16
adc
shr
xor
test
fist
ret
fscale
push
outs
push
jbe
fucom
out
sbb
mov
xor
shl
out
jecxz
pop
stos
sti
stc
in
fisttp
fnsave
mov
cmp
fst
aam
push
adc
rcr
inc
inc
sbb
inc
inc
add
jl
sar
jle
sbb
push
or
cs
ret
cli
sub
and
add
fwait
pop
jno
int
aam
shl
push
rol
or
aaa
push
jno
(bad)
or
sub
mov
xchg
xchg
pop
and
jnp
jmp
dec
cmp
mov
bnd
sbb
inc
xor
or
cmps
dec
lahf
out
cmp
bound
jge
cmp
mov
aaa
sbb
mov
repz
pop
repnz
scas
std
test
rcpps
inc
cmp
pop
les
inc
sbb
loop
cli
daa
sub
scas
jnp
sbb
outs
sbb
sahf
xor
pop
pop
cmp
push
cmps
fdivr
cmp
push
out
outs
out
jne
movs
daa
ins
pop
xchg
movs
jo
clc
icebp
ds
cwde
es
add
stos
data16
jno
scas
pop
add
shl
stc
inc
fstp
pop
stos
sti
loope
dec
push
mov
outs
pop
mov
(bad)
(bad)
jp
cmps
cmp
outs
(bad)
xlat
push
jmp
outs
push
mov
pop
push
cmp
jmp
mov
stc
mov
cmp
cdq
cmp
dec
lea
jne
in
ret
pop
jbe
add
dec
shr
std
in
add
ficomp
stos
push
mov
cmp
int
dec
cmp
cmp
loopne
les
bound
imul
jecxz
inc
push
dec
adc
fimul
loop
scas
imul
data16
mov
sar
dec
movs
iret
jo
stc
dec
loopne
sub
mov
push
push
call
out
mov
stc
mov
cmps
inc
leave
mov
adc
imul
jl
neg
pop
jp
cmc
ret
ja
jbe
cmp
loopne
and
popa
xchg
jnp
inc
in
test
in
fild
rcr
ficomp
cs
bound
scas
xor
mov
mov
pop
add
aas
fwait
and
sbb
jge
inc
das
(bad)
push
ins
dec
mov
dec
jne
xlat
and
dec
pop
rol
in
data16
in
mov
add
inc
cmp
dec
outs
(bad)
rol
fwait
xor
movs
inc
leave
pop
inc
push
stos
stos
stos
pop
dec
popf
cmp
cmp
aam
cs
push
or
fldcw
ror
jmp
add
and
ret
out
add
xlat
sbb
inc
sub
inc
xchg
jne
mov
das
cmps
fwait
gs
jl
or
lock
dec
lahf
inc
jge
fidivr
retf
fs
fmul
cmps
les
pop
outs
inc
stc
jge
xor
jle
outs
and
and
hlt
scas
and
jne
adc
fsubr
(bad)
retf
cmps
push
dec
jl
out
jbe
scas
xor
dec
pop
hlt
cli
es
mov
jbe
mov
sbb
cmp
hlt
cmp
push
fiadd
aaa
dec
dec
xlat
cmp
xchg
cmc
mov
mov
ds
imul
and
inc
and
add
or
jne
cmp
test
(bad)
xchg
nop
jbe
lods
push
cdq
or
cli
fistp
push
ins
dec
mov
dec
jb
jnp
and
clc
cwde
cmp
stc
mov
ret
mov
add
dec
in
pop
inc
retf
movs
sahf
mov
inc
(bad)
push
mov
arpl
or
data16
out
push
pushf
or
xor
push
popa
mov
and
addr16
cld
push
cmc
mov
loopne
push
cs
dec
sti
jp
cld
xor
sbb
aaa
mov
sbb
leave
mov
mov
mov
jp
mov
(bad)
sti
out
mov
inc
fstp
and
test
pop
and
cmps
adc
addr16
shr
lods
xchg
je
mov
(bad)
ins
arpl
mov
loop
push
not
mov
mov
push
and
xor
mov
sbb
cmp
sahf
mov
les
sbb
jmp
cdq
mov
mov
and
jle
outs
test
es
pop
stos
mov
std
outs
pop
and
sbb
in
xchg
mov
cdq
xchg
push
jae
fild
mov
inc
movs
push
lods
mov
hlt
aaa
aam
adc
adc
mov
inc
sbb
outs
mov
jb
aaa
push
sbb
cmp
scas
lock
jb
loopne
push
add
and
push
nop
(bad)
pusha
sub
ins
shl
sub
and
xchg
mov
mov
add
retf
popf
adc
lods
sbb
(bad)
cmp
and
inc
outs
js
push
lahf
loopne
das
jmp
inc
mov
and
jp
mov
lahf
aam
nop
stos
int
sbb
out
pop
ds
test
mov
xchg
adc
mov
stc
xchg
sbb
ss
arpl
fadd
sti
and
daa
jae
xchg
add
(bad)
and
mov
dec
leave
sub
push
cmp
cmp
mov
outs
xchg
xchg
retw
pop
stos
fist
scas
neg
jge
loopne
out
mov
dec
push
shr
push
pop
jmp
pop
sub
movs
dec
fcmovnb
cmps
jp
adc
mov
add
dec
in
add
aam
cmp
dec
popa
cmp
leave
ret
jle
test
ret
jmp
sbb
jg
shl
ret
les
push
aaa
mov
jo
xlat
repnz
jecxz
and
push
mov
addr16
push
imul
mov
daa
sub
jae
test
xor
xor
mov
(bad)
mov
adc
mov
mov
mov
push
xor
mov
or
fmul
push
push
jl
iret
jmp
cld
jne
pop
in
jbe
mov
mov
push
out
out
pop
lahf
mov
lahf
retf
xor
mov
pop
(bad)
ins
cwde
out
outs
cmp
xor
data16
jbe
je
adc
sub
cld
loope
cmc
shr
jmp
inc
dec
repz
shl
outs
sti
adc
out
jle
ds
xlat
jg
sub
mov
hlt
(bad)
std
out
push
mov
dec
jge
das
cdq
sub
mov
fdivr
xor
mov
mov
cli
sbb
dec
sbb
fidiv
sub
in
or
xchg
ss
xor
aaa
sub
and
pop
gs
push
and
xchg
pop
inc
push
fimul
jnp
out
jmp
fst
mov
add
dec
cmp
aam
mov
cmp
add
sub
leave
popa
add
stc
test
mov
mov
mov
arpl
lods
inc
cmp
cmp
lea
daa
cmc
pop
jbe
sahf
jbe
pop
dec
sar
outs
xchg
push
or
das
das
mov
jecxz
repnz
pop
dec
icebp
in
mov
mul
sbb
jbe
jns
pop
mov
and
ja
cmp
test
pop
scas
ss
or
cmp
sub
fst
sub
test
mov
test
fwait
add
fisubr
and
fdivr
(bad)
or
repz
pop
sar
imul
sbb
xor
or
mov
cs
call
out
cmp
cmps
loopne
aam
jmp
push
mov
jo
(bad)
inc
mov
jmp
jne
inc
fs
pop
and
dec
cmp
test
or
(bad)
ds
cmps
jle
es
jo
push
pop
adc
xchg
das
ss
mov
xlat
test
pshufw
ss
push
ds
mov
inc
lahf
inc
and
jmp
mov
pop
loopne
repnz
retf
pusha
inc
sub
ror
fcomip
jne
ins
cmp
and
pop
xchg
mov
jl
inc
inc
mov
les
inc
jg
in
js
retf
jmp
cmp
(bad)
loop
push
out
xchg
sti
popw
enter
dec
mul
add
mov
or
mov
jp
or
adc
mov
mov
popf
sub
mov
and
pop
das
dec
adc
jl
push
and
sbb
aad
cmc
mov
ja
jmp
out
cli
pop
xchg
xor
lea
sub
sub
addr16
cmc
inc
add
pop
mov
mov
into
jge
mov
jno
outs
jge
pop
jo
sbb
test
sub
and
pop
mov
jmp
jle
mov
clc
xchg
js
psubsw
inc
(bad)
sahf
stos
mov
push
sub
xchg
lds
adc
push
std
add
xor
call
jl
leave
jno
add
xchg
mov
repz
ins
int3
leave
cmp
popf
les
dec
push
int
jne
adc
lea
aam
int
or
shr
mov
and
daa
aaa
mov
jecxz
cmp
(bad)
std
(bad)
and
mov
mov
mov
mov
push
push
mov
mov
leave
cmp
outs
or
cmps
inc
iret
retf
in
shr
adc
xlat
inc
push
inc
fs
jge
movs
mov
nop
ficom
call
gs
push
xchg
ins
dec
inc
jno
aam
cmp
sbb
adc
cdq
ds
mov
ret
addr16
jns
pop
outs
xor
adc
add
lods
cmps
fisttp
jl
les
inc
lock
or
fmul
idiv
inc
push
div
(bad)
mov
add
das
add
jne
cs
cmp
cmc
loopne
fiadd
or
into
dec
or
fld
add
adc
sbb
ds
cld
add
or
or
or
jbe
test
(bad)
or
push
hlt
sti
push
aam
je
add
and
mov
jno
bound
enter
cmps
cmps
cmps
mov
xlat
inc
dec
(bad)
pop
mov
mov
adc
inc
scas
adc
and
std
mov
cmp
movs
jle
out
push
adc
pusha
pop
jbe
cli
mov
call
(bad)
xor
ja
stos
imul
push
fnstcw
xchg
cmps
inc
not
ins
outs
pop
das
fdiv
xchg
stos
jno
jecxz
mov
xchg
fs
add
cld
(bad)
or
pop
xchg
bound
pop
mov
adc
test
adc
xor
xor
cld
clc
icebp
sub
lods
gs
inc
fadd
cmp
xor
in
test
or
cmp
inc
sub
mov
jl
cmp
cmps
jle
pop
pop
mov
hlt
jmp
xor
imul
mov
jns
mov
push
and
pop
cli
mov
rcr
xor
js
mov
out
mov
and
sbb
jne
rol
cmp
test
fdivr
jge
dec
mov
in
xchg
mov
xlat
xchg
icebp
int3
rcr
push
push
(bad)
lock
mov
sub
lea
loope
(bad)
push
mov
fstp
xchg
mov
imul
pop
jo
imul
cli
stc
aam
in
out
xchg
fnstcw
jbe
rcl
adc
mov
test
cmc
shl
xchg
mov
clc
cs
pop
(bad)
sti
mov
enter
(bad)
ja
inc
ss
scas
call
fistp
push
xchg
aad
mov
sbb
cmp
test
lds
pop
jle
xchg
lahf
or
cmp
div
jb
pusha
repz
pop
fldenv
ds
aaa
push
sti
mov
xor
xchg
and
mov
int
inc
push
cmp
das
add
cmps
add
mov
mov
push
fist
ss
jns
fimul
test
data16
push
and
cmp
sbb
std
add
mov
pop
mov
(bad)
in
in
sbb
mov
sub
push
addr16
ret
ud0
sti
sub
test
cmp
cs
hlt
aaa
mov
pop
ss
call
xchg
xor
retf
cld
into
push
mov
mov
fistp
ret
mov
call
lds
mov
sbb
scas
pop
pop
push
push
int
shl
or
rcl
dec
inc
cmp
out
xor
jbe
and
stos
(bad)
repz
cmc
mov
sar
push
movs
aaa
ret
pop
mov
mov
add
js
(bad)
inc
cmp
sub
ss
pop
cmp
mov
test
jmp
inc
retf
(bad)
out
dec
jbe
inc
jo
xchg
xor
movs
push
inc
or
sub
sbb
cmp
mov
imul
push
imul
(bad)
in
sbb
cmps
cs
shr
jle
dec
and
adc
adc
xchg
repnz
add
cmp
gs
or
cmp
nop
movs
and
ds
pusha
pop
out
mov
mov
inc
xor
jmp
cs
push
mov
cmps
in
jmp
aam
in
dec
bound
xchg
loope
pop
cmp
mov
out
xchg
jmp
add
adc
or
push
pop
fadd
sbb
ror
pop
retf
or
xchg
xchg
xchg
(bad)
movs
jle
ins
pop
sub
cmp
mov
push
push
lahf
mov
scas
mov
dec
push
inc
jl
cmps
xchg
cld
add
call
xchg
cmp
jmp
mov
xchg
jp
int
mov
add
xor
inc
scas
pop
popa
xor
(bad)
mov
outs
xor
popa
xor
movs
cmps
dec
loop
mov
jecxz
std
xor
add
ins
jae
retf
mov
dec
lahf
ins
mov
and
push
ror
and
aas
in
mov
xchg
xor
sub
pusha
pop
in
adc
add
fldenv
lea
sbb
push
pop
aaa
out
mov
shl
jbe
aas
sub
mov
add
add
daa
sahf
js
loopne
mov
pop
cdq
mov
fdiv
and
sub
mov
js
push
sub
and
xor
imul
and
std
push
jne
ds
xchg
hlt
repz
pop
jmp
loopne
mov
cwde
mov
cmp
fsub
movs
dec
xchg
and
sbb
cmp
shr
xchg
sbb
push
inc
std
mov
adc
les
mov
add
in
(bad)
repz
pop
(bad)
fld
pop
mov
ret
pushf
lahf
ins
mov
inc
cmp
fistp
mov
(bad)
pop
movs
daa
loope
cli
out
jnp
out
mov
dec
push
daa
cmps
loope
sbb
jb
and
ds
or
cmps
iret
mov
mov
mov
clc
push
mov
adc
adc
outs
mov
fdiv
and
and
jo
add
mov
mov
out
imul
xor
retf
push
loop
jp
call
xchg
ins
stc
xchg
mov
xchg
sbb
pushf
or
xor
in
cmp
xchg
mov
mov
and
cmp
(bad)
mov
push
lock
jge
in
dec
movs
mov
mov
jecxz
xchg
pop
cmp
inc
ror
cmp
je
jp
mov
sub
mov
fild
cwde
ret
pop
jecxz
neg
clc
pop
lahf
jl
push
movs
fsub
push
enter
aas
sar
push
mov
clc
jp
adc
int
sub
jp
jne
fwait
add
jg
pop
pop
jmp
lea
jmp
lahf
in
loopne
pop
jbe
sbb
xor
mov
sub
mov
shl
inc
mov
mov
ins
sti
cld
aad
retf
mov
cdq
vpandn
or
adc
stos
call
cmp
cwde
lds
jnp
sar
mov
das
sub
xchg
int
jle
dec
xor
mov
mov
retf
pushf
out
xor
je
xor
je
inc
mov
movs
adc
and
mov
push
pusha
loop
xchg
adc
outs
mov
lock
xchg
or
or
ins
and
retf
mov
sub
jmp
cmp
cwde
xor
and
jno
pop
aaa
ins
and
jbe
ins
pop
in
dec
jl
ja
gs
inc
ret
mov
repnz
or
cmps
inc
xchg
pop
rol
push
loope
xchg
jg
mov
inc
pop
ds
adc
or
aaa
cwde
or
add
jo
xchg
mov
xchg
das
ret
add
jns
mov
(bad)
inc
cmps
out
inc
aaa
cli
lds
jge
ins
jl
jg
std
mov
mov
div
mov
xchg
push
jbe
aad
xchg
xchg
je
lock
mov
lods
lods
in
js
and
scas
cs
ss
popf
cmp
(bad)
sub
jp
repnz
test
xchg
fimul
add
out
shl
cmp
adc
stc
mov
loopne
out
popw
dec
pop
retf
push
xor
cmp
js
push
sbb
mov
(bad)
mov
das
sub
dec
dec
int3
stos
add
cmp
cmp
aaa
adc
iret
out
jae
fwait
jg
or
repnz
push
inc
enter
jle
mov
fwait
je
push
dec
mov
and
aaa
push
inc
mov
iret
jle
xor
or
scas
jp
jmp
call
inc
ficom
daa
mov
push
mov
dec
addr16
push
jo
aam
mov
push
int
cmps
out
and
sar
and
adc
movs
pusha
fld
jno
add
pop
icebp
fwait
and
shr
imul
or
xor
push
iret
in
xchg
std
mov
mov
xor
out
ret
jge
pop
push
icebp
dec
mov
shr
pushf
xlat
xchg
jg
aas
movs
pop
(bad)
lea
mov
xchg
mov
and
retf
gs
cdq
mov
pop
pop
jle
mov
xor
or
retf
mov
popa
inc
push
sub
dec
jp
push
clc
jg
jmp
inc
dec
inc
stc
pop
mov
xchg
ins
mov
mov
mov
and
sbb
jg
and
add
icebp
jb
pop
mov
fild
mov
outs
repnz
in
mov
sub
xchg
bswap
xchg
mov
sbb
add
outs
les
pop
repz
pop
jmp
jl
dec
hlt
xor
fild
jl
pop
fdivrp
pop
jmp
imul
loop
jge
add
and
in
mov
inc
imul
cwde
inc
popa
mov
nop
popa
jne
neg
xor
ret
pop
pop
and
adc
xchg
fwait
push
out
clc
cmp
dec
push
push
mov
aam
mov
xor
daa
mov
ds
xor
xchg
mov
rcl
pop
(bad)
jnp
mov
dec
repnz
dec
ja
fdivr
sbb
ds
call
push
or
repnz
and
sbb
adc
(bad)
popf
js
mov
adc
sbb
adc
push
pop
fsub
stos
sbb
cld
repnz
sub
es
cmps
movs
mov
pop
lds
jbe
leave
ret
hlt
pop
test
or
pop
aas
(bad)
jmp
and
mov
idiv
cwde
in
mov
mov
xchg
mov
sbb
in
(bad)
out
jle
jg
ja
adc
aam
inc
mov
jnp
pop
imul
xor
retf
mov
jmp
fdiv
xor
xchg
pop
or
cmps
pushf
jb
(bad)
dec
mov
mov
mov
lock
and
stos
sbb
ins
popf
jg
adc
fmul
inc
test
jno
jge
jg
pop
lahf
jge
jne
bound
cdq
mov
add
jns
cmp
pop
mov
pop
jnp
(bad)
push
mov
or
or
ins
xlat
fisub
sar
mov
(bad)
gs
dec
xchg
imul
ret
push
aas
jns
xor
in
sub
push
imul
dec
cld
sub
mov
ror
mov
mov
ins
jns
or
inc
fmul
inc
gs
in
cmps
mov
nop
popf
mov
les
lods
mov
and
sbb
scas
call
iret
jmp
or
or
push
ret
adc
adc
ds
add
adc
add
sti
fcom
mov
push
fisttp
hlt
push
cmp
sahf
not
or
push
push
push
cmps
dec
fisttp
cmp
inc
push
aaa
fdiv
aas
out
cmp
inc
push
fnstsw
lods
mul
sub
mov
test
add
iret
inc
sti
cwde
mov
enter
cs
adc
sub
cmp
aaa
lock
push
clc
std
js
or
(bad)
mov
mov
add
loopne
mov
clc
add
pop
inc
sbb
mov
mov
sbb
jns
pop
adc
or
dec
std
imul
pop
out
out
shl
in
dec
(bad)
sti
leave
xchg
xchg
xchg
ffreep
jmp
sub
sub
std
jbe
stos
iret
loopne
mov
sti
adc
fistp
sub
loope
and
scas
pushf
inc
cdq
(bad)
repnz
in
retf
cmp
(bad)
scas
xor
sti
icebp
jnp
aas
jg
adc
inc
xchg
xchg
cmps
lods
pop
ds
cmp
pop
pop
rcl
xchg
cli
xchg
nop
ret
popa
not
adc
mov
std
ss
mov
mul
and
icebp
aas
dec
loop
stos
push
xchg
imul
ss
je
xchg
sahf
mov
cld
cs
stos
mov
iret
(bad)
jb
inc
std
pusha
xchg
cmp
sbb
es
hlt
and
xchg
and
adc
jns
popa
sbb
retf
cli
sar
xchg
adc
jne
mov
dec
mov
add
hlt
push
test
cs
ins
sub
aam
push
and
rol
scas
mov
sub
jg
mov
push
push
dec
sbb
jg
pushf
jmp
jl
mov
mov
loop
cld
out
clc
in
inc
dec
div
xlat
jo
jbe
or
fisttp
cmps
inc
jl
movs
add
leave
in
fs
and
nop
dec
add
jle
mov
or
test
enter
loope
cmps
jle
dec
(bad)
adc
adc
mov
cmps
fmul
stos
sub
(bad)
adc
xlat
(bad)
icebp
fisttp
sub
fs
mov
movs
cmp
jne
or
or
iret
call
(bad)
int3
jo
mov
jecxz
jmp
xor
aad
repnz
cmp
fs
jbe
pop
shl
idiv
sbb
cli
adc
pop
inc
ds
or
retf
call
mov
(bad)
fist
xlat
pop
dec
pop
fld
adc
adc
out
es
addr16
stos
arpl
cmp
fimul
xor
cmp
fist
retf
jmp
dec
stc
lock
scas
sbb
mov
jl
jbe
xchg
pusha
in
sub
sub
sub
sbb
mov
fisub
fistp
jmp
ror
lock
cmp
pop
mov
xchg
test
mov
inc
jle
shl
push
mov
fnstsw
cmp
pop
dec
sbb
jmp
sbb
cmps
sbb
sbb
das
fisub
mov
ret
adc
xchg
and
mov
jle
adc
push
push
mov
pop
xchg
or
sbb
xor
xor
xor
loop
push
outs
jno
lahf
shl
pop
and
into
pop
fnsave
inc
pop
in
add
mov
xor
jno
fcom
int
out
out
adc
aas
fsub
ins
stos
push
in
mov
dec
fwait
jno
je
add
mov
jecxz
or
xchg
sar
and
push
sub
xchg
test
jae
retf
rol
cld
push
xchg
fisttp
pop
aas
cld
js
cli
jae
ins
into
outs
sahf
les
(bad)
std
jae
outs
mov
mov
jne
xor
mov
aas
arpl
sahf
dec
mov
and
inc
add
xor
dec
dec
jmp
fucomp
xchg
push
mov
xor
cmc
popa
idiv
ins
cld
icebp
(bad)
push
test
scas
int3
call
cmp
scas
mov
ins
lds
popf
mov
adc
push
mov
lods
mov
or
stc
lods
cmc
cmp
push
lahf
adc
mov
das
cmc
dec
and
or
jnp
xor
ja
dec
into
and
sbb
popa
(bad)
stc
stos
pop
std
jmp
cs
mov
and
pop
cmp
(bad)
loopne
mov
xchg
cmc
or
pop
xchg
jmp
mov
mov
xor
stc
jno
(bad)
ins
and
or
inc
and
mov
sbb
dec
(bad)
and
lds
outs
sub
(bad)
into
adc
fwait
sbb
into
pop
pop
inc
es
jb
xor
jae
push
pcmpgtb
cld
lock
fdiv
fstp
xchg
jmp
xchg
xchg
outs
(bad)
sti
mov
mov
pop
test
cmp
sbb
mov
or
jl
mov
mov
mov
add
shl
and
xlat
mov
xchg
dec
stos
sbb
mov
bound
xchg
adc
jb
mov
into
dec
jle
push
mov
mov
dec
lds
jp
psubw
cs
cmp
scas
sbb
sub
dec
test
popa
cmp
fs
and
mov
dec
inc
inc
inc
ss
add
imul
ret
dec
ror
jge
mov
or
push
adc
mov
in
loope
call
inc
adc
ss
xor
and
test
pop
(bad)
int
push
mov
cdq
sub
dec
stc
nop
mov
in
outs
out
clc
cld
icebp
movs
dec
xchg
fs
out
mov
push
(bad)
idiv
mov
scas
pop
pop
retf
cmc
popa
xchg
cmp
xor
imul
jns
mov
daa
outs
into
adc
pop
and
pop
cmp
jge
in
mov
lea
fist
push
sub
xchg
movs
mov
push
pop
cmp
push
xchg
jl
jmp
xchg
mov
inc
fcom
dec
cmps
mov
not
sbb
pushf
xor
aad
mov
fisttp
loop
inc
loop
fwait
cli
loope
ins
mov
push
or
pop
lahf
cmps
jecxz
cmp
fadd
rcr
adc
sbb
sub
cld
(bad)
jo
push
es
pop
push
jbe
and
mov
fsub
xor
out
(bad)
repnz
ins
arpl
mov
mov
or
imul
test
jg
cld
sti
mov
adc
jle
in
cwde
mov
(bad)
std
into
xchg
jp
or
mov
ja
fidivr
std
jl
add
gs
(bad)
lods
pop
pop
leave
jecxz
or
and
mov
and
and
sbb
xchg
in
jns
(bad)
cld
push
and
sbb
sbb
push
jmp
jmp
mov
jg
jle
popf
arpl
add
push
test
jmp
or
ins
mov
mov
scas
or
dec
enter
mov
out
mov
pusha
adc
and
jne
jmp
adc
test
icebp
inc
mov
mov
dec
retf
ror
xchg
dec
sbb
mov
cmp
sub
mov
shr
and
int3
mov
dec
in
in
push
cmp
sahf
jne
dec
(bad)
sbb
pushf
cmp
mov
pop
das
pop
jl
lahf
cmp
adc
inc
sbb
int3
aaa
mov
xor
xchg
pop
call
out
adc
push
leave
jg
fldenv
xlat
cld
cs
loop
push
mov
mov
xchg
ja
clc
xchg
inc
test
in
push
mov
mov
retf
outs
ret
fnstenv
inc
sub
ins
xchg
cli
xchg
js
push
pop
mov
jns
fdiv
push
mov
inc
shl
out
cmp
mov
adc
(bad)
cmp
mov
mov
mov
xchg
mov
push
out
sub
or
cmp
in
sub
jg
pop
mov
inc
es
aad
mov
xchg
add
idiv
dec
rcl
push
ds
mov
loop
adc
jo
push
push
inc
fwait
xchg
fstp
ret
dec
mov
mov
and
call
add
mov
mov
js
lods
or
mov
dec
push
loop
sahf
repz
adc
pop
push
ins
int3
loop
push
cmps
outs
fwait
sub
movs
jge
pushf
cmps
dec
fimul
adc
or
das
dec
add
test
retf
sub
stc
out
(bad)
cmp
les
sub
jmp
sbb
mov
and
mov
jle
popf
lods
fwait
ret
ja
aam
aaa
cmp
(bad)
sti
cmps
jmp
shl
sbb
ins
icebp
pop
movs
ds
lea
ret
bswap
shl
mov
loope
movs
mov
pop
popf
je
mov
mov
shl
sub
jne
or
loope
jmp
push
mov
jecxz
cmp
sub
hlt
cmp
inc
dec
popf
pushf
cmp
push
mov
dec
jnp
enter
jns
(bad)
mov
mov
in
add
inc
ficomp
lea
es
leave
aas
loope
outs
jnp
adc
bound
test
outs
mov
dec
rol
(bad)
adc
cdq
popf
xchg
cld
jle
xchg
aaa
xchg
in
ret
jne
pushf
xor
jp
dec
and
sub
loope
sub
xlat
in
cmp
jbe
not
or
mov
div
sub
(bad)
fild
pushf
jb
(bad)
dec
retf
repnz
dec
pusha
mov
dec
add
mov
mov
or
out
aas
iret
imul
ss
adc
pop
push
int3
mov
icebp
mov
dec
sbb
std
mov
and
fbld
sar
inc
pop
sbb
mov
jle
popf
je
lods
cmp
mov
ins
into
and
je
dec
and
and
sahf
cmp
xlat
out
dec
mov
test
and
pop
pop
pushf
(bad)
rcr
rcl
xchg
clc
fdiv
retf
push
xor
shl
cmp
mov
iret
pusha
push
(bad)
movs
mov
(bad)
mov
xor
leave
inc
rcr
sbb
cli
cs
retf
idiv
pop
xchg
mov
mov
inc
push
jbe
mov
fimul
stc
mov
loopne
stos
sub
jne
cmc
ja
or
inc
es
ds
cmp
sub
xchg
adc
dec
pop
pop
mov
cmp
sbb
retf
les
mov
push
imul
push
je
cmp
hlt
push
pop
aaa
adc
mov
mov
jecxz
je
add
cmp
sbb
cmp
or
stc
cdq
inc
cmc
inc
ficom
retf
or
cmp
sub
aas
int3
ret
dec
adc
push
shl
adc
mov
cmp
leave
ins
imul
int3
mov
rcr
pop
cld
pop
out
fwait
push
jno
dec
pusha
adc
mov
lea
inc
pop
and
and
xchg
pop
loop
jecxz
xchg
jp
inc
pop
jecxz
(bad)
mov
push
nop
mov
sub
aas
and
or
sbb
data16
das
dec
pop
xchg
xor
mov
(bad)
cli
cmp
aaa
jnp
idiv
adc
dec
sub
xchg
pop
test
push
sub
into
sahf
mov
xor
pop
sub
ins
outs
ret
std
cmp
hlt
rol
jo
in
push
jb
push
inc
scas
cmp
popa
xor
(bad)
push
jnp
inc
std
nop
imul
mov
sbb
adc
(bad)
xchg
(bad)
repz
mov
sub
imul
and
push
retf
pop
jl
test
out
pop
jae
cld
cmps
ss
inc
jecxz
adc
movs
inc
cmps
xor
add
retf
cmp
gs
add
fcmovu
inc
shr
and
push
or
imul
adc
(bad)
and
es
mov
dec
pop
jp
ins
mov
cmp
inc
dec
and
xor
jp
mov
icebp
fisub
loope
mov
or
inc
in
iret
ins
push
repnz
pop
sahf
clc
mov
xor
cmp
sub
in
nop
mov
das
dec
cwde
xor
or
imul
and
test
mov
pusha
xchg
push
jl
pop
repnz
mov
in
jmp
gs
lods
pop
fwait
rol
mov
sub
xor
xor
loopne
xlat
mov
xor
sbb
sbb
dec
jno
xor
push
push
repz
or
mov
inc
into
neg
fsub
dec
into
mov
cmp
inc
jle
into
xor
popa
lahf
cmps
mov
movs
xchg
mov
nop
pop
mov
lea
aas
fimul
hlt
adc
(bad)
mov
adc
push
pop
aam
pop
aas
mov
mov
leave
lods
add
mov
dec
fmul
cmps
in
dec
and
bound
jnp
in
(bad)
inc
or
cmc
mov
lahf
popf
jno
aaa
and
mov
nop
cmps
mov
jbe
outs
adc
icebp
imul
add
shl
mov
or
and
push
pop
clc
push
icebp
out
gs
push
pop
jmp
js
inc
les
push
sub
jmp
mov
fwait
repz
lahf
sub
pmaddwd
(bad)
mov
int
pop
cs
retf
call
cmp
fwait
stc
lahf
fstp
sub
stos
xchg
shl
cmp
(bad)
cli
ss
sbb
nop
js
xor
leave
and
jb
(bad)
mov
push
and
inc
add
mov
lds
rcl
mov
mov
mov
jge
cmp
cwde
fdivr
push
pop
and
and
movs
mov
sbb
scas
cmc
mov
popf
retf
and
dec
xchg
out
dec
sbb
mov
paddusb
add
retf
sub
movs
add
outs
loop
out
mov
mov
lea
clc
loop
fnstcw
jb
cdq
test
inc
or
or
jmp
ins
jno
loopne
(bad)
in
lods
inc
shr
fild
aad
adc
popf
push
cmp
sub
dec
push
push
dec
hlt
sub
push
(bad)
jns
pop
add
int3
dec
cwde
jg
push
sbb
mov
jne
cmp
add
xchg
sbb
pop
xchg
loopne
fild
mov
clc
cmp
dec
leave
cmps
push
sahf
mul
into
test
add
xchg
cmps
dec
fwait
mov
sbb
xchg
sbb
dec
xor
xchg
lock
or
and
or
leave
mov
add
mov
sbb
or
cmp
pop
call
popf
sahf
mov
mov
jge
ror
enter
mov
pop
dec
jo
and
mov
nop
jmp
test
mov
outs
movs
jmp
mov
xchg
loope
mov
mov
(bad)
cmp
call
addr16
ins
inc
scas
int
out
push
out
mov
mov
ror
push
cmpxchg
sbb
cmp
or
nop
xchg
inc
inc
or
fistp
xor
and
in
and
xor
mov
les
cs
dec
cwde
(bad)
jae
cld
cmps
sbb
inc
int
mov
outs
mov
retf
(bad)
mov
(bad)
sbb
inc
mov
shr
push
push
cmp
or
icebp
mov
call
adc
cmp
mov
cdq
jmp
cmps
stos
shr
xchg
das
iret
pop
inc
loopne
jp
xchg
mov
pop
std
popa
out
and
jbe
xchg
xchg
jnp
mov
sub
ret
inc
stc
in
push
pop
lock
or
dec
lods
std
mov
or
out
popa
push
sbb
int3
repnz
iret
jmp
jbe
out
pop
adc
aas
retf
and
jo
daa
cmp
or
xor
sar
in
jmp
push
aas
aaa
pop
pop
and
ret
je
inc
mov
push
jns
or
add
sub
push
or
js
and
daa
pusha
sub
or
pop
push
sub
loop
cmp
mov
mov
sub
mov
mov
ror
das
sbb
inc
(bad)
push
mov
cmc
mov
test
cmp
outs
inc
std
mov
inc
and
cmc
mov
icebp
call
pushf
cmp
test
sbb
cmp
push
ret
mov
mov
mov
cmp
int
push
push
cmps
(bad)
or
adc
push
jne
sbb
sbb
or
push
call
adc
pop
(bad)
push
or
les
mov
xor
popa
and
cmp
test
push
sar
sbb
adc
push
mov
movs
movs
xor
js
jns
aam
push
test
pop
mov
sub
xlat
inc
inc
sub
shl
mov
cmp
shl
loope
fs
movs
std
in
fbld
(bad)
sub
mov
push
cmc
jge
aaa
inc
jge
pusha
arpl
daa
cmp
enter
adc
mov
lock
enter
ret
jmp
fadd
and
jecxz
call
hlt
out
mov
push
dec
aam
jo
mov
jge
arpl
clc
js
loopne
call
dec
jns
popa
adc
movs
push
gs
ins
xchg
mov
xchg
mov
daa
sahf
bound
mov
xlat
cli
and
sti
mov
inc
stc
sbb
sub
and
adc
movs
cmp
(bad)
adc
mov
in
(bad)
mov
je
dec
adc
jle
and
imul
gs
jne
adc
xor
dec
out
(bad)
in
sbb
push
jmp
cmp
mov
pop
pushf
mov
xor
rcr
pop
sahf
aad
leave
sub
pushf
call
bound
ins
outs
(bad)
cli
push
and
loopne
stc
jno
inc
fs
fcom
mov
xor
and
dec
into
hlt
sub
pop
pop
pop
pop
and
jp
xchg
mov
mov
ror
adc
fisubr
test
outs
inc
loope
ret
mov
jecxz
rol
ret
dec
addr16
movs
mov
cwde
rol
ret
ja
and
ficom
fs
jecxz
(bad)
xchg
mov
je
ds
mov
jge
xor
cmp
xlat
out
enter
hlt
dec
js
and
jnp
in
fdiv
iret
mov
xor
leave
pop
mov
out
xlat
jmp
mov
jno
xchg
(bad)
sbb
xchg
cld
(bad)
shl
repz
or
pop
jnp
jmp
icebp
xchg
xor
shr
pop
pop
and
cmp
out
pushf
pop
cmc
dec
shl
rcl
inc
cmp
loop
push
inc
loope
gs
daa
adc
cmps
and
icebp
mov
dec
or
mov
mov
fsubr
mov
xchg
cli
ja
push
mov
xchg
add
pop
loope
(bad)
push
jmp
test
cmp
sub
ins
adc
es
nop
sti
mov
mov
daa
(bad)
cmp
push
cmp
add
enter
push
push
mov
enter
jecxz
xchg
inc
cmp
and
push
aas
aaa
dec
sbb
mov
into
mov
mov
clc
cmp
jp
fs
rdtsc
xlat
int
js
into
pushf
cmp
sbb
add
push
xor
push
pop
mov
xchg
cmp
data16
in
and
loope
mov
and
jge
mov
ret
pop
jnp
and
mov
icebp
cli
pop
push
push
mov
sub
retf
jns
cmp
mov
jo
sbb
push
xchg
jo
xchg
or
mov
fild
test
das
ror
cli
outs
and
ds
dec
cmp
(bad)
das
movs
jle
mov
push
mov
lahf
nop
sub
sbb
not
add
(bad)
out
dec
xor
fld
sbb
aam
mov
fiadd
cmc
mov
inc
ret
xchg
pusha
xchg
fnstsw
dec
cmp
xor
retf
in
push
ins
inc
xchg
and
mov
xor
out
retf
retf
dec
xor
std
dec
cli
bound
jle
pop
in
cmp
or
add
iret
xlat
xchg
in
popf
cmps
push
aam
jbe
dec
std
lock
movs
jbe
add
sbb
mov
in
test
jae
push
cmp
pusha
sahf
pop
cmp
or
int3
mov
mov
dec
(bad)
(bad)
xor
jle
xor
cmps
outs
js
imul
fcomp
add
(bad)
in
je
mov
xchg
adc
xchg
retf
sbb
push
sub
and
les
stc
dec
add
sahf
js
xlat
test
and
arpl
inc
mov
mov
mov
cli
mov
adc
sub
jb
sahf
or
mov
inc
pop
bound
jmp
rol
inc
mov
dec
adc
out
cdq
jns
push
jl
push
jbe
retf
ret
jns
cmp
add
data16
(bad)
in
and
aam
mov
popa
pop
pop
mov
jb
or
in
xchg
mov
out
cmp
sbb
or
mov
sub
xchg
dec
sbb
and
cld
push
mov
ins
rol
mov
add
gs
fnstcw
out
jmp
adc
lock
push
shl
jo
xchg
nop
mov
and
stos
inc
cmps
cmp
sbb
sahf
shr
cdq
(bad)
loop
jae
into
jmp
sub
mov
and
lock
or
mov
pop
adc
push
inc
dec
out
ss
(bad)
and
loop
and
popa
xchg
mov
test
shr
mov
ds
aaa
push
xor
ins
jmp
sbb
fistp
mov
out
leave
push
in
sbb
dec
stos
(bad)
mov
pusha
jmp
jbe
inc
ins
fst
test
in
xor
mov
or
lods
mov
rcr
pushf
les
ds
pop
dec
fcomp
cmc
or
push
arpl
test
sahf
mov
cmp
and
not
cmp
lock
(bad)
icebp
(bad)
ret
pop
bound
jmp
push
ss
(bad)
sbb
jb
shl
imul
or
repnz
or
inc
popf
xchg
sbb
xor
loopne
and
and
mov
adc
and
stos
inc
into
adc
mov
inc
add
stos
jo
xor
or
cmp
mov
imul
fild
cdq
int
cwde
lods
pop
or
cdq
push
xor
or
and
loopne
sahf
bound
fadd
fidiv
inc
xchg
test
sub
(bad)
xor
ds
xor
into
js
imul
and
cmp
inc
mov
cmp
test
inc
pop
mov
es
xchg
xchg
and
pop
js
dec
add
sub
inc
inc
test
push
xchg
sbb
in
not
cmc
xchg
ss
lods
mov
fimul
out
jnp
jbe
shr
inc
stc
cmp
pop
dec
fwait
xchg
ss
pop
inc
pop
mov
pop
sub
xchg
or
pop
mov
test
xchg
iret
shl
(bad)
cmp
loopne
push
pop
push
cmp
les
xchg
xchg
xchg
lahf
inc
jns
push
outs
rol
or
fdivr
lea
(bad)
cli
pop
xor
and
mov
cmc
mov
jg
fsubr
cld
sub
jmp
push
xor
xchg
mov
and
jp
xchg
in
lock
and
popf
add
push
xlat
ja
dec
xor
loopne
or
jbe
movs
mov
push
aam
popa
pop
dec
push
sub
cmp
jne
lods
inc
sub
cs
mov
inc
mov
or
adc
push
push
pop
inc
lds
mov
xchg
add
pushf
jae
out
in
adc
jge
out
repz
jae
jge
stc
out
retf
fldcw
xlat
fld
jp
push
das
outs
out
ds
mov
loop
call
aaa
je
in
cmp
mov
scas
pop
mov
sti
in
mov
mov
repz
xor
daa
out
lock
(bad)
pop
push
(bad)
les
cdq
push
mov
pop
lods
arpl
mov
push
pminsw
fidiv
xchg
or
les
cmc
jae
lds
jle
in
call
rol
dec
fstp
mov
push
ja
ins
jnp
imul
daa
in
out
scas
std
fcomp
and
popa
mov
(bad)
push
mov
push
adc
push
outs
jge
repnz
or
pusha
cmps
pop
mov
cmp
into
mov
sahf
clc
enter
ins
bound
imul
ds
fwait
push
jbe
push
fsubr
or
sbb
xchg
cmps
pop
xchg
fidivr
retf
imul
cmps
dec
cdq
sbb
ss
(bad)
sbb
hlt
shl
push
cld
xchg
iret
push
out
movzx
repz
xchg
(bad)
push
mov
jecxz
adc
push
cld
repnz
int
sti
mov
mov
sub
retf
sub
jecxz
cmc
xchg
mov
rcl
cmp
aaa
imul
pop
jae
loop
mov
sti
js
mov
frstor
int
mov
jg
mov
in
lods
imul
aam
sbb
mov
jno
mov
mov
into
not
and
dec
dec
ds
test
mov
in
sub
xchg
cmp
pop
popf
out
mov
fstp
push
fwait
dec
cld
sub
fucom
iret
jmp
cdq
retf
or
(bad)
shl
mov
outs
adc
xchg
neg
jmp
ins
sub
inc
cmps
push
jg
sub
mov
shr
sub
dec
popf
(bad)
jle
ret
cwde
aas
cmp
jmp
mov
fnstenv
das
jmp
mov
pop
jae
dec
jmp
xchg
pop
sar
cli
mov
pop
pop
pop
cmp
adc
out
adc
xorps
retf
scas
rcr
cmp
mov
ins
mov
rcr
call
mov
(bad)
cmp
jae
mov
fisub
fsubrp
rol
sbb
sti
mov
pop
mov
imul
sahf
hlt
(bad)
test
mov
ror
push
push
dec
cmp
leave
jns
dec
push
lock
or
jb
popa
jl
jae
les
aad
ja
xlat
mov
icebp
xor
xor
cmp
jne
out
mov
div
out
scas
aaa
mov
lahf
pushf
xor
cmp
pushf
mov
lods
int
es
fdiv
ror
mov
xor
xor
mov
dec
push
iret
daa
movs
rcr
fild
xor
sbb
pop
jp
cmp
mov
mov
call
ins
jg
retf
scas
xor
pop
mov
mov
pusha
test
push
fcmovnu
or
(bad)
jbe
shl
pusha
sub
dec
comiss
sbb
cli
cmc
mov
not
fcmovu
pop
mov
mov
fnstsw
jmp
sahf
xor
xor
in
pop
push
jbe
into
adc
mov
hlt
mov
and
mov
mov
cmc
sbb
xor
mul
sbb
out
into
fistp
sbb
in
mov
imul
sub
jns
hlt
ror
movs
jne
out
into
test
aaa
push
lea
lahf
fstp
(bad)
mov
loope
xlat
cli
retf
ss
cmps
sbb
data16
dec
pop
xlat
and
mov
mov
and
ror
scas
leave
ja
jns
movs
das
neg
or
mov
jmp
bound
(bad)
daa
jns
into
pop
rcl
jmp
cdq
loop
or
jge
lds
jne
add
sub
jmp
clc
scas
ss
dec
pushf
rcr
mov
sbb
shr
fsubr
mov
aad
and
test
into
(bad)
(bad)
dec
imul
sbb
movs
movs
dec
sti
scas
add
call
cld
fisub
fdivrp
jg
int3
jns
mov
sar
stc
out
jnp
xor
push
cmps
es
daa
pop
xchg
leave
ret
shl
mov
jnp
std
les
lea
fisttp
adc
xlat
dec
cmps
cmps
paddusb
mov
jns
ins
xor
lock
mov
xlat
mov
adc
(bad)
mov
dec
jp
mov
fnstenv
push
test
mov
dec
daa
push
fcmovnbe
hlt
add
and
pop
fs
cld
popa
movs
mov
aad
stos
fwait
pop
sbb
test
(bad)
popa
test
mov
mov
or
into
call
sbb
mov
sbb
sub
rcr
popa
imul
sbb
cmps
and
outs
dec
pop
jge
push
and
mov
fwait
push
cli
jb
sti
out
jp
das
ret
stos
jnp
retf
in
jns
ins
shl
(bad)
cmp
out
aad
cmps
hlt
jne
dec
lea
push
sahf
sbb
fistp
std
push
dec
xlat
aad
push
imul
mov
mov
mov
retf
hlt
xchg
iret
cmp
arpl
sbb
clc
xchg
ss
sbb
xchg
je
cmp
(bad)
mov
jns
lea
lods
pop
mov
jmp
jns
popf
xlat
jle
sar
(bad)
cli
out
cmp
cmp
mov
dec
jg
(bad)
aas
push
icebp
imul
pop
(bad)
std
repz
push
sbb
jecxz
pop
mov
imul
cmp
pop
mov
ss
or
loopne
jnp
cmp
pop
xor
not
dec
aam
jge
sbb
stc
jmp
mov
fwait
scas
inc
out
mov
push
cmp
jmp
jmp
out
jg
pop
aaa
jle
jae
les
retf
idiv
in
cdq
add
cmc
pop
hlt
fsubrp
push
scas
pop
or
lock
shl
in
push
cmps
cdq
movs
inc
mov
cdq
xor
test
adc
je
fdivr
in
fwait
push
or
mov
jmp
push
adc
js
dec
inc
lds
not
jns
sub
stc
repz
sar
in
xlat
das
mov
in
ins
mov
das
aas
imul
test
dec
retf
mov
mov
fstp
add
pop
imul
mov
stos
outs
push
sbb
push
sbb
jmp
ss
ret
test
jmp
mov
test
hlt
add
ss
jge
jno
and
std
xchg
xchg
xlat
shl
pop
jg
movs
cmp
test
imul
fs
xchg
fld
aas
ficom
fcom
jmp
stos
xor
sbb
jno
jge
retf
cld
pop
cmp
leave
call
jge
jecxz
mov
jbe
xor
fisttp
pop
fimul
sub
in
in
in
mov
mov
mov
sti
add
sbb
cs
pushf
push
ss
ss
jecxz
cmc
inc
stc
sti
in
retf
rcl
xchg
dec
cmc
icebp
test
in
push
cmps
movs
or
xchg
sbb
lock
push
cld
stos
push
aad
pop
jmp
mov
dec
inc
and
pop
xchg
clc
pushf
sahf
jl
das
(bad)
jmp
mov
pop
mov
mov
sub
xchg
movs
jge
mul
rcr
mov
pop
sub
xchg
out
mov
int
mov
cmp
aad
pusha
mov
int
mov
sub
into
mov
sbb
mov
ss
pop
lods
outs
or
in
ja
fisub
mov
xlat
sti
ss
sahf
stos
inc
outs
jge
pop
out
sti
jmp
push
mov
pop
xchg
cmp
jge
loop
push
loope
mov
in
mov
mov
push
in
(bad)
test
cmp
xchg
(bad)
ss
mov
imul
scas
pop
cmp
movs
xchg
jbe
cmps
repz
adc
dec
arpl
es
mov
ficomp
imul
dec
inc
(bad)
xlat
outs
mov
fcomp
jge
pop
rcr
mov
in
jbe
adc
js
inc
(bad)
faddp
test
sti
mov
aam
scas
inc
lds
loope
(bad)
in
mov
ins
(bad)
cmp
mov
leave
sbb
out
pop
adc
inc
push
sbb
mov
pop
dec
mov
aaa
cmps
ficomp
cli
fistp
ficom
loope
iret
push
scas
xchg
aad
jge
call
xor
(bad)
sti
mov
mov
mov
mov
jnp
(bad)
repnz
call
adc
retf
dec
jp
dec
sbb
xor
xchg
std
je
or
dec
sbb
pop
imul
sahf
mov
repnz
sti
xchg
lahf
xchg
(bad)
adc
lods
retf
gs
and
or
xlat
test
cmp
not
push
mov
out
mov
out
pop
movs
scas
sbb
(bad)
cmp
in
xchg
mul
sbb
arpl
inc
dec
pop
jmp
nop
mov
pop
dec
das
mov
mov
sti
cld
scas
cmp
inc
mov
cmps
jbe
jmp
fistp
jge
mov
push
push
data16
jle
cld
mov
jecxz
aam
icebp
cs
addr16
mov
dec
xchg
(bad)
loop
xchg
mov
outs
int
adc
dec
cmp
loopne
mov
gs
cmp
pop
adc
jno
cmps
push
ja
push
mov
aad
mov
push
scas
ret
mov
jmp
dec
test
test
cmp
out
or
jp
stos
mov
aaa
stos
daa
scas
ins
(bad)
dec
pushf
lahf
(bad)
sub
(bad)
fidivr
sub
cmp
hlt
into
call
or
pop
fmul
pushf
inc
icebp
mov
std
nop
or
jg
lock
or
pop
int3
sar
or
mov
fcom
cmp
cmp
add
(bad)
scas
push
cmp
int
test
inc
test
out
xlat
imul
in
daa
sub
cdq
inc
adc
outs
in
pop
retf
repz
pushf
xchg
cmp
sub
xor
mov
mov
sub
leave
scas
add
adc
cmp
movs
cs
pop
in
sub
test
xchg
in
stc
jns
xchg
push
scas
xchg
inc
mov
ins
aad
mov
not
mov
mov
sub
jmp
aam
repnz
ja
ins
int3
addr16
and
fstp
daa
in
in
repz
out
frstor
daa
daa
aaa
sub
adc
out
push
sahf
jb
pop
repnz
mov
cmps
outs
stc
jb
cmp
dec
test
jmp
data16
push
call
loope
mov
dec
(bad)
mov
mov
in
ja
ja
sar
mov
sub
int
fisubr
ret
mov
push
xchg
sahf
fst
imul
and
or
push
sbb
ds
push
outs
jge
ins
lods
pushf
data16
stc
in
outs
out
pop
int3
repz
iret
not
inc
cmps
test
repz
pop
xor
cmp
add
repnz
(bad)
dec
push
adc
mov
stos
push
jno
mov
sbb
call
jns
mov
lods
fnstenv
idiv
mov
js
pop
aaa
pop
mov
jne
retf
inc
stc
and
stc
adc
xor
(bad)
outs
enter
sbb
icebp
mov
push
in
jno
(bad)
push
(bad)
dec
lods
addr16
stc
in
addr16
fnsave
fst
xlat
fcomip
mov
jmp
cmp
pop
fwait
jae
(bad)
movs
jns
loop
addr16
jnp
repz
mov
repnz
mov
pusha
bound
sahf
mov
mov
jae
fidivr
lahf
pop
(bad)
shr
mov
loopne
stos
out
inc
pop
sbb
pop
dec
daa
lahf
jl
ret
repnz
cdq
cmp
cld
jno
lods
mov
sub
cld
test
adc
call
xchg
xlat
jg
jmp
push
lock
test
test
int3
jecxz
repnz
xor
and
test
xchg
out
jns
sahf
popf
in
jmp
leave
cwde
int3
add
and
cmp
mov
jnp
pushf
sbb
sbb
loope
inc
push
scas
push
(bad)
test
sub
xchg
ss
jmp
mov
adc
cmc
lahf
out
pop
add
sahf
nop
mov
out
cmp
ja
icebp
jl
mov
pop
popa
mov
das
js
stos
in
cmp
pop
aas
inc
neg
xchg
aad
or
stc
aam
pop
out
dec
pop
jl
stc
push
sbb
ds
jg
out
ja
scas
ds
jns
aad
jmp
cmps
(bad)
jae
push
jne
mov
mov
push
out
es
xchg
int3
adc
jge
test
xor
test
arpl
jmp
jns
jnp
jmp
jge
in
mov
addr16
rol
lahf
xor
out
stos
repnz
jg
out
mov
iret
jmp
enter
mov
jno
jns
retf
sub
popf
jbe
imul
xlat
test
scas
jbe
mov
sub
stos
fimul
mov
out
cld
mov
stc
int3
rcl
xor
jae
or
fwait
repnz
addr16
pop
lock
mov
pop
jge
leave
aas
sahf
xchg
(bad)
repz
jl
clc
ins
sub
clc
mov
add
jbe
or
sub
pop
lods
pop
mov
pop
mov
popa
xchg
pushf
mov
es
iret
movs
loop
cdq
pop
cmp
lds
(bad)
(bad)
jne
out
std
cli
cld
mov
arpl
cmps
mov
stos
or
fucom
data16
dec
ins
out
sbb
pop
popa
mov
pop
xchg
dec
cmc
mov
xor
cmp
xchg
hlt
lock
ja
icebp
les
pop
in
mov
out
not
neg
addr16
push
(bad)
leave
jae
retf
lea
stos
inc
push
xor
fdiv
out
les
push
mov
pop
add
push
or
jae
xor
push
push
mov
jle
jne
loop
out
in
mov
fiadd
repnz
cmc
sbb
ja
ror
out
sbb
dec
test
cmp
rol
shl
(bad)
fdivp
cli
fsubr
xchg
outs
push
in
stos
dec
pop
lods
imul
cli
fbstp
push
jo
xlat
push
jnp
div
ja
jl
add
mov
shl
pusha
pop
leave
push
cli
push
in
shr
(bad)
xchg
sti
push
xor
add
mov
jnp
fcomp
std
and
inc
sub
dec
std
fstp
xor
add
add
lahf
jns
(bad)
pop
pop
stc
ret
fbld
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
xor
inc
or
add
or
add
pop
popa
add
add
or
add
add
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
js
in
fld
mov
jg
or
sar
cmp
add
add
push
add
adc
or
and
shr
adc
jmp
adc
enter
leave
jns
dec
scas
fnstenv
iret
fcomp
(bad)
jge
xchg
frstor
ja
xor
(bad)
(bad)
dec
add
add
add
add
ret
or
inc
gs
inc
not
dec
(bad)
sub
enter
fsubr
(bad)
xchg
cmp
(bad)
std
outs
mov
addr16
iret
fidiv
mov
jbe
jbe
div
fbld
cmps
std
(bad)
outs
mov
or
jns
leave
add
add
add
add
pop
mov
ins
sub
fisub
mov
inc
(bad)
jmp
sti
mov
mov
outs
mov
cmp
repnz
xchg
add
stc
mov
add
add
and
cmp
pop
scas
and
retf
das
in
dec
(bad)
enter
pop
mov
push
mov
add
add
add
add
jno
rol
mov
bswap
fnstenv
sbb
add
jae
add
add
add
add
inc
aam
retf
leave
push
in
mov
pusha
dec
(bad)
arpl
popa
imul
imul
imul
and
test
add
mov
nop
jg
jp
mov
mov
mov
mov
inc
shl
mov
jae
add
add
add
add
inc
in
mov
jp
mov
fstp
call
dec
push
add
out
or
add
add
add
outs
enter
push
mov
(bad)
mov
adc
fisubr
add
aas
test
add
enter
mov
mov
neg
fsub
xchg
in
add
bnd
add
add
add
add
inc
shl
xchg
hlt
xor
aad
(bad)
in
xor
leave
add
add
add
add
dec
test
sub
mov
sub
and
dec
push
pop
jo
fs
push
dec
fidivr
fs
in
mov
mov
(bad)
fdivp
xchg
push
dec
cmp
jg
pop
jp
movs
leave
cmc
xlat
pop
lahf
fdiv
ins
leave
pop
ja
xchg
cld
jmp
dec
jle
loope
icebp
(bad)
pop
dec
sahf
jl
leave
in
cmps
lahf
sahf
ret
pop
push
sti
xor
addr16
cmp
mov
dec
mov
out
mov
sar
outs
sti
aaa
fdivr
call
sub
add
out
test
add
add
add
repnz
es
xchg
mov
mov
into
cdq
lods
mov
dec
leave
push
pop
ins
xchg
in
mov
daa
popf
xchg
pop
jl
vpaddsw
cli
jmp
aam
mov
in
out
mov
(bad)
or
xchg
std
fucomi
fild
push
sti
aaa
fstp
cli
test
scas
sti
clc
add
sub
pop
add
add
add
add
fwait
ja
test
mov
mov
xchg
pop
sqrtps
jmp
xchg
pop
std
call
pop
xchg
fdiv
jge
sub
cmp
(bad)
mov
sti
aaa
fstp
pop
mov
call
cmp
mov
add
sub
add
add
dec
push
inc
sub
jge
mov
add
ja
repz
in
mov
in
outs
mov
mov
not
out
stos
frstor
out
mov
(bad)
hlt
nop
cmp
jecxz
add
add
pop
or
add
add
add
pop
push
cmp
push
mov
jne
pop
xchg
mov
pop
cmp
jg
std
cmps
or
in
cmp
(bad)
pop
scas
jg
pushf
fnstcw
xor
mov
mov
repnz
scas
pop
in
xor
dec
pop
add
adc
test
add
adc
push
or
paddsw
movs
inc
push
pop
and
jbe
ins
xchg
ror
sub
xchg
mov
jmp
retf
(bad)
(bad)
(bad)
enter
int3
(bad)
into
pop
rol
jg
mov
lea
add
add
add
push
cmps
mov
push
jae
imul
jnp
and
stc
enter
std
int
jle
cmp
fsub
imul
ins
sub
cs
in
mov
cmc
xlat
mov
pop
mov
add
add
gs
fwait
call
jnp
int3
aaa
fistp
fld
gs
inc
jg
adc
lods
lods
mov
mov
sbb
jo
jne
inc
add
push
out
test
add
add
add
repnz
mov
xchg
pop
imul
fdiv
in
xchg
dec
dec
out
mov
push
inc
mov
mov
mov
ret
xchg
ins
scas
lods
lods
mov
add
jnp
add
add
add
push
cmps
mov
test
in
mov
inc
pop
ins
mov
xchg
jge
fldenv
mov
mov
(bad)
jmp
(bad)
cli
jmp
scas
jge
imul
mov
jmp
inc
jg
mov
and
inc
add
add
add
mov
adc
push
aas
mov
rcr
lods
xchg
pushf
js
mov
cmp
daa
pushf
xor
xor
push
mov
ret
add
xor
jnp
add
add
add
push
cmps
mov
aam
jb
sub
outs
mov
jb
in
or
dec
fidivr
or
neg
fldenv
(bad)
pop
rcr
ins
jnp
or
add
mov
add
add
add
dec
je
std
int3
xchg
mov
xor
cmp
repnz
das
jge
mov
or
es
arpl
popf
cmp
(bad)
jno
jle
fwait
ja
pop
add
dec
loopne
or
add
add
add
jae
cmp
scas
pop
cwd
and
xchg
mov
imul
push
lods
neg
jp
imul
out
test
add
add
add
repnz
cmp
imul
adc
into
cmp
int3
lock
fldenv
(bad)
mov
(bad)
ficomp
call
ja
add
push
push
out
test
add
add
add
repnz
fisub
xor
xor
in
lahf
(bad)
jl
jecxz
aaa
jmp
(bad)
fcomp
jnp
dec
je
mul
(bad)
jne
out
ds
or
add
add
add
dec
or
sbb
push
sbb
jb
and
cmps
fwait
movs
cwde
mov
fcomp
jnp
add
fsubrp
ret
pop
ja
add
push
daa
out
test
add
add
add
repnz
es
in
scas
mov
jns
mov
xor
jmp
sbb
inc
aaa
dec
xor
loopne
aas
sti
fst
(bad)
pop
pop
aaa
jmp
pop
add
jmp
add
add
push
fidivr
iret
(bad)
addr16
push
cmp
and
daa
sahf
ror
mov
sbb
add
mov
jge
add
fmul
add
add
add
xor
int
dec
dec
dec
in
clc
loope
fld
in
pop
je
inc
(bad)
push
mov
loop
mov
add
add
add
add
retf
out
ss
ds
sti
jecxz
pop
pop
fs
in
push
dec
dec
fidivr
ins
frstor
rcr
mov
arpl
fist
loopne
mov
add
add
add
add
sub
aam
in
mov
sbb
test
ins
out
fcomp
repnz
push
xchg
dec
je
out
ds
add
xor
test
add
add
add
repnz
cmps
lods
jmp
xor
xchg
test
mov
mov
addr16
int
jne
in
and
dec
mov
mov
repnz
add
or
add
add
push
cmps
mov
jne
sub
cdq
iret
lock
push
sub
push
mov
mov
jne
out
mov
out
test
add
add
add
repnz
data16
aam
jb
sub
ins
mov
mov
jge
pop
fstp
icebp
(bad)
mov
data16
fild
test
into
jge
add
push
xor
add
add
mov
xor
movs
cld
int
movs
sbb
jecxz
aaa
jmp
(bad)
pop
ins
xchg
in
cmc
xchg
mov
add
fmul
add
add
add
xor
int
int
test
in
mov
fstp
jge
fst
aaa
inc
push
pop
mov
ins
out
jns
mov
mov
xlat
aam
mov
stos
loop
or
add
add
add
inc
ins
sub
ds
movs
xchg
dec
dec
fidivr
cmp
(bad)
mov
cwde
jecxz
mov
out
repz
sub
pop
add
add
add
add
fwait
ja
mov
pop
leave
jg
sbb
mov
jb
and
outs
xchg
mov
ins
cmp
iret
adc
add
out
or
add
add
add
inc
jge
(bad)
fcom
je
repz
dec
push
jl
inc
fisttp
cmp
push
pop
ins
loope
fnstenv
fdiv
jae
sbb
stc
add
inc
cdq
fmul
add
add
add
xor
int
int
push
fcmovne
mov
xlat
pop
jnp
scas
mov
sub
jnp
fstp
jbe
sbb
jns
add
fmul
add
add
add
xor
int
int
push
cmp
add
jmp
sbb
je
jb
xor
lock
scas
adc
mov
ins
scas
ficomp
in
mov
jge
add
push
push
test
add
mov
aam
movs
jecxz
in
in
mov
sahf
cld
jmp
daa
(bad)
cmp
push
aaa
loope
pop
add
xor
add
add
mov
mov
aam
movs
jecxz
and
loope
xchg
sub
push
mov
div
test
mov
sti
jl
add
add
add
add
int
push
pop
enter
popf
pop
cwd
gs
pop
outs
mov
(bad)
(bad)
idiv
push
pop
cmp
iret
sub
add
mov
add
add
push
fidivr
mov
stos
lods
mov
jb
mov
jmp
pop
pop
sar
fld
pop
fmul
add
add
add
xor
int
int
push
stos
leave
jecxz
aaa
cmp
(bad)
cld
mov
sub
in
in
stc
add
jae
xor
add
mov
add
add
add
repnz
adc
mov
xchg
daa
sahf
js
aaa
inc
aam
ins
outs
fistp
div
inc
in
mov
jge
add
push
and
inc
add
add
add
mov
mov
aam
jb
fnstsw
cli
leave
push
dec
cmp
outs
mov
ins
scas
jnp
add
fld
sub
test
add
add
add
repnz
data16
bound
dec
shl
idiv
mov
add
add
add
add
repnz
popfw
test
(bad)
int
xlat
in
mov
mov
neg
push
ja
jg
add
mov
add
add
push
fidivr
frstor
retf
(bad)
lods
stos
adc
xchg
in
jge
push
js
lea
in
mov
add
bnd
add
add
add
add
xchg
aaa
out
ss
lods
and
pop
push
push
dec
sub
cmp
fnstsw
mov
jae
add
stos
mov
bnd
add
add
add
add
xchg
aaa
out
ss
sub
shr
mov
jne
mov
cmp
neg
xchg
add
je
mov
add
add
push
fidivr
fst
sub
in
pop
scas
stos
adc
neg
imul
pop
add
shr
add
add
mov
mov
aam
in
outs
mov
lock
leave
fldenv
lods
stos
adc
in
mov
mov
push
idiv
or
inc
aaa
fmul
add
add
add
xor
int
int
push
lahf
mov
ror
push
and
loop
ja
lock
pop
aad
sahf
add
shr
test
add
mov
xchg
jge
in
arpl
fidiv
adc
dec
aam
mov
sub
fdiv
jnp
mov
iret
inc
mov
or
inc
add
add
add
mov
mov
push
inc
fild
mov
scas
mov
inc
add
adc
movs
push
clc
jle
add
fmul
add
add
add
xor
int
int
test
icebp
lds
dec
(bad)
std
out
jg
stos
inc
aam
neg
push
out
xchg
or
add
add
add
dec
lods
ins
(bad)
in
jbe
sbb
and
push
and
xor
out
fdiv
jnp
mov
mov
jmp
jnp
add
add
add
push
cmps
mov
jne
std
mov
jne
jno
jmp
aas
(bad)
icebp
(bad)
fucom
push
or
pop
add
add
add
add
gs
fwait
mov
mov
inc
xor
inc
pop
xchg
stos
push
stos
scas
mov
arpl
cmp
in
outs
jg
repnz
retf
mov
jle
cld
cli
xlat
mov
pop
dec
popa
(bad)
fld
mov
fwait
std
sbb
mov
sbb
fst
push
xchg
cmp
jnp
cmp
ret
stos
sti
cmp
add
out
test
add
add
add
repnz
data16
jmp
and
push
movs
pop
aaa
data16
cwde
in
xchg
dec
scas
mov
aas
(bad)
jns
lock
cmp
mov
sbb
lods
mov
mov
ret
mov
ss
xor
mov
add
jb
scas
xor
xor
addr16
cmp
mov
dec
mov
out
mov
sar
outs
jmp
idiv
mov
scas
jmp
mov
add
add
push
fidivr
std
jae
popa
fbld
std
cmc
xlat
jmp
aam
pop
js
test
xchg
pop
outs
dec
dec
cmp
mov
neg
ja
(bad)
pop
jae
fs
stc
out
push
nop
ds
mov
popf
div
mov
daa
popf
xchg
fdiv
leave
repz
aas
aas
in
pop
dec
inc
ja
jne
jne
std
mov
jmp
add
add
add
add
int
test
in
lahf
fisubr
push
mov
ja
cmp
mov
push
xchg
in
mov
cs
jbe
cmps
mov
sub
xor
or
(bad)
ins
imul
stc
in
xchg
push
mov
push
jno
jae
pop
sti
push
dec
rcl
fsub
xor
or
add
add
add
int
test
in
lahf
fldcw
or
or
jg
sti
fist
loope
cmp
lods
xchg
int3
xor
sub
jp
int3
dec
imul
sti
pusha
test
in
fdiv
jp
mov
scas
jmp
pop
add
add
add
add
fwait
ja
and
fidivr
mov
jae
cmp
imul
push
ins
ja
jne
jb
xor
and
clc
les
cmp
in
mov
not
neg
cmp
mov
call
pop
or
add
add
add
inc
sbb
fld
in
out
(bad)
cli
jmp
test
pop
cwde
jl
or
out
jae
ja
fwait
(bad)
out
mov
(bad)
not
cmp
cmp
loope
pop
int
sahf
add
rcr
add
add
push
cmps
mov
xor
mov
out
daa
jecxz
(bad)
rcl
fstp
les
dec
dec
(bad)
pop
jae
ja
arpl
fst
rcl
fcmove
sahf
imul
repz
mov
jns
push
idiv
push
add
jnp
add
add
add
push
cmps
mov
jne
std
repz
ins
mov
xor
jnp
cmp
test
xchg
movs
xchg
pop
retf
sbb
pop
fcomp
fnstenv
scas
mov
ret
test
pop
add
int
adc
add
add
add
push
fidivr
(bad)
imul
jne
sbb
jnp
cmps
or
jno
sbb
arpl
cmp
retf
sahf
jnp
cmp
ds
add
call
add
add
add
dec
std
into
(bad)
imul
sahf
mov
xor
mov
dec
ds
in
mov
mov
mov
stc
repnz
addr16
fbstp
std
fistp
xchg
popf
mov
jl
ins
jmp
mov
mov
pop
int
fiadd
add
(bad)
mov
add
add
push
fidivr
(bad)
pop
in
sbb
ins
pop
jb
cmc
xlat
jmp
xchg
aad
xchg
pop
call
cmc
enter
jl
ss
xchg
adc
std
mov
(bad)
mov
jg
scas
arpl
mov
mov
mov
mov
mov
mov
mov
mov
xchg
popf
cmp
lods
pop
xchg
jne
div
pop
add
add
add
add
fwait
ja
push
push
push
fstp
stos
sbb
scas
inc
pop
(bad)
lock
mov
outs
mov
jne
scas
and
leave
bnd
inc
xchg
scas
jbe
xlat
mov
out
cld
lods
cld
inc
out
xchg
(bad)
(bad)
mov
pop
ficomp
mov
scas
loop
scas
add
sbb
inc
add
add
add
mov
mov
jmp
add
in
xor
ror
cmp
cmp
int3
xor
out
mov
sub
into
jge
stos
(bad)
jmp
aaa
idiv
ja
imul
imul
mov
pushf
hlt
(bad)
sub
sti
cmp
add
pop
or
add
add
add
inc
int
call
(bad)
aad
fld
mov
jbe
jp
hlt
push
mov
mov
jge
inc
arpl
(bad)
imul
mov
fistp
pop
mov
movs
mov
sub
(bad)
pop
add
outs
out
test
add
add
add
repnz
adc
in
lahf
ror
jns
mov
je
jmp
pop
jb
ja
mov
xchg
fwait
ja
mov
mov
xor
mov
addr16
ins
lods
ins
int
std
in
cmp
jmp
loope
mov
add
out
or
add
add
add
dec
int
call
mov
stc
repnz
outs
jg
sbb
mov
ins
stos
fwait
jbe
stos
mov
idiv
mov
mov
and
pop
cwde
dec
push
jae
sub
inc
mov
add
add
xor
int
int
test
(bad)
cli
jmp
jecxz
(bad)
rcl
enter
mov
or
push
pop
div
push
mov
push
cwde
cmp
mov
int
ss
pop
cmps
or
sbb
add
sbb
add
add
mov
mov
stos
in
ja
fidivr
comiss
scas
mov
gs
jne
test
jmp
jmp
movs
(bad)
mov
jnp
sub
popf
fnstcw
out
test
add
add
add
repnz
cwd
aam
in
lahf
ror
leave
les
cmp
pushf
jae
cmp
cwde
ret
pop
mov
scas
movs
fwait
jae
xchg
fsubr
push
fucomi
mov
sahf
cld
repnz
mov
cmp
dec
ja
xor
stos
mov
dec
out
test
add
add
add
repnz
cwd
aam
test
enter
xchg
jmp
mov
pop
(bad)
lock
ret
push
lock
jmp
xor
in
xor
mov
fadd
add
adc
test
add
mov
push
sti
daa
mov
stos
lods
mov
es
call
adc
pop
fwait
push
pushf
sub
add
lods
push
push
imul
call
dec
xchg
add
(bad)
(bad)
mov
add
add
push
fidivr
dec
add
int
mov
out
mov
in
dec
fwait
push
nop
cmc
je
out
jecxz
lahf
lods
fnstenv
mov
int3
push
mov
pop
out
xchg
pop
add
fmul
add
add
add
xor
int
int
test
in
scas
outs
(bad)
cmps
fwait
outs
sbb
ja
mov
out
mov
fwait
scas
xchg
inc
je
out
jecxz
(bad)
ins
in
cmps
lods
popa
push
mov
cwde
cmp
lods
dec
xchg
xor
(bad)
lds
add
add
push
fidivr
(bad)
cli
jbe
icebp
(bad)
jg
push
loop
fiadd
jae
jnp
outs
(bad)
pop
jg
(bad)
(bad)
xor
xor
ja
fidiv
shl
mov
push
fdiv
pop
add
lds
add
add
push
fidivr
cs
sbb
inc
stc
dec
inc
jnp
loope
mov
(bad)
mov
movs
fwait
jno
pop
fnsave
std
xlat
jnp
neg
clc
outs
outs
jnp
fidiv
pop
xchg
or
imul
mov
add
add
add
add
fwait
ja
mov
jne
into
cmp
dec
pop
and
and
fidiv
lods
mov
stc
test
repnz
jmp
(bad)
xor
in
cmp
lods
inc
xchg
add
loop
pop
or
add
add
add
call
mov
(bad)
sti
pop
pop
and
js
cmp
stos
fwait
jo
sbb
mov
std
xlat
jg
neg
(bad)
xchg
cmp
lods
xchg
jp
lds
add
fmul
add
add
add
xor
int
int
push
imul
fisttp
push
mov
sbb
je
mov
scas
out
scas
cmp
(bad)
cmp
(bad)
ins
mov
(bad)
push
jecxz
mov
mov
push
sbb
(bad)
push
fdiv
mov
add
add
push
fidivr
std
mov
cdq
jne
pop
xchg
jnp
mov
pop
outs
mov
cmp
cmc
sbb
sar
sub
rcl
jnp
in
mov
test
jns
jnp
loope
push
push
jno
sbb
adc
test
add
mov
aam
not
arpl
ins
mov
push
loop
mov
sahf
dec
xchg
pop
jle
ja
push
lock
pop
fstp
xchg
ret
push
adc
rcl
jnp
in
xor
imul
outs
add
mov
add
add
gs
fwait
mov
cmp
mov
mov
mov
push
out
cmp
add
mov
cmp
fcomp
sti
pop
mov
mov
push
sbb
or
inc
add
add
add
mov
mov
aam
not
fs
xchg
leave
jmp
mov
loope
pop
out
scas
ret
add
mov
arpl
(bad)
jge
fnstenv
sahf
fcmovnu
cmp
into
(bad)
push
fdiv
add
jnp
add
add
add
push
cmps
mov
push
sti
jmp
jno
and
stc
in
daa
ret
xchg
xchg
jne
ja
push
sub
rol
adc
fdiv
(bad)
and
mov
add
add
add
add
retf
out
ss
in
push
call
mov
jmp
pop
ficomp
push
scas
(bad)
push
fnsave
dec
cmp
pusha
jnp
xchg
mov
sbb
out
sbb
add
add
add
add
push
fidivr
sti
jmp
mov
xchg
adc
dec
rcl
fucom
leave
xchg
xchg
popf
ja
fstp
push
(bad)
cs
sbb
lods
cli
aas
jle
ins
das
fcomp
mov
mov
xchg
sbb
and
pop
or
add
add
add
dec
sub
dec
cmp
inc
pop
movs
stc
popf
jg
stc
out
std
outs
loope
pop
push
push
jne
sbb
(bad)
push
arpl
push
fs
xchg
cmp
(bad)
or
jmp
add
add
add
add
push
fidivr
(bad)
stos
or
jge
frstor
sahf
jns
pop
jb
and
adc
pop
pop
test
push
mov
jecxz
and
adc
(bad)
in
mov
jnp
lds
add
mov
add
add
gs
fwait
inc
push
cmps
fistp
nop
dec
aaa
fnsave
cmp
scas
shr
neg
addr16
idiv
mov
movs
scas
out
sub
jmp
addr16
jno
scas
jnp
fbstp
scas
loop
sub
or
add
add
add
int
test
(bad)
or
pushf
mov
outs
mov
mov
stos
stos
mov
(bad)
xor
js
xor
mov
dec
fldenv
dec
scas
ret
(bad)
and
push
push
jno
push
add
dec
out
test
add
add
add
repnz
xchg
aam
not
or
out
addr16
out
mov
mov
leave
(bad)
sbb
fdivrp
or
retf
push
ja
push
psadbw
dec
jnp
sti
aas
mov
push
neg
mov
call
add
add
add
add
push
fidivr
(bad)
call
mov
out
out
mov
test
push
mov
dec
cmp
shl
in
mov
mov
out
mov
mov
add
add
push
fidivr
jg
inc
push
cmp
xor
icebp
out
cli
jmp
daa
sub
xor
jp
(bad)
xor
clc
mov
jnp
test
mov
hlt
(bad)
fnsave
jnp
add
add
add
push
cmps
mov
xor
sbb
fs
jb
jne
jmp
push
dec
jne
jnp
repz
sahf
aam
test
addr16
fnsave
cld
mov
and
das
add
add
add
add
xchg
aaa
out
mov
inc
xchg
pop
jp
in
xchg
pop
(bad)
push
call
mov
iret
jo
scas
out
sub
dec
jge
cmc
cmp
dec
push
mov
cld
xor
sub
fidiv
pop
je
ja
add
int
pop
or
add
add
add
inc
popf
push
lds
fdiv
std
icebp
out
fisubr
mov
mov
push
jne
jmp
sti
repnz
mov
mov
add
mov
add
add
gs
fwait
inc
push
ja
pop
xor
jg
cdq
mov
jle
in
cmps
mov
push
jnp
push
(bad)
ja
mov
ins
sysexit
xor
(bad)
(bad)
mov
out
das
add
add
add
add
xchg
aaa
out
mov
enter
xchg
mov
xor
out
jnp
jnp
xor
data16
cmp
mov
test
add
jno
adc
shr
test
add
add
add
repnz
adc
ss
add
in
sbb
dec
mov
sbb
xchg
jnp
xor
data16
cmp
mov
not
jnp
int
cmps
mov
mov
scas
loop
daa
add
add
add
add
int
test
in
out
mov
dec
cmp
(bad)
aaa
mov
outs
mov
sbb
sti
in
mov
cmp
(bad)
cmp
clc
addr16
fs
test
out
std
jbe
mov
add
add
add
add
int
test
jbe
add
jmp
fstp
out
jmp
sub
pop
mov
cmp
push
neg
loopne
xchg
mov
data16
add
add
add
add
xchg
aaa
out
ss
inc
in
cmps
pop
xor
in
sbb
push
call
mov
jbe
pop
push
jno
adc
data16
jge
pop
fs
fs
mov
imul
xor
xlat
adc
rcr
test
add
add
add
repnz
pop
push
mov
enter
sub
jne
pop
out
jge
lock
pop
lds
xor
cmp
xchg
in
test
neg
frstor
mov
add
add
add
add
retf
out
ss
fcmovnu
dec
pcmpgtb
dec
call
jnp
fldcw
lods
fdivr
pushf
popa
outs
pop
int
dec
xor
cmp
xchg
in
sub
pop
dec
retf
pop
add
mov
mov
adc
int
pop
or
add
add
add
movs
dec
mov
push
enter
stos
aas
fidivr
neg
addr16
mov
or
pop
inc
(bad)
push
fs
gs
mov
imul
(bad)
mov
push
test
add
xor
xor
addr16
jno
(bad)
js
cmp
mov
fdivr
fwait
popa
jns
lds
(bad)
push
mov
jnp
mov
imul
(bad)
fnsave
add
jnp
add
add
add
push
cmps
mov
sbb
cmp
aaa
fdiv
scas
shr
mov
ss
jge
cld
pop
push
jno
adc
mov
ins
outs
fstp
imul
pusha
scas
or
jge
or
push
fdiv
add
jnp
add
add
add
push
cmps
mov
pop
shr
repz
aas
jg
call
int
mov
sahf
cwde
jb
mov
scas
loop
and
bound
mov
xor
fidiv
mov
and
add
and
add
add
add
add
xchg
aaa
out
ss
imul
push
fs
aad
dec
(bad)
mov
mov
(bad)
(bad)
imul
std
int
cwde
scas
loop
and
bound
mov
pop
mov
xchg
gs
add
pop
(bad)
sbb
and
add
add
add
add
xchg
aaa
out
ss
fcmovnu
int
in
lahf
(bad)
mov
out
mov
mov
and
daa
push
sti
and
mov
fidivr
mov
(bad)
fnsave
jnp
add
add
add
push
cmps
mov
cmp
outs
jbe
(bad)
(bad)
mov
(bad)
fwait
aad
mov
xchg
mov
pop
fstp
adc
fist
test
cwde
in
mov
gs
or
std
jne
mov
add
add
add
add
int
aam
jbe
add
stc
in
cmc
(bad)
fwait
aad
neg
lahf
int3
xor
sbb
std
jne
stos
stos
mov
sahf
dec
in
(bad)
dec
mov
ins
scas
xor
out
scas
jecxz
std
jno
or
pop
or
add
add
add
mov
enter
inc
std
icebp
data16
test
pop
aas
(bad)
int
inc
push
fs
test
jb
stos
jecxz
std
jno
std
add
int
pop
or
add
add
add
dec
int
aaa
cmp
mov
jbe
scas
shr
(bad)
cmp
rcr
ja
adc
mov
push
cmp
data16
in
mov
jns
lock
scas
arpl
pop
lds
add
mov
add
add
gs
fst
fmul
fs
stc
out
push
jle
popa
pop
movs
cmp
cmp
fldenv
ins
fdivr
jmp
dec
push
jno
adc
mov
ins
scas
fstp
pusha
scas
or
mov
add
add
add
add
mov
push
fucom
inc
xchg
pop
jle
in
xchg
pop
(bad)
push
call
mov
or
std
jne
test
mov
fimul
xchg
dec
mov
ins
iret
xor
xlat
push
out
(bad)
cmp
sub
sbb
add
iret
mov
add
add
push
fidivr
outs
jb
jmp
mov
xor
cmp
cmp
jge
(bad)
sti
jmp
inc
push
jno
adc
mov
ins
scas
fstp
pusha
scas
or
scas
stos
mov
mov
jp
add
add
add
jl
dec
jge
outs
jb
not
dec
jmp
sub
in
pop
(bad)
pusha
pop
lds
(bad)
int
inc
push
fs
jbe
in
jmp
int
or
mov
xchg
add
stc
fcos
daa
add
add
add
add
aad
repnz
outs
dec
sar
std
hlt
rcr
sti
fcmovu
jmp
mov
xlat
mov
mov
mov
lea
pusha
or
add
add
add
movs
sbb
xchg
outs
jg
fcmovnbe
inc
cs
loopne
pcmpeqd
imul
mov
inc
pop
(bad)
(bad)
jmp
mov
push
out
mov
(bad)
add
sbb
add
add
nop
mov
movs
pop
and
cwde
imul
dec
cmp
lds
mov
out
hlt
addr16
imul
sti
mov
sbb
add
(bad)
rcl
add
add
add
dec
fisttp
adc
mov
dec
xor
fldenv
mov
les
mov
out
hlt
addr16
neg
mov
push
out
mov
(bad)
add
sbb
add
add
nop
test
dec
mov
jmp
inc
arpl
mov
pop
jge
idiv
imul
mov
fild
lods
ss
xor
out
imul
jecxz
sbb
ret
add
add
add
dec
jp
xchg
in
mov
dec
xor
lds
xchg
movs
xchg
pop
fidivr
(bad)
add
(bad)
js
cmps
aas
(bad)
mov
fmul
std
fldcw
mov
add
add
add
add
movs
lods
sub
inc
dec
xchg
retf
cs
sbb
inc
or
inc
mov
and
fsubrp
iret
neg
or
pop
imul
pop
add
add
add
mov
xchg
sbb
jo
fnsave
dec
sbb
mov
cmp
sti
fcmovnu
mov
(bad)
test
addr16
dec
fldcw
mov
aas
jnp
icebp
(bad)
lldt
or
add
add
add
cmp
dec
jp
xchg
gs
sbb
outs
mov
xchg
data16
sub
push
jne
outs
jg
mov
and
fsubrp
iret
neg
or
(bad)
in
xor
inc
in
xor
add
cli
cmp
jmp
ret
xchg
mov
jb
inc
aaa
fidivr
xor
and
(bad)
div
pop
icebp
(bad)
psubsb
(bad)
fstp
std
fstp
in
mov
pop
and
js
pop
add
add
add
add
dec
xchg
mov
dec
xor
retf
pop
inc
inc
test
xor
mov
or
add
jp
popa
add
add
add
cmp
popa
sbb
mov
ret
in
ret
add
add
add
ret
inc
xor
ret
add
add
add
cli
xor
test
or
xchg
arpl
or
add
add
add
popa
or
adc
lds
retf
adc
add
(bad)
adc
add
add
add
call
sub
rcl
and
inc
mov
sub
add
add
add
xchg
sub
pop
adc
and
pop
add
add
add
add
mov
push
inc
pop
xchg
mov
add
add
add
xchg
xchg
jb
popa
add
add
add
cmp
popa
sbb
mov
ret
in
ret
add
add
add
ret
inc
xor
ret
add
add
add
cli
xor
test
or
xchg
arpl
or
add
add
add
popa
or
adc
lds
retf
adc
add
(bad)
adc
add
add
add
call
sub
rcl
and
inc
mov
sub
add
add
add
xchg
sub
pop
adc
and
pop
add
add
add
add
mov
push
inc
pop
xchg
mov
add
add
add
xchg
xchg
jb
popa
add
add
add
cmp
popa
sbb
mov
ret
in
or
add
add
add
or
dec
xchg
inc
test
in
out
adc
adc
call
(bad)
test
mov
sub
jmp
lds
push
add
out
call
add
add
fwait
ja
fst
popa
popf
sti
jmp
or
test
mov
punpcklwd
add
add
add
add
inc
xor
sub
mov
xchg
fisubr
cdq
sbb
xor
add
add
add
add
xchg
aaa
out
ss
not
rcl
sub
xchg
dec
or
sbb
add
mov
add
add
gs
fst
popa
popf
sti
jmp
or
test
mov
popa
add
add
add
add
int
sub
xor
sti
and
mov
rcl
add
add
add
inc
cdq
repnz
data16
adc
pop
out
cmp
ret
(bad)
test
sub
pop
add
test
add
mov
mov
lods
jae
sbb
in
xchg
aam
leave
les
xchg
and
xor
jnp
add
add
add
push
cmps
mov
lds
(bad)
mov
push
mov
adc
add
add
add
add
push
fidivr
jmp
pop
pop
inc
pop
mov
jnp
mov
xor
test
or
dec
in
or
add
add
add
inc
xor
sub
mov
xchg
fisubr
cdq
sbb
xor
add
add
add
add
xchg
aaa
out
ss
not
rcl
sub
xchg
dec
or
sbb
add
mov
add
add
gs
fst
popa
popf
sti
jmp
or
test
mov
popa
add
add
add
add
int
sub
xor
sti
and
mov
rcl
add
add
add
inc
cdq
repnz
data16
adc
pop
out
cmp
ret
(bad)
test
sub
pop
add
test
add
mov
mov
lods
jae
sbb
in
xchg
aam
leave
les
xchg
and
xor
jnp
add
add
add
push
cmps
mov
lds
(bad)
mov
push
mov
adc
add
add
add
add
push
fidivr
jmp
pop
pop
inc
pop
mov
jnp
mov
xor
test
or
dec
in
or
add
add
add
inc
xor
sub
mov
xchg
fisubr
cdq
sbb
xor
add
add
add
add
xchg
aaa
out
ss
not
rcl
sub
xchg
dec
or
sbb
add
mov
add
add
gs
fst
popa
popf
sti
jmp
or
test
mov
popa
add
add
add
add
int
sub
xor
sti
and
mov
rcl
add
add
add
inc
cdq
repnz
data16
adc
pop
out
cmp
ret
(bad)
test
sub
pop
add
test
add
mov
mov
lods
jae
sbb
in
xchg
aam
leave
les
xchg
and
xor
jnp
add
add
add
push
cmps
mov
lds
(bad)
mov
push
mov
adc
add
add
add
add
push
fidivr
jmp
pop
pop
inc
pop
mov
jnp
mov
xor
test
or
dec
in
or
add
add
add
inc
xor
sub
mov
xchg
fisubr
cdq
sbb
xor
add
add
add
add
xchg
aaa
out
ss
not
rcl
sub
xchg
dec
or
sbb
add
mov
add
add
gs
fst
popa
popf
sti
jmp
or
test
mov
popa
add
add
add
add
int
sub
xor
sti
and
mov
rcl
add
add
add
inc
cdq
repnz
data16
adc
pop
out
cmp
ret
(bad)
test
sub
pop
add
test
add
mov
mov
lods
jae
sbb
in
xchg
aam
leave
les
xchg
and
xor
jnp
add
add
add
push
cmps
mov
lds
(bad)
mov
push
mov
adc
add
add
add
add
push
fidivr
jmp
pop
(bad)
cli
inc
sbb
sbb
add
mov
add
add
gs
fst
popa
popf
sti
or
or
xchg
test
add
add
add
repnz
data16
adc
pop
out
add
sub
xor
jnp
add
mov
and
enter
cmp
sub
imul
jb
cmp
outs
enter
jmp
inc
bnd
aas
inc
pop
sub
retf
mov
and
sbb
mov
add
xchg
mov
lds
(bad)
mov
test
or
dec
in
or
mov
cs
enter
rcl
(bad)
(bad)
mov
in
mov
sub
or
xor
mov
in
sub
dec
or
leave
push
jb
fsubr
test
scas
enter
jnp
fldcw
dec
cmp
(bad)
pop
cs
jae
add
mov
ja
cdq
push
mov
add
in
xchg
jmp
pop
mov
test
add
sbb
adc
jmp
in
mov
dec
xchg
mov
fmul
stc
test
outs
sub
dec
retf
addr16
stc
lods
fcomp
xchg
and
ins
sar
mov
retf
push
loope
daa
add
add
xchg
mov
lds
(bad)
mov
test
or
dec
in
or
dec
inc
gs
pop
and
in
popf
jnp
cwde
std
mov
mov
and
adc
movs
out
mov
daa
lods
or
les
sar
aaa
out
ss
not
call
popa
add
mov
into
gs
inc
loopne
nop
jge
xor
jo
push
fnstcw
repnz
sub
(bad)
or
repnz
scas
(bad)
shl
in
sti
mov
and
lods
push
sub
stc
stc
retf
(bad)
in
(bad)
cmps
fist
in
inc
cdq
pop
mov
out
dec
pop
test
and
dec
aam
scas
inc
call
mov
retf
(bad)
cmp
retf
scas
cmps
pop
retf
(bad)
gs
fisub
xchg
fwait
ja
fst
popa
popf
sti
or
or
xchg
(bad)
lahf
sbb
ds
(bad)
adc
cmp
push
mov
dec
ret
adc
jne
pop
jecxz
daa
sbb
jnp
in
sti
sbb
mov
push
mov
jnp
mov
pop
ins
xor
not
retf
idiv
add
out
and
cmps
les
and
pop
outs
or
test
sti
inc
and
mov
imul
mov
cmc
cmp
or
and
repnz
jge
mov
retf
addr16
mov
mov
test
stos
hlt
loopne
sbb
or
pop
xchg
leave
neg
adc
out
adc
(bad)
or
xchg
int
fucomip
cld
ja
mov
lds
mov
or
test
outs
xchg
lahf
leave
xlat
fs
mov
jne
push
aas
add
outs
fisubr
dec
ins
and
or
inc
pop
sbb
push
jb
lods
mov
jmp
out
sub
imul
fsubr
ja
pop
mov
mov
jmp
and
push
push
pop
aas
add
popf
sbb
mov
hlt
sbb
(bad)
cmp
jb
cld
inc
test
fld
adc
inc
in
and
neg
push
ficom
lock
(bad)
repnz
pop
jl
lods
daa
dec
jl
sub
xchg
int
nop
les
xchg
add
(bad)
sbb
retf
xor
cmp
in
out
test
jnp
adc
adc
fisubr
jns
add
out
mov
jg
fs
arpl
neg
mov
xchg
in
push
outs
(bad)
jge
push
mov
popf
imul
(bad)
adc
arpl
pop
jecxz
ret
ss
clc
mov
cs
test
push
mov
push
pushf
and
pop
das
retf
cmp
inc
xor
jo
fnstcw
retf
mov
mov
js
push
and
mul
lea
sub
fucom
bound
pop
in
and
mov
clc
mov
xor
stos
jne
neg
ja
es
mov
leave
outs
dec
out
mov
cld
js
je
neg
mov
inc
pop
into
xchg
jns
jae
jmp
inc
jno
sbb
jle
out
cmp
add
fidivr
sbb
(bad)
cmp
dec
into
ds
or
sahf
das
pop
adc
ret
fs
pop
cmp
mov
sbb
ss
jb
cmp
mov
inc
jecxz
aas
ficomp
ret
sbb
mov
push
cmp
pop
iret
imul
adc
jge
jnp
jae
cmp
jge
imul
xchg
ret
(bad)
iret
rcr
mov
jmp
punpckldq
pop
jecxz
ret
jae
push
repnz
push
fcomp
and
(bad)
(bad)
cmp
mov
retf
movs
js
pop
enter
xchg
arpl
(bad)
sub
inc
add
sti
icebp
(bad)
adc
push
ss
mov
rep
xor
and
fcomp
sub
scas
fwait
and
(bad)
sbb
pop
sub
ror
mov
mov
clc
clc
sbb
test
jecxz
ret
mov
jle
outs
or
stos
(bad)
icebp
push
push
(bad)
leave
jle
loop
stc
lahf
push
mov
xchg
jnp
inc
ret
and
cli
adc
mov
sar
test
mov
xor
test
xchg
aaa
out
ss
test
in
sti
arpl
xor
jb
mov
jmp
mov
xor
loope
imul
push
push
pop
aas
add
mov
lods
sub
(bad)
adc
sbb
arpl
aad
sti
(bad)
and
les
mov
xchg
les
inc
rol
and
mov
mul
lea
sub
sar
mov
int3
fidivr
add
out
cmps
push
daa
fcos
mov
dec
jb
add
and
fidivr
xor
lods
pop
pop
dec
inc
in
fs
adc
cld
out
xchg
pop
(bad)
clc
(bad)
leave
retf
in
mov
sub
xchg
and
les
cmp
mov
ins
lea
mov
out
or
movs
test
pop
out
jno
xor
jnp
pop
aad
mov
mov
pop
ss
dec
and
dec
jp
cmp
arpl
dec
and
mov
das
jl
push
mov
out
faddp
fs
std
lahf
repnz
or
and
inc
or
mov
xchg
xchg
or
mov
(bad)
fst
cwde
mov
mov
retf
addr16
(bad)
fidivr
xor
gs
(bad)
xchg
std
and
inc
push
mov
jmp
jl
adc
jno
add
xchg
cmc
fist
sbb
dec
adc
cmp
sbb
push
test
es
mov
push
scas
mov
shl
sub
bndstx
leave
cmp
fdivr
popf
mov
pop
neg
scas
sub
sbb
std
stos
cmp
sar
inc
mov
pop
(bad)
adc
inc
fwait
pop
in
sti
and
(bad)
(bad)
out
pop
aam
dec
mov
mov
(bad)
fild
gs
mov
ins
add
std
sbb
stos
cli
out
je
mul
lea
sub
fidivr
pop
mov
sub
leave
jbe
mov
mov
pushf
jae
cmp
mov
aaa
fldenv
xor
dec
jle
cmc
mov
cmp
pop
aas
add
iret
jle
in
clc
jl
popa
imul
adc
pop
jns
sub
gs
icebp
test
lds
jp
inc
ret
(bad)
aad
loop
xchg
jno
pop
outs
out
lods
fnstenv
jnp
push
push
push
mul
lea
sub
movs
inc
in
ret
cs
fisubr
imul
pop
or
mov
(bad)
daa
iret
aas
iret
mov
adc
sbb
jbe
repnz
jmp
push
pop
daa
mov
cmps
jnp
lods
sbb
rol
inc
icebp
(bad)
aaa
jbe
popa
imul
adc
push
outs
(bad)
mov
retf
retf
adc
ret
daa
in
mov
or
les
pop
xchg
cmc
imul
(bad)
out
xchg
sbb
pop
xchg
xor
pop
outs
or
test
clc
movs
scas
fcmove
(bad)
bound
inc
xor
fldcw
fst
call
mov
(bad)
xchg
jge
fnsave
sbb
ins
cwde
sti
sbb
cmps
es
cmp
pop
aas
add
rol
push
fisttp
and
or
cmp
mov
outs
mov
test
in
mov
jge
ss
sub
imul
lods
sub
fidivr
js
or
in
pop
pop
dec
mov
jb
pusha
xchg
pop
push
in
mov
inc
inc
aad
fldenv
and
sti
pop
aad
mov
push
pop
aas
add
xlat
outs
loop
jno
sbb
(bad)
cmp
fild
(bad)
sub
push
sti
out
push
sti
fiadd
mov
sbb
(bad)
shl
imul
dec
retf
jle
xor
fsubr
add
mov
sti
mov
fnsave
pop
xchg
inc
push
jns
jg
adc
mov
add
xor
jge
push
mov
in
(bad)
push
mov
lock
xor
cmp
out
xor
or
cmp
sub
mov
in
mov
test
in
or
test
mov
lahf
pop
and
(bad)
fwait
stos
mov
sub
mov
in
and
mov
out
into
cmp
dec
std
mov
inc
popa
jbe
stc
out
mov
(bad)
xchg
in
icebp
xor
in
daa
fidivr
(bad)
mov
ins
lea
mov
daa
jg
mov
inc
mov
and
adc
pusha
pop
das
mov
pop
adc
icebp
retf
div
xchg
mov
gs
aas
ficomp
ret
mov
mov
pop
pop
mov
repnz
aaa
frstor
out
mov
or
ficom
inc
sub
retf
addr16
jnp
pushw
outs
lods
arpl
adc
daa
in
and
(bad)
jne
jnp
cmp
in
pop
(bad)
sub
push
icebp
test
mov
(bad)
pop
push
in
or
xchg
sub
jmp
sub
lahf
(bad)
hlt
cmps
xchg
daa
lahf
jl
jg
adc
jp
lds
xchg
scas
jle
stos
out
imul
xchg
and
outs
cmp
push
pop
aas
add
fbld
lods
jne
sbb
(bad)
cmp
adc
mov
xchg
adc
mov
cmp
inc
fs
dec
mov
sub
ret
sbb
(bad)
into
adc
stos
ret
mov
data16
test
inc
mov
cli
mov
push
(bad)
mov
test
dec
call
xchg
sbb
sar
sbb
cmc
mov
inc
sbb
xchg
dec
popa
jle
adc
es
cmp
daa
jecxz
test
into
xchg
and
in
xor
mov
outs
(bad)
jb
pop
bswap
dec
lods
addr16
xchg
jnp
pusha
aas
ficomp
ret
jnp
in
mov
dec
fwait
in
sub
pop
or
fnop
loop
(bad)
outs
xor
inc
std
xor
xchg
mov
fsub
aaa
xor
xchg
mov
lods
ja
sbb
(bad)
cmp
lds
dec
xchg
test
in
cmp
rcr
fist
jge
lods
mov
stos
les
stos
dec
int3
into
push
scas
and
mov
js
or
outs
mov
das
add
sti
sub
ins
mov
mov
cdq
ins
pop
popa
inc
or
mov
pop
xchg
(bad)
jo
sbb
jle
out
dec
outs
retf
cld
loop
jns
sbb
(bad)
cmp
sub
mov
test
cmp
inc
std
fild
std
push
and
movs
(bad)
fidiv
pop
xchg
stos
jno
pop
outs
or
sub
(bad)
and
add
(bad)
sub
xchg
neg
mov
gs
ins
neg
out
div
push
ja
add
mov
clc
clc
sbb
call
or
mov
adc
call
cs
std
jnp
data16
fist
retf
mov
and
adc
jg
cmp
(bad)
aaa
xchg
mov
adc
inc
xlat
dec
inc
sbb
pop
and
neg
xlat
lds
(bad)
out
nop
test
div
add
xchg
add
push
mov
fcomp
(bad)
adc
sahf
iret
or
pop
sub
mov
call
fidivr
ret
xor
mov
ret
pop
pop
mov
sti
icebp
(bad)
adc
jg
icebp
neg
mov
jnp
jg
nop
imul
mov
mov
test
div
add
xchg
outs
les
pop
xor
fild
pop
mov
in
js
mul
mov
test
stos
adc
jecxz
xor
lods
in
and
call
or
neg
imul
xchg
push
cmp
and
sbb
push
sbb
and
lock
jmp
or
jno
cmp
pop
aas
add
mov
mov
js
pop
add
sub
push
xchg
mov
test
not
outs
pop
mov
xor
dec
or
mov
sar
pop
(bad)
in
(bad)
sbb
(bad)
sbb
mov
mov
frstor
mov
adc
fsub
ror
jle
add
xor
stos
out
jmp
test
push
push
pop
aas
add
mov
xor
pop
jecxz
ret
add
mov
push
xchg
jge
mul
in
dec
mov
sub
push
push
loop
popf
adc
sbb
mov
fs
icebp
(bad)
and
sbb
mov
sti
in
mov
fild
hlt
pop
sbb
ror
ja
jns
aaa
inc
inc
adc
test
jnp
mov
ret
stos
sti
jp
and
shl
mov
fbstp
imul
cwde
popa
(bad)
out
mov
stos
mov
fisttp
popf
or
aas
mov
call
js
(bad)
loop
dec
les
shl
pop
outs
or
sub
mov
or
mov
push
dec
and
outs
xchg
std
cmc
lods
mov
jb
and
push
push
jne
xchg
sub
mov
clc
clc
sbb
std
fwait
mov
ins
lea
or
ja
push
dec
frstor
xor
dec
mov
adc
mov
xchg
loop
lahf
push
jo
sbb
adc
inc
(bad)
xor
icebp
pop
dec
fsubr
shl
pop
jns
outs
or
scas
fs
jns
jno
sub
jmp
loope
addr16
pop
pop
mov
ret
xchg
(bad)
mov
inc
retf
sbb
mov
jae
mov
arpl
leave
mov
lods
dec
mov
fmul
push
sti
scas
sub
fidivr
test
jmp
inc
cmps
out
jg
sti
mov
mov
rol
inc
cli
lds
ret
(bad)
iret
shl
ja
push
and
or
sbb
(bad)
ins
jne
daa
inc
and
pop
adc
pop
mov
jmp
dec
cmp
arpl
jae
fstp
push
vmovd
sti
jns
ds
mul
imul
aas
and
mov
(bad)
(bad)
jno
dec
inc
xchg
outs
(bad)
cmp
pop
pop
inc
push
jae
fwait
dec
(bad)
mov
clc
clc
sbb
jecxz
push
or
imul
js
pop
push
adc
sbb
sbb
add
push
cmp
mov
sub
lock
mov
and
pusha
aas
ficomp
ret
mov
test
mov
cmps
jne
hlt
pop
push
mov
in
xchg
rcl
mov
fnsave
cmp
shr
imul
jne
div
xchg
pop
sbb
arpl
inc
or
imul
js
and
fsub
xchg
pop
or
(bad)
and
adc
pop
test
scas
dec
mov
and
mov
pusha
aas
ficomp
ret
fistp
movs
jno
in
jb
add
imul
jmp
mov
dec
push
or
pop
push
push
jae
lahf
dec
les
mov
mov
and
ins
pushf
mov
mov
sti
cmp
mov
xchg
test
pop
test
dec
jmp
and
add
pop
inc
mov
and
mov
ja
outs
mov
outs
fild
push
pop
stc
retf
xlat
ror
jmp
push
push
pop
aas
add
mov
ret
xchg
sub
mov
mov
mov
imul
cmp
imul
mov
jne
sar
test
adc
(bad)
mov
pop
mov
xchg
dec
outs
mov
mov
cld
daa
cdq
ja
jns
xlat
ror
in
icebp
xor
in
cs
shl
popa
imul
clc
pushf
sub
into
and
hlt
cmp
lods
fdivr
pop
sub
aam
stc
ret
and
ss
movs
cs
(bad)
aaa
xchg
mov
popf
sahf
sbb
mov
(bad)
(bad)
sti
jmp
inc
inc
aam
(bad)
push
jnp
sti
pop
call
sbb
jle
scas
cmps
addr16
js
dec
xchg
xor
mov
adc
mov
(bad)
fcmovnbe
mov
mov
loop
movs
adc
pop
or
and
sahf
nop
pop
les
mov
sbb
adc
(bad)
jns
mov
aam
test
sub
inc
repnz
cmp
mov
fisttp
imul
jp
add
test
jnp
call
sbb
sti
lea
fldcw
iret
sub
dec
cmp
daa
dec
xchg
stc
(bad)
and
shl
repz
loop
dec
popf
jo
pop
outs
or
mov
out
mov
push
(bad)
movs
dec
(bad)
mov
fsub
jnp
inc
inc
aam
addr16
jns
sti
call
mov
loope
addr16
jp
pushw
out
jno
or
ins
cmp
loopne
test
popf
sub
jge
in
lea
dec
xchg
mov
gs
push
xchg
icebp
adc
adc
jmp
dec
xor
adc
icebp
imul
aam
test
mov
mov
jecxz
dec
fisttp
pop
mov
mov
lock
xor
sbb
adc
popa
imul
cmp
out
or
mov
sub
aad
mov
mov
in
shl
in
cmps
push
jno
pop
scas
sbb
fdivr
leave
push
icebp
(bad)
movs
outs
cmp
(bad)
aaa
xchg
int3
and
jle
xchg
fidivr
jne
mov
inc
aam
sbb
pop
lds
out
xor
rcl
cmps
xor
(bad)
lds
mov
xor
test
aad
popf
jge
mov
popa
mov
arpl
jmp
mov
popw
jmp
xchg
js
push
inc
sbb
(bad)
sbb
mov
std
sbb
cmps
test
pop
cmp
leave
daa
jne
and
jmp
hlt
mov
sub
lock
xor
std
pop
mov
ret
xchg
mov
(bad)
in
mul
fwait
mov
outs
aas
test
ficom
xor
jecxz
and
sti
dec
nop
fidivr
pop
cmp
mov
fwait
mov
jmp
pop
arpl
ins
mov
cmp
clc
sbb
in
adc
(bad)
cmps
out
sbb
(bad)
cmp
mov
ds
stc
mov
aad
or
mov
fiadd
xchg
fsub
sar
pop
out
xchg
mov
stc
mov
inc
mov
or
fstp
adc
xor
xchg
sbb
cmps
sub
pop
outs
or
mov
jmp
sbb
mov
jne
aas
ror
xor
pushf
mov
xor
mov
push
leave
inc
or
into
aam
(bad)
out
push
loop
cmp
sbb
aas
adc
xchg
std
pop
push
xor
mov
xchg
ja
push
bound
cmp
lods
outs
mov
jecxz
push
xchg
std
in
jns
test
ds
cli
lea
daa
mov
cmps
retf
mov
jle
aad
pop
in
arpl
jecxz
cli
push
test
adc
test
sub
mov
loop
mov
cmp
outs
adc
aas
test
dec
(bad)
in
inc
cdq
pop
mov
mul
lea
sub
out
das
enter
sub
mov
fld
ficom
adc
sbb
imul
repz
sbb
and
xchg
ds
fs
icebp
push
mov
jecxz
ret
adc
xlat
mov
mov
xchg
ins
(bad)
xor
mov
(bad)
out
fisubr
fsub
push
mov
sub
addr16
rcl
push
fisttp
pop
xchg
mov
cmps
les
mov
sbb
adc
std
inc
dec
sar
dec
jmp
mov
inc
je
dec
aaa
and
pop
outs
sbb
jmp
(bad)
jo
sbb
jle
push
cmps
jae
jnp
jmp
fistp
or
ins
mov
cld
(bad)
(bad)
clc
stos
rol
lods
fidivr
rcl
jecxz
cmp
fsubrp
mov
pop
xchg
gs
sbb
or
nop
stos
mov
(bad)
sbb
sti
aaa
xchg
lahf
sti
sahf
xchg
sbb
rol
cmp
push
xchg
mov
xor
or
or
out
push
inc
jge
jne
aas
shl
sub
dec
mov
rcr
mov
xchg
jne
pop
(bad)
jge
jne
jge
shl
pushf
in
stos
add
aad
inc
fcomp
addr16
out
std
pop
push
xor
add
dec
iret
xchg
push
mov
inc
ficom
out
(bad)
mov
inc
gs
push
mov
mov
jmp
std
jnp
add
fdivrp
popf
les
icebp
(bad)
movs
or
outs
inc
push
(bad)
bound
mov
ins
and
add
mov
iret
adc
jnp
lds
jae
mov
sub
iret
mov
outs
mov
push
xchg
sbb
imul
mov
lock
aad
aas
mov
cmp
adc
pop
jl
pop
push
aam
sbb
cld
outs
xchg
in
pop
mov
adc
pop
push
mov
repnz
jmp
lods
pop
test
pop
mov
in
cmc
(bad)
mov
stc
mov
cmp
(bad)
jle
ret
ficomp
or
sub
enter
arpl
mov
mov
xor
jb
movs
mov
mov
mov
mov
cdq
addr16
ja
gs
xlat
jno
sbb
pop
push
mov
(bad)
push
sbb
pushf
int3
push
mov
ins
mov
pop
(bad)
cmp
push
mov
retf
shl
js
push
addr16
dec
call
pop
mov
mov
mov
shr
push
out
mov
dec
mov
in
mov
cmp
xor
adc
mul
mov
leave
and
cmc
scas
add
test
leave
std
dec
dec
sub
inc
bnd
call
fs
(bad)
dec
fsub
div
hlt
jo
sbb
pop
push
mov
(bad)
push
sbb
pushf
int3
push
rol
sbb
jg
mov
fincstp
pop
ss
pusha
stc
shr
fldenv
neg
cmovnp
fldcw
call
fstp
push
dec
mov
push
ins
dec
loope
dec
xchg
jo
adc
daa
stos
popa
add
xor
jle
xchg
(bad)
js
(bad)
mov
jmp
fdiv
std
jno
and
inc
xchg
jp
sti
(bad)
mov
cmp
ret
(bad)
mov
mov
ret
dec
data16
fbld
cmp
adc
dec
jnp
push
aaa
jbe
stc
mov
pop
scas
cmp
inc
call
lds
cmps
stc
mov
outs
sbb
not
fisubr
add
pop
(bad)
int3
mov
fstp
cmps
loope
add
retf
(bad)
pop
idiv
das
or
scas
mov
(bad)
mov
jmp
sahf
imul
inc
xlat
pop
ja
xor
or
mov
ret
test
call
retf
arpl
adc
icebp
stos
sbb
sbb
jae
sar
popf
and
clc
loope
jl
mov
sbb
cmp
ja
(bad)
test
pop
push
xchg
imul
aas
movs
xchg
into
push
out
imul
test
retf
bound
mov
les
es
add
sar
dec
fucomi
not
icebp
(bad)
scas
je
sahf
aam
std
dec
mov
ss
jb
std
imul
sub
mov
jmp
pop
ja
sbb
jp
cmp
pop
sub
push
sbb
lods
dec
sbb
(bad)
cmp
xor
sbb
test
sub
jle
mov
rcl
outs
xchg
mov
aad
xlat
xor
retf
ja
jne
and
xchg
sbb
sub
fs
in
jnp
jg
in
out
sbb
loop
das
aam
push
daa
cmc
xor
cmp
mov
push
das
call
jle
jge
jbe
mov
add
mov
inc
jne
pop
test
ret
dec
data16
sbb
cmp
xor
cmps
mul
icebp
(bad)
test
scas
adc
dec
stc
or
mov
and
xchg
jge
mov
mov
cmp
xchg
sbb
(bad)
sti
add
sbb
fs
mov
out
cmps
iret
mov
push
test
xor
mov
inc
inc
aam
mov
fdiv
dec
jg
jge
das
sbb
retf
in
stos
imul
idiv
sbb
leave
mov
cwde
inc
in
mov
pusha
call
dec
xchg
daa
les
mov
outs
nop
popa
loop
adc
dec
jge
mov
pop
push
ret
pop
dec
(bad)
dec
ins
fld
hlt
scas
das
ficomp
or
dec
pop
xlat
or
mov
push
dec
aam
je
sub
lea
inc
inc
aam
scas
mov
nop
and
jmp
ret
mov
fst
test
lods
sbb
pop
push
mov
icebp
pop
in
adc
xchg
sbb
icebp
sub
loop
push
push
fld
stc
push
mov
imul
(bad)
ja
iret
and
cli
pusha
jp
retf
ds
mov
shl
cmp
cmp
(bad)
movs
jmp
fcom
adc
hlt
sub
inc
int
cmp
popa
leave
lea
fisubr
das
jnp
add
ret
jge
jbe
das
cmp
pop
cmp
inc
jne
sub
cmp
mov
jno
mov
jnp
push
adc
call
sbb
pop
and
jge
addr16
out
jecxz
out
outs
jge
ficomp
jne
and
and
test
sbb
jnp
push
mov
xor
dec
mov
cmp
out
push
jns
fmulp
inc
inc
inc
mov
dec
push
pop
popa
add
mov
pop
mov
lock
aad
movs
scas
lahf
mov
jno
mov
and
jmp
pop
adc
in
jle
jge
mov
les
lods
or
ds
retf
inc
mov
add
mov
xor
mov
(bad)
(bad)
xchg
test
aam
xchg
retf
inc
lods
sahf
cmp
push
dec
(bad)
mov
mov
scas
(bad)
sub
push
cli
jecxz
jmp
cmp
(bad)
push
(bad)
xchg
js
pop
call
dec
data16
std
pop
sub
into
adc
bound
lds
jnp
mov
(bad)
out
jmp
lods
or
ret
and
dec
mov
(bad)
sbb
jno
inc
ret
sahf
lods
xchg
fdivr
xor
push
loop
push
iret
test
xor
push
jl
adc
push
pop
in
mov
mov
mov
mov
xor
lds
inc
(bad)
adc
sbb
xor
mov
jmp
xchg
lock
dec
int3
jge
mov
xor
in
jb
out
xor
loope
mov
daa
dec
mov
mov
xchg
adc
daa
jmp
push
mov
jmp
jae
call
leave
cld
dec
sti
in
mov
(bad)
cmp
adc
in
push
cmp
fisttp
les
mov
or
(bad)
adc
(bad)
in
mov
sti
stos
js
adc
push
mov
adc
leave
cmp
lods
or
les
sbb
jecxz
cdq
dec
mov
sub
sahf
into
xchg
fdivr
data16
jge
dec
jge
jne
aas
shl
xchg
scas
aas
dec
inc
inc
gs
stc
out
scas
lds
xlat
test
pop
push
mov
in
addr16
mov
mov
mov
mov
add
imul
pop
inc
mov
adc
mov
xchg
popf
fwait
push
sahf
xchg
sbb
mov
imul
mov
sbb
fs
fsubr
int3
aam
cld
dec
aas
(bad)
stc
iret
cmc
(bad)
mov
repnz
div
mov
mov
aam
in
sub
mov
popa
imul
jmp
mov
jo
xchg
cwde
fild
jne
int
adc
mov
xchg
popf
cmp
in
sub
(bad)
and
mov
xor
leave
cli
mov
dec
(bad)
dec
int3
std
push
mov
ins
jmp
inc
jg
mov
outs
jb
mov
pop
cmp
mov
es
stos
push
(bad)
pop
int
sbb
sbb
(bad)
cmp
aam
fst
imul
es
jmp
mov
mov
mov
js
cmp
and
mov
add
fild
jae
dec
jmp
dec
popf
int3
iret
je
adc
adc
cmp
imul
cmc
mov
scas
out
(bad)
xchg
jge
mov
push
cmp
cli
aas
mov
cmp
jnp
imul
cs
push
mov
rcr
not
(bad)
fcomp
loop
pop
rol
mov
and
call
cmp
mov
icebp
(bad)
cmps
addr16
test
mov
and
sub
jge
jbe
jno
mov
lock
xor
push
push
mov
add
dec
cli
aas
xchg
and
pop
jecxz
cdq
push
outs
mov
add
jp
push
mov
fucomip
mov
js
adc
xchg
test
pop
adc
sub
data16
and
lods
inc
int3
cmp
push
mov
fcom
sub
or
adc
dec
aas
std
mov
pop
in
js
jg
jge
das
adc
retf
sti
arpl
lods
hlt
fst
je
movs
pop
(bad)
push
xor
mov
dec
lods
in
sub
not
imul
fcmovnb
xor
xor
jmp
sbb
sub
repz
mov
adc
mov
sbb
xor
jbe
js
shl
jmp
js
add
jno
and
and
mov
in
cmp
out
retf
xor
mov
and
sbb
push
jmp
sar
clc
mov
sbb
mov
(bad)
retf
ds
ja
mov
mov
cld
dec
bound
sub
ficomp
test
mov
jg
fxch
cmp
mov
(bad)
movs
daa
aam
test
jg
jns
jno
and
and
mov
xchg
mov
adc
dec
cli
mov
adc
sbb
leave
mov
mov
lods
fild
sti
imul
add
fisttp
cmp
sar
lods
les
cmp
pop
mov
out
add
cs
or
outs
inc
js
xchg
int
cmp
xchg
sahf
mov
clc
test
and
inc
in
adc
fild
mov
pusha
sub
es
popa
imul
jmp
pop
adc
mov
pop
fwait
push
mov
adc
adc
cmp
pop
mov
fild
mov
cwde
mov
push
test
dec
lods
std
inc
mov
sbb
jns
test
mov
movs
out
ror
adc
dec
cli
mov
(bad)
jecxz
inc
jge
inc
(bad)
in
add
shl
mov
js
push
xor
ja
mov
inc
sbb
xchg
fldlg2
mov
daa
dec
ins
cmp
dec
sub
outs
inc
push
pop
mov
sahf
mov
clc
test
ret
xchg
pop
inc
fmul
or
mul
jae
test
idiv
and
popa
imul
jmp
mov
push
xchg
dec
(bad)
retf
mov
and
mov
arpl
call
in
leave
data16
add
cmp
ret
out
dec
loope
add
jmp
inc
in
adc
(bad)
inc
(bad)
leave
mov
syscall
inc
fcomp
(bad)
leave
mov
jp
bound
(bad)
add
(bad)
loop
inc
xchg
xchg
add
test
(bad)
add
rcl
xchg
fmul
lods
pop
ds
push
test
in
mov
ret
cld
aam
cld
dec
or
mov
and
cmp
dec
sub
and
and
fs
cmp
fdivr
les
js
adc
mov
aas
loop
inc
xchg
(bad)
xchg
fdivr
cli
jecxz
jb
fwait
dec
mov
daa
xor
mov
sbb
repz
lds
ret
cld
aam
cld
dec
or
mov
and
inc
les
mov
pop
push
and
cmp
ins
(bad)
jecxz
inc
cmp
test
(bad)
clc
adc
inc
push
in
and
(bad)
add
pop
retf
(bad)
xlat
das
cmp
xchg
js
sub
fadd
out
adc
jge
mov
iret
les
xchg
mov
adc
push
inc
mov
mov
cmp
and
xchg
sbb
hlt
or
pop
(bad)
out
adc
mov
(bad)
retf
into
mov
sub
call
adc
loopne
mov
ss
mov
lods
mov
mov
clc
test
ret
xchg
pop
inc
fmul
or
out
ja
int3
ficom
dec
(bad)
(bad)
mov
sbb
xor
sub
pop
inc
jnp
nop
sbb
inc
mov
adc
jle
das
ret
in
(bad)
std
sbb
sbb
(bad)
dec
sbb
sub
cdq
jle
mov
cmps
js
push
cmp
sbb
jns
test
mul
out
pop
lahf
imul
adc
stos
ret
(bad)
jno
mov
jp
cmp
fwait
iret
sub
pop
(bad)
jmp
icebp
(bad)
mov
test
add
fdivr
mov
sub
(bad)
and
push
adc
nop
(bad)
jecxz
test
dec
mov
retf
cmps
dec
out
bound
dec
inc
push
pop
or
sub
pop
mov
mov
leave
jle
popa
imul
jmp
sbb
rcr
cli
sub
mov
cmp
js
mov
sub
(bad)
and
push
mov
mov
xor
leave
call
fldenv
sub
sbb
jns
test
imul
out
pop
ficomp
stos
and
mov
mov
pop
mov
xor
dec
ins
cmp
loope
adc
mov
sub
std
sbb
pop
mov
iret
fdivr
cwde
js
jg
cmp
mov
adc
daa
lock
daa
repz
test
mov
les
mov
in
lea
jge
sbb
mov
shl
retf
bound
fstp
ret
xchg
cwde
mov
je
jle
daa
mov
mov
les
inc
xchg
fmul
sub
xchg
out
mov
adc
enter
xor
(bad)
adc
mov
dec
(bad)
jmp
icebp
(bad)
mov
jne
aas
adc
and
dec
or
stos
in
sbb
mov
mov
fcomp
(bad)
adc
mov
js
or
mov
mov
dec
(bad)
jmp
test
lahf
dec
ins
fld
jle
mov
jns
les
inc
fdiv
mov
pop
cli
xor
pop
xchg
mov
clc
test
ret
xchg
pop
inc
fmul
or
inc
lds
inc
mov
(bad)
mov
sbb
fdivr
cmp
jmp
icebp
(bad)
add
lods
sub
jp
leave
jle
cdq
and
mov
js
add
shl
in
jge
std
inc
cli
scas
add
neg
ret
mov
ror
dec
ins
mov
(bad)
(bad)
cld
aam
cld
dec
or
mov
and
mov
popf
and
jecxz
inc
cdq
sbb
(bad)
cmp
daa
pop
cmp
sub
pop
mov
jge
mov
adc
mov
push
pop
fisubr
imul
pop
sub
fsub
sbb
push
dec
fcmovne
js
cmc
scas
js
push
sub
sbb
jns
test
mov
js
scas
aas
sti
aam
sti
cmp
xchg
retf
lods
inc
pop
sbb
(bad)
cmp
(bad)
(bad)
das
lds
je
pop
adc
push
outs
sub
aam
loop
add
dec
lods
pop
xchg
pop
dec
ins
mov
jmp
jns
les
inc
fdiv
mov
pop
cli
cmp
mov
fmul
cld
aam
cld
dec
or
sub
fidivr
fucom
cmc
xlat
pop
dec
inc
(bad)
push
popf
cld
repz
jmp
addr16
cdq
repnz
dec
mov
and
and
mov
mov
js
iret
adc
fwait
lds
ficomp
xchg
test
ins
lea
pop
aas
test
inc
ja
nop
fdivr
dec
mov
and
cmp
lods
les
mov
mov
movs
pop
jnp
das
xchg
out
in
xor
dec
xchg
fcomp
mov
ror
iret
les
xchg
inc
call
outs
mov
repz
dec
mov
cli
call
dec
(bad)
pop
ja
fs
push
push
dec
out
jae
fs
retfw
xor
lods
mov
dec
das
mov
jmp
fwait
outs
mov
jl
cmp
xchg
push
xchg
jmp
mov
(bad)
xchg
jno
(bad)
dec
sti
pop
mov
xor
jg
jns
jle
cmp
and
cmp
or
mov
cld
xchg
cmc
cmp
(bad)
add
mov
fisttp
mov
fldenv
cmp
aam
mov
xchg
push
fld
xchg
jle
xchg
dec
sub
fsub
sbb
push
dec
jg
bound
icebp
(bad)
mov
jne
aas
adc
stos
and
jmp
out
leave
push
jnp
xchg
lods
mov
xor
in
out
shr
sbb
and
push
fisubr
cmp
mov
mov
pop
cmps
std
or
and
dec
pop
and
into
adc
adc
xchg
inc
xor
imul
ja
vcvtss2si
lods
inc
cdq
(bad)
sub
mov
js
add
cmps
cld
mov
int
std
pop
jnp
das
xchg
out
in
xor
xlat
xchg
fcomp
push
mov
ror
iret
les
xchg
retf
jnp
dec
mov
out
fs
or
gs
ja
not
or
lods
nop
in
mov
ds
test
adc
jmp
jle
jle
bound
mov
sbb
lea
pop
das
not
call
fwait
dec
mov
sti
outs
push
jmp
loop
inc
cdq
(bad)
sub
outs
sbb
mov
es
dec
stc
jg
aad
les
sar
(bad)
adc
mov
inc
(bad)
retf
mov
ret
cld
aam
cld
dec
or
test
fcmovb
or
out
jae
dec
out
addr16
ja
push
rol
inc
sbb
cmp
adc
xchg
cli
mov
in
mov
pop
arpl
pop
jecxz
ret
jge
dec
ins
mov
jnp
dec
ins
std
push
mov
sbb
dec
icebp
(bad)
add
dec
dec
pop
xchg
fistp
je
push
ja
adc
repz
ret
lods
(bad)
rol
cmps
dec
adc
or
lock
daa
repz
test
iret
and
pop
jg
mov
push
mov
int
push
repnz
jle
mov
std
retf
mov
inc
fmul
or
inc
mov
pop
cdq
pop
pop
xchg
pop
pop
pop
mov
mov
mov
ins
mov
(bad)
call
mov
popf
cdq
div
fidivr
popa
inc
mov
pusha
and
out
repz
aam
sbb
or
nop
out
lea
aaa
mov
adc
mov
pop
(bad)
jmp
add
jne
aas
adc
sub
jnp
stos
or
ficomp
int3
shl
jp
inc
fmul
or
daa
mov
push
(bad)
out
mov
pop
sbb
pop
jecxz
ret
pop
and
sub
cmc
sbb
mov
std
pop
mov
retf
iret
pop
cmovl
inc
sar
sti
fnstsw
xchg
out
in
xor
arpl
cmp
dec
loopne
dec
out
bound
dec
inc
cmc
fidivr
and
mov
jp
mov
sbb
dec
cmp
les
popa
sub
jnp
outs
es
bound
icebp
(bad)
mov
cmp
les
lahf
mov
je
dec
ins
sub
popa
or
mov
rol
xor
mov
jno
adc
mov
pop
(bad)
jmp
add
jne
aas
adc
sub
fldenv
pop
fdivr
mov
repnz
es
cmp
repnz
dec
xchg
aas
xchg
cli
cs
(bad)
mov
outs
mov
or
lea
pop
das
pop
dec
ins
std
inc
mov
(bad)
call
xor
xor
lods
add
adc
bound
sub
iret
fwait
cmp
sbb
pop
dec
dec
push
icebp
(bad)
mov
jne
aas
adc
retf
jg
jmp
test
push
adc
mov
int3
inc
inc
les
mov
sbb
push
fistp
mov
xor
jne
add
and
sub
(bad)
add
fsubr
inc
movs
in
and
mov
js
add
popa
push
mov
and
cmp
loop
and
jl
std
add
inc
popa
in
add
jmp
ins
das
mov
scas
jg
fst
mov
ror
pop
pop
sbb
sbb
test
and
mov
xchg
neg
(bad)
gs
sar
inc
fcomp
(bad)
adc
cmp
inc
ds
dec
ins
push
cmp
mov
retf
jmp
outs
sbb
push
adc
icebp
push
imul
dec
sbb
test
arpl
test
fcmovnbe
fidivr
adc
dec
loopne
dec
out
bound
dec
fnsave
ja
jmp
mov
mov
gs
fstp
dec
xchg
xchg
jne
sbb
inc
inc
mov
pop
sbb
ins
pop
jb
xor
and
(bad)
lea
(bad)
adc
pop
ficomp
sbb
cmovp
lea
ins
lea
pop
das
addr16
ins
in
and
pop
and
adc
retf
mov
sbb
repz
dec
pop
and
arpl
and
mov
dec
out
jo
ins
dec
jnp
push
sbb
sbb
test
pop
cwde
sub
clc
loop
jle
ror
fs
pop
pop
aaa
out
out
out
test
repnz
push
outs
xchg
(bad)
jg
push
in
jecxz
pop
jnp
xor
(bad)
adc
fist
fdivr
fcomp
dec
xchg
or
sbb
(bad)
retf
stc
adc
mov
mov
xor
jmp
or
xchg
lahf
mov
push
outs
adc
out
sbb
test
aas
daa
xor
dec
outs
sbb
push
daa
repz
test
jle
int3
cmp
mov
pop
jmp
fwait
jne
jo
xchg
or
call
es
std
neg
scas
fwait
and
xchg
les
mov
pop
adc
(bad)
jne
nop
fadd
(bad)
rcl
pop
xchg
jge
call
mov
fs
sti
in
cdq
jbe
pop
(bad)
mov
jp
mov
xor
xchg
cmc
cmp
adc
popa
ret
sub
arpl
sub
outs
sbb
push
daa
repz
test
jnp
push
cli
retf
je
or
dec
cli
(bad)
fstp
repnz
jge
inc
sub
sbb
fmul
or
inc
std
fsub
or
dec
neg
xor
sub
ds
and
lds
push
inc
popa
or
fisttp
cmc
cld
and
sbb
mov
cmp
jecxz
adc
popa
ret
sub
arpl
or
push
lods
mov
in
lock
fnstsw
adc
inc
jge
jb
arpl
cli
ror
bound
pop
dec
or
ret
enter
mov
out
sbb
(bad)
cmp
(bad)
(bad)
data16
add
(bad)
ja
pop
mov
(bad)
hlt
or
fisttp
or
repz
mov
mov
jno
adc
mov
pop
bound
pushf
add
jg
(bad)
mov
inc
fnstenv
div
sar
(bad)
push
ficom
dec
popf
les
mov
sbb
xchg
mov
ffree
dec
(bad)
jnp
dec
das
iret
jns
test
in
adc
(bad)
in
lods
add
ja
fnstcw
(bad)
mov
mov
jle
imul
and
mov
xchg
bswap
fwait
cmp
sbb
pop
dec
fstp
test
ret
cld
aam
cld
dec
or
test
mov
ja
xchg
push
push
xchg
(bad)
mul
jmp
mov
outs
call
adc
push
xchg
aas
out
sub
je
js
push
add
mov
mov
ins
mov
sbb
xchg
sub
lods
add
push
xchg
outs
lods
sub
fisub
out
icebp
mov
loope
adc
sahf
js
sub
(bad)
push
pop
fucomp
ja
mov
fdivr
mov
add
dec
pop
dec
(bad)
mov
mov
and
test
(bad)
(bad)
mov
cmp
mov
dec
xor
scas
ficomp
lahf
add
shr
(bad)
add
ret
movs
out
pop
icebp
push
jnp
(bad)
out
sbb
test
les
xchg
sub
pop
push
dec
xchg
pop
bound
ja
or
pop
mov
outs
ret
jne
mov
rol
jmp
xchg
div
sbb
fistp
(bad)
dec
ins
aad
test
xor
test
sub
pop
bound
mov
es
pop
adc
xor
les
xchg
or
int
jmp
gs
leave
loop
or
(bad)
(bad)
ficomp
xchg
(bad)
div
rcl
mov
loope
mov
fmul
or
inc
inc
pop
jnp
and
fidivr
in
adc
xchg
cwde
push
cmp
test
lea
xchg
gs
mov
add
ret
movs
cmp
jne
pop
cmp
loop
and
test
jmp
sbb
sbb
nop
inc
push
jno
retf
xchg
(bad)
or
sti
test
lds
pop
mov
call
cmp
mov
popa
sub
and
jge
jecxz
mov
cmp
ret
xchg
sub
jecxz
test
lods
inc
sbb
ret
das
jnp
add
dec
mov
mov
loope
adc
sahf
ins
dec
jnp
push
sbb
sbb
jmp
mov
shr
stos
mov
cmps
movs
mov
idiv
rcl
mov
sbb
dec
bound
sbb
mov
repz
pop
es
or
nop
mov
imul
mov
lods
add
stos
retf
or
mov
xchg
lahf
mov
popa
loop
add
dec
sbb
test
xlat
xchg
cwde
mov
in
lods
inc
popa
in
add
jmp
xlat
mov
mov
pop
jne
dec
or
sbb
aas
std
test
sbb
push
adc
xor
mov
div
scas
jae
xchg
jle
ficomp
je
aaa
imul
xchg
dec
sbb
inc
fdivr
and
test
sti
add
or
ret
sub
arpl
inc
mov
ret
cld
aam
cld
dec
or
test
fcomp
and
mov
(bad)
dec
cld
clc
jecxz
jmp
inc
out
(bad)
adc
push
scas
push
pop
jnp
test
dec
xor
es
dec
icebp
(bad)
mov
bound
mov
test
sbb
xchg
sub
in
xor
scas
pop
xchg
cmp
fisttp
push
bound
sbb
pop
dec
outs
and
jne
mov
iret
les
xchg
lods
push
mov
cmp
das
(bad)
sti
push
fadd
jmp
imul
pushf
cmp
aam
ret
inc
fdiv
jmp
lahf
lds
outs
fsub
movs
sbb
and
dec
ins
cmc
jmp
(bad)
mov
bound
ret
ficomp
add
pusha
cwde
adc
cmps
mov
aaa
jno
adc
mov
out
cmc
mov
ret
cld
aam
cld
dec
or
leave
fidivr
in
(bad)
rol
mov
call
xchg
pop
sahf
cld
std
out
jg
aad
cmps
(bad)
adc
xchg
std
lods
out
(bad)
and
out
dec
sub
and
cmp
mov
sar
icebp
or
lods
sub
div
cmps
and
inc
cmp
lds
loop
pop
mov
out
sbb
test
fwait
neg
icebp
(bad)
mov
jne
aas
adc
mov
loope
adc
fdivr
xchg
loope
pop
int
ja
push
mov
mov
cmp
mov
scas
inc
xor
xchg
mov
addr16
mov
imul
mov
loop
add
mov
xchg
ficomp
add
pusha
cwde
adc
test
jle
jnp
faddp
adc
lock
pop
fidivr
mov
test
stc
cdq
sbb
push
xchg
cmp
dec
aam
push
imul
dec
xor
xchg
fdivr
lods
mov
mov
sbb
push
ret
outs
dec
sub
icebp
jne
jmp
xchg
bound
mov
pop
(bad)
jmp
loop
add
cmc
cli
pop
mov
jp
mov
add
inc
rol
ja
ja
out
sbb
test
(bad)
xchg
cwde
jmp
aam
cld
dec
or
jecxz
xchg
and
mov
dec
ss
bound
pop
dec
or
ret
test
jae
(bad)
dec
sub
adc
cmp
or
sub
adc
push
outs
sub
ins
mov
xchg
and
or
mov
test
or
ret
sub
arpl
shl
mov
outs
sbb
push
daa
repz
test
retf
out
mov
vmovdqa
push
rep
(bad)
cmps
and
or
dec
bound
sbb
mov
mov
mov
icebp
(bad)
mov
xor
jne
js
cmp
pop
mov
cld
push
(bad)
jmp
push
fist
jge
(bad)
js
les
inc
fdiv
mov
pop
cmp
fidivr
adc
dec
loopne
dec
out
bound
sbb
cmp
cmp
mov
mov
movs
mov
dec
dec
pop
(bad)
mov
sbb
push
adc
xor
xchg
js
mov
xchg
lea
lahf
outs
shl
dec
ins
popf
sub
sti
and
sub
fsub
outs
sbb
mov
jnp
fnstcw
les
inc
fdiv
mov
pop
cli
mov
popf
ror
iret
les
fimul
dec
fs
mov
cwde
test
shl
sub
mov
sbb
sbb
fmul
or
inc
gs
dec
sub
and
cmp
popa
adc
mov
mov
jns
pop
popa
push
push
mov
sbb
xchg
jge
mov
out
sbb
test
pop
xchg
cwde
cli
test
push
sbb
sbb
cmc
(bad)
pop
leave
jmp
mov
cmp
out
mov
inc
fmul
or
inc
gs
mov
mov
push
(bad)
(bad)
push
dec
mov
sub
cmc
mov
in
push
bound
icebp
(bad)
mov
pop
dec
mov
xor
dec
outs
jg
(bad)
repz
ret
int3
(bad)
shr
dec
sub
(bad)
dec
loopne
dec
out
bound
sbb
fidivr
xor
ja
cmp
ins
or
div
sahf
lods
stos
push
lods
xor
push
out
jbe
mov
push
sub
sub
cmp
(bad)
test
mov
xchg
fdiv
add
sbb
xor
inc
in
test
rol
xchg
cmc
sbb
test
cmp
loop
and
jp
cmp
aas
sub
dec
loopne
dec
out
bound
sbb
pop
jl
mov
xchg
push
jmp
pop
pop
cwde
out
in
test
push
out
(bad)
in
sub
ss
cmc
(bad)
popa
and
and
mov
(bad)
(bad)
dec
loop
add
(bad)
js
(bad)
mov
in
and
cmp
add
inc
xchg
mov
test
(bad)
repz
ret
lods
(bad)
shl
icebp
(bad)
mov
jne
aas
adc
mov
jl
rol
mov
scas
loop
xor
dec
add
dec
into
cmp
cmp
test
and
test
not
mov
aam
cli
mov
sub
adc
push
mov
xchg
fdiv
mov
sbb
add
inc
jge
jne
in
jecxz
adc
popa
ret
sub
arpl
cmp
push
test
stc
cdq
sbb
(bad)
xlat
cmp
cmp
lods
out
jle
jl
push
jno
sbb
dec
fst
out
imul
ret
fld
mov
(bad)
shr
ror
jae
xchg
sbb
and
mov
je
pop
mov
mov
and
jne
js
add
popa
adc
or
jns
inc
or
ret
sub
arpl
and
or
lock
daa
repz
test
fcmovnu
or
out
push
fdivr
movs
(bad)
sub
sahf
mov
js
popf
les
mov
sbb
xchg
inc
fadd
repnz
pop
xchg
xchg
cmps
les
push
inc
sbb
mov
xchg
js
sub
cmp
xchg
stc
and
stos
pop
outs
aam
ret
and
test
les
inc
fdiv
mov
pop
cli
pop
mov
inc
(bad)
cld
aam
cld
dec
or
jecxz
scas
mov
or
mov
cdq
data16
jge
fs
call
sbb
dec
bound
sbb
or
int
and
cmp
in
jnp
sub
test
call
jmp
lods
add
(bad)
test
lods
inc
pop
xchg
cmp
add
inc
std
fisttp
mov
mov
xchg
hlt
pop
adc
adc
sbb
push
daa
repz
test
aaa
pop
ja
jne
mov
loop
das
dec
dec
int
pop
mov
dec
(bad)
clc
(bad)
aas
jmp
mov
ins
sbb
test
push
aam
loop
inc
xchg
mov
mov
(bad)
mov
lods
add
(bad)
or
lods
inc
cdq
pop
xchg
pop
call
cwde
inc
std
jnp
out
outs
mov
aaa
mov
jle
retf
jnp
inc
les
jl
bound
icebp
(bad)
mov
jne
aas
adc
mov
xchg
inc
pop
pop
aam
or
sti
out
movs
mov
movs
(bad)
das
shl
mov
xor
adc
push
push
inc
pop
mov
(bad)
sar
loopne
dec
call
adc
push
outs
sub
mov
and
pop
xchg
sub
mov
in
das
jmp
mov
push
test
dec
ins
xchg
repnz
int3
iret
les
ss
(bad)
div
mov
and
mov
push
(bad)
cmps
(bad)
das
ror
in
movs
aas
dec
xor
adc
push
xchg
inc
pop
jae
(bad)
ror
lds
iret
(bad)
sbb
and
dec
ins
icebp
shl
and
mov
outs
cmp
push
popf
jg
inc
jne
stc
stc
mov
retf
(bad)
mov
push
sbb
and
leave
out
inc
(bad)
retf
arpl
dec
ficomp
retf
cmps
dec
out
bound
sbb
pop
je
mov
(bad)
mov
cmps
push
imul
(bad)
mov
mov
test
push
cmc
adc
mov
inc
call
mov
cmc
inc
addr16
cld
in
jne
gs
(bad)
mov
mov
ins
repnz
add
xchg
lahf
mov
outs
iret
and
test
std
cmp
lahf
fs
inc
loope
add
jmp
jne
mov
mov
(bad)
mov
lods
nop
pop
ret
dec
and
dec
pop
jnp
mov
and
test
out
mov
dec
cmps
les
push
inc
fistp
ins
dec
icebp
(bad)
add
ins
loop
inc
cdq
mov
js
add
pop
jmp
mov
(bad)
(bad)
jno
inc
ret
sahf
ins
scas
fdivr
bound
leave
cld
dec
or
jecxz
(bad)
std
div
and
mov
cmps
test
pop
cmp
xchg
inc
je
mov
adc
mov
out
retf
xchg
in
or
xchg
mov
(bad)
js
or
fstp
adc
retf
les
mov
mov
mov
or
sahf
ins
es
cmps
push
adc
or
lock
daa
repz
test
fcomp
pop
mov
(bad)
fnstsw
push
xor
jmp
mov
adc
mov
in
retf
and
in
mov
mov
or
adc
daa
mov
lahf
jns
lods
pop
cmp
(bad)
(bad)
aas
lds
mov
and
imul
mov
out
mov
std
lahf
shl
data16
and
leave
data16
imul
mov
jne
aas
adc
js
cmp
mov
jbe
mov
lock
sub
(bad)
xor
shl
mov
bound
pop
dec
or
ret
sub
pop
add
xchg
inc
not
sar
(bad)
add
mov
adc
rcr
sub
cld
aad
call
cmp
pushf
fdivr
test
outs
inc
push
cmps
(bad)
(bad)
add
lods
inc
loope
add
jmp
hlt
out
mov
mov
lahf
rcl
mov
push
xor
xor
or
sub
push
ins
xor
adc
(bad)
fdivr
inc
(bad)
leave
mov
ds
mov
(bad)
xchg
outs
push
icebp
(bad)
add
pop
pop
(bad)
in
mov
pop
xchg
cwde
cmp
jne
mov
repnz
cmps
dec
xchg
lahf
dec
(bad)
out
mov
push
(bad)
in
dec
dec
scas
inc
in
cmp
push
fstp
ins
fucompp
lods
inc
dec
fmul
cld
aam
cld
dec
or
jecxz
fdivr
lods
out
add
cli
mov
dec
xor
and
mov
adc
adc
mov
and
pusha
in
int
dec
mov
sub
ja
(bad)
fcom
les
mov
sub
arpl
mov
push
mov
and
ja
(bad)
loopne
(bad)
imul
sub
xor
mov
ss
dec
adc
pop
outs
sub
cmps
dec
out
bound
sbb
popa
jnp
xor
and
mov
adc
adc
pushf
sub
pusha
ss
cmps
les
push
sar
(bad)
fmul
les
mov
cmps
jmp
pop
pop
mov
and
in
jnp
js
cmp
adc
iret
pop
in
fs
xor
push
not
stos
dec
lods
mov
jmp
and
fs
mov
lahf
js
rcl
jbe
aas
jne
aas
adc
js
jecxz
jnp
xor
and
mov
adc
adc
cdq
and
mov
xor
xchg
mov
les
mov
(bad)
ja
dec
xchg
sbb
pop
(bad)
xor
add
stc
stc
stos
push
div
cmp
retf
lods
loop
push
jg
in
mov
lds
fdiv
adc
daa
fwait
out
mov
sahf
mov
clc
test
ret
test
adc
fld
mov
and
arpl
pop
dec
or
ret
sub
jmp
xlat
mov
adc
rcr
out
dec
mov
mov
and
push
push
fstp
aam
jb
in
(bad)
push
push
not
lods
dec
sub
dec
mov
inc
mov
sub
pop
(bad)
xchg
fcomp
sub
dec
dec
fidivr
test
iret
les
ss
push
cmp
inc
ja
cmp
sub
imul
lea
fisubr
test
adc
adc
jns
(bad)
jmp
out
cmps
les
push
mov
mov
lods
pop
pop
mov
mov
push
mov
out
lods
mov
inc
icebp
(bad)
add
das
xchg
lahf
mov
repz
pop
in
aaa
and
nop
sbb
popf
pop
sbb
and
leave
mov
jmp
lods
fwait
lds
sahf
mov
clc
test
ret
add
sbb
out
add
cmp
ss
int
neg
leave
call
adc
or
sub
cmp
daa
sahf
cmc
jmp
xchg
sbb
mov
imul
aam
div
mov
lds
sub
clc
mov
pop
mov
cld
cld
aad
jge
cli
mov
mov
ror
cmp
xor
mov
push
fild
adc
mul
sub
and
push
adc
jp
dec
loopne
dec
out
bound
sbb
sbb
test
(bad)
mov
or
in
in
push
pop
rcl
mov
ret
inc
fdiv
or
cmp
das
jmp
or
test
fdivr
bound
icebp
(bad)
add
add
(bad)
dec
std
cmps
ss
sub
pop
mov
cld
fnstcw
mov
mov
outs
mov
pop
jo
adc
daa
fwait
arpl
mov
sahf
mov
clc
test
ret
jns
popf
out
add
aas
hlt
(bad)
fnstsw
aam
pop
jne
push
xchg
aaa
fidivr
push
mov
dec
or
ret
sub
and
cdq
dec
shl
(bad)
mov
mov
cmp
xor
xor
pop
mov
cmp
mov
les
and
adc
(bad)
out
test
cwde
mov
imul
xchg
int
pop
jne
pop
mov
xlat
add
loopne
dec
out
bound
sbb
fdiv
xor
ja
cmp
or
jmp
imul
jnp
cmp
and
test
div
clc
imul
pop
dec
cli
(bad)
aas
sub
and
ror
pop
xchg
sbb
mov
xchg
sbb
pop
lods
inc
xchg
jge
pop
mov
add
cld
(bad)
std
clc
jns
pop
outs
cmp
inc
ret
sahf
ins
xchg
fidivr
xchg
popf
ror
iret
les
ss
push
jns
xchg
fs
stc
out
test
fist
xchg
jmp
(bad)
cmp
sbb
dec
bound
sbb
punpcklwd
mov
jge
dec
fistp
repz
and
jecxz
mov
jl
(bad)
and
in
jnp
mov
adc
mov
add
add
cld
ss
sbb
das
mov
pop
add
sub
(bad)
in
mov
fisttp
xor
lahf
cmp
pop
lea
xor
pop
ins
mov
fdivr
mov
in
xor
neg
jae
adc
xchg
les
mov
ret
pop
xchg
pop
cmp
out
sti
pop
in
add
adc
mov
das
mov
or
dec
bound
dec
mov
fidivr
jge
mov
(bad)
or
outs
cmp
test
xchg
sbb
cwde
hlt
(bad)
movs
cmps
in
add
jmp
mov
mov
mov
std
jno
jg
jp
mov
fisub
xor
jb
sbb
arpl
sub
test
xchg
mov
jbe
add
mov
mov
pop
mov
mov
lods
or
and
xchg
pushf
inc
imul
sbb
(bad)
add
ret
and
scas
js
shl
and
leave
jp
push
in
jnp
arpl
cmp
(bad)
movs
out
add
jmp
jne
dec
daa
mov
(bad)
mov
mov
push
xor
jg
sbb
dec
and
test
push
xchg
in
xor
and
jg
in
push
call
ret
(bad)
(bad)
pop
pop
retf
ds
pop
pop
dec
jne
les
xchg
push
jl
(bad)
int
inc
ficomp
loop
cli
xchg
add
cli
pushf
jecxz
test
dec
lods
in
and
call
int3
iret
les
ss
es
xor
jmp
mov
jmp
imul
push
adc
xor
hlt
jmp
(bad)
mov
bound
mov
mov
fisub
dec
mov
popa
mov
jno
lods
popf
sub
mov
xor
dec
add
and
cld
(bad)
imul
cmp
push
mov
pop
gs
inc
ins
in
add
jmp
cmc
out
outs
es
scas
mov
(bad)
push
fdivr
movs
(bad)
lods
movs
ror
dec
push
mov
dec
or
ret
test
inc
fsub
(bad)
test
test
in
sub
ja
js
adc
ins
and
add
adc
in
repz
mov
aam
mov
or
sahf
lods
daa
jnp
jl
(bad)
in
jp
(bad)
movs
adc
add
jne
aas
adc
cmp
fcmovbe
mov
imul
sbb
popa
sub
push
xor
xor
pinsrw
popa
sub
or
xchg
mov
jle
test
fmul
fdiv
mov
lahf
mov
lods
ret
leave
not
and
mov
xchg
lds
in
push
and
jle
leave
pop
xchg
es
add
sar
adc
mov
clc
test
ret
lds
pop
in
out
xchg
aam
fdivr
pop
sahf
bswap
sahf
pop
stos
xchg
fsub
fs
mov
fmul
or
inc
jne
ret
xor
push
or
push
cmp
int3
(bad)
div
add
fcmovb
sub
adc
push
mov
bound
cmps
add
fcmovb
and
in
jg
mov
shl
adc
daa
jmp
push
nop
xor
xchg
mov
outs
ins
dec
popa
daa
lock
daa
repz
test
xor
leave
and
dec
push
jno
sbb
mov
push
pop
cmp
les
xchg
mov
xor
xor
xor
ja
js
adc
es
test
jle
loopne
mov
lds
les
cs
or
(bad)
lods
dec
shl
adc
daa
jmp
ds
push
loop
dec
imul
jle
xchg
pop
mov
inc
xor
imul
test
and
test
pop
leave
fld
mov
sub
addr16
mov
js
adc
jnp
mov
push
(bad)
cmp
add
pop
xchg
mov
jnp
xchg
js
shl
mov
xor
leave
cli
pop
pop
pop
xchg
fcomp
mov
ror
iret
les
fisubr
std
mul
adc
mov
sti
push
lahf
dec
lods
dec
dec
pop
cld
loop
xchg
neg
mov
and
push
adc
xor
and
ret
push
xchg
fdiv
ja
test
and
in
mov
push
in
pop
std
data16
inc
mov
mov
lea
arpl
mov
or
sahf
lods
xchg
sti
les
push
(bad)
cld
aam
cld
dec
or
jecxz
loop
mov
data16
ins
out
mov
jmp
xchg
mov
push
or
leave
and
inc
fmul
or
inc
jne
ret
test
adc
aam
je
lods
dec
shr
and
mov
in
in
and
cli
and
sbb
test
adc
adc
call
sbb
aam
adc
lea
daa
lock
daa
repz
test
rcr
sub
jnp
ss
jp
and
scas
inc
mov
adc
push
pop
xchg
bound
mov
dec
push
leave
cmp
and
dec
mov
nop
pop
sub
outs
jge
iret
pusha
fst
repnz
sub
outs
jns
(bad)
int3
ds
mov
es
add
int
dec
mov
dec
adc
push
daa
repz
test
cmp
fdivr
iret
fnsave
push
dec
movs
(bad)
fs
mov
inc
push
arpl
pop
dec
or
ret
test
inc
pop
jae
push
clc
xor
push
mov
not
xchg
in
icebp
(bad)
sub
push
call
test
fldcw
and
sub
jmp
pop
xchg
mov
jge
pop
xchg
es
add
imul
and
rcr
or
aam
cld
dec
or
jmp
bnd
fdivrp
enter
out
mov
jmp
sar
jmp
lahf
cld
out
jg
rcl
mov
ret
inc
fdiv
stos
repz
mov
(bad)
mov
aam
xchg
das
mov
cmp
mov
fldcw
(bad)
cli
out
mov
fnstcw
pop
mov
enter
cdq
and
sbb
xchg
pop
xchg
div
lods
out
jle
ja
fld
jnp
push
ja
mov
xor
leave
lock
and
jge
cli
cmp
lods
push
jmp
fs
xchg
dec
sbb
sti
and
add
push
fdivr
rcl
mov
mov
inc
xor
xchg
mov
cmp
xor
inc
pop
aam
mov
lahf
or
lods
jmp
div
jne
mov
out
mov
jl
enter
lds
lods
stos
cmp
cmp
(bad)
in
js
(bad)
movs
out
cmp
push
pop
sar
call
cmc
stos
test
iret
les
xchg
lods
aas
std
jmp
sbb
xchg
loope
pop
int
jnp
cmps
mov
lods
rol
in
pop
cmp
mov
les
ss
test
in
imul
fcomp
ret
jle
hlt
shr
cmps
push
mov
mov
mov
sar
lea
cwde
retf
loopne
jb
mov
inc
fdiv
data16
bound
fidivr
or
jmp
lahf
std
loop
push
aas
sbb
or
aam
cld
dec
or
leave
jp
mov
icebp
mov
push
imul
jg
movs
ds
dec
mov
out
xchg
fld
dec
push
and
xchg
les
ss
test
and
ins
jge
jmp
mov
mov
clc
rol
sti
mov
neg
ds
jle
iret
setne
std
add
xor
addr16
xor
mov
ins
pop
push
jge
jns
(bad)
ficomp
les
cmp
mov
push
imul
clc
test
stos
mov
iret
les
xchg
cli
mov
stc
out
(bad)
daa
sub
jnp
dec
aam
jb
mov
fcom
push
and
sub
popa
or
(bad)
stos
mov
mov
cmp
inc
mov
dec
mov
mov
cmp
pop
das
or
inc
mov
jnp
ja
ja
xor
in
mov
pop
pop
mov
pop
adc
mul
xchg
fisttp
ret
xlat
(bad)
fnstenv
push
div
popf
int3
iret
les
xchg
sar
hlt
cmps
aas
jne
leave
add
mov
aam
xor
jge
retf
mov
cs
cmp
fdiv
cmp
pop
arpl
pop
dec
or
ret
test
inc
pop
jae
push
cwde
xor
cmp
sahf
pop
mov
pusha
mov
fistp
mov
sbb
xchg
popf
mov
xchg
scas
dec
sub
mov
repnz
mov
loope
jb
mov
adc
fs
out
cmp
sti
xchg
popf
and
pop
push
retf
cmps
dec
out
bound
dec
jmp
ins
mov
imul
jnp
into
xchg
mov
in
mov
and
push
daa
call
mov
xor
(bad)
adc
mov
repz
in
mov
xor
inc
push
push
retf
jns
(bad)
popa
aaa
jle
xchg
fstp
scas
js
push
ja
les
ss
sbb
data16
push
and
push
xchg
cwde
iret
in
jg
mov
pop
adc
mul
and
int3
ds
lea
dec
loopne
dec
out
bound
dec
std
mov
and
das
add
sub
push
mov
rol
sbb
cld
sbb
push
adc
xor
adc
pushf
es
or
ror
fist
sbb
out
outs
sbb
scas
or
xlat
idiv
mov
sub
or
js
pop
daa
repz
fadd
cmc
xor
and
xlat
xchg
jno
inc
ret
sahf
sub
ins
mov
fmul
xchg
test
pop
out
(bad)
cld
aam
cld
dec
or
leave
jmp
stos
scas
call
loopne
pop
dec
aaa
loope
retf
mov
sar
(bad)
mov
fxch
jle
sbb
(bad)
jle
or
and
test
in
imul
or
cmp
std
push
stc
gs
out
retf
mov
in
and
inc
add
addr16
mov
mov
fcmove
ds
xchg
cs
outs
sub
adc
lds
sub
and
fidivr
or
je
xlat
jmp
mov
leave
pop
bound
inc
clc
add
jnp
in
mov
addr16
lock
daa
repz
test
adc
iret
mov
outs
xor
loope
int
test
mov
dec
cmp
fwait
and
mov
ins
and
es
popa
adc
jmp
push
ror
popf
addr16
dec
mov
les
outs
(bad)
cwde
xchg
lds
pop
lea
pop
daa
loope
outs
(bad)
aam
test
not
fisttp
add
test
mov
or
ret
sub
pop
mov
mov
pop
xchg
cmp
mov
dec
lds
js
xor
jne
aas
adc
retf
movs
dec
leave
mov
ss
mov
push
jno
addr16
inc
in
jmp
out
mov
fbstp
cmp
mov
icebp
jo
cmp
mov
cs
ds
outs
stc
mov
and
leave
(bad)
bound
sbb
jmp
in
pusha
jg
mov
fprem1
in
daa
jge
mov
jne
arpl
aaa
cmp
fnstenv
fisub
adc
mov
pop
push
in
pusha
loope
mov
or
mov
ins
pop
test
mov
ficomp
jo
adc
popa
mov
retf
jle
aad
stos
shl
cdq
sbb
push
stos
es
pushf
cwde
in
mov
imul
pop
sahf
imul
enter
cdq
pop
jp
movs
mov
or
or
ret
test
inc
pop
arpl
sbb
daa
xchg
popa
int
test
std
ficom
or
pop
cmp
sub
call
and
pop
(bad)
adc
test
jnp
mov
dec
fsubr
push
fdiv
addr16
jp
popa
ret
sub
fisub
inc
mov
pop
loop
and
rcr
push
cmp
dec
cmp
mov
sub
aam
das
mov
inc
out
(bad)
imul
fdivr
sbb
std
(bad)
fld
call
mov
pop
or
sub
jno
cmp
or
test
fidivr
es
and
inc
mov
or
xor
pop
leave
dec
fldcw
imul
les
inc
pop
mov
jge
adc
sbb
xor
cmp
jl
xchg
lahf
je
push
fwait
(bad)
stos
fwait
jno
push
aam
rcl
add
fiadd
retf
add
and
es
popa
int
inc
popa
les
xchg
cmp
in
lods
mov
dec
mov
sti
mov
mov
and
pop
outs
and
mov
js
push
pop
sbb
les
inc
pop
mov
push
or
popf
int3
iret
les
xchg
(bad)
in
pop
dec
neg
jnp
ja
mov
mov
movs
(bad)
jge
fwait
addr16
jns
rcl
test
aam
and
dec
repnz
movs
mov
jge
cmp
xor
data16
idiv
pop
sub
adc
lods
inc
cmp
(bad)
(bad)
(bad)
fucomip
in
lods
dec
call
xchg
or
daa
lock
daa
repz
test
fnstsw
std
xchg
inc
add
sti
test
fdivr
aam
stos
ins
stos
scas
mov
jl
adc
pop
inc
fmul
or
inc
dec
sbb
stos
(bad)
and
repz
stos
jnp
mov
mov
sub
sbb
mov
cmc
shl
mov
mov
sbb
adc
(bad)
out
in
iret
and
or
aam
cld
dec
or
test
mov
addr16
aam
jbe
aad
cmp
aam
stos
sub
repnz
pminsw
inc
ffree
adc
push
xchg
xchg
into
push
mov
test
(bad)
pop
es
jne
xchg
or
outs
outs
aaa
fxch
inc
xchg
aaa
xchg
in
adc
imul
and
mov
adc
popf
and
fimul
popf
ror
iret
les
xchg
mov
dec
push
pop
gs
jae
aad
mov
push
ja
(bad)
pop
sub
fldcw
std
xchg
xor
call
adc
push
xchg
xchg
arpl
dec
sbb
jge
int3
cmp
mov
frstor
aaa
(bad)
sbb
xchg
pop
xchg
imul
idiv
ins
loopne
and
dec
fild
repnz
icebp
mul
in
add
jmp
cmps
addr16
jns
fldenv
jge
mov
rcr
gs
ret
push
jmp
test
rcl
mov
(bad)
adc
push
rol
(bad)
inc
pop
jmp
inc
push
mov
adc
retf
inc
xchg
daa
xchg
gs
lahf
pushf
icebp
scas
sub
fidivr
js
or
rcr
movs
(bad)
inc
mov
clc
test
ret
fld
adc
fld
jae
scas
stos
mov
jecxz
mov
ins
xchg
cmp
rol
or
xor
aam
and
bound
dec
sbb
std
cmps
(bad)
aas
test
jnp
test
lahf
arpl
dec
outs
push
mov
push
mov
xchg
and
pop
inc
lds
mov
aas
sti
out
(bad)
ss
leave
loopne
or
aam
cld
dec
or
test
lahf
lods
mov
jae
iret
test
mov
cmc
out
leave
je
adc
(bad)
adc
bound
sbb
or
in
sub
(bad)
and
test
xor
dec
jne
dec
cmps
ins
sub
ds
loop
xchg
ficom
xor
inc
outs
sub
sbb
les
inc
pop
mov
std
pop
or
aas
jne
aas
adc
sub
outs
inc
fsubr
movs
(bad)
cmp
movd
dec
or
ret
sub
inc
aad
adc
pop
mov
adc
fistp
sub
adc
lods
jmp
ffreep
sbb
or
mov
adc
cmp
mul
fmul
cld
aam
cld
dec
or
test
xchg
test
arpl
(bad)
gs
pop
movs
(bad)
cmp
outs
jmp
adc
bound
sbb
or
in
cwde
dec
repnz
dec
sbb
mov
mov
outs
inc
in
push
jmp
add
jae
out
adc
inc
ret
jno
mov
xchg
sbb
js
mov
in
add
jmp
inc
or
mov
mov
ins
and
pop
xchg
arpl
dec
sbb
cdq
push
sahf
adc
push
push
outs
ffreep
outs
inc
jns
mov
mov
ins
pop
aad
shl
and
mov
sub
(bad)
out
pop
cdq
dec
mov
add
jne
aas
adc
sub
xchg
mov
sbb
xchg
inc
pop
repz
mov
sbb
mov
cmp
das
inc
and
push
ins
sub
or
xor
(bad)
pop
(bad)
out
cmp
lods
dec
dec
cmp
aaa
xchg
cmp
in
rcr
adc
test
ret
xor
xchg
les
mov
ret
push
outs
or
test
xor
cmp
jge
psubd
fdiv
add
dec
adc
dec
call
mov
xchg
ret
mov
test
ret
xor
xchg
les
mov
ret
test
mov
sub
pop
fld
stos
mov
je
leave
pusha
mov
and
in
shl
adc
push
(bad)
sub
bound
lock
daa
repz
test
aam
or
sub
cmp
ret
xor
das
call
mov
lock
(bad)
xor
into
sub
xchg
in
pop
fwait
adc
adc
popa
sub
jbe
aas
jne
aas
adc
sub
xchg
mov
sbb
xchg
inc
pop
repz
or
xlat
test
lods
cdq
inc
push
adc
dec
mov
xchg
push
test
stos
mov
xchg
aas
nop
cwde
mov
add
sub
(bad)
jmp
jnp
add
jne
aas
adc
sub
xchg
mov
sbb
xchg
inc
fcom
xor
(bad)
sub
iret
or
dec
nop
int
fisttp
cld
cmp
retf
ins
pop
aad
shl
out
inc
lea
push
jecxz
and
sub
test
fidivr
add
sbb
inc
pop
mov
dec
or
ret
sub
and
or
xlat
movs
and
mov
jnp
cmp
popf
fstp
mov
or
push
jne
mov
dec
(bad)
out
pop
(bad)
ffreep
in
lods
dec
xchg
cmp
aaa
xchg
or
neg
fmul
cld
aam
cld
dec
or
test
mov
inc
fmul
or
inc
xor
popa
xchg
adc
dec
and
ins
or
test
xor
js
fidiv
(bad)
xchg
jns
test
into
sub
call
fwait
sub
adc
popa
test
(bad)
(bad)
bound
lock
daa
repz
test
aam
or
sub
cmp
xor
or
test
xor
jmp
iret
mov
mov
push
out
dec
cmp
mov
(bad)
push
test
xchg
js
or
int
scas
fs
icebp
not
(bad)
cld
aam
cld
dec
or
test
mov
inc
fmul
or
inc
mov
popa
in
jmp
stc
fidiv
cmp
out
mov
mov
shl
sbb
inc
fdiv
dec
repnz
pop
fwait
stos
jo
adc
popa
test
mov
loopne
dec
out
bound
dec
inc
les
xchg
test
sbb
push
adc
xor
adc
test
xor
xchg
mov
mov
js
or
cmp
bound
sbb
ds
not
xor
scas
sub
(bad)
push
and
dec
dec
jmp
cdq
push
mov
add
jne
aas
adc
sub
xchg
mov
sbb
xchg
inc
fsub
pop
ficom
jmp
test
test
(bad)
retf
in
das
hlt
xchg
xchg
in
xor
(bad)
out
jl
(bad)
cmps
or
les
inc
pop
push
test
not
or
aam
cld
dec
or
test
mov
inc
fmul
or
inc
or
cmps
cmp
aaa
xor
imul
test
(bad)
adc
mov
scas
sub
popa
push
mul
lods
(bad)
outs
jne
(bad)
cmps
ins
sbb
les
inc
pop
push
call
shl
stc
cdq
sbb
push
adc
test
xchg
les
mov
ret
xchg
test
call
sti
fs
not
retf
lock
jno
adc
lods
call
int3
std
pop
mov
sub
jmp
fidivr
mov
int3
iret
les
xchg
mov
xor
les
idiv
adc
xchg
popa
sti
in
sub
cdq
dec
mov
and
lahf
inc
jno
adc
lods
call
ins
sub
ficom
or
in
adc
mov
sbb
inc
pop
mov
dec
or
ret
mov
in
sti
in
pop
push
pop
adc
aam
xor
popa
int
les
mov
icebp
test
mov
xchg
lods
jge
fistp
mov
cli
xchg
test
xchg
js
or
retf
mov
in
mov
ja
gs
lock
daa
repz
test
aam
or
sub
test
and
add
or
test
sbb
ins
hlt
aas
or
dec
retf
fld
or
and
ret
push
xchg
jbe
out
dec
pop
cmp
aaa
xchg
gs
shl
stc
cdq
sbb
push
adc
test
xchg
les
mov
ret
jge
jecxz
inc
vmovupd
ins
lahf
popf
test
stos
cmps
jae
out
jne
xchg
or
pop
xor
xchg
cwde
mov
jg
adc
retf
dec
mov
hlt
nop
ins
ficomp
xor
add
jne
aas
adc
sub
xchg
mov
sbb
xchg
inc
fsubr
in
and
popa
test
mov
fsubr
pop
das
leave
cmps
vmovhps
xchg
jge
icebp
pop
inc
int
and
ins
or
loop
dec
sbb
outs
mov
xchg
jp
sbb
fidivr
inc
mov
iret
les
xchg
mov
xor
les
jbe
div
pop
inc
pop
jmp
xchg
push
pop
adc
loop
pop
aam
xchg
bound
or
xchg
xchg
adc
mov
push
mov
inc
mov
mov
mov
add
jne
aas
adc
sub
xchg
mov
sbb
xchg
inc
pop
fild
vmovups
hlt
out
sti
push
leave
cmp
cmp
sbb
xchg
gs
push
repz
sbb
sbb
fidivr
(bad)
out
or
(bad)
cmps
xlat
cmp
aaa
xchg
popf
mov
out
int3
repnz
xchg
stc
cdq
sbb
push
adc
test
xchg
les
mov
ret
adc
stos
sub
popa
test
pop
pop
(bad)
sub
pushf
in
mov
jl
pop
xor
ja
inc
pop
xor
int
adc
mov
dec
mov
cli
aas
fld
ss
cmps
dec
out
bound
dec
inc
les
xchg
test
sbb
push
adc
xor
fwait
int
out
movs
cld
xor
call
push
jge
sub
xchg
fld
jnp
rcr
pushf
std
xchg
cmp
aam
sbb
xchg
xchg
aaa
pop
push
mov
dec
mov
mov
pusha
mov
mov
or
aam
cld
dec
or
test
mov
inc
fmul
or
inc
or
mov
cmp
jnp
repnz
xchg
cmp
mov
not
add
mov
mov
mov
popf
aas
push
pop
pop
stos
idiv
fild
pop
xchg
cmc
ja
(bad)
ficom
pop
fwait
pop
loope
and
fscale
dec
in
addr16
jns
jnp
shl
cdq
lahf
mov
sub
adc
mov
dec
or
ret
mov
ins
imul
in
and
fdiv
rol
ficom
push
inc
(bad)
jl
mov
not
sub
dec
neg
rcl
pusha
pop
jg
gs
pushf
std
mov
jge
mov
ds
xor
es
mov
js
add
aas
jne
aas
adc
sub
xchg
mov
sbb
xchg
inc
fadd
or
test
(bad)
ds
outs
pop
mov
adc
sub
idiv
jle
pop
sbb
neg
cmp
icebp
stos
add
sub
loope
mov
mov
xor
cs
adc
push
addr16
dec
loopne
dec
out
bound
dec
inc
les
xchg
test
sbb
push
adc
xor
cmp
and
ds
jmp
in
dec
push
sbb
addr16
fild
loopne
movs
int3
and
jecxz
daa
sbb
ss
push
xor
into
mov
(bad)
cmps
push
inc
pop
sub
sti
add
jg
mov
(bad)
neg
fisub
push
mov
clc
test
ret
xor
xchg
les
mov
ret
into
movs
push
ja
test
pushf
pop
in
ret
xchg
sar
fidivr
mov
js
pop
xor
sti
call
pop
inc
in
scas
pop
and
jno
gs
imul
sti
lds
imul
pop
loop
and
retf
xchg
js
and
push
daa
repz
test
aam
or
sub
test
fiadd
lds
xchg
cmp
and
enter
cmc
mov
movs
or
pushf
inc
sbb
mov
movs
xor
fsubr
sti
js
adc
loop
push
dec
rol
and
in
popf
gs
and
sub
fisubr
fsub
aas
xchg
das
retf
cmp
ror
iret
les
xchg
mov
xor
les
mov
push
or
inc
pop
jmp
fadd
mov
out
idiv
popf
and
push
xchg
fs
inc
in
pop
fwait
aam
not
mov
pinsrw
sar
cmps
loope
mov
in
pop
repnz
pop
fucomi
lods
dec
xchg
cmp
aaa
xchg
jg
pushf
and
aad
lahf
inc
addr16
lock
daa
repz
test
aam
or
sub
test
sub
(bad)
adc
mov
and
fldcw
fcmovne
xchg
add
int
mov
mov
pop
clc
outs
imul
std
aas
cmp
sub
jp
sbb
xor
sbb
cmp
(bad)
cmps
sub
js
push
in
xchg
mov
pop
sti
test
fs
icebp
push
adc
dec
loopne
dec
out
bound
dec
inc
les
xchg
test
sbb
push
adc
xor
fistp
inc
pop
jmp
neg
daa
fist
adc
retf
cwde
lods
das
dec
(bad)
mov
push
push
lds
pop
div
xor
je
mov
popf
mov
retf
out
pop
(bad)
out
xor
es
adc
jecxz
js
or
in
mov
jle
js
(bad)
and
leave
bound
daa
fldenv
xchg
lods
fs
pop
inc
data16
fst
jbe
aas
jne
aas
adc
sub
xchg
mov
sbb
xchg
inc
fmul
mov
cmp
push
sub
add
gs
daa
in
jnp
mov
dec
imul
in
and
retf
(bad)
add
popf
mov
inc
mov
xchg
sbb
div
jmp
pop
mov
add
push
sbb
pop
jle
js
iret
sbb
xlat
adc
in
sbb
cmp
adc
test
or
add
(bad)
in
sar
ret
push
jnp
in
pop
repnz
(bad)
xor
mov
outs
shr
mov
and
jge
out
push
fstp
jecxz
das
xchg
jg
jge
jbe
fnstcw
shr
adc
jmp
fs
mov
jmp
ret
add
add
cmp
adc
mul
or
mov
mov
adc
test
mov
sbb
out
lds
cmp
shr
stos
cli
(bad)
pushf
mov
movs
clc
xchg
fdiv
pop
sub
jbe
ss
mov
iret
(bad)
pop
sti
push
cmps
in
ss
(bad)
popf
inc
in
ins
mov
(bad)
and
xchg
fadd
sbb
idiv
neg
(bad)
fidivr
out
xor
data16
mov
std
sbb
(bad)
aas
bound
mov
mov
inc
add
and
enter
test
fidivr
push
popf
int3
iret
les
xchg
mov
xor
add
add
add
add
daa
repz
test
aam
or
add
add
add
add
aam
cld
dec
or
test
mov
inc
pop
add
sbb
add
add
mov
jne
aas
adc
sub
xchg
push
add
mov
add
add
xchg
jp
jne
aas
shl
iret
fdivr
mov
push
xchg
test
add
add
add
in
add
jmp
inc
les
xchg
test
sbb
add
mov
add
add
inc
push
jg
popf
int3
iret
je
sub
in
and
jnp
test
add
add
add
add
cdq
lahf
jmp
pop
daa
retf
pop
mov
add
add
add
add
pop
cdq
cmp
scas
rcr
daa
retf
pop
mov
out
mov
(bad)
mov
and
add
add
add
lds
xchg
dec
mov
sub
jnp
repnz
jae
stos
aas
out
out
pop
add
add
add
add
xchg
mov
shl
dec
xchg
das
xchg
aad
mov
into
out
inc
add
add
add
and
lahf
cmps
dec
out
cmp
mov
hlt
(bad)
mov
lds
xchg
test
cs
cmp
arpl
fdivr
or
lock
add
add
inc
push
xchg
in
inc
hlt
(bad)
mov
lds
xchg
test
scas
mov
cmp
das
add
out
or
add
add
add
sbb
jmp
pop
daa
retf
pop
mov
xchg
fnstsw
(bad)
mov
and
add
add
add
mov
jmp
dec
leave
in
xchg
jne
mov
aam
xchg
sbb
jmp
mov
jae
add
add
add
add
int3
iret
mov
(bad)
sbb
(bad)
adc
mov
sub
rcr
mov
out
pop
jae
lods
stos
mov
jae
add
add
add
add
int3
iret
mov
mov
es
mov
aam
or
mov
retf
jle
(bad)
mov
(bad)
(bad)
or
lock
add
add
inc
push
jae
dec
out
call
jle
push
and
xchg
jmp
daa
sub
sbb
aad
fdivr
or
lock
add
add
inc
push
xor
ds
repnz
mov
jmp
mov
test
pop
xchg
cmp
pushf
rcr
imul
sbb
add
add
add
add
ror
je
fldenv
(bad)
adc
xchg
fisub
dec
inc
jbe
aad
daa
inc
xchg
jne
call
pop
add
fmul
add
add
add
and
xor
jecxz
ffree
adc
std
je
lahf
cmp
aam
ja
xlat
add
(bad)
or
add
add
add
daa
cmc
xor
lds
leave
movs
dec
xchg
je
mov
xor
jnp
mov
daa
jmp
ins
out
test
add
add
add
aam
test
pop
bound
rcl
mov
jmp
dec
cwde
nop
ins
mov
jae
inc
push
jno
xlat
add
(bad)
or
add
add
add
xchg
cli
cdq
call
cmp
rcl
mov
jmp
jp
test
jb
cdq
arpl
lds
pop
add
add
add
add
add
fstp
int3
xor
aam
daa
jmp
cld
repnz
xchg
rol
inc
push
jno
rol
add
fmul
add
add
add
sbb
cmps
dec
in
fidiv
pop
cmc
(bad)
mov
jmp
cmp
or
cmp
arpl
(bad)
jae
inc
imul
add
add
add
inc
das
test
movs
dec
out
addr16
jns
xchg
xchg
aaa
fidivr
push
and
cmp
mov
(bad)
cmp
fnstcw
fnstsw
jno
iret
add
lods
mov
add
add
mov
fmul
xor
les
xchg
mov
xchg
dec
mov
fld
imul
sti
pusha
pop
pop
jo
ja
cmp
lods
stos
mov
(bad)
fmul
add
add
add
sbb
movs
dec
lock
in
cmc
(bad)
mov
iret
fimul
mov
sbb
aaa
leave
mov
push
adc
gs
pop
(bad)
leave
test
scas
in
adc
or
add
add
add
dec
lock
retf
mov
int
jmp
inc
(bad)
dec
inc
lea
aad
dec
ds
in
jnp
aam
sti
out
mov
loopne
pusha
add
pop
test
add
daa
stc
xor
cmp
mov
pop
pop
test
and
mov
movhps
jb
das
add
add
add
add
sub
shr
sti
pop
pop
test
fwait
outs
dec
push
or
cmp
ds
add
sar
add
call
mov
dec
cmp
mov
(bad)
cmp
adc
in
mov
pusha
add
pop
test
add
adc
cdq
push
pop
jo
in
cmps
lahf
(bad)
push
mov
std
jbe
(bad)
sbb
scas
mov
jecxz
adc
rcr
test
add
xchg
std
sub
mov
jmp
in
mov
outs
add
fmul
add
add
add
sbb
movs
dec
clc
addr16
cld
out
lahf
dec
sahf
cmp
push
and
mov
jge
xlat
fmul
jmp
out
imul
mov
scas
cmps
add
add
add
inc
(bad)
xlat
movs
dec
jmp
leave
jge
fst
mov
ror
in
mov
pop
mov
add
add
add
add
xchg
in
das
repnz
xchg
rol
inc
inc
aam
out
jnp
sti
(bad)
stc
xchg
js
fld
or
add
add
ss
hlt
leave
jmp
inc
mov
jecxz
imul
aaa
sti
cmp
dec
jge
push
out
imul
add
cmp
adc
add
add
add
aad
push
shl
call
ret
pop
(bad)
xor
inc
inc
inc
in
jbe
in
mov
pop
(bad)
lock
xlat
aad
push
adc
mov
add
xor
add
add
add
ins
mov
xchg
dec
xchg
es
sbb
adc
push
cmp
imul
push
cmp
or
pop
add
add
add
push
imul
add
mov
lea
push
jg
icebp
rol
fisttp
push
ret
add
add
mov
adc
retf
out
cmp
inc
inc
inc
add
and
rol
jnp
push
add
sub
add
add
add
add
call
aam
(bad)
std
out
jg
lds
pop
int3
jge
cmc
cld
lahf
js
iret
add
add
add
add
into
nop
hlt
xor
inc
xor
addr16
jno
sti
sbb
(bad)
xlat
data16
sbb
add
add
add
mov
inc
mov
test
mov
mov
push
mov
or
mov
mov
fimul
call
add
add
add
pop
loope
mov
inc
fstp
imul
add
mov
add
add
inc
sbb
xchg
hlt
pusha
mov
and
fidivr
mov
add
adc
cmc
lahf
(bad)
cld
daa
cdq
outs
mov
iret
jne
mov
popa
or
add
add
add
ret
adc
hlt
sbb
imul
add
jb
or
add
add
add
fcomp
mov
mov
int3
xor
cmp
imul
add
mov
add
add
inc
pop
cmp
in
push
sbb
sbb
or
xchg
sahf
iret
mov
sbb
sub
pop
add
add
add
test
pop
xchg
push
adc
in
aas
sti
fnstenv
pop
jge
aad
lock
fst
dec
pandn
adc
add
add
add
loope
pop
rol
adc
fs
in
daa
lahf
pushf
xchg
and
sub
int
fst
dec
iret
push
loop
test
or
adc
add
add
add
loope
hlt
fnsave
mov
add
push
jl
js
mov
imul
mov
fimul
add
or
pop
add
add
add
test
sbb
sub
jmp
mov
jmp
xor
jl
mov
lds
add
sub
add
add
add
mov
movs
xchg
lods
lods
mov
sbb
(bad)
(bad)
idiv
mov
clc
fs
lods
mov
pop
adc
sub
popa
add
add
add
adc
sbb
push
inc
sbb
inc
aam
jle
rcr
mov
add
add
add
add
mov
and
inc
push
dec
outs
mov
or
mov
cmp
mov
sahf
cmc
les
add
pop
add
add
add
test
push
dec
movlps
xor
enter
pop
call
out
mov
xchg
pop
mov
adc
xor
or
add
add
add
adc
sbb
xlat
mov
or
mov
out
mov
mov
iret
xor
add
ins
and
mov
or
into
cmp
mov
mov
cld
and
fst
ds
mov
hlt
adc
pop
add
add
add
aam
pop
and
jl
int
mov
cmp
mov
jae
or
lods
loopne
out
mov
add
xor
add
in
sub
loope
inc
(bad)
pop
jg
fs
cwde
xor
(bad)
pop
inc
inc
cmc
ins
loop
mov
neg
outs
(bad)
(bad)
fidivr
cmp
mov
sub
dec
pop
and
mov
les
and
dec
pop
(bad)
clc
and
test
pushf
jbe
adc
sub
lods
cmc
adc
xchg
push
(bad)
push
lds
stos
cmp
test
movs
xor
ds
cmp
ds
jae
std
jl
dec
mov
in
mov
cli
addr16
sub
push
pop
dec
add
jae
popa
add
add
push
fwait
or
jb
fldenv
fcmovb
nop
movs
imul
mov
dec
push
push
movs
xor
test
mov
xor
(bad)
dec
aaa
fnsave
scas
mov
sbb
ins
leave
repnz
pop
inc
add
add
add
iret
aas
test
ins
fdiv
ins
fcmove
nop
movs
imul
icebp
(bad)
pop
dec
jnp
mov
xchg
repz
imul
popa
add
add
push
fwait
push
(bad)
jbe
fdiv
int3
xor
ins
fcmovbe
nop
movs
(bad)
out
lea
fimul
sbb
dec
jno
fist
add
push
ss
add
add
push
minps
pop
mov
retf
jmp
mov
and
fild
imul
mov
fisttp
movs
xor
ss
add
add
mov
mov
adc
and
cmps
dec
popf
call
sbb
aam
ins
fdivr
stos
mov
js
pop
jp
mov
add
jno
add
add
jmp
bound
(bad)
xchg
push
jno
fiadd
sbb
add
add
add
call
lods
call
jg
dec
das
dec
lods
rol
test
mov
fcomp
cvtps2pi
loop
add
add
aam
push
out
and
addr16
pop
jl
(bad)
dec
push
xchg
sub
xchg
ds
(bad)
adc
stos
lods
js
in
sbb
jg
fimul
inc
jmp
push
add
add
inc
popf
stos
mov
mov
ret
(bad)
in
mov
mov
std
pop
fiadd
jno
fimul
clc
sti
(bad)
push
add
push
jno
add
add
jmp
(bad)
aaa
pcmpeqw
xchg
cld
loope
lods
outs
jge
push
cs
std
push
pop
xor
push
pop
mov
lock
pop
dec
add
lds
add
add
xlat
(bad)
mov
test
sti
fnstcw
lahf
lods
jg
mov
loop
add
add
aam
push
stc
data16
sahf
enter
jmp
and
ror
or
fbstp
mov
push
cmps
stos
ins
popa
into
mov
inc
lods
movs
mov
pop
cmp
mov
mov
push
cmps
stos
xchg
out
mov
(bad)
fdiv
outs
dec
sbb
outs
mov
and
stc
in
fdivr
js
push
pop
pop
out
add
lds
add
add
outs
push
fst
sahf
cmp
cmps
push
loope
pusha
pop
or
arpl
imul
add
add
inc
popf
stos
push
call
jp
ret
dec
popf
popf
popf
xor
mov
div
ss
popa
sti
lds
push
sbb
add
add
addr16
sar
jns
mov
mov
(bad)
sbb
xor
aam
repnz
ins
(bad)
je
imul
jmp
add
add
add
pop
imul
adc
mov
cmps
xor
xchg
aam
repnz
loop
repz
xor
add
add
add
xchg
inc
jns
mov
pop
dec
cmp
loop
hlt
call
xchg
aam
pop
jns
xchg
xor
jmp
lods
mov
or
cmps
mov
push
cmps
stos
xchg
out
xchg
test
sbb
dec
xchg
lea
imul
loopne
pop
push
xlat
xchg
outs
mov
or
out
add
add
push
cmps
stos
xchg
out
call
dec
jne
je
sbb
xor
jbe
push
xchg
hlt
(bad)
xchg
sub
xchg
neg
jae
loop
ror
cwde
cmps
mov
mov
push
cmps
stos
xchg
out
mov
jle
outs
pushf
jae
cmp
in
mov
mov
jmp
mov
dec
inc
xchg
scas
sbb
loopne
pusha
add
mov
and
add
add
test
sub
cmps
call
es
lea
push
dec
cmp
scas
and
sbb
add
add
push
cmps
stos
xchg
out
mov
sar
pop
lea
pop
mov
inc
cmp
mov
aaa
int
imul
add
add
pop
imul
popf
jns
sahf
fisubr
in
shr
jmp
sub
movs
(bad)
out
jmp
ret
xchg
das
scas
or
push
pop
xchg
add
lds
add
add
test
lock
mov
mov
jmp
pop
jp
movs
xor
(bad)
mov
pop
ror
xchg
add
add
add
fstp
adc
mov
sti
out
mov
fwait
xor
movs
dec
sar
icebp
jecxz
imul
adc
adc
in
scas
cmp
add
add
jne
pop
imul
inc
sahf
mov
lods
hlt
repnz
das
(bad)
je
push
dec
outs
mov
(bad)
ja
popa
xchg
jge
dec
dec
xchg
xor
std
add
sub
add
add
inc
popf
stos
push
call
mov
out
ja
push
xchg
fidivr
leave
xchg
daa
pop
out
cmc
push
pop
push
mov
lds
cmp
add
add
jne
pop
imul
out
in
jmp
je
add
xlat
(bad)
je
fisubr
mov
and
out
icebp
push
cwde
adc
adc
sahf
loop
add
add
aam
push
cmp
xchg
lahf
stos
mov
dec
cwde
nop
xchg
sub
adc
dec
push
out
mov
rol
out
jmp
jne
push
pop
pop
add
cwde
mov
push
cmps
stos
xchg
out
mov
iret
jo
jle
sub
pushf
cdq
pop
js
test
cli
jmp
aaa
jle
jne
shl
mov
sub
sub
or
lds
add
add
not
stos
sbb
dec
mov
xchg
lods
push
addr16
jmp
sbb
dec
icebp
fsubrp
mov
cmp
rol
sbb
add
add
addr16
mov
xchg
repz
push
xor
mov
lock
(bad)
xchg
xchg
cli
mov
dec
lahf
ds
jmp
add
sbb
add
add
push
cmps
stos
xchg
out
inc
je
jle
sub
lock
movs
aad
push
(bad)
xchg
xchg
jmp
pushf
cmp
enter
mov
out
or
les
mov
add
jne
pop
imul
jmp
ret
test
lahf
jge
dec
repz
dec
jmp
scas
(bad)
jne
jmp
pop
das
pop
pushf
es
cwde
push
mov
arpl
loop
add
loopne
sbb
add
add
addr16
mov
xchg
stos
cmps
dec
cdq
sar
dec
retf
xchg
xchg
call
adc
pushf
push
mov
ret
xor
pusha
jo
push
add
add
inc
popf
stos
push
call
imul
mov
and
cmp
lock
dec
daa
lahf
jl
jmp
xor
cmps
sub
outs
lds
add
add
not
pop
push
push
inc
xchg
ins
sbb
mov
fdivp
int3
xor
movs
repz
cmp
in
mov
lods
pop
out
sysret
(bad)
aam
jne
add
add
stos
xchg
out
outs
shl
jne
mov
(bad)
inc
retf
xchg
mov
pop
ja
mov
outs
cmc
rcl
ltr
add
mov
(bad)
mov
inc
ins
xchg
inc
movs
jae
cmp
(bad)
repnz
iret
xchg
out
movs
pop
mov
mov
cmp
je
sbb
add
add
sub
xchg
stc
push
fwait
and
in
idiv
xor
ror
(bad)
stc
out
jnp
jne
cmp
cmps
das
(bad)
add
sbb
add
add
sub
xchg
sub
xchg
outs
cld
data16
repnz
ins
(bad)
push
xchg
scas
std
push
stos
push
xor
mov
fnstcw
add
sbb
add
add
stos
mov
or
xchg
sub
xchg
ins
(bad)
fidiv
ins
jmp
cmp
xor
jmp
in
dec
neg
ja
jecxz
pop
xor
icebp
fisubr
cmp
icebp
ds
sub
add
add
inc
popf
stos
push
call
repnz
rcl
inc
sbb
outs
mov
stos
scas
(bad)
ror
scas
pop
cld
loop
imul
mov
test
pop
push
lock
cmp
sahf
cmps
js
add
adc
add
fldcw
mov
xor
imul
daa
lahf
mov
sahf
jnp
pop
jns
xchg
imul
mov
sub
cmps
add
push
lds
add
add
mov
push
ss
enter
hlt
je
in
mov
mov
jp
sahf
dec
push
repnz
imul
mov
int
cmp
lea
cmp
rcl
js
loop
or
mov
add
cmp
lods
xor
cmp
dec
jmp
loop
sub
sub
shl
cmp
mov
fnsave
adc
adc
lea
push
inc
jno
add
add
jmp
fisub
int3
iret
das
lods
das
in
mov
dec
lea
cs
mov
es
push
jmp
ja
ds
mov
scas
frstor
leave
not
clc
js
loop
pop
add
push
sbb
add
add
out
adc
fwait
in
mov
lahf
sti
pop
jp
add
aad
mov
jnp
in
(bad)
mov
mov
dec
jecxz
imul
add
add
push
mov
pushf
add
aaa
arpl
or
xor
jp
movs
lea
jne
(bad)
lds
int
ja
sti
pop
pop
mov
push
mov
xlat
pop
mov
adc
scas
sbb
lods
mov
push
cmps
stos
xchg
out
mov
xchg
sti
shl
fld
es
pushf
cwde
cs
inc
psubusw
hlt
fsub
movs
jns
out
jecxz
cmp
lea
xor
xor
shr
mov
push
cmps
stos
xchg
out
enter
pop
loope
cld
repnz
push
(bad)
xchg
(bad)
ficom
sar
scas
pop
sbb
jmp
cmps
pop
pop
jl
jno
in
call
icebp
sbb
add
mov
lldt
mov
add
jne
pop
imul
cld
pop
ds
add
mov
jl
cmp
fnsave
(bad)
ret
nop
(bad)
shr
aad
rcr
(bad)
stc
iret
cmps
dec
xchg
movs
mov
pop
xchg
xchg
popa
push
sbb
icebp
pop
add
add
add
cmp
inc
adc
mov
jp
call
movs
scas
jl
sub
repnz
out
(bad)
jns
mov
push
stc
cmp
mov
or
pushf
sar
pop
mov
dec
icebp
mov
sbb
add
add
out
adc
(bad)
and
inc
pop
dec
pop
(bad)
clc
(bad)
shr
cmps
pushf
xchg
push
sub
nop
jle
sbb
xchg
sbb
mov
je
mov
int3
xor
out
stc
push
cmp
push
mov
ret
dec
(bad)
add
pop
jno
add
add
jmp
jmp
xchg
stc
adc
sub
adc
push
out
mov
jl
mov
loop
aam
mov
imul
ret
scas
sbb
jno
sbb
outs
push
jg
jbe
inc
sub
add
sub
add
stos
xchg
out
inc
inc
(bad)
je
pop
stc
je
xchg
neg
aaa
popf
js
mov
fdivr
pop
jp
mov
jmp
adc
or
fcomip
int
leave
fnsave
(bad)
jp
ror
lods
mov
sahf
fistp
adc
sbb
icebp
cli
push
adc
add
add
cmp
lods
xor
shl
ss
test
imul
scas
mov
fnstenv
sbb
xlat
neg
jg
mov
lahf
jb
repnz
dec
jmp
adc
lds
push
add
add
mov
shr
loope
inc
mov
in
ror
div
retf
das
dec
pop
(bad)
cli
xlat
shl
(bad)
cmp
pop
jp
movs
(bad)
out
xchg
stos
addr16
mov
int
hlt
mov
sti
fcmovnu
outs
pushf
sar
cmp
out
sbb
pusha
icebp
jge
daa
stc
pop
int3
xlat
in
jno
(bad)
add
inc
jno
add
add
jmp
mov
cmp
cld
jae
popf
lods
cmps
mov
(bad)
push
jmp
call
jae
sub
mov
mov
cmps
pop
pop
js
mov
jecxz
(bad)
icebp
jb
push
stc
xor
mov
jae
iret
leave
mov
xchg
pop
sar
test
jcxz
(bad)
jmp
scas
adc
call
jb
xlat
daa
add
add
aam
push
cmp
popf
test
daa
fs
setnp
retf
pop
ror
shl
call
add
cmps
lds
mov
xor
jmp
lods
dec
popf
popf
popf
or
cld
cmc
scas
jg
pop
jle
in
icebp
out
xchg
pop
shl
repz
(bad)
daa
pop
repz
stc
lock
cmovg
mov
mov
cmp
call
(bad)
ds
adc
mov
sbb
push
add
add
inc
popf
stos
push
call
ret
stos
fisttp
add
scas
mov
rol
arpl
ror
xchg
pop
jbe
pop
in
jmp
dec
aam
std
in
addr16
cmc
rcr
lods
pop
lahf
out
(bad)
outs
call
mov
loop
(bad)
jae
xchg
sub
arpl
sti
pop
jecxz
pop
clc
shr
daa
test
jmp
add
call
aam
ins
sar
loope
loope
shl
or
stc
pop
leave
xlat
mov
rcr
inc
add
add
test
fidiv
stos
loope
shl
mov
out
jo
cmp
in
sbb
es
(bad)
add
add
inc
popf
xor
retf
jns
outs
(bad)
in
mov
cmp
or
mov
add
jno
add
add
jmp
pop
pop
sahf
or
lock
out
gs
repz
add
dec
push
mov
add
add
dec
and
sub
das
xchg
cld
fsubp
imul
mov
fisubr
push
pop
xchg
add
add
add
mov
in
arpl
or
jne
push
pop
xchg
add
add
add
mov
test
popa
inc
pop
adc
jnp
mov
jl
repz
push
pop
xchg
add
add
add
mov
push
popa
iret
xor
pushf
sbb
or
aas
or
sbb
ret
cmp
cs
mov
sub
jmp
push
daa
test
ret
pop
cwde
adc
cld
leave
iret
scas
sbb
xchg
and
or
ds
push
(bad)
add
add
add
cmp
jge
inc
call
outs
jb
mov
mov
lods
leave
pop
or
test
retf
pop
into
or
out
and
mov
xchg
(bad)
add
sub
imul
movs
fcmovbe
add
add
dec
inc
dec
inc
scas
inc
pusha
or
jno
popa
pop
add
add
add
add
sbb
add
fs
add
push
push
inc
push
push
sar
mov
movs
rcr
add
add
pop
push
jae
jb
pop
inc
jb
imul
jne
outs
je
pop
push
imul
je
imul
pop
push
jb
push
arpl
inc
popa
je
and
imul
inc
popa
je
and
imul
outs
bound
inc
bound
pop
inc
popa
je
and
imul
jo
bound
test
add
ret
add
and
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
add
.byte
add
push
pop
.byte
