add
add
pusha
call
jmp
mov
add
sbb
add
add
add
xchg
add
add
add
add
add
inc
add
pop
push
mov
mov
mov
lods
lods
mov
add
jmp
pop
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
ret
push
mov
mov
push
push
mov
push
xor
sub
mov
mov
mov
mov
shl
mov
mov
mov
dec
mov
mov
mov
shl
mov
add
dec
mov
mov
shl
lea
cmp
jae
mov
mov
add
loop
mov
mov
mov
mov
mov
mov
mov
movzx
inc
shl
mov
or
dec
mov
jne
mov
cmp
jae
mov
lea
and
mov
mov
shl
add
lea
xor
call
test
jne
mov
mov
and
movzx
mov
mov
shl
mov
sub
sar
add
mov
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
add
mov
mov
lea
and
lea
sar
lea
mov
call
mov
and
cmp
jne
cmp
jle
jmp
cmp
jg
mov
mov
lea
lea
call
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
mov
lea
xor
lea
lea
call
test
jne
xor
cmp
mov
mov
setg
mov
mov
lea
mov
mov
add
mov
mov
jmp
lea
xor
lea
call
test
jne
mov
lea
shl
add
lea
xor
call
test
jne
xor
cmp
mov
mov
setg
lea
mov
mov
sub
movzx
mov
mov
inc
mov
jmp
lea
xor
lea
call
mov
test
je
lea
xor
lea
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
lea
xor
mov
call
test
jne
shl
mov
lea
jmp
lea
xor
lea
call
test
jne
shl
mov
lea
mov
jmp
lea
mov
mov
mov
mov
lea
mov
lea
call
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
lea
mov
mov
lea
lea
call
dec
jne
lea
cmp
mov
jle
and
mov
sar
or
cmp
lea
jg
mov
shl
shl
mov
lea
sub
add
mov
jmp
lea
mov
cmp
ja
mov
shl
mov
mov
movzx
inc
shl
mov
or
mov
mov
add
mov
shr
cmp
mov
jb
sub
or
mov
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
lea
lea
call
test
je
or
add
dec
jne
inc
mov
je
mov
mov
mov
add
sub
add
add
movzx
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jmp
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
push
mov
mov
mov
cmp
ja
mov
shl
mov
mov
movzx
inc
shl
mov
or
mov
mov
mov
mov
shr
imul
mov
cmp
jae
mov
mov
mov
sub
shr
add
lea
mov
jmp
sub
sub
mov
mov
mov
mov
shr
sub
mov
lea
pop
pop
pop
pop
ret
add
(bad)
inc
or
movs
mov
gs
in
or
aad
ror
jmp
(bad)
mov
jmp
xchg
scas
inc
es
xchg
call
mov
push
dec
push
sub
mov
sar
push
lods
(bad)
in
dec
cmps
push
das
(bad)
push
push
ss
and
mov
fsubr
mov
pop
jp
sbb
and
enter
test
imul
mov
int3
div
pop
fisub
inc
mov
mov
dec
jne
pop
xor
mov
pop
cmp
xchg
test
dec
ret
dec
mov
jecxz
cmp
xchg
shl
pop
ins
repz
push
mov
fimul
cwde
in
daa
xchg
stos
in
addr16
jne
ret
inc
(bad)
cmp
pop
inc
scas
mov
add
pop
ficomp
dec
daa
imul
cmc
mov
imul
aas
retf
add
lock
rol
add
pop
sar
jl
xor
inc
hlt
add
ficomp
pop
scas
(bad)
ficom
repz
int3
add
jmp
(bad)
sbb
ror
sbb
mov
(bad)
xchg
fild
sub
popf
sub
jae
and
icebp
adc
pusha
push
push
rcl
call
in
shl
(bad)
fcom
jmp
lods
xchg
jge
sub
lods
in
fbld
sbb
fidiv
(bad)
imul
or
mul
mov
push
jae
lods
or
and
aaa
retf
fidivr
pop
rcr
dec
xchg
jnp
adc
ins
aaa
mov
out
mov
lds
jmp
pop
push
scas
inc
or
push
jle
xor
adc
pop
xor
pop
xchg
add
xchg
cmp
push
je
pusha
in
inc
jp
ret
ins
cmp
cmp
retf
inc
adc
dec
scas
xchg
popa
(bad)
lds
jbe
pop
pop
xor
daa
loopne
dec
aas
psrld
fs
mov
(bad)
in
mov
push
test
inc
sub
and
aam
jns
lea
sub
stos
sti
es
call
(bad)
xor
pop
jmp
shl
in
pop
sahf
add
xor
pop
sub
or
mov
in
outs
xor
bound
xlat
fmul
fcom
loope
or
pop
mov
sbb
sub
xor
pop
icebp
(bad)
fimul
xchg
int
into
cdq
std
sbb
mov
jmp
pop
sbb
mov
maskmovq
test
call
movs
add
xrelease
jb
pop
enter
xor
out
jge
mov
jp
sahf
mov
inc
jecxz
xchg
out
jle
mov
(bad)
shl
push
aas
sbb
call
push
bound
mov
in
cmp
scas
mov
ins
mov
pop
aad
inc
push
jbe
cmp
or
jnp
pop
call
jb
or
pop
cmp
clc
out
mov
retf
jo
repnz
mul
(bad)
xchg
xchg
dec
add
cli
imul
ins
out
sub
xor
fiadd
mov
push
jmp
jae
into
call
add
dec
inc
and
dec
cmps
sub
popa
sub
daa
add
fstp
mov
push
seta
idiv
lods
cld
aas
pushf
aaa
inc
add
xor
jb
in
into
mov
push
xor
pop
and
sbb
xor
rcl
(bad)
in
sar
jmp
push
or
test
or
cmps
mov
test
ror
push
push
adc
pushf
in
mov
fisttp
inc
lds
sub
sbb
adc
mov
ret
test
popf
dec
xor
into
cmp
cmc
adc
sbb
jne
pop
pop
cwde
and
pop
fldcw
pop
ja
xchg
icebp
inc
pop
mov
(bad)
or
sub
jne
cs
iret
lock
stos
xor
divps
adc
(bad)
aas
cli
in
lea
cmps
and
or
retf
retf
gs
dec
rol
mov
ja
adc
hlt
jb
mov
mov
pop
jb
test
ror
cmps
push
push
mov
push
jno
push
cmp
dec
mov
popf
imul
mov
fiadd
mov
pusha
adc
call
sbb
jns
and
sbb
fist
fldenv
leave
mov
jl
push
mov
pusha
retf
inc
cmp
fmul
inc
sub
int
and
inc
(bad)
cmp
daa
pop
dec
ins
into
push
fld
es
add
add
test
sub
into
sbb
cmp
pop
adc
xchg
mov
jae
adc
hlt
cmc
loope
(bad)
stos
shl
mov
and
pop
pavgw
retf
mov
ror
repnz
mov
inc
mov
xor
push
popa
sub
xor
push
jbe
jo
jb
mov
into
movs
dec
adc
sbb
inc
jno
(bad)
imul
xchg
dec
xor
popf
clc
push
outs
ins
pop
xor
sti
jmp
je
ret
mul
sti
pop
pop
cmp
retf
js
stc
and
jmp
loop
xor
dec
push
loop
mov
stc
int
push
ss
(bad)
and
aas
in
mov
loopne
out
aam
xchg
sub
pop
xchg
and
push
sti
or
pop
mov
inc
ins
push
adc
adc
sbb
imul
add
jmp
pushf
jb
and
pop
dec
movs
or
sbb
leave
add
into
lds
pop
mov
sbb
mov
popa
mov
(bad)
in
jp
cmps
mul
fnstcw
push
xchg
jmp
sbb
clc
stos
mov
ret
(bad)
adc
sbb
mov
sbb
movs
retf
mov
int
push
ret
sbb
adc
xchg
cli
mov
pop
iret
or
daa
jg
mov
ja
lods
leave
pop
adc
xor
(bad)
xor
mov
in
dec
xchg
cmp
push
sbb
push
pop
pop
ror
dec
outs
in
ret
jmp
out
xchg
stos
pop
jnp
add
inc
jnp
enter
(bad)
dec
sub
dec
aad
popa
and
in
cmp
mov
popa
mov
data16
pop
push
or
and
mov
xchg
loopne
inc
xor
addr16
out
push
xchg
cmc
mov
das
hlt
adc
mov
xlat
hlt
fst
outs
mov
dec
call
out
sub
adc
sti
pop
sbb
lea
cmp
xchg
div
not
jl
xchg
ja
ficomp
std
std
sbb
shr
mov
sub
mov
aam
je
add
xchg
rcl
xlat
mov
movs
fldenv
mov
mov
sbb
dec
mov
mov
pop
xor
push
ins
pop
cmp
or
mov
sub
add
js
push
pop
pop
(bad)
loopne
out
mov
repz
push
mov
out
jnp
xor
push
cdq
xchg
mov
neg
mov
mov
jl
sbb
jbe
hlt
imul
mov
mov
dec
jmp
dec
xchg
xchg
aas
inc
inc
sti
sbb
cmp
xchg
mov
fild
and
popa
into
and
fcomp
add
jbe
retf
retf
mov
leave
xchg
xchg
in
jb
pusha
js
mov
mov
(bad)
(bad)
cmp
popa
and
jo
adc
cdq
sub
add
mov
sub
cmp
adc
jne
cmp
ret
sub
xor
inc
pop
mov
dec
test
loope
fadd
pop
push
imul
add
aam
push
pushf
adc
pop
out
or
inc
push
xor
jb
adc
sbb
xchg
cmp
push
test
mov
enter
xchg
std
add
push
pop
lahf
pop
cli
std
cli
mov
xor
dec
sub
lods
mov
int
loopne
fwait
adc
mov
dec
into
lods
jp
inc
add
or
mov
or
push
je
mov
mov
ins
sahf
push
mov
fucomp
dec
mov
mov
ror
xchg
inc
xchg
xchg
and
inc
mov
in
push
mov
leave
ja
add
test
mov
repnz
xor
xchg
jne
stos
rol
cli
mov
shr
lahf
xor
or
scas
or
and
xchg
xchg
inc
outs
popf
push
scas
fcom
mov
aas
pusha
sub
iret
in
and
jbe
xor
xchg
mov
xor
jne
iret
push
nop
mov
mov
sahf
xor
mov
out
xlat
loope
inc
inc
call
fisttp
hlt
iret
adc
ret
inc
mov
test
and
test
cmp
pop
cmc
cdq
xchg
popf
or
test
ucomiss
mov
lods
sub
sub
imul
je
dec
cmp
neg
cmp
mov
sti
fldenv
ja
out
aaa
add
das
aas
jg
ds
push
shl
pop
arpl
(bad)
outs
and
adc
mov
movs
add
sub
lea
sub
aad
lds
jae
in
mov
add
sti
and
out
dec
adc
sbb
rcr
inc
test
mov
inc
jbe
mov
popf
cmp
or
inc
sbb
mov
out
jle
jne
dec
stos
jp
icebp
cmp
and
jno
call
mov
sbb
xchg
cmps
cmp
dec
xor
xchg
pop
add
mov
push
aas
push
or
mov
es
iret
ja
repnz
pop
mov
add
mov
mov
retf
cwde
cmp
fistp
shl
and
push
xchg
pop
xchg
or
in
imul
scas
mov
(bad)
rcr
and
sub
in
push
popa
lahf
push
ret
lods
(bad)
ret
or
xchg
lods
and
sbb
loope
xchg
in
jle
test
sbb
retf
iret
outs
xlat
mov
push
fist
inc
add
mov
mov
sub
mov
call
call
sahf
nop
sbb
dec
cli
imul
aam
ins
das
adc
hlt
or
mov
aaa
cmps
add
aas
lock
int
dec
(bad)
aam
and
mov
dec
or
out
sahf
jp
rcr
mov
add
pop
push
inc
push
popf
xor
jmp
lds
sub
mov
adc
pop
add
pop
fwait
mov
jge
jne
outs
int3
jno
daa
xchg
jmp
fsubr
inc
retf
xor
pop
cli
pushf
fwait
adc
cmp
ret
fld
jne
dec
add
fild
cmp
sub
sub
jne
push
sub
retf
dec
sub
movs
lods
mov
test
sbb
sub
cmp
aas
aas
sub
loop
repz
hlt
xchg
inc
sahf
js
(bad)
cmp
xchg
or
mov
adc
and
mov
lods
mov
stc
pop
pop
mov
mov
xchg
jns
(bad)
fwait
leave
mov
and
gs
cmp
push
lahf
mov
in
repnz
mov
xchg
mov
and
adc
out
in
jecxz
shr
pop
dec
repnz
shl
xchg
mov
jge
pop
shr
jp
cwde
inc
rol
rol
cmp
mov
push
mov
adc
scas
mov
les
dec
xchg
adc
stos
jp
clc
test
mov
cmps
jmp
push
je
aam
lods
and
push
mov
and
aad
mov
jns
sbb
sub
loop
je
push
aas
psrlw
inc
push
or
div
sbb
loop
inc
aaa
loop
data16
ret
shl
out
pop
leave
ret
cmps
push
call
rcr
sar
sbb
popa
int
aam
lds
or
and
test
stos
xchg
jo
in
test
ret
mov
mov
mov
pop
les
inc
jb
mov
(bad)
lahf
mov
std
or
push
inc
scas
adc
iret
loope
in
and
cmp
fld
hlt
sbb
iret
scas
cmp
shl
repnz
xor
aas
xchg
aaa
dec
push
add
push
xchg
jno
and
jo
sub
jmp
push
adc
lods
pop
cli
in
ret
mov
mov
pop
aas
mov
push
loop
mov
mov
adc
out
jl
es
cdq
add
xchg
mov
xchg
mov
test
popa
pop
push
dec
(bad)
int3
and
retf
mov
jmp
cmp
add
cwde
fstp
stc
jne
mov
pop
jge
pop
jne
xlat
dec
push
push
push
push
mov
sbb
mov
sbb
inc
fmul
loope
mov
adc
je
ins
mov
shl
aad
(bad)
mul
test
jecxz
xchg
ret
cmps
sbb
xor
rcl
js
cmp
(bad)
jmp
rcl
xor
cdq
xor
iret
add
addr16
push
clc
stos
test
push
gs
jno
sbb
repz
mov
inc
push
test
jbe
xchg
mov
mov
iret
std
pop
and
loopne
ret
clc
rcl
js
mov
inc
pusha
inc
loop
ret
cmps
(bad)
cmps
pop
adc
out
ret
ss
pushf
jne
xchg
es
mov
push
mov
(bad)
iret
push
bound
ins
lahf
imul
lock
xchg
cmps
and
mov
iret
sti
cld
(bad)
fldl2t
outs
mov
cld
sbb
inc
aad
mov
(bad)
xchg
cmp
(bad)
jle
loopne
sbb
stos
loopne
repz
lods
pop
(bad)
and
sbb
sub
pop
jne
iret
mov
sbb
mov
sub
add
dec
fwait
add
jmp
hlt
add
push
addr16
pushf
and
out
cmp
repnz
dec
xchg
inc
push
(bad)
call
xor
loope
pushf
push
pop
ins
in
xchg
std
loop
push
mov
sahf
push
test
sbb
push
pusha
test
mov
daa
mov
ret
test
neg
(bad)
mov
inc
imul
fwait
xchg
pop
push
jl
(bad)
lods
push
add
int3
lock
std
mov
sbb
rol
mov
mov
test
daa
out
dec
inc
or
mov
sbb
push
xlat
pop
mov
mov
jmp
out
dec
xor
pop
mov
fs
(bad)
aas
xor
dec
jmp
add
out
xchg
jmp
je
int3
test
clc
ins
cmp
retf
retf
mov
repz
or
das
in
and
sub
xchg
cmp
pop
cmp
or
inc
cmp
movs
imul
in
sbb
add
mov
outs
(bad)
das
jno
dec
mov
es
pusha
dec
sub
ss
sbb
icebp
and
inc
jmp
push
daa
movs
ja
xor
push
lods
shl
adc
out
push
push
jmp
outs
and
adc
sub
sub
inc
push
sahf
xchg
sub
or
enter
mov
aad
push
xchg
mov
add
push
jmp
add
pop
adc
pop
loope
xor
loop
sahf
jmp
adc
mov
addr16
and
ds
push
mov
lahf
jg
mov
int3
sbb
mov
dec
int3
aas
out
dec
fidivr
xchg
xor
aas
pop
sub
in
adc
imul
mov
sub
push
fisubr
adc
aam
xchg
inc
clc
addr16
mov
daa
sbb
push
cmp
push
pop
jae
adc
xchg
aas
adc
sar
xchg
add
fstp
mov
xlat
push
mov
or
repnz
aam
sbb
retf
iret
lock
jne
add
mov
movs
jne
cld
and
or
inc
adc
fadd
xchg
xchg
call
ret
lea
mov
test
xchg
scas
mov
mov
cld
push
jge
cmp
push
xor
iret
adc
aad
icebp
dec
push
xor
(bad)
push
inc
or
mov
(bad)
adc
dec
cmp
cmp
out
dec
fdivr
ror
out
pop
jg
and
push
enter
repz
mov
iret
mov
inc
sbb
or
inc
dec
scas
scas
jecxz
out
arpl
sub
stos
push
in
in
shl
mov
ins
xor
aaa
cmp
dec
cmp
ins
scas
inc
sbb
ror
or
mov
dec
std
mov
adc
repnz
fstp
pop
lods
inc
mov
or
cmp
idiv
enter
aas
fnstsw
rcl
gs
pop
xchg
addr16
or
pop
in
out
dec
out
inc
cmp
push
scas
mov
dec
cs
cmp
ret
sbb
adc
push
cmps
pop
in
pop
cwde
dec
js
cmp
retf
lods
popa
inc
out
outs
mov
push
or
mov
mov
inc
neg
ds
sub
dec
cdq
jno
shr
sahf
ret
shr
clc
(bad)
pop
(bad)
and
sub
rcr
neg
sub
xchg
test
imul
shl
ins
(bad)
loopne
cdq
cmc
iret
aaa
sbb
outs
cmp
call
jg
test
mov
ins
bound
imul
gs
(bad)
mov
arpl
sub
and
push
ror
bound
xor
sub
jo
add
sbb
fimul
push
or
lock
pop
xchg
(bad)
out
mov
cmp
call
sar
mov
lds
(bad)
cld
mov
jbe
jbe
lahf
fucomip
out
into
dec
shl
test
std
outs
repnz
sbb
jbe
inc
push
and
jnp
xor
stc
rcr
pusha
gs
pushf
jae
mov
sti
gs
inc
test
cwde
jae
inc
enter
hlt
out
pop
mov
mov
or
xchg
inc
mov
popf
repnz
call
mov
or
cld
cmp
add
mov
fwait
adc
adc
repz
or
test
xchg
and
shr
dec
fdecstp
iret
xor
mov
into
mov
jg
xchg
mov
dec
int3
cmp
stos
pop
inc
icebp
dec
outs
mov
popa
cmps
out
pop
sbb
xor
inc
cmp
adc
push
int3
cmp
test
cdq
mov
mov
test
aaa
sub
and
dec
xchg
or
popf
hlt
call
psubusb
ret
ror
jecxz
ret
mov
xchg
xchg
jbe
jns
or
call
mov
inc
cmovl
lds
sar
dec
add
iret
pause
stos
scas
loopne
popa
xor
dec
jmp
cmp
cmp
pop
xor
cmp
call
repnz
push
jmp
mov
int3
mov
pop
xlat
loopne
retf
mov
scas
mov
data16
repz
mov
imul
in
(bad)
push
(bad)
test
or
inc
pusha
bound
mov
jno
and
fist
mov
rcr
jbe
out
jge
mov
retf
adc
sub
xchg
or
xchg
cs
mov
xchg
retf
mov
pop
sbb
cmp
in
push
jmp
fidiv
mov
dec
adc
mov
test
es
and
mov
adc
lahf
icebp
mov
add
xchg
mov
adc
dec
repnz
dec
cmp
leave
xor
push
push
scas
sahf
sbb
hlt
adc
or
and
neg
imul
cmp
jle
(bad)
(bad)
jg
fcomp
(bad)
cmp
jnp
fs
dec
lock
and
inc
mov
outs
pop
mov
out
xchg
add
cmp
push
sbb
out
sbb
ds
push
xchg
(bad)
mov
sub
sub
inc
mov
push
outs
jmp
int3
pop
movs
cdq
cs
sti
addr16
inc
or
mov
gs
aas
imul
std
jge
test
ss
aaa
mov
or
xlat
mov
aas
dec
lahf
mov
push
in
shl
fisub
pop
in
not
out
test
push
dec
sub
inc
push
(bad)
and
(bad)
sbb
(bad)
mov
fwait
(bad)
in
cdq
aaa
jl
and
sbb
stos
push
in
adc
mov
ret
repnz
iret
(bad)
repz
out
stos
jb
aas
push
sub
pop
jl
fdivp
fwait
push
mov
dec
push
mov
retf
mov
jecxz
(bad)
daa
sub
jne
jnp
ds
test
repz
call
mov
data16
shl
aaa
adc
fdiv
aaa
sub
(bad)
or
mov
ror
stos
push
sbb
fsqrt
cmp
fisubr
test
cdq
loope
xchg
lea
or
add
das
mov
ret
jecxz
or
(bad)
mov
not
fwait
pop
sub
sbb
mov
pop
push
loopne
cmp
jmp
xchg
(bad)
in
repz
mov
sti
(bad)
aam
sbb
mov
shl
(bad)
nop
push
sub
loope
mov
jle
push
dec
sub
jae
cmp
xchg
jge
jo
jmp
push
push
xchg
xlat
mov
pop
lods
mov
adc
jmp
lahf
push
pop
in
push
cmp
test
das
xor
adc
adc
xor
add
xchg
fsubr
pop
int
inc
adc
xchg
icebp
arpl
imul
push
mov
cmp
jnp
pop
in
ins
leave
test
cmp
nop
ret
mov
cmp
or
push
add
dec
dec
stos
inc
leave
xor
sub
into
mov
pop
sbb
xchg
mov
repz
(bad)
xchg
sub
pop
test
rcl
dec
mov
add
mov
ins
mov
mov
inc
mov
aas
mov
and
popf
pop
or
dec
mov
nop
gs
pop
or
jns
es
das
sbb
dec
repnz
test
cmp
push
push
jns
mov
sbb
aam
rcl
add
sar
or
inc
in
push
add
dec
cmc
pop
fs
push
mov
ret
ins
inc
retf
jae
sbb
xor
fxch
jbe
lea
mov
call
dec
movs
shl
push
je
repnz
jg
in
push
inc
push
jne
dec
rol
pop
xchg
xchg
cld
cmp
and
add
sbb
enter
xlat
(bad)
mov
sbb
push
cmp
fild
and
push
or
aas
je
jmp
mov
cmps
jno
fimul
fsub
or
les
mov
jmp
xchg
and
mov
jg
(bad)
cmp
outs
jns
stos
aam
mov
cdq
jle
and
arpl
ins
pop
push
inc
movs
mov
adc
out
pop
and
js
pop
inc
and
mov
lods
mov
xor
dec
retf
sub
add
scas
inc
xchg
jae
fdivr
mov
(bad)
(bad)
int
pop
dec
adc
fcom
call
nop
jmp
(bad)
loopne
jl
cdq
mov
sbb
jmp
or
jmp
inc
repnz
in
icebp
add
cwde
and
inc
addr16
jbe
retf
popa
add
add
jmp
aam
pmuludq
xchg
sub
repz
lods
imul
xchg
xor
lock
dec
out
inc
dec
cmp
out
push
outs
nop
xor
and
jmp
cmp
rcl
mov
jmp
(bad)
mov
push
push
pop
inc
sbb
push
imul
add
push
mov
adc
sar
cmp
xor
(bad)
pushf
adc
out
or
cmp
imul
add
fwait
dec
aas
pop
ins
clc
addr16
ja
pop
xchg
mov
out
push
or
cwde
mov
fcmovnb
std
xor
(bad)
dec
in
or
add
les
jo
aad
pusha
stos
and
mov
stos
mov
add
dec
aaa
rol
xor
add
jae
or
sbb
data16
push
xlat
mov
sub
cwde
xchg
mov
fcmove
dec
sbb
jne
and
sub
and
add
(bad)
push
dec
icebp
adc
ins
and
call
push
mov
jle
aas
xchg
push
imul
loop
mov
icebp
out
cs
stc
xchg
call
push
jns
aad
lea
dec
sbb
mov
push
mov
movs
and
push
push
cmp
scas
(bad)
movs
and
inc
adc
sub
int
mov
jmp
xor
add
mov
loopne
das
cli
mov
clc
jge
dec
lods
fbstp
stos
add
in
aad
or
xor
sbb
adc
(bad)
mov
fsubr
outs
push
loopne
jne
push
pop
sub
and
adc
add
stos
inc
sbb
xlat
pop
sub
cmps
daa
cli
dec
push
jp
jne
jns
xchg
and
sbb
das
shl
or
push
inc
movs
dec
dec
or
push
add
push
mov
or
pop
test
arpl
sub
dec
adc
(bad)
in
add
lods
push
xor
retf
jae
jg
les
sub
in
mov
in
cmps
shr
movs
add
in
cmp
(bad)
movs
cmp
xor
push
jno
mov
popf
jge
adc
fucomip
shr
fs
test
stos
xchg
ins
xor
test
cmp
in
and
sub
ss
pop
dec
aaa
ins
push
hlt
sbb
adc
mov
pop
fwait
cmp
push
and
sbb
and
jnp
push
dec
cmp
add
into
outs
adc
fisubr
push
or
pusha
lods
out
call
sbb
adc
mov
cwde
out
aam
aad
test
ret
xchg
les
jae
sub
in
ret
sub
push
outs
in
out
pop
inc
mov
adc
div
add
bound
jecxz
jae
sti
mov
and
pop
cmc
mov
hlt
xor
(bad)
push
jns
push
inc
jmp
push
and
cmp
mov
scas
fcomip
fstp
dec
pop
mov
aas
sub
sub
popa
std
add
(bad)
stc
ret
mov
cs
ss
jns
ins
sbb
or
push
hlt
fs
ins
jbe
repnz
dec
cmp
cdq
inc
lea
sbb
sahf
add
pop
lea
dec
hlt
test
cs
adc
push
pop
pop
mov
push
mov
les
dec
sub
fs
ins
adc
mov
mov
sahf
add
add
aad
pop
or
mov
lahf
cs
inc
sub
(bad)
ror
mov
scas
loopne
cmc
dec
test
dec
stos
sub
loope
rcr
mov
cmp
cwde
ja
ret
aaa
(bad)
out
lea
nop
jne
xchg
push
add
stc
hlt
or
bound
add
inc
ror
icebp
ins
daa
mov
pushf
cmps
inc
daa
arpl
mov
jmp
das
lods
sbb
test
ins
stos
xchg
daa
lock
mov
into
pop
jecxz
cs
sbb
sub
inc
enter
cmp
(bad)
sbb
or
mov
push
sbb
and
add
call
test
ins
dec
lahf
iret
xor
mov
ret
pop
mov
xlat
push
test
push
sbb
pushf
push
or
sti
jp
jno
sub
pop
leave
mov
push
ret
dec
push
in
fsub
mov
xchg
dec
shr
clc
mov
mov
or
or
mov
lock
in
lods
push
sub
or
arpl
xchg
fadd
push
in
enter
jbe
scas
pushf
fmul
add
int
bound
js
jl
das
push
or
jae
icebp
jb
and
xor
sahf
add
ins
stos
aas
jbe
xchg
dec
mov
sbb
and
and
loopne
fidiv
cdq
jno
mov
enter
push
neg
ret
in
sub
inc
movs
daa
jmp
push
mov
movs
lods
jo
ret
mov
fxtract
dec
popf
and
test
adc
jno
je
loope
dec
fnop
xchg
push
ror
cli
ds
hlt
and
pop
sub
add
xchg
push
sub
fnop
mov
(bad)
sbb
and
sub
xor
cli
and
ret
push
ins
sbb
jne
not
pop
mov
(bad)
xchg
loope
and
mov
pop
add
aaa
es
repnz
je
es
fidivr
push
in
sbb
push
(bad)
(bad)
das
pop
push
retf
(bad)
sar
xchg
push
cmp
(bad)
(bad)
mov
dec
ret
sub
mov
lods
adc
lods
and
jmp
mov
jbe
xchg
aad
adc
pop
jae
dec
or
rcl
xchg
fnstenv
stos
xor
xchg
and
adc
cmp
xor
push
(bad)
jp
clc
jne
xor
fsubr
mov
mov
ret
test
xchg
popa
div
sbb
add
jnp
inc
mov
cmp
in
imul
leave
jbe
push
mov
je
xchg
dec
imul
stos
xchg
loop
push
jo
mov
mov
std
jmp
cld
cmc
sar
add
or
hlt
mov
xlat
ficom
add
pushf
sub
(bad)
and
add
loope
test
mov
add
pop
ret
push
int3
mov
sbb
sbb
push
cmp
xchg
xor
mov
push
mov
lods
stc
mov
add
out
jo
inc
dec
nop
or
cmps
stos
pop
ficomp
jp
cdq
inc
out
cmp
outs
pusha
xor
jmp
mov
loopne
movs
push
adc
cmc
adc
repz
fmul
cmp
std
mov
add
jae
fs
pop
ss
test
pop
push
mov
dec
in
popa
push
mov
jnp
loope
dec
bound
push
ret
mov
out
dec
daa
ud1
sbb
hlt
jns
adc
(bad)
frstor
ins
mov
cwde
(bad)
mov
(bad)
mov
mov
mov
imul
fmul
mov
gs
ror
xchg
mov
dec
(bad)
push
xchg
push
ja
inc
shr
pop
or
cs
(bad)
push
add
out
adc
mov
mov
(bad)
jg
call
fs
aas
jae
sbb
in
push
xor
imul
daa
sbb
icebp
ffree
cdq
(bad)
fcomp
in
data16
nop
mov
sub
jns
push
mov
jmp
inc
jbe
add
and
aas
fadd
mov
xor
fild
push
pop
cli
int3
jle
bound
sbb
pop
aaa
adc
add
mov
xchg
fdivr
xor
or
pop
pop
icebp
cmp
mov
pop
dec
xchg
iret
mov
xchg
pop
in
and
mov
int
sub
frstor
lods
lahf
push
or
mov
jmp
mov
movs
and
and
inc
ins
repz
xor
add
mov
jae
rol
dec
push
maxps
fsub
jmp
aas
jp
cld
das
cmps
(bad)
neg
pusha
hlt
retf
lods
test
rcl
lock
in
sti
cdq
mov
push
cld
mov
loopne
loopne
push
adc
jl
mov
scas
adc
outs
jns
add
test
dec
mov
lods
stos
mov
and
or
mov
pop
and
pop
mov
(bad)
sub
xchg
push
out
out
jns
xor
cmps
repnz
or
movs
mov
mov
push
cwde
cmp
(bad)
stos
mov
bound
loope
mov
hlt
js
xor
adc
xchg
out
lds
jecxz
cld
jbe
mov
fstp
faddp
cwde
and
movs
pop
mov
rol
data16
ja
cmp
cmp
loope
cmp
pusha
icebp
pop
jno
fdiv
aam
mov
cmps
push
popf
pop
push
pop
jecxz
lahf
iret
pop
fidiv
clc
scas
xchg
mov
cmp
jmp
inc
mov
pop
sbb
cmp
mov
cmc
mov
fdiv
dec
cmp
adc
mov
sbb
xchg
cmp
sbb
das
(bad)
sub
inc
push
pop
mov
lds
lods
cmp
js
add
sub
rcl
cmp
repnz
aas
inc
es
mul
dec
mov
jae
repz
(bad)
mov
arpl
sbb
mov
adc
test
sub
dec
jecxz
inc
jo
psubsw
cmp
scas
jg
lock
and
les
mov
mov
neg
fcmovnu
mov
lods
or
dec
movs
shl
pop
aas
inc
mov
inc
retf
enter
mov
(bad)
hlt
inc
aaa
jae
jecxz
fiadd
push
mov
rcr
sbb
ret
xor
push
dec
xor
mov
pop
int
sbb
(bad)
sub
jo
mov
mov
outs
ror
nop
arpl
adc
popa
mov
scas
jge
or
jno
or
pop
mov
ficomp
dec
ss
xchg
dec
pop
mov
mov
stc
add
(bad)
or
fwait
inc
lea
inc
jmp
push
std
fwait
add
sub
mov
xchg
inc
stos
iret
pop
call
xor
push
je
mov
jmp
scas
fiadd
fcomp
xor
lods
fsubp
mov
into
jae
mov
rol
inc
loope
jb
je
fdiv
shl
cmps
adc
add
xor
xchg
pop
mov
dec
aas
pop
leave
int3
jb
(bad)
mov
cmp
or
std
cs
mov
jnp
and
inc
aas
arpl
aas
push
and
push
sbb
lods
aas
movs
sub
js
adc
repnz
pop
ins
inc
pop
sub
jge
mov
mov
(bad)
pop
adc
sbb
popf
and
sbb
stos
popa
pop
sbb
and
test
push
stos
test
repnz
rol
sub
fld
mov
and
xor
cs
scas
jecxz
test
bound
add
cld
fist
push
test
mov
xlat
lahf
mov
push
out
shl
mov
clc
repz
add
call
fistp
sub
xchg
ss
jmp
lea
inc
sbb
cld
sub
or
fdivr
inc
or
stos
sbb
pop
and
test
in
mov
push
or
push
(bad)
enter
or
push
mov
add
outs
call
pop
sbb
inc
and
pop
iret
add
int3
pop
mov
in
jp
dec
into
mov
pop
(bad)
repnz
in
mov
imul
pop
mov
sub
fcom
jbe
scas
add
in
aas
mov
pop
(bad)
mov
push
mov
xchg
or
dec
in
jp
push
xor
sub
mul
mov
mov
adc
sbb
call
mov
jp
inc
sub
cmps
lods
pop
sub
adc
push
sub
aaa
inc
pop
scas
dec
das
dec
test
cdq
jecxz
mov
stos
mov
mov
cs
mov
clc
jno
xor
lahf
mov
outs
add
add
push
jb
out
ja
dec
ins
xchg
in
pop
sbb
jae
lock
mov
mov
(bad)
jne
inc
cli
(bad)
add
jae
jns
rcl
inc
mov
add
mov
push
push
out
xchg
sbb
adc
jmp
stos
mov
and
xchg
and
adc
sbb
adc
aad
call
(bad)
out
inc
inc
mov
add
mov
pushf
loope
push
in
or
pop
mov
push
lea
jmp
test
dec
or
inc
in
push
and
scas
icebp
pop
xor
jne
mov
adc
imul
in
les
push
adc
xchg
inc
sub
nop
dec
(bad)
or
push
aam
inc
sub
aas
pop
rcr
bound
out
xchg
and
into
inc
pop
int3
imul
mov
(bad)
push
cmp
(bad)
dec
jmp
cmp
sub
loop
mov
xrelease
adc
mov
or
(bad)
icebp
adc
pop
retf
hlt
shl
sub
pop
ret
outs
mov
adc
add
aaa
popa
in
mov
xchg
(bad)
pop
sub
adc
loope
pop
fwait
dec
clc
call
adc
es
mov
cmps
inc
jns
mov
pop
dec
cs
movs
add
mov
pop
pop
out
mov
lahf
sbb
mov
cs
mov
add
inc
adc
mov
adc
push
stos
or
or
int
xchg
push
and
inc
das
fild
test
and
xor
cld
fild
mov
jne
shr
fiadd
imul
or
data16
aad
lahf
sub
(bad)
loopne
pop
mov
je
jmp
pop
jne
fist
std
and
repz
jae
push
in
adc
iret
pop
xor
sbb
and
push
scas
mov
xor
mov
and
mov
and
clc
cli
lock
aas
mov
or
sbb
pop
pop
outs
adc
int
mov
inc
adc
sbb
je
out
arpl
inc
cmp
retf
vandnps
or
or
pop
movs
aaa
xchg
bound
inc
call
adc
mov
fidiv
or
inc
and
std
pop
jl
mov
sbb
xor
jecxz
imul
mov
shl
clc
push
dec
(bad)
mov
jb
cmp
xchg
mov
push
mov
mov
enter
fs
adc
rol
adc
into
pop
iret
mov
movs
loope
nop
lods
sbb
(bad)
cmp
mov
push
jg
lock
sub
sbb
rcl
outs
(bad)
call
enter
adc
mov
sub
adc
aad
test
iret
stc
std
addr16
popf
(bad)
or
jmp
out
or
js
jg
mov
mov
mov
adc
ror
lods
xchg
je
in
in
int3
mov
push
cmp
movs
fbld
xor
jo
popf
adc
loopne
cmp
ret
pop
test
inc
pop
hlt
leave
mov
js
aam
xor
add
test
adc
mov
stos
or
xor
mov
clc
mov
jmp
inc
adc
jle
inc
add
ror
ret
sbb
popa
push
cmp
imul
fs
add
(bad)
and
adc
mov
in
test
sub
dec
movs
fnstenv
sub
movs
xchg
fdivr
pop
dec
adc
push
adc
mov
enter
aaa
push
cdq
jmp
retf
sbb
scas
out
jecxz
(bad)
mov
sahf
div
lea
enter
arpl
mov
lea
xchg
cmp
rcl
sub
add
mov
xchg
sub
xor
mov
pop
mov
push
inc
dec
xor
mov
iret
and
xor
xor
retf
lds
popa
test
push
je
shl
cmps
mov
jle
test
pop
jns
outs
xchg
je
ror
jp
cmc
popf
shl
dec
inc
jno
or
sub
fild
ja
(bad)
xchg
sub
xchg
movs
out
pop
inc
mov
push
in
and
dec
add
(bad)
in
out
aam
add
aaa
push
mov
push
push
and
pop
push
pusha
cmp
mov
and
aaa
cmps
mov
push
mov
call
cmp
cs
shl
mov
mov
shl
leave
dec
jne
sbb
xor
nop
rcr
sbb
int
bound
cli
(bad)
pause
out
mov
fisub
pop
loope
mov
push
test
push
enter
std
push
cmp
mov
lods
repz
rcl
push
pop
jmp
call
or
or
jne
clc
mov
mov
pop
std
mov
imul
lahf
mov
fcmovu
adc
and
mov
adc
scas
sub
dec
sub
dec
scas
shl
jno
or
stos
cmc
cmp
mov
scas
(bad)
adc
lds
inc
dec
mov
mov
xor
cmp
fnsave
cmps
cmp
push
dec
arpl
pmullw
push
xor
adc
shl
mov
mov
inc
les
scas
or
inc
lods
push
jg
dec
mov
scas
das
jecxz
rcr
cli
gs
fwait
mov
pop
dec
xor
mov
test
nop
jnp
aam
cmps
lea
sbb
gs
imul
cmc
mov
dec
sbb
cmp
pusha
mov
fdivr
mov
in
dec
out
rcr
mov
pop
es
inc
push
push
adc
mov
mov
dec
imul
and
mov
mov
pop
add
inc
sbb
and
(bad)
nop
arpl
aas
repz
rcl
jge
sub
jns
pusha
push
jl
stc
adc
sub
jno
jno
push
mov
repnz
je
add
jae
jmp
sub
fwait
cld
ss
and
in
push
sbb
rcr
sbb
mov
and
mov
aam
xor
push
dec
(bad)
and
push
mov
daa
aas
jb
out
pop
jnp
adc
push
(bad)
fisub
ds
pop
int
sbb
pop
mov
pop
or
push
in
rcl
push
cmp
mov
cmc
inc
into
daa
sahf
cmp
rol
outs
shr
mov
xchg
cld
sbb
(bad)
fidiv
jl
cmp
lods
adc
loop
pushf
cmc
inc
pusha
cmp
sbb
mov
mov
mov
loop
and
push
cmp
stos
cmps
inc
xchg
mov
lahf
push
push
inc
push
(bad)
in
(bad)
test
and
mov
inc
shl
dec
pop
mov
adc
popa
jge
pop
pop
inc
stos
rol
daa
aas
stos
xchg
aas
xor
sub
popa
fs
mov
fcomp
ja
add
jp
rcr
jbe
xor
pushf
(bad)
outs
jmp
aas
mov
sub
test
xor
repz
mov
call
mov
cmp
xchg
pop
and
cmp
jle
dec
mov
ins
shr
imul
inc
pop
and
scas
push
mov
in
leave
cmc
push
push
call
or
mov
mov
cmps
fsubr
xor
test
jno
cmps
pop
lea
lods
aam
loope
int
shl
xor
call
repnz
in
test
and
call
dec
call
test
xchg
ja
inc
mov
xchg
mov
sbb
pop
mov
(bad)
sti
lahf
in
dec
popf
adc
test
pop
lods
jg
mov
push
fdiv
dec
stos
addr16
movs
add
stos
xor
inc
shl
push
jb
push
adc
aad
mov
in
add
rol
in
icebp
je
adc
dec
jmp
movs
call
clc
sbb
fsubr
movs
loop
inc
cmp
shr
sub
cmp
je
jns
or
inc
jg
push
mov
cmp
fmul
pop
mov
cmp
(bad)
fdiv
shr
imul
mov
jne
ins
icebp
sbb
call
pop
ins
jle
pop
push
push
inc
xor
mov
or
pusha
lods
ins
scas
xchg
or
jmp
mov
adc
and
sub
shr
pop
imul
jl
fucom
lock
push
pop
outs
int
test
pushf
out
or
sub
into
add
mov
leave
push
inc
mov
shl
xlat
rcr
pop
in
(bad)
pop
jnp
fs
int
aaa
dec
cmps
aas
cmp
bound
mov
ret
shl
adc
mov
imul
jmp
loop
xchg
and
ds
jmp
xchg
mov
inc
xor
inc
or
pop
add
shl
jae
or
jae
pop
imul
push
test
stc
add
mov
test
dec
mov
fwait
inc
fst
cdq
imul
fcmovb
jns
(bad)
lock
test
shl
(bad)
lods
adc
arpl
bound
pop
js
(bad)
inc
inc
jmp
sub
inc
mov
data16
pusha
neg
or
mov
das
aas
js
pop
ins
sub
std
inc
sub
jae
inc
fs
jmp
loop
mov
mov
test
ret
fwait
aas
fistp
stos
mov
jmp
loopne
jmp
add
inc
cmps
test
test
xchg
cmp
cdq
add
inc
jmp
mov
mov
push
addr16
add
pop
add
fst
out
iret
and
fs
lods
sahf
inc
cdq
ds
jns
or
das
xchg
mov
aas
xchg
shr
repnz
mov
push
push
test
fnstcw
xchg
push
push
jl
pop
loopne
int3
cs
popf
jle
test
stos
inc
into
shl
movs
xor
mov
dec
xor
punpcklwd
fdiv
je
fcmovnu
aaa
inc
ins
call
mov
mov
jb
cmovle
inc
icebp
jle
in
pushf
and
pushf
cmps
(bad)
mov
adc
call
mov
push
in
retf
cmp
lea
xchg
in
je
ror
mov
push
push
inc
shr
push
sbb
mov
mov
es
outs
add
jecxz
mov
or
stos
pop
call
sub
add
hlt
fimul
dec
outs
stos
nop
fidiv
inc
pop
adc
lods
lea
nop
fisttp
sbb
inc
cli
clc
or
nop
ss
adc
outs
rcr
je
and
pop
aad
pusha
sub
mov
push
or
fstp
lahf
sbb
loop
daa
sbb
and
sar
iret
xor
cmp
aad
out
add
push
xor
cli
call
mov
out
in
pop
retf
jne
sub
cmps
push
xchg
or
lock
enter
ds
rcl
adc
mov
fcomp
int3
jae
nop
and
out
jg
mov
mov
xchg
dec
mov
mov
mov
xor
dec
retf
out
outs
xor
sub
popf
mov
nop
cmc
jae
dec
mov
in
(bad)
sbb
jns
int3
dec
mov
sahf
mov
mov
dec
xchg
stos
js
jge
(bad)
sti
in
xor
daa
mov
call
pop
adc
adc
rcl
pop
push
xchg
push
mov
pop
jb
imul
mov
mov
(bad)
hlt
cmp
xor
lds
adc
jnp
sbb
rol
je
jns
jbe
push
pop
stc
or
mov
jnp
sahf
out
push
mov
test
addr16
cmp
outs
psadbw
in
mov
jns
lock
icebp
mov
xor
inc
xlat
cmp
aad
mov
and
daa
cmps
aas
mov
cli
fld
(bad)
shr
cmp
sbb
pop
cmp
push
ret
mov
pop
call
sub
int3
fst
dec
cmp
dec
inc
mov
(bad)
cmp
jo
mov
movs
push
xchg
mov
dec
popf
repnz
call
adc
loop
into
ds
adc
or
shl
or
(bad)
mov
xchg
adc
sub
inc
outs
pop
out
cwde
rol
adc
lock
nop
xchg
xor
nop
test
mov
aaa
stos
sbb
pop
mov
sub
bound
std
popf
dec
loope
inc
pop
jno
mov
iret
imul
rcl
add
in
ret
gs
aas
(bad)
pop
mov
mov
stos
cmps
mov
cmp
daa
or
jns
pop
xchg
test
mov
(bad)
in
scas
push
push
in
or
adc
mov
push
test
sub
stos
cmp
mov
fimul
cmp
lahf
jbe
loop
pop
mov
(bad)
mov
ins
mov
int
inc
xor
mov
test
cdq
mov
jmp
(bad)
xor
movs
push
mov
leave
sub
adc
xlat
sahf
jo
shl
adc
lock
icebp
cmp
gs
ret
or
push
mov
mov
enter
inc
mov
in
mov
mov
shl
push
repnz
out
fxch
jle
inc
dec
sub
jmp
test
sahf
icebp
push
rcr
dec
sub
sub
dec
inc
sub
jo
mov
nop
test
mov
xor
icebp
and
ins
ss
push
and
or
mov
mov
sub
ins
and
jmp
mov
adc
cli
shl
sub
xchg
xlat
dec
pop
in
imul
xchg
jge
test
or
pop
sub
pop
loope
pop
repz
mov
adc
ficomp
aam
push
and
movs
and
in
add
bound
or
lock
jno
fst
shr
idiv
dec
mov
mov
cli
cs
in
(bad)
xor
(bad)
fidiv
sub
push
push
mov
fwait
xor
pop
mov
xor
inc
scas
jmp
shl
clc
jl
fcomp
pop
sub
ja
xchg
nop
ins
pop
sub
add
(bad)
cmp
xor
mov
or
cmp
test
sub
nop
and
jo
adc
mov
lea
push
loope
push
icebp
and
loop
cdq
push
cwde
sbb
sub
mov
popf
mov
out
xchg
dec
push
clc
lods
xor
mov
addr16
(bad)
push
jbe
jb
sbb
inc
cwde
mov
adc
sub
enter
or
lahf
inc
inc
jl
retf
mov
sahf
imul
and
and
fdivrp
lds
out
inc
sub
cmp
pop
repnz
and
aam
aam
daa
cmp
xor
rol
inc
or
xchg
scas
(bad)
enter
scas
(bad)
cmps
rcl
adc
jbe
cmp
outs
dec
mov
sahf
retf
stos
pop
xchg
push
mov
popa
fisubr
dec
xchg
cs
push
adc
add
adc
not
mov
in
sbb
adc
cmp
in
addr16
push
out
ja
nop
jns
mov
cs
mov
dec
push
shr
lods
outs
test
mov
sbb
es
jecxz
mov
jnp
sbb
add
loopne
js
ins
add
cmp
jnp
fdivr
push
ja
iret
cmp
(bad)
ret
test
cdq
fsubr
cmc
inc
cli
or
(bad)
fiadd
inc
mov
fs
aad
les
xor
mov
inc
sbb
jmp
push
jecxz
hlt
sub
fs
mov
cmp
xlat
mov
in
inc
and
out
pop
push
push
mov
pop
pop
push
pop
std
or
xchg
inc
xchg
test
sub
out
test
push
sub
lods
dec
aam
jcxz
jmp
add
scas
mov
shl
jbe
cmc
xchg
ja
push
test
ror
jg
cwde
arpl
fistp
mov
call
xor
repnz
(bad)
inc
push
out
dec
sar
movs
sub
adc
shl
mov
iret
ds
mov
ss
mov
out
xor
jne
sub
mov
push
and
pop
rcl
in
pop
cmp
mov
inc
or
fisttp
int
mov
sbb
mov
pop
fidivr
sub
sub
cmc
dec
jae
aaa
cmp
inc
outs
enter
das
aas
retf
xchg
js
aad
ins
shl
js
cmc
xchg
jmp
out
dec
xor
test
aas
jb
push
call
inc
in
inc
sub
xchg
(bad)
cmc
loope
mov
fdivr
retf
test
test
inc
jmp
mov
test
mov
lock
xor
xchg
loope
or
push
pop
sti
add
mov
pushf
push
push
shl
jae
push
int3
inc
imul
shr
mov
lahf
mov
mov
neg
cmps
nop
nop
lock
aam
ret
dec
and
hlt
sub
jg
test
jmp
es
cli
dec
loope
hlt
movs
xlat
aad
xchg
test
lods
popa
arpl
inc
push
sbb
idiv
mov
push
imul
mov
sahf
push
fxch
cmc
xor
pushf
mov
repnz
hlt
daa
das
ds
mov
dec
mov
xor
out
push
daa
inc
jne
test
sub
cmps
jle
(bad)
cmps
imul
or
(bad)
ja
stos
xor
jp
pop
mov
(bad)
add
cwde
retf
xchg
in
jge
daa
push
mov
pop
jo
jge
jnp
pop
movs
shr
aas
push
aad
jnp
ins
cwde
inc
sbb
mov
sub
mov
mov
sub
es
xor
pop
jle
add
mov
jecxz
mov
call
retf
inc
test
jae
or
(bad)
cdq
popa
es
cmp
adc
stos
mov
retf
cmp
push
out
adc
data16
add
(bad)
mov
scas
xchg
sbb
sbb
shl
add
lods
jbe
gs
mov
or
lock
mov
dec
fs
sub
add
mov
jbe
cmp
in
push
sbb
shl
push
cmp
icebp
jmp
cs
jp
cmp
outs
or
test
jb
repnz
xchg
or
add
mov
pop
pop
popf
xor
or
mov
lea
(bad)
jnp
int3
call
hlt
cs
push
stos
enter
mov
inc
mov
lahf
data16
and
jmp
call
sbb
xor
repnz
fdivp
aad
jnp
mov
cdq
jmp
dec
ficom
jns
sub
aad
int
iret
aaa
xor
and
outs
add
ins
add
jp
mov
mov
mov
out
push
xchg
imul
fcmovnbe
pop
and
mov
jnp
sbb
add
add
dec
add
jmp
cmps
aaa
leave
arpl
add
movs
mov
cwde
lahf
fwait
xchg
fild
je
xor
psraw
push
mov
pop
(bad)
push
enter
and
jmp
push
xlat
add
mov
pop
icebp
ret
and
call
sub
rol
(bad)
cmp
repnz
shr
(bad)
ja
sub
sbb
retf
sahf
pop
ret
sub
iret
inc
mov
push
into
push
xlat
lock
and
mov
dec
fld
sbb
into
popa
js
(bad)
xlat
out
loope
outs
std
gs
das
fidiv
and
(bad)
dec
(bad)
call
or
sub
push
jmp
ds
arpl
ror
stos
jmp
ins
mov
mov
test
mov
fwait
in
xchg
push
mov
jg
push
mov
shl
leave
dec
icebp
and
ja
jne
dec
jmp
push
dec
(bad)
push
dec
mov
pop
(bad)
jbe
jl
clc
scas
ss
outs
pop
jb
push
nop
rcl
loopne
daa
leave
pop
ds
jmp
stos
mov
mov
jl
adc
aad
test
mov
clc
cmp
mov
repz
lea
add
popf
out
pop
(bad)
in
mov
add
inc
jmp
fstp
add
loop
jo
jecxz
hlt
mov
out
or
xchg
xor
in
jl
sbb
xlat
clc
retf
lahf
aaa
inc
(bad)
inc
mov
fisub
popa
enter
scas
mov
clc
in
adc
cmp
retf
jbe
or
mov
jae
inc
fidivr
inc
repnz
push
xchg
enter
out
into
icebp
mov
mov
cmc
add
scas
imul
xchg
adc
pop
leave
add
dec
jne
adc
gs
imul
(bad)
mul
adc
jmp
or
gs
(bad)
sbb
pop
inc
push
sbb
mov
dec
jmp
push
fs
lea
shr
push
push
push
mov
fist
movs
push
mov
scas
aas
dec
push
loope
push
mov
mov
sub
dec
or
test
call
shl
and
and
sub
les
add
mov
jge
adc
mov
or
gs
repz
mov
popa
xor
push
cmp
adc
pusha
rcr
(bad)
cld
jne
js
cmp
xchg
jns
fwait
xchg
and
(bad)
mov
xchg
mov
shl
(bad)
int3
cmp
cmp
sti
mov
lahf
ins
xchg
fisttp
sar
ja
and
out
cmp
or
(bad)
(bad)
and
je
push
fadd
push
xor
fistp
mov
xor
jmp
push
dec
push
add
lods
adc
or
pop
jmp
icebp
rol
lea
loopne
mov
push
push
pop
popa
push
loope
pop
pop
cmp
sbb
pop
jle
xchg
lods
push
mov
call
xchg
pop
popf
pop
push
add
cmp
mov
ds
leave
cmc
imul
push
adc
dec
mov
inc
mov
mov
mov
mov
imul
xchg
clc
addr16
cdq
out
psadbw
test
xchg
das
pop
sub
or
dec
fwait
(bad)
out
es
ja
pusha
push
retf
div
es
ret
aad
outs
repz
mov
xor
xchg
retf
in
adc
test
push
leave
jbe
xor
call
xchg
sbb
sbb
test
test
sub
dec
mov
call
and
and
(bad)
dec
sti
aad
mov
mov
in
clc
imul
and
(bad)
ret
mov
in
mov
adc
imul
sub
inc
out
and
xchg
add
dec
(bad)
retf
fadd
inc
ret
stos
xor
and
jl
mov
pop
ret
sub
push
js
cmp
lods
pop
and
or
jle
xchg
xchg
mov
xchg
cmp
cmp
mov
retf
mov
xor
fild
xor
outs
ret
cmp
test
pop
pop
push
shl
aam
push
jo
test
(bad)
das
ror
sub
cmp
aad
test
movs
mov
mov
xchg
xchg
sbb
push
(bad)
lods
mov
mov
cmps
out
and
inc
add
ss
iret
add
dec
sbb
and
xchg
dec
or
mov
mov
outs
es
adc
cwde
hlt
push
add
mov
mov
jne
bound
aad
ins
sbb
xor
call
jl
inc
out
sub
add
xor
fs
imul
scas
idiv
iret
and
pop
jg
xor
sahf
inc
sub
xchg
std
in
cmps
scas
std
inc
ja
ret
sub
lods
adc
call
xchg
ds
int3
arpl
jg
clc
int3
(bad)
push
dec
cli
ret
push
sub
ret
adc
dec
cmp
mov
fcos
jle
inc
push
push
sar
(bad)
lock
in
cwde
dec
lahf
xchg
or
mov
mov
test
pushf
or
jle
ds
mov
jnp
not
xchg
jge
pop
adc
or
pop
rol
cmc
scas
and
fcom
(bad)
cli
xchg
mov
mov
sti
lahf
mov
bound
(bad)
in
test
mov
inc
pushf
sar
in
adc
inc
adc
imul
fcomp
xchg
inc
push
jae
les
xor
nop
addr16
shl
fistp
cmps
movs
arpl
daa
xor
aas
sbb
sub
jle
mov
test
loop
dec
fsub
sbb
loop
outs
xlat
pop
sbb
enter
adc
sbb
push
jp
in
rep
ins
mov
clc
fdivr
rol
fmul
test
ins
es
dec
mov
adc
sbb
mov
shl
rol
cs
dec
jnp
ror
cmovnp
and
aaa
scas
pop
test
js
and
cmp
gs
dec
pop
enter
mov
xor
mov
jl
or
pop
scas
test
push
dec
mov
aaa
dec
out
and
test
push
push
push
loop
(bad)
push
mov
rcr
jmp
dec
inc
int
ja
into
retf
rcl
pop
jmp
enter
sbb
mov
pushf
retf
call
and
or
int
out
jmp
inc
mov
test
and
cwde
rol
cmc
test
frstor
xor
add
imul
push
jns
mov
stos
stos
jge
and
cmps
push
jecxz
xor
or
pop
push
dec
pusha
cmp
lahf
aam
mov
call
cwde
dec
sub
arpl
dec
test
pop
aad
pop
test
mov
xchg
mov
xchg
(bad)
fmul
pop
sar
jno
cmps
jge
stos
xchg
fiadd
sbb
sahf
mov
clc
enter
add
mov
adc
mov
inc
icebp
call
(bad)
lods
test
das
pop
mov
mov
xchg
inc
or
xor
cmp
hlt
(bad)
push
push
je
adc
cmp
xlat
ficom
jp
mov
sub
inc
push
cdq
cmp
inc
test
inc
pop
push
icebp
(bad)
push
ror
into
cmp
outs
in
mov
data16
call
push
jmp
leave
enter
mov
daa
repz
pop
push
jge
or
sub
jns
arpl
xchg
lock
addr16
cld
inc
out
push
fcmovnb
xchg
es
in
cmp
mov
dec
xchg
inc
mov
ds
aad
movs
hlt
out
test
lahf
hlt
dec
pop
xor
add
sub
iret
ret
idiv
pop
mov
add
dec
sbb
mov
mov
in
or
adc
jecxz
mov
adc
out
inc
cmp
pop
retf
add
xchg
adc
mov
addr16
pop
mov
sbb
cmps
je
iret
dec
js
ins
iret
xlat
cmp
hlt
push
add
sahf
jo
sub
dec
lock
fld
jecxz
jbe
lea
outs
loopne
adc
ret
jg
cwde
and
fsubr
iret
out
ficom
mov
scas
xchg
jb
push
lds
cmp
cmps
dec
fnsave
out
call
lahf
(bad)
fdivr
scas
mov
pop
scas
mov
push
sub
or
loope
mov
or
mov
mov
sub
fstp
(bad)
shl
enter
or
mov
es
mov
(bad)
stos
fld
push
mov
mov
pop
xchg
cmp
mov
sub
ds
movs
int
popf
ss
mov
sti
inc
and
int3
cmp
loope
cmp
rol
(bad)
xor
push
push
loop
es
stos
gs
dec
sbb
push
xchg
fucomp
mov
hlt
lods
mov
shl
mov
pushf
loop
push
cmp
fisttp
lods
pop
jmp
inc
jecxz
repz
adc
aaa
dec
push
xor
adc
mov
gs
fcom
and
jno
es
jl
and
in
dec
adc
cmp
lds
dec
cli
loop
push
imul
mov
mov
fs
jg
or
xor
test
mov
iret
ds
pop
enter
dec
mov
xchg
xor
mov
lds
(bad)
lods
mov
jp
retf
(bad)
inc
jecxz
dec
jmp
ins
and
mov
adc
pop
int
loopne
scas
inc
in
shr
dec
xchg
int3
ss
jmp
push
int3
repnz
inc
test
imul
dec
fwait
out
xor
sub
pushf
jecxz
inc
in
mov
pop
jg
mov
mov
fsubp
data16
xlat
push
outs
scas
(bad)
xchg
inc
push
aam
jb
jnp
sbb
(bad)
addr16
cmp
inc
jbe
jns
adc
jge
or
jecxz
push
icebp
and
jp
cmp
xchg
popa
js
loop
out
inc
js
fisttp
lea
inc
stos
ja
mov
or
in
(bad)
loopne
bound
add
lds
push
dec
movs
pop
mov
pop
sub
mov
xchg
icebp
add
adc
retf
les
sub
loop
xchg
scas
jmp
sbb
(bad)
or
xor
out
fdiv
mov
mov
sub
inc
jge
jmp
not
xchg
mov
add
lods
sbb
imul
pop
mov
call
xor
jmp
repnz
ret
cdq
push
pop
out
shl
cs
cmc
into
fstp
(bad)
(bad)
fdivr
pop
mov
sahf
daa
ds
das
cwde
mov
mov
mov
ret
mov
in
adc
add
std
scas
js
mov
(bad)
jmp
aaa
je
cmp
out
repnz
aam
mov
je
push
add
(bad)
xchg
pushf
xchg
and
cwde
mov
xchg
dec
push
xor
sub
pop
pop
js
add
jb
icebp
push
dec
xchg
mov
dec
and
dec
pop
xor
ffree
and
pop
dec
lea
mov
ret
les
outs
or
ror
cli
jo
or
fimul
ja
inc
js
inc
(bad)
in
stc
es
mov
push
jmp
add
xor
or
sub
xor
aas
(bad)
fist
not
and
and
fisttp
pop
xor
lahf
pop
inc
cli
pop
dec
aad
outs
dec
sbb
jg
retf
dec
mov
in
add
xor
lock
mov
out
ins
addr16
xor
xor
mov
pop
jecxz
in
mov
ins
mov
cli
and
sbb
and
clc
ja
lock
les
push
movs
movs
add
mov
sti
dec
xchg
sti
mov
lds
fwait
pop
or
sbb
jbe
cmp
mov
mov
sub
addr16
add
mov
sbb
xchg
test
push
inc
adc
mov
or
push
adc
pop
jnp
cmp
sub
jns
test
or
or
cmp
jmp
(bad)
fadd
lds
gs
sar
dec
jle
dec
inc
push
lock
addr16
inc
mov
mov
js
sbb
jne
xchg
and
(bad)
jmp
pop
inc
fsubr
push
fdiv
xchg
mov
leave
cli
xor
add
jno
repnz
pop
imul
movs
xchg
(bad)
pop
test
xor
stc
fild
cmp
push
adc
xor
mov
pusha
or
iret
jnp
push
int
cwde
(bad)
fldl2e
mov
loope
jg
sub
or
push
sub
push
inc
lock
dec
pop
jmp
js
or
and
or
sbb
not
cmc
cdq
jl
sub
cmp
out
retf
mov
movs
retf
aad
adc
jmp
retf
jmp
pop
in
test
retf
mov
nop
js
push
or
xchg
push
addr16
arpl
mov
popf
sub
push
push
call
icebp
test
sbb
jo
push
pop
xchg
ja
inc
add
stos
arpl
(bad)
sub
and
fistp
and
idiv
xchg
fldenv
add
inc
iret
and
jp
(bad)
pusha
xchg
test
aad
gs
and
int
cmp
jae
inc
xchg
js
mov
add
push
mov
ins
data16
dec
adc
and
mov
mov
stc
rcr
mov
jnp
(bad)
loopne
mov
add
push
jg
fild
xor
pop
xor
pop
das
push
mov
in
nop
retf
inc
jnp
(bad)
daa
and
jno
push
popa
mov
jbe
(bad)
xchg
and
push
hlt
shl
mov
mov
cmps
xor
popa
adc
mov
pop
lods
mov
fsub
rcl
xchg
pop
mov
(bad)
xchg
clc
pop
dec
cmps
call
jb
sub
rcl
pop
inc
lea
rol
pushf
mov
push
adc
xchg
xlat
data16
mov
xchg
bound
aam
idiv
or
push
lea
mov
lock
cmp
xchg
mov
imul
push
out
cmp
sub
sub
test
cmc
das
popf
std
push
push
into
and
mov
xchg
push
lods
mov
jne
xchg
mov
hlt
pop
cmp
or
fist
adc
mov
xlat
dec
mov
mov
lods
dec
test
(bad)
jmp
jb
xor
retf
or
pushf
xor
cmp
aaa
imul
mov
mov
dec
and
push
sbb
adc
sub
fstp
xchg
nop
mov
jle
cmc
shr
cmp
dec
sbb
pop
dec
and
xor
in
jmp
aam
test
lods
iret
aaa
(bad)
jg
lods
cmp
ds
mov
add
test
cld
jno
fdivrp
daa
jge
test
out
enter
loopne
and
lahf
(bad)
xor
jmp
mov
or
(bad)
push
stc
packssdw
movs
out
xchg
loope
jecxz
repz
inc
mov
js
(bad)
jmp
or
pop
in
retf
adc
std
sahf
imul
mov
sahf
cmp
loopne
adc
outs
jnp
test
and
lods
retf
xchg
ficomp
cli
cli
fnstsw
shl
add
das
inc
addr16
pop
fstp
repz
jne
push
ror
addr16
pop
outs
jns
or
sbb
pusha
mov
das
mov
clc
adc
inc
inc
ins
int
iret
std
xchg
adc
mul
stos
outs
xor
rcl
jmp
mov
inc
jns
sar
xor
ins
scas
stos
jae
rol
xchg
imul
and
imul
rcl
push
div
or
fdivr
mov
and
in
fstp
fisub
test
adc
mov
ret
popf
mov
lods
push
data16
pop
or
mov
jno
arpl
xchg
retf
add
lods
mov
add
test
test
scas
jg
fwait
lds
or
or
in
cmp
sub
dec
aaa
(bad)
fwait
xchg
inc
pop
ja
inc
pusha
or
mov
popa
repz
stc
pop
jae
mov
push
mov
cmp
xlat
rol
ror
movs
in
mov
rcl
xchg
adc
push
imul
das
mov
cmp
adc
retf
lea
repz
or
aad
and
xor
fisub
jle
ret
mov
push
stc
call
mov
mov
dec
cdq
adc
sub
pop
mov
outs
mov
or
pop
and
arpl
in
stos
and
sti
(bad)
mov
test
xlat
or
out
and
cmps
pop
ds
(bad)
mov
add
das
mov
push
in
les
sub
les
fisttp
in
jne
dec
xchg
in
rol
jbe
sub
ret
fld
sub
jg
cmp
jg
mov
sbb
out
ss
mov
xchg
stos
cwde
shr
mov
retf
mov
stos
clc
fcomp
clc
int
xchg
adc
push
mov
add
daa
sub
je
mov
mov
push
inc
and
cmp
add
mov
repnz
jae
dec
lahf
loop
fimul
cmps
scas
imul
test
outs
pop
jb
xor
cmp
inc
push
jl
call
inc
aam
leave
punpckhdq
pop
pop
xchg
leave
(bad)
popa
(bad)
aas
dec
popf
xor
loopne
ss
or
mov
jg
jmp
sub
jge
lods
(bad)
xchg
nop
xchg
push
int
mov
adc
jnp
and
mov
fdivr
mov
mov
sbb
data16
lods
aas
int3
rol
jge
jbe
pop
fist
lahf
add
leave
iret
or
in
jle
sub
pop
dec
add
es
and
int3
xchg
push
mov
xor
imul
push
daa
stos
add
jmp
xchg
(bad)
push
fstp
dec
dec
fist
dec
hlt
nop
imul
pop
fs
scas
adc
or
ret
fstp
out
and
cwde
add
int3
xchg
pushf
jbe
call
outs
sbb
sbb
jg
popf
dec
hlt
sbb
sub
mov
fwait
jno
aaa
dec
cmp
push
mov
sbb
fistp
or
jmp
xor
fmulp
mov
lods
(bad)
cmp
test
sbb
sbb
fwait
jo
dec
and
retf
push
cmc
push
and
fmul
mov
pusha
pusha
push
jnp
add
pusha
xor
adc
clc
(bad)
leave
shr
inc
call
not
int3
sub
es
xor
ror
repz
cmps
inc
xchg
nop
dec
or
jmp
mov
add
inc
jbe
push
push
xchg
xor
mov
mov
and
dec
mov
lock
scas
fwait
sbb
xlat
push
sbb
mov
mov
mov
pop
fcomp
cmp
dec
dec
sti
scas
push
ret
sub
imul
ret
lahf
stc
call
dec
call
adc
loope
data16
or
cmps
fwait
dec
es
pop
repz
sbb
dec
cld
mov
jo
lea
push
adc
jns
(bad)
aaa
repz
cmp
sahf
fidiv
mov
(bad)
out
and
sbb
mov
(bad)
mov
ds
in
mov
inc
cmc
das
(bad)
lahf
je
adc
adc
mov
jp
inc
js
mov
clc
push
xchg
adc
sbb
add
pop
xor
hlt
push
xor
mov
jmp
lods
rcl
loope
adc
popa
idiv
out
dec
inc
mov
test
jno
jae
xor
outs
sbb
fmul
fwait
push
jbe
pusha
daa
sbb
sbb
ror
repnz
xchg
in
imul
or
fs
inc
mov
mov
jecxz
outs
popa
jmp
aas
and
lods
les
xchg
and
xchg
mov
int3
mov
imul
mov
adc
sub
cmps
mov
icebp
nop
movs
es
mov
daa
(bad)
and
push
and
fidiv
fdiv
pusha
iret
mov
mov
jbe
push
xchg
sbb
mov
xor
sub
stos
(bad)
mov
pop
mov
into
sbb
out
or
jmp
(bad)
mov
cmovnp
pushf
data16
div
push
arpl
(bad)
in
dec
fadd
xchg
stc
mov
dec
cmc
ins
dec
xchg
cmp
mov
adc
mov
mov
bound
or
repnz
cwde
sbb
jo
cmp
mov
mov
repnz
bt
clc
icebp
das
loope
(bad)
push
adc
pop
pop
xor
jo
into
xchg
cwde
aam
call
gs
pop
sub
daa
call
mov
lods
push
pop
inc
les
ds
pop
ss
loop
and
dec
aaa
xor
(bad)
jns
mov
cmp
xor
xor
outs
cmps
sti
repnz
jb
sub
iret
or
data16
out
rcl
fucomp
arpl
sbb
xchg
lods
in
bound
xchg
jmp
loope
push
add
and
addr16
pop
es
pushf
adc
xchg
mov
jge
pop
fs
test
and
fcmovnu
and
and
inc
icebp
mov
jl
pop
scas
(bad)
or
xor
es
icebp
stos
jge
xor
popf
loop
jne
mov
test
add
jns
inc
mov
push
cdq
jb
bound
(bad)
jno
mov
adc
sub
adc
inc
or
stos
mov
hlt
xchg
nop
xor
ss
ret
push
stos
sbb
inc
sbb
xor
int3
dec
or
xchg
(bad)
fidivr
dec
aaa
fldenv
mov
cli
dec
jns
imul
sub
xchg
test
or
fnstsw
sbb
pushf
fs
jmp
mov
dec
add
loop
pushf
or
push
(bad)
mov
mov
mov
es
retf
(bad)
ss
sub
xor
adc
or
cld
sbb
les
add
fs
daa
pusha
imul
ds
and
dec
popa
repz
scas
aad
xor
test
mov
xchg
inc
int
adc
pop
push
data16
jge
scas
in
cs
cdq
xor
popa
inc
iret
pop
add
jmp
mov
shr
out
add
jbe
adc
gs
sbb
lods
or
gs
addr16
aaa
add
imul
sbb
xchg
push
cmp
mov
xor
movs
outs
ja
in
sub
std
xor
add
mov
adc
jns
sub
inc
push
loope
(bad)
jo
rcr
adc
shl
in
lods
add
jnp
and
push
pop
fdivrp
mov
dec
movq
jmp
cmp
scas
cmp
and
(bad)
(bad)
test
xor
ins
scas
sbb
sbb
movs
xor
std
xor
sbb
movs
sar
inc
test
mov
ret
jne
jmp
and
es
jp
in
fmul
outs
jp
cmp
sub
mov
add
fwait
repnz
and
push
inc
xchg
push
xchg
push
pop
dec
jo
bound
loopne
pop
jle
data16
ficomp
cmp
cs
and
dec
fisttp
mov
loop
loopne
inc
enter
jmp
mov
jmp
fild
mov
xchg
imul
sub
xchg
ins
rcr
pop
pop
jl
add
mov
jge
fs
pop
mov
and
sbb
jns
(bad)
lock
sub
xchg
push
inc
jb
push
lods
lods
sbb
sahf
int3
jmp
jnp
pop
test
push
mov
dec
sbb
mov
clc
mov
mov
add
jnp
pop
xchg
lds
retf
cld
shl
jnp
add
sbb
inc
pcmpgtd
xchg
mov
cmps
inc
push
std
scas
lea
push
addr16
mov
fdiv
(bad)
pop
out
add
add
fcom
daa
xchg
test
cmp
in
lahf
pushf
cdq
cmp
xchg
imul
(bad)
mov
dec
pop
sar
mov
pop
retf
push
fldcw
hlt
imul
inc
add
mov
inc
test
ret
iret
scas
ficom
and
cmp
xor
int
mov
fisub
pmuludq
cs
ins
mov
dec
pop
dec
and
je
mov
or
outs
jnp
imul
mov
ins
int3
imul
or
in
mov
jp
in
outs
cs
std
mul
outs
cmp
sub
in
idiv
(bad)
adc
(bad)
xor
mov
lock
xor
arpl
mov
daa
pop
cmp
cmps
jg
ss
lahf
fwait
(bad)
and
pushf
push
dec
jbe
imul
adc
or
dec
push
add
sub
push
call
(bad)
imul
mov
or
(bad)
mov
fsubr
lods
xchg
cdq
nop
mov
sbb
imul
fstp
(bad)
into
dec
test
(bad)
mov
mov
jns
in
(bad)
outs
ret
and
test
cmps
or
cdq
fs
iret
sar
cmp
dec
xchg
adc
ficomp
ja
dec
call
loopne
pop
inc
clc
js
lahf
pop
lea
pop
imul
pop
imul
adc
mov
retf
jge
mov
fbld
jb
aad
les
fimul
push
sbb
mov
push
sbb
jg
inc
mov
call
pop
jno
and
push
in
and
mov
nop
add
pop
out
ror
inc
inc
pusha
movs
idiv
mov
jo
jb
fisubr
or
or
inc
outs
or
jl
pop
repnz
std
mov
test
push
mov
xor
lods
xchg
jp
fisttp
or
out
inc
adc
into
push
les
in
pop
sub
pop
mov
cli
sbb
es
pop
idiv
dec
sbb
shl
sbb
xchg
jb
xchg
nop
and
push
sti
ja
aad
cmp
jae
mov
movs
push
sub
sti
mov
(bad)
lea
scas
rol
push
jno
scas
gs
push
xor
rcl
xchg
sbb
loope
xchg
loope
pop
xchg
push
ja
inc
inc
and
sbb
dec
and
cld
sar
or
fidivr
sub
movs
cli
inc
out
xchg
ror
or
adc
lea
xchg
sbb
lock
(bad)
add
(bad)
in
add
pop
ret
loopne
dec
jns
sbb
fist
adc
test
fsubr
dec
mov
sar
dec
pop
or
jge
fisub
xchg
xor
xor
in
pushf
pop
push
hlt
sub
or
cmp
cmp
pop
sub
mov
dec
xchg
repnz
fnsave
and
aaa
retf
adc
xor
and
sbb
fstp
or
adc
dec
fisttp
out
mov
into
mov
in
mov
jle
push
cs
or
mov
retf
jo
cli
fisttp
scas
mov
pop
(bad)
aam
push
repz
ja
and
in
cmp
retf
mov
ror
xchg
loope
ret
pop
cmp
cmp
lods
sbb
inc
retf
xor
loope
mov
jns
push
adc
xchg
and
sbb
loopne
cli
cld
xchg
dec
pop
mov
arpl
xchg
icebp
add
jne
cmp
call
mov
jecxz
push
sbb
das
inc
shl
js
mov
mov
mov
(bad)
xchg
add
cmp
aaa
pushf
rcr
pop
gs
out
sub
add
cs
mov
movs
mov
sbb
mov
out
jp
add
cdq
jge
sub
sub
mov
mov
cmps
(bad)
xor
xor
mov
outs
sub
adc
xchg
cmc
dec
rcr
jnp
mov
jb
xchg
addr16
dec
loop
push
jnp
or
push
add
and
int3
jmp
fadd
call
or
inc
xchg
adc
dec
std
popa
jne
dec
jmp
mov
neg
fdiv
sbb
jnp
mov
pushf
lods
clc
dec
mov
ss
jb
out
cmps
sbb
inc
xchg
scas
push
push
add
movs
jno
push
rcl
sbb
test
es
jnp
loopne
sbb
jg
mov
jecxz
ins
pop
inc
push
and
push
xor
pop
jmp
mov
mov
je
xchg
jae
cmp
pop
add
add
add
sbb
mov
sub
cmp
jg
dec
ffreep
es
dec
or
jg
rol
inc
add
jl
stc
idiv
cmp
out
sub
push
sub
sbb
xchg
jecxz
xor
(bad)
inc
mov
into
(bad)
movs
inc
jmp
pop
jecxz
jl
xchg
int
aas
(bad)
sub
sub
or
ja
pop
inc
sub
cmp
pop
popf
mov
outs
popa
xor
loope
and
(bad)
fist
push
cs
xor
or
(bad)
imul
push
add
and
or
xchg
cld
fwait
push
(bad)
js
addr16
fdiv
cld
jmp
clc
dec
jp
cmp
sub
jle
popf
xchg
push
push
mov
pusha
dec
pop
nop
stc
data16
leave
lea
arpl
push
mov
sbb
cli
add
call
add
dec
inc
sub
cmp
adc
inc
push
mov
mov
adc
mov
or
mov
jno
pop
fldenv
pop
dec
je
jo
std
loope
sti
sub
mov
push
imul
cmp
inc
pop
push
(bad)
call
fild
ja
fnsetpm(287
fst
inc
ficom
cmps
in
jl
in
dec
fist
push
bound
xchg
iret
mov
inc
xor
iret
mov
stc
cs
mov
retf
inc
lea
jecxz
mov
loopne
xchg
jg
in
movs
pop
adc
int3
shl
or
stos
xor
adc
sub
xchg
les
dec
cmp
adc
xchg
mov
mov
xor
ret
mov
fdivr
(bad)
sub
pop
(bad)
mov
push
inc
mov
xor
fwait
jnp
div
sahf
xchg
xchg
cmps
cwde
mov
xchg
xlat
stc
icebp
adc
pusha
pushf
loop
or
shl
call
or
out
jnp
and
xor
loopne
test
popa
push
inc
mov
(bad)
aad
jl
cwde
cld
xor
ds
inc
push
aaa
test
das
pop
dec
popa
push
dec
es
push
dec
out
fisubr
cmp
adc
inc
xor
fstp
stos
and
mov
pop
fwait
adc
outs
cdq
jno
jmp
mov
sbb
clc
in
jmp
xchg
int3
cmps
sbb
push
scas
add
push
imul
mov
dec
cmp
pop
push
pop
cmp
inc
jle
(bad)
pop
xor
scas
cmp
inc
mov
imul
xlat
sub
(bad)
in
jns
out
dec
dec
mov
lock
lods
pop
sbb
scas
adc
inc
pop
jg
call
int3
inc
(bad)
rcl
lods
(bad)
loop
sar
jmp
mov
mov
nop
ss
lds
jle
test
sub
call
inc
repnz
mov
xor
xor
pop
movs
mov
mov
mov
lea
loop
mov
out
add
pop
inc
mov
cmp
sbb
cli
sbb
daa
dec
jge
xchg
repz
mov
jb
dec
adc
aad
js
aam
ss
mov
je
cmp
or
xor
fs
ja
movs
jb
push
movs
adc
rol
loope
call
movs
xlat
pop
icebp
jbe
push
imul
jmp
js
add
mov
cmps
ficom
popf
sub
sub
add
pop
hlt
and
arpl
mov
jp
shl
dec
add
xor
aas
stos
lods
popa
dec
mov
cs
sahf
fiadd
xchg
jbe
xor
jecxz
outs
xchg
aad
jmp
and
int
xor
jecxz
cmp
xchg
jne
out
and
ret
pop
or
mov
pop
add
sti
inc
(bad)
movs
pop
cmc
xor
sub
std
add
in
sbb
leave
hlt
mov
leave
mov
sbb
call
xchg
test
dec
jne
loope
pop
sbb
mov
nop
clc
cwde
jmp
mov
xchg
cmp
scas
xchg
fst
jb
std
cmp
jns
mov
jnp
pop
cmp
scas
inc
push
xchg
cmp
into
jns
ja
jmp
push
arpl
aas
mov
ret
sub
mov
xchg
dec
cmp
inc
and
or
xor
xchg
out
mov
push
cdq
mov
(bad)
outs
out
scas
cmp
seto
push
lahf
xor
clc
dec
dec
test
pop
push
repnz
mov
in
add
adc
outs
lea
mov
repnz
and
jae
xchg
popa
xor
inc
push
add
dec
mov
loop
or
mov
loope
or
icebp
call
sub
xchg
jge
stos
out
popf
pop
push
dec
jb
imul
lock
push
mov
cli
lods
icebp
xchg
pop
xchg
mov
call
inc
retf
xor
add
and
test
mov
mov
xor
fucomp
arpl
out
dec
fnstsw
fadd
sbb
inc
lods
pop
ins
fs
cli
cs
test
pusha
and
mov
sahf
mov
xchg
adc
icebp
jl
xor
push
iret
mov
jmp
fs
fwait
xchg
add
dec
adc
std
lods
aam
std
or
movs
ja
mov
mov
inc
push
imul
and
sub
add
jmp
inc
arpl
int3
xlat
adc
xor
or
mov
fsubr
iret
and
or
dec
cdq
add
sbb
fs
inc
jge
mov
sub
mov
in
(bad)
rol
scas
xchg
xor
std
rol
js
push
mov
adc
jp
sbb
mov
fdiv
jbe
xor
out
(bad)
jnp
push
ja
mov
(bad)
fucomp
leave
dec
pop
cmp
adc
sub
int
inc
test
ds
rol
sbb
jp
xor
outs
adc
mov
pop
push
retf
mov
lock
sub
lods
add
shr
rol
sahf
xchg
js
pop
div
xor
es
jbe
(bad)
mov
sbb
xor
xchg
in
mov
dec
mul
shr
call
lods
icebp
test
pop
movs
jo
loope
mov
hlt
add
cmp
mov
fist
movs
jbe
sub
mov
jbe
shl
iret
jbe
add
and
mov
sti
call
or
dec
or
aas
leave
cld
test
add
int3
cmps
add
xchg
inc
cmp
ret
xor
test
inc
or
ret
pop
cli
in
in
jne
arpl
jbe
add
arpl
inc
adc
movs
into
or
sbb
ins
dec
lock
inc
cdq
push
test
jg
sbb
sbb
cli
inc
inc
dec
jge
cmp
aad
dec
mov
jbe
(bad)
les
jmp
and
mov
sbb
dec
ret
mov
aaa
jle
leave
les
xlat
(bad)
inc
sbb
pop
sbb
push
mov
in
movs
xchg
enter
xchg
ins
mov
dec
dec
hlt
cmp
call
rol
jns
rol
std
ret
cmc
loop
sub
fs
clc
add
call
cmp
add
mov
mov
pop
stos
or
pop
push
loope
mov
dec
in
jl
pop
mov
out
les
mov
test
ret
out
nop
imul
lock
mov
lea
call
or
arpl
stos
push
in
mov
and
popf
and
xchg
push
cmp
je
xchg
arpl
fwait
mov
mov
cli
jecxz
shr
mov
(bad)
mov
fs
mov
inc
sub
loopne
retf
aad
rol
xor
xor
push
mov
inc
out
in
jmp
pushf
ror
xor
pop
pop
adc
add
xor
icebp
pop
arpl
stos
push
cmps
movs
enter
stc
cmps
ror
xchg
sub
or
xor
arpl
inc
push
mul
lods
fild
push
pusha
in
and
int
xchg
in
jmp
pushf
rcr
mov
in
inc
mov
in
adc
cmp
cwde
ret
xchg
outs
pop
add
rol
in
arpl
aam
sub
sub
mov
lahf
sar
jmp
sahf
jp
dec
cmp
data16
push
dec
jbe
out
movs
xchg
xor
out
test
imul
cmp
dec
test
xchg
pop
(bad)
test
pop
xchg
loop
(bad)
imul
sbb
sub
xchg
jmp
(bad)
adc
fdivr
mov
mov
(bad)
gs
int
sti
xor
into
inc
les
xchg
mov
fsub
call
outs
loopne
adc
adc
dec
repz
add
sub
addr16
cdq
or
repz
mov
sbb
inc
idiv
sub
jo
or
and
xor
xchg
call
mov
push
push
mov
out
neg
fdiv
push
adc
(bad)
inc
mov
xchg
inc
pop
ja
mov
je
out
cli
aad
dec
adc
lea
adc
xlat
es
retf
nop
push
dec
xchg
enter
mov
into
aad
sti
ins
cmp
mov
pop
mov
and
int
es
xor
loope
and
mov
cmps
mov
pop
pop
push
sti
(bad)
into
mov
cmp
inc
or
xchg
arpl
int
int
sbb
adc
call
es
and
clc
add
and
push
xchg
in
push
sbb
cmc
les
gs
mov
test
push
xor
into
mov
pop
enter
pop
in
ficom
lea
cmp
frstor
scas
sar
add
sub
fs
popf
sub
stos
jns
or
mov
popa
fs
jecxz
js
mov
movs
dec
retf
imul
sbb
add
in
psubsw
jmp
mov
inc
sub
jge
mov
xchg
out
jge
out
aad
push
aaa
sub
sbb
push
or
fstp
dec
mov
add
cmp
mov
dec
xor
push
inc
(bad)
aam
test
push
fisttp
mov
mov
sbb
daa
and
outs
inc
scas
rcr
jo
cdq
loope
pop
shl
mov
loopne
adc
call
xor
add
xlat
aam
sbb
jb
sub
push
out
mov
cdq
jnp
sub
iret
loopne
popf
or
pop
in
fild
fimul
out
push
test
fsubr
pusha
jb
and
mov
push
jo
mov
add
sti
adc
retf
(bad)
jge
or
pop
aaa
xchg
test
fwait
(bad)
sbb
shl
adc
mov
popa
cdq
adc
jl
out
ret
jb
cdq
xchg
das
xor
aam
in
sar
cmp
mov
(bad)
sub
sbb
cmp
add
sub
xchg
gs
push
xchg
pushf
dec
mov
push
lea
out
cld
mov
or
sahf
mov
inc
sbb
mov
mov
add
sub
(bad)
jno
aad
clc
cmp
(bad)
pop
gs
out
jp
test
ds
xchg
cs
inc
adc
out
xor
jmp
imul
push
cli
or
int
xchg
pop
dec
adc
adc
ficomp
lods
sbb
cwde
test
out
xchg
jmp
xor
push
retf
adc
mov
or
inc
mov
aam
ror
mov
int
pop
mov
xchg
lods
jns
cs
retf
xchg
test
es
cdq
ds
and
aas
ins
mov
cmp
inc
xchg
push
mov
jl
in
ror
push
cmp
sbb
inc
jbe
out
pop
sub
xor
cmp
ja
test
retf
mov
loop
mov
mov
add
sbb
cmp
imul
add
sub
dec
fwait
lds
les
mov
add
pop
ret
sbb
inc
fdiv
neg
je
ds
out
xchg
in
enter
ins
cwde
mov
adc
aas
push
jno
xchg
repnz
xchg
mov
cdq
jb
les
pop
(bad)
cmp
mov
sbb
jae
inc
adc
mov
scas
jle
push
arpl
push
xlat
(bad)
xchg
sar
add
jl
adc
pop
xchg
or
mov
push
jmp
push
mov
and
retf
(bad)
stc
xchg
cmp
xchg
call
cmp
xor
sbb
adc
sbb
rcl
sbb
ja
lods
stc
inc
ja
call
cmp
adc
xor
fcmovnb
pop
rcl
push
rcl
adc
xor
pop
leave
loopne
sbb
sub
inc
cld
ret
inc
push
pop
je
jo
jae
popf
mov
mov
(bad)
shl
pop
adc
lods
sti
inc
mov
cld
push
stc
test
ret
xor
mov
(bad)
(bad)
sub
in
cli
sub
mov
inc
inc
outs
es
dec
in
or
adc
test
sahf
jnp
dec
loope
add
std
out
outs
ja
ror
sti
lods
loop
mov
adc
sub
push
sub
aam
mov
lods
(bad)
or
ins
ins
xlat
ja
sub
lods
jp
fninit
imul
(bad)
test
add
stc
adc
movaps
push
in
mov
test
pusha
jecxz
or
outs
jmp
mov
std
and
idiv
fld
ds
jmp
push
jns
cmp
add
or
mov
leave
jmp
and
scas
ret
imul
(bad)
fwait
pop
shl
or
mov
pop
push
fcomip
mov
scas
pop
xchg
or
call
je
jae
pop
ins
mov
into
mov
pusha
xor
pop
or
jmp
std
mov
sbb
aam
les
xchg
xlat
push
dec
mov
imul
in
rcr
popf
popa
jl
xor
inc
(bad)
add
mov
ror
popa
shr
popa
mov
mov
jle
imul
mov
push
mov
loope
add
adc
cmp
fs
and
std
adc
mov
cs
xor
sbb
enter
mov
jbe
int
jo
add
fild
fs
add
add
dec
cmp
mov
ficomp
rcl
and
jecxz
mov
jb
inc
mov
lahf
fistp
jnp
stos
add
and
fbstp
and
popf
push
ds
mov
loope
push
popa
sbb
rol
int
adc
loopne
jns
mov
cmps
lods
sbb
dec
das
out
into
stos
inc
movs
lods
clc
mov
call
outs
xor
mov
sbb
pop
sub
or
add
dec
leave
enter
xchg
or
cdq
cmp
jae
(bad)
cdq
or
leave
jno
sub
mov
cmp
dec
jl
fwait
add
and
and
test
pop
test
test
push
rcr
jne
cmps
fst
dec
out
sub
imul
mov
add
in
call
(bad)
mov
mov
rep
sub
leave
pop
pop
fldln2
ins
fsincos
stos
xchg
ret
or
pop
gs
jl
nop
mov
je
loopne
sbb
or
repnz
xor
test
mov
stos
sub
add
and
pop
push
(bad)
lock
cmps
scas
fist
inc
push
dec
movs
or
hlt
dec
std
dec
mov
pusha
adc
sbb
sbb
icebp
pusha
mov
and
add
repnz
mov
push
or
popa
shl
add
sbb
pop
pop
jnp
xor
lahf
or
lods
fcom
gs
push
enter
push
inc
pop
push
xlat
or
imul
push
push
out
xlat
retf
and
and
out
cmp
mov
gs
inc
mov
xor
mov
xlat
push
into
ds
ror
lahf
add
add
(bad)
(bad)
mov
sub
adc
int3
and
icebp
fwait
jmp
inc
call
in
(bad)
(bad)
inc
(bad)
pusha
sbb
(bad)
pop
adc
jle
and
loopne
in
iret
pop
(bad)
jl
int3
push
movs
call
inc
ret
lods
mov
mov
mov
inc
cmps
out
pop
aad
fwait
and
push
mov
mov
inc
cmc
dec
fild
loope
and
movs
sti
and
in
pop
mov
and
cmps
imul
iret
pop
push
fs
leave
inc
cld
xchg
rcl
lods
adc
std
std
cmc
inc
jge
jp
jnp
mov
pop
std
daa
jg
mov
clc
pop
cdq
hlt
inc
cld
dec
push
sbb
xchg
mov
push
add
daa
cmp
and
fimul
mov
and
imul
(bad)
test
repz
outs
(bad)
xor
in
in
aas
inc
sbb
shl
xor
(bad)
or
adc
pop
mov
mov
or
push
mov
pusha
or
ins
mov
popa
adc
ret
fadd
or
daa
inc
push
push
sar
not
lock
adc
xchg
fiadd
mov
rcl
jl
aad
fist
stos
out
loopne
jecxz
push
adc
fmul
and
or
cwde
fisttp
inc
cmps
inc
mov
aaa
int
dec
mov
dec
in
and
in
shl
fld
loop
inc
or
outs
sub
adc
add
add
jo
dec
bound
mov
(bad)
out
and
idiv
dec
into
iret
outs
fabs
adc
enter
std
cmc
mov
ja
mov
dec
stos
fwait
push
mov
inc
call
cmp
clc
xor
not
or
mov
test
push
std
cmp
in
sub
into
mov
cmp
les
mov
fcomip
fmul
pop
scas
cmp
inc
ret
push
push
leave
mov
rol
pop
push
push
stc
ins
aas
cmps
lock
sbb
loope
or
mov
mov
dec
cmp
dec
shl
adc
dec
jmp
call
popa
jns
(bad)
aam
and
push
jg
fwait
or
sbb
and
fdivr
or
mov
mov
int
repz
sbb
cmp
cmps
or
test
pusha
xchg
push
ins
adc
fidivr
mov
andps
movs
pop
fwait
scas
and
jne
sub
movs
push
push
in
dec
dec
cwde
xchg
fs
inc
inc
mov
adc
scas
shl
adc
call
dec
jns
mov
push
and
es
sub
sbb
dec
mov
in
push
cwde
(bad)
ror
nop
out
stos
add
lea
jns
not
jbe
rcr
jmp
jbe
retf
adc
and
xchg
sbb
sub
pop
dec
pop
clc
jbe
dec
in
mov
inc
in
pusha
mov
aam
xchg
mov
push
xchg
jb
or
jmp
fistp
or
mov
jge
or
inc
sbb
fild
pop
icebp
mov
and
call
mov
lock
js
ffreep
jmp
or
and
sub
mov
(bad)
push
test
pop
jns
loope
sbb
jecxz
leave
jge
xchg
sub
lock
sub
sbb
test
sbb
mov
pop
push
cmp
cmp
dec
enter
mov
icebp
cmc
int3
cmp
test
push
mov
mov
or
push
add
sub
ret
adc
push
in
and
imul
icebp
arpl
int
and
or
pop
aad
cmp
sar
fnstsw
out
push
test
cmp
mov
fisttp
jle
jmp
xlat
in
or
js
test
(bad)
stos
xchg
retf
rcl
mov
rol
push
and
add
mov
push
cld
dec
imul
out
inc
inc
scas
int3
in
ret
aaa
jmp
rcr
mov
cmp
in
xchg
or
mov
popf
mov
dec
jmp
pop
add
sbb
outs
cli
add
ds
adc
outs
repz
xchg
popf
inc
jb
data16
stc
pop
loope
sar
xchg
jle
xor
jno
pop
xlat
cmps
(bad)
push
enter
inc
aaa
mov
fs
test
add
xchg
inc
sti
in
sub
jge
mov
(bad)
inc
adc
and
cs
xchg
in
idiv
clc
scas
xchg
out
sbb
jecxz
(bad)
(bad)
xchg
mov
xchg
pusha
loopne
std
add
les
std
push
mov
cmps
sub
out
lods
sbb
pop
pop
movs
dec
test
arpl
sbb
mov
xor
dec
xor
adc
aam
cli
jne
ins
xor
push
jnp
sub
daa
sti
jl
out
mov
into
inc
lahf
xor
imul
cmc
jl
xlat
icebp
fucomp
jl
call
mul
and
cmps
imul
mov
adc
shl
pop
mov
or
sub
mov
xchg
ss
pop
out
movs
test
jl
out
pop
cmp
mov
imul
in
fst
rol
cli
sub
pusha
cdq
imul
inc
mov
pop
data16
jecxz
jle
dec
xlat
adc
xchg
add
and
mov
dec
(bad)
nop
jnp
pushf
mov
loopne
mov
loopne
dec
mov
xor
data16
or
fistp
mov
mov
sbb
push
push
loope
int3
gs
pop
popa
cdq
cld
(bad)
cli
jns
jno
iret
xlat
ja
xchg
retf
lahf
pop
push
out
nop
pop
enter
pop
bound
adc
push
mov
jmp
(bad)
push
push
fldenv
sbb
xor
inc
push
out
push
or
xor
mov
ret
test
sbb
push
out
push
cmps
aad
xor
add
push
call
mov
in
shr
lahf
cwde
inc
mov
pop
mov
aaa
or
cs
rcl
sub
fs
pop
jle
in
ret
in
inc
inc
scas
inc
fwait
mov
rcl
cdq
imul
mov
fstp
scas
mov
inc
and
movs
and
xchg
jo
test
mov
cmp
sbb
in
clc
mov
clc
inc
shr
pop
xlat
sbb
rol
pop
cs
outs
fistp
js
adc
cmp
(bad)
mov
out
adc
nop
inc
inc
and
sbb
ret
outs
inc
mov
test
mov
sbb
es
cmps
test
mov
cmovne
jo
ret
mov
push
in
sub
sar
xchg
arpl
inc
mov
mov
mov
jbe
cmp
iret
pop
jmp
sbb
pop
jae
mov
jns
(bad)
in
loop
es
and
movs
daa
cli
add
add
or
das
bound
inc
xlat
das
mov
out
enter
mov
dec
xor
mov
fistp
push
mul
and
jbe
cmp
inc
adc
aam
out
out
add
xchg
mov
icebp
xlat
push
mov
xchg
scas
mov
mov
pop
jae
add
in
stos
inc
pop
call
or
mov
cmp
mov
mov
dec
icebp
and
sahf
rcr
cmc
fist
sbb
xchg
cmp
fidivr
(bad)
mov
lock
mov
dec
daa
push
pop
cmp
(bad)
cld
fst
shl
outs
xchg
loope
rcr
pop
cmps
mov
pop
xchg
mov
jno
xchg
out
or
push
les
nop
push
pop
jmp
sbb
jecxz
pop
dec
push
mov
cmp
xor
inc
xor
lods
in
jmp
jb
and
ss
loop
sbb
stc
bound
test
movs
mov
mov
adc
ret
lods
sbb
inc
lahf
out
dec
xor
icebp
and
enter
cmps
stos
add
sub
cs
out
jg
xor
aad
ins
mov
(bad)
leave
adc
int
add
mov
adc
jne
jmp
cmp
pop
inc
xor
push
sbb
cmps
pop
loopne
mov
add
in
xlat
not
aad
mov
add
jp
add
pop
ds
and
dec
retf
jecxz
mov
ins
sbb
xor
mov
cs
cmps
out
mov
hlt
cmp
cmp
daa
popf
or
xor
and
adc
add
scas
xchg
pushf
mov
push
xor
sbb
xor
clc
imul
pop
or
or
pop
dec
data16
int
lahf
(bad)
nop
shl
retf
out
or
into
add
or
and
imul
inc
dec
lods
pop
aam
jb
inc
mov
(bad)
(bad)
bound
sbb
xlat
pop
stos
dec
inc
jbe
ds
inc
push
imul
pop
outs
popa
or
xor
xchg
lahf
fisttp
jl
mov
sbb
pusha
or
leave
cmp
push
dec
xchg
outs
pop
dec
leave
xor
fwait
std
and
loop
jnp
and
shl
add
data16
inc
cmp
in
push
jg
dec
aad
idiv
xchg
mov
push
add
or
test
mov
jecxz
call
mov
stc
jge
ja
push
pop
push
sbb
jno
inc
retf
sbb
mov
xchg
sahf
fisub
cmc
test
retf
pop
imul
mov
jg
mov
sub
loop
mov
inc
cmp
push
jnp
pushf
(bad)
loopne
es
push
(bad)
and
in
push
sub
mov
or
xchg
mov
int3
xchg
shl
or
fnsave
in
dec
sbb
mov
or
push
adc
out
sub
jne
or
retf
lods
inc
test
in
or
lea
push
fistp
push
or
pop
repz
ret
mov
mov
mov
outs
in
jge
sbb
push
enter
sub
mov
sub
test
call
sub
adc
fld
adc
inc
add
mov
cmps
mul
mov
imul
mov
mov
mov
cld
push
sti
cmps
jo
bound
cld
(bad)
dec
aas
xchg
int3
nop
and
mov
and
fnop
or
or
and
mov
dec
call
call
dec
dec
lahf
add
inc
and
jle
or
dec
stos
mov
push
pop
inc
stos
sub
push
mov
sub
mov
mov
fldcw
mov
icebp
cmp
push
jle
jle
retf
add
xchg
xchg
mov
sbb
call
sub
pop
cmp
lods
push
jbe
pop
push
jge
jg
lock
lock
cli
push
mov
xchg
pop
dec
retf
xor
sub
fnstenv
mov
cmp
call
jmp
pop
inc
icebp
mov
enter
and
cmps
push
jno
xchg
xchg
repnz
adc
stc
(bad)
cmc
stos
cmp
add
mov
dec
pusha
ret
call
inc
push
paddusw
sub
pop
gs
jmp
ret
sbb
cdq
pop
jg
stc
loop
pop
xor
add
cmp
sbb
test
xadd
xchg
stos
or
js
push
cmp
cwde
ds
sub
jb
repnz
or
(bad)
js
movs
jnp
mov
cmp
and
add
xor
and
aam
sbb
es
and
or
clc
dec
and
jbe
movs
xchg
add
sar
mov
out
fwait
push
push
pop
mov
push
jnp
js
repnz
or
sub
mov
add
or
movs
cmp
inc
lahf
jns
inc
lea
imul
xchg
push
dec
mov
xor
xor
mov
mov
and
dec
mov
stos
dec
in
pop
lea
pop
xchg
cmp
xchg
add
push
jns
jbe
adc
and
cld
gs
jnp
les
mov
or
mov
sbb
rol
and
out
aaa
jns
add
cmp
jae
(bad)
sub
call
add
push
test
xchg
das
fwait
mov
nop
loop
out
mov
arpl
gs
mov
cwde
cmc
clc
fldenv
cmp
shr
je
(bad)
call
clc
sbb
fwait
mov
push
sahf
mov
fs
dec
adc
in
ror
mov
jne
aaa
push
rcr
or
sbb
dec
push
push
in
inc
jmp
lahf
neg
ret
movs
in
and
les
pop
mov
inc
ror
int
sbb
mov
stos
and
nop
cmp
jnp
adc
or
or
cmps
js
js
jmp
jb
inc
dec
sbb
cld
aas
stos
sar
xchg
sub
sar
mov
popa
xor
test
ins
pop
xor
cmp
adc
repz
or
ds
popa
int3
test
in
and
sahf
test
stos
aad
jg
jno
push
xor
fimul
mov
xor
mov
sbb
lds
dec
repz
pusha
das
xchg
lock
iret
pop
mov
push
sbb
inc
std
xchg
xor
lods
xor
pop
mov
push
mov
and
movs
rol
mov
rcl
cwde
and
adc
mov
or
jle
sahf
adc
cli
pusha
aam
inc
lods
jb
cld
retf
add
inc
push
fldcw
or
clc
xchg
(bad)
cmp
arpl
cmp
retf
aaa
lods
adc
add
pop
into
dec
pop
pop
xor
inc
popa
inc
sbb
int3
fisubr
mov
or
mov
pop
jns
mov
fs
sahf
scas
repnz
add
mov
inc
xchg
or
mov
ror
stc
pop
jl
jne
cmovb
cmp
cld
inc
in
aad
pusha
inc
fmul
ins
mov
jne
sub
cmp
repnz
xchg
sbb
or
inc
mov
cwde
pop
jl
dec
(bad)
movs
cmp
xor
movs
mov
push
aad
push
fsubr
lock
sbb
pusha
sar
mov
push
gs
or
jg
mov
jmp
push
dec
sar
inc
cmps
lock
lods
or
jp
sub
ret
cmc
inc
jmp
shl
cmp
cmp
std
mov
cs
xchg
sbb
call
mov
maxps
jns
sbb
inc
fidiv
sbb
pop
in
ins
pop
scas
mov
push
or
push
pop
std
ins
(bad)
call
mov
mov
jnp
and
out
or
daa
in
cli
fimul
mov
mov
pop
cmp
push
xchg
shl
rol
lds
mov
repnz
out
stos
loope
pop
mov
dec
ret
int
pop
js
out
push
ret
aad
xchg
enter
in
fwait
ret
fwait
mov
out
jecxz
push
cmp
xlat
adc
test
xor
imul
fwait
pop
xchg
jp
mov
sbb
xor
xchg
xchg
test
mov
in
pop
xchg
sar
(bad)
sbb
cs
jae
and
xor
adc
and
mov
mov
push
and
mov
sbb
jnp
fdivp
dec
sub
data16
pop
(bad)
adc
repnz
scas
xchg
or
and
xchg
or
jne
push
inc
mov
push
(bad)
imul
jge
inc
mov
jne
mov
imul
pop
cmp
cmp
lods
add
sub
loope
outs
adc
dec
das
bound
xchg
dec
(bad)
out
sar
mov
sbb
pop
fild
fwait
or
pop
bound
adc
addr16
push
retf
pop
mov
aam
mov
mov
test
xchg
xor
jg
lods
ficomp
dec
dec
push
inc
or
pop
(bad)
out
xchg
out
mov
cmps
xchg
pop
aas
popf
jnp
(bad)
pop
push
xchg
xchg
mov
daa
inc
mov
sti
loopne
pop
sub
push
imul
push
not
inc
mov
fdiv
xor
cmp
pop
addr16
jge
ret
xchg
inc
inc
and
out
(bad)
jle
inc
aad
mov
cmp
dec
js
jge
or
inc
test
and
(bad)
cli
call
pop
sub
aam
adc
test
mov
add
fadd
jne
mov
adc
mov
js
push
sub
push
dec
mov
sub
retf
adc
jne
movs
sbb
mov
addr16
inc
int3
imul
mov
leave
leave
jbe
sbb
es
sub
dec
pop
rol
mov
pop
mov
aad
stos
(bad)
lods
push
fisttp
(bad)
pusha
jnp
pop
(bad)
and
cs
mov
repnz
push
data16
aam
test
(bad)
aam
fnstsw
jo
int3
and
loope
dec
sahf
iret
sbb
fldcw
push
and
or
mov
xchg
sahf
and
or
aam
outs
and
pop
mov
xor
mov
sub
and
lea
xchg
loope
pop
mov
inc
sti
(bad)
sbb
jns
jg
add
jmp
sbb
jp
aad
movs
dec
test
and
or
cmps
cmp
and
inc
push
push
pop
cmp
test
and
repnz
push
mov
pop
add
jmp
sub
mov
push
inc
imul
mov
dec
mov
cs
adc
pop
sti
icebp
cmp
bswap
dec
je
mov
xchg
scas
sub
out
pop
xor
inc
imul
pushf
jl
mov
fstp
cli
fsub
adc
pop
aam
or
lock
lods
mov
adc
adc
sahf
(bad)
jg
in
lds
aaa
jge
(bad)
inc
pushf
ret
push
fdiv
jecxz
push
je
mov
ror
sub
retf
pop
int
and
cmp
cmp
fld
xor
(bad)
(bad)
adc
and
jae
out
out
daa
mov
aad
jmp
and
jne
add
cmp
mov
dec
mov
mov
bound
leave
(bad)
push
call
leave
inc
ins
clc
or
xchg
nop
xlat
push
test
mov
mov
push
adc
mov
mov
iret
xchg
pusha
or
lds
adc
int
jg
leave
jecxz
xor
stc
stc
adc
jns
and
fcomp
dec
mov
inc
leave
out
or
or
jmp
lods
(bad)
jno
push
fcomp
and
aam
cld
aam
test
pop
cld
push
dec
out
mov
or
and
mov
or
sbb
sub
icebp
das
div
leave
mov
mov
dec
cwde
pop
mov
adc
add
push
push
addr16
int
or
dec
les
push
push
cwde
mov
jns
inc
lods
push
ja
cmp
cmp
mov
xchg
popf
pop
and
or
pop
pushf
add
aad
gs
and
shl
or
xchg
ret
mov
ret
jg
pop
retf
out
ins
add
add
add
nop
mov
pop
cmp
jo
push
fincstp
inc
or
lock
inc
adc
lea
sbb
pop
xlat
lock
lods
or
lods
popf
push
(bad)
push
pusha
call
loop
outs
mov
std
data16
jno
mov
fsub
mov
shr
add
mov
call
dec
in
inc
das
adc
adc
push
jmp
inc
sbb
and
retf
div
movs
in
sbb
pop
loop
movs
cmp
add
fwait
pop
jl
stos
xchg
call
jg
mov
(bad)
mov
jno
and
setns
bound
sub
push
loop
fwait
rol
test
mov
ret
pop
out
pop
push
push
popf
dec
xchg
dec
ja
fdivr
adc
add
mov
dec
jmp
mov
in
test
or
(bad)
mov
push
or
imul
cmp
dec
push
and
mov
xchg
fdiv
movs
xchg
scas
mov
pop
xor
mov
cld
loopne
arpl
pop
shr
adc
push
sbb
xchg
loope
sbb
test
js
jge
mov
std
mov
xlat
push
js
add
dec
sbb
jmp
push
(bad)
cld
cmp
sub
ds
or
inc
xor
inc
mov
sahf
xchg
fistp
sbb
inc
mul
clc
pop
and
inc
jo
jo
xchg
jb
and
inc
dec
inc
and
mov
xor
jmp
hlt
jae
inc
xchg
push
(bad)
popf
mov
mov
jl
add
mov
inc
pusha
aas
shl
xchg
cmp
(bad)
inc
adc
mov
xchg
lahf
xchg
and
fsubr
in
fs
or
pop
es
int
adc
xor
test
inc
xchg
das
ret
mov
sub
cmp
lods
shl
call
repnz
gs
ins
(bad)
call
push
in
neg
dec
push
xchg
fsubr
xchg
sub
mov
cs
push
test
popa
lock
add
scas
retf
jns
and
sti
(bad)
inc
and
jp
add
ins
aad
jp
jecxz
pop
or
dec
adc
shr
sti
jno
in
pop
out
fdiv
loope
or
stos
mov
dec
je
cmps
cld
idiv
int
popa
xchg
cli
jge
lahf
sbb
ret
scas
es
mov
cmp
into
fnstenv
jl
fsub
mov
je
dec
cld
mov
mov
(bad)
cwde
add
cs
fld
pushf
and
pop
test
rol
loope
or
cmps
jnp
movs
nop
sub
es
(bad)
adc
pop
scas
sbb
pushf
dec
dec
lahf
outs
mov
pushf
sub
inc
cmp
cmp
(bad)
cwde
stos
sbb
lea
mov
cmp
xor
and
mov
fdivr
adc
add
lds
std
jmp
nop
retf
jne
dec
or
outs
movs
push
call
jb
mov
scas
mov
or
mov
(bad)
bound
fst
pop
pusha
movups
inc
lods
mov
jle
movs
push
fst
cmp
xchg
scas
adc
je
inc
jl
test
pusha
xchg
jp
mov
mov
xor
ins
(bad)
jbe
mov
xchg
cmp
add
pushf
imul
lea
lock
mov
jno
js
dec
and
(bad)
in
mov
mul
or
in
mov
push
sbb
nop
xor
xchg
mov
push
icebp
repnz
xor
test
sbb
std
add
mov
dec
adc
cld
mov
js
or
cwde
(bad)
cmp
sbb
mov
lods
sbb
pop
jl
mov
ins
xchg
scas
(bad)
mov
out
out
in
xlat
pop
leave
fisttp
or
mov
mov
xor
(bad)
idiv
xor
mov
sahf
push
aaa
sahf
mov
ins
(bad)
mov
repz
cdq
cmp
jecxz
sti
retf
lahf
jne
out
ss
std
xchg
xchg
sahf
mov
dec
ds
xor
xor
dec
sbb
mov
lahf
and
(bad)
inc
hlt
movs
adc
(bad)
cs
jbe
or
retf
int
and
icebp
(bad)
jecxz
xchg
push
(bad)
sub
xor
mov
int
test
push
mov
xchg
fdivr
push
jg
ins
cmp
push
stos
cmc
data16
add
not
imul
jecxz
outs
stos
lods
popa
cmp
dec
cmp
mov
xchg
push
pop
mov
push
or
(bad)
outs
sbb
inc
xchg
daa
inc
ds
mov
push
loope
mov
add
add
cmp
pop
and
jmp
lds
add
add
repz
mov
loopne
popa
inc
mul
dec
jnp
jg
mov
inc
xchg
or
mov
sub
mov
(bad)
mov
sbb
jle
out
pop
push
dec
in
out
dec
(bad)
adc
loop
pop
in
jno
push
repz
push
mov
cdq
jno
sub
sahf
aam
xor
mov
jg
dec
sbb
sbb
mov
adc
mov
push
js
add
bound
lahf
aam
(bad)
adc
leave
cmp
jne
xchg
or
imul
or
fist
push
enter
hlt
loope
loope
xchg
out
scas
or
xchg
in
repz
cli
mov
xor
imul
out
iret
add
mov
dec
dec
retf
ss
push
push
(bad)
inc
jns
xor
retf
ds
jnp
scas
cmp
test
mov
arpl
dec
test
cmps
push
mov
jl
pop
dec
in
xor
sub
call
xor
stc
popa
jle
or
fcom
jle
pop
sbb
xor
pop
call
ins
mul
inc
xor
push
inc
outs
push
nop
mov
and
add
add
or
icebp
shl
adc
sar
hlt
jae
xchg
cmp
adc
adc
cmp
and
dec
sbb
in
sahf
xchg
js
sbb
mov
jecxz
adc
pop
rcl
lahf
retf
dec
and
hlt
add
repnz
mov
mov
mov
inc
stc
das
call
pop
aas
cmp
arpl
int
xor
clc
mov
pop
inc
jmp
mov
sar
mul
movs
mov
ds
xor
arpl
fst
or
pop
mov
sub
and
inc
pop
mov
fld
sti
inc
jnp
sbb
and
ret
popa
test
retf
rcr
push
jmp
mov
mov
sub
clc
mov
jp
mov
lock
mov
fisttp
lahf
jns
cmp
bound
sar
cwde
jg
loopne
in
sbb
imul
loop
and
daa
in
ss
fcmovb
or
sub
hlt
lahf
in
sbb
jno
lock
adc
inc
xor
nop
cwde
outs
rcl
cmps
dec
inc
add
jg
popf
sar
pusha
rol
or
xor
imul
push
aas
pop
push
cs
mov
jne
dec
jae
cmc
cmp
out
and
int
dec
ror
movs
and
mov
nop
sub
mov
(bad)
in
sub
inc
dec
call
jno
pop
xchg
ja
mov
arpl
jb
sbb
shr
add
xlat
test
rol
and
inc
pop
xchg
mov
mov
xchg
push
clc
data16
div
mov
mov
xor
loop
jmp
xchg
int3
test
clc
jne
xchg
dec
mov
repnz
es
sbb
lods
dec
out
nop
mov
mov
ds
sbb
sub
mov
loope
imul
jb
xchg
adc
sub
inc
int
dec
cli
neg
mov
and
mov
push
into
ror
jne
push
sbb
mov
mov
jg
imul
and
cmp
stos
sub
ds
out
sub
cmp
fs
dec
sbb
mov
pop
jge
bound
dec
bound
mov
sub
jle
jp
imul
adc
cli
sub
inc
repnz
mov
mov
jl
jp
ror
or
mov
jb
push
mov
sub
pop
int3
lahf
adc
add
xchg
or
dec
ffree
mov
(bad)
int
jne
jbe
clc
mov
mov
fdivr
enter
push
mov
loopne
ins
mov
pushf
ror
es
or
out
sub
cmp
add
sbb
mov
or
jmp
pop
(bad)
or
aaa
push
call
cwde
adc
je
dec
mov
adc
push
pop
push
popa
in
lods
sbb
xlat
jmp
in
inc
xchg
cmps
inc
test
shr
imul
jae
and
leave
mov
sbb
cmps
sbb
add
outs
sahf
push
clc
xchg
and
add
jb
test
mov
pop
sbb
rol
ret
shl
bound
mov
mov
mov
outs
cmc
jb
imul
ret
stos
in
jmp
outs
dec
aas
lahf
nop
pop
fmul
scas
in
sub
push
hlt
push
ret
jg
icebp
pop
dec
add
inc
lods
icebp
push
pushf
retf
xor
cli
jp
in
mov
loopne
out
inc
jl
sbb
and
jle
gs
xor
mov
xor
sub
push
and
or
cmp
lods
imul
scas
or
nop
cmps
jecxz
mov
aas
test
adc
lods
xor
xlat
mov
imul
sar
(bad)
(bad)
jle
adc
jnp
(bad)
cli
jge
lods
pushf
sbb
and
xchg
jne
mov
push
out
jb
xchg
in
xchg
cmps
pop
ret
sub
push
imul
push
push
push
shr
jg
inc
mov
xchg
cmps
mov
jmp
and
push
enter
jp
push
(bad)
fisttp
ins
stos
lock
sbb
repz
in
dec
(bad)
aaa
popf
in
pop
cmp
aas
pushf
mov
leave
imul
pusha
fwait
(bad)
in
adc
sbb
cmp
sub
out
and
pop
add
mov
inc
mov
iret
test
ss
rcr
mov
(bad)
(bad)
xchg
loope
in
clc
addr16
imul
jns
xchg
add
out
cli
test
in
jmp
lods
jp
ret
xlat
jl
int3
loopne
retf
and
aad
or
jl
aas
ins
out
gs
fmul
mov
adc
xchg
pop
mov
repz
dec
dec
jmp
mov
push
xor
mov
add
mov
push
lods
aad
sbb
push
jg
cdq
fmul
mov
mov
movs
shl
push
cmp
xor
and
xor
neg
dec
sar
sub
sbb
pop
dec
out
jle
outs
dec
pop
jo
add
mov
clc
adc
daa
pop
jmp
nop
stos
and
or
hlt
js
shl
enter
loop
mov
ins
pop
jns
xor
cwde
xlat
pusha
pop
add
mov
pop
adc
jmp
inc
imul
(bad)
and
mov
mov
or
pop
call
hlt
cmps
cmp
loop
inc
cmc
lods
pop
pop
or
pusha
add
push
sub
shr
xor
xor
push
loop
xchg
push
fld
test
fiadd
out
and
push
xor
out
fistp
pop
and
sub
cmp
add
daa
fnstenv
push
lea
xchg
or
xchg
add
and
int
leave
adc
in
in
sub
inc
xor
push
repz
cld
add
pop
pop
xor
push
fwait
sub
adc
cmc
loop
mov
dec
cmps
mov
aad
shr
xor
clc
mov
mov
push
rcr
fldcw
retf
mov
push
cmp
out
sahf
aad
aas
mov
sar
mov
stos
inc
mov
pop
add
dec
and
jecxz
sub
xor
test
cld
out
xchg
ins
push
mov
sbb
stos
lahf
push
pop
pop
pop
call
(bad)
xchg
iret
retf
or
push
fild
nop
movs
in
je
jge
in
mov
mov
and
in
jae
test
or
sti
imul
cdq
push
xor
push
clc
cmps
cmc
xor
jnp
push
or
mov
enter
pop
jmp
xchg
repz
pop
xlat
jae
pop
gs
out
sbb
or
fnsave
retf
imul
mov
push
xor
scas
sahf
add
add
xchg
jbe
sub
repz
paddusb
cwde
xor
je
cmp
sub
cmp
or
adc
test
sbb
sbb
xor
jl
dec
adc
gs
mov
and
xchg
mov
fcom
pop
ds
and
ror
shl
in
gs
pop
sub
outs
add
cmp
dec
lds
es
push
test
cmps
push
call
test
cmp
ds
inc
repz
sub
push
adc
test
jecxz
push
cmp
xchg
adc
nop
lock
lahf
lods
or
xchg
pop
xchg
les
and
inc
js
xchg
adc
test
fs
jae
xor
inc
cwde
add
loop
sbb
leave
hlt
dec
stc
pop
(bad)
cli
sbb
pop
sbb
fs
cmc
das
ror
push
sbb
das
and
jno
mov
push
daa
(bad)
add
loope
sub
movs
add
sbb
pushf
inc
add
pop
clc
mov
scas
out
xchg
and
jb
adc
and
call
or
nop
sub
add
icebp
jp
sub
and
adc
out
inc
(bad)
push
outs
inc
mov
push
(bad)
mov
ror
shr
xchg
sub
mov
xor
hlt
out
xlat
outs
push
dec
sti
dec
cmp
pop
xchg
stos
dec
lock
dec
retf
popf
imul
and
inc
pop
dec
jae
in
dec
je
jl
mov
in
pop
inc
jp
call
cmp
sub
jecxz
lock
std
push
push
cmps
dec
xchg
retf
stos
xchg
leave
inc
stc
out
cmp
push
sbb
sub
mov
xchg
cmp
dec
cmp
jle
mov
jp
add
push
shl
dec
adc
sbb
mov
in
aad
xor
in
adc
loope
(bad)
adc
adc
ins
in
xchg
mov
test
jmp
aas
cmp
mov
add
xor
mov
popa
mov
push
(bad)
dec
lds
inc
sub
and
push
stos
imul
(bad)
fldenv
mul
fimul
mov
push
dec
push
test
xchg
and
mov
sar
add
adc
xchg
mov
cld
sub
xor
mov
pop
mov
int
fdivr
adc
mov
jmp
(bad)
neg
jecxz
mov
xchg
fimul
adc
in
gs
mov
mov
aad
call
adc
jmp
mov
adc
js
fwait
or
imul
imul
dec
xchg
pop
pop
inc
retf
sbb
in
dec
loopne
xor
loopne
test
pop
mov
dec
cli
jecxz
leave
loopne
cmp
(bad)
iret
arpl
sbb
call
mov
push
jmp
enter
and
push
aas
xor
push
inc
jae
es
popf
sbb
fiadd
xchg
xchg
or
jbe
out
mov
test
push
data16
mov
and
push
jg
movs
cmp
xchg
das
sub
push
inc
mov
sub
jmp
cdq
adc
sub
inc
shl
push
f2xm1
das
mov
js
movs
out
dec
dec
call
push
mov
mov
sub
cmp
cmp
xor
or
mov
movs
ja
xlat
pusha
mov
and
data16
les
mov
(bad)
xor
outs
imul
or
mov
in
mov
xchg
and
sti
out
sub
lock
and
retf
fwait
dec
ret
add
cmp
inc
push
out
jecxz
call
or
push
jns
inc
cmp
jecxz
mov
clc
jno
sbb
push
fcmovnb
sub
daa
ins
jmp
sbb
mov
inc
xor
jae
xor
lea
loope
push
xchg
mov
push
es
scas
ret
and
mov
mov
mov
or
cdq
xlat
movs
push
test
repz
mov
scas
cmp
xor
jge
and
sub
pop
inc
cs
enter
dec
pop
or
cdq
repz
push
sub
dec
cmps
stos
out
into
xchg
lods
bound
js
pop
inc
pop
adc
push
daa
sub
xor
or
xchg
jg
sti
cld
mov
repnz
dec
aas
cmps
xor
and
and
neg
jle
push
and
(bad)
arpl
ds
bound
cmps
dec
and
xchg
lahf
mov
js
sub
mov
fs
outs
sbb
push
mov
movs
cmp
sub
fcmovne
sub
lea
dec
ret
(bad)
push
xchg
rol
(bad)
push
pop
sti
jp
mov
and
adc
es
fidiv
stos
ins
add
xor
ins
push
sub
pop
scas
dec
xor
daa
repz
pop
(bad)
or
in
dec
dec
iret
fsub
push
push
ror
dec
mov
cld
or
int
cdq
repnz
xor
jbe
lock
cmps
cwde
fstp
inc
push
bound
mov
js
adc
push
test
mov
out
mov
mov
imul
pop
ss
or
test
adc
pop
xor
xor
bound
xor
jg
and
xchg
lds
js
jno
or
dec
aad
sbb
das
movs
loopne
std
push
inc
and
add
fstp
sbb
mov
stos
movs
sbb
mov
enter
shl
popa
jmp
mov
das
xchg
rcr
mov
pop
push
xor
addr16
inc
dec
in
or
outs
and
daa
jae
stc
and
jp
lahf
outs
stos
push
and
push
xor
loope
and
shr
or
out
std
mov
inc
jo
fcmovbe
pushf
clc
add
sbb
ins
enter
loopne
jp
jl
scas
outs
popa
fcom
jmp
call
in
push
mov
sbb
(bad)
mov
mov
cmp
pop
xchg
pushf
cmp
call
fist
stc
and
xor
cdq
push
xchg
push
cmps
(bad)
fwait
ror
outs
ret
mov
sbb
nop
js
inc
pop
movs
sar
push
push
fcom
out
ja
repnz
dec
sub
out
icebp
retf
cmp
or
mov
jns
imul
fisttp
and
mov
adc
data16
imul
sahf
inc
xlat
stos
jbe
mov
cmp
cs
and
test
sub
in
pushf
aad
in
jl
pushf
cmp
cmp
mov
outs
push
dec
cmps
cdq
xlat
and
inc
sub
or
xor
pop
dec
stos
mov
mov
test
ss
xchg
xor
jg
dec
ds
inc
(bad)
push
mov
or
fdiv
pop
inc
scas
cmps
nop
jnp
movs
sbb
xor
add
(bad)
pop
dec
test
mov
aas
xor
es
aas
ret
mov
cmp
and
cmp
out
(bad)
frstor
push
add
test
movs
ret
jo
or
xor
mov
idiv
sbb
sahf
sbb
aas
bound
loop
cmp
and
std
pop
or
add
pop
nop
jecxz
xchg
outs
in
xor
out
rol
pop
repnz
mov
pop
xor
mov
add
pushf
dec
mov
ret
ins
and
hlt
sub
jmp
in
je
sub
sbb
mov
aad
or
mov
inc
aaa
repnz
dec
adc
test
inc
mov
movs
gs
mov
nop
xor
and
jmp
sub
cmp
sahf
or
sub
jp
mov
call
(bad)
cwde
push
cmc
(bad)
mov
or
cmp
cmp
test
cld
lods
repz
scas
mov
retf
fwait
mov
loopne
fiadd
pop
or
or
xor
mov
dec
retf
and
mov
in
test
fldenv
nop
and
(bad)
jmp
inc
aaa
out
or
fpatan
cmp
loopne
aad
loopne
dec
mov
sub
sbb
popf
xchg
movs
retf
jae
pop
jnp
out
popf
sub
shl
(bad)
jns
cmp
mov
shl
push
xor
ja
iret
ret
mov
outs
and
dec
test
jnp
mov
enter
hlt
inc
das
xor
into
inc
bound
jb
xchg
jl
movs
aad
(bad)
cmps
xor
pop
pop
rcr
cli
mov
push
shl
jle
dec
mov
mov
jmp
jmp
leave
in
ret
(bad)
call
test
or
and
mov
jl
arpl
adc
dec
sub
cmps
jp
loopne
lds
xchg
fsub
out
scas
fdiv
movs
call
out
push
out
mov
sbb
test
shrd
and
stos
dec
into
pop
sbb
outs
xchg
stc
sbb
add
popf
pop
dec
sti
and
dec
cmps
mov
sub
or
mov
pop
fsubr
jmp
sbb
jle
jl
outs
mov
jae
xchg
enter
cmp
xchg
push
xchg
mov
(bad)
ja
lods
xchg
lods
mov
ret
cmp
fld
jg
ficom
movs
cmc
call
clc
pop
add
push
jle
mov
jmp
adc
movs
cmp
sub
nop
cmps
push
xchg
mov
xchg
and
dec
sub
test
jb
lea
fisttp
loopne
hlt
push
cmp
js
les
or
shr
aam
and
sub
cld
xchg
xor
or
add
out
xor
inc
adc
sbb
popf
fimul
test
inc
sahf
or
pusha
mov
ss
xchg
adc
sub
je
adc
pop
and
sub
in
cmp
adc
mov
sahf
adc
fs
mov
dec
mov
cmp
out
xchg
push
jl
inc
pop
nop
jle
mov
inc
popa
movs
mov
cmp
fnstcw
out
pop
jns
add
out
xchg
ret
sbb
add
es
dec
loope
xlat
das
mov
(bad)
mov
mov
pop
xchg
jnp
or
pop
fdiv
cmp
push
(bad)
rcr
int
scas
xchg
or
fidiv
outs
push
dec
xchg
popa
sub
ins
push
out
mov
adc
loope
or
or
inc
out
scas
mov
add
sub
fisttp
jo
(bad)
sub
daa
ret
mov
inc
push
sub
and
in
push
cmp
(bad)
(bad)
fs
cdq
je
push
popf
pop
xchg
pop
xchg
test
loopne
call
sub
jge
ret
jmp
mov
pop
stos
mov
ins
xchg
fild
jp
adc
inc
inc
cmc
call
cli
movs
jno
adc
mov
or
xchg
jnp
inc
inc
inc
add
cmps
stos
stos
push
lock
mov
jne
call
cli
shl
jp
js
xor
dec
add
inc
rcr
inc
ret
(bad)
xor
jmp
rcr
mov
or
sub
shl
in
and
and
mov
fwait
pop
xchg
mov
add
adc
repnz
cwde
(bad)
dec
movs
jbe
push
inc
loop
sbb
sub
or
and
cli
pop
mov
mov
sbb
jle
lds
cdq
retf
or
push
mov
out
cmp
pop
inc
mov
mov
aam
push
jbe
shl
jg
aaa
pop
es
jge
(bad)
movs
cmp
nop
fs
xchg
aad
bound
mov
outs
(bad)
jno
in
push
push
mov
push
jp
loope
scas
nop
add
mov
jle
cld
xor
shr
jg
mov
jge
ja
push
ds
outs
mov
ins
inc
enter
mov
cmp
mov
(bad)
pop
mov
sub
push
dec
mov
fld
into
out
out
pop
(bad)
shl
inc
sbb
popa
lahf
pop
sar
xchg
test
push
mov
dec
arpl
xchg
mov
and
sub
mov
push
push
lods
cmp
int
push
lods
and
adc
mov
xor
test
ret
jle
adc
fisttp
and
stos
in
or
fwait
mov
and
mov
test
lock
jmp
cmp
inc
mul
sub
xchg
mov
test
mov
ja
and
popa
shl
popa
pop
and
add
test
fimul
jmp
mov
inc
popf
inc
pop
xlat
lods
mov
jle
xor
and
or
aaa
or
int
aaa
mov
int3
and
inc
push
cmp
sub
sbb
pushf
push
xchg
js
das
sar
push
gs
xchg
pop
jbe
xor
push
xor
les
popa
push
dec
push
mov
xor
fsub
cdq
xchg
inc
lock
xlat
scas
push
pop
call
pop
sti
xchg
repnz
(bad)
push
test
dec
into
mov
jmp
mov
in
cmp
das
sahf
std
cmp
add
sub
sub
movs
jne
mov
les
imul
popf
daa
nop
push
mov
xchg
and
xchg
jge
push
mov
sub
ins
out
jno
or
xchg
(bad)
mov
gs
rcl
xchg
push
mov
int3
std
push
push
(bad)
out
cdq
or
outs
fisttp
icebp
xchg
mov
aas
cmps
das
das
mov
or
xor
jl
cmps
inc
add
popf
jae
scas
daa
cdq
fisttp
les
push
sbb
lods
or
cmp
scas
pop
les
push
movs
jl
xchg
sub
xchg
pop
ja
inc
jb
call
out
push
test
jmp
jb
and
sbb
mov
test
add
aad
pop
std
std
int3
loop
scas
popa
dec
repz
mov
cmp
push
or
shl
add
das
push
movs
test
mov
fs
mov
pop
pop
inc
(bad)
std
in
gs
test
ret
(bad)
das
ins
addr16
mov
xlat
xlat
stc
and
arpl
stc
shl
std
add
and
sbb
or
aam
mov
fst
and
sub
pop
adc
das
fidivr
inc
push
sbb
pop
test
pxor
jno
adc
add
mov
repnz
xor
cwde
sub
dec
fs
aam
lock
aam
sti
ret
inc
add
retf
jb
fdivr
nop
fild
or
push
pop
mov
int
or
icebp
je
mov
repnz
jne
push
retf
in
push
dec
or
cmps
mov
jo
fdivr
outs
push
sar
scas
popa
xchg
inc
popf
jo
mov
pop
das
imul
jmp
mov
or
js
cmp
xor
addr16
es
pop
jl
mov
sub
std
pop
cmp
push
sbb
mov
jmp
fisttp
in
dec
test
int3
ret
mov
push
movs
ins
test
adc
je
fidiv
dec
sbb
xlat
std
jle
sub
test
inc
pop
bound
lahf
xchg
mov
in
cmp
sbb
mov
pusha
dec
stos
nop
push
xchg
adc
sub
jle
fdivr
mov
mov
cmps
mov
xchg
inc
push
inc
outs
inc
jne
push
dec
stos
push
rcr
xchg
and
cmp
fisttp
addr16
or
sub
xchg
pop
das
dec
jecxz
mov
(bad)
icebp
jb
pop
cwde
fdivr
push
iret
pusha
icebp
jo
or
sti
pop
jecxz
cdq
xchg
int
psubsb
call
scas
cmp
xchg
mov
call
call
jne
imul
retf
es
push
in
push
out
jmp
sub
sahf
das
fisttp
gs
scas
mov
shl
ja
addr16
mov
das
(bad)
movs
fwait
mov
and
mov
test
int3
dec
jnp
push
or
dec
mov
(bad)
adc
das
pop
test
mov
mov
fld
ds
js
mov
ins
outs
push
clc
arpl
xor
ror
neg
out
cmp
cmp
add
push
inc
mov
(bad)
mov
ret
in
arpl
adc
xor
cwde
pop
mov
daa
lds
sbb
loopne
dec
jmp
mov
mov
sbb
es
outs
das
ret
ins
adc
xchg
pop
out
jns
(bad)
fistp
mov
jge
push
inc
mov
push
jge
mov
dec
cmp
lods
cs
mov
sbb
jmp
dec
dec
cmc
mov
sub
pop
lods
fwait
jne
mov
pshufw
and
rcl
xor
stos
mov
(bad)
aaa
fld
add
ins
test
out
adc
ja
pop
out
adc
and
add
jbe
fnstcw
or
push
push
in
aaa
cli
add
(bad)
enter
adc
or
adc
out
and
pop
xchg
mov
addr16
lahf
das
rcl
push
sub
out
pushf
cmp
cmp
inc
adc
sub
dec
int
fistp
outs
cmp
mov
pop
jle
push
out
and
ficomp
test
jle
lds
dec
outs
adc
lock
data16
sbb
and
ins
dec
sar
enter
fdiv
push
clc
(bad)
call
push
sti
sub
or
pushf
fimul
jg
out
adc
mov
push
pop
and
(bad)
sbb
sar
push
add
xor
cs
out
jecxz
sub
fwait
cld
sub
fdivr
push
xlat
xchg
imul
scas
mov
jno
pop
movs
sub
sub
adc
popa
mov
or
call
cmp
pop
unpcklps
lods
hlt
or
cmps
mov
mov
mov
xlat
xchg
rcr
mov
into
mov
inc
push
or
adc
cdq
cmp
in
cmp
dec
neg
aaa
into
xlat
push
pop
fimul
xor
jmp
jge
cmps
push
stc
(bad)
enter
mov
xchg
xor
fs
inc
or
sti
aam
retf
push
mov
sub
(bad)
fwait
neg
inc
push
aaa
cdq
adc
inc
sbb
push
out
inc
inc
jmp
and
jo
inc
ins
retf
dec
fisubr
fwait
sub
mov
push
mov
sub
loope
nop
mov
add
mov
pushf
xor
adc
cmps
mov
add
leave
mov
sbb
add
fiadd
test
fdiv
dec
adc
int3
cmps
clc
rcl
add
and
leave
std
cs
idiv
fbstp
mov
xor
sti
mov
dec
scas
jns
sahf
test
cs
mov
or
mov
retf
jbe
push
les
mov
dec
add
fdiv
repnz
inc
mov
add
add
adc
mov
mov
push
sub
call
jge
test
xchg
sub
ret
call
popa
pushf
ror
cmps
fild
pop
(bad)
adc
pop
stos
loop
jno
das
jbe
and
imul
push
pop
js
nop
push
stos
jmp
or
jae
(bad)
outs
sub
sub
sub
jmp
and
out
push
lods
rol
xor
sub
xor
jg
(bad)
mov
mov
cld
leave
jmp
imul
mov
test
jne
std
jne
std
xor
mov
das
cmp
hlt
add
inc
je
mov
mov
mov
gs
in
lock
and
xchg
outs
xchg
scas
imul
aas
das
add
mov
mov
popf
aam
adc
sub
cmp
(bad)
dec
repz
mov
xacquire
xchg
stos
inc
popf
out
sub
in
sbb
call
push
jmp
lods
leave
retf
mov
fwait
add
popf
add
test
adc
mov
sahf
lahf
cmps
and
pop
addr16
je
ss
mov
test
push
mov
mov
dec
add
xor
jmp
retf
sbb
jg
sub
mov
rol
iret
sbb
xchg
inc
cmp
cli
shl
leave
arpl
je
nop
pop
popa
clc
aaa
test
cmp
ret
jl
pop
std
(bad)
mov
les
loopne
dec
sbb
push
jno
mov
test
ficomp
es
xchg
(bad)
xor
fiadd
les
scas
pop
(bad)
jnp
test
popf
push
or
adc
cmp
dec
adc
cli
add
daa
jb
inc
sub
jae
arpl
inc
movs
jecxz
fdivr
push
sub
adc
test
(bad)
iret
pusha
gs
stc
mov
fild
pcmpeqb
mov
xchg
arpl
out
push
inc
xor
push
cmp
xlat
test
push
hlt
mov
in
pop
jg
push
mov
in
add
mov
(bad)
jns
call
mov
ffreep
xchg
adc
std
sbb
and
pop
mov
je
xor
or
push
cmp
test
clc
not
nop
(bad)
rol
mov
lock
jbe
or
(bad)
frstor
or
sahf
pop
sti
dec
outs
add
jo
movs
and
inc
xchg
retf
shr
movs
or
ins
xor
ss
jg
mov
dec
test
mov
sub
(bad)
loop
push
sbb
pop
cdq
or
in
into
jl
mov
add
outs
xor
loopne
sbb
loopne
sub
outs
icebp
mov
shr
or
and
std
mov
movs
jne
(bad)
push
mov
mov
or
(bad)
cdq
sub
mov
or
cmps
add
div
mov
js
call
sbb
pop
out
test
stos
into
in
sbb
push
add
shr
mov
or
cmp
aad
push
imul
adc
inc
in
js
cmp
pop
gs
mov
test
cmps
repnz
sbb
js
loope
jns
(bad)
mov
mov
xchg
sar
push
sub
mov
je
push
sbb
ffree
or
sub
fsubr
jg
es
xor
cwde
std
clc
iret
sub
jbe
and
push
and
scas
ror
das
jne
aad
cmp
jg
or
pop
imul
enter
scas
jne
jo
xchg
sbb
ror
cmps
xchg
xor
lods
and
es
mov
pop
mov
inc
movs
bound
popa
and
adc
popa
pop
out
or
pop
fnstenv
repz
cdq
sub
mov
xor
bound
jle
sbb
cmp
mov
push
nop
loopne
aam
mov
xor
jl
jb
push
popf
adc
adc
lea
inc
test
jns
push
or
mov
xchg
repnz
lea
sbb
xor
movzx
dec
xor
call
push
or
sbb
xor
(bad)
fist
mov
mov
inc
out
jo
mov
cmp
cmp
jbe
sub
mov
outs
lods
and
mov
add
aam
and
push
psrld
ja
jmp
shr
jmp
pusha
cmc
out
push
inc
popf
fbstp
inc
das
fnstsw
dec
mov
mov
mov
cmp
inc
icebp
repnz
pushf
outs
or
fadd
jmp
jae
movs
aam
inc
scas
push
lods
mov
inc
retf
ja
pop
pop
or
sbb
fisubr
xlat
jb
icebp
fucomp
jecxz
sub
push
inc
add
test
lds
jno
sbb
or
in
fwait
xchg
lds
cmp
iret
mov
dec
adc
push
iret
dec
xchg
fisub
in
push
xchg
ror
pop
and
ficom
adc
and
out
adc
scas
aas
push
cmp
cmp
xor
dec
stos
cwde
mov
pop
test
pop
mov
cmc
adc
cmp
push
je
inc
mov
mov
mov
pop
stc
sub
adc
xchg
gs
repnz
int3
mov
jle
mov
out
xchg
cmp
adc
(bad)
int
cld
inc
into
mov
sbb
clc
jecxz
xchg
mov
push
cmp
mov
jns
not
js
call
push
xor
add
fild
mov
xor
fnstcw
mov
inc
fisttp
std
or
fisub
jno
xor
push
mov
dec
mov
and
push
int
sub
mov
adc
push
push
jp
cmp
pop
pushf
leave
les
xchg
pop
mov
mul
rol
and
fcom
mov
dec
cmp
imul
mov
mov
jmp
clc
hlt
nop
sbb
inc
pop
ds
(bad)
xchg
pop
outs
jns
pop
retf
pop
mov
fs
scas
aas
mov
movs
pop
pushf
and
xor
mov
dec
aaa
cdq
or
inc
repz
ins
fiadd
inc
mov
or
add
fwait
daa
sub
dec
sbb
inc
in
sti
popf
inc
mov
data16
in
rcl
mov
jne
xchg
mov
pop
jp
cmp
mov
shl
add
ins
popf
sbb
and
mov
and
hlt
pop
xchg
out
mov
lods
fwait
push
cmp
jle
rcl
jle
int3
dec
xor
xchg
push
xchg
dec
clc
aad
jb
lods
mov
mov
outs
aas
(bad)
leave
(bad)
xor
lods
push
jp
jno
add
inc
sti
pop
std
mov
add
daa
inc
add
fbld
push
int
dec
add
xchg
ins
pop
mov
repz
mov
pop
dec
int
sub
mov
cmp
add
or
mov
pop
aas
cld
(bad)
lahf
stos
into
push
mov
mov
ss
xcrypt-ctr
cmps
sbb
cli
ret
(bad)
lds
sbb
push
imul
sub
(bad)
lods
or
(bad)
loop
xor
sti
sahf
das
inc
test
jmp
imul
(bad)
or
push
out
cs
sar
lods
mov
into
sub
mov
iret
outs
jne
jae
push
sub
and
cmc
push
jo
rcl
dec
ror
jge
jl
add
aaa
jns
ret
inc
xchg
rol
mov
pop
daa
add
sub
fld
dec
cmp
repnz
mov
jae
inc
mov
outs
adc
push
xor
xor
mov
rol
push
mov
and
daa
test
cld
sbb
in
xchg
fild
cld
or
inc
je
movs
cs
fcomp
jo
push
clc
(bad)
(bad)
test
test
jmp
jge
ror
dec
cmp
pop
stos
repnz
jno
cmp
out
out
test
add
push
inc
xchg
sbb
inc
fnstcw
xor
jp
or
jns
mov
cmp
adc
std
imul
not
in
out
(bad)
cli
inc
xchg
js
imul
mov
loope
(bad)
scas
in
ins
aam
xor
add
call
cs
mov
pop
movs
cmp
sbb
add
inc
xor
sbb
outs
out
bound
pushf
adc
push
movs
ins
sub
mov
push
jg
retf
idiv
aad
mov
xchg
mov
test
fmul
push
sub
mov
or
imul
out
xchg
xor
sub
xlat
test
cmps
sti
std
pop
or
loope
retf
not
lea
push
(bad)
int3
fimul
cli
mov
xchg
cld
or
jae
jno
and
test
xchg
push
inc
dec
je
push
jp
adc
dec
pop
test
mov
jp
int3
pop
push
xchg
outs
add
popa
sti
aaa
das
ss
cmp
test
(bad)
cdq
jbe
loope
push
pop
pusha
mov
stos
int
aam
lahf
cmp
cli
in
jno
xor
popf
ins
jno
es
mov
cmps
and
sbb
mov
mov
xchg
add
pop
push
fadd
cmc
lock
repz
sub
adc
les
sub
adc
mov
and
push
jb
daa
shr
or
inc
cmp
cmp
pop
in
(bad)
sbb
out
