sub
icebp
mov
pop
adc
sub
adc
es
push
xchg
and
adc
sub
adc
mov
jae
fldcw
or
dec
out
mov
sbb
aad
cmp
mov
sbb
jmp
stos
out
lds
and
ins
or
xchg
pop
xchg
and
mov
dec
jge
sbb
jge
mov
sbb
mov
fstp
ja
shl
mov
dec
jp
inc
sbb
cmp
dec
pop
adc
pop
call
cmp
inc
ror
nop
cmc
xor
adc
jle
fwait
in
and
xchg
shl
sub
adc
sbb
pop
xor
sbb
mov
pop
call
hlt
aad
xor
popf
hlt
rcl
sbb
push
adc
sbb
sbb
cmp
outs
xchg
int
sbb
inc
cmp
or
cmp
mov
fwait
in
xchg
adc
sbb
pop
adc
adc
push
mov
dec
inc
or
and
jno
sbb
mov
mov
push
mov
and
jno
sbb
ja
inc
ds
adc
push
loop
xor
dec
(bad)
call
jp
ror
out
jne
xchg
sbb
mov
adc
fwait
retf
sbb
mov
out
dec
sbb
sti
sar
inc
out
pop
mov
fstp
sub
adc
mov
and
retf
add
sbb
les
jae
jbe
or
repz
adc
call
fstp
mov
sub
adc
(bad)
ins
cmp
(bad)
sub
jno
sbb
adc
out
test
fst
shl
sub
adc
jb
cld
in
jmp
mov
push
test
sub
adc
mov
jp
(bad)
stc
dec
or
sbb
mov
into
je
sub
adc
(bad)
jno
jno
sbb
cmp
loope
nop
xor
xor
or
jle
jne
jns
sub
dec
cwde
sbb
sub
leave
popf
or
sbb
inc
xor
repz
jno
sbb
jmp
lods
adc
imul
test
sub
jno
sbb
mov
xor
aam
sbb
cdq
cld
aad
clc
pop
popf
sbb
js
jge
mov
sbb
jb
dec
cdq
push
stos
cmc
sbb
jg
fwait
les
jg
imul
sbb
jno
sbb
aam
sbb
xlat
stos
jl
mov
repnz
mov
out
mov
xchg
inc
mov
cmps
add
adc
gs
pop
in
cmp
call
sub
ins
in
mov
ins
or
hlt
(bad)
ins
loope
mov
ficom
fcomp
sub
sub
out
imul
and
push
xor
and
pop
lahf
test
(bad)
sbb
pop
das
cwde
jecxz
cmp
adc
ja
fnstenv
nop
cmc
or
sbb
mov
mov
inc
out
ins
sbb
je
xlat
xor
out
dec
sahf
push
jb
mov
out
jae
fistp
dec
(bad)
sbb
jno
sbb
xor
out
xor
and
(bad)
and
xchg
mov
out
mov
push
cdq
inc
ret
dec
add
fwait
in
xchg
add
mov
out
not
(bad)
ins
pop
mov
out
xor
out
dec
mov
out
adc
out
dec
mov
out
xor
out
dec
mov
popf
adc
mov
pushf
adc
test
in
dec
xlat
out
shr
dec
out
jb
shl
mov
dec
inc
cmp
hlt
aad
jo
adc
adc
rcl
sub
pop
sar
dec
cdq
jo
repz
fsubr
scas
add
cdq
popa
jo
shl
jmp
cwde
movs
push
pop
sub
iret
test
sbb
inc
dec
in
hlt
rcl
sbb
add
out
ja
fnstenv
nop
cmc
xor
adc
dec
mov
or
mov
adc
ins
loope
hlt
aad
out
psllw
add
sbb
cld
dec
or
call
push
ror
xor
cmp
inc
cdq
jae
(bad)
cmp
gs
cmp
jae
fistp
and
ins
adc
mov
sbb
inc
dec
in
hlt
fst
dec
js
dec
cdq
push
js
inc
out
xchg
mov
ins
in
(bad)
fnstsw
(bad)
pop
ss
out
and
fdivp
or
ins
adc
cvtps2pi
cdq
dec
add
fwait
cld
and
and
lds
shl
ret
mov
gs
ja
mov
jl
cmp
hlt
aad
shr
ja
fnstenv
nop
cmc
loopne
dec
inc
out
ins
sbb
inc
push
mov
out
inc
jmp
mov
ins
sbb
mov
push
mov
icebp
sub
cdq
hlt
aad
dec
mov
fistp
out
xor
dec
(bad)
dec
fwait
in
aad
inc
out
(bad)
in
dec
(bad)
call
fdivrp
cdq
hlt
rcl
fnstenv
nop
cmc
loop
dec
fwait
in
and
cmp
mov
ins
sbb
mov
mov
fistp
inc
sbb
sbb
loop
out
mov
shl
mov
nop
call
ja
sub
cmp
inc
dec
jmp
inc
out
ins
sbb
in
test
test
add
sub
xchg
mov
fst
sub
adc
fst
jns
or
adc
mov
add
loop
nop
call
cmp
out
cmp
out
mov
sub
jmp
cld
xchg
jp
inc
cmp
aas
imul
call
mov
loope
dec
mov
sbb
rol
mov
xchg
push
inc
jns
inc
inc
imul
inc
sbb
cmp
nop
call
sub
retf
mov
lds
rol
jne
js
fistp
fld
jmp
adc
and
pop
sub
and
mov
dec
js
fistp
cmp
out
cmp
out
movs
sub
adc
inc
sbb
inc
into
nop
push
push
mov
ret
jmp
fldenv
sbb
push
pop
cmp
hlt
xlat
sub
out
mov
dec
clc
inc
xlat
out
call
jb
shl
mov
sbb
pop
xor
adc
jecxz
jns
test
(bad)
imul
sbb
mov
xor
mov
fst
mov
ficom
mov
ins
or
jmp
xchg
and
adc
mov
nop
enter
rcr
(bad)
out
mov
pushf
icebp
dec
xlat
out
dec
pop
adc
adc
sub
inc
imul
xor
out
dec
jns
and
out
jne
and
dec
sub
gs
imul
pop
cmp
adc
mov
dec
fwait
hlt
and
sub
add
ins
inc
sub
xchg
pop
sub
adc
push
in
mov
sub
jecxz
or
adc
sub
inc
push
sub
dec
cmp
xor
cmp
jg
hlt
leave
sbb
cmp
hlt
rcl
stos
cmc
add
into
mov
jecxz
mov
sbb
inc
xchg
mov
out
repz
shl
push
in
les
shl
sbb
ficomp
cmp
cmp
out
mov
sbb
mov
pop
in
mov
icebp
out
repz
sar
(bad)
(bad)
dec
mov
jmp
and
es
pop
in
mov
ins
adc
out
dec
pop
and
cdq
jb
and
jno
sbb
lds
mov
inc
cmp
out
mov
ins
in
sub
rcl
xchg
mov
out
xor
shl
sub
cdq
imul
out
dec
mov
rcl
in
cld
inc
loope
dec
inc
push
dec
adc
test
inc
jmp
sbb
hlt
rcl
adc
sub
jno
mov
pop
out
les
icebp
lahf
sbb
sbb
mov
sbb
xchg
mov
mov
pop
sbb
call
cdq
sub
sub
jmp
loop
ins
sbb
sar
mov
cwde
(bad)
fisub
sbb
fld
xchg
push
dec
jns
adc
sbb
icebp
pop
sbb
adc
dec
js
dec
cdq
push
xchg
mov
sti
sbb
sbb
jle
jle
mov
fist
mov
xor
repz
sub
sub
cdq
xor
out
dec
movs
pushf
aam
xlat
out
pop
out
out
dec
jo
sar
sub
rcr
sub
mov
sub
clc
fwait
test
adc
lods
aad
dec
(bad)
dec
popf
xor
out
dec
jns
jne
(bad)
out
jne
cwde
sti
frstor
sbb
xor
shl
sub
fs
out
dec
mov
out
repz
sar
stc
out
dec
(bad)
dec
mov
jmp
and
out
nop
push
dec
and
adc
pushf
mov
jb
pushf
int3
dec
xlat
out
(bad)
pushf
lock
xlat
out
cmp
out
mov
sbb
mov
pop
in
mov
das
sbb
cmp
out
repz
rol
lods
(bad)
dec
(bad)
dec
mov
jmp
and
out
nop
push
dec
and
pop
xor
pop
adc
sub
movs
jno
out
pop
dec
loop
dec
stos
fstp
cmp
pop
cdq
or
out
dec
mov
out
add
ret
mov
xchg
xchg
(bad)
out
loope
fnop
repz
mov
dec
ins
cmp
jno
pushf
dec
mov
sbb
xchg
cmps
out
dec
(bad)
sbb
xor
test
out
mov
sub
(bad)
pushf
in
dec
xlat
out
pop
sub
out
dec
stos
fstp
out
jg
or
out
dec
mov
ficomp
push
lods
mov
dec
(bad)
and
dec
sub
pop
xor
es
xchg
sbb
out
icebp
jns
xchg
dec
(bad)
out
loope
test
addr16
and
out
dec
out
sbb
adc
(bad)
out
mov
cwde
jecxz
jbe
adc
sub
cmps
xor
out
dec
movs
sbb
adc
inc
test
fwait
inc
(bad)
out
jne
and
dec
sub
lods
movs
pushf
in
dec
xlat
out
(bad)
jae
dec
(bad)
call
sbb
cdq
jb
scas
xchg
sbb
out
cmp
sbb
loope
push
mov
shr
icebp
test
loopne
add
out
dec
sub
cdq
inc
dec
nop
lods
sbb
out
xlat
(bad)
pushf
mov
push
lods
mov
dec
(bad)
cdq
sub
loope
push
mov
push
xchg
(bad)
out
cmp
in
dec
(bad)
dec
js
mov
pop
sub
out
dec
stos
fstp
xor
bound
sub
xchg
dec
(bad)
out
mov
pop
adc
gs
sbb
cmp
sub
cmp
xchg
xchg
imul
pushf
int3
dec
xlat
out
cmp
out
in
mov
push
xchg
inc
sub
jge
mov
xchg
xchg
or
out
loope
pushf
enter
inc
cmp
out
xchg
mov
push
xchg
jne
sbb
xor
test
push
sbb
inc
retf
sbb
out
cmp
call
stos
movs
test
xlat
out
mov
sub
adc
out
pushf
mov
out
mov
pushf
mov
xlat
out
mov
sbb
dec
jns
xchg
sub
out
loope
pushf
enter
inc
cmp
out
lods
test
stos
movs
sub
popf
xor
out
dec
jns
les
sbb
dec
jns
sub
and
mov
sbb
mov
sub
loope
pushf
les
out
cmp
out
popa
sub
adc
ins
in
enter
inc
retf
xor
jmp
inc
sub
adc
icebp
out
dec
(bad)
dec
fwait
xor
out
dec
jns
sub
and
mov
sub
out
mov
out
jb
aas
popf
xor
out
dec
jns
xchg
ins
(bad)
out
loope
and
out
nop
push
dec
mov
ficom
xor
sbb
mov
repnz
jmp
out
dec
jns
xchg
pop
(bad)
out
loope
and
out
nop
push
dec
and
pop
xor
sbb
mov
shl
mov
out
jb
mov
adc
loope
dec
(bad)
jno
cs
out
dec
jns
out
sub
xchg
jne
call
shr
mov
jae
pop
mov
out
mov
out
jb
lods
cld
dec
xlat
out
xor
out
dec
jns
or
xor
out
dec
jns
jecxz
sub
xchg
jne
nop
enter
rcl
out
pushf
nop
dec
xlat
out
mov
pushf
cld
dec
xlat
out
xor
out
dec
movs
pushf
test
out
cmp
cdq
out
dec
(bad)
call
sub
adc
xchg
movs
xor
out
xor
or
mov
jmp
(bad)
dec
fwait
mov
dec
cmp
ins
in
imul
out
dec
mov
sbb
xor
sbb
mov
mov
adc
icebp
xor
cmp
xchg
xchg
sub
inc
fucom
repz
out
loope
and
movs
adc
adc
and
pop
xor
sbb
mov
sar
mov
out
dec
jns
xchg
sub
mov
nop
push
dec
and
pop
xor
sbb
mov
mov
adc
sbb
mov
sbb
adc
rcl
mov
jns
dec
(bad)
sbb
cmp
sub
cmp
xchg
xchg
adc
out
cmp
xchg
rcl
out
loope
lods
jo
xlat
out
pop
cmp
adc
dec
out
dec
stos
cmc
add
into
mov
jecxz
mov
out
cmp
out
lds
push
xchg
stc
sub
adc
mov
dec
(bad)
sbb
jb
pushf
fs
xlat
out
fstp
pushf
pusha
dec
xlat
out
cmp
out
mov
sbb
mov
pop
in
mov
sub
adc
xchg
ins
out
dec
(bad)
sbb
xor
movs
pushf
inc
dec
xlat
out
fld
out
inc
(bad)
out
cmp
fwait
mov
dec
xor
ins
in
imul
out
dec
mov
sbb
xor
sbb
mov
call
es
mov
or
out
dec
sub
xchg
sub
sbb
cmp
push
out
dec
(bad)
dec
out
add
out
dec
rol
dec
(bad)
call
xchg
push
out
dec
(bad)
cwde
sti
repz
sbb
xor
fs
loopne
xlat
out
mov
sbb
add
out
dec
movs
pushf
in
dec
xlat
out
fnstcw
jmp
mov
pushf
in
dec
xlat
out
pop
clc
mov
add
jmp
dec
(bad)
out
xor
out
xor
nop
xchg
dec
(bad)
out
dec
pushf
push
out
dec
(bad)
xchg
xchg
cld
(bad)
in
loope
pushf
call
xor
(bad)
dec
clc
out
sbb
xor
adc
adc
xlat
out
lds
cwde
ror
sbb
cmp
fwait
adc
mov
xchg
sub
out
mov
xchg
test
out
cmp
fwait
adc
mov
xchg
and
mov
out
pop
(bad)
out
cmp
xchg
pop
(bad)
out
mov
(bad)
call
pop
push
(bad)
xor
out
dec
sub
sar
lods
icebp
out
dec
(bad)
dec
fwait
adc
leave
out
dec
(bad)
sbb
pushf
ror
inc
cmp
out
mov
sub
xchg
or
out
dec
sub
cmp
fwait
adc
shr
(bad)
dec
fwait
adc
(bad)
(bad)
dec
fwait
adc
(bad)
or
(bad)
out
loope
sub
out
lock
(bad)
out
out
jb
shl
mov
rcl
sub
mov
sub
adc
sub
adc
jg
cdq
aam
ficom
xor
loopne
je
add
adc
in
mov
sbb
mov
jno
mov
sbb
mov
adc
in
sbb
out
cmp
dec
fdivrp
cdq
hlt
leave
xchg
ins
push
mov
fst
repz
gs
xlat
hlt
aad
out
dec
(bad)
bnd
stc
adc
leave
ficomp
ins
cmp
cwde
mov
fs
cmp
out
idiv
ins
rcr
ret
hlt
aad
out
dec
(bad)
inc
dec
jmp
adc
jmp
adc
mov
dec
scas
mov
shr
idiv
ins
in
jbe
ins
sbb
stc
mov
mov
sub
gs
sub
mov
jne
jno
jno
sbb
inc
sbb
or
fld
jae
pop
fs
cdq
dec
fdivrp
cdq
hlt
rcl
mov
sub
js
dec
cdq
push
jg
scas
clc
push
ins
or
shl
call
jno
pop
adc
ret
add
ins
adc
fsincos
and
jns
pop
nop
lea
sbb
mov
dec
js
mov
adc
adc
adc
in
adc
cdq
jbe
sbb
mov
inc
dec
in
jmp
out
xchg
dec
mov
add
out
mov
out
and
shl
gs
mov
adc
xchg
std
xor
ins
loope
ja
ret
sbb
sti
mov
mov
adc
mov
imul
xor
les
mov
nop
jmp
clc
repnz
in
fist
sbb
mov
pop
add
sbb
ja
div
out
jb
shl
mov
sbb
pop
xor
inc
or
arpl
test
stc
mov
mov
jmp
ror
sar
mov
bnd
adc
out
dec
sub
cmp
cld
shl
sub
jecxz
mov
pushf
dec
dec
xlat
out
jb
pop
sbb
lods
inc
in
dec
(bad)
call
xchg
jl
mov
out
repz
rcr
and
push
mov
gs
sub
out
mov
sbb
(bad)
call
enter
clc
jae
sbb
cmp
rol
xor
movs
imul
xchg
mov
shl
mov
dec
pop
mov
xchg
xchg
popa
(bad)
out
cmp
adc
sub
cmp
in
inc
dec
mov
nop
push
dec
(bad)
sbb
jno
sbb
jno
add
add
out
dec
ror
mov
nop
enter
rol
sub
cdq
imul
pop
in
sub
adc
rcl
cmp
xchg
jns
out
loope
sbb
(bad)
ins
in
mov
nop
push
dec
and
lods
(bad)
lods
enter
clc
iret
mov
adc
lods
int
dec
(bad)
lock
sub
xchg
jb
push
adc
imul
imul
pushf
fmul
out
mov
pop
in
xor
adc
mov
xlat
out
pop
cli
push
adc
xlat
out
cmp
(bad)
(bad)
dec
jp
(bad)
lods
fmul
out
and
out
dec
mov
fucomp
dec
(bad)
call
pop
sbb
fwait
xor
out
dec
mov
nop
leave
cwde
lock
(bad)
jmp
pushf
fmul
out
add
out
dec
(bad)
mov
dec
xlat
out
hlt
rcl
cdq
hlt
aad
rol
pop
sbb
xor
adc
dec
xlat
out
(bad)
fucom
test
out
cmp
fs
adc
jmp
inc
mov
cwde
sti
cwde
cmp
adc
jmp
pushf
or
popf
xor
out
dec
jns
adc
(bad)
(bad)
dec
jp
(bad)
ins
in
mov
nop
push
dec
mov
ficom
dec
sub
sar
mov
popf
xor
out
dec
jns
adc
test
dec
(bad)
out
adc
ins
loope
xor
out
dec
stos
movs
lods
dec
xlat
out
(bad)
sub
xchg
xchg
sub
sub
out
mov
out
jb
pop
in
xor
adc
dec
xlat
out
add
out
dec
(bad)
mov
dec
xlat
out
hlt
rcr
adc
out
dec
(bad)
sbb
jno
sbb
cmp
imul
in
dec
mov
call
movs
in
dec
movs
pushf
test
xlat
out
fld
xchg
xchg
sbb
out
loope
pushf
int3
dec
xlat
out
fld
out
inc
(bad)
mov
rcr
out
mov
shl
mov
out
jb
pushf
test
xlat
out
mov
pop
in
cmp
sbb
cmp
call
mov
pushf
mov
xlat
out
cmp
sub
mov
lods
test
xlat
out
and
in
dec
mov
(bad)
dec
(bad)
cwde
lods
jno
out
pop
sub
adc
sub
xchg
xchg
or
out
cmp
nop
push
dec
mov
rcl
cmp
movs
or
out
dec
mov
nop
push
dec
shl
mov
mov
out
jb
pop
in
sub
dec
shr
sbb
cmp
adc
popa
in
dec
(bad)
dec
popf
xor
out
dec
jns
adc
in
out
and
in
dec
mov
in
fwait
mov
pop
in
cmp
sbb
cmp
call
test
sbb
dec
jns
xchg
sbb
out
loope
pushf
int3
dec
xlat
out
fld
out
inc
(bad)
mov
hlt
rcl
cdq
hlt
aad
jecxz
or
adc
jmp
pushf
ins
dec
xlat
out
mov
pushf
je
xlat
out
cmp
cmc
out
dec
(bad)
dec
popf
xor
out
dec
jns
movs
sub
out
cmp
mov
dec
(bad)
dec
popf
xor
out
dec
jns
adc
in
out
and
in
dec
mov
(bad)
shl
sub
mov
sbb
movs
pushf
mov
inc
pop
in
xchg
mov
inc
ds
out
repz
rcr
sub
adc
mov
out
dec
jns
mov
sub
js
sub
adc
sub
loope
mov
leave
aad
out
xor
sbb
in
xor
test
sub
(bad)
sbb
mov
pushf
mov
inc
fcmovnbe
out
dec
shr
(bad)
xchg
xchg
(bad)
out
xor
sbb
in
fld
jno
mov
sbb
dec
jns
out
dec
pop
in
sti
shl
out
fld
jno
mov
sbb
dec
jns
out
dec
pushf
sub
dec
(bad)
out
jne
out
pop
(bad)
out
pop
les
fs
xlat
out
les
jbe
sub
jp
inc
cli
loope
sub
loope
sub
aam
adc
out
mov
push
xchg
hlt
sub
adc
sub
inc
imul
or
in
dec
jle
add
out
jne
and
dec
sub
pop
xor
mov
out
into
sub
pop
xor
sbb
mov
data16
sub
nop
into
sub
pop
xor
sbb
mov
sbb
(bad)
sbb
cmp
in
out
dec
(bad)
dec
out
add
out
dec
(bad)
lods
cld
dec
xlat
out
cmp
out
fld
jno
inc
imul
xor
out
dec
jns
mov
jne
and
dec
sub
pop
xor
inc
sbb
fcomp
cmp
mov
dec
(bad)
dec
clc
aas
shl
xor
adc
adc
aaa
jae
fxtract
call
mov
pop
pop
lock
dec
stos
fstp
lods
sbb
dec
xlat
out
cmp
sbb
cmp
out
gs
out
jbe
pop
in
dec
(bad)
sbb
mov
call
ret
xor
in
dec
test
out
mov
xor
dec
inc
mov
xlat
out
xor
xor
out
dec
(bad)
sub
xor
pop
and
aad
out
dec
lods
pop
in
dec
(bad)
xchg
lods
inc
(bad)
out
(bad)
clc
imul
or
in
dec
pop
test
adc
xlat
out
cmp
mov
dec
(bad)
dec
js
fcomp
dec
pop
adc
jae
sbb
xor
or
(bad)
aad
out
cmp
call
sub
pushf
and
ins
mov
nop
ins
mov
sub
xchg
gs
out
xor
mov
adc
hlt
call
mov
pop
movs
icebp
out
dec
stos
fstp
(bad)
out
mov
pop
jp
inc
(bad)
xchg
xchg
sbb
out
loope
imul
mov
xlat
out
mov
mov
adc
xchg
xchg
cmc
aad
out
xor
out
les
xchg
xchg
cmc
aad
out
ja
sbb
dec
xlat
out
dec
lods
pop
in
dec
(bad)
xchg
lods
inc
(bad)
out
(bad)
clc
imul
or
in
dec
pop
rcr
dec
jns
xchg
sbb
out
loope
shl
repz
gs
sub
in
sub
fwait
hlt
and
out
cmp
call
sub
pushf
pop
in
dec
(bad)
xchg
ins
mov
nop
ins
mov
mov
out
dec
ror
and
gs
dec
mov
ficomp
xor
out
xor
nop
push
dec
(bad)
lods
enter
clc
ja
sbb
cmp
out
repz
xchg
cmc
aad
out
cmp
xchg
xchg
gs
out
out
ja
fnstenv
nop
cmc
xor
sbb
inc
cmp
and
pop
rcr
call
and
fidivr
cmps
imul
dec
cdq
inc
stos
fstp
loope
pushf
in
dec
(bad)
out
pop
rol
dec
sub
pop
push
outs
sbb
xor
(bad)
sbb
dec
jns
fadd
sbb
dec
jns
sbb
mov
scas
push
mov
push
cmps
imul
xchg
push
and
in
dec
jns
mov
dec
sbb
cdq
jbe
scas
push
mov
popf
adc
mov
pushf
in
dec
(bad)
out
cmp
out
dec
(bad)
dec
js
fcomp
cmp
out
dec
(bad)
dec
clc
or
sub
out
dec
stos
shr
icebp
test
loopne
ja
fist
xlat
mov
out
jbe
out
mov
cmp
push
ins
out
jae
or
jno
sbb
mov
popf
adc
cmp
out
push
ins
out
push
mov
and
iret
clc
cwde
jmp
sahf
pushf
in
dec
(bad)
out
mov
fst
(bad)
sbb
jno
sbb
jno
repnz
shr
call
and
ja
sar
stos
cmc
add
jg
fwait
in
and
xchg
inc
mov
adc
imul
popa
and
adc
nop
push
dec
mov
sbb
fld
xchg
sub
mov
xchg
pop
adc
sbb
fcomp
pop
je
adc
cmp
loope
sub
pop
mov
in
xchg
rcr
push
mov
call
xchg
outs
dec
mov
out
idiv
ins
in
cdq
ja
sbb
add
(bad)
sbb
mov
sbb
(bad)
dec
in
out
lds
pop
and
sbb
mov
sub
mov
pop
adc
mov
mov
jmp
loopne
out
mov
dec
out
jb
shl
mov
dec
inc
out
pop
add
mov
jg
xchg
xchg
mov
repz
jb
sbb
jno
sbb
inc
sbb
inc
sbb
inc
sbb
mov
out
mov
sub
and
fidivr
(bad)
ins
loopne
or
jl
popf
xor
sub
mov
mov
xor
cmp
sub
cmp
jae
cmp
cmc
inc
dec
pop
loope
dec
pop
jmp
adc
(bad)
shl
sub
adc
dec
in
adc
sbb
mov
pop
sbb
call
cdq
sub
sub
jmp
cdq
in
out
and
icebp
out
repz
hlt
stc
nop
shl
rcl
sub
xlat
hlt
leave
sbb
mov
repnz
cmp
lea
adc
cli
mov
pop
adc
ficom
hlt
test
mov
dec
out
les
out
jne
adc
les
nop
enter
sar
ins
stc
(bad)
mov
adc
fsub
pop
sbb
hlt
icebp
nop
enter
ror
stc
fwait
hlt
rcr
push
dec
adc
mov
adc
cmp
xor
cmp
push
cmps
hlt
test
dec
sub
(bad)
outs
mov
adc
in
adc
adc
aad
push
dec
sub
sub
in
imul
pop
call
mov
adc
hlt
aad
out
pop
cmp
inc
outs
movs
dec
pop
mov
or
push
mov
pop
mov
(bad)
hlt
fst
cmps
hlt
cmp
fwait
cli
dec
(bad)
out
mov
fst
inc
sbb
(bad)
aad
push
dec
sub
inc
dec
pop
jmp
adc
shr
mov
cwde
jecxz
sub
jmp
adc
ja
fnstenv
nop
cmc
loopne
dec
scas
in
add
xor
mov
mov
out
and
shr
call
dec
jns
das
mov
sbb
(bad)
ins
sbb
pop
adc
iret
mov
sbb
mov
ins
add
sub
dec
pop
or
(bad)
aad
outs
sub
out
(bad)
aad
inc
sub
test
pop
sbb
inc
into
nop
push
dec
mov
dec
cdq
push
stos
cmc
add
xchg
pusha
sbb
push
nop
call
inc
mov
fst
mov
ficomp
mov
push
adc
sub
gs
xor
add
pop
add
mov
ins
add
in
mov
repz
fst
clc
push
mov
loope
mov
sub
idiv
ins
cmc
cdq
jbe
rcl
in
cld
xchg
pop
popa
sbb
mov
dec
inc
push
inc
inc
enter
aaa
mov
out
idiv
ins
cmc
cdq
jbe
mov
(bad)
cmp
xor
cmp
jae
cmp
jmp
test
mov
push
mov
pop
loopne
rcr
mov
sub
xchg
sbb
sbb
cmp
sbb
cmp
xchg
push
ins
jns
clc
xchg
mov
std
cmp
cmc
and
mov
sbb
xor
sbb
mov
pop
clc
call
adc
pop
jae
out
add
or
cmp
mov
(bad)
cdq
hlt
icebp
nop
xlat
(bad)
dec
clc
cmps
mov
jmp
ins
inc
pop
ins
push
ja
into
adc
jae
out
std
test
ins
into
adc
ins
into
sub
pop
repnz
pop
in
inc
adc
sub
fldcw
sbb
mov
icebp
ja
sub
js
sub
adc
sub
mov
sbb
jl
adc
imul
hlt
int
push
ins
adc
adc
ins
icebp
cmp
leave
and
mov
sbb
pop
hlt
call
adc
sub
lock
sbb
mov
pushf
fidiv
int
push
ins
adc
adc
stos
stc
adc
ins
rcl
mov
dec
clc
idiv
call
sub
xchg
nop
call
cmp
mov
icebp
xor
out
pop
ret
mov
pop
jp
jg
add
test
pop
ret
lea
and
repnz
retf
daa
jae
out
jmp
(bad)
xor
cmp
mov
jns
adc
(bad)
pop
ror
repz
ss
sbb
xor
sbb
mov
icebp
shl
sub
sbb
popf
push
mov
sbb
jbe
sbb
mov
xchg
xchg
or
jg
arpl
sub
popf
hlt
cmc
dec
inc
pop
pop
mov
mov
pop
aam
(bad)
ins
les
mov
mov
fs
xchg
hlt
in
sbb
xor
out
dec
mov
(bad)
mov
sub
int3
push
ins
les
ins
icebp
cmp
leave
dec
fwait
hlt
cmc
xchg
inc
push
add
inc
cmp
in
dec
cmp
in
dec
js
sub
inc
cmp
movs
out
dec
(bad)
dec
js
fcomp
fld
icebp
sbb
xchg
mov
out
mov
out
jbe
or
cmps
mov
fnstcw
jns
and
movs
clc
pop
mov
fprem
mov
sub
(bad)
sbb
mov
icebp
lahf
and
sbb
jno
or
inc
sbb
sub
adc
movs
clc
retf
mov
sub
cmp
jae
fld
jno
mov
sbb
dec
mov
mov
sbb
movs
mov
mov
ins
add
jmp
jmp
sub
xchg
jbe
adc
dec
js
or
out
adc
xlat
mov
sbb
dec
sub
shl
sub
inc
imul
stc
fcomp
fnstcw
push
mov
sbb
mov
icebp
out
(bad)
out
inc
add
adc
sub
inc
imul
stos
fcomp
fldcw
sbb
xor
into
jmp
(bad)
out
and
ins
call
loopne
sub
inc
imul
mov
sbb
dec
test
cmc
repnz
js
fcomp
fxch
jmp
loope
sub
mov
cdq
clc
sub
out
xor
pop
dec
jb
nop
cmc
loopne
cmps
stc
idiv
sbb
inc
into
nop
push
dec
mov
out
cmp
sub
cmp
jno
sahf
imul
xor
pushf
pop
adc
mov
mov
rcl
in
cld
xchg
pop
and
pop
add
mov
add
mov
fsubrp
mov
fcom
inc
sbb
popf
hlt
ror
(bad)
mov
adc
adc
imul
hlt
fistp
jbe
adc
stos
icebp
dec
cmp
hlt
rcr
xchg
jbe
pop
adc
es
movs
test
adc
sbb
dec
and
pop
push
ins
or
adc
ins
out
jbe
sub
adc
imul
mov
adc
hlt
and
pusha
mov
icebp
pushf
mov
cwde
out
outs
sbb
sub
dec
jmp
xor
movs
sbb
loop
dec
fwait
int3
and
xor
pushf
inc
cwde
sti
loop
sbb
xor
stos
add
mov
call
test
ins
xlat
sub
xchg
or
out
dec
imul
dec
(bad)
out
dec
xlat
out
cmp
out
or
out
dec
imul
dec
(bad)
out
dec
xlat
out
cmp
out
mov
fcom
mov
ficom
dec
sub
out
icebp
pop
or
dec
(bad)
pushf
in
(bad)
out
or
(bad)
call
pop
or
dec
(bad)
pushf
in
(bad)
out
add
(bad)
call
mov
pushf
hlt
dec
xlat
out
jb
movs
call
ret
test
out
dec
lods
loope
dec
(bad)
nop
lods
and
in
dec
stos
movs
call
ret
test
out
dec
lods
loope
dec
(bad)
nop
movs
and
in
dec
(bad)
sbb
jo
sbb
jb
mov
adc
cmc
in
dec
(bad)
jge
mov
cwde
jecxz
push
sbb
cmp
icebp
in
dec
(bad)
dec
popf
xor
in
dec
jns
xchg
dec
aam
out
loope
pushf
in
dec
(bad)
out
fld
icebp
outs
cmp
sbb
dec
jns
clc
push
mov
push
xchg
pop
sub
adc
loope
dec
(bad)
dec
inc
pop
in
adc
mov
adc
(bad)
sbb
cmp
lock
dec
(bad)
dec
inc
pop
sbb
adc
(bad)
out
dec
(bad)
ins
add
rcr
mov
cwde
jecxz
jns
adc
sub
out
mov
fcom
stos
movs
loopne
(bad)
out
les
dec
clc
adc
sub
cmp
sub
pop
push
sbb
mov
pushf
loopne
(bad)
out
xor
(bad)
sbb
mov
fcom
inc
sbb
lods
lock
dec
(bad)
dec
inc
pop
rcl
les
sbb
or
xor
mov
cli
cdq
xor
in
dec
mov
and
mov
xchg
xchg
dec
xlat
out
loope
icebp
(bad)
sub
sbb
popf
cmps
mov
sbb
dec
jnp
clc
mov
jmp
sbb
fld
jno
dec
sub
popf
xor
in
dec
jns
clc
ret
mov
jmp
call
pop
sub
push
mov
out
repz
rol
sub
xchg
or
in
dec
sub
sub
shl
sub
addr16
xor
dec
push
mov
sub
pop
fwait
sbb
mov
sbb
jo
sbb
dec
out
popf
adc
mov
shl
mov
lods
loopne
(bad)
out
xor
in
dec
jns
clc
mov
shl
mov
sub
xchg
jb
adc
movs
pushf
in
(bad)
out
out
dec
cdq
mov
adc
lds
out
mov
pop
adc
sbb
cli
cdq
xor
in
dec
mov
nop
adc
adc
jecxz
dec
sbb
cmp
in
in
dec
(bad)
dec
inc
pop
xor
adc
jle
daa
cmp
sbb
jb
fst
cmp
sti
dec
(bad)
out
jno
adc
cdq
xor
in
dec
mov
rcl
in
cld
xchg
pop
cmp
adc
xor
jns
mov
out
mov
pop
adc
push
pop
adc
adc
add
sub
fyl2x
jmp
adc
js
adc
inc
adc
fstp
dec
pop
sbb
adc
push
jg
mov
(bad)
cdq
hlt
fst
fs
sub
shl
sub
out
mov
out
mov
pop
adc
out
adc
mov
xchg
push
mov
ins
loope
ja
loopne
or
(bad)
cdq
hlt
lds
loopne
jmp
jecxz
pop
sub
sbb
outs
outs
cwde
hlt
xlat
xchg
push
(bad)
mov
jae
cmp
out
inc
dec
pop
sbb
adc
(bad)
jl
mov
sub
out
ja
shl
mov
pop
inc
movs
mov
fsubrp
mov
fcom
es
push
mov
rcl
dec
(bad)
call
(bad)
sbb
jo
sbb
jbe
inc
shl
mov
dec
fwait
les
cmps
retf
loopne
adc
mov
sbb
jo
sbb
clc
mov
dec
clc
inc
scas
sbb
cmp
mov
fcom
and
gs
(bad)
sbb
jo
sbb
jbe
sbb
push
out
dec
stos
fstp
xor
jae
mov
sub
icebp
ret
hlt
aad
push
mov
mov
push
cmps
out
ins
push
cmps
out
push
cmps
arpl
sti
sbb
es
inc
mul
scas
pop
mul
scas
fnstenv
adc
jnp
scas
ret
or
bound
add
mov
out
mov
pop
adc
lahf
dec
mov
rcl
adc
xlat
mov
jae
jno
inc
dec
js
dec
cdq
push
js
inc
out
ins
sbb
mov
in
(bad)
icebp
sub
out
mov
fcom
jg
or
fld
jae
fld
icebp
mov
sub
cdq
aaa
test
ficom
mov
cwde
(bad)
fidiv
sbb
mov
shl
mov
nop
rcl
mov
sbb
cmp
sbb
dec
sub
shl
sub
adc
cmp
adc
sub
adc
lahf
adc
(bad)
sbb
jo
sbb
hlt
aad
xlat
fld
dec
clc
fst
out
xor
adc
jbe
fst
xor
adc
xor
les
mov
jae
out
outs
in
dec
(bad)
call
jb
shl
mov
sbb
mov
dec
inc
cmp
pushf
sub
cli
sub
xlat
out
mov
loope
push
mov
out
jbe
sbb
jo
sbb
dec
sub
adc
xchg
in
dec
(bad)
pop
arpl
(bad)
out
xor
out
dec
mov
test
dec
(bad)
out
xor
out
dec
sub
adc
(bad)
out
cmp
in
out
dec
(bad)
dec
jp
inc
sbb
dec
jns
adc
lahf
adc
imul
jbe
outs
adc
(bad)
out
dec
pop
sbb
adc
sub
cmp
jmp
sub
sbb
mov
add
mov
fcom
mov
(bad)
not
sbb
mov
ficom
sub
adc
xlat
out
pop
mov
out
mov
out
jbe
inc
dec
js
dec
cdq
push
xchg
cmp
(bad)
aaa
sub
inc
out
xchg
dec
mov
xor
sbb
scas
sub
nop
retf
gs
(bad)
sbb
jo
sbb
cli
out
dec
mov
xchg
push
dec
mov
dec
call
dec
(bad)
call
pop
fist
sub
clc
sbb
out
call
jmp
inc
scas
ins
out
ins
stos
fs
mov
(bad)
fwait
hlt
rcl
inc
dec
inc
sbb
sbb
cmp
(bad)
dec
dec
out
ret
inc
xor
sbb
jno
lock
mov
sbb
mov
sub
adc
sub
in
mov
out
jne
mov
loope
pop
push
out
dec
jp
sub
jae
dec
push
loop
sub
dec
(bad)
nop
sar
jp
xchg
hlt
shr
clc
xchg
xlat
out
xor
or
xor
adc
xor
adc
jp
push
dec
(bad)
out
jne
sub
pop
lock
mov
sbb
jo
sbb
sub
inc
dec
mov
push
lea
outs
or
and
movs
aad
out
xor
adc
jno
mov
mov
xchg
push
dec
mov
dec
call
jo
sbb
int3
fstp
adc
(bad)
out
cmp
xchg
inc
cmc
test
adc
pop
push
push
cmp
int3
fnsave
mov
pop
in
sub
adc
in
mov
sbb
mov
(bad)
out
cmp
jae
dec
pmaddwd
pop
in
cmp
hlt
aad
cmc
ja
add
ins
call
loop
push
in
dec
(bad)
nop
sar
jp
inc
pop
push
out
dec
stos
fstp
cmp
xchg
inc
(bad)
(bad)
sbb
jo
sbb
mov
imul
rcr
push
cmps
repnz
fiadd
int3
dec
inc
out
ins
sbb
rcr
test
add
sub
daa
adc
cs
pop
pop
call
mov
sbb
outs
adc
je
adc
pop
adc
(bad)
and
pop
xor
sbb
mov
push
loope
dec
mov
sbb
mov
ins
sbb
cdq
adc
sub
out
mov
fcom
stos
jg
mov
fsincos
mov
sub
idiv
ins
in
jbe
inc
fnstenv
nop
cmc
loopne
dec
inc
out
sbb
ror
adc
fild
into
jecxz
dec
jo
adc
cmp
sub
cmp
jg
lods
sbb
mov
sbb
push
outs
gs
pop
aam
adc
mov
adc
mov
sbb
ja
sbb
jo
sbb
mov
sbb
loope
outs
sbb
fwait
adc
es
push
int
out
leave
inc
inc
inc
pop
push
in
out
dec
stos
fld
sub
stc
jb
sbb
cmp
sub
cmp
jae
dec
pop
adc
jae
sbb
mov
sub
shl
sub
(bad)
mov
(bad)
outs
push
icebp
fsub
out
xor
or
inc
iret
nop
push
dec
mov
repnz
xor
mov
mov
out
mov
pop
adc
(bad)
outs
push
mov
in
or
hlt
aad
adc
jns
call
mov
out
mov
sub
out
(bad)
loopne
fst
shl
sub
cmps
ss
icebp
pop
xor
sbb
loop
scas
mov
jle
lods
inc
(bad)
out
jne
sub
pop
and
push
dec
mov
rcl
in
cld
xchg
pop
and
loope
pop
pop
nop
call
or
pop
adc
rcl
inc
pop
es
dec
mov
out
mov
pop
adc
out
inc
pop
mov
dec
clc
dec
shl
out
xor
adc
xor
adc
mov
ins
out
adc
dec
clc
imul
pop
out
mov
out
pop
inc
sbb
inc
aad
repz
data16
test
clc
pop
shl
out
call
sub
sub
shl
sub
xlat
out
int
dec
(bad)
inc
sbb
aas
out
(bad)
sub
sbb
out
mov
aam
(bad)
outs
adc
rcr
push
mov
out
idiv
ins
in
cdq
jbe
loop
les
dec
clc
push
and
lods
(bad)
outs
adc
pop
adc
out
dec
stos
fstp
pop
sbb
adc
shl
call
xchg
aam
out
call
test
mov
out
jb
shl
stos
cmc
or
jg
scas
loopne
cmp
call
mov
pop
adc
or
movs
repz
jp
inc
sbb
rcr
mov
mov
jbe
ins
cmc
adc
mov
xchg
nop
mov
nop
push
inc
es
adc
loope
popf
nop
mov
nop
rcl
mov
xchg
push
pop
jns
and
pop
sbb
out
test
popf
nop
mov
adc
lds
fist
mov
loope
push
mov
sub
icebp
shl
mov
out
mov
pop
adc
shr
idiv
ins
std
cdq
jbe
sbb
jo
sbb
cmp
sub
cmp
jg
hlt
xlat
sbb
pop
xor
cmps
hlt
xlat
jo
adc
adc
sbb
lds
jg
hlt
xlat
push
cmps
hlt
xlat
and
mov
sbb
and
add
sbb
lds
pop
adc
sub
xlat
jbe
icebp
add
ror
ins
out
jno
sbb
mov
sbb
adc
(bad)
sub
or
clc
ret
push
sbb
cmp
cwde
out
jp
adc
xlat
out
add
sbb
jo
sbb
push
ins
out
jno
sbb
mov
sub
adc
stc
mov
adc
sbb
scas
push
dec
inc
fnstenv
sub
shl
dec
jp
movs
sbb
adc
inc
out
icebp
sub
fld
icebp
mov
jb
loope
dec
mov
cwde
adc
(bad)
inc
dec
jmp
cmc
xor
adc
sbb
mov
inc
jecxz
xchg
(bad)
jg
sub
idiv
ins
loope
jbe
sbb
jo
sbb
mov
xchg
push
mov
imul
mov
fcom
sub
fldcw
mov
shl
icebp
ja
sub
xchg
jne
out
mov
pop
adc
(bad)
aaa
xor
jns
adc
sub
icebp
imul
clc
xchg
stos
sbb
cmp
nop
call
out
xor
adc
cmp
xor
cmp
jae
pop
lock
adc
call
lock
mov
fcom
mov
pop
in
out
push
cmps
mov
fcom
jbe
fnstenv
nop
cmc
xor
add
mov
ss
xchg
mov
fsubr
mov
fst
mov
outs
push
mov
cwde
loope
pop
sbb
xor
xchg
xchg
lea
xor
mov
sbb
cmp
adc
sub
test
inc
sbb
inc
enter
mov
lahf
push
mov
sbb
mov
jmp
adc
push
sbb
mov
sub
mov
sbb
ds
sbb
mov
cmp
adc
and
lahf
lock
fsubr
sbb
dec
sub
shl
sub
shl
pop
cmp
and
push
xchg
push
sub
sbb
pop
popa
sbb
mov
adc
ds
and
xor
sbb
mov
sbb
aaa
push
mov
adc
pop
out
mov
xchg
test
pop
ret
sub
stc
mov
sub
(bad)
lock
push
mov
sbb
mov
fst
fistp
ds
sub
pop
outs
sbb
mov
call
nop
mov
cmp
mov
push
pop
adc
out
dec
fistp
ds
sub
pop
xor
adc
mov
xchg
push
mov
lock
out
mov
xchg
push
mov
ins
pop
sub
call
jns
rcr
ds
lahf
push
mov
mov
lock
test
out
mov
ins
pop
sub
fdiv
add
cdq
jo
adc
ds
popa
fwait
lock
adc
(bad)
out
mov
xchg
push
mov
ins
pop
sub
mov
sub
cdq
jns
rcr
ds
rcl
sub
adc
out
dec
(bad)
sbb
jno
sbb
mov
xchg
test
mov
sub
nop
mov
imul
mov
mov
mov
rcr
sbb
push
mov
cdq
sbb
icebp
sar
mov
mov
xchg
jno
sbb
pop
std
sbb
mov
rcl
push
pop
adc
sbb
mov
popa
fwait
lock
adc
pop
popf
sbb
mov
sbb
jno
sbb
mov
lock
sub
xchg
pop
movs
add
mov
sbb
cs
sbb
mov
fyl2xp1
outs
sub
adc
and
lahf
lock
xchg
jo
adc
sub
pop
pop
sub
mov
sub
ror
jae
call
xchg
lods
cmp
repz
mov
sbb
(bad)
adc
or
sbb
mov
repnz
repz
and
mov
sbb
cs
sbb
cs
sbb
inc
enter
mov
xchg
push
mov
repnz
mov
sbb
mov
sbb
jno
sbb
mov
xchg
push
mov
push
xchg
jne
sbb
cmp
pop
call
nop
fcomp
lahf
sbb
adc
xor
cmp
pop
sub
mov
sub
out
lahf
pop
out
jmp
popf
cdq
mov
sbb
mov
sbb
int3
push
ins
adc
adc
adc
icebp
lahf
push
mov
sbb
int3
push
lahf
push
mov
ins
add
les
ins
inc
das
ins
pop
xor
ins
lock
sti
repnz
cmp
push
mov
nop
fdiv
fstp
mov
ins
fwait
lock
cmps
mov
xchg
push
mov
stc
pop
cmp
int3
fistp
mov
push
xchg
mov
fs
mov
cwde
loope
cmp
icebp
ins
lock
sti
test
cmp
ins
lock
call
mov
fs
mov
stc
ins
lock
adc
ret
repnz
fadd
nop
push
inc
mov
fs
mov
repnz
fstp
movs
shl
sbb
repz
adc
adc
sbb
int3
push
sbb
jno
sbb
mov
pop
adc
mov
fmul
loopne
inc
cmp
dec
inc
out
mov
xlat
sbb
dec
sub
shl
sub
ja
sbb
fist
adc
out
jno
ja
sbb
push
adc
sub
adc
xchg
fist
jg
jae
sub
mov
cmps
pop
adc
in
push
mov
icebp
inc
int
sbb
fptan
fist
jg
push
int
sbb
cmp
out
idiv
ins
in
jbe
not
repz
fwait
push
sbb
adc
inc
fnstenv
nop
cmc
xor
cdq
adc
xchg
adc
sub
enter
push
sub
fst
inc
or
push
sbb
add
jbe
icebp
or
fdivrp
cdq
hlt
mov
cmc
adc
mov
hlt
(bad)
push
inc
imul
jno
sub
repz
jb
jl
mov
jl
mov
sbb
jno
sbb
imul
jl
mov
pop
enter
adc
lds
mov
sbb
mov
sbb
jbe
sbb
and
ins
test
cdq
imul
nop
shl
lods
adc
xchg
sbb
hlt
mov
movs
popf
(bad)
stc
mov
jecxz
movs
pop
clc
loope
sbb
mov
xchg
push
push
jns
add
or
cli
cdq
hlt
lods
nop
sar
test
sub
fld
jae
fld
out
push
ror
adc
gs
inc
sbb
sub
adc
(bad)
shl
sub
dec
pop
mov
jp
inc
pop
out
(bad)
int
arpl
sub
xchg
jb
pop
adc
cld
arpl
mov
sbb
jno
sbb
les
out
xor
sti
mov
sub
repz
jb
inc
dec
js
dec
cdq
push
stos
cmc
xor
ins
in
ror
aad
cs
xchg
push
mov
or
inc
sub
ret
cmc
cdq
hlt
shl
sub
cmp
loope
cmp
icebp
inc
dec
pop
loope
mov
pop
in
inc
out
les
out
adc
in
sti
mov
ins
std
cdq
hlt
leave
out
jne
mov
in
jb
nop
cmc
out
xor
stos
jb
call
dec
sub
shl
sub
gs
mov
mul
in
jmp
loop
dec
fwait
les
xchg
dec
mov
imul
dec
es
adc
adc
adc
lahf
pop
daa
mov
out
mov
ins
cmp
adc
adc
lahf
pop
daa
mov
out
mov
ins
add
adc
adc
sub
adc
ins
or
movs
pop
xchg
add
out
pop
out
mov
scas
push
dec
es
adc
fcmovnbe
push
mov
scas
add
adc
pop
xor
sbb
mov
jecxz
mov
jmp
xchg
cmp
sbb
cmp
call
adc
gs
xchg
pop
sub
cmps
movs
aas
and
les
call
pop
sub
sbb
les
cmps
hlt
(bad)
jb
mov
loope
adc
rcr
sub
cmps
in
jb
movs
movs
or
adc
jns
push
enter
hlt
rcr
add
call
rcr
in
ins
or
dec
stos
icebp
adc
jl
cdq
movs
sub
adc
lahf
pop
out
fucompp
or
fpatan
sub
fs
shr
dec
(bad)
out
and
adc
nop
call
mov
push
cdq
dec
stos
icebp
adc
adc
nop
call
lea
sbb
xchg
pop
sub
and
scas
mov
sbb
loope
pop
sub
sub
or
sbb
movs
dec
sub
push
cdq
mov
sbb
mov
cdq
sub
sub
rcl
lea
sbb
mov
cdq
sub
sub
rcr
push
mov
pop
cdq
dec
stos
icebp
adc
lahf
sbb
adc
sub
adc
push
call
jge
adc
mov
leave
adc
icebp
adc
ins
loope
hlt
cmp
xor
sbb
add
sub
adc
pop
dec
cdq
dec
popa
cdq
sub
sub
rcr
push
mov
daa
cdq
dec
stos
icebp
adc
adc
nop
call
pop
sub
pop
sub
lds
and
mov
sbb
sar
sub
add
nop
adc
sub
adc
sub
scas
in
dec
(bad)
inc
dec
jmp
cld
mov
sub
shl
sub
and
push
nop
lea
sbb
outs
cwde
out
pop
sub
adc
fcomp
adc
cmp
hlt
and
sbb
ja
sar
sub
adc
out
adc
mov
fst
es
inc
mov
adc
sbb
push
loope
imul
dec
dec
sub
shl
sub
cmps
mov
and
mov
sbb
lock
dec
in
pop
daa
nop
enter
call
pop
in
adc
outs
push
mov
pop
in
ret
shl
cmp
xchg
push
scas
sub
cdq
inc
sub
cmp
jecxz
imul
cdq
hlt
fst
inc
mov
outs
push
mov
loop
ret
mov
jmp
imul
cdq
dec
sub
adc
icebp
adc
ins
loope
mov
lock
cmc
aaa
sbb
dec
sub
shl
sub
popf
in
sbb
popa
stos
icebp
adc
ins
loope
mov
nop
adc
sub
adc
jl
rcl
out
movs
rcl
mov
ins
in
dec
(bad)
call
jmp
mov
icebp
sub
sub
inc
out
icebp
les
out
xor
(bad)
out
dec
sub
mov
mov
sbb
push
mul
out
mov
pushf
jecxz
(bad)
out
dec
sub
shl
sub
out
mov
or
pop
lods
jmp
(bad)
push
mov
ins
or
xchg
cli
iret
dec
(bad)
sbb
scas
xchg
inc
(bad)
out
xor
sbb
les
repnz
mov
(bad)
out
and
(bad)
out
dec
inc
rcr
cmp
adc
jns
sbb
mov
adc
(bad)
out
mov
stc
xchg
lock
cmps
and
imul
dec
inc
ror
cmp
adc
jns
sbb
retf
sbb
dec
(bad)
sub
adc
ins
adc
(bad)
out
mov
jmp
xchg
inc
(bad)
out
mov
scas
xchg
inc
(bad)
out
fucompp
pop
nop
lea
fdiv
sub
pop
xor
out
dec
out
pushf
jecxz
(bad)
out
mov
(bad)
out
push
sub
push
mov
push
xchg
sub
mov
pop
(bad)
out
push
sub
push
mov
mov
outs
(bad)
out
mov
fst
test
out
mov
sub
and
out
xor
(bad)
out
dec
(bad)
sbb
jno
sbb
dec
mov
fdiv
cmps
mov
pop
adc
lods
in
dec
sub
pop
or
mov
mov
mov
fdiv
mov
lods
lods
dec
(bad)
out
imul
sbb
sub
imul
dec
pop
into
popf
xor
(bad)
out
dec
jns
inc
les
sbb
mov
fst
stos
mov
adc
sbb
mov
out
mov
out
pop
(bad)
out
dec
pushf
ror
(bad)
icebp
pop
dec
(bad)
out
jne
nop
push
dec
and
shr
out
cmp
push
adc
retf
sbb
push
sub
inc
dec
mov
sbb
dec
ins
sbb
test
adc
test
out
mov
sbb
mov
sbb
cmp
pop
xor
sbb
mov
cwde
jmp
fstp
adc
lahf
out
dec
ror
dec
(bad)
inc
xchg
xor
imul
dec
sub
adc
(bad)
out
dec
(bad)
sbb
mov
xchg
in
(bad)
out
dec
sub
shl
sub
movs
imul
ins
adc
sub
cmps
and
imul
dec
call
or
int3
push
imul
dec
stos
mov
adc
mov
fdiv
mov
rcl
sub
icebp
mov
push
in
cmp
icebp
iret
dec
(bad)
xchg
test
out
jo
sbb
jo
sbb
cld
aad
fidiv
and
out
xor
imul
dec
test
in
(bad)
out
mov
sbb
(bad)
sbb
jno
sbb
dec
sub
(bad)
rcl
ror
adc
out
cmp
sbb
adc
mov
push
sbb
cmp
xchg
adc
out
cmp
shr
mov
pushf
mov
(bad)
out
and
(bad)
out
dec
sub
cdq
xor
(bad)
out
dec
mov
out
xor
(bad)
out
dec
mov
out
lods
movs
pushf
test
(bad)
out
dec
pushf
(bad)
(bad)
icebp
cmps
lds
sbb
dec
adc
repnz
out
xor
(bad)
out
dec
sub
or
(bad)
out
dec
sub
sub
push
xchg
inc
sbb
dec
call
mov
pop
and
sbb
dec
mov
repnz
(bad)
shl
sub
cmps
and
imul
dec
call
(bad)
(bad)
xor
cmp
sbb
pop
mov
fdiv
mov
or
adc
mov
jno
mov
sbb
mov
pushf
mov
jno
pushf
jo
sub
nop
int3
and
pop
xor
mov
out
pop
sub
mov
sbb
sbb
sub
stc
stos
sub
adc
lods
in
dec
xchg
add
sub
adc
ins
sbb
lods
std
iret
dec
(bad)
fist
mov
mov
outs
(bad)
out
cmp
loopne
test
nop
loopne
rcr
mov
ins
push
cmp
call
cmp
sbb
sbb
fstp
adc
and
jl
sbb
jno
sbb
pop
mov
fdiv
mov
lods
add
xor
pop
pop
das
and
mov
sbb
mov
sbb
xor
out
cmc
sbb
out
dec
ret
inc
ret
xor
imul
dec
sub
cmp
push
cwde
mov
mul
out
ret
rcr
mov
scas
test
mul
out
jo
sbb
dec
(bad)
fist
mov
and
adc
adc
adc
test
sbb
mov
or
adc
test
sbb
mov
sbb
loope
cmps
xor
(bad)
out
dec
and
outs
adc
sbb
lods
jmp
cmc
(bad)
out
dec
(bad)
lods
les
out
(bad)
shl
out
xor
adc
out
dec
sub
xor
fwait
and
imul
dec
call
fdivr
mov
clc
adc
cmp
iret
dec
(bad)
nop
adc
(bad)
pushf
in
(bad)
out
or
imul
dec
sub
out
mov
fst
shl
dec
(bad)
cdq
xchg
inc
(bad)
out
mov
scas
xchg
inc
(bad)
out
fucompp
pop
nop
lea
fdiv
sub
pop
xor
loop
dec
jbe
dec
js
dec
cdq
push
js
inc
cmp
cmp
jg
repz
(bad)
dec
addr16
out
and
sahf
pop
sbb
jmp
or
sub
sti
fsubr
sbb
hlt
and
movs
stos
cmp
adc
imul
push
ins
adc
cmp
outs
push
mov
ins
or
jmp
or
cdq
dec
fdivrp
cdq
hlt
rcl
inc
cmp
dec
inc
out
pop
sbb
mov
inc
dec
test
and
mov
out
idiv
ins
loope
jbe
sbb
jno
sbb
push
ins
adc
cmp
outs
push
mov
imul
(bad)
sbb
jno
sbb
push
ins
adc
cmp
outs
push
mov
ins
add
sahf
pop
sbb
jmp
or
adc
sahf
pop
sbb
jmp
or
cdq
dec
sub
cdq
jbe
rcl
in
cld
xchg
pop
and
jg
hlt
and
cdq
dec
fdivrp
cdq
hlt
rcl
shl
sub
adc
sub
adc
nop
call
xlat
mov
cmc
xchg
lock
adc
mov
loope
dec
mov
sbb
fld
jno
(bad)
push
sbb
xor
adc
jp
inc
sbb
jl
adc
sub
pop
adc
mov
add
cld
sub
out
mov
jae
pop
fsubr
mov
cdq
sub
mov
cli
out
mov
fst
es
adc
out
loopne
inc
cmp
call
jne
push
xor
push
xor
jmp
lock
mov
sbb
inc
into
nop
push
dec
stos
and
adc
sub
lock
fs
sbb
jno
sbb
hlt
rcl
adc
fucom
and
cmp
mov
add
add
sub
out
mov
sbb
(bad)
push
sbb
or
(bad)
cdq
hlt
lds
push
mov
nop
loopne
fst
adc
rcr
mov
pop
xchg
dec
dec
push
xchg
ret
out
fyl2xp1
push
adc
pop
pop
adc
imul
stos
fstp
fbld
mov
out
mov
pop
adc
jb
mov
cmp
jnp
sbb
xor
int
mov
jae
dec
sbb
test
sub
mov
sub
out
test
mov
jle
sub
adc
out
ja
shl
mov
dec
inc
out
push
je
popa
nop
call
xor
xor
adc
fld
jae
fld
icebp
(bad)
fisubr
sbb
cmp
sub
cmp
jg
hlt
lds
adc
push
jb
mov
fidiv
je
xchg
aam
sbb
mov
or
test
adc
sub
mov
sbb
test
inc
jnp
sub
lods
out
sbb
adc
adc
(bad)
outs
adc
cmc
nop
xlat
pop
dec
out
dec
shl
mov
fist
mov
pop
clc
mov
mov
mov
out
and
ins
icebp
inc
cmp
cmc
inc
dec
sbb
(bad)
sub
mov
sub
cdq
ja
out
(bad)
xlat
hlt
xlat
sbb
pop
or
cmps
hlt
xlat
jb
movs
stos
and
adc
sub
lock
mov
sub
jbe
ins
out
push
ins
out
dec
dec
gs
(bad)
shl
sub
int3
xlat
jge
mov
sub
cdq
dec
fdivrp
cdq
hlt
cmc
nop
xlat
pop
mov
jb
movs
mov
pop
adc
cli
xor
mov
(bad)
cdq
hlt
cmc
nop
xlat
xlat
mov
leave
jnp
cmp
add
adc
cmp
stc
inc
fld
push
cmps
hlt
xlat
jb
movs
movs
sbb
adc
inc
ret
dec
icebp
sub
fld
icebp
fild
sbb
mov
adc
(bad)
cwde
push
sbb
out
ja
fnstenv
nop
cmc
xor
ins
inc
out
xchg
mov
je
xlat
or
sbb
dec
sub
shl
sub
dec
pop
adc
clc
jmp
sbb
xor
adc
adc
nop
push
and
sbb
push
mov
push
mov
loope
push
xor
dec
popf
in
dec
clc
mov
shl
call
(bad)
pop
mov
sar
(bad)
call
(bad)
sbb
les
mov
stc
sub
adc
push
add
les
adc
jmp
loope
and
mov
stos
loop
(bad)
and
adc
into
nop
push
and
pop
out
mov
repnz
cmp
add
cmp
movs
cmp
push
dec
es
push
dec
stos
loope
int
cwde
xlat
add
sub
inc
imul
pop
enter
stos
fstp
jmp
cdq
in
repnz
xlat
out
pop
out
mov
repnz
cmp
add
cmp
movs
cmp
push
dec
es
push
dec
stos
loope
int
nop
call
fld
jno
inc
imul
pop
mov
out
dec
stos
fstp
jmp
cdq
in
push
cmps
hlt
xlat
cdq
sub
push
ins
adc
(bad)
push
out
dec
sub
shl
sub
fxtract
call
arpl
(bad)
out
jne
nop
rcl
mov
pop
out
mov
out
mov
sbb
dec
sub
loope
stc
cmp
sbb
xor
and
sub
cmps
hlt
xlat
fist
sub
cmps
hlt
mov
out
dec
sub
fs
es
push
sub
rcr
sub
dec
cmp
dec
fdivrp
cdq
hlt
movs
nop
xlat
xor
lds
jae
cmp
mov
pop
or
adc
in
adc
(bad)
mov
sbb
jbe
sbb
jno
sbb
xor
adc
sub
cdq
jbe
ret
xchg
out
dec
(bad)
repnz
shl
call
and
push
fwait
mov
sbb
jb
shl
mov
pop
adc
jo
mov
dec
inc
or
shl
mov
out
jb
sbb
jno
sbb
jb
ficom
mov
nop
enter
xchg
sub
jmp
cmp
adc
repz
jecxz
dec
ficom
mov
ficom
loope
sbb
cmp
sbb
cmp
call
mov
or
jbe
loope
dec
(bad)
sbb
mov
mov
out
mov
out
jb
pushf
call
fst
adc
mov
icebp
addr16
sub
out
mov
fst
inc
sbb
iret
inc
sbb
call
(bad)
sbb
cmp
out
dec
(bad)
dec
fwait
hlt
and
and
jle
mov
pushf
call
jae
sbb
cmp
lods
dec
(bad)
out
mov
add
icebp
and
out
call
inc
sbb
cmp
xor
cmp
call
es
xchg
icebp
loop
dec
adc
aaa
mov
ins
push
mov
adc
push
sbb
les
push
mov
jns
xchg
dec
(bad)
out
fld
icebp
pop
fldcw
sbb
mov
fst
mov
sbb
out
dec
(bad)
call
movs
mov
dec
(bad)
call
sub
lods
loope
dec
(bad)
mov
out
mov
out
xor
loop
dec
mov
out
dec
movs
pushf
mov
cmp
out
dec
(bad)
dec
clc
arpl
adc
in
adc
out
dec
out
popf
adc
mov
adc
jg
or
out
dec
sub
xchg
adc
sbb
cmp
jmp
imul
out
dec
(bad)
nop
enter
ror
loope
dec
(bad)
xchg
xchg
inc
(bad)
in
loope
pushf
out
dec
xlat
out
pop
push
jne
mov
fstp
lods
loope
dec
(bad)
fist
sub
hlt
xlat
sbb
pop
aaa
push
cmps
hlt
xlat
nop
shl
(bad)
xchg
test
lea
xlat
(bad)
pop
out
mov
sahf
mov
dec
aam
sub
retf
mov
adc
(bad)
in
call
jbe
lods
jmp
dec
(bad)
lock
sub
out
mov
fst
shl
mov
and
out
cmp
sbb
cmp
cwde
out
popa
sbb
mov
(bad)
xchg
push
mov
jns
aaa
inc
(bad)
out
fld
icebp
jecxz
sub
cdq
imul
push
out
dec
(bad)
icebp
out
sub
fwait
int3
and
xchg
inc
(bad)
out
mov
sub
adc
out
pop
out
mov
repnz
mov
mov
out
and
(bad)
jg
hlt
xlat
push
cmps
hlt
xlat
and
int
cwde
jecxz
sbb
xlat
out
pop
out
mov
repnz
mov
mov
out
and
(bad)
jg
hlt
xlat
push
cmps
hlt
xlat
push
cmps
and
out
dec
adc
ins
push
ficom
sub
sti
nop
es
push
dec
es
test
out
cmp
sbb
cmp
out
xor
(bad)
jg
hlt
xlat
push
cmps
hlt
xlat
and
int
push
cmps
xor
out
dec
sub
xor
out
dec
mov
pushf
test
out
jb
ficom
mov
xchg
xchg
dec
(bad)
out
ja
sbb
dec
xlat
out
fld
jno
inc
imul
xor
out
dec
jns
xor
(bad)
out
jne
and
dec
sub
fs
aad
adc
sub
pop
mov
mov
pushf
jecxz
xlat
out
mov
xlat
out
fld
pushf
out
dec
xlat
out
pop
int3
lods
out
dec
stos
fstp
(bad)
out
mov
popf
mov
sub
pop
pop
lods
jmp
fstp
cmp
out
dec
(bad)
dec
clc
setl
out
xor
adc
adc
inc
jg
xor
out
dec
dec
nop
push
dec
ret
push
ins
out
push
mov
nop
rcr
(bad)
out
dec
mov
in
xlat
(bad)
pop
out
mov
sahf
mov
dec
xlat
out
and
out
dec
adc
ins
jnp
scas
xchg
inc
(bad)
out
mov
loope
dec
(bad)
jg
xor
out
dec
rcr
(bad)
mov
out
mov
out
jb
pushf
jecxz
xlat
out
pop
push
out
dec
(bad)
sbb
jno
sbb
xor
out
dec
sub
adc
pop
adc
push
lods
jmp
dec
(bad)
adc
iret
fist
mov
pushf
jecxz
xlat
out
xor
loop
dec
es
xchg
inc
(bad)
out
loope
mov
repz
loope
jmp
aam
mov
out
dec
push
sbb
inc
retf
and
jmp
dec
sub
pop
xor
es
xchg
inc
(bad)
out
icebp
jns
mov
xor
out
dec
jns
mov
jne
nop
xlat
xlat
mov
out
pop
out
adc
(bad)
out
mov
out
mov
adc
xor
out
dec
dec
nop
xchg
inc
(bad)
out
mov
xlat
out
xor
(bad)
sbb
push
ins
out
cmp
(bad)
call
sub
out
call
xlat
xchg
lods
mov
out
dec
jle
cmps
or
out
dec
movs
movs
sub
out
icebp
js
sub
cmp
ficomp
push
lods
jmp
dec
(bad)
push
cmps
and
out
dec
es
pop
dec
add
popf
cmc
cmp
jbe
lods
jmp
dec
(bad)
push
cmps
xor
out
dec
adc
mov
(bad)
out
ja
sbb
dec
xlat
out
xor
test
push
sbb
inc
retf
and
jecxz
cmp
lock
out
or
loop
dec
sub
xchg
or
out
fld
jno
inc
imul
xor
out
dec
jns
cmps
add
out
jne
nop
xlat
xlat
mov
out
jb
sbb
mov
scas
xchg
inc
(bad)
out
mov
out
mov
push
pop
push
lods
in
out
dec
(bad)
fist
sub
xor
out
xor
nop
xchg
dec
(bad)
out
dec
sub
shl
sub
out
icebp
jns
xchg
dec
(bad)
out
loope
pushf
mov
pop
sub
mov
sbb
fstp
cmp
out
dec
(bad)
dec
clc
(bad)
call
jbe
nop
ins
dec
xchg
and
sub
repz
sar
(bad)
out
mov
sub
ins
out
pop
repz
mov
nop
ins
out
and
(bad)
xchg
test
out
dec
es
push
dec
mov
out
mov
gs
fld
jno
inc
imul
xor
out
dec
jns
mov
and
fs
cmp
sub
cmp
push
cmps
hlt
xlat
and
dec
sub
fs
sbb
fistp
mov
lods
sbb
dec
xlat
out
pop
mov
sbb
out
call
(bad)
out
cmp
out
repz
rcr
push
cmps
hlt
xlat
push
cmps
and
out
dec
mov
lea
cmp
out
dec
ins
out
push
ins
out
and
out
dec
imul
int
jae
fldenv
pushf
out
dec
xlat
out
pop
ins
stos
out
dec
stos
fstp
out
jg
int3
xlat
mov
out
mov
out
jb
scas
push
dec
adc
out
mov
ins
jae
(bad)
pop
out
fld
jno
inc
imul
push
ins
out
xor
(bad)
dec
clc
mov
out
xor
adc
adc
mov
out
inc
lea
pop
push
ins
out
push
mov
nop
shl
(bad)
out
dec
mov
out
xlat
(bad)
pop
out
mov
mov
pop
sub
leave
popf
cmp
out
dec
stos
shr
icebp
test
loopne
xor
out
dec
(bad)
sbb
jno
sbb
movs
pushf
out
dec
xlat
out
cmp
shr
dec
(bad)
dec
clc
(bad)
dec
sbb
xor
adc
cdq
xor
loop
dec
mov
out
jb
pushf
(bad)
dec
aad
adc
sub
inc
imul
xor
out
dec
jns
dec
add
out
jne
and
dec
sub
fs
inc
sbb
fistp
cmp
out
dec
(bad)
dec
clc
repz
out
xor
adc
out
dec
(bad)
sbb
inc
call
(bad)
out
loope
cmp
aam
adc
out
mov
ins
sbb
cmc
out
dec
(bad)
sbb
mov
out
pop
(bad)
in
cmp
fucomp
dec
(bad)
dec
popf
xor
loop
dec
jns
xchg
dec
(bad)
out
loope
ins
sbb
in
out
dec
stos
fld
lods
icebp
out
dec
(bad)
call
xlat
ins
jno
xchg
icebp
out
dec
(bad)
out
cmps
inc
mov
mov
xchg
xchg
dec
(bad)
out
loope
ins
sbb
push
adc
fimul
sub
out
dec
pop
push
js
sub
adc
out
dec
(bad)
dec
out
les
icebp
ret
sbb
mov
jns
xchg
inc
(bad)
out
fld
icebp
pop
shr
sbb
jb
sbb
jno
sbb
dec
sub
xchg
xor
sub
loope
pushf
out
dec
xlat
out
pop
js
out
dec
stos
fstp
lods
loope
dec
(bad)
nop
enter
xchg
xor
jecxz
cmp
xchg
popf
ins
shl
out
xor
out
xor
xchg
movs
dec
(bad)
out
mov
loope
dec
(bad)
cdq
sub
adc
and
loope
lods
aam
aad
clc
ror
adc
in
adc
jmp
stos
shr
icebp
test
loopne
jbe
ficom
mov
loope
dec
(bad)
nop
enter
sar
(bad)
(bad)
call
sub
pushf
out
dec
(bad)
sbb
mov
dec
popf
or
out
dec
jle
ins
inc
imul
or
loop
dec
jle
xchg
sub
xchg
jne
out
and
das
jae
fld
icebp
and
sub
fwait
int3
and
cmp
fidiv
lods
shr
(bad)
sbb
mov
aad
inc
pop
xchg
inc
adc
xchg
ret
out
dec
(bad)
xchg
xchg
pop
(bad)
in
cmp
add
shr
(bad)
dec
fwait
hlt
and
pusha
mov
imul
(bad)
out
xor
fs
inc
lea
mov
xchg
xchg
dec
(bad)
out
loope
ins
sbb
pop
adc
ret
mov
out
and
ins
adc
push
imul
adc
sub
ret
out
sub
cdq
imul
loop
dec
mov
out
jb
movs
cld
dec
aad
adc
jno
adc
cmp
sub
cmp
xchg
popf
ins
shl
out
xor
out
xor
jae
loope
movs
int
shl
inc
cmp
(bad)
sub
sbb
dec
stos
movs
nop
dec
shl
out
les
icebp
outs
in
sub
sub
les
jp
mov
fst
xchg
loope
sbb
les
jno
aad
sbb
inc
sbb
cmps
dec
sbb
loope
cmp
lods
pop
(bad)
in
mov
popf
inc
inc
(bad)
out
mov
fst
mov
ficomp
dec
stos
shr
icebp
test
loopne
mov
xchg
lods
add
loop
out
sbb
icebp
shr
sub
cdq
xor
loop
dec
stos
movs
nop
dec
shl
out
mov
(bad)
icebp
out
sub
sub
mov
(bad)
jae
pop
push
jnp
mov
fst
mov
adc
sub
movs
dec
(bad)
out
cmp
out
dec
(bad)
dec
fwait
hlt
and
pusha
mov
ins
dec
mov
nop
xchg
sbb
loop
dec
sub
shl
sub
scas
inc
(bad)
out
pop
jb
adc
pushf
mov
aad
xor
sti
add
dec
js
dec
cdq
push
xchg
add
or
sub
inc
out
mov
xchg
jb
push
adc
imul
imul
mov
adc
mov
out
dec
(bad)
sbb
dec
sub
adc
out
pushf
in
dec
aam
adc
sub
adc
in
fst
adc
mov
sbb
adc
in
dec
(bad)
sbb
mov
fst
inc
sbb
sbb
adc
inc
sbb
(bad)
sbb
cmp
out
dec
(bad)
dec
fwait
hlt
and
pusha
mov
lea
sub
dec
mov
nop
(bad)
cmp
rol
add
xchg
dec
(bad)
in
ret
or
or
ins
adc
push
imul
push
mov
inc
sbb
pop
jne
adc
(bad)
shl
sub
sbb
ins
adc
cmp
push
imul
push
mov
inc
sbb
iret
jne
adc
ror
mov
cli
cdq
xor
out
dec
mov
out
jecxz
out
xchg
sub
movs
test
pop
xchg
sub
fs
sub
pop
xor
out
dec
mov
pop
sbb
sar
dec
(bad)
inc
xchg
or
out
dec
sub
ins
adc
dec
mov
(bad)
shl
sub
pop
xor
adc
sub
pop
push
lods
in
dec
(bad)
adc
mov
sub
out
pop
es
xchg
mov
out
dec
mov
loop
not
fs
int
nop
enter
xchg
push
(bad)
loop
cmp
sub
pop
es
xchg
mov
out
dec
mov
in
mul
scas
xchg
dec
(bad)
in
mov
test
pushf
in
dec
aam
cdq
dec
sub
call
xchg
xchg
movs
xlat
out
dec
outs
and
push
clc
pop
push
lods
in
dec
(bad)
sbb
mov
pushf
in
dec
aam
adc
sub
fwait
hlt
aad
xchg
mov
out
dec
sub
adc
xor
lods
inc
sbb
fstp
cmp
out
dec
(bad)
dec
clc
cmp
adc
adc
sub
daa
mov
sbb
inc
mov
xchg
dec
(bad)
in
loope
jno
dec
(bad)
nop
xlat
or
push
adc
int
in
dec
mov
push
repz
loope
pop
mov
test
aad
xchg
dec
(bad)
out
mov
dec
sub
les
or
out
dec
ret
push
lods
in
dec
(bad)
nop
jmp
out
dec
mov
in
mul
scas
xchg
dec
(bad)
in
mov
in
jbe
rcr
lods
in
dec
(bad)
sbb
dec
nop
xchg
dec
(bad)
in
pop
and
outs
call
cdq
jb
ins
in
cmp
out
dec
(bad)
dec
popf
xor
out
dec
jns
arpl
sub
out
(bad)
aad
xchg
dec
(bad)
out
loope
pop
dec
mov
out
and
sub
inc
imul
xor
out
dec
jns
mov
(bad)
out
jne
and
dec
sub
gs
mov
out
jb
sbb
(bad)
aad
xchg
dec
(bad)
in
loope
pop
sbb
icebp
out
jmp
leave
out
dec
stos
loope
les
icebp
sub
sub
sub
les
jae
pop
in
inc
adc
ins
adc
push
imul
adc
inc
adc
fstp
cmp
in
dec
(bad)
dec
clc
xchg
and
xor
adc
sahf
std
sub
xchg
dec
(bad)
out
mov
or
jnp
sbb
cmp
out
adc
push
mov
pop
mov
popf
and
lea
gs
adc
pop
das
pop
sub
aad
stc
ja
sub
dec
xlat
out
cmp
sub
cmp
xchg
xchg
mov
out
dec
jns
dec
out
sub
cdq
xor
out
dec
inc
sbb
fstp
cmp
out
dec
(bad)
dec
clc
sbb
cwde
sti
sbb
sbb
fld
jno
inc
imul
xor
out
dec
jns
lahf
sbb
out
jne
nop
xchg
pop
(bad)
in
xor
out
mov
ins
or
lods
loope
dec
(bad)
xchg
inc
dec
add
adc
icebp
adc
lods
loope
dec
(bad)
repnz
lods
loope
dec
(bad)
xchg
inc
dec
add
popa
stos
icebp
adc
lods
loope
dec
(bad)
out
and
cmp
enter
xchg
push
(bad)
in
cmp
xchg
push
dec
sub
mov
ins
in
cmp
out
dec
(bad)
dec
fwait
hlt
and
and
dec
adc
aad
xchg
dec
(bad)
ins
push
pop
int3
dec
adc
sub
dec
icebp
jg
sub
dec
pop
loopne
push
dec
sub
jg
sbb
cmp
repz
adc
pop
mov
out
dec
xchg
enter
out
repz
shr
ja
fnstenv
nop
cmc
loop
dec
fwait
les
nop
push
mov
jne
xlat
and
sub
shl
sub
int3
cmp
test
imul
pop
push
inc
adc
shr
call
int3
cmp
push
pop
imul
pop
dec
inc
adc
fcomp
sub
sub
sub
cmp
add
inc
mov
cwde
xlat
add
adc
ja
dec
jb
nop
cmc
xor
or
inc
out
ret
push
dec
cwde
(bad)
pop
jge
adc
sub
shl
sub
or
cmp
out
idiv
lods
cmc
in
dec
(bad)
nop
(bad)
pop
rol
xchg
retf
cmp
jo
repz
fsubr
scas
add
cdq
popa
jo
xlat
xor
pop
cdq
dec
mov
out
inc
sub
cdq
ja
pop
out
mov
aaa
clc
pop
jne
adc
cli
push
jb
js
rol
fsubr
mov
loopne
cwde
jecxz
shr
fist
mov
out
dec
test
pop
out
lea
outs
(bad)
push
out
dec
(bad)
sbb
retf
jne
adc
jmp
shl
sub
out
dec
sbb
xchg
mov
out
and
popf
xor
out
dec
jns
lock
js
(bad)
pop
adc
loop
dec
(bad)
dec
clc
jmp
sbb
fld
jae
fld
jae
fld
jno
mov
pop
popf
xor
in
dec
jns
pop
call
fucom
out
dec
(bad)
ins
sbb
call
icebp
cmp
sub
cdq
inc
sub
cdq
ja
sbb
dec
jns
adc
jecxz
adc
in
in
dec
(bad)
icebp
xchg
sub
out
add
in
dec
rcr
mov
out
and
inc
fdivr
repz
loope
std
dec
mov
cwde
(bad)
ins
arpl
adc
loop
dec
(bad)
dec
js
(bad)
pop
adc
out
dec
(bad)
dec
js
sub
nop
pop
ins
sbb
mov
sbb
jno
sbb
(bad)
pop
adc
pushf
not
movs
pushf
out
dec
(bad)
out
fldcw
sbb
xor
cmp
mov
nop
loopne
fst
(bad)
repz
pop
imul
mov
sbb
mov
fld
inc
fnstenv
nop
cmc
xor
adc
movs
xchg
add
rcr
xlat
mov
sbb
dec
sub
shl
sub
xlat
xor
cmp
loope
cmp
in
fld
jno
mov
sbb
inc
sbb
(bad)
ins
sbb
pop
adc
div
adc
rcr
call
xor
out
xor
nop
push
dec
(bad)
ins
call
mov
ins
add
in
push
adc
shr
idiv
ins
in
fwait
hlt
fst
clc
cmps
jae
adc
ja
fnstenv
nop
cmc
loopne
dec
inc
out
ins
sbb
cmc
jl
popf
xchg
pop
arpl
ins
in
jbe
sub
sub
idiv
ins
loope
jbe
out
mov
dec
jp
shr
sub
push
xor
nop
xlat
pop
daa
cdq
sub
jne
pop
ja
adc
(bad)
sbb
jbe
dec
js
dec
cdq
push
js
inc
out
adc
push
sbb
cmp
sub
cmp
jae
fldcw
sbb
js
sub
ror
adc
xchg
adc
out
call
ret
dec
sub
cdq
jbe
sbb
inc
sbb
jl
adc
aad
out
les
out
mov
sub
inc
pop
ror
sbb
push
pop
and
push
dec
mov
fiadd
int3
call
ins
dec
pop
cli
mov
fidivr
inc
cdq
adc
sub
fldcw
sbb
xor
ins
sbb
dec
adc
(bad)
ins
or
push
adc
push
mov
shr
mov
(bad)
cdq
hlt
fst
dec
fld
dec
clc
jecxz
sbb
cmp
call
push
pop
in
cmp
out
idiv
ins
in
cdq
jbe
sbb
mov
ins
jmp
call
(bad)
(bad)
(bad)
aad
clc
xlat
jg
adc
(bad)
mov
mov
dec
clc
idiv
cmp
mov
loope
dec
mov
rcl
in
cld
inc
loope
dec
inc
push
xor
xchg
mov
sbb
inc
into
nop
push
dec
mov
cdq
adc
sub
fldcw
sbb
jno
ins
sbb
dec
adc
(bad)
ins
adc
jmp
jae
fld
dec
clc
fwait
jg
adc
shr
call
mov
(bad)
pop
nop
lea
sbb
mov
dec
in
jecxz
out
mov
sub
jp
movs
pop
in
loope
sbb
fistp
out
ins
inc
mov
dec
clc
pop
jge
adc
(bad)
sub
sub
dec
out
jb
shl
mov
dec
inc
out
dec
dec
mov
ror
adc
out
pop
repnz
call
sub
ins
inc
movs
sub
push
imul
mov
sbb
inc
mov
adc
push
or
les
jg
hlt
retf
add
cmp
push
imul
cmp
icebp
sbb
cmp
push
cmps
hlt
(bad)
push
cmps
cmc
sub
xchg
jno
sbb
test
sbb
cdq
imul
je
mov
fs
mov
enter
push
cmps
icebp
sub
xchg
jb
je
mov
scas
push
dec
es
push
mov
call
push
out
les
nop
enter
shl
inc
out
xor
(bad)
clc
xchg
push
mov
jl
pop
push
cmp
rcr
je
mov
push
cmps
in
push
mov
or
cli
cdq
hlt
cmc
nop
sar
fs
cdq
jns
pop
cld
mov
enter
sub
ins
adc
fwait
in
push
cmps
jecxz
xor
mov
xchg
adc
int
push
mov
mov
dec
sbb
mov
pop
les
jmp
imul
nop
shr
ja
fnstenv
nop
cmc
xor
pop
inc
out
xchg
dec
mov
push
fstp
xor
lock
(bad)
hlt
(bad)
sbb
(bad)
iret
pop
adc
cmp
adc
rcl
inc
dec
movs
lds
push
div
sub
jecxz
movs
fidivr
inc
div
sub
jecxz
test
call
xor
jle
cmps
push
push
dec
sub
fdivr
ins
fucom
aam
nop
push
jno
pop
call
pop
aas
xchg
adc
ins
or
les
cdq
push
dec
sub
out
adc
push
out
add
int
gs
bound
mov
pop
out
shl
mov
ins
or
mov
sub
(bad)
(bad)
sub
out
rcl
call
mov
sbb
mov
inc
pop
pop
push
xor
xor
pop
gs
pop
out
mov
scas
push
mov
fist
mov
adc
xor
pop
ins
mov
pop
out
mov
je
stos
or
adc
push
rol
and
loope
les
push
cmps
repnz
mov
sbb
les
push
cmps
mov
out
adc
push
sub
sub
cwde
jge
xor
adc
test
fwait
pop
dec
(bad)
out
hlt
fcomp
sti
cmps
mov
in
sub
cmp
gs
pop
out
mov
adc
int3
fcomp
bound
inc
ins
mov
out
jne
mov
loope
pop
sub
mov
sbb
test
scas
push
dec
jbe
dec
js
jns
and
or
mov
sbb
lds
mov
and
mov
and
mov
and
mov
and
mov
mov
mov
or
cmp
cwde
mov
mov
and
mov
and
mov
and
mov
dec
(bad)
fidiv
mov
icebp
adc
mov
xchg
sub
adc
mov
mov
and
mov
mov
stos
ficom
mov
mov
and
mov
and
mov
and
call
push
mov
ficom
or
sub
push
mov
jmp
jmp
or
or
mov
mov
and
mov
and
sbb
and
mov
and
mov
and
mov
and
mov
lds
mov
and
mov
mov
call
jnp
and
mov
cmp
mov
and
mov
and
mov
and
mov
and
cmp
cwde
mov
mov
and
mov
and
in
jb
dec
cdq
push
stos
cmc
or
jg
fwait
hlt
and
mov
cdq
imul
cli
cdq
hlt
fst
xlat
hlt
fstp
adc
sbb
mov
pop
sbb
aad
out
call
(bad)
nop
enter
push
pop
mov
sbb
out
pop
out
mov
xor
iret
jp
adc
ins
icebp
test
push
sbb
push
sbb
mov
scas
inc
dec
mov
out
jmp
pop
mov
jmp
dec
mov
pop
sub
pop
or
into
pop
or
icebp
es
add
jecxz
add
ins
adc
pop
sub
sbb
les
xchg
push
mov
lahf
or
pop
fs
jnp
or
jb
adc
sub
adc
out
inc
pop
les
mov
scas
push
dec
jns
push
mov
ins
out
pop
pop
jl
adc
icebp
xlat
jecxz
sbb
movs
pop
out
mov
dec
clc
pop
jnp
adc
in
cmp
cdq
hlt
int
shl
out
pop
jbe
ins
in
pop
push
ins
adc
xchg
mov
ja
fnstenv
nop
cmc
xor
sub
jle
xchg
pop
sbb
cdq
ja
test
sub
inc
cmp
out
cli
mov
fsubr
mov
jecxz
shr
fistp
les
popf
div
sub
gs
sub
adc
(bad)
mov
mov
xchg
push
push
jns
gs
(bad)
call
es
cs
sbb
pop
push
not
push
sub
push
mov
or
adc
(bad)
push
cdq
int3
shl
push
mov
dec
pop
pop
push
not
push
sub
and
inc
call
mov
call
jle
repz
sbb
inc
sbb
push
imul
hlt
ror
js
adc
in
add
cmp
cmps
test
or
sub
cdq
imul
mov
repz
add
ins
in
adc
sbb
push
imul
hlt
aad
leave
adc
pop
call
mov
loope
movs
mov
push
mov
or
mov
pop
call
repz
adc
mov
push
sub
inc
mov
xchg
ins
imul
push
cmps
arpl
sti
add
iret
pop
adc
dec
adc
je
adc
sahf
out
jae
scas
ret
or
data16
sbb
ja
pop
js
iret
pop
adc
icebp
sbb
loope
adc
sub
div
sub
xchg
ja
inc
adc
fst
adc
sub
sbb
mov
call
adc
lock
cdq
hlt
fptan
or
icebp
sbb
mov
sbb
mov
mov
call
imul
mov
call
adc
call
div
sub
cmps
in
enter
mov
mov
mov
cmp
mov
call
cmp
sbb
mov
retf
xchg
add
(bad)
call
mov
sbb
pop
sub
inc
icebp
or
mov
call
jns
xchg
dec
(bad)
out
jne
nop
loopne
fst
adc
sub
fld
jno
mov
pop
out
les
icebp
aaa
cld
sub
cdq
hlt
int
(bad)
sub
sbb
fld
xchg
push
pop
jns
gs
jp
gs
rcl
mov
out
push
shl
mov
cwde
(bad)
lods
sub
adc
shl
icebp
jbe
dec
js
dec
cdq
push
js
scas
push
push
dec
xor
in
mov
call
pop
pop
cdq
dec
sub
cdq
jbe
pop
sbb
stc
stos
push
mov
pop
sub
pop
push
adc
sub
xlat
cmp
in
fld
jno
add
js
push
pop
adc
sub
pop
push
push
adc
sub
dec
js
dec
cdq
push
js
scas
xor
cmp
shl
call
mov
es
mov
stc
stos
push
mov
fstp
sub
hlt
xlat
sbb
pop
inc
cwde
out
sbb
adc
jmp
xchg
add
xor
push
cmps
hlt
xlat
jo
xchg
sub
adc
cmp
test
sub
and
rcl
hlt
xlat
jo
xchg
sub
adc
cmp
test
sub
fs
scas
push
dec
inc
fnstenv
mov
sbb
mov
ins
add
sub
hlt
xlat
push
cmps
hlt
xlat
call
and
pop
mov
cwde
xlat
push
inc
sbb
xor
test
sub
dec
js
dec
cdq
push
js
test
cmp
sub
cmp
call
pop
sbb
jns
repnz
mov
repnz
jmp
xchg
add
xor
push
cmps
hlt
xlat
repnz
(bad)
pop
out
mov
shr
ins
data16
pop
call
dec
loopne
inc
cmp
dec
inc
loop
dec
fwait
int3
and
dec
cdq
inc
fdivrp
cdq
hlt
rcl
inc
pop
lods
push
adc
push
or
lds
xlat
hlt
xlat
sbb
pop
aas
push
cmps
hlt
xlat
cdq
sub
push
ins
sbb
sub
pop
out
out
in
pop
mov
push
cmps
in
xlat
and
int
cwde
out
jg
adc
test
dec
inc
fnstcw
push
mov
icebp
and
sub
xchg
jne
repnz
xlat
out
pop
out
mov
repnz
mov
adc
push
cmps
hlt
xlat
fist
push
jg
hlt
xlat
dec
clc
pop
bound
adc
jmp
cmp
push
cmps
hlt
xlat
push
nop
lea
ss
popa
fist
sub
jmp
scas
and
push
xor
xor
sub
adc
and
and
pop
adc
sub
dec
pop
adc
xor
xor
adc
adc
sub
xchg
stc
sub
cdq
dec
sub
cdq
jbe
inc
shl
mov
dec
inc
out
(bad)
push
sbb
cwde
jmp
cmc
add
sbb
adc
imul
dec
sub
cdq
jbe
pop
sub
sbb
test
sub
aaa
cld
sub
jp
inc
sbb
shl
mov
mov
xchg
aam
sbb
inc
into
nop
push
push
mov
jmp
pop
push
jmp
sbb
cmp
jg
in
jae
cmp
jmp
mov
imul
sbb
mov
sub
test
stos
push
mov
gs
mov
jae
fld
xchg
push
inc
jns
scas
std
sub
xchg
jne
nop
call
cmp
cmc
inc
cmp
jmp
mov
hlt
sub
cdq
ja
div
sub
xchg
dec
(bad)
push
xchg
cmp
nop
in
dec
mov
ins
dec
fsubr
cmp
mov
xchg
add
cmp
loope
jbe
pop
clc
loope
sbb
or
adc
imul
fnstenv
sbb
shr
repz
sbb
fldenv
push
mov
fidiv
mov
sbb
mov
pop
add
sub
xchg
jne
repnz
out
cdq
push
mov
jae
fld
xchg
push
inc
jns
pop
std
sub
xchg
jne
nop
call
push
mov
out
out
ja
fnstenv
nop
cmc
xor
adc
mov
dec
inc
out
mov
dec
ins
sbb
cmp
jno
dec
popf
xor
out
dec
jns
pop
std
sub
xchg
jne
nop
call
ja
out
pop
aaa
push
cmps
hlt
(bad)
cdq
lods
mov
out
dec
add
pop
out
ja
sbb
dec
(bad)
out
xor
cmp
out
dec
(bad)
dec
clc
(bad)
adc
out
gs
sub
sbb
dec
jns
xlat
daa
(bad)
out
ja
nop
movs
dec
xlat
out
fld
pop
pop
imul
xor
out
dec
jns
mov
ja
nop
movs
dec
xlat
out
xor
dec
add
sub
cmps
xor
out
dec
out
popf
adc
mov
scas
xchg
dec
xlat
out
ja
sbb
dec
(bad)
out
cmp
sub
cmp
xchg
xchg
dec
xlat
out
loope
ins
sbb
jl
adc
(bad)
out
push
mov
xchg
push
mov
arpl
adc
jmp
cmp
sbb
cmp
xchg
xchg
dec
xlat
out
mov
(bad)
out
cmc
cmp
inc
pop
in
push
adc
jmp
mov
(bad)
out
pop
pushf
loopne
dec
(bad)
push
cmps
inc
call
push
cmps
jbe
inc
dec
js
dec
cdq
push
test
sbb
sub
inc
out
cmps
sbb
xchg
test
out
idiv
lods
loope
dec
(bad)
nop
xlat
cmp
mov
ins
sub
sub
loope
pop
sbb
jns
sbb
out
jne
mov
out
mov
out
jbe
pushf
in
dec
(bad)
out
pop
add
adc
xlat
out
mov
and
movs
pushf
in
dec
(bad)
out
cmp
jno
dec
clc
jp
out
dec
pop
adc
out
dec
jns
push
pop
imul
xor
out
dec
jns
inc
sti
sub
xchg
jne
nop
call
cmp
in
dec
(bad)
dec
clc
jae
sbb
cmp
nop
shl
retf
dec
sub
fcmove
sti
pusha
retf
sub
out
dec
jp
xor
sub
jp
inc
cdq
adc
sub
fldcw
sbb
xor
inc
pop
cld
pop
adc
sub
cdq
jbe
out
les
jno
pop
imul
cmp
adc
sub
mov
pop
adc
je
out
add
push
mov
nop
call
pop
xchg
call
fld
dec
clc
jecxz
sbb
loope
sub
repz
loop
lods
pop
mov
call
mov
out
dec
jns
sub
sub
jp
jns
lods
dec
xlat
out
out
sbb
icebp
aas
repnz
inc
pop
fs
adc
jmp
mov
sbb
xchg
jmp
call
mov
nop
xlat
cmp
mov
ins
and
sub
loope
pop
sbb
jns
mov
(bad)
out
jne
cwde
xlat
jecxz
sbb
cmp
in
dec
(bad)
dec
clc
arpl
adc
sbb
dec
(bad)
out
pop
adc
cmp
in
dec
(bad)
dec
fwait
hlt
and
pusha
dec
(bad)
out
les
out
loope
pop
(bad)
repz
loope
in
mov
call
sub
jp
movs
pushf
in
dec
(bad)
out
pop
dec
pop
adc
movs
pushf
in
dec
(bad)
out
(bad)
push
mov
pushf
call
pop
loopne
adc
rcr
call
dec
aam
out
loope
dec
push
mov
jae
loope
lods
call
cmp
xchg
pop
push
mov
repnz
adc
push
mov
sub
sub
loope
and
repz
clc
xchg
imul
xor
pop
das
mov
inc
dec
js
dec
cdq
push
test
sbb
sub
inc
out
mov
call
inc
xlat
out
cmp
jae
cmp
in
dec
(bad)
dec
fwait
hlt
and
mov
(bad)
out
dec
sbb
cdq
jbe
ins
sbb
lods
in
dec
(bad)
dec
js
(bad)
pop
adc
in
dec
(bad)
dec
clc
xchg
popa
sbb
xor
add
out
dec
jns
xchg
sub
cdq
xor
out
dec
mov
call
clc
test
dec
xlat
out
out
in
push
mov
call
pop
sub
out
dec
jns
xlat
cmc
sub
sbb
inc
js
(bad)
pop
adc
pop
adc
xor
push
mov
ins
sbb
icebp
jae
sub
cdq
dec
add
cdq
jbe
dec
popf
xor
out
dec
jns
jnp
sub
sbb
cmp
adc
pop
adc
xor
push
mov
ins
sbb
icebp
aas
lock
cdq
dec
sub
cdq
jbe
cmp
(bad)
pop
adc
pop
adc
cmp
push
mov
ins
sbb
icebp
sbb
sub
xchg
inc
add
mov
inc
fnstenv
nop
cmc
xor
or
inc
out
mov
and
(bad)
mov
nop
(bad)
fld
xchg
xchg
inc
xlat
out
loope
pop
sbb
jmp
loope
dec
mov
pushf
loopne
(bad)
out
ja
ins
sbb
lods
in
out
dec
(bad)
dec
js
(bad)
pop
adc
in
out
dec
(bad)
dec
clc
mov
sbb
xor
add
out
dec
jns
repz
cdq
jbe
fist
mov
or
push
jnp
test
out
jecxz
rcl
jae
fldcw
sbb
inc
sbb
sub
push
cmp
in
out
dec
(bad)
dec
clc
cmp
adc
ins
in
dec
(bad)
ins
and
cmp
push
mov
pop
push
mov
jae
loope
or
repz
clc
mov
adc
sbb
mov
rol
mov
out
idiv
lods
cmc
out
dec
(bad)
nop
(bad)
fldcw
not
ror
loope
sbb
repz
clc
mov
sub
clc
push
imul
cmp
jae
fldcw
cdq
adc
(bad)
imul
mov
sbb
inc
iret
nop
xchg
pop
xlat
out
cmp
adc
lds
out
dec
pop
sbb
mov
ror
loop
ins
in
pop
sbb
ret
hlt
and
pusha
mov
and
mov
cwde
(bad)
addr16
sbb
(bad)
hlt
push
mov
adc
inc
out
std
repz
clc
aas
push
sbb
loop
popa
push
mov
out
dec
sar
sub
adc
ja
fnstenv
nop
cmc
xor
or
inc
out
inc
sbb
dec
dec
ror
mov
fisub
dec
mov
cdq
sub
movs
pushf
in
(bad)
out
cmp
loope
call
aam
test
imul
out
dec
jns
pslld
sbb
xor
(bad)
sbb
pop
popf
xor
out
dec
jns
enter
inc
pop
xchg
out
out
dec
mov
pushf
cld
dec
(bad)
out
jbe
ins
sbb
lods
in
out
dec
(bad)
dec
js
(bad)
pop
adc
in
out
dec
(bad)
dec
clc
(bad)
ins
sbb
xor
add
adc
sub
fldcw
sbb
xor
inc
pop
les
mov
pop
call
pushf
inc
or
repz
mov
sub
jp
jns
add
sbb
add
cs
mov
out
mov
out
jbe
mov
adc
sbb
retf
imul
fld
dec
js
(bad)
pop
adc
icebp
arpl
add
cdq
jbe
sbb
pop
ins
pop
adc
movs
pop
in
loope
sbb
(bad)
shl
xchg
lock
cdq
dec
fdivrp
cdq
xor
out
dec
mov
sbb
sbb
(bad)
aad
out
ret
cmp
sub
cdq
jbe
fucomp
ret
mov
sub
js
les
pop
and
mov
sbb
fcomip
push
mov
sub
mov
sbb
cmp
out
idiv
lods
cmc
out
dec
(bad)
nop
xlat
out
stc
push
mov
out
dec
rcl
jmp
xor
sbb
loop
dec
stos
popf
sbb
push
or
adc
pop
in
dec
mov
and
mov
movs
ins
dec
xlat
out
test
adc
mov
ret
mov
jno
pop
imul
aas
push
dec
js
les
cmp
xchg
popf
sub
cmp
popa
in
dec
(bad)
dec
fwait
hlt
and
xor
(bad)
out
jne
cwde
sti
fisub
adc
push
adc
xchg
leave
aam
out
loope
sti
std
repz
loope
mov
aam
ret
les
out
loope
pop
(bad)
repz
loope
popf
push
mov
call
sub
xchg
int3
and
int
repz
pop
lock
jp
jns
les
fwait
int3
and
addr16
in
mov
repnz
ja
test
popf
xor
out
dec
jns
xchg
leave
aam
out
loope
inc
cs
nop
xchg
sbb
push
adc
adc
es
mov
xor
out
dec
jns
xchg
jne
out
loope
add
mov
cwde
sti
mov
sbb
cmp
cmc
out
dec
(bad)
dec
pop
push
lods
mov
pop
push
lods
mov
pop
push
lods
scas
out
dec
(bad)
dec
pop
push
xchg
stos
out
dec
(bad)
fdiv
mov
movs
sub
out
lods
lock
(bad)
out
or
out
dec
stos
inc
cmp
out
mov
mov
jb
rcl
out
xchg
mov
repz
out
mov
aam
mov
ficomp
dec
jns
aaa
icebp
sub
jp
jns
lods
add
out
out
sbb
sbb
adc
fldz
dec
(bad)
dec
out
add
out
dec
ror
mov
sub
adc
test
popf
xor
out
dec
jns
pop
mov
sbb
dec
jns
cmps
xor
out
dec
jns
cmps
xor
out
dec
jns
cmps
xor
out
dec
jns
cmps
or
out
dec
call
and
dec
xlat
out
dec
pushf
stc
out
dec
(bad)
xchg
lods
jno
out
xor
or
arpl
fistp
dec
inc
movs
pusha
dec
xlat
out
xor
xor
fnstcw
mov
pop
lock
adc
jmp
add
out
loope
jns
mov
jae
loope
movs
mov
cmp
(bad)
sub
sbb
test
out
dec
pushf
mov
dec
(bad)
icebp
mov
imul
pop
sbb
sbb
adc
fcomip
push
mov
cmp
mov
jae
loope
out
std
repz
clc
cmps
adc
adc
ja
fnstenv
nop
cmc
xor
or
inc
out
ins
sbb
je
scas
xchg
js
sbb
sbb
adc
fucom
out
dec
mov
sbb
inc
into
nop
xchg
inc
xlat
out
cmp
jae
cmp
jecxz
dec
(bad)
dec
cdq
inc
stos
(bad)
shl
call
lods
mov
mov
cdq
imul
sbb
xor
adc
sub
loope
lea
mov
call
rol
mov
cwde
push
fstp
vpshaw
nop
inc
dec
ret
push
ins
out
int
add
call
mov
lods
sbb
dec
(bad)
out
fld
nop
loopne
jmp
jecxz
dec
(bad)
dec
clc
dec
fsub
out
xor
adc
adc
(bad)
cmc
and
cld
xlat
push
cmps
hlt
xlat
adc
into
pushf
sub
pop
xchg
adc
push
cdq
imul
pop
inc
fabs
call
jmp
pop
adc
repnz
mov
(bad)
cdq
xor
out
dec
mov
bound
mov
fabs
call
jmp
pop
adc
out
ret
pop
mov
repnz
movs
pushf
jmp
hlt
push
mov
pushf
jmp
pop
adc
shr
call
dec
xlat
out
loope
sub
pop
cmp
mov
dec
popf
xor
out
dec
jns
sub
(bad)
out
jne
nop
call
sub
sti
mov
(bad)
jb
shl
mov
dec
inc
out
ins
sbb
jne
xor
loope
dec
mov
sbb
rol
sub
(bad)
mov
sbb
inc
sbb
xlat
push
sbb
xor
adc
adc
mov
adc
lock
mov
fidiv
je
cdq
inc
stos
fstp
ror
mov
nop
push
inc
inc
or
(bad)
sub
sbb
xor
les
icebp
sbb
out
jne
call
pop
or
dec
loopne
dec
stos
fstp
xor
out
mov
call
pop
or
jmp
fstp
pop
xor
pop
imul
sbb
dec
js
(bad)
pop
adc
icebp
mov
sub
out
(bad)
sub
sbb
hlt
lds
fnstenv
nop
cmc
xor
add
inc
out
inc
sbb
push
push
fisubr
sbb
jbe
js
mov
out
idiv
lods
in
jmp
hlt
push
mov
push
sub
sub
loope
arpl
repz
and
and
mov
sbb
sub
sbb
dec
(bad)
dec
out
add
sub
shl
call
lds
out
dec
pop
push
inc
pop
mov
fist
sub
out
cmp
sub
cmp
call
inc
shl
out
cmp
jae
cmp
sbb
dec
(bad)
dec
popf
xor
loop
dec
jns
out
mov
sbb
inc
popa
std
repz
loope
and
aam
adc
out
mov
ins
push
fld
jno
pop
imul
xor
in
dec
jns
(bad)
out
jne
fist
sub
adc
sub
pop
imul
xor
in
dec
jns
jmp
(bad)
out
jne
and
dec
sub
fs
inc
sbb
les
cmp
sbb
dec
(bad)
dec
clc
outs
mov
adc
in
dec
(bad)
sbb
dec
adc
inc
hlt
jnp
xchg
fild
sbb
into
jb
push
out
cmp
xor
push
cmp
mov
sub
pushf
ds
push
push
xchg
es
xor
sub
stc
into
sub
inc
inc
hlt
es
aas
mov
sbb
adc
push
std
ins
push
xchg
cmp
sbb
pop
dec
sbb
pop
jmp
push
xchg
jp
sbb
pop
jnp
adc
jge
dec
into
add
inc
hlt
jge
pop
xor
push
or
mov
sub
cmp
sub
sub
mov
sub
or
sub
sub
mov
sub
mov
inc
in
popf
sbb
sub
adc
popf
arpl
sub
adc
sub
fs
imul
xor
in
dec
jns
push
(bad)
out
jne
and
dec
sub
fld
js
les
cmp
sbb
dec
(bad)
dec
clc
arpl
adc
adc
xchg
xchg
dec
shl
out
loope
pushf
adc
out
pop
pop
jmp
sbb
(bad)
mov
sub
loope
rcl
adc
or
les
pop
cmp
adc
inc
hlt
push
mov
sub
mov
push
sbb
mov
or
repz
out
sub
jp
jns
add
sbb
add
and
mov
nop
xlat
pop
jb
adc
es
inc
mov
sbb
dec
add
dec
xor
gs
pushf
adc
out
pop
pushf
and
mov
pushf
hlt
dec
(bad)
out
inc
xchg
jle
mov
pushf
clc
dec
(bad)
out
mov
sbb
scas
mov
out
jae
fist
mov
out
and
(bad)
out
pop
shl
out
cmp
xchg
pop
shl
out
ret
cli
cdq
lods
mov
out
mov
push
jp
inc
sbb
(bad)
out
dec
stos
fstp
cmp
xchg
mov
out
xor
sbb
fld
dec
clc
ins
shl
out
xor
adc
cdq
jbe
scas
adc
sub
cmp
sbb
dec
(bad)
call
shr
mov
sub
stc
and
sbb
xor
adc
cmp
xchg
mov
out
xor
sbb
fld
dec
clc
and
out
xor
adc
cdq
jbe
jae
mov
xchg
xchg
mov
out
xor
sbb
jmp
mov
mov
dec
js
les
cmp
in
dec
(bad)
dec
clc
xchg
adc
adc
in
adc
adc
(bad)
out
pop
and
mov
sbb
mov
dec
out
add
and
sub
add
(bad)
pop
adc
and
mov
sbb
adc
push
mov
sub
xor
sbb
mov
movs
adc
(bad)
out
lds
xchg
xchg
mov
out
xor
sbb
loop
push
loop
(bad)
call
sub
idiv
lods
icebp
jmp
sbb
mov
or
repz
sub
jns
add
sbb
add
and
sub
mov
sub
nop
or
in
dec
sub
cmp
sbb
dec
(bad)
call
(bad)
out
xor
adc
mov
adc
sub
sbb
inc
push
sbb
fld
dec
js
(bad)
pop
adc
icebp
inc
sub
adc
shl
call
pop
imul
arpl
sbb
fld
dec
js
les
dec
sbb
fild
sbb
das
adc
imul
pop
push
sbb
fld
dec
js
les
dec
sbb
mov
sub
xchg
pop
ins
dec
adc
sub
pop
imul
cmp
sbb
fld
dec
js
(bad)
pop
adc
icebp
xchg
sub
test
push
sbb
inc
into
nop
xchg
pop
shl
out
cmp
lock
mov
sbb
loope
cmp
repz
loope
lods
sub
xchg
movs
push
mov
out
idiv
lods
std
jmp
in
dec
(bad)
dec
clc
sbb
adc
sub
and
jecxz
dec
jnp
and
sub
mov
adc
sub
pop
imul
mov
sub
sahf
les
dec
sbb
sbb
ja
adc
sub
out
dec
stos
fst
jp
fistp
out
jne
cwde
out
or
adc
cdq
lods
mov
out
lock
add
les
pop
in
adc
or
push
mov
sub
ja
sbb
pop
xor
pop
imul
add
sbb
fld
dec
js
les
dec
sbb
mov
inc
icebp
jnp
mov
add
les
pop
mov
sbb
sub
sub
cmp
sbb
cmp
sub
cmp
lock
out
out
jb
shl
mov
dec
inc
push
scas
push
adc
xchg
push
je
sub
idiv
ins
in
jbe
ins
sbb
sub
pop
inc
sub
mov
fistp
hlt
rcl
adc
jmp
dec
clc
ja
sbb
cmp
dec
clc
out
sbb
cmp
repnz
cmp
sbb
cmp
inc
dec
jmp
cld
shr
sbb
loop
dec
scas
(bad)
xor
(bad)
or
sub
and
fidiv
lods
iret
out
dec
(bad)
sbb
cmp
out
idiv
lods
mov
xlat
xor
adc
sub
pop
imul
sbb
fucomp
dec
(bad)
jno
pop
imul
pop
aam
adc
pop
jl
mov
(bad)
cld
repz
movs
jne
out
pop
int3
sub
mov
pushf
fmul
out
jo
pop
adc
fucomp
dec
(bad)
icebp
fild
loope
out
dec
and
gs
fyl2xp1
jne
sbb
xor
cwde
jb
sub
fld
out
cmp
xchg
imul
sbb
fld
ins
sbb
sub
mov
loope
dec
mov
adc
lds
xchg
xchg
imul
lods
ror
out
and
out
dec
and
gs
dec
popf
xor
out
dec
jns
movs
popa
xlat
out
dec
mov
adc
lds
nop
call
xor
out
xor
out
dec
movs
pushf
in
dec
(bad)
out
dec
pushf
stc
out
dec
(bad)
push
cmps
xor
out
dec
jns
js
lds
out
dec
daa
mov
call
mov
lods
ror
clc
mov
sbb
cmp
sub
cmp
out
jne
out
pop
fsubr
adc
xlat
out
out
ja
fnstenv
nop
cmc
or
mov
inc
out
sbb
adc
jmp
and
out
xchg
fisubr
sbb
add
es
inc
xchg
pop
or
adc
sub
mov
and
rol
and
adc
shl
mov
lock
mov
sbb
ja
sbb
mov
sbb
(bad)
outs
sbb
dec
sub
mov
fstp
xor
stos
fs
mov
ds
movs
pop
in
loope
sbb
inc
sbb
(bad)
cmp
push
sub
cdq
inc
add
cdq
ja
fs
mov
popf
cwde
mov
sbb
push
jae
cmp
in
fldcw
pop
adc
(bad)
out
mov
outs
or
dec
ret
mul
out
dec
pushf
loope
dec
(bad)
icebp
add
fdivrp
cdq
xor
out
dec
mov
cmps
out
dec
jns
xchg
dec
push
out
loope
shl
sub
dec
pop
in
xor
cmps
out
dec
jns
daa
pop
xor
mov
jmp
and
or
pop
dec
push
icebp
or
test
rep
sub
stc
pop
xlat
out
out
ja
fnstenv
sbb
int3
call
pop
adc
and
cdq
dec
sbb
cdq
jbe
icebp
inc
sub
sub
sbb
jno
repnz
sub
nop
call
ja
pop
adc
adc
adc
sti
and
mov
aad
push
dec
mov
daa
adc
fst
dec
out
jb
shl
mov
sbb
inc
cmp
test
mov
call
mov
sbb
out
int
mov
inc
sbb
add
xchg
jne
mov
dec
clc
mov
sbb
call
sub
adc
in
dec
(bad)
dec
jp
jg
ja
imul
clc
jnp
sbb
loope
shl
sub
xlat
fld
jno
mov
sbb
dec
jns
es
test
adc
(bad)
out
dec
(bad)
ins
adc
jmp
icebp
sbb
movs
pushf
in
dec
(bad)
out
fld
jno
pop
imul
(bad)
and
inc
sub
test
push
sbb
inc
into
nop
xchg
dec
shl
out
cmp
dec
clc
retf
sub
fyl2xp1
sub
sbb
cmp
xchg
mov
in
dec
sub
xchg
dec
shl
out
cmp
jno
pop
imul
xor
in
dec
jns
add
and
rol
push
jno
icebp
sub
jp
shr
mov
nop
shl
sar
dec
(bad)
inc
cdq
dec
sub
cdq
jbe
icebp
jecxz
sub
jp
jns
out
xchg
jmp
and
sbb
cdq
jbe
pop
js
lds
cmp
sbb
dec
(bad)
dec
clc
loop
out
xor
adc
repnz
sbb
dec
jnp
mov
dec
das
push
sahf
jl
sbb
xor
cdq
dec
sbb
cdq
jbe
pushf
in
dec
(bad)
out
fldcw
pushf
adc
out
jno
dec
clc
dec
sbb
adc
in
adc
out
dec
sub
pop
cmc
push
mov
jne
mov
jae
loope
ins
cld
repz
es
dec
xor
mov
not
out
sub
stc
adc
sbb
xor
xchg
dec
mov
out
dec
shl
out
pop
out
out
dec
jo
rol
daa
xchg
add
cmp
sbb
cmp
cld
repz
out
dec
pushf
in
jmp
(bad)
out
dec
shl
out
(bad)
push
mov
mov
dec
(bad)
out
pop
inc
sub
mov
fld
cmp
sbb
dec
(bad)
dec
clc
inc
sbb
adc
sub
and
in
dec
jnp
es
les
cdq
dec
sub
cdq
jbe
pushf
adc
out
pop
clc
sub
mov
sbb
dec
jnp
popf
and
in
dec
jnp
mov
and
adc
out
dec
jbe
dec
js
sbb
xchg
pop
adc
out
mov
icebp
ret
out
mov
sub
cmp
jno
mov
sbb
inc
or
sub
xchg
jne
mov
out
mov
jae
fld
jae
pop
pop
xor
xchg
aam
sbb
jbe
scas
push
mov
sub
cdq
jae
nop
inc
pop
dec
ficom
sub
jp
movs
pop
cld
loope
icebp
mov
jno
cmovae
xor
mov
loope
push
mov
sub
pop
xchg
sbb
mov
sbb
pop
fdiv
adc
mov
or
mov
nop
call
ins
mov
dec
popf
hlt
lds
pop
dec
xor
mov
fist
movs
sub
adc
in
hlt
icebp
call
sub
dec
ins
in
int3
aad
bound
fs
mov
pusha
xor
mov
inc
cdq
dec
fdivrp
cdq
hlt
std
nop
xlat
or
jl
cmp
test
xchg
lock
push
popa
mov
dec
jp
xchg
or
jne
mov
sbb
aaa
push
mov
inc
sbb
rcr
and
adc
shr
idiv
ins
rcr
dec
(bad)
inc
dec
jmp
cmc
loopne
dec
scas
in
enter
push
aas
mov
xchg
push
dec
jns
adc
adc
mov
jae
pop
push
icebp
pop
pushf
sub
test
sbb
adc
nop
push
dec
mov
dec
cdq
push
stos
cmc
pusha
loop
dec
fwait
les
cmps
and
pop
adc
mov
dec
adc
sub
adc
mov
xchg
aam
sbb
movs
pop
mov
loope
jmp
clc
mov
xor
cmp
jae
cmp
test
sar
jns
dec
lahf
sub
jp
movs
pop
mov
loope
jmp
clc
test
jae
cmp
movs
inc
pop
call
fstp
out
cmp
push
or
mov
loope
hlt
lea
out
mov
xchg
push
sbb
ins
icebp
adc
ins
cmc
adc
movs
pop
lods
loope
sbb
inc
cmp
inc
sbb
stos
and
cmp
adc
and
pop
das
xchg
or
loop
sbb
push
add
adc
ins
lea
iret
arpl
adc
cmp
dec
pop
mov
lahf
add
stos
addr16
out
sbb
sub
gs
sub
adc
jmp
sub
sub
shl
jbe
dec
js
dec
cdq
push
js
inc
cmp
push
jo
ds
xor
cmp
out
mov
sub
mov
cmp
ror
mov
cwde
xlat
adc
adc
sub
data16
xor
data16
movs
cmp
sub
or
sbb
xor
adc
cdq
hlt
aad
xlat
out
ja
shl
mov
daa
out
lods
mov
fsubrp
les
sbb
jns
movs
(bad)
ins
add
adc
and
xor
jb
nop
cmc
out
(bad)
imul
call
fld
or
out
les
pop
adc
jbe
shl
mov
dec
scas
push
inc
mov
cmp
xor
cmp
cwde
xlat
ins
pop
sbb
cmp
loope
cmp
in
fld
jno
mov
sbb
inc
sbb
(bad)
ins
sbb
pop
adc
out
sbb
mov
jmp
add
les
sbb
les
out
dec
shl
sub
rol
and
and
mov
sub
pop
mov
out
mov
out
dec
sar
mov
sub
icebp
jbe
shl
mov
dec
inc
cmp
hlt
xor
hlt
xor
xchg
jbe
cmp
mov
loope
dec
mov
nop
call
inc
mov
dec
js
sub
adc
sub
gs
enter
and
fs
fsincos
mov
adc
sub
mov
clc
xor
mov
fldenv
ins
in
pop
test
mov
fsincos
movs
(bad)
ins
in
pop
mov
mov
loope
push
mov
push
cmps
hlt
xor
js
dec
cdq
push
js
inc
out
xor
xor
div
sub
fs
shr
jae
sbb
cmp
dec
add
cdq
jbe
icebp
div
sub
push
dec
pop
sub
jno
repnz
xor
xor
sub
fldz
sbb
mov
sbb
inc
sbb
lds
pop
pop
xor
div
sub
fistp
jmp
icebp
div
sub
jae
sub
cdq
hlt
aad
or
sub
out
mov
xchg
push
dec
jbe
fnstenv
mov
stc
pop
das
sbb
cmp
adc
cmp
cld
repz
cdq
push
jp
inc
cmp
jmp
sub
cmp
xor
cmp
xchg
ins
mov
adc
inc
mov
nop
jmp
fild
pop
or
out
sbb
xor
adc
adc
and
sbb
cs
sub
cdq
dec
stos
fst
pop
dec
pop
nop
lea
sbb
stos
fs
pop
cmp
stos
mov
sbb
les
xchg
push
mov
(bad)
xor
mov
icebp
sbb
jns
ret
fwait
sub
cdq
jbe
out
out
aam
sbb
dec
pop
add
loope
ins
add
adc
shl
sbb
fnstenv
loopne
out
sub
out
ja
dec
jb
nop
cmc
xor
cmp
dec
mov
and
dec
or
adc
mov
jl
cmp
hlt
(bad)
iret
add
adc
ins
loope
hlt
fst
hlt
inc
dec
icebp
cdq
hlt
leave
nop
push
inc
mov
call
ins
xor
mov
pop
in
fcomip
push
mov
fldcw
jno
adc
pop
sub
xchg
adc
outs
and
pop
cld
xchg
(bad)
fstp
xlat
hlt
xlat
sbb
pop
popa
push
cmps
int3
xlat
push
cmps
lea
nop
call
mov
out
jmp
sar
call
mov
push
cld
jne
out
bnd
sbb
xor
js
cmp
fld
icebp
pop
popf
sub
xchg
jne
jg
hlt
xlat
push
cmps
hlt
xlat
and
pop
mov
hlt
fld
jmp
sub
sub
clc
add
sbb
loop
dec
scas
adc
cmp
sbb
cmp
call
stos
mov
adc
fldz
idiv
lods
stc
out
dec
(bad)
nop
(bad)
cmp
in
dec
(bad)
dec
out
les
out
jne
nop
sar
jmp
sbb
dec
sub
sar
sub
rcr
sbb
mov
ins
add
je
adc
aam
test
sub
adc
in
dec
(bad)
nop
xchg
imul
(bad)
(bad)
jb
ins
(bad)
in
and
popf
or
sub
icebp
ror
mov
nop
xchg
dec
(bad)
out
or
call
dec
mov
jno
mov
sbb
jecxz
sbb
xor
ret
ins
mov
xchg
push
mov
aam
cdq
jo
shr
icebp
test
loopne
jbe
adc
dec
sub
inc
pop
cmp
fstp
(bad)
cmc
push
mov
ins
sbb
xor
mov
fstp
dec
pop
or
les
sbb
ret
dec
pushf
loope
dec
(bad)
icebp
sbb
cmp
sbb
les
out
loope
mov
repz
pop
add
adc
in
or
pop
xor
out
pushf
fmul
out
mov
sbb
push
sub
adc
(bad)
push
imul
stos
mov
adc
xchg
xchg
jge
in
mov
shr
dec
(bad)
and
ret
(bad)
std
jb
adc
xchg
aad
dec
(bad)
sbb
mov
shl
mov
call
xor
adc
addr16
bnd
sbb
dec
mov
dec
popf
or
sbb
dec
jle
cmp
imul
or
sbb
dec
jle
pop
fwait
sub
xchg
jne
out
jns
in
xor
adc
(bad)
out
dec
pushf
in
out
dec
(bad)
out
test
(bad)
out
cmp
js
ret
loope
or
aam
xchg
(bad)
adc
cmp
(bad)
xor
adc
(bad)
out
cmp
xchg
jge
in
mov
(bad)
nop
xchg
pop
(bad)
in
pop
adc
adc
lods
in
dec
(bad)
cwde
(bad)
xchg
sbb
pop
sub
adc
(bad)
out
mov
sub
adc
ins
add
adc
(bad)
push
xchg
mov
sbb
cmp
xchg
pop
(bad)
in
cmp
mov
push
push
sbb
pop
cdq
push
dec
pop
or
adc
jmp
clc
xlat
add
adc
in
adc
adc
aam
xchg
jns
pop
nop
lea
sbb
mov
repz
dec
(bad)
xchg
xchg
mov
out
loope
scas
xchg
pop
(bad)
in
cmp
sbb
dec
aam
inc
pop
cld
cmp
mov
(bad)
mov
(bad)
in
dec
jns
push
dec
(bad)
out
jne
nop
xchg
inc
(bad)
out
pop
cmp
loope
out
jmp
(bad)
inc
cdq
xor
out
dec
(bad)
lods
in
xlat
out
les
out
inc
(bad)
out
cmp
js
ret
loope
sar
sub
adc
fucomip
add
out
dec
rol
sub
xchg
inc
(bad)
out
cmp
sbb
dec
(bad)
dec
out
add
out
dec
jp
iret
dec
(bad)
out
jne
nop
xchg
dec
(bad)
out
mov
xlat
out
fsqrt
repz
mov
lods
call
pop
add
adc
in
adc
ja
sbb
inc
sbb
inc
sbb
sub
push
dec
pop
adc
mov
adc
lods
std
out
dec
(bad)
out
dec
(bad)
out
pop
fdivr
mov
sbb
dec
jle
out
add
out
dec
(bad)
lods
hlt
dec
aam
clc
jg
sbb
cmp
xor
cmp
out
push
(bad)
in
pop
fdivr
adc
xlat
out
pop
or
sbb
cmp
dec
clc
sbb
cmc
out
dec
(bad)
repnz
xor
inc
js
sub
jmp
cld
mov
xchg
lds
scas
cmp
nop
xlat
ja
out
pop
outs
nop
call
dec
xlat
out
cmp
push
cmps
hlt
(bad)
dec
js
ret
pop
adc
out
dec
(bad)
dec
clc
ja
sbb
fld
jno
pop
imul
xor
out
dec
jns
adc
shl
out
xor
add
adc
mov
imul
imul
cld
ret
pop
adc
sub
adc
rol
dec
(bad)
jno
inc
imul
ins
rcr
(bad)
lock
mov
sbb
mov
icebp
add
cwde
out
inc
sbb
out
loopne
inc
cmp
cwde
cld
sub
jg
scas
jbe
mov
call
sub
mov
ficomp
mov
(bad)
shl
leave
sbb
dec
mov
sbb
mov
sbb
dec
xchg
push
push
mov
out
idiv
lods
gs
dec
(bad)
nop
xlat
xor
push
mov
sub
clc
daa
or
adc
cmp
call
leave
aam
out
cmp
dec
clc
(bad)
or
ins
in
dec
(bad)
out
adc
out
pop
dec
cmp
sbb
movs
ins
in
dec
(bad)
xchg
inc
mov
sub
and
in
dec
jg
push
xchg
sub
cdq
xor
in
dec
(bad)
lods
mov
(bad)
out
xchg
jne
dec
(bad)
out
sub
out
pop
or
adc
movs
imul
mov
aam
out
cmp
adc
cmp
sbb
repz
out
jbe
add
div
sub
mov
sub
cdq
xor
in
dec
mov
fidivr
inc
sbb
dec
jns
sbb
or
adc
shl
mov
sbb
dec
jns
cmps
pop
imul
or
pop
adc
sub
adc
ror
dec
(bad)
call
jg
xchg
shl
sub
xlat
pop
(bad)
in
dec
inc
sbb
xchg
dec
xlat
out
loope
pushf
movs
dec
(bad)
out
pop
loopne
adc
(bad)
out
add
in
dec
(bad)
lods
pushf
dec
(bad)
out
add
in
dec
(bad)
lods
mov
out
add
in
dec
jg
xchg
add
shr
call
(bad)
out
jno
or
add
adc
mov
sbb
mov
jno
pop
imul
xor
out
dec
jns
mov
loope
jbe
pushf
movs
dec
(bad)
out
cmp
in
dec
(bad)
dec
clc
xor
adc
out
out
dec
mov
out
inc
xlat
or
mov
pop
jp
movs
pushf
test
(bad)
out
pop
and
adc
out
test
xlat
out
cmc
sub
adc
std
out
dec
(bad)
sbb
mov
jg
xor
out
dec
sub
xchg
inc
jb
adc
(bad)
out
lds
out
dec
sub
cdq
dec
add
cdq
jbe
pushf
test
(bad)
out
pop
and
out
dec
jo
xchg
adc
movs
pushf
test
(bad)
out
fld
jae
fisttp
jae
fld
jae
cmp
in
dec
(bad)
dec
jp
sar
mov
sub
movs
sbb
out
pop
push
cmp
mov
add
lods
jge
dec
(bad)
nop
xlat
dec
pushf
(bad)
in
dec
(bad)
jno
pop
imul
xor
lods
in
dec
(bad)
dec
clc
aaa
or
or
xor
in
dec
sub
ds
inc
cs
xchg
xchg
dec
xlat
out
loope
gs
repz
push
xchg
sub
cdq
jb
fldenv
inc
icebp
adc
sub
nop
xor
in
dec
sub
out
lea
fdivr
sub
mov
inc
xor
cmp
adc
xchg
mov
dec
(bad)
sbb
sbb
mov
icebp
das
nop
sub
js
sub
adc
in
dec
(bad)
dec
inc
pop
cld
cmp
mov
sbb
rcr
lods
in
dec
(bad)
dec
clc
mov
in
adc
adc
add
out
mov
loope
dec
mov
mov
adc
rcr
call
xor
xchg
pop
inc
jno
mov
pushf
movs
dec
(bad)
out
pop
pop
cmp
mov
icebp
push
xchg
sub
cdq
dec
sub
cdq
jbe
sbb
add
in
dec
rcl
mov
out
adc
jo
adc
(bad)
out
mov
loope
dec
mov
rcl
mov
dec
cdq
push
stos
cmc
or
jg
fwait
in
cmp
sbb
hlt
fst
xlat
dec
pop
adc
inc
or
adc
jmp
cdq
in
out
mov
sub
in
dec
pop
or
or
adc
jmp
cdq
in
nop
call
pop
mov
cmp
mov
(bad)
jl
pop
push
ins
out
push
jl
adc
scas
inc
inc
sub
pop
push
jl
popf
cmc
cmp
inc
fld
icebp
xchg
scas
sub
cdq
ja
fst
and
mov
xor
mov
sbb
cdq
inc
imul
xor
adc
loopne
jmp
add
mov
loope
dec
mov
push
cmps
hlt
xlat
xchg
push
mov
pop
inc
pop
je
adc
sahf
pop
out
cmp
pop
adc
cmp
or
loope
pop
or
push
ins
out
cmc
das
sbb
push
jl
adc
scas
inc
inc
movs
pop
add
sub
popf
hlt
ror
mov
jno
adc
jp
inc
sbb
stos
or
adc
out
nop
call
fcmovnbe
dec
clc
jae
sbb
cmp
loope
out
(bad)
mov
rcr
call
dec
jbe
dec
js
dec
cdq
push
xchg
push
cmpxchg
icebp
cmps
lods
sub
inc
out
xchg
dec
mov
jp
call
mov
nop
xlat
jbe
movs
lock
(bad)
pop
cmpxchg
nop
call
or
out
cmp
xchg
xchg
or
movs
pushf
rcl
out
fld
mov
loope
mov
nop
(bad)
mov
sub
adc
shl
call
add
stc
out
dec
shl
sub
gs
lods
fcom
out
les
sbb
jno
bnd
out
push
jb
sub
xchg
or
sbb
xor
mov
xchg
or
movs
pushf
rcl
out
out
mov
rol
pop
dec
out
add
stc
out
dec
rol
mov
call
(bad)
lods
fcom
out
les
sbb
jbe
fst
and
repnz
xor
inc
sbb
loopne
inc
cmp
mov
clc
ja
sbb
loop
dec
fwait
les
cmps
fsub
in
jle
dec
sub
cdq
jbe
loope
jbe
jno
mov
sbb
mov
sbb
or
add
mov
(bad)
cdq
xor
(bad)
out
dec
mov
shr
icebp
test
loopne
jae
adc
pop
in
out
dec
stos
fstp
(bad)
cmc
push
mov
icebp
pop
nop
sub
xchg
jne
out
mov
in
repnz
mov
(bad)
clc
repz
loope
fnsave
mov
call
mov
sbb
inc
sbb
inc
sbb
mov
dec
clc
(bad)
xor
adc
jmp
cmp
sbb
dec
(bad)
dec
clc
lahf
aaa
sbb
fld
xchg
movs
dec
mul
out
out
xchg
movs
mov
out
out
icebp
sbb
adc
adc
sub
test
sub
adc
nop
call
inc
mul
out
cmp
xlat
out
ja
fnstenv
nop
cmc
xor
cdq
adc
sub
out
sub
jo
out
adc
adc
mov
cdq
dec
sbb
cdq
jbe
out
fwait
in
and
adc
shl
mov
mov
out
dec
add
cdq
jbe
in
mov
dec
clc
mov
fucomip
out
dec
xchg
hlt
and
lods
popf
jmp
(bad)
nop
xlat
fld
call
shl
adc
out
cmp
sbb
cmp
jae
fld
xchg
xchg
adc
ror
mov
sbb
dec
jns
cmps
pop
imul
or
pop
adc
sub
adc
sar
xchg
and
pop
xor
inc
sbb
xchg
dec
xlat
out
loope
pushf
movs
dec
(bad)
out
pop
pop
add
mov
loope
dec
mov
in
dec
jp
xchg
add
sar
dec
(bad)
call
lods
sbb
mov
mov
xchg
dec
xlat
out
loope
imul
xchg
dec
sbb
cmp
lods
in
dec
(bad)
dec
popf
xor
out
dec
jns
inc
scas
sub
clc
or
out
cmp
out
inc
sbb
fld
adc
mov
clc
push
aaa
sbb
xor
add
cdq
jbe
pushf
test
(bad)
out
mov
sbb
xor
out
dec
sub
adc
(bad)
out
lds
xlat
xor
out
dec
sub
test
adc
adc
nop
xchg
xor
out
cmp
xchg
xchg
or
out
loope
cli
loopne
(bad)
inc
popf
xor
in
dec
jns
xchg
or
out
loope
sbb
inc
cmp
inc
sbb
movs
pushf
in
dec
(bad)
out
fld
icebp
out
stos
sub
sbb
popf
cwde
mov
sbb
add
in
dec
ror
sub
xlat
dec
pushf
mov
aam
imul
xor
lods
in
dec
(bad)
dec
clc
(bad)
sbb
xor
or
xor
loop
dec
sub
ds
mov
mov
xchg
xchg
dec
xlat
out
loope
gs
repz
cmp
and
gs
inc
icebp
adc
sub
nop
xor
loop
dec
sub
out
lea
fdivr
sub
adc
sub
adc
sub
mov
sbb
dec
jns
clc
jg
sbb
xor
inc
jge
sub
fstp
push
mov
pushf
or
inc
pop
aam
out
dec
stos
fstp
(bad)
out
mov
popf
fdiv
movs
loop
dec
jns
clc
daa
shl
out
xor
adc
jno
popf
movs
mov
sbb
(bad)
lods
test
popf
xor
loop
dec
jns
jmp
mov
out
dec
jns
movs
and
push
(bad)
dec
mov
loope
jbe
lods
test
clc
sti
xor
adc
sti
icebp
push
mov
add
js
rcr
shr
movs
and
gs
inc
retf
clc
repz
out
stos
sub
fwait
sub
in
dec
stos
repnz
mov
out
and
cwde
fucomi
dec
stos
fstp
ss
xchg
sub
shr
out
lods
test
clc
daa
jmp
out
xor
adc
cdq
jbe
icebp
mov
dec
sub
cdq
jbe
pushf
mov
adc
popf
in
dec
jns
shr
add
cdq
jbe
sbb
add
in
dec
sar
mov
nop
call
dec
pushf
mov
mov
sub
fwait
xor
in
dec
jbe
dec
js
sbb
xchg
pop
cmp
inc
sbb
xchg
pop
xchg
movs
mov
fsubp
push
mov
dec
clc
sti
xor
adc
ins
in
out
les
sbb
mov
dec
jp
rol
loop
icebp
daa
cmps
sub
inc
pop
or
adc
jge
adc
sar
mov
nop
xlat
loop
imul
dec
jns
adc
inc
cs
sub
fld
icebp
sbb
inc
out
pop
nop
add
mov
stos
xor
sub
idiv
ins
jmp
in
loope
icebp
mov
pop
ror
adc
and
sbb
push
mov
inc
dec
jmp
inc
loop
dec
scas
bound
stc
push
xor
add
push
mov
add
xchg
dec
sub
xor
or
(bad)
ins
sbb
add
mov
loope
push
mov
repnz
sub
sti
rol
mov
rol
mov
and
mov
cdq
bound
sub
arpl
rcr
rcr
dec
mov
fdivrp
pop
aas
sbb
fld
dec
out
in
jno
imul
add
ins
out
dec
stos
fstp
pop
ss
movs
(bad)
ins
add
adc
dec
stos
sub
sti
mov
sub
idiv
ins
loope
jbe
inc
dec
js
or
in
cld
inc
loop
dec
fwait
les
cmps
js
dec
sub
mov
jmp
jg
(bad)
test
das
sbb
pop
jb
out
dec
stos
fstp
mov
sub
adc
sbb
fld
icebp
jmp
cmp
mov
inc
dec
js
sbb
xchg
pop
or
xchg
ins
jecxz
xor
ss
sub
ins
lock
(bad)
mov
movs
pop
hlt
loope
jns
mov
mov
out
mov
xchg
push
push
jns
inc
test
sbb
inc
sbb
movs
pop
hlt
loope
adc
rol
out
sti
mov
fiadd
js
or
in
cld
test
xor
adc
or
mov
dec
inc
vmwrite
mov
inc
mov
bound
mov
fisttp
sub
xchg
pop
fstp
mov
(bad)
adc
lods
mov
(bad)
xor
rcl
test
sbb
mov
push
push
mov
dec
clc
out
sbb
pop
mov
out
dec
shl
pop
fsubp
out
fld
sbb
mov
mov
aam
stos
movs
cld
inc
(bad)
out
les
sub
pop
pushf
sbb
push
mov
jno
cmp
popf
xor
out
out
dec
jns
mov
cli
jb
adc
nop
xchg
sub
out
xchg
popf
inc
fsubp
out
xor
out
xor
nop
xlat
xor
sbb
xor
(bad)
jp
mov
sbb
rcr
mov
pushf
loopne
(bad)
out
fstp
pop
out
(bad)
call
and
imul
fstp
sbb
fnstenv
stc
mov
pop
imul
xor
loope
dec
jns
lahf
test
sbb
ja
sbb
dec
jns
dec
push
(bad)
out
jne
nop
xchg
inc
shl
out
mov
sub
cwde
(bad)
cdq
jno
adc
sbb
mov
movs
in
dec
(bad)
out
mov
sub
out
xchg
es
test
sub
jp
inc
(bad)
xchg
xchg
dec
aad
out
loope
pop
je
(bad)
call
xchg
and
(bad)
cwde
(bad)
mov
sahf
pushf
mov
out
dec
(bad)
sbb
mov
sub
cmps
xor
in
out
dec
out
popf
adc
mov
adc
cmp
sbb
lea
sbb
mov
dec
jp
inc
mov
dec
aad
out
out
xor
(bad)
call
lods
adc
mov
out
dec
es
xchg
sub
out
cmp
sbb
dec
(bad)
out
cmp
xor
(bad)
dec
clc
jecxz
sbb
xor
stc
push
mov
xchg
xchg
sub
out
loope
pushf
adc
inc
pop
adc
adc
aad
out
dec
adc
xchg
jmp
in
dec
(bad)
and
xor
sbb
mov
pushf
out
dec
(bad)
out
xor
aam
mov
xchg
xchg
dec
shl
out
loope
mov
repz
loope
jge
mov
call
(bad)
out
lds
icebp
xor
mov
fsub
pop
call
push
cmp
leave
dec
cmp
pop
sub
loope
dec
es
outs
mov
sbb
mov
and
cmp
adc
addr16
mov
sbb
dec
jns
(bad)
mov
add
adc
nop
xchg
sub
out
cmp
xchg
xchg
dec
shl
out
loope
xchg
clc
repz
loope
leave
pop
mov
jno
pop
imul
xor
loope
dec
jns
repz
sub
xchg
jne
repnz
fldcw
sbb
in
dec
(bad)
out
pop
clc
or
mov
jmp
popf
xor
loope
dec
jns
bound
sbb
dec
jns
fwait
cmps
sub
js
rcr
lods
in
dec
(bad)
dec
clc
das
sbb
xor
or
out
dec
jns
cmp
sbb
inc
iret
nop
xchg
sub
out
cmp
xchg
xchg
dec
aad
out
xor
sbb
call
in
rcr
lods
in
dec
(bad)
dec
clc
mov
sbb
xor
or
movs
pushf
in
dec
(bad)
out
pop
test
fwait
test
sbb
inc
dec
clc
repz
loope
cmp
aam
and
pop
xor
sbb
mov
pushf
in
dec
(bad)
out
jno
dec
clc
adc
sbb
call
(bad)
out
dec
and
sbb
xor
rcl
test
sbb
add
loope
dec
inc
stc
mov
pop
imul
xor
loope
dec
jns
cmps
cmps
sub
xchg
jne
cwde
out
or
adc
fldcw
in
dec
(bad)
out
pop
pusha
or
mov
pushf
in
dec
(bad)
out
pop
add
adc
(bad)
out
xchg
mov
out
or
(bad)
ss
(bad)
out
xor
(bad)
sbb
mov
(bad)
out
or
in
out
dec
sub
dec
pushf
loope
dec
(bad)
xchg
xchg
dec
xlat
out
loope
and
repz
loope
and
aam
mov
fistp
dec
jns
shl
mov
movs
in
dec
(bad)
out
pop
cwde
or
mov
movs
test
out
int
or
imul
cdq
xor
loope
dec
test
adc
aad
out
dec
jns
movs
inc
shl
out
pop
mov
pushf
in
dec
(bad)
out
pop
pop
or
mov
movs
in
dec
(bad)
out
cmp
ins
mov
dec
clc
fistp
sbb
cmp
loope
dec
(bad)
dec
jp
(bad)
lods
in
(bad)
out
fwait
test
fld
jae
pop
jo
adc
sub
cdq
inc
add
cdq
ja
pushf
in
dec
(bad)
out
loop
lods
loopne
(bad)
out
or
out
xor
adc
pop
xor
in
dec
(bad)
lods
loopne
(bad)
out
mov
sbb
xor
add
mov
inc
dec
jmp
cmc
loopne
cmps
out
inc
and
mov
sbb
jno
sbb
pusha
or
shl
sub
adc
xor
mov
mov
xchg
push
dec
jns
adc
sub
sbb
inc
sbb
cmp
adc
sar
mov
inc
fnstenv
sbb
int3
cwde
cld
cmc
sub
adc
jle
xor
push
jle
mov
sbb
inc
into
nop
xchg
jns
out
cmp
sbb
cmp
jno
mov
sbb
dec
jns
and
pop
movs
or
mov
loope
dec
mov
cdq
adc
sub
fld
xchg
xchg
jge
out
loope
xchg
add
ins
loope
fld
jae
out
pop
add
jns
push
dec
jns
mov
aas
sbb
inc
into
nop
xchg
jne
out
cmp
xchg
push
push
jns
push
inc
jns
fwait
mov
ins
or
mov
pop
shl
add
mov
mov
out
mov
out
jbe
sbb
hlt
leave
dec
clc
cmp
adc
mov
imul
mov
sub
idiv
lods
movs
out
dec
(bad)
nop
xlat
pop
adc
pop
imul
pushf
rcr
xor
push
mov
sbb
mov
icebp
push
push
(bad)
out
dec
add
cdq
jbe
leave
mov
sub
pop
imul
stos
fcomp
fldcw
sbb
xor
aas
hlt
dec
(bad)
call
cmp
inc
cmp
cwde
cld
movs
sub
adc
jg
scas
adc
jp
rcr
call
cmp
xlat
fldcw
sbb
mov
pop
clc
jecxz
sbb
cmp
cwde
out
sub
icebp
push
mov
stc
mov
pop
imul
xor
out
dec
jns
mov
sub
xchg
mov
fst
and
xor
dec
sub
shl
sub
inc
inc
out
cmp
pop
ss
adc
jns
adc
lods
loope
dec
(bad)
dec
clc
mov
out
xor
cmp
push
mov
ins
cmp
shl
dec
(bad)
nop
push
dec
es
push
dec
jns
adc
lods
loope
dec
(bad)
dec
clc
gs
out
xor
or
cdq
jbe
icebp
xlat
mov
mov
enter
pop
adc
(bad)
shl
sub
cmp
in
fldenv
icebp
push
mov
adc
repz
mov
cdq
clc
mov
in
or
xchg
aam
sbb
xor
out
dec
mov
ins
in
fld
mov
cmp
popf
xor
out
dec
jns
inc
pop
(bad)
out
jne
nop
(bad)
mov
inc
adc
repz
pop
imul
mov
sbb
dec
stos
fld
cmp
out
idiv
lods
cmc
out
dec
(bad)
nop
xlat
xor
rcl
test
sbb
mov
inc
dec
js
dec
cdq
push
xchg
stc
add
sub
inc
out
in
pusha
xor
cwde
(bad)
imul
(bad)
shl
sub
rcl
test
sbb
mov
pushf
sub
out
mov
sbb
ja
es
pop
pop
adc
or
mov
fstp
mov
sub
adc
out
jb
mov
jno
lds
popf
xor
out
out
dec
jns
scas
mov
movs
pushf
in
inc
(bad)
out
pop
sbb
adc
fnstenv
loopne
out
xchg
xchg
pop
(bad)
out
loope
lea
mov
nop
(bad)
cmp
and
clc
push
and
adc
in
dec
(bad)
dec
clc
fbld
sbb
cmp
cmps
or
out
out
dec
jle
cmps
or
out
out
dec
jle
cmps
or
out
out
dec
jle
xchg
(bad)
(bad)
out
cmp
mov
cdq
pusha
fdivp
cdq
jns
fcmovnbe
dec
sub
call
dec
sbb
shl
sub
cmp
sbb
push
adc
shl
sub
push
adc
shl
sub
jne
pop
adc
xchg
cmp
lods
mov
out
out
dec
jle
lods
pop
(bad)
out
out
inc
add
iret
nop
xchg
xchg
(bad)
out
cmp
jno
add
js
(bad)
pop
adc
in
dec
(bad)
dec
clc
mov
sbb
cmp
in
dec
(bad)
dec
clc
jnp
sbb
(bad)
out
dec
jle
jmp
and
mov
pushf
clc
pop
(bad)
out
cmp
in
dec
(bad)
dec
clc
sub
jae
fldcw
icebp
push
mov
sbb
xchg
dec
(bad)
out
loope
pushf
in
dec
(bad)
out
pop
inc
hlt
out
dec
stos
fnstsw
lods
icebp
out
(bad)
cwde
(bad)
popa
and
adc
in
dec
(bad)
dec
clc
cmp
sbb
xor
mov
imul
inc
aaa
jo
mov
fst
es
mov
fbld
jno
inc
fnstenv
nop
cmc
xor
adc
scas
mov
shr
idiv
lods
in
in
dec
(bad)
nop
xlat
fnstenv
stc
mov
pop
imul
xor
out
dec
jns
ja
sub
popf
xor
out
dec
jns
loopne
imul
xor
in
add
jbe
rcl
mov
dec
cdq
push
js
scas
leave
and
jno
fidivr
mov
xchg
push
dec
jns
adc
sub
pop
imul
clc
addr16
adc
sar
mov
inc
fnstenv
sbb
int3
dec
inc
push
push
arpl
mov
ficom
mov
enter
pop
adc
(bad)
shl
sub
add
js
or
fxam
xor
mov
sub
add
sbb
mov
sbb
xor
mov
push
push
imul
adc
jmp
sub
add
sbb
push
and
adc
in
fld
jae
fincstp
mov
mov
sbb
rol
sub
xlat
and
adc
rcr
call
call
push
mov
fstp
jb
nop
cmc
xor
mov
inc
out
inc
jne
push
nop
enter
shl
ret
mov
call
clc
cmp
jno
sbb
mov
fst
inc
sbb
xchg
inc
xlat
out
loope
sbb
inc
and
adc
icebp
sbb
cmp
jae
cmp
jge
dec
(bad)
dec
popf
xor
out
dec
jns
xlat
mov
rcr
adc
(bad)
ins
call
mov
sbb
mov
dec
out
(bad)
shl
sbb
sub
cdq
jb
sbb
dec
jns
adc
dec
(bad)
dec
out
(bad)
shl
stos
mov
shl
out
dec
add
dec
pop
loope
daa
and
adc
icebp
sub
cmp
lock
inc
jl
adc
(bad)
out
hlt
aad
adc
loope
xchg
sbb
fld
jae
cmp
xor
jnp
gs
sar
dec
inc
pop
clc
cmps
and
adc
out
nop
xchg
inc
xlat
out
xor
xchg
mov
jae
cmp
cmc
out
dec
(bad)
dec
fwait
hlt
aad
clc
mov
dec
out
(bad)
shl
push
mov
ret
cvtps2pi
sbb
push
xchg
dec
inc
ins
sbb
fnstenv
mov
pop
fwait
hlt
aad
clc
mov
fbld
stos
sbb
jno
sbb
pusha
or
shl
sub
adc
cmp
call
sub
jmp
shl
pop
pop
adc
adc
mov
fstp
icebp
out
repz
xchg
rcl
out
cmp
xchg
pop
xor
out
xor
xchg
ins
mov
xchg
pop
xor
out
xor
nop
shl
jmp
inc
out
cdq
fwait
lock
cmp
pop
xor
out
xor
xchg
ins
mov
cwde
shl
sbb
cmp
call
sub
jmp
shl
call
mov
fstp
es
sub
push
push
adc
adc
mov
(bad)
cmp
shl
sub
xor
xchg
ins
mov
cwde
sti
aas
and
adc
adc
mov
(bad)
cmp
shl
sub
xor
xchg
ins
mov
xchg
pop
xor
out
xor
nop
shl
jmp
inc
out
mov
mov
and
nop
xchg
in
xlat
out
cmp
sar
call
sub
push
push
adc
call
sub
jmp
shl
lahf
pop
adc
adc
sbb
es
sub
push
push
adc
call
sub
jmp
shl
mov
pop
push
adc
sbb
jmp
xor
out
xor
xchg
ins
mov
dec
clc
repz
sbb
adc
icebp
xor
cmp
xchg
pop
xor
out
xor
xchg
ins
mov
dec
clc
scas
and
sbb
adc
call
sub
push
push
adc
jmp
dec
and
adc
in
sbb
adc
jmp
fistp
sub
adc
fcomp
adc
imul
pusha
or
shl
sub
adc
out
ja
fnstenv
nop
cmc
xor
cmc
adc
sub
out
mov
loopne
fst
adc
sub
adc
push
adc
sub
fldcw
sbb
mov
popf
sbb
aam
out
mov
call
jmp
sub
(bad)
out
ja
or
movs
popa
aam
out
pop
pop
push
adc
das
sbb
cmp
out
idiv
lods
and
dec
(bad)
nop
(bad)
fldcw
stc
mov
mov
sbb
ja
popa
pop
mov
dec
clc
aaa
and
adc
sub
pushf
les
inc
dec
sbb
ins
lock
add
inc
stc
mov
gs
out
loope
jge
dec
(bad)
call
imul
mov
sbb
jno
sbb
or
sbb
mov
cmp
jno
sbb
dec
mov
sbb
cmp
out
idiv
lods
cmp
dec
(bad)
nop
(bad)
pop
rcl
adc
cmp
jmp
nop
(bad)
xor
pop
cdq
dec
mov
out
inc
fdivrp
cdq
xor
loop
dec
mov
in
dec
sub
and
adc
mov
scas
lods
mov
out
or
push
jb
mov
jecxz
jo
push
cmp
retf
dec
xchg
mov
pushf
das
dec
(bad)
out
cmp
sbb
out
fist
mov
cdq
sbb
jmp
gs
(bad)
out
ja
das
in
dec
(bad)
sub
ja
pushf
aas
dec
(bad)
out
fxch
stos
push
mov
out
div
sub
loope
jns
mov
jae
cmp
xor
dec
(bad)
dec
popf
xor
in
dec
jns
fwait
mov
sbb
dec
jns
bound
(bad)
out
inc
fdivrp
cdq
xor
loop
dec
mov
in
dec
jns
(bad)
sbb
xor
cmp
xor
dec
(bad)
dec
clc
sub
sbb
cmp
out
idiv
lods
or
(bad)
fld
icebp
retf
mov
sbb
fwait
pop
adc
sar
mov
test
(bad)
mov
rcr
mov
sbb
push
imul
hlt
aad
hlt
int3
push
xchg
adc
cmp
inc
add
cdq
ja
sbb
sub
pop
hlt
push
adc
dec
cmc
adc
dec
loope
jbe
in
adc
inc
sub
cdq
ja
pop
enter
adc
dec
stc
adc
dec
std
adc
out
and
push
imul
xchg
mov
fst
or
adc
imul
mov
sub
int3
push
sbb
inc
sbb
sub
nop
fldcw
sbb
xor
adc
jno
push
imul
push
into
pop
adc
sub
or
pushf
pop
adc
mov
push
mov
sbb
rcl
sub
xchg
(bad)
aad
out
cmp
xchg
xchg
icebp
aad
out
loope
sbb
mov
icebp
add
into
pop
adc
sub
mov
lods
adc
fst
push
mov
cdq
fwait
lock
(bad)
mov
sbb
into
pop
adc
fldcw
adc
imul
and
adc
mov
pop
adc
sub
adc
imul
popa
mov
pop
je
adc
push
sbb
ja
stc
call
sbb
adc
sbb
dec
(bad)
icebp
jnp
sub
cdq
jbe
nop
sub
xor
mov
inc
mov
dec
nop
sub
fldcw
sbb
mov
pushf
enter
inc
(bad)
call
inc
jecxz
repz
mov
cdq
clc
stc
lock
xor
cmp
jno
push
jp
movs
pushf
enter
inc
pop
and
out
test
sub
popf
xor
out
dec
jns
cmp
js
iret
pop
adc
mov
or
mov
jno
cmp
sbb
iret
pop
adc
sar
push
mov
sbb
mov
icebp
or
jne
repnz
shr
(bad)
dec
js
movs
pop
adc
sbb
mov
scas
adc
loope
iret
or
cmps
mov
fst
jns
repnz
out
pop
pop
ja
mov
xchg
(bad)
jno
pop
imul
push
fwait
pop
adc
(bad)
icebp
push
mov
pushf
enter
inc
pop
mov
adc
mov
out
dec
jns
pop
mov
sbb
inc
sbb
inc
sbb
mov
out
fstp
push
mov
or
mov
jno
call
push
mov
lea
mov
pop
stos
push
mov
fnstenv
mov
sub
out
test
lods
push
mov
ins
adc
mov
nop
(bad)
fld
jae
fld
jae
pop
aaa
jmp
dec
(bad)
sub
jno
sbb
mov
out
xchg
jle
sub
and
pop
dec
int3
out
dec
stos
fnsave
out
ja
fnstenv
out
sub
mov
out
adc
pop
adc
mov
out
adc
mov
out
sbb
pop
adc
mov
out
sbb
mov
out
add
pop
adc
mov
out
add
mov
out
or
pop
adc
mov
out
or
mov
out
jno
pop
adc
mov
out
jne
pop
adc
mov
out
jns
pop
adc
mov
out
jge
pop
adc
mov
out
popa
sub
and
out
sub
and
out
imul
sbb
mov
out
ins
sub
and
out
pop
sub
and
out
pop
sub
and
out
inc
sub
and
out
inc
sub
and
out
dec
sub
and
out
mov
pop
adc
mov
out
mov
mov
out
movs
sub
sbb
mov
out
test
mov
dec
cdq
push
js
clc
mov
out
cdq
das
xchg
pop
cmp
mov
cmc
adc
mov
jmp
pop
sti
mov
cdq
das
xchg
pop
jecxz
lods
outs
push
scas
mov
fldenv
loope
(bad)
(bad)
adc
cmps
pop
mov
sar
fs
inc
sbb
(bad)
fld
dec
jp
jns
jge
(bad)
out
js
inc
xchg
pop
sub
adc
sub
mov
push
cwde
in
pushf
adc
(bad)
clc
adc
and
ror
(bad)
out
dec
scas
jecxz
pop
faddp
popf
clc
(bad)
xchg
push
xchg
and
jecxz
mov
cmp
adc
sub
sbb
mov
out
cdq
sub
sbb
mov
out
popf
sub
sbb
mov
out
sub
out
test
sbb
mov
out
mov
sbb
mov
out
lea
sbb
mov
out
icebp
sub
sbb
mov
out
cmc
sub
sbb
mov
out
stc
sub
sbb
mov
out
std
sub
sbb
mov
out
loope
pop
adc
mov
out
in
pop
adc
mov
out
jmp
mov
out
in
sub
sbb
mov
out
shr
sbb
mov
out
aad
pop
adc
mov
out
fldcw
sbb
mov
out
(bad)
sbb
mov
out
shr
adc
sub
sbb
mov
out
leave
sub
sbb
mov
out
int
pop
adc
mov
out
xor
sbb
mov
out
xor
mov
out
cmp
sbb
mov
out
cmp
mov
out
and
sbb
mov
out
and
mov
out
sub
sbb
mov
out
sub
mov
out
adc
sbb
mov
out
adc
mov
out
sbb
sbb
mov
out
sbb
mov
out
add
sbb
mov
out
add
mov
out
or
sbb
mov
out
or
mov
out
jno
pop
adc
mov
out
jne
pop
adc
mov
out
jns
pop
adc
mov
out
jge
pop
adc
mov
out
popa
sub
sbb
mov
out
gs
sbb
mov
out
imul
out
ins
sub
sbb
mov
out
push
sub
sbb
mov
out
push
sub
sbb
mov
out
pop
sub
sbb
mov
out
pop
sub
sbb
mov
out
inc
sub
sbb
mov
out
inc
sub
sbb
mov
out
dec
sub
sbb
mov
out
dec
sub
sbb
mov
out
mov
pop
adc
mov
out
mov
pop
adc
mov
out
mov
mov
out
mov
mov
out
mov
mov
out
movs
sub
adc
mov
out
test
mov
out
lods
sub
adc
mov
out
cdq
sub
adc
mov
out
popf
sub
adc
mov
out
sub
adc
sub
adc
mov
out
mov
adc
mov
out
lea
adc
mov
out
icebp
sub
adc
mov
out
cmc
sub
adc
mov
out
stc
sub
adc
mov
out
std
sub
adc
mov
out
loope
pop
adc
mov
out
in
pop
adc
mov
out
jmp
mov
out
in
sub
adc
mov
out
shr
adc
mov
out
aad
pop
adc
mov
out
fldcw
adc
mov
out
(bad)
adc
mov
out
shr
and
out
lds
adc
mov
out
leave
sub
adc
mov
out
int
pop
adc
mov
out
xor
adc
mov
out
xor
mov
out
cmp
adc
mov
out
and
mov
out
sub
adc
mov
out
adc
mov
out
sbb
adc
mov
out
sbb
mov
out
add
adc
mov
out
add
mov
out
or
adc
mov
out
or
mov
out
jno
pop
adc
mov
out
jge
pop
adc
mov
out
popa
sub
adc
mov
out
gs
adc
mov
out
imul
adc
sub
adc
mov
out
push
sub
adc
mov
out
push
sub
adc
mov
out
pop
sub
adc
mov
out
pop
sub
adc
mov
out
inc
sub
adc
mov
out
inc
sub
adc
mov
out
dec
sub
adc
mov
out
dec
sub
adc
mov
out
mov
pop
adc
mov
out
mov
pop
adc
mov
out
mov
mov
out
mov
mov
out
mov
mov
