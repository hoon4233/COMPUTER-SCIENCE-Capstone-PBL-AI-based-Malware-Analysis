add
repnz
mov
jb
mov
xor
or
pop
xchg
or
push
or
xor
shl
mov
mov
add
pop
mov
int3
sub
mov
sbb
add
xchg
mul
adc
mov
and
push
aas
aaa
inc
xchg
mov
or
scas
mov
inc
retf
dec
push
adc
push
xchg
mov
xor
xor
in
pop
push
dec
in
data16
imul
sbb
jbe
hlt
fdivr
sbb
pop
ins
inc
cmp
outs
fisttp
mov
dec
in
xchg
out
(bad)
pop
mov
add
sbb
inc
aaa
sbb
mov
jbe
cmp
xchg
idiv
nop
mov
inc
xor
dec
mov
cmp
lahf
dec
cld
cmp
sbb
xor
cmovne
(bad)
jle
dec
aas
push
mov
sub
inc
xor
adc
sbb
jno
adc
sbb
fs
or
xor
mov
and
inc
xor
mov
xchg
xchg
(bad)
aas
sbb
push
sub
inc
xor
pop
int3
dec
cmp
pop
aas
adc
xchg
sbb
dec
cld
mov
mov
pop
or
push
fcmovnu
dec
cld
int3
lahf
jbe
mov
xchg
cmp
jecxz
mov
xchg
leave
or
xchg
pop
popa
int3
jecxz
xor
test
imul
jecxz
xor
fadd
hlt
sbb
add
sbb
or
lahf
into
add
lahf
jbe
cmp
(bad)
and
jne
and
add
pop
push
sbb
xor
mov
add
sbb
call
inc
ss
push
or
inc
xor
clc
jg
sbb
(bad)
cmp
xchg
sbb
pop
pusha
mov
mov
mov
xor
add
in
pop
mov
and
jbe
movs
mov
xor
jmp
xor
inc
xor
cld
rol
xor
call
xor
push
mov
add
inc
xor
jae
loop
mov
sbb
out
and
push
mov
and
add
lds
imul
lods
lock
add
je
mov
sbb
inc
dec
sbb
cld
push
xor
inc
xor
xchg
sbb
push
cmp
inc
xor
mov
inc
push
add
xchg
(bad)
jmp
clc
js
sbb
rcl
add
sbb
add
push
mov
(bad)
in
mov
hlt
aam
aaa
repz
mov
jbe
imul
jbe
imul
mov
pop
cmp
inc
xor
mov
ror
push
mov
xchg
jne
enter
add
pop
imul
xchg
scas
dec
cld
arpl
xor
xchg
scas
dec
cld
arpl
jmp
mov
xor
push
inc
sbb
xor
jbe
imul
xchg
and
push
fstp
mov
xor
dec
add
push
pop
pop
mov
mov
add
sti
cmp
mov
scas
dec
cld
inc
fild
retf
cmp
bound
mov
test
or
mov
jbe
loop
jbe
loop
xor
cmp
fadd
pop
sbb
add
imul
mov
popf
jne
adc
push
mov
inc
add
jbe
jecxz
pop
pop
sbb
jbe
jecxz
(bad)
fcmovnu
retf
add
xchg
je
inc
loopne
call
mov
repz
xor
mov
xor
or
sbb
ret
jae
in
retf
cmp
mov
mov
and
sbb
hlt
aam
idiv
mov
dec
ficomp
xor
mov
xor
(bad)
bswap
imul
cmc
inc
sbb
jbe
jecxz
pop
int3
imul
jmp
gs
mov
hlt
lods
jp
sbb
cmc
inc
sbb
ret
jae
mov
mov
cmp
ins
inc
jnp
xchg
push
sbb
loope
fs
(bad)
pmuludq
cmc
and
cmps
mov
cmp
add
cmp
jecxz
ja
pop
mov
push
call
mov
pop
sub
cmp
xor
cmp
jecxz
ja
pop
mov
int3
div
mov
mov
mov
sbb
cmp
imul
aas
xor
cli
or
(bad)
adc
pop
inc
mov
mov
imul
add
jmp
sti
mov
in
mov
lahf
jp
jae
mov
xor
cmp
outs
push
cld
jbe
cmp
xchg
jae
sti
jecxz
or
mov
retf
(bad)
cmp
leave
cld
int3
jecxz
cld
int3
sbb
pop
ins
inc
jnp
xchg
push
mov
(bad)
mov
dec
in
mov
or
xchg
jecxz
cld
push
sub
dec
cld
int
cmp
sbb
cmp
int3
sbb
mov
sbb
inc
cmp
repnz
mov
retf
jne
fidiv
add
jecxz
add
push
cmp
fmul
cmp
sbb
cmp
xchg
cmps
cmp
jecxz
inc
or
into
jmp
int
cmp
mov
jecxz
cmps
retf
jecxz
cld
mov
jecxz
xchg
jecxz
cld
mov
cwde
mov
xor
dec
add
jecxz
pop
push
stc
xor
daa
dec
in
mov
loopne
cmp
or
pop
sbb
hlt
push
loopne
inc
retf
xchg
idiv
add
pop
and
xor
jmp
dec
cmp
(bad)
div
xor
dec
sbb
(bad)
cmp
push
jo
icebp
jge
pop
add
mov
dec
retf
cmp
mov
xor
inc
mov
inc
data16
xchg
imul
mov
inc
jnp
xchg
push
push
arpl
push
mov
loopne
sub
push
cmp
xchg
jo
icebp
xchg
out
add
pop
and
xor
jmp
dec
cmp
(bad)
div
xor
dec
sbb
(bad)
cmp
push
jo
icebp
jge
pop
add
mov
dec
retf
add
loopne
inc
retf
xchg
idiv
int3
sbb
mov
sbb
inc
cmp
mov
xor
pop
cli
(bad)
mov
dec
loope
fs
(bad)
adc
loopne
cmp
pop
cmp
xchg
jo
icebp
xchg
out
int3
sbb
mov
sbb
hlt
fadd
cmp
adc
or
dec
cmp
cmps
adc
int3
mov
fdiv
call
dec
cld
xor
leave
cmc
add
sub
jnp
xchg
push
push
arpl
push
mov
sub
push
mov
fisttp
inc
test
add
imul
dec
jecxz
inc
iret
xchg
out
pshufw
rcr
push
fld
dec
cld
int3
dec
cmp
pop
loope
(bad)
dec
cld
int3
lahf
jbe
fcom
cmp
xchg
jne
ins
inc
jnp
xchg
push
push
arpl
push
mov
add
inc
mov
push
mov
cmp
int3
imul
add
(bad)
sub
mov
gs
or
fadd
(bad)
rol
movs
test
mov
fidiv
pop
ins
inc
jnp
xchg
push
push
pusha
dec
in
inc
adc
jo
mov
add
call
lahf
nop
pop
mov
inc
pop
adc
mov
xchg
hlt
pop
int3
push
mov
jecxz
or
add
push
cmp
idiv
mov
sbb
pop
ins
inc
jnp
xchg
push
sbb
loope
fs
(bad)
or
dec
sub
xchg
jne
adc
sbb
add
mov
div
arpl
jno
pop
mov
mov
lock
dec
add
xchg
jne
repz
cmp
adc
fidiv
aaa
jbe
mov
loop
ins
mov
mov
(bad)
mov
jmp
fadd
xor
dec
fisub
xor
jecxz
push
xor
add
push
mov
add
mov
mov
mov
ret
jae
mov
mov
dec
pop
push
int3
jecxz
pop
add
in
pop
push
stc
or
xor
mov
pusha
dec
in
mov
les
ds
test
add
jecxz
add
xor
dec
test
add
mov
mov
adc
retf
xor
mov
adc
pop
mov
lock
lods
add
lahf
(bad)
lahf
nop
pop
mov
inc
add
lahf
nop
pop
mov
mov
popf
pop
mov
mov
push
adc
xor
cld
int3
sbb
mov
dec
dec
jbe
hlt
sub
xor
add
push
inc
xor
dec
push
(bad)
dec
cld
int3
lahf
jbe
push
jecxz
add
imul
pop
xor
add
mov
pop
pusha
sbb
mov
loop
jbe
cmp
dec
cmp
int3
dec
scas
mov
xor
sbb
xchg
sbb
dec
add
fwait
add
sbb
retfw
sbb
ds
test
add
jecxz
add
cmp
(bad)
(bad)
cmp
mov
test
add
pusha
push
inc
xor
adc
push
inc
xor
jg
pop
mov
jbe
xor
ss
add
pop
inc
mov
mov
(bad)
les
mov
mov
hlt
adc
pop
mov
jbe
loop
inc
cld
xor
and
mov
sar
pop
fs
(bad)
cld
fs
inc
iret
xchg
push
rcl
dec
mov
lahf
iret
push
imul
add
push
inc
xor
mov
daa
and
inc
iret
adc
push
jmp
jno
mov
dec
std
int3
dec
adc
mov
sbb
add
imul
add
xchg
test
int
(bad)
cmp
out
xor
sbb
ds
mov
mov
add
cmp
adc
inc
retf
xchg
div
or
or
xor
xchg
lahf
nop
pop
mov
mov
xor
push
mov
xchg
jno
ins
inc
jnp
xchg
push
sbb
loope
mov
xor
ret
add
jmp
xor
iretw
sbb
inc
cmp
xchg
xor
or
imul
lock
pop
dec
mov
test
dec
mov
mov
or
sub
or
sub
pop
mov
dec
add
pop
mov
pop
mov
inc
xor
test
xor
(bad)
cmp
idiv
mov
mov
fdiv
int3
jecxz
ret
inc
sbb
iretw
sbb
jle
sbb
push
xchg
dec
adc
mov
pop
dec
mov
(bad)
iretw
sbb
fdivr
pop
dec
mov
imul
cmp
imul
aas
or
aas
add
adc
mov
sub
cmp
pushf
mov
xor
aaa
xor
jecxz
adc
or
ja
jecxz
or
sub
hlt
pusha
outs
xor
jns
(bad)
adc
pop
sbb
pop
pop
sbb
add
mov
jae
mov
jb
pop
and
mov
fadd
pop
sbb
add
test
cmp
xchg
jae
sti
jecxz
or
mov
retf
imul
dec
dec
jbe
jecxz
sti
(bad)
add
jbe
mov
loop
xor
jno
dec
jbe
hlt
fsubr
cmp
(bad)
sti
cmp
xchg
div
mov
hlt
dec
outs
xor
push
mov
push
mov
pop
jno
add
in
push
lods
sbb
scas
les
xor
push
mov
xchg
jno
lock
dec
loop
add
push
inc
xor
shr
sbb
xchg
jecxz
cld
mov
jecxz
jmp
out
cld
push
jb
mov
mov
xor
xchg
jno
xor
pushf
jb
sbb
outs
pop
sbb
mov
xchg
push
jmp
jno
xchg
dec
std
int3
xchg
aaa
(bad)
int3
loop
push
fcomi
dec
cld
int3
lahf
jbe
mov
mov
stc
movs
out
pop
xor
cld
int
cmp
mov
jecxz
mov
arpl
cmp
adc
push
rcl
dec
mov
xchg
aaa
(bad)
loop
push
pop
jl
inc
xor
dec
push
mov
sbb
add
xchg
idiv
cmp
mov
add
sbb
xchg
jecxz
cld
arpl
loop
or
in
mov
adc
add
sbb
imul
add
test
pop
cli
retf
xor
cmp
je
psubq
loop
mov
mov
cmp
sbb
cmp
mov
jecxz
mov
arpl
cmp
adc
mov
xor
mov
xor
mov
sbb
or
mov
add
ficomp
pop
mov
mov
dec
std
int3
dec
pop
cmps
(bad)
xor
cmp
push
xchg
shld
loop
xor
mov
xor
add
cld
push
jecxz
add
adc
cmp
sbb
or
cdq
adc
int
repnz
mov
jecxz
imul
add
out
add
lahf
jbe
cmp
aaa
movs
int3
loop
lds
sbb
mov
xchg
mov
std
int3
sbb
ds
test
add
adc
shl
mov
lock
xchg
add
jbe
imul
lock
adc
hlt
cwde
cmc
int3
jecxz
(bad)
aas
and
xor
and
sbb
mov
mov
dec
std
int3
dec
pop
push
(bad)
xor
(bad)
cld
int3
sbb
ja
(bad)
stos
int3
loop
add
sbb
imul
sbb
push
xchg
pop
mov
fucomi
dec
cld
mov
mov
add
fadd
pop
movs
push
inc
xor
dec
push
fcmovnbe
inc
cld
int3
lahf
jbe
push
jecxz
add
push
dec
std
int3
sbb
mov
sahf
cld
lock
adc
hlt
adc
int3
jecxz
(bad)
aas
and
xor
and
sbb
mov
mov
dec
std
int3
dec
pop
mov
jecxz
xor
(bad)
cld
int3
sbb
ja
(bad)
stos
int3
loop
add
sbb
imul
sbb
push
xchg
pop
mov
push
jmp
mov
add
fadd
pop
movs
push
inc
xor
dec
push
fistp
cld
int3
lahf
jbe
push
jecxz
add
push
dec
std
int3
sbb
push
rcl
dec
mov
jbe
imul
adc
hlt
movs
test
xor
aas
and
xor
or
cdq
sbb
int
mov
xor
add
push
inc
xor
jb
pop
repnz
jecxz
xor
(bad)
cld
int3
sbb
ja
(bad)
stos
int3
loop
add
sbb
imul
sbb
push
xchg
pop
mov
(bad)
call
mov
add
fadd
pop
movs
push
inc
xor
dec
push
(bad)
jbe
push
jecxz
add
imul
mov
fs
and
int3
jecxz
(bad)
aas
and
xor
or
cdq
sbb
int
mov
xor
lock
mov
mov
sbb
int
mov
and
pop
mov
mov
jecxz
jmp
out
cld
push
mov
inc
xor
mov
push
test
add
fbstp
jecxz
cld
xor
test
lock
mov
mov
jecxz
mov
dec
cmp
int3
dec
out
mov
mov
pop
xor
xchg
xchg
aaa
fcmovne
loop
push
mov
xchg
idiv
mov
fbstp
jle
sbb
xchg
sbb
cld
int
mov
shl
ror
loop
add
jecxz
or
test
jno
dec
sbb
gs
cdq
sub
int
movs
add
cdq
adc
int
mov
xor
xchg
xchg
aaa
fwait
int3
loop
push
mov
jecxz
mov
jecxz
pop
mov
cdq
ss
int
cmp
mov
jecxz
imul
and
int
loop
or
cmps
xor
add
adc
cmp
mov
dec
std
int3
dec
cmp
arpl
mov
xor
mov
mov
sbb
xchg
sbb
cld
int
loop
mov
dec
std
int3
dec
cmp
int3
dec
mov
cmp
jg
xor
lock
mov
fdiv
aas
xchg
jecxz
cld
arpl
dec
push
mov
xchg
idiv
mov
add
jmp
mov
xchg
jno
dec
loopne
or
fdiv
out
loop
push
mov
jecxz
mov
jecxz
daa
mov
sub
iret
push
adc
xor
mov
fsubr
add
lahf
pop
repz
loop
add
test
ficom
pop
mov
mov
dec
std
int3
dec
pop
xor
mov
not
xor
xor
mov
xor
add
neg
add
popf
inc
retf
jbe
mov
xchg
dec
std
int3
xchg
aaa
dec
loop
push
pop
jns
inc
xor
dec
push
(bad)
fiadd
xor
fstp
xchg
dec
std
int3
push
mov
mov
dec
std
int3
xchg
aaa
xchg
int3
loop
mov
dec
aas
mov
jecxz
cld
mov
mov
add
sbb
cmps
mov
jecxz
out
and
mov
sar
cld
fs
(bad)
cld
xor
inc
iret
adc
mov
xor
dec
add
sbb
xchg
je
loop
sbb
xchg
xchg
mov
daa
and
inc
iret
adc
mov
xor
mov
mov
dec
std
int3
dec
cmp
arpl
cmp
adc
mov
xor
dec
add
std
mov
xor
jmp
jbe
add
push
jmp
jno
hlt
cdq
ret
jecxz
add
jecxz
xchg
dec
cld
mov
jecxz
mov
lahf
pop
adc
sbb
lock
xchg
pop
jae
loop
sbb
cmp
mov
mov
xor
pop
mov
dec
cmp
dec
(bad)
mov
or
sbb
hlt
rcl
dec
mov
lahf
iret
push
adc
data16
adc
aas
xchg
je
loop
sbb
xchg
xchg
mov
daa
and
inc
iret
adc
mov
xor
dec
add
mov
xchg
dec
cld
arpl
cld
xchg
dec
std
int3
xchg
aaa
xchg
loop
push
mov
xchg
idiv
mov
fbstp
jle
sbb
xchg
sbb
add
packsswb
loop
or
jg
xor
mov
xor
ss
xor
mov
dec
dec
mov
jecxz
cld
(bad)
cld
int3
lahf
jbe
mov
inc
dec
dec
popf
jno
cmp
or
mov
add
cdq
inc
cld
int
mov
xor
pop
int3
test
aas
xchg
jecxz
cld
arpl
jno
aas
xchg
jecxz
cld
arpl
xchg
imul
xchg
aas
dec
loop
cmp
repnz
mov
retf
sti
int3
loop
sbb
scas
add
jecxz
pop
int3
loope
mov
dec
cmp
mov
loop
push
fild
jbe
pop
sbb
xchg
jecxz
cld
arpl
jno
aas
xchg
jecxz
cld
arpl
js
xor
(bad)
and
mov
mov
mov
cdq
xor
int
loop
add
in
mov
cdq
jmp
cdq
sbb
int
cmp
or
mov
cld
mov
jecxz
mov
jecxz
or
jecxz
mov
jecxz
or
cdq
pop
cld
int
cmp
or
mov
cld
mov
inc
cld
int
mov
xor
aaa
dec
loop
add
jmp
mov
xchg
jno
mov
dec
std
int3
dec
cmp
int3
dec
mov
std
int3
sbb
(bad)
cdq
(bad)
cld
int
loop
add
in
mov
data16
int
mov
aas
xchg
aaa
xlat
int3
loop
push
mov
xchg
aaa
fcmovne
loop
push
mov
xchg
aaa
(bad)
loop
push
mov
xchg
push
jmp
jno
mov
dec
std
int3
dec
cmp
int3
dec
mov
cld
ins
inc
jmp
out
jecxz
xchg
or
add
mov
xor
addr16
sbb
out
daa
dec
in
mov
clc
mov
aaa
xor
mov
add
fcomi
push
sbb
add
sbb
imul
add
pop
fiadd
xor
inc
cld
int3
lahf
pop
inc
ret
hlt
pop
dec
cld
int3
jecxz
call
xor
add
jns
les
test
retf
sbb
jle
xchg
dec
xor
xchg
(bad)
(bad)
scas
jne
iret
jecxz
cld
int3
inc
in
pop
mov
mov
and
icebp
sbb
push
mov
and
dec
hlt
aam
idiv
mov
pop
mov
xor
imul
add
fadd
(bad)
add
xchg
jne
(bad)
rol
xor
shl
sbb
loope
mov
and
repz
test
add
mov
add
xchg
inc
add
xchg
je
push
add
inc
xor
or
xchg
or
sbb
jb
mov
xor
add
sbb
add
mov
mov
inc
xor
mov
xor
dec
add
sbb
mov
mov
int3
cmp
xchg
xchg
cmp
sub
arpl
sbb
cld
ss
jb
or
jecxz
pop
cmp
sbb
mov
or
mov
mov
stos
pushf
jb
repnz
xor
add
sbb
call
pop
sahf
jb
mov
or
dec
push
or
inc
in
pop
inc
mov
cmc
mov
xor
add
out
add
jecxz
ja
pop
mov
ss
inc
xor
add
fcomp
xor
add
mov
xor
adc
mov
pop
xor
jecxz
cmc
ss
inc
xor
mov
pop
add
sbb
add
mov
sbb
dec
cld
int3
jmp
inc
sbb
add
popf
je
push
sbb
cmp
sub
inc
stos
pop
mov
jae
repz
dec
jmp
inc
sbb
add
xchg
inc
sub
xchg
je
ds
inc
xor
repz
sbb
add
stos
dec
cld
int3
jmp
inc
sbb
add
popf
pop
or
mov
ds
inc
xor
jne
ja
repz
sbb
add
xchg
dec
cld
int3
jecxz
ja
pop
mov
ss
inc
xor
je
ds
inc
xor
xor
mov
xor
mov
sbb
hlt
aad
div
mov
xor
jae
push
add
sbb
out
scas
pop
mov
repz
mov
or
mov
xor
mov
cmp
add
mov
mov
or
mov
xor
mov
xchg
xor
sub
lahf
xor
mov
xor
mov
lods
pop
mov
ficom
jb
std
sbb
stos
pushf
jb
xchg
xor
mov
inc
mov
pop
mov
test
loop
jno
mov
sti
cmp
cld
pop
cdq
and
xor
jg
and
xor
ret
test
cmp
sub
xor
sbb
mov
sbb
sub
lock
inc
xor
mov
adc
mov
lods
pop
mov
ret
sub
mov
inc
fcom
add
dec
mov
xor
mov
ss
mov
lods
pop
mov
cmp
jbe
xor
retf
jb
mov
inc
mov
fwait
repz
ins
adc
cmp
xor
inc
enter
inc
mov
mov
jbe
mov
ret
xor
or
xchg
mov
xor
cld
ss
inc
xor
mov
test
ds
mov
inc
pop
adc
pop
mov
ss
inc
xor
mov
inc
or
jle
sbb
push
mov
dec
add
cmp
or
jbe
pushf
mov
cmp
cmp
jb
mov
xlat
xor
out
pop
mov
rcr
cmp
pushf
iret
stc
imul
or
in
fwait
repz
mov
add
imul
push
aas
mov
add
and
inc
xor
mov
mov
mov
add
sbb
fdiv
sbb
es
mov
add
imul
push
aas
mov
add
mov
inc
xor
mov
mov
xor
or
mov
fmul
sbb
mov
sbb
retf
sbb
adc
mov
pop
in
pop
cli
(bad)
mov
dec
loop
mov
or
ja
mov
aad
idiv
mov
test
add
or
hlt
les
cmp
pop
invd
inc
xor
sub
outs
mov
or
dec
pop
jb
sbb
mov
mov
add
jmp
mov
cmp
pop
and
inc
xor
push
ins
sbb
mov
pop
push
or
dec
pop
inc
ins
sbb
mov
pop
inc
or
dec
pop
ss
sbb
mov
ins
inc
jnp
xchg
push
sbb
loope
cmps
imul
les
ror
(bad)
mov
sbb
xchg
mov
cld
es
adc
fcomi
jmp
sbb
add
fbstp
data16
inc
fwait
xchg
div
hlt
pop
inc
inc
xor
sbb
mov
xor
xlat
push
jecxz
ja
pop
mov
push
int3
mov
jmp
push
lock
xlat
xlat
xor
neg
xor
add
pop
outs
add
sbb
mov
(bad)
(bad)
cmp
xchg
jno
ss
mul
int3
sbb
mov
sbb
inc
sbb
add
movs
fstp
sbb
loopne
pop
es
fcomi
mov
sbb
add
popa
push
mov
or
xor
lock
xchg
imul
arpl
xor
dec
dec
push
mov
aas
inc
scas
dec
fadd
mov
sbb
add
fadd
scas
jge
add
imul
imul
sbb
push
inc
test
add
dec
jbe
jbe
imul
jecxz
out
rol
xor
loopne
pop
and
fcomi
out
add
jecxz
ja
pop
mov
jbe
loop
inc
lods
aas
inc
xlat
dec
dec
push
mov
pop
cmps
pop
sbb
pop
ins
inc
jnp
xchg
push
sbb
jne
iret
cmp
(bad)
mov
cld
inc
data16
xchg
neg
mov
adc
inc
ret
xchg
call
mov
call
out
mov
jbe
imul
xchg
imul
arpl
(bad)
sti
pop
sbb
inc
(bad)
dec
fdivr
int3
imul
neg
sbb
outs
iret
or
jno
mov
sbb
sbb
jne
ss
(bad)
or
dec
push
and
enter
push
mov
cmp
ins
aad
push
mov
dec
in
mov
adc
inc
test
add
jecxz
mov
and
jbe
adc
add
(bad)
cld
xor
jbe
adc
add
(bad)
cld
xor
jbe
adc
add
(bad)
cld
xor
jbe
adc
add
(bad)
cld
xor
or
push
mov
xor
mov
mov
and
inc
int3
sbb
mov
jecxz
mov
sbb
mov
daa
and
add
sbb
stc
jns
add
and
xchg
mov
xor
mov
rol
stc
mov
mov
test
movs
cmp
imul
pop
cmp
mov
push
hlt
mov
xor
or
pop
dec
push
ss
inc
xor
outs
sbb
or
dec
dec
push
es
push
inc
xor
jmp
inc
mov
mov
jecxz
push
and
dec
sbb
fwait
shl
pop
dec
sbb
cmp
xchg
not
mov
in
jmp
xchg
out
mov
sbb
call
int3
ja
pop
mov
mov
(bad)
pop
mov
inc
adc
inc
int3
sbb
dec
cld
ss
mov
retf
push
xor
xor
in
jmp
pushf
mov
retf
lahf
pop
add
sub
sti
mov
mov
test
mov
pop
push
mov
inc
pop
cmp
mov
mov
bndldx
add
aas
push
or
xor
aaa
lahf
jb
mov
sbb
or
mov
push
xchg
dec
dec
mov
mov
inc
inc
cmp
mov
mov
bndldx
sbb
xor
xor
in
jmp
adc
xor
sbb
add
cmc
mov
xor
cmp
cmp
xchg
out
ss
fwait
shl
les
jmp
xchg
idiv
mov
pop
mov
retf
lahf
pop
pop
mov
sbb
aas
or
in
or
mov
jp
dec
sbb
xor
xor
in
jmp
pushf
mov
retf
lahf
pop
pop
cmp
mov
mov
or
xor
ds
sbb
add
pop
stos
imul
push
and
mov
mov
mov
aaa
or
or
mov
xor
xor
inc
jnp
xchg
push
sbb
loope
fs
ja
pop
mov
inc
adc
pop
add
pop
add
and
int3
hlt
mov
xor
or
mov
xor
inc
mov
pop
mov
or
(bad)
fcmovnu
cmc
mov
xor
(bad)
mov
sbb
mov
or
loope
xchg
mov
adc
cmp
xor
loop
mov
dec
cld
push
mov
xchg
or
sbb
add
(bad)
mov
adc
mov
(bad)
mov
sbb
iret
mov
mov
outs
pop
call
mov
add
sti
mov
int3
cmp
xor
mov
mov
add
adc
add
clc
outs
cmp
xor
fwait
sar
int3
xor
aaa
xchg
idiv
cmc
sbb
add
jecxz
ja
pop
mov
sti
jecxz
sti
mov
int3
xor
aaa
xchg
idiv
cmc
sbb
aaa
and
push
cmp
out
repnz
mov
pop
or
mov
iret
jecxz
xor
in
pop
push
stc
or
sbb
jmp
inc
mov
pusha
dec
in
in
in
cld
cmc
cdq
push
fmul
jecxz
jmp
inc
mov
push
sbb
add
jmp
int3
sbb
dec
cld
xor
mov
mov
push
fmul
jecxz
jbe
adc
shl
cld
mov
mov
(bad)
pop
mov
inc
push
xor
xor
or
cdq
inc
in
int3
jecxz
aas
ss
inc
xor
mov
cmps
out
pop
cld
int3
xchg
daa
stos
in
jecxz
push
ds
inc
xor
stos
push
mov
cmps
mov
cld
int3
xchg
mov
arpl
daa
lock
dec
push
ds
xor
loope
xchg
daa
cmps
in
jecxz
cld
pop
or
call
mov
cmps
mov
mov
adc
inc
in
int3
jecxz
or
cdq
inc
in
int3
jecxz
ret
sub
cmps
lock
adc
dec
int3
jecxz
lds
sbb
mov
out
pop
cld
int3
fst
mov
cmps
and
cwde
sub
xor
cld
int3
fst
mov
pop
mov
cmps
enter
jecxz
ja
pop
mov
mov
ins
cld
int3
sbb
xchg
dec
cld
int3
xchg
aaa
fucomi
jecxz
cld
ss
daa
xlat
in
jecxz
mov
fstp
bnd
jae
cmp
add
pop
and
mov
scas
imul
cmc
lahf
inc
add
cli
mov
xchg
cmc
xor
mov
neg
jecxz
jne
xchg
aaa
xchg
jecxz
push
fild
add
jecxz
ja
pop
mov
xchg
lock
cld
int3
sbb
(bad)
xor
imul
mov
int3
test
dec
mov
ret
dec
cld
fist
dec
cld
int3
lahf
jbe
mov
push
ins
cld
int3
sbb
sahf
mov
dec
cld
fcomp
cld
mov
fst
xor
mov
cmps
xor
aaa
daa
push
mov
inc
adc
mov
xor
or
mov
xor
mov
sbb
xchg
push
xor
xor
add
sbb
mov
imul
push
aaa
out
fsub
dec
add
sbb
ins
cld
int3
xor
xor
xchg
repz
cld
cmp
out
cld
int3
jecxz
push
inc
test
add
test
pop
cmp
jmp
daa
lock
dec
ret
cmp
es
inc
xor
dec
adc
cmp
repnz
mov
jmp
add
cmp
and
dec
cld
mov
jecxz
loope
xchg
imul
push
jae
xor
(bad)
push
(bad)
xor
xor
aaa
neg
jecxz
or
mov
xor
cld
ss
pavgb
jecxz
add
ficomp
pop
mov
fwait
dec
mov
mov
jecxz
shl
mov
xor
mov
lahf
jo
xor
cmp
mov
jecxz
xchg
stos
ret
mov
scas
add
xchg
aaa
xchg
in
jecxz
mov
xchg
daa
xchg
in
jecxz
add
xchg
aaa
xchg
in
jecxz
mov
xchg
aaa
xlat
in
jecxz
mov
jbe
mov
dec
dec
mov
ret
dec
cld
fstp
add
xchg
aaa
xlat
in
jecxz
cmp
imul
cld
int3
xchg
aaa
mov
jecxz
add
pushf
pavgb
jecxz
add
fiadd
xor
xchg
imul
jecxz
ret
loopne
cmps
movs
ins
cld
int3
fstp
popa
je
add
sbb
xchg
lahf
ret
dec
cld
fadd
lock
daa
lock
dec
ret
cmp
sbb
cmp
es
inc
xor
add
shl
cld
repnz
mov
daa
or
xchg
(bad)
repz
cld
pop
sbb
add
dec
pop
ds
mov
adc
mov
xor
cmp
sbb
mov
adc
push
cmc
mov
xor
or
or
and
add
sbb
xchg
repz
cld
mov
sbb
sbb
aas
inc
xor
cmp
cmc
cdq
adc
int3
jecxz
sbb
cmp
mov
sbb
sub
pushf
mov
inc
add
repz
mov
or
pop
mov
pushf
mov
inc
push
cmp
mov
mov
or
or
jg
ss
add
nop
ret
repnz
mov
xchg
push
fxch
jecxz
xchg
adc
xor
mov
sub
jmp
xchg
div
aaa
xchg
aaa
out
jecxz
call
cmp
aaa
neg
jecxz
add
xor
mov
fmul
jecxz
jmp
mov
test
jae
xor
dec
cld
cmc
sbb
add
sbb
jbe
pushf
mov
xor
add
imul
daa
pushf
mov
aaa
sbb
add
imul
ja
pop
pop
retf
cmp
aaa
mov
repz
or
ja
adc
shl
cld
arpl
pop
fucomip
jecxz
cld
xchg
ins
cld
int3
hlt
(bad)
cli
int3
jecxz
(bad)
aas
pushf
pavgb
jecxz
add
xor
xor
dec
ret
cmp
repnz
mov
rcr
mov
iret
xchg
ss
fcmovnb
dec
cld
mov
call
maskmovq
jecxz
add
sbb
jno
jecxz
ja
pop
mov
sbb
cdq
inc
in
int3
jecxz
or
cdq
inc
in
int3
jecxz
ret
sub
cmps
lock
adc
sub
jecxz
pop
ins
inc
jnp
xchg
push
sbb
loope
fs
out
or
pop
dec
std
add
xchg
sbb
xor
je
int3
sbb
xchg
pop
mov
and
add
mov
test
push
sar
inc
not
push
push
cdq
cmovno
movs
mov
cmps
mov
mov
inc
xor
inc
cmps
mov
dec
push
or
or
(bad)
or
pushf
idiv
xor
mov
mov
loop
call
test
cmp
push
jbe
pushf
idiv
aaa
idiv
or
jno
(bad)
(bad)
xor
adc
xor
add
out
or
fstp
add
sbb
inc
retf
call
xor
add
xor
jb
xor
popa
cmp
icebp
add
fdiv
inc
inc
sbb
inc
int3
sbb
cmp
mov
mov
leave
sbb
or
lahf
dec
inc
dec
sbb
inc
int3
sbb
inc
inc
xor
(bad)
cmpxchg
mov
retf
sbb
pop
mov
dec
add
xor
mov
ret
xor
ds
mov
inc
sbb
inc
int3
sbb
add
sbb
or
pop
mov
inc
sbb
inc
int3
sbb
inc
into
sbb
mov
cld
cmc
pop
dec
add
or
add
out
or
rol
xor
sbb
dec
add
clc
xor
mov
add
adc
push
lahf
mov
xor
xor
or
pop
dec
pop
ins
inc
jnp
xchg
push
push
gs
cmp
cmps
add
out
push
xor
ja
mov
pop
jecxz
add
dec
fadd
fistp
loopne
xor
repnz
mov
retf
call
outs
imul
or
int
mov
fucomip
pop
push
stc
or
adc
jmp
dec
mov
gs
or
mov
jmp
mov
xchg
jne
retf
xchg
jne
inc
adc
cld
inc
adc
xchg
cld
dec
cld
arpl
movs
push
xor
xchg
cld
dec
cld
arpl
mov
(bad)
and
jne
lds
retf
cmp
mov
xor
test
sbb
add
imul
pop
lock
cmp
mov
mov
stos
ins
add
add
jbe
imul
fadd
pop
pop
fiadd
xor
cld
inc
adc
push
popa
sbb
mov
lahf
dec
cld
inc
add
mov
sbb
sti
(bad)
sti
cmp
xchg
jne
repz
imul
sbb
mov
lahf
jb
arpl
jmp
dec
mov
mov
mov
mov
dec
adc
(bad)
pop
inc
call
mov
call
in
sti
dec
mov
gs
pop
push
xor
inc
iret
div
hlt
inc
in
pop
cli
(bad)
mov
dec
loope
mov
cmp
xor
cmp
pop
sbb
xor
mov
aaa
jbe
imul
fmul
cmp
enter
cmp
mov
sti
or
int3
imul
imul
sbb
mov
cmp
mov
dec
inc
mov
mov
inc
in
rcr
push
iret
dec
loope
inc
adc
jmp
dec
mov
pop
sbb
inc
iret
dec
fadd
pop
in
push
inc
xor
mov
(bad)
les
push
arpl
mov
ins
inc
jmp
out
lock
push
xchg
or
and
hlt
aam
idiv
mov
pushf
mov
xor
imul
sbb
ret
int3
imul
sti
(bad)
sti
cmp
xchg
jne
int
mov
pop
push
fadd
pop
sbb
jmp
dec
mov
pop
sbb
inc
iret
dec
dec
jbe
jecxz
pcmpgtw
mov
sbb
sti
sbb
cmp
gs
fs
xor
ret
jae
in
retf
cmp
bound
push
mov
loopne
popa
mov
xchg
xchg
add
sub
mov
test
mov
lock
mov
pusha
inc
push
int3
imul
add
popf
(bad)
call
daa
push
inc
xor
fcom
sbb
(bad)
and
add
sub
pop
mov
addr16
mov
mov
mov
jg
sub
mov
aaa
and
ret
dec
fisubr
rcr
jmp
dec
mov
mov
mov
shl
cmp
inc
in
pop
cli
(bad)
mov
dec
loope
fs
out
or
loopne
adc
arpl
inc
iret
fcom
jecxz
sbb
mul
mov
add
pop
adc
mov
arpl
jno
pop
loop
sbb
xor
cmc
cmp
outs
pop
imul
loopne
xor
inc
iret
xchg
jo
icebp
xchg
out
ins
inc
jmp
out
lock
push
gs
or
jmp
push
lock
inc
rcr
mov
push
hlt
mov
push
clc
mov
dec
out
aas
ss
lock
out
pop
mov
(bad)
(bad)
cmp
xchg
jno
dec
or
jbe
jp
inc
rol
mov
mov
inc
int3
neg
add
(bad)
cmp
xchg
jno
test
or
pop
mov
mov
lods
add
xor
push
mov
mov
adc
xor
outs
int3
sbb
(bad)
enter
or
pop
mov
jbe
pop
and
sbb
mov
loop
mov
sbb
repz
std
xor
sbb
sbb
or
jbe
xchg
push
rcl
cmp
adc
or
push
fwait
rcr
fild
xor
lods
icebp
sbb
mov
mov
xchg
jp
jbe
mov
loop
pop
data16
cmp
adc
or
loopne
sbb
mov
lods
icebp
sbb
mov
mov
mov
shl
pop
push
mov
pop
add
mov
aad
arpl
movs
mov
jae
and
mov
inc
and
mov
mov
xor
mov
xchg
mov
mov
inc
mov
pop
and
mov
and
and
mov
xchg
mov
sbb
mov
mov
pop
and
mov
mov
xor
mov
xchg
mov
mov
cmp
mov
xchg
mov
mov
bound
jnp
mov
loope
rcl
xchg
mov
sbb
add
and
push
pop
mov
push
cmp
inc
xor
xchg
mov
mov
push
cmp
xchg
mov
mov
xchg
or
and
mov
fdivr
cmp
mov
xchg
inc
aam
xchg
mov
mov
xchg
push
cmc
add
into
jecxz
adc
lea
retf
inc
mov
jno
(bad)
jno
cmc
or
mov
movs
mov
jae
and
mov
xchg
mov
mov
or
and
mov
xchg
repnz
mov
sub
mov
xchg
mov
mov
push
mov
xchg
jp
mov
mov
xchg
mov
mov
pop
mov
mov
and
add
xchg
mov
mov
xchg
mov
sbb
or
and
mov
std
lock
mov
sub
mov
xchg
mov
mov
push
mov
xchg
jp
mov
mov
xchg
mov
mov
pop
mov
mov
and
add
xchg
mov
mov
xchg
mov
mov
fisub
mov
push
mov
dec
in
mov
adc
mov
jne
iret
icebp
hlt
cmp
mov
dec
dec
xor
jp
inc
ret
sbb
jmp
mov
arpl
sub
int3
jecxz
mov
xchg
out
mov
dec
add
je
leave
sbb
sub
dec
std
add
xchg
imul
mov
int
xor
mov
cli
sbb
sub
retf
mov
sub
retf
mov
or
je
mov
push
loopne
inc
fist
lods
aas
inc
outs
cmps
aas
dec
imul
cmp
mov
sub
xchg
mov
rcr
add
cmp
xor
repnz
or
mov
out
leave
mov
lods
enter
mov
add
mov
add
adc
enter
xor
loop
jbe
mov
shl
cmp
sbb
add
mov
hlt
enter
xor
pop
lahf
je
mov
dec
xor
int3
pop
inc
or
pop
mov
sub
inc
jmp
out
lock
push
gs
or
and
stos
cwde
add
hlt
fmul
sbb
push
xor
jb
mov
(bad)
jae
fisttp
sbb
cmp
push
jo
repz
mul
mov
repz
test
sbb
inc
ror
cmp
or
int3
jecxz
(bad)
cmp
sub
sbb
or
popa
pop
ret
cmp
push
mov
inc
xor
cmps
ds
mov
std
mov
in
test
ret
dec
aaa
push
mov
inc
xor
cmovno
dec
pop
ret
mov
aas
jbe
mov
pop
mov
mov
add
loop
mov
add
mov
dec
call
inc
sbb
mov
pop
idiv
mov
sbb
adc
aam
inc
xor
mov
mov
cmp
rcr
enter
xchg
idiv
fadd
or
pusha
sbb
hlt
rcl
cmp
xor
mov
ror
xor
mov
out
lock
sbb
jno
mov
outs
popa
jmp
push
mov
mov
push
mov
mov
jecxz
sar
ret
mov
mov
sub
pop
inc
xor
inc
xor
dec
mov
adc
or
xchg
(bad)
fisttp
je
mov
xor
jb
jno
loop
rcl
add
mov
inc
call
add
mov
pop
div
mov
sbb
adc
aam
inc
xor
mov
mov
cmp
rcr
enter
xchg
div
fmul
inc
mov
ror
xor
mov
out
lock
sbb
jno
mov
outs
ins
mov
pop
pop
mov
or
dec
pop
rcl
xchg
cmps
xchg
shl
bound
or
cmovno
adc
fmul
push
mov
mov
jno
cmp
out
mov
mov
xor
sbb
or
pop
pop
push
mov
mov
pop
dec
jecxz
(bad)
cmp
imul
jbe
imul
mov
int3
imul
add
movs
add
jbe
mov
loop
inc
cld
in
inc
clc
pop
jle
sbb
cld
inc
clc
pop
sbb
mov
fcmovnu
cli
add
sub
or
or
mov
rcl
in
pop
push
stc
xor
sub
mov
pusha
dec
in
in
sub
jo
mov
push
mov
xchg
je
ss
mov
xor
mov
ret
sub
or
xor
sar
mov
jmp
retf
leave
mov
lahf
jne
mov
loop
cld
cmc
pop
dec
add
xor
js
mov
test
mov
bound
dec
add
in
sub
xchg
bound
fidiv
rcl
ds
loop
cld
mov
dec
add
push
lds
sbb
push
js
mov
icebp
jmp
ss
cld
add
aaa
add
mov
lods
pop
xor
xchg
loop
cld
arpl
jno
(bad)
in
pop
mov
mov
dec
cld
int3
dec
pop
ss
mov
xor
imul
je
add
pop
aas
xchg
loope
cld
arpl
pusha
inc
xor
xchg
loope
cld
int3
imul
dec
xor
add
jecxz
imul
mov
pop
in
inc
xor
pop
test
push
mov
mov
fimul
(bad)
loope
cld
fcmovnu
hlt
add
jecxz
ja
pop
mov
pop
shr
xchg
aaa
cld
int
dec
push
(bad)
aaa
clc
into
jecxz
push
pop
shr
xchg
aaa
cld
int
dec
push
pop
sbb
add
sbb
cmp
hlt
aad
aaa
jmp
jecxz
mov
jecxz
ja
pop
mov
lock
lock
ins
inc
xor
dec
push
pop
sbb
add
sbb
imul
add
ins
inc
xor
xor
xor
xor
ins
pusha
mov
ins
inc
jmp
out
lock
jbe
mov
cmp
sbb
cmp
int3
sbb
mov
sbb
sti
(bad)
sti
cmp
xchg
jne
push
loopne
mov
loop
jbe
loop
xor
cmp
fadd
pop
sbb
add
imul
mov
lahf
jp
jae
mov
xor
mov
dec
jbe
dec
fadd
pop
sbb
jbe
jecxz
(bad)
(bad)
sti
add
popf
pop
cmp
sbb
cld
inc
loopne
(bad)
jnp
mov
ins
inc
jnp
xchg
push
push
mov
pop
adc
mov
inc
or
je
mov
xor
daa
jecxz
adc
imul
xor
in
pop
lock
cmp
bound
in
das
popf
mov
jmp
mov
cmp
pop
sbb
pop
mov
imul
add
sbb
(bad)
sub
shl
push
arpl
mov
retf
sub
idiv
arpl
mov
xor
sbb
add
dec
jbe
jecxz
or
inc
cli
add
adc
jb
add
(bad)
sbb
imul
cld
inc
loopne
outs
jnp
mov
repz
pop
ds
mov
repz
mov
jecxz
(bad)
(bad)
cli
add
sub
jno
mov
dec
in
inc
or
inc
sub
inc
sub
xor
ins
pop
mov
cmc
sbb
mov
xchg
idiv
arpl
xor
add
imul
or
push
mov
pop
sbb
add
imul
or
push
pop
ret
mov
repz
mov
sbb
or
pop
stos
call
xor
mov
inc
in
retf
cmp
bound
mov
jne
push
sbb
or
addr16
xor
and
sbb
add
dec
pop
mov
jbe
cmp
add
cmp
xchg
loopne
inc
xor
add
div
imul
sbb
add
fadd
pop
jge
inc
xor
call
jmp
pop
mov
les
mov
adc
jb
and
pop
mov
jnp
mov
mov
popf
inc
in
sbb
pop
ins
aad
mov
mov
fnstsw
inc
pop
sbb
push
push
ret
lock
xchg
push
push
pusha
dec
in
inc
adc
pop
aas
fcomi
jmp
cmp
mov
xor
cmp
fsubr
xor
or
in
(bad)
inc
add
dec
dec
jbe
hlt
call
(bad)
aas
xchg
dec
sub
xchg
out
cmc
sbb
ret
xor
fild
xor
jbe
adc
mov
retf
push
xor
xor
pop
mov
inc
iret
cdq
xchg
add
xchg
push
fsubr
cmp
xor
loop
xchg
pop
mov
mov
sahf
aam
xor
inc
add
dec
dec
jbe
hlt
int3
inc
xor
inc
iret
xchg
jo
icebp
xchg
out
mov
push
add
inc
jmp
out
lock
push
gs
cmp
fcomi
repz
cmp
add
add
push
fisttp
add
xchg
idiv
mov
fstp
xor
mov
xor
or
repz
adc
add
add
add
popf
fcomip
adc
mov
push
fcomi
std
xor
dec
cmp
iret
std
cmp
mov
mov
sbb
call
rcl
in
sbb
sbb
mov
(bad)
(bad)
jae
xor
xor
push
dec
cmp
dec
ficomp
pop
mov
(bad)
add
lahf
jbe
push
jecxz
std
cmp
idiv
or
jno
xchg
div
ins
inc
jmp
out
push
mov
xor
int3
inc
xor
push
mov
jae
aaa
lahf
pop
test
mov
mov
mov
dec
std
int3
dec
dec
jbe
hlt
sub
int3
jecxz
(bad)
cmp
inc
mov
adc
jb
sbb
mov
mov
dec
cld
int
mov
ds
pop
stos
jno
mov
repz
mov
jbe
hlt
cld
inc
xor
xchg
jecxz
cld
mov
pop
sti
int3
loop
mov
xchg
pand
loope
push
int3
cmp
mov
sbb
push
pop
pop
pop
push
jno
mov
mov
dec
std
int3
popf
je
inc
sbb
cld
inc
adc
pop
xor
jmp
pop
mov
mov
fidivr
inc
cmp
dec
mov
lahf
jp
jae
mov
xor
mov
jbe
mov
sbb
jg
int3
lahf
jbe
pop
dec
ins
inc
xor
(bad)
or
xchg
test
pop
push
ins
inc
xor
pop
dec
loop
jmp
pop
mov
mov
mov
add
test
mov
mov
and
jno
dec
mov
jecxz
cld
fisttp
add
lahf
jbe
mov
ficomp
jbe
mov
cmp
add
sbb
and
out
add
movs
rol
xor
hlt
retf
mov
fs
fdiv
in
retf
pop
mov
mov
mov
add
test
mov
mov
and
jno
dec
mov
jecxz
cld
fucomi
test
lahf
jbe
pop
sub
xor
pop
dec
loop
jmp
pop
mov
mov
mov
add
test
mov
mov
and
jno
dec
mov
jecxz
cld
(bad)
jbe
(bad)
add
movs
mov
hlt
retf
push
dec
aas
pop
push
sbb
mov
stos
jmp
push
mov
jecxz
imul
aam
xor
(bad)
and
(bad)
daa
pop
push
ins
inc
xor
dec
push
pop
cmp
pop
dec
ja
mov
test
mov
fstp
test
movs
mov
hlt
retf
push
dec
pminub
rcr
cld
xchg
dec
std
int3
hlt
lock
xor
(bad)
cmp
jno
dec
mov
jecxz
cld
(bad)
test
lahf
jbe
fcomi
icebp
add
movs
mov
hlt
retf
push
dec
pminub
rcr
cld
xchg
dec
std
int3
hlt
mov
(bad)
cmp
jno
dec
mov
jecxz
cld
fucomi
icebp
add
lahf
jbe
fld
mov
hlt
retf
push
dec
aas
pop
mov
push
sbb
add
mov
in
or
hlt
sub
xor
(bad)
and
in
cdq
jle
into
jecxz
(bad)
icebp
add
movs
pop
add
sbb
hlt
retf
(bad)
in
pop
mov
mov
dec
dec
dec
pop
outs
jo
mov
mov
dec
dec
dec
dec
jbe
xchg
aaa
dec
loop
push
pop
int3
ins
inc
xor
jo
mov
idiv
xor
mov
cmp
add
sbb
and
add
add
movs
rol
xor
hlt
retf
mov
fs
fdiv
in
das
pop
mov
mov
mov
mov
xchg
je
ret
pop
mov
mov
mov
xor
mov
and
jno
dec
mov
jecxz
cld
fist
icebp
add
lahf
jbe
fcmovnbe
lock
movs
mov
hlt
retf
push
dec
pminub
in
pop
mov
xchg
dec
std
int3
hlt
pop
inc
xor
(bad)
cmp
adc
xor
or
sbb
call
mov
add
test
pop
(bad)
jno
mov
not
repz
cmp
pop
mov
jecxz
pop
mov
jecxz
imul
int3
inc
xor
(bad)
daa
hlt
in
inc
xor
or
sbb
call
mov
add
test
pop
jle
sbb
xor
pop
cmp
mov
cmp
add
sbb
adc
push
inc
xor
pop
dec
loop
jmp
pop
mov
mov
mov
add
test
mov
mov
adc
mov
xor
pusha
xor
call
dec
std
int3
dec
fidivr
fninit
repz
lahf
jbe
mov
xchg
add
add
sbb
cmps
mul
dec
cld
xor
std
add
sbb
xchg
sbb
cld
xor
mov
xchg
fmul
int3
sbb
jl
cdq
jbe
into
jecxz
xchg
jecxz
cld
or
sar
jbe
into
jecxz
mov
cmp
mov
mov
sbb
call
cmp
mov
mov
xor
inc
loope
div
dec
xchg
gs
in
mov
cld
int3
dec
ficomp
pop
mov
mov
cld
int3
dec
pop
push
sbb
xor
or
data16
hlt
aad
aaa
mov
cmc
jecxz
ret
int3
loope
or
mov
xor
xor
jecxz
cld
xchg
dec
std
int3
jecxz
sbb
jecxz
mov
dec
fisub
pop
mov
fild
repz
lahf
jbe
fninit
repnz
movs
mov
hlt
retf
push
dec
pminub
pop
mov
xchg
dec
std
int3
hlt
lods
inc
xor
(bad)
cmp
push
or
sbb
call
mov
add
test
pop
cli
jae
mov
not
repz
cmp
(bad)
mov
hlt
retf
push
dec
pminub
rcr
cld
xchg
dec
std
int3
hlt
jl
xor
(bad)
cmp
dec
xor
mov
mov
dec
std
int3
xchg
aaa
sti
int3
loop
cmp
adc
pushf
int
dec
mov
xchg
inc
hlt
aad
aaa
ret
int3
loope
mov
cmc
leave
add
sbb
inc
das
xchg
aaa
sti
int3
loop
jmp
mov
int3
jecxz
or
and
xor
xchg
je
jbe
mov
sti
sbb
cmp
adc
inc
xor
mov
xchg
aaa
out
int3
loope
cld
inc
or
pop
in
pop
mov
mov
dec
dec
dec
pop
sbb
mov
not
aas
mov
jecxz
cld
mov
dec
inc
mov
mov
inc
in
les
pextrw
dec
mov
sub
aaa
add
jecxz
push
cmp
aaa
(bad)
dec
mov
jecxz
jmp
daa
mov
mov
jecxz
jmp
in
cld
mov
mov
mov
dec
dec
jecxz
test
add
mov
jecxz
cld
mov
jecxz
imul
add
adc
xor
(bad)
sub
xor
xor
or
sbb
call
mov
add
test
pop
cmps
or
mov
not
repz
cmp
fild
add
movs
mov
hlt
retf
push
dec
pminub
in
pop
mov
xchg
dec
std
int3
hlt
enter
xor
cmp
test
sbb
or
sbb
call
mov
add
test
pop
push
or
mov
not
cld
fcmovnu
mov
xor
mov
mov
dec
std
int3
xchg
aaa
add
jecxz
push
int3
test
loope
sbb
dec
cld
mov
mov
std
int3
adc
dec
cld
int3
je
fnsave
dec
mov
jecxz
cld
fistp
lea
xor
mov
xor
sub
retf
push
dec
pminub
pop
mov
xchg
dec
std
int3
hlt
push
cmp
cmp
sub
xor
or
sbb
call
mov
add
test
pop
mov
not
repz
cli
cmp
mov
sbb
mov
stos
jmp
or
iret
adc
push
inc
xor
pop
dec
loop
jmp
and
imul
lock
test
pop
jp
sbb
xor
pop
ss
sbb
add
sbb
and
aas
mov
xor
sub
retf
mov
fs
fdiv
in
adc
mov
mov
mov
add
test
mov
mov
and
jno
dec
mov
jecxz
cld
fild
mov
xor
test
(bad)
push
sbb
mov
stos
jmp
or
iret
adc
ins
inc
xor
pop
dec
loop
jmp
and
jmp
and
add
test
mov
mov
and
jno
dec
mov
jecxz
cld
fcmovnbe
pop
xor
pop
xor
sub
retf
push
dec
aas
pop
jp
sbb
mov
stos
jmp
push
mov
jecxz
imul
les
xor
(bad)
and
jno
dec
mov
jecxz
cld
fistp
jbe
mov
ficomp
push
sbb
mov
stos
jmp
or
iret
adc
push
inc
xor
pop
dec
loop
jmp
and
imul
lock
test
pop
dec
push
sbb
xor
pop
push
push
sbb
mov
stos
jmp
or
iret
adc
push
inc
xor
pop
dec
loop
jmp
and
imul
lock
test
pop
adc
sbb
xor
xor
xor
fisttp
add
sbb
hlt
retf
push
dec
pminub
rcr
cld
xchg
dec
std
int3
hlt
push
aas
xor
(bad)
cmp
dec
push
mov
jecxz
imul
lock
adc
xor
(bad)
and
xor
xor
or
sbb
call
mov
add
test
pop
cmps
nop
add
pop
mov
xchg
dec
std
int3
hlt
and
xor
(bad)
cmp
cld
aas
xor
or
sbb
call
mov
add
test
pop
outs
nop
je
sbb
hlt
aad
aaa
ret
int3
loope
mov
hlt
test
xor
jmp
sbb
call
mov
mov
dec
(bad)
out
pop
mov
fist
mov
xor
mov
xor
sub
retf
push
dec
pminub
rcr
cld
xchg
dec
std
int3
hlt
mov
(bad)
cmp
jno
dec
mov
jecxz
cld
(bad)
mov
xor
mov
xor
sub
retf
push
dec
pminub
rcr
cld
xchg
dec
std
int3
hlt
cmp
sbb
(bad)
cmp
mov
mov
push
mov
xor
mov
adc
enter
or
sbb
call
dec
std
int3
dec
fidivr
fld
add
lahf
jbe
pop
int3
outs
inc
xor
pop
dec
loop
jmp
daa
mov
mov
mov
imul
je
add
pop
dec
jbe
hlt
mov
xor
xchg
jecxz
cld
mov
sub
sbb
mov
jecxz
cld
fistp
mov
mov
dec
std
int3
dec
loop
xchg
dec
std
int3
jecxz
jmp
loope
jmp
and
add
test
pop
cli
add
loopne
std
int3
hlt
adc
sbb
repz
cmp
pusha
hlt
and
xor
xchg
jecxz
cld
ins
inc
jmp
out
lock
mov
mov
cdq
dec
std
int3
jecxz
(bad)
cmc
pop
dec
add
daa
mov
imul
dec
std
int3
jecxz
jmp
es
mov
fcmovnu
add
outs
inc
xor
dec
push
pop
sbb
inc
repz
jecxz
(bad)
das
pushf
idiv
xor
sar
pop
mov
jns
lock
mov
mov
popa
repz
jecxz
aad
pop
mov
jmp
imul
xor
xor
xor
xor
outs
push
mov
ins
aad
push
mov
push
mov
pusha
dec
in
cwde
adc
jae
in
sti
mov
loope
cld
xor
mov
cmps
fdiv
jecxz
xchg
aaa
xchg
into
jecxz
mov
cmp
ss
aaa
(bad)
into
jecxz
mov
xor
imul
fist
add
xchg
out
mov
xchg
daa
mov
fld
test
xor
dec
cld
xchg
xor
sbb
push
cmp
dec
mov
mov
addr16
mov
mov
jecxz
sti
xor
cmp
gs
mov
xor
xchg
dec
cld
int3
test
pop
repnz
push
pop
fwait
into
jecxz
jmp
sub
mov
xchg
out
ss
aas
ja
jecxz
mov
mov
addr16
mov
mov
jecxz
hlt
push
cs
pop
sbb
inc
xor
or
xor
xchg
jmp
push
xor
adc
aas
xchg
hlt
mov
xor
push
push
sbb
push
(bad)
mov
xor
xor
xchg
je
fbstp
fidiv
xor
sbb
inc
cld
int3
lahf
jbe
cmp
(bad)
push
gs
adc
xor
ret
fiadd
add
hlt
mov
pop
xor
mov
dec
aas
xchg
hlt
shl
xor
cld
int3
test
dec
mov
loope
cld
int3
test
dec
mov
loope
cld
int3
test
in
mov
dec
cld
int3
dec
pop
dec
shl
xor
cmp
cmp
(bad)
push
gs
mov
xor
ret
(bad)
mov
xor
jno
aas
xchg
loop
cld
arpl
sbb
xor
sti
sbb
cmp
mov
jecxz
mov
dec
pop
xchg
or
jmp
repz
cld
mov
jecxz
inc
pop
sbb
xchg
hlt
movs
cmp
sbb
(bad)
das
xchg
dec
sub
xchg
jne
mov
dec
cld
int3
pop
mov
xor
aaa
out
jecxz
add
sbb
gs
cdq
pop
std
int3
jecxz
add
jecxz
ja
jp
xchg
loop
cld
xor
les
or
int3
jecxz
jmp
in
dec
cld
push
aaa
cmps
into
jecxz
push
mov
jecxz
imul
jbe
imul
loopne
cld
int3
dec
fadd
fucomi
xchg
xor
mov
xor
pop
stos
into
jecxz
jmp
das
mov
mov
fisttp
cmps
loope
cld
pop
push
ins
inc
xor
jno
aas
xchg
loop
cld
arpl
sbb
sbb
(bad)
and
aaa
jo
jecxz
add
xor
hlt
cmp
add
jecxz
imul
add
aas
xchg
xor
test
add
ja
add
pushf
aaa
jo
jecxz
add
jecxz
push
inc
aam
fadd
fiadd
dec
sbb
jmp
sub
dec
jecxz
ja
je
repz
cmp
sbb
imul
mov
mov
jecxz
push
fld
mov
pop
shl
mov
jecxz
jmp
mov
mov
add
xor
xor
scas
adc
xor
sub
mov
fcom
xor
xor
mov
mov
dec
cld
int3
dec
pop
pop
pop
sbb
mov
(bad)
sti
cmp
mov
das
mov
pop
sbb
mov
loope
cld
fcmovnu
add
into
jecxz
jmp
cs
mov
jecxz
or
inc
mov
mov
xchg
jne
ins
inc
jnp
aaa
sbb
mov
lahf
pop
adc
in
outs
or
mov
sub
(bad)
or
rol
gs
sub
(bad)
pand
jo
mov
or
scas
add
mov
jp
push
lds
mov
icebp
jp
push
(bad)
adc
push
iret
sbb
inc
add
adc
adc
dec
fadd
(bad)
je
fmul
add
sub
mov
cmps
fdivr
inc
ret
xchg
mov
aaa
xchg
neg
arpl
or
xor
(bad)
aas
jecxz
or
dec
pop
cmp
sbb
cld
inc
adc
inc
xor
cmp
sub
xchg
jne
inc
or
mov
loop
inc
xor
loopne
inc
and
loop
cmp
add
add
iret
sbb
inc
mov
mov
fcomi
add
xchg
idiv
arpl
push
pop
jmp
inc
xor
imul
sbb
lds
sbb
cld
gs
adc
xor
inc
retf
dec
in
add
call
inc
retf
inc
in
pop
cli
(bad)
mov
movs
(bad)
sbb
sbb
add
mov
gs
cmp
mov
cmp
sbb
cmp
mov
push
mov
xchg
jne
mov
push
cld
int3
pop
lods
add
xchg
aaa
mov
mov
jecxz
imul
add
fistp
or
adc
xchg
xor
add
movs
add
dec
dec
mov
cld
dec
cld
fist
jbe
cmp
(bad)
sbb
test
dec
jbe
hlt
pushf
xor
sbb
sti
(bad)
sti
cmp
mov
imul
les
pop
lods
add
xchg
aaa
mov
mov
jecxz
push
(bad)
add
adc
dec
sub
xchg
jne
int3
test
pop
ss
sbb
xor
mov
mov
cld
dec
cld
int3
imul
call
jp
mov
cdq
sub
jnp
xchg
push
mov
fisttp
in
mov
inc
inc
pop
mov
xchg
xor
xor
cmp
pusha
je
add
sbb
pop
add
mov
lahf
jp
jae
mov
xor
mov
jbe
mov
sbb
push
cld
int3
lahf
jbe
pop
dec
ins
inc
xor
inc
pop
sbb
xor
xor
movs
ja
add
fcmovu
dec
in
pop
mov
mov
push
cld
int3
dec
pop
add
sbb
xor
pop
loop
sbb
mov
stos
jmp
or
iret
pop
pop
in
push
inc
xor
dec
push
fninit
add
(bad)
mov
hlt
retf
push
dec
xor
mov
push
sbb
add
mov
in
imul
add
jecxz
jmp
das
mov
mov
mov
add
test
mov
mov
daa
je
jecxz
sbb
xchg
cld
dec
cld
arpl
sub
xor
(bad)
cmp
je
add
lock
jecxz
jmp
das
mov
mov
mov
add
test
mov
mov
daa
je
jecxz
sbb
xchg
cld
dec
cld
arpl
in
xor
sbb
(bad)
cmp
test
xor
or
sbb
call
fwait
jmp
das
mov
mov
add
test
popa
xchg
lsl
jecxz
push
pop
inc
outs
inc
xor
dec
push
fninit
add
lahf
jbe
int3
imul
jecxz
jecxz
imul
lock
jecxz
jmp
cs
mov
cmps
mov
jmp
mov
xchg
je
sub
add
test
mov
mov
daa
je
jecxz
sbb
xchg
cld
dec
cld
arpl
jl
xor
(bad)
cmp
jno
aas
xchg
cld
dec
cld
arpl
or
xor
(bad)
cmp
les
xor
or
sbb
call
cmps
imul
lock
jecxz
jmp
cs
mov
mov
add
jecxz
jmp
cs
mov
mov
mov
xchg
je
add
mov
mov
mov
xor
mov
sbb
lods
xor
sbb
pusha
xor
call
push
cld
int3
dec
ficomp
pop
mov
mov
cld
int3
dec
pop
push
add
xor
fisubr
in
pop
mov
mov
push
cld
int3
dec
pop
add
xor
pop
loop
sbb
mov
stos
jmp
or
iret
pop
pop
in
push
inc
xor
dec
push
fninit
add
lahf
jbe
pop
push
outs
inc
xor
dec
push
fcomi
add
lahf
jbe
mov
ficomp
add
mov
stos
jmp
or
iret
pop
pop
in
push
inc
xor
dec
push
(bad)
jbe
pop
push
ins
inc
xor
dec
push
(bad)
jbe
fstp
add
movs
mov
hlt
retf
push
dec
or
repz
mov
dec
pop
xchg
sbb
xor
xor
mov
imul
sub
mov
push
cld
int3
dec
pop
add
xor
pop
push
add
mov
stos
jmp
or
iret
pop
pop
in
push
inc
xor
dec
push
(bad)
add
lahf
jbe
pop
sbb
inc
xor
dec
push
fstp
add
lahf
jbe
(bad)
add
movs
mov
hlt
retf
push
dec
or
repz
mov
dec
pop
add
sbb
xor
or
sbb
hlt
aad
aaa
out
in
jecxz
mov
hlt
sbb
xor
jmp
sbb
call
mov
mov
dec
ficom
mov
cld
int3
dec
pop
sahf
add
xor
pop
jle
sbb
mov
stos
jmp
or
iret
pop
pop
in
push
inc
xor
dec
push
fild
jbe
pop
ret
xor
dec
push
fistp
jbe
mov
add
sbb
add
mov
stos
jmp
or
iret
pop
pop
in
push
inc
xor
dec
push
fild
add
lahf
jbe
fisttp
add
movs
mov
hlt
retf
push
dec
xor
mov
push
sbb
add
mov
in
imul
add
jecxz
jmp
xor
imul
lock
jecxz
jmp
sub
add
jbe
imul
je
add
pop
loope
mov
cdq
dec
fmul
jecxz
(bad)
mov
mov
jecxz
jmp
xor
mov
fs
aas
mov
fs
(bad)
in
jecxz
jmp
xor
fmul
jecxz
jle
sbb
xor
pop
pop
add
mov
aad
push
mov
sbb
mov
mov
cdq
ss
int3
jecxz
les
jecxz
xor
popf
jne
inc
sbb
mov
loope
xchg
xor
mov
mov
cmps
mov
int3
xchg
dec
hlt
aam
aaa
or
dec
mov
hlt
clc
sub
sbb
jmp
xor
cld
int3
popf
jne
push
sbb
imul
lock
imul
into
jecxz
imul
mov
pop
ret
mov
aaa
sbb
push
dec
jecxz
imul
inc
xor
xor
xor
mov
add
sbb
pop
xor
mov
dec
aas
xchg
hlt
mov
xor
sti
xor
cmp
int3
test
loope
mov
dec
cld
int3
dec
pop
sub
jecxz
xor
mov
add
sbb
mov
mov
dec
cld
int3
dec
pop
stos
sbb
test
cld
int3
dec
aas
xchg
loop
cld
arpl
and
xor
cmc
(bad)
jecxz
mov
xchg
dec
add
xchg
jne
ja
mov
mov
dec
cld
int3
dec
pop
push
sbb
add
les
or
int3
jecxz
add
sbb
xchg
loop
cld
xor
add
jecxz
ja
jp
xchg
loop
cld
xor
les
mov
mov
jecxz
jmp
cli
dec
cld
push
aaa
cmps
into
jecxz
push
mov
jecxz
imul
jbe
imul
loopne
cld
int3
dec
fadd
fninit
cwde
add
adc
mov
xor
pop
stos
into
jecxz
jmp
xor
mov
mov
loope
cld
pop
push
ins
inc
xor
jno
aas
xchg
loop
cld
arpl
add
xor
(bad)
and
aaa
jl
jecxz
add
xor
les
mov
mov
jecxz
imul
add
aaa
cdq
add
xchg
je
repz
add
pushf
aaa
jl
jecxz
add
jecxz
push
inc
aam
cmc
cmp
mov
add
sbb
jmp
ss
mov
fcmovnu
pop
xor
mov
dec
in
sti
ss
pop
sbb
mov
mov
dec
cld
int3
dec
pop
push
and
xor
(bad)
cld
int3
sbb
or
fidiv
(bad)
push
pusha
hlt
add
int3
jecxz
(bad)
cmp
mov
xor
cld
xchg
aaa
(bad)
push
fist
add
popf
inc
jl
sbb
mov
dec
dec
mov
loope
cld
fist
cld
int3
xchg
je
xchg
clc
sub
sbb
or
pop
mov
das
ss
arpl
jno
in
retf
xor
or
imul
add
xchg
das
lahf
into
jecxz
sbb
loope
lock
es
jecxz
xor
not
pop
sbb
cdq
cs
jecxz
jmp
dec
in
xchg
test
(bad)
aas
popf
pop
out
sbb
push
fistp
fwait
add
(bad)
lahf
into
jecxz
add
sbb
mov
dec
pop
retf
mov
retf
sbb
mov
xchg
mov
xor
cld
fild
call
jecxz
call
push
sbb
pop
ins
inc
jnp
aaa
sbb
mov
lahf
pop
adc
in
outs
adc
hlt
push
cmp
in
xor
push
sbb
mov
dec
jbe
hlt
clc
sub
sbb
push
retf
xchg
out
and
inc
(bad)
add
xchg
je
gs
xchg
and
sbb
les
mov
aam
div
mov
xor
mov
push
fistp
xchg
add
dec
pop
pop
adc
loopne
imul
pop
mov
xor
jmp
xor
fdivr
gs
or
xor
sti
(bad)
sti
cmp
xchg
jne
jbe
loop
fistp
add
dec
pop
outs
adc
mov
jbe
in
pop
push
stc
or
and
jmp
cmp
jne
push
xor
test
xor
cld
inc
adc
(bad)
sbb
mov
xchg
dec
sub
xchg
jne
lds
xor
div
imul
mov
mov
jecxz
push
(bad)
call
adc
xchg
in
dec
cld
arpl
hlt
mov
jecxz
(bad)
aas
and
xor
pop
mov
jmp
xor
add
sbb
xor
(bad)
in
pop
cli
(bad)
mov
lahf
pop
pcmpgtb
xor
cwde
addr16
push
fcomi
std
xor
popa
cmp
idiv
arpl
jno
aas
inc
(bad)
dec
pop
rcr
sbb
add
jmp
xor
mov
jo
mov
int3
sub
mov
sbb
or
pop
dec
xor
loop
int3
(bad)
lock
sbb
mov
sbb
inc
xor
cld
push
xor
sub
sbb
cld
jbe
mov
sti
ds
daa
pop
cli
(bad)
mov
lahf
pop
pcmpgtw
ja
add
mov
(bad)
cli
cmp
xchg
je
xor
imul
jbe
imul
je
add
sbb
add
fadd
sbb
mov
movs
fimul
xor
mov
jbe
push
pop
sub
ss
lock
xchg
call
sub
fild
call
sub
ss
lock
jae
add
jbe
push
pop
sub
ss
xor
fild
add
jbe
push
pop
sub
ss
mov
add
push
call
sbb
imul
sub
cmp
sbb
imul
sub
sub
sbb
imul
sub
mov
sbb
imul
sub
mov
sbb
mov
sub
mov
pop
sub
add
xchg
add
jbe
push
pop
sub
ss
xor
add
jbe
push
pop
sub
cmps
mov
xchg
add
jbe
push
pop
sub
ss
mov
xchg
add
movs
push
sub
sbb
in
pop
inc
mov
inc
in
retf
or
add
mov
cld
push
hlt
das
inc
xor
hlt
and
sbb
and
fwait
repnz
dec
fild
xchg
add
jbe
cld
push
pushf
adc
hlt
nop
and
sbb
aas
lods
pop
mov
and
dec
ss
lock
or
inc
cmp
imul
pop
mov
retf
cmp
inc
xor
jae
fdivr
int3
sub
out
adc
jecxz
pop
cmps
pop
mov
out
mov
nop
sbb
inc
xor
jae
fdivr
int3
sub
retf
mov
iret
jecxz
sub
mov
nop
adc
je
test
fdivr
int3
sub
cmps
adc
jecxz
and
mov
nop
xor
inc
xor
jae
fdivr
int3
sub
adc
dec
mov
jbe
cld
push
cwde
adc
hlt
shl
lods
pop
mov
and
dec
ss
lock
dec
xchg
add
inc
jno
mov
dec
in
(bad)
gs
and
sbb
imul
pop
mov
inc
adc
xchg
iret
jecxz
mov
je
fdiv
in
mov
dec
cld
mov
mov
add
loop
dec
cmp
pop
xor
inc
ret
dec
in
pop
cmp
ss
xor
pop
sbb
mov
cdq
inc
(bad)
dec
cmp
aaa
div
arpl
imul
dec
fcmovu
in
pop
mov
rol
lock
mov
xor
mov
xchg
pop
mov
xor
xchg
lods
pop
mov
xor
mov
in
xor
push
dec
fcom
pop
or
add
pushf
loop
test
imul
cmp
inc
xor
jne
xor
xchg
lods
pop
mov
xor
xchg
pop
mov
mov
pop
dec
sub
xor
push
dec
fcom
or
or
pushf
loop
out
ret
lock
imul
cmp
inc
xor
imul
jbe
imul
jbe
imul
fadd
pop
adc
pop
fistp
xchg
add
xchg
je
xor
xor
sub
pushw
sbb
imul
pop
mov
xor
xchg
pop
mov
and
xor
addr16
xor
add
sbb
imul
add
imul
cmp
inc
xor
mov
xor
xchg
lods
pop
mov
xor
xchg
pop
mov
and
xor
jnp
xor
add
sbb
imul
lock
imul
cmp
inc
xor
cld
push
sub
cld
push
pop
adc
jbe
imul
mov
pop
mov
call
shr
xor
jno
fadd
(bad)
xchg
add
mov
fadd
int3
sub
add
sub
mov
pop
fs
xor
xor
sub
mov
arpl
jno
fcmovu
call
hlt
sbb
xor
pop
lods
pop
mov
xor
xchg
lods
pop
mov
xor
xchg
pop
mov
push
jbe
imul
fiadd
xor
add
push
jmp
cmp
inc
xor
mov
dec
(bad)
lock
fiadd
sbb
push
fld
xchg
add
je
fnstenv
fadd
pop
pop
mov
xor
xchg
scas
pop
mov
das
cmp
ss
xor
pop
sbb
ss
mov
mov
xor
imul
fiadd
xor
add
push
jmp
cmp
inc
xor
mov
xor
xchg
lods
pop
mov
xor
xchg
pop
mov
pop
sbb
fisubr
popf
sbb
add
mov
arpl
jno
fiadd
xor
js
xor
das
lods
pop
mov
sbb
dec
cld
pop
sbb
ss
xor
pop
sbb
ss
repz
fdivr
pop
cli
mov
xor
xor
add
sbb
imul
add
imul
aas
mov
nop
mov
inc
xor
imul
mov
sub
add
sub
mov
pop
popf
mov
xor
xor
pop
xor
imul
mov
pop
dec
push
fdiv
fadd
fistp
add
mov
fadd
int3
sub
add
sub
mov
pop
jnp
sbb
sbb
imul
mov
pop
sbb
add
lock
fcmovu
call
hlt
mov
xor
jecxz
aaa
lods
pop
mov
xor
xchg
pop
mov
and
xor
xor
sbb
imul
ficom
jmp
(bad)
lock
pop
(bad)
adc
mov
pop
sbb
ss
xor
pop
sbb
ss
repz
fcom
push
mov
xor
xor
add
sbb
imul
imul
ds
nop
mov
inc
xor
cld
push
sub
cld
push
jl
inc
xor
imul
mov
pop
lea
imul
xor
shr
je
fnstenv
fiadd
xor
jmp
ds
nop
cwde
adc
jbe
cld
push
sub
cld
push
jl
inc
xor
imul
mov
xor
imul
xor
mov
inc
xor
jno
fiadd
xor
jmp
ds
nop
add
inc
xor
jne
xor
xchg
lods
pop
mov
xor
xchg
pop
mov
sub
imul
mov
pop
or
add
pushf
loop
out
ret
lock
push
add
sbb
out
sbb
mov
pop
sbb
ss
xor
pop
sbb
ss
mov
fsub
jmp
cmps
imul
xor
shr
je
fnstenv
fiadd
xor
jmp
cmp
sub
cld
push
sub
cld
push
pop
adc
jbe
imul
mov
xor
imul
xor
jmp
xor
jno
fadd
fld
add
mov
pop
pop
retf
jecxz
mov
xor
xor
pop
cli
(bad)
mov
lahf
pop
sbb
or
mov
sub
inc
fdiv
dec
jbe
hlt
fwait
hlt
int3
jecxz
lds
imul
jecxz
xor
adc
lods
pop
mov
retf
xor
mov
push
adc
inc
xor
mov
xor
inc
ret
dec
in
xor
add
dec
ss
xor
pop
sbb
mov
cdq
inc
(bad)
dec
cmp
aaa
div
arpl
imul
dec
fcmovu
in
pop
mov
rol
lock
mov
xor
pusha
and
sbb
inc
xchg
pop
mov
xor
xchg
lods
pop
mov
xor
mov
in
xor
push
dec
fcom
pop
or
add
pushf
loop
cli
(bad)
pop
(bad)
imul
cmp
add
popf
pop
outs
ja
mov
xor
xchg
lods
pop
mov
xor
xchg
pop
mov
pop
sbb
dec
sub
xor
push
dec
fcom
or
or
pushf
loop
out
ret
lock
imul
cmp
add
jbe
imul
jbe
imul
jbe
imul
fadd
pop
adc
pop
fild
je
xor
xor
sub
cli
sub
mov
xor
xchg
lods
pop
mov
xor
xchg
pop
mov
push
jbe
imul
sbb
push
pop
shr
je
fnstenv
fadd
fcomi
lods
add
mov
xor
sub
mov
pop
pushw
jbe
imul
add
sbb
xor
jbe
pop
mov
xor
xor
add
mov
xchg
xchg
pop
mov
inc
or
add
fimul
sbb
cld
push
hlt
das
inc
xor
enter
pop
pop
pop
sbb
add
mov
xor
xchg
scas
pop
mov
push
add
ss
xor
pop
sbb
ss
mov
mov
xor
imul
sbb
push
pop
shr
je
fnstenv
fadd
fisttp
add
mov
cmp
xor
cmp
pop
sbb
ss
xor
pop
sbb
ss
mov
mov
xor
imul
sbb
add
pushf
loop
out
ret
lock
push
jmp
add
inc
xor
retf
jecxz
add
sub
add
sub
mov
pop
popf
mov
xor
imul
mov
pop
sbb
add
loope
jno
fcmovu
call
hlt
push
ja
pop
mov
xor
xchg
lods
pop
mov
xor
xchg
pop
mov
and
imul
add
je
add
dec
fiadd
pop
mov
jmp
sbb
mov
add
add
jmp
mov
cmp
pop
sbb
ss
xor
pop
sbb
ss
repz
(bad)
xor
imul
fiadd
xor
imul
lock
imul
add
inc
xor
cld
push
sub
cld
push
pop
adc
jbe
imul
fisub
xor
push
pop
sbb
xor
jno
fadd
fstp
lods
add
mov
fadd
int3
sub
add
sub
mov
pop
clc
mov
xor
xor
sbb
arpl
jno
fcmovu
call
hlt
pop
push
xor
jg
pop
mov
xor
xchg
lods
pop
mov
xor
xchg
pop
mov
and
xor
cld
xor
imul
pop
mov
jmp
sbb
mov
sbb
mov
pop
sbb
ss
xor
pop
sbb
ss
mov
fiadd
push
jbe
imul
xor
mov
inc
xor
jno
fiadd
xor
jmp
add
inc
xor
mov
xor
xchg
lods
pop
mov
xor
xchg
pop
mov
sub
imul
xor
shr
je
fnstenv
fiadd
xor
jmp
add
inc
xor
cld
push
sub
cld
push
jl
inc
xor
imul
mov
mov
fcmovu
in
pop
mov
xor
lock
mov
xor
mov
xor
and
xchg
lods
pop
mov
xor
xchg
pop
mov
and
sub
xor
inc
xor
imul
pop
mov
leave
(bad)
pop
sbb
into
das
sbb
mov
fld
imul
inc
in
pop
pop
mov
hlt
imul
cli
(bad)
mov
lahf
pop
sbb
in
adc
or
mov
pop
pop
mov
jbe
imul
fadd
pop
pop
fiadd
xor
cld
inc
adc
sahf
sub
mov
lahf
dec
cld
cmp
and
xor
add
sub
xor
shl
sbb
sbb
iretw
sbb
inc
(bad)
sbb
hlt
aam
imul
mov
dec
aas
inc
(bad)
dec
aas
inc
iret
dec
dec
jbe
je
mov
sbb
add
sbb
jmp
mov
stos
cmp
rol
jbe
je
fidiv
ficom
pop
mov
inc
adc
cmp
outs
in
jecxz
(bad)
sub
(bad)
and
fadd
mov
imul
add
jecxz
(bad)
sub
jne
ins
inc
jnp
xchg
push
sbb
mov
xor
mov
mov
fidiv
in
sbb
pop
mov
aaa
add
jecxz
push
fild
add
hlt
dec
pop
xor
or
sbb
call
dec
or
jbe
je
mov
sbb
xchg
jecxz
cld
arpl
test
xor
repz
cmp
mov
dec
add
fcmovu
sbb
mov
dec
cld
int3
dec
pop
sbb
sbb
or
jbe
je
mov
sbb
xchg
jecxz
cld
arpl
mov
xor
jle
sbb
adc
add
xchg
aaa
add
jecxz
push
fcomi
movs
add
xchg
inc
add
xchg
je
dec
jecxz
jbe
je
mov
sbb
xchg
jecxz
cld
arpl
jl
xor
jle
sbb
adc
add
xchg
aaa
add
jecxz
push
fld
iret
cld
xor
mov
add
jecxz
jmp
or
or
fiadd
mov
dec
cld
int3
dec
pop
mov
mov
ret
xor
iret
cld
cmp
imul
mov
int3
jecxz
jmp
or
or
fcmovu
sbb
mov
dec
cld
int3
dec
pop
push
and
mov
dec
jecxz
jbe
je
mov
sbb
xchg
jecxz
cld
arpl
mov
sbb
jle
adc
adc
add
xchg
aaa
add
jecxz
push
fstp
movs
add
pushf
iret
cld
imul
cld
int3
jecxz
jmp
or
in
cdq
dec
std
int3
jecxz
lds
or
mov
mov
dec
cld
int3
dec
pop
out
and
jbe
imul
add
imul
aaa
add
jecxz
push
pop
sbb
inc
xor
pop
out
jecxz
cmp
pop
mov
lea
sub
dec
jecxz
ret
adc
mov
ret
push
mov
mov
call
in
cld
int3
xchg
je
adc
inc
jnp
aaa
sbb
mov
dec
in
mov
sbb
push
mov
fstp
hlt
gs
xor
xor
pop
xor
adc
jbe
cmp
(bad)
or
in
addr16
add
pop
icebp
sbb
out
or
add
in
xor
jmp
adc
add
xchg
aaa
out
(bad)
(bad)
movs
add
hlt
je
xor
or
sbb
call
dec
cld
mov
inc
sti
int3
jecxz
jbe
je
mov
sbb
xchg
jmp
cld
arpl
dec
push
xor
mov
xor
imul
lock
jecxz
jmp
or
sti
int3
jecxz
jbe
je
mov
sbb
xchg
jmp
cld
arpl
js
xor
cmps
and
hlt
aad
aaa
out
jecxz
mov
pushf
(bad)
retf
jecxz
pop
inc
or
mov
mov
inc
cld
int3
dec
pop
mov
mov
dec
cld
int3
sbb
adc
add
xchg
aaa
out
(bad)
fistp
(bad)
retf
jecxz
add
sbb
mov
inc
cld
int3
dec
pop
outs
es
or
(bad)
adc
add
xchg
aaa
out
(bad)
fisttp
add
xchg
inc
add
xchg
je
mov
dec
cld
int3
adc
adc
add
xchg
aaa
out
(bad)
fld
cmps
add
pushf
(bad)
retf
jecxz
or
fimul
mov
inc
cld
int3
dec
pop
sbb
sbb
or
(bad)
adc
add
xchg
aaa
out
(bad)
fninit
cmps
add
pushf
(bad)
retf
jecxz
or
fcmove
sbb
mov
inc
cld
int3
dec
pop
out
sbb
mov
jmp
mov
xchg
je
mov
dec
cld
int3
adc
adc
add
xchg
aaa
out
(bad)
(bad)
(bad)
retf
jecxz
push
inc
or
mov
mov
inc
cld
int3
dec
pop
cmps
daa
sbb
or
(bad)
adc
push
inc
xor
dec
push
fist
ret
sbb
xchg
jmp
cld
arpl
cmps
out
int3
jecxz
repz
cli
cmp
mov
pop
mov
mov
in
cld
int3
lahf
jbe
mov
jecxz
mov
add
or
mov
add
sbb
repz
cli
cmp
mov
fiadd
jae
pop
mov
jb
dec
cld
mov
mov
cld
int3
adc
mov
xor
mov
xor
mov
xor
ss
mov
mov
dec
cld
int3
es
add
jecxz
or
xor
cld
iret
jecxz
add
jmp
mov
xchg
je
mov
dec
cld
int3
dec
fidiv
jmp
cld
int3
dec
pop
sub
mov
not
xor
xor
jmp
add
add
dec
cmp
(bad)
div
xor
dec
sbb
(bad)
cmp
push
jne
or
mov
add
sbb
jbe
je
mov
jmp
cld
int3
dec
pop
push
sub
mov
xor
and
jmp
cld
int3
dec
pop
cli
and
mov
test
add
xchg
aaa
dec
jecxz
push
fstp
cmps
add
movs
add
sbb
in
cdq
(bad)
hlt
int3
jecxz
lds
jecxz
imul
lock
jecxz
jmp
or
inc
xor
dec
push
fcmovnbe
movs
add
lahf
jbe
mov
jecxz
jmp
or
dec
jecxz
ret
aaa
dec
aas
xchg
in
cld
arpl
jno
aas
xchg
in
cld
arpl
enter
xor
and
mov
dec
pop
cmps
daa
sbb
imul
sbb
xchg
loopne
cld
arpl
enter
xor
aas
adc
mov
xor
dec
xor
loop
out
or
sti
retf
jecxz
mov
jmp
mov
xchg
je
mov
dec
cld
int3
push
mov
add
test
ficom
(bad)
(bad)
lock
jecxz
jmp
or
imul
std
int3
jecxz
jmp
push
mov
mov
jecxz
jmp
or
hlt
int3
jecxz
and
int3
jecxz
mov
int3
xor
adc
jecxz
xchg
loopne
cld
int3
sbb
or
xchg
data16
int3
jecxz
mov
xor
mov
jmp
mov
xchg
je
xchg
dec
cld
int3
xchg
aaa
dec
jecxz
push
pop
retf
xor
dec
push
(bad)
add
lahf
jbe
mov
jecxz
jmp
lss
mov
jecxz
mov
fs
add
xor
mov
mov
jbe
jmp
push
mov
mov
jecxz
cmc
cwde
or
dec
sti
int3
jecxz
cld
xchg
dec
cld
int3
hlt
les
xor
xchg
in
cld
arpl
les
xor
mov
fs
maskmovq
jecxz
mov
mov
fisttp
add
xchg
aaa
sti
retf
jecxz
push
pop
sbb
mov
in
cld
pop
inc
inc
xor
imul
sbb
jmp
or
dec
dec
jecxz
push
int3
test
pop
cli
(bad)
jecxz
xor
cmp
cmp
mov
cld
int3
test
pop
pop
and
sbb
std
add
je
je
sbb
ss
pop
fidiv
in
pop
cli
fidiv
mov
(bad)
in
mov
push
jmp
jno
cmps
lods
lock
fiadd
xor
mov
adc
mov
mov
jecxz
ret
inc
or
jmp
or
pop
or
sbb
pop
mov
sub
xor
inc
cmp
jne
arpl
mov
mov
cdq
push
out
int3
jecxz
rcr
inc
xor
rcl
xor
cld
xor
imul
mov
adc
sbb
jmp
or
and
sbb
pop
xor
mov
dec
dec
jbe
hlt
jl
xor
add
adc
xchg
aaa
mov
jecxz
push
fist
sub
int3
lahf
jbe
push
jecxz
add
adc
sbb
ss
arpl
inc
test
add
sbb
mov
sbb
rcl
add
mov
popa
dec
push
or
mov
jmp
ret
jae
sub
js
jecxz
cmp
mov
repz
xchg
daa
mov
mov
pop
cld
int3
sbb
cmps
add
adc
xor
cld
mov
jmp
dec
cmp
(bad)
div
xor
dec
sbb
(bad)
cmp
push
je
cmc
jge
icebp
mov
jecxz
xor
cmp
unpcklps
ret
mov
iret
ja
sbb
xchg
hlt
xchg
pop
xor
rol
mov
cmp
jecxz
xor
cdq
sbb
int3
jecxz
mov
dec
ficom
inc
lock
jecxz
jmp
or
adc
sbb
add
jecxz
mov
dec
pop
dec
and
mov
dec
pop
inc
mul
dec
mov
dec
pop
retf
hlt
jecxz
xor
fadd
mov
jecxz
jmp
or
pop
ss
mov
shr
add
je
(bad)
ficom
cmc
(bad)
lock
sub
adc
sbb
mov
mov
sbb
and
sbb
lock
mov
mov
mov
fisubr
xor
jno
pop
jbe
sbb
mov
xor
(bad)
fucom
dec
mov
pop
fs
xor
inc
gs
je
(bad)
ficom
cmc
(bad)
lock
and
hlt
lock
sbb
mov
mov
sbb
and
sbb
lock
mov
mov
mov
fisubr
xor
jb
pop
push
and
xor
aas
mov
mov
sbb
or
sbb
lock
xchg
push
jmp
jno
xor
imul
je
add
pop
fiadd
lods
pop
mov
stos
adc
imul
dec
pop
scas
cmp
mov
jbe
dec
or
sbb
inc
mov
xchg
dec
cld
arpl
loopne
xor
mov
aam
inc
mov
mov
inc
in
add
xchg
movzx
jecxz
push
int3
imul
add
aas
inc
mov
pop
in
push
inc
xor
(bad)
mov
fstp
sbb
jbe
dec
or
sbb
inc
mov
xchg
dec
cld
arpl
rcl
sbb
mov
aam
inc
mov
mov
inc
in
add
xchg
movzx
jecxz
push
int3
imul
add
aas
inc
mov
pop
in
push
inc
xor
(bad)
mov
jae
add
jecxz
mov
pop
mov
jb
sbb
loopne
cdq
add
int3
jecxz
xchg
fistp
push
rol
lock
xor
mov
out
inc
xor
int
xor
jmp
adc
imul
mov
pop
sbb
mov
jbe
xor
out
mov
hlt
pop
outs
add
sbb
imul
sbb
inc
jmp
idiv
mov
fbstp
neg
add
fcomi
retf
xor
add
(bad)
mov
cld
push
sub
imul
jbe
imul
sbb
loop
pop
mov
rol
lock
pop
push
and
mov
pop
mov
inc
xor
imul
sbb
add
mov
jbe
fld
add
and
sub
mov
xor
test
xor
jge
pop
mov
fstp
mov
scas
fsubp
dec
sbb
movs
add
hlt
jo
xor
add
daa
scas
fsubp
dec
les
sbb
sub
xchg
jno
mov
pop
cld
int3
dec
aas
xchg
je
mov
sbb
jp
pop
mov
arpl
mov
mov
cmp
(bad)
sub
xchg
outs
xchg
add
sbb
mov
sbb
add
sbb
xchg
fwait
jecxz
mov
xor
aaa
stos
fucom
dec
push
pop
sbb
add
ret
jbe
imul
sbb
jmp
adc
in
int3
jecxz
imul
outs
repnz
fadd
fcomi
mov
push
sbb
imul
sbb
add
sub
pop
cmp
xchg
mul
arpl
or
push
and
push
fld
mov
xor
mov
loop
adc
fadd
(bad)
ins
inc
jmp
push
mov
push
mov
pusha
dec
in
sub
loopne
mov
(bad)
add
sbb
inc
aas
lahf
dec
adc
and
xor
or
jns
add
cmc
js
xor
adc
sbb
or
outs
mov
xor
mov
sbb
or
ds
cmp
or
int3
add
sbb
sahf
cmp
or
push
inc
xor
add
imul
pop
mov
or
dec
cld
mov
jecxz
sti
xor
cmp
pop
lock
jecxz
jmp
clc
dec
cld
mov
mov
cld
int3
xchg
aaa
fcmovne
jecxz
push
int3
test
pop
adc
sbb
or
adc
xchg
sbb
mov
dec
dec
ss
repz
jmp
add
adc
aaa
jecxz
jecxz
sub
lahf
pop
pop
mov
jecxz
xchg
sti
loope
cld
or
(bad)
sbb
cdq
push
dec
jecxz
xchg
loope
cld
mov
mov
cmps
enter
aaa
daa
iret
into
jecxz
cmp
push
aaa
out
jecxz
sub
dec
cmp
sbb
loop
xor
cld
push
pop
adc
hlt
sbb
xor
hlt
pop
adc
mov
sbb
or
fdiv
mov
sbb
imul
mov
xor
mov
mov
ret
sbb
jbe
dec
pop
cld
fsub
dec
pop
mov
ret
sbb
or
nop
mov
xor
xchg
pop
mov
dec
cli
dec
cld
push
leave
add
sbb
sti
xor
cmp
xchg
sbb
inc
xor
aad
xor
add
sbb
add
sbb
add
(bad)
or
imul
add
jmp
mov
xchg
jne
push
sbb
mov
popf
inc
imul
mov
mov
inc
xor
cmp
push
mov
ss
inc
xor
cmp
in
das
inc
xor
cmp
mov
inc
xor
cmp
pusha
adc
push
adc
push
sub
cmp
or
fnstenv
jecxz
adc
(bad)
mov
sti
int
dec
cmp
pusha
adc
push
adc
push
sub
imul
jmp
adc
cld
xor
(bad)
adc
cmp
xor
dec
jecxz
les
jecxz
adc
aas
xchg
loope
cld
arpl
cmp
xor
xchg
loope
cld
mov
sbb
sbb
pop
xor
xor
dec
add
sbb
xchg
jecxz
cld
arpl
xchg
scas
pop
mov
fist
mov
mov
mov
int3
jecxz
jbe
jbe
imul
sbb
add
dec
mov
jmp
pop
mov
aaa
pop
mov
(bad)
mov
xor
jne
mov
dec
cld
int3
xchg
aaa
test
dec
lds
sbb
ds
test
add
adc
cdq
xor
imul
mov
mov
jecxz
cld
push
cwde
adc
hlt
xor
xor
mov
jecxz
cld
mov
dec
inc
mov
mov
inc
in
sti
outs
scas
imul
sbb
sahf
xor
dec
cld
pusha
hlt
dec
xchg
int3
jecxz
(bad)
aas
and
xor
and
fadd
pop
das
push
xor
jmp
push
mov
int3
sub
mov
cmp
jmp
pop
xor
push
mov
xchg
jne
mov
dec
cld
int3
dec
aas
xchg
loope
cld
arpl
jno
aas
xchg
loope
cld
arpl
xor
xor
(bad)
and
xor
xchg
jecxz
cld
arpl
xchg
cmps
pop
mov
fist
mov
int3
jecxz
jbe
jbe
imul
sbb
add
dec
mov
pop
cmps
pop
mov
aaa
push
mov
(bad)
mov
xor
dec
cmp
repnz
mov
retf
adc
fadd
pop
sbb
in
pop
mov
xor
nop
or
sbb
ss
mov
add
sar
pop
xor
xchg
jecxz
cld
xor
(bad)
or
cdq
mov
int3
jecxz
xchg
sbb
cmp
mov
jbe
imul
sbb
add
(bad)
mov
pop
cmps
pop
mov
mov
sahf
mov
xor
add
jecxz
adc
cmp
sbb
cmp
mov
jecxz
mov
dec
fisubr
jmp
mov
mov
dec
cld
int3
dec
pop
xchg
cmp
xor
(bad)
xor
mov
dec
dec
ss
lock
jecxz
add
pushf
lar
jecxz
add
fadd
pop
sbb
(bad)
in
mov
xor
fmul
xor
add
or
pop
xor
in
cmp
mov
jecxz
mov
dec
fisubr
jmp
mov
mov
dec
cld
int3
dec
pop
cmp
xor
(bad)
xor
mov
dec
dec
ss
xor
fisttp
lar
jecxz
add
fadd
pop
sbb
stos
in
mov
xor
mov
xor
add
mov
add
cmc
adc
xor
sti
add
cmp
mov
jecxz
mov
dec
fisub
mov
dec
cld
int3
dec
pop
(bad)
cmp
xor
(bad)
xor
mov
dec
dec
sbb
mov
add
jecxz
add
fadd
pop
sbb
push
xor
sub
xor
add
pop
mov
add
sbb
mov
jecxz
cld
mov
dec
inc
mov
mov
inc
in
sti
xor
imul
retf
lock
pop
cmp
cld
push
xor
inc
xor
mov
pop
xor
lds
sbb
ds
aaa
cld
int
dec
mov
jecxz
xor
mov
dec
cmp
add
fisubr
in
mov
xor
xchg
or
sbb
sbb
mov
xor
ja
xor
xchg
loop
cld
xor
dec
aas
xor
mov
xor
aaa
add
jecxz
push
mov
jecxz
imul
lock
jecxz
jmp
adc
mov
add
jecxz
cld
push
cmp
inc
xor
lock
sbb
mov
xor
imul
retf
lock
pop
scas
xor
mov
push
cmp
inc
xor
call
dec
xor
lds
sbb
ds
aaa
std
int
dec
mov
jecxz
xor
mov
dec
cmp
add
(bad)
in
mov
xor
fadd
sbb
adc
mov
xor
mov
xchg
loop
cld
xor
dec
cmp
repnz
mov
retf
xchg
int
dec
cld
or
shr
fstp
xchg
jecxz
cld
arpl
dec
push
pop
xor
xor
dec
push
fist
mov
adc
jmp
mov
xchg
aaa
jmp
jecxz
mov
jbe
imul
jbe
imul
mov
pop
pop
sub
push
xor
xchg
loop
cld
pop
push
fadd
pop
sbb
mov
loop
cld
fstp
(bad)
jae
pop
mov
inc
pop
aas
push
add
dec
inc
mov
mov
inc
in
rcr
xchg
ret
loope
cld
popa
dec
fidiv
stos
pop
mov
xchg
dec
cld
int3
hlt
push
add
jecxz
imul
sbb
mov
loop
cld
(bad)
aas
test
dec
cmp
repnz
mov
retf
mov
dec
loop
scas
jmp
dec
mov
loop
cld
fisttp
mov
mov
dec
cld
int3
dec
fadd
pop
in
push
inc
xor
pop
test
sbb
std
int3
jecxz
adc
sbb
cld
push
pop
adc
hlt
or
xor
add
fadd
pop
sbb
add
mov
jae
xchg
xchg
jae
pop
mov
mov
dec
cld
int3
xchg
dec
hlt
aam
aaa
out
jecxz
mov
xchg
jne
xor
imul
jecxz
jmp
sbb
mov
int3
pop
xor
xor
cli
mov
mov
int3
jecxz
push
pop
mov
inc
xor
pop
test
sbb
xchg
loope
cld
arpl
imul
lock
test
pop
fidiv
sbb
cld
xchg
dec
cld
int3
hlt
rol
sbb
push
pop
test
add
sbb
add
fcmovnu
pop
pop
sbb
outs
xchg
imul
add
push
inc
xor
xor
xor
fadd
int3
sub
(bad)
ss
mov
(bad)
sti
cmp
mov
imul
or
push
pop
cli
fisub
sbb
loope
fs
(bad)
or
dec
add
xchg
jne
jbe
pop
xor
or
int
add
lahf
iret
adc
adc
les
sbb
cmp
cwde
adc
imul
pop
xor
sti
(bad)
sti
cmp
xchg
jne
push
hlt
das
inc
xor
cld
push
pushf
adc
hlt
xor
xor
ss
lock
dec
ss
xor
(bad)
add
daa
xchg
lods
pop
mov
cmp
xchg
cmps
pop
mov
outs
sbb
in
pop
inc
mov
daa
xchg
cmps
pop
mov
cmp
xchg
lods
pop
mov
jae
mov
or
call
sub
cs
sbb
cmp
cmp
inc
xor
or
push
inc
xor
or
sub
jb
pop
adc
sbb
cmp
cmp
inc
xor
or
push
inc
xor
mov
xor
call
aam
div
mov
sub
jb
mov
mov
lock
cmp
jae
sahf
pushf
jb
mov
inc
mov
or
scas
xchg
jae
mov
sbb
cmp
dec
mov
xchg
pushf
jb
mov
mov
lock
cmp
das
xor
cmp
(bad)
adc
imul
jmp
sbb
les
inc
jmp
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
push
push
fs
or
xor
les
jbe
mov
pop
loop
arpl
mov
mov
mov
ret
inc
xor
mov
mov
xchg
ja
imul
or
push
(bad)
lock
mov
sti
adc
imul
sbb
add
push
(bad)
pop
cld
int3
inc
jnp
push
pop
add
sbb
xor
add
or
add
fwait
(bad)
mov
xchg
cld
rcr
add
fmul
cld
int3
jecxz
test
out
sbb
jmp
or
out
push
xchg
mov
cmp
sbb
xor
add
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
lock
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
xchg
xor
add
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
div
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
int3
cmp
jno
and
