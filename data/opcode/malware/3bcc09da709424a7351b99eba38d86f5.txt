call
pop
mov
add
and
xor
add
xor
repnz
jbe
pop
pop
loopne
sub
xor
and
push
mov
pop
and
(bad)
fstp
adc
(bad)
and
push
fnstcw
push
adc
(bad)
(bad)
jl
mov
(bad)
sub
(bad)
(bad)
xchg
ins
or
nop
sbb
(bad)
(bad)
pusha
xor
xor
(bad)
inc
js
sub
pop
jl
add
add
add
je
mov
add
add
retf
mov
xchg
rcl
dec
mov
add
clc
(bad)
mov
cld
rol
iret
mov
mov
add
add
int3
sbb
dec
sub
mov
mov
cmp
add
xchg
xchg
test
inc
movs
retf
frstor
add
cdq
iretw
adc
pusha
sbb
call
adc
lahf
add
push
adc
inc
jbe
shl
test
add
test
aaa
sbb
and
push
ins
je
push
inc
sbb
push
add
and
push
icebp
nop
mov
add
adc
xchg
sub
shl
data16
aam
mov
fst
ret
add
and
sub
push
xchg
add
push
add
adc
add
loope
cmp
imul
test
mov
sbb
xchg
xchg
add
add
add
add
jo
sbb
add
add
add
add
add
mov
jo
inc
cmp
or
push
retf
adc
add
add
mov
mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
out
adc
or
or
lock
add
mov
push
icebp
inc
loop
adc
or
add
add
sbb
dec
sub
outs
fnstcw
add
sbb
or
or
fidivr
add
adc
add
add
(bad)
sti
add
push
or
pushf
push
ret
cli
xchg
pop
in
sbb
add
jmp
adc
adc
mov
outs
stc
into
jmp
xchg
xlat
mov
sbb
lahf
enter
mov
push
adc
sbb
adc
xor
sbb
loopne
gs
adc
sbb
jle
xchg
add
add
call
push
or
loopne
js
adc
dec
fwait
push
add
(bad)
mov
or
or
sbb
ud1
(bad)
clc
add
iret
adc
or
or
loope
adc
adc
add
adc
and
or
add
adc
push
dec
icebp
add
push
adc
jnp
add
pop
push
push
xor
pop
les
pop
lock
dec
loop
push
adc
sbb
push
sub
sbb
or
add
adc
sbb
sbb
cs
adc
adc
prefetch
sbb
push
adc
sbb
push
repnz
sbb
adc
adc
rol
pop
adc
sub
test
sbb
sbb
sbb
xor
popf
pop
pusha
or
sti
push
or
adc
out
push
cs
adc
call
loope
sbb
adc
adc
cmc
or
inc
or
or
push
sbb
fnstsw
retf
sbb
add
cmc
imul
mul
adc
enter
cmp
pop
push
sbb
push
sahf
cdq
(bad)
sbb
add
xchg
add
add
xor
add
add
add
inc
(bad)
push
pop
jecxz
sbb
add
cmp
inc
outs
add
je
mov
inc
add
xchg
mov
mov
xchg
add
add
dec
add
and
mov
shl
mov
rol
hlt
or
add
sbb
xchg
add
add
add
add
ret
loope
cmp
out
call
add
aam
pop
xchg
inc
mov
rcl
inc
push
jecxz
mov
outs
adc
adc
rcr
sbb
into
jo
or
add
mov
cmp
add
test
or
adc
mov
adc
pop
repz
jmp
cmp
or
push
pop
mov
cmp
adc
cs
xor
or
adc
sub
xor
or
xor
sbb
call
es
xor
leave
in
pop
sub
xor
cmp
pop
adc
xor
sbb
push
cmp
ss
sbb
and
sbb
add
inc
cmp
cmp
and
cmp
sub
sub
adc
push
or
dec
aad
pop
neg
dec
cmp
and
cwde
mov
ins
xor
xchg
rol
add
push
add
and
push
imul
aaa
dec
enter
in
ja
pop
sbb
test
inc
ficom
add
inc
jb
ja
gs
add
add
inc
outs
arpl
inc
je
dec
add
add
sub
pop
cvtps2pi
jl
out
pushf
dec
outs
fs
xor
xor
jl
dec
loopne
push
mov
iret
adc
and
jns
popa
imul
fs
fwait
in
loope
mov
or
int
inc
sbb
adc
add
sbb
sub
mov
rol
pop
rcl
add
inc
add
sbb
sbb
jbe
arpl
cs
ins
add
or
add
ret
and
and
fs
mov
push
lods
jmp
fsub
les
or
rcl
ins
sahf
ret
repnz
xchg
mov
cmp
popa
jns
rcr
push
mov
xchg
add
loopne
stc
push
mov
xor
adc
mov
mov
gs
dec
add
scas
(bad)
lods
dec
popa
push
or
scas
int
shr
ds
loop
push
jl
add
stos
dec
mov
add
cld
cmp
jb
sub
into
dec
push
mov
test
cmps
mov
dec
xor
add
dec
dec
and
(bad)
stc
push
jae
fsubr
and
add
shr
dec
out
xchg
or
cmps
test
push
popa
push
ins
out
mov
aad
mov
add
ret
icebp
cmp
jno
cli
sti
add
add
stos
cmp
in
inc
jmp
dec
and
cmp
or
or
out
sahf
out
or
push
rdrand
cmp
loope
loop
adc
adc
jecxz
sahf
sbb
fs
bound
fs
call
jo
gs
fs
je
je
sub
jb
ins
gs
out
hlt
retf
pop
(bad)
sar
push
loopne
jo
xchg
jmp
in
or
nop
sbb
pop
adc
xor
sub
sahf
repnz
mov
mov
add
mov
mov
dec
xchg
add
test
jo
pop
or
clc
sub
pop
push
pop
out
inc
mov
shr
mov
sub
push
or
out
xor
add
inc
out
pop
mov
sub
sbb
movs
mov
das
ror
pop
lock
inc
ror
or
adc
jecxz
addr16
push
rcl
xor
sub
mov
jb
pusha
sub
mov
xor
jle
pushf
and
dec
test
dec
stos
pop
mov
std
cli
inc
cmp
dec
inc
dec
push
push
pop
jae
jae
adc
or
xor
dec
fs
sub
data16
int3
add
in
fdivr
add
sar
(bad)
and
and
jp
cmp
push
adc
xor
pop
daa
int3
imul
add
ins
gs
mov
out
pop
or
loope
dec
dec
cmp
pop
sub
in
aam
jecxz
add
dec
mov
inc
stc
addr16
jbe
out
inc
xchg
add
add
mov
pop
bound
push
add
add
ins
inc
adc
cmp
mov
xchg
je
das
loop
sub
retfw
xor
repnz
or
jp
ins
fisttp
mov
adc
(bad)
xor
xchg
inc
(bad)
cld
push
imul
add
popa
inc
gs
sub
mov
mov
inc
inc
ja
dec
dec
fs
popa
in
out
pop
add
aas
push
popa
jb
imul
bound
xor
jb
gs
dec
jge
dec
fs
movs
jne
out
push
sbb
xchg
js
neg
shr
or
push
hlt
ror
sub
fdivr
sub
repz
push
les
rol
pusha
pop
mov
push
lds
bound
out
mov
add
cmp
sub
cs
pushf
jo
call
jno
mov
xor
addr16
cmp
clc
inc
mov
add
loop
sub
push
movs
and
jl
xchg
or
imul
sbb
cmp
in
add
lods
mov
pushf
sahf
ret
loop
mov
loopne
das
mov
jg
in
mov
jns
mov
adc
aas
inc
push
pop
cmp
cs
sub
jmp
popf
sbb
and
mov
mov
mov
dec
xor
dec
out
aas
(bad)
and
cmp
jns
ins
mov
xchg
cs
cmp
cmp
out
repnz
jmp
loopne
mov
sub
push
jmp
dec
push
push
push
mov
mov
mov
add
add
add
xor
push
dec
rcl
jo
sub
dec
add
pop
and
ror
mov
fadd
sbb
inc
int3
or
push
mov
call
or
push
lea
push
add
adc
repz
int
xor
fs
fucomp
nop
sub
xchg
push
push
push
or
pop
iret
or
push
mov
sbb
dec
push
push
and
fstp
ret
lock
pop
xor
ins
add
mov
pop
ret
add
nop
loope
in
into
or
hlt
clc
mov
xor
jne
and
mov
cmp
jo
out
push
mov
call
mov
fisub
fwait
mov
mov
add
or
mov
push
test
and
jp
mov
xor
mov
call
dec
call
test
adc
mov
or
jmp
rcl
fcmovb
shr
pusha
icebp
pop
adc
ret
mov
sub
sbb
push
or
cwde
in
popf
sbb
fs
pop
mov
(bad)
xor
(bad)
pop
stos
inc
xor
and
mov
adc
call
jmp
(bad)
xor
pop
mov
xor
mov
mov
in
mul
cwde
(bad)
sub
outs
push
dec
add
loopne
and
in
les
arpl
lods
cld
push
addr16
jb
push
sub
pop
pushf
or
sub
cmp
or
inc
sbb
(bad)
ins
push
xor
xor
xor
jecxz
cmp
mov
sbb
repz
in
cld
adc
and
xor
xor
push
xchg
int3
ret
loope
sahf
(bad)
lock
adc
and
ret
xchg
add
(bad)
dec
pop
push
jb
mov
inc
push
dec
xor
dec
arpl
scas
jne
add
push
data16
popa
outs
jl
outs
inc
jae
add
imul
push
enter
ds
xor
outs
es
out
xor
imul
jae
inc
push
(bad)
imul
dec
push
pop
push
dec
dec
dec
pop
inc
fs
gs
leave
sub
push
mov
xchg
or
mov
fs
gs
jae
add
sub
je
jne
jb
dec
jp
rcr
popaw
arpl
inc
xchg
test
dec
adc
jb
popa
hlt
mov
xchg
adc
mov
cdq
sti
lahf
adc
add
fwait
ins
out
mov
pop
dec
out
mov
mov
xor
in
ins
jne
dec
arpl
repz
dec
dec
gs
jb
xor
