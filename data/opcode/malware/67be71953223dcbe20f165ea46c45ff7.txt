sbb
add
add
pop
imul
inc
test
mov
xchg
cmp
(bad)
jge
or
das
les
shl
js
sbb
pop
mov
aaa
das
or
adc
push
or
push
loopne
shr
iret
fst
loop
sti
in
adc
(bad)
and
mov
je
push
out
cmp
and
inc
xor
dec
test
sub
push
es
cmc
mov
inc
fs
ja
cmp
pop
lea
inc
mov
in
mov
push
outs
xor
ret
adc
popa
push
lock
stc
and
jmp
fwait
cmps
daa
ja
shl
(bad)
mov
jbe
daa
xchg
js
xchg
pop
dec
mov
mov
pop
push
sti
sbb
(bad)
aaa
add
rcr
adc
mov
imul
out
ret
push
jmp
(bad)
scas
ss
test
fldl2e
imul
sub
cmp
inc
mov
cmps
fwait
gs
into
dec
adc
xor
arpl
sub
outs
dec
push
add
daa
clc
in
adc
gs
icebp
js
inc
jb
push
adc
push
add
shl
sbb
test
fidivr
pop
ins
cdq
jmp
cld
mov
hlt
and
aad
rcr
leave
dec
push
mov
jno
xlat
xchg
sub
adc
or
push
jg
dec
jnp
mov
icebp
push
jle
cs
test
pop
cmp
jmp
sub
out
fld
xor
mov
adc
arpl
mov
mov
xor
adc
xor
xlat
mov
mov
in
dec
aad
loopne
(bad)
lods
inc
mov
outs
ret
sub
pop
loop
pop
popa
rsqrtps
sub
or
call
sar
mov
xor
push
cdq
(bad)
scas
cmp
outs
movs
call
mov
jecxz
jno
retf
mov
lods
and
adc
outs
mov
inc
gs
ror
push
pop
pop
jmp
ss
iret
loope
shl
bound
sbb
xchg
adc
push
not
jmp
sbb
dec
ret
sub
mov
adc
test
lahf
cs
and
fsubr
fs
push
xor
adc
adc
mov
iret
sbb
imul
imul
add
push
and
hlt
inc
stos
sub
les
pop
mov
out
push
mov
cs
or
sub
push
and
(bad)
call
cmp
nop
addr16
lods
inc
xlat
stc
jo
mov
mov
cmps
cmp
push
xchg
xchg
cmc
sbb
dec
and
sub
pop
jge
and
mov
outs
sti
push
fnstsw
or
ins
or
add
xor
and
aas
movs
inc
dec
div
lods
dec
push
xchg
sbb
rol
jge
cmp
jp
push
adc
xchg
loope
pop
cwde
in
or
mov
ret
pop
or
mov
mov
pop
aas
mov
iret
gs
sub
sub
inc
sar
cmp
cmc
push
push
stos
popa
test
rcr
rcl
mov
cmc
xchg
mov
pop
sub
pop
out
sar
xor
sbb
stos
xchg
adc
stc
sahf
add
pop
cwde
xor
mov
popa
xchg
mov
lock
aad
bound
jae
dec
clc
mov
push
sbb
pop
dec
loopne
pop
mov
mov
sahf
and
fnstenv
leave
test
xor
inc
xchg
xchg
jmp
mov
fs
push
cdq
std
dec
cmp
ficomp
movs
jg
jmp
cmp
inc
or
jmp
mov
xchg
fild
pop
xlat
call
pop
jg
mov
jo
(bad)
mov
add
es
popf
fstp
or
loope
cmp
cmp
in
push
mov
mov
adc
lods
in
sahf
call
pop
xor
adc
jno
xlat
movs
fmulp
popf
inc
add
clc
sahf
lahf
ins
jg
add
xchg
fst
test
scas
sbb
out
jmp
iret
jbe
jne
lods
adc
ret
mov
stc
jmp
out
mov
leave
cdq
arpl
cmp
inc
loopne
push
cmps
test
loopne
je
and
cmp
in
mov
cmp
push
jbe
cmp
dec
jg
stc
add
dec
fs
rcl
push
pop
(bad)
into
inc
mov
sub
fistp
xor
fwait
and
cmps
ins
mov
push
jle
out
je
pop
cmps
jbe
inc
das
adc
mov
mov
icebp
cmc
jne
jge
scas
cmp
push
xor
fld
mov
pop
enter
mov
dec
(bad)
shr
adc
retf
jo
test
mov
inc
and
fucom
or
les
shl
mov
hlt
add
(bad)
loope
call
icebp
jecxz
(bad)
addr16
sbb
and
dec
(bad)
aaa
push
std
xor
push
es
add
push
xchg
mov
add
mov
out
inc
inc
aam
xor
inc
pop
xor
dec
std
jmp
out
bnd
xlat
shl
shl
mov
inc
jns
sub
(bad)
xchg
and
jle
icebp
xlat
sub
repnz
inc
add
lods
pop
outs
mov
jae
mov
jb
cdq
ja
and
jg
dec
pop
and
cwde
icebp
cs
jne
(bad)
pop
xor
push
mov
mov
jnp
jge
sbb
xchg
jg
shl
inc
pop
outs
iret
and
in
dec
push
ins
and
inc
pop
and
loopne
and
shl
xchg
nop
mov
js
xchg
jo
retf
mov
mov
gs
fwait
mov
frstor
push
push
xchg
scas
pop
cdq
nop
jne
lods
push
retf
mov
inc
mov
xor
js
outs
sti
outs
sbb
mov
push
pop
fild
or
or
or
xor
ins
imul
xchg
sub
pop
and
adc
sahf
jle
test
jae
inc
das
pop
out
and
outs
dec
inc
push
xor
mov
pop
cmp
es
mov
pop
imul
test
ret
mov
shl
push
mov
push
and
jp
ret
cld
mul
jne
ss
inc
lods
fstp
cmp
adc
push
pop
sub
xlat
hlt
sti
(bad)
je
scas
inc
mov
fst
push
mov
mov
mov
mov
loop
aam
jmp
push
push
out
cmp
call
add
and
enter
inc
or
pop
je
aad
mov
aas
cmp
push
jle
dec
sub
xchg
mov
int
daa
outs
push
jo
push
out
daa
push
and
adc
add
add
loop
retf
push
imul
sbb
jmp
movs
jne
push
ins
jle
sub
push
sub
test
pop
dec
xchg
xlat
outs
inc
dec
imul
or
sub
imul
lock
(bad)
idiv
inc
inc
sub
pop
add
scas
or
call
aaa
dec
not
push
mov
pop
in
push
js
dec
mov
sub
js
addr16
iret
adc
sbb
test
ins
test
daa
pop
sbb
pop
dec
mov
enter
arpl
or
dec
push
sbb
push
pop
ja
rol
and
mov
cmps
mov
movs
xor
sbb
mov
neg
ds
pop
inc
mov
nop
jne
stos
cmp
pop
jl
cdq
sub
push
jno
mov
inc
jle
pop
and
sbb
test
leave
cli
and
fcmovbe
movs
sbb
adc
js
ss
xchg
mov
in
lods
lods
nop
push
aam
loopne
ret
push
imul
cmp
add
bswap
mov
mov
repnz
jmp
push
clc
data16
adc
cmp
jnp
stos
adc
push
cmp
pushf
sbb
push
xchg
cmp
sbb
fisttp
lea
sub
inc
dec
mov
cmp
lods
or
cs
loop
and
fimul
in
pop
xor
dec
inc
aad
add
leave
or
push
in
push
inc
(bad)
sub
jo
mov
ds
pop
xor
sar
ins
retf
fmul
mov
cmp
dec
dec
lahf
push
inc
pop
pop
ror
mov
out
xchg
xchg
mov
mov
dec
daa
shl
test
xor
neg
adc
loope
sbb
add
cmp
rcr
hlt
retf
cld
jns
stos
and
pushf
sbb
fcomp
int
lods
sti
retf
fisub
imul
pop
clc
outs
push
mov
test
lea
icebp
sub
call
mov
rcr
sub
fild
cdq
inc
cmp
out
ret
in
ja
mov
enter
jmp
ja
leave
mov
jmp
mov
sahf
mov
dec
ja
(bad)
gs
test
or
pop
dec
iret
inc
or
scas
fsincos
inc
dec
cs
aaa
cmp
mov
inc
sbb
mov
aaa
adc
stc
cwde
mov
inc
cmp
mov
xchg
fyl2xp1
movs
stos
in
mov
pop
and
jns
mov
mul
push
cli
fimul
out
mov
ret
adc
cmp
movs
(bad)
pop
xor
sar
sahf
bound
hlt
push
bound
push
or
ins
fild
out
push
mov
or
ss
mov
into
adc
mov
nop
jg
cmp
aad
ins
pop
rol
std
xor
scas
mov
pusha
rcr
int3
(bad)
cmc
xchg
mov
iret
je
cmp
jge
(bad)
xor
cwde
adc
add
inc
ins
sub
rcr
inc
sub
cmps
scas
xor
and
ror
adc
pop
ins
das
jno
pop
jp
mov
dec
leave
retf
xor
retf
cld
outs
frstor
sti
(bad)
mov
ins
jno
dec
(bad)
lods
int3
sub
stc
add
data16
push
xchg
idiv
shl
pop
or
jmp
and
cmc
lahf
scas
add
mov
in
xor
(bad)
(bad)
add
cmps
ret
push
fild
jle
push
jmp
xchg
in
jp
mov
push
movs
pop
dec
cmps
mov
stos
mov
movaps
test
das
out
push
fist
test
add
sub
mov
nop
pop
test
mov
inc
cmps
jl
test
ret
sar
adc
inc
fwait
push
jnp
pop
push
jnp
adc
(bad)
cmps
popa
add
ins
mov
out
xor
test
fmul
jle
jp
jnp
(bad)
das
popf
pop
sub
mov
int
jp
push
mul
xor
fcom
inc
mov
les
arpl
mov
or
cmc
fldpi
mov
hlt
test
dec
test
xor
dec
aam
fs
mov
xchg
push
das
in
test
dec
shr
mov
or
inc
or
inc
ja
adc
cwde
popf
cmp
push
into
aam
sti
push
jns
sub
ret
pop
ror
xor
push
imul
and
(bad)
retf
sbb
loop
or
das
and
fidiv
inc
mov
call
xor
pop
repnz
ja
or
inc
cmp
cmps
push
lds
ret
repz
int3
stc
add
cs
in
sahf
cld
ss
sar
inc
mov
int
xchg
cmc
icebp
sbb
mov
outs
pop
popa
pusha
call
pop
sti
les
mov
cmp
ss
imul
(bad)
fisubr
repnz
mov
outs
int
rol
outs
pop
es
pop
xchg
fidivr
lea
xchg
div
call
adc
sub
imul
(bad)
stos
imul
sub
lods
aad
cmp
imul
rcr
int
mov
mov
sti
nop
mov
pop
stos
pop
mov
cmc
sbb
cmps
xor
shl
fdiv
jge
imul
jne
inc
sbb
mov
icebp
jo
xor
hlt
(bad)
sbb
or
jns
stos
sti
mov
pop
cdq
ror
add
pop
mov
cwde
sbb
add
ds
pop
xor
stc
cwde
mov
bound
xlat
mov
in
adc
lock
push
jle
scas
or
xor
imul
pop
push
dec
adc
js
xor
mov
pop
mov
cmps
jmp
push
stos
mov
and
std
cmp
cmp
sub
push
popa
mov
xor
sub
cwde
fucomip
pop
jo
dec
sub
test
les
jo
imul
cld
dec
cwde
cld
inc
jmp
repnz
push
cli
fldcw
aad
push
mov
sub
dec
mov
push
ins
inc
or
lods
pop
sbb
aam
adc
dec
sub
ficom
pushf
push
inc
ins
adc
mov
or
test
xor
xor
outs
mov
rol
ficom
addr16
jo
jecxz
push
and
dec
mov
or
add
daa
aaa
xor
xchg
(bad)
stc
sub
inc
xor
sub
lea
or
mov
and
pusha
and
pop
push
(bad)
call
inc
or
ja
not
and
dec
cmp
dec
dec
fadd
or
pop
cmps
dec
xor
dec
cmps
jbe
push
xchg
adc
inc
lods
mov
pop
xor
dec
or
xor
lahf
imul
xor
mov
out
js
dec
add
stos
stc
fisub
leave
mov
icebp
enter
mov
inc
and
add
mov
add
and
sub
sub
(bad)
inc
mov
pop
mov
and
jp
pop
sar
dec
pop
(bad)
cmps
enter
xor
iret
mov
pop
or
mov
es
jmp
mov
mov
into
inc
ins
jmp
fdiv
pop
loop
and
jae
je
sahf
cmps
in
add
adc
or
push
pop
mov
shl
jg
jnp
repnz
test
rcr
(bad)
cmps
jg
ins
sbb
push
push
xchg
mov
gs
push
mov
outs
mov
cmp
retf
push
les
ins
pop
add
or
cld
xchg
mov
mov
movs
clc
xchg
push
dec
mov
and
add
hlt
es
bound
popa
in
push
addr16
cld
or
iret
lods
dec
adc
push
loop
jns
dec
push
retf
icebp
retf
in
cld
jo
mov
xchg
jns
fcmovne
cmp
adc
jmp
fwait
jp
sub
mov
dec
rol
aam
xor
or
scas
xor
xchg
cmp
mov
lock
xchg
repnz
xchg
mov
loop
xor
aaa
out
cmp
mov
in
jl
jno
rcr
and
xor
add
sbb
dec
sub
mov
shl
lock
jg
add
inc
outs
mov
add
in
cdq
aas
std
int
ret
xchg
add
test
daa
fimul
jne
cli
inc
gs
jecxz
xor
xchg
mov
sub
xor
mov
push
addr16
cdq
mov
rcl
dec
and
cmp
dec
scas
es
xchg
(bad)
and
popf
mov
cmc
int
shl
push
dec
int3
das
ficomp
dec
push
mov
add
pop
or
call
iret
mov
or
add
rcr
lods
and
mov
cmps
mov
jmp
lahf
pop
sbb
inc
mov
jbe
mov
pop
fisub
sar
mov
pop
in
test
and
jge
mov
es
inc
mov
jge
xor
(bad)
loop
(bad)
pop
dec
stos
mov
ins
in
mov
mov
mov
(bad)
rcl
pop
ins
and
xchg
outs
cmps
mov
push
and
shr
inc
jp
fs
imul
test
out
xor
xchg
inc
outs
jne
cmp
push
push
inc
js
mov
pop
and
push
push
movs
mov
call
rcr
xchg
mov
(bad)
mov
pop
lea
imul
das
imul
rdtsc
sbb
ds
ficomp
xchg
or
xchg
pusha
or
ror
adc
mov
sub
xchg
fnsave
sub
inc
mov
imul
xor
adc
sbb
dec
mov
je
xor
std
mov
mov
data16
(bad)
test
fild
jno
in
add
push
cmps
cwde
lds
sbb
aas
call
(bad)
stc
je
fidiv
shl
es
movs
dec
fldcw
jp
fcmovbe
cmp
dec
rcr
icebp
add
or
push
mov
adc
jns
fisubr
dec
jp
xlat
push
dec
dec
popa
sbb
clc
mov
cmc
xor
sub
pushf
sbb
push
xor
sbb
lods
fdiv
icebp
push
(bad)
xor
fisttp
(bad)
mov
fdiv
bound
movs
jne
mov
adc
dec
inc
or
cmp
clc
idiv
inc
dec
fild
mov
cmp
pushf
pop
daa
pop
loope
addr16
jb
les
neg
in
arpl
ins
and
and
mov
nop
sahf
jno
pop
(bad)
xchg
push
jo
ds
add
mov
adc
fsub
nop
pop
dec
xchg
dec
scas
fdiv
mov
fs
jne
stos
xlat
cmp
pusha
fcomp
ret
dec
lea
pop
ins
add
mov
xchg
jmp
shr
mov
out
or
enter
adc
pop
inc
cli
mov
mov
push
inc
and
push
shr
sahf
sub
fld
cmp
or
xchg
add
mov
jge
(bad)
int
cld
push
pop
mov
(bad)
sti
dec
inc
fdivr
fiadd
lahf
jne
xor
retf
sysenter
cmp
adc
xchg
iret
out
dec
adc
sbb
xchg
lock
jo
gs
mov
arpl
std
xor
sub
sub
cmps
xchg
adc
sub
mov
ja
sub
mov
push
fwait
inc
aam
pop
cmp
cwde
sbb
imul
jmp
add
test
mov
fisubr
jae
stos
call
lds
pop
mov
pop
pop
xchg
mov
in
inc
dec
je
stc
enter
daa
push
das
out
jp
pusha
pop
sub
add
out
clc
or
icebp
dec
(bad)
adc
dec
push
fistp
imul
outs
and
xor
mov
push
aaa
sub
push
mov
jg
mov
call
aaa
ret
test
test
mov
xor
test
sub
xchg
mov
loope
(bad)
add
adc
pop
sbb
mov
sub
fwait
jl
cmp
bound
push
out
(bad)
cmps
cmps
xor
sar
(bad)
ins
in
out
fiadd
ret
mov
xchg
pop
clc
xchg
inc
pop
ss
inc
test
es
(bad)
popa
mov
inc
add
repnz
push
hlt
inc
test
gs
pop
sbb
sbb
and
movs
cmp
cmp
xor
enter
(bad)
sbb
shl
push
xlat
je
pushf
sub
inc
pop
sar
pop
aam
cld
ins
sbb
ja
inc
fisttp
fwait
sub
test
daa
cmp
sti
sahf
jle
pop
into
retf
rcr
aam
cdq
push
mov
test
inc
sar
xchg
mov
stc
push
fs
ret
(bad)
jns
or
mov
(bad)
movs
add
shl
mov
mov
xchg
jae
adc
test
xchg
lds
aaa
into
fcom
or
inc
pop
outs
pusha
rcr
stos
xchg
outs
ret
leave
int3
mov
mov
jmp
aaa
jae
in
mul
sub
pop
cmp
inc
xor
push
repz
iret
xchg
rcr
cli
addr16
sub
mov
ins
push
push
cmps
(bad)
add
repz
out
lahf
pop
pusha
leave
cwde
adc
out
(bad)
loop
outs
dec
jl
and
adc
call
je
or
add
fistp
add
test
daa
scas
sub
dec
popa
mov
or
gs
ins
mov
pop
loopne
(bad)
xor
aas
(bad)
iret
inc
mov
das
pop
mov
add
leave
jle
scas
dec
bound
and
dec
imul
and
dec
jns
push
push
ins
ins
jae
xor
push
pop
xor
adc
int
nop
addr16
cdq
and
movs
mov
cdq
push
or
inc
clc
fcom
xor
inc
push
loope
adc
stos
xchg
xor
sub
addr16
sti
dec
in
xor
in
leave
and
ror
sbb
sar
imul
xchg
mov
add
xchg
mov
pop
sub
mov
aaa
fld
iret
mov
test
in
loop
cmp
pop
push
fs
clc
ins
sbb
cmp
inc
fs
imul
or
enter
push
add
and
cmp
adc
(bad)
push
neg
repz
sbb
stc
jbe
enter
pushf
std
fild
cmp
lods
jmp
push
daa
sub
jmp
in
addr16
sub
jecxz
cld
loope
(bad)
push
xchg
add
fs
jmp
jl
jl
ret
cmp
add
in
and
ret
jecxz
out
xor
sub
and
adc
fsubp
add
mov
movs
xchg
xchg
scas
and
adc
add
mov
push
dec
pop
dec
dec
pop
mov
ficom
pop
out
add
enter
cmp
and
xor
cwde
inc
ds
mov
je
loop
pop
and
add
aad
pop
jne
int3
push
(bad)
in
sbb
in
cmp
mov
mov
sahf
inc
inc
lahf
mov
gs
fisub
mov
hlt
jns
lahf
mov
mov
in
enter
push
test
sbb
pop
jle
jecxz
cld
clc
xchg
lods
push
xchg
movs
stc
ins
test
mov
aad
ficomp
data16
daa
mov
fild
lahf
gs
loopne
scas
mov
stos
pop
and
add
jo
pop
xchg
inc
outs
bound
aaa
stos
mov
sub
ds
jbe
push
pushf
add
xchg
(bad)
xlat
(bad)
mov
sbb
lock
or
jge
test
mov
out
sub
push
lods
sub
mov
xchg
std
mov
cmp
jmp
int3
outs
shl
and
shl
outs
(bad)
cmp
pop
clc
or
or
or
jb
mov
pop
(bad)
jno
ins
or
xchg
jmp
hlt
cli
mov
dec
mov
xor
mov
inc
fistp
cmp
adc
sub
jmp
fs
sbb
or
mov
mov
dec
cmp
adc
ja
and
xchg
cmp
out
mov
(bad)
popa
fstp
mov
ins
pop
jmp
iret
stos
inc
add
jno
mov
jl
addr16
adc
inc
mov
and
cmp
les
sub
stc
fild
ror
xchg
mov
jno
push
ds
push
out
ins
and
js
mov
(bad)
in
into
sub
cmp
retf
xlat
fldenv
lods
cmp
jmp
imul
mov
jg
and
mov
push
adc
(bad)
ss
sbb
outs
cmp
pop
push
sbb
inc
sbb
push
es
mov
leave
mov
rol
mov
xchg
aaa
imul
loop
adc
ficom
mov
stos
xchg
xchg
add
rcl
clc
aam
dec
out
inc
cmp
and
mov
mov
pop
mov
shr
cmp
xor
mov
xchg
jbe
or
shr
inc
mov
arpl
jmp
mov
call
fisubr
fst
add
addr16
xor
je
adc
push
or
dec
jb
push
mov
nop
pop
push
pop
xor
popa
push
xchg
pop
mov
imul
jle
adc
add
repnz
pushf
jne
cmp
icebp
or
sub
add
push
sub
add
fdiv
not
daa
repz
ret
adc
mov
fs
fstp
xor
and
aad
pop
sbb
clc
sbb
or
aaa
lock
mov
fild
dec
push
retf
mov
mov
iret
sbb
mov
bound
pop
push
xchg
dec
repnz
jbe
popf
pop
fbstp
in
das
jbe
xlat
scas
(bad)
out
dec
repz
cmp
repz
fimul
mov
scas
push
jae
push
cwde
aaa
jns
sub
stos
push
mov
js
sub
mov
lock
pop
scas
mov
je
add
mov
add
pop
inc
fcmovu
in
mov
outs
mov
adc
jle
mov
push
jae
icebp
mov
mov
loop
adc
add
pop
test
je
mov
cmc
retf
fs
or
add
cmp
popa
add
fst
sar
iret
in
mov
push
xchg
and
neg
(bad)
ds
push
jp
jb
mov
ja
enter
(bad)
mov
xor
ficom
pop
jo
mov
adc
js
bnd
shl
jae
dec
add
or
jne
inc
pop
pop
inc
or
lea
push
movs
inc
fidiv
xchg
dec
sti
add
inc
cmc
imul
jae
jne
push
aam
bound
test
cli
rcl
mov
in
das
inc
mov
dec
mov
xlat
into
or
ret
loope
mov
mov
call
ins
adc
and
mov
dec
sbb
cli
or
and
lods
push
rcl
xor
rol
test
lahf
test
out
pop
xchg
jnp
xchg
mov
cld
repnz
outs
aaa
pusha
js
cmps
lock
adc
mov
dec
add
out
mov
mov
inc
in
lea
add
jp
ret
mov
outs
pop
loop
pop
adc
pop
enter
cmp
(bad)
fcomp
(bad)
bound
outs
jno
mov
test
je
adc
rol
sub
mov
pop
xor
pop
nop
pop
bound
push
mov
arpl
cli
cld
div
test
pop
push
jp
sbb
imul
aas
xchg
cmp
test
push
in
mov
push
inc
repz
sub
cld
ja
xor
xor
cld
fist
adc
loop
and
in
loope
and
(bad)
pop
or
dec
aas
into
loopne
aaa
fld
xchg
inc
mov
push
lock
jns
jb
shl
jno
xor
int
(bad)
movs
(bad)
push
(bad)
sub
add
fsub
xchg
aam
dec
sbb
dec
dec
xchg
pusha
or
push
idiv
cmc
sub
mov
mov
rcr
ror
mov
ret
rol
pushf
inc
mov
ss
xchg
adc
aaa
push
xchg
mov
outs
cmp
add
imul
shr
iret
inc
mov
pop
sub
mul
adc
add
cld
mov
pop
in
neg
push
in
addr16
int
push
retf
pop
sar
xchg
inc
mov
mov
ss
mov
xchg
je
fnsave
hlt
cdq
add
add
mov
punpckhdq
mov
into
(bad)
shr
js
loop
cmp
add
mov
push
pop
dec
aad
sti
ja
cmp
fistp
or
lods
mov
jle
fld
jbe
push
cmp
jp
mov
cmp
test
sub
xchg
(bad)
outs
push
scas
les
int
in
outs
or
push
push
pusha
xchg
cld
into
mov
fxch
inc
push
sbb
adc
retf
sub
sar
leave
dec
imul
push
xor
inc
xchg
in
(bad)
in
fmul
mov
fdiv
and
mov
mov
movs
dec
pop
mov
(bad)
(bad)
pop
in
pop
pop
adc
push
push
mov
pop
add
aad
test
push
arpl
xor
push
fmul
cmp
mov
icebp
xchg
cwde
xor
sub
add
rcl
nop
outs
mov
mov
cs
xor
mov
mov
or
(bad)
sti
push
xlat
test
loopne
add
daa
lds
xchg
clc
adc
aad
inc
mov
call
clc
in
pop
imul
bound
xchg
or
lock
js
lods
mov
xor
popa
jno
nop
dec
shr
ret
lahf
cmp
or
(bad)
push
push
fadd
repnz
lahf
cmp
mov
xor
mov
adc
xor
fldenv
add
fbstp
push
push
pusha
gs
mov
mov
mov
pushf
imul
push
mov
jg
retf
(bad)
push
and
loop
inc
(bad)
fdiv
loop
add
sub
push
inc
js
mov
cwde
movs
xor
adc
addr16
add
mov
pop
mov
(bad)
adc
push
xchg
push
(bad)
scas
mov
adc
out
ins
ss
idiv
pop
mov
mov
shl
int
out
cwde
jnp
ret
jns
iret
adc
push
jno
movs
pop
inc
jne
icebp
jns
add
daa
outs
sub
add
push
fwait
jl
jo
aad
mov
cwde
push
and
test
enter
fisub
cld
add
sbb
add
in
mov
and
sub
and
pop
jnp
jo
sbb
add
test
cmp
sub
shl
add
loopne
js
scas
jnp
mov
stc
push
mov
mov
mov
mov
adc
cmp
pop
push
scas
push
addr16
ds
imul
mov
xchg
mov
rcl
jg
cmp
xchg
inc
sahf
loope
(bad)
mov
adc
add
cmp
retf
sti
loop
mov
sar
fwait
and
sub
sbb
int3
icebp
pop
cmps
scas
nop
cli
stos
cmp
xchg
mov
mov
sub
(bad)
out
and
(bad)
sbb
pop
xor
in
inc
and
popf
sub
loope
out
and
fwait
js
sbb
mov
add
fdivr
add
xchg
add
adc
das
mov
shl
jecxz
mov
xchg
iret
call
mov
ret
loopne
mov
pop
xchg
fwait
jbe
mov
aam
sbb
jbe
dec
je
sahf
and
mov
add
repnz
loope
(bad)
jg
enter
hlt
leave
xchg
mov
sub
mov
adc
lahf
mov
inc
test
jae
sahf
(bad)
push
in
imul
pop
xchg
data16
dec
cmp
imul
scas
mov
mov
mov
sbb
xor
ret
ficomp
retf
mov
cmp
push
pop
hlt
xchg
sbb
pop
cmp
repnz
es
or
cmp
jle
lods
jmp
pusha
icebp
cwde
jecxz
dec
xchg
adc
jno
fwait
jo
inc
retf
cwde
inc
mov
iret
inc
pusha
xchg
cmp
jp
mov
mov
jp
neg
lods
or
in
add
pop
inc
lods
sti
std
mov
xor
jg
inc
call
adc
hlt
dec
int
xchg
daa
out
bound
sbb
sbb
and
xor
push
sub
jl
stc
push
fs
and
stc
sbb
dec
push
mov
fucomip
sahf
jmp
cld
nop
jl
fstp
addr16
out
ja
add
das
mov
imul
dec
sub
cmp
lock
xchg
lock
mov
out
mov
popa
jbe
mov
or
mov
pop
outs
mov
cmp
das
loop
in
and
icebp
popa
inc
mov
js
dec
mov
and
sbb
pop
imul
lock
push
or
push
jns
jg
inc
pop
aas
rol
ffreep
cmp
lock
fst
sahf
call
sbb
and
mov
in
push
movs
lods
shr
sub
call
mov
fild
out
mov
(bad)
cmp
cmps
sahf
push
jp
repz
pop
mov
fist
xchg
rcr
clc
retf
stc
lock
loope
mov
mov
rcr
fnstenv
adc
cmp
arpl
push
pop
hlt
imul
or
jns
(bad)
cmp
xor
push
loop
cmp
mov
in
pop
inc
stc
ret
leave
or
add
stos
cmps
lahf
aad
pop
out
push
jl
shl
ficom
inc
add
out
dec
xor
and
inc
cmp
test
aam
sub
int3
scas
mov
das
fstp
into
lods
ror
xchg
scas
test
jae
jo
mov
mov
cmp
and
mov
inc
pop
lock
(bad)
cld
les
js
push
std
xchg
ins
and
mov
cmps
xchg
nop
shr
push
push
leave
inc
or
dec
sti
int
dec
mov
cdq
push
je
rcr
jle
or
inc
ja
pop
clc
jno
or
mov
lahf
mov
pop
jmp
ins
or
jg
xor
or
imul
in
adc
or
inc
cwde
rol
mov
mov
mov
push
sbb
iret
add
xchg
cmp
or
je
mov
pusha
(bad)
cld
mov
aas
adc
pop
int3
retf
jle
sbb
xchg
loop
xor
stos
jge
jg
jl
in
xchg
mov
push
test
daa
std
cwde
xor
or
outs
sbb
cs
cld
cmp
pop
push
jl
dec
mov
test
push
and
xchg
push
mov
paddq
mov
xor
imul
and
adc
ror
fsub
out
xchg
lea
pop
retf
jl
lea
cdq
pusha
fist
out
push
loopne
fwait
xor
cwde
int3
mov
jo
fbld
test
xor
adc
push
pop
jp
repz
push
inc
mov
jmp
dec
sbb
retf
sub
stos
mov
dec
or
xor
call
outs
ret
jb
cli
test
jnp
fsub
or
and
and
out
rol
leave
jmp
mov
aas
repz
push
xor
into
dec
or
arpl
arpl
ja
fbld
xor
inc
mov
call
cwde
(bad)
fisubr
pop
mov
(bad)
hlt
pusha
bound
mov
pop
outs
das
pop
into
repz
(bad)
mov
aam
mov
jne
mov
push
repnz
jmp
stos
jae
xor
movs
jle
push
inc
mov
daa
enter
jo
rol
dec
dec
cmc
xchg
lahf
mov
lds
(bad)
popa
sbb
lods
mov
arpl
jg
pop
sbb
dec
stos
jl
push
sub
jae
test
icebp
shr
(bad)
retf
cli
bound
cs
inc
dec
sbb
dec
jns
lods
scas
mov
cld
fmul
push
(bad)
cmc
cmp
inc
ret
mov
inc
xchg
add
sbb
adc
aad
mov
jle
ret
cmp
leave
stc
xchg
mov
shr
rcl
fimul
xchg
loope
movs
jae
aas
popf
cmp
mov
and
push
cmp
xor
mov
aam
sbb
or
sub
sub
(bad)
std
(bad)
fnsave
vminpd
or
ficomp
pop
push
fistp
mov
das
inc
retf
ds
sti
push
popa
adc
leave
ret
jae
and
cmp
inc
jne
mov
and
sti
adc
pop
and
popf
sub
mov
in
lods
inc
rcr
mov
repnz
dec
mov
shl
leave
xchg
stos
jnp
das
xor
imul
iret
rcr
push
xlat
repz
cmp
movs
mov
stos
cdq
cmp
jnp
mov
mov
mov
mov
sar
mov
pop
fmul
ret
sub
jmp
xchg
fistp
aam
xchg
add
not
adc
bound
int3
adc
(bad)
fld
repz
pop
add
push
push
mov
sbb
je
rcl
cmp
or
ds
mov
outs
call
mov
mov
lea
js
sbb
shl
and
push
sbb
add
scas
lahf
jnp
cmps
sub
sahf
or
and
push
mov
pop
outs
fsubr
jb
xchg
and
aas
mov
loope
and
(bad)
inc
jp
push
aas
mov
sahf
pop
je
xchg
mov
movs
xor
int3
cli
push
mov
cmp
movs
xor
shl
sub
test
mov
push
jo
fldenv
ret
ins
adc
cli
jbe
pop
adc
push
mov
neg
cdq
jg
inc
cmp
and
jns
repnz
imul
lods
stos
test
push
inc
push
add
fsub
pusha
adc
fwait
xchg
pop
test
cs
lea
rcl
push
sub
lds
and
std
stos
loopne
jmp
cmp
das
cmps
data16
fstp
enter
lods
(bad)
cmc
ror
xchg
sub
push
pop
push
adc
cmp
xchg
lods
cmc
lds
ins
fs
ret
call
adc
cmc
push
push
cmp
fsub
shl
idiv
pop
mov
popa
and
dec
movs
jno
sub
mov
ret
or
ds
aaa
hlt
test
clc
mov
mov
dec
add
pop
mov
sbb
sub
cmp
(bad)
xchg
xor
pop
neg
call
dec
fstp
out
std
ret
xchg
sbb
push
(bad)
or
add
lea
jp
jnp
cmp
hlt
mov
xchg
lods
fisub
sti
popa
fs
pop
arpl
mov
push
and
aam
in
sahf
cli
and
fild
shl
ins
sbb
js
mov
into
pop
xor
test
fbld
ret
rcr
cmp
sbb
sbb
loopne
add
pushf
pop
lods
lea
popf
call
mov
and
cmps
adc
cmp
push
inc
sbb
cmp
xor
jmp
inc
lahf
cmp
daa
fcomp
sti
mov
push
int
sbb
mov
repz
xchg
pusha
push
ja
xor
bound
jmp
jbe
adc
jne
add
sbb
mov
sbb
lock
cmp
cli
int
xchg
mov
pop
and
xchg
inc
(bad)
lods
dec
not
pop
mov
je
aaa
popa
dec
push
iret
dec
dec
loopne
xor
pop
dec
jl
dec
fdivr
push
push
jae
cmp
lds
jmp
xchg
xor
adc
pusha
rcl
jl
ret
loope
xor
mov
out
js
pusha
daa
mov
idiv
fsub
push
cli
xchg
inc
fistp
xchg
xchg
xchg
push
cdq
imul
jmp
pop
stc
push
jmp
dec
inc
or
(bad)
fld
enter
test
sub
je
lods
mov
mov
stos
jmp
mov
retf
out
and
iret
mov
cmp
fs
dec
fistp
push
jmp
xchg
mov
out
fiadd
imul
xchg
adc
rol
mov
xchg
lock
mov
mov
mov
adc
push
je
leave
div
test
in
jae
pop
or
cld
sahf
sahf
rol
cmc
push
(bad)
xchg
sub
adc
out
das
jno
sbb
add
cmp
pop
add
mov
sbb
test
jecxz
inc
stc
imul
mov
jne
xor
mov
stos
es
mov
frstor
xor
outs
xchg
movs
cmps
outs
mov
cmpps
mov
js
adc
pop
lahf
xlat
rol
sub
aad
imul
mov
jb
adc
xor
ja
loope
jp
pop
push
xchg
int3
and
push
adc
pop
and
push
dec
xchg
loopne
xlat
and
add
mov
inc
imul
xchg
repnz
adc
bound
fs
hlt
mov
jno
push
sti
test
cs
ret
inc
push
outs
sub
mov
(bad)
jb
jmp
or
mov
sbb
movhlps
pushf
lock
jmp
movs
(bad)
out
(bad)
out
jl
and
xchg
rol
and
sbb
iret
jge
jbe
in
jmp
jmp
mov
pusha
ret
push
cmp
jns
lods
dec
pop
repnz
cmp
dec
mov
cmp
pop
jns
push
cmp
inc
mov
stc
mov
fdivr
mov
dec
les
and
repnz
dec
cmp
pop
mov
mov
jno
inc
mov
inc
add
bound
cld
outs
push
(bad)
sti
cmp
pushf
cmps
ret
dec
sbb
daa
and
mov
cmovge
xchg
cs
shl
sahf
and
cli
add
and
fbld
fsubr
inc
push
call
mov
call
(bad)
mov
jbe
ror
push
and
outs
pop
out
cmp
jnp
jmp
add
into
inc
sti
data16
lods
push
nop
mov
sub
xchg
ins
cld
mov
arpl
and
pop
(bad)
xor
add
pop
jl
popf
or
sub
clc
push
jle
(bad)
sti
add
in
jb
or
aas
push
addr16
call
bound
cld
icebp
hlt
dec
sbb
mov
or
out
lods
push
cmp
fwait
sbb
xchg
mov
add
push
je
pop
retf
sbb
mov
push
xor
or
inc
das
push
(bad)
jns
into
dec
dec
mov
push
jnp
mov
sti
lds
loope
mov
jge
adc
adc
ret
jle
ret
imul
jbe
push
and
inc
xor
lock
mul
sub
lock
arpl
fprem
icebp
jp
fld
mov
pop
push
ret
scas
lds
icebp
addr16
xchg
mov
mov
fs
pop
sub
push
ja
ins
mov
add
push
pop
outs
xor
pop
icebp
loop
loopne
loop
lods
imul
shl
in
das
movs
push
pop
idiv
(bad)
icebp
stos
retf
lods
cli
xchg
jno
jge
or
jo
or
jmp
mov
cmp
bound
inc
xchg
fsub
mov
rcl
test
adc
sbb
dec
fistp
aas
jns
cmps
inc
arpl
add
fild
push
dec
xor
push
lods
mov
or
fs
jl
movs
in
popa
shl
xor
and
jp
mov
out
sub
dec
fist
lods
push
adc
push
inc
in
push
or
dec
pop
retf
out
pop
out
sbb
jmp
daa
daa
adc
xchg
pop
in
push
mov
icebp
pop
mul
mov
dec
push
sbb
gs
call
stos
stc
push
les
mov
and
in
mov
fldcw
sub
mov
sti
jns
loope
ficomp
hlt
imul
adc
mov
dec
adc
or
jo
and
cwde
cld
mov
add
popf
pop
mov
cmc
cmps
add
mov
pop
sub
push
scas
and
pushf
mov
jp
mov
sti
(bad)
cmp
mov
mov
(bad)
sar
mov
rcl
sbb
xor
test
daa
(bad)
and
out
pop
out
cdq
imul
cs
fwait
mov
mov
xor
outs
adc
inc
xchg
push
push
sbb
xor
es
js
out
mov
stc
leave
pop
jne
jns
fistp
cdq
rcl
(bad)
mov
in
ja
call
xor
push
xchg
es
cmps
out
repz
adc
xchg
bound
mov
or
repz
loope
ja
cmp
movs
int3
cmp
or
(bad)
iret
and
inc
inc
xchg
in
xor
les
out
sti
bound
pop
sbb
add
cli
fidivr
inc
jbe
cs
daa
jmp
js
aas
add
mov
fisttp
push
adc
(bad)
and
inc
inc
fsub
and
add
inc
mov
push
lods
push
test
(bad)
add
cdq
mov
repz
loopne
sub
bound
aaa
sahf
sub
xor
pop
(bad)
or
js
cmp
fcomp
push
push
sahf
mov
fcmove
xchg
xor
push
in
cmp
dec
sub
sti
lahf
and
push
add
xchg
inc
cdq
mov
gs
aad
imul
inc
or
ret
pop
pusha
jnp
cmp
adc
mov
push
mov
rcl
dec
out
les
add
xchg
and
pop
dec
add
and
jmp
mov
test
fcomp
xchg
pusha
mov
stc
cmc
pushf
sub
fs
mov
(bad)
imul
push
cmp
ins
pop
jne
adc
bound
cmp
mov
dec
out
xlat
pop
mov
mov
push
pop
push
sub
pop
cmp
mov
loop
cmc
int3
shl
into
cdq
jle
push
jmp
xor
out
lods
mov
pop
enter
xchg
dec
inc
push
nop
add
mov
dec
fs
jb
jmp
jb
arpl
pop
mov
in
hlt
ret
jmp
sbb
cmps
dec
pusha
aas
mov
sbb
sub
imul
mul
sub
imul
(bad)
int
sub
in
out
add
ss
dec
fnstenv
xrelease
nop
(bad)
sub
push
fdiv
hlt
stc
pop
mov
arpl
iret
loope
inc
or
push
push
sub
popa
into
frstor
retf
clc
sbb
mov
pop
test
in
mov
mov
jp
and
loop
loopne
mov
stos
or
movs
pop
inc
cmp
jecxz
test
jp
cmp
in
dec
ins
mov
fwait
sub
sar
les
inc
dec
clc
mov
dec
add
cld
imul
(bad)
xor
scas
inc
pop
jecxz
pop
rcl
retf
shr
add
sbb
mov
inc
jno
(bad)
push
push
ret
push
mov
stos
sar
jp
push
mov
stos
fcomp
or
pop
or
call
or
cmp
ds
add
push
sti
je
sbb
mov
jbe
mov
stc
icebp
loopne
mov
cmp
loope
imul
(bad)
mov
cmp
ins
dec
aaa
in
mov
add
adc
scas
dec
(bad)
add
repz
mov
mov
xchg
jge
cmp
(bad)
shl
sub
daa
leave
add
dec
clc
pop
sahf
das
cmp
mov
ret
xor
jbe
xchg
sub
sbb
iret
into
retf
and
jp
sub
sub
and
les
jnp
cwde
rcr
jl
sub
pop
sbb
and
mov
pushf
sbb
jg
fcom
sub
pop
mov
mov
jl
ret
adc
dec
jmp
pop
repnz
mov
xchg
sub
jae
ds
call
add
add
pop
jb
outs
mov
pop
enter
dec
les
lods
push
lods
jg
or
ja
and
aaa
mov
popa
mov
pop
mov
mov
lods
(bad)
jns
cdq
mov
scas
(bad)
xchg
adc
scas
icebp
jne
add
aam
imul
in
imul
cmps
cmp
inc
test
loopne
mov
pop
inc
mov
aam
jmp
mov
fisttp
das
leave
jae
adc
add
ds
fsubr
pop
stos
lods
nop
out
sub
dec
ficomp
mov
mov
fadd
sbb
lods
add
repnz
std
(bad)
dec
sub
sahf
out
add
shl
xchg
ret
jae
or
call
stc
sbb
addr16
and
and
sub
dec
enter
shl
jle
mov
daa
cmp
push
gs
xor
icebp
cmp
stos
xor
hlt
sar
lea
cwde
and
popf
mov
arpl
jb
aas
inc
sub
mov
iret
add
cmp
adc
sbb
push
adc
imul
stos
push
jbe
pop
pop
xor
inc
ins
sbb
mov
arpl
mov
sar
adc
xor
and
call
(bad)
call
jne
ret
jl
gs
call
dec
outs
inc
popf
(bad)
pusha
cmc
or
cmp
gs
push
cmc
sbb
in
mov
xchg
loopne
test
imul
in
jo
and
jl
inc
rol
dec
xor
mov
int
jmp
jnp
iret
ror
out
mov
daa
in
jb
push
arpl
jmp
clc
inc
xchg
cld
cli
push
fldenv
dec
fiadd
ins
jp
int3
(bad)
lds
sub
loop
mov
stos
sub
sub
stos
fnsave
ror
mov
mov
fimul
fcmovu
es
je
fcomp
mov
xchg
xchg
scas
int3
jg
repz
loope
out
int
shl
jmp
lods
daa
pop
sbb
repnz
jecxz
out
retf
push
dec
adc
(bad)
fist
arpl
in
dec
add
xchg
out
add
cdq
jl
and
ret
scas
mov
lds
(bad)
jge
popf
push
jbe
add
cli
mul
ret
ins
or
out
fdivrp
mov
adc
imul
ret
xchg
add
ret
ds
retf
mov
push
es
cdq
jmp
push
fs
dec
xchg
je
mov
inc
hlt
add
mov
or
and
cmps
jne
loop
jo
outs
add
dec
mov
daa
ror
cmp
add
push
mov
sub
movs
loope
pop
les
lea
shl
dec
call
popf
emms
mov
push
fidiv
fabs
inc
popa
inc
sub
fstp
cmp
scas
xchg
pop
sub
push
push
inc
in
mov
into
loopne
and
add
xchg
fisubr
in
mov
out
mov
daa
rol
shl
mov
push
add
sbb
gs
ror
inc
pop
sbb
push
add
push
adc
shr
dec
fidivr
push
test
loope
in
ret
pop
idiv
push
or
cld
shl
jo
and
mov
popa
jmp
sub
cmp
ja
jae
dec
inc
(bad)
mov
retf
mul
jb
sub
push
jnp
adc
sbb
icebp
ins
fadd
(bad)
dec
sub
add
sub
test
cmp
dec
(bad)
test
mov
int
pop
jns
inc
or
mov
and
mov
stos
and
aam
adc
out
ret
inc
repz
adc
aas
imul
cdq
pop
cmps
mov
push
add
je
bound
dec
jno
mov
int
dec
push
int
inc
dec
stc
pop
daa
xchg
call
xchg
int
mov
xor
pop
cld
mov
or
loop
cmp
ins
cmp
hlt
or
pushf
cdq
neg
push
add
add
push
add
mov
sti
pop
sub
and
lahf
lods
xchg
push
push
fimul
jmp
ds
mov
in
cmp
xchg
cmps
push
xor
adc
jecxz
push
in
mov
pop
lahf
cmps
hlt
retf
imul
stc
cmp
xor
pop
pop
sub
test
popf
xchg
iret
or
cmp
inc
jo
outs
dec
sub
test
mov
loope
add
les
sub
xor
xchg
inc
sub
mov
cmp
cmp
and
shl
call
xor
outs
arpl
arpl
pushf
and
sub
push
mov
mov
mov
es
pop
xchg
lahf
lahf
das
sbb
adc
stc
stos
clc
cmp
add
jae
mov
jp
mov
inc
or
out
jne
imul
retf
outs
add
sub
fcmove
mov
jne
dec
xor
xchg
cwde
daa
jp
das
mov
mov
push
out
dec
inc
mov
jne
shr
mov
fidivr
out
fbstp
jp
and
adc
test
test
gs
add
test
std
retf
jl
cmp
sbb
neg
dec
test
fsub
(bad)
jmp
aaa
std
and
loopne
sub
pop
xor
mov
enter
jae
cmp
(bad)
xchg
scas
jecxz
sbb
mov
sub
mov
add
and
inc
call
mov
adc
ja
je
push
imul
jno
adc
xor
mov
or
push
jl
imul
cmp
addr16
stos
xor
xchg
mov
les
lea
jge
call
not
push
int
dec
dec
mov
adc
nop
fbstp
fild
test
(bad)
int
cmp
sub
sbb
repnz
adc
push
daa
push
sub
xchg
das
fmulp
rcl
mov
xlat
cli
into
test
jne
mov
popa
and
lock
cs
in
into
or
nop
in
add
add
adc
sar
inc
fiadd
mov
fisttp
push
push
dec
hlt
imul
dec
cmp
enter
xchg
cmp
jle
int
xchg
mov
mov
shl
rcr
cmp
fnstcw
movs
(bad)
and
sub
std
mov
mov
mov
stc
mov
fcmovu
data16
adc
rcl
fld
(bad)
rcr
ja
call
push
push
inc
cmp
xor
inc
push
int3
sti
sbb
sbb
push
cdq
cwde
loopne
push
xchg
mov
nop
xchg
sbb
pop
or
jmp
iret
mov
es
arpl
mov
add
push
and
sti
jns
sbb
jp
add
(bad)
mov
xchg
jnp
push
repz
retf
mov
jbe
mov
jae
sar
retf
(bad)
lds
sub
and
mov
imul
nop
jl
cmp
adc
icebp
push
lods
lea
jl
test
test
rol
pop
mov
fisttp
sub
in
dec
lods
(bad)
and
into
iret
comiss
dec
jge
xchg
out
scas
adc
lods
(bad)
call
or
sub
mov
mov
cmp
xchg
sbb
dec
sub
retf
pop
clc
repnz
repz
scas
sub
cdq
data16
(bad)
(bad)
(bad)
nop
movs
repz
fcmovbe
into
inc
adc
arpl
stc
(bad)
mov
imul
dec
loop
push
cmps
es
or
mov
ret
mov
jne
xchg
aad
in
stc
pop
cmc
cmp
sub
dec
hlt
push
lods
add
outs
or
sbb
jecxz
ins
inc
ror
push
adc
xchg
add
out
(bad)
test
div
test
xchg
fld
xor
add
(bad)
retf
aad
sahf
fs
adc
retf
sbb
icebp
pop
push
adc
fidivr
push
lods
mov
cli
push
cld
or
jns
stos
mov
mov
jmp
xor
dec
and
ja
lock
adc
ds
in
das
cmc
mov
xchg
test
inc
sbb
rcl
jmp
rcl
push
stc
ss
pop
or
jmp
fbstp
out
mov
adc
dec
jno
or
(bad)
pop
xchg
in
test
pop
lods
mov
call
ror
jecxz
iret
div
sar
rcl
adc
add
pop
in
test
and
mov
or
fwait
jno
jge
or
jne
mov
jle
pop
fwait
jp
and
call
ss
iret
outs
inc
(bad)
aaa
cwde
dec
xchg
test
mov
movs
inc
jp
adc
dec
ja
or
data16
cld
aam
cmc
dec
imul
pmuludq
aas
rcl
pop
ss
adc
sub
jbe
pushf
ins
add
push
add
stc
imul
ja
(bad)
adc
hlt
mov
sbb
scas
inc
mov
dec
and
or
or
es
sbb
clc
inc
xchg
cmc
xor
xchg
mov
test
fnstenv
sbb
sbb
mov
mov
xor
jmp
pop
jp
shr
jmp
out
xchg
inc
mov
pop
cld
adc
and
sub
sbb
add
imul
adc
mov
fistp
fs
adc
sub
shr
xor
or
pop
hlt
cmp
hlt
loope
loope
xor
lea
xchg
xchg
iret
sahf
or
or
inc
push
mov
cmp
test
push
std
imul
sar
mov
mov
cmp
push
loopne
gs
leave
and
inc
inc
lods
jo
jle
loope
sbb
call
mov
lods
push
cmp
cmps
sbb
add
ins
add
stos
fwait
fwait
scas
cmc
xchg
xchg
outs
dec
hlt
mov
mov
and
jbe
sbb
fst
xor
and
sti
dec
mov
imul
push
loope
lea
pop
mov
mov
mov
or
outs
cmps
jae
ret
in
mov
or
cmp
xor
fcmovnu
arpl
adc
into
pop
add
imul
popa
mov
fldenv
(bad)
dec
shl
cmp
cmps
cmps
dec
mov
cld
test
xor
xlat
fwait
enter
je
jmp
pop
adc
mov
cmp
push
stos
cmps
inc
xchg
mov
lahf
cmps
adc
sub
and
int
out
cmps
fadd
call
xchg
mov
dec
jg
lock
jo
push
push
add
xchg
or
jl
jmp
mov
xchg
push
iret
pop
sbb
mov
sahf
lock
fbld
mov
scas
sar
fisub
inc
(bad)
arpl
mov
ret
mov
enter
pop
push
and
mov
mov
(bad)
in
imul
mov
xor
std
loop
out
and
fwait
xchg
cdq
sub
clc
cdq
sub
enter
push
call
xor
pop
jl
push
iret
cld
add
out
lock
push
inc
outs
pop
inc
dec
dec
(bad)
pop
(bad)
in
sub
sbb
lea
out
mov
and
cdq
cmp
sub
cmp
mov
mov
pop
jl
sbb
les
aam
rcr
shr
je
lock
mov
adc
jge
mov
aaa
cld
and
mov
fist
jno
test
int3
rcl
pop
fistp
leave
adc
mov
xor
mov
cmp
clc
sbb
push
lods
xchg
xchg
sbb
popa
into
aad
push
out
sbb
and
add
(bad)
test
push
xchg
cdq
jb
inc
test
stos
sti
cld
cmp
add
pop
test
adc
push
sub
lods
in
cmps
and
sbb
lods
scas
push
inc
dec
adc
dec
jno
add
(bad)
stc
(bad)
(bad)
mov
push
js
cmps
cmps
mov
mov
mov
repnz
lods
and
out
mov
shl
call
(bad)
jge
inc
xor
inc
jmp
and
(bad)
ins
cmp
sti
repnz
mov
mov
popf
cmp
lods
cmp
daa
mov
and
xor
xchg
xchg
xchg
add
hlt
push
enter
pop
aam
repz
sbb
lods
mov
xchg
push
add
ret
pop
xor
data16
mov
aas
xlat
daa
inc
mov
cli
mov
dec
adc
dec
ret
mov
push
inc
jp
into
repz
arpl
adc
mov
push
in
sbb
loope
ja
out
sbb
push
xchg
not
xchg
cld
adc
sar
or
aas
cmp
or
mov
and
dec
imul
not
adc
cmp
mov
sar
cdq
cld
sahf
cmp
(bad)
(bad)
cmp
test
aaa
data16
inc
outs
test
or
and
or
hlt
xchg
popa
cwde
gs
fbstp
cmps
push
mov
cmp
pusha
mov
mov
mov
dec
in
push
mov
fdiv
iret
fistp
outs
sub
xchg
out
test
xchg
out
pop
movs
xor
push
add
pop
icebp
xchg
shl
ret
in
pop
sbb
jb
fdivr
ret
dec
call
stos
repnz
stc
mov
outs
sbb
xlat
iret
inc
rol
(bad)
jmp
jge
adc
xor
jmp
mov
mov
push
inc
inc
fcmovnb
loope
in
inc
and
in
mov
js
mov
jecxz
add
adc
nop
fstp
or
jmp
jae
mov
icebp
push
mov
in
pop
fstp
mov
in
pop
retf
sti
sahf
lahf
xchg
call
fstp
cli
iret
cmp
in
es
daa
xlat
pop
movs
clc
shl
mov
in
xchg
enter
inc
jmp
pop
pop
fs
movs
scas
cmps
or
mov
shl
mov
out
jle
movs
add
pop
or
or
dec
int3
outs
or
jbe
jp
pop
mov
retf
xchg
retf
test
pop
icebp
mov
lahf
cmc
xchg
mov
int3
dec
movs
cs
inc
inc
adc
(bad)
icebp
or
dec
xchg
dec
sub
scas
and
mov
xor
pop
dec
aaa
sub
shr
sbb
and
sbb
test
bound
cmp
jecxz
sbb
push
pop
cmp
stos
sub
sub
sbb
cmps
mov
js
lahf
jne
shl
dec
pop
mov
cmps
rol
sbb
xor
or
cmp
jne
je
sbb
sbb
sub
lea
xor
cmps
pop
or
scas
xchg
xchg
sti
leave
test
inc
in
dec
stc
test
pop
dec
das
and
adc
icebp
nop
or
dec
in
xchg
xor
mul
mov
fsubrp
jge
fsub
jmp
mov
jno
cli
ret
call
cmps
bound
mov
call
mov
ss
cdq
xchg
jne
jmp
(bad)
sti
int
retf
mov
retf
ins
ror
arpl
in
movaps
mov
jbe
daa
xchg
sbb
xchg
sbb
cmp
jae
jno
xchg
sub
mov
shr
hlt
and
jno
repz
xchg
mov
mov
sub
pop
into
gs
mov
lods
retf
jl
loopne
lods
mov
cld
test
xor
jmp
(bad)
pop
xlat
xor
std
test
in
jge
jmp
mov
inc
mov
pop
ja
ja
or
fdiv
add
cs
ror
push
std
push
loopne
cmps
das
leave
dec
cmc
(bad)
int3
repnz
(bad)
sahf
retf
fsubr
xchg
adc
int
(bad)
xchg
clc
push
inc
das
mov
cmp
fsubr
pop
xchg
js
int
loop
sub
adc
push
outs
mov
mov
ja
test
sbb
mov
outs
xor
dec
inc
mov
and
and
cdq
pop
pop
sub
lods
dec
gs
cmp
test
sar
fldcw
retf
pop
gs
and
inc
ret
and
add
sub
es
dec
aad
ret
and
leave
sti
sub
daa
clc
hlt
sbb
in
pop
pop
sub
mov
or
sbb
arpl
sub
cmp
xor
daa
ret
sub
or
test
mov
adc
xchg
not
stos
in
inc
mov
sbb
adc
inc
(bad)
and
int3
dec
cdq
mov
mov
stos
(bad)
jo
hlt
bound
mov
loopne
xor
popa
mov
dec
je
icebp
stc
pop
jnp
mov
ret
pop
mov
cmps
mov
xor
and
xor
mov
ror
inc
(bad)
sar
cld
pop
jb
inc
loop
jb
or
out
jmp
jge
xor
iret
pop
xor
repnz
fild
call
ret
loop
test
xchg
arpl
sbb
cmp
jnp
push
aam
(bad)
push
push
lea
xor
push
fdiv
into
pop
frstor
shl
cmps
jno
inc
adc
aaa
(bad)
lea
ficomp
jno
push
mov
ja
xchg
adc
mov
or
and
push
lock
jl
hlt
lock
test
shr
fwait
stc
mov
rcl
fld
jge
or
xor
dec
clc
out
in
cmps
jne
push
arpl
pop
ficom
loope
ins
dec
lods
mov
mov
loope
inc
arpl
lods
idiv
jmp
sbb
cmp
and
jne
xor
icebp
imul
adc
sti
sahf
(bad)
adc
adc
scas
pop
int
iret
jecxz
sahf
pop
jnp
das
(bad)
ins
ja
pop
push
xchg
adc
adc
mov
cwde
pop
mov
add
push
in
push
cmp
and
fdivr
jbe
in
loop
es
stos
rcl
sbb
fwait
mov
lods
mov
cmp
push
in
cmp
call
stos
jae
sub
iret
pushf
stos
cwde
mov
xchg
(bad)
or
mov
dec
cmp
mov
outs
vdivps
sbb
push
adc
push
push
lds
jl
icebp
cmp
sar
mov
imul
(bad)
loopne
push
ret
mov
jb
push
jae
add
inc
loop
aam
xchg
call
pop
jb
inc
pop
push
leave
mov
cmp
call
cmps
mov
nop
test
sbb
pushf
add
mov
jg
lock
adc
pop
movs
scas
sub
arpl
inc
and
pop
into
sub
int3
call
scas
jg
pop
fild
xor
(bad)
inc
ror
adc
inc
sub
inc
and
test
inc
inc
pop
adc
test
test
mov
jecxz
out
sub
lods
dec
cwde
cmp
cmps
jbe
popa
cmps
ins
push
test
out
add
imul
idiv
sbb
nop
and
stos
xor
(bad)
cs
pop
(bad)
out
dec
push
(bad)
out
in
xlat
add
sub
mov
ss
setle
or
jo
add
iret
pop
in
inc
jno
cmp
ror
xor
pop
push
aas
xchg
movs
hlt
bound
fs
gs
call
cmp
out
in
mov
pop
adc
aaa
mov
outs
scas
mov
push
xchg
cmps
mov
ds
pop
mov
repnz
or
fwait
pop
dec
jnp
cdq
cmp
es
mov
mov
out
retf
push
aas
aaa
jg
(bad)
fwait
ret
fnstsw
or
sub
xor
popa
clc
(bad)
cld
rcl
mov
mov
cs
xor
xchg
adc
mov
push
push
pop
jo
add
out
adc
mov
push
jnp
mov
faddp
cs
adc
push
mov
mov
mov
add
dec
scas
cld
aam
test
xchg
pop
mov
add
lds
in
fucomi
mov
imul
pop
push
add
push
ins
and
les
mov
xchg
push
xor
mov
xchg
das
test
call
or
fwait
jmp
ret
cmp
cmp
xchg
add
out
popf
loope
mov
xchg
jo
and
shl
sbb
jb
pop
sbb
cmp
nop
sub
pop
mov
fistp
xchg
(bad)
mov
test
add
inc
pop
and
mov
je
into
pop
call
ja
jl
push
iret
lock
jns
and
inc
pop
jo
les
xor
(bad)
sub
je
outs
and
mov
mov
lods
cmp
xchg
cmp
leave
int
(bad)
jge
scas
rcr
jns
(bad)
cmp
pop
push
div
fidiv
imul
xor
mov
mov
mov
sbb
pusha
jne
jb
cmc
ret
mov
(bad)
sahf
fistp
daa
mov
mov
mov
imul
test
sbb
(bad)
clc
push
and
xchg
out
sub
xchg
fcomip
push
pop
pop
push
push
call
sub
sub
pop
outs
mov
sub
and
xor
nop
cmp
mov
sub
jg
inc
and
mov
daa
rol
push
aas
mov
jg
(bad)
cmp
inc
ror
lods
das
cs
(bad)
pushf
and
rcr
mov
xlat
out
sbb
dec
pop
sahf
jg
rcr
adc
pop
and
mov
in
lea
mov
push
(bad)
cld
pop
not
mov
xor
mov
xchg
and
test
ss
cld
add
or
push
cld
jne
dec
dec
jno
imul
cmp
retf
push
ja
sbb
fisubr
xchg
repnz
jne
push
sldt
sub
shl
aad
or
inc
or
stos
add
push
mov
in
icebp
sbb
mov
jg
dec
xchg
lahf
cmp
cmp
and
aad
mov
sbb
ins
jg
stos
bound
sbb
xlat
jmp
loopne
pop
(bad)
in
stos
sti
fadd
popf
cmp
push
cmp
cmp
mov
inc
shl
je
ret
out
sbb
cmp
and
sbb
push
sbb
retf
pop
cmp
jno
pop
push
or
aaa
test
sbb
xchg
or
push
popf
mov
(bad)
loop
mov
mov
and
cmp
jb
pop
add
imul
sbb
mov
xor
jbe
adc
or
pop
cmp
jae
sar
cmp
xchg
jb
pop
stos
fdiv
outs
ds
jge
out
push
xchg
ret
out
cmp
push
aam
mov
inc
sbb
outs
sbb
arpl
stc
dec
and
jo
out
ficomp
cld
pop
mov
nop
out
or
pop
xor
jae
and
aam
retf
mov
iret
aas
cmp
sbb
sub
xchg
jg
mov
and
rcl
mov
push
cmp
push
(bad)
fiadd
and
test
gs
or
inc
xor
xchg
inc
mov
jne
push
or
cmp
and
aaa
rcr
out
or
loope
sub
je
add
ds
sub
outs
stos
and
stos
fisttp
std
inc
aas
rcl
aas
fs
and
retf
push
fcom
icebp
pop
push
adc
push
sub
pop
mov
cmp
sbb
xchg
xchg
jnp
das
pop
dec
dec
out
jp
xchg
add
sti
popf
std
lods
add
jge
sub
jns
xor
inc
jno
inc
jle
dec
(bad)
dec
and
enter
jb
xchg
jmp
adc
fwait
mov
popa
jg
dec
test
or
test
add
leave
xchg
not
jns
sbb
cmps
cmp
in
punpcklwd
jae
es
mov
or
pop
nop
iret
test
lods
ins
inc
add
jecxz
pusha
push
lock
daa
push
mov
das
das
or
push
jbe
adc
pop
jmp
test
sti
xchg
in
cwde
mov
mov
inc
imul
call
les
fdivr
xchg
push
mov
adc
mov
push
cmp
mov
iret
xchg
sbb
xchg
mov
jmp
popa
cmp
ss
mov
ins
scas
mov
popf
jmp
mov
xor
dec
xlat
test
(bad)
inc
push
leave
mov
or
cld
and
jge
mov
dec
std
or
cdq
int
call
adc
neg
cmc
lahf
aaa
das
push
loope
ror
mov
test
adc
call
jns
lahf
push
test
enter
lods
aaa
push
je
daa
retf
popa
mov
xchg
xchg
or
xchg
cmp
loop
test
dec
aam
jp
imul
xor
sub
xor
ins
shl
pop
pop
adc
out
mov
lahf
scas
loop
push
fchs
cmp
sub
iret
outs
nop
pop
push
sbb
bound
lahf
sbb
mov
data16
xor
mov
aas
xor
nop
ds
mov
repz
dec
pop
cld
xchg
imul
fwait
adc
jmp
add
add
or
add
xor
es
add
adc
mov
shl
lahf
jl
cmc
mov
mov
mov
jo
xchg
mov
aad
bound
dec
dec
mov
lods
push
das
stos
out
xchg
add
push
cmps
xchg
xchg
in
push
cmp
pushf
es
cmps
xor
cld
sbb
xchg
je
imul
sbb
test
inc
(bad)
scas
(bad)
mov
push
stc
push
sti
je
int
enter
mov
fisttp
stos
adc
test
jns
or
ret
push
cmp
pop
cli
and
dec
idiv
out
sbb
pop
mov
test
push
repnz
sar
or
ret
mov
in
fiadd
mov
fisub
leave
rol
jmp
(bad)
or
add
nop
das
jge
ret
pushf
xor
into
mov
add
sti
and
jae
aaa
cmp
pop
imul
dec
dec
leave
cld
loope
adc
call
pop
test
sub
test
inc
stc
mov
cmp
retf
or
test
aaa
jl
pop
pop
in
ret
add
sub
in
nop
push
idiv
(bad)
pop
fistp
pop
(bad)
lods
enter
add
sar
lods
pushw
pop
or
cwde
mov
imul
mov
mov
jl
pusha
jecxz
iret
or
or
cmp
in
cmps
sahf
add
or
imul
cmc
ja
imul
mov
inc
das
mov
mov
ja
mov
shr
or
out
jg
pop
lods
dec
bound
fild
pop
jmp
lea
jge
jge
sbb
or
popf
and
test
call
movs
fs
jo
inc
mov
mov
xor
call
inc
sti
mov
movs
inc
fisttp
add
mov
sbb
push
xor
neg
cmp
xor
int3
dec
data16
test
mov
pushf
mov
addr16
jnp
cld
ins
xor
jl
dec
sti
sbb
out
jnp
xor
lods
bound
push
inc
mov
retf
cmp
jp
xchg
repz
int
xor
lods
hlt
cmp
xchg
pop
xchg
lahf
or
cs
int
cmp
cmps
das
push
scas
inc
add
(bad)
sub
(bad)
jmp
sub
ficomp
je
dec
and
adc
and
jle
ins
mov
adc
cwde
aam
not
fs
mov
test
sbb
fldenv
gs
in
aaa
jecxz
mov
cmc
into
adc
fild
xchg
les
jg
gs
mulps
sahf
aad
jmp
scas
dec
js
xor
int
mov
repz
xchg
ins
outs
inc
cmc
or
das
xchg
addr16
and
sbb
jns
lds
ss
sbb
lods
es
test
stc
sub
popa
ficom
jle
ins
daa
mov
mov
stos
out
jne
enter
mov
mul
pop
int
mov
push
aad
ins
cwde
repnz
and
cdq
xchg
push
adc
mov
or
dec
mov
and
xchg
icebp
mov
jbe
jmp
jg
enter
stos
mov
sbb
adc
dec
scas
cmps
dec
adc
pop
push
leave
lahf
xor
fdiv
mov
push
stos
mov
data16
sbb
sahf
push
rcr
mov
mov
and
in
adc
fisttp
jp
push
test
outs
jo
mov
retf
sbb
hlt
packsswb
jmp
(bad)
cwde
cmp
add
xchg
push
add
xor
aad
pop
mov
shl
mov
sbb
pop
sbb
test
(bad)
jo
or
inc
js
leave
sbb
sub
call
retf
test
js
and
repz
in
inc
shl
jns
push
cwde
mov
and
mov
icebp
mov
xchg
cmps
les
out
xchg
out
jne
ins
xchg
mov
jae
inc
mov
in
jmp
push
jecxz
mov
and
mov
imul
cdq
add
in
pop
and
mov
pushf
sub
xchg
mov
stos
jo
mul
and
add
xor
fisubr
(bad)
loop
or
sub
outs
jecxz
rol
xchg
push
cmp
not
int
inc
mov
push
cmp
push
push
ficom
mov
xor
add
jo
loopne
dec
sbb
in
loope
pop
inc
(bad)
push
inc
fcom
mov
pop
and
add
push
mov
popf
loop
int3
cmp
into
pop
call
imul
data16
mov
cmps
xchg
imul
fnstcw
sti
cmps
mov
(bad)
jns
cmp
lock
outs
ja
gs
fnstcw
and
pop
add
mov
icebp
into
cld
enter
call
rcr
dec
dec
mov
in
jle
pop
in
fmul
pop
pop
xchg
in
mov
test
lock
jmp
test
adc
imul
inc
pop
xor
iret
and
call
nop
mov
addr16
push
cmps
cld
(bad)
test
sub
mov
push
jmp
cli
clc
or
rol
iret
sahf
mov
or
sbb
cmp
imul
shr
out
inc
jae
xor
inc
xchg
dec
std
fnop
test
cmp
loop
cmp
inc
push
pop
rol
dec
nop
sar
movs
cmp
jge
and
push
mov
int3
gs
cs
fsubr
add
movs
add
fadd
mov
mov
or
jae
or
or
xchg
leave
popa
repnz
addr16
and
or
dec
(bad)
lds
ss
scas
push
imul
pop
adc
jp
aad
call
jb
cmps
xor
stos
jmp
or
aam
or
push
mov
das
mov
into
sub
cmp
jae
or
mov
imul
cmp
stos
adc
fwait
inc
xor
test
(bad)
cmp
es
lahf
pop
ss
bound
psubusw
hlt
das
dec
loope
pop
das
mov
mov
sbb
rcr
xor
and
aad
pop
or
pop
and
adc
ffree
xchg
in
mov
cdq
push
xor
pop
call
int
mov
les
mov
mov
sbb
pop
call
cmc
stos
mov
aam
lds
fsub
pop
or
movs
dec
ins
cli
mov
into
int3
outs
and
push
(bad)
scas
cwde
fxch
xor
imul
lahf
xor
dec
les
(bad)
inc
mov
cmp
push
clc
repz
ret
pop
cld
inc
clc
movs
pop
push
inc
ja
dec
fisttp
pop
pop
jp
inc
pop
aas
add
mov
sbb
cmp
or
xlat
leave
loop
pop
cmp
add
out
xlat
hlt
jle
sbb
sub
xor
cmp
ss
inc
adc
mov
(bad)
cmps
mov
retf
call
aad
cmp
dec
jbe
call
xchg
outs
arpl
and
mov
dec
and
scas
and
retf
jecxz
pop
pop
mov
adc
mov
push
out
xor
dec
mov
ds
jmp
fidiv
add
vmwrite
(bad)
sbb
adc
cmp
and
bound
pop
push
inc
mov
add
xor
cmp
inc
sub
and
mov
adc
fdiv
imul
inc
in
aad
mov
xchg
push
add
pop
in
or
fdivr
out
out
int3
pop
adc
loop
popf
cmp
pop
jg
in
add
ret
pusha
int
adc
jb
add
test
or
jmp
sub
sbb
ss
mov
stc
lods
inc
adc
test
icebp
xchg
mov
out
cmp
in
sub
sbb
in
call
inc
jnp
sub
sar
bound
shl
lods
movs
mov
add
xchg
xchg
mov
pop
dec
stos
call
lods
stc
out
fs
and
dec
in
pop
fistp
cmp
push
outs
rcl
js
push
adc
or
adc
push
jo
mov
int
int3
cmp
push
adc
or
mov
mov
rol
int3
xlat
push
xchg
dec
das
or
icebp
push
shl
and
cmove
enter
sar
fsub
movs
dec
dec
adc
rcr
inc
test
test
jmp
test
and
scas
xchg
sub
shr
push
or
cmp
enter
mov
mov
retf
pop
outs
dec
dec
add
les
inc
sbb
ficomp
in
in
dec
aad
fdivr
popa
xor
jecxz
mov
dec
rol
fwait
call
or
push
push
jnp
rcr
bound
add
jo
call
call
and
outs
sbb
sub
rol
fcmovne
pop
push
call
add
xor
mov
sbb
imul
(bad)
jg
sub
push
repz
fdiv
cmp
inc
jns
jae
jp
adc
in
mov
loope
inc
ret
inc
add
adc
push
cmps
mov
pop
xlat
mov
fdiv
(bad)
call
push
xchg
icebp
arpl
dec
jp
jmp
jnp
into
push
stc
push
ja
xchg
aam
mov
pop
das
scas
ror
and
mov
pushf
adc
jle
pop
cmp
and
int3
push
sub
push
int
inc
dec
push
xor
pop
pop
jg
in
call
jle
test
sub
out
retf
scas
hlt
lahf
jns
or
dec
inc
xchg
loopne
add
dec
or
loope
out
xchg
inc
scas
test
out
add
dec
sti
icebp
xor
jle
jo
dec
push
mov
and
push
gs
mov
and
dec
mov
mov
pop
jle
retf
ret
daa
ficomp
add
mov
mov
and
cmps
scas
cwde
inc
or
xlat
dec
cmp
in
fcmovne
rcl
sti
test
fistp
es
call
or
sbb
pop
lock
mov
add
fdivr
sbb
cmp
jne
out
push
scas
frstor
xchg
ss
sbb
and
mov
or
jmp
inc
shl
inc
mov
es
or
nop
mov
jno
fisubr
sbb
ja
dec
and
les
les
sar
jo
pop
push
mov
pusha
fsubr
pop
test
jmp
push
js
cmp
cmps
xchg
fbld
mov
stc
cwde
jbe
or
push
cmp
sti
or
imul
and
icebp
sti
push
mov
inc
sub
cmp
fdivr
les
je
lea
inc
scas
adc
pop
lods
push
cwde
cmp
dec
xchg
push
repnz
cmp
ret
fstp
and
test
xchg
pop
jmp
cwde
and
ins
xchg
cmp
and
test
lods
cmps
pop
cs
dec
ins
or
inc
daa
sub
dec
gs
je
add
cs
stos
mov
icebp
push
data16
mov
mov
and
xchg
pushf
test
jae
sbb
imul
or
mov
xor
sbb
mov
jbe
aad
xchg
bound
sbb
inc
jmp
cmp
xsave
loopne
call
adc
sub
pushf
jb
mov
sbb
push
div
mov
stc
leave
ins
xchg
xchg
xor
cmp
ficomp
jle
mov
out
std
fadd
in
pop
iret
ror
ins
jne
jae
push
cli
jae
add
sub
cs
into
cmp
(bad)
out
lods
or
xchg
not
call
lock
add
push
int
movs
sub
sub
jge
mov
dec
int
not
movs
add
(bad)
leave
sti
push
shl
es
jle
(bad)
cli
and
iret
dec
leave
add
mov
leave
mov
mov
ins
push
dec
(bad)
or
pop
inc
xchg
mov
mov
adc
xchg
mov
fcomi
pushw
movs
pop
mov
mov
sub
aad
les
cmp
or
push
cmps
sub
xchg
xor
xor
mov
into
cwde
icebp
icebp
jmp
cmps
sbb
mov
sbb
mov
pop
xlat
shl
push
or
sub
cmps
mov
adc
clc
sbb
sub
mov
ds
add
inc
retf
pusha
mov
add
bound
jle
jns
shld
jae
jb
outs
ins
inc
cmp
mov
sahf
pop
add
mov
daa
push
jmp
cmps
jecxz
scas
cdq
and
add
nop
mov
jecxz
dec
mov
or
shr
aaa
fistp
and
(bad)
ins
adc
fstp
push
xor
push
sbb
jmp
jge
outs
shr
int
mov
ror
inc
xor
(bad)
sbb
push
push
jmp
and
aam
jno
pop
mov
lods
adc
mov
sbb
inc
push
clc
mov
pusha
mov
dec
repnz
and
mov
fwait
dec
test
add
pop
cmp
mov
(bad)
icebp
cmp
jb
or
mov
scas
bts
mov
sbb
int3
or
mov
xor
adc
jmp
data16
mov
mov
ret
jl
(bad)
jge
cmp
test
jp
pop
cmps
pusha
cld
mov
push
jl
mov
repnz
xchg
mov
pop
fs
cwde
in
add
jl
out
mov
ja
mov
(bad)
adc
scas
sbb
lea
ret
repnz
xchg
ss
and
xor
push
adc
pop
(bad)
mov
and
scas
shr
dec
aam
rcl
xchg
cmps
push
sbb
inc
adc
jg
jne
lods
fist
outs
out
mov
pushf
arpl
out
arpl
pop
jmp
jne
mov
dec
ins
fnstcw
push
mov
xor
push
ja
lahf
dec
cmc
fstp
jo
cmp
outs
mov
mov
dec
jno
mov
pop
(bad)
push
mov
ss
adc
retf
aas
sub
aas
push
or
fild
sbb
push
xor
or
dec
jno
imul
mov
mov
cmp
lods
cmp
dec
idiv
dec
jmp
adc
aad
loope
cmps
scas
sbb
sub
sub
repz
sahf
xchg
xchg
inc
mov
xchg
inc
add
mov
add
mov
dec
jmp
pop
js
ds
sbb
inc
retf
jne
call
repnz
fisub
loope
jb
ror
mov
das
jl
or
push
sbb
or
push
nop
aad
xchg
add
aas
lock
gs
lea
leave
(bad)
mov
fistp
mov
jno
dec
hlt
call
sub
or
loope
or
ja
pop
and
cld
(bad)
nop
push
jne
hlt
clc
pop
lds
jns
dec
mov
push
iret
and
shl
inc
jecxz
ins
out
jnp
xor
push
mov
sbb
xchg
and
sub
push
test
push
pop
nop
cmp
(bad)
rol
sub
lea
dec
fimul
jecxz
aam
outs
ds
mov
sub
and
jbe
push
(bad)
repnz
movs
jno
popa
inc
sbb
clc
test
cmp
cmp
pop
repnz
sub
cmps
popf
dec
call
mov
jg
sub
and
mov
call
je
mov
jecxz
or
xchg
jae
push
jp
idiv
pop
out
pop
cs
xchg
cmp
mov
add
pop
(bad)
sub
dec
in
lea
loopne
nop
hlt
gs
jmp
test
pop
popf
iret
jno
inc
imul
sub
out
push
mov
or
js
push
adc
xor
jle
ss
loop
sar
jecxz
clc
mov
cwde
push
icebp
adc
inc
shl
cmp
pop
fwait
loopne
in
bound
or
ss
inc
adc
add
push
movs
push
or
push
shl
mov
sub
js
std
inc
jg
out
scas
int3
xchg
or
sub
cld
sbb
call
pusha
dec
iret
clc
push
cmp
push
xor
ficom
xor
mov
pop
cdq
in
shl
shl
ret
sbb
cmc
test
jbe
js
fstp
fld
jl
cwde
scas
pop
mov
lahf
jecxz
jmp
sub
lahf
or
dec
ret
jmp
sbb
and
jne
xor
pop
push
mov
daa
mov
xchg
scas
and
loope
pop
pusha
movs
sbb
push
test
xchg
mov
ret
jle
xchg
into
test
jae
push
dec
in
scas
dec
sbb
popf
nop
jmp
sub
sub
jecxz
mov
xchg
movs
(bad)
cmps
ret
xchg
loopne
out
pop
int
loop
adc
and
sahf
hlt
addr16
inc
sbb
jo
retf
repnz
sub
leave
mov
xchg
sbb
push
fsubr
dec
and
scas
dec
pop
mov
mov
cmp
push
mov
cs
int3
xor
test
stos
or
fcmove
pop
test
cmps
dec
mov
jns
daa
and
call
cmp
cmp
xchg
mov
aas
xchg
data16
movs
cmp
mov
out
jnp
xchg
push
pusha
mov
and
adc
jle
mov
dec
jns
mov
stos
clc
cs
mov
pushf
dec
lock
(bad)
inc
or
stos
jmp
jmp
dec
sti
rol
stos
fadd
mov
icebp
inc
out
adc
imul
cwde
(bad)
test
mov
push
test
mov
mov
(bad)
sub
ret
mov
stos
pop
ins
pop
popa
fimul
fisubr
fiadd
gs
xor
push
jmp
addr16
dec
aam
dec
addr16
mov
fisubr
sbb
sub
mov
retf
push
iret
sbb
mov
push
xor
or
fmul
add
push
inc
pop
or
jae
(bad)
repnz
dec
lock
mov
push
xor
call
add
inc
lods
test
sahf
xlat
jno
dec
sub
das
cmp
mov
imul
and
dec
and
bound
cmp
int
scas
cmc
mov
pop
jae
push
lods
ins
push
xor
sub
jle
fistp
xchg
sbb
inc
mov
popf
retf
stc
mov
call
arpl
ret
out
cmp
aas
call
aas
mov
(bad)
out
adc
test
inc
add
mov
je
icebp
gs
push
jo
(bad)
cmp
sbb
or
and
jle
sub
or
or
gs
jecxz
adc
mov
mov
test
pop
and
push
ins
call
mov
pop
sub
xchg
add
aas
inc
add
cmps
outs
jb
outs
or
push
inc
inc
sub
pop
mov
mov
xchg
popa
dec
xor
test
mov
clc
call
jge
shl
or
sahf
stos
xor
adc
mov
dec
cmp
cli
out
loop
ins
adc
xchg
je
(bad)
fcomip
add
add
in
out
mov
cmp
dec
add
sub
scas
mov
sub
enter
loop
xor
cmp
cmp
jae
mov
jne
(bad)
jb
mov
gs
hlt
out
add
bound
xchg
out
mov
xchg
rol
sbb
repnz
dec
or
fisubr
fs
jo
test
xor
int3
xchg
cmp
mov
je
pusha
jmp
and
jge
inc
cmp
out
cwde
push
cmp
or
adc
add
mov
ins
mov
scas
imul
jbe
lea
sub
mov
movs
inc
mov
ror
xor
add
cld
(bad)
add
xchg
sbb
add
sbb
cmp
ins
addr16
sbb
dec
lods
cmps
inc
rcr
pop
popf
cmps
cdq
inc
ins
xor
mov
test
test
div
jno
mov
scas
loop
sbb
jbe
enter
gs
test
and
gs
scas
cmp
pop
inc
cmps
mov
aam
jle
retf
mov
in
pop
dec
clc
mov
inc
jle
je
ins
cs
xchg
rol
stos
in
(bad)
mov
adc
stc
mov
inc
dec
ret
mov
scas
test
(bad)
jns
inc
or
mov
lds
xchg
cmp
jae
inc
mov
or
and
or
adc
push
and
mov
fcom
xlat
adc
mov
popa
xlat
(bad)
jb
push
dec
pop
mov
inc
fisttp
outs
shr
sahf
cdq
jg
mov
and
mov
scas
add
inc
inc
inc
clc
jp
inc
add
and
add
call
mov
fmul
iret
sub
add
ja
out
adc
test
repz
dec
dec
add
not
je
fwait
sub
arpl
outs
cmp
jne
aaa
mov
inc
xor
sbb
inc
cwde
pop
pop
push
inc
sbb
inc
ror
mov
xor
sbb
jmp
xor
(bad)
rcl
sbb
aad
lahf
mov
pusha
cmp
lds
mov
mov
jne
mov
mov
inc
cmps
or
adc
ins
lds
in
retf
leave
xor
in
mov
stc
mov
or
adc
sbb
out
push
mov
(bad)
pop
mov
mov
adc
loope
xor
sub
xor
aad
sbb
sub
fcmove
shr
je
(bad)
sbb
loope
jbe
movs
dec
psubusw
ror
les
inc
dec
das
out
dec
push
jp
cli
xor
loop
cwde
into
push
shr
push
adc
stos
xchg
xchg
cmp
adc
adc
(bad)
stos
jae
ins
repnz
push
push
sub
bound
mov
mov
adc
in
mov
sub
mov
mov
retf
cli
mov
les
mov
clc
test
imul
cmp
inc
xchg
xchg
shl
das
cmps
fld
push
aaa
sbb
adc
push
repnz
std
aaa
or
push
retf
adc
imul
jp
dec
or
(bad)
pop
pusha
mov
cmps
pop
mov
int3
loop
data16
mov
dec
push
push
call
push
mov
sub
cmp
enter
and
mov
cld
jge
inc
or
cli
push
gs
or
dec
pop
fsubr
into
int3
data16
fimul
xor
xor
mov
dec
int3
fild
enter
adc
(bad)
push
push
adc
xor
loope
ds
fdiv
jns
leave
inc
jmp
mov
call
xor
jg
sbb
fldcw
pop
shl
jle
and
inc
adc
inc
or
push
or
push
inc
inc
nop
in
dec
push
or
call
mov
pop
jge
hlt
mov
jb
jbe
jp
daa
and
test
mov
sti
push
clc
(bad)
jecxz
popa
sub
dec
in
xor
push
not
pop
adc
xchg
(bad)
aam
xchg
inc
jmp
adc
ins
cmp
ins
jmp
add
sub
out
outs
addr16
loopne
enter
or
xor
lea
pop
shr
dec
xor
mov
jg
xchg
sbb
push
inc
dec
test
in
jle
loopne
sbb
out
xchg
mov
jg
mov
mov
dec
pushf
(bad)
push
popa
cs
iret
(bad)
mov
movs
loope
adc
add
icebp
dec
jecxz
popf
jl
dec
or
xor
movs
xchg
sub
pusha
sub
sub
adc
pushaw
dec
scas
jg
ds
sbb
sbb
lsl
aaa
sub
pushf
xchg
call
mov
int3
ret
jne
jmp
inc
mov
xlat
out
or
mov
sbb
sbb
inc
repnz
test
xor
mov
xchg
xchg
or
cmp
mov
dec
nop
or
add
xor
push
adc
dec
hlt
cli
adc
rcl
arpl
mov
jne
dec
daa
retf
and
xor
pop
retf
mov
leave
cmp
pop
sub
add
sub
jno
or
push
ds
rol
dec
cs
lds
das
sub
sar
call
mov
ret
jle
movs
cmps
and
out
sub
ja
or
pop
and
xchg
fld
fsub
call
inc
xor
dec
call
fst
int3
repz
stos
push
jno
aas
sbb
dec
and
test
jno
cld
push
pop
aas
repnz
xchg
fadd
mov
into
lds
and
fmul
pop
into
aad
ds
pop
mov
pusha
rol
push
mov
mov
loopne
xor
mov
fwait
and
xor
pop
add
aaa
jge
arpl
nop
adc
mov
lea
sub
test
or
jmp
mov
repnz
sti
fistp
mov
ret
add
in
enter
shr
pop
cmp
lods
aas
xor
loop
aad
retf
jge
lods
pop
test
retf
xor
aad
shl
pop
cmps
or
mov
scas
in
inc
loop
xchg
add
out
retf
in
outs
or
mov
push
push
rcr
xor
dec
sbb
dec
adc
outs
inc
pop
jle
fcomp
ror
cwde
bound
idiv
adc
test
adc
sar
add
psrad
push
aad
daa
leave
dec
sar
add
ret
jno
or
add
stos
rol
sub
xor
shr
push
imul
call
mov
dec
pushf
mov
adc
cmp
push
stc
sbb
lahf
pop
mov
push
and
mov
arpl
push
in
shl
loope
repnz
sbb
in
movs
mov
out
in
je
mov
inc
inc
pop
in
aad
in
test
out
scas
dec
adc
aaa
pop
mov
dec
call
mov
or
shl
int3
pusha
push
in
shl
xor
rcr
mov
pop
push
mov
cmp
(bad)
cmp
pusha
cmc
ss
frstor
dec
xchg
add
xlat
push
and
jns
sbb
dec
sar
add
sbb
mov
dec
fst
jno
xor
mov
icebp
jbe
mov
cli
ins
test
push
cwde
mov
push
mov
pop
jnp
data16
sahf
sbb
xlat
mov
or
fidiv
inc
test
in
arpl
jmp
outs
ss
mov
out
aad
and
pop
jns
ja
es
and
rcr
js
popa
inc
ds
movs
stc
shl
pop
out
push
dec
and
std
movs
jb
(bad)
xor
inc
push
xor
enter
pop
or
xor
mov
in
fcmove
hlt
mov
xor
movs
xchg
call
(bad)
out
jmp
out
iret
aam
imul
test
rol
inc
stos
cmp
repz
retf
push
ret
mov
inc
push
fimul
mov
out
mov
mov
fsubp
mov
adc
leave
pop
mov
push
push
ror
adc
pop
(bad)
xchg
cmps
add
dec
rol
retf
adc
imul
cld
mov
or
outs
sbb
sub
fxtract
pop
add
push
xor
mov
lods
pop
jae
push
mov
or
jmp
push
call
sahf
test
sbb
add
jne
inc
retf
in
jnp
lock
enter
sub
push
sub
gs
iret
and
mov
(bad)
jp
in
fcmovne
push
imul
jmp
xchg
(bad)
sbb
jmp
jp
out
jecxz
sti
paddsw
ret
pop
or
repz
push
xor
fstp
adc
or
mov
dec
retf
hlt
sub
pop
mov
enter
sbb
pop
push
stc
push
cmp
cdq
sub
lods
scas
cmp
sub
into
cwde
mov
jmp
loopne
adc
repnz
xlat
(bad)
dec
popa
jno
inc
ins
mov
pop
add
adc
jle
sub
stc
push
call
or
sbb
icebp
pop
jle
inc
pop
cld
push
adc
pusha
pop
xor
xchg
lea
push
(bad)
(bad)
out
mov
pop
and
retf
mul
push
mov
ja
xchg
push
(bad)
mov
loopne
xchg
pop
std
jae
push
loope
(bad)
cmp
sub
xor
cld
test
mov
arpl
dec
jmp
pusha
test
stc
dec
loop
lock
push
sti
inc
inc
push
pop
cli
aad
sbb
jb
(bad)
aam
lea
cvttps2pi
(bad)
aam
mov
ss
in
in
pop
xchg
or
xchg
add
push
jae
jecxz
imul
push
mov
mov
sub
mov
push
or
push
push
out
daa
ret
es
les
inc
enter
push
cwde
inc
xor
pop
sbb
(bad)
mov
imul
mov
inc
add
gs
inc
scas
mov
bound
push
xchg
aad
inc
mov
mov
movs
ds
shr
mov
lods
pop
stos
lock
dec
xchg
outs
or
mov
int
sahf
or
inc
gs
lahf
scas
sbb
out
mov
push
add
xor
jne
cmps
pushf
jnp
ss
fs
loopne
repz
or
sar
pop
imul
enter
addr16
cmp
cli
jmp
push
jno
pcmpgtd
mov
rcl
jbe
loope
mov
cli
inc
cmp
push
or
cmp
mov
daa
add
jae
push
movs
jno
xchg
test
jne
fst
mov
pusha
jl
imul
push
popf
popf
fist
imul
and
jg
loop
mov
jg
rcr
cmp
sub
ret
push
mov
adc
pop
mov
xor
mov
mov
pop
dec
imul
adc
pushf
mov
dec
int3
adc
inc
leave
mov
jmp
aas
into
dec
gs
daa
xchg
cmps
lock
imul
pop
or
xchg
cmp
jae
hlt
int
es
stos
loop
mov
imul
inc
xor
add
push
or
(bad)
dec
imul
push
les
dec
push
bound
lock
and
dec
mov
nop
inc
inc
stc
mov
dec
xor
adc
stc
(bad)
lds
(bad)
daa
lahf
push
cmc
retf
dec
leave
pop
(bad)
xchg
pusha
pop
test
dec
shl
inc
aas
pop
mov
add
out
mov
retf
dec
cmp
int3
outs
push
leave
xor
mov
sahf
cmp
xchg
fstp
cmc
loop
pusha
loopne
and
mov
mov
dec
test
out
imul
inc
mov
(bad)
jnp
into
cmp
ja
xchg
and
in
cmps
in
add
jne
mov
sub
add
ja
stc
lahf
sub
mov
push
add
jecxz
pushf
clc
push
out
and
ds
addr16
outs
nop
cmc
(bad)
cmc
mov
mov
scas
ret
adc
push
xor
pop
jmp
std
sahf
stc
mov
jle
adc
loop
scas
mov
pushf
add
cmp
test
dec
adc
mov
adc
jg
pop
ins
cdq
dec
sbb
pusha
test
adc
test
mov
dec
adc
(bad)
ret
in
lea
fild
in
add
fcomp
out
or
loopne
ds
fmul
ss
stos
inc
inc
iret
push
push
and
(bad)
mov
jle
cmps
xor
pop
out
xchg
mov
aaa
or
and
inc
ret
adc
pushf
not
xchg
cmps
sbb
jbe
daa
repnz
out
adc
mov
sahf
cwde
retf
ret
jmp
retf
test
in
sbb
xchg
in
jp
js
xchg
mov
out
xchg
lds
fild
imul
mov
les
repz
push
jg
sar
pop
xchg
mov
imul
push
or
jne
(bad)
mov
add
or
mov
and
mov
ja
or
push
add
or
jnp
addr16
loope
std
fucomp
jbe
add
sbb
sbb
out
mov
sbb
sub
mov
sub
or
mov
and
mov
fidiv
dec
pop
xchg
(bad)
mov
xor
pop
jbe
fstp
xor
mov
or
or
xchg
addr16
and
pop
or
and
sub
lds
inc
daa
stos
les
outs
leave
movs
sub
adc
push
outs
sbb
mov
jo
shl
call
and
dec
mov
pop
cdq
dec
outs
mov
sbb
add
jmp
or
inc
out
mov
jae
jmp
jg
and
les
lods
int3
jge
test
lock
ja
dec
cld
inc
pop
sahf
push
leave
xchg
out
add
cld
jb
rol
and
movs
(bad)
jmp
push
cmp
sahf
cmp
stos
fsub
pop
inc
xor
jnp
std
adc
inc
pop
jae
or
arpl
adc
icebp
xor
jle
out
popa
or
and
ret
adc
mov
xchg
dec
inc
jns
lea
fistp
enter
(bad)
das
mov
sub
leave
pusha
jmp
lea
in
cmp
call
(bad)
mov
shl
or
mov
fstp
xchg
sar
add
pop
scas
into
fisub
lahf
ja
(bad)
sti
(bad)
mov
fcmovnb
hlt
std
lds
push
xlat
xor
jecxz
xchg
scas
cmp
ja
fmul
xchg
mov
call
inc
(bad)
xchg
jl
lock
mov
or
add
sbb
aam
mov
jo
dec
inc
pop
repz
sti
dec
lods
pop
adc
add
(bad)
ins
inc
pop
popf
aad
movs
sub
aad
inc
int
fsub
dec
mov
cmc
mov
mov
aaa
ins
push
jno
enter
out
retf
jmp
pop
xor
inc
adc
jbe
fstp
xor
cmp
retf
shl
enter
xor
adc
test
pop
cmp
jne
inc
icebp
and
call
inc
sub
jle
lea
mov
mov
add
test
scas
mov
fnstenv
or
cmp
push
call
mov
mov
xchg
mov
fs
stc
cmps
(bad)
test
(bad)
jbe
movs
mov
ds
and
mov
cli
fadd
in
arpl
mov
aad
shr
(bad)
icebp
cmp
and
in
push
iret
adc
mov
mov
or
dec
aas
push
je
mov
test
ins
lock
aas
leave
je
cmp
int
cdq
or
sbb
dec
call
enter
int3
fbld
popa
or
div
(bad)
sub
xchg
hlt
rcl
imul
mov
adc
mov
xchg
cmp
stos
mov
imul
cmp
loop
ja
add
retf
jp
movs
adc
loop
jl
pop
xchg
jge
adc
mov
adc
inc
(bad)
push
popa
pushf
cmp
push
icebp
std
adc
pop
xlat
pop
imul
adc
stos
jge
add
dec
stc
adc
rcl
sar
fimul
xchg
lea
dec
aaa
inc
inc
jg
test
mov
fnstenv
inc
std
push
stc
jns
aad
adc
jnp
lods
aaa
add
outs
push
mov
js
ret
pop
jo
popa
inc
cmp
push
add
int3
sbb
jnp
pop
(bad)
call
jne
fwait
mov
dec
xchg
arpl
int3
std
call
pop
fld
cmp
test
mov
sub
push
ret
(bad)
jmp
jns
ror
cmp
out
cmp
push
lods
push
fisttp
xlat
(bad)
enter
push
jge
sar
pop
jmp
arpl
add
stos
aas
adc
ret
daa
(bad)
or
mov
ins
sbb
cli
(bad)
ficom
vcmpss
mov
mov
pop
push
outs
ss
pushf
mov
sbb
sbb
loopne
hlt
pop
inc
or
arpl
(bad)
push
adc
mov
mov
rol
test
hlt
xor
and
dec
xor
test
fdiv
adc
shr
aaa
xlat
push
aaa
scas
xchg
inc
push
xchg
imul
adc
inc
jecxz
fild
inc
cmc
mov
jp
test
sub
xor
sub
add
leave
pop
stos
rcr
xchg
mov
or
or
inc
test
mov
pop
(bad)
mov
mov
adc
jns
mov
daa
push
adc
or
stos
(bad)
inc
loop
addr16
pop
push
sahf
popa
xor
jb
std
cmp
scas
mov
aam
imul
shl
retf
jo
lea
fcmovne
jbe
dec
aad
fldenv
pop
(bad)
jecxz
ret
out
movs
jl
lahf
lods
fwait
push
je
aad
rcr
xchg
aam
lods
mov
lods
dec
xor
nop
call
pop
sbb
jnp
es
sbb
pmuludq
push
cmp
push
inc
or
clc
xchg
jmp
push
icebp
paddusb
dec
jmp
adc
pop
in
sbb
dec
into
and
dec
push
stos
ins
stos
sub
shl
outs
xchg
xlat
in
push
jmp
addr16
xchg
loop
retf
jmp
add
mov
sbb
cmps
sub
mov
mov
mov
retf
mov
and
mov
retf
push
mov
sub
mov
pusha
inc
aas
cmp
out
fistp
mov
or
jb
std
fucompp
jl
inc
shl
ins
pop
icebp
mov
mov
cs
dec
jg
lods
into
(bad)
hlt
ins
aad
mov
push
enter
inc
xchg
cwde
stc
or
jge
adc
xchg
push
imul
xor
jns
sahf
and
jo
sub
es
sub
shr
mov
cmps
inc
jbe
loope
int3
test
or
test
mov
mov
das
sti
sub
adc
adc
push
jmp
in
shr
cmp
dec
xchg
sti
test
push
popf
mov
pop
add
inc
sbb
lea
xchg
adc
push
cmp
aam
or
mov
in
dec
fisttp
pop
jl
adc
inc
fs
or
fadd
arpl
ja
(bad)
jbe
cli
(bad)
aaa
(bad)
jo
xor
test
nop
sahf
add
in
cmp
ins
or
outs
shr
stos
adc
dec
cs
aaa
repz
pop
popf
cld
js
loope
cmp
jg
ins
loope
ds
scas
nop
pop
sbb
mov
xchg
inc
stc
add
mov
jmp
sub
and
leave
cmp
mov
add
mov
xchg
or
cmc
jb
xor
adc
aaa
stos
popa
xor
adc
jnp
movs
pop
addr16
popa
repz
stos
pop
movs
lahf
mov
movs
adc
movs
les
out
adc
ds
cmps
std
mov
movs
dec
hlt
or
stos
loop
loope
sar
(bad)
push
jp
aad
mov
fist
mov
pop
jnp
neg
ss
pop
rcl
cwde
(bad)
cmp
(bad)
inc
ja
jb
test
or
xchg
neg
or
out
lods
mov
js
fbstp
daa
mov
sub
fldenv
pop
das
mov
aas
aad
cli
clc
dec
sub
sub
cmp
test
sbb
scas
jge
les
ins
add
cmp
shl
adc
dec
xlat
or
hlt
inc
jns
push
fwait
dec
jbe
aad
ja
mov
bndldx
sub
call
shl
sub
dec
mov
xchg
mov
xchg
jne
bsf
mov
adc
xchg
(bad)
stc
xor
xchg
in
int
jne
js
outs
cmp
push
sub
or
sti
add
mov
mov
pop
sbb
das
popa
lods
mov
mov
fst
aam
rcr
xchg
stc
out
jecxz
xchg
(bad)
sbb
cmps
jo
fs
cmp
pop
jmp
test
ja
enter
mov
pop
jle
push
sbb
das
fisttp
sub
sub
cmp
xor
adc
mov
dec
retf
bound
inc
add
add
das
sbb
inc
lods
mov
call
inc
int3
push
adc
sub
in
cmps
std
xchg
movs
loop
mov
pop
jns
cmp
(bad)
mov
mov
mov
sub
les
adc
test
lods
pop
lock
pop
stos
push
repz
mov
dec
mov
outs
scas
inc
xchg
clc
mov
in
lahf
cmp
aad
or
mov
js
xor
(bad)
cli
cld
or
xchg
and
rcl
ret
pop
push
jecxz
fistp
inc
sub
mov
inc
lock
fcomi
sub
or
jno
je
les
arpl
test
gs
jp
add
or
push
jo
stos
ror
gs
or
add
or
mov
out
outs
push
and
cmp
pop
push
popa
nop
lea
inc
dec
ins
out
(bad)
dec
push
mov
and
fadd
icebp
loop
pop
pop
xor
jno
pop
and
jge
rcl
in
dec
sbb
cmovp
cmc
outs
iret
sub
test
aas
add
rol
inc
mov
jnp
dec
mov
test
stos
push
rcl
popf
mov
cmps
mov
push
dec
jno
mov
shr
mov
xchg
test
in
sub
or
int3
js
mov
lock
sbb
bound
and
ss
push
jle
adc
adc
mov
mov
adc
add
xchg
repz
gs
mov
out
es
xor
inc
pop
loope
shr
aas
in
hlt
fs
ret
sbb
mov
xlat
pop
icebp
pop
stos
push
xor
in
cmps
jmp
(bad)
cwde
mov
daa
and
mov
lds
sbb
xor
ins
sbb
std
in
es
pop
aam
int3
inc
add
sub
mov
outs
jge
iret
jmp
leave
mov
fmul
dec
out
adc
jnp
mov
pop
jno
and
jmp
jmp
mov
scas
cs
sbb
cli
xchg
dec
add
mov
cmp
mov
xchg
add
fild
xor
jge
int
cmps
iret
popf
aas
out
and
popa
sub
(bad)
cdq
and
cmp
adc
xchg
sub
inc
les
push
dec
ficom
or
jnp
and
jno
cmps
xor
jl
enter
call
inc
imul
not
jge
ret
sbb
scas
das
stos
jle
pop
(bad)
in
or
mov
xor
xchg
jecxz
popa
call
and
stos
mov
jl
dec
scas
es
ret
push
aas
bound
push
or
mov
jb
leave
or
and
sbb
js
push
shl
outs
in
aas
xor
iret
or
out
adc
cmp
jecxz
std
test
int3
dec
mov
jne
scas
mov
push
or
sbb
dec
mov
sbb
jg
mov
push
retf
mov
cmps
popf
sub
push
mov
adc
(bad)
mov
and
movs
mov
xchg
and
xchg
int3
sub
xchg
mov
andps
shl
js
sbb
jmp
sahf
jmp
sahf
ins
pop
jae
icebp
test
rol
xchg
stos
fs
dec
add
repz
shr
cmp
pop
pop
int3
push
out
jnp
outs
lea
xor
push
nop
sti
dec
or
adc
inc
adc
pop
add
mov
out
or
js
retf
push
mov
fstp
dec
dec
repnz
or
imul
(bad)
fwait
push
inc
dec
or
fiadd
fisubr
add
mov
fistp
mov
mov
pop
push
fcom
cmc
and
and
stc
sti
pop
cmp
add
xor
xor
push
mov
popa
daa
adc
aad
lock
loopne
(bad)
fidivr
add
ja
pushf
rcr
add
add
jp
mov
dec
push
pop
in
andps
(bad)
xor
add
sar
inc
ss
xchg
inc
xchg
jge
mov
or
xor
push
outs
sub
dec
pop
movs
inc
dec
push
sbb
cld
out
icebp
add
into
inc
call
push
aas
dec
out
mov
or
sbb
sar
enter
les
cmps
jnp
dec
int3
xchg
pop
lods
pop
cwde
das
adc
mov
inc
aaa
les
jae
mov
arpl
loope
cld
fild
mov
cmc
fst
loopne
mov
xor
outs
or
cli
imul
sub
cld
and
fstp
adc
repnz
cmp
jbe
jns
test
mov
push
cmp
mov
mov
lock
and
pop
jg
imul
loopne
out
mov
jns
fucom
fldln2
sub
imul
ret
push
xor
mov
cld
jg
cmc
mov
inc
sahf
or
sar
ss
mov
jl
popa
mov
call
int3
mov
sub
pusha
sub
cmp
jmp
and
sbb
jne
mov
sbb
les
ins
or
fwait
or
out
xor
pop
jmp
hlt
and
(bad)
jl
xlat
(bad)
dec
test
jecxz
leave
scas
xor
addr16
into
xor
cmp
idiv
pop
les
sbb
push
ss
les
add
mov
add
mov
mov
ror
outs
inc
adc
sub
and
jg
push
dec
push
mov
loop
mov
cmp
add
dec
push
pop
jle
out
into
mov
cwde
js
add
sbb
enter
mov
mov
daa
mov
pop
ret
mov
sub
push
sti
(bad)
cmps
scas
mov
xor
xchg
fbld
sbb
arpl
fwait
mov
mov
and
scas
bound
es
or
clc
fist
xchg
push
pusha
mov
shr
and
mov
push
dec
(bad)
cmp
sbb
pop
sar
mov
inc
ins
dec
idiv
adc
inc
jbe
out
(bad)
push
in
(bad)
sti
outs
jecxz
iret
mov
aas
fmul
dec
sub
out
inc
test
ja
stos
add
jecxz
out
fadd
cld
xchg
out
cmps
(bad)
in
test
mov
ds
or
(bad)
loope
mov
or
idiv
mov
add
shl
retf
mov
out
cmp
sub
xor
imul
sub
lds
inc
ss
imul
add
dec
arpl
jp
clc
loop
mov
push
rcl
cmps
test
pop
push
fcmovu
imul
mov
add
xor
leave
cmp
mov
mov
cld
jno
push
jl
mov
mov
repz
sbb
xor
or
fcomp
aaa
push
mov
fisub
mov
sbb
push
clc
sti
xchg
cld
das
mov
je
sbb
in
push
adc
jne
and
shr
jp
add
out
mov
mov
pop
dec
imul
xchg
add
sbb
cmp
jne
adc
cmps
inc
jo
mov
mov
push
cli
mov
(bad)
mov
xchg
jbe
in
in
and
fdivr
adc
in
mov
repz
xor
jbe
dec
pop
jns
dec
or
sbb
and
xor
dec
pop
sbb
cmc
ret
aas
jo
jbe
fistp
lock
mov
fld
dec
out
push
push
jae
or
scas
aad
dec
test
inc
push
bound
and
ret
ins
mov
mov
xor
fs
add
ss
int3
jo
push
clc
push
jno
mov
in
test
(bad)
lea
jp
dec
mov
jne
jmp
rol
mov
jno
test
sbb
mov
out
mov
js
sbb
push
imul
mov
lds
mov
or
fiadd
ror
mov
xor
jg
mov
mov
sub
push
dec
push
hlt
fldcw
xor
push
iret
mov
and
icebp
pop
adc
les
xchg
fldpi
cmp
mov
xchg
int3
lods
outs
pop
mov
(bad)
mov
xor
outs
xchg
push
mov
outs
push
push
repz
mov
and
pop
inc
icebp
jg
mov
loop
sub
dec
sbb
sbb
stos
mov
adc
adc
jb
loope
imul
dec
mov
push
sbb
or
mov
inc
retf
cli
xchg
std
mov
cld
mov
mov
and
jbe
jns
int3
mov
add
xchg
pop
fs
(bad)
pop
jo
dec
int
inc
xor
test
outs
sbb
(bad)
mov
ins
out
pop
lahf
in
inc
inc
jno
out
popa
cmp
out
into
push
int
call
arpl
stos
(bad)
sub
aam
out
xchg
sbb
movs
ret
and
ud1
out
jg
mov
dec
inc
loopne
dec
stos
inc
ins
push
inc
pop
cld
in
in
idiv
hlt
jecxz
and
cld
push
and
sbb
fadd
pop
push
rcr
stc
into
cmps
inc
cmp
(bad)
dec
outs
sbb
ds
or
xor
dec
push
mov
mov
dec
mov
test
or
sahf
and
inc
pop
sub
lock
adc
push
add
push
lahf
in
lods
adc
or
jne
in
test
stos
dec
ins
int3
lods
jo
cmps
mov
data16
cmp
dec
and
dec
data16
fadd
xchg
inc
inc
paddusb
int3
call
push
(bad)
adc
mov
sbb
test
out
xor
jmp
inc
fwait
xchg
test
and
sbb
push
add
push
xor
out
rcr
sbb
jle
jns
imul
add
ja
mov
jbe
mov
cli
aaa
fmul
test
(bad)
imul
cli
mov
(bad)
ins
out
push
ret
mov
cmc
or
call
sub
loop
jo
cmp
jg
pop
ret
ss
push
or
adc
out
pop
fucom
add
xor
rol
mov
mov
clc
lods
or
xchg
mov
fldcw
jne
movs
pop
or
dec
inc
movs
aaa
jle
nop
repnz
jbe
mov
xchg
mov
in
sbb
inc
cmp
mov
mov
mov
mov
test
or
sbb
repnz
iret
mov
fwait
sbb
jae
aaa
les
ficom
jg
(bad)
sub
sbb
lahf
ret
cmps
adc
or
in
mov
jmp
sbb
or
push
pop
fs
mov
cmps
dec
pushf
loopne
dec
jp
add
pop
int
sahf
adc
out
out
jmp
pop
iret
lods
or
in
xor
lahf
jbe
out
mov
or
xchg
push
add
out
call
and
xor
cmps
sbb
packssdw
pop
(bad)
imul
or
jnp
std
adc
jle
cld
mov
pop
(bad)
push
(bad)
int
mov
jnp
add
jne
xor
rcl
test
sbb
ss
sti
pop
push
or
mov
iret
adc
rcr
and
imul
xor
mov
aam
cmp
mov
and
cwde
cdq
jmp
push
arpl
js
scas
(bad)
jo
mov
pop
out
inc
les
addr16
das
inc
xchg
mov
mov
xor
(bad)
pusha
clc
add
and
jmp
fcomp
pop
retf
and
test
ss
push
arpl
int3
aaa
inc
pop
push
adc
imul
pop
xor
sbb
popf
jg
aaa
dec
inc
fwait
cwde
outs
xor
retf
addr16
ret
ins
add
mov
repz
pop
sub
xor
pushf
vpand
addr16
mov
cmp
std
mov
in
retf
cmp
mov
sbb
in
xor
xor
fwait
(bad)
mov
lock
add
adc
mov
mov
jge
cli
adc
push
xor
cmc
lock
cmp
cmp
test
mov
sbb
and
stc
or
jns
adc
mov
mov
pop
xchg
jae
fs
push
or
inc
stos
cwde
rcr
(bad)
je
mul
mov
call
dec
fstp
mov
cmps
dec
fwait
jmp
mov
js
(bad)
mov
ret
cmps
mov
xor
aaa
lods
cmps
ins
adc
sbb
movs
shl
pop
pop
mov
fdiv
sbb
popa
nop
xor
cmps
mov
mov
cmp
add
or
cmp
icebp
(bad)
xor
sti
ja
add
xor
and
jmp
cmp
mov
cli
cs
cmps
adc
dec
xchg
mov
or
and
icebp
loopne
sub
sbb
dec
pop
jns
arpl
fstp
movs
mov
mov
movs
lock
xchg
mov
aad
clc
sti
enter
xchg
inc
push
or
popa
cwde
add
les
ror
push
jmp
mov
jl
fdivr
mov
push
cmps
sbb
push
mov
xchg
pop
mov
rcl
(bad)
loopne
adc
xor
push
in
(bad)
xlat
adc
mov
pop
dec
call
fdivr
arpl
jecxz
and
mov
jb
push
pusha
mov
test
jae
ret
push
mov
push
push
add
push
or
adc
imul
cmp
int
xor
mov
iret
mov
test
mov
fbld
jnp
in
retf
inc
mov
leave
dec
dec
inc
push
dec
and
test
popa
pop
aad
xor
adc
lds
cmp
popf
test
push
jbe
ret
push
lea
outs
and
mov
pop
shl
dec
inc
ins
pop
pusha
push
call
ss
mov
jo
sub
jecxz
push
movs
test
out
push
cmps
push
fwait
jb
or
mov
popa
dec
jmp
xchg
outs
sti
jg
repnz
aad
sub
int
dec
mov
inc
test
sub
dec
sbb
sahf
fadd
int
test
cdq
xor
ins
mov
inc
sbb
mov
mov
xchg
add
or
push
mov
jb
stc
leave
jl
adc
test
add
movs
pop
cmp
push
pop
sub
(bad)
mov
or
leave
pop
pushf
cli
cmps
mov
sahf
ficom
mov
pop
stc
xchg
sub
daa
cmc
xchg
inc
xchg
mov
cmp
mov
mov
sbb
iret
ds
xchg
inc
loopne
jg
add
jecxz
(bad)
iret
mov
into
std
dec
mov
nop
mov
pop
leave
bound
ins
add
cwde
loope
and
loop
std
adc
and
mov
repz
jo
inc
icebp
fs
shr
mov
push
add
jmp
(bad)
outs
and
cs
xchg
push
xchg
ja
or
mov
inc
cmc
sbb
jne
(bad)
stos
sbb
(bad)
and
push
mov
cmps
dec
out
lahf
mov
xor
jl
sub
jmp
idiv
idiv
(bad)
in
add
dec
sub
f2xm1
sbb
into
xchg
repz
retf
push
pop
(bad)
stos
stos
ret
movs
das
leave
rep
cld
xlat
push
sbb
nop
xchg
dec
sub
adc
push
or
xchg
cmp
xchg
mov
push
inc
hlt
adc
aas
dec
fcmovb
xchg
ret
pop
sbb
inc
ins
cmp
dec
push
dec
leave
fwait
iret
fistp
enter
mov
xchg
movs
loope
xchg
push
not
adc
outs
rol
mov
or
shr
dec
je
fisubr
repnz
out
mov
push
and
data16
cmps
aam
icebp
pop
pushf
push
and
imul
xor
gs
icebp
mov
pop
or
sub
mov
jne
cmc
push
adc
sbb
popf
inc
lds
shr
mov
aad
pop
cmp
adc
test
out
dec
add
jns
je
add
fwait
ds
jns
dec
ins
mov
lods
outs
imul
jbe
xchg
push
or
xor
repz
pop
push
mov
cmp
gs
stc
jne
jnp
pop
(bad)
xlat
cmps
and
mov
mov
inc
repnz
jp
repz
xor
jno
stc
fistp
out
iret
stos
adc
jecxz
mov
les
lock
and
scas
ja
and
repz
jecxz
imul
jl
mov
or
jg
adc
aas
pop
aad
fdiv
daa
shl
sub
imul
lea
jge
dec
das
(bad)
fmul
jnp
jmp
pop
mov
adc
adc
add
ja
pop
imul
cmp
data16
test
popf
ins
clc
add
sbb
lods
frstor
or
mov
sub
sub
repz
sub
rcr
xchg
shl
popa
scas
sar
inc
mov
push
mov
imul
adc
xor
inc
dec
into
call
pop
fldenv
mov
das
hlt
fsubr
jmp
scas
push
fs
push
and
pop
jmp
xchg
add
mov
dec
call
inc
sbb
fmul
sbb
cmp
call
pop
mov
sbb
fldenv
fmul
jbe
pop
lds
pop
adc
imul
cmc
data16
pop
dec
push
das
daa
or
lods
in
jp
scas
jge
pushf
mov
add
mov
fld
add
dec
fdivr
rol
push
push
cmp
pop
or
mov
cmp
mov
aad
loop
ss
(bad)
push
sub
jno
jne
cmp
mov
repnz
xchg
into
pop
sub
fwait
lods
repz
fdiv
mov
test
(bad)
rcl
pop
sbb
loop
cmp
out
mov
jl
adc
cmc
add
movs
add
mov
int3
or
(bad)
jmp
ficom
std
rcr
xchg
(bad)
jecxz
and
push
xchg
jmp
push
ret
xor
and
shl
out
movs
xchg
push
jg
add
inc
push
test
push
xor
pop
fimul
in
sub
shr
xchg
das
out
xchg
sbb
inc
(bad)
jmp
xlat
rcl
sub
xor
pop
lock
je
or
sub
mov
mov
lods
sbb
stos
dec
lods
mov
enter
and
pusha
cmp
jle
xor
dec
adc
or
repz
je
lods
ret
mov
push
dec
pop
and
in
imul
adc
enter
mov
outs
xor
rcr
ins
push
clc
xor
fs
mov
ror
adc
pop
int
outs
pop
push
jecxz
mov
ror
sbb
adc
hlt
(bad)
mov
add
xchg
les
aaa
and
pop
pop
fwait
loope
xor
movs
adc
arpl
ja
mov
pop
(bad)
jg
mov
mov
mov
xor
jmp
or
cmp
jne
mov
add
mov
dec
popf
cmp
xlat
out
(bad)
xor
sbb
xor
out
or
jg
or
daa
inc
call
xchg
and
daa
or
jbe
mov
cs
sbb
(bad)
adc
pop
leave
xor
iret
mov
mov
jecxz
add
sub
retf
sbb
sbb
movs
pusha
mov
outs
push
out
and
jo
mov
xchg
inc
push
repz
ins
enter
mov
movs
pushf
mov
in
sub
(bad)
leave
xlat
and
jae
or
cdq
sub
sti
ret
pop
stos
rcl
cwde
rcl
jbe
jmp
lds
(bad)
lea
or
sbb
cld
in
addr16
pop
(bad)
push
sti
into
inc
imul
cmp
jl
pop
inc
mov
aad
in
xchg
out
xchg
push
outs
mov
jecxz
(bad)
or
cmp
jp
jle
rcl
mov
inc
(bad)
xchg
fistp
imul
xchg
mov
int
push
inc
fst
jge
call
push
pushf
pop
and
cs
lea
push
das
in
xchg
test
aam
or
fcomi
test
aaa
and
test
in
add
ss
into
cmp
ins
sahf
pop
jns
jno
out
stc
xor
mov
dec
fs
sub
movs
fcmovu
inc
adc
inc
in
cwde
paddusw
enter
mov
scas
das
retf
xor
push
sub
not
inc
and
int
xor
mov
jae
je
sub
sti
repz
adc
mul
mov
dec
sub
xor
jbe
scas
mov
adc
retf
repnz
stos
fldenv
pop
pushf
out
int
dec
add
mov
out
add
(bad)
push
aas
pop
rol
in
daa
and
xchg
mov
xor
sub
mov
and
inc
sub
out
pop
inc
arpl
inc
push
fcom
jno
cmp
leave
sub
or
mov
iret
enter
test
out
loopne
leave
xor
test
mov
imul
xchg
pop
push
loope
jb
sti
push
pop
movs
lods
mov
and
call
mov
jbe
mov
lahf
ins
mov
xchg
xor
adc
jp
add
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
lea
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
lea
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
lea
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
jmp
push
mov
xor
xor
test
jbe
push
push
mov
mov
mov
xor
inc
cmp
mov
jne
xor
inc
cmp
jb
pop
pop
pop
ret
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
