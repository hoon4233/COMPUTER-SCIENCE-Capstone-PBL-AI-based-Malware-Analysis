sbb
add
or
movs
imul
pop
push
rcl
out
xchg
retf
test
in
repz
mov
mov
dec
push
popa
fyl2xp1
dec
jae
push
xor
xor
add
and
push
retf
xor
and
pop
test
idiv
xchg
jmp
inc
dec
mov
pop
stc
adc
out
xchg
sti
mov
and
rcl
out
push
loopne
xchg
lock
scas
mov
mov
xchg
imul
imul
mov
cmp
inc
mov
fst
mov
push
rol
fsub
jno
and
ret
mov
mov
cmp
jo
mov
xchg
add
add
cmp
jnp
shr
dec
or
inc
es
int
and
in
int
inc
jmp
nop
and
adc
rcr
xor
(bad)
stc
mov
xor
clc
inc
retf
mov
mov
ret
movs
push
shl
mov
jmp
inc
pop
or
jmp
js
mov
ret
cmp
cdq
shr
add
mov
or
and
imul
outs
ror
push
xor
sti
ja
(bad)
sti
lahf
mov
ss
in
cmc
je
adc
add
inc
and
add
adc
sbb
inc
mov
iret
xchg
dec
rcr
jns
movs
pusha
les
test
xchg
lahf
jbe
cld
daa
outs
jecxz
inc
leave
js
pop
cmp
aas
push
loop
jmp
lods
push
pop
into
mov
jg
sbb
mov
frstor
mov
add
inc
xor
fsubr
rep
neg
cld
cdq
and
cmp
adc
pop
retf
out
inc
lds
dec
repz
cmp
mov
pop
movs
je
jecxz
jns
mov
aas
xchg
ja
xlat
shl
out
inc
jmp
push
mov
int
jmp
test
stc
add
push
repnz
fisubr
shl
js
in
dec
sbb
cmp
in
and
outs
mov
outs
je
aam
cmc
pop
mov
jle
mov
mov
inc
cmp
leave
fistp
jb
mov
sbb
ins
fild
cmp
add
std
or
cmc
pop
pop
or
cmp
arpl
fsub
mov
jns
inc
shl
inc
loop
mov
mov
xchg
movlps
add
mov
out
inc
bnd
lds
aaa
mov
xor
or
pop
ret
dec
dec
mov
or
(bad)
out
dec
sub
inc
add
sub
push
jmp
xchg
test
mov
retf
sbb
add
sbb
(bad)
loop
and
fwait
sbb
addr16
mov
(bad)
adc
adc
jb
and
xchg
js
fwait
out
mov
mov
sub
mov
pop
into
lea
stos
dec
sub
cli
push
(bad)
cmps
xchg
xor
cwde
mov
jnp
push
fimul
add
and
push
pop
lea
sub
xor
stos
mov
dec
dec
pop
ss
in
mov
mov
lock
mov
dec
das
jne
mov
call
in
movs
loopne
dec
jecxz
fstp
add
push
dec
xor
or
out
sti
jae
int
les
inc
pusha
jb
js
cmp
mov
mov
adc
dec
aam
and
pop
aad
adc
leave
jge
inc
pop
or
push
and
in
mov
shl
movs
loope
popa
add
test
cs
pushf
js
test
xor
inc
scas
sbb
imul
xchg
add
xor
dec
and
xor
mov
push
sub
pop
aas
(bad)
mov
mov
pop
gs
and
daa
(bad)
call
inc
sub
stc
mov
leave
cmps
icebp
or
das
mov
sti
push
js
in
lods
ja
ins
inc
ret
adc
mov
push
sbb
pop
sti
push
test
ret
dec
fdiv
mov
jmp
in
add
les
add
sbb
mov
(bad)
ins
pop
mov
add
call
pushf
out
outs
fwait
retf
jmp
adc
mov
cmp
repnz
fmul
aaa
nop
add
sub
mov
xor
cmp
sbb
(bad)
xlat
mov
iret
push
fwait
mov
cmp
push
lock
cmp
popf
inc
fistp
or
sbb
pop
enter
mov
and
xor
push
adc
outs
in
sahf
out
mov
fist
gs
in
push
pop
push
fwait
dec
adc
pushf
lock
sahf
mov
dec
leave
push
aam
xor
cld
jp
mov
cld
repnz
sbb
rcl
add
mov
mov
add
sbb
icebp
arpl
or
loop
aam
pop
mov
pop
sbb
mov
mov
pop
out
aam
xchg
xchg
ret
in
mov
cmp
adc
in
mov
and
mov
mov
in
lds
enter
out
jl
or
mov
mov
cdq
xchg
sub
ds
js
fcom
cmc
fsubr
sub
call
mov
ins
dec
sub
addr16
stc
ror
mov
cmps
popa
mov
xchg
push
cmp
xchg
mov
stos
not
add
(bad)
aas
mov
sbb
or
xlat
xlat
push
sbb
cmps
sbb
mov
mov
fwait
test
xor
arpl
std
ds
mov
xchg
dec
(bad)
stos
mov
xor
cmp
inc
and
mov
loope
call
xor
sar
mov
adc
jg
js
retf
inc
loope
lods
mov
push
les
xor
cmp
mov
fdivrp
mov
inc
pop
dec
fwait
lods
jge
fbstp
jmp
push
sub
ins
jb
cdq
je
fadd
and
retf
lea
inc
test
jbe
pushf
dec
add
inc
xor
loop
adc
lods
test
outs
jo
mov
push
outs
test
or
sub
mov
in
jo
cmp
or
and
mov
enter
cmp
popf
stc
inc
mov
or
cmp
sub
jno
mov
or
dec
or
sub
pop
lea
sbb
aaa
loopne
pop
adc
mov
les
ins
push
xor
mov
jb
cmp
jle
loope
mov
push
inc
mov
outs
mov
and
mov
gs
nop
repnz
jnp
repnz
and
leave
fimul
xor
bound
das
out
pop
stos
sub
or
pop
sbb
shr
or
add
lods
ror
jge
lds
dec
mov
inc
push
iret
jo
loope
aad
mov
pop
and
mov
inc
cmp
call
jecxz
mov
jmp
push
into
pusha
mov
cmp
jnp
jl
adc
jmp
add
inc
lea
sub
aad
mov
ins
lods
dec
xchg
push
in
in
xor
push
shl
les
retf
sahf
and
in
in
dec
and
ds
stc
mov
pop
cmp
sahf
stos
js
cdq
test
nop
mov
stos
loop
mov
jne
cli
das
(bad)
loopne
je
scas
mov
loop
imul
in
or
ret
retf
ds
imul
and
fs
inc
or
xor
ins
cmps
mov
push
mov
mov
jmp
or
in
and
ror
push
mov
xor
jle
dec
and
pop
mov
xchg
inc
dec
mov
jae
fucomi
push
addr16
xchg
push
jg
and
inc
cli
or
jns
jmp
add
repnz
cmps
loop
xor
xor
pushf
imul
cmp
sub
jno
add
and
int3
inc
scas
mov
dec
fiadd
pop
int
jmp
inc
add
imul
inc
cmp
scas
sbb
in
jne
jle
sub
jo
addr16
xor
fwait
sti
mov
outs
pop
loopne
add
add
mov
icebp
jno
aas
inc
mov
shr
pop
pop
sbb
or
dec
jmp
add
fild
mov
mov
sub
hlt
sub
popa
jae
hlt
into
mul
pop
adc
sbb
out
xlat
lahf
mov
int3
inc
repnz
scas
fcmovb
and
sub
adc
(bad)
cmp
dec
add
shl
jp
sub
mov
add
jns
pusha
and
xchg
mov
ror
enter
push
jmp
aad
inc
cmps
mov
imul
fcomip
xchg
shr
lock
repnz
daa
jnp
and
mov
ror
pushf
arpl
adc
mov
inc
xchg
pop
pusha
inc
(bad)
out
pushf
or
pop
pusha
aaa
fisub
data16
cmp
fs
or
or
inc
push
mov
cmp
fwait
shl
sub
fadd
rcl
adc
aam
xchg
repnz
xor
xor
or
add
ins
fnstcw
daa
sub
inc
out
adc
daa
aad
pusha
mov
fisub
lea
jp
inc
or
int
cmps
hlt
(bad)
lods
(bad)
push
xchg
xlat
mov
mov
push
inc
sti
and
cmp
pop
(bad)
inc
xchg
test
fs
sub
aam
(bad)
(bad)
std
jle
fbstp
adc
dec
pop
ficomp
in
mov
std
fiadd
jmp
iret
mov
mov
push
loopne
(bad)
pop
aad
je
(bad)
sub
adc
mov
stc
fidiv
add
icebp
cmps
jl
sahf
or
mov
aam
cmp
cli
cmps
sbb
and
(bad)
jmp
mov
jno
data16
sub
xchg
mov
(bad)
sbb
sti
dec
in
cmp
rcr
pop
shr
repnz
push
js
shr
retf
jp
pushf
je
add
sub
sub
mov
(bad)
fldcw
cmp
or
ins
cmc
push
and
hlt
daa
nop
bound
ret
sbb
fadd
xor
and
stc
mov
adc
pushf
aas
leave
mov
dec
push
idiv
shl
jg
mov
les
clc
addr16
sub
stos
xchg
and
xchg
sub
add
dec
scas
scas
and
xor
mov
jl
push
out
jmp
clc
neg
add
cld
sub
dec
mov
adc
mov
cmp
add
(bad)
fcom
aad
cld
movs
or
push
pop
loope
cwde
arpl
lds
(bad)
leave
inc
push
mov
cmp
clc
jno
pop
and
lods
inc
push
pop
scas
mov
xor
(bad)
loop
pushf
xlat
push
push
lods
fsub
adc
aaa
and
jle
ret
ins
ins
inc
push
fstp
dec
jne
add
pop
(bad)
push
cmp
pop
jge
push
adc
sbb
mov
ror
or
or
xchg
mov
cmp
pop
shl
mov
jb
add
push
rcr
add
xchg
leave
iret
call
pop
ss
fdiv
call
jmp
ja
adc
add
sbb
sbb
jmp
adc
add
in
ret
stc
pop
jbe
jmp
fsub
xchg
iret
cmp
movs
ds
inc
outs
hlt
test
cwde
lods
sub
xchg
in
jnp
lahf
push
xchg
(bad)
mov
enter
xchg
mov
adc
pop
test
out
(bad)
dec
loop
cmp
add
neg
mov
sahf
xor
ret
xchg
cdq
lods
in
inc
lods
test
pop
repz
js
cwde
mov
mov
pop
pusha
pop
imul
pop
xor
pop
je
mov
stos
enter
aam
xor
cmc
jo
(bad)
test
jns
(bad)
test
cwde
cmps
in
outs
idiv
mov
fst
leave
xor
aad
out
lods
xor
mov
ret
js
(bad)
jmp
xchg
bound
pop
cmp
push
push
shl
shl
test
inc
stc
push
call
cs
hlt
fstp
lahf
add
cmp
in
and
sbb
pop
push
and
push
jno
scas
cmps
retf
pop
pop
adc
(bad)
inc
pop
ret
push
dec
fs
lock
fwait
popa
push
mov
xor
jmp
(bad)
pop
(bad)
sub
jae
out
push
adc
mov
jmp
les
lods
xchg
in
leave
or
in
push
pop
xchg
sbb
dec
jl
xchg
call
test
jbe
pop
add
push
xchg
xchg
shl
sub
xor
fdivr
and
sub
pusha
sub
fwait
sbb
jle
ret
and
aaa
push
xor
test
stos
pop
hlt
setp
jg
or
mov
cmp
inc
mov
jne
int3
xchg
inc
lods
xchg
mov
xchg
jnp
add
cmp
mov
rcr
inc
xchg
cmp
cld
jle
pop
(bad)
xlat
cs
push
aas
jecxz
or
sub
push
repnz
cmp
mov
and
cmp
inc
aam
mov
into
cdq
fucomp
lea
lock
mov
cmc
adc
cli
xor
pop
jb
popa
arpl
scas
mov
dec
pop
out
pop
cmps
fwait
js
arpl
(bad)
adc
mov
out
add
into
mov
loope
inc
jmp
maxps
repnz
jnp
in
xchg
mov
cmps
mov
call
dec
pop
fisub
mov
xor
inc
repnz
movs
mov
dec
mov
push
sub
push
cli
xchg
cmp
pop
icebp
mov
or
sbb
push
bound
and
xchg
icebp
add
enter
push
in
mov
or
cmps
mov
xlat
jae
mov
adc
iret
mov
inc
arpl
or
xor
fstp
sub
jmp
mov
and
fsubp
cmp
xlat
fidiv
mov
mov
cwde
outs
jge
sbb
fidiv
inc
ja
sub
data16
xor
cdq
pop
repz
scas
xor
pop
pop
xor
mov
cmps
dec
xor
call
clc
ss
hlt
sub
mov
inc
inc
loopne
xchg
sub
push
jp
mul
lock
mov
adc
inc
cld
pop
pusha
and
pop
cmp
push
dec
xlat
dec
dec
outs
jle
ins
xor
pop
or
push
sbb
cmp
mov
movs
mov
and
mov
icebp
mov
call
inc
repnz
rcl
mov
xchg
dec
push
adc
inc
les
shr
xlat
cmps
stos
pop
xor
inc
in
pop
sub
shl
pop
pop
jg
retf
fld
test
inc
cmp
(bad)
enter
sbb
pop
stos
fidiv
clc
dec
xchg
ror
jmp
jno
jle
and
adc
aad
and
enter
enter
cmp
call
mov
pushf
popf
push
inc
test
fsubrp
jno
jne
mov
mov
pop
jp
and
mov
fist
mov
test
aaa
inc
add
mov
mov
sbb
mov
adc
sub
cli
js
pop
test
out
mov
inc
retf
outs
inc
and
jmp
dec
sub
mov
sar
not
inc
sub
xlat
jbe
pop
add
add
xor
and
ret
pushf
movs
pop
push
push
add
outs
jbe
add
inc
shl
out
sub
xor
sub
outs
dec
sbb
jg
int
(bad)
fdivr
imul
dec
fdiv
xchg
xchg
fisub
jmp
sbb
pop
jmp
mov
xor
or
sbb
push
jns
pop
xchg
out
mov
outs
pusha
add
pop
push
cmp
pop
mov
or
aad
xor
pop
in
dec
jmp
mov
fisttp
or
pop
cmp
xchg
inc
arpl
xor
add
mov
lds
es
movs
sub
mov
movs
ror
out
pop
push
shr
mov
adc
mov
imul
adc
out
add
das
addr16
xor
pop
mov
cli
mov
mov
mov
push
cmp
(bad)
push
inc
sbb
dec
ret
inc
retf
push
xchg
mov
fiadd
pop
dec
add
xor
sbb
cmps
and
shr
clc
pop
in
ins
mov
push
inc
in
call
cs
icebp
shl
jle
cwde
enter
nop
pavgb
mov
jne
mov
mov
xchg
jge
ror
hlt
aam
sbb
sbb
cmp
inc
cmps
pop
mov
jecxz
cli
ja
push
leave
mov
push
push
cs
mov
in
loopne
xchg
and
pop
push
push
imul
imul
sbb
pushf
push
in
mov
scas
scas
ds
mov
pusha
cld
adc
jo
push
das
pop
sbb
xchg
test
jbe
cmp
jo
ins
(bad)
retf
xchg
xchg
retf
mov
dec
es
(bad)
das
rcr
jbe
mov
jb
sub
cmp
je
mov
mov
fiadd
mov
je
out
fucomp
out
(bad)
adc
and
push
dec
jno
xor
sub
jmp
ds
cdq
ins
and
inc
cmp
inc
xchg
sub
sbb
icebp
in
imul
fadd
fcomp
add
cmp
xchg
push
call
cld
inc
xchg
int3
stos
inc
shl
scas
loopne
(bad)
daa
(bad)
xchg
adc
cwde
adc
add
mov
push
push
mov
fsubr
fcmovnb
inc
push
pop
jl
cld
popf
or
add
call
loopne
ss
fnstcw
pop
das
aad
pushf
xchg
adc
and
(bad)
(bad)
sahf
sub
or
sbb
out
call
add
dec
mov
adc
sbb
sbb
inc
mov
pop
(bad)
movs
sbb
fcom
shl
in
cwde
es
add
loope
pop
aam
and
adc
sub
push
sub
and
push
mov
loope
fidivr
jecxz
fwait
icebp
out
and
call
sub
ret
test
retf
mov
les
and
sahf
mov
repz
mov
push
adc
sub
ficomp
fisub
test
mov
sbb
retf
jecxz
inc
mov
jno
cmp
rol
lods
adc
and
scas
mov
add
xchg
(bad)
pop
push
test
lods
mov
test
sti
jae
stc
cmp
ret
rcl
imul
aaa
retf
push
daa
in
aaa
cmp
enter
out
pop
adc
cmp
int3
mov
jbe
cpuid
les
test
fdivr
bound
dec
mov
inc
pop
push
mov
test
cs
loopne
lahf
arpl
cli
cmps
add
int3
fcomp
addr16
test
jl
adc
xchg
call
pop
test
imul
jg
test
push
repz
(bad)
fistp
movs
inc
dec
cmp
push
add
pop
lahf
lods
mov
scas
mov
in
pop
inc
or
inc
add
sub
sbb
aad
cmc
xor
ins
pop
and
xchg
int3
or
mov
xchg
mov
mov
dec
fadd
in
cmps
sub
test
les
inc
xor
fwait
cmp
pop
mov
adc
xor
in
in
mov
xchg
gs
adc
mov
jae
aas
stc
fld
cmp
loope
push
and
and
and
xchg
scas
or
jmp
inc
inc
ret
sub
push
dec
inc
sub
mov
in
pushf
int3
adc
push
fwait
ret
mov
pushf
(bad)
das
add
sbb
pop
pop
mov
sub
add
pop
push
xor
int
aas
stos
shr
mov
not
sbb
push
mov
mov
sub
sub
stc
inc
hlt
xchg
aad
mov
inc
pushf
or
lock
cmp
cmp
mov
xlat
xchg
test
push
imul
das
icebp
stos
cmps
in
cmp
mov
pop
push
gs
popf
or
push
(bad)
bound
adc
dec
mov
adc
pop
sub
push
aam
mov
mov
xchg
call
(bad)
outs
and
sahf
outs
add
and
mov
je
fld
pop
loop
movs
out
rcr
fisttp
int
sub
(bad)
xchg
push
adc
xchg
or
cwde
iret
push
xchg
dec
icebp
push
cmps
inc
sti
sbb
pop
scas
dec
aaa
fpatan
jmp
pop
sub
ror
jmp
dec
push
inc
jb
dec
cld
sub
inc
ins
pop
pop
dec
and
jne
idiv
push
or
jnp
gs
fstp
dec
or
mov
fisub
and
push
ror
cdq
nop
rcl
xor
jmp
scas
xor
shl
into
and
dec
neg
add
mov
outs
lods
loop
jae
sbb
xchg
mov
retf
mov
fiadd
daa
sbb
ins
dec
and
fisttp
(bad)
mov
adc
dec
rcr
cmp
cmp
aaa
sub
sbb
(bad)
in
push
xor
mov
mov
in
mov
ror
shl
loopne
and
xor
add
bound
outs
not
inc
inc
jnp
mov
ja
jne
test
xchg
push
inc
cmps
jo
shl
test
dec
pop
test
sub
popf
xor
and
cmp
or
dec
mov
(bad)
dec
xor
out
or
je
push
mov
mov
xchg
jge
mov
aaa
(bad)
hlt
push
leave
addr16
xor
cmp
mov
out
adc
jl
aas
les
or
mov
mov
movs
pop
outs
popa
jbe
popa
sbb
call
ja
jp
sub
rol
pop
jnp
fimul
xchg
(bad)
dec
mov
pop
out
dec
rcl
xor
cs
loope
mov
(bad)
setbe
fwait
jmp
xlat
icebp
dec
pusha
(bad)
mov
mov
out
push
outs
pop
mov
adc
jmp
cmp
add
sbb
pop
data16
out
dec
hlt
lods
out
push
sub
adc
out
adc
enter
cli
adc
push
ret
aaa
and
sbb
repnz
dec
pop
dec
inc
mov
scas
imul
pop
mov
cmp
push
imul
movs
push
sbb
ins
inc
jp
leave
or
jmp
push
sub
mov
sar
mov
inc
push
inc
sbb
cmp
pop
and
cmp
int3
out
sbb
lds
mov
sbb
scas
mov
pop
mov
and
add
daa
and
fisub
rol
imul
clc
xchg
pop
adc
push
test
cs
and
sbb
inc
pop
fild
push
inc
test
push
iret
jb
pop
inc
iret
mov
adc
in
call
outs
mov
int
mov
test
jp
and
xor
jg
ss
in
repnz
dec
syscall
mov
retf
(bad)
adc
ret
mov
arpl
jge
loop
inc
loope
and
mov
rol
aam
sahf
inc
sub
sar
aas
mov
test
gs
jmp
(bad)
lods
arpl
fsubr
das
jmp
sub
shl
dec
cld
fcom
inc
xor
mov
call
test
loope
movs
nop
jmp
repz
xor
jmp
jno
call
aad
pop
int3
outs
push
inc
in
sub
mov
fnstenv
dec
mov
dec
mov
aaa
jmp
push
cmp
ss
jl
int
inc
shl
call
xor
push
je
in
ret
stos
outs
dec
sbb
(bad)
and
jge
bound
jmp
fcomp
pop
mov
in
inc
(bad)
test
scas
(bad)
pop
imul
test
fninit
repnz
(bad)
adc
mov
cmp
call
add
leave
or
push
not
repnz
es
adc
iret
cmp
dec
(bad)
js
adc
push
push
xchg
das
sub
dec
dec
add
sbb
dec
cmp
inc
mov
sbb
push
sbb
add
add
addr16
aaa
inc
ss
movntps
test
femms
mov
mov
mov
lods
jge
into
sub
dec
jae
iret
jmp
mov
fdiv
pop
mov
mov
jo
out
or
push
repz
xchg
pop
inc
mov
ins
adc
pop
or
cmps
gs
sahf
mul
xchg
sub
sub
jbe
inc
lods
and
mov
and
xchg
xor
jg
sub
and
and
push
jnp
fisubr
jge
add
shl
shl
out
jle
mov
mov
fimul
loop
xchg
not
xchg
jns
aas
xor
aam
inc
xchg
xchg
push
xor
iret
lods
cmps
sub
and
cmp
(bad)
or
jp
mov
inc
and
into
inc
inc
cdq
(bad)
ja
daa
push
jno
mov
int3
rcl
(bad)
rcl
pop
xor
ins
dec
enter
mov
xor
(bad)
fs
xchg
(bad)
mov
addr16
inc
mov
pop
(bad)
mov
mov
mov
push
sub
or
sahf
rcr
loopne
jae
add
fdivr
xor
les
sub
xor
and
fs
dec
pop
and
xlat
cmc
xchg
pop
in
leave
retf
sub
fisub
inc
dec
jge
nop
push
lds
ins
ret
push
movs
retf
call
mov
mov
adc
aad
in
jno
(bad)
lods
jmp
mov
cdq
sub
scas
inc
div
cmp
mov
xchg
sbb
cwde
add
push
in
xchg
cmp
xchg
sub
lods
mov
add
mov
add
ss
fcom
in
daa
ja
pop
aad
data16
inc
xor
arpl
scas
out
mov
mov
push
aad
cmp
sub
lds
xor
ss
scas
push
add
sbb
ret
sub
rcl
push
jp
daa
test
adc
psadbw
push
and
sub
pop
xor
push
das
xchg
push
cmc
xor
sbb
sbb
add
mul
bound
(bad)
aas
aad
mov
retf
aad
mov
pushf
push
adc
clc
xchg
pop
mov
xchg
adc
mov
add
xor
je
xor
loope
and
outs
pop
push
xor
stc
popa
cld
push
dec
sub
pop
sbb
cmps
sbb
push
jmp
sbb
pop
push
out
cmps
pop
iret
fiadd
jg
and
lea
scas
popa
xlat
loop
jmp
mov
pop
pop
into
mov
push
scas
sub
xor
cmp
xchg
cmp
nop
xchg
pushf
dec
in
test
in
adc
sbb
inc
aad
push
out
int
sub
inc
push
xor
daa
hlt
inc
stc
jb
mov
les
neg
stc
jb
cmp
fld
add
or
data16
int
ins
iret
or
ret
xor
retf
daa
xchg
dec
jmp
xchg
or
mov
ins
pop
call
iret
jp
inc
into
sbb
ins
lods
rcl
and
xor
xchg
mov
fldl2e
pop
lahf
rcl
or
cmps
sub
sub
mov
shl
retf
out
test
sub
mov
mov
inc
mov
movs
cmp
xchg
dec
xchg
imul
dec
mov
adc
in
xchg
cmp
xor
imul
fs
sti
jge
dec
in
call
fidiv
cli
mov
stos
and
int
sbb
xchg
jmp
push
sbb
mov
mov
aaa
push
rcr
inc
js
outs
pop
push
cmps
leave
push
push
pop
cmc
mov
lock
ins
sub
daa
lods
cmp
or
cmp
dec
jge
(bad)
std
sti
push
push
adc
and
imul
cmc
sti
or
out
ret
movzx
loopne
(bad)
jg
jb
fsubr
mov
push
sbb
mov
cmp
add
jecxz
loope
push
xchg
push
jmp
inc
xchg
ficomp
inc
and
cld
push
(bad)
jne
mov
mov
jne
inc
cld
mov
pop
mov
call
mov
movs
shr
lds
shr
fwait
je
push
into
pop
ins
and
inc
and
xchg
repnz
pushf
loopne
xchg
pop
mov
dec
dec
or
cmp
mov
push
inc
mov
push
loope
lds
(bad)
pop
out
xchg
es
dec
and
or
and
pop
retf
push
add
test
jg
mov
mul
movs
add
push
inc
fwait
mov
fistp
mov
dec
lods
scas
jp
int
add
and
fs
cmp
jl
and
repnz
dec
push
push
aaa
sbb
or
jae
xchg
scas
out
push
out
mov
pop
cmps
hlt
mov
inc
cld
ret
adc
and
(bad)
dec
(bad)
out
sbb
mov
inc
outs
pushf
mov
mov
sub
adc
xor
clc
sbb
mov
adc
xlat
outs
je
dec
xchg
dec
sbb
add
test
push
retf
lea
pop
scas
xchg
jnp
jne
pop
jp
out
mov
js
leave
push
leave
xor
and
adc
pop
mov
cmp
fnstcw
adc
out
inc
dec
sbb
(bad)
sub
int3
xor
dec
pop
leave
sbb
xchg
retf
bnd
mov
cmps
sbb
xchg
xchg
cmp
cmp
aas
rol
mov
push
jbe
dec
shl
push
sbb
mov
mov
cmp
inc
push
mov
push
mov
gs
fs
sbb
or
push
out
inc
repz
enter
xor
xor
lds
add
jns
sub
jmp
loop
das
pop
dec
mov
xor
push
push
stc
cmp
pop
push
retf
adc
test
mov
jl
push
lea
mov
xchg
add
movs
int3
cmc
shl
jmp
out
push
imul
sub
call
xchg
push
push
add
in
retf
fisub
sub
ss
fnstenv
mov
or
and
cld
mov
aas
dec
call
mov
jns
push
ins
inc
and
xor
fdivr
and
je
fisttp
enter
mov
jnp
cdq
mov
jp
jge
call
sar
(bad)
pop
sub
(bad)
or
ja
push
mov
push
sbb
inc
rcl
jge
lds
scas
ins
jg
sub
jb
test
aas
mov
or
and
mov
mov
iret
addr16
lahf
add
xchg
xchg
pushf
mov
mov
mov
lahf
lods
cmp
repz
xlat
jo
es
xchg
xor
iret
sahf
mov
outs
cmp
push
lods
stos
fdivr
dec
mov
adc
leave
dec
ret
test
ja
test
xor
fisttp
fmul
push
inc
xchg
dec
les
jb
ss
ins
ds
dec
mov
mov
push
stos
sbb
sub
sub
dec
mov
push
pop
sbb
sub
pop
xor
lods
cmp
mov
movs
test
test
mov
mov
cwde
jae
xchg
cmps
xlat
pop
adc
inc
or
std
mov
push
(bad)
cmc
add
push
stos
mov
fsubr
jae
pop
daa
xor
xlat
jg
clc
test
mov
xchg
xor
push
enter
test
adc
push
xor
mov
enter
mov
push
scas
enter
mov
jg
outs
hlt
adc
pop
int3
fs
add
cmovl
adc
rcr
ficom
(bad)
jecxz
outs
jne
add
sub
clc
shr
or
cli
sti
push
pop
(bad)
test
in
add
bound
arpl
movs
ins
inc
and
ror
stc
sub
cmps
or
(bad)
out
scas
push
cwde
or
jno
int3
xchg
(bad)
std
jo
inc
adc
pop
inc
sub
cmp
lock
jns
pop
jbe
js
mov
test
or
scas
mov
xchg
aaa
add
(bad)
cmp
mov
aam
aas
adc
mov
fcom
push
mov
(bad)
fst
mov
dec
aad
lods
mov
or
dec
mov
pop
fs
jmp
cmp
jl
es
pop
shr
dec
sbb
fcomp
pop
inc
rcl
jmp
push
mov
jge
clc
jle
jne
xchg
add
fld
fwait
test
cmp
or
out
pcmpeqd
sti
adc
or
leave
cmps
adc
loop
hlt
jg
xchg
push
sub
out
sar
cmps
sub
aaa
inc
xchg
inc
cmp
movs
mov
retf
rcl
xor
lock
cmp
test
lock
int
scas
pop
or
pushf
and
sbb
cmps
and
add
retf
sub
bound
sbb
mov
xor
cs
jbe
ds
cmps
jb
ret
pop
sbb
repnz
cmp
ja
add
xchg
or
scas
test
push
imul
in
inc
adc
sbb
adc
mov
mov
dec
retf
aas
outs
retf
adc
or
sub
dec
or
in
pushf
hlt
adc
and
mov
cmp
pop
mov
js
xor
ds
(bad)
sub
popf
mov
or
repnz
pusha
mov
inc
xchg
gs
test
daa
rcl
aad
push
mov
lods
out
daa
sbb
mov
xor
enter
inc
arpl
idiv
xchg
and
addr16
adc
mov
xchg
dec
vmwrite
adc
add
push
push
jle
push
jb
das
xor
mov
add
pop
cmp
or
adc
div
mov
mov
mov
test
call
xor
adc
rol
pushf
sub
jle
in
dec
xchg
sub
or
xchg
retf
mov
popa
lds
retf
shr
clc
iret
fadd
mov
into
or
ror
(bad)
out
mov
and
ins
sub
fld
adc
xchg
xor
mov
xlat
mov
jne
mov
pushf
add
arpl
xlat
xchg
call
dec
sub
fs
mov
fiadd
lods
or
lods
mov
aad
mov
movs
xor
repnz
sbb
test
or
inc
dec
sti
inc
ins
jl
jle
mov
data16
movs
mov
dec
js
(bad)
add
data16
fistp
lock
test
clc
stos
pop
jmp
inc
fisub
dec
mov
and
adc
xchg
sub
sbb
pop
aam
fisub
jle
(bad)
jae
dec
add
jmp
jmp
or
daa
out
loop
sbb
sbb
(bad)
pop
popf
inc
fisttp
and
add
or
es
cdq
fs
xchg
leave
mov
xchg
fistp
xchg
(bad)
(bad)
repz
outs
mov
mov
or
fdiv
push
pop
bound
add
lock
or
fisubr
sub
les
popa
sbb
shl
cmp
test
inc
jl
mov
pop
xchg
cmp
daa
or
pusha
ins
sub
mov
adc
gs
sbb
mov
cmp
xor
int3
xchg
pop
jae
jbe
lds
mov
or
aad
jns
inc
inc
pop
jg
pop
xchg
jns
in
(bad)
sahf
mov
in
loope
test
shr
xor
mov
push
mov
push
lock
repnz
in
cmp
clc
jl
adc
sbb
mov
adc
push
or
xchg
jge
and
sub
push
cwde
jl
dec
jae
pop
dec
cmc
idiv
mov
xor
mov
xor
je
mov
jmp
dec
retf
push
or
in
pop
stos
sahf
stc
lahf
dec
xchg
xor
push
and
pusha
rcl
mov
shr
call
cwde
enter
outs
or
xor
push
shl
repnz
cmp
(bad)
jnp
mov
push
jle
xchg
imul
jl
cdq
mov
into
pusha
push
fnstcw
sahf
dec
imul
test
into
jp
and
mov
fdivr
loope
adc
setp
dec
enter
int
dec
repnz
dec
lahf
jge
jnp
out
cmp
inc
loop
shl
xlat
out
sub
mov
jge
adc
xchg
xchg
cmps
sub
sbb
fidivr
mov
or
pop
jo
repz
jbe
(bad)
(bad)
push
pop
es
cmps
add
fmul
add
aad
pop
dec
xor
mov
movs
out
pop
jl
push
pop
adc
hlt
imul
push
icebp
addr16
(bad)
xor
sbb
(bad)
ds
mov
mov
jg
pop
and
fcmove
in
push
push
jo
fdiv
js
pop
adc
aam
or
cmc
(bad)
push
dec
pop
push
dec
test
je
adc
fidiv
cmp
(bad)
push
lahf
inc
inc
int
imul
(bad)
jmp
pop
or
mov
adc
icebp
mov
xchg
push
mov
cli
add
add
fdivp
popa
xchg
loop
xchg
pop
adc
jbe
enter
jo
icebp
xchg
sub
int3
hlt
pop
mov
jo
loopne
mov
sub
mov
add
cs
clc
jge
mov
cmp
call
mov
retf
sub
push
push
pushf
and
jle
push
jmp
into
push
xor
dec
mov
aam
push
js
mov
jnp
xor
and
xor
jo
or
sbb
add
sub
(bad)
push
int
sub
jmp
xchg
imul
call
(bad)
outs
mov
xor
jge
movs
dec
fidivr
push
dec
inc
xchg
out
xchg
cmp
in
rcr
pop
stos
(bad)
mov
adc
inc
call
pop
mov
stc
aas
ret
lea
popa
outs
inc
mov
enter
add
sbb
lds
mov
and
arpl
dec
adc
retf
sahf
jmp
pop
pop
jo
nop
jmp
sbb
inc
rcr
jns
outs
test
in
dec
inc
call
mov
xor
adc
test
xor
pop
sub
or
icebp
dec
aam
jmp
rol
pop
mov
cmps
clc
ret
jo
sbb
cmp
pop
js
repz
lahf
mov
cwde
in
push
jne
stos
add
ror
mov
inc
add
scas
jge
into
pop
cld
jl
cmps
pop
mov
pop
leave
mov
enter
pop
mov
cdq
pop
pop
aas
or
and
mov
cmps
out
out
sysexit
stos
imul
mov
int3
ins
imul
jge
(bad)
cmc
cdq
shl
in
jp
leave
cmp
mov
cmp
push
enter
mov
and
imul
mov
icebp
inc
das
pusha
lock
int
mov
jl
sbb
dec
neg
push
mov
fisttp
and
sbb
lods
mov
sub
jo
adc
jbe
sub
push
cli
inc
sbb
lahf
xchg
ret
(bad)
adc
scas
mov
push
aad
and
imul
adc
inc
push
sbb
fwait
rol
xor
mov
sbb
push
mov
jle
enter
scas
mov
add
or
in
(bad)
jmp
mov
(bad)
xor
xor
mov
sub
sahf
pop
out
les
scas
mov
int
xchg
xlat
outs
nop
mov
jmp
dec
pop
pop
lahf
cwde
mov
mov
add
inc
js
cmc
and
xchg
xchg
adc
dec
mov
sub
push
(bad)
loop
dec
loope
push
bound
xchg
shl
cmp
adc
add
mov
stos
pop
mov
movs
push
inc
repnz
or
push
inc
call
jg
mov
jmp
mov
gs
pop
popf
enter
lods
hlt
xchg
pop
add
sub
ficom
pop
int
(bad)
sub
jmp
aaa
stos
cld
cmp
mov
mov
push
push
scas
mov
xor
dec
shr
adc
push
into
xlat
jecxz
xchg
fisttp
jle
xor
cdq
ret
mov
shl
jns
pop
xchg
stc
mov
xor
out
jne
pop
xor
add
mov
sbb
mov
(bad)
dec
adc
adc
adc
or
adc
(bad)
lock
mov
movs
(bad)
into
scas
inc
xchg
push
ja
mov
cmc
dec
push
hlt
repz
xchg
mov
lahf
adc
mov
sahf
repnz
add
enter
fadd
jo
mov
cwde
int3
retf
movs
les
ins
mov
mov
push
ins
jne
add
pop
int3
mov
repnz
sbb
aad
jne
in
test
(bad)
mov
ret
or
and
xor
xchg
shl
mov
pop
push
pop
in
jbe
dec
js
clc
cmp
sub
mov
xchg
push
or
mov
clc
loop
xor
in
data16
sub
xchg
stos
test
push
ins
sbb
or
pop
xchg
sub
inc
fiadd
fmul
inc
daa
es
sub
dec
xchg
xchg
sub
push
fld
jns
sbb
push
sbb
loopne
sahf
out
xor
jns
lahf
retf
ja
test
mov
xor
in
cmp
adc
out
rcl
push
cld
lea
or
fnstsw
add
pop
sbb
in
or
jnp
lods
jl
(bad)
cmp
mov
ins
xchg
dec
jecxz
xchg
sub
movs
movs
call
jb
mov
out
sti
and
mov
or
mov
jp
sbb
jo
and
mov
(bad)
xor
mov
ficom
cmps
sar
inc
ja
adc
jmp
(bad)
shl
sti
pop
in
and
dec
mov
scas
test
cld
adc
push
(bad)
fild
xor
es
pop
jno
jg
mov
call
jns
add
das
dec
cmp
sub
xor
hlt
nop
inc
in
xchg
cmp
stos
and
scas
popa
sbb
loopne
sub
jmp
and
dec
mov
jb
add
jb
xlat
or
stos
sbb
adc
in
arpl
popf
mov
jb
addr16
lea
sbb
jae
xchg
lahf
adc
sbb
sub
(bad)
test
lock
lahf
dec
inc
sar
mov
and
cmps
int
enter
jae
or
cwde
hlt
push
pusha
mov
pusha
loop
test
sbb
inc
cmps
cmp
and
jmp
hlt
ins
and
and
pop
push
cmc
or
daa
and
and
cmc
mov
std
push
in
pop
push
mov
inc
div
dec
nop
sub
mov
xor
jge
and
or
shl
pop
loop
out
jne
sti
outs
jp
test
or
fbld
push
lahf
jle
lea
bound
cmp
xchg
add
pusha
fisubr
sbb
push
mov
xor
in
cwde
jp
sub
inc
scas
sbb
cdq
dec
mov
loope
mov
fcmovu
ss
gs
rcl
ins
dec
xor
ja
outs
cmp
pop
gs
add
test
jnp
mov
(bad)
jns
ret
add
cdq
mov
out
xchg
cmps
shl
or
or
mov
and
(bad)
je
mov
sahf
mov
out
ja
outs
or
pop
pop
push
pop
add
xchg
popf
dec
cmp
push
iret
adc
addr16
outs
inc
dec
pop
mov
inc
jl
out
fwait
mov
in
in
ret
lock
cmp
or
ror
push
mov
push
mov
ret
mov
cmp
inc
into
ret
stos
inc
xchg
fild
sti
iret
or
adc
aam
popa
dec
mov
push
pop
mov
jns
shl
xchg
fst
in
in
pop
out
imul
sub
or
push
das
in
out
mov
pop
mov
sub
pusha
or
or
jp
shl
inc
out
call
jb
sub
(bad)
xchg
vpcmpeqd
fistp
push
push
pop
push
pusha
mov
inc
pop
cmp
ficomp
push
hlt
pop
sti
sub
adc
inc
pop
mov
test
clc
sbb
sub
mov
test
jnp
mov
push
cmp
xchg
or
pushf
movs
int
ret
and
xor
push
dec
mov
enter
retf
out
imul
scas
push
dec
push
cld
mov
jmp
add
mov
xchg
ins
(bad)
pushf
out
inc
cmps
ins
ret
lds
mov
aad
mov
sub
jae
or
or
fisub
movzx
pop
ret
call
xchg
jg
inc
pop
scas
outs
mov
nop
dec
nop
adc
or
push
pop
data16
imul
add
push
jb
jge
hlt
fsub
jl
fmul
test
data16
or
and
jo
sti
add
push
dec
mov
shl
sbb
inc
push
jne
scas
inc
xchg
sbb
(bad)
stos
mov
push
push
sub
in
mov
stos
movs
jo
int
cmps
lods
clc
std
adc
std
in
sub
ret
leave
pop
imul
std
push
imul
(bad)
xchg
xchg
retf
popa
pop
icebp
arpl
mov
dec
inc
jb
lods
push
stc
jae
xchg
mov
xchg
cdq
ja
pop
xlat
sbb
pop
fiadd
ficom
dec
inc
outs
xchg
cmp
pop
fstp
lock
xlat
inc
(bad)
sbb
fld
lock
es
in
mov
add
add
add
mov
dec
xchg
jnp
add
mov
mov
shr
cmp
inc
rcl
jmp
dec
and
gs
mov
sub
nop
or
cmp
in
ja
out
xchg
cmp
fwait
out
jae
call
mov
push
xchg
dec
cmp
int
push
xor
fs
je
and
and
stos
jb
mov
sub
punpcklwd
or
push
add
repz
fwait
jmp
and
or
pop
loop
sub
mov
pop
cmp
test
mov
or
mov
xor
and
into
call
repnz
sub
fchs
rcl
ss
arpl
loopne
cmp
data16
dec
dec
imul
mov
or
hlt
aas
inc
sbb
retf
add
jbe
xlat
leave
push
dec
cmp
xor
shl
stos
xchg
sbb
and
inc
in
mov
(bad)
icebp
dec
and
stc
data16
pop
popa
or
sub
iret
cmp
cli
jae
ds
jmp
fisttp
mov
jo
test
mov
pop
in
push
fidiv
dec
jg
pusha
sti
or
xchg
stos
mov
pop
cmp
mov
fcomp
cli
inc
movs
aas
push
movs
es
lock
pop
sbb
enter
add
test
mov
mov
scas
adc
cld
es
pop
js
call
pop
jne
repnz
and
mov
ins
test
out
mov
loopne
or
sahf
mov
test
je
cmp
cmc
cmp
js
in
adc
inc
and
jae
cmp
mov
data16
push
or
fisubr
cmp
mov
inc
cli
test
sub
and
sahf
mov
add
cwde
movs
and
xor
dec
inc
inc
call
lods
dec
(bad)
cmp
inc
fistp
(bad)
pop
out
mov
dec
dec
popa
sub
jg
adc
loopne
push
mov
inc
cmp
jmp
addr16
pop
jb
xor
dec
(bad)
push
jno
ffreep
push
ret
jmp
call
(bad)
mov
sub
retf
test
mov
sub
movs
or
in
pop
jg
add
or
in
cmp
add
pop
push
(bad)
mov
(bad)
iret
dec
das
push
ret
fdiv
mov
bnd
imul
sbb
adc
icebp
(bad)
or
xor
fimul
adc
not
retf
xor
(bad)
dec
pusha
stos
int
mov
scas
nop
ret
cmp
(bad)
outs
mov
ror
pop
leave
jp
in
mov
xchg
mov
xchg
push
scas
pusha
fdivr
adc
lods
pushf
add
jecxz
mov
rcr
xor
ret
jmp
mov
idiv
aaa
xor
xlat
mov
pop
sahf
int3
push
jl
aas
mov
or
imul
sub
ss
mov
sub
mov
imul
fwait
jo
or
fwait
push
sbb
nop
xor
add
pop
sub
mov
stos
lds
popf
xor
jns
pmaxsw
jge
call
xchg
dec
cmps
and
in
jb
mov
movs
inc
test
cmps
or
(bad)
hlt
cmp
stos
xor
and
jo
prefetchnta
cli
cmps
ret
mov
sti
sti
stos
stos
ja
push
mov
(bad)
jnp
stc
cmp
ret
jae
jbe
xor
test
inc
fdiv
or
mov
pushf
in
cld
pop
push
xor
repnz
xor
mov
das
ins
or
adc
mov
sub
fild
mov
loopne
jae
cmp
nop
xchg
mov
rol
cmp
(bad)
xor
sbb
xchg
mov
arpl
sbb
sar
stos
rol
dec
inc
xor
lods
sub
or
jmp
pop
dec
arpl
imul
mov
add
or
fldenv
xlat
mov
(bad)
sti
aas
in
xor
shr
add
into
mov
jl
(bad)
scas
pop
fs
xchg
cwde
test
push
lea
je
jbe
js
adc
mov
icebp
in
dec
xor
xchg
mov
mov
inc
int
jl
inc
push
mov
sbb
stc
cwde
mov
adc
imul
push
add
mov
movs
in
mov
pop
in
scas
adc
mov
cld
ret
dec
xchg
xor
fldenv
push
iret
push
fldcw
xchg
dec
aas
ret
jp
pop
and
cmp
push
push
push
mov
pop
int
fcom
jge
add
call
scas
enter
pop
sti
xor
or
mov
sub
and
lock
jae
rcr
push
popa
or
mov
lock
les
aad
xor
(bad)
or
or
inc
add
dec
pop
and
cmp
jo
movs
add
jge
xor
in
dec
stc
mov
mov
push
lods
adc
fisttp
or
(bad)
cld
retf
dec
sbb
push
xor
cmp
pusha
cmp
dec
xlat
xlat
mov
mov
ds
inc
clc
sahf
jns
xchg
xor
lods
(bad)
xchg
dec
cmp
push
pop
stos
mov
div
cmp
call
rol
movs
shl
xor
dec
leave
ins
or
dec
test
push
or
fst
mov
leave
das
jp
jle
int3
push
sbb
mov
rcl
mov
aas
retf
jge
mov
mov
inc
push
loop
iret
cmp
and
adc
sar
arpl
inc
repnz
add
push
push
and
mov
sbb
imul
(bad)
iret
test
les
dec
shl
addr16
or
ins
mov
xlat
bound
(bad)
std
fcmovnbe
loop
ficomp
inc
scas
mov
aam
pop
test
cli
fwait
mov
cmp
fisttp
and
jmp
or
jo
js
aam
cwde
push
jns
inc
popa
mov
jbe
push
xlat
bswap
data16
push
out
mov
bound
inc
xlat
fcmovnbe
mov
add
cmps
push
jnp
mov
daa
xchg
popf
sub
outs
pushf
push
add
aam
sub
js
lds
mov
out
movs
jae
push
dec
mov
je
fld
add
pusha
imul
cmps
mov
fldz
inc
les
daa
xchg
call
call
and
jle
mov
pop
and
inc
push
jnp
dec
cmps
(bad)
pushf
psllw
retf
push
mov
(bad)
xor
enter
push
mov
sbb
sbb
inc
adc
and
xor
loopne
pop
in
xchg
and
or
dec
mov
and
outs
hlt
enter
mov
mov
xchg
push
shl
inc
(bad)
jo
push
pop
cwde
inc
or
hlt
push
add
gs
pop
xchg
xor
fs
stos
outs
(bad)
xchg
adc
sbb
jno
xchg
scas
outs
popa
movs
xchg
(bad)
mov
fistp
or
aad
cmp
scas
and
cmp
dec
clc
mov
xchg
cwde
adc
les
and
cmp
pushf
and
mov
jge
rcl
in
xchg
or
fisub
adc
mov
scas
push
mov
lea
pushf
enter
es
xchg
shr
mov
movs
not
push
sub
jmp
mov
mov
mov
jns
xchg
pusha
push
or
arpl
xchg
push
mov
xchg
addr16
call
push
shr
in
inc
or
aaa
stos
mov
fild
fs
int
hlt
pop
dec
xchg
mov
mov
or
mov
adc
inc
sbb
aaa
aam
clc
dec
das
pop
inc
push
fistp
mov
pushf
add
sub
sub
xchg
sbb
inc
mov
or
and
rcl
cli
sar
jp
enter
aaa
or
sar
xchg
pop
xchg
add
iret
pop
cmp
inc
(bad)
sub
loopne
js
cli
mov
mov
xor
dec
jo
fsub
dec
jae
stc
xor
pushf
inc
inc
add
faddp
mov
mov
push
out
cmp
jp
xchg
add
jno
fadd
mov
mov
mov
add
fcomp
hlt
pop
std
loopne
and
mov
mov
ret
fwait
fwait
sub
jge
(bad)
jnp
scas
movs
mov
mov
mov
mov
pop
pop
push
out
fimul
pop
not
(bad)
xlat
push
xchg
mov
pop
rcr
lahf
jnp
or
imul
inc
mov
jbe
scas
es
fwait
and
es
sub
jbe
sar
sub
rol
xor
in
cmp
mov
aas
out
mov
inc
sbb
aaa
stc
jne
rol
pop
pusha
call
sbb
xor
sub
jl
dec
or
adc
mov
aas
mov
inc
inc
stc
push
fidiv
cmp
mov
or
push
(bad)
and
xor
xchg
sbb
bound
ret
jp
mov
int
push
scas
aaa
add
fldcw
and
mov
daa
and
ror
ret
mov
mov
cdq
in
out
mov
movups
mov
mov
loop
imul
xchg
inc
stos
and
cld
mov
jmp
mov
rol
jae
adc
js
mov
add
call
out
adc
movs
retf
mov
es
(bad)
cmps
adc
or
dec
push
xchg
mov
jle
in
mov
(bad)
fld
pop
sbb
inc
add
adc
aad
jne
push
xlat
push
add
inc
lock
sbb
lahf
pop
fadd
jmp
jnp
add
jp
les
fs
mov
sub
push
mov
inc
push
repnz
push
cmps
jo
(bad)
aad
rcl
jnp
rcl
ins
sub
in
mov
jmp
data16
dec
inc
mov
(bad)
fiadd
or
dec
mov
int3
cld
pop
mov
das
stos
jmp
push
sub
jle
pop
inc
add
test
fwait
dec
push
cmc
call
shl
repz
mov
cs
dec
cmps
mov
xor
fistp
dec
retf
(bad)
nop
mov
repz
jg
mov
sbb
mov
(bad)
mov
sbb
pop
adc
les
sub
or
mov
scas
xor
es
inc
fistp
cli
lods
mov
out
retf
or
jae
jle
mov
test
fwait
mov
cwde
lock
lds
inc
cmp
jg
xlat
lods
iret
test
ret
lods
mov
clc
int
lock
add
mov
adc
imul
inc
pmaxub
sahf
jae
jl
imul
and
call
pop
imul
inc
push
stos
pop
leave
jmp
pop
fwait
sub
xchg
mov
inc
jne
pop
es
(bad)
dec
mov
fbstp
jl
loope
ret
loopne
pop
adc
cmp
push
(bad)
jmp
into
mov
mov
dec
xchg
add
outs
push
cmps
repnz
push
call
mov
inc
cmp
jg
mov
stc
test
jae
repnz
dec
sub
xor
or
pop
jle
add
sti
mov
mov
xor
mov
push
in
dec
test
mov
jg
or
mov
inc
mov
(bad)
ficomp
mov
mov
pop
lock
out
cmp
lea
dec
and
aam
call
mov
xor
push
jb
push
idiv
mov
inc
nop
fldenv
pop
push
jmp
rcr
mov
dec
pop
xor
aas
out
sar
mov
arpl
mov
pop
sub
push
mov
ret
imul
call
retf
push
jo
dec
jp
cmps
fnstenv
outs
lods
jno
cmp
adc
or
xlat
out
or
push
xchg
jp
(bad)
mov
jp
xor
and
push
mov
cmp
mov
dec
js
test
aaa
inc
iret
dec
mov
cmp
add
adc
jecxz
shl
xchg
sub
or
xchg
mov
or
push
mov
repnz
stos
scas
les
aas
sti
mov
pop
mov
and
push
jbe
push
ss
shr
test
loope
inc
inc
push
cmc
mov
inc
pop
cmp
add
and
mov
cmp
push
push
sub
popf
xor
ror
outs
mov
jl
fld
and
mov
inc
iret
inc
iret
pop
dec
cli
outs
or
in
in
pop
test
sub
push
mov
outs
(bad)
pop
(bad)
adc
retf
mov
xchg
jp
pop
adc
push
xchg
mov
mov
js
loop
fidivr
adc
mov
cwde
ret
in
(bad)
adc
mov
inc
pushfw
ss
dec
jb
inc
retf
push
movs
fdivr
pop
xchg
scas
add
movs
sub
nop
idiv
cs
or
or
sub
and
call
test
(bad)
cmps
cmps
loopne
jae
out
pusha
pop
pop
mov
mul
or
mov
inc
xchg
cmp
push
xor
or
inc
test
pop
inc
jns
jnp
and
dec
sub
dec
lods
xchg
xchg
push
sub
pusha
aad
retf
es
hlt
pop
jg
retf
inc
fdiv
call
ins
(bad)
(bad)
xor
pop
lods
pop
inc
xchg
mov
jecxz
mov
fstp
retf
xchg
in
dec
jbe
sbb
daa
adc
movs
mov
test
jb
ins
retf
mov
add
stc
dec
adc
ja
sub
cmp
fsub
(bad)
test
cmp
mov
xchg
shl
dec
daa
pop
movs
loope
pop
pop
add
fcomp
lock
xchg
iret
mov
(bad)
bound
mov
xchg
pop
inc
mov
and
inc
add
dec
aaa
(bad)
mov
aaa
xor
pushf
xchg
cmp
fstp
cmp
pop
and
call
imul
pop
mov
(bad)
inc
fidiv
jmp
jno
bound
mov
xchg
(bad)
jne
xchg
out
xor
mov
xchg
movs
or
pop
cmp
fisttp
fsubr
or
cmp
in
pop
xchg
clc
or
stos
jb
fwait
pushf
mov
cmp
cmp
mov
cmc
test
fdivr
popa
(bad)
in
mov
pop
stc
ins
mov
stc
jp
lods
push
jmp
xor
std
xor
or
loop
sbb
int
mov
push
mov
cmp
lods
pop
add
lods
(bad)
dec
lock
test
jmp
movs
xor
into
fwait
jne
aas
jbe
xchg
mov
push
pushf
cmp
test
lods
loop
int
sub
sub
ins
ret
mov
sti
es
jb
ret
imul
sub
test
jb
sahf
gs
or
inc
add
in
lods
sub
sar
movs
cmps
push
lahf
push
aaa
fistp
rcr
stos
aam
and
jo
jae
clc
rcl
aaa
xor
or
cmp
dec
(bad)
enter
rcr
push
fidivr
mov
push
mov
mov
fld
mov
mov
es
jge
lods
fcomip
jle
neg
cmp
cmps
movs
jne
adc
dec
int
pop
scas
cmp
dec
inc
dec
out
dec
(bad)
or
or
stos
lock
and
(bad)
mov
mov
lods
cdq
(bad)
or
scas
xor
movs
inc
nop
sbb
iret
stos
xchg
sub
scas
iret
test
cdq
rcr
sbb
sub
mov
test
in
addr16
mov
sub
clc
push
aad
mov
cmps
xor
bound
test
sbb
xchg
jp
cld
dec
pop
aaa
mov
add
jle
jo
jbe
sub
(bad)
or
mov
shl
xor
addr16
cmc
push
dec
scas
sbb
add
imul
mov
xor
sti
in
out
xchg
in
pop
xchg
cmp
nop
pop
add
or
xor
sbb
or
cmps
or
mov
aam
or
loop
jo
push
pop
sahf
lds
je
mov
sbb
jae
cmp
pop
jne
imul
dec
jb
ins
mov
inc
(bad)
cmp
xchg
test
and
cmc
xor
call
inc
cmp
mov
sbb
lock
rol
pop
push
bound
mov
test
mov
xchg
movs
(bad)
xor
cmp
mov
fldenv
xor
sbb
sub
sbb
or
mov
int3
xlat
ret
sub
dec
leave
adc
add
cmp
dec
test
(bad)
stc
nop
or
test
push
add
dec
xor
xchg
and
jnp
xchg
mov
add
(bad)
out
cmp
jmp
or
add
in
inc
push
aad
jnp
jnp
pop
push
int
pop
pop
shl
sbb
xchg
nop
xor
mov
cmp
sbb
stc
sti
jp
or
push
mov
xlat
retf
push
dec
push
jmp
add
push
fisttp
dec
(bad)
adc
imul
push
mov
cli
sbb
xor
sub
jle
sti
mov
in
xchg
dec
(bad)
in
daa
xlat
xchg
shr
cmp
pushf
(bad)
sub
fisttp
xor
xor
and
jg
mov
pop
adc
mov
xor
xchg
mov
push
pop
cli
cld
test
push
test
outs
push
pop
fsub
mov
std
sub
sbb
cmps
test
push
jno
(bad)
sub
xchg
into
sbb
mov
in
gs
xor
ins
and
int
adc
dec
loope
mov
shl
sti
ins
pusha
adc
cmp
jmp
in
or
hlt
sbb
popf
dec
xor
push
shl
ret
jecxz
and
jae
mov
mov
sub
xor
adc
dec
fist
or
inc
sbb
pop
cmp
adc
mov
dec
mov
xor
out
enter
pop
jg
fnsave
(bad)
cdq
jmp
aad
sub
pop
adc
sub
xchg
cmps
popf
mov
inc
sbb
cld
fbstp
scas
lods
movs
adc
mov
psraw
add
out
lods
jecxz
popa
xchg
jmp
sub
pop
test
or
pop
cs
hlt
mov
xchg
sbb
and
fdivr
sbb
lea
adc
jns
lods
rcl
icebp
imul
adc
cli
scas
pop
cmp
mov
idiv
sar
dec
and
jle
enter
dec
pop
mov
jmp
jp
gs
mov
pop
int
pop
addr16
push
cmc
cdq
cmc
sub
in
pushf
ret
out
fs
in
mov
rol
adc
stos
mov
outs
fcomp
push
cmp
stos
jae
mov
add
sti
aaa
(bad)
lods
mov
add
cdq
sbb
and
mov
cmp
call
jge
jmp
push
xor
lahf
pop
inc
fcom
shr
pop
xor
lods
sar
cs
or
jnp
repnz
iret
push
fld
addr16
cli
and
jae
pop
mov
lds
pop
or
lea
inc
push
or
pushf
nop
mov
push
jl
call
xor
aaa
adc
sub
(bad)
rcl
mov
(bad)
lods
push
repnz
xchg
mov
outs
or
inc
sbb
rcl
inc
into
(bad)
aas
pushf
push
fimul
lea
retf
adc
xchg
shr
int
cwde
test
(bad)
jae
pop
bound
push
mov
mov
sub
mov
adc
cmc
mov
sub
xchg
push
fild
dec
cdq
daa
out
data16
mov
lods
mov
sbb
mov
xor
adc
pusha
stc
dec
xchg
add
ret
and
jge
dec
in
cs
out
jg
pop
sub
sti
mov
mov
test
jmp
and
lock
xchg
add
cmp
fstp
scas
(bad)
repz
sbb
mov
jmp
test
cmp
rcl
push
(bad)
rep
ins
add
ins
sbb
xor
mov
daa
mov
xchg
outs
inc
cmp
lods
sbb
ror
add
sbb
fist
iret
stos
mov
pop
addr16
and
std
or
pop
pop
into
inc
pusha
mov
lock
div
outs
sub
mov
out
pusha
repnz
iret
(bad)
push
fisttp
and
sub
jne
movs
adc
and
je
cli
add
lods
jns
push
xchg
fsubr
xor
aam
fstp
stos
and
mov
loope
popaw
mov
sbb
inc
dec
mov
fimul
stc
into
cli
sbb
adc
rcr
hlt
and
add
scas
add
das
ins
pop
cwde
jno
shr
call
sbb
or
sub
xchg
mov
mov
bnd
in
sbb
or
sbb
fbstp
movs
or
or
jne
xchg
sar
test
(bad)
mov
fwait
movs
repnz
(bad)
dec
icebp
mov
je
push
and
pusha
push
jg
mov
inc
aaa
mov
sub
imul
xchg
mov
add
push
mov
into
stc
jb
arpl
lock
mov
push
aaa
mov
rcr
sub
and
jbe
or
jecxz
inc
aad
add
mov
aad
mov
test
repnz
xor
loope
pushf
xchg
jecxz
mov
pop
dec
test
mov
sub
in
xchg
ss
sub
in
clc
inc
bound
jne
or
adc
pop
addr16
push
jp
or
inc
in
xchg
jle
sbb
mov
cmps
and
mov
fs
sbb
imul
popf
movs
mov
inc
mov
movs
push
push
and
loopne
test
push
lahf
xchg
mov
xchg
xor
sbb
sbb
retf
push
fistp
add
jnp
adc
xlat
and
cs
mov
jge
enter
loopne
fmul
fst
movs
aad
test
adc
jo
xor
push
inc
fsub
cmp
cmp
jmp
inc
cmp
add
xor
mov
fcmovnu
cmp
push
push
in
pop
push
and
loopne
xor
sbb
jo
loope
sbb
jle
cmps
inc
cmp
pop
adc
ret
pop
sub
adc
in
shl
bound
fmul
sub
inc
jb
addr16
adc
sub
cwde
add
mov
cwde
int3
scas
ret
jl
nop
out
push
mov
ss
mov
jne
and
data16
mov
add
sti
iret
add
stos
in
push
cmp
jmp
dec
dec
inc
and
pusha
into
add
pop
stos
fwait
xchg
outs
outs
lods
inc
pop
lds
fnstsw
inc
jmp
mov
jb
ds
adc
fcom
push
fstp
ret
sbb
test
sbb
pop
mov
(bad)
fcomi
mov
es
sbb
js
push
or
xchg
push
repnz
outs
pop
pop
int
bswap
mov
out
fst
shl
cdq
xchg
leave
pmulhuw
adc
dec
ins
in
ret
rcl
test
nop
push
and
out
push
push
ss
jnp
in
cs
mov
fistp
lods
xchg
repz
mov
xchg
xchg
inc
rcr
and
bound
fist
xchg
cmp
mov
sbb
dec
cmp
stos
and
pop
mov
movs
cli
outs
push
push
iret
pop
test
jo
das
push
cmc
xchg
inc
popf
xchg
test
push
dec
pop
xor
sub
xor
adc
cdq
popf
add
les
(bad)
jno
mov
aas
std
fcmovb
(bad)
into
inc
jge
mov
jecxz
in
out
arpl
aas
in
cmp
ret
scas
clc
fidivr
fdivp
mov
sti
(bad)
and
cwde
pop
mov
push
dec
les
icebp
and
xchg
add
out
add
int3
or
jno
pop
xchg
mov
lods
or
outs
and
movs
out
push
fbld
add
pusha
outs
adc
cmc
test
xor
xor
pop
pop
pop
stos
iret
ja
cld
ret
xchg
sbb
cdq
inc
adc
pop
(bad)
fdiv
adc
add
fst
stc
pop
inc
iret
js
xchg
mov
stos
jge
or
repz
popf
sbb
mov
cdq
and
cdq
stc
and
arpl
(bad)
push
in
push
je
sbb
fs
arpl
add
data16
sub
mov
mov
add
adc
addr16
dec
out
or
sar
hlt
shl
ja
pusha
hlt
mov
shl
cwde
jge
ins
int
adc
lahf
out
add
jecxz
daa
into
sub
retf
adc
in
push
add
out
sahf
mov
and
and
(bad)
push
xchg
sub
jl
ret
push
fist
int3
pop
sbb
xlat
cmp
stc
es
or
outs
and
jae
rol
pop
imul
fild
mov
ins
stos
movs
or
mov
cmc
test
mov
scas
pop
pop
jne
pop
jmp
push
rol
jmp
xchg
cmp
ins
add
test
dec
aas
add
lahf
inc
aam
inc
jb
mov
cmp
call
mov
bound
ret
mov
xchg
add
xchg
(bad)
jae
pop
imul
loop
xchg
ficom
adc
pop
adc
sbb
int3
dec
and
rcl
inc
fidiv
adc
js
jne
cmps
call
out
mov
mov
sbb
in
aaa
or
mov
lods
sub
cli
popf
ins
(bad)
lock
mov
es
rcr
xchg
test
out
jmp
loop
fimul
mov
dec
fsubr
lds
push
jle
test
lds
adc
dec
(bad)
call
sub
mov
dec
mov
xlat
xchg
ficomp
cmp
cmp
push
xor
adc
add
idiv
shl
cmc
jl
in
les
ror
out
add
sbb
ret
adc
push
sub
repz
adc
(bad)
jo
test
add
pop
add
mov
iret
sbb
call
push
mov
fadd
rol
jl
cli
imul
push
dec
test
jecxz
stos
div
or
mov
outs
cmps
ins
cwde
icebp
aam
stos
mov
ja
cwde
leave
mov
mov
(bad)
push
inc
add
jnp
in
shl
mov
jb
pop
in
int3
pusha
pop
lods
cmp
out
cmps
push
sub
loope
clc
jmp
add
inc
push
in
fwait
inc
(bad)
add
xchg
shl
xor
jg
fldenv
mov
push
retf
in
sar
lea
cdq
outs
mov
pop
cld
icebp
movs
ret
or
mov
dec
shl
jo
lea
dec
sbb
xchg
gs
mov
cld
push
mov
pop
rcl
push
hlt
movs
fwait
add
in
adc
jmp
pop
mov
sbb
std
dec
(bad)
mov
xchg
pop
mov
sahf
or
imul
dec
sbb
jl
cmps
call
mov
jl
aam
mov
fbld
cli
sbb
ret
push
rcl
loopne
adc
int3
mov
sub
or
cmp
imul
pop
dec
add
inc
fcom
inc
sub
jns
jns
fucomi
ss
push
mov
cmp
push
pusha
mov
retf
enter
pop
test
push
js
cmp
je
lods
cdq
dec
loop
stc
fst
cs
imul
test
test
adc
sbb
(bad)
ficom
aad
daa
or
faddp
sbb
mov
or
pop
movs
test
imul
lods
das
daa
icebp
ja
loope
pop
pop
ret
sbb
xchg
sbb
lahf
lahf
push
gs
adc
xchg
in
rol
adc
jp
fwait
mov
add
fmul
int3
jae
mov
movs
jb
jo
std
rep
mov
push
cmp
loop
cmp
mov
fistp
sbb
ret
or
dec
dec
in
mov
and
inc
pushf
jmp
fmul
test
dec
jle
jge
cmp
jmp
in
xor
jno
(bad)
fldcw
pushf
cs
cmp
sahf
push
push
xor
ins
scas
and
jbe
(bad)
aas
repz
and
xchg
clc
imul
test
cmp
aam
inc
adc
mov
push
jo
pushf
push
je
push
xor
dec
xor
add
or
in
(bad)
ret
lods
mov
stos
repnz
call
ja
int
(bad)
inc
fcomp
push
or
in
repz
daa
push
sub
jns
cmps
popa
std
or
test
popf
mov
leave
sub
pop
hlt
adc
mov
inc
dec
sti
mov
lods
je
and
cmp
mov
add
and
repz
loope
rcr
or
or
fs
jns
and
or
jns
mov
fld
jns
data16
cdq
fs
in
sub
xor
adc
add
clc
loopne
pop
cmp
mov
jbe
push
cli
repnz
sub
out
sub
pop
mov
iret
out
sbb
fadd
jnp
and
and
stc
xor
jg
neg
push
xor
stc
push
hlt
fidiv
ins
out
call
cmp
jmp
out
push
push
xchg
cmp
data16
sti
jmp
pop
mov
enter
loop
es
pop
(bad)
pop
nop
(bad)
push
stos
jl
ffreep
fld
test
and
cli
shl
je
push
imul
popa
xchg
mov
(bad)
stos
add
call
retf
mov
(bad)
xchg
sub
pop
shl
cwde
sub
jnp
sbb
(bad)
mov
test
cld
adc
and
mov
pop
sbb
retf
xor
push
jns
pop
sub
lock
push
retf
jo
adc
gs
pop
jbe
loope
les
jmp
jbe
rol
pop
cmp
push
sbb
test
das
push
jecxz
(bad)
and
popf
sti
cmps
lods
mov
jae
push
jecxz
add
cmps
in
cmp
ja
mul
mov
fwait
push
ins
add
jbe
jb
fcmovu
sbb
(bad)
push
pusha
scas
mov
xchg
nop
sbb
mov
push
out
call
mov
aas
fmul
outs
fs
scas
xchg
sahf
inc
sbb
fs
xchg
dec
and
pop
jo
fincstp
lock
jae
jb
data16
xchg
push
pop
arpl
ins
daa
and
fstp
sbb
test
and
cmp
(bad)
mov
pop
jne
xchg
in
fs
add
lock
mov
mov
inc
in
mov
out
adc
add
adc
xchg
fucom
mov
retf
xor
call
jnp
fs
in
sbb
xor
lods
in
ins
rol
jmp
mov
aaa
int
pop
outs
out
push
dec
sub
sbb
rol
lock
pushf
iret
imul
cmc
inc
jp
cmp
dec
sbb
pop
scas
(bad)
daa
xor
clc
in
ja
mov
sahf
out
loop
xlat
mov
les
xor
ins
adc
(bad)
xor
dec
sbb
call
xor
sbb
add
add
or
jno
imul
sub
mov
cmp
setae
(bad)
or
data16
cmp
test
test
mov
mov
jmp
jp
pop
adc
xor
js
test
test
jb
and
mov
in
add
xor
das
leave
movs
dec
and
xchg
mov
ins
repz
adc
dec
jge
or
add
clc
les
icebp
fprem1
bound
push
sbb
cdq
xor
loope
cmp
mov
inc
xchg
std
sub
outs
xor
rcl
les
cmps
gs
outs
lahf
mov
mov
xchg
lock
adc
pop
mov
mov
sbb
cmp
cmp
arpl
jb
xor
daa
in
bound
leave
mov
lods
dec
das
bound
aaa
pop
ins
push
pop
mov
scas
bound
aam
(bad)
push
ror
shl
out
std
cwde
jmp
sub
push
xchg
lods
mov
lods
sahf
aam
sti
sbb
call
dec
je
and
jmp
pop
ja
movs
push
lahf
push
retf
ss
mov
lahf
rcr
sub
sar
inc
sbb
push
test
popf
jp
cmp
outs
push
xlat
and
cmps
je
inc
sti
cmps
xchg
inc
sub
pop
outs
mov
ss
mov
sti
jecxz
scas
or
push
push
inc
in
and
cmp
lock
inc
mov
mov
aas
cmps
sbb
fild
ss
(bad)
mov
das
loop
rol
jns
(bad)
idiv
ficomp
test
das
and
jg
dec
mov
mov
xchg
div
ror
inc
shr
xchg
push
jns
inc
or
nop
pop
push
ds
es
xchg
outs
pop
mov
lock
jno
iret
and
xchg
inc
xor
jle
push
adc
ins
mov
call
add
adc
or
call
fidivr
cmp
xchg
pop
cmp
mov
movs
ret
inc
jg
jmp
icebp
fmul
xor
icebp
scas
sbb
sub
lock
mov
cdq
or
out
jns
mov
fs
fwait
cli
(bad)
lock
jo
push
mov
push
dec
xor
int3
jnp
sbb
add
add
xor
pop
not
and
ror
and
mov
mov
in
add
nop
push
lods
sahf
mov
xchg
call
mov
jns
inc
pop
mov
sub
pop
repz
aaa
enter
dec
jle
ret
mov
sahf
xor
std
shr
push
add
shl
int3
imul
out
out
in
jl
pop
add
mov
mov
addr16
push
das
push
mov
scas
mov
jmp
addr16
jg
cld
add
mov
or
mov
sahf
xor
pop
dec
(bad)
dec
dec
add
ss
mov
cmps
cmps
clc
mov
leave
push
pop
xor
cmp
inc
pushf
sbb
dec
and
loopne
cld
xchg
sti
pop
les
mov
shl
jle
aas
shl
ss
dec
lods
push
rcl
pop
push
bound
sub
cli
mov
fs
fs
pop
mov
mov
es
mov
jg
jle
cli
cmc
gs
enter
loop
mov
jnp
mov
dec
jno
stos
pusha
dec
and
loopne
or
sbb
mov
pushf
jne
and
mov
test
test
aam
or
repz
adc
mov
dec
pop
jmp
adc
shl
push
test
in
mov
shl
(bad)
or
mov
and
imul
sub
cmp
(bad)
cmp
pushf
test
dec
mov
repz
mov
add
push
ds
fs
push
mov
jp
fbld
imul
(bad)
and
push
rcl
daa
scas
sub
cs
mov
pop
xor
jg
xchg
(bad)
mov
cs
aam
out
pop
xor
cmp
xchg
push
sub
push
or
pop
call
jle
ins
and
xlat
xor
loop
cld
sub
adc
popa
test
cmps
xor
sub
pop
jp
call
inc
daa
mov
loop
sahf
cli
sbb
in
sub
loope
cwde
adc
les
pop
sar
fiadd
xchg
sub
rcl
pop
loope
dec
stos
sahf
push
mov
and
xchg
imul
and
push
fimul
dec
enter
jnp
cmp
popa
push
cmp
sbb
pushf
lock
in
leave
push
imul
pop
imul
out
pop
xchg
inc
sbb
aas
jnp
aaa
push
jge
pop
xchg
cmp
jmp
sub
mov
xchg
cmps
jecxz
jb
fistp
mov
inc
push
fmul
inc
sub
adc
xchg
sub
or
in
in
or
adc
mov
and
mov
sub
xchg
add
jbe
xor
pop
das
mov
in
(bad)
mov
out
and
sbb
dec
jmp
mov
push
sbb
push
mov
(bad)
rol
cmp
imul
sub
mov
mov
and
es
xchg
or
fwait
xor
jne
cmc
outs
jbe
cmps
or
xchg
ror
test
pop
inc
into
out
movs
sbb
(bad)
into
inc
lods
mov
lods
(bad)
push
cmp
je
xor
shr
ins
xchg
retf
dec
pusha
call
jp
outs
mov
out
mov
jnp
xchg
inc
add
and
js
test
mov
fidivr
lahf
push
retf
pop
sbb
mov
adc
xchg
icebp
inc
into
stos
pop
aad
sub
and
lea
jo
int
fucom
loope
cdq
jecxz
clc
stos
out
mov
mov
jb
sub
lds
sub
rcr
push
lea
ds
test
push
sbb
stos
push
sbb
inc
popa
push
jge
push
hlt
pop
push
and
bound
cmp
jne
add
adc
push
inc
sbb
inc
jmp
add
fnstenv
adc
in
push
jbe
mov
sbb
jp
rcl
in
pop
jmp
xchg
and
or
test
call
or
xchg
dec
add
xor
pop
fxch
xchg
ds
sbb
shl
ins
movs
movs
retf
jnp
je
neg
dec
pop
gs
jmp
lock
dec
adc
es
jecxz
or
jle
pop
adc
add
adc
jmp
cdq
add
das
inc
movs
fdiv
mov
ret
pop
loop
ds
jns
or
jge
or
imul
inc
movs
xchg
mov
pop
and
aaa
int3
cli
mov
pop
add
push
or
jl
les
pop
sub
rcl
out
mov
aas
xchg
lahf
cwde
addr16
or
aas
ins
xor
pop
dec
xchg
fwait
ret
(bad)
jne
push
ffree
fisttp
inc
cli
cmps
cwde
les
es
data16
loope
ja
inc
xchg
and
jmp
xchg
mov
cmp
or
div
mov
in
outs
test
gs
xor
or
das
call
jmp
mov
(bad)
inc
test
cld
dec
xor
xchg
cmp
xchg
jb
cli
inc
sub
pop
cmp
shl
fstp
add
or
sbb
in
(bad)
fisttp
and
leave
lods
lods
xchg
mov
loopne
retf
inc
aam
bound
jbe
test
cmp
mov
out
int
jmp
sub
test
adc
lods
fidiv
test
adc
in
push
lock
cld
shl
xchg
js
loopne
xor
das
mov
bts
std
aas
xchg
in
sti
dec
scas
out
pop
lock
jmp
pop
gs
pop
sbb
test
cli
sbb
push
dec
xchg
aam
out
(bad)
adc
js
ins
mov
bnd
inc
outs
xchg
lds
enter
lahf
or
cwde
push
xchg
add
or
fwait
mov
mov
inc
lahf
adc
jae
mov
dec
mov
loop
adc
aas
cmp
loop
xor
jmp
lods
jecxz
fisttp
pop
(bad)
sti
mov
mov
repz
repz
dec
xchg
sub
adc
enter
out
xchg
mov
mov
add
xor
xchg
xchg
or
sub
popa
mov
and
inc
pop
mov
xor
(bad)
hlt
and
push
out
xchg
adc
inc
pop
jl
sbb
ss
scas
loope
int
adc
pop
lods
sub
jns
cmp
imul
daa
dec
mov
pop
rol
retf
test
call
ret
mov
add
mov
xlat
sbb
or
pop
xchg
fldcw
rol
(bad)
push
lock
xor
xor
je
fst
clc
push
into
into
imul
inc
test
xchg
or
add
sbb
fdiv
mov
ins
movs
js
xor
rol
loope
iret
repz
adc
ins
dec
ins
cmp
aas
ja
sar
xchg
daa
sbb
outs
xor
jg
lahf
push
iret
fist
pop
jns
iret
push
inc
movs
hlt
pop
outs
mov
sbb
jne
jo
or
xor
sahf
push
addr16
add
fidivr
out
pop
mov
push
fsubr
xchg
mov
jnp
cld
inc
lods
xor
(bad)
and
call
jns
outs
cmp
inc
sub
dec
pop
scas
pop
test
and
into
cld
je
arpl
fwait
aam
or
mov
ret
and
das
cld
stos
stos
and
mov
cmp
adc
pop
pop
push
in
pop
mov
out
lea
or
loope
or
dec
or
cmp
mov
mov
mov
loopne
das
xor
xor
xor
or
aaa
and
pop
(bad)
retf
xor
xor
jp
fstp
adc
ror
xchg
inc
les
cli
cmp
xlat
call
pop
outs
sub
out
sar
jmp
jne
mov
pop
ror
neg
movs
aaa
(bad)
fsubr
cmp
mov
add
and
jbe
mov
fcomp
mov
rcl
inc
lahf
xor
xchg
add
push
mov
push
inc
ins
pop
std
inc
mov
(bad)
sahf
jg
mov
rcr
call
mov
cmp
loopne
jl
jbe
retf
push
inc
fdiv
rcl
or
popf
jns
sbb
sbb
jmp
pop
mov
bound
push
mov
and
dec
pop
sbb
fnstsw
jnp
out
arpl
sub
lock
and
(bad)
in
stos
fs
and
shr
cmps
mov
neg
sti
xchg
pop
push
fsub
push
push
inc
sub
push
and
ja
(bad)
out
les
imul
ror
mov
aas
ins
adc
call
stos
fadd
cmps
push
dec
(bad)
out
jno
sbb
or
sbb
cld
jb
mov
sub
adc
outs
dec
in
outs
leave
ds
jns
dec
out
in
rol
sti
jmp
inc
ret
outs
daa
jbe
(bad)
sbb
out
pop
xchg
out
or
jb
mov
and
call
mov
aad
sub
push
adc
gs
leave
xchg
push
or
cmp
jo
(bad)
xor
push
sub
stos
or
add
loop
jns
out
xor
arpl
into
or
push
xchg
dec
(bad)
xor
leave
aaa
add
and
dec
jno
cmc
mov
jl
adc
and
mov
nop
push
jbe
pinsrw
jle
call
ret
jo
fcomi
ins
fwait
dec
sbb
pushf
add
push
jecxz
mov
arpl
adc
push
add
ds
sub
push
cld
sbb
pop
sar
adc
and
and
mov
into
dec
inc
lods
cmp
xchg
pop
arpl
mov
mov
jnp
lock
push
inc
cmc
jmp
ror
xor
and
mov
cmovp
int3
inc
inc
aad
aas
icebp
(bad)
enter
test
mov
adc
jle
(bad)
ja
push
aaa
clc
fsub
xor
xchg
add
add
pop
rol
cdq
jl
jmp
xor
sub
push
dec
sub
sbb
mov
sub
out
adc
out
dec
cmp
in
pop
inc
iret
dec
push
xor
mov
mov
sar
(bad)
mov
mov
outs
out
adc
out
mov
or
adc
adc
xlat
and
jbe
arpl
mov
xchg
sub
repnz
inc
and
push
fld
cmp
mov
mov
fisttp
test
lock
add
imul
add
pop
ins
xor
sti
scas
adc
fucomp
jp
sub
add
arpl
push
and
push
aaa
js
fsubr
scas
add
pop
pop
pushf
add
scas
loopne
push
ficom
adc
sbb
adc
pop
imul
pop
adc
push
call
mov
xchg
sub
xchg
(bad)
and
sbb
aas
xor
xchg
rcl
push
inc
add
jmp
test
or
fisttp
outs
sti
je
inc
cmp
mov
in
call
mov
adc
in
cmp
jne
xchg
xchg
int
stos
add
mov
stc
cmp
mov
mov
pusha
in
jle
xor
inc
and
sub
or
push
add
and
fist
ret
dec
sar
sbb
push
hlt
xchg
loope
cmps
(bad)
mov
xchg
stos
(bad)
xchg
sbb
pop
or
xchg
es
fsub
call
out
lahf
std
xor
add
fcom
hlt
jl
inc
movs
jo
call
aam
cld
aaa
js
pop
xor
cmp
(bad)
fwait
(bad)
std
push
in
rcr
mov
pop
add
xor
inc
jbe
fld
sbb
inc
mov
mov
cmp
xchg
push
mov
adc
add
xor
sub
stos
xchg
add
adc
repnz
mov
mov
xchg
lods
mov
cmc
xchg
mul
mov
(bad)
inc
fs
cmp
xchg
jae
pop
pop
adc
push
jo
in
test
shl
ror
clc
repz
pop
jbe
lahf
push
push
mov
out
adc
adc
repz
enter
fist
in
int3
retf
in
sub
data16
daa
mov
mov
arpl
sti
jno
add
xor
xchg
and
mov
sbb
scas
jmp
inc
aam
loope
loope
daa
lds
jmp
(bad)
cmp
sbb
xchg
sbb
mov
mov
imul
inc
sahf
xchg
jmp
xchg
mov
add
mov
mov
popa
push
push
xchg
sub
mov
mov
fwait
inc
call
xchg
sar
ins
ss
lods
push
xor
or
jne
outs
mov
dec
ror
cmp
stc
push
sbb
jg
mov
xor
imul
pop
jns
mov
push
int
mov
call
jecxz
xor
in
(bad)
out
push
pop
idiv
repz
jmp
mov
ret
mul
mov
outs
das
push
add
xor
iret
es
xor
call
mov
mov
ins
mov
sahf
xor
repz
xor
lock
sub
xor
xor
jne
imul
ficom
ja
mov
fsub
pop
xchg
(bad)
aam
cmp
mul
stc
jno
jle
sub
inc
xchg
cld
scas
push
pop
enter
cmp
and
cdq
scas
or
adc
dec
test
pop
cmc
sub
in
mov
in
xor
xchg
sbb
neg
aad
cmp
dec
mov
lahf
pop
cmps
inc
pushf
sbb
jno
lea
add
iret
scas
xor
push
cmp
aas
dec
push
jo
cmp
xchg
xchg
xchg
sbb
push
(bad)
movs
adc
add
addr16
xchg
jl
mov
adc
sbb
xor
fmul
(bad)
push
adc
adc
mov
mov
stos
dec
fwait
test
sub
or
xchg
jmp
data16
fbstp
pop
and
iret
push
or
xchg
xchg
pop
sub
or
enter
push
mov
aas
adc
mov
push
cmp
inc
enter
jle
call
xor
rcl
sub
ja
mov
data16
push
fmul
(bad)
fcmovu
adc
fcom
cmp
(bad)
push
dec
dec
out
push
mov
and
xor
xchg
out
cs
add
imul
or
stc
push
cmp
(bad)
push
(bad)
test
xchg
lods
test
jne
mov
ins
mov
pop
or
popa
jns
pop
movs
and
retf
mov
pop
xchg
out
mov
xor
cmp
fst
ror
lods
mov
inc
and
jmp
push
add
js
push
adc
cmp
fst
shl
mov
mov
cmps
jo
xchg
push
add
test
cmp
ins
fs
popf
movs
fidiv
mov
aas
loope
adc
fidiv
inc
sub
xchg
push
lods
outs
dec
add
add
into
and
stc
xor
mov
movs
or
mov
inc
xchg
mov
add
fcmovb
cdq
sbb
sahf
hlt
xchg
mov
aas
cs
mov
jbe
xor
jmp
and
dec
movs
xchg
push
jmp
fisubr
(bad)
pop
ror
in
add
or
fimul
xchg
push
mov
cmps
add
jb
popa
fdiv
xor
jb
stos
push
xchg
les
mov
xor
pop
test
push
adc
or
mov
push
or
xor
in
ins
mov
movs
cld
inc
xchg
add
mov
lock
(bad)
pop
adc
jo
and
jne
dec
xor
add
push
sub
ret
dec
cmp
jb
retf
inc
enter
or
loop
pop
cmps
mov
sbb
dec
sub
mov
leave
pop
ror
(bad)
stos
xchg
dec
inc
push
lds
pop
inc
fwait
xor
retf
jmp
repnz
dec
cmp
inc
cld
inc
mov
fdivr
stos
and
jmp
or
leave
xor
add
sti
repz
mov
and
retf
dec
es
sub
jbe
iret
pop
mov
cmc
popa
adc
lods
push
clc
call
mov
push
xchg
fwait
mov
inc
pop
les
sbb
cld
adc
cmp
rol
aas
(bad)
mov
shl
jnp
add
pop
adc
cmp
aad
push
add
jp
inc
mov
jge
adc
dec
push
gs
cmp
push
inc
loopne
ret
jb
cmps
adc
xor
pop
or
repnz
sbb
and
push
aam
mov
jae
push
add
stc
mov
xor
out
jmp
push
cmc
fs
pop
cld
lock
mov
movs
retf
sbb
int
inc
mov
cmps
mov
pusha
dec
and
fwait
sti
add
or
pushf
jmp
out
or
(bad)
cmps
xor
jnp
mov
push
or
jo
movs
fstp
xor
test
scas
jb
add
daa
xor
add
out
lds
test
out
outs
jno
xor
xchg
sahf
dec
ins
sub
outs
pop
ins
mov
push
faddp
mov
jo
sti
scas
es
inc
jmp
hlt
cmp
imul
cmc
out
push
jmp
out
push
enter
pop
push
mov
push
add
sub
mov
push
in
xor
icebp
pop
pop
ins
xchg
or
or
cmp
dec
mov
les
rcr
movs
aam
in
mov
loop
xchg
cs
stos
pop
cs
outs
(bad)
rep
rcl
rol
stos
inc
shl
sar
add
clc
jbe
aas
sub
push
imul
sti
std
jbe
scas
sub
ss
iret
jo
adc
xor
ret
inc
jmp
inc
cmps
xor
jne
jno
out
inc
cmp
sub
sub
push
out
nop
sub
loop
lea
push
or
movs
sbb
jmp
fdiv
mov
dec
and
ret
nop
fwait
jp
jo
(bad)
pop
retf
jle
sub
rcl
gs
fcom
outs
inc
bound
dec
xchg
call
into
(bad)
or
shr
es
not
mov
aam
sahf
ins
test
bound
clc
inc
dec
mov
fcomip
or
push
sbb
pop
sub
daa
mov
cmp
cmp
aas
push
jge
les
and
xchg
xchg
retf
out
pop
adc
mov
xchg
or
int
jae
popf
movs
add
icebp
mov
push
in
add
mov
or
sbb
daa
push
or
mov
dec
jl
cmps
pop
push
xlat
dec
clc
push
add
nop
nop
inc
pushf
cmps
add
xor
mov
in
aam
popa
mov
sub
push
jnp
sub
inc
mov
jmp
pushf
aas
mov
(bad)
clc
gs
sbb
mov
inc
shl
mov
sbb
pop
pushf
pop
repz
loope
fidiv
mov
in
jns
add
xchg
daa
stos
bound
retf
sbb
icebp
push
sub
fcomp
lods
mov
mov
fwait
pop
fnstenv
fs
es
jnp
int3
and
and
mov
popa
mov
and
pop
not
out
sti
cld
gs
dec
sub
sar
xor
loopne
pop
xor
dec
xchg
dec
sbb
jmp
aaa
dec
dec
out
pop
stos
ins
sbb
and
out
pop
(bad)
clc
fistp
in
adc
imul
pusha
leave
push
add
inc
out
jns
or
or
jno
xor
and
bnd
test
dec
or
cdq
or
cmp
pop
jnp
sbb
inc
ficom
inc
mov
xor
imul
ret
imul
adc
mov
retf
inc
in
(bad)
mov
or
push
in
xchg
mov
cmovle
cwde
ja
dec
jno
mov
and
(bad)
or
fild
push
loope
sbb
stc
cmc
das
aas
popa
push
mov
cmp
cmp
into
out
inc
cmp
xchg
(bad)
aaa
xor
dec
shr
and
div
push
mov
ret
dec
ins
push
mov
daa
call
sahf
fwait
rcr
mov
mov
jmp
jbe
in
push
sbb
add
xchg
cwde
jle
or
in
cwde
jo
outs
cmp
inc
xchg
xor
dec
sahf
fild
jle
aas
mov
and
loop
lods
xor
xlat
dec
pushf
lds
or
cmp
fild
mov
lods
sti
push
rcr
inc
fnsave
xchg
std
add
push
and
or
(bad)
test
repnz
sbb
repz
aam
aas
push
dec
test
imul
ins
pop
in
ror
int3
mov
push
pop
bound
imul
mov
shl
cmp
stos
jnp
leave
imul
xor
out
mov
sar
jl
data16
lock
jle
cmps
or
jmp
and
je
popf
(bad)
push
push
cli
in
fadd
lods
mov
or
xor
dec
jne
fidiv
scas
aas
cmps
add
pop
and
sub
std
inc
out
out
(bad)
call
shl
mov
and
sbb
xor
ins
push
call
jbe
ror
add
mov
mov
add
in
imul
mov
pop
js
pushf
adc
push
jns
sub
mov
jb
cli
dec
cmp
cmps
mov
call
nop
and
inc
int
lods
shl
fstp
loopne
push
retf
mov
mov
loop
je
push
sahf
pushf
push
jnp
mov
not
sub
cmp
push
push
add
jne
iret
cli
or
stc
int3
cmc
sbb
fsub
pushf
jle
scas
movs
scas
cdq
add
cmps
mov
jnp
push
push
imul
mov
pop
bound
xor
aas
xor
(bad)
stc
inc
mov
pop
jns
mov
popa
xchg
jge
popf
inc
sub
or
mov
mov
sahf
dec
cmp
and
popa
add
sti
jmp
stos
adc
add
mov
mov
cmp
cs
mov
mov
sbb
scas
out
push
aas
(bad)
pusha
lock
retf
lahf
jp
pop
sub
(bad)
icebp
nop
inc
test
mov
inc
fld
xor
jle
or
aam
xchg
scas
in
rol
ins
pop
jmp
adc
sub
pop
mov
mov
ja
inc
mov
xor
std
(bad)
inc
cmp
bound
ss
mov
sub
pop
(bad)
sbb
cs
inc
mov
loope
rol
xchg
outs
call
xchg
popa
fisttp
icebp
outs
xor
jae
mov
ret
cmp
test
fs
mov
ja
jl
nop
ret
(bad)
jecxz
ror
int
jl
imul
pop
and
loope
dec
mov
test
mov
mov
push
daa
dec
sti
leave
mov
push
je
je
mov
adc
inc
fidiv
shl
fdiv
into
inc
xacquire
icebp
mov
and
pop
pop
cmps
dec
test
cmc
nop
mov
jmp
or
cli
and
shr
ror
sahf
loop
or
mov
retf
pop
dec
ins
add
inc
ret
cmps
xlat
fist
cli
fwait
add
mov
mov
popf
mov
xchg
(bad)
mov
lahf
xchg
sub
scas
outs
stos
xchg
ins
nop
dec
call
or
fldenv
ret
dec
js
and
stc
aas
stc
cwde
ds
inc
xor
lods
out
inc
mov
push
cwde
xchg
and
xor
jb
sub
rol
xor
adc
mov
das
test
and
arpl
sub
mov
rcr
mov
jecxz
sar
or
arpl
test
dec
cmps
pop
loop
dec
and
in
jmp
call
jmp
repnz
inc
cmc
(bad)
fsub
push
jns
mov
pop
ror
sub
or
popf
mov
ins
adc
call
sub
fsubp
jge
mov
outs
aad
nop
add
mul
cli
(bad)
mov
repz
push
xor
xchg
call
clc
push
mov
je
out
cmp
adc
icebp
cmps
sub
(bad)
xchg
dec
(bad)
jl
cld
lods
dec
inc
pushf
rcr
call
pop
retf
push
mov
add
into
jae
daa
adc
aad
imul
fwait
and
into
inc
dec
mov
repnz
shl
setnp
stos
sbb
aam
and
pop
ins
mov
adc
movntps
outs
jno
movs
adc
gs
inc
ret
xor
fidivr
sub
push
push
(bad)
lds
out
jecxz
and
ja
push
hlt
lods
push
sbb
icebp
test
sti
call
cmc
xor
popa
cdq
loope
cmp
test
jmp
jns
std
in
mov
add
add
hlt
loope
test
(bad)
mov
ja
mov
and
pop
jge
out
push
push
lahf
lea
push
or
adc
test
pop
pop
pop
push
push
lea
test
or
sub
icebp
and
and
cmp
inc
in
mov
jl
out
popw
das
inc
jo
mov
mov
adc
cs
clc
in
imul
scas
jo
pop
je
fimul
xor
mov
mov
addr16
jno
jecxz
scas
rcl
outs
fincstp
jg
sbb
test
psubb
sar
jge
pop
stos
shl
call
mov
xor
scas
cmps
jp
rol
xor
cmp
push
push
and
aas
int3
lods
lds
or
inc
push
lds
popa
pop
push
add
jb
rcl
sbb
(bad)
push
fild
ret
add
xor
ins
mov
pop
sub
aas
inc
jo
fsub
out
jbe
retf
mov
mov
jo
jbe
pop
jno
xlat
sbb
cmp
dec
cmp
dec
sbb
test
sbb
mov
dec
fild
std
ja
mov
push
cmp
repz
xchg
loope
mov
(bad)
std
cmp
ret
out
fistp
fcom
inc
pushf
xlat
ja
enter
ret
cs
pushf
jbe
dec
pop
mov
stc
imul
adc
push
inc
sub
stc
add
popa
sti
and
dec
dec
mov
jmp
cmp
dec
and
dec
(bad)
mov
jp
lea
mov
inc
int
jbe
push
stos
add
in
cmc
iret
icebp
xor
mov
js
jge
pop
push
inc
stos
and
int
mov
fadd
cs
out
add
movs
cld
xchg
sbb
in
mov
pop
aam
mov
(bad)
out
call
out
dec
adc
lahf
lods
int3
xchg
(bad)
push
sbb
neg
dec
outs
inc
loope
nop
adc
pop
gs
jne
lods
in
fadd
outs
fnop
arpl
addr16
inc
mov
and
repnz
lods
es
mov
pop
cli
out
jae
xor
std
int
aaa
xchg
les
adc
dec
jae
lahf
push
jae
add
dec
das
sub
push
and
mov
sbb
adc
mov
add
and
xchg
test
adc
shr
mov
fcom
inc
mov
les
arpl
shl
imul
pop
mov
cmp
aad
mov
sub
popf
sbb
mov
or
loopne
mov
fnstsw
leave
add
bound
pop
add
push
push
fwait
aam
into
sub
out
mov
mov
dec
mov
into
and
ficomp
fs
add
sbb
and
xor
imul
mov
into
test
mov
(bad)
cdq
repz
pop
stos
dec
dec
inc
mov
xor
stos
and
mov
push
push
retf
das
iret
sub
pop
push
sub
push
mov
icebp
push
dec
and
aaa
add
test
add
(bad)
xchg
das
jmp
out
jne
arpl
sub
add
mov
mov
fcom
jl
inc
jecxz
aaa
pushaw
sbb
mov
fsubr
sub
cmp
bound
cld
pop
pop
pop
imul
sbb
and
adc
jg
push
ret
sbb
jmp
xor
xchg
imul
add
cwde
jle
mov
(bad)
xor
sti
mov
cmps
sbb
fidivr
sub
test
mov
test
(bad)
test
xlat
in
mov
mov
sub
xchg
test
into
sub
xchg
xor
cmp
scas
push
push
inc
jbe
sar
pop
add
xlat
jmp
les
in
jp
outs
inc
jmp
xor
std
jl
pop
aas
fs
pop
cmp
xor
push
mov
and
cmps
out
dec
pop
push
and
mov
sahf
stos
hlt
mov
(bad)
jnp
sub
stc
out
xchg
dec
lahf
mov
popf
push
aam
sbb
cld
cli
adc
fstp
cld
mov
add
mov
shl
sahf
ret
mov
mov
push
nop
les
not
xchg
data16
into
ret
and
jmp
in
stc
rcl
jne
shl
je
push
ds
fistp
inc
mov
sbb
xchg
and
addr16
mov
cmc
xchg
cmp
xchg
call
mov
cld
dec
cmps
dec
cwde
in
mov
dec
mov
mov
push
inc
ror
lds
retf
sub
sbb
in
repnz
ja
in
jle
push
stos
sbb
jmp
xor
inc
jnp
push
(bad)
in
mov
in
mov
repnz
repnz
loopne
ror
into
mov
std
shl
sub
cmp
pop
mov
(bad)
mov
dec
push
and
ja
ror
mov
loope
gs
into
and
xchg
test
dec
jb
push
mov
mov
out
stc
mul
dec
cmp
pop
jge
nop
xchg
mov
scas
mov
cmps
adc
inc
mov
pushf
mov
call
cmp
lahf
fwait
xchg
arpl
add
repz
ret
mov
or
inc
xor
test
sub
aam
and
push
mov
nop
in
stc
and
retf
cli
jl
or
pop
gs
dec
cld
jmp
pop
sbb
inc
sub
xchg
pop
lods
cwde
push
in
push
aaa
cdq
and
popa
xchg
pop
mov
pushf
rcr
test
xchg
xlat
ins
adc
mov
mov
inc
or
(bad)
pop
xchg
or
jo
jbe
iret
inc
jne
or
movs
xor
les
fadd
and
sub
adc
xchg
adc
mov
and
outs
mov
inc
repz
imul
movs
inc
mov
adc
out
nop
inc
xchg
fbld
fild
ja
jmp
dec
repz
sub
pop
and
jnp
mov
call
adc
(bad)
jge
(bad)
imul
mov
imul
mov
call
movs
cld
call
and
fs
frndint
xchg
jl
inc
cmp
mov
mov
lea
cmp
inc
cmp
mov
retf
or
push
sbb
lahf
je
test
test
mov
paddsw
add
cwde
inc
cli
fistp
fisubr
sbb
shl
mov
stos
loop
ins
inc
arpl
mov
adc
push
push
das
add
dec
mov
dec
(bad)
fadd
jp
or
into
into
xor
inc
xchg
shl
dec
cmps
push
(bad)
fisub
or
jae
les
pop
mov
xchg
jl
pop
dec
mov
mov
mov
jmp
and
fdiv
std
in
fpatan
jno
jecxz
mov
(bad)
scas
xchg
(bad)
ins
in
lea
mov
mov
mov
mov
sub
mov
dec
scas
jb
mov
out
ret
push
sti
movs
mov
nop
sbb
inc
rol
push
rcr
mov
leave
mov
jmp
mov
fst
enter
and
mov
jmp
mov
jecxz
mov
mov
gs
(bad)
enter
stc
fiadd
pusha
fcom
pop
imul
jge
stos
iret
xor
push
and
xor
call
fldenv
outs
int
movs
retf
or
adc
in
sub
or
dec
int
js
je
clc
retf
ror
jnp
ret
sub
mov
inc
and
clc
push
jg
jae
in
aam
xor
jl
jo
pop
arpl
sbb
sbb
mov
xchg
sbb
pop
dec
ret
inc
cmps
(bad)
add
jno
ja
out
cld
mov
ret
push
cs
outs
adc
inc
dec
pop
dec
les
and
int
cmp
sti
xchg
push
call
int3
jp
or
sub
dec
ss
xor
and
xchg
mov
push
shl
xchg
mov
mov
(bad)
push
scas
popa
ror
and
jle
int3
add
and
pushf
adc
stos
mov
and
mov
sub
inc
out
jg
imul
call
jp
sbb
or
(bad)
mov
add
imul
repz
jl
lahf
add
pop
push
sub
mov
mov
pop
cmp
xchg
mov
cmp
imul
mov
loopne
add
sbb
mov
sbb
es
and
mov
dec
sub
in
scas
loopne
sub
stos
push
push
loope
loopne
inc
or
stos
mov
stos
es
fdiv
cld
ss
add
inc
adc
mov
ja
or
scas
ja
dec
cld
les
inc
dec
jo
mul
dec
push
in
pop
sub
loopne
test
sbb
lds
enter
sub
lds
outs
enter
lds
and
inc
pop
sbb
xor
dec
mov
inc
adc
movs
add
mov
xlat
push
pop
cmp
push
neg
dec
test
mov
out
cmp
pop
js
lahf
cmp
loope
ds
xor
push
ja
arpl
jae
ret
inc
ins
adc
pop
adc
fmul
or
aas
and
inc
sbb
cmp
arpl
fist
stc
jnp
push
mov
jns
dec
cmp
xor
pop
sub
adc
inc
mov
pop
mov
mov
iret
inc
pop
popf
push
dec
jne
(bad)
cwde
jmp
cmp
sub
mov
or
repnz
mov
jmp
mov
and
mov
rcr
pop
push
outs
cmp
cs
cs
cmps
test
ja
push
mov
mov
cli
imul
gs
xchg
add
add
push
call
xchg
mov
call
rcr
pushf
and
ja
pushf
minps
jecxz
(bad)
pusha
hlt
mov
inc
(bad)
pop
push
push
retf
mov
lods
addr16
cs
cmp
mov
dec
test
or
mov
inc
adc
mov
xchg
or
ds
into
inc
test
movs
mov
iret
call
jecxz
pop
and
sahf
mov
xchg
xor
test
sub
mov
mov
(bad)
scas
and
xlat
mov
xor
shl
sbb
or
jge
(bad)
std
mov
popf
shr
mov
xor
stos
call
fdivr
fisttp
js
enter
inc
shr
cmp
scas
sar
retf
jp
jle
xchg
fldlg2
push
sub
sbb
adc
add
add
and
jmp
cs
push
xor
dec
(bad)
add
inc
or
icebp
test
les
mov
push
test
mov
sub
sub
fs
push
inc
push
in
pmaxub
nop
outs
mov
cmp
sbb
mov
arpl
mov
fmul
push
shr
in
xchg
and
loopne
mov
retf
sub
(bad)
dec
(bad)
mov
rol
adc
jne
pop
lock
pusha
mov
mov
fst
leave
loope
dec
sub
push
mov
aad
loope
sti
shr
(bad)
mov
in
hlt
xor
sahf
outs
jo
in
loopne
mul
sti
push
or
outs
in
adc
mov
lods
and
aad
mov
add
mov
inc
add
sar
call
dec
test
and
pop
cmp
cmp
jg
inc
cli
in
cmps
push
sahf
push
fs
xlat
sub
movs
pushf
in
sbb
cld
ror
or
mov
mov
jno
jnp
sahf
and
jns
dec
sar
pop
(bad)
loope
cmp
js
xor
mov
push
cmps
sbb
jge
repnz
js
mov
pop
xor
mov
in
mov
pop
int
mov
add
jg
inc
or
xchg
sbb
dec
pusha
mov
shl
and
and
(bad)
shl
pop
aad
mov
pop
test
pop
repnz
movs
shl
in
jecxz
pop
jb
and
adc
jae
outs
or
pushf
repnz
fmul
and
mov
(bad)
adc
ret
imul
or
mov
neg
sahf
jo
and
stos
or
es
jl
(bad)
xchg
sahf
xor
inc
fwait
sti
push
push
cmp
ret
popf
lea
cmp
rcl
and
(bad)
iret
mov
add
call
jnp
jnp
fcmovb
and
cmp
data16
sbb
scas
mov
into
repnz
cmp
sub
fisttp
xor
sub
cmp
cdq
adc
loopne
sub
push
adc
in
mov
imul
mov
(bad)
out
(bad)
out
jecxz
loope
mov
lahf
jmp
jg
mov
add
ds
mov
sub
in
sbb
adc
mov
mov
hlt
xor
inc
aad
es
(bad)
add
xchg
mov
dec
push
xor
popa
aas
movs
in
fcmovnb
out
stc
ds
inc
xor
enter
jbe
mov
adc
sbb
es
(bad)
xchg
inc
out
stos
mov
add
inc
mov
push
xchg
int3
call
mov
mov
pop
test
in
pop
lods
inc
cmps
(bad)
rcr
push
dec
ins
cs
in
daa
jmp
cmp
cmp
lods
mov
mov
mov
lds
jne
mul
std
jns
stos
das
call
inc
dec
fld
jmp
and
in
lods
or
push
push
mov
jno
dec
pop
push
outs
adc
data16
ins
cs
pop
sub
jle
loopne
inc
and
sub
fsubr
scas
test
lahf
push
add
loop
mov
ret
das
and
sub
leave
inc
push
addr16
adc
or
iret
icebp
ss
mov
adc
(bad)
sbb
dec
mov
xor
mov
add
pop
(bad)
sbb
repz
mov
mov
push
mov
fidivr
sbb
aas
push
sbb
push
in
sbb
sub
(bad)
and
test
push
pusha
das
stc
popa
or
mov
jg
jo
dec
cmc
adc
fdiv
popf
fnstsw
xchg
stos
repz
push
stc
xchg
fs
pusha
fldcw
fild
out
cmp
push
add
adc
in
jmp
pop
push
mov
nop
mov
icebp
sub
(bad)
jp
popa
nop
push
jle
test
out
adc
inc
pop
mov
daa
arpl
cmp
sahf
mov
div
cs
inc
fidivr
std
cmp
sti
movhps
iret
inc
fnsave
push
pop
aad
fwait
inc
dec
imul
stos
cwde
sbb
gs
mov
(bad)
ss
fadd
fwait
aam
or
ror
xchg
dec
imul
push
mov
iret
and
ja
bound
fsubr
fcom
aad
adc
and
es
arpl
stos
loope
rcl
adc
xor
cwde
fadd
movs
add
int3
mov
lea
pop
pop
scas
mov
and
aas
ja
mov
sub
lods
icebp
inc
shr
add
mov
js
dec
mov
pop
xchg
pop
imul
dec
cmp
cmp
cmp
repz
pop
push
push
adc
fld
in
rcl
test
cmp
int
loope
xchg
sar
adc
loopne
jne
cmove
frstor
loopne
adc
shr
xor
adc
stos
xlat
aam
xor
sub
add
mov
inc
ror
lock
shr
ret
popa
mov
xchg
mov
fs
cmp
shl
cmovp
imul
xor
inc
add
and
and
push
ds
sub
pop
mov
xchg
cmp
or
jae
aaa
inc
push
clc
scas
int3
mov
out
clc
push
mov
cmp
mov
out
sahf
rcr
cwde
or
push
jbe
mov
mov
inc
sub
not
mov
fnstcw
dec
aaa
movs
xchg
mov
or
in
mov
mov
xchg
and
or
add
mov
test
cmp
pusha
dec
mov
test
inc
add
jns
sbb
or
cmp
sub
push
je
and
mov
inc
add
push
aam
sbb
int
adc
push
jmp
mov
dec
cmp
xlat
daa
ficom
inc
cmp
sbb
xor
inc
ins
pop
aaa
test
mov
push
dec
scas
xchg
cmp
cmp
xchg
or
or
push
mov
jmp
xor
xchg
adc
(bad)
clc
repnz
inc
jmp
mov
push
cs
cdq
push
imul
retf
add
jge
sbb
ret
cli
add
xor
(bad)
sub
hlt
ficomp
in
iret
gs
adc
into
popf
and
loope
cmp
inc
cwde
leave
inc
movs
mov
jmp
adc
into
mov
cwde
mov
sbb
inc
push
mov
push
scas
cmps
outs
repz
xor
enter
xor
pop
adc
cli
in
xchg
punpcklwd
dec
mov
lock
add
jl
xchg
daa
repz
(bad)
mov
push
test
fisubr
cmp
push
shl
push
or
imul
pop
ret
fdivr
es
cmp
stos
sar
fmulp
das
and
ret
cmp
adc
retf
xchg
mov
(bad)
push
adc
and
adc
cld
hlt
fs
sbb
popf
sbb
loop
sub
and
outs
dec
adc
inc
pop
ror
mov
inc
popa
(bad)
cmp
ss
inc
(bad)
in
repnz
aam
test
mov
inc
adc
dec
jmp
jmp
call
pop
loopne
mov
ret
pop
jbe
rcr
mov
cmp
mov
popa
dec
arpl
sbb
mov
fnstsw
cmc
lock
ret
cmp
push
adc
dec
mov
popf
out
jmp
mov
mov
and
inc
xor
or
data16
test
(bad)
in
xor
push
xlat
test
jno
cmova
mov
shl
popa
outs
mov
push
xor
push
jmp
out
sub
adc
or
dec
lods
cmp
test
mov
mov
sub
sub
ins
sub
ins
mov
lods
scas
aas
xchg
imul
stos
xor
test
nop
add
push
rcr
pextrw
mov
cmp
cmp
jmp
sub
pop
test
xor
shl
cmps
retf
ret
adc
adc
pop
cmp
inc
xchg
xor
out
(bad)
clc
and
stos
out
retf
push
outs
cld
retf
jmp
ins
cmp
jge
and
dec
push
shl
push
mov
add
xor
push
jecxz
call
pop
fcmove
leave
and
and
iret
cs
int3
scas
inc
mov
jg
mov
call
out
or
mov
loopne
inc
dec
dec
add
sbb
jmp
test
ins
pop
(bad)
fiadd
test
test
mov
mov
jg
jne
cwde
pop
cmp
push
add
sti
adc
mov
adc
mov
jae
ret
inc
loop
xchg
lahf
jmp
inc
pusha
iret
mov
ss
cmp
jecxz
fcmovbe
adc
xlat
sbb
add
cmc
std
push
jns
or
std
inc
retf
movs
cmp
fcomp
stos
xchg
lods
jp
and
push
mov
push
or
cmp
(bad)
push
ins
inc
add
cs
lods
data16
out
and
aad
mov
sub
cdq
sub
out
cdq
adc
icebp
loopne
mov
push
out
cdq
cmp
lea
shl
or
mov
push
fs
adc
lods
loope
scas
inc
aas
popa
jecxz
push
mov
pop
dec
loope
jle
mov
movs
cwde
and
int3
xor
and
in
test
out
add
cdq
pop
(bad)
mov
cmc
mov
dec
xchg
dec
xor
leave
xchg
mov
mov
push
aad
and
cmp
outs
lahf
xchg
gs
pop
dec
aad
xchg
pop
jns
sbb
pop
aam
sub
pop
dec
sbb
rol
loopne
or
sbb
push
cmp
push
sub
push
sbb
outs
pop
das
jne
mov
push
push
add
addr16
gs
dec
(bad)
retf
push
cmp
iret
stos
adc
fst
push
jnp
aam
mov
sub
sub
prefetchwt1
mov
jno
push
lds
xchg
(bad)
or
and
loopne
xchg
mov
sbb
daa
or
scas
jae
xchg
nop
mov
xchg
(bad)
in
sahf
pop
push
xchg
lea
stos
ds
stc
rcl
sti
movs
inc
ret
add
mov
inc
icebp
pop
frstor
push
ror
repz
xchg
js
mov
xchg
push
cld
push
jge
(bad)
pop
sbb
push
mov
adc
adc
es
mov
adc
inc
or
mov
sub
mov
pop
and
test
fwait
imul
xchg
or
fdivr
mov
push
jns
mov
push
push
ror
and
adc
adc
cmp
out
jle
popf
icebp
cwde
sub
mov
popa
jmp
adc
movs
fdecstp
repnz
push
jns
sbb
mov
loopne
sbb
push
cmps
sti
out
scas
dec
(bad)
iret
das
push
or
stc
sahf
arpl
push
mov
sbb
fidivr
pop
in
adc
fs
cmc
xchg
(bad)
add
mov
out
and
mov
inc
or
sub
pop
rcl
mov
mov
adc
les
sbb
sahf
sub
jno
fistp
cwde
push
(bad)
pop
mov
push
in
jmp
and
jae
in
gs
push
mov
dec
je
add
shl
dec
pop
(bad)
ins
in
xor
jg
test
aad
pop
lea
jnp
sub
outs
sbb
(bad)
sbb
push
or
cmps
call
jbe
pusha
cmp
or
dec
sahf
dec
inc
lds
jae
scas
or
arpl
mov
fisubr
ret
repz
mov
and
xor
xor
gs
(bad)
jmp
add
mov
mov
rol
lock
repnz
xchg
adc
pop
xchg
movs
retf
arpl
adc
jo
cmp
ret
imul
ja
mov
sub
inc
ret
and
add
xor
add
loope
je
pushf
dec
add
pop
and
neg
rcl
enter
es
mov
mov
in
sbb
sub
jbe
sbb
shl
repz
(bad)
stc
xor
mov
lods
pop
and
or
and
mov
ins
pop
or
outs
hlt
push
pop
cmp
mov
les
popa
shr
dec
in
mov
retf
push
test
(bad)
aas
push
add
dec
sti
call
inc
imul
cmp
inc
sbb
sub
loope
ins
daa
add
aad
ret
js
xor
ret
jge
fild
pop
movs
cmps
loope
ret
push
dec
inc
mov
pusha
jle
(bad)
mov
xor
mov
test
fsubr
cdq
fwait
test
pop
cmps
cmps
repnz
imul
bound
sbb
add
ja
data16
cld
push
fsubr
cmp
dec
sub
pop
test
jp
adc
maskmovq
test
mov
cmp
mov
jl
dec
test
cs
fwait
mov
mov
jb
dec
std
mov
rcr
call
pop
push
pop
push
sbb
and
popf
add
fimul
lahf
mov
adc
cld
mov
daa
aam
mov
push
push
push
or
jo
cmp
dec
or
push
jno
mov
push
mov
push
dec
pop
test
xchg
mov
lock
aam
retf
pop
jnp
cwde
jecxz
jle
adc
(bad)
loop
cs
dec
and
jae
cwde
dec
ds
xrelease
xor
xchg
mov
xchg
sar
cld
mov
or
ins
sbb
scas
jl
and
mov
sub
and
or
dec
daa
aas
push
mov
loopne
cmp
pushf
lods
enter
ret
xchg
add
test
sahf
push
lock
(bad)
cli
or
(bad)
bnd
out
cmps
fld
ret
dec
in
jmp
xchg
jne
and
sahf
cmc
jecxz
std
jge
retf
daa
cmp
dec
(bad)
jmp
jmp
mov
mov
add
mov
mov
popf
call
scas
fs
jns
jg
sbb
icebp
imul
jge
ins
outs
ss
push
test
ss
ins
repz
mov
int
das
in
js
outs
shr
rcr
jge
mov
out
sbb
add
jmp
jbe
pop
cmp
pop
jmp
call
xor
mov
shr
or
jmp
pop
imul
sbb
stos
hlt
mov
ins
jp
dec
jp
call
dec
gs
aam
aaa
call
aad
bound
add
lods
ret
scas
sahf
fwait
and
cs
xchg
or
cwde
jo
add
fnstsw
out
pusha
adc
jge
movs
jbe
push
or
mov
push
int3
jmp
stos
fnstcw
cmps
adc
or
xchg
or
cmp
dec
push
leave
movs
and
(bad)
jmp
ss
lods
cmp
shl
dec
outs
rol
scas
lods
adc
ret
push
enter
iret
shl
and
add
cmp
lds
adc
adc
push
push
and
hlt
(bad)
mov
pop
stc
mov
nop
pop
adc
aas
inc
in
(bad)
sub
pop
jne
xor
mov
fwait
xor
dec
pop
push
ret
mov
xchg
push
sbb
pop
mov
leave
sub
xchg
out
or
pop
sti
mov
add
js
cmp
retf
jbe
gs
aas
mov
mov
and
dec
arpl
dec
loop
pop
cmps
mov
push
cmp
mov
(bad)
push
cmp
dec
sub
jmp
pop
cwde
xchg
sub
xlat
(bad)
scas
inc
pop
adc
fdivr
test
lods
aaa
or
daa
mov
jmp
test
add
data16
test
adc
mov
(bad)
pop
(bad)
cld
or
dec
lock
out
out
fisubr
fwait
(bad)
adc
nop
pop
push
and
push
adc
jge
jne
pop
in
shl
cmps
aad
repnz
je
mov
call
lock
mov
cmp
cmps
ret
pop
push
cmp
popf
inc
imul
add
dec
repnz
xchg
push
rcl
int
cmp
mov
mov
iret
add
and
retf
dec
movs
push
in
call
add
mov
scas
xchg
sti
cli
sbb
xlat
add
inc
retf
test
out
js
inc
idiv
cmp
(bad)
dec
test
push
mov
retf
adc
inc
sub
xor
dec
in
iret
(bad)
clc
outs
mov
cmp
inc
mov
or
jo
jo
lods
gs
push
rsqrtps
(bad)
shr
int
fld
xchg
mov
stos
or
mov
nop
mov
xor
or
mov
or
rol
and
pop
dec
dec
xchg
fs
popa
and
not
xchg
dec
xchg
nop
mov
outs
rcl
sti
aaa
sub
mov
(bad)
or
lea
ja
or
cmp
in
add
das
lock
sahf
fmul
fisubr
mov
jnp
push
adc
cmps
sub
cld
mov
mov
mov
inc
jbe
(bad)
cli
xlat
and
mov
fild
and
mov
scas
ss
or
repz
push
in
jo
inc
fwait
popf
fnstsw
jp
sar
xor
push
fcom
fldcw
cmp
sbb
xor
imul
dec
sahf
daa
cwde
xor
cmp
jp
shl
mov
pusha
in
or
or
test
jbe
int3
lods
rcr
lods
jae
or
xchg
scas
cmp
cs
push
ret
shl
adc
push
xchg
enter
sbb
stc
mov
push
inc
push
jne
out
cs
aad
rcr
into
repz
loope
sbb
in
stos
mov
enter
pushf
push
pop
(bad)
xchg
pop
add
push
test
mov
dec
or
jae
add
scas
pop
jbe
int3
and
(bad)
and
fnsave
dec
addr16
hlt
lods
hlt
js
loop
loope
push
cdq
scas
iret
or
inc
mov
shl
xor
ret
xor
fld
into
in
or
mov
mov
stos
mov
or
xchg
adc
cmp
mov
clc
aam
lds
mov
push
pushf
xchg
jne
sub
ret
adc
and
icebp
lds
stos
in
sti
pop
push
(bad)
jge
and
sbb
stos
pop
mov
aam
mov
xchg
and
jae
js
sub
xor
int3
fstp
jmp
(bad)
push
inc
dec
dec
mov
(bad)
in
sub
ror
xor
jbe
add
or
jmp
or
xchg
jmp
inc
xchg
test
or
test
(bad)
aam
and
scas
rcr
(bad)
cmc
stos
sbb
psubq
push
cmps
fimul
test
xchg
arpl
push
div
push
call
ret
add
mov
pop
sbb
ret
int3
gs
fsubr
jbe
push
leave
fidiv
enter
cmp
inc
stos
out
pxor
pop
add
mov
push
mov
mov
mov
add
and
cmp
aam
lods
gs
addr16
sub
xchg
fst
loope
les
shl
add
(bad)
(bad)
cli
int
cdq
out
inc
daa
pop
and
ret
call
cmps
push
fnstcw
sbb
mov
xor
fisubr
icebp
xchg
ficomp
int
loop
pop
cdq
out
xchg
out
push
xor
outs
ins
sahf
jecxz
leave
mov
push
push
ss
jl
jmp
arpl
mov
xchg
ins
daa
xchg
scas
sti
or
aad
sbb
xor
call
mov
popa
div
call
adc
cli
retf
jb
ret
mov
lahf
out
jno
outs
jno
in
cdq
xchg
mov
and
xchg
sbb
pop
cmps
repnz
cmp
leave
sub
jg
inc
mov
retf
popf
and
inc
inc
(bad)
dec
sbb
mov
adc
adc
and
shl
dec
jns
popa
add
xchg
(bad)
cmp
retf
shr
icebp
stc
shl
jmp
movs
ret
stos
dec
scas
jns
cld
retf
push
add
cwde
adc
push
or
adc
ret
(bad)
dec
xchg
adc
pop
inc
inc
dec
(bad)
sub
sahf
xchg
mov
pop
cli
daa
fistp
mov
std
loop
je
retf
xor
adc
push
inc
popw
retf
mov
adc
mov
pop
sbb
es
data16
int
mul
nop
dec
daa
jecxz
jnp
mov
add
ins
popa
and
push
pop
jo
sbb
push
push
test
cli
call
adc
into
cmp
cli
jne
data16
imul
xlat
mov
mov
adc
jge
aas
(bad)
nop
inc
pop
pusha
aaa
iret
mov
in
xor
or
clc
mov
lds
ret
xlat
hlt
into
mov
xchg
call
mov
rcl
sbb
out
sub
inc
icebp
mov
push
add
sub
in
cmps
sahf
and
mov
jne
sub
ror
ss
ret
retf
mov
cs
xor
in
aaa
mov
inc
hlt
pop
jl
sub
inc
lods
inc
out
test
mov
push
sbb
mov
xor
leave
xlat
retf
popf
and
mov
jl
jne
shr
fsub
in
out
(bad)
push
xchg
push
mov
mov
mov
fisubr
data16
pop
aaa
cs
mov
inc
shr
xor
xlat
rol
adc
clc
addr16
mov
popf
rcr
sub
movs
jmp
xlat
daa
sar
in
out
or
stos
mov
dec
hlt
mov
pop
imul
jle
sbb
scas
shl
mov
mov
push
lahf
mov
cdq
lock
pop
bound
mov
aam
in
mov
adc
lea
push
addr16
pop
xchg
sbb
mov
jne
(bad)
pop
stos
cmp
popf
jle
bound
test
dec
push
pushf
iret
jge
dec
inc
mov
repnz
xchg
adc
test
xor
ins
aas
or
xchg
lea
add
daa
mov
mov
adc
cwde
xchg
or
lea
je
mov
pop
sbb
out
jp
xchg
nop
aas
mov
jmp
pop
or
add
imul
inc
jns
xchg
fisub
or
pop
inc
xchg
sti
pop
push
lds
test
imul
idiv
movs
add
inc
in
lock
out
pushf
ret
(bad)
sbb
dec
jmp
out
out
gs
push
mov
pop
cld
mov
ss
movs
mov
and
test
push
test
xor
dec
push
mov
ror
scas
jo
test
(bad)
xlat
in
push
das
jno
dec
(bad)
cmc
adc
(bad)
and
gs
(bad)
sub
jecxz
xor
jecxz
push
icebp
imul
adc
cmp
lods
mov
xchg
mov
loopne
sbb
imul
sub
ins
dec
aad
loope
clc
shl
mov
fwait
loop
mov
rcr
sub
mov
and
das
dec
add
in
xor
outs
fsubp
inc
fs
xor
out
inc
sar
push
xchg
or
ins
push
test
repnz
mov
jle
clc
repnz
xlat
push
inc
call
mov
dec
mov
mov
lock
sahf
cmps
leave
je
dec
add
pop
xor
mov
push
icebp
scas
fcomp
push
ss
add
pop
clc
xor
leave
fld
ret
in
push
and
in
mov
pop
sti
out
cld
aad
movs
ret
test
sti
pop
stos
push
test
test
jge
popf
fld
adc
xchg
push
bnd
fwait
neg
cmp
or
adc
sbb
jo
sbb
jecxz
sbb
xchg
stos
mov
aaa
and
aad
or
adc
xchg
adc
scas
adc
addr16
jbe
lods
dec
cmps
fwait
push
mov
int
inc
pop
vmread
mov
mov
jmp
xor
cwde
jl
push
push
sbb
inc
push
ds
ins
and
push
xor
add
mov
sub
int
adc
and
jmp
call
jne
cmp
inc
jo
xlat
or
inc
jmp
in
push
or
pop
xchg
push
mov
jecxz
lods
sar
std
ins
pop
repz
xchg
mov
push
inc
push
push
enter
add
outs
loope
repz
cmp
xor
jb
xchg
repz
sar
mov
out
rcl
sti
cmc
add
pop
and
xor
inc
cmp
jmp
mov
outs
cmp
mov
dec
std
jo
jbe
sub
cmps
fwait
dec
mov
fwait
repnz
cmps
iret
cmp
scas
jo
stc
data16
out
inc
clc
in
ds
mov
in
inc
loop
sar
mov
add
mov
inc
and
push
hlt
jb
stos
jbe
int3
adc
adc
pusha
mov
in
xchg
ret
fwait
pop
xor
cmps
rol
jmp
xchg
repnz
movs
loope
mov
push
fld
fisubr
sub
pop
and
loopne
inc
add
and
pop
mov
in
imul
in
sbb
or
gs
mov
mov
pop
mov
retf
xchg
sub
push
adc
cmp
call
mov
xor
je
imul
retf
mov
jl
repz
cmc
jae
cmp
test
out
inc
mov
into
lods
or
lea
xor
cwde
jge
or
sbb
dec
push
push
mov
fsub
cdq
mov
mov
stos
lds
pop
call
or
xor
adc
data16
sbb
sbb
sub
pushf
(bad)
shl
mov
mov
mul
xchg
aaa
xchg
inc
dec
sbb
bound
sti
sub
popa
jecxz
xor
mov
pop
scas
ficomp
push
pop
nop
std
jecxz
or
and
xor
mov
push
ret
cmp
scas
pop
mov
jno
(bad)
lock
cmp
(bad)
sbb
dec
popf
cmps
jae
and
jno
mov
adc
icebp
aad
cmc
cld
je
(bad)
cmp
inc
imul
or
mov
pop
jo
or
rcr
adc
jne
out
mov
push
leave
mov
sbb
fadd
inc
push
daa
stos
push
jle
mov
xlat
dec
jne
movs
add
pop
cmp
xchg
cld
add
sbb
ins
imul
sbb
pop
lea
mov
mov
push
or
bound
inc
fistp
xchg
pusha
shl
jmp
fcomp
arpl
mov
mov
mov
jo
bound
sub
jmp
xchg
add
inc
rcr
nop
call
add
icebp
sub
inc
jb
cmp
test
loop
pusha
push
pop
xor
inc
test
cmc
movs
cs
shl
pop
jl
and
loopne
push
repz
in
cmp
das
pushf
or
xor
jmp
mov
mov
sub
nop
scas
jo
scas
add
out
(bad)
push
mov
ficom
xor
inc
pop
mov
retf
inc
dec
mov
add
nop
aas
sahf
aam
in
clc
bound
int
int3
push
rcl
scas
pushf
sub
mov
pop
fdiv
in
cmp
pushf
push
pop
push
push
sbb
pop
les
rol
scas
cmp
or
aad
mov
(bad)
or
xchg
and
xor
je
inc
mov
sub
pop
mov
ins
adc
and
cmps
fnstenv
sbb
(bad)
test
inc
xchg
or
fisubr
icebp
mov
daa
mov
sti
push
stos
dec
push
rol
(bad)
ret
sti
cmp
pusha
fmul
xchg
mov
xchg
pop
sbb
jmp
xchg
sbb
sub
jl
jno
xchg
xchg
(bad)
mov
sub
(bad)
and
sub
(bad)
mov
mov
hlt
idiv
mov
xor
adc
push
jl
pop
sub
inc
adc
cli
rcr
pop
call
mov
aam
adc
mov
xchg
mov
ficomp
adc
mov
jne
out
adc
mov
dec
popf
cmc
jl
pop
clc
xchg
add
jo
ja
fstp
idiv
mov
out
aam
jno
push
xchg
add
hlt
ins
call
mov
test
xchg
movs
out
hlt
das
add
iret
dec
icebp
in
push
movs
imul
pop
cmp
sub
pop
sbb
mov
popa
pop
call
cmc
push
sub
jecxz
out
inc
mov
stc
mov
fiadd
mov
into
or
ffree
fnstcw
data16
test
js
jno
das
in
add
xchg
(bad)
hlt
(bad)
pop
ss
pop
test
test
or
out
push
add
cmc
sbb
pop
pop
or
pop
pop
cdq
and
xor
adc
jae
add
gs
sub
stos
or
(bad)
mov
fld
jae
test
sub
outs
ret
aad
ins
std
cdq
mov
xor
jle
imul
std
cld
mov
arpl
fild
dec
fwait
mov
sub
inc
xor
sbb
sub
call
mov
sub
push
lods
xchg
test
ja
in
add
test
jno
mov
jns
mov
mov
into
xchg
jnp
iret
enter
mov
inc
push
sub
jecxz
movs
daa
xchg
add
das
lahf
push
and
ret
cli
pop
ret
hlt
jo
push
ins
ja
mov
push
data16
mov
in
ror
xor
cmps
push
mov
shl
aaa
xor
cmps
loopne
push
ins
ror
mov
inc
call
repnz
mov
das
add
xchg
dec
or
sbb
xchg
test
xchg
xor
xor
cdq
loope
dec
movs
int
mov
push
mov
aas
test
inc
jmp
ror
xor
push
mov
xor
jnp
mov
cmp
pop
retf
mov
cli
retf
xchg
mov
jns
push
pop
gs
or
jg
pop
jl
pop
in
or
pop
scas
ds
cmp
mov
aaa
push
(bad)
dec
imul
add
jmp
inc
sub
cmp
push
inc
mov
xchg
or
mov
in
sahf
sbb
dec
mov
ret
arpl
add
adc
out
jae
div
sbb
sbb
or
div
sbb
ret
std
dec
cmp
jb
data16
xor
stc
and
dec
cwde
test
out
leave
sub
sahf
push
rcr
and
inc
ja
stc
xchg
sub
or
or
dec
pusha
retf
jle
lds
test
push
cmp
pushf
inc
scas
bound
movs
push
add
into
push
push
outs
mov
mov
push
stos
cmp
inc
dec
xchg
das
ror
cmp
popa
mov
xor
or
dec
mov
mov
movs
adc
add
jg
push
scas
push
pop
pop
(bad)
cli
leave
push
dec
fwait
outs
cmps
adc
push
in
lahf
enter
stc
xchg
jp
and
jnp
jmp
int3
and
sbb
xchg
mov
mov
mov
daa
mov
sbb
in
test
rol
data16
fwait
cmp
jae
push
in
clc
xchg
mov
(bad)
stos
sbb
sub
jb
xchg
cmp
cmps
mov
mov
add
pushf
stos
(bad)
mov
dec
mov
mov
mov
sub
out
sbb
lods
and
mov
jo
les
mov
inc
mov
adc
cmp
xchg
test
imul
xlat
xor
dec
gs
loopne
ret
push
mov
mov
repz
mov
dec
xor
sbb
mov
ror
or
rep
lods
inc
push
add
fidivr
add
mov
dec
inc
or
mov
shl
xchg
pop
cmps
add
xchg
sahf
clc
popa
dec
adc
gs
mov
xor
cmps
xacquire
jmp
xor
fwait
sahf
cmp
push
clc
stos
xor
repz
pop
icebp
mov
out
xor
nop
mov
inc
dec
movs
dec
push
adc
mov
bound
xlat
push
(bad)
data16
bound
aam
mov
outs
jle
je
pop
sahf
out
jo
loop
cs
xor
in
fild
or
dec
jae
jp
mov
ins
out
sti
inc
jbe
xor
inc
lods
aad
rcr
movs
jmp
iret
push
push
sbb
(bad)
xor
jb
sbb
mov
jnp
repz
inc
cld
call
out
push
mov
cdq
inc
shl
pop
in
jmp
pop
push
and
pushf
or
pop
pop
and
adc
cdq
add
mov
mov
aam
dec
call
cmps
out
fnstsw
push
lods
push
sub
jl
in
xchg
mov
pop
das
sub
cmp
jecxz
jns
pop
inc
xchg
jno
cmps
int3
js
xchg
lods
jmp
js
and
sub
jo
stos
stc
hlt
lock
arpl
aaa
lods
lock
test
cmp
cmp
sahf
add
fstp
add
jecxz
or
xchg
mov
inc
jge
imul
rcr
mov
in
int
xchg
pop
aam
mov
jbe
(bad)
cmc
rcr
lahf
sbb
rep
jmp
popf
dec
fadd
xchg
xchg
movs
and
inc
adc
cld
addr16
cmp
inc
aam
sbb
jecxz
aam
jmp
shl
outs
into
jle
pop
stos
call
mov
and
das
cwde
ins
xor
pop
imul
push
mov
push
rcl
mov
call
sbb
push
pop
(bad)
sahf
jg
pop
push
mov
lods
or
mov
dec
pop
lahf
loope
and
dec
leave
test
je
adc
pop
mov
into
(bad)
sub
fnstcw
or
xchg
sub
jmp
jns
xchg
push
mov
fmul
mov
cmp
js
sahf
sbb
jge
mov
jb
push
loopne
pop
jg
arpl
add
lea
dec
test
rol
push
cwde
in
outs
hlt
mov
xor
sti
jb
dec
sub
(bad)
mov
and
pop
xchg
call
aad
enter
xchg
xchg
(bad)
int
dec
jo
pop
fisttp
jle
gs
mov
mov
push
sub
mov
int3
and
or
cdq
add
cmp
xor
loope
xchg
adc
call
adc
outs
ds
mov
sbb
fwait
mov
pop
sub
cmp
dec
jo
icebp
daa
mov
ins
ficomp
or
lods
xlat
lahf
call
sti
cli
out
adc
inc
sub
inc
mov
jmp
mov
mov
mov
clc
push
frstor
adc
xor
xchg
imul
jbe
jne
sbb
add
dec
push
sti
in
cs
mov
mov
mov
pop
mov
cmp
ror
push
jle
jecxz
inc
add
xor
mov
test
shr
or
cdq
dec
das
pushf
push
lods
lahf
or
cmc
jmp
sub
or
enter
cmps
ds
ss
dec
jle
test
stos
cmp
ds
(bad)
movs
or
sahf
mov
(bad)
xor
out
pop
retf
xor
dec
and
jnp
movzx
outs
into
xchg
in
fwait
pshufw
ss
mov
pop
cld
or
or
movs
pusha
je
xor
fidivr
lds
xchg
push
mov
nop
add
aam
imul
inc
jo
sbb
dec
outs
cmps
push
push
jb
arpl
inc
out
jo
(bad)
lahf
mov
or
dec
or
push
and
aam
xchg
fist
xor
out
and
xor
aad
xor
pop
out
xchg
pop
addr16
push
test
in
dec
fcmovb
jnp
repz
cmp
out
sar
add
mov
call
cmp
mov
add
dec
or
out
test
(bad)
fdivr
add
das
sbb
cmp
shl
out
(bad)
lea
outs
inc
inc
mov
or
and
or
and
push
xchg
je
and
pop
sub
leave
(bad)
popa
stos
fwait
pusha
test
test
lock
in
cmp
xchg
leave
jo
fnstenv
pop
outs
sbb
test
add
or
xchg
mov
sbb
dec
int
es
stos
or
fs
arpl
in
(bad)
xchg
jg
fs
cmps
sar
or
into
dec
add
pop
and
mov
aas
int3
fwait
mov
xchg
in
pop
xchg
push
cmp
adc
retf
jmp
nop
xchg
adc
push
or
mov
pop
sahf
sub
repz
movs
mov
dec
js
scas
int
imul
fisubr
rcr
push
rcl
or
cmps
js
(bad)
retf
sub
pop
(bad)
pop
pop
and
mov
add
stos
dec
out
ret
add
push
fidivr
fdiv
fstp
ss
jno
cwde
adc
adc
xchg
dec
cmps
mov
lds
mov
adc
scas
adc
jp
repnz
fcomp
popf
ror
addr16
gs
and
lahf
outs
sub
inc
out
shl
loopne
mov
inc
leave
cwde
popf
mov
inc
push
xor
or
stos
cli
mov
jb
das
sbb
rcr
and
jmp
in
popf
sbb
pop
mov
adc
xlat
pusha
dec
outs
add
inc
fwait
dec
mov
mov
sahf
neg
cld
dec
inc
jmp
clc
gs
or
enter
stc
mov
or
cs
push
push
dec
hlt
pop
test
jge
adc
cs
stc
mov
inc
pop
pop
mov
jne
stc
aas
fcmovnbe
stos
outs
sar
and
mov
test
in
inc
rcl
pusha
sub
shl
sti
movs
or
jbe
push
cs
ret
pop
popf
jb
push
retf
pop
fsub
pop
pop
xor
cdq
lds
(bad)
mov
shr
sub
movs
mov
stos
rol
fist
dec
test
mov
in
inc
adc
xchg
push
into
mov
fstp
inc
mov
scas
or
or
pushf
jecxz
pusha
movs
inc
and
daa
mov
leave
and
retf
xchg
mov
xchg
dec
(bad)
ror
dec
or
jnp
les
pop
imul
test
(bad)
fstp
cmp
popf
loop
mov
(bad)
mov
repnz
push
cmps
jl
and
fld
mov
popa
mov
test
jns
add
adc
or
stos
popf
pop
ret
adc
cmps
jmp
sub
pop
dec
dec
dec
push
mov
push
cmp
out
mov
xchg
push
and
inc
mov
dec
retf
push
jbe
push
loop
nop
or
push
push
(bad)
sahf
xchg
sub
out
push
repz
mov
xlat
mov
(bad)
mov
test
ret
loopne
es
retf
push
push
jno
or
iret
push
mov
mov
mov
dec
clc
clc
or
or
and
cmc
or
aaa
cmc
jge
out
mov
sub
hlt
inc
scas
loopne
fucomip
pop
fsub
jp
aaa
(bad)
mov
cmp
ins
out
clc
jae
push
(bad)
(bad)
sti
repnz
cli
sub
fisubr
fld
lahf
inc
lods
add
inc
push
or
int
mov
test
sub
fdivrp
sbb
jmp
sbb
jge
(bad)
addr16
xchg
fcomp
aaa
rcl
mov
sbb
pop
or
aaa
fld
int3
push
popa
jl
inc
stc
sub
add
push
daa
cmp
hlt
xor
rcr
scas
adc
sub
mov
pop
rol
or
icebp
in
add
fnsave
mov
mov
jnp
sub
pop
int
idiv
test
outs
adc
xor
add
test
xchg
call
xor
jno
jae
(bad)
arpl
jge
xchg
and
adc
loope
sbb
sbb
sbb
mov
aaa
add
or
and
gs
popa
pop
dec
inc
cmp
fisub
jp
jmp
cmp
(bad)
sti
iret
push
jle
push
cmps
fcmovnb
mov
pop
jnp
repz
sbb
mov
inc
into
and
mov
loopne
test
mov
push
sub
movs
in
fucom
imul
lds
cdq
push
xor
add
jne
mov
enter
ins
dec
mov
xor
sbb
loope
fwait
ss
jp
sbb
test
js
mov
mov
sbb
pop
lahf
or
test
inc
jmp
repz
push
add
pop
mov
hlt
or
jae
mov
xor
adc
adc
ds
int3
in
xchg
push
je
push
adc
xor
xchg
mov
in
call
xchg
and
je
outs
rcl
sub
out
jmp
xchg
mov
rcr
xor
scas
push
call
in
ja
call
jl
out
daa
test
sar
test
in
out
scas
adc
movs
pushf
jg
cmp
test
cs
adc
in
adc
aaa
call
sahf
cdq
push
mov
push
cmp
push
xchg
adc
cmp
xor
movs
in
jb
pop
movs
xor
fdivr
fsub
xor
cdq
or
(bad)
neg
mov
fistp
scas
(bad)
or
mov
sub
add
or
cmp
pop
mov
sar
add
cmp
das
sub
mov
mov
mov
popa
mov
inc
jno
daa
xchg
adc
fcmovb
mov
xchg
jb
xchg
in
mov
imul
mov
mov
call
jle
fmul
rcl
pushf
sub
add
adc
pop
mov
sar
push
pop
sahf
mov
add
call
ins
iret
mov
mov
push
popa
das
mov
ret
xor
mov
mov
xchg
jmp
dec
sbb
jne
pop
pop
js
es
out
jg
daa
or
into
neg
lods
inc
imul
or
fld
adc
dec
cli
sti
add
push
mov
xchg
xchg
pop
pop
adc
jp
call
mov
jb
pop
loopne
iret
in
jp
arpl
test
or
mov
daa
inc
xchg
xor
cmc
jbe
mov
retf
inc
dec
dec
xor
cli
pop
retf
push
push
mov
dec
mov
push
mov
xor
fisttp
int
mov
lock
sahf
imul
push
adc
ins
jne
dec
fidivr
pop
dec
xchg
lods
mov
mov
xchg
xor
mov
mov
pop
sahf
push
sub
pop
(bad)
push
jmp
xchg
push
cmp
mov
push
enter
jmp
jmp
mov
lods
jl
inc
stos
pop
mov
mov
pop
lahf
mov
push
popf
push
test
stos
push
out
(bad)
repz
and
scas
fstp
fsubr
xchg
sbb
inc
or
std
pop
aad
dec
aas
fldenv
repz
add
mov
je
and
into
sbb
test
cdq
push
xor
sti
lods
in
sbb
movs
push
or
jge
inc
pusha
xor
xor
dec
arpl
sbb
neg
shl
loop
je
push
mov
cmp
es
arpl
clc
or
push
mov
adc
mov
sub
xor
movs
out
cmp
arpl
mov
dec
or
pop
cmp
and
and
mov
pop
outs
adc
mov
adc
int
test
xchg
out
adc
imul
ret
cmps
push
push
cmp
mov
sub
(bad)
cmp
sbb
inc
mov
sbb
ja
(bad)
inc
das
iret
xor
sbb
sti
xor
push
inc
sub
push
pop
pop
xor
popa
jae
xor
rcl
push
arpl
mov
push
pusha
mov
fidiv
xor
ja
fs
aad
ds
push
pop
dec
cdq
dec
lods
jbe
push
mov
repnz
adc
fs
xor
test
dec
mov
popf
fidiv
push
mov
adc
jmp
mov
call
jo
sbb
cmp
rol
mov
mov
hlt
mov
scas
data16
cmps
xchg
inc
jmp
jno
adc
jge
sahf
mov
fs
jno
retf
fild
nop
push
and
in
ss
and
adc
adc
cmp
stos
loop
outs
mov
(bad)
out
stc
fxam
jae
cs
mov
add
daa
xchg
ja
cld
rcl
mov
lock
xchg
jge
pop
sbb
and
or
aas
repnz
push
pushf
mov
xor
ret
xchg
inc
repz
dec
(bad)
jle
push
xchg
(bad)
cmp
push
sub
dec
shl
jno
sahf
pop
or
jecxz
xlat
add
stos
mov
or
movs
mov
cmp
arpl
pop
xchg
mov
lods
ret
leave
or
push
mov
test
les
int
stos
mov
sub
(bad)
push
outs
data16
scas
mov
pop
mov
stc
xor
in
test
iret
into
push
call
adc
shl
push
(bad)
sti
or
lahf
test
clc
mov
cmc
mov
pop
arpl
repz
fistp
pusha
movs
mov
sti
shr
das
fidivr
dec
or
xchg
sbb
mov
inc
xchg
sub
movs
popa
pop
jne
inc
push
mov
dec
es
add
push
clc
test
(bad)
(bad)
ins
repz
pop
pusha
dec
mov
out
adc
dec
add
jns
in
mov
add
cmp
inc
popf
(bad)
aas
and
and
hlt
js
je
sub
adc
adc
jbe
pop
pop
xor
test
sub
jle
jnp
icebp
neg
inc
dec
xor
mov
mov
mov
xchg
mov
mov
jp
sub
adc
adc
outs
xchg
jmp
enter
lods
out
or
or
mov
adc
pop
addr16
pop
mov
jae
jmp
call
pushf
ins
sahf
mov
repnz
xlat
push
mov
sbb
loopne
movs
std
inc
(bad)
imul
test
cwde
inc
imul
cmp
call
ins
movs
and
cwde
out
nop
mov
dec
mov
sti
sti
aam
in
ss
outs
stos
xchg
sub
dec
fst
call
adc
jp
out
add
and
rcl
push
hlt
stc
in
pusha
mov
inc
or
xchg
jp
scas
or
jmp
push
movs
xor
push
push
xor
addr16
xchg
bnd
inc
jmp
(bad)
adc
ss
and
mov
fxch
sbb
cmps
ins
daa
mov
pushf
test
retf
jp
push
div
data16
(bad)
sbb
push
(bad)
ins
shr
push
shl
outs
jnp
iret
movs
cmp
cmc
loop
mov
cld
dec
ret
add
mov
mov
cmp
push
rcr
pusha
ret
mov
lods
imul
mov
outs
out
xchg
mov
jl
dec
sbb
jp
cmp
mov
enter
and
fwait
cmps
jns
push
inc
jge
sub
retf
cld
bound
xchg
add
imul
xor
push
dec
arpl
ss
ret
lahf
out
loop
push
out
(bad)
mov
mov
pop
xor
sbb
or
xchg
dec
push
pop
pop
inc
push
arpl
in
mov
add
imul
cs
xchg
fmulp
into
(bad)
xlat
adc
enter
inc
sahf
sar
arpl
mov
push
mov
sti
call
dec
adc
stos
jb
mov
push
jmp
test
scas
sub
scas
dec
std
adc
inc
fsubrp
xor
movs
inc
inc
mov
add
dec
idiv
(bad)
cmp
sub
(bad)
mov
inc
push
es
punpckhwd
fsubr
in
retf
inc
and
adc
pop
xchg
pop
in
jns
push
call
xchg
sbb
mov
ret
stos
push
lahf
xor
jnp
cmps
add
jmp
pop
inc
pop
test
ins
test
xor
(bad)
fbstp
inc
leave
stos
mov
pop
dec
aad
push
or
ret
adc
pop
mov
mov
inc
pop
fild
dec
movs
xchg
mov
cmp
mov
scas
push
fsub
stos
ss
sub
sbb
lods
test
cli
jle
adc
mov
jge
repz
adc
movs
mov
mov
jl
xchg
mov
lods
sahf
pop
pop
in
xchg
int
jle
jnp
add
lock
dec
icebp
push
dec
pusha
test
pop
fst
mov
jno
xor
add
nop
sbb
inc
pop
push
call
mov
ret
rcl
add
push
lds
inc
hlt
mov
ret
loopne
retf
push
push
inc
xchg
xchg
dec
push
fnstcw
xchg
push
push
test
aam
and
xor
xor
push
jge
inc
pop
and
pop
jb
test
sti
sti
jns
mov
out
cdq
clc
mov
and
pop
jbe
arpl
icebp
cwde
adc
mov
in
dec
sub
or
push
sbb
xchg
popa
dec
shl
leave
in
shl
sbb
cmps
mov
sub
inc
jae
mov
xchg
jp
sbb
cmc
mov
aam
mov
out
push
pop
enter
push
dec
ret
in
inc
dec
mov
push
dec
sub
call
mov
adc
movs
cmps
xchg
outs
add
lods
or
pop
xor
push
mov
fwait
xchg
daa
xchg
das
retf
dec
dec
test
js
push
mov
out
cdq
dec
lock
stos
ins
dec
vmread
repnz
into
lods
sub
mov
adc
pop
loope
jl
das
retf
push
add
repz
jae
(bad)
(bad)
push
xlat
jle
loopne
(bad)
cmc
xor
cli
aam
pusha
and
clc
jecxz
mov
sbb
mov
clc
mov
adc
addr16
add
and
jmp
dec
lds
shl
inc
call
test
js
shl
push
lahf
fs
mov
push
push
lods
mov
cmc
jmp
mov
mov
and
imul
sbb
jmp
or
fidiv
out
fmul
mov
cmp
fcomp
cdq
push
push
loope
out
loopne
or
mov
cmp
add
les
sub
mov
cld
clc
push
adc
out
ins
es
and
jle
or
lds
mov
mov
iret
push
icebp
(bad)
push
push
test
popa
cwde
iret
and
repnz
inc
cmc
push
pop
test
and
or
data16
out
jmp
gs
sub
fs
adc
inc
dec
loop
push
out
test
or
mov
push
out
inc
js
dec
push
cmp
or
mov
dec
repnz
pusha
pop
retf
add
push
fistp
push
sbb
out
and
(bad)
mov
ds
sub
cs
mov
sub
dec
fimul
mov
jns
jae
add
xchg
inc
adc
xor
cwde
add
enter
and
xchg
xlat
out
(bad)
push
stc
pop
mov
das
shr
jmp
dec
jbe
xchg
push
stos
sub
dec
cmc
repnz
shr
pop
and
adc
jns
call
repz
or
es
sbb
xchg
das
cmp
(bad)
bound
movs
pushf
mov
pop
enter
call
test
lock
call
mov
popf
push
std
add
fdivp
outs
imul
xchg
fdiv
xchg
adc
mov
cmp
xor
aam
scas
(bad)
pop
aas
mov
out
fmul
sbb
mov
xlat
fsubr
inc
emms
pop
dec
stos
ret
ffreep
or
push
repnz
dec
add
or
add
retf
retf
fs
cmp
pop
cmps
add
jecxz
lds
loopne
movs
mov
jg
sbb
pop
ss
and
sbb
jae
or
dec
sbb
push
mov
aas
mov
sub
fisub
shl
daa
inc
mov
pop
xchg
xchg
inc
inc
cs
sub
adc
mov
adc
outs
sti
inc
jb
(bad)
jge
adc
cmp
pop
dec
xlat
clc
addr16
sbb
push
test
jnp
mov
adc
leave
cmp
push
adc
push
sar
sub
fcom
inc
push
dec
test
cdq
inc
jno
ss
xchg
add
call
push
cmp
dec
jge
sbb
push
xor
js
inc
ins
aad
mov
js
shl
lea
xor
xor
fwait
bound
lea
xchg
out
pushf
fist
test
loopne
jno
and
call
mov
outs
or
pop
push
jae
bound
jecxz
test
and
sbb
je
xchg
scas
retf
lahf
std
inc
xor
hlt
inc
stos
xchg
fucomip
fstp
sahf
jno
pop
sub
adc
psubw
inc
jbe
ss
iret
cmp
jg
push
out
lods
dec
fldenv
movs
daa
push
mov
mov
icebp
test
ins
repnz
inc
data16
repz
(bad)
loope
test
imul
rcr
xchg
adc
into
sub
lock
add
or
movd
in
fistp
add
push
or
adc
push
dec
stos
fisubr
pop
aaa
pop
int
icebp
mov
sbb
cmp
xchg
outs
movzx
cwde
pop
cli
iret
in
ja
das
xchg
test
pop
icebp
gs
add
mov
shl
cmp
dec
jg
out
jmp
cld
or
mov
cmp
xchg
mov
push
das
jmp
cmp
mov
aam
shl
push
or
inc
mov
cld
mov
cs
pop
or
inc
call
jecxz
dec
and
pushf
xor
fisubr
iret
ins
inc
add
dec
fnsave
xor
ds
pop
ja
inc
leave
cmp
call
imul
or
sub
enter
push
and
test
and
imul
adc
or
mov
sub
push
outs
js
adc
test
es
cmp
xchg
pop
in
mov
fisub
mul
push
or
mov
jns
into
iret
jo
into
adc
loop
(bad)
retf
jmp
out
(bad)
mov
call
(bad)
sub
adc
outs
inc
dec
cmp
dec
push
les
in
aas
push
mov
xor
push
or
mov
out
sbb
fsub
cmc
in
in
xchg
scas
mov
xor
xor
movs
or
rcr
cmps
xchg
jnp
rol
or
sti
leave
aad
call
(bad)
pushf
xor
loopne
out
je
iret
movs
push
cmp
mov
loop
pop
sbb
scas
les
adc
push
jle
(bad)
aam
movs
fsub
iret
jbe
lock
and
or
loope
push
fbld
jle
into
mov
sti
xchg
mov
jne
aam
test
mov
add
retf
(bad)
outs
pop
fwait
and
in
jb
gs
cmp
call
(bad)
cs
imul
aaa
mov
sbb
loope
mov
fcomp
outs
test
xor
add
icebp
sub
loopne
and
shr
stos
push
mov
dec
pop
popf
je
(bad)
loope
xor
adc
shr
mov
mov
scas
cmp
mov
mov
(bad)
adc
loope
sub
imul
jo
mov
jl
pop
les
mov
jg
pop
cli
out
fst
mov
cmc
mov
xchg
gs
fild
adc
add
cmp
or
out
adc
dec
cli
mov
lahf
dec
ret
xor
ror
fwait
jae
xchg
loopne
test
xor
daa
lods
imul
sbb
mov
mov
jl
dec
out
test
inc
addr16
mov
mov
inc
xor
push
sub
leave
sbb
xor
out
cld
ret
jbe
add
pop
pop
mov
(bad)
xor
jbe
jl
inc
(bad)
jnp
nop
lods
dec
repnz
or
(bad)
mov
xor
dec
int3
sbb
dec
repnz
stc
ret
lea
pop
push
data16
mov
push
retf
inc
or
popf
mov
or
nop
jge
repz
adc
stc
and
mov
stos
lock
in
sbb
fadd
fwait
cmps
or
add
aad
rol
and
mov
cmp
pop
in
push
pop
mov
aas
test
aad
lods
lea
jno
or
jmp
int
sub
adc
dec
mov
inc
inc
cmc
loope
ror
pop
ss
daa
lods
cdq
sbb
js
sbb
loop
adc
jno
fs
enter
js
dec
xchg
jae
lahf
fldenv
and
repnz
mov
pop
push
jne
xchg
cmp
ja
aam
loopne
inc
cld
and
jecxz
(bad)
cli
sub
cmp
cmc
cmc
sub
pop
push
cwde
cwde
push
in
outs
clc
inc
scas
sub
hlt
fild
push
mov
jl
mov
rol
loope
lods
adc
ins
mov
add
xor
cmp
mov
sbb
pop
aas
jmp
xchg
mov
fwait
mov
mov
xor
sar
sti
add
imul
mov
scas
ror
int3
pop
sar
cmp
fcomp
push
jmp
cmp
(bad)
sub
push
imul
xchg
mov
add
(bad)
fsub
and
mov
ins
cld
(bad)
ins
push
out
dec
cmp
out
out
xchg
icebp
push
dec
pop
or
shr
icebp
and
add
push
push
ret
dec
fistp
sub
pop
inc
xor
jbe
mov
test
idiv
inc
push
sti
hlt
movs
push
pop
sbb
fcom
adc
push
jo
mov
xchg
mov
xchg
push
jmp
aaa
mov
lods
in
xchg
xor
xchg
jae
mov
xchg
test
and
mov
js
dec
bound
pop
sbb
sahf
in
pop
mov
aad
jecxz
call
sahf
retf
iret
stos
xlat
int
xchg
xchg
sbb
and
mov
cmp
mov
inc
push
mov
out
and
repnz
cmp
movs
push
and
cwde
dec
daa
fdiv
pusha
push
mov
aas
mov
test
pusha
repz
mov
es
cld
(bad)
into
retf
push
xchg
mov
cmp
in
xor
push
inc
(bad)
das
pop
cmp
repz
or
cwde
mov
xchg
mov
or
leave
pop
inc
jae
js
dec
pop
mov
xchg
lea
imul
mov
xchg
add
aaa
fwait
sub
adc
call
sar
bound
shr
mov
and
in
sub
mov
aas
cwde
xor
enter
pop
xor
adc
jp
stos
add
pop
sub
dec
loop
sysexit
cmps
invd
out
inc
idiv
or
xlat
mov
dec
test
cld
stc
call
ret
xor
fidivr
mov
cmp
mov
xchg
enter
xor
mov
push
inc
pusha
je
and
xor
scas
retf
inc
mov
push
adc
out
fs
movs
sub
rcr
scas
adc
jg
xchg
bound
(bad)
sti
xchg
mov
mov
sbb
(bad)
add
inc
xor
ss
(bad)
ds
lahf
std
fchs
mov
sbb
popf
arpl
xor
inc
pushf
and
arpl
loopne
cmp
(bad)
cwde
icebp
mov
lods
jnp
xor
dec
xchg
or
fs
adc
movs
pop
mov
stos
push
pop
or
lahf
fidiv
in
pop
nop
lea
cmps
les
adc
les
mov
or
data16
cmp
outs
int3
repnz
lds
and
or
js
and
imul
pushf
inc
or
imul
and
mov
jns
push
ficomp
sbb
adc
sbb
jge
xchg
mov
mov
inc
cmps
jmp
test
xor
cmp
cwde
dec
popf
add
mov
cwde
movs
mov
and
sbb
ins
or
adc
mov
loop
pop
jnp
push
adc
fwait
sub
mov
mov
cmps
sub
ins
leave
test
ins
dec
mov
movs
addr16
adc
mov
jg
jmp
mov
mov
sbb
xchg
mov
hlt
xor
dec
xlat
jecxz
jb
or
jg
pop
loop
and
js
sub
and
(bad)
mov
adc
fdivr
push
pop
jl
sub
ds
test
adc
movs
faddp
dec
sub
repz
cmps
pop
jae
sahf
cdq
add
pop
sbb
out
out
cmp
ficom
cli
xor
retf
push
data16
xor
sar
fcmovu
lock
mov
mov
and
scas
movs
jmp
cwde
inc
addr16
fld
hlt
xor
push
pop
hlt
shl
mov
pop
cdq
out
jnp
(bad)
xchg
jge
test
xlat
into
mov
outs
inc
gs
fcomi
rcr
call
mov
sub
stos
xchg
sub
call
ds
inc
ficomp
in
outs
mov
cwde
mov
(bad)
lock
ret
xor
xchg
inc
cmp
ins
sub
sbb
nop
int3
inc
or
push
fcom
jb
xor
xchg
out
out
pop
pop
mov
je
pop
xor
add
xchg
xchg
or
xchg
enter
lock
mov
fiadd
into
test
mov
push
or
not
(bad)
int3
scas
repnz
gs
int
sub
push
bound
push
in
cld
bound
jmp
inc
popa
jmp
adc
and
int
retf
and
hlt
test
xchg
jmp
retf
cmps
or
mov
rol
mul
sbb
mov
iret
cmp
lea
pop
cwde
in
pop
test
jl
dec
dec
sbb
stos
fsubr
fsubr
call
addr16
xchg
mov
out
dec
fisttp
retf
mov
movs
jg
xchg
imul
in
out
jl
sbb
sub
jg
arpl
call
mov
int3
cmp
xor
xchg
mov
or
loop
mov
push
push
das
xor
aaa
mov
jp
pop
fcmovu
push
out
stc
fidivr
jl
or
iret
shl
pop
sbb
lods
aad
es
xchg
out
inc
mov
test
xlat
scas
xchg
aad
xor
leave
xor
scas
test
rcl
mov
mov
ins
ret
sub
xchg
add
sti
add
pop
pop
call
int3
fsub
adc
in
xor
xor
dec
push
popa
sub
frstor
bound
(bad)
dec
rcl
test
ret
je
daa
repz
sbb
out
dec
mov
push
cmp
inc
enter
push
shr
sar
lea
pushf
ins
nop
shl
call
mov
(bad)
pop
mov
ins
dec
jl
popa
xchg
adc
daa
icebp
in
inc
aad
or
mov
cmc
pop
(bad)
call
sbb
push
pushf
outs
ret
and
inc
jb
(bad)
jne
bnd
xor
add
add
mov
jae
adc
cwde
mov
ja
(bad)
mov
aaa
lds
(bad)
scas
int3
mov
cmp
mov
xor
das
xor
push
add
mov
and
sti
pop
nop
cmp
scas
(bad)
je
fsub
hlt
out
pop
or
sub
(bad)
cmp
push
repz
loopne
mov
add
(bad)
loop
aaa
xchg
lods
pop
mov
adc
jne
push
sub
dec
sbb
jns
adc
(bad)
aam
imul
xchg
popf
dec
mov
mov
aaa
into
pusha
pop
rcr
jae
inc
sub
mov
neg
in
sbb
and
and
es
adc
sbb
sub
shl
mov
lea
sahf
pop
out
ror
cdq
xchg
movaps
jae
jnp
leave
adc
ret
imul
aam
movs
push
mov
mov
xor
push
cmc
adc
int
call
les
pop
mov
push
mov
adc
or
jp
jae
mov
(bad)
cli
xchg
jle
dec
pop
sub
inc
out
mov
lods
sbb
dec
shl
push
rcr
(bad)
push
cmp
xchg
cmps
cld
jp
test
cmp
sub
scas
mov
add
dec
mov
mov
adc
inc
ror
jmp
jb
pop
jne
jb
les
jle
cld
lds
add
fld
or
and
and
dec
test
mov
sub
lock
lods
sbb
push
jno
(bad)
and
push
push
leave
pop
fimul
out
jg
cs
aas
ss
fisttp
cmps
dec
mov
cmp
and
mov
retf
xchg
inc
sub
lahf
ffree
(bad)
popf
arpl
(bad)
in
imul
sbb
das
inc
mov
pusha
mov
push
add
push
inc
pop
dec
cmp
cmp
mov
mov
pop
sub
mov
lea
inc
push
imul
jp
xchg
out
hlt
inc
sbb
sbb
xchg
jle
mov
and
xor
mov
cmps
mov
out
pop
les
push
int3
add
pushw
(bad)
sub
movs
add
and
stos
sar
adc
mov
jg
aas
test
pop
and
fistp
aad
xchg
or
jl
mov
xchg
retf
retf
mov
call
push
std
cmc
fild
(bad)
or
add
loop
push
std
bound
pop
xchg
aad
aas
or
xchg
neg
mov
(bad)
in
add
mov
inc
sub
jmp
ins
mov
test
cli
in
fisub
mov
pop
mov
and
rol
jmp
dec
mov
in
mov
enter
dec
cld
and
mov
scas
xchg
push
gs
cli
inc
pop
fidivr
dec
cmp
in
and
and
fmul
add
pop
aaa
enter
fs
test
mov
xchg
mov
dec
mov
jo
mov
retf
test
xchg
ret
sub
add
mov
jnp
js
int
sbb
in
fcomip
ins
loope
or
mov
dec
sbb
div
or
pop
push
test
fsubp
xor
out
xor
push
inc
out
and
mov
setno
popa
mov
retf
jl
shl
sbb
shl
inc
(bad)
(bad)
xchg
(bad)
cld
cmp
les
jmp
cld
add
sub
jno
das
arpl
sub
jnp
dec
push
add
adc
xchg
je
lods
dec
mov
loop
push
pusha
inc
ret
aad
jns
mov
loopne
or
mov
movs
jmp
cdq
fimul
leave
cld
repz
fwait
xor
jbe
xor
retf
daa
(bad)
sbb
adc
sub
cmp
(bad)
cmps
and
dec
pushf
xchg
mov
pop
mov
and
inc
imul
cs
push
jbe
fs
or
pushf
mov
cmps
enter
fld
imul
into
mov
sbb
stc
cmp
pop
push
inc
pop
hlt
xchg
addr16
mov
gs
inc
push
popf
cld
mov
adc
fsub
cs
mov
mov
repz
mov
fucomip
pop
test
loop
outs
aaa
(bad)
xor
jg
mov
or
in
mov
cmp
xlat
and
xchg
dec
fist
adc
aas
(bad)
sbb
popf
out
jg
int
iret
test
jg
pop
push
icebp
js
retf
addr16
ja
cmp
adc
add
xchg
pop
test
and
(bad)
pop
icebp
mov
inc
adc
shl
stos
aad
push
mov
cli
sahf
test
mov
sbb
push
jle
fisttp
cli
cwde
test
(bad)
mov
aaa
cvtps2pd
sub
or
mov
mov
or
neg
sub
in
ja
xor
jbe
inc
and
mov
hlt
push
jp
dec
ret
into
in
pop
cmps
out
stos
xor
dec
mov
imul
dec
cmp
mov
test
cmp
ret
into
aad
mov
and
(bad)
inc
mov
mov
repnz
arpl
inc
mov
fs
in
sahf
retf
fstp
dec
fild
xchg
je
inc
call
sbb
sub
hlt
or
jnp
ins
repz
pop
inc
and
movs
stos
ins
or
lods
sbb
pop
dec
fimul
sub
cmp
xor
mov
pushf
bound
bound
mov
repz
fcomp
in
mov
mov
push
pop
adc
pop
div
pop
shr
ja
inc
push
(bad)
adc
xlat
add
push
mov
xchg
int3
loop
sbb
outs
dec
lock
jb
pop
gs
sub
inc
ror
mov
retf
xchg
sub
scas
ret
jle
xlat
stc
loope
cmc
pop
out
into
xor
(bad)
out
test
mov
shr
jno
push
rol
enter
in
repz
fimul
sar
adc
jno
repz
mov
jg
sub
push
jns
shl
iret
xor
and
dec
pop
cmps
push
dec
(bad)
push
inc
adc
mov
pop
call
push
jb
jo
add
sahf
dec
pushf
shr
push
mov
jno
and
pop
xor
lock
mov
xor
push
pop
stos
lahf
jb
push
int
push
sbb
xor
and
cmp
(bad)
inc
pop
(bad)
push
xchg
gs
pop
fild
pop
mov
retf
dec
pop
push
dec
div
aas
jo
push
mov
scas
mov
mov
pop
fstp
icebp
in
pusha
pop
in
mov
fisubr
sub
addr16
adc
rol
shr
xor
inc
and
out
je
pop
push
es
fdiv
mov
xor
adc
pop
addr16
stos
pop
lods
imul
jecxz
pop
popf
(bad)
mov
fcmovnbe
nop
aas
push
enter
enter
mov
test
ja
idiv
popf
dec
ret
fistp
xor
inc
(bad)
jbe
push
dec
sub
push
cli
mov
and
xor
sbb
push
adc
pop
jbe
jmp
push
ror
inc
xor
das
push
add
fistp
in
sub
xchg
sub
lahf
hlt
xlat
jno
movs
out
dec
int
mov
sub
and
loope
repnz
std
(bad)
cmp
(bad)
xor
push
retf
jmp
fidiv
mov
(bad)
js
push
cmp
in
pop
imul
aas
adc
ins
cmps
cmp
add
jecxz
push
bnd
call
cmp
sub
push
in
sbb
stos
in
and
dec
pop
push
pushf
xor
retf
jmp
mov
bound
jp
nop
aas
or
dec
(bad)
xchg
cwde
repz
sub
dec
daa
jno
mov
aad
or
mov
add
stos
jg
sbb
int3
cli
pusha
jbe
ret
inc
pop
test
es
and
ss
cmp
xor
dec
and
ins
dec
jp
imul
cmp
sbb
dec
jo
and
test
in
inc
sbb
popa
outs
retf
cmp
sbb
sbb
jno
pop
xchg
push
repnz
ret
mov
in
pop
dec
loope
and
or
retf
loope
jo
push
scas
jp
out
gs
jmp
aad
ins
(bad)
sti
cmp
sub
jnp
dec
in
jb
and
sbb
mov
and
pop
and
pop
xor
adc
retw
pop
pop
mov
les
or
shr
stos
push
pop
mov
pusha
pop
call
add
ror
lods
mov
add
inc
or
or
ret
pop
imul
or
cs
adc
sub
mov
push
ins
mov
or
dec
in
fstp
xchg
mov
dec
repnz
sub
pop
loop
pop
jp
icebp
inc
mov
inc
aam
push
test
fsubr
cmp
pop
sbb
sbb
and
xor
out
xchg
mov
stos
xlat
mov
cwde
ins
xchg
mov
xor
add
jge
push
scas
add
sbb
adc
or
dec
mov
add
cdq
jle
movs
out
out
jecxz
ja
add
and
outs
or
sahf
push
clc
mov
into
xor
xlat
and
test
out
mov
int3
dec
data16
jae
push
push
jmp
int
fwait
cwde
xchg
xor
scas
inc
test
sub
dec
push
scas
lds
sbb
push
pop
hlt
mov
fadd
pop
mov
stc
rol
mov
pusha
pop
dec
dec
out
rol
xor
jnp
mov
jmp
cmp
pushf
test
aas
ret
fisttp
adc
test
pop
test
mov
pop
daa
add
pushf
fwait
aad
shl
pop
cmp
rol
push
jb
aam
adc
test
int3
and
or
cdq
xor
(bad)
jl
enter
or
mov
or
mov
or
jns
outs
pop
out
out
mov
movs
lahf
xor
fcmovnbe
mov
loopne
xchg
lods
or
mov
mov
jle
dec
mov
daa
out
cdq
into
cmps
(bad)
jg
xor
icebp
pusha
into
in
fsub
mov
arpl
jl
xor
aad
xor
or
sbb
mov
inc
(bad)
push
xchg
fsub
push
fsubr
aad
push
xor
mov
scas
push
cmp
jne
pushf
test
jo
aaa
ds
dec
in
es
mov
imul
rcr
dec
mov
sbb
cwde
dec
dec
adc
cs
pop
mov
adc
sar
cdq
fcmovnb
sbb
outs
lods
mov
pop
repnz
bswap
xchg
sahf
mov
cdq
cs
ret
mov
outs
not
enter
lea
xchg
or
xor
(bad)
cli
movs
fwait
out
mov
dec
mov
adc
cmps
dec
sbb
stos
xor
jno
sub
nop
sbb
sbb
pop
add
xchg
(bad)
ror
call
sti
mov
cli
out
rcr
je
xchg
out
inc
mov
dec
sar
inc
and
mov
jb
inc
scas
mov
dec
ficomp
fadd
stos
and
xor
sahf
mov
int3
fnstenv
add
xor
jnp
sub
ficomp
pop
leave
sbb
jge
rsm
sub
and
clc
jmp
jmp
or
sub
cli
shr
sub
fild
push
enter
mov
stc
jp
pop
dec
mov
pop
sbb
movs
mov
into
in
cmp
ja
imul
or
ins
inc
and
dec
loope
mov
int
mov
add
xor
mov
loope
add
adc
push
out
out
dec
pop
and
adc
or
lock
(bad)
cmp
or
sbb
push
fcomp
(bad)
aaa
mov
push
mov
iret
mov
push
sub
mov
add
adc
pop
pop
stos
rcl
scas
jnp
pop
jmp
arpl
sub
ins
not
fsubr
cmp
pop
out
xchg
loope
out
xor
xor
xchg
or
jae
jp
fsubr
out
sub
std
les
aam
movs
pop
xchg
movs
out
lahf
test
addr16
movs
xor
push
and
xor
addr16
xchg
arpl
mov
out
cdq
mul
xor
mov
rcr
lods
mov
mov
loopne
arpl
popf
fnstsw
ins
pop
ins
jb
jns
jmp
jl
cmp
jo
ret
sbb
ror
mov
mov
dec
push
fimul
mov
xchg
xchg
out
and
xor
add
stos
mov
adc
mov
and
mov
sbb
dec
add
cdq
dec
adc
mov
jge
nop
mov
and
inc
pop
out
ins
not
nop
clc
nop
nop
in
xchg
lahf
mov
and
test
or
mov
pop
cdq
call
pop
(bad)
pop
or
jno
das
je
jp
pushf
cmp
ss
shr
sub
jno
mov
(bad)
push
popa
mov
mov
ds
mov
popf
test
test
pop
mov
fs
and
popa
outs
xor
je
pop
cmps
mov
mov
adc
inc
push
je
jns
retf
jmp
mov
popf
xor
je
push
xor
retf
jle
shl
int
cmp
fidivr
(bad)
je
mov
inc
in
add
rcr
jle
scas
ins
loope
mov
mov
ja
leave
mov
cli
adc
clc
sub
pop
bound
(bad)
mov
ins
ja
retf
cmp
test
dec
cdq
in
push
adc
into
adc
xlat
sub
xor
jmp
repnz
xchg
sub
dec
icebp
inc
aad
cli
push
inc
xor
mov
mov
cmp
fmul
dec
xchg
cmps
mov
push
push
mov
jno
popf
pop
jmp
ret
jle
add
gs
fadd
inc
xor
pop
std
pop
add
icebp
stos
aaa
mov
retf
stos
data16
or
nop
arpl
imul
stos
loop
(bad)
mov
inc
mov
call
ret
mov
pushf
adc
lods
pop
xor
mov
cld
sub
pop
mov
jecxz
mov
jmp
pop
rcr
loop
cmp
lea
jmp
ins
cmp
mov
movs
sar
mov
out
dec
cli
pushf
ret
sbb
stos
mov
inc
(bad)
adc
or
jne
push
mov
dec
xor
out
imul
or
aas
fild
ret
test
outs
(bad)
push
jae
jnp
dec
cdq
or
test
out
xchg
popa
sub
pop
cmc
adc
push
xor
mov
pop
jno
mov
jno
out
xor
lds
and
dec
add
adc
pushf
fiadd
mov
cli
hlt
scas
push
mov
sbb
push
inc
std
mov
and
mov
jmp
add
cmp
lods
cmp
adc
fiadd
in
ja
sub
xor
mov
jl
ficom
push
pop
pop
iret
inc
mov
outs
ins
aaa
xchg
pushf
repnz
shr
adc
mov
mov
mov
gs
sbb
push
les
jmp
jp
popf
clc
rcr
sbb
xchg
mov
jecxz
mov
or
push
repnz
jp
add
ins
bound
ins
adc
retf
xor
sbb
mov
push
xchg
outs
sub
jle
inc
adc
aaa
out
sub
repz
jecxz
cwde
add
pop
pop
sbb
test
shl
es
push
stos
dec
and
adc
movs
and
scas
jmp
hlt
retf
cli
xchg
in
dec
movs
xor
outs
add
cmp
mov
cdq
out
xchg
shl
mov
inc
jp
cmp
cli
call
mov
out
int3
mov
rol
jecxz
jne
aaa
lods
push
fdiv
movs
loope
mov
mov
pop
jae
je
(bad)
shl
pusha
push
ret
jmp
push
push
sbb
popf
mov
jp
push
adc
inc
jne
and
loop
pop
push
mov
mov
push
lods
mov
cmp
push
xor
js
ficomp
loopne
call
lods
xchg
aam
push
loop
mov
jle
lds
xor
cli
dec
pop
sub
nop
push
mov
aam
retf
mov
push
mov
in
pop
inc
mov
inc
and
lods
pop
adc
(bad)
call
shl
xchg
adc
mov
cmp
aam
int
stc
jmp
movs
mov
cdq
shl
jno
and
mov
(bad)
xchg
mov
inc
fisttp
outs
cmp
fwait
popf
xchg
jp
adc
mov
sbb
cmp
sar
mov
sbb
leave
add
hlt
test
dec
and
cmp
jns
mov
or
ja
cmps
movs
cmp
aas
stos
sbb
jne
sub
cmc
aas
iret
mov
ja
push
jecxz
add
push
mov
(bad)
pop
dec
dec
popf
int
scas
call
mov
movs
(bad)
rcl
dec
retf
addr16
xchg
fsubr
lahf
push
(bad)
jge
and
cld
loopne
iret
loopne
jmp
(bad)
gs
pop
xor
sbb
mov
add
push
sahf
dec
push
test
ins
pop
adc
test
out
jmp
jae
xchg
cmps
icebp
stos
cwde
xor
out
inc
mov
das
or
sar
dec
mov
mov
sbb
enter
jb
dec
mov
pop
cmp
rol
(bad)
push
cmp
in
rcr
dec
push
inc
mov
and
outs
lahf
fwait
cmps
into
aaa
loope
push
clc
fdiv
movs
sbb
xor
mov
mov
push
xor
mov
call
dec
and
clc
sbb
cmps
add
pop
pop
scas
and
jecxz
arpl
xchg
sbb
dec
push
outs
mov
call
test
inc
aad
aad
test
push
dec
cwde
ins
mov
jl
into
pop
pop
bound
fwait
jb
call
or
movs
inc
mov
cmp
cmp
push
pushf
push
inc
in
sbb
mov
int3
cmp
stos
cmp
mov
inc
movs
push
inc
mov
pop
push
arpl
sub
lods
bound
xor
lea
rcl
jne
inc
jmp
(bad)
mov
sbb
ja
jbe
push
out
in
add
push
add
mov
inc
fmul
mov
push
neg
adc
popf
lods
ins
or
loop
cwde
mov
outs
jecxz
fs
dec
loope
and
sahf
sub
adc
mov
adc
imul
mov
pop
fnstcw
adc
dec
stc
pop
cmp
test
lds
mov
jmp
fwait
adc
and
or
mov
inc
enter
mov
push
popa
ds
jo
and
mov
and
push
inc
call
xchg
mov
popf
xchg
mov
xchg
or
inc
push
jno
leave
sub
stos
and
adc
pop
fld
stos
xchg
mov
jl
sbb
jns
jns
(bad)
mov
popf
and
push
mov
(bad)
ja
sbb
or
jmp
mov
out
push
daa
adc
pop
push
add
xchg
pop
and
dec
fwait
iret
xchg
popf
ja
inc
mov
mov
jle
mov
stos
mov
add
sti
into
rol
xor
imul
ins
fisttp
(bad)
or
jle
jl
mov
arpl
xor
cmc
lock
jns
add
cwde
mov
cmp
add
retf
jae
jnp
scas
mov
mov
sbb
out
push
sbb
int3
fcom
jbe
in
mov
lods
or
and
jmp
or
push
jmp
sbb
cdq
ds
stos
push
dec
adc
out
mov
push
pop
enter
inc
xor
pop
call
jnp
dec
movs
iret
or
or
mov
pop
ja
retf
lds
sar
mov
mov
arpl
cmc
add
lahf
dec
mov
std
cmp
je
cmp
ins
ror
dec
ins
dec
mov
inc
mov
jbe
stos
repz
xor
or
inc
loopne
add
fist
lods
lahf
outs
inc
ds
mov
mov
ins
gs
jge
inc
adc
fisttp
jmp
or
and
ss
fwait
ror
imul
iret
rol
adc
sbb
sahf
xor
bnd
cmp
out
and
mov
adc
dec
movq
mov
in
or
jg
(bad)
loopne
movs
ja
ret
mov
or
fimul
test
scas
repnz
and
jne
mov
sar
mov
ficom
leave
add
hlt
pop
cmp
sub
cmc
in
call
mov
lods
xchg
call
setae
dec
inc
ins
nop
lods
popf
xchg
xor
xchg
in
test
push
xor
repnz
sbb
push
loope
scas
leave
add
fidiv
mov
inc
lock
cdq
dec
sti
clc
push
sub
daa
pop
xor
pop
jbe
test
add
jnp
jg
xor
sti
pop
and
imul
aam
test
es
jae
xchg
dec
sti
inc
pop
shl
rol
cwde
and
aas
ss
ds
(bad)
cli
(bad)
add
ret
cmc
mov
xor
jmp
xchg
int
sub
lahf
jb
inc
mov
jmp
xchg
dec
mov
stc
xchg
aam
and
imul
es
xchg
hlt
sub
sbb
ins
xlat
ins
add
xor
enter
mov
push
dec
inc
sbb
scas
adc
lods
push
inc
inc
xchg
jle
out
lea
pop
pop
(bad)
sbb
lods
fisttp
fs
fidiv
xchg
test
add
ins
sbb
pop
ret
push
retf
xchg
mov
cdq
cmp
hlt
jno
into
xor
repnz
add
cmps
fiadd
sbb
jno
rcl
movs
shl
adc
xchg
mov
jmp
movs
push
add
ficomp
pop
jnp
call
test
cmps
mov
sbb
out
mov
cli
add
adc
mov
sbb
scas
push
mov
(bad)
mov
(bad)
leave
imul
lea
lock
fisttp
inc
cwde
ins
bound
sub
or
into
jne
cdq
mov
pop
sti
ja
jne
scas
xchg
mov
lods
out
les
xchg
mov
jecxz
clc
push
call
in
inc
jbe
mov
jnp
or
adc
or
movs
int3
out
mov
pushw
cs
and
and
dec
mov
cmps
xor
push
mov
(bad)
jnp
fwait
pop
scas
mov
mov
icebp
gs
jns
in
lods
leave
loope
inc
mov
add
jo
ret
(bad)
fild
loope
xchg
mov
sub
mov
mov
push
push
mov
inc
push
cmp
dec
push
cmp
mov
or
xchg
ret
cld
aaa
lods
xchg
(bad)
retf
mov
mov
fxtract
pop
iret
cld
mov
inc
xchg
push
test
adc
mov
cdq
dec
pop
jmp
(bad)
fstp
add
fdivr
sub
push
aaa
sub
movs
dec
dec
popa
repz
sbb
loop
mov
and
dec
fldcw
packsswb
push
xchg
loope
mov
test
into
les
inc
test
dec
lods
sub
push
pop
daa
add
ds
sub
ror
mov
push
jae
popa
in
add
sbb
xchg
sub
ret
push
push
pop
icebp
dec
out
sahf
xchg
(bad)
into
sbb
leave
xor
movs
push
in
dec
ds
xchg
cmp
pop
push
imul
shl
movs
xchg
cld
mov
jae
cmc
xchg
sbb
sbb
fsub
arpl
gs
cs
mov
mov
leave
pop
int
pusha
pushf
daa
cmp
ficom
rcl
int3
sbb
lea
sub
cmps
cmp
dec
pusha
and
and
ja
in
or
jmp
(bad)
stc
xchg
mov
sbb
dec
and
retf
jmp
scas
xchg
jl
pop
jns
adc
inc
cmp
retf
rcl
sbb
in
int3
les
cmp
rol
das
js
jnp
xor
js
retf
shl
stos
cmp
push
xchg
mov
mov
adc
add
call
cli
jp
pop
xor
mov
scas
push
jmp
out
xor
pop
pop
retf
(bad)
mov
out
push
add
into
cmp
push
mov
add
test
movs
fistp
frstor
adc
push
and
jge
add
repnz
outs
jo
add
popa
cmp
js
(bad)
jle
(bad)
enter
pop
dec
retf
push
ror
out
pop
aam
add
adc
sub
and
push
adc
add
mov
addr16
xlat
aad
mov
sbb
cmps
fldcw
sub
sub
cmp
push
and
mov
aas
std
dec
sub
(bad)
and
mov
and
in
lock
adc
dec
pop
setbe
imul
(bad)
mov
pop
test
imul
rcr
mov
mov
push
pop
fiadd
cmp
stc
push
or
add
sbb
mov
imul
cld
outs
fnstsw
ds
xor
sbb
pop
jle
jno
test
out
push
test
push
in
test
into
mov
hlt
fadd
push
jne
cmp
mov
push
dec
push
call
pop
ret
loope
pop
sbb
jbe
call
mov
imul
xchg
aam
xchg
imul
mov
packsswb
ret
outs
mov
cli
dec
lods
cmp
mov
adc
mov
xor
jnp
adc
and
pop
(bad)
xchg
sbb
(bad)
sti
xor
mov
pop
sbb
retf
or
popa
retf
popa
data16
mov
clc
mov
inc
pop
pusha
push
stos
sbb
push
test
bound
adc
pop
sub
mov
add
sub
scas
xor
dec
and
out
scas
xchg
sbb
cmp
loope
mov
arpl
jp
adc
mov
inc
loopne
mov
xchg
fild
mov
mov
rol
jmp
pop
jno
or
pop
or
and
mov
pop
mov
push
stos
out
add
or
dec
adc
adc
xor
mov
hlt
data16
xor
cmp
inc
(bad)
aam
jg
lods
ja
xor
rol
lods
inc
inc
xchg
push
sub
jg
aas
clc
and
scas
leave
inc
sar
aad
pop
out
daa
rcl
in
fdivr
push
xchg
ins
aas
pop
xchg
xchg
xchg
xor
mov
in
or
scas
mov
pop
outs
call
shl
pop
ins
cmps
xchg
xor
jl
addr16
jne
or
int3
sub
cmp
mov
mov
adc
sbb
mov
pop
push
mov
mov
cwde
xchg
cs
fisubr
das
int
pop
sub
aam
shl
fimul
lods
gs
inc
repnz
test
mov
xchg
mov
mov
(bad)
push
icebp
aam
fild
mov
and
jge
jmp
xor
pop
mov
gs
dec
dec
mov
jae
ror
mov
out
cmps
dec
mov
mov
dec
mov
sbb
ins
or
and
(bad)
mov
pop
ret
push
rcl
ja
rcl
mov
xor
or
aas
fcomip
xchg
mov
fnstsw
stos
imul
push
pop
dec
iret
fldenv
add
loope
jb
popa
mov
stos
popf
(bad)
mov
mov
pop
jp
scas
push
ret
xchg
punpckhbw
cmp
sub
dec
in
mov
popf
fdivr
inc
(bad)
scas
inc
pop
pop
hlt
sbb
xchg
inc
push
gs
sub
popa
movhps
xor
cmps
pop
push
into
loop
out
mov
or
jle
loopne
les
dec
xchg
loopne
ss
je
loopne
repz
pop
(bad)
mov
outs
in
imul
rcl
sti
leave
mov
ins
pop
xor
aas
test
adc
inc
ja
(bad)
imul
das
push
push
rcl
xor
mov
hlt
pop
xor
pop
jno
xor
hlt
sub
mov
(bad)
fisttp
dec
nop
call
inc
dec
cli
xchg
jnp
lods
xchg
shl
sbb
lds
push
(bad)
das
sub
jp
cmp
leave
push
fdivr
add
cmp
adc
pushf
inc
leave
add
fist
cmp
or
cli
jno
shr
rol
retf
dec
sub
cli
xchg
test
sbb
movs
xchg
or
fldcw
sub
sub
hlt
xor
inc
paddq
repnz
(bad)
sti
cmps
or
shl
bswap
mov
jnp
and
or
fisub
sbb
shl
mov
mov
aam
sti
xchg
mov
shr
sub
xchg
add
inc
jns
retf
adc
xor
or
lods
aaa
push
push
mov
je
xor
dec
ja
aas
mov
cmp
rol
jmp
lahf
xor
xor
add
xchg
xor
jle
pop
jno
in
hlt
jb
adc
add
jno
pop
aad
loopne
fcomp
push
sbb
gs
push
scas
jg
dec
dec
bound
sbb
(bad)
cmp
xchg
scas
jmp
xchg
hlt
(bad)
lods
add
inc
xchg
test
xor
loopne
nop
mov
cdq
xor
xor
fdiv
xor
fnsave
sub
retf
fldcw
aaa
jge
movs
dec
enter
repz
xor
into
xor
inc
cmp
test
jno
push
jbe
leave
jns
xor
ret
add
test
or
call
mov
xor
(bad)
xchg
sbb
sbb
cmp
jo
call
aam
das
and
shr
ret
mov
adc
loope
lods
xchg
les
loope
xchg
cmp
xchg
and
push
or
jmp
aas
xor
lea
jnp
pop
imul
aaa
clc
fnstcw
(bad)
mov
les
inc
inc
in
xchg
sub
mov
ja
sub
fld
int3
lods
push
push
adc
std
cli
or
in
pop
rcl
adc
(bad)
aaa
mov
inc
mov
stos
test
add
mov
mov
xchg
test
mov
movs
outs
cmc
or
sbb
add
repnz
ins
add
cmps
and
jg
fsubr
lods
or
jg
addr16
inc
adc
xchg
inc
pusha
adc
lods
inc
sbb
adc
or
sub
mov
lahf
mov
ss
outs
sub
inc
xor
jl
leave
push
cdq
scas
in
mov
inc
sub
inc
and
daa
xchg
sub
inc
test
mov
xor
dec
dec
mov
cmp
cmp
jl
cwde
mov
mov
nop
or
add
aaa
xor
sar
xchg
popa
cmps
outs
rol
movs
ror
push
stos
pushf
jg
sahf
jg
imul
pop
stos
dec
jbe
popa
inc
mov
lahf
fucomi
adc
push
cmc
fild
rcl
sub
mov
movs
lahf
mov
jne
mov
in
leave
push
mov
dec
dec
sbb
mul
pop
test
inc
rcl
loope
xchg
pop
mov
loope
xchg
cmp
popa
test
in
icebp
stc
push
pop
jge
stos
jnp
icebp
sub
mov
sysenter
ss
ror
adc
out
pop
cmp
adc
ja
je
xor
push
sbb
pop
pop
sbb
and
jmp
or
cmp
loopne
push
pop
jne
add
cdq
adc
into
shr
call
call
aaa
jle
loope
stos
(bad)
lods
or
cmp
and
call
mov
mov
cmp
add
popf
or
out
pop
inc
pop
push
loopne
xchg
mov
mov
out
sbb
ror
(bad)
fild
adc
mov
es
(bad)
xchg
inc
cmps
mov
xor
pop
mov
jmp
sub
push
ret
in
inc
imul
cmp
jp
pop
add
jae
inc
sbb
loopne
shr
mov
pop
cdq
push
xor
scas
pop
in
cmp
cmp
data16
dec
sub
ins
cwde
clc
pop
mov
jp
sub
push
lea
pop
dec
push
adc
lods
push
pop
xor
add
jl
fcom
rcl
inc
test
add
mov
push
fldenv
aad
add
scas
cmp
(bad)
lock
cmp
fimul
test
sar
in
push
cmc
cmps
arpl
jle
mov
add
sbb
and
ins
pop
mov
pushf
cmp
sbb
retf
stc
(bad)
or
sub
dec
fidivr
xchg
clc
sahf
xchg
push
cmps
pop
aam
bnd
add
cmp
cmc
daa
xor
pop
les
push
test
xor
dec
retf
les
sub
xchg
cld
es
jge
retf
push
sub
in
(bad)
nop
stos
iret
stc
in
loope
mov
aad
push
xchg
mov
push
ss
pusha
cmc
shl
mov
clc
xchg
mov
call
inc
xchg
inc
shl
push
pop
rcr
inc
pop
xor
fdiv
mov
inc
jge
and
data16
ins
inc
mov
add
xlat
push
sub
adc
jge
sub
pop
fld
cmps
shr
xchg
push
lock
ja
(bad)
inc
xlat
jge
and
sar
pop
jl
xor
test
loopne
push
xor
adc
xor
dec
xchg
fcmovu
test
dec
mov
xlat
adc
add
jae
ret
sub
dec
and
ins
mov
adc
mov
dec
in
or
cmp
or
in
inc
adc
jnp
mov
dec
sar
mov
or
xchg
and
popa
std
in
xor
xor
and
cmps
out
jns
or
mov
ror
shl
sbb
mov
mov
sar
pop
arpl
imul
imul
lahf
and
push
or
mov
rcr
ret
add
adc
(bad)
fnsave
mov
cs
push
sub
cdq
ja
pop
jmp
mov
inc
mov
fwait
mov
sub
jle
cmc
inc
jno
lock
or
xchg
bound
stos
(bad)
out
sbb
push
loop
cmp
retf
in
xor
hlt
sbb
or
push
outs
js
push
addr16
ins
dec
xchg
mov
cmps
pushf
mul
inc
sub
retf
jns
inc
cmovge
xor
sbb
stos
add
push
and
adc
cwde
pop
push
rol
xchg
jae
jg
pop
xor
(bad)
xchg
mov
out
and
mov
push
outs
lock
test
mov
sbb
mov
adc
lods
sahf
(bad)
ret
loopne
sub
fs
arpl
cmp
lock
jb
add
inc
mov
dec
pop
xchg
cmps
jmp
sub
push
clc
call
inc
es
dec
popf
adc
lea
in
bnd
or
cmp
push
inc
pop
push
test
sub
mov
jmp
sbb
mov
add
and
fist
mov
test
addr16
dec
leave
add
hlt
pop
or
jae
sbb
in
adc
jbe
mov
or
loopne
adc
test
scas
xor
and
push
mov
fs
sar
(bad)
scas
add
inc
cmp
adc
xchg
stc
mov
jae
dec
pop
call
xlat
shr
mov
mov
xor
sti
imul
cmp
fsubr
push
dec
cld
pop
fs
adc
fadd
inc
xchg
sbb
jb
(bad)
daa
sar
fidiv
test
and
fwait
sti
movs
pop
sub
mov
mov
adc
cmp
popf
jmp
mov
pop
hlt
inc
push
xchg
lods
dec
xor
mov
lods
mov
shl
and
adc
test
push
imul
call
enter
xor
fs
out
scas
mov
jae
imul
add
cld
xlat
adc
xor
sbb
mov
sbb
cmps
push
or
cmp
popa
xlat
sti
clc
xchg
mov
and
cmp
lahf
xor
cmps
and
cmp
dec
add
mov
xchg
int3
add
mov
sub
dec
fmul
dec
adc
lock
mov
lock
mov
push
fwait
rcr
cmp
ds
cmp
inc
test
(bad)
arpl
mov
test
imul
push
and
scas
mov
add
imul
into
sub
mov
cmp
xor
xor
pop
sar
jmp
adc
sbb
imul
push
sub
popf
ret
push
mov
xchg
jae
and
jl
int3
aaa
sub
outs
daa
sbb
cmps
jge
push
push
aas
leave
fimul
dec
cmovne
cmc
or
inc
push
or
or
scas
imul
pop
inc
in
cdq
dec
dec
fistp
xchg
mov
ret
sbb
pop
fdiv
loopne
mov
sbb
pop
mov
push
mov
in
pop
sub
stos
daa
sub
nop
dec
push
cs
cmp
jmp
jns
loop
rcr
sbb
inc
jmp
pop
dec
(bad)
mov
sbb
out
sbb
or
mov
sub
adc
movs
out
inc
or
adc
sub
lea
xor
sbb
sahf
into
outs
mov
es
lock
xchg
data16
out
and
mov
mov
sub
jecxz
xor
mov
dec
or
sbb
outs
arpl
out
add
loop
ret
mov
add
inc
into
xchg
jmp
neg
mov
fstp
inc
and
mov
inc
fwait
lea
mov
push
js
push
mov
push
mov
sti
push
imul
mov
hlt
push
stc
std
jmp
adc
sub
jns
jo
in
inc
mov
mov
dec
and
repnz
jg
mov
push
out
sbb
lea
mov
pusha
cmp
add
dec
and
into
mov
das
pop
jo
test
jl
add
fwait
test
mov
sub
nop
frstor
and
cmp
test
shr
xchg
outs
mov
ror
mov
and
xor
cmp
xchg
dec
mov
adc
fdiv
cmp
sub
repz
xlat
test
dec
inc
or
or
leave
mov
push
add
daa
ins
(bad)
sub
xor
cmp
cmp
fs
mov
xchg
mov
into
ja
repz
xchg
xchg
ror
xor
popa
pop
pop
(bad)
adc
sub
leave
movs
xchg
add
sub
xchg
arpl
add
and
pusha
mov
imul
fs
arpl
outs
sbb
cdq
or
jmp
push
fild
add
imul
retf
sub
fsubr
jns
adc
out
pop
mov
jno
and
inc
ror
xor
jecxz
cmc
adc
pusha
push
out
ret
scas
and
ret
add
xchg
jae
cs
adc
jg
pushf
add
out
neg
je
test
xchg
mov
imul
add
jp
rcl
or
cmp
call
or
mov
mov
outs
pop
inc
movs
xor
leave
jge
or
loope
push
inc
sbb
inc
push
mov
adc
mov
test
stc
lds
mov
test
cld
dec
jb
pop
pop
cmp
or
test
xchg
mov
and
push
ss
sbb
sbb
dec
inc
jmp
pop
mov
cmp
in
adc
jmp
cmps
fpatan
mov
mov
mov
daa
dec
pop
enter
in
nop
xchg
mov
mov
std
ins
push
sbb
jmp
mov
push
dec
inc
sub
push
daa
jle
loop
mov
fs
pop
shr
int
(bad)
enter
push
mov
jne
call
sbb
scas
xor
mov
mov
(bad)
jle
and
sti
sub
mov
fld
clc
dec
xor
mov
ret
push
inc
imul
ret
add
outs
imul
std
inc
aas
adc
jmp
sub
loop
push
inc
es
sar
pop
data16
(bad)
(bad)
dec
out
xor
clc
clc
sbb
aam
clc
push
mov
mov
dec
fld
inc
cmp
(bad)
js
mov
sbb
mov
push
lds
pop
icebp
in
fbstp
mov
inc
lods
shr
mov
jbe
jns
int
add
shl
pop
xor
push
aam
pop
push
xchg
push
xchg
rol
movs
popf
push
setge
xchg
stos
int
push
mov
icebp
cmp
mov
dec
and
jle
sar
sbb
push
jl
loope
lahf
pop
imul
lea
inc
stos
fld
sahf
sub
mov
jmp
gs
push
xchg
sbb
int
dec
lods
sbb
out
adc
pop
popf
xchg
sti
test
loope
cmp
and
push
rcr
cmp
sub
cld
and
cmp
mov
inc
pop
or
cmp
push
cmp
fld
inc
and
xor
movs
cs
inc
aam
lock
outs
cmp
test
std
mov
and
out
lahf
push
dec
push
cmp
fcomp
les
mov
xchg
stos
xlat
sahf
call
aam
sbb
lods
cmp
push
mov
or
test
inc
clc
stos
sub
lods
xchg
fist
jns
mov
sbb
xchg
jl
gs
inc
push
add
and
ins
les
adc
mov
fldl2e
vpackuswb
ss
icebp
push
pop
add
fiadd
and
retf
xchg
dec
sub
pop
(bad)
retf
push
pop
adc
and
leave
icebp
push
mov
les
fldcw
call
ja
or
mov
retf
movs
je
lods
int3
or
in
sahf
out
mov
std
jl
stc
or
sbb
cld
fcmovu
rcr
pusha
xchg
test
cmps
jne
addr16
in
add
scas
loope
ins
inc
stos
arpl
iret
jp
xchg
dec
ror
test
adc
push
xor
imul
pop
adc
aas
idiv
lods
mov
dec
add
push
dec
out
(bad)
fcom
stos
outs
sub
and
hlt
or
cwde
rol
jne
or
test
sub
xchg
aam
pusha
sub
push
ror
ret
in
mov
xor
loopne
popf
push
movs
push
int3
fdivr
ds
pop
inc
or
rcr
push
mov
addr16
dec
ror
mov
adc
je
fidiv
pcmpgtw
cld
mov
xor
sahf
daa
sbb
movs
inc
fs
or
je
aaa
std
test
jecxz
sbb
cmp
xor
(bad)
jb
xchg
fsub
inc
mov
retf
les
xor
mov
push
fisttp
out
je
std
(bad)
sbb
jb
(bad)
push
or
cmps
ret
and
mov
imul
xor
dec
mov
or
je
ss
mov
inc
sub
addr16
(bad)
mov
and
or
loop
add
scas
xchg
movs
(bad)
xchg
outs
mov
or
out
pushf
push
dec
mov
shr
push
xlat
dec
mov
fdivr
fnstsw
xlat
mov
mov
int
bsf
ins
(bad)
icebp
jge
stos
std
jmp
cmp
xor
imul
cmp
sub
mov
pop
xchg
std
sub
adc
cmps
mov
out
inc
inc
fs
shr
or
jl
shr
lds
iret
mov
test
jno
ins
dec
(bad)
jecxz
dec
inc
sbb
(bad)
push
jg
xchg
mov
movs
jmp
out
jne
mov
cmps
mov
sbb
mov
xor
arpl
jl
repnz
sub
jo
mov
movs
dec
jns
scas
not
in
xchg
lds
inc
(bad)
cmp
rcr
ja
mov
adc
mov
adc
out
mov
ja
mov
or
cmp
xor
pop
(bad)
push
jne
xor
mov
int3
cmp
cli
fcomip
jmp
cwde
aam
mov
outs
adc
lods
cmp
add
mov
arpl
bound
mov
stc
into
nop
js
cmp
and
pop
pop
enter
aam
in
aad
lock
scas
addr16
jnp
sbb
inc
pop
es
xchg
daa
sub
ficomp
xlat
out
stos
ror
das
xchg
sub
and
jmp
mov
adc
sbb
xlat
add
fidiv
fnstsw
mov
ret
std
hlt
sbb
pop
(bad)
xchg
js
lds
adc
sbb
sub
mov
in
mov
inc
add
mov
xor
push
outs
repnz
scas
pop
cmps
ss
jecxz
retf
pop
mov
mov
xor
pop
sub
call
fadd
sbb
sub
sbb
idiv
dec
daa
cmps
lds
cmp
sbb
adc
push
or
mov
jge
push
adc
scas
xor
es
mov
add
mov
adc
jecxz
inc
rcr
sub
aaa
mov
adc
sbb
or
sub
jmp
xchg
stos
mov
out
mov
ins
clc
cld
mov
inc
lods
or
mov
les
outs
sbb
dec
popf
jg
loope
jne
mov
aad
imul
out
ins
fistp
push
mov
jge
jecxz
loope
stos
cdq
add
push
cwde
adc
dec
push
(bad)
mov
inc
cmc
cdq
loopne
push
lods
lods
adc
shl
out
adc
loope
int3
and
mov
add
dec
pop
push
dec
adc
cwde
arpl
sti
arpl
stos
aam
xor
xchg
dec
add
sti
loop
add
das
add
adc
or
dec
push
icebp
adc
adc
sar
shl
adc
mov
lea
jbe
mov
or
inc
mov
adc
push
out
rcr
cmp
dec
jp
mov
fbld
ficomp
fwait
in
clc
shl
jle
loopne
jp
sub
fldenv
aas
out
dec
jbe
sub
push
jbe
dec
out
cmps
in
jg
dec
and
ror
jmp
test
pop
push
icebp
retf
cmovle
sbb
lds
and
jp
mov
or
pop
leave
cmp
ja
push
je
retf
dec
ins
sbb
repz
cmc
std
xor
add
mov
hlt
into
test
push
or
fwait
push
div
addr16
cli
pop
mov
xlat
and
push
jno
sbb
and
mov
jge
rol
lds
inc
xchg
out
or
mul
pop
inc
inc
sbb
cwde
or
iret
add
test
out
cmps
call
cmc
pop
sbb
(bad)
fstp
inc
sbb
mov
pop
sub
call
mov
inc
sub
xchg
dec
clc
cmp
call
into
aad
test
or
shl
repz
ficom
pop
xchg
fucomi
test
xchg
shr
int
imul
out
mov
call
mov
std
dec
cs
cwde
mov
push
in
mov
outs
xor
xor
dec
jmp
pop
jo
cld
fcom
dec
mov
or
and
mov
jne
cmp
stos
pop
sbb
call
ins
pop
lock
loope
sub
add
xor
dec
jle
pop
adc
imul
jmp
fisub
loopne
pop
mov
xlat
or
lea
inc
mov
sbb
xchg
lods
add
and
mov
inc
popf
aad
xchg
pop
mov
lds
adc
ins
jmp
mov
mov
pop
inc
int
push
je
jae
add
aad
push
add
stc
inc
bound
push
cmps
clc
push
leave
fisubr
bound
dec
cli
pop
sahf
jg
cmp
ins
inc
fdiv
or
cmps
jecxz
push
mov
sbb
stc
(bad)
dec
mov
inc
scas
cmps
movs
mov
add
adc
sbb
mov
cli
stos
test
(bad)
gs
imul
inc
xor
pop
rcr
imul
in
adc
in
sub
push
fnstenv
shr
push
mov
sub
rcr
rcl
xchg
dec
inc
sub
in
outs
(bad)
rcl
or
mov
sub
xchg
movs
out
jp
inc
xor
cli
xor
mov
loope
(bad)
(bad)
stos
inc
aaa
fisub
pop
enter
inc
stc
sub
xor
test
les
inc
fs
pop
lds
dec
in
(bad)
repz
cmp
leave
ja
xchg
sar
movs
mov
adc
jmp
add
cli
je
xor
cwde
imul
retf
jne
(bad)
pop
adc
outs
pop
aaa
pop
cs
mov
repz
out
push
or
jnp
daa
fcomp
cld
sbb
movs
mov
es
sbb
dec
inc
test
lock
add
mov
cli
(bad)
pop
inc
pusha
pop
cmp
adc
in
dec
loop
and
sbb
mov
lds
mov
shr
dec
or
aad
loop
cmp
adc
fwait
retf
scas
or
inc
cmp
ds
icebp
adc
leave
add
test
ja
adc
mov
mov
and
pop
leave
faddp
mov
push
repz
fsub
cmp
bound
aad
sbb
shl
push
into
repz
lock
jo
icebp
out
out
inc
adc
pop
mov
or
lds
add
ret
(bad)
jp
popf
outs
cmc
pop
push
test
or
xor
imul
push
pushf
cmp
mov
sbb
loop
cmp
scas
xchg
inc
jg
push
vmwrite
dec
mov
sub
enter
mov
jbe
inc
add
(bad)
(bad)
and
div
aaa
jg
pop
lock
hlt
mov
out
inc
fnstcw
sub
mov
mov
adc
lock
jmp
mov
mov
add
sub
jb
mov
cmp
rcl
inc
cwde
xor
dec
loopne
ret
mov
sub
sar
daa
dec
inc
stos
icebp
sbb
inc
dec
les
jno
out
push
test
(bad)
adc
and
xor
or
cmp
jmp
mov
aad
lods
ret
sub
xor
jmp
xchg
adc
aad
sub
clc
push
or
sub
and
xchg
js
fimul
jbe
dec
jno
fist
adc
cmps
cmp
mov
jge
mov
inc
pop
in
test
or
add
cmp
xor
jno
dec
and
hlt
pop
pusha
hlt
sub
push
xor
call
or
mov
push
popf
pop
rcl
lahf
dec
or
jo
out
sub
sub
dec
ss
clc
cmp
xchg
in
imul
in
mov
shl
ficom
pop
div
iret
cmc
sbb
pop
jmp
bound
cmp
mov
rcl
inc
in
mov
xor
jl
popa
add
xchg
call
imul
stc
out
lods
(bad)
out
xor
movs
mov
pop
ror
pop
iret
fs
outs
mov
or
fadd
add
sbb
stc
dec
push
jecxz
popf
push
call
in
fmul
inc
fmul
test
or
sbb
lods
das
adc
jnp
dec
sbb
xor
aaa
fisub
(bad)
cld
sbb
(bad)
dec
inc
stos
add
and
adc
mov
and
jge
repnz
test
inc
xchg
sbb
fbld
test
inc
pushf
dec
push
and
call
xor
inc
in
outs
iret
cmc
mov
test
vmread
test
push
or
daa
and
add
mul
jge
dec
ins
cmp
inc
lods
mov
jno
xlat
(bad)
jge
sbb
aaa
jbe
sub
movs
ja
(bad)
push
scas
sub
pusha
(bad)
mov
addr16
add
das
cmps
(bad)
push
sub
cmps
cli
jb
sbb
xor
sbb
add
loopne
xchg
outs
mov
push
outs
adc
dec
in
jmp
outs
sbb
outs
add
shl
xor
ins
and
int
rol
mov
mov
sub
mov
stos
xchg
or
clc
jo
inc
stos
aaa
aam
pop
adc
sub
mov
cmc
cmp
inc
add
mov
cdq
fst
ss
ret
jg
pop
hlt
lock
adc
adc
add
push
mov
not
sbb
rol
jl
fisttp
scas
and
adc
fwait
add
into
sbb
inc
jmp
and
adc
xchg
loope
imul
stc
jo
idiv
jge
mov
jmp
imul
inc
dec
xchg
add
mov
add
jne
loop
lock
inc
std
xchg
inc
in
int3
fistp
movs
push
sub
ins
sbb
xor
pop
outs
mov
mov
lahf
and
mov
rol
scas
push
in
cdq
ins
fbld
xchg
dec
sub
add
lock
ror
push
dec
or
mov
movs
or
sub
xor
jb
and
sbb
aaa
xor
bound
data16
ret
jp
adc
in
gs
cmp
test
repz
xchg
(bad)
jecxz
retf
movs
add
sbb
popf
dec
repnz
fwait
or
enter
rcr
inc
adc
idiv
or
movs
push
ins
dec
lods
sub
and
sbb
push
mov
ins
and
pop
jb
sub
jnp
popf
mov
scas
dec
fld
xchg
into
mov
test
and
fcmovne
dec
inc
aad
aas
enter
popa
int3
aas
call
icebp
in
push
pop
push
push
xchg
pop
loop
test
fcmovbe
dec
jbe
sbb
push
iret
call
stc
mov
es
cmp
jns
pop
sub
(bad)
and
mov
mov
xchg
pop
call
imul
xchg
dec
stos
jno
scas
or
pop
add
sub
fmul
xor
outs
ret
out
jmp
adc
pop
test
adc
je
cmps
cmp
loopne
cwde
and
jbe
adc
pushf
inc
dec
add
ficom
jl
jb
in
or
cld
add
inc
pop
aam
jno
aad
dec
daa
add
sub
lea
pushf
mov
mov
adc
ret
pushf
mov
add
mov
jl
add
iret
out
lock
adc
push
movs
or
push
rol
lea
xchg
xor
lods
mul
pop
outs
neg
clc
iret
sbb
sbb
xor
pop
jle
jle
sbb
(bad)
jmp
pop
fisttp
sti
push
ins
dec
sbb
fs
xor
jecxz
arpl
lds
inc
xor
aas
xor
push
retf
out
enter
int3
sbb
daa
pop
pop
mov
mov
(bad)
iret
std
(bad)
push
arpl
test
out
inc
and
mov
pop
into
in
pusha
mov
push
stc
ds
retf
cmp
shl
(bad)
xor
jp
popf
call
sub
stos
sti
xchg
arpl
movs
leave
fstp
cdq
lahf
(bad)
(bad)
mov
pop
jo
adc
dec
inc
out
xlat
xor
aad
pop
mov
sbb
sub
aaa
xchg
scas
pop
push
inc
loopne
inc
(bad)
not
aas
test
or
clc
hlt
mov
xchg
inc
dec
xchg
jne
and
loopne
ret
pop
mov
outs
lods
imul
mov
xchg
dec
test
adc
call
sahf
pop
jp
mov
push
pop
test
loope
lea
repz
mov
iret
nop
mov
cmp
sbb
adc
push
movs
or
mov
pop
push
dec
sbb
inc
ret
loop
jle
in
sti
sbb
in
jmp
add
cmp
inc
test
and
sbb
xor
in
xor
sub
dec
aad
adc
mov
sar
fbld
push
pusha
sub
mov
push
pop
out
les
fwait
into
jo
jmp
imul
repnz
lock
sti
sbb
aad
xlat
dec
pop
xchg
rcr
xlat
(bad)
shl
mov
sahf
sbb
js
push
jge
xor
shr
push
leave
ret
bound
pop
int3
addr16
dec
mov
enter
jp
rcl
gs
int
add
daa
adc
dec
mov
out
call
xor
jo
ins
xchg
adc
lds
or
mov
pop
lods
pushf
loop
jge
daa
outs
mov
dec
iret
mov
rcl
dec
cmp
or
cwde
(bad)
scas
pop
jnp
push
lock
imul
xor
lds
push
inc
rol
pop
shl
dec
or
or
mov
and
pop
leave
add
sbb
jo
pop
xor
mov
aam
dec
enter
movs
add
ss
pop
sar
add
push
iret
(bad)
xor
je
sub
repnz
es
popa
or
dec
lahf
xor
mov
sub
xchg
push
pusha
and
shl
and
mov
pop
adc
sub
pop
jl
pextrw
or
rcl
ja
pop
jmp
je
xchg
cld
fisttp
sahf
mov
xlat
ja
test
ror
inc
or
jns
enter
mov
enter
adc
mov
mov
xor
cmc
xor
mov
jecxz
imul
mov
lock
mov
das
enter
sbb
mov
nop
cmps
push
dec
jg
jb
dec
or
scas
loopne
jmp
loopne
pop
fld
mov
imul
jmp
(bad)
rol
cmp
mov
lods
mov
mov
cwde
fisub
(bad)
pop
jns
lock
xchg
dec
pop
dec
sar
mov
sbb
repnz
sar
test
ret
test
retf
mov
pop
outs
out
xor
cld
add
(bad)
mov
push
out
mov
xchg
scas
sbb
pop
aam
es
movs
repnz
cmp
mov
pop
mov
pop
ins
mov
sub
xor
in
add
ret
in
mov
push
ret
add
xor
inc
inc
cmp
movs
popa
xchg
sahf
xchg
int3
pop
lahf
mov
icebp
(bad)
ds
jo
jecxz
jb
je
(bad)
jl
repz
lock
mov
rcr
xor
ja
pop
mov
sbb
sbb
mov
cld
cmc
pop
out
dec
cmp
dec
sar
mov
mov
ret
xchg
movs
cmp
(bad)
(bad)
hlt
aam
or
scas
repz
cmc
stc
imul
mov
div
dec
mov
stos
inc
dec
mov
adc
bound
jmp
fisubr
dec
jnp
mov
cli
fsubr
inc
test
loop
cli
in
jbe
add
lahf
inc
cmp
div
pop
push
pop
mov
mov
dec
mov
pusha
mov
adc
xchg
(bad)
stos
js
pop
(bad)
not
into
push
and
push
pop
cmp
cmp
xchg
inc
xchg
pusha
cmp
cld
jae
fwait
out
iret
lock
test
cmp
fs
pop
jnp
dec
ret
movs
repz
lahf
dec
jl
mov
mov
adc
mov
ins
dec
clc
inc
dec
push
mov
test
xor
in
nop
mov
stc
mov
xor
and
les
xchg
pop
or
mov
sti
mov
xor
mov
addr16
and
fdivrp
and
mov
sub
mov
imul
sub
bound
ja
xor
xchg
and
inc
sbb
dec
and
or
out
stc
add
ss
imul
xlat
fs
cmp
sbb
(bad)
not
icebp
mov
mov
jne
or
leave
add
and
sub
push
mov
pop
(bad)
pushf
aaa
cld
fcmovnu
push
out
mov
inc
dec
rol
or
cmps
and
imul
sbb
in
or
mov
data16
inc
push
sbb
push
push
inc
xchg
cld
in
dec
in
mov
or
mov
mov
jmp
gs
ja
imul
mov
mov
cmps
or
push
jne
bound
adc
xchg
outs
pop
dec
cmp
jp
cmp
cli
cmp
hlt
jne
dec
in
lea
and
mov
cmp
inc
rcr
ins
sub
pop
mov
jl
test
xchg
mov
xlat
adc
adc
dec
call
pop
aaa
fisttp
scas
sbb
add
sub
std
dec
pop
call
ins
jae
imul
dec
push
jns
aad
mov
rol
int3
cmp
loope
movs
push
imul
or
mov
jmp
shl
push
mov
xchg
mov
fstp
add
pop
and
xor
and
inc
mov
stos
mov
dec
in
and
int3
jb
mov
and
xor
cmp
dec
jp
das
adc
test
push
rcl
js
inc
or
inc
xor
mov
dec
cmp
mov
mov
pop
mov
sbb
and
ficom
push
pop
push
inc
jg
and
inc
dec
cmps
xchg
sbb
inc
es
fs
jmp
out
fild
xor
pop
fld
repz
inc
mov
imul
and
adc
data16
xlat
fs
cmp
loopne
jl
cmp
les
ficom
mov
test
call
clc
jb
rcr
xchg
cmp
shl
jne
out
fs
retf
cmp
push
pop
or
xlat
shl
jecxz
xor
aaa
lods
test
push
outs
popf
outs
cmp
sub
repz
cmp
add
jp
ss
xor
(bad)
jbe
jp
dec
popf
scas
fadd
shl
xor
mov
mov
test
and
aaa
mov
shl
nop
xor
out
mov
cmp
out
not
ds
pop
in
mov
idiv
mov
xor
scas
int
ficom
arpl
cmp
push
fst
fadd
js
xchg
sub
fidivr
lock
pop
repz
mov
sub
aaa
sahf
and
fchs
or
push
ret
test
jmp
cmp
and
lods
ret
popf
test
push
mov
sbb
xor
sub
xchg
jge
bound
jnp
aam
inc
or
cmps
dec
clc
out
(bad)
(bad)
mov
repz
scas
xchg
retf
xchg
data16
outs
cdq
ret
push
mov
cmc
out
or
push
mov
xor
sub
push
pop
xor
ja
sbb
jne
jle
fild
cmc
out
and
je
leave
mov
and
xor
das
idiv
pop
fistp
jno
ror
dec
je
stos
cdq
inc
mov
sub
pop
ins
pushf
adc
inc
dec
sbb
call
add
push
pushf
mov
mov
mov
adc
adc
mov
cwde
push
xchg
pusha
nop
mov
out
cmp
adc
dec
sbb
addr16
xchg
pop
mov
and
sub
hlt
fadd
cli
inc
or
push
loop
mov
sahf
jmp
xor
mov
add
sbb
clc
in
das
inc
stc
mov
movs
test
cmps
or
or
mov
and
xor
fcomp
push
jnp
movs
cmp
in
push
ret
arpl
sahf
inc
(bad)
fiadd
out
jle
sbb
and
stos
pop
inc
xor
(bad)
mov
jae
sti
or
ds
push
cmps
inc
add
pslld
sbb
je
cmp
or
jp
inc
pop
adc
enter
add
push
in
cwde
loop
cli
adc
jp
mov
fs
call
in
push
mov
and
popa
(bad)
int
div
test
or
mov
out
(bad)
xchg
xor
cmps
fdiv
aad
mov
or
adc
pop
daa
cli
out
push
dec
loopne
je
out
jo
inc
scas
cmp
lds
jecxz
test
clc
sbb
dec
mov
das
jbe
mov
fwait
pop
rol
(bad)
fnstcw
and
ins
xor
inc
stos
ss
sbb
int
cdq
mov
xchg
ror
arpl
test
int3
cmps
mov
dec
mov
jle
push
push
sub
pusha
cli
ja
sbb
int3
cs
hlt
hlt
loop
repnz
cmps
pushf
or
lock
dec
lods
xor
or
push
inc
popf
cmc
cmp
sbb
scas
mov
inc
cmp
add
lods
push
sbb
or
ins
shr
pop
pop
mov
js
mov
mov
fadd
mov
push
mov
push
mov
xchg
les
push
cli
cmp
mov
aam
das
xor
or
test
ror
or
push
lods
pop
xchg
push
loope
stos
mov
dec
dec
xchg
in
hlt
(bad)
scas
dec
adc
sbb
cmc
adc
fild
jae
and
les
or
mov
in
jge
jbe
es
outs
sbb
in
cs
sbb
cs
jae
(bad)
mov
(bad)
jmp
mov
fnstsw
loopne
jne
jnp
in
pop
jmp
or
repnz
fmul
pop
xor
int3
mov
aas
lea
idiv
retf
dec
jmp
sbb
punpckhwd
sbb
fild
fld
sbb
(bad)
(bad)
scas
rcr
jmp
lahf
js
(bad)
pop
dec
lock
dec
jge
(bad)
pushf
jp
dec
cli
mov
(bad)
mov
and
out
ss
or
or
cmc
or
pop
fwait
orps
inc
push
inc
xchg
popf
mov
mov
jl
and
neg
fs
pop
xchg
xchg
(bad)
cmp
(bad)
lock
jb
dec
loope
or
lahf
fs
shrd
xor
push
dec
sbb
xchg
and
out
ret
fiadd
and
in
repnz
or
pop
retf
push
mov
fstp
mov
int
inc
pop
or
outs
xor
loope
hlt
dec
adc
pop
or
mov
out
or
add
jo
and
cmp
int
fadd
scas
xchg
dec
pop
stos
push
jbe
sub
lea
leave
fild
pop
repnz
jnp
or
pop
stos
sar
cmp
mov
mov
nop
dec
cmp
push
ret
jns
aad
pop
xchg
xchg
inc
je
js
mov
sub
pop
pop
(bad)
cmps
fstp
xor
sbb
cmp
popa
sbb
(bad)
pusha
mov
mov
loopne
and
pop
mov
(bad)
in
jne
mov
addr16
sar
(bad)
retf
xor
pop
xchg
(bad)
jp
and
js
call
push
call
sbb
out
(bad)
mov
arpl
xchg
adc
cmp
and
adc
add
in
adc
lds
cmp
sub
out
ficomp
(bad)
ffreep
jno
bound
xchg
adc
addr16
aad
jmp
repnz
or
cmp
xchg
and
int
pop
loop
shl
cmps
sbb
jbe
add
hlt
(bad)
test
rcr
lock
jmp
dec
pop
mov
gs
xor
scas
push
xchg
mov
dec
jl
add
and
(bad)
sbb
sub
shl
pop
adc
pop
xor
nop
ret
mov
mov
jl
out
in
out
sub
push
xor
add
cmps
adc
loop
in
push
sbb
retf
mov
sub
fisub
dec
hlt
xchg
xor
mov
fst
push
inc
out
inc
cmps
(bad)
jmp
jge
xchg
outs
test
mov
xchg
sbb
fisttp
loop
das
pop
sbb
jb
and
call
cmp
pop
lds
mov
pushf
sti
mov
cmp
inc
mov
mov
pop
jmp
and
push
aas
sbb
push
mov
aad
push
xchg
call
mov
ds
mov
cmps
mov
out
dec
cwde
and
das
data16
mov
pop
lods
out
xchg
test
pushf
test
sub
mov
dec
sub
and
fcom
push
pop
in
cmp
scas
dec
mov
icebp
mov
test
int3
mov
sbb
mov
(bad)
jmp
dec
mov
push
pop
mov
or
pusha
fsubr
es
loope
push
leave
scas
jl
test
pusha
pop
xchg
adc
push
or
sti
ja
fld
cmps
add
ss
pop
sbb
(bad)
daa
jle
and
sti
mov
jno
mov
daa
fld
xlat
sub
push
inc
pop
cmps
in
cs
dec
jne
adc
inc
test
mov
push
push
arpl
add
sub
(bad)
cmps
push
mov
push
dec
xor
mov
in
pop
aaa
sbb
jmp
fsub
daa
es
das
or
inc
call
pop
adc
adc
inc
(bad)
push
fs
loopne
cmp
aaa
xchg
xchg
cmp
and
dec
mov
and
adc
pop
sub
jbe
sbb
loopne
icebp
sub
mov
cmps
pop
xchg
add
in
xchg
jno
mov
pop
mov
loopne
cli
je
loopne
xor
pop
ror
dec
jmp
les
xchg
jecxz
jecxz
ds
scas
mov
scas
imul
xchg
jmp
push
jmp
push
loopne
daa
push
imul
mov
test
scas
cmp
sbb
aad
test
adc
mov
test
xor
push
inc
mov
mov
shl
inc
out
inc
scas
cmp
push
movs
xor
dec
add
nop
add
hlt
mov
jg
dec
pop
loope
push
fwait
push
cdq
push
jb
jge
std
cmp
repz
cmp
sub
int3
xchg
ds
sti
mov
bound
inc
dec
mov
cmp
xchg
out
and
lock
inc
sub
xlat
neg
es
cld
sub
jmp
push
stos
ins
push
daa
inc
pop
test
jno
shl
bound
push
cli
retf
adc
(bad)
lods
pop
sti
jmp
cmc
cmp
cmp
sub
outs
fucomp
jmp
and
pop
daa
jp
outs
cmp
mov
frstor
adc
mov
adc
out
in
push
out
sti
test
rcr
mov
pop
inc
aaa
jp
in
mov
ins
add
test
xchg
xlat
in
cmp
lods
and
idiv
adc
inc
or
adc
pop
shl
je
test
jae
push
mov
call
pusha
out
mov
(bad)
rcl
push
leave
lea
icebp
adc
push
mov
xchg
cmp
dec
mov
mov
xchg
pop
(bad)
(bad)
sub
js
imul
imul
imul
enter
pop
aaa
jmp
adc
retf
xor
and
leave
cmp
mov
push
jnp
stos
call
pop
jne
ret
jle
addr16
mov
mov
fdiv
mov
add
mov
aas
lea
ret
dec
xor
xchg
cmps
or
sbb
ins
pop
mov
adc
and
sub
jmp
popf
sbb
xor
dec
lods
ins
loope
pop
lods
xchg
(bad)
int
and
int3
dec
mov
(bad)
loopne
jecxz
sbb
nop
fimul
and
lahf
cmp
ss
popa
loop
outs
ins
pop
in
int3
jle
or
cmps
out
iret
out
mov
cs
dec
lods
dec
nop
push
clc
mov
test
fst
mov
retf
sbb
(bad)
jae
gs
push
std
mov
sahf
and
mov
inc
xor
add
jb
xchg
loop
add
mov
out
out
daa
xchg
mov
adc
or
xor
icebp
inc
gs
push
and
and
cmp
loope
push
test
je
pop
imul
test
shl
or
xchg
(bad)
fiadd
addr16
out
imul
push
jl
sbb
jg
outs
test
test
dec
xor
nop
inc
es
je
xchg
pop
call
jecxz
popa
stos
dec
push
cmp
(bad)
gs
ins
addr16
fist
outs
call
jnp
push
sahf
and
test
jae
es
sub
sbb
mov
out
outs
out
fild
mov
aas
mov
nop
xchg
mov
mov
int3
cdq
cmp
adc
cmp
mov
sub
mov
outs
inc
fcmovnbe
pushf
icebp
xchg
aaa
sbb
jmp
add
cmp
mov
mov
mov
pop
sbb
sbb
xchg
test
inc
repnz
loop
or
cs
dec
pop
cmp
jns
cmp
movs
fstp
jl
test
(bad)
idiv
inc
arpl
pop
jb
loop
add
sbb
sbb
rol
in
ss
dec
mov
inc
mov
push
or
es
and
int3
std
iret
fisubr
inc
stc
push
loope
aaa
hlt
mov
push
add
adc
pop
mov
(bad)
xchg
sar
jno
mov
int3
loopne
mov
pushf
enter
enter
outs
jmp
(bad)
ss
jg
int3
or
ret
jo
cmp
mov
icebp
fadd
adc
stos
push
sub
in
lock
retf
or
mov
fwait
out
(bad)
xor
lock
sub
call
sahf
les
pop
test
push
dec
and
repz
fdiv
sub
dec
stc
pop
ins
jg
ds
jg
aad
cwde
push
mov
icebp
sub
fucomp
sub
xchg
ja
push
pop
out
fstp
push
popa
stos
shl
mov
jnp
mov
adc
mov
in
sbb
repnz
out
xchg
pop
jns
add
dec
push
dec
and
(bad)
popf
mov
mov
mov
adc
sub
jns
pusha
in
mov
pop
or
(bad)
scas
iret
mov
mov
jns
cdq
aas
and
stos
lahf
cmp
inc
or
xlat
mov
repnz
push
inc
fadd
fucomip
xchg
jl
push
imul
or
cmc
movs
inc
sub
jno
push
push
aad
pop
sub
fdivr
into
pop
into
pop
ds
cvtdq2ps
cmp
or
imul
adc
das
repz
adc
shl
jle
stc
push
test
(bad)
xchg
lods
je
mov
fwait
push
xchg
les
sbb
mov
mov
(bad)
jmp
out
jp
push
mov
jb
fild
ins
pusha
imul
push
fidiv
push
jae
xor
int3
and
fcomp
mov
dec
xchg
xchg
xor
std
inc
xchg
in
xchg
or
push
and
je
or
aaa
dec
test
sbb
sbb
pop
std
test
je
fs
push
dec
mov
pop
shl
push
hlt
mov
pop
test
addr16
test
jns
into
dec
xor
add
mov
ret
out
movs
imul
ret
in
pop
xor
stos
ror
xlat
mov
mov
repz
xor
test
cmps
bound
test
and
xchg
pushf
fwait
pop
xor
mov
add
or
les
iret
jp
ret
(bad)
scas
sub
mov
shl
mov
jne
or
jecxz
push
sub
fisttp
or
cwde
rsm
and
pop
xor
dec
mov
stos
push
sbb
jne
cdq
xchg
arpl
shl
out
xchg
cmps
(bad)
in
pop
mov
mov
ins
call
ins
push
cs
inc
pop
pop
hlt
repz
popa
inc
mov
xchg
xchg
repnz
mov
mov
js
and
jmp
retf
vpunpcklbw
jb
mov
mov
dec
lods
into
(bad)
imul
daa
push
jp
test
inc
pop
jg
out
mov
test
movs
mov
push
sub
ins
jb
ret
push
ret
pop
xor
add
add
in
sub
cmp
xor
inc
add
nop
hlt
sub
add
das
aad
nop
sub
pop
stc
adc
sub
or
push
pop
and
add
inc
pop
inc
enter
and
and
push
les
lods
cwde
push
mov
dec
(bad)
cli
loope
fstp
das
fmul
imul
test
add
and
mov
mov
or
adc
push
stos
in
out
pop
movs
shl
movs
adc
mov
jge
call
je
dec
movs
clc
lea
iret
sub
push
sbb
int3
les
mov
or
js
(bad)
in
and
xchg
stos
je
cwde
movs
loopne
xchg
pop
and
add
or
mov
mov
and
push
jle
sar
loop
sub
repnz
mov
fmul
add
in
push
and
cmp
and
ficomp
das
jg
test
cli
cmps
add
mov
(bad)
arpl
mov
fld
mov
mov
dec
adc
lds
fidivr
ds
jle
std
rcl
pop
jg
jl
arpl
in
test
fs
lahf
and
xor
fxch
push
and
sub
mov
cmp
out
jmp
ds
pop
or
xchg
jmp
or
add
cmc
push
fxch
mov
pop
imul
add
dec
inc
cmps
aas
stos
movs
in
jb
gs
fwait
push
fisttp
loope
(bad)
call
dec
cmps
sbb
inc
shr
call
dec
jb
xchg
sbb
sub
(bad)
popf
pop
ss
aaa
mov
push
out
es
stc
add
xchg
jae
xlat
inc
das
pushf
dec
mov
sbb
jnp
lock
fidivr
cli
pop
fisttp
scas
imul
xchg
xor
mov
or
in
adc
dec
xchg
test
test
(bad)
add
rcl
repnz
not
retf
stos
ret
jb
cmp
mov
fcmovu
and
fnclex
mov
jg
push
rcl
es
sub
jb
sub
div
pushf
push
jno
add
sbb
(bad)
jg
mov
out
jne
lea
xchg
pop
mov
fbstp
test
add
je
pusha
and
xor
lea
rcl
mov
add
push
dec
xor
clc
inc
jp
jns
fst
push
lds
arpl
in
int3
mov
add
ficom
js
rcl
ja
add
inc
int
dec
adc
sub
mov
imul
(bad)
jge
inc
cmc
pop
in
call
or
dec
push
(bad)
or
retf
jbe
xchg
lahf
pop
add
xlat
ins
sar
loop
out
shl
xor
jmp
cmp
aam
das
sub
add
das
ins
dec
cmp
mov
push
and
jl
scas
enter
pop
pop
mov
mov
cs
fst
aas
ss
scas
fnsetpm(287
rcr
sub
icebp
mov
lock
inc
cmp
mov
ds
pop
jge
fnstenv
sar
inc
mov
neg
lods
retf
pop
cmps
jns
cs
jo
or
sbb
sub
dec
repnz
pop
fist
sub
add
out
adc
aaa
int
xchg
sbb
mov
(bad)
push
ds
push
dec
and
fwait
mov
daa
retf
pop
cmp
nop
fxch
xor
sub
jo
sbb
test
add
mov
inc
leave
dec
push
jno
aam
dec
mov
jl
cmps
stos
xchg
push
pop
xchg
pop
inc
fstp
lods
retf
jns
mov
movs
loopne
adc
es
xchg
add
lock
pushf
sub
dec
xor
pop
sub
dec
xchg
and
loopne
mov
(bad)
xchg
mov
mov
xchg
mov
dec
sbb
cmp
dec
push
fldenv
rcr
mov
mov
or
xlat
jecxz
dec
push
out
inc
jg
xchg
mov
int3
dec
(bad)
lea
loopne
mul
xchg
shl
pop
mov
stos
jmp
xchg
pop
push
icebp
into
sbb
push
cmp
enter
xor
add
cmc
retf
fxch
mov
das
xchg
arpl
lods
add
jne
js
shl
and
cmp
ins
mov
ds
das
arpl
push
mov
retf
shl
cmc
dec
mov
ins
das
jae
ja
ret
push
inc
cmp
js
scas
nop
pushf
jecxz
add
pop
dec
mov
retf
idiv
mov
pop
jmp
in
mov
sbb
out
retf
sbb
and
mov
fnstcw
cs
mov
icebp
jno
add
cmc
sub
and
cld
mov
jmp
shr
jecxz
cld
push
sti
add
mov
jecxz
or
fld
out
pop
pusha
in
adc
pop
mov
add
and
shr
push
mov
jl
fisubr
push
(bad)
jge
fs
jno
xor
dec
sbb
xchg
fisub
cmp
mov
js
in
and
in
adc
pop
(bad)
and
dec
shl
das
mov
les
adc
sbb
in
push
mov
mov
pop
inc
pop
inc
imul
jmp
test
push
mov
pop
loope
push
jecxz
adc
mov
outs
inc
fs
mov
jg
fidiv
or
adc
test
leave
imul
adc
cmp
mov
imul
pop
xchg
vpsubb
mov
push
jp
mov
dec
(bad)
loop
add
test
sub
outs
mov
dec
xor
outs
(bad)
lahf
pop
push
jno
xchg
stc
mov
icebp
test
inc
add
loopne
sar
in
ror
mov
mov
fcomi
fnclex
call
push
fwait
push
and
xchg
adc
add
lods
push
ror
add
jp
ror
mov
mov
repnz
cmp
sub
in
fst
jmp
in
std
mov
stos
mov
dec
popf
sbb
ror
aad
adc
inc
xlat
sbb
stc
push
mov
xchg
push
mov
js
fwait
in
cmp
test
cmp
inc
push
mov
and
jecxz
inc
push
dec
cdq
sub
and
xor
xchg
repz
mov
push
jnp
inc
push
mov
in
jno
fcmovb
jmp
xchg
and
sub
pop
leave
dec
bound
test
pop
repz
and
outs
mov
jnp
shl
jge
mul
inc
scas
ja
add
int
xor
pop
inc
std
in
retf
sub
mov
fstp
je
lock
xor
push
xor
xchg
dec
cmp
cld
cld
cli
sub
or
mov
and
inc
retf
inc
out
push
sub
xchg
inc
arpl
out
cmp
mov
pop
std
push
push
popa
test
push
(bad)
je
es
ds
retf
js
fdivr
adc
out
push
xchg
dec
xor
inc
leave
test
push
in
idiv
loopne
xor
nop
jl
adc
sbb
ja
push
pop
pop
ficom
mov
inc
rcr
push
push
push
jge
cmps
cli
cmps
js
rcr
dec
mov
rdpmc
push
fwait
clc
dec
add
movs
mov
inc
push
sbb
or
cmc
xor
mov
mov
repnz
pop
pop
jne
jo
mov
call
pushf
pop
shl
jge
mov
cs
dec
dec
jo
and
mov
mov
or
leave
shl
sbb
dec
xor
(bad)
fdivr
cmp
out
jb
push
test
retf
in
int
out
xchg
inc
das
loope
push
scas
xchg
push
xchg
lock
cmp
(bad)
loope
xchg
push
add
int
and
scas
(bad)
lahf
mov
mov
mov
in
pop
imul
adc
fldenv
cmp
js
adc
dec
repz
les
mov
bound
test
daa
pop
ror
enter
add
sub
hlt
ret
cld
sub
jae
stos
fstp
js
fisttp
in
sub
js
test
mov
cli
mov
xchg
cmp
scas
ins
and
sbb
mov
arpl
lock
push
cld
mov
add
cmps
repz
pop
sbb
mov
cmp
(bad)
pop
xchg
iret
dec
pop
xor
rcr
push
or
sbb
cmp
push
sahf
dec
pop
xchg
leave
in
xchg
push
jns
mov
in
sbb
js
js
jae
scas
(bad)
(bad)
int3
add
and
cmp
pop
push
xchg
inc
dec
pop
sahf
xchg
mov
mov
mov
mov
ds
popa
xor
in
xchg
(bad)
mov
xchg
mov
or
cld
mov
push
sahf
pop
push
out
cmp
shl
pop
add
cwde
inc
arpl
jbe
dec
mov
iret
cmp
repz
clc
cmp
pop
pop
xor
daa
stos
mov
pop
jl
xchg
push
add
cli
and
push
cmp
mov
mov
lea
stos
aad
cmp
push
aaa
push
shl
and
cmp
jl
adc
mov
aam
test
test
adc
shr
and
lods
xor
arpl
xchg
stc
jg
or
repz
imul
push
outs
lahf
mov
in
test
mov
loop
cmc
clc
jl
xlat
and
mov
fst
test
adc
fwait
sbb
adc
daa
dec
pop
xor
inc
pusha
imul
sub
push
shr
add
and
sti
xchg
jne
jns
clc
repnz
add
shl
and
outs
sbb
mov
cmp
loope
bound
push
xchg
popa
or
popf
dec
(bad)
inc
vhaddpd
push
xchg
inc
cld
pop
dec
lea
shl
ja
retf
call
fimul
scas
jns
jecxz
dec
sub
(bad)
xchg
call
mov
pop
mov
out
mov
push
xchg
inc
int3
add
push
test
aad
push
arpl
mov
sahf
cmp
imul
sbb
sbb
pop
add
xchg
xor
add
cmp
pop
test
mov
ins
xchg
mov
pop
inc
mov
gs
sub
and
pop
mov
cmp
(bad)
mov
out
inc
xor
fld
add
cdq
inc
mov
mov
push
jns
fidivr
or
dec
bound
aaa
jmp
call
bound
sbb
add
les
fimul
out
pop
mov
movs
fwait
ret
mov
or
jno
mov
sub
js
shl
push
jne
pusha
and
dec
inc
aam
repnz
pop
add
xchg
(bad)
ja
test
xor
dec
push
inc
sbb
aas
or
psllw
not
rol
mov
inc
xor
scas
pop
loopne
sub
xor
(bad)
cwde
rcl
add
lods
loopne
inc
cmp
in
out
sbb
mov
mov
and
ins
mov
sbb
fcom
movs
shl
in
mov
jge
(bad)
leave
ror
stc
jmp
or
mov
lds
pop
pop
cs
xchg
in
rol
lahf
mov
sbb
xchg
dec
xor
xchg
adc
cmp
out
es
mov
pop
sub
bound
test
dec
mov
dec
pop
popa
arpl
loope
test
jbe
lods
aas
or
ret
add
push
pop
adc
push
and
sti
cmp
or
enter
das
adc
popa
mov
js
push
push
push
ins
xor
stos
xchg
push
dec
in
loopne
call
(bad)
add
sbb
adc
cmp
xor
movs
sbb
mov
push
add
sbb
ds
cs
lods
vmulss
pusha
inc
popf
callw
jg
jne
sub
into
cmc
cmp
push
or
sub
addr16
ins
mul
mov
ss
les
leave
rol
jge
in
inc
sbb
jl
jae
into
rcr
test
test
pop
pop
dec
mov
push
je
mov
clc
dec
fnstcw
jnp
mov
xor
mov
xor
push
pop
cmp
retf
mov
ja
or
mov
jp
xor
sbb
mov
xchg
in
scas
call
int3
jo
sbb
neg
cmp
(bad)
shr
enter
mov
mov
xchg
loope
repz
mov
je
cmps
cmp
jmp
nop
rcr
or
test
push
pop
push
dec
in
or
xchg
sbb
pusha
(bad)
cs
aam
stos
icebp
pop
pop
mov
je
cmp
inc
mov
movs
dec
add
mov
addr16
add
mov
pop
call
test
movs
cmp
(bad)
data16
sub
lods
sbb
cli
push
pop
cmp
cli
sub
out
dec
xor
push
or
fmul
repnz
rol
xor
inc
mov
daa
add
mov
mov
cmp
aas
inc
fsubr
neg
gs
test
adc
sti
sbb
xlat
(bad)
arpl
cmp
sub
sbb
movs
sbb
cld
(bad)
jg
lahf
fcom
add
shl
loop
mov
mov
pusha
or
xchg
sahf
xor
cmps
in
jbe
lds
fisttp
or
stos
push
sub
dec
mov
dec
mov
xchg
mov
shl
retf
popa
inc
stc
add
push
dec
xchg
adc
jecxz
mov
or
inc
jo
inc
push
or
push
push
or
icebp
lods
call
xor
scas
out
jecxz
ficomp
lea
scas
or
xchg
addr16
pop
xlat
inc
movs
cmps
dec
sub
lds
pusha
popf
adc
iret
repnz
pop
inc
sbb
dec
rcr
cmp
test
nop
sar
xor
gs
sub
gs
sbb
int3
push
cmp
pushf
add
push
mov
rcl
fst
sbb
pop
or
imul
addr16
popf
mov
push
pop
leave
fwait
pushf
mov
aaa
scas
aas
mov
and
rcr
in
test
test
and
arpl
and
jecxz
mov
in
dec
int
leave
sbb
xor
adc
repnz
inc
lods
push
add
(bad)
sahf
out
dec
jb
shr
inc
inc
fs
adc
repz
cs
shr
jbe
pop
push
into
dec
ror
(bad)
mov
push
jo
jmp
loopne
cdq
loopne
xor
cmp
shr
mov
sub
mov
or
mov
dec
jmp
jb
int3
add
xchg
sub
test
(bad)
mov
aaa
cld
jl
inc
xor
ds
das
outs
jnp
mov
xor
pop
xchg
fs
push
push
cmp
aas
sbb
out
fisub
out
popa
sbb
sub
xlat
mov
inc
sub
jle
ds
xchg
dec
sbb
add
lock
xor
and
add
cwde
cs
(bad)
scas
sub
mov
push
adc
lods
mov
inc
(bad)
lock
ins
test
scas
jge
push
pop
call
mov
dec
pop
jae
mov
mov
rcl
and
arpl
adc
jns
mov
mov
sti
out
test
push
and
sti
mov
(bad)
popf
mov
cmp
xchg
imul
les
sub
dec
xchg
inc
std
xor
jle
in
jmp
and
sbb
fbstp
inc
cmp
in
dec
repz
and
pop
mov
sbb
sub
dec
sahf
sbb
mov
es
cmp
inc
mov
add
bound
cwde
ret
xlat
loopne
aad
pushf
lea
ror
ret
mov
pop
fld
into
ds
pop
sbb
add
cmp
inc
addr16
inc
sbb
mov
aad
neg
int
iret
add
cmc
dec
hlt
cdq
add
jle
or
int3
dec
xchg
hlt
jg
je
ds
dec
movs
push
popf
movs
inc
inc
pop
xor
and
aas
cdq
dec
stc
push
and
pusha
push
sub
dec
or
fidivr
add
pop
push
xchg
mov
bound
lods
call
jbe
jmp
call
xor
xchg
xor
in
arpl
outs
xor
or
arpl
mov
aam
jle
imul
mov
inc
push
push
mov
ins
cmps
int
dec
clc
call
popf
fimul
pop
adc
je
push
rol
popa
xchg
mov
sahf
sbb
loop
out
jae
je
aas
jl
sub
add
jg
and
cld
cs
movs
fsub
stos
neg
cwde
mov
out
and
out
or
call
aad
std
mov
pop
push
push
push
or
inc
or
addr16
retf
cmp
cdq
mov
mov
aam
pop
ret
hlt
push
mov
push
and
fsubr
adc
stos
pop
xlat
push
loope
imul
in
pop
cmc
fisttp
fs
push
inc
xchg
jo
sub
sti
lods
sub
out
imul
xor
(bad)
loopne
push
call
cmp
es
cmp
repz
repnz
fdivr
movs
in
jmp
xchg
and
lds
inc
mov
adc
outs
xchg
pusha
jnp
pop
dec
lods
push
cwde
movs
push
nop
imul
xor
mov
pop
les
into
and
and
mov
retf
adc
push
push
ret
mov
pop
or
fimul
lods
jns
cwde
add
call
(bad)
in
dec
nop
iret
fucomip
ret
daa
xchg
pusha
shl
push
mov
push
mov
cmp
mov
fisttp
int3
or
sar
enter
adc
test
test
pop
mov
add
movs
dec
call
daa
push
sub
mov
push
stos
pusha
add
mov
movups
dec
xchg
dec
loope
daa
lods
mov
out
cli
ficomp
movs
bswap
inc
out
xchg
cmp
add
inc
mov
or
stos
je
cmp
nop
in
sbb
movs
add
mov
aas
dec
cmp
push
jae
rcl
push
mov
rcl
movs
les
test
sti
aaa
rcr
idiv
outs
and
js
mov
adc
les
into
fs
mov
daa
mov
adc
stos
dec
ss
mov
ja
dec
inc
je
jge
pop
ret
sbb
pop
and
retf
push
push
rol
mov
in
jns
xchg
adc
dec
pop
hlt
add
adc
pop
int3
in
cld
add
inc
mov
vmovaps
mov
sub
mov
loop
sub
push
dec
add
out
mov
cmp
rcr
xor
dec
push
jne
xchg
mov
xchg
mov
cmc
mov
mov
bnd
pop
dec
stos
xchg
movs
mov
dec
gs
sbb
xor
cdq
into
movs
push
mov
(bad)
ja
push
daa
cmp
shr
dec
out
push
mov
cld
in
data16
call
jo
fwait
shl
mov
mov
jmp
aam
call
hlt
loopne
push
jle
ret
jae
mov
shl
ins
jmp
arpl
pop
cld
fmul
es
movs
stos
mov
dec
stos
stc
and
aam
xchg
gs
xor
dec
and
mov
adc
mov
add
adc
out
sub
or
(bad)
push
sub
and
cs
out
pushf
xor
stos
push
stc
jne
xchg
push
xor
xor
(bad)
jns
dec
mov
cmp
xor
lea
mov
or
cmp
arpl
sub
mov
shr
popf
(bad)
in
sbb
clc
push
adc
add
mov
jecxz
fs
and
mov
mov
sahf
cmc
jne
jo
sub
jp
mov
cmp
mov
jg
pusha
jae
push
jmp
cdq
jmp
movs
push
les
mov
cmp
or
xchg
sbb
outs
and
imul
ucomiss
cmc
dec
popf
out
popf
push
and
xchg
es
mov
int3
loop
dec
cdq
mov
xchg
(bad)
pusha
sbb
call
and
inc
push
mov
and
xor
call
add
jmp
dec
out
iret
add
mov
mov
mov
pusha
fwait
jno
mov
out
xacquire
push
xchg
lahf
xor
outs
ds
xor
ret
scas
sahf
enter
ror
cmp
(bad)
mov
(bad)
lods
push
lock
mov
mov
hlt
sbb
shr
movs
push
and
pop
push
fstp
jbe
and
imul
cmp
cmps
pop
xor
mov
popa
out
add
std
inc
and
icebp
nop
or
std
jae
popa
dec
and
dec
mov
add
push
adc
sbb
iret
add
pop
cmp
jae
call
jno
ja
mov
push
adc
dec
out
cmp
leave
retf
jno
addr16
inc
mov
jecxz
jle
scas
mov
inc
pop
and
(bad)
cmc
hlt
imul
xlat
sub
fisttp
pop
and
mov
es
sub
ror
mov
pop
dec
mov
mov
push
cmc
cmp
ror
xor
inc
cmc
xor
movs
into
mov
retf
ds
jbe
jmp
pop
aam
push
jbe
imul
push
das
mov
mov
push
retf
stc
xor
jecxz
call
pop
repnz
leave
mov
jge
sub
jp
cmp
lock
mov
jnp
add
dec
inc
cmp
rol
ret
fldenv
call
sbb
jnp
rol
mov
xor
pop
push
pop
mov
sub
std
out
dec
cmps
fstp
mov
imul
jl
rol
and
out
sub
add
(bad)
aad
and
cmps
div
sbb
dec
std
xchg
fwait
push
jmp
leave
xchg
imul
mov
inc
add
push
lods
and
or
call
mov
ins
int
mov
jo
jle
rol
repnz
sub
loopne
cmps
movs
out
mov
fst
js
or
fnsave
(bad)
dec
xor
jae
in
ret
jl
add
dec
adc
xchg
add
(bad)
jnp
mov
mul
sub
fdivp
cli
jne
dec
(bad)
fcomp
js
sbb
push
jo
(bad)
xchg
pop
imul
cmp
addr16
ret
and
mov
or
lock
cmp
add
daa
cmps
lods
scas
mov
pop
loopne
(bad)
ins
inc
cmp
fmul
inc
enter
je
addr16
or
cmp
cmp
outs
mov
data16
ret
cld
ss
movs
test
jecxz
imul
jge
mov
addr16
inc
xchg
xor
add
rol
jle
es
fimul
(bad)
add
add
mov
mov
lods
push
cli
rol
out
(bad)
fnstcw
out
mov
mov
ja
cmc
add
and
jo
pop
push
push
iret
fstp
pushw
inc
push
cmp
ins
cmp
je
addr16
inc
dec
fwait
inc
enter
ja
loop
jmp
ins
stos
(bad)
mov
ins
sub
out
pop
idiv
call
push
jle
ins
mov
sub
xchg
inc
push
test
cmp
iret
cli
je
loopne
inc
aad
movs
sub
mov
jne
mov
test
xor
call
mov
stos
add
lock
mov
(bad)
and
inc
daa
dec
xchg
mov
adc
jge
jmp
stos
or
pusha
out
mov
sub
into
int
scas
xchg
sub
in
cwde
scas
jb
jg
jb
dec
xor
mov
cmp
cmp
mov
push
add
je
pop
and
or
es
pop
cs
clc
jmp
hlt
mov
pop
movs
pop
mov
ins
je
adc
popa
es
(bad)
push
mov
lds
jmp
add
shl
jae
mov
repnz
mov
dec
(bad)
cmp
in
adc
cmp
test
cmp
sbb
jne
jns
lock
cld
xchg
int
mov
fnstcw
fs
mov
sub
xchg
sbb
out
nop
push
jmp
sub
xchg
ja
lahf
cmp
pop
(bad)
call
dec
push
cmp
js
rol
cmps
outs
popa
ja
mov
dec
pop
test
lahf
(bad)
sub
ss
push
xchg
test
cmc
sar
xchg
adc
cmp
cmp
std
ret
mov
pop
xchg
sbb
loopne
push
push
jne
das
or
push
rol
(bad)
mov
call
jns
mov
xor
push
dec
(bad)
cmps
retf
jl
fcomip
sub
pop
inc
hlt
in
imul
mov
dec
sbb
pushf
dec
sub
inc
cwde
pusha
stos
xchg
cmp
mov
mov
pop
cdq
fsubr
jge
enter
and
(bad)
jp
sub
inc
sbb
mov
into
or
mov
pop
adc
mov
icebp
rol
dec
pop
pop
into
sbb
jae
jno
ss
mov
mul
ds
(bad)
aaa
pop
jl
push
int
or
mov
push
daa
or
(bad)
sbb
aas
add
daa
fbld
cld
sahf
pop
adc
daa
int
addr16
and
iret
cli
jle
mov
(bad)
mov
leave
popa
(bad)
cmps
fisubr
push
dec
sub
dec
ins
lock
or
retf
push
jno
push
mov
lahf
push
xchg
mov
dec
cwde
ffreep
and
in
shr
adc
sbb
out
xchg
xchg
or
(bad)
not
fwait
and
mov
push
iret
ret
and
repnz
nop
addr16
outs
xchg
fs
mov
mov
ror
scas
jb
pop
lods
pop
movs
iret
pushf
push
xchg
add
push
mov
cmp
mov
outs
lock
lock
push
xchg
(bad)
xchg
add
or
mov
pop
mov
pop
(bad)
adc
xor
mov
add
xor
push
lea
mov
fdivr
retf
test
dec
dec
sahf
pop
dec
fwait
or
sub
push
xchg
imul
je
sub
push
js
(bad)
pop
adc
dec
fdivr
test
bound
push
sbb
dec
gs
pop
mov
pushf
adc
std
mov
lahf
(bad)
adc
les
mov
movs
and
rcl
retf
adc
dec
scas
sub
mov
imul
popf
pop
mov
addr16
jle
xor
jnp
inc
add
pop
jmp
fstp
and
dec
ficom
jmp
xchg
xchg
js
stc
cmp
stc
stc
adc
dec
pop
(bad)
addr16
xchg
in
das
mov
add
jle
aaa
bound
out
adc
and
xchg
pop
imul
push
fnclex
adc
jb
stos
pop
sbb
cld
hlt
push
add
mov
enter
pop
sub
popf
cmp
and
call
out
dec
mov
outs
(bad)
iret
xchg
or
pop
das
push
in
fwait
inc
hlt
or
test
xchg
dec
xchg
in
fimul
sub
jns
xchg
fidivr
(bad)
mov
jmp
aad
mov
jns
inc
or
dec
arpl
sbb
mov
jcxz
outs
inc
push
ret
fucomi
aas
leave
icebp
mov
or
or
mov
adc
mov
push
inc
jmp
jnp
cmps
jecxz
inc
xchg
ins
mov
xlat
add
in
rcl
mov
mov
xchg
or
clc
push
cmps
mov
cmp
xlat
cdq
mov
popf
sbb
sub
push
ss
push
(bad)
stos
mov
rcl
stc
icebp
mov
add
mov
clc
mov
cli
popa
bound
jo
push
test
daa
push
mov
or
xchg
jno
rol
call
cmp
push
fnstsw
dec
ficom
or
call
div
cmp
ins
retf
sbb
call
repnz
(bad)
jmp
pop
gs
sub
jl
sbb
add
dec
pop
js
out
fwait
dec
or
stc
sbb
adc
mov
es
(bad)
jl
call
pop
fstp
push
int
fcom
xor
inc
mov
imul
add
(bad)
mov
and
imul
mov
sbb
jo
repz
fwait
cmp
mov
pop
mov
or
or
out
sub
xchg
jae
sti
push
cmp
(bad)
sbb
pop
lds
clc
imul
fs
out
xor
dec
jp
sbb
xchg
shl
mov
fnsave
icebp
xlat
mov
ss
into
inc
loopne
sub
mov
jne
addr16
lahf
out
test
or
xor
inc
mul
xor
sub
pop
stos
(bad)
out
(bad)
out
xor
xchg
push
int
in
dec
inc
jl
push
jne
scas
xchg
data16
xchg
dec
mov
dec
xchg
pop
mov
inc
mov
xchg
mov
and
shl
lds
daa
cmps
sbb
xchg
push
mov
jp
add
mov
out
dec
pushf
pop
ror
std
aaa
loope
jns
cs
dec
in
retf
ds
ss
mov
pop
inc
ins
and
lods
jmp
adc
or
lock
in
bound
push
pop
dec
mov
mov
fldz
xor
and
xchg
and
nop
fwait
xor
scas
cmp
shr
inc
loope
aam
out
jns
push
into
fdivr
in
jns
sahf
jno
mov
cmp
pop
enter
aaa
sub
lock
jnp
aaa
shr
push
ds
mov
adc
push
cdq
bound
mov
push
fimul
out
push
(bad)
imul
cmc
mov
sbb
push
add
jne
sub
mov
scas
sahf
pop
cs
xchg
in
jmp
sahf
inc
xchg
jne
inc
xor
repnz
(bad)
call
pop
jbe
sti
jmp
mov
hlt
mov
mov
je
pushf
cdq
mov
(bad)
stos
push
xor
ret
mov
cmps
ds
ret
cmp
xor
sub
push
mov
bound
cwde
adc
push
and
push
mov
add
pop
cld
outs
leave
push
push
sbb
add
cmps
add
test
xor
or
sar
dec
mov
push
cmp
mov
pop
popa
test
ds
add
cli
aam
xchg
lea
dec
sub
mov
ins
js
loope
pop
fmul
mov
pop
inc
mov
cmp
add
or
mov
fcomi
(bad)
wrmsr
cmp
iret
retf
dec
loopne
out
lea
(bad)
je
enter
std
loop
out
mov
aaa
mov
xchg
scas
mul
jb
sti
mov
aad
push
inc
xchg
jecxz
shl
stos
fs
fadd
xchg
rol
mov
cmp
adc
mov
sar
imul
cmp
and
in
rcr
add
pusha
pop
movs
push
es
fbstp
adc
fs
cmp
pop
lea
add
into
cmps
in
int
icebp
pushf
jne
mov
cld
dec
dec
enter
cdq
cwde
cmp
push
movs
cmp
leave
cwde
cmp
loop
jno
or
add
dec
pop
jne
sbb
sbb
pop
sbb
enter
(bad)
mov
ins
frstor
xchg
out
push
fimul
cwde
jno
ffreep
popa
push
daa
sbb
dec
repnz
jge
dec
movs
hlt
mov
xchg
sahf
sbb
sbb
and
push
test
cmps
add
jb
and
dec
int3
call
stc
in
or
stos
enter
lods
push
mov
fstp
imul
mov
int
iret
sub
repz
mov
mul
sub
bound
fincstp
ins
jo
add
ret
daa
imul
out
pushf
lods
mov
push
sbb
adc
jns
fiadd
es
or
ret
dec
nop
fild
and
push
cdq
ror
xchg
push
loopne
inc
fwait
sub
xchg
cmp
adc
push
inc
push
fdivr
data16
mov
adc
mov
aad
mov
dec
sub
jmp
xchg
dec
dec
mov
pop
out
enter
jne
fbstp
pop
(bad)
mov
ds
mov
or
inc
xchg
sbb
lea
shl
adc
hlt
in
push
sub
cmp
cdq
mov
aad
fstp
loope
jae
je
call
repz
sbb
xor
dec
sub
mov
push
movs
hlt
loope
enter
and
mov
pusha
xchg
scas
test
lahf
call
sub
mov
int3
jle
push
push
xlat
xor
cmps
and
jl
loope
adc
jbe
mov
pushf
push
xor
xor
mov
mov
into
adc
dec
inc
mov
bound
rol
mov
jp
push
xor
dec
add
test
(bad)
fild
jmp
and
test
outs
daa
mov
pop
loope
clc
push
into
ins
or
push
and
and
psubsw
fwait
(bad)
pop
mov
jl
xor
(bad)
lds
outs
xor
jnp
loopne
idiv
sub
and
stc
jp
mov
sbb
inc
xor
loopne
out
(bad)
(bad)
cmps
imul
into
sub
mov
stc
mov
inc
push
sbb
lods
sbb
ins
or
ja
cmps
pop
cmps
jmp
mov
shl
jge
retf
push
rcl
div
outs
ud1
sbb
out
sbb
stc
dec
jae
in
mov
jae
ret
mov
mov
push
pop
jne
mov
push
call
jmp
inc
fdiv
cmp
fwait
into
daa
or
test
jnp
sub
sar
add
inc
loop
cmp
stos
ret
mov
(bad)
not
xchg
ss
adc
jne
ret
mov
push
fistp
jmp
push
ja
jecxz
ds
sub
test
mov
fld
fmul
dec
cmps
dec
cmp
sub
mov
cmps
ficom
sbb
jp
sbb
xchg
cmp
sbb
xchg
retf
and
xchg
cdq
ins
mov
jbe
cmc
inc
sub
scas
call
ret
or
inc
out
inc
(bad)
sbb
ja
pop
push
mov
stos
add
pop
outs
dec
mov
lock
sub
stos
lods
lahf
pop
(bad)
xchg
push
movs
mov
pusha
test
ins
test
mov
add
int3
inc
mov
xchg
inc
iret
call
bound
mov
int
inc
cmp
xchg
xor
or
jnp
and
sti
fisubr
xchg
sub
jbe
rcr
push
or
out
inc
dec
mov
and
mov
daa
dec
mov
push
aas
dec
dec
adc
clc
dec
mov
sub
je
rcl
lods
dec
sti
cmps
int3
push
pop
pusha
pop
out
push
pop
cmp
dec
fs
pop
dec
pop
repnz
push
aam
int3
in
fwait
xchg
lods
pop
push
mov
pop
ja
add
sub
sahf
inc
mov
cdq
jnp
add
cmp
inc
sub
cmp
call
ret
dec
xchg
inc
push
jns
push
cdq
aas
xchg
or
push
idiv
dec
xor
pop
fiadd
pop
in
sub
data16
das
loop
mov
ja
scas
scas
nop
inc
jmp
test
out
sti
add
sbb
aam
dec
addr16
add
xchg
and
push
in
pop
push
mov
std
push
cmp
and
xor
pop
push
outs
inc
push
push
inc
out
xchg
sbb
int
stos
sbb
(bad)
inc
in
in
jb
sub
cmc
retf
stc
test
mov
xchg
xor
in
dec
cmps
test
xor
js
les
jg
rcl
push
mov
pop
jne
xor
test
cmp
fldcw
pop
mov
movs
push
xchg
pop
cmp
daa
mov
jmp
xor
jno
pop
scas
pop
or
outs
loope
jge
sbb
inc
dec
xor
dec
aam
and
pop
or
jmp
cwde
mov
cmp
gs
int
test
fstp
push
sbb
aam
inc
int3
vmread
mov
neg
and
xor
das
mov
jl
inc
mov
pop
jb
stos
aam
mov
fsub
adc
outs
aam
inc
gs
ins
and
inc
ret
(bad)
fadd
outs
scas
dec
mov
repnz
push
cmp
lea
std
dec
xchg
int
out
xor
or
inc
and
push
pushf
lods
pop
movs
dec
mov
(bad)
sub
hlt
jge
lds
in
stos
or
ret
xchg
ja
ja
mov
pop
enter
nop
cs
pop
mov
cmc
mov
jge
bound
jno
adc
pop
gs
adc
cwde
dec
rcl
mov
lea
mov
xchg
ss
aaa
inc
and
rol
pop
push
sbb
fidivr
mov
cmp
sar
jne
hlt
sub
ins
sbb
dec
inc
js
leave
(bad)
lahf
jge
imul
add
pushw
xchg
fucomip
std
icebp
jns
(bad)
adc
xor
adc
iret
sbb
idiv
in
(bad)
push
stos
mov
pop
adc
or
pop
add
push
or
push
(bad)
loop
dec
pusha
inc
add
stc
sub
scas
rcr
sbb
inc
ds
dec
stos
xor
jg
jl
push
rcr
cmc
ins
movs
cli
xor
lea
add
pop
dec
cli
mov
sbb
test
jo
cmps
mov
loop
inc
jmp
cmps
adc
mov
stos
(bad)
mov
ins
lds
fisttp
js
rol
loop
push
mov
push
and
inc
out
hlt
push
data16
(bad)
mov
call
jge
loopne
cmp
aad
into
lea
test
aas
ss
dec
sub
and
(bad)
cli
lods
adc
cmp
or
cwde
shl
add
ins
jle
fisttp
scas
mov
fs
test
jae
push
push
mov
(bad)
sti
jecxz
int
stc
scas
push
(bad)
mov
xchg
cmp
push
jae
mov
jg
repz
mov
push
mov
movs
jl
repnz
lock
jge
not
retf
rol
mov
ror
jecxz
or
push
pushf
sbb
inc
mov
popf
int3
(bad)
fnstcw
packsswb
mov
cwde
and
add
data16
sub
jae
xchg
imul
pop
inc
sub
pop
jnp
les
jns
lods
jg
les
mov
test
sub
jmp
mov
or
xchg
pop
pop
cmp
jns
push
pop
sbb
push
dec
test
sbb
xchg
aaa
sub
inc
pop
xchg
fimul
add
xor
popf
lock
loop
dec
punpckhwd
ror
jle
stc
(bad)
push
or
cmp
xchg
aaa
test
xor
dec
jp
jge
push
cmc
sti
sub
xchg
icebp
arpl
data16
out
icebp
ins
or
shr
and
cmp
popf
push
jl
(bad)
popa
jmp
cld
mov
adc
mov
(bad)
xor
push
test
jne
fwait
(bad)
scas
aam
push
nop
stos
xor
ret
dec
adc
mov
ja
in
hlt
pop
call
cmp
in
cmp
or
loope
in
mov
mov
push
xchg
adc
jle
lds
lds
out
and
dec
add
jae
cmp
mov
out
cmp
in
out
loope
adc
xchg
arpl
fisubr
aad
inc
push
push
cmps
jae
dec
cli
fdiv
inc
outs
stos
fidivr
cmp
stos
xchg
dec
(bad)
data16
je
jnp
pop
push
inc
cmc
int3
jecxz
(bad)
pop
mov
xor
outs
scas
and
inc
dec
xor
fld
sbb
and
outs
mov
lods
and
sbb
cmp
ins
(bad)
cmp
inc
mov
mov
adc
cs
or
xlat
inc
inc
cmps
sub
and
jbe
push
ins
sub
call
ins
xor
dec
adc
and
js
dec
sbb
xor
stc
mov
xchg
pop
ficom
in
xor
mov
ins
test
call
pop
jns
or
pop
xor
adc
stos
xchg
(bad)
stc
push
(bad)
lea
cmc
dec
xchg
iret
pop
add
fsubr
pop
iret
ins
lea
jge
popf
(bad)
out
ror
loope
pop
(bad)
pushf
mov
pushf
iret
ret
pop
scas
or
and
fwait
cs
test
call
adc
sbb
cmps
repz
adc
movs
mov
mov
xchg
retf
shl
mov
scas
mov
dec
(bad)
loope
test
push
sar
push
lock
push
cwde
push
push
int
scas
mov
xor
das
cs
cmp
dec
cmp
jge
pop
push
jno
repz
clc
lock
mov
mov
sahf
pushf
xchg
sub
lods
mov
adc
dec
lods
(bad)
scas
mov
inc
pop
inc
(bad)
nop
jecxz
cmps
sbb
xchg
psubsw
jae
or
loope
mov
pop
mov
or
test
mov
jne
ret
jecxz
aas
fbld
imul
jbe
jno
cmp
inc
outs
add
(bad)
cmp
imul
movs
or
jbe
mov
aad
or
repz
add
pop
push
mov
mov
cmc
jmp
fld
adc
xchg
gs
pop
int
inc
add
stc
inc
leave
mov
mov
mov
xchg
mov
test
mov
imul
jnp
xchg
mov
fst
lods
enter
sbb
adc
push
in
inc
les
xchg
inc
loop
test
sub
sti
cmp
mov
add
movs
push
out
push
mov
mov
mov
std
cmps
in
mov
mov
and
mov
(bad)
in
outs
cmps
pop
mov
jge
sbb
fnsave
fcom
inc
out
lods
outs
mov
add
mov
pop
into
iret
(bad)
push
xor
jle
mov
dec
out
pop
push
call
sub
mov
lahf
and
movs
push
fcom
mov
push
cmps
leave
es
xor
test
fld
into
rol
or
jb
adc
sbb
fs
mov
xchg
(bad)
cli
sbb
(bad)
lds
loope
movs
adc
add
jo
ror
pop
movs
push
hlt
pop
hlt
push
cmp
mov
outs
mov
sbb
(bad)
pop
(bad)
loope
xchg
or
retf
ret
std
bound
push
imul
mov
xchg
inc
sub
jae
and
cmc
push
sbb
jp
push
(bad)
stc
add
shl
aas
push
jbe
int3
neg
out
mov
inc
lock
aas
pushf
jb
xchg
pusha
aaa
or
shl
inc
enter
(bad)
or
jmp
stos
add
sub
add
mov
mov
jecxz
mov
push
pop
cli
jl
cmp
jbe
mov
pop
mov
cmp
xlat
int
mov
int
xchg
imul
or
call
fldcw
pminsw
cmp
jmp
inc
pop
sbb
outs
bound
test
jmp
je
mov
js
loope
lods
inc
loopne
jae
and
push
mov
lds
or
mov
in
sahf
stos
xchg
ins
clc
out
stos
jl
xchg
xor
jmp
pop
(bad)
sub
nop
push
sbb
mov
push
mov
inc
sub
pop
cmp
(bad)
cdq
call
shl
int3
mov
adc
imul
jae
jb
(bad)
xor
enter
js
loopne
shr
sbb
aad
stos
loope
int3
xchg
sahf
push
jg
sbb
pusha
fcom
ret
push
jg
daa
sti
arpl
scas
mov
mov
or
and
das
push
scas
push
test
adc
xor
xchg
sahf
stos
dec
retf
cmp
shl
push
ret
fimul
jne
push
xchg
loopne
jl
jl
mov
popa
retf
fild
scas
mov
xchg
jnp
call
(bad)
out
adc
adc
mov
xchg
ror
movs
int
jge
add
test
test
iret
and
xor
push
xchg
cmc
test
fadd
push
cmp
jns
adc
push
and
cs
xchg
pushf
mov
lods
pop
jecxz
and
jp
pushf
cmps
cwde
sub
int3
push
mov
jmp
mov
(bad)
lods
mov
sbb
push
(bad)
fimul
sbb
test
inc
sbb
push
push
jo
cmc
stos
frstor
cwde
iret
nop
mov
mov
div
push
inc
inc
or
mov
iret
movs
add
stos
or
stos
dec
push
sbb
cmovnp
or
sahf
push
outs
leave
xchg
fdivr
(bad)
xor
(bad)
sbb
push
or
fmul
and
es
int3
mov
out
shr
hlt
mov
pop
mov
hlt
aaa
cli
cdq
mov
fstp
cmps
jmp
sbb
fiadd
cmp
and
mov
mov
retf
jle
les
push
into
or
mov
into
jmp
mov
adc
and
shr
inc
ja
mov
enter
je
sysexit
daa
mov
push
xlat
xchg
call
push
movs
dec
add
(bad)
xor
icebp
pop
outs
cmp
inc
xchg
push
std
pop
cwde
ja
and
(bad)
cli
fs
pop
sbb
cmp
in
and
push
dec
jle
dec
mov
or
jl
sti
add
call
push
movs
call
test
loop
lds
jp
cmp
les
ret
push
ds
outs
ret
dec
sahf
push
jno
sahf
int3
cmp
cmp
arpl
inc
fwait
push
and
das
jno
mov
push
push
fist
ficom
repz
mov
div
pop
xchg
cmps
(bad)
pop
sub
push
loopne
imul
inc
add
or
jnp
cwde
cmp
bnd
adc
dec
ret
mov
add
stc
cmp
je
mov
jbe
jmp
inc
(bad)
loop
fdivr
jne
pushfw
aad
rcr
loopne
mov
lods
add
ins
xchg
jae
rcl
dec
push
or
clc
jnp
xor
pop
imul
fimul
rcr
pop
fistp
sbb
sub
sbb
sti
bound
sub
popf
sar
jb
fiadd
sub
ins
jns
mov
xlat
mov
push
iret
neg
pop
sub
fsub
lods
mov
inc
mov
cmp
mov
into
fadd
fnstsw
xchg
ins
gs
and
cmp
iret
sti
pop
sub
pop
jmp
xchg
cmp
xchg
in
xor
mov
sbb
or
imul
movs
into
fld
clc
inc
ins
add
fmul
ret
nop
ds
mov
sbb
ss
and
mov
movs
inc
jb
fld
retf
out
leave
sub
sub
mul
xor
push
push
shl
(bad)
adc
mov
sub
cwde
icebp
ds
mov
adc
and
xor
retf
mov
xchg
pop
xchg
xor
mov
(bad)
out
push
adc
mov
cdq
add
aas
fsub
outs
in
sub
(bad)
sti
mov
dec
inc
pop
push
out
inc
int3
imul
out
xchg
(bad)
mov
cmp
cmp
repz
and
int
rol
cmp
ror
aad
leave
sub
loop
test
vmovupd
sub
and
pop
data16
dec
nop
call
mov
call
sbb
mov
pop
mov
mov
es
sbb
pop
jp
adc
xchg
inc
pop
mov
pop
push
cmp
not
out
cmp
add
mov
call
inc
retf
and
ret
dec
lea
sbb
int3
fild
daa
les
push
fistp
or
and
or
shl
repz
(bad)
lods
hlt
stos
add
mov
inc
dec
xor
cmp
xchg
gs
push
and
jecxz
loop
sub
arpl
ja
mov
xor
cmp
cli
fisub
nop
pop
sub
js
fsub
xchg
mov
lods
enter
sahf
cmp
mov
add
fisttp
ins
out
das
fisttp
pop
hlt
inc
jge
adc
lock
push
sbb
ret
mov
jb
(bad)
mov
add
ja
rcl
dec
sar
ret
cmps
outs
das
or
fsubr
mov
sbb
xor
or
jge
daa
push
leave
in
inc
inc
mov
jnp
adc
xchg
cli
add
dec
xchg
bound
rol
sub
jbe
scas
fcomip
inc
pop
mov
scas
clc
scas
retf
sbb
rcr
cli
push
push
jg
in
cwde
cmps
loope
rcl
int
lock
sub
mov
out
cmps
and
ror
fwait
and
and
int3
cwde
pop
int3
cmps
test
je
test
sbb
jmp
repz
push
xchg
(bad)
mov
daa
(bad)
and
mov
mov
retf
jnp
dec
mov
mov
inc
jb
sar
loopne
xchg
mov
mov
test
out
jmp
add
push
movs
add
mov
xor
mov
hlt
xor
les
add
dec
cmps
dec
mov
frstor
into
mov
push
enter
cmps
jbe
mov
in
adc
push
out
push
push
push
add
bound
aam
mov
aaa
imul
jae
hlt
sub
int
xor
adc
call
pop
mov
xchg
pop
sbb
(bad)
rol
adc
pop
sub
(bad)
xor
lahf
sub
rcr
loop
sub
cmp
fsubr
and
adc
js
in
mov
out
mov
mov
dec
mov
pop
fidiv
pop
js
cli
inc
je
addr16
cli
jmp
ja
push
and
outs
aad
push
add
ds
pop
jnp
lock
neg
aas
adc
sub
ret
jne
scas
cli
jl
mov
sahf
or
ins
icebp
jne
pop
push
cs
pmaxsw
mov
xor
cmp
mov
in
addr16
jo
dec
mov
dec
fist
scas
mov
enter
jne
inc
push
xchg
adc
in
aaa
jmp
std
jmp
fcmovnu
aas
push
nop
(bad)
and
bound
aam
outs
ret
ss
mov
mov
xchg
xchg
lahf
scas
js
xchg
pushf
inc
aas
xchg
enter
xchg
ins
lahf
adc
jae
ja
or
sub
and
mov
xchg
xor
add
loop
pop
test
inc
adc
bound
out
adc
mov
push
inc
int3
aas
ins
pop
jmp
(bad)
out
xchg
add
dec
and
imul
mov
inc
popa
xchg
and
mov
movs
jecxz
pop
push
jl
fwait
gs
lods
pop
out
jmp
test
lods
loope
into
jecxz
dec
aas
(bad)
mov
sbb
repz
test
(bad)
fcomp
stos
mov
jg
ins
add
test
xchg
push
in
fsub
ds
and
push
icebp
push
pop
leave
dec
lds
pop
(bad)
add
das
mov
out
mov
sbb
cmp
push
aaa
icebp
or
sub
data16
loope
fisub
xchg
pop
shr
aas
mov
xor
xor
cmps
and
mov
rol
push
dec
adc
inc
xchg
push
inc
jmp
xor
xor
pop
inc
or
sub
mov
pop
add
adc
rep
inc
add
es
imul
jg
test
add
ins
and
ror
mov
out
and
int3
leave
lods
push
shl
xor
push
push
cmp
pop
pop
movs
jno
mov
or
out
xchg
outs
lods
dec
push
xchg
push
pusha
mov
call
fs
mov
dec
mov
sbb
cmp
or
(bad)
push
push
imul
nop
push
imul
pop
loopne
xchg
fstp
add
xor
sub
stos
int
loopne
test
mov
push
mov
jmp
jl
mov
xchg
es
in
(bad)
push
jge
mov
shl
(bad)
pop
imul
out
and
mov
sbb
mov
xor
sub
mov
push
retf
mov
xchg
add
xlat
xchg
test
mov
iret
pop
push
fstp
mov
dec
and
mov
sub
and
into
nop
xor
fs
outs
inc
push
adc
cmp
cmc
ds
cmp
or
xchg
rol
push
sub
pop
xchg
push
and
cmps
sbb
(bad)
or
dec
mov
xchg
jno
sti
movs
ret
pop
push
rcl
(bad)
arpl
fs
push
or
mov
shl
iret
xchg
(bad)
mov
repz
mov
adc
ret
xchg
fwait
push
xchg
mov
jp
dec
and
mov
jmp
push
(bad)
cmps
mul
mov
cld
cmp
inc
cs
fwait
sbb
arpl
jge
arpl
or
rcl
xor
call
push
aad
(bad)
retf
mov
pop
movs
sbb
and
pop
inc
fmul
mov
dec
mov
lea
pop
mov
mov
fs
jnp
xchg
pop
pop
adc
push
sub
mov
push
cmp
cmp
out
mov
mov
inc
rcl
push
push
fisub
hlt
rcl
jns
icebp
jecxz
test
out
and
push
shl
movd
mov
and
add
nop
add
clc
outs
adc
jns
rcl
mov
lods
das
dec
jecxz
out
popf
cs
sub
lahf
inc
je
dec
mov
dec
data16
ins
jp
lahf
div
mov
scas
sar
sub
xor
mov
inc
bound
iret
pop
dec
stos
lock
jo
cli
mov
or
sqrtps
add
imul
clc
enter
xlat
cmp
mov
leave
popa
sbb
pusha
ins
adc
mov
test
ret
mov
aad
imul
dec
pop
and
gs
sahf
shr
add
movs
ins
xchg
cmp
cwde
ror
test
ret
jb
pushf
ret
aaa
jne
cmp
mov
icebp
mov
dec
pop
dec
or
lahf
cdq
sbb
xchg
movs
dec
dec
(bad)
xchg
test
inc
bound
lods
mov
mov
data16
(bad)
push
and
dec
out
leave
xchg
push
pop
js
sbb
mov
pop
cdq
xor
cwde
pop
xchg
lea
rcl
mov
retf
xlat
fcmovne
jae
pop
push
mov
xchg
jp
jl
test
pushf
xor
xchg
adc
jb
adc
ficomp
mov
mov
nop
jne
jp
cli
(bad)
fstp
scas
adc
dec
cmc
lea
fidivr
fisubr
cmc
xchg
inc
jae
add
mov
stos
int
fisub
jnp
shl
enter
push
jg
jmp
adc
cmp
and
or
and
and
inc
mov
inc
inc
cmp
xchg
mov
pop
lods
cmp
inc
sti
adc
mov
mov
loopne
cmp
inc
xor
mov
push
lea
stos
cs
and
iret
cmp
xchg
shr
xor
push
int3
mov
push
stos
push
jle
mov
adc
mov
push
mov
jns
cmps
hlt
and
pop
outs
mov
mov
popa
xchg
push
mov
xchg
adc
mov
jns
mov
push
pushf
inc
imul
inc
push
fist
mov
pop
fcomp
lods
mov
rol
cli
push
in
xchg
xchg
retf
rol
mov
scas
retf
cld
dec
fwait
sbb
imul
sti
jbe
inc
cli
mov
les
(bad)
add
push
jae
cmp
add
jmp
cmp
fnstcw
sbb
or
and
sbb
mov
and
cs
lock
sub
inc
addr16
add
jmp
and
out
adc
ds
inc
and
adc
bound
push
call
push
jp
iret
xchg
xchg
test
fcmove
lock
add
cld
outs
adc
xor
ret
jne
dec
xchg
or
int
loopne
call
inc
dec
scas
adc
xchg
jle
and
lods
fsubr
pop
mov
lods
lahf
ss
xor
or
dec
test
xchg
jmp
sbb
lods
push
pop
mov
pop
adc
pop
cmp
xor
adc
add
add
adc
push
mov
jp
pop
and
in
int3
mov
jle
pop
fistp
xchg
fcom
or
mov
fisubr
xchg
shl
xor
xchg
ss
lahf
mov
rcl
or
push
fidiv
daa
inc
stc
repnz
push
mov
jne
fcmovnu
inc
idiv
inc
lds
xor
fisttp
fild
test
and
or
pop
stos
xor
dec
je
inc
stos
jns
or
bound
and
out
adc
jp
bound
cdq
dec
xchg
adc
outs
xor
nop
mov
push
mov
loopne
pushf
xchg
pop
icebp
stc
jecxz
and
pop
nop
or
ds
ss
dec
push
lds
push
aas
mov
aaa
or
fsubrp
test
dec
call
sbb
push
xor
sti
cmp
sbb
dec
stos
cmc
popf
loope
repnz
fisubr
out
and
xor
addr16
mov
mov
hlt
jp
xor
mov
push
pop
jp
enter
inc
out
les
sahf
mov
mov
stos
mov
lahf
mov
arpl
inc
mov
jmp
add
ror
xor
(bad)
sub
push
fdivr
pushf
add
hlt
sbb
out
int3
xchg
paddsw
out
push
leave
ja
ja
add
jecxz
dec
pushf
inc
inc
iret
(bad)
cmp
jecxz
ins
dec
aas
imul
xchg
jg
into
xor
icebp
ss
(bad)
aad
jno
iret
jns
lds
inc
dec
jbe
lods
daa
loop
xlat
dec
repz
ja
inc
mov
dec
dec
push
push
xchg
or
pop
push
(bad)
rol
adc
add
ss
cmp
pop
lock
call
cwde
inc
mov
cdq
hlt
push
or
add
repz
mov
lahf
add
cs
cwde
popf
cmp
cmp
xor
adc
repnz
xor
or
shl
hlt
xchg
jae
sbb
jg
stos
iret
cdq
inc
push
cmp
jno
push
test
inc
jnp
mov
push
push
sar
cld
xor
sbb
dec
pop
xor
inc
jmp
push
or
and
sub
mov
or
bound
je
or
pop
(bad)
out
add
and
lock
in
pop
sub
dec
inc
aas
sub
and
(bad)
mov
imul
ror
shr
push
xchg
fcomp
cmp
pop
push
fidiv
retf
mov
lock
jns
cmps
xchg
jge
pop
lea
adc
psraw
aad
xchg
or
dec
xor
and
sub
call
sbb
(bad)
ins
sahf
add
cli
sahf
or
mov
xchg
push
xchg
jnp
popf
xchg
sbb
sahf
cmp
dec
adc
loopne
mov
or
cmp
sub
or
out
mov
mov
nop
mov
inc
sub
jb
(bad)
out
cmp
mov
ror
dec
mov
pop
loope
inc
mov
xchg
sbb
mov
jno
jo
sbb
jbe
sbb
stos
hlt
dec
(bad)
pop
push
call
jmp
jne
dec
jnp
scas
dec
sbb
cmp
das
adc
and
leave
jo
pop
jl
cmp
xchg
cdq
fwait
sbb
xor
imul
pop
and
xor
inc
into
xlat
lods
cmps
(bad)
retf
inc
fs
sub
push
retf
and
dec
test
pop
and
stos
cmp
fistp
xchg
repnz
jne
(bad)
ror
mov
add
xchg
hlt
fwait
(bad)
pop
shr
or
jo
mov
dec
je
leave
cmps
sbb
(bad)
xor
test
test
xor
cli
cld
dec
push
pop
adc
cmps
jg
xchg
xchg
mov
cli
mov
popa
sbb
mov
cmps
add
test
repnz
jno
les
je
jns
ja
dec
lods
aas
and
mov
dec
sbb
inc
jl
popf
sbb
xchg
arpl
test
xchg
fstp
sbb
mov
js
sub
call
enter
jo
mov
mov
push
out
cmp
out
add
jle
out
add
daa
mov
hlt
mov
(bad)
cld
mov
pop
mov
add
ins
out
and
data16
cli
mov
out
das
std
std
push
dec
ret
cmp
mov
mov
dec
es
mov
or
sbb
inc
xchg
(bad)
(bad)
rol
xchg
sub
sub
xchg
por
in
lods
retf
jp
mov
das
outs
mov
xor
out
adc
add
sbb
and
xor
jae
sub
je
push
leave
rcr
mov
lds
not
iret
dec
arpl
nop
test
loopne
jp
add
ds
les
(bad)
sti
or
jns
cmps
ret
ins
dec
and
jns
retf
or
adc
adc
enter
repnz
inc
pop
(bad)
int3
xchg
dec
fst
mov
loop
fld
mov
mov
lock
retf
pop
pop
imul
(bad)
mov
jns
lds
pop
mov
pop
jno
mov
arpl
xor
aad
lea
push
sbb
or
loop
adc
push
sar
gs
cdq
imul
adc
xor
rcr
add
mov
dec
and
jecxz
data16
icebp
dec
push
push
mov
aad
test
sub
lock
sub
pop
add
and
es
pop
add
hlt
retf
loopne
mov
xor
mov
(bad)
fs
lods
sbb
or
fcom
daa
inc
out
fs
ss
arpl
mov
mov
stc
add
xchg
mov
push
dec
inc
dec
sti
adc
retf
jmp
xor
shr
scas
scas
scas
pop
rcr
xor
fist
cmp
inc
add
dec
push
int
push
push
xchg
out
pop
fwait
or
bound
mov
in
aas
cmp
(bad)
dec
stos
mov
xchg
push
call
jno
rol
js
mov
pusha
loope
mov
test
dec
jns
pop
outs
mov
or
shr
in
in
adc
lds
out
push
push
dec
adc
addr16
fisttp
add
xchg
adc
xchg
jecxz
repz
add
lock
lds
mov
add
aad
ret
and
jecxz
repz
mov
aaa
(bad)
outs
dec
fsubrp
ins
stos
push
pop
into
dec
jbe
pop
pop
sub
or
xchg
sub
repz
shl
mov
add
add
or
jmp
test
push
xor
call
fs
fwait
add
movs
bound
pop
sub
in
pushf
es
mov
xor
inc
mov
fnstsw
adc
sbb
inc
mov
pop
inc
sti
cmps
and
mov
repz
mov
sbb
push
inc
fwait
scas
leave
mov
cmp
push
movs
call
sub
xchg
pop
in
loop
and
retf
mov
adc
sub
test
rol
lods
mov
sbb
dec
fst
stos
jmp
pushf
and
scas
lods
push
pop
fcomp
(bad)
pop
or
xor
mov
pop
mov
lods
pop
addr16
pop
sub
out
lock
sub
inc
les
fisttp
(bad)
push
push
imul
add
mov
lahf
punpckhdq
shr
xchg
mov
lds
stos
js
retf
add
mov
cs
test
dec
pop
rcl
popf
mov
dec
cmp
xlat
jbe
dec
fistp
sub
dec
inc
out
cdq
pop
shl
xchg
adc
sub
add
push
push
push
mov
push
xor
shl
mov
inc
add
sbb
push
adc
xor
js
adc
in
cld
pop
sahf
mov
in
xchg
mov
cmp
jl
or
xchg
sahf
mov
ror
jmp
aad
sub
shl
fs
test
ret
inc
pop
mov
and
inc
jp
or
xor
cmp
jns
push
je
mov
mov
fstp
xlat
cdq
push
pop
sub
sub
xchg
aam
loope
pop
mulps
out
int
pop
test
jp
rol
in
pusha
cmp
push
sbb
sbb
ss
leave
xchg
mov
mov
pop
xchg
in
pop
dec
je
cli
add
test
pop
fisub
frstor
adc
push
je
dec
in
add
inc
dec
adc
jmp
cmp
inc
les
xchg
loope
nop
mov
retf
xchg
dec
mov
nop
pop
les
xchg
push
rcl
push
mov
mov
adc
inc
repnz
imul
jbe
sahf
test
push
outs
les
ds
fsub
inc
mov
pusha
mov
sub
jl
cmp
and
cmp
fs
sbb
dec
dec
leave
ja
pop
retf
inc
pop
pop
(bad)
clc
mov
xor
pop
ret
arpl
popa
xor
retf
jmp
mov
out
movs
bound
imul
and
or
jne
jmp
adc
stos
lods
sbb
sbb
push
xchg
pop
cwde
push
cmp
in
push
and
dec
int3
sub
pop
xchg
loopne
and
jnp
retf
or
imul
sar
xor
sbb
or
and
retf
and
jl
xchg
cwde
sub
(bad)
adc
dec
in
stc
jae
or
je
xchg
adc
pop
push
sub
xchg
mov
xchg
jmp
or
inc
mov
jmp
add
jmp
push
fidiv
push
xchg
sub
test
idiv
or
pushf
mov
cs
and
mov
in
mov
shl
xchg
loopne
adc
mov
or
mov
int
mov
sbb
mov
(bad)
push
ss
xchg
add
fisttp
loope
adc
cmp
push
out
push
bound
(bad)
cmp
imul
xlat
movhps
mov
xor
cpuid
dec
sub
pop
dec
or
mov
dec
jmp
icebp
push
cmp
push
adc
xchg
push
fs
lds
out
dec
mov
sub
imul
cli
push
int3
addr16
jmp
std
mov
fsubr
mov
mov
loopne
fs
lods
dec
mov
adc
scas
je
pop
mov
out
xchg
and
dec
data16
sbb
sar
or
xor
and
ja
push
cmp
imul
mov
aas
push
ja
out
pop
mov
fcmovbe
adc
push
sub
cmp
in
jmp
xchg
inc
call
jne
lds
call
or
mov
mov
adc
jle
xchg
xchg
movs
neg
cmp
out
fdivr
mov
and
adc
mov
mov
fistp
inc
xor
pop
adc
and
jbe
adc
mov
mov
jbe
fwait
ds
retf
add
int
js
enter
cmps
popfw
je
ret
ror
xchg
call
or
inc
mov
out
fistp
mov
fst
dec
xor
retf
daa
arpl
xchg
fiadd
mov
data16
sahf
push
adc
dec
test
sub
test
loopne
sub
dec
fisub
fnstenv
mov
xchg
adc
data16
leave
lods
push
mov
jnp
sbb
push
mov
fadd
(bad)
push
mov
jnp
pop
jle
ins
pop
cmc
(bad)
imul
mov
or
enter
sub
das
cwde
adc
mov
fidivr
push
aam
cmc
data16
lods
mov
and
jb
loope
xor
or
test
cmps
mov
pushf
ret
loopne
loop
sti
ret
stc
push
mov
mov
aas
in
or
xor
mov
xor
ins
nop
sub
cmp
xchg
pop
test
in
in
inc
div
cmp
push
leave
js
cmp
sbb
repnz
(bad)
rcl
dec
and
ins
aaa
js
fidivr
out
mov
jo
(bad)
sbb
jae
cmp
mov
movs
inc
fimul
aad
jo
inc
inc
push
jg
push
imul
mov
test
sub
cwde
pop
pop
ret
mov
sbb
sbb
nop
test
std
pop
cwde
sbb
(bad)
(bad)
imul
jb
sbb
sbb
(bad)
xchg
sbb
mov
xlat
jmp
loope
fucom
call
mov
pop
push
ins
out
dec
fwait
pop
(bad)
jae
retf
fstp
arpl
or
jno
xor
xor
jno
in
in
pusha
test
push
jl
pop
cmp
fisub
sar
mov
cmps
sbb
add
adc
xor
push
outs
mov
mov
pop
xchg
out
test
mov
lods
sbb
pop
bound
mov
(bad)
mov
pop
pop
xchg
rol
ret
xchg
test
mov
lahf
test
sbb
add
push
daa
stc
xchg
aaa
aad
lods
in
cmp
movs
sahf
js
fsub
dec
pop
(bad)
lods
and
(bad)
dec
push
fstp
add
scas
(bad)
mov
aaa
dec
cmp
ret
out
cmps
cmp
int
and
popa
pusha
test
(bad)
mov
pop
clc
inc
cdq
mov
or
and
sub
stos
push
pop
(bad)
bound
lea
mov
push
jecxz
ds
sub
mov
and
xor
mov
mov
mov
out
push
xor
pop
cmp
jmp
xchg
mov
loopne
pop
out
das
mov
in
pop
(bad)
lods
sub
pop
popf
inc
pop
arpl
jp
lds
arpl
jle
xchg
fstp
mov
test
inc
adc
into
and
sbb
push
push
pop
jb
loopne
leave
out
sbb
shr
pop
xchg
mov
outs
sti
add
sti
xor
jne
lea
stc
mov
pop
ins
and
jp
push
das
fcomp
es
or
imul
in
pop
and
loop
push
inc
push
int
inc
add
jg
push
cwde
call
aad
adc
xlat
xchg
sbb
cld
or
mov
(bad)
xor
fist
int
cmps
pop
cwde
js
pop
pushf
xchg
push
sub
jl
ret
(bad)
inc
movd
or
aam
cmp
ret
popa
clc
dec
pop
mov
bound
xchg
loopne
cmp
sub
or
mov
test
loop
mov
and
dec
aaa
lahf
pop
adc
sar
leave
cld
pop
jmp
jne
push
sub
aam
repnz
dec
stos
mul
shr
arpl
fcom
leave
lods
mov
in
out
idiv
dec
mov
fld
mov
add
mov
dec
cwde
call
and
test
fisttp
sub
movs
jmp
jecxz
inc
and
pop
mov
or
mov
bound
sub
inc
xlat
inc
cmps
mov
lahf
dec
shr
ror
data16
sub
push
jno
push
lds
mov
fwait
mov
dec
pcmpgtd
pop
push
iret
nop
push
sub
push
mov
in
inc
push
xchg
scas
mov
mov
js
sahf
ss
xchg
dec
lahf
aaa
shr
xchg
jl
lods
in
mov
mov
xchg
sub
stc
out
in
cdq
sbb
dec
pop
cmp
jmp
adc
cmp
mov
jbe
ror
or
xchg
inc
les
lods
mov
es
push
jge
adc
cmc
cmp
pushf
sti
inc
mov
mov
cmc
pop
rol
dec
stos
sbb
inc
fadd
loope
(bad)
xor
imul
adc
test
sbb
call
jo
les
repz
push
cld
out
neg
adc
push
cmps
stos
lds
xor
lods
pop
add
stos
push
mov
xor
xchg
aad
ds
add
add
cmp
or
pop
outs
test
test
jne
push
mov
hlt
xchg
call
add
pushf
push
fxrstor
cmp
repnz
jp
in
pop
sbb
pop
push
sar
dec
adc
mov
push
ja
inc
mov
sahf
into
mov
pusha
icebp
jmp
fldcw
add
inc
or
rcr
xor
sub
ja
popa
cmp
jo
add
jmp
sahf
cmps
push
pop
out
(bad)
xchg
pop
dec
push
push
jle
mov
xchg
sahf
inc
xchg
cmp
nop
hlt
fwait
ret
cmc
adc
in
push
adc
addr16
sbb
(bad)
cs
neg
fwait
idiv
sub
(bad)
dec
das
pop
and
popa
adc
adc
xor
iret
cmp
ds
mov
jne
setge
sbb
push
rcl
sbb
mov
std
lea
push
fist
fidiv
daa
pushf
sub
and
sbb
dec
push
mov
add
mov
mov
nop
pop
lea
ins
rcr
adc
movs
sub
inc
sub
ins
call
adc
dec
pop
ss
int
popf
lahf
iret
loop
cdq
pop
cmps
mov
push
aam
aad
xor
iret
mov
adc
loope
lods
xchg
cmc
mov
movs
add
and
xchg
outs
out
adc
je
and
push
scas
test
(bad)
xor
push
lea
xchg
mov
sbb
ds
fdivr
sbb
or
mov
mov
mov
lods
lds
cmp
push
mov
shl
aam
sub
movs
bnd
fisub
stos
or
daa
dec
out
stos
pop
popa
(bad)
ret
div
and
mov
mov
add
pop
cmp
pop
sub
fs
add
cmp
imul
out
jle
aad
call
jge
inc
push
repnz
jns
xor
call
pop
sbb
pop
int3
jno
test
lods
(bad)
(bad)
jmp
xor
aad
sbb
stos
push
pop
jmp
mov
mov
ja
mov
js
iret
jb
inc
sub
mov
xor
xor
outs
mov
pop
add
mov
movs
mov
cdq
idiv
mov
sbb
push
ins
dec
test
dec
mov
mov
xlat
outs
sub
dec
or
in
adc
pop
test
sbb
outs
jg
lock
stc
mov
call
cdq
adc
mov
add
test
mul
adc
xor
fidivr
sbb
int
mov
(bad)
arpl
icebp
xchg
cmp
outs
mov
mov
mov
adc
or
mov
sub
fdivr
in
repnz
adc
pop
xor
out
pop
fs
mov
pop
push
das
std
xor
xor
pop
push
inc
test
mov
data16
pusha
test
pop
repnz
(bad)
jecxz
aas
jae
outs
adc
lods
mov
dec
out
pop
imul
inc
enter
xchg
dec
out
in
push
pop
ffreep
adc
and
xor
test
mov
aad
pop
pop
dec
cmps
or
int3
jmp
mov
push
mov
sub
mov
and
in
rol
inc
inc
mov
call
pop
aam
mov
ins
mov
cwde
ja
xchg
dec
pusha
frstor
mov
ja
xchg
mov
aaa
daa
popa
vpacksswb
sub
push
imul
sar
mov
jp
cmp
outs
dec
inc
in
pop
scas
jmp
sub
or
dec
jb
cmp
mov
mov
nop
call
jmp
mov
sub
repnz
dec
movs
cmps
loope
mov
or
fidivr
dec
mov
dec
or
(bad)
pop
push
movs
mov
push
stos
in
mov
xchg
jae
push
xchg
xor
or
fist
push
cmp
lock
sbb
jmp
aas
mov
out
xchg
dec
jge
sar
jle
mov
mov
std
push
icebp
loope
out
lds
xchg
aaa
xchg
fnstcw
mov
leave
dec
push
jmp
adc
leave
lock
out
out
or
sar
(bad)
repz
stos
sub
mov
sbb
mov
dec
sahf
sub
xchg
fisttp
pop
das
retf
mov
push
ins
cld
jge
and
je
repz
adc
popf
pop
fucomp
sbb
add
sbb
sbb
ret
mov
inc
out
repz
sub
test
add
movs
inc
addr16
mov
and
addr16
and
xchg
jb
mov
jnp
inc
(bad)
sub
dec
jno
xor
inc
hlt
sbb
(bad)
sub
test
dec
je
push
(bad)
loop
pop
push
xchg
inc
fwait
cmp
inc
mov
cmps
xor
repnz
out
mov
push
in
sub
inc
das
jle
jo
mov
jle
stos
mov
inc
inc
clc
retf
aad
stc
pop
sbb
jno
fdivr
sar
jne
add
mov
fidivr
xchg
cmps
fdivr
in
add
rol
pop
ror
rol
jecxz
sahf
test
arpl
lods
retf
cmp
stos
add
cli
test
test
movs
xchg
int3
shl
rcl
aam
jo
int3
stos
sbb
mov
jmp
pop
aaa
int
loopne
stc
int
test
int3
pop
add
movs
loope
retf
fsubr
in
mov
add
stos
jmp
bndstx
mov
out
push
(bad)
adc
retf
mov
cdq
dec
xchg
jmp
movs
data16
hlt
mov
outs
mov
pusha
mov
mov
mov
jnp
cmp
push
push
jb
sub
sahf
movs
mov
inc
xor
(bad)
xchg
dec
jo
adc
xchg
movsx
sub
or
mov
jae
xchg
push
mov
sub
cmp
cmp
pop
xchg
jg
cmp
cwde
fs
sti
aas
inc
add
and
jae
push
outs
shl
adc
in
shl
or
ror
cwde
jmp
out
jl
dec
das
push
sub
retf
push
mov
test
mov
dec
nop
mov
push
test
push
inc
test
lahf
test
lods
inc
mov
fldcw
cwde
dec
sbb
arpl
test
jb
cs
out
ret
xchg
ror
fidiv
aam
stc
and
mov
test
jo
out
inc
and
mov
aad
(bad)
js
pushf
pushf
pop
add
mov
in
fcmovnb
mov
leave
sub
mov
(bad)
and
sub
jb
mov
clc
mov
fiadd
cwde
fucom
xor
cli
push
xchg
inc
mov
ins
push
dec
and
fwait
cmp
imul
pushf
and
and
mov
xchg
sti
sahf
sbb
add
std
pop
es
sub
repnz
sbb
pop
les
xchg
lea
inc
mov
sti
les
lock
xlat
fwait
sub
cmps
sub
push
int
movs
adc
(bad)
fst
mov
lea
out
jb
push
jecxz
fisttp
sahf
jne
cmp
(bad)
int
out
(bad)
adc
(bad)
loop
jge
pop
(bad)
mov
inc
fwait
bound
jge
push
jnp
repz
cwde
jb
shl
xchg
cmp
and
xchg
jge
add
mov
loopne
xor
xchg
push
cmp
jne
xor
in
outs
ins
mov
push
add
adc
mov
pop
in
pop
cli
add
scas
pop
stos
sbb
fld
sbb
xor
(bad)
fcomp
push
mov
cmp
imul
dec
add
push
xor
add
scas
sahf
xchg
xlat
shr
pusha
out
adc
retf
sub
jbe
sbb
dec
sbb
sub
out
jae
dec
push
dec
loope
outs
aam
sbb
dec
(bad)
adc
or
mov
cmp
in
hlt
mov
test
fisub
dec
inc
jle
sbb
fwait
rcr
adc
or
shl
or
inc
cmp
xchg
dec
xor
cmps
jbe
mov
push
xchg
rcr
cld
loopne
add
aad
shr
out
(bad)
aam
ins
adc
arpl
mov
pop
das
retf
sar
push
stos
push
inc
push
test
pop
or
sub
cmps
aas
adc
pop
repnz
mov
fpatan
fst
lods
mov
adc
add
cmp
sub
cmc
ds
pop
add
addr16
into
adc
imul
or
push
ja
std
cs
shl
adc
es
lea
push
div
call
cmp
ins
pop
ins
adc
clc
jne
jb
imul
stc
jecxz
xor
inc
sbb
pop
mov
(bad)
mov
pop
sbb
lds
data16
xchg
ins
sbb
clc
sbb
push
cmps
cmp
retf
xchg
or
and
mov
pop
mov
sbb
data16
add
aad
loopne
jmp
lds
xor
cmp
xchg
stc
sub
push
adc
add
int
pop
mov
jo
sub
(bad)
jp
je
fmul
fs
pop
int3
sbb
mov
inc
fwait
arpl
shr
mov
push
cmps
movs
add
enter
mov
aas
pop
retf
and
sbb
mov
cwde
mov
cmps
mov
mov
in
xchg
mov
pop
iret
mov
mov
sbb
pop
ss
fwait
int3
sub
fs
call
jg
(bad)
jae
dec
add
mov
add
mov
fs
data16
jl
test
cmp
mov
outs
sbb
popa
jns
aas
dec
(bad)
sbb
or
mov
mov
jmp
mov
out
aam
bound
sbb
(bad)
movs
jmp
stc
test
pop
xchg
sar
sbb
fstp
scas
jne
or
xor
(bad)
xchg
lahf
mov
arpl
jno
ficom
icebp
mov
movs
icebp
fisttp
js
pop
leave
outs
pop
xor
sbb
xchg
fsub
mov
and
sbb
inc
aam
pop
mov
movs
mov
retf
push
(bad)
sub
outs
jge
push
pop
sub
lock
xchg
ds
xchg
xbegin
jmp
in
out
inc
sub
cmp
add
jmp
adc
ret
ficomp
idiv
dec
jmp
nop
shr
mov
ja
mov
inc
rol
icebp
aam
pop
mov
adc
stos
cli
mov
popf
mov
push
pop
dec
push
cmp
in
das
inc
mov
xor
xor
push
cmp
pop
xor
or
cmps
retf
sub
imul
add
stos
and
dec
out
add
push
or
cs
stc
sti
test
(bad)
arpl
mov
sub
jp
nop
outs
pop
clc
mov
mov
mov
cmp
(bad)
es
stc
mov
and
in
dec
(bad)
inc
or
je
data16
movs
pushf
shl
adc
pop
and
popa
cmps
aaa
push
repnz
aaa
jmp
(bad)
or
lds
scas
cwde
sub
dec
test
and
imul
push
je
adc
or
mov
fs
scas
xor
push
test
mov
shl
cmps
sbb
das
outs
stc
das
lods
fild
int
push
jl
xlat
in
dec
fucomi
mov
and
fs
je
push
jne
jo
jne
cwde
pop
stos
(bad)
ror
dec
jns
je
xor
dec
mov
out
and
call
xchg
ficomp
cmps
cmps
aaa
pop
dec
scas
mov
cmp
inc
jnp
(bad)
nop
xchg
bound
mov
pop
fdiv
push
adc
dec
jno
and
inc
aad
in
pop
dec
sti
inc
xlat
mov
push
mov
push
(bad)
push
lods
hlt
cli
icebp
jl
push
ror
adc
and
add
idiv
cmps
mov
aaa
sub
sub
ds
cmp
or
repnz
arpl
sub
mov
int
(bad)
or
loop
fistp
retf
popa
test
fnstsw
jmp
jnp
sti
sub
mov
sti
movs
mov
shl
mov
dec
ds
pop
jno
shr
lahf
push
mov
sbb
lahf
push
mov
int3
xchg
xchg
sub
sub
xlat
mov
loopne
imul
repz
movsx
std
sbb
lea
ret
(bad)
ja
xchg
rcr
outs
inc
js
mov
dec
addr16
retf
jl
sar
ds
inc
repnz
mov
(bad)
add
dec
adc
scas
sbb
scas
jmp
retf
test
push
in
loop
dec
sti
pop
enter
repnz
push
pop
ins
jmp
sub
jne
pop
(bad)
or
imul
imul
pop
iret
cmps
je
mov
ror
jb
pop
push
dec
test
mov
pop
fbstp
lahf
sub
push
pushf
inc
pop
pop
out
aaa
mov
jmp
repnz
mov
jo
cmp
lds
xchg
xchg
push
adc
repnz
out
pop
shl
call
xor
xchg
imul
add
jnp
or
adc
mov
cmps
sti
inc
jle
test
mov
cmp
mov
cmp
push
cld
test
leave
lods
movs
pop
push
xor
sbb
push
sbb
rcr
push
cld
imul
shl
jecxz
ins
xchg
dec
les
outs
movs
mov
popa
jns
stc
pop
into
or
sub
pop
sub
push
pop
data16
push
mov
lods
jmp
lea
ss
mov
mov
iret
add
scas
(bad)
mov
mov
(bad)
mov
daa
mov
mov
cdq
push
pop
js
add
cmp
movs
pop
push
(bad)
push
mov
js
inc
cmp
movs
pop
and
loop
aam
bsr
pop
inc
nop
vpsrlw
cmp
repnz
inc
pop
adc
pop
adc
jno
or
pop
fld
mov
xchg
push
rcr
(bad)
enter
dec
in
into
inc
fdiv
out
icebp
adc
dec
daa
loop
cld
sbb
push
(bad)
sub
and
cmp
lods
test
cmp
inc
xor
mov
out
cmp
inc
sub
adc
rol
lahf
ja
adc
icebp
or
test
jge
add
out
ins
dec
xor
pop
sub
inc
jbe
mov
cmps
xchg
sti
adc
idiv
stos
ret
jns
push
pop
or
cmp
vcvtpd2dq
push
scas
inc
in
adc
stos
cs
mov
aad
(bad)
mov
and
neg
cwde
xchg
inc
je
shl
pop
jb
jns
stos
xor
xor
fstp
call
pop
mov
sbb
not
pop
xchg
int3
xor
jl
cld
aas
fcom
and
jmp
stos
sbb
and
inc
sub
aad
repnz
std
pusha
stos
stc
push
loop
mov
daa
sar
(bad)
test
bnd
nop
int3
push
dec
jecxz
adc
or
aad
fwait
jle
xor
dec
push
gs
inc
dec
pop
jo
test
xchg
je
xor
jb
push
push
fdiv
inc
leave
int3
sahf
gs
imul
add
jns
adc
out
xlat
cmp
xchg
pop
imul
fld
cmps
in
push
mov
jle
sub
push
cmp
jns
(bad)
sbb
pop
fiadd
pop
rol
test
sub
sti
mov
sub
clc
call
bound
daa
addr16
jp
retf
hlt
dec
aas
push
(bad)
test
sub
or
in
ins
push
dec
push
dec
pop
daa
repnz
push
adc
pop
adc
test
dec
mov
push
mov
push
xlat
loopne
mov
test
dec
jle
fs
retf
fs
cmp
es
cmp
jecxz
jae
in
xor
xchg
repnz
mov
or
cmp
pop
cld
push
cwde
push
lea
movs
cmps
int
mov
xchg
xor
add
(bad)
ja
stc
enter
int
stc
pop
mov
mov
lods
sbb
jnp
dec
add
in
(bad)
cmp
pop
lock
cdq
stos
fimul
dec
sbb
jae
pushf
xor
pop
pop
imul
inc
(bad)
jmp
xchg
retf
jmp
in
pop
in
xchg
(bad)
and
push
pop
leave
into
dec
xchg
mov
inc
jne
mov
jns
movsx
aad
jno
inc
cmps
aam
add
fistp
push
movs
es
pop
jo
xor
test
fcmovne
xor
jmp
vcvttsd2usi
icebp
scas
xor
push
jae
fcom
dec
movs
hlt
xchg
(bad)
in
mov
lods
outs
test
cwde
and
or
das
xor
das
scas
rol
loopne
and
push
pop
scas
xchg
sub
push
lahf
call
jbe
pop
mov
repnz
jne
pop
mov
ins
ss
ror
(bad)
pop
inc
lods
enter
mov
(bad)
fs
cdq
xor
dec
cmp
or
popa
cmps
outs
bound
lods
es
push
push
cmc
loope
jp
adc
mov
xor
adc
mov
movs
lea
mov
adc
pop
ret
popa
ror
loope
and
adc
out
push
out
mov
inc
dec
sahf
dec
dec
push
dec
cmc
std
scas
cmp
ins
push
mov
loop
pop
xchg
ja
pop
out
sbb
pop
add
icebp
inc
lock
mov
shr
push
or
ja
stos
mov
repnz
and
jno
adc
neg
or
mov
dec
icebp
inc
mov
jp
movs
cld
push
cmp
mov
push
mov
popf
mov
arpl
mov
push
inc
xlat
ins
popf
call
idiv
ins
icebp
add
mov
out
xchg
repz
popa
das
adc
pop
push
outs
repnz
push
cmc
mov
push
pop
push
xor
mov
lods
daa
ds
gs
int
(bad)
add
jo
sbb
in
mov
fmul
lods
sahf
sahf
fnstenv
into
frndint
or
pushf
add
psubsw
cdq
add
sbb
xor
ds
arpl
iret
mov
jne
jns
inc
push
and
cmp
xor
mov
mov
mov
jecxz
iret
hlt
mov
xor
cmps
jbe
sbb
cmp
pop
jge
jnp
stos
inc
pop
sub
and
popf
push
or
out
push
and
ret
push
sbb
or
dec
push
lock
jle
jl
nop
lahf
lods
addps
fbld
mov
enter
ror
dec
adc
jb
outs
aad
arpl
fdiv
jae
aas
cli
fs
iret
mov
int
xor
sub
mov
pop
cmp
inc
gs
or
jmp
push
mov
cmp
jle
xchg
jg
loope
loop
mov
call
sbb
jnp
mov
and
sub
jg
add
fnstenv
fidiv
(bad)
imul
sub
test
outs
mov
cmps
push
xchg
jbe
mov
sub
inc
and
pop
fistp
pop
or
std
pushf
inc
fld
outs
xchg
retf
pop
out
push
dec
pop
pop
inc
fsubr
sbb
icebp
cwde
xchg
das
retf
jnp
jno
ficomp
les
mov
or
and
fstp
push
jnp
inc
ret
pop
outs
mov
shl
repnz
(bad)
sub
xchg
test
dec
(bad)
mov
mov
pop
mov
or
sbb
icebp
lea
(bad)
or
call
push
push
enter
je
jns
test
es
bound
lea
push
push
cld
ret
enter
inc
aaa
lods
lea
xor
ds
aaa
sub
mov
rcl
add
aad
rcr
inc
cmp
fld
inc
scas
repnz
jbe
cmc
loope
es
enter
call
hlt
sbb
cwde
jmp
cmp
cmp
push
pop
mov
push
mov
std
jl
xchg
xchg
clc
pop
inc
inc
cdq
inc
dec
retf
mov
pushf
daa
ror
movs
ss
jae
inc
cmp
es
pop
and
lock
lods
xor
mov
mov
push
push
(bad)
jnp
sub
mov
stos
mov
mov
popf
mov
movs
mov
jae
cmps
stos
repnz
sbb
pop
and
arpl
loopne
retf
(bad)
cmps
push
pop
(bad)
adc
pop
ins
mov
dec
sti
sbb
inc
mov
push
into
pusha
call
mov
test
and
xor
and
mov
sahf
dec
xor
mov
fild
pop
mov
repnz
adc
push
mov
adc
adc
push
xor
fidiv
(bad)
(bad)
fwait
jg
(bad)
cmps
mov
and
and
test
into
jns
movs
adc
adc
test
movd
movs
(bad)
mov
repnz
cmp
stos
cmp
jne
push
js
jno
imul
jb
test
sbb
retf
adc
jle
fisubr
imul
js
shl
jmp
rcr
in
cld
mov
jne
jae
push
mov
xchg
loope
mov
cmps
jge
imul
out
sar
ins
pop
(bad)
mov
xlat
push
out
out
loop
popf
inc
sub
sub
and
inc
sbb
ss
fisttp
fxch
sbb
jmp
pop
inc
pop
push
pushf
cmp
add
es
and
pop
sub
shr
out
xlat
aad
push
int
popf
jns
add
mov
xchg
hlt
in
push
mov
push
mov
add
sbb
xchg
fucomi
(bad)
dec
in
(bad)
mov
jbe
jmp
scas
lahf
sub
fcomp
fdiv
mov
dec
jns
call
push
call
inc
imul
inc
mov
push
xchg
or
mov
jp
leave
cmps
sub
cmp
xor
and
scas
rcr
pop
das
push
sbb
inc
jmp
ins
pop
adc
pop
popa
(bad)
mov
mov
ja
xor
retf
out
lds
int3
push
popf
dec
mov
add
sub
je
neg
test
add
adc
mov
test
and
stc
lahf
mov
xor
or
and
fs
xchg
pop
jns
add
movs
push
cmp
in
scas
mov
test
jno
sub
push
addr16
es
(bad)
cmps
inc
push
mov
sahf
push
into
fcomp
fistp
or
mov
fdivr
lea
mov
daa
ins
cs
jp
mov
push
mov
loope
fxrstor
push
bound
jbe
add
(bad)
push
cmp
add
ret
push
lock
add
ja
aad
cmp
pop
sub
icebp
dec
in
scas
mov
adc
mov
sub
imul
out
repnz
cmp
mov
inc
cwde
add
js
jle
not
mov
push
dec
cwde
mov
sub
lea
pop
sbb
xchg
cmp
retf
ret
jae
inc
out
xchg
scas
scas
mov
js
shl
in
jle
pushw
add
cmps
cld
dec
push
mov
xor
movhps
arpl
cdq
dec
xchg
inc
fs
out
fidiv
das
ins
pop
sub
push
adc
mov
aam
dec
add
test
enter
lahf
xor
call
jge
div
imul
pop
es
outs
(bad)
scas
stos
cmp
jle
and
sub
dec
fist
adc
enter
mov
popf
repz
sbb
pushf
dec
iret
rcl
fwait
in
xchg
or
ret
mov
loope
sub
popa
add
mov
pusha
add
mov
in
adc
scas
mov
jecxz
cdq
(bad)
jl
in
imul
out
adc
das
jmp
sub
adc
ret
adc
dec
xchg
mov
cmp
bound
pop
clc
loopne
pop
sbb
adc
cmp
inc
xchg
out
dec
out
into
lahf
mov
cmp
mov
stos
popa
not
and
mov
and
sbb
sub
pop
ret
pop
cdq
bound
push
mov
inc
jp
je
or
push
and
dec
pop
out
retf
sub
and
jmp
xchg
xlat
sub
push
fisubr
and
ss
in
scas
aas
and
test
push
xchg
and
repnz
xchg
out
call
pop
lods
retf
call
loop
(bad)
cld
into
les
sbb
addr16
aam
data16
in
pop
ror
sbb
cmp
in
jb
clc
mov
adc
movs
dec
mul
mov
and
ds
dec
dec
pop
mov
call
enter
loop
fidivr
retf
pop
aas
xchg
icebp
mov
inc
jmp
xor
xchg
add
or
out
js
jl
inc
fs
scas
ds
xchg
sbb
lock
ret
loop
movs
stos
aaa
or
and
mov
test
(bad)
or
cmp
jne
mov
add
jb
rcl
jae
pop
test
scas
cmp
es
pop
mov
sub
push
shr
pop
and
pop
sbb
inc
popa
aam
adc
cld
dec
xchg
mov
sub
cmps
out
popf
mov
cld
xor
or
call
mov
sbb
ret
sahf
aam
jp
push
sub
mov
jecxz
dec
movs
shl
mov
mov
mov
dec
in
xchg
cmp
cmc
sub
sbb
je
enter
mov
mov
add
cmp
in
xchg
add
stos
mov
rcr
inc
jl
xchg
es
cli
mov
or
mov
sar
mov
add
cmp
cmp
mov
add
cmc
mul
lds
adc
pushf
sub
xor
loopne
lods
and
in
popa
inc
mov
pop
or
in
out
fist
mov
xchg
movs
imul
dec
or
sub
fcmovne
sbb
pusha
imul
std
in
enter
sub
aam
pop
cmp
ins
sub
push
retf
push
adc
pop
inc
sti
or
push
sti
ret
jl
xchg
and
stc
cmp
mov
outs
inc
outs
jecxz
push
inc
and
mov
xor
sub
pop
mul
in
mov
cmp
loop
fistp
mov
xor
imul
in
add
ds
lea
pop
sbb
std
sub
and
(bad)
inc
call
ja
(bad)
stos
sbb
dec
cmp
inc
inc
jecxz
movs
adc
or
jl
cmp
jns
repz
popa
pop
mov
std
test
adc
sub
int3
inc
in
out
xchg
imul
enter
fld
pop
je
out
je
arpl
lea
mov
pop
pop
scas
test
push
outs
pop
pop
push
icebp
lods
jmp
test
inc
push
inc
outs
adc
pop
pop
test
stos
mov
(bad)
pop
sbb
sbb
mov
adc
imul
sar
push
mov
imul
into
mov
mov
clc
out
stc
dec
sub
js
out
adc
repnz
cmc
clc
gs
repz
aam
cmps
mov
cmp
cs
jmp
dec
in
mov
(bad)
in
adc
push
pop
sub
mov
retf
aas
pop
cmc
push
cwde
out
inc
jae
mov
xchg
mov
sub
pusha
aas
pop
adc
stc
sbb
mov
mov
in
aaa
mov
retf
mov
jl
out
out
bound
xor
ja
jecxz
repnz
adc
mov
push
mov
cmp
aas
add
pop
sar
sbb
push
lahf
jbe
inc
add
jecxz
mov
inc
add
test
mov
push
inc
push
das
xor
or
or
sbb
test
test
xor
repz
icebp
aam
(bad)
pop
push
mov
ror
and
xchg
mov
xor
ficom
lods
ficom
jnp
fidivr
retf
movs
cli
test
retf
in
ins
pusha
out
ja
jmp
in
dec
je
xor
lahf
inc
mov
rol
xor
mov
outs
lock
mov
std
ror
push
movs
imul
xor
test
adc
mov
dec
scas
or
xor
xchg
push
sub
pop
(bad)
pop
mov
fwait
cmps
rol
into
clc
xor
ret
dec
ins
idiv
das
leave
mov
inc
push
add
shr
call
mov
lods
dec
adc
mov
aam
nop
cmp
dec
add
mov
push
inc
jbe
popf
mov
icebp
(bad)
sub
xchg
addr16
pop
xchg
sub
js
pop
retf
add
ins
inc
mov
cli
ret
xchg
inc
addr16
data16
push
sbb
fstp
jne
repz
add
(bad)
or
add
mov
mov
or
push
test
jo
inc
pop
jecxz
xchg
mov
out
jecxz
sub
jmp
jno
and
call
repnz
stc
shl
cmp
mov
dec
and
pop
out
adc
jg
in
xchg
cwde
push
xlat
xchg
retf
jo
sbb
sbb
test
adc
mov
xchg
jge
and
aas
sti
addr16
dec
push
cmp
xchg
push
enter
nop
fmul
movs
std
or
push
test
loopne
jo
mov
xor
out
xchg
std
push
inc
dec
sbb
das
adc
pop
clc
sbb
inc
mov
jge
test
sub
push
push
sbb
out
mov
xor
and
lods
retf
push
push
invd
inc
inc
pop
mov
lea
loop
dec
jmp
mov
dec
push
ss
pop
xor
mov
rol
mov
fbstp
mov
ins
ficomp
adc
dec
leave
ret
xor
pop
hlt
loopne
xor
dec
mov
sar
jns
pusha
outs
inc
cmp
ins
cmp
dec
push
ds
pop
loope
mov
imul
loop
jg
sub
out
inc
or
inc
rol
xor
in
(bad)
in
add
cmp
adc
jb
sub
or
adc
push
in
and
out
ret
out
jmp
std
mov
inc
sbb
push
mov
ss
or
mov
cmp
icebp
mov
dec
shl
hlt
aad
pop
sub
in
hlt
sti
inc
(bad)
jns
mov
aas
fist
ret
pop
jb
add
fbstp
inc
adc
mov
movs
dec
retf
rcr
xchg
inc
test
mov
fstp
stc
sbb
push
or
popf
mov
shr
mov
out
retf
jns
push
jbe
or
leave
xor
bound
(bad)
cld
leave
push
test
ja
movs
aaa
addr16
jl
pinsrw
mov
call
xor
aas
rcr
lea
jb
sub
nop
out
adc
jo
mov
add
pop
ja
cwde
jnp
pop
and
inc
pop
fdivp
mov
sbb
sbb
or
add
push
ret
or
push
test
in
call
stos
jmp
rcl
repz
js
mov
js
adc
and
(bad)
out
push
and
jp
or
xor
cdq
xor
pop
jns
xchg
mov
pop
leave
sbb
sbb
in
xchg
push
lods
mov
inc
xchg
fsubr
sahf
scas
add
fcomp
test
cmp
movs
add
cmp
jp
clc
pop
sub
mov
ja
cmp
cmc
xor
or
xchg
mov
(bad)
outs
clc
sub
movs
inc
imul
cmps
sbb
push
cmp
jae
popa
dec
arpl
ins
sar
idiv
fimul
sbb
sbb
or
sahf
mov
sub
mov
pop
push
push
pop
adc
cmp
aam
in
dec
pushf
sub
jne
cld
addr16
(bad)
xor
(bad)
daa
mov
hlt
lods
pop
shl
sub
jbe
aam
xchg
mov
fisubr
cmps
adc
aad
or
and
imul
mov
aam
mov
cmp
mov
xor
imul
ret
mov
push
int
aas
jg
cs
sbb
ja
call
ja
fcmovnb
push
dec
in
loope
test
push
daa
pop
or
enter
inc
or
add
mov
cli
mov
mov
(bad)
arpl
jmp
ret
sbb
or
aaa
push
xor
xchg
das
or
sbb
dec
ss
(bad)
cmc
xor
xor
fmulp
cmp
adc
cwde
jne
retf
jo
arpl
outs
lods
dec
sbb
sub
push
pop
push
sbb
mov
jbe
mov
ret
fld
mov
cmp
nop
out
pop
or
sub
cmp
add
jns
jg
xchg
mov
mov
mov
fdivr
outs
sar
mov
int
fs
sqrtps
lahf
lods
mov
add
sub
jo
mov
sub
sbb
mov
inc
xchg
xlat
shr
and
stos
xor
lahf
mov
and
cmp
call
inc
add
(bad)
ds
jmp
lea
mov
pop
mov
js
ins
dec
inc
loopne
sbb
pop
loope
and
cmc
outs
aam
jmp
fwait
pop
add
movs
movs
in
lods
inc
fs
cdq
cmps
ins
(bad)
jecxz
fidiv
jge
jmp
mov
js
outs
xchg
xchg
repnz
xor
fimul
mov
(bad)
retf
push
push
ret
sbb
(bad)
(bad)
in
lahf
pop
pop
in
pop
mov
cld
push
test
cs
test
push
dec
ss
shl
pop
dec
sbb
ror
xor
inc
sub
mov
addr16
mov
and
clc
mov
dec
ins
adc
int
sub
mov
f2xm1
pop
mov
jns
pop
cmps
icebp
iret
add
xor
repnz
test
jae
mov
mov
lahf
enter
fs
ins
inc
cli
inc
mov
xchg
dec
out
inc
(bad)
push
pop
or
push
pop
push
inc
cmp
mov
pop
add
in
push
cmp
dec
xchg
or
jae
outs
sub
(bad)
fcomi
inc
cmp
sbb
nop
rcr
sbb
enter
cli
mov
xchg
push
loopne
jmp
mov
cld
neg
sub
dec
shl
push
pop
(bad)
adc
imul
test
(bad)
sub
iret
or
mov
ret
inc
pusha
call
or
dec
jno
fidiv
xor
inc
jne
push
idiv
data16
fimul
sbb
and
sbb
mov
and
pop
mov
mov
mov
dec
aas
xor
jp
dec
xlat
inc
inc
jne
movs
inc
mov
cmp
sahf
adc
pop
(bad)
xor
push
adc
sti
adc
jge
push
stos
ins
stos
(bad)
fimul
or
inc
mov
imul
mov
fwait
mov
add
jno
stos
sar
lods
lods
mov
add
add
inc
dec
call
vpunpckldq
sbb
retf
push
mov
mov
mov
out
shl
ja
jbe
mov
cmp
aam
scas
mov
jl
mov
cli
jge
movs
nop
enter
xchg
mov
fisttp
icebp
cli
clc
jecxz
adc
sbb
mov
push
sbb
push
int
mov
dec
push
or
mov
and
xchg
push
out
sahf
je
dec
sub
cmc
sbb
sbb
cs
das
stos
inc
dec
adc
xchg
mov
jbe
repz
idiv
sub
xor
inc
imul
mov
jecxz
push
ins
addr16
test
dec
pushf
fcom
enter
pushf
pop
mov
ffreep
ret
xchg
imul
int3
sub
rcl
fidiv
js
xchg
aam
mov
mov
loope
push
call
inc
out
fld
sbb
mov
adc
cmps
mov
loop
fistp
adc
or
pop
jle
sbb
or
loopne
popa
int3
ror
mov
inc
nop
cmp
adc
jg
dec
dec
repz
lods
push
sbb
push
int3
jmp
mov
pop
in
pop
inc
stos
cdq
push
ins
jb
xchg
aad
adc
std
adc
std
sahf
loopne
sbb
or
mov
fs
mov
mov
xor
outs
inc
and
pop
popf
(bad)
fwait
cmp
cmps
xchg
push
dec
out
test
jl
jnp
stos
js
mov
jno
mov
out
ins
aas
lahf
jge
push
pushf
int
dec
imul
dec
pop
cmps
inc
loope
out
je
les
retf
lods
or
pop
push
(bad)
mov
cmp
pop
push
pop
xor
sbb
je
cld
(bad)
adc
push
(bad)
xchg
cdq
cmp
xchg
mov
xchg
loopne
or
cmp
jne
idiv
ss
into
push
cmp
mov
or
cmc
cmp
pop
outs
arpl
arpl
add
pop
loopne
mov
les
push
inc
cmp
jle
sub
daa
mov
(bad)
shl
xchg
stc
mov
sub
mov
pop
movs
jbe
pop
arpl
xchg
push
movs
int3
cwde
iret
ja
push
les
les
ret
pop
push
out
push
add
cmps
dec
lds
adc
mov
mov
ret
jle
mov
inc
cmp
enter
mov
jb
xchg
push
push
hlt
into
aad
ret
loopne
adc
mov
out
lahf
xchg
dec
cmp
cmp
jno
jle
bound
shl
test
neg
dec
fistp
movs
lods
xlat
push
in
dec
sti
jg
imul
adc
movs
mov
or
dec
sbb
inc
adc
xchg
mov
push
ror
push
ret
les
loop
push
test
inc
je
inc
loop
fs
cmps
or
ds
or
fidivr
inc
pop
pusha
pop
sar
fcomp
cmp
pop
sbb
popf
mov
ret
xor
loopne
scas
pop
add
jmp
pop
sbb
scas
push
cmp
inc
mov
cwde
pop
in
mov
push
pop
shr
adc
imul
fcomp
mov
popa
dec
mov
jle
enter
pop
lods
(bad)
add
(bad)
dec
nop
push
pop
xor
push
aaa
(bad)
fist
mov
mov
push
gs
adc
imul
xor
jle
movs
pushf
neg
ins
adc
mov
dec
retf
outs
(bad)
repnz
lock
cwde
mov
dec
push
stos
cwde
add
repz
scas
cmp
and
cmps
fs
sbb
or
test
pop
sti
out
scas
jne
fdiv
push
into
repnz
adc
dec
and
jns
or
test
(bad)
and
dec
jo
add
xor
aaa
ins
xchg
push
xchg
loope
inc
rol
shl
dec
fwait
pop
cmc
pop
stos
mov
cmc
add
shl
popf
push
add
(bad)
and
in
ja
cld
jne
or
jmp
jb
rol
popf
das
retf
js
out
and
sub
test
pushf
dec
hlt
and
(bad)
fcomi
push
xchg
mov
add
xor
(bad)
arpl
sub
test
add
mov
xor
add
ds
push
mov
mov
xchg
add
mov
pop
add
sub
inc
loopne
call
push
pusha
fnstcw
mov
daa
test
out
jp
adc
mov
mov
je
les
or
cmp
adc
xchg
adc
popa
daa
or
cmp
test
sar
add
add
inc
gs
cmp
test
cmp
sub
or
or
aaa
daa
mov
sbb
mov
mov
jb
ins
inc
xor
lds
or
push
and
rcl
sub
popa
xlat
fdiv
and
outs
adc
xchg
repz
ins
cwde
mov
cmp
loop
std
daa
cmps
aaa
sbb
sub
adc
das
mov
retf
icebp
add
and
jae
sub
fdiv
clc
jp
or
sbb
jae
xor
ins
test
int
and
jne
daa
bound
inc
add
pop
ins
cmc
push
pop
xchg
jno
xchg
and
or
or
shl
and
pop
jg
(bad)
enter
clc
jns
sti
pop
dec
(bad)
jmp
dec
sahf
xchg
xor
inc
mov
or
pushf
cmp
cs
ret
aas
mov
sbb
mov
or
(bad)
fs
xchg
ins
sub
adc
or
xchg
vcvtps2pd
mov
add
xor
retf
inc
or
sub
and
int
test
pop
imul
cdq
sub
ja
mov
mov
mov
stos
sbb
jbe
pop
push
(bad)
sub
dec
xor
fisub
push
jl
ret
retf
pop
mov
ret
pusha
rcl
cmps
cmp
call
stos
add
jg
adc
mov
(bad)
in
push
bound
add
inc
jecxz
fisubr
outs
sbb
data16
mov
or
sub
xchg
repz
and
lods
xchg
test
inc
out
xchg
rcl
add
sar
mov
xor
add
mov
push
adc
pop
sbb
mov
js
mov
and
xor
xor
adc
mov
sti
dec
sub
aad
inc
mov
mov
std
cdq
aam
mov
inc
in
scas
nop
sbb
push
jl
push
mov
mov
rcr
addr16
xchg
cmps
stos
clc
cmp
leave
sub
mov
xchg
loop
xchg
int3
les
jmp
xchg
call
fadd
ja
cmp
cmps
inc
xchg
div
sub
jnp
cmps
pop
push
pushf
ins
fild
adc
cmp
mov
jecxz
and
jmp
cmps
lock
pop
inc
sub
pop
cli
les
and
arpl
pop
imul
mov
mov
daa
dec
les
dec
mov
fwait
push
in
dec
mov
push
push
cmp
lods
fcomp
out
out
mov
xchg
mov
dec
cs
mov
into
sbb
add
imul
mov
lahf
mov
aam
or
push
jecxz
sbb
xor
arpl
xchg
adc
mov
arpl
ins
scas
cmps
mov
mov
call
mov
out
adc
cmp
pop
mov
sub
mov
add
repnz
inc
stos
inc
push
sbb
mov
mov
mov
movs
shl
les
pop
push
inc
mov
leave
pop
(bad)
cmp
ret
in
scas
push
test
xchg
xchg
test
sub
and
lea
jnp
adc
xchg
outs
xor
in
lods
test
push
jmp
xor
jae
pop
ficom
fimul
aaa
hlt
sub
not
aas
and
pop
cld
mov
mov
ror
lods
sbb
pop
arpl
xchg
popa
loope
add
clc
out
sbb
push
xor
mov
adc
in
dec
je
pushf
lods
pop
jne
add
test
add
mov
sub
fs
cmp
mov
sbb
xchg
(bad)
push
add
push
mov
cmp
icebp
lahf
imul
dec
inc
outs
xlat
out
add
mov
and
aas
fsub
jge
dec
stos
pop
shr
jmp
neg
adc
mov
jb
fldenv
je
xchg
pop
dec
aaa
(bad)
(bad)
mov
scas
repnz
rol
xor
outs
xchg
fistp
ret
(bad)
push
ins
mov
fcomp
nop
dec
jno
leave
push
add
pop
sar
jno
mov
ins
stos
adc
pop
pop
jmp
mov
das
sbb
fnsave
mov
or
jle
jg
sub
jge
es
mov
jp
cmp
xor
xchg
jno
cmp
mov
sub
push
in
(bad)
push
dec
cmps
jmp
adc
jb
(bad)
mov
aaa
stos
movs
add
inc
(bad)
sbb
adc
jmp
ins
stc
or
cmp
fldenv
xchg
dec
aaa
mov
stc
int
or
aad
stc
mov
ror
push
(bad)
jge
and
pop
mov
dec
outs
cmps
xchg
dec
dec
jl
xchg
out
mov
fcomp
mov
hlt
lea
das
shr
mov
push
ins
scas
jge
mov
int
mov
or
(bad)
mov
js
scas
pushf
pop
dec
loop
mov
out
sbb
sub
adc
jl
(bad)
jns
sbb
sti
sub
push
mov
or
loopne
jo
sub
neg
(bad)
test
push
ror
retf
ds
mov
cs
fldcw
jns
dec
pop
in
xchg
jmp
mov
xchg
jbe
mov
sbb
loope
mov
call
int
inc
adc
dec
pop
inc
add
mov
retf
movs
push
xchg
cld
pop
mov
sub
xchg
and
and
aad
xchg
mov
std
pushf
pop
and
pop
inc
dec
repz
cmc
(bad)
sbb
aaa
adc
sub
xchg
inc
fstp
and
sub
ficom
inc
call
jp
and
xchg
mov
ror
or
out
adc
iret
cmps
cmp
out
lock
add
in
sahf
leave
dec
cmp
add
and
(bad)
shl
fild
push
xchg
pusha
and
xor
sub
out
or
cmp
movs
and
mov
push
call
adc
out
adc
icebp
xor
sub
lock
push
dec
adc
out
(bad)
xor
inc
cmp
cs
cli
retf
and
jmp
xchg
xchg
inc
add
(bad)
repz
aam
cmp
data16
imul
or
or
data16
lods
test
inc
jmp
mov
jmp
fcomp
dec
dec
xchg
sbb
loope
stos
xor
add
mov
loop
pop
push
ins
jo
add
jmp
pusha
push
push
cli
adc
xor
pop
push
mov
dec
pop
jl
inc
outs
adc
cmps
shr
movd
push
jge
mov
ret
ins
stc
mov
jns
sub
out
xor
fsubr
and
jecxz
pop
jmp
pop
out
jl
or
xor
jmp
sub
inc
(bad)
or
xchg
add
add
cdq
into
retf
mov
sbb
pop
sar
mov
jne
xor
xchg
loopne
mov
frstpm(287
scas
add
or
pop
mov
xchg
faddp
std
adc
aaa
rcr
fisub
das
add
dec
mov
xor
sbb
out
das
mov
inc
inc
arpl
sbb
add
sbb
push
enter
in
and
retf
cli
pop
sbb
add
push
add
xchg
sbb
clc
inc
sub
fcmovb
mov
push
add
int
lods
mov
icebp
or
add
shl
dec
adc
iret
pop
pop
cmp
arpl
mov
(bad)
mov
cdq
mov
sbb
pusha
lods
push
sbb
add
sets
jp
jo
out
add
mov
ins
xchg
popaw
mov
inc
jae
push
cmp
dec
nop
idiv
vpsubb
jl
retf
inc
xor
xor
and
cmps
add
stos
movs
in
inc
mov
repz
mul
cmc
mov
pop
mov
xor
fist
mov
(bad)
mov
stos
hlt
aas
out
sbb
mov
push
movs
mov
pushf
and
dec
mov
jbe
xchg
sbb
test
inc
push
jbe
xor
sbb
sahf
pop
(bad)
jg
ss
ins
js
call
shr
lea
jb
pop
inc
xor
in
call
ror
fidiv
adc
jge
stos
stos
rcl
ror
push
mov
test
fsub
and
jno
xchg
enter
leave
adc
movs
and
cmp
dec
xchg
push
aad
xor
push
jnp
retf
jae
lds
into
ja
jp
adc
mov
call
mov
cwde
cmp
mov
dec
gs
aad
nop
fxch
movs
inc
retf
jb
cmp
into
dec
xchg
push
cmp
add
mov
out
xchg
inc
mov
xchg
out
push
pop
pop
xchg
xor
retf
xchg
test
sub
mov
jae
pop
add
out
inc
xchg
add
inc
jmp
adc
fild
pushf
inc
mov
cmp
fnstenv
gs
mov
(bad)
jmp
adc
dec
jmp
lock
call
mov
retf
adc
xchg
push
sub
clc
pop
xchg
ror
nop
setg
or
mov
or
shl
pop
pop
sbb
jbe
or
mov
cld
mov
out
icebp
cmp
and
adc
(bad)
das
and
inc
lods
imul
mov
retf
out
or
repz
mov
jnp
jne
retf
jns
cld
jge
or
cmp
scas
mov
jmp
add
jmp
out
scas
(bad)
in
adc
xchg
pop
retf
leave
jno
scas
add
cli
loopne
cmp
xchg
shr
add
ret
mov
scas
mov
(bad)
or
mov
sub
ja
xchg
sub
pop
stos
stos
jp
jmp
(bad)
push
in
dec
repz
shl
mov
jecxz
loope
arpl
lea
enter
sbb
into
xchg
push
leave
sbb
jmp
loop
pop
sbb
adc
and
xlat
mov
xor
loopne
or
out
mov
pop
fadd
clc
bound
enter
mov
sub
and
(bad)
(bad)
mov
ret
sbb
je
(bad)
aas
adc
pop
pushf
xchg
(bad)
je
outs
push
push
ins
mov
add
loope
pop
iret
push
sub
sbb
ins
sub
jle
xor
add
nop
pop
cmp
(bad)
cmp
push
sbb
lock
inc
adc
jg
mov
ret
out
push
lods
inc
cmp
mov
sahf
pop
add
cmp
pop
out
adc
ret
push
fisttp
add
inc
cmps
hlt
mov
mov
and
pop
ror
ret
or
push
jg
iret
stos
dec
xchg
xchg
pop
and
push
mov
stos
repnz
xchg
ins
arpl
es
loope
ins
cli
pop
stos
jmp
outs
push
mov
or
call
cmps
mov
out
push
xchg
pop
shl
xchg
pop
cmp
inc
jns
adc
popf
mov
inc
pop
test
mov
popf
cmp
sbb
mov
(bad)
jg
scas
sub
das
sar
loope
stos
sti
dec
gs
add
dec
push
mov
(bad)
cwde
nop
pop
pop
shl
xchg
pop
ror
jecxz
shr
push
adc
and
sbb
pop
add
jecxz
daa
jno
out
lea
inc
cld
xor
pop
dec
sub
(bad)
pop
fstp
(bad)
jns
cli
cmp
cli
int
in
and
lahf
dec
loopne
mov
js
and
xor
jnp
bound
icebp
or
adc
shl
push
mov
loop
sub
in
dec
adc
and
ror
cs
arpl
pop
jbe
adc
nop
(bad)
adc
xchg
xchg
cli
scas
mov
outs
cmp
frstor
das
ja
mov
sbb
push
push
xchg
or
xchg
pop
or
xchg
sbb
leave
xor
hlt
mov
dec
in
mov
daa
or
jnp
aas
in
and
cmp
pushf
sub
push
pop
mov
jo
pop
ror
add
mov
stos
xor
ins
jmp
or
cmp
xchg
fldenv
nop
mov
movs
in
xchg
jae
repz
clc
pop
fcmovnb
xlat
sub
rcl
js
repnz
add
inc
sti
ficom
into
ror
(bad)
(bad)
inc
ss
dec
and
stos
stos
mov
mov
fsubr
xchg
ret
imul
mov
jmp
(bad)
adc
retf
call
push
sub
mov
repnz
jae
jge
push
fxch
mov
xchg
xor
in
cmp
data16
pusha
mov
or
mov
and
inc
jmp
cld
es
jl
xchg
mov
jle
jmp
add
data16
ins
enter
xchg
pop
cmp
sub
(bad)
addr16
ins
mov
repz
(bad)
das
mov
mov
mov
stos
cwde
mov
stos
aas
sbb
movs
imul
inc
dec
call
mov
mov
sub
daa
arpl
ret
mov
mov
inc
ret
mov
popf
rcr
shl
dec
out
pop
and
dec
mov
and
push
jbe
cmc
cld
loopne
add
mov
aas
cli
xor
das
ja
in
dec
jae
in
adc
cmp
outs
or
jo
jl
sbb
push
xor
jbe
daa
xor
imul
push
push
cwde
mov
dec
ds
mov
pop
inc
dec
dec
mov
xor
enter
add
lods
mov
adc
hlt
xor
neg
cmc
mov
mov
push
sbb
push
loope
scas
dec
gs
or
and
call
jge
jne
mov
call
inc
out
mov
dec
icebp
push
and
add
fnstcw
push
fcmovbe
dec
pop
lods
push
and
xchg
xor
push
add
aaa
fisubr
push
pop
mov
call
adc
push
out
dec
(bad)
call
xchg
sahf
sti
mov
jl
or
into
lods
test
or
and
loope
sbb
cmp
push
mov
adc
loope
xchg
in
fimul
imul
stos
fs
rcr
jnp
mov
seto
or
ds
enter
arpl
movs
dec
xlat
out
or
(bad)
cmp
lds
sbb
pop
add
icebp
mov
call
hlt
out
arpl
jl
(bad)
daa
int3
jne
daa
dec
and
fstp
mov
ss
adc
mov
mov
(bad)
xor
les
cmp
fsub
sbb
dec
arpl
add
aaa
int3
cmp
rcr
inc
sahf
pushf
f2xm1
je
dec
(bad)
add
fmul
ret
iret
das
sti
xor
xlat
push
retf
mov
sub
repnz
and
push
mov
sbb
pop
mov
xor
mov
retf
mov
out
sub
jmp
aam
out
mov
jge
sti
imul
fld
mov
stos
jne
xchg
(bad)
xor
jg
lahf
pop
and
jno
hlt
or
jae
out
movs
jle
dec
inc
je
bnd
xor
stos
push
mov
dec
jg
jmp
inc
(bad)
popf
mov
in
(bad)
or
dec
out
and
adc
test
inc
fwait
and
cmp
iret
loope
pop
leave
mov
dec
inc
mov
jge
shl
xor
ins
adc
xor
jg
js
dec
adc
mov
clc
add
sbb
mov
aaa
enter
pop
gs
fsub
sbb
xor
cmps
lea
fidivr
adc
out
loope
sbb
pop
or
repz
(bad)
repnz
jnp
sbb
imul
xor
push
push
test
sbb
pop
sbb
cwde
out
rcr
dec
stc
sub
(bad)
outs
lahf
es
das
xor
ds
aaa
or
outs
jmp
adc
loope
mov
imul
adc
das
loopne
in
push
mov
retf
or
fldcw
ror
sub
sub
ss
dec
jp
mov
cli
outs
ret
pop
sar
pushf
sbb
fldenv
lock
sub
mov
jo
and
jmp
loop
inc
loopne
dec
xor
lea
or
outs
xor
and
bound
xchg
jne
neg
ret
mov
jns
js
pop
sbb
bound
mov
(bad)
jl
and
cmp
inc
sti
sub
lods
sub
dec
xlat
mov
ss
cwde
outs
fs
xchg
cwde
aam
sub
mov
popa
aad
adc
retf
jb
push
mov
adc
jne
ins
pop
fsub
jb
stc
dec
push
jbe
scas
das
call
pop
jmp
(bad)
sbb
cmp
imul
sbb
out
dec
test
rcr
jl
out
adc
cmps
and
imul
sub
retf
add
or
pop
xsha1
cmps
mov
repz
sub
frstor
daa
(bad)
cmp
call
jb
xbegin
pushf
mov
inc
(bad)
leave
fdivr
(bad)
cmp
xchg
and
push
jle
pop
sub
adc
mov
mov
in
fdiv
mov
mov
cmp
retf
add
popf
jb
push
icebp
gs
pop
xchg
(bad)
sbb
sahf
loope
jnp
movs
bound
push
iret
mov
fucom
jmp
fdivr
xor
jo
int3
into
jns
cmp
mov
cmp
stc
(bad)
(bad)
(bad)
push
push
add
dec
pop
inc
mov
rol
pusha
push
cmovge
test
mov
adc
mov
and
(bad)
(bad)
jmp
add
arpl
mov
mov
mov
sub
rol
stc
cmps
cli
push
aad
loopne
add
mov
xchg
popa
xchg
leave
cli
sbb
fimul
add
mov
adc
stos
and
add
sub
adc
jp
test
sbb
loope
cmps
mov
jmp
add
sar
mov
ror
pop
scas
sub
mov
aam
mov
mov
sbb
or
adc
or
(bad)
out
sub
imul
sub
xchg
ror
aas
and
jo
test
in
enter
sub
or
loope
les
outs
xchg
pop
cmp
enter
in
int
retf
fld
or
ret
pop
icebp
dec
push
and
lods
mov
aam
mov
sub
test
clc
out
ret
outs
jne
push
dec
leave
jecxz
jge
adc
pop
dec
repz
imul
xchg
ror
cmc
in
jnp
push
call
sbb
out
sbb
je
add
xchg
fwait
loopne
es
xor
mov
mov
jle
sbb
pop
mov
pop
cmp
addr16
aad
and
fadd
popf
lods
sar
lods
cmp
in
pop
add
repz
mov
cmp
out
jle
add
push
(bad)
std
push
sti
xchg
sub
jecxz
mov
movs
popa
add
fistp
and
mov
mov
push
adc
xchg
test
mov
ins
add
rcl
mov
stc
(bad)
retf
aaa
cmp
out
cld
push
aaa
sbb
or
cs
(bad)
in
xor
jo
loopne
xor
mov
je
inc
mov
pop
push
js
mov
jo
bound
mov
jae
scas
cmp
movs
sti
mov
scas
adc
mov
inc
hlt
sbb
cmp
in
(bad)
lds
dec
rol
jg
loop
and
mov
les
sahf
adc
xchg
sub
xchg
scas
jmp
jp
inc
xor
lods
or
adc
stos
nop
push
xchg
mov
test
ins
stos
pop
int3
test
xchg
sahf
loope
xor
xchg
cmp
dec
cdq
loope
call
add
pusha
mov
call
push
push
jge
jmp
adc
pop
dec
and
inc
inc
(bad)
icebp
push
loop
inc
xchg
ins
and
cmp
jge
sbb
push
jnp
in
repnz
out
sub
or
lock
in
(bad)
jo
add
(bad)
out
test
out
mov
gs
cmp
adc
adc
ins
sub
fwait
das
sbb
lahf
mov
mov
nop
mov
mov
fs
jbe
jp
adc
dec
add
or
jg
jnp
ds
mov
push
jmp
and
test
adc
stos
pop
out
xor
add
imul
jns
jp
(bad)
in
push
pusha
and
push
test
mov
push
mov
loop
sbb
fbld
mov
or
cmp
int3
js
push
xchg
nop
mov
mov
and
repnz
addr16
(bad)
lock
xor
lods
xor
adc
jb
or
imul
adc
and
jb
out
inc
mov
rcr
dec
loop
mov
pop
xchg
adc
loopne
push
and
cmp
js
aaa
mov
mov
add
imul
popf
inc
cmp
repnz
(bad)
push
pop
popa
ret
adc
xor
jae
inc
jmp
ja
movs
outs
test
sar
pop
and
or
push
in
mov
test
xor
fnop
cmp
fistp
inc
mov
sbb
push
loope
shl
cdq
pop
fist
sub
in
mov
mov
xchg
xchg
push
test
les
outs
js
mov
mov
div
das
mov
pop
out
pop
rcl
and
push
cs
sub
or
jo
mov
movs
je
fs
adc
push
mov
outs
add
lahf
sub
not
jl
pop
and
rcr
pusha
jle
xor
cmps
pop
shr
mov
(bad)
cmp
mov
mov
pop
and
out
push
jno
push
stos
rcl
xor
cmp
dec
inc
inc
sbb
ss
(bad)
mov
sti
mov
push
mov
out
and
or
fs
loope
cmps
push
xchg
call
xchg
stc
imul
or
jl
fnstcw
cmp
push
addr16
das
mov
pop
rcl
add
and
sbb
cmp
ins
idiv
scas
cdq
sahf
inc
lods
stc
int3
ins
aad
call
sbb
mov
mov
lods
lahf
gs
sub
xor
inc
or
outs
xchg
mov
inc
sbb
pusha
mov
mov
fisttp
(bad)
adc
dec
push
mov
test
pop
outs
xchg
mov
mov
push
or
outs
inc
jno
cdq
int
xor
ret
or
pop
in
adc
mov
mov
cmps
mov
cmp
rcr
dec
sub
inc
or
xchg
xchg
popf
rol
or
cmp
mov
xchg
aad
and
dec
push
lods
ins
popf
jecxz
inc
das
cmp
jmp
fucom
push
repnz
and
or
or
cmps
(bad)
and
push
push
or
test
scas
(bad)
lods
pushf
icebp
fdiv
mov
inc
ret
cmc
xchg
pop
aaa
xchg
jns
stc
adc
dec
pop
mov
(bad)
pop
cld
and
in
jno
repnz
test
cmp
ja
popa
xchg
jmp
mov
adc
ja
enter
out
cmc
and
add
cmp
adc
fsub
sar
pop
ins
rcr
imul
push
push
daa
jle
mov
stos
sbb
std
(bad)
and
mov
pusha
ret
xor
jg
inc
mov
sahf
aaa
shl
mov
xlat
ja
arpl
and
sub
(bad)
call
push
ins
jo
out
sub
ds
(bad)
mov
inc
jp
cli
xor
xor
jb
inc
and
rcl
mov
pop
dec
mov
mov
add
outs
call
(bad)
nop
push
dec
xchg
dec
inc
xchg
mov
mov
dec
xchg
adc
cmp
imul
jmp
and
adc
in
mov
dec
dec
dec
cmps
pop
popa
and
cmp
inc
(bad)
aaa
pop
and
and
mov
sbb
pop
mov
xchg
pop
xor
lea
cs
inc
xor
repnz
js
out
mov
inc
mov
push
jecxz
arpl
jns
jg
add
push
test
in
imul
call
jg
push
out
hlt
nop
(bad)
mov
mov
mov
(bad)
fld
in
push
sbb
cmps
mov
mov
or
fimul
fcomp
(bad)
adc
xlat
add
jmp
mov
dec
dec
not
sub
add
inc
adc
jne
mov
lods
push
add
jae
push
jle
sbb
fadd
in
out
les
mov
inc
jecxz
mov
es
gs
adc
imul
popf
inc
mov
sbb
cmp
ins
xor
xchg
and
jle
adc
pushf
movs
pop
loopne
inc
call
push
xchg
fwait
aas
(bad)
fcomp
loopne
mov
pop
mov
mov
jmp
adc
sbb
lds
outs
rcr
out
ins
pop
xchg
xor
arpl
cs
and
loopne
mov
iret
or
ret
jecxz
add
lock
arpl
push
dec
arpl
push
sub
xchg
iret
cmp
or
mov
shl
fidivr
cs
lds
ss
adc
sub
add
mov
adc
sbb
dec
outs
ins
(bad)
mov
ds
or
jnp
cmp
imul
aam
adc
test
gs
imul
mov
mov
and
into
imul
or
xchg
and
daa
inc
mov
scas
sbb
cdq
arpl
icebp
imul
(bad)
aad
js
fs
fcomp
sbb
retf
sub
cmps
cmp
mov
test
pop
push
shl
test
jmp
adc
and
(bad)
jg
inc
push
cmp
fisubr
push
test
mov
pop
(bad)
xor
stos
mov
xchg
mov
mov
push
loop
sbb
arpl
aaa
push
mov
jmp
packssdw
nop
rcl
rcr
xor
pop
dec
call
js
inc
cmc
outs
movs
mov
or
adc
in
dec
sub
int
call
mul
adc
adc
fnstcw
fisubr
or
cmps
mov
cdq
movs
pop
inc
nop
clc
jmp
mov
inc
sub
pushf
fldpi
gs
or
movs
fimul
ret
mov
ror
in
pop
popf
addr16
inc
push
popf
cmp
sahf
or
cli
sub
nop
std
add
sub
adc
pop
mov
push
adc
xor
in
lods
mov
xchg
std
into
test
retf
mov
int3
cli
mov
mov
ja
push
nop
adc
inc
dec
mov
dec
psadbw
ins
push
xchg
aaa
in
imul
ins
cmp
mov
into
adc
add
mov
sub
cmp
and
jg
push
jae
xlat
sbb
adc
loope
mov
xor
(bad)
fld
dec
push
push
repz
inc
sbb
pop
xchg
dec
adc
push
adc
or
jg
push
mov
inc
loope
int3
cmp
sbb
call
popf
jno
scas
jns
sub
call
add
jmp
(bad)
retf
xor
sbb
adc
mov
shl
and
xor
repnz
retf
cmp
enter
popw
dec
pop
add
push
lods
retf
jge
push
or
pop
mov
sbb
js
or
cmp
cwde
cmp
mov
int3
data16
scas
sar
add
cmps
xor
push
dec
sub
ret
mov
(bad)
outs
test
or
mov
mov
jns
stos
test
jnp
das
popf
pushf
or
das
and
hlt
aad
outs
mov
aas
outs
mov
jno
xchg
add
shl
pop
repnz
adc
add
call
je
sahf
popf
sub
xchg
in
aam
xchg
xchg
aad
jmp
hlt
dec
jmp
mov
fs
test
lods
xchg
xchg
sub
(bad)
xlat
jns
data16
xchg
stos
stc
pop
inc
or
inc
lea
sub
jae
ja
mov
ret
ins
popa
aaa
fs
movs
cmp
std
dec
adc
mov
sbb
xor
xor
out
lock
push
std
mov
push
rol
iret
mov
popf
sar
xor
dec
xchg
mov
jbe
jne
(bad)
(bad)
mov
xor
sar
inc
loop
sub
inc
cmp
outs
or
jbe
stos
retf
scas
out
in
cmp
adc
inc
popf
sti
pop
std
cmc
mov
ficom
mov
or
(bad)
push
movs
ror
out
or
pop
dec
pushf
dec
leave
jns
push
pop
prefetcht1
push
fsub
ror
out
adc
mov
sbb
xchg
xor
jnp
xchg
ds
(bad)
out
ficom
int3
fmul
jp
ror
add
dec
(bad)
(bad)
jp
xchg
mov
jmp
inc
clc
push
ds
sub
sbb
sub
xchg
add
adc
icebp
aam
xchg
hlt
push
adc
xor
jo
fwait
leave
retf
inc
and
cld
sub
mov
cmp
call
xor
in
and
inc
cmp
or
shl
dec
push
and
jecxz
cmovae
add
call
imul
and
mov
jnp
add
loop
dec
cmp
adc
cmp
xor
jle
push
add
mov
outs
fisub
jle
push
leave
sub
mov
pop
or
repz
xorps
cmp
xor
icebp
repz
xor
or
stc
sub
cwde
inc
rol
adc
pop
repnz
fdivr
push
push
outs
push
mov
nop
and
adc
aam
mov
xor
test
mov
mov
out
std
pushf
pop
div
imul
xor
dec
js
xchg
jmp
dec
dec
and
nop
sub
loop
fimul
ror
jae
inc
and
add
lea
test
or
xchg
adc
xor
lods
cmps
pop
cmp
cmc
shl
and
adc
dec
and
js
and
stc
or
shl
jo
pop
aad
sub
repnz
jnp
into
aad
push
(bad)
push
mov
dec
pop
rcr
(bad)
adc
jne
xlat
popa
in
pop
pop
call
lods
cmp
fisttp
jmp
js
test
ins
inc
lock
fwait
push
push
and
inc
and
sti
(bad)
jmp
jle
xchg
fldenv
test
mov
dec
hlt
rcl
dec
and
mov
dec
scas
popa
and
push
xchg
(bad)
adc
pop
(bad)
icebp
xchg
sbb
das
push
cmp
mov
pop
cld
or
push
inc
shl
inc
xchg
out
jns
mov
mov
jmp
in
or
imul
mov
out
test
btc
mov
pop
inc
xlat
sbb
dec
mov
(bad)
xchg
(bad)
ds
jmp
loopne
push
jg
sub
jge
inc
ret
(bad)
fld
shr
cs
mov
sbb
adc
movs
ret
fisttp
ja
push
add
adc
pusha
mov
xchg
in
dec
jae
aas
dec
pushf
and
iret
dec
pushf
adc
fdivp
xchg
push
(bad)
ss
inc
retf
sub
mov
retf
cdq
or
mov
mov
mov
mov
xchg
sbb
dec
in
adc
adc
stc
cmc
dec
ins
and
cli
mov
nop
jae
dec
das
cmc
lds
sbb
sbb
push
rcr
jbe
push
inc
mov
jb
mov
ss
sbb
jmp
add
xor
push
ficomp
cmp
mov
fst
xor
adc
sub
lods
js
(bad)
cmps
jae
repnz
(bad)
add
xor
mov
mov
inc
mov
fstp
xlat
test
shl
cs
dec
sbb
sub
dec
ror
xchg
pop
cmp
sbb
inc
xor
or
and
push
adc
leave
rcl
adc
data16
aaa
add
mov
out
cdq
and
sbb
xchg
fimul
cmp
sub
jmp
outs
xor
mov
popa
lea
jmp
sub
xor
mov
push
inc
mov
sti
pop
enter
adc
jno
dec
add
in
or
xchg
bound
(bad)
mov
push
pop
sar
loop
outs
jl
mov
lods
sbb
scas
pop
sub
mov
push
push
neg
cli
fwait
dec
jg
pop
jne
jmp
into
aas
or
pop
xchg
inc
inc
repz
and
add
sub
sbb
arpl
push
xrelease
shr
shr
pop
sub
xor
out
test
fwait
xchg
and
dec
mov
xor
push
dec
push
jmp
bound
dec
ja
sahf
gs
rcl
push
inc
dec
out
push
ror
cwde
or
jae
(bad)
pop
lds
jnp
inc
dec
call
fst
outs
and
fwait
lock
xor
push
call
inc
ss
gs
retf
jno
cmp
pop
lahf
addr16
loop
cli
movs
movs
push
mov
dec
daa
ds
jge
or
mov
jp
jl
(bad)
add
loop
or
(bad)
mov
sub
push
cmp
pop
clc
test
sub
pop
scas
jo
iret
movs
or
cmps
xchg
ja
int3
adc
mov
movs
leave
js
and
pop
loop
bound
aam
mov
scas
cmp
scas
mov
sub
pushf
stos
or
jo
xor
or
(bad)
cmp
mov
shr
mov
inc
cmp
(bad)
cmps
addr16
lea
test
sub
ret
fucom
outs
jge
test
das
cmp
xchg
jg
pop
cmps
cli
jg
sbb
adc
js
jmp
jb
adc
gs
mov
add
pop
inc
sbb
pop
mov
not
jns
jl
jo
push
(bad)
sti
sub
neg
pop
test
cmp
ror
jae
daa
nop
sbb
sbb
add
and
xchg
add
icebp
pop
mov
test
into
jns
out
fdivp
and
popf
dec
jge
fs
sbb
jle
add
imul
jle
dec
cmp
in
mov
outs
popf
rcl
push
cmp
dec
lods
xor
ds
mov
ja
adc
inc
mov
shr
xor
stc
xchg
aaa
lods
hlt
jl
jl
sub
xchg
pop
adc
mov
sub
aas
in
ds
and
sar
sahf
cmps
mov
lea
inc
cmps
stos
cld
int
movsx
neg
xchg
bound
movs
imul
xor
dec
cmps
pop
jmp
xor
outs
and
sbb
add
je
dec
xchg
push
in
sub
out
sahf
sub
inc
xor
arpl
enter
push
mov
shl
mov
xor
pushf
scas
mov
std
lods
repz
dec
call
daa
dec
jbe
inc
push
mov
fild
xor
adc
push
add
dec
jb
out
icebp
push
loop
test
push
xchg
(bad)
jge
sahf
dec
or
dec
pop
and
fldcw
shl
xchg
push
(bad)
mov
faddp
and
cli
mov
mov
dec
dec
mov
(bad)
fist
cmp
push
mov
add
in
mov
fldcw
push
jl
outs
or
mov
das
jno
mov
mov
cmps
xchg
retf
aam
(bad)
arpl
push
hlt
ret
sbb
nop
xchg
sti
aas
mov
retf
int
dec
test
mov
inc
dec
in
repnz
in
imul
scas
fsub
mov
xor
sub
push
jl
dec
xchg
push
hlt
into
jne
sbb
imul
push
push
cwde
je
mov
inc
es
pop
mov
cdq
mov
sahf
xchg
push
add
(bad)
mov
fst
and
adc
movs
fwait
cmp
mov
into
rcr
mov
or
out
cmp
mov
outs
bound
stc
loopne
cmp
jmp
mov
xchg
push
js
(bad)
cmp
(bad)
mov
sub
xor
cmc
cmp
ret
push
mov
or
dec
mov
inc
mov
push
xchg
cmp
dec
mov
cli
pusha
xor
jecxz
test
out
loope
mov
rol
or
ds
cmp
xchg
cwde
movs
or
into
sbb
fmul
(bad)
mov
pushf
xor
jbe
scas
aam
sbb
push
punpcklwd
or
jbe
out
pusha
add
retf
xchg
(bad)
clc
push
cmc
enter
pop
scas
sub
in
test
mov
push
inc
fabs
rcl
dec
ret
cmp
and
mov
sbb
ja
icebp
enter
xchg
stc
mov
or
aad
cmps
sbb
ficomp
movnti
mov
popa
and
adc
repz
lods
push
inc
inc
pop
enter
iret
es
cmp
call
test
sti
or
movs
mov
pop
les
dec
jae
jmp
jp
and
pop
(bad)
iret
test
push
xor
movs
or
mov
adc
rol
scas
jbe
lods
cli
mov
adc
xor
cmp
jmp
leave
iret
dec
jb
dec
out
xchg
out
push
sub
sbb
popa
jge
(bad)
retf
aam
push
jmp
push
or
add
daa
cld
inc
jnp
cmp
inc
push
leave
ins
call
jno
jle
mov
mov
cmp
xchg
daa
ror
adc
es
lds
stos
inc
inc
jp
les
ins
cli
pop
and
lock
mov
fisub
int3
mov
cs
xor
repnz
mov
test
mov
or
jne
push
sub
aad
sub
jl
rcr
mov
and
out
sub
dec
aas
loop
jle
push
adc
dec
shr
aas
jnp
loopne
jp
adc
pop
test
shl
test
adc
jle
aas
add
cmpps
test
ja
(bad)
sahf
mov
mov
(bad)
arpl
ret
adc
cmc
mov
mov
mov
dec
call
shl
mov
pop
nop
add
xchg
mov
mov
daa
push
popf
out
std
enter
xchg
ficom
(bad)
xor
fnstenv
push
sub
mov
rcr
dec
sahf
mov
or
xor
mov
mov
pop
add
mov
pushf
push
(bad)
test
jo
dec
pop
adc
and
gs
adc
mov
xchg
adc
outs
enter
out
js
rcr
sub
stc
pop
mov
sar
fwait
or
ins
mov
jmp
mov
cld
bt
inc
xchg
pop
adc
popa
push
cld
push
xor
mov
fwait
vmovhps
fwait
xor
lods
add
clc
cmp
in
jmp
mov
std
sar
xor
out
push
mov
repz
adc
shr
pop
test
shl
adc
xchg
aam
inc
jg
mov
lock
adc
sub
and
inc
mov
retf
cmps
cmps
fsubr
aam
push
inc
stos
cmp
pop
imul
bound
pop
popf
dec
jg
mov
fisubr
and
add
aaa
and
loopne
aas
mov
dec
xor
stos
dec
pop
pusha
xor
add
dec
jmp
call
ds
iret
shl
iret
mov
bound
ins
fidivr
jmp
out
stos
adc
scas
addr16
(bad)
adc
inc
cmp
mov
mov
dec
jecxz
or
stc
movs
pop
add
aaa
fcom
mov
cmp
mov
shr
mov
dec
stos
mov
fst
xchg
(bad)
(bad)
jecxz
repz
pop
leave
mov
push
sub
dec
adc
fdivr
mov
mov
xchg
push
data16
in
daa
dec
jmp
or
mov
retf
push
add
pop
add
jecxz
jae
les
jbe
into
mov
jo
or
mov
out
fistp
ins
or
push
mov
sbb
inc
mov
push
dec
ror
data16
mov
inc
jle
mov
fs
hlt
sub
sbb
int
push
or
je
jo
xlat
test
sbb
mov
pop
das
sub
xor
call
aaa
shl
and
and
das
xchg
movs
dec
icebp
sbb
adc
ja
imul
or
gs
jecxz
mov
inc
add
sbb
cmp
mov
mov
add
or
sub
and
mov
jne
outs
pop
xlat
ja
xchg
ja
pop
jl
adc
dec
jp
scas
add
std
jmp
mov
shr
xor
add
mov
cld
xchg
daa
repnz
ss
pop
mov
loop
cmp
popf
add
inc
test
push
fist
adc
sbb
dec
push
jp
adc
pop
xchg
xchg
in
mov
loop
cmp
inc
fsubr
pop
in
pop
xor
adc
mov
stc
jo
popf
sbb
pop
push
loop
in
xor
push
not
rcr
fldcw
fisttp
jne
push
sti
cmp
scas
adc
int
stos
retf
mov
fwait
call
das
ret
pop
inc
dec
call
cmp
jmp
and
and
mov
mov
inc
icebp
pop
cmp
mov
xchg
pause
dec
push
out
out
in
movs
lahf
xchg
pop
sbb
inc
sub
cmps
or
jb
pop
jbe
push
push
out
push
mov
mov
xchg
push
fs
int3
xchg
or
pop
push
dec
es
cmp
jnp
xchg
call
neg
inc
mov
pop
data16
cmps
cmp
ret
fs
cs
and
jmp
aaa
jnp
stc
or
mov
or
cmc
sub
inc
sbb
or
movs
sar
lea
hlt
add
jle
adc
sub
jle
scas
or
call
popf
sub
out
pop
xor
fsubp
daa
cld
push
out
fwait
ja
mov
in
jmp
mov
fidivr
pop
call
mov
pushf
fild
sti
jbe
adc
lock
cli
or
xor
jg
adc
nop
inc
or
and
xchg
popfw
dec
jns
call
xor
aaa
mov
mov
push
sar
mov
push
cld
cli
mov
test
sbb
push
adc
jmp
sti
movs
dec
aaa
inc
hlt
jns
and
sbb
mov
or
pop
test
sbb
fld
daa
sub
pop
lds
mov
sar
add
inc
sbb
sbb
sub
adc
xchg
xchg
(bad)
sbb
movs
gs
jle
pop
shl
dec
mov
sbb
int3
xor
out
jmp
mov
xchg
loope
push
rcl
cmp
fist
mov
sub
inc
xor
aam
push
push
not
out
sub
push
mov
aas
dec
loope
gs
hlt
(bad)
sbb
mov
fnsave
scas
jmp
iret
(bad)
push
xor
jl
into
sub
push
pop
mov
aam
mov
xor
movs
mov
pop
call
sub
xor
cmps
sub
and
push
inc
pop
inc
shl
push
push
dec
jg
push
or
in
mov
xchg
sub
xor
lea
push
mov
adc
xor
aad
or
mov
call
or
ret
call
mov
add
gs
in
pop
in
mov
mov
(bad)
jmp
outs
cmp
push
jecxz
fldenv
leave
ror
fsub
jo
movs
xor
shl
cmp
stos
retf
je
xlat
popf
in
or
mov
movs
into
mov
(bad)
cld
jecxz
(bad)
(bad)
dec
fwait
iret
dec
cmp
test
push
or
loopne
mov
push
mov
xchg
fstp
sbb
sti
loop
addr16
(bad)
fucom
fiadd
xchg
in
add
lods
out
mov
jmp
fldcw
ins
add
inc
xchg
stc
(bad)
jecxz
daa
gs
xor
aas
pop
inc
xchg
pop
adc
test
out
jge
mov
out
test
push
fsubr
(bad)
push
xchg
sbb
jne
push
xor
(bad)
sahf
out
sub
call
xor
aas
pop
adc
cmp
mov
mov
(bad)
int
out
sbb
stos
cwde
pop
sbb
retf
jb
dec
clc
xor
or
adc
or
sti
sub
or
sub
out
sub
fcom
cli
mov
das
cwde
pop
test
cmp
lock
(bad)
mul
stos
out
and
outs
pop
push
retf
fimul
scas
mov
pop
jnp
shr
xor
gs
and
add
inc
inc
lahf
cmp
push
mov
xchg
adc
aas
dec
jl
mov
sub
sbb
lea
(bad)
sub
out
push
jb
popa
in
aad
mov
push
ret
mov
or
sbb
jecxz
jae
xchg
in
cmps
cwde
pop
icebp
cmc
cmp
adc
adc
addr16
push
xor
(bad)
repz
add
mov
xchg
movs
ror
mov
pusha
inc
xchg
lods
or
fidiv
push
das
jg
sub
test
jno
ror
lock
clc
mov
sbb
sbb
pop
pop
push
repz
arpl
inc
iret
cmps
imul
(bad)
xchg
jne
dec
arpl
call
add
movs
test
and
and
jmp
inc
ficom
fst
pop
mov
add
or
mov
adc
stos
inc
stos
inc
push
es
pop
xor
dec
xchg
imul
adc
cmp
pop
or
jmp
cmp
arpl
je
xchg
jp
movs
mov
test
add
stos
xor
or
jp
enter
pop
xlat
sbb
sbb
jmp
test
or
push
imul
cmovle
arpl
or
dec
scas
and
mov
cmp
mov
not
jo
in
(bad)
sbb
gs
adc
cdq
retf
pop
cmps
jg
rcr
inc
cwde
sbb
cdq
outs
pop
adc
rep
rcr
jge
or
mov
dec
cmp
mov
in
fidiv
jo
jne
outs
pop
(bad)
sub
(bad)
call
std
pop
rol
mov
loope
push
bound
pop
mov
cmp
dec
out
int
mov
adc
repnz
xchg
push
pop
and
cmp
jmp
gs
aam
add
jnp
popa
push
jne
jmp
ins
xchg
in
sbb
call
xor
push
jno
scas
add
fwait
mov
fiadd
push
popa
jl
jecxz
sbb
inc
push
dec
pop
ss
mov
and
out
fsub
jle
setg
inc
scas
mov
push
and
(bad)
lock
test
jg
push
xchg
inc
out
dec
mov
sub
lods
dec
call
scas
inc
and
stos
rol
out
daa
adc
in
(bad)
(bad)
les
dec
outs
(bad)
adc
dec
jmp
out
aam
and
adc
inc
push
retf
js
dec
les
pusha
sbb
or
cmp
xchg
mov
inc
popf
and
sub
add
sbb
xor
jmp
inc
leave
mov
mov
push
push
arpl
(bad)
xchg
mov
out
mov
ja
push
pop
cmp
cmp
fist
mov
xchg
xor
mov
repz
jbe
push
jmp
call
fstp
outs
movs
fld1
mov
xor
das
movs
and
repz
fnsave
mov
into
test
popa
outs
mov
(bad)
lahf
sbb
xor
mov
sub
stos
test
sub
imul
dec
arpl
mov
(bad)
sub
jg
pushf
push
mov
pusha
xchg
cmp
mov
jg
inc
jns
dec
mov
loope
in
pop
cld
mov
xchg
ja
cmp
xchg
cmp
das
(bad)
(bad)
shl
cmp
daa
or
pop
test
dec
cmp
(bad)
dec
xchg
jmp
mov
sti
ficom
je
push
and
cmc
clc
lods
or
mov
mov
mov
int
cmc
test
sub
or
inc
mov
movs
out
loope
xchg
pushf
and
pop
adc
cmps
dec
jl
jg
dec
mov
cmp
cdq
sub
mov
call
(bad)
outs
and
adc
sub
pop
nop
push
dec
movs
sub
add
fiadd
and
scas
push
or
xor
aad
xchg
test
and
shl
xor
jle
mov
fcom
mov
cmp
xchg
lea
jmp
xchg
adc
repnz
xchg
mov
test
aaa
mov
imul
push
sti
adc
xor
into
enter
out
push
mov
or
jp
lods
std
js
imul
push
cdq
sub
out
fcomip
je
and
fdiv
mov
cmp
inc
pop
je
leave
inc
aaa
add
nop
inc
pop
dec
mov
fimul
sub
jg
mov
sahf
xor
cld
fs
push
pop
arpl
and
inc
xchg
scas
ficom
xor
sub
sub
xor
and
and
pop
out
mov
mov
pusha
jmp
rcl
in
mov
push
mov
and
xor
fnstcw
into
dec
mov
sahf
jnp
stos
cmp
add
fbstp
pushf
aam
add
adc
sbb
inc
rcr
sbb
xchg
mov
jecxz
inc
push
sbb
add
xchg
add
push
outs
stos
lahf
push
xor
vmwrite
mov
jb
and
cmp
mov
mov
or
stos
jmp
ins
mov
mov
test
xchg
les
cs
inc
jno
into
icebp
inc
jl
dec
in
mov
adc
or
jle
icebp
test
int3
pop
and
cmps
mov
loope
jnp
fist
(bad)
nop
(bad)
(bad)
and
mov
inc
mov
cmp
xor
iret
adc
jb
(bad)
sbb
push
jmp
mov
pop
mov
outs
add
inc
pop
cdq
dec
mov
push
loopne
popa
addr16
add
xchg
ins
pop
into
(bad)
jno
ficom
jecxz
(bad)
and
push
push
rcr
in
or
pop
push
imul
jmp
push
popf
xor
mov
adc
sbb
cwde
(bad)
(bad)
mov
test
lahf
fwait
imul
push
mov
repz
dec
xchg
and
ins
fidiv
and
push
or
sub
mov
add
add
in
pop
cmps
neg
scas
adc
aam
jmp
lahf
call
cmp
adc
bound
dec
sbb
popa
jns
xlat
call
dec
stc
int
test
inc
cli
adc
pop
jmp
jno
test
xchg
pop
loop
push
gs
outs
(bad)
mov
ror
jge
test
add
add
sahf
jg
hlt
js
dec
jnp
mov
jnp
push
or
or
fadd
int
mov
mov
jnp
bnd
xor
mov
pushf
xchg
push
test
into
(bad)
mov
cmp
jl
push
int3
mov
add
aaa
xor
out
jmp
and
sub
out
inc
mov
or
mov
mov
add
aam
dec
sbb
imul
cmps
dec
test
in
pop
ja
add
inc
adc
mov
out
push
xchg
inc
or
stc
out
in
daa
mov
nop
inc
and
(bad)
mov
leave
test
lods
dec
xor
inc
fistp
les
mov
cmp
out
jle
cmps
mov
dec
push
(bad)
or
out
sbb
mov
add
ins
int
out
pop
pop
dec
jmp
gs
lahf
movs
cwde
daa
pop
sbb
pop
pushf
(bad)
xchg
into
dec
xchg
pop
jmp
(bad)
jp
dec
loop
aas
scas
mov
popa
inc
enter
in
mov
push
jbe
les
xlat
or
arpl
les
aad
jl
jne
fmul
in
push
sti
mov
xor
push
xchg
mov
stc
xchg
sbb
popa
loopne
sub
rol
mov
dec
mov
out
jmp
jg
jno
movs
adc
pop
loop
(bad)
les
or
rol
ficomp
or
ins
inc
add
ins
repnz
sub
dec
mov
hlt
ins
popa
jg
sub
aam
mov
es
pop
mul
or
mov
popf
or
out
and
aad
sti
inc
and
jmp
xor
out
jmp
inc
inc
sub
stc
dec
pushf
mov
jl
repz
mov
ror
mov
(bad)
sub
and
leave
int3
mov
ins
or
ds
iret
fstp
adc
cmp
mov
in
mov
and
and
sahf
in
call
xchg
jl
leave
mov
lods
fstp
in
nop
pop
ret
push
cmps
aad
dec
bound
stc
mov
gs
xor
or
ja
xor
mov
inc
and
pop
retf
scas
dec
outs
inc
sti
repnz
adc
ret
sbb
cmp
cwde
mov
lock
gs
mov
xlat
xchg
dec
adc
jo
cdq
popf
mov
pop
and
into
fcomp
jl
lahf
jg
aaa
shl
add
xchg
dec
inc
cli
xor
push
test
push
cmp
adc
aas
fdivr
out
jb
push
xor
popa
mov
arpl
adc
clc
adc
push
mov
aaa
arpl
adc
and
xor
mov
mov
test
adc
fdiv
sub
mov
int3
fbstp
lahf
mov
xchg
mov
add
data16
jo
repnz
mov
jle
cmp
scas
inc
inc
movs
test
dec
or
data16
push
cdq
push
mov
retf
inc
aam
or
nop
or
jmp
adc
cwde
fistp
stos
or
fdivrp
push
in
xchg
mov
mov
add
std
jo
cmp
es
clc
add
fidiv
ins
mov
(bad)
lock
adc
daa
scas
add
inc
jmp
test
lds
xchg
lods
rcr
pop
shl
cmp
(bad)
jmp
jecxz
push
aas
ss
xor
ss
mov
inc
ja
mov
lock
cmp
fiadd
mov
mov
pop
in
push
adc
xchg
mov
(bad)
pop
or
repz
push
movs
xor
inc
mov
(bad)
cdq
scas
inc
mov
push
pop
mov
(bad)
jl
sar
popf
ins
mov
jle
inc
inc
inc
sbb
pushf
jne
outs
popa
jne
(bad)
iret
and
div
mov
push
(bad)
push
inc
call
xlat
(bad)
call
push
inc
sbb
xchg
daa
fist
mov
mov
sub
sbb
add
push
inc
shl
mov
fcom
pop
jecxz
std
leave
push
jns
xchg
int3
pop
dec
jmp
mov
in
imul
push
nop
jmp
jecxz
loop
mov
cs
repnz
lods
ret
mov
cmps
dec
and
pop
mov
pop
mov
mov
inc
cli
call
or
sub
ds
arpl
add
xor
jmp
sbb
ret
fwait
imul
cmp
push
push
sbb
dec
inc
daa
jne
idiv
cmp
mov
sub
out
pop
loopne
add
dec
jno
jmp
loopne
cmps
jb
test
lock
cmp
add
mov
out
sub
rcl
int3
pop
xchg
and
retf
xchg
push
or
cmp
push
inc
inc
sub
mov
sar
pop
lock
cmp
test
shl
push
sbb
mov
popa
fsub
sub
and
movs
stos
lock
push
jl
rcl
dec
xor
std
push
xor
dec
int3
call
(bad)
addr16
jb
mov
xchg
xor
inc
ret
dec
mov
lahf
xor
cmp
pop
push
nop
repz
sub
in
aam
xchg
ret
xor
lods
push
pop
repnz
lock
hlt
pop
in
push
push
out
ins
dec
fisub
int3
icebp
call
or
push
adc
pop
add
add
(bad)
fst
push
dec
mov
dec
jns
mov
cwde
int
mov
dec
ss
pop
clc
pop
hlt
(bad)
pop
out
shl
inc
mov
loope
xor
scas
or
cmp
jnp
stc
mov
jge
rol
stc
test
cs
ja
bound
repz
and
popf
adc
adc
js
and
mov
or
push
shl
and
pop
inc
addr16
sub
xchg
sbb
leave
jo
lods
stos
xor
aad
(bad)
jle
iret
sbb
jae
mov
sahf
mov
lods
ins
imul
leave
sbb
fcomi
into
pop
and
cmps
add
push
adc
xor
push
fimul
sbb
pop
repnz
aaa
push
in
xchg
cdq
out
call
mov
xor
(bad)
pop
and
es
jmp
in
test
mov
xchg
add
xchg
mov
pop
jae
push
xor
and
fsubrp
data16
push
mov
int
add
ror
pop
sti
int
bound
sbb
cmps
test
xchg
loope
push
scas
adc
mov
callw
dec
jno
mov
dec
mov
ret
imul
das
sbb
adc
arpl
xchg
cmp
rcr
ss
cmp
push
push
jp
pushf
ret
jmp
clc
cmc
push
cmp
mov
int3
jb
push
and
sar
jecxz
pop
lock
mov
lahf
cmps
mov
inc
int3
(bad)
push
stos
jb
ficom
inc
mov
mov
aas
mov
add
push
pop
pop
es
inc
(bad)
test
scas
int3
outs
mov
fldenv
mov
mov
push
mov
das
aam
cs
push
popf
cmp
fwait
retf
jb
test
dec
imul
cmps
lds
or
int3
(bad)
push
sti
int3
jno
shr
test
ins
pop
jo
jmp
icebp
out
mov
push
scas
in
pop
mov
sub
imul
ficom
js
(bad)
push
call
and
dec
dec
jbe
pop
(bad)
mov
test
(bad)
sbb
push
gs
jle
imul
movs
cdq
push
jmp
daa
retf
pop
xchg
xor
int3
mov
push
cmps
ret
fwait
scas
jge
add
jmp
or
xor
push
fldcw
lods
dec
jp
rep
sti
shl
add
(bad)
sbb
add
pop
cmps
outs
or
ja
and
pushf
lea
sbb
outs
xchg
pop
sub
dec
sub
imul
adc
mov
xor
(bad)
rol
inc
and
or
call
xchg
and
loop
popf
push
loop
jecxz
or
test
add
pop
les
mov
inc
lods
lahf
xchg
sub
idiv
outs
sbb
movs
(bad)
jp
inc
ins
shl
cdq
call
add
arpl
xor
in
call
div
rol
pop
fld
inc
movs
aaa
pop
pop
mov
call
sbb
fs
push
jg
dec
sbb
in
dec
je
fcom
imul
and
inc
push
imul
or
enter
push
or
nop
aaa
ins
ss
jmp
les
je
xor
sbb
mov
shl
in
mov
outs
movs
mov
(bad)
shr
call
dec
push
mov
(bad)
xor
test
rcr
pop
push
mov
mov
push
cld
rcl
call
ficomp
es
call
hlt
jmp
mov
mov
xchg
ret
in
gs
sbb
sbb
lods
popa
dec
jle
dec
(bad)
rol
scas
ficom
sub
xchg
mov
push
sub
and
push
mov
ja
fld
ins
lods
test
cmp
into
shr
adc
inc
cwde
ds
cmp
mov
enter
pop
test
push
movs
pushf
(bad)
jge
push
fbstp
cmp
mov
xchg
pop
test
adc
push
jo
mov
data16
mov
enter
push
mov
add
fs
dec
mov
(bad)
fsubrp
out
(bad)
(bad)
pusha
push
lahf
jns
sub
inc
fsub
aam
pop
mov
fisttp
movs
push
sub
sahf
stc
xchg
(bad)
ss
dec
sbb
push
idiv
push
xlat
push
inc
std
cs
mov
cmp
push
nop
and
push
ss
div
movs
jp
push
aas
(bad)
ins
xchg
fbld
clc
fisubr
std
xor
(bad)
jle
mov
sbb
sub
dec
and
mov
and
dec
pop
mov
add
sbb
pop
cmps
xor
and
sub
mov
mov
mov
aas
mov
ror
mov
and
sub
pop
inc
adc
jmp
loop
mov
aam
hlt
jge
test
je
ja
pop
inc
jae
rcl
out
xchg
bound
out
imul
mov
out
adc
inc
fwait
in
mov
fisttp
add
jle
cmps
sbb
rcr
adc
xor
les
and
xchg
sub
(bad)
repz
cwde
fcmovnb
je
not
inc
cmp
jbe
xchg
add
add
jge
shr
aad
out
or
push
push
stc
mov
mov
and
or
sub
xor
xchg
pop
jecxz
jo
push
dec
popa
(bad)
mov
and
mov
aad
ret
lods
push
jle
je
pop
ficom
shl
sbb
pop
cli
cs
dec
sahf
cmp
dec
add
stc
mov
xor
cs
xor
dec
jns
imul
mov
retf
cmp
jmp
sbb
inc
adc
retf
fcomi
dec
jge
push
into
or
daa
ret
aas
adc
and
inc
inc
mov
jge
dec
sub
lea
ins
ja
stc
adc
ins
cmp
pusha
outs
dec
xor
add
dec
push
rcl
nop
xchg
lods
jecxz
jb
in
cmp
dec
out
(bad)
cli
(bad)
sbb
mov
push
fnstsw
pop
and
out
mov
and
cwde
mov
std
inc
ins
sbb
xchg
adc
(bad)
outs
dec
sub
std
es
mov
cmp
sbb
mov
and
jp
cmc
xchg
ret
mov
cwde
int
mov
cmp
call
mov
jmp
outs
mov
cmp
repnz
push
mov
mov
and
mov
stc
jmp
cdq
push
enter
cmps
inc
(bad)
fidivr
(bad)
mov
out
(bad)
movs
push
xlat
out
xor
bnd
outs
sahf
pop
mov
loope
stos
mov
adc
jo
xchg
adc
std
or
add
test
add
in
js
cmp
mov
fsubr
cmp
pop
inc
cli
rol
scas
popf
mov
es
jno
out
sub
adc
popa
je
inc
(bad)
xchg
test
(bad)
push
enter
popa
pop
out
mov
jo
mov
fidivr
xchg
mov
add
stos
ror
and
and
jne
pop
inc
mov
cdq
push
mov
(bad)
and
or
ss
inc
add
jmp
xchg
retf
pop
xlat
or
cmp
push
jl
icebp
retf
scas
add
pop
inc
test
test
and
popf
cmp
punpckhwd
retf
lock
push
sub
jl
ds
ret
push
sbb
(bad)
outs
cmps
fs
imul
cmp
adc
pop
push
adc
addr16
push
jbe
mov
inc
fsub
sbb
mov
sar
push
sub
aad
push
jbe
cmps
xchg
shr
xchg
push
repz
movs
mov
lods
push
jae
leave
or
add
sbb
test
arpl
jb
push
popf
dec
mov
sbb
test
sbb
lahf
mov
test
scas
jbe
mov
sti
xchg
not
pop
jb
js
mov
pop
dec
pop
loopne
cmp
cs
scas
pop
sar
movs
xchg
xchg
or
outs
rcr
frstor
test
test
(bad)
and
add
push
push
add
shr
mov
push
mov
add
idiv
(bad)
sub
add
adc
std
out
int
addr16
bound
cwde
mov
icebp
dec
scas
call
dec
pop
push
inc
and
in
xchg
push
and
int
ss
int3
sub
mov
and
je
push
or
dec
add
fsub
fcomip
mov
(bad)
rcl
pushf
test
add
lea
dec
pop
mov
fs
xlat
repnz
add
inc
sub
or
mov
ret
push
xor
daa
mov
retf
adc
rol
movs
out
cli
xchg
pop
jmp
jg
cmp
cmp
mov
cwde
js
aaa
add
or
movs
(bad)
sti
inc
adc
les
stc
ins
push
inc
imul
xor
jo
das
mov
add
mov
ins
jnp
mov
rcr
ins
sbb
ss
fisub
mov
fisub
popa
inc
stos
or
aam
adc
stos
sub
mov
mov
pop
bound
mov
xchg
repnz
cld
test
gs
xor
add
mov
pushf
xchg
fnstcw
jp
es
dec
or
sub
ret
mov
push
pop
pop
idiv
mov
ins
push
loope
iret
xor
inc
xchg
mov
jp
lods
mov
xlat
daa
scas
and
pop
push
inc
mov
scas
stos
mov
call
or
lods
ds
and
call
inc
or
adc
xchg
push
add
fimul
jno
pop
and
icebp
cmp
je
mov
sbb
imul
pop
add
xlat
pop
add
mov
cs
sbb
jle
inc
add
sar
(bad)
movs
jp
or
mov
mov
sub
ds
scas
inc
add
fs
or
(bad)
mov
sbb
push
(bad)
xchg
stc
dec
xchg
out
xlat
repz
or
retf
test
popa
lods
stos
xor
xchg
and
xor
adc
nop
pop
sbb
inc
cli
mov
or
mov
aam
xor
movs
jnp
mov
mov
int
or
jg
push
shl
inc
and
pop
dec
jae
jmp
push
imul
pop
ss
adc
or
std
(bad)
xchg
sti
xor
add
adc
mov
jge
push
mov
pop
mov
adc
sar
xor
cwde
in
dec
push
stos
inc
mov
adc
popf
pop
push
loope
sub
fld
mov
out
dec
mov
test
or
push
clc
sub
hlt
dec
and
shl
lods
jle
xchg
mov
test
jp
adc
push
aam
repnz
jecxz
cmp
adc
xchg
in
fisttp
pop
push
shr
inc
jb
fucomip
ret
pusha
aad
ret
xlat
movs
fmul
jp
or
adc
ja
xor
cmps
popf
inc
sbb
outs
lahf
jb
std
dec
cs
mov
aaa
stc
stc
dec
aam
xor
push
mov
dec
call
adc
push
out
ja
xchg
jmp
mov
xlat
cmps
call
cmp
sbb
push
fidiv
inc
aad
jmp
(bad)
aam
sbb
or
xchg
mov
and
adc
inc
imul
xchg
iret
fwait
fwait
xchg
int
xor
into
ins
int3
mov
cs
movs
cmp
add
cdq
aam
aam
sbb
ins
xchg
lock
jbe
lock
lds
idiv
repnz
mov
adc
daa
es
xor
sahf
shr
inc
pushw
add
outs
loop
stc
mov
dec
dec
inc
pop
adc
pop
push
push
inc
xlat
pushf
mov
jmp
(bad)
mov
retf
pusha
inc
ret
cmps
popa
sub
data16
sti
xor
outs
ret
mov
aam
mov
call
pop
in
mov
shl
and
jp
xchg
stc
js
mov
jno
inc
jge
scas
sbb
and
mov
into
cli
jne
dec
pusha
mov
mov
sbb
dec
loop
cdq
scas
cmps
bound
sbb
and
cmp
fs
call
addr16
leave
mov
stos
fdivr
ror
not
cmc
fdiv
cmps
fdivr
aaa
ret
or
retf
mov
and
pusha
mov
jmp
cs
xchg
xchg
nop
stos
mov
sub
pop
cdq
lds
or
cmp
xlat
or
loop
ins
scas
in
in
xchg
test
jmp
jmp
adc
das
jmp
add
out
mov
clc
sbb
lock
mov
imul
int3
fsubr
xchg
mov
dec
movs
push
jg
mov
inc
jmp
cmp
aaa
pop
sub
push
test
pop
add
clc
les
adc
in
call
sti
or
pop
aas
gs
lock
mov
inc
mov
sub
add
fmul
xchg
pop
push
sbb
jecxz
ficomp
das
push
or
and
cmps
jbe
jbe
aas
cmp
inc
add
in
push
out
or
sbb
cmp
fistp
or
pop
and
push
sub
add
sub
xor
sbb
inc
pop
adc
dec
popf
dec
inc
mov
and
ret
mov
sbb
fcom
and
fwait
aaa
dec
sub
sbb
int
ficomp
push
push
retf
fwait
mov
ins
and
iret
mov
xchg
shl
retf
cdq
arpl
out
test
lods
movs
out
(bad)
aaa
ret
dec
push
sbb
daa
rcr
adc
xchg
add
stc
pop
aas
xor
gs
gs
jne
jl
xor
imul
inc
addr16
xchg
fwait
out
mov
sbb
cmps
clc
ficomp
inc
data16
inc
test
mov
or
add
xor
pop
adc
lea
jp
cmp
retf
sbb
or
inc
push
test
std
pop
popa
test
loope
in
pop
sbb
mov
shr
into
std
aaa
int3
adc
xor
ins
hlt
cld
neg
cmp
in
(bad)
rcr
adc
test
lahf
push
scas
and
pop
dec
mov
ins
jl
popa
adc
fwait
rol
loopne
or
mov
push
(bad)
pushf
lds
and
push
int
aad
fmul
adc
aas
sbb
jle
sbb
idiv
ds
mov
push
es
lea
adc
(bad)
neg
nop
push
mov
push
cmc
(bad)
cmp
stos
mov
call
add
pop
pusha
xor
mov
popf
cmps
and
cmp
cmps
test
push
data16
(bad)
jle
lahf
jo
aad
imul
adc
jmp
dec
lahf
call
cmp
rcr
pop
or
cmps
push
(bad)
sub
ja
stos
adc
pop
(bad)
icebp
pop
push
xchg
mov
push
push
push
jge
retf
xchg
push
mov
push
jno
adc
adc
jno
cmp
(bad)
xchg
xchg
mov
jp
jno
rcl
(bad)
out
sbb
xchg
sbb
xchg
outs
test
outs
test
loope
ror
jmp
pop
or
xchg
xchg
push
imul
gs
fcom
lds
jp
je
push
pop
mov
sub
mov
test
mov
iret
cmp
nop
jge
jl
cwde
pusha
and
cmc
jae
or
lock
lods
push
pushf
add
fdivr
ret
movs
retf
in
push
dec
loop
movs
out
lds
and
pop
scas
sbb
ins
popf
stos
movs
adc
das
stos
cmp
mov
out
lods
out
mov
loope
ins
jne
jmp
jnp
cmp
jecxz
xchg
adc
out
jg
das
cmps
sbb
and
xchg
add
dec
xchg
push
sbb
push
pop
adc
mov
add
pop
mov
jae
and
cli
push
jnp
inc
aaa
out
out
and
pop
popf
xchg
push
adc
add
fisttp
inc
push
movs
sub
jns
adc
repnz
sbb
ret
out
sub
(bad)
ss
cwde
dec
cs
xchg
add
leave
call
adc
jecxz
daa
leave
sbb
mov
test
inc
push
pop
pop
shl
inc
(bad)
cli
lods
ret
mov
push
rcl
adc
mov
mov
arpl
add
xchg
daa
push
push
jmp
mov
mov
add
pop
mov
loope
dec
add
mov
jb
sbb
cmp
(bad)
(bad)
sti
adc
cmp
jne
and
jmp
sbb
cmc
mov
stos
into
jnp
stc
popa
sub
dec
hlt
inc
add
mov
sbb
test
outs
shl
push
push
and
sub
mov
jmp
push
retf
stc
test
xbegin
lahf
enter
sbb
and
cmps
cmp
ins
out
repnz
div
nop
or
dec
call
push
xchg
inc
call
push
dec
jnp
jecxz
clc
fdiv
dec
lock
xchg
fsub
inc
xchg
call
fwait
xchg
retf
cmps
daa
les
movs
mov
jp
popf
sub
xor
test
add
out
mov
inc
mov
or
pop
push
dec
and
sbb
cmp
data16
push
aad
(bad)
adc
dec
ficomp
jle
push
xchg
rol
aad
xor
jbe
ds
mov
inc
adc
mov
mov
ds
fidivr
fisttp
xchg
fldcw
mov
sub
cmc
cmps
inc
mov
test
inc
inc
inc
daa
lock
ficom
scas
sub
adc
je
mov
sub
jns
xchg
push
test
xor
mov
xchg
ja
dec
push
clc
ret
and
push
mov
adc
push
jg
jbe
lods
xor
daa
push
mov
pop
xor
mov
mov
out
push
cs
out
inc
dec
adc
xchg
sbb
out
out
bound
mov
cmp
cmp
fs
xor
imul
ror
(bad)
mov
mov
xchg
jae
aaa
test
stc
sar
inc
mov
push
pop
shr
loopne
inc
cmp
mov
bnd
adc
xchg
xchg
dec
jmp
mov
inc
adc
int3
xchg
push
movs
fnstenv
popa
pop
inc
fiadd
pop
adc
mov
mov
mov
dec
add
and
leave
mov
cli
ret
lods
popa
pop
mov
shr
or
add
pop
jb
int3
int
jp
pop
ret
mov
inc
sbb
(bad)
pop
push
push
dec
push
and
mov
retf
fnstenv
jp
push
int
enter
cmc
add
sub
sbb
sub
sbb
inc
sar
out
stos
xchg
scas
add
repz
push
retf
xor
arpl
int3
pusha
ins
push
mov
xor
fwait
rol
int
in
xor
or
jp
ins
sbb
rol
addr16
or
hlt
mov
test
mov
xor
fbstp
lods
pop
xor
lock
jp
addr16
test
or
pushf
jg
fild
push
dec
(bad)
ss
mov
add
push
test
test
inc
jle
mov
pusha
mov
mov
cmps
pop
in
ret
into
dec
outs
add
pop
pop
pop
push
repz
jae
pop
ds
fidivr
dec
push
xchg
jmp
call
fst
mov
inc
xchg
std
or
test
pop
iret
xchg
clc
popa
ja
hlt
test
shr
rol
or
add
dec
mov
mov
int3
mov
pop
inc
mov
repz
xchg
leave
xor
adc
repz
pusha
jno
mov
jmp
out
in
mov
mov
fld
mov
xchg
shl
jo
sbb
(bad)
fdiv
pop
outs
cld
jne
sub
arpl
jge
call
cmp
inc
lods
jnp
stc
adc
add
xchg
inc
adc
push
out
and
jecxz
push
mov
jae
scas
mov
fdiv
movs
or
mov
add
in
pop
push
mov
jo
into
xor
mov
test
adc
mov
cmp
jae
das
leave
inc
cmp
sub
inc
or
fmul
loop
out
or
jno
nop
lea
sbb
retf
call
add
imul
push
int3
jmp
ins
xchg
das
adc
fsub
out
add
fadd
fwait
ds
outs
fadd
sahf
mov
add
(bad)
jp
call
ss
loop
lahf
mov
pop
scas
fisub
retf
mov
into
pop
movs
test
(bad)
sbb
mov
xchg
fcomip
out
shl
inc
dec
mov
jnp
hlt
jge
xchg
sar
sub
sti
sub
dec
mov
inc
or
frstor
lea
jle
test
push
stc
shl
xchg
cmc
push
stos
adc
dec
sub
sti
sahf
movs
sbb
jmp
jb
mov
(bad)
sbb
mov
fs
inc
adc
(bad)
mov
js
jae
sub
xor
mov
adc
pop
dec
push
fld
ins
xchg
sbb
mov
int
in
mov
pop
pop
push
sub
addr16
iret
loope
jno
pop
push
cmp
add
nop
or
mul
jg
jl
lods
test
adc
retf
outs
imul
pop
mov
cmps
cmp
je
pop
loop
movs
cmp
mov
sub
mov
in
movs
dec
mov
rol
hlt
(bad)
std
(bad)
mov
test
dec
and
sbb
xchg
xor
mov
mov
cmp
mov
jmp
xchg
mov
mov
(bad)
sub
jae
pusha
sub
loopne
push
mov
cmp
pop
mov
inc
pop
scas
mov
mov
loop
xchg
cmc
lods
jecxz
jmp
push
sbb
test
mov
jbe
fild
call
jmp
add
sub
push
cwde
es
dec
icebp
fsubr
jae
jmp
sub
cld
icebp
pushf
mov
push
mov
xchg
jmp
mov
sbb
push
adc
(bad)
mov
out
push
(bad)
push
(bad)
sbb
cmps
stos
adc
mov
and
je
outs
adc
clc
sbb
and
mov
fnstsw
mov
iret
pop
and
xchg
dec
mov
jg
jl
out
in
mov
pushf
jne
fistp
call
pop
xchg
sub
out
ret
inc
imul
mov
leave
ins
pop
and
in
pop
fsub
shl
adc
pop
push
inc
push
xchg
inc
dec
dec
iret
(bad)
dec
enter
mov
inc
stos
cmp
jg
adc
cmps
test
adc
retf
js
fstp
das
retf
movs
and
mov
xchg
adc
cmc
enter
(bad)
les
or
adc
out
pop
sub
ds
pushf
test
mov
cmp
cmps
xchg
jecxz
aam
inc
hlt
cmp
hlt
add
and
nop
push
mov
mov
stos
adc
sub
pop
fcomp
inc
rol
inc
and
lods
xor
ret
aad
or
mov
cwde
xor
in
fsubr
jg
ficomp
push
jmp
(bad)
movs
sub
sub
out
fisttp
lea
das
aas
add
popf
out
xchg
mov
addr16
fs
adc
xlat
ins
adc
dec
sbb
mov
jns
lahf
mov
sbb
in
mov
(bad)
adc
scas
jle
pop
popf
jnp
jbe
cmps
sub
mov
(bad)
out
and
pop
es
lock
jns
cdq
pop
aas
imul
mov
jge
ficomp
mov
es
inc
push
shl
and
xor
dec
or
mov
or
(bad)
rcl
jmp
ror
sahf
adc
outs
out
xchg
inc
sbb
or
xor
fadd
mov
retf
mov
xchg
mov
xor
in
sbb
retf
(bad)
call
das
xor
loopne
call
pop
shl
xor
lods
dec
inc
add
fsubr
add
inc
mov
jmp
push
shr
aaa
sbb
dec
jmp
cmps
mov
jecxz
psadbw
or
or
push
(bad)
in
leave
xor
push
sub
out
int
push
add
dec
jle
pushf
fsub
push
rol
xchg
in
push
xlat
sbb
dec
xchg
xchg
or
call
cld
mov
add
pop
jp
dec
aad
push
(bad)
fcomp
es
jo
popa
inc
in
mov
stc
xchg
mov
aam
neg
adc
retf
(bad)
sbb
div
pop
cmp
shl
mov
sub
pop
adc
jae
add
adc
inc
lock
mov
shl
and
cmp
jb
and
mov
test
cmp
les
cmp
popf
xor
scas
push
movs
out
ss
mov
test
sbb
into
mov
ins
or
(bad)
aaa
sub
sub
mov
ja
fidiv
ins
pop
pusha
retf
add
mov
into
cwde
mov
ds
lock
fstp
data16
cmp
pop
out
mov
pop
push
xor
dec
dec
adc
mov
add
sub
retf
lds
data16
or
test
sbb
pop
push
or
cmp
mov
cmps
ror
pop
xchg
push
leave
and
adc
mov
push
lods
sbb
iret
pop
push
shl
arpl
repz
stc
das
daa
mov
icebp
(bad)
out
adc
push
call
stos
popa
pop
retf
in
(bad)
call
popa
jo
xlat
inc
sub
outs
jg
push
dec
mov
inc
sub
pop
pop
lahf
pop
daa
mov
mov
xor
ss
and
sbb
retf
pop
sub
cwde
mov
xchg
xor
mov
not
je
xchg
lods
push
xlat
pop
inc
or
sbb
clc
pop
push
sub
ds
cld
inc
lahf
(bad)
jl
mov
aaa
ss
inc
jae
xchg
jge
movsx
cmp
mov
push
add
xlat
push
test
and
cmp
loope
push
test
cmps
loopne
lahf
push
cmc
out
add
jle
pop
retf
push
ins
inc
jns
mov
push
jmp
icebp
aas
inc
das
mov
sti
or
xchg
xchg
or
iret
mov
and
pop
or
cmp
int
xchg
leave
pop
cmp
mov
cs
cmp
push
imul
mov
repz
cmp
shl
or
aaa
dec
and
cli
loop
enter
icebp
push
push
adc
jns
pop
jg
mov
in
jne
push
ja
xchg
cmp
or
or
stc
repnz
jmp
shl
sub
and
ret
outs
sub
popa
xchg
cdq
jb
lds
push
cmp
fsubr
adc
lahf
or
jne
mov
in
mov
adc
push
inc
push
into
mov
sub
sub
shr
xor
cmp
cdq
cmc
jmp
xor
adc
loop
sbb
xchg
fimul
push
or
cmp
gs
xor
xchg
cmp
mov
leave
out
adc
not
adc
push
out
lods
mov
cmp
nop
popa
cli
and
adc
mov
addr16
mov
xchg
adc
ins
or
stos
dec
adc
aas
add
or
jp
or
jb
add
xor
aam
sahf
fst
push
ins
stos
cdq
pop
test
movs
and
js
test
inc
cmp
push
dec
pop
fwait
stos
mov
fwait
inc
jp
push
test
fsubr
sub
mov
icebp
mov
cs
test
jmp
cmp
in
xchg
in
push
mov
out
xor
ds
daa
ror
(bad)
xchg
jmp
cmp
adc
mov
leave
add
retf
add
mov
mov
mov
aaa
repz
push
push
imul
fsubr
lods
push
adc
int3
cmp
iret
xor
idiv
hlt
call
ficomp
add
inc
push
mov
icebp
cmp
cmp
xchg
into
(bad)
xchg
adc
imul
add
aad
sbb
in
push
mov
sub
push
data16
mov
(bad)
clc
lds
inc
mov
mov
or
mov
movs
movs
iret
jl
sub
and
adc
in
cmp
pop
dec
or
pop
ror
pop
ret
pcmpeqd
add
mov
mov
mov
jg
nop
jg
test
add
jmp
out
xchg
loopne
mov
pop
dec
aam
das
push
repz
adc
ret
ror
pushf
push
cmp
inc
call
fdivr
shr
imul
xor
mov
dec
cmp
add
not
imul
dec
repnz
mov
ins
inc
leave
int
pop
mov
dec
adc
aam
mov
ficomp
out
sbb
xchg
mov
lahf
scas
sti
fmul
mov
sbb
and
out
push
ret
daa
mov
cmp
mov
mov
ds
div
not
cdq
adc
(bad)
ins
call
cmps
jae
dec
retf
adc
retf
mov
dec
mov
cmp
(bad)
mov
in
sub
sbb
test
fiadd
or
int3
test
mov
and
pop
pusha
or
bnd
pop
add
jp
pop
ret
cmp
or
dec
mov
js
dec
adc
sbb
cmps
arpl
sub
out
cmps
aad
and
add
mov
cld
cmp
(bad)
cmp
fadd
cmp
repz
pop
xor
(bad)
test
mul
es
lods
cdq
push
in
in
out
stos
mov
(bad)
stos
dec
dec
pop
jge
mov
mov
es
pop
js
sti
mov
sbb
jmp
dec
(bad)
or
mov
into
or
call
mov
hlt
sub
outs
in
and
shl
pop
out
cmc
inc
repnz
in
stc
retf
ret
pop
add
js
rcr
adc
loop
inc
mov
inc
pop
out
cmp
adc
idiv
and
jmp
add
loope
pop
pop
xchg
mov
mov
xchg
ds
out
sbb
lock
jns
fiadd
inc
fcomp
mov
add
mov
or
mov
es
pop
inc
(bad)
jbe
mov
mov
inc
dec
imul
(bad)
popf
sbb
adc
scas
into
or
dec
(bad)
jnp
xchg
mov
add
mov
setbe
sbb
push
xchg
ss
mov
or
jno
ffree
inc
(bad)
push
or
ja
add
mov
adc
xor
jo
lea
test
iret
mov
mov
leave
mov
jmp
jg
out
push
jo
sahf
gs
xor
jns
lahf
mov
enter
mov
jno
popf
push
xchg
dec
xchg
cwde
iret
adc
inc
or
xchg
call
push
fs
test
stc
add
(bad)
ins
and
loope
je
jmp
jle
mov
stos
outs
nop
jo
hlt
jle
or
push
mov
mov
movs
repnz
xchg
loop
sub
jl
je
das
fcmovnb
stos
sbb
stc
cld
stos
pusha
ja
fld
out
add
fdivr
push
lds
rol
iret
sbb
in
xchg
mov
lock
jl
(bad)
or
scas
or
inc
cmps
call
retf
adc
idiv
ss
loopne
sbb
cmp
fstp
push
mov
add
sub
sub
push
shl
inc
stos
inc
mov
in
cmps
adc
dec
test
cmp
cmp
stc
retf
scas
xor
movs
fild
lds
retf
inc
sub
mov
ret
mov
inc
lds
mov
jb
sar
pop
dec
sti
mov
in
mov
push
pop
fs
ret
arpl
sub
push
je
jne
mov
mov
or
ins
outs
lds
jecxz
pop
add
nop
add
xchg
iret
repnz
cmp
jmp
les
mov
sbb
into
ins
(bad)
jl
sub
outs
xchg
ins
push
cwde
or
jnp
xor
rcr
jo
adc
pop
mov
jg
cmp
ret
xlat
cmp
pop
or
cmp
push
push
cmps
ror
and
inc
pop
popf
lods
and
dec
jnp
sub
stos
mov
stc
mov
push
jg
std
fist
(bad)
push
test
sub
push
push
xor
sub
pop
ss
les
popf
or
repz
aad
fs
xor
ret
cli
xlat
xchg
add
push
ret
out
dec
sbb
add
out
sbb
sub
cwde
pop
hlt
push
dec
add
rcr
ja
ja
iret
scas
dec
sbb
cmp
push
or
(bad)
push
inc
test
or
mov
fidiv
in
or
add
adc
inc
imul
or
bound
cdq
cmp
int3
dec
rcl
adc
clc
fcmovnb
push
push
xor
xchg
retf
push
out
add
scas
jmp
rcr
daa
xchg
daa
jmp
jae
sbb
mov
cmps
or
jle
fs
pusha
xchg
leave
lahf
(bad)
je
pushf
das
sti
clc
jl
xchg
mov
stc
add
or
pushf
fistp
outs
and
and
pop
push
int
(bad)
loope
add
shl
and
and
mov
sbb
mov
adc
nop
daa
stos
and
inc
lock
sub
outs
or
ins
pop
int3
or
or
addr16
clc
and
xchg
push
lods
pop
push
int
jne
sbb
pusha
fsub
ins
push
fstp
inc
mov
add
call
pop
aad
add
or
adc
ds
movs
rcr
and
and
jbe
in
inc
add
inc
pop
leave
addr16
pop
in
repz
pop
repz
cwde
sub
mov
bound
adc
daa
stos
mov
mov
cmp
fwait
cmps
scas
pop
push
sbb
test
test
aad
sti
jbe
in
sbb
mov
fstp
mov
sbb
rol
(bad)
push
inc
xlat
mov
clc
ds
push
mov
jle
dec
xchg
add
jecxz
sti
jno
jmp
jns
aas
ret
pop
add
loop
or
jns
in
fstp
xor
and
cmp
sub
ja
dec
rcr
loopne
push
pop
aas
mov
push
cmps
iret
cmp
xchg
jno
push
sbb
lea
and
mov
jae
test
imul
fstp
jle
es
ins
test
push
sbb
fdivr
div
adc
jecxz
cld
daa
test
stos
push
lahf
dec
xchg
pop
mov
out
mov
jnp
mov
test
xor
push
dec
test
stos
mov
dec
adc
les
or
(bad)
mov
sub
rcr
cmc
and
loope
cmps
sbb
dec
mov
and
or
jle
pusha
mov
push
bound
scas
hlt
cmp
mov
mov
xchg
mov
sub
mov
adc
cmp
or
cmp
mov
and
cmp
mov
out
imul
mov
add
(bad)
xor
cmp
aas
lds
ror
in
gs
adc
out
gs
jo
test
inc
cwde
(bad)
stc
jecxz
xchg
fwait
adc
or
jmp
and
xor
fisub
xchg
daa
jp
add
mov
sub
or
lea
dec
call
mov
jnp
push
jno
or
lock
jmp
scas
push
mov
and
xchg
jae
scas
ror
push
sub
push
ja
pusha
jae
cld
push
pop
ins
call
jbe
ds
or
iret
ja
pop
div
fsubr
push
adc
lods
imul
mov
sahf
call
and
inc
mov
or
inc
mov
jae
sub
fmul
and
bound
stos
sbb
mov
fst
fcomp
clc
fs
pop
(bad)
mov
jp
mov
nop
push
dec
sub
push
push
ret
push
out
mov
mov
test
fld
add
mov
lock
out
in
or
in
stos
movs
mov
jle
dec
mov
cmc
fdivr
jnp
push
jge
out
jp
popf
xchg
adc
ss
es
dec
jge
mov
loop
sub
pop
jnp
inc
add
jnp
jge
sar
add
cmp
jmp
outs
adc
test
lds
int
arpl
sub
mov
xchg
mov
pop
ret
mov
jnp
(bad)
leave
ficom
in
hlt
jp
cmp
call
jne
dec
cmp
mov
scas
or
pusha
pop
call
xor
mov
pusha
or
lods
push
cmp
sub
aaa
cwde
push
mov
mov
mov
call
xchg
aaa
pop
xchg
lds
push
imul
gs
div
stos
fwait
mov
jecxz
jo
mov
mov
aas
add
push
scas
push
dec
cmp
xchg
adc
add
test
test
mov
rol
cmp
or
or
ret
test
sub
mov
out
mov
cmp
popf
je
mov
sub
call
ins
addr16
xchg
imul
xchg
jl
popa
fdiv
sub
into
jg
cmp
fwait
mov
hlt
call
xchg
clc
xor
leave
cmps
(bad)
fwait
and
and
scas
hlt
fst
sub
jl
int3
icebp
xor
or
cld
shl
mov
jbe
mov
lods
add
repnz
sub
or
add
mov
xchg
mov
mov
xchg
push
and
sub
mov
push
sbb
push
test
loopne
jo
test
fs
cmp
lea
xor
scas
fisttp
mov
jmp
push
retf
fsub
js
fdivr
push
ret
jae
adc
sub
sbb
xor
xchg
adc
leave
mov
pop
cmp
mov
sub
icebp
mov
xor
imul
int
lea
mul
ficomp
(bad)
adc
sub
jne
sbb
xor
loopne
mov
popf
pop
loope
sub
rcr
cmp
dec
inc
jecxz
sar
mov
push
xor
xchg
cwde
xor
mov
(bad)
fs
xchg
cmp
and
cmps
adc
or
in
outs
xor
or
(bad)
inc
(bad)
xchg
sbb
sbb
sbb
mov
xor
aaa
movs
inc
inc
inc
sub
pop
les
push
out
cmc
and
add
xchg
jge
xchg
jmp
popf
ss
mov
test
aad
cmp
or
mov
sub
add
mov
pop
jl
mov
cmp
(bad)
adc
outs
jg
pcmpgtw
mov
jns
or
leave
fst
push
(bad)
(bad)
mov
cwde
sbb
sbb
cmp
push
iret
test
shr
xchg
dec
call
mul
dec
sbb
xor
int
es
sbb
mov
jg
push
jno
mov
xor
mov
xor
xor
aaa
lods
pusha
(bad)
add
into
clc
daa
in
adc
dec
cmp
add
lahf
inc
cmps
ds
jae
push
aas
jb
test
xor
cmp
adc
inc
leave
aad
pop
lods
cmps
mov
xor
popa
add
dec
pop
push
stos
hlt
mov
pop
mov
xor
ret
jl
lock
and
jmp
cld
dec
mov
mov
add
pop
xor
test
data16
push
in
loop
cli
xchg
push
ins
pushf
xchg
lds
cmps
mov
movs
jge
int
popa
ret
and
data16
mov
fcomp
jmp
jno
mov
cmc
sahf
test
xchg
fistp
mov
xlat
sbb
adc
dec
test
popa
jbe
mov
shl
ret
mov
(bad)
(bad)
out
(bad)
ins
rcr
sub
push
nop
add
(bad)
in
inc
das
sub
push
jae
add
pusha
in
test
pushf
(bad)
aad
dec
jmp
aam
cld
gs
push
fbstp
xchg
out
outs
dec
xchg
sub
sahf
xor
push
ins
fisub
outs
ins
dec
loopne
sub
ins
out
xor
call
dec
(bad)
sbb
test
hlt
cmps
adc
jp
ficomp
jmp
sub
cmp
fimul
inc
nop
and
call
or
sub
inc
xlat
sbb
fxch
dec
push
rcr
jge
call
sub
xor
(bad)
outs
fldenv
gs
and
mov
shr
lea
in
out
loop
pop
sahf
movs
inc
dec
div
das
gs
rcr
ins
cmp
or
mov
(bad)
lods
jge
fwait
sub
sbb
push
outs
(bad)
outs
xchg
fsub
clc
es
adc
jne
ss
xchg
xchg
push
lods
icebp
faddp
xor
sbb
push
mov
mov
pusha
inc
add
xchg
jmp
or
xor
lea
hlt
mov
cmp
push
mov
retf
sub
sub
pushf
xchg
ss
inc
sahf
pop
push
cdq
cld
daa
cmp
pop
repz
jge
sub
aam
adc
mov
sub
add
mov
lock
aaa
push
xchg
pop
xchg
ss
adc
not
jle
mov
jo
loope
mov
xchg
cdq
in
or
sbb
xchg
xchg
popa
(bad)
nop
adc
(bad)
gs
and
mov
sub
pusha
push
push
out
mov
jnp
adc
sar
or
loopne
test
adc
pop
or
sub
mov
shr
xchg
jp
in
je
retf
int3
fnstenv
data16
mov
lods
jo
dec
mov
mov
mov
pop
inc
dec
out
fistp
xchg
mov
xor
fdivr
nop
dec
mul
mov
cmps
fnop
add
add
call
mov
arpl
shr
test
adc
shl
xor
hlt
mov
arpl
mov
pop
mov
outs
lods
mov
dec
mov
pop
jns
dec
movs
nop
inc
in
fdiv
or
sti
lods
sub
adc
mov
adc
in
dec
xor
lods
cmp
xchg
(bad)
xor
retf
push
xor
xor
xor
add
dec
adc
shl
xchg
data16
retf
mov
push
inc
push
or
push
jno
lods
jo
jmp
inc
mov
or
repnz
fld
daa
(bad)
aad
jl
fisttp
push
es
xor
sbb
and
cmp
cmp
fidiv
stos
and
cli
inc
aam
das
mov
fimul
pop
in
xor
or
and
xor
or
adc
add
sub
adc
xchg
stos
pop
push
mov
std
outs
scas
and
repnz
pop
jae
stos
push
(bad)
mov
pop
fisubr
push
test
pop
rcr
jl
adc
out
pushf
sub
and
sar
outs
and
cdq
push
push
jecxz
int
mov
loop
int3
mov
and
(bad)
jmp
sub
addr16
inc
aas
icebp
addr16
(bad)
in
cwde
ss
and
fwait
jge
inc
xor
or
add
or
cwde
cmp
sub
imul
ror
dec
xlat
fsubr
(bad)
sti
or
out
inc
jecxz
jl
icebp
ja
dec
mov
in
jb
fcom
mov
shl
jg
add
fisubr
jbe
sub
outs
pushw
outs
fs
push
out
adc
xchg
jno
call
adc
push
fs
jmp
push
nop
ja
sub
dec
out
test
add
inc
ss
mov
xchg
inc
sub
dec
jne
adc
pop
or
aaa
imul
and
or
mov
push
ret
inc
or
fild
add
dec
push
cmp
cmp
mov
in
je
call
inc
xchg
and
out
test
xor
cdq
add
cmp
stc
mov
push
imul
je
jb
push
shl
(bad)
pop
push
sbb
dec
add
add
retf
adc
les
inc
imul
xor
pusha
jmp
jmp
cmps
jl
movs
inc
add
pop
cmp
fild
xchg
or
or
fstp
xchg
out
mov
stos
pop
nop
mov
js
fwait
idiv
xor
shr
sbb
imul
and
add
sbb
adc
ret
es
ja
xor
dec
imul
mov
sbb
inc
aas
sub
sbb
int3
scas
cmp
inc
jge
mov
fisub
inc
rcr
sti
fist
sbb
or
stos
mov
mov
ret
push
xor
pushf
sbb
cmc
lods
push
dec
lods
je
iret
or
sbb
test
mov
into
mov
shr
(bad)
push
pop
and
add
nop
jne
xor
push
inc
add
mov
mov
inc
or
(bad)
push
mov
daa
push
fucomp
out
test
inc
push
sbb
outs
imul
repz
pop
mov
stc
xor
mov
stc
xchg
adc
adc
clc
sbb
inc
neg
movs
fdivr
jp
(bad)
dec
jne
mov
xor
ja
xor
retf
push
xor
aaa
rcl
bound
loope
inc
fstp
add
inc
mov
rol
mov
shl
call
loopne
js
pop
jecxz
in
xor
mov
xchg
test
jge
arpl
rcr
rcr
out
xchg
inc
dec
lock
mov
cs
in
rol
fistp
cld
jmp
ins
clc
cld
stos
jl
lds
test
xor
movs
pop
pop
std
jecxz
push
push
or
loopne
inc
outs
pop
loope
mov
imul
adc
sub
sub
ss
and
test
retf
and
dec
jns
aas
or
sti
inc
xchg
cmp
xor
xor
sub
mov
or
mov
sbb
ja
and
mov
sbb
cmps
pop
jl
pop
mov
arpl
imul
jmp
push
or
cli
call
fimul
jbe
imul
and
pop
xlat
cmps
(bad)
fs
loope
push
rcr
push
movs
out
sub
jbe
dec
mov
jns
adc
rcl
inc
or
jmp
push
sar
out
mov
mov
jmp
aam
jnp
sbb
dec
in
movs
jo
arpl
cmp
sti
test
fs
xchg
int
dec
push
ret
je
bnd
loopne
sbb
nop
in
ror
hlt
mov
mov
mov
pop
rcr
sbb
push
mov
push
and
ins
lods
push
ins
xchg
sbb
push
ins
adc
shr
call
cmps
and
retf
xchg
sbb
xchg
pop
or
fadd
fidivr
call
fisttp
cmp
cmp
imul
icebp
pop
pop
leave
jno
(bad)
je
push
inc
jb
aam
retf
and
pop
cld
je
dec
test
fcomi
lds
aad
adc
mov
sub
push
and
rol
mov
lds
sbb
sbb
sbb
hlt
cmp
xlat
cs
out
pop
adc
add
ja
jmp
jbe
jle
mov
inc
jne
mov
jge
ret
pop
hlt
mov
mov
and
mov
shl
jmp
in
fs
adc
pop
and
mov
test
in
cli
int
inc
add
adc
or
fldenv
jle
movs
cmp
push
or
push
xlat
mov
mov
enter
xchg
(bad)
dec
cdq
or
outs
pop
movs
lods
in
pop
xchg
jns
leave
popa
data16
pop
sbb
xchg
icebp
(bad)
push
mov
mov
cmovle
sbb
mov
mov
scas
mov
movs
outs
sbb
call
mov
ja
cmp
xchg
pushf
lock
mov
mov
mov
dec
scas
xlat
out
xchg
or
icebp
int3
or
pop
pop
jp
dec
pop
outs
dec
sti
call
js
sahf
ficomp
or
push
inc
dec
sar
aaa
fsubr
aam
mov
inc
mov
adc
out
ror
das
pop
push
popa
jmp
cld
push
mov
lods
add
stc
(bad)
(bad)
int3
ror
adc
(bad)
mov
pop
or
outs
xor
sbb
and
sub
imul
fcomp
mov
vmptrst
loopne
cmp
mov
pop
mov
lock
repz
pop
sahf
ds
jns
repnz
inc
mov
loop
je
fistp
outs
xchg
pop
call
(bad)
or
lock
lahf
xchg
inc
pushf
arpl
inc
or
hlt
imul
ds
pop
adc
and
dec
rcr
ins
in
ficom
int3
neg
test
dec
or
jno
push
sbb
pushf
fcmovne
aam
pop
jge
enter
aam
adc
cdq
xchg
sub
stos
push
pop
loopne
jmp
adc
mov
or
ja
and
call
gs
test
int
aas
ds
into
mov
mov
ja
je
or
jmp
mov
(bad)
jmp
add
stos
xchg
std
push
mov
scas
add
and
mov
lock
xor
or
jmp
ficomp
and
(bad)
iret
mov
js
jnp
sbb
xchg
shl
inc
enter
enter
push
mov
dec
cmp
(bad)
dec
jge
scas
jbe
xchg
xor
popa
dec
ins
inc
sub
xor
std
test
or
loop
cwde
loop
sub
lahf
push
jns
jbe
ss
ret
lods
jmp
cmp
pusha
jmp
leave
jle
mov
xor
mov
call
jno
sbb
adc
jl
inc
xchg
retf
or
add
pop
push
cmc
jnp
cli
pop
lahf
add
ins
lods
and
push
outs
pop
adc
loopne
pop
outs
pop
pop
dec
and
xor
shl
push
es
(bad)
stc
adc
push
sbb
std
out
xchg
and
push
sbb
and
in
fcom
xlat
rcr
mov
jnp
lods
pop
lock
jle
gs
hlt
xchg
out
xor
lods
pop
mov
lahf
sub
or
and
mov
clc
aad
or
out
inc
aaa
fwait
jle
adc
(bad)
outs
fsubr
mov
mov
sbb
mov
pop
or
inc
shl
imul
div
loopne
test
sub
int3
clc
jl
pusha
sub
test
cdq
popf
mov
(bad)
(bad)
int
cmc
push
out
mov
mov
pop
les
nop
pop
stos
fdivr
sbb
fnstcw
mov
mov
mov
enter
jle
out
test
xchg
loopne
sub
cli
mov
add
cli
push
mov
cli
or
out
dec
(bad)
adc
xchg
sbb
pushf
push
jmp
cmp
mov
cdq
sbb
jge
mov
nop
push
sub
pop
imul
mov
in
aas
out
pop
es
jl
aaa
fwait
push
ffree
jnp
adc
(bad)
sbb
fsub
mov
ins
or
jnp
mov
xor
sbb
jbe
jmp
adc
jb
mov
jb
fnstsw
add
inc
push
xor
mov
je
(bad)
cmp
sbb
retf
(bad)
xchg
cwde
mov
or
js
retf
mov
call
adc
xor
clc
fwait
jp
pop
(bad)
sbb
aaa
push
gs
fdivr
dec
outs
ror
dec
and
in
cwde
arpl
mov
xor
adc
push
mov
or
pop
scas
dec
mov
pop
stc
sub
inc
dec
out
mov
mov
sahf
call
repnz
dec
outs
xor
fidiv
dec
push
icebp
add
movs
jl
ja
dec
mov
mov
fcmove
in
(bad)
fsubr
fistp
(bad)
fldcw
dec
pop
adc
jno
pop
outs
pusha
or
bound
lds
es
aad
out
or
leave
cmp
sbb
sbb
push
mov
rcl
movs
jae
fild
mov
neg
cmp
jmp
jmp
stc
call
daa
add
test
les
lods
enter
mov
fdiv
imul
loop
mov
mov
sub
xchg
icebp
add
cli
pusha
lock
test
rcr
mov
jne
mov
or
ins
push
xchg
enter
ror
outs
jmp
ins
mov
and
jmp
pop
out
xchg
imul
fist
push
mov
fwait
outs
test
in
test
pop
or
jbe
mov
inc
push
int3
lgs
stos
les
xor
jae
xchg
sub
repnz
lea
xchg
js
int3
pop
dec
jnp
test
fcom
mov
jbe
dec
gs
mov
fsub
(bad)
mul
out
or
clc
inc
scas
adc
jae
mov
fist
dec
out
data16
pop
push
xchg
dec
repz
shl
jecxz
lods
sbb
les
icebp
inc
xchg
les
shl
cmp
sahf
hlt
ja
sub
xchg
mov
adc
cmp
or
and
icebp
cmp
push
in
pop
mov
outs
add
push
call
jnp
cli
ret
dec
imul
xchg
shl
rcr
je
push
push
(bad)
and
(bad)
add
xchg
dec
scas
xor
retf
pop
xchg
add
and
enter
and
push
inc
mov
sbb
xor
push
call
inc
test
mov
jle
or
inc
sahf
mov
lods
jecxz
pop
dec
cmp
ins
cmc
sbb
and
lods
loop
xchg
cmp
in
loopne
pop
(bad)
sahf
stos
mov
addr16
and
into
ror
js
das
mov
sbb
add
mov
pop
fisub
sub
pop
push
sbb
adc
cmps
mov
arpl
jmp
ds
mov
lock
xchg
mov
cmp
fs
mov
jle
je
jmp
lahf
mov
and
dec
dec
lock
xchg
xchg
imul
and
sbb
add
test
sub
arpl
sar
jns
(bad)
out
stos
mov
jp
mov
enter
and
outs
ins
rcr
jne
adc
mov
icebp
stc
unpcklps
int
mov
push
js
ss
jecxz
sub
jmp
sub
pop
aam
adc
add
lahf
pop
ds
bound
addr16
aas
fcom
rcr
cld
sub
sbb
fs
out
push
lock
xchg
push
push
xor
jnp
mov
hlt
stos
sbb
push
ja
pop
out
lods
xor
in
ficomp
loopne
cmp
dec
fiadd
dec
mov
mov
fisttp
(bad)
xchg
inc
adc
in
call
mov
dec
and
mov
les
jns
push
hlt
test
mov
iret
mov
gs
cli
es
mov
cmc
xchg
dec
movs
push
out
inc
adc
retf
dec
adc
in
sub
hlt
shl
nop
(bad)
add
mov
repnz
push
repnz
xor
stos
add
test
iret
lahf
sub
jns
mov
fdiv
fs
aas
pop
add
fiadd
outs
dec
cvtps2pi
cmp
add
repnz
movs
mov
jnp
nop
cmp
push
adc
sub
mov
xor
cmp
sub
test
in
aam
out
lds
ret
out
add
test
pop
xor
push
movs
sub
dec
stos
jmp
cmps
fdiv
lds
je
dec
or
push
jl
jno
jmp
cmp
stos
pop
or
lds
movs
in
fdiv
mov
dec
cdq
scas
push
shr
jns
sub
int3
iret
and
sti
lods
xlat
mov
inc
push
pop
sub
retf
sub
or
sbb
adc
movs
gs
or
adc
into
out
cli
pop
mov
jmp
imul
sbb
or
(bad)
xrelease
adc
adc
xor
in
sub
mov
jp
call
stos
cmp
in
and
and
mov
add
ins
aas
test
pop
in
inc
loopne
sub
jecxz
pop
cmp
add
xchg
pop
ret
push
jmp
test
cli
push
add
loop
stos
inc
mov
sbb
scas
in
fistp
in
(bad)
imul
pop
dec
(bad)
push
or
mov
daa
retf
call
enter
and
lahf
mov
add
imul
or
xchg
icebp
xchg
xchg
out
div
cmp
adc
sub
or
std
xor
test
jg
dec
add
cli
or
jne
nop
jne
cs
mov
fs
sub
popf
and
xlat
in
call
add
sbb
mov
jnp
(bad)
sub
lock
mov
ja
retf
fs
add
mov
jns
cmc
cwde
xor
add
(bad)
or
add
adc
jns
pop
cdq
xchg
xchg
out
and
icebp
or
inc
push
jno
(bad)
lea
cmc
popf
and
cdq
in
scas
ret
in
pop
mov
outs
loopne
adc
jge
inc
cmp
iret
mov
adc
inc
add
lods
sub
xor
mov
push
ss
push
stc
and
(bad)
das
dec
js
call
mov
repnz
add
repnz
jl
or
std
xlat
ret
fld
cmp
pusha
std
jecxz
jae
adc
movs
imul
cmp
jl
fcom
repz
ins
je
push
mov
rcr
dec
scas
jbe
add
cwde
mov
mov
fsubr
jae
push
cld
je
stc
jle
jnp
shr
out
and
(bad)
sbb
(bad)
pop
and
add
mov
out
or
dec
jno
push
cmc
mov
mov
out
jnp
pop
fs
popa
retf
movs
frstor
fucom
mov
pop
xchg
mov
repnz
icebp
mov
call
push
sbb
xor
push
stos
shl
enter
cmp
(bad)
dec
pop
inc
sahf
xchg
jbe
mov
jg
pop
jecxz
sub
mov
or
add
out
stos
fbstp
enter
lods
outs
add
in
js
jmp
retf
cmp
push
cmc
push
test
adc
or
pop
jmp
cmp
dec
mov
cmp
jg
fdivrp
pop
adc
fs
mov
push
xchg
retf
adc
add
jmp
repnz
push
enter
test
sahf
cmp
mov
mov
les
inc
jp
aaa
test
pop
push
mov
inc
xor
sbb
mov
outs
add
sub
dec
or
test
sub
pop
mul
cmp
retf
shr
push
daa
push
dec
cs
push
sbb
dec
mov
movs
pop
inc
nop
cmp
jecxz
fsub
std
je
add
jl
xor
lock
inc
mov
cld
sbb
adc
xchg
out
fwait
or
jle
imul
mov
retf
ret
or
jecxz
rcl
xchg
js
mov
dec
aad
inc
(bad)
sahf
push
adc
push
stc
push
add
xor
rep
adc
inc
cmp
sub
rol
pop
scas
mov
mov
adc
mov
push
adc
push
inc
ins
lock
hlt
jmp
or
lahf
jo
mov
add
not
fild
je
fs
(bad)
xor
hlt
jle
cmp
pop
aam
int3
pop
jmp
xor
inc
sub
stos
jmp
jae
js
test
fld
push
fwait
aas
lods
int3
mov
shl
sub
mov
pop
(bad)
cmp
pop
sub
mov
out
push
add
inc
jns
mov
cmp
jns
dec
jecxz
movs
inc
pop
mov
sbb
mov
iret
mov
adc
cli
popf
mov
jecxz
mov
push
mov
add
fcomp
bound
aad
push
mov
jno
je
mov
clc
shl
fiadd
jmp
int3
data16
jg
push
test
mov
inc
dec
mov
mov
xchg
mov
pop
jmp
cmp
cmps
xor
mov
and
cdq
sbb
jne
push
sbb
repnz
hlt
(bad)
paddsw
and
cdq
push
ror
add
cli
cwde
mov
movs
sbb
aaa
retf
and
lahf
shl
xor
out
jb
mov
mov
xchg
imul
push
xor
nop
das
mov
mov
lock
leave
cmc
ret
leave
cmps
sub
sbb
adc
aad
or
pop
lahf
or
add
mov
das
and
into
stos
je
pop
cmp
test
retf
mov
rcr
lahf
xor
dec
fnstsw
xchg
and
dec
test
aam
not
shl
in
xor
cmp
mov
hlt
sub
sahf
arpl
(bad)
sbb
ss
in
out
xor
adc
dec
and
jecxz
pop
mov
std
stc
add
ins
pop
jne
and
out
or
push
mov
add
aad
je
popf
or
popf
stc
pop
stc
aas
cmps
sbb
fidiv
in
and
push
enter
add
mov
loop
push
push
ja
and
mov
bnd
push
add
push
pop
rcr
imul
add
pushf
fs
xchg
hlt
cmp
nop
scas
or
push
mov
sti
fadd
adc
mov
in
mov
lds
jecxz
jg
xchg
test
(bad)
cmp
neg
pop
sub
js
lea
jo
sbb
(bad)
jo
push
fsubr
shl
or
test
or
fbstp
inc
aam
ins
xchg
jae
sub
mov
mov
inc
movs
dec
jnp
push
sub
and
cmp
mov
cli
mov
js
rol
xor
xor
adc
dec
les
cmp
popa
mov
jbe
test
cli
nop
arpl
aaa
repz
in
fadd
test
loop
nop
xchg
fcmovne
dec
pop
fwait
jle
xchg
jae
xchg
mov
xchg
retf
(bad)
stos
nop
inc
ss
mov
vmread
stos
movs
(bad)
repnz
leave
xor
pop
and
push
ins
psubw
xor
mov
jo
push
out
inc
(bad)
xchg
data16
cdq
cmc
ins
cmps
push
add
lea
lds
cmps
outs
shl
call
mov
mov
push
mov
inc
inc
loope
cdq
xchg
add
cld
sbb
jae
call
fadd
test
push
es
int3
mov
lods
ficomp
and
dec
pop
retf
int
push
(bad)
pop
push
imul
fisubr
mov
dec
pop
mov
test
jle
sub
add
arpl
fcomi
into
pop
add
push
sbb
jo
push
mov
int
pop
repnz
fwait
nop
sbb
xchg
lea
pushf
out
addr16
int
cmp
mov
mov
daa
(bad)
test
jmp
mov
xor
pop
push
mov
and
das
fstp
(bad)
(bad)
std
and
movs
stos
add
aaa
scas
sbb
dec
jb
xchg
pop
jmp
cmp
jnp
(bad)
adc
pop
push
leave
mov
sub
inc
fdivrp
fimul
xor
xor
mov
push
dec
mov
aaa
add
jp
xor
and
idiv
sub
jns
fidivr
push
or
dec
sub
mov
mov
out
lds
add
dec
rcl
shl
push
fdivr
mov
sub
ficomp
cdq
pop
fisub
or
int
cmps
sar
xchg
pop
movs
mov
pop
fsubr
push
nop
sub
in
imul
jmp
test
jae
sti
push
inc
mov
mov
sub
shl
mov
cmp
fdiv
jmp
fcmovnb
dec
sub
dec
mov
adc
mov
xchg
repnz
jmp
out
pop
or
jno
sub
mov
pop
inc
es
inc
and
xor
dec
inc
or
or
jnp
xor
nop
jecxz
mov
push
mov
int3
mov
cli
es
pop
push
outs
push
and
inc
jmp
in
dec
icebp
ret
sbb
(bad)
pushf
jae
inc
ins
(bad)
jl
jp
jnp
and
sbb
pop
xchg
mov
xor
test
int3
jne
ins
lahf
sub
(bad)
imul
mov
ins
pop
data16
mov
lods
cmp
dec
fsub
jb
pop
addr16
dec
jecxz
sbb
add
sub
and
stc
jmp
push
pop
adc
cmc
popf
int3
scas
mov
nop
rol
mov
and
inc
lea
mov
mov
xchg
out
rcl
jnp
in
xor
sbb
xor
bsf
das
dec
sahf
sti
pusha
imul
pop
inc
out
and
rcr
push
popf
out
jp
mov
cwde
fbld
das
adc
or
adc
add
add
sub
pop
pop
cli
or
dec
aaa
adc
jmp
pop
xlat
mov
sbb
fdivr
mov
out
das
jo
fcmovu
ja
mov
ins
clc
fadd
add
inc
mov
in
xchg
add
call
push
jb
xor
mov
xchg
add
cmc
xchg
hlt
sbb
dec
xchg
test
iret
jo
cmps
add
rcr
out
sbb
fistp
hlt
lock
inc
call
icebp
popf
mov
cmp
xchg
or
cmp
pop
ficom
adc
xlat
(bad)
imul
(bad)
(bad)
cmp
push
rcr
rcr
and
jp
ret
jnp
ss
xchg
mov
aad
fdiv
xchg
fwait
pop
and
xor
sub
mov
int
jae
jg
scas
cmp
imul
nop
sub
sbb
(bad)
add
jecxz
push
mov
mov
sbb
or
retf
mov
call
out
ror
popa
mov
inc
imul
pop
mov
cmp
cs
js
and
mov
mov
into
jmp
fs
repz
cmc
jnp
and
call
test
stc
xor
ret
(bad)
xor
(bad)
stc
or
dec
ja
dec
(bad)
cmc
push
xor
jle
inc
fmul
cmc
mov
xchg
xchg
fcmovb
hlt
add
xchg
mov
push
in
xchg
leave
inc
das
popf
mov
ret
enter
inc
or
cmp
lock
icebp
cs
push
pop
imul
push
ds
cld
pop
ds
mov
xor
push
mov
push
inc
mov
ret
cmp
cmc
dec
adc
aam
cld
mov
ss
dec
(bad)
sbb
xchg
xchg
hlt
xor
jns
loope
cmps
mov
push
popa
fiadd
pop
xchg
mov
enter
inc
cmp
(bad)
repnz
aas
push
stos
and
pop
dec
stos
push
mov
and
xor
mov
stos
loop
fild
push
in
mov
jbe
mov
sbb
push
mov
clc
or
lock
mov
or
mov
iret
or
(bad)
out
(bad)
add
imul
nop
das
daa
dec
jb
xchg
in
inc
js
retf
add
rcl
mov
pusha
mov
lods
jl
out
dec
adc
js
xor
xchg
ins
mov
xor
jmp
mul
test
rcl
xchg
enter
inc
mov
clc
mov
mov
inc
adc
pop
pop
mul
test
dec
lea
lods
fild
cwde
cwde
ins
jo
movs
xchg
sbb
mov
idiv
ds
inc
mov
test
xchg
fwait
jecxz
movs
cmp
mov
mov
xchg
dec
jmp
add
stos
mov
jno
xchg
push
add
(bad)
daa
lea
sub
lods
xchg
bound
dec
mov
gs
inc
out
add
inc
repz
add
jae
push
in
inc
test
fdiv
cmp
sbb
mov
stc
(bad)
pop
sbb
nop
push
test
cmps
cmp
cwde
pop
retf
fdiv
sbb
cmc
retfw
jmp
fidivr
and
loope
jmp
add
sub
das
shl
dec
sub
mov
and
jl
movs
jb
add
(bad)
cmp
sub
mov
pushf
add
test
arpl
lea
inc
mov
test
pop
leave
std
adc
movs
push
jl
push
stc
out
in
fldz
loop
out
fdivr
popf
pop
or
push
(bad)
fstp
test
jns
push
repz
into
pop
scas
push
jbe
pop
sbb
(bad)
cmp
repz
ror
and
mov
add
mov
push
addr16
call
(bad)
inc
popf
popa
mov
jl
cmp
rcl
xchg
ret
sti
dec
push
dec
hlt
aas
popa
sub
xor
popf
leave
fcmovu
mov
icebp
das
mov
cmp
ss
repz
std
fdiv
dec
pop
xchg
or
repz
outs
in
int3
mov
inc
test
in
jno
in
mov
es
ret
aas
fdiv
add
adc
push
push
xchg
mov
add
sbb
pop
xor
loop
dec
out
cwde
pop
popa
push
movs
add
sbb
and
push
add
hlt
stc
push
and
jmp
inc
and
push
sub
bound
dec
scas
lods
sti
push
int
aam
sti
dec
jb
adc
popf
cmc
iret
stos
ret
(bad)
popa
dec
(bad)
push
jmp
xchg
xor
je
adc
ins
dec
adc
pushf
fnstenv
and
call
and
out
stos
and
in
cld
sbb
pop
add
call
push
aaa
cmp
mov
shl
clc
popa
ss
mov
sub
(bad)
scas
inc
std
(bad)
dec
cmp
and
out
inc
ds
mov
rcr
(bad)
fisttp
sahf
int3
xlat
in
push
jae
out
sti
movzx
mov
mov
rcr
lods
mov
pop
mov
frstor
and
pop
pusha
ret
push
sbb
adc
mov
sbb
inc
sbb
mov
push
and
push
push
das
or
and
cmp
test
imul
mov
bound
xlat
outs
aas
push
fdiv
pop
xchg
xadd
adc
sub
sbb
xchg
cwde
cmp
sbb
mov
mov
sub
outs
stc
jae
scas
stc
fwait
ret
sbb
jns
stos
dec
push
mov
xchg
xor
sar
xor
jmp
div
dec
enter
nop
xchg
dec
scas
add
ins
aas
mov
or
sbb
jl
add
push
sub
arpl
inc
or
mov
pusha
push
push
loop
or
push
cli
sbb
mov
cmp
stos
cli
test
mov
cmp
sub
inc
shr
test
dec
out
fstp
jno
xor
mov
mov
fstp
repnz
xor
out
sub
mov
ja
test
js
cmp
shl
aaa
(bad)
cmps
test
fbld
or
push
or
push
mov
jns
scas
aas
jnp
ins
repz
adc
std
fdivr
jl
dec
xor
sub
test
jle
jo
mov
cmp
or
mov
jmp
mov
or
rcr
jae
mov
sbb
popf
jo
std
inc
mov
push
xor
jp
movs
push
xchg
psllw
test
pop
out
lods
movaps
or
sahf
fwait
sub
imul
and
pop
mov
fidivr
mov
sub
scas
push
jne
rcl
adc
rcl
call
add
sbb
(bad)
in
cwde
jecxz
outs
sbb
ja
adc
in
jb
and
(bad)
cmc
pop
and
stos
das
jmp
add
and
fsub
cmp
jg
mov
cmp
cdq
aam
mov
and
dec
xchg
test
mov
hlt
sti
fist
in
outs
push
ror
dec
pop
jle
stc
cmps
(bad)
cmps
sub
inc
lahf
jno
push
sub
or
cli
shr
jl
and
or
aam
std
add
mov
iret
sub
scas
(bad)
fdivr
mov
pop
add
jle
push
inc
aad
(bad)
add
sub
popf
mov
push
rcr
sub
xor
mov
hlt
test
pop
xor
pop
mov
xor
sub
mov
add
shl
inc
xchg
not
dec
ret
js
out
sbb
jnp
enter
sub
jle
mov
fadd
sub
test
mov
or
inc
jle
int
fcom
(bad)
int
les
mov
popf
xor
scas
(bad)
fbld
(bad)
ja
jb
xchg
shl
pusha
adc
fistp
fnstenv
or
add
jno
inc
adc
int
int3
cli
dec
idiv
mov
sbb
rcl
mov
js
imul
push
sbb
add
pop
jae
mov
mov
push
ficomp
dec
dec
pop
jne
loopne
scas
icebp
inc
lea
mov
or
push
inc
sub
lock
and
dec
inc
sbb
push
push
add
loope
xchg
cwde
or
mov
xchg
(bad)
jns
sti
pop
and
dec
jge
daa
pusha
adc
nop
xchg
ret
outs
jle
mov
pop
mov
push
cmp
cwde
(bad)
adc
test
(bad)
movs
fiadd
jae
shr
push
and
cli
stc
sbb
add
mov
xor
sbb
popf
xlat
repnz
mov
addr16
shl
xchg
fild
ins
xor
ins
jo
sub
movs
add
inc
push
jae
imul
inc
dec
add
test
loop
jl
and
arpl
pop
ds
shl
rcr
xchg
xchg
cdq
pusha
jl
cmp
inc
dec
cmc
aad
xchg
into
sub
shl
clc
pop
add
jno
pusha
jge
push
ror
clc
mov
rep
je
test
xchg
sahf
inc
in
out
xchg
pop
mov
(bad)
sbb
sbb
sahf
jmp
mov
dec
sub
arpl
int
out
fld
rol
movs
imul
xchg
mov
cld
scas
jo
(bad)
pop
emms
int
add
icebp
jo
test
shl
xchg
sbb
jo
aas
push
pop
push
lods
adc
rcr
(bad)
mov
icebp
fnsave
(bad)
mov
adc
sbb
xchg
inc
iret
call
in
adc
add
rcr
sti
sub
shr
lods
mov
xchg
pop
fucomi
mov
stos
outs
pop
and
and
inc
add
jbe
mov
inc
outs
iret
xlat
push
and
in
cmp
xchg
mov
call
cmp
ins
clc
int
sub
jl
and
imul
adc
cmp
sbb
fcom
mov
mov
les
push
or
jle
xchg
pushf
out
or
mov
stc
sbb
or
aam
cmc
cmp
adc
or
mov
aas
inc
pop
icebp
sbb
cli
cwde
mov
or
or
in
gs
jo
repz
es
dec
bound
adc
jle
imul
pushf
hlt
loope
jl
shr
add
in
out
data16
add
push
in
cmps
adc
xor
pop
and
je
xor
lods
(bad)
xlat
sbb
aaa
mov
pop
and
ja
mov
retf
ins
in
adc
mov
stos
pop
jmp
and
in
and
xor
xor
jo
mov
shl
mov
cmps
jecxz
stc
or
aam
mov
sub
pop
mov
lds
add
fmul
pop
xor
xchg
(bad)
pop
(bad)
clc
std
mov
stos
pop
fwait
(bad)
fistp
mov
push
and
or
imul
ficomp
out
loopne
sahf
inc
aad
cwde
into
add
xor
jbe
test
inc
fnstenv
out
pcmpeqw
inc
test
or
imul
xchg
cdq
xlat
in
inc
call
in
xor
(bad)
scas
aam
jb
stos
add
in
inc
dec
mov
mov
retf
push
sbb
repnz
inc
inc
aam
adc
mov
pop
mov
ins
mov
cmc
hlt
xor
pop
add
add
int
data16
aaa
in
shl
test
xor
adc
push
push
jg
sbb
mov
cmps
cmp
jecxz
mov
mov
pop
mov
xor
and
adc
sbb
cmc
mov
mov
and
out
xor
xchg
push
sbb
cwde
ret
(bad)
stos
std
xchg
or
stos
pop
inc
mov
fdiv
inc
(bad)
(bad)
ss
rol
les
cld
xor
pop
sub
fcmovb
pop
ret
in
iret
out
jb
mov
inc
add
movs
adc
test
out
nop
into
jnp
dec
inc
push
shl
dec
xchg
iret
nop
aad
push
jle
cmp
shl
in
sbb
loopne
test
(bad)
pop
mov
mov
sub
fidivr
(bad)
sti
jmp
sub
and
(bad)
ins
out
xchg
dec
aaa
mov
pop
movs
pop
mov
pop
fcomp
repnz
xor
(bad)
cmp
jmp
dec
test
cmp
into
mov
xchg
sbb
mov
into
fidiv
adc
fstp
pop
cs
xchg
mov
push
pushf
and
mov
jecxz
rcr
mov
int3
inc
mov
or
scas
aam
test
and
in
mov
sbb
jmp
gs
pusha
dec
dec
loope
outs
stos
adc
push
pop
push
push
stos
mov
shl
jae
add
js
pusha
xchg
cmps
dec
into
div
(bad)
dec
mov
mov
fwait
adc
nop
and
stc
pop
nop
movs
sahf
xchg
loope
stc
dec
jl
lea
outs
cdq
xchg
push
jmp
aad
cwde
and
sub
mov
stc
sti
sub
popf
in
jmp
sbb
mov
pop
push
push
imul
xor
sbb
cmp
mov
cmp
mov
ds
push
pushf
(bad)
mov
outs
jns
sub
lock
test
sahf
pop
fst
adc
push
dec
in
xor
into
test
cmp
push
test
out
mov
outs
lea
jg
xchg
or
pop
jge
outs
popf
add
xchg
pop
push
sbb
jmp
fwait
sub
ss
repnz
xchg
std
dec
sahf
imul
sub
int
std
lods
push
movs
mov
pop
sbb
int
in
out
sbb
add
inc
imul
repz
xchg
jge
push
sbb
cmps
cmp
push
add
sub
(bad)
repnz
push
cmps
jle
push
inc
test
sub
jb
out
fist
movs
xchg
sbb
push
shl
cmp
jb
ins
jbe
sti
jne
ret
call
or
retf
and
and
mov
jb
sbb
bound
fnstsw
or
push
xor
xchg
cmps
sti
mov
bound
adc
int3
call
sahf
mov
cmp
loope
es
ja
out
fisubr
sub
cmp
aad
aas
adc
add
mov
mov
loope
ins
and
xor
lea
mov
lahf
test
iret
sti
sbb
or
pop
add
inc
or
in
mov
dec
mov
call
and
and
add
sbb
mov
pop
les
mov
xor
pushf
mov
ss
sbb
xor
scas
push
dec
jecxz
sti
mov
inc
adc
mov
adc
arpl
inc
mov
fdiv
ret
sub
xor
xchg
mul
lahf
rol
mov
cmp
gs
scas
icebp
mov
das
mov
xchg
sub
xor
clc
fsub
shr
add
sub
pop
rcr
(bad)
dec
pop
retf
hlt
pop
cdq
(bad)
dec
xor
mov
call
and
jbe
imul
sbb
sub
jns
pop
and
push
pop
fldcw
popf
rcr
or
sysenter
adc
sbb
mov
cdq
pop
sahf
ins
ins
(bad)
or
lods
xchg
dec
xor
cmp
jo
xor
mov
inc
mov
cli
mov
xor
popa
pop
pushf
aad
cwde
(bad)
(bad)
mov
adc
push
mov
jno
push
div
jmp
sub
and
test
jge
ret
and
aam
cmp
push
adc
mov
aam
dec
jle
jp
ds
xor
(bad)
jb
aad
pop
mov
stc
jle
jecxz
movs
xor
js
pop
xor
(bad)
adc
in
jl
jno
xchg
iret
(bad)
out
mov
jo
sub
xchg
xchg
cmp
sbb
or
lods
pop
add
in
fistp
dec
xchg
mov
bound
popa
cmp
mov
pushf
fstp
sar
ss
dec
jge
out
jb
in
shr
popf
pop
dec
(bad)
into
push
pusha
mov
sbb
push
or
scas
(bad)
in
shr
fbld
ss
daa
jnp
push
test
popa
icebp
push
cmps
(bad)
pop
cdq
sub
cmps
cmp
mov
nop
test
jne
(bad)
test
or
out
mul
cs
sbb
sub
and
sbb
mov
cmps
xor
cwde
xor
dec
hlt
cs
xor
mov
xchg
mov
mov
arpl
adc
fwait
movs
pop
or
push
xchg
std
imul
ret
ret
jne
pcmpgtw
cli
gs
(bad)
fnstenv
sbb
lods
jl
push
jns
or
scas
fst
push
cmp
repz
inc
sti
(bad)
fs
imul
add
jmp
mov
(bad)
(bad)
dec
add
jecxz
out
or
mov
or
or
mov
mov
retf
imul
sub
shl
mov
xor
popa
repnz
xchg
jb
fbld
dec
mul
leave
ror
pop
mov
cdq
lods
fnstsw
(bad)
fidiv
outs
dec
(bad)
cmp
jmp
faddp
push
(bad)
pop
mov
and
mov
pop
push
(bad)
fnstcw
push
inc
add
outs
push
lods
xchg
and
(bad)
xchg
adc
int
jo
popa
push
nop
mov
push
jnp
cmp
adc
sbb
into
jg
sub
push
xchg
xchg
add
mov
sbb
cwde
cmp
mov
push
cmc
jmp
inc
stos
push
jge
jb
adc
or
adc
addr16
dec
cmp
(bad)
sti
xor
stos
dec
add
shr
or
pop
addr16
push
mov
pop
and
test
pop
mov
jo
ds
ja
test
dec
mov
jnp
mov
pop
cmp
daa
dec
arpl
jb
mov
sbb
fsub
inc
shr
icebp
push
jmp
cdq
setno
cmc
(bad)
dec
mov
add
dec
dec
mov
jg
inc
pop
(bad)
dec
ins
pusha
push
or
int3
jmp
stos
inc
xchg
cmc
sbb
xor
add
cdq
jae
sub
push
test
movs
push
in
addr16
sar
out
lahf
mov
jl
dec
sub
jno
mov
shl
fadd
in
xchg
dec
aaa
mov
scas
adc
xchg
aaa
cmps
pop
mov
pop
stos
or
and
rcl
and
dec
in
mov
sub
ror
addr16
pop
mov
add
outs
jmp
mov
jbe
sub
fcom
inc
mov
leave
inc
push
mov
in
sahf
pop
fwait
jae
arpl
mov
mov
mov
daa
inc
mov
retf
xchg
pusha
ss
pop
shl
sbb
jnp
push
push
sar
test
fcomp
call
dec
test
jp
rcr
enter
push
sti
aas
cmp
(bad)
dec
jnp
mov
std
xchg
aas
add
fst
jle
or
cdq
scas
xor
cmp
lds
mov
ins
or
mov
add
test
out
stos
scas
xchg
out
dec
ret
mov
sbb
shr
jno
xor
in
mov
aas
ja
xor
or
sub
mov
xor
mov
dec
inc
shr
xchg
ja
fnsave
mov
gs
loopne
dec
push
pop
les
mov
loopne
dec
jmp
out
mov
call
and
lods
xor
add
pop
xor
xor
ja
popf
test
cmp
push
mov
clc
mov
fucomi
ret
and
sub
sub
push
inc
sbb
jno
xchg
dec
and
jmp
sbb
clc
adc
inc
and
cld
clc
call
int
pushf
sub
es
fld
loope
mov
xor
out
mov
movs
arpl
div
inc
or
test
mov
stos
jae
daa
adc
pusha
cld
cmp
(bad)
leave
or
xchg
leave
ins
cmps
movs
out
sub
jae
rcr
arpl
mov
enter
jl
fistp
ds
inc
retf
mov
mov
pop
sbb
mov
pushf
(bad)
jno
ret
fld
cmp
cmps
inc
popf
push
gs
push
imul
movs
mov
mov
mov
sbb
or
mov
inc
adc
ins
fdivr
mov
sti
gs
push
loope
xchg
cmp
mov
loope
xchg
cmp
(bad)
loopne
(bad)
pushf
mov
fidivr
push
and
add
xor
pop
push
xchg
adc
push
sbb
add
xchg
jb
das
cmp
fldenv
std
xchg
pop
(bad)
movs
xchg
lea
loopne
xchg
inc
lods
xchg
mov
sub
and
jnp
mov
and
jge
fistp
or
pop
fcomp
sub
or
pop
mov
lock
sub
xor
sti
pop
out
pop
(bad)
push
pop
pmuludq
add
fsub
sub
cmp
add
and
sbb
adc
mov
sub
adc
adc
inc
add
pop
lea
or
aaa
gs
sub
in
mov
clc
aad
(bad)
push
dec
mov
in
fbld
(bad)
cwde
add
jmp
cmc
adc
std
sub
sub
jle
jmp
pop
imul
ins
movs
retf
mov
test
add
mov
fdivr
xor
xor
cmps
mov
mov
push
repnz
outs
push
xor
daa
loop
out
push
fimul
mov
es
push
jns
and
inc
push
pop
cmp
xchg
jne
add
push
fcom
imul
inc
ins
in
cmc
icebp
and
and
mov
push
sub
sbb
jp
pusha
fadd
or
outs
dec
ja
sar
add
shl
pop
add
fcomp
cmp
push
sub
dec
in
in
add
mov
in
pop
jmp
sti
xor
push
aas
mov
movs
and
push
out
fild
or
mov
mov
pop
inc
out
movs
sub
inc
xor
pushf
and
iret
adc
inc
sbb
xor
cmp
aaa
bound
mov
out
loope
jns
or
cld
xchg
mov
mov
aaa
add
rol
sub
or
xchg
add
mov
inc
xor
pop
test
mov
lahf
mov
in
mov
inc
jp
popa
popf
and
mov
shr
inc
push
aam
iret
call
imul
mov
rcr
test
lock
or
aam
movhlps
inc
mov
inc
dec
out
sub
push
pop
push
mov
neg
mov
hlt
adc
iret
in
imul
add
daa
call
add
push
fmul
nop
inc
call
fsubr
mov
aad
ins
jbe
aad
dec
pop
data16
push
aas
in
xlat
ficom
add
dec
mov
inc
inc
xor
sub
push
mov
(bad)
jmp
cmp
pop
scas
xchg
cld
stos
dec
push
out
iret
out
push
adc
jge
dec
mov
and
mov
push
je
ret
aam
pop
icebp
sub
neg
(bad)
in
cwde
test
jl
pop
mov
fbld
sub
(bad)
sahf
lea
xor
scas
jo
cmc
shr
sub
push
mov
rcr
pusha
jns
add
fnsave
jmp
enter
mov
ja
outs
mov
add
sub
mov
or
clc
add
pusha
in
stos
out
cmps
pop
sub
ja
and
pop
ja
ss
mov
into
call
aaa
jns
rcr
cmc
(bad)
data16
sub
or
cmp
ja
jge
pop
xor
cmps
adc
jl
jnp
dec
aas
add
ja
push
shl
(bad)
xchg
xchg
mov
fdivr
pop
xchg
inc
ins
mov
mov
mov
ret
mov
or
dec
mov
add
mov
cli
xor
test
sbb
faddp
retf
sub
ror
adc
pop
imul
retf
jp
xchg
pop
and
adc
rol
xchg
outs
xchg
adc
xor
xchg
enter
push
dec
sub
xchg
es
frstor
sub
or
jmp
fs
sub
movs
jle
aas
mov
outs
add
test
or
jmp
and
pop
fwait
repnz
into
xlat
add
xor
stos
mov
push
xchg
mov
cwde
movs
addr16
dec
int
gs
leave
fwait
jb
jmp
mov
cmp
test
test
aas
mov
rol
fiadd
arpl
imul
int
fnstenv
loop
pop
xchg
sbb
mov
mov
xchg
xchg
imul
dec
mov
cmp
das
scas
movhps
mov
sub
rcr
sbb
mov
out
mov
xor
daa
xchg
xor
sbb
lea
mov
shl
in
(bad)
xor
inc
mov
adc
pop
mov
fwait
addr16
sbb
adc
dec
daa
nop
lock
pop
shl
mov
pusha
fcomp
cmp
mov
sub
push
adc
repz
add
adc
mov
jle
lds
fldcw
jg
test
ins
add
jbe
das
mov
imul
cli
jmp
inc
add
xchg
jmp
xchg
sbb
in
retf
sub
sbb
pop
js
jns
sub
loopne
jno
icebp
cmps
scas
and
push
mov
mov
aam
jecxz
jl
jp
in
and
daa
adc
or
lahf
dec
test
mov
outs
icebp
mov
add
or
test
mov
fs
(bad)
jne
sub
jmp
jno
popa
mov
scas
addr16
dec
inc
arpl
dec
loop
lds
call
out
and
push
in
push
mov
iret
jmp
push
cdq
mov
xor
icebp
fwait
imul
jmp
std
cmc
add
xchg
lea
hlt
mov
imul
jne
jp
je
ret
iret
in
dec
push
jmp
sti
lahf
les
test
dec
out
mov
(bad)
out
and
cmp
pop
ret
lods
rcl
xlat
xlat
cmp
sub
mov
cmp
shr
cmps
je
call
ror
leave
xchg
jns
jns
ret
pop
xor
ins
or
ret
pop
xchg
sahf
add
inc
xchg
push
xor
mov
gs
sbb
sub
inc
mov
popa
ja
dec
xchg
shr
mov
push
sbb
leave
aad
jp
mov
push
bound
or
mov
pop
or
ja
fadd
jg
jns
not
stos
test
les
sbb
imul
push
push
jecxz
fs
mov
pop
mov
fisub
call
inc
mov
pop
mov
dec
and
jbe
call
push
test
out
ror
adc
es
shl
mov
cdq
gs
cld
mov
cs
pop
add
ds
scas
ins
pop
imul
(bad)
retf
jmp
or
pop
and
cmps
push
xor
and
retf
fs
rol
mov
arpl
dec
sbb
dec
push
adc
push
xchg
add
inc
imul
pop
leave
sub
pop
shr
in
pop
cmp
or
ins
adc
js
and
cwde
aam
test
loopne
pop
adc
push
rcl
push
fsubr
mov
pop
mov
xlat
imul
and
jbe
(bad)
and
xor
adc
or
cdq
out
or
adc
sub
loopne
call
fbld
mov
sub
ja
xor
movs
dec
arpl
mov
inc
stos
and
bound
ret
dec
lahf
dec
mov
inc
pop
adc
sub
es
adc
rol
jg
dec
mov
out
push
sbb
inc
popf
mov
inc
add
sar
jl
popf
imul
sub
inc
in
lock
push
cmp
out
inc
out
add
jb
out
xor
push
sar
push
sbb
ins
sbb
mov
mov
xchg
mov
mov
das
call
pop
mov
outs
mov
xor
adc
sbb
mov
add
add
add
sub
movs
push
ja
add
xchg
lahf
pusha
das
in
pop
retf
mov
popa
add
sub
nop
sbb
fstp
and
lods
push
inc
pop
jb
sub
call
mov
outs
xchg
popa
leave
pushw
rcr
shl
mov
adc
fld
sbb
and
xor
int
jl
lods
push
bound
out
mov
mov
push
cmp
mov
retf
mov
adc
fidivr
jae
inc
sub
into
cmp
enter
test
mov
and
in
or
stc
cld
fcomp
lock
leave
sbb
cwde
xchg
mov
in
xlat
mov
mul
inc
mov
jle
xchg
push
jmp
mov
jg
ins
lahf
cmp
mov
mov
loop
dec
hlt
lock
(bad)
repz
pushf
dec
mov
mov
push
adc
sub
aam
scas
cmp
cmp
leave
dec
retf
or
inc
mov
push
xchg
inc
mov
ins
inc
mov
ins
std
sbb
pop
lods
les
xor
jl
nop
push
into
xchg
adc
xor
loope
test
retf
mov
shl
jae
mov
push
out
arpl
add
mov
out
or
dec
shl
stos
fs
movs
dec
cmp
sbb
stos
sbb
gs
out
adc
xchg
fisubr
jb
out
test
out
xor
pop
fmul
push
jmp
shl
in
int3
fsubr
(bad)
in
cmp
pop
call
xor
ins
(bad)
or
addr16
push
mov
inc
xchg
ins
inc
pop
out
in
gs
mov
jg
test
and
push
adc
xor
or
fidivr
call
dec
jae
test
popa
adc
out
outs
push
cmp
outs
adc
mov
sbb
hlt
stos
repnz
jns
(bad)
cmp
(bad)
and
pop
(bad)
push
mov
add
fnsave
pop
fcom
push
call
and
jecxz
std
sbb
xchg
add
pmuludq
mov
sbb
dec
iret
pushf
sbb
cmp
clc
data16
dec
daa
int
iret
cmp
lock
(bad)
popf
push
cmovbe
xchg
xchg
sub
sub
js
call
adc
adc
xchg
not
mov
lods
adc
and
sub
jmp
push
jns
push
aaa
je
ja
pushf
sub
mov
dec
out
repz
int3
outs
icebp
mov
push
cs
ret
sbb
sbb
dec
sbb
outs
inc
jmp
sub
push
jbe
mov
pop
iret
loopne
xor
fs
mov
inc
mov
push
xor
(bad)
(bad)
std
inc
daa
arpl
and
dec
ins
mov
adc
jbe
scas
cmp
mov
xlat
(bad)
retf
mov
or
popf
cmp
movs
jmp
xor
inc
pop
mov
and
inc
loopne
enter
aam
add
mov
(bad)
call
test
pop
pop
mov
cmps
out
mov
or
loopne
and
test
sub
push
push
mov
sub
imul
syscall
arpl
adc
xor
xchg
ja
sub
repz
and
mov
inc
jae
adc
mov
xor
or
pop
scas
mov
push
fisttp
xor
ds
mov
aas
cmps
test
into
mov
cmp
enter
fwait
leave
aaa
xor
and
mov
in
mov
cli
dec
mov
add
dec
sub
gs
dec
loopne
push
inc
push
outs
xchg
mov
adc
icebp
dec
fild
aaa
dec
xor
cmp
push
fbld
jmp
mov
push
retf
cmp
push
jecxz
das
aad
ja
jbe
sbb
push
nop
cmp
push
pushf
mov
data16
fiadd
xchg
add
fsub
sbb
jno
mov
push
and
or
xor
iret
adc
cmps
dec
pop
aad
lahf
jbe
adc
and
pop
iret
cmp
sbb
pop
lds
lahf
popf
loopne
repnz
inc
fidivr
rcl
adc
cs
not
sbb
push
sub
mov
(bad)
adc
dec
jle
(bad)
sahf
dec
leave
call
push
ja
and
pop
xchg
fsubp
and
pop
xor
add
call
cmps
dec
push
pop
mov
add
clc
call
xor
sub
outs
scas
xor
add
or
test
inc
pop
add
maskmovq
neg
mov
pusha
jg
leave
imul
not
mov
mov
sub
jne
sbb
push
push
xchg
clc
ret
fistp
cmps
daa
scas
loope
data16
pop
sub
mov
jb
test
rol
mov
cs
mov
lods
sbb
inc
sbb
call
shl
ins
adc
fmul
lahf
mov
out
push
gs
std
nop
mov
enter
neg
add
les
adc
pop
jae
sbb
sub
mov
neg
(bad)
push
dec
sub
xchg
xchg
nop
cmps
dec
push
xchg
ja
mov
out
imul
sti
mov
icebp
jb
repz
inc
pop
mov
out
shl
into
and
jno
mov
push
rcr
shl
jle
jns
mov
pushf
mov
(bad)
xor
rol
test
inc
daa
sub
in
jae
xchg
or
push
fs
mov
test
int
xor
jle
mov
adc
aam
fdivr
sub
mov
(bad)
lds
cmp
out
stc
or
test
add
rcl
jmp
jge
cmp
daa
or
repnz
add
(bad)
xchg
push
and
inc
jo
xchg
xchg
sub
push
pop
pop
adc
push
mov
pop
inc
push
dec
adc
xchg
loopne
push
dec
mov
mov
(bad)
movs
stos
pop
dec
sbb
mov
inc
hlt
aas
sub
bound
out
mov
cmps
sbb
xchg
xor
outs
test
sub
fdiv
loopne
and
inc
aaa
cld
mov
sub
imul
pop
and
loopne
data16
jb
or
push
in
mov
mov
sub
test
jge
pushf
outs
shr
std
mov
stos
cmp
hlt
test
movs
push
retf
pop
dec
pushf
je
sbb
cmps
mov
fist
or
pop
jge
inc
add
mov
or
mov
pusha
stc
xchg
cwde
arpl
xchg
pop
lock
scas
push
pop
inc
int
jle
scas
pop
sahf
pop
pop
imul
rcr
xchg
xchg
lock
and
xchg
dec
jbe
cmps
fnsave
rol
scas
test
adc
jmp
mov
ror
push
mov
or
stc
frstor
aam
mov
dec
adc
ins
push
push
push
mov
jnp
addr16
retf
xor
loopne
adc
mov
mov
jle
or
fcmovnu
sbb
rol
add
cmp
hlt
cmc
mov
push
out
aaa
pop
mov
sbb
xchg
adc
cmp
jecxz
jle
in
push
retf
sbb
rcl
lods
mov
movs
inc
or
shl
jno
ins
xor
mov
sub
jecxz
loope
sbb
leave
test
xchg
int3
into
pop
xor
cs
arpl
(bad)
dec
and
lock
cmp
jg
fsub
retf
in
scas
call
and
hlt
or
push
nop
imul
mov
xchg
sbb
jmp
or
in
adc
sub
cmp
lods
sbb
jecxz
sub
inc
(bad)
(bad)
aam
cwde
pop
inc
(bad)
sbb
or
fadd
pop
stc
imul
out
push
xchg
addr16
fidivr
cmp
mov
xchg
fsubr
fmul
fs
call
inc
jns
xor
dec
jns
or
iret
xchg
xchg
fs
jle
inc
mov
call
aaa
xor
mov
aam
sahf
lahf
xchg
mov
pop
popf
nop
int3
jg
ret
adc
mov
cmps
push
mov
cmp
sub
movs
mov
pop
cmp
ret
mov
jb
rcl
dec
ja
in
fwait
jbe
jb
mov
cmps
and
repz
cmp
sbb
and
(bad)
rol
push
mov
sub
jecxz
add
or
xor
in
push
cmps
adc
mov
xchg
xor
mov
mov
rcr
mov
sbb
jp
mov
jmp
push
fdiv
pushf
sub
jne
pop
sub
loope
fsub
push
inc
(bad)
lea
sbb
lods
repz
call
inc
inc
daa
jge
push
aad
pop
xchg
lods
ds
xor
aad
sub
aaa
cwde
pop
cmc
push
inc
das
mov
inc
icebp
xlat
inc
sahf
jmp
fidiv
stos
sbb
cmc
inc
xabort
data16
in
int3
les
enter
inc
or
or
addr16
lahf
sub
out
(bad)
cmps
jo
jmp
scas
jo
push
inc
in
cmp
popa
scas
adc
fadd
push
jecxz
mov
mov
pop
xchg
inc
xchg
adc
in
(bad)
push
mov
cmp
inc
adc
inc
leave
mov
call
pop
mul
int
dec
jmp
pop
mov
aas
out
inc
fsubr
xor
fisub
or
xor
and
ins
imul
loop
add
jl
scas
xchg
and
jae
sub
daa
cmc
mov
cmp
arpl
push
je
and
xchg
cs
fsubr
xchg
sub
outs
cmp
adc
pop
sub
cmp
push
jg
adc
jo
(bad)
les
xlat
or
pushf
cmp
or
xor
loop
adc
push
mov
(bad)
outs
dec
arpl
popa
pop
paddsb
leave
and
das
push
cmp
inc
dec
gs
jne
into
sbb
ror
ja
mov
test
fldenv
sbb
pop
xchg
push
dec
mov
and
xchg
in
ret
mov
xlat
cmp
neg
jnp
adc
es
jl
push
jmp
aad
adc
adc
xor
jp
lock
xchg
sti
cmp
adc
cmp
retf
sbb
retf
and
sub
inc
test
push
jae
sub
inc
adc
push
push
addr16
loopne
cdq
fstp
ror
repz
cdq
in
arpl
sub
fnstenv
loope
jnp
ret
or
imul
jb
mov
mov
adc
adc
in
pushf
ja
pop
movs
push
mov
stc
clc
cwde
js
hlt
(bad)
in
or
add
adc
push
aas
loop
addr16
dec
push
fadd
push
push
dec
in
aaa
enter
out
lock
adc
pop
jnp
aad
push
sahf
loope
pop
mov
test
aam
arpl
fwait
leave
nop
add
xor
sbb
aam
lock
mov
cmc
stc
out
ror
loope
sub
retf
ret
test
(bad)
shl
sbb
or
mov
sahf
test
push
push
(bad)
aam
mov
idiv
ins
retf
aad
les
jne
repz
adc
(bad)
popf
and
push
hlt
inc
add
stc
popf
mov
pop
fistp
mov
cs
mov
add
pop
test
in
pop
sbb
fld
test
jp
pop
mov
lock
sub
sbb
jbe
sahf
jmp
in
mov
xchg
outs
out
push
inc
pop
xchg
lods
adc
adc
mov
pop
jns
es
out
cmps
arpl
xor
mov
xchg
inc
dec
dec
in
lea
out
jg
pop
push
and
mov
cmc
scas
or
pop
stc
inc
cli
xchg
lods
cli
push
cmps
push
mov
iret
adc
push
cld
add
test
dec
movs
xchg
push
and
and
adc
sahf
inc
div
popf
fsubr
inc
es
dec
or
pop
mov
or
xor
cdq
sbb
mov
fs
cmp
imul
pop
fistp
xor
lods
adc
shr
js
xor
mov
(bad)
sar
jmp
push
out
mov
xor
mov
(bad)
les
sahf
adc
sbb
cmp
mov
push
popa
xor
je
inc
cmc
movs
leave
(bad)
leave
inc
outs
cmp
aaa
cmps
add
mov
xchg
or
sub
jecxz
inc
adc
aad
in
push
fs
fisubr
scas
sub
cmp
dec
scas
xchg
jecxz
(bad)
mov
(bad)
mov
ret
popa
add
dec
cmp
addr16
ins
xchg
inc
lock
push
pop
js
test
mov
mov
nop
add
nop
jl
inc
and
sub
xor
mov
js
inc
sbb
or
call
mov
jmp
cmp
jg
sbb
pop
shr
jne
jge
mov
jp
and
pushf
push
test
test
jnp
xor
and
add
and
stos
jmp
je
sahf
scas
js
pop
jg
int3
test
ja
adc
mov
std
xchg
(bad)
mov
mov
xor
sahf
cmp
cmc
sbb
test
imul
(bad)
fcom
mov
jbe
pop
or
xchg
adc
xchg
aad
dec
mov
sbb
fwait
adc
dec
dec
aad
xchg
and
movs
dec
xor
mov
scas
outs
pandn
push
cdq
cwde
add
add
loope
outs
ficom
outs
xor
pop
fnsave
add
xlat
dec
jp
icebp
sub
idiv
fdivr
ret
mov
or
pop
jecxz
arpl
cmp
retf
mov
and
ret
cmps
cmps
adc
fistp
mov
mov
cmps
ret
or
mov
sbb
inc
jno
popa
retf
lahf
dec
imul
adc
push
sbb
cwde
jg
push
xchg
outs
push
ret
shl
enter
dec
mov
pop
pop
fcomi
je
sub
(bad)
in
dec
repz
push
jmp
aas
pandn
adc
inc
mov
mov
inc
leave
jo
cli
fistp
jle
jae
push
pop
add
dec
adc
lock
retf
lea
inc
mov
stos
sbb
add
push
(bad)
and
xor
sbb
or
fsubp
addr16
ret
shl
pop
in
ror
xor
jae
test
push
fwait
call
fisttp
in
mov
test
arpl
aas
out
mov
dec
push
mov
or
lods
jnp
mov
pminub
cmp
add
outs
cli
mov
inc
xor
mov
mov
out
mov
mov
pop
call
sub
mov
lock
loope
mov
inc
xor
test
add
daa
and
push
pop
arpl
mov
mov
push
pop
mov
cmp
ret
pop
out
test
rcl
js
outs
idiv
push
pop
cmc
cmp
jb
std
push
mov
repnz
or
or
inc
dec
inc
int
in
and
push
jl
pop
(bad)
xor
pop
inc
jnp
stc
xchg
mov
ja
push
mov
in
xor
jae
jo
lahf
in
out
adc
fs
out
dec
adc
add
mov
lahf
lds
aas
push
shl
push
stos
lods
push
arpl
cld
test
jnp
add
inc
aaa
movs
movs
push
push
push
xchg
inc
push
scas
jge
lock
adc
dec
and
enter
dec
inc
fiadd
popf
pushf
cmp
fst
jmp
mov
cmp
jl
push
inc
(bad)
and
pop
dec
inc
cmp
cwde
popf
cs
sub
lea
sbb
test
shl
addr16
neg
(bad)
pop
scas
stos
loopne
cmp
add
stc
mov
sub
sub
pop
sub
(bad)
je
cmp
bound
mov
test
mov
jno
sub
cmp
das
popa
jmp
mov
inc
adc
mov
jmp
cmp
push
fldcw
inc
sub
into
ins
sbb
ins
idiv
daa
inc
xor
fldenv
xchg
cmp
ret
mov
adc
fild
scas
in
icebp
pop
in
pop
test
cmps
sub
add
adc
repz
mov
cdq
push
xor
mov
das
std
and
dec
push
push
das
bound
cmp
pop
and
xchg
arpl
mov
fbstp
xor
xchg
fmul
mov
gs
pop
adc
loopne
jne
into
lahf
nop
dec
xchg
ss
inc
das
ja
adc
xor
imul
(bad)
push
cmp
jbe
scas
ficomp
repnz
jl
sti
adc
data16
call
(bad)
xchg
pop
into
dec
or
cld
ret
mov
hlt
stos
aam
push
or
push
mov
outs
lock
push
ja
mov
sbb
data16
sbb
int3
jmp
mov
in
out
movs
jns
add
xor
jbe
into
(bad)
cmp
pop
or
push
(bad)
cdq
adc
pop
in
out
pop
ds
iret
inc
cmps
pop
std
leave
sub
ins
aas
adc
dec
es
(bad)
sti
cld
jne
xchg
xchg
and
outs
push
pop
outs
adc
dec
lea
div
mov
gs
outs
inc
pusha
retf
retf
cli
xor
push
pushf
mov
mov
fcmovb
or
(bad)
fist
mov
xchg
or
sahf
popf
cmp
or
pop
shl
add
inc
mov
aaa
or
movs
add
lock
ror
dec
loopne
das
jo
adc
xchg
or
inc
mov
inc
add
jmp
xchg
push
div
jl
mov
nop
sbb
pusha
sub
mov
bswap
mov
pop
dec
ds
mul
adc
or
push
or
cmp
into
xlat
aam
cs
fdiv
shl
fucomi
xor
out
push
imul
push
and
sbb
push
inc
inc
xlat
(bad)
mov
fwait
cmp
cmp
inc
pop
push
and
cmp
cld
repz
cmp
push
pop
push
jno
push
lea
jb
pop
hlt
fwait
jb
mov
test
hlt
repz
inc
pop
js
sub
js
aaa
adc
cmp
iret
pop
inc
mov
dec
out
imul
dec
(bad)
jmp
pop
aas
mov
pop
jp
in
xor
or
push
retf
lea
mov
popf
mov
aaa
in
lahf
xor
fcomp
inc
mov
(bad)
cmp
mov
xchg
mov
test
in
sub
mov
push
into
data16
frstor
test
and
hlt
push
imul
sub
xchg
movs
mov
fs
stos
jnp
or
adc
test
bound
retf
iret
jns
aaa
jnp
cmps
imul
enter
lock
dec
ret
xor
sti
cld
rcl
push
mov
lods
inc
cwde
xor
mov
sub
mov
lea
stc
add
pop
cmp
inc
(bad)
leave
popf
ins
and
xor
ss
fnstsw
iret
jg
or
or
add
(bad)
mov
mov
rcl
dec
sub
sub
das
cli
out
adc
push
adc
gs
jo
stc
sbb
aam
sub
pushf
lods
iret
push
ret
mov
(bad)
xor
pusha
mov
sub
jle
cmp
add
sub
popf
xor
mov
(bad)
cwde
adc
cld
lock
jbe
jno
add
lods
addr16
(bad)
les
outs
ficom
test
pop
pop
mov
rcr
mov
or
pushf
push
(bad)
lds
repz
popf
add
dec
sub
adc
out
or
retf
cmp
cmc
stos
cdq
sbb
stc
stos
and
pop
sub
test
(bad)
fistp
sub
(bad)
xor
jp
add
in
fwait
test
gs
sub
or
push
push
data16
aam
cmps
xchg
sbb
push
dec
lahf
pop
and
push
lea
cli
data16
and
pushf
or
out
jle
jno
repz
jmp
xchg
and
imul
cmp
clc
loop
xchg
or
fild
cmp
pop
xlat
lods
mov
push
mov
mov
pop
fs
mov
mov
mov
and
push
xor
lea
sub
shl
pop
nop
cmps
out
jl
shl
adc
xor
xor
aad
mov
sub
sahf
int
dec
sbb
cmps
add
jle
fmul
and
sub
pop
or
or
xor
les
js
mov
pop
pop
shl
sub
aaa
mov
in
sub
lds
cmps
inc
loope
stc
loop
retf
movs
lods
dec
movs
jmp
sub
xchg
in
lahf
xchg
outs
retf
add
nop
dec
bound
lds
jmp
inc
test
or
inc
cmp
rol
inc
fsub
sbb
lea
adc
dec
lods
jns
push
fidivr
jp
cmp
aaa
test
imul
sbb
xchg
iret
cmp
(bad)
out
stos
fbld
xlat
push
add
fdiv
inc
sti
loope
xor
pop
sbb
adc
mov
sub
pop
int
test
sahf
out
inc
mov
xchg
mov
push
add
stos
das
and
adc
clc
xor
imul
lods
xchg
fist
jb
xor
and
mov
mov
cmps
dec
neg
jge
and
ins
nop
xor
gs
shr
ss
shl
fadd
pop
inc
cs
ror
jp
cs
repnz
xchg
and
pop
outs
inc
sbb
scas
and
xchg
pop
lds
mov
(bad)
int
xor
movs
mov
sub
scas
movs
sub
popf
cmps
int
ret
add
mov
add
and
jmp
push
ret
push
fs
ss
mov
icebp
test
(bad)
xchg
mov
ss
jp
mov
(bad)
xor
push
cmp
push
cdq
pop
sar
out
bound
pop
dec
test
and
xchg
mov
adc
adc
repz
mov
mov
and
push
fcomp
stos
pop
test
sub
imul
push
test
aas
out
nop
xchg
fadd
aas
pusha
jecxz
lods
pushf
jbe
ret
imul
mov
xor
je
in
pop
fsubrp
push
bound
cmc
mov
imul
mov
mov
pop
into
inc
(bad)
and
inc
in
cmp
xchg
loop
lods
mov
adc
xchg
mov
shl
mov
sar
or
int
and
inc
xor
sub
(bad)
mov
and
push
cs
cmp
je
stos
sahf
mov
arpl
dec
jge
cwde
(bad)
add
or
pop
jecxz
pop
pop
push
out
pop
sub
in
fmul
push
cmp
cmp
mov
xchg
jns
push
mov
push
in
dec
clc
jne
rep
inc
in
pop
push
stc
stos
jmp
outs
push
pop
loop
cmp
jmp
popf
push
sub
pop
xchg
push
idiv
mov
mov
add
push
rcl
test
cmc
xor
hlt
sbb
xor
jne
adc
mov
pusha
sub
cmp
push
jmp
outs
cmps
ret
fisttp
stos
and
mov
dec
shl
repz
mov
call
fisub
and
xchg
daa
popa
rcr
dec
xor
pusha
adc
enter
fcom
fisttp
sbb
repnz
jb
cmp
add
scas
mov
iret
adc
es
rol
add
out
(bad)
and
test
lods
dec
popf
sar
push
dec
cld
lock
cdq
inc
shl
mov
pop
sahf
mov
jb
aam
inc
sub
cmp
fist
(bad)
mov
pop
mov
iret
outs
cld
pop
xor
push
cmp
mov
pop
push
inc
test
test
mov
sbb
cmp
lock
jmp
test
loope
nop
fwait
cmp
xor
jmp
out
mov
adc
inc
inc
jecxz
call
retf
pop
ss
ja
add
xchg
push
test
sbb
sub
push
dec
add
cmps
rol
mov
cmp
popf
std
div
push
clc
adc
sbb
ins
pushf
adc
and
adc
sahf
fistp
mov
pop
add
cmp
cli
sbb
inc
mov
mov
pop
and
idiv
pop
pop
mov
push
cs
ficomp
inc
mov
push
mov
push
test
jp
ret
or
(bad)
jp
stos
out
mov
test
jnp
mov
adc
lds
xor
add
fs
push
push
mov
adc
sbb
cmp
mov
into
ret
std
inc
neg
leave
sub
sbb
jnp
sub
adc
out
fwait
popf
push
loopne
and
jg
in
xor
cli
mov
sub
aas
mov
xchg
dec
ror
cmp
dec
add
popa
sbb
in
mov
(bad)
xchg
sahf
xchg
jns
jne
jnp
mov
push
(bad)
(bad)
mov
(bad)
cmps
push
adc
(bad)
jp
rol
dec
xchg
jo
and
pop
xor
call
cmp
arpl
xchg
inc
gs
cdq
dec
xchg
jmp
pop
add
push
pop
repz
adc
js
ficomp
icebp
inc
daa
je
idiv
inc
adc
call
fmul
jb
cdq
xor
add
test
mov
lds
mov
xor
xor
xor
jbe
sbb
add
aaa
int3
out
ror
ds
into
jb
cli
test
lds
js
in
xor
jle
repz
cmp
pop
test
push
lods
cdq
stos
push
sub
adc
xor
lds
call
fdiv
or
(bad)
shl
mov
daa
fcmovnbe
or
neg
and
or
xor
jmp
sbb
sub
jb
mov
pop
jle
(bad)
sub
les
in
movs
dec
mov
inc
movs
sbb
shl
mov
mov
or
pop
jle
pop
sbb
in
enter
pop
xlat
and
sub
test
fwait
xchg
xchg
xor
xchg
mov
outs
jns
jle
mov
inc
fild
inc
call
mov
add
mov
aam
inc
mov
inc
shl
xor
mov
sbb
into
xchg
xchg
mov
(bad)
je
fsubr
div
repnz
sub
jg
push
sub
or
xor
sbb
les
movs
fs
dec
lea
push
jmp
pop
in
push
mov
aas
push
ficomp
dec
and
neg
or
pop
ins
sar
ret
out
retf
daa
ret
stos
pop
enter
and
sub
dec
and
(bad)
shl
add
pop
scas
arpl
outs
jno
adc
xchg
mov
and
push
jae
test
dec
lea
cwde
pop
and
xchg
loope
bound
xor
jle
ja
cld
or
das
pusha
add
sub
or
(bad)
jmp
ds
inc
stc
jecxz
add
mov
sub
in
sbb
jmp
pop
inc
fmulp
sbb
test
add
pop
inc
dec
jmp
(bad)
fadd
mov
scas
in
cmp
div
int
xlat
pushf
mov
or
(bad)
out
sub
sub
clc
stc
fst
fcom
mov
jmp
inc
outs
sar
adc
add
mov
in
xor
(bad)
pavgw
imul
test
dec
adc
jne
fimul
inc
stos
jmp
sti
mov
jns
dec
shr
add
sar
out
cs
push
or
jo
(bad)
jno
inc
dec
js
in
clc
add
ret
ficomp
scas
int
rol
xor
sub
jl
lahf
(bad)
stc
aad
nop
stos
jge
lea
out
xchg
jl
out
ror
cs
fisubr
xchg
int
or
int3
jmp
inc
xchg
cmp
and
sub
scas
inc
adc
push
int
sub
popf
lock
out
cs
cmp
cmps
inc
push
popa
xchg
gs
pop
jo
mov
test
ins
push
stc
mov
outs
sbb
mov
int3
adc
mov
lods
enter
push
mov
or
inc
inc
mov
sbb
cmp
(bad)
fstp
adc
fidiv
adc
add
fcomp
dec
or
pop
mov
xchg
mov
es
sub
push
xchg
test
mov
imul
jecxz
add
sti
sahf
cmp
mov
test
nop
lds
inc
mov
push
mov
cld
mov
sbb
inc
retf
lock
rol
or
cmp
popf
inc
jns
jp
rol
dec
and
adc
mov
pop
jecxz
imul
dec
ret
in
fnsave
add
aaa
ss
xchg
repnz
sahf
adc
es
xchg
jbe
and
pop
ror
icebp
xlat
push
iret
pushf
std
scas
pusha
mov
push
popa
lahf
xor
jle
adc
in
js
out
outs
jge
lods
inc
movs
imul
cmc
sbb
xor
mov
outs
pop
mov
push
aad
cmp
jmp
ror
(bad)
fidivr
pop
jmp
cmp
lods
mov
add
jecxz
xor
pop
fidivr
mov
jle
push
and
jmp
and
jns
pop
fcomp
xchg
jge
jle
hlt
ja
and
stos
adc
mov
sub
fsub
pop
cmp
add
sub
popa
dec
inc
lock
cs
shl
mov
mov
sbb
sar
jb
nop
in
push
out
xchg
movs
jecxz
fstp
adc
pop
mov
xor
cmps
jmp
push
fdivr
outs
loopne
push
stos
(bad)
sub
nop
add
cdq
fisttp
enter
aas
daa
cmps
out
add
and
cmp
adc
mov
add
jle
shr
fdiv
outs
je
test
add
sbb
mov
push
lods
sub
sbb
adc
das
cmp
retf
or
shr
sub
int3
inc
arpl
leave
push
dec
popa
pop
pop
das
cmp
in
mov
or
aam
jae
fimul
fcomp
mov
mov
mov
push
ret
xor
sbb
add
cmps
inc
stc
lahf
mov
ins
call
adc
jbe
dec
nop
mov
pop
fcomp
movs
in
ret
jae
adc
int3
ror
lods
add
sub
dec
inc
sbb
add
ins
fnstenv
push
add
dec
or
popa
mov
(bad)
pop
lds
xor
repnz
inc
push
mov
mov
add
dec
push
inc
leave
cmp
sub
xor
sbb
add
dec
jg
lea
idiv
mov
jmp
icebp
cmp
mov
mov
xchg
movs
inc
mov
dec
jg
adc
push
mov
ja
jmp
dec
jae
das
loope
(bad)
test
pop
lock
sahf
or
mov
sbb
jne
aad
pop
push
enter
pop
neg
retf
xor
das
(bad)
lahf
adc
push
or
xlat
or
mov
test
fs
mov
sar
es
mov
pop
test
sbb
test
xor
dec
and
jg
add
outs
adc
fstp
fcomp
ret
ret
cs
jno
test
inc
jecxz
cmp
inc
mov
fild
rcl
call
mul
aaa
pop
shl
shl
bound
add
sub
or
popf
dec
or
push
sar
mov
cmp
cmps
dec
adc
std
pop
sbb
mov
jmp
mov
xchg
iret
mov
pusha
int
mov
cmp
cmp
mov
arpl
xchg
and
sub
add
sub
(bad)
mov
pop
mov
loopne
(bad)
pop
sub
test
fbld
fnsave
xor
(bad)
and
mov
push
ja
push
sub
iret
lds
sub
jae
pop
sbb
fucomi
fld
clc
dec
loop
mov
hlt
in
imul
push
mov
cmp
repz
cmps
or
inc
push
add
data16
loopne
sahf
test
dec
(bad)
pop
push
or
sub
pop
mov
into
pop
outs
inc
xlat
push
inc
mov
hlt
out
push
jle
std
push
arpl
mov
ja
(bad)
in
xchg
mov
mov
xlat
or
add
inc
push
movaps
loope
outs
lods
gs
sbb
xchg
rol
lods
aaa
aad
lock
push
push
sub
call
add
lahf
shl
imul
xchg
mov
rcr
sbb
add
jge
test
add
dec
xchg
push
mov
pop
or
lahf
fidivr
mov
mov
dec
xchg
call
and
int3
add
pop
pop
mov
add
sti
sar
xchg
and
push
sub
dec
mov
fnsave
xchg
dec
sbb
xor
cmp
retf
sbb
adc
inc
and
jno
ror
scas
mov
cmp
pushfw
mov
add
and
jge
repnz
or
pop
(bad)
outs
ins
and
dec
add
int3
and
push
mov
idiv
adc
or
pushf
inc
xchg
mov
sahf
gs
outs
cli
xchg
cmp
fstp
sub
cmp
in
xor
push
aam
xchg
adc
mov
loop
mov
js
les
cmp
pop
mov
pop
or
ins
test
movs
(bad)
mov
mov
arpl
cmc
jns
lahf
test
int3
sbb
xor
out
dec
push
icebp
icebp
ret
repnz
retf
pop
jbe
loope
push
or
inc
out
xchg
jmp
imul
repz
xor
sti
pop
(bad)
in
mov
mov
in
xor
jmp
mov
es
pop
xchg
inc
mov
mov
stc
jg
jo
jg
sbb
push
sub
mov
xchg
pop
and
mov
fidiv
ins
test
imul
jno
xor
mov
sub
test
mov
sub
pop
dec
xor
ja
and
rcl
scas
pushf
cmp
push
inc
ss
fist
inc
ret
cmc
mov
inc
in
pop
push
shl
fcmovnb
ret
mov
push
enter
popf
or
sahf
nop
xor
mov
scas
retf
fxch
pop
xchg
inc
test
cmps
add
in
das
pop
jnp
mov
xchg
add
fld
lods
xchg
pop
sub
fwait
mov
repnz
cmp
int
or
dec
pop
pop
stc
das
xor
and
adc
cli
inc
sub
or
jle
push
stos
test
bound
and
lea
lods
mov
(bad)
fadd
mov
in
mov
adc
in
adc
cmp
icebp
or
cmp
xchg
outs
test
adc
outs
inc
add
enter
xor
arpl
adc
(bad)
out
ins
pop
xor
out
in
data16
mov
or
imul
arpl
clc
fstp
pop
mov
lods
xchg
jl
and
shl
dec
mov
mov
ret
ret
shl
cli
test
and
out
loope
mov
jge
xchg
callw
dec
mov
jmp
jnp
add
ss
icebp
cmp
cwde
test
(bad)
rcr
adc
sbb
push
not
je
push
or
mov
in
xlat
xor
dec
jge
sub
cvttps2pi
pop
in
jbe
popa
jno
mov
push
dec
jno
xchg
sub
gs
sub
jb
aam
pop
mov
mov
rol
cmp
push
xchg
repz
xor
cdq
add
mov
and
jo
pop
mov
pop
aas
pop
cmp
adc
add
int3
and
out
dec
fistp
lea
jo
or
jno
inc
fstp
stos
or
fwait
clc
xchg
pop
inc
pop
out
icebp
idiv
jo
popf
push
cs
outs
loope
into
enter
cmp
add
int3
mov
mov
test
mov
std
dec
(bad)
jmp
mov
jns
xchg
inc
pop
icebp
out
mov
das
mov
sub
push
out
nop
cs
pop
fiadd
fiadd
call
xor
xor
sbb
and
dec
scas
lock
mov
xchg
ins
sub
test
sar
stos
not
pushf
cmp
lahf
hlt
arpl
fcomp
std
in
repnz
leave
aaa
cdq
shr
dec
push
test
pop
mov
dec
mov
dec
xchg
mov
(bad)
fidivr
xchg
cmps
ret
shl
repz
leave
cmp
lock
cdq
sahf
inc
pop
aaa
mov
mov
sub
xchg
pop
ds
or
mov
inc
push
sar
cmp
(bad)
sti
imul
mov
rcl
test
lock
push
adc
(bad)
jmp
and
lds
xlat
push
in
test
rcl
test
int
test
leave
sar
ins
and
inc
or
lods
dec
out
test
out
jns
sahf
inc
and
or
jl
pop
sub
stos
ds
mov
aas
or
cmps
and
fcmovne
imul
xor
imul
push
retf
dec
scas
dec
stos
sti
mov
das
xchg
shl
pop
mov
out
jge
mov
lock
ret
lahf
mov
push
iret
mov
push
ins
jmp
imul
js
mov
mov
or
xor
scas
fsubr
pop
add
jge
push
mov
repnz
and
cmps
mov
inc
jle
ror
jmp
mov
fnstsw
stos
xor
dec
cmp
loopne
dec
push
rcl
adc
mov
fsubr
adc
and
cmp
pop
push
fild
(bad)
out
int
xlat
or
pusha
push
faddp
pop
add
pop
xchg
mov
repz
int3
mov
adc
sub
fdivr
loopne
(bad)
sbb
mov
call
mov
cld
inc
xchg
ds
cmp
xor
es
jecxz
(bad)
iret
test
xor
aaa
sub
and
imul
inc
bnd
and
imul
das
ins
call
(bad)
stos
and
jae
mov
push
inc
test
mov
(bad)
ins
stc
adc
cmp
cmp
jg
dec
or
xchg
mov
int
push
lahf
nop
(bad)
clc
shl
cmps
repz
shl
jns
add
loop
inc
loope
adc
add
adc
xchg
ins
je
dec
dec
mov
inc
rol
fmul
int3
xchg
nop
cmps
dec
add
es
dec
mov
in
mov
dec
inc
ja
add
mov
xor
pushf
pop
sar
sbb
add
xor
(bad)
jge
pusha
xlat
out
arpl
sbb
les
in
(bad)
test
loope
add
loope
xchg
movs
cs
retf
cld
and
in
and
dec
ret
push
repnz
push
jmp
leave
fidiv
mov
dec
(bad)
cmp
cmps
aas
and
(bad)
sub
pop
es
into
aam
int
not
push
xchg
sub
ds
add
lods
ja
sbb
xchg
cmps
add
cmps
call
in
pop
movs
call
mov
inc
rcr
pop
rcr
jmp
pop
xchg
mov
in
js
mov
pop
add
fild
fld
xchg
mul
mov
add
in
leave
inc
sti
arpl
cdq
dec
rol
in
inc
nop
ficom
test
inc
cmp
je
jo
sub
mov
or
adc
bound
mov
gs
(bad)
sub
xor
sub
adc
addr16
outs
fbld
mov
ret
fld
xor
rol
push
pop
mov
enter
icebp
mov
js
push
add
pop
cmp
mov
adc
clc
push
test
rcr
or
pop
retf
adc
(bad)
mov
sub
push
or
std
inc
cmp
dec
adc
mov
sbb
int
int
jg
mov
inc
fwait
mov
sub
sbb
pop
cmc
xchg
icebp
sbb
push
retf
mov
bound
cmp
fwait
pusha
mov
sub
cmp
pop
gs
xor
add
call
repz
jbe
xchg
jae
js
and
mov
daa
sub
or
fstp
fst
in
sub
and
leave
xor
(bad)
mov
stos
mov
add
mov
jns
push
cmp
mov
and
shl
int3
je
test
iret
(bad)
mov
and
mov
mov
or
fwait
(bad)
jnp
imul
cwde
lods
sbb
fs
jbe
mov
xor
xchg
jmp
(bad)
dec
imul
jnp
into
pushf
inc
lds
in
lods
test
frstor
sub
fwait
ins
call
cmc
mov
mov
jno
jecxz
and
jmp
pop
je
cmp
pop
ja
cmp
jns
mov
xor
or
(bad)
retf
rcr
bound
jbe
loope
ja
jmp
imul
xlat
sbb
cmp
cmp
jo
pop
int
adc
jnp
stos
push
xor
adc
imul
mov
(bad)
push
imul
cmc
xchg
or
or
sub
aaa
into
dec
leave
push
clc
inc
rol
inc
pusha
shl
or
inc
sar
imul
gs
dec
xchg
movs
adc
dec
dec
jnp
test
xor
in
test
aaa
adc
lea
lods
pop
clc
into
test
fmul
cld
and
scas
jmp
and
cmps
cmps
inc
rol
shl
sbb
mov
retf
push
cmp
xchg
mov
sbb
out
sub
add
loop
pop
mov
jae
lock
adc
js
mov
push
inc
(bad)
inc
add
pusha
mov
sub
add
sub
inc
push
sbb
test
and
mov
inc
mov
imul
mov
addr16
mov
ficomp
aam
pusha
jg
add
aas
push
jge
xchg
xor
fldenv
jmp
push
ror
(bad)
xor
sub
sahf
and
out
mov
add
and
xor
mov
xor
fldenv
or
pusha
sbb
mov
push
in
in
push
lds
pop
xor
mov
lea
fwait
jae
xor
pop
dec
stos
pop
mov
add
pop
mov
dec
pop
pextrw
mov
cli
repnz
sar
call
mov
mov
cmp
mov
pop
out
sub
push
or
mov
add
push
aam
dec
out
lods
repnz
ins
fsubr
mov
sub
into
add
pop
mov
(bad)
jbe
sub
repz
pop
ins
xor
pop
dec
ficomp
or
lods
dec
(bad)
jae
jecxz
jne
jl
dec
les
adc
shl
dec
dec
repnz
sbb
js
sub
mov
aam
jmp
cmp
in
mov
outs
(bad)
rcl
pop
outs
mov
cmp
or
jbe
mov
xchg
gs
sub
addr16
sbb
hlt
fstp
cmp
pop
iret
dec
cmp
bound
cld
in
rcr
pusha
xchg
adc
in
mov
dec
fdivrp
jae
lds
pop
outs
push
xchg
in
mov
adc
addr16
cmps
fsubr
repz
cld
nop
xor
adc
cmp
stos
in
mov
xchg
fwait
ds
call
sbb
mov
out
and
fucom
pop
push
and
je
rcr
ss
xor
add
xchg
push
push
aad
or
data16
mov
gs
sub
sbb
repnz
push
mov
add
int3
xchg
retf
push
jp
dec
sbb
pop
mov
cmp
and
inc
jbe
movs
repz
xor
xchg
and
dec
mov
add
nop
fstp
ds
cmp
jle
push
push
(bad)
or
fadd
xlat
ds
xor
test
mov
xor
jmp
rcl
dec
addr16
enter
scas
mov
inc
lock
mov
adc
sub
cmp
xchg
push
cli
test
mov
jns
lods
lahf
mov
add
jg
jle
(bad)
aas
es
add
sahf
test
lods
mul
push
pop
jbe
stos
jne
pop
xor
loope
adc
xor
dec
sub
ret
mov
adc
loopne
and
inc
xchg
xchg
es
or
mov
xor
dec
cwde
and
push
mov
test
in
jge
cmp
test
js
jp
frstor
pop
xchg
jecxz
push
add
mov
push
mov
or
sti
(bad)
pop
in
pop
cmp
stc
ror
cs
jbe
push
jno
adc
mov
lods
fistp
imul
int
mov
jno
adc
je
fwait
xchg
repz
push
or
hlt
imul
adc
pop
mov
lods
les
scas
clc
retf
aas
cmc
mov
jno
imul
xchg
xchg
and
mov
dec
add
sub
ja
pushf
js
xchg
fcomp
sub
cld
pop
add
lock
inc
jbe
mov
inc
retf
sbb
in
call
jmp
ds
cdq
push
dec
in
inc
push
sbb
adc
movs
mov
push
mov
cmps
sbb
fcmovb
add
cs
xchg
rcl
pop
cmps
xor
jecxz
lods
xor
lds
rol
shl
xchg
xor
pop
cmps
ins
pop
cmp
jae
idiv
adc
data16
xor
bound
imul
jo
dec
dec
mov
cmp
div
lea
popf
cmp
sub
sbb
push
cmp
adc
cmc
push
ds
adc
sub
inc
shr
mov
test
repnz
jbe
mov
push
xchg
mov
outs
dec
stc
mov
imul
leave
inc
clc
lahf
sbb
das
jns
jbe
adc
and
scas
lds
sub
mov
mov
and
pop
(bad)
sbb
out
sbb
(bad)
aad
call
xchg
test
sub
mov
mov
push
mov
push
adc
mov
adc
in
sbb
test
push
jmp
mov
cli
mov
and
push
pop
icebp
dec
mov
(bad)
sub
xor
mov
stos
out
and
sahf
xchg
mov
jmp
dec
push
cmp
push
sub
or
sti
dec
loope
fild
add
pop
call
pop
ins
jge
xlat
sub
push
push
or
add
stc
jg
sbb
pop
stc
clc
jge
fisubr
push
mov
in
fdivr
pusha
or
fdiv
and
xchg
in
repnz
cmp
loop
cli
fmul
pop
pop
call
xchg
adc
addr16
mov
mov
pop
mov
mov
and
xorps
call
shl
inc
mov
das
mov
mov
sub
push
mov
xor
retf
mov
lahf
xchg
les
push
addr16
stos
dec
outs
ins
adc
adc
bound
int3
rol
fst
cmp
mov
or
pop
inc
or
push
push
or
cmp
test
out
and
adc
xor
jbe
xchg
lahf
call
mov
mov
mov
dec
aam
into
mov
bound
sbb
in
loope
(bad)
mov
sbb
mov
lock
lock
iret
out
add
ins
out
adc
in
lea
fldenv
outs
jmp
adc
pushf
ret
(bad)
pop
mov
out
retf
cmp
sbb
sbb
test
inc
fcom
retf
adc
xchg
(bad)
dec
dec
adc
sub
push
pop
(bad)
or
retf
mov
pop
std
jns
shr
pop
inc
mov
fwait
add
or
clc
xchg
out
cdq
jge
dec
adc
xchg
mov
cmps
dec
cdq
in
aad
imul
scas
shl
sub
cmp
dec
cmp
sbb
scas
shr
xor
test
lea
push
lods
dec
call
inc
mov
xlat
rol
mov
fnstenv
dec
and
ja
inc
xchg
and
push
test
add
sar
adc
loop
sub
hlt
push
mov
(bad)
cli
add
dec
jmp
inc
jae
and
ret
lods
gs
push
nop
int3
lock
jbe
das
or
ins
adc
push
bound
or
call
mov
add
pop
test
sub
or
xlat
mov
inc
sti
daa
xchg
test
dec
pop
mov
daa
stos
inc
adc
cmp
int
loope
mov
ss
jne
sbb
cmc
fsub
xor
mov
dec
push
pushf
into
in
jmp
arpl
mov
mov
and
cmps
inc
pushf
in
ds
push
push
adc
scas
aas
or
sub
adc
xor
movs
or
mov
dec
fs
xor
pop
lods
mov
or
outs
std
or
xlat
popf
mov
in
xchg
repnz
outs
ror
push
pop
adc
stc
enter
into
call
stos
fisttp
dec
cli
popf
out
and
(bad)
push
and
dec
out
or
hlt
outs
pop
enter
sbb
xor
popf
pop
or
mov
mov
sub
test
enter
cs
sub
fimul
add
cmp
leave
adc
inc
call
jg
xor
and
je
clc
stos
push
repz
push
jno
adc
dec
jmp
mov
cmp
push
ins
mov
mov
in
ja
stos
clc
xor
retf
idiv
stos
out
retf
ss
loope
mov
cmp
lds
ins
dec
daa
push
ds
add
(bad)
(bad)
jmp
add
jo
out
mov
sbb
pop
sub
sub
mov
pop
jmp
iret
mov
jbe
mov
pushf
(bad)
sub
(bad)
call
jl
cmc
push
test
in
and
push
xlat
das
jo
test
push
dec
dec
pop
lea
adc
push
jmp
mov
xchg
out
cs
pusha
fs
adc
in
dec
fcom
xor
adc
adc
out
push
inc
std
adc
dec
pop
lods
pop
loop
aas
dec
test
mov
dec
int3
repnz
fsubr
xor
mov
and
ret
xor
push
and
mov
mov
repnz
jb
aad
pop
sbb
pop
inc
imul
and
iret
jecxz
and
adc
dec
dec
aaa
adc
outs
nop
or
(bad)
and
mov
test
popf
inc
ins
and
sub
push
mov
mov
clc
mov
loope
lods
mov
mov
cmps
in
or
aam
adc
or
clc
push
int3
jge
mov
gs
rep
(bad)
xlat
outs
retf
mov
or
xchg
(bad)
in
mov
mov
js
mov
mov
push
mov
push
adc
and
repz
(bad)
pop
pop
sub
hlt
sub
(bad)
lods
lods
popa
lahf
in
in
bound
or
xor
sub
stos
daa
pop
pop
mov
in
jge
cmps
push
(bad)
shl
jae
jle
stos
pxor
xor
xor
pop
xor
mov
jns
push
js
outs
loope
pusha
fldenv
mov
xlat
cmp
popf
mov
outs
adc
(bad)
movs
pop
mov
xchg
cdq
cmp
xor
pop
inc
and
dec
fs
jae
pusha
sub
test
sahf
pop
add
test
add
out
mov
pushf
popa
push
leave
xchg
mov
and
sbb
stos
jp
ss
push
div
(bad)
out
mov
or
outs
mov
movs
xchg
and
and
int3
or
cmp
pop
cs
mov
lds
call
dec
pop
sbb
and
pop
rcl
ja
movs
or
hlt
hlt
push
rol
dec
sbb
mov
push
pop
(bad)
call
retf
bound
les
cmp
loope
loopne
in
sbb
mov
mov
(bad)
pop
inc
add
pop
mov
push
mov
mov
sti
jmp
out
xchg
ja
jmp
imul
out
sub
ja
test
xlat
int3
pop
test
xor
iret
imul
and
das
movs
jecxz
cmp
clc
aad
mov
call
popf
jl
inc
cs
out
push
sbb
pop
lea
xchg
dec
sub
or
sub
push
push
mov
cmp
pop
ret
js
bound
or
inc
mov
dec
addr16
jmp
aas
test
xchg
jne
ds
or
jg
sub
and
and
lds
in
add
xchg
fiadd
aam
push
mov
jne
mov
xor
arpl
in
sar
pop
addr16
push
inc
fldpi
jns
(bad)
push
retf
push
inc
mov
(bad)
lods
(bad)
adc
dec
in
xor
jnp
retf
inc
mov
stos
mov
repz
adc
sub
adc
ins
adc
dec
xchg
popa
in
xchg
mov
outs
jmp
ins
push
mov
cwde
push
jne
mov
mov
mov
in
sbb
sar
rol
mov
cmp
call
jb
push
xchg
shl
leave
into
jbe
gs
cmp
retf
sbb
stos
fst
mov
xor
and
push
js
fwait
movs
jmp
aad
sub
push
sub
ja
xchg
or
outs
xchg
gs
push
push
or
and
push
cmp
mov
cmp
aad
pushf
inc
dec
sub
pmaxsw
and
or
popa
test
inc
enter
bound
push
in
fs
jb
scas
sub
(bad)
test
add
mov
mov
test
ins
call
pusha
mov
jbe
aam
imul
inc
mov
loope
xchg
cdq
movs
mov
pop
dec
adc
adc
lods
push
inc
fwait
dec
int3
std
inc
ja
aas
mov
stos
mov
iret
pop
push
repnz
cli
sbb
xchg
neg
lea
ret
adc
int3
mov
stos
or
dec
cs
inc
ins
leave
fwait
sub
inc
ret
(bad)
lds
or
xchg
(bad)
mov
xor
outs
mov
pop
jp
dec
cmp
out
cdq
sub
pop
push
pushf
fcomp
int3
stos
out
xlat
(bad)
enter
xlat
add
sub
mov
cs
add
aaa
push
cdq
push
pop
(bad)
cwde
xchg
adc
pop
ins
push
and
stos
push
ss
cwde
dec
mov
ret
cmc
xchg
addr16
mov
sub
sbb
dec
stc
mov
add
or
(bad)
pushf
int
jbe
lods
adc
pop
popf
xor
(bad)
hlt
mov
leave
cmp
lods
and
push
cmps
clc
push
sbb
mov
pop
ds
jl
nop
test
push
jg
mov
pop
inc
jg
lods
pop
and
jbe
popf
into
pop
lds
lock
add
(bad)
stc
mov
lods
add
or
ror
mov
mov
clc
dec
test
xchg
mov
inc
pop
lods
out
in
cld
and
mov
or
xchg
cmps
nop
arpl
pushf
std
pushf
jge
ret
or
add
dec
and
sbb
cmps
mov
push
call
inc
cli
test
aaa
sbb
lahf
dec
mov
mov
sahf
test
std
push
jmp
mov
push
adc
push
inc
cmps
pop
push
test
movs
(bad)
mov
ja
push
in
cmp
and
xchg
xchg
mov
pop
pop
inc
ret
pop
xchg
aaa
(bad)
xlat
fistp
push
jmp
retf
leave
cmp
pop
ja
or
dec
jb
adc
out
lea
and
ror
xchg
loop
sub
dec
nop
mov
cli
jge
jg
dec
pusha
jbe
dec
or
jl
in
call
jmp
pushf
cmp
(bad)
mov
sub
adc
inc
or
mov
rol
outs
add
cmp
stos
jmp
lods
cwde
scas
cmc
mov
pop
fidivr
out
fild
mov
(bad)
sbb
add
push
jo
loopne
outs
pop
fistp
test
js
idiv
or
push
or
inc
mov
sub
pop
push
stos
mov
xchg
in
pop
pop
sbb
mov
inc
cmp
mov
mov
fisubr
pop
push
adc
imul
mov
jne
(bad)
cdq
xchg
scas
add
sahf
mov
mov
arpl
(bad)
test
mov
call
sbb
jl
shl
js
int3
popf
adc
or
icebp
push
pop
mov
in
mov
push
dec
std
pushf
cmc
jmp
xchg
imul
xlat
cld
mov
cmp
or
cs
jmp
rcr
mov
pop
imul
call
pop
shl
(bad)
and
rcr
lahf
jno
xchg
rol
inc
retf
dec
mov
jne
scas
mov
arpl
sbb
xchg
and
cmp
inc
fmul
or
xor
fwait
sub
fmul
call
pop
xor
imul
mov
adc
mov
jnp
cli
sub
dec
dec
test
dec
enter
and
ss
mov
shl
clc
xchg
pop
push
mov
cdq
dec
mov
call
xchg
mov
rcl
mov
pusha
and
jno
inc
mov
out
push
lods
fidiv
or
adc
lods
sub
push
jecxz
inc
jae
push
push
fwait
sub
popa
or
mov
cs
sub
or
fs
xchg
test
outs
mov
mov
jecxz
xchg
test
mov
mov
call
test
mov
int
adc
push
jp
xor
mov
repz
xchg
(bad)
or
mov
out
jno
frstor
or
xchg
(bad)
lds
test
idiv
fisttp
mov
xchg
inc
xlat
and
xchg
imul
rcl
dec
pop
(bad)
jne
mov
jno
mov
add
aad
add
dec
jb
sbb
inc
xchg
aam
mov
retf
xchg
test
pop
pop
add
fwait
or
(bad)
or
ja
and
jno
mov
push
and
in
arpl
dec
inc
retf
cmps
push
sbb
call
jle
jns
dec
hlt
mov
into
mov
(bad)
jmp
inc
or
aad
or
pop
sbb
fwait
test
repz
rol
cmc
test
sbb
mov
xlat
fnstsw
dec
repz
adc
jg
xor
pop
test
popa
sbb
in
pop
sbb
push
and
dec
push
xchg
out
mov
jp
retf
inc
push
cmp
rcl
in
xchg
pop
and
(bad)
adc
jge
push
mov
adc
dec
clc
sbb
cs
or
das
or
mov
xlat
shl
xor
cwde
ins
outs
mov
adc
or
cmps
add
mov
adc
js
mov
mov
xchg
cwde
repz
xor
push
cwde
add
xor
into
cli
add
dec
push
pop
popf
pop
(bad)
jmp
dec
in
add
(bad)
pop
das
and
sbb
addr16
xchg
mov
icebp
mov
aaa
push
jp
xchg
sub
je
cdq
mov
pop
lods
sbb
fadd
shr
mov
cli
nop
xor
and
add
cmp
and
outs
repz
mov
jmp
sbb
mov
div
shr
repz
pop
fsub
mov
xor
inc
pop
(bad)
and
xchg
xor
mov
xchg
xor
cmps
mov
sub
retf
clc
jnp
xor
into
sub
movs
sbb
and
sbb
dec
xor
xor
dec
stc
dec
dec
adc
arpl
push
mov
add
push
ja
cmp
adc
int
outs
inc
scas
iret
mov
pop
cld
sub
push
int3
inc
ja
jmp
bound
fs
movs
or
ss
inc
and
inc
pop
loop
jae
pop
cdq
pop
imul
mov
shl
inc
or
rcl
mov
(bad)
cmp
out
dec
sub
add
outs
add
jl
or
sbb
push
in
mov
aam
add
pop
lock
loope
adc
and
and
shl
adc
jae
jecxz
outs
mov
cmp
(bad)
adc
loopne
addr16
add
adc
push
fbstp
test
das
aad
push
dec
lods
fstp
xchg
jne
ror
mov
sbb
inc
xor
stc
repnz
fadd
rol
add
inc
sbb
sub
std
add
push
cmp
enter
ja
pop
push
mov
jbe
inc
xor
cmp
test
or
sahf
sbb
adc
retf
inc
push
or
jge
stos
xor
test
xchg
fld
int
cmp
lahf
xor
and
dec
aas
pop
ret
js
adc
div
mov
push
pop
or
out
aad
mov
out
fs
leave
jmp
push
sub
sahf
ror
daa
pop
scas
xor
pop
neg
icebp
adc
test
loopne
pop
jmp
mov
inc
shr
lock
retf
nop
pusha
mov
arpl
movs
mov
sub
and
mov
sbb
in
push
mov
mov
cmp
cmp
rol
aas
fcomp
adc
xchg
or
adc
fwait
mov
push
dec
test
lahf
lahf
add
sbb
adc
xor
push
pushf
stos
mov
xor
mov
adc
(bad)
repz
cwde
bound
dec
inc
mov
adc
inc
arpl
cld
int
xor
retf
xchg
and
out
fsubr
ins
xor
fidivr
shl
jge
dec
fwait
or
cmp
repz
or
pop
inc
push
mov
mov
out
dec
and
lahf
push
cmps
aam
or
loop
xchg
and
jb
pop
inc
jp
xchg
(bad)
mov
stos
lock
cmp
push
mov
sub
imul
cmc
or
jmp
add
fcomp
call
fmul
cmp
sub
or
outs
iret
(bad)
xchg
into
inc
jnp
ret
pop
out
movs
jnp
pop
mov
push
add
inc
xor
cmc
xchg
mov
pusha
jg
fild
addr16
inc
dec
aam
jmp
popf
dec
addr16
inc
call
(bad)
not
add
jp
stos
sub
aam
fcmove
push
jns
outs
add
cdq
pop
aam
cmc
jecxz
cmc
(bad)
mov
mov
push
js
outs
shl
sub
int
clc
inc
pop
pop
es
ins
cs
xor
mov
icebp
fist
jmp
adc
pop
pop
repz
clc
mov
in
lea
into
jge
mov
jo
loop
lahf
inc
ins
and
cwde
dec
push
call
out
xchg
imul
bound
cld
mov
and
rcr
dec
push
push
in
dec
ins
pop
push
dec
pop
ss
jmp
pop
jnp
push
test
sub
inc
jne
shl
push
xchg
sbb
xor
out
push
pop
mov
mov
push
mov
push
push
js
jmp
sbb
xchg
jb
arpl
cs
(bad)
(bad)
sar
cdq
mov
fidiv
jb
fisubr
cmc
dec
inc
outs
or
cmp
mov
(bad)
es
jle
cli
fsub
dec
out
ins
mov
dec
test
sub
aaa
or
cmps
push
dec
xchg
mov
out
mov
retf
xchg
imul
push
test
and
aas
(bad)
xchg
(bad)
jl
mov
or
clc
xor
pop
lock
jnp
xlat
sar
fs
mov
sub
sbb
out
outs
js
push
adc
nop
or
push
stos
sub
and
aad
xchg
int3
ins
dec
adc
adc
mov
sbb
test
jne
int
mov
push
inc
fimul
push
lock
(bad)
call
dec
mov
test
pop
mov
mov
adc
repnz
mov
inc
jmp
out
adc
adc
or
mov
repnz
cwde
imul
rcl
cmp
jb
neg
js
mov
outs
mov
xchg
and
pop
xchg
dec
(bad)
and
les
push
mov
call
cmp
mov
mov
sbb
dec
mov
jl
rol
popa
enter
sbb
mov
int3
inc
jo
pushf
and
inc
test
adc
ins
xchg
add
popa
or
sti
fdivp
inc
loope
or
or
scas
test
test
cmp
add
sub
or
xor
loop
mov
ret
ror
cmps
push
adc
cmp
xor
stos
(bad)
sbb
jo
jg
sbb
gs
cmp
repz
dec
hlt
rcl
mov
or
movups
dec
or
push
daa
sub
push
inc
xchg
push
xchg
popa
cmp
mov
jo
jne
push
mov
pop
dec
imul
cmp
xchg
or
xchg
sub
jb
test
or
xor
aad
push
cmovp
mov
test
test
(bad)
xlat
call
popa
mov
repz
mov
add
sub
adc
mov
mov
fadd
cwde
push
call
loopne
xchg
xchg
in
mov
xchg
loopne
test
lods
add
fsub
lods
mov
or
es
cmc
or
or
sbb
mov
cmp
dec
shr
stc
xor
dec
push
sub
pushf
cmp
cld
jb
pop
frstor
inc
or
scas
mov
jg
mov
xor
pmaxsw
fsubr
retf
xchg
xchg
gs
popf
sub
xor
shr
pop
retf
sub
lahf
jmp
inc
pop
pop
pop
mov
push
inc
mov
inc
or
sbb
mov
jle
jns
int
mov
xchg
push
fistp
popa
fwait
mov
push
(bad)
mov
in
xchg
scas
fst
shl
pop
jne
in
imul
xor
mov
stos
push
mov
inc
or
jl
mov
xchg
xchg
out
mov
jns
xchg
sub
loop
mov
std
les
test
xor
dec
imul
add
retf
dec
cmc
mov
idiv
xchg
or
int3
fs
mov
je
push
adc
xchg
sub
mov
fiadd
ret
popf
movs
repz
xor
rcl
inc
aaa
loopne
add
mov
loope
lahf
adc
and
pop
fcom
push
dec
xor
jg
fild
out
fimul
ret
ss
dec
mov
sbb
out
mov
(bad)
jmp
mov
jg
movs
pop
ins
adc
and
pop
retf
(bad)
adc
sbb
call
xor
mov
sub
adc
push
mov
js
cmc
push
loop
and
add
jb
pop
cwde
movs
daa
shr
push
inc
sub
cmp
cmp
mov
std
cli
cmps
ds
pop
(bad)
fwait
mov
or
xchg
xor
push
push
das
lahf
aas
outs
sahf
int
pop
xchg
fnstenv
imul
sub
jge
dec
jb
or
dec
mov
clc
dec
(bad)
mov
cmp
out
add
xchg
into
mov
out
and
data16
aam
mov
sbb
xor
mov
push
sub
das
xor
jmp
pop
push
loop
out
rcl
pop
push
push
nop
leave
jae
out
std
lds
stos
inc
ins
mov
inc
and
or
nop
sbb
hlt
test
popa
mov
add
dec
jg
xor
mov
add
dec
xchg
xor
(bad)
sbb
jb
or
pop
nop
mov
test
jno
pop
in
dec
les
sub
pop
(bad)
lock
aam
mov
sub
pop
inc
jb
pop
mov
(bad)
fisubr
mov
(bad)
mov
xchg
repz
mov
test
inc
pop
cmp
and
xor
mov
aam
push
das
dec
icebp
mov
mov
(bad)
or
jmp
jmp
sub
sub
pop
jp
das
mov
push
xor
dec
arpl
mov
adc
pop
or
dec
inc
loope
cdq
cmp
push
cmc
cmp
push
inc
fldl2e
popa
jo
aas
data16
mov
js
and
stos
mov
fcomp
stc
outs
jne
rcl
jne
mov
jnp
out
adc
(bad)
pop
fnstenv
xor
(bad)
es
aas
sub
stc
push
enter
push
ja
fadd
clc
test
in
pop
stos
xor
sub
mov
sub
jns
call
mov
call
and
xor
push
sub
sti
xchg
xor
xor
xchg
add
mov
mov
fimul
and
mov
jns
push
jl
fwait
dec
js
mov
fdivr
pop
out
in
mov
out
das
fnsave
test
push
and
not
es
or
mov
icebp
jne
add
mov
sub
sbb
fidivr
nop
mov
fistp
mov
adc
mov
bnd
leave
sub
loopne
lods
into
pop
jo
mov
addr16
dec
rol
add
pop
add
jp
das
cmps
std
lds
outs
stos
cmp
xchg
push
fs
sub
call
test
popa
repz
jge
push
mov
rcl
sub
mov
mov
sbb
adc
adc
fs
lea
aam
mov
jae
dec
rcr
cmp
add
int3
add
lahf
sbb
call
dec
add
dec
push
sar
mov
xor
sub
mov
sub
mov
mov
or
xor
imul
cmp
(bad)
jge
ss
pop
outs
inc
clc
std
dec
aad
inc
sahf
or
retf
aas
cmps
add
mov
sub
in
outs
ror
xor
push
leave
pop
sbb
daa
push
ret
pop
jnp
imul
arpl
aas
xchg
shr
outs
inc
or
xor
dec
xchg
cs
loopne
adc
out
mov
in
cmp
mov
clc
cdq
imul
jb
mov
loop
lds
imul
inc
clc
lahf
dec
les
cmp
inc
pop
iret
cmp
jge
icebp
jb
sahf
xchg
inc
stc
adc
adc
mov
add
xchg
sub
popf
ret
pop
mov
or
daa
cs
xchg
mov
ds
out
push
test
jns
dec
adc
or
and
and
sbb
cmp
and
jne
iret
adc
sub
out
retf
in
fs
cs
adc
cwde
add
xor
dec
(bad)
jns
lods
xchg
add
in
mov
arpl
bound
scas
fucomp
fisubr
or
jnp
ja
sub
pop
mov
sub
js
movs
sbb
jns
dec
adc
inc
jo
add
and
scas
mul
inc
push
mov
add
pop
pop
mov
xor
imul
es
iret
imul
je
in
pop
iret
or
xor
pop
adc
test
iret
xlat
inc
(bad)
add
out
or
call
pop
sbb
add
movs
pop
das
add
dec
push
pop
icebp
dec
cmp
xchg
movs
mov
mov
data16
mov
mov
stos
sbb
jns
xor
inc
cmp
push
pop
stos
in
fld
cmp
cmp
mov
ret
mov
push
and
jl
mov
xchg
aaa
in
sti
inc
inc
push
aam
out
outs
sub
aaa
xchg
pop
jmp
mov
shl
xor
aam
movlps
xchg
and
fs
or
xor
enter
in
retf
call
fld
mov
mov
mov
or
repz
aas
sub
and
mov
out
out
retf
fisttp
lahf
cmc
cld
or
dec
lahf
mov
loopne
(bad)
call
cs
mov
retf
push
je
push
dec
dec
push
mov
imul
mov
pushf
jnp
jl
std
iret
test
stc
call
push
rcl
and
adc
aaa
sbb
and
mov
cwde
stos
or
daa
or
retf
add
pop
outs
cmp
or
xchg
cmc
outs
push
sbb
aaa
jl
cwde
push
test
stos
mov
in
ret
cmp
push
(bad)
lods
adc
and
xchg
fs
push
aad
icebp
leave
out
scas
pop
mov
(bad)
mov
mov
das
sub
cmp
or
test
add
std
xor
loop
add
(bad)
sbb
jbe
xor
mov
sbb
add
pop
pop
lds
fimul
mov
dec
add
ror
adc
in
cmp
jns
add
fstp
(bad)
ret
das
sti
movs
mov
cmp
rcl
popa
mov
retf
adc
(bad)
neg
mov
mov
add
mov
lds
mov
push
push
fisub
cmps
sbb
daa
sti
jae
jp
xchg
inc
int3
(bad)
out
(bad)
int3
lods
inc
es
test
scas
movs
movs
or
dec
rep
pop
arpl
xchg
outs
dec
cmp
pop
add
sub
popa
je
lock
xlat
retf
adc
and
push
xor
jmp
ins
inc
test
ret
pop
call
(bad)
mov
adc
push
cmp
pop
loope
enter
stos
xchg
imul
mov
iret
cmp
push
dec
jbe
out
fs
jmp
(bad)
outs
jb
xchg
cmp
into
pop
pop
sub
and
jmp
xchg
(bad)
test
sbb
ret
out
xchg
out
mov
cmp
xor
cwde
aas
mov
xor
mov
cs
cld
fs
mov
and
(bad)
mov
mov
sti
xchg
add
sbb
ror
xor
pop
fmulp
retf
sub
or
jge
idiv
(bad)
mov
cmp
aad
lea
xor
dec
push
push
fld
fcmovne
sub
dec
(bad)
rcl
sbb
inc
inc
cdq
retf
arpl
in
sub
sbb
ds
test
cld
iret
stos
(bad)
cmp
pop
(bad)
out
ror
xchg
cs
jp
lock
test
in
stos
sbb
push
in
inc
pop
dec
int
ja
push
pusha
or
shl
sahf
out
xchg
out
add
jecxz
dec
or
es
sub
fld
scas
mov
test
mov
sbb
sbb
push
je
pop
fst
push
call
inc
out
inc
cdq
pop
sbb
fidivr
push
ror
and
add
int
pop
inc
dec
std
pop
aas
push
sub
cmp
fs
push
add
dec
icebp
xchg
xor
push
adc
lds
retf
xor
jb
mov
pop
sti
push
cmp
mov
mov
iret
jp
xchg
push
(bad)
popf
or
or
xchg
xor
cmps
rcr
mov
aaa
mov
push
loopne
cmp
sub
mov
and
icebp
leave
fadd
mov
mov
mov
mov
and
mov
jg
adc
jbe
add
aaa
dec
pand
out
shl
pop
push
pop
retf
divps
cmp
rcl
retf
outs
cmp
call
dec
xor
push
test
stos
in
push
into
fcom
or
cli
cmps
jmp
mov
cwde
jmp
or
popa
cmp
aad
push
mov
shl
movs
(bad)
ja
shl
cmp
jne
addr16
test
aad
sahf
test
push
test
mov
sub
aad
mov
jb
jg
in
add
cwde
mov
(bad)
xlat
mov
dec
mov
dec
cs
sti
xor
mov
xchg
(bad)
(bad)
aas
popa
mov
push
aad
je
imul
dec
sahf
xchg
test
xchg
xchg
cli
push
cmp
add
push
mov
pop
fwait
imul
dec
cmps
ror
pop
push
inc
les
es
and
inc
add
std
pop
add
outs
fild
fidiv
sub
push
jno
enter
adc
jmp
cmc
jbe
or
aas
es
dec
clc
cmps
mov
jp
inc
sbb
fistp
pop
mov
shr
(bad)
xor
cmps
sbb
(bad)
cld
and
int
scas
push
fst
jno
dec
xchg
sbb
cmp
fwait
inc
jnp
lods
std
sahf
jo
xor
push
push
in
xchg
mov
stc
int
fisttp
retf
and
jge
scas
in
push
int
xor
xchg
int3
adc
fisub
call
xchg
out
jle
dec
adc
xchg
pushf
call
out
jmp
dec
ret
push
push
test
shr
imul
push
jmp
xchg
mov
jp
jns
fcom
pop
push
jo
adc
jnp
add
jmp
int3
lock
lock
xchg
push
ds
mov
das
sbb
(bad)
retf
jb
retf
sbb
mov
cmp
and
inc
ins
in
inc
scas
inc
leave
arpl
sub
daa
xor
rcr
into
adc
or
nop
jl
cwde
leave
xchg
and
push
iret
icebp
(bad)
xor
(bad)
sahf
dec
fimul
aaa
add
ret
sbb
call
mov
push
pop
not
enter
push
mov
in
data16
sbb
jmp
shl
dec
xor
dec
push
xchg
mov
cmp
mov
mov
mov
lods
add
add
add
xor
dec
stc
sbb
ss
loope
push
or
jbe
lds
lods
sub
sbb
mov
push
jno
pop
iret
jo
lds
jl
and
inc
pop
jmp
xlat
push
imul
jno
cli
in
leave
dec
pop
ret
mov
mov
cmc
sbb
dec
xor
pop
add
cmp
pop
mov
fsubr
aaa
iret
sub
out
fwait
pand
es
mov
dec
popa
cmp
xor
and
mov
inc
xor
bound
repnz
jbe
call
jae
fcmovb
inc
mov
adc
in
in
dec
ds
pop
xlat
std
push
and
pop
xlat
inc
or
mov
fsub
inc
sub
pop
jnp
mov
rcr
xchg
(bad)
lds
stos
arpl
pop
mov
or
rcl
mov
lea
mov
sbb
adc
js
loope
call
sub
mov
aam
push
and
fwait
pop
pop
mov
mov
sub
add
movs
jl
loope
mov
les
cmc
je
add
cmp
retf
push
xor
mov
push
test
movs
shl
or
mov
outs
sbb
add
lods
adc
bound
aas
jg
imul
and
or
ins
mov
add
aad
jbe
jge
ins
pop
cli
or
test
sbb
and
cmp
vcvtsi2ss
enter
les
sub
push
sbb
ins
and
push
adc
jns
xor
pop
or
and
adc
cmps
sub
dec
(bad)
jns
push
push
xor
aaa
(bad)
adc
add
(bad)
cmp
bound
mov
jnp
mov
(bad)
ins
or
call
pop
adc
arpl
sbb
push
retf
mov
in
adc
int3
pop
add
dec
cmp
dec
frstor
rcl
mov
push
xchg
xchg
inc
fisub
dec
mov
call
xor
sbb
mov
bound
or
dec
push
jne
rol
mov
fdiv
pop
mov
push
out
cld
aad
mov
fdivr
in
daa
int3
mov
xor
js
dec
sti
cmp
(bad)
hlt
dec
cmps
mov
and
loopne
ret
rcr
sub
cmp
sahf
(bad)
int
dec
adc
shl
pop
or
aas
aaa
cli
cmps
inc
or
add
inc
jbe
cs
cmp
dec
arpl
pop
pop
ins
inc
cmp
and
dec
icebp
stos
cmp
arpl
mov
loop
std
add
dec
add
outs
aam
in
daa
mov
lea
pop
pop
mov
jb
jno
jecxz
push
cld
ret
jmp
dec
mov
loop
cmc
call
lock
out
fidiv
test
daa
les
mov
arpl
push
xchg
fcmovbe
sbb
jne
in
or
cmps
in
shr
mov
cmp
das
mov
cmps
sti
in
out
xchg
mov
or
fld
ds
dec
in
mov
or
jg
loopne
add
sahf
fmul
dec
ins
test
es
mov
aad
adc
dec
js
leave
mov
push
jge
fdivr
cdq
push
add
and
sahf
ins
sub
imul
(bad)
ret
sub
xchg
mov
not
jmp
inc
mov
mov
fcmovb
sbb
dec
fst
adc
jb
(bad)
iret
push
and
fidiv
xchg
loop
jbe
adc
test
push
es
rcl
jmp
test
jo
jns
adc
stos
mov
imul
jmp
out
loope
fdiv
aam
sub
pop
push
call
add
movs
in
cld
outs
repz
test
scas
jmp
f2xm1
ret
es
push
je
push
stos
add
std
adc
loope
jmp
push
dec
orps
sbb
jmp
mov
cmovo
dec
test
sbb
loopne
pop
fimul
jmp
add
ret
jmp
clc
or
and
inc
xor
ret
pop
jne
sub
jb
push
mov
fwait
xchg
mov
and
rcr
dec
xlat
inc
shl
or
clc
loopne
retf
fist
retf
sar
adc
(bad)
loop
ds
mov
pop
scas
xchg
push
and
or
sti
int
add
or
mov
adc
test
mov
repz
and
or
popa
jg
mov
adc
mov
sbb
add
push
repz
in
jnp
mov
(bad)
mov
ret
iret
arpl
xor
cmp
inc
cmp
and
test
xor
mov
xchg
or
je
mov
pop
outs
xor
pop
xchg
cmps
repz
xchg
scas
ds
sbb
retf
inc
or
ret
mov
jle
inc
ret
inc
mov
push
outs
adc
xor
fs
rcl
loope
push
xchg
std
bound
xor
or
ret
mov
add
fidivr
sub
inc
push
ret
leave
sbb
push
popf
pop
pop
jo
sub
inc
int
or
mov
jno
in
and
push
mov
mov
jecxz
lea
xchg
pop
pop
mov
nop
hlt
adc
mov
rol
lds
and
push
outs
adc
jmp
clc
test
push
push
popf
pop
into
fstp
into
add
jbe
bound
les
cmp
pop
push
xchg
dec
pop
call
xchg
lods
adc
sar
les
shl
mov
clc
xchg
mov
xor
and
test
fimul
xor
(bad)
sbb
shl
mov
inc
cli
xor
xchg
cmp
xchg
call
ret
scas
adc
lahf
mov
imul
and
add
pop
add
imul
push
pop
in
cs
jmp
jmp
add
ins
sti
sub
dec
loope
pop
mov
retf
add
cmp
mov
imul
loop
mov
jns
je
mov
addr16
loope
push
call
cwde
rol
fst
aaa
dec
(bad)
mov
aas
and
ret
lea
test
adc
add
jmp
into
pop
add
push
pop
js
jo
sbb
int
icebp
jnp
cmp
ja
jg
scas
pop
or
jbe
(bad)
mov
pop
dec
sbb
fld
hlt
lds
xor
mov
popa
push
jne
inc
out
pop
aaa
xchg
and
mov
mov
cwde
pusha
dec
push
jbe
jne
jecxz
dec
sub
adc
xchg
xor
dec
repnz
add
and
mov
scas
sti
shl
pop
stc
pop
fsub
mov
inc
test
out
mov
pop
lahf
jo
cwde
out
mov
xor
retf
adc
dec
mov
sbb
bound
sub
je
in
int
inc
mov
sub
adc
xchg
mov
ins
push
sbb
ret
stc
inc
jo
add
add
pop
xor
sar
xchg
jnp
aad
inc
pop
mov
mov
inc
ins
inc
mov
jecxz
adc
add
sub
call
dec
repnz
xchg
in
test
loope
out
cmps
clc
loop
clc
or
add
div
push
adc
adc
cld
retf
add
jbe
pop
xchg
sub
mov
inc
fcom
sub
rep
or
stc
push
addr16
xchg
js
or
jb
jmp
mov
jne
xor
or
stos
icebp
outs
out
sahf
adc
into
fwait
mov
test
fist
fstp
ret
or
add
jno
cmp
mov
push
test
xchg
push
add
xchg
ror
sbb
xchg
or
xchg
xor
mov
addr16
pop
cwde
(bad)
dec
pushf
xlat
aas
(bad)
mov
mov
adc
shl
push
cmp
jne
pusha
jecxz
out
sar
mov
daa
mov
add
outs
mov
mov
and
jns
xchg
ins
jle
mov
pushf
dec
xor
js
fwait
push
add
cmps
xorps
sub
adc
fild
ds
stos
outs
je
mov
and
inc
add
mov
test
fnstenv
sbb
ja
xchg
sub
(bad)
(bad)
push
sub
inc
mov
push
cmc
ins
lea
push
or
mov
pop
push
dec
cdq
popa
xchg
popf
sbb
push
shl
call
fisubr
sub
in
outs
pop
fcomi
aaa
movs
jns
rcr
inc
sbb
loope
sbb
push
loope
jg
push
mov
xchg
push
mov
push
cld
data16
popf
inc
and
adc
add
cmps
cmp
sbb
sbb
icebp
fisub
or
movs
mov
mov
inc
leave
in
inc
inc
ds
pusha
idiv
push
lds
loope
outs
data16
std
out
push
je
adc
test
or
cld
push
jle
or
call
loope
cld
sahf
jge
addr16
enter
cs
adc
fcmovnbe
div
fcom
(bad)
pop
int3
mov
movs
jg
inc
rol
push
fisub
cmp
test
jb
inc
fs
sbb
push
mov
movs
xchg
pop
fwait
jecxz
and
test
xlat
stos
popf
cmp
xchg
dec
sub
mov
xchg
sbb
iret
mov
cmp
inc
test
cmp
and
xchg
pop
ror
ds
xchg
mov
jle
push
or
cmp
lahf
jnp
loopne
mov
addr16
loopne
mov
out
(bad)
into
(bad)
stos
add
xlat
dec
add
fbstp
jns
xor
je
mov
je
jbe
test
test
adc
add
fstp
adc
xchg
sub
sti
cmp
or
fwait
gs
cld
nop
js
and
mov
inc
sti
mov
repnz
lea
or
xchg
pushf
faddp
push
pop
adc
test
test
sub
or
(bad)
ret
pop
aaa
dec
pop
js
dec
dec
neg
mov
inc
xor
pushf
pushf
cmp
es
sbb
mov
outs
push
and
jge
std
xor
leave
dec
inc
cmp
push
jo
adc
or
cdq
shl
scas
xchg
cmp
inc
movs
add
enter
fstp
pop
les
push
shr
inc
dec
push
jg
add
jbe
xchg
mov
(bad)
test
pop
and
lahf
cmp
ret
push
cmc
aam
js
scas
mov
mov
and
mov
ror
punpckhwd
xchg
das
mov
pop
mov
or
xchg
xor
dec
call
adc
fwait
mov
mov
and
jl
outs
push
leave
aas
ror
repnz
jns
repnz
ins
mov
lods
sbb
into
sti
inc
pop
mov
iret
ja
in
mov
enter
or
mov
mov
adc
push
dec
or
mov
and
cmp
mov
jnp
fldcw
ins
and
popf
push
push
ja
or
pop
pop
jmp
ins
pop
mov
aad
pop
les
and
and
cmp
and
int
pop
or
fisttp
cmp
in
popa
xchg
push
xor
pop
aad
leave
ins
adc
(bad)
jle
push
imul
ins
cmp
xor
adc
inc
(bad)
fcomp
inc
(bad)
adc
cs
pop
in
or
int
mov
pop
xchg
popf
les
sbb
stos
test
shl
ss
mov
mov
pop
mov
xor
mov
ins
ret
neg
mov
xor
mov
pusha
cmps
(bad)
cwde
jle
xlat
(bad)
xor
mov
out
scas
xchg
sbb
das
popa
mov
push
out
xor
js
cmps
repnz
adc
and
call
push
neg
cdq
fs
ja
imul
cs
jno
mov
rcr
adc
add
or
(bad)
outs
mov
shl
pop
dec
(bad)
leave
js
jge
pop
sti
data16
sbb
movs
lock
aam
cmp
jg
and
mov
fsubrp
or
add
pop
push
repz
(bad)
shl
sub
retf
jecxz
push
mov
add
call
out
mov
mov
scas
or
sub
ins
dec
and
fs
xchg
mov
xchg
jecxz
pop
aad
sbb
enter
das
sbb
iret
loopne
mul
cli
or
xchg
imul
fdiv
mov
xlat
mov
dec
shl
mov
inc
xor
mov
popf
pop
xlat
or
mov
xchg
in
dec
push
inc
dec
out
mov
loop
sub
in
sbb
push
fidiv
dec
sti
jg
loop
fstp
jmp
outs
mov
int3
les
stos
gs
je
(bad)
jmp
leave
dec
and
arpl
adc
jecxz
push
sbb
idiv
or
aaa
out
in
jns
aas
shr
mov
adc
aad
cmp
cmps
or
mov
out
nop
mov
xor
jle
sar
jmp
mov
mov
(bad)
sub
in
pop
xor
xchg
cmps
and
mov
push
rcl
xchg
sub
inc
test
mov
shr
jb
mov
jecxz
add
and
pushf
cmps
add
mov
adc
out
sub
mov
mov
rcr
fld
fldcw
adc
dec
jb
retf
clc
xchg
pop
push
cmc
mov
xchg
mov
call
repz
xchg
mov
dec
es
jne
fadd
jb
pop
mov
int
push
jo
push
loope
jno
sub
adc
je
inc
in
add
outs
dec
xchg
dec
loopne
aas
cmp
repnz
jne
or
lock
xchg
mov
xchg
cmps
xchg
xchg
add
out
or
jo
cmc
stc
stos
jnp
jge
xlat
jg
jmp
inc
lods
push
sbb
(bad)
inc
dec
mov
sub
out
into
js
sbb
loop
or
outs
adc
jbe
dec
sub
ret
add
adc
inc
sbb
add
adc
jae
popa
or
fwait
inc
ss
vzeroupper
das
jo
sti
push
sbb
pop
mov
cmp
pop
fwait
mov
push
jnp
cli
popa
fisub
pop
mov
xchg
rol
lods
sub
jns
dec
enter
clc
mov
dec
sahf
jb
inc
mov
push
cwde
and
inc
jmp
(bad)
dec
push
mov
sbb
xchg
mov
lods
pop
hlt
xor
call
xchg
dec
sbb
mov
bound
cmps
pop
sub
mov
add
adc
sub
push
aam
ins
add
sub
(bad)
out
xor
in
clc
rcl
pop
inc
imul
call
push
cdq
icebp
rcr
add
shr
mov
xchg
jno
(bad)
sub
and
(bad)
add
xlat
mov
fdivrp
fmul
or
sbb
sbb
inc
dec
out
shl
addr16
(bad)
fild
das
stc
xchg
xor
jmp
retf
cmp
adc
or
fs
mov
scas
add
out
call
jg
adc
jbe
mov
(bad)
jo
movs
neg
cmp
mov
jo
and
sub
jmp
xchg
(bad)
jg
das
aaa
and
data16
lods
popa
inc
loop
jl
inc
push
add
aad
and
mov
imul
add
dec
xor
sbb
cmp
ror
inc
adc
dec
aas
sub
xchg
mov
sbb
xchg
xchg
(bad)
add
adc
and
xchg
and
mov
daa
push
out
dec
mov
push
fild
sub
ins
test
out
and
jno
int
push
popf
call
inc
in
sub
pop
pop
jge
sub
cmp
ins
xchg
pushw
aam
push
cmp
jp
fst
popf
js
into
pop
ins
aad
sbb
dec
push
xchg
retf
sahf
in
sahf
out
xchg
sub
ret
mov
pop
stos
xchg
mul
xor
mov
call
jl
cli
and
jae
(bad)
xor
es
mov
pop
js
into
dec
dec
add
push
mov
data16
psubb
out
rcl
jge
xchg
xor
loop
push
sti
jg
test
jecxz
std
and
adc
dec
add
inc
dec
mov
xor
pop
vshufps
and
pop
rol
fild
out
movs
adc
iret
and
fcmovu
outs
nop
cmp
jmp
test
xchg
mov
pop
cmp
dec
lods
mov
pop
shl
push
push
push
push
cmp
fs
and
push
xchg
(bad)
pop
push
add
and
out
sbb
xchg
fisttp
and
rcr
retf
mov
fidivr
inc
push
sub
add
lods
sbb
mov
jp
sub
xchg
bound
and
xchg
nop
sub
cld
adc
add
enter
mov
and
cmps
fdiv
mov
inc
and
xlat
repnz
mov
lods
mov
test
sbb
xchg
icebp
sub
jb
in
movs
leave
mov
nop
adc
xor
xor
int
jl
sbb
push
inc
scas
jnp
and
lods
mov
fdiv
stos
or
fstp
inc
cmp
mov
cmp
vpunpckhbw
daa
js
(bad)
ror
add
add
jae
stos
pop
xor
cmp
jno
lock
sub
push
imul
cld
jae
jecxz
cwde
sahf
imul
xor
or
mov
fadd
push
jmp
mov
sbb
mov
popa
sbb
pop
xchg
outs
jae
mov
mov
jg
fild
mov
les
shl
loopne
rol
sub
pop
jae
ret
mov
inc
scas
fucomp
leave
pop
mov
push
fwait
mov
adc
and
sti
sbb
mov
(bad)
pop
push
bound
jmp
enter
dec
mov
xor
dec
adc
inc
push
ins
cmp
loope
push
xchg
es
sbb
jmp
inc
or
xor
push
mov
imul
jle
sub
lods
pop
test
push
push
sbb
outs
(bad)
jg
push
jmp
jb
out
mov
daa
int
lds
jge
push
(bad)
sar
es
sub
xor
pop
jle
adc
arpl
mov
or
pop
cmp
mov
mov
mov
jmp
adc
push
enter
xor
jmp
enter
adc
cmp
pop
popf
imul
jp
mov
data16
je
hlt
inc
or
pop
adc
jecxz
(bad)
test
xchg
(bad)
push
outs
sahf
jb
inc
cmps
mov
outs
out
les
adc
imul
enter
pop
pop
popa
call
mov
(bad)
mov
mov
(bad)
push
(bad)
ja
lds
ins
punpckhdq
cmovnp
mov
je
mov
cmps
jg
test
jmp
repz
movs
scas
retf
movs
(bad)
jmp
sub
fdivr
and
call
inc
xchg
sub
lock
mov
ins
es
xor
out
ins
lock
imul
les
repz
fwait
test
sbb
jnp
dec
das
cmp
retf
arpl
jle
(bad)
jg
push
xchg
pushf
leave
or
adc
inc
mov
ins
out
or
cmp
mov
fisub
jo
or
add
sar
sbb
retf
or
aaa
clc
and
cmp
inc
scas
mov
mov
aaa
mov
pop
test
jne
cli
jo
sub
sub
or
fcomp
add
fucom
mov
in
xchg
stc
mov
push
dec
mov
rcl
jne
xor
cmp
xor
pop
sti
jns
movs
(bad)
adc
fild
and
fdivr
cmps
test
cmp
fwait
das
adc
pop
mov
bound
fsubr
or
jns
rcl
mov
inc
and
and
push
pop
inc
jg
movs
mov
lods
scas
mov
loop
jo
(bad)
dec
jns
cmp
mov
out
push
mov
dec
ror
cmp
xchg
in
or
and
xchg
dec
mov
mov
mov
xchg
push
into
and
pop
cmp
mov
sub
cmp
and
mov
imul
fidivr
pop
jne
or
int3
jmp
jb
je
loopne
dec
add
mov
(bad)
outs
or
dec
sub
push
push
push
lahf
scas
cld
mov
lock
mov
test
shl
jge
or
addr16
inc
fwait
prefetcht2
out
movs
(bad)
mov
bound
jmp
inc
popf
test
mov
popa
jmp
xor
dec
dec
(bad)
sbb
movs
in
lds
jp
push
pushf
loope
loop
popf
push
hlt
dec
adc
sub
mov
out
xor
mov
sbb
hlt
pop
push
adc
out
jg
inc
xor
jmp
iret
icebp
inc
add
cwde
movs
pop
clc
jo
jb
pusha
aas
mov
leave
cmc
pop
in
dec
mov
aaa
in
sti
shr
sbb
outs
call
repz
sbb
sbb
(bad)
enter
and
(bad)
mov
sub
push
jne
or
cmp
(bad)
push
xchg
gs
dec
xchg
cmp
idiv
cmp
or
xchg
and
clc
pop
dec
dec
in
(bad)
dec
and
inc
push
enter
push
or
mov
call
or
or
test
lock
pop
in
jp
into
jne
sub
cmp
(bad)
jmp
add
jmp
dec
mov
ficom
push
(bad)
cmp
lea
or
ds
mov
lds
jne
mov
lahf
mov
jle
sub
fsubr
ds
inc
ret
movs
mov
xchg
xchg
in
mov
rcr
out
inc
movs
and
xor
cmp
ret
int3
das
mov
loop
test
cld
and
xchg
mov
ficom
sub
sbb
call
mov
sti
retf
out
hlt
or
pusha
xor
sub
mov
inc
das
sahf
test
sub
std
or
sti
or
cmps
mov
addr16
mov
sar
repnz
aaa
add
out
int
adc
sti
cdq
jg
sbb
cmps
lahf
ins
fwait
aaa
and
xor
nop
mov
adc
stos
test
das
and
pop
aas
jb
jnp
pop
ss
xor
dec
xor
and
out
jmp
push
jmp
retf
ins
pop
call
add
pop
(bad)
dec
fimul
es
fisttp
and
jae
test
xchg
movs
xor
jle
sub
jno
les
outs
or
add
int3
clc
mov
or
retf
push
inc
push
je
dec
pop
inc
push
call
mov
jne
cmp
sar
lock
push
mov
pop
dec
fmulp
shl
(bad)
ds
and
call
push
sbb
inc
les
nop
xor
mov
ror
xor
pop
or
les
call
or
and
in
pop
repnz
shl
jae
push
mov
mov
hlt
jae
mov
xor
popa
out
sub
iret
sub
mov
cs
adc
pop
or
sub
lods
sbb
mov
mov
mov
adc
lods
in
sbb
adc
adc
xor
sahf
push
and
xchg
mov
scas
popf
aad
dec
(bad)
mov
(bad)
xchg
push
adc
dec
jns
shl
pop
aaa
retf
neg
pop
test
mov
add
lahf
in
sub
jno
mov
outs
js
mov
mov
mov
test
pop
repnz
iret
or
add
push
mov
loopne
fs
dec
mov
inc
(bad)
sub
inc
cmps
jno
aam
jg
or
pop
ss
cwde
and
loope
fs
xchg
ficom
push
cmps
loope
adc
shl
mov
adc
cdq
xor
and
or
push
mov
inc
retf
push
fst
fistp
pop
mov
xlat
and
aam
xor
jle
cmp
xor
int
cmp
lock
sbb
jb
movs
outs
(bad)
pusha
in
je
xchg
aad
mov
ret
out
mov
push
scas
lods
xchg
cli
mov
stos
int3
fcom
aas
fidiv
sub
retf
scas
sub
les
lock
cli
or
ss
lods
pop
inc
pop
pop
xchg
out
adc
sbb
out
push
stos
int
stos
jno
sub
ins
add
adc
ret
xchg
dec
cwde
dec
pop
enter
dec
lds
add
or
arpl
sbb
ja
in
mov
jmp
frstor
(bad)
adc
dec
and
xor
fidivr
das
mov
mov
mov
add
cmp
xor
in
or
push
or
cmp
pop
(bad)
jge
(bad)
dec
test
xchg
sbb
mov
pushf
sahf
ins
add
out
inc
das
cmp
push
aam
pop
movs
lahf
push
xor
addr16
int3
outs
or
in
fmul
fidiv
cmp
pop
div
mov
xchg
mov
sbb
and
push
shl
daa
shl
inc
xchg
and
jge
data16
int
push
push
mov
pop
sub
(bad)
out
add
xchg
dec
jp
sahf
test
(bad)
lock
loope
loop
cmps
or
ds
pushf
cdq
outs
mov
mov
adc
add
sar
jbe
into
sbb
inc
rcr
ins
cli
rcr
test
aaa
dec
mov
sti
push
pop
jo
rol
ja
mul
enter
and
push
jbe
or
mov
es
add
je
gs
jge
fistp
sbb
in
mov
lahf
pop
xchg
sbb
jae
ret
mov
xchg
dec
sbb
jp
add
test
les
jo
std
sbb
xchg
je
cmp
iret
mov
popf
push
sbb
sahf
sub
shl
cs
cmp
mov
aad
js
xor
jnp
stos
and
pop
push
jg
mov
xchg
cmps
(bad)
cmp
pusha
les
dec
or
xlat
xchg
push
inc
sub
cli
push
mov
cwde
pop
add
popa
push
xchg
jle
add
mov
and
ret
fwait
mov
mov
jmp
or
in
pop
push
sbb
scas
jge
inc
movs
scas
mov
mov
in
adc
or
cdq
loop
xchg
xchg
pop
pop
repnz
fldcw
adc
cmp
(bad)
push
push
adc
lds
mov
add
cmps
pop
cdq
in
jbe
sbb
ds
leave
xor
lahf
jle
sbb
or
(bad)
ror
cld
or
sub
adc
jge
data16
ror
int
mov
mov
mov
pop
or
inc
bound
pop
adc
mul
jb
add
ins
popf
es
xchg
mov
pop
js
outs
call
lahf
outs
add
inc
ins
add
add
mov
jle
cmp
jmp
inc
(bad)
lods
jp
psubusb
mov
fwait
jmp
xor
sti
jo
hlt
ret
lods
add
aad
inc
sti
repz
jmp
mov
daa
ja
je
cmp
xor
push
es
ror
(bad)
and
lds
ret
mov
sub
fwait
xchg
cli
js
push
inc
and
mov
inc
repz
lods
xlat
popa
mov
fsubr
dec
mov
push
add
ins
cmps
repnz
pop
mov
jecxz
push
pop
lock
fwait
ja
cmp
xchg
mov
outs
xor
aas
popa
daa
add
and
sub
aaa
movs
fcom
inc
cmp
sub
mov
push
and
mov
ficomp
sbb
outs
or
cmps
addr16
fmul
xchg
cmp
(bad)
jno
sub
pop
fisubr
pop
jbe
movs
iret
and
es
in
mov
js
ds
cwde
jmp
outs
jmp
sbb
xor
data16
fmul
push
cs
jl
ret
(bad)
cmp
mov
push
xchg
adc
addr16
jbe
cmp
jg
retf
xchg
add
in
mov
sub
add
iret
fnstcw
dec
and
inc
push
adc
test
dec
push
dec
xor
lock
sbb
or
mov
mov
mov
or
fdivrp
mov
jmp
mov
xlat
mov
out
jbe
add
inc
ja
jbe
sar
mov
out
int
icebp
mov
cmp
test
or
inc
bound
add
mov
push
mov
jmp
jns
mov
dec
cs
xchg
not
mov
cmp
pop
bound
in
xchg
aam
sub
pop
call
xchg
bound
mov
ret
inc
add
and
sbb
dec
inc
pop
dec
inc
out
cmp
cs
aam
push
pop
jecxz
sbb
cmc
inc
push
lods
adc
jecxz
push
cmc
jnp
push
mov
ficomp
inc
cld
hlt
add
das
icebp
cmc
dec
je
dec
or
or
dec
sbb
mov
clc
(bad)
pop
push
ror
(bad)
in
(bad)
scas
scas
mov
mov
push
in
jmp
dec
mov
inc
in
jmp
fisub
hlt
dec
fsub
int3
icebp
inc
push
or
adc
(bad)
xlat
aaa
arpl
sti
xchg
jge
cmps
fcmovbe
pop
add
jg
mov
in
push
out
call
test
pusha
aad
adc
inc
inc
and
cmp
xchg
push
mov
or
into
pusha
dec
cld
test
mov
es
enter
adc
loopne
mov
jb
or
push
adc
or
and
repnz
jmp
sub
jo
jmp
pop
xchg
jbe
jmp
push
push
call
dec
xchg
xchg
jecxz
fcmove
stos
adc
xor
xor
pop
fldenv
pop
push
in
loopne
or
sbb
jmp
rcr
pop
push
gs
lods
mov
mov
add
scas
and
sub
nop
mov
cmp
cmc
sbb
stos
int3
sub
cmp
int
aas
inc
jbe
push
and
and
ja
mov
(bad)
mov
ret
xlat
std
pop
int
or
loope
retf
pop
pcmpgtw
add
cmp
pop
jae
push
push
mov
jl
sahf
inc
in
jmp
add
mov
adc
inc
sub
jno
scas
aaa
mov
aad
jle
jns
(bad)
and
mov
mov
mov
mov
out
(bad)
cli
loopne
dec
dec
cli
push
xor
jp
jne
xor
dec
xor
ins
fstp
mov
sbb
pop
mov
bound
test
call
mov
cli
nop
jmp
pop
es
ss
cmp
xchg
aaa
or
and
mov
leave
iret
fucomip
jp
cwde
out
out
lahf
sub
cli
pop
outs
cmp
test
or
adc
add
es
scas
hlt
or
adc
loop
(bad)
jae
dec
lock
jno
jge
out
inc
sbb
lea
mov
call
clc
mov
and
and
je
xchg
stc
jno
xchg
stc
jmp
idiv
and
imul
adc
jg
idiv
daa
mov
push
or
inc
mov
push
jae
and
push
inc
mov
cmp
aaa
pop
iret
popf
sub
lods
mov
xchg
xchg
je
push
rol
popa
cdq
or
sub
add
pop
and
sbb
cmp
pop
enter
push
push
push
or
pop
pop
in
icebp
and
pop
leave
cmp
adc
and
push
test
push
and
add
lahf
ror
jmp
ret
pop
fcom
cmc
out
inc
mov
dec
xchg
pushf
call
jp
xor
leave
mov
lods
cli
xchg
and
in
mov
xor
pop
scas
jg
adc
in
mov
push
pop
adc
pop
lock
cdq
xchg
inc
ins
fmulp
ret
inc
gs
mov
enter
and
push
mov
or
xchg
fstp
imul
and
ret
push
and
fucompp
jmp
sbb
lea
fcom
and
and
cmps
mov
adc
ror
scas
jg
xchg
cmp
scas
cmp
clc
popa
ds
inc
std
push
shl
xor
adc
adc
and
dec
sub
jns
inc
call
dec
jb
xlat
inc
out
push
xchg
mov
xlat
inc
jmp
mov
ret
sub
pop
clc
inc
xor
xchg
aas
pop
ins
adc
stos
(bad)
mov
lds
sbb
int3
imul
add
out
fisubr
pop
in
out
gs
mov
xchg
xchg
mov
stos
lods
addr16
push
xor
and
scas
fild
arpl
cmp
fbld
pop
repz
mov
xor
fist
cmc
mov
sbb
mov
or
dec
adc
xchg
loop
retf
cld
push
cmp
push
xor
xchg
xchg
into
sub
out
add
pop
push
push
iret
jmp
xchg
rol
stc
cwde
mov
stc
test
in
jno
adc
mov
rcl
push
clc
pop
test
retf
inc
push
sub
jo
jne
ja
or
std
push
xchg
mov
loop
in
push
dec
xor
xchg
jp
inc
inc
sub
jp
test
ins
(bad)
add
and
jle
and
aaa
adc
dec
dec
mov
mov
add
js
add
not
push
daa
xchg
sti
aas
dec
in
js
dec
in
aam
xchg
(bad)
jae
pop
div
cli
sub
jo
adc
gs
push
imul
mov
loopne
pop
jo
ret
(bad)
xchg
int3
into
outs
push
xor
enter
popa
out
dec
ja
imul
js
xchg
sub
shl
jle
pop
imul
ret
je
jp
dec
nop
hlt
call
ins
mov
and
xor
jno
and
xchg
push
or
adc
sbb
outs
in
or
push
and
mov
into
push
shr
and
pop
inc
mov
xor
loope
mov
and
rcr
or
jnp
bound
or
ror
js
mov
dec
push
cmp
or
dec
mov
dec
bound
xchg
mov
xor
and
je
stc
int
xchg
mov
add
push
jo
fidivr
out
xchg
outs
pop
xchg
cdq
mov
xor
add
sbb
xor
pop
lock
sub
push
lods
out
adc
outs
jp
mov
sub
add
xlat
mul
jb
shr
jge
xor
inc
xlat
sti
xor
(bad)
out
aas
fnstenv
mov
pop
aas
jle
jnp
mov
pusha
xchg
add
or
popf
pop
push
xchg
shl
mov
cmp
pop
mov
mov
adc
inc
ss
cmp
add
mov
sub
inc
mov
adc
jle
push
ss
mov
inc
rcl
sar
loopne
xor
mov
cmp
out
leave
push
enter
shl
cmp
sbb
sub
fdivr
xadd
retf
psubq
out
cmc
sbb
add
pop
jbe
(bad)
fcomp
inc
xor
or
pop
and
sub
cmp
push
add
rol
fisubr
and
(bad)
xor
mov
ins
xor
cmp
xor
(bad)
jge
adc
int
sub
push
dec
pop
scas
sbb
lock
mov
mov
and
mov
sub
int
mov
dec
xor
jl
pop
xchg
(bad)
out
(bad)
pop
pop
psubq
sub
arpl
add
pop
ror
loop
fisttp
cmp
pop
cld
popa
aad
xor
cld
jbe
retf
popa
loop
mov
inc
inc
stos
lds
mov
jns
xor
cmp
and
add
mov
push
into
retf
movs
lds
out
pop
icebp
stos
and
cdq
mov
add
pop
fdiv
push
sub
sti
dec
dec
lock
rol
aad
or
sub
ret
push
push
loop
fdiv
pop
addr16
sbb
jmp
sbb
push
inc
sbb
cs
or
clc
ret
fwait
xor
mov
pop
loop
mov
mov
les
pushf
adc
pop
out
iret
int3
fwait
lea
sub
lock
jle
inc
and
jl
test
ja
sbb
std
mov
stos
mov
and
fs
test
dec
and
clc
pusha
jae
cmp
sahf
dec
dec
sbb
retf
shl
cmps
nop
in
dec
out
rcr
add
addr16
fisttp
test
test
pop
jno
xor
les
jns
aas
adc
mov
jnp
dec
sub
fisttp
mov
int3
and
inc
inc
or
cmp
mov
xchg
or
ins
mov
jae
mov
mov
cli
add
jmp
add
leave
add
adc
out
jnp
adc
xchg
test
mov
and
stos
outs
(bad)
mov
cld
fiadd
xchg
dec
sub
jge
or
mov
push
pop
pop
test
mov
pusha
pusha
cmp
jo
int3
mov
cs
retf
cmp
movs
jmp
xchg
stc
js
aaa
xor
jle
mov
in
mov
inc
mov
aam
adc
sahf
fcomp
xchg
es
aas
cs
push
lds
loop
mov
sbb
scas
cmc
mov
mov
sub
xchg
adc
cdq
ins
jno
or
push
lds
mov
jmp
push
cmp
ins
cdq
pop
add
sbb
xor
jbe
jecxz
and
cwde
push
cmps
cmc
dec
fistp
xchg
mov
inc
lods
xor
adc
or
ror
add
mov
adc
ins
stos
or
and
je
std
xchg
pop
jge
retf
mov
int
cmp
or
imul
and
push
inc
and
inc
mov
(bad)
(bad)
adc
lock
xor
mov
mov
inc
imul
adc
gs
cmp
lock
cli
cmp
add
aad
popa
push
das
jmp
push
sub
test
ret
lock
(bad)
jmp
das
mov
jg
hlt
dec
pusha
cmps
jns
sub
dec
jg
daa
aad
test
ret
jns
push
mov
mov
pop
push
and
ss
pop
pop
fwait
and
addr16
not
shld
fcom
das
pop
ret
and
mov
lods
repz
je
xlat
pop
jns
les
(bad)
push
mov
(bad)
cmp
jo
pop
aad
stos
dec
inc
js
cmp
mov
pop
push
dec
cmp
cs
je
cdq
inc
je
mov
pushf
pop
inc
xchg
push
jge
dec
(bad)
(bad)
pop
pop
sahf
in
(bad)
repz
pop
loop
and
xor
mov
mov
mov
mov
outs
icebp
icebp
jl
arpl
fwait
das
dec
jg
mov
or
lds
leave
inc
push
(bad)
int
bound
outs
mov
fs
mov
mov
ds
cmp
adc
push
push
fdivp
lds
inc
pop
xchg
sub
test
sar
dec
fmul
ss
xor
xor
add
pop
xor
int
jae
xlat
fdiv
cmp
sub
retf
add
ret
(bad)
xchg
or
jp
and
into
mov
cwde
clc
sub
sub
mov
stc
add
mov
std
je
sbb
je
mov
or
or
repnz
dec
in
jmp
mov
or
and
or
aam
push
cmp
sti
retf
lds
loope
test
call
mov
adc
sbb
jp
mov
(bad)
adc
pop
add
jmp
out
fsub
inc
xor
push
or
cmp
mov
dec
loop
adc
jmp
shl
push
jbe
int
sbb
xor
mov
add
xchg
imul
xchg
cld
or
pusha
adc
je
and
mov
push
and
data16
inc
jmp
ret
aam
pushf
sti
cdq
mov
dec
sub
cdq
jmp
or
adc
inc
jnp
out
add
(bad)
mov
inc
inc
push
stos
cmp
dec
popf
jle
icebp
mov
in
ficomp
nop
dec
add
lds
ror
add
fisttp
jb
mov
fidiv
out
sub
popf
xor
and
fidiv
cmp
sub
xchg
push
or
imul
pop
iret
jo
add
mov
stos
jmp
in
or
cmc
ret
mov
push
lods
push
sbb
fdiv
cmp
cmc
js
or
in
mov
popa
jge
fs
fidiv
or
inc
sub
iret
retf
mul
jae
mov
jnp
dec
out
ins
mov
jge
adc
jno
add
arpl
pop
push
cmc
outs
inc
aad
pop
fnstcw
ins
adc
in
push
std
cmps
xchg
push
mov
scas
mov
inc
(bad)
fcomp
sub
test
cs
fcomp
mov
int3
xor
(bad)
pop
jmp
in
mov
xchg
xlat
and
mov
and
add
clc
fiadd
xchg
cdq
sub
dec
js
inc
push
xchg
cmp
(bad)
and
inc
xor
sub
jmp
outs
hlt
inc
inc
xor
xchg
inc
test
jl
pop
mov
dec
inc
shl
ss
xchg
cmp
out
ins
pop
js
aas
fsub
push
test
cmp
push
ficomp
xchg
mov
ret
jl
add
outs
cmps
xchg
dec
call
data16
je
and
dec
sbb
xchg
jp
cmps
sub
add
mov
push
sub
inc
add
sahf
jecxz
shr
(bad)
and
packssdw
pop
out
(bad)
out
scas
or
retf
cmp
lea
push
push
mov
in
xchg
imul
imul
mov
push
cli
xchg
xor
add
je
shl
int3
scas
scas
int3
xchg
arpl
iret
ret
inc
imul
mov
cmp
ss
mov
das
mov
add
cmp
call
ror
and
and
leave
pop
adc
pop
repz
sahf
sub
cmp
or
les
jns
inc
sub
adc
mov
ficom
mov
mov
jecxz
movs
imul
sbb
jo
add
and
sub
fld
gs
or
mov
add
dec
add
push
ret
idiv
arpl
xor
out
fistp
mov
(bad)
inc
cs
stc
mov
clc
cmps
(bad)
out
mov
adc
mov
icebp
stos
pop
js
sbb
scas
hlt
or
icebp
cli
pop
lods
push
pop
lahf
aam
dec
jns
and
lods
mov
clc
cmc
bound
imul
mov
je
pop
jle
inc
in
adc
xchg
xor
xor
aas
(bad)
adc
fld
in
gs
dec
(bad)
test
cmp
mov
or
add
pusha
dec
test
cmp
mov
fst
fmul
ret
and
aad
fdivr
mov
dec
dec
scas
repnz
repz
sub
test
adc
(bad)
int
in
inc
imul
out
nop
js
add
sub
nop
mov
cmps
jbe
mov
mov
enter
push
jns
xchg
mov
nop
inc
mov
push
es
mov
outs
in
mov
js
sub
loope
aas
push
xor
sbb
xchg
out
(bad)
call
mov
and
mov
or
mov
adc
ss
jae
xlat
push
es
sub
enter
call
and
mov
inc
cli
fmul
stos
rcr
push
cmp
(bad)
lahf
ja
lds
imul
and
xor
add
push
or
jb
ret
arpl
xchg
jmp
rcr
jo
cmc
pop
pop
jo
add
out
out
sub
jmp
aas
mov
loop
sahf
scas
mov
pop
test
outs
xchg
mov
and
fadd
fiadd
adc
xchg
sbb
or
adc
inc
jmp
sub
std
lahf
or
jmp
mov
sahf
test
data16
(bad)
out
pop
cmp
idiv
pop
int
aas
scas
xchg
shl
push
movs
aaa
jl
je
leave
dec
fmulp
icebp
cli
cmp
inc
pop
mov
inc
jmp
sti
or
sub
mov
cmp
cmp
mov
and
xor
retf
pop
mov
jmp
into
cli
fwait
ins
mov
fnstsw
cmps
or
(bad)
adc
push
movs
das
mov
sbb
jmp
push
test
sub
jno
sar
push
mov
rcl
rcl
adc
inc
call
pop
fldcw
inc
cmc
xchg
cmps
imul
int
pop
popa
push
pop
scas
outs
inc
retf
push
aaa
repz
xchg
pop
ret
cmp
sub
shl
out
(bad)
rcr
inc
stc
lea
arpl
xchg
mov
pop
push
push
hlt
popf
cmp
scas
lock
rol
stos
cmp
es
mov
(bad)
outs
xor
shl
pop
jge
mov
sbb
cmps
dec
ja
mov
mov
dec
das
push
pushf
inc
mov
inc
add
movs
jno
rol
pop
mov
mov
push
lds
jmp
and
sub
inc
jecxz
sub
sub
fwait
push
sub
adc
pop
add
test
xor
test
test
ins
dec
inc
addr16
cmp
jle
mov
mov
sub
mov
pop
ret
jle
mov
xor
and
jnp
shl
push
mov
(bad)
adc
gs
and
stos
push
test
jnp
arpl
loop
mov
dec
repz
icebp
push
std
push
out
inc
icebp
cmps
dec
scas
dec
test
sub
packsswb
es
push
pop
imul
jno
addr16
jecxz
gs
cmp
push
pop
cld
test
inc
push
cmp
movs
sub
das
mov
pusha
in
setns
in
push
pop
(bad)
push
push
cwde
loope
sub
in
outs
ja
inc
jl
sub
imul
dec
cdq
ja
cmp
cwde
sbb
popa
mov
mov
adc
cdq
cli
jnp
rcr
retf
ins
bsf
mov
(bad)
ins
jge
inc
(bad)
(bad)
pop
loope
pop
aam
xlat
adc
adc
push
xor
scas
pop
mov
test
pop
cmp
daa
pop
jo
out
pop
repz
xor
(bad)
xor
sbb
fwait
adc
les
add
out
lea
and
fadd
mov
or
push
push
lock
cmp
mov
sub
push
dec
ffreep
mov
jno
dec
mov
outs
jmp
xor
lea
mov
retf
sbb
mov
(bad)
(bad)
add
fcom
std
(bad)
add
cmp
mov
loope
outs
push
inc
movs
scas
or
add
scas
add
dec
cmp
stos
loope
stos
fstp
lahf
xchg
or
stc
mov
imul
sbb
das
dec
(bad)
sub
sti
retf
push
sbb
add
mov
popa
sub
and
fidiv
add
fcmovb
and
add
bound
xor
mov
pop
add
mov
leave
and
sbb
mov
shl
mov
aam
or
imul
aad
(bad)
add
out
sub
xchg
loope
shl
scas
push
sbb
mov
sbb
dec
sar
ret
cmp
or
sbb
loopne
pop
add
and
stos
push
std
imul
(bad)
pop
mov
or
in
pop
push
popa
mov
ins
(bad)
fcomip
and
inc
and
jmp
push
and
push
lahf
pop
xchg
imul
add
mov
sar
pop
es
data16
xchg
ret
sub
jmp
push
jne
(bad)
pop
cmp
add
push
movs
loope
stos
sbb
fs
dec
movs
adc
pop
adc
push
inc
pop
adc
mov
cmc
add
sub
cdq
retf
dec
in
mov
jl
scas
cmp
retf
jp
pop
push
jp
xor
cmp
or
cmp
cmp
pusha
iret
stos
xchg
shl
fldcw
and
(bad)
mov
mov
hlt
pop
cmp
fcmovnb
push
pop
ds
sub
push
pop
dec
mov
xchg
(bad)
addr16
dec
pop
mov
inc
movs
inc
(bad)
pop
imul
mov
mov
push
xor
dec
lea
pop
cld
out
(bad)
mov
inc
add
inc
xor
mov
pop
test
xor
adc
jl
adc
or
push
sbb
or
daa
pop
out
out
sbb
xor
test
inc
sti
sbb
xor
pushf
mov
sub
add
jb
push
xor
mov
sbb
fidivr
cli
push
inc
mov
sub
fld
jmp
push
mov
jae
mov
ret
mov
cdq
mov
dec
mov
out
mov
lahf
push
int3
cmps
sub
xor
mov
pop
pop
xor
pop
and
push
int
mov
pop
outs
adc
(bad)
imul
jle
jge
push
sub
mov
arpl
icebp
mov
stc
sbb
retf
jae
(bad)
shl
cmp
(bad)
jo
outs
cmps
ficom
mov
sub
jbe
jge
dec
aad
inc
adc
shl
and
popf
imul
addr16
pop
daa
xor
mov
mov
mov
cmp
cmp
into
adc
out
leave
(bad)
clc
mov
inc
rol
scas
mov
sub
jl
ins
sbb
sar
scas
cmp
popa
jle
rcr
sahf
cwde
fdiv
inc
jns
pop
mov
inc
mov
jb
fsub
push
push
pushf
push
adc
(bad)
push
bound
adc
mov
std
pop
inc
iret
in
popf
lods
movs
out
and
ins
ins
sti
sbb
xor
mov
pushf
scas
loop
cwde
cmp
inc
inc
popf
lods
jmp
pop
lahf
cmp
pop
or
imul
retf
mov
daa
push
arpl
outs
stos
enter
nop
into
add
loopne
jle
mov
push
test
addr16
cli
in
mov
pusha
(bad)
bound
clc
retf
or
aad
adc
sbb
outs
cmp
sbb
lock
leave
or
ins
nop
push
loopne
into
ror
lods
scas
xchg
cmp
test
dec
les
inc
mov
faddp
aad
adc
mov
xor
std
aas
pop
pop
xor
push
mov
fdivr
add
push
jmp
out
inc
jmp
mov
daa
dec
jae
fcomp
push
jnp
movs
iret
arpl
pushf
xchg
and
in
mov
and
cmp
loop
cmp
cmp
jne
cs
arpl
pop
ins
mov
add
and
cmps
cmc
fcomp
inc
cmps
fwait
je
and
jecxz
(bad)
xchg
push
sub
xlat
xor
mov
jmp
into
call
sub
jmp
ret
das
mov
ds
popa
(bad)
and
das
bound
sub
push
sar
fwait
sub
mov
sub
loopne
cmps
xchg
adc
lock
jl
mov
pop
xchg
test
icebp
or
cmp
or
mov
push
xor
sti
cwde
cmp
jge
adc
call
jno
mov
xor
xlat
fsubr
imul
xchg
cmps
xchg
jecxz
push
test
push
into
and
out
pop
mov
sbb
leave
ror
sbb
aas
imul
jo
inc
(bad)
xchg
data16
push
inc
or
js
iret
mov
push
jp
test
mov
xor
nop
xor
inc
sti
(bad)
imul
inc
jl
and
imul
in
out
(bad)
adc
jmp
shr
adc
sbb
xchg
and
push
sbb
lods
cmps
xchg
cmp
stc
xchg
ret
dec
add
xchg
inc
dec
sbb
push
movs
xchg
and
inc
repnz
jnp
iret
pop
mov
aas
xor
sub
sbb
sbb
fwait
lds
fadd
aaa
jae
mov
movs
idiv
jmp
push
add
mov
enter
adc
gs
retf
cwde
and
in
mov
imul
ins
(bad)
lea
push
and
xor
mov
dec
ins
(bad)
das
mov
call
cmps
push
ja
mov
movs
mov
jmp
mov
mov
imul
jmp
sbb
xchg
adc
mov
cmp
les
mov
dec
test
xchg
cdq
mov
fist
adc
bound
mov
nop
jle
sahf
sub
and
mov
cmc
repz
sub
dec
out
out
dec
es
adc
cmp
dec
mov
pushf
xchg
inc
push
jnp
into
dec
add
mov
jge
out
dec
adc
sbb
out
push
psubb
aad
stc
jg
(bad)
jne
aam
in
mov
jmp
aad
push
fcomp
inc
jmp
movs
mov
test
nop
cmp
mov
ja
imul
sar
icebp
jbe
loope
fscale
cmp
addr16
cmp
dec
sub
sub
push
pop
movs
mov
jmp
lods
or
mov
add
mov
shl
jle
rcl
mov
jge
jnp
ficom
mov
iret
jecxz
lahf
push
xlat
shl
shl
rcl
adc
cmc
sbb
rcr
out
mov
inc
dec
xor
bound
cli
mov
jns
dec
test
mov
push
or
xchg
push
lds
cmp
cmp
or
xchg
sub
sub
addr16
fnsave
in
xor
leave
std
mov
(bad)
mov
call
test
imul
stos
pop
push
sahf
out
xor
(bad)
cmps
ror
ins
ins
in
leave
and
fcmove
bound
loope
imul
adc
pop
(bad)
jg
sbb
outs
inc
aas
movs
ins
xchg
pop
cmp
cdq
aad
sub
pop
scas
movs
push
cmp
adc
cmps
(bad)
pop
mov
push
shl
mov
imul
imul
and
jle
cmc
jo
(bad)
mov
into
mov
add
cmp
xchg
and
adc
fisttp
pop
xchg
xchg
mov
scas
(bad)
xchg
cs
inc
xchg
sub
cmp
jl
or
mov
or
push
xchg
and
mov
mov
lock
pop
mov
adc
dec
sbb
inc
adc
jmp
fistp
mov
pop
popf
and
nop
and
xchg
mov
mov
push
pop
pop
xor
cli
xor
sub
push
push
dec
jne
pop
mov
push
inc
test
jns
shr
jno
dec
jns
or
clc
and
mov
test
add
mov
ins
mov
xlat
pop
enter
fsub
mov
push
push
mov
scas
pop
lds
jmp
pusha
push
outs
or
int3
(bad)
in
popf
xor
xor
shl
hlt
hlt
dec
pminub
test
hlt
pop
gs
call
int3
iret
call
scas
in
jns
ds
out
test
jg
movaps
(bad)
jmp
jb
sbb
ret
fist
jmp
sti
es
leave
sub
pop
cmps
scas
xchg
sub
stos
push
push
mov
scas
mov
sub
or
cli
pop
loope
pop
adc
or
jbe
ror
or
mov
add
add
daa
lea
test
les
lods
push
or
xor
bound
mov
jmp
xchg
mov
into
dec
imul
out
retf
add
push
mov
adc
mov
cdq
je
pop
sub
mov
movs
adc
and
cmp
in
sub
aas
lock
fisubr
ins
cmp
jge
gs
fcomp
sbb
push
inc
leave
fnstsw
pop
mov
nop
pop
ss
movs
or
in
int3
xchg
add
repz
mov
lock
mov
xlat
add
cmc
inc
jo
jecxz
cmp
stc
test
dec
in
js
sar
data16
pushf
push
pop
sbb
add
scas
mov
and
xor
sub
les
mov
shr
cli
bound
mov
dec
inc
jae
test
adc
adc
ret
cmps
mov
xor
dec
neg
jle
jae
adc
das
iret
add
push
into
jmp
les
pop
loope
pusha
cmp
call
mov
(bad)
(bad)
imul
stc
in
ss
jmp
or
clc
dec
sbb
mov
pop
push
mov
pop
sar
cli
leave
les
arpl
xchg
fisubr
pop
rcr
xchg
ja
add
dec
jbe
scas
push
mov
cmps
jecxz
xor
push
cmp
bound
ret
scas
jmp
hlt
lahf
in
mov
movs
pop
mov
retf
int
add
call
pop
in
add
adc
ins
stos
jnp
stc
pop
xchg
(bad)
push
xlat
add
sub
or
fisttp
fwait
stos
ja
adc
aas
xchg
rcl
mov
aas
fistp
ss
push
xor
dec
jg
rol
cmp
enter
fs
outs
les
iret
rcl
xchg
(bad)
movs
sar
(bad)
loop
sahf
cmp
ja
jb
lods
and
ds
sbb
ret
popa
jns
dec
jge
sub
push
call
mov
dec
jnp
mov
repnz
cmp
push
pop
aad
add
(bad)
in
lods
das
lds
out
cmp
cmp
mov
scas
and
adc
push
adc
cmp
mov
xchg
lock
add
ret
dec
inc
inc
and
mov
or
jle
add
(bad)
push
sti
ins
lods
in
ret
mov
push
movlps
(bad)
mov
and
outs
pusha
pop
stos
enter
dec
push
ja
xlat
mov
aam
sub
ret
adc
sar
fadd
ja
fistp
retf
iret
mov
mov
popf
add
jmp
fidivr
inc
mov
lds
inc
cmp
mov
leave
in
push
mov
jno
cld
sahf
dec
sbb
mov
iret
jnp
in
xchg
pop
sbb
inc
mov
and
mov
in
fistp
jbe
psubd
inc
dec
aad
leave
xor
pop
fld
dec
retf
or
stos
sub
dec
repnz
jno
scas
or
jbe
inc
pop
in
or
popf
retf
and
push
ror
sbb
jb
sbb
repz
aaa
inc
sub
popf
stc
ins
xchg
pop
pushf
add
dec
fdiv
pop
imul
sbb
mov
xor
sbb
mov
fsub
stos
sbb
rol
call
xor
push
xchg
adc
call
adc
sub
das
sti
fucomi
jb
jmp
stc
fwait
loope
sar
sbb
inc
mov
ins
inc
mov
pop
pusha
sub
je
es
out
pushf
xchg
mov
shl
or
cld
mov
cmps
scas
inc
adc
div
add
mov
mov
dec
jnp
push
repnz
inc
cmps
push
dec
or
jae
aaa
daa
ficomp
pop
dec
jg
pop
sub
fcmovnb
jp
sub
clc
rol
sub
(bad)
ftst
aad
sub
int3
mov
or
xor
int
or
push
sbb
sbb
jmp
pop
jecxz
and
xor
sbb
sub
mov
mov
cmp
add
gs
(bad)
cmp
sub
aas
xchg
xor
xchg
mov
dec
loop
out
(bad)
jnp
cwde
jge
loope
mov
jmp
mov
push
(bad)
sub
stos
(bad)
ret
mov
iret
cdq
out
test
sub
aas
call
(bad)
xchg
notrack
dec
fs
das
pushf
or
fisub
daa
sahf
icebp
xor
dec
and
clc
jg
outs
pop
sbb
push
push
mov
pop
jns
pop
pushf
push
mov
es
sbb
mov
xor
jbe
in
mov
inc
push
inc
jmp
test
pop
not
pop
sti
cmps
outs
sahf
and
xchg
fld
aaa
test
lock
sub
mov
pusha
inc
(bad)
xchg
jmp
jmp
adc
retf
dec
xchg
clc
pop
cmp
mov
ins
sti
mov
aam
movs
fist
(bad)
movs
enter
lock
jle
aas
aas
xor
test
icebp
or
or
xor
inc
sub
clc
in
mov
jb
or
imul
pop
daa
and
ins
mov
aas
or
dec
mov
xor
and
push
xchg
mov
pop
fsubrp
dec
jle
shl
mov
ss
cli
outs
lods
jnp
inc
jnp
in
sbb
xor
xlat
add
arpl
test
mov
ret
lods
cmp
mov
and
test
addr16
das
sub
mov
clc
xchg
sub
sub
pop
or
and
mov
push
(bad)
mov
push
add
sbb
mov
in
sti
ds
xor
inc
pop
sub
cmp
in
jmp
mov
fmul
das
and
xchg
stos
or
aas
mov
jo
test
pop
mov
stos
fisubr
call
fs
cld
lea
xchg
clc
fwait
adc
xchg
pop
xlat
in
retf
and
mov
inc
mov
repz
jo
ins
mov
push
outs
inc
mov
enter
repz
(bad)
jl
shl
mov
hlt
arpl
mov
lsl
inc
out
mov
sbb
shl
fs
sbb
add
in
repz
xchg
jmp
xchg
adc
(bad)
push
inc
rol
fsubr
inc
movs
aaa
clc
xchg
mov
or
aaa
mov
xor
out
push
stos
push
iretw
mov
jmp
retf
std
adc
mov
jno
or
(bad)
(bad)
movs
mov
cmp
mov
imul
jge
sbb
mov
hlt
retf
lods
int
inc
call
mov
push
cmp
nop
adc
jo
js
hlt
jmp
dec
dec
and
sar
dec
inc
lods
push
(bad)
mov
xchg
cmp
aad
inc
push
pop
or
in
cmp
shl
ins
bound
push
or
dec
add
ins
mov
(bad)
or
fstp
sbb
dec
or
jo
das
mov
clc
jle
pop
mov
and
mov
xchg
sti
popa
repnz
out
adc
xor
fcom
movs
inc
mov
popf
sub
hlt
xor
cmp
pop
jb
mov
xor
jecxz
cld
outs
mov
aad
cmp
pusha
lea
inc
jp
cmp
or
cld
ret
ja
mov
(bad)
sbb
arpl
lds
sahf
clc
jbe
imul
lods
imul
nop
jge
(bad)
shl
(bad)
je
movs
jae
sub
aad
ins
fidiv
mov
icebp
mov
cmps
shl
outs
mov
push
pop
loope
into
mov
int
pop
push
push
jns
pop
(bad)
dec
in
sahf
or
pop
adc
scas
test
xor
lahf
sub
xor
mov
scas
mov
adc
(bad)
pop
sub
push
js
mov
cwde
and
or
(bad)
neg
data16
loop
mov
mov
or
dec
or
(bad)
pop
fldcw
nop
sub
shl
cmp
and
fcomp
inc
fst
sbb
cmp
pushf
jl
test
inc
fimul
pop
mov
imul
xor
cmp
adc
enter
mov
jbe
aad
pop
sub
pop
push
icebp
sar
or
cmp
jo
iret
adc
repz
jg
xchg
mov
ins
or
jb
push
mov
add
xchg
test
ror
iret
call
popf
sbb
data16
xchg
lods
loopne
sub
enter
loop
ds
pop
ja
in
jl
mov
fiadd
(bad)
fist
adc
in
cdq
outs
cld
pusha
clc
shr
cmp
or
adc
and
int3
xchg
stos
bound
push
lahf
bound
aam
fimul
es
repnz
sbb
in
rcr
or
pop
adc
imul
and
dec
inc
ror
mov
inc
sbb
xchg
fsub
mov
sbb
jle
lods
dec
and
jbe
push
xor
enter
std
mov
imul
call
into
xor
int3
sbb
fld
dec
mov
push
cmp
aad
(bad)
xor
sti
arpl
enter
in
ret
add
sqrtps
xchg
dec
out
pop
inc
js
jecxz
xor
pop
fst
test
es
jmp
iret
data16
push
pop
sub
and
loope
div
lods
adc
xor
mov
mov
inc
test
add
push
push
add
fistp
test
stos
xlat
movs
arpl
mov
jnp
in
pop
fist
inc
lods
repz
cmps
mov
sub
stc
js
add
push
mov
push
imul
add
sti
push
fs
or
pop
jmp
mov
lds
mov
sahf
inc
cmp
js
inc
adc
(bad)
rcl
jmp
rcl
shl
push
nop
jmp
cwde
imul
inc
inc
jecxz
dec
(bad)
retf
xlat
push
int
jge
and
push
lock
cmp
jbe
into
inc
sub
cdq
pop
push
leave
outs
mov
imul
call
dec
neg
ffree
add
(bad)
outs
cmp
add
aas
and
or
push
shl
adc
(bad)
sub
clc
icebp
xor
mov
aas
dec
loopne
loope
and
ja
and
mov
fs
or
mov
repnz
scas
xor
mov
(bad)
das
leave
repz
out
push
ret
dec
xor
lods
imul
imul
inc
jle
pop
inc
ss
dec
mov
shr
sbb
sub
(bad)
bound
mov
or
inc
adc
pusha
inc
inc
mov
pop
jge
xchg
fiadd
pop
cmp
outs
frstor
or
imul
mov
jp
cwde
inc
sbb
cmps
mov
dec
fisttp
addr16
pusha
push
jle
mov
cmps
push
sub
add
sbb
bound
sbb
cmp
stos
xchg
pop
cmp
mov
sti
xchg
je
mov
mov
sub
movs
movs
jg
(bad)
fwait
cld
xchg
push
push
into
iret
ins
jae
dec
jbe
fnstenv
ret
shl
ss
imul
sbb
fistp
cmp
rol
dec
add
mov
mov
imul
jo
sbb
mov
shr
mov
lock
sub
inc
or
sub
popa
add
aad
xor
call
jmp
popa
sub
dec
popa
xchg
out
adc
push
nop
rol
cli
dec
ficomp
mov
test
out
ror
push
js
fist
xlat
inc
cmc
sti
mov
xchg
and
adc
stos
rol
adc
int3
mov
in
sbb
loop
clc
shl
jb
arpl
push
loope
dec
movs
scas
pop
retf
call
adc
ret
mov
es
push
test
pop
lahf
rol
adc
test
pop
and
pop
push
enter
mov
xor
sbb
xor
sbb
and
xor
or
jo
xchg
hlt
add
adc
fdiv
fistp
outs
jmp
nop
ins
lahf
aaa
add
pusha
(bad)
les
inc
dec
test
ret
stos
jbe
out
xlat
push
jl
imul
shr
dec
mov
adc
arpl
adc
(bad)
adc
push
movs
ror
xor
cmps
cmp
imul
mov
cs
(bad)
xchg
cld
push
xor
jbe
push
mov
test
push
popf
or
scas
push
pop
stos
sbb
js
sar
ffreep
mov
outs
ss
scas
jno
jbe
clc
scas
(bad)
sahf
in
stc
push
hlt
push
add
pop
or
sub
(bad)
cs
cmp
mov
lahf
sahf
mov
push
shl
push
not
sub
jne
in
xor
idiv
stos
pop
ret
loope
xchg
sub
popa
mov
add
daa
repz
cmp
or
adc
idiv
jbe
fistp
les
cmp
xchg
add
aaa
pop
loop
rol
sbb
shr
cld
jmp
(bad)
lock
dec
xchg
cmp
sbb
pusha
cmps
cdq
cmp
scas
(bad)
fwait
mov
dec
xor
or
jae
push
xlat
inc
xor
cdq
jle
xchg
popa
arpl
hlt
pop
pop
idiv
xchg
sub
mov
jbe
data16
sahf
xor
xor
sbb
movs
loope
ret
add
xchg
inc
sbb
repnz
dec
lock
hlt
push
fdivr
pop
push
addr16
es
(bad)
lock
mov
inc
cmp
xor
lods
call
push
nop
mov
sub
cmp
je
adc
inc
adc
and
sbb
aas
add
fcomp
shr
cld
push
outs
xor
dec
sbb
leave
lods
(bad)
xchg
aas
and
rol
imul
ret
add
mov
lods
push
and
sub
push
fsub
hlt
int3
jle
jo
and
cwde
scas
rcr
js
outs
lods
ffree
imul
dec
test
sub
add
in
aas
sub
jp
test
mov
or
and
lds
xchg
push
dec
jmp
test
rcl
mov
test
xchg
cmp
sbb
lods
outs
push
stos
sbb
inc
add
adc
fstp
jg
outs
pop
push
xor
pop
push
push
add
iret
outs
adc
lock
xchg
ins
mov
push
iret
aaa
out
ss
mov
stos
retf
cld
loop
add
test
arpl
or
outs
and
(bad)
jecxz
jg
cmp
adc
das
inc
fs
ins
retf
lods
js
cwde
cdq
daa
dec
mov
sbb
pop
jb
cwde
jb
sbb
cli
(bad)
out
cmp
dec
xchg
fidivr
xchg
cmp
push
sbb
sar
sub
call
popa
pop
sub
out
cdq
or
sub
xor
pop
iret
sbb
pop
mov
mov
pop
cmp
ds
je
sbb
lods
push
mov
fstp
push
push
arpl
in
sub
pop
ud0
iret
or
xor
fs
lock
or
add
mov
add
scas
lods
in
fstp
lahf
push
int
jg
sbb
hlt
test
fwait
loope
and
pushf
mov
clc
add
mov
in
and
xchg
jl
lods
ins
std
mov
jl
mov
fild
dec
loop
pop
fwait
inc
and
push
js
mov
pop
or
xor
in
imul
adc
arpl
cwde
mov
xor
cdq
cmp
adc
inc
aaa
int
or
mov
hlt
aaa
nop
imul
xor
sub
movs
(bad)
dec
fs
push
cmp
cmp
sub
pop
xchg
sub
div
xor
xchg
rcr
xlat
jns
js
or
pop
fchs
push
mov
jne
push
inc
xchg
jecxz
xchg
dec
pusha
sub
aaa
jmp
xor
pop
sbb
mov
push
or
test
(bad)
cld
mov
sbb
addr16
sub
adc
pop
mov
mov
cmp
fisttp
ja
add
into
mov
xchg
ss
dec
inc
inc
push
rol
cmp
leave
ss
icebp
dec
les
in
scas
scas
pop
(bad)
pop
call
mov
add
outs
push
mov
mov
dec
adc
dec
adc
mov
sub
xchg
mov
mov
or
sbb
xor
dec
mov
inc
or
dec
add
loope
retf
dec
and
retf
mov
xchg
jnp
(bad)
push
imul
jns
mov
jmp
stos
(bad)
ins
jno
sub
dec
sbb
rol
or
ret
mov
pop
jne
loope
cmc
or
xchg
mov
loop
sbb
stc
fbstp
loope
inc
xor
mov
sar
bound
pop
xchg
je
mov
fsubr
adc
xor
clc
push
js
fprem
push
hlt
add
or
add
ds
arpl
and
mov
dec
push
imul
mov
(bad)
or
jl
add
push
inc
jmp
mov
(bad)
mov
je
out
outs
(bad)
xor
adc
test
cmp
and
fbstp
cdq
adc
cwde
mov
pop
xchg
sbb
cmp
adc
sahf
nop
call
jle
in
cmps
test
fidivr
pop
pop
mov
hlt
push
inc
mov
xchg
scas
sub
vpaddsw
cwde
sti
jne
fist
jl
imul
jno
cmp
pop
cmps
mov
and
(bad)
dec
mov
push
mov
push
das
jg
sbb
lahf
aas
(bad)
mov
jge
push
repz
mov
or
je
xor
push
into
pop
adc
ret
jl
mov
cmp
in
and
lds
sbb
pop
push
rol
pop
imul
xor
jmp
or
sti
test
adc
jmp
fwait
xchg
push
jg
test
jbe
jo
push
add
sbb
push
dec
cmp
out
add
add
mov
shl
aaa
jge
out
imul
loop
jg
shr
cmp
sti
add
aaa
retf
and
ja
clc
mov
dec
mov
sti
repnz
mov
call
sbb
cmp
ret
push
ret
(bad)
mov
xor
test
mov
pop
xor
push
repnz
pop
popf
mov
iret
mov
sub
dec
test
adc
sbb
jl
add
imul
sbb
push
mov
stc
out
pop
rcr
xchg
(bad)
add
inc
pop
idiv
loop
js
call
int
sub
add
lds
pop
mov
es
sbb
mov
jl
lods
mov
test
stos
and
ins
cmp
dec
loope
clc
xchg
lea
add
inc
mov
stos
cs
dec
ret
iret
ins
and
sbb
out
stos
test
add
push
lock
das
jmp
sub
inc
push
test
add
ins
cmp
outs
xchg
outs
inc
sbb
mov
mov
popa
xchg
fild
repnz
and
retf
ret
shr
ror
retf
(bad)
das
das
jbe
mov
aas
not
out
loopne
aaa
sbb
pop
shl
lds
lahf
scas
test
add
call
jg
sub
nop
cmp
push
push
sbb
mov
push
push
ficomp
daa
xchg
fcomp
and
bound
movs
(bad)
fld
mov
add
mov
test
cmp
pop
mov
xchg
out
lds
xor
scas
pushf
inc
adc
cmp
ret
mov
cmps
es
mov
push
repnz
xchg
inc
jmp
fist
sahf
or
xchg
push
pop
out
push
dec
movs
push
or
push
imul
adc
mul
jns
in
jmp
mov
(bad)
aad
mov
scas
(bad)
shl
sbb
inc
pop
loop
xor
pop
shr
cmps
cmp
and
std
mov
out
gs
sub
outs
movs
jmp
and
push
popf
ins
mov
cwde
mov
xchg
push
movs
test
xlat
mov
xor
loope
outs
push
cmps
rol
jmp
xor
and
stos
sahf
mov
cmps
mov
pop
(bad)
or
xor
mov
sub
bnd
xchg
inc
cmp
dec
cmp
repnz
rol
fs
sub
shl
dec
jmp
frstor
cmp
into
xchg
cmps
stos
dec
fwait
inc
or
xor
push
jge
sbb
addr16
lds
xchg
into
in
lods
fisubr
mov
or
int3
fucomip
jmp
push
sbb
or
and
and
jo
push
scas
call
test
sub
mov
mov
call
cmps
xchg
sbb
push
rcl
jae
fdiv
or
push
inc
outs
pop
(bad)
sbb
stos
ror
jne
out
mov
xchg
sub
ins
xchg
and
xchg
jg
arpl
sub
nop
je
xor
addr16
sbb
push
mov
xchg
je
mov
je
rol
mul
adc
xor
popa
mov
fwait
push
test
js
sbb
mov
mov
(bad)
mov
or
jo
nop
xchg
js
xor
ret
inc
fadd
xchg
pushf
popf
cmps
push
imul
mov
adc
mov
cmp
pushf
popf
xor
addr16
out
mov
mov
mov
cmp
dec
inc
in
or
jae
adc
mov
setns
(bad)
sti
dec
xchg
(bad)
sub
xor
sahf
in
retf
sbb
fcmove
sbb
(bad)
fld
inc
mov
cmp
ins
fwait
add
popa
mov
or
into
cmpxchg
adc
add
fisubr
leave
fstp
xor
push
fidiv
movs
jecxz
add
lahf
imul
push
dec
xchg
add
mov
fbstp
fs
ja
pop
sahf
(bad)
out
ins
sub
shr
repnz
idiv
call
jecxz
(bad)
mov
retf
js
pop
pop
(bad)
(bad)
mov
xchg
mov
stos
pushf
dec
mov
call
push
jnp
stos
cmps
and
push
jbe
jae
dec
xor
in
pop
sbb
retf
sbb
pop
fcompp
mov
fadd
mov
inc
xor
into
mov
sub
mov
sub
xor
push
mov
popf
(bad)
fsubr
fidivr
add
jo
mov
mov
mov
xchg
lods
(bad)
lods
cld
or
test
xchg
cmps
aas
adc
mov
je
or
push
jb
mov
retf
and
xchg
jb
mov
hlt
mov
out
fcmovb
cli
test
or
sti
xchg
aam
pop
and
outs
call
mov
(bad)
push
sub
or
clc
add
inc
adc
xchg
jecxz
dec
pop
jmp
push
jno
pushf
adc
or
add
ds
or
xor
sbb
out
sbb
dec
push
push
jecxz
sbb
sbb
data16
out
aas
pop
and
mov
inc
push
es
out
push
stos
jl
sbb
push
shl
int
mov
les
addr16
xchg
sub
mov
imul
not
fstp
mov
ds
test
mov
xor
clc
inc
xchg
mov
xchg
or
dec
inc
adc
iret
outs
lods
push
pop
aam
in
jmp
xchg
outs
leave
rcr
lahf
(bad)
xlat
loopne
fs
gs
cli
fild
into
test
ret
neg
scas
dec
pushf
shl
loopne
inc
in
nop
or
mov
fdiv
jb
aad
fsubr
movs
cmp
popf
jne
out
xlat
push
dec
sbb
dec
sbb
mov
rol
sub
and
or
rcr
(bad)
fldenv
sbb
fimul
int
mov
int3
mov
ror
les
sub
pushf
and
popa
or
(bad)
jecxz
outs
cmp
adc
icebp
inc
sbb
and
iret
push
std
push
mov
mov
frstor
outs
pop
jmp
rol
ja
stos
push
ja
mov
bound
mov
push
popf
jo
addr16
inc
je
nop
dec
mov
movs
hlt
mov
or
cmp
cli
pop
lahf
div
lods
cmp
cmp
and
adc
xchg
popf
in
test
jmp
push
lds
mov
mov
cmc
lods
sbb
mov
fiadd
enter
(bad)
mov
or
pop
shl
or
ins
xchg
sbb
dec
xor
pop
fadd
inc
inc
push
jnp
mov
push
jne
and
push
fisttp
mov
cvtdq2ps
mov
mov
leave
(bad)
vpmulhuw
push
mov
pop
in
fwait
es
jne
adc
adc
push
lods
dec
fimul
adc
repnz
mov
and
cmps
fdivrp
jmp
inc
push
and
test
mov
mov
or
aam
mov
movs
aas
sbb
lods
dec
dec
ficomp
mov
inc
cmps
mov
cdq
dec
or
in
fist
cmp
jmp
sbb
mov
in
xor
inc
sub
icebp
pop
mov
mov
fsubr
sub
and
cmp
(bad)
cmps
mov
push
jns
iret
sbb
jmp
add
or
add
loopne
scas
int3
sbb
cli
jg
cdq
adc
xchg
fild
or
out
(bad)
xchg
or
mov
xor
xlat
lock
xlat
mov
rcl
mov
js
sub
rol
mov
or
fld
sub
aad
mov
sub
xchg
or
ret
xchg
fbld
xchg
xchg
adc
jmp
push
add
sub
pushf
or
xchg
mov
adc
retf
sub
outs
ds
cmc
aas
mov
addr16
dec
and
clc
mov
loopne
sar
ret
cmps
mov
xor
pop
sbb
je
push
fidivr
dec
pop
and
sbb
xchg
push
push
inc
iret
(bad)
push
jne
das
mov
mov
pop
add
nop
push
outs
sub
imul
imul
aaa
aam
ins
xor
fwait
jns
pushf
imul
sbb
mov
shl
pop
xchg
aas
int3
es
(bad)
xchg
inc
and
and
(bad)
cmc
mov
das
jl
dec
fsub
jo
in
xor
xchg
or
pusha
repz
cmp
or
pop
popf
add
add
cmp
sub
test
jae
jb
xor
add
mov
add
(bad)
and
(bad)
out
daa
outs
push
aas
adc
jmp
ja
popa
cmp
cmps
ret
vrcpps
pop
or
push
out
dec
pop
fs
push
sub
cmp
xchg
sbb
out
xor
jnp
xchg
lahf
leave
cmp
inc
lods
in
test
ret
xor
clc
(bad)
cmp
pop
inc
and
xor
aas
ror
call
cmps
push
add
pop
mov
icebp
cld
dec
sbb
(bad)
ds
addr16
xchg
and
fiadd
add
ds
rol
mov
shr
scas
daa
jg
outs
dec
into
sub
hlt
repz
in
pop
lock
push
adc
inc
xor
push
xchg
jns
aas
je
scas
(bad)
ds
or
out
sbb
inc
movs
jmp
aaa
push
xchg
sub
je
call
mov
sar
js
cmp
jne
repnz
leave
std
outs
(bad)
(bad)
out
es
sbb
pushf
es
pop
mov
jmp
cmps
xchg
mov
xor
(bad)
mov
add
pop
sbb
cmp
in
mov
in
push
ret
mov
sub
xchg
xor
and
mov
popf
leave
cdq
outs
inc
loop
imul
cmp
bound
call
addr16
dec
push
dec
jo
mov
cmp
scas
or
lods
mov
repz
lds
adc
mov
pop
hlt
iret
les
push
pop
sbb
test
mov
adc
dec
retf
rcl
addr16
fbstp
fdivr
xlat
sub
sub
mov
and
mov
lds
jno
scas
cdq
mov
jg
mov
adc
es
add
inc
cmps
test
dec
and
movs
enter
movs
push
jb
data16
add
and
je
cmp
jle
(bad)
icebp
pop
pop
fcomp
xchg
iret
sbb
aad
sub
pop
loopne
dec
stos
push
jmp
fbld
fild
sbb
mov
aas
cmps
rcl
lods
cmc
pop
xchg
mov
dec
frstor
pop
adc
push
cmp
pop
push
icebp
cwde
add
inc
push
lods
xor
jl
pop
loopne
push
or
(bad)
ror
sbb
into
inc
cmp
jbe
dec
xchg
test
sahf
movs
push
pushf
in
stc
xchg
add
fiadd
fiadd
lock
add
push
dec
fldcw
or
push
mov
jae
jge
xor
daa
inc
test
fadd
dec
call
ins
lods
cs
xchg
stc
arpl
inc
lea
cmps
repz
mov
mov
and
and
push
mov
outs
movs
sub
cmp
fcmovbe
(bad)
cs
test
rol
sti
push
ror
jmp
add
cmp
sbb
sahf
mov
jmp
mov
in
addr16
mov
ficom
cmps
sub
cli
or
inc
fst
jp
jg
mov
fwait
push
cmps
(bad)
test
call
ja
mov
and
sub
push
bound
fiadd
mov
sbb
pop
mov
jle
dec
and
ds
clc
in
pop
pop
mov
add
iret
adc
fiadd
jecxz
fistp
lea
aad
fdivr
out
hlt
data16
fsubr
(bad)
int
jmp
mov
sbb
sbb
out
neg
(bad)
jns
adc
outs
ins
retf
fst
xor
xor
xchg
mov
hlt
ins
es
loope
xchg
sub
sub
cli
cmp
add
inc
cs
jmp
push
in
xchg
adc
bound
push
loope
push
retf
aam
jle
jno
out
pop
push
test
and
sub
jl
pop
outs
ds
mov
out
aaa
iret
int
mov
sbb
aad
ins
mov
fstp
movs
fwait
lods
dec
add
xchg
xor
mov
pop
jg
sbb
push
sub
ror
imul
mov
int3
data16
ror
or
sub
ja
mov
jge
movs
add
cld
push
mov
pusha
inc
xchg
in
lea
mov
mov
sbb
push
dec
dec
bound
leave
inc
int
arpl
push
jbe
push
scas
and
cmp
cmp
cmp
mov
jae
mov
call
xor
out
adc
lods
fisubr
mov
push
or
ds
dec
aas
rol
loop
das
xchg
inc
jl
daa
push
lahf
mov
cdq
fwait
dec
out
(bad)
jbe
cmp
adc
and
nop
xchg
add
jp
pop
jge
sub
cmp
outs
mov
gs
cwde
scas
jne
inc
jle
cmp
xlat
push
add
adc
inc
mov
loop
or
adc
push
sbb
mov
inc
adc
mov
mov
mov
and
addr16
mov
sub
js
jmp
push
js
or
add
add
xchg
test
push
pop
push
gs
mov
in
cdq
pop
jl
inc
aaa
xchg
xor
xlat
test
ja
xor
popa
or
mov
and
es
scas
push
rcr
and
mov
sub
or
push
xlat
or
pop
pop
xor
scas
lahf
sahf
ss
push
ins
or
(bad)
cmc
enter
push
shl
lods
repnz
dec
jmp
mov
int3
or
jmp
movs
or
or
pop
retf
mov
pslld
pop
mov
push
stos
pop
cli
push
iret
mov
pop
das
rol
repz
das
cmp
add
jns
scas
or
out
adc
dec
and
mov
xchg
or
cli
cmc
loop
icebp
xlat
out
call
test
(bad)
xchg
mov
sti
psubb
jno
push
(bad)
fcmovbe
mov
mov
test
shr
mov
setle
ja
xor
imul
jbe
aaa
dec
pop
mov
push
add
mov
sbb
in
mov
cs
mov
fdivr
jae
push
mov
dec
sbb
div
(bad)
icebp
call
jnp
xlat
out
in
out
test
and
or
sub
cmova
cli
mov
ret
sub
mov
adc
or
movs
mov
push
pop
call
mov
inc
cmp
js
push
fwait
adc
inc
mov
leave
pop
sbb
call
and
jne
sub
push
lds
aaa
mov
dec
mov
les
mov
jb
xor
call
in
call
mov
lock
lock
mov
xchg
sbb
lods
inc
cdq
jns
ins
or
mov
clc
sbb
int3
(bad)
xor
lods
ds
aas
push
scas
jmp
fisttp
icebp
dec
push
rcl
mov
les
aas
mov
sbb
sbb
fcmovb
pop
pop
ins
mov
nop
mov
(bad)
test
iret
xchg
sbb
xchg
xchg
and
clc
test
and
xbegin
dec
push
jb
in
jae
enter
movs
mov
adc
data16
fnstsw
cli
sbb
nop
int3
sbb
out
movs
pop
mov
lds
mov
inc
addr16
pop
les
xor
pop
out
(bad)
jae
mov
inc
rcr
jbe
std
add
or
cld
arpl
shl
inc
bndmk
fucomp
or
jo
in
or
cwde
rol
inc
mov
mov
cwde
jle
xchg
and
clc
jmp
jge
xlat
sub
mov
jb
mov
mov
in
loope
mov
je
movs
jb
mov
outs
(bad)
cmp
fcmovnu
push
mov
mov
out
sbb
xchg
xchg
aaa
test
out
enter
sbb
xchg
xchg
pop
shl
xchg
(bad)
fbld
pop
inc
jecxz
push
cmps
pushf
pop
call
ss
loope
cmp
sti
pop
outs
out
das
fistp
jae
and
and
movs
mov
push
bt
(bad)
popf
cmp
jnp
test
inc
(bad)
callw
mov
cdq
sub
ds
jge
xchg
push
mov
cmovno
int3
int3
mov
sub
pop
and
xchg
dec
adc
sti
scas
xchg
fistp
fs
dec
mov
jl
jle
xor
pop
mov
mov
mov
cs
and
jne
leave
fisubr
xchg
xchg
and
xchg
xchg
pop
ret
push
inc
dec
iret
cmps
fisub
sub
iret
lock
setne
popf
jp
mov
dec
mov
std
lahf
stos
mov
add
and
dec
add
dec
and
aad
imul
fsub
daa
mov
das
movs
xor
arpl
inc
add
mov
mov
(bad)
call
mov
mov
mov
cld
(bad)
imul
sbb
(bad)
ret
add
or
scas
cdq
jmp
xor
inc
push
pushf
(bad)
mov
hlt
sbb
inc
pop
out
into
mov
mov
dec
cmc
or
arpl
mov
and
adc
dec
popa
sub
push
mov
jecxz
mov
jge
cwde
fs
icebp
stc
jb
mov
aam
int3
sub
or
jp
rol
lds
dec
fbld
pop
jmp
adc
pushf
movs
mov
and
(bad)
loop
xchg
pop
dec
adc
leave
cmc
xchg
inc
es
cmp
dec
xchg
mov
and
scas
repz
cmc
push
in
aaa
outs
imul
xor
bound
jo
sub
pop
inc
xchg
ret
add
and
test
outs
pop
pop
or
movs
repnz
repz
es
iret
xor
xchg
(bad)
sub
test
inc
pop
push
add
sub
inc
loope
adc
imul
pop
scas
and
or
adc
mov
mov
aad
fwait
in
mov
(bad)
dec
icebp
call
mov
adc
mov
or
enter
aas
popf
lds
push
jae
jl
xchg
adc
xor
test
pop
push
push
cmps
call
and
dec
push
push
inc
jge
adc
add
jnp
jge
adc
int3
push
xchg
cli
lahf
daa
ss
outs
lods
pop
sbb
mov
mov
dec
test
jp
cmp
cmp
aas
out
pop
pop
ins
xchg
fst
dec
test
xor
popw
loope
and
fld
mov
(bad)
(bad)
fldenv
adc
lods
push
sbb
(bad)
in
lods
sahf
mov
dec
ins
add
mov
or
icebp
mov
mul
pop
aas
mov
push
data16
dec
dec
add
cld
or
stc
cs
xchg
cmp
mov
dec
push
out
cmps
and
jge
ret
ins
sub
cmp
out
sub
mov
adc
icebp
mov
xor
scas
bswap
dec
fwait
cmp
icebp
outs
sub
cmp
enter
xlat
dec
or
pop
push
shr
jne
lock
imul
sub
adc
or
popa
dec
dec
es
test
in
xor
xchg
push
loopne
push
xor
shl
aad
shl
xchg
test
stc
push
ss
loope
mov
push
out
mov
or
inc
jnp
inc
or
rol
xchg
mov
pop
inc
outs
mov
pop
ss
push
xor
push
scas
je
push
daa
sbb
push
cdq
push
dec
xchg
push
add
lods
mov
mov
dec
add
push
cmp
jge
inc
(bad)
dec
sub
pop
pop
add
test
cmps
add
inc
(bad)
push
fist
push
fisubr
cmp
enter
jbe
cld
(bad)
aaa
cmp
mov
sbb
mov
sbb
retf
test
mov
add
jecxz
and
pop
shr
call
xor
sbb
mov
pushf
pop
out
jl
fstp
sbb
xchg
push
arpl
imul
jnp
sar
jg
inc
jns
push
or
sub
mov
cs
aam
fcomp
pop
out
into
inc
lods
cmc
out
nop
addr16
add
pop
(bad)
fadd
add
mov
xor
stc
push
inc
mov
cmp
or
scas
scas
(bad)
in
inc
cmp
jge
sbb
pop
jecxz
mov
adc
cwde
mov
cmps
es
test
jmp
repz
leave
mov
call
in
dec
inc
out
mov
out
enter
push
cwde
push
and
stos
cli
mov
ret
pop
movs
sub
cmp
xchg
inc
out
xchg
push
jp
call
sbb
inc
es
repnz
xchg
mov
xor
jno
repnz
lock
inc
inc
and
fist
dec
pushf
mov
fldcw
into
dec
push
inc
in
mov
sub
mov
(bad)
out
pop
imul
cwde
sub
popa
push
ss
repz
jle
mov
jno
xchg
rcr
nop
jg
out
lahf
(bad)
mov
sub
test
or
fidivr
push
(bad)
iret
mov
fisttp
movs
clc
ror
and
cmp
add
setno
fisttp
(bad)
xlat
mov
stos
fwait
pop
jl
fisttp
inc
jb
cmp
push
imul
xor
cmp
xor
repz
pop
mov
mov
leave
jp
(bad)
jnp
or
mov
adc
sbb
xchg
into
push
push
inc
lahf
loope
mov
pushf
pop
xchg
pop
movs
and
pop
test
jecxz
jb
mov
imul
dec
push
fs
push
sub
cmp
js
cs
out
adc
out
clc
and
dec
add
adc
cmc
stc
into
xchg
pop
fstp
std
inc
stc
add
adc
call
adc
jb
dec
dec
ja
pop
cmp
add
add
in
mov
xlat
xchg
mov
or
mov
clc
(bad)
jmp
je
jl
dec
cmp
out
retf
enter
sahf
cmp
cmp
inc
(bad)
mov
mov
push
push
outs
push
sub
aam
inc
fadd
lods
fnstsw
push
dec
sub
dec
xor
dec
fistp
sub
mov
push
ret
xchg
add
lods
aaa
les
xor
jno
shl
js
xlat
mov
or
sbb
adc
out
or
ss
fs
into
call
ffree
aas
mov
test
enter
lods
into
add
sbb
jge
arpl
jl
aaa
mov
fsubr
add
call
fadd
cli
and
push
mov
push
(bad)
fisub
fistp
mov
or
call
out
test
fiadd
sbb
mov
cld
int
mov
int3
xchg
(bad)
scas
retf
lds
or
xchg
leave
xor
xchg
data16
push
mov
pop
retf
or
sub
mov
xchg
sbb
add
(bad)
cmp
mov
inc
push
pop
ins
pop
push
in
dec
or
inc
in
repz
jp
ret
cmp
jge
mov
mov
add
adc
or
add
inc
in
into
dec
dec
mov
push
inc
ror
daa
mov
xlat
xchg
xchg
test
adc
mov
ds
or
and
dec
or
and
sub
ins
imul
adc
xor
adc
pop
fisttp
in
jae
mov
jne
loop
rcr
in
shr
(bad)
jmp
jp
loopne
aad
sbb
cmp
cdq
ins
sar
and
pop
loop
rcl
xchg
dec
pand
jle
sti
test
mov
movq
add
cmp
ins
or
and
cmp
mov
dec
adc
push
aaa
hlt
retf
xchg
in
xor
or
inc
and
aaa
lods
popf
add
mov
jae
(bad)
aad
mov
and
xchg
int
cli
xchg
jnp
(bad)
leave
sti
popf
and
mov
in
stc
xchg
xchg
sbb
xchg
stc
xor
sbb
out
pop
mov
aas
repz
sub
cs
xchg
and
ins
mov
imul
xor
popa
mov
(bad)
pop
in
xchg
int3
cmps
cld
pushf
pop
cli
fisttp
int3
scas
inc
not
pop
sti
sbb
mov
dec
add
shl
(bad)
cmp
dec
or
loopne
jno
pop
inc
xor
xchg
and
dec
inc
push
xchg
idiv
pop
lods
push
mov
dec
pop
mov
cmp
mov
and
push
mov
jne
or
mov
jmp
pushf
dec
sbb
or
es
es
sti
repz
(bad)
loope
les
pushf
(bad)
in
aaa
cmp
bound
enter
inc
sub
cli
push
jae
sbb
mov
jbe
mov
adc
jne
adc
fwait
cli
dec
loopne
jle
push
in
leave
push
popa
stos
jmp
jg
outs
mov
scas
cmp
sub
xlat
es
dec
xchg
mov
mov
push
jmp
and
test
mov
xchg
push
iret
ins
into
adc
stc
pop
sbb
lock
jl
jle
sbb
fs
or
call
jp
jb
fild
pop
jge
xchg
add
mov
lds
xchg
inc
out
pop
sub
cmp
ds
cmp
mov
inc
icebp
shl
mov
pop
mov
pop
lock
dec
lock
int
xor
std
xor
xor
add
fld
dec
add
mov
mov
xor
sub
iret
and
movs
js
or
lahf
(bad)
int3
nop
dec
ret
push
or
cmc
sbb
and
xchg
repz
sar
jmp
arpl
push
clc
(bad)
repnz
les
out
mov
mov
jno
popa
in
cmp
test
xlat
bound
sbb
in
add
ja
lods
sbb
out
add
lods
(bad)
cli
pop
shl
idiv
and
mov
ret
inc
fsub
dec
push
(bad)
fsubr
sti
or
stc
cmp
cmp
push
inc
and
push
(bad)
jmp
add
pusha
lods
adc
fcomp
sbb
in
jmp
push
add
in
lods
(bad)
in
cmp
jmp
pop
sub
mul
xor
push
jae
stos
in
(bad)
and
movs
loope
and
ds
mov
fcom
lods
pop
mov
je
sbb
pop
repnz
loope
pop
jg
add
push
cmp
and
and
xor
and
mov
xor
repz
mov
rol
ror
(bad)
xlat
adc
loope
mov
pop
dec
es
daa
jmp
inc
iret
pop
pop
mov
retf
cmp
jge
(bad)
sar
(bad)
fidiv
popf
push
lods
push
dec
sbb
sub
xchg
pushf
mov
inc
mov
inc
das
lods
int3
push
add
jbe
or
ud2
loope
(bad)
ret
ins
xchg
leave
mov
xchg
(bad)
mov
test
ds
(bad)
and
imul
(bad)
dec
outs
stc
jnp
das
jge
mov
dec
lahf
lahf
mov
inc
mov
bound
call
(bad)
adc
mov
aas
call
adc
or
and
inc
cmps
sbb
xchg
pop
xor
das
or
adc
push
dec
into
cmps
in
mov
dec
(bad)
call
(bad)
jmp
movs
stos
std
jl
and
test
cdq
inc
cmp
lds
cli
mov
adc
repz
adc
cmps
mov
(bad)
in
add
into
jecxz
fnop
adc
lods
adc
lahf
(bad)
push
cwde
jb
add
and
add
jo
ds
test
dec
push
mov
int3
add
idiv
mov
pop
mov
pop
mov
fsub
stos
xor
adc
jne
cli
imul
mov
ins
jbe
(bad)
aaa
je
loop
sub
inc
sbb
push
jg
and
inc
xchg
in
jne
cmp
clc
push
cmp
jmp
xor
sub
jle
sub
out
lock
jmp
pop
cmp
(bad)
je
mov
out
push
rcr
push
in
data16
mov
test
shl
jae
stos
retf
stos
mov
and
sub
xchg
and
xchg
xor
ins
and
scas
fcomp
hlt
cmps
adc
imul
push
xchg
cs
push
sbb
(bad)
xchg
pop
mov
aas
sub
push
out
adc
xor
sub
xchg
jge
jns
mov
loopne
fcmovne
stos
arpl
pusha
jg
shl
popf
push
pop
icebp
imul
dec
dec
loopne
into
loope
and
enter
fild
fdivr
(bad)
and
test
mov
gs
push
aad
mov
lods
stc
fstp
int
jp
ret
sub
mov
push
test
xchg
ret
scas
mov
add
es
cmp
xor
mov
adc
mov
push
adc
or
cwde
test
dec
sub
(bad)
hlt
cmp
sub
pop
mov
or
and
rcl
mov
sub
out
inc
mov
retf
push
clc
push
sbb
push
xchg
mov
mov
jp
les
push
mov
add
inc
ins
cmp
lea
dec
scas
push
xor
out
push
sbb
in
pop
inc
jg
retf
dec
inc
int
push
(bad)
ds
cmp
ss
xor
in
add
mov
ins
cmp
fmul
(bad)
mov
xchg
movs
lahf
mov
xor
adc
pop
add
push
lds
fstp
add
sub
fwait
mov
lods
jae
and
pop
add
pop
dec
push
mov
sbb
sub
and
dec
jo
mov
(bad)
jmp
mov
test
ins
in
xchg
fs
cmp
xchg
scas
add
jmp
xchg
test
mov
push
xor
enter
daa
mov
mov
loop
xor
retf
aam
xchg
xchg
xor
xor
push
adc
dec
iret
lahf
mov
xchg
and
stos
ins
in
push
or
push
sub
sub
dec
test
das
jge
scas
rcl
inc
xor
rcr
or
mov
scas
in
div
movs
adc
mov
pop
mov
or
mov
inc
cmc
mov
das
inc
add
js
sbb
repnz
mov
cmps
sbb
jle
loop
adc
inc
dec
rcr
enter
(bad)
sub
ficom
cwde
test
and
inc
popa
mov
push
ins
gs
popf
retf
fstp
mov
or
cmp
xchg
xchg
adc
jecxz
imul
scas
pop
xchg
into
lods
mov
(bad)
cmp
push
or
jno
mov
adc
enter
sbb
mov
clc
lds
sahf
add
lea
(bad)
mov
jb
and
add
xchg
push
push
cmp
cmp
cmps
(bad)
sbb
and
pop
xchg
(bad)
adc
mov
addr16
dec
pop
xor
popa
and
pop
dec
je
push
push
xlat
fwait
inc
(bad)
std
xor
pop
fwait
push
sbb
mov
mov
sar
icebp
fdecstp
call
daa
adc
movs
cmp
jmp
scas
wrmsr
sahf
loopne
jmp
(bad)
jbe
xor
(bad)
dec
inc
xchg
psubusw
cmp
iret
push
or
dec
shl
mov
jge
mov
mov
je
jo
bound
push
mov
lods
inc
repnz
sub
push
cmps
out
sar
pop
and
pop
inc
cmp
es
or
dec
xor
imul
scas
in
iret
push
fbstp
xchg
cmp
mov
push
jmp
in
push
aad
arpl
or
adc
and
push
mov
xchg
or
push
in
shl
mov
fbld
repnz
lahf
mov
mov
ror
ins
jle
lahf
cmp
je
inc
mov
pushf
fbstp
lods
adc
iret
call
cmp
repz
retf
retf
jp
add
xchg
fs
loope
push
inc
cmp
lods
pop
rcl
cmp
add
jnp
xor
mov
unpcklps
daa
xchg
xor
fistp
mov
(bad)
cmps
(bad)
or
test
shl
mov
test
jmp
fild
sub
outs
xchg
pop
clc
adc
xchg
je
dec
inc
jg
(bad)
in
inc
(bad)
ret
outs
dec
cmps
add
imul
dec
adc
retf
add
mov
int
test
sbb
movs
call
test
retf
test
lahf
(bad)
inc
xor
repnz
inc
jecxz
pop
dec
(bad)
imul
leave
repnz
test
or
xor
scas
jbe
sub
ds
xchg
pushw
aad
mov
pop
mov
xor
in
in
pop
and
(bad)
and
xor
ja
iret
inc
inc
or
adc
and
nop
mov
aam
add
imul
ins
xchg
addr16
pop
adc
ror
and
out
(bad)
rol
jns
mov
or
fldenv
inc
mov
dec
inc
inc
jno
pop
inc
test
xor
add
data16
hlt
nop
mov
and
mov
fs
sbb
clc
sub
push
ins
ins
lahf
or
test
fcmovne
out
imul
mov
popa
(bad)
loop
and
mov
ficomp
fdivr
inc
ss
sti
icebp
inc
xor
out
jp
jp
(bad)
mov
(bad)
xchg
cmp
mov
int
sbb
popa
cmc
out
or
inc
add
and
imul
repz
dec
inc
mov
sub
add
mov
js
lock
jb
add
pop
xor
pop
add
cmp
mov
test
xchg
sti
fld
int3
stos
or
adc
int3
and
lea
jbe
mov
pop
and
test
xchg
mov
(bad)
addr16
xchg
xchg
ja
xor
cwde
mov
or
xchg
sub
mov
xor
xchg
cmp
loop
clc
stos
loopne
ss
mov
gs
fstp
(bad)
jmp
iret
lock
xchg
das
add
inc
jo
mov
mov
aaa
in
les
das
test
je
add
(bad)
out
dec
mov
dec
arpl
imul
sub
aaa
xchg
sbb
cmp
in
pop
add
pop
cdq
shr
jbe
and
mov
loop
xor
and
jp
lahf
fwait
test
mov
fiadd
scas
fwait
jo
push
xor
jb
test
dec
sti
push
shr
inc
popf
sti
stc
xchg
push
stos
jne
add
int3
push
add
inc
xchg
or
(bad)
cld
inc
call
data16
outs
mov
xor
inc
lods
sbb
ror
movs
sti
idiv
xchg
xchg
add
push
and
dec
sbb
pop
lods
out
mov
in
rcr
aaa
mov
add
xor
sar
leave
and
repz
add
jns
sbb
sub
cmp
mov
mov
repnz
jecxz
aas
aas
cli
imul
pop
pop
push
outs
ret
cmp
cdq
dec
outs
push
clc
push
xor
push
iret
mov
movs
jbe
pop
iret
jp
and
cmps
lock
(bad)
pop
jae
test
push
xlat
aad
(bad)
mov
cmp
adc
das
in
fist
adc
mov
and
xor
clc
bound
mov
out
icebp
lods
sbb
dec
adc
mov
push
test
daa
out
mov
into
fadd
inc
sbb
push
xchg
inc
enter
ins
sahf
push
push
or
push
mov
cmp
repnz
xor
jg
fld
dec
xchg
ror
jo
push
cmc
aas
add
dec
dec
xchg
outs
or
(bad)
dec
mov
mov
sahf
sub
cmp
rcl
and
(bad)
je
je
lea
loopne
sbb
xor
mov
pop
mov
fmul
js
mov
and
shl
f2xm1
sub
rol
push
mov
push
jge
outs
push
and
mov
call
inc
inc
je
rcl
inc
mov
xchg
loop
loope
out
out
mov
cmps
adc
dec
out
inc
cmp
mov
imul
repz
outs
cmc
clc
aaa
add
imul
push
jle
ds
adc
scas
test
jns
out
and
rol
xchg
cmp
xchg
xchg
mov
push
sbb
jb
or
cmps
pop
push
xor
adc
push
sub
cmp
mov
ror
sbb
iret
sahf
imul
lds
inc
mov
or
mov
or
retf
and
pop
dec
out
and
cwde
sub
jecxz
lods
sti
cmp
cmp
or
push
movs
and
mov
lahf
pop
adc
bnd
fidivr
cmp
xchg
push
or
movs
and
(bad)
inc
inc
jl
popf
dec
ror
daa
jns
mov
dec
pop
mov
repnz
xchg
int
fidiv
fistp
add
(bad)
jno
jg
mov
aas
fmul
xchg
push
mov
inc
mov
jg
xchg
xchg
jmp
mov
or
push
push
cmp
ss
xchg
sub
pop
sub
xchg
xlat
mov
xor
imul
(bad)
cmp
call
sub
lea
sbb
mul
add
loopne
xchg
(bad)
aaa
je
add
push
push
shld
repz
lock
(bad)
pushf
push
pop
icebp
mov
inc
push
sub
and
das
fadd
addr16
mov
xlat
jb
and
adc
popf
xchg
inc
sbb
xchg
sar
imul
fidivr
sbb
in
sti
inc
lock
xor
push
shr
clc
fisubr
push
lds
pop
or
shl
out
fdivr
mov
into
scas
mov
test
pop
dec
or
jns
sti
sbb
or
je
fcomp
or
and
stos
rcr
ins
dec
cmp
test
and
xchg
aad
or
js
mov
pop
imul
cdq
mov
(bad)
imul
call
sub
jp
adc
out
cmp
add
pop
and
dec
sahf
repnz
add
data16
push
sbb
(bad)
dec
scas
pop
stos
bound
mov
sub
jg
mov
out
mov
sbb
mov
or
cdq
mov
dec
nop
inc
ss
fnsave
lods
mov
inc
inc
push
scas
call
xor
sbb
mov
bound
dec
shr
int3
int
pop
xchg
xchg
inc
daa
push
test
push
mov
mov
mov
xor
or
dec
fmul
idiv
add
mov
mov
jae
mov
jl
and
adc
jne
ret
es
push
jge
into
lods
je
adc
xchg
xlat
xchg
scas
mov
or
(bad)
sahf
xchg
xor
jecxz
or
adc
mov
inc
or
jae
out
mov
in
sti
imul
xchg
inc
and
mov
into
adc
push
mov
jne
(bad)
cmp
cdq
gs
push
lods
shr
movs
in
(bad)
xor
sub
jne
ret
mov
cs
xchg
jmp
dec
cmp
lods
pop
sbb
push
sti
xchg
pop
iret
ds
xor
in
add
out
jae
or
iret
(bad)
loope
shl
fnstcw
mov
xor
jp
mov
jno
fiadd
or
jo
cmps
cli
jne
add
add
inc
adc
test
popa
add
push
inc
push
stos
jo
scas
mov
pop
arpl
stc
xor
sbb
mov
add
jmp
push
int3
mov
out
mov
mov
xchg
sub
sahf
jnp
lods
popa
dec
cwde
iret
scas
mov
retf
inc
aaa
add
clc
adc
shr
int3
inc
test
imul
in
sbb
(bad)
xor
ja
rcr
and
pop
fld
dec
jbe
clc
iret
pop
js
cli
push
je
ror
jnp
add
pop
aaa
and
mov
cmps
stc
mov
xchg
dec
aam
scas
sbb
push
(bad)
sbb
je
cmp
iret
jge
aas
mov
cmp
out
sbb
pop
jae
mov
mov
dec
add
shl
cld
mov
adc
in
push
mov
(bad)
mov
jmp
dec
push
mov
sub
and
and
fsub
div
imul
cli
inc
xchg
ins
sub
sbb
retf
jae
mov
(bad)
out
cwde
aaa
and
test
mov
imul
(bad)
or
(bad)
aaa
adc
or
pop
adc
aad
dec
test
inc
mov
in
pop
sti
mov
imul
in
outs
xchg
clc
jnp
and
pop
jb
jl
pop
leave
dec
xchg
cmp
sbb
inc
aad
sbb
xchg
pop
stc
dec
and
push
sub
jmp
cmp
(bad)
das
loop
fild
xchg
xlat
or
retf
sub
leave
sbb
xchg
fcmove
sbb
icebp
aad
sbb
xchg
mov
sti
xor
rol
fs
mov
int
lahf
cdq
ja
repnz
inc
dec
sbb
call
push
or
or
fld
popf
aad
je
cdq
jno
xor
adc
in
or
push
fldcw
fdiv
and
stos
stos
call
mov
mov
xchg
xchg
push
(bad)
sar
jae
mov
sar
push
dec
push
aaa
loope
out
shl
outs
scas
xor
test
mov
and
in
mov
(bad)
or
and
adc
pop
ins
fs
jmp
shr
dec
rcr
outs
pop
mov
sti
push
movs
jl
inc
push
fisub
or
push
xchg
mov
ins
cmps
into
cmc
cld
movs
rol
jle
and
and
cmp
push
imul
std
or
retf
sub
push
loopne
pushf
pop
jmp
mul
fwait
cmp
and
aam
movs
in
jle
scas
into
dec
jmp
cmp
pop
xor
pusha
pop
add
(bad)
xchg
out
mov
in
sbb
dec
push
sahf
adc
cmp
es
dec
jp
jnp
and
mov
push
cld
pop
gs
sahf
push
xchg
push
fstp
jns
jns
add
icebp
lahf
push
or
inc
(bad)
repz
pop
mov
push
mov
call
inc
lods
or
sbb
push
pop
es
jns
pop
mov
outs
inc
leave
sbb
push
push
std
pushf
xchg
sahf
add
das
mov
fisttp
mov
ret
aas
jmp
neg
arpl
cmp
js
inc
sbb
push
adc
retf
fdiv
in
lods
(bad)
xchg
test
in
sti
sbb
es
icebp
pop
and
scas
push
dec
lds
pop
inc
adc
in
pushf
mov
or
dec
adc
jae
scas
xchg
stc
loope
jle
dec
cs
push
jo
xchg
pop
into
repnz
cmp
(bad)
adc
add
pop
in
mov
out
jp
stc
(bad)
xor
mov
push
mov
jo
jmp
dec
cld
fadd
push
movs
xor
cli
(bad)
repnz
addr16
fiadd
test
inc
addr16
pop
aad
sbb
in
lea
dec
add
jmp
jmp
adc
imul
xchg
clc
adc
scas
and
xchg
cld
movs
add
test
arpl
inc
out
sub
and
jno
aaa
rol
test
adc
xor
cmp
push
xchg
jne
inc
iret
mov
mov
test
jae
pop
loopne
lods
scas
outs
mov
push
(bad)
retf
not
xor
sahf
push
inc
jmp
mov
jns
and
push
add
shl
inc
mov
inc
(bad)
pop
pop
inc
fnstenv
in
imul
mov
pop
ins
dec
out
dec
(bad)
retf
mov
mov
pop
xchg
cmp
mov
cmp
idiv
or
xor
into
pop
xor
dec
js
cdq
sbb
jno
(bad)
dec
add
adc
adc
fnstsw
in
adc
cmp
adc
and
pusha
hlt
hlt
mov
mov
xchg
adc
stos
add
adc
xor
jp
xor
test
pusha
fistp
lea
retf
ror
push
adc
sahf
icebp
cmp
push
add
push
and
push
test
jle
out
cld
out
jmp
add
jl
sbb
cmp
enter
fadd
pop
inc
fist
xor
int3
jle
cli
mov
push
mov
jg
push
daa
mov
cmc
dec
push
xchg
out
or
add
ins
sbb
test
hlt
imul
ror
ficomp
add
inc
fbld
sub
jle
dec
stos
iret
mov
jg
xchg
(bad)
push
add
add
mov
adc
lods
dec
test
or
xchg
aas
in
into
dec
rcl
or
and
cs
mov
stos
dec
imul
scas
inc
cmp
cdq
(bad)
pop
ja
js
push
adc
ret
adc
ins
mov
pop
mov
adc
lds
arpl
cmps
cmp
ins
shr
mov
dec
int
je
mov
sub
jno
mov
sti
mov
adc
call
not
inc
xchg
adc
xchg
leave
inc
or
lods
mov
cs
lea
pop
pop
add
xor
cmp
or
fwait
dec
ret
push
psubusb
mov
int
push
fbstp
nop
mov
mov
xchg
push
(bad)
jo
sub
retf
repz
imul
sub
xor
jne
aam
dec
aam
and
clc
ret
rcr
or
add
dec
mov
sbb
pop
in
sti
inc
sbb
add
call
pop
icebp
in
or
jo
int
cld
dec
pop
xchg
sub
cmp
(bad)
mov
popa
inc
cdq
cmp
add
retf
and
inc
mov
jbe
cmp
mov
ja
out
jge
cmp
mov
xor
xchg
lahf
es
mov
or
out
sti
push
sbb
or
(bad)
hlt
push
add
addr16
sub
scas
sub
stc
xchg
xor
aam
inc
ror
popf
dec
mov
mov
in
out
into
sub
and
add
daa
inc
or
xor
lds
retf
cli
popf
addr16
mov
bswap
adc
mov
pushf
sti
cmp
adc
sbb
in
mov
and
inc
test
test
nop
pop
mov
jmp
outs
rol
lods
jp
sub
jne
cwde
push
in
retf
test
xlat
test
fisttp
mov
adc
mov
pop
cmp
jne
mov
mov
dec
or
rol
out
sahf
push
leave
fs
aas
sub
jmp
stos
out
jg
clc
lock
xchg
mov
xor
rcl
add
mov
mov
movs
daa
push
outs
xchg
cmc
fld
inc
imul
mov
mov
cwde
addr16
sbb
ja
icebp
add
(bad)
iret
stos
dec
pop
popf
xchg
(bad)
lock
scas
xchg
and
cli
sub
jno
shl
inc
pop
(bad)
ins
retf
mov
movs
push
das
fwait
cmp
mov
addr16
adc
push
adc
add
ss
sbb
or
(bad)
xchg
aam
push
mov
jmp
mov
cld
push
into
mov
scas
les
jae
xor
sar
hlt
mov
std
mov
and
sbb
pop
pop
mov
adc
pop
sub
retf
xchg
(bad)
in
push
out
mov
popf
popf
jge
jae
push
dec
mov
ja
adc
(bad)
std
cmps
pushf
jmp
test
fadd
xchg
pop
pop
jp
jb
fmul
jns
ret
les
retf
not
or
das
pop
test
enter
pop
adc
jbe
arpl
jmp
dec
xor
and
iret
test
test
lods
enter
xchg
pop
add
and
and
aam
dec
sub
push
hlt
pop
fcomp
push
stos
pop
mov
jle
dec
loop
inc
pushf
jl
lock
repz
mov
pushf
cmp
mov
retf
or
xor
add
lods
cmp
adc
not
adc
mov
popa
dec
and
xor
mov
movs
and
xor
adc
(bad)
xchg
lahf
pop
adc
cmp
and
in
scas
stos
lock
div
inc
jle
aad
fiadd
push
mov
test
jbe
jmp
or
mov
xchg
(bad)
jnp
fist
push
popa
ins
frstor
out
push
mov
les
retf
cmp
or
lods
fs
nop
cmps
jnp
adc
dec
adc
dec
addr16
repnz
or
and
or
push
sbb
jne
mov
popf
imul
(bad)
outs
outs
jg
xor
test
lea
test
test
add
mov
inc
push
stos
or
aam
out
mulps
push
test
bound
fld
int
push
es
dec
or
stos
aas
xor
xor
and
cmp
and
jecxz
push
inc
mov
xor
fdivr
adc
xchg
adc
call
mov
add
jbe
out
push
mov
mov
pop
ss
out
jbe
cmp
pop
lahf
sbb
dec
lea
add
lock
dec
inc
movs
add
mov
mov
stos
xor
mov
or
inc
test
retf
or
xor
sub
jp
call
retf
add
sbb
push
stc
mov
popa
add
call
push
outs
ss
dec
sbb
daa
adc
jl
pop
das
call
jl
dec
je
out
pop
cmps
lods
out
rcr
iret
clc
sbb
and
lods
lahf
and
lods
cli
mov
adc
into
repnz
es
imul
test
paddusb
mov
imul
les
or
mov
pop
push
push
in
in
sbb
cdq
add
sub
mov
popa
pop
je
out
loop
jnp
push
stos
fsubr
mov
or
lods
gs
push
out
or
jae
nop
mov
aas
jp
add
jecxz
out
xor
jl
ins
or
mov
adc
ret
xor
popf
push
push
pop
sub
jp
dec
in
xchg
cmps
jp
add
push
xchg
sub
fiadd
neg
nop
push
xchg
jecxz
jbe
sub
dec
mov
fs
sbb
mov
add
xor
movs
jae
jne
or
retf
jl
mov
jmp
cmp
jmp
adc
arpl
popa
mov
add
repnz
inc
dec
add
retf
popf
(bad)
mov
out
ss
push
pusha
jns
std
xchg
fdiv
into
mov
dec
push
sub
jbe
inc
or
iret
jbe
cmc
outs
or
push
cli
jg
dec
je
addr16
pavgb
push
xlat
jb
repnz
sbb
lahf
fldcw
jl
push
mov
mov
push
mov
test
and
loop
hlt
mov
mov
pop
dec
jmp
pusha
add
xor
push
(bad)
cmp
mov
push
jmp
xchg
and
pop
add
and
je
sbb
dec
pop
pop
movs
pop
les
cmp
mov
pop
xchg
and
(bad)
jnp
inc
jno
pop
jg
push
(bad)
clc
fsubr
mov
leave
push
xchg
dec
sbb
je
lock
mov
inc
push
jmp
jl
dec
sbb
cld
loope
xchg
sbb
(bad)
cdq
push
mov
js
movs
fucomp
adc
mov
sbb
ds
dec
jno
push
push
jb
xor
mov
pop
scas
and
out
cwde
pop
jmp
loop
and
mov
and
sub
fisttp
sub
add
mov
cmp
add
adc
pop
movs
stc
popa
cmp
lea
aam
jmp
int
cmc
inc
inc
stc
movs
adc
cmp
adc
mov
pop
aaa
mov
xchg
pusha
and
push
js
adc
loopne
int3
mov
pop
cdq
aam
jne
mov
(bad)
sub
out
sub
ja
mov
mov
xchg
mov
ret
fwait
sahf
push
cmp
cwde
inc
push
xchg
retf
cmp
fdivr
ins
and
fdiv
retf
xchg
push
movs
xor
dec
adc
inc
and
push
xchg
and
dec
stos
ja
stos
or
push
cli
aas
repnz
icebp
mov
sub
mov
(bad)
push
out
mov
mov
sub
inc
in
add
lods
test
add
stos
fdivr
jb
std
mov
push
(bad)
mov
inc
scas
adc
add
popa
cmps
and
scas
sti
inc
mov
pusha
jno
fist
jg
mov
push
out
pop
lods
cmp
dec
xor
sub
(bad)
movs
sahf
shl
shl
or
int3
mov
dec
dec
stc
ins
es
inc
cmp
scas
fmul
sbb
sub
ret
sub
stos
dec
xor
jmp
or
mov
mov
inc
fcomp
cmp
lds
or
popa
imul
or
ds
into
ror
push
pop
(bad)
add
arpl
mov
mov
push
sub
fwait
dec
enter
arpl
xor
cmp
(bad)
xlat
sub
adc
push
icebp
or
or
xlat
pop
stos
outs
(bad)
mov
sub
mov
push
inc
lods
inc
xchg
(bad)
ss
nop
outs
lods
shl
xchg
adc
fwait
ja
(bad)
popf
shl
dec
mov
mov
nop
adc
mov
mov
inc
cwde
push
pop
mov
pop
mov
mov
lods
sbb
shr
push
(bad)
inc
xlat
loopne
inc
cdq
jne
xchg
lock
xor
loope
lahf
sub
fwait
bound
mov
xchg
add
mov
mov
sbb
dec
dec
outs
ds
mov
shl
jg
cmp
daa
lds
nop
pop
add
hlt
push
iret
jb
dec
xchg
cmps
jp
enter
mov
(bad)
sbb
sbb
in
aas
loope
aam
push
xor
sbb
jb
movs
cmp
sbb
sti
iret
add
add
ror
leave
xor
jno
sub
jb
xor
idiv
aas
cmp
dec
cmp
cmp
adc
fpatan
or
into
sahf
sbb
std
dec
jmp
push
and
les
test
and
or
out
jb
jg
fldenv
or
dec
into
int
sbb
out
xchg
cmc
(bad)
shr
imul
test
cmps
daa
ret
popf
xor
out
mov
inc
inc
push
(bad)
xchg
scas
jae
xor
daa
leave
fbstp
or
lea
pop
push
inc
ja
leave
jg
enter
outs
cwde
inc
sub
call
jo
sub
and
or
jecxz
xchg
fadd
xchg
mov
xor
(bad)
and
(bad)
out
sub
or
cmp
mov
scas
cmpxchg
sub
cmp
jp
scas
mov
pop
lods
cdq
in
push
cli
xchg
enter
inc
xchg
aaa
inc
popa
out
mov
push
popf
add
popa
and
into
jg
sbb
push
cmp
dec
mov
mov
inc
stc
call
leave
xchg
xchg
mov
xchg
xor
cmp
sahf
and
jo
inc
mov
add
sub
out
call
pop
sub
mov
and
mov
test
ins
ins
jno
add
cld
push
pop
jno
or
sub
popa
push
or
push
sbb
mov
cmp
stos
dec
jo
jne
push
(bad)
test
arpl
sbb
push
adc
inc
(bad)
jne
ins
add
test
and
in
inc
sub
or
retf
jno
inc
xor
sbb
in
jns
and
imul
test
dec
js
push
sbb
cmp
push
les
sub
pop
stc
and
je
out
test
cmp
imul
stos
push
ins
mov
imul
cmp
mov
pop
adc
dec
mov
dec
enter
test
cwde
loopne
jge
rcr
leave
inc
inc
stc
jmp
fld
sub
dec
or
add
jp
jge
stc
pop
add
lahf
arpl
add
out
and
mov
inc
pop
mov
mov
jmp
mov
inc
inc
mov
jg
push
popa
enter
and
sets
and
fidiv
dec
mov
dec
clc
mov
sti
outs
mov
sbb
ds
lods
addr16
out
inc
adc
sub
ja
cli
dec
lea
retf
lahf
(bad)
xchg
inc
hlt
outs
adc
sar
jle
ds
repz
les
lock
and
arpl
inc
iret
adc
push
arpl
xchg
xor
sub
xchg
xchg
cli
and
mov
ret
xor
xor
sbb
ins
retf
jge
cmp
jmp
fdivr
dec
or
popa
repz
dec
mov
sub
cmps
adc
(bad)
jb
jmp
fwait
add
add
jle
mov
and
popf
(bad)
fnstcw
push
hlt
(bad)
pop
(bad)
pop
lahf
and
clc
add
(bad)
push
test
pop
jecxz
les
das
lock
dec
push
(bad)
fcom
and
sub
mov
cmp
jge
adc
scas
stos
cmp
mov
lods
dec
mov
pop
inc
cmp
cmp
pop
fadd
and
jbe
ja
popf
out
jmp
adc
int3
and
aas
into
jl
xchg
pop
movs
push
(bad)
cmp
push
ret
mov
dec
fimul
or
inc
pop
dec
movs
mov
shl
sahf
scas
fnstenv
(bad)
sub
shr
inc
sbb
push
imul
inc
inc
or
or
je
add
mov
adc
in
inc
cmp
not
push
loop
je
cmc
sbb
and
pop
js
loopne
lods
inc
push
xchg
retf
or
cmc
std
jno
cmp
adc
or
or
jecxz
dec
dec
and
xchg
xchg
out
cwde
es
jno
pop
and
pmulhuw
test
xchg
inc
ins
imul
lahf
ins
or
push
push
sub
xor
cmp
es
dec
fistp
lods
sbb
pushf
mov
xlat
mov
fisubr
arpl
imul
dec
xchg
pop
xor
popf
cmp
movs
fs
pop
sub
nop
pop
pop
stc
dec
repnz
stos
stc
enter
xor
ss
sti
sub
mov
dec
cmps
pop
movs
(bad)
mov
sbb
add
xlat
bound
sbb
push
push
add
es
xchg
popa
mov
inc
dec
inc
sub
dec
adc
and
ins
push
pop
sbb
test
les
aad
mov
mov
fbstp
pop
mov
dec
xor
inc
mov
xor
aaa
adc
inc
push
mov
les
xchg
(bad)
adc
jns
out
xor
pop
ss
xchg
xchg
cld
or
pop
and
cmp
cld
iret
fcmovne
jo
fucom
shl
das
dec
pop
dec
aas
out
ret
sub
and
les
xchg
xchg
sub
fdiv
imul
fdiv
aam
aad
xchg
xchg
dec
stc
xor
pop
xchg
add
aad
pop
fwait
push
repz
push
mov
sub
in
or
ficomp
inc
fsubr
es
xchg
or
sbb
cs
add
pop
mov
xchg
repnz
mov
jg
in
sub
iret
daa
jb
sub
rol
mov
or
popf
stc
sbb
leave
jae
call
pop
in
push
daa
lock
mov
push
lods
outs
scas
pop
push
push
sub
jbe
mov
shl
daa
mov
daa
sbb
xchg
push
loope
imul
or
xchg
cmps
test
mov
inc
mov
out
mov
push
inc
aas
xchg
lods
pusha
pop
rcl
fs
mov
and
test
mov
movs
ds
jnp
out
sub
mov
dec
pop
fcmove
je
cmp
out
mov
dec
mov
mov
jmp
test
test
mov
arpl
add
adc
imul
or
sub
(bad)
mov
std
mov
dec
daa
jnp
pop
inc
add
push
(bad)
fmul
adc
dec
pop
aad
test
test
cwde
cmp
mov
and
mov
adc
movs
xchg
ja
xchg
stos
pop
cmp
cmp
inc
pop
sti
inc
ds
imul
js
les
xchg
and
sbb
xchg
push
jl
ins
shl
inc
das
outs
leave
fstp
jnp
sbb
sbb
ins
(bad)
scas
adc
inc
sbb
sbb
sub
std
pushf
in
dec
pop
mov
sub
test
push
mov
push
js
fidiv
das
in
or
fldenv
test
(bad)
xor
xchg
inc
fld
jecxz
int3
ins
mov
cdq
xchg
ins
sbb
jb
mov
loopne
call
shr
adc
or
sbb
dec
push
into
jnp
sbb
inc
hlt
push
mov
mov
mov
add
dec
cmps
je
ret
ins
fbstp
in
arpl
ds
or
sbb
test
xchg
or
push
mov
add
idiv
sbb
mov
and
or
push
out
in
mov
inc
je
or
dec
jge
mov
mov
enter
pop
loop
add
jo
push
retf
jae
retf
jl
lds
jae
scas
jge
jno
sub
push
dec
das
mov
(bad)
rcr
mov
or
jp
(bad)
jmp
lods
mov
idiv
and
jle
push
adc
push
ins
leave
repz
sub
fdivr
xchg
imul
in
dec
test
inc
or
stc
inc
jge
xchg
jne
out
and
dec
dec
sub
push
mov
mov
pop
mov
(bad)
mov
mov
stos
add
popf
push
push
(bad)
fnstcw
mov
fwait
sub
mov
pop
push
sbb
(bad)
mov
cmp
add
or
push
and
pop
cmp
scas
fmul
shr
(bad)
cs
pop
mov
into
sar
jle
jl
enter
or
push
cmc
les
push
lds
mov
jmp
aam
and
(bad)
push
sbb
mov
xchg
pop
inc
jmp
call
cmp
fcomip
lods
rcr
xor
sub
mov
cld
or
lahf
sbb
aaa
scas
sub
shl
pop
xor
push
inc
test
stos
lea
in
xor
in
cmp
xor
nop
adc
sti
cmc
mov
dec
pop
xchg
fisubr
jmp
dec
mov
mov
dec
mov
mov
cmps
sub
leave
icebp
sub
iret
mov
gs
mov
(bad)
jnp
sub
sub
and
dec
sub
sar
xchg
in
and
div
sbb
and
push
sub
xlat
dec
int
jns
cmp
push
outs
add
push
pop
push
jle
jmp
pop
cdq
jle
in
push
push
push
cld
and
inc
add
xchg
xor
enter
sub
pop
dec
xor
inc
inc
sahf
add
and
pop
cmp
or
mov
xchg
sbb
mov
inc
popf
jge
sets
lods
call
ins
jbe
nop
dec
mov
mov
iret
in
or
mov
js
imul
adc
lods
push
ficomp
mov
mov
inc
icebp
test
push
inc
push
or
jne
repnz
iret
mov
(bad)
mov
jne
xor
shl
pop
test
push
rol
jb
and
inc
movs
adc
ins
clc
jns
retf
out
xlat
retf
add
les
stos
ins
inc
jge
into
xchg
je
adc
div
dec
sub
mov
xchg
ins
and
(bad)
mov
jle
fisttp
arpl
jge
xlat
popf
adc
outs
bound
(bad)
shr
add
mov
dec
inc
cmp
in
cli
jae
loop
push
jg
push
fldcw
inc
test
push
xchg
add
xor
sub
fistp
dec
jne
pop
popa
inc
repz
mov
sub
into
jp
ficom
repnz
xor
jp
sbb
xor
mov
repnz
mov
xchg
loopne
lock
or
jp
enter
scas
cmp
in
xchg
repz
outs
xlat
jne
mov
inc
sub
dec
mov
xchg
mov
int3
jmp
jp
fmul
out
dec
gs
add
mov
push
jne
adc
in
daa
push
mov
(bad)
jmp
dec
sti
cmp
pop
push
mov
mov
fwait
inc
cld
dec
loopne
icebp
loopne
(bad)
(bad)
pop
and
cs
add
and
(bad)
dec
stc
fcmove
xchg
jg
dec
repz
stos
mov
retf
ds
outs
jle
or
jge
fistp
fs
aad
xor
and
adc
sar
stos
ja
shl
push
dec
inc
pop
pop
xor
pop
cmp
and
shl
push
or
xor
push
xchg
rol
dec
mov
or
das
and
mov
xor
sbb
ror
std
xchg
in
mov
in
cmp
imul
lahf
lods
inc
test
pop
or
inc
inc
aad
movs
xor
pop
mov
sahf
and
push
mov
sbb
aas
add
pop
popf
dec
sbb
leave
daa
jo
add
inc
cmc
jmp
mov
out
sub
inc
pop
fdiv
mov
repnz
jge
xor
xor
inc
retf
nop
push
out
mov
xchg
imul
(bad)
fcom
xchg
sbb
ja
push
aaa
mov
xchg
sahf
add
call
jecxz
jecxz
stos
mov
jno
mov
call
gs
fcmovnbe
test
scas
pop
sahf
lods
mov
jg
push
xlat
rcr
shl
retf
mov
inc
daa
cli
lods
dec
daa
jecxz
fcmovbe
inc
les
and
xchg
nop
(bad)
push
lahf
ins
push
pop
nop
adc
push
inc
fimul
push
scas
xchg
cmp
in
imul
inc
jnp
mov
imul
ds
adc
aam
in
cmp
icebp
mov
sbb
pusha
bound
daa
cmp
fiadd
fcmovnbe
mov
and
shl
(bad)
fldcw
or
push
and
push
xor
dec
in
dec
mov
and
(bad)
into
call
push
push
add
imul
jmp
inc
stos
xor
(bad)
iret
clc
aad
fidivr
sub
popf
fs
movs
dec
sbb
add
adc
test
in
popf
push
outs
ret
ret
mov
pushf
test
hlt
add
or
mov
xor
jne
fsubr
ror
into
or
cmp
adc
and
mov
inc
jb
fwait
jmp
lahf
xchg
dec
sar
adc
xchg
into
inc
push
movs
(bad)
cld
mov
lods
dec
and
lods
out
cmp
pop
adc
ja
(bad)
adc
jne
hlt
xchg
sbb
push
pop
inc
sub
fnstsw
fisttp
cmp
aas
sahf
(bad)
adc
cmp
(bad)
loopne
fisubr
shl
nop
or
cld
and
mul
jp
dec
xor
mov
mov
sub
or
mov
mov
lock
xchg
xchg
rcr
in
jle
jne
mov
cmp
jo
dec
cmp
nop
sub
push
or
add
mov
jle
test
mov
ret
mov
jns
push
in
jp
push
cld
fst
(bad)
cmp
jecxz
fcomp
xchg
mov
daa
xor
mov
std
pop
or
pop
adc
push
sub
sbb
call
and
iret
xor
push
test
test
outs
pop
sar
icebp
sbb
cmp
test
retf
or
lahf
mov
pop
jmp
lea
fimul
or
div
popf
mov
dec
outs
scas
repnz
test
inc
stc
or
bound
repz
outs
mov
out
or
cs
ret
cdq
push
or
out
xchg
jb
jns
leave
xchg
ret
dec
mov
adc
jecxz
sti
popf
int3
pop
xchg
cmps
mov
fnstcw
mov
cld
es
loopne
scas
and
into
shr
fisttp
xor
in
sub
and
jmp
sbb
jp
pop
inc
dec
aaa
cmp
into
xor
shl
jno
sub
js
jmp
ret
push
jmp
adc
sti
out
test
shl
sub
clc
sub
inc
mov
fild
fwait
call
cdq
mov
pop
imul
jbe
push
arpl
cmp
aad
push
in
outs
fild
dec
loope
sub
fdiv
aaa
fmul
fwait
ja
push
cmp
xchg
cmp
mov
mov
cdq
mov
pop
or
inc
jl
pop
ins
mov
rcr
dec
add
ins
aas
pop
out
jb
sar
xlat
mov
add
mov
mov
aad
inc
and
gs
packsswb
xor
ficomp
and
outs
in
inc
test
enter
test
jns
cmps
rcr
jbe
xor
cld
shr
bound
lea
js
loope
add
(bad)
jbe
fdivr
repz
test
out
call
cmp
dec
cmc
xchg
sbb
pop
loopne
(bad)
mov
push
mov
dec
dec
popf
retf
aam
and
pop
and
xchg
in
rcl
cld
ins
or
imul
sub
xor
dec
jne
and
cmp
fs
pop
mov
or
inc
fisttp
(bad)
mov
iret
mov
call
jo
mov
in
icebp
jge
push
sbb
test
inc
(bad)
into
daa
fadd
push
cmp
adc
lea
cmps
sbb
mov
arpl
fwait
xchg
sub
xchg
xchg
mov
pop
outs
sar
cwde
outs
mov
pop
pop
clc
xor
shl
jp
fadd
sar
dec
repnz
jmp
cmc
jg
pop
(bad)
mov
jb
dec
mov
bound
sahf
jecxz
inc
cmp
mov
pop
push
pop
or
retf
repz
popa
push
add
daa
sub
xchg
dec
not
leave
pop
into
lods
jnp
sbb
in
cmp
adc
xchg
xor
xor
push
jb
jecxz
lock
xor
add
fnsave
(bad)
das
push
push
push
retf
int3
push
out
mov
fcom
aad
push
fcom
dec
les
scas
sub
inc
push
jge
inc
call
or
rcl
shl
mov
mov
outs
scas
mov
mov
mov
sub
clc
inc
pushf
push
loopne
test
mov
cmc
sub
cmp
xor
adc
xchg
xor
sti
push
sbb
rol
fistp
gs
(bad)
xchg
lahf
in
jl
fisttp
jbe
inc
xor
xchg
xchg
cmp
inc
sahf
jmp
aam
fwait
scas
dec
daa
push
ds
shl
addr16
outs
xor
sub
out
sub
leave
fldenv
outs
mov
cli
mov
imul
call
stos
stos
sbb
or
call
movs
rep
and
or
(bad)
dec
test
stos
inc
mov
idiv
fwait
(bad)
mov
lock
mov
mov
test
arpl
ss
arpl
sbb
cdq
test
push
cwde
push
push
or
sbb
xchg
pushf
(bad)
inc
std
and
adc
or
lahf
mov
xchg
mov
stos
push
cld
pop
push
pushf
out
and
dec
pop
scas
jae
push
ret
inc
popa
cmps
push
dec
out
sbb
inc
scas
cmps
inc
push
xor
cmp
(bad)
jns
add
aaa
aam
adc
ret
mov
mov
icebp
lds
(bad)
xchg
out
and
xchg
mov
fxch
icebp
aaa
popa
jle
int
mov
and
aad
call
mov
sbb
and
xor
stc
aaa
(bad)
ret
mov
jg
mov
lea
cmp
mov
movs
iret
add
arpl
pop
pop
(bad)
adc
pop
fiadd
mov
cs
jle
push
cmp
out
inc
jle
(bad)
push
ret
sbb
cli
test
pop
or
jmp
mov
xchg
mov
fidivr
cmp
inc
cmps
add
ret
hlt
adc
test
dec
pop
and
mov
inc
loopne
call
or
ins
loop
add
sub
adc
add
into
hlt
add
rcl
not
add
(bad)
or
or
leave
ins
adc
xchg
jmp
add
add
ss
in
lea
or
mov
or
xchg
inc
mov
or
mov
nop
pop
mov
ret
inc
mov
adc
inc
sub
mov
scas
mov
and
sbb
xchg
aas
dec
inc
dec
mov
mov
ret
mov
xor
ins
jg
aaa
mov
popa
adc
mov
mov
in
cwde
test
je
lods
js
mov
cmp
shl
add
pop
cmp
ds
dec
mov
jle
xchg
sub
sub
dec
mov
sub
mov
fadd
out
stc
aam
arpl
push
or
cmp
(bad)
pop
scas
repz
call
rol
lods
mov
ret
jno
shl
addr16
aam
repz
and
sbb
ins
push
adc
xlat
in
jb
test
xchg
out
xor
hlt
and
pop
sbb
in
into
stos
out
sahf
daa
mov
in
add
xchg
dec
aaa
add
sbb
sbb
jbe
push
mov
dec
gs
(bad)
or
xor
test
and
sbb
cmp
not
and
pop
push
enter
or
popa
int
aas
lock
xchg
xchg
mov
inc
loope
loope
lock
stos
scas
mov
push
repz
adc
push
cmp
xlat
shr
shl
inc
test
dec
test
out
jmp
xor
jle
pushf
jg
sbb
push
int
cli
sti
jb
(bad)
pop
sub
test
jmp
test
inc
imul
pop
dec
mov
mov
out
stos
fs
pop
push
in
test
iret
jae
inc
sahf
in
test
adc
test
js
out
adc
ror
push
xchg
gs
adc
jp
jl
lahf
lea
and
dec
fistp
inc
jb
fdivr
push
push
test
xchg
mov
in
scas
mov
loope
out
lea
mov
fnsave
cs
out
scas
lods
and
cmp
jbe
jge
shr
es
in
arpl
fld
push
or
or
add
scas
inc
jmp
pop
loop
call
mov
xchg
sub
xchg
call
aaa
mov
icebp
jnp
ret
fmul
jecxz
or
lds
xchg
in
or
or
cmp
sub
jae
jb
lock
add
pop
pop
mov
leave
mov
sbb
fbld
mov
out
stc
data16
cld
test
or
aas
mov
jo
cmp
and
xchg
rcr
std
aaa
test
sbb
xchg
in
(bad)
iret
rcl
js
ret
cmp
popa
push
pop
in
pop
push
dec
xchg
lods
sar
push
fldcw
pop
aam
clc
jle
jo
mov
jnp
shl
mul
cli
jne
xor
or
aad
jle
imul
jecxz
(bad)
pop
(bad)
out
je
adc
outs
mov
mov
repnz
sbb
int
cmp
mov
dec
and
imul
sar
push
dec
movs
pop
lahf
dec
add
ror
inc
dec
sub
sbb
retf
adc
js
inc
xchg
sub
mov
sub
fist
xchg
add
fdiv
and
retf
outs
stos
push
call
sbb
adc
fcom
jb
imul
imul
jg
inc
mov
push
push
mov
dec
neg
cmp
sub
call
mov
outs
mov
sbb
js
pop
mov
in
xchg
mov
arpl
repz
test
pop
pusha
ror
jmp
add
sub
out
inc
dec
push
popa
sub
dec
add
fsubr
scas
dec
cmps
dec
adc
fnstsw
add
sbb
sub
mov
jno
clc
pop
addr16
mov
jl
or
es
repz
outs
jge
sbb
push
ins
outs
cwde
mov
call
pop
pop
cs
rol
cmp
adc
aaa
inc
retf
dec
pop
push
or
clc
jge
stos
jne
daa
jbe
jne
pop
jmp
(bad)
out
xor
sub
push
out
sbb
add
dec
out
mov
push
cwde
xor
sahf
scas
scas
push
scas
jne
xchg
adc
mov
stc
pop
push
fwait
pop
jo
xor
sub
clc
xor
imul
push
jmp
loope
imul
jmp
pop
cmp
fcmovnu
ins
mov
ret
xchg
inc
mov
cmp
mov
iret
(bad)
sub
jbe
jno
mov
mov
outs
(bad)
cmp
rcr
pop
push
push
gs
cmp
jns
sub
xor
mov
pop
dec
ja
shl
jecxz
(bad)
xchg
ins
cli
fdiv
dec
in
jnp
inc
xchg
das
(bad)
adc
int
mov
cmp
and
icebp
cmp
dec
pop
pushf
mov
sbb
xor
loope
cmps
cmp
xor
cs
in
jo
dec
out
mov
mov
push
cs
ret
lods
iret
cmp
call
scas
lods
push
xchg
sub
sub
ud2
cmp
push
rcl
and
mov
mov
push
lods
fistp
sbb
jno
push
test
in
(bad)
dec
cmp
shl
sbb
sbb
ret
ins
sub
mov
leave
sbb
repnz
jge
es
sti
mov
inc
test
popf
ret
cmp
inc
pop
adc
or
inc
push
sbb
cli
sbb
popf
rcr
adc
xor
outs
mov
xchg
jns
jmp
pop
adc
mov
inc
pop
sbb
xchg
jmp
ret
pop
or
mov
pop
or
push
fs
mov
pop
movs
int
pop
pop
into
xchg
fimul
gs
dec
out
das
and
clc
xor
ret
xor
je
in
sub
cmps
fbld
xchg
xchg
and
test
ret
cmc
aas
cmps
rol
push
stc
imul
mov
push
test
cmp
push
lea
in
cli
pop
sbb
fld
jecxz
stos
xchg
push
inc
cmp
in
imul
mov
pop
sub
unpckhps
les
out
mov
push
mov
enter
dec
inc
jbe
pop
pop
jle
leave
dec
jmp
mov
pop
(bad)
shl
pop
adc
pop
and
sbb
and
(bad)
fiadd
ins
push
iret
into
adc
cmps
out
add
aad
add
mov
mov
inc
gs
mov
pop
fdivr
ret
out
ins
bound
dec
mov
sub
stos
inc
pop
fstp
adc
in
fs
mov
loop
xchg
mov
scas
add
xor
das
lock
ja
jg
sbb
sub
test
pushf
sub
sar
push
dec
mov
dec
movs
int3
int3
std
inc
and
xchg
pop
inc
loopne
sub
stos
mov
xchg
adc
mov
ss
push
mov
jmp
(bad)
push
ja
mov
lahf
adc
pop
imul
fnsave
fnstsw
sbb
fdivr
movs
or
aam
cmp
dec
out
jbe
mov
mov
fldenv
fdivr
or
push
call
cmp
inc
cmps
cli
sub
or
iret
mov
xchg
jns
(bad)
movs
mov
push
in
psrlq
(bad)
sbb
iret
lds
cmc
int3
(bad)
and
pop
push
out
push
outs
inc
or
or
xchg
fs
inc
retf
movs
and
push
scas
cdq
xchg
push
std
mov
mul
mov
inc
push
xchg
or
dec
addr16
adc
popf
adc
daa
xchg
je
cmp
mov
sbb
mov
push
cli
fstp
add
pop
fs
das
xchg
imul
jle
push
dec
call
jmp
mov
jae
out
push
cmp
adc
rcr
cli
arpl
test
(bad)
ins
lahf
pop
mov
sub
xchg
aam
jge
mov
push
inc
or
js
and
int3
sub
scas
sahf
ret
pop
pxor
inc
jg
out
loopne
imul
sbb
pop
jge
sub
pop
repnz
xchg
sti
outs
(bad)
mov
imul
or
mov
xchg
into
test
fcomp
add
or
dec
popf
pushf
aad
pop
push
ja
repz
popa
cmc
call
add
(bad)
lods
adc
ret
retf
jmp
adc
gs
push
cmp
push
or
sub
popf
shr
mov
mov
lods
out
push
pop
mov
fld
stos
add
lea
aam
call
mov
xor
add
jnp
imul
jmp
add
mov
out
iret
xor
mov
mov
cmp
jg
and
inc
shl
xchg
xchg
arpl
(bad)
es
dec
add
adc
mov
(bad)
iret
stos
lock
aad
inc
push
cmp
faddp
or
pusha
imul
pop
mov
in
mov
scas
dec
ins
sub
daa
xor
test
fild
ror
imul
(bad)
jle
pop
mov
cmp
(bad)
adc
aaa
xor
imul
mov
in
ret
push
mov
push
cmp
mov
out
xchg
sbb
hlt
in
test
cwde
pop
xor
inc
mov
pushf
imul
ret
leave
push
add
push
and
lods
mov
add
loope
push
pop
inc
xor
push
or
iret
mov
clc
mov
push
outs
je
cmp
xor
inc
addr16
lods
not
call
xchg
out
sub
or
push
pushf
push
push
movnti
xor
mov
add
and
add
jns
(bad)
repz
bound
in
call
cmps
pop
pop
mov
leave
xchg
test
adc
xor
stos
adc
sbb
xor
mov
(bad)
sbb
fucomp
imul
mov
popa
test
and
test
add
mov
aas
stos
push
mov
mov
scas
xchg
cmps
pushf
in
shl
test
pusha
dec
xlat
out
int
ror
jno
in
stos
mov
popf
sub
shl
mov
aaa
movs
call
and
mov
sbb
xchg
lahf
retf
imul
xchg
repnz
out
rcr
mov
inc
pop
and
cdq
fs
push
int
mov
adc
dec
mov
setne
adc
push
fidiv
ins
sbb
cmp
sbb
inc
push
sub
pop
mov
shl
lods
retf
cmps
add
ins
fcmovu
pop
push
xor
push
push
inc
sbb
dec
data16
and
fsubr
push
cmps
test
mov
movs
jle
push
test
mov
mov
in
and
dec
inc
xor
mov
stc
adc
mov
mov
ffree
dec
or
adc
(bad)
fcmovbe
bound
pop
(bad)
sub
data16
jb
repnz
hlt
aas
call
jg
call
mov
out
jp
sbb
inc
adc
cmps
mov
hlt
inc
xchg
xchg
xchg
mov
sub
mov
(bad)
stos
outs
out
movs
loopne
movs
out
or
add
lahf
scas
aam
mov
jne
jne
scas
lahf
adc
mov
test
mov
fidiv
mov
mov
arpl
xchg
lods
cmc
mov
jg
jbe
cld
test
add
retf
test
sbb
out
neg
std
or
and
adc
rcl
adc
mov
call
xor
in
xor
fnstcw
mov
inc
pop
inc
fbld
aas
pusha
dec
pop
adc
inc
xchg
sbb
(bad)
icebp
inc
lods
xor
xor
test
jle
daa
fcomp
pop
jb
and
adc
jo
jne
add
cmp
cli
or
mov
fstp
push
lds
add
ins
cld
or
jg
mov
or
rcl
push
out
push
push
cmp
retf
les
into
jle
movs
(bad)
sub
adc
stc
dec
adc
inc
mov
(bad)
in
cmp
inc
(bad)
and
je
test
push
adc
ins
push
xor
mov
or
ret
inc
pop
lock
sbb
in
push
push
in
int3
dec
adc
xchg
dec
loope
(bad)
sub
ins
cmp
jno
in
xchg
pop
test
fidiv
loope
es
movs
mov
pop
mov
fiadd
repz
sbb
sbb
sbb
and
push
std
xchg
daa
bound
fisubr
xor
call
cmc
push
lds
xlat
aam
(bad)
repnz
(bad)
int3
out
ja
add
rol
inc
jg
fist
loope
leave
addr16
jmp
and
imul
cmp
iret
mov
shr
call
sub
mov
(bad)
pop
adc
imul
or
pop
adc
or
mov
and
mov
neg
ins
xor
mov
(bad)
sub
out
test
push
in
jnp
mov
xor
into
pushf
or
repnz
mov
mov
adc
popa
push
mov
cmps
jp
xor
mov
sbb
jne
stos
mov
cld
pop
jg
aaa
aas
jo
xor
xlat
xchg
in
xor
jmp
loope
nop
push
mov
dec
mov
mov
push
add
les
or
push
cmc
js
seta
lock
ret
dec
cmps
pop
stos
rcr
outs
jecxz
out
xor
cmp
rol
cmp
ins
cmp
imul
rcr
cli
and
out
or
(bad)
nop
rol
and
aad
ret
jl
hlt
or
mov
push
(bad)
fisubr
rep
xchg
cs
fadd
ds
call
jnp
scas
imul
and
sbb
add
jge
retf
cmps
sub
loop
fwait
add
xor
std
inc
fisttp
ja
popa
cld
das
pop
dec
lea
cld
sub
jns
and
lods
cld
repz
cmp
mov
imul
outs
jge
and
aad
scas
push
xchg
and
mov
mov
xchg
dec
mov
pushf
jmp
jbe
lds
or
dec
in
clc
cld
lea
sbb
aam
jb
test
adc
lods
sahf
imul
xchg
mov
mov
jge
or
(bad)
je
and
leave
test
shl
dec
pop
in
ret
mov
push
push
leave
pop
mov
xchg
daa
mov
dec
dec
popa
loop
cld
sub
leave
push
pop
out
scas
mov
aad
mov
sub
push
adc
push
cmp
sub
xor
repnz
push
inc
mov
adc
call
rol
mov
std
jb
jge
dec
das
sub
sbb
inc
jmp
fdivr
inc
out
icebp
iret
jmp
xchg
sub
or
je
xchg
jmp
cmp
pop
out
sbb
push
mov
sbb
cmp
cmc
cmc
jb
lods
mov
mov
xchg
mov
lahf
loope
mov
out
jl
mov
sbb
mov
mov
call
mov
iret
cmp
cwde
sub
mov
and
mov
adc
fbstp
add
das
xlat
cli
pop
cmp
push
pop
add
je
dec
mov
sub
jge
push
adc
inc
das
outs
retf
xchg
addr16
mov
outs
mov
movs
jmp
stc
and
arpl
or
mov
ins
pop
mov
rcl
shr
mov
gs
pushw
fstp
movs
ret
sbb
loopne
fild
add
rcl
pop
xchg
aaa
push
mov
aaa
fisttp
(bad)
ficomp
lahf
add
or
lods
test
sbb
icebp
rol
movs
cwde
sub
xlat
dec
lods
xor
push
xor
xor
pop
(bad)
(bad)
test
(bad)
enter
cmp
jbe
aas
or
frstpm(287
sub
out
mov
xor
cmps
jle
aam
xchg
pop
aas
fsub
add
dec
xor
jge
imul
stc
xor
scas
adc
push
pop
fisttp
div
call
repnz
inc
push
int
cmp
ss
ficom
mov
jae
inc
pushf
add
pop
xor
sbb
iret
rcr
cmp
sub
push
icebp
xchg
(bad)
call
push
sbb
dec
cdq
fs
and
cmps
adc
dec
jge
sbb
cdq
rcl
mov
cmp
jmp
inc
xor
ret
xchg
dec
inc
enter
pop
dec
sbb
push
sbb
push
mov
add
(bad)
fimul
mov
pop
(bad)
xchg
movs
jge
fdiv
or
adc
mov
pop
scas
dec
mov
(bad)
jecxz
xchg
dec
arpl
cmps
(bad)
jnp
stc
jo
inc
xchg
mov
(bad)
pop
sbb
loope
adc
pop
cmp
call
push
test
popa
arpl
repz
and
in
stc
inc
popa
fisub
inc
push
xor
jle
aaa
push
test
iret
push
xor
pop
in
xor
in
test
popa
and
adc
push
jmp
push
xor
xchg
enter
xchg
jp
xor
ds
xor
gs
push
cdq
push
push
or
mov
rcr
mul
xor
mov
jmp
and
(bad)
xor
jns
xor
pop
jmp
adc
clc
addr16
jmp
adc
pop
nop
cld
pop
(bad)
and
xchg
add
(bad)
imul
or
adc
cdq
mov
add
mov
test
cmp
dec
inc
sbb
sub
nop
push
dec
xor
xor
jle
cld
pusha
pop
mov
mov
jmp
ja
mov
jnp
push
aaa
push
push
cmp
cmc
mov
jecxz
jb
addr16
shr
push
iret
dec
cmp
iret
jp
loop
rol
test
sti
dec
lds
jmp
sub
mov
rcl
inc
push
iret
or
mov
mov
out
jmp
jnp
adc
es
fnstsw
xchg
(bad)
popa
xchg
in
or
jmp
dec
pop
ret
aas
lods
mov
rcr
mov
pop
mov
inc
and
loope
addr16
(bad)
xlat
loopne
push
call
inc
test
test
mov
lea
jecxz
clc
not
add
in
push
pop
inc
mov
adc
sub
cmp
push
fwait
mov
addr16
test
dec
jmp
pushf
jg
(bad)
out
sub
cmps
sub
stos
cmp
inc
jne
sub
xchg
xchg
scas
out
add
push
pop
xchg
(bad)
aad
(bad)
cmc
(bad)
lea
mov
ja
cmp
sbb
sub
mov
mov
jmp
std
push
xor
fsub
retf
mov
dec
and
(bad)
mov
mov
gs
retf
jg
xchg
not
stos
push
cmp
mov
mov
aaa
xor
pop
sub
call
in
rol
dec
ins
mov
push
ins
jne
jnp
mov
dec
sub
(bad)
lock
xchg
sbb
fsub
test
cmps
fisttp
adc
push
xchg
push
dec
out
pushf
pop
aas
xor
dec
push
add
pop
adc
(bad)
mov
(bad)
loop
cld
adc
js
ror
xlat
adc
xor
neg
fcomp
int
fsubr
repz
hlt
cmp
mov
imul
mov
in
out
xchg
inc
and
fisttp
push
scas
(bad)
in
mov
xchg
fcmovne
int3
cmc
push
ret
jne
and
(bad)
clc
ins
push
pop
dec
sub
sbb
jnp
mov
nop
repz
adc
mov
mov
mov
sti
xor
mov
inc
pop
ss
push
inc
pop
jnp
push
xchg
pop
push
scas
inc
in
adc
test
ss
loope
into
out
cmps
mov
jmp
out
push
shl
adc
mov
fstp
mov
cmc
push
sub
inc
cmp
jo
loopne
(bad)
data16
icebp
pushf
xor
fild
sbb
sbb
or
pop
mov
enter
xor
ds
and
and
push
jge
cld
jg
and
icebp
pusha
push
imul
cmp
sbb
out
jnp
fimul
dec
add
xor
mov
mov
fimul
cmp
dec
mov
sub
loope
jns
add
mov
pusha
aas
movs
push
xchg
xor
sti
adc
jge
jmp
inc
imul
sbb
das
test
shr
inc
mov
movs
retf
push
(bad)
xchg
aaa
and
adc
ss
icebp
add
dec
cmp
out
cmp
push
sahf
mov
sub
in
pop
das
popa
xchg
icebp
push
je
(bad)
addr16
fcomp
fdiv
daa
push
inc
loopne
cmp
gs
ins
loope
sahf
icebp
out
js
adc
mov
adc
xchg
call
lea
sub
les
xor
fwait
in
cmc
fild
pop
in
js
or
cmp
cli
inc
or
push
inc
cld
jmp
cmc
sub
or
fisubr
push
in
(bad)
xor
sub
or
fild
jge
pop
shr
dec
dec
sbb
sbb
mov
into
jo
push
ja
out
inc
rol
ret
inc
adc
push
fs
pop
ret
in
(bad)
out
in
test
sub
push
sbb
ins
out
mov
leave
out
out
hlt
mov
xor
xchg
push
mov
adc
sti
push
test
inc
add
fiadd
and
fnstcw
xchg
dec
pop
push
xchg
inc
mov
mov
add
xchg
(bad)
(bad)
ds
cmp
xchg
xlat
pop
add
cli
daa
inc
in
mov
(bad)
cmp
xchg
gs
test
mov
cld
adc
loopne
ror
add
jle
in
dec
xor
xchg
xor
aad
retf
add
pop
dec
pop
clc
into
pop
sub
lods
mov
into
adc
push
pop
jnp
jae
or
sbb
xor
pop
xor
(bad)
lahf
dec
es
sub
mov
push
enter
leave
ins
and
mov
mov
scas
jecxz
stos
mov
pop
outs
int
jno
cmps
mov
popa
scas
cmps
dec
repz
xor
sbb
sar
or
cmp
mov
fwait
loopne
pop
cwde
cwde
popa
call
pop
rcl
mov
fisttp
add
mul
mov
fimul
sbb
xor
xchg
xchg
lds
in
push
cmp
adc
scas
pop
xchg
inc
mov
sbb
mov
adc
jmp
jp
jp
out
jmp
xchg
pusha
xchg
fisttp
sub
mov
ins
sub
mov
cmp
jl
jns
xor
mov
xchg
jmp
push
popf
pop
jle
mov
stos
popa
or
(bad)
neg
cmc
lahf
pop
in
test
bound
stc
push
adc
xor
xlat
mov
pop
rcr
stc
ficomp
nop
pop
xchg
aad
mov
rcr
(bad)
pop
cmp
ror
and
aaa
icebp
cld
cdq
jg
lock
and
aad
clc
movs
in
test
jbe
and
aas
(bad)
sub
mov
pop
pop
fwait
sbb
cmp
mov
cld
lea
cmp
sbb
repnz
lods
mov
ins
jl
push
jno
cmp
or
sub
mov
fsubr
outs
add
inc
movs
imul
test
mov
aaa
outs
mov
inc
push
mov
pop
fs
dec
popa
xchg
scas
jno
fdivr
push
push
xor
lahf
hlt
std
ins
sbb
(bad)
and
icebp
das
xchg
add
into
sub
ins
imul
sbb
movs
addr16
icebp
xor
xchg
pushf
js
xchg
ror
cmp
cmps
gs
leave
rcl
cli
sbb
push
loop
pop
in
add
xchg
pop
jl
fldenv
dec
pop
inc
dec
arpl
addr16
mov
adc
xor
push
cmps
xor
movs
bound
fld
ins
or
popa
ret
sub
outs
sub
push
into
xchg
out
push
es
mov
into
mov
push
sahf
sub
sbb
cld
jecxz
xchg
outs
and
mov
pop
ficomp
movs
int
sbb
dec
sti
stc
js
push
cwde
mov
cmps
lahf
popa
pop
mov
call
cmp
jmp
pop
dec
outs
aad
jmp
and
adc
dec
mov
cs
or
out
pop
loop
sbb
cmp
popf
or
mov
scas
xchg
loop
add
mov
xchg
cld
inc
movs
jl
and
mov
inc
ins
push
pushf
xchg
int
(bad)
ins
jno
movs
dec
xlat
scas
fild
and
clc
xor
sub
retf
pop
inc
xor
sar
add
xchg
dec
fcom
daa
or
push
adc
push
xor
push
sub
mov
jecxz
pushf
iret
in
outs
xor
push
add
xchg
(bad)
jo
pop
(bad)
stos
jno
and
popa
cs
jmp
rcl
movs
aad
jl
jge
call
fcompp
scas
mov
or
sbb
addr16
jg
xchg
clc
push
mov
dec
cmc
call
mov
(bad)
and
data16
jno
sub
jae
add
gs
retf
sub
and
loope
(bad)
jmp
cmp
add
shl
jno
fs
fadd
jnp
xchg
mov
frstor
inc
arpl
idiv
mov
jbe
inc
inc
and
mov
cwde
jmp
aam
nop
xor
push
cld
mov
aad
jbe
mov
or
jmp
sub
mov
pop
(bad)
mov
adc
dec
hlt
push
inc
jp
(bad)
dec
outs
cli
scas
sub
aam
sbb
imul
test
clc
retf
mov
pop
iret
mov
mov
rcl
inc
sbb
add
add
sti
mov
into
movs
jo
mov
stos
pop
mov
popf
jno
in
sahf
fs
fucom
call
fwait
pushf
in
scas
and
dec
daa
shr
pop
lds
shr
or
out
leave
in
push
sub
mov
loopne
les
jmp
xlat
xchg
pop
mov
sbb
cwde
rcl
dec
scas
xchg
ret
push
mov
pop
dec
inc
add
cs
dec
and
retf
stos
dec
pop
in
jl
cmc
xlat
popa
cmp
or
xor
nop
add
fadd
pop
mov
mov
es
jns
lock
xor
aaa
add
sub
js
mov
and
push
jae
add
cmp
xchg
mov
and
adc
push
sbb
call
repnz
adc
int
sub
nop
(bad)
mov
dec
out
test
xor
cmps
test
les
jmp
repz
pop
and
mov
sbb
adc
cmps
jmp
fmul
xlat
jnp
and
ss
sbb
adc
movs
pop
adc
rep
fsubr
dec
sub
or
fnsetpm(287
inc
addr16
mov
(bad)
aad
daa
into
aas
scas
in
sub
out
test
dec
rcl
(bad)
popa
out
jnp
or
lds
out
movs
lods
rol
adc
out
push
in
icebp
mov
adc
cdq
mov
adc
das
jbe
sbb
fcomp
push
mov
mov
cmps
and
sti
imul
aam
ds
mov
repnz
sbb
add
mov
or
jbe
xlat
xchg
jmp
call
pusha
out
cdq
mov
or
sahf
cwde
in
pop
ins
(bad)
jg
add
jo
aaa
(bad)
loop
adc
js
fs
or
push
(bad)
dec
mov
mov
std
call
imul
jno
cmc
add
jecxz
mov
dec
mov
cmp
push
xchg
loope
retf
mov
push
cdq
and
or
mov
pop
fst
int3
dec
pop
push
(bad)
ror
sbb
pushf
mov
es
mov
or
je
sub
sbb
xor
ret
xchg
loope
out
pop
stos
addr16
push
stos
lea
es
fcomp
push
(bad)
cmp
push
daa
adc
pusha
mov
jno
cmp
retf
mov
pop
sbb
jl
xchg
aad
cdq
das
add
idiv
cmp
jle
sbb
mov
(bad)
inc
call
mov
push
cmp
jmp
add
xor
leave
push
sub
dec
leave
test
stos
adc
inc
inc
mov
into
or
ficomp
push
xchg
push
enter
ret
stos
aam
add
pop
mov
adc
sub
dec
mov
mov
and
shr
imul
or
xchg
push
test
jg
or
xchg
(bad)
into
mov
or
mov
xor
mov
xchg
adc
xchg
daa
leave
and
test
add
js
inc
xchg
mov
pusha
(bad)
mov
mov
lahf
mov
xchg
and
es
dec
mov
mov
mov
call
int3
pop
jbe
inc
mov
out
xchg
rcl
int
xor
hlt
jle
aam
jno
cmps
pop
fwait
mov
sti
and
adc
cmp
cli
fcos
cmps
arpl
adc
idiv
in
xchg
and
push
rcr
cmp
fisubr
fwait
idiv
mov
mov
sub
(bad)
cmps
xchg
jne
push
jb
or
not
or
sbb
(bad)
fild
aas
mov
loopne
mov
sub
push
dec
sti
jbe
cmp
mov
fisttp
add
rcr
jmp
scas
push
enter
push
mov
ret
dec
leave
popf
lods
push
push
inc
(bad)
fs
push
cmc
sar
cmp
pop
sti
pop
xor
fs
in
imul
adc
jg
lea
addr16
cmc
jp
jge
popa
pand
movs
dec
jo
or
xchg
popf
in
jp
shr
add
adc
fdiv
mov
push
push
sbb
pop
xchg
cmp
jae
and
cmc
cmp
js
cmp
aad
les
ins
mov
int3
jno
fimul
(bad)
sub
mov
stos
mov
pop
and
sub
xchg
ja
in
fldenv
fs
xor
and
(bad)
push
movs
je
pushf
xchg
jbe
int3
cwde
or
jns
and
and
jno
jg
push
cmps
mov
mov
jb
mov
sub
push
fwait
push
inc
fadd
sub
and
nop
sub
push
pop
outs
mov
xchg
fs
push
mov
xchg
mov
xchg
adc
cwde
or
mov
loopne
pushf
add
test
jnp
shr
aas
or
push
cmp
fst
xor
enter
mov
adc
aaa
lahf
loope
fdiv
push
push
inc
mov
ins
stc
rol
xor
push
add
call
sti
and
loope
scas
fwait
inc
and
xchg
dec
enter
stos
cs
fwait
out
cli
shl
xor
mov
mov
out
cmp
xchg
mov
int3
mov
int
push
stos
loop
pop
xchg
movs
xchg
dec
inc
inc
mov
iret
mov
sub
cmp
movs
jge
ret
int3
loope
jp
test
js
mov
(bad)
clc
jle
fist
and
(bad)
ror
pop
xor
(bad)
scas
mov
and
push
xor
pop
ds
stos
stc
in
xchg
xor
aaa
mov
pop
mov
mov
ds
xchg
es
pusha
mov
jns
call
and
mov
ret
jmp
fsubrp
(bad)
cli
(bad)
pop
jg
or
cmps
gs
in
xor
jecxz
mov
push
xor
sbb
or
je
jno
xor
pushf
jecxz
adc
ss
cs
pop
or
or
inc
adc
cmps
jbe
loopne
or
cld
(bad)
xchg
mov
or
jmp
fistp
xor
test
mov
push
(bad)
out
dec
enter
aas
mov
or
(bad)
test
sub
push
sahf
mov
outs
daa
repnz
sub
mov
xchg
mov
rcr
ret
and
mov
adc
out
inc
lods
add
push
aaa
mov
jmp
sub
sub
push
sub
and
(bad)
jo
imul
jg
retf
adc
mov
jo
std
push
aam
add
pushf
retf
sbb
ror
in
mov
sbb
out
inc
rcr
sub
add
pusha
adc
js
push
xor
movs
ret
xchg
fnstcw
or
shr
aad
call
xchg
mov
jne
xchg
cmps
jne
mov
cs
sbb
retf
and
adc
mov
xchg
addr16
fs
dec
jg
jle
ffreep
add
cmp
pop
sbb
inc
ins
ins
movs
leave
and
js
popa
movs
pop
mov
mov
jmp
pop
retf
std
fwait
outs
sub
xor
shr
xchg
mov
rol
retf
mov
jmp
lahf
outs
mov
lds
ja
inc
les
xchg
cmps
es
mov
lods
lds
ds
adc
pop
pop
aas
inc
mov
aad
mov
leave
arpl
push
sbb
inc
nop
mov
in
cli
repnz
out
(bad)
push
fcom
mov
cmps
call
jno
xor
pop
sub
mov
mov
imul
in
aad
jmp
aas
lock
and
pop
jnp
pop
aam
inc
push
repnz
fwait
cmp
xchg
sbb
hlt
pop
arpl
jmp
or
jno
jmp
(bad)
sub
imul
sbb
mov
sbb
das
inc
outs
in
pop
out
loop
test
mov
daa
or
fbstp
pop
xchg
ss
pop
add
fisttp
cmp
jae
retf
add
outs
inc
rol
xor
sbb
jbe
out
mov
shl
or
ins
xchg
(bad)
jae
(bad)
shl
or
dec
ss
adc
lahf
mov
sbb
and
iret
mov
enter
inc
sub
adc
push
pop
pop
mov
call
fwait
jae
pop
inc
or
jle
clc
pusha
data16
mov
mov
push
jecxz
ins
out
push
push
hlt
sbb
shrd
jae
or
mov
push
scas
xchg
pop
es
jnp
xlat
xchg
xlat
out
rdtsc
jmp
test
sub
xchg
rcr
ret
or
push
jo
add
pop
adc
push
cdq
lea
ret
adc
ret
dec
push
in
jne
mov
lods
xor
scas
push
sbb
neg
add
cmps
or
xor
out
xor
or
jns
add
icebp
test
stos
jmp
daa
loope
jne
sbb
cld
retf
iret
inc
(bad)
out
adc
enter
mov
mov
ss
inc
outs
mov
sahf
out
and
mov
cmovge
retf
cmps
mov
xchg
movs
cmp
shl
and
mov
xchg
mov
mov
mov
or
sbb
jmp
(bad)
cwde
pop
push
loope
sbb
cmp
xor
jecxz
jb
leave
movs
pop
(bad)
jmp
mov
popf
nop
push
dec
inc
pop
jl
pop
inc
sbb
jmp
test
cmp
outs
pop
mov
scas
cmp
xor
push
mov
jp
ror
dec
shl
xlat
aad
cld
cmp
aas
add
(bad)
xor
in
aam
jp
mul
jnp
(bad)
xor
scas
inc
jecxz
in
pushf
sbb
or
loopne
mov
cmp
das
pcmpgtw
sbb
ja
xor
(bad)
push
bound
xchg
imul
fist
test
dec
push
adc
mov
mov
outs
int
das
xchg
or
stos
push
adc
xchg
sub
jb
adc
rol
mov
pop
movs
sub
pop
xor
xchg
dec
fcom
inc
int
js
cmps
int
sub
inc
jecxz
dec
sar
les
cs
sbb
xchg
adc
ins
lods
dec
jmp
bound
scas
pop
addr16
inc
enter
(bad)
jae
pop
inc
cli
(bad)
lahf
fdiv
push
push
iret
lds
dec
sub
gs
push
aas
push
mov
dec
shr
add
fs
mov
cmp
daa
mov
sahf
xchg
daa
into
std
ins
mov
clc
xchg
shl
je
mov
ss
aas
and
fst
test
dec
repnz
sub
in
push
mov
add
and
push
push
ja
int
repz
enter
lea
(bad)
cmp
and
out
daa
fidivr
loop
pushf
sbb
and
dec
(bad)
fwait
je
mov
stc
adc
xchg
push
xor
enter
stos
je
push
adc
rol
call
dec
jecxz
enter
mov
jmp
mov
pop
jge
sub
pop
mov
mov
inc
mov
or
loopne
je
sbb
out
lods
or
sar
in
into
mov
inc
pop
gs
addr16
cwde
mov
movs
inc
dec
sar
or
mov
sbb
xchg
add
imul
lods
scas
xor
push
iret
mov
sub
mov
dec
xchg
or
mov
mov
or
jg
lods
shl
cs
lods
xor
inc
inc
xor
clc
popa
mov
and
loope
dec
jge
mov
mov
mov
dec
in
test
jbe
jmp
push
or
dec
pop
ss
std
test
aam
xor
mov
aaa
out
mov
mov
mov
std
cwde
sahf
pop
(bad)
mov
xchg
test
ja
add
inc
call
sbb
fidivr
push
push
xchg
pop
jle
sbb
ds
and
cmp
mov
dec
fld
add
in
mov
mov
mov
adc
push
and
int3
addr16
push
in
and
pop
lods
jmp
pop
dec
xor
and
mov
stos
mov
test
ins
push
mov
cmps
push
sub
sub
pop
ja
dec
xor
jo
xor
dec
enter
(bad)
push
sub
mov
add
ffree
ret
call
mov
imul
outs
pop
addr16
add
loopne
into
mov
adc
fmul
retf
not
adc
repnz
jl
add
cmp
call
jne
fild
mov
mov
sbb
mov
inc
loopne
dec
aaa
(bad)
push
push
std
es
sub
out
or
call
cmp
(bad)
jae
mov
(bad)
rcl
jp
jne
loopne
retf
ja
sbb
mov
gs
dec
sub
jb
cs
stos
xchg
outs
cmp
cmps
(bad)
and
mov
add
(bad)
ret
out
shl
jne
xacquire
jl
outs
push
cli
test
in
cdq
xor
sbb
sbb
cdq
and
add
sti
sahf
sub
dec
(bad)
icebp
ret
fldcw
fwait
popa
leave
xchg
shl
sub
gs
xlat
mov
xchg
push
leave
or
stc
fwait
lock
or
push
int3
jge
outs
in
adc
rcr
or
mov
push
(bad)
mov
lea
enter
stc
out
xor
pushf
aam
cmp
jne
push
jmp
mov
or
or
loop
jnp
fmul
jmp
(bad)
push
inc
mov
xchg
or
int3
mov
adc
into
push
test
inc
inc
mov
pop
push
imul
iret
mov
mov
mov
and
js
out
cmp
fisttp
(bad)
loope
std
adc
jmp
loope
dec
jno
sub
xchg
inc
fild
sub
je
nop
test
jmp
popf
lea
xchg
add
sahf
ror
daa
mov
inc
aas
xchg
shr
iret
lock
xor
mov
aaa
jno
cld
sbb
cmp
adc
pop
add
xchg
jle
cmp
dec
mov
dec
and
fbstp
daa
cmp
inc
out
(bad)
and
inc
scas
sbb
cdq
push
jp
nop
push
das
cld
pop
xchg
imul
cmp
sub
iret
rcl
mov
cli
jns
jge
add
jnp
dec
cmps
jmp
jno
adc
daa
(bad)
out
inc
pop
cmp
inc
dec
mov
xor
dec
outs
sti
into
mov
mov
(bad)
cli
jnp
mov
sub
retf
lea
stos
test
cmc
fcmovu
jle
clc
call
mov
or
addr16
push
fidiv
jmp
aad
push
inc
lea
adc
mov
ja
mov
imul
enter
mov
repz
movs
int3
cld
cld
adc
shl
enter
int3
pop
push
leave
aam
dec
das
fcom
test
imul
data16
rcr
adc
cmp
pop
ins
in
mov
xor
out
leave
pop
test
lock
inc
addr16
push
mov
jmp
sti
push
outs
and
sub
xor
xchg
mov
mov
pop
jno
mov
jg
inc
dec
inc
bound
jge
call
and
enter
sbb
mov
xchg
jl
inc
push
idiv
lods
das
pusha
movs
xor
out
inc
int3
shr
retf
xchg
sub
(bad)
dec
or
fwait
pusha
fistp
push
cdq
mov
mov
out
fdiv
bound
and
inc
nop
add
fld
adc
mov
mov
jmp
fidivr
outs
cmp
stos
dec
push
cmp
mov
call
stos
mov
add
les
imul
cmp
bnd
jae
ja
mov
test
test
ja
lods
icebp
or
or
sar
mov
imul
xor
daa
inc
das
aam
cmp
mov
enter
mov
add
stos
test
xchg
jns
stos
loop
pop
lods
test
cli
les
(bad)
sbb
mov
sub
adc
xor
xchg
jmp
mov
jmp
scas
cmps
cmp
push
aad
fsubp
shl
sub
and
jns
ror
in
add
call
dec
jecxz
sub
sub
mov
xor
adc
fidiv
jl
sbb
mov
dec
imul
mov
js
int3
mov
mov
int3
test
icebp
push
pop
sbb
push
add
add
aas
call
cs
push
sbb
jl
dec
idiv
je
inc
pop
dec
adc
pop
ins
push
mov
addr16
or
and
iret
push
mov
stos
pop
movs
dec
sbb
or
sbb
rcr
inc
push
jle
or
stos
dec
je
adc
mov
pop
out
pushf
mov
(bad)
loop
into
jmp
mov
out
pop
or
ret
inc
xor
neg
imul
add
xchg
pop
inc
cmp
push
push
loope
jge
stos
test
mov
in
popa
mov
clc
xchg
adc
nop
jecxz
and
nop
lods
xor
repz
lods
ffree
(bad)
push
cmps
movs
mov
dec
fisub
or
retf
or
push
push
mov
add
cmp
cmp
clc
dec
test
and
sub
bndldx
cmps
fwait
stc
test
pusha
outs
lods
pop
jae
xor
mov
or
rcl
in
ds
outs
sub
aas
mov
or
dec
(bad)
aas
jno
hlt
jp
loop
es
retf
or
scas
cs
ds
and
or
es
add
jp
enter
cmc
adc
enter
ja
jbe
pop
out
jo
out
stos
or
mov
dec
push
scas
cmp
jecxz
outs
in
xchg
mov
neg
dec
xchg
leave
ret
mov
or
xchg
jmp
in
movs
outs
retf
xchg
in
ins
call
jge
pop
push
and
pusha
shr
ins
adc
sub
mov
and
mov
sbb
pop
in
ror
sbb
add
repnz
dec
dec
fadd
adc
pop
xor
mov
adc
data16
cs
cmps
xor
mov
push
ror
add
xchg
lods
push
push
jmp
nop
jb
dec
or
je
les
jb
add
mov
sub
stos
jae
fimul
je
imul
and
pop
add
cmps
mov
cmp
add
sub
test
jle
popf
(bad)
inc
xor
outs
lods
jnp
push
push
xchg
pop
(bad)
adc
mov
and
xor
lea
or
and
mov
in
push
popa
pop
push
sub
cs
in
fwait
loope
xor
cdq
inc
adc
popa
sbb
pop
xchg
or
mov
sbb
mov
cmp
xchg
sar
mov
cli
adc
repnz
fsub
dec
retf
jo
(bad)
iret
jae
aad
mov
xor
in
scas
scas
mov
inc
ret
push
test
stos
or
fidivr
stos
mov
mov
xor
not
jns
add
cmp
mov
xlat
(bad)
mov
es
aad
popa
mov
cli
mov
popf
int3
aas
fcomp
jne
(bad)
mov
xchg
cmp
jmp
inc
xchg
iret
mov
test
nop
sar
inc
or
pop
add
adc
(bad)
mov
sub
xchg
and
sti
inc
loop
lea
or
imul
xor
sub
xlat
or
test
mov
shr
and
jb
into
ss
in
fidivr
stos
dec
and
mov
jp
xchg
cmp
xchg
aad
cld
add
pop
xchg
std
ret
dec
pop
jp
and
and
loope
add
in
xchg
dec
add
xor
mov
pushf
xor
rol
cmp
cli
mov
sub
cmp
call
sti
es
inc
(bad)
adc
push
in
int3
jecxz
mov
test
and
outs
pop
js
inc
add
(bad)
sub
mov
mov
cmps
push
js
outs
mov
pop
push
sub
mov
fidiv
jnp
sub
add
xchg
xchg
lahf
int
cmp
xor
mov
js
jg
mov
and
call
and
xchg
je
retf
(bad)
sbb
push
(bad)
sbb
ss
push
and
fwait
sahf
sub
popf
mov
pop
test
sub
mov
mov
repz
std
int3
ja
(bad)
adc
jbe
cmc
sbb
pop
test
(bad)
rcl
bound
mov
cmp
mov
inc
dec
sub
mov
push
jmp
jbe
mov
sub
les
dec
mov
sbb
loopne
bswap
xchg
sahf
mov
iret
xor
int
and
js
dec
sub
jecxz
test
test
mov
ret
jp
add
and
outs
mov
cmp
dec
mov
xor
retf
into
ficomp
cmp
or
cdq
mov
lock
sbb
dec
mov
cmps
pop
int3
arpl
push
mov
shl
pop
cmps
or
mov
cmp
les
pop
push
inc
scas
retf
dec
mov
mov
sbb
das
or
popf
mov
xor
jno
fist
jne
cmc
mov
shl
push
xor
adc
stos
push
call
mov
xor
push
xlat
imul
jne
sbb
popf
movs
adc
jl
mov
cli
idiv
xor
push
lds
fistp
xchg
mov
dec
push
es
push
mul
scas
in
cli
mov
mov
or
jge
bound
iret
lods
scas
adc
xchg
in
dec
leave
jb
sbb
(bad)
push
push
inc
int
and
ret
enter
pop
push
add
repz
pusha
add
aaa
cmp
ror
pop
in
out
outs
mov
jne
adc
and
inc
push
jb
cdq
xor
or
ret
imul
xchg
fild
jno
addr16
and
jge
adc
inc
cmp
out
xchg
stos
pop
call
inc
shl
sbb
jl
jnp
(bad)
push
mov
(bad)
pop
cld
xchg
cmp
dec
stos
or
add
in
es
adc
(bad)
dec
xchg
adc
sub
cli
jno
sub
or
rcl
jg
rcr
xlat
push
and
push
repz
xchg
aad
mov
add
pushf
mov
int3
outs
pop
ins
lods
loope
shl
sub
daa
cmp
into
aaa
pop
adc
cmp
ins
cmps
jb
in
sub
enter
sbb
pusha
in
movs
cmps
jne
push
fwait
mov
stos
pop
fcomp
adc
or
loope
mov
fwait
stos
pushf
mov
push
mov
push
aas
push
shr
push
std
fnstsw
add
or
or
jns
jnp
pop
inc
xchg
mov
ins
or
cdq
jne
lahf
jmp
es
mov
push
jns
loope
xor
cdq
inc
sbb
pop
xor
jne
push
dec
in
sub
test
ds
mov
fcomp
xor
pop
inc
push
fsubr
mov
test
(bad)
mov
add
mov
enter
rep
or
test
out
sbb
pop
cdq
js
or
dec
push
add
scas
call
xchg
mov
pop
adc
(bad)
jmp
xchg
mov
sub
jge
in
(bad)
jnp
mov
dec
or
sub
fst
mov
xor
xor
enter
inc
cmps
ror
(bad)
sti
xchg
xor
jle
inc
scas
xchg
lahf
in
xor
mov
sbb
dec
outs
sbb
(bad)
cmp
sub
adc
ficom
into
sbb
add
mov
js
out
cli
ror
inc
dec
push
mov
shl
ja
mov
and
push
sub
cmp
in
pusha
dec
xchg
xor
mov
addr16
pop
push
clc
pop
pop
(bad)
fisub
push
xchg
fnstsw
imul
jg
mov
retf
int
push
mov
retf
(bad)
push
inc
jbe
lahf
cld
and
div
ret
bound
aad
mov
repnz
inc
in
sub
jb
out
mov
lds
and
div
dec
cmp
add
sar
js
sub
push
mov
push
xor
inc
cmp
or
cs
fdiv
aaa
jmp
movs
inc
popf
mov
sbb
outs
push
cld
mov
mov
mov
jnp
sbb
dec
pop
(bad)
and
cmps
xchg
pop
imul
pusha
shr
(bad)
sbb
div
mov
mov
and
cdq
cmp
sub
jmp
pop
or
test
dec
inc
push
out
jb
sbb
lahf
xchg
dec
bound
pop
cmps
mov
or
out
(bad)
in
test
loop
or
shl
test
std
sti
std
aaa
inc
adc
inc
dec
lods
loope
inc
jp
mov
add
inc
cmp
sub
sbb
das
inc
int3
lods
xchg
js
icebp
push
outs
stos
cdq
mov
mov
and
addr16
cmp
cdq
mov
and
and
dec
inc
repnz
(bad)
jo
and
loope
jl
aas
(bad)
xchg
dec
push
jg
mov
jo
sbb
and
lahf
mov
jnp
push
jnp
shl
cmp
(bad)
push
mov
mov
inc
cli
pop
fimul
(bad)
ret
cli
(bad)
mov
inc
(bad)
sar
in
(bad)
cmps
mov
sbb
sbb
cmps
hlt
int3
ret
test
cmp
cmp
test
push
js
and
lock
adc
ins
and
push
cmp
dec
jmp
add
fwait
dec
test
aaa
(bad)
retf
(bad)
or
inc
mov
pop
jg
push
cmp
test
add
inc
imul
mov
pushf
adc
xor
clc
mov
lock
xchg
sub
inc
push
sub
and
cmc
sbb
xchg
xor
xchg
fidiv
ja
cmp
pop
(bad)
push
adc
adc
pop
mov
ins
dec
movs
movs
jnp
cmp
test
sub
out
(bad)
jo
not
rcl
mov
stos
fld
pop
pop
push
loope
cmps
dec
loopne
xchg
int3
(bad)
rcl
(bad)
mov
sti
sub
cmp
xor
aaa
les
jge
imul
std
cmps
(bad)
xchg
fimul
mov
jle
mov
xchg
stos
sbb
leave
inc
loope
pop
in
push
inc
jl
std
fwait
inc
int
pop
add
xor
movs
loopne
es
sub
mov
pushf
add
xlat
imul
(bad)
jmp
ja
xchg
mov
sbb
xchg
push
stos
call
nop
rcl
push
(bad)
fild
std
fstp
inc
popf
mov
add
out
popf
rol
repnz
lds
shr
popa
fs
jp
add
mov
jge
std
push
mov
xor
lahf
xor
les
xchg
or
pop
femms
adc
jl
out
outs
dec
pop
sbb
adc
inc
dec
jnp
push
fmul
mov
fmul
in
ror
daa
std
popa
cmp
and
sahf
cs
xchg
push
dec
adc
call
push
rol
push
movs
sbb
push
hlt
sub
cmp
and
cdq
xor
add
ins
dec
ins
stc
dec
xchg
sbb
push
pop
add
xor
in
push
clc
xor
mov
cdq
inc
or
and
or
mov
sbb
sub
gs
(bad)
dec
mov
dec
or
jb
pushf
loopne
fdivr
pop
cld
or
mov
adc
sti
inc
mov
(bad)
fdivr
ds
pop
push
or
outs
mov
xor
xor
cdq
push
sub
cmp
or
lods
leave
into
mov
dec
cmps
dec
dec
retf
ret
js
jle
test
std
call
hlt
int3
repz
pop
cmps
stc
sbb
xchg
adc
cmp
cmp
ins
js
ins
sub
icebp
iret
stos
mov
call
adc
xchg
xchg
sub
sub
xchg
xor
imul
pop
repnz
mov
pop
push
test
jp
xor
jns
enter
pushf
jns
out
add
cld
inc
jo
mul
test
pop
les
push
imul
lods
push
or
mov
xor
adc
mov
imul
cwde
push
test
mov
push
stos
mov
retf
mov
xchg
mov
(bad)
pop
(bad)
arpl
ror
mul
jle
jge
in
jmp
mov
and
dec
pop
xor
mov
jae
cmp
push
ret
movs
cdq
and
adc
or
add
pop
adc
not
mov
xchg
fadd
leave
aad
shr
call
popa
test
js
mov
pop
fstp
lea
dec
xor
in
rcr
ins
call
test
jno
(bad)
loopne
add
push
dec
xor
jbe
std
pop
inc
xor
into
add
mov
pop
jnp
mov
test
aad
call
cmp
cmp
or
loop
popf
push
je
out
push
(bad)
std
sub
test
add
mov
dec
xor
int
sub
outs
xchg
push
data16
sub
jb
ror
in
das
sti
sub
inc
mov
sbb
int3
sahf
clc
fwait
test
add
sub
popa
push
enter
shr
jl
xchg
popa
and
cwde
fstp
les
lds
xchg
dec
push
(bad)
leave
adc
les
jge
stos
inc
push
in
sahf
lock
lahf
rcr
cmp
cmps
dec
and
test
lock
bound
jmp
out
test
push
xor
jl
sar
ror
pushf
inc
loopne
add
inc
setno
stos
jmp
sub
jmp
in
movs
lock
in
cld
mov
rol
dec
xor
adc
or
sbb
add
test
or
or
ror
mov
imul
out
inc
repz
gs
pop
stos
add
stc
imul
cmp
cmps
inc
mov
fstp
push
mov
mov
jg
dec
cs
push
std
cmps
adc
cmp
gs
(bad)
sub
inc
aam
test
pop
xchg
inc
adc
arpl
mov
adc
sbb
enter
pop
call
cwde
retf
mov
stc
xchg
add
xor
jnp
out
movs
adc
fidiv
push
and
fwait
out
push
fist
jmp
aas
mov
jmp
dec
adc
shr
in
inc
pop
pop
sbb
leave
out
lahf
cmp
les
int3
out
inc
(bad)
aam
ins
stos
aam
push
sub
dec
ret
pop
jne
sub
pop
fwait
das
test
lahf
push
sti
stos
and
mov
xchg
int3
or
arpl
xor
out
inc
cmp
mov
pusha
call
pop
cmp
mov
cmp
mov
ins
push
pop
fisttp
push
or
std
or
push
ins
mov
add
scas
cmp
int
fwait
cmps
xlat
das
ret
dec
lds
xlat
popf
add
inc
subps
test
scas
leave
lahf
adc
fs
jp
idiv
and
pop
jae
jbe
or
jp
and
mov
iret
mov
sub
pop
mov
ja
fidivr
inc
jmp
pop
ret
adc
mov
out
sub
inc
inc
sti
imul
mov
leave
adc
jno
mov
imul
nop
cs
jmp
dec
xor
call
mov
cmp
mov
call
gs
dec
(bad)
xchg
xchg
cmp
sub
mov
stos
mov
in
aas
outs
jmp
dec
loope
fld
adc
jae
pop
xor
stos
ds
pushf
xchg
test
cmp
mov
mov
(bad)
mov
xor
out
jmp
and
(bad)
pop
ds
and
push
lds
sub
(bad)
adc
xchg
sbb
cdq
cmp
scas
pop
and
fwait
aaa
pop
cmps
mov
xchg
fsubr
pop
out
lahf
(bad)
push
xor
and
popf
xchg
mov
inc
std
loope
mov
mov
pop
pop
mov
push
clc
scas
mov
leave
fdiv
cmp
mov
test
mov
jmp
jnp
add
inc
mov
out
or
cmp
add
jns
or
push
leave
inc
retf
push
jle
mov
xor
cwde
(bad)
mov
fsubr
lods
mov
pop
pop
fst
icebp
or
add
xor
jmp
mov
mov
mov
push
xchg
mov
jae
or
inc
mov
out
lods
jno
adc
mov
movs
loope
xor
out
adc
retw
(bad)
(bad)
and
dec
(bad)
enter
enter
or
jns
in
aad
clc
push
pusha
mov
fwait
push
jg
jb
mov
fsubp
lods
mov
add
xchg
(bad)
pop
mov
cdq
jecxz
cs
pop
cmp
dec
and
dec
je
jl
and
shl
loop
ds
test
mul
sub
call
fild
add
iret
shl
and
cld
push
and
xor
mov
pop
repnz
pop
mov
add
mov
push
(bad)
cmp
jbe
out
retf
jno
mov
mov
cwde
cdq
jno
cmp
xlat
popa
mov
(bad)
hlt
enter
adc
(bad)
es
sbb
jmp
outs
pop
scas
test
mov
out
nop
push
(bad)
jnp
sub
into
jo
cwde
and
push
sbb
inc
sub
lea
mov
scas
call
mov
or
retf
inc
sub
jnp
sub
mov
mov
mov
xchg
in
(bad)
inc
mov
add
mov
cmp
rcl
jbe
into
mov
std
aad
lea
sbb
rcr
xchg
cli
cmp
lea
dec
std
jmp
outs
pop
outs
jg
or
aad
xor
sub
or
dec
adc
push
jge
pop
js
fisttp
push
add
add
scas
dec
fild
in
push
loop
arpl
lea
mov
cmps
sbb
add
fbld
adc
xchg
and
mov
mov
adc
es
repnz
pop
sar
or
mov
pushf
(bad)
in
(bad)
mov
push
(bad)
jle
or
aaa
movs
dec
or
dec
call
pop
xchg
adc
retf
fdivr
arpl
adc
jle
ficom
dec
aad
or
test
cmps
mov
inc
dec
add
sbb
pop
int3
mov
retf
cmps
(bad)
xchg
sub
jge
repnz
ins
push
ss
cld
idiv
sbb
mov
in
cdq
(bad)
pop
and
ret
mov
push
popf
mov
push
push
and
and
jl
push
dec
lea
arpl
in
sbb
or
xor
es
jmp
sub
pop
adc
add
xchg
xor
pop
jnp
xor
cli
jbe
aas
dec
movs
cmp
outs
cmp
aas
mov
aaa
pop
out
and
scas
std
cmp
je
jae
or
xchg
cld
data16
ds
adc
mov
(bad)
out
std
lods
cs
dec
in
sub
mov
rcl
cli
dec
push
mov
cmc
mov
(bad)
pop
add
neg
ss
inc
inc
int
repnz
int
ror
stos
(bad)
mov
sbb
pop
test
aad
push
test
jmp
mov
fwait
arpl
mov
in
xor
test
jl
pop
js
push
aaa
adc
imul
jb
mov
or
adc
mov
leave
pop
shr
cmc
dec
fimul
sbb
dec
imul
cs
add
sbb
cmp
pop
clc
dec
fimul
pop
cdq
es
outs
pop
xchg
jg
rol
xor
sub
pushf
mov
sar
adc
cmp
or
or
movs
pop
mov
pop
repz
mov
test
clc
add
jo
mov
mov
addr16
push
es
and
cmp
mov
mov
and
adc
mul
fwait
adc
and
scas
push
sub
lods
in
push
daa
stos
mov
xchg
inc
mov
cmp
sbb
mov
ins
mov
cmp
push
pushf
inc
cwde
lock
xor
pop
pop
std
sbb
shl
sub
lea
jl
sub
cmps
sar
out
imul
ins
jns
push
mov
cli
cmp
pushf
mov
xchg
js
aas
mov
xor
std
sub
jmp
fistp
(bad)
add
cmp
pusha
popf
sub
dec
inc
sub
mov
adc
push
pop
sbb
dec
rcl
push
fnstcw
cmp
test
or
out
(bad)
mov
and
xchg
mov
fwait
dec
pop
or
and
cmps
mov
cmp
mov
push
dec
dec
jecxz
pop
sub
sahf
sbb
pop
xchg
pop
cmp
aaa
jae
loopne
lds
mov
jmp
sbb
out
mov
popa
arpl
das
xor
add
xor
aaa
jo
loope
push
jecxz
stc
fistp
or
gs
outs
stos
outs
ins
xchg
push
sub
loopne
cmp
pusha
pusha
jne
cmc
xchg
add
add
or
test
push
or
pop
pushf
push
adc
or
arpl
iret
mov
xor
xor
or
mov
and
cmc
test
loopne
test
mov
test
cmp
js
inc
jo
ror
aam
sar
stos
pop
cmp
mov
aaa
push
push
imul
or
les
adc
pop
and
jnp
les
fimul
add
ss
pop
aas
fsub
push
adc
and
adc
sbb
pusha
or
retf
xchg
lods
jmp
daa
push
bound
data16
mov
mov
cmp
outs
and
leave
add
out
imul
jnp
push
cs
sbb
(bad)
dec
jmp
xor
pushf
out
xchg
cld
neg
mov
dec
push
sub
fidivr
xor
out
shl
dec
adc
dec
addr16
or
jno
pop
xor
mov
mov
or
in
xor
dec
xor
out
jb
cmp
jns
imul
fld
xlat
pop
push
mov
imul
es
push
mov
pop
aaa
and
cmp
add
addr16
mov
int
sbb
mov
sub
hlt
mov
mov
out
cmp
ror
xchg
jno
(bad)
popf
mov
sub
xlat
mov
and
out
sti
fwait
ss
ja
cmps
mov
jle
add
mov
retf
iret
imul
das
fstp
test
les
add
xchg
das
jge
adc
push
retf
pusha
pop
mov
jmp
adc
imul
mov
jge
lock
dec
pop
mov
stos
fisttp
mov
sub
leave
inc
xor
rol
pop
xchg
outs
inc
jno
sbb
lods
pop
inc
loope
aam
add
pop
dec
rcl
mov
ja
bound
add
dec
dec
lock
std
jg
push
aad
and
and
inc
push
mov
jo
retf
inc
push
loope
inc
retf
test
lahf
test
jmp
push
ficomp
ins
loope
pop
icebp
or
fsubr
ss
movs
cmc
dec
dec
mov
cmp
movs
cld
add
fcom
push
pop
cld
cmps
out
mov
sbb
fmul
push
inc
dec
add
retf
mov
mov
jge
stos
mov
jae
repnz
sub
pop
jns
or
int
in
stos
mov
retfw
fwait
ror
das
jo
inc
cli
inc
and
daa
fs
fdiv
dec
jl
jo
lea
mov
arpl
fcomi
jnp
std
inc
sub
test
loope
lock
adc
inc
or
ficom
add
aaa
in
ins
sbb
(bad)
call
scas
push
adc
push
cwde
int3
dec
popf
dec
jno
adc
mov
gs
je
push
adc
pop
int
jo
std
call
ss
lods
cld
xlat
stos
cmps
aad
sub
sub
pop
dec
les
ja
push
sub
jp
mov
movs
add
pop
clc
and
gs
shl
inc
movs
sar
pop
je
and
inc
sub
sbb
sub
int
sbb
ss
test
cs
shl
or
cmp
push
sub
dec
mov
or
pop
mov
popa
(bad)
add
or
inc
sbb
push
popa
ret
and
sbb
dec
sbb
pushf
clc
mov
retf
pop
out
retf
pop
into
int3
push
fadd
push
mov
(bad)
test
ins
retf
inc
or
jb
dec
cmc
es
push
jecxz
mov
jl
repz
mov
sbb
pop
pop
dec
dec
cdq
dec
add
sub
push
inc
ds
add
inc
jmp
dec
or
mov
shl
jo
(bad)
fnsave
es
cld
leave
daa
sub
in
push
xchg
push
adc
mov
xor
jmp
xor
std
push
cli
mov
in
jp
sub
dec
or
mov
leave
sub
mov
sahf
jmp
in
lods
or
or
inc
cs
mov
jmp
jnp
inc
push
xchg
test
dec
xor
jecxz
and
jbe
mov
inc
dec
xchg
push
cmp
in
jne
call
in
aam
pop
mov
pop
pop
fist
mov
iret
jns
sbb
lds
mov
mov
icebp
mov
and
ja
arpl
std
cmps
loopne
inc
adc
sub
jno
movs
mov
jbe
dec
jnp
dec
pop
cdq
retf
(bad)
stos
enter
fs
mov
jae
fidiv
(bad)
lea
bound
cmp
int3
aas
rcr
xor
add
sub
jmp
sbb
(bad)
scas
shl
cmps
adc
xor
cmp
retf
fnsave
(bad)
rol
in
pop
or
push
(bad)
mov
xchg
and
shl
sahf
dec
sub
jp
hlt
rcl
sbb
retf
cmc
icebp
in
sub
pop
ret
or
fadd
mov
jg
mov
jp
or
ins
ja
sub
fcom
jne
shl
mov
cmp
sti
dec
imul
adc
inc
pop
in
jle
(bad)
cdq
das
sub
addr16
retf
sbb
sbb
jae
inc
mov
rol
repz
sar
mov
push
xchg
sub
jecxz
pop
or
out
(bad)
sbb
xor
mov
fld
mov
cdq
sub
or
pop
jmp
sub
loop
shr
fs
imul
loopne
mov
adc
mov
sti
scas
add
dec
push
and
cmps
fidiv
retf
add
cdq
clc
jmp
dec
inc
mov
sti
mov
scas
hlt
mov
xor
lds
inc
fdivr
dec
sub
sbb
jne
inc
mov
add
push
(bad)
pushf
daa
cmp
mov
ror
mov
sbb
pop
xor
loope
push
push
pusha
ror
jbe
into
sub
loope
addr16
mov
cwde
cli
pushf
add
mov
add
adc
inc
imul
js
cli
jb
retf
enter
mov
pop
push
inc
and
xor
ja
cld
mov
and
sub
xchg
push
mov
inc
icebp
ins
pop
jp
adc
xor
aas
push
xchg
jbe
mov
fs
bound
into
sbb
ficomp
push
(bad)
jle
add
stc
out
in
xchg
into
loop
movs
in
jo
push
mov
ror
sbb
cmp
retf
push
dec
in
mul
lock
stc
jecxz
mov
xchg
cmp
mov
jmp
cmp
test
jbe
clc
jne
add
jmp
push
pop
shl
repnz
test
push
jo
pop
pop
sbb
sahf
fisttp
gs
push
(bad)
jae
cmp
and
inc
and
inc
mov
cdq
in
jo
je
mov
jb
fnstenv
and
(bad)
iret
pop
in
sahf
push
jmp
cmps
ja
je
or
pusha
test
dec
mov
inc
jmp
xor
aam
jne
(bad)
jp
add
sub
mov
or
adc
add
jae
mov
inc
rep
ds
xor
push
test
fbld
rol
data16
sbb
(bad)
(bad)
imul
pusha
xor
call
sbb
dec
push
mov
mov
cdq
aaa
cwde
pushf
inc
cmp
nop
add
imul
or
or
in
or
jo
pop
mov
jbe
adc
push
in
fs
xor
pop
ja
mov
add
stos
ja
stc
scas
cmp
xlat
sti
mov
dec
sub
cmc
dec
out
leave
sub
jae
push
mov
or
out
ret
or
sbb
inc
cmp
cmovns
fadd
leave
loopne
adc
xor
adc
test
cwde
out
mov
add
sub
pop
pop
push
int
clc
adc
mov
adc
push
sti
fstp
icebp
and
aaa
cld
push
xchg
shl
pop
cmovnp
std
pop
push
xor
jmp
imul
(bad)
push
and
push
js
cmp
jp
xor
cmp
(bad)
outs
inc
push
imul
int3
addr16
stos
mov
xchg
or
adc
out
xchg
lods
cmps
push
fcmovu
sahf
mov
dec
stos
fcom
outs
aaa
pop
mov
(bad)
aad
cmp
cld
aas
mov
in
mov
imul
lods
popf
push
inc
inc
inc
(bad)
adc
imul
or
outs
test
or
adc
out
sub
shr
test
(bad)
arpl
xor
xlat
jns
adc
sbb
arpl
shl
hlt
cmp
test
neg
push
out
retf
mov
ins
stos
inc
popf
jmp
ins
push
sbb
cmp
imul
adc
test
xchg
in
movs
dec
icebp
push
loop
lahf
hlt
int
cmp
je
push
push
or
mov
lahf
mov
retf
push
ja
mov
cmp
aam
cmps
sbb
fisttp
pop
test
push
and
jmp
jnp
movs
gs
(bad)
shl
mov
push
xor
adc
push
adc
mov
sbb
fistp
ret
add
inc
inc
and
jmp
in
lods
gs
pop
scas
sbb
cld
push
push
or
mov
ss
call
pop
in
test
loope
xor
adc
daa
(bad)
std
inc
push
adc
(bad)
fwait
or
ss
or
dec
jbe
aam
add
lods
fdivr
and
xor
pop
sti
mov
repnz
stc
fcmovbe
sub
ficomp
lea
cmp
addr16
mov
jbe
pop
icebp
movs
jecxz
pop
jmp
and
fld
aaa
jno
and
out
mov
fistp
lock
push
sub
enter
push
loopne
push
add
mov
and
xchg
jae
push
outs
pop
xlat
push
stc
mov
or
jl
sub
jle
imul
lock
aas
cli
(bad)
pop
lods
daa
aaa
sbb
(bad)
retf
xor
icebp
xor
sub
sub
add
jecxz
adc
(bad)
dec
in
mov
mov
mov
mov
outs
imul
or
mov
imul
shl
xor
dec
xor
std
imul
and
push
cdq
inc
cmp
sbb
jmp
adc
push
fst
stc
repz
jp
(bad)
push
movs
repnz
push
cmc
and
jmp
jne
sahf
dec
ss
jb
cld
cwde
xchg
or
aaa
js
xor
ss
arpl
aam
shr
sbb
push
mov
repz
aam
push
add
iret
add
lock
cmp
(bad)
fisubr
test
in
jl
ds
or
xor
popa
das
adc
xor
retf
movs
scas
stos
cld
mov
mov
add
or
xor
retf
xlat
and
pop
and
aaa
aad
inc
aam
aam
jle
jns
cmp
mov
dec
imul
dec
xor
push
push
xchg
and
adc
cld
adc
dec
and
int3
int3
out
inc
inc
clc
jg
fnstenv
xor
aam
push
dec
fadd
test
inc
jge
mov
mov
xchg
xchg
mov
iret
lea
sub
xchg
fadd
jl
cmp
mov
xchg
lahf
(bad)
ficom
ins
mov
inc
ins
add
sbb
lea
mov
pop
jb
aad
fwait
ror
add
loope
pop
mov
mov
jae
mov
adc
pop
call
and
loope
rcl
mov
and
fcom
je
imul
adc
ds
add
push
jp
cwde
adc
jle
inc
adc
enter
mov
jae
fistp
mov
mov
retf
and
mov
cmove
mov
adc
pop
sub
mov
mov
(bad)
and
jb
mov
xor
jg
into
xchg
push
mov
push
jl
or
pop
adc
xchg
pop
mov
and
not
push
cmp
(bad)
sbb
xor
cli
test
push
xchg
or
mov
inc
adc
lahf
pushf
cmp
icebp
mov
add
jbe
or
mov
pop
dec
shl
loopne
test
aaa
xor
inc
jmp
xor
push
pop
in
cmp
sbb
adc
sub
push
or
outs
lods
and
push
std
jl
aam
cmp
push
push
sbb
fwait
ins
mov
shl
mov
ja
fdiv
sub
mov
pushf
sub
push
scas
mov
push
xchg
imul
adc
xchg
pop
mov
jmp
mov
cli
xchg
js
aad
mov
push
inc
es
cmc
sbb
xor
xchg
out
xor
xchg
not
mov
jle
xchg
mov
loope
lahf
jae
mov
popa
xchg
fdivr
xchg
(bad)
aam
nop
add
mul
call
dec
pop
sub
jecxz
aaa
jmp
jmp
jl
mov
push
and
sbb
adc
and
push
xor
push
(bad)
(bad)
addr16
fdivr
sub
xor
push
fcom
dec
fist
(bad)
repnz
lods
xor
es
jle
cmps
dec
push
fwait
retf
sbb
popf
mov
xchg
mov
cmc
ret
push
mov
sbb
jnp
bound
mov
in
xchg
scas
clc
sbb
into
jg
hlt
test
fistp
pop
scas
fild
movs
ds
pop
nop
or
cmc
fwait
xchg
(bad)
add
sbb
int
repz
aad
sub
ret
adc
push
sub
test
bound
and
inc
and
or
mov
ins
jne
addr16
lods
xor
inc
inc
retf
dec
imul
int
mov
pop
adc
mov
and
push
inc
mov
mov
and
jp
(bad)
fidiv
xchg
pusha
xchg
cmp
push
sbb
xchg
xchg
adc
cdq
adc
mov
mov
(bad)
mov
outs
jmp
popa
jb
jo
ror
inc
xor
ss
mov
push
xor
add
dec
cmps
dec
addr16
inc
sub
ins
sar
cmp
sbb
adc
mov
hlt
clc
mov
or
push
shl
loopne
or
xor
in
fidiv
or
or
mov
iret
pusha
ror
in
aad
dec
fisttp
mov
pop
sbb
adc
enter
sbb
jge
inc
mov
js
and
jecxz
call
push
or
inc
nop
inc
mov
push
js
xlat
mov
jecxz
std
loope
dec
les
mov
in
inc
out
in
icebp
fcom
jl
mov
(bad)
or
cdq
xchg
jnp
sbb
inc
inc
jp
inc
mov
imul
inc
movs
cmc
mov
sub
(bad)
push
aas
or
push
fcomp
daa
push
mov
ins
pop
int3
ds
dec
sbb
test
push
mov
adc
scas
mov
and
mov
aas
cmp
test
loopne
adc
test
stos
sub
fnstcw
jle
in
pop
rcr
mov
add
jle
test
cmps
xor
inc
push
in
mov
adc
mov
push
adc
test
loope
pop
arpl
jns
int3
call
cld
inc
xor
nop
int3
shr
xor
pop
push
(bad)
pushf
sub
xchg
adc
out
(bad)
and
call
inc
mov
dec
inc
dec
stos
xchg
inc
lods
pop
add
xchg
mov
pop
cmp
xchg
in
push
js
gs
bound
enter
dec
fcmovnu
scas
and
icebp
je
push
add
in
pop
or
(bad)
mov
lahf
jl
pop
add
test
les
in
push
ins
repz
test
ins
ret
dec
mov
cmps
mov
loope
xchg
push
lods
mov
cmp
(bad)
fbld
and
ror
fbstp
popa
pop
dec
fcomp
mov
js
jecxz
adc
xor
sbb
pop
sbb
retf
xchg
fisub
pop
fs
ins
cmp
in
test
test
push
jno
cmps
fstp
movs
mov
push
fimul
ret
fistp
jmp
adc
dec
(bad)
(bad)
in
pop
fidiv
mov
adc
pop
in
add
fild
fs
cwde
fs
dec
xor
gs
shr
sti
in
jecxz
jg
sbb
fcmovbe
push
scas
movs
out
add
push
mov
sub
push
mov
(bad)
rcr
mov
mov
jg
lods
mov
pop
fwait
mov
inc
mov
push
push
mov
mov
pop
shl
xlat
pop
add
push
loopne
dec
movs
mov
adc
shl
addr16
gs
in
(bad)
jle
adc
jb
ja
xor
and
fdiv
test
mov
mov
sub
int3
mov
(bad)
sub
pop
imul
cmp
jo
retf
and
pop
ret
add
sbb
mov
and
test
es
xor
sbb
addr16
ror
mov
stos
cmp
(bad)
pop
jns
push
sbb
out
imul
aas
sbb
bound
fwait
cmp
test
or
enter
jo
mov
lods
pop
and
nop
jb
inc
loop
xchg
int3
call
out
stos
mov
xchg
jns
pop
test
add
shl
adc
and
sbb
arpl
xchg
sub
clc
push
cmp
xchg
sbb
sub
cld
mov
inc
test
pop
jo
mov
add
mov
pop
xchg
pop
retf
outs
adc
push
out
fistp
pop
adc
dec
outs
push
retf
cdq
test
mov
sti
sbb
jns
sbb
cmp
retf
and
pusha
adc
sub
pop
and
xchg
push
xor
test
sbb
movs
jmp
mov
call
imul
sub
int
repnz
aad
cmp
adc
shl
xchg
call
aaa
out
pop
xchg
xchg
iret
and
sbb
xchg
inc
bound
imul
add
pop
xor
loopne
sub
cmp
pop
and
ins
rol
adc
ds
sub
xchg
push
xchg
fld
test
inc
test
add
inc
fucom
stos
mov
adc
fist
gs
sbb
in
ror
mov
(bad)
gs
shl
sub
stos
and
(bad)
loopne
mov
sbb
int
add
dec
push
mov
fsub
scas
or
xchg
xchg
dec
jns
xor
mov
cs
test
fnstenv
add
sbb
inc
stc
test
loopne
stos
in
mov
iret
sbb
push
lods
adc
mov
mov
dec
es
adc
fmul
mov
test
mov
pop
mov
push
add
bound
jecxz
jae
pop
xor
adc
inc
push
iret
je
mov
popa
push
dec
repz
pop
int
imul
adc
sbb
bound
je
scas
or
pop
mov
jno
iret
retf
lds
stos
(bad)
stos
ins
mov
jns
test
jmp
push
mov
jmp
jmp
adc
(bad)
jl
mov
pusha
mov
xor
xchg
imul
xor
jp
cmc
pop
addr16
mov
jae
xor
bound
stc
fstp
fistp
sub
jns
fld
(bad)
stos
mov
xchg
gs
push
mov
daa
mov
jne
repz
adc
pop
fwait
test
push
cld
mov
aaa
add
and
in
adc
(bad)
and
(bad)
icebp
stc
sbb
cmp
inc
stos
mov
(bad)
mov
dec
add
leave
test
out
inc
mov
inc
outs
fstp
loopne
cmp
arpl
cmps
call
(bad)
mov
ins
(bad)
daa
aas
ds
pop
push
xor
xchg
es
jmp
test
push
mov
shr
pop
scas
lds
test
mov
cs
jb
sbb
adc
rep
sub
clc
xor
(bad)
mov
lds
dec
jge
mov
lods
aas
int3
rcl
xlat
test
mov
mov
mov
sbb
nop
mov
xor
xchg
inc
stos
sahf
mov
stc
pushf
inc
pop
inc
stc
mov
int3
mov
xchg
loopne
push
fidivr
and
add
adc
push
cmp
mov
mov
ret
and
jbe
shr
xchg
pop
jo
out
push
mov
dec
outs
ja
mov
or
sub
shr
dec
mov
or
xchg
scas
dec
sub
xchg
adc
jne
scas
gs
pop
pop
pop
sub
dec
mov
bound
mov
shl
mov
fdiv
jl
test
arpl
mov
jge
cmp
sar
mov
xor
mov
cmps
sbb
or
sub
into
ret
cmp
jae
repnz
xor
shl
or
stos
mov
sahf
jecxz
pop
and
mov
out
jge
retf
cs
fnstsw
xor
js
inc
or
xchg
and
pop
push
jle
add
movs
ret
lods
shl
imul
test
cmc
stos
inc
fidivr
lods
test
push
mov
dec
stos
les
or
adc
ret
or
jecxz
fdivr
add
cmc
xor
mov
aad
xchg
int3
in
sbb
sbb
jp
gs
cli
aad
xchg
jge
ds
ret
cmc
jno
add
jp
out
pop
retf
cmps
test
push
movs
repz
sub
ds
or
dec
mov
push
lahf
data16
jae
into
push
jbe
inc
or
jno
push
shr
movs
mov
and
xor
jb
inc
or
inc
in
scas
call
fcom
mov
neg
or
scas
aaa
adc
adc
sti
repnz
push
sbb
jle
movs
push
inc
push
or
loopne
jae
je
push
(bad)
rcr
jp
inc
mov
mov
mov
pop
call
mov
shl
sub
pop
out
or
jmp
dec
in
mov
rcr
jecxz
and
aad
mov
ss
cmp
push
push
sar
push
sub
inc
pusha
fnclex
cmc
retf
mov
ja
cmp
fstp
fcom
shl
mov
jnp
xor
push
pop
jmp
sbb
cdq
and
jl
or
cmp
(bad)
dec
pop
imul
mov
and
not
sub
cmp
cmp
jp
rcl
sbb
adc
sbb
fcomip
js
fstp
sbb
mov
imul
sbb
push
ret
fyl2xp1
ret
mov
test
and
test
adc
mov
sbb
movs
xchg
loopne
neg
jg
in
je
mov
cmps
mov
sahf
xor
retf
jb
aad
mov
sbb
push
es
jae
pop
sbb
jl
and
xchg
inc
in
aas
cmp
aas
mov
jnp
jmp
mov
mov
lahf
sahf
inc
not
fist
sub
lahf
repnz
ds
bswap
xchg
and
jns
(bad)
mov
xchg
inc
mov
les
jo
inc
fs
mov
and
jb
fidiv
cdq
clc
cmp
pusha
ja
scas
mov
daa
sbb
shl
adc
add
dec
or
in
cmc
pop
mov
pop
xor
sbb
pop
mov
lock
jne
sbb
(bad)
movaps
fwait
jmp
mov
imul
dec
scas
inc
xchg
dec
in
and
dec
inc
leave
lock
dec
movs
jo
retf
sbb
je
sub
push
ja
dec
mov
mov
aad
sbb
fwait
stos
outs
popa
fisub
jg
in
movs
jecxz
test
mov
test
jl
(bad)
jl
aad
pop
sahf
test
sub
jp
xor
int3
dec
mov
xchg
mov
push
and
push
mov
push
sub
(bad)
or
ins
sti
dec
and
dec
xor
lock
push
je
(bad)
out
fmul
mov
aas
stc
(bad)
pop
retf
call
cmp
cmp
sub
in
in
clc
stos
mov
mov
cmps
xlat
mov
fs
shl
gs
(bad)
pop
neg
sbb
movs
adc
cmp
add
mov
je
pop
or
mov
jb
adc
call
push
jno
adc
and
stos
jecxz
fidiv
scas
fcmovnb
in
and
lods
sbb
sbb
pop
and
pusha
mov
sti
mov
rcl
or
fidiv
sbb
or
nop
jb
pushf
dec
xor
dec
cmc
sub
sbb
mov
out
mov
push
int3
retf
mov
pop
or
xchg
mov
movs
call
shl
sbb
call
jns
pop
and
mov
and
pop
loop
stc
aam
jg
jmp
mov
adc
or
mov
(bad)
dec
mov
inc
mov
mov
je
push
and
push
adc
push
test
bnd
and
mov
sub
dec
inc
jno
mov
sbb
ss
pop
pop
jo
ror
xor
xchg
(bad)
dec
pop
adc
shl
loop
movs
ja
clc
sub
push
inc
sub
xor
add
pop
pop
out
loope
repz
movs
xor
cmps
inc
es
ret
out
cmp
sub
jo
add
ins
pop
mov
sub
jo
imul
movs
sub
pop
rol
aam
mov
and
push
cmc
enter
not
in
mov
ret
loopne
or
sbb
xor
sub
mov
mov
pop
push
out
mov
cs
and
or
xchg
sub
jno
xor
or
jmp
adc
pop
movs
arpl
mov
ja
mov
call
out
sbb
fwait
inc
cli
out
imul
fbld
sbb
loope
aam
jae
arpl
sahf
jae
aaa
jg
and
addr16
adc
inc
(bad)
push
jge
mov
int
dec
imul
popf
cmp
jne
mov
fsubr
inc
ins
adc
in
jmp
adc
iret
xchg
repz
fimul
adc
aas
lods
popf
cdq
mov
mov
sub
fs
test
aaa
loop
repnz
(bad)
in
es
sub
add
jns
or
ficomp
out
xor
mov
ror
dec
out
inc
jecxz
adc
les
mov
mov
or
mov
xchg
adc
(bad)
sar
xchg
jb
mov
nop
pop
fnstsw
call
inc
enter
(bad)
inc
cli
sub
mov
add
push
sub
or
jnp
(bad)
xor
adc
cmp
sbb
sahf
ss
aaa
adc
mov
sub
mov
dec
mov
dec
shl
or
or
cdq
popa
addr16
jns
jmp
enter
jns
xlat
shl
shr
cld
push
sbb
inc
mov
popa
fcom
xchg
ss
out
sub
icebp
ins
mov
out
fmul
sub
inc
mov
mov
jo
jp
push
retf
cmp
xor
xchg
(bad)
jae
int3
mov
mov
xchg
aam
ss
adc
mov
rcl
mov
cli
out
outs
mov
shl
popa
pop
ins
arpl
(bad)
stos
adc
and
dec
push
pop
mov
jbe
pop
cmp
xchg
call
jecxz
gs
movhlps
dec
jle
or
mov
and
icebp
retf
jb
imul
sub
xor
imul
(bad)
sti
mov
pop
scas
popa
stos
fstp
inc
fs
pop
inc
(bad)
movs
cli
cmp
adc
dec
dec
movs
adc
ins
mov
dec
loop
loope
fistp
adc
retf
loope
xchg
in
xchg
movs
fisttp
nop
push
sti
cld
fld
div
scas
mov
pushf
scas
call
mov
out
(bad)
push
mov
and
xor
push
sub
popf
je
and
sub
in
test
mov
ficomp
inc
into
mov
pop
jb
clc
ins
xchg
pop
call
xor
retf
sub
xchg
es
adc
adc
cmp
leave
dec
xor
sar
inc
test
(bad)
or
cld
jb
sbb
leave
push
or
inc
jnp
pop
lds
das
xor
inc
mov
je
mov
jle
jae
imul
mov
inc
push
in
xor
out
pop
int
fucomi
aaa
das
jmp
sub
inc
inc
gs
idiv
outs
jns
push
jg
into
inc
or
xor
and
cmp
sbb
call
nop
and
xchg
jns
aam
ret
retf
inc
pop
adc
(bad)
jb
and
or
pop
(bad)
pop
xor
sbb
mov
repnz
pop
or
repz
aad
fsub
inc
rol
sbb
icebp
push
push
out
inc
sub
movs
cmps
sti
dec
mov
je
fdiv
and
sbb
xor
sbb
pop
jl
xchg
adc
stos
les
dec
or
jbe
mov
cmp
jp
and
(bad)
sti
mov
push
out
add
cmps
add
mov
icebp
rol
repnz
cmp
xchg
adc
retf
mov
cmps
inc
adc
inc
(bad)
out
setns
aam
cmp
mov
je
and
call
sbb
pop
jmp
cdq
pop
icebp
out
mov
mov
(bad)
xor
jnp
(bad)
jnp
repnz
mov
add
xchg
inc
dec
push
push
aaa
addr16
mov
cmps
dec
jmp
mov
out
hlt
jl
pusha
(bad)
xchg
les
xor
xchg
call
xchg
popa
pop
mov
mov
mov
sub
aaa
fdivr
jbe
mov
enter
dec
pop
mov
test
mov
sbb
push
daa
xor
jne
inc
sub
xor
or
fistp
gs
iret
inc
pop
mov
add
ja
jmp
push
mov
adc
test
pop
cmps
and
clc
and
mov
cmp
and
add
jno
retf
(bad)
not
xchg
pop
mov
xchg
pop
outs
ss
retf
sti
xchg
retw
add
movs
push
dec
push
cmps
push
es
xor
push
dec
enter
movs
add
mov
and
xor
and
xor
mov
and
sub
push
(bad)
xor
push
dec
push
jmp
(bad)
in
pop
fidiv
xchg
cmp
adc
push
jmp
and
push
mov
shl
adc
push
sub
mov
repz
pop
fstp
mov
call
adc
add
xchg
fs
push
dec
std
addr16
and
sub
in
stc
cld
xor
ins
xor
mov
add
sar
or
lods
rol
xchg
pop
fbstp
test
aad
xor
fdiv
adc
sti
shl
dec
and
sbb
leave
stos
inc
(bad)
pop
adc
data16
sar
xchg
or
inc
pop
xchg
(bad)
jmp
in
and
dec
xchg
(bad)
push
mov
dec
loope
add
add
jmp
jle
jb
mov
aad
mov
inc
pop
js
(bad)
ins
popf
aaa
mov
cs
cld
pop
xchg
jne
inc
iret
gs
dec
out
xor
in
call
adc
mov
aam
and
xor
stc
cmp
sub
repnz
data16
or
pop
inc
mov
dec
jnp
inc
dec
jns
xor
(bad)
shr
mov
icebp
lods
push
push
inc
push
jmp
imul
test
push
inc
mov
xchg
mov
ror
es
out
mov
enter
and
jno
mov
mov
mov
pop
call
iret
xchg
adc
push
ror
(bad)
fiadd
clc
aam
jno
fisubr
sub
adc
loope
adc
jne
fwait
xchg
test
pop
vmwrite
and
cs
ret
arpl
inc
dec
mov
sar
shr
adc
inc
inc
data16
(bad)
xchg
xchg
aad
cmp
dec
cmps
pushf
push
mov
cwde
or
jmp
pop
cld
dec
xchg
scas
adc
stos
jg
push
mov
nop
mov
xchg
in
jbe
pop
iret
mov
xor
popf
mov
jnp
cdq
minps
imul
jne
mov
test
outs
adc
and
shl
push
mov
je
xchg
fs
mov
or
rcr
iret
(bad)
sbb
dec
enter
cli
ins
test
ss
dec
mov
or
imul
pushf
mov
push
cmp
ret
aas
jge
sar
movs
xor
jae
(bad)
hlt
pop
and
jnp
ret
(bad)
push
iret
out
cwde
mov
mov
shl
cld
xchg
iret
pop
mov
xchg
mov
cmp
fcom
repz
add
out
jg
loope
imul
enter
jle
popfw
inc
ffree
add
ja
pop
inc
into
mov
or
into
aad
jbe
xchg
push
mov
xchg
(bad)
es
call
sbb
sti
push
cmp
cmc
xchg
jne
or
clc
mov
mov
(bad)
push
jle
sub
inc
pop
int
push
ror
pop
iret
xsaves
in
(bad)
js
inc
pop
inc
cmps
inc
retf
jae
imul
and
int
cmp
test
sub
sub
lea
mov
cmc
fst
aam
loopne
xchg
sub
push
lods
outs
mov
sbb
ds
and
sbb
mov
and
xor
mov
jbe
push
imul
jns
mov
jmp
aas
jno
fisub
daa
dec
(bad)
pusha
rol
pop
push
add
clc
cmp
dec
loopne
mov
cmps
outs
gs
pop
enter
jmp
inc
test
out
test
pop
ss
mov
push
push
addr16
mov
fnsave
jnp
xor
clc
pop
sub
mov
test
mov
cmp
adc
jae
push
push
dec
js
sbb
jmp
ret
aad
cmp
addr16
jno
adc
adc
jne
add
shl
scas
lea
add
shr
xor
stos
ds
adc
xchg
int3
imul
jp
jp
adc
retf
sbb
bound
cmps
(bad)
cmc
std
jo
push
xor
movs
fdiv
popf
adc
in
dec
xchg
lahf
std
xchg
mov
lock
jecxz
pushf
sub
enter
es
and
add
add
ins
adc
xchg
scas
mov
aad
ror
sbb
into
pop
js
(bad)
sbb
ret
xchg
(bad)
mov
and
sbb
mov
les
or
movs
aad
mov
aas
push
or
jle
les
lahf
xchg
shr
lock
mov
cli
add
inc
sbb
mov
inc
adc
xchg
mov
adc
les
popf
adc
out
xor
movs
xchg
std
cmp
fdiv
adc
stos
cmp
add
mov
cmp
jne
arpl
dec
dec
mov
pushf
sar
(bad)
(bad)
mov
stc
jmp
lahf
xchg
dec
aas
sbb
mov
mov
test
sub
mov
push
xlat
popa
xchg
repnz
js
repz
push
jae
daa
hlt
pop
jo
mov
mov
imul
pop
loope
sahf
push
out
dec
sahf
jle
add
dec
jae
ins
xlat
das
and
sbb
or
cmp
movs
dec
vpshaq
js
ss
int3
inc
xchg
mov
push
(bad)
cdq
iret
in
push
mov
out
ins
sub
stc
and
or
ffreep
ins
lea
mov
dec
int3
into
add
ins
push
jl
xchg
pushf
mov
xor
stos
or
into
cmp
xor
ja
ret
xchg
pop
loop
aad
popa
pop
push
push
pop
neg
out
push
xor
in
xor
loope
mov
js
xlat
ds
inc
push
fs
add
jae
ds
pop
or
fisub
repz
out
sub
(bad)
and
sbb
fnstenv
xor
sti
call
jp
adc
xchg
mov
cmp
inc
pop
mov
or
mov
bt
sbb
out
loope
in
or
movs
das
aaa
sbb
mov
ret
xchg
ss
inc
jb
xchg
ret
add
inc
cdq
push
dec
arpl
cmps
enter
rol
xchg
mov
imul
inc
or
call
imul
push
iret
loop
push
arpl
jb
fnsave
xor
test
push
int
push
cdq
mov
mov
mov
outs
adc
push
or
(bad)
fnstcw
aaa
sbb
mul
or
sbb
cdq
imul
shufps
daa
(bad)
outs
mov
jne
jmp
stos
call
push
adc
pop
stc
jg
add
cmp
nop
cmp
mov
adc
mov
lds
push
pop
mov
mov
jae
fdivr
pop
nop
sbb
cwde
pop
rol
mov
xchg
cli
jg
scas
fisttp
stos
scas
gs
and
arpl
push
jo
ja
test
jle
sbb
ins
push
cmp
mov
fwait
pop
ror
sahf
dec
sub
mov
call
push
(bad)
les
call
ror
int
bound
sbb
ins
arpl
lods
cmp
scas
daa
fs
jecxz
cld
fcomp
jle
out
pop
push
cmc
sub
inc
adc
sbb
mov
jns
fs
inc
aam
push
mov
in
jo
mov
jae
jmp
mov
and
mov
aam
add
in
pop
js
sub
ret
(bad)
icebp
xor
inc
mov
addr16
xor
(bad)
(bad)
jo
ja
sub
in
pop
pop
pop
add
cmp
call
lods
sub
mov
xor
out
push
out
lahf
lahf
xor
std
inc
mov
push
test
mov
test
ficomp
push
sbb
mov
xchg
outs
shl
icebp
or
inc
(bad)
(bad)
lds
jge
inc
xchg
add
dec
adc
vlddqu
adc
push
xor
xchg
xchg
in
cld
or
sub
out
test
imul
jmp
or
ret
movs
cdq
(bad)
xor
sub
xchg
pop
pop
adc
xor
daa
lock
sti
lods
push
fst
push
addr16
in
xchg
jnp
call
mov
push
jmp
rcr
scas
je
dec
loop
test
push
mov
sbb
popf
leave
cmps
clc
or
pusha
jle
xor
test
or
mov
or
pop
in
(bad)
test
int
popa
adc
pop
mov
sub
add
or
push
add
cmp
pop
dec
cli
mov
(bad)
cmp
stos
lods
dec
mov
push
sbb
or
push
sbb
popf
mov
dec
hlt
push
and
dec
sub
dec
cmps
shl
inc
test
push
pop
pop
and
aaa
jecxz
and
jmp
sub
xchg
test
mov
mov
dec
fisttp
or
jo
inc
shl
ja
adc
pop
shl
ins
sub
vmovlps
mov
mov
and
hlt
call
mov
sbb
ds
test
push
or
fldenv
stc
add
call
cmp
mov
loopne
mov
lahf
xchg
mov
push
lock
add
lahf
retf
add
dec
mov
inc
or
sbb
fsub
jge
jle
xchg
push
in
outs
push
ins
(bad)
mov
(bad)
cmp
pop
pop
out
(bad)
or
addr16
mov
aaa
fnstsw
cwde
mov
mov
adc
test
imul
nop
add
push
xlat
xor
jo
jbe
sbb
sbb
dec
inc
mov
not
xor
push
ds
cld
mov
mov
mov
add
jg
cld
add
data16
jl
dec
sbb
mov
call
cmps
inc
nop
pop
pop
retf
mov
fisttp
mov
call
les
pop
dec
jo
aaa
movs
imul
sub
ins
call
lods
or
pusha
pop
adc
call
add
int3
dec
pop
sbb
aaa
inc
fnstsw
adc
jae
in
jne
jbe
outs
icebp
pop
cmp
js
or
sub
mov
ja
push
jmp
mov
mov
xchg
aam
inc
pop
jae
inc
push
pop
es
cmp
push
jecxz
push
xchg
sub
xlat
addr16
sub
movs
push
inc
sbb
inc
cli
xor
cmp
add
out
mov
xchg
lods
mov
push
jmp
fmulp
xchg
imul
scas
dec
xchg
push
dec
or
mov
call
imul
push
xor
xor
in
push
out
stc
test
jecxz
cmp
cwde
jae
xor
jo
adc
js
shl
inc
hlt
pop
jg
and
out
lea
cdq
jo
pop
add
fwait
popa
popf
jecxz
xor
push
cmp
pop
pushf
mov
push
sbb
cmp
and
into
jge
(bad)
ror
mov
iret
test
dec
cld
jne
sub
xor
xor
clc
cmc
dec
mov
jb
pop
ret
fcom
in
push
cmp
gs
jecxz
mov
sub
xchg
shrd
jecxz
ss
mov
cmp
adc
cwde
ret
shl
cld
pop
retf
mov
pusha
inc
fcmovbe
sub
add
call
lea
and
(bad)
push
fiadd
jle
jg
imul
(bad)
fidiv
packsswb
call
add
(bad)
fwait
and
add
inc
pop
sqrtps
in
mov
jne
inc
jo
push
jns
outs
mov
xchg
sbb
push
cld
repz
cmp
repz
ds
inc
jmp
fwait
push
sub
movs
push
hlt
xchg
jne
xor
cmp
outs
or
nop
cmp
clc
movs
xor
jns
test
push
lods
mov
aam
int
mov
imul
enter
neg
lahf
or
lock
and
leave
lds
pop
xchg
xor
mov
mov
lea
stos
popa
sbb
mov
xor
retf
and
int3
xlat
mov
stc
xchg
scas
dec
cmp
shl
push
loope
add
sbb
arpl
jnp
xor
imul
xchg
mov
push
sti
stos
push
pop
mov
loop
push
mov
test
(bad)
cmc
int3
retf
inc
xor
jne
add
pop
lahf
shr
ins
jp
xchg
add
jne
jb
cmp
lock
push
in
and
mov
loop
pop
mov
add
ret
xchg
mov
mov
push
es
ja
stc
js
movs
push
mov
je
mov
(bad)
jmp
pop
jl
mov
jge
sub
push
ret
ss
push
or
or
in
push
jmp
in
pusha
or
arpl
test
jo
stos
ror
xchg
dec
mov
add
mov
push
inc
inc
cdq
(bad)
out
adc
ret
pop
mov
sahf
aam
inc
dec
es
inc
cld
dec
popa
aam
(bad)
jmp
pop
outs
jecxz
int3
jmp
dec
sub
cwde
mov
fs
in
mov
(bad)
mov
pop
mov
sbb
loopne
cmp
dec
dec
push
push
jmp
sahf
push
jge
mov
in
cmp
inc
mov
inc
sub
inc
or
cmc
inc
xlat
push
ret
jno
lahf
sub
xchg
mov
xchg
lds
mov
sub
and
push
sbb
iret
jle
jne
mov
push
jg
(bad)
jl
or
in
cdq
xchg
adc
jno
mov
push
mov
lea
sti
push
cli
test
mov
xchg
mov
xchg
sbb
xor
in
push
cdq
dec
stc
and
xlat
cmp
hlt
jns
jo
fdiv
les
sbb
sbb
sbb
inc
xor
sbb
pop
imul
cdq
ror
hlt
push
mov
popa
(bad)
xor
repnz
xlat
push
ret
add
mov
cmps
lds
mul
fs
dec
mov
dec
aas
and
arpl
and
sbb
inc
sbb
(bad)
fldenv
adc
ins
xor
mov
(bad)
in
push
lock
(bad)
xor
stos
ds
xchg
in
cdq
sbb
mov
movs
lock
sti
add
xor
cmp
sub
fdivr
pop
cs
jle
mov
aad
ins
(bad)
push
inc
cmp
hlt
std
xor
dec
push
popa
cld
and
ret
pop
xor
sbb
pop
(bad)
in
sbb
jo
add
mov
pop
movs
push
inc
test
test
mov
or
bound
call
mov
mov
and
call
ja
jae
adc
pop
or
loopne
fchs
mov
(bad)
adc
inc
es
jns
pop
adc
bound
sub
jns
mov
sbb
int3
mov
mov
loopne
shl
in
ret
dec
xchg
mov
sub
bound
add
pop
test
retf
out
mov
xchg
into
and
jo
cmps
push
test
cmp
bound
ror
and
(bad)
pop
adc
jbe
repnz
mov
cdq
into
in
int3
mov
mov
push
das
ror
lock
jmp
aam
cs
sbb
jbe
pop
adc
scas
add
xchg
cwde
(bad)
outs
es
sbb
xor
push
aaa
push
mov
xchg
fst
repnz
shl
movs
sub
vunpckhps
inc
adc
dec
xor
xlat
cmp
xor
cmp
int
clc
push
or
jae
dec
scas
out
(bad)
leave
add
push
aas
test
xor
xchg
add
idiv
movs
sub
cmp
scas
out
sub
mov
fld
rcr
xchg
push
cmps
adc
shl
fild
(bad)
loope
dec
in
loop
jl
adc
push
fs
int3
jl
adc
das
dec
stos
push
mov
jg
cli
icebp
adc
ins
and
stos
out
sbb
cmps
mov
repz
test
stos
ss
dec
pop
movs
aam
fnsave
pop
pop
ror
pop
loope
xor
clc
push
jae
cmp
shl
sub
lahf
test
not
iret
ins
stc
jnp
cmp
xchg
inc
inc
adc
daa
mov
ds
(bad)
retf
call
mov
push
imul
jp
push
mov
push
xor
movs
ffreep
mov
(bad)
sub
enter
sub
retf
nop
aam
mov
jg
sub
jbe
cmp
mov
repnz
imul
xor
dec
dec
popf
cs
mov
jmp
jecxz
jae
mov
ficom
push
pop
and
outs
jmp
add
mov
jb
nop
and
leave
dec
gs
test
les
sub
jp
mov
sub
lea
add
fwait
dec
mov
popf
imul
push
pop
fs
mov
jns
and
pop
sbb
or
cmp
rcl
outs
mov
mov
loop
fsub
cli
sar
inc
repnz
cmp
jne
xor
loop
in
push
dec
sub
and
sub
adc
cs
inc
xchg
jl
out
ret
pop
inc
fdivr
les
push
sahf
jg
xchg
pop
imul
push
retf
out
cwde
cmp
lods
fild
movs
pusha
loop
inc
push
outs
and
mov
sub
stos
and
and
mov
in
mov
das
jp
adc
dec
cmp
cmps
mov
xchg
xor
push
jmp
cmp
jne
ins
add
xor
rol
and
and
jg
std
mov
sub
jbe
xchg
iret
add
movs
sub
or
push
push
cwde
sar
mov
sti
push
mov
(bad)
arpl
push
push
cmp
pop
inc
jo
pop
mov
es
lock
jbe
and
stos
lods
stc
sub
pop
push
shl
les
sbb
in
aad
mov
push
jno
clc
pop
lock
push
dec
mov
adc
lods
fiadd
pusha
(bad)
adc
or
rol
push
xchg
pop
mov
ficomp
cmp
jo
adc
dec
and
jne
call
cmps
adc
fnsetpm(287
repz
outs
int
or
arpl
mov
mov
(bad)
and
aaa
test
fwait
nop
and
mov
sbb
out
std
jecxz
loop
movs
dec
mov
inc
xchg
cwde
mov
in
ds
fsubr
fwait
cs
adc
push
cmp
mov
pop
cmp
sbb
aaa
push
mov
stos
sti
and
pop
jae
mov
mov
mov
inc
sub
call
inc
cmp
mov
and
cmp
shr
mov
(bad)
test
lea
mov
stos
pop
xchg
fisubr
mov
push
pop
inc
xor
movs
not
enter
fdivp
(bad)
cld
pop
pop
mov
lock
adc
test
push
scas
cmps
cli
rol
mov
stos
test
popa
loop
inc
inc
adc
aad
sbb
(bad)
mov
mov
jle
push
div
jl
pop
test
dec
add
into
jecxz
ss
ja
dec
cmp
lds
shr
js
adc
jno
icebp
(bad)
dec
xchg
adc
sbb
int3
mov
aam
(bad)
fisttp
pop
mov
mov
leave
inc
fld
mov
sahf
mov
mov
or
pop
nop
lods
loop
outs
mov
pop
cmp
(bad)
cli
adc
mov
into
int3
es
mov
daa
pop
jb
into
xchg
lods
dec
hlt
pop
mov
call
xor
into
xchg
shr
lahf
jne
push
jge
jae
xchg
test
aam
icebp
adc
ret
les
lahf
and
pop
adc
outs
or
nop
nop
push
retf
popa
mov
xchg
lea
leave
std
push
daa
push
out
ds
push
sbb
jae
fwait
(bad)
mov
and
dec
js
jno
mov
test
test
sbb
jmp
(bad)
hlt
inc
push
mov
lods
outs
mov
pop
enter
data16
inc
data16
mov
or
push
sub
cmps
adc
pop
push
cvtps2pi
sub
icebp
(bad)
in
jae
lods
or
mov
mov
aas
fcom
fild
jnp
aas
into
dec
add
cmp
cmp
xchg
imul
ds
(bad)
cwde
icebp
int
xchg
sub
ret
cmp
or
ins
arpl
ins
pop
fld
dec
es
xor
push
dec
lds
pop
pop
out
jae
cwde
and
(bad)
lods
and
ret
pop
call
fwait
aas
jmp
cmp
sbb
in
pop
and
push
or
rol
jo
add
push
cli
sbb
cmc
add
cmp
xor
rcl
push
push
pop
je
loope
dec
sub
pop
scas
push
aam
inc
sub
jecxz
push
xor
jp
into
call
mov
into
je
or
xor
loop
jmp
mov
sub
or
leave
shr
inc
push
xor
push
stos
inc
dec
mov
cmp
daa
mov
out
cmc
mov
loopne
mov
data16
(bad)
out
(bad)
call
test
fidivr
push
lods
out
(bad)
clc
lock
jecxz
rcr
xchg
mov
xchg
aas
fucomi
pop
xor
and
stos
adc
ucomiss
aam
dec
inc
jae
push
xlat
jge
jl
cmp
cmp
int
imul
jbe
add
in
lods
pop
pop
xor
mov
mov
push
inc
xchg
repnz
fdivr
mov
sub
call
lds
outs
mov
mov
mov
aam
mov
retf
pop
push
lahf
cmp
movs
arpl
jo
mul
shl
es
and
retf
inc
mov
pushf
stos
push
test
js
or
sbb
in
je
ret
ffreep
out
jae
leave
mov
(bad)
aas
inc
in
adc
push
ret
cmp
inc
repz
xchg
adc
nop
add
or
inc
pop
xchg
gs
pop
inc
adc
cli
sbb
add
aaa
mov
mov
mov
push
(bad)
arpl
std
push
push
neg
leave
xchg
and
pop
xchg
and
popf
fisttp
cmp
outs
mov
fidiv
movs
stos
rcr
mov
movs
jle
pusha
sub
mov
sbb
outs
jmp
cld
fs
pop
call
test
sbb
mov
sub
ds
scas
push
repnz
sub
popf
cmp
pop
call
inc
xchg
(bad)
jns
es
retf
push
push
mov
scas
(bad)
dec
xor
sub
inc
cmc
mov
cli
std
inc
xchg
cmp
adc
push
cmp
adc
es
call
mov
cmp
and
ss
sbb
retf
leave
iret
and
cmp
pop
(bad)
sub
inc
mov
mov
dec
nop
adc
scas
inc
cmp
dec
ja
mov
dec
imul
pop
jno
xor
jae
retf
into
bound
jl
xor
adc
scas
shl
add
mov
call
repnz
jbe
pushf
retf
lahf
dec
jmp
cmp
mov
jmp
xor
push
fmul
or
int
mov
icebp
add
mov
sbb
jecxz
mov
retf
pop
mov
xchg
push
and
adc
xor
scas
or
popa
fdiv
imul
pushf
mov
adc
jg
jmp
jb
dec
(bad)
out
or
inc
xor
loop
sub
shr
gs
shl
jl
and
and
ficom
cli
cld
lods
pop
push
int
add
push
ds
push
cmp
mov
fsubr
movs
cld
shr
push
pop
mov
sbb
xchg
call
jg
add
pop
adc
sub
jns
jmp
mov
mov
xchg
dec
jmp
cwde
and
je
mov
add
inc
xchg
jbe
xor
mov
sbb
dec
lods
push
sub
and
call
rol
cmp
pop
cpuid
addr16
pop
sub
in
jne
int3
std
pop
mov
int
sti
(bad)
fbstp
int
neg
jmp
aam
push
cmp
retf
dec
pop
mov
jmp
or
je
adc
rol
aad
fldcw
inc
loopne
add
add
pop
mov
daa
mov
mov
xchg
(bad)
or
or
adc
lds
push
lds
fcom
push
add
mov
fadd
add
loope
lds
inc
retf
adc
pop
sbb
inc
push
cmp
mov
jge
ss
fnsave
push
mov
fcom
mov
or
cmps
in
js
xlat
dec
neg
dec
cmpxchg
in
and
mov
mov
std
movs
mov
and
dec
push
lods
fsub
push
add
pop
sub
mov
push
imul
lods
shr
jns
add
imul
xchg
iret
mov
jp
imul
mov
sbb
pop
mov
(bad)
retf
dec
xchg
ss
test
retf
pop
push
push
jbe
(bad)
mov
cdq
pop
out
sub
xor
mov
adc
xor
sub
sub
outs
push
xchg
das
(bad)
xor
rcl
shl
jno
jo
jne
or
(bad)
jmp
inc
aas
ret
xor
inc
out
sub
xor
push
lea
mul
nop
ret
mov
or
sbb
(bad)
shl
adc
dec
mov
jecxz
adc
adc
ret
shr
ret
jns
add
mov
adc
sbb
leave
push
push
int
mov
jae
push
popf
sub
adc
mov
mov
das
scas
jns
add
mov
mov
add
enter
out
pushf
rcr
pop
mov
jmp
sub
cmp
cmp
das
pop
sahf
push
imul
and
(bad)
cmp
std
sub
and
mov
add
ds
or
data16
sbb
mov
les
and
fistp
test
jle
out
push
or
scas
retf
pop
adc
aam
icebp
(bad)
int3
daa
jl
or
int3
aam
mov
bound
mov
fs
pop
movs
xor
movs
xchg
outs
and
adc
mov
fdiv
(bad)
leave
test
fisttp
outs
add
retf
sbb
and
xchg
(bad)
xchg
mov
es
lea
add
pop
enter
int3
hlt
sti
push
int
dec
js
cmp
jecxz
sub
xchg
adc
adc
pop
sti
pop
scas
stos
dec
sub
and
pushf
adc
pop
outs
push
mov
movs
das
in
sti
(bad)
adc
das
push
repnz
mov
sti
mov
sbb
mov
cmp
fistp
xor
inc
dec
mov
div
jle
add
jnp
call
dec
jle
dec
adc
out
into
pop
cmp
push
sub
aad
pop
and
mov
es
inc
movs
lds
sbb
ret
pop
out
cmpps
rcr
jp
addr16
retf
arpl
pop
inc
call
sbb
out
and
cwde
call
in
adc
push
pcmpeqb
scas
cmp
stc
pop
inc
cwde
lock
xor
out
adc
ins
jne
pop
sti
les
inc
or
(bad)
mov
(bad)
loope
out
outs
and
dec
outs
iret
clc
shr
mov
inc
call
inc
scas
add
push
test
pop
jle
in
push
dec
pop
sub
xchg
aam
(bad)
push
fild
xchg
or
cmp
sbb
stos
retf
and
xchg
jne
and
pop
push
cmp
fwait
std
sar
cli
cmp
mov
sub
sbb
push
(bad)
jb
aam
or
popa
mov
fcomp
clc
dec
popa
cwde
push
or
hlt
scas
mov
scas
aas
int
adc
mov
lahf
cdq
pop
inc
mov
and
push
pop
dec
fimul
lahf
mov
mov
fcomp
mov
sub
call
(bad)
movs
add
dec
inc
add
or
mov
sub
jb
aaa
xchg
call
adc
lds
test
outs
mov
rol
push
or
mov
leave
cs
ja
pop
jne
mov
shr
push
aad
push
jne
popa
mov
pushf
dec
(bad)
jecxz
xor
sub
adc
idiv
into
inc
fsubr
loopne
mov
cmp
repz
jnp
daa
dec
in
push
data16
adc
xor
inc
pop
jecxz
pop
and
mov
jmp
xchg
arpl
cmp
push
or
sahf
sub
xchg
scas
cmps
and
cmps
sub
lahf
ins
push
pop
mov
push
add
mov
stos
int3
push
fxch
mov
(bad)
mov
push
cmp
inc
in
mov
sub
xchg
adc
es
sub
test
(bad)
jl
jo
mov
adc
ss
fs
push
enter
rol
adc
mov
push
fcmovne
push
inc
add
mov
xor
push
or
and
arpl
imul
or
sub
outs
pop
mov
rcl
xlat
mov
sub
popf
repnz
stc
jmp
test
shr
or
jle
cmp
dec
push
push
xchg
or
popa
mov
sub
js
icebp
lock
mov
fcomp
jle
ret
pop
dec
pusha
adc
aam
pop
or
in
jo
xchg
loope
push
je
or
adc
push
lea
movs
mov
jmp
and
fild
xor
pop
ja
pop
sub
retf
xchg
ins
dec
call
dec
cwde
dec
dec
fistp
inc
shr
pop
sub
xchg
mov
out
ja
cmp
pop
xchg
mov
jge
cdq
in
ja
dec
or
pushf
enter
push
ds
dec
and
jno
pop
pop
je
fild
repz
mov
cmp
or
jle
in
fimul
in
cmp
push
lods
cmp
and
jnp
dec
lock
push
sbb
sbb
stos
(bad)
repnz
fmul
cli
xor
add
push
mov
int
ror
cdq
jle
and
sbb
mov
jmp
shl
arpl
out
dec
icebp
or
std
xor
stos
ret
xor
inc
in
clc
adc
and
sar
out
mov
jo
and
mov
lock
loopne
rol
jnp
rol
mov
push
lds
pop
in
push
jge
and
jmp
in
adc
pop
pop
ss
shl
ja
stos
jne
popf
inc
mov
movs
js
jecxz
movs
adc
mov
out
inc
dec
lds
call
pop
jmp
retf
xchg
pop
fwait
or
aam
inc
call
sub
inc
or
mov
xchg
loop
daa
sub
or
rol
jno
cmp
push
fs
xchg
jmp
iret
ror
call
mov
push
push
xlat
inc
aam
call
mov
adc
cmp
inc
jmp
push
or
fcom
xchg
push
inc
push
mov
push
and
and
lods
scas
(bad)
mov
fwait
push
mov
icebp
cmps
pushf
dec
jmp
loop
fsub
add
in
stos
and
ficom
dec
clc
adc
repnz
in
aaa
(bad)
xchg
pop
lock
xor
xor
mov
mov
(bad)
push
xor
mov
and
sbb
jae
out
cmp
sub
adc
xchg
test
add
(bad)
out
dec
sar
icebp
mov
scas
pop
ss
(bad)
mov
dec
inc
je
fs
cmp
push
rcr
movs
jnp
out
pop
test
shl
mov
adc
add
stos
sbb
hlt
xlat
push
xchg
(bad)
ret
mov
dec
lahf
and
cmc
sub
and
loop
nop
aaa
sbb
push
popa
sub
out
push
mov
mov
aaa
repz
push
stos
loopne
call
fisubr
das
cmp
xor
push
adc
xor
pushf
jmp
mov
scas
xor
pop
(bad)
cmp
out
pop
adc
jmp
fst
xchg
icebp
in
fdivrp
sub
xchg
jnp
push
das
push
xor
hlt
mov
(bad)
movs
and
jne
es
dec
push
pop
mov
addr16
ret
(bad)
mov
(bad)
(bad)
icebp
mov
mov
lds
or
push
fwait
fwait
lods
mov
mov
cmps
mov
pusha
dec
inc
push
(bad)
and
sub
pop
xor
jge
test
xchg
dec
stos
add
and
dec
sub
fcom
push
int3
mov
inc
rcr
adc
shr
inc
icebp
imul
xlat
call
mov
test
or
loopne
dec
mov
call
jns
xchg
push
fdiv
loop
xchg
das
pop
lds
sub
fsubp
sub
jecxz
adc
xor
ror
sbb
test
cmp
xlat
xlat
or
cmps
mov
fimul
push
pop
mov
bound
outs
imul
popa
inc
add
pop
test
stc
imul
push
xor
adc
ins
push
cld
ffreep
fcomip
xor
fistp
aam
rep
jg
shr
mov
(bad)
imul
mov
mov
aaa
add
jnp
aaa
push
jecxz
cmps
mov
add
je
xchg
cmps
inc
and
lgdtd
(bad)
out
cmp
inc
inc
(bad)
and
shr
fldenv
dec
mov
adc
imul
jg
xlat
pop
cmps
sub
int
fs
jmp
daa
imul
push
mov
shl
setnp
sbb
pop
and
and
outs
xchg
cmp
mov
in
retf
mov
jmp
push
aam
mov
and
arpl
fsubr
scas
int
pushf
stos
xor
cli
mov
push
jecxz
xor
test
std
pop
cmps
data16
push
rol
fmul
daa
enter
inc
bound
mov
sub
sub
xchg
les
mov
int3
aaa
out
les
pop
lahf
xor
sub
ds
popa
sbb
push
daa
cmps
sub
cdq
out
add
ss
mov
hlt
jns
clc
ins
push
dec
imul
adc
xor
stc
test
(bad)
mov
cmp
mov
adc
jns
or
and
(bad)
sub
fdivr
jo
xchg
add
es
aad
ret
bound
xchg
push
xor
xchg
out
and
stos
(bad)
stc
mov
pop
push
mov
jnp
js
push
fnstenv
jg
fld
xchg
sub
push
push
xlat
mov
pop
cmp
cld
pop
xchg
push
xchg
inc
push
mov
cdq
adc
in
ins
and
repz
xchg
aam
mov
jmp
push
and
mov
repnz
test
rol
loopne
dec
mov
stos
cmp
sbb
mov
loope
xchg
mov
xor
cmp
adc
iret
add
jo
jae
sbb
lds
movs
sbb
mov
outs
pop
mov
and
or
xor
ret
inc
dec
push
iret
mov
popf
cmp
fucomi
mov
sar
test
shr
test
retf
cdq
fsub
stos
mov
xor
clc
in
test
fbld
outs
sub
retf
imul
adc
cli
lock
scas
(bad)
push
fld
xor
mov
ud2
dec
daa
aas
test
push
inc
xchg
mov
xchg
sbb
push
pop
arpl
test
adc
jo
xchg
add
jns
adc
and
addr16
inc
push
pop
ss
pop
jae
dec
adc
and
mov
imul
cmp
enter
leave
inc
adc
mov
dec
dec
aam
mov
jmp
cmp
imul
stc
mov
mov
retf
or
sar
add
shl
ret
in
jne
into
xchg
mov
ins
nop
sub
mov
cmps
ret
std
cmp
fcmovb
and
or
mov
jno
mov
ds
mov
lock
add
ror
xor
xor
xor
sbb
nop
int
retf
(bad)
retf
jne
pop
out
and
pop
fisttp
cld
cmp
shr
ret
ins
push
sub
inc
cmp
out
(bad)
sti
or
(bad)
leave
fcomi
sub
stos
pop
lods
sbb
sub
je
clc
pop
cli
imul
lods
jl
xor
pop
xchg
sub
out
pop
bound
in
(bad)
dec
push
popf
or
adc
fimul
lods
loopne
xchg
ficomp
xor
cmps
out
(bad)
pop
add
sbb
pusha
jne
or
or
cmp
es
(bad)
stc
xchg
sbb
inc
cmps
popf
mov
cmp
sbb
jl
sub
and
mov
mov
xlat
stos
inc
push
dec
pop
jmp
retf
inc
pop
lods
into
rol
xchg
(bad)
dec
cmp
cmp
arpl
fidivr
and
ja
call
mov
mov
mov
mov
pop
pop
test
xchg
mov
cmps
mov
cmp
pop
test
sub
xor
in
clc
(bad)
jmp
ja
js
jmp
outs
mov
sbb
add
scas
xchg
ja
ss
in
jecxz
adc
inc
fiadd
mov
imul
dec
and
ins
popa
enter
jmp
popa
fstp
sbb
les
mov
int
leave
into
sub
and
pop
stos
pop
outs
mov
push
ins
xor
mov
rcr
test
je
fist
xchg
ret
leave
jnp
in
lahf
mov
adc
cli
(bad)
not
xchg
xor
add
das
mov
mov
lods
cmp
jbe
jno
and
test
popa
sbb
lods
sbb
mov
push
push
cvtps2pi
dec
push
xor
adc
inc
jne
adc
xchg
xor
pop
imul
das
and
inc
pop
sbb
icebp
ins
sub
(bad)
jge
push
xor
jp
xchg
loope
std
sub
mov
dec
inc
inc
in
in
fild
mov
adc
sbb
mov
js
adc
and
(bad)
pop
push
cmps
dec
fcomp
cmp
stc
cmp
xchg
(bad)
cmc
jbe
adc
adc
outs
jo
cmp
pop
lods
push
mov
sub
inc
cmc
cmp
(bad)
xchg
test
pop
mov
(bad)
mov
(bad)
lea
aas
sbb
xor
jns
jg
dec
pusha
adc
pop
(bad)
rcr
pop
and
mov
jno
gs
jo
jbe
push
dec
ins
push
sub
pop
popf
xor
lods
out
jnp
jns
sbb
jmp
or
test
inc
into
mov
out
lods
xor
clc
dec
hlt
add
mov
sub
retf
sub
xchg
mov
fmul
adc
sbb
jo
fwait
ror
or
sub
or
mov
fcom
mov
jp
sbb
lea
inc
es
js
xchg
ins
fdivr
mov
fbld
outs
cli
movs
cdq
rcr
test
fistp
out
packssdw
repz
lock
dec
out
lods
lahf
mov
mov
outs
jle
cmp
xor
loopne
add
and
(bad)
or
push
bound
retf
ds
out
outs
neg
adc
or
dec
into
out
pusha
rcl
gs
sar
lock
sub
push
loope
add
jl
lods
inc
jbe
dec
dec
call
mov
mov
lahf
cmp
sub
pop
repz
icebp
retf
stos
test
xchg
bound
lods
lods
and
mov
cs
int
outs
in
(bad)
jbe
jecxz
lea
pusha
jo
xchg
jg
sub
loopne
aam
(bad)
inc
push
dec
clc
lea
ds
scas
jecxz
adc
push
add
test
add
cmp
push
fcomi
jge
push
gs
or
pop
push
push
mov
jae
lahf
(bad)
clc
jge
jmp
in
add
jnp
push
lahf
dec
cmp
std
push
cmp
(bad)
push
(bad)
add
mov
retf
in
das
fstp
(bad)
out
sub
enter
mov
stos
mov
(bad)
cmc
outs
cmp
shr
sub
cmp
mov
or
loop
iret
mov
(bad)
jo
xor
imul
(bad)
std
das
and
fldln2
or
xor
mov
movs
mov
mov
cmp
cmp
pop
mov
retf
xchg
jmp
retf
ficomp
(bad)
data16
inc
push
in
lods
out
xor
jp
jne
mov
data16
sti
inc
loopne
jmp
xchg
xor
fcom
dec
xchg
test
(bad)
xor
xchg
(bad)
mov
mov
stos
xchg
mov
pop
fsin
pop
clc
xlat
ret
lock
cmc
in
lock
data16
fbld
push
mov
inc
jmp
jnp
sti
sbb
push
shr
xor
inc
test
lds
jp
sub
js
mov
arpl
scas
or
pusha
adc
cld
test
pop
xchg
(bad)
fcmovnb
mov
sub
shl
shl
(bad)
mov
mov
adc
cmps
cwde
daa
sub
jno
pop
pusha
push
jg
adc
sub
pop
dec
pop
rcl
daa
sar
les
fldlg2
cmp
mov
fwait
popf
sahf
mov
mov
shl
mov
call
jmp
jmp
mov
stos
ret
pop
sub
aas
cdq
or
push
ror
xor
pop
int3
pop
xchg
sub
dec
inc
jmp
inc
sbb
and
jmp
add
mov
and
jb
mov
jmp
mov
leave
dec
ds
sbb
sbb
xchg
ins
mov
mov
pop
jbe
fldenv
leave
dec
fsub
and
test
outs
dec
mov
das
js
outs
inc
sub
xor
arpl
pop
loope
sub
xchg
add
(bad)
cmp
pop
fiadd
sti
scas
mov
test
mov
jbe
mov
xchg
mov
and
stos
or
jg
jae
add
pop
push
mov
add
mov
push
arpl
stc
dec
scas
aam
aaa
in
fsubr
sub
call
out
cmps
int3
adc
adc
pusha
push
dec
pop
pushf
out
mov
xchg
leave
mov
(bad)
pop
cmp
inc
(bad)
retf
jae
ins
aad
jne
fcmovnb
jae
leave
xor
jg
xchg
cmp
out
(bad)
pop
jbe
int3
push
(bad)
popf
jmp
leave
jle
push
nop
test
xchg
pusha
adc
mov
mov
pusha
aad
jmp
adc
cld
mov
aas
std
xchg
push
in
test
and
cmp
repnz
cwde
pop
cs
int3
int
mov
xor
adc
cld
mov
mov
fwait
add
xor
leave
xchg
fadd
ja
sub
leave
lock
pop
dec
mov
fs
sbb
mov
jne
(bad)
push
xor
scas
rol
outs
bound
cdq
sbb
imul
cmc
add
std
inc
adc
ja
or
bound
ins
mov
int
cs
int3
les
mov
or
jno
sbb
xchg
into
cmp
repz
inc
mov
add
mov
in
jle
dec
fld
inc
in
pop
push
xor
dec
xchg
cld
inc
mov
stos
mov
les
add
push
pop
(bad)
add
cmp
icebp
add
fisubr
loopne
sbb
loop
pop
inc
(bad)
fld
cmp
out
push
push
pop
xor
cld
ret
loope
adc
mov
jno
loop
and
xchg
cmp
xor
sub
pop
or
hlt
enter
fild
test
mov
retf
mov
jmp
push
jo
lock
ror
gs
inc
ror
add
push
xchg
retf
inc
in
xchg
xchg
sub
mov
lock
std
pushf
je
jl
nop
push
mul
sar
lds
jno
jg
and
push
push
cli
xchg
dec
sbb
fld
push
scas
and
les
fnstsw
ins
jl
mov
xchg
push
in
and
push
(bad)
pop
inc
xchg
mov
inc
loopne
cwde
or
int
jge
cs
ins
popf
sub
push
popf
push
mov
stos
scas
dec
inc
mov
fist
inc
inc
int
add
int3
stos
out
push
inc
push
aas
mov
jecxz
into
lock
dec
jg
cdq
jo
repz
sub
outs
cmp
xlat
data16
aad
inc
mov
sub
cmp
sar
stos
ins
stos
int3
push
stos
add
ja
add
cmp
or
adc
push
pop
jecxz
adc
outs
sbb
push
retf
inc
cmp
adc
pop
in
out
je
xchg
sbb
dec
sub
or
or
rcl
pop
(bad)
mov
mov
dec
sub
sub
cmp
xchg
cmp
pop
dec
jecxz
adc
in
jo
jle
pop
in
xor
mov
ret
mov
fist
(bad)
out
int
lods
repz
inc
pop
jbe
or
cwde
jmp
xor
ins
fisubr
xor
es
xor
mov
aas
fucomp
pop
stos
cwde
test
test
push
add
mov
sti
stos
cmovg
xchg
pop
mov
push
in
imul
or
push
jo
pusha
(bad)
jb
inc
movs
xor
in
lods
pop
(bad)
lods
mov
ror
mov
nop
adc
adc
or
or
cmpxchg
push
jp
cdq
lea
sub
sub
ss
xchg
xor
call
ss
inc
push
mov
adc
pop
xchg
les
fdiv
xchg
push
nop
movs
int
lods
jmp
ret
cld
enter
sar
inc
test
jl
jne
cmc
stc
sbb
pop
and
dec
mov
jno
xchg
push
cmps
sbb
mov
je
add
xchg
les
clc
bound
inc
sub
pop
movs
sub
xchg
stos
mov
dec
xor
jno
test
jb
sbb
mov
lock
push
dec
nop
or
(bad)
scas
mov
inc
add
or
pushf
outs
(bad)
cli
sub
pop
mul
fnstsw
js
int
movs
test
sbb
mov
mov
xchg
mov
inc
pop
cmps
pop
jmp
fisubr
pop
push
aaa
hlt
mov
bswap
mov
push
xchg
sbb
int
jne
pusha
inc
gs
out
bndstx
in
fbstp
mov
adc
and
xchg
mov
mov
popa
jo
pop
jge
sti
jle
jecxz
inc
les
mov
dec
scas
mov
xlat
xchg
cld
call
mov
jle
mov
repnz
(bad)
mov
jne
pusha
inc
mov
dec
in
cmc
jbe
in
or
rep
cmps
mov
cli
leave
lea
pop
out
cmp
add
mov
sbb
pop
aaa
xchg
dec
xchg
and
jnp
fbstp
or
xor
out
adc
lea
adc
xchg
and
lahf
shr
push
stos
(bad)
fsubr
xchg
cmp
sub
pop
cmps
cmps
mov
mov
inc
out
(bad)
arpl
cmp
outs
fs
cmc
imul
xchg
xchg
mov
sahf
aad
xchg
clc
pop
xor
movs
(bad)
add
jecxz
nop
jp
jae
pop
mov
(bad)
dec
jns
mov
push
out
inc
xor
inc
cmp
add
(bad)
dec
mov
popa
xor
cld
sbb
or
xlat
lahf
sbb
loope
sub
dec
int
mov
dec
mov
jno
push
mov
out
inc
ja
sub
adc
fmul
test
pop
fwait
(bad)
fidiv
(bad)
setbe
sub
dec
dec
xchg
clc
and
pop
mov
scas
fmul
cld
in
push
push
pop
fld
pop
arpl
out
cmp
or
dec
mov
ret
pop
fmul
hlt
dec
std
mov
xor
mov
popa
fidivr
xchg
in
or
jp
es
cmp
ins
mov
push
ja
rcl
push
hlt
std
pop
in
jmp
mov
push
stos
jle
mov
lahf
mov
in
mov
fcomip
mov
sbb
sub
push
fdiv
test
push
and
js
mov
mov
aam
sub
stos
push
rcr
retf
fimul
cwde
mov
mov
jmp
cmp
ret
ror
pop
call
push
movs
je
cwde
pop
mov
mov
movs
mov
and
sub
scas
jg
xchg
push
pop
jle
ja
mov
push
push
and
mov
xchg
jbe
inc
dec
pop
xor
cli
aaa
and
shl
jns
xor
sbb
pusha
adc
aam
xchg
add
leave
dec
shr
fdivrp
cmps
ins
or
test
xor
pop
retf
jne
retf
cdq
mov
shl
pop
aaa
lea
dec
jmp
pushw
pop
popf
add
jge
mov
sbb
jb
shr
mov
cmp
bnd
fs
pushf
xor
call
jl
push
jo
adc
ror
push
sbb
cld
or
or
out
(bad)
jle
pop
stos
push
inc
push
std
jecxz
adc
rol
sub
pop
icebp
loopne
test
loop
adc
retf
sbb
dec
cmp
lock
cli
movs
aaa
jne
int3
fucom
and
pop
xchg
shr
jecxz
in
out
lods
pusha
dec
out
dec
sbb
add
or
lahf
fcmovb
int
mov
pop
mov
jl
nop
mov
mov
stos
hlt
lods
imul
add
std
outs
jle
not
leave
cdq
xlat
clc
repz
outs
sbb
iret
cmps
in
(bad)
sahf
inc
cmp
bound
idiv
jg
dec
ret
lods
das
rol
add
cmps
mov
sbb
ds
jb
add
xchg
or
call
les
mov
fild
jp
stos
lahf
dec
push
jecxz
ins
adc
and
adc
mov
xor
mov
lods
shr
icebp
iret
test
dec
xchg
pop
sub
adc
scas
cmp
jmp
mov
push
(bad)
fucomi
xor
arpl
ins
mov
pop
fsubr
xor
je
xchg
call
adc
dec
xchg
push
pusha
mov
push
popa
dec
or
add
adc
pop
mov
sbb
ja
cmps
mov
inc
add
repz
mov
adc
mov
mov
retf
push
(bad)
clc
rcl
add
push
xor
sub
shl
push
call
in
adc
mov
retf
push
test
ret
cmp
inc
cli
jp
inc
lahf
mov
mov
sub
je
out
std
fwait
mov
or
push
nop
clc
add
jmp
adc
outs
out
pop
dec
rcr
dec
xchg
mov
int
and
rcr
es
daa
and
fnstenv
retf
imul
sbb
stc
fstp
pop
lahf
xorps
pop
push
icebp
retf
out
mov
cmp
pop
pop
adc
ficom
bound
inc
jnp
icebp
ins
lock
cli
jp
and
in
cwde
test
mov
jne
fsub
arpl
popa
jnp
test
ret
shr
inc
adc
pop
test
cmp
jb
cdq
push
xchg
or
inc
xchg
push
loope
scas
adc
ins
mov
pop
adc
rol
sub
cmc
mov
aam
xchg
jno
into
mov
mov
mov
data16
mov
push
sbb
mov
sbb
xchg
cdq
jno
jae
mov
das
pushf
sub
cmp
arpl
mov
xor
xor
daa
cmp
lahf
int3
in
or
adc
sbb
loop
mov
bound
shl
aaa
shl
cs
push
mov
repz
imul
inc
push
sahf
jge
pusha
ret
sbb
sub
xchg
(bad)
js
adc
into
dec
xchg
jecxz
mov
cld
call
xchg
jmp
xor
daa
pop
and
add
daa
popf
push
loope
cld
mov
inc
pusha
and
inc
cwde
ror
retf
inc
shl
cli
popf
shr
pusha
sbb
inc
in
adc
std
test
stc
xor
dec
mov
aas
lock
(bad)
aam
mov
inc
es
lock
(bad)
sub
imul
call
mov
xchg
(bad)
push
pop
xchg
clc
cmc
test
sahf
mov
xchg
test
(bad)
and
jo
movs
jmp
add
fimul
js
inc
sbb
and
test
rsqrtps
jne
nop
pop
sbb
addr16
push
popf
les
jae
iret
fbstp
fbld
mov
retf
std
inc
dec
cdq
jmp
jmp
xor
outs
or
or
pop
push
hlt
xor
adc
sbb
jge
gs
adc
sbb
test
mov
mov
int3
jae
bound
ret
addr16
fnstsw
(bad)
aad
and
adc
cmp
js
(bad)
(bad)
and
call
mov
stos
add
add
aad
push
xchg
shl
push
and
shr
(bad)
cli
jmp
fidiv
(bad)
dec
int
pop
mov
nop
inc
adc
outs
(bad)
fdivr
sbb
imul
xor
cmp
cmps
xor
add
lock
aam
jge
push
ror
pop
enter
jge
dec
std
jl
mov
or
pop
add
ficomp
inc
rcr
or
mov
add
cmp
out
push
mov
int
imul
push
cmp
outs
dec
aaa
(bad)
sbb
aaa
fs
outs
rcr
repz
lahf
xor
adc
push
out
aaa
inc
push
dec
outs
push
mov
rcl
in
loop
sbb
inc
xor
cmp
je
mov
mov
not
int3
inc
fld
or
scas
test
add
and
mov
outs
pop
aaa
fsub
push
xchg
aaa
cmp
addr16
and
fcmovnbe
mov
out
jg
jg
ja
nop
rcl
mov
mov
mov
pop
fdivr
out
cmp
lock
jl
ud0
or
loop
call
sbb
inc
mov
retf
cli
scas
imul
into
es
test
mov
sub
sbb
pusha
inc
inc
test
adc
and
jae
retf
push
push
int3
cmp
sub
add
call
push
enter
pusha
int
adc
stc
cmp
and
mov
push
out
jle
adc
or
rcl
das
pop
imul
and
inc
mov
inc
mov
mul
in
jb
or
cmps
out
aaa
outs
sub
mov
cmp
not
and
mov
jno
sub
push
jbe
xor
cmps
in
popf
lods
push
lahf
push
add
sub
pop
repnz
sbb
dec
mov
xchg
sbb
imul
ret
push
cmp
shr
sahf
mov
or
test
adc
sub
repnz
mov
and
stos
and
movs
or
jmp
jle
ss
enter
loop
rol
aaa
fisubr
jnp
imul
jmp
test
lahf
mov
sbb
cld
(bad)
push
out
outs
cdq
pop
out
scas
ds
pop
nop
inc
pop
mov
adc
push
sub
pop
aas
int
mov
cmp
nop
sahf
dec
sub
and
or
gs
das
bound
fsubr
pop
out
xor
fbld
ret
xchg
sbb
jp
or
data16
call
sbb
xchg
push
jle
xchg
adc
add
fs
push
adc
test
sub
fisubr
jecxz
mov
in
adc
mov
mov
add
cmp
aad
lahf
dec
pop
pop
sbb
add
test
outs
sahf
sti
push
jge
aas
sbb
push
xor
icebp
push
xor
adc
adc
add
lahf
push
fs
push
mov
dec
leave
sbb
scas
sub
aam
mov
(bad)
pop
mov
ins
xchg
add
xchg
dec
cdq
lds
jmp
adc
stc
(bad)
mov
fisttp
gs
cmp
sub
pop
push
sar
dec
xor
xchg
mov
mov
push
dec
xor
std
(bad)
adc
scas
jl
stos
stos
cmp
or
mov
jl
mov
imul
xchg
lods
aad
or
xor
imul
jmp
xchg
jbe
pop
xor
stos
jl
pop
xchg
mov
lods
pop
stc
retf
jge
fs
stc
lahf
xor
pop
mov
mov
rcl
cmps
outs
ss
push
jnp
data16
ins
inc
jge
sub
retf
xchg
mov
mov
xor
jns
jmp
aam
add
out
shl
leave
in
cmp
push
inc
xchg
popa
int
loope
test
cmc
rcr
jne
outs
(bad)
pop
lods
clc
mov
pushf
sahf
retf
xchg
test
sub
test
push
sahf
mov
and
add
(bad)
lods
rcl
push
add
jo
addr16
add
sbb
and
call
pop
sub
add
icebp
mov
dec
pslld
ja
sbb
add
out
push
cmc
enter
xchg
retf
setb
cmp
sbb
stos
scas
mov
je
xchg
icebp
mov
xor
jecxz
push
push
fidivr
inc
pop
mov
inc
stos
jnp
ins
cwde
popa
cwde
sahf
push
cmps
pusha
nop
bound
or
mov
cmc
xchg
cmp
dec
popa
pop
add
repnz
push
fstp
pushf
jl
mov
shr
repz
ss
ficom
pusha
pop
pop
packsswb
jae
ret
push
fnsetpm(287
gs
adc
mov
xchg
xchg
mov
inc
movs
mov
popa
mov
lahf
mov
xor
aam
in
pop
loope
inc
jb
movs
cmp
in
ss
adc
bt
repz
cmps
sub
leave
mov
mov
sub
push
mov
and
pop
dec
imul
push
xchg
(bad)
mov
jmp
adc
mov
lods
sub
xor
loop
call
mov
scas
lahf
leave
test
mov
pop
jns
addr16
adc
rol
imul
mov
fwait
dec
fwait
mov
dec
loop
ror
mov
xlat
add
icebp
mov
leave
or
jp
push
nop
sub
stos
push
adc
pop
sub
ret
jg
int
inc
xlat
call
into
pop
mov
nop
mov
jmp
xchg
out
jmp
sti
pusha
and
sbb
mov
jne
cmp
xchg
mov
or
add
leave
push
sahf
cld
scas
js
adc
xchg
test
(bad)
(bad)
add
inc
out
jbe
sahf
jnp
push
icebp
(bad)
movs
call
xchg
lahf
iret
adc
jmp
icebp
ret
mov
jp
sbb
cmp
or
cmp
imul
push
retf
ja
pop
jmp
jg
inc
or
dec
clc
js
add
mov
repnz
mov
jnp
ins
jmp
sub
lahf
add
or
call
dec
stc
jne
outs
xchg
mov
in
lods
push
les
pusha
retf
mov
push
emms
pmulhw
mov
xchg
pushf
inc
shl
and
sbb
push
mov
in
sub
in
add
mov
dec
pop
xor
mov
push
inc
sbb
cmc
sub
xor
xchg
mov
rol
aam
mov
jmp
mov
in
or
in
cmp
inc
pop
push
sbb
pop
add
cmc
add
int
and
mov
iret
int3
inc
imul
sbb
adc
les
lock
sub
icebp
stc
fcomp
push
jns
rcr
test
mov
ret
xor
push
das
jl
sti
mov
les
cmp
jns
and
push
push
pop
jo
sbb
jl
jnp
test
pop
push
add
and
fbld
mul
adc
jo
inc
cmp
push
mov
and
inc
adc
pop
(bad)
pop
lods
(bad)
jmp
fcom
xlat
pop
xor
pusha
int3
daa
aad
push
sub
jl
pushf
inc
cld
mov
pop
adc
pop
in
fmul
sbb
sar
cs
mov
std
add
mov
xchg
aas
xchg
fcmovnu
inc
ret
fsubr
cli
inc
push
cmc
adc
inc
rol
daa
gs
int3
push
rcl
and
sbb
pushf
jns
or
test
aam
fst
shl
jge
ja
jmp
add
add
and
cmp
sub
fs
fidivr
lods
mov
pop
(bad)
sub
mov
mov
test
or
cmps
popf
push
adc
int3
mov
adc
in
test
in
ret
adc
mov
sbb
and
pop
mov
push
data16
arpl
mov
es
stos
mov
ins
push
clc
or
ret
sahf
or
and
or
jmp
mov
add
cmp
pop
mov
mov
xchg
pop
aam
pop
push
je
jle
pusha
or
addr16
mov
rcr
xchg
call
fwait
adc
stos
in
repz
arpl
mov
adc
(bad)
pop
dec
lahf
stc
nop
fwait
xor
cmp
push
ss
sub
xor
inc
loopne
dec
mov
ficom
loop
loope
pop
sbb
and
add
rcl
add
pop
in
scas
test
or
movs
pop
leave
dec
cmp
or
out
or
mov
mov
movs
aas
or
and
and
mov
inc
ror
xor
sbb
xchg
pop
adc
repnz
inc
and
add
jle
out
pop
neg
cmp
cmp
paddb
cmc
js
stos
sub
or
ds
inc
outs
xchg
pop
movs
pop
pop
sub
cmp
shl
xlat
add
es
or
fld
and
popa
lahf
add
fisub
pop
test
nop
adc
mov
ja
jmp
aaa
es
push
jmp
push
dec
mov
lahf
sub
cmp
mov
in
and
pop
xchg
jmp
outs
fdivr
jne
adc
scas
xchg
jo
test
sub
das
or
mov
lock
mov
xor
daa
cli
xchg
cmps
inc
and
test
cwde
adc
cmps
pop
stos
int
(bad)
jae
xor
sub
push
fs
scas
xchg
xor
adc
add
sbb
adc
inc
mov
jno
and
xor
mov
cli
and
std
adc
dec
sbb
xchg
and
inc
test
je
mov
les
dec
das
mov
push
inc
push
dec
push
or
into
jmp
shl
mov
fcom
pop
mov
pop
or
xlat
add
xchg
pop
imul
mov
mov
mov
xchg
fidiv
inc
repz
xor
fsubp
push
test
sub
int
and
sar
(bad)
pop
leave
xor
adc
cdq
popf
cli
jae
rep
pop
loop
xor
jp
retf
cmps
jecxz
push
jecxz
lea
cmp
jmp
int3
test
jno
imul
cwde
mov
sub
clc
fcom
sub
push
push
push
mov
imul
xchg
and
aad
mov
movzx
out
stos
int
mov
adc
sub
push
push
popf
jo
or
out
sub
bswap
push
inc
adc
inc
jmp
mov
mov
inc
xchg
jb
xchg
hlt
jg
dec
and
(bad)
fidivr
les
test
movs
mov
popf
cdq
cdq
mov
vpsllw
or
in
cmp
cmp
dec
sbb
in
pop
xchg
in
(bad)
pop
jmp
jl
jmp
dec
pop
jne
rol
aam
pop
pop
std
mov
jg
cmp
or
xlat
xor
loopne
stos
jnp
aam
rol
idiv
cmp
neg
mov
test
mov
int3
push
push
mov
ins
rcl
mov
jecxz
xchg
push
inc
sbb
cli
icebp
mov
inc
retf
in
iret
pop
cdq
mov
outs
add
add
jecxz
add
je
xlat
add
cmp
push
jg
fsub
dec
and
sbb
sbb
and
jl
repnz
ret
cdq
cmc
mov
jne
pop
and
faddp
add
std
fidivr
(bad)
sub
(bad)
stc
push
jg
jecxz
pop
ss
dec
ds
rcl
addr16
or
adc
outs
jecxz
loop
jb
cmp
xor
sbb
mov
jmp
push
sub
mov
movs
adc
aad
repz
mov
jmp
xchg
push
push
cmps
mov
(bad)
pop
xchg
mov
dec
push
aaa
cmp
push
mov
cmp
push
loopne
fs
stos
ret
(bad)
push
stc
lea
lods
div
out
fsubr
aas
xchg
jae
mov
push
adc
std
out
jns
mov
test
or
jbe
icebp
sub
and
xor
mov
loop
push
je
xor
add
pushf
jae
das
mov
imul
xor
or
pop
push
popa
push
int
mov
xchg
dec
mov
imul
loopne
dec
jmp
and
sbb
inc
test
mov
test
cmp
lods
addr16
xchg
scas
ds
cmp
aas
jbe
outs
fwait
mov
mov
adc
movs
fsubrp
mov
mov
nop
push
loopne
inc
movs
xchg
mov
sbb
sbb
pop
jp
das
int
movs
mov
mov
adc
or
repnz
jmp
out
shl
push
pop
fcmovnb
fstp
mov
xchg
mov
icebp
pop
add
sahf
mov
jle
stc
inc
loope
sahf
or
das
pop
(bad)
jne
or
shl
retf
mov
push
cld
sub
xor
and
lods
outs
xor
daa
push
das
and
loopne
push
jne
iret
ret
push
das
out
dec
rcr
inc
jge
xchg
out
leave
icebp
repnz
pop
add
in
mov
cdq
das
pop
hlt
mov
movs
(bad)
jae
inc
push
add
lahf
retf
fldenv
adc
lahf
aam
mov
pop
dec
push
sub
in
xlat
les
leave
and
jl
or
movs
pushf
and
test
sahf
test
mov
leave
adc
xchg
sbb
and
pop
pop
add
jo
and
dec
cmp
fst
adc
popa
sub
mov
gs
jbe
lods
sbb
fiadd
mov
retf
fld
mov
sbb
out
scas
cld
sub
and
adc
push
fisubr
mov
mov
and
mov
iret
mov
ret
rcr
and
cmps
inc
mov
jns
sub
pop
jnp
jmp
neg
test
retf
fimul
push
ss
test
rcl
mov
mov
(bad)
aad
inc
jg
cmp
adc
adc
xchg
dec
xor
ins
pusha
mov
xchg
int3
add
inc
loope
test
mov
cmp
lea
mov
fld
mov
pop
jmp
pusha
in
jb
rcr
test
rcr
push
cmps
push
and
xor
pop
outs
pop
retf
mov
inc
daa
div
sbb
aaa
mov
(bad)
cmps
push
add
in
or
push
push
int3
fcom
pop
movs
mov
add
mov
outs
retf
jno
push
xor
or
pop
mov
add
cmps
mov
dec
xor
stc
cmp
push
xchg
jle
lods
mov
inc
aaa
ja
push
pop
adc
inc
ret
jmp
push
adc
out
push
lock
mov
mov
int
pop
lods
xchg
jno
mov
popf
rcr
xchg
pushf
(bad)
cdq
mov
adc
or
add
pop
daa
pop
mov
es
xchg
dec
jle
mov
xchg
mov
loopne
sbb
dec
lods
xchg
iret
clc
sar
mov
xchg
(bad)
jle
inc
daa
dec
mov
pop
ds
sub
ficomp
mov
and
mov
adc
(bad)
clc
js
sbb
pop
xor
adc
adc
dec
inc
frstor
mov
cmp
pop
sbb
(bad)
int
or
outs
ret
pop
lods
add
or
push
data16
jl
cld
retf
enter
cs
ffreep
(bad)
sub
mov
sti
sti
sub
scas
stos
fnsave
fisttp
(bad)
fwait
test
out
push
cmp
add
data16
push
out
push
adc
cs
mov
je
mov
push
inc
xchg
inc
mov
rol
or
ins
xor
pop
pop
add
mov
clc
cmp
(bad)
cmp
outs
xchg
aad
fbld
cli
dec
movs
inc
adc
pop
sub
mov
ror
jo
dec
mov
pop
mov
into
out
mov
xor
fnstsw
div
jp
cmp
data16
mov
aaa
cs
and
popa
jo
int3
push
jno
enter
inc
add
sbb
nop
bound
mov
xchg
dec
and
push
jg
add
sbb
mov
sub
stos
xchg
add
mov
fcomp
retf
es
xor
(bad)
in
xor
sub
or
lods
ja
out
sub
outs
mov
push
hlt
or
cmps
mov
jle
stos
push
test
pop
jmp
mov
shr
les
out
dec
pop
jne
(bad)
in
xlat
jae
inc
retf
cmps
sbb
add
stc
or
daa
pop
mov
retf
out
aam
pop
adc
in
rcl
add
mov
inc
push
cmp
push
mov
fiadd
shl
popa
(bad)
out
pusha
fdiv
xchg
xchg
jbe
rcl
movs
push
inc
cmp
mov
mov
popf
xor
(bad)
lock
(bad)
aad
sahf
xor
jl
cmp
fwait
adc
daa
ds
sbb
dec
mov
and
fstp
shl
push
add
movs
cmp
cmp
jp
bound
jmp
cmp
xchg
or
sub
lea
daa
xchg
lods
fwait
retf
idiv
leave
fsubr
push
stc
mov
hlt
ss
dec
mov
jb
loopne
xchg
push
arpl
aad
ds
or
jae
jge
int
jmp
cs
sub
push
mov
sbb
cmps
cmc
in
xlat
ret
ret
cmps
jb
cmps
out
clc
popf
jp
sbb
mov
not
push
xor
cmp
sbb
in
mov
mov
jbe
adc
call
inc
or
mov
test
pushw
cmp
and
mov
cmp
or
outs
(bad)
adc
ret
addr16
inc
mov
ficom
popf
out
fstp
add
test
lods
cmp
sub
retf
imul
fild
out
popa
fcom
push
adc
imul
outs
jle
sbb
jb
in
xor
fisub
imul
hlt
nop
mov
ins
jmp
xor
inc
scas
sub
pushf
mov
push
fmul
mov
push
lock
mov
stos
and
xor
ins
push
dec
(bad)
fcmovb
sub
hlt
lods
shl
test
or
push
xchg
xlat
aas
inc
push
and
dec
stos
push
clc
dec
and
xchg
mov
aad
ret
outs
and
push
ror
add
cmp
rcr
push
fst
jl
outs
imul
pusha
sbb
push
jmp
xchg
pop
dec
retf
pop
jns
sbb
adc
movs
and
popf
adc
ficomp
mov
push
xchg
cmc
cmp
stc
xor
add
mov
ins
cs
hlt
mov
pop
xchg
jns
xor
jp
call
push
(bad)
stos
pop
repz
push
iret
push
(bad)
mov
neg
mov
mov
mov
inc
repnz
in
push
jl
dec
pop
jno
test
jge
inc
arpl
or
fimul
add
pop
dec
ror
movs
or
not
(bad)
push
mov
adc
pop
aam
out
pop
in
fnstenv
inc
add
rcl
jle
sbb
into
repz
lahf
push
xchg
fcom
xlat
cmps
push
inc
aad
gs
inc
retf
test
rol
mov
xchg
sbb
or
clc
inc
push
das
xchg
mov
inc
fld
dec
movs
mov
movs
ja
xchg
je
jnp
sub
out
xor
data16
mov
xchg
cld
jns
test
jecxz
lahf
or
sub
dec
pop
fadd
mov
psubsb
dec
jmp
out
loop
fsub
scas
cmc
jecxz
int
cmp
mov
xchg
xor
pushf
shl
addr16
mov
or
ds
add
and
xchg
sbb
jne
jmp
push
mov
(bad)
sbb
xchg
cmc
dec
push
jl
js
call
dec
dec
xchg
inc
cmp
ins
cmps
in
js
adc
pop
pushf
ja
sub
xlat
cwde
and
add
xor
xchg
ud0
ins
mov
hlt
jnp
pop
cmps
push
fdiv
(bad)
imul
cs
fist
xchg
int3
sub
fldenv
test
aad
push
in
cmp
je
into
retf
int3
xchg
lea
dec
pushf
fwait
scas
daa
adc
dec
jl
xchg
loop
adc
push
cli
repz
pusha
mov
shr
loopne
out
push
push
(bad)
shr
mov
cdq
sti
popa
int3
xlat
nop
add
icebp
xchg
push
jnp
in
mov
test
outs
inc
scas
test
xchg
adc
aad
sti
mov
loope
scas
sub
es
add
pop
in
popa
push
sbb
(bad)
jmp
test
inc
jb
movs
xor
addr16
or
gs
sbb
xlat
inc
call
xchg
test
outs
cmps
pop
in
push
mov
pop
ins
stos
jb
lods
mov
mov
sbb
ret
sbb
das
popa
hlt
inc
ret
arpl
cmp
cmp
(bad)
loope
test
mov
not
and
inc
sub
cmp
mov
sbb
bound
add
or
mov
mov
dec
or
dec
in
sbb
mov
jo
or
pop
aad
jne
mov
sbb
or
js
cmp
int3
mov
shl
lahf
adc
movs
xchg
mov
in
mov
xchg
cwde
rcr
mov
xchg
mov
mov
aaa
pop
(bad)
ret
ret
call
dec
popa
jge
dec
jbe
mov
test
cmp
sahf
mov
push
dec
sub
jb
jb
(bad)
cdq
inc
xor
sub
mov
add
pushf
adc
ins
xchg
das
int
je
inc
pusha
test
cmp
test
call
inc
xor
fcom
dec
cmp
mov
xchg
inc
mov
call
ins
push
jno
and
int3
test
mov
push
inc
jle
rol
lock
in
xor
das
mov
fdiv
xor
mov
scas
bound
ins
sti
out
adc
lea
sub
mov
fdivr
ja
shl
fcmovne
sbb
push
add
jo
and
call
jnp
mov
jno
mov
dec
and
xor
sub
pop
push
(bad)
push
adc
popa
fst
fcomp
pop
data16
push
or
repnz
aas
push
pusha
push
paddsw
sbb
(bad)
cdq
adc
loope
and
add
hlt
das
stos
mov
xor
or
retf
dec
fstp
jecxz
jno
mov
fstp
add
xchg
(bad)
in
movs
mov
push
out
cli
dec
fimul
push
jbe
rol
test
je
fstp
cmp
nop
push
mov
jb
mov
jmp
data16
rep
out
cmps
adc
cmps
pop
pushf
cmp
rol
cmp
mov
(bad)
mov
(bad)
jg
and
push
enter
jb
dec
clc
xchg
push
inc
enter
les
int3
lock
jb
push
mov
test
(bad)
out
aas
test
jecxz
rcr
xor
ficomp
arpl
packuswb
cmp
dec
push
ins
das
clc
xor
je
add
and
pop
pop
jno
movd
push
es
jmp
dec
or
cmp
int3
cmp
cmp
in
out
movs
jb
lods
push
inc
jne
mov
cdq
dec
sti
sbb
dec
popf
cmp
aam
jl
jg
in
sbb
jne
lea
mov
mov
sub
js
mov
mov
jg
sub
cmps
lahf
cmp
bound
jmp
jge
rcl
inc
dec
ins
mov
pop
push
movs
xor
stc
cmp
sbb
pop
inc
pushf
sbb
mov
ins
imul
jecxz
push
xchg
(bad)
pop
sahf
into
shl
xchg
dec
add
or
pop
add
mov
inc
add
inc
(bad)
arpl
in
stc
cmp
cmps
leave
jmp
push
push
push
ror
mov
repnz
jno
dec
aam
das
inc
lods
push
dec
xchg
push
add
iret
mov
mov
adc
xchg
add
push
adc
xor
leave
and
bound
int3
int3
movs
adc
data16
dec
and
cmp
pop
xchg
jne
inc
and
test
mov
inc
test
dec
shl
sbb
push
xor
out
mov
mov
pusha
daa
cmp
dec
retf
retf
push
add
pushf
jae
jle
sub
mov
call
ss
shl
xor
adc
(bad)
or
xchg
push
dec
push
cdq
daa
jne
xchg
inc
jmp
int
cmp
cmps
sub
dec
std
out
loopne
dec
or
fnstcw
xor
je
lock
adc
aaa
mov
dec
xor
jmp
stc
movs
retf
loope
es
sbb
sar
dec
aad
push
ds
aaa
arpl
sub
sbb
mov
adc
popf
ficom
sbb
hlt
and
mov
xor
outs
bound
pop
and
pop
ds
adc
mov
pop
jg
push
push
jne
jnp
cmps
cs
sub
cli
lea
int3
push
cmc
jl
iret
sbb
mov
out
cwde
pop
ins
rcr
jbe
xchg
mov
xor
add
fistp
cmp
shl
lea
mov
leave
adc
mov
inc
mov
fild
into
pop
fwait
ror
addr16
pop
clc
ror
add
gs
inc
leave
sbb
sub
cmp
out
addr16
adc
xor
mov
push
mov
int
mov
push
shl
popa
out
aas
les
cmc
repz
sahf
mov
and
jg
push
push
mov
push
mov
rcl
sub
out
data16
mov
and
out
cmp
(bad)
lahf
cmps
sub
and
mov
lahf
aaa
xor
pop
ds
ins
adc
mov
or
out
xchg
xor
mov
add
dec
or
or
pop
xor
xchg
jae
and
retf
aaa
nop
std
and
(bad)
out
cli
push
mov
test
sti
cmps
sahf
aas
or
je
(bad)
fild
and
pop
in
dec
loope
je
pop
leave
xor
fimul
dec
(bad)
ins
pop
rcr
cmp
stc
pop
ror
ss
inc
out
lods
arpl
bound
xchg
dec
clc
dec
ror
loop
dec
adc
sahf
ficomp
cmp
cmp
rep
cwde
ret
add
lahf
jmp
pop
jmp
xchg
jo
popa
dec
push
test
iret
jle
popa
mov
cwde
xchg
into
in
movs
in
mov
ins
cmp
sahf
or
dec
sbb
xchg
pop
arpl
popf
mov
popa
xor
and
add
(bad)
cmp
jo
popf
bound
retf
xor
jp
add
xchg
mov
push
cmp
push
or
addr16
(bad)
sub
add
pop
jg
xchg
mov
sbb
jmp
mov
ds
mov
inc
cmp
fcom
pop
(bad)
test
or
xor
stos
mov
and
lds
daa
sub
enter
pop
retf
pusha
je
in
jmp
pop
push
xor
movs
dec
and
iret
int
test
cld
retf
mov
pop
xor
and
je
pop
adc
push
lds
xchg
ss
div
adc
mov
mov
add
xor
and
aas
cmp
pop
lods
xor
inc
(bad)
stos
inc
or
fld
jbe
sbb
(bad)
pop
push
popf
fild
pop
retf
enter
pop
movs
or
pop
aad
pop
leave
in
adc
(bad)
hlt
mov
xchg
fadd
add
fnstsw
inc
test
ins
mov
fs
movs
xchg
mov
rcr
xor
xchg
ins
pop
mov
inc
adc
push
jmp
stc
pushf
sub
cmp
js
inc
mov
jl
pop
outs
div
fnsave
loop
int3
adc
ret
cli
push
(bad)
push
(bad)
lods
and
pop
repz
jbe
fnstenv
mov
push
xlat
pop
inc
(bad)
into
push
popa
test
mov
inc
jge
iret
inc
std
rol
je
xor
inc
push
jecxz
or
lock
mov
mov
out
sub
stos
ret
adc
nop
pop
pop
test
cs
push
xchg
nop
push
sbb
inc
hlt
enter
push
std
and
dec
push
mov
repz
ja
ret
and
push
fmulp
mov
fsub
add
dec
int3
cmp
inc
ds
adc
in
and
les
stc
out
loopne
mov
mov
or
xor
and
ret
leave
neg
stc
aam
inc
ss
push
cld
jne
mov
xchg
outs
sub
dec
rol
stc
out
jnp
and
jmp
xchg
aam
repz
jo
movs
mov
sub
add
mov
jge
or
(bad)
in
into
ficom
loope
es
inc
dec
scas
clc
xchg
push
test
ss
pop
xchg
cld
outs
mov
les
jnp
(bad)
cld
clc
cmps
es
xchg
fwait
push
jg
call
ds
cli
mov
jo
adc
rcl
or
adc
test
xchg
cmp
cmps
dec
push
pop
fistp
adc
xchg
adc
and
dec
sub
not
shl
and
mov
mov
les
dec
fsub
aam
int
xchg
push
mov
xor
xchg
pop
ret
dec
cmc
and
sub
sub
pop
stos
(bad)
scas
or
(bad)
rcr
test
xlat
jbe
xchg
push
xchg
fs
retf
gs
cs
stos
jmp
pushf
fwait
enter
pushf
xlat
jns
pushf
inc
jmp
inc
xchg
and
cmps
leave
mov
jns
dec
sub
xor
pushf
js
xchg
mov
mov
es
outs
cmp
dec
dec
and
sbb
mov
fistp
xor
shl
nop
pop
shl
inc
test
or
cmp
icebp
sbb
ins
cmp
xchg
mov
repnz
clc
dec
mov
(bad)
ss
and
mov
jbe
mov
test
lods
fnsave
test
mov
dec
bound
call
add
pop
pop
sbb
outs
pop
jae
add
dec
mov
fild
dec
pop
push
sub
jns
ffreep
pop
and
pop
sar
mov
in
sbb
outs
pop
adc
(bad)
stc
sahf
xchg
pop
jns
sub
repnz
cmp
adc
mov
sbb
inc
mov
add
sbb
sbb
jbe
pushf
dec
mov
and
and
xchg
lock
and
cmps
loopne
push
adc
xor
stos
popf
lock
sub
add
sub
(bad)
pop
scas
xor
inc
sbb
or
mov
adc
daa
iret
mov
xor
lea
sbb
push
push
dec
jns
aam
mov
mov
push
inc
(bad)
dec
mov
dec
pop
fst
pop
inc
dec
jno
call
out
cdq
mov
xchg
icebp
or
mov
jmp
mul
inc
fldlg2
repz
pusha
cmc
test
add
xor
sbb
sbb
cli
mov
pushf
jg
sub
mov
int
cmc
jae
into
adc
mov
fwait
jge
aam
push
ja
jecxz
mov
push
mov
and
test
sbb
push
mov
rcr
(bad)
addr16
xchg
enter
xchg
call
sbb
es
test
push
dec
jbe
mov
sbb
mov
inc
cld
mov
xor
test
fsub
int3
je
cmp
dec
push
dec
daa
mov
jae
dec
loop
in
adc
jnp
or
sub
outs
xchg
ja
scas
mov
stos
jmp
push
enter
cwde
test
rep
icebp
sti
ins
dec
xor
pop
inc
xchg
push
push
pop
sar
and
sub
inc
repz
ins
fwait
hlt
int
sar
popf
arpl
into
dec
in
sbb
sub
loope
ins
jmp
cmp
inc
lock
xchg
mov
ret
icebp
mov
mov
inc
pop
icebp
mov
push
jge
pop
or
std
cmp
push
fcom
sti
bound
cld
add
fbld
stos
aas
sbb
dec
push
loope
mov
mov
inc
sub
rol
sahf
neg
mov
sub
push
jle
or
lods
imul
jmp
jle
pop
loope
lea
call
xchg
pushf
dec
pop
cli
jbe
sub
into
xor
sti
cmp
xchg
mov
xor
fist
out
or
jge
fimul
js
test
mov
lock
or
push
(bad)
push
mov
std
add
mov
xchg
jecxz
fild
mov
pop
shl
sbb
and
scas
test
mov
sub
lock
cli
mov
sub
retf
sti
and
test
jnp
push
jl
neg
adc
out
popf
stos
mov
push
das
hlt
pop
and
xchg
mov
add
jae
dec
loopne
xchg
cmc
call
lock
pop
xchg
jg
inc
out
adc
(bad)
aam
pop
xor
test
sbb
fstcw
cli
xchg
retf
dec
add
dec
or
stos
outs
or
shl
add
test
aad
pop
sbb
fild
fcmove
(bad)
dec
dec
mov
dec
pushf
es
push
in
mov
and
repz
scas
add
daa
xor
jbe
xchg
inc
js
ja
sub
js
add
mov
adc
xlat
inc
jecxz
pop
test
adc
push
bswap
cmp
pop
pop
cmp
sub
pop
cdq
jg
inc
loopne
outs
jae
mov
sbb
(bad)
fcmovne
dec
aad
ins
div
lods
xor
add
cmps
shrd
shl
xchg
or
pop
(bad)
retf
sub
mov
sti
inc
xchg
lods
xor
loope
test
mov
in
arpl
push
and
lock
jno
loopne
mov
xchg
clc
xchg
jge
add
arpl
xchg
add
es
call
jge
es
dec
stc
imul
shl
sbb
movs
sub
neg
cli
push
inc
int
out
xor
cmps
dec
mov
in
mov
xor
inc
mov
or
and
clc
je
call
pushf
das
stos
call
inc
test
jbe
mov
imul
cmp
cmp
repnz
fdiv
jbe
adc
jp
dec
ror
data16
bound
stc
cmp
mov
and
sub
(bad)
push
out
lds
pop
out
pop
mov
jns
scas
pop
mov
xchg
std
lock
push
gs
das
sub
or
mov
mov
adc
dec
xchg
sub
inc
mov
pop
mov
cmp
in
jmp
in
je
into
shl
sbb
scas
cmps
fld
add
inc
sbb
jmp
sbb
mov
fild
mov
mov
sbb
cmp
xchg
cmc
mov
out
or
and
call
lock
je
pop
sbb
adc
mov
mov
scas
ret
cmp
dec
dec
imul
mov
in
push
push
mov
mov
out
jb
xchg
mov
mov
or
mov
je
or
ss
loope
xchg
ja
pop
inc
sbb
sub
jmp
adc
mov
add
cwde
into
add
add
mov
pusha
xor
cmp
inc
xchg
inc
mov
sbb
shl
cmp
fwait
adc
cmp
cmps
inc
out
retf
jl
push
sub
mov
xor
xchg
or
fbstp
xchg
jmp
cmp
bound
repz
pusha
dec
fild
inc
jnp
rcr
sbb
popa
xchg
arpl
pop
mov
(bad)
push
addr16
jle
movs
xchg
inc
mov
paddd
scas
jle
jnp
movs
adc
lds
test
outs
dec
mov
test
ins
lahf
pop
fxch
int
and
push
adc
pinsrw
xlat
jns
mov
push
sub
adc
mov
ins
xor
mov
ja
push
sub
inc
jbe
lea
mov
icebp
cdq
mov
mov
mov
test
mov
xchg
lahf
ss
in
mov
sub
mov
mov
xor
dec
sahf
mov
dec
stos
ret
test
xchg
sbb
fs
or
jp
sub
or
rol
ins
cmp
and
pusha
movs
mov
mov
mov
or
aaa
pop
(bad)
ja
sbb
cdq
push
je
test
mov
mov
adc
rcr
jbe
rcr
ss
ret
mov
dec
add
ss
js
movs
out
fisttp
add
dec
mov
dec
adc
sbb
xchg
cs
pop
ins
cmp
shr
sub
sbb
(bad)
aam
(bad)
mov
lds
outs
cld
ja
sbb
jle
imul
xor
mov
mov
or
mov
(bad)
(bad)
or
in
test
mov
fs
xor
cmp
inc
arpl
sahf
es
(bad)
fisubr
inc
in
pop
dec
or
add
jmp
mov
in
inc
adc
scas
jmp
dec
add
repnz
enter
scas
mov
xchg
shl
xchg
xchg
cmp
push
xchg
add
in
push
xchg
inc
and
jg
xor
dec
pop
mov
mov
jne
cmp
in
xchg
adc
sar
sbb
dec
push
scas
out
or
jg
sbb
sub
fnstsw
pop
popa
pusha
xor
iret
loopne
jae
mov
pop
ror
mov
sub
ds
fadd
sub
sub
shr
xchg
lds
test
repz
jne
rol
mov
pop
cmp
daa
retf
cmp
(bad)
call
jae
push
and
fdiv
xor
mov
or
pop
out
xchg
sbb
ror
data16
outs
pop
inc
cmp
loop
cmp
add
and
in
cmp
int
or
aam
mov
xor
bound
xchg
inc
sub
inc
pop
repnz
mov
call
repnz
mov
aad
xor
cs
rol
add
leave
aam
(bad)
dec
movs
mov
mov
mov
out
test
sbb
daa
ins
mov
je
pushf
cmp
sbb
xchg
jl
(bad)
pop
xlat
dec
pop
test
jecxz
adc
push
push
int3
sar
fmul
pop
retf
cwde
ss
mov
bound
in
fwait
mov
dec
mov
imul
arpl
lds
pop
cmp
jo
fadd
push
pop
push
call
dec
stos
push
or
inc
push
outs
iret
push
xor
add
cs
mov
sbb
and
xchg
je
xor
retf
lahf
movs
cmps
fild
scas
mov
lods
lods
or
fdiv
mov
ror
scas
fcomip
in
les
mov
pop
xchg
jge
xor
pop
ins
lock
fbstp
adc
jmp
and
pop
sub
lds
cld
int
add
mov
pop
loop
in
jae
push
(bad)
mul
jmp
(bad)
out
sub
cmp
push
or
fiadd
stc
add
push
out
cmp
rcr
loopne
loope
rcr
cmp
lock
std
push
mov
ss
test
jno
and
aad
mov
mov
int3
push
xor
sbb
sub
lds
mov
xchg
xchg
lahf
in
into
call
jecxz
pop
inc
ins
jnp
fs
popf
xlat
shr
shl
jo
sbb
jg
push
jg
xchg
iret
push
mov
sbb
xchg
jno
cmp
add
adc
lahf
ins
pop
xchg
clc
push
test
cmps
add
or
out
ss
dec
mov
xor
mov
and
or
lds
mov
push
or
ja
inc
and
ret
pop
aas
cmp
mov
lods
fdiv
cmp
sub
mov
sbb
cmp
push
dec
lds
jbe
cmp
xor
das
test
mov
or
pop
ss
pop
mov
dec
pop
mov
ret
lahf
ret
jmp
pop
iret
stc
fistp
stos
pop
or
pop
sbb
in
iret
movs
push
loope
pushf
fs
mov
jo
add
call
les
mov
cdq
dec
mov
and
test
xlat
into
out
lea
mov
das
aaa
xchg
pop
cs
int3
xchg
js
push
push
into
test
mov
icebp
dec
push
sar
inc
jo
sti
jle
xchg
xchg
packuswb
int3
ins
fnstenv
stc
in
sbb
or
pushf
push
test
loopne
jge
xor
mov
jmp
ins
inc
ja
pushf
dec
ret
sbb
pushf
leave
mov
jmp
daa
ret
mov
push
les
mov
test
cwde
sbb
cmp
aad
xchg
pop
pop
mov
aam
ins
sbb
xchg
cmp
imul
and
std
test
jmp
mov
in
fcomp
arpl
pop
(bad)
popa
mov
or
mov
rol
mov
ret
test
out
(bad)
scas
dec
lods
in
loope
call
mov
push
sbb
and
(bad)
mov
push
cdq
mov
cli
ja
bound
or
cld
jb
in
in
mov
das
xor
cmp
movs
sahf
pop
inc
cdq
push
sbb
aad
adc
repz
test
cmp
push
fmul
add
lea
lds
movhps
adc
cmc
test
imul
loopne
pop
mov
cmp
sbb
xor
dec
sub
inc
aas
mov
shl
es
hlt
cdq
scas
test
out
adc
cmp
dec
loopne
sbb
mov
pop
xchg
sbb
test
call
pop
jnp
clc
xchg
xor
lock
cmps
sbb
push
bound
mov
push
jns
inc
retf
in
push
mov
les
inc
ret
dec
pusha
shl
daa
push
xchg
pop
and
repz
xor
sbb
xchg
into
mov
test
in
sbb
stc
xchg
bound
dec
pop
ss
dec
shl
or
scas
ret
jae
sub
adc
stc
mov
and
lods
xchg
outs
add
loope
xchg
gs
mov
gs
shl
imul
rcl
push
shr
or
ficomp
push
repnz
enter
sahf
xchg
mov
xor
dec
ja
add
test
rcl
inc
out
and
push
mov
dec
pop
cmp
push
pushf
mov
and
jmp
pop
(bad)
frstor
sub
push
or
(bad)
jle
mov
mov
das
mov
fiadd
sbb
ror
out
div
push
mov
or
fs
mov
mov
sahf
jp
daa
push
mov
mov
outs
jno
pop
test
cmp
std
lds
and
movs
mov
shl
mov
cmp
in
mov
dec
add
xchg
push
sub
retf
jae
dec
loop
mov
lods
cld
pop
pop
xchg
lds
lods
and
mov
pop
jp
cdq
xor
ja
(bad)
xchg
cmp
or
bound
call
cmp
add
out
aam
push
idiv
add
sub
(bad)
test
push
adc
add
loop
test
xchg
rol
adc
sahf
mov
sbb
or
mov
pop
aam
cmp
add
xchg
aad
sub
(bad)
mov
out
repnz
mov
xor
stos
pop
adc
pop
scas
imul
in
shl
xlat
lahf
or
pop
pop
jg
mov
cmp
inc
js
pop
js
and
xor
lock
xor
dec
adc
cdq
stos
(bad)
pushf
es
imul
stos
mov
add
cli
outs
fld
lds
dec
sub
scas
mov
or
in
and
cmps
xchg
not
xor
mov
mov
ins
jecxz
cmp
movs
mov
call
adc
and
and
and
adc
push
dec
fs
ret
in
cmp
sub
inc
mov
(bad)
cmp
stos
mov
jne
mov
push
in
cli
movs
mov
push
retf
arpl
outs
mov
add
jg
fnstcw
adc
addr16
pop
push
dec
jae
rol
stc
pop
add
outs
fsubrp
pop
lds
stc
mov
inc
xor
addr16
das
iret
mov
cmp
push
mov
rcr
xor
in
push
or
cmp
mov
add
mov
sub
cs
adc
test
shr
(bad)
mov
xor
xchg
lock
xor
push
aam
mov
jmp
scas
jae
sub
jp
test
sbb
inc
and
xor
retf
mov
pop
fucomi
inc
sub
push
imul
pop
xor
(bad)
pminsw
rol
lods
mov
mov
push
jecxz
in
xor
ret
mov
jmp
mov
adc
gs
xor
jp
sub
jmp
jae
mov
stos
cmps
xchg
movs
imul
jo
in
push
sub
mov
(bad)
aaa
adc
xchg
jmp
lods
mov
mov
push
mul
int
adc
cwde
call
scas
cdq
ds
xlat
inc
das
inc
mov
fnsave
sub
sub
mov
je
add
pop
xchg
adc
xchg
stos
fcmovnbe
and
mov
adc
xor
adc
fnstenv
(bad)
cld
loope
lock
mov
ret
sub
(bad)
movs
dec
add
daa
push
test
mul
out
das
ror
bound
dec
or
add
cdq
mov
dec
sub
dec
push
in
xchg
add
aas
iret
push
mov
lods
add
mov
push
or
stos
dec
adc
cli
push
mov
push
push
jne
bound
sub
sub
jecxz
ja
out
sbb
mov
mov
or
fidivr
add
mov
call
(bad)
push
add
pop
mov
repnz
jnp
cdq
scas
bound
les
lods
into
xor
test
nop
xchg
js
or
mov
mov
es
nop
dec
fwait
into
sub
stos
jmp
sbb
mov
and
fisttp
call
rcl
xchg
ror
mov
mov
enter
pop
or
ftst
jmp
stos
mov
fdiv
adc
and
in
dec
jg
call
in
inc
repnz
and
iret
mov
and
pop
inc
cwde
push
ret
pop
jno
xor
adc
les
pop
mov
ret
add
fiadd
outs
sub
test
rcr
sbb
jmp
and
sub
adc
je
ins
stc
repz
mov
adc
ins
push
es
mov
pop
out
pop
dec
xchg
lds
fidivr
jno
mov
(bad)
iret
sub
pop
xor
ds
and
ss
and
retf
loop
jl
pop
mov
mov
cmp
push
cmps
prefetcht0
mov
mov
pop
pop
jnp
xlat
inc
enter
jmp
or
push
int
mov
imul
cmp
ss
ret
call
and
adc
push
push
and
add
xor
cld
mov
jmp
sbb
out
dec
sub
push
gs
arpl
xor
ror
stos
mov
ss
push
rol
es
sbb
mov
movs
xor
scas
outs
retf
jnp
and
pop
push
inc
jge
xchg
mov
imul
or
imul
test
xchg
or
and
push
and
push
add
add
cs
inc
cmp
in
ins
or
mov
xor
iret
mov
leave
add
cmp
jmp
xchg
rcr
dec
jae
pop
daa
imul
das
mov
mov
dec
mov
jg
pop
pop
imul
mov
push
sub
in
push
test
ror
hlt
test
lods
fxch
cwde
jb
in
out
push
fild
in
mov
ret
mov
jmp
add
cmp
jne
mov
lahf
or
xchg
mov
pop
fst
dec
sub
push
test
push
jle
mov
hlt
xchg
mov
pop
mov
adc
daa
cwde
fild
or
pop
jbe
xchg
data16
push
mov
fdivr
jo
adc
mov
fadd
jbe
jbe
xlat
mov
mov
test
into
daa
or
out
retf
dec
fdivr
fadd
or
fstp
jp
dec
mov
mov
jmp
mov
popa
dec
ins
xor
push
xor
cld
inc
in
sbb
dec
cmps
add
mov
push
pop
pop
data16
adc
leave
sub
fcomp
dec
call
pop
(bad)
push
movhps
or
cs
enter
cmp
push
and
xor
into
pop
out
call
jle
cmp
jbe
cli
or
scas
inc
xchg
mov
hlt
nop
jl
add
and
dec
or
jecxz
scas
cmp
pop
push
scas
call
in
push
out
std
jle
daa
pop
mov
bound
add
les
and
adc
clc
cmp
xchg
test
and
repz
fstp
out
inc
mov
ja
ins
lea
fdiv
jg
clc
mov
jg
cli
xchg
(bad)
or
(bad)
pop
pushf
sub
push
inc
lds
jbe
pop
mov
cmp
jmp
sbb
arpl
xor
xchg
neg
jns
mov
call
stos
bound
fild
pop
cs
scas
dec
rcl
sub
gs
frstor
test
mov
mov
add
cli
repnz
xor
fistp
push
sbb
fwait
mov
retf
lea
test
or
setl
repnz
imul
ret
fdiv
or
lods
inc
jmp
mov
cs
and
mov
popa
mov
das
cld
jge
push
push
xor
xchg
mov
inc
nop
dec
and
movs
stos
stos
sub
adc
out
push
or
loop
sub
push
jns
sbb
scas
fs
adc
pop
pushf
rol
and
sub
pusha
adc
fdivr
jl
add
(bad)
pop
sub
cmc
fwait
or
xchg
xchg
mov
loopne
cdq
add
inc
imul
jmp
pop
mov
adc
mov
aaa
pushf
mov
stos
jp
pusha
sub
les
lods
push
pop
cmp
jbe
clc
sbb
jmp
push
mov
jge
jl
test
out
mov
cmp
outs
in
mov
jno
lock
sub
xchg
or
gs
or
test
fmul
dec
lods
loope
mov
vmaxps
pop
add
xchg
and
jl
lods
mov
in
dec
lds
imul
pushf
dec
pusha
dec
xchg
ins
cmp
(bad)
(bad)
lock
imul
call
mov
cdq
jns
inc
push
fnstcw
das
cmp
cwde
pop
xchg
jle
shl
cs
lahf
xchg
popa
mov
dec
call
xchg
add
xchg
cld
inc
movs
inc
hlt
ror
xor
cmps
hlt
mov
fsub
jecxz
sub
xchg
(bad)
xchg
loop
xchg
pop
xor
mov
lods
cwde
add
add
enter
mov
popf
dec
pop
push
xlat
repz
jnp
add
add
das
call
sub
cwde
or
jecxz
ins
push
dec
xchg
in
int
movs
int3
cmps
(bad)
adc
pop
xchg
xor
mov
cld
jno
loop
stc
or
shl
cmp
cdq
mov
bound
mov
or
push
dec
inc
stos
(bad)
dec
sub
scas
pop
mov
js
cmp
dec
clc
sti
cmp
pushf
sbb
int3
inc
pushf
call
add
mov
jl
mov
sub
mov
ret
pop
fsubr
enter
push
mov
into
add
pop
retf
(bad)
ffreep
cwde
cmp
inc
psubq
daa
pop
jge
in
icebp
ja
mov
adc
sub
mov
xor
adc
dec
repz
pop
adc
cmp
cmc
out
xchg
jnp
push
cmp
push
lahf
mov
and
shr
xor
cld
cdq
push
mov
xchg
aam
les
loope
sub
jo
pop
add
dec
ret
and
and
loopne
inc
jp
pop
push
lods
rol
dec
jmp
mov
pop
pop
pop
test
xor
aaa
pop
or
sbb
ret
cld
scas
push
jno
mov
mov
pusha
movs
cmp
mov
and
jno
sub
mov
test
adc
sti
dec
nop
movs
pop
ficom
inc
out
ds
ss
outs
push
pop
add
out
add
sbb
jg
sub
imul
adc
jmp
aas
hlt
sbb
cwde
add
xchg
cwde
out
xchg
in
enter
hlt
or
mov
jb
pushf
not
into
(bad)
fild
dec
cdq
inc
repnz
sub
in
aad
aad
shl
pop
and
jo
fldcw
lahf
adc
inc
push
dec
push
jle
push
(bad)
mov
icebp
xchg
cmp
push
and
(bad)
sub
fisttp
dec
inc
add
arpl
mov
shl
dec
xchg
or
pop
mov
mov
pop
jnp
and
push
ds
cmp
sbb
dec
sub
sub
inc
lods
adc
sub
scas
test
jae
jno
mov
int3
push
mov
sahf
and
sub
(bad)
call
imul
loopne
ror
cmps
mov
cli
or
push
cli
xchg
loop
test
and
mov
sbb
push
in
and
shr
shr
fbld
pop
data16
cld
xor
loop
ins
mov
xchg
mov
in
and
test
hlt
or
out
jge
out
loop
hlt
dec
adc
adc
clc
or
or
xor
push
test
shl
cld
js
cmp
inc
inc
into
gs
pop
repnz
dec
xor
into
mov
fstp
or
std
mov
and
aad
or
loope
mov
sbb
cmp
hlt
aaa
cmp
cmp
(bad)
fwait
cs
ficom
ins
dec
out
mov
add
cs
loopne
jle
jae
jmp
xchg
inc
mov
mov
jns
jmp
sbb
xor
cmps
clc
mov
or
push
out
mov
xchg
mov
sub
(bad)
jmp
mov
loope
inc
jmp
ds
imul
pop
mov
ins
mov
jl
scas
push
mov
xor
in
cmp
(bad)
or
jno
mov
mov
in
cld
std
aaa
lahf
lods
(bad)
rol
in
cmps
jns
shl
movs
cmc
or
mov
scas
sub
jb
test
cli
in
imul
iret
ss
jo
in
dec
jns
adc
(bad)
or
push
jecxz
adc
dec
jne
or
ss
dec
je
das
repnz
out
imul
cmps
movs
in
clc
cmp
(bad)
fmul
stos
sbb
add
cmps
mov
fld
add
rcl
in
jecxz
cld
adc
mov
aaa
idiv
jmp
call
adc
add
sub
pop
int
mov
push
adc
mov
xlat
sbb
das
stos
mov
fbld
pop
clc
mov
fcmovbe
jl
or
pop
ins
nop
cmps
mov
sbb
sub
in
inc
lds
shr
inc
mov
inc
ja
or
sbb
pop
adc
push
nop
cs
es
and
leave
cmp
mov
ret
and
mov
mov
retf
shl
xchg
pop
imul
mov
mov
in
add
bound
xor
and
(bad)
push
add
call
dec
sub
ds
clc
fisubr
aaa
push
pop
push
aam
pop
nop
cdq
ret
pop
mov
cs
popa
sbb
jbe
push
lods
enter
sub
lods
mov
xchg
loop
fwait
aaa
sub
mov
addr16
mov
(bad)
jo
aad
aad
test
xlat
hlt
inc
loopne
pop
mov
cwde
clc
repz
(bad)
(bad)
jae
xchg
cmp
loope
into
in
pop
daa
and
int
mov
dec
xchg
pop
mov
std
enter
xor
and
sbb
and
add
outs
scas
sub
add
ins
hlt
dec
enter
jnp
push
adc
xchg
bound
xchg
rcr
rol
xchg
push
popa
sub
int3
popf
fidiv
(bad)
test
sub
fadd
sbb
push
hlt
std
dec
adc
in
ins
xor
jp
xor
fcomi
adc
jl
repz
dec
mov
and
push
fidivr
clc
loope
push
stos
loop
inc
in
xchg
js
xchg
xchg
retf
rsqrtps
mov
les
ficom
loope
stos
mov
popa
mov
add
jg
push
or
push
xchg
test
ins
xchg
sbb
inc
cmps
cwde
imul
xchg
lods
inc
dec
and
ja
mov
inc
mov
dec
mov
or
add
inc
out
pop
sub
mov
sub
pop
push
call
mov
out
test
jmp
bound
mov
mov
movs
stc
scas
shr
fld
out
inc
inc
iret
arpl
mov
jmp
lods
dec
call
cwde
xor
(bad)
fild
daa
pop
pop
(bad)
rcl
outs
ja
jae
(bad)
rsqrtps
add
mov
aas
mov
push
pop
and
sub
iret
pusha
movs
mov
or
fsub
out
aad
icebp
push
push
daa
cdq
mov
mov
bound
dec
aaa
in
sti
or
jmp
mov
(bad)
inc
lods
shl
fadd
xchg
(bad)
xchg
cmp
mov
sub
movs
push
stc
xor
pop
adc
int
popa
fidivr
mov
jnp
mov
add
or
(bad)
and
popf
add
mov
test
push
jecxz
jne
cmc
out
bound
push
jmp
std
test
xor
std
or
jnp
mov
push
sub
dec
or
nop
(bad)
pop
or
inc
mov
and
scas
arpl
gs
sub
jecxz
jno
and
sbb
add
cmp
(bad)
fsubrp
loopne
mov
dec
mov
scas
cwde
fs
push
int3
add
jmp
inc
movs
iret
retf
mov
mov
out
pop
mov
rcr
out
clc
call
test
mov
shr
push
jo
pop
test
push
sub
adc
lds
mov
xor
in
pop
jecxz
aam
(bad)
loop
fs
std
in
test
push
add
stos
and
leave
mov
bound
adc
dec
in
test
sbb
mov
mov
je
jae
ret
call
push
jb
pop
je
(bad)
sbb
pop
add
clc
rcl
(bad)
xchg
call
inc
adc
add
retf
ret
int
sbb
(bad)
mov
mov
mov
nop
cmps
in
fs
(bad)
neg
cli
and
or
mov
ins
es
int3
ror
scas
sbb
dec
push
xchg
ret
adc
ficomp
push
lahf
ret
mov
ins
lods
stos
das
jp
sub
imul
sub
sub
or
(bad)
fiadd
add
dec
add
push
jbe
fist
stos
mov
mov
jmp
mov
je
adc
mov
mov
fstp
inc
push
pushf
jbe
mov
xchg
cld
push
sub
sub
mov
inc
call
xor
aam
jne
mov
fucomip
mov
leave
push
stos
or
scas
bnd
mov
pop
repz
int
addr16
pminsw
icebp
add
mov
xor
pop
sub
lock
jmp
lds
pop
or
clc
aaa
or
jae
push
outs
mov
cwde
nop
jnp
dec
out
pushf
pop
mov
iret
cs
adc
stos
les
ds
sbb
or
lahf
dec
push
sbb
mov
dec
add
adc
js
sub
pusha
jle
out
jns
fsubr
(bad)
and
push
sub
rcl
and
pop
scas
retf
jge
cmps
sub
mov
xor
mov
pop
gs
sti
mov
jne
xor
cmp
mov
lea
jb
fld1
fbstp
sti
popa
scas
xchg
ror
ins
mov
sub
icebp
xchg
jo
sub
lods
and
popa
xchg
push
pushf
xchg
xchg
mov
xor
cmps
pop
rcl
call
inc
movs
jl
xchg
stos
call
push
xor
jmp
aam
es
(bad)
jmp
add
outs
out
mov
lds
cmc
dec
fdiv
movs
jmp
stc
jae
xor
gs
shl
jmp
cmp
or
iret
adc
je
or
outs
push
inc
lock
dec
lds
stc
xor
stc
hlt
out
rcl
daa
inc
adc
lea
or
addr16
std
sub
fsub
push
ins
fstp
(bad)
jmp
dec
push
int
lahf
push
pop
retf
mov
cs
xor
mov
daa
xlat
mul
fs
out
rcl
sbb
stos
mov
and
add
jb
inc
adc
ins
or
and
cli
aad
dec
cmp
rcl
or
dec
inc
mov
mov
mov
and
enter
and
jbe
adc
repnz
rcl
or
dec
shl
std
mov
and
iret
jnp
leave
and
mov
push
add
sub
es
std
mov
mov
mov
arpl
pop
(bad)
cli
sti
leave
jne
xchg
sbb
icebp
fisubr
push
imul
add
fstp
push
jge
jp
add
sbb
lock
mov
and
stos
into
movs
clc
push
cmp
adc
and
mov
retf
jp
jge
les
stos
sbb
cmp
push
xchg
dec
lea
les
xchg
clc
enter
test
push
add
stos
outs
test
and
retf
pop
add
test
inc
inc
retf
ficomp
ficom
xor
mov
xchg
out
(bad)
sti
xor
sahf
cld
inc
repnz
adc
aam
(bad)
xchg
and
xchg
addr16
scas
mov
sub
mov
cdq
inc
jecxz
ins
pop
cmc
adc
mov
cdq
data16
jmp
cmp
outs
or
inc
ds
push
dec
loopne
loopne
mov
pop
fs
xchg
ret
add
mov
(bad)
mov
sar
pusha
stos
sub
cmp
pushf
fisub
aaa
push
adc
cmp
test
pop
pop
mov
xchg
sar
sub
stos
xor
xor
pop
jle
lds
test
sub
add
xlat
adc
pop
inc
in
xor
adc
lods
cmp
mov
jp
xor
mov
fisub
or
data16
rol
scas
push
jmp
jne
pop
push
int3
xchg
fdivr
repnz
cmps
in
pop
adc
sub
jmp
aad
fcmove
in
ror
rcl
popa
adc
enter
cld
out
daa
or
jmp
(bad)
sub
(bad)
(bad)
sub
(bad)
int3
add
test
xchg
ins
dec
add
jecxz
inc
add
xchg
inc
jp
pop
dec
inc
push
jl
jae
jo
int
dec
jae
inc
ror
ins
lahf
adc
jge
cmp
add
mov
xchg
bound
xchg
push
ret
js
hlt
push
rcl
xor
adc
xor
sub
mov
mov
dec
scas
cmp
and
push
nop
mov
jmp
mov
sbb
xchg
sbb
ret
fstp
(bad)
in
dec
call
push
dec
aas
jle
test
add
push
mov
in
xchg
into
shl
ror
dec
mov
pop
loope
push
push
rol
or
test
in
sbb
jo
add
out
lahf
jnp
and
mov
mov
jmp
movs
inc
ffreep
fisttp
cs
xor
inc
or
ins
(bad)
sub
jl
(bad)
aas
rol
mov
cmp
sub
push
cs
clc
(bad)
and
or
pop
imul
data16
mov
mov
jo
pop
push
ret
test
or
fs
lahf
jecxz
repz
pop
stos
xor
xchg
sti
(bad)
mov
int
aad
adc
xchg
test
xor
and
sar
or
sti
fs
fnsave
dec
sbb
out
xchg
test
add
enter
jge
pop
rcl
cwde
pop
stos
mov
lods
push
clc
and
inc
pop
mov
loope
bound
cli
mov
jp
call
repz
(bad)
hlt
fisub
push
inc
fdiv
or
ds
pop
add
push
popa
call
sub
rcl
jmp
mov
fld
fisttp
stos
inc
stos
and
xchg
sbb
mov
test
cmp
call
jbe
cmp
aam
popa
lods
xchg
into
mov
iret
scas
jb
leave
sbb
lods
ja
and
mov
add
bound
add
icebp
add
call
loopne
pop
movs
or
mov
adc
xchg
cmps
jae
dec
mov
outs
mov
je
jl
lods
sahf
ins
xchg
inc
dec
sbb
adc
shr
sbb
stos
cmp
pusha
mov
mov
arpl
repnz
jo
push
push
into
imul
jbe
push
scas
mov
sub
pop
xchg
lds
out
add
fbstp
(bad)
mov
das
xor
js
jns
and
push
fdiv
fst
test
cmp
fmul
pop
popa
shl
aad
ins
xlat
or
adc
inc
mov
dec
mov
or
cmc
xchg
shl
ja
push
jl
sar
lar
ds
and
xor
push
and
lds
and
(bad)
cmp
or
ss
into
jns
addr16
pop
dec
or
(bad)
stc
(bad)
enter
jb
pop
iret
xlat
inc
in
ror
sub
fsubr
cwde
cmp
jae
adc
adc
aad
xor
push
aas
pop
mov
bound
mov
ffree
mov
push
adc
stc
xor
repz
jnp
sar
push
data16
outs
push
(bad)
and
jp
xor
push
jns
fimul
fninit
push
jnp
push
jnp
cmp
pop
xchg
clc
pop
stos
jp
push
push
pop
mov
arpl
xchg
mov
or
pop
add
jno
xchg
jns
imul
enter
adc
cs
dec
mov
ins
mov
mov
rcl
imul
jne
(bad)
call
fcomp
inc
push
sbb
mov
into
sbb
ss
sub
fld
mov
mov
xor
pop
mov
mov
call
xchg
mov
mov
ds
fsubrp
shl
iret
inc
xor
leave
repnz
or
add
fsubr
pop
add
ins
mov
xor
outs
loop
push
mov
jecxz
inc
das
lea
call
es
push
in
jnp
inc
enter
fist
outs
outs
mov
retf
nop
stos
push
int3
fsubp
inc
dec
(bad)
sbb
call
mov
scas
and
mov
jl
imul
mov
stos
push
xlat
cld
dec
sub
imul
xor
ss
mov
imul
mov
xchg
fcmovnu
sub
push
rcr
pushf
(bad)
push
adc
sub
pushf
and
push
lds
xchg
out
fisttp
int
xor
push
xchg
push
add
es
aas
(bad)
loope
(bad)
jecxz
sbb
jl
(bad)
outs
mov
sti
call
idiv
pop
test
rcl
outs
cmps
xchg
aad
xchg
mov
(bad)
(bad)
sbb
and
sbb
int
imul
lock
iret
or
jno
call
imul
cli
cmp
into
int3
lock
cmp
cmp
mov
adc
push
sub
jb
xchg
and
cmp
or
dec
in
test
repnz
cmp
push
adc
(bad)
inc
add
add
pop
adc
mov
jnp
jmp
scas
push
pop
pop
pop
vandps
inc
xor
jns
ucomiss
cmps
ret
adc
jecxz
or
popf
cmps
fldcw
ror
push
inc
cmp
jae
inc
shl
pop
aas
push
cld
popf
retf
mov
and
mov
fcomp
mov
pushf
sbb
dec
out
mov
mov
push
out
addr16
mov
adc
xchg
and
pop
push
pop
sbb
dec
inc
(bad)
inc
jg
test
ins
adc
jnp
call
test
mov
js
(bad)
mov
cmp
aad
push
jmp
xlat
mov
and
inc
popf
je
dec
inc
mov
stos
dec
inc
cmps
push
xchg
mov
mov
rcl
mov
jecxz
aas
dec
pusha
mov
ds
movs
test
rcl
les
sbb
repz
aaa
mov
leave
lea
mov
sub
fnclex
xor
retf
fidiv
addr16
inc
adc
add
mov
adc
jo
gs
pop
mov
add
ins
pop
pop
pop
sub
or
lahf
jb
nop
xchg
test
(bad)
mov
fnstsw
bswap
bound
dec
retf
jle
test
cwde
pusha
xor
pop
pushfw
popa
xchg
imul
add
jmp
lock
cs
ror
fdecstp
sub
or
push
push
xlat
pop
lods
cmp
sbb
inc
jbe
shl
xor
repz
jmp
and
(bad)
test
jnp
(bad)
out
cmps
xchg
mov
iret
not
sti
cdq
addr16
inc
mov
jl
add
in
push
and
inc
xchg
mov
(bad)
adc
push
or
fisttp
mov
xlat
stc
mov
mov
ss
or
adc
push
fnstcw
(bad)
loope
or
cdq
add
jge
mov
adc
fisub
inc
rcr
inc
lods
inc
iret
ficom
int
cmp
fnstcw
daa
dec
in
nop
test
xchg
loopne
dec
sub
mov
push
sbb
jp
cmp
retf
pusha
xchg
test
pop
out
cmps
cs
in
rcl
xchg
imul
cmps
cmp
inc
adc
sti
cmp
aaa
sbb
add
icebp
sbb
add
leave
sbb
xchg
outs
mov
clc
aas
inc
mov
pop
int3
jge
dec
mov
movs
pop
pop
mov
jb
mov
pop
adc
mov
mov
dec
and
jmp
clc
xchg
cmp
data16
stc
mov
or
and
mov
pop
and
cmps
add
mov
xchg
test
cli
arpl
popa
enter
adc
or
retf
push
(bad)
fld
pop
push
mov
add
int
enter
in
cmp
xchg
pusha
stos
fbld
dec
and
pushf
call
stc
ss
mov
cmpxchg
aad
push
lods
cmc
xchg
lock
ins
jge
aaa
jns
pushf
outs
ds
xchg
shr
and
call
or
es
je
inc
movs
gs
in
fidiv
sub
shl
lods
adc
mov
(bad)
inc
jnp
icebp
and
mov
inc
push
and
or
fnstenv
daa
enter
adc
mov
xchg
pop
inc
add
inc
out
mov
xchg
out
push
fisub
fdiv
inc
pushf
or
pop
fisubr
ror
into
jno
arpl
sub
mov
or
dec
(bad)
xchg
retf
push
imul
into
inc
jno
pop
test
xor
sti
sbb
iret
mov
sub
lods
rcl
or
ins
cs
mov
mov
outs
loopne
lock
mov
popf
imul
xchg
adc
pop
arpl
xchg
push
in
dec
sahf
xchg
ja
sti
sti
xor
dec
jae
pusha
(bad)
iret
sbb
and
ret
push
pop
mov
xchg
enter
mov
cld
into
and
cld
push
sub
push
call
mov
and
fcomip
aad
sub
jo
push
push
cmp
aas
xchg
jg
mov
jo
mov
in
inc
iret
lea
mov
pcmpeqd
mov
fdivr
sti
mov
mov
or
test
cld
rol
rcr
call
sub
xchg
outs
dec
data16
out
aad
push
retf
outs
ins
add
cli
mov
cmps
xchg
fsubr
mov
outs
push
mov
push
(bad)
dec
repz
sub
lock
or
xor
adc
imul
setb
or
xchg
jo
arpl
pop
mov
jle
jmp
push
cld
lock
sti
(bad)
cmp
(bad)
sti
jnp
pop
adc
cdq
popaw
popa
(bad)
in
aam
mov
dec
sbb
mov
stc
ins
sbb
arpl
mov
mov
cmp
test
ins
mov
movs
mov
or
adc
das
and
mov
sbb
rol
ret
xlat
mov
call
repnz
outs
and
das
inc
pop
(bad)
call
fwait
mov
mov
fmul
gs
stos
lea
mov
inc
cmc
adc
(bad)
(bad)
and
adc
and
pop
dec
ret
pusha
sbb
adc
xchg
xchg
(bad)
mov
rol
jne
jae
sbb
mov
in
outs
xor
ret
shl
ret
movs
cmp
jl
fwait
add
push
mov
add
call
(bad)
jnp
iret
and
aaa
mov
cmp
retf
push
jbe
aam
cmp
sub
cs
hlt
mov
sbb
cwde
icebp
movs
test
push
push
sub
adc
dec
cld
sub
add
imul
ins
push
mov
test
xchg
jmp
in
jge
mov
call
sub
cmc
jbe
sbb
retf
pushf
nop
ins
push
sti
inc
or
sbb
loope
retf
mov
aad
xor
inc
xchg
sbb
inc
push
and
dec
ror
sbb
sbb
add
pop
gs
stc
or
jno
dec
rcr
jle
push
out
add
adc
mov
aaa
and
add
xlat
xlat
pop
xchg
sar
shr
mov
pop
sbb
dec
xchg
(bad)
cmp
dec
clc
mov
ins
sbb
aaa
xchg
shl
ins
dec
pop
adc
scas
sub
cwde
enter
jmp
push
frstor
dec
out
das
call
jl
adc
push
retf
lea
cwde
xor
jmp
pop
push
arpl
retf
mov
out
fst
or
sub
imul
stc
daa
jmp
cmp
xlat
mov
cld
mov
xchg
sbb
mov
gs
aaa
and
pop
sbb
mov
mov
xchg
pop
mov
js
out
mov
jle
cmp
fsub
repz
or
rcr
mov
in
and
inc
fisubr
mov
aaa
sub
push
xor
enter
ins
jnp
dec
(bad)
or
sub
push
inc
pop
sbb
jp
std
mov
push
mov
loope
popf
pop
xchg
into
sbb
clc
je
sub
cmps
data16
out
ds
movs
aam
sbb
cmps
addr16
outs
imul
lock
jl
das
in
fs
pop
outs
ror
lock
inc
gs
jns
push
test
cmp
inc
out
mul
mov
das
push
movs
aas
and
lods
xor
cli
call
mov
and
pop
jge
fimul
cmps
push
jecxz
mov
lock
cli
inc
mov
adc
jae
sub
and
stc
mov
pminub
out
jg
std
sbb
jecxz
jecxz
or
sbb
lock
(bad)
dec
sbb
adc
stos
(bad)
push
dec
mov
call
dec
adc
arpl
pop
jge
cmp
jecxz
pop
xchg
and
repz
xchg
or
popa
and
sahf
gs
dec
mov
out
add
mov
sub
lahf
mov
mov
nop
mov
bound
fld
xor
sbb
xor
(bad)
jb
movs
xchg
sbb
movs
sub
ins
mov
mov
ss
xchg
sbb
addr16
cmps
dec
scas
add
add
pop
int
xchg
push
test
pop
mov
sbb
imul
adc
sbb
xchg
sbb
hlt
pop
scas
outs
pop
fadd
imul
pop
add
sbb
and
lds
je
jno
or
inc
push
leave
xor
xor
xor
outs
cmp
push
test
aam
mov
cld
cwde
cmc
and
push
inc
dec
test
jbe
inc
adc
add
in
mov
lods
addr16
pop
loopne
sar
retf
fild
test
shl
add
fist
ins
dec
pushf
add
dec
push
js
push
ja
mov
inc
scas
cs
lds
je
xchg
jp
xchg
loope
pop
pop
out
in
mov
cwde
out
pop
xor
push
cmps
add
adc
dec
mov
and
adc
mov
cdq
(bad)
int
mov
aad
mov
xchg
push
xchg
shl
jbe
fisttp
shl
lea
fmul
popf
sbb
enter
xchg
mov
cwde
mov
xor
data16
fdivr
cmp
test
cpuid
xchg
fild
fidiv
fdiv
sti
sti
and
pop
test
pop
aad
dec
into
cmc
jo
sub
inc
xchg
mov
jmp
pop
je
xor
jno
mov
or
cmp
jns
ja
mov
scas
mov
add
popf
push
cmps
jecxz
cmp
int3
inc
push
mul
hlt
bound
inc
ss
add
(bad)
retf
popf
push
test
push
bound
jb
xchg
sub
jg
push
push
add
dec
outs
add
in
mov
lock
ret
xchg
test
sub
xchg
xchg
mov
adc
xchg
cmps
mov
xor
mov
push
or
mov
call
mov
repnz
ds
cmp
bound
jp
iret
data16
mov
push
cmp
mov
sbb
cmp
pop
je
enter
jo
jne
xor
call
fwait
add
in
icebp
mov
or
call
mov
pop
xchg
mov
jmp
popa
ss
or
mov
and
ret
ret
pop
retf
icebp
inc
aaa
xchg
idiv
dec
mov
add
clc
jge
dec
and
sub
mov
movs
(bad)
lock
hlt
out
dec
jmp
call
dec
ret
and
aad
sub
out
dec
cli
ret
mov
fmulp
lods
jo
jl
mov
inc
mov
in
mov
out
std
adc
adc
xor
jle
mov
mov
call
add
cwde
add
xchg
imul
mov
adc
push
test
xchg
test
xchg
pop
inc
inc
popa
cs
bound
sub
idiv
sahf
dec
out
aam
into
(bad)
in
out
cli
jmp
jbe
mov
scas
out
pop
jb
push
xchg
test
add
sub
jnp
test
xchg
cs
stos
xor
push
ins
out
xchg
outs
mov
add
push
call
scas
mov
das
or
adc
mov
jecxz
and
iret
or
popf
jecxz
xchg
fidiv
cmp
setnp
pop
in
inc
ins
and
mov
mov
sbb
adc
pop
xor
icebp
pop
stc
xor
xchg
mov
arpl
cdq
dec
daa
lock
pusha
fxch
and
and
mov
inc
icebp
and
icebp
outs
ds
not
push
(bad)
xchg
(bad)
repnz
mov
sar
daa
je
in
pop
js
jns
mov
push
or
cmp
mov
int
es
jb
mov
out
out
adc
ja
clc
dec
adc
sub
cld
push
fiadd
and
je
fimul
xchg
cmp
jne
cmp
sub
dec
stos
pop
pop
inc
js
jmp
stc
std
ins
jl
gs
cli
mov
mov
jecxz
das
into
stc
in
sbb
test
in
dec
push
jo
sbb
loop
jo
(bad)
int3
sar
mov
retf
sbb
push
jo
and
xchg
in
ja
mov
in
cmp
loop
cmps
xchg
push
out
mov
frstor
mov
pop
sub
pop
add
inc
ret
inc
jno
mov
xlat
inc
call
mov
cdq
jns
leave
cdq
pop
xor
nop
cs
out
aam
scas
push
inc
pop
mov
cmc
call
movs
test
or
add
and
push
push
enter
dec
xor
xchg
and
sti
cdq
ins
or
push
out
xchg
inc
inc
push
mov
xchg
push
fs
stc
into
jne
movs
cs
cmc
retf
(bad)
mov
out
fimul
test
dec
jnp
and
pop
adc
xchg
sub
dec
jmp
aad
jle
sbb
sub
stc
fstp
push
jge
shr
xchg
cs
and
in
adc
ficom
outs
push
inc
cld
cmp
pushf
loope
test
adc
jmp
push
jmp
jmp
and
scas
and
fild
scas
mov
mov
or
or
inc
int3
or
push
add
adc
mov
and
stos
dec
ds
mov
daa
into
js
jo
jecxz
dec
cld
(bad)
fwait
or
out
mov
xchg
aaa
adc
xchg
sbb
outs
fxch
pop
aas
pop
ror
fisub
xor
sbb
aad
adc
popf
mov
int
xchg
lds
xor
pop
pushf
add
sub
push
mov
pop
pop
pop
adc
nop
shl
mov
dec
adc
ins
inc
dec
aas
xor
fimul
mul
inc
jmp
sbb
ror
movs
jns
js
repnz
ret
js
fld
adc
stos
idiv
jns
xchg
mov
les
jle
aad
xor
fdivr
(bad)
out
push
adc
pusha
mov
outs
dec
lahf
xchg
pop
mov
es
or
or
outs
lock
js
cmps
ror
sti
xlat
xchg
fldcw
push
(bad)
int
mov
pop
mov
sub
repnz
(bad)
push
add
jae
inc
xchg
mov
jnp
cli
aad
aam
mov
dec
mov
and
pop
scas
xor
mov
arpl
pop
mov
mov
or
iret
mov
inc
leave
mov
or
mov
outs
ret
and
pop
xchg
hlt
mov
dec
dec
mov
call
cmp
loop
jmp
dec
mov
cmps
sbb
pop
out
adc
mov
pop
inc
jbe
mov
sub
xlat
add
(bad)
push
sub
into
das
add
adc
pop
enter
mov
pop
cld
das
scas
inc
mov
dec
mov
push
sti
in
pop
or
hlt
mov
mov
xor
xrelease
aas
pop
repnz
mov
lds
or
std
or
mov
popf
call
cli
in
ret
inc
and
test
cdq
xchg
mov
push
mov
call
fstp
mov
xchg
or
fs
sbb
les
adc
(bad)
jl
lods
xor
or
int3
xchg
retf
sbb
cmc
clc
ds
mov
xchg
es
cdq
push
movs
popa
add
dec
mov
out
dec
jmp
fimul
mov
lods
outs
dec
ins
push
push
mov
pop
cmc
(bad)
and
sbb
push
ret
mov
jl
jno
adc
fnsave
add
icebp
call
and
mov
or
mov
(bad)
retf
mov
and
js
pop
push
movs
pop
jae
push
jmp
movs
push
fstp
pop
movs
pop
xchg
scas
push
mov
into
addr16
mov
push
xchg
gs
xchg
aas
xchg
idiv
jbe
scas
dec
mov
push
mov
dec
xor
jmp
mov
and
xor
pop
sbb
and
pop
mov
or
imul
(bad)
sub
jecxz
imul
mov
xor
mov
push
xchg
fsubr
jno
ror
sub
and
loopne
lea
shl
cmp
loope
in
stc
add
movs
or
jmp
add
sub
jg
push
sti
not
sbb
push
(bad)
fwait
dec
mov
std
sbb
repz
sbb
mov
mov
jae
fistp
mov
pop
in
cmp
aaa
nop
add
in
gs
jecxz
test
push
push
es
maskmovq
jp
pop
sub
xchg
test
ins
jae
fwait
cmp
clc
fldenv
lods
in
into
stos
or
jbe
mov
out
push
inc
mov
adc
dec
xchg
shl
lds
pushf
pop
scas
adc
mov
inc
jge
xchg
or
mov
call
inc
aam
xchg
cmp
jmp
or
(bad)
fucomip
cmp
push
stos
repnz
xchg
or
(bad)
jg
sbb
(bad)
xor
cmp
pop
in
clc
js
repz
ror
pop
adc
out
leave
cmps
mov
dec
dec
test
mov
mov
aas
mov
jae
cmc
cli
jmp
adc
ret
nop
mov
mov
mov
nop
sbb
push
jae
xor
loop
lea
arpl
shl
ins
jo
rol
adc
addr16
in
je
pop
jl
icebp
cmps
sbb
rol
cmp
imul
jl
and
mov
cdq
or
jle
jno
adc
inc
popf
gs
(bad)
and
or
inc
in
xor
and
inc
mov
inc
push
jmp
hlt
stos
and
retf
(bad)
rol
or
sbb
sbb
and
dec
mov
dec
test
xchg
lea
or
mov
ficomp
adc
(bad)
jg
cmps
cmp
inc
xlat
repnz
cmc
ss
cs
or
xor
push
aam
mov
cs
(bad)
inc
adc
or
movs
sti
das
mov
xchg
not
popa
xchg
mov
std
out
shl
ficom
test
dec
mov
push
and
cmps
scas
mov
xchg
imul
xchg
mov
push
movs
inc
into
fld
dec
stos
jg
add
fimul
loope
sbb
arpl
stos
xchg
dec
cld
mov
cld
pop
ins
test
std
cmp
dec
retf
aad
pop
xchg
(bad)
std
shr
sub
mov
sti
fisubr
jge
cmp
cli
stc
in
aad
or
inc
push
dec
ins
and
cmp
lahf
(bad)
arpl
jo
pop
inc
lods
(bad)
(bad)
arpl
xchg
cdq
mov
int
pop
mov
loopne
dec
inc
test
loop
cmp
std
mov
mov
pop
add
fwait
pusha
(bad)
fst
outs
fucomip
mov
cmp
dec
mov
sbb
push
pop
xchg
rcl
add
aad
jae
sbb
dec
in
fstp
mov
stc
mov
lods
pusha
sbb
lock
mov
push
cmp
sub
adc
or
in
xchg
loopne
ins
aam
xlat
loop
sbb
hlt
fsubr
xor
sahf
nop
rcl
leave
mov
rol
add
and
movs
imul
mov
movs
das
push
mov
popf
loop
push
fcomip
push
sub
test
scas
push
pop
or
mov
cmp
movs
mov
rol
cmps
leave
jmp
add
sar
cmp
mov
imul
jg
rcr
sbb
adc
out
mov
adc
sbb
push
sbb
out
cwde
push
cmovl
ret
data16
(bad)
lock
cmp
(bad)
jp
inc
ins
test
lods
jle
aas
jne
repz
sub
sub
into
adc
aas
cli
call
pop
xor
icebp
cmp
inc
call
ss
retf
test
aam
add
daa
and
inc
nop
les
sbb
push
in
sbb
xlat
jae
test
ret
cwde
inc
arpl
jmp
sbb
in
std
jge
push
or
adc
retf
dec
(bad)
aas
addr16
stos
push
bound
sbb
jb
push
push
sar
pop
clc
retf
data16
xchg
xor
add
push
out
mov
and
sbb
jmp
or
mov
addr16
popa
mov
mov
out
fsub
xor
fadd
jo
xlat
cmps
jns
and
cmp
aam
pop
push
stc
sbb
mov
hlt
jmp
or
mov
ss
push
sbb
inc
inc
lock
add
jg
shl
add
loopne
arpl
mov
stc
xchg
and
call
(bad)
jp
cdq
cli
imul
jb
fisubr
adc
outs
sub
jle
das
test
hlt
sbb
ret
pop
fadd
or
(bad)
movs
div
add
dec
push
(bad)
(bad)
outs
outs
fldcw
add
jno
sub
aam
dec
(bad)
icebp
stos
mov
rcr
add
(bad)
mov
int3
jmp
out
push
pop
dec
push
test
stos
mov
sbb
and
pop
xchg
adc
push
jb
xchg
push
xchg
mov
pop
es
push
jno
in
fsubr
dec
jbe
pop
xor
cli
dec
xor
jmp
mov
imul
add
xchg
add
rcl
retf
aas
(bad)
jecxz
icebp
dec
shl
cld
(bad)
out
inc
outs
inc
sbb
mov
add
dec
fwait
in
pop
dec
sbb
rcl
pop
fld
and
push
sub
mov
arpl
and
sbb
test
add
pop
mov
xor
jg
xlat
jmp
inc
push
dec
sub
sti
and
pop
in
stc
fs
mov
cmp
nop
mov
popf
cmp
ficomp
sbb
scas
and
mov
cmp
push
sub
cld
push
jmp
aas
cmp
sub
dec
add
mov
xor
mov
sub
sub
or
xchg
stos
add
push
dec
jo
mov
mov
mov
out
xor
(bad)
outs
inc
pop
xchg
(bad)
out
pop
scas
add
ss
push
or
jecxz
mov
inc
xor
into
and
xchg
xlat
xchg
xchg
inc
pop
jmp
push
icebp
inc
push
push
pop
adc
sti
xchg
dec
inc
dec
and
inc
adc
push
mov
push
dec
outs
popf
leave
or
push
dec
mov
fdiv
cmp
mov
pop
test
ja
add
(bad)
out
or
icebp
mov
pcmpgtd
out
mov
arpl
into
cmovno
ficomp
push
jecxz
and
xchg
fcomp
les
and
mov
lea
mov
mov
dec
daa
retf
es
cli
adc
stos
test
inc
pop
mov
ins
mov
call
icebp
sub
shr
scas
cmp
or
std
and
dec
in
popa
push
pop
xchg
xor
inc
sub
inc
xchg
jns
imul
mov
sar
shr
lahf
call
xor
in
addr16
jmp
dec
or
adc
popf
cmps
fcomp
fwait
mov
(bad)
or
add
mov
pop
stos
clc
dec
inc
icebp
hlt
ins
sub
ficom
stc
cmp
pop
out
jae
ret
xchg
sti
jp
test
mov
dec
mov
out
aad
add
pop
inc
mul
xchg
in
cmps
aaa
fwait
loopne
in
mov
xlat
shl
popa
sbb
arpl
lods
jns
pop
sti
push
pop
sbb
add
inc
sub
push
loopne
not
adc
push
or
sbb
adc
loopne
or
add
imul
jno
jge
jns
push
fiadd
(bad)
loope
or
mov
jns
or
jle
fs
mov
mov
retf
adc
ins
jg
push
out
mov
(bad)
mov
das
ins
js
lea
mov
test
lods
shl
cmps
sub
fld
sub
jns
fs
push
lahf
jno
sbb
sub
mov
out
mov
mov
call
popf
imul
sub
(bad)
or
pusha
and
fisub
cmp
mov
fmul
adc
imul
cmp
cmp
mov
mov
int3
iret
sbb
test
out
popf
mov
mov
mov
ins
adc
cs
stos
xchg
in
xor
pop
mov
jb
addr16
call
cwde
sbb
(bad)
test
rcr
jle
test
and
cmps
xchg
addr16
mov
es
mov
xchg
pop
jns
sub
mov
ror
loope
(bad)
cmp
push
mov
sub
mov
stos
cmps
jae
and
outs
jp
jecxz
cmp
jge
fdiv
pushf
jmp
add
push
ss
rol
add
sub
nop
sahf
add
test
push
movs
test
xor
jb
in
hlt
sbb
fstp
ja
dec
shl
add
repz
pop
pop
mov
cli
dec
pop
push
mov
test
xchg
or
jle
cdq
mov
stc
loop
push
rcr
or
and
push
xchg
jne
push
add
mov
aas
or
xchg
sahf
ins
out
mov
or
dec
retf
push
ror
out
retf
(bad)
xor
xor
mov
lods
lahf
in
add
mov
mov
xor
or
push
popa
adc
shl
mov
std
or
es
mov
jl
add
mov
cmc
push
jmp
fs
sbb
cmp
jle
add
mov
inc
mov
xchg
xchg
out
out
mov
loopne
int
aad
aad
xor
fwait
mov
stos
add
push
movs
ret
fldenv
jno
daa
xor
push
pop
push
fnstsw
or
mov
xchg
cmp
mov
aas
mov
jge
jb
imul
dec
mov
(bad)
xchg
mov
mov
inc
jecxz
aaa
push
push
scas
fwait
dec
cwde
and
(bad)
jmp
fidivr
sub
lahf
fist
loop
(bad)
pop
dec
xor
jns
ja
mov
pop
push
sub
je
add
mov
popa
jne
pop
out
sti
mov
cmc
xor
and
popa
mov
out
jo
icebp
and
adc
mov
xchg
adc
sub
fdivr
jecxz
fdivrp
icebp
loopne
mov
test
jecxz
call
xchg
sbb
int
lock
push
ins
inc
jnp
(bad)
xchg
dec
imul
sub
loope
loope
test
ins
fld
movs
sar
arpl
dec
mov
mov
mov
out
loopne
repnz
jno
rol
push
add
push
ins
mov
add
lahf
or
mov
sub
cmp
cmp
or
mov
mov
fwait
movs
pop
in
xchg
jbe
push
idiv
adc
shl
fcmovu
mov
pop
or
stos
sub
sbb
xor
sbb
fwait
adc
pop
sbb
adc
sub
jge
(bad)
pop
call
bound
push
xchg
xchg
jmp
in
dec
cmp
pop
xchg
sub
inc
imul
(bad)
jmp
aam
cwde
ins
jne
xchg
adc
pop
or
jmp
xor
lds
pop
into
sti
mov
dec
jl
and
and
hlt
pushf
lahf
ins
or
cmp
loop
sub
in
mov
rcr
adc
push
fsub
or
test
out
sbb
mov
jmp
pop
call
and
add
mov
sub
xchg
push
(bad)
inc
sbb
test
sbb
test
scas
repnz
dec
push
or
pop
mov
xchg
sbb
into
pop
push
rcr
add
retf
mov
mov
sbb
jno
and
push
xchg
cmp
imul
pop
mov
fldenv
jle
dec
sti
xchg
ja
add
aas
sub
sub
mov
movs
stos
shl
dec
ds
jno
ss
mov
jl
jge
arpl
jmp
and
ror
sub
shl
in
inc
fsubr
lods
cmp
mov
fimul
mov
adc
jns
fs
lea
fisttp
nop
cvtps2pd
add
popa
mov
nop
jo
lds
push
in
mov
mov
imul
dec
adc
imul
inc
fadd
hlt
ins
pop
push
cdq
push
mov
loope
mov
shl
std
dec
cld
mov
pop
and
jl
mov
lock
loop
(bad)
idiv
dec
test
mov
sub
call
retf
jmp
pusha
js
jne
(bad)
aaa
aad
cmp
cld
outs
mov
loope
inc
(bad)
mov
xchg
call
cmp
push
sbb
fidiv
ror
adc
xchg
mov
xor
adc
sub
cmp
es
in
test
sbb
mov
daa
xchg
add
push
nop
jmp
out
and
movs
adc
test
adc
gs
not
mov
jge
jmp
jle
and
std
sbb
mov
cmc
cdq
xor
pop
push
xlat
dec
cwde
loope
inc
mov
xchg
rol
repz
das
shl
jno
lahf
inc
jge
cwde
jg
iret
mov
push
popa
pushf
or
(bad)
sbb
ret
jbe
rcl
xor
ins
xor
or
dec
fsubr
push
or
mov
pop
loop
mov
fwait
and
jmp
cmps
std
mov
inc
jns
cld
jmp
sub
call
lds
pop
pop
mov
scas
push
adc
add
or
push
xchg
xchg
lods
fwait
or
adc
test
hlt
loopne
sbb
sub
mov
add
ss
sbb
jmp
mov
sub
fild
sbb
lock
jg
test
fsubr
rcl
xchg
pop
outs
mov
sub
mov
push
ins
or
cmc
pop
jmp
ficom
mov
add
gs
adc
(bad)
jns
aaa
and
rcr
leave
movs
mov
xchg
out
dec
jno
inc
inc
sar
mov
and
aam
fsub
mov
xchg
cli
sub
rcr
inc
inc
jo
loop
lahf
sub
(bad)
sti
jg
jae
sar
and
adc
(bad)
cmps
fldl2e
arpl
je
cdq
sub
(bad)
gs
in
or
ret
adc
dec
mov
or
scas
dec
jno
inc
stos
enter
xor
ret
or
ss
sub
xor
mov
das
pusha
mov
sahf
movs
inc
ss
daa
xchg
clc
xchg
mov
and
jp
sahf
retf
add
mov
ret
dec
xlat
add
xchg
push
out
ror
xchg
xchg
mov
xchg
or
repnz
mov
cmp
push
daa
mov
lods
loop
pop
sub
pop
in
pop
out
cld
ss
and
or
adc
ror
lods
push
stc
cmp
or
cmps
cmp
int3
jg
add
outs
inc
out
scas
xchg
push
or
idiv
call
not
out
stos
push
mov
ret
pop
js
mov
or
in
adc
push
push
fst
test
jmp
repnz
mov
mov
dec
call
repz
rol
add
cmp
xor
jae
out
add
lods
stos
outs
ins
arpl
fistp
cmps
ins
and
lahf
cs
test
cmp
jne
add
addr16
fstp
loop
rcpps
test
adc
jecxz
ss
and
xchg
xchg
cmps
or
inc
test
les
cmp
inc
jge
mov
test
sti
or
mov
or
gs
lods
inc
pop
call
add
sub
iret
mov
cdq
and
ss
sbb
mov
ja
xchg
or
ins
(bad)
lahf
clc
outs
inc
(bad)
stos
ss
ss
jl
pop
mov
xchg
mov
mov
mov
xor
push
dec
out
or
or
aam
int3
int3
mov
cmps
shl
sub
sbb
shr
mov
add
adc
lods
cmp
mov
int
adc
adc
inc
leave
sub
imul
sub
imul
out
fsub
imul
aad
dec
mov
movs
sub
adc
inc
icebp
sbb
or
sub
mov
add
push
dec
leave
sbb
enter
xlat
(bad)
scas
jmp
pop
fwait
aam
dec
(bad)
mov
pop
inc
rol
pop
mov
loop
push
or
je
add
fadd
je
or
inc
js
mov
xor
(bad)
fisub
imul
or
jp
pop
or
jno
cmp
or
aam
sub
stos
adc
ret
sbb
lock
jbe
xor
xor
fstp
lods
cli
arpl
pop
aaa
jbe
lods
mov
jmp
fst
cmc
push
loop
iret
iret
retf
push
or
or
cmc
dec
(bad)
repz
loop
je
push
push
adc
call
push
push
ins
sti
sbb
adc
and
neg
repz
mov
gs
inc
cmc
fiadd
sub
lahf
int3
stos
push
push
out
mov
add
cmp
jb
jbe
jns
movs
cs
retf
retf
outs
mov
std
dec
dec
mov
scas
push
loopne
and
xchg
or
mov
rcr
mov
mov
leave
sbb
xacquire
sub
(bad)
cmp
cmp
mov
inc
fcom
fisttp
jp
mov
sub
jb
mov
cmps
call
inc
dec
and
add
sar
mov
adc
inc
les
mov
or
pop
cmp
fld
scas
gs
inc
(bad)
ss
push
(bad)
xchg
dec
popf
adc
lahf
ins
rcl
mov
lahf
aam
test
dec
in
cmp
mov
jne
pusha
in
loopne
sbb
add
retf
mov
pusha
test
xchg
ins
push
dec
and
pusha
mov
das
mov
xor
sbb
xchg
mov
(bad)
stos
stc
xchg
repz
mov
(bad)
mov
dec
push
ins
retf
or
sbb
cld
cmp
sub
ret
out
inc
and
stos
out
test
setge
stc
dec
jmp
int
xchg
mov
test
jecxz
and
in
pop
js
pop
(bad)
sub
pushf
arpl
callw
ja
mul
mov
add
sbb
call
lahf
xor
out
cld
jae
outs
jmp
ins
pop
rcl
mov
dec
mov
xchg
add
xchg
xchg
(bad)
(bad)
mov
mov
pop
in
jo
lahf
and
mov
mov
jg
mov
lods
ds
daa
ja
xor
xor
es
clc
loopne
(bad)
mov
adc
pop
retf
shr
sbb
adc
pop
retf
stos
scas
xchg
mov
addr16
or
je
add
cmp
ret
mov
sub
loop
das
push
cmps
push
push
sbb
jecxz
mov
inc
je
aas
pop
adc
jbe
cmp
adc
adc
sti
add
ins
repnz
mov
dec
sub
ss
jo
out
outs
shl
jmp
mov
mov
add
or
fldenv
jmp
(bad)
gs
aas
mov
das
stc
sbb
add
js
call
fiadd
sahf
mov
dec
xchg
enter
movs
and
mov
loop
mov
mov
(bad)
fs
movs
jo
lods
pop
dec
push
dec
jmp
xchg
dec
pusha
rcl
mov
aas
movs
pop
pop
cmps
cmp
push
sbb
pop
ds
es
sbb
adc
xor
add
stc
mov
cmp
ins
inc
loope
test
and
pop
pop
mov
ins
dec
xchg
push
fs
fnstsw
jne
jle
xor
jp
retf
push
mov
pop
mov
loopne
retf
loopne
std
icebp
sub
stos
popa
pusha
sbb
jg
pusha
lahf
push
outs
loopne
cmp
cwde
sub
aas
mov
jae
hlt
in
(bad)
xor
mov
dec
clc
dec
dec
mov
jg
test
das
dec
xlat
pop
mov
xlat
mov
cmp
cdq
(bad)
(bad)
xchg
out
jg
cmp
inc
fcmove
cmp
sub
mov
sbb
mov
add
out
cmps
jmp
or
sbb
(bad)
dec
adc
scas
test
xor
jb
mov
lods
fdivr
pop
sbb
jg
sbb
xchg
into
xchg
ja
cmp
js
mov
imul
(bad)
cld
stc
hlt
mov
std
retf
adc
popf
or
shl
push
mov
cwde
neg
lods
sub
sub
sti
sbb
in
mov
imul
fnsave
jnp
jp
mov
mov
les
fnstenv
lock
mov
lea
lock
cmc
popf
jle
mov
and
loop
add
dec
sbb
rol
jmp
add
mov
fidiv
dec
push
in
ja
and
xor
mov
fwait
sbb
loope
fimul
inc
in
fld
sub
bound
dec
cmp
mov
push
mov
and
fdivr
dec
cld
add
pop
(bad)
movs
mov
mov
lea
push
mov
pop
rcl
sbb
jb
sbb
call
and
sbb
imul
retf
dec
push
and
sub
xor
xor
sbb
add
mov
dec
adc
lds
les
sub
test
in
mov
imul
in
sub
xchg
jo
rcl
inc
scas
pop
test
(bad)
push
(bad)
in
jno
sub
adc
ret
cmps
inc
xchg
sbb
xor
ss
stos
lds
xchg
iret
mov
or
popf
mov
mov
mov
cmp
dec
(bad)
sub
jg
xchg
loopne
test
push
leave
jge
(bad)
jno
inc
mov
call
sti
ins
lahf
mov
(bad)
call
cld
pop
mov
es
pop
xchg
push
mov
movs
popa
jno
out
stos
movs
fsub
push
push
mov
movs
lds
xchg
inc
fistp
xchg
call
and
aaa
push
jo
jmp
dec
dec
jl
inc
mov
popf
cs
inc
call
mov
js
cmp
push
pop
jecxz
mov
and
inc
(bad)
dec
outs
lahf
(bad)
out
jbe
push
std
sub
movs
das
fnstenv
add
call
les
scas
dec
mov
daa
adc
nop
xor
dec
iret
dec
js
xchg
lahf
jmp
sti
inc
popf
pop
icebp
push
in
cmp
jb
cmp
push
ror
adc
inc
jno
adc
aam
test
xor
ja
cmps
nop
inc
adc
xor
mov
retf
inc
dec
xor
mov
inc
xchg
test
pop
cmp
mov
leave
clc
ret
idiv
cs
xchg
jmp
sbb
jg
jmp
gs
jge
das
mov
dec
frstor
and
(bad)
in
shr
push
jle
inc
pop
loope
add
push
mov
dec
mov
pop
aas
dec
xchg
out
es
stos
cmova
pop
and
jo
lea
retf
add
scas
cmp
out
addr16
aad
ins
jbe
mov
mov
int
rol
test
add
and
pop
jno
adc
pop
add
pop
mov
jne
mov
sub
dec
add
and
dec
mov
mov
test
dec
jnp
pop
out
pop
out
cdq
lahf
push
push
mov
push
dec
or
and
scas
imul
(bad)
into
xchg
dec
shl
sbb
hlt
push
lods
movs
ret
or
cs
jl
jno
popa
xor
mov
lods
fistp
or
ret
lea
and
adc
loopne
ins
mov
ins
int3
mov
aam
push
jg
xor
es
mov
sub
test
std
in
jno
movs
aad
out
and
cwde
push
call
xor
push
cmp
(bad)
inc
cmps
popf
test
jp
or
pop
mov
and
pop
or
arpl
test
sbb
clc
addr16
icebp
pop
jecxz
scas
push
int
jne
xchg
lods
dec
pushf
scas
ja
ins
in
cdq
pushf
test
je
sti
ds
sub
jne
mov
pop
clc
sbb
jae
(bad)
clc
mov
lods
les
mov
ja
cmp
sbb
mov
mov
push
sbb
pop
sbb
in
xor
adc
dec
popa
lock
sbb
hlt
inc
pop
cmp
enter
mov
pop
ja
int
out
sub
addr16
fadd
mov
lock
xor
data16
(bad)
inc
add
jge
push
pop
jo
lea
and
cdq
pop
mov
xor
test
and
daa
dec
inc
add
mov
and
sbb
retf
pop
rol
mov
cmp
int3
fisttp
mov
xor
adc
cmc
imul
das
je
pop
fisttp
jecxz
popa
pop
fist
mov
inc
scas
cmps
sahf
mov
fwait
dec
xor
sar
mov
add
jmp
vmptrld
std
(bad)
lock
(bad)
retf
into
add
les
lds
jmp
cld
adc
fdiv
cmc
mov
fdiv
adc
inc
cmp
adc
or
loopne
pop
push
adc
push
sahf
fwait
enter
xchg
es
test
sbb
push
idiv
fsubr
sar
aas
push
add
mov
out
pop
fmulp
imul
in
push
mov
test
aaa
cmps
add
lods
inc
mov
shl
cmps
jne
stos
stc
cdq
fcomp
jmp
imul
sub
add
data16
rol
xlat
add
jmp
sbb
and
add
add
inc
and
push
(bad)
es
dec
xchg
cmp
rcr
sub
imul
inc
lds
push
(bad)
fidiv
jmp
popf
lock
mov
int3
lock
jmp
test
(bad)
mov
mov
add
mov
outs
mov
cmp
mov
test
jae
mov
add
mov
in
xchg
add
outs
xor
mov
sub
daa
ja
inc
loop
push
ins
mov
les
xor
sbb
inc
fmul
daa
rcl
and
out
fadd
sbb
cmc
daa
in
dec
out
and
pop
xchg
or
jbe
int
inc
jns
(bad)
pusha
in
icebp
imul
adc
or
jae
ins
aad
xchg
aam
dec
pop
pop
loopne
movs
mov
adc
dec
or
scas
push
pop
mov
mov
xchg
clc
pop
sub
sub
pop
clc
retf
stc
in
mov
mov
out
push
pop
mov
pop
aad
int3
adc
inc
mov
jmp
cld
outs
xor
icebp
add
mov
and
sahf
popa
fcom
xlat
cmc
adc
mov
dec
and
and
or
sub
in
push
cwde
adc
jb
xor
mov
and
mov
push
mov
loope
and
out
jno
(bad)
fstp
ins
or
jne
push
retf
pop
fs
rcl
rcr
jns
cld
cld
lea
shr
sbb
sub
sbb
push
call
add
je
inc
repnz
or
push
inc
push
sub
push
mov
cs
dec
and
popf
outs
jl
xchg
sbb
jmp
(bad)
imul
rcr
pop
repnz
and
xchg
call
fcom
sbb
pop
(bad)
aad
aas
dec
lods
shr
ja
jne
shl
out
mov
push
sub
aad
ss
das
scas
push
int3
mov
pop
mov
adc
ds
push
data16
xor
or
mov
pop
or
inc
scas
stos
ret
int
sub
jg
int3
inc
cmp
cmp
add
out
out
push
add
outs
retf
lock
out
hlt
mov
test
ficom
ret
loopne
and
out
jo
mov
push
mov
mov
data16
mov
mov
sahf
out
jno
cld
or
ss
or
jg
xor
icebp
test
fidivr
sub
imul
add
jbe
shr
inc
lsl
pop
int
adc
jmp
cmp
div
or
push
lea
cmp
dec
jmp
(bad)
cs
sar
mov
or
inc
in
cld
or
fmul
out
loope
xchg
jl
stc
inc
and
mov
ror
retf
sar
or
inc
cmp
ins
xor
call
pop
in
jbe
cmp
call
and
sti
outs
adc
clc
push
test
xor
adc
cwde
cmp
gs
pop
adc
sub
jmp
mov
call
das
retf
add
into
jmp
test
mov
or
jo
addr16
push
sbb
pop
cmps
lds
xor
add
addr16
shr
out
xor
mov
push
bswap
repnz
jae
inc
shl
scas
xchg
daa
cmp
or
xor
iret
cmp
fcmovnb
ret
mov
sbb
jbe
outs
cmc
sub
adc
fwait
xor
xchg
mov
pop
stos
(bad)
loopne
js
mov
xchg
cdq
add
test
mov
ins
scas
hlt
je
jecxz
test
add
loopne
dec
push
xchg
xchg
cmp
mov
xchg
bound
sbb
pop
mov
pop
ins
sbb
daa
xchg
sti
cs
dec
adc
(bad)
push
test
mov
mov
ss
xor
add
sub
dec
call
jmp
adc
popf
push
cmc
cmp
in
pop
jno
mov
pop
add
into
xchg
sbb
cs
cmps
out
sbb
inc
inc
or
cwde
mov
and
inc
lea
js
xor
clc
sub
push
push
mov
sbb
and
(bad)
ins
ret
fidivr
hlt
pop
movs
and
xchg
mov
or
xor
push
adc
sbb
psubsw
and
pop
push
outs
push
cmp
out
and
xor
sbb
sar
push
adc
(bad)
push
jno
js
jecxz
or
cmps
or
fs
mov
or
mov
lock
jmp
xchg
retf
pop
or
mov
pop
sub
jnp
jmp
lods
imul
mov
add
or
push
mov
mov
mov
cmp
lock
(bad)
sbb
shr
ret
and
sbb
pop
inc
mov
cmp
idiv
xchg
cmps
in
xor
xchg
shl
jmp
loop
sahf
adc
inc
mov
mov
ds
mov
ficom
mov
bound
xchg
fs
mov
lahf
ficom
inc
pop
jb
(bad)
stc
jl
adc
ja
cdq
scas
sub
arpl
xchg
lahf
push
mov
lahf
pop
es
retf
pop
jno
adc
xor
and
fwait
mov
sahf
cmp
shl
add
psraw
sub
add
push
(bad)
aam
xchg
ret
data16
(bad)
repnz
out
push
cdq
mov
mov
dec
adc
dec
js
sub
and
dec
xchg
icebp
push
fiadd
(bad)
ret
mov
jl
repnz
stos
xchg
pushf
das
popf
int3
push
inc
add
xchg
mov
xchg
and
inc
jns
pushf
mov
xor
nop
ret
jp
push
rcr
leave
in
inc
addr16
pop
leave
outs
xlat
mov
adc
sub
or
cmps
retf
fmul
cmp
inc
mov
repnz
mov
push
or
xchg
lds
(bad)
sub
mov
xchg
cs
or
icebp
and
cs
(bad)
popf
adc
cmps
jno
stos
jp
lahf
xor
xchg
xchg
pop
ror
jo
add
inc
lahf
test
jnp
cs
mov
jo
mov
pop
dec
jae
add
out
inc
das
xchg
adc
sbb
jmp
xchg
neg
jmp
rcl
adc
dec
stos
push
jnp
mov
mov
in
mov
(bad)
jmp
sub
push
popa
xchg
(bad)
in
inc
xor
rcl
xor
and
and
ret
cmp
mov
and
mov
imul
mov
mov
inc
fisubr
popf
int
inc
dec
and
das
mov
xor
cs
push
fistp
call
sbb
mov
jne
xchg
pop
sub
lods
or
pop
cmp
data16
outs
(bad)
shr
test
xchg
(bad)
jnp
(bad)
xchg
aam
sar
cmp
fist
mov
stc
sbb
addr16
cmp
sub
mov
icebp
pop
pop
stc
icebp
mov
sbb
push
jns
ja
mov
test
dec
push
scas
shl
sub
mov
js
jno
repz
xchg
movs
dec
stos
enter
ins
(bad)
fstp
mov
scas
scas
sbb
jge
dec
bound
jmp
stos
dec
xlat
pop
mov
adc
pop
pop
push
adc
loope
and
pop
ins
sub
cdq
push
push
shl
pop
pop
push
mov
not
xor
aam
or
retf
push
fisubr
xchg
inc
inc
adc
adc
scas
xor
dec
sbb
mov
or
pop
loope
dec
inc
and
fsub
and
out
lock
xor
stc
pusha
aaa
mov
cmc
cwde
out
fisubr
lods
push
mov
mov
cs
imul
ficomp
call
cmp
push
mov
out
mov
rcl
adc
cld
stc
pop
std
ins
pop
xor
fild
sub
add
repz
sbb
mov
fadd
inc
and
rcl
adc
cmc
and
sbb
sub
das
jle
aam
jno
cmps
test
fistp
int
scas
jns
push
outs
je
rcl
cmps
aam
(bad)
mov
xor
fisubr
dec
xchg
pop
dec
out
in
or
add
sti
adc
push
loop
and
loop
pop
loopne
lods
js
pop
sub
cmc
scas
mov
mov
adc
cld
or
inc
sbb
fcomp
sbb
in
push
into
loope
push
scas
xor
js
in
aad
xchg
push
out
and
push
jno
sbb
jmp
test
or
push
mov
adc
icebp
jle
dec
jmp
add
jg
(bad)
pop
stos
ret
mov
div
jge
xchg
mov
mov
sahf
sub
xlat
mov
into
shl
das
pop
add
aas
add
inc
in
sbb
add
pop
jno
int3
retf
iret
mov
jbe
into
xchg
(bad)
sub
or
mov
imul
jmp
mov
es
or
xchg
add
ins
ficom
cmp
mov
mov
lahf
leave
int3
outs
mov
mov
xchg
inc
cmp
inc
pushf
inc
or
and
mov
lods
or
mov
add
dec
std
out
movs
xor
or
lea
imul
cmp
sub
add
retf
mov
mov
ins
outs
sbb
ins
daa
cs
gs
inc
adc
int
jb
arpl
ss
dec
sbb
leave
mov
dec
in
cli
push
dec
and
into
pop
jae
jb
mov
std
jg
push
loopne
les
clc
pop
sbb
xor
mov
xchg
retf
dec
or
jns
mov
xchg
(bad)
cli
fimul
adc
popf
mov
ror
rol
imul
ss
fwait
push
lods
pusha
inc
xchg
or
sbb
enter
mov
outs
in
fistp
xchg
outs
mov
mov
jne
push
jmp
cmps
test
xor
in
mov
sahf
in
fwait
jb
cmp
mov
mov
xor
std
mov
sbb
out
loope
jg
icebp
lods
repz
sahf
shl
adc
(bad)
in
push
cmp
xchg
add
sub
mov
xchg
inc
mov
and
push
bound
cmp
in
out
jle
push
std
pop
ss
retf
data16
into
shl
mov
into
xlat
mov
mov
jecxz
push
or
mov
dec
fisttp
gs
xor
fmul
outs
repz
inc
aam
push
mov
mov
sub
mov
repnz
movs
pop
out
bound
jmp
pop
or
push
call
sub
and
ins
out
xor
rol
or
mov
xor
neg
pop
fs
inc
mov
fnstsw
jg
jno
jg
mov
cli
out
lods
(bad)
in
dec
dec
xor
dec
or
fiadd
mov
sbb
add
mov
sbb
mov
xchg
hlt
lods
mov
sbb
mov
loop
js
xchg
ss
mov
cmp
lea
cmp
sbb
sahf
xor
fsub
call
sbb
leave
out
xchg
test
pop
dec
lods
mov
adc
lea
movs
mov
aaa
push
inc
repz
aam
cmp
ja
and
int3
pop
rol
cmp
test
jne
xchg
in
or
xchg
add
jmp
pop
mov
fstp
xchg
int3
jl
adc
out
and
into
xor
add
out
icebp
jae
push
aad
and
jmp
xchg
ins
dec
pop
fcom
xor
loope
xchg
mov
adc
shr
arpl
addr16
in
cmps
retf
dec
dec
shl
lods
mov
stos
mov
dec
popf
dec
rcr
fbstp
pop
cmc
mov
xchg
(bad)
mov
push
lods
xchg
js
sbb
mov
sahf
cli
cmp
dec
mov
lods
mov
js
loope
scas
jle
fstp
mov
clc
sahf
aam
lods
dec
sbb
out
sub
aas
inc
and
lahf
lods
mov
xchg
imul
stos
shl
outs
jle
movs
pushf
lahf
test
inc
jp
jl
rcl
in
xchg
and
xchg
add
mov
jp
sahf
repnz
in
retf
push
push
dec
pop
sub
inc
in
inc
xor
dec
ss
ret
jge
xchg
sub
lds
jae
out
lock
add
dec
repnz
dec
mov
nop
pop
sub
adc
ficom
in
or
mov
fisub
retf
loop
xor
mov
adc
push
mov
outs
mov
in
push
cmp
cli
(bad)
adc
daa
inc
fist
add
and
frstor
cdq
movs
loopne
adc
dec
jns
push
mov
div
lods
pop
mov
outs
sbb
nop
aas
sbb
mov
push
arpl
call
jge
mov
adc
pop
push
daa
sbb
into
loop
jno
call
push
jmp
(bad)
repnz
repnz
les
nop
adc
inc
inc
sbb
mov
push
shl
pop
mov
inc
aaa
in
shl
lods
mov
ror
(bad)
xchg
jo
arpl
in
sub
adc
pop
mov
lods
and
xor
mov
js
jp
js
xor
pmulhuw
aas
imul
mov
ret
mov
call
inc
mov
std
jns
sub
(bad)
out
inc
fadd
(bad)
and
inc
(bad)
sbb
stc
mov
pushf
fucomi
stos
sahf
das
xchg
fwait
dec
sti
mov
push
ins
loopne
sbb
stos
pop
imul
cwde
xor
ret
xchg
xchg
call
nop
jnp
lea
push
xor
leave
or
jmp
enterw
sub
cwde
xchg
mov
stc
pop
and
sub
mov
sahf
fs
mov
aam
push
xor
or
push
retf
int
xor
ret
inc
lds
arpl
mov
push
sbb
mov
dec
sub
hlt
hlt
xor
mov
loopne
xchg
cmps
popa
pushf
xchg
sbb
(bad)
jmp
sbb
out
sub
sbb
daa
pop
jno
sar
mov
popf
adc
pop
inc
retf
lahf
mov
movs
cmp
sbb
sbb
dec
adc
mov
test
jmp
xchg
mov
(bad)
retf
call
std
or
leave
or
icebp
and
sbb
test
jnp
mov
test
jl
sub
add
push
and
ss
cmp
fsubp
fxch
sbb
aad
mov
mov
je
sub
movs
idiv
mov
not
ret
cmp
dec
fwait
cmc
mov
xor
or
mov
mov
push
into
repz
das
add
mov
imul
mov
pop
iret
inc
xlat
pop
mov
loope
inc
dec
nop
jbe
push
dec
mov
test
and
add
inc
neg
jbe
scas
iret
movs
mov
pop
aam
dec
xchg
imul
cmp
mov
jmp
fnstsw
outs
and
add
in
fdivr
mov
sub
cs
enter
mov
mov
mov
pop
sub
call
cmps
xchg
pop
sub
call
test
gs
call
cmp
ficomp
push
dec
mov
(bad)
jo
mov
pop
loop
xor
ss
cmp
int3
test
cmp
or
sbb
leave
and
lds
jns
dec
jg
jmp
jge
lods
shl
xor
mov
xchg
push
xor
pushf
sub
sti
daa
lds
stos
push
adc
stos
int3
fdiv
test
xor
dec
inc
dec
lods
mov
jne
fsubr
icebp
jmp
push
mov
mov
pop
dec
inc
or
fimul
and
call
adc
arpl
mov
cmps
scas
(bad)
fs
adc
ss
add
mov
xor
clc
lds
ins
ins
ss
arpl
push
sbb
leave
mov
data16
ja
lea
fadd
add
pusha
shl
and
add
stos
ret
fdivr
fxch
mov
cmp
push
xchg
jp
cdq
stos
or
xor
mov
jmp
cdq
jns
nop
rol
cmps
jae
xchg
sub
dec
pop
xor
(bad)
cli
enter
lds
xchg
pop
shl
pop
push
stos
scas
jp
ret
cmp
sub
bound
mov
stos
mov
jno
ds
scas
out
mov
xor
cwde
rol
das
add
lock
in
lock
int
imul
shl
jne
enter
(bad)
dec
cld
sbb
push
icebp
add
(bad)
ins
lock
mov
dec
add
and
jae
sbb
fdiv
mov
cmp
mov
xchg
das
aad
lea
mov
adc
adc
mov
sbb
fsub
push
dec
(bad)
mov
lock
(bad)
add
inc
cld
or
fisub
xchg
sbb
sahf
or
dec
fdiv
repnz
(bad)
leave
fldcw
das
add
daa
push
inc
pusha
sbb
xor
push
fst
rcl
movs
icebp
inc
adc
push
test
sub
ja
mov
sub
aad
add
stos
and
mov
jg
jo
pop
mov
mov
xchg
(bad)
mov
mov
sub
adc
imul
test
dec
push
stos
dec
icebp
mov
mov
lock
clc
pop
enter
or
shl
daa
int
cmp
pushf
and
jge
sbb
or
fwait
test
adc
push
fsubr
enter
or
cmp
inc
or
ror
jl
in
sub
or
inc
xchg
push
cli
xchg
jmp
or
test
enter
sub
mov
fs
push
fldenv
(bad)
jmp
retf
add
inc
std
and
dec
push
inc
out
push
inc
dec
cwde
loopne
inc
mov
jno
xor
pop
mov
fsub
das
into
push
or
cmp
fnstsw
xor
mov
pushf
loop
outs
add
aaa
adc
mov
lahf
sahf
add
and
das
push
xor
(bad)
shl
sub
jg
or
ds
and
fimul
cmp
mov
push
imul
pop
adc
(bad)
lea
fst
fdiv
mov
dec
pop
(bad)
in
jno
test
xchg
jae
stos
and
imul
addr16
dec
outs
loope
stos
xor
das
loop
cmp
ins
xchg
or
es
ror
mov
out
jbe
fwait
push
lock
ret
fucom
jns
jo
pop
jnp
test
mov
pop
pushf
mov
les
mov
sub
fcmovbe
lahf
repnz
pop
clc
test
jb
not
push
ret
in
and
cwde
mov
adc
popa
mov
add
xor
in
push
pop
in
ficomp
pop
test
jno
fs
pop
in
sahf
xchg
add
mov
mov
dec
lds
sub
mov
jnp
retf
adc
xchg
jns
repz
xor
jmp
xor
mov
mov
push
mov
push
mov
shl
pop
xchg
out
inc
icebp
in
dec
jle
outs
mul
push
push
inc
mov
add
jle
lods
aad
mov
cmps
aam
aas
ret
jmp
lds
fild
mov
pop
cwde
jnp
xchg
mov
inc
jae
mov
movs
lea
sbb
mov
rcl
retf
push
jmp
mov
mov
ja
xor
jecxz
or
dec
mov
aaa
int3
push
leave
mov
xlat
(bad)
cmps
push
scas
or
cs
cld
ins
jmp
popf
xlat
icebp
adc
inc
imul
mov
add
push
sbb
push
cmp
int3
int3
mov
mul
xchg
push
inc
stos
imul
mov
ret
jg
mov
movs
or
push
jo
inc
cli
cmps
mov
enter
jmp
and
bound
aad
sar
jmp
clc
cmps
mov
inc
mov
pop
add
and
cdq
xor
adc
imul
sahf
jo
movs
bound
(bad)
xor
popa
push
stos
sbb
(bad)
icebp
stc
mov
retf
jge
sar
inc
xchg
push
nop
sub
push
ret
pop
adc
pop
add
jge
jo
push
scas
fild
imul
jb
dec
fs
fild
push
cdq
aad
mov
les
fs
add
test
xchg
pop
vsubpd
add
sub
adc
cdq
aad
inc
cli
push
jecxz
daa
adc
(bad)
lds
retf
push
rcl
cmps
dec
stos
cmp
lods
pop
loopne
sti
sahf
fistp
push
sub
adc
sbb
pop
leave
push
shr
sti
fs
xchg
push
daa
xchg
arpl
jmp
into
adc
or
or
jns
push
mov
rcr
mov
test
mov
xchg
rol
clc
mov
outs
xchg
xchg
mov
push
add
pusha
push
inc
imul
mov
add
sub
lods
add
sub
sbb
add
push
cmp
out
retf
out
sub
sbb
ins
cld
mov
cdq
inc
arpl
shl
sbb
arpl
popf
sub
fistp
inc
jge
aaa
dec
inc
sti
cmps
jo
stos
mov
cmps
cdq
dec
add
xor
mov
das
mov
sub
shl
adc
clc
push
out
xchg
and
test
or
and
inc
std
test
cwde
jne
mov
push
xlat
movs
addr16
aam
ins
inc
icebp
sub
ret
cwde
repz
sbb
inc
not
les
mov
ins
scas
add
mov
bound
das
pop
sahf
sub
xchg
imul
rcl
dec
or
in
mov
jne
lods
sub
rcl
cs
push
icebp
sub
jae
data16
push
lods
clc
popf
out
and
cmp
push
scas
scas
jge
mov
ret
mov
push
js
mov
mov
dec
scas
xchg
ret
pop
cmp
mov
add
and
adc
popa
pop
int
sub
aas
cdq
ret
scas
fnstsw
cmps
es
adc
mov
add
sub
xchg
jno
loopne
lods
pop
leave
fimul
adc
adc
lods
jmp
and
imul
mov
cwde
in
adc
sti
nop
xchg
fistp
and
jo
dec
cmps
fwait
xchg
sub
dec
(bad)
fsub
hlt
outs
cwde
add
pop
inc
mov
int
int
ud0
shl
sub
inc
sbb
mov
and
int3
stos
xor
outs
hlt
mov
ds
sbb
mov
dec
cmps
xlat
daa
fdiv
loop
fwait
pop
les
pop
lods
icebp
scas
mov
dec
imul
add
mov
call
cwde
or
push
ins
rol
out
int
in
lock
add
icebp
pop
ds
cld
retf
out
inc
fld
mov
ds
adc
fiadd
es
inc
fs
sub
int
sub
fldenv
and
scas
and
imul
loop
dec
xlat
adc
dec
push
xchg
stc
and
sbb
std
or
repnz
es
xor
add
ja
movs
aaa
ret
dec
(bad)
jge
bound
shl
bound
test
in
inc
xor
movs
xchg
jb
cmp
xor
jl
sbb
pop
fild
and
call
scas
outs
sub
ret
jno
fiadd
sub
sbb
in
xor
push
fwait
xor
(bad)
arpl
das
xor
inc
aaa
nop
stos
ss
pushf
sub
scas
push
mov
dec
loopne
jnp
das
arpl
pop
sub
add
in
test
nop
stos
sbb
pop
js
cwde
dec
push
data16
or
pop
mov
and
push
or
cvttps2pi
jmp
inc
cmc
push
ja
outs
cmps
pop
test
xchg
push
test
jecxz
addr16
lods
mov
(bad)
shl
cmp
dec
push
ds
cmp
iret
shl
addr16
cmps
leave
pop
inc
addr16
fadd
lds
or
lods
addr16
inc
mov
xchg
dec
outs
jae
mov
je
xchg
pop
lods
out
inc
ficomp
mov
loope
fs
cmps
daa
cmp
push
dec
ret
dec
mov
mov
or
imul
inc
in
repz
xchg
pop
push
fistp
pop
adc
xor
hlt
dec
arpl
sbb
sbb
push
push
xchg
out
(bad)
sbb
push
lods
mov
mov
aas
fstp
mov
(bad)
stc
seta
xchg
cmp
js
jnp
(bad)
mov
lods
clc
xchg
(bad)
mov
stos
es
xbegin
cmc
cdq
aam
cld
dec
pop
fnstcw
cdq
add
mov
dec
ins
pop
test
nop
leave
sbb
push
ror
and
in
(bad)
xor
sub
push
pmullw
outs
cmp
call
rcl
pop
cdq
(bad)
pop
aam
or
clc
jnp
or
shr
xchg
pushf
adc
test
fdivr
or
test
push
sub
scas
aas
sub
cld
xlat
cmp
push
xor
(bad)
popa
pop
or
inc
hlt
add
gs
call
mov
cld
or
inc
repz
sbb
into
outs
mov
cmps
fist
inc
loopne
out
je
and
mov
xor
xor
loop
imul
(bad)
lods
pop
xlat
jmp
xor
stos
popf
mov
call
arpl
pop
aaa
es
retfw
pusha
add
fsub
mov
(bad)
mov
xchg
repz
push
sahf
push
push
fldcw
cld
cmp
mov
push
dec
fdiv
ins
and
xchg
or
xchg
adc
add
adc
repz
adc
cmc
jnp
xor
xor
lock
pop
jp
ficom
mov
leave
fst
jp
push
arpl
(bad)
jmp
xor
test
dec
pop
lods
or
mov
pusha
cmp
stos
add
mov
xor
add
cld
jle
mov
pusha
add
sbb
inc
push
mov
into
sahf
lods
mov
das
mov
sub
cmp
mov
pop
xchg
jno
sbb
out
ins
arpl
mov
jmp
cwde
mov
inc
xchg
cmps
popf
mov
cmp
pushf
xchg
and
(bad)
mov
loopne
(bad)
push
xor
pop
adc
les
add
or
pop
gs
hlt
cmp
mov
es
jae
mov
movs
jmp
daa
cmp
ds
or
dec
out
pop
imul
sbb
sbb
inc
jl
add
xchg
jbe
mov
hlt
sbb
call
mov
inc
cmp
inc
(bad)
std
ins
cdq
sub
int
pusha
add
xor
je
xor
ror
push
jnp
push
adc
fist
sub
loop
pop
repnz
pushf
test
out
repnz
pop
sub
popa
jp
outs
enter
push
enter
mov
cmp
call
das
sbb
and
mov
aaa
jle
shr
enter
add
xchg
fstp
dec
into
add
mov
arpl
js
push
cmps
stos
ins
hlt
jbe
mov
loop
push
out
sub
sbb
pop
je
mov
push
mov
mov
or
dec
push
(bad)
xchg
dec
(bad)
movs
sbb
inc
mov
(bad)
pop
jp
adc
daa
push
retf
cdq
fcom
test
pop
pop
xchg
(bad)
and
xchg
outs
je
mov
cmp
push
push
sub
cmps
jmp
call
test
sub
xchg
jae
in
call
mov
add
and
inc
xchg
adc
in
fistp
mov
xchg
push
sbb
gs
or
xor
out
int
int
jnp
ins
jmp
inc
ret
jo
cmp
pcmpgtb
mov
sub
add
popa
and
sbb
pop
(bad)
loope
push
sub
mov
ds
mov
shl
xor
dec
push
into
push
adc
inc
test
fcomp
jecxz
xor
fs
cld
aaa
cmp
into
mov
scas
mov
shr
xor
inc
or
mov
or
arpl
in
push
repnz
mov
xchg
in
mov
mov
outs
call
pop
sub
das
xor
cmp
cmp
pushf
jp
sub
lods
div
inc
dec
in
mov
lods
or
cmp
sub
cmp
push
ret
xchg
or
mov
pop
jle
and
pop
mov
out
sti
shl
xchg
adc
not
stc
push
xchg
cmps
arpl
(bad)
stc
push
sub
or
inc
aas
retf
jge
call
das
mov
into
add
out
jne
mov
call
push
call
dec
ror
xchg
int3
les
jne
push
push
enter
xchg
jbe
inc
fs
jmp
into
icebp
adc
pop
inc
int3
dec
mov
push
lods
xor
aam
fcmovu
inc
retf
push
mov
call
inc
movaps
cdq
(bad)
fidivr
and
out
inc
adc
aam
out
jecxz
jmp
shl
add
outs
add
adc
cld
jle
sub
pop
test
dec
lods
sbb
movs
test
mov
sahf
movs
mov
mov
push
jl
xchg
cmp
jbe
jmp
or
dec
pop
mov
mov
(bad)
jp
test
(bad)
int
out
out
aaa
jmp
dec
js
dec
ins
or
jp
int3
in
xor
(bad)
call
(bad)
shl
fyl2xp1
jle
push
ret
inc
div
or
push
and
test
cmp
sahf
leave
cmp
mov
cmps
call
or
cmp
leave
inc
(bad)
cmp
ret
invd
lds
inc
dec
dec
jle
out
mov
mov
stc
retf
lock
pop
je
clc
scas
dec
loope
rcl
hlt
stos
pop
xchg
daa
cmp
scas
stc
out
push
inc
mov
scas
rcl
(bad)
xor
not
fisub
nop
ins
push
pop
shl
ins
sbb
stos
movs
movs
mov
xor
inc
or
mov
add
stos
push
fadd
and
inc
movs
xor
lahf
jae
add
xlat
jae
outs
(bad)
pop
xchg
test
(bad)
or
adc
cmp
pop
sub
xchg
in
xor
mov
gs
jb
arpl
push
cmp
scas
adc
inc
lock
adc
mov
mov
mov
enter
mov
outs
es
stos
movs
loopne
cli
jp
inc
jb
fist
sbb
and
pushf
sub
mov
popa
jns
adc
sahf
or
aam
push
fcom
lods
mov
dec
dec
push
pop
xor
and
xlat
loopne
pop
jle
cmp
lods
pop
jl
pop
cmp
and
inc
imul
(bad)
repz
cld
push
adc
sub
sbb
cmp
mov
dec
gs
aam
aas
jl
mov
ror
sbb
into
stc
jg
mov
xor
jmp
je
jbe
dec
int3
aas
stc
arpl
mul
scas
loope
dec
mov
push
xchg
jmp
pop
mov
dec
stos
js
aam
loope
lods
xor
jecxz
add
pop
push
push
xlat
out
ins
dec
lods
or
test
loope
mov
(bad)
lahf
in
out
aas
(bad)
(bad)
(bad)
add
fdivr
pop
jmp
retf
adc
jnp
xchg
rol
cmp
push
(bad)
lock
call
repnz
ins
jae
bound
pop
(bad)
xchg
and
(bad)
jp
pop
mov
inc
or
jb
cli
push
mov
jo
movs
shl
fbstp
imul
add
out
lods
push
test
repnz
scas
mov
addr16
loope
xor
jo
mov
call
fisubr
inc
nop
mov
out
hlt
neg
outs
push
jo
cmp
mov
jle
sbb
ret
mov
dec
int3
(bad)
xor
(bad)
jge
sub
lock
inc
xchg
lahf
mov
mov
jle
sbb
sbb
mov
pop
mov
add
cwde
mov
pop
jo
xor
xor
adc
jmp
mov
scas
push
test
jae
loop
inc
lods
lds
cli
stos
mov
ss
lahf
mov
daa
jp
mov
mov
sub
xor
and
pushf
jbe
and
or
ss
push
add
pop
fwait
cmps
and
or
ret
inc
(bad)
pop
push
xlat
daa
sbb
sbb
xor
cmps
shl
mov
mov
es
ret
shl
and
test
mov
pushf
add
rcr
adc
cmp
dec
or
mov
in
sbb
push
mov
mov
int
neg
test
adc
out
fnstsw
pusha
jp
sub
sub
mov
lock
sbb
in
movs
mov
aas
scas
dec
push
push
inc
xchg
aad
loope
xchg
cli
cmp
lods
lock
xchg
jg
std
sbb
pop
sub
mov
lahf
mov
cmp
pushf
cdq
and
adc
je
push
adc
in
mov
push
hlt
in
or
dec
movs
sub
call
imul
xor
cmp
pushf
xchg
(bad)
adc
dec
mov
sbb
pushf
mov
lods
in
test
cmp
aaa
js
ins
fldln2
add
jmp
mov
add
mov
mov
xchg
fadd
outs
je
xor
mov
cdq
je
or
ja
cmps
jo
outs
call
loope
jmp
cmp
sbb
daa
push
mov
scas
jo
jns
cmp
push
ja
gs
repz
fwait
ss
shr
outs
mov
or
repnz
pop
es
push
dec
sbb
mov
add
add
push
hlt
mov
arpl
adc
mov
sub
push
adc
jns
in
xor
pop
mov
jmp
adc
ins
fcomp
inc
jle
sub
sbb
cld
sahf
(bad)
stc
and
popf
and
and
mov
xchg
lock
mov
push
xor
xchg
ins
fild
jecxz
xor
aaa
movs
nop
cli
add
pop
aam
push
sub
test
hlt
sub
xchg
add
not
stc
sub
xchg
adc
cwde
fnstcw
ffreep
add
ins
call
(bad)
ffree
loop
pop
mov
add
sbb
bound
push
xchg
bound
push
int3
dec
test
jmp
imul
test
das
jmp
mov
push
rol
arpl
jo
js
mov
inc
neg
outs
sub
ins
jecxz
and
in
fist
or
pop
cwde
outs
mov
mov
push
adc
rep
jb
jb
fisttp
mov
dec
mov
inc
pop
test
fs
pusha
add
push
mov
or
mov
fs
mov
cmps
pop
dec
xchg
popf
mov
jo
xor
sbb
push
or
stos
cli
popf
movs
movs
aam
cmps
xor
cmps
adc
mov
xchg
cdq
aam
outs
loope
mov
adc
retf
movs
pop
cmp
push
test
fmul
xchg
addr16
push
jnp
or
fwait
pop
popa
xor
imul
pusha
aad
fistp
mov
repz
lahf
sbb
cli
fsub
mov
data16
outs
fwait
aad
push
cdq
stos
loope
aam
sbb
or
cmp
lea
jae
jno
sar
dec
adc
pop
repz
mov
mov
shl
fild
pop
push
es
loopne
xor
dec
popa
movs
rol
pop
push
mov
jl
js
lea
ss
repz
dec
(bad)
int
xchg
scas
xor
hlt
(bad)
adc
sbb
add
(bad)
arpl
inc
inc
mov
xchg
mov
push
fisubr
imul
(bad)
dec
movs
mov
daa
push
jecxz
jle
pushf
dec
inc
fstp
imul
retf
ret
dec
movs
test
pop
loope
scas
lahf
mov
enter
jg
sbb
idiv
aas
ins
xor
movs
ins
push
pushf
add
xchg
std
arpl
iret
xor
inc
and
out
push
inc
push
push
ss
inc
mov
jae
inc
repnz
cmps
lods
aad
movs
adc
inc
movs
call
sub
cmp
mov
in
xchg
push
lds
ror
xor
repz
mov
jo
push
ss
add
and
jp
jbe
out
ficomp
push
sti
clc
ins
push
ins
cwde
daa
lock
shl
cmp
jmp
das
mov
and
es
mov
inc
cmp
add
push
jp
out
popf
fdivp
(bad)
pushw
in
push
mul
leave
sahf
out
dec
push
shl
adc
stc
cmp
sbb
mov
xor
inc
mov
xchg
xchg
mov
jo
mov
xchg
test
dec
xchg
lock
retf
pop
icebp
int3
pop
cwde
rcr
cmp
outs
jge
sub
cli
sub
addr16
xchg
jge
rcl
jp
js
mov
dec
pop
sbb
loop
and
(bad)
(bad)
aam
dec
and
add
push
ss
in
mov
ins
mov
cmp
jl
mov
lds
fmul
dec
cmp
mov
xchg
sub
movs
retf
mov
xor
jmp
adc
push
jmp
mov
jae
mov
mov
fadd
data16
pop
adc
retf
and
test
xor
ds
(bad)
xor
and
mov
mov
stos
sets
data16
call
cmp
fdivr
cmp
push
lods
fsubp
push
pop
(bad)
loop
pop
sahf
jnp
cmp
fxch
jno
rol
and
adc
dec
and
xchg
push
xor
pop
cli
cmps
dec
in
add
adc
dec
lahf
les
lods
mov
scas
and
add
dec
pop
shl
sbb
xchg
adc
sbb
jb
dec
jl
mov
in
mov
pop
int
mov
addr16
imul
jno
xchg
int3
dec
adc
and
cmp
outs
stos
sbb
xor
or
ds
clc
dec
cmp
cwde
or
pop
adc
pop
ret
xchg
push
in
xchg
idiv
mov
inc
into
mov
dec
out
mov
in
sahf
mov
call
lods
cs
push
xchg
add
adc
jbe
stos
sub
xchg
xor
scas
loopne
xor
rcl
in
jg
mov
mov
sti
int
popa
int3
out
push
inc
loopne
cmps
in
mov
sbb
repz
mov
test
jne
xchg
push
jne
push
jg
stos
push
pop
loop
mov
test
push
xchg
ret
pop
std
adc
hlt
pop
imul
pop
bound
in
data16
mov
fs
lods
movhps
test
xchg
add
push
pop
enter
sbb
fimul
and
ffree
test
mov
adc
gs
jno
(bad)
push
add
leave
mov
mov
es
dec
(bad)
ffree
adc
retf
out
sahf
fidivr
push
icebp
add
je
push
pop
mov
xchg
sti
(bad)
ss
lock
inc
into
lock
xor
dec
push
dec
cmp
pop
xchg
pop
sbb
mov
in
jo
test
jl
adc
ret
movs
outs
ja
mov
jge
push
test
inc
ret
mov
cmp
lock
jo
out
mov
mov
cmp
push
js
xor
xlat
sbb
push
enter
outs
cmp
imul
add
and
sub
mov
push
call
pop
lds
push
std
(bad)
sahf
sar
in
dec
jle
mov
bound
sub
fisubr
cmps
outs
ret
push
or
loop
and
add
mov
dec
fisub
push
ret
mov
sbb
add
(bad)
mov
std
call
dec
fisub
cmps
outs
sub
enter
mov
movs
imul
cmps
mov
clc
add
arpl
push
sub
pop
or
jl
push
pop
or
sbb
imul
jnp
sub
push
(bad)
sahf
xchg
scas
fidiv
jmp
or
and
cld
jbe
js
cmp
or
xlat
sub
pop
es
cmp
out
mov
pop
xchg
out
push
adc
aaa
jne
cld
jmp
mov
popa
or
jmp
add
sbb
or
lea
dec
stos
mov
mov
sar
fiadd
shl
je
fdivr
pop
les
jnp
aaa
jmp
out
push
jecxz
nop
push
retf
jb
out
cwde
push
(bad)
lods
cdq
call
fcmovnu
out
jmp
fadd
adc
pop
or
sti
cmp
gs
(bad)
and
imul
pop
shr
jg
pavgb
mov
push
idiv
inc
push
push
fcmovne
loop
daa
fild
movs
arpl
cdq
pop
sbb
setg
mov
sbb
sbb
js
mov
push
pop
pop
cmps
out
rcr
xlat
in
lods
mov
call
in
mov
pusha
pop
retf
fnstcw
gs
or
mov
push
xchg
mov
popa
mov
add
xchg
les
or
pop
(bad)
iret
repz
or
loop
adc
inc
cmp
dec
sbb
shl
mov
push
mov
lods
push
mov
dec
dec
xor
push
pop
mov
jmp
xchg
les
push
sbb
adc
dec
jae
xchg
ret
pop
jno
fcmovbe
(bad)
xor
call
loop
dec
or
leave
pop
cmp
sub
dec
and
das
mov
fcom
(bad)
mov
push
sbb
cmp
sub
sbb
lods
int
mov
sub
frstor
stos
icebp
cli
inc
jo
xor
mov
ins
mov
aam
(bad)
cli
popf
jmp
push
(bad)
leave
imul
iret
retf
xlat
mov
or
sub
push
fistp
popa
dec
push
push
add
add
fsubr
das
aad
jno
and
fimul
xor
cmp
rcl
test
idiv
cmp
sbb
cmp
into
popf
ja
mov
call
or
cwde
sbb
or
jbe
xchg
jb
sbb
inc
jb
sbb
data16
mov
mov
xor
jecxz
pushf
mov
sbb
add
mov
dec
mov
cmps
mov
icebp
fwait
inc
ret
and
xor
mov
and
test
push
idiv
fldcw
in
inc
movs
in
cs
mov
xor
fcom
fcomip
xor
inc
mov
mov
lahf
mov
fcomp
into
std
add
pop
and
outs
cwde
xchg
cld
cmp
ins
ror
xor
cmps
pop
pop
jmp
mov
mov
inc
dec
jae
repz
inc
push
call
js
int
or
jae
stc
outs
cmp
ret
xchg
push
in
in
cli
shl
mov
or
cmp
fnstenv
out
xchg
and
pop
or
sub
mov
imul
xor
mov
jl
add
mov
test
dec
out
mov
xchg
gs
int
hlt
rcr
jno
cmp
shr
cs
cld
cmp
int3
jmp
sub
add
jno
int3
sbb
add
dec
es
nop
stos
repnz
aaa
loope
in
imul
and
jno
dec
int
js
mov
push
fcomp
or
add
inc
push
iret
mov
dec
mov
add
setp
adc
xor
push
inc
ret
retf
inc
jl
(bad)
xor
xor
mov
aas
cmp
mov
sbb
cmp
jo
in
test
sbb
retf
cwde
push
mov
push
xchg
or
mov
xor
dec
ins
mov
pushf
sbb
js
fwait
in
dec
mov
jns
push
and
mov
popf
adc
test
loope
movs
icebp
pushf
shr
inc
jg
inc
or
jbe
inc
cwde
arpl
push
repz
xchg
mov
test
pop
jle
add
dec
je
and
mov
shl
mov
lods
mov
lahf
jno
xchg
pop
mov
pop
jmp
int
outs
sbb
ret
jne
pop
in
imul
(bad)
jne
data16
ins
and
(bad)
pop
jae
imul
xchg
(bad)
repz
dec
mov
xor
imul
repnz
jge
pusha
xchg
mov
mov
pop
cmp
fwait
pop
clc
aad
mov
mov
jb
push
cwde
sbb
jb
push
mov
mov
mov
clc
cmp
loopne
repnz
jne
xor
sub
xchg
and
pop
pop
pop
sbb
mov
repnz
rep
xor
xchg
(bad)
shr
inc
shl
or
movs
ins
dec
loope
mov
aad
stos
sub
mov
add
sub
dec
mov
xchg
pop
cmp
(bad)
push
push
push
pop
add
in
sahf
or
adc
mov
push
xor
push
add
pop
add
imul
call
sti
and
(bad)
dec
push
test
push
aad
ret
shl
adc
sti
retf
cmc
loopne
je
push
xor
add
add
lock
ss
xchg
jbe
adc
mov
not
aam
cs
xor
or
inc
or
xor
aad
in
xchg
repz
cld
xchg
call
push
sub
pop
mov
sti
mov
enter
repz
cmp
sub
cs
sahf
push
stc
push
call
pop
push
xlat
repz
push
fdivrp
add
data16
call
jne
sar
adc
and
es
stc
in
lahf
lahf
icebp
lea
add
pop
call
pop
out
pop
test
adc
mov
and
enter
xchg
ins
cmp
(bad)
push
xchg
dec
es
mov
push
xor
adc
ja
test
loop
cmp
leave
jmp
push
xchg
ret
fwait
hlt
cmc
push
jmp
inc
push
mov
jmp
pop
repz
sbb
or
dec
scas
ror
repnz
jmp
test
cmc
pop
xor
aad
shl
jne
push
xchg
inc
(bad)
jg
lods
pop
and
shl
push
cmc
ret
gs
or
outs
and
pop
or
cmc
cmp
pop
inc
xor
or
repnz
hlt
repnz
rol
adc
mov
or
int
mul
add
fdivrp
shl
or
mov
xor
and
xor
push
mov
push
push
addr16
pop
dec
dec
mov
push
push
fiadd
xchg
mov
ror
or
pop
fstp
xor
cmp
(bad)
jns
inc
mov
push
mov
jbe
ss
ins
push
call
(bad)
popf
(bad)
gs
jl
imul
imul
(bad)
(bad)
std
imul
imul
xchg
jmp
pop
jmp
jnp
loopne
xchg
pusha
inc
cmp
dec
ss
sbb
test
inc
call
jecxz
icebp
aam
dec
aas
scas
bound
or
adc
cmps
jne
xor
js
xchg
lea
iret
pop
pop
adc
(bad)
mov
push
retf
jb
out
jo
mov
sti
jbe
add
mov
sub
push
addr16
sub
mov
inc
sbb
mov
push
pop
pop
mov
pop
out
fmul
out
add
pop
test
shl
fsqrt
inc
add
mov
mov
adc
aad
dec
mov
pop
mov
dec
sar
jecxz
cmp
int
repnz
rol
retf
js
fisub
mov
ins
ss
mov
shr
push
movs
ror
jnp
lahf
pop
sub
dec
fs
repnz
cmc
stos
test
das
add
add
inc
inc
push
retf
arpl
inc
in
jbe
or
arpl
xor
pop
loopne
jmp
das
cli
and
les
ss
dec
ds
xor
(bad)
adc
out
inc
inc
xchg
sub
movs
add
enter
or
pop
adc
add
outs
cwde
cmp
xchg
ds
loopne
cmp
jge
jmp
lahf
dec
jno
es
aaa
mov
lods
fwait
mov
popf
pusha
fistp
xchg
cmp
mov
enter
aaa
cdq
repz
in
xchg
js
outs
add
test
dec
movs
push
and
bound
outs
mov
jl
mov
and
mov
sbb
ficomp
mov
cwde
repz
xchg
out
cwde
or
fld
std
adc
outs
inc
cmp
cmp
xchg
xor
and
or
xchg
inc
or
inc
test
call
dec
mov
enter
outs
fdiv
xchg
push
inc
loopne
adc
adc
or
jmp
or
mov
lds
nop
stos
mov
movs
and
mov
adc
leave
(bad)
enter
mov
shl
leave
sbb
dec
and
int
or
jge
ss
pop
stos
movs
cmp
or
jo
xchg
xor
pop
les
jge
lock
jae
mov
mov
jle
cmp
jnp
mov
inc
add
aaa
jmp
movdqa
inc
aad
mov
cmps
and
mov
mov
out
sub
add
(bad)
mov
push
dec
(bad)
xchg
(bad)
inc
out
in
fs
adc
mov
loope
mov
pop
aam
jo
cmp
jb
add
sbb
retf
aaa
fwait
test
jle
(bad)
(bad)
sbb
rcr
mov
leave
bound
pop
pop
imul
lock
inc
dec
push
pop
int
shl
dec
jns
mov
push
sub
pop
shl
xchg
popa
js
mov
enter
lock
daa
xchg
sub
leave
sti
dec
push
js
lods
nop
mov
mov
jb
les
jmp
icebp
gs
stos
sbb
outs
xadd
lods
das
shr
movs
test
shr
ins
cmc
cwde
rcr
xor
push
jge
inc
sbb
xchg
fldcw
leave
test
and
add
xchg
add
(bad)
(bad)
adc
push
xor
scas
cmp
inc
loop
jbe
xor
lds
sub
and
js
dec
nop
loopne
into
pop
mov
pop
push
sbb
cld
ins
(bad)
gs
add
fisub
add
pop
cmp
jecxz
movs
(bad)
xchg
cmps
jecxz
and
jl
or
test
mov
mov
fst
or
inc
sub
rol
push
inc
jmp
sar
aas
ret
cmp
push
jmp
mov
lea
cs
mov
xor
inc
fcmovu
ret
fdivp
into
xor
test
pop
fs
outs
test
push
iret
sub
mov
out
lea
(bad)
mov
or
and
loop
mov
mov
idiv
int3
popa
lods
xor
or
ret
mov
inc
xor
or
cmc
xor
sar
rcr
or
ins
inc
jp
cmp
rcr
ror
sub
lock
popa
or
xor
sbb
addr16
cmp
xchg
mov
scas
sub
pusha
lahf
mov
push
xchg
ret
dec
cmc
std
mov
imul
dec
test
pop
cmps
add
xor
sahf
shl
outs
push
cmps
fwait
dec
sahf
mov
inc
jno
mov
sahf
pop
jl
push
popf
imul
xchg
fsubr
xchg
addr16
ja
(bad)
test
lds
(bad)
out
xchg
pop
movs
pop
lahf
sete
std
inc
pusha
(bad)
enter
and
aaa
pop
xchg
stos
add
retf
dec
popa
and
cli
jae
(bad)
adc
out
mov
lock
ins
cmp
lahf
fs
cmp
sub
sub
bound
fadd
dec
div
sbb
adc
rcr
sub
cmp
inc
std
push
jns
mov
xor
jbe
std
cmps
mov
cmp
iret
gs
xchg
jns
bound
lods
xchg
popa
sbb
add
xor
add
sahf
(bad)
and
and
push
or
pop
cmpxchg
call
jecxz
pushf
jl
or
xlat
jb
imul
xor
scas
pop
scas
cmps
jp
push
aam
clc
mov
(bad)
lock
in
sub
lahf
je
lds
lea
and
out
push
mov
push
(bad)
jo
jg
jmp
stos
mov
(bad)
mov
nop
xlat
inc
aas
shl
add
xchg
mov
test
inc
jge
add
xchg
add
add
sub
aas
sub
scas
adc
jle
in
inc
clc
arpl
inc
mov
das
cld
into
xor
and
cwde
mov
dec
adc
int3
cmp
xor
mov
int
outs
add
xor
pop
sbb
mov
push
shr
(bad)
scas
sti
add
movs
mov
jl
inc
add
aad
in
and
inc
jnp
pop
adc
inc
mul
aaa
adc
mov
arpl
scas
sahf
aam
or
call
(bad)
out
and
xor
add
cmps
ja
xor
daa
xchg
xchg
ds
xchg
test
std
xor
fiadd
pop
rol
into
call
bound
jno
ss
pop
mov
call
cld
fs
(bad)
int3
pop
adc
scas
popa
dec
add
(bad)
pop
mov
in
pusha
xor
push
xor
int3
jge
stos
pushf
and
shr
fist
xor
leave
data16
mov
inc
xchg
dec
sbb
mov
cwde
ficomp
jg
inc
push
xlat
xchg
or
push
lods
mov
jg
scas
sub
pop
aaa
cdq
jno
popa
test
pop
mov
ror
add
sub
sti
jmp
mov
repz
jmp
push
cmps
and
sub
jne
jne
inc
adc
cmc
cmc
std
ds
adc
shl
rcl
sub
push
push
mov
inc
jmp
in
sub
xchg
sub
je
mov
fadd
mov
or
icebp
test
cdq
push
out
or
jbe
dec
push
fidivr
cld
repz
sbb
jecxz
arpl
pop
pushf
jno
or
or
rcl
cld
jg
push
fidiv
sbb
sub
mov
mov
add
push
lods
pusha
(bad)
sti
dec
or
aad
jns
mov
cmp
jl
or
loop
cmp
aas
cmp
mov
fst
push
repz
inc
jb
inc
or
(bad)
stos
or
push
popa
test
fbstp
xchg
mov
pop
popa
xchg
ins
lock
push
mov
ud1
pop
push
mov
ds
sbb
jae
inc
out
sbb
fdivr
lea
mov
sub
cld
(bad)
sbb
repz
mov
jmp
inc
cmp
in
jmp
cmp
popa
xor
xor
fwait
xor
dec
clc
aas
popf
jbe
imul
pop
pop
in
pop
inc
add
xchg
ds
aam
mov
sbb
or
xchg
(bad)
sub
fcmovnbe
and
ja
mov
push
fsubr
mov
call
sub
dec
mov
mov
fnstcw
ret
shr
inc
aam
jmp
mov
(bad)
div
dec
xchg
add
mov
mov
or
inc
xchg
or
add
and
and
test
or
(bad)
and
(bad)
push
xor
sub
dec
retf
test
xchg
pop
dec
(bad)
into
aaa
xor
shr
sbb
outs
fnstsw
cld
jbe
push
push
xor
ins
repnz
dec
inc
scas
hlt
mov
imul
aam
xor
jmp
out
repnz
pop
lock
dec
inc
sbb
add
ss
jmp
and
sub
push
dec
cs
sahf
fistp
lahf
out
cmc
ds
mov
mov
test
or
mov
(bad)
cs
scas
dec
or
dec
pop
lock
mov
pop
fs
sub
imul
(bad)
repz
inc
imul
(bad)
adc
aam
outs
sub
push
(bad)
cmp
sbb
dec
sbb
or
lea
mov
mov
inc
out
nop
aam
mov
outs
jmp
cmp
sbb
idiv
out
pop
jl
in
push
dec
inc
mov
cdq
lds
mov
mov
jns
dec
mov
xor
dec
dec
dec
js
add
nop
dec
loopne
jo
xor
retf
push
sub
loopne
mov
inc
dec
and
sbb
mov
std
jmp
cmp
mov
pop
sbb
mov
neg
sbb
js
xor
(bad)
call
mov
mov
popf
bound
fs
sub
sti
jmp
(bad)
jae
shl
test
xor
cwde
dec
scas
or
shr
lahf
jns
out
(bad)
jno
into
and
xchg
rcl
sub
nop
lds
mov
and
bound
xor
cmc
sub
jl
loopne
jne
cmp
mov
out
in
add
loope
stos
jnp
xchg
cli
jae
sahf
mov
jmp
clc
cld
ja
stos
clc
jb
mov
bound
add
jb
fsub
mov
ins
jle
test
pushf
test
and
sub
mov
add
push
(bad)
cli
arpl
push
sub
adc
gs
out
inc
xor
jae
jb
ins
(bad)
out
cmp
std
add
mov
pop
leave
std
and
mov
push
rol
and
fimul
mov
call
jg
test
inc
addr16
mov
adc
and
sub
mov
xor
xor
daa
in
stc
lods
xchg
pop
pop
mov
jb
fs
sbb
cli
mov
int
mov
adc
pop
add
gs
mov
push
sub
xor
and
vandps
rol
shr
loope
shr
movs
mov
ds
dec
fmul
and
ret
test
adc
mov
xor
and
jmp
cmp
sub
pop
mov
xor
xchg
cmps
xor
mul
in
lock
pop
retf
xchg
std
dec
or
add
test
mov
scas
pop
pop
dec
cwde
jl
mov
cmp
push
dec
into
fnstsw
jb
mov
push
cmp
jmp
je
cdq
jns
fistp
in
scas
push
cmp
sub
stos
pop
out
or
or
(bad)
mov
retf
add
fucomp
les
sbb
xchg
or
xor
push
xlat
jp
or
js
jne
pop
cmps
jns
fwait
jno
retf
mov
fdivr
cdq
in
and
cmp
addr16
sbb
mov
jmp
adc
(bad)
lea
jle
jb
jmp
cmps
les
xor
add
scas
sub
jne
out
lahf
push
jmp
aaa
retf
pop
les
fcmovnb
push
sti
xor
mov
aad
mov
rol
push
call
sbb
les
inc
jge
clc
xchg
shl
test
fwait
lea
push
push
mov
pop
and
jl
in
mov
out
add
sbb
stos
jno
jl
add
inc
shl
jecxz
sub
or
sti
adc
sbb
sub
aaa
inc
repnz
ins
sbb
arpl
retf
in
mov
mov
arpl
fidivr
xor
in
outs
push
mov
test
or
fld
fnsave
aam
mov
es
xor
or
cmp
xchg
mov
out
add
sbb
dec
jb
push
repz
jmp
mov
inc
aad
icebp
movs
outs
leave
jae
ins
rol
sbb
mov
lods
jl
shl
push
mov
jae
repz
jno
stc
xchg
xchg
iret
sbb
cmps
leave
(bad)
or
aad
add
or
les
jmp
shl
push
cmp
(bad)
cmp
leave
cmps
pushf
jmp
xchg
inc
mov
dec
outs
sub
jbe
shl
xchg
sub
jbe
cmp
cmps
inc
dec
mov
lahf
movs
adc
call
push
inc
xchg
inc
mov
mov
seto
not
mov
or
inc
data16
daa
pusha
aad
push
sbb
test
loope
and
jmp
mov
xor
and
dec
stc
out
pusha
out
out
mov
clc
retf
inc
inc
test
sub
fwait
dec
xchg
pop
or
pop
jmp
sub
add
push
(bad)
call
outs
or
adc
sbb
imul
pop
mov
rcr
add
movs
jmp
pop
int3
pop
mov
cli
pop
cmp
mov
mov
and
(bad)
jb
jb
call
or
shr
cmp
xor
push
lahf
xchg
and
pop
sti
pop
rol
stc
and
(bad)
cmp
repz
xchg
fcom
in
cmc
es
dec
sub
icebp
(bad)
rol
fmul
or
jns
cmp
xor
push
popa
or
add
inc
push
mov
ins
add
or
popf
loope
idiv
into
mov
jle
loopne
sbb
clc
ret
ins
push
or
dec
cs
mov
sbb
stc
ins
ror
rcr
mov
and
out
jno
je
sub
sub
daa
int
dec
sahf
out
xchg
push
shl
sbb
xchg
fs
loop
jle
jnp
inc
mov
mov
shl
scas
or
push
imul
out
mov
mov
push
arpl
or
fwait
out
dec
test
ret
aam
push
and
jb
mov
pop
int3
jne
jecxz
push
xchg
push
cmp
ror
je
mov
add
(bad)
mov
(bad)
outs
cwde
sub
add
sbb
test
es
push
cmc
outs
movs
inc
cmc
pop
aas
test
scas
push
cli
jo
jbe
iret
add
push
fisubr
std
cld
out
mov
adc
out
inc
scas
and
xchg
jmp
xor
cld
in
pop
push
inc
or
and
mov
jbe
mov
inc
aam
xchg
sub
repz
aam
push
lods
and
in
mov
pop
xchg
outs
test
xor
xor
in
fsub
out
mov
fwait
(bad)
xchg
mov
outs
push
js
push
stc
lds
lock
into
xor
je
jg
mov
push
in
imul
jmp
retf
dec
les
push
out
je
inc
pop
std
cli
fidiv
push
adc
stos
pop
jmp
cmp
jp
fistp
adc
lock
loop
sbb
mov
xchg
test
lea
div
stos
out
je
xlat
push
mov
(bad)
mov
lds
frstor
xor
pushf
xor
pop
mov
xchg
fs
xor
lods
jmp
das
lock
sar
out
add
std
shr
push
dec
and
xchg
jge
sbb
push
test
cmp
retf
push
cld
adc
ret
dec
popf
repz
ret
cmp
call
sub
mov
xlat
pop
(bad)
cmp
sbb
mov
jmp
xlat
cmps
cmp
sahf
fs
jg
ss
ss
loope
cs
cli
xor
into
lahf
lock
dec
mov
aas
xchg
es
mov
push
imul
test
test
mov
scas
cld
loop
jmp
lods
out
iret
jnp
pop
mov
mov
std
sbb
sbb
cmp
push
imul
fldenv
jge
outs
xchg
int
cmps
shr
fisttp
mov
push
mov
jo
imul
rcl
add
test
pop
das
push
test
cs
add
in
sub
push
movs
sub
leave
sub
mov
outs
adc
les
jbe
into
(bad)
push
loopne
pop
(bad)
mov
xor
mov
(bad)
retf
pop
or
bound
inc
xchg
jno
outs
mov
pushf
mov
jecxz
cli
(bad)
outs
xchg
ret
cmc
lds
pop
cmp
pop
or
int3
bound
push
mov
inc
mov
ins
int3
mov
movs
adc
imul
sar
ret
int3
add
rcl
dec
ja
inc
mov
pusha
movs
mov
xchg
mov
push
push
dec
or
in
pop
std
jmp
jne
sbb
fnstsw
xor
sub
dec
outs
dec
enter
sub
sbb
popf
cmp
cld
xor
lock
js
shr
movs
jo
movs
sti
xchg
jbe
call
sub
(bad)
mov
gs
mov
dec
fcmove
imul
adc
cmp
xor
pause
popf
inc
and
js
dec
loopne
jg
pop
jmp
test
sub
pop
inc
mov
xchg
sbb
and
jnp
xchg
neg
pop
pop
add
inc
and
xor
pop
aas
adc
retf
xchg
add
cmp
and
jno
mov
or
mov
mov
cli
call
aaa
out
jge
push
sub
pop
hlt
(bad)
pushf
inc
jae
push
das
pusha
aaa
sub
adc
push
push
mov
movs
inc
fs
scas
jno
sbb
lea
lods
dec
xor
pop
(bad)
mov
inc
in
ror
ficomp
mov
mov
and
cdq
adc
xchg
mov
int3
fisttp
xchg
pop
inc
data16
cmps
adc
in
enter
shl
fiadd
adc
iret
out
push
pop
cwde
mov
xor
test
cmp
imul
sbb
inc
mov
loop
fisubr
cmp
sub
sub
pop
out
(bad)
xchg
push
scas
jg
retf
call
or
jnp
sbb
sbb
fiadd
inc
(bad)
ins
add
cli
rol
cs
sbb
enter
add
sbb
imul
and
cmps
ins
(bad)
cmc
lods
jb
sub
sbb
(bad)
push
or
retf
aas
pop
pop
pop
lods
xchg
dec
les
dec
sbb
lea
and
xor
jbe
and
adc
cmp
pushf
push
movs
test
fild
sub
jg
cld
outs
in
dec
xor
add
adc
push
and
sub
mov
nop
mov
or
sub
pop
(bad)
imul
jo
repz
jns
cdq
fdiv
jge
movs
sti
in
js
(bad)
iret
sub
pop
xor
mov
bound
mov
outs
sbb
xchg
jle
scas
push
jns
push
addr16
and
nop
scas
ror
or
sbb
cmp
mov
cvttps2pi
xchg
mov
add
jb
push
add
xchg
jo
dec
mov
xor
adc
push
sbb
mov
mov
jge
in
and
clc
shl
pop
add
ins
lea
pop
dec
(bad)
mov
into
ja
(bad)
jle
mov
fist
xchg
loopne
jl
movs
stos
push
inc
gs
mov
fist
pop
lods
and
mov
sub
mov
pop
clc
repz
in
scas
leave
and
push
sbb
mov
pop
sbb
jge
sub
in
mov
aad
clc
pop
int3
repz
xor
ins
ins
aas
and
sbb
xchg
mov
stos
mov
repnz
mov
adc
or
pop
test
add
or
inc
mov
cmps
add
pop
test
or
adc
jecxz
pop
call
dec
push
test
sub
and
lock
das
pop
or
push
dec
repz
and
(bad)
icebp
sbb
jg
mov
cld
out
sub
mov
test
stos
dec
inc
xchg
test
out
jbe
ret
adc
pop
sahf
dec
jmp
sahf
dec
sub
and
mov
mov
ret
fisttp
sbb
jae
cmp
xchg
stos
cmp
add
mov
fbstp
xor
mov
xchg
stc
dec
jbe
inc
push
fst
sbb
retf
std
clc
sbb
retf
pop
dec
fild
je
mov
repz
das
sbb
or
aas
fcomp
cmp
dec
test
mov
pusha
ja
popa
sti
aas
mov
mov
fdivrp
inc
es
mov
inc
sub
test
push
sub
jmp
xor
mov
inc
loop
jmp
scas
(bad)
fs
dec
jae
mov
pop
sahf
ins
retf
xor
fwait
es
or
dec
dec
lahf
push
das
xchg
sub
call
xor
int3
inc
jnp
push
and
int
pop
lds
movs
pop
push
push
retf
rol
mov
jg
jmp
inc
push
xchg
push
out
test
jbe
test
mov
pcmpeqb
outs
pop
(bad)
mov
xchg
call
mov
sbb
push
leave
clc
push
bound
idiv
jo
jb
idiv
out
cmps
test
cli
je
repz
jbe
mov
or
jle
movs
ret
and
mov
and
sbb
ret
clts
add
adc
push
or
xor
jbe
dec
sbb
push
jnp
jecxz
lods
js
jl
adc
jge
outs
test
mov
cmp
mov
out
mov
or
mov
int
and
adc
push
mov
test
data16
dec
mov
mov
out
pop
mov
(bad)
faddp
pop
cs
jae
jb
push
dec
push
jmp
call
(bad)
cld
cwde
sub
or
(bad)
dec
dec
(bad)
(bad)
loop
scas
add
leave
rol
xchg
fisubr
jmp
je
xor
jne
push
dec
xor
icebp
pop
xor
cwde
mov
jle
pop
int3
mov
lds
iret
xchg
push
outs
xor
movs
pop
stc
das
test
mov
repz
frstor
idiv
mov
jl
cmp
mov
es
mov
or
bound
jns
cmps
out
pushf
inc
push
out
movs
mov
ror
jb
dec
in
mov
add
lock
aaa
(bad)
not
pop
adc
fiadd
ror
cmps
(bad)
aad
out
push
enter
addr16
xor
xchg
sub
mov
or
retf
push
add
imul
adc
sbb
cdq
mov
mov
jns
sub
imul
cmp
add
cld
pop
rol
push
pop
outs
gs
popf
js
sbb
push
cmp
into
cwde
add
cmp
mov
call
(bad)
call
retf
test
mov
lods
loop
out
outs
in
idiv
and
mov
sahf
mov
mov
das
loop
mov
sub
jns
jle
sub
jmp
lods
fisttp
icebp
jae
inc
scas
adc
stos
dec
jne
inc
int
cmp
inc
fisttp
rcl
jg
sub
jb
push
mov
sub
dec
loopne
popa
cmps
inc
lods
push
shr
cmp
or
fistp
add
jecxz
xor
or
fs
jmp
or
jge
jno
call
std
cld
retf
rcr
pop
enter
arpl
stos
movs
jl
xor
xor
out
test
mov
test
stos
xor
imul
xchg
mov
in
adc
popf
and
clc
and
push
push
int
xor
in
es
into
push
xor
sbb
ins
jno
add
xchg
and
call
dec
fwait
jmp
popf
daa
dec
inc
mov
je
mov
xor
sub
xchg
or
adc
push
pop
push
div
xor
pop
pop
push
fsubr
xchg
(bad)
sbb
add
xor
out
inc
sub
push
in
xor
int
cmc
cmp
push
mov
test
xchg
shl
fdivr
sbb
cmc
or
xchg
pop
or
pop
adc
(bad)
out
cmps
add
mov
out
test
inc
mov
outs
retf
aam
xor
mov
push
imul
sahf
xor
loope
xor
mov
pop
je
mov
in
mov
push
push
mov
sub
stos
into
dec
or
mov
stc
mov
or
gs
sub
jb
call
dec
sbb
jnp
(bad)
pop
dec
mov
inc
jnp
bswap
sbb
in
mov
sbb
cs
mov
mov
xor
retf
retf
adc
stc
cmp
push
jb
sub
inc
cs
adc
clc
dec
rcl
jle
mov
outs
hlt
xchg
outs
into
js
out
movs
sub
clc
ret
call
retf
pop
xchg
inc
stos
fcomi
mov
sub
push
jo
adc
shl
pop
dec
xor
xchg
stos
cmp
aaa
data16
bound
mov
adc
dec
fisubr
je
outs
or
and
push
and
push
and
sub
in
inc
sbb
test
mov
outs
dec
jg
xlat
mov
leave
bound
pop
pop
pop
fldenv
pop
xchg
clc
retf
and
mov
js
dec
add
test
test
out
sub
dec
add
add
cmp
imul
add
cmc
pop
fdivr
adc
imul
out
pop
fisubr
aam
and
sar
jbe
jle
lahf
add
add
dec
cmp
fwait
mov
lahf
movs
retf
dec
xor
popf
adc
xchg
mov
mov
fld
ficomp
and
push
icebp
cmp
outs
lds
and
pop
(bad)
loop
xchg
inc
mov
test
push
xchg
mov
loope
cmp
shr
int3
or
xor
pop
cmp
fbld
out
mov
ins
stos
mov
or
test
pop
mov
xchg
outs
leave
fwait
inc
dec
nop
adc
dec
icebp
jp
inc
pop
out
retf
mov
mov
int
add
repz
push
cmp
ins
retf
dec
mov
nop
ss
popf
xor
mov
xor
inc
aas
mov
movs
add
push
xchg
inc
retf
jle
xchg
fxch
fstp
and
out
fwait
daa
pop
mov
loop
push
mov
xor
retf
add
fild
test
sqrtps
xchg
movs
and
(bad)
fst
mul
and
mov
loop
test
pushf
or
mov
jb
fwait
(bad)
pop
aad
leave
push
mov
jle
add
scas
or
push
xchg
aad
pushw
popa
push
popa
out
push
pop
mov
cmc
jo
dec
fs
pop
jnp
push
es
and
jmp
daa
adc
retf
popf
adc
popf
rol
xor
jmp
push
out
mov
inc
stos
ss
add
sar
inc
rcl
adc
mov
(bad)
lods
cmps
push
stos
mov
jl
imul
and
mov
std
repz
ins
add
sub
aaa
jb
adc
movs
jmp
and
popf
or
nop
in
es
xchg
push
imul
test
dec
ret
adc
int
or
add
jbe
loop
icebp
js
jmp
inc
mov
pop
xchg
rcl
jle
mov
sub
imul
mov
lods
xchg
xchg
jl
xor
std
scas
sub
sub
xor
xchg
xor
push
xor
leave
push
push
lahf
adc
xlat
test
outs
cld
add
ror
fcom
pop
jb
cmc
cdq
add
sar
add
push
fld
xchg
std
push
push
scas
stc
xlat
mov
in
(bad)
jbe
sahf
test
sub
sbb
(bad)
and
enter
xrelease
int
cmp
or
sbb
xor
jne
xor
jbe
repnz
xor
test
cli
and
leave
mul
push
mov
xor
leave
jge
pop
in
not
int3
cwde
daa
or
adc
cmp
vunpckhps
hlt
push
mov
fisubr
jbe
mov
dec
add
shl
repz
int3
js
out
pop
dec
test
test
sub
aad
pop
sub
loop
pop
data16
lahf
xor
dec
ror
dec
or
lock
mov
dec
mov
rcr
rcr
push
jnp
adc
xor
inc
js
or
mov
pop
mov
pop
les
xchg
mov
cli
adc
add
cmp
xchg
pop
adc
mov
popa
stos
push
mov
mov
jl
aaa
jg
shr
dec
sub
jae
daa
push
xor
fnstcw
sub
ficom
inc
(bad)
in
(bad)
icebp
push
into
and
pop
jnp
jg
fcom
mov
repz
inc
sbb
int3
mov
scas
lea
cmp
and
inc
sub
inc
jmp
jno
jbe
sub
and
inc
dec
or
or
sbb
sub
mov
out
jns
adc
sbb
push
in
push
sbb
adc
mov
jo
sti
jbe
stos
dec
push
mov
xor
jae
adc
mov
movs
in
test
pop
sbb
mov
mov
lds
popa
add
and
cs
pushf
addr16
push
stos
xor
in
fldz
jp
sub
fcmove
je
in
repnz
xchg
mov
rcr
mov
xchg
stc
xchg
(bad)
mov
xchg
push
fadd
call
bound
lea
xchg
nop
repz
xchg
retf
ds
xor
sbb
or
jg
je
inc
out
(bad)
into
and
into
jno
enter
pop
push
lods
sbb
sbb
sbb
inc
into
mov
dec
rcr
sbb
fild
or
push
not
push
sbb
or
or
enter
ror
cmp
push
push
ret
fs
inc
push
lods
add
imul
pop
xor
xchg
adc
lds
bound
sbb
or
mov
dec
adc
mov
add
push
mov
ficom
add
stos
cmp
imul
xchg
test
adc
jmp
sub
popa
in
jne
add
sahf
shl
mov
ds
add
mov
ficomp
sbb
inc
xchg
or
in
lea
inc
ss
fs
stos
fsub
pop
std
retf
neg
mov
mov
xchg
jl
jns
xchg
hlt
(bad)
iret
bound
call
das
popa
mov
add
fcom
add
sahf
add
clc
adc
mov
push
aad
dec
dec
sar
pop
(bad)
cmp
and
adc
sub
adc
sub
test
in
stos
push
les
int3
stos
push
push
mov
bound
pop
xor
cmps
je
and
push
in
(bad)
dec
cli
and
cli
int3
or
lds
stos
mov
cli
jnp
sbb
mov
shl
sbb
and
pop
sub
cmp
sbb
xor
repz
ffree
jl
popa
and
cmc
popf
push
add
mov
in
xchg
div
xor
xor
sbb
mov
adc
std
int
or
or
and
loope
scas
jo
mov
or
or
mov
pop
xchg
jo
popa
addr16
iret
or
cmp
or
fs
add
lods
pop
jp
out
and
imul
ffree
call
push
mov
add
les
jnp
xor
sub
mov
rcl
(bad)
push
push
sub
inc
adc
daa
jecxz
pop
ins
ins
cmps
js
mov
or
mov
loope
movs
in
add
mov
push
mov
adc
imul
aas
out
lds
ficom
cmp
xor
sub
clc
fist
jmp
or
imul
add
sbb
call
mov
fld
call
xor
mov
pop
mov
push
push
cwde
inc
push
dec
dec
sub
retf
jo
into
sub
fild
fidivr
mov
xor
inc
bound
or
jmp
dec
xlat
adc
xor
in
xchg
sub
cdq
movs
movs
adc
gs
xor
and
inc
mov
sbb
shl
mov
aad
outs
adc
xchg
jns
ret
pop
xchg
inc
(bad)
pop
call
rol
and
ret
sub
sti
test
sbb
clc
je
xor
stos
rcr
sbb
xor
test
and
stos
push
(bad)
jg
dec
aam
and
mov
stc
or
sbb
es
das
jle
dec
es
push
push
add
push
sub
and
sub
not
push
mov
and
retf
push
xor
(bad)
imul
icebp
sbb
repnz
fild
add
in
xchg
and
jns
and
mov
ror
jl
sbb
loop
inc
or
add
sbb
sbb
sahf
lock
sbb
es
je
retf
sub
push
(bad)
mov
fwait
mov
jg
jl
aam
mov
cmps
adc
and
push
fwait
or
stc
out
pop
ins
mov
mov
repz
mov
inc
push
mov
sbb
clc
shl
aam
cld
movs
jno
jg
adc
into
pop
movs
sub
cmc
dec
push
clc
cmp
inc
into
or
(bad)
enter
mov
leave
lahf
mov
ss
popf
jns
push
mov
xor
adc
or
leave
jg
into
ret
rol
stc
(bad)
dec
xchg
mov
in
pop
mov
pop
pop
jb
sti
movs
add
dec
cmp
aam
mov
or
inc
cmps
pop
fwait
not
test
(bad)
push
dec
imul
sbb
and
push
outs
jg
fnstsw
inc
jg
jl
stos
(bad)
(bad)
fldcw
(bad)
and
es
inc
(bad)
mov
fmulp
fistp
mov
pop
ss
out
(bad)
push
jns
xchg
add
sub
sbb
mov
pop
(bad)
movs
add
sbb
push
xchg
xchg
push
(bad)
ss
pushf
in
mov
aam
loop
das
shl
ss
jecxz
jnp
rcr
or
pop
mov
mov
and
clc
sar
sbb
xor
lahf
inc
pop
sub
popa
lods
popa
fsubrp
push
rcl
mov
int
dec
pop
arpl
dec
sti
fidiv
pop
cdq
(bad)
sbb
(bad)
cmp
dec
xor
mov
out
add
hlt
jle
xor
inc
mov
mov
and
dec
clc
inc
sbb
lock
test
sar
(bad)
loope
mov
sbb
inc
std
clc
mov
pop
push
xor
stc
(bad)
ins
icebp
mov
xor
daa
jne
mov
jle
sti
push
mov
pop
cmp
push
sub
and
sbb
inc
or
std
mov
add
cmp
sbb
aam
je
in
cmps
pop
in
push
aaa
cli
test
push
mov
sbb
sub
lahf
push
add
sub
cli
aad
wrmsr
xor
dec
fs
dec
xor
ja
out
sahf
and
mov
test
jae
je
cmc
es
inc
aad
or
mov
pusha
in
ja
lods
das
stos
in
stos
pop
fdiv
les
data16
dec
sbb
mov
dec
cmp
xchg
xchg
xchg
mov
jl
and
mov
sar
stos
mov
stos
mov
jmp
retf
mov
sbb
enter
or
mov
inc
pop
fld
mov
fwait
jmp
push
and
cmp
sub
and
repnz
add
mov
adc
add
nop
fcos
test
jo
dec
cdq
out
in
sbb
xchg
retf
dec
hlt
cmps
cmp
jg
mov
in
xchg
add
and
mov
adc
mov
xchg
sahf
call
push
mov
or
mov
out
push
rcl
gs
xchg
xlat
call
pop
jecxz
and
cwde
(bad)
push
push
ret
and
stos
lea
les
xchg
xor
out
ds
push
cmp
addr16
or
frstor
ss
or
adc
mov
mov
xchg
pop
push
pop
mov
aam
inc
cmps
mov
mov
cmps
xor
adc
les
push
pop
shr
test
in
cmp
push
dec
shr
jnp
sar
mov
push
(bad)
push
mov
imul
pushf
div
add
lock
sub
dec
push
hlt
call
repz
inc
cmps
xchg
scas
gs
stos
in
addr16
outs
pop
ins
(bad)
sub
dec
rcr
pushf
add
retf
int3
or
jmp
inc
or
call
mov
mov
pop
or
outs
inc
(bad)
in
add
push
loopne
lods
js
mov
nop
pop
fsubr
cmps
mov
cmp
xchg
mov
pop
sub
div
fild
adc
jmp
stos
retf
mov
sub
loop
jle
ins
jbe
sub
cmps
jp
sub
pop
mov
push
outs
push
pop
push
or
and
xchg
dec
cmps
(bad)
fldcw
mov
lds
sbb
sub
popa
or
jbe
(bad)
retf
icebp
loop
pop
int
ins
shl
outs
adc
pop
aad
ret
dec
clc
dec
std
lahf
xor
add
sub
cmps
rcr
or
inc
xor
movs
jmp
enter
leave
adc
push
xor
xchg
pusha
stos
cwde
repz
into
ins
mov
pop
push
jne
nop
push
lods
and
(bad)
ss
push
mov
or
xchg
dec
xchg
inc
or
jns
push
adc
push
inc
dec
int3
cmp
mov
(bad)
out
push
cli
push
sub
mov
push
(bad)
in
add
xor
mov
pop
cmp
scas
sahf
or
and
xchg
inc
jae
jecxz
push
(bad)
jbe
xchg
pushw
iret
out
cmps
inc
or
jne
pop
push
jae
add
les
(bad)
sti
push
mov
jge
repz
fcmovu
out
sub
aad
mov
push
xor
jg
mov
into
scas
ss
adc
fmul
ss
jo
outs
cmps
mov
imul
or
mov
jmp
push
mov
fs
mov
push
mov
push
push
or
ret
push
js
iret
jge
sbb
and
push
adc
mov
or
xor
icebp
cmc
push
push
shl
aad
pop
or
stc
jne
into
mov
movs
jmp
mov
loopne
push
jns
adc
sar
fmul
or
push
inc
xor
(bad)
out
es
jmp
dec
and
jne
xor
push
nop
xchg
push
out
jbe
test
add
xor
stos
xor
jge
jbe
lahf
and
mov
adc
or
popf
in
or
push
dec
bound
fiadd
sub
push
pop
jns
mov
xor
shr
xor
lods
mov
cli
jbe
mov
cld
cmp
mov
in
dec
loopne
es
mov
mov
and
rcl
xchg
xor
and
sbb
cmp
adc
cli
repnz
push
sub
dec
pop
cmps
cmp
les
jge
sbb
out
int
inc
je
jp
pop
fdivr
mov
xchg
mov
jle
dec
jecxz
rcl
test
loop
mov
fist
xchg
sahf
iret
cld
ins
iret
mov
jnp
retf
test
(bad)
arpl
data16
xor
mov
xor
lahf
shr
inc
lds
cmp
(bad)
enter
movs
iret
push
pushf
test
sub
lock
dec
jae
rcr
mov
out
mov
cmp
sub
xchg
outs
out
call
push
cmps
xchg
push
inc
mov
ret
mov
xor
push
cmp
clc
add
loope
gs
call
sbb
inc
shl
push
in
mov
fdivr
fsubr
jmp
cmp
xchg
adc
cmp
stc
dec
push
clc
lods
and
call
mov
ret
nop
out
iret
adc
out
pop
into
xor
fild
jmp
(bad)
in
sbb
mov
add
pop
mov
ins
int3
mov
xor
in
adc
pop
mov
inc
in
leave
inc
call
mov
lods
push
and
retf
arpl
push
push
sub
fild
js
jbe
xchg
xor
mov
inc
mov
sub
fiadd
fcom
mov
into
pushf
cdq
add
add
push
xor
sbb
repz
ret
adc
pop
xchg
pop
and
push
int
icebp
mul
nop
daa
cmp
imul
cmp
add
ss
or
or
enter
das
mov
(bad)
movs
sti
call
add
(bad)
cmps
daa
clc
rcl
pusha
gs
std
dec
or
add
std
and
fld
and
in
loopne
or
or
dec
pop
sub
test
and
out
popf
xchg
adc
xchg
or
jge
fdivr
sti
inc
dec
daa
fisubr
mov
push
mov
cmc
mov
call
cmp
inc
scas
sub
in
ss
repz
and
lods
inc
sbb
pop
gs
add
jmp
and
inc
pop
and
add
fwait
ss
cmp
cmp
xor
mov
outs
addr16
inc
cmps
jmp
cmp
mov
sub
or
daa
cmps
jne
mov
cli
ret
lds
add
pop
or
dec
jb
pop
cwde
dec
push
cmp
and
pop
xor
dec
xor
leave
cli
test
cmp
or
inc
ss
cli
shl
test
push
out
xchg
jl
adc
addr16
mov
pop
xchg
sbb
xchg
or
push
push
jne
cmp
sbb
dec
loop
adc
outs
movs
(bad)
stos
adc
or
fld
jns
or
cs
push
inc
mov
mov
test
sbb
fdiv
pop
jno
pusha
cmp
mov
sbb
test
fldenv
popf
xchg
sbb
push
pop
rol
fld
mov
hlt
mov
cld
xor
pop
iret
repz
push
leave
sbb
int
xlat
call
xchg
add
fyl2xp1
mov
mov
das
jb
dec
call
sahf
jmp
xchg
dec
aaa
sub
cmp
cmp
in
movs
fbstp
lahf
fsub
je
das
inc
jle
ret
repz
(bad)
scas
sub
shl
mov
inc
fist
xor
mov
ss
sub
lods
ss
xlat
sar
sub
xor
enter
shr
xchg
adc
push
mov
clc
(bad)
fisubr
loopne
cmps
retf
cmps
or
repz
mov
cdq
sub
fdivp
and
push
lods
into
(bad)
push
and
imul
mov
jle
push
add
sbb
cmp
cmp
cmp
mov
xor
ficomp
push
jge
in
sbb
call
xor
bound
mov
int
sbb
jb
fild
stos
ja
sub
test
sahf
sbb
dec
(bad)
sahf
enter
sub
in
lahf
cmps
dec
ins
push
ins
push
cdq
adc
fcomi
xchg
ret
(bad)
mov
rol
sbb
out
pushf
inc
(bad)
jbe
pop
fisubr
inc
pop
aam
sbb
mov
push
daa
and
shl
nop
(bad)
adc
call
xchg
xor
out
mov
pop
add
shl
sti
repnz
xchg
cld
inc
(bad)
shl
hlt
add
loopne
adc
test
pop
add
aad
push
pushf
jb
mov
stos
inc
or
dec
fild
push
pop
pusha
das
cmp
mov
lods
fbstp
test
mov
dec
or
mov
test
retf
sar
gs
mov
mov
mov
sbb
ret
jmp
hlt
enter
and
in
lahf
mov
push
dec
pop
sbb
push
ins
or
pushf
jo
inc
or
(bad)
push
hlt
inc
inc
jne
push
mov
pop
adc
inc
xor
cdq
pop
retf
cmp
jo
popf
ins
out
fdivr
inc
fbld
movs
and
fwait
xchg
(bad)
out
add
push
mov
sub
dec
fistp
mov
inc
inc
jmp
add
aad
add
adc
xchg
call
and
loop
mov
cli
sbb
ret
ret
dec
dec
outs
out
and
fbstp
push
sub
neg
dec
mov
add
sbb
out
jge
stos
lods
cld
jno
dec
(bad)
iret
add
repnz
daa
add
(bad)
pop
cmp
rol
ret
or
fnstcw
in
js
bound
push
add
in
push
shl
jno
jae
mov
pop
retf
sbb
stos
jecxz
push
mov
int3
xchg
jle
sbb
cmps
dec
cmp
add
cli
or
cmp
dec
inc
inc
fld
push
ds
or
fwait
adc
jl
mov
mov
push
sub
cdq
movs
je
mov
(bad)
xor
cmp
adc
test
add
jp
cmc
push
(bad)
(bad)
fbld
cmps
idiv
cmp
xlat
push
js
ds
mov
(bad)
clc
mov
mov
not
dec
out
add
(bad)
repnz
mov
fwait
cmp
push
into
and
adc
jmp
mov
shl
mov
mov
ss
mov
pop
clc
push
rcr
inc
sahf
add
and
mov
call
(bad)
mov
ret
xchg
cli
je
mov
pop
fldenv
into
out
nop
cmps
pop
ins
(bad)
into
scas
fisub
or
ret
sub
adc
dec
adc
add
xlat
int
jmp
push
mov
sahf
fimul
cmp
add
xor
inc
mov
jne
push
repz
jns
aaa
sub
lods
push
inc
pop
loopne
fsubr
or
xchg
cmps
inc
sbb
cmc
push
imul
xor
sbb
sub
push
mov
imul
push
sbb
call
pop
or
sub
(bad)
mov
lock
loopne
sub
and
cmp
inc
daa
push
in
sub
std
xchg
test
iret
jae
mov
(bad)
jmp
movs
push
aaa
(bad)
call
push
sar
stos
xor
ror
mov
cmp
fiadd
adc
cmp
mov
cmp
inc
fs
mov
or
xchg
outs
or
xchg
mov
mov
xor
retf
inc
xor
or
cmps
fisubr
mov
je
push
outs
(bad)
repnz
inc
push
mov
or
dec
adc
out
mov
and
adc
push
test
push
or
dec
popa
jne
mov
iret
inc
inc
js
arpl
retf
test
xor
add
dec
inc
ret
in
dec
rcl
or
and
mov
mov
inc
sti
rcr
sti
xor
xor
xor
adc
out
es
mov
(bad)
push
add
(bad)
ja
std
ds
add
jns
ja
scas
addr16
fst
push
pop
dec
pop
test
(bad)
cmp
cmp
push
enter
adc
inc
(bad)
lahf
mov
sub
adc
ss
fdiv
icebp
inc
sahf
push
shl
fcomp
ret
and
sbb
sahf
pop
mov
cmps
inc
mov
cmp
push
xor
ficomp
dec
and
push
arpl
or
call
std
cmp
lods
cmps
hlt
pop
sbb
repz
call
scas
dec
pop
jne
cs
arpl
sub
push
scas
bound
sub
jbe
dec
call
test
mov
shr
add
and
cmp
pop
mov
test
icebp
pop
inc
inc
rcl
outs
pop
mov
mov
test
cmps
outs
dec
cmps
jno
inc
adc
push
int3
lods
adc
repnz
jns
sbb
inc
js
xor
add
jns
std
aaa
inc
sbb
call
hlt
dec
lds
adc
stos
outs
out
out
out
inc
pop
jnp
ss
adc
aam
outs
adc
jecxz
mov
inc
pop
mov
xor
test
lods
and
dec
out
mov
mov
xchg
and
or
mov
dec
xlat
push
jg
mov
cmp
shr
test
push
aaa
cmp
mul
mov
jmp
cwde
imul
push
or
mov
cmp
psubusw
xchg
rol
sub
fs
ins
aam
and
sub
dec
xor
retf
jge
mov
(bad)
lahf
sub
push
and
fisubr
pop
pop
adc
and
or
jno
cs
and
cmp
push
fsub
dec
call
sti
leave
ss
retf
mov
in
xchg
push
mov
test
lods
or
cmp
and
cmp
sbb
repz
fs
push
push
add
lahf
or
mov
add
retf
add
scas
and
cli
cs
cmps
loopne
std
inc
mov
adc
push
sub
jbe
jne
lahf
fwait
pushf
jge
fsubr
jp
bound
inc
cli
lds
pop
pop
inc
cmp
bnd
(bad)
mov
nop
ret
loope
sbb
mov
inc
fisttp
shl
retf
daa
sub
mov
xchg
xlat
adc
xchg
xchg
jecxz
jp
hlt
sub
sti
sub
xor
lock
sbb
dec
popf
ds
jbe
ret
pop
movs
sar
mov
mov
xor
inc
push
inc
xor
lahf
(bad)
out
call
mov
stos
std
cmp
jle
fs
aam
pop
fwait
movs
movs
loop
outs
push
sbb
push
xor
shl
xor
push
lods
sub
or
cmc
sub
cmp
mov
pop
repz
rcl
popf
fdiv
mov
jmp
xchg
jb
sbb
add
xchg
test
or
shl
xor
jbe
rcr
inc
in
jp
push
adc
das
xor
pop
in
pop
out
adc
adc
frstor
cmp
ror
les
inc
gs
mov
jge
mov
inc
gs
jno
push
push
sbb
or
shl
lahf
xor
fimul
xchg
daa
sub
pop
ret
call
ret
pop
loopne
cmp
lea
int3
arpl
push
shr
out
push
xchg
lahf
push
add
ss
movs
daa
imul
sub
inc
dec
stc
les
nop
push
pop
pop
xchg
pop
mov
xor
test
outs
in
adc
std
aad
out
sub
jno
aam
data16
jl
xchg
dec
mov
mov
dec
cmp
sbb
mov
or
mov
xlat
lods
add
pop
add
retf
xor
cmp
bound
dec
push
adc
test
mov
gs
sbb
sub
and
movs
xor
inc
ret
cmp
dec
sub
mov
pause
aas
dec
dec
inc
and
jbe
mov
ror
adc
in
xchg
add
loopne
test
into
(bad)
push
xchg
jo
retf
cmp
ds
sub
pop
mov
fstp
(bad)
repnz
scas
rcl
xchg
mov
enter
push
jmp
mov
mov
cmps
adc
sub
jne
mov
cmps
inc
in
xor
js
repz
xchg
pop
and
pop
dec
sub
scas
push
pop
imul
inc
lock
or
daa
push
idiv
fnstenv
rol
addr16
xchg
inc
test
mov
or
jl
sahf
jbe
pop
cwde
fdiv
test
cdq
xor
cs
cmp
xchg
jecxz
pop
cmc
fistp
nop
lds
or
mov
loope
mov
outs
int3
jmp
mov
add
dec
push
pop
cmp
jo
jp
pop
clc
jle
jg
cmp
out
psubsb
enter
push
mov
cmp
or
pushf
test
and
test
dec
mov
sub
out
dec
sub
sti
ret
ss
pop
cmps
xchg
dec
dec
and
aas
mov
xchg
arpl
mov
(bad)
in
mov
stos
add
leave
scas
jno
pop
mov
cmp
(bad)
rol
add
int
ds
in
imul
scas
pop
in
mov
push
mov
rcl
ins
ror
adc
inc
pop
fs
mov
cdq
in
pop
jge
shr
xchg
sub
xchg
mov
inc
daa
push
pop
xor
int3
movs
push
xchg
add
int3
test
or
xchg
ss
dec
inc
push
and
sbb
fmulp
dec
sbb
push
sar
fcom
stos
mov
push
mov
in
add
sub
mov
or
dec
test
add
fimul
into
push
(bad)
jmp
and
retf
dec
xchg
imul
xchg
mov
xor
xor
pop
and
fld
imul
or
sti
sbb
mov
push
sahf
stos
in
cmp
jmp
push
xchg
adc
dec
mov
cmps
js
push
jo
inc
jge
fsub
inc
data16
adc
cmps
lock
inc
xor
arpl
out
push
add
out
jge
cmps
add
and
jmp
xchg
lahf
mov
dec
cli
inc
mov
pop
aam
out
popf
out
push
ins
cmp
lea
sbb
or
hlt
pushf
mov
push
xchg
inc
dec
rcl
xchg
add
loope
or
mov
retf
and
inc
mov
cmp
mov
or
cs
mov
xchg
mov
ficomp
stos
int3
ins
dec
sbb
or
mov
icebp
xchg
push
scas
aas
mov
cmp
into
push
addr16
push
mov
pop
push
fucom
xor
xchg
cmp
mov
push
addr16
jns
sub
xor
xchg
div
jb
adc
jl
mov
in
and
inc
lods
mov
jne
inc
cld
cmp
mov
inc
iret
in
inc
stos
and
clc
(bad)
mov
daa
cmp
in
ja
or
mov
push
xor
pop
dec
xor
outs
cmp
rcr
pop
retf
mov
jnp
cs
in
scas
imul
popf
mov
cld
dec
cmp
dec
add
retf
cmc
fs
pop
(bad)
imul
jno
stc
inc
aas
inc
mov
jo
in
pop
fcomp
mov
sub
fcmovne
or
loope
mov
mov
xchg
das
test
fisttp
sti
bound
mov
pop
pop
jb
or
dec
inc
aas
(bad)
fcom
loopne
je
call
add
jb
inc
xor
add
add
and
mov
(bad)
mov
call
jnp
out
hlt
ds
data16
add
stc
jmp
int
rcr
or
leave
in
aaa
push
mov
xor
pop
cmps
xchg
lea
push
stos
sub
and
fs
xor
mov
daa
and
out
shr
mov
mov
mov
xor
cmp
cdq
mov
imul
cmp
cmp
pop
out
lods
popa
leave
es
mov
jle
xchg
sub
repnz
iret
push
xchg
jns
rcl
jmp
push
xchg
loopne
xor
out
pop
jb
(bad)
jge
add
adc
sbb
mov
xor
dec
xor
inc
cmp
imul
add
xchg
mov
shr
je
mov
lods
stc
mov
bnd
leave
jns
mov
pop
sar
mov
inc
xor
xchg
xor
(bad)
cmps
in
dec
aas
je
inc
and
repnz
imul
retf
fxch
mov
dec
inc
sbb
retf
pushf
sub
jle
mov
pop
into
stos
mov
jae
xor
in
movs
dec
stos
cmp
mov
xchg
test
out
imul
std
aaa
cmp
fidivr
jge
push
sub
mov
push
xor
sbb
sbb
sbb
xchg
dec
pop
and
mov
push
inc
loopne
pusha
jmp
scas
sbb
mov
mov
cwde
adc
mov
xlat
popa
std
lods
add
add
and
mov
xchg
jno
nop
fisub
loopne
xlat
adc
clc
idiv
xor
es
rcl
clc
mov
inc
das
mov
sub
mov
mov
xor
loopne
jge
ss
cld
and
mov
sbb
imul
imul
inc
aad
xor
mov
or
sbb
sub
rcr
sub
das
test
icebp
xor
loopne
add
lea
sub
es
arpl
bound
(bad)
scas
ss
idiv
jecxz
scas
mov
jne
fwait
es
push
and
jl
fld
sbb
outs
xor
sbb
inc
repnz
stc
xchg
pop
mov
ret
and
retf
mul
cmp
cmc
jge
repnz
mov
and
out
xor
imul
les
dec
fs
xchg
dec
int
sar
mov
jmp
retf
jl
stc
push
sbb
cmp
mov
mov
mov
lea
sub
add
inc
pop
jge
test
mov
outs
enter
out
xor
shl
es
ss
adc
push
not
mov
pop
xchg
ins
adc
jge
mov
ret
(bad)
mov
jmp
ret
fbld
out
inc
dec
or
daa
xor
call
sub
sti
es
mov
lea
dec
fld
cmp
icebp
pop
enter
xor
mov
jns
int
mov
outs
inc
jmp
call
pop
cmp
out
clc
sbb
retf
sbb
xor
sbb
pop
adc
aas
(bad)
sub
pushf
lahf
jl
pop
call
out
mov
and
adc
call
retf
dec
and
test
ror
ins
nop
push
dec
and
imul
aas
sbb
mov
xor
push
cmc
ja
pop
or
add
out
jecxz
jp
pop
fldenv
lods
int
inc
dec
xchg
cld
push
fld
inc
push
push
adc
fmul
cmp
cmps
push
test
fist
mov
jp
imul
mov
scas
popa
lock
mov
or
dec
ins
pop
icebp
adc
adc
mov
adc
mov
retf
lahf
repnz
mov
sub
adc
xor
out
mov
lock
aas
xor
cmp
in
jle
out
ficomp
jg
mov
mov
xchg
pop
push
cs
inc
sbb
dec
jnp
imul
cwde
ret
cld
(bad)
test
test
cmp
mov
stos
inc
sbb
call
lods
aam
mov
sti
jle
sub
ss
xchg
mov
inc
xlat
and
jae
sar
adc
jne
push
mov
scas
mov
mov
or
dec
sub
xchg
mov
bound
call
enter
fsubr
data16
fild
mov
repnz
div
push
mov
adc
hlt
test
mov
cmp
loopne
hlt
lea
jbe
sti
cmps
enter
cli
vpunpckhwd
jnp
(bad)
js
ret
ins
les
mov
ins
or
dec
dec
jmp
(bad)
fadd
stc
cld
or
fdiv
jmp
sahf
cmp
loope
xchg
sub
sahf
and
ins
xchg
test
lods
push
retf
mov
cld
push
jnp
int3
xor
out
outs
jo
pop
js
lods
in
out
ret
ins
pop
pop
scas
(bad)
fwait
rol
rcl
xor
push
fcom
test
dec
mov
inc
out
cld
ror
sub
shl
ret
xor
sar
dec
(bad)
(bad)
jl
std
pusha
xlat
and
or
and
int
inc
sbb
jecxz
mov
or
xchg
mov
xlat
inc
(bad)
add
aad
push
mov
inc
inc
stos
shl
sbb
and
xor
fisub
inc
xchg
idiv
imul
push
mov
xchg
jbe
ja
sbb
psubusb
cld
sbb
push
pop
mov
and
pcmpeqd
loopne
and
dec
test
pop
jg
scas
imul
rcl
push
mov
dec
mov
mov
fs
daa
fdiv
adc
push
das
xchg
jns
push
test
test
je
je
cmps
loope
shl
adc
dec
(bad)
(bad)
stc
scas
sub
out
outs
sahf
sub
test
xchg
fstp
fs
inc
mov
ds
sbb
sub
mov
cs
imul
jg
adc
fcomp
jge
js
fstp
sub
mov
pop
loope
js
mov
leave
mov
mov
popa
inc
cdq
out
movs
mov
nop
sub
dec
test
enter
mov
sbb
mov
pop
mov
mov
inc
inc
fisttp
xor
lock
add
aam
pop
inc
call
in
sbb
mov
jo
and
das
dec
ficomp
js
pop
cmp
inc
scas
jmp
repz
inc
adc
pop
adc
call
xlat
scas
clc
inc
cmc
movs
stos
jg
mov
adc
ret
popa
push
int3
repnz
loope
push
iret
add
jbe
add
and
fisub
add
dec
lods
jne
sub
fdivrp
ss
dec
cmc
push
xchg
dec
adc
sbb
lahf
jb
jg
in
cld
stos
mov
pusha
sub
js
dec
push
xlat
fld
mov
fwait
inc
mov
js
xchg
out
xchg
push
cmps
dec
push
rcl
xlat
mov
sub
push
leave
and
into
nop
call
fld
xchg
test
pop
ficomp
push
mov
ins
fidiv
les
sti
or
jle
inc
hlt
xchg
loop
pop
cmc
stos
mov
leave
mov
fistp
mov
and
dec
mov
fld
mov
out
sti
(bad)
push
xchg
xchg
rcr
scas
outs
jnp
lods
jbe
movs
(bad)
adc
stos
lahf
sbb
out
sub
enter
imul
jae
fucompp
mov
(bad)
in
xchg
cs
lock
shl
jbe
xor
xchg
cmp
xchg
cmp
sub
and
cmp
outs
fstp
cwde
inc
mov
loop
cmp
jle
jns
push
scas
xor
push
fnstcw
jle
cmp
fdiv
adc
rcr
sub
add
xchg
xchg
or
mov
enter
jmp
(bad)
jbe
adc
mov
xchg
mov
push
gs
or
dec
rol
xor
push
mov
fwait
jnp
xchg
(bad)
loop
sbb
movs
and
dec
adc
call
dec
push
mov
iret
or
mov
loopne
pop
push
in
sbb
adc
mov
lahf
(bad)
es
sar
and
(bad)
rcr
sbb
xchg
cmp
mov
loopne
nop
inc
push
mov
test
or
es
and
push
sub
sub
mov
lds
in
sar
(bad)
adc
push
mov
adc
fstp
pop
frstor
rcr
mov
pop
cmp
out
inc
jp
push
(bad)
fcmove
xchg
mov
jo
cmp
pop
jge
push
dec
test
xchg
mov
adc
lods
div
jmp
or
sub
mov
in
movs
stos
mov
cld
mov
loopne
jle
fst
pop
sub
clc
sbb
mov
repnz
rcl
or
xchg
out
and
pop
fdiv
imul
push
mov
call
mov
pusha
xor
xor
stos
pop
mov
mov
jno
add
jmp
sbb
cdq
cli
ja
shr
jbe
fcmovb
pop
sti
mov
int
dec
stos
or
arpl
out
aas
mov
adc
cmp
shl
pop
cld
or
xlat
jg
mov
(bad)
lock
sti
gs
ror
stos
sub
daa
jmp
(bad)
ja
or
xchg
stc
ins
cmps
xchg
mov
adc
fcom
pop
call
mov
inc
cmc
push
mov
ins
shl
es
push
mov
sub
cs
data16
xchg
mov
in
jno
xor
ja
(bad)
out
repz
jmp
ins
les
arpl
fst
test
mov
sbb
or
lea
mov
iret
cmovae
push
cmp
movs
repz
xchg
movs
ret
cmps
neg
fistp
or
(bad)
fcom
mov
sub
adc
nop
hlt
mov
aad
stos
icebp
clc
out
mov
das
cmp
dec
in
mov
pop
mov
jp
mov
into
pusha
or
sub
cmp
cmps
inc
xchg
sbb
iret
inc
lahf
push
xchg
idiv
xchg
mov
dec
adc
cmp
out
adc
retf
ror
rcr
cmp
and
mov
push
and
test
stos
clc
nop
nop
sahf
cmc
adc
cmp
push
inc
arpl
dec
sub
dec
shr
jmp
cmp
scas
rol
ret
pop
popf
aad
nop
inc
xor
or
mov
push
or
mov
repnz
adc
(bad)
jecxz
mov
and
mov
repnz
pslld
js
inc
rcl
or
mov
jae
fadd
xchg
pushf
dec
xchg
xchg
lods
xlat
pop
jmp
cmpxchg
imul
mov
pop
mov
xchg
sub
push
in
test
sbb
push
jmp
cmovs
pop
int
into
push
sbb
cs
mov
xchg
and
mov
inc
xor
fiadd
dec
mov
arpl
add
lods
cmp
push
jnp
add
push
jns
jl
pop
pop
and
icebp
jge
cmc
ret
popa
out
mov
and
pop
or
and
getsec
jnp
sbb
and
out
fneni(8087
dec
sbb
xor
mov
jno
sub
mov
xor
mov
shl
cli
sbb
xchg
(bad)
sub
je
jae
mov
(bad)
into
mov
(bad)
sahf
sbb
loopne
xchg
xchg
mov
xchg
inc
fbld
ss
ja
data16
pop
sbb
iret
aaa
mov
and
loopne
add
xor
lods
pop
mov
cmc
jns
(bad)
call
(bad)
cli
mov
(bad)
mov
xor
and
mov
sbb
out
lods
adc
inc
sub
or
jns
out
mov
mov
bound
mov
movs
dec
push
aas
pop
pop
sub
push
fsub
mov
test
adc
add
or
enter
(bad)
fld
cmps
inc
xor
imul
adc
jl
and
call
mov
sub
jecxz
lods
or
push
adc
(bad)
push
jmp
ficomp
sub
sbb
jb
data16
jecxz
es
jbe
mov
mov
pop
shr
add
jmp
pop
mov
loop
xchg
sar
jbe
mov
mov
or
sub
stos
sub
inc
adc
push
jns
lods
sbb
sahf
test
cmp
es
mov
add
or
aaa
mov
sbb
loopne
out
retf
adc
enter
jl
imul
clc
stos
pop
cmps
lods
prefetchw
jle
fidiv
out
pop
mov
jg
mov
sub
push
repz
in
clc
fmul
xlat
mov
scas
inc
xor
push
xor
adc
or
stos
jp
mov
sar
push
mov
pop
jge
clc
mov
je
push
push
cmps
push
in
int
xchg
and
es
cmp
aas
das
xchg
push
(bad)
mov
in
sub
mov
add
daa
jg
ds
sub
ins
mov
or
add
lds
mov
mov
dec
imul
pop
dec
inc
add
leave
test
jns
pusha
int3
inc
mov
pop
mov
ror
je
test
inc
shl
xchg
fcomi
lahf
pop
push
in
xor
and
pushf
mov
imul
jmp
mov
mov
pop
mov
sahf
mov
sahf
xor
dec
fstp
push
in
push
pop
inc
fadd
mov
push
fild
dec
xchg
data16
es
mov
mov
not
cmp
fwait
sbb
in
ja
xlat
xchg
std
add
lds
cmp
pop
into
jns
cmp
les
leave
sub
imul
out
fmul
daa
xor
sbb
cmps
sahf
jp
mul
mov
push
cmp
sub
int
jmp
std
pop
leave
or
xchg
mov
jg
mov
loope
sbb
div
repnz
or
lahf
push
bndstx
xchg
jno
cwde
sub
shr
sbb
mov
and
(bad)
jns
inc
jae
adc
popa
lods
add
xchg
in
xchg
jl
dec
push
push
retf
repnz
sbb
repz
fst
and
cmp
dec
(bad)
fild
mov
ds
add
sar
in
mov
mov
pop
(bad)
lods
cmp
cmps
ins
jae
pop
jb
out
pop
(bad)
jmp
sar
mov
addr16
mov
ret
xchg
(bad)
aad
push
xchg
(bad)
std
pop
or
fs
xchg
mov
mov
inc
gs
cmc
cmp
mov
ins
sbb
cmp
or
jnp
dec
cmp
push
adc
fadd
cld
adc
daa
jmp
retf
into
jg
xor
sti
mov
imul
mov
jp
cwde
ja
out
inc
jae
scas
gs
mov
or
dec
pop
push
(bad)
call
addr16
push
or
es
or
lahf
rcr
out
xchg
xor
adc
adc
push
pushf
rcl
outs
push
jbe
sbb
int3
jo
test
dec
lea
push
jle
inc
in
aam
sub
mov
lods
sub
and
mov
add
repnz
sbb
dec
aas
add
in
mov
add
sti
push
xchg
cmp
sbb
aas
jbe
xor
cs
cmp
retf
in
xlat
int3
fwait
stos
xchg
fsubr
out
cli
cli
push
pop
sbb
add
ins
push
adc
(bad)
cmp
adc
and
add
in
push
les
mov
sbb
adc
(bad)
jmp
aad
movs
mov
adc
add
mov
(bad)
fdiv
jbe
sti
mov
push
cmc
adc
lahf
sti
cmp
mov
or
fsubr
addr16
jmp
mov
retf
sbb
mov
pop
mov
and
jle
mov
dec
cmp
inc
mov
mov
movs
ffree
xchg
clc
aas
sub
lods
(bad)
mov
sbb
sti
jp
mov
xor
and
bound
cld
xchg
arpl
mov
scas
fxch
bound
add
neg
jl
sbb
mov
push
lods
(bad)
fdivrp
iret
add
dec
adc
jl
lds
rcr
mov
(bad)
outs
xchg
push
hlt
jecxz
fist
ins
loop
aam
mov
ret
movs
push
mov
div
jmp
xor
jl
(bad)
fsubr
ds
clc
rcl
xor
adc
pop
outs
mov
push
dec
xchg
push
push
fldenv
and
mov
ficomp
arpl
pop
push
stc
loop
jae
mov
jg
mov
pop
iret
in
ficomp
call
mov
mov
das
push
int
jbe
ins
sbb
jb
push
aaa
adc
cdq
inc
les
in
add
jb
mov
xchg
sub
sbb
adc
mov
ss
mov
xchg
or
add
cli
nop
jmp
rcr
(bad)
jecxz
sbb
adc
stc
pop
xchg
popa
call
jno
and
cmp
out
fstp
and
push
xchg
cmps
lea
mov
lods
cmc
sub
into
imul
jnp
inc
das
scas
inc
lea
mov
inc
popa
ja
es
pop
ret
(bad)
fs
pop
test
in
loopne
pop
stos
in
stos
dec
inc
lock
jo
clc
jae
shl
std
out
push
pop
dec
mov
ss
push
push
out
inc
or
out
ins
adc
movs
arpl
sbb
cs
repnz
inc
add
jae
shr
shl
cmc
jne
retf
addr16
push
xor
xchg
stos
push
push
jge
aad
fs
pop
mov
dec
das
adc
nop
popa
mov
mov
xor
mov
(bad)
data16
test
inc
mov
pop
ins
mov
mov
dec
mov
ret
in
mov
mov
mov
mov
ja
fsubp
out
mov
push
mov
push
jb
imul
mov
call
int
or
push
sbb
aam
push
or
out
push
or
inc
jecxz
aas
outs
dec
int3
stos
in
jo
jg
sbb
sbb
sub
ficomp
in
mov
sbb
nop
pop
int3
cwde
cmp
xor
cmp
lods
test
and
or
adc
test
jo
fist
dec
xor
mov
out
(bad)
jne
cmps
adc
paddq
fs
mov
or
add
ja
or
xchg
loope
fld
fsubr
sbb
mov
jmp
in
fadd
shl
in
aad
add
sbb
iret
sbb
xchg
jmp
mov
xchg
shr
repnz
in
mov
push
(bad)
fcmovne
dec
sbb
into
and
dec
and
sbb
or
pop
jo
cmps
add
jbe
xchg
and
int
inc
test
call
and
mov
(bad)
pop
int3
cli
aas
into
sar
push
push
lock
sbb
or
clc
mov
mov
dec
push
push
xor
cmp
adc
mov
(bad)
mov
push
cmc
mov
mov
cmp
ret
jne
add
hlt
sbb
or
pop
in
pop
(bad)
adc
lds
addr16
inc
and
adc
cmps
sti
rol
iret
pushf
lods
lods
test
int3
push
xor
adc
inc
popa
cld
in
xor
add
cld
aam
add
clc
stos
lock
and
rcl
fucomip
mov
add
dec
(bad)
mov
ret
push
(bad)
imul
xor
xlat
dec
push
xchg
xchg
xchg
xor
mov
fcmove
inc
sbb
jmp
repnz
pop
cmp
xchg
ret
mov
dec
jge
pop
xchg
push
dec
pop
sbb
out
cmp
int
push
add
in
xchg
pushf
pushf
fild
push
cwde
mov
ds
pop
repz
dec
mov
repnz
cmp
jbe
push
adc
shl
pop
(bad)
gs
mov
sbb
dec
in
adc
js
enter
cmp
pop
add
xor
jg
xchg
pop
arpl
rol
dec
mov
in
pop
sbb
or
cs
call
jns
out
pop
out
xchg
call
lds
adc
push
xor
jp
push
je
ins
mov
adc
cdq
std
cmp
loopne
inc
fist
or
aaa
push
pop
leave
pop
jmp
sub
je
loope
movs
mul
mov
or
in
jne
sub
mov
xchg
push
(bad)
rcr
(bad)
push
mov
xlat
mov
pusha
adc
mov
call
lods
int3
jmp
jl
jb
mov
mov
dec
aas
call
cmp
dec
lods
and
hlt
loope
jle
in
pop
outs
rcr
jge
xchg
int3
sbb
loope
aad
push
(bad)
pusha
mov
xchg
and
pop
ins
lea
mov
xchg
imul
gs
sub
cmp
mov
jnp
dec
xor
sbb
call
push
pushf
sub
sbb
popa
dec
cwde
test
sbb
shr
sub
add
rcr
cmp
and
out
jmp
stos
dec
stc
ret
call
mov
stos
popa
lock
cld
into
das
pop
mov
ret
aad
and
jo
fld
mov
repz
cs
(bad)
jmp
movs
mov
add
ret
lods
into
int3
push
iret
mov
(bad)
sti
out
and
mov
inc
cmp
sbb
stos
outs
mov
mov
jne
sbb
(bad)
out
aas
and
mov
cs
fwait
dec
loop
add
dec
and
dec
xchg
xor
rcr
and
jecxz
adc
movs
pop
(bad)
fmul
hlt
xchg
mov
movs
iret
jmp
std
pusha
push
inc
sahf
jl
push
and
mov
stos
out
das
dec
sbb
adc
or
frstor
enter
mov
lods
xchg
daa
xor
stos
jge
mov
popa
dec
adc
mov
pop
xor
xor
retf
test
mov
call
pop
pop
cmp
rcl
pop
sbb
ficom
int
mov
dec
jae
retf
ret
fsub
jmp
mov
call
in
ret
in
cmp
sbb
or
hlt
pop
cli
inc
xor
and
mov
push
imul
cmp
mov
cs
cdq
add
cmc
and
cmps
xor
inc
test
cmps
retf
fld
mov
push
call
cs
add
xlat
(bad)
jp
dec
sub
jae
pop
inc
mov
repnz
cli
stos
jle
js
add
xor
fs
cmp
movs
pop
adc
in
add
xor
mov
test
aam
push
push
jg
pop
sbb
sti
xlat
aaa
test
xchg
push
repnz
das
mov
mov
mov
in
dec
xor
mov
js
mov
cmps
sub
inc
retf
adc
loope
adc
fcomp
lods
push
add
sbb
cmps
pop
mov
inc
in
jmp
sbb
add
add
cmp
jmp
mov
mov
or
add
daa
add
retf
xor
iret
xchg
xchg
and
xor
stos
sbb
ja
cmps
fisubr
adc
daa
lahf
imul
adc
aaa
ror
xor
out
sbb
sahf
mov
xor
sti
les
addr16
and
dec
dec
cmps
sub
repz
or
sbb
lods
and
div
out
mov
shl
inc
dec
test
cld
dec
ins
inc
push
push
(bad)
imul
neg
pusha
sahf
push
inc
and
lar
aam
push
cmp
xchg
out
stc
mov
mov
ds
int
push
adc
leave
test
shl
(bad)
repz
cwde
aas
and
imul
mov
ror
mov
shr
ror
(bad)
std
xchg
mov
xor
and
mov
cs
sbb
sbb
aad
sub
adc
sahf
retf
push
inc
in
and
add
(bad)
adc
jp
cli
dec
mov
das
xor
daa
push
adc
xlat
pop
je
arpl
mov
or
fs
je
cmps
jmp
shr
retf
push
gs
mov
or
pop
inc
(bad)
sbb
cmps
mov
or
xchg
cmp
sbb
imul
jg
ins
add
mov
out
pop
sbb
add
arpl
fwait
std
sti
daa
sbb
add
jge
lds
mov
movs
cwde
inc
in
imul
into
ror
adc
mov
add
jecxz
cmp
scas
mov
mov
xchg
add
nop
out
nop
jp
(bad)
sbb
cmps
aad
ins
in
inc
sub
leave
mov
loopne
inc
or
push
pop
pop
dec
fimul
mov
lock
fabs
inc
xchg
fmul
scas
mov
(bad)
add
dec
pusha
dec
lods
mov
xlat
lds
ins
mov
ins
in
outs
imul
pop
jl
xor
pop
adc
dec
cmp
adc
imul
loop
movs
cmp
inc
ret
xchg
out
pop
add
data16
cmps
fistp
into
xlat
fwait
xchg
push
xor
cmp
cmp
inc
push
ret
jle
push
mov
and
pop
and
(bad)
(bad)
mov
lods
cld
pop
xor
mov
mov
pop
ja
inc
jb
adc
cwde
loop
inc
jecxz
sbb
or
imul
movsx
cld
mov
pusha
xchg
mov
jo
or
mov
sub
stos
sbb
mov
add
cld
sbb
fmul
add
sub
pop
sbb
inc
sbb
push
cmps
(bad)
nop
sbb
in
fabs
mov
xchg
lahf
dec
enter
gs
jns
mov
stos
shl
or
aam
cmp
daa
or
fcomp
push
push
in
fwait
dec
scas
loopne
mov
and
or
adc
test
fistp
mov
sbb
xchg
in
test
aas
jns
or
repz
sub
cmp
inc
push
popf
adc
add
pusha
xor
add
(bad)
std
push
sub
pusha
inc
pop
pop
push
jae
xor
ds
call
mov
cmps
push
adc
cdq
xchg
pop
push
movs
sbb
jne
jp
arpl
bound
outs
and
mov
sub
mov
mov
loope
or
ror
xor
sub
into
out
push
div
mov
cmps
fmul
or
or
loopne
out
inc
add
add
sub
pop
mov
xor
sub
pop
cmp
test
mov
div
loope
mov
cdq
mov
addr16
in
push
mov
imul
mov
push
mov
out
inc
pusha
(bad)
jo
xor
add
dec
bound
fistp
outs
xor
mov
rcl
xor
dec
xor
inc
out
cmp
pop
mov
int
cs
jno
cmp
cwde
ret
fnstcw
mov
jnp
sub
jg
fisttp
jbe
jle
adc
mov
push
lahf
cmc
xchg
lods
std
imul
cmp
test
sahf
push
cwde
inc
or
ss
push
in
xchg
or
icebp
lea
cmp
loope
jbe
shl
repz
cmp
mov
out
les
pop
or
imul
dec
cwde
icebp
ret
fsubr
adc
je
mov
fwait
rol
mov
jae
in
xchg
shl
mov
push
stos
push
out
and
test
out
retf
pop
pop
sbb
leave
jl
jmp
inc
retf
repnz
fwait
inc
and
add
pop
loop
push
fidiv
pop
sbb
out
xor
sahf
lahf
mov
inc
ins
xlat
inc
movs
movs
in
rcr
push
adc
(bad)
mov
stos
inc
fs
push
fwait
push
shl
mov
(bad)
fiadd
sbb
retf
shl
call
xor
test
out
movs
repnz
sub
push
int3
pop
loopne
scas
pop
nop
xor
pop
lea
cmp
jbe
adc
mov
mov
and
jbe
and
sahf
ficomp
popa
adc
fld
addr16
and
push
add
sti
mov
inc
bound
aam
pop
imul
rol
pop
dec
xchg
mov
test
and
sbb
cli
mov
jmp
rcl
dec
stos
pop
cmp
inc
mov
retf
in
(bad)
jecxz
and
sub
sti
popf
sbb
loopne
out
cmp
popa
sar
pop
lock
jb
into
push
adc
lds
loope
jne
icebp
cmps
cmp
(bad)
pop
scas
dec
fld
lds
xchg
pop
shr
push
adc
out
ds
call
xor
pop
ins
pop
sbb
xor
lods
test
jecxz
loopne
call
or
iret
aad
or
pop
add
jle
enter
ret
stos
mov
in
add
(bad)
aad
pop
cmps
loopne
mov
and
outs
pushf
mov
add
cmps
loope
and
fmul
ficom
out
mov
or
mov
neg
test
ja
(bad)
cld
sbb
not
ins
push
ror
jo
jg
aad
(bad)
outs
mov
jb
mov
shr
scas
mov
sbb
jge
loope
pusha
push
xchg
xor
sbb
inc
jmp
test
adc
retf
push
sub
retf
and
mov
ins
imul
sub
lahf
rcr
cmp
movs
sbb
jnp
lods
push
test
push
rcl
pop
xchg
ja
xor
fistp
push
and
lahf
cmp
lods
and
pop
inc
mov
cmp
and
dec
and
mov
mov
(bad)
sbb
jbe
lea
add
js
lahf
dec
inc
sbb
fisub
xchg
mov
mov
xchg
jg
fistp
mov
mov
lods
lahf
add
ja
inc
out
add
or
ins
and
retf
add
(bad)
fist
imul
test
dec
aaa
mov
and
jns
adc
cmp
push
mov
mov
outs
push
and
mov
fisubr
pop
call
jnp
mov
ror
sbb
and
or
pushf
(bad)
and
dec
stos
dec
in
add
imul
mov
aad
mov
pop
in
xor
loop
jge
in
add
jge
pop
mov
cmp
mov
adc
js
js
cmp
inc
inc
jmp
or
mov
shl
sub
loopne
fldenv
mov
pusha
loope
push
pop
dec
sub
dec
inc
sti
add
jns
fisubr
(bad)
dec
sbb
js
xor
call
inc
loop
int3
(bad)
xor
push
adc
dec
sub
dec
jle
push
sbb
fdivr
push
stos
repnz
mov
jle
mov
mov
inc
or
rcr
xchg
pop
in
dec
xchg
or
sbb
xor
jb
sahf
fs
scas
dec
mov
dec
add
and
inc
add
pop
call
out
cli
xchg
arpl
or
mov
mov
in
rcl
cmp
dec
test
shl
ins
cmp
repz
arpl
pop
jp
aam
fist
xchg
test
(bad)
jg
imul
mov
add
pushf
sub
test
data16
mov
pop
pop
imul
push
loope
pop
ins
js
(bad)
jmp
je
xor
mov
cmps
add
push
push
test
sbb
mov
stos
jnp
sbb
dec
add
jmp
inc
mov
jns
je
pop
sbb
mov
adc
xchg
pop
and
sahf
out
pop
push
retf
pop
adc
mov
in
ds
out
jmp
aas
call
jb
shl
jbe
dec
jo
stos
and
pop
jecxz
lea
xchg
dec
test
repz
in
push
test
fistp
jle
sub
xchg
dec
mov
retf
aas
out
xchg
test
pushf
sti
js
pushf
sub
push
neg
aam
mov
(bad)
(bad)
inc
loopne
jle
mov
and
cmp
jnp
pushw
jno
jb
out
fsub
xchg
scas
stos
std
jl
add
jo
adc
pusha
std
sbb
hlt
and
addr16
mov
int3
fwait
push
jmp
push
lods
mov
jle
(bad)
pop
dec
xchg
arpl
inc
mov
out
inc
xor
jmp
ds
inc
ins
xor
pop
cwde
fwait
nop
adc
pushf
je
int
pop
pop
xor
pop
sbb
arpl
bound
sub
jae
sbb
push
xchg
jmp
enter
arpl
xor
pushf
sahf
clc
fnstenv
cld
mov
icebp
pop
pop
mov
adc
dec
mov
cmp
daa
mov
jne
imul
and
jg
pushf
int3
sti
push
mov
adc
jns
inc
or
in
xchg
jne
lods
mov
out
(bad)
cmp
pop
sub
add
jg
dec
scas
xor
or
(bad)
fiadd
adc
dec
pop
lds
popf
clc
add
cmc
push
jns
dec
xor
das
sub
or
cmps
sbb
pop
inc
mov
test
in
call
fisttp
cmp
jmp
xchg
add
push
int3
jmp
mov
and
lods
sbb
and
in
xchg
imul
mov
jecxz
adc
les
mov
mov
jae
xor
inc
pusha
jmp
cs
jge
lods
mov
(bad)
mov
repz
loope
(bad)
jno
jl
xchg
mov
sub
adc
cmp
push
mov
div
and
cmp
mov
sti
cmp
test
add
sbb
push
xor
test
(bad)
cmp
and
cmp
aaa
mov
pushf
es
pop
fisubr
and
xor
push
dec
add
ja
cmp
xchg
or
cmp
push
cmc
icebp
mov
popw
add
test
cli
fadd
pop
rcr
stos
out
inc
fst
pop
dec
loop
mov
mov
enter
and
or
or
sub
xlat
stos
in
scas
aas
push
jmp
mov
add
(bad)
mov
or
jp
sbb
mov
pop
or
test
scas
pop
sbb
cmp
out
test
in
adc
in
jnp
dec
cmps
leave
jmp
sub
dec
test
fnstcw
retf
adc
jge
dec
mov
(bad)
in
push
dec
xor
bound
sbb
mov
or
pusha
fidivr
sahf
dec
cmp
and
fwait
jae
retf
scas
daa
xor
mov
jns
inc
and
cmps
adc
add
ss
xchg
sub
stos
es
pop
imul
inc
push
test
movs
or
mov
outs
fcomp
sbb
daa
pop
sub
and
dec
aam
rcr
std
imul
jnp
push
or
sbb
push
imul
or
add
rcr
lds
push
inc
mov
test
xchg
adc
jmp
in
lea
and
das
jmp
sbb
sbb
mov
dec
mov
lea
test
xchg
jp
cmp
daa
push
sbb
sub
mov
pop
ret
xor
dec
lods
and
xor
fisub
mov
pop
lahf
sub
in
mov
and
xor
aas
int
mov
jmp
jns
or
mov
lock
cld
call
in
aas
inc
pop
es
dec
dec
adc
out
xor
add
mov
icebp
repz
stos
jnp
sar
ret
mov
add
fcomip
mov
or
iret
int
sahf
nop
jl
sub
adc
sub
mov
add
mov
push
fadd
xchg
stos
adc
hlt
aam
enter
ja
fwait
add
xchg
sub
fs
and
sub
push
ret
icebp
sbb
jne
mov
fldenv
mov
jge
jbe
xchg
data16
loop
(bad)
xchg
movs
pop
pop
shr
lahf
cmp
and
aaa
inc
xor
pop
into
sbb
jg
sbb
mov
mov
push
mov
cmp
cmp
cli
xchg
dec
inc
loope
mov
dec
pop
shl
push
sbb
mov
es
(bad)
mov
inc
imul
out
call
setle
pop
out
scas
out
int
fbstp
nop
idiv
loopne
clc
mov
loope
sub
enter
je
jns
ret
push
cmps
xchg
shl
mov
ret
push
jmp
arpl
add
pop
mov
add
mov
mov
jle
cmp
cli
mov
iret
aad
adc
sbb
nop
jl
jns
outs
mov
xchg
js
sub
mov
dec
or
popa
xchg
nop
xor
xchg
inc
call
out
mov
jne
jp
test
xor
mov
sub
mov
pop
push
cmp
push
or
pop
adc
jae
mov
in
mov
(bad)
and
(bad)
mov
loop
push
and
not
pusha
loopne
or
pop
dec
pop
arpl
int3
jns
cmp
or
xor
inc
sub
sbb
pusha
inc
cli
cmp
ins
and
cmp
or
sub
je
cmc
movs
mov
or
pop
cmp
stos
mul
mov
ss
add
ja
outs
xor
adc
jg
jle
(bad)
pop
jne
cwde
movs
or
or
mov
mov
sub
neg
jno
out
xchg
lock
sar
js
xchg
pop
out
jge
call
sub
add
sub
pushf
into
rcr
push
in
sbb
adc
mov
imul
stos
stc
inc
clc
imul
stc
jnp
aam
xor
push
les
sub
shl
test
retf
push
xchg
push
pop
mov
xor
push
scas
daa
aas
std
pop
inc
in
fnstenv
or
ficomp
mov
enter
push
adc
imul
gs
ins
pusha
pop
xchg
fs
sbb
or
pop
cli
add
cmps
stc
mov
add
mov
or
push
or
adc
out
out
mov
pop
and
scas
aaa
xor
pop
das
add
inc
pop
jg
ins
jne
out
mov
sbb
sub
enter
ins
cs
addr16
fdiv
mov
(bad)
push
pop
frstorw
enter
shl
ja
mov
xchg
ret
sti
scas
movs
mov
stc
fsubr
inc
je
cmp
dec
fild
out
shr
pop
cdq
stos
in
ins
xlat
adc
push
or
and
mov
inc
xor
mov
das
jecxz
and
clc
scas
or
dec
inc
mov
mov
mov
sbb
dec
in
lea
adc
mov
aad
xor
dec
outs
add
sbb
scas
fwait
cmp
loopne
stos
inc
into
nop
gs
lods
out
scas
(bad)
push
mov
and
jbe
xchg
jp
das
push
lds
ss
mov
or
repnz
cmp
repz
ret
test
idiv
xchg
push
sahf
add
pop
retf
xchg
xchg
sar
xchg
outs
out
dec
movs
push
sub
test
sbb
or
lods
repz
dec
jecxz
fidivr
mov
in
add
dec
js
stos
mov
mov
xor
push
pop
dec
adc
loope
fsub
neg
in
loope
scas
movs
dec
test
xchg
sub
push
jo
in
mov
mov
add
adc
jg
sar
pop
pusha
pop
fldcw
push
adc
shl
cdq
cmp
xchg
jmp
out
outs
hlt
add
fdivr
and
mov
out
sub
in
cmps
repz
icebp
inc
loop
enter
mov
add
test
js
cmp
push
xchg
add
cmp
neg
pop
jmp
pop
jno
push
fisttp
cld
std
(bad)
sub
in
fmul
adc
xor
adc
add
mov
mov
fiadd
fwait
rcl
mov
mov
js
pop
inc
dec
popa
and
adc
push
and
cmp
dec
enter
inc
fild
fsub
test
ja
scas
shl
out
popa
jl
mov
das
xchg
mov
xchg
into
leave
pop
loop
div
sbb
push
bound
jge
fdivr
ficomp
cmp
mov
aas
aam
jecxz
push
jno
retf
sub
cwde
inc
imul
mov
fld
(bad)
nop
cmp
push
inc
xor
dec
sub
dec
or
enter
dec
mov
ss
inc
or
inc
adc
sub
adc
inc
push
mov
jo
sub
xchg
jae
sbb
mov
out
lds
enter
cmp
int3
in
pusha
iret
mov
sar
and
outs
repnz
call
movs
dec
sub
xchg
xchg
hlt
xor
imul
inc
xchg
xchg
push
sbb
imul
test
push
ds
xchg
add
(bad)
dec
pop
pop
adc
push
test
loop
ins
and
iret
xor
adc
ja
ficomp
les
add
fwait
ins
jl
push
out
mov
pop
leave
ret
call
hlt
mov
push
mov
and
mov
push
lods
xchg
add
repz
loopne
cmp
outs
jb
xor
imul
adc
jo
mov
sahf
(bad)
loope
sbb
loope
scas
mov
(bad)
pop
xchg
iret
cmps
pop
or
sbb
xor
xor
jle
int
outs
imul
push
shr
jne
mov
adc
inc
or
popa
ret
mov
cmps
call
mov
retf
adc
shr
xor
push
xor
pop
jg
or
xchg
sbb
mov
scas
ss
push
adc
pop
pop
mov
and
aam
push
std
push
jno
out
cmp
shl
stos
cmps
fucomp
inc
xor
fiadd
or
dec
pop
hlt
cmp
nop
sar
into
cmp
scas
(bad)
loope
and
xor
and
and
jo
outs
loopne
mov
inc
cmp
push
jae
mov
push
cmp
imul
xchg
dec
sbb
or
in
mov
xchg
mov
xor
xor
mov
add
ret
fnstenv
and
xchg
jp
jmp
call
pusha
cmp
or
inc
pop
dec
adc
or
mov
sti
sar
pop
inc
xor
nop
adc
cmp
dec
pop
xchg
push
jo
pop
sub
pushf
test
jge
jp
hlt
out
jnp
and
mov
cmps
or
ds
outs
sahf
sbb
add
jb
inc
rol
adc
jmp
iret
adc
xchg
movs
test
xchg
jb
shl
sub
or
sbb
push
pop
sbb
sahf
fnstcw
xchg
and
mov
pop
mov
jno
fdivr
and
aas
loopne
xchg
mov
adc
cmp
(bad)
sub
mov
pop
dec
mov
lea
fiadd
out
stos
retf
sub
ja
dec
xchg
stos
(bad)
pop
xchg
xor
enter
jl
dec
stos
and
out
pop
sub
popf
pop
in
pop
mov
mov
pusha
stos
out
pop
fdivr
cmp
rcr
dec
pop
push
shl
xlat
loope
std
out
xchg
(bad)
test
xchg
fadd
inc
dec
xor
mov
out
pop
mov
dec
xchg
pop
pusha
cmp
out
xchg
rcl
lock
push
inc
fnstenv
imul
xchg
xlat
sub
cmp
cmp
xchg
fcos
js
lods
in
ja
add
dec
iret
adc
ja
call
inc
stos
and
push
cwde
(bad)
out
jp
dec
push
dec
cmp
rol
cmp
in
and
mov
push
xchg
mov
(bad)
mov
push
in
mov
aad
aam
cs
add
sbb
xchg
std
sub
mov
adc
lea
scas
inc
xor
stos
lahf
xchg
xchg
inc
jecxz
pop
and
loop
and
(bad)
sbb
push
stos
sti
mov
sbb
test
rep
aad
or
mov
fdivr
cwde
scas
ret
shr
mov
push
popa
in
sub
mov
xor
cmp
repnz
ss
fiadd
(bad)
call
xchg
pop
sbb
(bad)
jl
ins
jnp
and
loopne
mov
mov
sbb
sahf
test
dec
retf
lea
(bad)
sub
addr16
int
xchg
(bad)
jp
add
in
and
ins
scas
mov
xor
mov
pushf
mov
cmp
inc
xor
dec
xchg
repz
jae
push
mov
idiv
xor
ret
repnz
cmc
mov
lock
pushf
cmps
dec
into
mov
cdq
mov
push
mov
inc
dec
arpl
dec
sti
xchg
les
dec
or
arpl
stc
and
add
or
xlat
mov
sbb
cmp
in
je
repz
push
test
pop
sub
pop
int
or
and
rol
xchg
cmp
xchg
mov
sbb
add
mov
rcr
mov
ins
movs
imul
push
(bad)
jmp
ret
push
(bad)
adc
cli
mov
xor
mov
mov
sub
ret
sub
call
or
cmp
call
js
movs
pop
leave
ja
xchg
aam
loope
pop
sub
jb
outs
mov
aam
lock
sti
out
cmp
pushf
push
cmp
sahf
int
mov
hlt
mov
mov
and
rol
out
sbb
ins
sahf
mov
or
cmps
mov
sub
xchg
aas
lods
ret
loope
imul
cld
mov
movs
test
pop
add
ret
jge
dec
mov
adc
mov
jge
sbb
sub
cmp
mov
jnp
out
sbb
call
fadd
inc
dec
xchg
mov
mov
xor
mov
or
shl
pushf
or
mov
push
test
add
inc
xchg
xchg
pop
sbb
mov
test
lods
in
ror
out
jp
loop
mov
dec
mov
pop
out
sub
xor
(bad)
out
ds
inc
retf
ret
ins
jne
rcl
popf
fidivr
xlat
out
sbb
into
add
dec
and
lock
test
jbe
sbb
xchg
int
call
push
cmp
stos
jbe
ins
xor
stos
stos
lea
mov
addr16
movs
clc
outs
jae
rol
push
dec
and
and
cld
dec
jmp
xchg
shl
in
lds
add
mov
mov
(bad)
fld
mov
mov
inc
test
cmps
adc
and
pop
pusha
(bad)
rcl
or
int3
cmp
pusha
jge
std
imul
fld
fldenv
inc
add
(bad)
test
jmp
cmp
push
aaa
mov
call
into
sbb
retf
or
adc
ja
pop
lods
sbb
in
movs
cli
das
mov
fwait
add
aad
test
mov
jnp
cli
shl
(bad)
lds
scas
test
or
jnp
aam
mov
icebp
out
fwait
mov
inc
dec
(bad)
push
add
pop
rcl
jg
lea
inc
adc
fisub
cmp
push
(bad)
cmp
inc
sbb
les
mov
fsubr
inc
and
mov
mov
je
enter
jge
jne
retf
dec
test
in
mov
dec
in
ins
(bad)
mov
pop
mov
fbld
sub
scas
jne
(bad)
cwde
push
lds
mov
pop
pop
push
adc
test
mov
fist
push
jnp
in
je
in
outs
int
sub
ret
xor
inc
lahf
fild
mov
xor
add
adc
(bad)
jecxz
jae
clc
movs
jne
mov
cli
imul
mov
mov
aam
xor
in
ins
iret
sub
pop
fcom
dec
movs
push
inc
and
cdq
push
mov
test
pop
jnp
or
or
mov
dec
jl
repnz
sub
out
imul
inc
adc
add
jmp
es
(bad)
mov
retf
mov
ss
loopne
and
or
mov
push
mov
scas
jb
push
jl
inc
cs
lock
test
xchg
mov
fist
sbb
sbb
mov
xor
aam
pushf
xor
adc
out
xchg
mov
inc
cld
test
push
mov
sbb
lahf
sub
shr
(bad)
jmp
add
rcl
fsub
jne
retf
cmps
xor
(bad)
push
xor
push
inc
in
pop
test
inc
rcr
dec
mov
and
(bad)
xchg
jecxz
mov
add
cld
or
stos
pop
cmp
js
jno
mov
(bad)
and
aaa
fwait
mov
(bad)
dec
repnz
dec
push
pusha
rcr
jnp
xchg
popa
xchg
xchg
jno
push
sub
pop
jmp
(bad)
push
and
mov
lock
lods
mov
repnz
(bad)
enter
ror
mov
dec
and
mov
outs
push
test
push
mov
sub
leave
sub
xor
out
inc
push
mov
inc
xchg
sub
sub
fst
aad
setb
push
add
jg
inc
jg
cmp
and
ins
retfw
push
mov
fs
lea
fs
cmp
mov
jns
mov
ror
ret
jmp
shl
daa
retf
or
fwait
imul
mov
sub
int
pushf
scas
pop
jnp
mov
push
enter
mov
out
mov
jbe
(bad)
mov
in
sbb
out
aaa
add
into
xchg
xor
into
jmp
lahf
pop
fnstsw
outs
jnp
xlat
rol
retf
push
pop
ficom
(bad)
mov
fs
test
xchg
dec
and
mov
or
fcmove
push
ja
xchg
fcom
test
nop
mov
pop
mov
ret
xchg
inc
mov
xchg
or
cs
ror
mov
mov
sbb
dec
mov
stos
push
and
push
pop
adc
and
dec
jl
retf
add
repnz
fwait
jae
pop
sbb
stos
stos
test
xchg
repz
dec
clc
stos
dec
inc
out
xchg
nop
(bad)
in
add
movs
push
mov
push
repnz
inc
mov
cdq
(bad)
out
ss
das
ja
imul
fcomp
pop
or
sar
bound
and
adc
aaa
push
test
pop
xchg
call
jnp
call
outs
jl
cmps
pop
stc
xchg
ss
into
test
adc
fnstenv
retf
int
dec
xor
sub
pop
mov
clc
movs
jmp
mov
cli
cdq
sbb
or
jg
pusha
dec
dec
adc
mov
sahf
test
xor
and
xor
pushf
outs
adc
add
mov
push
ds
xchg
pusha
(bad)
test
mov
ins
cmc
(bad)
leave
mov
ret
scas
imul
cmp
mov
cmp
pop
adc
jnp
or
ret
test
fdivrp
ficomp
push
not
add
and
or
or
jo
jbe
fs
sbb
test
stos
mov
test
xchg
les
addr16
fs
xchg
push
jg
and
mov
repz
aam
inc
and
test
shr
daa
aaa
nop
sbb
add
pop
mov
bound
jo
xchg
in
rcr
sub
es
push
inc
inc
jl
pop
popf
or
lods
sbb
cmps
int3
pop
loopne
stos
jb
pop
pusha
bound
push
dec
mov
ss
outs
cld
leave
add
mov
ret
cmp
call
push
js
pushf
adc
push
jo
dec
cmp
push
in
adc
aam
jb
icebp
cld
and
pop
fsubr
cmp
add
int3
ins
(bad)
outs
js
jp
popa
push
or
(bad)
movs
lds
popa
push
mov
arpl
sbb
add
iret
gs
pop
mov
dec
adc
es
jno
lods
ins
mov
or
sar
loope
mov
or
iretw
cmp
out
test
(bad)
mov
push
jbe
test
xor
dec
movs
faddp
rcr
call
ret
mov
retfw
(bad)
push
ror
loopne
fmulp
inc
sti
add
add
push
imul
mov
jl
cld
sbb
lds
sub
push
hlt
or
mov
scas
mov
jg
outs
(bad)
xchg
adc
icebp
hlt
sbb
int
(bad)
stos
retf
sahf
loopne
(bad)
ror
xchg
loopne
outs
and
pop
cmp
dec
arpl
fist
mov
movs
add
add
sbb
pop
and
sub
mov
mov
or
xchg
mov
mov
xchg
push
pop
inc
(bad)
out
cdq
jecxz
out
and
rcl
shl
aad
loopne
add
out
dec
sub
shr
jae
outs
inc
push
or
fnsave
push
sub
es
rcl
inc
cmp
scas
sar
sub
mov
dec
dec
inc
sti
sub
sbb
pop
repz
mov
mov
xor
ins
out
pushf
mov
dec
add
pop
retf
sub
daa
pop
sub
mov
frstor
jmp
jmp
sub
adc
inc
mov
fisubr
push
lea
pop
pop
jge
(bad)
dec
sbb
push
nop
test
add
mov
mov
jmp
jl
enter
inc
(bad)
dec
rol
repnz
adc
inc
call
mov
mov
push
jp
stos
arpl
stos
repnz
jmp
mov
jns
dec
dec
movs
loop
inc
pop
adc
(bad)
pusha
out
push
(bad)
mov
sub
cli
mov
(bad)
xor
xchg
cmp
xor
or
bound
cmp
es
dec
mov
mov
fild
or
add
daa
ret
shl
inc
fist
and
sbb
addr16
dec
lds
je
sbb
adc
push
jo
add
pop
sub
adc
cmp
clc
lock
sbb
popa
jmp
idiv
adc
das
retf
in
pop
adc
pusha
and
mov
repnz
mov
mov
xor
fstp
test
push
in
into
pop
mov
xor
arpl
inc
xor
hlt
aad
inc
mov
inc
repz
xchg
jg
aad
adc
xor
xchg
adc
sub
xchg
inc
arpl
push
cmp
outs
push
(bad)
retf
imul
cmp
pop
popf
push
jle
inc
cdq
adc
fnstenv
loope
popf
push
hlt
xchg
or
rol
lock
push
gs
hlt
push
mov
pop
or
xchg
adc
dec
dec
mov
out
pop
sti
push
cmps
out
mul
xor
bound
mov
push
xchg
mov
ja
pop
ja
xor
fist
iret
fs
sub
add
pop
push
push
test
daa
xchg
or
inc
ror
xlat
sub
hlt
xchg
jmp
cmps
cmp
sbb
stc
std
add
sub
sbb
sbb
aad
or
test
add
mov
push
sbb
adc
jbe
xlat
lahf
jle
mov
aad
mov
inc
int3
cpuid
icebp
or
mov
nop
inc
push
jns
movs
enter
jl
ror
adc
push
jmp
push
(bad)
ficom
push
dec
push
retf
adc
adc
xchg
add
call
push
in
push
in
movs
push
outs
xchg
mov
popf
repz
std
les
inc
inc
stc
in
push
das
scas
das
cmc
nop
inc
mov
fwait
ja
fwait
pop
mov
inc
movs
cli
mov
cli
jnp
retf
sub
pushf
(bad)
sbb
stc
xor
dec
mov
jae
lods
leave
cmp
imul
cmc
std
sbb
in
sub
cdq
and
dec
jbe
ins
xor
hlt
dec
aas
aam
xor
sbb
push
xchg
mov
sub
cmp
jmp
je
push
iret
sbb
pop
stos
loope
movs
cmp
inc
int3
mov
retw
pop
lods
dec
and
inc
(bad)
out
xor
popa
push
stos
cmp
push
xchg
ret
sar
xchg
jecxz
mov
sub
clc
ins
data16
sar
push
dec
loopne
push
mov
(bad)
push
xor
pop
scas
jne
(bad)
jmp
jno
cmp
shr
in
ficomp
or
test
mov
xchg
or
push
xlat
pusha
and
lahf
dec
rcl
pop
sbb
mov
jmp
or
es
movs
imul
or
jmp
or
mov
dec
clc
out
ret
xchg
pop
in
mov
(bad)
cmp
cld
sti
inc
push
enter
int3
mov
in
cmp
push
mov
mov
daa
ret
aad
fst
pop
add
scas
jg
fst
gs
pop
test
repz
jno
sti
pop
jbe
(bad)
jle
leave
jbe
mov
xor
cmp
pop
scas
dec
mov
popa
in
jg
(bad)
cdq
jmp
xchg
adc
loope
lahf
jns
xchg
clc
push
shr
pop
(bad)
movs
call
jae
cmp
adc
jge
or
xchg
mov
mov
push
pop
sub
pop
test
mov
or
or
nop
xor
loope
addr16
push
mov
cmps
jo
xor
jp
sbb
call
mov
pop
jb
add
cmps
ret
push
outs
pop
sbb
mov
mov
js
and
dec
stos
cdq
and
sbb
sbb
sbb
(bad)
aad
in
or
je
sti
pusha
or
sti
inc
mov
and
pusha
mov
xor
in
loop
jmp
out
fwait
cmps
es
dec
test
les
jg
popf
and
loope
or
add
clc
dec
inc
jnp
and
(bad)
lods
movs
int3
sbb
pop
push
mov
pushf
loope
jmp
and
(bad)
mov
scas
pop
in
cmp
(bad)
enter
popa
cmp
cmp
mov
mov
sub
ror
(bad)
(bad)
push
push
das
daa
pop
sbb
jns
popf
xor
aam
push
fst
add
cmp
adc
jg
mov
cmp
add
mov
dec
fiadd
fs
xchg
sbb
ss
mov
bound
mov
(bad)
fcmove
push
cwde
stos
stos
jl
mov
ror
pop
add
pop
jmp
movs
imul
aas
mov
fs
or
or
rcr
mov
aaa
sti
jno
add
hlt
cmp
cmp
arpl
adc
sbb
adc
inc
sbb
int
mov
mov
push
retf
inc
push
shl
cmp
test
shl
pop
xchg
retf
adc
pop
sub
sub
pop
outs
adc
test
scas
addr16
mov
sbb
or
mov
bound
clc
pop
add
clc
xlat
in
sub
test
cmps
retf
mov
movs
xchg
xchg
push
or
movs
adc
sar
and
jno
inc
ins
cmps
fiadd
add
and
pop
sahf
pushf
dec
push
pop
and
xchg
(bad)
push
and
inc
jmp
out
adc
addr16
shl
fisttp
iret
int
cmp
adc
cmp
movs
push
clc
fisub
pop
fs
cmp
adc
jno
push
scas
inc
adc
cmc
or
cmp
or
icebp
aad
jl
xor
stc
not
lea
sub
fnstcw
fcomp
xor
in
dec
sub
sar
dec
adc
std
sti
sub
hlt
or
sbb
push
jns
mov
repnz
pop
jbe
jle
inc
test
jbe
(bad)
mov
in
or
adc
in
pop
retf
jb
or
xchg
mov
in
arpl
or
pushf
fcomp
push
xor
dec
cwde
sbb
xchg
iret
push
cdq
fidivr
xlat
and
fisttp
push
icebp
mov
sbb
cwde
std
cmps
dec
aam
jbe
mul
push
outs
push
lea
das
imul
pop
das
sbb
out
dec
inc
add
push
jb
repnz
xchg
stos
add
hlt
je
les
dec
stos
scas
movhps
mov
jmp
fcom
and
push
adc
adc
lea
sbb
and
add
mov
das
push
popa
push
sbb
stos
ret
mov
std
std
outs
rcl
shl
cli
mov
scas
inc
stc
sbb
ret
(bad)
data16
sahf
dec
aaa
push
mov
sti
mov
push
addr16
cmp
or
lds
sahf
cdq
out
jg
inc
clc
pusha
jge
ins
fcmovnbe
cmp
or
sub
mov
iret
mov
sbb
inc
inc
push
out
je
outs
jmp
mov
inc
shl
loope
jg
dec
xor
in
jb
addr16
pop
rcr
mov
cmp
shl
aaa
fisub
push
neg
dec
mov
jg
xor
not
lds
cmps
jno
add
mov
pop
pop
inc
mov
jmp
mov
mov
push
fdiv
pop
dec
out
into
stos
and
pop
lods
xchg
hlt
sar
sub
dec
and
(bad)
in
leave
in
cs
mov
pop
das
fcom
repz
inc
sub
mov
add
xchg
shl
imul
bound
dec
jbe
pop
in
mov
xchg
out
pop
pushf
inc
cld
jmp
adc
add
jl
icebp
adc
mov
sbb
shr
inc
cmp
mov
mov
adc
out
inc
cmc
jl
outs
int
data16
out
pop
inc
ds
mov
cld
xor
jae
pop
sub
inc
daa
xchg
movs
test
inc
jge
mov
(bad)
mov
pop
mov
les
mov
ficomp
cmp
outs
pop
sbb
pop
and
(bad)
adc
sub
inc
mov
adc
mov
popa
leave
inc
outs
xor
loopne
test
push
add
sbb
dec
dec
imul
xor
or
ins
lods
pop
add
add
pand
les
or
or
cwde
int
stc
rol
call
inc
push
cmp
and
(bad)
(bad)
pop
mov
in
(bad)
lea
adc
xchg
add
dec
sub
and
daa
push
pusha
sub
lock
pushf
fisubr
paddw
enter
mov
imul
test
adc
add
add
jmp
push
mov
or
arpl
pushf
mov
scas
fidiv
sbb
mov
je
or
push
xchg
mov
cld
push
add
cld
in
inc
nop
mov
jae
add
test
push
sbb
cmp
push
mov
jp
pushf
inc
jbe
mov
adc
sbb
std
test
sti
jbe
pop
aam
in
pop
in
jecxz
xor
(bad)
pop
fbstp
in
into
neg
inc
push
xchg
rol
add
xlat
mov
mov
xor
nop
fsub
jbe
js
sbb
out
es
sbb
xchg
fwait
icebp
pop
inc
les
in
mov
imul
lock
push
test
xor
test
enter
cmp
dec
jg
and
sbb
cwde
jge
pop
push
(bad)
imul
pop
arpl
inc
in
sub
shl
int
or
out
jne
icebp
lahf
out
and
ins
outs
mov
in
or
pusha
shl
mov
push
inc
cwde
je
bound
fisttp
mov
fnstenv
call
mov
cmp
ins
pop
mov
sbb
idiv
lahf
cmp
(bad)
repnz
imul
push
imul
movs
fsub
(bad)
inc
sbb
push
inc
bound
jnp
xor
in
out
mov
bound
jnp
lods
inc
loopne
popa
stc
cli
xor
cmp
cmp
imul
es
loop
inc
sar
mov
movs
cwde
xor
sbb
aad
out
mov
movs
dec
dec
call
cmp
push
cmps
in
xchg
lock
mov
lods
pop
neg
mov
cmp
xchg
mov
or
inc
test
xchg
sub
sbb
(bad)
mov
(bad)
xchg
sub
int3
lods
cmp
mov
xor
test
cld
(bad)
mov
mov
fadd
cwde
mov
push
jo
rcl
xlat
mov
xchg
inc
call
pop
mov
mov
jbe
aaa
cwde
dec
push
push
jns
cmp
sub
out
push
push
fnstenv
movs
pushf
in
lea
cli
(bad)
jl
and
sahf
int
adc
adc
mov
and
mov
inc
fdiv
inc
add
mov
jmp
lea
mov
in
lods
int
aaa
movs
cmc
ss
outs
fdivp
in
cmps
loope
ret
lock
aas
iret
dec
jo
ror
shr
or
pop
fild
adc
stos
jb
fst
add
je
jnp
(bad)
js
cmp
(bad)
aas
xor
stos
xchg
lock
loop
mov
pop
cmps
rcr
out
xlat
mov
sti
mov
retf
std
pop
adc
push
inc
xchg
ret
fld
sub
(bad)
call
sbb
retf
mov
pusha
pop
add
jge
sbb
push
ja
data16
and
popf
cmps
movs
out
inc
rcr
dec
div
mov
push
int3
add
sub
lock
ins
mov
cwde
aam
and
stc
sub
pop
mov
push
sub
nop
or
pop
add
fdiv
push
and
pop
(bad)
sub
dec
movs
inc
fdiv
int3
pop
pop
xchg
pop
xchg
jp
repnz
imul
jl
dec
mov
test
inc
sbb
inc
test
dec
mov
push
aas
aaa
lods
cmp
jns
aas
dec
pop
movs
cmc
fisubr
ins
or
push
mov
cmps
xor
sbb
mov
nop
scas
ds
jbe
mov
jnp
daa
movs
iret
push
mov
adc
pusha
add
sbb
cmc
scas
test
cld
xlat
popf
shr
mov
jp
sbb
lods
or
add
fcom
pop
adc
jecxz
push
fistp
xchg
mov
sub
fwait
mov
stos
div
and
addr16
cmp
cmp
or
mov
lock
sub
ds
imul
aad
mov
xor
ja
push
xor
sub
xchg
or
retf
and
pop
xor
aad
or
xchg
or
imul
repz
jno
or
pop
mov
movs
and
test
inc
add
dec
(bad)
mov
and
pop
mov
dec
ins
fcmovnb
daa
jg
add
ss
mov
pop
jp
xchg
call
movs
cld
repz
nop
push
jl
mov
ffree
std
out
cmp
outs
xor
xchg
(bad)
xlat
xchg
scas
xchg
push
std
sub
loope
leave
add
jmp
test
xchg
lea
sub
add
pop
cld
into
mov
inc
or
sbb
pop
xor
test
jno
cmp
imul
push
jbe
mov
cmp
cmps
repz
cmps
mov
mov
mov
mov
(bad)
mov
jmp
inc
xchg
out
in
xor
push
sbb
fdivr
jo
cmp
mov
lea
gs
jb
lds
jge
and
add
outs
mov
mov
out
fdivr
clc
clc
cli
popa
sbb
cli
test
dec
and
not
es
jae
ret
mov
int3
and
add
xchg
sub
movs
or
scas
jp
jl
aad
jmp
out
pop
push
mov
or
mov
shl
les
or
jmp
pop
js
or
xchg
sti
or
and
iret
fs
inc
add
xchg
mov
sbb
arpl
xor
retf
add
or
retf
push
sub
rol
jmp
imul
cmc
sar
push
sub
out
jle
ins
addr16
int
xor
fwait
rcl
mov
add
dec
adc
shl
xchg
sbb
rcr
xchg
ret
rcl
jb
pop
fcom
sub
xchg
(bad)
clc
inc
mov
call
mov
xlat
fdivr
or
xchg
out
das
iret
shl
cmp
imul
jp
daa
sbb
aad
fcom
cmc
cmp
dec
retf
dec
xor
xchg
test
inc
xor
dec
inc
or
inc
dec
cmp
lock
inc
cmp
icebp
outs
mov
sahf
jo
lock
add
retf
je
pushw
nop
js
dec
clc
dec
jecxz
jbe
and
ss
adc
xor
or
(bad)
mov
test
mov
cmc
mov
sbb
test
or
ins
jb
pop
inc
cli
ficomp
pop
fidiv
or
xchg
sti
int3
and
(bad)
inc
outs
inc
in
xor
pop
mov
adc
sbb
pop
add
jp
mov
cwde
pop
pop
and
xor
inc
adc
push
jo
push
in
mov
ins
sub
xor
adc
add
pop
cmp
cmp
jbe
lods
(bad)
je
dec
leave
aaa
sub
ss
rcl
repz
or
mov
and
bound
xlat
popf
sub
stc
pop
mov
out
jmp
gs
sbb
mov
pop
inc
lahf
dec
rcl
loopne
sahf
sub
adc
inc
jmp
jp
scas
push
mov
je
(bad)
push
adc
mov
ret
(bad)
cmp
pop
ja
adc
push
leave
xchg
push
jnp
mov
add
or
out
fwait
pop
pop
shl
dec
dec
push
mov
or
gs
and
cmps
into
xchg
leave
dec
fsubr
mov
call
fisubr
mov
jnp
lea
fnsave
cwde
xor
call
mov
ins
or
clc
and
mov
(bad)
push
call
mov
dec
hlt
dec
mov
dec
push
aam
push
inc
adc
jg
js
add
(bad)
sahf
jae
add
cmc
pop
not
sub
push
inc
lahf
(bad)
mov
cmp
ret
cmp
movs
mov
fcomp
sbb
xor
xlat
xor
rol
test
pop
xor
and
das
dec
ficomp
inc
stos
pushw
loop
inc
or
push
pop
push
hlt
and
mov
cmp
stos
pop
jb
aad
imul
jns
adc
sar
(bad)
fucomip
pop
sbb
cbw
enter
out
andps
repz
xchg
shl
in
ret
jae
jge
scas
test
das
pop
inc
js
or
push
int
popa
or
jnp
pop
sbb
pop
add
call
(bad)
mov
sti
scas
and
mov
adc
mov
aaa
cmps
scas
inc
dec
sbb
pop
loopne
mov
imul
push
and
sub
stc
(bad)
xor
popa
test
or
mov
or
fsubr
mov
fcmovu
xchg
sub
mov
dec
xor
mov
mov
das
out
pop
daa
imul
mov
pop
dec
cmps
xor
and
jbe
mov
pop
adc
(bad)
sti
add
adc
loop
mov
ficom
dec
sub
mov
xchg
jae
scas
int
inc
mov
aam
cs
mov
xor
mov
and
cdq
sub
sub
dec
lods
xor
fldl2e
sahf
push
lock
lods
jne
daa
pop
(bad)
enter
cmp
or
sbb
dec
mov
pop
xor
cwde
and
mov
sahf
dec
mov
call
scas
push
xchg
call
dec
ffreep
jne
adc
cmp
fs
jmp
jmp
mov
mov
cmp
mov
shl
push
nop
pop
pop
dec
inc
into
in
in
pusha
ror
xchg
lahf
xchg
mov
push
mov
das
push
call
push
or
xchg
xor
inc
mov
dec
mov
outs
jno
dec
jmp
xchg
xchg
or
pop
and
fs
pop
jb
test
push
cmp
retf
and
fldenv
add
lds
or
push
add
add
cdq
shl
dec
xchg
icebp
fsubr
iret
pushf
cmp
(bad)
loop
xchg
push
sti
xor
shr
ret
dec
jl
jg
cmp
fistp
fidivr
sahf
dec
and
push
cmc
and
arpl
push
pop
retf
lds
rcr
mov
loope
fwait
out
push
add
inc
scas
mov
cmp
ins
pushf
mov
and
addr16
cmc
int3
and
pop
cmps
sahf
mov
xchg
add
jne
pop
aam
test
or
and
xchg
xlat
ret
dec
mov
mov
jns
sti
fwait
add
xor
xchg
js
idiv
add
js
retf
jge
pop
mov
jns
cli
fs
jne
pop
(bad)
out
in
ja
ins
mov
sbb
pushf
(bad)
pop
jo
rcr
iret
in
mov
in
push
scas
inc
pop
idiv
loopne
jns
pop
std
mov
push
rcr
cmp
and
and
xchg
or
gs
jle
hlt
test
test
jb
mov
dec
imul
call
ret
cwde
xchg
cld
pop
or
cmp
mov
scas
sub
call
pop
adc
mov
sbb
jecxz
cmp
dec
push
and
mov
idiv
xchg
xchg
cdq
shl
ret
fadd
mov
dec
popf
push
pushf
mov
xor
outs
shr
xor
int3
clc
mov
rcr
mov
adc
js
retf
repz
pop
jbe
lods
lea
inc
mov
sub
push
mov
adc
or
(bad)
jg
scas
mov
sub
cmp
lods
out
lea
shr
cmp
call
xor
out
icebp
fs
clc
inc
mov
(bad)
jge
fxch
rcr
pop
ss
sub
pop
xchg
clc
push
es
jle
fs
sbb
adc
imul
into
mov
pop
je
mov
aam
inc
dec
or
push
hlt
add
sbb
lods
les
(bad)
lods
ret
mov
stc
scas
out
mov
jmp
mov
jae
cdq
cmc
mov
inc
jae
xchg
rol
or
mov
push
popa
xchg
addr16
mov
out
les
dec
and
ret
fsub
call
pop
imul
pop
pop
loop
cmp
les
daa
jg
jg
jmp
iret
mov
or
aaa
add
cmp
test
inc
in
cmp
and
xchg
and
push
dec
jle
xchg
mov
callw
aad
leave
aam
stos
into
push
cmps
push
jae
cmovl
fisubr
pop
mov
je
push
movs
mov
cmps
ret
(bad)
push
in
dec
dec
les
imul
in
xchg
out
mov
fisttp
test
aas
mov
mov
scas
mov
mov
cld
(bad)
cmc
je
adc
retf
neg
pop
cmp
mov
dec
xor
dec
mov
adc
ss
test
nop
jecxz
test
aam
lods
cmp
jmp
xchg
(bad)
adc
scas
aam
scas
lahf
loope
aam
ror
retf
lods
cld
jge
ja
mov
ret
stos
mov
mov
repz
push
cmp
xchg
jno
inc
(bad)
aaa
jle
std
(bad)
lock
dec
aad
out
out
mov
mov
scas
adc
fisub
inc
sub
xlat
pop
cmp
push
pop
imul
test
mov
stos
loopne
imul
mov
stos
hlt
add
or
ja
mov
sbb
sub
or
enter
inc
(bad)
aad
imul
mov
adc
lea
cmp
jmp
ret
jb
adc
les
push
(bad)
xor
add
std
mov
sbb
in
mov
shr
cli
push
or
pop
push
add
icebp
jb
add
pushf
pop
jmp
cli
mov
les
and
adc
xor
cmp
(bad)
add
jo
out
out
mov
(bad)
retf
push
pop
cmp
fwait
loope
jecxz
sbb
mov
sbb
bound
(bad)
mov
inc
or
retf
inc
and
retf
xchg
or
data16
ins
(bad)
fcmovu
jns
pop
es
addr16
ficomp
mov
xchg
addr16
scas
fimul
adc
ins
jge
data16
cld
in
fs
aaa
xor
and
mov
push
test
or
and
mov
aad
scas
ror
jg
cmp
ins
aas
sbb
dec
cmp
mov
(bad)
inc
sub
cdq
lahf
sbb
push
rol
xor
jmp
retf
scas
fcom
xchg
adc
jae
bound
push
outs
je
pop
sahf
call
jge
shr
add
scas
rcl
mov
xchg
xchg
dec
cmc
(bad)
lock
inc
popf
ins
test
push
mov
arpl
mov
int3
or
cwde
adc
pop
add
ins
cmp
test
mov
repz
ins
div
addr16
dec
add
jo
aad
ror
inc
push
dec
push
sub
mov
scas
pusha
jbe
mov
jo
ret
push
mov
push
imul
sti
mov
mov
mov
fcom
push
sub
adc
sbb
into
or
aas
popa
and
add
leave
(bad)
fsub
rcl
loope
cmp
add
inc
or
and
sbb
inc
xchg
mov
in
mov
jge
mov
inc
add
xor
push
mov
outs
je
aam
stos
test
mov
jge
cwde
dec
mov
xchg
mov
cs
mov
sbb
sub
enter
fistp
pushf
jo
fldcw
mov
shl
mov
into
das
mov
jg
shl
retf
and
aad
cmp
call
jge
inc
pop
fsubr
add
dec
lock
jmp
sbb
push
pop
mov
call
cmp
arpl
dec
mov
add
push
inc
fadd
std
out
or
jb
fistp
pop
sub
jge
dec
cmp
inc
pop
(bad)
call
popf
xor
fild
cmp
invd
scas
or
adc
mov
movs
shr
dec
and
dec
outs
dec
mov
retf
and
sub
pusha
jno
call
clc
dec
hlt
mov
std
(bad)
jl
outs
leave
loopne
es
cli
sbb
gs
out
cmp
cmp
cmc
sbb
xchg
(bad)
fistp
les
sub
and
cmps
int3
and
jmp
dec
cs
retf
stos
js
inc
xchg
and
xchg
jmp
dec
lock
outs
sahf
xor
ror
mov
jae
enter
jns
out
mov
push
into
xchg
es
pop
test
arpl
int3
ins
adc
push
mov
adc
inc
xchg
xor
sbb
aas
add
aam
out
pop
aaa
dec
lds
cli
popf
ret
push
repnz
jge
mov
and
fisub
add
jo
loopne
mov
hlt
push
test
imul
jbe
aad
sbb
stos
jb
shr
in
add
dec
inc
shr
pop
add
fild
data16
mov
out
and
mov
sub
and
mov
ret
jge
push
jno
data16
jecxz
inc
xchg
and
in
js
jecxz
fdivrp
fwait
jno
sub
pop
adc
sbb
pop
xor
dec
mov
mov
stc
and
mov
push
pop
js
test
fsubr
rcr
mov
pusha
sub
sbb
adc
mov
out
fmul
sub
mov
cld
xchg
fstp
pop
fld
mov
ins
fcomi
lahf
add
ss
mov
mov
ins
rol
ret
retf
call
in
repz
cld
cmp
or
adc
cmp
cmp
call
sub
xor
xchg
cdq
das
xlat
icebp
dec
jmp
jg
lock
ret
or
cdq
jne
(bad)
pop
adc
adc
mov
out
and
adc
outs
test
lods
push
arpl
aaa
or
push
fcomp
pusha
add
pop
sbb
gs
and
mov
sbb
pop
dec
or
mov
mov
aad
jb
cmp
ja
jns
jecxz
and
pop
cmp
xchg
ss
mov
mov
inc
popa
dec
ins
enter
mov
imul
and
cmps
xchg
sbb
repz
dec
mov
inc
mov
mov
sub
fninit
push
(bad)
add
jne
pop
push
pop
popa
lds
cmp
pop
stc
jno
out
scas
mov
inc
mov
or
mov
mov
mov
cmp
pop
jge
dec
stos
and
popa
call
int3
lock
and
jne
or
and
cmp
adc
mov
cmc
pop
push
out
mov
add
inc
sahf
(bad)
shr
cmp
scas
and
mov
in
sub
push
add
push
(bad)
(bad)
repz
stc
enter
mov
fisttp
lods
daa
pop
lock
or
push
jge
les
inc
pop
jno
outs
lods
loop
cmp
xlat
in
popa
outs
cmp
test
cmps
lahf
xchg
xchg
inc
xchg
dec
mov
xor
rol
sbb
adc
mov
xchg
sahf
jecxz
xor
dec
ins
push
adc
outs
jo
mov
aad
test
fadd
jg
sub
icebp
push
arpl
push
cmc
and
pop
loope
mov
fisubr
jl
not
add
adc
or
(bad)
ds
sti
dec
call
sub
sbb
shr
sub
stos
jne
jns
loop
pop
inc
xor
test
push
in
mov
(bad)
out
shl
test
pop
xor
fs
pushf
and
in
jecxz
mov
and
push
pop
popf
rcr
popf
cld
sub
lock
js
lock
mov
jne
dec
fwait
inc
push
sbb
jge
dec
(bad)
std
or
call
mov
das
cmp
dec
sub
cmp
xchg
push
sbb
cmp
pop
lahf
cwde
popf
sbb
leave
and
sub
mov
add
in
xchg
clc
stos
add
pop
pop
div
xor
sbb
aas
(bad)
adc
out
dec
cli
adc
scas
push
aam
dec
arpl
js
xor
mov
push
int3
dec
pop
push
lea
push
jnp
push
jmp
or
inc
imul
in
xchg
cmc
sbb
or
jp
mov
push
cmp
dec
mov
xchg
into
xchg
call
and
(bad)
out
lahf
popf
sub
repnz
jp
aaa
ins
sub
mov
cs
jo
pop
leave
sbb
test
enter
mov
xchg
cmp
test
neg
mov
pusha
out
stc
mov
mov
pop
xchg
xchg
jno
dec
jnp
in
mov
fwait
push
sub
push
repz
js
pop
lods
or
xchg
jnp
dec
push
jl
push
bound
sbb
xchg
arpl
mov
mov
movs
mov
adc
dec
xor
test
fsub
jmp
ror
retf
lock
sahf
mov
daa
ins
fisubr
sbb
adc
mov
in
imul
mov
inc
rcr
mov
ins
imul
dec
mov
mov
sbb
jecxz
addr16
inc
std
hlt
xor
adc
ret
mov
and
into
add
sbb
fdivr
or
sub
(bad)
cmp
lds
and
(bad)
xchg
adc
pushf
jp
xor
pop
mov
dec
or
das
sub
cmp
rcl
scas
jg
inc
call
xchg
pushf
imul
add
fisubr
push
mov
mov
lock
sbb
xchg
mov
sahf
jne
ds
pop
mov
mov
add
arpl
adc
arpl
test
xor
pop
push
mov
xor
dec
pop
sbb
pusha
mov
ds
mov
ins
inc
mov
mov
push
push
adc
dec
out
sub
in
xchg
aad
aas
(bad)
dec
lahf
mov
cwde
daa
aaa
sahf
lea
sti
lods
xor
mov
xor
int3
or
jmp
push
lea
inc
or
nop
mov
mov
ja
imul
loop
xchg
pop
or
in
mov
aas
ss
ins
loope
fs
add
jo
lock
jo
or
sbb
cmp
xchg
test
dec
pop
(bad)
sub
idiv
stos
pop
xchg
mov
dec
xor
shl
fdivr
je
pop
mov
and
mov
dec
ret
jb
idiv
xchg
jbe
add
jle
sar
div
jbe
jb
cwde
retf
fs
lock
imul
push
dec
pop
mov
mov
dec
outs
icebp
jmp
out
xor
jecxz
dec
jns
sbb
dec
aad
std
test
push
jbe
cli
fldcw
mov
dec
pop
jmp
cmp
push
(bad)
out
xchg
or
and
push
ds
push
push
repz
bound
enter
mov
adc
sahf
cmp
push
pusha
xchg
cmp
sbb
mov
ins
sbb
cmp
xchg
neg
icebp
aas
xchg
cmp
call
xchg
jo
imul
lock
inc
rol
lahf
arpl
addr16
add
lds
retf
stos
jb
mov
stc
pop
xchg
push
ret
inc
call
pushf
movs
add
sti
ror
(bad)
mov
cmp
jge
add
fisubr
jno
sbb
imul
cmp
test
test
idiv
mov
xchg
adc
fdiv
push
adc
push
pushf
daa
or
arpl
imul
add
mov
jb
lods
jmp
fdiv
mov
test
popf
xor
in
sbb
pop
hlt
stos
xchg
pop
xchg
rcr
test
cmc
lods
call
cld
dec
int3
fisttp
call
dec
adc
fidiv
imul
ret
inc
jg
mov
jne
sbb
xchg
cdq
jg
into
adc
inc
aaa
xor
dec
popf
ret
cld
jnp
ins
cmc
push
add
out
dec
mov
ret
sub
pop
scas
mov
clc
push
jne
add
test
sbb
(bad)
cmp
sar
and
pop
idiv
lock
call
push
pop
ss
repz
fldl2t
adc
cmps
or
dec
repnz
ss
inc
ds
out
sub
or
out
add
xor
or
jg
(bad)
out
or
stos
dec
test
(bad)
inc
fdivr
pminsw
data16
pop
xor
jbe
stc
mov
(bad)
mov
mov
cmp
sbb
mov
xor
and
in
mov
sub
dec
adc
jp
adc
cmp
sbb
sub
dec
cmp
mov
xchg
mov
push
js
movs
mov
jge
fisub
shl
dec
dec
addr16
mov
cli
xor
into
out
and
call
pop
xchg
mov
call
lds
cmc
int
popa
push
adc
push
mov
scas
jo
cmps
sbb
ins
rol
shl
imul
sbb
stos
gs
xor
xchg
mov
mov
retf
mov
dec
sbb
or
sub
in
hlt
cwde
(bad)
sub
xor
(bad)
shr
in
test
xor
or
in
sbb
mov
and
jecxz
addr16
icebp
in
mov
mov
pop
xchg
addr16
mov
push
gs
xor
push
aam
jnp
(bad)
adc
sub
jmp
add
nop
dec
into
and
mov
inc
je
bound
dec
outs
dec
and
sbb
inc
dec
cdq
xchg
sub
aad
push
leave
es
fcmovne
jmp
fdiv
test
mov
mov
cmp
sub
ja
loop
mov
aas
cld
jmp
rol
xor
shr
stos
inc
ret
js
sar
out
push
int3
mov
push
pop
ja
shl
xor
mov
test
ins
add
jmp
je
scas
lahf
mov
or
aaa
in
pop
leave
xlat
xchg
jae
icebp
dec
test
dec
in
xchg
fsub
xchg
(bad)
lock
and
mov
inc
push
fcmovnb
sbb
fdivr
dec
xchg
ds
inc
mov
mov
push
mov
mov
mov
not
jae
pop
iret
sub
(bad)
jmp
cli
stos
les
dec
mov
movs
nop
repz
movs
mov
mov
or
pop
push
dec
aad
mov
test
pop
(bad)
or
xor
and
inc
xor
fwait
ins
cmc
clc
aas
mov
inc
rcl
in
fs
mov
cmp
pop
mov
inc
fist
call
adc
pusha
cmp
or
jne
mov
dec
add
inc
push
out
jecxz
dec
xor
test
lds
push
inc
lock
mov
jmp
call
test
sti
push
imul
add
xor
cld
fmul
fimul
xchg
popf
in
icebp
pop
jmp
xchg
or
scas
cwde
in
dec
in
rcl
mov
and
fisttp
inc
int
inc
std
adc
mov
add
dec
stos
pop
cmp
lods
imul
retf
push
xchg
in
lock
push
pop
je
outs
dec
gs
sar
call
imul
call
movs
jnp
mov
xchg
adc
mov
mov
lock
sub
sub
add
inc
in
fbld
cmp
inc
adc
pop
imul
mov
pop
sbb
sbb
aam
out
outs
dec
pop
int3
adc
mov
mov
fldenv
ins
cmp
cdq
cmp
add
xchg
mov
dec
mov
lea
fucomi
jno
xlat
mov
xor
stos
adc
ins
arpl
push
sbb
or
test
repz
frstor
xor
xchg
not
jo
push
mov
sar
mov
stc
add
stos
shl
daa
loope
(bad)
fcmovu
mov
fist
shl
jbe
in
cmp
(bad)
popf
test
in
stos
scas
popa
mov
or
(bad)
mov
mov
pushf
repnz
repz
movs
cmp
test
scas
dec
stc
lds
dec
jmp
and
gs
mov
xchg
fidivr
jbe
inc
adc
or
sub
mov
out
add
jae
aad
test
popa
loope
ret
(bad)
jo
and
cmp
lock
xor
pop
jnp
(bad)
lock
xor
fsubrp
mov
leave
adc
dec
aas
push
aaa
js
stos
fwait
clc
cmovs
pop
dec
in
add
mov
and
push
jmp
pop
ins
and
inc
add
sbb
dec
cmp
out
mov
xchg
mov
cwde
mov
jae
cli
mov
mov
push
in
nop
pop
shl
enter
xor
add
pop
je
cmps
into
jg
mov
pusha
outs
pop
sub
test
cmp
and
xlat
(bad)
ficomp
xchg
cmc
pop
leave
jg
into
daa
outs
push
popa
in
shl
imul
mov
sub
mov
inc
(bad)
push
lock
das
inc
jle
sti
sahf
mov
imul
(bad)
sbb
stc
mov
retf
popf
ins
stos
jmp
adc
fwait
cmc
mov
jae
dec
xor
movs
cmovge
(bad)
out
sbb
cmps
pop
int3
fldenv
(bad)
shl
or
jmp
adc
fs
sti
xchg
xor
daa
mov
jp
mov
call
pop
jae
cmc
rol
stos
ds
push
jnp
dec
out
popa
mov
icebp
adc
ds
repnz
cmp
test
fidiv
xchg
leave
mov
pop
inc
pop
jne
dec
ins
jmp
retf
cmp
pop
call
clc
adc
fstp
mov
in
std
adc
push
hlt
jmp
dec
xor
mov
and
sub
jo
sbb
outs
inc
pop
(bad)
ds
imul
xor
jle
or
push
lahf
or
mov
addr16
cmp
inc
mov
pop
out
inc
sub
mov
cmp
push
mov
call
xor
shl
pop
push
inc
jle
pop
jmp
cdq
fild
ss
pop
(bad)
jl
das
into
fidivr
data16
repz
cmc
or
shl
in
call
gs
repnz
sub
push
bswap
push
or
xor
jbe
or
rol
pop
jmp
push
or
je
cli
aad
inc
mov
fs
je
and
cdq
loopne
cmc
jbe
bound
fsub
and
mov
mov
(bad)
mov
ins
js
pop
movs
aad
mov
aad
xor
or
jmp
ret
cdq
loopne
cli
pop
ret
cmps
sub
or
into
rcr
aad
ja
inc
loop
adc
cs
popf
ins
loop
pxor
and
xchg
scas
dec
add
in
mov
xchg
std
call
add
iret
sbb
adc
fsub
pop
iret
call
add
xchg
jne
inc
repnz
adc
(bad)
xchg
fadd
inc
push
mov
push
push
es
adc
mov
test
cmp
clc
mov
xchg
enter
cli
mov
bound
mov
popa
mov
aas
pusha
bnd
adc
and
xchg
jae
clc
dec
mov
sub
mov
inc
leave
mov
fdivr
iret
lahf
dec
sar
inc
cs
shl
dec
xor
in
dec
stos
cwde
jmp
lea
sbb
cmp
test
js
sub
adc
sub
cmps
sbb
or
cmp
cmp
cld
cmp
leave
iret
jecxz
mov
out
outs
cdq
sub
pop
pop
pop
dec
add
mov
clc
(bad)
sti
sbb
jmp
fstp
jnp
mov
mov
inc
xchg
push
push
inc
hlt
lahf
std
add
in
inc
add
xchg
cli
add
inc
sahf
jmp
cwde
test
clc
les
pop
jge
dec
rcr
addr16
cwde
cmc
xchg
cmp
lods
jo
and
jb
rcr
test
enter
mov
mov
push
sub
out
add
test
leave
out
dec
test
adc
lds
jge
mov
pop
(bad)
pop
dec
jnp
xchg
ds
sahf
fstp
hlt
xor
and
jnp
mov
cmp
stos
and
cmps
sti
pop
mov
mov
mov
dec
movs
sub
add
inc
dec
pop
inc
pop
inc
pop
pusha
test
lock
dec
aam
icebp
sahf
mov
sbb
add
mov
push
inc
dec
in
sub
mov
sbb
(bad)
sbb
(bad)
pop
arpl
mov
dec
out
xchg
xchg
lods
push
push
out
pop
jb
push
jb
loopne
(bad)
or
jmp
mov
in
push
push
or
stos
mov
and
or
sub
dec
scas
sbb
adc
bound
mov
jle
bound
fnstsw
jmp
movs
jmp
in
xchg
into
inc
aad
imul
or
xor
not
jo
jb
test
cmp
fcom
mov
lea
sbb
jne
add
push
or
sub
jg
fisttp
xor
call
jmp
sti
sbb
push
pop
mov
inc
enter
test
jo
adc
sbb
push
(bad)
jl
dec
dec
clc
cmps
es
fnsave
stos
cmps
fimul
loop
cmp
int3
(bad)
movs
mov
mov
ss
sbb
in
pop
jo
in
add
adc
cmps
(bad)
xchg
mov
rol
xor
lods
test
jecxz
adc
daa
stos
xor
mov
mov
add
iret
cld
sbb
push
cmps
repz
repz
xor
jg
sub
xor
sar
xchg
fdivr
test
dec
xchg
xor
lea
jecxz
jl
mov
adc
(bad)
fst
lahf
inc
pop
jp
scas
push
mov
xchg
xor
ss
adc
int3
push
aad
pop
das
inc
ficomp
sub
lock
inc
pop
movs
dec
xchg
ja
enter
cmp
movs
cmp
data16
jo
daa
mov
sbb
jne
bswap
sti
dec
jo
stc
cmp
out
cdq
push
es
js
and
pop
fdivr
aas
repnz
jp
pop
push
pushf
imul
aaa
hlt
mov
ret
mov
retf
into
stos
repnz
cmp
sbb
xlat
aas
pop
jl
mov
cmps
jne
(bad)
test
popf
sub
add
int
shl
rol
mov
push
sub
aad
jle
push
cmp
ins
loopne
and
add
fucomip
lahf
mov
sahf
icebp
inc
lock
cmp
mov
jp
sbb
xor
cmp
aaa
neg
inc
fcomp
and
cmps
inc
inc
ret
icebp
lahf
ret
mov
sti
lahf
push
sub
mov
mov
xchg
or
dec
lea
xchg
push
inc
add
movs
cld
mov
mov
loope
stos
out
or
jae
inc
ret
mov
xchg
mov
(bad)
imul
mov
pop
lea
cmc
sbb
inc
pop
sbb
outs
fld
lods
xchg
mov
nop
leave
sbb
push
xor
adc
cli
nop
pusha
jb
pop
stos
xor
mov
test
inc
test
sbb
sahf
push
xchg
cmps
push
jge
sbb
inc
sti
fisubr
xchg
add
pmaddwd
dec
cld
push
sub
add
repz
ret
mov
jo
call
movs
sbb
dec
clc
mov
les
outs
push
add
mov
mov
js
stc
sub
or
xchg
inc
inc
sbb
add
inc
inc
jecxz
push
sub
daa
xor
push
xor
cmp
lods
cmc
mov
fbld
lods
jle
loop
jo
jns
js
and
push
or
hlt
adc
inc
iret
mov
cmp
add
add
out
jmp
aam
test
imul
(bad)
xchg
fstp
push
adc
mov
xlat
cmp
push
outs
loope
or
or
xchg
sub
cs
int
push
in
sbb
jno
inc
(bad)
mov
dec
fst
mov
stos
xor
imul
(bad)
mov
lahf
push
fisub
ins
xor
xchg
xor
and
push
dec
and
sti
and
fcmovu
pop
pop
dec
test
stos
sub
lods
adc
cmp
(bad)
jl
movs
lahf
sub
push
inc
cmp
mov
stos
sbb
inc
out
add
cs
sbb
add
xor
mov
call
push
lds
cmps
gs
shr
push
jae
push
js
dec
(bad)
sbb
aam
push
mov
stos
int3
push
fild
cmp
loope
je
sbb
ror
fcmovb
bound
jl
in
enter
imul
jb
and
clc
xor
lahf
or
(bad)
cdq
stos
xchg
(bad)
xchg
push
fwait
mov
cld
test
mov
fdiv
sub
out
cmp
mov
xchg
or
ins
mov
sub
daa
push
dec
imul
sub
mov
add
leave
fdiv
rcr
add
into
xchg
sbb
ja
xchg
aad
ins
push
adc
jno
retf
mov
sub
outs
rcr
popf
cdq
out
lods
into
leave
push
out
not
arpl
pop
retf
pusha
and
inc
popa
rcl
jns
and
(bad)
jne
mov
repz
cmp
mov
popf
(bad)
fldenv
aas
jle
dec
push
inc
in
xchg
ss
adc
sbb
inc
mov
popf
add
pop
int3
hlt
loop
jle
in
jmp
fsubr
jns
push
pop
and
pop
cmp
xchg
mov
(bad)
js
add
pop
repz
fld
xchg
or
pop
add
pushf
or
dec
test
lods
cmp
xchg
jmp
aad
lahf
xchg
scas
les
(bad)
sbb
jecxz
lea
mov
dec
push
mov
mov
enter
pop
rcl
movs
pushf
(bad)
jnp
ins
mov
lods
sbb
cmp
and
cmp
aas
jbe
test
outs
je
mov
in
adc
xchg
mov
mov
mov
ror
dec
xor
rdtsc
jo
xchg
(bad)
pop
or
sub
aaa
nop
fidivr
mov
adc
in
add
mov
xchg
mov
sub
daa
lock
jnp
scas
add
iret
fisub
xchg
pop
icebp
cmp
add
dec
xor
sbb
movs
cdq
push
push
aam
xor
cs
pop
iret
not
add
mov
add
jecxz
or
mov
idiv
xchg
sar
in
jle
mov
mov
mov
cmp
ss
int
(bad)
es
adc
rol
enter
cld
mov
pop
mov
xchg
mov
add
pop
jb
add
pop
bsf
call
loop
std
or
int
imul
into
shl
scas
aad
(bad)
push
xlat
mov
movs
add
or
fld
mul
pop
aad
xchg
sbb
jnp
xchg
cmp
sahf
sub
cdq
jge
fnstsw
mov
and
jae
es
sub
aad
scas
and
ja
add
xchg
mov
sub
aas
jmp
stos
xor
push
aam
push
pop
or
dec
pushf
pop
jecxz
xchg
jbe
push
fucompp
cld
inc
dec
daa
ret
shl
aad
jmp
jnp
imul
mov
jo
push
ss
xor
fdiv
popa
jne
mov
add
arpl
shl
lea
call
cmp
ins
or
adc
mov
ret
in
shl
daa
stos
pop
int3
push
cmps
retf
adc
(bad)
push
cs
sbb
sub
add
mov
jb
jecxz
and
sub
dec
in
mov
mov
and
popf
cmp
and
imul
adc
sbb
sub
fwait
std
sbb
imul
pop
cmp
inc
jns
push
pop
jnp
addr16
mov
ret
sbb
test
cwde
push
or
icebp
imul
mov
xchg
cmp
test
mul
daa
jnp
mov
out
pop
lock
fcmovb
pop
fistp
into
aaa
inc
es
imul
xor
inc
xchg
(bad)
pop
jecxz
shl
mov
out
fdivp
inc
xchg
jmp
(bad)
sub
push
fwait
mov
cmp
adc
cwde
retf
mov
cmp
bnd
test
mov
pop
pop
out
scas
pusha
xor
sub
lea
push
mov
or
dec
push
and
hlt
jg
xchg
push
inc
jnp
std
sahf
pusha
popf
cmc
out
fdivr
mov
sbb
repz
push
inc
dec
jnp
popf
mov
dec
out
xor
in
pop
ja
inc
int3
es
pushf
bound
push
or
pop
or
movs
dec
adc
push
cmp
std
fdivr
and
cmc
pusha
out
mov
inc
pop
xchg
push
call
mov
fbstp
sti
es
lock
dec
jbe
loopne
lods
dec
and
mov
mov
mov
addr16
push
lahf
jae
cmc
jns
movs
or
sbb
fwait
lds
jae
hlt
sbb
mov
cmp
(bad)
mov
mov
(bad)
imul
hlt
cdq
gs
add
mov
xchg
push
sub
push
movs
add
div
mov
pop
pop
inc
sbb
add
jno
mov
and
ss
sub
jg
xor
ja
or
dec
inc
fwait
int
hlt
or
js
adc
push
xchg
sti
(bad)
aam
push
jo
ja
xchg
stc
icebp
test
ret
sub
ins
dec
jne
push
daa
out
clc
push
mov
push
pop
in
pop
into
add
add
fist
rcr
(bad)
(bad)
cmps
push
push
(bad)
and
xor
push
pop
loop
rcl
test
mov
push
mov
popa
loop
mov
cmp
sub
mov
fst
sub
push
inc
or
repz
jge
enter
add
jp
bound
ror
pop
loopne
push
sbb
out
cmp
mov
imul
sbb
and
bound
imul
pop
mov
and
out
repnz
shl
sbb
sub
cmps
dec
push
in
adc
rol
daa
adc
jge
mov
and
jmp
icebp
popa
xor
xlat
aas
bswap
xchg
clc
rcr
pop
les
and
aas
push
mov
enter
mov
pop
je
mov
push
test
(bad)
js
out
fmulp
sbb
lock
mov
xor
imul
cmps
adc
repz
fiadd
loope
push
fucomp
adc
add
and
push
cmp
aam
les
std
or
outs
pop
jne
lock
mov
cmp
jge
aaa
sbb
int3
cmp
fadd
and
pop
das
adc
fst
ds
mov
sar
lock
rol
push
outs
scas
cmc
or
sar
popa
lea
je
jp
outs
xchg
retf
cmc
sbb
loopne
xchg
fs
retf
hlt
repnz
retf
aas
cmp
hlt
ins
cld
push
pop
stos
sub
jmp
xchg
sahf
inc
push
cwde
cmp
dec
aas
xchg
mul
icebp
xlat
sub
inc
in
stos
in
pop
add
cdq
lea
loopne
mov
xchg
out
stos
cli
cs
scas
push
in
movs
pop
mov
ficom
cs
outs
xchg
cli
mov
les
int
dec
int
lea
sti
sti
jmp
add
jg
adc
xchg
aaa
inc
mov
popf
xor
mov
mov
adc
sub
aad
int3
movs
jp
repnz
or
adc
lea
out
and
loope
les
mov
cmp
sub
pop
and
sbb
sub
mov
aam
(bad)
es
cdq
sti
jmp
inc
ss
mov
sub
aas
push
pop
mov
sub
lds
and
cli
xor
fmul
cmp
xor
jecxz
mov
shl
test
mov
scas
sub
inc
cwde
add
cld
lock
js
or
ja
dec
push
ja
js
xor
arpl
stos
mov
repz
ja
mov
fld
cmp
aaa
pop
mov
ja
add
inc
mov
xchg
or
mov
imul
mov
adc
repz
jb
out
fcom
fstp
push
jl
push
(bad)
rcr
xchg
pop
cmp
movs
cmp
adc
jge
pop
pop
jno
xchg
movs
fdiv
push
pop
mov
movs
and
retf
sub
fbstp
sar
das
test
and
jbe
cld
sub
and
jecxz
push
jb
addr16
enter
inc
in
fcom
jmp
mov
dec
mov
push
xchg
das
out
arpl
cmp
jnp
mov
mov
loop
int
push
sub
int
outs
mov
fdivr
xchg
xor
movs
push
icebp
mov
jno
mov
sar
or
add
adc
and
cld
add
dec
and
stos
push
imul
lock
ficomp
sbb
jo
sub
xchg
data16
shr
in
push
ret
xchg
(bad)
xor
scas
rol
cwde
xor
mov
sub
add
repnz
cmp
sub
add
jno
out
fldenv
ret
push
mov
jns
movs
sbb
xchg
fcmovu
mov
mov
mov
sbb
ret
mov
mov
jns
mov
inc
inc
sub
cmp
xor
pop
lock
add
add
add
mov
mov
int
pop
sbb
jmp
sahf
xchg
(bad)
loope
retf
nop
pop
xor
dec
mov
mov
pop
cmp
cmp
inc
jg
call
pop
sbb
dec
fild
dec
xor
imul
xchg
pushf
imul
jb
nop
mov
data16
enter
fisttp
std
and
sbb
arpl
mov
movs
xor
sub
retf
pop
inc
mov
retf
idiv
push
ja
cli
scas
sub
mov
fst
xchg
push
enter
mov
jle
fwait
inc
add
sahf
cmp
es
call
or
pop
sub
mov
mov
sahf
stos
aam
add
retf
cmp
fiadd
ret
xor
jnp
(bad)
aam
add
mov
xor
add
popa
jmp
cmp
ins
sbb
push
jecxz
nop
adc
and
hlt
mov
pop
shl
fdivr
fisubr
test
rcl
aam
xchg
jo
adc
int3
jmp
jne
cmp
add
jbe
mov
popf
inc
sub
push
mov
push
mov
repnz
mov
rol
clc
pop
shl
mov
cmp
shl
retf
clc
pop
add
mov
test
rep
xor
aam
fiadd
(bad)
popa
in
sbb
xchg
jae
in
out
popf
test
cmp
push
cmp
xchg
mov
jmp
jmp
into
inc
mov
adc
das
dec
sbb
xor
push
out
retf
fwait
je
retf
and
mov
scas
or
mov
push
arpl
or
push
sbb
loopne
sub
mov
dec
outs
clc
inc
into
scas
pushf
push
hlt
es
cmp
push
jns
(bad)
fcom
lahf
push
lods
rcr
sub
mov
jge
and
cmps
ret
adc
outs
jge
into
adc
iret
mov
dec
xor
xor
daa
aam
in
pop
loop
add
stos
mov
inc
jle
or
dec
rcl
and
mov
or
mov
mov
sbb
sbb
cmp
lods
sbb
push
int3
jo
adc
cmp
xor
cmp
pop
jmp
inc
inc
cmp
rol
fldcw
xchg
mov
cmps
fsub
pop
push
arpl
adc
xor
movs
jmp
or
push
xor
inc
aaa
xor
push
cdq
xchg
fdivr
bound
mov
inc
mov
sbb
call
mov
shr
or
test
xor
sub
movs
push
inc
jp
mov
dec
push
xor
aas
nop
or
push
jnp
cli
dec
jecxz
mov
adc
sbb
or
sbb
leave
mov
sub
and
cmc
dec
add
dec
sub
pop
scas
ret
xchg
mov
pop
fwait
(bad)
ror
arpl
mov
fdiv
push
pop
push
movs
adc
loopne
inc
add
pop
mov
out
popa
dec
(bad)
clc
stos
setp
fidivr
(bad)
mov
int
lods
outs
leave
aam
dec
pop
int
clc
mov
js
sub
faddp
add
pop
cmp
push
mov
pop
cmp
dec
jno
mov
ja
mov
ror
pop
loop
call
ds
ret
fucomip
mov
lahf
fsub
daa
sub
xor
es
sar
fimul
pop
pop
ins
out
int3
gs
push
push
xor
mov
sub
btr
loop
pop
push
cmc
imul
and
ret
in
xor
js
dec
cmp
jb
pushf
in
adc
mov
std
cmp
fmul
fdivr
add
clc
ret
dec
sub
inc
dec
mov
in
mov
pop
mov
ins
dec
mov
(bad)
mov
push
and
sbb
test
pop
aaa
(bad)
repz
popa
test
es
sub
mov
stos
pop
dec
xchg
push
cmps
and
movs
outs
in
repnz
jmp
and
jmp
push
outs
ins
aam
fild
push
retf
sub
add
fbstp
jl
mov
sti
ins
jge
addr16
inc
inc
add
shl
mov
dec
loopne
cmp
in
pop
fmul
retf
or
fwait
sti
sbb
xlat
adc
or
jnp
repnz
dec
mov
push
sub
retf
(bad)
add
adc
lods
add
xchg
cmc
(bad)
data16
push
rep
mov
test
in
jmp
lock
test
or
(bad)
mov
stos
jns
test
sbb
jbe
imul
push
mov
jmp
or
inc
xchg
call
es
out
fidiv
out
jbe
and
pop
or
cmp
inc
sub
jnp
aam
sub
repnz
pop
fwait
add
ins
mov
jmp
add
ins
cvtps2pd
dec
push
out
cmps
lds
pop
je
push
push
mov
je
dec
ins
add
movs
push
imul
or
daa
inc
mov
iretw
mov
push
cmp
pop
stos
cmp
(bad)
mov
ror
inc
sub
cli
cwde
pop
lods
xor
and
mov
push
cmp
movs
pop
stc
push
mov
xchg
or
retf
sbb
sub
(bad)
idiv
dec
push
cdq
std
enter
test
cmp
lahf
mov
out
fadd
inc
test
test
bound
dec
xor
or
scas
aam
or
jns
mov
sbb
add
add
mov
pop
or
bound
adc
inc
push
dec
call
test
mov
pushf
or
fistp
mov
repnz
mov
out
fstp
(bad)
pop
test
mov
data16
and
shr
(bad)
in
cli
push
pop
fwait
add
push
adc
cdq
mov
fidivr
(bad)
push
imul
or
dec
mov
lods
cmp
and
in
mov
mov
mov
mov
fucom
inc
mov
adc
out
fiadd
fcom
jmp
dec
dec
jae
push
xchg
clc
leave
das
icebp
scas
sbb
imul
add
mov
mov
jno
add
shl
sti
push
mov
fld
add
xchg
xchg
mov
sub
sbb
inc
in
leave
adc
push
fadd
fstp
push
add
call
add
xor
pop
xchg
mov
dec
fcomp
cmc
push
popf
mov
fwait
pop
ret
(bad)
sar
sti
bound
das
(bad)
push
jp
mov
ins
in
adc
pop
stc
push
ret
jmp
std
nop
mul
ja
nop
retf
rol
and
repz
mov
and
mov
je
sbb
push
mov
enter
lods
fs
jbe
mov
jnp
mov
dec
cmp
loopne
repz
cs
mov
bound
(bad)
dec
jp
fisttp
cmps
sub
shr
sbb
or
je
rcr
xchg
jb
xor
lea
and
scas
std
stos
mov
sahf
scas
cmps
sub
je
lods
rcr
je
xlat
inc
dec
sub
es
(bad)
into
cmp
fcom
or
retf
cmp
gs
fdiv
cmp
in
aas
sbb
add
aad
mov
mov
icebp
xchg
retf
pop
data16
adc
cmps
fsub
cmps
cmps
nop
mov
mov
ins
std
push
push
xchg
push
jp
push
jp
mov
or
lods
jg
into
cmc
add
and
ja
ficomp
mov
aad
or
ret
sub
push
lahf
cdq
or
stos
ror
lock
imul
sub
pop
dec
cld
cdq
push
and
and
or
das
(bad)
push
frstor
adc
xor
mov
push
sbb
iret
push
ja
dec
push
cmps
lods
outs
inc
rcl
add
cmps
or
retf
in
neg
and
das
int
push
movs
movs
push
dec
dec
movs
sub
push
sti
sub
push
cmp
mov
add
pop
arpl
rcr
int3
icebp
sub
shr
les
je
push
frstor
jae
push
das
movups
jmp
and
mov
dec
mov
ret
or
jne
icebp
mov
inc
ja
shr
popf
mul
jo
(bad)
stc
lea
push
pop
jns
pop
inc
jns
sbb
retf
leave
dec
adc
jne
mov
jecxz
and
retf
mov
not
fs
pop
retf
pop
or
jmp
imul
movs
jp
imul
or
push
push
jns
arpl
adc
(bad)
mov
mov
sbb
pop
jp
adc
mov
push
jg
sub
movs
fxch
enter
and
fsubr
pushf
out
dec
add
add
shl
and
bound
add
test
pop
in
clc
lahf
push
mov
cmps
and
pusha
xchg
pop
push
push
sbb
and
shl
pop
std
sub
pop
hlt
pushf
pop
cmp
sub
stc
mov
lods
adc
adc
xchg
ins
dec
fsub
bound
call
mov
adc
shl
or
loopne
dec
sbb
cmp
test
inc
push
xchg
pop
dec
mov
addr16
mov
sbb
aas
push
jae
call
inc
gs
xchg
loop
mov
sbb
out
mov
mov
inc
and
call
pop
add
push
and
fcmovu
or
add
push
jno
ins
aas
das
popf
push
mov
inc
scas
xchg
nop
aam
push
fnstsw
push
inc
(bad)
mov
cmp
push
jbe
or
mov
xor
xor
or
mov
ins
inc
push
stc
pop
xchg
pop
inc
adc
ret
or
mov
pop
adc
stos
ret
hlt
imul
pop
scas
mov
imul
cmp
call
sub
or
fs
push
test
mov
stc
mov
fsub
sbb
dec
scas
ds
in
pop
sbb
xor
ret
cmc
adc
pushf
js
fild
cmp
mov
ret
lods
add
leave
pop
lods
and
dec
popf
inc
add
sbb
ret
movs
xchg
std
(bad)
fdiv
sub
cmp
inc
aam
xchg
push
jae
mov
adc
xchg
enter
repz
pop
cdq
out
sub
inc
test
or
xor
push
aaa
mov
push
xchg
ret
ja
jmp
ja
pusha
(bad)
cmp
int
lods
test
sti
sti
fisttp
call
mov
cli
sbb
stos
lods
push
lahf
mov
test
pop
sub
cmc
jmpw
push
push
clc
imul
popf
jbe
add
call
mov
leave
push
xchg
call
add
leave
(bad)
cmp
jo
lahf
mov
push
push
add
mov
loopne
daa
sub
jmp
or
sub
inc
push
lods
and
cmps
mov
mov
cmp
fiadd
mov
stos
jmp
push
add
fucomp
xor
outs
push
mov
retf
xor
in
arpl
imul
cdq
cmps
call
jo
jg
xchg
jge
mov
ret
pushf
aam
call
dec
and
add
jnp
aas
(bad)
pop
(bad)
sar
out
jne
std
mov
add
pop
xor
push
popf
jp
stos
psrlw
dec
stos
imul
test
ss
adc
arpl
aas
hlt
daa
mov
out
cmp
pop
xor
xor
das
jb
pop
ins
cmps
sub
pop
or
add
and
mov
mov
sub
jg
inc
inc
or
sahf
sub
pop
fsub
lahf
sbb
aam
loopne
add
xor
inc
je
sbb
jns
dec
test
jo
jecxz
jae
lds
cwde
ds
mov
ffree
jno
pushf
and
shl
cmc
outs
mov
bound
mov
aam
push
add
xor
sub
xor
mov
fwait
add
out
sbb
cmp
mov
mov
xchg
jbe
ins
cld
cmp
sahf
stc
sub
mov
sbb
sbb
popa
lahf
mov
and
push
push
jbe
add
mov
dec
call
retf
xchg
jbe
jnp
adc
int3
cmps
mov
loope
retf
test
sub
popa
xchg
dec
test
and
sbb
push
sahf
lock
or
psrld
sbb
loope
jnp
cmp
cmp
movs
pop
adc
arpl
test
rcl
sbb
xchg
pop
pop
jns
shr
pusha
scas
aad
fcmovnbe
jbe
fisub
(bad)
adc
mov
cmp
jge
fld
rep
ror
sbb
outs
repnz
call
dec
dec
fcmovne
and
out
and
fsubr
push
mov
pop
push
jnp
xchg
pop
(bad)
stc
lds
imul
xor
mov
cmp
sti
scas
xor
aas
sbb
test
jmp
jbe
fld
mov
cli
jnp
mov
aad
outs
or
aam
pop
test
mov
ins
mov
mov
in
jne
lods
and
pop
std
xor
cli
mov
movs
and
sti
mov
jg
dec
xchg
ins
(bad)
adc
sub
in
jbe
gs
bound
jb
mov
out
adc
push
aaa
or
xlat
xor
adc
xchg
or
popa
addr16
or
jbe
push
push
push
test
fisub
aad
ror
xchg
pmulhuw
or
jns
std
jns
test
and
pop
mov
mov
push
and
xchg
adc
or
pop
popf
ror
rcr
jmp
adc
mov
and
loop
push
mov
retf
cmp
mov
pop
dec
cmp
ins
and
sbb
stos
movs
test
or
in
int
aad
xchg
jnp
jge
push
cli
sahf
jg
sub
mov
ins
pop
mov
out
int3
scas
arpl
xchg
jmp
imul
xor
or
fisttp
call
pop
sar
sub
iret
daa
ret
push
hlt
cmp
pop
xchg
test
sub
cmp
xchg
(bad)
and
ins
dec
xchg
es
jae
cld
test
dec
inc
cdq
adc
lds
ror
xor
lods
nop
mov
das
jnp
jb
clc
mov
sub
arpl
je
push
dec
jns
ins
jle
aam
leave
add
and
cmp
inc
push
lea
xchg
adc
push
aad
push
outs
movs
nop
xchg
xor
neg
xchg
mov
lds
adc
retf
jmp
nop
xchg
stc
pushf
inc
push
and
sbb
and
xor
(bad)
out
das
or
lock
push
jbe
xchg
inc
sub
or
and
addr16
mov
inc
cmc
ins
pop
xchg
(bad)
dec
movs
retf
mov
aam
sub
or
outs
in
xchg
pop
xor
xchg
stos
mov
jne
call
(bad)
inc
jnp
sbb
jae
fiadd
inc
sub
inc
mov
pop
sahf
xchg
movs
sub
in
fld
and
inc
daa
or
inc
stc
adc
mov
sbb
add
mov
test
or
jno
inc
daa
(bad)
iret
xchg
inc
push
call
mov
push
mov
fwait
cmp
dec
neg
xchg
xor
mov
push
int3
dec
jp
dec
aaa
mov
xor
sahf
and
les
cmp
fst
sub
push
stos
stc
push
jle
jmp
sti
sub
les
xlat
jmp
jns
sub
iret
ret
push
push
scas
iret
cld
and
ss
leave
loope
xchg
cli
xchg
sub
pop
jmp
ins
dec
pop
shl
fbld
(bad)
ss
scas
jnp
lahf
and
popf
push
xor
imul
hlt
pop
or
gs
pop
out
aam
sar
data16
lods
es
add
pop
xor
dec
adc
outs
in
mov
ret
cmp
adc
dec
dec
outs
push
push
and
mov
adc
pop
pmaddwd
fld
ss
stos
out
add
xor
test
pop
mov
fst
dec
les
jnp
jb
pop
sbb
jmp
test
dec
mov
add
mov
sub
aas
pop
mov
mov
int3
sub
jb
les
into
sbb
pop
scas
and
mov
cmp
adc
cmps
int3
fcmovb
add
xchg
sbb
sar
xor
in
add
mov
jecxz
push
push
setbe
cdq
sub
clc
mov
mov
push
scas
adc
out
jg
jl
inc
xchg
pop
jl
aad
xchg
mov
not
jae
pop
inc
mov
not
xchg
lock
adc
stos
cdq
cs
mov
xchg
sbb
xor
sti
mov
sti
jnp
mov
push
adc
xchg
pop
movs
xor
fs
iret
into
shl
pop
jle
call
sar
adc
jb
(bad)
or
popa
pop
movs
(bad)
push
scas
btc
xchg
cmp
call
mov
jmp
or
shl
push
and
mov
xor
pop
(bad)
mov
mov
loopne
hlt
inc
jbe
stos
jmp
ror
push
jl
inc
addr16
sub
push
mov
test
(bad)
sbb
mov
push
outs
inc
test
dec
scas
loope
jbe
test
mov
pop
sbb
mov
idiv
imul
mov
loope
scas
add
scas
test
xchg
js
test
daa
add
mov
cmp
loope
cli
adc
aaa
shl
push
dec
jge
sub
mov
cmp
(bad)
push
lds
ss
mov
arpl
xor
sub
fwait
xchg
jbe
adc
rcl
(bad)
pop
fimul
pushf
pop
xor
adc
jmp
scas
pop
mov
nop
daa
bound
sti
jb
xchg
cmc
mov
mov
push
push
xchg
pop
sbb
mov
xchg
jmp
cmp
loop
call
jb
xor
clc
sbb
into
in
ret
in
imul
cmps
pushf
std
icebp
and
inc
or
(bad)
or
ins
outs
stos
jmp
in
(bad)
cli
in
cmp
mov
or
pusha
in
push
enter
ja
xor
les
mov
and
mov
pop
mov
jb
mov
add
mov
int
sub
(bad)
or
in
test
in
cmp
dec
int3
test
adc
dec
push
sar
pop
hlt
xor
stc
cmp
out
ret
sub
inc
adc
test
je
pop
xlat
scas
std
jmp
xchg
fimul
out
dec
jae
scas
sbb
addr16
pop
mov
add
add
inc
sbb
push
(bad)
cdq
mov
mov
pop
push
jmp
cmp
cmps
idiv
pushf
test
jmp
call
adc
fsubr
out
loop
xchg
aas
push
push
cdq
aaa
aam
push
test
jae
sub
aad
mov
fiadd
xor
xchg
int
aaa
push
pusha
inc
xchg
jne
stos
mov
inc
fstp
ficom
mov
not
cdq
das
lds
mov
pop
jl
lahf
pushf
aad
dec
in
cdq
jbe
inc
and
inc
lods
or
in
out
aaa
pushf
mov
sbb
aaa
mov
scas
mov
arpl
push
and
adc
mov
in
gs
jbe
aaa
inc
add
movs
aaa
push
popf
and
outs
xlat
add
inc
fs
and
and
push
push
js
nop
or
xchg
daa
pop
jae
lds
stos
ins
mov
mov
mov
xchg
add
or
mov
pop
in
ret
outs
imul
sbb
out
ret
jbe
mov
push
fsub
fs
mov
cmp
push
pop
sti
out
push
mov
dec
sbb
mov
retf
adc
popa
test
xlat
mov
outs
dec
add
in
pop
je
add
or
adc
outs
add
inc
pop
sub
cmp
xlat
lds
add
dec
pop
repnz
out
adc
jp
inc
inc
hlt
stos
je
xchg
push
jecxz
inc
sbb
dec
test
add
fcomp
xchg
xlat
jmp
dec
pop
adc
(bad)
mov
mov
xor
fisttp
neg
adc
add
and
in
adc
cdq
add
mov
sbb
ins
ds
cs
cmps
int
fist
sub
jae
fistp
test
mov
lods
mov
or
(bad)
std
fcomp
idiv
xor
jg
enter
movs
imul
imul
daa
shl
cmp
mov
les
ret
add
pop
daa
rcr
stos
push
out
pop
jb
jne
or
adc
or
xchg
loop
xor
xchg
ins
js
mov
xchg
imul
test
cmp
arpl
mov
pop
out
add
xchg
pop
jecxz
sub
xor
pop
jecxz
rcl
xor
fisttp
ins
xchg
push
xor
addr16
jno
dec
pop
es
in
stos
nop
cmp
jge
fadd
idiv
cmc
test
inc
jmp
cli
add
ret
xchg
rcl
fnstsw
mov
inc
sbb
or
dec
mov
test
fs
fwait
scas
adc
xor
retf
call
imul
aam
or
or
enter
scas
(bad)
movs
cmp
mov
jl
adc
les
inc
in
pop
scas
or
jno
rol
pop
gs
jl
sahf
mov
adc
ror
or
stc
int
repz
stos
mov
icebp
ja
xor
sahf
fsub
jnp
rcl
and
xor
dec
dec
pop
fild
or
pushf
loopne
(bad)
int3
fwait
pop
xor
jnp
push
popf
pop
mov
sbb
adc
dec
mov
pop
jmp
das
sub
jbe
or
push
mov
inc
mov
retf
shl
cmp
xor
adc
sqrtps
inc
pop
ja
test
pop
fist
mov
cmp
fst
retf
pop
xor
jno
add
or
lds
xchg
sbb
retf
shl
das
rcr
and
in
stos
xor
data16
leave
mov
(bad)
shl
xlat
mov
xchg
jnp
cmps
cli
rol
inc
mov
push
fild
gs
jmp
inc
mov
mov
pop
daa
xlat
fs
pop
jnp
sub
or
repz
arpl
push
mov
dec
stc
(bad)
and
(bad)
jmp
pop
xchg
inc
cs
jecxz
out
ins
cmps
cdq
into
mov
mov
xchg
imul
and
or
and
ss
inc
xor
xchg
aas
icebp
mov
xchg
shl
rcr
and
in
lods
jae
and
stos
test
js
daa
cld
jbe
dec
push
push
sbb
jmp
or
jg
hlt
cmp
jnp
es
dec
aas
sbb
retf
mov
enter
rcl
pop
or
mov
arpl
xchg
dec
(bad)
(bad)
mov
sbb
dec
sbb
or
sbb
out
shr
popf
xor
or
or
bound
jg
sbb
fimul
cs
pop
jb
ss
loope
mov
jmp
and
call
sbb
jl
or
add
data16
push
xchg
inc
leave
loop
xchg
movs
jle
(bad)
movs
stc
xchg
jne
dec
xchg
cdq
xor
in
mov
retf
daa
inc
and
jecxz
scas
retf
jl
sub
fwait
xor
sub
ss
imul
mov
hlt
push
(bad)
lds
adc
push
fnstenv
dec
and
test
pusha
mov
mov
fs
cmpxchg
sbb
test
pop
dec
sub
and
add
ss
mov
clc
(bad)
and
xchg
lods
js
jae
push
sub
jo
mov
sub
adc
clc
lahf
gs
dec
and
daa
xlat
(bad)
and
cmps
ret
push
jno
and
sbb
xchg
mov
fidivr
je
ja
or
push
cmp
sub
test
mov
push
jle
push
subps
call
in
shl
std
inc
jno
inc
movs
inc
xor
jmp
cmc
iret
or
fs
lea
inc
push
popa
test
push
xchg
sbb
or
or
add
jp
mov
cdq
inc
dec
imul
xor
or
or
mov
cmps
rol
stos
mov
jp
xor
jo
push
mov
and
call
jge
js
pop
mov
add
add
mov
pop
imul
sub
ins
scas
fiadd
mov
xchg
mov
and
cwde
push
adc
xchg
mov
into
mov
push
std
dec
pop
push
jbe
fdivrp
sbb
cmp
repnz
xor
jo
xlat
rcl
iret
rol
(bad)
mov
add
loopne
xchg
jns
cdq
(bad)
call
sub
push
cmp
xor
loop
mov
add
xor
push
jne
movs
jo
call
in
test
aas
jns
(bad)
mov
mov
test
adc
jmp
out
mov
sbb
dec
cmp
and
outs
(bad)
pop
push
push
loopne
pop
sbb
popa
dec
xor
sbb
push
push
rcl
push
or
cmp
jmp
push
mov
idiv
div
and
call
xchg
outs
mov
push
je
enter
lahf
mov
pop
dec
(bad)
add
ror
xor
adc
xor
or
and
cwde
aad
out
fwait
mov
xchg
cmp
sub
mov
pop
add
mov
inc
loope
pop
stos
fistp
and
xor
or
daa
xchg
jl
jmp
push
push
test
sub
cs
push
mov
mov
or
lods
je
adc
mov
cmps
stos
pusha
mov
test
pop
clc
push
test
repnz
and
xchg
jecxz
xor
mov
mov
les
mov
into
push
dec
pop
or
inc
mov
mov
pop
and
push
mov
push
sbb
arpl
dec
dec
pop
or
fcmovne
adc
xchg
add
movs
(bad)
aaa
or
adc
jecxz
xchg
outs
dec
outs
sub
cld
jmp
mov
add
imul
(bad)
neg
xchg
call
lahf
jmp
test
or
push
xchg
jb
adc
add
scas
push
shl
mov
push
mov
add
mov
mov
mov
jge
(bad)
jbe
iret
jo
and
es
clc
pop
cmc
mov
in
mov
vmwrite
ss
clc
call
jl
push
and
pop
cmps
hlt
retf
repz
repz
mov
cli
sbb
clc
add
jae
mov
inc
cli
enter
or
jmp
jnp
add
call
inc
push
std
push
lods
jne
aam
push
stos
icebp
sbb
jae
push
sub
ja
pop
test
dec
add
pop
push
sbb
mov
aam
das
add
ins
outs
push
push
loope
cmp
fidiv
xor
stc
arpl
scas
xchg
push
shr
mov
(bad)
ror
loop
inc
mov
repnz
nop
push
sbb
cld
mov
popa
mov
mov
xchg
xchg
mov
and
stos
mov
cmp
mov
out
bnd
and
push
stos
xor
or
push
add
cmp
xor
jbe
push
xor
or
inc
mov
push
bound
pop
mov
fisub
jno
mov
out
int3
pop
mov
pushf
test
adc
cmp
pop
in
out
push
and
sub
mov
movs
mov
test
xchg
pop
cdq
mov
cs
ds
inc
inc
xchg
pop
cmp
mov
mov
jecxz
cmps
mov
es
in
mov
mov
popfw
or
pop
jo
into
xor
cmps
cmp
jp
jb
ss
jns
cmp
xlat
sbb
lock
fnstsw
xor
push
or
out
cmp
nop
pop
pop
mov
mov
push
rol
adc
into
push
dec
bound
push
inc
xor
sbb
add
scas
add
mov
inc
jnp
xchg
mov
mov
das
stos
cmp
xchg
push
or
mov
imul
and
jp
jns
mov
add
retf
enter
jg
xchg
adc
je
xchg
inc
clc
pop
lods
(bad)
clc
lock
xchg
test
retf
jmp
adc
sub
fs
stos
xchg
or
inc
int3
jmp
push
es
pop
into
jl
mov
in
dec
mov
(bad)
cwde
xor
jle
cmps
jns
iret
loope
nop
pop
cmps
inc
div
movs
in
pusha
sub
adc
mov
std
jb
mov
int
pop
pop
mov
adc
jb
ret
iret
out
and
mov
not
fs
loop
mov
and
icebp
fistp
adc
dec
sbb
mov
test
sahf
fisub
ja
int
add
sub
jle
fidiv
add
mov
int3
fnsave
movs
add
mov
xor
cmps
and
mov
shr
jno
retf
sti
adc
pop
cdq
cwde
pop
mov
dec
fs
aaa
xchg
call
push
test
jmp
fcomp
dec
xchg
rcl
adc
adc
sub
adc
mov
push
dec
jle
das
and
cld
(bad)
shr
fdivr
push
jg
pop
jecxz
cdq
sbb
adc
pop
lock
test
or
jnp
add
push
ins
dec
and
mov
mov
fstp
xchg
addr16
adc
int3
or
cmp
xchg
not
adc
gs
or
sub
adc
(bad)
hlt
cdq
ret
inc
in
inc
fdivr
pusha
cmps
mov
(bad)
mov
jne
sahf
dec
add
scas
js
xor
dec
inc
rcl
lahf
ret
int3
lods
out
mov
or
pop
clc
cld
jns
(bad)
retf
sahf
push
sbb
lahf
mov
push
es
cdq
call
inc
mov
iret
(bad)
cmps
sbb
push
stos
repnz
ins
clc
aas
jae
mov
pop
stos
add
les
aaa
cmps
imul
or
pop
mov
mov
dec
xchg
nop
sti
mov
ret
and
les
cmp
fs
push
pop
ret
mov
inc
out
call
jne
nop
pop
and
sbb
xor
popf
fwait
retf
sbb
(bad)
loop
jae
pop
adc
cmp
sbb
(bad)
jbe
movs
neg
or
inc
mov
popf
add
fild
fstp
jae
stc
sahf
add
inc
lds
push
dec
and
shl
and
ja
jae
arpl
movs
mov
cmp
cwde
xchg
pushf
sbb
dec
pushf
test
fild
addr16
inc
std
gs
and
retf
sub
fdivp
jae
jmp
jg
fwait
movs
sbb
cmp
sbb
and
repz
pusha
sbb
push
fisttp
outs
add
jo
adc
cdq
mov
mov
jae
inc
cmp
outs
jg
or
mov
lods
cli
pop
add
jne
mov
pop
inc
cmp
je
mov
(bad)
out
test
xlat
mov
xchg
jne
cmp
jno
(bad)
inc
or
ins
push
add
sbb
test
mov
das
in
jmp
mov
fidivr
nop
and
ret
popa
je
mov
mov
les
cmps
fnstenv
(bad)
mov
shl
jbe
mov
stc
mov
xlat
add
movs
ins
je
in
fwait
xor
movs
mov
ret
jnp
sahf
push
es
inc
mov
jmp
pop
int3
ds
ret
and
sahf
call
loop
fsubr
arpl
dec
jo
add
aaa
inc
dec
sub
mov
push
mov
adc
aad
hlt
push
sub
adc
and
mov
mov
ret
dec
in
ret
in
(bad)
jl
adc
add
xor
call
xor
(bad)
and
(bad)
push
jb
std
call
jae
icebp
adc
fcomp
xor
mov
lods
rcl
adc
test
push
pop
aad
jmp
lock
sbb
test
jae
repnz
jle
jecxz
aaa
sbb
xchg
pop
ror
int3
mov
in
mov
or
sti
aas
jnp
lahf
cmp
ret
add
(bad)
pop
repz
push
mov
pusha
sub
push
call
xor
jmp
and
inc
out
jns
mov
and
xchg
std
loopne
jmp
pop
stos
iret
shl
inc
dec
mov
jbe
or
pop
pop
out
add
dec
imul
ficomp
clc
imul
xor
lahf
push
lock
or
enter
adc
aas
inc
ins
or
pop
ja
mov
cmp
lock
xor
jnp
jecxz
imul
scas
test
(bad)
outs
test
cmp
mov
push
aad
and
icebp
cdq
adc
sar
std
mov
mov
mov
aas
loop
push
lea
mov
sar
inc
jecxz
sub
jns
dec
test
xchg
popa
inc
scas
mov
and
push
rep
sbb
test
in
mov
dec
rcr
xchg
xor
xor
call
xchg
aad
rcl
lea
int
in
mov
dec
test
in
add
jb
sub
leave
popa
push
shl
ficom
push
or
pusha
inc
push
call
fs
sbb
mov
mov
mov
les
out
(bad)
fs
cmp
fsubrp
jg
mov
lea
in
pop
ror
xor
sub
push
addr16
mov
pop
ins
xchg
pop
sbb
sub
cld
retf
cmp
mov
jne
pop
xchg
shl
cli
ret
and
dec
or
add
fisub
sub
dec
aas
dec
in
inc
and
sub
sbb
mov
test
or
sti
mov
inc
inc
cdq
dec
jmp
aad
fisttp
mov
outs
retf
gs
ror
scas
sbb
jmp
jo
mov
inc
xchg
pop
inc
pushw
test
outs
pop
xor
not
pop
dec
xor
ret
ja
xchg
add
stos
jge
jns
or
xor
sub
ins
repz
scas
and
dec
add
sar
test
pop
mov
add
add
gs
scas
xor
aad
push
in
test
add
jb
or
add
retf
outs
xchg
push
dec
xchg
fcom
pop
mov
aad
pop
std
adc
dec
stos
mov
pop
mov
jmp
aas
cmp
xchg
sti
mov
lea
dec
mov
mov
lock
jle
fidivr
and
mov
dec
pop
rcr
pop
mov
(bad)
aad
rcr
jnp
inc
and
inc
in
je
scas
xor
xor
mov
sub
popa
push
pop
jnp
mov
mov
dec
aaa
or
outs
jae
inc
jo
aam
push
push
cmp
aaa
cli
jae
aaa
dec
(bad)
pop
xchg
cmp
(bad)
sub
jmp
popf
icebp
push
mov
fbld
js
and
sbb
cmps
and
inc
hlt
mov
es
sahf
inc
pop
mov
adc
nop
into
pop
imul
mov
inc
adc
fs
mov
out
xchg
sub
cwde
aas
rep
nop
mov
mov
rol
inc
mov
xchg
jecxz
push
push
(bad)
in
ds
sbb
in
mov
jns
repz
jg
clc
lahf
mov
rcl
xchg
adc
fsub
call
jl
sub
int
xchg
call
adc
cmp
test
xor
(bad)
pop
xor
bound
cmp
push
pop
push
or
mov
ins
test
aad
or
sub
cwde
adc
sbb
dec
retf
pop
mov
ss
stos
fidivr
cmovp
cmp
push
inc
cmp
pop
mov
es
daa
pushf
jge
jnp
mov
jnp
cld
xchg
(bad)
sbb
pop
movs
aam
pop
gs
popa
scas
cmps
inc
stc
test
loop
pop
mov
cmc
mov
dec
sub
dec
xchg
leave
cmp
shl
push
repnz
pushf
mov
mov
movs
cs
jmp
leave
jecxz
nop
out
stos
sub
loop
xor
dec
push
cmp
gs
out
and
clc
ss
out
mov
xchg
js
sub
dec
mov
pop
mov
test
cli
call
in
dec
repnz
xor
lahf
ja
push
mov
loope
sbb
sbb
xor
out
test
out
mov
and
lds
repz
retf
and
clc
shl
jl
(bad)
test
ins
inc
xchg
stc
imul
fld
in
add
inc
and
cmps
sbb
add
dec
jne
mov
jl
dec
dec
std
clc
jmp
hlt
pop
push
je
retf
fnsave
(bad)
cmp
(bad)
mov
push
jl
sbb
or
inc
je
adc
sub
jns
xor
(bad)
bound
mov
push
aam
cs
pusha
inc
add
add
in
xor
imul
jo
jge
pop
sbb
xor
popf
inc
daa
add
mov
xchg
and
sub
sub
sub
neg
jl
enter
jl
xor
shl
daa
gs
sbb
cmp
mov
cdq
cmp
cmp
rol
xchg
jmp
stos
jo
loope
test
in
or
shl
sub
push
adc
and
daa
adc
fidiv
cs
out
mov
cmp
stos
mov
push
push
bound
mov
(bad)
push
xor
pop
test
and
test
bound
inc
out
stos
fnstenv
lahf
jg
jecxz
dec
js
and
adc
jp
scas
cs
lods
mov
dec
cmc
ds
rol
and
and
push
pop
dec
cmp
test
(bad)
mov
fs
je
mov
pop
cmp
jle
jl
mov
push
push
imul
popf
stc
das
push
mul
xchg
or
xor
adc
add
mov
data16
mov
cld
arpl
hlt
scas
jno
cmp
popa
mov
mov
out
ins
xchg
mov
push
pop
daa
sub
lock
psrld
call
sbb
dec
push
scas
push
leave
inc
add
xchg
int
mov
pop
out
iret
gs
xchg
inc
aad
stc
mov
and
mov
push
push
xor
nop
or
inc
fld
or
dec
lock
div
into
jnp
rcl
xor
and
push
or
cmp
inc
inc
jb
adc
ret
sbb
xchg
inc
cdq
sub
sbb
xchg
test
mov
inc
mov
push
jae
adc
in
dec
inc
fisubr
push
inc
push
cwde
adc
adc
jno
push
cmp
iret
aam
outs
and
inc
push
add
mov
lods
push
or
dec
es
and
(bad)
scas
pop
movs
repnz
inc
(bad)
and
cmp
(bad)
in
retf
jbe
sbb
xchg
jo
cmp
push
mov
cmp
lds
call
xor
out
stos
mov
or
pop
add
inc
pop
mov
and
jo
call
push
cmp
mov
shl
dec
jns
ret
mov
push
cmp
out
fadd
adc
cmp
loopne
fsubp
pop
adc
aas
cmp
fld
mov
add
mov
sbb
pusha
lahf
mov
xor
fsubr
ins
sahf
into
jp
jns
add
mov
push
push
loop
mov
push
std
fisubr
jle
add
push
int
jp
or
movs
dec
sub
sbb
in
stc
inc
sbb
mov
fistp
sbb
rcr
cdq
fwait
ret
(bad)
mov
outs
sbb
in
(bad)
imul
mov
pop
pop
fiadd
cmp
push
xchg
sub
xchg
dec
jge
outs
ret
xor
hlt
loope
imul
call
dec
fistp
pop
das
adc
movs
add
mov
sub
push
and
and
imul
leave
adc
out
inc
ins
nop
xor
xor
imul
lods
cmps
aam
sbb
push
cs
outs
xchg
mov
xlat
sbb
xchg
push
out
fst
xor
push
fs
stos
dec
iret
stc
in
mov
mov
push
mov
movs
or
pop
pop
ins
cmp
(bad)
fist
pushf
mov
fldlg2
sbb
hlt
cmps
adc
mov
pop
jnp
add
cmp
mov
cdq
dec
dec
retf
(bad)
adc
popa
xchg
and
scas
outs
popf
shl
sti
in
dec
add
movs
cld
jns
lock
mov
and
add
xor
(bad)
test
inc
inc
mov
xchg
xor
leave
iret
lods
test
lods
cmp
arpl
pop
jmp
sub
add
lods
mov
lds
(bad)
xchg
movs
or
add
sar
mov
push
push
movs
pop
jns
cmp
adc
cmp
cmps
inc
xor
mov
or
pop
cmp
xlat
xor
imul
jmp
mov
rcl
or
cmc
cmp
push
adc
out
sub
out
retf
test
cmp
jo
movs
jmp
int3
je
ss
das
les
fisubr
into
in
inc
out
in
lods
jecxz
ret
dec
test
xor
cmc
popa
sbb
nop
cwde
jne
fisttp
xchg
pop
add
add
test
lock
pop
add
and
cmp
test
movs
mov
cmp
shr
adc
mov
dec
pop
rcr
in
shl
sbb
mov
retf
add
fscale
in
or
xor
sub
sar
xlat
dec
pusha
and
and
in
xchg
aam
loop
test
daa
call
dec
adc
rcr
test
aaa
ret
jge
sub
mov
dec
push
cmp
dec
inc
test
and
mov
das
pushf
popa
pop
adc
imul
sub
(bad)
cmp
xor
arpl
gs
fnstcw
add
sbb
ret
imul
pop
xor
xor
mov
add
test
pop
add
or
push
shl
or
pop
out
ja
mov
push
out
(bad)
cmc
cmc
xor
mov
sub
pop
cmp
push
adc
dec
pop
add
inc
or
xchg
mov
inc
push
sbb
pop
add
stc
test
sbb
test
sub
add
stos
pop
push
ss
push
push
xchg
ret
lahf
mov
out
cs
cmp
jne
xchg
(bad)
sub
loope
pop
adc
pop
cmps
daa
retf
inc
lods
or
(bad)
repnz
sbb
push
add
push
mov
fstp
jp
rcr
out
out
inc
(bad)
ins
into
sbb
push
inc
stc
in
int3
push
hlt
imul
xchg
jmp
pop
xchg
and
jnp
sahf
test
mov
sub
ins
inc
test
test
pushf
cmp
bound
cmc
xchg
les
imul
js
jp
cmp
pusha
or
inc
fs
loopne
xor
and
retf
xlat
xor
push
cmps
in
aas
jl
cld
repz
mov
xchg
or
push
in
inc
adc
pop
lods
js
hlt
test
sub
jae
stos
pop
sbb
mov
push
mov
jb
rcl
jns
mov
mov
bound
shl
sub
popa
pop
ror
cmp
cmp
fwait
dec
sbb
adc
shr
lds
lods
and
mov
cwd
xchg
push
scas
cmp
addps
dec
sti
retf
dec
pop
push
in
sar
xchg
xchg
push
out
lds
sti
or
mov
inc
mov
rcr
in
mov
(bad)
mov
stos
xchg
outs
mov
divps
push
mov
std
leave
das
(bad)
call
pushf
ja
push
mov
xchg
dec
sub
fisttp
jg
into
div
aad
les
jl
pop
sub
fwait
lahf
sub
push
loopne
fwait
retf
fisub
movs
adc
mov
xchg
fdivr
(bad)
stos
neg
cmp
and
mov
les
ds
cld
(bad)
std
cmc
mov
xor
sub
dec
mov
push
pop
nop
push
jnp
enter
je
cmps
cmp
int3
add
(bad)
sub
ret
rol
jle
and
cmc
loop
pop
sbb
xchg
jmp
cs
mov
jne
pop
out
adc
cmp
cmp
cmp
test
push
lods
and
add
xchg
push
jbe
cmp
fild
inc
clc
mov
lods
aam
ins
cs
fnstsw
stc
dec
pop
fisubr
jl
adc
sub
cmp
adc
inc
loope
and
(bad)
or
test
ficomp
icebp
loope
push
cmp
xchg
loop
and
pop
mov
adc
aad
mov
addr16
aad
adc
fwait
iret
test
pop
pop
push
mov
and
cmp
pop
dec
mov
(bad)
rcl
push
cs
inc
xchg
imul
fist
fnstsw
jmp
icebp
mov
lds
pop
cmp
jp
mov
aam
cmp
lea
ret
imul
push
bound
test
dec
mov
aas
or
sahf
dec
mov
and
(bad)
aaa
fcomp
mov
cld
sbb
clc
or
pusha
retf
ins
mov
sahf
add
rcr
sbb
xchg
push
aam
retfw
inc
out
jno
adc
mov
test
dec
push
aas
add
adc
or
push
in
xchg
clc
pop
xchg
xor
push
lock
retf
popf
dec
jge
lea
xlat
and
adc
cmps
xlat
mov
push
sub
push
(bad)
jmp
test
in
repz
adc
jo
imul
pop
(bad)
pop
stos
outs
mov
ret
xor
add
jecxz
xchg
mov
jmp
xor
dec
in
data16
pop
mov
fisttp
mov
mov
cmp
adc
adc
or
test
pop
xor
pop
retf
mul
mov
xlat
fwait
push
dec
les
jno
and
jmp
inc
addps
mov
mov
push
out
jbe
fnstenv
and
mov
mov
call
imul
pop
popa
inc
jmp
push
ja
jp
and
adc
sahf
std
scas
sub
jmp
(bad)
in
xor
and
rcr
les
add
and
pop
mov
fld
xchg
fpatan
push
xor
mov
cmp
and
aas
jp
mov
xchg
fst
jns
xchg
mov
into
ret
adc
sub
rcl
int
xchg
dec
dec
jmp
repnz
cmp
cmp
retf
retf
mov
cs
pop
xor
call
fsubr
mov
xchg
jl
inc
push
cld
push
ja
sub
movs
mov
mov
ja
fstp
mov
retf
clc
(bad)
pop
adc
cli
or
or
pop
out
mov
leave
mov
or
iret
adc
dec
cld
sbb
mov
cmps
mov
aaa
std
pop
sub
dec
sti
lds
mov
int3
into
sub
dec
sbb
add
fnstenv
pusha
not
loop
pop
pop
xor
push
mov
sub
mov
or
push
das
add
jge
jbe
into
inc
ins
(bad)
lock
fbld
sub
and
mov
dec
outs
or
sti
out
pusha
fadd
popa
pushf
cmp
das
fwait
xchg
mov
int3
xchg
leave
sub
rcr
sbb
dec
mov
inc
movs
jmp
pop
mov
call
(bad)
xchg
popf
call
fimul
(bad)
jp
movs
call
push
dec
pusha
clc
(bad)
mov
xor
xchg
jnp
sbb
push
pop
mov
rcr
xor
fisttp
xchg
les
cmps
cmps
push
cmps
push
sahf
in
jle
pop
dec
test
or
mov
push
retf
daa
mov
inc
fimul
movs
push
mov
std
in
stos
jo
push
jnp
push
mov
std
xchg
cld
mov
and
mov
fild
aaa
lds
push
iret
push
cwde
push
ins
in
repz
push
aaa
sbb
sti
dec
scas
pusha
or
ds
xchg
mov
sub
add
bnd
xor
adc
cwde
ss
jge
mov
arpl
cmc
leave
dec
sub
lods
pop
fcmovbe
ret
sub
push
push
aas
call
pop
push
pop
in
(bad)
lock
imul
jb
int3
lahf
cmp
neg
push
inc
mov
mov
mov
dec
stc
stos
cmc
fcom
sti
pop
xchg
jge
shld
xchg
lock
and
aaa
sbb
repnz
mov
push
xor
stc
adc
xchg
aam
push
mov
pop
mov
stc
dec
xor
push
movs
popf
xchg
xor
jmp
xchg
into
xchg
push
ds
arpl
icebp
dec
mov
jno
aad
sub
sbb
jne
and
fild
mov
inc
retf
xor
clc
push
sahf
adc
xchg
stos
mov
bound
cmps
stos
adc
xor
mov
in
jecxz
sbb
xchg
cdq
adc
into
adc
shl
shr
cmp
inc
out
in
int3
in
pop
inc
mov
cmp
dec
aas
in
adc
ins
mov
or
mov
cmp
loopne
push
xchg
dec
daa
cmp
lods
cwde
or
ret
or
imul
dec
pop
aam
inc
(bad)
popf
lds
rcl
mov
adc
push
or
jo
jle
jecxz
pop
pop
rcl
dec
and
xlat
ins
stos
xor
add
inc
add
cmc
cmp
mov
mov
push
and
sbb
outs
jg
add
outs
mov
mov
pop
sbb
mov
xchg
out
loop
push
jg
pop
int
call
leave
jne
fnsave
mov
popa
aad
mov
push
mov
and
nop
mov
pop
xchg
(bad)
fld
sti
fdivrp
dec
lds
pop
adc
imul
dec
sub
sar
sbb
xor
mov
cmps
dec
idiv
push
mov
or
iret
call
mov
xchg
adc
sar
jle
add
dec
jno
jbe
retf
push
cdq
dec
and
outs
std
push
aas
xor
sub
mov
pop
call
cmp
sub
ds
or
fidivr
in
push
mov
call
(bad)
fwait
loop
lods
mov
fwait
aaa
add
fild
and
xchg
ds
xchg
xor
mov
push
test
into
jnp
dec
daa
loopne
dec
jno
cmp
dec
sub
jmp
test
xor
imul
js
dec
stc
or
fistp
stc
retf
icebp
fisubr
js
lods
mov
inc
hlt
pop
cli
adc
sar
es
fdivr
popf
dec
mov
mov
jne
mov
in
and
xchg
xchg
dec
mov
sub
stos
rol
sub
test
inc
sub
xchg
or
jmp
sub
mov
sbb
jge
ins
sti
int3
mov
jp
push
lock
stc
jno
fbld
jmp
sub
test
test
dec
jno
cwde
dec
xor
inc
ds
push
test
pop
ins
pop
adc
mov
jmp
push
mov
loopne
icebp
adc
push
rep
lahf
jl
addr16
sub
mov
jo
jmp
addr16
in
int3
dec
dec
xchg
ret
cli
sar
or
jno
std
add
jl
imul
addr16
jb
push
test
pop
in
fild
enter
stc
xchg
aad
arpl
or
shr
xor
mov
dec
iret
mov
pop
sub
shl
into
movs
or
mov
inc
pusha
jp
xlat
adc
xchg
mov
sbb
xor
jbe
jmp
jo
in
clc
ins
inc
stos
push
adc
jle
lahf
pop
sub
gs
xchg
dec
inc
test
loopne
mov
jne
popa
mov
add
xchg
pop
adc
push
ds
push
push
test
test
and
xchg
and
pusha
ret
rcl
cmps
xchg
imul
push
int
lahf
push
inc
add
fs
sub
add
test
cli
into
cmc
jle
scas
jl
mov
mov
mov
sar
scas
cwde
loopne
pushf
aas
(bad)
retf
ret
repz
sti
mov
sub
loopne
sub
and
pop
mov
mov
mov
xor
sbb
in
cmps
pushf
xchg
call
or
movs
ins
adc
bound
push
shl
adc
test
ret
imul
stos
(bad)
in
mov
cmp
cld
lea
out
outs
inc
int3
in
mov
or
jp
mov
sbb
or
inc
iret
push
stc
cs
ret
sub
sahf
mov
add
mov
mov
popa
imul
inc
mov
push
in
sub
into
jb
btr
or
or
sub
pop
int3
inc
mov
mov
addps
not
mov
mov
daa
mov
mov
mov
pop
and
aas
mov
iret
inc
add
lods
xor
fnstcw
test
jl
or
xchg
pop
ins
inc
dec
adc
mov
call
cli
(bad)
shr
and
movs
xor
jbe
aaa
fild
nop
ret
or
imul
push
xor
dec
adc
xor
pop
sub
sub
aas
imul
cmp
std
test
and
push
test
fisttp
cs
xchg
sbb
test
dec
jns
cmp
dec
inc
loopne
inc
shl
arpl
jbe
jmp
fld
xor
sbb
and
into
inc
sbb
cmp
xor
pop
(bad)
pop
addr16
xor
mov
(bad)
call
push
mov
xor
mov
fisub
mov
push
outs
sbb
mov
arpl
sbb
lds
test
inc
nop
cmp
or
clc
dec
or
sub
fldenv
clc
outs
pop
xor
pop
and
cwde
pushf
sub
movs
sahf
in
xor
rcr
inc
mov
lods
arpl
(bad)
or
push
mov
dec
imul
and
loop
leave
or
frstor
sbb
inc
icebp
(bad)
call
ret
daa
jmp
xlat
mov
jge
fist
out
xchg
or
fimul
inc
add
mov
cli
std
xchg
pop
cmp
repz
out
jae
rcr
fs
nop
pop
inc
xchg
popa
or
int
cli
sub
jo
call
cmp
stc
mov
jnp
(bad)
hlt
mov
popa
inc
jmp
jno
sub
daa
movs
cmp
pop
mov
cwde
test
sbb
in
mov
and
add
cmps
sbb
ror
test
lock
nop
dec
stos
mov
sub
push
movs
fcomp
xlat
hlt
fdivr
in
pop
pop
(bad)
cmp
or
je
pop
pop
inc
gs
push
mov
in
mov
test
(bad)
mov
out
pop
mov
adc
xor
or
adc
adc
mov
imul
repz
fbstp
xchg
icebp
inc
lds
or
push
fwait
mov
leave
scas
jnp
ins
je
lahf
in
dec
pop
mov
lock
cmp
fild
fist
pop
jmp
pushf
mov
xor
fstp
cmp
popf
out
cs
push
push
mov
mov
in
xchg
adc
jle
push
stc
add
das
movs
(bad)
cmp
adc
or
sbb
cli
je
jo
pop
pop
add
sbb
fld
enter
movnti
loop
and
imul
xor
add
mov
pcmpgtb
mov
adc
dec
inc
or
(bad)
and
add
retf
hlt
mov
push
lds
cld
addr16
call
jp
mov
mov
(bad)
cli
xor
push
fadd
sbb
ret
jl
jb
adc
sbb
cmp
ins
std
fwait
jle
sbb
retf
or
push
dec
mov
loopne
cdq
syscall
push
dec
xchg
sub
mov
push
ss
(bad)
lods
(bad)
push
jno
inc
fild
in
repz
jle
or
imul
sahf
push
or
push
fild
inc
sub
cmps
scas
fistp
cmp
gs
push
rol
cdq
loop
pop
movs
(bad)
fdiv
sub
jns
push
gs
lods
mov
inc
fdiv
outs
mov
lds
mov
int3
bound
adc
outs
dec
not
lea
or
mov
cli
sub
mov
cmp
test
push
and
fs
mov
jl
pop
pop
stos
inc
add
mov
popa
cmp
in
add
daa
stc
test
pusha
imul
pop
jb
mov
jp
(bad)
loope
push
loope
push
mov
add
sbb
arpl
sahf
int
or
cmc
(bad)
in
cld
mov
call
popa
xchg
adc
sbb
pop
aam
jno
rcr
and
rol
and
repz
pop
shr
xlat
daa
cmp
or
sub
test
mov
push
inc
(bad)
jp
xchg
or
std
adc
bound
dec
inc
out
cwde
push
sub
pop
pop
(bad)
fmulp
cld
les
out
mov
mov
fsubr
lds
push
adc
or
mov
inc
mov
mov
enter
(bad)
mov
cmp
rcl
movs
movs
adc
(bad)
xchg
cs
ret
sbb
sbb
inc
jge
and
cwde
fsubr
scas
xchg
push
or
push
fadd
pop
sbb
cmp
xchg
loop
jg
sub
lods
repz
pop
mov
enter
fisttp
dec
pop
iret
cs
xchg
or
movs
mov
ret
test
sahf
mov
in
jno
sub
sub
(bad)
(bad)
mov
mov
xor
sahf
mov
cmp
or
push
xchg
in
popf
pushf
inc
ror
pop
push
out
loop
inc
add
inc
cmc
add
ins
shr
movs
xor
xor
bound
xor
(bad)
(bad)
push
sar
and
push
pop
les
mov
in
add
retf
sbb
add
mov
inc
lahf
pusha
push
(bad)
test
mov
fdivr
push
aas
inc
pop
leave
frstor
jae
adc
ja
dec
jmp
nop
push
scas
into
sbb
or
std
pusha
dec
test
in
xchg
inc
add
mov
sub
mov
xchg
js
cs
(bad)
push
(bad)
call
sub
add
xchg
(bad)
mov
mov
and
push
jp
add
ins
dec
jmp
adc
mov
dec
jo
adc
aas
xor
jno
loope
cmp
sbb
test
cmp
mov
adc
adc
pop
inc
outs
popa
sub
mov
inc
call
jl
push
not
neg
repnz
sbb
mov
mov
aad
popf
cs
inc
mov
mov
(bad)
cmps
pushf
iret
into
int
jg
test
out
inc
xchg
jmp
pop
mov
out
jge
inc
ss
or
dec
div
dec
call
jno
cmp
imul
fidivr
nop
cmp
mov
push
arpl
(bad)
std
loopne
xchg
not
or
cmp
push
jbe
and
jmp
enter
movs
adc
mov
mov
std
mov
outs
mov
fisttp
sub
stc
icebp
mov
add
add
jl
mul
stos
fwait
out
add
shl
add
es
ret
inc
mov
dec
fs
sub
mov
mov
dec
cwde
dec
ss
test
imul
out
cmovs
jo
bound
and
cmp
test
push
sub
adc
push
add
sbb
in
adc
sbb
scas
loope
mov
mov
(bad)
sub
je
push
push
or
add
lods
mov
mov
leave
mov
mov
sbb
rol
xchg
add
jecxz
add
pop
push
cmps
(bad)
adc
or
push
shr
add
test
lds
into
test
dec
aaa
pop
movs
jmp
xor
inc
jnp
dec
dec
xor
imul
mov
jg
sbb
mov
cmps
mov
daa
push
ja
clc
fisttp
std
sub
popf
mov
outs
push
out
inc
cmp
mov
aad
fwait
push
test
sbb
pushf
sub
popa
stos
pusha
adc
test
push
fidiv
lea
push
push
test
mov
xchg
bound
enter
call
neg
cmps
xchg
mov
lods
stos
ins
(bad)
xor
outs
or
mov
into
shl
push
sbb
repz
xor
xor
imul
mov
std
call
addr16
jmp
sbb
push
jp
mov
mov
test
jns
js
fwait
pop
loope
xor
and
pop
inc
inc
and
push
loop
stos
fsub
das
data16
and
popa
iret
sbb
jecxz
stos
in
jl
mov
mov
sbb
cmp
retf
xchg
(bad)
in
sub
inc
sub
jle
mov
ss
add
imul
pop
out
mov
test
ins
push
test
pop
jg
xor
mov
cmp
ja
test
dec
(bad)
push
inc
add
pop
cmp
mov
xchg
or
test
stos
jo
dec
cwde
xlat
ins
pop
in
push
jp
movs
out
pop
sub
push
jmp
or
shr
pop
lods
movs
push
or
stos
adc
ja
adc
(bad)
mov
setno
cmp
jle
(bad)
into
aam
jmp
repz
popa
xchg
jmp
push
mov
sub
mov
popa
xor
push
pop
adc
dec
sub
out
adc
mov
xor
xlat
call
loopne
outs
out
adc
push
mov
mov
aad
sbb
hlt
sahf
pop
pusha
jbe
or
(bad)
mov
enter
(bad)
push
loope
retf
mov
cmp
and
jmp
xlat
add
fnsave
pop
and
sub
dec
nop
lahf
mov
test
push
repnz
sbb
push
out
mov
rcr
pushf
jmp
es
push
mov
dec
(bad)
(bad)
clc
leave
fsubr
mov
xchg
push
pop
adc
dec
(bad)
mov
test
dec
and
sahf
adc
and
adc
or
dec
jecxz
jmp
inc
pop
jecxz
pop
call
imul
into
popf
and
sbb
pop
push
in
in
add
nop
das
mov
test
pop
loope
mov
fcmovu
aas
sti
sar
inc
push
pop
cmp
and
jmp
xor
clc
ud2
jmp
fwait
test
or
and
loope
into
ja
call
jg
loop
push
dec
ss
cdq
mov
xchg
inc
mov
mov
outs
test
fsubr
push
jo
xchg
and
clc
ficomp
cmp
jns
and
dec
mov
push
push
xor
out
pusha
mov
mov
aas
xchg
outs
mov
jmp
ret
push
add
add
jno
jecxz
mov
cmp
dec
dec
cmp
lea
mov
sub
dec
das
popf
loope
sub
pop
imul
inc
sbb
pop
inc
stos
dec
pop
adc
repz
and
push
(bad)
in
pusha
stos
loopne
dec
sub
lahf
enter
pop
mov
rol
loop
xor
shl
cwde
pop
clc
mov
pop
cmp
push
cmc
and
popaw
imul
cli
mov
arpl
je
push
xchg
inc
and
dec
lahf
inc
cld
mov
xchg
cli
shl
mov
call
jge
das
sub
xchg
sub
shr
pop
push
data16
in
out
fldl2t
or
lds
jno
icebp
xchg
push
sbb
in
movs
in
out
js
push
xchg
mov
adc
lods
pushf
(bad)
push
sbb
(bad)
jnp
jbe
movs
ins
adc
xor
nop
imul
or
mov
mov
ret
cmp
and
mul
push
mov
call
sbb
imul
stos
or
repz
push
inc
cdq
out
in
cmp
aad
dec
sbb
jo
loopne
xchg
shl
sbb
mov
setno
xchg
adc
xor
pop
mov
ret
push
js
push
and
sbb
das
inc
xchg
fimul
cmp
lock
or
aam
stos
stos
inc
rcr
dec
loope
jmp
cmp
or
push
cld
push
add
push
repz
std
push
sub
add
das
cli
dec
(bad)
mov
icebp
inc
arpl
sbb
pop
loop
sub
pop
jle
movs
and
mov
cmp
fld
repz
mov
xchg
mov
loope
xchg
mov
cmp
pop
sub
mov
arpl
inc
mov
sar
out
lods
bound
ret
aad
retf
xor
mov
inc
retf
pop
imul
jne
retf
popa
int3
pop
jge
xor
mov
nop
retf
mov
mov
xchg
jg
imul
lock
(bad)
dec
mov
fs
mov
dec
mov
aad
push
push
pop
ret
push
adc
hlt
pushf
cs
cs
sbb
faddp
into
pushf
or
xlat
pop
add
sbb
mov
push
js
inc
mov
push
add
pushf
inc
cmp
inc
arpl
pop
xor
jne
lods
sub
and
push
xchg
sbb
jecxz
mov
pushf
adc
int3
cmp
ret
dec
cwde
ins
std
jle
into
ins
add
stos
nop
xchg
mov
or
mov
imul
push
sub
jno
idiv
mov
cmp
adc
add
nop
outs
pop
mov
jo
push
or
mov
push
xchg
loop
retf
(bad)
lahf
int
and
sahf
into
(bad)
repz
ret
dec
ins
das
daa
push
add
aad
not
popa
and
or
je
loopne
cld
in
jne
or
int
pop
xchg
add
jo
sub
xchg
stc
mov
ds
mov
(bad)
retf
bound
xchg
inc
add
push
rol
loop
mov
jl
loopne
test
(bad)
cmp
lods
into
jne
lea
mov
cmp
xchg
nop
pop
pop
call
pushw
sub
adc
in
jl
push
neg
sbb
outs
dec
inc
rcl
xchg
mov
mov
sbb
test
leave
push
add
dec
inc
cdq
movs
mov
jmp
and
push
xor
jmp
or
icebp
fcomp
cmp
push
sbb
ins
stos
das
push
cdq
ret
loopne
adc
add
jle
push
mov
(bad)
mov
aas
sub
and
popa
push
aam
out
sbb
sub
(bad)
loope
pop
(bad)
xchg
int
jo
dec
(bad)
stos
xchg
loope
cld
test
adc
iret
or
aaa
fdiv
pop
sbb
and
pusha
push
or
xchg
push
scas
ret
push
sbb
push
inc
push
add
inc
mov
rol
jb
(bad)
jns
sub
sub
pusha
movs
add
or
(bad)
sub
call
ja
test
shl
sbb
xor
leave
ins
sbb
sbb
in
push
lods
xchg
not
je
jp
das
es
pop
(bad)
and
pusha
(bad)
jno
(bad)
outs
adc
cmp
es
adc
stos
mov
hlt
out
inc
out
in
xlat
inc
mov
pop
pusha
clc
ja
fild
sbb
ret
dec
dec
add
pop
adc
outs
add
test
fwait
sbb
iret
sub
pusha
loope
pop
add
clc
mov
jl
fsub
in
stos
loop
dec
dec
jge
and
sub
jp
mov
jp
pop
jle
mov
and
(bad)
sahf
cmps
mov
jmp
jo
retf
shr
repz
pop
inc
sbb
inc
mov
fs
lds
xor
bound
inc
or
cmps
or
(bad)
sbb
push
scas
cmps
and
pop
dec
and
fwait
adc
jb
xor
mov
cmps
jp
or
mov
ins
retf
inc
les
jecxz
push
leave
inc
pop
icebp
fmul
ja
into
lahf
xor
jmp
mov
dec
daa
or
xchg
inc
add
ret
cmps
neg
ret
pop
push
xor
push
push
cmp
fist
xor
aam
call
push
call
das
cli
cdq
xor
movs
dec
mov
inc
pop
pop
out
sbb
mov
out
cdq
pusha
jb
gs
int
inc
push
jo
or
cmc
mov
cmp
stos
jbe
fbld
xor
ficom
xor
imul
in
sbb
xor
repnz
sbb
inc
rol
mov
fcmovnb
fstp
jl
pop
(bad)
arpl
aas
out
dec
jecxz
xor
sub
pop
mov
shl
push
push
arpl
aaa
mov
(bad)
dec
jp
scas
pusha
daa
xlat
pop
jne
in
retf
sub
mov
sbb
je
je
outs
ror
jb
and
mov
cmp
add
adc
pop
dec
movs
push
push
adc
movs
or
pop
addr16
xchg
or
mov
imul
add
mov
jecxz
pop
in
jecxz
mov
jmp
mov
mov
outs
(bad)
jne
in
pusha
mov
adc
xchg
push
les
push
outs
xor
add
inc
push
fmul
jmp
imul
into
in
inc
(bad)
mov
or
icebp
xor
add
dec
cmp
mov
add
ins
ins
inc
push
vmovd
sbb
and
lea
xchg
xor
adc
retf
push
mov
cmps
xchg
mov
sbb
ss
pop
int3
inc
out
inc
daa
mov
js
xor
mov
or
mov
fnstsw
add
jmp
push
addr16
jo
push
aad
xor
dec
imul
loop
sbb
lock
add
pop
mul
xchg
dec
fsub
push
(bad)
xor
cmc
push
sub
dec
dec
adc
sub
into
dec
jle
mov
aaa
jge
in
cmp
cmp
inc
mov
pop
fnstsw
popa
daa
test
sahf
or
pop
and
int
es
retf
retf
sbb
dec
sahf
sar
mov
jmp
and
dec
inc
jns
into
mov
mov
cmps
add
(bad)
outs
and
pop
mov
cmp
outs
popa
mov
pop
sar
mov
movs
dec
sub
adc
or
cmp
mov
retf
loop
repnz
cmp
push
sahf
outs
and
mov
pop
inc
push
mov
shl
fcomp
imul
and
test
add
fimul
sbb
sysret
xchg
xchg
pusha
xor
pop
pop
mov
rol
mov
movs
(bad)
sbb
add
fidivr
pop
xchg
fnstenv
push
fwait
iret
fimul
jnp
sbb
mov
mov
sbb
ror
or
fstp
push
imul
lods
sub
std
xor
cmp
mov
xor
stc
test
jbe
js
les
jecxz
fld
stos
cmp
ds
add
mov
push
into
xchg
daa
pop
add
in
or
adc
mov
push
jno
leave
lods
retf
add
cmp
mov
mov
or
fcmovbe
jbe
neg
out
imul
cmp
dec
and
in
test
pop
push
dec
enter
cmp
cdq
aam
shl
mov
jle
daa
jne
mov
dec
ret
pop
sub
cmps
lods
adc
push
xor
xor
inc
push
xor
pop
test
adc
fst
pop
push
mov
mov
push
nop
and
(bad)
addr16
cld
xchg
push
pop
iret
mov
cmps
xchg
mul
sar
(bad)
cmp
mov
stos
stos
xchg
jp
pusha
std
inc
ja
mov
dec
pop
jmp
ins
cli
push
push
lahf
pop
shl
cs
cli
test
sub
fidiv
or
push
lock
dec
mov
retf
mov
or
loopne
xchg
hlt
mov
mov
das
stc
mov
fnstcw
cld
daa
adc
stos
cmp
lock
cs
push
rol
and
push
(bad)
fst
cmp
xor
ss
push
not
test
xor
mov
mov
mov
pop
cmp
xor
mov
xor
aam
lods
icebp
sbb
test
jl
cmp
mov
daa
push
(bad)
lahf
mov
inc
fcmovb
fisub
stos
out
in
pop
icebp
xor
adc
pop
test
cmp
mov
fs
adc
or
mov
pop
cmp
aas
or
shl
pop
cmp
fcomp
mov
add
bound
jmp
std
fild
lods
sub
enter
bound
add
inc
and
popf
cmp
icebp
mov
ficomp
jb
and
push
ss
mov
jl
cld
lods
cdq
push
dec
push
lock
call
pop
in
mov
xchg
adc
les
lock
pop
jo
ror
stos
xchg
or
inc
mov
cmc
outs
pop
stc
mov
adc
movs
repz
pop
xchg
xor
sub
leave
pop
iret
mov
rol
data16
imul
push
test
cmovl
cmp
stos
sbb
dec
loop
enter
add
jb
pop
xlat
fwait
push
das
mov
pushf
mov
aam
jb
popf
adc
test
jb
fwait
ja
mov
fidiv
hlt
or
retf
add
or
adc
sbb
inc
mov
cmps
fwait
pop
rcr
(bad)
aas
dec
sub
and
mov
aam
mov
sbb
sbb
imul
cld
shl
popa
or
or
lods
mov
(bad)
adc
dec
loop
aam
pop
jle
jb
lods
dec
hlt
call
jp
sub
mov
mov
mov
ds
pop
mov
dec
or
add
hlt
push
cmp
data16
fst
cmp
data16
fstp
(bad)
(bad)
cmp
inc
jmp
jbe
jo
ret
sbb
ja
and
push
arpl
mov
cli
push
ins
jnp
fimul
or
mov
aaa
rcr
mov
movs
jl
jae
mov
mov
add
add
ja
call
test
jge
int
pusha
push
and
push
push
sti
inc
sbb
xor
mov
aas
sub
add
inc
push
cli
inc
outs
das
sbb
jp
pushfw
mov
pop
popa
push
imul
rcl
mov
test
push
or
xchg
or
repz
(bad)
cmp
in
xchg
leave
dec
std
out
mov
cmp
jb
stc
mov
test
mov
xor
ins
xor
lahf
call
add
mov
cmp
mov
in
jbe
push
gs
xor
pop
mov
mov
sub
pop
push
pop
popa
jne
fstp
aaa
dec
jae
jo
cmp
inc
loopne
test
mov
rcr
mov
ins
inc
leave
int3
push
jle
(bad)
pop
push
mov
jno
call
xchg
push
in
adc
inc
nop
add
add
fnstcw
dec
sti
mov
or
adc
pop
loopne
das
pop
inc
rol
bound
out
movs
dec
(bad)
pop
scas
sub
push
mov
out
xchg
or
sar
das
or
add
int
push
push
fcomp
es
cs
pushf
sbb
sbb
xchg
cmp
call
and
mov
es
icebp
xor
fidiv
and
out
icebp
jbe
bound
ins
iret
loop
jnp
jo
mov
push
adc
icebp
xor
push
mul
movs
jge
mov
add
and
outs
pop
xchg
movs
push
cli
icebp
cmp
push
adc
sub
rol
fcom
pop
out
mov
icebp
jge
fsubr
adc
sbb
movs
nop
pop
or
ret
jmp
xor
inc
jp
push
push
in
jb
(bad)
add
imul
call
cs
pop
adc
fist
aaa
js
repnz
jnp
mov
aas
inc
cs
or
call
mov
xchg
push
push
lahf
cmps
or
sub
mov
lock
jns
xchg
sbb
outs
lds
push
das
mov
icebp
sbb
shl
(bad)
dec
xchg
(bad)
and
xchg
xor
add
or
jge
mov
cdq
(bad)
xor
mov
sub
or
sbb
pushf
jmp
sahf
and
xor
dec
pop
fistp
rcl
rcl
mov
(bad)
jae
outs
cmp
mov
ja
sbb
sbb
add
xor
lods
mov
push
jb
jb
mov
fcom
inc
repnz
xchg
mov
shr
jbe
adc
fdiv
std
mov
retf
cmp
aam
and
add
xchg
and
lock
add
inc
pop
ds
int
adc
out
in
in
adc
pop
vmovd
adc
push
pop
cwde
xchg
call
sub
sub
(bad)
fwait
movs
push
jns
(bad)
xor
fmul
mov
add
imul
xor
inc
mov
lea
test
push
addr16
jno
fcomp
add
inc
lds
scas
pop
xchg
jle
fidiv
jl
inc
cmp
shr
inc
out
dec
clc
sar
lods
std
mov
daa
test
adc
imul
xchg
jnp
pop
push
push
lds
shr
cmc
ja
adc
sub
fwait
leave
repnz
(bad)
mov
xor
int
movs
pop
test
hlt
jo
inc
cmp
mov
adc
lods
adc
test
bound
and
jl
fiadd
int
sub
sub
hlt
push
in
mov
popa
push
sti
inc
mov
jmp
(bad)
test
push
ficom
outs
aaa
sub
adc
int3
mov
sbb
gs
nop
push
ds
fadd
xchg
adc
stc
mov
cmp
pop
push
push
sub
inc
jg
inc
pop
call
cmps
mov
xchg
and
rcl
cmp
pop
mov
jbe
stos
mov
dec
sbb
pusha
xor
daa
mov
movs
adc
repz
(bad)
fnstsw
test
arpl
mov
arpl
or
out
stc
fwait
repnz
mov
ins
inc
mov
push
pop
inc
cmc
push
and
stos
test
dec
addr16
inc
adc
faddp
bound
or
out
mov
cmp
mov
cmp
adc
loopne
xor
mov
cld
jns
lods
das
sbb
aad
dec
inc
stc
retf
les
jmp
push
bound
jo
mov
xchg
sub
inc
add
push
and
jnp
adc
xchg
and
push
movs
lods
ja
mov
clc
dec
mov
daa
cmp
sbb
xchg
cmps
mov
cs
cli
pop
loop
push
dec
fwait
mov
fcomip
sub
dec
jnp
stos
fwait
mov
lahf
jno
mov
test
imul
mov
pmaxub
ret
imul
jnp
rcr
inc
mov
ja
rcl
xchg
dec
or
aas
xor
push
ins
sbb
int3
ret
std
pop
test
lahf
cs
jg
scas
ins
xor
mov
das
add
leave
add
mov
outs
in
lea
inc
int3
xor
push
push
jnp
(bad)
ret
clc
and
cmps
jo
cmp
inc
icebp
add
sar
popf
mov
scas
ficom
add
cmp
enter
xlat
arpl
inc
jl
arpl
push
sbb
ins
data16
sub
mov
rcl
repnz
icebp
bound
imul
js
sub
cmpps
jg
dec
lods
fsubr
ret
out
dec
push
outs
(bad)
stos
and
dec
inc
inc
shl
les
add
fimul
cmp
and
imul
xchg
bound
nop
retf
sti
lds
push
push
and
inc
push
stos
mov
fidivr
mov
ss
xor
aad
cdq
mov
sub
or
inc
or
mov
sti
adc
sub
outs
mul
jmp
(bad)
cmp
lea
and
call
das
xchg
dec
sub
inc
jae
ret
sub
repz
retf
repnz
ret
adc
xor
loope
div
xchg
ins
cld
inc
add
(bad)
mov
sub
(bad)
xor
pop
pop
mov
xor
mov
clc
rcr
rol
outs
(bad)
ins
sbb
xor
jne
add
mov
dec
repz
cmp
ret
lds
mov
jl
out
mov
aam
jbe
mov
out
push
inc
(bad)
shr
cmp
mov
inc
int
retf
push
pop
into
loop
ja
sub
fcmovbe
sar
mov
cmp
push
ds
test
add
test
or
in
jmp
pop
test
xor
sub
jo
dec
push
jg
add
xor
mov
int3
add
mov
cmp
xor
mov
jae
fldenv
add
gs
repz
out
pop
push
dec
out
jmp
bound
lea
in
mov
ret
jl
xchg
pop
repz
das
dec
lods
mov
mov
lods
or
cdq
ds
and
xor
test
push
cmp
fnstsw
aas
cmp
(bad)
popa
cmp
pop
stos
jne
jae
lahf
loop
or
jae
push
xchg
dec
pop
test
inc
add
push
pop
sub
test
retf
ret
inc
les
cmc
push
stc
push
jmp
rcl
pop
sub
aam
or
(bad)
pushf
cdq
push
mov
aam
ins
xchg
out
movs
movs
push
adc
(bad)
fwait
js
inc
inc
jp
fadd
in
(bad)
call
mov
inc
xor
and
jge
cld
aam
addr16
popf
jb
fcmovne
fidivr
int3
and
or
add
lahf
jmp
call
dec
iret
popf
stc
repnz
imul
gs
pop
pop
sbb
adc
fdiv
movs
call
push
mov
inc
sbb
and
test
jbe
and
out
ja
mov
loopne
std
pop
pop
addr16
xchg
xchg
pop
les
cmp
mov
cmps
aad
test
and
les
cmps
pop
sub
sbb
pop
sbb
out
mov
ins
adc
lods
fldcw
cmp
sti
pop
jg
xchg
xor
(bad)
mov
mov
loopne
mov
stc
or
adc
jp
outs
stos
icebp
das
mov
cli
xchg
or
sbb
push
fs
mov
retf
out
shr
or
outs
(bad)
cmp
mov
shr
(bad)
cmp
popa
cli
inc
int
sub
push
imul
pusha
add
push
mov
mov
movs
mov
add
int
test
scas
push
sub
adc
sub
je
movs
xchg
mov
fdiv
movs
scas
cmp
cmp
xchg
ret
fmul
call
sbb
inc
std
dec
pop
dec
sbb
ss
or
jl
retf
scas
jl
push
xchg
cwde
jl
jmp
xor
outs
sbb
sub
inc
aaa
xor
xor
ffreep
xchg
fimul
jl
inc
ja
lods
mov
leave
inc
xchg
xchg
dec
sub
fs
jl
lds
adc
fimul
pushf
out
or
sbb
push
outs
push
out
pop
pusha
xor
push
not
jg
xlat
pop
ja
hlt
push
mov
pop
cmps
gs
aas
outs
xor
sub
jns
ins
cmp
jg
not
cwde
stos
imul
scas
or
mov
xor
popf
cmp
imul
outs
in
mov
lock
dec
jmp
imul
outs
inc
or
dec
in
lods
stos
outs
pop
mov
jmp
mov
fs
inc
into
sub
xor
dec
jo
(bad)
cmps
repz
push
xlat
xor
scas
mov
mov
cwde
ret
or
popf
jno
add
xchg
xchg
adc
scas
aam
cmps
adc
adc
jns
xchg
fs
movs
push
(bad)
adc
dec
inc
inc
mov
or
adc
mov
cmps
lahf
movs
outs
push
je
push
leave
repz
mul
push
inc
lea
push
push
mov
iret
mov
pop
jmp
sub
retf
and
ret
mov
jg
pushf
pop
scas
xchg
xchg
jmp
pop
in
cmp
outs
pop
cmps
push
jmp
jmp
cmp
outs
lea
gs
lods
sbb
lods
or
xchg
dec
sbb
xchg
cmp
pop
pop
pop
push
enter
pop
mov
add
mov
pop
cmp
xor
test
mov
sbb
aad
cld
jle
popf
pop
or
lahf
outs
call
retf
sub
inc
or
imul
inc
fistp
gs
aam
retf
jmp
mov
and
inc
pop
push
test
cli
adc
mov
dec
popf
xor
sub
mov
adc
dec
ins
sub
jg
pop
fwait
gs
inc
stc
cs
jno
ja
and
retf
test
cli
ja
push
aam
pop
cmps
adc
mov
mov
in
dec
mov
sti
mov
or
add
and
stos
mov
nop
outs
das
out
frstpm(287
mov
ins
ins
mov
lods
sub
mov
sub
jb
repz
dec
les
push
in
fst
in
rcl
aam
iret
in
mov
sbb
sar
dec
pop
test
mov
pop
test
jno
loop
retf
pop
push
les
(bad)
push
retf
jae
cmps
or
inc
cmps
jo
aas
adc
inc
xchg
or
(bad)
cmp
push
ret
ficom
enter
sub
push
dec
test
and
ja
or
and
retf
inc
dec
jne
add
(bad)
mov
jle
jae
ds
pop
nop
push
(bad)
and
dec
mov
hlt
jnp
movs
sahf
out
or
jae
xchg
jp
push
and
(bad)
sub
out
fs
or
outs
xchg
ret
aam
add
mov
pop
mov
retf
cmp
mov
inc
xor
jbe
or
sub
fisubr
test
push
mov
inc
lods
jnp
lock
test
adc
loope
jg
nop
leave
js
xchg
(bad)
or
fbstp
shr
sbb
inc
lods
push
sbb
xlat
mov
sahf
sbb
fwait
inc
pop
pop
jne
or
pop
loopne
hlt
jp
cdq
loopne
inc
xchg
and
push
(bad)
call
or
jge
call
fisub
jle
push
mov
cwde
shl
mov
out
sub
sub
call
stos
out
mov
std
mov
jnp
arpl
inc
jge
xchg
sub
push
gs
ja
loopne
sbb
(bad)
hlt
and
jbe
repz
inc
out
jbe
push
push
(bad)
or
mov
mov
daa
add
push
xor
lods
dec
pushf
pop
push
add
scas
loop
pop
xchg
mov
pop
das
mov
sub
mov
rcr
cmp
mov
fs
add
xchg
pop
cld
ds
dec
or
lock
push
adc
push
push
or
sub
ficomp
dec
pop
xor
aam
mov
(bad)
shr
das
ror
pop
repnz
mov
addr16
es
cwde
push
mov
adc
rcl
mov
into
out
and
mov
lds
pop
loope
lahf
cmp
push
dec
fmulp
inc
mov
fdiv
hlt
lods
dec
outs
mov
popa
mov
mov
jne
push
add
aaa
mov
test
sbb
adc
jl
xor
(bad)
lock
pop
dec
cld
lahf
jmp
sub
mov
pop
movs
sbb
cli
test
xor
aam
test
jge
out
sbb
mov
or
es
sub
mov
fiadd
es
pop
and
sbb
inc
sbb
push
jb
int
mov
inc
pushf
inc
call
mov
jg
jnp
popf
je
imul
ret
fdiv
lock
add
mov
sub
out
jle
mov
mov
jnp
push
adc
sub
cs
aaa
jle
inc
mov
imul
in
mov
lds
cmp
pop
mov
push
mov
and
dec
inc
pop
jo
sub
adc
fld
out
xchg
mov
pop
int3
xor
std
in
jo
fisttp
popf
xor
jbe
out
loope
sbb
int
or
and
xchg
cld
loopne
jne
fcomp
and
inc
cmp
mov
xchg
loop
lea
stos
leave
rol
xor
ret
mov
add
and
aad
and
and
inc
movs
call
xchg
push
or
js
and
hlt
rcl
pop
xor
(bad)
scas
jb
aad
pushf
data16
jmp
push
imul
iret
test
aas
sbb
push
imul
mul
push
lds
mov
mov
jmp
dec
js
fwait
mov
rol
lsl
mov
inc
add
ds
or
pop
sbb
call
mov
cli
ins
cmps
mov
or
outs
push
pushf
js
inc
sahf
mov
ss
aad
add
xlat
mov
es
cmps
sub
imul
fiadd
jge
jp
jmp
dec
push
push
pop
(bad)
rol
adc
fidivr
jmp
xlat
retf
add
mov
ret
fist
mov
rcr
cmp
push
dec
sub
xchg
or
shl
test
adc
add
mov
push
test
push
cli
sub
push
arpl
pop
cwde
jbe
hlt
leave
and
std
push
dec
je
and
xchg
mov
or
sub
iret
int
leave
sbb
fwait
jg
adc
icebp
(bad)
pushf
inc
or
(bad)
int3
ret
inc
lea
mov
icebp
js
xlat
and
and
lods
addr16
xchg
shl
inc
sub
jne
mov
iret
xchg
adc
ins
out
dec
aas
stos
push
out
pop
rol
cmp
jle
mov
dec
(bad)
jns
int3
outs
shl
cmp
mov
lds
mov
inc
cmc
dec
pop
jl
pop
sbb
jmp
arpl
pop
sub
pusha
sbb
fdivp
sub
in
mov
jge
ror
pop
mov
xchg
loop
iret
jecxz
lea
push
not
mov
adc
outs
in
cli
add
sub
fst
mov
enter
adc
es
or
mov
out
pusha
mov
push
mov
mov
sbb
cmps
sbb
iret
push
mov
push
xor
jmp
and
inc
sbb
xlat
mov
je
sbb
xor
mov
adc
sbb
sar
imul
leave
in
call
cwde
xchg
push
inc
(bad)
pop
jbe
xor
scas
jp
mov
(bad)
push
push
imul
scas
push
int
xor
lods
sbb
cli
gs
fnstsw
lock
cmp
movs
call
in
cdq
push
es
lahf
test
xchg
jle
jl
sub
jbe
les
jno
jmp
jle
nop
int3
test
or
mov
dec
jp
inc
adc
cmp
mov
push
pop
fcomp
rol
(bad)
dec
call
push
fistp
xchg
pop
and
pushf
dec
loop
sbb
pop
sub
inc
dec
and
mov
jle
xor
(bad)
lods
add
test
mov
imul
jae
dec
dec
pusha
jne
jmp
fs
cwde
xor
lahf
out
scas
inc
xchg
cli
repz
and
inc
mov
repz
mov
test
ss
sahf
jge
das
jge
xor
mov
fld
loope
jle
cmp
movs
jno
pop
xchg
jecxz
(bad)
mov
add
cmc
xchg
dec
pop
xchg
add
int3
add
xor
pop
in
sbb
jl
adc
fdiv
test
ret
sti
icebp
scas
scas
mov
loopne
arpl
pop
mov
push
repnz
dec
sbb
pop
push
add
pop
jecxz
cmc
cdq
(bad)
int3
adc
pusha
add
mov
mov
enter
imul
add
mov
div
mov
or
in
pushf
test
add
inc
lods
rcl
cmp
xor
mov
das
faddp
cli
inc
mov
dec
call
pop
mov
sub
xor
lods
ja
cli
mov
push
outs
call
rcl
es
pop
inc
ss
cdq
xchg
pushf
mov
fst
adc
pop
cmps
add
stc
or
dec
cmp
nop
inc
inc
ficom
fld
xchg
aam
push
dec
ins
imul
and
dec
pop
xor
dec
data16
rcl
or
(bad)
pushf
fcmovnb
(bad)
and
stos
and
retf
push
xor
mov
xchg
inc
inc
(bad)
jecxz
jecxz
sar
retf
cmps
xlat
inc
or
dec
addr16
stos
aam
cmp
push
imul
push
jno
imul
cmp
enter
and
mov
push
test
dec
call
jne
icebp
nop
jp
lods
xchg
dec
shl
fimul
inc
lahf
adc
fldcw
ret
hlt
dec
adc
mov
pop
xor
push
in
test
lea
cmp
push
sahf
hlt
push
lods
shl
std
push
cmp
add
lods
push
out
dec
pop
lods
clc
jg
aas
dec
fcomp
pop
ins
(bad)
xchg
xor
push
retf
mov
clc
xchg
or
fist
in
pop
mov
int
cli
or
(bad)
or
mov
pusha
dec
cld
stc
add
adc
fidiv
ins
dec
addr16
ret
lock
lds
inc
clc
add
cmc
push
call
xor
xor
fimul
and
ins
(bad)
stc
ins
or
rcl
shl
or
or
loopne
push
loope
repz
scas
dec
(bad)
mov
loopne
xor
add
jne
sbb
jnp
or
mov
xor
bound
push
xor
jb
leave
mov
xchg
add
pop
xchg
or
lods
(bad)
call
shr
mov
out
movs
lea
or
jg
inc
cmp
xor
inc
pushf
push
inc
cmp
es
pop
sbb
mov
add
pop
div
fwait
xor
and
jl
fisttp
ret
mov
adc
adc
inc
(bad)
xlat
fs
inc
rcl
and
in
dec
mov
sidtd
push
mov
mov
nop
push
xor
fcmovne
test
jns
out
mov
retf
lea
enter
jg
dec
mov
das
fisub
jno
js
(bad)
cld
sub
retf
(bad)
pushf
sbb
mov
dec
dec
sahf
push
xchg
(bad)
jne
enter
cld
adc
(bad)
adc
cmp
daa
sbb
push
in
movs
or
fwait
sbb
adc
push
xlat
enter
cli
mov
cwde
pop
push
dec
mov
shl
cdq
(bad)
cmp
nop
xchg
sbb
push
add
cmp
xor
dec
mov
xor
movs
jle
cdq
jo
cmp
xor
ins
lahf
xor
test
sub
or
ja
pop
(bad)
add
iret
inc
dec
pop
mov
mov
mov
mov
in
cmps
inc
pop
loop
cld
and
das
push
ja
xchg
rcr
jnp
mov
sbb
movs
pop
push
xchg
sub
push
arpl
xor
pop
lea
inc
mov
and
hlt
mov
inc
cld
jae
pop
retf
push
cmps
mov
push
icebp
xchg
mov
mov
xor
mov
sbb
inc
xor
in
fist
clc
sahf
js
retf
jbe
lds
and
xchg
icebp
sub
mov
jnp
(bad)
sbb
push
push
sub
sub
sub
les
int
sub
xor
add
(bad)
js
xlat
sbb
dec
loopne
les
inc
adc
int3
lods
js
inc
in
add
or
xlat
int3
pop
xor
fs
test
sub
(bad)
pop
xor
frstor
mov
mov
test
sbb
adc
pop
rol
(bad)
call
pop
retf
aas
(bad)
or
in
sub
fnstenv
(bad)
and
stos
xchg
jle
out
add
fbstp
outs
cld
int
js
mov
jo
xchg
add
les
shl
scas
push
pop
inc
out
pop
mov
loope
push
mov
imul
(bad)
out
push
enter
xchg
call
xor
or
or
lea
add
push
push
adc
arpl
mov
xor
pop
enter
je
mov
cmps
xor
and
pop
pop
adc
mov
aas
adc
addr16
fnstcw
stos
cdq
and
xchg
lock
pop
xor
lds
xchg
pop
push
sub
add
or
dec
inc
push
fwait
cmp
(bad)
or
jecxz
push
pusha
mov
ret
ret
inc
fidiv
les
pop
shl
daa
xchg
dec
(bad)
iret
lahf
adc
adc
dec
aaa
sbb
test
jo
les
out
pop
lods
in
out
and
(bad)
scas
add
jb
mov
fstp
push
or
retf
loope
pop
loope
clc
(bad)
adc
mov
sahf
cmp
outs
dec
int3
push
jns
jae
sbb
(bad)
jge
mov
addr16
test
xor
inc
test
dec
xchg
ficom
adc
cmp
xchg
pop
add
cmps
pop
dec
dec
lahf
lds
push
sub
cs
mov
cmc
add
dec
shr
ds
into
movs
mov
dec
mov
stos
std
xchg
ins
icebp
cs
xor
cmp
pop
cmp
mov
push
repnz
mov
fnstsw
jne
lds
pop
mov
cmp
cmp
test
inc
lds
jg
pushf
iret
ficomp
lods
(bad)
sbb
dec
mov
popf
and
add
inc
ror
mov
pop
push
mov
dec
std
hlt
push
int
inc
mov
push
out
fcom
adc
(bad)
adc
jbe
enter
rcl
addr16
leave
or
arpl
call
mov
test
outs
fdiv
and
sbb
dec
call
aas
xor
cmp
scas
cli
cli
jle
xchg
cs
add
jae
pop
shr
mov
pop
adc
mov
push
sbb
leave
xor
xor
jae
out
ss
out
ja
rol
lahf
jg
movs
cmp
jg
jmp
scas
shl
jo
and
repz
xchg
mov
mov
aad
sbb
adc
xchg
mov
dec
or
adc
or
inc
das
div
scas
cmp
mov
(bad)
fdiv
fs
(bad)
dec
out
lock
ins
mov
jmp
shl
and
stos
cmp
imul
shl
aam
lods
int
call
jbe
ss
mov
jmp
push
lods
ja
jmp
pop
inc
daa
sub
add
mov
add
xchg
and
jns
sbb
pop
or
xchg
jmp
fcmovu
fwait
ins
xchg
sahf
jae
sub
and
fsubr
jnp
jmp
das
xchg
add
movs
test
xchg
loope
adc
std
push
xchg
shl
add
fcmovbe
aaa
std
mov
repz
xchg
sub
add
icebp
push
repnz
add
push
pushf
xor
pop
(bad)
xlat
ins
add
fcomp
xchg
add
shr
push
push
pop
jp
into
push
cmp
adc
pop
xchg
sub
pop
aam
js
arpl
pushf
(bad)
and
add
jo
add
inc
loope
add
ja
adc
jno
dec
and
stos
xchg
cdq
iret
push
rcl
ss
push
scas
mov
cs
and
add
xor
ds
(bad)
mov
out
out
js
data16
ja
xlat
int
mul
mov
sar
loopne
out
sub
xor
call
sar
cs
or
mov
or
push
js
jg
and
xor
pop
mov
dec
push
jle
lock
dec
sahf
pop
push
mov
push
or
and
or
dec
or
mov
loop
mov
jnp
sbb
sahf
xchg
loope
mov
aam
xchg
pop
and
les
and
dec
inc
clc
push
mov
and
push
jns
je
repz
xchg
add
das
into
jmp
xor
stos
je
jb
adc
stc
mov
cli
repz
out
cli
repnz
add
out
xchg
jmp
shr
mov
inc
sbb
call
or
mov
xchg
pop
scas
enter
push
int3
outs
js
push
icebp
arpl
inc
aaa
fidivr
xchg
call
fistp
push
loop
js
imul
mov
inc
je
fwait
add
call
pop
pop
(bad)
jmp
jmp
push
call
sti
mov
and
adc
jbe
inc
sub
push
pop
or
mov
jmp
dec
dec
fdivr
sbb
ins
mov
enter
xor
stos
xor
pushf
and
jl
mov
in
jns
mov
fisub
mov
popa
xchg
in
dec
leave
ficomp
das
mov
std
cmp
out
(bad)
movs
dec
inc
mov
inc
add
jnp
imul
push
std
stos
mov
mov
out
les
int
push
xor
(bad)
and
sub
push
or
popa
push
xchg
adc
dec
enter
data16
aaa
mov
in
xchg
jno
pop
(bad)
loope
inc
dec
aad
inc
and
push
xchg
imul
jno
xor
pop
jae
stos
into
mov
test
sbb
pop
push
scas
fisttp
repz
jmp
xor
xchg
hlt
out
loopne
cmp
and
(bad)
jecxz
adc
mov
(bad)
adc
add
lods
mov
push
nop
add
imul
inc
push
xchg
retf
pop
mov
inc
loope
add
jne
mov
and
or
jp
mov
outs
fdiv
in
sbb
shr
(bad)
popf
mov
mov
sar
nop
rol
jge
in
sub
inc
xchg
idiv
scas
push
nop
cmps
mov
lock
and
ret
fbld
or
mov
repnz
mov
adc
xor
dec
mov
mov
rcl
sbb
adc
mov
cmp
test
jmp
xor
sub
add
mov
cli
mov
xor
arpl
(bad)
jecxz
cld
aaa
add
cmp
push
add
shl
pop
push
stos
sbb
mov
sbb
loope
addr16
fdivr
imul
push
sbb
push
xchg
adc
push
pop
xlat
mov
dec
outs
cld
mov
not
nop
test
leave
lods
mov
test
pop
jecxz
jns
push
adc
cld
inc
cmp
xchg
adc
push
cmps
lock
mov
jl
das
push
std
mov
xchg
or
lock
adc
call
popa
push
jne
les
jecxz
aaa
cmp
int
repz
mov
test
bound
fst
data16
xor
leave
fdiv
scas
out
push
mov
cld
lods
sub
pop
xchg
pop
dec
lods
shl
mov
jno
int3
xor
inc
sbb
dec
push
in
int3
add
stos
mov
fwait
(bad)
mov
mov
adc
or
popa
mov
sahf
fs
push
and
inc
stos
test
mov
cmp
(bad)
fidivr
push
stos
cmc
mov
(bad)
xchg
pop
push
test
popf
stos
mov
ret
sub
ja
mov
sahf
pop
jns
cli
pop
mov
ins
std
(bad)
sub
inc
jg
xchg
cmps
repnz
loop
dec
ror
push
add
mov
xor
stos
pop
mov
ss
xchg
ss
repnz
enter
fcmovbe
cs
adc
mov
jmp
retfw
cmc
jecxz
mov
mov
out
add
push
mov
repnz
clc
call
popa
inc
in
jp
bound
sub
pop
pusha
mov
fwait
imul
(bad)
dec
(bad)
scas
mov
scas
ds
cmp
mov
fld
inc
bnd
fwait
mul
xchg
push
adc
repz
icebp
ins
lahf
sbb
and
dec
pop
or
cmp
daa
outs
mov
mov
in
pop
xchg
adc
leave
bound
dec
push
pop
(bad)
sub
xor
mov
sti
xor
sub
cld
xchg
mov
xchg
mov
pusha
lock
aad
std
mov
and
ret
push
sub
mov
ds
and
cmps
movs
iret
mov
mov
sub
adc
pushf
frstor
xor
mov
ss
mov
aam
jl
cmp
jne
cmp
xor
test
inc
mov
out
push
inc
imul
cmp
sbb
mov
inc
cdq
sbb
(bad)
sub
stos
xchg
inc
cli
mov
inc
and
cld
dec
fcom
sbb
in
xchg
push
arpl
nop
adc
inc
jl
imul
in
movs
(bad)
pop
repnz
mov
add
rcl
test
jl
push
in
(bad)
test
inc
xchg
nop
sub
mov
gs
adc
or
jb
ins
mov
mov
mov
(bad)
sbb
mov
bound
jp
pop
stos
push
adc
cmp
cld
(bad)
jle
mov
clc
sbb
fild
pop
xchg
inc
inc
jmp
mov
sub
stc
push
ins
adc
sbb
adc
sub
sub
adc
jno
clc
mov
cmc
ins
push
out
or
rol
cmp
pop
cli
(bad)
adc
add
les
sbb
sub
add
xor
cmp
sub
mov
mov
ds
cli
xchg
call
mov
sahf
and
sub
push
popa
sub
jbe
xor
jbe
adc
test
ins
and
xor
cmp
push
in
add
mov
push
(bad)
shr
sbb
jecxz
(bad)
dec
mov
push
sub
or
js
and
sbb
sbb
out
int3
popf
or
aaa
jmp
xchg
neg
repnz
sbb
test
jmp
test
xor
inc
jo
sub
sub
ins
mov
and
cmc
icebp
mov
xor
(bad)
mov
adc
inc
push
and
cld
jns
add
mov
push
dec
mov
and
sbb
inc
inc
and
xchg
bound
loope
and
stos
cmp
push
push
(bad)
pop
cmps
(bad)
mov
cs
mov
xchg
xor
mov
rol
add
test
or
push
sbb
inc
adc
or
push
sub
adc
dec
sub
push
neg
(bad)
div
adc
pop
pop
sbb
push
pop
mov
push
jnp
xor
sub
push
adc
add
pusha
fistp
dec
mov
daa
clc
mov
adc
pop
sub
sub
and
mov
loop
fcomp
addr16
xor
outs
ins
je
or
sahf
fs
retf
popa
ins
cdq
xchg
or
mov
pop
inc
(bad)
jns
mov
sbb
add
sub
cs
retf
aas
fyl2xp1
stc
fsub
imul
push
neg
adc
enter
and
hlt
in
mov
pop
clc
pop
(bad)
retf
dec
out
clc
xchg
jl
pushf
out
das
and
sbb
int3
add
and
dec
mov
sub
jmp
sti
mov
push
in
int3
in
jmp
lea
mov
mov
dec
fwait
arpl
push
test
imul
mov
dec
leave
push
stos
xor
cmps
push
rcl
aam
fdiv
sbb
add
push
xor
in
sub
sub
(bad)
out
xchg
sti
scas
jb
clc
sbb
pop
xor
loopne
(bad)
rol
xchg
jne
add
add
mov
jg
push
scas
cli
cld
arpl
push
cmp
sbb
jge
cwde
fsubr
xchg
dec
fist
test
sbb
in
and
std
or
loop
data16
push
popa
bound
rol
out
jmp
mov
xchg
pusha
rcr
(bad)
mov
or
imul
ret
(bad)
push
call
repnz
test
imul
dec
push
inc
test
popa
rol
jne
lock
push
jns
dec
inc
mul
loop
mul
nop
jle
mov
es
in
xor
clc
fcmovne
call
icebp
cmp
nop
sbb
mov
add
retf
les
push
shl
aaa
(bad)
call
mov
in
aam
fisubr
mov
push
outs
adc
jo
loop
add
sub
pop
push
mov
mov
mov
fucom
aam
dec
fnstsw
aaa
xor
data16
imul
mov
sti
push
inc
jge
push
sbb
dec
data16
iret
std
xchg
stos
adc
lock
dec
pop
adc
(bad)
(bad)
in
in
pop
sbb
(bad)
call
xor
jbe
sub
mov
lahf
lock
push
enter
or
fidivr
jb
add
fwait
push
xchg
adc
int
aaa
adc
aam
jmp
loop
add
jecxz
jb
xchg
push
jge
(bad)
jns
sar
mov
nop
add
stos
jge
sbb
movs
shl
leave
mov
and
addr16
xchg
pop
mov
sbb
sub
(bad)
jnp
add
cmp
arpl
adc
fxch
dec
fwait
mov
push
inc
pop
adc
stc
pop
rep
outs
test
dec
lods
dec
rcl
mov
fs
lock
jmp
mov
loopne
outs
(bad)
rcr
shr
jmp
retf
popf
dec
int
jecxz
adc
popf
shr
adc
inc
sub
dec
fsubr
mov
shl
mov
ins
int3
push
aad
in
sbb
leave
test
ins
unpckhps
nop
dec
loopne
jb
mov
std
add
addr16
push
mov
ret
xchg
jns
mov
aaa
mov
dec
sbb
(bad)
daa
les
mov
adc
movs
adc
xor
mov
or
loop
dec
sbb
cmp
and
cld
jne
mov
fist
sti
or
mov
test
out
pop
ss
fstp
lods
mov
sub
(bad)
xchg
and
ins
mov
into
lods
cld
in
adc
test
retf
sbb
outs
xor
mov
(bad)
adc
ins
pusha
cwde
or
cmps
push
cwde
adc
cmp
clc
dec
scas
mov
mov
out
ficomp
xor
test
inc
aaa
sbb
and
enter
xchg
mov
lds
mov
push
(bad)
in
shr
mov
cmp
out
add
sub
mov
push
mov
add
je
int3
or
mov
outs
push
popf
adc
xchg
jmp
push
sbb
mov
jae
sub
jg
imul
dec
or
xor
mov
cmps
aas
and
pop
or
and
pop
(bad)
sub
or
aam
call
xchg
push
clc
ins
ficom
inc
cwde
out
add
mov
xlat
and
cdq
cmp
in
push
shr
push
fnsave
sub
add
add
(bad)
push
stos
jecxz
sbb
aam
mov
pop
fwait
pop
shl
pop
sahf
das
or
inc
xchg
cmp
mov
xchg
dec
sahf
loop
sahf
mov
clc
mov
jbe
xchg
pop
retf
cmp
into
test
mov
iret
sub
imul
mov
adc
adc
or
enter
out
inc
xchg
push
fld
icebp
mov
mov
cmp
(bad)
push
push
fdivr
aad
mov
aas
cmp
repz
inc
jmp
pop
lock
bnd
dec
xchg
inc
mov
add
outs
push
(bad)
cdq
mov
mov
enter
jge
inc
mov
pop
bound
retf
(bad)
cmp
pop
fidiv
adc
inc
cmp
mov
sahf
mov
pop
enter
sar
mov
js
mov
imul
jmp
mov
inc
or
sbb
jge
mov
add
sahf
or
inc
outs
mov
or
fld
mov
in
cmp
rcr
sub
imul
repz
mov
or
arpl
push
(bad)
adc
dec
mov
call
ficom
lea
push
jge
xchg
stos
stc
inc
xchg
jae
jecxz
dec
aaa
outs
push
pop
mov
push
push
mov
pop
out
das
test
rcl
outs
pop
sub
adc
faddp
push
jne
ficomp
retf
cmp
mov
inc
push
jmp
inc
bound
jecxz
pop
not
cwde
fwait
repz
mov
sbb
mov
sar
aaa
das
cld
loope
jp
xor
push
jl
imul
in
mov
inc
cmp
cmps
psrad
push
cmp
mov
xor
xchg
xchg
pop
cs
mov
test
xchg
jg
pshufw
mov
push
movs
lock
stc
jmp
inc
hlt
push
pop
and
sub
cmp
sahf
jnp
pop
add
cmps
fistp
pop
dec
jmp
add
test
mov
fcomp
sub
or
sbb
or
push
xchg
js
cdq
sar
mov
push
xchg
mov
push
jl
scas
(bad)
mov
mov
(bad)
push
shl
adc
fcom
imul
and
adc
mov
jb
iret
ror
out
and
xchg
and
(bad)
neg
push
jo
sub
push
lahf
jno
cli
dec
shl
inc
cmc
inc
pushf
retf
data16
fimul
add
sar
mul
pop
lds
mov
xor
cdq
scas
adc
clc
add
sub
sub
mov
test
mov
jp
jnp
add
or
sub
and
imul
add
sub
jmp
dec
mov
gs
fwait
cmc
cwde
or
jno
pop
pop
mov
push
xor
xor
pop
adc
aam
adc
fwait
sahf
push
outs
sub
sbb
jbe
push
xor
mov
movntps
jl
ret
lds
or
ss
cmc
dec
and
and
adc
inc
xor
pushf
pop
aas
pop
add
das
lock
pop
cdq
add
dec
sbb
push
fcom
mov
adc
xor
les
or
inc
jge
rol
cli
mov
(bad)
push
xor
sbb
inc
jae
sub
test
adc
pop
inc
or
in
repz
(bad)
mov
test
loopne
sbb
mov
pop
xchg
(bad)
stc
sbb
jae
out
xchg
leave
cmp
adc
or
data16
jp
into
in
mov
lock
enter
test
(bad)
test
ins
mov
and
shr
retf
sbb
lock
mov
inc
aaa
fld
add
mov
push
enter
sbb
js
push
pop
loopne
mov
sbb
(bad)
pop
jne
pop
or
push
int
(bad)
jge
mov
es
(bad)
cli
and
xchg
pop
ins
enter
lock
pop
add
cdq
pop
mov
sbb
into
lods
mov
adc
cmp
and
xchg
xchg
retf
xor
(bad)
movs
mov
imul
jmp
cmp
int3
push
repz
(bad)
cwde
inc
push
mov
bound
xor
rcl
push
or
jecxz
retf
aas
or
pop
push
adc
pop
pmuludq
scas
jl
xchg
bnd
jb
sahf
pop
or
stos
or
push
add
popf
jmp
dec
aam
cmc
or
xchg
dec
fldenv
and
mov
rcr
inc
jbe
pop
(bad)
jecxz
sub
retf
push
xor
add
fisttp
jl
out
push
cmp
mov
mov
ins
cli
pusha
enter
(bad)
mov
push
mov
mov
pop
sbb
xor
adc
cmp
fnstenv
dec
test
inc
ins
scas
not
test
(bad)
icebp
push
mov
aaa
mov
dec
shr
sub
inc
dec
out
stos
(bad)
sbb
mov
paddusb
mov
dec
sub
adc
mov
mov
data16
(bad)
fcmovbe
jp
test
mov
int
rol
cvttps2pi
stos
cmc
jmp
nop
aad
xchg
aas
imul
xor
push
out
clc
popa
xchg
fnsave
fbld
dec
push
cli
pop
mov
lahf
movs
mov
retf
lock
call
call
loop
fidiv
and
fidivr
inc
cmp
cmps
add
mov
pusha
loopne
dec
rcr
call
pop
xchg
data16
cmp
(bad)
(bad)
push
xor
jbe
xor
int3
mov
pusha
je
stos
jns
sbb
sbb
cmp
inc
js
cmps
pop
inc
loop
outs
dec
test
push
int3
jle
mov
ret
les
mov
mov
push
mov
push
stos
(bad)
jle
fiadd
outs
mov
and
sbb
(bad)
pop
add
jbe
mov
jns
lock
imul
mov
sub
imul
fisubr
dec
fwait
xor
mov
inc
jecxz
loope
push
inc
scas
sub
or
sub
sub
push
iret
retf
je
jmp
in
jecxz
imul
mov
dec
int
xchg
scas
xor
push
test
repnz
push
sbb
cmp
mov
ss
mov
adc
cli
sbb
in
out
mov
je
jmp
movs
cli
add
and
daa
mov
mov
ins
sub
shr
mov
mov
sbb
or
jb
inc
(bad)
xchg
jo
cmc
mov
cmp
jne
mov
xor
and
add
pop
mov
add
jb
ror
pop
(bad)
outs
cmp
jl
into
bound
xchg
add
sti
sub
imul
add
push
outs
xchg
mov
fwait
jne
(bad)
jbe
or
sub
or
and
lock
mov
push
cmps
mov
sbb
mov
repz
jle
imul
pushf
fisubr
(bad)
shr
imul
hlt
sub
sbb
(bad)
push
lock
int
loop
(bad)
movs
sar
push
mov
add
xor
test
cmps
inc
sub
jp
jge
push
inc
movs
lods
adc
sbb
inc
ds
loop
retf
cmp
aaa
sub
rcl
and
in
call
loope
(bad)
cmp
inc
jle
stos
adc
xchg
cmps
test
push
cs
pop
sahf
ins
fcomp
dec
push
ucomiss
mov
jmp
dec
jp
jp
ss
push
(bad)
(bad)
aas
sbb
enter
test
add
push
xor
(bad)
inc
ret
or
add
mov
or
pop
scas
mov
mov
mov
rcr
int
mov
sbb
(bad)
sub
cld
ja
call
int3
jg
push
aad
mov
or
stc
or
xor
out
mov
jle
mov
sti
lock
(bad)
pushf
and
sbb
mov
test
ins
mov
gs
aam
mov
xor
push
cmp
ss
outs
mov
cld
xchg
cwde
pop
cdq
xor
mov
xor
xor
daa
add
add
pushf
mov
xchg
sub
push
lahf
mov
ins
xchg
cmp
adc
sbb
xor
push
sti
xchg
mov
inc
into
into
popa
sahf
test
mov
(bad)
ss
add
mov
sub
sub
mov
adc
lods
mov
mov
nop
clc
mov
js
sub
cwde
aaa
mov
mov
sub
sbb
pop
sbb
fisubr
sti
cdq
push
mov
fcomp
fadd
enter
lods
sub
fwait
je
xor
mov
add
(bad)
mov
call
mov
push
orps
inc
or
pop
xchg
inc
jbe
xchg
fs
add
out
out
push
(bad)
xor
fst
mov
loope
std
lahf
ins
sar
(bad)
jo
sbb
aaa
out
into
xlat
jnp
ss
and
cld
fsubr
out
ror
dec
mov
inc
and
sbb
outs
lods
push
dec
inc
dec
cmps
inc
mov
cli
fldcw
add
inc
std
sahf
adc
out
push
add
je
xchg
mov
xor
xchg
xchg
pop
jecxz
and
ja
pop
adc
mov
pop
cmps
aaa
int
fsub
shl
(bad)
pushf
dec
push
mov
add
ret
or
fs
out
bound
das
cmps
cmp
mov
push
push
inc
ds
xchg
or
movs
jb
pusha
movs
retf
leave
pop
dec
(bad)
retf
ds
stos
das
imul
push
sti
pop
fist
mov
cwde
pop
cmp
mov
lock
pop
sub
mov
(bad)
mov
(bad)
jmp
push
loopne
lods
adc
push
in
dec
outs
arpl
inc
movs
sbb
add
leave
cmp
bndldx
int
sub
ret
mov
sbb
add
sbb
pop
ins
sbb
push
jae
stos
dec
xchg
stos
(bad)
js
xor
mov
std
and
dec
mov
int
mov
inc
cmp
pop
mov
xchg
sbb
add
rcr
sub
mov
xor
mov
pop
mov
cld
jnp
fcmovu
mov
jne
jl
inc
shl
repz
xor
sar
push
imul
pop
adc
popf
or
imul
mov
dec
outs
mov
mov
jno
scas
shl
or
push
push
push
mov
or
lds
pop
cmp
jb
fwait
sbb
rol
cld
ffreep
mov
sub
adc
xor
rcl
pusha
arpl
ins
add
enter
jecxz
mov
je
cld
test
cwde
fdiv
out
shl
mov
bound
popa
pusha
mov
sbb
inc
mov
dec
popa
ret
cli
es
jl
sbb
addr16
mov
ret
add
scas
pop
jmp
aaa
dec
mov
pop
hlt
adc
mov
sbb
pop
mov
dec
add
adc
scas
and
enter
mov
cmp
dec
aam
lahf
xchg
mov
popf
in
lods
mov
mov
inc
out
add
inc
and
repnz
shl
popf
mov
push
push
and
add
fstp
jmp
jne
jp
in
xchg
(bad)
les
test
or
imul
adc
ins
xor
mov
jae
xor
test
(bad)
xchg
pop
imul
in
ja
sub
add
ret
stc
push
or
adc
push
fld
pusha
retf
fmul
cmp
fs
(bad)
xchg
jp
lods
cs
mov
push
(bad)
jne
mov
adc
retf
ds
pop
jmp
inc
sbb
sub
push
daa
add
mov
cmc
adc
xchg
xor
xchg
mov
jnp
js
push
pop
cmp
push
jg
mov
cmp
mov
sub
neg
jg
dec
(bad)
add
fbld
popa
mov
out
mov
mov
pop
push
test
scas
sub
sub
nop
out
jge
iret
sbb
cld
inc
jecxz
int
sbb
push
lods
stos
hlt
push
out
push
rcr
lock
stos
mov
out
iret
fmul
enter
es
(bad)
jo
sub
inc
sbb
pop
and
dec
cs
mov
jmp
enter
mov
adc
(bad)
aad
retf
mov
and
xchg
in
ret
out
sbb
and
xchg
add
in
in
int3
mov
inc
mov
mov
leave
xlat
push
pop
nop
imul
fdiv
add
jle
stc
dec
aas
je
mov
jo
adc
(bad)
jmp
repnz
imul
or
cmp
call
xor
mov
fist
sbb
dec
mov
and
in
or
addr16
pminsw
je
xchg
inc
test
jle
addr16
bound
mov
xor
stc
xor
xchg
sahf
jg
add
dec
ret
jmp
mov
inc
popa
js
inc
xor
gs
inc
mov
add
jge
mov
push
ror
add
dec
mov
and
clc
into
and
stc
repnz
cmp
jmp
fcom
rcr
cmp
les
mov
je
sbb
jbe
cmp
push
sar
hlt
xor
sbb
mov
sysret
mov
(bad)
fs
test
xchg
inc
mov
nop
out
ins
inc
jp
lods
xchg
sti
pandn
push
mov
out
sbb
in
call
jmp
inc
in
fwait
xchg
or
jge
xchg
movs
(bad)
enter
fs
in
add
sub
retfw
jo
fcom
jnp
add
in
mov
mov
sub
repnz
in
pop
sub
scas
shl
es
call
fisubr
gs
es
clc
sar
xlat
add
stc
(bad)
xor
jns
sub
(bad)
push
call
add
add
sub
push
and
stos
mov
xor
add
in
fisubr
and
push
xor
jle
js
xchg
aas
sub
dec
fadd
mov
stos
xlat
repnz
out
sub
add
lock
xchg
sahf
movs
inc
arpl
mov
cwde
jns
and
mul
pop
mov
mov
inc
dec
mov
cmp
fist
or
nop
add
dec
xor
push
mov
fistp
fist
mov
test
mov
inc
xchg
stc
movs
mov
in
adc
fidivr
or
jns
and
jmp
jae
adc
adc
fdivrp
jns
imul
sub
fadd
lock
add
mov
movs
test
xchg
cmc
ins
stos
add
fcmovb
stos
jg
imul
nop
scas
push
push
aaa
arpl
jle
inc
inc
xchg
mov
add
inc
sbb
mov
fstp
fnstcw
aad
sub
mov
mov
lods
movs
pushf
inc
dec
mov
fmul
pop
jmp
and
push
(bad)
jmp
(bad)
icebp
lahf
lea
icebp
aaa
jmp
xor
out
shl
aas
sbb
mov
push
xor
jns
pop
xchg
mov
aas
and
lahf
icebp
pop
mov
in
ja
cmp
jno
(bad)
adc
jnp
aas
mov
(bad)
loope
lea
arpl
push
sbb
(bad)
push
pop
push
push
mov
xchg
xlat
outs
cdq
mov
mov
sbb
jmp
sub
in
push
mov
mov
mov
sub
data16
frstor
dec
mov
cmp
add
movs
imul
lds
out
sbb
xchg
ret
or
ds
jg
or
or
mov
xor
pop
jnp
push
mov
dec
sar
cdq
push
loop
or
xchg
and
and
or
mov
fiadd
lds
daa
sar
cmps
mov
mov
loopne
cmc
sbb
popf
mov
pop
push
into
or
shl
movs
ins
sbb
mov
cmc
sar
cwde
mov
ret
jecxz
pop
(bad)
jmp
jnp
into
sbb
das
dec
xchg
sbb
imul
dec
pop
daa
mov
or
mov
shl
pop
test
cld
sub
nop
sar
sbb
sbb
sbb
and
(bad)
hlt
stc
lock
ror
fdivr
adc
jne
mov
sar
cmps
sbb
add
int
dec
mul
les
iret
pop
or
in
scas
jne
das
enter
mov
push
clc
adc
mov
lds
xor
rol
out
mov
push
push
add
movs
mov
sar
dec
in
cmp
push
sub
push
out
mov
sbb
pop
test
sub
repz
shl
pushf
lea
xchg
punpcklwd
mov
fcom
xchg
add
in
js
rcpps
int3
cli
xor
add
mov
pop
jae
jno
in
pusha
push
aad
sar
sbb
stc
les
out
cmps
and
fild
dec
out
mov
imul
cmp
int3
cwde
xchg
xor
scas
retf
std
mov
into
fild
xor
push
mov
inc
(bad)
dec
cmp
mul
adc
imul
push
inc
or
hlt
push
faddp
xchg
xchg
or
and
sbb
(bad)
loope
xor
sar
mov
inc
in
mov
movs
jne
hlt
icebp
pop
jo
or
push
loop
mov
sbb
aad
sub
mov
dec
cwde
add
or
and
test
imul
in
(bad)
or
test
ins
lock
jmp
and
add
xor
into
xchg
std
ret
js
or
and
push
cli
icebp
xor
les
add
lea
push
fmul
data16
pushf
jmp
aam
call
ja
cmps
xchg
(bad)
clc
or
and
stos
lods
xchg
pop
imul
and
or
pop
cdq
jno
in
jbe
ret
mov
push
fist
in
(bad)
dec
pop
test
or
pop
repz
xchg
inc
outs
add
jb
(bad)
out
mov
mov
mov
out
das
fist
sbb
pop
and
mov
mov
mov
out
sti
sbb
loop
mov
or
ins
cs
sub
jp
xor
aam
jb
(bad)
ins
pop
add
fild
xor
mov
or
mov
xchg
shr
mov
dec
sbb
repz
xor
les
(bad)
sti
adc
daa
inc
aas
and
dec
sub
std
jnp
mov
loope
inc
dec
cmps
fsub
xlat
test
pop
sti
into
mov
mov
fidiv
push
jg
add
sbb
mov
(bad)
adc
fnsave
inc
cld
call
outs
xchg
cmp
add
mov
icebp
adc
jecxz
cwde
add
jge
cmp
add
dec
dec
(bad)
cwde
pop
mov
push
out
sti
ficomp
aam
xor
lods
mov
outs
pop
stos
jb
lahf
rol
imul
mov
xchg
jmp
xlat
das
cmps
xor
dec
sub
sub
ja
repnz
loopne
pop
aam
out
ret
mov
inc
adc
gs
js
inc
sub
and
int
in
aas
jnp
mov
jge
or
jbe
jne
sbb
jl
jnp
pop
dec
repz
inc
inc
sbb
mov
outs
cld
mov
retf
mov
sub
dec
ja
xchg
push
adc
inc
std
in
(bad)
leave
fisub
rcl
jg
dec
hlt
mov
pop
call
out
xchg
repnz
out
stos
mov
add
pop
ins
and
or
cmc
sbb
aad
les
fidivr
jnp
mov
jbe
bound
ret
mov
pop
gs
pop
jle
adc
dec
xchg
and
lds
xchg
stos
pop
test
cdq
add
jecxz
or
lock
lods
les
add
push
sbb
int
xchg
xor
sbb
lods
adc
jns
mov
lds
sub
cmp
stos
pop
std
push
adc
sbb
xchg
xchg
mov
adc
jbe
xlat
in
jnp
shr
pop
inc
shr
loopne
fmul
or
push
stos
xor
lods
out
adc
cmp
fild
xchg
jmp
imul
sbb
mov
push
fld
ja
mov
add
into
dec
cmp
nop
jp
call
cmp
fldenv
ret
sub
inc
leave
push
ss
out
fwait
arpl
cmc
stc
mov
ins
inc
fcmovbe
sahf
rol
cmp
pop
and
push
inc
rcr
bound
sbb
ret
rol
ins
xchg
sbb
cmp
cmp
or
and
push
cmp
inc
jb
add
jmp
xchg
jg
out
xchg
not
sbb
fdiv
xchg
inc
mov
out
jnp
and
lea
retf
addr16
mov
inc
hlt
push
and
pop
jmp
(bad)
shl
dec
xor
cmc
mov
js
test
mov
in
out
aad
call
mov
pop
outs
fwait
test
push
xor
adc
retf
inc
test
or
(bad)
stc
ret
inc
mov
dec
xchg
ror
xchg
xchg
cli
aam
mov
jp
je
xchg
icebp
adc
jae
pop
mov
loop
aam
test
adc
repnz
repz
dec
pop
sbb
repz
and
iret
scas
dec
xor
push
fst
dec
lods
outs
inc
out
sbb
idiv
ror
outs
cmp
aad
scas
imul
mov
mov
push
mov
imul
jl
mov
push
or
cmp
jle
sbb
inc
fldenv
test
push
add
retf
xor
scas
aas
xor
ins
stos
pop
mov
xor
enter
mov
jp
push
and
popf
outs
lds
cmp
std
imul
mov
in
iret
mov
xor
sbb
stc
add
pop
and
cmp
add
xor
push
dec
mov
nop
jmp
pop
stos
sub
shl
and
pop
mov
(bad)
lock
jns
in
push
loop
cld
xchg
fldcw
sahf
cdq
adc
test
sar
mov
(bad)
fwait
pop
xchg
pop
arpl
mov
gs
inc
in
shl
push
dec
jae
popa
mov
mov
nop
ficomp
call
call
push
popf
or
jb
inc
outs
idiv
loopne
cli
cli
outs
lods
mov
pop
cli
sub
(bad)
loopne
cs
push
push
(bad)
lods
cmp
js
push
dec
pop
push
aad
xlat
out
mov
xlat
or
ins
outs
add
mov
cmp
rcl
sar
stos
out
out
in
xchg
cs
xor
inc
cld
jo
cmp
inc
sar
or
inc
and
out
loop
inc
fst
fld
out
sysexit
xor
out
out
mov
daa
and
add
cdq
jmp
add
lods
push
mov
mov
dec
sub
and
sbb
and
mov
ror
dec
bound
sbb
mov
outs
(bad)
(bad)
cmps
and
data16
ins
mov
mov
jp
pop
sbb
add
frstor
jp
(bad)
(bad)
jbe
cs
jge
ret
xchg
adc
sbb
jmp
add
and
popf
stos
lahf
mov
int
and
jnp
test
data16
mov
sahf
stc
ret
imul
dec
xchg
pop
jno
inc
sbb
xchg
sti
jo
daa
mov
aad
sbb
push
jge
(bad)
jns
jbe
stc
lods
xor
mov
ins
mov
aad
ficom
mov
movs
leave
ffreep
add
je
lock
sbb
loopne
aas
mov
cmp
sbb
call
ret
lods
push
sbb
test
add
jae
sub
mov
int
idiv
mov
sti
sub
pop
xchg
add
pop
test
daa
xchg
int3
out
imul
ins
pop
(bad)
fdivr
mov
sbb
mov
int
movs
int3
dec
sbb
test
iret
leave
pop
icebp
mov
sbb
shl
iret
mov
dec
loopne
cmp
mov
in
mov
call
or
sbb
jg
retf
add
popa
mov
jo
adc
sbb
sub
pushf
jnp
cdq
inc
sbb
test
push
adc
mov
(bad)
addr16
je
dec
fdivrp
jae
or
xchg
adc
sahf
bound
test
stos
aas
das
out
call
int
test
je
jge
ficom
das
mov
pop
push
pop
jp
arpl
mov
add
push
dec
xor
push
daa
and
and
fwait
jmp
(bad)
js
adc
stos
das
cwde
retf
lock
add
jecxz
sbb
inc
mov
jmp
fdiv
xchg
lods
sbb
out
push
xchg
arpl
test
dec
cmp
dec
adc
mov
test
int
cmp
and
adc
xor
and
xchg
out
movs
xchg
ss
mov
push
das
and
push
neg
add
dec
call
js
clc
xor
(bad)
clc
xlat
lock
push
sbb
int3
mov
loopne
xor
xor
mov
sub
ins
pop
pop
ss
loop
stos
pop
mov
pop
ret
adc
and
loop
mov
xor
inc
lds
pushf
fsub
aaa
push
sub
fs
ret
mov
or
sbb
push
sub
or
jno
pop
rol
sub
(bad)
movs
sar
xor
sub
outs
iretw
aaa
test
push
stos
movs
imul
xor
shl
call
push
dec
mov
push
in
add
jbe
cmp
xor
popa
pop
inc
inc
shl
sbb
jg
mov
aas
(bad)
jp
mov
sar
sub
in
lds
in
outs
jmp
sub
push
inc
mov
arpl
mov
mov
addr16
fidiv
mov
xor
adc
sub
idiv
or
mov
std
jle
xor
push
fdivr
test
mov
arpl
dec
mov
sahf
pop
and
inc
ss
outs
jmp
xor
sbb
mov
inc
in
repz
lods
iret
test
fsubr
dec
fist
xchg
or
js
jne
dec
dec
pop
mov
daa
xlat
xchg
push
cmc
and
cmp
jns
aam
into
fsub
retf
adc
mov
aas
inc
add
jae
test
dec
xchg
pop
fsubrp
ds
push
lahf
call
pusha
in
fdiv
jns
pop
cmp
mov
fwait
popa
xor
js
add
call
scas
mov
movs
xchg
in
push
fstp
repz
cmp
jo
push
sub
xor
sub
retf
inc
mov
push
iret
push
sub
push
sub
mov
push
jmp
cmp
retf
mov
push
jno
xor
mov
mov
jp
xchg
mov
cli
repz
dec
outs
inc
std
loopne
jg
das
or
sub
popf
fild
xchg
adc
data16
retf
lods
scas
fldenv
lea
dec
psllq
cmp
mov
xlat
mov
cwde
sub
sbb
addr16
(bad)
jmp
mov
xchg
mov
xor
jmp
(bad)
inc
dec
scas
bound
or
ins
push
add
shl
xchg
pop
cmc
push
leave
test
jecxz
hlt
xchg
loop
ficomp
mul
lahf
sub
mov
test
inc
mov
int
cmps
daa
adc
mov
inc
imul
cmps
mov
add
ret
push
mov
xor
mov
sbb
int
xchg
or
pop
sub
pop
inc
dec
jg
jae
ins
add
xor
shl
dec
dec
xor
clc
jecxz
mov
lahf
xchg
mov
xchg
lods
mov
mov
inc
test
push
outs
and
int
out
mov
mov
dec
ja
jecxz
xor
push
add
fcom
xchg
push
test
and
into
stos
and
cld
and
pushf
jl
cld
ja
out
cld
jle
and
fisttp
jo
(bad)
into
loope
adc
pop
lea
aam
cmp
cwde
jge
aam
adc
or
js
sbb
xchg
cdq
icebp
or
xor
enter
mov
push
adc
fnstcw
je
xchg
(bad)
idiv
dec
outs
push
scas
imul
jae
dec
pop
out
mov
xchg
pop
or
out
(bad)
dec
aas
sub
pop
lods
jle
mov
fisttp
push
in
test
test
pop
pop
mov
hlt
int3
mov
in
sbb
fcmovnb
push
rol
dec
xchg
mov
fimul
mov
repz
mov
jmp
ret
xor
pop
test
push
test
outs
rcr
dec
mov
(bad)
pop
add
int3
shl
pop
cdq
push
enter
inc
rcr
sbb
and
adc
sub
cld
sub
int
jae
dec
lea
cmp
and
rep
dec
jno
lods
inc
mov
jl
and
push
fs
cmp
popf
xchg
ss
jne
xor
dec
je
mov
gs
out
fnstsw
in
or
movs
adc
iret
xchg
sbb
fsub
pop
jmp
mov
mov
and
cmp
xchg
test
repnz
repz
xlat
jmp
inc
cmp
cdq
inc
jmp
jge
lock
lar
ret
mov
mov
lahf
dec
mov
clc
mov
out
jl
in
mov
addr16
dec
(bad)
cmp
inc
repnz
push
push
scas
cmp
pushf
ins
test
push
mov
xchg
push
and
outs
cmc
pop
cmps
inc
xchg
inc
xchg
push
jge
popa
sub
jmp
fld
ret
pusha
les
imul
xchg
(bad)
repnz
lods
and
ficomp
or
and
and
xor
mov
stos
mov
rcr
adc
retf
and
(bad)
enter
test
and
xchg
fcom
mov
push
lea
or
shr
out
sbb
ins
sbb
mov
daa
xchg
ret
sti
rsqrtps
sbb
mov
lea
repz
lahf
mov
cmp
clc
xchg
(bad)
push
mov
cmp
dec
jmp
mov
push
or
and
ret
inc
pop
jbe
jbe
xchg
ficom
pop
mov
push
xchg
pop
imul
cmp
icebp
jg
jl
push
icebp
outs
push
test
mov
mov
repz
push
inc
push
push
bound
mov
int
xlat
jo
mov
xchg
retf
adc
into
dec
rol
and
ds
xchg
stos
and
ret
les
xchg
cmc
pop
rcl
(bad)
repnz
jb
add
hlt
repz
inc
aam
mov
inc
sub
pop
int3
stc
fs
pop
mov
pop
fistp
stc
cmp
loopne
adc
sbb
or
pop
xchg
cmc
jnp
repnz
cs
cli
loop
adc
xor
ficomp
loopne
movs
jge
adc
mov
mov
mov
xchg
test
ins
cmps
dec
fadd
icebp
pop
pop
repnz
(bad)
cli
mov
mov
cmp
fist
jb
push
popa
imul
aaa
inc
das
jl
cmc
jle
fld
push
icebp
retf
sar
cmp
pop
push
add
adc
nop
sbb
xchg
inc
mov
sbb
sub
and
jecxz
test
aaa
data16
cmp
out
rol
cmp
imul
cdq
rcl
shl
imul
sti
xor
mov
mov
adc
(bad)
jecxz
fild
xor
inc
inc
add
adc
xchg
mul
ds
mov
cmp
jne
or
icebp
lods
cmp
add
retf
stos
repnz
hlt
cmps
cs
in
mov
enter
es
dec
sub
pushf
xchg
and
daa
icebp
test
jg
ds
add
in
mov
fsub
mov
test
repz
std
mov
(bad)
inc
fisttp
test
and
adc
scas
test
stos
enter
sahf
or
mov
sbb
mov
in
pop
ins
push
mul
fild
aam
cmp
xor
inc
int3
scas
loope
hlt
je
adc
mov
mov
mov
add
ins
add
mov
cmps
aaa
sub
sub
imul
rcl
xchg
push
sbb
bound
pop
pop
xor
mov
scas
xor
push
call
aaa
in
and
retf
add
je
xor
adc
sbb
les
inc
push
das
mov
sub
dec
test
scas
aaa
out
mov
mov
cmc
or
out
pop
xchg
pop
dec
adc
fidiv
push
mov
cmp
repz
pop
outs
jno
cld
xchg
push
ret
inc
movs
lods
jge
cld
mov
xor
cmp
dec
jb
mov
sub
xchg
add
jp
xchg
jns
mov
xchg
mov
push
fnstenv
and
leave
jo
dec
xchg
adc
jle
cmps
add
cmp
push
adc
adc
loop
mov
(bad)
out
ja
shl
sub
rol
mov
fcmovnb
(bad)
pop
jbe
mov
je
add
fisttp
movs
imul
gs
not
sub
xchg
inc
cmps
int
nop
jmp
(bad)
cmp
shl
jl
adc
or
dec
outs
pop
mov
es
inc
test
jne
adc
addr16
ret
bnd
jmp
xchg
mov
repnz
mov
adc
mov
ss
lods
cmp
cmp
cwde
test
xchg
dec
aam
mov
xchg
dec
sub
push
push
jmp
bound
cmp
fcmove
or
inc
pop
or
jnp
jmp
jns
and
rol
stc
push
sub
push
jmp
jmp
xchg
push
iret
push
inc
jp
inc
loopne
or
test
pusha
in
pop
xor
sbb
and
pop
pop
movs
ficomp
retf
xchg
ret
sbb
push
or
xchg
or
jmp
in
and
push
mov
fisttp
mov
enter
xchg
push
and
pop
or
add
lds
rol
out
push
sbb
xor
dec
adc
inc
gs
cmps
out
mov
fsubr
test
xlat
cld
mov
push
(bad)
repz
pop
sbb
add
imul
sub
mov
test
xor
xchg
repnz
fadd
stos
xlat
jp
ret
or
pop
mov
sahf
ins
jb
sub
cmp
mov
lahf
xor
hlt
jg
ins
shr
fcmovnbe
lods
jnp
jae
mov
daa
mov
or
push
leave
cld
push
mov
cmp
inc
(bad)
adc
ja
rol
cs
in
movs
jbe
in
daa
loop
pop
xchg
xchg
aam
jmp
xor
cmps
movs
lahf
out
ret
in
fstp
jp
push
dec
lea
test
test
repz
mov
repz
cld
mov
cmp
push
jns
in
push
cdq
push
ja
jg
ret
mov
lods
xlat
xor
fimul
cld
jne
jl
sar
pop
dec
pop
test
inc
inc
loopne
sbb
sbb
adc
or
and
pop
push
mov
loop
and
outs
mov
test
add
shl
sbb
aad
mov
push
and
adc
mov
inc
or
sub
cmps
fiadd
in
adc
fild
sbb
adc
loopne
xor
xchg
jbe
out
fld
pop
sbb
ffree
ss
out
test
fdivp
jno
fwait
inc
sbb
add
jg
xor
sbb
mov
pop
jmp
clc
xor
call
dec
sub
lds
push
xor
repnz
jne
repz
jne
loopne
dec
adc
aaa
xor
adc
dec
and
or
test
aaa
aas
test
cmp
retf
or
and
jecxz
push
or
outs
loope
out
outs
in
clc
xor
loope
in
mov
xchg
(bad)
ds
pop
inc
pop
imul
out
xchg
stos
scas
mov
popf
pusha
push
mov
jne
jg
cmp
jge
in
cmp
push
scas
std
in
add
or
rcr
jg
lea
jbe
or
and
push
cmp
jge
xchg
nop
adc
inc
push
cmc
and
cmp
call
cdq
mov
(bad)
bound
mov
push
mov
sub
mov
and
pop
and
sbb
dec
loope
mov
outs
addr16
sub
inc
test
into
sbb
sar
pop
mov
sub
mov
xchg
retf
push
or
pop
jmp
xor
test
repnz
sub
pop
push
cwde
fstp
add
fstp
mov
sub
add
shl
dec
lods
cmps
xchg
and
inc
pop
mov
pop
dec
je
cmps
(bad)
fimul
jns
out
add
les
test
xchg
movs
xlat
fisttp
jecxz
retf
sar
cmc
lahf
aam
and
shr
xchg
xor
adc
inc
cmp
(bad)
fstp
mov
in
inc
mov
adc
jl
xchg
(bad)
push
retf
aas
sub
xor
data16
iret
pop
adc
je
hlt
push
lea
jno
in
or
clc
xor
imul
cdq
repz
lods
(bad)
in
mov
cdq
push
or
ret
test
mov
fs
aam
add
xchg
test
out
sbb
add
inc
ins
dec
outs
loopne
and
into
ins
test
dec
mov
mov
push
push
in
in
mov
sub
mov
cmps
fisttp
mov
sbb
inc
dec
ret
pop
imul
push
ins
xchg
or
test
std
cmps
or
adc
mov
int3
mov
and
jle
icebp
enter
push
hlt
loope
lds
push
retf
in
addr16
dec
sar
sub
inc
xor
adc
push
sbb
mov
add
cdq
mov
in
fidiv
and
or
add
jne
test
fiadd
cli
(bad)
int3
xor
add
in
cmp
jecxz
push
jg
retf
xchg
mov
adc
hlt
nop
xor
mov
out
rcl
out
outs
lock
popa
pop
sahf
lahf
pusha
jge
mov
push
scas
xchg
sub
imul
mov
ficom
dec
movs
pushf
jmp
test
cmp
jmp
dec
cli
sbb
sub
repz
and
and
jmp
js
data16
test
jg
into
cmp
push
inc
mov
mov
(bad)
clc
dec
ror
loope
imul
aam
or
int3
mov
(bad)
lock
mov
dec
retf
adc
iret
and
lahf
arpl
stc
jl
je
jnp
(bad)
(bad)
mov
mov
mov
aam
xchg
inc
jns
popa
neg
out
jmp
movs
push
sub
or
add
(bad)
mov
jecxz
mov
and
push
jmp
out
pop
inc
pop
lock
push
lods
jge
sub
jl
inc
xchg
sub
and
mov
cdq
imul
and
cmps
out
xlat
sbb
mov
push
adc
pop
fbstp
int3
int3
jo
in
mov
outs
adc
mov
test
cs
imul
cli
scas
adc
scas
dec
test
jmp
iret
(bad)
clc
sahf
mov
scas
xlat
sbb
xchg
rol
scas
aas
inc
cli
inc
fcom
or
mov
jge
mov
dec
mov
xor
pop
sub
(bad)
fisub
test
mov
inc
outs
xor
dec
jbe
push
cmps
mov
gs
push
push
(bad)
or
cwde
shr
sbb
in
pop
inc
dec
cdq
popf
dec
mov
ret
ins
add
mov
push
inc
fnstcw
inc
or
arpl
adc
push
ins
ds
mov
xchg
dec
or
pop
xor
xchg
lock
ds
pop
arpl
inc
aad
in
xor
and
inc
or
sub
jns
rcr
inc
push
add
cmps
rcl
enter
sbb
or
xor
movs
fistp
out
shr
xor
(bad)
xor
add
sub
(bad)
xchg
and
sub
stc
inc
inc
pop
xchg
test
pop
add
loop
into
call
enter
fistp
loope
aad
fcmovnu
out
cli
pop
imul
test
(bad)
jb
mov
imul
aaa
cmp
jp
repnz
sbb
jo
sub
mov
cmp
dec
mov
retf
jl
div
cmp
add
clc
and
outs
mov
pop
jbe
nop
jecxz
cwde
cmps
jmp
mov
xchg
fiadd
sub
sub
sti
fst
scas
div
jno
fmul
popf
cwde
push
add
push
shl
call
aas
jb
cmps
movs
pop
rcl
lock
fisub
adc
leave
mov
add
(bad)
ins
out
mov
fld
inc
sub
(bad)
retf
add
xchg
cmp
cmps
and
(bad)
outs
pop
out
loope
iret
dec
pop
imul
aad
(bad)
pop
pop
pop
cmp
push
lahf
mov
or
ins
mov
in
inc
shl
fistp
jo
rcr
or
jmp
add
or
xchg
mov
nop
adc
mov
sbb
std
fdiv
cmp
inc
dec
mov
push
push
pushf
jmp
push
cmp
xchg
and
repz
mov
loopne
or
mov
inc
add
sar
call
fnstcw
pop
stos
pop
inc
add
mov
dec
pop
sub
dec
sbb
xchg
and
push
repnz
ins
sub
movs
(bad)
sub
push
inc
xchg
fmul
add
ja
lahf
in
or
dec
and
mov
cld
lods
inc
ss
xor
stos
dec
aad
jg
push
mov
mov
loope
push
cmp
add
and
mov
call
es
movs
mov
jo
sbb
and
jp
inc
sbb
std
fwait
sbb
int3
pop
mov
or
loope
sar
jae
int3
jg
pop
ret
test
jp
mov
outs
cmp
xchg
aaa
mov
xchg
shl
clc
jno
push
inc
cs
pop
jp
xor
xor
cwde
inc
xchg
scas
pop
stc
xchg
jmp
sub
call
or
outs
sbb
jae
shl
xchg
jmp
mov
mov
bswap
add
(bad)
cmp
xchg
xchg
imul
mov
and
daa
jno
or
mov
and
fidiv
ds
mov
mov
lds
test
inc
mov
jbe
sar
inc
test
fwait
inc
mov
dec
pop
cmp
repnz
pushf
pusha
imul
cmp
pop
lods
or
pop
add
and
icebp
popa
push
pop
ret
fbstp
movs
cmp
inc
imul
mov
mov
dec
push
mov
hlt
in
adc
fimul
sbb
lods
push
fisub
fs
mov
mov
arpl
aad
push
inc
jge
mov
xor
push
icebp
shl
dec
sbb
or
nop
lds
fidiv
fistp
scas
pop
add
std
retf
fisubr
in
jno
mov
fadd
xor
sbb
or
dec
in
enter
pop
xlat
mov
jge
pop
lods
repz
mov
pop
leave
pop
adc
xchg
out
push
cmp
gs
leave
(bad)
popf
repz
jne
int
cmp
xchg
mov
mov
leave
pop
lods
ret
inc
jmp
sub
popa
mov
xchg
dec
and
ins
adc
mov
dec
icebp
fabs
fidivr
cwde
loop
popf
(bad)
repnz
pop
mov
adc
sub
mov
pop
push
in
imul
inc
jnp
das
mov
mov
ins
scas
movs
push
ja
cmp
jo
out
sbb
xchg
leave
inc
into
stos
xlat
jmp
adc
nop
mov
add
adc
mov
stos
push
fs
sub
or
pop
pop
test
jmp
sti
test
shl
mov
push
push
xchg
jl
add
dec
sub
mov
sahf
retf
push
or
lock
pushf
cld
stos
sahf
pop
jp
cdq
sub
leave
adc
cmp
adc
gs
dec
daa
sub
fwait
shl
lods
pop
out
lock
rol
mov
js
mov
jb
fistp
shl
push
retf
aas
xchg
mov
arpl
mov
out
and
ins
push
push
mov
or
in
inc
lods
dec
or
sbb
xor
or
rol
cmps
aam
sub
aaa
and
jo
push
fucom
jle
dec
push
inc
jg
ds
ret
and
pop
inc
sbb
(bad)
cmp
pop
push
or
sub
out
repz
fs
or
movs
(bad)
out
lods
push
mov
pop
jg
js
mov
fstp
mov
shl
sahf
retf
lods
xchg
push
xor
jbe
adc
mov
sbb
cmp
jno
pop
loopne
popa
cmp
data16
push
ins
lea
cli
pop
pop
inc
push
aam
cmp
xchg
xor
mov
inc
inc
jecxz
adc
sbb
pop
jb
push
jno
and
inc
addr16
int3
loopne
test
(bad)
cmp
fistp
xor
movs
test
jae
cmp
pushf
add
imul
sbb
mov
mov
pop
fiadd
pop
mov
cmp
out
mov
or
add
scas
test
ret
mov
arpl
pop
push
adc
push
daa
push
jecxz
in
xchg
mov
retf
fwait
hlt
std
out
push
ss
mov
push
popa
scas
xchg
imul
inc
mov
(bad)
dec
xchg
dec
mov
test
(bad)
adc
fcomi
inc
rol
enter
iret
cld
xchg
das
ds
cs
dec
xchg
push
xor
movs
inc
jl
mov
repz
or
xchg
pop
ret
inc
gs
loope
aam
test
div
fidivr
(bad)
jmp
cld
dec
aam
sub
mov
ss
xchg
inc
stos
movs
xchg
jno
mov
or
rol
jo
call
or
mov
sbb
(bad)
dec
jl
mov
das
inc
mov
and
sub
inc
out
mov
mul
or
arpl
fnstcw
sbb
inc
dec
push
mov
out
xchg
mov
scas
daa
jl
cmp
add
xor
rcl
stos
pop
ds
mov
adc
in
hlt
fwait
pop
jo
dec
call
xor
mov
popa
jne
sti
xor
mov
cmc
pcmpgtb
popf
js
xor
les
dec
(bad)
dec
lods
mov
nop
pop
push
in
pop
sub
mov
and
lods
pop
cmp
or
js
dec
outs
pushf
(bad)
fstp
jmp
dec
mov
and
lods
dec
enter
pushf
and
stos
scas
jmp
addr16
and
mov
mov
jle
in
mov
mov
popa
cmp
jmp
repnz
in
ficomp
(bad)
frndint
sub
pop
dec
pop
mov
out
int3
(bad)
or
ret
imul
fmul
cmp
mov
(bad)
into
mov
cli
inc
in
into
(bad)
sahf
mov
(bad)
test
adc
fmul
popf
jl
and
sbb
add
leave
jle
cwde
xchg
adc
sbb
or
ja
xchg
cmps
or
scas
cmp
imul
cmps
push
sbb
in
dec
test
mov
scas
ret
mov
jno
add
(bad)
push
mov
jmp
out
arpl
jae
mov
test
clc
gs
sub
mov
fnstcw
adc
jae
mov
push
mov
int
dec
fwait
cmp
jle
clc
daa
jl
sub
int
xor
push
adc
test
dec
aas
lock
or
pop
xchg
add
jae
push
xchg
xchg
jg
inc
mov
push
or
call
pop
mov
push
(bad)
test
into
and
call
lods
cmp
ret
jmp
mov
cmp
dec
lods
aas
dec
das
clc
dec
and
push
test
fild
push
sahf
ss
sub
push
sub
test
in
stos
arpl
movs
mov
jns
push
aam
push
not
sbb
jbe
xacquire
cmps
cs
jg
popa
daa
cmc
adc
iret
arpl
mov
or
jp
dec
ins
jmp
(bad)
test
sbb
mov
ss
lods
jne
adc
dec
addr16
pop
mov
xchg
mov
mov
mov
std
dec
inc
fisttp
aaa
and
jb
xchg
push
and
or
mov
inc
adc
nop
movs
push
fstp
or
xor
cdq
stos
jns
push
inc
push
add
rol
mov
repnz
xchg
jns
js
shr
or
xchg
mov
mov
sub
movs
ret
lea
mov
xchg
cmp
je
push
jp
sti
or
in
test
dec
retf
fisttp
(bad)
push
mov
dec
ins
mov
adc
cli
(bad)
pop
push
sbb
mov
fnstenv
xor
cmp
sbb
adc
jge
pop
sub
movs
xchg
pop
mov
inc
sbb
lahf
sti
ror
les
in
adc
adc
dec
jmp
sbb
or
jmp
std
pop
lea
lods
mov
mov
scas
dec
bound
ds
push
mov
jne
sub
(bad)
xchg
outs
(bad)
(bad)
addr16
xor
clc
xchg
or
cdq
and
or
lahf
dec
mov
data16
inc
fdivr
sub
jnp
add
add
jns
popf
rcl
push
idiv
dec
xchg
pop
xor
outs
ins
jg
push
xchg
push
loop
outs
cmc
sbb
push
fwait
push
dec
jnp
test
push
js
dec
mov
mov
add
xor
xor
or
aaa
push
out
push
xchg
adc
adc
imul
push
mov
pop
scas
add
out
mov
sahf
ret
push
cmp
xor
retf
sub
mov
inc
out
and
(bad)
adc
add
int
cld
mov
aam
mov
pusha
push
popa
push
dec
dec
mov
cli
repz
loop
div
mov
xchg
xchg
lea
sub
pop
xchg
jne
in
pop
sbb
or
sub
mov
xchg
loopne
(bad)
lods
dec
repz
jmp
inc
ret
or
push
jno
retf
(bad)
iret
loopne
inc
js
mov
and
sub
outs
jg
jg
adc
push
mov
or
cwde
xchg
out
mov
sub
adc
(bad)
test
sub
cmp
dec
mov
bound
pop
xchg
push
jmp
jne
add
xor
jmp
mov
mov
mov
shl
pushf
leave
int
pop
xor
mov
mov
jb
and
and
xchg
nop
jne
mov
in
mov
test
stc
pop
mov
xor
data16
or
mov
enter
adc
pop
repz
pop
arpl
leave
jo
fcomp
shl
sub
loope
out
rcl
cmps
out
jg
mov
push
cmp
loopne
stc
ds
add
mov
mov
inc
mov
retf
fcomp
jmp
mov
(bad)
mov
imul
idiv
jmp
xor
mov
mov
jns
(bad)
cmp
das
imul
add
sub
out
dec
push
loope
pop
sub
add
pusha
xchg
jne
(bad)
ins
jecxz
daa
adc
scas
call
xlat
test
sub
lods
aas
cmp
mov
loopne
in
test
xchg
and
ror
add
sbb
push
test
mov
and
stos
push
and
fidivr
inc
pop
cmp
jmp
daa
out
retf
stos
mov
jbe
jl
loop
jecxz
xchg
sub
mov
push
fisub
sbb
neg
xor
xchg
xchg
daa
fcomip
push
in
out
jmp
rcl
jne
add
pop
push
repz
jns
jbe
daa
adc
lea
jno
cs
sar
push
arpl
std
push
and
bound
xchg
adc
or
outs
icebp
aaa
jae
into
or
cmp
mov
imul
and
sbb
mov
lahf
xor
xor
inc
inc
xor
mov
mov
out
jno
je
add
xchg
jnp
js
cmp
add
ror
imul
add
fidivr
xchg
loopne
xchg
ja
sub
push
xor
(bad)
mov
imul
clc
mov
fcmovnb
bound
ja
movs
sbb
mov
(bad)
clc
mov
ret
inc
push
add
mov
rcl
jno
ficomp
jns
add
jmp
mov
inc
(bad)
mov
xor
push
push
retf
jmp
adc
jne
addr16
push
call
xchg
repnz
push
mov
xor
pop
mov
inc
fwait
inc
inc
dec
sbb
xchg
aad
(bad)
dec
jmp
repnz
xchg
and
lods
xchg
test
or
fisttp
or
(bad)
aam
aam
aad
inc
inc
jge
push
not
xchg
ss
cmp
push
jp
cmp
inc
mov
outs
mov
hlt
cmp
mov
enter
jne
mov
fwait
aam
add
rcr
mov
lods
adc
jb
(bad)
jmp
popa
push
inc
sbb
rol
in
mov
push
leave
jmp
or
sbb
pop
jle
push
cmc
sub
or
call
int
pop
out
out
mov
rol
or
add
test
ds
sbb
push
adc
cli
cdq
add
mov
cmp
xchg
mov
scas
adc
jae
jmp
jb
pop
movs
mov
retf
mov
es
dec
jns
aas
xchg
xchg
sbb
mov
jmp
inc
sbb
outs
mov
call
mov
pop
mov
mov
dec
ret
aam
sbb
xor
mov
push
push
and
cmps
pop
xchg
pop
xlat
xchg
inc
mov
or
inc
jecxz
mov
mov
fs
mov
mov
jmp
add
add
inc
popa
pop
or
inc
pop
jmp
in
mov
scas
loopne
mov
test
sbb
inc
retf
fdivrp
adc
push
cli
mov
add
ins
add
push
or
mov
int3
cmp
inc
(bad)
std
dec
ss
xlat
add
fs
xchg
out
sub
push
cmp
js
mov
test
and
cwde
pop
dec
inc
ds
test
fdiv
or
or
stos
fidiv
and
das
test
(bad)
out
dec
mov
mov
mov
in
jae
pop
mov
ret
shl
sbb
pop
cld
loop
es
xor
push
and
adc
and
vmwrite
pop
mov
fild
pop
inc
or
dec
jge
repnz
xchg
mov
iret
iret
inc
adc
mov
das
fwait
pop
in
mov
sar
leave
sbb
ret
fldenv
(bad)
js
fld
es
xchg
test
icebp
xlat
scas
stos
pop
mov
mov
mov
sbb
pop
lahf
mov
mov
arpl
xchg
(bad)
jo
mov
pop
dec
add
mov
xchg
lea
aam
(bad)
retf
or
pushf
or
js
fistp
bound
fs
out
jge
popf
test
or
fwait
dec
xchg
adc
movs
je
pop
jns
xor
movs
pushf
mov
jns
mov
ja
pusha
adc
add
and
mov
loope
and
dec
or
xchg
mov
xchg
xchg
push
jle
adc
dec
(bad)
jmp
jp
(bad)
out
loope
add
mov
push
out
imul
xlat
mov
nop
inc
mov
sti
mov
xchg
lock
inc
and
sbb
sub
sub
add
sbb
push
adc
dec
sub
push
leave
jge
xchg
xchg
inc
nop
lods
sbb
sbb
test
in
and
and
test
movs
adc
mov
cmp
push
ds
push
xlat
pop
jb
mov
aaa
rep
scas
xor
(bad)
mov
mov
xor
cmp
jmp
ret
jmp
inc
mov
jge
xchg
push
adc
in
popf
sub
test
xchg
mov
aam
xchg
iret
jnp
sbb
xchg
xchg
add
(bad)
(bad)
sub
push
enter
aam
pusha
xchg
aaa
clc
mov
fistp
sbb
not
lods
adc
inc
mov
popa
sbb
fs
dec
mov
mov
jb
cld
xor
repnz
mov
push
(bad)
dec
ret
repnz
mov
pop
mov
mov
fbstp
jl
push
in
cmp
cli
cwde
(bad)
or
pop
inc
and
xchg
jne
cmp
jno
cli
push
or
jo
and
cli
lock
or
xchg
jmp
and
xchg
dec
xchg
add
enter
icebp
or
mov
cmp
add
loop
xchg
xor
in
(bad)
mov
dec
xchg
xchg
in
or
push
xor
push
pop
xchg
ror
mov
mov
inc
and
mov
jns
mov
retf
(bad)
into
add
adc
pop
or
pop
dec
or
ret
add
test
xor
jnp
test
lahf
fnclex
inc
sbb
bound
not
xchg
inc
pop
mov
ja
les
pop
mov
js
pop
cmp
and
inc
call
cmp
push
fdiv
lahf
data16
sti
leave
mov
in
movs
sub
xchg
(bad)
mov
xchg
add
je
or
cmc
in
dec
aaa
mov
push
jbe
jne
(bad)
sti
test
mov
fidiv
das
addr16
(bad)
fcom
idiv
(bad)
xchg
fldcw
dec
mov
js
mov
repz
cmps
xchg
sbb
pop
jmp
jae
pop
call
sbb
sbb
rep
mov
fidivr
or
jg
sbb
pop
int3
push
pop
int3
je
outs
in
sbb
sub
mov
int
mov
loop
add
loopne
push
adc
(bad)
addr16
fsub
xor
push
jmp
jb
pusha
and
test
icebp
jg
fdivp
push
sbb
out
xchg
push
adc
sub
adc
cmps
adc
or
retf
shl
shl
sub
dec
std
shl
(bad)
test
mov
mov
test
(bad)
rcr
cmp
sub
loopne
movs
ret
iret
adc
mov
adc
cmc
push
mov
sbb
sti
add
jbe
retf
sbb
mov
stos
int3
clc
setbe
add
ret
les
mov
or
out
in
(bad)
cld
stos
mov
inc
or
sub
pop
(bad)
adc
retf
mov
icebp
cdq
cmp
shr
mov
cli
in
enter
adc
ficom
or
xchg
cwde
pushf
inc
or
and
cmc
in
push
fwait
add
cmp
fwait
inc
aam
jno
push
sahf
es
mov
and
pop
rol
pop
sub
bound
sbb
(bad)
in
into
or
push
push
sub
pop
retf
addr16
or
adc
gs
sub
pcmpgtd
add
adc
(bad)
inc
loope
fwait
mov
in
cmp
xor
add
sbb
aam
push
(bad)
(bad)
sbb
cs
jb
cmps
mov
rcl
lahf
shr
mov
clc
dec
pop
mov
dec
and
(bad)
pop
lods
push
mov
add
sub
or
fisttp
sub
(bad)
pop
mov
sbb
or
imul
fwait
mov
(bad)
xor
mov
push
dec
mov
lea
dec
call
adc
rol
sbb
or
cli
fstp
mov
in
sti
mov
dec
jecxz
inc
test
cmp
daa
sub
ficom
aam
dec
sub
mov
xor
call
js
sub
pop
inc
(bad)
loop
or
cmps
or
ja
add
ds
(bad)
push
sub
jbe
(bad)
adc
int
xchg
int3
and
nop
fwait
lahf
or
test
dec
cmps
fcmovu
(bad)
mov
sbb
mov
fistp
jb
cmp
into
dec
sbb
mov
repz
outs
or
jge
mov
or
pop
push
repz
outs
ret
clc
rcr
mov
inc
icebp
jl
xchg
scas
lods
pop
pop
add
xor
push
sbb
shr
or
out
dec
jb
push
fcomip
add
jae
mov
or
jmp
aas
lea
fwait
mov
dec
dec
stc
cs
or
xchg
stos
jnp
adc
popa
add
adc
xchg
jp
fldcw
mov
les
aaa
inc
imul
mov
mov
xor
lea
push
jbe
gs
loopne
shl
ret
cmp
ficom
loop
aad
mov
pushf
mov
ror
jmp
xor
in
cmp
pop
in
inc
push
mov
div
adc
push
push
push
pop
and
pop
add
fistp
mov
call
cmp
gs
adc
cmp
xor
pop
dec
mov
sub
imul
stc
inc
sub
mov
cmp
lea
add
cld
jl
xchg
in
adc
mov
emms
jecxz
loop
mov
jmpw
add
inc
iret
ror
inc
push
adc
mov
sbb
into
fiadd
sub
aad
sub
scas
cli
sub
mov
mov
outs
shl
pop
xor
mov
jle
push
shl
fild
push
test
xlat
retf
xor
push
out
adc
mov
jno
xchg
fs
out
addr16
or
mov
fwait
xor
adc
fldenv
ins
fmul
sub
aaa
into
repnz
dec
push
lds
pop
inc
imul
sahf
out
mov
mov
and
cmp
cmp
jo
arpl
mov
mov
iret
out
xchg
sbb
cmc
mov
outs
inc
cmp
out
fmul
(bad)
xor
and
addr16
mov
or
add
mov
or
mov
inc
cmp
arpl
push
aaa
jnp
fs
mov
jns
pop
ja
xor
das
or
xor
mov
mov
in
imul
sbb
mov
xchg
lock
xlat
push
ror
call
and
xor
and
fcom
fcom
ja
imul
std
or
xchg
nop
cwde
data16
add
sahf
rcr
loop
adc
add
or
mov
adc
push
xor
add
retf
push
pop
inc
sar
lods
fild
test
xor
push
pop
sub
xchg
push
cmp
out
xlat
inc
jl
or
ret
ss
sbb
sbb
shl
mov
pop
mov
cmp
mov
mov
cmp
jmp
cmp
pop
pop
repnz
imul
mov
sub
inc
js
sub
dec
and
repz
jno
fstp
xor
aas
loop
jae
call
sub
rol
stc
pop
hlt
in
sti
pop
lahf
fsubr
add
aam
pop
sbb
repz
lods
lods
hlt
out
jg
test
jl
and
pop
adc
jl
leave
dec
ss
dec
jae
jne
cmps
xor
mov
push
popa
aam
lods
xor
add
ret
inc
jl
pushf
fwait
out
jmp
ret
push
out
aad
dec
je
add
js
cmp
(bad)
add
sbb
sbb
xlat
jg
jl
fistp
inc
cmps
xchg
adc
dec
add
pusha
jmp
cmps
push
jle
jg
bound
ret
dec
inc
cmps
loop
mov
mov
cmp
sbb
stos
jae
repnz
mov
xor
push
test
dec
bound
mov
(bad)
arpl
aaa
shr
xchg
sub
bnd
shl
push
in
sbb
mov
push
in
cmp
jl
sub
retf
fdiv
fisub
dec
add
jp
popa
adc
in
test
sahf
mov
imul
in
sahf
mov
add
out
jns
pop
dec
mov
push
bound
lds
sbb
and
jmp
and
inc
xchg
out
movs
pop
daa
cmps
into
inc
mov
rcl
cld
xchg
dec
cli
jns
pop
rcr
push
ds
icebp
dec
enter
data16
pop
imul
fwait
push
(bad)
stc
xchg
sub
and
scas
and
jbe
lahf
test
or
jl
sbb
cmp
retf
xchg
sbb
cmp
mov
jbe
jp
nop
(bad)
mov
arpl
add
jp
mov
sub
lahf
test
pop
call
dec
test
scas
(bad)
jns
cld
jecxz
out
inc
neg
fdiv
ins
and
jb
icebp
scas
je
mov
mov
fxch
(bad)
pop
xor
mov
(bad)
popa
xchg
out
stos
pop
or
xchg
hlt
adc
mov
mov
cmp
lods
icebp
js
inc
mov
and
cmp
inc
mov
push
jl
and
cs
jbe
adc
aad
je
jle
inc
adc
mov
dec
outs
and
ret
inc
cvtdq2ps
popf
fwait
lock
(bad)
cmps
out
fcmovnbe
cmp
cmp
mov
cmp
movs
cli
jmp
cmc
dec
sti
mov
test
aaa
arpl
das
fst
sub
ret
movs
inc
jp
or
int3
xor
push
rep
add
inc
add
and
or
out
adc
xchg
push
sbb
jp
icebp
or
in
push
sub
sbb
jl
repnz
push
test
js
jecxz
jp
and
cmp
lods
push
test
push
repnz
int
pop
js
cdq
stos
mov
inc
clc
div
out
or
sub
enter
pop
xor
loop
and
sub
and
cwde
xchg
and
or
in
dec
loope
jbe
in
dec
add
int3
stos
xchg
movs
sbb
cmps
jle
leave
sub
xor
mov
stos
ret
adc
mov
scas
push
rol
cli
leave
mov
cmp
out
xlat
lods
sbb
inc
shr
adc
aam
mov
mov
sub
aad
jns
sub
enter
add
cmp
pop
(bad)
popf
and
xor
call
das
(bad)
rol
in
mov
test
mov
jne
inc
cmp
cmp
xor
fdivr
jg
xchg
jne
inc
push
push
sti
rcr
movs
mov
shr
call
lahf
and
mov
cli
test
daa
(bad)
stc
ret
mov
int3
cmp
inc
test
imul
push
lds
in
xchg
cmp
xchg
or
test
sub
nop
adc
mov
pop
imul
stos
xchg
push
sub
aas
cmp
enter
mov
lock
inc
cmp
imul
icebp
mov
inc
and
and
pop
xor
xor
in
test
(bad)
lds
mov
inc
pop
ja
loope
jo
push
int
shl
mov
cmps
fiadd
sbb
pop
mov
(bad)
push
outs
pop
xor
jmp
push
hlt
sbb
popa
or
lea
adc
mov
icebp
cmps
fdiv
iret
xchg
sti
jo
xor
jge
push
push
cmp
push
das
or
rcr
addr16
dec
repnz
in
mov
scas
shr
movs
out
arpl
in
mov
cmp
or
mov
jnp
lock
cdq
sbb
sbb
mov
xchg
out
and
add
mov
and
and
mov
inc
out
mov
scas
mov
dec
add
lods
cmp
es
xchg
cld
sbb
add
or
inc
jnp
test
cli
inc
daa
or
inc
fs
rcl
in
xchg
sub
test
inc
repnz
in
push
jmp
jae
xlat
bound
sbb
mov
je
mov
lea
ja
rcl
and
out
mov
or
pop
pop
jmp
jp
sbb
push
mov
add
test
sbb
sahf
or
popf
push
into
xor
or
mov
cli
inc
dec
nop
ret
mov
xor
xchg
mov
stos
jl
xor
je
ja
pop
jnp
or
(bad)
pop
push
mov
xor
retf
cdq
les
test
sub
call
lods
xor
and
and
mov
sbb
in
sbb
cmp
outs
loope
fdiv
jbe
and
cmp
mov
xor
sub
jmp
pop
jge
call
cmc
cmc
test
aas
jmp
jo
sbb
mov
daa
retf
push
test
mov
jns
pop
test
ja
data16
xlat
mov
jp
or
fstp
loopne
push
or
rcl
(bad)
jl
mov
cmp
mov
push
add
fisubr
cmps
out
sbb
sti
in
jge
xor
cmp
mov
daa
ret
mov
retf
cs
int3
clc
add
dec
adc
sub
sbb
lds
sub
mov
fnstenv
icebp
add
jg
iret
xor
dec
scas
inc
cmps
(bad)
fisttp
gs
or
jns
movs
cmp
push
xchg
jo
fisttp
in
out
lods
add
mov
hlt
and
dec
cmp
rcr
jl
sbb
out
push
retf
mov
imul
dec
fld
mov
mov
bnd
cld
mov
dec
retf
push
(bad)
shl
rcr
scas
fisub
sbb
clc
cmp
inc
imul
shl
and
pop
cmovnp
(bad)
jle
iret
into
cmp
fnstcw
nop
xor
mov
ins
test
mul
mov
mov
pop
xor
xchg
xchg
movs
adc
mov
jnp
lods
push
inc
mov
aas
inc
retf
pop
loop
(bad)
shl
fwait
jns
ins
xchg
test
add
push
icebp
aaa
shr
pop
mov
add
add
or
test
or
inc
mov
scas
sub
lods
push
out
mov
fsub
pop
mov
sar
lahf
jns
lods
or
mov
repnz
adc
fadd
jo
repnz
pop
mov
addr16
sti
lods
loopne
push
push
jo
mov
rol
xor
push
xor
pop
dec
bound
sahf
ret
dec
mov
adc
cmc
inc
jecxz
push
push
les
imul
dec
shr
inc
add
mov
add
int3
mov
shr
cmp
jl
jg
mov
or
mov
add
adc
popf
xor
sub
(bad)
mov
and
sbb
arpl
adc
ins
(bad)
std
mov
jne
neg
bound
lds
stc
in
jmp
mov
inc
cmp
enter
mov
mov
and
in
inc
ja
into
pop
call
int3
mov
pop
and
jb
(bad)
jge
sbb
loopne
mov
sub
fwait
and
and
in
adc
cli
mov
pop
clc
movs
fimul
movs
out
sbb
hlt
add
cmp
sub
cmp
dec
enter
xchg
jns
rol
pop
mov
dec
cmc
ret
add
aad
repz
xor
xchg
das
cmps
xor
and
xchg
bound
push
in
mov
mov
je
or
ss
xor
pop
mov
imul
cld
jne
call
enter
loop
hlt
jb
out
enter
jmp
push
xchg
test
mov
jne
into
test
cs
ss
imul
das
call
mov
cmp
or
xchg
rcr
pushf
aam
adc
(bad)
scas
jecxz
mov
retf
pop
test
aam
mov
dec
cmc
and
mov
add
mov
sbb
mov
mov
cld
xor
cdq
fs
je
mov
mov
mov
popa
out
jecxz
and
into
pop
jle
rol
hlt
std
test
jp
retf
(bad)
mov
nop
retf
jb
cmp
shl
mov
pop
sar
aam
mov
mov
retf
and
mov
push
icebp
fist
adc
xor
jle
pusha
pop
clc
inc
daa
inc
lds
mov
jle
sub
sub
mov
xchg
movs
sub
push
xor
mov
out
jge
ret
add
jbe
xor
mov
jo
imul
mov
int
sbb
mov
int
xor
mov
cmp
(bad)
push
mov
call
scas
or
inc
clc
pop
bound
(bad)
push
sub
jg
nop
aas
pop
call
test
dec
sub
mov
loopne
dec
icebp
mov
xchg
adc
push
inc
addr16
jbe
in
lods
(bad)
mov
test
int
sbb
sub
out
outs
outs
adc
in
pop
popa
xchg
cmps
ins
xchg
push
std
sar
fisttp
jne
aam
and
aas
xchg
or
xchg
dec
mov
sbb
inc
ret
jl
jecxz
(bad)
and
test
jg
cdq
mov
arpl
(bad)
cmp
mov
pop
(bad)
mov
mov
scas
add
fdivr
mov
div
in
pusha
fstp
retf
retf
mov
jg
not
(bad)
aas
mov
sbb
inc
das
mov
push
push
scas
(bad)
nop
pushf
(bad)
jmp
test
jb
and
add
ret
cmp
inc
or
sub
jb
jl
mov
adc
inc
imul
fidivr
jnp
mov
shr
cmp
aaa
lock
push
out
test
mov
lds
sub
shl
or
lock
xor
int3
jns
outs
test
adc
popa
movs
push
in
mov
(bad)
ins
ficomp
dec
fwait
ins
jns
ins
add
(bad)
mov
jge
pop
inc
daa
rep
mov
xor
aad
call
repnz
pop
add
or
sub
jl
inc
aas
sbb
push
fdivrp
in
dec
in
shl
stos
adc
test
pop
adc
ds
and
adc
and
int
sahf
pusha
stos
inc
jle
shl
scas
pop
mov
lock
cli
sub
cmp
cmc
jle
outs
sub
and
xor
cmc
out
out
(bad)
mov
dec
out
pushf
les
aad
outs
(bad)
outs
push
pop
pop
cmp
movs
(bad)
cld
sbb
mov
sti
jns
popa
push
sbb
scas
and
pop
arpl
push
call
pop
shl
xor
sbb
(bad)
push
or
inc
gs
or
jo
xchg
inc
sbb
mov
out
sub
inc
retf
add
sub
jns
rcl
scas
add
nop
pop
mov
mov
mov
fadd
jne
call
int3
stc
adc
add
inc
xchg
sub
or
jg
loop
dec
cmp
fs
cmp
ds
shl
fwait
shr
jg
fidiv
mov
or
xor
xor
int
test
test
push
sub
les
cmps
xchg
cwde
mov
jbe
(bad)
out
or
js
xchg
inc
imul
or
je
dec
adc
adc
sbb
(bad)
out
sub
imul
inc
adc
push
sub
jae
shl
cmp
lock
or
adc
sub
and
add
mov
mov
xchg
fldenv
xchg
repz
ins
mov
sub
dec
cmp
pop
push
cmps
xchg
fwait
or
ror
cwde
jbe
je
xchg
sar
jle
repnz
gs
and
popa
xchg
mov
mov
(bad)
into
inc
test
pop
stos
push
sub
cmps
cdq
sbb
mov
scas
pop
push
ss
ins
and
ins
and
jmp
push
or
popf
(bad)
mov
push
pop
call
jo
mov
xor
test
div
frstpm(287
inc
and
mov
xor
daa
test
icebp
cmp
and
sbb
(bad)
push
mov
adc
jge
hlt
(bad)
mov
stos
call
cwde
or
mov
push
cmp
add
sub
mov
(bad)
cld
pop
rcl
int
jne
xchg
les
iret
push
mov
mov
movs
fcom
jmp
jnp
js
mov
(bad)
mov
sbb
sub
test
jmp
ror
or
pop
mul
lods
jg
or
fbld
popf
xchg
ficomp
fsub
xchg
cmp
fmul
mov
out
fs
pop
pop
imul
in
add
neg
ins
push
mov
or
jmp
xchg
mov
add
sbb
pop
pmuludq
daa
cdq
mov
into
push
xlat
popf
les
mov
adc
ret
push
push
icebp
mov
fidiv
cmp
xor
adc
mov
jns
dec
gs
cmp
lds
int
sub
popa
inc
inc
int
jbe
mov
mov
pop
stos
mov
mov
aam
stc
xor
out
shl
push
push
mov
sar
pop
inc
rol
pop
ja
push
add
mov
jno
and
jp
mov
je
cdq
jae
mov
mov
fld
out
sbb
mov
jge
and
pop
jmp
lods
mov
lds
push
das
xchg
(bad)
stc
cmp
sub
xchg
adc
mov
fs
jbe
add
ret
imul
div
test
gs
jg
jnp
rol
sti
push
(bad)
jp
mov
mov
loope
cmp
sbb
int3
mov
pop
adc
push
jmp
in
jle
cmp
xchg
mov
arpl
adc
mov
popf
or
ins
inc
add
test
ins
xchg
mov
fadd
dec
dec
out
stos
jmp
sub
xchg
mov
ds
xor
jl
add
arpl
(bad)
cmp
jbe
adc
sbb
mov
fld
or
xor
pushf
repz
add
das
ins
and
mov
pop
rcr
and
enter
xchg
sbb
test
(bad)
lds
fmul
lahf
fsub
enter
cmps
add
push
inc
shl
inc
fld
test
push
mov
pop
sbb
jmp
mov
cwde
xchg
dec
mov
pop
inc
and
(bad)
mov
or
retw
xor
arpl
ror
inc
outs
(bad)
cmp
xchg
jmp
ins
retf
cmc
mov
push
mov
mov
and
cld
daa
xchg
jne
add
push
mov
sahf
les
add
rcl
mov
mov
sbb
mov
sub
mov
and
and
inc
(bad)
shl
sub
sbb
lods
loope
jmp
adc
int3
retf
jno
mov
and
or
inc
adc
repnz
mov
mov
sahf
in
add
sub
sbb
sbb
outs
sbb
loopne
(bad)
cmp
mov
sub
mov
scas
shl
in
adc
pop
outs
dec
clc
sti
xor
sub
jp
and
mov
sbb
mov
push
ret
add
push
repnz
ror
movs
push
cmp
mov
lea
les
mov
(bad)
enter
jns
jle
add
retf
xor
mov
icebp
repz
int3
mov
test
cdq
mov
mov
xor
and
sbb
out
and
repz
or
sub
sub
push
je
sub
das
sbb
retf
or
movs
and
mov
aam
sahf
stos
call
sbb
test
test
xchg
and
and
mov
mov
push
das
or
ret
imul
fist
push
fist
inc
sar
sbb
in
cmps
movs
inc
cmp
mov
pop
(bad)
jae
sar
(bad)
jo
test
test
lahf
mov
aad
cli
mov
dec
mov
mov
ret
cmp
push
xchg
scas
iret
mov
adc
out
addr16
sub
fld
stos
xchg
cmp
jecxz
jns
ret
out
push
mov
push
leave
dec
in
mov
dec
es
pop
mov
adc
pusha
jle
lahf
repz
xchg
sub
movs
adc
pop
repz
adc
imul
push
pop
mov
push
sti
jb
(bad)
fucomp
mov
add
jmp
cmps
fdivr
inc
stos
mov
cmp
push
and
pop
call
clc
xchg
test
sbb
or
mov
rcr
jle
(bad)
mov
dec
sar
inc
push
cs
mov
jge
mov
dec
nop
es
rol
pop
xchg
lea
push
push
jno
mov
mov
int
das
xchg
or
div
xchg
mov
ss
test
push
sbb
adc
movs
mov
xchg
fisttp
sbb
cwde
sub
cmc
call
ja
sbb
mov
int3
int3
gs
pop
sub
mov
je
add
and
cmp
arpl
mov
pop
rol
xchg
mov
jno
mov
dec
(bad)
movs
and
push
push
js
jnp
push
add
inc
adc
and
jge
cmps
dec
rcr
lahf
mov
dec
cdq
popf
shl
dec
and
sbb
loopne
cmp
ret
xor
adc
mov
adc
data16
les
inc
fcomp
jmp
fdivr
jne
mov
ret
push
mov
inc
mov
or
pusha
dec
out
pop
sbb
add
mov
lds
and
sub
leave
mov
push
pop
xor
inc
sbb
out
cmp
dec
shl
jl
mov
ja
out
cli
and
pop
loop
lock
xchg
fstp
pusha
add
xor
jp
(bad)
ins
mov
add
xor
nop
call
dec
addr16
ss
and
pop
dec
sti
(bad)
or
xchg
adc
mov
adc
dec
mov
or
mul
leave
sbb
mov
(bad)
in
ret
push
add
ds
call
adc
sbb
push
adc
repz
mov
je
and
lahf
(bad)
repnz
push
mov
push
push
mov
xchg
mov
xchg
rcr
or
add
jnp
sbb
sbb
pop
fs
pop
jo
mov
mov
mov
icebp
fidivr
push
ja
iret
pop
pop
pop
fist
dec
sub
leave
call
and
mov
add
pop
push
push
sub
mov
cmp
sub
out
fimul
push
inc
add
xor
push
push
jo
fucomp
and
push
aas
dec
mov
pop
aam
mov
test
fistp
and
push
lahf
shl
sar
xchg
dec
push
fcmovb
cwde
xchg
sub
(bad)
mov
in
outs
ds
(bad)
push
shr
icebp
std
adc
ret
js
mov
adc
leave
stc
retf
outs
inc
(bad)
add
cmp
retf
dec
ds
lods
push
adc
xchg
addr16
bound
push
out
repnz
push
movs
cld
shl
pop
inc
bound
mov
mov
add
ss
pop
cmp
dec
sub
aad
clc
iret
and
ja
xchg
cmovge
push
es
jge
mov
pop
sub
(bad)
dec
jmp
mov
ror
ins
lahf
iret
(bad)
cld
jge
add
xor
or
iret
sub
pop
ja
popf
xor
das
add
xor
ins
(bad)
je
retf
icebp
ins
xor
pop
fs
mov
cmp
cmp
pushfw
rcl
out
adc
adc
fidivr
mov
sbb
icebp
adc
mov
push
out
xchg
sub
push
sbb
inc
pop
jp
fist
mov
iret
add
clc
jo
pop
cmp
push
pop
icebp
cld
out
cmps
inc
dec
xchg
aad
mov
je
bound
cmp
nop
sub
leave
dec
add
sub
and
je
cmp
aam
xchg
pop
push
xor
mov
sbb
(bad)
push
or
fsubr
xor
out
cli
sbb
js
jo
inc
push
pop
repz
iret
sbb
mov
out
sub
push
adc
and
(bad)
imul
fadd
xor
jb
int
or
pop
or
stos
retf
scas
retf
xor
sub
push
stos
cmp
adc
inc
mov
jmp
cmps
in
mov
mov
fbld
cmc
cmps
shl
jnp
gs
dec
(bad)
mov
xor
lods
(bad)
in
mov
ins
add
stos
push
scas
sti
aam
mov
test
push
add
loopne
ins
pop
(bad)
mov
mov
xchg
mov
xchg
xor
xchg
adc
fdiv
xchg
loop
sbb
push
mov
inc
or
lea
cli
cmc
dec
pop
jecxz
jl
cmc
cwde
repz
out
out
bound
in
cmc
data16
jb
fistp
scas
mul
add
repz
lds
aaa
ror
dec
(bad)
mov
movs
fimul
jae
push
mov
movs
psllw
sbb
ret
mov
ja
inc
mov
jns
jge
jns
push
dec
mov
jbe
jg
mov
and
mov
(bad)
or
add
retf
mov
loopne
pop
shl
inc
sar
push
jmp
dec
pushf
js
jl
jae
mov
push
cmps
push
jmp
jecxz
inc
aad
ds
sub
mov
mov
nop
add
xor
popf
call
adc
aad
test
mov
jne
mov
jg
mov
fidiv
adc
or
inc
cmps
mov
clc
aad
dec
movs
es
lock
pop
mov
or
mov
push
mov
xchg
xor
sbb
cmps
mov
loope
mov
int3
lods
mov
jbe
aad
adc
sbb
test
jecxz
pop
inc
jge
lea
add
jo
fwait
mov
mov
push
mov
(bad)
fxch
mov
ja
outs
mov
dec
shl
pop
jnp
ss
(bad)
or
add
sub
mov
xchg
addr16
or
pop
pop
mov
mov
sub
lahf
mov
ret
xor
dec
push
fs
dec
add
add
inc
and
lods
mov
push
xchg
je
stos
or
xchg
pop
fild
jge
pushf
in
mov
mov
mov
xor
cmps
jecxz
push
aad
xchg
push
retf
sti
mov
mov
jmp
fwait
or
outs
popf
jle
cs
add
dec
test
sub
movs
push
xchg
cs
pop
jns
adc
ret
je
jmp
xchg
fidiv
cld
rol
daa
mov
jo
pop
pop
xchg
push
cmp
mov
inc
dec
cmc
or
cmp
jnp
mov
jmp
jmp
outs
lds
(bad)
pop
cmp
dec
inc
lock
xchg
mov
scas
sbb
mov
xor
rol
ds
scas
cmc
je
adc
jg
push
cmp
cmp
test
pop
mov
jbe
clc
cmp
or
push
cs
outs
add
sahf
nop
mov
dec
xlat
test
pop
js
sbb
xchg
jg
es
(bad)
repz
sbb
dec
fistp
xchg
mov
pop
mov
scas
sbb
and
sub
pop
push
stc
ret
adc
or
(bad)
dec
push
jno
dec
(bad)
shl
cli
int
cmp
jle
rcr
mov
xor
enter
dec
(bad)
pop
mov
sub
sub
jbe
inc
iret
cmps
push
fdivr
jle
aaa
inc
popf
push
mov
and
sti
mov
jo
xor
lods
fisubr
and
and
(bad)
xchg
lods
in
popf
(bad)
push
(bad)
jl
jae
adc
inc
jle
jmp
mov
stc
add
push
ror
ret
out
mov
mov
ins
push
lahf
push
pop
popa
int3
mov
and
sbb
xchg
test
rcl
arpl
jnp
cs
enter
int3
imul
xchg
fld
test
ins
add
in
aaa
int
daa
xor
hlt
fisub
imul
mov
sub
ret
ss
and
lea
fs
inc
data16
fucompp
jmp
pop
lea
xchg
inc
push
cmp
inc
adc
out
xor
mov
jbe
cli
nop
lock
dec
cmp
cli
push
pop
pop
stc
xchg
sbb
cmp
int
pop
out
movs
mov
dec
pop
adc
(bad)
shl
(bad)
mov
imul
fst
imul
int
pop
ret
sub
test
inc
sub
loope
dec
mov
mov
cmc
add
aad
aad
sbb
or
add
mov
hlt
ds
shr
out
out
mov
hlt
jl
ret
sub
inc
jns
arpl
in
pop
push
jg
loope
jle
inc
and
dec
dec
mov
mov
dec
dec
sar
ret
jmp
add
cmp
lods
mov
mov
or
(bad)
sub
sub
arpl
xchg
loop
pop
sub
mov
hlt
sbb
lahf
enter
sahf
adc
mov
push
loop
aaa
mov
out
jle
sahf
or
mov
push
pop
mov
or
and
cs
cmc
push
mov
pop
jo
pop
add
imul
xchg
cli
popf
or
nop
in
in
xor
jbe
inc
push
xchg
xor
or
movs
mov
shrd
push
xchg
add
or
and
ja
adc
inc
ret
mov
mov
mov
out
push
xor
adc
jle
sub
sbb
cmp
out
lods
cld
xor
mov
fimul
pusha
mov
and
sub
push
pop
xchg
and
jp
sub
ret
xchg
nop
cmc
sub
dec
call
mov
repz
push
mov
jp
int
call
cld
xchg
jl
dec
stos
lahf
rcr
inc
xchg
aam
cwde
test
mov
mov
pushf
aad
fs
ins
jne
arpl
xchg
adc
in
push
xchg
xchg
push
mov
cmp
mov
sub
or
mov
cwde
mov
jp
inc
push
xor
dec
mov
pop
sti
fadd
sub
push
cmp
aaa
jns
push
or
add
lods
mov
cs
iret
js
push
or
pushf
push
in
data16
sbb
in
inc
mov
enter
les
pop
xchg
mov
nop
sbb
loope
xchg
stos
cmc
jno
and
jbe
(bad)
push
and
fucomip
inc
sbb
or
add
mov
add
jae
pop
and
inc
loop
ins
bnd
mov
hlt
scas
and
xlat
sub
push
test
movs
pushf
pop
mov
out
pop
jmp
into
pusha
scas
add
push
int3
xor
xor
(bad)
repz
loopne
mov
sbb
mov
pop
repnz
nop
imul
mov
push
(bad)
shl
cli
dec
xlat
into
cmp
mov
je
jle
jae
mov
xchg
sub
dec
(bad)
out
or
and
pop
inc
sub
cmp
hlt
(bad)
sbb
and
or
es
leave
jg
cmp
out
sub
daa
jmp
push
push
cmp
not
fadd
jmp
imul
jle
dec
jbe
and
inc
mov
jp
inc
xchg
mov
cdq
pop
mov
dec
in
ja
add
push
outs
loopne
mov
aaa
int
ins
push
mov
sub
retf
cmc
add
fadd
retf
and
cmp
dec
aas
jl
cdq
dec
xchg
jle
retf
cwde
in
pop
popf
inc
and
and
cmps
aas
retf
addr16
out
or
ins
and
call
push
mov
std
dec
sbb
inc
jp
adc
inc
lea
int
or
fst
cmp
adc
repnz
add
(bad)
xor
push
add
sub
sbb
int3
dec
mov
movs
stc
push
xor
xor
pop
and
ins
push
mov
push
int
mov
leave
adc
jno
jp
mov
mov
retf
aaa
ror
mov
pop
call
push
xchg
ja
or
jb
les
cld
fcmove
fnsave
xor
aas
jmp
rcr
jbe
call
cld
jb
sub
push
and
pmuludq
sbb
push
int
dec
cmp
sub
sbb
jno
outs
test
sub
fsubr
cmp
jbe
push
cdq
sbb
pop
lods
fistp
mov
dec
jecxz
push
inc
call
(bad)
iret
push
rcr
dec
out
ror
std
out
mov
sar
inc
sbb
ins
or
add
push
scas
icebp
lock
adc
pop
into
xchg
mov
mov
aam
popa
loope
push
push
cli
les
and
xchg
cmc
popa
lfs
jns
and
and
sub
popf
xor
inc
dec
push
mov
push
pusha
(bad)
pop
test
mov
cmp
pop
dec
repnz
xchg
add
xchg
sbb
xor
xor
xchg
add
movs
scas
in
in
xchg
shl
jle
sbb
xor
call
and
mov
jbe
jp
sub
pop
mov
mov
int
shl
push
popf
dec
in
(bad)
out
inc
outs
or
xchg
imul
push
or
pop
repz
add
(bad)
in
xchg
dec
cli
mov
xor
(bad)
cmp
popf
sbb
sti
jne
lea
xchg
(bad)
jo
icebp
and
in
popf
ja
push
jnp
lds
xchg
scas
inc
xor
pop
outs
movs
int3
lea
cmp
pop
mov
dec
aam
mov
xchg
fs
jno
arpl
jne
(bad)
mov
jge
out
das
inc
adc
pusha
ret
xor
lahf
adc
and
in
imul
jb
mov
in
out
push
fs
ins
cli
cmp
xchg
push
sbb
pop
in
icebp
xchg
jne
daa
xchg
ins
mov
loopne
jmp
(bad)
stc
xchg
jle
aaa
xor
push
ss
or
loopne
scas
dec
inc
repz
cwde
stc
adc
cmp
adc
add
ret
scas
jnp
pushf
sbb
out
and
dec
adc
push
popf
inc
xchg
push
dec
mov
xchg
or
test
dec
xchg
mov
(bad)
lods
cmp
or
pusha
out
and
cli
mov
imul
(bad)
es
cmc
ins
outs
sub
mov
out
or
xor
test
jecxz
push
sbb
lds
mov
mov
or
mov
mov
or
mov
or
daa
cdq
test
je
loope
cmp
cwde
cmp
popf
stos
jb
(bad)
jmp
out
xor
mov
sti
sub
stos
push
jg
mov
pop
popa
sbb
inc
sbb
in
sub
(bad)
in
arpl
rol
xchg
js
shr
cwde
mov
xor
jo
mov
jnp
cmp
xchg
(bad)
ins
jecxz
cmps
mov
aam
sub
sbb
xchg
cmp
lods
xchg
cmp
adc
into
push
push
ja
outs
mov
sar
mov
or
jl
cmps
aam
lock
wrmsr
ror
inc
shr
mov
in
mov
jg
ds
ret
(bad)
in
(bad)
frstor
loope
xor
mov
out
mov
imul
call
or
push
aas
(bad)
daa
mov
xchg
loop
lds
inc
dec
adc
xor
inc
or
int
adc
(bad)
dec
mov
test
cmp
test
xchg
jmp
bound
les
into
xchg
dec
scas
mov
xchg
push
inc
jmp
int3
dec
mov
aaa
sbb
inc
dec
retf
call
stos
lods
jb
enter
mov
lahf
mov
int
xor
cmc
pop
mov
iret
es
popf
jge
sub
push
xor
jmp
fstp
ds
cs
pop
(bad)
ret
neg
add
movs
mov
push
xchg
and
xchg
hlt
out
sbb
into
sti
pushf
mov
jbe
adc
push
and
inc
imul
(bad)
popf
adc
cli
xor
aad
push
mov
push
ins
pop
add
neg
fst
je
call
es
dec
ja
jge
popa
jge
jbe
cmp
mov
ror
ds
xchg
jb
pop
push
idiv
xlat
xor
push
pop
push
xchg
push
or
mov
inc
clc
ficomp
sti
scas
mov
je
repz
xchg
push
rol
mov
adc
sbb
movs
sub
jbe
jecxz
retf
xor
out
jo
inc
icebp
fldenv
loop
shl
mov
push
ss
std
mul
loopne
ret
mov
fcom
shr
ror
mov
cmp
adc
jno
sar
cdq
sbb
mov
add
retf
je
lahf
inc
cmc
ror
cld
(bad)
push
aam
jae
test
push
add
sub
cdq
pushw
xchg
xchg
mov
int
xchg
jl
pop
cmp
ret
adc
(bad)
push
cli
rcl
sub
add
push
adc
jb
push
xchg
xchg
phsubd
pop
aaa
(bad)
jge
fsub
push
mov
mov
in
(bad)
push
mov
outs
sbb
jl
cmp
retf
mov
repz
loop
push
arpl
inc
icebp
xor
mov
ins
jmp
pop
pop
fwait
loope
jp
xor
(bad)
movs
and
pop
push
arpl
loop
loop
pop
mov
xlat
pop
mov
xchg
fcmove
xchg
idiv
push
pop
js
bound
pop
mov
push
repnz
aaa
cmp
cmps
pop
lock
jno
scas
call
stos
mov
lahf
dec
gs
jecxz
adc
cmp
sub
xor
push
inc
push
mov
mov
push
div
enter
out
and
push
stos
out
fcomp
mov
clc
pop
mov
fbstp
cwde
mov
bound
shr
(bad)
mov
mov
pop
sub
shl
(bad)
adc
lock
jl
(bad)
jno
mov
inc
sbb
jecxz
pop
xor
je
mov
retf
retf
adc
aam
push
inc
shr
cmp
scas
dec
(bad)
jno
ror
int3
push
push
sahf
pop
mov
dec
ins
pop
pop
test
or
add
xor
or
popa
ror
jmp
adc
pop
enter
mov
mov
xchg
xchg
das
pop
mov
js
push
push
in
pop
mov
idiv
cs
push
mov
jmp
in
add
popf
and
(bad)
sahf
sbb
jge
mul
cmp
fdiv
dec
cmp
and
push
hlt
and
cmp
enter
(bad)
rcl
loope
movs
idiv
dec
dec
jecxz
movs
mov
jg
in
adc
xchg
lahf
pop
fdivr
leave
cs
enter
sbb
mov
ret
sub
(bad)
cmp
pushf
outs
ins
in
inc
aad
cmp
push
xor
mov
addr16
dec
or
lods
data16
mov
add
jno
xor
push
test
sbb
hlt
sbb
dec
mov
inc
retf
inc
mov
pop
and
mov
or
icebp
aad
leave
push
(bad)
clc
xchg
sbb
sbb
int3
push
mov
das
jnp
adc
imul
ret
inc
jl
and
ss
push
inc
cli
lds
jmp
mov
sub
nop
cmp
mov
push
shl
or
pop
pop
mov
rcr
imul
jp
popf
(bad)
push
inc
cmc
sub
xor
jg
call
adc
outs
js
push
adc
mov
sbb
push
dec
jecxz
push
test
mov
cld
fild
fs
imul
inc
sub
and
mov
sub
lea
dec
in
out
imul
stos
in
adc
mov
popf
aaa
pop
fadd
or
ret
arpl
sbb
dec
(bad)
xor
jnp
jne
jg
imul
rcr
sub
rol
xchg
mov
dec
inc
xor
cmp
pop
mov
mov
popf
mov
or
jbe
xchg
mov
push
mov
push
lock
rol
sar
mov
addr16
call
fst
cs
jl
adc
or
rcr
cdq
xor
inc
cmc
mov
pop
fbstp
xchg
icebp
imul
aam
jne
pop
jl
rcr
mov
push
adc
inc
popa
xchg
sub
retf
stc
dec
dec
mov
pusha
push
dec
arpl
add
mov
int3
cmps
lods
fdiv
std
cdq
das
test
dec
das
sub
cs
mov
retf
aam
sub
leave
in
cmp
sti
xlat
out
je
dec
icebp
into
outs
sub
inc
sub
jne
sub
out
xor
imul
cli
add
adc
imul
push
test
xchg
cdq
pop
std
jne
aas
mov
jnp
and
test
mov
or
mov
xchg
scas
adc
lods
stos
fisub
xchg
mov
pop
sub
push
stos
(bad)
stos
cli
mov
mov
or
js
jne
stos
xchg
jp
cli
jmp
mov
fbstp
pop
(bad)
mov
mov
icebp
daa
cmp
ins
ds
add
ins
adc
sti
into
jle
jge
pop
imul
retf
jl
mov
or
or
ins
icebp
js
adc
fidiv
inc
cmp
cwde
les
imul
gs
fsubr
ss
mov
push
mov
xchg
mov
ins
fst
es
or
pop
int
adc
movs
icebp
les
dec
adc
jecxz
cmps
cmp
or
mov
jecxz
out
inc
push
push
jae
js
push
dec
out
gs
es
daa
mov
scas
xchg
shr
lods
and
dec
gs
jp
xchg
clc
inc
fisubr
into
mov
and
aaa
sbb
cmp
loopne
xor
jne
std
sbb
ret
lds
icebp
ss
cmps
ficom
jmp
mov
addr16
retf
loope
mov
mov
dec
or
(bad)
sbb
movs
adc
inc
shl
inc
cli
sbb
movs
in
test
movs
fimul
xchg
jnp
shl
sbb
or
push
outs
push
push
push
jb
daa
jg
add
sbb
or
cwde
sti
test
jnp
loopne
cmp
in
push
or
pop
iret
sbb
mov
test
jg
arpl
nop
mov
ror
sbb
cmps
jnp
mov
adc
mov
cmp
mov
sub
aaa
stos
test
jne
icebp
sbb
imul
push
daa
mov
pusha
(bad)
push
or
or
int3
xchg
pop
mov
mov
xchg
cwde
push
adc
cmp
aam
lds
cmp
dec
scas
lods
(bad)
add
stos
cs
push
push
mov
mov
and
pop
test
cdq
fwait
push
pop
lahf
repz
cld
sbb
stc
sahf
(bad)
(bad)
jmp
xor
cmp
cmp
jbe
sbb
(bad)
cmp
sbb
stos
push
clc
ins
mov
inc
in
add
pop
neg
sbb
pop
lods
mov
je
lock
(bad)
clc
mov
mov
movs
movs
mov
jns
aas
fsub
cmp
data16
lock
cmp
mov
test
cld
sub
jg
out
inc
dec
adc
xor
mov
iret
jns
(bad)
mov
xchg
mov
jmp
sbb
gs
add
xchg
retf
fiadd
inc
xchg
jns
test
mov
cmp
daa
adc
je
stos
sub
call
popf
inc
ja
inc
std
sbb
jp
jnp
(bad)
pop
je
push
daa
dec
loope
addr16
aas
sbb
out
sub
mov
jge
adc
jb
inc
out
test
stos
call
and
jp
adc
mov
imul
inc
adc
out
imul
hlt
push
push
pusha
sub
pop
fs
mov
xlat
sub
lds
fcomp
cmp
push
or
push
pop
and
sti
push
nop
das
lds
inc
outs
dec
or
lock
mov
pop
and
mov
xor
pop
cmp
push
add
and
je
sub
inc
dec
sub
leave
into
daa
or
in
push
mov
cmp
or
es
xchg
lock
adc
ja
sub
rol
sub
sub
inc
push
fiadd
push
jae
out
movs
out
ja
shl
clc
and
jle
sub
or
sbb
and
outs
aas
xor
ja
dec
pop
fwait
and
cmp
xor
cdq
mov
ror
enter
fsubr
and
scas
lea
inc
(bad)
pop
inc
cmps
rcl
inc
stos
sbb
fld
xchg
xlat
scas
push
or
fs
inc
(bad)
aam
in
mov
(bad)
add
movs
bound
sub
mov
ret
jne
xchg
xlat
es
push
repnz
dec
xchg
xchg
jno
sub
mov
cld
aaa
stc
and
imul
out
aaa
and
dec
repnz
in
stos
loope
jb
or
cmps
cmps
loope
rcl
inc
push
jge
xchg
fmul
pop
mov
jge
aas
mul
fistp
mov
push
mov
sub
xor
pop
dec
test
js
sub
ds
addr16
sbb
jb
call
call
cs
gs
or
lods
addr16
lods
dec
push
jno
shl
jecxz
sbb
add
pop
pop
mov
cli
xchg
js
pusha
sbb
(bad)
inc
imul
push
push
jbe
div
push
aas
call
and
mov
ret
jno
ds
mov
cs
arpl
mov
fs
mov
retf
mov
rol
mov
popf
pop
mov
ret
push
cdq
mov
test
lods
sub
push
pop
inc
fisub
jo
icebp
mov
imul
in
movs
repz
ins
pop
add
outs
and
mov
mov
(bad)
push
int3
movs
push
popa
sbb
enter
in
and
addr16
not
xor
(bad)
fdivr
shr
mov
xor
popa
mov
popa
pop
imul
pop
jg
mov
or
rcr
ret
jg
lock
xor
inc
ret
mov
pusha
xchg
push
cwde
push
gs
imul
dec
popf
dec
mov
or
jb
jp
mov
push
add
mov
xchg
clc
jae
retf
xchg
xchg
jl
push
scas
cli
sub
mov
mov
lock
test
mov
retf
dec
mov
inc
retf
sub
pop
inc
stc
add
dec
pop
xchg
add
outs
loop
mov
aaa
lds
call
xchg
je
pop
ins
shl
push
inc
int
fcom
mov
xchg
cmp
mov
pusha
jl
test
les
adc
cmp
push
cld
retf
xor
push
cmp
pop
cmc
lods
ss
(bad)
sbb
pop
es
mov
cmps
int3
maxps
icebp
and
gs
mov
pop
not
add
pushf
scas
sbb
hlt
scas
push
dec
or
(bad)
jo
daa
mov
loopne
or
sbb
fild
js
fwait
xlat
add
jne
add
push
clc
fwait
mov
add
idiv
repz
in
add
cld
jecxz
sbb
rcr
cmp
(bad)
xchg
inc
(bad)
dec
push
xor
sub
ret
sbb
mov
add
imul
addr16
cmp
js
adc
ret
sbb
icebp
inc
cmps
sub
ds
fadd
cmp
adc
jo
pop
ret
pop
mov
scas
dec
pop
xchg
sub
push
lods
or
out
popf
mov
push
xchg
pop
or
mov
dec
ins
add
cmc
mov
adc
jg
lock
movs
test
fimul
icebp
call
xchg
mov
in
ret
push
push
or
pop
mov
xchg
jo
xchg
popf
jmp
mov
outs
xchg
je
stos
pop
push
add
dec
(bad)
jp
add
jle
xchg
xchg
outs
adc
adc
add
cmps
push
setb
rcr
jb
dec
hlt
in
mov
mov
rcr
cmp
sbb
cmps
(bad)
dec
clc
inc
test
les
or
(bad)
pushw
push
add
jecxz
adc
pop
or
(bad)
cmp
push
xor
pop
ss
imul
gs
(bad)
fistp
adc
lods
mov
je
adc
jb
mov
cmc
sar
pop
pop
test
rcl
cmp
bound
dec
fwait
push
dec
jge
jnp
push
lods
cmps
fnstcw
mov
cmps
inc
cld
inc
xchg
sysret
fcomi
or
nop
adc
pushf
mov
in
pusha
outs
dec
inc
je
mov
jnp
mov
adc
lock
arpl
aad
mov
sbb
(bad)
pop
xchg
xor
sbb
inc
xchg
jle
or
mov
add
lods
mov
mov
cs
rcr
sbb
aad
aaa
push
push
das
lds
jp
sbb
test
xlat
xlat
xor
or
push
cwde
push
push
mov
(bad)
scas
mov
into
std
push
xor
adc
mov
jmp
jnp
retf
mov
jne
xor
adc
nop
pop
(bad)
sahf
les
sub
mov
(bad)
jns
mov
les
push
imul
(bad)
int3
mov
mov
sub
addr16
jo
push
mov
lock
add
jno
mov
es
lods
push
movs
inc
and
mov
(bad)
mov
mov
cmc
not
shl
dec
mov
pop
xlat
outs
jecxz
jp
xor
adc
cmp
ja
dec
pop
stc
fild
retf
add
mov
inc
jne
dec
repz
je
sub
add
xchg
das
xor
loop
gs
push
int3
stc
mov
pop
aad
add
jno
fistp
out
xor
mov
xchg
dec
stos
add
loop
idiv
clc
mov
stos
je
mov
test
jle
aam
test
nop
sbb
mov
sub
push
jno
cld
fidivr
mov
push
ins
in
dec
in
stos
sub
fisttp
xor
and
xlat
loopne
mov
jg
std
adc
pop
je
add
jl
ficomp
add
pop
pop
loop
addr16
pop
jmp
leave
sub
in
loopne
call
sbb
mov
and
outs
nop
jmp
arpl
hlt
int3
jbe
add
push
xor
mov
cdq
pavgb
lock
jne
dec
(bad)
cmp
mov
inc
lods
cmps
jmp
ret
mov
xor
pushf
cdq
fwait
sbb
and
mov
adc
dec
arpl
stos
rcl
mov
mov
(bad)
mov
sbb
mov
adc
fdiv
lahf
xlat
shr
pop
jae
push
dec
outs
lock
xchg
pop
das
test
push
lods
push
ret
sbb
nop
cmp
aaa
inc
pop
jb
(bad)
ret
sbb
imul
mov
and
dec
adc
jmp
adc
or
or
ins
cli
add
addr16
pop
push
jge
push
js
mov
mov
out
add
retf
adc
jl
data16
ss
mov
ins
in
sti
fs
retf
mov
inc
ins
jb
inc
neg
xor
dec
mov
adc
sub
mov
or
icebp
(bad)
fsub
sbb
fucomp
ins
(bad)
out
jbe
in
add
and
mov
addr16
inc
sbb
shl
pop
loop
lahf
mov
out
bswap
bound
enter
add
call
jmp
sbb
push
ins
mov
fld
xchg
dec
dec
outs
inc
stos
in
test
mov
mov
lock
fmulp
adc
or
(bad)
mov
(bad)
div
dec
xchg
outs
pop
jnp
push
mov
mov
push
je
mov
popa
sub
push
int3
dec
stos
cmp
(bad)
jecxz
add
inc
jb
pop
push
xchg
popf
xor
pop
push
inc
cmp
movs
mov
iret
retf
loop
aad
stos
ret
adc
adc
sbb
lds
loope
mov
shl
xor
stos
push
(bad)
jno
lds
scas
push
test
lea
movs
mov
movs
rcr
cs
dec
adc
dec
push
and
jno
jle
into
sbb
(bad)
xor
sbb
js
sbb
and
(bad)
pop
retf
(bad)
mov
out
pop
(bad)
mov
xchg
sbb
cmp
cmps
and
and
push
lods
std
push
xchg
and
and
pop
in
out
popf
mov
std
push
sar
mov
test
sbb
(bad)
idiv
jb
mov
mov
jno
repz
das
or
cmps
fidivr
jae
dec
aas
call
xchg
cld
inc
jo
mov
push
retf
mov
push
inc
enter
sub
or
pop
pop
lods
adc
pop
mov
sbb
js
sub
xchg
pop
dec
mov
int3
imul
or
imul
lea
mov
adc
loopne
int
dec
push
aam
jno
adc
and
mov
xlat
jp
call
mov
inc
mov
adc
imul
test
push
cmp
adc
add
ja
movs
push
ret
call
ret
sbb
mov
sub
mov
xor
mov
add
sbb
add
ins
xor
scas
push
inc
push
mov
add
(bad)
jl
fs
mov
mov
xchg
pusha
push
mov
(bad)
jmp
int3
pop
mov
call
mov
(bad)
das
jmp
in
scas
test
sub
retf
sub
sbb
int3
xor
mov
movs
mov
leave
push
shl
and
pop
jne
jmp
mov
jle
cmp
les
popf
adc
in
int3
pminsw
dec
int
and
fisub
pop
mov
jo
mov
xchg
pop
mov
xchg
inc
push
adc
je
hlt
xor
aas
int
push
js
leave
fnstsw
retf
imul
mov
mov
mov
and
pop
and
(bad)
(bad)
mov
xchg
call
push
in
adc
imul
dec
mov
popf
leave
inc
(bad)
cmc
inc
scas
jne
mov
in
lahf
(bad)
out
sub
and
cmp
inc
cli
mov
add
xchg
jb
mov
jg
jmp
and
xchg
arpl
adc
gs
cmp
jno
xor
push
jb
cmc
adc
cmp
je
(bad)
and
dec
popa
jo
fnsave
xchg
enter
ins
ror
xchg
cmp
push
jnp
sahf
mov
jo
aaa
test
dec
push
imul
fidivr
outs
dec
bound
sbb
mov
xchg
jb
imul
(bad)
cld
xor
jne
push
ins
mov
imul
ret
mov
fistp
add
push
stos
pop
jbe
cwde
pop
mov
xor
aam
mov
pop
mov
and
cwde
pop
and
jp
xor
mov
adc
xlat
lods
adc
mov
xchg
sbb
jne
test
or
sbb
pop
in
cmp
jecxz
(bad)
ret
jb
inc
mov
jne
mov
sub
scas
mov
test
ds
in
movs
jno
into
outs
mov
out
sbb
scas
jge
sub
mov
enter
xchg
imul
sub
into
xor
xchg
adc
retf
xor
or
(bad)
sbb
ins
out
retf
jl
ret
adc
daa
icebp
(bad)
mov
add
push
repnz
lea
pop
sub
fnstenv
pop
repz
sahf
sub
and
jae
rcr
xchg
push
loopne
and
js
aas
mov
enter
inc
cmp
dec
fs
test
enter
push
ja
push
out
fucom
pushf
stc
out
lds
and
gs
lods
inc
mov
pop
pop
mov
in
sbb
outs
adc
lahf
xchg
(bad)
rcr
inc
imul
sbb
aaa
xchg
iret
cld
fwait
dec
add
cwde
fdivrp
jecxz
adc
cwde
scas
jmp
loop
cmc
mov
pop
inc
fidivr
cmp
clc
pop
std
ja
mov
ja
pop
in
adc
mov
mov
mov
in
push
xchg
and
lock
scas
jno
dec
in
xor
popa
ret
cld
loope
lea
mov
mov
in
push
xor
mov
ins
push
adc
aad
je
aaa
add
ror
push
mov
jb
in
mov
out
jmp
neg
inc
cmc
daa
test
adc
mov
and
dec
xchg
in
popa
xchg
les
add
lods
push
imul
fcomp
push
repz
and
xchg
cmps
sbb
jnp
add
mov
repz
hlt
test
iret
mov
inc
push
je
(bad)
and
push
scas
or
inc
loopne
xchg
dec
lds
jge
ret
retf
cmp
in
fild
xor
aas
mov
test
sub
and
xchg
addr16
push
jl
add
xor
rdtsc
mov
retf
pop
or
and
test
adc
and
cmps
cld
dec
pop
test
pushf
fnsetpm(287
adc
imul
xor
int3
adc
cli
sbb
test
mov
cmp
xchg
loop
and
shl
in
test
int
les
jae
in
lods
xchg
cld
pop
int
mov
cmp
movs
popa
nop
aam
pop
sbb
cmp
pop
xchg
int
mov
mov
mov
mov
add
scas
mov
or
inc
inc
sub
xchg
inc
jp
mov
stos
neg
and
mov
sbb
iret
scas
and
mov
sub
add
retf
ins
jmp
pop
xchg
fild
adc
sub
mov
in
xchg
add
pop
fdiv
and
jae
xchg
jbe
shl
retf
dec
das
leave
rcl
ror
jle
sub
lock
push
pop
ja
mov
idiv
mov
sbb
dec
in
mov
lds
dec
cli
(bad)
repz
inc
ins
mov
push
popa
sub
lds
out
cmp
xchg
popf
push
inc
add
jns
and
cmc
cdq
or
cdq
inc
scas
adc
pop
pop
test
sbb
cmp
mov
xchg
mov
ins
jmp
mov
call
stc
or
in
or
inc
std
jmp
dec
in
pusha
ins
int
cmp
loope
int3
push
cmp
aas
retf
add
data16
aaa
push
fwait
jecxz
outs
test
sub
mov
and
jnp
sub
mov
addr16
jno
rol
and
jb
xor
cmp
sub
daa
sub
(bad)
sbb
pop
retf
mov
cdq
dec
add
fwait
mov
xor
adc
loop
outs
addr16
outs
cmp
pop
outs
fst
mov
xchg
nop
adc
cmp
cmp
shufps
xlat
inc
add
and
mov
mov
in
push
jns
push
ds
mov
fcomp
push
call
ss
jp
sbb
out
sub
cmp
pusha
dec
fxch
push
ja
out
xchg
pushf
ret
cs
retf
adc
fsub
push
and
inc
jo
pop
retf
xchg
jmp
adc
dec
icebp
fcmove
sar
mov
cmp
inc
(bad)
in
sub
(bad)
mov
and
in
ret
and
push
or
sqrtps
es
mov
lahf
out
dec
push
xchg
cmps
mov
sbb
and
rcr
pop
jnp
pop
dec
(bad)
push
hlt
dec
pop
addr16
jle
stos
adc
shr
xchg
aad
pop
adc
mov
and
in
mov
mov
mov
mov
fucom
in
lods
outs
mov
ja
jle
mov
mov
push
sti
gs
cmp
fisttp
xor
pop
sti
(bad)
(bad)
xchg
or
push
lea
clc
dec
add
or
ret
fidiv
push
fcom
bound
push
mov
adc
pusha
xchg
push
add
jnp
ret
xchg
outs
jns
aas
lds
mov
test
pushf
xchg
ja
ds
movs
jmp
in
dec
dec
imul
xchg
mov
xchg
fiadd
push
cmp
imul
pop
mov
shl
(bad)
dec
stos
dec
in
loope
and
shl
jae
(bad)
cmp
pop
(bad)
fiadd
jle
fiadd
call
mov
jl
adc
call
or
test
test
sub
test
jne
sbb
adc
iret
mov
popa
mov
movs
xor
and
(bad)
addr16
xchg
xor
add
out
xchg
pop
scas
aaa
hlt
or
sbb
add
jmp
not
or
ss
push
ins
in
mov
push
test
add
add
into
jb
popa
movs
leave
push
inc
stc
loop
stos
sbb
(bad)
sub
enter
cdq
pushf
jmp
fild
jne
sub
imul
lea
push
rcr
iret
pop
fcom
in
nop
push
pop
jmp
(bad)
icebp
ds
xchg
cmp
add
inc
cwde
xchg
aaa
sub
jnp
cwde
dec
popa
xor
sub
xchg
les
xor
loop
sbb
sbb
add
xchg
xor
out
icebp
sbb
call
cmps
dec
ja
enter
push
(bad)
mov
jecxz
mov
add
mov
dec
stos
xor
xchg
pusha
inc
retf
cli
xchg
adc
mov
pop
mov
gs
push
xlat
lods
ret
pusha
xchg
jo
retf
mov
mov
adc
cmp
sahf
sub
cwde
mov
sub
mov
and
xor
scas
stc
xchg
sub
mov
lahf
cmp
xor
sar
lea
lods
mov
cld
mov
pop
pop
out
push
inc
outs
add
xchg
adc
dec
ins
inc
fdivr
ret
mov
outs
mov
lahf
jae
push
(bad)
xor
adc
or
ja
test
push
jbe
enter
pop
and
ss
cmp
mov
push
inc
pop
lods
mov
pop
dec
imul
andps
xchg
xchg
les
dec
lss
pop
out
mov
push
jno
add
loop
hlt
mov
lock
push
out
pop
jmp
dec
pop
mov
(bad)
cld
lock
or
jns
ret
xchg
sub
jl
ss
pop
mov
dec
in
push
scas
and
mov
repz
inc
xchg
sbb
jmp
pop
pushf
sbb
jmp
call
and
mov
dec
dec
cmps
(bad)
out
fadd
pop
ficom
pop
sub
nop
ds
stc
jb
das
sbb
cwde
out
shl
pop
(bad)
xchg
arpl
(bad)
lock
xchg
es
pop
push
cs
mov
dec
lock
js
mov
test
inc
push
repnz
cmp
cmp
addr16
cmp
in
or
inc
shr
aas
fsubr
into
in
imul
cmp
cwde
aam
push
push
ret
dec
and
sub
mov
lock
aas
cmp
lahf
inc
push
inc
or
cmp
(bad)
cmc
xor
cwde
fwait
sbb
push
shr
add
shl
scas
push
jmp
mov
mov
sbb
enter
push
pop
inc
add
cmp
sti
stos
cmp
mov
push
test
push
hlt
in
mov
out
(bad)
jo
int
dec
adc
std
or
mov
mov
out
lds
lea
jne
fisub
or
jg
mov
jecxz
icebp
pop
in
inc
(bad)
scas
sub
jo
stos
rcr
je
icebp
ret
xchg
mov
or
pop
cwde
mov
lods
cmp
jp
(bad)
pop
push
pusha
sub
push
movs
out
imul
jo
pop
mov
adc
movs
clc
jge
stc
xor
jg
pop
mov
jo
jbe
and
aas
hlt
xor
jae
inc
mov
jecxz
mov
scas
cdq
mov
pusha
shr
jne
lods
add
jae
jmp
test
neg
mov
nop
clc
jae
inc
cmps
sub
dec
and
cli
pop
inc
sub
les
pop
idiv
test
xchg
xor
push
mov
xchg
hlt
mov
daa
mov
ret
psubusb
mov
daa
jb
into
loop
mov
sahf
cmp
mov
loop
pand
or
cmps
mov
les
jle
sbb
ds
xor
add
stc
xlat
sub
push
ret
dec
stos
xchg
add
test
mov
pushf
jne
out
xchg
test
mov
mov
inc
and
stos
fsin
dec
out
add
jbe
xor
pusha
(bad)
dec
cmp
xchg
push
sbb
inc
stc
lahf
inc
rsm
xor
push
mov
(bad)
in
pop
daa
adc
lock
jae
popa
or
mov
out
mov
in
bound
xchg
xor
mov
jne
fcmovbe
pop
jbe
scas
add
mov
mov
xor
repnz
mov
enter
das
pop
xor
stc
cmp
outs
sub
or
aas
add
xchg
and
push
sahf
push
sahf
cmps
and
push
cmps
inc
movs
adc
test
cwde
jl
push
jno
stc
(bad)
jno
pop
jbe
addr16
std
inc
inc
out
pop
mov
push
mov
loope
adc
or
in
pushf
mov
dec
in
pop
inc
adc
or
push
add
cmps
rcl
out
jae
out
setns
repz
retf
sbb
mov
(bad)
shr
pop
ror
pushf
mov
mov
outs
dec
ret
xor
idiv
popf
or
into
inc
dec
les
jl
sub
dec
mov
nop
mov
icebp
fcomp
xlat
push
jns
neg
jb
jne
mov
sub
lods
mov
les
movs
xor
mov
jmp
lock
cmp
icebp
mov
(bad)
xchg
jo
ins
xchg
ret
adc
jmp
dec
pop
outs
retf
add
movs
in
es
mov
sbb
inc
(bad)
push
inc
mov
mov
xchg
sub
cmps
rol
mov
xchg
adc
dec
stc
in
lea
mov
jle
pop
dec
pand
lahf
rol
dec
push
jae
out
mov
push
stc
mov
mov
popf
mov
mov
out
(bad)
jg
sub
jge
cmp
sub
(bad)
popa
dec
es
pop
scas
pop
leave
mov
lea
mov
mov
bound
sub
in
mov
gs
or
cli
xchg
fwait
sub
lahf
xchg
mov
inc
bound
addr16
dec
adc
fwait
mov
(bad)
jne
sub
inc
pop
ret
sbb
test
pop
retf
jnp
inc
retf
sahf
stos
xchg
jmp
dec
jmp
scas
fstp
stos
inc
dec
clc
into
jbe
shr
jne
shl
and
loop
outs
mov
ds
cmp
pop
fwait
add
(bad)
jmp
jmp
fidivr
sub
into
jge
add
adc
(bad)
into
mov
or
test
push
(bad)
rol
add
lds
gs
call
loopne
sbb
movs
jo
ds
cmp
popf
push
fld
cmp
aaa
xchg
mov
test
in
sub
mov
jae
ss
(bad)
lahf
out
mov
fidiv
inc
mov
movs
inc
(bad)
call
arpl
aad
push
dec
sbb
push
lock
fisttp
imul
scas
adc
and
push
jo
and
cmp
mov
stc
cdq
dec
imul
gs
or
cmp
lahf
dec
push
adc
adc
push
pop
xchg
cmp
push
jnp
iret
out
pop
popa
scas
sbb
adc
sahf
mov
icebp
xchg
add
lods
retf
xchg
(bad)
inc
jmp
dec
fwait
cwde
push
push
jmp
(bad)
out
pop
mov
inc
(bad)
out
fild
mov
aaa
cmp
jmp
setl
inc
lods
jmp
ret
sub
cmps
(bad)
mov
mov
stos
dec
loope
add
dec
data16
call
(bad)
mov
(bad)
pop
pusha
pop
dec
jle
movs
fld
mov
out
fimul
fstp
out
lods
pop
out
inc
jmp
shl
mov
pop
mul
add
adc
xchg
loop
test
jne
enter
in
fwait
les
mov
xchg
mov
popf
mov
mov
fcmovne
xlat
arpl
cmp
stos
sbb
jmp
enter
out
add
mov
in
mov
std
cmp
int3
neg
add
stc
(bad)
or
push
fs
int3
shl
fs
dec
arpl
into
xchg
dec
ret
add
mov
jge
cmc
enter
das
add
and
cmps
icebp
sti
mov
pop
js
fnsave
sti
sbb
push
ret
dec
in
cmc
mov
ds
xchg
and
sbb
mov
mov
aaa
ds
inc
xchg
jg
test
xor
bound
mov
mov
mov
stc
daa
in
mov
and
sbb
stos
push
pop
out
mov
out
dec
cwde
push
push
test
imul
pop
sub
jecxz
fdivrp
std
jp
dec
cmps
jl
test
add
cdq
push
lds
test
stos
hlt
nop
push
push
sub
or
pusha
xor
stos
mov
fwait
test
aaa
mov
mov
fidivr
sahf
mov
push
std
icebp
mov
in
push
pop
fdiv
clc
mov
xchg
bnd
mov
out
icebp
inc
in
test
jg
addr16
or
repz
popa
mov
pop
inc
jnp
or
mov
jmp
xchg
sbb
push
cmp
mov
xlat
psrld
ins
fisubr
shl
fcomp
adc
cmp
mov
mov
stos
sub
call
imul
add
cmc
daa
stc
std
(bad)
out
mov
or
and
lock
test
das
pop
adc
jmp
imul
and
dec
ss
repz
cmp
je
sahf
ss
in
sub
sub
pushf
fsub
xor
jae
fldcw
inc
loope
or
or
test
sub
xchg
inc
retf
xchg
arpl
(bad)
pushf
adc
ret
js
idiv
leave
mov
pop
cmps
addr16
adc
in
inc
adc
adc
cmps
cs
call
adc
call
aaa
fnsave
xchg
int3
mov
(bad)
jns
push
add
ret
push
add
cmp
jmp
ins
fild
nop
call
jmp
aas
icebp
adc
and
je
sbb
outs
not
sahf
bound
leave
cmps
sub
cmp
mov
push
adc
les
inc
imul
shl
ds
dec
aaa
fwait
cmp
ret
adc
pop
adc
ss
xchg
gs
out
fldenv
inc
jge
fdivr
jnp
mov
popf
(bad)
mov
jg
(bad)
jl
stos
mov
or
and
(bad)
ja
add
mov
cmp
push
leave
and
or
aaa
sbb
mov
add
jae
push
fs
jmp
and
xor
rcr
adc
nop
fcomp
in
xlat
push
push
cmps
scas
push
jmp
sub
scas
lods
push
fisttp
test
cmp
repnz
ret
mov
xchg
test
test
addr16
xchg
into
fs
push
pop
hlt
push
xor
imul
(bad)
ror
xor
or
addr16
jmp
daa
mov
push
xchg
out
inc
fisubr
test
jmp
cli
scas
adc
dec
outs
sbb
jl
xchg
shl
pop
stos
or
sbb
push
in
sar
fidiv
jg
xor
inc
mov
lahf
sahf
xchg
xchg
cwde
pop
fwait
inc
(bad)
ins
hlt
mov
mov
sahf
jns
js
fadd
sbb
enter
fsubr
cs
xchg
push
call
mov
inc
cmp
sub
cs
and
loop
into
gs
lock
pop
pop
mov
jno
iret
pop
test
lds
out
loopne
add
rcr
dec
fmulp
cld
push
jg
stos
jle
mov
push
inc
jbe
cwde
or
repnz
inc
mov
mov
outs
sbb
cmp
mov
xchg
lods
test
push
push
push
sub
(bad)
sbb
lods
scas
jl
mov
std
jg
mov
xchg
ins
lds
jg
inc
repz
xchg
dec
push
dec
or
test
sbb
out
jl
and
push
and
sub
or
(bad)
mov
xchg
gs
daa
cld
and
retf
pop
inc
fstp
cmp
movs
rcl
cmp
mov
fisubr
cmps
cdq
jnp
mov
add
shl
sub
sub
fisub
sbb
mov
mov
imul
cmp
xor
movs
adc
fistp
mov
pushf
ins
ins
repz
leave
xchg
dec
or
fcmovbe
loope
xor
pop
ja
(bad)
add
rol
xor
push
pop
pusha
(bad)
dec
xor
inc
ins
adc
ins
aam
add
sub
inc
mov
xchg
xchg
add
call
ins
lds
push
mov
xor
jno
xlat
add
xor
lock
sbb
xor
sbb
cs
rol
dec
outs
lahf
in
pusha
jg
sar
ret
or
iret
nop
rcr
mov
imul
cs
push
add
stos
sub
dec
mov
das
call
ror
ds
pop
and
dec
add
dec
paddusw
inc
push
rol
mov
and
or
jmp
adc
enter
sub
frstor
lods
mov
dec
dec
cmp
dec
movs
and
daa
hlt
retf
jmp
jl
or
push
test
es
pop
(bad)
popa
pushf
lea
repnz
or
jns
aam
add
cmc
dec
mov
(bad)
out
sti
loope
and
push
retf
stc
out
jmp
and
cmp
cld
cmp
and
push
mov
push
push
xchg
dec
js
adc
pop
aad
shl
int3
into
jge
(bad)
or
cs
inc
push
arpl
and
push
and
mov
adc
retf
adc
and
mov
loopne
dec
mov
retf
aas
adc
push
lds
mov
jns
dec
adc
movs
mov
jmp
push
sub
jge
xor
mov
cmp
nop
aam
jmp
shr
and
inc
outs
push
cmp
push
dec
cmp
push
jo
sbb
adc
pop
and
xor
fsub
sub
mov
xchg
int
daa
sti
sbb
push
mov
jns
push
in
sbb
cli
xchg
in
jae
fs
push
and
dec
jmp
mov
mov
xchg
(bad)
mov
sbb
clc
fldenv
push
ret
mov
sbb
int
dec
es
imul
cmp
mov
xor
and
lods
test
xchg
repz
jl
sbb
retf
call
and
cmps
pop
adc
sahf
pop
out
ja
sbb
sar
jl
repnz
jg
(bad)
rol
inc
pop
push
in
addr16
retf
push
cmc
retf
adc
or
mov
or
xor
loopne
les
je
push
cld
mov
cmps
into
hlt
movs
and
outs
call
pop
sub
lock
mov
add
repz
jle
stc
sub
cmp
loop
inc
xor
and
inc
xchg
add
lea
mov
aad
(bad)
imul
pop
add
lods
sub
or
mov
mov
test
mov
lds
mov
push
cmp
scas
(bad)
bound
popf
test
and
and
arpl
sti
push
ins
call
push
hlt
jmp
or
mov
jle
pushf
mov
clc
push
mov
mov
jno
stos
(bad)
mov
jle
cmps
cmps
test
xchg
push
or
jl
sbb
out
xor
pusha
jo
jne
(bad)
fdivr
(bad)
cwde
jmp
jmp
into
jg
xchg
pop
xor
call
pop
lods
add
jns
imul
shl
fcom
ins
imul
inc
jmp
cmovnp
or
lahf
jp
add
jecxz
cwde
sahf
xor
pop
sar
fwait
push
push
pop
pop
movs
push
and
mov
and
pop
in
push
data16
cdq
enter
pop
jmp
outs
cmps
pop
jbe
movs
(bad)
out
inc
(bad)
adc
mov
ret
mov
ficom
or
retf
push
mov
push
movs
xor
enter
icebp
shl
repnz
jbe
mov
lds
add
mov
push
mov
mov
(bad)
int
fwait
call
cmps
push
xchg
out
sti
add
nop
outs
mov
inc
jecxz
int3
mov
retf
mov
add
scas
inc
adc
imul
jl
pop
push
push
shl
fwait
jns
(bad)
cmpxchg
and
cmc
pushf
xlat
aam
movs
mov
push
cmp
out
stos
pop
ss
adc
in
sbb
pop
xor
or
xlat
mov
mov
sub
mov
jmp
jno
inc
sbb
mov
pop
cmp
sti
mov
mov
iret
test
stos
ret
movs
ss
mov
out
mov
pop
xchg
pop
lahf
fild
dec
outs
popf
ss
and
mov
xor
fisub
icebp
xlat
adc
xor
adc
test
nop
fstp
int3
test
mov
mov
cmc
xor
out
or
and
fnstcw
mov
aam
pop
cmp
mov
test
or
inc
je
arpl
aaa
imul
in
xor
fisub
call
sub
ja
push
jnp
test
int3
xlat
scas
es
xchg
mov
add
cmp
adc
scas
and
pop
dec
cwde
rcl
jb
mov
fadd
data16
shl
and
fiadd
mov
adc
adc
push
aad
mov
aam
xor
cmp
push
repnz
sbb
or
retf
cmps
test
test
stos
push
test
fs
mov
inc
jbe
and
xlat
or
mov
and
push
inc
mov
and
adc
fmulp
push
shl
and
xchg
aam
aas
test
push
not
dec
xor
xchg
mov
and
out
out
cmps
fld
int
repnz
test
jg
cmps
pop
cmps
frstor
imul
imul
push
or
popf
mov
or
(bad)
mov
jnp
mov
adc
in
cmp
out
imul
ds
test
test
adc
sbb
aaa
xchg
retf
mov
dec
or
call
imul
mov
mov
mov
xchg
fld
(bad)
mov
jle
out
inc
cmp
fst
scas
adc
dec
daa
cwde
int3
cmp
fwait
iret
sub
cmps
fwait
xchg
xchg
inc
pop
stc
or
or
jmp
mov
sbb
setbe
add
in
add
xchg
jnp
jmp
(bad)
icebp
(bad)
mov
(bad)
shr
out
es
aaa
mov
inc
int
or
jae
int3
pop
dec
out
cs
and
sbb
inc
test
(bad)
into
out
jb
ret
mov
pop
mov
test
lahf
movs
or
xor
shl
(bad)
add
mov
mov
(bad)
pop
xor
mov
pop
mov
cmp
es
sub
sub
repz
and
imul
and
xor
dec
rol
aam
cmp
inc
fisubr
leave
mov
adc
xchg
and
jbe
sar
jmp
outs
es
mov
add
push
les
dec
jg
cwde
xchg
jle
sub
xchg
pop
sbb
loope
sub
retf
xor
jl
mov
xchg
cmp
mov
hlt
rcr
sbb
test
movs
xchg
jmp
movs
mov
or
test
lods
push
rcr
pop
scas
aam
push
stos
mov
cmp
push
cli
cmp
sbb
mov
xor
loop
inc
lds
adc
test
js
(bad)
jo
push
arpl
xchg
jl
enter
adc
cmp
lock
imul
mov
je
mov
orps
jnp
xchg
sub
scas
fsubr
call
ficomp
fistp
push
or
mov
cli
out
fcmovne
mov
xchg
std
jb
mov
fsub
xchg
mov
int3
adc
enter
jae
cli
rcr
mov
retf
cdq
test
adc
inc
cmps
and
aad
stc
gs
test
mov
adc
mov
mov
cs
movs
ret
cmp
or
nop
test
inc
xchg
in
test
push
xor
jecxz
std
dec
mov
scas
or
cdq
xchg
int3
jne
push
into
movs
and
test
ins
jo
pop
ds
push
mov
outs
cmps
int3
sub
loope
add
adc
xchg
pop
xor
sub
cdq
or
in
(bad)
pop
fcmovne
fist
retf
cmp
adc
rcl
dec
int3
ins
xor
sbb
sub
mov
push
cmp
add
jmp
xchg
mov
mov
inc
pop
push
push
dec
fwait
sbb
lock
cmp
dec
sbb
les
push
sub
adc
jmp
jecxz
movs
and
mov
or
and
push
mov
fst
mov
sti
shl
add
das
movs
dec
loope
push
in
es
xor
leave
jecxz
mov
cld
nop
nop
sub
(bad)
cwde
aad
ins
add
out
xchg
jecxz
sbb
pop
cmps
add
mov
call
cli
adc
scas
push
(bad)
je
push
arpl
cmp
mov
mov
(bad)
jns
or
lock
ficomp
ins
leave
pop
out
sub
cmp
push
mov
std
mov
clc
cmp
or
fwait
adc
out
cdq
inc
inc
es
in
jb
lds
fstp
push
dec
test
in
(bad)
movs
sbb
mov
cmc
stc
mov
sub
pushf
mov
invd
(bad)
in
arpl
mov
repnz
fst
cwde
sbb
xchg
leave
cmp
dec
sbb
hlt
test
cwde
imul
inc
xor
aad
add
add
imul
rcr
adc
out
sar
fucomi
fwait
or
loop
repz
inc
repz
cmps
ins
add
ins
cwde
push
in
out
cli
gs
cmc
mov
mov
aad
lea
ficomp
xor
mov
mov
lahf
jmp
jmp
ss
shr
sbb
dec
xchg
mov
inc
dec
fadd
xchg
cwde
out
lods
push
mov
ins
and
add
js
and
fdivr
pop
stc
jmp
xchg
dec
inc
xchg
fwait
repnz
mov
xchg
fdiv
xchg
into
ror
pushf
adc
outs
mov
mov
mov
lock
mov
xchg
je
inc
mov
adc
fadd
cmp
add
(bad)
cmp
gs
cld
and
movs
adc
mov
mov
daa
xchg
dec
pop
pop
dec
mov
pop
adc
jg
pop
in
std
gs
mov
dec
push
inc
mov
mov
popf
lds
cmps
jne
out
repnz
ss
or
push
mov
sub
icebp
and
sub
cmps
inc
mov
std
mov
add
xchg
jbe
adc
adc
xchg
outs
jg
adc
mov
je
es
test
xor
inc
in
add
out
inc
js
push
retf
xchg
out
retf
fisub
bound
enter
sar
sbb
lea
popa
xchg
lods
and
scas
add
sbb
mov
sbb
(bad)
mov
imul
shl
leave
xchg
ss
push
jnp
mov
movs
sub
rcr
xor
rcl
sub
pmaxub
shl
dec
repnz
inc
pop
push
jne
fisttp
jb
xstore-rng
cmps
ret
sub
loop
dec
out
jecxz
aaa
pop
pushf
xchg
fld
and
mov
and
pop
fidivr
push
xor
inc
adc
add
sar
aam
leave
adc
stos
lods
and
or
add
out
neg
inc
sar
pop
add
shl
std
aaa
push
and
push
sbb
dec
adc
sbb
cmps
outs
dec
js
and
sahf
mov
jmp
(bad)
push
xchg
ja
fist
add
test
mov
mov
or
dec
jge
leave
movs
xchg
jbe
cld
push
in
inc
jae
add
mov
inc
jne
loop
(bad)
neg
cmp
pop
sub
sub
push
pop
div
sbb
scas
clc
ret
add
loop
adc
jbe
ins
in
and
and
cmp
popa
push
(bad)
scas
out
mov
ja
xchg
(bad)
sar
xchg
(bad)
xor
fnstcw
cmps
ds
push
js
data16
inc
test
inc
imul
jle
xchg
dec
push
jg
fidivr
idiv
shr
xchg
out
sbb
(bad)
mov
cmp
cmps
inc
pop
inc
push
cld
popa
jl
inc
adc
lods
inc
(bad)
sbb
retf
bswap
or
rcr
mov
adc
mov
(bad)
adc
xchg
std
xchg
aad
das
es
outs
std
push
(bad)
aam
enter
shl
sub
imul
icebp
lds
adc
mov
sbb
sahf
mov
ror
cmps
jmp
jb
daa
cmp
dec
or
pushf
fisub
cmp
xchg
jb
in
icebp
(bad)
mov
fsub
push
sub
or
into
jnp
and
dec
mov
mov
dec
call
adc
push
mov
xor
push
mov
fld
pop
push
fsubr
add
lock
jbe
ds
fidiv
xor
fwait
jg
(bad)
jnp
mov
and
cmp
not
mov
add
mov
xchg
addr16
out
push
push
aam
and
and
mov
popf
sub
ins
jmp
mov
std
push
push
repnz
idiv
rcr
adc
and
bound
push
pop
jle
pushf
push
mov
sti
bound
inc
repnz
and
scas
pop
add
jmp
leave
xchg
add
data16
js
shl
clc
xor
adc
cli
scas
jge
call
jns
mov
ror
jp
jle
push
ins
dec
cdq
pushf
mov
out
adc
inc
mov
dec
pushf
xchg
sub
cmps
hlt
retf
or
(bad)
fbld
push
(bad)
or
xlat
ja
jl
mov
inc
(bad)
bound
inc
lock
add
rol
inc
cmc
lods
mov
or
add
imul
imul
ins
cmp
jg
in
in
jl
push
pop
(bad)
inc
lods
cmps
stos
inc
pop
retf
and
inc
cwde
loop
es
cmp
xchg
rcr
cdq
inc
jl
aad
fimul
and
(bad)
cdq
xchg
ss
cmps
test
sahf
cmp
xor
(bad)
(bad)
fwait
jns
adc
cdq
sub
leave
lahf
xchg
cmp
out
inc
ja
sahf
push
and
aaa
mov
dec
shl
add
test
pop
gs
popf
mov
les
or
imul
(bad)
xlat
pop
push
jg
xchg
fs
call
div
pop
shr
and
daa
dec
dec
fnsave
jb
and
push
and
cmp
pop
add
lds
loope
sbb
test
mov
fisttp
iret
or
mov
sahf
icebp
adc
xlat
cmc
data16
call
fcomi
inc
cmps
ret
dec
push
cmp
imul
xor
in
jo
xchg
pop
jae
(bad)
mov
inc
fld
push
ss
xchg
xchg
mov
pusha
mul
movs
imul
mov
dec
sbb
fidiv
aaa
nop
jmp
mov
lds
ror
push
rcr
push
mov
xor
ret
pop
or
xchg
pop
xor
not
jae
stos
ret
push
mov
mov
sbb
or
fs
pop
add
mov
sbb
in
xchg
pop
xchg
push
and
cmp
(bad)
ror
or
jne
movs
loopne
jl
or
xor
add
mov
aad
(bad)
test
adc
cld
inc
or
mov
repz
xchg
popa
aad
cmp
pop
mov
dec
push
xchg
mov
jmp
sbb
adc
mov
lds
dec
push
or
add
in
cmps
in
loop
test
retf
pop
adc
fdiv
cmp
into
loop
fidiv
or
sub
sub
mov
dec
popa
add
sbb
mov
jb
imul
add
jp
pop
adc
push
jmp
jg
out
sub
fld
or
and
call
inc
jp
dec
sahf
dec
fwait
adc
lods
pop
xchg
inc
add
jmp
sub
repnz
clc
pushf
rcl
and
das
sbb
arpl
aad
push
cmp
(bad)
inc
call
enter
ret
imul
fist
lea
ret
loopne
push
xchg
or
xchg
sub
and
add
ror
lea
push
sar
sbb
fbstp
clc
fidivr
bound
cmps
adc
cwde
aaa
repnz
sahf
outs
cmp
fldcw
mov
jnp
push
lods
repz
(bad)
scas
es
xchg
cmc
inc
mov
push
xor
nop
bnd
nop
inc
add
aam
not
repz
sub
cmp
dec
fiadd
push
inc
inc
push
test
nop
(bad)
xchg
pop
loope
imul
push
rol
out
add
cwde
out
ins
dec
xor
inc
dec
ins
mov
pop
ins
rcr
in
call
jge
mov
sub
dec
cmp
inc
std
cmps
add
jle
dec
push
outs
(bad)
ja
mov
jnp
scas
test
or
in
aad
mov
bound
xchg
jno
lods
sub
sbb
xchg
sahf
ret
xchg
imul
cmp
loope
lahf
ins
call
nop
cs
shr
xchg
ror
sbb
mov
inc
loopne
inc
cld
movs
inc
jle
icebp
pop
cmp
fwait
push
sahf
loopne
mov
dec
cmp
adc
iret
add
js
jno
mov
mov
ins
adc
lahf
ret
mov
xlat
fwait
std
lock
cs
scas
cmp
cli
sbb
outs
xchg
cmp
or
push
and
in
(bad)
sub
inc
or
pop
jl
adc
mov
mov
xor
mov
stos
xchg
das
mov
or
stos
stos
imul
div
xchg
mov
sti
fnsave
inc
fwait
pop
jo
mov
js
sbb
pusha
mov
or
or
dec
sub
pop
pop
mov
into
or
adc
hlt
mov
jbe
jns
les
ins
repz
mov
jmp
mov
aas
jae
xchg
(bad)
out
mov
xchg
mov
shl
xchg
shl
mov
jmp
jecxz
sar
mov
psrlw
jbe
dec
ins
ss
(bad)
or
xchg
test
xchg
xor
test
xlat
sub
dec
mov
scas
jle
lods
fcomp
push
mov
or
jb
and
push
fisub
aaa
xchg
pusha
lds
dec
aaa
pop
xchg
sbb
stos
jo
and
add
push
cmps
xchg
ficom
mov
xchg
push
stos
lds
(bad)
fcom
dec
int3
xchg
lods
fild
xor
pop
inc
push
xor
test
add
out
loope
xchg
je
movs
jle
pop
xchg
mov
movs
rcr
js
mov
dec
aas
std
out
cmp
and
mov
adc
cmp
loope
aaa
mov
repnz
fsubr
lds
pusha
rcr
out
add
and
or
(bad)
xor
popa
and
scas
pop
ror
popa
sub
sbb
test
xchg
fcmovnu
outs
mov
mov
int3
lahf
out
adc
stc
call
sub
or
aad
hlt
xor
add
aas
mov
fwait
popa
sbb
dec
mov
or
in
xor
stos
or
add
(bad)
push
test
in
or
iret
(bad)
jge
cmc
jno
mov
xlat
push
out
scas
imul
mov
aas
mov
test
movs
or
sbb
inc
stos
or
jle
test
sbb
push
stos
shl
cs
pop
hlt
out
shl
pop
hlt
push
mov
nop
fs
xor
aaa
mov
mov
movs
jg
add
bound
ret
out
jge
in
inc
test
sub
push
loope
push
mov
adc
mov
inc
or
(bad)
mov
mov
xchg
loop
hlt
iret
jmp
idiv
das
mov
call
(bad)
aas
fcmovnb
xchg
and
mov
enter
dec
push
in
mov
jb
ins
and
cmps
sahf
dec
fisubr
call
or
mov
std
shl
cli
inc
mov
dec
mov
addr16
jbe
ret
inc
and
xor
sbb
out
dec
in
cli
sub
jge
add
jb
lock
mov
cmp
adc
adc
sbb
lods
loopne
mov
cmps
sbb
stc
push
inc
loope
cld
cmps
or
adc
sub
ret
xchg
retf
push
pop
hlt
inc
rcl
sbb
shl
dec
cmp
jns
inc
or
les
nop
xchg
ss
mov
sbb
mov
fnstcw
inc
add
iret
pushf
or
mov
lods
fdiv
sub
cdq
arpl
aas
push
cmps
xor
jne
out
ret
test
mov
push
je
repz
fadd
mov
scas
and
dec
xor
lock
and
mov
cmp
pop
mov
daa
xlat
fild
adc
push
jle
mov
and
sahf
aas
sub
pop
cmps
adc
pushf
js
sub
dec
test
mov
fsub
sbb
inc
fist
push
jns
pop
dec
push
fadd
cdq
and
jb
mov
adc
or
dec
xchg
lods
repnz
jnp
add
sbb
pop
icebp
mov
jl
and
xor
push
xchg
pop
mov
mov
shl
and
data16
(bad)
retf
daa
xchg
xchg
leave
jno
fisubr
adc
xchg
xor
mov
and
push
movs
sub
inc
pop
test
lods
jne
out
sar
mov
mov
ret
push
xor
outs
push
stos
test
xor
cmp
dec
pop
fisubr
dec
mov
and
xchg
cld
add
adc
cmp
pusha
stos
aas
jmp
sbb
sub
arpl
pop
lods
fistp
xchg
jb
dec
adc
shl
adc
mov
and
cmp
jmp
outs
rcpps
xor
inc
shl
fwait
in
mov
aaa
test
add
or
ins
dec
xchg
cmp
movs
into
sti
and
bound
lods
int
push
shl
push
push
inc
xor
pop
lea
push
cmp
mov
mov
(bad)
int
add
sub
mov
dec
mov
mov
inc
das
hlt
jg
jmp
lds
or
pusha
sbb
hlt
cli
je
mov
pop
push
dec
repz
sub
fsub
ins
neg
int
pop
mov
repz
and
mov
xchg
sub
cmc
xor
(bad)
jnp
pop
and
pop
es
pop
xor
outs
call
leave
xchg
xor
push
jno
and
jmp
mov
imul
loopne
or
inc
or
out
sbb
fwait
ret
inc
jp
out
lds
fstp
cmp
adc
push
retf
xlat
in
popf
test
adc
inc
xor
imul
ds
into
aad
not
scas
mov
mov
test
cld
mov
inc
lahf
jbe
aad
sbb
mov
push
inc
push
dec
les
into
mov
or
adc
sbb
fmul
xchg
ja
adc
push
test
test
mov
(bad)
cmps
sbb
push
ins
add
xor
add
inc
mov
(bad)
cmc
mov
jmp
sar
push
pop
mov
and
mov
sub
cmp
cmps
lds
aaa
cmovae
jp
or
rdtsc
aam
stos
mov
out
push
jmp
mov
xchg
jne
jno
xchg
lea
push
and
sub
lods
sub
(bad)
xchg
sbb
pop
sbb
retf
adc
shr
idiv
daa
inc
pop
neg
loop
xchg
in
dec
inc
push
pop
lds
imul
in
mov
and
in
dec
aaa
dec
xchg
aad
and
mov
dec
stos
xchg
in
jg
pop
hlt
aam
sbb
popf
inc
fdiv
cld
dec
in
cld
mov
inc
pop
inc
cmps
jmp
jle
inc
add
xor
sbb
jge
pop
dec
xchg
popf
sub
repnz
pushf
stos
bound
imul
and
sbb
sbb
adc
cdq
mov
push
scas
mul
jge
fs
pop
mov
fstp
rol
ret
mov
movs
push
sti
movs
mov
ins
or
retf
xor
std
cmp
cdq
punpckhbw
pop
lods
mov
sbb
inc
jmp
sub
daa
sub
mov
or
mov
fs
mov
xchg
jno
dec
cmp
add
cmp
pop
sub
imul
adc
xlat
mov
retf
push
add
pop
mov
mov
hlt
arpl
retf
loope
ja
popa
adc
jg
ss
or
mov
aaa
mov
inc
xchg
nop
mov
mov
push
cmp
sti
sbb
push
sub
xchg
leave
fist
cmps
add
dec
fwait
neg
outs
add
adc
bound
loopne
cmps
sbb
fnstcw
pop
mov
mov
mov
nop
in
imul
push
xor
add
jnp
mov
inc
adc
nop
or
sti
repnz
jp
call
(bad)
mov
xchg
pop
fyl2xp1
mov
fild
ret
ins
mov
mov
jle
movs
adc
add
scas
jg
arpl
mov
lds
cmp
push
idiv
out
xor
lods
es
movs
mov
stos
mov
das
jmp
mov
shl
jg
int
add
sbb
(bad)
sti
stos
cmp
adc
ins
movs
test
pop
(bad)
repz
or
xchg
jb
cmc
cli
retf
mov
xchg
pushf
or
cmp
dec
sbb
repnz
or
xchg
pop
mov
xchg
pop
xchg
inc
repnz
int
ret
cmp
repnz
sub
es
dec
xor
lods
test
call
fcmovb
jae
lock
jno
or
movs
jae
movs
and
imul
jecxz
mov
mov
push
sub
out
push
loopne
dec
xchg
xor
mov
and
push
aas
inc
pop
xchg
aad
fnsave
sub
(bad)
cmp
not
xor
pop
mov
retf
pop
out
lahf
sar
out
xor
(bad)
loop
push
push
sub
cld
int
lahf
jmp
dec
pop
call
adc
inc
(bad)
jnp
xor
and
adc
inc
aad
cmp
dec
fwait
sub
stos
jmp
hlt
mov
jmp
pop
cs
les
push
mov
push
and
das
mov
pop
popa
jmp
(bad)
adc
fs
mov
pop
mov
pusha
jmp
sar
and
out
jl
xor
bound
sar
lea
mov
ficomp
xcrypt-cbc
cmps
adc
stos
sbb
rcl
cmp
inc
mov
int
movs
mov
or
(bad)
pop
pop
cmp
xchg
inc
push
out
jmp
pop
adc
hlt
xchg
xchg
outs
jmp
dec
mov
push
sbb
icebp
dec
fnsave
call
or
xchg
das
mov
and
add
mov
push
cmc
loopne
cmc
push
adc
or
in
daa
hlt
int3
cmc
adc
aaa
xchg
shl
scas
and
mov
xor
fwait
in
gs
(bad)
fisub
jbe
add
jnp
(bad)
clc
movs
or
xlat
jbe
jbe
sbb
push
ins
iret
test
sti
(bad)
ret
inc
inc
scas
fisubr
ds
dec
stos
out
and
fxch
inc
pop
retf
in
inc
mov
sbb
sub
(bad)
inc
inc
in
aam
jb
not
cmp
test
and
jecxz
dec
test
sub
jae
mov
pop
adc
push
push
push
imul
loopne
mov
(bad)
call
outs
mov
inc
mov
stos
loopne
push
in
xchg
xchg
out
push
lea
mov
add
mov
sub
add
(bad)
sbb
or
add
mov
jae
push
cmp
int
icebp
mov
test
sti
jp
sbb
adc
enter
pushf
mov
ror
sub
outs
ins
cmp
js
jmp
stos
sti
xchg
jne
lods
inc
int3
mul
fsubr
ficom
pop
mov
jecxz
nop
mov
jecxz
ss
sub
imul
jmp
jge
adc
or
mov
in
popa
sahf
cdq
mov
sub
fld
icebp
xchg
xchg
add
xchg
shl
aam
dec
xchg
push
inc
dec
ins
(bad)
leave
out
push
scas
push
mov
int
adc
out
jg
fsubrp
mov
adc
je
cmp
mov
adc
mov
or
inc
cmp
in
jns
jmp
push
ror
lods
mov
retf
inc
test
mov
rcr
xchg
mov
pop
push
jp
pop
xchg
fdivp
sub
add
call
pop
or
dec
ins
xchg
or
pop
sub
test
xor
xchg
les
and
sbb
in
ds
push
cmps
retf
sbb
and
adc
test
call
push
int3
adc
jae
(bad)
loopne
arpl
sub
inc
jo
lea
cwde
or
and
add
sti
or
jle
lock
not
in
mov
stos
rcr
or
not
xchg
in
loopne
aaa
lds
shl
xchg
or
or
cmp
pop
cs
(bad)
push
xor
or
mov
ret
adc
cmp
push
sbb
sbb
(bad)
imul
stos
inc
inc
mov
add
adc
imul
lahf
enter
scas
push
mov
dec
mov
inc
sub
jl
pop
ds
mov
test
pop
push
repnz
mov
scas
jnp
outs
gs
and
pop
int
call
jbe
fdivr
aam
pop
rcr
fs
xlat
loop
sbb
aam
pop
int3
adc
mov
mov
pop
mov
inc
cmp
inc
inc
gs
cmps
call
adc
dec
repnz
cld
ficom
or
jae
mov
mov
outs
cmp
mov
mov
cmp
outs
repnz
inc
hlt
mov
inc
les
aas
pop
or
mov
sub
mov
(bad)
imul
or
inc
movs
fcmovnbe
bound
xchg
sub
jle
sbb
pop
ja
fnstsw
pop
test
scas
xchg
retf
shr
mov
imul
ret
inc
sbb
mov
bound
xchg
pop
jecxz
pop
(bad)
adc
scas
xlat
mov
xchg
add
or
sahf
ret
pop
repz
and
add
test
adc
lods
mov
(bad)
rol
jo
outs
inc
add
jb
std
push
push
imul
scas
outs
dec
push
mov
das
fisttp
mov
jae
dec
mov
repnz
fmul
hlt
mov
aaa
adc
pop
retf
loop
dec
into
es
cdq
sub
push
mov
pop
out
out
rol
stos
loope
sub
loope
mov
or
fld
fld
ret
fdivr
stos
das
sbb
pop
add
sub
and
xchg
add
add
in
cmp
pop
iret
and
or
jl
cmp
xor
jb
aas
aam
adc
in
mov
into
enter
add
test
sar
inc
push
fwait
pop
mov
mov
cli
push
in
ss
sar
fimul
pop
pop
adc
lahf
add
and
dec
js
dec
(bad)
loopne
adc
movs
jmp
pop
and
fst
aaa
xchg
fcmovb
push
xlat
popf
movs
jl
stc
push
push
lods
(bad)
dec
xor
push
dec
add
stc
mov
ds
push
icebp
imul
push
sahf
call
pop
cmps
jae
mov
ins
aam
mov
add
rcl
das
arpl
out
jge
xor
icebp
add
pop
outs
or
mov
leave
mov
sub
sar
mov
fwait
pop
loope
mov
mov
and
cmps
aad
test
dec
in
cli
add
mov
sub
xchg
cwde
mov
je
ja
shrd
lods
xor
cmp
(bad)
jg
sbb
dec
mov
es
xor
xchg
test
and
fidivr
inc
nop
push
shl
cld
add
movs
pop
test
cmp
add
cs
xor
cmp
out
xor
and
rcl
or
sbb
in
cmp
stos
(bad)
ins
in
dec
imul
adc
popf
int3
push
mov
div
mov
adc
jmp
movs
mov
add
cmp
push
cmp
sbb
add
adc
aas
pop
and
bound
mov
and
shl
and
repz
and
pop
mov
ret
lods
inc
cld
inc
adc
sub
pop
adc
add
je
ret
fcomp
and
mov
sub
pop
ins
push
repz
jbe
lods
mov
test
jno
mov
jge
shl
and
in
imul
mov
inc
mov
outs
ss
daa
inc
sahf
(bad)
add
lock
or
mov
lods
sbb
mov
(bad)
mov
sbb
and
mov
xchg
sub
push
(bad)
jp
push
jecxz
cmp
sub
mov
arpl
xchg
outs
ins
dec
jb
jne
add
lahf
test
mov
movs
push
pusha
lds
mov
mov
repz
fdiv
lods
mov
sub
jmp
dec
movs
les
xor
jge
pop
mov
dec
pop
in
dec
or
mov
cmp
sbb
fimul
dec
mov
cmp
cmps
jge
pop
es
ja
iret
jb
push
popa
add
mov
push
or
cli
lea
aas
das
lahf
hlt
push
inc
gs
dec
mov
cli
aaa
mov
shl
es
les
sahf
(bad)
call
in
test
shl
icebp
xchg
jb
and
fcmovnb
add
pop
outs
lds
ins
pop
movs
add
cmp
in
int
in
loope
adc
sbb
mov
sbb
popf
xchg
stos
push
inc
das
push
mov
sbb
fnstsw
jle
pushf
ins
pop
jge
xchg
jg
fnclex
imul
inc
icebp
or
dec
rcl
adc
mov
jge
pop
mov
and
lods
inc
mov
retf
les
mov
clc
cmp
ficomp
xchg
in
dec
sub
shl
sti
adc
sar
dec
cld
jns
sar
mov
mov
pop
adc
mov
inc
les
icebp
xchg
cmp
into
sbb
pop
and
xchg
mov
pop
in
je
(bad)
inc
ss
adc
leave
add
pop
retf
cmp
or
cmp
nop
adc
sbb
jno
fcmove
aam
xchg
cmp
(bad)
sbb
cdq
movs
loopne
cmp
push
inc
fdivrp
out
and
or
mov
mov
push
test
xchg
mov
cmp
pusha
repz
mov
dec
call
call
movs
pop
mov
pushf
mov
xor
and
lea
sbb
xlat
mov
jl
fs
add
push
mov
std
mov
jb
popf
jp
jae
nop
(bad)
iret
cmps
xor
push
xor
ins
iret
sbb
xchg
sbb
mov
jno
jecxz
pop
sbb
add
sti
xor
add
and
xchg
pop
aaa
addr16
aad
push
jp
pop
jne
adc
or
adc
mov
fwait
jb
sbb
sbb
jae
stc
and
out
leave
add
cmp
cli
or
cld
aas
test
mov
fwait
std
and
xchg
in
ds
jmp
sbb
dec
(bad)
loope
mov
ss
gs
aaa
fs
pop
imul
add
mov
sub
ins
scas
sbb
push
cmp
repnz
mov
mov
cmc
xlat
sub
scas
test
xlat
(bad)
mov
aad
or
ins
sub
ins
xchg
mov
xchg
aad
retf
push
mov
xchg
sbb
cmp
xchg
inc
xor
adc
dec
jns
rcr
dec
mov
test
sbb
or
(bad)
push
sbb
loop
sub
sbb
cmc
lods
cmp
aaa
lds
jmp
rol
ins
pop
fist
cs
or
dec
shl
in
sbb
aas
or
mov
js
call
std
ja
pop
mov
loop
adc
(bad)
int
int3
xchg
psadbw
loop
ja
jmp
fnsave
jp
test
les
sti
fcomp
cmp
jae
not
es
pop
fld
shl
mov
stc
xchg
jae
mov
fsub
test
xor
xchg
popa
fsin
add
popa
imul
xchg
add
in
mov
rcl
fsub
test
jmp
shl
mov
dec
daa
repnz
jb
dec
mov
stos
push
ins
fs
add
sbb
rcl
mov
pop
xchg
data16
xchg
add
pop
fsubr
fwait
push
out
push
test
mov
js
ficomp
adc
shl
mov
pop
(bad)
movs
adc
dec
fiadd
xchg
call
mov
ret
mov
mov
dec
jb
test
pop
cmp
inc
push
sbb
or
mov
cli
mov
mov
bound
mov
inc
cdq
adc
inc
ds
lods
xchg
xor
movs
xchg
test
pop
mov
mov
inc
xor
and
cmps
mov
ins
pop
push
xchg
jle
rol
pop
dec
dec
lods
sub
add
inc
fwait
ins
and
cmp
cwde
ficomp
xor
(bad)
cld
ja
xor
nop
rcpps
rcl
sbb
jb
or
retf
ins
push
fsub
dec
stc
mov
mov
icebp
jmp
and
push
cmp
lahf
out
xchg
hlt
in
jae
mov
and
pop
retf
sub
pushf
cmps
scas
push
mov
push
adc
dec
movs
das
arpl
jb
in
cs
js
movs
loopne
adc
xchg
mov
jb
popf
sbb
lock
fdiv
sub
mov
mov
mov
xor
xor
jmp
cmp
jne
sub
adc
cld
sbb
or
sub
and
jp
inc
loopne
mov
clc
repz
(bad)
fidiv
movs
(bad)
xchg
lods
int
scas
xchg
rcl
jp
sti
and
jne
stos
cli
nop
jnp
in
in
retf
mov
or
mov
cmps
mov
mov
nop
fcom
or
pop
cmp
(bad)
mov
ins
adc
out
neg
dec
mov
push
int
jmp
retf
push
sub
xchg
clc
xchg
out
push
mov
add
ss
cmps
pop
mov
jne
inc
jmp
scas
in
inc
mov
lea
or
fistp
outs
fisttp
fsubr
int3
into
pop
movs
mov
mov
pusha
out
aas
cld
es
cmp
push
aad
push
dec
movs
pop
or
(bad)
mov
das
mov
push
and
in
test
dec
sbb
add
sbb
adc
cmps
mov
mov
or
imul
mov
pop
jns
leave
mov
mov
mov
xor
mov
or
cmps
add
mov
pop
adc
(bad)
pop
mov
retf
cmp
dec
cmp
inc
hlt
ja
jne
mov
pop
sbb
xor
dec
scas
dec
or
shr
(bad)
pop
test
adc
pop
(bad)
in
not
into
and
xchg
inc
mov
or
dec
dec
jmp
es
lds
mov
mov
xor
or
adc
mov
mov
adc
or
dec
std
addr16
cmc
dec
pop
out
movs
repnz
fidivr
and
mov
or
sub
jno
les
ja
daa
arpl
(bad)
aaa
push
push
and
loop
pop
dec
(bad)
outs
ds
out
xlat
ds
rcl
pushf
shl
xchg
mov
push
inc
add
shl
add
pop
rcr
sar
sub
mov
add
xchg
jo
icebp
cmp
mov
daa
mov
adc
not
push
cmps
pusha
cli
fcomp
xchg
mov
pop
adc
push
(bad)
pop
or
adc
jbe
jns
mov
mov
mov
or
jne
in
push
pushf
repz
call
mov
movzx
test
xchg
outs
(bad)
mov
push
inc
ss
or
or
xchg
rcl
ret
and
lods
and
cs
or
jo
imul
add
dec
or
and
xor
loope
add
gs
xor
add
in
pop
stos
cmp
xor
adc
int3
into
adc
mov
xchg
test
stos
fimul
je
jae
xor
xor
clc
inc
lock
lock
mov
mov
dec
hlt
fist
mov
add
pop
cld
mov
in
loopne
dec
dec
and
add
jno
jb
or
hlt
in
inc
dec
dec
(bad)
adc
inc
dec
(bad)
fmul
pushf
add
loope
imul
sub
mov
add
in
push
loopne
jno
test
cs
jmp
or
test
sbb
cs
(bad)
or
cwde
lahf
pushf
repz
mov
xor
sbb
xchg
lea
adc
outs
out
test
sub
inc
ins
cmp
dec
pop
pop
jg
xor
and
shl
mov
jne
mov
xor
inc
jbe
push
pop
je
push
addr16
sti
sub
mov
mov
loopne
mov
or
ins
int3
adc
fidiv
mov
jmp
nop
mov
lahf
jg
stc
mov
jmp
mov
inc
test
and
(bad)
lea
xchg
sub
hlt
push
push
mov
retf
adc
and
ss
clc
(bad)
adc
and
and
aam
jmp
dec
mov
fild
pop
mov
popf
out
mov
mov
jns
inc
push
xchg
xlat
jnp
leave
mov
cmp
add
xchg
or
and
xchg
enter
out
test
pop
aaa
loop
lods
lock
loope
mov
ja
les
pop
xchg
(bad)
push
icebp
imul
push
std
inc
cmp
pop
jbe
mov
jp
cmp
pop
lahf
jno
add
push
loop
xlat
maskmovq
neg
add
inc
push
jae
and
cmc
(bad)
shr
(bad)
ret
mov
popa
(bad)
mov
mov
mov
mov
sub
call
les
ja
dec
sub
rcr
aas
js
int3
fnstsw
dec
clc
rcr
lods
push
or
adc
push
pop
in
push
outs
fwait
mov
rcr
stos
seta
dec
or
push
imul
push
and
imul
leave
push
mov
cwde
push
fstp
clc
cmp
daa
cmps
outs
pop
mov
aad
scas
xchg
fmul
arpl
adc
or
inc
jmp
ret
div
xchg
daa
xlat
push
sti
pop
cmp
jne
mov
inc
cwde
push
lahf
mov
push
mov
dec
sar
data16
test
lods
rcr
rep
mov
sub
jge
jb
or
shl
popa
fwait
mov
jno
ins
adc
jmp
repnz
lods
jbe
xor
mov
push
out
div
imul
pop
mov
add
nop
mov
mov
jmp
std
fwait
pop
sub
mov
push
fsubrp
(bad)
repz
push
dec
sahf
ds
data16
loop
outs
cli
push
or
adc
call
jp
jae
test
pop
ret
fwait
loop
and
loopne
push
pop
out
xchg
imul
or
and
cmp
add
jmp
or
and
sahf
pop
sbb
ins
mov
jmp
iret
loop
push
or
mov
adc
xor
jp
dec
xor
xlat
xchg
mov
push
jno
inc
push
shl
test
dec
add
or
jbe
lods
outs
xchg
cmp
mov
scas
mov
and
sbb
movs
jno
push
xor
sub
mov
cmp
cmps
push
repnz
sbb
addr16
fcom
cdq
or
push
sub
loope
add
xchg
ret
rep
dec
(bad)
into
jl
movs
lds
inc
add
sar
jae
ret
gs
xchg
or
retf
call
nop
mov
mov
jl
cwde
popa
jns
leave
scas
les
cmp
jg
lock
aam
rcl
push
add
push
mov
ss
loopne
aaa
jmp
add
mov
aas
adc
ins
ret
js
ss
and
xlat
mov
inc
clc
inc
and
jp
sar
clc
ficom
dec
mov
or
sahf
lods
cmp
inc
lods
push
xchg
adc
mov
mov
mov
mov
scas
inc
movs
mov
push
call
dec
scas
loop
mov
dec
shl
pop
bts
xchg
out
or
and
fcom
xor
and
pop
enter
inc
sar
push
add
or
out
dec
mov
push
sbb
mov
cli
mov
jmp
pop
sar
inc
adc
pushf
addr16
xchg
lea
add
(bad)
xchg
xor
addr16
cmp
sbb
cs
test
mov
xchg
addr16
loop
dec
push
pop
dec
retf
jo
int
xor
fdivr
mov
sbb
lods
xchg
pop
cbw
stos
imul
mov
mov
mov
and
cmp
inc
fild
push
popa
pop
xchg
mov
or
sbb
cmps
jno
xchg
pop
out
stc
daa
xchg
stc
cmp
stos
push
mov
int
sar
dec
sub
mov
sbb
or
push
fs
es
mov
mov
jg
add
or
in
push
imul
pop
pop
adc
leave
retf
cmps
cmps
in
into
ret
loop
or
cmp
outs
and
cld
pop
gs
push
fwait
mov
std
mov
repz
mov
js
aaa
fisubr
sub
cmp
popa
push
adc
push
jmp
xor
and
shr
js
clc
push
js
retf
or
js
in
out
fst
and
push
sti
jmp
pushf
aaa
adc
outs
cmp
and
rcr
cli
mov
lea
mov
mov
test
ss
and
and
mov
lds
mov
sbb
in
push
test
test
mov
bnd
stos
pop
xchg
sbb
das
shl
pop
jecxz
movs
jne
inc
pushf
gs
iret
neg
out
sbb
or
pop
fild
push
mov
xchg
adc
inc
and
into
addr16
icebp
push
xor
cmp
mov
sub
jno
mov
mov
xor
popf
cmps
(bad)
xchg
cdq
out
xchg
rcr
(bad)
xor
or
inc
mov
sbb
(bad)
xchg
in
arpl
or
or
jno
mov
mov
fdivp
js
or
add
jmp
js
jmp
pop
push
sub
xor
in
push
push
rcl
inc
dec
repz
push
mov
test
sub
mov
pop
cmp
cmps
inc
xchg
and
ret
int
jecxz
cmp
aad
std
dec
je
sub
je
mov
imul
mov
xchg
es
push
xchg
call
push
xchg
stos
call
not
jmp
inc
int3
and
mov
push
dec
pop
xchg
inc
mov
jge
imul
sub
ss
jnp
sbb
dec
arpl
mov
inc
jb
es
fnstcw
xchg
inc
int3
jecxz
inc
jo
dec
mov
cli
add
and
cmp
mov
mov
scas
clc
pop
cmp
scas
fucomi
push
ins
or
jmp
adc
fmul
in
push
push
pop
push
and
lds
js
adc
ins
and
out
add
mov
ret
xor
add
(bad)
fldenv
mov
arpl
movs
fmul
outs
xchg
and
xor
xor
js
jle
fsubr
mov
pop
bound
cmp
inc
in
xlat
mov
ror
test
mov
inc
add
dec
mov
jnp
sbb
ror
popa
and
xlat
iret
imul
stc
lods
dec
jecxz
push
fwait
add
or
clc
or
aam
mov
sbb
rcl
call
adc
leave
cwde
and
add
add
cmc
movs
xchg
add
push
xor
out
or
xchg
je
inc
xchg
(bad)
push
mov
inc
inc
je
adc
or
adc
add
mov
fidiv
xchg
mov
loop
std
sbb
push
aam
repz
inc
icebp
sub
inc
fstp
jp
scas
sub
call
adc
mov
cmc
and
(bad)
cmps
lds
les
cs
jl
sub
sub
mov
and
xor
mov
repnz
xchg
lds
xchg
xlat
inc
outs
test
arpl
inc
pusha
jns
mov
or
and
das
pushf
aad
cli
sti
push
mov
lock
mov
push
std
ror
jecxz
xlat
test
mov
fs
hlt
xor
mov
imul
fwait
mov
adc
xor
xlat
cmps
dec
or
mov
fisubr
inc
fisttp
pop
xchg
cld
cmp
addr16
push
lahf
jl
ror
push
xchg
out
loop
inc
out
mov
push
add
repz
test
(bad)
fwait
bound
xchg
retf
xchg
adc
sbb
jbe
mov
cmps
xlat
mov
mov
rcl
(bad)
xor
pop
icebp
adc
jne
mov
iret
push
les
bound
push
daa
nop
lds
jne
mov
jmp
cwde
xor
sbb
movs
daa
imul
stos
mov
enter
pop
and
inc
aas
adc
ins
push
push
cli
push
std
popf
repz
outs
add
jae
daa
jp
imul
lea
and
daa
push
xchg
mov
adc
dec
push
ins
mov
in
add
imul
or
ins
hlt
aam
hlt
lods
popf
in
cli
sbb
(bad)
fnstsw
xor
jae
lahf
retf
fld
rol
jmp
frstor
cmp
and
mov
jae
les
jbe
push
push
jns
jns
pop
push
mov
and
pop
int
into
or
push
cmp
mov
mov
rol
dec
pop
push
xchg
xchg
aam
push
leave
mov
cmps
js
ss
jns
xor
loop
jge
xchg
adc
mov
mov
out
js
mov
ror
add
(bad)
pop
xchg
xor
das
fldcw
pop
shl
xchg
cmp
rcl
sbb
mov
sub
nop
dec
inc
xor
test
lea
or
out
cwde
gs
pushf
ss
or
(bad)
sub
or
shr
xor
add
mov
and
mov
mov
push
or
(bad)
outs
xchg
popf
ins
mov
jae
rol
inc
jne
cli
cld
cmp
xor
mov
fs
sbb
cs
lods
xor
add
inc
mov
jmp
pusha
sahf
leave
sub
es
dec
nop
addr16
int3
xchg
jo
mov
push
sub
jmp
dec
dec
cli
xor
or
mov
(bad)
pop
jmp
sub
mov
jg
and
pop
or
int3
jne
xchg
inc
dec
call
inc
loope
mov
mov
out
xchg
repnz
mov
inc
je
jp
aam
loop
mov
jp
and
pop
pusha
push
ror
das
xchg
stc
pop
rcl
pushf
sar
fiadd
fwait
cmp
add
xor
or
sub
dec
not
adc
fbstp
pop
add
jne
cmp
test
sbb
imul
rcr
adc
dec
or
jnp
enter
scas
fmul
push
fbld
add
and
(bad)
fnstsw
mov
cmp
mov
xlat
xchg
and
clc
cmps
mov
jl
out
mov
mov
add
popf
adc
mov
lock
imul
sub
cmps
add
push
inc
cmps
mov
(bad)
xor
ret
out
stos
bound
js
pop
mov
in
sti
jb
xchg
dec
(bad)
sub
dec
jg
jae
(bad)
inc
into
mov
jmp
xor
push
jle
mov
mov
adc
repz
xchg
sbb
mov
push
out
inc
add
mov
and
cmc
(bad)
cli
or
aad
lods
test
shr
lods
dec
pusha
cmps
cmps
pop
call
bound
sub
das
daa
inc
mov
xor
mov
jbe
loop
inc
pop
push
inc
sub
not
xlat
test
cld
cmp
das
jne
fist
push
mov
stc
sbb
rcl
or
pop
pop
adc
fcmovne
fst
or
sbb
test
enter
add
push
cli
out
mov
(bad)
(bad)
mov
xchg
ds
lods
test
pop
adc
and
xchg
loope
lahf
mov
into
lods
cmps
aam
pop
cmc
retf
or
(bad)
sbb
adc
sub
push
xchg
or
into
ret
sbb
mov
sub
dec
enter
inc
sbb
push
or
pop
dec
ret
into
pop
lds
cdq
or
stos
out
ficomp
fiadd
jmp
cdq
xchg
adc
jp
dec
mov
pop
lods
call
add
into
repz
fisttp
add
push
xchg
aas
aaa
or
add
mov
add
ret
pop
sub
test
push
lods
jle
mov
mov
sbb
lock
dec
loop
outs
cmp
jg
adc
and
arpl
mov
dec
push
mov
test
sub
ror
xchg
repnz
int3
(bad)
mov
aad
xchg
or
je
cmps
in
jne
pop
mov
sbb
out
push
test
xlat
test
nop
ror
lahf
cwde
aam
cmp
dec
xchg
mov
dec
jnp
add
ret
in
fs
(bad)
gs
enter
pop
xchg
pop
mov
in
call
push
add
mov
jle
jp
test
xor
shl
shl
icebp
mov
cmc
rcl
lods
mov
cmp
or
xchg
(bad)
hlt
jp
mov
addr16
cmc
jb
ins
or
ins
pusha
cmp
xchg
and
xchg
pop
int
aam
cmp
or
scas
ja
arpl
lahf
xchg
frstor
pop
jle
cmp
sbb
icebp
jne
cmp
pop
imul
xor
retf
push
jnp
test
pop
daa
test
inc
mov
fsub
xchg
add
jp
inc
jl
aaa
in
or
cdq
add
mov
cmp
out
in
sub
nop
lds
test
xor
(bad)
mov
test
test
cli
mov
pushf
pop
jle
xchg
retf
stc
adc
inc
loop
and
and
add
adc
iret
mov
std
adc
ja
jmp
and
movs
bound
fdivr
mov
pop
mov
mov
ins
scas
lea
xchg
das
dec
push
sub
cmp
nop
xchg
and
popa
mov
add
jmp
into
xchg
clc
rol
xchg
xor
daa
push
ss
mov
(bad)
fcmovbe
in
push
xchg
xchg
push
sub
xchg
add
push
mov
js
out
outs
ror
fwait
jns
or
outs
xor
push
jnp
nop
pop
loop
scas
jo
xchg
cmc
xor
test
add
enter
sbb
xchg
stc
mov
popa
into
aaa
add
jne
pop
or
adc
cli
jl
and
adc
out
jge
dec
pop
cmps
push
popf
adc
in
pop
outs
mov
lds
xchg
and
adc
dec
push
setne
(bad)
cmps
frstor
mov
out
adc
pop
add
repnz
sar
cmp
xor
cmp
imul
add
jecxz
xchg
arpl
jnp
or
jp
hlt
xchg
lea
pop
push
pop
mov
sub
add
cmps
mov
adc
cmp
jmp
arpl
mov
popf
or
lods
sbb
pop
mov
scas
(bad)
pop
jle
mov
mov
repnz
in
jp
retf
xor
dec
mov
pushf
addr16
inc
dec
mov
push
push
jmp
mov
sub
mov
lods
ds
add
cmp
push
leave
pop
inc
sbb
xor
dec
jnp
shl
push
push
(bad)
push
data16
outs
pop
js
(bad)
shl
adc
add
mov
aam
push
fstp
sbb
data16
jo
xchg
jnp
xchg
xor
fadd
out
adc
retf
xstore-rng
cmps
xchg
leave
mov
mov
cmps
cmc
fstp
sbb
call
ficomp
dec
dec
aam
jo
and
pushf
push
scas
and
int3
and
stos
add
and
mov
mov
int
inc
in
push
and
cs
test
mov
iret
add
cs
mov
and
or
arpl
or
lock
mov
adc
push
add
inc
mov
fild
ins
adc
cld
add
cs
cmp
ror
pop
mov
push
or
inc
or
loop
mov
adc
sti
mov
cwde
pop
xor
xor
and
imul
daa
cmps
xor
push
in
xchg
ret
or
lahf
sub
sbb
xchg
pusha
paddsb
and
mov
xchg
xor
or
jle
ins
not
and
call
push
lock
sbb
ins
jge
test
push
fsub
sbb
cmc
aas
(bad)
push
dec
fucomi
push
mov
cmp
mov
xor
xor
xchg
inc
pop
(bad)
in
addr16
mov
inc
dec
xchg
xchg
cwde
ja
jo
push
lock
pop
js
xchg
jmp
fcmovu
and
int3
mov
push
mov
cdq
aad
ins
ret
arpl
push
adc
lods
out
sub
ret
mov
test
add
jnp
(bad)
repnz
and
or
mov
xchg
fs
out
xor
or
cmp
xchg
shl
inc
shl
mov
cmc
cld
mov
aaa
dec
push
ins
shl
xor
cmps
mov
lds
(bad)
stos
and
push
inc
add
cmps
fwait
iret
jae
aaa
add
test
add
lock
out
out
(bad)
out
sub
imul
cmp
or
mov
in
mov
pop
aas
push
sub
fwait
fs
jne
or
inc
(bad)
leave
(bad)
push
rol
shr
cmp
cld
mov
inc
adc
in
enter
test
lahf
or
sbb
dec
adc
test
je
xor
mov
push
xlat
sbb
cmc
sub
mov
fistp
add
push
enter
xchg
repnz
es
(bad)
cmp
push
test
sub
test
mov
fnstcw
add
fst
mov
mov
pop
pusha
cmp
xor
mov
pop
dec
and
lods
out
inc
dec
cld
or
pop
das
test
jns
add
add
add
jns
mov
push
je
outs
or
mov
add
push
mov
fcmovne
std
mov
push
mov
cmp
ror
jmp
test
fld
inc
and
int3
leave
mov
inc
in
mov
or
scas
sti
scas
test
sbb
arpl
jp
imul
(bad)
sbb
jmp
sbb
mov
mov
scas
test
mov
arpl
sub
ret
mov
sub
push
inc
sub
mov
out
pushf
or
scas
sub
pop
sbb
xchg
push
fwait
shl
xor
imul
adc
dec
sub
inc
push
mov
imul
mov
sub
xor
pop
fdiv
cmp
dec
loopne
jno
sub
ja
xchg
mov
stos
push
inc
fisub
scas
push
or
jge
inc
pop
ret
sub
je
dec
(bad)
hlt
xor
test
or
sbb
jg
jne
adc
inc
dec
mov
push
and
cmp
push
adc
imul
out
mov
gs
lea
imul
into
loop
in
push
and
retf
(bad)
pop
int3
inc
stos
imul
jmp
adc
bound
adc
mov
sub
fwait
mov
cwde
(bad)
dec
mov
ins
(bad)
popf
adc
loope
mov
push
cmp
daa
mov
aam
mov
es
add
jp
repz
(bad)
adc
retf
pushf
pop
retf
mov
pusha
rcr
sbb
icebp
mov
test
sub
dec
nop
mov
xor
pop
xor
in
sub
stos
adc
inc
add
rol
inc
cmp
pop
hlt
mov
and
sub
mov
add
xor
mov
push
lods
and
push
cmp
lods
inc
frstor
and
out
rcr
(bad)
pop
and
pop
(bad)
bound
pop
push
in
mov
xchg
add
lea
mov
popa
cwde
stos
retf
mov
and
sbb
add
test
dec
pop
and
or
les
sar
jmp
ffree
pushf
add
repnz
xor
call
call
(bad)
retf
aas
or
in
or
mov
cs
test
push
leave
cmps
adc
hlt
add
mov
retf
shl
xor
mov
inc
adc
jmp
stos
jae
dec
dec
mov
jge
jnp
pop
adc
es
lds
pop
xchg
dec
rcl
stc
loope
mov
cmp
lock
sub
std
dec
and
cmp
jbe
ror
sbb
xchg
mov
retf
imul
addr16
rdtsc
jo
push
pop
xor
mov
repnz
repnz
xor
rcl
retf
mov
cmp
(bad)
xchg
jmp
cs
scas
les
push
int
push
mov
xchg
mov
popf
adc
add
lods
push
push
push
sbb
mov
xchg
mov
shl
jb
imul
adc
ins
cmp
jge
data16
sbb
outs
mov
push
or
push
outs
mov
lock
addr16
mov
push
pushf
in
xlat
mov
lods
sub
nop
cmp
fist
test
mov
adc
mov
dec
outs
dec
scas
leave
idiv
fcom
add
push
mov
shl
inc
mov
sbb
ja
ins
out
sbb
cdq
mov
jge
adc
sbb
fwait
dec
fsubp
mov
adc
pop
or
mov
sbb
mov
and
mov
add
push
push
mov
jbe
retfw
adc
jbe
fisub
loopne
dec
hlt
adc
jns
nop
(bad)
inc
inc
dec
arpl
sbb
imul
jae
mov
leave
cmp
out
or
xchg
retf
push
xchg
out
ret
fs
ds
frstor
cmovno
stos
cmp
adc
cmps
xchg
jne
push
inc
fidivr
and
cmps
dec
(bad)
scas
iret
xor
arpl
push
in
mov
test
pop
jmp
or
sbb
sar
es
sbb
xlat
inc
ds
sbb
(bad)
(bad)
enter
adc
pop
mov
mov
ja
xor
xor
mov
shl
adc
mov
push
call
enter
push
adc
xor
pop
cld
in
adc
xchg
in
pop
outs
mov
retf
pushf
js
not
fptan
adc
jnp
pop
rcr
push
in
pop
push
mov
mov
jne
inc
xchg
push
xchg
icebp
into
adc
and
(bad)
popa
dec
fist
icebp
dec
mov
cmp
dec
add
stos
aas
sbb
dec
jge
lods
mov
cmovle
xchg
jecxz
in
add
test
inc
jmp
sub
jb
out
sti
mov
fcmovbe
movs
cmps
scas
aad
push
dec
xor
cmp
fld
xchg
dec
dec
push
mov
pop
pop
xor
dec
std
test
inc
mov
inc
loop
mov
(bad)
or
stos
icebp
xchg
xor
mov
adc
fnsave
xor
retf
mov
mov
inc
addr16
arpl
jmp
movs
add
test
jecxz
dec
out
pop
sub
movs
cmp
cli
mov
outs
fmul
xor
into
sbb
aaa
aas
aaa
xchg
lock
mov
test
lock
jbe
bound
push
and
lock
pop
pop
mov
pop
inc
xchg
xor
jmp
push
cld
retf
mov
lods
cmp
(bad)
loopne
fsubr
bound
mov
out
cmp
fsubr
adc
mov
dec
imul
push
pop
pop
loop
adc
sbb
rcr
pop
mov
arpl
sbb
mov
jmp
dec
inc
inc
push
pop
dec
jge
dec
(bad)
mov
cs
dec
ficom
ss
jmp
das
mov
imul
scas
or
ficom
(bad)
mov
sbb
fist
das
or
(bad)
test
xor
aaa
cmc
and
mov
adc
xor
outs
call
(bad)
jmp
mov
out
mov
jo
sbb
cmc
xchg
ins
mov
sbb
xchg
ja
ficomp
pop
sub
sti
jb
(bad)
cmp
dec
fnstsw
test
repz
sub
iret
out
mov
pop
cmc
(bad)
repz
mov
xor
icebp
stc
cwde
repz
call
xor
sbb
pop
ret
ja
fidiv
ins
ret
lods
mov
inc
sbb
inc
sub
ins
cmp
push
lds
fwait
xchg
sub
lods
cs
stos
sub
push
inc
inc
rcr
pop
sbb
inc
int3
fimul
div
dec
add
mov
push
test
cmp
pop
xchg
pop
out
push
cmps
jmp
sbb
inc
scas
es
pop
mov
and
fs
push
jo
sub
jl
sub
lods
push
fwait
in
es
inc
xchg
push
mov
lea
dec
xor
int
aaa
jp
inc
in
xlat
mov
push
bound
add
fiadd
loop
test
mov
sub
jl
movs
out
mov
jp
nop
pusha
out
lods
out
sub
push
inc
es
(bad)
(bad)
fldcw
fcomp
xchg
adc
pop
lods
pop
daa
mov
xchg
mov
mov
popf
inc
xor
mov
addr16
push
and
fcompp
adc
xor
and
sbb
js
cmp
add
test
pusha
into
repnz
pop
and
scas
addr16
int3
xor
(bad)
sbb
outs
stos
mov
iret
nop
ficom
xor
and
adc
stos
add
push
lahf
call
cmp
(bad)
arpl
sti
cdq
sbb
sti
cmp
jge
pop
popa
int3
int3
jmp
test
sbb
adc
dec
mov
shl
xlat
xchg
and
inc
mov
fisub
adc
bound
in
mov
(bad)
mov
sub
mov
mov
sub
inc
dec
push
sar
sbb
es
fistp
mov
jo
mov
das
jnp
dec
xchg
pop
vminps
outs
xor
call
pushf
in
cmp
sub
cdq
ffree
ret
inc
ret
sbb
(bad)
adc
retf
fldenv
ins
or
xor
add
or
push
movs
sti
add
adc
pop
ror
add
neg
or
mov
xchg
rcl
cmp
cmps
push
(bad)
push
xchg
sbb
push
mov
fisttp
jg
test
bnd
sbb
test
cld
test
arpl
mov
sbb
xchg
icebp
ret
call
cmps
rcl
ins
lods
jo
add
test
daa
mov
ret
inc
adc
addr16
call
shr
sahf
or
cli
mov
popf
aam
xchg
sbb
clc
pushf
jmp
push
add
mov
ja
add
push
jne
mov
mov
dec
jo
jns
outs
or
sub
push
jle
cmc
push
cmp
jne
inc
push
fst
push
xor
pop
cmp
xchg
arpl
dec
or
sbb
ret
aas
jns
xor
div
loope
popf
iret
ins
sbb
xchg
test
and
cmp
inc
push
fcmove
cmp
shl
ror
and
in
inc
mov
sbb
shl
mul
lock
jle
fnstenv
in
mov
sti
push
add
and
jns
mov
in
std
in
xlat
fnstcw
xchg
push
mov
add
ret
pop
leave
repz
jns
pop
pop
jbe
fs
pop
sub
xchg
push
scas
sbb
cmp
hlt
es
sbb
lods
push
inc
xor
push
add
ins
sbb
div
dec
rcr
scas
test
xchg
push
mov
fwait
lahf
(bad)
mov
rcl
cmc
add
test
fsub
mov
cli
push
(bad)
adc
ja
mov
xchg
cmp
xor
push
jecxz
xchg
sahf
or
adc
add
ret
inc
pop
mov
push
stc
mov
xor
pop
adc
ins
das
push
cdq
xchg
leave
lods
dec
pop
pushf
inc
mov
push
aam
sbb
mov
mov
xor
pop
jmp
out
inc
in
sub
out
xor
sbb
hlt
xchg
pop
mov
sbb
stc
test
and
loopne
jo
pop
inc
jo
not
jecxz
mov
sub
popa
popa
retf
movs
pop
loopne
lea
loope
push
add
aad
lds
arpl
inc
pop
das
mov
pusha
add
dec
push
test
fimul
pop
sbb
out
sub
push
dec
ret
mov
sti
daa
sbb
cmp
xchg
adc
push
scas
cmp
adc
sbb
jl
(bad)
arpl
lds
dec
cs
or
mov
sub
mov
mov
mov
loope
lea
sub
xchg
adc
ja
popa
ret
stos
cmp
dec
pop
inc
cdq
div
mov
add
mov
jp
jb
jp
cwde
add
and
out
popa
dec
cmp
(bad)
out
and
outs
repnz
adc
int3
fwait
mov
js
mov
out
popf
push
sub
lds
or
jb
sbb
sub
das
cmps
mov
sti
leave
xor
dec
inc
cmp
icebp
getsec
movs
cmp
cwde
xor
scas
pop
lods
es
or
cmp
cdq
in
movs
xchg
push
ficomp
popa
test
mov
dec
lds
pop
mov
adc
aas
jge
jmp
fstp
popf
leave
ja
frstor
jno
xchg
imul
(bad)
inc
sub
add
xor
sub
ins
retf
loope
sar
or
xor
test
nop
push
or
sbb
and
sahf
dec
pushf
xor
outs
test
call
and
(bad)
xchg
dec
ins
mov
es
xor
loopne
jge
jg
add
pop
ret
mov
jbe
movs
pusha
push
adc
pusha
mov
sub
mov
ret
mov
push
jnp
add
sbb
dec
dec
dec
xlat
mov
pop
int
and
xchg
in
fisub
xor
(bad)
mov
shr
mov
inc
sbb
cmp
mov
jmp
repnz
mov
xlat
sub
mov
xchg
add
stos
sbb
sti
movs
mov
call
popa
inc
cmp
xlat
shl
pop
mov
pop
jecxz
xor
movntps
jle
or
pop
hlt
sub
dec
mov
lock
lods
retf
push
xlat
adc
fwait
rol
mov
aaa
call
cmc
and
cwde
add
and
push
sahf
inc
xchg
mov
push
jb
mov
data16
dec
int
cdq
push
scas
clc
aas
xchg
in
add
call
push
dec
mov
jecxz
lds
cwde
aaa
sar
push
inc
adc
sbb
mov
cmp
not
sbb
pop
addr16
sub
inc
inc
jns
repz
add
xchg
in
mov
loope
jo
bound
jg
cli
mov
xchg
sbb
xor
fcomp
test
push
(bad)
out
dec
daa
iret
and
pop
fcom
and
outs
sub
dec
push
(bad)
cmps
(bad)
and
out
mov
add
ins
push
mov
out
dec
lock
sub
push
(bad)
sbb
adc
outs
pop
jno
pushf
and
adc
xchg
pop
in
mov
mov
mov
bound
sub
leave
loope
mov
(bad)
rol
cs
cli
pop
bound
rcl
rol
sub
data16
fistp
daa
jae
shr
mov
lds
mov
das
fidivr
sti
jnp
scas
stos
and
xlat
mov
push
cmp
xchg
push
xchg
mov
cmp
adc
sub
jmp
out
sub
pop
cmp
popa
ja
adc
dec
inc
std
(bad)
icebp
cmc
fild
outs
cmp
push
mov
pop
xchg
call
enter
mov
or
stos
test
adc
inc
shl
adc
adc
dec
cmp
sbb
push
xor
push
pop
inc
xchg
scas
mov
add
xchg
inc
dec
mov
in
lods
add
and
int3
mov
mov
sbb
and
shr
call
or
sub
pusha
mov
dec
xor
jne
sahf
je
sbb
jae
sti
adc
retf
lds
mov
int
mov
push
push
fld
xchg
sbb
or
xchg
xor
and
mov
cs
xchg
jo
fwait
sar
imul
jne
dec
mov
jmp
jno
xor
jmp
lds
or
stos
mov
xor
mov
cdq
lahf
and
arpl
pop
mov
cs
outs
xchg
bound
aaa
pushf
mov
ficom
test
inc
in
(bad)
(bad)
in
mov
jmp
jno
jno
jg
pop
fistp
sbb
dec
and
ins
addr16
out
xor
mov
in
test
loopne
and
cs
popa
scas
popf
sub
fmul
inc
ins
jecxz
in
add
mov
(bad)
cli
faddp
push
std
lds
cld
in
dec
cmc
retf
mov
in
ins
xchg
cmp
(bad)
push
or
pop
cmc
cmp
sbb
or
mov
daa
repz
(bad)
icebp
movs
int3
pusha
in
mov
dec
div
dec
push
test
ins
daa
sbb
sbb
jno
repz
popa
or
daa
cmp
cmps
sbb
js
push
dec
rol
xor
test
call
sbb
ds
dec
stos
xor
mov
mov
xor
mov
call
pcmpgtw
(bad)
mov
int
loopne
pop
scas
movaps
inc
in
dec
loopne
dec
hlt
popf
test
push
imul
adc
add
stos
jecxz
push
sub
fstp
test
in
xor
mov
ins
pop
outs
xor
faddp
xchg
mov
ret
adc
ror
ins
add
sub
add
sub
sbb
adc
add
int3
push
fld
mov
mov
bound
in
div
movs
push
not
dec
adc
xchg
cmps
add
fadd
ja
clc
xlat
in
ins
je
or
pop
addr16
mul
icebp
std
and
jo
cld
aad
cmp
lods
das
push
mov
push
mov
dec
and
fcmovb
push
cs
aaa
cmp
adc
sbb
sbb
xlat
mov
into
inc
(bad)
loopne
enter
nop
dec
(bad)
push
out
imul
sbb
mov
jge
adc
add
inc
push
inc
stos
loope
ins
outs
stos
jmp
mov
vmovaps
test
mov
(bad)
aaa
sbb
cmp
into
sbb
dec
pop
lods
sbb
pop
mov
ss
sbb
and
into
jle
repnz
rcr
rcl
adc
scas
and
cli
mov
xchg
push
std
adc
adc
fsub
add
add
xor
inc
dec
jp
jbe
stos
mov
rcl
xchg
mov
fcomip
sbb
cmp
dec
jb
ret
mov
std
xchg
sbb
leave
test
stos
jne
inc
stc
push
mov
pushf
mov
out
lods
imul
jg
icebp
mov
clc
push
jo
arpl
adc
jg
(bad)
jp
loope
jne
xchg
mov
pushf
out
dec
and
jl
xlat
pop
popf
adc
mov
enter
in
dec
mov
or
arpl
mov
stos
shl
aad
mov
pop
sub
xor
popf
pop
jb
xchg
test
in
cwde
and
jge
and
and
movs
xchg
jmp
or
outs
inc
jecxz
adc
lds
cmps
lahf
(bad)
mov
bound
rol
jns
xor
stc
pop
mov
mov
es
pop
add
shl
mov
or
cld
outs
mov
int
enter
test
mov
mov
mov
adc
xor
xor
mov
jo
and
lods
(bad)
mov
adc
adc
mov
jb
adc
aad
pop
adc
xchg
xor
add
cmps
lods
repz
lods
dec
sbb
int3
xchg
icebp
and
cli
dec
aas
pushf
mov
aad
sti
mov
jno
cmp
call
add
lods
and
sub
pushf
fild
rol
pop
retf
add
jns
mul
mov
mov
pop
xchg
push
rcl
outs
sbb
dec
lods
repz
xchg
jae
movs
add
xor
fimul
out
jno
sub
jbe
push
and
sub
shl
xor
addr16
outs
fisubr
pop
inc
nop
sub
jg
int
jg
mov
in
stos
out
xchg
sti
in
es
and
xor
dec
hlt
nop
sar
ret
call
pop
dec
xchg
cmps
jl
stc
and
(bad)
and
and
pop
cwd
dec
pop
outs
cmp
push
sub
mov
mov
std
cmp
popa
jo
loopne
cli
jecxz
mov
loopne
jne
pop
push
mov
add
ja
sahf
pop
cmp
mov
(bad)
movs
jg
shr
scas
enter
sar
cmp
int3
push
fld
push
pusha
sbb
test
or
adc
ja
lahf
scas
xchg
dec
aad
pushf
push
jnp
jge
arpl
in
test
out
stos
setno
sub
call
jecxz
pop
pushaw
loope
mov
out
movs
sbb
in
in
in
call
stos
inc
pop
icebp
lock
sti
dec
sti
ret
retf
stc
xchg
imul
cmp
dec
cld
xor
mov
out
mov
outs
arpl
push
es
in
fsubr
sub
sbb
inc
sti
pop
pop
call
sbb
mov
iret
dec
xor
leave
jge
adc
mov
add
cmps
mov
in
cs
sbb
lods
add
mov
pop
icebp
xor
adc
or
dec
pushf
loop
into
adc
loope
xchg
pop
imul
add
cmps
xor
pushf
jecxz
ret
mov
test
retf
pushf
xor
and
xor
in
(bad)
call
scas
lea
mov
sub
xor
cmp
test
mov
into
push
out
loopne
mov
nop
sub
mov
pop
mov
leave
jb
hlt
jae
add
xor
mov
enter
outs
cwde
cmp
cmps
xchg
loope
pusha
dec
mov
fistp
mov
pop
cmp
and
push
pop
xor
jnp
adc
neg
xor
mov
mov
in
sbb
imul
mov
push
rol
fistp
dec
sbb
stc
sbb
cmp
bnd
ins
test
mov
jnp
xchg
xchg
xor
stos
shr
mov
out
imul
push
sub
or
das
or
add
xor
js
lds
and
mov
dec
pop
mov
jge
xchg
push
mov
int
sbb
call
bound
or
fs
stos
jnp
cmc
xchg
(bad)
and
in
mov
dec
dec
es
lea
or
retf
or
pop
ret
mov
inc
or
cmps
jns
ins
aas
imul
jp
(bad)
es
cmp
into
mov
xchg
into
dec
pusha
sub
ja
push
xchg
pop
aam
add
std
(bad)
sub
mov
mov
cmp
(bad)
pop
test
in
pushf
push
into
cdq
dec
mov
iret
jmp
mov
outs
mov
xor
jmp
jmp
imul
je
mov
xor
push
cmc
xchg
mov
outs
xchg
js
push
push
add
leave
xchg
pop
add
aaa
dec
cmp
daa
and
leave
das
aam
mov
ffree
and
in
pop
pop
cmp
loope
lahf
and
into
jno
sub
jg
arpl
dec
out
aam
shl
daa
xchg
inc
adc
mov
(bad)
aaa
and
xor
xchg
scas
loope
ins
out
cmc
jo
sbb
sub
int3
pop
adc
cmp
arpl
sub
cli
pop
aad
mov
popa
jp
pop
cmp
scas
in
dec
push
mov
test
out
out
shr
call
ins
repnz
test
dec
inc
push
adc
int
nop
jno
mov
mov
aas
stc
xor
lahf
into
enter
sbb
fild
ret
mov
jns
or
or
inc
xchg
mov
pop
pop
mov
clc
add
fcom
cmps
cdq
fadd
cmp
push
push
jns
in
jb
pusha
sbb
cmps
loopne
xchg
rcl
mov
add
dec
repz
fistp
inc
clc
mov
jmp
dec
and
add
cmp
jb
shl
ror
push
pop
lahf
pop
add
es
adc
xchg
mov
mov
mov
movs
into
sar
push
(bad)
jnp
sbb
les
ds
movs
dec
cmp
and
add
push
pop
pop
jmp
push
lods
inc
imul
scas
xor
add
push
add
push
add
push
pushf
cmp
cmps
shr
dec
mov
movs
stc
push
mov
pop
clc
ins
mov
push
shl
jp
pop
xchg
cmp
dec
xchg
test
ffree
xchg
repz
retf
jno
push
fild
leave
adc
xchg
stc
int3
enter
dec
(bad)
xchg
cmps
mov
fwait
arpl
cdq
mov
mov
cmp
xchg
xchg
add
add
mov
mov
int3
bound
lahf
mov
mov
and
(bad)
cdq
sbb
push
add
xchg
jae
in
mov
jp
mov
or
pop
add
add
popa
push
inc
call
mov
sbb
sub
arpl
xor
xchg
inc
inc
fs
outs
xchg
xchg
inc
add
movs
sahf
lea
fistp
out
outs
sub
jle
pop
dec
and
movs
(bad)
std
add
dec
xor
pop
pop
jg
cwde
fnstenv
or
in
nop
scas
mov
or
leave
jge
cmps
push
push
pop
mov
in
fldenv
mov
jmp
adc
nop
bound
push
pop
dec
xor
fist
inc
es
xchg
into
jns
pop
ins
stos
push
int3
std
or
dec
inc
fsubp
or
stos
jmp
or
fcompp
aas
scas
leave
adc
dec
pop
mov
std
movs
and
jne
(bad)
jl
or
sub
adc
inc
mov
cs
mov
int
jg
xchg
fstp
(bad)
rol
mov
xchg
xlat
xor
gs
fdiv
lods
adc
pop
jle
mov
shl
sbb
fdivr
sbb
and
iret
or
dec
nop
mov
mov
cmc
jbe
bound
test
sub
movs
mov
lock
dec
lods
sub
adc
sub
xchg
mov
xor
jb
push
jp
jge
test
dec
stc
adc
mov
outs
outs
dec
sub
cmovl
lock
out
dec
adc
mov
sbb
cmp
push
loope
cmp
xor
fdivr
aad
jp
nop
mov
repz
inc
inc
dec
daa
cdq
fisubr
jge
jg
xor
pop
sbb
adc
xchg
and
arpl
add
sbb
pusha
das
add
or
xchg
ret
adc
repz
icebp
ss
shr
jns
mov
cmp
stc
pop
xor
jmp
lahf
test
push
popf
jecxz
iret
push
mov
inc
loopne
popa
aad
cli
sub
fwait
cdq
rol
mov
clc
cmp
and
fnsave
lods
jae
pop
mov
scas
mov
inc
ja
je
call
cmp
mov
cmp
jmp
cmp
shl
dec
repz
shl
mov
cmps
pop
retf
jmp
jmp
cmp
out
fwait
(bad)
loopne
add
and
mov
cmc
sub
idiv
fcomp
sar
inc
lahf
dec
mov
sbb
dec
sub
leave
fst
cld
lods
hlt
or
js
jge
shl
rol
sbb
push
sbb
ret
mov
jae
jle
dec
pop
dec
push
retf
push
lock
inc
adc
in
cmps
popa
cs
(bad)
pop
or
adc
pop
adc
aas
or
push
sar
pop
in
push
retf
cmp
cdq
and
out
in
push
dec
js
ins
imul
mov
lahf
add
inc
and
add
les
pop
sub
sahf
mov
mov
out
lea
sbb
xchg
push
jge
(bad)
fs
pop
dec
mov
lods
jg
push
mov
xchg
xchg
scas
push
jmp
or
inc
fwait
test
mov
imul
mov
cmp
sub
xchg
mov
or
xchg
es
mov
or
adc
inc
or
pop
inc
or
cld
jne
aas
scas
mov
cmp
sti
mov
fcomp
pop
loopne
into
(bad)
jb
cdq
(bad)
out
pushf
xchg
stc
xchg
popf
int3
retf
into
lds
mov
inc
inc
test
mov
or
scas
imul
mov
retf
dec
dec
int
arpl
jmp
lds
inc
jae
in
test
push
arpl
jge
sub
add
xchg
add
mov
or
icebp
ins
pop
cmp
adc
xchg
stos
and
rcr
or
ret
bound
cmp
imul
jbe
imul
shl
xchg
ja
adc
repnz
fist
sbb
loope
(bad)
cmp
loope
xlat
xor
scas
scas
mov
es
sar
les
leave
fnsave
test
or
mov
mov
shl
aaa
sbb
adc
jae
add
(bad)
outs
(bad)
jb
sub
lea
in
inc
add
stc
mov
out
add
aaa
push
mov
es
or
ins
ret
pop
dec
std
push
imul
adc
(bad)
jns
in
add
test
arpl
inc
into
mov
inc
ja
in
adc
lea
dec
jnp
dec
dec
scas
mov
(bad)
and
out
cmp
in
mov
cmp
mov
sub
inc
jle
clc
cmp
push
fs
xchg
sbb
xor
pushf
and
loope
jg
and
mov
jmp
mov
sub
gs
in
or
add
pop
push
xchg
inc
cmps
inc
pop
mov
xchg
jo
cs
inc
jp
jnp
push
imul
adc
nop
lods
scas
movs
adc
out
add
lods
in
loop
mov
(bad)
cmp
inc
jmp
les
pop
lea
jo
inc
mov
xor
and
stos
ret
xor
int
xchg
pop
in
jp
dec
sbb
out
push
shr
movs
xchg
repz
pop
ds
mov
sbb
jg
sub
xchg
mov
js
dec
call
pop
imul
push
and
jge
movs
xchg
mov
outs
in
push
and
arpl
pop
sbb
es
out
jl
gs
jnp
ret
adc
pcmpeqw
shl
imul
ins
fadd
imul
xchg
stc
xchg
(bad)
je
outs
inc
cmp
push
push
mov
int
push
dec
stos
ja
jge
pusha
mov
aaa
pop
je
jecxz
adc
imul
adc
popa
leave
mov
arpl
aam
cli
sub
or
mov
mov
push
adc
mov
cmp
xchg
test
adc
cmp
pop
fstp
lods
adc
seta
pop
xor
sti
mov
scas
imul
aam
fcmovu
xchg
xchg
ss
aaa
cmp
xor
xchg
xor
cli
daa
pop
ret
xchg
rcl
and
call
xor
scas
pushf
das
mov
jns
aad
cmps
scas
or
cmps
aad
xlat
fstp
sbb
cmc
inc
adc
mov
jae
mov
push
cdq
jmp
adc
xor
lods
push
jae
imul
popf
retf
mov
sub
sbb
mov
xchg
in
xor
xchg
sbb
aaa
mov
ror
push
frstor
pop
pusha
sbb
daa
mov
push
sbb
xchg
inc
mov
jmp
loope
pushf
fnstenv
arpl
and
lods
xor
dec
cmc
retf
cmps
push
dec
dec
gs
mov
dec
inc
push
xchg
in
push
jg
push
xchg
adc
repz
mov
xor
aaa
fnsave
jae
add
fisubr
add
ret
jge
hlt
(bad)
sbb
arpl
in
xchg
jle
test
xor
cmp
xchg
or
push
mov
xchg
cmp
pop
js
push
adc
ror
fcomp
das
dec
test
movs
jns
enter
xchg
pop
xchg
dec
lods
dec
jne
enter
aas
pop
pusha
adc
in
call
popa
push
mov
(bad)
loop
add
fwait
jp
xor
mov
out
lods
jp
jbe
arpl
xchg
cs
fimul
clc
in
test
push
push
lea
pusha
adc
dec
mov
mov
in
push
les
cld
dec
inc
mov
repnz
mov
adc
push
int3
push
push
arpl
clc
ss
mov
dec
lds
rcl
adc
mov
sbb
add
jle
sub
lods
or
mov
inc
and
cld
iret
push
call
push
ds
inc
adc
ror
inc
or
icebp
mov
xor
out
fst
lea
add
mov
fld
fcomip
jb
xor
jno
pop
mov
push
sbb
mov
lods
shr
or
aaa
push
aas
push
lock
push
xchg
test
shl
sbb
push
stos
pusha
aaa
outs
retf
dec
imul
lods
push
loop
add
dec
enter
or
jl
push
in
imul
or
mov
sti
aad
sbb
movs
mov
jmp
ret
xlat
push
(bad)
out
mov
push
mov
cmps
fldenv
aaa
sbb
mov
dec
(bad)
sbb
sahf
dec
clc
adc
push
rep
call
push
and
xor
call
das
mov
jg
pop
stos
retf
test
(bad)
cld
not
shl
push
repz
data16
dec
rcr
and
mov
in
popa
mov
dec
sbb
daa
lahf
push
xchg
lea
dec
loop
pushf
mov
mov
adc
leave
js
jns
and
mov
into
mov
push
jno
clc
pop
es
or
sub
fwait
bound
xchg
mov
dec
(bad)
mov
push
mov
std
sahf
push
ins
add
stos
in
popa
fdivp
mov
call
push
mov
inc
inc
(bad)
std
cmc
mov
icebp
pop
call
out
sar
shl
mov
or
cmp
mov
inc
ss
ja
ja
fwait
daa
daa
ja
sbb
pop
ss
mov
cmps
sub
sub
or
movs
lahf
push
adc
or
mov
dec
mov
(bad)
in
mov
xor
add
adc
add
mov
ret
cmp
push
popa
inc
jb
shl
and
xchg
out
outs
test
enter
mov
pop
sahf
cmp
fwait
adc
fist
jp
jb
push
mov
(bad)
mov
jg
pop
mov
pop
hlt
cmp
add
xor
jmp
mov
jns
adc
test
mov
pop
and
(bad)
mov
mov
nop
retf
push
xchg
dec
cmc
cmp
cmp
pop
sbb
das
sbb
scas
jl
jbe
cli
(bad)
cdq
test
fwait
es
add
in
xchg
icebp
cmc
inc
cld
cmp
sub
jbe
iret
adc
adc
and
mov
pop
into
sub
cmc
in
and
xchg
xor
add
and
or
das
adc
mov
call
and
outs
lods
and
sbb
pop
or
and
jne
jge
retf
sbb
out
inc
adc
mov
push
cmp
add
jno
pop
push
or
popa
loop
xchg
cmps
push
xor
mov
jns
inc
xor
in
(bad)
sbb
(bad)
pushf
cmc
das
adc
jo
ret
mov
imul
add
aas
mov
push
xor
push
(bad)
xchg
int3
les
sbb
add
cmp
retf
adc
clc
mov
jnp
mov
popf
(bad)
mov
dec
into
scas
adc
idiv
or
sbb
call
mov
jne
jns
inc
repz
fild
enter
and
sub
jnp
dec
neg
call
and
adc
test
es
mov
and
je
jp
and
xchg
dec
jne
sbb
cmps
push
sbb
ffree
iret
cli
push
push
mov
push
imul
mov
xchg
(bad)
retf
and
in
stos
sub
jp
outs
xor
dec
and
add
outs
mov
sub
gs
push
arpl
lahf
arpl
add
pushf
mov
xor
daa
(bad)
mov
and
jp
and
es
popa
std
cmp
xchg
pop
cwde
clc
jne
pop
(bad)
and
dec
js
test
les
sbb
pusha
push
ins
inc
xor
ins
jne
dec
mov
repz
test
ss
js
in
and
rol
pop
or
iret
mov
lods
clc
adc
hlt
mov
jmp
add
or
mov
dec
xchg
sbb
cmc
xor
test
cdq
or
rcl
shl
inc
mov
(bad)
test
leave
sbb
dec
(bad)
shl
cmps
and
inc
and
mov
sbb
dec
mov
jle
fiadd
adc
lahf
push
lods
sti
jb
shl
loop
add
inc
ja
push
fs
mov
jmp
sar
cmps
add
mov
cmp
stos
lods
ret
fild
inc
fsub
push
popf
mov
cmps
fcmove
cwde
das
cmc
outs
mov
fidiv
or
mov
push
mov
mov
stc
jnp
adc
je
mov
sub
imul
dec
in
mov
clc
fs
xor
outs
dec
push
and
int
int3
mov
loopne
jmp
pop
pop
inc
sahf
mov
dec
mov
pop
dec
fadd
ss
fstp
sahf
scas
xor
jmp
lea
(bad)
iret
and
lock
shl
push
push
into
repz
push
sbb
rcl
fisub
shl
shr
fs
push
mov
pushf
xor
call
cli
pop
clc
pop
call
out
xlat
dec
repnz
bound
push
cmp
scas
xor
out
test
stos
sbb
and
xchg
loop
add
cmp
test
(bad)
sar
div
and
sub
sbb
xor
xchg
push
es
jp
xchg
ret
fmul
xor
cli
mov
scas
and
(bad)
jbe
xor
adc
sub
repz
pop
jbe
jbe
push
mov
mov
std
push
adc
scas
pop
xor
mov
inc
gs
outs
xchg
xchg
jo
mov
xchg
js
mov
addr16
add
adc
ror
clc
in
xor
xor
stos
pushf
hlt
stc
adc
imul
shr
lock
and
rcr
les
jb
cmc
xchg
mov
in
pop
out
jle
pop
sub
mov
jp
nop
mov
imul
jmp
dec
int
ror
jne
in
xor
cwde
mov
sub
push
push
(bad)
js
jp
test
xchg
xchg
jmp
aas
jmp
dec
cmp
inc
xor
jle
(bad)
(bad)
jne
jno
cmp
jmp
jne
or
retf
mov
adc
and
lock
imul
into
cmp
xchg
sahf
sub
vmread
icebp
dec
jnp
ins
lds
dec
and
fs
stos
repnz
sbb
adc
outs
mov
test
mov
xchg
mov
cmc
fcmove
inc
loope
retf
jns
out
fcomp
jns
je
jo
push
cdq
in
ja
or
inc
add
cmps
mov
cwde
popf
adc
jne
repz
clc
ds
push
addr16
push
inc
cmp
push
jmp
dec
or
aam
cwde
xchg
push
test
dec
dec
pop
ficom
fiadd
or
rcl
mov
mov
dec
retf
movs
mov
inc
in
jnp
dec
data16
jno
shr
daa
(bad)
das
int3
inc
xor
push
dec
jg
cld
xchg
mov
arpl
adc
popa
xchg
inc
push
or
mov
ins
jle
lock
ds
shl
cdq
sbb
cmp
xchg
lea
rcr
daa
ja
xlat
int
adc
imul
cld
mov
lea
test
push
sbb
cdq
fs
xchg
aaa
lods
imul
mov
jp
lods
push
(bad)
mov
sub
mov
jp
fidivr
repz
xor
scas
jnp
and
push
xor
xchg
add
add
cmp
je
inc
jno
daa
xchg
inc
outs
in
sbb
lods
mov
push
mov
pusha
movs
push
stc
sbb
mov
bound
imul
popf
leave
cmp
test
sbb
call
lods
cwde
adc
idiv
out
jle
mov
(bad)
jl
je
or
dec
jmp
adc
ins
mov
ins
xor
rcr
mov
repz
ss
shr
sub
mov
arpl
mov
dec
xchg
adc
stos
mov
iret
mov
and
in
bound
sub
(bad)
in
pop
aad
stos
push
and
or
icebp
shr
adc
push
repz
push
ret
mov
gs
dec
push
sbb
mov
in
push
and
and
std
call
mov
dec
test
std
pop
retf
out
ins
das
fadd
(bad)
adc
xchg
dec
ret
dec
inc
xchg
xor
add
mov
mov
loope
mov
xchg
cld
test
xchg
lahf
mov
addr16
xor
fidiv
xor
dec
cmps
push
xchg
cmps
dec
mov
movs
test
xchg
add
aad
mov
and
push
daa
push
iret
sub
adc
push
lods
cs
inc
add
push
sub
jmp
or
jle
xor
xchg
jmp
pop
aaa
push
(bad)
inc
or
dec
mov
and
mov
mov
aad
xchg
sbb
div
(bad)
(bad)
ss
push
pop
or
cmp
stos
movs
xchg
push
push
scas
xchg
call
loopne
or
loop
scas
sbb
mov
sbb
jp
pop
dec
push
adc
mov
in
inc
sub
repnz
cmovbe
xchg
imul
fcmovnbe
pop
mov
push
dec
(bad)
les
mov
pop
cmp
mov
or
sbb
movs
or
push
inc
xor
ret
adc
test
mov
xchg
and
dec
ret
(bad)
hlt
jl
test
sbb
adc
es
pop
repnz
scas
add
cli
or
int
dec
retf
lock
mov
cmp
ins
imul
retf
scas
pop
test
jecxz
mov
xchg
lea
(bad)
ds
je
sbb
retf
call
das
inc
call
mov
nop
mov
pop
mov
push
sub
sbb
and
in
sub
adc
and
fcomip
sbb
(bad)
movs
inc
dec
push
xchg
pop
fist
hlt
and
mov
inc
adc
addr16
inc
pop
mov
clc
or
mov
sub
mov
jmp
test
add
fidivr
mov
xchg
data16
cmps
scas
in
push
pop
rcr
xchg
pop
and
in
movs
mov
imul
sbb
lods
retf
jg
mov
outs
mov
inc
sar
adc
mov
addr16
movs
imul
ds
sbb
pushf
add
ror
inc
stc
je
jo
icebp
movs
lds
sbb
js
cs
in
mov
jecxz
sub
cmp
in
popa
pop
ss
and
sti
cmp
ror
xchg
dec
stos
rcr
pop
push
out
les
xchg
mov
or
cmc
rol
xor
int
stos
add
jmp
jno
mov
fnsave
std
mov
xor
gs
push
icebp
pop
dec
sbb
push
push
fst
push
lahf
sub
add
cmps
or
and
mov
out
(bad)
fbld
pop
retf
inc
sub
and
mul
pop
cwde
and
dec
xchg
dec
pop
sbb
mov
shr
outs
std
pop
xor
pop
bound
jne
mov
pop
retf
sbb
xor
(bad)
xchg
hlt
(bad)
jo
cmp
push
mov
stos
dec
sar
pop
mov
jg
push
imul
iret
jg
jbe
lock
sar
push
icebp
shr
mov
seta
push
pop
cmp
mov
retf
mov
nop
ret
lods
xchg
xchg
jo
ds
pop
sub
sahf
scas
fdiv
jb
in
imul
ret
imul
push
scas
pop
or
bound
inc
xor
ret
int
mov
lods
loope
pop
pop
pop
sahf
add
adc
xor
pop
test
add
in
sbb
fdivr
repz
cmc
(bad)
arpl
cld
inc
popf
lods
push
push
fild
xchg
into
or
sub
das
call
push
std
push
add
xor
repz
add
mov
fldcw
xor
sahf
and
mov
pop
stos
xchg
ficomp
or
js
mov
sub
in
sub
test
jno
sub
cmp
lods
ins
sub
mov
cwde
push
mov
add
inc
iret
jns
cmp
adc
mov
js
sti
mov
inc
scas
push
lahf
repz
out
jmp
sbb
jb
mov
push
mov
xor
jmp
jp
rcr
js
cmc
jecxz
das
sar
cmps
dec
imul
loop
stc
lea
sub
adc
sbb
stos
das
mov
push
mov
iret
push
(bad)
frstor
inc
or
pop
inc
cmp
(bad)
(bad)
daa
mov
push
xchg
inc
or
xor
add
in
cmc
lds
jge
mov
sub
mov
repnz
sar
call
cmps
xchg
dec
mov
pop
mov
cdq
or
xor
and
mov
add
retf
ins
and
fnstenv
aaa
lock
pop
cmp
sub
shr
xor
mul
dec
out
scas
(bad)
js
and
sub
rol
fnstsw
imul
cli
jno
in
jmp
sbb
int3
pop
int3
in
in
test
cmp
or
jne
shl
daa
push
repnz
inc
jle
les
cmp
and
iret
dec
jne
push
mov
push
mov
movs
mov
sti
dec
outs
retf
ja
xor
or
cdq
sbb
loop
ins
jg
rcl
and
and
inc
push
push
(bad)
mov
jbe
pusha
mov
ins
sub
or
mov
add
xchg
cmp
mov
fistp
fs
out
sbb
dec
inc
fst
mov
cli
dec
(bad)
lock
addr16
xchg
add
xor
xor
call
xor
mov
dec
inc
stos
sbb
les
sub
jnp
adc
(bad)
and
xor
retf
scas
sub
mov
outs
cs
and
add
mov
icebp
bound
and
pushf
(bad)
out
cmp
fsub
das
aaa
cmp
imul
pop
cmp
xchg
aas
mov
push
inc
hlt
(bad)
inc
imul
outs
add
daa
jl
pop
out
loope
adc
pop
inc
jb
adc
test
stc
mov
loope
(bad)
dec
stc
or
dec
push
enter
ins
movs
repz
stos
inc
push
jecxz
repz
cld
popa
shl
adc
inc
sub
pushf
jno
adc
inc
adc
pusha
inc
ja
les
push
pop
jle
ds
adc
ins
enter
pop
adc
mov
add
xchg
push
dec
icebp
push
pop
and
push
mov
outs
imul
int
push
imul
lock
xchg
adc
imul
jnp
jg
inc
jne
pop
inc
repz
jmp
pop
cmp
and
sar
inc
test
jmp
cwde
retf
add
mov
test
fdivr
scas
enter
imul
fisttp
imul
test
pop
inc
or
mov
test
mov
(bad)
cmovp
test
cld
mov
rol
les
js
pop
in
cwde
popf
dec
xchg
(bad)
out
dec
add
jb
enter
sub
xor
sti
es
mov
in
push
loopne
cwde
add
xchg
inc
cli
arpl
outs
nop
std
cmp
bound
mov
push
sbb
lods
enter
mov
outs
or
les
repnz
cmp
mov
push
lea
ss
aaa
repz
mov
push
mov
cli
cdq
call
fldenv
das
adc
cmp
or
loope
ret
jnp
mov
adc
enter
cs
adc
sbb
add
sbb
push
mov
jp
or
pusha
repz
adc
inc
pop
outs
mov
push
sub
retf
push
hlt
je
mov
jecxz
adc
pusha
icebp
dec
imul
dec
jl
xchg
or
push
push
add
xchg
pop
out
xor
stc
movs
les
mov
dec
sbb
test
jmp
(bad)
lock
jno
sub
adc
or
pop
xor
dec
sahf
daa
jnp
fadd
push
(bad)
xchg
out
in
add
inc
cli
sti
inc
pop
jl
adc
repnz
xchg
add
dec
retf
mov
popf
jbe
and
sub
(bad)
jbe
fnstcw
icebp
and
aad
or
jno
add
mov
or
into
int
jbe
popa
cwde
sub
data16
mov
mov
cli
out
xchg
fist
aam
dec
loope
push
mov
pusha
push
lahf
push
jne
daa
add
loope
fist
or
loope
(bad)
(bad)
push
xchg
ins
mov
dec
call
int
test
mov
(bad)
std
sub
(bad)
mov
xchg
xchg
jge
arpl
fidiv
lods
cmp
jmp
mov
cmps
inc
data16
int
mov
xchg
aas
mov
jge
arpl
fmul
stos
fwait
inc
inc
jle
das
jno
aad
jns
push
out
fld
repnz
test
add
mov
or
sub
stc
fbld
data16
movs
push
add
mov
adc
xchg
jne
mov
xchg
test
imul
jmp
inc
mov
inc
add
pusha
repz
cwde
xchg
addr16
add
mov
mov
or
adc
push
push
xor
movs
jge
(bad)
test
dec
cmp
neg
outs
push
mov
pop
ffreep
add
call
or
or
mov
jno
movs
fwait
push
jb
shl
loop
(bad)
aad
add
das
jne
sti
mov
cdq
neg
and
push
sar
cmp
daa
arpl
dec
movs
or
add
and
movs
cdq
add
dec
test
aam
mov
cmc
(bad)
dec
dec
leave
shr
adc
mov
dec
leave
fcomp
cs
not
test
cmp
push
loopne
jecxz
mov
js
mov
jg
(bad)
and
sbb
in
push
mov
jnp
push
(bad)
scas
ret
inc
adc
test
mov
inc
repz
dec
iret
adc
inc
sbb
jecxz
sbb
pop
sbb
sahf
in
rol
sub
add
pop
cmp
lock
or
pushf
call
jbe
sbb
int
mov
in
dec
in
mov
lods
mov
pop
jmp
mov
sbb
sbb
mov
xor
pop
add
pop
in
or
out
ins
(bad)
xchg
push
or
lahf
rcr
icebp
dec
sbb
sub
pop
mov
dec
popa
xor
aad
dec
jb
movs
(bad)
scas
push
popf
inc
add
test
test
popa
mov
idiv
push
imul
jge
jge
push
cdq
test
mov
sar
sub
shl
push
xor
dec
xchg
jecxz
std
cmps
jae
aas
pop
shl
dec
adc
pop
div
dec
repz
cs
pop
mov
mov
inc
xchg
xchg
or
hlt
leave
mov
fwait
jle
inc
iret
mov
add
outs
addr16
adc
add
cmc
or
inc
(bad)
adc
in
xor
pop
pop
adc
jns
out
jns
push
loop
mov
or
lds
inc
jp
xchg
neg
cmc
jecxz
loopne
xchg
inc
and
scas
loope
pop
fnstsw
dec
sbb
sar
adc
push
mov
retf
xor
test
push
jnp
jmp
mov
sbb
add
push
inc
int3
in
js
xor
outs
add
call
lea
adc
sub
xlat
imul
jl
mov
adc
sbb
(bad)
test
cmc
jge
movs
cmp
sbb
mov
icebp
dec
mov
loop
jg
xchg
and
enter
pop
(bad)
retf
and
hlt
mov
cld
cmp
hlt
push
jae
sbb
adc
sbb
pushf
leave
pop
loop
sti
ins
dec
pop
fadd
pop
lods
jae
mov
cmp
fwait
adc
mov
cmps
or
imul
rol
stc
popf
ret
xor
push
pop
imul
adc
gs
nop
pop
xchg
sub
cmps
cmp
or
lock
jbe
call
cdq
dec
sbb
pop
int3
in
push
addr16
mov
js
adc
inc
sub
mov
xchg
mov
repnz
xchg
(bad)
jns
sub
aad
call
and
frstor
(bad)
gs
pop
sbb
aas
pop
fs
lods
sbb
or
or
aaa
ret
lods
cmp
cmps
ror
or
fiadd
or
movs
(bad)
fisttp
mov
and
dec
movs
aam
xor
das
(bad)
mov
mov
retf
(bad)
shl
cmc
push
(bad)
pop
call
std
add
(bad)
pop
fnstcw
mov
(bad)
mov
push
dec
popa
stc
shl
xor
dec
push
pusha
ret
jns
sub
shl
mov
sahf
xchg
in
and
inc
jl
fisttp
mov
stos
dec
aad
das
movs
jmp
mov
scas
inc
sub
add
sub
xor
sahf
and
mov
and
push
mov
push
iret
add
pop
mov
xchg
or
push
fldenv
aam
or
pop
and
mov
dec
je
lahf
cli
or
mov
mov
jge
or
pop
adc
scas
mov
inc
adc
push
movs
(bad)
loope
ret
push
mov
dec
(bad)
mov
mov
fcmovnu
sbb
cmps
add
lock
imul
retf
fdiv
(bad)
adc
sbb
jbe
jp
sahf
aam
mov
push
cmp
pop
ret
jo
int3
push
sub
movs
mov
adc
cmp
mov
jp
pop
shl
call
ins
mov
xchg
adc
imul
es
daa
sti
out
push
inc
jo
popf
enter
push
ds
je
mov
sti
scas
jecxz
test
repz
call
outs
push
sub
repnz
adc
inc
jae
inc
jp
mov
inc
push
aas
jmp
dec
aaa
repnz
and
dec
xchg
and
(bad)
push
inc
in
pop
pop
mov
sub
and
cld
add
push
xchg
sbb
cmp
shl
inc
dec
sub
pop
aam
pop
ficom
jmp
dec
xor
mov
pusha
aam
mov
xor
sbb
arpl
and
and
mov
mov
bound
and
in
mov
inc
mov
xchg
nop
cmps
push
push
scas
clc
pop
add
dec
in
pusha
sub
mul
inc
les
arpl
or
out
cmp
nop
loope
fbld
lods
test
push
mov
jbe
sbb
ret
add
jmp
xorps
dec
ret
mov
and
iret
dec
ror
gs
ret
sub
xchg
ret
std
lock
pop
(bad)
test
sbb
add
and
mov
ins
or
sub
pusha
pop
in
cmp
sub
out
sbb
cmps
or
into
cs
idiv
fldenv
pop
aas
xor
test
pop
pop
pop
fst
pop
into
adc
sub
jp
sbb
pop
sahf
pop
icebp
push
adc
xchg
or
cwde
or
jmp
fmul
mov
jmp
mov
and
pop
xchg
push
and
jns
mov
cdq
loop
cs
or
scas
stos
call
cmp
mov
push
mov
fs
cmp
div
pop
pop
arpl
repnz
loope
nop
push
adc
fiadd
inc
stos
sub
mov
sub
lods
repz
jnp
xchg
inc
xchg
cwde
dec
dec
xchg
inc
xchg
inc
push
xor
pop
jmp
js
mov
leave
and
pop
clc
push
cmp
sahf
pusha
sti
scas
xchg
ins
in
xchg
pusha
mov
add
outs
or
data16
fcom
sub
fs
xchg
and
addr16
xchg
push
movs
add
(bad)
sub
and
cmp
inc
mov
(bad)
shl
cli
cmps
mov
jb
add
pop
inc
(bad)
cmp
pop
dec
push
fnstcw
dec
add
jne
inc
(bad)
cmps
sahf
xchg
mov
push
mov
jge
dec
inc
push
inc
xor
mov
dec
mov
add
jp
dec
in
shl
fiadd
pop
aam
mov
push
dec
pop
mov
cwde
dec
dec
mov
mov
push
mov
or
dec
sbb
sub
mov
loop
add
rcr
pop
scas
enter
stc
mov
xor
or
xchg
clc
sti
inc
sbb
shl
mov
mov
or
or
push
scas
adc
shr
ins
imul
fstp
xlat
pop
fldenv
mov
jecxz
mov
fsubr
mov
xor
pop
push
repnz
jb
dec
dec
arpl
sti
jnp
xchg
inc
test
idiv
and
push
lds
or
push
cmp
(bad)
fldenv
pop
cld
shr
jge
stos
fstp
cld
pusha
or
cmp
pusha
mov
stos
fsubr
jge
dec
scas
pushf
in
dec
(bad)
mov
adc
inc
xchg
dec
pushfw
xchg
pop
jnp
mov
stc
scas
js
pushf
fwait
inc
ins
sub
mov
cdq
test
in
mov
pop
sub
xchg
outs
bnd
dec
dec
outs
cmp
adc
pusha
xor
adc
mov
retf
inc
jbe
(bad)
in
cmp
int
out
or
fadd
jecxz
mov
mov
js
int3
xor
es
lods
into
pushf
push
jnp
sub
adc
mov
sub
jp
fucomp
mov
psrlq
inc
nop
add
fidiv
dec
add
dec
push
mov
sbb
out
push
icebp
adc
cmp
jno
or
(bad)
in
sub
xlat
test
and
jmp
dec
(bad)
push
(bad)
call
sbb
(bad)
jge
out
sti
loope
inc
movs
fbstp
push
es
mov
jns
mov
fcom
adc
(bad)
popa
outs
cwde
mov
bnd
cmp
xlat
(bad)
sbb
mov
or
jg
and
xor
and
jns
mov
in
jne
mov
shl
adc
and
or
dec
cwde
loopne
and
stos
jno
arpl
test
lds
sbb
push
lar
(bad)
jmp
movs
xchg
movs
ror
clc
shl
lds
jne
arpl
rcr
shl
add
ret
mov
adc
outs
loope
ja
push
in
xor
loopne
out
jne
cmp
cld
adc
mov
mov
into
add
stos
mov
push
mov
sti
lahf
or
shr
das
dec
int
mov
test
stos
imul
sub
dec
sbb
in
sub
mov
add
adc
push
retf
push
int3
js
xchg
stos
xchg
icebp
inc
and
push
ret
cs
mov
add
mov
hlt
jl
jmp
xchg
cmp
in
add
(bad)
and
cld
cmp
cmp
pop
add
mov
xchg
jecxz
dec
dec
mov
in
mov
jns
sub
jecxz
mov
jecxz
lds
ins
push
(bad)
leave
jmp
lea
lock
sbb
mov
sub
and
xchg
sar
xor
xor
cmp
jns
sar
aam
mov
sti
xchg
repnz
loope
cmp
push
data16
imul
pop
dec
ds
add
out
fisub
es
sub
popa
add
mov
js
cld
push
les
test
inc
popa
or
sub
jmp
pop
add
(bad)
les
gs
cdq
stc
dec
mov
imul
clc
push
cmp
cmp
imul
and
test
xor
test
sub
bound
and
lods
sbb
and
mov
and
inc
(bad)
jo
jns
enter
dec
sub
dec
stos
mov
call
dec
and
inc
stos
rol
pop
pop
adc
(bad)
call
cli
xchg
mov
jecxz
test
mov
xor
repnz
jb
xchg
enter
daa
adc
pop
in
mov
jmp
pushw
clc
xor
or
sahf
popa
outs
xchg
mov
mov
jmp
or
fisttp
sahf
les
mov
xchg
sbb
jmp
inc
adc
xchg
add
scas
adc
or
add
or
daa
mov
rol
pop
mov
je
cmp
dec
mov
sti
imul
lock
mov
adc
pop
pop
movs
sbb
sub
repnz
xchg
icebp
addr16
scas
xor
jae
scas
sub
rcl
movs
outs
ins
xchg
jecxz
fwait
add
sar
mov
sbb
js
mov
nop
xchg
cmp
in
inc
mov
or
adc
retf
dec
adc
vmaxss
enter
pop
xchg
adc
int3
sub
in
cmp
jmp
sbb
dec
push
xor
push
(bad)
shr
hlt
mov
push
ret
enter
fld
pop
js
xor
mov
inc
mov
xchg
das
mul
push
fmul
pop
(bad)
in
sub
sbb
jmp
and
xchg
and
ds
js
data16
inc
lds
mov
cmps
je
xchg
jp
pushf
gs
dec
cwde
dec
iret
inc
jmp
jns
aad
arpl
xchg
jo
pop
pop
mov
sti
pop
xchg
and
mov
stos
cwde
outs
mov
inc
or
pushf
dec
dec
sub
sahf
mov
xchg
dec
sahf
pusha
cmp
mov
xchg
mov
sbb
clc
xor
rol
adc
hlt
adc
mov
lahf
and
fadd
(bad)
jno
xchg
repnz
pop
pop
push
leave
sub
fsub
and
test
jnp
mov
push
or
jae
xor
into
aas
and
xlat
push
or
inc
in
mov
(bad)
in
dec
(bad)
(bad)
ss
out
inc
mov
loopne
imul
xor
dec
outs
scas
das
xlat
pop
add
in
cmp
call
outs
jmp
fisubr
mov
sub
and
sbb
pop
or
fidivr
fsubrp
ror
je
aaa
pop
jecxz
cmp
hlt
shl
add
fwait
jmp
jmp
pop
add
adc
ins
jmp
push
or
out
add
fidivr
xchg
std
psllq
(bad)
out
xor
bound
xor
fnsave
(bad)
push
out
test
test
popa
loop
sar
mov
inc
push
vmaxsd
inc
call
mov
dec
cmps
jbe
fwait
in
shl
mov
mov
jmp
add
add
(bad)
xor
or
mov
dec
xchg
push
js
mov
daa
mov
xchg
sub
in
(bad)
cdq
cmp
clc
pop
mov
mov
adc
mov
sbb
jl
outs
nop
ins
inc
aaa
retf
ss
dec
pushf
test
mov
js
imul
sti
xchg
cmp
mov
xor
into
pop
out
xor
add
test
add
fnstenv
sti
outs
add
xor
maxps
cli
out
cmp
xchg
push
or
mov
mov
aaa
icebp
out
call
fimul
fs
xchg
push
push
call
sbb
push
adc
mov
scas
test
and
inc
jecxz
xor
xor
adc
cmps
fisttp
shl
in
fadd
jg
ror
or
icebp
test
ret
sbb
mov
pop
mul
sub
aas
xchg
leave
rcr
(bad)
mov
(bad)
cmc
frstor
sub
push
(bad)
movs
push
xor
ss
pop
gs
cli
icebp
dec
not
adc
or
clc
mov
rol
and
jb
jnp
lea
dec
ss
aam
add
push
sti
dec
cmps
jnp
lea
jne
xlat
mov
aaa
out
ins
inc
pop
dec
test
cmp
adc
add
pop
test
movs
inc
cwde
xor
idiv
out
jmp
xchg
inc
(bad)
in
cwde
or
fistp
push
hlt
retf
aad
inc
jl
pop
test
xchg
ja
ror
mov
mov
mov
cld
pop
pusha
mov
rcl
iret
mov
add
leave
cmp
rcl
enter
lahf
sub
xchg
pop
loopne
jo
push
icebp
mul
xchg
sbb
sub
jae
cdq
in
nop
scas
hlt
add
(bad)
xor
ins
pop
sub
dec
retf
stos
add
fwait
cli
icebp
xchg
ins
(bad)
fneni(8087
cmovo
(bad)
cli
dec
loope
addr16
cmp
sub
mov
pop
cmps
cwde
les
loope
pop
inc
cld
test
xchg
stos
scas
leave
lahf
lods
mov
add
shr
loop
push
pusha
mov
and
and
cmps
sub
cmp
adc
sub
add
cmps
loop
inc
hlt
mov
sar
sub
jno
outs
cmp
mov
or
inc
cld
addr16
or
or
jne
xor
add
in
add
inc
push
cmp
cwde
pusha
popf
pop
or
mov
out
or
add
popa
mov
jb
(bad)
icebp
mov
aas
dec
adc
push
mov
sub
not
push
jb
es
and
nop
jne
cdq
and
adc
and
fiadd
ss
mov
mov
push
xchg
fbld
in
add
sbb
test
mov
jb
jge
outs
push
dec
(bad)
mov
cmp
adc
lods
dec
stos
jno
call
or
xchg
push
add
dec
mov
xchg
cli
sub
ins
jb
jb
sbb
pop
pop
cmp
cmps
ds
in
xor
mov
fmulp
retf
outs
test
push
sbb
jo
sbb
sahf
psubd
push
sbb
mov
pop
mov
cmp
xchg
iret
xlat
dec
and
into
add
xchg
and
cmp
mov
sbb
jecxz
imul
mov
cmp
pushf
mov
or
mov
sbb
shl
cmp
mov
inc
in
stos
aam
in
jp
dec
(bad)
loope
push
push
imul
xchg
and
out
test
idiv
or
mov
jno
lock
or
or
cmp
xchg
sar
adc
adc
(bad)
xor
nop
clc
mov
std
mov
mov
mov
xor
sbb
fst
and
xchg
jmp
cmp
js
call
add
pop
test
(bad)
mul
push
push
and
dec
lahf
cli
shr
xor
xchg
ins
cmps
gs
in
ins
mov
pop
leave
mov
fdivr
mov
sbb
sbb
jne
mov
mov
or
add
mov
cs
mov
and
add
ds
push
int
in
pop
dec
outs
push
sbb
popf
movs
cli
movs
add
adc
(bad)
or
iret
out
arpl
or
inc
dec
fidiv
in
(bad)
lods
loop
mov
enter
jle
mul
cmp
repz
pop
ins
mov
dec
out
inc
neg
adc
cmp
(bad)
fcom
or
das
out
sub
dec
ss
jne
js
mov
out
and
data16
or
xchg
ja
enter
xor
icebp
xor
pop
mov
mov
xchg
jmp
retf
pop
adc
jle
jg
jno
fnstenv
jl
mov
cmp
out
fdivr
cmps
dec
mov
in
sbb
fadd
sub
mov
pop
xchg
cmp
dec
xor
jmp
sub
ret
movs
xor
gs
(bad)
pop
data16
out
push
mov
fist
std
add
sbb
ficom
jbe
movs
test
mov
pop
mov
push
jmp
dec
les
cmp
mov
or
stc
lahf
cli
cs
shl
imul
ja
add
sbb
js
push
cmc
mov
and
jbe
mov
pop
sub
test
mov
push
inc
push
sub
xor
dec
or
xor
pop
movs
and
add
sti
dec
scas
adc
fdiv
push
ffree
sbb
cmp
(bad)
addr16
sub
mov
imul
inc
mov
ins
rcl
pop
push
pop
jle
push
adc
mov
jmp
aam
and
rcr
not
repnz
mov
inc
fsub
leave
fistp
fdivr
lods
stos
pushf
sub
dec
or
mov
or
bound
push
xchg
inc
mov
or
jecxz
inc
adc
loop
jne
xchg
inc
jmp
arpl
jnp
gs
aad
sar
icebp
dec
sahf
jnp
jns
xchg
std
sub
mov
repnz
sbb
jmp
jbe
enter
xor
fdivr
sub
xor
cdq
addr16
push
xchg
cmps
movs
outs
cmps
xor
gs
mov
inc
test
pop
xchg
js
mov
xlat
lock
adc
mov
or
(bad)
adc
ror
cs
outs
push
xchg
jl
sbb
xchg
dec
cmp
aam
jecxz
push
(bad)
ins
ret
cmp
ja
push
das
in
out
or
out
es
js
jge
inc
jno
mov
iret
movs
shr
mov
mov
or
addr16
mov
sbb
js
xchg
inc
std
dec
jmp
jno
sub
iret
mov
fsubr
lahf
push
sti
push
pop
mov
cmp
(bad)
imul
ror
inc
outs
outs
out
ret
data16
dec
movs
div
sub
xchg
jnp
pushf
mov
sbb
xchg
data16
imul
loope
pop
lock
jns
in
add
inc
rcr
rcr
ret
out
fld
lahf
cmp
dec
lods
push
dec
sar
fs
shl
fld
popa
les
pop
lds
retf
push
sub
jne
mov
xchg
lods
jns
addr16
mov
or
sbb
dec
lods
add
inc
fwait
jne
leave
mov
jmp
fwait
cld
mov
les
out
sar
icebp
mov
data16
bswap
xor
mov
sbb
or
xchg
push
cmp
adc
mov
sub
jmp
inc
test
stos
sbb
out
push
std
mov
data16
xchg
loopne
jl
dec
dec
mov
sub
push
mov
test
lds
cmps
jmp
push
or
and
push
push
cld
and
inc
pop
mov
loop
pop
add
push
cmp
mov
adc
sbb
in
int
ja
sub
and
iret
fdiv
lea
fcom
ja
xor
test
pop
push
inc
aad
daa
mov
xlat
test
pop
sub
test
clc
jb
lods
sbb
sbb
popa
cld
or
push
pop
fiadd
hlt
(bad)
neg
push
push
jge
mov
cwde
mov
pushf
cmp
mov
mov
loopne
lea
adc
sbb
ds
inc
dec
or
ret
inc
mov
xchg
jecxz
xchg
(bad)
and
mov
jmp
add
jl
cmp
sub
les
icebp
ror
cmp
inc
xor
jno
hlt
add
popf
sti
mov
loop
clc
(bad)
scas
xchg
je
push
jge
inc
in
or
loopne
cmp
adc
xchg
cmp
cld
pushf
fidiv
shl
adc
and
push
or
inc
ins
fmul
add
mov
push
inc
pusha
cmps
lea
lea
mov
repnz
sar
inc
or
adc
xor
xor
lods
fadd
dec
cdq
dec
adc
call
outs
inc
(bad)
jecxz
int
jb
arpl
and
jb
inc
jns
bound
stc
mov
arpl
jno
imul
imul
retf
test
add
jno
jp
push
mov
inc
pushf
js
sub
out
push
add
push
pop
sbb
mov
cdq
sbb
fdivr
inc
fbld
ss
fsubr
(bad)
and
cwde
mov
test
push
je
daa
mov
ror
jp
(bad)
stos
ja
inc
das
adc
rol
inc
cwde
dec
sbb
xchg
call
sbb
out
and
cdq
out
mov
jmp
iret
xchg
repnz
xchg
outs
not
iret
push
imul
jmp
rcl
dec
loopne
inc
push
mov
fsubrp
mov
stos
jecxz
xchg
enter
dec
inc
mov
fcmovnu
sahf
sbb
jle
sub
rol
jl
(bad)
hlt
push
push
int
mov
jmp
ins
pop
xchg
and
shl
fdiv
arpl
lea
or
pop
daa
and
lahf
xchg
in
cmp
mov
sahf
sbb
sbb
imul
inc
mov
adc
test
int3
in
jae
sub
mov
xor
sar
lods
in
(bad)
dec
out
cdq
sti
loop
cmp
int3
retf
adc
dec
inc
test
adc
fdivr
or
inc
(bad)
jae
mov
aaa
adc
dec
(bad)
mov
retf
push
scas
fsubp
loope
push
icebp
mov
out
(bad)
sbb
std
mov
ret
xlat
push
sub
test
jb
mov
loopne
into
mov
push
xchg
and
hlt
retf
inc
dec
(bad)
enter
mov
inc
jl
shl
mov
fdiv
fs
mov
sub
xchg
and
fcmovb
mov
in
mov
and
inc
test
pop
out
ror
pop
rol
inc
dec
push
dec
arpl
in
cli
dec
stos
pop
xchg
addr16
in
mov
fbstp
outs
cli
jecxz
movs
cmp
dec
mov
dec
push
add
repz
dec
or
into
out
jns
stos
mov
jo
xor
out
dec
sbb
adc
and
mov
clc
repz
mov
out
in
mov
mov
lds
mov
push
fld
mov
jmp
push
or
test
(bad)
je
and
mov
pop
scas
adc
inc
in
mov
and
xor
push
xor
mov
lea
mov
dec
sbb
adc
push
inc
shl
repz
and
adc
inc
mov
cs
mov
and
xchg
adc
sbb
dec
movs
dec
mov
sub
xlat
sub
ficomp
and
sbb
inc
shr
dec
aad
shl
loopne
mov
aam
push
mov
mov
sub
ret
pop
mov
scas
pop
adc
mov
pushf
popa
test
scas
mov
inc
rol
lahf
add
je
sbb
mov
sub
sti
inc
inc
lahf
or
cmp
xchg
mov
test
daa
pop
inc
or
sbb
jmp
in
jge
lods
xchg
mov
push
jp
outs
shr
or
ret
xchg
(bad)
js
mov
dec
sbb
cmp
mov
dec
adc
mov
clc
pop
loop
shr
cmp
shl
movs
adc
xchg
pop
dec
push
mov
xchg
lods
into
pop
push
retf
stos
outs
xor
mov
mov
imul
movs
aad
push
cmp
out
dec
data16
sbb
ds
inc
xchg
mov
pop
mov
jnp
dec
loope
push
xchg
pop
cwde
xchg
mov
mov
cdq
xchg
fistp
sbb
push
out
or
inc
cmc
push
sbb
pushf
bound
cmps
in
mov
xchg
loopne
lods
or
in
push
ret
dec
jecxz
push
mov
sub
lahf
div
dec
xor
mov
outs
pop
jmp
or
and
pushf
nop
stos
jae
sahf
xor
iret
pop
pusha
test
rol
mov
sbb
inc
mov
push
mov
pop
cmp
mov
or
int
cdq
popa
movs
dec
cmp
(bad)
mov
lods
jg
repz
pop
div
loop
dec
dec
nop
stos
inc
and
rol
sbb
mov
and
cld
mov
push
push
in
xor
(bad)
out
shl
gs
dec
inc
mov
xchg
cmp
nop
test
or
in
fidivr
add
and
mov
retf
adc
test
or
loopne
lds
cmp
mov
imul
iret
jae
jb
add
pop
setbe
adc
fidiv
mov
les
and
sbb
mov
jmp
loopne
test
jmp
dec
(bad)
xchg
mov
lods
cld
cmp
int3
and
mov
xchg
sbb
push
dec
and
jns
shl
test
dec
cli
inc
push
lods
add
repz
xchg
sbb
push
add
or
pop
jp
pop
jmp
(bad)
and
add
mov
and
hlt
jmp
dec
hlt
sti
jmp
inc
dec
popa
fs
movs
cmps
arpl
leave
leave
mov
js
mov
inc
aaa
lods
mov
scas
or
sub
inc
icebp
(bad)
repnz
lods
imul
pop
mov
call
sar
push
sahf
push
inc
or
ss
mov
pop
in
lahf
pop
jg
or
cmp
dec
stc
js
adc
cli
pushf
out
mov
sub
loop
imul
imul
dec
fwait
xchg
mov
or
sbb
push
fwait
shr
les
pop
xor
je
mov
or
out
test
xchg
cli
(bad)
and
sbb
xchg
ds
enter
push
or
push
cmps
shl
xchg
or
rcr
inc
icebp
mov
pop
into
adc
mov
or
push
dec
(bad)
xchg
jmp
(bad)
jne
pop
cwde
xor
adc
push
push
sub
pop
or
jmp
mov
retf
push
xchg
cwde
mov
test
xor
clc
ret
inc
xchg
jl
cmp
rep
xchg
mov
push
push
inc
or
mov
mov
push
add
pop
rol
cmp
dec
out
add
inc
jb
dec
mov
sub
xchg
int
jg
fwait
ret
stos
xor
mov
jne
stos
cli
scas
or
mov
and
add
popa
mov
int3
push
movs
sub
jne
test
mov
jmp
repnz
test
ins
ret
fild
adc
mov
es
aaa
xor
jns
lahf
jp
cmc
mov
mul
aaa
sub
aaa
xchg
pushf
mov
xchg
inc
and
out
out
push
xchg
xchg
out
sub
jns
sub
xchg
xor
mov
push
fwait
or
std
pusha
inc
(bad)
sbb
int
inc
xchg
scas
push
add
xchg
test
in
jle
fcmovnu
cmps
push
sub
test
jno
adc
(bad)
sar
jle
mov
arpl
mov
push
jmp
and
les
jmp
shl
mov
adc
stos
add
ret
fs
in
ins
or
stc
fdiv
add
repnz
aas
sbb
xor
pop
cs
es
jo
fnsave
call
push
shr
mov
pop
retf
gs
or
add
test
pop
inc
test
sub
pusha
sbb
hlt
xchg
push
jbe
mov
sbb
out
ret
cmc
(bad)
(bad)
imul
lahf
inc
add
pop
out
fdivr
push
rcr
xor
in
pushf
ret
or
data16
pop
and
(bad)
fwait
call
das
pop
jle
push
jle
mov
and
push
pop
cwde
mov
or
jmp
setns
imul
xchg
fld
loop
and
rcr
or
and
cmp
sbb
lds
cmp
imul
jge
ret
in
ret
lods
retf
call
mov
cld
jno
and
sahf
push
adc
cmp
xchg
sub
mov
loope
mov
jnp
inc
adc
pop
icebp
stos
call
push
mov
adc
dec
ins
adc
cmps
hlt
and
adc
js
push
arpl
icebp
add
sahf
stos
inc
neg
iret
fs
jmp
or
dec
in
fidivr
(bad)
sbb
push
(bad)
pop
sub
or
cmp
lds
sub
movs
popf
arpl
in
aam
push
mov
mov
into
adc
retf
sub
jnp
imul
inc
cmps
daa
sub
inc
out
daa
out
cmp
test
ret
test
jae
test
sahf
jno
pop
mov
and
jno
xchg
jns
fsub
jo
ins
add
push
icebp
iret
sub
or
xchg
in
retf
inc
mov
or
and
shr
pop
retf
pop
in
xchg
xchg
xchg
call
push
(bad)
out
pop
and
stc
hlt
push
xchg
jbe
lea
dec
cld
out
(bad)
ja
shl
cs
adc
jle
jo
dec
iret
mov
or
xlat
push
jmp
adc
dec
mov
push
and
sub
push
in
sti
stos
fst
loopne
inc
les
shr
and
into
nop
push
int3
and
clc
or
cmps
mov
ins
bound
inc
ins
jecxz
mov
xchg
sbb
or
mov
hlt
mov
lods
mov
retf
imul
or
or
ror
xchg
outs
dec
inc
mov
int
jmp
mov
stos
repz
mov
pop
ins
mov
cmc
in
sbb
sahf
(bad)
jp
push
lea
inc
popf
scas
or
arpl
div
jo
rcr
rcl
popf
cmp
cmp
rol
loopne
mov
call
cmp
(bad)
or
inc
mov
mul
sahf
(bad)
dec
jmp
inc
stos
(bad)
rcr
xchg
inc
cmp
sbb
mov
sbb
jge
and
cmp
in
inc
bound
mov
repnz
adc
push
shl
push
movs
push
dec
aad
stos
adc
push
test
call
pop
clc
(bad)
popa
mov
pop
adc
sbb
into
jge
adc
push
adc
in
icebp
fdivr
and
mov
jmp
aaa
hlt
cmp
adc
in
ins
test
dec
jne
cmps
xchg
pusha
sar
lea
stos
sbb
inc
mov
stc
cmc
repz
popf
out
cmp
or
popa
jl
clc
retf
and
jge
ja
push
fistp
lea
cmps
dec
aaa
stos
push
and
cs
mov
jecxz
mov
ret
xchg
push
mov
pop
xor
cmp
push
jp
adc
jle
or
add
outs
xor
dec
push
sbb
lahf
pop
int3
adc
out
bound
add
mov
shr
push
pop
sub
test
fs
ret
(bad)
gs
rcl
cs
sbb
dec
imul
xor
into
push
mov
lock
sub
jbe
mov
mov
or
popf
lods
dec
aad
sbb
call
shl
rcr
scas
call
push
popa
cmc
mov
fdiv
adc
movs
jbe
retf
aaa
adc
cmc
loop
jne
jmp
mov
test
sub
sub
nop
xor
hlt
dec
jno
pop
pushf
sbb
dec
push
stos
fbld
push
xchg
sub
jns
pop
or
lea
dec
in
inc
imul
adc
repnz
loope
aaa
cmps
mov
push
imul
push
or
loope
xor
or
ins
outs
sbb
xchg
mov
sub
and
ds
imul
sub
xchg
pop
push
or
add
dec
dec
es
cmc
pop
std
out
sahf
push
push
imul
int
add
cli
or
mov
mov
inc
sub
loop
dec
lods
xor
and
dec
mov
gs
repnz
xor
ins
push
std
cwde
es
icebp
dec
mov
nop
loope
add
int3
jae
daa
sub
movs
sub
mov
fadd
xor
sub
adc
xchg
sbb
adc
lea
div
cmp
dec
add
int
mov
mov
jge
dec
cmp
pushf
les
xor
mov
mov
enter
mov
outs
das
xlat
enter
push
imul
pusha
xchg
js
lea
loope
aam
(bad)
jns
scas
xor
(bad)
sub
sbb
dec
leave
and
mov
(bad)
jmp
inc
jno
loope
mov
(bad)
into
jmp
xor
jle
cmp
dec
mov
pop
mov
pop
adc
push
and
and
or
int
jo
not
mov
mov
cwde
cmps
pop
cmps
ret
fs
stc
jle
cmp
into
lea
push
repnz
rol
sbb
inc
mov
retf
popf
xchg
inc
popa
hlt
sahf
aad
mov
jmp
hlt
xor
hlt
out
pusha
cmp
mov
xor
pop
cdq
add
pop
xchg
sahf
(bad)
dec
in
xchg
mov
mov
push
add
mov
mov
mov
(bad)
mov
xor
jne
pop
loope
(bad)
loop
and
add
enter
push
jge
movs
mov
loopne
sub
inc
in
mov
das
call
or
xchg
adc
fidiv
ins
or
jne
fidiv
std
adc
shl
or
jae
aad
and
pop
pop
xchg
aaa
mov
(bad)
icebp
gs
push
clc
aaa
mov
mov
div
mov
lods
fdiv
es
into
mov
add
loop
sbb
cmc
jns
icebp
les
loopne
repz
mov
xor
into
dec
idiv
fld
hlt
cdq
jno
aam
cmp
das
(bad)
idiv
lods
div
into
and
(bad)
xchg
pusha
cwde
jmp
arpl
mov
xchg
pushf
adc
dec
lock
dec
jmp
pop
pop
cli
shr
les
mov
fcomp
or
mov
cmp
cmp
mov
mov
js
jne
(bad)
ds
inc
outs
dec
shl
test
leave
push
xchg
stos
(bad)
ds
pop
inc
push
inc
shr
push
lea
sub
arpl
push
in
adc
test
mov
mov
cli
and
or
push
fldlg2
fs
int
jge
xchg
inc
inc
into
cmc
dec
test
sub
jp
shr
sbb
(bad)
(bad)
jecxz
aas
scas
adc
mov
test
pop
xchg
(bad)
xor
jb
jnp
mov
hlt
sbb
test
jmp
sbb
out
int
data16
fld
jg
cmps
mov
loope
push
add
sub
cmp
mov
pop
ds
shl
out
xchg
retf
mov
loopne
pop
in
lahf
dec
int3
pop
mul
jmp
push
dec
push
pop
stos
outs
test
mov
xchg
dec
mov
jecxz
inc
push
sub
(bad)
mov
js
add
jne
rcl
ror
retf
sub
cwde
jle
mul
lods
and
push
cmp
jg
and
jns
sbb
hlt
jp
cmc
add
jnp
clc
pop
pop
ins
add
push
jg
mov
int
mov
mov
sti
mov
add
adc
mov
sub
mov
shl
inc
cwde
shr
lods
sbb
pop
test
lea
or
loope
loope
cld
mov
sbb
and
adc
push
inc
sub
add
pop
pop
addr16
in
mov
adc
data16
jmp
ret
retf
out
fdivr
adc
je
dec
sbb
mov
in
icebp
in
xchg
cwde
mov
inc
adc
(bad)
mov
idiv
test
popf
jmp
popa
push
adc
enter
imul
push
mov
aad
sub
push
je
rol
stos
sbb
dec
xchg
stos
ret
mov
jae
dec
mov
int3
xchg
sahf
imul
pop
arpl
dec
push
es
stos
sahf
dec
pop
cmp
ja
push
mov
cmps
ret
cmps
mov
in
mov
sub
clc
and
out
iret
test
fist
lods
in
int3
xchg
mov
test
les
(bad)
cmp
and
div
in
push
cmp
repz
popa
outs
jmp
or
mov
or
sbb
jmp
mov
scas
enter
add
ffreep
lea
jnp
sbb
pop
enter
les
dec
push
mov
and
lahf
loop
shr
adc
daa
lds
iret
pushf
pushf
leave
pop
test
test
imul
fdivr
fist
pop
into
stos
cmps
stos
neg
out
push
xchg
add
in
inc
dec
mov
mov
cmp
jbe
jl
add
inc
xor
add
je
mov
or
ins
push
test
popa
lock
scas
mov
pop
test
dec
cmp
call
aam
pop
mov
mov
mov
inc
repnz
movs
dec
rcl
xchg
jno
ret
push
es
loope
push
in
mov
clc
scas
lods
jnp
nop
push
mov
imul
pusha
sub
iret
movs
test
cmps
test
and
mov
es
(bad)
adc
ins
mov
add
jns
jmp
ja
ss
cdq
repz
and
sbb
stos
retf
cmps
(bad)
mov
data16
aaa
add
cmps
je
jge
mov
call
bound
add
push
daa
inc
push
out
int
(bad)
in
xlat
inc
(bad)
in
dec
ret
enter
mov
dec
sbb
pop
mov
(bad)
xor
push
mov
(bad)
stc
pushf
push
dec
add
in
enter
inc
imul
mov
call
lods
bound
imul
mov
inc
add
and
daa
mov
xor
add
dec
test
mov
adc
ret
cmc
pop
das
push
and
jge
push
adc
push
aas
pop
ret
mov
dec
pop
cmp
repz
mov
aad
and
xor
stc
push
in
cmp
scas
xchg
mov
or
(bad)
jbe
mov
jmp
imul
hlt
popa
mov
mov
xor
jns
sbb
popf
into
or
push
in
jb
fcmovu
cwde
rcr
(bad)
jo
mov
mul
es
gs
jle
jbe
outs
int3
push
rcl
ret
les
out
idiv
stos
ins
mov
test
sub
inc
cmps
pop
push
jns
jmp
aad
push
enter
adc
mov
cmp
mov
inc
jl
push
shr
mov
cs
jae
sbb
sahf
pushf
sub
cmp
sub
mov
jg
or
je
out
stos
pusha
xchg
sub
movs
jne
add
dec
cmp
mul
mov
dec
push
popf
in
popw
in
sub
pusha
adc
xor
ins
dec
int
or
or
pop
je
ss
sub
add
sub
dec
in
loop
daa
jo
fwait
scas
add
mul
enter
xor
into
fldenv
mov
(bad)
mov
outs
ja
cld
aam
int
outs
out
push
sbb
int
mov
inc
out
inc
out
sbb
inc
dec
dec
mov
mov
cmp
ds
and
das
mov
sar
inc
(bad)
sbb
xchg
rcl
xchg
out
repnz
dec
xchg
stos
fucomip
ds
pop
pop
inc
xchg
sub
fisubr
inc
sar
lahf
imul
and
xor
mov
je
jmp
stos
push
dec
jb
popf
inc
jg
icebp
or
push
or
jl
test
push
retf
test
imul
inc
or
dec
test
mov
out
xchg
movs
arpl
mov
movs
xor
mov
sub
xor
ds
(bad)
xor
mov
inc
cwde
sbb
imul
jl
add
push
mov
add
mov
or
(bad)
out
pushf
aaa
jle
push
repnz
dec
loopne
cli
out
ins
outs
push
mov
stc
xor
test
jp
cmc
jmp
push
mov
xor
jns
neg
inc
sbb
gs
fsub
sbb
mov
adc
mov
mov
xor
adc
xor
aam
scas
cmp
hlt
push
popa
lods
push
dec
xchg
pop
aam
out
dec
sub
dec
stos
adc
mov
push
mov
out
xchg
mov
or
jae
movs
mov
and
mov
call
push
jmp
mov
pop
sub
dec
daa
jae
aad
lahf
mov
jbe
nop
repnz
mov
sub
int3
xchg
cwde
fmul
call
xor
inc
push
cdq
mov
mov
sub
inc
and
imul
jecxz
push
aas
jns
push
jno
in
sub
jge
xchg
call
sub
inc
(bad)
cmp
test
leave
sti
addr16
std
sbb
adc
clc
outs
sbb
and
sub
sub
(bad)
mov
add
stos
jbe
fst
pop
les
sub
xchg
pop
jae
mov
aas
cmc
jae
push
sub
fcomp
inc
push
inc
jmp
addr16
mov
mov
or
pop
inc
int
(bad)
mov
dec
xchg
push
(bad)
hlt
in
add
imul
bound
into
add
fistp
stos
mov
and
adc
jb
in
gs
stos
sbb
ret
cmps
std
jo
xor
test
xchg
inc
mov
int3
popf
ret
or
or
shr
mov
stos
(bad)
daa
(bad)
sub
popa
xchg
mov
cmp
mov
sahf
adc
daa
cmp
or
pushf
lahf
mov
ret
retf
dec
arpl
mov
push
dec
dec
add
cmp
(bad)
cmp
iret
stc
adc
sbb
ins
or
mov
push
dec
shl
mov
mov
aaa
push
ret
es
sub
push
mov
std
cwde
xor
pop
or
adc
aam
(bad)
dec
out
in
mov
in
movs
sbb
cli
leave
sub
adc
jl
adc
jno
mov
in
cwde
jge
push
lahf
fisttp
loop
lods
enter
inc
in
xchg
out
loop
cwde
cs
sub
adc
mov
mov
or
imul
jp
inc
pop
sbb
sbb
pop
push
xchg
pop
xchg
cdq
pop
jg
mov
sub
mov
push
pop
sub
scas
or
push
iret
inc
test
retf
fiadd
arpl
cld
xor
cmp
pop
cmps
call
mov
sbb
mov
call
ins
in
cdq
jg
jns
inc
pop
aad
adc
mov
test
push
mov
inc
enter
jns
int3
data16
cmp
imul
sub
aad
pop
pop
xor
ja
mov
sub
repnz
ret
jecxz
sub
inc
hlt
mov
bound
xor
mov
xlat
retf
sbb
mov
or
jo
mov
outs
stc
pop
std
aas
inc
(bad)
pop
cli
push
adc
sar
ret
adc
push
add
cmp
mov
inc
movs
mov
cmps
mov
jmp
sahf
ret
es
mov
sbb
cmp
aas
ins
or
stos
(bad)
(bad)
adc
outs
jg
xor
pop
pop
sub
inc
mov
pop
or
lds
adc
clc
(bad)
dec
cs
jge
pop
scas
cmp
jg
push
push
push
push
bound
xchg
ficomp
inc
mov
(bad)
loop
mov
clc
popa
add
mov
mov
mov
daa
push
push
bound
loope
pop
aam
call
sub
cwde
out
je
(bad)
xor
sbb
(bad)
lock
xor
dec
outs
aaa
lahf
xor
sbb
jno
push
daa
xchg
xor
daa
test
mov
xchg
mov
adc
xchg
cmps
rcr
push
mov
jp
les
sbb
adc
xchg
and
xchg
xchg
mov
add
push
add
and
add
xchg
inc
ja
jno
xchg
das
jle
ss
out
pop
pop
fist
das
mov
or
fsubr
pop
mov
jnp
cwde
mov
and
jne
pop
clc
sub
xchg
das
mov
jmp
pop
loope
push
cmp
fdivr
push
or
fmulp
dec
rcl
dec
sti
idiv
push
leave
loop
mov
hlt
loopne
ins
out
movs
jmp
push
neg
adc
loopne
popa
rcl
out
sbb
lahf
movs
int
or
scas
mov
lahf
fisubr
sub
aam
mov
mov
inc
pop
pusha
lock
push
not
mov
sub
inc
je
xchg
das
push
and
jb
in
sahf
inc
js
mov
push
sti
and
pop
push
mov
mov
cld
sub
mov
dec
xchg
mov
xor
sbb
retf
push
inc
out
push
call
or
enter
xchg
push
test
pop
scas
and
pop
(bad)
scas
inc
mov
ins
int
mov
repz
mov
adc
stos
fsub
mov
jg
xor
nop
add
mov
(bad)
xchg
fbld
js
fdiv
dec
lods
cmps
jl
dec
(bad)
inc
jp
cmp
movs
add
fsubrp
cmp
jg
jae
fucomp
fidiv
aad
sbb
inc
lods
fisub
cmp
and
lds
xor
sbb
mov
cmc
retf
add
jle
movs
cmps
add
nop
idiv
xchg
ins
and
loop
mov
loopne
loopne
add
and
cdq
int
inc
sbb
movs
push
dec
xchg
fwait
stc
retf
xchg
setae
ja
mov
mov
cmp
call
and
pop
out
xor
push
push
pop
cwde
push
(bad)
(bad)
lahf
int
jno
jmp
mov
sub
clc
(bad)
xchg
dec
mov
cmp
aaa
jmp
mov
test
(bad)
ins
aaa
jnp
cmp
xchg
scas
sti
sbb
mov
in
sub
sub
lahf
xchg
adc
jp
push
cmps
sub
cmp
push
std
push
outs
clc
add
mov
mov
jp
bound
mov
inc
mov
shl
stos
jecxz
rcr
inc
jmp
jbe
mov
dec
hlt
out
and
and
mov
mov
lods
dec
shl
xchg
mov
mov
jae
mov
in
loopne
fs
mov
push
test
xor
push
in
ficom
rol
std
jl
or
push
pop
dec
out
sbb
lahf
add
aad
sub
or
dec
sti
dec
cmp
push
sbb
mov
jo
inc
in
cli
xchg
sbb
sub
repz
mov
mov
sahf
or
(bad)
adc
cdq
mov
xor
retf
test
jo
je
retf
push
inc
sbb
and
repnz
(bad)
or
add
and
(bad)
sub
mov
sti
es
mov
out
mov
push
rol
xchg
outs
(bad)
pop
inc
sahf
pop
mov
sbb
mov
ja
add
lahf
repz
ret
lea
mov
div
xor
mov
fild
leave
stc
push
mov
ins
sub
adc
aas
inc
cdq
repnz
rcl
sub
add
ins
cwde
scas
(bad)
xor
cmps
nop
sbb
rcl
fs
lods
sub
push
imul
mov
retf
cmp
sbb
dec
mov
sbb
lods
ffree
je
cmps
sbb
mov
push
mov
call
mov
loop
sub
jae
jb
mov
xchg
inc
outs
cld
or
clc
out
adc
(bad)
rol
aad
xor
pusha
mov
mov
cmp
mov
sub
adc
cli
fs
sub
jmp
mov
leave
jge
and
cmc
test
cmp
scas
cwde
(bad)
xchg
addr16
mov
cmp
adc
pop
jno
retf
mov
in
ret
push
sahf
bound
push
scas
les
int3
dec
cmp
fidiv
or
mov
mov
sub
cmp
push
adc
cmp
xchg
outs
push
aaa
(bad)
loopne
sbb
push
out
mov
or
xor
mov
add
test
jg
outs
lock
cmp
fisub
fs
xor
add
xchg
jle
loopne
or
lods
cdq
sti
aam
(bad)
ins
or
mov
xchg
aaa
cdq
cmp
ret
pop
cmp
adc
test
(bad)
into
jl
not
sar
repnz
add
cmp
pop
imul
mov
jmp
jecxz
pop
pop
sub
push
call
in
iret
mov
pop
adc
dec
jns
movs
or
and
and
ss
and
fdiv
or
xor
push
mov
shl
pop
addr16
xchg
sbb
les
nop
enter
cs
push
ins
stos
(bad)
rol
xchg
push
jo
xor
and
mov
shr
ds
adc
aaa
cmps
aas
xchg
sahf
aaa
outs
or
cmp
or
addr16
retf
and
jmp
push
inc
jmp
sahf
sub
psubusw
xchg
sbb
je
cwde
sub
mov
imul
jmp
mov
test
sbb
mov
cwde
sub
out
adc
xchg
jg
jp
pop
in
mov
out
repz
sub
add
cmp
sub
je
sbb
jmp
out
cld
or
cdq
pop
enter
jmp
pop
sbb
call
sbb
(bad)
jle
movs
nop
add
and
and
shl
inc
mov
ret
or
jns
int3
cmp
pop
pop
push
mov
jno
push
mov
lds
int
cmc
cmp
loope
je
js
xor
and
and
loope
iret
inc
bound
or
pop
aad
jnp
out
shr
cwde
and
mov
mov
das
and
imul
jo
ror
adc
int3
sbb
andps
inc
xchg
jge
mov
mov
add
bound
bound
fmul
sub
mov
pop
fldenv
cmp
dec
xchg
jae
mov
cmp
nop
scas
fidiv
push
ss
sub
xchg
sub
sbb
fist
fisttp
call
data16
sbb
test
sbb
lods
pop
jno
mov
cmp
push
mov
jg
loope
movs
dec
test
ins
daa
stos
icebp
dec
int
push
mov
adc
push
enter
mov
push
pop
mov
xchg
das
imul
mov
jl
jecxz
push
push
cs
push
mov
retf
int
nop
mov
nop
bound
xor
mov
(bad)
scas
cs
js
sub
ins
not
add
mov
jne
cmp
stos
out
or
ror
mov
push
repz
add
mov
sbb
ja
inc
inc
mov
gs
int3
dec
xchg
mov
cs
cmp
adc
lods
inc
rol
out
into
jmp
xchg
sbb
fidivr
dec
stc
mov
jg
xchg
push
xchg
inc
arpl
mov
aaa
fldcw
ins
mov
sbb
cmp
js
mov
ret
push
jae
lea
inc
dec
lea
dec
pop
mov
cmc
pop
inc
adc
adc
inc
jnp
(bad)
lock
sbb
xor
out
lods
jp
stos
inc
sub
sub
mov
popa
fcom
lods
pop
mov
lds
pop
and
cdq
mov
jmp
dec
mov
adc
inc
fdivr
push
shr
jecxz
adc
adc
sbb
mov
pushf
xchg
mov
push
mov
sub
or
fldenv
js
jno
(bad)
ret
push
dec
mov
mov
jnp
sar
mov
sub
pop
fcomip
and
inc
xchg
xor
mov
fcmovnu
imul
popf
(bad)
int
push
lock
arpl
cdq
fcomi
mov
jns
jnp
or
loope
sbb
rcl
loop
add
icebp
push
(bad)
sub
jmp
das
ret
test
pop
or
and
add
push
dec
pop
iret
push
push
mov
lds
pushf
mov
mov
sbb
loop
mov
jmp
nop
jge
sbb
or
cmp
hlt
les
inc
ja
mov
sti
js
leave
lea
(bad)
jmp
std
and
jmp
xor
pop
clc
jo
sub
fist
sbb
fdiv
inc
cmp
scas
sub
sbb
repz
test
jg
mov
inc
lods
add
daa
xchg
call
call
cmps
sub
minps
jecxz
xchg
cs
xchg
retf
mov
mov
mov
popa
into
xor
test
fimul
mov
fsub
retf
push
fstp
jle
je
xor
adc
aas
xchg
sub
or
or
adc
cs
outs
push
aaa
push
mov
mov
cli
add
mov
mov
xchg
mov
sub
repnz
jns
lock
pusha
mov
out
adc
imul
jg
in
jbe
(bad)
stc
imul
xchg
imul
inc
cmps
fs
outs
cdq
mov
cld
js
mov
mov
repz
lods
mov
sub
push
cli
sbb
or
adc
mov
pop
stc
hlt
dec
stos
fnstcw
add
jmp
outs
cmp
idiv
mov
out
imul
inc
cli
outs
mov
cmp
in
mov
or
lahf
dec
mov
jge
mov
test
call
mov
test
mov
out
ss
sbb
sbb
fnsave
int
loopne
sar
gs
push
pop
fld
cmps
out
push
lahf
mov
popa
ja
sub
xlat
sahf
mov
cmp
pushf
sahf
repnz
(bad)
mov
pop
adc
pop
aad
loopne
mov
mov
push
jnp
std
jge
xor
dec
repz
xchg
js
mov
addr16
fwait
adc
mov
iret
xor
popa
inc
mov
retf
pop
or
mov
shl
rcl
pusha
sub
xchg
inc
jecxz
test
mov
nop
scas
test
in
mov
add
repz
sub
in
ins
dec
in
cmp
jbe
ins
adc
(bad)
xor
(bad)
fnsave
sbb
jge
or
gs
mov
mov
or
inc
mov
xor
or
in
cmps
xchg
ins
test
xchg
xchg
fdivrp
daa
loopne
jg
not
dec
add
ret
ds
adc
mov
in
mov
sub
push
cmp
hlt
loop
add
shr
pop
fistp
jl
imul
inc
and
(bad)
in
lds
fisttp
sar
mov
dec
fld
add
into
not
mov
push
int3
sub
sub
in
cdq
add
cmp
movs
cs
mov
or
add
push
mov
cmp
or
loope
add
adc
scas
or
push
mov
sub
scas
movs
in
mov
fld
jbe
xor
cmp
jle
shr
mov
aad
jl
pusha
jmp
push
loope
mov
or
mov
xchg
xchg
fmul
mov
ins
mov
jmp
sar
sub
pop
lahf
stos
jecxz
shl
mov
mov
fs
or
in
sub
jmp
in
icebp
xor
pop
jmp
bound
clc
sub
add
imul
(bad)
dec
add
cmp
and
popa
sub
xchg
or
inc
lds
add
mov
cmp
or
pop
dec
mov
xor
iret
scas
into
cli
dec
inc
mov
loop
mov
int
sub
mov
pop
retf
jnp
xor
dec
or
into
mov
aam
add
into
jle
jl
sbb
xchg
xor
pop
push
call
pop
dec
vmwrite
cdq
mov
mov
movs
rcl
iret
push
shl
sahf
pushf
inc
adc
xlat
mov
aas
mov
cmp
fdiv
inc
cmp
(bad)
jns
repnz
mov
push
xor
shl
ins
rol
popa
retf
and
js
lock
push
(bad)
ja
adc
mov
in
mov
scas
test
aam
mov
fwait
lea
pushf
nop
imul
in
(bad)
pop
shr
xchg
adc
je
push
and
sub
aad
iret
gs
aaa
jb
xor
lds
jmp
and
cmp
dec
js
mov
mov
(bad)
call
addr16
jp
popa
sbb
cmps
leave
xor
mov
aas
dec
xor
daa
xchg
pop
(bad)
sbb
lds
add
imul
stc
enter
dec
lock
les
(bad)
push
push
ds
add
cmp
call
clc
in
jnp
je
mov
and
pop
pop
lds
jmp
cmp
clc
adc
leave
and
ret
push
mov
pusha
ja
cmp
mov
fld
shl
lock
or
inc
xchg
xchg
dec
xor
out
push
fcmovbe
and
jmp
pusha
mul
mov
xchg
add
data16
or
enter
and
call
fst
push
mov
mov
outs
xchg
cmp
and
mov
ror
repnz
fimul
add
jecxz
or
fs
pushf
cmps
pop
pop
sub
jne
imul
out
scas
out
push
mov
mov
or
loopne
cdq
ins
ins
retf
add
dec
push
in
push
pop
and
popf
xchg
aam
jns
or
ret
xchg
jg
lahf
adc
stos
and
in
in
sbb
add
cmp
adc
sub
or
jge
inc
sti
jbe
cmps
cmp
clc
sbb
sbb
or
or
push
jge
dec
or
inc
dec
jmp
mov
sub
or
mov
add
fdiv
push
jnp
jl
dec
or
mov
xor
es
xlat
int
data16
bnd
mov
pop
out
fs
add
inc
xor
call
in
in
add
adc
sbb
scas
xchg
or
sti
jmp
repz
mov
mov
cwde
int3
sub
sti
imul
ret
jp
rcl
mov
mov
cs
xchg
movs
(bad)
mov
mul
into
jb
xor
rcl
mov
dec
pop
fild
mov
xchg
inc
jnp
mov
inc
bound
sub
sbb
cmp
mov
inc
pop
or
lods
xchg
jecxz
lahf
adc
outs
lods
xchg
dec
add
sub
pop
pop
adc
xchg
fdivr
xor
push
mov
test
(bad)
lahf
popf
xchg
push
sahf
dec
jl
sub
out
jne
mov
cmp
arpl
repz
xchg
push
je
imul
xlat
add
mov
cli
out
jo
leave
int
(bad)
sbb
mov
pushf
aad
cmp
loope
adc
or
xchg
stos
lods
loop
and
pop
cwde
popa
fs
in
loop
xchg
push
in
mov
jecxz
mov
mov
les
mov
test
stos
pop
xor
inc
cdq
pop
adc
fwait
push
adc
jo
loope
cmp
pushf
cmps
data16
pop
addr16
mov
cmp
cmp
jb
leave
sbb
cld
add
movs
sub
adc
test
cmp
fwait
shl
inc
adc
add
adc
push
cmps
pusha
rol
push
sub
xchg
sub
stc
cmp
(bad)
out
mov
js
add
lods
(bad)
(bad)
repz
mov
out
mov
mov
test
mov
xchg
pop
in
pushf
pop
pop
aad
das
push
ret
int
lea
nop
arpl
mov
cmps
das
sbb
cmps
sbb
xchg
clc
push
js
aam
cmp
adc
jae
aas
add
outs
jge
cmp
ret
cmc
dec
cmp
xor
mov
mov
test
xchg
lea
in
retf
shl
inc
or
lods
push
pop
add
loopne
daa
sbb
lods
mov
(bad)
mov
jb
adc
adc
icebp
clc
lock
inc
add
inc
push
adc
mov
inc
add
mov
or
clc
add
sub
mov
add
pop
inc
das
cli
cli
pop
into
sbb
add
test
test
inc
movs
pop
or
fcomp
inc
(bad)
imul
ss
repnz
data16
mov
push
or
dec
in
push
xchg
stos
bound
popf
dec
stos
fwait
pop
sub
jne
shl
push
test
push
sti
in
mov
scas
lds
lahf
test
cmp
hlt
jmp
sub
popa
mov
jp
jge
mov
cli
push
or
mov
push
retf
sbb
pop
mov
dec
(bad)
ja
sub
sub
inc
inc
xor
xor
add
mov
adc
cmp
or
push
sub
jnp
std
clc
ins
mov
and
jmp
ss
mov
xor
xchg
sub
in
mov
mov
jnp
js
and
movs
pop
jmp
(bad)
sbb
retf
push
shl
sub
movs
enter
dec
mov
ins
push
cmps
not
adc
movs
add
sbb
shl
pushf
or
into
dec
imul
push
daa
daa
std
jb
sbb
mov
cmp
adc
push
scas
and
and
pop
push
data16
sti
xchg
adc
add
inc
aam
out
cmp
push
ficom
mov
mov
das
mov
or
jmp
sbb
adc
add
sbb
inc
cmp
pop
mov
movs
jbe
mov
fadd
or
jmp
cli
push
dec
xor
in
mov
sub
mov
push
xchg
(bad)
in
out
push
stos
or
imul
leave
inc
push
jne
push
sbb
inc
push
out
(bad)
ss
xlat
sub
cli
(bad)
pop
std
retf
xor
pop
inc
lock
sbb
jmp
in
cli
jmp
mov
pop
inc
jno
int3
out
sub
sbb
pushf
call
sub
ja
rol
pop
in
mov
cld
xchg
mov
jbe
xor
xor
adc
jns
lock
mov
test
jns
test
xor
sub
cmp
or
cmp
test
adc
adc
ins
push
ror
and
xchg
in
es
aam
mov
leave
in
in
(bad)
out
out
idiv
fsubr
loopne
f2xm1
or
dec
sbb
inc
adc
dec
lods
fsub
repnz
shl
aaa
jno
sahf
data16
inc
sahf
push
enter
jno
iret
dec
adc
push
bound
outs
std
mov
cwde
add
sub
fdiv
mov
ret
push
paddq
div
and
inc
(bad)
leave
hlt
cmp
(bad)
jmp
add
and
jns
retf
icebp
lods
mov
stc
mov
repnz
sbb
dec
jae
mov
fidivr
stos
push
mov
dec
dec
and
xchg
shr
sub
dec
loope
shl
fdiv
sub
or
mov
dec
rcr
cmp
push
sbb
shr
sbb
in
stos
stos
out
add
fabs
outs
push
jo
into
and
nop
push
ja
sbb
mov
inc
dec
pushf
movs
cmp
xor
bound
test
clc
add
jnp
ret
push
xchg
jno
mov
push
pop
loop
dec
cmp
call
pop
pop
xchg
push
sbb
mov
mov
pop
shr
imul
int
xor
(bad)
mov
sbb
xchg
addr16
(bad)
hlt
dec
mov
cld
mov
xor
pushf
cmp
in
pop
push
xchg
xchg
call
inc
test
jnp
ret
int3
shr
pushf
push
lds
and
dec
mov
sub
test
push
xchg
jg
dec
sub
ret
int3
lds
inc
jb
dec
out
stc
(bad)
push
fnsave
out
(bad)
dec
movs
cs
retf
pop
ins
mov
and
test
push
or
bound
loope
jl
xor
out
icebp
inc
out
push
adc
jnp
iret
xlat
push
sub
jle
fsub
jae
mov
inc
dec
xchg
mov
sbb
mov
movs
int3
jl
icebp
or
cld
pop
std
pop
cmp
lock
adc
shr
stc
xchg
sbb
pop
fdiv
mov
mov
(bad)
in
push
xor
push
stos
jle
enter
cmps
icebp
cmp
push
adc
js
cmp
movs
ins
mov
adc
xchg
inc
xor
mov
jge
and
pop
mov
add
iret
xor
bound
push
inc
or
jp
pusha
lods
jecxz
mov
pushf
ds
les
scas
leave
sub
fwait
or
in
mov
ret
nop
cmp
dec
leave
cmps
outs
repz
fwait
sahf
mov
and
clc
jbe
xchg
jbe
pop
jp
inc
sbb
gs
pushf
mov
pop
mov
leave
or
mov
call
xor
mov
cwde
sbb
cli
lods
mov
xchg
les
add
push
sbb
inc
(bad)
mov
and
mov
pop
mov
sbb
lds
(bad)
cmps
push
es
popa
or
(bad)
xchg
cmp
ds
cli
repz
sub
cmp
xchg
xor
cmp
pop
jg
fwait
js
xor
and
fs
lahf
fs
xor
jge
mov
adc
dec
or
imul
adc
inc
dec
test
aad
push
in
xor
xchg
(bad)
out
push
(bad)
add
jl
pop
sub
cmp
cwde
popa
cmp
inc
sbb
stos
scas
inc
ficom
gs
sbb
es
adc
les
jge
mov
test
mov
pop
mov
sub
cmp
cmp
cmc
stos
sub
jae
or
out
dec
aad
aas
mov
(bad)
es
push
jmp
cli
add
xchg
inc
arpl
lea
fwait
fs
push
pop
and
outs
lea
inc
and
mov
mov
pop
push
mov
les
call
(bad)
sub
or
jns
inc
xchg
jmp
mov
xor
aad
xlat
popa
jae
xchg
jecxz
push
jmp
sbb
je
mov
sub
sub
mov
xor
pushf
data16
ins
pop
adc
mov
xchg
cmp
and
daa
in
mov
(bad)
popa
or
mov
lods
mov
xchg
sahf
cmp
cmp
pop
jmp
and
jbe
add
mov
stos
(bad)
js
in
jg
movs
int3
xor
pop
test
jecxz
push
pop
fsub
mov
push
inc
push
in
fdivr
mov
mov
mov
fs
adc
sbb
loopne
push
mov
fisttp
sbb
push
in
inc
add
pop
pop
mov
call
mov
iret
sar
aam
or
dec
fimul
and
fcom
push
repz
mov
pop
jg
icebp
into
fnstsw
add
and
ffree
add
pop
dec
pop
jmp
cs
call
out
jnp
int
and
mov
adc
jb
hlt
xor
add
mov
lahf
lds
shl
mov
xchg
or
in
dec
outs
pop
mov
xor
push
and
pushf
push
fs
cs
sub
xchg
dec
ror
cmp
add
push
outs
push
xchg
nop
add
pop
push
ins
dec
xor
cmp
call
mov
xchg
out
push
movs
call
sub
push
adc
add
imul
and
sub
dec
mov
stos
push
xor
ret
add
xor
cmp
push
jne
outs
xchg
cdq
fimul
jmp
pop
pop
add
(bad)
movs
je
ret
dec
inc
cmp
not
sbb
push
das
pop
lahf
adc
jecxz
mov
test
loopne
(bad)
xor
and
jl
pop
mov
jge
scas
sbb
imul
add
inc
test
addr16
xor
neg
mov
push
ja
jge
xchg
and
xchg
mov
mov
pop
jns
repz
sub
shl
das
nop
add
jbe
and
cmps
clc
mov
arpl
out
ins
jl
cmp
out
sub
sar
pop
or
in
cld
cmp
cs
adc
or
aam
xor
mov
push
es
add
in
out
dec
sub
out
out
mov
icebp
dec
movs
dec
jl
pop
cmp
mov
sbb
jecxz
dec
add
dec
(bad)
xchg
rol
sub
adc
enter
dec
mov
ins
mov
xchg
cmp
nop
fadd
jp
pushf
sbb
popf
dec
mov
mov
mov
cmps
cmp
adc
pushf
inc
ficom
inc
scas
paddw
rol
push
cwde
bound
or
ds
sbb
jecxz
out
aas
sub
shl
dec
iret
and
push
lds
loop
fs
cmps
imul
(bad)
fbld
dec
mov
pusha
pushf
(bad)
int3
inc
and
jae
cld
(bad)
daa
mov
or
sub
adc
lods
js
icebp
adc
lea
(bad)
pop
mov
mov
dec
cmps
xchg
mov
pop
fcomp
outs
in
add
popf
cmc
rol
jo
pop
mov
test
out
sub
xchg
bound
loope
imul
mov
adc
add
pop
jb
icebp
xchg
ds
fwait
jge
pop
xor
cmp
xor
(bad)
mov
bound
push
cli
cmp
das
mov
and
push
xor
inc
or
pop
jnp
or
cmp
call
int3
pop
xor
dec
mov
fwait
inc
xchg
es
loopne
sbb
imul
daa
fadd
sub
scas
sbb
je
or
and
in
sbb
movs
mov
retf
sub
ins
xor
push
jmp
(bad)
xor
call
fsub
ins
pusha
loop
dec
sbb
sub
clc
cmc
push
pop
imul
out
mov
cwde
and
pop
jns
push
jp
in
je
jns
cmp
jecxz
xchg
das
shr
mov
ret
mov
cmp
and
sub
sub
lds
or
add
pop
adc
and
aas
repnz
ins
xchg
or
push
jg
shl
add
test
add
xchg
push
cmp
mov
or
test
je
jo
push
pop
ror
adc
sub
outs
in
rcl
and
and
cvtps2pi
pop
repz
xchg
jecxz
or
fidiv
test
cmp
xor
loope
in
lods
mov
pusha
fwait
ret
push
jno
pop
pop
mul
sub
repz
call
sub
into
test
pop
dec
push
fdivr
jmp
mov
in
ins
jne
xor
sbb
cld
dec
inc
adc
scas
cmps
and
cmps
call
clc
adc
sahf
jae
or
mov
sti
loop
cld
cmp
rcl
cwde
push
xor
pop
nop
mov
test
shl
adc
adc
or
xor
sbb
lods
sub
ror
stos
rcl
pop
call
mov
mov
jbe
and
and
adc
aaa
stos
leave
dec
pushf
xor
(bad)
mov
shl
mov
nop
fwait
les
xchg
inc
mov
int
sti
int3
outs
push
push
add
jp
sbb
out
in
sbb
push
pop
adc
call
jle
adc
push
aam
ins
dec
dec
aas
dec
inc
mov
jge
sti
push
retf
xchg
adc
add
push
xchg
xor
and
jp
sbb
cmps
mov
fwait
xor
or
pop
fs
js
gs
push
mov
ins
xchg
sub
fdiv
rcr
jmp
xor
push
mov
or
pop
cmp
xlat
data16
push
mov
push
pop
es
sub
lods
push
call
adc
or
mov
or
jge
add
mov
ret
mov
mov
fnstcw
sub
dec
repz
ins
leave
test
daa
xchg
in
iret
or
in
dec
mov
sbb
test
adc
add
mov
ss
push
pop
jbe
push
pop
pop
int
sbb
jmp
repz
mov
mov
aas
inc
imul
lods
sub
movs
shr
ins
fld
adc
jo
loope
or
loop
dec
jge
fdivr
mov
fist
test
dec
cmp
inc
mov
mov
cmp
cs
mov
sar
mov
xor
push
hlt
pop
pop
mov
out
adc
arpl
mov
scas
cmps
xchg
mov
dec
imul
or
mov
xor
cmp
mov
xor
xor
inc
xchg
std
fucomp
aad
ss
lar
pop
push
pusha
mov
xchg
lods
aas
retf
push
gs
dec
inc
jne
call
add
imul
ja
test
cmp
cwde
rcr
mov
inc
sbb
mov
popa
jecxz
jge
sub
sub
call
xchg
test
sbb
cmp
ins
repnz
cmp
(bad)
push
cs
ficomp
out
push
out
hlt
mov
retf
lahf
and
push
test
popf
fcmovne
cmps
mov
stc
inc
jae
xlat
cs
push
(bad)
aaa
out
test
add
jno
cdq
push
mov
mov
into
or
push
xchg
cwde
loopne
xor
jo
push
mov
mov
push
dec
data16
bound
jge
push
mov
dec
cmc
or
daa
cmp
xor
pop
ret
idiv
cmps
jno
(bad)
cs
add
xor
lahf
xchg
adc
jmp
mov
fnstsw
fmul
mov
sbb
push
sub
fdiv
out
addr16
cmp
cmp
push
das
adc
aaa
stc
xor
push
into
popa
lea
pop
mov
add
xor
or
jle
xchg
loop
int3
cmp
jae
test
and
sbb
jge
inc
and
and
pop
fisub
nop
pushf
mov
mov
jb
mov
dec
fcmovnu
pop
adc
loope
rcl
sbb
shl
gs
push
sub
pusha
aas
add
push
jmp
and
iret
arpl
clc
mov
dec
push
lods
sbb
test
iret
push
in
jle
xor
xor
pop
in
aas
in
dec
loope
stos
popf
pop
and
movs
mov
mov
mov
lgs
add
push
jge
xchg
cmp
mov
add
into
fucomp
jb
adc
jp
(bad)
(bad)
aam
and
mov
jns
retf
sub
jbe
adc
mov
xor
xor
sub
(bad)
cmp
push
imul
out
mov
(bad)
adc
jmp
sbb
in
mov
inc
out
jmp
dec
cmp
fs
mov
mov
lds
jmp
push
or
stos
fmulp
imul
fcomip
stos
mov
cmp
pop
or
mov
inc
(bad)
pop
xchg
push
lock
lock
push
aas
loop
lahf
js
movs
mov
dec
inc
push
push
ret
call
ja
(bad)
pusha
cmps
(bad)
(bad)
fdivr
sbb
sub
sub
inc
dec
adc
jg
dec
inc
shr
stos
bnd
dec
pusha
aad
(bad)
cmc
repz
outs
sti
ss
outs
imul
pop
fucomip
jge
ss
ins
adc
adc
fwait
xchg
mul
mov
enter
aaa
jl
sbb
dec
pop
sbb
sbb
call
mov
inc
mov
jmp
jne
test
mov
mov
stc
mov
sub
xor
bound
add
ror
or
pop
cmp
inc
mov
int3
(bad)
mov
in
add
sti
es
ret
enter
call
repz
ret
std
pop
xchg
cwde
mov
inc
daa
ret
jne
inc
xor
add
or
dec
mov
xchg
dec
data16
out
jo
scas
pop
add
es
fild
inc
clc
retf
add
fidivr
push
xlat
jmp
(bad)
inc
pop
and
or
clc
push
mov
mov
add
loop
mov
mov
push
xlat
xchg
fstp
mov
(bad)
pop
jmp
and
jle
enter
xchg
out
pop
movs
and
cmp
pop
cdq
inc
add
pop
movs
aaa
nop
sub
retf
stos
xchg
imul
rcl
test
ret
cmp
add
stos
dec
gs
inc
add
inc
shr
aas
inc
mov
imul
cmc
or
iret
cdq
sbb
das
imul
and
jne
shl
mov
test
stos
fstp
fadd
jl
sub
push
xchg
(bad)
adc
hlt
mov
loopne
sbb
jo
and
add
mov
popa
cmc
mov
adc
addr16
ins
ror
dec
sbb
add
jle
inc
bound
retf
lock
aaa
icebp
mov
push
and
dec
cmc
sbb
ror
mov
in
test
retf
cmp
clc
cld
xlat
sub
xor
nop
xchg
and
sub
aas
xor
dec
push
push
mov
sub
fsubrp
rol
jmp
jnp
or
inc
add
jo
out
sub
(bad)
call
xchg
dec
cmp
mov
xchg
int
mov
fs
xchg
pop
push
shr
movs
pushf
jg
fisubr
and
rol
or
dec
icebp
mov
jmp
(bad)
push
fidivr
sub
mov
dec
es
pusha
pop
cmps
xor
cmp
push
test
mov
mov
sbb
and
xchg
sub
iret
fs
and
test
int
mov
and
dec
sub
outs
sbb
hlt
dec
out
(bad)
enter
mov
iret
in
xor
das
sbb
ficom
cdq
mov
push
mov
into
inc
jae
cmps
inc
jp
push
jb
ins
mov
ds
xor
scas
aaa
inc
stos
cmp
and
sub
push
lds
dec
add
add
jmp
dec
loopne
and
cdq
sbb
xor
mov
je
out
mov
sbb
jl
xchg
das
in
push
xor
dec
sbb
(bad)
imul
ins
adc
daa
repnz
and
aas
aaa
inc
mov
push
call
es
int
push
js
inc
mov
inc
sbb
rol
cli
and
cs
cmp
xchg
xchg
pop
in
sbb
out
lock
adc
rcl
and
je
pop
repz
fsubr
xchg
adc
(bad)
jmp
ins
retf
sbb
daa
movs
out
test
cld
cmp
jle
xor
cld
shl
fmul
int3
arpl
cmp
pushf
sbb
pop
push
dec
mov
fs
jl
jmp
sahf
fisubr
addr16
or
mov
jne
sub
push
loopne
movs
aas
iret
cdq
(bad)
fdivr
aaa
push
cli
dec
shl
add
les
rol
mov
jg
sbb
arpl
jae
jo
jae
ins
(bad)
fimul
mov
lea
dec
mov
pop
fs
xor
dec
mov
inc
sub
arpl
mov
jle
enter
add
pop
imul
sbb
mov
je
sbb
jmp
sbb
sar
cmp
scas
out
mov
popa
mov
adc
out
icebp
stos
div
mov
into
jecxz
push
dec
aaa
jnp
les
clc
cmp
test
cs
cmp
pushf
mov
inc
popf
add
push
cmp
pop
push
pop
mov
mov
enter
in
ret
xchg
sbb
sub
retf
in
aaa
les
int3
jnp
js
leave
rcl
(bad)
add
mov
ret
mul
or
lds
outs
es
sbb
loopne
inc
test
ds
cmp
pop
cli
aam
imul
cmp
int
pop
or
mov
pop
mov
pop
dec
add
push
pop
mov
jmp
add
adc
adc
ret
dec
mov
(bad)
jmp
inc
imul
movs
loop
cld
xor
enter
lods
les
pushf
sbb
std
dec
sbb
jae
daa
xchg
sbb
cmp
or
enter
ss
test
mov
sub
ret
add
mov
xchg
pop
pop
(bad)
cmp
daa
outs
aam
cwde
sub
jmp
fwait
fs
mov
jb
mov
add
sbb
push
ja
nop
mov
lds
test
pushf
test
icebp
movd
or
dec
call
je
jg
xlat
and
xchg
fcom
fyl2x
ins
fidivr
loopne
mov
lods
mov
mov
pop
sbb
mov
jnp
cmp
gs
ds
mov
retf
sbb
sar
ret
cmp
push
jo
aaa
repz
mov
fs
cmp
xor
dec
inc
jl
and
(bad)
push
and
sub
dec
je
lods
call
push
pop
pusha
xchg
popf
pop
xchg
sbb
add
ret
push
js
(bad)
and
cmc
mov
sub
inc
rdtsc
pop
loope
mov
jecxz
and
aas
daa
loop
push
shl
in
mov
mov
jecxz
pop
push
test
test
test
popf
or
dec
adc
jecxz
dec
enter
push
adc
cmp
fs
stos
outs
stc
jge
das
inc
sbb
jns
mov
cmp
xchg
jo
div
es
fst
adc
xchg
ins
shr
jbe
or
add
dec
pop
ja
push
sub
add
imul
pop
lahf
test
lods
jae
fdiv
repnz
pop
fptan
movs
mov
mov
dec
pop
mov
outs
rol
or
rcl
out
out
imul
mov
dec
scas
fwait
add
cli
adc
adc
je
retf
sbb
fdiv
popf
cmc
pop
mov
inc
sub
(bad)
in
xchg
fwait
push
ins
pop
inc
cmp
jg
inc
cli
cwde
xor
clc
xchg
ins
loopne
mov
dec
icebp
sbb
sub
fdivrp
aaa
cmps
sub
inc
lods
dec
scas
jmp
ficomp
sub
xlat
lods
add
push
add
retf
in
je
pusha
test
adc
das
(bad)
fcmovnb
mov
lods
(bad)
or
rcl
ds
jl
inc
sbb
repnz
pop
lea
pop
pushf
leave
dec
xor
inc
jg
inc
add
pop
jb
lods
and
mov
sbb
pop
cmp
(bad)
ret
adc
mov
hlt
call
cmp
dec
sar
lock
adc
or
dec
mov
pop
sbb
mov
push
push
aam
dec
cld
out
cmp
rcr
arpl
inc
mov
mov
out
lea
aam
stc
sub
pop
xchg
jecxz
dec
pop
out
mov
pop
and
xchg
dec
or
mov
adc
retf
fwait
rcr
or
adc
and
test
mov
mov
leave
fild
pushf
fstp
int3
mov
inc
mov
xchg
mov
dec
je
inc
scas
lahf
cdq
repz
gs
sti
in
mov
sahf
jecxz
push
mov
std
out
nop
mov
loopne
dec
loope
jns
push
je
xchg
cmp
(bad)
popf
fcom
jmp
lods
dec
ror
xor
pop
mul
das
inc
add
mov
aam
add
sahf
das
xchg
mov
sub
lock
into
daa
push
lahf
out
inc
leave
adc
sub
out
popf
pop
inc
outs
test
dec
gs
cmp
test
loop
in
mov
pop
out
(bad)
jbe
fisubr
xor
retf
pushf
pop
jge
and
and
lds
call
imul
movs
push
mov
cmp
cmp
aad
sbb
pop
sahf
shl
mov
(bad)
jge
pop
imul
dec
push
add
(bad)
movnti
(bad)
sbb
repnz
fstp
inc
rol
nop
outs
xchg
outs
addr16
(bad)
das
mov
lods
ins
fs
popf
les
cli
sbb
(bad)
mov
js
retf
cmps
add
mov
pusha
stos
sub
cmp
pop
std
fwait
in
inc
push
jmp
std
cs
rcl
fcomp
mov
test
adc
mov
push
mov
test
sbb
js
push
cld
xor
sti
ss
aas
add
push
sti
outs
cmp
xor
sub
lea
dec
test
sub
sub
cli
mov
in
sub
out
cwde
pop
mov
push
fimul
xchg
out
or
xchg
(bad)
mov
ret
adc
mov
sbb
(bad)
add
pop
jmp
dec
ss
mov
mov
div
out
mov
pop
es
sub
pop
sbb
or
mov
mov
test
add
lock
dec
lahf
stos
arpl
and
mov
dec
and
rcl
out
add
jo
or
hlt
jb
loope
fistp
pop
sbb
inc
fsub
loope
push
sbb
nop
sbb
retf
div
scas
gs
daa
jns
movs
or
pop
imul
add
imul
ins
jmp
ficom
stos
das
xchg
fcomp
call
mov
sub
icebp
(bad)
sbb
lahf
ror
retf
test
inc
dec
sub
sub
fisub
gs
push
or
ret
stos
out
xchg
pop
popw
loop
lahf
dec
cmps
adc
vpsubusw
retf
inc
lds
dec
xor
test
adc
push
ss
push
ror
mov
mov
outs
scas
in
mov
or
mov
inc
mov
cmp
pop
imul
aam
push
scas
arpl
cli
fsub
repnz
push
retf
jp
outs
mov
dec
cmp
adc
pop
inc
scas
xchg
and
iret
inc
pop
add
push
daa
mov
mov
or
xor
xor
int3
xchg
ret
mov
jb
imul
jmp
mov
pusha
dec
fbld
or
fimul
sub
mov
aas
xchg
mov
cs
jne
mov
mov
into
cmp
lods
rol
(bad)
and
in
dec
bound
pop
shl
movs
ret
jmp
push
ins
push
and
lahf
inc
das
push
out
shl
fadd
ss
cmp
sub
ret
push
call
pop
retf
sub
or
pop
fcom
sub
xor
int
pusha
rcl
fimul
lock
or
xor
and
push
push
retf
pop
xchg
push
arpl
in
push
adc
stos
psllw
xchg
inc
sahf
test
xchg
call
sbb
dec
fwait
mov
mov
je
mov
pop
clc
fcom
mov
push
mov
xor
and
push
sub
mov
or
inc
xor
cmps
fadd
push
or
xchg
mov
add
jmp
mov
mov
inc
dec
test
(bad)
test
pop
push
retf
pusha
test
mov
test
pop
ss
pop
add
push
add
pop
andps
mov
scas
js
and
mov
sbb
mov
call
ror
outs
js
mov
clc
lods
xchg
bound
loop
scas
cmc
mov
push
in
pushf
xchg
loop
imul
mov
add
ss
ja
lods
adc
ins
push
mov
sbb
pop
fwait
push
xchg
cmp
push
mov
or
test
idiv
dec
jmp
test
sub
sbb
bound
lds
sar
fisttp
cmps
xor
ja
in
js
test
clc
into
aaa
mov
out
jecxz
dec
push
pushf
in
test
ja
push
in
mov
(bad)
jns
pop
cdq
dec
lock
pop
push
iret
push
cmps
pop
inc
std
and
push
outs
das
daa
mov
jno
(bad)
mov
adc
je
sub
and
push
pop
push
inc
pop
sti
sub
pop
aad
pop
sbb
ds
ja
mov
xchg
mov
ret
inc
adc
imul
jecxz
cli
add
mov
cmp
es
gs
mov
fild
data16
popf
xchg
test
mov
cld
fcom
stc
and
xchg
push
pop
shr
out
xchg
nop
ds
ins
xchg
mov
jmp
mov
push
gs
je
sbb
fild
ficom
dec
in
jp
arpl
mov
imul
jmp
jmp
dec
test
mov
cmps
xchg
jmp
je
push
jb
pushf
enter
mov
and
and
pushf
xchg
add
dec
jp
aad
jo
jmp
and
dec
ret
mov
cmps
movs
inc
(bad)
icebp
cld
sbb
outs
pop
fwait
mov
jb
inc
in
cmps
retf
lods
jns
(bad)
ror
or
jmp
or
mov
int
leave
(bad)
mov
jg
std
arpl
ret
shl
xchg
mov
idiv
aas
push
sbb
dec
or
dec
mov
dec
rcl
(bad)
test
pop
add
adc
jmp
fistp
and
push
mov
cmps
(bad)
sub
lock
push
movq
jmp
int3
and
test
lock
cmp
mov
rcl
xchg
rol
das
pusha
out
ret
aam
jae
add
scas
data16
push
movs
retf
jg
ins
test
adc
xchg
movs
inc
sbb
movs
mov
(bad)
jbe
mov
cmp
pop
imul
mov
sub
out
push
das
mov
ins
jle
push
iret
and
xchg
dec
jmp
cmp
int3
cmp
(bad)
mov
jmp
fidivr
bnd
add
arpl
rcl
xor
mov
jno
push
cmpps
cmps
sbb
jmp
movs
lea
adc
sub
stos
stos
mov
cmps
pop
lea
and
fcomp
in
bound
nop
nop
fisub
mov
xor
inc
cmp
or
mov
lahf
inc
dec
mov
cmps
xchg
jg
xor
in
cmp
iret
jb
pop
mov
adc
outs
pop
push
pusha
dec
mov
pop
or
in
mov
xchg
retf
or
and
in
es
lods
xchg
sbb
sahf
mov
aaa
adc
repz
push
jmp
add
push
out
repnz
dec
aad
jne
je
es
clc
dec
aad
lock
xor
dec
xor
es
addr16
imul
add
dec
imul
shl
outs
ss
test
fidiv
iret
dec
mov
in
jns
imul
xor
ror
pop
sahf
in
pop
fld
sub
pushf
mov
out
adc
cmp
xchg
fmul
aaa
sar
bound
jl
pop
jmp
sbb
jp
push
ficom
sub
int3
test
sbb
cmp
fisttp
and
in
jnp
outs
mov
fdiv
and
mov
test
sbb
test
or
jecxz
shl
aas
dec
inc
xchg
jle
icebp
icebp
loopne
(bad)
jp
and
stc
sbb
sahf
xchg
lds
push
xor
lods
mov
and
xchg
sub
stc
push
rcl
sbb
mov
rcr
and
mov
sbb
test
das
out
out
cs
pop
test
retf
fidiv
in
test
mov
mov
xor
out
mov
mov
out
ins
fild
loopne
jmp
out
dec
shr
sub
mov
stos
icebp
idiv
out
xor
or
es
ins
xor
jge
cmp
call
ins
jp
pop
mov
sbb
mov
fmul
sbb
in
mov
jmp
rcl
lahf
push
in
push
jae
pushf
fdivr
out
call
hlt
sub
xchg
sub
jmp
push
mov
cwde
jns
cdq
cmps
push
mov
xchg
stos
and
into
popf
lods
out
scas
cmps
dec
sbb
mov
daa
mov
dec
add
(bad)
adc
jle
or
dec
sbb
mov
jecxz
lahf
push
mov
sub
rol
arpl
test
sahf
mov
stos
fldz
xchg
push
ret
sahf
jge
or
jo
sbb
xor
cmp
jne
sar
in
jbe
mov
outs
push
xchg
jbe
sbb
test
ret
mov
ret
sub
mov
jb
push
lods
inc
jne
es
cli
xchg
icebp
sub
sub
push
pop
into
je
sub
pop
test
or
jne
addr16
scas
nop
fs
pop
pop
test
jl
(bad)
movs
xlat
cmps
ret
shl
arpl
xchg
loop
cmp
ficomp
test
cs
mov
stos
imul
inc
adc
jnp
fcmovnu
pop
pop
dec
xor
and
repz
out
bound
pop
mov
pop
scas
outs
shl
imul
dec
bound
push
out
push
pop
out
dec
or
or
std
outs
stos
pop
pusha
rol
aad
retf
pop
mov
push
push
ret
arpl
mov
aaa
or
sbb
add
movs
jg
ds
and
and
es
adc
pusha
lea
rol
inc
mov
push
and
shl
pop
or
repnz
jae
jge
aaa
lods
xchg
not
les
mov
push
pop
mov
shr
cmp
sub
dec
add
es
sbb
in
sar
mov
aad
jmp
je
and
fs
jp
dec
mov
mov
add
push
mov
ss
jne
mov
jg
push
push
adc
movs
cwde
inc
out
and
popa
or
cmps
dec
mov
fcom
and
cmc
dec
fdiv
fsub
jmp
icebp
cmp
xor
stos
mov
add
dec
mov
hlt
mov
clc
sti
leave
inc
jp
jmp
inc
rol
or
stos
inc
xchg
and
repnz
adc
add
stos
faddp
cmp
or
stc
cmp
dec
popf
add
ins
call
retf
mov
jmp
xor
bound
out
add
mov
das
mov
pop
ret
cli
cmp
dec
out
push
and
dec
push
or
lods
into
jmp
add
lds
rol
loop
ja
adc
jns
cmp
push
clc
sub
xor
or
(bad)
xchg
inc
jne
in
cwde
jle
or
xchg
lahf
mov
pop
loopne
push
jp
xor
popa
push
xor
and
std
pop
and
cdq
pop
pusha
adc
add
push
or
sti
clc
sub
inc
push
fbld
out
les
mov
not
dec
adc
out
pop
fstp
scas
jbe
pop
outs
test
addr16
mov
xor
push
cmps
out
jo
ds
retf
xchg
test
sbb
xor
sbb
mov
push
mov
xchg
cmps
je
inc
xchg
pop
data16
push
mov
xchg
clc
hlt
inc
cmp
add
lods
mov
outs
pop
ss
jns
mov
xor
pop
cmp
cmps
fs
and
and
gs
jae
movs
jb
jnp
call
hlt
sbb
ins
jmp
and
jo
sbb
xchg
test
mov
add
arpl
sub
test
test
test
inc
and
mov
jl
arpl
add
sub
dec
xlat
cmps
ins
(bad)
out
push
push
pop
sub
sbb
fwait
cmps
adc
mov
cmp
inc
retf
(bad)
pop
loopne
into
pop
and
sub
xchg
in
(bad)
int
mov
enter
repnz
cmp
mov
and
mov
je
adc
xor
addr16
bswap
popa
lods
jge
xor
jmp
gs
movs
(bad)
nop
test
shl
test
xchg
adc
rcr
stc
and
xchg
(bad)
popa
xchg
sbb
xlat
or
cmp
scas
outs
clts
dec
mov
pop
lods
test
cmp
push
fbstp
out
mov
movs
shl
sub
ja
scas
adc
mov
dec
add
es
jp
fld
dec
push
icebp
mov
sti
sub
outs
outs
sbb
push
push
inc
ds
mov
xchg
jl
cld
add
retf
mov
mov
div
(bad)
out
or
jne
ret
sub
inc
jmp
xchg
in
jnp
cmp
mov
pushf
add
loope
das
call
ficomp
jae
enter
daa
call
pop
inc
dec
js
mov
es
dec
inc
das
mov
mov
dec
cmc
pop
stos
push
mov
jecxz
xchg
mov
dec
stos
mov
ins
sbb
call
sub
in
xchg
mov
sub
lock
stc
mov
jno
xchg
nop
adc
aas
(bad)
mov
add
xor
sar
mov
ja
call
fwait
js
xor
push
outs
fbstp
add
int
retf
push
pop
adc
pop
mov
outs
lahf
loopne
mov
push
popf
add
aad
stos
fnstcw
(bad)
cmp
jp
retf
es
xlat
sub
push
inc
loope
out
sbb
mov
nop
pop
mov
nop
pop
aaa
into
sbb
out
push
and
pop
mov
adc
add
push
and
pusha
mov
mov
std
adc
leavew
mov
mov
loopne
jno
nop
jno
push
pop
out
sti
cmc
jmp
ins
pop
loop
pop
cdq
scas
ins
mov
daa
pop
pop
mov
scas
and
xchg
cmp
add
aas
or
(bad)
aad
push
not
data16
adc
out
adc
paddb
sbb
rcr
jmp
adc
cmps
mov
(bad)
adc
movs
mov
into
xchg
push
sbb
sbb
push
fstp
(bad)
pinsrw
push
jle
rol
xor
push
jp
pop
cmp
push
mov
(bad)
rcr
xchg
or
xchg
out
in
rol
xchg
das
das
adc
shr
ja
call
mov
mov
nop
pushf
or
not
jle
(bad)
repz
js
(bad)
mov
sbb
ins
repz
pop
scas
and
dec
(bad)
xchg
dec
test
pushf
sbb
push
sti
pop
out
dec
das
mov
mov
push
rol
add
outs
jle
fild
test
xor
lods
out
mov
in
sub
sub
cmp
jmp
fcmovu
add
in
mov
push
sub
xchg
sub
sub
mov
mov
clc
imul
mov
adc
call
int
sbb
rcr
fbld
test
dec
jp
lahf
mov
mov
jmp
retf
adc
xor
not
cs
sub
int
push
nop
jns
or
das
inc
cmc
cwde
jg
scas
or
les
xor
dec
mov
pop
jnp
fucomi
push
mov
fs
mov
dec
mov
or
dec
mov
gs
add
xor
mov
sub
imul
xlat
push
dec
pusha
outs
sbb
inc
pop
add
push
pop
mov
ficom
pusha
mov
iret
stos
mov
jne
dec
lods
mov
and
dec
test
and
xchg
in
ins
iret
mov
adc
imul
int
iret
sub
mov
and
pop
xchg
and
xor
push
shl
std
enter
sti
or
fs
mov
dec
push
dec
imul
mov
mov
adc
and
jns
push
icebp
into
jne
and
cmps
xchg
shr
test
sti
push
(bad)
fwait
inc
mov
mov
adc
sub
sbb
dec
sbb
inc
or
call
mov
pop
das
call
and
scas
stos
push
jle
das
xchg
and
xor
xchg
test
je
sub
(bad)
push
jle
push
fwait
icebp
fidiv
repnz
and
mov
dec
cmp
hlt
mov
xchg
ret
and
or
mov
lods
mov
adc
add
or
xchg
rcr
jle
cmps
jp
div
inc
into
sbb
mov
push
into
jmp
adc
mov
sar
lahf
movs
fidivr
adc
jmp
sbb
jne
push
loopne
inc
in
mov
jbe
js
xor
retf
retf
mov
(bad)
in
clc
test
push
lods
mov
ret
mov
data16
jge
in
xchg
shl
stc
jnp
add
sete
dec
sub
popa
stos
inc
mov
jg
cmc
pop
div
call
mov
mov
in
mov
(bad)
adc
outs
paddsw
rol
jle
(bad)
jle
cld
dec
sub
mov
shl
pop
cli
xor
adc
loop
(bad)
xor
adc
or
mov
in
mov
lods
mov
dec
(bad)
adc
adc
aas
aaa
popf
in
outs
push
int3
push
mov
pop
ret
retf
into
inc
pop
pop
mov
fisttp
repnz
ss
mov
push
das
aam
mov
mov
cmp
scas
mov
xor
adc
inc
rcr
mov
sbb
clc
mov
invd
cmp
sbb
pop
xor
xchg
test
repnz
shl
lods
mov
sbb
mov
or
mov
js
mov
cmp
dec
inc
ja
dec
mov
sub
mov
js
js
add
mov
rcr
leave
sahf
pop
jge
mov
sbb
mov
jbe
out
iret
data16
icebp
mov
retf
(bad)
sbb
fsubr
imul
ins
or
rol
sbb
cmc
jp
jbe
mov
cs
pusha
sub
in
int
mov
push
xchg
loop
cs
stos
jp
bswap
adc
in
pop
shr
popf
push
push
iret
add
sbb
sub
stos
bound
cmp
jmp
aam
imul
mov
inc
repnz
lahf
dec
scas
aad
test
stos
ins
mov
pop
out
lock
dec
in
out
aaa
jmp
iret
push
cmps
xor
test
sbb
xchg
jb
cmp
cwde
dec
ror
bound
fisttp
add
call
inc
not
rcr
loopne
sbb
fwait
je
sbb
shl
enter
cdq
cmp
jne
jns
mov
xor
push
popf
xor
stos
or
int
(bad)
push
mov
inc
mov
lods
shr
jmp
mov
repz
gs
into
dec
push
mov
or
sar
pusha
or
scas
retf
dec
mov
and
xchg
mov
cmp
lods
ror
or
push
sbb
out
pop
rcl
dec
lock
xchg
(bad)
call
fdiv
push
or
inc
imul
in
iret
(bad)
outs
into
outs
mov
jp
xchg
mov
mov
adc
pop
dec
ror
mov
inc
hlt
cmps
iret
fst
fcmove
push
mov
div
rcl
imul
ror
or
mov
(bad)
lahf
les
jg
cs
nop
push
pushf
popf
sbb
jp
push
call
aam
or
add
cli
std
cmp
jbe
dec
out
push
pushf
xchg
and
adc
xchg
std
push
sub
and
shr
(bad)
in
outs
sbb
pusha
mov
jp
xlat
mov
ror
(bad)
fstp
into
stos
mov
pop
push
ret
mov
out
in
add
out
pop
cli
sub
data16
sub
hlt
jns
push
mov
mov
jp
stc
mov
dec
movs
add
imul
xchg
sbb
jno
dec
sub
cwde
mov
jbe
retf
push
div
pop
xchg
hlt
and
dec
sbb
xor
and
movs
xor
dec
push
out
fidiv
aad
jg
xchg
add
popa
int3
jp
adc
inc
add
mov
or
out
jo
push
clc
adc
xchg
fidivr
jo
cli
aad
adc
sar
or
div
sar
stos
in
sbb
aaa
nop
jae
jecxz
jp
pop
adc
stos
lahf
pop
dec
push
jle
add
leave
mov
and
loopne
mov
aad
xchg
ins
in
cmp
jnp
or
pop
ss
in
mov
fbld
lds
jge
mov
cmp
adc
push
sbb
fs
xor
pusha
push
out
push
aas
sub
xchg
call
mov
sar
(bad)
mov
inc
das
xchg
or
push
movs
dec
adc
sahf
scas
ins
or
sub
ja
inc
xchg
icebp
cld
mov
cmps
retf
out
iret
xchg
daa
dec
arpl
jmp
daa
mov
xchg
cmp
fdivr
loop
mov
inc
sti
shl
sub
push
and
jne
loop
fsubr
outs
ins
push
(bad)
fsubrp
test
adc
jp
aas
jae
xchg
or
mov
sbb
pop
adc
fbstp
fild
aad
fwait
imul
js
xor
or
popf
in
adc
mov
adc
pop
push
mov
cmps
stos
outs
xor
test
sbb
(bad)
inc
mov
cmp
addr16
mov
xor
shl
dec
cs
mov
in
mov
(bad)
out
mov
mov
std
xchg
mov
jb
push
in
push
shl
cmp
call
stos
popf
(bad)
push
js
sub
cmp
sbb
dec
jns
and
loopne
jg
lahf
in
fmul
ret
mov
jl
and
lea
sti
sbb
push
fbstp
fmul
retf
xor
pop
xchg
jns
sbb
push
xchg
jecxz
mov
(bad)
push
outs
mov
rol
loopne
cli
test
and
cmc
test
inc
inc
dec
nop
adc
mov
add
xor
cmp
inc
and
lahf
ror
mov
jp
repnz
iret
ret
cmc
fld
mov
xchg
mov
xor
sahf
nop
jne
arpl
test
jno
dec
jno
rcr
xor
in
jne
mov
std
xchg
aam
jmp
or
mov
dec
in
push
add
and
push
push
and
push
adc
nop
mov
or
mov
jne
mov
and
popf
sub
mov
jae
hlt
jl
clc
lock
xor
into
cs
jmp
push
add
std
popf
xchg
(bad)
mul
daa
lock
loopne
ret
push
jp
cmps
mov
inc
mov
or
enter
xor
dec
fcmovnb
ins
sbb
sahf
inc
test
retf
ret
shl
dec
scas
(bad)
out
pop
adc
push
push
mov
shl
push
dec
or
cmps
fxch
and
jne
push
mov
ins
dec
fdivr
and
(bad)
imul
dec
push
(bad)
aas
mov
cmp
sti
mov
add
inc
mov
push
sbb
add
jle
jb
and
popa
xlat
xchg
hlt
mov
mov
push
xor
add
jle
cmp
push
mov
adc
jmp
gs
(bad)
repnz
xchg
sbb
les
jo
lds
dec
dec
mov
mov
mov
dec
jns
arpl
test
inc
out
sbb
rol
int
adc
(bad)
sub
(bad)
push
out
aas
mov
mov
enter
sbb
test
sbb
mov
out
jnp
pop
sahf
dec
inc
push
dec
imul
daa
pusha
out
dec
mov
add
add
push
jp
shr
lock
ret
jg
pop
movs
sti
adc
pop
sbb
fadd
jo
dec
inc
and
sub
xor
or
call
outs
pop
ror
test
sbb
pop
retf
xor
push
mov
mov
inc
push
mov
les
sbb
xchg
arpl
popa
xor
das
clc
or
pop
pop
pusha
outs
pop
or
daa
mov
add
shl
mov
cmp
inc
fnsave
fsub
(bad)
iret
add
iret
imul
inc
(bad)
fst
jl
sub
mov
shl
cmp
xor
pushf
adc
xlat
dec
mov
(bad)
sub
pop
dec
or
test
add
add
mov
pushf
jb
rol
fldenv
shr
sub
lahf
cmp
push
enter
imul
add
int
xor
into
int3
jg
mov
jg
mov
and
daa
ror
adc
(bad)
mov
fld
push
addr16
and
in
daa
mov
cwde
dec
cmp
or
outs
sbb
push
push
jo
ficom
add
das
xchg
dec
loopne
movs
dec
xchg
in
(bad)
lds
(bad)
in
mov
or
push
xlat
dec
inc
test
adc
movs
aad
fistp
or
add
loopne
mov
and
sbb
push
cmps
sahf
icebp
jg
mov
sub
ins
add
jbe
push
xchg
jl
popf
xor
jae
lds
bound
lock
adc
mov
jp
stos
inc
ror
adc
div
xchg
or
int
fbld
xor
push
neg
in
pop
fmul
push
mov
in
out
leave
or
adc
stos
mov
xchg
lock
loope
ins
mov
add
jae
add
push
dec
addr16
neg
inc
and
ins
arpl
ret
jnp
div
pop
neg
sbb
jmp
retfw
xor
xor
push
dec
std
xchg
jo
and
enter
fstp
es
cmc
jne
adc
mul
mov
lea
add
mov
(bad)
in
scas
fst
mov
imul
push
shr
mov
ret
push
enter
xor
retf
ror
dec
add
bound
add
cmp
xchg
pop
add
pop
pop
adc
and
(bad)
push
and
pushf
fcmovnb
xchg
adc
sbb
cli
aad
and
push
jecxz
dec
cmp
add
jb
jo
daa
mov
shr
xchg
mov
shr
jmp
lea
adc
retf
pop
js
bound
mov
sar
mov
clc
retf
sti
adc
add
pop
mov
push
inc
outs
xor
bound
mov
mov
or
dec
mov
xchg
imul
loope
cmp
fistp
jmp
hlt
bound
fdiv
cmps
fcom
sti
(bad)
mov
sti
push
inc
inc
xor
xchg
int3
dec
mov
or
mov
adc
std
call
addr16
bound
add
sar
retf
sub
xor
lds
fistp
and
and
mov
stos
movs
stc
loopne
xlat
pushf
es
or
mov
test
cs
repnz
add
sbb
xchg
movs
es
push
enter
int
push
movs
(bad)
jno
mov
dec
mov
mov
rcr
and
jl
out
push
fild
and
cdq
fs
mov
xchg
loop
or
xor
add
adc
mov
and
ret
bound
mov
inc
test
movs
icebp
pop
stos
(bad)
sbb
fcomp
test
adc
cs
sub
inc
mov
stos
lea
sub
push
iret
int3
push
into
and
jp
add
cmp
inc
xor
cmp
out
fldenv
lahf
xchg
outs
mov
adc
xchg
popa
stos
repz
sbb
std
jmp
lds
sub
das
(bad)
or
mov
scas
loop
dec
call
clc
call
aas
push
movs
nop
lods
test
pushf
mov
bound
(bad)
xor
adc
clc
aaa
mov
mov
out
fbld
adc
mov
xchg
repz
mov
mov
out
aas
test
cmp
stos
div
sbb
push
mov
mov
mov
xchg
mov
jb
ja
fcomp
cwde
adc
cld
loop
into
ja
cmp
sar
int3
mov
test
cs
xchg
and
nop
mov
and
lahf
ds
jo
mov
fcomp
ja
(bad)
cli
shr
into
inc
data16
shl
gs
dec
xor
ja
mov
xchg
dec
popf
add
and
popf
loope
add
mov
jmp
test
addr16
cmp
mov
cmp
mov
adc
lods
inc
xchg
aas
jl
mov
add
sub
xor
aaa
xchg
inc
out
mov
mov
sub
pop
sub
and
cmp
test
and
jae
icebp
out
jmp
add
or
xor
cmp
cmp
(bad)
stos
or
outs
mov
mov
scas
fmul
enter
loope
sub
or
sbb
or
push
int
je
retf
or
jnp
ret
mov
jb
pusha
lds
(bad)
js
mov
inc
scas
sbb
popf
mov
shl
mov
dec
xor
ins
jb
movs
fild
ret
call
fs
or
jl
test
dec
ja
hlt
ins
dec
xor
mov
mov
jl
xor
bound
and
push
scas
sbb
mov
test
jbe
(bad)
jnp
add
in
jnp
fisttp
fadd
jnp
jecxz
enter
stc
push
cmp
fs
in
(bad)
mov
sbb
and
cmps
stos
mov
inc
rcr
(bad)
push
sar
stos
lods
daa
mov
arpl
aas
add
je
mov
aas
(bad)
pusha
daa
test
ins
sar
inc
add
jo
(bad)
mov
scas
lock
xchg
stos
test
add
lahf
punpckldq
cmps
and
loope
popa
test
rdtsc
fnstenv
js
cmp
cmp
mov
push
push
add
mov
(bad)
mov
rol
mov
aad
sbb
aad
leave
pop
dec
add
sar
pop
sub
xlat
ds
rcl
xchg
fcmovnbe
dec
outs
jle
call
call
push
mov
imul
xor
movs
and
hlt
hlt
test
sbb
popw
(bad)
cli
in
scas
inc
push
leave
cmp
push
int
add
push
mov
pop
or
mov
sub
lock
dec
add
mov
leave
inc
into
fisub
std
neg
aad
jb
aam
fwait
xchg
cdq
retf
jmp
pop
in
push
add
xor
mov
xor
test
outs
pop
loop
js
retf
(bad)
xchg
xor
stos
jmp
or
add
adc
sub
mov
lock
in
mov
jns
mov
dec
sti
adc
and
pusha
cwde
movs
inc
xchg
pusha
mov
fwait
lea
push
lods
jb
stos
test
pop
les
or
xlat
xor
out
ja
aam
mov
add
sbb
sbb
pop
daa
add
and
test
dec
iret
dec
pop
mov
inc
mov
loope
data16
bound
mov
dec
cld
call
mov
cmc
call
mov
stos
cmp
cmp
outs
inc
inc
mov
or
xchg
jg
out
add
ins
call
call
data16
lahf
retf
fwait
scas
in
xchg
in
and
add
mov
dec
stos
hlt
sub
into
mov
lods
dec
aaa
das
pop
xchg
jge
adc
stos
push
jl
ins
adc
dec
ds
es
pop
adc
inc
gs
push
retf
sbb
jecxz
ja
ret
jb
xchg
mov
cld
or
and
jo
test
lock
fadd
xchg
lea
or
mov
test
in
mov
pop
call
sti
movs
mov
mov
jne
out
xchg
dec
pop
or
push
test
fisttp
aaa
add
test
jae
and
push
loop
xor
popa
inc
and
mov
(bad)
adc
and
mov
or
outs
rol
(bad)
(bad)
inc
jae
loope
jne
leave
cld
push
ficomp
jmp
push
and
push
loop
xchg
scas
stos
inc
repz
pop
das
jmp
repz
or
scas
inc
pop
push
pop
pop
jecxz
setno
shl
xor
xor
mov
pop
aam
cmps
pop
mov
sti
sahf
cmp
int
and
push
(bad)
(bad)
jge
mov
push
out
xor
aam
push
rcl
bswap
mov
jb
dec
cmps
inc
lahf
push
cmp
push
leave
outs
cmp
into
scas
retf
js
mov
sub
popf
imul
call
and
mov
lahf
inc
std
out
mov
fs
mov
es
add
popf
int
adc
icebp
cmp
test
push
addr16
aad
xor
mov
out
in
sbb
pushf
into
js
popa
jb
in
dec
outs
stos
out
sub
shr
mov
dec
cli
jno
in
dec
jl
in
fs
and
sub
pop
repnz
ret
mov
xlat
adc
fidiv
sub
pop
dec
ins
stos
sbb
rol
push
pop
clc
retf
mov
and
or
pop
push
aam
out
mov
loopne
jmp
ret
and
scas
jbe
jae
fidiv
sbb
daa
push
sub
ror
xchg
mov
sbb
dec
scas
das
xchg
sub
dec
pop
mov
and
inc
imul
gs
enter
iret
inc
push
mov
in
xlat
adc
xchg
sti
inc
jecxz
add
out
fwait
scas
dec
fisttp
inc
add
enter
cmp
aam
and
jp
xchg
(bad)
pop
daa
mov
pop
imul
xchg
mov
mov
js
shl
adc
and
out
inc
add
xchg
fimul
sbb
xchg
pop
les
mov
icebp
shl
pop
mov
or
stc
fcom
xchg
dec
xor
cmp
cli
add
push
inc
push
lods
aaa
jns
and
imul
lahf
test
cmp
cmc
inc
pop
pop
xor
(bad)
adc
dec
xchg
mov
call
push
jo
shl
lock
adc
push
sub
inc
out
pop
xchg
sbb
bound
imul
adc
mov
pop
inc
lods
popf
mov
sub
lds
in
push
repz
xor
add
fldenv
mov
sbb
test
ss
hlt
dec
mov
add
mov
mov
xor
adc
int
lods
push
xchg
rcr
mov
pop
mov
test
pushf
repnz
dec
ret
in
lods
ficomp
xor
ja
sub
stos
push
mov
jo
or
ins
cmp
jae
adc
xchg
ja
pop
cdq
popf
mov
call
xchg
fcom
jmp
jb
inc
ins
shl
icebp
xor
and
sub
cmp
repz
and
jp
call
pop
test
movs
out
or
sbb
mov
or
popf
add
pop
pop
xor
sar
out
sub
mov
call
cwde
add
pop
es
jb
mov
and
inc
stos
add
icebp
test
lds
jg
sbb
sub
dec
movs
push
inc
jne
xlat
call
stos
jp
out
shl
or
in
add
sbb
push
inc
das
(bad)
and
lahf
jecxz
xor
adc
cmp
daa
sub
or
adc
je
repz
test
jg
sahf
ret
cmp
call
push
cdq
sub
xor
xchg
mov
xor
xor
(bad)
in
repz
sti
mov
sar
arpl
cwde
push
cmp
jmp
bnd
cmps
cmc
in
out
sub
fldenv
aad
ds
(bad)
mov
xor
mov
sti
inc
lahf
fdiv
ss
js
mov
add
into
cwde
xchg
pop
xchg
(bad)
clc
out
mov
push
fldcw
mov
sub
add
jp
pop
push
inc
adc
inc
pop
idiv
nop
push
ins
xchg
push
and
(bad)
out
mov
stos
cmp
push
loop
mov
mov
stos
clc
mov
mov
jge
(bad)
or
into
dec
mov
out
and
in
mov
scas
or
add
mov
loope
mov
lds
std
or
das
xchg
jl
cwde
sbb
mov
data16
pushf
aas
xchg
jns
sub
call
push
add
call
mov
sub
lea
es
sti
addr16
jno
pop
mov
fcom
push
fs
arpl
gs
jmp
sub
cmps
mov
cmp
rcl
outs
mov
in
adc
mov
xor
push
jp
sub
das
sub
cmc
(bad)
cmp
adc
out
xchg
ins
loopne
push
enter
push
inc
push
mov
dec
into
jmp
mov
dec
test
cli
aad
push
xchg
hlt
push
dec
push
dec
int
arpl
popf
adc
or
jo
fld
mov
hlt
in
cmp
cli
xchg
(bad)
popa
jle
mov
jle
je
rcr
mov
lahf
mov
shl
and
mov
iret
mov
cmps
mov
mov
aam
enter
fcom
(bad)
sbb
mov
fild
call
xchg
adc
jne
add
pop
inc
dec
adc
and
ins
aaa
aaa
cmp
jmp
jp
fstp
push
inc
loopne
push
cmp
pop
jmp
repnz
sbb
lods
gs
jge
test
jl
cmp
mov
push
lods
mov
jl
adc
mov
add
or
jne
rcr
pop
pop
xchg
mov
stc
push
push
jecxz
dec
push
mov
dec
(bad)
test
mov
out
std
mov
sahf
pop
xchg
xor
daa
aaa
pushf
(bad)
jb
inc
call
push
loopne
push
and
or
jle
add
cmp
and
(bad)
scas
sub
adc
xor
je
jmp
mov
fs
xchg
outs
test
mov
out
cvtdq2ps
dec
pop
jmp
and
sub
sbb
stos
sub
pop
push
in
popf
sahf
dec
imul
jb
jae
jno
dec
fidiv
int3
cwde
(bad)
xchg
jno
shufps
sbb
ret
sahf
out
mov
and
sbb
out
push
mov
pop
and
es
xor
jbe
and
std
push
xchg
push
xlat
dec
jb
call
pop
xchg
into
sbb
jno
adc
jecxz
fimul
loope
test
pop
add
cdq
dec
add
cmp
fst
sub
scas
cmp
aaa
loop
or
aam
inc
adc
jns
sar
fdivr
loop
pop
cdq
mov
ficom
mov
mov
sbb
ficomp
jno
jge
cmp
or
mov
pop
rol
(bad)
push
and
or
push
mov
loopne
inc
or
jne
pop
pop
and
sbb
sub
pop
call
xchg
loopne
jge
inc
xchg
xlat
fadd
ret
mov
jo
add
mov
std
push
je
test
mov
loop
adc
mov
loop
mov
outs
pop
push
int
movs
mov
cmp
movhps
fs
and
jle
mul
push
sub
sub
cdq
test
sbb
or
lock
test
leave
iret
cmp
(bad)
es
sub
cmp
leave
retf
jmp
cwde
clc
(bad)
ret
or
adc
push
add
push
sbb
dec
ds
je
cmps
xchg
or
jnp
and
inc
arpl
mov
ja
inc
dec
into
outs
mov
jl
jne
ins
popf
jp
loop
xchg
aad
ss
jae
add
push
ret
mov
(bad)
xlat
stos
out
popa
add
pop
fcmovnu
ins
test
pop
loope
sar
jge
and
jmp
cmp
sbb
xchg
cs
das
fldenv
mov
retf
loop
push
push
push
xchg
mov
cmps
mov
mov
icebp
das
xor
adc
mov
jmp
cmp
cmp
les
ds
call
or
xchg
popf
dec
inc
xchg
lahf
out
je
into
dec
sar
xor
or
jle
dec
mov
mov
pop
push
pop
push
mov
mov
(bad)
pop
fidiv
inc
mov
pop
add
stos
adc
push
lods
out
loope
adc
push
call
jg
or
nop
out
test
inc
test
outs
adc
call
and
inc
sbb
xchg
iret
pop
push
dec
idiv
scas
das
cld
mov
add
push
mov
retf
out
add
repnz
icebp
sub
cmp
cdq
rcl
lock
cs
mov
popf
stc
xchg
push
push
cmc
and
xor
pop
or
pop
adc
xchg
imul
hlt
dec
idiv
jle
xchg
stos
jecxz
daa
sub
sbb
inc
add
dec
add
invd
add
sbb
lods
ins
xchg
mov
sbb
sub
in
dec
dec
mov
push
mov
push
sub
mov
or
xchg
mov
loope
sub
test
aaa
jo
mov
push
cmc
xor
inc
cmps
gs
xchg
add
cs
sysret
mov
mov
and
xchg
xchg
adc
xor
clc
call
inc
lods
mov
outs
lock
mov
jnp
loopne
jo
sti
mov
retf
jmp
arpl
ret
jno
push
retf
add
xor
sbb
js
retf
push
pop
repnz
mov
lods
aad
sub
int3
mov
inc
shl
and
inc
sub
aas
adc
sbb
pop
adc
inc
sub
jns
mov
stc
ret
inc
jge
test
mov
mov
in
dec
out
cmp
fs
sti
jl
jno
ds
sub
sub
rol
das
sbb
aaa
cwde
retf
sar
inc
retf
(bad)
cs
or
dec
inc
retf
retf
xor
loop
mov
lods
cld
xchg
repnz
inc
xchg
das
call
lods
lods
jbe
movs
or
push
adc
adc
enter
mov
rcl
or
mov
mov
test
sbb
cmp
dec
sbb
(bad)
mov
xchg
bound
and
add
sub
mov
stc
fild
lds
cmc
jmp
xchg
out
ret
inc
jmp
cmps
dec
mov
cmc
leave
cmps
push
popf
xor
xchg
cmp
pusha
and
sbb
mov
or
push
dec
into
stos
or
jl
dec
add
jg
cmp
pop
mov
daa
icebp
shl
outs
jmp
fcomp
ret
xchg
mov
sbb
loopne
inc
bound
jmp
test
pop
mov
or
mov
pop
add
(bad)
lods
aad
push
fst
iret
loop
fbld
sub
(bad)
lods
xor
mov
in
or
push
neg
sbb
xor
push
xchg
out
cmps
xchg
mov
dec
psubw
adc
repz
fsubr
add
retf
jg
lea
dec
jp
and
cmp
cwde
add
inc
and
lahf
adc
arpl
mov
inc
pop
out
xchg
cmps
outs
popf
fisubr
xor
cli
dec
sbb
ret
dec
cmp
cld
mov
lock
mov
xor
mov
icebp
rol
xchg
pop
push
xchg
push
adc
xor
imul
push
mov
shr
iret
mov
sbb
mov
cmp
imul
sub
push
mov
cmp
mov
je
aad
dec
sbb
sti
jp
mov
push
(bad)
bound
call
cmps
in
dec
rcl
mov
mov
xchg
pop
cmp
pop
dec
xchg
inc
adc
lock
adc
mov
add
xor
inc
sub
enter
aam
pop
inc
mov
jbe
mov
pop
loopne
loope
pop
in
dec
push
xor
add
arpl
pop
stos
sub
add
and
mov
cli
fbld
sub
jecxz
out
test
push
inc
xchg
inc
hlt
mov
rcr
mov
push
mov
inc
outs
cmp
and
jp
(bad)
mov
xor
mov
ins
gs
popf
adc
stos
inc
enter
adc
call
sbb
push
mov
ss
jb
retf
xchg
rcr
pop
mov
test
jmp
(bad)
bound
(bad)
out
adc
bound
adc
jp
repz
pop
popa
outs
imul
scas
push
pop
cmp
inc
cdq
adc
sub
cmp
push
in
mov
out
mov
xchg
fnstsw
xor
in
pop
push
pop
push
sub
mov
pop
hlt
mov
inc
inc
or
xchg
mov
or
and
in
sar
outs
bnd
and
pop
xchg
jns
ret
push
mov
movs
pop
and
pop
sbb
jb
mov
je
mov
sbb
in
cli
adc
add
retf
shr
rcl
cmc
mov
push
pop
adc
sub
mov
dec
xchg
add
fwait
push
and
sahf
in
aam
test
stc
pushf
sti
sub
dec
jne
outs
hlt
sub
jl
and
fcomp
push
aaa
in
(bad)
fwait
test
sub
movs
add
fistp
jg
loope
nop
pop
ins
cmp
adc
ins
aad
(bad)
xlat
dec
lods
cmp
sbb
fcmovbe
ins
dec
cmp
mov
rol
pop
enter
jmp
fdivr
mov
add
dec
push
sbb
mov
in
out
dec
test
push
popf
or
dec
mov
mov
fistp
mov
pop
out
test
(bad)
dec
int
je
cmp
push
jo
mov
rol
mov
push
pop
adc
rcl
out
ds
push
fld
adc
jae
call
enter
inc
push
shr
jne
fstp
pusha
jge
das
xchg
pusha
retf
cmp
mov
ins
in
push
xchg
mov
into
lds
jg
mov
clc
hlt
sbb
loop
push
pop
or
adc
mov
lahf
cwde
in
push
div
ret
dec
aad
fcom
push
dec
xchg
mov
inc
or
(bad)
xchg
outs
popa
xchg
scas
idiv
fld
sub
outs
cmps
xor
push
or
and
pop
cmps
scas
add
rol
movs
mul
leave
cmp
inc
sub
sub
add
jp
loope
xor
add
in
jmp
bound
add
or
movs
stos
push
xor
in
out
pop
mov
mov
mov
sub
jle
and
mov
jp
push
rcr
fcom
retf
jge
dec
mov
pop
movs
jl
movs
mov
mov
push
push
outs
lds
mov
cmps
xchg
dec
cmc
xor
xor
or
lea
scas
sub
sbb
repz
dec
inc
pop
push
enter
pop
in
mov
pushf
js
ins
mov
xchg
xchg
fsubr
ja
jo
out
ret
adc
add
jbe
cmp
xchg
leave
or
inc
ret
mov
popf
mov
int3
aas
jg
mov
push
movs
cmp
setp
(bad)
cmc
bnd
rcl
pop
jnp
push
stos
scas
retf
adc
dec
sbb
inc
lods
int
pop
pop
dec
mov
xchg
pop
and
mov
lock
pop
add
jbe
inc
and
sbb
mov
pop
mov
cmps
jge
add
xor
inc
dec
cld
sub
fisubr
xor
add
test
inc
pusha
jle
lods
jns
test
(bad)
jp
sub
test
jbe
add
push
cmc
scas
cld
int
aaa
inc
cmp
daa
pop
loop
sbb
mov
lea
add
pop
out
inc
cmp
sub
xchg
jo
and
call
fiadd
jb
shl
stos
std
mov
mov
inc
add
test
lock
sbb
jmp
aaa
int3
xor
and
add
(bad)
aaa
mov
inc
hlt
fs
fdivr
std
jge
add
adc
add
mov
and
(bad)
rol
xchg
ja
cmps
cmp
xchg
push
imul
rcr
cmp
mov
std
push
sub
pop
imul
ja
cmp
ffree
lock
xchg
dec
repnz
pop
sub
xor
ror
addr16
(bad)
jne
outs
mov
mov
jg
idiv
(bad)
loopne
or
(bad)
fwait
mov
sbb
mov
fild
push
xchg
(bad)
cmps
dec
xor
ds
std
scas
adc
xchg
jno
dec
lods
cmps
fwait
mov
cmp
xor
aad
sub
shl
add
xchg
clc
mov
jns
das
cmps
in
mov
in
dec
fild
repz
push
sub
test
mov
add
int
add
xchg
(bad)
jl
daa
push
mov
cmps
cdq
adc
jmp
repnz
out
in
daa
xor
test
in
sti
mov
gs
cmp
mov
mov
jecxz
xchg
dec
loope
fnstenv
ret
call
xor
adc
popf
aam
lea
mov
test
pop
fisubr
shr
xchg
(bad)
push
and
or
scas
fnsave
cmp
loope
js
aas
das
mov
out
stc
sub
test
out
pop
call
push
xor
test
adc
push
fstp
xchg
xor
movs
xor
je
fwait
mov
cmc
dec
pusha
mov
and
std
lahf
xor
dec
xchg
das
jge
jmp
jne
mov
xor
sti
xor
ret
popf
sbb
sub
ret
inc
and
mov
(bad)
inc
inc
jno
or
ret
mov
jbe
das
mov
or
scas
sub
mov
mov
sar
movs
pop
sbb
cld
fiadd
and
(bad)
repnz
or
add
xchg
repz
lock
out
xor
jmp
sbb
cmp
jle
sub
jecxz
int
xchg
add
inc
mov
ins
mov
popa
adc
in
sar
shl
xlat
xchg
inc
mov
mov
test
xchg
or
or
mov
sbb
or
add
repnz
call
inc
add
popf
mov
movs
ins
rcl
and
test
mov
adc
adc
sar
add
lods
cmp
mov
jg
(bad)
hlt
push
mov
mov
ins
xor
xor
(bad)
mov
jge
pop
test
xor
adc
(bad)
pop
dec
push
bound
sbb
pop
loop
retf
in
in
jnp
not
movs
test
ror
in
jbe
mov
(bad)
out
mov
cmp
and
sub
or
xor
add
addr16
ins
shr
xchg
add
xchg
sbb
jne
jno
push
add
int
jg
push
push
mov
test
scas
fs
add
add
dec
add
cmp
xchg
inc
cmp
sbb
ret
div
xchg
test
clc
fist
dec
mov
inc
loopne
(bad)
cmp
inc
push
call
xchg
mov
lods
dec
add
dec
push
xchg
fs
sbb
clc
lods
mov
loop
mov
sub
idiv
mov
test
mov
data16
sahf
push
jb
lods
mov
push
lea
fiadd
jne
mov
and
enter
push
data16
pushf
push
lds
mul
imul
fadd
cli
adc
or
sbb
sbb
in
aas
mov
in
fld
add
div
jmp
push
leave
xchg
dec
cmp
pop
xchg
or
loope
aam
or
inc
std
mov
jg
iret
test
mov
shl
je
ds
(bad)
in
mov
mov
mov
adc
js
add
jecxz
jae
mov
xchg
inc
out
adc
fldenv
jne
pop
(bad)
aam
mov
jns
xchg
xor
(bad)
jg
fadd
sar
pmuludq
jns
adc
arpl
jl
in
dec
fmul
stos
das
adc
adc
pop
call
int
pop
(bad)
pop
ffree
jmp
mov
jp
lods
jnp
fadd
gs
dec
sub
call
sbb
fwait
jne
test
push
lods
dec
mov
inc
jns
cli
pop
jb
repnz
test
pop
mov
pop
fs
in
mov
push
or
loope
ins
aad
sub
lahf
add
jp
enter
nop
call
outs
xlat
sbb
xchg
push
jl
loop
dec
test
pop
ins
adc
jbe
cmps
sbb
mov
test
test
std
and
jb
jo
imul
cli
cwde
(bad)
les
and
dec
jmp
xchg
jno
stc
push
jle
fwait
loope
jo
aam
jno
mov
out
xchg
push
ror
mov
hlt
sbb
xchg
(bad)
int
xor
and
mov
and
mov
xchg
xlat
lahf
xchg
pushf
ficomp
mov
pop
cmp
dec
sub
mov
mov
test
cmp
stos
retf
pop
dec
jb
cmp
sbb
jg
cmp
sbb
push
rcr
xchg
or
inc
pop
icebp
inc
push
bound
cwde
int
mov
mov
sahf
addr16
sbb
js
push
repnz
jmp
enter
dec
mov
add
fwait
mov
inc
fwait
enter
in
push
sub
idiv
xchg
add
pop
mov
and
or
daa
add
xchg
jg
ds
xchg
xchg
shl
xchg
outs
(bad)
pop
out
repz
push
mov
inc
mov
mov
sbb
aad
mov
into
cmp
and
mov
pop
js
sub
xor
mov
movs
xor
xchg
add
es
clc
sbb
fsubr
push
add
jecxz
mov
dec
pop
js
je
mov
mov
mov
push
ins
(bad)
retf
xchg
mov
jmp
add
push
sar
out
fsubr
mov
push
fucomi
sbb
or
cmp
outs
jbe
retf
cdq
jns
leave
xchg
mov
test
ror
je
adc
loopne
sbb
out
jae
test
loope
into
ss
daa
retf
xchg
dec
clc
pop
adc
(bad)
pop
cmp
imul
cmp
in
adc
push
outs
fsub
jmp
inc
mov
mov
ret
mov
mov
and
inc
jge
jnp
mov
repz
jae
add
push
fst
xor
push
xor
nop
scas
pop
call
imul
pop
and
loop
stos
dec
xchg
dec
idiv
mov
add
add
iret
pop
jne
jno
or
push
ins
jnp
sub
pop
jmp
inc
pop
xor
xchg
sub
jmp
sbb
jp
cli
icebp
cmp
sub
xlat
mov
arpl
xchg
jmp
retf
in
push
push
sub
nop
sbb
mov
adc
or
(bad)
or
retf
(bad)
fcom
repz
bound
mov
jae
cli
sub
addr16
icebp
scas
lock
scas
cmp
cmp
test
cs
lods
xchg
add
xor
sub
mov
sub
fcom
cmp
movs
dec
jno
push
xchg
shl
int
mov
xor
push
pop
sbb
scas
cld
mov
jge
xchg
xchg
push
xor
mov
xchg
push
dec
repz
leave
push
dec
es
mov
ja
xchg
sub
jmp
jmp
pop
jmp
cmps
adc
mov
pushf
repnz
sbb
sti
xor
xor
hlt
push
sub
mov
pop
in
int
(bad)
(bad)
das
cmps
outs
push
sbb
pop
ret
push
mov
icebp
mov
sbb
adc
sub
cdq
mov
in
mov
cmc
popf
inc
mov
ja
adc
pusha
int3
add
jns
adc
cli
in
push
loopne
cmp
into
arpl
or
mov
(bad)
inc
out
add
adc
ja
pop
scas
cmp
fcmovbe
jno
mov
loopne
xchg
fist
adc
dec
(bad)
call
and
mov
mov
rcl
cmp
jecxz
pop
jg
adc
inc
xor
add
and
shl
enter
sbb
dec
ret
push
lods
xchg
call
addr16
mov
inc
ins
(bad)
and
push
outs
adc
jg
or
xor
cmp
jns
sbb
enter
fnstsw
push
jae
lock
inc
scas
cmp
jg
(bad)
mov
stos
repz
mov
dec
not
retf
sub
sub
mov
call
leave
cdq
aaa
pop
or
sub
jle
add
or
bound
mov
fild
(bad)
mov
movs
pusha
jecxz
ins
or
les
loopne
mov
pop
imul
mov
pop
pop
xchg
add
or
jmp
ret
fsubr
and
jg
push
loop
mov
pop
mov
add
scas
sahf
mov
jecxz
and
sbb
add
scas
movs
cmc
pop
or
add
and
pop
and
lock
scas
dec
dec
test
dec
dec
sub
scas
push
and
dec
or
sub
jle
rcl
xor
cwde
or
shr
jo
dec
test
dec
cdq
cmps
comiss
xchg
pop
sbb
ins
jnp
test
mov
clc
iret
cmp
or
cmp
ret
fadd
test
mov
jo
sub
dec
cmp
inc
mov
adc
rcr
out
js
fwait
and
push
sub
repnz
add
pop
aas
mov
out
int
push
jmp
imul
faddp
adc
lods
pop
sti
xchg
outs
jl
aam
retf
add
xchg
jge
sbb
inc
sbb
mov
imul
jecxz
addr16
fidivr
sub
xchg
mov
push
movs
adc
faddp
add
nop
div
adc
push
pop
in
out
out
adc
cdq
enter
and
out
mov
add
cmp
popa
and
(bad)
add
sti
mov
pop
rol
xchg
cmp
jne
out
or
loope
fcom
push
test
iret
repz
nop
push
adc
sub
fsubr
in
enter
xchg
xchg
fwait
adc
mov
(bad)
cs
jae
or
jae
add
xchg
(bad)
lea
rcr
cmp
xchg
ret
ret
mov
int3
push
ror
in
test
pop
push
sub
rol
mov
das
jb
push
sbb
cmp
shl
xor
xor
ins
push
jmp
fsub
and
cdq
xchg
xchg
mov
xchg
add
add
jns
add
leave
je
mov
pop
sar
retf
cmp
sbb
rol
int
ficom
pop
push
in
mov
fist
outs
xchg
(bad)
movs
sub
mov
push
ror
ins
jecxz
ja
outs
mov
dec
push
mov
pop
enter
iret
or
shr
cmp
add
in
mov
add
je
pop
inc
sbb
sub
or
xchg
test
popf
add
adc
inc
mov
pop
xchg
cmp
mov
mov
scas
mov
jg
cmc
rol
adc
jmp
sbb
inc
cmps
sub
aad
in
addr16
cmc
in
(bad)
mov
leave
fisubr
add
cli
iret
pushf
sub
or
mov
xor
adc
mov
inc
inc
mov
xchg
xchg
or
push
adc
movs
fdivp
push
dec
outs
lods
std
dec
mov
push
movs
jecxz
sti
cmc
add
daa
lods
les
retf
jmp
add
sahf
mov
jl
retf
sbb
pmulhuw
and
aas
jmp
jo
sahf
mov
mov
push
adc
pop
mov
mov
adc
int3
pop
aad
ret
imul
sub
xchg
cdq
pop
mov
push
fst
sub
in
icebp
jno
cmp
adc
xor
or
mov
out
test
scas
or
push
pop
ror
jle
dec
shr
cld
bound
lods
sub
sub
xlat
dec
mov
jmp
or
std
push
(bad)
dec
jmp
call
or
inc
mov
jo
cmps
xor
pop
scas
adc
sub
sar
sbb
mov
shl
mov
mov
dec
mov
outs
xchg
sbb
(bad)
mov
inc
mov
cmps
std
imul
lods
inc
mov
cdq
call
jle
mov
jbe
or
adc
enter
push
aam
push
sub
and
test
mov
push
int
inc
cmps
cmps
dec
js
cmp
data16
cdq
xor
and
js
xor
movs
shl
pop
dec
add
add
mov
sbb
mov
inc
mov
mov
out
addr16
and
cmp
daa
xchg
repz
mov
and
in
and
(bad)
into
jne
lock
in
imul
in
push
ins
bound
loopne
fild
cmp
in
and
(bad)
jle
xor
mov
das
push
in
lods
push
push
neg
ret
and
xchg
test
mov
or
cmps
sbb
adc
xor
mov
mov
mov
jmp
imul
sub
xor
mov
test
jb
mov
pushf
jne
jae
push
mov
jle
mov
(bad)
lds
std
xchg
out
outs
add
jg
arpl
adc
jmp
neg
test
inc
mov
cs
imul
inc
add
loope
imul
dec
cdq
leave
shl
sub
adc
add
pop
je
inc
xchg
mul
jno
rcr
push
inc
(bad)
sub
push
les
in
es
test
sahf
test
rol
mov
and
adc
sbb
mov
or
repnz
test
rcr
call
dec
cmp
sbb
shl
cmp
adc
jl
mov
(bad)
pop
cdq
pushf
adc
int
dec
dec
and
lds
jge
xchg
addr16
in
cmp
(bad)
or
sti
(bad)
jae
xor
sbb
or
lahf
sbb
cmp
stos
fdivr
and
push
cmc
or
popf
stc
movs
mov
xor
dec
sub
mov
int
adc
bound
arpl
in
xchg
adc
mov
sub
jecxz
xor
js
out
jecxz
jge
fstp
inc
xor
outs
rcr
mov
bound
adc
fld
dec
jno
not
xchg
ins
adc
es
and
xchg
daa
push
ins
dec
movs
aaa
cmps
sbb
aam
imul
mov
pusha
sbb
jl
call
jmp
mov
lods
pop
push
ja
mov
pop
xchg
das
xchg
inc
or
mov
bswap
push
or
out
scas
hlt
daa
push
repnz
imul
push
inc
xor
dec
jmp
cmp
ss
cmp
xor
aam
xchg
inc
adc
mov
add
mov
stos
std
addr16
dec
out
mov
rcr
push
jne
cmps
adc
lods
add
xchg
out
ficomp
sbb
jnp
inc
scas
and
mov
repnz
adc
sbb
cmp
inc
pop
xor
xchg
mov
xlat
iret
mov
in
push
stos
mov
test
fisttp
loopne
test
mov
cmp
mov
sub
sbb
fimul
mov
adc
lods
(bad)
jl
aad
std
mov
or
in
es
adc
int
dec
(bad)
dec
add
xor
cmp
jno
ror
jb
mov
and
stc
cld
push
fsub
cdq
or
fneni(8087
imul
and
inc
xchg
jbe
stos
or
add
xchg
and
mul
mov
fstp
jns
cwde
das
and
loope
add
xchg
aad
sub
imul
jmp
std
lods
daa
nop
hlt
(bad)
jle
cs
push
cdq
(bad)
hlt
test
or
in
loop
mov
out
aaa
jno
imul
push
inc
pop
ins
jecxz
arpl
adc
(bad)
(bad)
loopne
xlat
daa
pop
movs
mov
inc
popa
lock
enter
mov
and
xchg
fcomp
xchg
aam
clc
sbb
sub
add
hlt
adc
jb
jg
mov
imul
fld
jbe
sub
push
push
adc
sbb
hlt
sub
ret
movs
sub
cmc
int3
sub
cmps
dec
xor
jl
mov
retf
adc
gs
adc
mov
out
call
lahf
test
mov
mov
rcl
aad
xchg
xchg
pop
xor
imul
dec
dec
rol
add
and
or
repnz
cmp
jl
push
xchg
xchg
test
retf
xchg
inc
call
stos
mov
sahf
inc
sahf
and
dec
xchg
add
mov
mov
pop
loope
stos
call
xor
popf
mov
retf
outs
(bad)
mov
fwait
ins
sahf
inc
aam
fmul
jb
push
ret
retf
scas
not
mov
xchg
lahf
bound
iret
stc
dec
mov
xor
push
xchg
push
adc
or
jmp
push
dec
aam
pop
adc
or
pop
mov
mov
out
xlat
pushf
(bad)
(bad)
in
add
enter
loopne
ss
ret
push
xchg
xchg
test
fnsave
mov
pop
sub
(bad)
adc
xchg
lock
push
rcl
mov
fistp
sbb
cmp
adc
sub
sti
ret
push
adc
jo
into
jmp
add
dec
xchg
push
jmp
mov
dec
mov
cmps
dec
cld
retf
repz
pop
xchg
mov
in
mov
pop
out
fsubr
test
ss
pop
movs
xor
pop
pop
pop
out
stos
dec
adc
jne
arpl
push
fisub
jne
popa
es
pop
jg
div
sub
fld
inc
into
mov
push
icebp
pushf
dec
adc
je
push
enter
mov
fucomp
xor
fnsave
and
sub
aas
xchg
bound
stos
or
mov
dec
mov
mov
pop
sbb
inc
sbb
test
xor
push
pop
pop
pusha
cli
mov
repnz
inc
adc
push
(bad)
dec
adc
icebp
sbb
mov
or
test
loopne
repnz
pushf
fs
popf
mov
out
mov
das
gs
add
adc
retf
sti
pop
iret
dec
movs
push
sub
jle
das
mov
rcr
adc
js
lods
jb
adc
lods
int3
adc
xchg
ret
sub
mov
cmp
out
pop
aaa
test
or
scas
lods
dec
in
loope
jbe
scas
mov
xchg
sahf
xchg
inc
push
rol
in
retf
mov
push
sub
aam
pop
addr16
jp
pop
(bad)
nop
in
xor
xchg
mov
mov
test
jbe
mov
pop
and
call
sub
dec
add
mov
loopne
bound
(bad)
or
fimul
loope
sub
dec
scas
(bad)
popa
hlt
aas
je
mov
vpcmpgtw
push
and
pop
adc
push
pop
mov
fwait
mov
dec
outs
fdivr
loope
bnd
cmp
dec
adc
add
add
out
(bad)
xor
dec
fimul
xor
xor
mov
and
in
jg
sti
iret
in
push
aam
mov
sbb
jo
pop
je
add
test
cdq
xchg
sub
pop
cmc
push
mov
dec
ds
adc
mov
cld
pop
xchg
cs
jge
mov
sbb
jae
je
mov
lock
mov
inc
sbb
mov
test
in
push
jne
in
inc
jae
test
in
leave
cdq
shl
xchg
dec
add
adc
pop
adc
loope
mov
inc
sbb
push
js
push
cmp
scas
shl
pop
loope
repnz
pop
fucomip
adc
adc
push
stc
or
mov
gs
dec
jno
or
loop
pop
out
repz
shl
std
out
xchg
call
xchg
pop
jno
and
push
test
and
jecxz
or
adc
adc
inc
mov
sbb
mov
add
push
dec
in
ret
shl
pop
iret
push
jbe
cwde
sub
mov
and
add
sbb
loope
hlt
push
push
scas
iret
mov
xor
cmp
push
test
jp
adc
mov
pop
test
push
pop
mov
sbb
cmps
(bad)
pop
xchg
mov
xchg
ret
sbb
adc
sub
test
mul
stos
jns
and
fmul
stc
popf
fs
lahf
pop
ds
arpl
dec
or
retf
cwde
adc
clc
pop
movs
mov
inc
mov
mov
pop
sub
push
or
cmp
adc
sub
and
cmc
mov
sbb
xor
mov
cmp
cmc
fidivr
xchg
imul
cwde
in
call
cwde
jne
sub
sub
in
je
cmps
pop
sub
xchg
push
push
cdq
xor
xchg
scas
sbb
movs
pop
arpl
lea
mov
jno
jg
cmc
adc
mov
cmp
daa
int3
and
in
mov
mov
aam
sbb
mov
and
pop
jg
mov
mov
pop
add
loope
sbb
dec
out
aam
sub
iret
into
aaa
lods
sub
movs
mov
and
xor
mov
inc
fcom
add
mov
sub
jne
jmp
retf
scas
xchg
pinsrw
movs
lods
(bad)
mov
pop
ja
pop
(bad)
xor
stc
mov
or
xor
pop
adc
std
or
movs
fcomp
fisttp
stos
cmc
pop
xchg
std
xor
or
mov
jo
inc
and
cmp
leave
sub
stc
mov
xor
ins
sub
jnp
push
sti
and
enter
pop
xchg
push
neg
cld
cmp
push
jmp
loop
dec
dec
cmp
xchg
aad
xchg
nop
xor
adc
jl
outs
ins
inc
std
fdecstp
sub
clc
icebp
sub
sar
dec
fisttp
je
lock
loope
xchg
stos
outs
popf
xor
int
and
xor
add
loop
jo
cs
cmp
mov
and
jge
or
sub
mov
pusha
add
(bad)
push
or
nop
stos
jmp
dec
adc
sbb
or
push
jp
test
rcr
movs
jle
and
mov
sub
inc
push
movs
jb
ins
sbb
repz
into
dec
push
icebp
fadd
xor
pop
add
mov
sub
sbb
ins
fstp
(bad)
imul
sub
dec
adc
inc
xlat
ja
jecxz
loop
rcr
sar
adc
test
push
cwde
sub
jbe
sar
inc
aas
cmp
inc
sbb
test
mov
inc
aaa
mov
push
jns
pop
push
xor
cdq
test
out
mov
std
(bad)
(bad)
sbb
nop
(bad)
cli
mov
jmp
pop
mov
jecxz
push
mov
push
jecxz
dec
dec
or
inc
lock
mov
imul
int
out
mov
xor
sub
js
psubsb
jo
push
scas
popa
cmp
in
enter
jle
cmps
shr
loop
push
mov
xor
cmp
outs
out
rol
sbb
call
sub
rcr
and
sbb
hlt
push
repz
clc
mov
(bad)
(bad)
jecxz
out
add
cmp
not
inc
mov
mov
out
aaa
jns
out
movs
in
pop
sub
and
retf
cmp
shl
mov
pop
push
sbb
inc
int
mul
xor
cmps
dec
jo
dec
jmp
(bad)
fmul
faddp
dec
mov
inc
out
add
inc
outs
into
fisttp
cld
neg
hlt
mov
rcr
xchg
mov
cli
out
rol
push
lea
sub
outs
fisttp
outs
fldenv
lods
icebp
aam
frstor
inc
adc
les
or
test
and
dec
add
jmp
and
push
or
cmp
repz
enter
mov
in
rcl
push
pushf
int3
pop
aam
sub
rol
sbb
or
or
lea
scas
dec
push
cwde
retf
(bad)
test
pop
cmp
pushf
mov
imul
sbb
mov
hlt
cmp
fisttp
xchg
mov
fs
iret
or
xchg
cmp
cs
xchg
(bad)
mov
fisubr
inc
mov
push
and
cli
jle
pop
sub
jno
sbb
mov
shr
bound
add
ror
push
out
out
ins
lea
jmp
mov
push
das
xor
mov
es
pop
fisttp
mov
push
pop
fist
call
xchg
dec
jle
cs
aas
stos
rcl
inc
fstp
lods
jne
xchg
stos
sub
push
sbb
daa
mov
jl
loope
cmp
fsubr
inc
jl
hlt
imul
imul
pusha
push
mov
mov
pop
xor
in
ja
jns
jg
inc
sub
mov
add
xchg
dec
out
std
jae
inc
in
pusha
or
and
ins
leave
in
jmp
xor
fs
sbb
and
xor
push
das
inc
mov
xchg
mov
repz
mov
int3
or
hlt
xchg
dec
aaa
(bad)
icebp
xor
pop
inc
out
adc
cmp
push
cli
mov
cs
sbb
loope
mov
xor
jae
adc
pushf
jae
and
iret
inc
cmp
mov
movs
scas
(bad)
in
mov
or
nop
and
push
cmp
jg
pop
push
cmps
sub
mov
shr
fcomip
cdq
nop
rcr
call
jmp
les
into
mov
call
cmps
aaa
jle
psllq
outs
inc
jb
cmps
fs
popf
mov
xchg
jmp
aam
ins
dec
push
pusha
mov
js
ja
call
push
mov
push
sahf
xchg
aas
cmps
rcl
inc
jne
int
mov
aas
fild
pop
jbe
xchg
add
mov
loope
inc
sub
repz
je
sub
push
inc
ss
jecxz
in
movs
nop
movs
stos
loopne
sub
shl
shl
mov
inc
mov
xchg
int
hlt
iret
lods
dec
verw
mov
icebp
or
jbe
dec
mov
ficomp
cwde
in
(bad)
mov
sub
adc
jae
hlt
jmp
(bad)
pushf
mov
pop
jne
inc
cld
scas
pop
cdq
loope
or
or
xchg
test
cmp
lock
outs
push
and
mov
or
sub
lock
or
leave
(bad)
fbstp
push
sub
addr16
dec
(bad)
je
mov
leave
xchg
jae
fsubr
(bad)
out
cmps
push
cmp
xchg
xchg
es
setne
jns
inc
adc
and
nop
jbe
data16
ds
loopne
xor
xchg
pop
jge
xchg
fidiv
ror
and
jns
jae
inc
xlat
push
leave
mov
jno
sub
lods
mov
pop
or
pusha
and
fwait
xor
into
ss
ret
xchg
cdq
and
sahf
out
retf
xchg
pop
fbstp
xchg
jo
or
popa
into
mov
fsub
push
mul
(bad)
dec
and
pushf
pop
inc
lahf
sti
add
loope
push
cwde
mov
fdivr
aam
cmp
jl
ror
push
jl
mov
(bad)
jb
movs
pop
xchg
cmp
sbb
in
pop
data16
aam
xchg
xlat
and
pop
lock
mul
inc
cs
out
adc
ins
ins
call
mov
in
cmp
pusha
or
out
dec
cmc
ficom
movs
sbb
xor
stos
pop
nop
sub
mov
xchg
mov
and
ret
push
xor
cmp
in
push
push
jbe
mov
mov
jbe
push
stos
jp
xchg
call
repz
call
rcl
dec
cli
jnp
fisub
jl
jne
rcr
and
test
add
adc
mov
dec
jns
fdivr
mov
xchg
add
nop
hlt
push
fild
sub
movs
cli
or
std
lea
ret
mov
xchg
in
sbb
ftst
and
inc
jbe
inc
lods
cmp
mov
mov
inc
test
in
add
and
jp
adc
mov
inc
or
ins
loope
inc
cmp
dec
pop
xchg
mov
mov
retf
xor
sbb
hlt
into
sar
cld
test
je
push
stos
mov
push
jecxz
mul
push
lea
cmc
inc
xchg
xor
mov
and
pusha
add
in
mov
mov
fwait
inc
(bad)
lahf
frstor
mov
jle
cmp
mov
inc
pop
xor
cmp
sbb
push
inc
jge
cmp
adc
lea
jnp
lock
fwait
sar
test
loop
xchg
imul
clc
into
sbb
dec
jmp
sub
(bad)
cmp
mov
mov
cmps
jge
jp
mov
sti
dec
shl
mov
sbb
retf
out
or
adc
mov
pop
and
pop
jle
pop
dec
in
cmp
std
ret
inc
mov
pop
lods
mov
mov
ins
xchg
sbb
ret
add
jg
in
jecxz
push
xor
in
lods
cmp
xor
mov
mov
(bad)
rol
pop
inc
or
xchg
out
out
outs
cmp
and
or
xor
or
sub
adc
inc
xchg
and
mov
and
mov
mov
sbb
mov
mov
js
xchg
add
or
ds
out
and
and
ds
jmp
bound
nop
pop
dec
sbb
push
pop
jmp
dec
ret
es
dec
jns
add
out
sub
div
fmul
pop
stos
bound
xor
ins
xchg
dec
test
mov
cmps
jno
jg
test
sub
push
or
push
(bad)
fdiv
sti
je
mov
femms
pop
fs
xchg
adc
jo
fisub
scas
fnstsw
xor
loop
retf
mov
sub
int3
or
inc
imul
push
or
jle
nop
aas
mov
test
bound
add
stos
xchg
or
xor
in
mov
in
push
jl
in
mov
bound
mov
stos
imul
cmp
loopne
ja
push
add
sbb
lock
sar
psubsb
imul
ror
fwait
push
jbe
in
adc
sbb
sbb
and
cmp
mov
jge
div
iret
(bad)
mov
inc
arpl
mov
push
jo
sbb
shr
in
cmp
stos
lock
int3
pop
dec
dec
mov
sar
movs
call
ss
in
cmp
lahf
pop
cmp
jmp
xor
push
sub
lahf
out
in
sbb
movs
aas
dec
fdivr
call
and
inc
fisttp
inc
in
xchg
jnp
xchg
jo
call
dec
les
ret
sub
sub
xchg
gs
iret
push
jmp
dec
jp
mov
sbb
add
cli
and
mov
int
fmul
jmp
mov
into
in
movs
jne
cli
mov
add
sbb
data16
pop
cld
push
lods
sub
mov
jg
mov
mov
mov
jg
sbb
jge
lock
sub
stc
and
xchg
dec
in
popa
pushf
(bad)
adc
mov
ins
pop
dec
and
movq
cld
and
mov
je
dec
cmp
test
dec
pop
fcmovnbe
add
call
sbb
push
(bad)
or
fsub
ds
jp
inc
repnz
mov
shr
cld
mov
pop
sahf
lahf
jbe
jmp
dec
push
mov
cmp
div
lock
jo
div
popf
cs
adc
or
enter
fidivr
clc
mov
pop
or
lock
mov
out
out
test
dec
push
fnsave
mov
call
in
(bad)
adc
iret
outs
or
mov
shl
push
fdiv
lods
(bad)
out
add
jle
mov
mov
pop
loopne
pop
mov
or
pop
(bad)
shl
sub
add
call
lods
je
push
ret
popf
enter
imul
push
jo
push
or
mov
xchg
loop
xor
xchg
ins
fs
aad
jo
dec
mov
or
jge
sub
iret
jnp
lods
xor
jg
adc
fmulp
jl
pop
adc
push
mov
jnp
cmp
fwait
dec
sbb
(bad)
sub
sbb
inc
xor
mov
adc
(bad)
jmp
jnp
outs
mov
push
cmp
mov
xlat
or
popf
nop
lods
push
fnstsw
or
ret
and
pushf
bound
sub
add
fwait
cmp
adc
je
dec
loop
jne
cs
pushf
es
out
and
addr16
and
cmp
mov
shl
xchg
jnp
mov
dec
dec
or
stos
js
push
mov
xor
mov
test
mov
lods
or
mov
xor
sbb
sbb
mov
mov
xor
es
mov
outs
mov
dec
dec
push
bound
pusha
test
push
push
xchg
xchg
(bad)
loope
jnp
fnstcw
in
add
je
add
ins
add
inc
(bad)
rcr
push
int
mov
jns
test
or
pop
mov
out
stos
mov
nop
fstp
loopne
push
aaa
dec
jo
xchg
pop
xchg
inc
fild
jg
bound
or
adc
sbb
enter
aam
xchg
and
adc
pop
mov
loop
mov
xor
jmp
jmp
push
cmp
repz
push
inc
es
push
fdivr
pop
out
test
test
cld
lea
(bad)
mov
ror
(bad)
cmps
mov
cli
les
or
test
fcom
retf
cmps
ret
and
rcr
sbb
cdq
mov
jnp
lds
hlt
xor
ds
push
xlat
movs
fcmove
push
mov
push
mov
or
imul
inc
mov
mov
or
test
test
scas
cmp
outs
test
aad
and
pop
loope
adc
fidiv
mov
inc
jmp
inc
inc
xor
(bad)
stc
mov
mov
js
mov
out
push
jmp
cmp
ss
std
and
icebp
dec
cwde
leave
mov
cmc
sbb
xor
in
jp
mov
cmp
dec
add
cdq
rcl
cmp
or
mov
and
jno
lods
pop
call
jmp
out
retf
pop
retf
and
push
dec
jmp
das
mov
xor
repnz
ins
call
call
push
in
add
jl
pop
add
dec
inc
stc
out
cld
into
pop
call
jl
dec
call
jmp
rol
dec
jnp
arpl
(bad)
mov
mov
add
push
mov
sbb
jge
pcmpgtb
or
xchg
fcmovb
pop
loopne
test
lahf
test
add
rcl
lock
ret
push
sbb
loope
popa
push
inc
cmp
xchg
and
out
adc
outs
cdq
sar
ins
cli
pop
adc
add
mov
xchg
loope
push
(bad)
cmps
or
mov
data16
push
and
mov
pop
popa
xor
mov
fiadd
movs
mov
sub
std
jnp
shr
pop
mov
xor
shl
std
cmps
pop
sub
out
adc
shl
loop
cli
xchg
sub
fld
loop
sub
leave
fdiv
les
gs
aaa
adc
mov
fimul
pop
jno
xor
das
cmp
jg
mov
sbb
add
pop
push
dec
and
push
cmps
mov
mov
pop
mov
les
push
sbb
mov
icebp
push
jbe
mov
cmp
push
push
sub
pop
fwait
loopne
mov
adc
iret
test
push
jecxz
adc
aad
push
ds
mov
fnstsw
adc
jp
fadd
jns
mov
jecxz
test
movs
imul
out
loope
aad
xchg
data16
adc
inc
rol
mov
leave
jne
(bad)
dec
mov
cmp
xor
addr16
adc
lods
stos
loope
jl
in
nop
(bad)
xchg
xchg
ins
mov
jge
jle
call
arpl
out
add
movs
xchg
imul
loopne
xchg
pop
shr
sbb
out
push
adc
pop
pop
pop
int
outs
xor
push
add
stos
popa
call
or
das
ds
ja
ds
jbe
xchg
in
xor
push
fadd
mov
out
outs
xchg
mov
retf
sahf
mov
cld
cmp
cmps
xor
(bad)
pop
les
repz
(bad)
cmp
and
add
mov
inc
or
inc
push
into
mov
outs
out
stos
jns
nop
jo
push
iret
dec
inc
push
(bad)
arpl
cwde
in
(bad)
mov
(bad)
push
add
shl
inc
jmp
outs
inc
jge
inc
mov
nop
sbb
out
jne
sbb
popf
adc
dec
js
mov
aam
cmps
pop
xchg
xor
stc
scas
pop
and
mov
ret
dec
dec
out
por
ja
or
sub
mov
or
call
pop
xchg
mov
mov
das
add
enter
(bad)
arpl
mov
mov
out
ror
loopne
jecxz
push
or
clc
sar
je
jl
mov
ds
sbb
mov
dec
fisttp
mov
jmp
cdq
sti
arpl
shr
mov
mov
in
andps
pop
and
ds
rcr
js
mov
rol
mov
scas
add
aas
ret
xchg
jns
data16
or
xor
lea
jnp
pop
xor
and
or
fiadd
and
cmp
xchg
xor
ins
das
inc
stc
js
cs
cmp
mov
dec
arpl
js
sbb
call
loopne
push
not
mov
inc
fs
stc
(bad)
mov
enter
add
xchg
dec
mov
movs
pop
pop
and
aas
sbb
pop
push
(bad)
gs
cmp
or
fwait
mov
outs
xor
imul
pushf
jb
jecxz
jecxz
mul
dec
lock
lds
dec
dec
pusha
outs
out
lods
loopne
cmp
pop
sub
adc
xor
fisttp
stos
in
dec
(bad)
jle
mov
xor
adc
out
jne
sub
push
push
aam
pushf
ja
sub
pop
xlat
mov
xchg
stc
rcr
ins
cmp
cmp
and
jg
popa
js
jae
shr
in
mov
scas
sbb
test
fsubr
ja
cmp
mov
push
jne
and
sub
pop
mov
push
iret
adc
mov
xor
and
mov
xchg
or
mov
sbb
les
stos
push
sbb
dec
xor
int3
pop
and
stos
lock
or
ret
jmp
push
push
and
push
ror
sub
jmp
lods
cmp
dec
xchg
jae
cmp
out
sub
or
push
ja
jp
or
jg
shr
cld
arpl
and
push
ret
movs
das
sub
pusha
cmp
sub
(bad)
xor
mov
ss
push
ret
aas
ss
stos
jle
xor
pusha
pop
fmul
cld
sbb
(bad)
cmps
call
cdq
and
sub
(bad)
in
rcl
sbb
add
push
stc
leave
jne
mov
pop
popa
pop
inc
xchg
jbe
sub
aas
fistp
sbb
scas
gs
ficomp
dec
outs
ret
dec
sbb
outs
push
cmp
mov
mov
jb
ret
test
outs
add
xor
xchg
cs
pop
mov
jge
add
inc
ja
outs
add
pop
stc
into
jecxz
pop
xchg
(bad)
test
js
mov
inc
and
and
xchg
arpl
or
mov
mov
pop
retf
shl
lock
test
xchg
cwde
and
psubb
out
xlat
pop
nop
aam
push
cmps
jae
ja
cmc
lock
dec
ret
sub
xor
and
mov
les
aam
iret
arpl
and
pushw
or
js
sbb
sbb
mov
leave
and
mov
loope
sub
retf
repnz
xor
cmp
ss
cmp
mov
ror
lods
cmp
cmp
and
push
je
rcr
add
cmp
std
jns
sbb
jg
fcom
dec
retf
jg
ror
loopne
inc
cmp
(bad)
pop
repz
dec
mov
stos
add
xchg
test
pop
pop
mov
mov
push
or
lds
xor
cmp
mov
retf
xchg
scas
jg
fimul
adc
inc
cmp
mov
cdq
inc
jmp
cli
sahf
push
cmp
jne
mov
jno
das
and
mov
pop
std
push
arpl
ds
and
inc
and
add
cmps
pop
adc
sbb
push
mov
pop
icebp
out
mov
xor
sbb
mov
rcl
ficomp
pop
(bad)
fistp
mov
int
push
jle
push
adc
add
pop
js
jle
add
inc
xchg
and
cmc
clc
gs
call
hlt
jo
aas
mov
(bad)
ss
fdiv
xchg
jg
mov
xor
mov
mov
lahf
mov
xchg
inc
sub
fiadd
leave
repz
rol
push
adc
pushf
inc
add
jns
lods
into
sub
retf
pop
(bad)
outs
jnp
pop
xor
pop
jl
jmp
dec
adc
mov
jbe
cld
ss
dec
push
sbb
leave
dec
rcr
jl
xchg
pop
push
cmps
outs
push
in
add
ja
cmps
and
jns
ror
aad
aam
fsubr
inc
cpuid
xchg
gs
sub
pop
es
xchg
cmp
bndstx
fisub
push
dec
ficomp
cli
jge
sub
stc
cdq
xchg
imul
xor
aam
ds
loopne
or
xchg
loope
adc
mov
jo
sub
adc
lods
sub
bound
push
cmc
xor
inc
xchg
inc
or
loop
in
inc
cli
push
jle
sub
das
mov
in
inc
sar
mov
or
rol
push
or
cmp
add
sar
fcmovnbe
mov
mov
xor
xchg
mov
stos
xchg
fwait
in
sbb
stos
or
fwait
and
mov
adc
cmp
jnp
add
xor
out
push
cmp
jle
out
or
stos
and
jle
aaa
popf
xrelease
aas
mov
xor
bound
in
jae
dec
adc
ja
shl
movs
mov
lock
psrlw
add
xor
mov
jp
xchg
mov
clc
pop
inc
mov
xchg
dec
retf
stc
je
mov
int
xor
je
gs
cmp
aad
jl
dec
mov
pop
mov
mov
adc
rcr
pop
adc
scas
mov
adc
(bad)
add
push
iret
inc
dec
js
arpl
mov
jle
sub
stos
fcomip
enter
lods
dec
mov
int3
mov
fdivr
mov
out
lock
ins
add
(bad)
out
out
imul
add
cmp
stos
sbb
add
fwait
lock
mov
xchg
fistp
call
add
aam
sti
mov
mov
je
push
and
movs
out
or
push
sub
data16
inc
add
jecxz
jmp
jno
fs
ins
iret
int
pminsw
repz
inc
in
push
jo
jle
pop
dec
add
and
in
sbb
test
ret
(bad)
push
mov
neg
add
es
inc
pop
cdq
mov
mov
in
ja
mov
(bad)
mov
(bad)
cmp
xchg
xor
mov
ja
lahf
sbb
data16
dec
aaa
and
stc
mov
xor
or
pop
jnp
and
jecxz
lds
std
cmc
mov
fld
fldenv
sbb
add
loop
fwait
push
or
dec
or
leave
popa
jo
add
rol
lahf
pop
xor
out
cli
or
adc
mov
movs
cmc
sub
jo
in
(bad)
jmp
enter
jae
cmp
pop
retf
jle
rcl
shl
dec
sbb
scas
inc
cmc
sub
sub
loop
call
cmc
enter
xchg
jmp
sub
adc
or
ret
mul
pop
outs
clc
(bad)
lods
jbe
mov
jecxz
in
mov
xchg
jae
iret
mov
out
iret
dec
pop
es
daa
pop
les
and
pusha
adc
xor
pop
inc
push
inc
jno
jno
jecxz
cli
push
fdivr
gs
push
or
xor
inc
into
div
push
cmps
jp
pop
add
push
pop
inc
or
jp
jp
mov
xor
adc
push
ret
dec
pop
jecxz
stos
stos
cmp
push
sub
xchg
mov
add
add
test
xor
push
movs
retf
and
outs
mov
sbb
xchg
and
js
mov
mov
int
push
sbb
dec
mov
mov
mov
outs
pop
mov
adc
retf
test
int3
loopne
cmps
push
xor
lahf
mov
inc
test
das
pop
out
xchg
xor
inc
addps
mov
aad
hlt
sub
and
fld
or
adc
mov
mov
out
xor
movs
mov
cmp
mov
addr16
jl
scas
cmp
shl
push
in
(bad)
cld
sub
mov
jae
pop
ja
xor
sbb
shl
push
cmps
inc
xchg
dec
imul
hlt
or
int
jp
sbb
fadd
sbb
xlat
cwde
xor
xor
dec
push
outs
and
or
cwde
(bad)
enter
inc
pop
mov
mov
xor
sbb
push
dec
lods
and
sbb
pop
add
pop
fdivr
je
nop
adc
or
cmps
sbb
pusha
jne
add
ds
cdq
daa
imul
pusha
js
dec
iret
shr
add
inc
and
jge
pop
xor
jno
xor
cmc
jbe
inc
lds
aam
mov
pop
mov
xchg
inc
add
push
jmp
mov
gs
fst
add
es
push
(bad)
test
bound
cmc
fistp
and
fcomp
jo
enter
dec
(bad)
rcr
into
or
jno
in
jo
je
mov
or
mov
inc
aad
jg
lods
xor
rcl
cli
inc
dec
add
(bad)
push
fwait
jmp
test
iret
jl
in
stos
(bad)
add
unpcklps
ret
lock
xor
push
pop
retf
jg
call
in
stc
xchg
inc
xor
das
cmp
push
jge
xchg
sub
adc
pop
test
addr16
jp
add
mov
mov
pop
add
aad
mov
mov
int3
dec
sub
fisub
mov
fwait
sahf
push
mov
pop
int3
(bad)
jb
bound
dec
cmps
jmp
scas
lds
and
and
(bad)
(bad)
jg
in
(bad)
shl
mov
add
pushf
sub
jmp
ds
call
push
push
cmc
mov
pusha
js
int3
cli
std
ret
fcmovbe
clc
mov
jae
jbe
test
test
fimul
(bad)
and
cmp
jno
ins
jg
pop
ins
dec
mov
inc
shl
mov
xchg
pop
mov
or
jne
dec
and
imul
das
inc
inc
and
jle
daa
iret
sahf
sub
outs
xor
stos
test
xor
outs
loope
push
hlt
not
cmp
aaa
(bad)
cdq
mov
add
into
ss
out
shl
or
scas
fcmovnu
repz
enter
repnz
sbb
mov
inc
out
mov
push
retf
dec
in
jp
ins
cmp
cmps
loope
addr16
fdiv
sbb
inc
and
or
fisubr
push
push
loope
test
cld
xchg
mov
cmp
cmp
call
idiv
scas
or
fs
shl
and
jbe
add
popa
dec
aas
imul
push
(bad)
aam
fnstcw
mov
stos
inc
cmp
add
fdivr
cdq
jb
push
sbb
stc
mul
push
adc
add
ds
sbb
sub
sar
jg
or
sbb
ficom
sub
retf
cmp
xor
sahf
in
ss
in
es
sub
test
push
add
mov
pop
add
cmp
pusha
bound
push
gs
mov
aaa
loope
ret
sub
sar
adc
call
repnz
retf
in
sub
icebp
sbb
inc
sub
loop
jecxz
mov
in
call
sub
in
ja
(bad)
cmps
sub
add
or
xchg
mov
iret
fsubr
(bad)
xor
and
or
or
add
sahf
arpl
pop
outs
cld
mov
sar
popf
arpl
(bad)
arpl
mov
xchg
div
ins
pop
les
ror
add
std
push
aad
dec
nop
rcl
sbb
mov
icebp
lods
je
pop
mov
(bad)
sub
cmp
jp
stos
sub
ss
xor
imul
dec
imul
and
sub
(bad)
mov
retf
push
ret
pop
dec
pop
xchg
mov
test
ret
(bad)
sbb
mov
ins
add
or
sbb
cmps
adc
jmp
xlat
push
cmps
(bad)
mov
(bad)
and
jl
xchg
xor
pop
mov
lea
add
mov
(bad)
loop
jb
inc
push
outs
xchg
adc
mov
add
push
dec
or
and
jbe
jge
and
scas
push
and
adc
or
mov
mov
pop
pop
push
hlt
xchg
call
in
fdiv
mov
mov
pop
(bad)
in
xor
xor
adc
pusha
(bad)
push
push
xlat
push
xlat
mov
adc
inc
mov
mov
or
es
or
cwde
in
cld
movs
popa
outs
push
cmc
or
test
shr
jmp
sub
mov
xor
call
rsqrtps
call
jno
jg
xchg
movs
pop
adc
aam
inc
outs
push
(bad)
sti
adc
arpl
pushf
retf
aas
cmp
mov
fcom
inc
popf
mov
mov
fucomip
mov
fs
pop
inc
outs
xchg
adc
ss
inc
repnz
xchg
mov
pop
std
pop
jmp
pop
lods
mov
add
mov
stos
fwait
mov
scas
jp
push
retf
lds
mov
jne
repnz
jbe
gs
xor
inc
shr
inc
data16
and
outs
sbb
mov
inc
lds
popa
lea
aaa
mov
mov
sbb
imul
pop
inc
or
in
lds
dec
lahf
lods
jo
and
loope
mov
pusha
cli
cmp
popf
dec
jmp
aad
fs
sbb
cwde
lods
push
xor
lods
imul
movs
(bad)
repnz
fs
lock
xchg
dec
xchg
and
xor
mov
or
daa
dec
adc
dec
dec
(bad)
sub
inc
mov
fcom
xor
pop
jb
pop
test
lock
cld
pop
mov
cdq
jne
fst
call
lods
sbb
mov
xchg
ret
rcl
adc
add
jl
jg
or
js
xchg
xchg
cmp
or
jge
cmc
jl
sbb
cli
retf
aam
leave
dec
xchg
jecxz
cs
mov
inc
dec
cli
cs
repnz
mov
rol
cmp
sub
sbb
cmp
sub
push
mov
cmp
mov
jl
aad
xchg
push
or
jns
dec
movs
jmp
jle
cdq
test
cmps
sub
hlt
jnp
push
enter
mov
jo
repnz
loop
cmc
cmps
mov
mov
outs
retf
pop
push
push
adc
or
mov
or
imul
or
jns
cmp
xchg
xchg
mov
in
test
xor
lahf
sub
mov
pusha
push
jmp
xor
or
shl
sub
stos
(bad)
lods
inc
xor
pop
adc
push
xchg
jb
or
sub
ins
movs
adc
out
jno
adc
repnz
sbb
mov
test
icebp
pop
jb
dec
(bad)
xlat
movs
jns
push
rcl
mov
mov
or
fcmovbe
xchg
(bad)
(bad)
mov
nop
rol
shr
adc
mov
add
aas
xchg
js
fist
jl
imul
or
push
jo
inc
outs
fidiv
sbb
xor
rcl
loop
and
out
push
(bad)
mov
sti
retf
adc
imul
cmp
pop
dec
or
imul
movs
enter
dec
xchg
aas
xchg
jo
pop
outs
gs
push
sub
pop
and
jl
inc
xchg
jb
and
imul
in
cs
(bad)
iret
cmp
push
fst
pop
push
mov
mov
mov
cmp
push
push
(bad)
cmp
in
jge
xor
xor
daa
(bad)
jmp
cmp
das
xchg
jne
adc
in
bound
xchg
push
(bad)
mov
mov
inc
dec
cwde
adc
(bad)
add
add
in
sub
dec
shl
push
add
loop
dec
test
adc
push
jo
imul
pop
push
mov
ins
add
or
push
call
dec
xor
popf
mov
and
dec
int3
or
lds
fs
mov
add
not
leave
xchg
shl
xchg
shl
aaa
cs
lea
jecxz
jbe
scas
and
inc
jp
mov
ret
daa
jmp
xchg
mov
test
pusha
pop
mov
mov
movs
gs
sub
sub
movs
xchg
jbe
sbb
mov
std
xchg
aaa
stc
inc
mov
scas
fisub
inc
pop
fs
iret
xor
jl
fwait
cmp
xchg
in
pop
retf
lds
sbb
movs
(bad)
aad
lods
dec
sbb
outs
mov
cmp
pop
call
jmp
addr16
ins
pop
mov
cmp
jecxz
jg
sbb
test
sar
jge
int3
aad
fbld
retf
cmps
arpl
push
mov
dec
lods
mov
sub
stc
sub
mov
xor
xchg
jbe
push
fisttp
and
mov
inc
jmp
add
cmp
xchg
(bad)
push
rcl
push
sbb
cmp
ja
ret
push
sahf
inc
lahf
xchg
adc
xor
test
das
fadd
cs
repz
rol
sbb
push
xor
imul
outs
and
dec
jno
dec
scas
ja
stos
push
icebp
fsub
sbb
xor
rcr
and
stos
retf
xchg
fmul
cs
or
pop
cmp
das
pop
pop
jae
mov
and
stc
cld
cmp
iret
retf
push
cdq
push
aaa
sub
mov
add
ins
clc
sar
or
ins
cmps
jno
repnz
mov
cmp
gs
push
pusha
sahf
aas
clc
js
sar
popf
mov
movs
mov
sahf
adc
push
cmp
outs
xchg
lods
cli
pop
lds
inc
mov
push
nop
add
sbb
daa
push
xchg
(bad)
imul
fcomp
inc
dec
adc
(bad)
popf
addr16
inc
xchg
xor
cmp
pop
retf
fs
xchg
mov
push
out
stc
into
xor
inc
not
mov
xchg
scas
pop
retf
cmps
lea
aad
mov
mov
jp
lods
pop
clc
mov
sub
jae
std
add
mov
fs
cwde
sbb
movs
icebp
inc
fistp
call
(bad)
call
inc
push
mov
repnz
out
int
inc
cli
repz
in
mov
mov
jge
xchg
sub
sub
jno
adc
sub
mov
dec
add
cmp
jne
test
dec
jmp
dec
add
push
imul
ja
mul
mov
out
aam
sub
mov
cmp
sub
dec
retf
inc
dec
jnp
fld
jbe
ret
int
or
mov
imul
cwde
data16
ins
retf
lods
(bad)
jmp
xchg
xlat
out
cmp
mov
jo
xchg
cmps
lea
mov
lods
fdiv
push
ret
(bad)
mov
jnp
outs
cmp
mov
pop
sbb
imul
inc
pusha
rcr
add
repnz
fsub
xor
jle
jle
jae
mov
mov
ins
push
mov
mov
call
xor
or
xor
push
mov
pop
xor
dec
inc
loop
fwait
lods
shr
fs
hlt
ins
jne
push
(bad)
push
aad
test
inc
adc
push
push
push
sub
cmp
out
pop
adc
ds
mov
mov
jmp
xchg
shl
hlt
fmul
jp
out
pop
xor
sub
xchg
pusha
movs
jb
aam
aaa
add
mul
repz
gs
lahf
jmp
sbb
jmp
inc
mov
jp
mov
push
enter
std
fsub
stos
inc
pusha
and
xchg
mov
sbb
dec
jbe
dec
pop
test
in
lds
xchg
mov
mov
push
xor
mov
jecxz
or
mov
mov
add
cwde
dec
adc
fdiv
mov
daa
fcmovnu
mov
rcl
rcl
ret
mov
repz
mov
and
push
aad
jecxz
loop
pop
mov
ds
shld
and
jne
adc
cmp
(bad)
fiadd
in
inc
repz
out
call
or
icebp
mov
repz
(bad)
mov
js
cli
pusha
jl
jp
clc
inc
icebp
xor
dec
mov
sub
dec
imul
(bad)
push
loopne
xchg
xor
and
js
scas
mov
xor
mov
ins
and
push
dec
movs
retf
or
ja
xor
repz
cmps
dec
fild
cmp
jge
xor
add
aad
mov
fstp
push
or
and
add
xor
sub
repnz
mul
(bad)
adc
call
or
cmp
or
ins
jo
frstor
xor
dec
mov
jle
adc
imul
sahf
repnz
int3
mov
ins
mov
rol
xchg
jns
std
aam
jne
jnp
push
add
mov
pop
retf
push
add
add
xchg
mov
jno
mov
mov
lds
push
mov
into
mov
aaa
xchg
xchg
push
fstp
adc
mov
mov
cmp
nop
lock
jle
(bad)
jae
and
mov
mov
arpl
jge
int3
test
lock
adc
push
retf
sbb
sqrtps
movs
add
push
xchg
xchg
fucomi
movs
or
adc
dec
mov
or
sub
mov
adc
xchg
je
jecxz
jae
stc
pop
jl
dec
in
mov
inc
adc
xlat
call
movd
test
cmp
push
jb
in
icebp
imul
sub
rcpps
fnstcw
jp
lds
xchg
dec
imul
repnz
outs
mov
add
mov
addr16
push
mov
shl
popf
pop
cmp
inc
data16
xor
add
aad
add
out
jne
and
push
lds
jnp
push
or
sbb
push
inc
nop
sti
cdq
mov
pop
adc
mov
xor
push
sbb
jl
xor
retw
rol
dec
pop
push
inc
or
in
dec
xor
popf
cli
mov
in
out
daa
mov
pop
lods
cld
pop
ret
push
dec
sub
cmc
jno
jmp
mov
mov
lds
cmps
dec
jmp
jg
adc
mov
lods
mov
inc
sbb
adc
mov
call
sti
or
dec
loope
adc
xchg
fs
ja
lods
neg
or
pop
push
cld
xor
cmp
mov
mov
es
pop
adc
out
mov
aaa
pop
not
mov
sbb
pop
jae
xor
push
repz
or
imul
mov
adc
push
in
fsubr
hlt
push
sub
call
lock
js
les
add
inc
int3
not
enter
arpl
lds
out
sahf
jmp
dec
or
cmp
outs
or
pop
mov
xchg
and
in
inc
dec
push
cmp
aas
loope
repnz
fmul
sub
xchg
(bad)
inc
leave
mov
outs
cmp
xlat
pop
xchg
xchg
pop
adc
jg
add
cmp
jmp
pop
xlat
or
jecxz
in
sub
jl
xchg
mov
dec
int
fdiv
xor
aam
out
jns
jge
out
(bad)
adc
ja
lds
imul
sbb
mov
sbb
ret
daa
dec
(bad)
dec
shl
aaa
cmp
loopne
push
loopne
inc
mov
sub
int3
lahf
mov
push
add
stos
jp
adc
cli
rcl
add
cmps
push
and
mov
loopne
fcmovbe
dec
mov
fiadd
xchg
bswap
mov
or
sahf
hlt
cs
mov
sbb
push
fild
sbb
or
mov
pop
pop
ss
and
jne
arpl
xor
out
lods
push
pushf
gs
push
sub
jge
dec
fsub
mov
xor
js
stos
aad
cmp
test
sub
lods
lods
cmps
pop
cmp
xor
es
es
gs
xchg
sub
inc
popa
xchg
push
cmp
scas
and
bound
sbb
in
cmc
jle
jmp
jae
nop
clc
xchg
imul
mov
mov
mov
or
sbb
mov
push
mov
jo
mov
push
jbe
hlt
fistp
cdq
mov
mov
inc
out
stos
icebp
into
adc
or
arpl
push
or
pop
jg
pop
addr16
out
std
xor
ds
loope
cmp
enter
ret
in
mov
pop
in
cmps
nop
add
mov
xor
sub
mov
cmps
lea
sbb
(bad)
rcl
dec
pop
push
push
cmp
shl
popf
xor
retf
adc
mov
enter
and
pop
loopne
fs
std
pop
sbb
dec
push
fidivr
push
ins
pop
ret
call
pop
sbb
jmp
jae
push
adc
fild
pop
pop
nop
test
les
cmp
rol
(bad)
int3
fwait
sbb
jmp
jmp
fisttp
push
mov
mov
add
rol
(bad)
daa
mov
aam
fld
xchg
popf
bound
out
in
psubusb
ins
jno
push
js
sbb
inc
fs
jnp
dec
jno
jp
sub
push
or
add
aas
or
test
mov
fwait
in
xchg
push
imul
inc
xor
(bad)
in
mov
(bad)
cmp
movs
jb
cmps
outs
push
or
ror
mov
(bad)
clc
xchg
idiv
xor
ret
fsubp
int3
cmp
(bad)
outs
jbe
aaa
cmp
lahf
scas
push
adc
shr
outs
jno
dec
xchg
mov
cmp
pop
gs
popa
jl
pop
push
out
cmc
ror
lahf
ficom
mov
and
int
add
shl
push
xor
rcr
mov
sub
call
fxch
adc
jl
lods
jo
into
lock
xchg
not
iret
(bad)
push
inc
out
push
data16
cmp
or
enter
(bad)
jmp
push
lea
shl
int3
mov
pushf
jmp
cwde
xchg
adc
sub
sbb
bound
test
push
mov
fadd
mov
pop
jmp
(bad)
enter
push
inc
call
xchg
push
(bad)
(bad)
jecxz
repnz
stos
clc
(bad)
stc
(bad)
popf
adc
add
lea
add
or
ss
ret
jge
inc
or
inc
ja
sub
xchg
sbb
pushf
fdiv
stos
xchg
std
icebp
in
mov
mov
and
mov
cs
daa
push
stos
add
xchg
int3
lock
loope
sbb
mov
push
rol
mov
dec
out
lahf
add
cmps
jno
sbb
push
xchg
cwde
rol
cmp
shl
cli
pusha
ficomp
sbb
pop
sub
or
neg
out
cmc
jmp
mov
jge
mov
imul
movs
lods
or
xor
pop
jge
fisttp
jo
lock
jo
xor
mov
mov
jg
imul
xor
push
ins
jle
mov
ins
adc
lods
pushf
lods
mov
jmp
(bad)
mov
pop
mov
les
cmp
sbb
aaa
ret
push
aas
mov
(bad)
xor
pushf
aaa
jmp
js
mov
ror
ret
shl
jmp
cli
mov
mov
jno
lahf
add
and
repz
es
cmc
pop
rol
adc
les
cwde
loopne
mov
inc
pop
aas
mov
jmp
sub
not
not
frndint
aaa
dec
pop
outs
cs
(bad)
js
add
(bad)
jl
mov
or
cmc
std
or
sbb
mov
andnps
xchg
out
adc
mov
inc
ret
add
mov
(bad)
cmp
ins
push
jmp
xchg
fisub
(bad)
mov
pop
shl
(bad)
(bad)
int
(bad)
adc
mov
cmp
out
dec
mov
mov
and
ret
lods
push
xor
ss
dec
mov
sbb
cmps
mov
sub
out
pop
lods
inc
jg
dec
add
jbe
out
ds
push
add
adc
aam
sbb
jnp
dec
pop
stos
out
push
(bad)
les
xlat
push
ins
cmp
lds
ror
mov
ret
xor
add
std
push
fcom
jmp
nop
jbe
xchg
mov
push
jmp
xchg
mov
mov
pop
push
adc
inc
mov
jo
dec
cmp
mov
dec
stos
mov
inc
mov
mov
aas
es
push
outs
(bad)
pop
mov
fistp
or
cmp
outs
sbb
jle
mov
popf
rcl
push
dec
sbb
mov
mov
sti
test
xchg
xchg
mov
out
sub
in
ret
lahf
ins
repz
pop
mov
mov
fs
jp
bound
mov
cmps
mov
xor
and
cmp
sub
into
jne
mov
mov
xor
inc
dec
pop
push
aaa
call
cwde
popf
stos
ins
add
pop
mov
dec
cwde
(bad)
fldenv
je
jae
rcl
test
leave
test
cmp
cmp
mov
xor
repnz
jmp
xchg
das
mov
jne
mov
into
cmp
push
clc
mov
or
push
ja
or
push
pop
xchg
loope
nop
add
shl
or
clc
setnp
xchg
scas
pop
(bad)
jnp
inc
aad
dec
iret
mov
mov
adc
gs
mov
xor
enter
xchg
fldcw
mov
mov
and
xor
pop
and
rcl
push
jl
in
adc
inc
fwait
inc
(bad)
cld
ret
fidiv
mov
call
shr
jp
sbb
in
push
xchg
in
xchg
pop
mov
ret
iret
loopne
jp
xchg
xchg
or
out
inc
dec
stc
jle
nop
mov
push
div
pop
and
fistp
sub
push
adc
sbb
aam
je
adc
dec
and
jns
clc
inc
out
fcmovu
xor
fdiv
xchg
lods
add
cld
stos
(bad)
jl
jns
mov
ss
dec
daa
ret
(bad)
jmp
push
xor
ffree
jae
addr16
add
lods
daa
shl
int3
cmc
fld
inc
sub
repz
cmps
jecxz
fwait
shl
add
(bad)
in
mov
ror
iret
dec
leave
fist
cs
scas
jae
imul
fwait
xchg
ins
iret
add
and
sbb
mov
xlat
cmp
pcmpgtw
leave
in
jbe
int3
mov
push
repz
repnz
mov
loopne
loopne
xchg
jecxz
inc
jbe
xchg
imul
xchg
push
jmp
pop
addr16
ret
push
ins
lods
jg
and
mov
outs
mov
mov
sub
xchg
enter
pushf
dec
xor
mov
mov
xchg
dec
fs
imul
sahf
inc
call
mov
adc
lods
dec
mov
cmp
ficomp
ins
and
push
imul
dec
jae
push
ret
push
imul
js
and
xor
pusha
repnz
(bad)
sbb
fld
mov
mov
cmc
pop
das
mov
imul
mov
sahf
adc
and
bound
mov
ret
dec
test
cmp
inc
mov
(bad)
cmps
stos
jo
stc
scas
lahf
mov
inc
daa
movs
(bad)
imul
nop
pop
loope
xchg
(bad)
loopne
pop
into
loopne
ret
mov
ss
mov
stc
mov
dec
imul
and
mul
out
mov
push
xor
push
ins
popf
push
test
(bad)
add
mov
rcl
repnz
imul
stc
dec
sti
popa
cwde
in
adc
adc
and
inc
fcomp
pop
mov
inc
mov
inc
mov
test
gs
cmp
gs
mov
enter
lea
(bad)
jecxz
or
jbe
or
inc
sub
mov
std
jno
mov
inc
ins
sbb
mov
popa
pop
push
mov
sub
call
out
loop
push
in
mov
movs
jo
cmp
pop
fistp
jne
lock
dec
push
jl
push
xchg
enter
mov
mov
out
pop
dec
push
popa
fcmovnbe
icebp
push
push
arpl
sbb
movs
ror
aas
out
fwait
add
or
pop
(bad)
fisubr
mov
inc
hlt
mov
jg
mov
xchg
lds
mov
int3
xchg
out
xchg
dec
loopne
add
(bad)
xlat
in
push
fs
or
sub
enter
out
shr
and
imul
cmp
xor
retf
shr
popa
mov
imul
loopne
sbb
out
jno
fnclex
cmp
push
aam
sbb
dec
push
xchg
and
adc
pop
int
cmp
data16
out
pop
xchg
popa
pop
clc
ffreep
aas
xchg
inc
jmp
mov
test
mov
jae
repz
in
mov
cmps
gs
call
jle
jbe
adc
hlt
fisttp
dec
mov
mov
push
lock
adc
mov
mov
sahf
mov
cmps
push
outs
ret
mov
cld
push
js
sahf
aam
hlt
jg
and
jle
loop
inc
(bad)
retf
dec
push
or
aad
test
sbb
xchg
ss
aaa
test
cmp
pop
fisttp
mov
xor
sbb
sbb
and
push
mov
lods
inc
jp
scas
fcomp
mov
(bad)
daa
and
stos
mov
mov
(bad)
in
call
iret
add
and
mov
test
mov
xor
cs
add
push
mov
sbb
push
(bad)
leave
imul
sahf
or
les
pop
jmp
loope
dec
dec
enter
and
add
mov
ss
mov
inc
repz
or
jg
stc
fbld
mov
loopne
xchg
cmp
stos
lahf
rol
lods
or
inc
add
push
int3
mov
jb
jge
xchg
add
hlt
psubusw
xor
pop
stc
mov
fwait
dec
outs
pop
add
faddp
push
lea
les
nop
or
inc
das
pop
(bad)
pop
adc
mov
xchg
enter
push
aas
push
lea
sub
and
mov
in
psubw
adc
lea
mov
sbb
repz
cmp
(bad)
mov
fnstcw
sbb
(bad)
mov
bound
aam
mov
rcr
jle
(bad)
jmp
sbb
lds
sahf
ds
les
sbb
sahf
sti
in
adc
pop
xchg
xor
cli
add
std
adc
xchg
repnz
shl
out
test
push
mov
out
pop
test
(bad)
jmp
fsub
push
or
push
and
gs
mov
xchg
retf
mov
int
add
inc
shl
cmp
sub
retf
xchg
xchg
ins
adc
xor
mov
xor
push
mov
jmp
(bad)
daa
loope
add
cs
push
pop
sub
sub
mov
jmp
add
out
scas
cmp
adc
pop
call
call
pop
in
data16
adc
dec
test
xchg
pop
dec
jle
dec
retf
(bad)
fidiv
or
lds
push
cmp
pop
cmp
dec
xchg
popa
inc
loopne
xor
mov
(bad)
inc
jnp
mov
xor
mov
mov
jo
aaa
std
jg
xor
pushf
pop
cmp
pop
aaa
pop
fs
imul
or
and
xchg
jmp
loop
and
out
cs
xor
nop
push
popf
sub
xor
push
mov
pop
addr16
ss
sub
call
sub
sub
mov
cmp
mov
xchg
push
lea
mov
cld
sbb
inc
gs
test
add
sti
inc
test
nop
mov
cmp
inc
iret
mov
mov
xor
or
sbb
mov
sar
and
xchg
sbb
pop
into
aas
stc
pusha
and
cmp
mov
xor
out
add
cmp
cmp
sbb
(bad)
hlt
xchg
bt
sbb
cmps
shl
push
sub
loopne
mov
gs
cmp
test
add
test
xor
sub
pop
mov
rol
stos
xor
mov
xor
montmul
cmps
inc
pmulhuw
xor
dec
pop
out
into
mov
sbb
out
jge
out
leave
nop
xor
pop
out
hlt
ja
ins
xchg
mov
clc
(bad)
test
push
push
movs
loop
rcl
sti
and
int3
or
jnp
fcmovbe
cmps
movs
aad
fwait
inc
(bad)
mov
xchg
and
add
movs
enter
adc
mov
add
clc
dec
mov
xor
stc
mov
xchg
pop
push
jb
push
sar
in
lods
jmp
dec
je
jmp
jb
mov
out
cwde
arpl
test
or
cli
push
pop
imul
jbe
sbb
pop
adc
pop
outs
xor
mov
adc
adc
cli
rcl
xchg
cmps
fstp
push
xor
retf
xchg
not
mov
pop
outs
out
cmp
in
inc
inc
mov
adc
jg
inc
xchg
jl
jne
jmp
hlt
inc
fs
pushf
push
sbb
fs
arpl
inc
ins
sbb
sahf
mov
addr16
aam
inc
icebp
fsub
scas
push
leave
cmps
dec
ret
sahf
(bad)
push
lds
fadd
fld
inc
leave
adc
call
and
xchg
aaa
mov
enter
or
mov
push
adc
call
call
push
or
sbb
sbb
hlt
nop
sub
dec
jmp
out
pop
adc
sar
push
test
(bad)
bound
push
imul
xchg
inc
call
stos
in
pop
sub
mov
jne
fst
and
sbb
or
sub
fs
jg
jmp
and
sbb
(bad)
imul
gs
cmc
and
adc
es
hlt
enter
icebp
aad
ret
call
jb
inc
or
dec
in
add
and
jle
inc
retf
aas
mov
sbb
dec
pop
pop
push
mov
or
ins
add
pop
pushaw
movs
rcl
sbb
push
mov
xor
fs
push
arpl
cmp
mov
jno
sbb
loope
mov
out
push
call
jne
and
fisubr
repnz
mov
ins
or
bnd
xchg
iret
adc
or
les
xlat
test
out
arpl
lock
dec
test
and
inc
test
mov
rol
push
xchg
xchg
mov
(bad)
mov
ficom
push
lahf
es
cmp
mov
addr16
fistp
jmp
pop
push
mov
sahf
dec
das
inc
mov
push
or
adc
(bad)
inc
call
xor
lods
sti
jmp
and
add
or
cmps
and
or
xchg
dec
js
xchg
test
ret
jo
inc
jmp
mov
mov
pop
shr
pop
sbb
dec
xchg
rcl
icebp
sub
sub
js
dec
cmp
ins
test
ins
dec
fsub
out
inc
inc
pop
(bad)
adc
fistp
xor
out
push
add
xchg
sub
xchg
pusha
pop
inc
mov
pop
xor
pop
push
cmc
pop
jno
fdivr
dec
sti
popf
mov
inc
std
sahf
arpl
pop
and
push
sub
and
and
retf
sahf
sub
xor
lahf
jp
mov
sbb
mov
pop
leave
lea
pusha
cmps
repnz
pop
or
faddp
pop
cmp
in
jae
and
dec
imul
out
xchg
popa
pushf
scas
adc
loopne
xchg
jnp
xor
jns
fcomi
sbb
outs
adc
xchg
icebp
popa
sub
jmp
xchg
xchg
inc
mov
es
rol
mov
in
push
mov
es
push
jns
dec
mov
ja
mov
ds
add
add
cmp
mov
add
in
and
cmc
out
adc
fcomip
push
mov
inc
cmps
jo
cld
xchg
(bad)
adc
push
arpl
fmul
jbe
int
cld
and
rcr
loope
outs
stos
and
inc
pop
adc
dec
mov
fst
les
fmul
and
sti
sub
dec
mov
jbe
dec
dec
cmp
es
sbb
mov
pop
out
cmp
imul
sub
xor
and
jmp
xor
gs
(bad)
mov
dec
faddp
and
not
je
ret
fdivr
fbld
jnp
bound
or
inc
ins
(bad)
(bad)
and
mov
sahf
es
xor
aam
lahf
xlat
out
scas
pop
add
lea
and
lods
mov
sub
or
mov
xor
and
mov
fimul
inc
shl
ss
add
movs
sbb
cmc
xor
inc
xchg
jge
pop
dec
lea
mov
jp
test
or
and
pop
or
add
iret
lods
das
in
adc
jg
cmp
addr16
push
or
xchg
push
mov
xchg
cld
mov
xor
add
pop
and
sbb
sti
jbe
scas
push
adc
jns
lock
outs
test
call
(bad)
ss
push
hlt
xor
or
retf
xor
int3
jl
call
mov
dec
cmp
lea
mov
imul
imul
pop
(bad)
jmp
pop
adc
int3
sti
add
jne
push
adc
cmps
cmps
fwait
xor
sbb
push
sbb
mov
in
dec
test
aaa
and
dec
pop
nop
stos
int
push
imul
popf
in
cmp
fiadd
lods
push
xchg
xchg
adc
rol
unpckhps
mov
(bad)
xchg
cli
(bad)
ins
jle
dec
jb
push
add
mov
dec
push
pop
jnp
loope
mov
xchg
mov
cmps
mov
das
int
xchg
xor
arpl
test
dec
es
inc
and
sti
jnp
ds
jnp
fadd
loope
sub
fmul
test
mov
or
xchg
adc
xchg
pushf
dec
retf
call
arpl
(bad)
rol
out
outs
call
rcr
scas
stos
pop
lea
cmp
outs
out
xor
into
add
xor
dec
cmp
pop
test
pop
addr16
push
fwait
les
xchg
cdq
inc
cdq
sbb
mov
jmp
lods
fstp
mov
popf
jl
xor
mov
xor
sbb
pop
fld
mov
adc
ret
call
push
in
mov
(bad)
movs
pushf
scas
test
lds
mov
adc
pop
ds
ins
add
lods
cmp
jg
xchg
stc
cmp
in
push
pop
cmp
je
(bad)
mov
repnz
movs
push
test
push
xchg
out
rcl
clc
adc
daa
jge
test
pushf
(bad)
and
sbb
nop
jbe
cmp
pop
sub
aad
xchg
in
mov
jge
adc
inc
sub
and
mov
aad
imul
out
in
ins
jmp
in
fcmove
push
ja
xor
lods
jecxz
in
fnsave
addr16
cmps
push
xor
push
pop
cmp
mov
lock
pop
fxch
xor
dec
repnz
inc
cmp
cmp
add
repz
(bad)
fcom
clc
mov
nop
adc
jbe
adc
addr16
cmp
xchg
inc
add
movs
movs
xchg
inc
data16
xchg
jbe
imul
cmc
mov
push
mov
clc
pop
jbe
push
dec
mov
loope
push
gs
sub
es
shl
mov
jecxz
inc
add
push
lods
sbb
sbb
in
push
sub
loope
xor
push
pop
daa
enter
dec
movs
jns
idiv
loop
retf
mov
adc
(bad)
fild
mov
inc
mov
in
sbb
pusha
inc
and
and
push
arpl
adc
mov
or
dec
scas
test
lods
into
in
jo
fist
ret
jae
xchg
add
ds
out
xor
aas
inc
and
movs
and
cli
sub
jg
mov
cmp
push
imul
cmc
xchg
xchg
and
inc
mov
jb
icebp
hlt
popa
mov
dec
aad
into
pop
into
sbb
xor
mov
push
icebp
adc
out
mov
int
or
xchg
and
dec
ret
imul
not
int3
out
pushf
adc
dec
and
xchg
aad
adc
fidiv
ss
rcr
and
adc
sub
jns
push
stos
adc
repnz
mov
jo
movs
imul
add
out
rcl
out
cmp
xchg
dec
mov
mov
cld
inc
mov
add
gs
out
pushf
int
out
mov
int
jne
aas
pop
fiadd
imul
xor
mov
push
dec
inc
call
sbb
or
mov
inc
pop
inc
mov
cmp
jno
pop
mov
add
add
pop
(bad)
sbb
cmp
add
jg
or
jnp
(bad)
in
(bad)
leave
dec
sub
loopne
dec
cmp
fyl2x
push
test
and
xchg
xor
movs
push
imul
mov
lock
add
cmp
mov
mov
sub
cmc
add
sbb
sahf
and
pushf
movs
gs
fsubr
pop
and
or
mov
jns
sbb
mov
pop
mov
js
hlt
loope
jge
or
popa
retf
push
push
retf
xlat
jnp
call
popf
push
cdq
pop
mul
sbb
xor
xor
out
xor
test
inc
call
push
mov
scas
mov
xor
ja
ins
mov
dec
cmp
xchg
pop
inc
stos
jnp
jbe
cli
call
loop
test
mov
dec
xor
jge
fldcw
shl
push
test
cmp
push
jp
xor
outs
lods
jnp
mov
adc
mov
js
shl
jl
fsubr
repnz
mov
std
and
jp
stos
cmp
mov
in
cld
and
sub
pop
(bad)
jmp
loope
dec
jg
movs
xchg
sbb
jge
mov
retf
lods
pop
jl
jmp
movs
xor
mov
(bad)
out
retf
cmp
pop
fild
or
lods
inc
sahf
rol
scas
mov
mov
jg
adc
add
mov
pop
cmps
(bad)
scas
or
fdivr
lds
add
dec
jb
mov
rcr
add
cmps
ficomp
sub
jno
sti
pop
rcl
sbb
popa
dec
dec
imul
data16
ss
sbb
mov
loop
fdiv
icebp
sahf
outs
je
xchg
inc
pusha
jns
pop
cmp
or
fmul
je
call
xor
js
popf
inc
addr16
mov
stc
imul
sbb
or
jae
mov
mov
push
lea
push
jno
inc
stos
push
pop
enter
and
nop
and
or
xor
jmp
push
xor
cld
sbb
or
mov
xchg
fwait
xchg
push
loopne
cwde
out
ror
or
cmps
or
sub
mov
inc
jmp
sub
mov
leave
loop
loop
adc
shl
jg
jo
psubd
add
fucomi
jmp
or
loope
clc
add
int
loope
xor
stc
div
mov
jg
bound
out
mov
jae
jg
stos
pop
lock
pushf
cwde
sar
jns
fcom
push
and
mov
(bad)
xchg
push
int
jmp
mov
or
xor
and
xor
retf
cli
(bad)
sbb
pusha
int3
inc
and
add
imul
adc
xor
cmp
cmps
daa
sub
sbb
sub
cmp
ret
js
pop
push
addr16
dec
pop
and
add
dec
aad
and
add
mov
out
push
sbb
jae
ds
dec
push
cmps
scas
retf
in
pop
stos
xchg
push
mov
cmc
stos
jne
cmc
in
mov
retf
sub
jbe
xor
mov
repnz
test
imul
cli
lods
ins
mov
push
dec
jle
jge
xor
leave
popa
cmps
inc
mov
and
jbe
adc
int
ror
mov
pop
fwait
jb
jl
and
aad
in
pushf
imul
mov
cdq
adc
lds
inc
aaa
mov
and
jne
push
inc
adc
dec
sbb
ror
inc
mov
rol
dec
fst
cmps
xlat
cs
or
push
sub
xor
sub
cmps
cmp
call
cdq
out
test
adc
je
push
(bad)
les
jge
aaa
(bad)
pop
push
pushf
int
pop
out
jnp
add
hlt
aas
adc
add
jae
or
pop
mov
xor
sub
cmp
add
mov
ja
add
xlat
stos
sub
mul
(bad)
out
mov
inc
add
sub
fisubr
rol
mov
sbb
nop
mov
sbb
pop
mov
dec
dec
or
bts
sbb
push
nop
stos
jecxz
aaa
mov
jle
pop
sub
pop
in
int3
push
sub
cdq
pop
xchg
mov
mov
dec
adc
aaa
mov
inc
stos
push
inc
mov
or
lahf
loopne
cwde
stos
push
stos
sub
rol
jl
aam
into
add
pop
aas
jmp
mov
push
ret
(bad)
mov
(bad)
or
mov
out
xchg
movs
pusha
xchg
fdivr
sub
mov
xor
xlat
cmp
stc
iret
push
or
mov
dec
push
(bad)
scas
pop
jb
xchg
lea
jp
jmp
jg
sbb
sub
mov
mov
mov
or
jmp
mov
mov
add
in
jo
or
or
and
enter
sbb
sti
out
mov
shl
in
fistp
out
mov
cmp
xchg
imul
push
push
inc
lahf
cmp
(bad)
mov
pop
lds
add
in
loopne
(bad)
mov
push
cmp
movs
lods
shl
ins
mov
mov
sub
scas
rol
xchg
stos
addr16
aas
pop
push
aas
mov
push
scas
lods
ret
cmp
stos
and
sar
pop
push
movs
test
push
mov
les
ins
leave
jmp
mov
mov
dec
xor
mov
imul
mov
fs
mov
or
(bad)
mov
enter
pop
mov
or
jmp
enter
jl
push
xchg
push
jno
mov
jmp
sub
push
leave
mov
repz
int
rcl
push
push
inc
pop
lea
mov
xor
mov
xchg
sbb
mov
retf
pusha
xchg
pushf
mov
(bad)
sub
jno
jle
xchg
fwait
(bad)
dec
inc
call
call
inc
aaa
add
pop
stos
mov
lods
sbb
adc
(bad)
inc
sub
aaa
fimul
jecxz
sub
xchg
test
jecxz
jnp
aaa
std
in
inc
imul
lods
jmp
lds
imul
or
repz
push
mov
shr
push
(bad)
scas
neg
rol
das
or
and
jb
in
lahf
neg
cmc
push
pop
fild
mov
loop
xor
daa
fwait
mov
in
stos
add
inc
nop
addr16
push
mov
mov
(bad)
jg
xchg
jle
pop
pushf
dec
sub
aas
jb
mov
jmp
dec
into
cld
jns
jno
mov
loope
movs
out
mov
add
mov
inc
dec
dec
cmps
push
sub
ds
sub
push
fnsave
ds
dec
dec
fiadd
cli
jnp
pop
std
inc
push
sbb
cmc
push
xchg
or
shr
mov
inc
or
dec
(bad)
(bad)
cdq
adc
adc
nop
inc
push
gs
inc
popa
pop
push
adc
cs
lock
sub
xchg
outs
pop
xor
aaa
cmp
add
cmps
ja
into
out
jg
(bad)
mov
out
adc
adc
mov
repz
mov
xchg
nop
pusha
inc
inc
or
ins
xchg
sbb
mov
sahf
xor
mov
lock
retf
loopne
push
add
test
test
adc
cld
fiadd
jle
stos
mov
ret
call
dec
and
lods
out
lods
test
dec
sbb
outs
iret
adc
das
push
es
cmp
pop
pop
test
inc
and
pop
fwait
mov
test
inc
nop
imul
test
cdq
(bad)
out
sub
and
mov
enter
fldcw
loop
jbe
xor
cmp
test
call
int3
pop
ds
sbb
(bad)
lods
stc
gs
rcr
mov
or
(bad)
int
add
jmp
jae
scas
stos
xchg
lods
xchg
outs
stos
ror
xor
adc
lods
test
into
(bad)
movs
movs
pusha
xor
daa
daa
xlat
aad
add
lahf
add
pop
jmp
int3
mov
sbb
xor
popf
push
mov
mov
add
call
inc
mov
add
pop
bound
ss
aaa
jno
repz
es
mov
pop
pop
jbe
call
je
adc
sub
inc
scas
sar
sub
dec
xchg
cmp
cdq
xor
or
ror
aas
outs
repz
or
pop
sub
push
aas
stos
cli
cmp
xchg
mov
jbe
sub
xor
rcl
add
in
pop
lods
dec
imul
aas
(bad)
jl
mov
test
sub
mov
cmp
call
jecxz
or
sbb
popa
cs
hlt
gs
aad
sub
or
fs
pusha
jg
call
mov
rcr
hlt
push
(bad)
push
dec
loopne
cmp
lahf
bound
and
fild
bound
lds
cmp
addr16
pop
mov
inc
scas
inc
add
inc
add
je
neg
or
xchg
movs
movs
cmc
mov
jecxz
mov
xor
xchg
into
stc
mov
fistp
xchg
sub
xchg
imul
and
mov
pushf
push
inc
mov
fidiv
in
ficom
jecxz
sub
jae
inc
outs
xor
aad
adc
inc
imul
pop
jno
or
sub
pop
mov
ins
pushf
inc
cmps
leave
fistp
retf
cdq
cmps
inc
cmp
jle
test
mov
data16
int
arpl
cdq
sub
jp
into
jbe
shl
cmp
ror
xchg
sub
scas
sbb
push
leave
dec
ins
sbb
adc
and
ss
frstor
mov
not
xchg
jmp
add
inc
out
jno
pop
popa
sub
ins
pop
add
cmc
stos
pop
mov
or
mov
out
cmp
xchg
adc
and
pop
jnp
sar
fwait
nop
push
mov
xchg
pop
add
dec
pop
(bad)
dec
add
xor
loopne
push
ins
mov
(bad)
idiv
and
fadd
cmp
lods
mov
sub
icebp
pop
dec
(bad)
call
mov
inc
mov
aaa
sbb
adc
inc
ficomp
xchg
cmp
fucom
bound
arpl
push
outs
lahf
mov
fxch
fmul
or
movs
popa
jle
push
and
sub
dec
imul
retf
cs
mov
sbb
ret
shl
xor
loopne
push
add
movs
xchg
daa
pop
loop
popf
xchg
mov
addr16
mov
(bad)
loop
or
push
rep
icebp
loopne
sbb
in
dec
adc
jnp
outs
sub
xlat
das
xor
inc
enter
out
xor
leave
adc
outs
iret
add
adc
dec
fild
xor
mov
add
cmps
(bad)
pop
rol
not
dec
addr16
scas
shl
ja
xchg
les
fwait
and
pop
mov
div
mov
sub
mov
pusha
mov
fs
inc
je
loop
cmp
imul
add
mov
pop
retf
xchg
clc
lods
add
adc
repz
sub
jp
xlat
jge
jecxz
xchg
pop
mov
sbb
and
rep
ja
xor
es
jg
jae
aas
ins
out
or
push
movs
(bad)
in
or
inc
mov
shr
cdq
ret
push
dec
lahf
jge
push
push
xor
adc
movs
mov
pusha
cmp
and
mov
loop
dec
xchg
mov
push
(bad)
sub
mov
sbb
xchg
dec
pusha
into
(bad)
pop
imul
enter
sub
xor
mov
fdivr
call
jmp
add
inc
dec
fbld
xchg
adc
xchg
dec
nop
mov
pop
ret
ret
xchg
mov
repz
sub
stos
pop
push
jmp
out
imul
std
adc
xlat
dec
rcr
cmc
jg
pop
or
push
rcr
out
inc
dec
sahf
mov
and
nop
jmp
sbb
xchg
arpl
fld
pop
lods
pop
fcmovnb
sti
xchg
cmps
xchg
out
xchg
sbb
div
das
mov
cli
les
or
sub
int
outs
jg
mov
mov
mov
sbb
dec
xchg
jno
(bad)
push
mov
mov
adc
fs
int
mov
test
jbe
xor
test
loope
pop
(bad)
push
std
retf
cmp
je
or
cmp
mov
adc
dec
xchg
fcom
push
shl
leave
mov
sub
lock
sub
ins
ror
push
clc
lods
dec
rcl
lds
sahf
mov
mov
pusha
cmps
sti
into
mov
inc
xor
aaa
xchg
xor
call
jle
stos
mov
stos
in
imul
mov
stc
out
leave
in
mov
pop
adc
in
inc
stc
pop
add
jmp
cmps
push
xor
cli
xchg
lea
leave
jb
fadd
xor
cdq
aam
fcmovnbe
stos
jle
pushf
adc
sbb
push
jnp
push
aaa
mov
ss
jl
or
mov
ds
repz
mov
aaa
cmp
pop
popa
xchg
arpl
xchg
xchg
scas
dec
(bad)
fisttp
shr
scas
iret
and
ss
dec
pop
xchg
retf
iret
(bad)
in
mov
push
cmp
ins
cmp
pop
or
pop
arpl
ret
dec
or
scas
inc
jbe
jmp
mov
test
push
sub
cwde
mov
in
mov
popf
adc
cmps
add
bswap
pushf
out
push
pop
arpl
scas
adc
ins
rol
(bad)
mov
cmp
iret
clc
mov
xchg
stc
nop
push
jle
xchg
das
mov
push
dec
std
inc
cmp
mov
out
call
mov
dec
pop
pop
push
mov
sub
ret
test
xor
ja
lods
icebp
lds
sti
mov
rcl
xchg
(bad)
xchg
xor
mov
xor
bound
movs
adc
push
adc
pop
mov
pop
push
stos
dec
dec
cmp
addr16
push
loop
sbb
sub
xchg
sub
lock
or
pop
push
icebp
clc
xor
pop
sbb
xchg
out
fcmovbe
cwde
mov
sub
inc
std
fsubr
stos
sahf
sub
shl
push
inc
repnz
les
into
inc
or
loopne
xchg
out
mov
repnz
stos
test
jge
pop
cld
lds
gs
int
(bad)
mov
jmp
jbe
int3
mov
xchg
mov
shl
dec
dec
ror
mov
cmc
cmp
lock
sti
pop
pop
mov
push
xor
mov
pop
icebp
pop
dec
(bad)
in
mov
jge
mov
xchg
mov
inc
mov
fld
and
pop
popa
jae
arpl
ins
mov
add
and
test
jae
int3
(bad)
cmp
sub
add
jmp
xor
jns
jmp
or
gs
outs
push
enter
push
pushf
sbb
mov
inc
sub
inc
shl
xchg
mov
loopne
jno
div
push
aad
xchg
xchg
enter
ss
inc
es
lahf
dec
adc
out
ins
inc
iret
arpl
mov
cld
js
xchg
jp
sub
fldenv
sub
jl
ja
and
jmp
add
clc
push
adc
push
test
test
loop
(bad)
jmp
push
jnp
jmp
mov
mov
enter
stos
sub
pop
cld
or
or
mov
data16
test
int
mov
or
rol
movs
out
mov
xor
cmp
mov
(bad)
jge
or
push
ficomp
sahf
dec
das
adc
repnz
rol
fild
fs
jmp
adc
add
dec
in
xchg
retf
int
test
fcomp
test
adc
xor
mov
idiv
or
in
mov
aam
ror
ds
pop
(bad)
cmp
imul
movs
outs
daa
cmc
inc
inc
int
in
daa
and
add
and
or
xchg
jg
cmp
jp
fiadd
mov
pusha
(bad)
shl
cld
cmp
jge
pop
pop
pop
mov
fistp
sbb
call
les
adc
das
or
into
pop
dec
add
ins
mov
dec
sbb
pushf
add
jp
or
loope
bound
shl
xchg
mov
or
push
jge
sbb
or
and
adc
sbb
mov
test
inc
pop
pusha
and
ror
das
mov
rol
pop
sbb
cdq
call
imul
popf
dec
ins
cmp
pop
(bad)
popa
and
stos
fld
loopne
lods
cmps
mov
mov
hlt
js
es
dec
imul
or
jno
es
mov
or
jae
xor
inc
mov
mov
cmp
leave
add
xchg
gs
mov
(bad)
ret
arpl
jno
rcr
jb
stc
nop
scas
stc
and
cmp
or
dec
(bad)
call
adc
rcr
mov
call
(bad)
enter
or
mov
inc
adc
fistp
fwait
aaa
mov
xchg
mov
ss
loope
cmp
pop
jge
mov
mov
dec
pop
sub
xchg
cdq
fbstp
mov
jle
cmp
sub
sub
mov
or
adc
and
aad
call
pop
push
retf
addr16
mov
inc
xchg
mov
push
add
sti
lods
mov
mov
popf
ja
push
mov
rep
xor
sub
imul
sbb
xchg
hlt
mov
jmp
(bad)
aam
stos
hlt
pop
jns
mov
xchg
(bad)
(bad)
in
call
inc
jne
fadd
dec
addr16
pop
cmp
dec
jno
push
jo
pushf
int
xchg
xchg
adc
gs
sar
mov
and
pop
jmp
sbb
arpl
sar
adc
fs
shl
pop
daa
fldenv
sbb
div
jnp
pushf
jno
and
and
inc
outs
cli
xlat
and
fdivr
adc
cmps
add
mov
mov
cmp
pop
xchg
jle
add
sahf
and
std
lods
rol
out
add
loop
jnp
loope
into
inc
bnd
into
daa
sub
xor
xor
jo
or
(bad)
into
rcl
stos
sub
pop
ficomp
icebp
sub
push
push
sahf
sbb
loope
clc
push
mov
retf
out
call
(bad)
fcomp
jmp
xchg
push
sbb
clc
stos
aas
rol
jle
adc
ins
sar
and
add
jl
mov
jb
or
xor
mov
sbb
xor
pusha
push
stos
add
push
ret
inc
(bad)
movs
xchg
int
lock
push
in
fcomp
jmp
lods
stos
cmp
adc
data16
xor
push
(bad)
jmp
(bad)
mov
pop
faddp
sub
dec
ror
pop
pop
iret
mov
adc
fsubr
mov
jmp
repnz
mov
mov
jle
movs
pop
push
jns
aam
loope
inc
jbe
sub
enter
imul
(bad)
(bad)
fld
bound
adc
xor
or
sbb
loope
xchg
imul
mov
aad
xor
pop
jne
movs
cmc
call
xor
fstp
dec
dec
mov
jae
jb
test
test
mov
into
shl
adc
imul
jmp
or
int
push
xlat
mov
fistp
mov
stos
mov
adc
inc
in
sub
mov
jo
test
addr16
rcr
mov
es
pusha
pop
xor
neg
and
and
sbb
into
out
xor
test
inc
jb
mov
push
mov
out
(bad)
loopne
leave
mov
cmp
jecxz
fnstcw
pop
pop
stos
(bad)
imul
xchg
cld
loopne
sub
aas
sub
mov
jns
add
imul
aas
mov
ins
dec
push
cmp
jb
mov
das
cmp
mov
sbb
lods
sub
or
bound
pusha
lods
cwde
movs
daa
movs
(bad)
pop
xor
xor
repnz
pop
mov
jno
leave
and
mov
dec
outs
jmp
xor
pop
popa
retf
cmp
lods
aas
mov
mov
jb
scas
popf
(bad)
mov
xchg
jge
enterw
pop
mov
sbb
add
clc
pusha
lock
ficom
loop
jo
repnz
cmc
cmp
mov
(bad)
in
pop
jae
das
repz
(bad)
sub
int
jns
mov
scas
jg
dec
shl
push
(bad)
shr
imul
sub
das
rcl
cld
push
push
in
stc
push
fst
add
ret
adc
test
in
or
mov
push
jb
sbb
retf
jp
out
push
cmp
paddsw
cmp
gs
cld
sbb
loope
ret
push
out
adc
jle
cld
jb
sub
inc
xor
iret
enter
ins
jns
js
mov
sub
mov
cmps
xor
aam
int
(bad)
mov
inc
jg
adc
shr
xchg
retf
add
mov
retfw
dec
jp
jo
xchg
lock
xor
outs
repz
inc
out
out
das
fnstsw
sbb
inc
cmp
xlat
imul
adc
retf
mov
loopne
inc
cmp
(bad)
ds
cmps
cs
sbb
(bad)
stos
jmp
repnz
dec
inc
addr16
jne
pop
pop
fcmovnu
jp
cld
pop
push
pop
jg
and
jle
je
cmps
mov
and
add
mov
and
fsubr
pop
xor
call
mov
aaa
mov
int3
rcl
dec
jns
fisub
or
ss
mov
js
pop
inc
mov
jnp
inc
xchg
pop
sub
clc
xchg
jl
jp
pop
mov
jmp
mov
push
cmp
outs
pop
mov
ss
jae
push
frstor
retf
xchg
sub
sbb
out
ret
and
adc
stc
and
cmc
test
aam
ja
movs
or
mov
and
out
xor
in
sti
pop
ss
(bad)
hlt
or
pop
push
shl
not
mov
xor
xor
cmp
stos
dec
sub
int
xor
sbb
or
stos
shl
push
and
jp
mov
jae
enter
adc
mul
cwde
inc
outs
jl
mov
pop
adc
mov
push
push
imul
out
sar
loopne
and
pop
and
jp
push
jnp
mov
fwait
es
outs
cmps
jb
test
mov
cmc
in
push
push
add
pop
cdq
int
and
jae
jae
fsubr
dec
sar
aad
clc
sbb
inc
out
pop
out
add
int3
in
idiv
cwde
xor
pushf
mov
fs
xor
inc
pop
jl
jb
lahf
sub
std
inc
xchg
sub
test
jnp
or
sahf
movs
sbb
ds
xchg
sub
dec
dec
bound
ins
mov
cmps
mov
cmp
std
inc
outs
dec
es
mov
sahf
ds
or
into
xor
push
rcl
sar
and
ins
test
sbb
(bad)
jno
push
inc
pop
xchg
rol
push
daa
inc
jmp
push
rcl
cmp
and
jnp
sar
aam
xchg
hlt
aaa
dec
push
fldenv
scas
sar
aaa
adc
and
jno
push
jmp
inc
mov
movs
push
adc
rcl
sub
into
jecxz
xchg
dec
push
sbb
repnz
or
lods
add
imul
aaa
jle
les
jne
not
lds
cmp
ins
sbb
movs
ds
(bad)
jge
xchg
fxch
sub
imul
inc
adc
mov
cmp
sbb
push
jmp
dec
mov
xchg
dec
mov
cmp
nop
ss
push
std
test
(bad)
(bad)
xor
fwait
call
mov
(bad)
mov
mov
dec
cli
cmp
dec
pushf
sbb
cli
mov
fstp
mov
retf
jno
xor
pop
fisub
push
sti
or
and
sbb
inc
outs
ret
ret
mov
in
xchg
shl
idiv
movs
mov
sbb
adc
push
fist
mov
inc
and
and
in
adc
push
mov
dec
cli
in
fist
dec
mov
xchg
ja
push
add
cld
adc
jge
or
dec
not
cdq
test
mov
cmp
inc
cdq
xchg
test
add
loopne
or
(bad)
jne
add
aam
std
test
mov
cmps
sbb
pop
inc
sbb
fdiv
fcom
mov
iret
push
adc
rcr
jmp
pop
mov
stos
xor
mov
fld
cli
js
out
ins
jle
push
aad
ja
and
xor
rcr
sbb
jge
push
mov
push
mov
adc
test
mov
xlat
push
add
das
outs
push
jge
inc
adc
inc
jle
aas
fmul
lock
or
ds
popf
push
sub
lds
js
mov
add
mov
mov
mov
sahf
jb
es
cmp
ins
mov
nop
loop
dec
movs
add
sar
int3
jo
adc
inc
jle
or
adc
push
fs
std
add
mov
aaa
out
mov
or
mov
cmp
cmp
mov
(bad)
stc
das
pop
adc
jb
mov
leave
ret
pop
rcl
scas
fnstcw
dec
xor
adc
jbe
cmp
add
movs
loopne
(bad)
mov
mov
(bad)
(bad)
ret
int3
rol
add
dec
push
cmp
pop
ins
inc
pop
xchg
das
xor
cs
call
jge
aaa
add
nop
sub
jnp
into
repz
mov
push
sub
out
xor
scas
mov
mov
or
inc
jnp
ficom
jge
or
leave
cmp
test
sub
push
and
dec
loop
hlt
push
xchg
call
sub
cmp
stos
outs
adc
jo
mov
fs
aam
xchg
ficomp
adc
mov
xor
sbb
sbb
shr
(bad)
inc
sub
outs
dec
adc
out
div
es
inc
fldcw
mov
mov
jle
adc
outs
dec
scas
test
add
ds
call
pop
mov
sub
ret
cmp
jmp
mov
xchg
jg
push
inc
ins
aas
sbb
mov
and
icebp
(bad)
cld
adc
cld
push
mov
pop
dec
adc
sbb
or
add
push
daa
inc
sbb
sbb
loopne
je
xor
jbe
and
inc
lods
lods
xlat
push
pop
pop
push
sub
mov
dec
xor
sbb
(bad)
mov
dec
jbe
or
clc
mov
arpl
push
mov
xor
and
addr16
pushf
sub
pop
pop
and
mov
sub
jb
dec
std
(bad)
lock
aad
in
fld
mov
or
adc
add
mov
jns
scas
sahf
push
sub
leave
lock
cmp
in
mov
pop
hlt
cmp
retf
dec
add
or
sbb
inc
daa
stos
push
xor
aam
sub
sbb
mov
fisttp
rcl
or
mov
jne
push
add
pop
xchg
mov
fwait
pop
inc
mov
push
cmps
dec
push
out
(bad)
xlat
jnp
pusha
ins
push
mov
(bad)
mov
clc
cwde
sub
mov
into
addr16
fisub
(bad)
fldcw
mov
fadd
jns
xchg
in
in
nop
cli
adc
fidiv
ins
pop
sub
popa
push
pop
dec
fild
push
les
outs
int
lahf
add
movs
xchg
and
addr16
pop
dec
jl
jle
xor
mov
jmp
aaa
xchg
sbb
push
aam
adc
dec
cli
outs
retf
xchg
ins
pushf
(bad)
cmp
inc
or
pop
pop
fwait
call
ret
data16
cmp
add
outs
pop
lock
xchg
or
pushf
mov
lods
mov
pushaw
pop
aad
jmp
jno
mov
push
scas
xchg
jecxz
and
data16
(bad)
cli
push
adc
jnp
and
mov
mov
arpl
scas
sub
inc
adc
mov
sub
cmps
leave
xacquire
pop
ret
or
dec
inc
mov
lds
jnp
fmul
and
ja
shr
mov
adc
lock
inc
add
outs
fstp
and
pop
xchg
mov
cli
xchg
push
(bad)
out
cmp
xor
xchg
jbe
or
repz
or
adc
push
adc
mov
push
out
xchg
add
mov
sar
cwde
pop
mov
bound
fisttp
xor
fcos
inc
jbe
mov
cs
pop
push
mov
and
out
jno
aas
mov
test
lods
sub
icebp
dec
addr16
xchg
call
les
or
mov
and
cmp
ins
mov
stos
dec
push
adc
jmp
jnp
mov
pop
mov
push
adc
sbb
out
adc
gs
ss
pop
and
pop
dec
dec
or
xchg
xor
jl
cmp
loope
push
xchg
pop
push
(bad)
sbb
fnstenv
lock
lahf
and
inc
xchg
mov
push
mov
pop
hlt
dec
test
cmp
mov
cmp
loopne
pop
das
rcl
cmp
ja
repz
and
mov
lahf
popa
adc
call
push
test
test
test
dec
push
xchg
frstor
das
loopne
jae
jo
sub
test
add
cmp
xor
inc
push
add
int
retf
sub
or
xor
scas
push
aam
fdivr
rcl
sub
jne
xchg
jbe
(bad)
loop
ins
jo
push
pop
or
fist
retf
(bad)
inc
sub
icebp
repnz
cs
xchg
fcmovnbe
push
stc
xchg
xchg
std
mov
in
inc
lahf
jb
enter
hlt
or
pop
cli
fxch
dec
cld
repz
sbb
aaa
sub
pop
xchg
and
xor
loop
jle
mov
stos
mov
(bad)
out
cmp
mov
outs
fidiv
mov
and
xchg
dec
cmp
push
call
pop
push
mov
lods
pop
pop
jmp
sub
outs
mov
mov
dec
fisub
cmp
and
(bad)
jge
js
dec
cmp
nop
out
fidivr
xor
jb
mov
and
sbb
inc
or
cmp
jecxz
pop
jne
push
mov
pop
cmps
fist
or
sbb
ss
xchg
stos
sbb
outs
adc
sub
adc
ja
fs
jp
clc
mov
add
aaa
xchg
xor
js
mov
bound
xor
sar
retf
adc
out
xchg
je
fs
mov
inc
movs
sbb
mov
add
mov
dec
lea
jmp
inc
test
loopne
bound
mov
dec
popf
fisubr
sbb
jmp
jbe
sub
jg
imul
pusha
sub
mov
sbb
sar
pop
adc
pop
sub
push
imul
inc
div
in
mov
xor
dec
inc
popf
inc
adc
mov
cmps
cli
sbb
jg
adc
iret
push
jle
cli
dec
adc
fisub
pop
jl
add
or
cmp
mov
ss
(bad)
mov
add
mov
cmp
dec
pop
add
ins
xchg
sar
int
sub
sbb
inc
pop
fwait
sub
pop
or
pop
sti
push
push
sub
cli
add
lods
out
add
pop
adc
jne
or
(bad)
xor
jae
in
hlt
outs
sbb
aaa
nop
and
imul
xor
pop
fimul
stc
push
(bad)
hlt
mov
bound
push
cmps
jbe
jo
ins
cmp
ret
xchg
xchg
inc
clc
cmp
mov
jmp
mov
rcl
xlat
sub
push
sbb
xchg
push
fbstp
cmp
mov
addr16
or
test
ret
push
mov
addr16
xchg
push
adc
mov
mov
adc
je
das
iret
rcr
pop
inc
mov
cmp
xchg
mov
sub
loopne
cwde
and
rol
daa
pop
dec
das
int
jg
mov
std
or
push
add
push
jmp
aam
xchg
call
jle
in
std
sub
fsubr
shr
push
mov
add
icebp
pop
aad
in
and
mov
out
movs
ret
mov
mov
out
cs
cmp
bound
ins
clc
jp
call
in
repnz
add
push
add
xor
cdq
xchg
mov
sbb
mov
mov
pop
popf
xchg
push
mov
scas
(bad)
and
xor
dec
(bad)
movs
mov
paddusb
mov
pop
(bad)
fldcw
pusha
xlat
ins
push
jmp
lock
xor
pop
movs
cs
leave
test
pop
jl
inc
mov
imul
sbb
icebp
mov
inc
adc
mov
cwde
mov
(bad)
and
mov
gs
add
(bad)
fcom
cmp
jg
push
push
(bad)
fld
xchg
ja
mov
(bad)
(bad)
mov
or
clc
push
or
sub
jb
lds
adc
jns
lock
jmp
add
cmp
sti
pusha
test
das
out
add
loope
aaa
(bad)
push
out
ret
or
sti
pop
and
sbb
xchg
mov
sti
out
and
adc
sub
sub
or
mov
stc
icebp
mov
out
mov
fs
lea
xor
pop
push
inc
mov
enter
and
sub
inc
jo
xchg
adc
call
inc
jmp
pop
push
adc
leave
jmp
repnz
adc
retf
nop
mov
inc
outs
xchg
pop
add
iret
inc
add
push
jbe
(bad)
cmp
add
daa
push
out
xor
cmp
cld
rol
in
xchg
jge
(bad)
repz
adc
mov
popf
scas
inc
out
imul
gs
repnz
je
movs
inc
push
mov
cmp
cmp
pushf
dec
dec
fs
pop
(bad)
and
jns
sti
push
movs
rcr
jecxz
fcomip
shr
enter
mov
stos
mov
test
mov
aad
sar
adc
jns
jmp
(bad)
mov
(bad)
push
inc
or
cld
aas
clc
xchg
mov
scas
mov
push
sbb
adc
frstor
cdq
jl
sub
sub
sbb
out
push
cmp
fcom
in
mov
jae
push
pusha
push
and
sub
jno
adc
and
lods
push
sub
lock
sub
retf
and
mov
gs
call
or
and
mov
cmps
and
pop
aad
add
xor
test
mov
popf
test
push
retf
sbb
mov
and
mov
(bad)
lea
xor
dec
fnstcw
daa
pop
inc
scas
mov
jmp
cmp
xchg
push
pop
mov
sub
inc
cwde
vpsubsb
nop
or
push
iret
sti
test
hlt
fimul
loope
sbb
jno
(bad)
aas
into
jmp
or
lods
fst
(bad)
gs
in
mov
lds
test
inc
mov
ss
repnz
out
repz
test
push
popf
mov
pusha
adc
bound
fsubrp
pop
mov
mov
cmp
or
cmp
push
addr16
stos
fcom
mov
les
adc
pop
adc
adc
out
sahf
ret
mov
or
pop
stos
mov
xchg
test
jle
mov
jno
fsubr
push
stos
sbb
stos
push
mov
xchg
enter
and
in
clc
movs
mov
mov
mov
push
clc
scas
jle
std
hlt
jnp
adc
jnp
popf
inc
jbe
cmp
jnp
aaa
nop
in
sbb
mov
(bad)
mov
mov
cld
retf
neg
out
pop
sti
stos
dec
pop
or
add
push
sub
or
retf
rcr
sub
adc
jns
jb
push
or
sub
ins
in
pop
pushf
int
fmul
mov
jecxz
test
xchg
fstp
rcl
or
mov
add
rcl
pop
lds
mov
push
mov
dec
jg
dec
and
mov
xchg
pushf
dec
sbb
sbb
icebp
jnp
cld
sbb
icebp
iret
test
in
pop
mov
or
gs
repz
(bad)
mov
pop
pushf
enter
aam
aam
into
call
cmp
aas
xor
mov
add
sub
add
(bad)
xor
cmp
inc
cmps
and
lds
add
sbb
test
xchg
sub
loope
ja
inc
jl
jbe
inc
retf
and
mov
mov
cmp
push
pmulhw
scas
sbb
mov
add
in
pushf
mov
sbb
retf
push
scas
xor
je
ror
adc
add
retf
arpl
out
(bad)
add
jns
xor
imul
adc
mov
ins
adc
sbb
jg
mov
gs
rol
pop
mov
(bad)
mov
int
adc
and
sbb
jmp
push
mov
and
pop
xchg
and
mov
stos
hlt
dec
loope
leave
mov
lds
adc
and
cs
add
iret
pop
das
out
mov
aas
xchg
sbb
and
jecxz
push
iret
repnz
ret
mov
into
or
movs
loop
in
shr
mov
test
daa
shl
and
push
cld
ins
xchg
pop
dec
add
(bad)
js
adc
xlat
xor
push
bound
int3
and
xor
push
cmp
test
lods
push
push
cli
cmp
fbstp
shl
push
xor
into
add
xchg
aad
sbb
inc
sub
pop
int3
inc
mul
mov
int
cmc
outs
mov
cs
fcom
cs
out
pop
jnp
cmp
xor
mov
and
dec
xchg
ret
mov
mov
ins
xor
aaa
jbe
fwait
jl
inc
bound
div
cwde
fimul
xor
sbb
mov
mov
push
movs
fnstcw
jb
mov
fs
into
cmps
(bad)
cmp
xor
jo
and
dec
cli
clc
imul
pop
stos
cmc
out
sub
mov
jno
push
les
test
(bad)
jb
leave
push
and
retf
sub
gs
stos
rcr
shr
out
dec
mov
mov
dec
adc
dec
fmulp
mov
es
dec
lods
inc
mov
mov
cmps
sahf
(bad)
cmp
rol
and
mov
lea
in
or
enter
les
jae
and
jg
jno
mov
dec
sbb
add
jne
shr
bound
xchg
jnp
ds
retf
jmp
xor
dec
fidiv
mov
inc
outs
xchg
inc
idiv
xchg
or
push
mov
push
or
cld
push
push
push
movs
xor
push
xchg
adc
test
(bad)
push
dec
test
rcr
dec
add
int3
adc
mov
push
mov
xor
push
sar
and
or
mov
enter
ds
add
loopne
cmc
icebp
mov
push
jl
add
leave
dec
lds
inc
aad
in
push
fimul
push
data16
movs
sbb
push
sbb
cld
inc
call
test
scas
mov
nop
adc
and
inc
ret
mov
xchg
cld
ret
xchg
sbb
push
sbb
mov
hlt
int3
jge
cmps
pop
fld
inc
das
xchg
out
call
sar
or
rcl
cmps
outs
es
pop
jle
(bad)
jnp
pop
or
sub
fistp
cmp
jne
pop
mov
xchg
jge
mov
out
cli
or
stc
outs
jge
repz
cmp
mov
jbe
push
adc
mov
inc
xchg
xchg
shl
ret
sahf
in
ins
push
repz
shl
xor
lods
sti
lods
mov
add
adc
adc
and
dec
sti
adc
and
iret
pop
sub
xor
mov
cwde
cmp
pop
mov
sbb
push
lods
aaa
lea
jmp
add
sbb
inc
fwait
es
sub
jge
inc
and
sub
jns
stos
mov
add
sub
outs
out
ret
dec
ret
and
mov
leave
sbb
fcom
test
scas
add
cmps
xchg
mov
mov
xor
inc
(bad)
(bad)
(bad)
fiadd
cwde
pop
add
mov
rol
ud0
lock
ins
jo
daa
pop
ds
retf
xor
inc
test
ins
xor
push
cdq
dec
xchg
xchg
lock
mov
arpl
repnz
push
test
adc
hlt
repnz
in
hlt
jmp
sub
lock
jl
pop
into
adc
dec
inc
adc
inc
xor
jno
inc
dec
sub
hlt
cmp
aaa
push
sub
data16
ja
aaa
inc
and
aaa
iret
sbb
gs
pop
popa
ins
push
cmc
push
cmps
or
gs
das
jmp
sub
outs
out
dec
out
dec
pop
movs
jmp
xchg
je
pusha
xor
inc
jae
or
fdivr
mov
ficom
add
jne
inc
mov
jo
rcl
cmps
sub
pop
mul
push
mov
mov
lahf
mov
or
test
and
jns
shl
ja
shr
cmps
sub
movs
xor
and
pop
cmps
or
xchg
lahf
xchg
pop
push
cmp
mov
ins
mov
xchg
push
sub
je
xor
scas
ret
cmp
and
ror
outs
sbb
mov
scas
mov
jbe
or
push
mov
xchg
xor
imul
mov
mov
inc
out
ins
das
push
jne
icebp
xor
adc
mov
shr
mov
sub
wrmsr
xlat
int
mov
(bad)
inc
inc
das
and
leave
retf
push
stos
or
add
cmps
pop
fcomp
out
cmp
cmp
mov
xor
aas
inc
mov
dec
in
pop
mov
sub
stos
cmp
pop
aas
add
rcr
pusha
jge
dec
and
xchg
pusha
fidivr
icebp
movs
sub
mov
jge
adc
cmp
fmul
sbb
rcr
mov
cwde
rcr
push
adc
adc
mov
movs
stos
mul
std
adc
xor
ficom
xchg
psrad
rcr
loope
cmp
stc
test
lahf
sub
daa
push
dec
push
mov
mov
mov
xchg
out
int3
sub
and
loop
sub
lods
or
cmp
xchg
or
out
vdivps
mov
xor
cmp
mov
xchg
outs
sar
push
aaa
push
pop
imul
or
mov
dec
mov
sbb
push
mov
loopne
sub
leave
(bad)
cmps
addr16
imul
fdivr
outs
das
cmp
sbb
pop
in
loop
pop
or
mov
int
xor
setno
aaa
sbb
jo
cmp
xchg
inc
push
test
fsubr
push
call
mov
test
leave
mov
call
addr16
call
sub
xor
shr
loop
add
hlt
jno
inc
jl
les
psrld
pop
and
jo
dec
sub
push
mov
pushf
retf
push
ror
into
test
mov
jmp
clc
mov
xchg
daa
jmp
stos
mov
stos
shl
xchg
popf
imul
fwait
ror
jle
xchg
ret
mov
mov
clc
stc
dec
jmp
jge
out
dec
(bad)
sbb
jno
pop
mov
add
mov
xchg
popf
repz
hlt
inc
dec
sub
xor
int
ror
or
ror
ds
repnz
les
xlat
ja
ds
pop
dec
push
cmps
loopne
push
jo
or
call
ret
and
mov
fwait
into
jbe
movs
xchg
mov
ins
dec
call
stos
mov
into
pop
jae
fbstp
xor
push
call
leave
pop
xchg
stc
push
mov
test
or
xor
xor
inc
mov
pop
or
gs
inc
test
rcr
fadd
inc
in
int
test
loope
daa
dec
pop
call
add
push
inc
js
dec
loope
sbb
outs
std
or
pop
rcl
cli
sbb
mov
pop
jo
je
mov
(bad)
aam
mov
cwde
mov
jo
(bad)
pop
pop
(bad)
jge
pop
ficom
add
mov
call
jl
mov
call
jle
xor
into
xchg
lahf
jg
out
jecxz
imul
cmp
push
xchg
sub
add
jge
mov
cs
add
add
jmp
inc
or
outs
in
ror
add
icebp
mov
retf
arpl
push
call
jno
int3
dec
push
arpl
(bad)
rol
push
retf
data16
jb
mov
sahf
jmp
jmp
sar
int3
inc
xchg
pop
cmps
cmp
xchg
inc
mov
cmp
bound
rcr
fmul
jne
mov
or
mov
and
lahf
aam
push
fiadd
popf
mov
int3
(bad)
adc
xor
sahf
bound
sbb
jno
mov
sbb
xlat
xchg
mov
jle
mov
add
mov
aaa
(bad)
nop
cs
sub
xor
pop
mov
lods
cmps
je
xchg
(bad)
stos
ret
in
mov
xlat
aaa
ja
fisub
sbb
loope
(bad)
leave
lods
test
mov
push
ins
push
leave
sbb
mov
pop
pushf
(bad)
cmp
jae
push
(bad)
and
movs
and
rcr
mov
std
push
sbb
add
adc
pushf
movlhps
and
or
add
mov
fidivr
das
or
pop
aad
stos
outs
xor
ss
sti
mov
iret
pop
adc
les
inc
jg
pop
mov
cmps
test
mov
push
inc
(bad)
in
adc
sti
push
xchg
popa
cmp
sbb
sbb
inc
je
gs
iret
fld
shl
ja
or
cld
adc
popa
and
cli
jmp
xor
add
ja
aam
mov
and
jmp
jne
mov
mov
adc
mov
js
jb
loopne
xchg
jbe
in
into
(bad)
push
inc
xor
popa
mov
sbb
jno
rcr
lods
mul
jae
jp
jne
sub
pusha
ds
jno
fldcw
clc
adc
adc
mov
rcl
shl
aad
lahf
in
mov
jmp
mov
sub
cmp
mov
retf
xor
sti
(bad)
cdq
ret
loop
stos
xor
xor
push
xor
xchg
dec
inc
sub
jns
adc
stos
adc
dec
xor
dec
fild
mov
inc
inc
out
cwde
mov
ficomp
call
pop
mov
pop
ss
jno
mov
lds
add
push
out
and
movs
push
cmp
loop
movs
add
call
jb
mov
ret
mov
xor
mov
mov
and
jecxz
sti
call
es
movs
cmp
sbb
repz
call
or
mov
pop
inc
jo
adc
test
shl
(bad)
(bad)
lock
mov
sar
fild
xchg
push
out
jb
daa
push
dec
or
push
sbb
sbb
push
daa
daa
mov
jg
(bad)
in
daa
dec
pop
jmp
rcr
xor
out
inc
cmps
imul
lea
ins
mov
sub
or
dec
ror
iret
inc
xchg
mov
cld
das
shl
sub
aas
stos
xchg
mov
test
xchg
pop
or
inc
mov
popa
fs
adc
dec
add
add
lea
dec
sar
jmp
aas
pop
(bad)
out
jns
or
inc
mov
mov
adc
ins
sbb
xchg
xor
push
in
jg
lock
mov
inc
dec
ficomp
pushf
jge
pop
adc
out
mov
cdq
int
pop
js
in
inc
(bad)
jnp
mov
stos
mov
or
pop
push
jno
test
fwait
dec
pop
popf
xor
or
cmp
test
fstp
push
dec
scas
cs
mov
inc
mov
imul
and
fimul
xchg
mov
imul
xchg
xchg
dec
into
shl
pop
fcmove
pop
je
aam
stc
dec
push
arpl
jle
cmp
stc
stos
pop
retf
inc
dec
add
in
loopne
jg
popa
xor
pop
sti
repnz
(bad)
jo
cli
xor
push
daa
cmps
test
fild
mov
push
push
xor
add
inc
sbb
add
(bad)
lods
mov
enter
ret
jl
mov
clc
add
das
shl
imul
pusha
push
add
mov
mov
dec
mov
mov
push
sub
out
pop
ds
cmp
pop
iret
mov
pop
jge
repz
aad
imul
movs
fwait
in
movs
dec
push
mov
jmp
mov
xchg
dec
sub
push
mov
mov
push
scas
adc
xchg
shl
ins
addr16
push
mov
push
pop
dec
ins
test
pop
sub
(bad)
ficom
or
jne
rcl
mov
push
int3
retf
mov
and
call
pushf
call
xchg
jo
inc
xor
sub
enter
xchg
xor
xchg
addr16
lock
nop
icebp
adc
sub
leave
cmps
cmp
jns
mov
fsub
icebp
outs
mov
adc
lahf
sbb
or
adc
mov
and
dec
fcom
push
iret
pop
mov
jne
neg
inc
pusha
mov
mov
push
dec
or
mov
cwde
jp
mov
mov
repz
hlt
retf
(bad)
push
xchg
lods
cmps
mov
mov
dec
mov
sbb
dec
into
sub
je
(bad)
ret
ret
clc
ss
push
imul
scas
push
add
sub
div
lock
icebp
mov
fimul
push
ins
sub
dec
mov
out
shl
scas
pop
imul
ds
sti
xor
imul
imul
out
mov
pop
lods
push
mov
cs
jnp
clc
xchg
cmp
inc
jo
das
adc
add
cli
dec
leave
repnz
test
je
shl
popa
fild
rsm
test
ror
dec
(bad)
push
inc
pop
xor
add
pop
sbb
scas
fst
inc
iret
cwde
push
mov
mov
dec
pop
jnp
jno
xchg
pushf
scas
pusha
(bad)
or
movs
adc
ss
push
lds
inc
mov
adc
sar
ds
xchg
and
call
aaa
mov
adc
out
cs
mov
(bad)
dec
nop
sub
xchg
pop
jg
jns
jmp
add
test
xchg
adc
cli
and
mov
jo
cwde
ja
data16
jb
pop
add
inc
icebp
push
daa
rcr
(bad)
mov
fimul
rcr
(bad)
movs
sbb
push
dec
mov
std
shr
daa
jno
aas
stos
mov
pushfw
in
jmp
adc
cmps
jae
cmc
imul
cmps
out
std
mov
adc
dec
das
test
cmp
js
sub
jae
sub
sub
xor
and
les
cmp
bound
mov
ins
push
js
stos
jnp
fisttp
jl
mov
and
vmovhpd
jmp
mov
lock
outs
mov
or
addr16
mov
mov
mov
test
jmp
pop
add
popf
sti
mov
mov
scas
push
sbb
mov
mov
add
pop
stos
add
mov
popa
sub
fwait
xchg
and
fmulp
xlat
pop
imul
mov
mov
ss
or
js
loop
inc
das
mov
je
sub
pop
jp
or
xchg
ret
loope
xchg
(bad)
jmp
bound
mov
fidiv
fisubr
mov
jo
int3
leave
push
pop
mov
xchg
stc
mov
imul
jmp
daa
aad
sub
ret
test
popf
push
fdiv
cmp
pop
(bad)
pop
adc
fsubr
xor
push
std
sbb
pop
mov
in
je
or
jle
jle
(bad)
std
pop
shl
push
jg
add
outs
scas
push
ja
stos
daa
bound
stc
data16
jp
jg
add
cmp
or
and
fsubr
aam
dec
daa
push
iret
jno
jge
cmp
mov
mov
sub
clc
xor
push
shl
sub
outs
cmc
mov
lods
mov
pop
lahf
popa
test
outs
and
jb
cmp
into
fdiv
lock
add
nop
(bad)
bound
icebp
into
sbb
mov
jmp
bound
call
nop
adc
test
cwde
cmp
sbb
imul
repz
daa
push
lods
sti
(bad)
(bad)
jae
pusha
leave
(bad)
es
xor
sbb
std
jl
dec
call
scas
cmc
pop
loop
out
cmp
sbb
mov
cmp
mov
jle
mov
mov
pop
test
push
std
or
pop
adc
xor
inc
sub
or
cmps
xchg
dec
loope
rcl
mov
pop
fwait
push
rol
mov
dec
adc
stos
data16
add
ror
jecxz
sub
fnsave
dec
sbb
aas
clc
int
out
ins
cmps
jae
xchg
les
sahf
add
mov
xchg
dec
pop
xchg
cmp
fimul
xlat
jae
leave
inc
(bad)
loop
mov
inc
cdq
jae
or
mov
arpl
cmp
inc
lock
imul
cmp
dec
pop
sbb
sar
call
sbb
jne
dec
loope
jne
or
out
add
push
sbb
adc
mov
adc
push
ret
dec
rol
loope
les
adc
hlt
out
out
dec
cwde
xor
xchg
add
fiadd
inc
adc
jmp
jg
aam
into
jg
das
daa
fstp
jno
out
jo
adc
or
xor
pop
pop
xor
ret
sub
adc
add
mov
mov
mov
jge
leave
test
dec
ficomp
pop
adc
xchg
pop
loop
neg
imul
jmp
inc
mov
int
fstp
push
shr
imul
xchg
jle
lea
or
mov
fcomp
mov
xchg
push
add
lods
in
sub
and
push
inc
pop
mov
or
fdiv
daa
and
mul
frstor
nop
fabs
sub
test
mov
cli
mov
add
fwait
cmps
mov
push
jecxz
push
inc
ins
ret
nop
ret
sahf
mov
dec
cli
push
mov
test
jle
enter
cdq
stc
nop
pop
jecxz
add
push
mov
jne
jge
push
loopne
rol
and
mov
push
mov
push
adc
(bad)
sti
pop
adc
stos
out
jo
jl
popa
inc
scas
ffreep
dec
inc
xor
in
adc
call
mov
outs
neg
and
mov
cmp
je
jle
cwd
pop
push
repz
cmps
jecxz
fnstsw
js
adc
mov
jo
int
imul
int3
mov
xor
cmp
fadd
imul
cmp
shr
in
push
pop
rcr
inc
int3
dec
fdivrp
out
xchg
jmp
retf
jb
xlat
test
push
pusha
lock
ins
mov
outs
retf
mov
mov
outs
in
inc
jne
pop
retf
fst
pusha
xor
popa
pop
stos
mov
stos
inc
cmp
dec
lods
cli
nop
sub
pop
(bad)
pop
int3
and
push
movs
popf
inc
imul
dec
sub
dec
mov
adc
lods
inc
pop
dec
jnp
cmp
fnstenv
js
pushf
inc
mov
lea
aad
or
shl
fst
xor
jb
sahf
ds
xchg
movs
xchg
retf
lods
or
sub
mov
jl
mov
rol
and
xchg
push
(bad)
jae
cmp
or
mov
jns
jbe
mov
mov
sbb
mov
cmp
ror
push
jmp
imul
dec
mov
lea
fisub
fcmovbe
jl
jo
add
push
cmp
xor
sbb
and
inc
scas
fild
cld
push
cwde
push
pop
retf
jle
cld
stos
jno
call
and
enter
in
sub
neg
xor
(bad)
mov
mov
fst
sbb
pusha
popf
mov
push
or
je
push
imul
sbb
cmps
ret
std
rcl
mov
add
jb
movs
js
outs
out
les
icebp
xchg
les
mov
or
jno
or
and
mov
add
mov
lods
stos
xchg
test
mov
div
sub
out
and
xchg
dec
xchg
xchg
fld
xchg
jg
mov
adc
fidivr
xor
xchg
and
cwde
cmp
lods
rol
dec
mov
retf
push
xchg
mov
push
jmp
sub
and
fs
sbb
xchg
or
xchg
mov
shl
(bad)
jmp
push
mov
pop
or
add
adc
pop
sbb
cmc
fdiv
(bad)
xchg
and
inc
(bad)
cld
mov
adc
mov
pop
cmp
test
xchg
je
mov
inc
push
leave
xor
xor
push
cmps
push
popf
loope
bound
dec
jl
pop
scas
pop
nop
or
(bad)
das
xchg
fwait
or
mov
push
mov
and
sub
adc
ins
jbe
or
sar
xchg
rol
lds
push
and
and
in
xor
gs
push
fsubr
in
lea
aas
les
cli
outs
ins
xchg
mov
push
daa
repnz
fs
sbb
mov
or
out
mov
test
hlt
cmc
push
inc
(bad)
push
sub
mov
push
or
outs
call
sahf
cdq
outs
leave
clc
(bad)
adc
add
xchg
jp
jmp
inc
ss
je
jmp
cmc
adc
inc
and
mov
pop
mov
daa
in
xor
loop
out
xor
dec
cmp
inc
repz
jecxz
mov
pushf
push
movs
outs
or
lahf
fiadd
cli
mov
bound
and
cs
sub
sar
popf
into
sbb
xchg
adc
in
repz
add
inc
jae
add
lock
std
inc
pop
dec
mov
mov
or
cmc
adc
ins
(bad)
test
xchg
jne
jmp
pop
mov
mov
or
mov
loope
jmp
lds
jno
push
int
(bad)
push
mov
outs
jmp
dec
int3
and
push
sub
xchg
or
rcl
loopne
mov
adc
das
(bad)
retf
jbe
sbb
das
sbb
xchg
out
push
inc
mov
cmp
je
push
push
int
xchg
xchg
pop
inc
jge
fs
jecxz
gs
repnz
(bad)
arpl
(bad)
imul
sbb
ror
fsincos
js
cmc
ret
aad
mov
mov
jle
push
mov
cmp
dec
movs
lods
mov
call
xchg
xor
xchg
pop
icebp
xchg
shl
aad
jmp
lock
and
inc
pop
xchg
jns
xchg
mov
cmp
adc
fst
mov
or
jle
ss
fdivr
push
adc
jae
cmc
sbb
shl
aam
ret
push
dec
sbb
or
push
sub
dec
mov
test
jle
dec
push
add
push
call
push
ss
les
pop
shl
xchg
jmp
mov
cwde
sub
ret
sub
sbb
push
and
pushf
inc
test
fnstenv
push
(bad)
or
ficomp
dec
xchg
fld
push
xchg
or
push
jl
lock
xchg
aam
ror
add
jns
ror
in
lahf
jo
cs
inc
adc
xchg
or
cmp
jae
fisub
jle
repz
daa
xor
sbb
imul
mov
sahf
sub
xor
inc
int
call
sti
adc
fist
(bad)
sbb
(bad)
int3
xchg
repz
xor
and
out
rcl
push
inc
shr
(bad)
bound
loop
rol
dec
mov
inc
pop
mov
add
adc
les
dec
pop
or
mov
sbb
(bad)
inc
and
rol
mov
(bad)
xchg
(bad)
and
xor
lock
out
retf
sub
pop
sbb
xchg
or
and
pop
call
test
ret
gs
xchg
retf
xor
cli
aas
jno
mov
je
into
and
ins
das
(bad)
dec
sti
adc
jecxz
mov
gs
test
arpl
popa
movs
aam
or
jae
push
mov
out
mov
and
loopne
mov
mov
fs
push
ins
pop
pop
rol
ror
es
int3
or
call
sbb
sbb
mov
jg
xor
int3
push
push
mov
mov
push
cmp
pop
loopne
inc
or
(bad)
mov
cdq
xchg
mov
mov
dec
ins
push
dec
mov
dec
dec
loopne
push
dec
xchg
ins
retf
aas
mov
(bad)
mov
inc
(bad)
xlat
mov
cmp
arpl
lds
fwait
dec
and
sbb
xchg
ret
lods
pop
sub
lods
scas
imul
cmp
xor
jge
or
lods
jne
pop
out
mov
push
lock
mov
ins
mov
inc
sub
push
or
cmp
fwait
cmp
xor
add
xchg
fiadd
pusha
jnp
inc
pop
push
mov
xor
out
test
mov
add
sbb
pop
shl
add
jl
sub
push
pop
out
xchg
and
es
mov
pop
push
mov
inc
int3
sti
in
or
push
mov
inc
gs
pop
cmps
xchg
push
dec
jo
sub
mov
sub
arpl
and
repnz
xchg
movs
mov
movs
fdivr
fstp
push
push
cmc
dec
hlt
cmp
ja
xor
xlat
push
push
jno
es
pop
enter
jmp
add
call
or
jp
fcom
cmp
xchg
rol
icebp
and
js
sahf
test
(bad)
cmp
xor
jb
sub
fild
xchg
cwde
mov
adc
xor
outs
xlat
xchg
or
loopne
imul
inc
mov
icebp
mov
xor
inc
xor
inc
ret
dec
stc
ror
icebp
add
hlt
cwde
mov
push
sbb
in
jmp
cld
icebp
pop
iret
push
je
bnd
jns
sbb
mul
push
dec
sub
push
adc
js
adc
sub
dec
pop
xor
shl
push
sbb
stos
in
lods
cmp
mov
test
mov
fwait
les
das
xor
stos
jl
dec
mov
imul
adc
push
add
iret
jbe
shl
jl
fisub
jg
loope
push
jo
xor
cmp
ss
pop
out
and
or
push
ret
jmp
cmps
pop
xchg
in
js
ins
fwait
and
jmp
scas
or
jmp
and
lods
sub
mov
and
imul
mov
daa
leave
retf
gs
pop
jl
xor
mov
call
daa
icebp
cli
je
cmc
popa
inc
mov
or
mov
(bad)
fidivr
call
hlt
mov
pusha
fnstsw
repz
out
mov
dec
cmp
shl
pushf
mov
loop
pop
test
ds
mov
daa
add
add
sbb
imul
adc
xor
lods
test
sbb
xor
jecxz
dec
imul
jp
or
(bad)
std
jl
add
cwde
mov
adc
outs
or
mov
iret
add
cmps
enter
fsubr
mov
sti
jp
pop
pop
sub
push
mov
shl
out
pushf
cmp
add
cmps
add
cs
pushaw
add
imul
jge
cmp
mov
cmc
jecxz
int
outs
add
jle
xor
shl
add
out
enter
scas
add
ret
inc
push
mov
sbb
or
daa
or
dec
std
inc
xor
pop
std
adc
hlt
dec
cmp
scas
fbld
test
fs
popf
jecxz
xor
push
xchg
push
or
or
sub
mov
jne
xchg
push
mov
inc
sub
jp
popa
fbld
dec
dec
cli
sub
cmp
cmp
lds
or
imul
cmp
mov
call
sbb
pop
jmp
imul
aas
retf
or
daa
aam
call
aaa
retf
aaa
les
inc
jns
lock
pop
aaa
sbb
push
daa
push
and
aaa
push
and
jecxz
xchg
or
mov
adc
imul
cmp
fld
fstp
mov
jne
fmul
mov
sub
mov
dec
adc
repz
ds
jmp
dec
aas
je
(bad)
jnp
xchg
xchg
jb
and
xor
xor
retf
dec
jae
mov
mov
jecxz
icebp
mov
jb
fsubr
dec
sbb
xor
loop
adc
shr
scas
xor
dec
push
sti
test
xchg
pop
jns
push
mov
pop
push
push
mov
add
pop
enter
es
mov
or
(bad)
jmp
mov
xchg
ss
aaa
cmp
jg
stos
test
loop
push
cdq
or
std
pushf
aaa
and
fucomi
ficomp
add
jbe
popa
adc
loopne
popf
daa
jae
push
inc
add
or
gs
cdq
into
(bad)
in
lds
pop
imul
movzx
test
scas
sub
mov
adc
sub
imul
dec
ins
push
push
cdq
loop
(bad)
scas
sbb
jno
mov
xor
sahf
movs
mov
mov
adc
shl
shr
mov
mov
sub
pop
mov
or
pop
popa
mov
cmp
push
pusha
sub
dec
or
lock
imul
or
fcom
xchg
or
fwait
sbb
add
pop
mov
add
cmp
add
call
nop
scas
add
jg
pushf
jmp
(bad)
fadd
ss
adc
sub
ja
fidivr
cld
je
scas
jg
xchg
jmp
sbb
add
dec
aas
pop
push
pop
enter
nop
pop
scas
and
jecxz
neg
pop
call
push
cld
and
jbe
cmps
call
shl
push
inc
jl
rcr
fnsave
in
aaa
cli
push
loop
std
pop
jae
xor
add
mov
js
pop
retf
ffreep
adc
and
pop
add
mov
fidivr
mov
mov
push
or
push
mov
lahf
push
test
lea
jae
fstp
pop
cmps
adc
test
lods
in
imul
shl
fidivr
and
and
cmc
inc
cmp
hlt
add
sub
xchg
outs
and
inc
push
dec
clc
aam
sub
outs
arpl
push
scas
aaa
pop
and
bound
add
cmp
sbb
ret
sub
inc
lods
inc
adc
pop
pushf
inc
xor
imul
mov
mov
lock
sti
dec
cmps
or
rcl
gs
xlat
inc
cli
outs
jae
loope
lods
push
cli
hlt
lods
sbb
mov
fwait
jmp
or
into
xchg
and
adc
and
in
clc
das
sub
dec
aas
stc
loopne
mov
or
jno
imul
push
mov
popa
and
inc
mov
mov
inc
or
adc
fs
mov
fdiv
ret
mov
mov
inc
(bad)
xor
jecxz
ret
repnz
cmp
and
int
mov
fs
xchg
fwait
cs
cmp
adc
sub
popf
clc
popf
sub
inc
fist
std
stos
and
and
mov
jmp
ds
adc
cmp
mov
sbb
inc
(bad)
repz
add
xor
test
popa
cwde
and
push
xchg
out
cmp
pop
cmp
push
cmp
lods
sub
outs
dec
xchg
mov
aam
mov
adc
sbb
call
mov
lock
jg
ins
aam
mov
cmp
loopne
repz
adc
sub
or
ins
push
inc
repnz
xor
ss
pop
es
sbb
mov
dec
sub
out
and
jecxz
jmp
pop
xlat
packssdw
movd
push
les
hlt
jmp
inc
call
addr16
mov
stos
cmp
xchg
xchg
icebp
cmp
rcr
(bad)
sub
dec
xor
mov
popa
ret
jne
add
movs
popf
(bad)
sub
shr
xchg
into
and
jl
xchg
mov
shl
cmp
jp
es
push
ret
push
aas
mov
ficom
mov
xchg
jge
and
outs
fcmovb
xchg
(bad)
pop
xchg
add
(bad)
in
not
push
mov
fxch
and
rol
xor
jecxz
jmp
inc
cmc
pop
cmps
mov
jno
rol
sbb
mov
(bad)
mov
mov
int3
jg
out
add
into
pop
cdq
icebp
sti
or
pusha
adc
and
jmp
leave
xchg
test
aam
in
push
je
push
cmp
adc
cli
mov
xchg
mov
cmp
xchg
sar
mov
test
retf
aas
xlat
sbb
or
ret
dec
or
mov
cmp
push
xchg
mov
movs
jns
cmp
jecxz
lods
imul
test
push
and
mov
pop
movs
rcr
jecxz
cmp
dec
dec
lods
jbe
cdq
fldcw
push
fcom
in
pop
outs
in
imul
ins
ds
push
les
mov
aam
js
sub
mov
fs
dec
jmp
add
mov
into
(bad)
sub
xor
cmp
adc
jmp
and
es
add
mov
and
adc
xchg
dec
bound
push
imul
fild
sub
or
mov
sbb
mov
ror
ret
sbb
mov
icebp
xchg
jge
std
mov
fldenv
jecxz
(bad)
icebp
dec
jne
jp
fnstsw
int3
cmp
cmp
push
inc
add
cmps
mov
mov
xor
xor
mov
js
and
jno
or
retf
ja
pop
xor
cmp
push
mov
cmp
push
sahf
ror
sbb
fimul
xor
cmp
xlat
call
push
jle
mov
xchg
out
jae
lods
call
or
call
mov
imul
push
scas
ret
xor
sbb
adc
or
xchg
pop
popa
shr
iret
in
inc
pop
sbb
iret
retf
push
pushf
sbb
gs
xor
test
adc
xchg
pop
pushf
mov
fstp
sub
jns
add
jbe
pop
lock
in
jecxz
adc
inc
pop
push
movs
pop
inc
push
cmp
inc
pushf
pop
jp
adc
mov
mov
sbb
cmp
loop
out
jmp
or
add
sbb
rcr
and
repnz
xchg
inc
sbb
fist
(bad)
cmp
call
inc
retf
dec
repnz
pop
mov
adc
in
call
jae
inc
mov
test
sbb
jns
not
jle
pop
mov
fist
daa
fnstenv
jmp
pop
mov
xor
mov
pushf
lea
push
pop
retf
ins
xchg
pushf
cmc
fldenv
rcl
mov
inc
mov
push
jl
jg
test
jnp
jnp
ficom
sub
(bad)
dec
neg
sub
mov
repnz
cli
jmp
mov
cmp
push
aaa
sbb
pop
xchg
jg
scas
inc
dec
fnstsw
push
rcl
xchg
sub
pop
rcr
lds
iret
imul
add
in
add
xor
adc
adc
inc
enter
push
mov
fld
xor
les
mov
stc
sbb
cmp
add
pop
cmp
in
mov
add
mov
cmp
mov
cwde
mov
mov
pushf
in
pop
stc
jae
sub
mov
add
sbb
es
xor
xchg
sbb
es
repz
scas
data16
addr16
push
and
jmp
iret
call
jne
jmp
jmp
shl
mov
(bad)
add
retf
sub
xchg
(bad)
push
loope
mov
adc
mov
mov
in
fldenv
pop
jno
jmp
test
mov
sub
xchg
pop
xchg
pushf
aas
adc
arpl
inc
jo
mov
xor
push
push
sbb
nop
push
pusha
push
sar
stc
mov
js
pop
mov
dec
sbb
xor
and
repnz
addr16
sub
sbb
push
pop
cmp
enter
std
xor
or
lods
(bad)
pusha
sbb
push
adc
mov
loope
loopne
mov
and
add
pop
stc
popf
ss
mov
xor
daa
and
push
pop
pop
cmp
sbb
adc
out
shr
jecxz
mov
retf
inc
inc
jne
xor
ins
lods
loop
fisttp
add
inc
and
xlat
inc
sbb
mov
xchg
pop
ficomp
in
mov
aas
stc
add
imul
pop
rcr
sub
inc
jns
jb
in
xchg
mov
lods
or
inc
jl
xchg
add
pop
mov
(bad)
out
xchg
clc
xchg
add
xchg
or
jnp
dec
fcomip
sbb
mov
adc
mov
push
add
ds
movs
test
or
mov
icebp
in
mov
add
inc
jge
ficom
stos
mov
das
in
and
cmp
arpl
out
ror
sbb
movs
aas
adc
popa
sar
arpl
iret
(bad)
outs
jb
add
cmps
dec
fwait
mov
cs
(bad)
cmp
xor
add
loope
sbb
cmp
test
retf
pop
mov
nop
mov
xchg
aas
mov
ret
fisubr
rol
sub
mov
shl
retw
add
nop
xchg
daa
lods
rol
js
add
inc
mov
jbe
je
stc
movs
rol
pop
pop
and
push
bound
in
ss
pop
scas
cmp
jnp
push
test
bound
in
push
out
pop
xor
mov
dec
inc
jl
xchg
es
out
mov
rcl
xchg
clc
scas
icebp
mov
mov
ret
push
cmp
mov
mov
sbb
sahf
inc
inc
xor
mov
jmp
cdq
mov
or
xor
aam
pop
pmaxsw
jns
je
scas
ja
pop
pop
stc
dec
ret
jno
sub
or
push
push
mov
stc
pop
mov
ficom
pop
and
mov
jle
or
mov
xchg
je
aad
outs
lods
dec
jnp
pop
je
(bad)
(bad)
sahf
retf
in
loopne
cmp
xor
cmp
mov
(bad)
pop
mov
(bad)
xchg
sbb
push
pop
movs
ins
or
aam
mov
jg
repnz
push
xchg
fstp
pop
mov
movs
add
dec
xchg
cli
xor
lds
jne
cmp
ins
(bad)
mov
(bad)
adc
in
dec
jg
xor
push
fistp
xor
pop
jecxz
rol
push
or
popa
adc
scas
cmp
add
push
lock
mov
ror
nop
fldcw
sti
cmp
mov
dec
mov
fxsave
mov
inc
mov
jnp
dec
movs
jbe
daa
jo
sbb
popf
shr
or
(bad)
xor
add
add
sbb
scas
daa
add
sbb
add
sbb
dec
push
mov
adc
dec
inc
sub
stc
mov
mov
lock
xchg
dec
dec
stos
jmp
dec
pop
inc
fiadd
xchg
rol
retf
add
or
shr
popa
jmp
stc
sub
xlat
sbb
jb
adc
in
jecxz
loopne
cld
pop
dec
leave
pop
mov
sbb
sub
cmp
or
inc
fild
lock
mov
jno
inc
std
or
inc
dec
test
and
push
bound
mov
and
sbb
jge
and
stos
push
movs
test
(bad)
retf
fwait
jns
xchg
pop
rcl
(bad)
iret
test
icebp
mov
sub
sub
fcom
or
xchg
daa
add
and
or
fist
bound
sbb
(bad)
sbb
pop
fisubr
or
xor
(bad)
cmp
pop
sar
ds
and
cwde
scas
and
or
dec
xchg
and
movs
mov
or
add
inc
js
sbb
lahf
inc
jle
aaa
xchg
(bad)
mov
cs
fistp
cmps
adc
sub
cwde
push
jb
pushf
cmp
movs
mov
in
fs
mov
jg
jmp
fcmovbe
movs
les
test
sbb
dec
aas
retf
loop
push
repz
pop
addr16
add
adc
jmp
mov
jle
(bad)
cmp
push
jg
dec
xchg
(bad)
jns
ret
addr16
lods
aad
movs
mov
inc
push
sahf
and
das
add
ret
inc
sub
mov
cld
adc
mov
cmovle
call
daa
retf
ja
imul
jns
dec
inc
xor
or
cli
cmp
jne
add
(bad)
sar
push
pop
push
jecxz
pop
pop
fwait
int
mov
adc
and
dec
mov
mov
inc
(bad)
jg
push
icebp
or
adc
iret
mov
mov
mov
dec
movs
loope
mov
pop
xor
fisub
sti
sbb
xchg
mov
imul
sbb
js
idiv
mov
(bad)
fiadd
xlat
xlat
scas
jp
adc
fisubr
arpl
or
aam
call
stos
dec
shl
xlat
xor
or
fnstsw
add
jae
adc
dec
inc
sahf
and
add
bound
or
gs
mov
lds
in
xchg
pop
cld
sub
adc
xchg
popa
bound
mov
sub
and
mov
fisttp
mov
dec
jmp
mov
test
adc
out
mov
daa
hlt
and
jno
jp
adc
jne
and
in
adc
movs
out
sti
push
inc
xor
outs
sahf
das
or
mov
adc
enter
push
in
test
cmps
cmp
xchg
pxor
add
inc
loopne
lods
fs
scas
pop
or
add
inc
pushf
cmp
(bad)
test
test
dec
scas
cmp
ret
lods
addr16
popf
aaa
call
call
push
addr16
lods
push
fcomp
fsubr
add
pop
xchg
out
iret
in
imul
dec
jge
out
mov
(bad)
mov
mov
sub
mov
xor
movs
jmp
scas
dec
or
push
aam
ins
mov
mov
sbb
mov
shr
cli
jge
jecxz
pop
rcl
cmps
dec
pop
sub
and
aad
mov
je
ret
jmp
pop
mov
xlat
rcr
arpl
jg
or
stc
cs
je
in
fsubr
ret
stos
clc
shl
push
add
jb
jmp
pusha
stos
sub
sti
movs
outs
ss
mov
sahf
daa
dec
ja
vminsd
xor
repnz
push
movs
cmp
cmps
call
jmp
test
icebp
push
sub
je
push
mov
inc
adc
jmp
push
adc
test
inc
jo
imul
and
and
aaa
xchg
les
int
sub
ret
sub
or
jo
push
or
rol
and
lea
gs
mov
cmp
stos
repnz
jmp
loopne
pop
sub
scas
adc
in
or
and
imul
xor
push
daa
sahf
scas
movs
mov
sbb
popa
adc
mov
mov
retf
xchg
xchg
xor
popa
mov
sbb
in
mov
mov
mov
cmp
stc
cmp
sub
std
inc
adc
cmp
ins
loop
(bad)
hlt
push
loop
xchg
std
pop
inc
and
repnz
cli
jae
push
lods
rol
loope
shl
cli
test
leave
(bad)
pop
sete
mov
adc
mov
das
mov
iret
fiadd
or
push
push
sbb
jp
or
push
mov
fstp
hlt
push
loope
push
mov
sar
or
out
dec
movs
jbe
push
in
and
stc
cmp
and
lods
out
xor
(bad)
dec
iret
or
jecxz
fadd
and
ins
std
(bad)
div
xor
adc
mov
std
xor
fwait
mov
dec
js
ror
mov
and
fdivr
in
dec
mov
add
push
cmp
stos
push
clc
or
icebp
ins
mov
std
jnp
mov
mov
jno
jmp
push
(bad)
pop
ficom
pop
popf
mov
nop
dec
enter
xor
xor
ja
mov
or
xor
inc
push
movs
xchg
movs
push
ror
in
outs
dec
stos
xor
mov
jge
aad
gs
call
sahf
js
cmp
xchg
ss
mov
add
inc
mov
xchg
test
ja
xchg
stc
add
xchg
imul
push
mov
lock
shr
scas
cmp
cmp
xlat
xor
sbb
and
xchg
and
int
xor
push
xor
jbe
sbb
ins
add
daa
arpl
or
lods
jmp
xchg
push
sbb
enter
aaa
imul
inc
pushf
dec
mov
sub
cmp
xor
sbb
popf
aad
push
inc
call
inc
mov
jne
and
cmp
fbstp
mov
(bad)
sti
movs
div
(bad)
sbb
or
cmp
push
mov
inc
xor
lea
mov
mov
sbb
jle
ret
shl
mov
icebp
out
mov
xchg
push
xor
sub
adc
mov
enter
repnz
push
cmp
test
fisttp
mov
pop
dec
(bad)
mov
jns
lds
clc
imul
add
or
pop
and
mov
mov
mov
push
cs
(bad)
idiv
in
ja
push
pop
xchg
sub
xchg
leave
sub
hlt
xchg
(bad)
mov
push
push
clc
sbb
ja
or
rcr
cmp
cmp
(bad)
xor
and
pusha
aad
das
cdq
cli
arpl
jp
push
inc
outs
arpl
and
int
cmp
ror
daa
add
mov
dec
or
adc
cmp
aad
push
jmp
fnsave
fnstenv
pop
cld
xchg
les
mov
pop
nop
mov
push
xlat
(bad)
pop
xchg
xchg
test
lea
inc
xchg
iret
popf
movs
sti
mov
dec
(bad)
add
sub
add
pop
mov
out
mov
retf
(bad)
lea
shl
xchg
ss
xlat
push
test
or
add
loop
add
cmp
jmp
cmp
imul
and
(bad)
imul
or
addr16
mov
sub
lds
or
stos
xor
add
enter
mov
(bad)
cmps
rcl
and
or
pop
jb
cmp
pop
push
repz
shl
loopne
je
push
xchg
or
lea
mov
mov
inc
es
cs
jo
mov
mov
loopne
add
jae
in
ins
xor
xchg
sbb
neg
jmp
dec
xchg
mov
lods
enter
jbe
(bad)
ds
mov
mov
dec
call
outs
pop
bound
or
retf
xor
push
mov
imul
mov
inc
mov
outs
mov
lods
(bad)
dec
jae
test
loopne
sbb
icebp
add
div
jo
test
cmps
lea
mov
bswap
or
xlat
add
and
cmp
in
mov
mov
in
cmp
jecxz
in
test
and
in
xchg
cmps
fsubr
push
sub
clc
adc
jo
repnz
sub
or
mov
call
es
mov
adc
ins
les
adc
rcr
mov
dec
(bad)
shl
dec
outs
fwait
loopne
adc
test
sbb
jnp
mov
fwait
dec
mov
mov
iret
add
bound
adc
hlt
lods
pop
add
pop
pop
jno
adc
(bad)
je
lds
jl
mov
mov
add
xchg
mov
(bad)
mov
xor
xlat
sahf
cmp
sub
mov
push
sar
jbe
sar
add
bnd
pop
jbe
imul
addr16
or
fst
mov
mov
fs
push
add
and
outs
bts
stc
jnp
retf
dec
adc
pop
ins
adc
cmp
cmp
sbb
int
fisttp
or
lea
jne
push
add
xchg
sub
push
cmp
pop
push
sub
jmp
test
test
js
add
dec
imul
adc
adc
pop
cmps
daa
sub
sahf
ins
sub
int3
and
push
dec
jb
daa
cmp
daa
test
mov
jle
mov
or
js
int
push
out
in
mov
ss
add
dec
xchg
cmps
and
inc
hlt
mov
pop
fdiv
xchg
ds
cmp
sub
(bad)
push
mov
hlt
std
mov
jnp
push
mov
cmp
xor
test
in
pop
xor
dec
jns
push
sub
in
call
pop
mov
stc
stc
(bad)
fadd
dec
lds
sub
outs
arpl
pusha
out
out
in
mov
push
dec
(bad)
mov
data16
and
jl
xor
pop
pop
inc
inc
rcl
and
test
or
or
bound
xor
outs
fwait
dec
test
aam
and
and
sbb
ss
mov
fwait
jno
jmp
rcr
inc
pop
push
pop
in
out
push
jnp
pop
fadd
mov
cmp
xchg
xor
cmc
jge
jae
jb
jno
imul
aam
out
clc
sahf
dec
fninit
gs
fadd
mov
ret
add
cmc
je
ror
mov
push
mov
mov
jl
cmc
fadd
xchg
cmp
add
adc
popa
mov
cmc
pop
lds
fld
fst
aaa
popf
out
lahf
popf
sub
or
rep
push
bound
fs
ins
mov
push
(bad)
sar
in
sub
adc
(bad)
cwde
or
jb
iret
fild
and
hlt
pushf
ss
jb
jnp
ins
sbb
push
mov
xor
mov
ja
jno
push
jno
pop
mov
jge
test
js
mov
or
inc
sub
mov
dec
or
sub
clc
cmp
cmps
pop
(bad)
call
mov
pop
push
into
or
shr
cmp
ss
mov
push
scas
mul
xchg
sub
outs
adc
lods
aaa
daa
adc
fldcw
jg
mov
nop
jg
or
xlat
push
sub
cmp
je
nop
sbb
or
outs
bound
int
push
push
cmp
stos
adc
test
adc
out
sbb
or
push
ss
aam
dec
add
and
lahf
jns
(bad)
mov
mov
shl
or
repz
or
cmp
sbb
sar
xchg
mov
and
sub
repz
ja
je
rcr
add
xlat
loopne
fisttp
mov
outs
and
or
push
scas
fcomp
(bad)
(bad)
mov
or
mov
rcl
outs
cmp
cs
or
repz
cmp
or
scas
outs
mov
loopne
xchg
and
add
mov
sub
fst
push
pusha
dec
mov
xor
imul
sub
dec
popa
into
push
jge
adc
stc
xchg
jne
or
shl
hlt
and
push
xor
int
idiv
cmp
jmp
retf
into
jo
mov
sub
jmp
add
inc
or
hlt
into
jno
mov
add
mov
cmp
(bad)
out
xchg
lahf
push
popf
arpl
or
inc
mov
mov
jo
and
inc
adc
mov
xchg
pop
ss
scas
lods
jns
cld
aas
imul
cmps
cmp
je
call
pop
fwait
push
popa
in
push
adc
xor
dec
sti
jmp
xor
or
xchg
add
cmps
les
(bad)
shl
xor
jne
nop
(bad)
ret
outs
icebp
and
mov
inc
test
les
and
loopne
shr
jb
pusha
push
and
mov
add
data16
xchg
fwait
pop
lods
inc
sub
ins
lods
lods
js
ret
xor
popa
add
pop
inc
mov
mov
in
jl
arpl
inc
mov
call
test
lds
xor
jns
jge
ret
jo
aad
push
and
mov
xchg
xor
int3
mov
mov
ins
stos
rcl
or
xchg
xor
shl
shl
push
xor
add
push
push
jmp
jg
arpl
int3
pop
dec
in
xor
cmp
inc
push
mov
les
in
push
mov
sub
sbb
cmp
lods
sbb
jge
dec
cmp
fcmovu
(bad)
movs
leave
push
out
or
call
mov
dec
xchg
mov
dec
inc
shr
test
or
and
std
js
mov
push
aas
and
xor
test
sub
dec
sub
movs
ret
hlt
retf
aad
push
fisttp
xchg
mov
into
lods
jae
(bad)
ja
dec
fisub
push
and
ins
mov
std
jle
add
add
mov
dec
mov
lds
sar
sbb
gs
sub
fild
fdivr
not
cmp
popf
or
mov
xor
cmps
call
in
frstor
push
(bad)
test
cld
(bad)
out
cmp
shl
and
dec
mov
and
loope
nop
fs
adc
fadd
stos
or
mov
addr16
and
stos
add
cli
retf
(bad)
enter
pop
mov
jmp
xor
outs
jp
fcmovnbe
sbb
jge
mov
(bad)
imul
xor
sub
leave
mov
pop
imul
stos
adc
pop
inc
bound
nop
dec
imul
jo
xchg
xchg
std
std
push
gs
sbb
imul
aam
sub
push
cli
or
xchg
pop
cmp
jge
adc
push
push
sbb
adc
arpl
out
ja
int
and
(bad)
adc
fistp
mov
inc
movs
leave
and
pop
adc
ins
xchg
push
rol
(bad)
in
nop
cmp
lock
xor
xchg
test
push
mov
leave
jae
xor
int
mov
sar
adc
dec
stc
enter
jnp
fwait
jmp
out
add
call
loop
push
and
sub
inc
mov
sbb
lahf
jle
jo
jnp
mov
int3
jle
fldcw
cli
retf
outs
jo
xor
inc
mov
ret
lods
pop
and
test
xchg
mov
test
and
mov
(bad)
or
jmp
sbb
jae
jge
pop
clc
iret
xchg
cmps
cwde
push
push
adc
adc
in
fisttp
gs
dec
lea
jne
mov
mov
cdq
sub
dec
cmp
pushf
loop
jp
cmp
xchg
adc
adc
ins
and
std
xchg
add
std
or
in
fadd
sub
movs
shl
jmp
xchg
push
add
(bad)
outs
in
mov
imul
ret
js
inc
cmps
mov
add
pop
sbb
in
adc
pop
push
es
stc
bound
sub
loop
mov
sub
dec
neg
test
cld
push
imul
mov
cmp
fnclex
popf
cmp
dec
cmps
xchg
dec
(bad)
mov
inc
rcl
es
adc
repnz
sub
sbb
mov
jmp
mov
movs
in
mov
inc
mov
adc
xor
push
shl
(bad)
hlt
aad
jl
inc
popf
ja
jecxz
(bad)
rcr
or
outs
movaps
das
pop
icebp
(bad)
in
lock
iret
adc
frstor
push
mov
or
xor
fidiv
ja
sub
(bad)
enter
sbb
stc
push
enter
sbb
mov
xor
cmps
adc
pop
push
movs
mov
call
sar
int3
leave
cmp
cwde
mov
and
stos
pusha
inc
fst
push
les
and
movs
push
loopne
and
push
cmps
fimul
sbb
(bad)
jmp
mov
xor
nop
add
rcr
xor
popf
(bad)
fsub
sbb
(bad)
push
sub
es
aas
jnp
jno
movs
mov
and
and
mov
add
jb
clc
ins
jl
out
aam
(bad)
jmp
add
cld
(bad)
push
ins
bound
sti
and
sahf
adc
sub
dec
hlt
mov
cli
cs
mov
jg
jle
pop
stos
(bad)
mov
mov
xchg
dec
repnz
loopne
sbb
es
cmp
cli
add
cwde
push
mov
mov
lds
mov
inc
loope
retf
or
rcr
pop
pop
inc
les
add
jg
fstp
push
mov
not
(bad)
test
outs
sub
ja
out
aad
ret
cmp
jne
sub
jmp
push
loopne
or
cmp
adc
ret
int3
retf
idiv
repnz
add
fstp
ss
aas
mov
or
pop
dec
imul
inc
and
adc
lahf
popa
cmp
scas
mov
mov
cwde
jmp
pop
dec
xchg
add
sti
cmp
das
test
mov
inc
jo
sub
mov
arpl
stos
aas
mov
fs
jnp
cwde
mov
pusha
mov
shl
sbb
push
addr16
mov
enter
inc
xor
outs
sahf
jle
in
inc
fstp
cmp
adc
leave
inc
outs
sbb
lahf
popa
mov
add
ret
lods
lods
xchg
fst
aas
jge
clc
ins
push
jb
or
and
cwde
mov
sub
enter
les
mov
xchg
xchg
push
pop
in
inc
cmps
mov
add
pop
adc
daa
mov
loop
dec
sub
dec
fs
dec
scas
or
xchg
or
cmp
cmp
loope
cwde
or
int3
lahf
mov
jmp
push
cmp
or
or
push
pusha
test
in
test
pushf
sti
sbb
loopne
dec
jp
cmp
fst
jle
sub
fcomp
xchg
jbe
mov
cmp
(bad)
mov
test
icebp
jo
adc
mov
nop
into
mov
cmp
sbb
mov
xor
push
inc
sbb
clc
sbb
adc
sub
enter
scas
jmp
stc
sub
aaa
add
pop
xchg
mov
outs
aam
inc
bound
icebp
aam
inc
sub
or
popf
lods
hlt
or
icebp
pusha
in
adc
lods
ret
ds
pop
popa
jno
lods
jp
cld
xchg
jns
push
sbb
mov
xor
repz
jae
popa
std
jge
ret
imul
sbb
adc
stos
pusha
icebp
cld
mov
enter
xor
int3
cwde
ror
sbb
add
nop
xchg
loop
mov
jae
mov
xchg
inc
fisub
outs
fidiv
sub
mov
and
cmp
push
adc
jp
sbb
cmp
cmp
pop
jne
out
dec
leave
rcr
or
clc
sub
xor
shl
bound
ds
jle
dec
sbb
cmc
push
dec
les
or
mov
xor
and
ss
push
je
mov
lods
pop
lea
clc
loop
pusha
in
lea
out
into
aad
pushw
inc
(bad)
push
dec
push
and
rcl
ins
sbb
cmps
sbb
xchg
mov
sbb
push
dec
mov
add
loopne
cmps
xchg
inc
inc
(bad)
sub
fs
pushf
push
or
xor
fmul
cmps
scas
imul
mov
mov
in
shr
mov
push
or
push
inc
cmp
sbb
inc
fs
inc
dec
js
mov
adc
(bad)
xchg
pop
xchg
cmp
mov
sub
and
dec
lods
retf
sub
mov
adc
adc
jmp
mov
dec
fisub
iret
push
out
pop
add
test
mov
mov
or
out
push
arpl
adc
cmp
xchg
or
ja
xchg
je
adc
adc
and
jl
pop
iret
mov
mov
mov
sub
mov
mov
sar
dec
out
sar
jmp
outs
add
ror
push
pop
or
pop
dec
mov
mov
ss
(bad)
jge
pmulhuw
sbb
cwde
pop
adc
or
jbe
inc
repz
stos
dec
add
shl
jg
sub
clc
mov
jmp
mov
lods
pop
(bad)
icebp
retf
(bad)
jmp
js
fiadd
repnz
fucom
sub
sbb
lahf
enter
(bad)
shl
and
ficomp
cmc
imul
fiadd
mov
dec
inc
imul
es
enter
sbb
loope
ret
stos
sbb
repz
add
mul
push
je
jecxz
call
stos
cmps
bsr
cmp
mov
aas
or
sub
cwde
dec
lds
mov
jmp
outs
push
cmp
std
(bad)
movs
shr
dec
mov
cmp
iret
lahf
push
popa
mov
and
xchg
jb
arpl
cmps
and
push
aaa
inc
push
adc
cli
fwait
jb
dec
js
add
out
ins
fcom
xor
adc
cmp
ret
mov
out
jae
imul
adc
das
mov
mov
mov
scas
jp
mov
sub
push
scas
pop
ins
popf
fdivrp
int
sahf
retf
mov
pop
repz
(bad)
xchg
loopne
out
ret
jb
nop
leave
out
and
xchg
bound
add
fstp
mov
les
xlat
sub
ss
push
jg
adc
call
mov
ins
mov
call
push
or
stos
int
std
cld
mov
dec
and
lock
pop
fs
dec
xchg
push
xchg
aas
stc
jl
out
mov
ja
popf
(bad)
pop
pop
sbb
adc
mov
sbb
aas
(bad)
mov
xor
fbstp
(bad)
xor
cmp
int
push
pop
mov
aad
out
(bad)
xor
add
ins
sub
retf
aam
mov
pop
mov
fsubr
pusha
enter
dec
btc
push
push
repz
mov
push
mov
xchg
ja
sub
(bad)
cmc
jl
jno
push
icebp
scas
out
xchg
fidiv
cmp
xchg
or
lods
cmp
(bad)
push
inc
mov
cmps
or
xor
addr16
mov
mov
in
int
imul
add
push
add
adc
leave
test
dec
push
adc
push
or
sbb
sbb
mov
fist
sbb
outs
rcr
lds
or
adc
dec
mov
cmp
xchg
inc
pop
movs
loop
imul
xchg
xchg
mov
movs
push
pop
retf
ds
sub
pop
in
cli
jne
add
je
pop
fisubr
dec
cmp
cmps
inc
xchg
test
cmp
fwait
pop
sub
xchg
mov
test
ret
lahf
loope
movs
pusha
inc
fimul
ds
popa
inc
jmp
inc
push
cmp
sub
and
jbe
jle
xchg
sti
rcl
dec
cmp
ins
mov
push
mov
sbb
icebp
jle
mov
fild
mov
pop
test
mov
lds
push
mov
adc
mov
adc
mov
fimul
dec
sub
push
rcl
imul
movs
out
pop
ss
icebp
xor
lahf
cmc
rol
push
mov
pop
ds
retf
push
xchg
call
into
mov
leave
jno
dec
shl
retf
jnp
mov
imul
dec
ja
xchg
scas
push
adc
in
pop
pop
fwait
sbb
cdq
xor
ins
sar
mov
jge
pop
add
enter
mov
aaa
(bad)
jbe
inc
cmp
mov
fistp
jb
ror
movs
pusha
jle
push
mov
inc
sub
sub
sbb
pushf
imul
nop
retf
sub
xchg
test
xor
dec
ror
cmp
scas
loopne
dec
pop
ins
cmps
ins
dec
pop
cmp
push
mov
frstor
push
or
jae
lds
pusha
cmps
not
jp
mov
loop
dec
cmps
pop
and
jmp
enter
mov
adc
daa
or
add
loop
imul
clc
retf
pop
cmp
sbb
inc
mov
ins
pop
mov
mov
mov
scas
xchg
ins
out
aam
in
fcom
mov
jg
jmp
pop
pop
pop
daa
cmps
or
xchg
dec
push
rol
sbb
mul
jnp
arpl
inc
call
cli
push
push
or
add
gs
cmc
add
inc
call
repz
stc
push
xchg
iret
std
lods
jae
stos
pusha
jecxz
jp
pusha
repnz
retf
dec
or
mov
test
mov
rcl
xor
inc
mov
pop
xchg
jmp
(bad)
jno
out
call
out
or
outs
je
das
fcmove
leave
pop
mov
fcomip
xchg
cli
xor
outs
and
mov
push
in
push
in
inc
add
cmp
sar
jbe
mov
into
xor
push
and
rcl
jl
pop
mov
ret
sbb
aad
mov
inc
mov
xor
pop
cmp
imul
mov
rcr
adc
stos
pop
mov
adc
mov
lods
jmp
cmp
add
ffree
rcr
(bad)
aas
call
inc
lds
xchg
pop
mov
sbb
test
test
mov
stc
cli
es
pop
jle
mov
pop
cmp
sbb
cwde
fdivr
jmp
push
dec
adc
push
add
addr16
adc
aas
sub
cdq
outs
sti
and
retf
pop
mov
inc
bswap
mov
mov
mov
je
jns
call
adc
cmp
cmp
push
retf
out
neg
inc
xchg
std
lods
add
mov
ss
enter
mov
jns
into
lods
sub
rcr
loop
inc
xor
and
and
jge
mov
leave
in
push
mov
aad
push
hlt
sub
inc
or
add
stos
xchg
shl
loop
mov
loop
xor
nop
dec
mov
aad
jbe
cmp
xor
repnz
stc
push
adc
inc
mov
(bad)
(bad)
idiv
fcomp
int3
arpl
imul
addr16
scas
and
pop
out
inc
push
pop
ret
loop
iret
jb
je
inc
movs
leave
dec
jge
mov
icebp
pusha
and
hlt
out
push
inc
pop
adc
int3
or
and
jle
inc
or
test
or
shl
jp
pop
mov
or
cmp
call
cmp
sub
xchg
sub
xlat
aaa
mov
rol
jne
call
loope
icebp
jns
inc
repnz
push
cmps
xchg
stos
movs
jb
inc
push
aaa
push
in
test
imul
daa
adc
pop
pop
test
push
sub
dec
cmp
inc
jb
sahf
mov
fs
adc
jl
aad
jae
add
sub
adc
idiv
xor
pushf
mov
imul
shl
(bad)
push
mov
xchg
jl
and
enter
jecxz
mov
js
adc
inc
adc
xchg
jmp
sub
pop
aaa
retf
fwait
xor
xor
dec
xor
test
ffree
bound
xchg
call
mov
sbb
push
mov
add
xlat
inc
mov
in
and
shl
in
mov
fdiv
xchg
out
cdq
xor
cwde
sbb
cmps
arpl
inc
lea
xchg
xchg
and
adc
int3
hlt
adc
test
dec
jne
mov
mov
fwait
cmc
loopne
or
mov
popf
inc
jle
out
and
mov
out
or
aad
lods
repnz
fs
jne
or
jmp
push
cli
stos
movs
inc
push
jmp
shl
sbb
stos
push
fiadd
aad
add
popf
clc
xlat
jg
mov
(bad)
cmp
sbb
aad
and
stos
leave
out
aas
sbb
inc
xchg
mov
sbb
out
mov
daa
jg
inc
xor
dec
ins
push
mov
call
push
mov
inc
adc
add
dec
xor
aad
mov
push
jg
mov
add
cmps
sub
lods
loop
fsubr
aad
pop
enter
mov
sahf
push
push
(bad)
cwde
dec
jb
dec
aam
call
jns
aad
loope
cmp
(bad)
into
xchg
push
in
cmps
jo
xchg
cs
ja
mov
and
xor
cmps
(bad)
cli
inc
add
out
scas
imul
aam
pop
pop
xchg
ss
hlt
jo
cs
xor
jmp
mov
pop
adc
ret
or
cmps
pop
mov
push
mov
cmc
stos
enter
in
add
hlt
and
ins
jbe
xor
shl
movsx
outs
dec
daa
add
movs
xor
out
mov
(bad)
mov
mov
push
aad
ror
inc
fild
cmp
aad
fnsave
aam
lods
std
pop
push
sbb
imul
fidivr
inc
add
es
mov
or
xor
adc
cdq
and
aas
sbb
adc
push
pop
xor
test
clc
mov
sub
or
ret
loope
pop
scas
out
add
inc
jnp
les
in
mov
xchg
mov
jl
dec
gs
(bad)
add
ds
loopne
mov
rol
jmp
pop
xchg
mov
js
push
retf
dec
adc
cs
outs
mov
xchg
aad
(bad)
xchg
imul
jle
iret
mov
stc
jne
add
stos
fs
mov
pop
adc
in
fwait
(bad)
icebp
or
outs
add
push
mov
push
mov
or
or
repz
cdq
into
add
mov
sar
pusha
out
ret
daa
mov
cmp
ja
mov
push
in
xor
pushf
jbe
gs
mov
inc
add
int3
push
cmp
sub
mov
dec
or
dec
sbb
adc
jno
push
mov
repz
enter
or
mov
cmp
pop
mov
sti
not
cdq
sbb
fidivr
and
adc
or
xchg
enter
imul
xor
stos
(bad)
mov
mov
mov
lods
adc
js
push
lods
cmp
mov
mov
add
das
pop
ins
jmp
(bad)
pop
push
pop
leave
ficomp
add
out
fistp
nop
jns
cld
test
fsub
gs
jbe
loop
jno
in
mov
add
rep
pushf
fs
sbb
sub
call
and
xor
dec
or
lock
sub
jno
pop
pop
dec
repnz
xor
push
pusha
mov
push
inc
inc
mov
dec
leave
clc
cmp
push
and
fidivr
push
shl
(bad)
push
cmp
mov
sar
mov
cld
sbb
stos
inc
pop
cmp
inc
sbb
cli
pop
fwait
bound
and
clc
out
imul
jl
push
adc
jmp
(bad)
sub
(bad)
ret
ins
icebp
rcl
mov
jl
aas
cdq
jge
fadd
mov
int
or
call
cmovbe
sbb
or
jmp
push
sub
cmp
or
fdivr
sub
iret
mov
je
iret
pop
cli
push
aad
and
xchg
outs
(bad)
sub
or
fdivr
loop
enter
cmp
cmc
mov
jmp
and
js
fucomip
aaa
cmp
test
jb
test
lods
and
mov
retf
push
mov
xor
mov
mov
inc
fstp
sbb
cmp
fbld
cwde
aam
mov
jle
ja
js
test
sub
xor
cmc
and
sahf
repnz
or
fnsave
out
jmp
sub
cmp
xor
xor
push
icebp
mov
inc
cli
or
test
repz
(bad)
fld
cld
repnz
rcr
dec
push
lock
ret
das
imul
pop
shl
ret
jp
sar
(bad)
out
sub
push
mov
mov
out
mov
(bad)
xchg
mov
call
push
(bad)
ja
pop
out
lea
in
fmul
(bad)
in
xor
movs
data16
fs
test
jle
and
out
xor
bound
fmulp
xchg
inc
rol
add
les
mov
push
inc
sar
cs
mov
sub
sub
mov
ror
sti
ins
stos
sub
push
xchg
aam
sub
cwde
jbe
mov
icebp
pop
stos
add
leave
pop
in
sbb
retf
mov
jno
mov
fbld
xchg
mov
cld
jmp
ds
cmp
mov
push
fisub
fisub
call
(bad)
fs
loop
add
mov
shl
dec
mov
pushf
stos
fcom
sbb
jo
sub
xor
inc
push
mov
xchg
rol
std
add
daa
icebp
xchg
dec
jne
jb
fwait
or
jns
ret
mov
mov
add
out
mov
pop
xor
inc
xchg
cdq
cmps
mov
cmp
cmovge
mov
inc
add
mov
(bad)
mov
xor
xchg
dec
jne
repz
ins
jae
xchg
pop
and
arpl
stos
jo
sub
(bad)
fimul
dec
aaa
in
jno
test
movs
pop
add
inc
inc
mov
enter
and
popa
adc
jg
jno
js
xchg
aaa
nop
mov
cmp
call
mov
arpl
adc
cmps
adc
push
mov
mov
xchg
retf
mov
cmp
push
movs
or
enter
jmp
xor
cwde
ficomp
pop
(bad)
aad
cmc
adc
(bad)
fisttp
repz
or
pop
cdq
push
cld
lods
xor
dec
dec
fs
movs
dec
rcr
jl
mov
outs
rcl
int
shl
and
and
std
inc
cmp
inc
xor
les
or
inc
xlat
jb
jno
jl
push
add
pop
mov
pushf
ss
das
add
daa
ins
je
les
outs
neg
ins
and
out
fcomp
sbb
cdq
inc
jmp
mov
inc
loope
or
xor
push
test
sar
jns
test
pop
mov
lods
mov
jb
mov
jecxz
mov
push
test
pop
hlt
add
sbb
pop
fild
les
fucomp
or
add
xor
neg
call
stc
jbe
mov
mov
popf
mov
sbb
mov
stc
popa
xchg
mov
gs
cs
dec
repz
stc
or
lock
xlat
xchg
sbb
cmps
push
mov
fbstp
mov
in
in
daa
out
imul
push
retf
es
out
ret
out
imul
out
inc
call
sub
cmp
xchg
mov
xchg
pop
or
sub
pop
int
mov
stos
and
(bad)
fist
adc
imul
fstp
xchg
clc
loopne
hlt
mov
and
adc
mov
dec
not
sbb
outs
adc
or
lods
clc
loop
mov
loop
jge
xor
xchg
mov
imul
dec
ja
pop
push
nop
cmps
cmp
mov
sbb
je
xor
xor
adc
int3
xlat
cwde
and
enter
out
vmovupd
mov
mov
cmp
inc
(bad)
mov
jae
fcom
jle
lahf
adc
pop
scas
cld
loop
ret
sub
add
add
icebp
inc
pop
stc
(bad)
shl
inc
lods
adc
jmp
cmp
sbb
out
fdivr
int3
add
push
inc
inc
out
cmp
js
enter
mov
ret
iret
lock
xor
lock
ret
fwait
leave
fadd
fcmovnb
in
lds
lods
(bad)
cmp
jmp
shl
cmps
call
and
lods
lea
mov
fadd
jb
xchg
push
lods
fcom
aam
jnp
jp
mov
mov
aam
or
icebp
push
mov
jecxz
push
repnz
xchg
(bad)
test
mov
sbb
inc
mov
repz
call
push
fidivr
addr16
and
or
test
or
int3
and
xor
clc
retf
cmp
mov
aaa
inc
sub
xor
add
xchg
mov
dec
lods
repz
and
imul
cmps
cs
lahf
dec
lds
fimul
icebp
gs
xchg
or
push
mov
test
xchg
call
out
add
xchg
mov
loope
test
movs
xlat
xchg
pop
mov
and
or
pop
data16
pop
aaa
and
inc
shl
imul
fldenv
cmp
lods
and
data16
or
fs
imul
scas
(bad)
std
sub
fadd
jp
mov
pop
and
into
hlt
cmp
or
push
jb
xor
add
cmp
sub
call
add
cmps
inc
or
mov
scas
sub
movs
icebp
sub
or
pop
mov
or
inc
mov
xor
pushf
clc
out
loopne
fsubr
mov
jle
iret
mov
push
in
xor
inc
xor
stc
aad
mov
in
inc
push
es
data16
sbb
xchg
and
(bad)
dec
cmp
sbb
jns
icebp
jmp
xchg
mov
push
jmp
xor
xchg
call
push
jbe
mov
fadd
or
xchg
ins
pop
lahf
jge
add
xlat
xor
stc
lods
sbb
add
sbb
jmp
cld
push
mov
loope
add
sub
mov
sbb
stos
movs
xchg
out
pop
jp
cli
shl
add
dec
les
inc
xor
push
adc
mov
jae
(bad)
xchg
movs
call
loopne
and
dec
fisttp
ret
loope
xchg
mov
imul
and
and
adc
xor
adc
jne
sti
and
pop
push
inc
(bad)
sti
scas
push
xchg
cmp
test
out
adc
sbb
dec
mov
aas
push
adc
cmc
mov
fst
cmp
xor
jmp
sahf
fucom
jae
dec
adc
dec
lock
mov
cmp
scas
scas
nop
shl
mov
aaa
arpl
mov
in
cld
push
pusha
popa
cmp
adc
jno
pop
pop
mov
mov
ins
push
sub
inc
jle
or
jo
mov
enter
dec
adc
repnz
jl
stos
loope
or
cmp
(bad)
jns
movs
or
sbb
push
add
cmp
jmp
mov
(bad)
push
cmp
jnp
fnsave
jp
movs
aaa
inc
in
into
cmp
jp
sub
shl
test
lahf
mov
push
push
cmc
dec
xchg
std
div
ss
add
cmps
shl
ror
mov
nop
and
retf
cmp
cmp
cmps
pop
adc
mov
add
mov
stos
and
push
cmp
mov
out
ins
es
pop
xor
xchg
add
xor
test
aad
(bad)
arpl
xchg
enter
add
stos
cmc
jmp
jecxz
clc
push
jmp
adc
and
test
daa
mov
lock
adc
cmps
neg
in
sub
mov
and
push
movs
or
loop
and
inc
xor
stos
test
jnp
ror
dec
cmp
aaa
jmp
je
into
stos
xchg
shl
mov
xlat
pusha
cmp
and
mov
jnp
mov
scas
sbb
sub
cmp
push
sub
adc
jp
test
imul
jmp
repz
repnz
dec
jno
push
adc
jge
sub
(bad)
jmp
push
push
retf
dec
cld
aas
sub
in
and
mov
cli
outs
push
mov
not
ret
cld
lock
(bad)
inc
xor
or
push
repnz
mov
leave
and
retf
cmp
sbb
int
mov
pop
ja
mov
inc
sbb
(bad)
je
out
stc
ja
jmp
sbb
xchg
cdq
mov
fld
sbb
jmp
dec
in
das
or
fistp
mov
in
(bad)
lods
popa
pop
pop
das
loope
call
not
shl
loope
mov
into
retf
inc
call
call
adc
xor
mov
int3
sahf
mov
shr
es
test
mov
aam
mov
(bad)
into
loop
mov
fidivr
sbb
xor
popa
fcmovu
sbb
repnz
mov
jnp
adc
jmp
sub
fimul
cdq
mov
sti
dec
or
bound
cmp
cmp
fistp
nop
mov
(bad)
pop
inc
loopne
jnp
sub
push
sbb
imul
cmp
xchg
pop
lea
in
xor
movs
or
adc
jle
push
retf
call
jae
faddp
xchg
xor
cmp
shl
jge
sbb
xlat
push
push
sub
les
movs
ja
inc
imul
daa
ja
dec
ret
mov
scas
pop
push
scas
cdq
mov
mov
jmp
mov
popf
cmps
mov
or
mov
fld
cs
popf
dec
inc
(bad)
out
data16
xchg
hlt
movs
lea
add
dec
xor
and
lahf
mov
lea
pushf
aad
xor
push
or
jno
push
xlat
push
or
cmp
cmps
ret
or
fabs
dec
in
add
pushf
or
in
pop
xchg
and
and
adc
xchg
aam
dec
ins
mov
mov
dec
xor
and
fadd
retf
pop
imul
sub
mov
rcl
and
(bad)
out
xchg
ja
and
pop
sub
pop
mov
mov
(bad)
mov
jg
push
or
movs
push
and
jmp
sti
pop
call
dec
pusha
xchg
lahf
fsub
sbb
xchg
into
pop
lods
popf
ja
xor
dec
sub
aam
cmp
js
push
fimul
ret
jo
sub
outs
push
test
sahf
mov
(bad)
mov
cmp
cmp
adc
test
std
cmps
ss
jge
jno
mov
fild
sub
jecxz
jns
fcom
cmps
cwde
fldenv
cmps
cmp
push
stc
cmp
(bad)
je
std
push
adc
inc
inc
dec
stos
jo
jbe
pop
repz
sub
sub
stos
in
add
mov
jne
xchg
inc
mov
call
lds
cmps
adc
mov
sar
mov
je
ins
push
xchg
xor
push
pop
mov
cmps
jge
xchg
in
(bad)
sub
aad
dec
sbb
pop
es
or
push
cmp
ret
xor
lahf
cmps
scas
cld
dec
cmp
mov
loop
adc
mov
(bad)
cs
adc
mov
or
call
inc
data16
pop
lods
cmp
push
(bad)
mov
test
push
nop
sar
jnp
add
aad
cdq
or
pop
pop
enter
cmps
mov
push
mov
cmps
in
jae
jmp
mov
mov
xchg
cmp
mov
sahf
std
aaa
jbe
pop
jbe
shl
bound
sbb
dec
pop
in
aaa
rcr
sub
loop
fs
pop
in
scas
add
call
sbb
paddsb
inc
enter
outs
mov
in
cmp
mov
mov
std
aad
rcr
(bad)
cli
or
pop
dec
lods
mov
arpl
lahf
mov
mov
dec
and
adc
je
(bad)
call
mov
xchg
aas
push
bound
add
mov
mov
mov
out
stc
dec
pop
(bad)
and
pushf
(bad)
push
dec
test
jo
ret
(bad)
cmps
int
leave
pop
lea
add
ds
dec
aam
mov
daa
adc
gs
out
out
sub
add
jg
mov
add
aad
cwde
sub
add
jp
mov
xor
or
stc
and
or
popf
xor
push
cli
mov
dec
sub
enter
mov
push
fbstp
cmp
jno
push
call
xor
aaa
and
or
jns
xlat
xor
or
test
cmp
repnz
aaa
ss
test
call
pushf
push
mov
dec
xchg
mov
hlt
dec
mov
jp
push
repz
fist
sti
out
(bad)
aad
sub
pop
push
adc
popa
adc
pop
sbb
(bad)
cmc
or
cmp
xchg
lods
repnz
in
mov
je
int3
adc
or
pop
or
xor
vmovapd
pusha
inc
shr
jp
sbb
mov
add
fiadd
cmp
push
das
adc
sub
adc
shl
mov
jnp
pop
mov
mov
fcomp
and
enter
xor
into
mov
inc
or
jecxz
in
sub
icebp
call
inc
pop
movs
adc
jmp
shl
push
ficomp
fwait
loop
jo
arpl
fbstp
jmp
ins
or
fdiv
loope
daa
mov
add
scas
mov
lods
in
shl
mov
xor
jne
das
jnp
imul
out
or
mov
je
mov
and
rcr
cmp
(bad)
sbb
scas
jecxz
xor
sbb
sub
movs
pop
adc
adc
popa
stos
mov
xlat
jl
cmp
jp
cmp
xchg
inc
mov
rol
fstp
push
adc
push
lahf
mov
int3
mov
gs
xor
xadd
sub
and
sbb
in
lock
pop
mov
pop
mov
scas
icebp
xchg
and
inc
jo
iret
stos
pusha
vmovlpd
sbb
push
dec
mov
mov
movs
enter
mov
jge
sbb
jge
xchg
loope
and
dec
frstor
jbe
push
scas
sub
call
xchg
pop
out
nop
test
ret
jle
shl
or
inc
stos
mov
loop
sub
xchg
dec
lods
mov
pop
jecxz
jae
nop
add
and
ds
fadd
mov
loop
imul
adc
daa
mov
addr16
aad
xchg
sahf
and
pop
aas
in
jmp
mov
push
scas
iret
xchg
jmp
aam
jno
popa
pushf
and
out
lock
loopne
mov
not
mov
dec
jnp
xor
outs
sub
lea
push
dec
and
or
js
shr
(bad)
ins
add
mov
imul
jbe
lds
add
dec
popa
adc
xor
and
sub
lods
je
add
xchg
mov
fldcw
lahf
int3
repz
movs
adc
pop
mov
pushf
je
enter
jg
pushf
cmp
dec
(bad)
mov
sbb
xchg
ficom
mov
xor
lea
ins
cdq
push
kortestw
retf
and
add
popf
aam
fidiv
or
adc
shl
aas
or
ins
(bad)
das
hlt
jp
pop
pusha
cmps
push
leave
outs
mov
movs
popf
sbb
add
xor
mov
movs
imul
dec
and
mov
cmp
mov
gs
rol
sbb
les
jp
pop
in
lods
jmp
inc
inc
data16
std
test
pop
mov
add
mov
xchg
mul
push
push
xchg
xlat
mov
xchg
retf
ficomp
and
mov
jmp
mov
and
or
xchg
rcr
shr
dec
ins
loope
jnp
mov
xor
outs
gs
ret
push
jo
gs
mov
or
mov
lock
mov
add
xor
mov
xchg
jno
xlat
push
fld
std
imul
xchg
cmp
js
jns
sub
nop
sbb
(bad)
ror
mov
inc
jb
cmps
sbb
aam
sbb
sahf
fiadd
movs
cmp
and
dec
pop
or
mov
out
adc
(bad)
inc
fbld
ja
pusha
sbb
fild
cmp
fld
mov
cwde
cmp
movs
sub
into
data16
add
popf
fmul
sub
sbb
fmul
or
test
xchg
lods
lahf
sub
mov
(bad)
xchg
sti
xchg
call
inc
out
jmp
push
popa
push
push
mov
lods
fdiv
cmp
loope
loope
xor
jle
add
les
inc
mov
adc
ret
repz
adc
pop
data16
and
stos
aaa
mov
dec
xor
test
out
push
ins
cmp
lds
xor
pushf
or
pop
(bad)
outs
xchg
sbb
aad
sub
xor
call
inc
and
popa
repz
mov
cmp
lods
fwait
add
mov
aad
scas
jmp
dec
adc
cli
mov
push
fwait
mov
jmp
inc
xchg
jbe
cmps
dec
sbb
leave
hlt
ss
loopne
(bad)
cli
adc
ret
out
cmps
xchg
loopne
icebp
jmp
movs
je
or
fistp
xchg
pushf
enter
push
stos
sub
sbb
pushf
pop
js
push
mov
es
lods
jmp
int3
lahf
jmp
dec
hlt
push
cmp
out
sub
cmc
retf
xor
fstp
mov
jecxz
cmp
sbb
add
cwde
in
adc
xor
ret
sbb
xchg
push
arpl
outs
push
and
push
xor
jmp
out
or
mov
in
in
cli
mov
mov
js
fld
in
mov
sbb
jo
pusha
add
cdq
sub
inc
and
(bad)
fistp
test
xchg
mov
mov
stos
mul
std
outs
jp
out
jmp
jg
scas
pop
call
and
mov
add
pop
dec
mov
adc
loop
mov
push
cld
int
jbe
jmp
mov
imul
int3
sub
lahf
loop
jnp
enter
jle
push
(bad)
(bad)
adc
or
mov
cmc
adc
enter
push
sub
ficom
adc
fidiv
push
test
jle
shl
xor
popf
sub
mov
cmp
xchg
loope
inc
xor
call
data16
pop
and
sbb
or
cli
cwde
xor
dec
xchg
aaa
ja
int
sub
ret
mov
push
mul
cli
push
sbb
push
mov
xchg
sbb
cmp
call
movs
rcl
out
(bad)
pop
push
lods
mov
fs
add
push
mov
mov
sbb
mov
and
mov
scas
sar
xor
jmp
std
stos
into
cmp
or
aas
cli
js
arpl
fs
mov
or
das
inc
out
sub
add
daa
std
push
jmp
jno
aaa
je
das
mul
fimul
push
inc
sbb
cmc
mov
test
dec
mov
push
(bad)
aam
cmp
aas
scas
sbb
push
fistp
(bad)
cmp
xchg
jmp
rcr
sub
aad
xchg
(bad)
rcl
push
pusha
pop
int3
dec
jp
data16
popa
mov
shl
cli
dec
mov
in
xor
call
leave
and
out
leave
sub
loop
movs
je
mov
inc
cld
dec
cmp
xor
sbb
inc
imul
jp
pop
aas
sbb
pop
lods
jmp
sub
add
xchg
push
cmp
mov
inc
fadd
aam
push
in
ds
inc
fs
arpl
sub
movs
stos
or
mov
dec
cmc
mov
hlt
inc
push
inc
out
inc
jmp
mov
pop
lds
sub
(bad)
(bad)
jmp
std
jmp
rol
mov
fldenv
cmps
mov
loopne
mov
popf
mov
fidiv
dec
push
repnz
cmp
pop
xor
push
mov
aas
fidiv
shl
in
pop
pop
push
add
xchg
gs
fidivr
fwait
daa
cmp
sub
ins
imul
(bad)
xchg
jnp
jnp
ins
add
test
jno
adc
das
shl
or
inc
fld
xchg
sbb
out
pop
(bad)
pop
retf
aad
jecxz
fiadd
mov
sar
cmp
repnz
mov
add
mov
mov
(bad)
and
inc
pusha
fsub
cmc
out
mov
pop
jb
int
dec
cld
popf
movs
mov
and
dec
mov
sbb
add
shr
add
xor
shr
and
pop
pop
cmp
cs
pop
test
and
xchg
push
and
mov
mov
mov
(bad)
shl
imul
xchg
push
std
mov
into
mov
sub
push
mov
fcom
add
sbb
in
out
dec
nop
sti
xor
mov
xor
push
inc
push
and
fdiv
(bad)
cmps
xchg
xor
mov
push
lea
adc
(bad)
xchg
repnz
pop
icebp
inc
pushaw
jns
push
cmp
xchg
ficomp
inc
push
dec
push
pop
addr16
pusha
jle
mov
mov
mov
leave
mov
ret
dec
add
xor
cmp
push
int3
push
xchg
sbb
ret
fimul
pushf
and
adc
mov
sbb
rcr
dec
lock
mov
push
sahf
dec
xlat
adc
xchg
ret
jge
push
add
mov
fs
js
pop
cmp
repz
test
mov
mov
xchg
je
sbb
fnsave
or
push
mov
push
sbb
popa
inc
jge
lahf
jg
nop
aas
jno
jns
bound
xor
inc
imul
in
sahf
cdq
leave
sub
mov
or
or
stos
enter
pop
mov
sub
push
retf
scas
jno
dec
inc
mov
out
dec
daa
and
cli
int
push
push
fldcw
mov
clc
pushf
dec
dec
sti
(bad)
xchg
mov
fild
sub
out
adc
sub
xor
mov
int3
jo
scas
adc
inc
add
add
popa
arpl
daa
mov
fistp
or
push
inc
repnz
dec
sbb
test
xchg
and
stos
mov
and
adc
and
dec
nop
xor
fwait
push
enter
and
or
pop
loope
imul
movs
pop
mov
sbb
cmp
repz
jmp
mov
pop
xchg
inc
ret
jns
pop
mov
data16
fdiv
xor
mov
xor
(bad)
fnsave
fucom
cmps
push
add
lea
or
xchg
dec
call
adc
mov
jmp
mov
mov
lock
call
mov
sub
in
push
mov
mov
mov
test
pop
lods
loope
cmps
xor
mov
mov
xchg
fsubr
mov
fs
mov
mov
enter
jbe
jmp
out
call
xchg
mov
das
add
cmp
mov
lods
popa
xor
std
jne
sub
push
jns
sbb
lea
loope
push
xor
jb
cdq
ret
outs
out
dec
add
out
add
mov
push
outs
mov
inc
dec
lock
push
inc
mov
jo
aam
stc
fbld
aaa
sbb
or
(bad)
(bad)
ins
push
cmps
xor
sbb
sub
xor
dec
call
adc
fdivr
jne
mov
xor
mov
push
inc
ja
or
xchg
hlt
add
adc
xchg
dec
mov
adc
jne
ret
inc
adc
pop
mov
sub
pushf
sahf
fcmovu
loopne
nop
cmps
stos
push
cmps
xchg
push
retf
dec
sub
sub
mov
and
scas
sub
sbb
mov
into
lock
sbb
push
xchg
inc
out
aam
gs
pusha
jg
call
(bad)
out
sbb
sub
daa
stc
push
xchg
int
xchg
call
xchg
std
js
mov
retf
mov
inc
jbe
bound
fnstsw
jecxz
out
icebp
mov
mov
push
pusha
xor
cld
push
sahf
fs
stc
int3
dec
sub
dec
retf
sbb
jmp
fdiv
sub
mov
cmp
lds
dec
push
repz
lea
popf
mov
and
outs
fwait
pop
sub
aas
mov
xlat
test
retf
push
mov
sub
xchg
scas
mov
aam
lock
std
xor
les
mov
iret
jb
pusha
out
sbb
mov
xchg
(bad)
dec
and
movs
xchg
xlat
cmovl
stos
sub
or
cmps
or
jp
loopne
js
or
imul
outs
fsubr
mov
and
movs
out
dec
xchg
or
mov
in
(bad)
dec
sbb
mov
stos
adc
cs
pop
add
test
inc
rcl
arpl
fld
cwd
sub
es
jp
or
enter
sub
cmp
aad
scas
lahf
or
movs
jns
cmp
ror
ins
or
call
int
pop
mov
stc
scas
frstor
pop
ins
mov
cmp
mul
(bad)
cmp
and
push
cmp
js
adc
add
xor
mov
lock
sub
aas
jne
ins
inc
packuswb
mov
pop
or
ret
mov
lahf
addr16
cmc
loop
push
ds
cwde
pop
xor
jmp
popa
sahf
push
cmp
sub
or
mov
push
inc
or
cs
jl
xchg
pop
xor
daa
(bad)
movs
dec
xlat
inc
jmp
fimul
lea
or
pop
inc
xor
adc
mov
cld
xchg
popf
pop
fucomip
xchg
fst
icebp
repz
mov
mov
pop
repnz
ss
push
shl
data16
push
lock
push
lds
outs
rcr
imul
arpl
test
pop
(bad)
lahf
dec
pop
and
ins
enter
clc
adc
lock
and
adc
rcr
add
cmp
bound
into
push
dec
cmp
jg
add
jbe
cmp
inc
outs
sbb
mov
jbe
adc
pop
scas
mov
sub
xor
jp
pop
add
lock
dec
sub
jmp
inc
(bad)
jle
sub
lds
arpl
lods
stos
inc
pop
and
popa
clc
sub
jg
pop
mov
push
xchg
push
push
xchg
ret
ror
ja
xor
or
stos
mov
inc
jb
ja
stos
dec
mov
add
push
ins
in
leave
mov
lods
stc
jg
je
lock
pushf
sti
gs
cs
cmp
xchg
ror
inc
mov
lahf
jl
lahf
scas
and
iret
push
ret
inc
sbb
jmp
add
xor
cmp
and
div
cmp
pop
lods
pop
inc
(bad)
pop
cmps
retf
das
dec
pop
sahf
sub
xchg
arpl
idiv
and
adc
adc
stc
sti
movs
mov
sbb
mov
sub
je
(bad)
loopne
or
js
mov
aaa
cmps
jle
or
mov
pop
aas
push
sbb
pop
inc
daa
pop
ficomp
push
xchg
inc
in
jbe
or
push
inc
int
xchg
sar
int
inc
mov
lds
mov
push
enter
xlat
jne
sahf
push
jmp
das
xchg
vcvtpd2ps
mov
scas
xor
daa
jnp
sub
lods
jbe
bound
lock
push
(bad)
pop
(bad)
stos
cmps
cmc
mov
inc
ss
mov
mov
test
leave
sbb
jo
push
add
xor
cld
scas
or
sub
lea
push
ret
dec
pushf
pop
sahf
mov
sti
fld
jl
movs
jg
sub
sbb
inc
xor
cmp
out
mov
and
jbe
xchg
jae
les
jo
fisttp
jmp
std
xchg
cmp
sub
add
mov
(bad)
push
in
sbb
int3
in
aad
cwde
out
fucomip
dec
clc
and
sub
clc
rcr
sub
in
nop
xor
into
dec
mov
popa
mov
sbb
jg
push
add
stos
cli
dec
jl
hlt
in
out
push
fs
xchg
lea
mov
dec
xchg
movs
es
push
outs
repnz
mov
hlt
adc
iret
fnstenv
xchg
pop
inc
jns
icebp
test
movhps
mov
xchg
push
dec
int
cmp
jb
add
mov
call
sub
out
ret
test
sahf
xor
jge
pop
dec
push
xchg
mov
adc
inc
movs
std
mov
pop
and
xchg
or
out
pusha
xchg
int
sahf
jp
(bad)
mul
popa
stc
sahf
loopne
xchg
popf
clc
movs
dec
mov
movs
push
repnz
xchg
sbb
stos
push
xor
add
iret
outs
sub
jb
repnz
dec
ret
bound
jl
iret
pusha
ret
adc
xlat
inc
or
fdiv
or
mov
cs
pop
mov
cwd
sub
sub
mov
(bad)
nop
cmc
mov
push
in
int3
xchg
add
or
imul
ins
(bad)
cmp
adc
inc
out
repnz
fsubr
cmp
add
outs
jp
cs
shl
jnp
lods
test
jo
movs
or
sbb
mov
ins
mov
pop
adc
pop
sub
(bad)
bound
ins
push
int3
(bad)
jg
movs
sbb
jae
push
adc
sub
in
outs
stos
int
push
in
in
movs
test
dec
xchg
add
lds
or
jmp
sar
(bad)
lahf
neg
add
(bad)
div
add
cdq
mov
sbb
or
into
sub
mov
cmps
daa
rcl
sahf
push
pop
into
sti
test
pop
add
mov
sbb
sbb
push
mov
inc
nop
fldcw
push
sbb
loope
call
pop
pop
mov
jg
imul
jge
xor
inc
pop
lahf
mov
xor
sub
fucom
xchg
add
aas
rcl
jmp
std
fld
sbb
dec
and
jae
sbb
cli
push
mov
push
sar
pop
outs
mov
jae
jno
pop
pushf
xchg
imul
test
pop
int3
jl
test
add
shr
aas
dec
mov
mov
sub
push
mov
nop
sbb
inc
mov
shl
or
sti
pop
mov
push
push
dec
pop
icebp
dec
mov
test
shl
nop
cmps
jno
test
stos
push
repz
mov
adc
lahf
inc
imul
pop
xchg
cmps
(bad)
cmp
in
xor
xchg
ficomp
mov
xor
frstor
sub
cli
int3
xchg
push
fld
dec
inc
mov
sti
push
ds
adc
retf
ins
pop
dec
sub
retf
pushf
push
inc
sar
cmp
dec
(bad)
jno
ins
cdq
and
ja
test
movs
push
jno
adc
shl
add
or
cli
(bad)
(bad)
je
xchg
pop
sbb
ficom
mov
mov
or
or
into
scas
add
or
sbb
cmp
sti
sbb
xor
psraw
jnp
gs
xchg
gs
mov
push
into
mov
ror
loope
(bad)
jbe
dec
bound
rcr
jg
aaa
and
iret
in
ins
sub
jbe
push
mov
mov
xchg
(bad)
mov
fisubr
cmp
or
dec
cli
or
inc
adc
pop
aaa
outs
jg
fcom
(bad)
or
stos
adc
dec
or
fdivr
dec
xor
push
push
pop
loopne
hlt
rcr
dec
pop
adc
(bad)
mov
(bad)
sub
sti
imul
shr
out
and
cwde
or
add
sahf
mov
pop
arpl
and
jbe
sahf
retf
add
aam
outs
xor
cmp
or
and
adc
sub
or
jle
cs
add
jnp
imul
inc
cmp
mov
retf
retf
cmps
dec
rcl
fidivr
inc
sub
mov
(bad)
and
bound
inc
test
lods
ss
mov
(bad)
cwde
in
sub
mov
lock
icebp
jge
fs
pop
add
fcmovne
inc
rol
xchg
and
cmp
dec
pop
test
fisttp
icebp
or
test
lock
add
xchg
cmc
fdivr
cmp
sbb
cmps
push
ins
int3
jmp
int
rol
outs
in
cli
addr16
jmp
fdiv
in
scas
cdq
loop
loop
sbb
xchg
mov
add
xchg
dec
jmp
fild
aam
xchg
adc
bound
sti
cli
int
mov
ins
mov
shl
xor
add
sub
(bad)
ja
add
cmp
xchg
xchg
(bad)
shl
mov
xchg
std
je
aad
xor
test
hlt
mov
and
fs
jne
adc
stc
movs
inc
stos
jecxz
mov
shr
enter
jmp
or
addr16
inc
jns
imul
invd
and
cmp
fsub
add
cld
adc
sub
jg
leave
adc
push
sub
jmp
fs
stc
mov
lds
mov
cld
cmp
and
sub
jno
xor
je
push
mov
je
jl
sub
mov
add
inc
sub
imul
adc
and
fmul
mov
mov
mov
ins
sub
xchg
pusha
jg
inc
lea
sbb
ds
mov
cmps
lock
fsub
les
xchg
sbb
lea
jmp
dec
push
mov
xor
mov
xchg
jecxz
loopne
out
div
jne
scas
and
sbb
daa
xor
and
or
(bad)
mov
sbb
adc
sbb
gs
jg
push
sbb
addr16
data16
arpl
fwait
test
pop
xor
(bad)
test
cdq
mov
es
mov
in
cmc
dec
sahf
push
call
sub
sbb
push
add
cmp
fsub
retf
int3
out
ja
xor
retf
xor
xchg
cmc
xor
push
xchg
sbb
mov
add
imul
cmp
sahf
jl
icebp
cmps
lods
sbb
retf
cli
push
les
jg
xchg
test
dec
xor
jp
jo
and
in
test
xchg
dec
aad
pop
mov
in
xor
xchg
pop
cmp
cmp
jo
add
pop
fcmovbe
pusha
or
sub
cmp
xchg
jg
cmp
jge
cmp
xchg
ret
ret
or
pushf
mov
mov
fsubr
sbb
or
add
pop
movlps
icebp
and
pop
hlt
xchg
sub
fsubr
stos
iret
mov
fidivr
addr16
mov
sahf
repz
mov
iret
shl
adc
add
ret
dec
pop
push
xchg
test
je
(bad)
sar
in
mov
mov
mov
push
xchg
sbb
call
not
push
xchg
pushf
(bad)
jg
mov
push
push
cld
dec
mov
pop
je
lods
pop
movs
sbb
sub
das
aam
lea
outs
dec
rcr
repnz
neg
mov
mov
(bad)
jae
lldt
lahf
mov
and
xor
add
test
xchg
std
sub
mov
xor
sbb
lds
inc
jmp
shl
enter
(bad)
jno
popf
outs
or
dec
(bad)
loop
bswap
data16
adc
lahf
fbstp
outs
inc
xor
cwde
data16
mov
cwde
fisub
mov
cmps
pushw
xor
push
scas
add
test
data16
adc
inc
pop
test
loopne
ja
loop
pop
and
jg
push
mov
mov
dec
adc
movs
dec
sub
test
mov
cmp
jae
mov
mov
add
repz
push
dec
mov
jp
fld
inc
sbb
adc
or
push
into
out
mov
pop
ins
popf
adc
shl
fistp
jl
js
xor
xchg
cmp
xor
adc
gs
add
rcr
cld
mov
mov
xchg
repnz
ss
dec
xor
clc
push
inc
pop
out
icebp
lds
popf
mov
push
sbb
xchg
xchg
(bad)
xor
bound
shr
int3
pop
add
jo
mov
xlat
jmp
dec
fld
das
or
inc
sbb
imul
lds
fwait
call
push
rcl
mov
pop
outs
in
cdq
ds
mov
loope
xchg
and
mov
lock
sbb
jno
mov
bound
push
es
nop
pmullw
mov
mov
(bad)
mov
test
out
sub
aam
jo
dec
mov
(bad)
jns
sub
jne
xchg
ss
rcr
jp
hlt
jmp
les
push
ins
lea
sub
fcom
mov
push
inc
dec
sbb
std
dec
jne
or
fs
aas
adc
(bad)
bound
jecxz
mov
lods
lock
adc
push
in
into
and
sbb
ret
dec
outs
pop
mov
mov
out
dec
mov
clc
push
jno
mov
out
sbb
cmp
push
jg
outs
xor
stos
jl
sti
xchg
stc
pushf
cmp
inc
ins
call
(bad)
and
in
das
(bad)
into
mov
mov
lds
xchg
imul
adc
fdecstp
js
out
out
adc
dec
dec
sub
loop
ins
pop
jge
cmp
retf
scas
popf
les
out
fwait
inc
jecxz
and
sti
out
nop
add
pop
(bad)
pop
stc
or
mul
push
xor
add
aaa
sahf
(bad)
pop
sbb
psubw
sbb
xor
dec
lahf
(bad)
mov
xchg
adc
inc
mov
leave
sub
push
arpl
jbe
push
stos
jmp
out
rol
adc
sub
xchg
jb
inc
sub
inc
mov
xlat
repz
adc
enter
adc
cwde
dec
(bad)
pop
retf
iret
rcr
in
out
fcom
mov
lahf
call
inc
ins
mov
dec
jo
enter
push
fstp
cmp
repz
sub
push
dec
jnp
inc
pop
leave
clc
mov
and
mov
sub
mov
push
ins
add
mov
sub
xor
(bad)
mov
ret
jo
ja
mov
int
add
or
xchg
bound
loop
sbb
cmp
pop
xor
cwde
inc
adc
and
pop
gs
cmc
push
lahf
dec
cmp
adc
js
xchg
pop
aas
jns
and
fdivr
push
iret
and
xor
pop
gs
pop
and
sbb
and
daa
outs
(bad)
push
or
(bad)
mul
jmp
adc
pop
or
add
ret
shr
test
fadd
sbb
cdq
es
data16
adc
push
(bad)
fstp
dec
fld
jecxz
sub
xchg
mov
inc
pusha
loopne
xor
in
sti
js
in
imul
mov
dec
into
mov
cmp
dec
pop
dec
adc
xor
pop
jo
mov
enter
mov
mul
adc
ret
(bad)
and
stc
ja
pop
inc
mov
push
pop
add
imul
lods
cwde
inc
lahf
dec
in
sub
adc
not
or
inc
inc
int
jge
jns
xor
stos
adc
pop
sbb
adc
sbb
(bad)
inc
inc
xor
popf
fbld
and
pop
sbb
rcr
sub
arpl
cmps
int
xchg
es
jl
adc
sbb
rcl
bound
xor
fwait
aad
pop
fiadd
or
push
js
pop
outs
sub
xchg
cmps
jb
pop
xchg
pop
pop
xchg
and
out
daa
sbb
mov
xor
(bad)
sbb
add
inc
inc
cdq
inc
xchg
xor
xor
xchg
xchg
jo
push
push
(bad)
push
data16
dec
test
jecxz
cwde
add
out
enter
xor
std
pop
cmps
(bad)
pop
adc
cmp
sub
mov
ins
lods
arpl
ins
xor
mov
int3
jmp
xor
cmps
xchg
push
stc
sub
sbb
mov
je
movs
mov
or
and
neg
mov
int3
mov
push
arpl
cmps
adc
cli
pop
ja
test
retf
int
fs
lahf
sar
dec
push
cmc
mov
pop
and
int
and
xor
cmp
jno
dec
cmp
add
sub
pop
outs
sub
lock
jae
cs
pop
mov
fcomp
xor
jp
int
sub
mov
in
jmp
js
xchg
call
cmp
out
mov
pop
repnz
xor
xchg
icebp
lock
xchg
xchg
stos
stos
sub
outs
push
adc
in
xor
mov
jae
fcomp
cmp
xchg
or
or
cwde
movs
lock
jb
and
daa
in
mov
scas
stos
scas
dec
sbb
int
(bad)
jbe
sbb
push
or
std
cwde
xchg
mov
or
imul
mov
out
popf
push
scas
jnp
inc
fisubr
jle
pop
mov
imul
cmps
xchg
sub
inc
clc
aas
mov
add
into
lds
cmc
push
jnp
sub
inc
fs
push
sub
xchg
in
test
jo
xor
(bad)
hlt
aaa
imul
pop
dec
dec
mov
shr
jle
mov
mov
push
inc
xchg
mov
retf
icebp
inc
mov
xor
push
scas
out
loope
pop
retf
jns
mov
out
fcomip
jb
fcmovnb
aad
lds
scas
sbb
or
rcpps
je
inc
ins
cmc
cli
xor
or
popf
out
outs
popf
mov
xor
jno
mov
and
in
(bad)
sub
inc
xor
push
mov
or
and
retf
inc
call
jmp
pop
jb
aam
iret
adc
pushf
jns
test
popa
mov
pop
or
or
dec
out
movups
in
test
jmp
sub
pop
mov
mov
test
pop
and
push
scas
cmps
and
sbb
inc
jae
or
(bad)
fnstenv
push
cdq
icebp
fyl2xp1
lock
es
loop
and
mov
popf
sbb
fwait
add
lods
clc
add
stos
mov
mov
inc
xchg
push
mov
or
arpl
(bad)
pushf
adc
pop
push
cdq
add
fwait
scas
call
xor
sub
mov
mov
nop
imul
push
sub
mov
cmps
xor
bound
outs
outs
in
test
into
xlat
pop
and
jo
inc
adc
xor
retf
mov
pop
jmp
mov
ins
push
dec
push
cmp
mov
push
(bad)
xchg
inc
mov
push
pop
test
push
shl
(bad)
in
loop
sysenter
test
shl
jmp
popa
iret
dec
jb
retf
fstp
or
aam
push
cmp
and
sub
or
xor
mov
sub
stos
lds
arpl
push
or
xor
fild
repnz
je
pop
pop
inc
outs
(bad)
lock
in
inc
pusha
or
mov
cmps
sub
jmp
frstor
mov
movs
pop
xchg
push
aas
bound
adc
inc
dec
mov
dec
ror
xor
pop
pop
lea
out
cs
sub
jb
lock
sub
in
fidivr
lods
dec
mov
cmc
jmp
iret
pop
in
inc
adc
jmp
sbb
mov
and
jmp
scas
mov
push
dec
push
outs
inc
out
jns
in
add
dec
pop
repz
aas
pop
xor
sub
das
or
(bad)
mov
mov
out
pusha
mov
stos
jo
or
and
adc
cmc
(bad)
mov
push
mov
lods
icebp
push
xchg
push
out
mov
adc
sar
mov
fcmove
je
cmc
ins
and
push
fmul
inc
push
dec
push
scas
jo
fld
les
call
mov
call
sbb
cmp
jmp
pop
inc
in
or
in
sub
idiv
cli
pop
sub
add
push
add
jmp
rol
adc
scas
in
adc
push
test
adc
cmp
and
jo
xchg
cwde
lock
or
(bad)
aad
sub
les
cmp
inc
add
xchg
fiadd
dec
js
clc
jle
pop
jno
lea
adc
les
pushf
and
das
fnstenv
mul
into
jle
ja
dec
push
xchg
rcr
push
neg
xchg
(bad)
mov
push
xchg
test
mov
sub
xor
push
aad
jbe
mov
aad
mov
xor
and
or
fsub
ins
test
mov
dec
xchg
leave
repnz
jb
mov
pusha
ja
inc
jb
jmp
pop
pop
or
(bad)
rep
cmps
pop
sbb
or
xor
xor
push
ja
push
call
pop
and
(bad)
fmulp
scas
pusha
hlt
and
fstp
nop
jg
psrlq
sub
xchg
test
or
cwde
shl
jg
imul
loope
sbb
in
xor
lods
mov
add
dec
lea
(bad)
ss
add
arpl
mov
xchg
js
inc
inc
popa
dec
jmp
jmp
sub
in
movs
mov
push
arpl
jb
bound
inc
fxch
push
sbb
or
mov
and
daa
sub
push
push
push
xchg
pop
mov
int
sbb
aam
xchg
pop
pop
test
lock
les
bound
xchg
and
pop
xchg
or
dec
add
and
loop
add
das
enter
jae
sbb
cli
inc
stos
movs
mov
push
dec
dec
xlat
das
pop
cmp
mov
xchg
or
inc
pop
mov
int3
popa
push
stos
push
scas
fisubr
lea
movs
jnp
xchg
cmp
lea
div
xor
fadd
sub
mov
popa
push
test
aaa
stc
push
mov
lods
bound
add
xchg
data16
pop
jnp
icebp
cmc
cmp
repz
dec
mov
xlat
aad
in
mov
jb
rol
test
and
and
and
(bad)
jno
imul
or
add
pop
mov
fdiv
popf
cmp
lods
pop
imul
sub
mov
add
or
jle
push
es
test
dec
bound
cwde
lock
sar
adc
cmp
repz
pop
repnz
pop
(bad)
daa
cs
jmp
add
aaa
and
jbe
and
sub
dec
cmps
pop
ret
popa
je
movs
mov
nop
imul
xor
rcr
ins
add
bound
les
(bad)
and
mov
call
inc
das
dec
xlat
add
mov
dec
test
loopne
cmps
sbb
cmp
loopne
ja
dec
ficomp
xor
sub
dec
retf
(bad)
ja
mov
xchg
fdivr
and
add
jo
gs
ja
mov
xchg
jne
sbb
sub
sbb
loope
sbb
js
fild
and
cmp
ror
cwde
xchg
pop
daa
mov
mov
in
mov
movs
into
sbb
fist
cmp
jg
mov
lds
push
out
cmp
jmp
loop
push
rcl
mov
clc
shl
inc
dec
jo
jno
mov
aam
lods
test
or
cmp
movs
mov
mov
inc
xchg
xchg
inc
mov
int
fidiv
add
add
xlat
lahf
fwait
clc
xor
out
loop
xor
sub
xor
leave
push
popf
cmc
sbb
gs
movs
(bad)
jge
mov
arpl
lea
dec
xor
retf
jmp
mov
push
inc
jo
jo
ret
lods
pop
hlt
xchg
jnp
(bad)
mov
cmp
or
mov
push
addr16
test
(bad)
ins
mov
and
xchg
xor
or
add
cmp
adc
(bad)
lods
or
addr16
xor
adc
xchg
int
(bad)
push
repz
sub
ror
dec
addr16
cli
adc
xchg
xchg
jle
loope
daa
inc
fimul
les
push
sub
mov
mov
lds
(bad)
cmp
dec
mov
fnstenv
cs
xchg
mov
inc
xor
mov
or
(bad)
leave
push
repnz
sub
jae
mov
outs
jns
inc
pop
fidivr
ret
retf
test
mov
int
int
aam
int
cmp
dec
aaa
loopne
dec
push
inc
and
pusha
addr16
xor
bound
sahf
repz
(bad)
rcr
ret
cdq
cmps
fiadd
cmps
jmp
mov
push
mov
lods
cmp
sub
add
dec
sbb
push
nop
jmp
(bad)
cmps
lock
in
aas
mov
pop
push
adc
test
xchg
sahf
inc
sbb
movs
sbb
popa
pop
push
pusha
pop
jl
aaa
sub
popa
xchg
cld
loope
mov
call
das
or
int
stos
jle
mov
dec
dec
out
mov
and
xchg
mov
xchg
or
add
dec
push
lods
xchg
test
fcmovnb
push
cs
dec
xchg
adc
dec
mov
cmp
test
sub
(bad)
into
mov
xlat
bnd
dec
sub
sbb
call
add
mov
sar
in
cdq
xor
mov
retf
cld
mov
into
sub
sub
shl
inc
and
sub
call
and
mov
mov
sbb
in
or
jle
cmp
sbb
ret
loope
inc
push
xor
int
ror
jg
xchg
out
shl
jle
adc
jecxz
sbb
scas
inc
pop
ins
sub
shr
mov
cmp
rcr
dec
sub
cs
push
(bad)
mov
aam
daa
mov
sub
push
or
push
cli
sub
xchg
fs
imul
call
gs
and
fwait
push
cmp
xor
femms
dec
dec
fstp
jo
jnp
push
adc
push
mov
inc
push
daa
push
aad
inc
xchg
cli
cmp
repz
xchg
std
sub
mov
xchg
and
and
jge
push
xchg
pop
mov
arpl
mov
outs
cmps
pop
jb
ffreep
push
add
jl
pop
mov
pushf
push
es
repz
add
dec
test
and
push
add
enter
cmp
int3
pop
enter
xchg
and
mov
xor
sar
inc
push
sbb
dec
mov
pushf
stc
push
push
dec
cmc
fadd
sub
jmp
scas
pop
ret
or
aam
dec
mov
push
mov
xchg
or
inc
inc
ja
popf
stos
jno
shl
or
cmp
add
ds
imul
stos
fs
or
xchg
xor
outs
div
retf
es
inc
das
inc
outs
xchg
test
adc
rol
lods
test
test
mov
xor
enter
and
add
mov
xor
retf
pop
in
fucom
rol
imul
sbb
xchg
fadd
add
push
cmp
push
adc
pop
inc
mov
fnstenv
inc
fucomp
icebp
movs
int3
idiv
xchg
loop
mov
mov
mov
mov
push
mov
pushf
and
dec
(bad)
dec
push
je
(bad)
ins
inc
or
mov
xchg
arpl
and
or
sti
popa
(bad)
test
test
pop
pop
movs
add
out
push
xchg
push
fidivr
push
jb
jmp
fcmovnu
fsubr
fdivr
push
sbb
push
mov
fst
rcl
sbb
push
pop
pusha
jmp
(bad)
xor
xor
mov
iret
jno
and
cmps
jmp
rol
es
push
leave
test
jmp
movs
sub
pop
fld
retf
inc
std
push
mov
hlt
cmp
mov
push
ins
cs
sbb
aam
sti
bound
fidiv
or
and
cld
push
arpl
add
sbb
jl
adc
xor
inc
mov
adc
sar
jae
xor
idiv
lds
into
pop
and
retf
sar
imul
cmp
fist
sti
mov
sbb
adc
dec
lods
sbb
ret
adc
(bad)
jnp
add
xchg
sbb
cmp
in
xchg
(bad)
push
ins
xor
das
push
pop
addr16
stos
xor
add
cmps
scas
out
inc
push
cmp
and
out
sti
pop
not
out
mov
push
sahf
mov
enter
sub
sub
inc
(bad)
test
fdivr
test
mov
jmp
jecxz
loope
cli
pop
test
push
sbb
jge
popf
push
adc
mov
hlt
aas
push
pop
arpl
(bad)
call
fs
jbe
jmp
clc
stc
popf
popf
test
jne
dec
xor
add
loopne
cmp
rcl
cli
inc
sub
mov
pusha
push
xor
adc
adc
cdq
inc
mov
out
inc
jecxz
retf
ins
imul
rol
jl
jb
push
sbb
cs
cmc
mov
das
test
xor
jg
xor
or
stc
or
mov
in
test
mov
mov
fcmovb
nop
adc
pushf
jne
sbb
mov
stc
jp
mov
mov
(bad)
jg
push
mov
or
cli
mov
lods
std
xor
xchg
xchg
mov
out
retf
js
and
inc
pusha
mov
cmp
dec
addr16
sbb
imul
int3
pop
ds
inc
ror
mov
xchg
add
adc
inc
or
dec
and
mov
fnstenv
mov
xchg
inc
sub
aad
inc
pop
dec
pop
or
call
aas
mov
adc
aad
add
aas
adc
(bad)
aam
loope
mov
pushf
cli
sbb
jo
in
repz
pop
mov
aaa
cmp
fcom
stc
stc
ret
mov
inc
and
imul
lock
retf
cld
rol
mov
call
adc
jmp
jmp
aad
nop
jns
dec
ror
rol
adc
jl
add
jo
fcomi
je
dec
mov
sbb
push
(bad)
ss
mov
or
mov
(bad)
mov
int3
ins
dec
cmp
mov
and
sar
pop
jbe
pop
ss
cmp
out
push
and
das
mov
lock
mov
ror
inc
add
pop
push
inc
mov
aaa
cmp
jno
out
xchg
xchg
jne
cmp
xchg
test
sub
dec
out
(bad)
ret
jno
or
jle
das
mov
pop
cmps
xor
xor
pushf
xor
adc
les
sub
ins
add
lock
inc
fstp
mov
ins
jns
ds
ss
rcl
test
in
dec
in
dec
jns
test
sub
adc
ficomp
pop
cmp
push
dec
cmp
push
pop
sbb
mov
gs
xchg
repz
call
call
imul
sahf
cmp
jnp
jns
mov
mov
pop
in
inc
fiadd
sar
cmp
add
push
and
(bad)
sbb
mov
mov
and
mov
cmps
dec
mov
test
or
xor
scas
movs
sbb
in
mov
jmp
cwde
ss
jb
fiadd
sar
push
(bad)
in
inc
or
ja
mov
sub
cld
adc
pop
(bad)
sbb
add
test
add
sub
mov
mov
push
loopne
shl
stc
loopne
sbb
mov
lea
mov
cmp
mov
fs
movs
pop
dec
test
sbb
test
mov
jecxz
jno
out
mov
les
pop
and
ins
cs
popa
cli
or
push
nop
addr16
mov
scas
pop
ss
lds
ja
xchg
cmovge
daa
stos
retf
cmp
dec
lds
cld
int3
fadd
push
or
stc
aam
(bad)
in
cmps
call
mov
rcr
je
ret
push
dec
mov
xor
add
push
mov
ret
ds
mov
out
mov
add
push
push
push
inc
or
lahf
arpl
dec
xchg
jo
xlat
rcl
aad
fdivr
jecxz
mov
lds
cli
scas
(bad)
pop
mov
and
mov
test
and
test
bound
fnstcw
inc
inc
and
fsin
and
sbb
in
(bad)
ins
aad
rol
jp
fwait
cld
repnz
lods
rcl
cmp
lods
add
rol
sti
lahf
add
inc
xchg
std
lods
inc
into
loope
mov
mov
jmp
dec
dec
cli
ja
ds
int3
mov
in
jge
mov
jno
jg
imul
inc
scas
add
xor
mov
push
jecxz
cmp
daa
rcr
mov
popf
aaa
sbb
sti
sbb
pop
ins
cmps
ret
pop
jbe
sbb
cld
pop
lods
lock
(bad)
call
xor
cli
xchg
inc
iret
scas
or
pushf
jmp
jg
sbb
mov
sti
repz
dec
hlt
daa
or
jne
sbb
mov
ret
enter
aad
mov
test
add
add
jl
scas
fistp
call
push
jnp
sahf
fwait
sahf
fidivr
sti
jl
icebp
rol
mov
sbb
or
or
push
das
dec
fild
sbb
mov
cld
in
jl
enter
cmp
daa
rol
mov
fmulp
push
int
ss
or
test
es
fldcw
in
jae
loop
adc
mov
add
inc
int3
movs
mov
sbb
xchg
xor
jne
lods
in
inc
rcr
push
jne
mov
(bad)
cmp
in
inc
push
les
or
dec
sub
adc
jbe
stc
movs
scas
ja
xchg
push
pop
xchg
fsub
push
pop
mov
mov
and
outs
jecxz
ins
cld
xor
jmp
into
dec
gs
pop
aam
mov
pop
(bad)
ins
mov
mov
xchg
movs
mov
clc
push
jmp
push
add
dec
mov
sbb
jo
jae
mov
dec
mov
nop
test
aaa
cmp
jne
cmp
pop
pusha
add
xchg
out
or
iret
(bad)
mov
pop
dec
(bad)
dec
es
add
outs
rcl
xor
outs
mov
fs
ins
enter
mov
int3
fsubp
xor
adc
adc
or
jo
mov
fcmovbe
xchg
ret
rcr
add
push
mov
push
test
dec
pop
in
push
push
mov
sti
call
xchg
out
repz
ret
jo
pop
loopne
cmp
or
add
push
out
lea
adc
call
les
ret
ret
ret
popa
repz
lahf
hlt
xchg
xor
sub
retf
sub
push
fmul
cli
adc
das
shl
daa
into
ins
inc
or
(bad)
cmp
or
cmp
mov
add
out
loopne
jbe
add
mov
or
rep
jmp
inc
retf
ins
push
les
pusha
and
int
ret
cmp
lock
sbb
xchg
xor
and
shl
ror
jnp
xchg
iret
int
call
stos
push
sub
dec
in
mov
syscall
es
adc
push
rcl
pop
add
add
in
jae
(bad)
cmp
test
mov
pusha
push
xor
mov
aad
hlt
(bad)
shl
or
and
xor
iret
or
pop
lds
sub
sub
loop
dec
add
jg
xor
aad
pop
cmps
and
pushf
jbe
in
hlt
ret
lods
xchg
xchg
sbb
xor
xchg
xchg
(bad)
or
jmp
addr16
ja
iret
pop
je
push
hlt
cs
adc
(bad)
out
dec
pop
jo
(bad)
(bad)
loope
(bad)
dec
mov
mov
and
xor
stc
enter
sub
(bad)
mov
aad
das
aas
push
mov
jae
push
add
ds
xor
pop
adc
int3
mov
data16
scas
fwait
xlat
sbb
cmp
mov
in
call
push
adc
out
xchg
inc
stos
psrld
mov
mov
xor
jecxz
data16
push
cmps
cmps
mov
inc
cdq
cmp
arpl
stos
add
xchg
iret
std
sar
in
push
imul
repz
ins
(bad)
repz
inc
push
push
call
pop
jno
in
(bad)
pop
xchg
sub
out
jmp
into
repz
mov
ret
hlt
mov
mov
pop
xor
retf
inc
adc
fwait
(bad)
hlt
leave
xor
ds
ret
ror
xor
cwde
and
into
mov
jbe
add
xchg
jmp
imul
mov
loopne
jg
mov
jnp
dec
out
(bad)
stos
ss
test
dec
or
out
sbb
(bad)
adc
inc
shr
add
xor
ret
loope
call
add
adc
add
fxch
retf
jmp
call
(bad)
in
rcr
inc
(bad)
daa
nop
pusha
fsub
mov
xlat
(bad)
mov
in
fs
mov
dec
fwait
add
or
sbb
jle
xchg
mov
rcl
hlt
xchg
ds
push
js
imul
arpl
test
xchg
aaa
and
imul
and
add
mov
imul
mov
sbb
push
retf
bound
cmp
sub
xchg
mov
sub
pop
and
pop
in
pop
dec
movs
inc
movs
push
call
(bad)
push
cmps
cli
jle
inc
loope
retf
sub
sub
cmp
aas
fimul
mov
imul
outs
mov
(bad)
outs
pop
push
pop
mov
lods
jl
scas
cld
aas
ins
jmp
dec
push
in
pop
lods
(bad)
xchg
shl
addr16
rol
pop
js
scas
adc
jo
lea
(bad)
sete
(bad)
clc
pop
xchg
ret
cmps
add
and
mov
mov
dec
push
xor
sub
lods
cmp
push
icebp
or
jae
pusha
test
and
add
scas
dec
push
das
imul
sar
shr
lods
sub
pop
test
push
frstor
inc
push
mov
pop
mov
repz
rol
add
les
inc
fcom
adc
mov
pushf
push
sub
lahf
mov
inc
(bad)
mov
mov
and
mul
sbb
adc
inc
loope
outs
pop
dec
dec
js
inc
stos
dec
mov
stos
repz
or
cmp
or
into
mov
nop
jno
call
adc
adc
jbe
jmp
inc
mov
in
cmp
ficomp
push
sbb
js
(bad)
fldenv
fild
fs
mov
cmp
jae
adc
xor
pop
loop
jl
pushf
(bad)
pop
and
mov
fist
dec
sbb
xor
test
call
mov
nop
adc
push
lock
test
xchg
push
mov
push
jmp
inc
bound
sub
arpl
jnp
(bad)
movs
xchg
lds
pop
sbb
data16
(bad)
mov
mov
xor
fadd
in
fnstsw
lea
es
test
mov
sub
inc
lahf
es
fwait
out
sbb
ficomp
repz
cmps
jbe
mov
test
pop
and
es
jae
outs
cmps
jbe
int3
mov
add
add
add
inc
sub
inc
test
jmp
and
pop
push
xchg
sub
jecxz
dec
sbb
sub
mov
push
cwde
push
fwait
call
mov
rol
mov
pop
retf
ins
stos
les
jg
mov
cmps
retf
push
nop
lock
sub
mov
or
jo
fild
movs
push
loop
xchg
mov
stc
and
xchg
cmps
lock
adc
fnsave
cmp
inc
mov
xor
(bad)
lock
movs
and
popa
scas
adc
or
push
mov
mov
(bad)
jge
es
dec
xchg
(bad)
jo
(bad)
(bad)
xchg
loopne
push
lahf
mov
jmp
mov
popf
push
imul
dec
dec
and
sub
jae
mov
dec
repz
mov
dec
sub
aas
ins
sbb
sbb
daa
jbe
push
cmc
imul
(bad)
mov
push
pop
xor
jg
not
pop
test
imul
mov
sub
ins
xchg
sbb
inc
inc
outs
fdivr
pop
sar
stos
pop
push
dec
cld
jmp
push
das
icebp
cmp
or
adc
das
stos
sbb
jns
mov
ins
retf
and
rcr
call
jp
pop
and
shl
imul
es
pop
fs
sub
das
idiv
sbb
or
fld
dec
inc
aad
dec
jnp
(bad)
fstp
add
mov
cmp
scas
and
push
pusha
jge
movs
cmps
jnp
jo
stos
(bad)
shl
aam
retf
inc
imul
dec
iret
pop
or
repz
and
sti
ret
mov
mov
push
(bad)
jg
mov
hlt
lahf
mov
(bad)
(bad)
and
adc
inc
fldenv
pop
fsubp
jno
or
jmp
data16
mov
cmp
inc
and
fcomp
ss
sti
add
dec
mov
neg
xchg
xlat
fcom
stos
inc
lock
sub
inc
rcr
in
xchg
push
cmc
mov
pop
cmc
in
inc
js
push
mov
sahf
and
sti
popa
adc
leave
mov
std
cwde
shl
lds
push
ret
jg
cmp
mov
push
inc
and
push
stos
repz
mov
dec
iret
cdq
idiv
mov
scas
adc
push
fnstsw
fadd
inc
mov
fiadd
gs
fst
sub
pop
loop
jmp
neg
clc
pop
sti
aad
sub
jge
(bad)
push
adc
push
mov
mov
xor
xchg
pop
test
fnstenv
and
out
inc
add
push
xchg
inc
pushf
adc
imul
mov
jge
aas
sub
pop
(bad)
push
add
rdpmc
pop
cmp
jbe
in
push
stos
jmp
adc
push
jae
into
arpl
mov
sti
dec
pop
xor
push
(bad)
mov
cmp
aam
adc
xchg
sub
mov
push
push
mov
(bad)
ffree
mov
cmp
sbb
imul
pop
enter
push
mul
adc
dec
rol
rcl
cs
push
mov
test
movs
pop
jle
cli
sbb
hlt
out
add
mov
push
shr
jne
shl
call
jmp
jno
cwde
xchg
ret
int
add
sub
xchg
movhps
adc
add
leave
loop
mov
rcr
mov
xchg
and
cwde
pushf
or
pop
rcr
mov
not
scas
je
or
xchg
add
lahf
test
popa
sub
add
inc
(bad)
in
je
leave
rcl
rcl
(bad)
in
lods
imul
push
mov
cmps
out
or
int3
mov
aam
mov
(bad)
sub
test
ins
add
cs
inc
fimul
in
pop
xchg
push
fwait
pop
jge
adc
jae
cmp
lahf
cwde
push
scas
lahf
mov
mov
mov
adc
mov
xor
in
jmp
test
test
xor
cmp
fmul
(bad)
clc
or
pop
pop
and
out
les
mov
ins
jns
and
mov
pop
arpl
mov
and
je
dec
pop
dec
xrelease
idiv
outs
mov
jmp
cmp
push
push
repnz
and
fwait
mov
xor
xchg
xchg
pop
hlt
sbb
(bad)
pop
fisub
and
mov
add
mov
pop
js
mov
pop
sbb
ss
pop
stos
pop
int
push
out
cs
fs
add
bound
ror
jp
mov
loop
push
int
mov
jmp
xchg
mov
cmp
enter
mov
sar
ret
push
pusha
push
mov
lods
addr16
mov
jo
jge
bound
xor
dec
into
push
jge
retf
cmc
mov
jbe
sub
popf
stc
pop
sbb
in
push
xor
lods
pop
mov
scas
xchg
paddd
push
sbb
sub
dec
xchg
stos
inc
das
test
mul
sub
sub
inc
imul
push
jno
data16
push
push
add
aaa
int3
repz
or
mov
lods
call
or
inc
pop
inc
sub
xor
scas
jb
cmp
cmp
(bad)
fdiv
iret
sti
std
adc
xchg
hlt
cmp
pusha
ins
cmp
sar
cld
and
pop
mov
xlat
lods
test
or
xchg
mov
pop
mov
aaa
movs
xor
mov
push
mov
xchg
aam
out
cmp
rcr
fwait
mov
jg
int3
mov
int
adc
inc
ds
push
sub
rcl
in
aad
jg
mov
fmul
add
inc
push
inc
loope
xor
inc
aad
jge
cmps
or
imul
or
jmp
sar
sub
jmp
xlat
and
repz
daa
mov
cli
mov
enter
xor
pop
mov
and
into
adc
loope
jp
repz
push
test
fcom
or
xchg
idiv
push
fmul
inc
stos
push
inc
add
xchg
pop
sub
adc
jecxz
mov
cmc
xchg
gs
std
inc
mov
out
jl
push
fisub
lahf
xchg
sub
push
jns
pop
outs
test
inc
or
push
sbb
mov
ret
movs
mov
outs
es
pop
pop
sar
call
and
jg
inc
push
jno
call
mov
mov
mov
pop
aas
repz
(bad)
(bad)
inc
sub
xor
add
mov
and
xor
jo
popf
js
add
lock
sub
xlat
push
inc
pop
push
(bad)
push
rol
or
(bad)
jo
inc
ret
xor
add
push
dec
xchg
add
mov
jno
mov
add
mov
ins
or
cmp
push
call
repz
cmp
(bad)
xchg
xchg
imul
sub
xlat
stos
adc
cmp
inc
popa
mov
cmp
sub
retf
sub
loop
mov
push
xlat
adc
push
inc
mov
mov
fisubr
pop
dec
pop
jnp
xchg
add
jae
inc
dec
xchg
xor
push
add
xor
ret
arpl
add
lods
mov
push
pop
adc
imul
sbb
cs
popf
jnp
sbb
adc
push
mov
jnp
aaa
fs
sbb
xchg
pushf
inc
pop
addr16
(bad)
adc
rcl
call
push
dec
stos
xor
stos
outs
(bad)
mov
or
int
(bad)
sbb
gs
sbb
mov
mov
(bad)
call
pop
cmp
push
ss
popa
jmp
bsr
ja
bound
cwde
call
sub
pop
sub
sub
pop
xchg
mov
stos
(bad)
aam
rcr
rol
movs
scas
mov
enter
push
pminsw
push
in
pop
pushfw
mov
sbb
push
dec
jmp
and
in
bound
imul
fucomp
fwait
sub
popf
test
mov
xchg
and
sbb
and
stos
jmp
xchg
pop
shr
jbe
add
jbe
add
cmp
retf
xchg
push
jno
es
aad
shl
test
mov
mov
data16
cmp
(bad)
jnp
xchg
add
movs
pop
es
daa
dec
fbld
and
pop
push
and
mov
shl
push
push
clc
mov
or
je
into
loopne
push
jmp
sub
push
push
mov
imul
mov
xor
cmps
sub
addr16
rol
sbb
dec
(bad)
cdq
dec
jno
sbb
xor
inc
js
adc
push
pop
jne
fnstenv
jbe
jb
pop
les
cmps
repz
lods
jp
arpl
push
mov
hlt
shl
add
fcmovb
out
mov
jmp
mov
and
xchg
mov
dec
xor
xchg
jmp
ss
add
mov
data16
jae
repnz
sbb
shr
lock
push
sbb
mov
and
cmps
add
pop
fmul
jne
adc
test
dec
inc
lock
sub
fistp
ins
cld
hlt
out
clc
clc
jae
loopne
daa
xlat
xchg
jp
adc
mov
cmp
bound
dec
or
push
mov
hlt
es
and
xchg
into
arpl
mov
inc
add
adc
mov
push
call
mov
loope
rcr
cwde
or
(bad)
gs
rol
loope
fstp
mov
or
ins
in
adc
mov
fmul
or
stos
inc
xlat
sbb
cwde
sub
and
xchg
jg
int3
jp
daa
jmp
push
xchg
xchg
xor
adc
and
cwde
out
xor
jge
and
pushf
out
adc
cli
mov
aad
pop
stos
pop
adc
call
jp
or
retf
jecxz
pop
ficomp
push
es
add
scas
dec
call
cmp
xor
ds
scas
jmp
jnp
dec
aam
outs
out
dec
ret
dec
test
dec
sub
cli
pop
mov
test
or
clc
into
push
outs
and
stc
mov
(bad)
and
call
mov
aas
arpl
add
mov
inc
sbb
xchg
pop
pop
cli
(bad)
(bad)
call
sub
cmp
mov
adc
dec
and
pushf
sbb
call
imul
adc
fisttp
call
xchg
cld
xor
dec
cmp
aas
mov
xchg
mov
(bad)
mov
test
les
mov
push
repnz
mov
jge
pop
or
lock
cmp
(bad)
cwde
inc
xchg
mov
nop
or
aam
jmp
test
mov
inc
add
xchg
sub
inc
stos
sub
or
jp
lea
push
pop
xlat
adc
cmc
mov
hlt
xchg
pop
iret
sti
stc
xlat
fnsave
shl
enter
jmp
add
and
jae
xlat
sahf
jmp
mov
push
daa
retf
int
hlt
cmp
xor
xchg
scas
jl
(bad)
fidiv
mov
add
or
push
dec
xor
sub
mov
mov
xchg
or
push
ret
cmp
inc
mov
mov
dec
xor
mov
sbb
scas
in
mov
repz
mov
ss
mov
sbb
inc
imul
pop
daa
lds
pop
cdq
mov
call
sub
scas
retf
dec
sbb
loop
mov
dec
repz
aas
push
xchg
loop
mov
jle
cmp
cmp
(bad)
sbb
ror
push
arpl
idiv
push
test
and
aam
mov
out
imul
popa
test
jge
mov
sub
pop
mov
cmp
inc
lock
daa
pop
pop
cmp
mov
push
or
pop
cli
rol
adc
call
sub
nop
ins
sti
mov
inc
ret
dec
jmp
or
sbb
or
push
sahf
loop
and
ins
dec
xor
and
ins
or
or
jo
mov
es
pop
out
cmp
(bad)
aaa
and
and
push
jle
mov
cmovne
push
and
faddp
sahf
fdivr
(bad)
jb
push
imul
cmp
push
vcvttss2si
into
sub
loope
fnsave
mov
inc
mul
outs
cmp
jae
scas
adc
mov
mov
lahf
mov
fsubr
mov
stc
mov
call
out
sti
stos
imul
icebp
in
xor
shl
and
in
daa
xchg
mov
shl
aad
adc
shl
call
loop
adc
mov
test
push
sub
and
sti
aad
mov
push
push
push
jmp
test
idiv
dec
gs
pop
into
xor
call
mov
add
pop
movs
add
aad
mov
push
outs
fcom
test
push
jp
adc
push
push
rcr
jno
(bad)
xchg
cmps
stc
fistp
push
clc
std
pop
push
outs
int
in
mov
xchg
in
mov
fst
add
out
loop
sub
inc
out
inc
popf
jmp
xor
lahf
mov
outs
mov
call
jge
pop
sub
cli
les
jnp
int3
adc
push
mov
push
adc
or
jp
cmp
sahf
lock
imul
mov
jl
or
dec
lock
dec
lods
xchg
pop
fwait
adc
pop
addr16
fwait
popf
imul
gs
ja
pushf
sbb
movs
mov
mov
mov
out
hlt
cmps
loopne
dec
retf
push
pop
xor
ror
idiv
or
add
jno
stc
iret
add
int
pop
repnz
rcl
push
add
mov
fwait
scas
mov
or
lock
jle
mov
and
push
out
fild
lock
icebp
mov
int3
sbb
push
in
and
call
mov
jbe
stc
cs
repnz
mov
stos
or
lods
lods
imul
std
rol
shl
push
sub
ja
jg
mov
lock
or
jns
repz
sub
xchg
dec
adc
aam
ds
imul
repz
jne
icebp
pop
or
scas
inc
inc
dec
fisubr
loope
add
das
leave
adc
enter
adc
sub
lods
mov
xchg
xchg
push
bswap
aaa
inc
mov
xor
jmp
in
out
aam
xchg
xchg
mov
test
lock
mov
push
loopne
mov
mov
ret
adc
movs
fs
shr
test
adc
out
jmp
imul
arpl
cdq
in
mov
mov
cmp
arpl
sahf
push
ins
das
(bad)
fld
sbb
push
cdq
mov
popf
lds
pop
dec
sub
dec
cs
arpl
call
dec
ds
pop
fs
add
and
in
cdq
push
stos
inc
nop
jnp
add
xchg
push
leave
iret
xchg
pushf
rcr
dec
psubusw
movs
sub
movs
xor
push
mov
rcl
hlt
cmc
(bad)
jne
mov
mov
pop
mov
dec
push
dec
mov
fistp
push
jbe
in
mov
or
mov
cmp
and
cmp
or
add
push
and
mov
mov
dec
adc
sbb
lock
bound
push
out
cmp
sti
pop
add
sbb
jnp
dec
es
jmp
jbe
xor
ds
call
adc
push
xchg
inc
call
xor
jnp
inc
adc
dec
mov
xchg
jno
sbb
adc
cwde
mov
jge
jg
mov
xchg
mov
mov
jmp
mov
clc
loop
sti
pop
clc
xor
cmp
fwait
mov
mov
fcomp
inc
lods
popa
ffree
cmps
inc
adc
inc
repnz
sub
fiadd
dec
or
fidivr
test
hlt
push
sbb
clc
leave
push
add
pop
shl
mov
hlt
cs
shl
retf
ins
mov
inc
xchg
pop
dec
imul
xor
mov
cmc
scas
jnp
outs
mov
out
fist
cmp
pusha
or
pushf
(bad)
xchg
mov
jecxz
adc
push
(bad)
push
xchg
fcomi
and
sbb
repnz
(bad)
sti
fidiv
push
mov
push
inc
mov
jge
pop
mov
aam
aaa
inc
ins
xchg
fs
sahf
add
mov
movs
bnd
mov
jns
push
mov
mov
fsubr
test
add
and
pop
les
sahf
jmp
fisub
out
fs
(bad)
not
jae
ins
std
in
jmp
cld
addr16
in
outs
jl
icebp
pop
jp
dec
jb
and
add
in
push
or
jno
(bad)
pop
(bad)
ror
cmp
call
push
pop
retf
add
out
hlt
cmp
sar
adc
add
std
inc
inc
(bad)
sbb
cmps
loopne
or
mov
add
shl
xchg
add
sub
push
mov
lea
cmp
fiadd
nop
movs
ds
(bad)
in
mov
and
(bad)
pusha
and
jo
xchg
sar
jbe
pusha
int3
cmp
mov
retf
xlat
in
int
fbstp
dec
sbb
push
lods
xor
xor
cmp
cmp
sub
fild
cmp
icebp
fwait
cmp
mov
sbb
push
(bad)
aam
or
imul
and
aaa
pop
mov
sub
(bad)
push
arpl
daa
jmp
inc
scas
and
(bad)
rcl
add
je
sbb
mov
ror
or
jo
stos
inc
and
pop
push
push
xchg
lahf
push
push
mov
mov
rcl
or
push
adc
rol
je
adc
push
loopne
sbb
pop
(bad)
js
movs
push
popf
mov
ins
mov
xchg
shl
dec
loopne
out
and
pop
ja
push
add
(bad)
(bad)
jmp
sbb
push
push
sbb
jbe
clc
stos
jp
bound
in
mov
xchg
das
push
aas
dec
push
adc
add
jmp
add
ins
pop
jbe
scas
jl
mov
push
dec
or
call
call
call
cs
std
cmps
(bad)
jae
imul
sti
inc
jle
mov
jg
stc
gs
(bad)
stc
mov
push
mov
jp
xchg
push
(bad)
clc
push
mov
(bad)
stos
repnz
rol
inc
das
jl
test
mov
jo
jbe
xchg
inc
js
in
pop
mov
xor
cmp
ja
cmp
pop
loop
mov
rol
(bad)
inc
or
adc
jp
xchg
add
ds
sub
icebp
jp
je
test
enter
jb
cmp
mov
(bad)
mov
mov
push
in
xor
cmp
jle
int
jbe
out
mov
cmp
mov
add
mov
push
imul
or
jp
test
adc
xor
cld
in
retf
cmp
mov
jmp
pop
iret
push
out
mov
or
das
lods
outs
out
mov
scas
xor
out
adc
inc
dec
cwde
or
dec
jo
add
mov
mov
or
inc
jne
pop
pop
push
xchg
push
movs
and
mov
cmp
or
test
xchg
mov
or
xchg
mov
mov
inc
pop
dec
fadd
xor
cwde
xor
dec
daa
sub
addr16
outs
pop
aam
call
int
inc
stos
daa
add
or
aaa
pop
cdq
(bad)
adc
dec
fs
dec
lahf
test
test
or
pop
sub
int
outs
xchg
data16
mov
mov
test
int3
and
test
out
daa
scas
rcr
sub
mov
lahf
mov
mov
gs
jl
fisttp
aam
xchg
inc
xchg
jmp
jmp
sub
rcr
dec
or
daa
dec
in
loop
dec
adc
(bad)
sub
and
jp
popa
loope
stc
inc
out
nop
or
sub
fcmovbe
jle
mov
jg
shl
pop
aas
loope
out
mov
mov
xor
xchg
and
ins
popa
arpl
xchg
out
stos
mov
inc
call
into
or
lds
scas
ret
lock
cs
int
pop
cmps
mov
mov
pop
stos
mov
sub
fstp
in
inc
rol
call
lahf
pop
jg
add
xor
mov
das
sti
mov
in
ss
out
ret
fadd
fcompp
out
push
int
fwait
pop
jp
push
movs
mov
scas
push
xlat
push
lahf
sbb
or
pop
sbb
jle
push
jl
cmp
bound
sbb
lds
sbb
push
mov
mov
lods
repz
push
mov
cmp
mov
dec
rcr
pop
in
mov
cmp
aaa
je
and
bound
cmp
pusha
out
stos
push
rol
int3
adc
push
cmp
push
mov
xchg
hlt
ds
mov
rcr
test
enter
push
xchg
loopne
cmp
and
mov
and
scas
sbb
sub
ds
add
(bad)
xor
jb
lea
aad
aam
cmp
cmp
or
arpl
xor
xor
sub
sub
and
and
repz
adc
mov
mov
or
pushf
bound
xchg
pop
leave
pop
ss
inc
add
int
sbb
mov
and
in
mov
xchg
je
stc
xor
push
aas
aaa
sbb
jmp
(bad)
std
daa
cdq
(bad)
mov
adc
(bad)
and
scas
jecxz
std
popa
lds
cmp
outs
mov
add
ins
xor
sub
xor
cli
call
cmp
dec
fistp
in
or
pop
fsub
stos
and
leave
lea
sub
and
shl
lea
mov
shl
daa
pop
xchg
mov
jg
sahf
inc
stc
fldenv
shl
pop
sahf
pop
outs
outs
test
xor
mov
ret
sub
xchg
test
jno
(bad)
std
sbb
or
mov
mov
js
movs
dec
cli
outs
pop
outs
ror
rcl
add
and
arpl
popf
lods
std
adc
xlat
mov
cs
adc
mov
mov
test
jns
jb
jbe
mov
cmp
and
dec
cld
and
inc
movaps
movs
stos
mov
and
ja
mov
inc
add
xchg
out
mov
cmps
retf
xchg
push
outs
les
sbb
outs
mov
xor
push
popa
fcomp
(bad)
cdq
mov
aam
inc
(bad)
leave
mov
cmp
bound
cld
add
sbb
popf
aam
and
test
add
test
movs
or
xor
and
push
les
(bad)
jecxz
push
jb
pop
mov
pop
(bad)
movs
mov
repnz
(bad)
adc
dec
movs
mov
test
leavew
mov
adc
ds
sub
loop
sbb
sub
enter
inc
(bad)
push
gs
pop
sub
mov
pop
mov
cmp
jmp
jle
mov
push
pushf
cmps
fimul
lods
mov
dec
sar
cmp
ins
cmc
fcmovb
leave
mov
fldcw
inc
mov
inc
add
stos
scas
sbb
loope
xor
add
dec
arpl
dec
inc
aaa
mov
push
mov
pop
jne
mov
in
jbe
inc
scas
mov
sub
xor
es
data16
cdq
mov
loopne
(bad)
cmp
jns
adc
es
daa
das
mov
jne
mov
adc
push
pop
jo
sbb
daa
(bad)
fs
sub
nop
(bad)
mov
lds
loope
adc
jecxz
cmps
call
test
xchg
dec
scas
pop
mov
popa
push
arpl
mov
xchg
jmp
dec
fwait
loope
jns
shr
pop
lock
sub
imul
(bad)
out
lods
lea
cdq
mov
and
and
mov
loope
mov
cli
loopne
test
fs
(bad)
leave
inc
pop
dec
mov
jmp
mov
and
sub
scas
and
adc
jbe
cmp
push
xor
push
push
adc
mov
pop
daa
leave
call
mov
imul
nop
stos
xchg
in
dec
sbb
ja
cmps
and
dec
inc
fcomp
dec
gs
push
jg
clc
popa
pop
lock
fdivr
shl
aad
fnstenv
addr16
sub
enter
fcomp
std
jge
fadd
out
mov
ins
inc
jecxz
jnp
retf
xor
(bad)
xchg
fmul
in
or
rcl
das
mov
cmp
hlt
jbe
(bad)
cld
rcl
dec
inc
or
push
jnp
iret
mov
arpl
jo
cmp
xchg
dec
sub
aam
dec
nop
mul
lods
dec
movs
jecxz
mov
icebp
xor
dec
mov
sub
adc
xor
sbb
push
imul
add
leave
dec
ds
lds
push
nop
dec
pop
mov
fimul
cmp
test
fidiv
lds
call
ret
adc
std
int
jle
loope
lahf
jno
stos
pusha
cs
push
fadd
and
mov
jae
push
sahf
add
mov
mov
out
out
xor
adc
jle
or
js
xchg
aam
popf
lds
pushf
mov
mov
outs
or
test
mov
inc
adc
pop
adc
sub
fiadd
xor
div
xor
stos
sbb
fsub
mov
sbb
outs
mov
pop
sub
mov
push
clc
outs
js
fwait
iret
cmp
pop
fs
lods
add
cmp
sti
ins
mov
xchg
loop
dec
dec
xchg
mov
lds
stc
mov
jns
cld
adc
inc
dec
jp
into
addr16
enter
jo
(bad)
mov
int
test
mov
xchg
push
mov
xchg
inc
add
aam
retf
rcr
es
xchg
inc
push
inc
mov
dec
xchg
rcr
xor
cmps
mov
pop
cmp
sar
add
push
jmp
jecxz
test
cmc
mov
dec
int3
or
inc
ss
and
push
add
pop
add
jnp
std
jmp
xor
push
sbb
inc
(bad)
popf
out
(bad)
test
xor
xchg
mov
repnz
mov
hlt
add
jno
mov
jns
dec
sbb
jmp
xor
imul
out
cs
mov
or
ss
out
dec
mov
mov
adc
add
or
inc
popf
(bad)
xchg
mov
aaa
fwait
jne
and
retf
arpl
adc
mov
shr
inc
jns
daa
fisub
mov
sbb
sub
mov
sbb
out
dec
mov
ror
aad
mov
ficomp
pop
icebp
jecxz
fwait
test
dec
adc
jle
mov
pop
adc
jmp
inc
sbb
sbb
jne
data16
aam
cs
and
push
clc
cmps
inc
lds
jae
data16
sub
jmp
sahf
sub
imul
ror
jns
sub
push
call
or
mov
dec
pop
xchg
rcr
mov
mov
test
cmp
out
inc
movs
dec
fnstsw
bound
out
mov
call
idiv
shl
dec
stc
sbb
xor
push
xchg
cs
aad
add
icebp
icebp
adc
mov
xor
pushf
into
outs
retf
int
pop
aaa
(bad)
jp
jnp
(bad)
jmp
shr
ret
xor
jp
and
leave
shl
(bad)
sysenter
pop
jne
and
sbb
ins
cmp
jnp
jbe
out
push
mov
sub
push
xchg
ins
sub
iret
clc
fistp
movs
out
add
(bad)
lea
mov
mov
enter
data16
das
out
imul
pop
pop
in
fdiv
aas
scas
sbb
cs
sub
lahf
add
pop
xchg
movs
and
mov
rol
lock
xlat
sub
and
jnp
jb
stc
fdivrp
lahf
out
lods
lods
inc
fisub
mov
cs
into
mov
std
inc
lock
mov
(bad)
in
and
or
xchg
in
jns
inc
jmp
test
outs
in
or
ret
rcr
push
add
and
mul
mov
push
and
sub
mov
pop
sbb
sbb
sub
push
scas
inc
stos
sar
aad
or
into
jno
jle
mov
jnp
mov
mov
pop
sbb
push
mov
jle
cld
fldenv
push
cwde
rol
pop
aaa
ds
je
inc
sahf
(bad)
icebp
jbe
fbstp
xchg
(bad)
and
push
mov
sub
scas
imul
in
repnz
test
(bad)
cld
sub
push
add
mov
fstp
mov
push
inc
dec
jmp
in
or
inc
sub
retf
add
cmp
mov
test
push
add
or
xor
aam
loop
dec
cli
and
pop
mov
fwait
aad
dec
mov
pop
and
mov
(bad)
push
jp
xchg
jo
pop
and
call
push
adc
mov
jge
fisttp
cwde
daa
dec
loope
pop
leave
add
es
or
out
ret
mov
or
nop
push
pop
ja
jecxz
loopne
bound
dec
div
jmp
adc
cs
dec
pop
daa
push
cmp
xchg
and
sti
sbb
add
push
std
xchg
inc
aas
and
xchg
xor
push
mov
fcmovbe
aam
dec
outs
int
test
or
mov
push
push
cwde
lahf
pop
aas
es
ret
(bad)
repnz
and
push
pop
pop
mov
xor
mov
jmp
ins
arpl
fwait
into
sub
loopne
jg
lods
ss
stos
and
outs
dec
jns
xchg
cmps
sti
int
or
and
fdiv
mov
cdq
mov
jo
repz
inc
scas
sbb
cmp
(bad)
std
pop
push
inc
out
jbe
les
add
mov
outs
in
pop
inc
fucomp
dec
fld
popa
arpl
mov
jmp
mov
add
or
push
jae
mov
xchg
xor
adc
push
daa
fisttp
int3
cmp
adc
loope
test
shl
cmp
enter
dec
xor
jns
dec
mov
mov
adc
sub
inc
(bad)
xor
rcl
mov
stos
loop
mov
push
xchg
outs
scas
add
lods
jnp
push
jae
pop
lock
xchg
ins
test
fidiv
push
outs
dec
mov
adc
fld
dec
push
cs
xchg
jp
adc
ss
ja
or
mov
test
fmul
cmp
or
out
ret
cmp
push
data16
sar
push
mov
in
add
xchg
and
iret
(bad)
lahf
iret
mov
adc
nop
cmp
loopne
or
adc
cmps
and
call
jg
xor
pop
or
movs
ficomp
fild
stos
jno
(bad)
cmp
outs
pop
xchg
mov
gs
add
scas
push
mov
jecxz
ins
xor
add
sub
shl
mov
or
inc
mov
fnstsw
push
rcl
adc
jge
push
push
cmp
lock
xchg
ret
jecxz
adc
stos
adc
pop
dec
das
cmp
fidiv
dec
test
jo
cmovns
xchg
mov
xchg
sbb
pop
dec
pop
jnp
jmp
dec
sub
ins
adc
xor
dec
enter
xor
movs
add
mov
lock
inc
and
(bad)
movs
in
pop
sub
mov
enter
int
add
(bad)
retf
jge
jecxz
mov
and
xor
cmps
mov
inc
popa
sti
jmp
inc
dec
(bad)
fild
push
mov
iret
mov
push
stos
cmp
xchg
gs
in
loope
popa
popf
fnsave
jo
jp
fadd
iret
int3
or
hlt
xchg
inc
ja
inc
inc
scas
daa
daa
and
pop
jmp
pusha
rol
jecxz
cmp
scas
jno
mov
sub
into
mov
(bad)
mov
outs
pop
add
cmp
cmp
movs
out
hlt
sbb
(bad)
fisub
jp
ficomp
push
mov
fxch
mov
(bad)
push
out
rol
loop
clc
mov
shl
sbb
jmp
js
mov
stos
aas
dec
mov
and
pop
idiv
iret
pop
sbb
mov
push
xchg
cmp
jmp
aas
add
xlat
cdq
fcmovb
in
or
popa
(bad)
mov
mov
enter
jae
das
inc
rol
addr16
mov
js
adc
inc
dec
sahf
mov
mov
aas
or
mov
(bad)
mov
jns
adc
adc
mov
mov
cmp
fstp
sahf
mov
fiadd
sub
pushf
cmp
mov
imul
mov
neg
mov
sbb
jg
inc
and
or
scas
sbb
out
repnz
sbb
in
adc
mov
jg
loopne
imul
fisttp
outs
inc
mov
pop
xor
jmp
int3
jl
(bad)
neg
imul
cmp
hlt
mov
mov
sub
in
mov
adc
in
pop
shl
jne
inc
mov
iret
cmp
pop
cmps
ds
add
adc
test
push
cmp
jbe
push
mov
mov
push
mov
lods
mov
adc
sub
cli
mov
jg
arpl
aas
sbb
add
or
jo
push
aad
cmp
push
xchg
aas
sub
inc
and
aam
push
aaa
xor
dec
loop
jg
outs
mov
imul
ds
in
dec
les
repnz
pop
mov
pop
aam
adc
mov
test
push
stos
xchg
xor
(bad)
cmp
es
mov
cmps
mov
xchg
fnstcw
lods
adc
jle
xor
mov
xor
sub
xor
add
and
loop
pushf
ins
cli
cmp
cmc
cmp
inc
icebp
xchg
jno
sbb
pop
cmps
push
push
and
xchg
(bad)
ss
adc
jl
push
rol
out
int3
dec
push
mov
jbe
push
pop
int3
inc
(bad)
hlt
sub
mul
mov
out
or
lahf
mov
mov
shl
outs
inc
out
ss
cmps
mov
or
sub
scas
rcl
repz
inc
scas
cmp
adc
loope
fisttp
mov
mov
repnz
sub
push
pop
dec
in
lock
jbe
cmp
dec
sbb
jb
sub
jo
loope
adc
mov
arpl
push
xor
adc
adc
pop
pop
lea
pop
and
(bad)
aam
mov
in
inc
movs
loope
cmp
into
sbb
adc
clc
lock
jl
sbb
jbe
add
lods
cs
in
lods
stos
popa
sub
outs
cmps
loop
add
sbb
dec
and
dec
loope
loopne
in
inc
add
sbb
mov
and
lea
bound
dec
adc
sar
pusha
mov
es
adc
aas
outs
and
dec
hlt
pop
jbe
movs
cld
and
das
rol
xor
mov
inc
pop
push
popf
sar
lods
lock
add
cmp
mov
dec
and
js
call
pop
fisubr
pushf
scas
inc
push
les
or
clc
scas
outs
inc
sbb
pusha
bound
inc
mov
shl
inc
js
xor
adc
push
in
sub
mov
pop
cmp
xchg
scas
fcomp
inc
mov
retfw
pusha
mov
fstp
nop
mov
jmp
das
adc
sub
ror
mov
loopne
ss
add
mov
cmp
out
jg
mov
repnz
data16
stc
jge
fwait
sbb
add
mov
std
and
in
add
push
js
je
pop
out
mov
adc
push
push
push
loope
fnstcw
inc
sti
sub
mov
push
js
xchg
stc
adc
dec
jo
inc
loope
push
mov
call
mov
out
std
sbb
xchg
push
std
xor
dec
outs
test
icebp
xlat
and
cs
jg
test
sub
adc
inc
ret
jo
mov
pop
mov
cmc
jl
xor
inc
stc
pushf
ins
push
xchg
pop
jp
sbb
std
jl
test
jl
test
push
push
jne
and
push
push
or
inc
lahf
lods
fcomp
dec
out
in
repz
call
dec
add
sbb
adc
inc
xor
xor
mov
sub
popa
int
(bad)
in
pop
cld
scas
jmp
scas
xor
mov
nop
jl
add
repz
dec
call
and
jns
sub
jns
inc
pop
adc
mov
(bad)
mov
pop
adc
and
(bad)
mov
adc
mov
cmps
mov
iret
movs
push
and
adc
mov
inc
das
and
mov
or
ret
call
lds
push
outs
cmps
icebp
mov
aam
call
adc
das
test
pop
dec
adc
or
cmp
aas
rcr
xor
das
inc
retf
xchg
(bad)
pop
push
sahf
xchg
jo
push
sahf
sub
pusha
out
(bad)
aam
xor
mov
popf
dec
clc
push
fldcw
shl
lea
les
pushf
add
fisub
sti
xchg
lods
test
or
and
jecxz
pop
push
mov
movs
mov
sbb
scas
or
or
sbb
push
pop
ret
cmps
jmp
fmul
adc
push
dec
mov
pop
xchg
add
jo
mov
lahf
iret
dec
jb
inc
(bad)
sbb
test
das
rol
cmp
jmp
imul
scas
aaa
pusha
sbb
pop
mov
mov
or
or
aas
test
movs
shr
xchg
ins
icebp
retf
push
ja
lock
add
mov
pop
pusha
xchg
sub
pusha
inc
add
and
xchg
jns
stc
push
ror
ficomp
dec
mov
push
mov
dec
mov
into
lea
cmp
ds
jbe
cmp
jg
mov
ins
pop
add
lahf
mov
aam
vpshufd
(bad)
ds
cmp
ficom
sahf
repnz
add
sbb
sbb
clc
out
xchg
xlat
sub
ins
sbb
aaa
dec
fcomi
mov
jb
push
fdiv
or
pusha
js
bound
ins
jno
push
pop
pop
out
sbb
inc
cs
add
mov
jl
pop
mov
hlt
aam
xchg
fbld
call
fisubr
aad
jbe
mov
dec
scas
jno
hlt
mov
repnz
pop
dec
jle
jg
push
xor
pop
addr16
mov
mov
push
ret
(bad)
cmp
sbb
imul
popf
push
fdiv
(bad)
rdpmc
sbb
addr16
loope
and
cmps
mov
and
mov
pop
test
sar
movs
push
in
inc
jle
scas
and
pop
pop
cmps
arpl
dec
pop
push
retf
pushf
fdiv
nop
rcr
pop
subps
int
inc
jns
fld1
mov
retf
push
add
dec
test
(bad)
test
add
cmp
xchg
mov
hlt
jg
mov
aaa
retf
cmc
test
sti
jae
fwait
xlat
push
mov
dec
or
inc
int3
mov
mov
add
enter
and
sbb
fadd
sbb
popf
(bad)
call
mov
(bad)
out
data16
push
mov
xor
and
out
adc
add
add
mov
dec
cli
bound
push
xor
shl
dec
sbb
and
push
xor
mov
in
xchg
mov
sbb
neg
push
daa
popf
inc
es
inc
sub
cmp
inc
(bad)
loope
push
xchg
mov
mov
or
rol
loope
aad
xor
sbb
cmp
and
ret
or
sub
mov
lods
and
adc
fcomp
inc
out
mov
jb
std
xchg
repnz
(bad)
cli
inc
mov
mov
cmovb
inc
xchg
dec
fadd
add
sub
push
push
push
xchg
cdq
cmc
sbb
or
nop
xor
dec
bound
and
mov
cli
and
test
sub
xor
or
outs
jmp
lea
pop
(bad)
mov
aad
mov
adc
jp
inc
ss
(bad)
cmp
push
push
or
cmps
loop
xor
call
pop
scas
jmp
dec
adc
push
fucomip
push
xchg
js
or
out
daa
mov
frstor
dec
popa
arpl
popa
arpl
sub
out
cmp
mov
mov
sub
dec
cmp
mov
mov
jb
dec
jmp
push
sar
push
dec
retf
ins
pushf
sub
or
test
out
dec
ds
jnp
dec
ins
mov
stos
sub
pop
xlat
pop
sbb
repnz
std
push
nop
sub
inc
or
or
call
bound
jge
mov
cwde
xchg
arpl
jmp
ficomp
ins
int3
or
ret
mov
mov
mov
push
pop
es
in
jp
stos
aas
(bad)
in
cld
or
ja
lods
int3
(bad)
dec
jecxz
cwde
test
loope
mov
pop
jae
rcl
inc
or
ror
test
das
and
jle
mov
cmp
imul
clc
and
or
sti
ja
push
lds
cli
jmp
jp
std
div
into
loopne
push
inc
gs
stos
repz
dec
daa
fcomip
call
mov
lock
pop
call
movs
inc
xor
shr
imul
scas
inc
inc
mov
hlt
dec
jle
out
fucomi
xlat
dec
xor
cmc
jns
or
jg
xchg
push
adc
push
aam
mov
cmp
scas
add
jae
add
adc
imul
repnz
scas
cdq
retf
jmp
mov
out
mov
add
adc
mov
stos
int
fimul
sbb
mov
pop
(bad)
daa
repz
(bad)
jmp
sar
test
pop
(bad)
mov
mov
jb
pusha
repz
inc
xor
sub
cmps
gs
mov
(bad)
out
fwait
mov
das
jbe
(bad)
lahf
mov
cmc
mov
movs
dec
fcomip
pop
jge
into
inc
mov
xor
mov
inc
ins
pop
cmps
repz
ds
lods
stos
sub
(bad)
ss
out
dec
add
call
div
stc
loopne
arpl
sbb
je
inc
jb
mov
repz
mov
test
and
jnp
cli
and
adc
movs
and
ror
pop
jb
les
add
xchg
push
push
repnz
sar
sub
pop
pop
and
xchg
ret
in
dec
inc
xchg
xchg
inc
mov
and
test
rol
pop
mov
addr16
loopne
outs
sti
pop
add
or
xchg
and
dec
cmps
inc
out
and
bound
mov
je
idiv
fcom
push
int
das
ja
inc
(bad)
iret
dec
adc
or
fwait
dec
mov
sar
mov
xchg
iret
push
sub
mov
loop
popa
adc
imul
adc
inc
in
cwde
or
add
test
pop
cdq
xor
fisub
cmps
(bad)
lods
idiv
jb
pop
mov
jp
adc
mov
pop
retf
pop
out
fnstsw
xor
cmp
pop
cmc
test
les
push
test
mov
adc
sub
mov
mov
or
or
les
popa
xchg
and
clc
adc
jnp
ins
xchg
xor
and
cdq
xchg
ss
add
leave
add
ja
jle
dec
push
clc
js
push
je
call
mov
mov
shl
retf
xor
adc
sub
int
scas
rcl
xchg
shl
pop
test
dec
push
push
mov
add
cmp
int
aaa
outs
ret
adc
fstp
pop
fld
arpl
sbb
cwde
push
ffree
int
or
(bad)
xor
daa
(bad)
loop
out
cmovo
xchg
lods
out
popa
sbb
add
xchg
ins
leave
mov
dec
push
rcr
pop
scas
enter
(bad)
jge
nop
mov
mov
add
mov
xchg
adc
pop
push
lock
(bad)
and
fs
aas
scas
pusha
inc
aaa
stos
sub
pop
pop
push
fprem
mov
jns
pop
data16
mov
sbb
loop
cdq
xchg
in
mov
or
mov
adc
adc
xor
fnstcw
ret
outs
push
pop
push
repz
lock
or
adc
sbb
stc
jmp
fs
sub
jbe
adc
repz
gs
int3
mov
mov
shl
lock
push
xchg
popa
dec
cli
out
sub
into
ror
(bad)
jmp
es
ret
jecxz
mov
mov
aaa
pop
imul
sbb
mov
stos
cmp
cmps
hlt
ds
in
pop
inc
mov
push
rol
ja
aaa
cmp
retf
xor
iret
fstp
idiv
push
push
imul
iret
(bad)
mov
and
dec
mov
and
inc
repnz
lock
arpl
rol
inc
test
push
mov
sbb
jmp
add
jae
(bad)
shl
mov
sahf
repnz
js
outs
jle
mov
in
popa
(bad)
xlat
mov
xor
imul
fsubp
sbb
xor
cs
push
out
xchg
xchg
push
pop
inc
repnz
(bad)
xor
outs
call
es
fsubr
and
loope
call
dec
fwait
pop
mov
movs
les
das
ja
ds
gs
or
jmp
cdq
inc
fcom
sub
inc
pop
retf
fcom
and
push
add
setbe
imul
inc
mov
lods
push
mov
pop
xchg
push
jne
out
xchg
or
cmp
test
mov
cmps
cwde
xchg
pusha
mov
aad
pusha
sahf
xor
pop
loop
pop
mov
dec
xchg
fdivr
or
cmp
jmp
mov
ret
pusha
mov
in
mov
sub
dec
pop
pop
ror
nop
push
inc
mov
call
imul
inc
fisttp
sub
mov
inc
cmp
cmps
(bad)
gs
repz
mov
je
sbb
dec
stos
or
das
(bad)
cmp
jge
add
test
jecxz
loop
int3
sbb
or
and
xor
inc
mov
sub
cli
cdq
adc
out
dec
xor
or
xchg
add
mov
dec
pop
and
adc
and
add
repz
and
fwait
icebp
aad
and
jns
scas
sub
cmp
mov
dec
outs
adc
and
or
mov
fwait
sar
xchg
daa
xor
mov
mov
mov
in
jmp
pop
sahf
lds
ror
jno
mov
sub
xchg
and
les
cmp
loop
mov
(bad)
mov
(bad)
sbb
inc
mov
out
jns
and
fisttp
retf
lds
mov
jne
shr
clc
enter
addr16
or
ins
cwde
mov
pop
mov
fst
pop
ins
xchg
pop
mov
sub
cmp
or
pusha
ds
stos
jne
div
test
test
xor
ret
adc
scas
cmp
inc
stos
mov
xor
fwait
mov
imul
cli
loope
lods
inc
rol
cld
cmp
mov
mov
or
arpl
movs
push
mov
sbb
mov
push
mov
jmp
sbb
test
push
jg
inc
add
xchg
shr
or
test
mov
in
jno
ror
fstp
push
pop
sbb
or
pop
idiv
mov
int
sbb
std
es
cli
dec
repz
sub
in
or
aam
xlat
add
les
push
sahf
mov
pop
in
out
push
test
sahf
aam
sub
jg
les
mov
adc
leave
and
bound
mov
jge
mov
hlt
sub
push
jne
cmp
je
mov
dec
shl
inc
cmp
clc
dec
pop
leave
adc
retf
cld
(bad)
lods
jmp
and
icebp
sub
xchg
or
dec
cmp
aad
mov
jbe
dec
ret
(bad)
imul
xchg
cli
test
push
sub
add
leave
jmp
mov
fdivr
and
and
fcmovnu
lds
test
xchg
jae
inc
hlt
pop
in
add
ins
mov
ret
(bad)
ins
outs
sbb
inc
out
sub
enter
or
sub
enter
mov
inc
data16
mov
add
inc
loop
cwde
ret
pop
xor
pop
sub
retf
push
mov
mov
cmp
cmp
and
out
neg
mov
adc
scas
adc
jns
sub
mov
inc
sbb
arpl
xlat
scas
imul
sub
fstp
out
enter
lods
lock
push
dec
add
loop
(bad)
int3
lahf
inc
cmps
int
pop
and
mov
popa
push
sbb
test
inc
mov
push
repnz
jle
ds
imul
stc
inc
sti
or
out
push
repnz
sbb
bound
or
aaa
mov
fdivr
cmp
ds
cs
std
jno
add
outs
jmp
test
push
mov
popf
scas
cld
jecxz
pop
aaa
mov
lock
push
clc
xchg
xlat
push
pushf
test
inc
sbb
cli
ins
icebp
sahf
movs
stos
adc
(bad)
pop
add
shl
cmp
push
dec
push
xchg
sbb
pop
jmp
mov
aad
sub
stos
iret
in
js
add
jp
and
adc
xchg
inc
not
ret
cmps
mov
jecxz
xchg
movs
mov
push
loop
call
or
aas
hlt
dec
aaa
or
pop
add
jmp
sub
(bad)
daa
cmps
aad
enter
or
(bad)
aas
mov
sbb
fs
icebp
jns
ficom
push
std
pop
or
loope
push
mov
cmp
(bad)
imul
cmp
out
aas
push
cmp
enter
jmp
pop
loope
sbb
xchg
mov
xchg
movs
sub
or
jg
mov
gs
add
jnp
dec
rcr
repnz
loope
hlt
fs
sub
mov
sub
cmp
rcl
addr16
xchg
mov
push
lds
sbb
popf
fwait
out
hlt
loopne
loopne
mov
aad
imul
cli
sub
loop
xor
mov
push
lods
jo
popf
xor
add
test
or
ret
and
mov
mov
fmul
cmc
sbb
(bad)
outs
sub
xor
cmp
(bad)
jecxz
nop
stos
sbb
xchg
mov
cmp
push
or
xchg
pusha
nop
sub
cwde
mov
sbb
pop
mov
jno
mov
(bad)
cmps
cmp
jnp
out
push
mov
adc
inc
inc
cs
push
add
pop
pop
or
retf
loopne
cmc
pop
shr
scas
add
xlat
sahf
and
xchg
xchg
jno
cwde
pop
fs
mov
lods
mov
mov
mov
scas
fwait
iret
jmp
mov
lock
jno
scas
outs
cmp
enter
call
xor
xor
push
mov
jge
pop
inc
ins
out
movs
inc
shr
cmp
dec
shl
mov
sub
cld
xor
out
xchg
dec
stos
pushf
call
mov
xchg
xor
mov
sbb
leave
xor
push
gs
push
pop
mov
jns
sbb
int3
ja
scas
arpl
imul
sbb
adc
push
xchg
ret
int
sti
sbb
loope
sub
loope
jge
jge
cmp
mov
mov
sub
enter
and
or
sub
addr16
je
div
mov
cmp
or
or
jmp
pop
iret
das
retf
push
fsubr
xchg
jbe
(bad)
daa
xor
xor
aam
sub
inc
mov
jge
lods
push
push
dec
mov
sub
aas
shr
scas
cmc
xor
xlat
push
xchg
and
mov
adc
mov
ror
imul
inc
call
mov
mov
popf
repnz
sub
xor
sub
test
fcmove
pop
add
mov
mov
call
mov
popf
outs
or
push
jns
aas
xor
pop
mov
out
mov
cli
adc
mov
loopne
cmp
sub
xchg
pop
ret
inc
jns
(bad)
(bad)
sbb
shl
and
and
sub
adc
cmp
hlt
fmulp
jae
pop
int3
sbb
mov
pusha
mov
lds
daa
ins
inc
mov
push
outs
adc
push
mov
mov
and
mov
test
fs
(bad)
or
rcr
cmp
xchg
add
scas
push
(bad)
mov
iret
mov
inc
(bad)
(bad)
dec
xor
xchg
inc
cmp
aad
mov
fisub
adc
inc
nop
or
cmps
and
lahf
fwait
mov
mov
pop
iret
cdq
lds
mov
daa
mov
test
and
push
daa
cmc
xchg
mov
jecxz
enter
pop
jo
sbb
mov
dec
dec
mov
loop
mov
xchg
sub
ficomp
out
cld
push
add
or
fadd
shr
pop
repz
imul
or
and
pop
les
aaa
aas
jno
loope
jb
scas
pop
and
pop
repz
ucomiss
dec
mov
je
fs
dec
sub
ror
cmp
dec
outs
or
adc
in
sbb
fwait
std
call
retf
imul
jnp
sar
lods
xor
dec
imul
imul
fidivr
(bad)
mov
xor
xchg
mov
push
jg
sbb
(bad)
shr
push
cwde
inc
hlt
icebp
or
das
mov
gs
add
mov
mov
shr
mov
call
jmp
mov
push
aam
adc
cwde
int3
xor
xor
xchg
jo
ret
out
popa
retf
fwait
sub
mov
cld
jno
out
iret
cs
fld
xchg
adc
stc
xchg
dec
push
pop
mov
mov
pop
dec
idiv
xlat
movs
(bad)
xchg
in
rcl
dec
stos
retf
adc
mov
mov
cmp
sub
cmps
sbb
cmp
loopne
mov
sub
aad
adc
lahf
cwde
push
shr
test
test
nop
test
popf
loop
fistp
call
sbb
pop
daa
sti
inc
icebp
jp
add
push
dec
xchg
jecxz
cwde
stc
popa
mov
out
(bad)
mov
imul
repz
and
jne
mov
cmp
pop
jns
push
dec
ss
cwde
scas
jae
mov
cli
push
pop
push
aaa
aam
ins
jae
dec
fisttp
push
das
out
sub
pop
pop
pop
jbe
daa
ret
call
cs
and
sbb
add
(bad)
bound
dec
adc
push
cmps
dec
pop
(bad)
cmp
pushf
inc
and
or
loop
pop
(bad)
in
(bad)
les
jae
ins
jg
fdivp
adc
test
or
mov
cmps
push
ja
(bad)
shr
jno
mov
push
mov
mov
int
js
fldcw
call
push
scas
shl
sbb
sub
mov
xor
cs
jbe
inc
fs
pop
je
cdq
(bad)
mov
push
nop
call
or
repz
les
aaa
cmp
jbe
mov
mov
cmps
cwde
nop
sbb
rcr
jnp
pop
sub
add
stos
nop
(bad)
lahf
sub
push
mov
xor
pop
clc
mov
inc
mov
fisub
scas
mov
sti
jns
adc
call
cdq
add
rcr
xchg
jb
cmp
mov
cmc
int
xchg
mov
cmp
aaa
or
mov
dec
add
push
xor
jo
sub
out
add
xor
push
jp
jnp
mov
bound
int3
call
test
test
ja
into
sbb
call
mov
jl
stos
and
push
imul
fiadd
fs
cli
out
mov
push
shl
rcl
aad
and
or
movs
adc
and
ins
sub
inc
fcomi
jae
outs
ret
fdivr
xchg
call
rcr
test
sbb
ins
cmc
mov
cmp
iret
cwde
sbb
add
jnp
mov
stc
xor
sub
lahf
mov
out
jnp
div
sbb
jne
or
sub
out
sub
ret
outs
out
sti
sbb
cmp
into
out
push
and
push
inc
or
jae
sub
fisubr
xchg
add
xor
sub
inc
test
int3
pop
xor
sub
push
pop
imul
jmp
dec
jb
rcl
pop
mov
mov
inc
dec
fwait
jb
les
inc
xor
jne
push
xchg
pushf
jle
add
cmp
retf
jno
push
xchg
sbb
repnz
and
jbe
pop
les
mov
and
mov
push
sub
mov
mov
adc
xchg
dec
add
sti
xchg
test
hlt
pop
inc
jo
xchg
daa
xor
and
imul
lock
mov
sbb
jb
(bad)
pop
inc
fs
inc
out
add
shl
stos
sub
sub
out
shl
daa
push
stos
dec
adc
stc
adc
inc
push
mov
scas
enter
enter
cdq
mov
hlt
stos
and
not
pop
nop
xchg
dec
je
xchg
iret
sub
js
xchg
inc
sbb
(bad)
jns
pop
fisttp
ins
jo
sbb
xchg
out
ins
push
and
pop
push
add
jl
xchg
mov
mov
push
leave
sti
or
pop
push
mov
dec
adc
(bad)
sub
fsubr
ds
popa
icebp
xor
dec
adc
mov
sbb
add
in
sbb
test
ror
or
jl
sub
loop
dec
test
repnz
je
adc
cmc
ja
mov
add
dec
push
sbb
arpl
es
mov
cli
push
ret
cmp
cwde
jb
mov
xor
aam
mov
retf
popf
lea
ret
add
sub
stc
sbb
jecxz
dec
stos
xchg
(bad)
clc
cwde
scas
push
jg
sti
daa
mov
cmp
inc
and
jp
jl
(bad)
out
jmp
cmp
cmps
leave
mov
cwde
jl
mov
ror
neg
movs
lock
repz
call
test
push
adc
ret
add
push
test
in
std
push
sub
fidiv
push
(bad)
retf
jo
data16
sahf
add
jbe
adc
les
bound
gs
movs
xchg
and
in
or
aam
mov
mov
out
xor
inc
popa
or
cdq
mov
xor
stc
xor
jo
nop
xchg
popa
in
mov
lock
push
bswap
addr16
push
pop
xor
inc
and
cld
xchg
fisub
push
cmp
cwde
or
outs
in
loope
jmp
je
xor
ins
dec
sub
cmp
je
sbb
sahf
dec
mov
ret
cli
pushf
dec
xor
pop
mov
mov
inc
jmp
pop
xor
sub
push
out
into
cmc
lods
scas
pop
add
xor
ret
or
mov
imul
inc
(bad)
push
hlt
arpl
inc
aas
sub
pop
or
ret
pop
inc
fiadd
mov
sub
movs
dec
sub
rol
push
lea
xor
and
aaa
cmp
jo
or
ins
jmp
in
add
sbb
jge
arpl
jecxz
cmp
mov
out
fild
mov
cwde
cli
push
or
add
inc
jmp
xchg
xor
cmp
dec
add
add
jmp
jmp
add
aad
mov
aas
add
add
cmp
outs
push
jo
pop
pop
mov
or
xchg
sbb
in
cmps
mov
sub
(bad)
cli
ja
jecxz
mov
fidiv
mov
fadd
push
stos
rcl
jae
fst
jecxz
dec
push
push
mov
push
mov
addr16
out
jb
rol
shl
mov
cwde
push
sti
mov
cdq
sbb
stos
xlat
xchg
les
push
jo
cmp
stos
ins
mov
inc
adc
outs
js
push
cmps
mov
push
fs
or
mov
pop
dec
inc
sub
xchg
add
bound
(bad)
retf
cmps
sub
pop
mov
xchg
jbe
dec
pop
(bad)
(bad)
ss
loope
das
clc
adc
loope
fwait
fs
into
call
mov
mov
dec
(bad)
in
inc
lods
sbb
mov
sub
push
addr16
mov
mov
ja
ss
xchg
int
pusha
std
xlat
test
jmp
(bad)
rcr
fst
mov
retf
fsincos
out
mov
out
ss
cmp
popa
xor
cmp
push
fsubr
mov
mov
call
cmps
mov
mov
(bad)
pushf
sub
xor
(bad)
stos
pop
sbb
neg
adc
inc
mov
dec
rcr
xchg
inc
or
add
xchg
lods
mov
inc
repz
cmp
dec
pop
inc
jbe
push
push
push
popa
pop
(bad)
mov
inc
push
push
int3
jl
pop
test
mov
repz
xchg
scas
ret
aam
outs
stos
and
cmp
sub
data16
adc
outs
jnp
(bad)
cmc
shl
jmp
push
adc
retf
xor
fsub
dec
pop
pop
scas
cmp
icebp
push
pop
je
les
out
mov
(bad)
push
cwde
add
mov
adc
sbb
push
cmp
nop
out
inc
je
rcl
(bad)
cmp
movs
fwait
pusha
imul
or
jne
fadd
inc
aam
dec
ds
es
out
fisub
rcl
dec
mov
stos
jne
push
mov
je
mov
enter
jp
xor
stos
push
lea
mov
das
imul
cmc
(bad)
mov
and
sbb
inc
mov
xor
add
(bad)
icebp
in
adc
outs
xchg
mov
xchg
fstp
mov
mov
mov
ins
push
test
mov
lock
js
xor
mov
stc
adc
xchg
les
and
lds
aam
and
push
repnz
test
and
jmp
test
mov
xchg
jmp
out
push
sub
push
mov
sbb
mov
lds
xchg
sbb
ss
mov
or
je
mov
clc
pushf
jno
pop
out
push
not
lea
dec
inc
adc
fistp
push
(bad)
(bad)
rcl
sbb
pusha
test
add
in
das
gs
fcom
(bad)
jmp
mov
cmp
stos
inc
pop
dec
cld
sub
fs
mov
pop
or
or
sub
jmp
mov
out
lods
mov
loope
gs
ficomp
cmp
fld
add
adc
fld
inc
adc
(bad)
mov
mov
sub
fidiv
jmp
daa
pop
cwde
mov
(bad)
jmp
pop
jp
xor
test
xchg
data16
push
cmp
fbstp
adc
sub
(bad)
cli
shl
adc
push
ins
or
xchg
push
mov
add
sub
lods
ret
add
inc
jge
dec
mov
push
push
pop
xor
in
je
or
test
cmp
addr16
loope
push
scas
jnp
add
jno
xor
or
mov
mov
jmp
sti
nop
inc
cmps
sub
clc
and
xor
js
loope
sub
mov
movs
nop
cdq
dec
pop
repnz
adc
add
add
scas
jle
push
xor
mov
aam
dec
ins
add
(bad)
fs
into
scas
and
mov
add
xor
pusha
sub
pop
ret
cmp
std
dec
loop
inc
clc
out
xchg
push
sub
and
in
push
add
push
push
or
add
sub
push
cmp
add
out
scas
push
mov
sar
xor
movs
xor
xor
sbb
(bad)
sub
ret
push
pop
mov
fwait
sub
mov
or
ret
and
(bad)
cld
inc
dec
cmps
cmc
adc
xchg
sub
pushf
xchg
data16
call
inc
(bad)
jl
or
out
adc
adc
mov
cmp
push
jo
push
stc
dec
and
retf
hlt
js
dec
lahf
retf
(bad)
inc
mov
stc
cmp
push
pop
cli
movs
push
sub
lock
jecxz
add
popa
imul
xchg
jno
aaa
sub
lods
push
test
repnz
mov
cmp
jb
popa
cmc
in
inc
test
jo
jbe
out
adc
cmps
pop
mov
in
and
imul
ins
cmps
dec
out
jp
sbb
imul
mov
mov
sub
fmul
lahf
push
sub
push
xchg
mov
lods
jae
ja
adc
push
ret
(bad)
cmp
dec
xor
aam
mov
and
sahf
or
dec
jecxz
imul
xor
pop
call
push
cmp
sub
sub
shr
cld
push
imul
mov
popf
cmps
daa
xor
cdq
xor
mov
jne
popa
imul
sbb
(bad)
popa
mov
(bad)
xor
call
lds
gs
sub
inc
lds
dec
mov
or
mov
std
stos
cs
pop
inc
mov
ror
pop
sub
jmp
jns
addr16
xchg
fisttp
imul
add
pop
mov
cwde
(bad)
sar
(bad)
inc
cdq
xchg
lds
push
and
and
out
xor
ins
push
sbb
pop
inc
mov
xlat
popa
nop
mov
pop
cmp
jecxz
out
sbb
test
fs
(bad)
mov
push
pop
push
ror
ins
add
ins
scas
inc
pop
jp
mov
mov
into
jmp
add
xchg
or
test
cmp
(bad)
cs
pcmpgtw
add
push
fwait
test
inc
inc
(bad)
pop
inc
mov
fimul
mov
xchg
inc
je
mov
dec
repnz
xor
ror
and
les
dec
sbb
jo
dec
mov
gs
movs
jne
jle
retf
fbstp
add
(bad)
ror
ss
cmc
push
daa
cdq
and
xor
mov
mov
stos
aad
pop
les
dec
pop
xor
out
sbb
or
cmp
test
icebp
aas
imul
ds
pop
sub
stos
mov
push
xor
inc
retf
inc
sub
and
dec
ss
pop
xor
or
repz
and
pop
sahf
mul
or
push
fdivr
dec
mov
adc
sub
jg
inc
aad
out
lea
jmp
jns
mov
sti
mov
adc
out
test
dec
shl
sahf
das
dec
sbb
mov
adc
push
imul
or
mov
mul
fisttp
(bad)
lods
cld
imul
test
in
mov
xor
in
fidivr
enter
dec
aad
inc
scas
cmps
ds
sbb
mov
jne
mov
jnp
sbb
xchg
fdivr
dec
sub
or
adc
mov
and
mov
push
push
loopne
cdq
or
ret
out
in
mov
and
lahf
mov
mov
fidivr
cmp
sub
xor
in
xor
repz
cmps
pop
lods
fucomp
les
pop
stos
addr16
icebp
xor
sbb
pop
pop
pop
jno
and
mov
jecxz
mov
das
jo
sbb
xchg
ins
push
mov
dec
adc
xchg
out
jns
ja
cmp
add
inc
or
fwait
dec
xor
(bad)
cs
xor
xchg
and
pop
or
pop
push
jg
sar
cld
ret
out
or
fbld
mov
int3
dec
or
(bad)
adc
sub
arpl
sbb
sbb
lea
or
enter
out
or
or
ins
push
loope
test
idiv
pop
in
in
add
aad
adc
push
leave
ss
and
hlt
xlat
xchg
sbb
es
mov
pop
sub
repnz
jl
(bad)
retf
jge
xor
movq
dec
mov
clc
clc
mov
int
push
in
(bad)
push
dec
stc
leave
mov
stc
pop
test
shr
mov
lods
add
imul
nop
sbb
mov
sub
aad
call
lock
lds
imul
into
xchg
(bad)
mov
inc
pop
dec
jecxz
or
fidivr
aam
cli
clc
outs
jmp
inc
test
sbb
in
daa
stos
cwde
or
out
mov
mov
test
mov
mov
ror
mov
inc
gs
aaa
inc
gs
or
add
fdiv
les
cmp
movaps
cs
sub
shr
mov
pop
sahf
ins
je
pusha
mov
cli
sbb
jecxz
nop
test
lea
dec
(bad)
(bad)
loope
pop
pop
rcl
jnp
inc
jbe
adc
(bad)
aaa
dec
xor
sub
shl
xchg
cmps
push
sbb
mov
push
add
push
sahf
data16
ficom
mov
xchg
push
and
mov
div
in
add
push
fiadd
xchg
mov
or
mov
retf
fadd
aaa
in
(bad)
mov
mov
jmp
xchg
and
xor
sub
push
(bad)
mov
jb
sbb
sbb
jo
clc
das
push
mov
hlt
rcr
lahf
ins
aas
in
sbb
adc
sbb
das
pop
jmp
mov
xchg
lea
cdq
fisub
(bad)
fcom
test
(bad)
cmps
mov
sub
ins
mov
sti
pop
pop
cmp
jmp
fcomi
cwde
mov
fdivr
cmps
arpl
bound
mov
add
and
inc
adc
cmp
mov
int3
shr
cmc
mov
enter
mov
dec
jmp
dec
test
fldenv
cwde
(bad)
push
push
ror
test
aas
dec
outs
stos
fcom
dec
sub
in
pop
aam
pop
dec
cmps
fimul
add
rol
cmps
iret
rcl
je
test
pop
ins
icebp
xor
jb
out
outs
adc
adc
es
mov
arpl
ret
ret
popa
push
in
sbb
scas
xor
xor
add
jl
push
sti
test
sbb
xchg
rcl
call
loop
in
out
std
bound
mov
sbb
fcom
sahf
fsub
fstp
push
jge
adc
data16
es
das
cmp
scas
jmp
std
sub
dec
mov
push
jmp
xor
mov
sti
fidiv
push
nop
in
sub
jg
cmp
dec
mov
and
movs
(bad)
cmp
repnz
dec
movs
sbb
mov
xor
aas
sub
adc
push
inc
cmc
pop
jae
push
mov
mov
movs
popa
or
fldcw
inc
xor
xor
fcomi
call
movs
pusha
dec
gs
cmp
mov
in
movs
sbb
fld
data16
or
or
leave
in
dec
ror
(bad)
imul
mov
mov
pop
ja
mov
lea
push
stc
pop
sub
div
add
adc
and
sbb
mov
xlat
movs
inc
xor
sub
test
test
adc
xchg
sub
inc
mov
cs
iret
mov
sub
sub
push
fiadd
mov
inc
mov
adc
cmp
(bad)
sbb
mov
leave
xchg
fidivr
dec
add
das
cmp
xor
mov
into
addr16
arpl
xchg
mov
div
sbb
repnz
jmp
jmp
and
out
(bad)
fisub
scas
xchg
mov
js
ja
jl
mov
mov
jge
jbe
dec
adc
bnd
and
dec
pop
jno
fld
pop
sub
fnsave
sbb
jbe
in
cmc
loope
xchg
test
xchg
xor
out
xchg
cmc
sbb
add
mov
aas
xchg
add
ror
pop
outs
xchg
fisttp
call
clc
ret
enter
movs
mov
mov
addps
das
rol
mov
lds
sub
mov
xchg
push
add
pushfw
addr16
jecxz
pop
repz
dec
test
pop
add
cs
retf
loopne
pop
shl
mov
in
pop
(bad)
out
arpl
ins
in
cmp
jle
xchg
call
push
loopne
rcr
daa
jns
fisttp
mov
lock
jge
(bad)
push
ror
imul
adc
jmp
(bad)
leave
xchg
(bad)
jbe
in
jecxz
jo
gs
jb
fisubr
popa
push
add
push
out
lds
xchg
ins
fisub
xor
hlt
xlat
test
jb
or
dec
add
pop
and
ds
stc
(bad)
aam
shl
lods
dec
dec
or
arpl
adc
inc
int3
pop
mov
or
add
mov
popa
xor
inc
outs
imul
daa
data16
inc
jo
aas
or
movs
cmps
sbb
xor
inc
imul
xor
inc
aaa
ror
xchg
lods
imul
mov
pop
les
sbb
lods
jo
pop
jl
cwde
jecxz
cmps
loop
fisttp
cmp
in
cmp
les
test
lods
jae
pusha
add
scas
inc
adc
sbb
in
mov
pop
add
int
jno
movs
cwde
jns
jo
ret
and
dec
sbb
or
je
cmc
xchg
gs
das
and
or
inc
xchg
pop
adc
lock
dec
inc
daa
push
mov
adc
mov
sub
inc
loope
(bad)
or
mov
sub
retf
repz
lea
dec
mov
cdq
inc
pop
outs
dec
mov
js
sub
inc
push
mov
fwait
sbb
aad
test
jo
add
push
ja
pushf
xor
sbb
adc
cmp
(bad)
xchg
xor
dec
or
cmp
jb
rcr
rep
sbb
imul
mov
mov
stc
jnp
mov
fmul
mov
mov
add
mov
outs
and
mov
mov
mov
mov
lds
push
dec
retf
and
xchg
cmps
(bad)
cmps
push
fsubr
call
int
sub
clc
lds
push
or
mov
push
repz
nop
into
xor
sub
jecxz
fdivr
sub
sti
int
lds
popf
fs
mov
(bad)
into
pop
(bad)
adc
shl
fs
ins
cld
mov
dec
push
mov
sub
sahf
ins
addr16
fsubr
loop
push
bound
sahf
nop
inc
loop
push
pop
inc
dec
push
dec
(bad)
(bad)
pop
dec
xchg
mov
adc
push
out
shr
pop
dec
lods
stos
jge
inc
and
sbb
inc
cmp
dec
cmp
jg
cmp
jmp
xor
scas
push
sar
dec
inc
jp
gs
mov
sub
mov
in
iret
call
rcr
div
es
jno
cmp
test
imul
ret
pop
test
mov
mov
pop
cmp
sbb
or
push
cmp
mov
daa
jmp
or
cmp
jae
ficom
imul
push
jne
out
(bad)
xor
fsub
je
cmp
and
nop
push
shl
fnstcw
jmp
push
arpl
and
jno
dec
retf
mov
leave
lods
fsub
mov
cmp
imul
(bad)
push
xchg
xchg
cli
xor
inc
ret
adc
test
outs
pop
xchg
cs
jae
fldcw
lock
adc
jecxz
adc
lods
lea
imul
add
lock
or
jge
test
sbb
and
cmp
jmp
sub
rcl
mov
(bad)
mov
sti
retf
inc
mov
xchg
std
fs
cmc
in
xchg
lods
fsubr
adc
or
pop
fldenv
sbb
ss
test
loopne
ss
test
cmp
(bad)
mov
adc
dec
pop
fisubr
dec
mov
shl
js
clc
jmp
daa
mov
mov
fimul
stc
fwait
sub
add
mov
pop
pop
pop
ret
jnp
xlat
adc
sbb
push
stos
dec
fwait
sbb
out
aad
sbb
cld
mov
ins
mov
xchg
hlt
mov
mov
fidivr
jne
ficomp
repz
jns
js
nop
nop
cld
sub
pop
add
xchg
push
inc
test
fidiv
inc
cli
loopne
push
sbb
fsubr
fwait
pop
xor
ja
adc
pop
xor
push
ret
jl
jge
jns
xor
iret
retf
cmp
add
imul
xor
mov
dec
fcomp
nop
shl
xor
mov
sub
mov
mov
mov
push
stos
test
mov
imul
int
popf
and
mov
test
jg
jecxz
stos
add
or
div
not
push
dec
xchg
imul
dec
and
mov
(bad)
fld
aas
stos
fidiv
das
and
ror
test
fwait
or
mov
fldenv
add
and
adc
js
adc
or
retf
sub
jne
push
sbb
dec
or
out
in
lds
and
mov
pop
sbb
adc
adc
jno
movd
cld
add
jl
adc
cwde
mov
fwait
pop
movs
(bad)
retf
dec
movs
sub
lods
(bad)
sbb
mov
in
retf
enter
push
movs
arpl
dec
mov
daa
push
inc
hlt
xor
daa
mov
out
stos
xchg
out
enter
sbb
add
js
ret
ins
loop
arpl
rol
pop
(bad)
out
stos
jno
dec
test
jne
enter
out
cmc
rol
pushf
(bad)
mov
mov
dec
lods
add
mov
sbb
cmp
sti
mov
ins
aaa
inc
(bad)
push
push
in
adc
jmp
arpl
mov
and
add
fbstp
pushf
loopne
cli
ds
push
test
popa
(bad)
imul
test
push
loopne
stos
ficom
cmp
std
stos
push
or
fldenv
sti
popa
push
nop
cld
mov
aaa
pop
mov
xchg
inc
jbe
pop
pushf
cmps
or
xlat
mov
rol
daa
out
jno
inc
push
jmp
mov
xor
sub
or
cs
push
popf
test
mov
(bad)
jmp
fdivr
and
adc
dec
mov
rcl
cli
add
jmp
imul
retf
movs
shr
retf
mov
mul
jno
mov
in
jge
and
jg
xchg
inc
fcomp
add
cmp
xchg
add
add
sub
mov
popf
fdivr
adc
and
jl
pop
sbb
cmp
mov
cmp
pop
std
es
push
cmp
data16
dec
push
arpl
cld
fwait
test
cmp
or
movs
leave
aaa
mov
jmp
mov
mov
xchg
call
ins
jmp
or
fstp
aaa
mov
pop
dec
pop
ja
jle
mov
adc
fst
push
dec
xchg
test
retf
call
xchg
push
xor
cmp
push
jmp
call
cwde
cmps
jmp
gs
ja
mov
sbb
inc
lods
cli
aaa
push
retf
pop
push
sar
aaa
(bad)
mov
inc
movs
(bad)
push
fisttp
push
push
sub
adc
or
outs
and
loop
je
xor
push
cmc
push
cli
sbb
add
shl
xor
adc
dec
sub
js
push
mul
jns
in
jns
nop
adc
inc
mov
sub
sbb
add
fadd
jno
fcom
pop
xchg
fisubr
cli
jne
xor
xor
mov
sbb
loopne
nop
xchg
iret
push
(bad)
push
xchg
imul
dec
out
imul
mov
xchg
push
jecxz
mov
repnz
jnp
or
les
pop
or
add
pusha
jmp
xor
push
jl
aaa
adc
pop
push
retf
icebp
sbb
mov
mov
ins
icebp
daa
push
repnz
inc
cmp
and
mov
test
push
pusha
daa
inc
call
mov
fst
dec
push
test
adc
or
jno
cmp
rol
lds
mov
sbb
mov
cmc
in
lds
mov
xchg
sbb
cld
or
dec
(bad)
loopne
in
xchg
pop
or
enter
inc
mov
pop
aas
xchg
pop
leave
adc
push
mov
xor
ins
fs
adc
cdq
push
iret
adc
add
mov
loop
fild
ja
mov
cmp
sbb
sub
inc
mov
test
cmp
sub
or
xor
mov
ror
cld
in
repnz
mov
mov
mov
adc
adc
ins
cmc
bound
mov
dec
lahf
lods
mov
push
loope
cmp
test
push
xor
fidivr
cs
mov
jmp
xchg
jb
aam
mov
(bad)
aaa
sbb
fwait
push
mov
add
test
or
scas
mov
sbb
jecxz
mov
fadd
in
out
movs
mov
cmps
push
mov
sbb
sti
pop
push
(bad)
rol
cmp
and
nop
int3
fadd
dec
scas
cmp
mov
sub
(bad)
stos
xor
sub
arpl
jne
xor
aad
pop
popa
enter
imul
call
fcmovnb
push
arpl
sub
cmp
add
cmp
dec
pop
inc
lds
cwde
jbe
push
adc
fstp
jge
stos
pop
sbb
imul
xlat
mov
arpl
xchg
sti
test
xchg
pushf
inc
mov
or
mov
into
loopne
mov
frstor
sub
sbb
cmp
outs
inc
ins
or
adc
sub
rcr
adc
mov
xchg
jecxz
mov
std
outs
(bad)
in
jo
mov
gs
nop
loopne
repnz
not
sar
idiv
hlt
push
(bad)
mov
iret
mov
mov
or
jp
test
ret
out
inc
xchg
xor
jbe
or
xor
popa
sbb
popf
loopne
xchg
scas
push
cmc
(bad)
pop
mov
popa
test
(bad)
pusha
cmc
retf
xchg
test
pop
or
xor
arpl
xor
mov
cdq
inc
fidiv
cmps
in
bound
xor
sub
std
popa
fcmovnbe
icebp
call
jb
(bad)
mov
dec
sub
xchg
ret
cmps
mov
xor
sbb
cli
or
xor
jle
pop
xor
cs
xchg
in
call
push
imul
enter
inc
mov
out
test
repnz
aad
clc
adc
xchg
mov
jbe
ret
inc
sub
dec
and
push
pusha
push
jb
inc
jne
icebp
shr
mov
mov
or
cld
iret
xchg
jo
fst
jno
cmp
push
call
dec
aad
fild
call
push
outs
sub
sti
jae
and
xchg
and
(bad)
pop
lods
and
inc
ins
jne
mov
pop
outs
adc
ret
ret
jnp
xchg
icebp
mov
ja
sbb
mov
fnsave
push
into
ficom
jl
xor
pop
cmc
setns
out
adc
sub
xor
lds
movs
mov
push
sub
stos
xchg
push
daa
pop
retf
push
out
stos
shr
jle
mov
mov
pop
outs
test
xchg
sbb
sbb
loop
mov
fbld
fld
mov
pop
dec
ret
pushf
ins
adc
jnp
mov
lock
push
outs
in
mov
xchg
and
push
fimul
jmp
mov
jge
push
mov
xlat
scas
out
pop
sbb
or
in
inc
idiv
xchg
xchg
retf
popa
or
das
dec
jl
sub
mov
repnz
mov
inc
ret
add
loop
ret
adc
inc
cmps
push
imul
push
repnz
mov
push
xor
imul
out
add
add
xchg
add
inc
and
sbb
cmp
loope
call
(bad)
xor
pop
loopne
fdiv
out
mov
lahf
push
and
std
dec
fstp
fbld
(bad)
pop
pusha
scas
ret
leave
sbb
mov
cmp
cmp
ins
jp
pminub
into
js
dec
mov
jmp
test
inc
ret
inc
and
mov
adc
push
mov
into
imul
add
(bad)
pushf
mov
push
inc
or
mov
adc
cld
pusha
push
inc
cli
pop
enter
daa
push
inc
add
hlt
mov
or
dec
sub
add
in
ret
arpl
movs
jbe
stos
cmp
and
mov
outs
inc
mov
cmp
es
jbe
or
and
repz
pushf
inc
fwait
cli
mov
test
add
or
jecxz
mov
ins
or
mov
je
mov
mul
mov
cli
ins
bound
repnz
not
push
or
jbe
(bad)
(bad)
adc
stos
movs
cmp
sbb
jmp
or
xchg
xor
push
repz
call
mov
pop
mov
icebp
fldenv
push
cmps
pop
pop
sbb
push
jp
or
cs
mov
push
dec
popf
sar
cmc
xchg
scas
in
push
(bad)
and
out
mov
or
push
sbb
xor
push
clc
in
jmp
div
stos
enter
imul
fidiv
push
cmp
fsubr
(bad)
fcmovne
add
cmp
aam
or
add
inc
xchg
es
scas
dec
int3
(bad)
test
outs
inc
xor
inc
mov
call
(bad)
pop
or
sub
out
loope
nop
inc
xchg
sub
inc
movs
out
ret
jle
mov
add
cmp
jns
add
movs
add
cmp
idiv
sar
data16
sbb
push
mov
pop
sbb
sbb
stos
xchg
cmp
or
adc
pop
loop
test
jae
rol
in
dec
jmp
cmps
fnstcw
loope
test
pop
arpl
fisubr
jne
jno
mov
xor
lock
rcl
jle
ins
xor
sbb
mov
jnp
and
push
add
pop
loopne
loop
push
retf
inc
cmp
inc
(bad)
sub
adc
inc
mov
(bad)
out
jmp
jae
or
pop
addr16
push
xchg
add
sbb
shl
movs
sbb
jae
(bad)
mov
sub
(bad)
retf
sbb
call
xchg
xor
ds
fild
pusha
stos
xor
pop
scas
nop
jo
scas
pusha
xchg
loop
and
xchg
cmp
push
push
sub
jecxz
pusha
cmps
sar
mov
push
or
push
xchg
test
xchg
mov
movs
cmp
movs
push
sahf
in
push
xor
out
fs
push
cld
ins
xchg
test
inc
xor
inc
xor
cmps
daa
mov
dec
sbb
xor
dec
in
dec
push
xor
xchg
rcl
rcr
add
js
xlat
pop
adc
dec
add
inc
clc
fisubr
iret
cmps
add
movs
and
inc
push
call
xchg
pushf
pop
neg
aaa
mov
pop
js
inc
jmp
mov
jae
sbb
xchg
fwait
sbb
or
mov
bound
adc
inc
add
or
pop
fwait
imul
pop
mov
sub
cmps
add
std
sbb
mov
push
or
scas
es
(bad)
mov
(bad)
ja
mov
aaa
stos
adc
aad
out
push
loopne
(bad)
and
bound
jecxz
out
mov
mov
dec
inc
pop
inc
sar
inc
call
arpl
stos
test
pop
mov
rcr
add
adc
xchg
es
sbb
movs
dec
sbb
dec
sar
jecxz
bound
cmc
jmp
(bad)
sub
push
push
mov
fs
cmp
jl
xchg
and
out
and
les
mov
push
xchg
scas
sub
sbb
or
dec
test
mov
push
or
stos
cmp
aas
pop
(bad)
out
mov
fwait
and
stos
in
add
and
or
call
out
or
in
in
jecxz
xchg
mov
cmp
pop
jmp
sub
dec
sbb
popf
inc
into
push
repz
aas
dec
add
cdq
adc
add
jb
mov
popf
mov
(bad)
in
inc
dec
fcomp
outs
cli
inc
push
cmp
inc
repz
clc
inc
ins
int3
aas
cmp
mov
add
sub
xor
cld
add
cmp
add
mov
adc
cmps
arpl
xor
cmp
cli
aas
outs
shr
sbb
sbb
push
sub
inc
or
and
push
jg
inc
xchg
rol
cmp
sub
mov
test
fstp
shl
shl
xchg
out
lods
jl
les
iret
test
jmp
mov
add
xchg
pushf
lahf
cmp
je
lods
stc
inc
jmp
lods
push
sbb
push
jg
ins
jl
bound
cmp
mov
or
shr
fiadd
dec
ss
into
fwait
lea
cmp
stos
push
pop
sti
sar
ins
in
push
(bad)
lods
xchg
dec
repnz
mov
arpl
or
test
sub
xor
xlat
inc
test
fidiv
out
push
loopne
mov
mov
dec
outs
in
ret
pop
cmp
push
xor
and
jge
dec
and
add
inc
add
fild
or
(bad)
push
and
into
xchg
repnz
aad
xchg
or
mul
fnstsw
or
aad
xor
enter
sub
xor
or
xor
mov
lods
adc
add
(bad)
fbstp
aaa
jmp
test
dec
loopne
(bad)
xor
shl
adc
retf
gs
add
test
sahf
es
xchg
repnz
das
cmps
and
and
(bad)
push
lods
mov
jle
sub
div
mov
cdq
xor
data16
mov
xor
mov
in
mov
xchg
or
repz
cs
or
dec
movs
ffree
inc
jle
jmp
dec
jmp
arpl
or
add
les
(bad)
retf
pop
mov
iret
call
fdivr
scas
pop
mov
out
add
dec
sub
adc
push
ss
adc
icebp
mov
push
dec
mov
fdivr
jno
xchg
xchg
push
jae
mov
dec
dec
mov
xchg
fbstp
lods
add
inc
js
into
std
push
stos
(bad)
aaa
and
pop
sbb
sub
cmp
cwde
xchg
fwait
pop
out
jl
rol
data16
out
dec
sub
inc
fld
or
dec
mov
div
js
stos
sbb
adc
fidiv
dec
xor
fsubr
fcmovnbe
fcom
(bad)
les
ds
lahf
stc
inc
int
mov
loope
popa
sub
aaa
shl
inc
and
aas
xor
leave
sti
pop
leave
in
test
aaa
bound
jns
fistp
sahf
js
and
dec
pop
(bad)
addr16
push
mov
sbb
push
dec
icebp
mov
jmp
out
je
sbb
retf
in
inc
fnstsw
pop
pop
push
xor
and
inc
mov
xchg
sbb
xchg
nop
fsqrt
out
dec
jg
icebp
ins
mov
cmp
dec
mov
inc
lods
call
pop
ins
xchg
imul
repnz
pop
xchg
xor
jnp
sbb
jae
xchg
pop
mov
push
pushf
push
push
lods
mov
push
ins
(bad)
arpl
test
push
sub
mov
pop
outs
icebp
shr
xor
int3
inc
jle
xor
dec
aam
shr
inc
inc
xchg
mov
test
inc
cld
js
das
mov
scas
fistp
mov
ds
(bad)
cmps
adc
jno
hlt
push
shl
adc
jg
aam
jle
add
or
xchg
pusha
and
mov
in
xchg
dec
aam
daa
int
test
mov
retf
cmc
dec
adc
pop
mov
dec
xor
jb
push
mov
in
mov
mov
(bad)
mov
pop
xor
jmp
push
mov
hlt
sbb
clc
pop
idiv
ret
pop
sub
mov
push
push
pop
or
out
cmp
dec
mov
scas
mov
fcomp
jmp
ret
xlat
sub
dec
loopne
adc
mov
pop
bound
(bad)
lock
xchg
cmp
xchg
scas
dec
inc
jo
inc
push
cmps
movs
xchg
pop
dec
out
out
cmp
in
add
fimul
mov
and
inc
mov
mov
lods
leave
push
sbb
push
jmp
and
jle
dec
sbb
xor
adc
xchg
dec
jns
adc
lods
add
rol
or
mov
push
stc
jae
(bad)
jae
(bad)
retf
das
and
or
inc
inc
sbb
rol
(bad)
sti
clc
cmps
mov
icebp
lea
cld
xlat
mov
lock
out
push
xchg
adc
push
jp
mov
cmp
push
sbb
push
aam
fnstcw
mov
mov
fs
imul
daa
test
jle
sbb
or
adc
and
jmp
and
(bad)
leave
cdq
hlt
jmp
sahf
jb
jmp
loopne
out
push
int3
mov
dec
shl
inc
jo
inc
push
fistp
sbb
adc
adc
jne
push
xor
stos
inc
sub
pop
and
test
sbb
pop
adc
mov
mov
jne
mov
fnstsw
dec
jne
jbe
nop
adc
out
ja
inc
cmps
inc
in
sub
add
dec
xor
icebp
ins
das
pop
dec
mov
push
dec
(bad)
(bad)
enter
adc
rcr
lods
adc
mov
sub
popf
in
ss
mov
cdq
retf
or
test
mov
sahf
xor
mov
test
pop
dec
sahf
or
dec
ss
dec
gs
in
dec
(bad)
ror
dec
xchg
pop
retf
push
mov
(bad)
jb
les
in
mov
scas
mov
fwait
div
mov
enter
jmp
xor
cs
pop
inc
jl
popa
iret
mov
xor
sub
out
mov
inc
sub
popa
sbb
cld
movs
pop
mov
sahf
dec
cdq
rcl
sti
fisttp
sbb
mov
push
sbb
add
mov
das
clc
cmp
sub
daa
xor
adc
fwait
not
sub
and
inc
sahf
cmps
loope
xchg
ror
mov
ss
stos
sbb
push
jge
(bad)
add
pop
pop
cdq
nop
sbb
scas
jne
cdq
add
cmp
mov
(bad)
adc
inc
or
inc
inc
iret
out
pop
inc
sub
xor
ss
or
xchg
mov
jnp
pop
out
pusha
mov
sub
sbb
dec
cmp
lea
call
mov
inc
or
lock
inc
(bad)
stc
test
lods
stc
inc
lea
cmps
fmul
test
ret
pop
(bad)
sbb
imul
in
xor
cs
and
add
movs
mov
sub
mov
(bad)
popf
cdq
movs
dec
sbb
mov
push
imul
test
mov
fist
rcr
clc
add
in
mov
dec
sub
xchg
push
push
cmc
hlt
addr16
sub
jmp
stc
adc
leave
ret
das
xor
hlt
(bad)
mov
jmp
jbe
mov
fs
mov
popf
inc
inc
fst
dec
stc
js
mov
push
loop
add
pop
mov
aam
popf
loope
inc
or
loop
in
imul
ja
dec
jno
leave
fprem
fmulp
jp
sahf
add
jmp
loop
dec
dec
push
lds
mov
icebp
mov
push
clc
cld
cmp
imul
pop
int3
enter
dec
adc
cld
shr
ret
sbb
lock
pop
in
sahf
jbe
inc
(bad)
cmps
mov
jnp
xor
sub
pop
sub
pusha
fild
mov
(bad)
pop
ins
push
retf
xor
push
imul
out
mov
imul
js
sbb
sti
scas
das
imul
push
scas
ror
xchg
xchg
and
ret
cmp
adc
and
sub
adc
cmp
cmc
imul
scas
sbb
movs
sti
sbb
inc
aam
call
ret
movs
movs
mov
sahf
push
imul
popa
data16
mov
inc
mov
fild
scas
or
adc
aad
mov
and
fwait
icebp
pop
push
ja
pop
jb
sub
jg
jg
xor
jecxz
scas
(bad)
in
(bad)
cld
movs
aas
mov
in
arpl
sbb
mov
pop
aad
inc
jbe
addr16
fidiv
icebp
push
dec
or
lock
in
cmps
test
or
imul
pop
xlat
mov
ret
push
fdivrp
sti
(bad)
pop
shr
sub
dec
mov
cdq
or
rcr
jo
inc
in
xor
mov
xchg
daa
daa
jl
mov
push
cli
sub
push
cmp
std
or
ss
cmp
outs
out
std
sbb
retf
outs
outs
inc
push
sub
sub
lods
movs
das
add
cmp
cmp
xchg
psraw
in
jns
sbb
hlt
retf
movs
pop
int3
(bad)
das
mov
jne
sbb
and
add
push
ror
icebp
test
adc
cmp
fimul
jo
fwait
xor
ins
std
and
enter
and
lock
adc
(bad)
ja
or
cmp
pusha
retf
push
sub
rcr
ja
ja
pop
(bad)
ins
jl
jge
cmps
loope
adc
xchg
mov
mov
and
into
out
mov
out
int
lea
push
jno
sbb
push
js
jae
adc
fdecstp
fild
icebp
xor
scas
mov
out
inc
push
jp
cmp
sti
stos
xor
pop
pop
adc
pushf
xchg
cmc
xchg
xchg
jmp
out
pusha
stc
push
sbb
das
mov
out
xor
popf
sbb
pop
xchg
mov
xchg
or
pop
xor
adc
sbb
lock
cwde
scas
push
cdq
adc
(bad)
jmp
jmp
bound
call
les
sar
mov
and
mov
je
outs
in
sbb
outs
add
lds
fs
inc
adc
xor
movs
xlat
les
fisttp
dec
push
stos
pop
loopne
cmp
loop
xchg
pop
scas
scas
jmp
cmp
xor
loope
mov
jmp
push
jecxz
test
push
daa
out
xor
mov
sar
jle
cmp
push
lods
cld
shl
sbb
(bad)
(bad)
jne
popa
cmp
xchg
aam
adc
arpl
jns
add
sbb
aad
lea
iret
inc
jne
inc
sub
ret
sbb
hlt
sbb
cmp
lock
(bad)
push
or
repz
(bad)
sub
sbb
jno
retf
psubusw
test
jb
mov
std
in
loop
in
sbb
fidivr
les
sbb
ins
sar
jmp
cmp
cmp
sub
fwait
aaa
inc
dec
rol
fs
xchg
test
lea
inc
rol
stc
jle
gs
fs
jmp
pop
jne
jmp
sub
or
ffreep
pop
jmp
push
lock
lahf
sub
push
rcr
mov
mov
loopne
(bad)
sub
shl
out
movs
sub
retf
stc
stos
pusha
add
imul
push
retf
or
pop
movs
dec
or
mov
mov
jno
dec
xor
sbb
js
enter
idiv
neg
and
jg
(bad)
int
mov
sahf
jg
push
int
mov
dec
cmp
test
sbb
shr
cli
lock
xor
movs
enter
add
xchg
iret
xor
mov
shl
gs
xchg
xchg
dec
sbb
ins
lods
sub
je
lahf
(bad)
xor
dec
test
dec
in
test
dec
mov
mov
out
iret
adc
and
mov
stos
(bad)
popf
jb
in
stc
lds
mov
adc
jp
mov
aad
aam
push
arpl
mov
les
test
add
and
push
iret
push
pop
jb
add
mov
sub
shr
xchg
push
inc
mov
ja
adc
stos
retf
mov
jecxz
out
stc
push
je
mov
cmp
dec
inc
and
call
inc
rol
ret
mov
mov
rol
int
fwait
ret
in
adc
cmps
xchg
cdq
jecxz
in
mov
ins
or
popf
jl
mov
xchg
test
sbb
cmps
enter
cmp
arpl
and
push
cld
mov
xchg
test
jns
addr16
test
push
cmp
lods
inc
add
in
pusha
mov
jg
ror
push
sub
and
xor
or
std
cmp
aas
in
test
mov
inc
cwde
mov
push
cwde
or
clc
bound
iret
outs
jp
push
cmc
jbe
ficomp
cmc
(bad)
lahf
dec
cld
jmp
xchg
(bad)
push
add
mov
js
mov
test
sbb
xor
dec
fnstcw
das
mov
mov
mov
and
pop
mov
pop
mov
pusha
lods
push
int
call
ltr
ret
test
inc
cmp
mov
push
mov
mov
jmp
jno
stc
jecxz
jne
out
add
js
aad
push
sub
mov
xchg
bound
sub
sbb
mov
outs
or
je
fidivr
sbb
outs
mov
outs
scas
movs
cmp
outs
cmps
div
cmp
jnp
mov
xchg
mov
sub
arpl
xchg
mov
xor
inc
mov
dec
dec
iret
sbb
fwait
dec
sub
mov
cmps
popa
loopne
sbb
(bad)
mov
mov
push
imul
loope
sub
mov
repnz
out
add
in
out
lds
xchg
(bad)
retf
xchg
jmp
daa
xor
pop
inc
add
cmp
stc
neg
ins
sar
(bad)
pop
sahf
pop
xchg
scas
pop
sbb
xor
cmp
pop
mov
leave
and
push
test
cdq
(bad)
clc
xor
jb
xor
and
icebp
test
jae
sti
addr16
(bad)
call
inc
or
xor
mov
out
shl
inc
mov
mov
pop
loop
push
cmp
mov
mov
mov
cmp
jge
(bad)
sbb
or
hlt
jae
inc
and
add
jnp
aad
jl
xchg
pop
jecxz
push
pop
jne
xchg
cmps
push
pop
int
test
arpl
or
pop
(bad)
shl
mov
jno
xor
pop
fdiv
and
xchg
jmp
test
pop
and
pop
cmp
cld
jb
and
cmp
nop
mov
sbb
adc
hlt
imul
jns
and
shl
jns
lods
adc
dec
push
pushf
add
push
ins
cld
sahf
lds
sahf
sub
in
aam
xchg
mov
test
push
jmp
fwait
sbb
lea
sub
pop
dec
(bad)
push
pop
scas
jb
mov
fwait
sbb
lods
or
nop
sti
pop
cmp
xchg
aad
pop
mov
mov
sti
sub
dec
fwait
jnp
push
test
add
jge
loope
ds
xor
sahf
sub
jno
mov
dec
shr
dec
pop
mov
loop
pop
xor
(bad)
aas
fimul
ret
pusha
xor
jle
mul
and
(bad)
jns
scas
out
out
out
int
and
inc
mov
sbb
pop
cwde
lock
pop
aam
dec
int
out
sbb
add
or
xchg
fwait
push
int
loop
push
push
pop
icebp
fwait
jno
imul
lods
push
mov
and
aas
add
add
aaa
and
cmp
int
mov
pusha
leave
dec
in
aad
dec
pop
pop
in
dec
mov
repz
mov
pop
aam
xchg
jle
jno
outs
fnstcw
mov
add
dec
sahf
adc
push
rcr
or
xor
addr16
cmp
leave
es
(bad)
adc
inc
test
mov
outs
cmp
cmp
ds
cmc
add
mov
push
dec
ret
or
cmp
fdivr
sub
popf
add
jbe
mov
inc
shl
mov
mov
inc
sti
dec
xchg
and
cmp
std
fcomp
dec
adc
add
dec
jo
pop
gs
imul
test
push
bound
mov
int
fild
jns
cdq
jns
add
popa
sahf
mul
das
cmps
into
stos
push
xor
aas
or
(bad)
sbb
mov
adc
xchg
aam
mov
inc
mov
sbb
adc
sub
(bad)
imul
or
(bad)
stos
ins
in
dec
nop
pop
popf
outs
push
in
pop
mov
je
fs
ins
dec
nop
cmp
or
retf
ss
jmp
in
xor
pop
sbb
inc
call
(bad)
pop
data16
arpl
xchg
adc
mov
retf
and
mov
mov
and
push
sub
(bad)
shl
daa
mov
aas
(bad)
into
jno
push
push
dec
inc
dec
jle
leave
out
mov
and
cdq
rol
jge
(bad)
call
in
mov
add
stos
mov
adc
jg
cmp
pop
jbe
xchg
xor
add
fsubr
mov
xor
pop
mov
lods
or
pop
sub
inc
push
outs
shl
dec
jle
jmp
loope
(bad)
neg
jne
xchg
jne
hlt
fnstsw
ror
repnz
add
push
cmp
mov
mov
aaa
adc
js
es
mov
scas
lods
add
mov
les
push
pop
cld
(bad)
rcr
cmp
xor
or
xchg
inc
sahf
(bad)
sbb
movnti
jecxz
sahf
aaa
movs
daa
jno
jmp
jne
mov
jns
push
leave
xlat
add
and
dec
mov
add
iret
xor
dec
inc
sbb
in
pusha
and
ins
pop
cmp
sahf
jne
clc
xchg
movs
push
xchg
mov
cdq
pop
fsubr
and
push
int
mov
outs
pop
xchg
dec
or
jmp
jge
into
sbb
daa
adc
je
pop
(bad)
xchg
adc
daa
in
pop
mov
scas
fst
rol
sub
push
xor
mov
dec
jmp
add
push
sub
sbb
push
adc
or
pop
call
sbb
cli
cmp
lock
(bad)
inc
xlat
stos
sti
or
pop
pop
mov
out
jle
inc
mov
clc
adc
push
push
fs
sub
std
fbstp
inc
adc
cmp
jae
into
test
or
pushf
(bad)
xor
data16
hlt
xlat
or
sbb
fcomp
mov
and
lea
rol
xor
mov
shl
fistp
arpl
inc
out
mov
mov
je
(bad)
xchg
jbe
jmp
push
rcl
ret
jge
push
test
push
xchg
adc
inc
xchg
mov
js
aas
sbb
or
xor
ret
jb
ror
cli
mov
pop
jns
or
icebp
add
push
outs
rcl
hlt
fcomi
pop
popf
cdq
adc
mov
inc
scas
dec
leave
sti
xchg
adc
out
sahf
enter
dec
mov
xchg
(bad)
or
cli
hlt
imul
loopne
xlat
rep
mov
inc
inc
mov
cmp
sbb
loope
(bad)
jae
lock
jmp
je
repnz
pop
mov
push
addr16
mov
ror
or
lods
or
out
les
pop
adc
inc
xchg
xor
cmps
mul
push
mov
pop
sbb
(bad)
pop
popf
mul
add
mov
test
dec
stos
nop
stos
scas
xchg
stc
cmp
mov
mov
mov
mov
loope
cmps
xor
enter
repz
cli
sysexit
ins
gs
and
popf
push
xor
call
je
push
in
aad
out
movs
int3
push
jg
and
adc
sub
jmp
xor
xchg
xchg
cdq
jno
pop
inc
fnsave
sbb
out
xchg
stos
xchg
sub
xchg
xor
adc
xchg
mov
loopne
add
xor
(bad)
psubusw
cmps
mov
test
mov
cdq
push
loop
ss
inc
jle
inc
inc
(bad)
enter
inc
loope
pusha
fwait
scas
ror
sar
ret
imul
jne
iret
add
pop
xor
mov
ror
cmp
pusha
sub
addr16
add
mov
imul
call
mov
popa
les
mov
loope
daa
jne
jg
push
mov
cld
xor
cmps
lahf
push
mov
(bad)
xor
add
test
sub
mov
xor
cmc
inc
movs
adc
mov
xchg
daa
rcr
lods
mov
in
sahf
push
adc
imul
sbb
inc
call
das
outs
or
sbb
call
movs
dec
mov
dec
sub
fistp
xor
mov
mov
jnp
cmp
sub
jmp
inc
xor
jbe
xchg
fist
aad
call
pop
stos
pushf
in
out
(bad)
mov
pop
daa
cmp
ds
cmp
inc
das
jmp
neg
ret
mul
shl
sbb
aas
gs
mov
add
inc
add
mov
shl
adc
dec
fwait
outs
ret
add
outs
dec
sbb
ret
dec
mov
fstp
pop
sbb
or
lea
dec
xchg
push
sub
jnp
cmps
in
pop
mov
sub
movs
adc
inc
(bad)
jmp
pop
push
ficomp
add
push
mov
sub
aad
lahf
xchg
mov
aaa
in
pop
fsubr
(bad)
push
or
adc
push
pop
movs
or
add
into
adc
jne
inc
xchg
outs
xchg
aaa
mov
push
mov
shl
imul
or
les
cmp
push
sahf
cmp
jae
inc
retf
inc
inc
sahf
in
mov
je
rcl
and
sbb
daa
push
jge
xor
mov
sbb
dec
or
sbb
inc
sub
sbb
inc
push
sbb
push
xchg
adc
inc
sub
mov
jge
mov
movs
outs
dec
(bad)
sbb
and
mov
cmp
(bad)
rcl
cmps
lock
int
pop
nop
pop
std
test
mov
push
out
loop
daa
push
inc
pop
push
add
retf
(bad)
mov
lahf
int
out
push
jle
mov
sahf
mov
fisub
adc
cld
enter
sub
add
dec
mov
add
xchg
mov
lea
mov
lea
xchg
ins
add
mov
bound
sbb
cmp
sub
xor
rcr
inc
xchg
cwde
ror
xchg
aam
loop
movs
movs
and
xchg
dec
mov
rol
adc
test
or
pop
jne
cmp
mov
and
jo
ins
ficom
or
fstp
pop
mov
lods
sub
(bad)
(bad)
sub
adc
pop
mov
std
xlat
cmps
ins
and
xor
int3
fist
xchg
add
ss
enter
mov
ret
xor
int
es
(bad)
in
(bad)
and
lock
dec
fs
jns
addr16
stc
xchg
cmp
add
in
add
cld
cmps
pop
jb
adc
addr16
je
cdq
cmp
adc
dec
xor
add
mov
fadd
or
push
jmp
rcl
sub
std
mov
data16
div
sahf
push
lods
inc
test
mov
adc
ins
hlt
mov
and
push
jle
int
xor
mov
ss
jmp
sub
inc
(bad)
stos
add
fdiv
lds
add
or
mov
test
mov
lods
out
in
sub
inc
pop
add
rol
inc
adc
ucomiss
cmp
loop
sub
xor
sar
add
jg
pop
pushf
adc
and
fst
push
ret
nop
pop
loope
(bad)
in
outs
sbb
cmp
test
in
add
cli
pop
movs
dec
mov
and
out
gs
movs
cmc
adc
leave
repz
xchg
sahf
int
adc
pop
mov
stc
mov
push
sub
fimul
adc
scas
out
and
into
aad
mov
imul
arpl
mov
jge
jge
ret
xchg
imul
mov
fwait
mov
jnp
inc
adc
lahf
imul
push
sbb
xchg
cli
sahf
(bad)
in
sub
cli
ret
cmps
stos
sti
jge
je
dec
pusha
sbb
sbb
loop
call
jle
pop
xor
cs
mov
(bad)
in
sub
je
icebp
sar
out
push
push
rcr
sub
jnp
retf
jae
push
cdq
dec
push
mov
lock
xor
mov
adc
in
xsave
jp
fbstp
jmp
fdiv
xchg
inc
paddd
cmp
fmulp
aaa
mov
int
sub
in
je
push
mov
xchg
std
and
jbe
inc
adc
ds
mov
pushf
xor
pop
out
or
(bad)
mov
fstp
stos
sub
cmp
add
xor
retf
rcr
and
dec
mov
mov
dec
sbb
fcmovbe
setp
push
xor
dec
ds
aad
mov
jne
cmps
cwde
xor
mov
imul
rcr
(bad)
sub
(bad)
jle
repnz
pop
and
mov
mov
push
or
push
rcl
mov
out
or
and
sahf
pusha
daa
ret
lahf
pusha
lods
cmp
das
mov
or
movs
retf
pop
mov
pop
xchg
rcr
(bad)
sub
mov
arpl
add
in
mov
mov
fiadd
xchg
or
movs
and
outs
in
mov
add
in
pop
idiv
push
adc
inc
fst
mov
mov
and
fwait
push
xchg
jns
add
mov
int3
xchg
leave
pop
sbb
mov
cmp
inc
and
fiadd
je
xchg
mov
(bad)
push
rol
pop
xor
call
rol
ds
popf
dec
hlt
cmps
inc
pop
mov
inc
ja
aas
adc
mul
sar
mov
ins
mov
sbb
out
pop
mov
push
pushf
xor
out
mov
inc
lods
dec
add
aad
lahf
lods
scas
sbb
pop
xchg
adc
xor
hlt
imul
jne
xor
arpl
(bad)
mov
out
gs
aad
lahf
sub
mov
push
push
xor
jmp
sbb
xchg
je
xchg
in
mov
xor
in
shl
lahf
fmul
xor
clc
je
or
cmp
cmps
loop
out
xchg
clc
push
stos
adc
push
fs
inc
pop
in
cmp
cld
ds
js
add
ss
or
fcomip
pop
data16
adc
push
pop
daa
call
and
mul
jno
push
push
cmp
call
xor
adc
cmp
(bad)
in
mov
mov
push
xchg
cmc
shl
xor
nop
mov
add
mov
(bad)
cmp
adc
xchg
pop
call
dec
push
les
push
in
repnz
scas
xchg
mov
fucomp
jo
and
mov
test
or
clc
jmp
mov
test
add
leave
jne
mov
sti
rcl
outs
mov
push
mov
push
or
js
mov
std
inc
push
pop
movs
in
jl
and
and
or
and
pop
cmp
cmps
fwait
rcr
inc
inc
out
aam
ja
mov
jl
movs
inc
add
mov
sub
xor
inc
hlt
dec
sub
fsubr
mov
xchg
and
pushf
lods
add
ins
mov
dec
xlat
add
and
and
or
push
retf
xor
sti
pop
pusha
jmp
mov
gs
js
jne
add
repnz
inc
fidiv
pop
adc
xchg
es
sbb
sbb
sbb
cmp
shr
popf
cmp
pop
sti
cmps
adc
mov
or
stos
mov
cld
pop
ins
test
ins
das
out
dec
(bad)
or
shl
pop
add
jg
mov
jge
or
xor
ret
bnd
bound
jg
cs
cdq
xor
and
mov
or
sub
daa
jecxz
call
pop
mov
sbb
sar
dec
pop
call
inc
outs
int
jl
dec
rol
push
xchg
vpunpckhwd
rcl
sub
xchg
arpl
movs
inc
sbb
leave
fwait
popf
jbe
(bad)
and
push
dec
loop
ss
sbb
outs
add
outs
lods
inc
enter
xor
lods
or
aas
and
inc
push
mov
cmps
cwde
ror
jne
(bad)
test
xchg
sbb
(bad)
pop
mov
fs
imul
outs
lock
(bad)
movs
mov
xchg
xchg
leave
test
mov
inc
jbe
sub
scas
pop
into
sub
jl
xor
mov
in
shr
test
add
loope
add
jmp
popa
ins
stc
jg
stos
jae
mov
push
add
xor
nop
sbb
cmp
or
mov
stos
aas
lods
outs
push
stos
or
mov
cmps
push
pop
int3
cwde
xchg
jp
mov
rcl
(bad)
rol
jge
mov
fwait
xchg
mov
bound
xor
sub
je
add
jnp
lods
retf
rcr
nop
cmp
jge
mov
jns
jmp
ret
repnz
test
ret
sbb
jbe
stos
pop
and
ds
jle
lods
cdq
cmp
mov
lea
addr16
sub
xor
and
xor
mov
mov
lds
call
inc
(bad)
arpl
stos
sub
jg
inc
add
(bad)
nop
fwait
jmp
test
xor
adc
mov
clc
out
(bad)
and
vunpcklpd
mov
ins
movs
cmp
mov
das
or
retf
retf
jno
xor
push
inc
test
add
sub
jmp
stc
leave
fistp
js
inc
call
cmp
jne
dec
push
dec
aam
sub
repz
test
repz
or
push
loop
jmp
mov
jecxz
out
into
out
add
mov
jecxz
stc
jl
jmp
repz
dec
movs
jmp
ret
ins
add
fs
xor
test
pop
sbb
scas
sub
out
mov
mov
js
push
dec
test
mov
retf
call
xchg
sbb
shl
fst
cmp
push
pop
scas
cmp
call
stos
out
sar
lds
aaa
or
ret
scas
lahf
jmp
adc
sti
jl
inc
fidivr
hlt
xchg
ins
(bad)
jmp
out
jo
pop
sub
adc
pop
sbb
pushf
adc
pop
std
hlt
xor
mov
in
aam
sbb
cli
test
stos
in
dec
(bad)
repz
test
and
test
imul
jnp
in
(bad)
inc
xchg
jge
out
test
xor
xor
sbb
mov
and
fstp
adc
lods
(bad)
int3
xchg
lock
push
adc
mov
or
sub
jmp
mov
add
inc
mov
cmc
xor
mov
ja
jg
and
mov
add
mov
inc
fldcw
and
mov
in
shl
in
add
repz
sub
in
(bad)
stc
push
movs
js
scas
jbe
scas
cwde
retf
mov
cmp
sub
inc
ins
sub
shl
out
jbe
(bad)
mov
and
or
in
and
xor
sub
push
mov
push
movs
test
outs
mov
mov
inc
(bad)
popf
pop
sub
sub
jecxz
and
std
test
movsx
ret
jge
mov
(bad)
retf
mov
jmp
adc
mov
ins
sub
je
jecxz
pop
push
retf
dec
push
stc
test
or
push
fdiv
mov
push
stos
dec
das
fdivr
mov
out
jae
fisubr
imul
inc
js
mov
inc
mov
int
jmp
adc
xor
data16
xchg
outs
out
dec
inc
int3
call
pushf
shl
popf
dec
shr
xor
sbb
fmul
dec
out
outs
sub
je
jb
adc
es
and
icebp
jb
push
mov
mov
repz
int
js
mov
xor
dec
aad
jmp
jmp
ins
loope
xchg
loopne
or
adc
xor
movs
cli
jecxz
ds
and
stc
sub
stos
leave
cmp
int3
rcr
movs
mov
sub
enter
mov
jmp
mov
retf
lahf
xor
inc
jae
ror
popa
sub
inc
and
ret
movs
retf
and
mov
add
or
cdq
mov
fdiv
sbb
xchg
scas
cmps
xchg
xchg
xchg
or
jo
dec
jle
pop
and
enter
and
adc
cmps
outs
fistp
lods
leave
loop
test
inc
ret
les
mov
jnp
outs
mov
(bad)
xchg
push
inc
lods
cmp
(bad)
(bad)
mov
retf
popf
int3
mov
iret
into
lahf
xchg
test
mov
adc
cwde
repz
jmp
call
test
jl
(bad)
loopne
pop
cmp
retf
mov
push
jns
rcr
sbb
movs
dec
enter
cmps
jb
mov
push
daa
push
sar
adc
enter
mov
xor
mov
inc
je
cmp
lock
ret
mov
je
xlat
rcl
jb
sub
or
or
sar
scas
add
jl
mov
fstp
or
mov
mov
js
adc
sbb
test
add
jns
out
sbb
adc
popa
jno
ja
mov
mov
cmp
nop
or
sub
inc
and
repz
shl
dec
or
stos
xor
retf
fdiv
in
pusha
sub
cdq
rep
push
lea
retf
mov
add
push
jne
add
mov
jl
sub
retf
jecxz
iret
jecxz
mov
dec
inc
pop
lds
sbb
call
sbb
mov
and
outs
or
or
movs
ss
or
xchg
cli
push
iret
lahf
ss
call
fs
xor
cmc
mov
xchg
cmp
mov
pusha
les
movs
nop
pushf
push
in
jle
movs
sar
push
and
mov
test
mov
sbb
pop
ja
out
adc
add
cmp
push
ins
movs
test
fisttp
inc
mov
adc
jnp
cmps
test
pop
xor
mov
fwait
add
test
add
xchg
(bad)
in
repz
outs
adc
loope
dec
sub
jno
fistp
mov
fcmovne
or
sub
in
(bad)
outs
mov
cld
jl
jle
or
pushf
jno
mov
push
cmp
cmp
hlt
mov
adc
fwait
jbe
pop
test
dec
mov
mov
ins
dec
stos
(bad)
imul
in
mov
dec
rcl
cmp
adc
inc
jne
xchg
xor
xchg
or
aaa
test
jmp
gs
rep
mov
and
iret
out
mov
mov
and
fsub
dec
ret
imul
lahf
iret
jg
jb
and
adc
jmp
sub
xchg
outs
xchg
push
ja
xchg
(bad)
sbb
sub
cmp
popf
mov
retf
icebp
rcr
jmp
sbb
out
stos
xchg
mov
cld
mov
loopne
mov
push
arpl
adc
jmp
ret
jp
cwde
mov
mov
ror
and
iret
ret
pusha
shl
outs
mov
sub
jne
fidiv
(bad)
sbb
aam
dec
inc
cwde
push
sahf
push
add
cmp
jg
inc
call
sbb
mov
xchg
ret
xor
xchg
fcomp
or
jle
mov
sti
or
ds
jge
(bad)
mov
add
and
xor
call
cld
je
loopne
aaa
mov
add
fcom
mov
(bad)
int3
or
imul
loopne
sar
repz
jmp
mov
add
fs
xor
aad
dec
repnz
je
xchg
enter
dec
ins
scas
xchg
dec
mov
sbb
lods
shl
cmp
inc
add
mov
clc
out
pop
mov
mov
jmp
loop
cwde
stos
cli
dec
imul
outs
jne
mov
adc
dec
push
pop
sbb
ret
add
push
lods
(bad)
jle
inc
mov
loope
mov
push
mov
mov
jp
xchg
add
fwait
adc
or
jmp
ror
ja
test
lea
mov
cmps
add
sbb
pop
fwait
in
pop
ins
mov
pop
push
adc
push
stos
rol
or
jge
scas
stos
adc
adc
(bad)
jae
mov
add
std
jnp
and
retf
jne
xor
add
push
xor
stos
fisub
outs
rcl
jmp
ret
or
cmps
(bad)
repz
push
(bad)
icebp
xor
xchg
xchg
leave
lods
xor
cmp
jmp
test
popf
mov
xchg
(bad)
xchg
imul
jnp
out
nop
enter
push
jmp
out
pop
cmp
or
arpl
les
mov
pop
push
in
aam
or
ins
sub
ror
iret
pop
pop
stc
dec
mov
fbld
ror
sbb
mov
cmp
imul
cmp
out
cmc
gs
and
pop
jg
outs
and
mov
test
inc
popf
jmp
mov
or
dec
movs
out
mov
sti
ss
sar
(bad)
fcmovnbe
sub
jo
leave
adc
sahf
les
mov
out
cli
mov
sbb
dec
xchg
or
in
jecxz
pop
adc
out
retf
xchg
sar
sub
clc
test
jb
rcr
add
arpl
jmp
inc
push
iret
cmp
(bad)
aas
xlat
xchg
mov
sbb
jns
mov
(bad)
or
sub
enter
ds
ret
add
push
ins
fimul
repnz
or
dec
cmp
xor
pop
ret
(bad)
jmp
mov
inc
into
mov
call
xor
in
push
lods
(bad)
dec
inc
fcom
add
fdiv
mov
or
jnp
push
ja
sub
out
movs
push
mov
jge
mov
test
popf
mov
xchg
cmc
add
imul
jecxz
mov
(bad)
retf
or
mov
js
jg
dec
gs
out
jmp
icebp
or
xor
in
cmp
pop
adc
add
repz
aam
push
mov
cmps
adc
fcomp
cwde
mov
xor
hlt
rcl
adc
xchg
aas
jle
pushf
stc
xchg
fmul
jmp
xor
push
add
pop
in
in
aaa
jge
sar
retf
or
loopne
push
retf
push
std
fs
shr
or
in
fisttp
aaa
test
push
jecxz
inc
mov
sbb
repz
push
js
push
xchg
fdiv
leave
dec
stc
add
pop
cs
ror
cwde
ret
pop
or
call
mov
out
mov
int3
sbb
lods
inc
dec
cmc
inc
xchg
ret
lods
fistp
jg
cmp
sti
sbb
les
dec
das
mov
mov
pop
test
push
or
mov
adc
jns
aas
inc
mov
sbb
mov
fist
es
std
pop
add
cmp
inc
push
outs
or
dec
jle
and
sub
mov
arpl
inc
pop
add
rol
add
jae
icebp
in
fidivr
dec
pop
ja
pop
hlt
(bad)
jno
and
shl
push
dec
cmp
lea
outs
cwde
mov
cmps
push
cwde
mul
push
jnp
cmps
test
mov
jne
push
adc
ret
ficomp
fwait
cmp
xchg
mov
mov
add
xlat
mov
mov
dec
ror
cdq
or
(bad)
mov
push
sbb
push
stc
xor
stos
mov
loop
sub
sbb
pushw
xor
adc
into
adc
add
pop
popa
pop
arpl
loop
dec
push
dec
sbb
or
pop
mov
cmp
cmp
ins
ficom
mov
cmp
mov
jmp
mov
js
movs
ds
ins
add
add
test
fild
or
neg
(bad)
cwde
dec
sub
jb
ret
sbb
xlat
(bad)
shl
(bad)
mov
(bad)
stos
mov
jg
dec
(bad)
pop
push
cmp
ins
rol
out
mov
adc
test
sbb
popa
ss
push
mov
imul
jne
mov
mov
into
ja
mov
popa
stc
fist
push
gs
xchg
xchg
pcmpgtd
fnstenv
in
int3
cmp
shl
(bad)
lds
loope
jecxz
stos
mov
inc
xchg
into
or
sahf
jbe
inc
ffree
pop
mov
sbb
loop
add
pop
int3
sbb
xchg
icebp
mov
in
dec
mov
fsubrp
and
(bad)
aad
or
pusha
(bad)
out
shr
ins
xchg
cwde
sar
sbb
dec
call
cld
lahf
popf
jne
ret
iret
ror
in
js
cmp
inc
in
jmp
sbb
(bad)
je
adc
retf
xor
ss
sbb
jo
ins
mov
jmp
jno
stos
mov
mov
inc
mov
jo
inc
rol
sub
or
jnp
lods
jmp
add
sar
push
cmp
or
xor
data16
xchg
xlat
into
adc
ss
mov
loope
out
ds
(bad)
mov
inc
(bad)
cs
hlt
test
cmc
mov
ja
xchg
push
aaa
scas
nop
adc
ror
in
ret
cmp
int
std
imul
dec
es
jno
xchg
xor
and
add
mov
mov
mov
or
dec
shl
mov
sub
push
pop
jb
(bad)
fimul
mov
pop
mov
jb
jmp
mov
mov
mov
inc
mov
cmp
in
jo
pop
outs
and
fdiv
sbb
mov
and
aad
lock
movs
jno
pop
sahf
js
shl
shr
call
pop
hlt
mov
push
push
faddp
pop
retf
ss
int
fstp
into
dec
sbb
mov
(bad)
mov
push
jl
and
(bad)
ds
stos
loope
jl
cdq
inc
fst
push
pop
ins
jg
pop
div
or
fadd
or
push
or
mov
cmps
sub
mov
into
xchg
int
push
pop
mov
xor
jns
aad
ins
push
adc
jns
add
pop
lahf
sub
and
sub
loop
cmps
aam
dec
sbb
mov
aaa
mov
mov
call
mov
test
les
sub
jmp
xchg
in
retf
or
inc
test
ds
in
lahf
mov
xchg
pop
(bad)
hlt
sbb
aas
icebp
in
movs
jl
jbe
sbb
push
sub
enter
mov
and
push
xor
loop
mov
sub
push
xchg
rcl
xor
inc
xor
lds
xor
push
leave
scas
repnz
and
jnp
adc
dec
pop
adc
lahf
stos
mov
call
mov
retf
xor
scas
not
pop
repz
retf
pop
std
imul
fldenv
clc
out
cmp
xor
call
mov
mov
fwait
mov
daa
call
pop
and
in
pop
adc
cmp
mov
cs
je
movs
mov
imul
iret
stc
cld
adc
fiadd
jbe
aaa
push
test
pop
scas
cwde
out
or
xchg
adc
push
fidiv
or
inc
mov
stc
call
sbb
or
xchg
jle
mov
sub
and
add
cmp
push
lahf
cmp
mov
stos
int3
test
mov
add
out
adc
ja
bound
add
loope
in
add
add
dec
mov
jne
lods
add
(bad)
lds
sti
popf
(bad)
xor
xchg
sbb
jg
iret
dec
lahf
gs
adc
push
mov
or
rcr
pop
cmp
xchg
cmps
retf
fbld
test
imul
fadd
cmp
inc
cld
cmp
xchg
xchg
cmps
cmps
push
or
fstp
jne
inc
mov
sahf
retf
inc
ret
xchg
(bad)
inc
adc
cmps
ficomp
pop
dec
scas
iret
mov
sbb
ror
or
pop
div
cmp
out
add
dec
int
js
popf
push
mov
sub
cmp
aam
dec
(bad)
mov
sub
daa
stos
sar
or
sbb
je
retf
(bad)
add
xchg
push
inc
pop
cmp
jmp
rol
ds
loope
pop
jbe
pop
mov
iret
cmp
xor
mov
retf
add
jbe
cmp
add
cld
fiadd
enter
adc
mov
aaa
fs
test
ins
jecxz
mov
mov
fneni(8087
es
push
inc
pop
or
jo
test
retf
cld
mov
jecxz
cmp
inc
or
inc
out
mov
call
xchg
xchg
outs
popf
mov
xchg
mov
fcom
hlt
push
aam
and
mov
pop
mov
inc
cmp
pusha
loope
stos
and
popf
push
lods
pusha
or
aas
mov
addr16
dec
jg
inc
test
outs
js
add
xor
mov
lock
je
getsec
mov
loope
pop
dec
mov
push
jp
lods
jp
rol
inc
or
jno
mov
jb
jb
mov
xchg
push
js
sbb
xchg
or
jns
pop
cmp
mov
dec
xchg
mov
in
leave
cs
out
jns
prefetchnta
loop
xchg
push
dec
loopne
enter
adc
mov
ss
rcr
repz
mov
mov
ins
fsubrp
xor
sar
out
mov
cs
inc
ret
int3
adc
inc
cmc
fdivr
out
fstp
fs
enter
jge
inc
jmp
es
xchg
int3
mov
inc
jb
push
and
in
sbb
or
or
outs
test
rcl
aam
cmps
popf
xlat
xchg
js
jge
scas
or
jo
jge
mov
enter
inc
adc
cmp
mov
dec
(bad)
and
pop
shufps
dec
cli
sbb
in
mov
mov
cmp
imul
mov
sbb
push
les
adc
idiv
xchg
(bad)
and
mov
adc
xor
add
jae
cmp
pop
xor
sbb
xchg
leave
rol
popa
outs
stc
mov
cmp
into
mov
mov
movs
clc
ror
outs
cmps
test
sbb
and
retf
daa
mov
stos
stc
(bad)
xor
and
mov
cs
js
fstp
repz
pop
bound
js
iret
xor
movs
test
jecxz
fcmovnb
(bad)
jbe
and
jbe
adc
test
jmp
adc
imul
outs
jle
fsubr
es
dec
xor
mov
inc
inc
fcmovu
pop
outs
iret
xchg
mov
cmp
pop
push
mov
and
mov
test
adc
shl
stc
or
push
hlt
shl
jg
aam
inc
xor
sub
mov
adc
into
push
out
cli
and
sub
shl
push
fldcw
pop
xchg
push
or
mov
jp
push
cmp
(bad)
arpl
jo
test
jle
or
clc
dec
lods
mov
dec
cmp
sbb
fnsave
iret
test
jo
pushf
ret
cmp
imul
in
les
push
ret
pop
pop
add
pushf
add
or
cmp
lods
add
jecxz
(bad)
push
pusha
hlt
pushf
hlt
inc
jae
neg
stos
push
call
ins
daa
icebp
inc
mov
ja
sahf
rcr
daa
dec
cmp
outs
add
dec
mov
ins
ret
ja
frstor
jb
data16
lods
mov
pushf
ret
pop
xchg
(bad)
jns
adc
mov
call
out
repnz
mov
sub
push
fild
(bad)
ins
sub
adc
sbb
xor
xchg
jl
xchg
mov
not
mov
ins
movs
or
push
cmp
mov
mov
ror
and
jo
cli
xlat
cmps
inc
shr
sub
and
imul
push
inc
jne
and
mov
sbb
leave
fimul
pop
test
dec
loop
(bad)
mov
inc
loopne
imul
inc
ret
dec
pop
in
fistp
(bad)
int3
pop
int
hlt
pop
cmp
add
pop
inc
fimul
je
call
jmp
pop
xchg
xchg
cmp
ja
neg
mov
mov
ficomp
mov
adc
fdiv
shr
das
aaa
inc
pop
repz
mov
adc
icebp
(bad)
cli
sahf
retf
pusha
xchg
call
mov
inc
push
inc
adc
push
repnz
arpl
pop
and
cs
mul
ds
loopne
fisttp
cmp
daa
sbb
add
cli
and
mov
shr
enter
xchg
std
ficomp
mov
jb
aad
push
int
inc
daa
dec
sub
sti
pop
push
lea
cmps
fwait
sub
sbb
pop
mov
test
(bad)
mov
popa
gs
test
fdivr
ror
jmp
mov
sti
inc
pop
adc
push
aad
aam
cmc
stc
test
cdq
ret
sub
ss
inc
(bad)
dec
sub
outs
outs
mov
(bad)
mov
xor
out
jecxz
xchg
bound
push
xor
movs
push
xor
or
pop
daa
push
and
jbe
pop
repnz
mov
out
sbb
cmc
xor
xchg
pop
mov
pushf
imul
xchg
jae
mov
lods
gs
mov
xor
in
rcl
mov
dec
mov
sbb
stos
ret
pop
fcomp
adc
stos
in
add
das
xor
ror
imul
hlt
dec
xor
in
(bad)
stc
fs
retf
rcr
pop
and
cmps
mov
test
jge
daa
icebp
(bad)
push
sbb
mov
and
mov
movs
pop
or
jae
bound
dec
dec
push
add
add
enter
adc
mov
stos
cmp
mov
mov
inc
pop
jns
push
inc
movs
test
pop
int
or
fnstenv
add
fucomip
icebp
push
push
inc
and
fnstsw
nop
int
xor
xchg
sti
or
sub
adc
rcl
ret
sar
inc
inc
push
inc
outs
lahf
xchg
adc
pop
cwde
bts
adc
icebp
mov
mov
adc
adc
or
loope
fild
and
aas
popw
(bad)
sub
or
sub
sub
int3
fdiv
test
call
cpuid
and
cmp
mov
gs
cs
xlat
push
inc
or
cld
or
pop
mov
sub
add
jbe
aas
xchg
inc
ins
inc
enter
into
mov
pop
fs
in
or
mov
xchg
adc
xchg
mov
stos
test
bound
jnp
retf
aas
mov
bound
loop
dec
add
scas
sbb
lods
cli
add
xor
les
popf
jge
das
rcr
push
fwait
pop
hlt
adc
push
xor
jecxz
shl
jg
xor
aad
jmp
and
popa
popf
mov
gs
loopne
pusha
nop
push
sbb
pop
xchg
push
cmps
xchg
jo
test
shr
sbb
and
push
jge
ds
mov
(bad)
(bad)
cmp
jne
ror
inc
dec
mov
int3
out
mov
int
adc
dec
out
pop
or
into
ds
ret
inc
mov
adc
fwait
xchg
add
pushf
sub
stos
mov
jle
cmp
test
sbb
or
rcl
adc
and
adc
movs
rol
mov
aas
popa
out
adc
je
repnz
add
xor
cli
loop
daa
fdivp
repnz
cmp
xor
sub
xchg
std
mov
and
lahf
pop
test
aam
cmp
ret
mov
mov
pusha
mov
fstp
push
xchg
popf
retf
push
sub
rcr
gs
xor
js
pop
test
(bad)
enter
fisub
and
sbb
rcr
jmp
sti
pop
popa
adc
fwait
inc
xchg
es
xor
movs
mov
test
ficom
add
push
stos
pop
shl
cmps
sbb
cwde
pop
xchg
std
je
stos
and
daa
retf
ss
jne
sub
imul
cmp
sahf
out
push
mov
outs
sub
scas
callw
or
inc
and
xor
jno
sbb
dec
and
in
ss
mov
call
sti
into
pop
xchg
enter
sbb
xor
push
sub
in
pop
add
mov
lea
adc
rcl
int3
outs
mov
out
icebp
in
nop
adc
sub
jbe
jge
jp
pop
inc
ror
js
jl
clc
sbb
xor
dec
repz
stos
add
nop
fst
push
mov
adc
sbb
xchg
imul
or
stos
jb
jmp
rcr
sbb
inc
mov
add
in
dec
js
pusha
test
mov
dec
or
cdq
jmp
loope
repnz
mov
adc
add
adc
cdq
pop
out
and
gs
ds
leave
lods
sbb
jg
in
imul
fimul
mov
and
sar
mov
call
sbb
mov
je
jbe
and
ret
(bad)
adc
clc
inc
push
cmp
pop
call
adc
and
dec
cmps
mov
movs
fcmovnbe
(bad)
aas
ss
fld
(bad)
icebp
mov
cmp
mov
sub
into
pop
idiv
dec
mov
imul
cdq
in
or
out
xlat
adc
bound
das
or
in
jb
cs
pop
test
cmps
je
sbb
push
movs
xchg
loopne
adc
jmp
add
ror
retf
cmp
jno
outs
fld
adc
mov
daa
add
adc
mov
jno
xor
jl
cwde
unpckhps
shl
and
xchg
mov
addr16
adc
jp
mov
daa
aaa
push
lods
shr
sbb
out
outs
mov
inc
pop
mov
sub
in
xor
cmp
xor
loopne
mov
mov
les
mov
xor
pop
in
push
je
(bad)
popf
test
mov
(bad)
push
sti
mov
or
pop
pop
rcr
and
mov
fdiv
inc
mov
mov
mov
xchg
sub
(bad)
add
mov
mov
inc
clc
xchg
cmp
out
sahf
mov
mov
fadd
mov
sub
jns
in
sahf
mov
add
sbb
xor
xchg
or
out
stos
sbb
or
cs
pop
cmps
enter
push
ror
xchg
xchg
into
test
inc
pop
and
mov
mov
mov
les
test
push
or
iret
dec
inc
arpl
and
xor
test
pusha
sub
xor
dec
jne
xchg
cdq
jne
clc
cmp
xor
iret
aas
pop
sub
shl
pushf
dec
adc
mov
adc
popf
dec
adc
(bad)
xor
shr
cmc
adc
xchg
mov
fbld
bound
xchg
vmovhps
shl
add
hlt
out
mov
pop
das
and
imul
shr
mov
repnz
(bad)
(bad)
jbe
sbb
pop
daa
add
out
lahf
sub
cmp
nop
mov
xchg
mov
jne
sbb
sbb
test
js
es
pop
int
int3
stos
loop
cmp
stos
mov
daa
in
repnz
xchg
imul
mov
pop
push
sub
sbb
in
pop
imul
out
add
sub
xchg
daa
popf
(bad)
sbb
test
push
cmps
pushf
lea
add
push
and
popf
push
mov
scas
jno
(bad)
mov
iret
xchg
push
and
push
cld
jnp
xlat
and
sub
rcr
mov
shl
inc
aaa
scas
gs
aam
popa
mov
mov
js
in
outs
dec
pop
jmp
mov
add
sbb
cmp
add
int3
xlat
push
inc
pop
daa
imul
sbb
daa
lods
stos
sti
and
jne
lods
and
sahf
mov
xlat
xor
stc
sub
pusha
rol
(bad)
out
push
or
cmc
psllw
fist
mov
gs
mov
mov
mov
jnp
mov
mov
push
jge
ror
inc
xlat
sbb
ss
in
jmp
cld
popa
hlt
jmp
xchg
jb
xor
sub
cs
and
out
and
rcl
call
(bad)
aam
jl
inc
jge
cmp
and
inc
test
leave
mov
fnsave
pop
xchg
in
xor
pop
push
cmps
push
test
xor
mov
stos
and
sbb
and
xchg
sar
inc
cmp
scas
adc
jmp
jne
test
push
adc
or
enter
jle
in
out
pop
stc
(bad)
pop
mov
or
push
jmp
xchg
mov
push
dec
fcmove
xchg
ja
push
fsubr
add
inc
aaa
ret
or
ss
mov
test
in
push
push
sub
adc
pusha
arpl
gs
sub
test
scas
(bad)
mov
cmps
test
adc
pop
es
fwait
lods
and
pop
push
push
pop
inc
pop
inc
mov
xor
inc
ror
test
push
xchg
popa
mov
cdq
in
mov
dec
push
mov
and
movs
push
mov
jmp
fstp
sub
cmp
jp
aaa
push
xchg
push
adc
pop
jmp
mov
and
mov
mov
pop
or
and
int3
mov
punpckldq
mov
sbb
ret
cmp
arpl
cmp
push
adc
rol
js
retf
sbb
cmps
and
leave
or
and
jmp
dec
mov
jmp
mov
and
and
and
je
ja
daa
and
bnd
jl
cvtps2pd
mov
inc
das
xor
cmp
inc
out
call
jo
(bad)
sbb
sub
jl
mov
repz
sahf
push
cmps
and
ret
inc
and
or
vmovapd
xor
add
(bad)
aad
cmp
shl
(bad)
lock
xchg
add
cmp
xchg
or
xor
bound
shr
out
movs
imul
mov
pop
out
call
jp
aad
xlat
mov
lods
out
aas
push
and
popa
outs
mov
outs
and
test
add
addr16
xor
push
sbb
add
(bad)
adc
sub
mov
loop
cmp
int3
add
and
jne
jle
stos
dec
cmp
push
bound
loope
loop
outs
stc
push
or
shl
fild
push
xchg
mov
call
cmp
ds
lds
push
or
imul
inc
aam
add
arpl
in
loopne
lods
cmp
adc
fcmovu
dec
jl
mov
shl
hlt
push
ja
push
mov
jmp
les
inc
adc
xchg
repz
mov
push
outs
outs
cmp
cs
xor
jmp
mov
(bad)
pop
shr
(bad)
mov
mov
lds
sbb
add
scas
lods
cmps
sbb
fs
add
mov
iret
jl
and
aaa
call
sbb
repnz
retf
outs
lods
lea
add
sub
fnstcw
shl
aas
sti
(bad)
pop
fwait
and
fs
or
nop
xor
add
xchg
test
out
lods
pusha
sar
das
sub
int3
movs
mov
mov
xchg
or
xchg
lods
popf
push
push
lea
sub
jge
pop
jg
fs
push
push
or
mov
mov
mov
add
xlat
cmp
mov
mov
ins
or
mov
mov
inc
stos
out
movs
jne
cmps
mov
jp
mov
popa
std
or
adc
xor
xor
outs
mov
xchg
jp
sbb
nop
clc
mov
cmps
outs
leave
fs
rcl
imul
ret
ins
clc
sahf
xor
mov
sub
mov
scas
pop
inc
loopne
rcl
imul
sti
sar
popf
xlat
repz
stos
dec
adc
sub
fnstenv
push
aas
push
mov
fidiv
cmps
cli
imul
ret
mov
mov
mov
cmc
adc
and
call
test
add
inc
stos
jne
mov
fild
mov
push
add
lods
not
cld
jmp
pop
fisubr
dec
in
fmul
jae
push
cs
retf
adc
xor
aam
sbb
inc
sbb
mov
dec
push
lahf
push
les
mov
pusha
xchg
or
sub
cmp
cdq
hlt
pop
pop
repz
dec
sbb
adc
xor
adc
jae
pop
mov
inc
aas
mov
xlat
jbe
inc
and
sbb
add
lds
sbb
sub
xchg
pop
(bad)
out
and
repnz
cs
cs
sbb
jb
cdq
sbb
pop
aas
in
push
fisttp
pop
or
xchg
mov
adc
jmp
mov
inc
icebp
adc
jb
into
outs
dec
xchg
cmp
ins
and
mov
push
pop
cwde
jae
bt
mov
lods
cmp
pop
cli
push
jmp
in
or
jno
imul
scas
ja
(bad)
adc
and
pop
jg
fcom
jb
ret
cwde
dec
test
ins
adc
dec
cli
imul
mov
ror
cmps
and
fmul
jnp
(bad)
pop
add
mov
(bad)
fidiv
test
dec
xchg
idiv
sbb
aam
ins
mov
jle
xchg
and
shr
dec
aas
retf
jg
mov
add
jge
clc
pop
inc
push
adc
test
movs
xor
repz
stc
iret
adc
call
mov
mov
pop
and
jae
in
sbb
dec
in
ins
daa
or
fdiv
aad
mov
(bad)
lods
les
sub
dec
(bad)
shl
cmp
repz
and
mov
out
lahf
sub
inc
jae
dec
ins
mov
mov
pop
push
and
dec
mov
dec
xchg
inc
(bad)
xchg
inc
pop
clc
mov
stc
fs
add
cwde
out
sbb
fisttp
fyl2xp1
mov
xchg
adc
xor
mov
dec
jmp
cmc
adc
(bad)
(bad)
test
inc
popf
stos
jo
push
jbe
jne
add
jne
xor
pop
test
xchg
push
stos
or
sub
cmp
into
add
push
cmp
add
ds
int
jbe
mov
aas
mov
xor
or
scas
stos
sbb
(bad)
cli
sti
xor
sbb
inc
call
mul
add
test
cwde
push
cmp
mov
add
jmp
and
inc
push
push
xchg
ret
jns
add
fsubr
or
inc
xchg
and
imul
adc
jb
push
dec
sbb
pop
mov
(bad)
jp
push
loope
adc
popf
stos
jmp
and
lea
cmp
add
jg
paddsw
in
jb
mov
mov
jle
push
inc
mov
dec
mov
cmp
daa
std
pop
lahf
ror
daa
or
pop
push
outs
push
push
neg
jle
push
pop
shl
push
repz
xchg
pop
cld
or
or
loope
loope
mov
test
lds
pop
mov
cld
out
fmul
rcr
jo
ret
pushf
mov
sub
sar
jle
push
adc
sub
xchg
adc
aad
sbb
fcmovbe
xor
cld
mov
adc
mov
cmps
mov
ds
in
mov
jg
jmp
pushf
test
fldenv
sbb
test
fdivr
and
mov
and
mov
sub
call
sub
call
retf
pop
sbb
retf
sbb
mov
cmp
mov
mov
add
(bad)
and
jns
call
cwde
cmp
icebp
data16
call
leave
adc
les
jl
jb
adc
test
leave
and
adc
sub
ja
outs
xchg
ins
pop
jmp
xchg
or
jmp
sub
data16
mov
push
xchg
stos
jb
mov
xchg
vminsd
and
push
adc
mov
sbb
cmp
mov
xchg
pushf
sbb
jne
je
arpl
cmps
retf
popa
ins
mov
hlt
ficomp
mov
in
mov
loop
xchg
fisub
enter
pop
dec
hlt
sbb
inc
xor
push
xor
into
inc
mov
cmp
add
clc
outs
ins
je
mov
pop
xor
lea
aas
adc
or
or
dec
nop
mov
js
into
inc
addps
es
je
cmp
add
xor
in
and
sub
es
aam
mov
test
jmp
push
adc
call
mov
jg
mov
mov
cmp
cwde
mov
push
add
push
push
jmp
pop
push
outs
outs
fs
mov
aam
int3
aaa
ss
pop
fs
fstp
test
or
or
cld
sub
push
sbb
or
sbb
fld
adc
pop
aam
adc
pop
or
les
inc
hlt
shl
fisub
adc
or
movs
not
aam
pop
movs
(bad)
gs
jmp
sar
es
aaa
inc
cdq
jle
adc
jmp
dec
fisubr
inc
and
xor
mov
idiv
movs
ja
add
int3
dec
shr
sbb
inc
jl
iret
push
outs
dec
sahf
leave
inc
das
in
retf
jle
inc
mov
inc
xchg
ds
sbb
inc
addr16
cwde
mov
push
inc
ins
dec
fcmovne
test
mov
mov
push
(bad)
in
stos
popf
cs
mov
mov
add
ins
inc
inc
cs
jl
fdivr
loop
in
test
push
dec
rcl
pop
sbb
fwait
(bad)
adc
je
mov
dec
lods
arpl
stc
cs
pop
add
nop
mov
sbb
mov
aas
jecxz
out
pop
push
in
pop
repz
mov
in
ins
lock
(bad)
call
ins
dec
jmp
in
int3
mov
or
fnstsw
mov
mov
daa
into
ja
push
or
sbb
jnp
sahf
sbb
mov
pop
leave
dec
mov
mov
dec
mov
(bad)
icebp
pop
xlat
add
in
adc
test
jge
stos
scas
gs
cmp
mov
fistp
stos
xchg
mov
jp
xor
push
mov
adc
push
push
pop
inc
adc
loope
or
and
stos
pop
xchg
add
jle
push
fiadd
les
pop
push
cld
pop
or
outs
jge
jae
loopne
out
stos
test
stos
xchg
and
outs
out
add
mov
xor
add
xchg
mov
int3
clc
or
sub
out
into
(bad)
call
ds
add
icebp
retf
and
inc
adc
mov
outs
imul
sub
sub
lock
aaa
jmp
(bad)
out
jecxz
or
xor
aaa
addr16
push
push
cmps
ficom
add
dec
dec
push
out
pop
xchg
retf
cmp
pusha
pop
clc
push
mul
mov
mov
pusha
pop
ins
out
sub
cmp
cmp
jge
push
push
rol
rcr
stos
retf
mov
in
(bad)
cmp
jmp
xchg
test
add
cmps
sbb
jl
cld
bound
jg
into
xor
pushf
fadd
fist
push
push
mov
push
sbb
mov
mov
and
jb
mov
(bad)
ror
xchg
clc
adc
out
sbb
popa
push
sub
fdivr
dec
and
mov
jle
jno
icebp
mov
lock
enter
dec
imul
dec
hlt
sub
mov
and
int3
(bad)
xchg
mov
sub
dec
out
mov
aas
xor
push
in
jo
js
sahf
inc
mov
xor
nop
xchg
ficomp
cmp
aad
mov
stc
popf
div
rcr
dec
adc
scas
dec
rcl
adc
hlt
or
jae
mov
fisub
jmp
mov
jb
mov
data16
fild
sar
mov
icebp
xor
outs
jg
test
mov
lock
std
and
jno
mov
push
adc
into
test
mov
std
aam
jp
(bad)
push
aas
mov
(bad)
and
pop
jbe
jmp
dec
pop
add
xchg
ret
jne
sub
clc
inc
inc
rol
inc
sbb
repz
jle
inc
popa
fdivr
(bad)
cmps
mov
retf
sub
retf
push
cmp
mov
mov
inc
ret
or
mov
stc
pop
and
daa
cmp
aaa
outs
cs
(bad)
cdq
cmps
sub
sub
or
dec
xchg
cmp
std
cmp
retf
cmp
cmp
mov
sahf
add
retf
pop
jnp
int3
lea
sar
out
jo
hlt
cmp
ror
jg
loop
push
jge
xchg
jmp
xchg
(bad)
daa
(bad)
in
adc
sbb
cmps
ss
jmp
push
es
pop
sbb
les
pusha
xchg
push
in
push
xor
mov
add
cmps
call
pop
jno
inc
out
in
adc
ja
cmp
xor
adc
fdiv
(bad)
ins
dec
cli
and
and
test
scas
push
cld
mov
mul
mov
stos
mov
out
arpl
int3
cmps
out
xchg
xchg
jecxz
call
ja
and
mov
in
lods
lods
cmp
imul
mov
mov
(bad)
ds
mov
dec
mov
(bad)
jbe
or
sbb
sti
jl
test
mov
mov
cmp
(bad)
loopne
jge
pop
push
fidiv
out
xor
shr
aam
or
dec
sti
pop
or
inc
loopne
xchg
out
lahf
xchg
retf
aaa
sahf
(bad)
aas
std
push
cwde
xlat
lahf
mov
jbe
enter
or
mov
cmp
mov
mov
add
cli
daa
add
ret
cmp
ror
cmp
sti
aad
sub
mov
fisubr
push
dec
dec
rol
mov
je
fldenv
or
sahf
pop
push
xor
jb
aad
dec
jb
mov
xor
pop
inc
clc
pop
mov
inc
in
sub
fcomp
xor
call
jle
jne
fcmovnbe
mov
icebp
push
xchg
push
fs
mov
mov
adc
jno
cdq
pop
mov
sub
sbb
pop
or
push
popa
mov
sbb
mov
dec
mov
adc
mov
adc
and
scas
stc
dec
fld
js
fcomp
call
mov
lods
sub
dec
cmps
inc
dec
xor
fstp
add
add
test
sbb
loopne
xor
stos
push
jb
xor
dec
jl
retf
push
jbe
ja
stos
mov
push
adc
cmp
push
sub
jno
xchg
adc
cmp
nop
add
mov
ins
dec
out
cmp
fld
push
push
mov
out
xchg
xor
cmp
inc
loope
push
les
fistp
mov
or
and
imul
mov
js
sub
and
xchg
test
or
push
fcmovnb
inc
or
cmc
push
xor
or
bound
or
mov
iret
push
imul
mov
inc
add
sahf
xor
jmp
retf
xchg
inc
pusha
jns
dec
les
sar
inc
pop
cwde
and
pop
mov
cmps
sub
mov
rcl
or
xor
lock
ja
pop
jmp
lahf
jmp
dec
(bad)
mov
adc
fldenv
push
mov
dec
adc
nop
je
push
retf
cmp
mov
not
sbb
dec
adc
xchg
mov
adc
or
sbb
addr16
inc
push
mov
jnp
pop
and
cmp
mov
out
lahf
push
dec
and
add
sub
pushf
stos
mov
mov
mov
rcl
xchg
jge
pop
lock
(bad)
imul
ins
pop
retf
dec
test
sbb
(bad)
sub
(bad)
pusha
pop
jge
sbb
push
stos
or
daa
cmp
mov
add
jge
and
xchg
mov
sbb
dec
inc
gs
add
movs
outs
movs
out
or
or
scas
or
xchg
sub
mov
xor
xchg
mov
cs
and
mov
and
stc
in
inc
outs
and
cli
push
imul
call
lds
push
test
loopne
mov
pop
mov
aas
or
in
pop
imul
add
mov
lock
and
into
sub
xchg
dec
(bad)
int3
and
test
ficomp
push
and
xor
push
fisubr
into
repnz
dec
jae
inc
mov
lahf
shl
fidiv
movs
dec
dec
std
cmp
aam
dec
xor
pop
cld
add
jl
call
or
mov
sbb
mov
pop
pop
adc
pop
fs
dec
pop
inc
cld
jg
cmp
fisttp
sahf
xchg
inc
cmp
sub
mov
bound
dec
jg
neg
fsub
cmp
xchg
mov
or
dec
daa
and
adc
or
and
std
aaa
loope
jmp
add
jmp
ret
enter
sbb
and
mov
test
add
icebp
pop
sahf
add
xchg
push
loop
fwait
inc
hlt
imul
add
test
fisttp
jo
lea
jae
movs
xchg
call
push
movntq
sti
xor
mov
nop
mov
xchg
add
fisttp
clc
fcomp
addr16
aaa
jge
mov
js
das
lahf
inc
ss
lds
xor
test
icebp
pop
cmp
arpl
pusha
jo
into
cdq
inc
inc
inc
clc
xchg
mov
outs
fbld
cmp
add
sahf
pusha
into
xchg
and
push
nop
xchg
inc
aad
inc
arpl
ds
lds
(bad)
pusha
int
rcr
sbb
push
pop
add
xchg
test
and
xchg
mov
mov
mov
push
je
jecxz
fldcw
sub
sahf
inc
mov
es
leave
lock
push
(bad)
pop
inc
add
js
add
jno
xchg
int
xchg
sub
arpl
or
std
jl
bound
dec
xchg
jne
or
cmps
dec
iret
enter
mov
jle
or
out
mov
xchg
adc
xchg
xor
popf
inc
mov
out
mul
sbb
jecxz
sub
and
sbb
cdq
jne
mov
xchg
(bad)
fidiv
pop
mov
xchg
xor
test
and
fdivr
int
mov
ja
or
pop
or
dec
fwait
sbb
pop
adc
cmps
and
int
ret
or
(bad)
adc
mov
xchg
mov
add
test
dec
cmp
test
cmps
in
cli
test
test
push
pop
jae
in
cmp
call
cmp
retf
add
inc
jmp
rol
fild
adc
lods
or
pop
enter
stos
push
inc
iret
xor
or
int3
inc
movs
mov
cdq
jnp
fdiv
jbe
rcr
adc
dec
xchg
cmp
cmps
mov
ins
inc
inc
rol
cmc
in
jbe
scas
pushf
xchg
sahf
or
mov
shr
adc
cmps
sub
cmp
xor
xor
outs
aaa
jns
mov
or
sub
aad
dec
inc
mov
mov
cdq
pop
jmp
mov
inc
pop
inc
pop
inc
mul
xor
mov
int
jns
sub
pop
in
shr
outs
enter
xor
aas
in
into
(bad)
(bad)
pop
jo
(bad)
cmp
sub
add
fcomp
out
pop
jecxz
add
pop
aas
mov
sub
sbb
push
icebp
jmp
inc
xor
xor
(bad)
jp
out
fwait
(bad)
dec
xchg
lds
add
add
ret
sub
xor
mov
popa
or
jno
mov
or
adc
cmc
dec
jno
and
fwait
sti
add
scas
fst
sbb
sbb
add
sbb
xchg
(bad)
cmp
and
loope
scas
cwde
clc
pop
sti
xchg
xchg
sub
pop
les
imul
mov
scas
icebp
imul
shl
push
jp
jge
imul
arpl
pop
or
test
push
fstp
ret
int3
dec
adc
cmc
imul
out
jns
inc
out
inc
pop
mov
sar
enter
jae
lock
bound
cwde
fimul
aas
sbb
mov
add
mov
outs
(bad)
sti
aaa
mov
jle
jns
push
jp
sub
dec
je
jns
xor
or
fwait
hlt
int3
and
mov
add
cmp
pusha
scas
push
dec
jne
add
or
mov
daa
pushf
and
jbe
sub
mov
xchg
popa
ja
aas
dec
ins
aad
jbe
mov
outs
fs
(bad)
and
sub
jmp
mov
aas
mov
sbb
add
sbb
lds
pop
xor
jno
fcom
mov
xchg
and
pop
fmul
lea
push
jne
push
or
sub
jb
mov
pop
or
sbb
leave
sahf
add
adc
and
out
lea
adc
lea
inc
in
mov
int
jno
jbe
sub
retw
lea
xchg
mov
cmps
idiv
das
add
or
jmp
pusha
ds
xor
push
not
cmc
mov
popa
mov
sar
out
jp
into
push
jae
jmp
out
cmp
push
and
dec
and
(bad)
call
xor
sub
jmp
jo
ror
push
push
(bad)
popf
mov
cmp
rcl
or
xor
sub
iret
retf
clc
cmc
test
or
xor
fdivr
test
call
pop
cmp
sbb
and
jns
out
jbe
xor
fbstp
mov
or
lods
(bad)
idiv
aas
add
jns
pop
sti
mov
test
ds
stc
jbe
sub
dec
jge
xchg
inc
dec
push
and
jno
(bad)
adc
in
pop
and
and
dec
int
stos
(bad)
mov
ror
es
popa
mov
imul
cmp
inc
pusha
imul
sub
cld
std
dec
add
nop
stos
add
mov
and
outs
or
sub
stc
inc
xchg
xor
retf
mov
xchg
sbb
ret
mov
adc
mov
daa
ss
out
inc
popf
rol
jo
nop
push
mov
cld
nop
shl
ret
xchg
loope
loopne
push
jl
sbb
cmps
ret
add
add
mul
and
pop
outs
ret
sti
fsubr
scas
scas
test
lods
jns
(bad)
daa
iret
push
imul
mov
push
psrad
jb
or
push
sub
add
(bad)
sti
cmps
imul
push
pop
and
add
cmp
sti
pop
mov
xchg
mov
and
daa
fcom
fwait
cld
push
(bad)
and
mov
cmp
loope
inc
push
pop
scas
retf
mov
enter
ins
jecxz
rol
adc
(bad)
icebp
in
push
neg
cmps
icebp
enter
repz
xor
addr16
push
inc
jmp
jp
cmp
mov
mov
xchg
shr
jl
inc
sbb
inc
leave
cmc
in
data16
sub
dec
jecxz
int3
lock
dec
cdq
pop
cdq
lds
dec
mov
pop
outs
jne
or
in
sub
das
jge
imul
jg
and
outs
ss
aad
enter
inc
and
(bad)
xor
not
adc
in
mov
add
push
pop
or
aas
pop
jo
pop
xchg
mul
cld
push
xor
jo
inc
jmp
inc
add
push
cmp
and
fsubrp
xchg
add
pop
pop
fwait
out
sub
icebp
push
or
and
les
lods
aad
xchg
cmp
mov
mov
(bad)
fdiv
xchg
loop
add
inc
jne
mov
or
movs
mov
add
sbb
imul
addr16
cmc
adc
or
xchg
std
sar
div
call
sbb
mov
jno
pop
adc
lock
(bad)
fild
jns
scas
adc
add
xchg
sbb
inc
pop
mov
xchg
and
nop
mov
scas
lock
pop
jmp
mov
mov
or
push
aad
leave
add
cmps
pop
cmps
mov
mov
cli
test
stos
mov
pop
out
pop
mov
dec
fild
pop
cmps
aaa
mov
and
jl
(bad)
ins
adc
or
push
inc
xchg
call
xchg
movs
push
and
(bad)
scas
cmps
sti
jne
mov
mov
popf
mov
adc
cmp
jg
and
std
xor
dec
shl
popa
mov
jmp
repz
(bad)
rol
xchg
mov
test
jbe
shl
mov
jecxz
xchg
cmp
aas
mov
outs
mov
add
test
bound
stc
sbb
int3
sub
pop
jns
mov
and
ja
repz
jbe
pop
sbb
cmps
setne
fnstenv
loopne
int
xor
and
nop
and
mov
outs
mov
sub
hlt
movs
sub
or
cmps
sub
fcomp
dec
sar
out
inc
pop
add
push
sub
in
xchg
pop
xchg
call
icebp
data16
add
dec
jl
lea
arpl
std
outs
sub
or
stos
mov
cli
sub
cmp
inc
mov
leave
mov
int
cmp
xor
cmovl
out
add
mov
(bad)
in
cmp
jo
or
dec
ja
test
addr16
cli
cdq
daa
lds
xor
pop
mov
jns
xor
data16
jl
mov
add
push
add
mov
mov
stc
nop
push
fsub
daa
sub
adc
scas
gs
xor
and
jne
sub
test
les
mov
xor
and
adc
adc
or
daa
out
xor
cmp
add
jmp
jae
xchg
aaa
leave
mov
xchg
int3
retf
mov
xchg
cmp
dec
jg
and
clc
imul
test
sub
push
mov
sbb
aaa
das
mov
int3
cmps
sar
dec
add
(bad)
xchg
into
mov
xor
stc
push
stc
ror
pop
jns
pop
dec
or
mov
loope
push
adc
pop
(bad)
sbb
push
sub
nop
sub
test
inc
mov
mov
pop
inc
mov
cmp
cdq
movs
mov
xchg
lods
sub
mov
mov
xor
in
jmp
fadd
xchg
pop
ins
retf
xor
mov
out
and
test
xor
xchg
push
test
out
movs
cmp
mov
adc
(bad)
xor
cwde
fcom
push
cmc
cld
mov
pop
push
ss
cmc
mov
mov
push
mov
xor
jl
pop
or
lods
lahf
sub
jns
mov
mov
pushf
jmp
repnz
daa
add
push
push
add
in
mov
mov
imul
das
sahf
mov
add
or
xchg
dec
ds
xor
sub
iret
jbe
push
popa
daa
ja
sti
and
cs
dec
mov
sub
lock
out
jmp
mov
or
push
pop
cmp
cmp
mov
fnsetpm(287
imul
jg
fldenv
cmps
ficomp
out
sub
xor
fisubr
(bad)
popf
mov
jmp
mov
call
and
outs
cmp
cmps
in
mov
push
mov
sbb
aad
repz
fsub
inc
ret
bound
out
mov
mul
dec
loopne
test
mul
scas
xchg
es
int3
push
rcr
add
mov
icebp
call
mov
push
stos
and
shl
cmp
fild
mov
pushf
cs
push
fistp
scas
mov
add
daa
retf
adc
xor
add
out
movs
adc
div
push
and
jl
adc
sub
shr
mov
sub
cld
dec
sub
bound
pop
ss
fs
push
mov
sub
pop
adc
(bad)
push
cmc
jb
push
inc
adc
dec
test
push
pop
outs
sar
test
or
jae
and
pop
js
gs
retf
mov
lods
loop
sahf
ja
clc
xor
iret
jl
leave
lea
cmp
mov
push
dec
and
mov
or
out
xchg
xchg
cmps
mov
and
adc
stos
jne
cwde
fldcw
mov
xor
cmp
es
lahf
sbb
cmps
addr16
fimul
cmc
in
sub
ins
(bad)
out
test
cdq
add
add
sar
(bad)
fild
sub
sahf
inc
scas
jo
jl
pop
pop
cmp
ds
shl
inc
call
ret
jnp
mov
fwait
mov
jecxz
push
mov
sub
xchg
cmp
(bad)
xchg
dec
cdq
js
iret
adc
out
aas
fs
in
addr16
mov
gs
cli
or
mov
sub
push
call
xchg
xor
ficom
dec
add
sbb
and
dec
xlat
pop
fs
xchg
add
(bad)
shr
jecxz
call
inc
test
xlat
repz
jae
daa
sub
ss
ins
outs
ret
adc
in
sub
cmp
int
mov
daa
in
test
pop
es
out
outs
push
adc
jmp
ret
mov
jecxz
inc
jp
fadd
cmp
jmp
mov
das
gs
dec
fmul
adc
pop
loopne
aam
test
xor
sbb
js
mov
pop
xlat
cdq
push
ss
cwde
imul
inc
mov
scas
cmp
xor
pop
inc
scas
scas
pusha
es
out
call
and
pop
add
fs
adc
aaa
fnstcw
iret
pop
push
push
mov
jge
shr
loopne
arpl
gs
xchg
sahf
and
int3
sub
stc
mov
xlat
sbb
cmp
jns
push
ss
and
xor
mov
repnz
lock
jl
lock
iret
xchg
out
fst
or
test
or
dec
mov
scas
repnz
jl
sbb
jbe
pop
movs
pop
stc
sbb
scas
imul
test
or
xor
test
cmp
xchg
lods
pop
das
sahf
mov
aaa
ins
cs
lods
mov
xor
mov
xchg
inc
mov
sub
mov
es
mov
push
xchg
mov
je
mov
jns
pop
xchg
cmp
test
adc
icebp
retf
icebp
mov
dec
mov
add
pop
pushf
push
xchg
jmp
daa
test
or
stc
imul
pop
mov
das
or
data16
mov
add
ror
adc
outs
mov
cld
icebp
dec
fwait
mov
sbb
cmps
fwait
int
repz
fidiv
ret
rol
mov
ret
mov
lahf
mov
push
mov
mov
sbb
mov
jnp
bound
jecxz
popa
or
icebp
addr16
imul
pusha
cmp
adc
ds
les
lods
xor
fistp
call
pcmpeqb
mov
jmp
rcr
fs
es
repnz
mov
aad
and
(bad)
in
lds
lock
and
outs
out
jle
retf
xor
stc
xchg
xchg
jmp
in
jmp
shl
sub
dec
call
cmp
(bad)
int
cmp
test
or
xor
bound
pop
in
and
aas
mov
or
cmp
jle
push
clc
mov
mov
out
sub
push
mov
cmps
les
jb
jl
neg
stos
sbb
xor
mov
or
pop
jo
into
pop
dec
pop
ret
xor
or
push
fist
ret
daa
dec
inc
push
xor
fwait
mov
pop
add
push
pop
aas
or
daa
and
pushf
add
scas
loope
test
pop
lods
push
xchg
std
call
loop
jp
out
push
mov
jmp
xor
xchg
shl
leave
shl
cmp
mov
pop
lea
bound
call
mov
sbb
push
push
jmp
lods
stos
ficom
push
pop
lea
jne
mov
stc
or
mov
pop
or
(bad)
mov
aaa
clc
or
sub
mov
cs
je
sub
pop
cmps
lock
(bad)
js
(bad)
in
lods
xchg
mov
mov
fild
pop
cmp
jb
pushf
mov
xchg
cmp
std
pushf
shr
mov
mov
push
mov
and
mov
xchg
push
mov
fstp
arpl
mul
pop
sub
mov
add
mov
jp
mov
mov
mov
(bad)
in
ret
jge
movs
push
cld
pop
push
inc
repz
movs
ja
or
xchg
or
cmp
pop
mov
cdq
pushf
sahf
sub
(bad)
cmp
gs
adc
jnp
mov
xor
xor
pop
mov
sbb
pop
out
adc
js
fimul
lds
inc
mov
mov
jbe
push
and
nop
rol
in
mov
xor
bound
push
mov
push
sbb
xchg
jmp
push
add
out
push
icebp
xlat
(bad)
loopne
outs
ficomp
(bad)
gs
imul
test
sub
rol
cmp
adc
(bad)
fcomi
or
pop
jb
mov
and
push
and
sbb
sti
pop
imul
dec
pop
test
lock
daa
pop
(bad)
mov
and
dec
jmp
mov
out
fwait
sub
sbb
(bad)
sub
push
push
cmp
jns
push
and
retf
lahf
push
jg
fimul
cmp
inc
(bad)
pop
push
std
clc
xor
add
aas
dec
cli
dec
je
aam
jg
mov
mov
xlat
imul
iret
sbb
mul
lahf
outs
mov
add
data16
(bad)
sti
loopne
add
push
repnz
cmp
fdivr
adc
or
mov
loope
cld
jge
push
in
mov
sub
rcr
mov
cmps
(bad)
and
imul
and
mov
push
jns
cmp
jg
leave
lea
xchg
add
jae
dec
jne
jbe
jo
pop
leave
mov
ss
pminsw
and
mov
outs
inc
das
jg
push
clc
sahf
and
inc
xchg
js
push
out
push
inc
cmp
shl
sub
pop
inc
dec
fsubr
xchg
in
mov
dec
sbb
ret
popf
xlat
xor
mov
aas
push
ins
ret
das
daa
push
pushf
(bad)
movs
and
and
in
and
sbb
sbb
push
fild
fdivr
fnsave
cld
fsub
icebp
dec
inc
xchg
jo
dec
xchg
ins
(bad)
jp
mov
nop
jmp
mov
add
arpl
dec
cmp
fimul
es
sar
pushf
push
pop
sbb
or
sbb
(bad)
mov
rcl
push
dec
cmps
xchg
push
cmp
xor
fisub
popa
xor
xor
mov
aad
adc
pop
lea
xchg
pop
(bad)
and
stos
call
cmps
jne
jae
shl
loope
mov
xchg
xlat
(bad)
cs
adc
call
add
lods
data16
push
cli
dec
mov
dec
sub
mov
es
mov
fcompp
call
xor
arpl
movs
inc
xchg
mov
test
int3
inc
cs
fimul
aam
sub
mov
or
popa
iret
pop
aaa
jle
add
adc
push
ret
jb
scas
nop
arpl
das
adc
adc
pop
pusha
push
jge
gs
adc
mov
ja
adc
int3
std
icebp
test
push
call
dec
inc
sbb
sbb
cmp
inc
pusha
clc
cmp
repz
test
aas
inc
or
xor
mov
std
pop
inc
paddusw
xor
shr
xchg
push
(bad)
(bad)
movs
pushf
dec
inc
loope
xor
sub
retf
xlat
lock
nop
xor
mov
sbb
pushf
shl
cmps
in
adc
(bad)
jns
xlat
addr16
jno
mov
push
(bad)
(bad)
push
jl
adc
push
and
ja
scas
pop
add
mov
call
pop
sub
jecxz
push
fistp
fcomip
test
leave
dec
fldenv
sti
mov
push
push
push
imul
adc
pop
dec
cmp
inc
and
(bad)
cmc
sub
retf
fnstsw
add
mov
push
mov
ja
xor
jo
jns
dec
and
(bad)
(bad)
int
cmp
jb
jbe
aaa
push
or
fisttp
cmp
push
xlat
mov
paddusb
xor
cmps
cmp
aas
(bad)
or
or
gs
es
or
and
pop
sub
jbe
out
push
sub
or
and
ret
mov
mov
inc
xchg
add
push
pop
dec
nop
stc
ins
add
sbb
mov
inc
scas
aaa
cs
jge
fild
ror
stos
adc
mov
mov
imul
lods
repnz
inc
xor
lods
pop
loope
xor
pop
fdivrp
xchg
mov
(bad)
dec
add
(bad)
adc
in
fsub
mov
ret
dec
push
push
pusha
cdq
repz
cmp
loopne
cmp
sbb
cs
stos
ret
jg
cmc
jmp
stc
mov
push
sub
mov
xor
daa
jle
retf
jl
push
jecxz
push
jae
comiss
sub
cmc
loop
(bad)
push
gs
les
or
test
(bad)
int
pop
pop
into
fs
mov
adc
loopne
sbb
jmp
push
dec
(bad)
imul
out
add
cmp
or
in
jge
or
cwde
xchg
loope
rcl
pop
xchg
ret
(bad)
and
adc
leave
adc
cmp
sub
cmp
sub
pusha
shl
(bad)
mov
sbb
add
jmp
dec
fnstsw
mov
cmps
mov
fcomp
sbb
sub
scas
push
inc
adc
jmp
mov
scas
add
dec
movs
fs
(bad)
int
sbb
mov
les
in
mov
ror
push
sar
cs
cmc
push
push
aad
loopne
iret
and
jl
and
jmp
addr16
rcr
add
or
dec
addr16
pop
rcr
outs
test
sbb
cmps
push
mov
stos
(bad)
push
jmp
xchg
inc
stos
(bad)
pop
into
ret
mov
mov
jle
cmp
dec
lea
fwait
or
pop
(bad)
je
xchg
lods
int
retf
dec
call
hlt
fcomi
dec
dec
lds
and
cmps
sub
xor
pop
push
jge
aas
fist
and
imul
jl
xchg
add
aad
dec
push
and
rol
(bad)
sub
iret
fmul
scas
inc
test
rcl
xchg
(bad)
out
mov
das
add
pop
xchg
mov
rcl
in
fsub
or
dec
or
rcl
mov
neg
imul
sub
dec
(bad)
hlt
test
jo
mov
lods
arpl
rol
cmp
popf
or
in
xchg
inc
adc
mov
lock
sbb
ins
outs
retf
push
xchg
daa
push
jbe
fidivr
mov
add
rcl
cmc
ins
adc
adc
imul
idiv
sbb
or
pop
jp
or
(bad)
mov
jno
cmp
xchg
test
scas
movs
push
imul
pop
(bad)
adc
in
add
inc
iret
out
jge
mov
in
cli
xchg
lods
ficom
test
dec
js
and
pop
in
icebp
cmp
pop
out
sub
inc
xchg
add
fild
sub
mov
loope
cmp
sbb
pushf
cmp
sahf
repz
push
mov
mov
xor
pop
jnp
adc
hlt
push
loope
sub
int
and
or
repnz
mov
sbb
and
xor
mov
rcl
push
sbb
imul
dec
sub
nop
xor
int3
ins
loop
add
push
ds
mov
fnsave
in
retf
mov
jb
add
jl
inc
loopne
mov
movs
fcmovnbe
(bad)
xchg
push
mov
push
retf
dec
pop
into
xor
sbb
or
je
add
dec
lahf
movs
retf
mov
out
mov
sub
cmp
in
push
hlt
sbb
sub
cli
mov
(bad)
clc
xor
imul
mov
mov
fild
push
mov
cmp
xor
push
and
sub
push
scas
dec
adc
out
xchg
add
and
in
mov
lea
(bad)
rcr
ins
int3
sahf
cmc
pushf
in
sbb
xchg
fs
xor
idiv
inc
sbb
inc
fs
and
push
cmps
mov
and
adc
ror
ror
iret
or
int3
add
movs
je
jno
icebp
out
arpl
jne
cmc
pusha
sub
and
pop
push
mov
mov
(bad)
xor
pop
dec
int
xchg
mov
or
xchg
cmp
mov
repz
sbb
cmp
cmps
pop
retf
mov
sub
movs
scas
cwde
pop
sub
cld
movs
fidiv
dec
sbb
out
jge
shl
into
xor
mov
jmp
loop
out
add
aad
aam
mov
sbb
sbb
jge
gs
xor
aad
pop
and
cs
or
lahf
mov
adc
and
push
mov
and
mov
xor
repz
cwde
es
jb
enter
fadd
test
xchg
xor
mov
mov
js
(bad)
mov
xor
popf
inc
jge
xchg
retf
add
add
es
mov
ss
test
(bad)
aas
push
mov
or
loopne
cmp
das
add
lods
cmps
jns
inc
mov
inc
bound
push
jecxz
jae
adc
(bad)
mov
or
sub
inc
shl
in
pop
setp
xor
(bad)
mov
fidiv
xor
and
and
sbb
leave
sub
fadd
loop
sar
ins
mov
nop
js
mov
fcom
popf
aam
mov
das
cdq
test
add
mov
cmp
push
dec
lds
jno
or
mov
shr
rol
sbb
dec
inc
repnz
jb
int
sbb
stos
jnp
shl
mov
jecxz
fdivr
push
test
add
mov
mov
adc
pop
sti
adc
push
bound
dec
jle
mov
int3
pop
jp
out
in
imul
imul
call
mov
sbb
mov
xor
dec
fsub
imul
mov
or
into
cmp
mov
fwait
pop
rcl
ins
test
mov
and
daa
dec
inc
mov
or
mov
xchg
sub
sub
cmp
aam
or
clc
movs
dec
int
jnp
dec
ins
pop
jo
jae
or
(bad)
je
loopne
sub
sbb
fnstenv
push
test
test
push
adc
inc
mov
ror
test
mov
scas
cmp
mov
scas
fsubr
call
adc
dec
inc
inc
xchg
dec
loope
push
lock
and
(bad)
into
dec
shl
repnz
xchg
push
mov
add
(bad)
int3
cmps
sub
or
stos
and
adc
xchg
scas
jp
nop
test
out
dec
jl
iret
and
mov
xor
stos
fmulp
je
shl
in
xor
jno
push
test
(bad)
adc
pop
outs
jg
clc
jne
jno
dec
cmp
dec
int3
mov
cmps
imul
mov
(bad)
loopne
mov
aaa
inc
lea
in
cmps
ds
and
repz
jmp
adc
xor
mov
jecxz
dec
test
dec
sahf
jmp
out
(bad)
shr
xchg
mov
movs
mov
sbb
int
mov
retf
aas
stc
fsqrt
rcl
fdiv
push
mov
imul
(bad)
(bad)
loopne
fldl2e
or
xchg
or
mov
hlt
inc
jmp
cwde
sti
aad
dec
jp
adc
jmp
pop
jg
mov
cmp
mov
(bad)
ins
sbb
xchg
out
push
(bad)
mov
int3
mov
jnp
xlat
sbb
hlt
xor
add
xchg
fcomp
sub
mov
and
or
push
fiadd
int
mov
std
(bad)
cmp
(bad)
daa
lods
mov
xchg
sub
fwait
jb
sub
ss
cli
fcmovbe
and
push
test
jl
xchg
lods
fs
inc
add
pop
scas
call
outs
scas
popw
xchg
mov
jle
outs
pop
cmp
jne
lds
pop
xor
dec
stos
in
fild
add
or
repz
add
inc
call
ror
adc
push
les
retf
pop
les
lds
inc
es
scas
std
push
and
dec
sbb
and
fsub
outs
jle
sahf
dec
xchg
dec
dec
sub
out
and
mov
call
dec
sub
mov
iret
outs
sub
movs
leave
push
(bad)
mov
out
jle
mov
adc
xor
sbb
inc
adc
pop
mov
movs
xchg
ins
loop
xchg
sbb
movs
mov
inc
imul
sub
add
push
gs
sub
jno
mov
or
mov
mov
pop
sbb
ds
cmp
push
xor
scas
pop
inc
jmp
mov
stos
or
cmp
(bad)
xor
outs
push
test
fst
in
cmp
cmp
es
outs
sbb
ins
repz
cmp
and
sub
sbb
out
sub
inc
mov
or
mov
lods
pop
shl
xor
fmul
adc
mov
shl
jl
jg
outs
xor
ins
push
test
mov
sbb
jge
xchg
push
mov
out
xchg
mov
jmp
pop
imul
popf
int3
imul
loop
outs
adc
sar
daa
ss
(bad)
adc
jle
add
sub
and
(bad)
leave
retf
mov
pop
xchg
sbb
iret
xor
and
jl
jbe
push
cmp
stos
ror
mov
and
out
mov
repnz
repnz
sbb
loopne
add
jbe
cs
sbb
jmp
daa
mov
inc
and
(bad)
(bad)
xchg
pop
loop
sub
xor
xchg
jae
gs
jl
sbb
jo
or
mov
cmps
je
mov
(bad)
adc
or
scas
cld
scas
(bad)
mov
sbb
shl
jp
pushf
fcmovne
xor
xor
movs
and
fdivr
ror
inc
test
sub
pop
pushf
push
outs
fsubr
sub
int
cmp
xor
ret
out
xchg
int3
push
or
push
jge
lods
dec
push
push
ret
lock
pop
sti
push
ins
(bad)
loop
dec
call
dec
jl
and
mov
popa
add
push
pop
repz
sti
dec
nop
xor
mov
aam
dec
(bad)
nop
cs
fisttp
mov
lds
loopne
stc
xor
das
aam
push
xor
scas
(bad)
fdivr
jl
gs
adc
cld
mov
mov
cmp
aaa
xor
xor
call
test
js
inc
fldenv
sar
or
aam
dec
mov
xchg
jbe
addr16
dec
int3
adc
stos
xchg
push
push
add
test
fldenv
mov
ficom
cli
movs
xchg
jno
sub
adc
xchg
jg
stc
(bad)
loop
add
mov
add
push
push
add
ins
aam
mov
pushw
ret
bswap
popa
adc
or
sbb
cmp
add
sub
fwait
(bad)
jmp
inc
sub
xor
int
push
scas
cmp
sbb
push
popf
cld
aad
jg
cs
mov
mov
sub
dec
rcl
(bad)
or
das
cmp
mov
mov
mov
ds
or
std
sub
pusha
dec
ja
pop
ja
lods
dec
mov
sbb
retf
in
push
mov
jp
jp
xchg
mov
adc
hlt
xchg
jnp
ja
stc
add
lea
push
clc
imul
push
xchg
sti
in
jne
jmp
push
(bad)
mov
mov
dec
jmp
sbb
ret
(bad)
mov
sbb
stos
xchg
pushf
mov
imul
das
cwde
fsubr
push
inc
dec
cdq
adc
cs
(bad)
pop
push
in
pop
inc
fdivr
fs
or
outs
ja
int
pop
pop
dec
ja
dec
test
call
sub
add
pop
add
pop
jo
sub
icebp
jecxz
jno
pushf
sahf
jp
jbe
sbb
dec
pop
leave
rcl
push
xor
ror
aad
jnp
xor
jg
push
jae
inc
add
cld
pusha
stos
mov
adc
inc
(bad)
fs
fisttp
pop
push
push
mov
ins
test
jbe
test
out
push
mov
jne
pushf
inc
and
mul
push
jmp
xlat
cmps
out
repnz
sbb
pop
xlat
sti
push
adc
fmul
jl
pop
std
jg
lahf
aas
cli
inc
pop
xor
fidivr
daa
xchg
pop
mov
add
sub
(bad)
inc
and
jnp
jns
sbb
cli
sbb
test
push
cli
addr16
push
out
iret
mov
in
inc
in
push
repnz
rcr
cli
cs
sub
xor
ins
(bad)
ins
cwde
mov
add
push
push
fimul
mov
sub
vprotw
hlt
adc
inc
jnp
and
enter
mov
and
pop
pop
cmp
sub
inc
adc
jno
rol
(bad)
mov
push
adc
hlt
xchg
mul
mov
pusha
mov
mov
ins
lock
inc
sub
and
rcl
aaa
stos
xchg
lahf
add
fmul
cmp
fcom
movs
dec
repz
and
and
out
sub
movs
xor
xchg
push
add
push
jp
adc
sub
popf
add
sti
inc
fwait
sahf
add
mov
jo
add
ret
sbb
sbb
jno
push
sti
pop
cmp
das
pop
dec
cdq
pop
ja
arpl
pop
push
inc
stc
popa
into
cld
inc
jmp
pop
(bad)
adc
inc
adc
retf
mov
addr16
ss
es
call
xchg
cs
dec
in
inc
sub
out
inc
imul
cmp
shl
lds
xchg
pop
movs
xor
mov
lea
cmp
test
repz
mov
pushf
jae
and
mov
repz
mov
loop
enter
pop
out
xchg
inc
xchg
cmp
mov
xchg
(bad)
fsub
mov
out
mov
cmp
jae
shl
fisub
mov
mov
pushf
xchg
cdq
pop
dec
test
ds
dec
push
in
sti
enter
clc
sti
test
or
scas
xchg
cmp
jmp
mov
stos
pop
sub
xchg
xor
(bad)
dec
push
push
xor
push
jl
stos
dec
pushf
pop
sbb
call
adc
(bad)
pop
jg
daa
mov
lods
and
out
jnp
jg
outs
xor
movs
(bad)
hlt
nop
xor
pop
mov
xchg
in
or
jle
adc
aam
pushf
mov
cld
sbb
enter
pop
mov
sahf
inc
add
ds
aad
mov
gs
add
popf
movs
es
dec
and
sbb
rol
xor
scas
bswap
push
mov
lods
dec
test
(bad)
test
loope
push
or
inc
sbb
popf
or
xchg
aas
push
dec
sti
in
inc
repz
sbb
push
stos
xor
xor
xchg
je
push
mov
or
mov
mov
frstor
cld
mov
mov
adc
inc
test
cli
dec
lods
and
cld
xchg
loope
nop
les
dec
xchg
bound
dec
push
mov
cmps
inc
retf
(bad)
clc
lds
pop
in
cmp
cld
and
mov
xor
jnp
dec
mov
or
(bad)
push
movs
xchg
cdq
arpl
mov
popf
add
in
fcom
jmp
jmp
pushf
in
cmp
ret
daa
mov
hlt
cmps
sub
pop
and
push
neg
and
test
mov
mov
or
(bad)
aam
jns
scas
dec
(bad)
std
cmp
test
jne
pop
inc
mov
sbb
pop
in
mov
in
jp
outs
adc
mov
or
cwde
jge
(bad)
clc
aad
cmp
cld
push
arpl
dec
ja
adc
es
fdivr
pop
retf
test
xchg
adc
and
or
xchg
(bad)
mov
fwait
bound
xlat
sub
mov
xor
mov
adc
(bad)
sbb
(bad)
fistp
mov
in
adc
gs
or
jecxz
dec
add
mov
neg
dec
mov
cmp
add
aad
sub
sar
push
jecxz
mov
and
jl
pushf
sub
xchg
jp
arpl
push
popa
mov
lods
pop
mov
mov
js
jp
out
adc
mov
popa
pop
js
test
(bad)
inc
in
(bad)
xchg
sbb
xchg
cmps
jne
push
mov
call
imul
adc
sub
jns
test
mov
push
push
ins
popa
pusha
push
jne
mov
out
aam
inc
es
or
adc
mov
test
pop
or
imul
push
ret
push
push
sub
sub
inc
xchg
sahf
xor
ror
and
sub
and
cli
cld
outs
adc
sub
jo
scas
pop
sbb
push
mov
ficomp
mov
mov
aaa
or
adc
mov
mov
int3
mov
jl
jae
jb
xchg
mov
daa
fidivr
or
push
addr16
cli
sbb
push
push
dec
cmp
xor
adc
sar
mov
lahf
mov
dec
pop
mov
and
mov
sub
xchg
mov
cmps
xor
push
pop
xchg
pop
(bad)
out
mov
mov
jle
cmp
dec
fwait
sbb
(bad)
repnz
adc
dec
add
loopne
inc
leave
retf
sahf
loopne
and
jb
adc
je
sbb
push
cmp
cmps
in
mov
mov
outs
fnsave
push
in
xchg
in
adc
push
mov
adc
les
pop
jecxz
mov
cmp
pinsrw
cmp
sbb
leave
xor
mov
sahf
jg
xchg
ja
inc
jle
adc
and
push
std
cmps
mov
mov
sahf
out
sub
cmps
mov
pop
cmp
push
xchg
mov
out
iret
in
jmp
push
lods
nop
jle
int3
pmuludq
mov
mov
stos
test
xor
dec
cmp
mov
adc
cwde
arpl
and
add
movs
dec
bts
jmp
sbb
jnp
jmp
aas
mov
mov
fmul
push
mov
nop
lods
xor
inc
jl
mov
aas
int
sub
adc
and
sbb
sbb
pop
adc
cmps
xchg
push
inc
xor
loop
fdiv
push
cmp
or
jle
jnp
jno
mov
cmp
popf
push
inc
loopne
(bad)
pop
mov
mov
mov
cmps
pop
sub
daa
addr16
(bad)
sbb
add
ins
int
or
xlat
ss
push
cld
fsubr
inc
repnz
sbb
inc
mov
mov
(bad)
loope
in
xor
push
push
cmps
test
cmp
dec
outs
test
mov
jg
xchg
push
sbb
mov
sbb
mov
push
rcr
out
dec
lock
mov
mov
and
nop
sahf
lar
inc
mov
inc
sbb
adc
mov
pop
jo
mov
push
mov
mov
out
js
fld
stc
adc
cwde
sar
dec
mov
xchg
icebp
enter
(bad)
inc
es
int
fisubr
ja
or
jno
jecxz
push
dec
ror
outs
es
loop
imul
into
mov
mov
dec
imul
mov
xor
adc
dec
sub
in
inc
loopne
mov
clc
dec
add
outs
and
adc
sbb
cld
xor
sbb
mov
inc
and
retf
sbb
mov
pop
xchg
xchg
push
jle
dec
sub
out
cdq
xor
scas
sbb
es
sbb
loopne
call
test
ret
adc
out
xor
les
jne
lods
inc
retf
ret
scas
mov
imul
ss
sbb
fbld
mov
(bad)
mov
in
jmp
push
out
sbb
sub
fwait
jmp
adc
out
shr
inc
rcl
adc
ins
push
inc
inc
cli
shr
adc
sbb
in
lahf
mov
xchg
in
ret
enter
pop
xchg
aam
lock
lds
call
mov
dec
iret
push
sahf
dec
mov
das
(bad)
clc
cmp
sti
push
push
mov
jbe
arpl
sbb
dec
(bad)
pop
data16
adc
or
retf
mov
ficom
mov
out
push
sbb
mov
or
dec
fisttp
push
adc
xchg
rcl
lock
inc
cs
xor
jmp
xchg
les
das
cli
cmp
popa
fsub
sub
jg
and
adc
fwait
sub
jg
out
lahf
(bad)
add
inc
imul
and
adc
in
mov
sbb
fdiv
inc
sub
inc
loop
shl
mov
sub
or
sbb
sub
int3
int3
cmp
push
xor
das
inc
jb
mov
mov
(bad)
out
lock
add
or
or
pusha
add
sbb
or
mov
mov
dec
lock
enter
in
shr
sub
and
xor
test
jnp
cmps
lds
jmp
xor
push
mov
cmp
(bad)
xor
fisttp
in
push
cmp
xor
mov
icebp
fcom
loope
imul
outs
xchg
jno
aad
hlt
int
sub
and
pop
imul
out
sbb
ja
pop
or
xor
add
sub
adc
jmp
loop
int
mov
cmp
pop
(bad)
ficom
in
push
cwde
and
xchg
push
hlt
push
test
call
mov
xchg
jno
icebp
pop
out
jne
jecxz
test
or
xor
mov
or
and
mov
push
xchg
mov
cdq
jecxz
ds
adc
sar
pop
(bad)
ins
repnz
and
dec
cmp
sub
adc
mov
neg
repnz
fisttp
es
or
inc
outs
xor
mov
sbb
push
pop
ds
mov
mov
adc
mov
gs
je
pop
test
inc
xchg
cmp
push
call
mov
jne
mov
cmp
push
das
nop
push
js
adc
dec
inc
in
sbb
or
(bad)
movs
fisub
std
or
hlt
sub
cdq
data16
sub
ja
outs
add
push
fistp
cs
sahf
push
xor
jl
jl
sbb
lea
and
push
sub
int
adc
add
pop
or
in
rol
pop
jne
cmp
jg
sub
push
sbb
cmp
sbb
jmp
aas
(bad)
fdiv
or
call
icebp
sub
aaa
push
mov
dec
sub
das
add
int3
rcl
mov
aas
pop
sub
mov
fs
es
repz
(bad)
jb
xchg
movs
push
ja
test
popf
xor
mov
sbb
icebp
push
xor
mov
xor
fisubr
lahf
jb
pop
mov
xchg
sti
fistp
mov
or
(bad)
je
push
ins
mov
scas
cmp
mov
sub
scas
leave
shr
pop
xchg
loope
ret
pop
jg
push
cmps
sbb
movs
fwait
cwde
inc
aam
shr
popf
mov
into
outs
jbe
xchg
mov
fmul
xor
sti
ds
dec
mov
cmc
cli
add
lea
clc
jb
xor
mov
xor
ror
ret
dec
pop
les
jge
jg
xchg
cmp
adc
adc
imul
adc
mov
mov
les
jmp
das
push
pop
cmp
inc
cwde
jge
aaa
fdiv
push
iret
mov
mov
mov
inc
sbb
jnp
fs
push
push
ins
xchg
inc
inc
pushf
out
and
xchg
and
mov
sbb
les
dec
push
cli
(bad)
fdivr
pop
pop
adc
dec
or
lods
pop
and
cmp
push
ret
rcr
or
iret
mov
sub
inc
xchg
pop
xor
cmc
(bad)
(bad)
aad
xor
cld
jmp
pop
leave
mov
and
retf
cmps
jno
push
ins
(bad)
mov
push
jmp
cmp
out
je
stc
xor
loope
mov
fmul
sub
dec
mov
mov
push
mov
ror
lock
ins
cmp
mov
addr16
clc
mov
repnz
add
mov
adc
inc
in
cmp
int
pop
mov
movs
stc
cmp
popa
mov
xchg
jne
cmp
xchg
in
out
mov
mov
icebp
or
mov
cmp
adc
mov
in
xchg
add
jno
jp
pop
pop
mov
mov
fld
aad
mov
push
inc
lods
push
mov
outs
xlat
jbe
xor
outs
js
and
pop
push
push
xchg
shr
repz
dec
shr
sub
int
xchg
xchg
cmc
clc
mov
(bad)
push
fcmovnbe
jmp
rol
movs
rcl
jnp
sbb
mov
adc
mov
mov
int
mov
leave
je
dec
jle
dec
(bad)
pop
add
jo
mov
test
popf
dec
inc
jne
pop
call
jecxz
add
leave
ret
shl
dec
pop
pop
jecxz
cmps
test
jl
xchg
aaa
out
test
fiadd
not
sbb
imul
jmp
fs
push
xor
and
js
cmp
inc
adc
cmp
in
push
dec
hlt
mov
inc
push
pop
push
and
lods
loope
psrlq
movs
jge
push
adc
mov
dec
cmp
and
pop
leave
jbe
into
or
arpl
add
call
xchg
mov
jle
and
mov
xor
(bad)
and
pop
shl
icebp
ja
sub
mov
dec
cmp
mov
fs
adc
sub
fsubr
dec
xchg
and
sbb
pop
repz
jno
stos
cmp
xchg
sub
sbb
xchg
jmp
(bad)
mov
out
mov
xor
bound
dec
not
inc
pop
adc
fdivr
mov
jg
jo
jbe
cmp
xchg
xchg
int3
xor
nop
or
or
out
push
nop
xchg
cli
sbb
fimul
push
int3
mov
adc
ja
not
stc
bound
call
sub
bound
cdq
mov
aaa
mov
sbb
mov
dec
sub
stc
loop
jp
push
inc
ja
gs
jo
sbb
pop
xchg
inc
push
enter
pop
rcr
mov
retf
mov
cmc
jmp
push
jbe
imul
loopne
xor
jg
into
ror
mov
(bad)
mov
inc
retf
add
push
daa
sahf
xchg
sahf
push
sub
push
dec
dec
xchg
fld
out
jecxz
stc
xchg
mov
push
pop
jae
int
mov
daa
mov
fs
mov
daa
add
mov
cmp
cmp
enter
push
mov
outs
mov
xor
movs
sahf
cld
iret
std
jo
inc
pop
(bad)
les
dec
jmp
and
ret
push
xchg
cmp
or
ret
jnp
cmp
mov
adc
rol
mov
loop
sbb
xor
js
repnz
cmps
mov
out
sub
mov
pusha
fild
jmp
stc
mov
xchg
cdq
and
sub
movs
ss
imul
mov
jno
shl
je
repz
daa
push
mov
cld
pushf
pusha
dec
mov
mov
push
lea
(bad)
push
outs
xchg
mov
add
and
fnsave
add
or
cwde
inc
rcl
rcl
jns
daa
mov
push
test
inc
(bad)
xchg
retf
jmp
pop
push
stos
sbb
mov
adc
add
cld
fisub
(bad)
push
out
xchg
mov
xor
pop
int
lock
fwait
gs
xor
cmps
mov
and
push
push
(bad)
test
cmp
lods
xchg
mov
xchg
inc
fild
retf
cmp
fwait
(bad)
cmp
out
inc
in
cmps
scas
mov
fsubr
nop
call
ja
cmp
cmp
nop
inc
and
sub
sbb
adc
popf
dec
fs
xchg
xor
or
inc
sbb
xchg
fdivr
lea
stos
sti
push
jmp
jns
xor
push
(bad)
outs
sar
mov
dec
push
xor
sbb
xor
enter
ins
neg
mov
setns
loop
push
iret
inc
pop
mov
jmp
out
adc
sbb
mov
pop
add
push
in
and
dec
or
mov
cdq
xchg
fs
rol
mov
pop
sahf
mov
pop
jmp
test
xor
mov
jle
std
mov
or
xchg
push
out
xchg
fldenv
mov
cld
and
popa
mov
cwde
mov
fstp
ja
(bad)
lds
aaa
call
xchg
int3
sub
je
jnp
lock
mov
cmp
test
rcr
jge
jno
adc
mov
push
mov
mov
mov
or
dec
pop
mov
clc
inc
sub
mov
mov
loope
out
push
and
lods
xchg
in
leave
mov
mov
(bad)
add
xor
(bad)
xchg
loopne
or
jle
add
rcl
dec
pop
push
push
std
pushf
xor
push
cmc
rcl
inc
jg
sbb
repnz
popf
or
je
in
push
stos
xor
lods
rol
leave
lods
pop
and
cmp
icebp
dec
jmp
or
cld
ret
inc
xlat
pop
push
pop
cld
scas
jbe
jno
sub
retf
lods
outs
pop
push
mov
push
ror
pop
ins
push
ja
mov
enter
push
movs
aad
jmp
mov
xchg
enter
mov
shl
inc
jb
scas
xor
sub
xor
xor
jno
mov
jle
adc
in
push
popf
xchg
cwde
popa
mov
jb
push
cmp
test
or
daa
mov
test
dec
push
test
mov
jge
pushf
aam
jo
sbb
xchg
fisub
out
jg
jns
fbld
and
outs
and
dec
push
ror
imul
out
xor
sub
repnz
jge
adc
add
xor
lea
pusha
xchg
in
lock
lods
movs
mov
mov
push
fwait
mov
out
dec
xchg
push
sbb
cwde
hlt
aam
ret
push
mov
(bad)
out
add
out
sti
mov
xchg
mov
outs
or
ret
adc
std
aam
sub
xchg
enter
sbb
xor
data16
(bad)
inc
xor
mov
(bad)
cmp
adc
cmps
rcr
xchg
cli
dec
outs
out
push
popf
push
into
pop
ret
pop
or
push
push
leave
cmp
jnp
cmp
imul
add
xchg
xor
mov
aas
pop
sub
ins
push
mov
(bad)
(bad)
movs
shr
call
mov
cdq
xor
or
cmpps
xchg
sbb
ja
bound
repz
push
test
sbb
pop
cmp
cmp
icebp
leave
test
mov
aad
loop
push
cwde
ins
mov
and
xor
mov
mov
mov
and
sbb
rol
mov
add
pusha
xchg
dec
cwde
push
xchg
sbb
in
in
mov
call
pop
jge
sahf
and
push
ins
add
xchg
seta
ds
call
and
test
add
inc
mov
stos
in
mov
jnp
adc
es
add
je
retf
pop
cs
cmps
(bad)
(bad)
dec
loopne
lods
mov
cmps
adc
dec
inc
mov
fwait
lahf
rol
xor
jmp
pusha
loop
pop
inc
jmp
hlt
xchg
mov
hlt
jmp
inc
pushf
movs
aam
fldcw
jmp
test
fsubr
inc
(bad)
lahf
mov
sub
mov
pop
mov
rol
jge
xchg
xchg
add
aas
cmp
lds
dec
xor
jns
adc
(bad)
sbb
jbe
or
mov
mov
retf
jg
inc
sbb
mov
mov
daa
call
inc
ja
mov
and
xchg
(bad)
adc
mov
mov
mov
cmp
mov
xchg
jnp
inc
and
xchg
mov
imul
mov
pushf
(bad)
in
mov
ja
push
cmp
mov
sub
out
inc
cmp
in
push
in
push
stos
iret
idiv
dec
and
mov
mov
mov
mov
push
mov
ret
mov
nop
out
jno
js
fdivr
je
or
(bad)
in
imul
pop
test
push
out
ins
pushf
cmps
sbb
in
test
cmp
test
push
iret
mov
test
rcr
fcom
enter
cmp
inc
jo
call
adc
aaa
adc
test
outs
nop
in
mov
leave
xchg
mul
inc
div
mov
ret
inc
or
sbb
push
test
or
pop
cmp
mul
mov
push
jmp
icebp
fiadd
inc
mov
cs
gs
xchg
fdivr
add
aam
adc
aas
test
mov
and
scas
inc
das
and
fs
ret
fcomi
mov
push
loop
test
inc
adc
dec
inc
push
mov
sar
das
add
pop
test
ins
mov
xchg
test
outs
lea
je
fisttp
retf
jnp
in
retf
scas
push
loop
mov
and
jns
mov
in
mov
ins
mov
clc
dec
dec
loope
dec
test
icebp
lahf
cmp
stc
mov
fiadd
xchg
and
dec
sar
adc
scas
fnstenv
push
mov
repnz
inc
out
cmp
repnz
cmp
sbb
aad
xchg
sbb
shr
fwait
jns
daa
sbb
hlt
sbb
in
and
fild
int3
imul
adc
and
aam
(bad)
inc
retf
sbb
xor
adc
xchg
push
jp
xor
xchg
in
stos
adc
sub
push
repnz
jne
repnz
or
sbb
in
or
dec
sub
ret
mov
nop
idiv
inc
stos
jecxz
xchg
(bad)
lods
xchg
and
ret
xchg
adc
aam
mov
xor
xor
and
and
xor
fwait
jno
jno
inc
jnp
jle
fcomp
sub
movs
cmp
clc
sbb
mov
inc
loope
mov
test
or
push
popa
inc
jo
jnp
mov
cwde
add
dec
inc
sub
(bad)
mov
mov
test
popa
(bad)
xor
push
mov
ret
push
cmp
cmp
pop
lock
mov
ins
pop
iret
pop
imul
push
fwait
and
aad
mov
pop
das
add
adc
(bad)
into
icebp
pop
mov
add
fcom
mov
das
push
push
pop
pop
cmp
push
and
mov
sub
sub
stc
xchg
jo
repz
xchg
ins
xor
dec
stos
xchg
xor
scas
rcr
dec
mov
or
(bad)
aam
and
scas
dec
ins
xchg
sahf
inc
das
repnz
mov
jae
pop
pop
out
push
add
adc
xchg
fild
xchg
sbb
xchg
lds
sub
cmp
push
int
adc
aaa
mov
push
es
cdq
xlat
fwait
xor
xchg
fild
adc
mov
jmp
in
mov
(bad)
or
scas
jmp
add
bswap
inc
add
xchg
repz
push
adc
or
and
in
add
mov
inc
xor
dec
mov
ss
lahf
mov
retf
fisubr
pop
push
xchg
jns
not
xchg
ins
lock
cmp
cmp
xchg
movs
and
mov
jge
dec
and
(bad)
fwait
sub
xchg
mov
(bad)
(bad)
xchg
push
rcr
hlt
mov
add
and
call
in
push
mov
and
mov
or
xor
cwde
inc
mov
sar
jecxz
sahf
test
sub
sbb
aaa
sbb
add
sbb
push
jmp
rol
jmp
sub
retf
dec
test
arpl
aas
mov
in
push
dec
fs
sub
mov
sbb
jl
leave
pop
add
mov
add
pop
out
push
lahf
sub
cmp
call
mov
mov
mov
cld
mov
movs
sbb
loope
xchg
aam
add
jnp
stos
dec
push
retf
jecxz
sbb
xchg
inc
mov
(bad)
imul
pop
into
loop
enter
mov
xchg
cmp
add
mov
adc
neg
(bad)
dec
mov
ja
ret
iret
mov
pop
jo
test
pushf
pop
sub
xor
pop
in
std
xor
mov
fwait
push
out
dec
jmp
push
pop
dec
shl
cs
cld
mov
push
jno
test
lea
cli
jo
int
outs
cmp
jl
nop
mov
std
pop
lea
inc
push
dec
add
ret
cli
ret
sahf
xor
mov
lds
sub
in
jle
pop
adc
sti
loope
jae
ret
fldenv
ret
leave
jb
adc
(bad)
jg
dec
mov
int3
lds
call
xchg
iret
inc
or
pop
hlt
dec
jecxz
sbb
adc
pop
call
sbb
or
mov
or
sbb
and
int3
push
sub
push
out
inc
cmp
pushw
iret
and
mov
test
(bad)
(bad)
shl
jle
nop
shl
pop
outs
leave
shl
sbb
ds
shl
neg
mov
or
icebp
pop
cmp
jnp
ja
mov
mov
and
mov
cmp
loop
xchg
(bad)
jbe
dec
inc
movs
les
cmps
xor
xchg
cwde
adc
lods
retf
(bad)
fs
pop
and
out
into
mov
out
gs
fsubr
dec
rol
inc
or
adc
into
mov
and
call
lock
jge
mov
je
mov
dec
jle
and
push
fdivr
pop
out
out
aaa
xlat
mov
cmp
add
shr
and
sbb
mov
adc
pop
daa
pop
cmc
lods
push
push
pop
(bad)
push
pop
xor
movs
call
out
mov
daa
jl
iret
movs
inc
mov
stc
popf
sbb
movs
imul
sar
pop
repz
int
in
push
pop
into
or
ja
imul
inc
cmp
push
mov
test
xchg
xor
jge
mov
xor
fsub
and
pop
pop
push
inc
or
push
pop
cwde
sub
dec
push
dec
xlat
cmc
and
imul
(bad)
popa
ror
sub
jno
jmp
call
rol
xlat
(bad)
jmp
push
fldenv
dec
rcl
repnz
rcr
call
mov
jbe
aaa
test
jl
jne
popa
sub
ds
je
stos
pushf
out
or
mov
jns
mov
lahf
mov
out
cwde
aas
cwde
cmp
cmc
pop
jno
xchg
shr
sub
mov
cmp
test
(bad)
jb
gs
shl
sub
ins
fwait
lods
cdq
mov
(bad)
repnz
sub
dec
dec
pop
pop
pop
mov
aad
pop
pop
ret
mov
loope
push
cmc
inc
std
aaa
inc
fist
dec
cmc
xlat
retf
sub
sbb
pop
and
test
jnp
jp
cli
scas
out
or
fisttp
xor
scas
sbb
xchg
popf
ss
jnp
sbb
aas
cmp
push
in
sub
dec
adc
cli
test
movs
fwait
aad
mov
repnz
fnstsw
iret
cmp
or
pop
mov
jno
jns
test
pop
mov
or
stc
cwde
mov
mov
retf
cmp
(bad)
aas
nop
pop
fcomp
popf
sub
retf
xchg
push
es
out
es
xor
mov
js
pop
stos
sub
pop
mov
or
pop
aad
pop
lock
popf
leave
xchg
rol
iret
in
push
jae
popf
lods
mov
scas
repnz
mov
adc
push
jno
call
or
pushfw
mov
aaa
sub
cwde
addr16
push
loopne
adc
sbb
(bad)
dec
adc
outs
sub
loope
cwde
daa
outs
pop
pop
push
cwde
and
mov
dec
xchg
loop
adc
push
and
out
sbb
sub
dec
cmp
ins
mov
in
stc
adc
retf
adc
sub
jb
mov
ret
ja
dec
je
mov
into
fimul
mov
stos
repnz
xor
sbb
adc
retf
mov
ret
ins
dec
cmp
fisttp
push
adc
js
mov
les
das
xchg
inc
mov
sub
stos
jle
xor
rol
add
adc
test
push
arpl
mov
in
pop
daa
addr16
push
adc
(bad)
mov
ret
loope
cmp
gs
mov
sbb
jle
icebp
mov
sbb
sbb
sbb
psubusb
leave
not
push
hlt
push
sbb
xor
adc
mov
out
lods
pop
call
sub
push
out
xchg
int
gs
and
nop
sbb
xchg
xchg
fdiv
cs
loop
mov
jbe
arpl
xchg
xchg
aas
fist
dec
or
inc
fld
sub
lea
mov
pushf
iret
inc
movs
sbb
push
and
sub
xor
mov
fdivr
mov
and
or
add
dec
xor
jle
or
dec
and
add
pushf
lods
scas
mov
retf
jmp
scas
cs
loop
inc
loopne
cmp
rol
pusha
adc
fucom
pop
inc
call
xor
jae
gs
outs
inc
aas
aam
int3
and
mov
bound
nop
into
push
inc
imul
sbb
sar
xor
iret
push
add
pop
fst
lods
fadd
push
lahf
pop
push
or
cmp
cmp
adc
out
jecxz
in
push
mov
push
repnz
dec
and
mov
(bad)
jne
mov
or
add
stos
and
pop
jl
inc
pushf
ja
ins
je
add
mov
push
xchg
and
mov
arpl
int3
jg
jge
clc
jmp
mov
ins
cmp
dec
movs
(bad)
bound
adc
imul
pop
mov
cmp
ficom
jp
xor
mov
jmp
stc
out
in
mov
call
repnz
xchg
outs
(bad)
pop
cmp
jbe
fld
pop
push
xlat
idiv
pushf
jmp
push
jo
sub
or
add
jb
xor
cmp
mov
push
cmp
push
pop
cmp
mov
enter
and
pop
and
push
fldenv
or
adc
outs
repnz
jecxz
out
jnp
psllq
(bad)
adc
xor
jle
push
or
push
push
cli
int3
std
cwde
icebp
pusha
mov
sub
(bad)
mov
mov
lds
test
pop
outs
call
mov
mov
xchg
(bad)
fcmovb
(bad)
fnsave
mov
inc
enter
cmp
enter
jne
cwde
xor
dec
push
retf
or
shl
bound
aad
jo
jbe
sub
adc
mov
imul
adc
hlt
(bad)
call
out
fist
fdiv
movs
sbb
fwait
stos
call
mov
cmp
sub
fisub
push
fs
fimul
shr
xor
inc
sub
push
jle
out
pop
loopne
sub
les
cmp
loop
and
xchg
fwait
sub
mov
rol
call
mov
sbb
mov
sbb
test
jbe
in
ficomp
mov
out
test
mov
jge
(bad)
sub
push
push
jmp
jns
mov
in
xchg
iret
adc
jmp
mov
stos
inc
shl
sbb
push
jg
mov
jg
add
mov
or
aam
mov
sbb
or
jge
dec
daa
out
and
fprem1
jno
sbb
retf
sub
aad
jmp
xor
xor
sbb
jno
lock
push
adc
push
sbb
out
and
xor
push
xchg
mov
(bad)
fdivr
fst
cwde
mov
imul
outs
leave
push
outs
mov
mov
or
aad
pop
xchg
cmp
and
call
xchg
jp
adc
jg
cld
xor
push
loop
jecxz
inc
xor
add
leave
stc
lock
add
push
sbb
inc
mov
lods
aaa
mov
leave
clc
xor
jecxz
mov
fnstenv
repnz
rol
pushf
test
dec
add
jb
jl
neg
jnp
fisttp
jo
mov
cmp
sub
(bad)
shl
retf
movs
jecxz
xchg
int3
popa
bound
sahf
mov
adc
std
push
push
fidiv
es
pop
adc
call
daa
(bad)
xor
repnz
pop
pop
ds
jg
fsubr
sbb
das
shr
sar
adc
xor
jecxz
sub
jns
xor
mov
jmp
adc
sub
add
popa
pop
in
repz
popf
push
jb
loopne
sub
push
cmp
addr16
enter
pop
jb
and
cmp
ss
or
lods
mov
inc
adc
mov
jge
jge
loop
sbb
xchg
into
(bad)
ror
fldpi
lds
mov
mov
add
scas
and
std
jle
daa
pusha
aam
mov
or
popa
daa
rcr
in
sti
push
jg
enter
jmp
lods
inc
sbb
clc
fldcw
adc
lods
inc
push
sahf
ja
sbb
sub
or
pop
xchg
out
or
push
jp
xor
movs
loope
dec
push
xor
adc
ret
test
jae
cli
xchg
sub
bnd
adc
pop
mov
or
mov
and
pop
jl
cld
jno
scas
push
xchg
das
cmp
sbb
out
jge
shr
outs
ffreep
mov
xchg
xchg
aaa
push
popf
xchg
mov
push
cmp
dec
call
enter
repnz
test
cld
(bad)
call
mov
push
jecxz
push
bound
jge
ins
sub
sbb
add
and
aaa
xor
(bad)
je
jnp
sbb
inc
cmp
hlt
cmp
cmps
adc
fidivr
dec
cmp
xchg
std
xchg
in
and
repz
mov
in
in
pop
dec
mov
pusha
mov
jmp
mov
mov
call
pop
lods
out
into
stc
test
inc
(bad)
xor
jecxz
xchg
jl
cdq
jae
xor
xchg
bnd
mov
jle
or
mov
jo
outs
hlt
add
mov
cmp
aad
ins
push
pop
mov
mov
jo
push
xor
jae
int
call
shl
xor
in
retf
cmp
jg
and
inc
rol
adc
mov
test
popa
rcl
or
ins
ret
in
xchg
mov
rcl
mov
jmp
lea
cld
and
jbe
mov
push
fisub
sbb
sub
push
fist
push
ins
xchg
icebp
jae
add
lods
loop
mov
push
fdiv
xor
and
neg
or
xchg
mov
cmp
sbb
xchg
int3
mov
iret
xor
cmp
jp
gs
outs
lds
loop
adc
fiadd
out
inc
stos
retf
push
fwait
pop
xor
fst
repnz
call
test
jns
xchg
jae
and
jo
es
mov
(bad)
test
cli
dec
xchg
int
and
pop
cmps
xor
cmp
lock
add
add
jae
mov
data16
pop
fwait
cdq
dec
movs
stos
outs
scas
lea
mov
test
jle
daa
and
dec
lds
stc
sahf
mov
dec
int
out
lahf
pop
jle
pop
push
aad
jp
nop
mov
xchg
xchg
cmp
xchg
ss
pop
jmp
or
push
enter
inc
xlat
mov
addr16
push
jae
jb
adc
pop
dec
jecxz
mov
imul
mov
retf
sbb
dec
icebp
mov
ficomp
ret
iret
test
movs
fsub
jmp
mov
popf
lds
mov
mov
dec
ja
inc
sbb
dec
xor
nop
idiv
aas
cmp
push
sbb
fnstsw
xchg
in
jg
or
loope
dec
jbe
jmp
out
(bad)
mov
or
xchg
xlat
mov
cmp
inc
xchg
movs
lea
loop
outs
sar
(bad)
stos
rcr
mov
cmp
jne
inc
fisubr
lock
mov
test
jns
push
push
pop
in
xchg
imul
mov
pop
add
fwait
add
add
icebp
aas
push
cmp
cwde
aas
pop
push
add
mov
or
inc
cmp
ret
retf
pop
jg
sar
int
ror
add
inc
or
in
add
enter
popa
xchg
fcmovnu
pop
ss
out
int
and
repnz
ret
gs
mov
cmc
jge
sahf
mov
xchg
pop
adc
movs
xchg
cli
xor
push
jo
outs
adc
add
(bad)
out
pop
add
xor
xchg
or
fs
pop
call
popa
movs
xchg
sbb
xchg
adc
retf
mov
xor
movs
xor
adc
stos
std
inc
outs
inc
out
adc
pusha
in
fild
or
xchg
jmp
push
pop
inc
std
pop
mov
(bad)
xchg
jl
es
loope
xchg
pop
hlt
scas
dec
jo
scas
push
adc
dec
adc
loopne
push
ficom
packuswb
push
cmc
sbb
test
add
lahf
bound
repnz
jbe
sub
adc
push
(bad)
fdivr
sub
xor
fidiv
popa
mov
adc
shr
jg
add
movs
out
push
cli
mov
nop
stos
imul
fisub
cs
sbb
loopne
loopne
stos
cmp
clc
push
not
cmp
sub
in
mov
xor
lea
dec
in
dec
xchg
(bad)
popa
add
xchg
pop
cmp
fimul
or
dec
jns
mov
pop
imul
test
sub
dec
inc
hlt
sbb
sub
xchg
push
enter
shl
movs
dec
jmp
ins
sti
je
sbb
pop
pop
jns
or
mov
loopne
xchg
cmps
mov
(bad)
mov
mov
mov
xor
mov
loope
sbb
ja
aas
pop
sbb
cmps
dec
push
movs
mov
cmp
imul
mov
ja
cdq
cdq
push
and
adc
inc
popf
cdq
jecxz
xchg
(bad)
sbb
jae
stos
inc
mov
scas
call
pop
mov
movs
fucomi
loopne
in
leave
js
ja
out
rcl
jge
push
and
popa
cdq
bound
sbb
retf
setbe
push
aaa
pop
retf
cwde
jmp
push
out
movs
inc
cdq
shl
cmp
out
add
vpsrlw
in
jl
jmp
mov
and
ins
fdiv
lock
dec
ds
push
retf
dec
popf
test
outs
mov
jg
dec
mov
inc
outs
stc
jl
xor
mov
sub
sbb
nop
(bad)
xlat
into
xor
sbb
xchg
adc
cmp
push
aam
dec
mov
add
ins
cmp
add
sub
cmp
mov
mov
mov
(bad)
push
loopne
add
dec
jno
pushf
fsubp
out
mov
les
jle
push
jp
xchg
jo
data16
clc
xor
sub
push
jp
push
add
fs
in
retf
lahf
sbb
or
js
das
push
retf
leave
xchg
xchg
cli
scas
push
imul
loop
mov
sahf
movs
iret
(bad)
mov
mov
int3
cmp
scas
ror
outs
mov
ret
mov
mov
adc
jae
jg
cmps
mov
dec
or
adc
adc
push
or
xor
out
pop
lds
int
and
sti
pusha
in
fadd
jmp
and
cmps
inc
movs
movs
inc
jne
retf
iret
push
rcr
add
mov
sti
xchg
xchg
iret
push
test
inc
and
sub
enter
mov
dec
pop
sar
and
mov
(bad)
fisubr
out
dec
fstp
xor
xchg
addr16
or
popa
xor
iret
es
iret
repnz
adc
popf
fnstcw
pop
dec
in
xor
mov
sbb
jno
xor
das
sti
in
imul
adc
and
shl
push
jle
sub
fdivr
jl
loopne
jmp
or
cmp
adc
sti
imul
ret
dec
mov
fucomp
das
call
mov
call
mov
addr16
mov
sub
and
xor
dec
and
mul
mov
popa
dec
loope
jg
lock
pop
and
xor
lock
(bad)
cmp
cmp
or
adc
mov
movs
scas
cwde
(bad)
ret
cs
movs
sahf
jno
inc
rcl
movs
aad
xor
sti
nop
push
pusha
cli
adc
repz
loope
mov
or
jmp
jl
ret
jle
mov
mov
in
imul
dec
dec
in
pop
pop
lds
or
ds
inc
(bad)
addr16
mov
call
sbb
test
xchg
inc
jecxz
sub
mov
ret
xor
in
mov
lods
pop
add
lea
cmc
stos
imul
pop
mov
push
ret
cwde
sbb
cdq
jg
sub
push
dec
bound
pop
add
pop
add
mov
or
mov
mov
xchg
cmc
sub
push
push
pop
hlt
pop
push
cmp
xor
push
les
mov
xor
xchg
sub
ins
mov
scas
mov
stc
mov
and
or
sbb
test
leave
sub
stc
div
cvtpi2ps
nop
mov
mov
sub
mov
outs
shl
cld
add
mov
mov
push
cmps
movs
(bad)
cdq
add
into
jae
dec
jo
pop
xchg
inc
xchg
in
leave
mov
aaa
jo
add
xchg
mov
sub
sub
mov
fmulp
shr
movs
outs
iret
stos
cmps
outs
sbb
and
inc
(bad)
(bad)
shl
xchg
mov
sbb
and
mov
cmp
inc
loope
add
push
es
test
sub
dec
mov
mov
mov
fcom
jb
fild
pop
add
cs
dec
shl
jmp
jge
cs
jecxz
or
add
mov
pop
into
aas
std
pop
fdivr
mov
retf
nop
push
out
xchg
jmp
je
das
leave
shr
rcr
clc
sub
aaa
(bad)
in
and
dec
inc
cmp
in
cmp
das
std
jmp
ss
out
shl
jecxz
or
in
gs
jbe
fs
cdq
scas
ins
test
push
dec
jle
loope
pusha
imul
jae
pop
push
cmps
jle
sar
inc
inc
test
ret
or
jo
adc
inc
in
retf
movs
js
ja
fcomp
add
lods
pushf
add
cmc
loop
pop
mov
fdiv
sbb
xchg
xor
mov
or
daa
mov
mov
(bad)
out
push
mov
cmp
hlt
jecxz
pop
hlt
push
mov
inc
sbb
mov
leave
jmp
das
ret
das
inc
push
pop
lahf
sar
pushf
ja
adc
ret
clc
cmc
in
lea
out
push
mov
jmp
pop
out
rcl
aaa
push
jecxz
mov
aaa
js
popf
add
dec
mov
movs
add
outs
or
sub
mov
mov
jg
out
inc
add
cmp
retf
inc
shr
cmp
and
lds
fnstenv
pop
pusha
sub
or
push
gs
jmp
cmp
scas
pop
inc
add
adc
ins
test
push
movs
push
cld
ret
xor
fnstenv
xor
mov
shl
cmp
shl
dec
inc
mov
pop
adc
jnp
mov
daa
ror
mov
xchg
int3
jp
sbb
pushf
imul
fbstp
je
imul
ret
adc
xchg
daa
inc
mov
sbb
outs
jnp
test
mov
stc
adc
ja
pavgb
fnstcw
cmp
std
sbb
adc
test
mov
push
lods
cwde
jae
push
movs
pop
or
pusha
rol
dec
outs
test
cmps
loop
xchg
dec
movs
imul
mulps
test
daa
clc
adc
xor
lea
push
inc
push
cli
push
leave
mov
sub
xor
(bad)
sub
inc
mov
arpl
push
inc
cmp
aad
std
popa
and
jl
adc
call
mov
cmp
xor
add
cmps
dec
sbb
in
enter
pop
mov
or
data16
lock
mov
or
icebp
lods
sbb
mov
dec
pop
fisubr
xchg
in
scas
inc
adc
and
rol
ins
mov
mov
cli
out
xor
adc
in
cmc
mov
out
add
xchg
sbb
je
mov
(bad)
stc
ja
pop
push
and
repnz
sti
gs
scas
pop
mov
sub
hlt
fiadd
adc
cvtps2pi
out
call
push
adc
cld
push
dec
cmp
(bad)
int
cmc
mov
and
std
dec
mov
push
in
cdq
add
(bad)
movs
frstor
pop
pop
rcr
pop
mov
mov
cdq
cmc
(bad)
gs
cmp
jecxz
jmp
popa
fldenv
jne
int3
inc
mov
push
dec
cmp
mov
pop
jecxz
dec
(bad)
lock
jecxz
mov
into
pop
inc
pop
mov
mov
adc
inc
cmc
nop
aaa
lea
imul
idiv
fbld
push
cmp
not
(bad)
(bad)
mov
aam
mov
mov
sbb
inc
mov
fidiv
aam
mov
jo
push
or
loope
sub
repnz
dec
ret
and
cs
add
fst
mov
(bad)
mov
into
dec
sbb
in
or
test
test
inc
cld
sbb
aad
js
cmp
jle
(bad)
mov
int3
in
in
cmp
fild
xlat
out
and
mov
rsm
rcr
cwde
sbb
inc
push
mov
pop
fwait
mov
scas
rol
jecxz
push
adc
mov
push
adc
les
pop
and
or
mov
mov
or
jne
mov
mov
push
cs
aas
sti
sti
das
cmp
(bad)
mov
or
(bad)
scas
rcr
pop
mov
push
xchg
and
in
or
cmps
cmp
fstp
aaa
shr
and
adc
(bad)
xchg
arpl
sbb
xor
fidiv
aam
outs
aas
or
sbb
dec
addr16
mov
cdq
mov
rcl
sbb
xchg
fcmovne
xchg
inc
clc
es
mov
mov
sti
push
ror
sahf
jne
xor
mov
in
xlat
ret
inc
call
dec
je
stos
bound
in
retf
pop
push
mov
shr
push
mov
(bad)
sub
fldenv
xchg
adc
mov
pop
clc
retf
xchg
ret
sar
aas
(bad)
push
sbb
jns
xlat
cmp
aam
icebp
iret
cmp
adc
mov
call
in
std
cmp
hlt
lds
push
cdq
cmp
mov
dec
lock
or
mov
sbb
ret
mov
sbb
lahf
jecxz
or
js
pop
cmp
mov
out
les
dec
movs
add
pop
addr16
sub
fcomp
test
push
in
scas
jae
cmp
sbb
add
sub
loope
mov
ret
sahf
pushf
and
das
cmp
add
lds
inc
pusha
jnp
sahf
push
mov
sub
xor
inc
ds
mov
sub
rcr
cld
(bad)
xlat
das
(bad)
in
jae
daa
jmp
mov
xlat
mov
test
mov
test
mov
das
pop
push
sub
pop
mov
jg
mov
lds
nop
stos
push
cmp
inc
cmp
shl
mov
or
loop
out
out
or
call
mov
in
xchg
sub
fidivr
xor
ret
pop
je
xchg
xchg
or
das
outs
cli
push
std
add
movs
adc
repnz
popf
in
nop
into
cli
repnz
inc
sbb
mov
sub
and
mov
out
add
(bad)
mov
mov
pop
sbb
shr
jo
test
repnz
jmp
mov
popa
test
fs
dec
sar
add
pop
pop
fild
adc
lods
dec
inc
dec
or
test
add
clc
fmul
popf
ja
adc
push
adc
aas
lods
or
sahf
retf
(bad)
cmp
inc
nop
push
mov
inc
sbb
push
cli
je
(bad)
fcomp
dec
repnz
pop
mov
and
call
movs
xchg
and
pop
lock
frstor
xchg
xchg
push
cmp
jl
js
jge
lods
ss
int3
nop
xchg
pop
xchg
cmc
push
xchg
cmp
dec
cmc
xchg
aaa
les
dec
out
pop
cmp
addr16
(bad)
sub
retf
pop
mov
mov
clc
pop
ror
test
ja
push
call
dec
push
sub
adc
or
sti
sub
jns
neg
call
inc
dec
inc
sub
push
imul
imul
pop
and
and
mov
xor
gs
adc
cmp
aam
or
adc
cmp
xchg
mov
sub
inc
add
jl
jg
xchg
arpl
adc
mov
and
jl
ret
jno
outs
loopne
in
ins
call
retf
hlt
mul
mov
or
xchg
cmp
cmp
push
clc
lods
mov
rcr
jb
xchg
mov
inc
and
dec
ss
shr
gs
pop
xor
sbb
ds
adc
xlat
push
cmp
cmp
lock
adc
imul
xchg
inc
sbb
data16
scas
push
xchg
adc
and
icebp
sahf
movs
or
and
int3
push
push
mov
pop
call
pusha
stos
imul
pop
out
and
js
ins
adc
or
dec
fwait
xchg
ret
cld
ja
adc
inc
icebp
xor
or
and
enter
push
imul
lahf
jl
adc
jg
dec
loop
cmp
push
sub
xchg
and
jmp
cwde
xor
shr
dec
mov
cdq
je
push
mov
adc
ds
cmp
pop
loop
xor
inc
(bad)
lods
imul
sub
retf
sub
sbb
(bad)
repnz
retf
sbb
stos
loope
cmp
call
mov
and
das
adc
mov
dec
dec
stos
mov
das
jnp
mov
leave
lahf
xor
jo
xchg
fisub
imul
icebp
and
pop
in
sbb
fdivp
jns
sub
mov
std
shr
jmp
inc
sub
lahf
call
and
xor
adc
adc
clc
retf
out
sub
xchg
push
call
jo
push
retf
lods
(bad)
pop
jmp
adc
dec
icebp
mov
adc
lods
pusha
clc
dec
inc
push
adc
or
lahf
(bad)
fsub
dec
js
xlat
mov
mov
xlat
sub
stc
in
pop
push
dec
pop
and
mov
push
xchg
pop
sbb
fs
inc
fisttp
xchg
scas
fsub
xchg
xor
sub
idiv
movs
stos
je
test
stos
pop
xor
xchg
and
sub
add
(bad)
loope
adc
fadd
push
inc
inc
and
shl
push
jae
inc
ins
and
dec
or
sub
pop
cmp
data16
movhps
jno
or
push
pusha
and
test
(bad)
push
jmp
and
shl
out
xchg
mov
xor
xlat
jbe
cs
repnz
aas
hlt
aad
dec
cmps
bound
sbb
xlat
loop
sub
iret
int
fcom
sbb
mov
mov
jno
xchg
rcl
or
(bad)
fistp
sbb
pop
jo
leave
pop
stos
push
outs
lahf
daa
mov
dec
test
ins
ret
aam
adc
xchg
xor
jle
movs
jecxz
dec
xor
xchg
pop
out
dec
jae
sbb
jb
cmps
and
mov
add
push
push
adc
gs
xor
jo
pop
push
scas
add
rol
ret
loope
mov
sbb
clc
and
jmp
pop
stc
std
sub
jp
lods
(bad)
adc
mov
sbb
mov
pop
(bad)
imul
or
xchg
pusha
ret
mov
adc
stos
dec
les
add
push
inc
adc
xchg
or
sub
movs
movs
fwait
jns
sahf
in
adc
inc
sub
mov
fcomp
sub
push
fld
dec
sub
mov
adc
cwde
mov
cld
call
pop
jle
mov
aad
xchg
push
scas
shl
stos
dec
cmp
sbb
xchg
je
mov
inc
mov
inc
jle
out
in
outs
jle
mov
sub
jl
cld
cmp
(bad)
rcr
push
cdq
push
jns
int3
pop
fldcw
cmp
jp
add
inc
sbb
xchg
push
jg
xor
pop
mov
dec
sbb
test
cmp
mov
xor
add
add
shrd
div
sub
sub
outs
mov
dec
push
out
mov
retf
mov
cmp
fistp
pusha
hlt
bound
int3
or
je
rol
or
pop
add
cli
clc
pop
lods
pop
add
out
lds
into
repz
pop
lahf
push
repnz
aam
jnp
mov
cmps
out
mov
pop
fiadd
fwait
dec
lea
fild
scas
pop
jne
add
inc
sub
xchg
mov
dec
test
fdivr
nop
daa
out
div
xchg
cwde
adc
icebp
xor
movs
cs
setnp
dec
cmc
adc
aaa
inc
ja
aaa
movs
and
pop
mov
mov
push
fwait
enter
mov
retf
mov
and
sub
xchg
in
call
xchg
pop
inc
fsubr
repnz
mov
sbb
sub
adc
stos
cmp
call
sbb
inc
dec
push
lods
shl
cli
pop
sbb
aad
sub
push
xchg
inc
out
int3
mov
cmp
mov
mov
xor
in
aaa
sahf
mov
mov
sub
hlt
gs
push
mov
imul
popa
mov
mov
pop
xchg
cmps
jae
jae
je
adc
outs
bound
push
push
fld
not
jns
and
cmp
sub
or
mov
jmp
call
dec
ret
dec
das
scas
jp
pop
mov
ret
mov
mov
and
mov
dec
ror
push
push
(bad)
push
cmp
or
sahf
jge
or
sbb
lock
ret
dec
cmp
push
xchg
fiadd
pop
test
or
fsub
jmp
mov
sbb
std
jl
pop
or
xor
out
dec
leave
xor
and
mov
imul
div
cmps
retf
mov
xor
lahf
lea
pop
int3
and
push
jmp
stos
push
push
clc
int
enter
xchg
(bad)
jg
shl
ja
pop
div
movs
sahf
and
or
jmp
test
mov
mov
mov
sbb
mov
popa
adc
jne
jmp
push
or
pusha
push
scas
xchg
ss
out
push
movs
and
ret
xor
movs
xor
fmul
fcomp
ror
and
push
sub
inc
mov
(bad)
jno
cmp
repnz
(bad)
xor
push
ret
cmp
jmp
push
addr16
stos
lea
push
js
test
(bad)
lods
push
push
fadd
pop
mov
mov
mov
mov
or
inc
jmp
add
mov
push
mov
mov
mov
sbb
lods
sub
shl
(bad)
sub
(bad)
lods
xchg
fnstsw
stc
cmps
(bad)
xor
mov
sub
xor
dec
mov
daa
test
stc
or
sbb
jp
push
push
int3
and
push
pusha
sub
mov
jge
retf
pop
adc
push
lea
jbe
mov
and
not
and
and
call
les
mul
pop
mov
and
push
xchg
std
pusha
rcl
sti
jnp
lods
pop
mov
ficom
add
int
in
push
lahf
xchg
and
fiadd
(bad)
sbb
mov
lods
pusha
test
in
xor
mov
add
inc
or
adc
and
stos
pop
push
fidivr
mov
outs
push
mov
ja
loope
cmp
(bad)
neg
bound
and
jne
sub
fcom
call
pushf
cwde
lahf
xchg
push
xor
dec
pop
jmp
loopne
ja
daa
sub
int
arpl
ins
or
cmp
push
mov
cwde
mov
mov
test
sub
jmp
enter
in
out
dec
xchg
(bad)
mov
mov
and
test
mov
sbb
adc
sub
dec
adc
fidiv
rcr
jecxz
out
ficomp
movs
aaa
xor
add
call
inc
pop
imul
adc
mov
cmps
int3
cld
pop
mov
inc
mov
sbb
sbb
not
jmp
sahf
test
push
das
push
cmps
enter
xchg
mov
inc
push
inc
push
addr16
sub
pop
test
or
fucomp
add
sbb
push
jmp
ds
jae
clc
je
loope
(bad)
ins
or
and
mov
outs
lods
scas
xchg
scas
sahf
mov
out
outs
jl
cmps
lds
xor
sub
push
sbb
sub
mov
adc
rcr
xor
pop
inc
pop
mov
pop
daa
call
(bad)
pushf
pop
rcl
add
dec
pop
sbb
or
popa
int
rol
sbb
es
adc
es
pop
retf
sbb
in
mov
les
sbb
enter
hlt
jns
mov
mov
sub
ret
pop
call
fiadd
fistp
add
js
pop
pusha
das
fs
pusha
sub
jno
jle
sahf
inc
and
mov
mov
jbe
or
dec
jo
scas
dec
dec
mov
mov
add
cld
out
inc
push
lods
call
sti
jae
jno
add
leave
scas
mov
(bad)
arpl
movs
cmp
mov
mov
lods
xor
or
pop
repz
xor
call
or
data16
xor
xchg
retf
pop
out
sbb
push
xor
(bad)
cdq
mov
loop
push
loope
cs
pusha
xchg
xchg
push
stos
inc
ins
cs
ds
gs
scas
inc
mov
jbe
jl
jmp
jmp
push
or
mov
js
scas
mov
xor
cmp
xchg
inc
and
mov
int
mov
add
cmp
lods
shr
xchg
or
lahf
adc
mov
pop
jge
xor
lds
xchg
sub
pop
and
inc
adc
out
stc
enter
or
movs
repz
mov
push
sub
sub
out
jl
jle
push
loope
daa
xor
fnsave
in
test
push
pushw
inc
mov
mov
inc
sbb
adc
rcl
mov
in
pop
fwait
or
and
data16
cmp
push
test
imul
loope
sahf
mov
outs
inc
push
int
les
push
pushf
js
setno
out
daa
mov
inc
repz
test
not
pushf
mov
cmp
test
mov
scas
pmullw
jle
fmul
lea
nop
fwait
fwait
loopne
jl
addr16
cmps
call
cld
sahf
fimul
js
aas
jp
sbb
xchg
add
add
loope
mov
fsub
addr16
movs
jg
cwde
cmc
push
mov
or
std
xor
inc
mov
cld
dec
cmp
mov
outs
jb
xchg
out
je
jmp
push
cmc
shr
test
cmp
iret
icebp
in
fs
xor
and
mov
xchg
lods
je
pusha
hlt
mov
xchg
stos
mov
push
loop
mov
jo
or
test
jle
out
call
add
xlat
scas
or
jecxz
mov
mov
rol
rcl
mov
xchg
(bad)
or
fst
aam
and
dec
dec
push
mov
dec
retf
(bad)
and
inc
ret
(bad)
add
cli
data16
add
push
(bad)
imul
xchg
es
int3
dec
das
(bad)
addr16
jmp
neg
arpl
in
sbb
sbb
sbb
sbb
xchg
out
test
jecxz
cmp
cmp
les
or
loopne
jg
mov
mov
inc
jg
(bad)
or
aad
inc
(bad)
mov
sub
mov
mov
cmps
mov
jl
test
cmp
icebp
add
cmp
mov
adc
(bad)
pushf
retf
dec
fcmove
xchg
cmp
or
sbb
fist
inc
lahf
or
shl
cmp
pop
ud1
xor
into
cmp
or
loopne
mov
jl
ss
sbb
or
js
aam
popa
pusha
div
cwde
lods
(bad)
pop
arpl
jne
repz
add
sete
fidiv
(bad)
iret
ins
fist
fidivr
mov
cmp
pop
hlt
aaa
mov
mov
jb
mov
loopne
js
enter
in
pop
dec
fisubr
mov
sub
or
and
lods
and
jb
daa
add
imul
inc
sti
or
call
in
imul
lds
in
test
add
xchg
or
stc
bound
sbb
test
sub
and
test
into
ficomp
pminsw
std
jge
(bad)
pushf
inc
stos
pop
push
int3
inc
adc
lods
pop
push
dec
adc
jo
jne
clc
mov
mov
fprem1
jmp
outs
out
jnp
xlat
adc
jne
mov
ds
pop
push
pop
cwde
test
(bad)
adc
bound
sub
push
push
leavew
sub
in
in
out
mov
mov
push
jp
cs
loop
aaa
ret
pushf
inc
lock
ins
lahf
aad
and
add
xor
xchg
mov
push
xlat
(bad)
scas
or
mov
cmps
addr16
shl
(bad)
cld
ds
scas
mov
mov
mov
addr16
ror
or
inc
dec
cmc
aam
jns
movs
and
add
sub
xchg
daa
js
inc
cld
mov
cld
gs
xlat
icebp
imul
add
pop
mov
mov
push
cmp
leave
lods
mov
sbb
fistp
fidivr
int3
push
outs
jle
jb
or
and
mov
xchg
lods
es
mov
dec
and
cs
dec
push
or
shl
inc
xor
ds
mov
sub
cmp
inc
cmp
cs
pop
xchg
cwde
jnp
cld
sub
inc
sti
mov
adc
mov
and
retf
dec
or
jge
sub
push
(bad)
mov
xor
jo
cmps
lods
sbb
push
dec
xor
inc
pop
add
(bad)
leave
ins
and
cmc
cli
sub
add
test
mov
sbb
hlt
dec
mov
mul
lea
out
fsubr
das
pop
pop
jo
push
jp
pop
loopne
nop
fwait
and
push
mov
daa
xchg
jae
add
cs
mov
pop
jae
xchg
jb
mov
sub
fldenv
call
sahf
int
into
mul
outs
ret
and
test
sbb
hlt
lock
adc
mov
adc
jmp
dec
cdq
test
mov
popf
jns
in
cmps
scas
into
xchg
fs
dec
push
jns
lock
pop
into
pusha
jmp
push
out
mov
inc
setb
xchg
test
jne
out
dec
jnp
int
pop
jmp
fidiv
sbb
and
shr
cmp
jp
xchg
int3
retf
rol
mov
sub
pushf
sbb
mov
pop
daa
ret
imul
aas
(bad)
xchg
dec
mov
sub
pop
(bad)
in
movs
xchg
sub
jb
and
retf
icebp
pop
movs
test
mov
or
movs
mov
mov
test
mov
sub
dec
push
ja
lods
inc
dec
sti
dec
fadd
pusha
push
and
scas
push
shl
jmp
cmp
jg
pop
(bad)
add
pop
(bad)
aad
mov
sbb
(bad)
or
xchg
test
fs
imul
adc
movs
push
jmp
scas
sbb
push
mov
jle
and
sbb
outs
test
mov
test
mov
and
xchg
movs
ins
cmp
jle
jbe
ss
neg
adc
xor
bound
stos
es
int
ss
stos
adc
ja
(bad)
pusha
sbb
bound
out
loop
sbb
mov
and
in
fnstcw
ret
pop
cmp
retf
icebp
fcom
loope
nop
jp
inc
sub
fcmovu
xlat
js
cmp
mov
pop
pop
and
jae
sahf
and
sbb
cmp
imul
inc
mov
js
sbb
nop
xchg
mov
mov
fwait
push
rol
mov
stos
sbb
ror
sbb
addr16
into
call
adc
dec
cmp
sub
xchg
ror
outs
(bad)
int
adc
push
add
out
test
and
add
jl
in
pop
enter
cmps
xor
shl
dec
scas
sbb
mov
inc
js
inc
movs
sub
dec
sub
outs
xchg
sti
and
in
jb
jno
lods
jne
cmps
lods
cmc
cld
mov
sahf
cli
retf
loopne
test
sub
popa
xchg
iret
pop
adc
pop
or
outs
jp
stos
in
push
sbb
std
add
or
push
push
cli
popa
shr
std
sub
jmp
xor
push
mov
pop
mov
scas
inc
ficom
lods
xlat
xor
sub
sar
add
or
ins
xchg
(bad)
shl
push
mov
and
pop
lods
cmp
in
mov
jnp
inc
xor
test
retf
shl
cmc
js
cld
bound
loopne
push
pop
jbe
pop
fsub
mov
sub
popa
xlat
clc
mov
test
jg
(bad)
fdivr
add
and
cmp
lods
retf
ret
std
jmp
fcom
mov
(bad)
iret
and
jae
bound
fimul
dec
adc
ins
and
rcr
out
(bad)
outs
mov
pop
lock
loop
add
mov
out
xor
test
pop
fsub
mov
not
xchg
and
adc
or
fwait
mov
test
mov
xor
repz
push
out
mov
mov
jp
shl
cmovle
fst
adc
mov
icebp
add
outs
inc
sbb
and
hlt
fstp
xchg
mov
push
push
mov
jo
das
mov
push
(bad)
clc
jg
push
add
jecxz
or
xchg
sub
mov
mov
push
les
add
int
pop
cmps
addr16
jmp
imul
mov
ds
aaa
fidivr
enter
cli
inc
pusha
pop
jns
dec
in
cmp
push
add
fdivrp
xchg
inc
pop
xchg
push
outs
mov
pop
mov
sbb
mov
jo
movs
cmp
lds
cmp
int
jo
ins
mov
mov
sbb
jle
ret
sub
push
cld
dec
(bad)
gs
pop
jb
int
sub
mov
out
and
xchg
and
ds
push
out
xor
sub
iret
mov
movs
pop
fwait
test
dec
neg
mov
adc
pop
ja
stos
outs
xchg
and
add
shl
cmps
out
xor
imul
add
inc
mov
xchg
sub
dec
icebp
fidiv
sub
imul
dec
jo
jb
mov
cmps
xlat
pusha
es
lods
fmul
mov
push
mov
dec
jne
mov
das
jb
inc
add
mov
lea
sbb
ficom
aas
icebp
lds
push
cmp
outs
inc
int3
push
cmp
mov
movs
add
gs
sub
pop
push
push
(bad)
mov
sub
xchg
jbe
mov
rcl
xor
retf
das
les
pop
(bad)
sub
(bad)
dec
lock
ins
int
dec
cmc
xchg
mov
out
test
or
adc
nop
mov
sub
ret
push
jle
shl
mov
mov
mov
or
scas
mov
imul
xchg
inc
jl
test
fldenv
push
jb
ins
or
aam
sbb
add
jmp
mov
push
pusha
or
pusha
(bad)
mov
das
jnp
fsin
cmps
(bad)
in
sahf
dec
test
dec
into
and
stc
call
and
dec
mov
addr16
mov
sub
sub
mov
dec
mov
mov
pop
in
or
inc
lods
dec
or
jl
pop
movs
xchg
test
mov
push
inc
mov
mov
clc
push
pop
lods
push
shl
pop
and
lods
das
sbb
sub
inc
xchg
fmul
pop
shr
jne
inc
inc
daa
js
and
popf
push
ins
nop
dec
sub
dec
arpl
mov
jae
mov
(bad)
dec
mov
or
xor
fwait
mov
sub
jp
iret
jmp
leave
mov
sub
mov
adc
mov
shl
ficom
adc
and
mov
jns
jecxz
xor
scas
mov
nop
or
mov
pop
xchg
sub
outs
jecxz
mov
pop
jbe
adc
sbb
pushf
or
retf
sub
mov
xchg
repz
(bad)
fldenv
or
out
dec
xor
ins
cmp
(bad)
std
idiv
inc
pop
(bad)
sub
out
shl
jne
in
push
cs
add
adc
push
inc
cmp
cmp
sub
(bad)
(bad)
add
aad
or
(bad)
shl
shr
mov
stc
mov
imul
mov
(bad)
enter
repnz
xor
sbb
aaa
sahf
adc
mov
mov
xchg
and
jl
jl
mov
gs
add
jmp
les
pop
cmp
mov
ja
retf
mov
mov
out
sbb
ins
dec
int3
cwde
sub
mov
mov
mov
(bad)
mov
ret
int
cmc
dec
fldcw
xchg
xor
outs
xor
cli
stos
mov
mov
mov
cmp
or
(bad)
pop
dec
inc
gs
int
(bad)
fcomp
xchg
cmps
jg
shl
(bad)
ss
cld
test
jge
neg
in
add
mov
jg
mov
and
aas
fst
loopne
popf
sbb
lds
je
xchg
lock
clc
(bad)
jecxz
arpl
call
add
pop
int
dec
pop
jbe
sbb
xchg
pop
(bad)
mov
loopne
inc
and
rol
shl
gs
mov
sbb
dec
and
push
xor
fdivr
jecxz
ds
cld
inc
or
add
rol
fdiv
xor
je
mov
jle
lods
repnz
jmp
stc
(bad)
test
push
dec
jge
xor
jle
and
pop
pop
mov
rol
inc
mov
popf
pop
fwait
data16
xchg
loopne
and
adc
mov
js
jmp
lods
cmp
xchg
fstp
mov
pop
xor
jecxz
mov
js
js
ss
jp
or
xchg
push
sbb
cmp
fistp
push
loope
or
sbb
es
xor
dec
idiv
cmp
scas
fs
bound
stos
adc
jge
jbe
adc
loop
shr
sub
fisttp
data16
add
mov
pop
mov
ins
(bad)
ja
iret
push
jle
mov
lahf
call
and
sub
xchg
mov
mov
in
and
cwde
mov
dec
adc
test
out
mov
mov
mov
pop
ds
push
mov
push
mov
push
test
(bad)
mov
sub
lods
xor
sub
enter
in
mov
pop
retf
std
std
std
push
outs
ins
or
fadd
ss
xchg
stc
jle
imul
xor
movs
dec
cmps
jno
pusha
mov
push
aam
sub
(bad)
ja
or
add
jle
dec
rcr
aam
lods
rcr
test
jge
es
or
jne
sbb
xor
pop
movs
xor
mov
mov
dec
fnstsw
in
mov
jmp
ins
dec
fisttp
lock
(bad)
es
loop
xor
in
dec
and
xchg
pushf
jecxz
int3
push
loope
repnz
lea
inc
scas
ret
xchg
icebp
out
in
mov
gs
movs
and
mov
neg
sub
mov
stc
inc
mov
or
sahf
sub
fs
xor
mov
sbb
cmc
cli
cli
jo
mov
pop
adc
dec
dec
inc
pop
and
arpl
jecxz
inc
test
push
sub
shl
mov
mov
cmp
popf
or
jmp
and
test
inc
lods
call
or
clc
jmp
(bad)
adc
gs
je
popa
add
in
ds
cmp
aas
dec
inc
int
mov
xchg
mov
mov
enter
movs
cs
add
push
dec
and
dec
dec
stc
xchg
push
mov
dec
int
ja
cs
or
inc
bound
xchg
sbb
push
pushf
mov
sbb
sahf
cli
xchg
xlat
cmp
lods
mov
sub
pop
repnz
ins
int3
je
outs
outs
cmps
test
mov
mov
jp
test
loope
inc
cmps
jmp
xchg
cdq
sbb
jg
test
outs
xchg
outs
das
or
mov
jge
add
test
sbb
xchg
fidivr
and
(bad)
lods
cld
add
sub
fdivr
adc
aaa
pop
ficomp
inc
out
pop
out
in
adc
pushf
xor
xchg
inc
adc
xlat
pop
imul
push
std
xchg
or
xchg
jecxz
adc
mov
cdq
mov
call
call
jg
test
enter
jg
xchg
fsub
aas
fld
sbb
push
mov
push
je
mov
jmp
rcr
retf
pop
mov
mov
and
mov
and
aam
js
dec
fcom
push
repnz
hlt
inc
rcr
jb
ins
ret
mov
mov
movs
js
push
xchg
push
fdiv
sbb
outs
jecxz
lock
nop
and
aam
out
pmulhw
outs
inc
mov
or
jg
repz
dec
add
mov
mov
jne
jne
imul
shl
push
fisub
or
add
sub
push
gs
xchg
lea
retf
in
mov
push
test
inc
add
repnz
pop
mov
test
push
ja
cmp
mov
cmp
jo
shr
xor
push
and
ins
sbb
enter
mov
rcl
mov
jb
and
lods
inc
inc
pop
jbe
stc
dec
mov
sub
ins
(bad)
mov
sbb
mov
lock
jmp
aas
push
cmp
hlt
mov
mov
mul
sub
jne
dec
les
mov
ja
daa
outs
cmps
cmp
scas
xchg
jg
fucom
sub
push
jo
rcr
retf
out
popf
les
shl
add
push
xor
or
out
jmp
and
mov
mov
in
adc
(bad)
out
scas
mov
popa
jecxz
xor
loop
fwait
and
mov
jne
fisub
inc
ret
adc
jmp
iret
push
cmp
push
push
ins
jbe
xchg
pmulhuw
or
or
rol
xchg
inc
jg
dec
mov
push
lahf
fs
in
jns
fsubr
outs
pop
out
add
cmp
dec
sahf
jbe
jo
popf
jns
imul
mov
pop
ss
shr
or
mov
pop
call
pop
dec
sub
xor
and
imul
outs
(bad)
pop
mov
lods
out
sub
add
xchg
mov
add
pop
sub
bound
popf
jbe
pop
jmp
or
rcr
int
cwde
movs
push
stc
(bad)
fwait
ret
in
pop
mov
rol
movups
push
dec
mov
push
mov
pop
xor
xor
jnp
jnp
outs
scas
sbb
jnp
and
or
cwde
js
and
mov
dec
ret
test
in
stc
data16
push
mov
add
jnp
mov
sar
into
mov
xadd
xchg
mov
scas
dec
outs
addr16
mov
inc
cwde
cdq
mov
fstp
mov
int
and
or
sti
sub
xor
fnstsw
sub
rcr
stc
mov
es
sbb
repz
jae
nop
mov
jno
push
sbb
test
mov
push
fldcw
scas
add
add
jmp
adc
mov
xor
data16
sahf
popa
daa
loope
das
xchg
das
outs
push
mov
shl
js
shr
(bad)
mov
arpl
jp
push
inc
cmp
scas
popa
ins
and
adc
pop
test
aad
lea
and
add
add
or
pop
pop
scas
aam
pushf
cmp
dec
aam
adc
dec
push
jae
sti
dec
js
jg
jbe
cmp
and
mov
in
inc
push
shr
fist
(bad)
add
addr16
ret
int3
int
and
lods
pop
push
mov
cld
jb
cs
cmp
repnz
dec
cwde
int
mov
stos
loope
jb
dec
out
daa
mov
aam
rcr
mov
mov
jbe
sahf
mov
jecxz
jnp
sub
(bad)
xchg
adc
jmp
jns
sub
cs
jne
mov
pop
pop
lods
xor
fistp
or
and
xor
mov
inc
rol
xchg
pushf
repz
out
or
xor
push
(bad)
mov
xchg
loope
jle
aam
pop
mov
sbb
cli
cld
(bad)
or
ss
int
stos
daa
leave
dec
jle
jg
add
rcl
sbb
into
push
pop
rcr
fnstcw
(bad)
stc
xchg
(bad)
mov
jmp
pop
cmp
stos
je
cmp
push
jmp
cmp
mov
cmp
jae
pop
pop
xor
and
dec
sbb
cmp
adc
dec
xchg
pop
jecxz
repz
mov
movs
sbb
ficomp
inc
mov
xchg
loopne
scas
imul
dec
pop
mov
lahf
test
mov
and
fstp
mov
repnz
jp
push
jns
xor
out
test
scas
inc
cmc
cld
inc
xchg
sar
mov
mov
adc
mov
fxch
pop
pop
mov
arpl
int
std
mov
fidivr
cdq
ins
cs
sbb
sbb
jb
and
outs
jle
xchg
cmp
call
push
dec
mov
ds
lahf
mov
loop
dec
jno
pop
outs
mov
jo
mov
push
fmul
ds
outs
dec
ins
mov
mov
std
es
adc
sar
cmps
mov
or
and
pusha
dec
push
mov
cmp
jae
cld
je
mov
je
push
ins
mov
push
and
xchg
movs
mov
jmp
mov
add
and
add
movs
pop
mov
mov
rcr
out
add
jns
mov
lods
mov
sti
call
cmp
inc
pop
repnz
xor
inc
test
dec
sbb
fsubr
jg
mov
out
pushf
aaa
cwde
xor
retf
xchg
in
mov
mov
inc
(bad)
xor
movs
popa
push
int
xor
pop
push
add
jns
pop
outs
js
mov
add
or
mov
shr
loop
imul
mov
xor
pop
repz
push
js
(bad)
mov
retf
sbb
adc
hlt
or
pop
inc
mov
and
lahf
dec
xchg
fsub
in
xchg
pop
aas
cwde
xor
shr
jmp
xor
cmp
mov
pop
outs
into
lods
aaa
das
es
xchg
clc
pop
test
pop
test
jno
mov
fistp
xchg
mov
push
movs
in
pop
dec
scas
sar
adc
lods
movs
adc
lock
(bad)
pop
enter
dec
xor
inc
pop
in
int3
es
sbb
pop
mov
xchg
int3
xor
adc
pop
push
popf
movs
mov
dec
pop
push
std
sbb
or
cld
jbe
xchg
call
mov
jnp
call
out
jle
dec
or
sub
movs
dec
jge
bound
xchg
lods
push
lock
fild
and
mov
sbb
or
pop
mov
mov
das
inc
xor
dec
retf
ret
aam
sub
stc
fisub
mov
add
iret
test
mov
jmp
daa
icebp
ret
sbb
gs
into
aaa
jge
fs
out
xor
retf
mov
cmc
push
dec
ss
movs
fwait
test
hlt
adc
leave
cmp
fisub
fisub
cmp
rcl
popf
sti
aam
test
sub
xor
js
and
jnp
in
stos
dec
mov
mov
stc
sbb
or
stc
pop
sub
and
mov
adc
and
cmp
dec
cmp
(bad)
stc
inc
loope
cmps
out
jb
jge
mov
jo
cmps
push
xlat
and
add
and
stc
(bad)
mov
add
push
xor
add
je
adc
or
mov
sub
cmp
jno
jo
scas
je
mov
in
jecxz
in
xchg
adc
or
and
pusha
hlt
inc
loope
sub
icebp
and
test
aaa
sub
pop
aad
push
outs
dec
lea
mov
fldenv
mov
xchg
test
mov
pop
push
xchg
or
into
push
dec
das
xchg
js
push
xor
lods
cmps
pop
fidivr
pop
cdq
push
ficom
pop
xchg
mov
les
sub
jp
mov
frstor
xchg
fs
jg
mov
dec
push
mov
ret
loopne
add
mov
loop
bound
pop
cmp
lock
test
xchg
scas
or
push
or
pop
and
fstp
icebp
scas
and
iret
es
mov
xchg
or
test
and
scas
xchg
jo
adc
stos
out
xchg
movs
push
cld
cmc
sbb
dec
mov
push
jmp
jno
cs
fidivr
inc
jl
js
lea
ds
dec
stc
mov
out
pop
dec
pop
fistp
jno
dec
cmp
cs
dec
lods
add
fwait
add
pop
into
and
and
les
in
cmp
outs
pop
xor
out
das
(bad)
loop
pop
scas
fwait
out
inc
lods
push
test
jo
inc
(bad)
nop
sub
fcomp
mov
cmp
jb
pop
adc
jge
pop
push
or
outs
push
pop
and
repnz
mov
adc
dec
outs
bound
xor
or
cmp
sbb
movs
loopne
jne
xchg
xchg
les
mov
xchg
int
push
add
or
mul
ret
dec
(bad)
xchg
les
adc
push
cmp
and
repz
fbld
xor
fsubr
ins
loop
mov
cmp
mov
jns
(bad)
stc
sub
xchg
mov
xchg
mov
sbb
or
dec
jae
out
ficomp
in
mov
sub
inc
pop
and
push
popf
mov
pop
mov
not
in
call
sub
shr
mov
xchg
dec
ss
sub
jmp
xchg
gs
jmp
push
std
or
sub
rol
mov
out
repnz
pop
jnp
jmp
pop
push
jl
dec
xor
push
sbb
in
inc
fist
push
ret
add
sti
lods
lahf
push
stos
cmp
nop
loopne
xchg
int3
pop
shr
je
mov
out
inc
xlat
mov
xchg
mov
push
mov
pop
les
imul
out
or
push
cdq
lds
js
cs
data16
rcl
ja
cmp
mov
jmp
call
aad
inc
pusha
addr16
aas
adc
xchg
mov
and
test
sub
lods
out
mov
das
mov
in
inc
je
fwait
push
loopne
xchg
mov
xor
push
js
and
cs
jne
add
mov
cmps
and
out
in
add
xchg
add
cmc
arpl
popa
cli
inc
clc
fld
and
pop
pop
sub
sar
stos
pop
mov
jno
lea
gs
pop
stos
out
out
lods
pop
or
pop
xlat
cmp
push
in
or
sub
jb
repnz
fwait
mov
jl
dec
mov
xchg
fs
mov
mov
(bad)
popf
scas
jno
sub
inc
jbe
stc
sbb
(bad)
retf
in
mov
and
or
sahf
(bad)
loop
out
or
jmp
int
mov
adc
inc
xchg
and
movs
sub
imul
mov
fwait
add
sbb
iret
test
cmc
cs
or
mov
or
neg
(bad)
rcr
ja
xchg
shl
jbe
pop
and
pop
retf
scas
sbb
xor
stos
push
aas
mov
inc
hlt
push
std
push
jbe
test
mov
inc
arpl
mov
jmp
jns
in
pop
imul
fs
jb
cmps
xor
pusha
fisub
dec
stos
imul
call
push
sahf
out
ja
sub
sbb
mov
and
stc
push
icebp
test
lods
enter
inc
stc
imul
leave
les
and
push
test
xchg
pushf
mov
outs
add
ror
jo
ds
and
arpl
clc
jo
cs
jae
into
sub
call
scas
push
out
in
jne
push
jb
imul
push
in
shr
adc
xchg
out
test
dec
int
loopne
push
or
(bad)
aaa
cdq
mul
sbb
push
or
jmp
icebp
jl
pop
push
ror
or
std
ins
pop
shl
xchg
xchg
xchg
fcom
xor
dec
gs
adc
adc
aad
movs
rcl
mov
ins
pop
push
(bad)
call
mov
pop
inc
adc
jns
jmp
xlat
jae
adc
add
aaa
xor
clc
push
jo
xchg
sahf
mov
(bad)
sti
or
and
aas
dec
dec
test
ret
fld
cwde
cwde
(bad)
icebp
repnz
fst
sahf
retf
(bad)
xor
mov
push
int3
pop
sbb
and
or
push
pop
add
cmp
add
and
xchg
or
ror
mov
and
pop
cld
pop
inc
inc
popf
je
jns
jle
mov
jle
fistp
cmps
retf
cmp
ss
retf
jge
sub
mov
cmp
arpl
mov
pusha
jg
inc
dec
pop
dec
push
mov
or
mov
movs
sbb
cmp
xchg
out
test
call
(bad)
xchg
lds
push
dec
(bad)
cdq
mov
in
idiv
pop
lahf
stc
test
pop
sets
sub
mov
test
cmp
sahf
fldcw
sbb
ins
pop
or
mov
lahf
mov
aam
push
rcr
and
(bad)
or
inc
pushf
ins
inc
fwait
stos
ret
movs
repz
stos
xchg
cmc
cdq
sbb
int
test
dec
call
or
and
aam
adc
pop
or
sbb
outs
cmp
and
iret
aam
pop
sbb
ror
mov
adc
out
adc
pop
cld
mov
pusha
dec
in
adc
movs
or
(bad)
jnp
(bad)
dec
jbe
lods
fiadd
jne
adc
jecxz
sub
xchg
call
out
jno
fcomp
out
ins
mov
lea
add
sbb
retf
dec
cmps
inc
ja
mov
mov
mov
xchg
stos
(bad)
neg
fcom
jmp
jp
not
mov
ds
add
add
jae
or
test
mov
jmp
pop
jg
retf
push
js
push
and
mov
mov
pusha
fidivr
push
movs
test
pop
repnz
jecxz
or
or
mov
xor
aad
or
out
sbb
adc
cmp
fsub
shl
arpl
jns
xchg
das
daa
loope
mov
jnp
vmovapd
bound
sub
cwde
add
movs
(bad)
jmp
cmps
out
ret
adc
jo
arpl
fistp
les
dec
out
adc
jg
sub
pop
adc
xor
and
test
movs
lods
add
cmps
inc
inc
mov
add
out
rcl
or
push
out
(bad)
(bad)
xchg
mov
mov
call
bound
xor
(bad)
call
into
ficom
inc
dec
xlat
scas
aaa
ret
bound
ja
inc
fadd
out
sbb
bnd
dec
cmp
pop
jle
mov
arpl
mov
mov
mov
sbb
sbb
pop
in
sbb
(bad)
jmp
scas
std
repnz
lods
mov
js
retf
ja
adc
sar
fucomi
mov
mov
xchg
loope
rol
dec
push
gs
cmp
xor
pop
sahf
das
stos
into
shl
sar
stos
pusha
jns
js
(bad)
pop
lock
mov
fsubr
dec
das
inc
and
(bad)
clc
repnz
(bad)
cmp
xchg
jp
cmp
ins
fisub
adc
and
rol
xor
jl
and
test
pop
pop
add
mov
xchg
jbe
dec
mov
fst
push
jle
mov
mov
lahf
xchg
sub
std
fist
pop
sbb
mov
sbb
call
push
repz
cmp
jl
das
dec
call
push
je
shr
cmp
retf
sbb
scas
xor
int
sub
jmp
mov
xor
fnstcw
and
movs
mov
call
adc
aad
dec
cli
xor
test
adc
inc
xor
dec
mov
add
out
bound
dec
cmp
int
sbb
mov
xor
mov
repz
or
scas
xor
pop
jae
outs
add
mov
xchg
mov
and
scas
int
fisttp
fiadd
jo
not
mov
(bad)
fild
adc
les
mov
sbb
mov
inc
sub
inc
pop
scas
fcmove
in
sbb
add
sbb
add
mov
or
mov
in
add
stos
int
ficom
outs
jb
pop
and
cld
sbb
add
arpl
pop
movs
pop
inc
mov
pop
sub
xor
add
dec
test
mov
push
jns
sub
mov
ins
lds
lods
data16
xor
es
popf
jecxz
dec
push
retf
pop
ds
pusha
jns
cmps
push
add
pop
mov
mov
call
enter
sbb
dec
mov
mov
ja
inc
mov
inc
shl
dec
ror
lea
repz
loopne
cmp
push
sub
popf
icebp
mov
or
mov
cmp
xchg
stos
nop
imul
mov
(bad)
sbb
mov
pop
mov
push
sbb
pop
mov
jns
js
aas
js
xor
xchg
repz
lods
pop
mov
stos
js
jge
or
mov
dec
add
leave
(bad)
lock
mov
int
xor
mov
sub
sti
mov
loope
sbb
ror
shr
gs
mov
add
or
push
lods
push
inc
fs
or
or
jp
std
jo
jae
(bad)
push
push
xchg
cmp
ins
xchg
add
int3
push
mov
sar
push
xchg
scas
pop
sar
add
mov
sahf
push
mov
je
test
inc
mov
push
cmps
outs
mov
ds
(bad)
hlt
xor
(bad)
lods
push
jne
fcmovnbe
push
outs
imul
pop
dec
xchg
ss
outs
stos
leave
xchg
lea
sub
mov
jae
popf
stos
das
add
push
popf
cdq
out
cli
in
mov
sahf
popf
loop
outs
repz
outs
or
scas
adc
jnp
aaa
xchg
lods
cs
add
jl
adc
out
les
add
clc
sub
into
lods
mov
mov
stos
mov
(bad)
pushf
cld
and
cs
mov
test
lea
mov
sbb
lock
push
pop
std
pop
les
leave
push
test
adc
and
movs
(bad)
adc
arpl
clc
repz
jmp
mov
into
sbb
and
loop
in
push
aad
cmp
cld
push
(bad)
test
and
std
rcr
test
imul
mov
push
test
into
adc
cvtps2pd
aam
jne
jge
sti
scas
test
cmp
sti
jecxz
mov
dec
retf
dec
cdq
movs
sub
adc
ret
popa
sub
mov
inc
sti
ror
fistp
imul
hlt
adc
int3
stc
dec
arpl
jmp
or
jge
xchg
mov
movs
mov
lds
mov
aam
sbb
mov
adc
out
inc
dec
test
sub
cdq
jecxz
adc
pop
je
stos
push
fs
imul
mov
pop
scas
rol
retf
mov
sbb
pop
arpl
sbb
inc
mov
fisubr
cmps
ret
fisubr
lds
call
xchg
jne
push
push
xchg
add
mov
pop
pop
push
cmp
xchg
mov
cmp
xlat
mov
mov
or
ret
mov
pop
pop
add
add
sti
and
cmp
in
cli
adc
adc
ja
or
das
push
lds
mov
cmp
push
mov
lods
clc
out
repnz
inc
add
ins
dec
cmp
ss
shl
xor
loop
cld
and
rol
ficom
add
sbb
nop
push
mov
dec
dec
jns
and
dec
cld
adc
sub
shl
scas
and
push
cmc
shr
sahf
cmps
jnp
sar
int
xchg
ret
xor
cmp
or
dec
and
cmps
dec
adc
std
jb
icebp
or
loope
out
sti
push
jge
mov
std
xor
xor
movs
cmovns
xlat
shr
arpl
imul
and
push
sub
outs
and
mov
shl
popf
xchg
inc
dec
gs
mov
sar
adc
icebp
inc
fisub
dec
loope
or
mov
sub
mov
loope
inc
into
pop
stos
push
mov
adc
cmp
jg
inc
dec
sub
and
xchg
xchg
retf
inc
loope
mov
fcomi
pop
int
jecxz
cmps
call
jge
js
adc
fimul
fadd
cmp
xlat
icebp
cld
adc
ja
fidiv
pusha
cmp
lods
dec
mov
mov
cs
dec
out
jmp
pop
mov
xor
pop
sbb
pop
xlat
pop
inc
pop
or
addr16
mov
cmp
(bad)
mov
outs
mov
xchg
push
je
ret
pusha
mov
inc
push
mov
mov
xor
mov
mov
mov
je
jmp
mov
inc
daa
pop
ss
cwde
sbb
in
adc
inc
mov
int3
lods
gs
lds
sub
mov
sbb
push
sbb
repnz
loopne
pushf
jnp
and
xor
push
rcl
mov
xchg
jae
xchg
inc
cmp
pop
jl
or
and
ret
pop
adc
dec
outs
mov
repnz
in
mov
jns
pusha
ja
cld
and
or
out
fcom
daa
jl
dec
jb
jbe
out
jge
push
mov
cmc
das
mov
mov
and
aas
mov
stc
push
aam
pushf
jmp
cmp
cld
add
jmp
and
sahf
add
sbb
cld
cwde
jmp
push
mov
push
and
jp
mov
mov
xchg
xlat
lahf
xor
jmp
inc
jge
icebp
push
adc
push
out
clc
inc
dec
fnstsw
pop
xor
cmp
and
mov
(bad)
test
daa
xor
or
mov
loope
mov
lahf
push
cmp
or
jae
xchg
mov
out
gs
in
sbb
mov
xor
int3
xchg
cld
leave
enter
mov
hlt
lods
neg
xor
add
dec
or
mov
add
add
pop
scas
mov
fidiv
sbb
sbb
jae
stos
mov
sub
clc
adc
lds
inc
outs
cmp
and
and
or
gs
mov
mov
(bad)
xchg
pop
in
cli
jl
hlt
sar
daa
adc
je
xchg
shl
imul
dec
out
pop
fnstcw
push
xchg
sub
les
scas
mov
inc
pop
cld
in
(bad)
xor
push
retf
cmp
in
dec
push
cwde
jnp
rol
mov
add
cld
psadbw
mov
ror
call
ret
fadd
jg
sbb
xchg
cmp
int3
push
mov
icebp
in
sbb
push
lahf
mov
imul
sbb
inc
mov
jo
push
fidiv
add
stos
push
mov
xchg
and
jns
lea
(bad)
sbb
cmp
push
retf
scas
sbb
fcom
movs
imul
dec
int3
jno
adc
jp
ins
test
xchg
clc
enter
out
mov
out
sbb
sub
call
push
jnp
adc
(bad)
cmp
jmp
cmc
jl
xor
xor
imul
dec
shr
stc
test
in
add
test
aas
pushf
popf
aas
retf
or
in
cmp
xchg
in
ds
pop
loop
mov
sub
push
xor
fsubr
fild
xlat
xchg
call
inc
aam
test
les
xchg
push
(bad)
popf
call
or
jo
das
jmp
in
pop
push
das
je
in
push
scas
xchg
add
or
mov
pop
test
sbb
not
dec
(bad)
push
mov
jp
retf
arpl
cmps
mov
cld
aad
dec
sbb
retf
mov
ins
ins
retf
xchg
call
repnz
lods
sub
xchg
cmps
popw
dec
dec
dec
xchg
xor
mov
push
outs
or
sub
pop
push
and
addr16
hlt
imul
fldcw
and
sahf
pusha
pop
ret
sub
out
inc
cmp
pop
dec
cmp
outs
sbb
xor
retf
test
js
adc
or
(bad)
mov
fs
pusha
cld
in
inc
push
pop
out
ret
jne
ficomp
xchg
push
fs
dec
pop
sbb
es
retf
xor
mov
cmp
test
pop
cs
pop
xor
aam
mov
dec
call
push
pop
hlt
xor
inc
(bad)
leave
ss
mov
data16
fsubr
pushw
icebp
xchg
rol
xchg
pusha
and
jnp
ret
jne
hlt
aaa
mov
shl
pop
mul
jbe
fiadd
jae
pop
cmps
pop
ss
es
jle
push
(bad)
jmp
adc
fst
hlt
push
dec
(bad)
sahf
pminsw
mov
cmc
jg
sbb
(bad)
mov
fst
bound
popf
push
cmp
and
call
push
jle
add
stos
ret
lock
xchg
jnp
mov
gs
loop
(bad)
sbb
pop
sub
jl
inc
ins
adc
inc
nop
pop
xchg
adc
mov
xchg
and
push
add
cmp
call
adc
xlat
push
stos
xchg
or
xor
xchg
popa
(bad)
cmc
xor
repnz
or
fs
fimul
jo
test
in
bound
imul
mov
mov
jmp
jmp
cwde
mov
mov
add
scas
addr16
popa
sub
jnp
jns
sbb
pop
or
adc
pop
out
les
in
mov
xlat
adc
cmp
adc
cmc
clc
xchg
adc
push
sub
mov
jo
sbb
ret
icebp
mov
addr16
or
mov
pop
mov
dec
jge
xchg
jp
loop
sub
dec
cmps
add
ins
mov
jmp
ins
pop
pop
aam
xchg
dec
ret
sbb
int3
mov
imul
or
dec
call
test
rcr
or
scas
jmp
xchg
pop
mov
dec
and
cmp
(bad)
addr16
in
(bad)
sub
push
fcmovb
test
xchg
daa
ret
mov
in
lds
sub
fstp
lods
je
or
ds
cmp
dec
in
push
or
fcmovu
jle
pop
ss
test
sbb
cwde
or
sar
loope
fsubp
push
sbb
(bad)
mov
or
add
cmp
sub
popa
pop
inc
(bad)
cs
sti
cmp
pop
mov
aas
add
xor
out
leave
add
movs
mov
jne
push
jns
adc
imul
and
xor
inc
loop
sbb
imul
xchg
repnz
cmp
mov
mov
xchg
sbb
cmp
out
out
pop
or
sahf
push
sbb
(bad)
stc
mov
scas
xchg
pop
mov
sub
xchg
jmp
int
leave
mov
jge
ss
jmp
iret
adc
mov
sbb
out
jl
mov
adc
(bad)
shl
iret
or
cmp
cmp
int
fadd
or
cmc
and
xchg
sub
cmp
lods
gs
ins
mov
test
or
outs
not
cmp
mov
cmp
out
push
aam
or
mov
mov
mov
adc
fs
fcom
sbb
fcom
jmp
ja
sbb
ret
call
les
fldcw
mov
or
dec
fiadd
repnz
(bad)
dec
shr
sbb
mov
jg
pop
stos
mov
mov
loope
mov
fdiv
sbb
inc
in
jecxz
aad
les
or
or
stos
jo
aaa
icebp
add
out
mov
js
inc
pusha
das
or
pop
loop
xchg
scas
cmp
jmp
das
mov
xlat
or
clc
test
push
sub
retf
scas
or
(bad)
mov
inc
std
pop
mov
jne
and
popa
lods
cmp
dec
(bad)
xchg
xchg
sbb
or
jg
sub
dec
adc
outs
inc
jae
out
lea
ins
ret
js
retf
outs
dec
mov
mov
je
xchg
mov
imul
adc
or
ret
jge
inc
fstp
dec
xor
push
sbb
and
push
adc
xor
popa
movs
cs
jb
sub
cmc
sbb
lods
ss
scas
je
dec
and
cmp
add
fbstp
add
push
dec
pop
popf
bound
cdq
cmp
inc
sbb
in
or
and
stos
sub
pop
fisttp
jno
or
stos
or
iret
add
xor
inc
pop
popa
(bad)
push
pusha
fs
rol
aad
sub
fnstsw
bound
lahf
rol
push
adc
js
and
xor
sbb
xor
enter
pop
je
jmp
cli
data16
sub
and
jl
jle
xlat
popf
mov
add
popa
popa
(bad)
cld
mov
cli
push
jne
push
mov
leave
mov
dec
xor
pop
pop
mov
jecxz
cmp
pushf
sub
sbb
icebp
add
sub
iret
inc
int3
mov
adc
jecxz
xchg
test
ret
sub
mov
rcr
aas
retf
xchg
push
cmps
sahf
jne
retf
pop
add
mov
in
and
jmp
jno
cmovge
xor
mov
gs
add
and
dec
clc
mov
or
inc
das
jns
mov
dec
pushf
xor
inc
sub
mov
(bad)
dec
gs
sbb
std
(bad)
pop
xor
mov
or
xchg
scas
ins
sar
mov
repz
iret
mov
mov
mov
scas
dec
enter
lahf
and
and
outs
cmp
xchg
test
mov
adc
dec
mov
div
je
test
cmp
add
mov
clc
push
xor
inc
mov
dec
fidiv
inc
mov
icebp
cwde
inc
dec
mov
jge
xor
test
loopne
mov
sub
enter
jecxz
aam
xchg
lock
lock
cs
ds
jbe
sahf
or
jb
push
mov
lods
hlt
clc
fsub
(bad)
pop
mov
movs
movs
adc
cmps
imul
push
imul
int3
int3
mov
dec
mov
sbb
ficom
jno
xor
test
push
aas
repz
(bad)
and
xor
push
(bad)
imul
(bad)
ins
in
or
aas
jnp
cmp
retf
imul
or
stc
pop
cmc
call
popa
mov
inc
or
jno
retf
pop
xchg
adc
in
xchg
pop
pop
add
add
repz
dec
(bad)
not
test
jge
enter
icebp
adc
fimul
(bad)
fcom
dec
pusha
ret
sbb
ins
dec
iret
pop
dec
iret
mov
push
out
aam
aam
iret
loope
aaa
jb
pop
pop
jae
call
jmp
push
push
sti
fnstsw
je
mul
sbb
fs
mov
push
mov
aad
lock
stc
jmp
inc
cwde
sar
dec
xchg
sbb
mul
dec
call
cwde
sub
rcl
cmp
lds
jmp
idiv
lds
adc
sti
test
ret
or
jecxz
dec
push
ret
inc
or
in
outs
add
inc
xchg
cmps
adc
mov
out
or
mov
retf
call
daa
dec
aad
mov
sub
or
cmps
fild
pop
sbb
mov
mov
ror
add
pop
push
cmps
pop
ins
and
fdivp
mov
popa
push
pop
shr
inc
retf
dec
pop
push
in
and
mov
lock
pop
lock
mov
mov
or
std
fst
adc
cs
or
gs
fist
jno
(bad)
inc
test
adc
cmp
jecxz
pop
popf
mov
icebp
ror
mov
loopne
mov
shr
jge
adc
jnp
loopne
int
icebp
movs
pop
inc
mov
push
outs
stos
push
or
fadd
pop
xchg
mov
sahf
push
es
and
imul
mov
inc
push
sbb
and
and
les
mov
mov
(bad)
jne
and
mov
mov
add
sbb
(bad)
nop
dec
push
shr
or
outs
loope
sub
inc
ja
and
mov
loope
fmul
enter
outs
dec
jno
call
retf
sbb
test
not
(bad)
std
push
clc
and
loopne
daa
lea
mov
outs
jmp
mov
dec
jne
es
icebp
pop
mov
mov
not
repz
les
adc
xlat
scas
rcl
push
xlat
lods
loop
cmp
fbstp
je
pop
popa
mov
jecxz
and
mov
cmps
dec
arpl
loopne
out
outs
test
popf
retfw
dec
mov
mov
addr16
lea
push
pop
push
inc
mov
(bad)
rcr
mov
loop
or
in
pop
jne
dec
sbb
icebp
test
in
sbb
aam
sub
add
shr
pop
or
pushf
sbb
dec
mov
mov
in
jne
gs
sbb
sti
pop
inc
jno
or
in
cmps
rcr
xor
mov
stos
cmp
fs
arpl
pop
dec
jle
mov
mov
sub
mov
bound
cdq
shl
mov
test
inc
fist
(bad)
mov
mov
sar
das
jbe
(bad)
jg
xchg
xchg
mov
(bad)
or
dec
inc
mov
fsubp
cmp
imul
out
dec
mov
dec
inc
pop
and
(bad)
adc
mov
add
sbb
mov
pop
jb
push
push
jecxz
jle
pop
pop
sbb
and
(bad)
mov
xchg
add
adc
popf
jae
and
icebp
xor
xor
stc
int
scas
jmp
(bad)
fist
sbb
mov
stos
mov
aaa
push
(bad)
mov
leave
cs
mov
inc
push
pop
out
push
in
jo
jns
ins
push
sahf
or
jge
std
xlat
jmp
mov
jle
lock
inc
loopne
(bad)
push
inc
pushf
sub
ja
fldenv
rcr
push
mov
mov
aam
push
cmp
test
mov
xlat
test
ss
(bad)
repz
sbb
stc
rol
mov
push
cmp
jg
bound
push
adc
mov
stos
mov
ds
push
je
pop
mov
mov
xor
fisttp
stc
xor
cmps
enter
inc
xchg
mov
xor
retf
and
(bad)
dec
lds
push
ja
add
and
mov
rcl
pushf
inc
je
mov
jmp
add
mov
repz
pop
cmp
add
jb
jmp
adc
mov
cmp
imul
repz
or
test
sbb
pop
push
mov
shr
mov
pop
sub
in
shl
xchg
arpl
aas
xchg
pop
xor
scas
jp
add
frstor
push
es
dec
popa
add
push
dec
inc
lock
adc
adc
(bad)
movs
inc
dec
shl
sbb
or
iret
mov
push
movs
add
mov
mov
push
mov
push
jle
shl
mov
imul
xchg
and
xchg
test
gs
test
push
pushf
cmp
retf
pop
inc
dec
dec
call
loopne
dec
shl
jmp
imul
mov
js
fimul
(bad)
hlt
adc
add
in
mov
pop
inc
mov
shl
sahf
push
xor
imul
lods
and
fnstenv
fnstcw
cdq
pop
lods
imul
fwait
out
sbb
mov
cmp
sti
pop
xchg
adc
inc
(bad)
out
cdq
jo
mov
out
and
inc
or
sbb
xchg
inc
pop
mov
js
push
outs
sar
jo
jge
inc
add
xchg
enter
fmul
add
or
mov
lds
push
mov
das
lock
push
mov
(bad)
inc
ins
push
test
pop
mov
es
pop
aam
push
or
test
ds
sbb
setl
fmul
inc
das
cmp
inc
inc
xchg
out
fs
sti
sbb
or
mov
leave
bound
gs
fimul
stos
sub
xchg
movs
cmp
lea
ja
in
ja
pop
mov
rcl
cmps
inc
xor
movs
inc
push
jg
dec
sbb
bswap
mov
adc
out
xor
mov
or
cmp
jb
data16
stos
loop
add
fs
or
sbb
mov
aas
test
out
iret
mov
in
pop
mov
or
cmc
dec
stos
retf
mov
ret
call
mov
add
es
adc
adc
add
sbb
and
cmps
clc
dec
das
mov
cmc
int
js
daa
and
jae
or
mov
or
retf
lahf
jmp
pop
mov
pop
or
mov
add
push
aad
std
ret
pop
fisub
jg
in
ficomp
movs
cmp
push
repnz
(bad)
retf
shl
add
mov
sbb
push
clc
scas
lea
in
push
add
or
icebp
sub
sub
iret
push
cmp
push
mov
inc
cmp
call
pop
popf
inc
cmp
push
out
jb
es
mov
mov
sub
out
fst
push
sbb
pop
aas
retf
lock
sbb
gs
mov
retf
mov
add
icebp
loopne
mov
sbb
jnp
fadd
inc
jl
std
arpl
scas
fbld
fild
icebp
xchg
xchg
jg
add
add
adc
movs
scas
mov
cdq
push
scas
mov
xor
nop
jno
mov
inc
call
jno
xlat
or
mov
adc
xor
cmps
retf
shr
scas
xor
pop
or
or
cmc
xor
xor
mov
not
test
pop
test
jae
sbb
aaa
ficom
jl
pop
je
sahf
push
pop
xchg
adc
jl
sbb
inc
and
repnz
mov
push
push
push
sub
mov
aaa
lea
jb
repnz
into
and
adc
test
(bad)
fisttp
or
sti
ds
sub
pop
je
sub
test
fiadd
adc
sbb
mov
xor
push
or
or
bound
mov
sbb
idiv
adc
stos
shl
cmp
cmp
add
xchg
and
dec
outs
enter
push
hlt
clc
leave
retf
xchg
push
mov
mov
fucomp
ficom
lock
dec
aas
jb
ins
hlt
push
inc
sbb
outs
dec
shr
add
sbb
ins
or
imul
shl
mov
push
xchg
arpl
and
rol
push
iret
fcmovu
mov
dec
jle
fdivr
aas
adc
mov
stos
repz
push
mov
inc
jp
(bad)
stos
xchg
xlat
pushf
sahf
out
mov
mov
jge
je
xchg
mov
inc
xor
cmp
mov
adc
(bad)
in
jo
or
sbb
aas
fcomp
cli
shr
xor
jle
dec
repz
popf
cmps
ds
mov
push
inc
ret
pop
lahf
loope
cmp
sub
mov
sub
mov
jge
in
push
jno
icebp
in
adc
out
test
ins
imul
jp
sub
pop
lahf
inc
push
(bad)
jp
inc
add
or
scas
or
mov
cmp
and
push
cwde
shld
or
outs
arpl
scas
mov
lods
xor
in
jmp
cmp
sbb
cli
pop
fdiv
ss
js
xchg
xchg
shl
rol
(bad)
stc
xor
out
sbb
or
popa
sub
mov
push
iret
sbb
imul
pop
cli
pop
lock
cdq
cmp
fs
pop
xchg
mov
sbb
int
std
jnp
repz
mov
jge
xor
mov
adc
mov
dec
les
pop
scas
mov
ret
add
dec
aas
add
js
aam
std
(bad)
pop
stos
dec
cs
add
push
movs
lock
push
adc
ret
hlt
test
(bad)
jecxz
xchg
xchg
loop
test
mov
pop
or
sbb
sub
push
push
out
arpl
mov
mov
leave
or
retf
push
je
and
mul
test
mov
arpl
adc
dec
(bad)
mov
cli
leave
and
sbb
mov
cs
add
push
fbld
add
push
call
jmp
aam
pop
push
idiv
mov
test
jne
das
(bad)
call
sbb
inc
(bad)
sbb
dec
pop
call
mul
cmp
cmp
rcr
pop
jle
mov
popa
icebp
dec
xor
clc
or
lods
mov
fwait
aam
(bad)
jb
xchg
xor
les
daa
or
jmp
dec
bound
gs
or
sbb
pop
mov
leave
jp
call
sub
hlt
or
jge
cmps
push
call
out
fsubr
jcxz
(bad)
dec
push
lahf
test
nop
push
pop
in
mov
xor
and
cmps
sub
rsqrtps
sbb
sub
pop
loop
pop
and
fcmovbe
stc
into
leave
mov
inc
(bad)
in
stos
stc
inc
jbe
js
push
add
jge
(bad)
out
std
(bad)
aas
pop
and
aaa
jmp
or
jne
scas
or
enter
in
push
movs
and
xchg
add
jne
(bad)
data16
xlat
je
cmp
adc
push
je
shl
jle
mov
fcom
imul
cwde
fnstenv
or
icebp
add
xchg
xchg
xor
fcom
push
out
movs
shl
rcl
mov
jno
dec
imul
jmp
inc
out
addr16
(bad)
imul
gs
mov
popa
fsubr
mov
imul
cmps
loope
mov
int3
xchg
into
jmp
std
retf
jne
int3
sti
cmps
jecxz
add
jmp
sbb
add
xchg
mov
sti
(bad)
xlat
pop
enter
sti
cmp
(bad)
xor
setbe
pop
push
or
xlat
sub
outs
lds
xlat
es
push
fcomp
mov
shr
std
mov
rcl
popf
or
sbb
aad
jne
cmps
or
jmp
pop
jecxz
and
sti
fmul
cmps
adc
loop
dec
jl
ror
jno
push
xchg
(bad)
imul
mov
or
add
sar
dec
pop
inc
or
cmp
mov
fs
push
cdq
add
sbb
out
shl
repz
mov
lea
add
data16
xlat
fs
out
mov
add
and
xchg
inc
imul
ror
js
push
jb
mov
fs
in
sub
dec
xchg
xlat
jg
aas
aaa
mov
pop
stc
repz
mov
ins
mov
fmul
sar
and
jle
aas
in
cmps
call
mov
xchg
cmps
pop
shl
adc
xchg
dec
cmp
push
nop
lahf
jg
cs
jecxz
cmp
sbb
test
mov
mov
jbe
lahf
(bad)
loope
xchg
mov
icebp
mov
push
jns
and
pop
cmp
jmp
imul
dec
jl
mov
push
and
or
mov
xchg
pop
adc
jecxz
sub
push
xchg
rol
dec
or
mov
add
and
xchg
sar
rcl
dec
push
ja
(bad)
mov
lods
dec
fimul
out
sbb
and
jecxz
enter
ror
fsub
and
mov
scas
xor
or
aad
cld
xchg
xchg
cmps
jg
jo
retf
mov
and
jmp
outs
xchg
data16
popa
xor
dec
cmc
arpl
stos
sub
mov
push
and
mov
arpl
int
inc
mov
repz
aad
sti
aas
mov
pop
push
mov
fist
call
adc
and
mov
jle
sub
mov
out
call
into
cmp
aad
jge
jne
lods
xor
sub
push
push
pop
es
jb
sub
lahf
xor
inc
pop
(bad)
in
lahf
cmp
add
cs
dec
xchg
push
dec
data16
repnz
scas
ss
dec
jns
pop
lods
jle
and
and
gs
test
mov
dec
jmp
jmp
mov
pusha
push
(bad)
(bad)
pop
dec
jl
jle
data16
icebp
jg
inc
rcr
pop
cmp
mov
sbb
imul
mov
sub
add
add
sub
pop
adc
cmp
dec
(bad)
js
xchg
ja
mov
push
or
pop
imul
std
lock
pusha
dec
ret
fwait
dec
rcl
push
pop
sbb
(bad)
imul
shr
xor
ror
lahf
ret
mov
(bad)
daa
scas
jecxz
add
std
scas
(bad)
gs
push
xchg
dec
mov
test
cmc
inc
scas
push
lock
cli
fstp
jb
fld
jl
pushf
xor
jbe
xor
jae
xchg
jb
and
sbb
pushf
sbb
lahf
shl
in
enter
pop
popa
repz
(bad)
lahf
jmp
nop
hlt
xor
dec
call
jge
inc
push
mov
in
dec
jle
ins
ror
repz
jl
mov
sbb
jmp
cld
xlat
call
jb
cmp
mov
push
mov
adc
and
mov
enter
js
sti
xchg
mov
xor
jmp
idiv
cs
in
add
adc
or
repnz
adc
cmc
sub
loope
mov
adc
out
pop
push
in
cmp
push
xor
push
mov
xchg
xchg
sub
cmp
mov
push
or
sbb
ins
dec
xor
cmp
dec
push
outs
and
pop
jb
xchg
sbb
adc
jmp
lahf
fisubr
das
imul
dec
pop
jecxz
fwait
dec
pop
clc
cmp
dec
xchg
fdiv
in
adc
xchg
jmp
dec
cld
adc
xchg
jmp
xor
cmps
and
stos
xlat
sbb
adc
rol
sub
retf
(bad)
call
div
or
(bad)
xchg
in
add
push
mov
lahf
xor
jge
(bad)
mov
sub
out
push
icebp
xor
scas
cli
add
sbb
in
out
xor
push
cmp
(bad)
jge
(bad)
jge
dec
jmp
mov
popa
pusha
sub
cmp
aaa
mov
enter
and
or
push
pop
aaa
arpl
xchg
or
repz
cmp
sbb
push
mov
dec
mov
(bad)
jbe
out
lods
or
daa
cwde
frstor
sub
std
sbb
jecxz
jae
xor
push
mov
sub
fst
or
ss
jg
adc
xor
and
rdtsc
mov
jnp
sub
lds
dec
cmps
pop
data16
pop
out
add
icebp
les
fadd
into
std
fwait
imul
jmp
aad
cmp
rcr
adc
in
ret
aam
fistp
push
movs
imul
cs
(bad)
mov
sbb
in
xchg
(bad)
mov
pop
jl
cmp
rcl
lods
shr
sbb
xchg
inc
fs
fild
das
or
jns
cdq
add
mov
cdq
add
or
faddp
in
jno
sar
sahf
and
jae
pop
and
addr16
xchg
inc
xchg
xchg
out
push
hlt
movs
test
sub
cmc
leave
scas
dec
pop
mov
push
std
sbb
jmp
inc
les
ds
into
call
dec
and
mov
(bad)
mov
loop
mov
pop
push
mov
ret
call
das
xor
into
fsub
add
(bad)
dec
in
cmc
repnz
xchg
jmp
mov
dec
mov
mov
mov
mov
lahf
test
mov
fadd
add
or
push
mov
adc
push
xor
nop
push
push
sbb
loope
out
test
out
push
js
and
xor
test
mov
inc
std
mov
mov
in
mov
mov
dec
pop
push
test
xchg
xor
xchg
lods
cmp
push
daa
mov
pop
cmp
pusha
jnp
aaa
mov
scas
mov
aam
mov
neg
dec
in
out
pop
popa
ins
pusha
dec
data16
mov
inc
repnz
leave
daa
js
into
shl
in
jae
stos
mov
repz
jae
pop
lods
mov
jbe
or
pop
call
pop
jmp
push
cmps
sbb
push
xlat
cmps
sub
popf
sub
mov
daa
das
adc
aas
in
mov
pushf
scas
cli
int
sbb
xchg
adc
test
ret
jmp
dec
push
jne
add
es
retf
pop
repz
push
and
push
clc
push
dec
pushw
test
inc
adc
shr
popf
xchg
retf
jle
ins
or
dec
and
adc
(bad)
pop
es
dec
cs
outs
jns
arpl
cs
aas
out
pop
(bad)
fucom
sub
mov
jno
cmps
(bad)
ror
jno
or
mov
pop
icebp
xor
add
or
(bad)
loopne
pop
stos
or
shl
mov
fcomp
popa
cmp
jae
cld
cmp
stos
fstp
jecxz
inc
lds
imul
xor
pop
adc
frstor
mov
push
xchg
mov
dec
out
sub
das
push
jbe
push
rcr
retf
outs
mov
push
cs
cdq
push
sbb
rcl
sub
xchg
adc
or
push
cmp
cmp
add
inc
jp
push
mov
out
ss
pushf
push
popf
fadd
sti
loope
sbb
popa
imul
xchg
push
iret
mov
sub
xchg
arpl
leave
test
sbb
shl
inc
ds
cmps
retf
popa
or
jge
mov
into
push
sub
test
pop
out
inc
mov
jmp
pusha
stc
in
and
or
xlat
enter
xor
and
xor
mov
xchg
push
fisttp
xlat
sbb
lods
mov
pushf
fcmovnbe
loop
ins
stos
pop
mov
cmc
inc
or
shl
dec
or
inc
outs
or
adc
aad
add
inc
dec
std
mov
sar
adc
sbb
or
xor
jno
and
xchg
jns
loopne
pop
addr16
fsub
jmp
ret
cmp
and
dec
xchg
pushf
lods
ret
das
inc
sub
pop
outs
std
fwait
test
mov
ins
pop
fstp
cdq
sub
retf
inc
mov
or
aad
mov
push
outs
ficomp
inc
inc
ins
cmp
ret
daa
adc
dec
fnstsw
adc
std
cmps
and
dec
push
scas
rol
xchg
test
out
and
sbb
cmp
adc
stos
mov
cmps
pop
adc
daa
xor
imul
fwait
sub
dec
push
dec
dec
sub
sub
lock
push
mov
movs
mov
les
outs
iret
leave
adc
cmp
mov
jo
mov
fwait
enter
inc
stos
cdq
fstp
xor
ja
imul
jmp
cwde
daa
mov
aam
jns
mov
shr
sub
repnz
adc
stos
addr16
in
out
mov
retf
imul
aam
repz
popa
repnz
(bad)
addr16
pop
mov
das
or
lods
aaa
fnstsw
and
pop
inc
das
adc
shl
xor
dec
cmp
mov
pop
(bad)
enter
lahf
sub
mov
fbld
xchg
sbb
adc
jge
mov
xchg
xor
fstp
pusha
inc
(bad)
mov
and
mov
add
out
or
dec
bound
add
(bad)
mov
xor
or
mov
gs
pop
adc
fadd
sub
call
or
retf
lahf
cmps
outs
test
lods
movs
ss
lods
arpl
or
icebp
test
cmp
lock
stos
pop
push
pop
cmp
cmps
cld
dec
lock
xor
leave
mov
stos
out
in
push
sar
add
lea
fcom
es
cwde
add
shl
hlt
sub
or
inc
sub
or
add
xchg
in
push
xchg
stos
popf
and
cmp
sub
and
xchg
int3
ins
inc
xchg
loop
jbe
repz
mov
xchg
fdivr
ins
push
sub
pop
push
sahf
test
xchg
sahf
push
jecxz
js
push
cdq
push
rcr
lock
pop
lods
cmc
push
jno
mov
daa
cmps
pushaw
int
add
push
and
sbb
and
cmp
pop
adc
jae
into
xor
xor
ja
mov
jo
jmp
test
xchg
cdq
sub
push
ret
adc
sbb
cmp
bound
and
(bad)
xchg
movs
(bad)
js
clc
out
cmps
inc
cmc
aaa
mov
daa
mov
jl
xchg
mov
(bad)
int
icebp
xchg
xor
pop
ret
mov
gs
stc
push
xor
aam
ds
cmp
dec
jge
sbb
and
pop
and
repz
std
pop
and
pop
stos
sti
mov
push
ja
cmps
pop
jnp
loop
ficomp
mov
jne
sub
fbld
out
(bad)
mov
jp
sbb
jb
cmp
mov
or
imul
loopne
hlt
sub
pop
iret
mov
xchg
inc
pop
gs
fwait
inc
imul
cdq
iret
xor
cmp
mov
xor
pop
lods
out
out
mov
and
repnz
dec
cmp
or
ret
push
mov
jecxz
inc
mov
imul
gs
or
test
sub
je
dec
clc
dec
inc
mov
ds
push
cmc
fs
sbb
out
ror
pop
out
outs
sub
movs
arpl
stc
test
sbb
pusha
icebp
sbb
and
imul
popa
add
cld
push
fldenv
push
sar
push
rol
stos
push
div
sahf
sbb
pop
ret
cs
mov
push
xchg
cdq
xor
addr16
mov
dec
and
int
cdq
hlt
stc
stos
or
mov
es
push
inc
mov
push
shr
or
jp
xchg
lds
popa
aaa
mov
int
(bad)
scas
shl
push
xchg
test
test
imul
xor
test
or
pop
pop
xor
inc
cli
xchg
scas
adc
mov
mov
loope
ja
xor
mov
add
push
loope
push
cwde
mov
xor
clc
lods
mov
push
cmp
psubusw
and
rol
xor
and
ds
loopne
mov
push
sar
aam
cmp
xor
lahf
test
stc
lahf
inc
sahf
cdq
adc
daa
in
jnp
sub
mov
fild
ins
jnp
leave
jl
stc
mov
pushf
mov
ja
pop
jbe
out
ret
inc
jmp
push
popf
arpl
fisttp
pop
leave
add
add
mov
(bad)
hlt
sbb
mov
fstp
add
into
add
or
mov
jmp
xchg
fdiv
sub
mov
and
inc
aad
daa
adc
jbe
into
pop
mov
dec
pop
jno
adc
fadd
pushf
cmps
sti
sub
xchg
or
lock
mov
aam
enter
sar
jle
push
push
bound
aas
xchg
je
rcr
jmp
cmp
push
xchg
push
xor
and
div
mov
clc
test
pop
lock
adc
xor
xor
stos
adc
xchg
imul
loop
shl
out
iret
dec
call
jge
fcom
mov
enter
pop
pop
out
fisttp
pop
pop
jns
xor
or
loope
inc
fnstsw
xchg
or
jecxz
sub
out
sub
pop
push
pushf
push
scas
xchg
out
push
cs
daa
pop
xor
and
or
frstor
idiv
dec
sub
fisttp
jl
jne
add
scas
std
cmp
(bad)
xchg
pop
fsub
adc
cmp
clc
jp
push
inc
mov
scas
xlat
cmps
std
outs
mov
shl
outs
push
scas
mov
sbb
xchg
loope
fmulp
ret
and
mov
adc
jb
mov
cmp
mov
mov
pop
inc
dec
push
xchg
les
nop
scas
addr16
loope
mov
and
push
fimul
or
or
push
mov
fsubr
sub
xchg
into
add
cmps
aas
sti
sar
jg
pop
jb
fs
and
mov
loope
lds
xor
rcr
jle
inc
or
(bad)
iret
fsub
lea
fnsave
jmp
test
addr16
mov
(bad)
push
mov
and
jecxz
push
cwde
jns
xchg
or
int3
int3
fadd
sbb
call
mov
sub
jl
and
inc
scas
xor
mov
cwde
and
les
clc
mov
loopne
icebp
mov
mov
mov
arpl
pop
fmul
(bad)
leave
popa
adc
and
cmp
std
movs
add
test
out
jnp
movs
enter
std
arpl
test
cmp
sub
pop
cli
pop
sub
push
adc
pop
cmp
cli
jb
fimul
test
imul
aad
(bad)
std
(bad)
out
or
xchg
cmps
sbb
fisttp
cwde
popa
rol
cld
dec
and
cs
scas
pop
mov
bound
add
mov
out
push
jge
mov
or
test
rcl
repnz
hlt
cmp
adc
pop
arpl
add
fxch
inc
mov
sub
xchg
cpuid
inc
cmp
fistp
jmp
inc
nop
test
pop
cmp
jb
add
ficomp
inc
ror
int
stos
mov
push
push
(bad)
and
addr16
(bad)
out
xrelease
fidiv
(bad)
mov
cmps
mov
retf
cmps
(bad)
mov
pop
das
xor
cdq
cmps
add
inc
loopne
mov
or
sbb
cmp
push
in
cmc
imul
jle
pop
fldcw
add
aam
mov
fisubr
mov
clc
fistp
ins
(bad)
rcl
adc
addr16
pop
call
fiadd
sbb
inc
nop
cmps
pause
mov
pop
pcmpeqd
cmp
and
fmul
lds
fstp
push
sub
clc
dec
mov
mov
xor
sub
rol
loopne
and
or
adc
sbb
adc
test
inc
sar
jp
push
ret
ds
add
cdq
cmp
shl
xchg
fdivp
fst
int3
jecxz
mov
jge
mov
xchg
mov
ret
out
push
sbb
ss
mov
idiv
(bad)
ror
dec
jp
sahf
mov
cld
add
or
inc
add
idiv
fist
or
cmp
clc
mov
mov
add
dec
out
mov
jge
icebp
lds
fwait
lds
sub
(bad)
out
push
or
mov
mov
ror
adc
es
mov
(bad)
imul
fistp
out
pop
push
(bad)
arpl
dec
call
lods
push
mov
push
pop
push
das
or
iret
inc
aas
in
push
(bad)
fimul
aaa
in
push
mov
pop
pop
ror
popa
lods
xor
push
lods
jl
scas
mov
enter
xchg
mov
mov
or
add
cmp
test
mov
push
cmp
sti
xchg
jmp
stos
cwde
xchg
ins
js
iret
or
stos
je
jns
adc
mov
add
inc
(bad)
mov
jge
xor
sub
ins
push
ins
lea
hlt
dec
pop
sbb
sbb
es
enter
fimul
jle
xchg
pop
jle
cmp
adc
sub
sub
ret
sbb
iret
scas
mov
and
jmp
movs
(bad)
jbe
pop
test
fnstcw
repz
sbb
inc
add
movs
mov
xchg
and
movs
ja
imul
mov
push
mov
push
retf
ret
shl
cmp
xchg
cmp
mov
jmp
sub
call
iret
mov
mov
mov
mov
mov
gs
inc
aaa
add
cld
push
and
jg
adc
jb
push
push
out
std
into
(bad)
mov
test
push
enter
dec
xchg
sbb
or
mov
mov
imul
rcr
pushf
ins
push
popa
xchg
imul
std
(bad)
popa
xor
mov
xchg
or
mov
cmc
cmp
movs
sub
ret
in
outs
jmp
aam
cmp
mov
gs
mov
ret
dec
retf
cwde
and
aad
add
inc
mov
pop
jecxz
out
inc
fs
push
cdq
dec
add
and
mov
test
cmp
pop
jnp
mov
sbb
(bad)
push
imul
mov
clc
and
shl
fstp
dec
add
xchg
add
xor
add
sar
and
cmps
pop
add
pushf
mov
pop
xchg
repz
or
cwde
mov
jo
jbe
push
int
sti
hlt
push
out
inc
jo
mov
pop
out
lds
fdiv
jge
fs
stc
es
or
enter
inc
outs
add
dec
push
jge
sub
repz
adc
sub
xchg
add
inc
iret
push
xchg
addr16
or
or
xchg
shl
sub
loopne
cmp
mov
(bad)
mov
jmp
xchg
inc
adc
xchg
push
outs
out
dec
and
je
inc
sbb
jl
cwde
les
out
fsub
inc
dec
sti
push
xor
das
repz
aas
pop
xor
and
mov
out
sar
mov
addr16
das
add
iret
jno
sbb
das
xchg
jecxz
shr
ins
mov
ja
pop
xor
cmp
push
dec
or
(bad)
sub
pop
push
aad
imul
in
and
(bad)
xlat
mov
adc
xor
cmps
in
je
js
retf
pop
fisub
xor
fcom
cwde
push
mov
call
pop
imul
rcr
test
std
lds
test
lds
or
mov
fucom
mov
popa
mov
inc
pop
or
adc
xor
loop
push
jno
inc
cmp
outs
int3
out
imul
cmps
add
shr
test
ins
add
add
inc
cmps
les
push
sub
or
sti
jae
push
jmp
js
push
push
pop
outs
(bad)
fadd
xor
out
fldenv
jns
cs
cmp
(bad)
mov
rcl
add
cwde
cmp
jno
(bad)
fsubr
cs
mov
mov
mov
hlt
ds
sub
and
sahf
add
repnz
fsubr
mov
jmp
cmps
adc
add
aad
add
loop
and
xchg
fbstp
add
xor
xchg
bound
inc
lds
sbb
jmp
and
xchg
retf
loop
xor
mov
mov
and
push
rol
shl
mov
mov
mov
cmc
mov
inc
ja
jne
xor
pop
push
scas
daa
mov
ja
sub
push
mov
ret
fwait
xchg
stos
dec
lahf
jmp
xlat
xchg
test
pop
xlat
xchg
sub
(bad)
es
sahf
inc
mov
repnz
repnz
add
ror
mov
sbb
fild
mov
loope
addr16
mov
xchg
push
xchg
cmp
push
add
sti
inc
add
aas
jmp
div
or
dec
sub
repnz
popa
call
not
test
xor
(bad)
xor
fmul
dec
jg
push
lahf
push
xchg
inc
xchg
mov
loop
dec
or
or
lahf
sbb
pop
sbb
or
dec
in
fld
mov
sub
mov
pop
inc
mov
jmp
rol
cmps
xchg
sub
sbb
(bad)
clc
in
dec
ret
add
pop
ds
jle
mov
mov
ficom
adc
xchg
mov
cmps
ins
xchg
xor
sbb
jnp
std
ins
adc
sbb
xchg
das
ror
aas
mov
imul
sub
cdq
lods
pop
test
mov
hlt
jb
sub
jo
jns
data16
scas
xor
inc
jge
fist
and
xor
cli
xchg
ds
sub
enter
sar
rcl
adc
in
jmp
mov
ror
hlt
pop
jmp
cwde
sbb
aam
adc
and
outs
fs
movs
push
jne
jae
pop
fisttp
sub
loope
mov
pop
in
int3
cmp
(bad)
mov
cwde
(bad)
movs
mov
stc
jmp
adc
add
jmp
or
scas
push
std
pop
push
loop
mov
cmp
adc
dec
repz
xor
mov
(bad)
fmul
das
ins
lds
std
mov
es
pop
icebp
push
test
popf
jecxz
push
sub
xchg
lods
mov
loopne
jb
push
cmp
inc
fwait
cmc
pop
and
(bad)
mov
sahf
push
(bad)
inc
jg
mov
sar
xor
cmp
in
outs
test
stc
sti
mov
enter
xor
fist
dec
dec
pop
mov
jb
xor
enter
call
(bad)
fist
cli
jbe
add
or
fisub
jp
loope
xor
push
xor
push
xchg
test
in
pushf
pop
vmptrst
outs
xchg
popf
inc
lods
sahf
inc
xor
mov
mov
pop
fs
rcl
mov
aad
lods
sub
(bad)
out
pusha
ret
call
xchg
imul
dec
lahf
mov
jnp
jmp
mov
mov
jnp
imul
or
mov
pop
or
xchg
mov
aas
and
and
pop
push
jmp
dec
std
mov
nop
data16
add
(bad)
adc
scas
mov
imul
aam
push
in
push
cmps
mov
rcl
and
in
lahf
xchg
sbb
repnz
les
xchg
adc
push
popf
add
shr
dec
fdiv
addr16
xchg
aam
mov
ret
(bad)
leave
push
jmp
jle
push
mov
cmps
or
mov
cmp
pop
mov
sub
jbe
mov
adc
adc
cdq
xor
cmps
mov
push
adc
push
lea
leave
aaa
(bad)
arpl
test
aas
popf
iret
xor
sbb
(bad)
mov
aaa
fmul
cs
and
pop
les
mov
mov
push
inc
or
add
popa
(bad)
popa
push
loopne
sub
xor
mov
jle
sahf
addr16
int
xchg
dec
fadd
outs
mov
sbb
into
cmp
jo
sbb
sub
sub
imul
call
and
test
ficomp
inc
mov
call
movs
pop
loop
std
jmp
(bad)
cwde
inc
sub
dec
ins
icebp
cmp
mov
popf
and
sti
movs
pop
xlat
jp
and
mov
cmc
out
stos
or
sti
mov
jmp
mov
popf
adc
mov
call
xchg
and
sub
sub
adc
jo
xchg
in
inc
and
ror
sbb
cld
xor
fwait
js
stos
inc
cmp
jl
(bad)
pop
lahf
cwde
(bad)
cmp
mov
js
ins
sub
mov
je
adc
out
bound
mov
jne
mov
out
jmp
mov
mov
xchg
xlat
mov
pop
mov
not
sub
xchg
pop
lahf
in
jns
fisubr
in
(bad)
mov
pop
mov
fiadd
repnz
pop
ret
rol
cmps
pop
imul
adc
fst
js
aam
test
pusha
jne
mov
shl
into
and
fucomip
imul
outs
xor
cli
push
addr16
imul
sub
or
mov
jmp
inc
arpl
or
mov
and
loop
mov
cwde
outs
xchg
mov
mov
push
gs
out
imul
fwait
dec
jecxz
lds
popa
es
lds
lds
fidivr
mul
jmp
fs
mov
inc
add
push
sbb
xor
div
xchg
sub
mov
cmp
je
jecxz
out
ins
in
pop
mov
shr
cli
mov
sbb
cdq
xor
test
jmp
fld
cmovge
sbb
xchg
jbe
push
test
jo
int3
mov
sub
fidiv
data16
pop
fistp
sub
pop
stos
pushf
inc
or
sub
ja
inc
push
lods
cmp
retf
cmp
pop
sub
pop
and
movs
cmp
addr16
int3
xlat
mov
jmp
pop
in
dec
iret
and
test
pusha
pop
sahf
and
push
pop
int
jb
dec
mov
xchg
fild
mov
push
fxch
and
adc
jae
push
popa
jmp
and
mov
cdq
loop
cmc
adc
and
jmp
inc
add
xchg
bound
mov
repnz
sub
and
cmp
inc
mov
sahf
idiv
rcr
ss
aam
in
enter
mov
push
and
sub
out
lahf
inc
or
jno
dec
or
imul
push
js
xchg
and
outs
(bad)
push
fs
test
push
xor
ss
lods
leave
pop
dec
inc
dec
enter
cmp
jbe
cmps
dec
xor
lock
dec
repnz
add
sti
iret
mov
out
sbb
pop
lahf
or
inc
jae
aaa
mov
aaa
xor
fild
popf
mov
aaa
jae
and
sti
xor
jmp
xor
xchg
test
mov
inc
pushf
test
(bad)
or
repz
cmp
dec
or
imul
push
mov
pop
stos
jae
lds
dec
ss
dec
js
or
xor
cwde
and
in
ja
outs
mov
xchg
jl
mov
ret
lods
and
xor
pop
mov
sbb
ins
clc
jmp
adc
jns
jbe
es
adc
fld
jb
xchg
sub
push
pop
add
mov
push
sbb
mov
inc
pop
fwait
loope
push
imul
cld
imul
fadd
push
push
in
jnp
mov
lds
test
push
cmp
das
and
shr
or
cmp
not
push
pushf
bswap
or
les
cwde
or
and
ret
push
add
outs
fwait
jl
jmp
jns
add
push
mov
sti
adc
gs
add
jmp
outs
mov
xchg
mov
xchg
cmp
xchg
inc
call
push
mov
outs
add
addr16
dec
dec
inc
call
(bad)
and
(bad)
pop
xchg
pop
loop
lea
inc
bound
or
push
pop
adc
out
jmp
pop
push
or
xchg
cmp
add
es
mov
adc
in
jns
cmp
jl
add
ja
sub
dec
mov
add
cmp
inc
xor
out
mov
in
mov
ss
hlt
dec
fistp
sub
push
mov
pop
xor
popf
mov
inc
xor
retf
rcr
push
adc
mov
jb
pop
test
out
mov
in
pushf
ss
mov
mov
push
push
fsub
cmp
mov
sub
push
adc
aad
fwait
jbe
out
pop
mov
xchg
or
outs
mov
stos
mov
pop
sub
dec
push
inc
jl
jl
daa
jno
(bad)
mov
lea
mov
push
add
mov
(bad)
cmp
cdq
mov
pushf
outs
out
loop
rcr
push
test
mov
xor
imul
mov
xchg
fs
int3
pop
jl
pop
mov
arpl
fdivr
cld
(bad)
xor
das
jmp
adc
jmp
iret
jns
mov
call
repz
cs
pop
inc
xchg
push
xor
mov
mov
mov
jg
adc
mov
mov
fcomp
fstp
jno
fldenv
fcomp
xor
stos
xor
or
pop
lahf
push
add
lea
xchg
cdq
leave
dec
mov
jmp
iret
xchg
inc
inc
and
in
inc
jbe
popa
mov
dec
add
popfw
push
retf
and
sbb
lsl
sahf
cdq
inc
jmp
cld
ss
xor
bound
gs
test
mov
inc
mov
stos
ins
xor
mov
sub
inc
loopne
ret
lds
xor
clc
fisttp
inc
and
retf
adc
dec
sbb
push
xor
cwde
mov
jmp
adc
or
add
ror
shl
or
sbb
(bad)
jne
mov
sub
and
add
adc
into
lea
or
repnz
into
stos
stos
jg
mov
inc
mov
not
pushw
repz
shl
or
fistp
dec
pusha
inc
xor
dec
(bad)
and
aaa
sahf
mov
mov
dec
pop
in
jge
xlat
aam
fmul
push
test
test
jg
(bad)
out
dec
loope
inc
and
je
push
mov
jmp
sub
lock
test
fistp
ret
(bad)
fwait
(bad)
inc
push
test
adc
ficomp
(bad)
or
mov
es
or
and
mov
xchg
sub
jae
cmp
add
mov
fisubr
and
icebp
xor
cmp
mov
test
bound
and
dec
push
jno
and
retf
mov
ss
sub
movs
mov
(bad)
mov
adc
test
jge
sbb
repz
add
push
xor
or
movs
jecxz
out
iret
aaa
idiv
or
mov
xchg
mov
mov
jmp
bound
ret
rcl
mov
and
push
not
mov
pop
adc
imul
xor
and
or
stos
lahf
ror
cdq
add
jo
mov
sub
cmps
sub
rol
xchg
sub
int3
int
or
adc
and
jbe
dec
sub
add
(bad)
mov
ins
xchg
fiadd
sbb
inc
stos
xor
idiv
out
loop
sub
dec
dec
cli
jecxz
inc
ds
cmp
fisub
xchg
inc
fs
mov
push
retf
xchg
mov
mov
adc
jo
lods
push
push
push
cmc
les
push
sahf
stc
inc
fst
push
inc
jecxz
repnz
retf
inc
xchg
jmp
es
and
in
sub
or
outs
pusha
stos
pop
or
mov
and
or
mov
or
dec
cmp
jnp
(bad)
push
cwde
lods
sar
mov
inc
fisubr
mov
sub
(bad)
je
cmp
xchg
dec
lock
dec
ins
(bad)
mov
mov
sbb
cs
imul
cmp
mov
or
adc
cmc
jmp
bound
pop
lds
scas
sub
fsubr
mov
adc
add
sbb
mov
mov
out
pop
daa
jl
xchg
jb
or
xor
cmp
imul
fiadd
lods
cmp
cmp
adc
sbb
pop
stos
lods
leave
lea
push
add
aad
inc
stos
imul
cdq
call
add
xor
push
mov
inc
cmp
xor
inc
sub
adc
fnsave
iret
push
inc
popa
xor
inc
int3
mov
adc
inc
cmp
jle
cwde
xchg
aaa
or
adc
cmp
into
fs
dec
cs
bound
pop
stos
xchg
xor
dec
add
sahf
mov
test
scas
test
push
mov
adc
push
ins
jmp
push
fmul
sub
jmp
lods
scas
xchg
pop
icebp
imul
idiv
or
mov
rcr
ja
int3
sbb
in
fcomip
cmp
(bad)
xor
push
xchg
xchg
dec
push
sub
or
mov
call
stos
cmps
jmp
and
int3
stos
pop
push
jmp
add
iret
lods
test
xchg
xchg
add
dec
sbb
imul
test
dec
out
das
loopne
cmp
dec
stc
mov
ja
bound
into
je
pop
call
cli
mov
sub
nop
mov
fld
push
adc
add
repnz
das
cmps
ins
dec
frstor
push
mov
xor
pop
xchg
sbb
mov
mov
pop
cs
sub
mov
jp
loop
pop
inc
je
retf
sub
push
ret
sbb
adc
push
pop
std
sub
in
cmc
sbb
sub
push
sti
in
jmp
hlt
jno
les
jg
hlt
or
(bad)
addr16
jbe
mov
das
adc
add
push
int
inc
outs
jp
enter
mov
cmp
rcl
out
sahf
xchg
cmp
sti
and
stc
scas
(bad)
stos
loopne
fsubr
and
add
into
cwde
stos
mov
cs
jecxz
lahf
jb
mov
adc
inc
sbb
popa
pop
cmp
gs
mov
sub
cmp
iret
popf
popf
sbb
add
(bad)
fistp
(bad)
bound
fmul
xchg
test
sub
pop
jmp
data16
daa
fistp
cmps
inc
xchg
mov
movs
fnsave
mov
or
jno
outs
bound
pop
imul
clc
sub
je
or
add
fwait
shr
aad
push
test
jmp
jg
inc
push
sub
push
or
push
cdq
mov
outs
jo
push
ds
sub
dec
push
xor
sahf
cmp
sti
aas
call
xchg
add
push
(bad)
enter
dec
cmps
shr
and
jbe
jae
loope
loop
xchg
les
cli
cmp
mov
push
cmp
dec
dec
push
jmp
xchg
or
addr16
mov
fdiv
bnd
lahf
lods
pusha
js
hlt
and
js
es
xor
inc
data16
(bad)
pop
sbb
inc
or
imul
jbe
mov
imul
retf
scas
dec
xor
lods
cmc
and
inc
add
rol
dec
add
mov
cli
out
xchg
mov
arpl
inc
jp
push
sub
dec
push
xor
mov
pop
or
outs
jo
scas
repnz
sub
and
xchg
mov
dec
mov
or
mov
jmp
xchg
cld
call
in
mov
jne
shl
dec
dec
add
ret
cdq
loope
clc
push
dec
mov
jb
(bad)
pop
gs
dec
icebp
std
lds
shr
push
mov
cmp
push
loope
cmp
xor
int
sub
jmp
es
dec
fsubr
cmps
mov
inc
dec
sbb
add
cmp
cwde
mov
sbb
push
test
(bad)
xlat
icebp
call
arpl
xchg
lods
jne
push
fmul
mov
sub
push
and
mov
dec
pushf
(bad)
cdq
xchg
call
(bad)
push
jmp
fistp
test
mov
test
add
mov
call
dec
mov
js
mov
das
rcr
into
pop
jbe
inc
test
fdiv
pusha
pop
fistp
popf
js
int
pop
add
sti
inc
or
arpl
stc
call
mov
jge
cmps
xor
add
cdq
mov
mov
int
mov
or
into
fstp
scas
loop
inc
push
loopne
cld
dec
jno
xchg
into
call
adc
fyl2xp1
pusha
push
(bad)
fisub
mov
mov
inc
ffreep
add
addr16
aam
je
xchg
push
xchg
cmp
add
cld
bswap
cmp
leave
mul
sub
or
sbb
scas
stos
sbb
mov
mov
sbb
push
add
add
pop
mov
mov
inc
push
mov
jmp
es
or
mov
mov
xor
sbb
and
sub
scas
cmp
call
ins
add
lods
cmps
add
int3
popf
jmp
into
mov
mov
dec
pop
add
fld
push
ret
push
sbb
pop
lahf
xchg
mov
mov
mov
xchg
mov
pop
push
xchg
jo
push
xor
xor
rcr
cmp
mov
inc
cld
pushf
fwait
in
ror
inc
iret
fs
xchg
push
inc
jo
inc
pop
cmps
inc
stos
popa
mov
ror
fs
lods
test
inc
push
dec
ret
add
out
sti
fadd
sub
mov
jmp
jg
xor
adc
retf
pop
ror
cdq
fnstcw
cmps
jo
retf
into
in
les
sub
rol
ins
inc
sub
out
sub
adc
mov
sbb
cmc
push
mov
xchg
sub
js
cmp
mov
iret
add
icebp
dec
test
mov
adc
adc
lock
fnsave
fs
pushf
ret
jl
cdq
mov
pop
aad
xchg
lea
cmp
push
(bad)
xor
push
xor
ds
js
xchg
fs
aad
std
(bad)
and
(bad)
fwait
jnp
rcr
popa
push
sbb
fstp
ins
loopne
ja
inc
loop
mov
icebp
imul
mov
outs
add
ins
sub
mov
dec
scas
out
cmp
dec
mov
stos
mov
dec
lock
in
rol
mov
daa
add
pop
(bad)
xor
mov
inc
mov
outs
in
ins
add
mov
mov
cmp
out
fwait
leave
mov
cld
lock
adc
ret
cwde
cmp
clc
cmps
xchg
retf
ffreep
or
scas
and
dec
add
popa
leave
out
sub
fimul
mov
(bad)
scas
mov
mov
enter
test
in
movs
xor
shr
fdivr
leave
push
loopne
cmp
lahf
fisub
in
mov
xor
mov
adc
push
push
pop
(bad)
iret
mov
test
loop
out
ret
jmp
sub
sar
xchg
ja
xlat
scas
mov
pop
fs
xor
int
sti
cmp
std
shl
fimul
mul
popa
dec
lea
adc
sahf
jbe
lods
or
retf
sub
cmp
imul
pop
iret
aas
out
jnp
icebp
jmp
mov
cmp
lods
ror
pop
mov
push
mov
push
scas
push
mov
xor
aaa
push
lods
dec
add
sbb
jb
call
adc
adc
mov
ins
test
xchg
imul
cmp
daa
pop
dec
add
enter
(bad)
xor
mov
adc
dec
jno
pop
fcomp
xlat
or
repnz
xor
cli
imul
and
(bad)
add
or
loope
jno
lods
pusha
sub
add
call
pop
dec
mov
call
retf
imul
lods
(bad)
mov
in
mov
or
retf
mov
and
xchg
dec
xor
leave
sub
pop
jno
leave
mov
cmp
push
push
(bad)
es
add
mov
test
ror
xchg
sub
in
adc
jne
pop
add
pusha
sbb
(bad)
in
leave
mov
adc
mov
sbb
inc
adc
sahf
mov
jg
shl
add
jg
out
jl
(bad)
fcmove
adc
jmp
aad
fdivr
fs
aad
mov
dec
ja
mov
xor
fist
out
pop
sub
cdq
aaa
es
inc
push
adc
add
test
lea
xor
inc
push
sub
add
into
pop
int3
jnp
div
jge
xor
dec
fild
sub
sti
push
addr16
lds
pop
inc
out
pop
inc
cli
add
pop
es
into
(bad)
fsubr
sub
fwait
mov
pop
test
add
rol
inc
push
sub
xchg
and
repnz
hlt
sub
pop
inc
adc
push
std
shl
shl
and
ins
mov
icebp
outs
mov
fcomip
ds
jecxz
jp
js
shl
dec
adc
mov
pop
pop
pop
nop
loope
cmp
dec
mov
addr16
lods
jg
push
xor
adc
out
jmp
(bad)
push
outs
mov
mov
xlat
xchg
into
xor
push
cli
and
cmps
(bad)
pop
lods
jnp
rcl
fild
neg
add
mov
push
xor
out
adc
js
lahf
jecxz
cmp
dec
or
sub
out
fdivr
(bad)
xlat
and
mov
dec
mov
xlat
sar
xchg
push
pop
xchg
inc
mov
call
(bad)
(bad)
(bad)
ss
add
jbe
sub
mov
mov
jnp
pop
int3
stos
dec
lods
cmp
mul
cmp
lock
xchg
jne
add
push
adc
push
mov
adc
jl
mov
fucomi
mov
cli
and
dec
jmp
sti
inc
mov
jp
pop
adc
je
into
dec
(bad)
out
mov
mov
shl
pop
mov
arpl
ins
cmps
int3
pavgb
cmp
std
dec
xchg
cmps
dec
adc
test
mov
clc
push
xchg
adc
mov
push
sub
and
fst
gs
cmp
lods
in
jne
push
inc
mov
fiadd
mov
xor
jmp
inc
call
out
popf
dec
ins
shl
rol
test
sbb
cdq
jns
(bad)
mov
call
and
pop
adc
ret
and
add
inc
mov
inc
jl
lock
jae
cmp
not
adc
cmps
cld
dec
mov
push
(bad)
pop
inc
inc
mov
and
loopne
xor
movs
test
jp
xor
scas
ret
test
daa
push
mov
rcl
lock
and
or
mov
(bad)
into
jmp
mov
cld
dec
sbb
call
loopne
popa
sub
invd
mov
lahf
mov
cli
test
xchg
adc
retf
inc
(bad)
sub
xchg
mov
adc
push
mov
xchg
cmp
mov
push
mov
jns
xor
std
or
cmp
ds
mov
and
rol
jnp
imul
adc
test
pop
pop
retf
sub
pop
es
idiv
rcr
clc
jp
mov
rol
xchg
push
hlt
mov
sub
(bad)
cmp
cmp
add
xor
je
lahf
push
adc
in
retf
sub
lahf
pop
mov
sub
dec
inc
call
arpl
inc
fiadd
jecxz
push
retf
push
ss
adc
push
sub
xchg
into
push
repnz
movs
inc
cmp
xor
je
imul
cli
mov
add
and
mov
sbb
jns
dec
arpl
loope
(bad)
mov
wbinvd
scas
dec
das
pop
(bad)
dec
out
(bad)
out
pop
int3
jle
imul
repz
adc
dec
call
fnstsw
int3
leave
or
inc
push
xor
xchg
jmp
pop
or
cmp
mov
mov
push
inc
fstp
popf
enter
mov
dec
sbb
pop
fisttp
sbb
ja
ret
fs
daa
movs
sbb
setae
xchg
js
dec
lods
xor
jbe
push
popf
adc
or
shl
call
les
or
ins
xchg
jg
push
aaa
dec
xchg
and
cmp
daa
lods
sub
cmps
pop
push
sbb
fisub
stos
inc
jmp
das
inc
aaa
hlt
inc
jmp
jmp
pusha
jno
or
ret
(bad)
je
outs
push
jbe
clc
std
or
push
test
xor
xchg
cs
mov
or
mov
(bad)
and
mov
retf
xor
ret
push
fadd
xor
popf
sbb
pop
lea
adc
test
pxor
cmp
inc
mov
or
(bad)
fist
sbb
std
std
xchg
or
sbb
les
clc
and
xchg
jmp
sub
ret
ss
ret
fwait
and
mov
mov
lods
cmp
in
mov
mov
mov
ins
pop
inc
addr16
push
into
push
mov
inc
ja
inc
add
xor
sahf
into
and
in
add
addr16
mov
jne
dec
jle
xlat
dec
pop
jmp
(bad)
lds
inc
adc
lahf
and
stos
and
ss
aad
daa
fild
out
add
or
jg
mov
std
fsub
les
pop
int
adc
dec
js
jecxz
iret
sbb
fs
jg
rcr
xchg
(bad)
out
(bad)
sbb
clc
cmp
loopne
xor
or
adc
push
mov
jbe
xchg
inc
push
add
jo
mov
sub
push
or
inc
jle
adc
imul
movs
jne
jl
pop
dec
mov
push
sbb
aam
out
inc
(bad)
dec
aam
(bad)
adc
fistp
test
cwde
loopne
push
fsub
outs
inc
cld
sbb
mov
jge
xchg
mov
bound
inc
adc
stos
retf
push
loop
dec
lods
jmp
push
add
inc
in
repnz
les
in
shl
inc
repnz
mov
mov
cld
fistp
addr16
or
mov
lahf
xor
loopne
das
inc
mov
inc
jmp
dec
mov
dec
dec
dec
imul
les
sbb
pop
add
adc
dec
xchg
ret
out
cwde
or
push
call
mov
fsub
jb
sub
lods
stos
je
shl
mov
xor
push
dec
sbb
xor
mov
pusha
mov
mov
and
je
les
xchg
adc
cmc
shr
push
adc
pop
and
clc
pop
(bad)
dec
je
out
jo
(bad)
pop
outs
sub
mov
jb
aam
dec
pop
stc
daa
lock
fmul
repz
popa
jno
inc
pop
inc
push
loope
xchg
out
jle
inc
popf
add
iret
stos
mov
cmc
imul
outs
test
and
sbb
test
shr
jno
out
or
int
iret
call
(bad)
in
xor
jb
aam
push
xor
pop
ss
sbb
fisttp
enter
repz
mov
mov
pop
clc
dec
xchg
sbb
push
int3
xor
std
cmp
mov
mov
ret
push
jns
in
(bad)
cmp
xor
mov
push
and
dec
inc
mov
mov
push
jecxz
add
add
jbe
movs
test
adc
push
test
out
cmps
or
push
aam
in
mov
mov
add
add
jmp
and
sub
gs
dec
cmc
ins
push
jl
and
(bad)
inc
mov
xchg
sbb
fmul
mov
add
scas
(bad)
cmp
test
hlt
pop
test
lods
add
mov
adc
mov
lods
stos
adc
daa
push
jae
mov
addr16
data16
cmp
mov
mov
sub
push
cmp
xor
mov
and
lock
pop
xchg
aam
sbb
pop
test
cs
mov
call
std
mov
sbb
(bad)
(bad)
int3
xor
or
and
movs
das
sub
push
pop
sti
movs
inc
jge
outs
cmovs
inc
add
push
jmp
push
xchg
cld
rcl
add
dec
fldenv
test
add
inc
aas
mov
popa
cld
cld
push
xor
sbb
outs
dec
push
xchg
jmp
inc
gs
clc
xchg
int3
call
lds
lds
in
fdiv
push
jae
dec
ss
ss
out
into
in
and
mov
mov
pusha
lock
dec
outs
pusha
add
arpl
xchg
push
pop
sbb
jg
cmc
ins
int
mov
pop
pushf
or
adc
ins
loop
mov
xchg
sbb
pushf
inc
mov
lods
lods
xchg
enter
add
mov
in
enter
sub
fld
xor
sahf
out
cdq
loope
inc
repnz
pop
dec
xor
or
adc
test
stos
pop
mov
stos
in
push
shr
mov
sub
inc
setb
test
sub
inc
mov
das
int
push
out
mov
and
xlat
add
pop
mov
jbe
xor
(bad)
dec
xchg
ins
add
or
cmp
call
jl
pop
lods
lahf
je
leave
add
jno
sbb
out
das
push
xchg
xor
push
sub
rcr
cmp
shr
xchg
into
retf
adc
in
adc
dec
lds
(bad)
mov
xchg
pushf
outs
sub
shl
jle
aas
sub
enter
pop
jne
jns
cmp
inc
cmps
mov
push
sbb
stos
jmp
sbb
xlat
mov
daa
(bad)
pop
adc
push
push
pop
pop
xchg
stc
xor
hlt
mov
pop
jnp
(bad)
ds
sbb
scas
sub
jae
xor
sbb
icebp
inc
or
jecxz
nop
jno
iret
inc
push
(bad)
stos
mov
cmp
ds
mov
in
pop
enter
cmp
sbb
popf
dec
or
sub
pop
xor
sti
add
cdq
je
mov
imul
xchg
jl
jg
repnz
imul
mov
inc
fadd
mov
pop
arpl
mov
jnp
mov
push
mov
fdivr
push
dec
stc
bound
push
rcr
inc
and
inc
loope
mov
lock
sub
mov
add
xchg
cmc
add
jmp
jg
(bad)
mov
lahf
add
in
inc
adc
aaa
jg
in
movs
pop
push
jecxz
sbb
or
rol
adc
sub
xchg
xchg
fsub
xchg
jb
adc
icebp
mov
adc
pop
push
jmp
sahf
bound
stc
push
add
retf
jb
push
or
mov
cmp
loop
aam
scas
shld
cmps
xchg
js
lds
adc
cli
push
xchg
sbb
mov
mov
leave
movs
cmp
pusha
pop
in
std
mov
in
pushf
pop
outs
ror
push
or
mov
movs
push
and
pop
outs
(bad)
xchg
dec
mov
pop
sahf
mov
call
mov
gs
inc
cwde
(bad)
rcl
xor
ret
xchg
push
inc
mov
lods
or
inc
jge
jg
stos
and
imul
and
mov
not
inc
aad
out
std
loopne
sbb
dec
xchg
popf
ins
cld
mov
mov
(bad)
pushf
mov
xlat
ins
push
inc
loopne
lds
sub
pop
cwde
or
jae
xchg
push
bound
sbb
outs
inc
loop
dec
sbb
mov
scas
cmp
dec
cmc
inc
push
xor
hlt
lock
(bad)
or
ins
xor
jno
fcomp
dec
and
mov
jmp
enter
jle
sti
or
rcr
fs
xor
jnp
out
bndldx
ror
dec
sti
jp
push
jp
(bad)
adc
and
movaps
fwait
cmps
cmps
lds
retf
inc
js
xor
adc
cmp
stc
pop
out
out
movs
adc
xchg
dec
jnp
jl
js
aad
rcl
jmp
cli
mov
out
in
inc
stos
stc
xchg
jbe
sub
or
pop
xchg
jle
iret
je
mov
dec
mov
inc
pop
pop
xlat
mov
test
pop
in
mov
imul
arpl
jmp
in
adc
xchg
xchg
movs
fcomi
or
and
pop
mov
inc
lds
mov
ret
adc
ret
xchg
inc
mov
dec
mov
xchg
jae
add
cmp
nop
ja
out
inc
iret
es
dec
add
pop
or
dec
add
mov
add
test
movs
dec
loop
repnz
or
jg
gs
movs
jge
repz
jo
jno
das
movs
ins
mov
aas
ret
or
sub
xchg
(bad)
mov
ror
mov
pop
fwait
movs
(bad)
repz
sbb
push
std
xor
mov
jo
push
arpl
ds
pop
das
std
mov
jg
pop
(bad)
ds
and
adc
push
dec
fstp
xchg
mov
jg
sbb
pop
mov
xor
out
push
push
call
fdiv
loopne
dec
jmp
xchg
ins
call
and
ins
xor
call
movs
inc
mov
inc
daa
mov
dec
xchg
sysenter
add
fiadd
cdq
stos
mov
add
push
cmp
cmps
jno
jae
(bad)
adc
gs
jmp
push
xor
inc
fidivr
stos
pushf
mov
std
jge
add
sbb
(bad)
xor
xor
fst
pop
push
neg
xor
mov
pop
addr16
cmps
(bad)
call
mov
and
xchg
shr
mov
or
jmp
and
add
jecxz
mov
xchg
stos
push
clc
pushf
data16
and
aam
pusha
inc
xchg
mov
jmp
adc
xor
mov
(bad)
in
or
mov
jmp
mov
stos
xchg
add
int
inc
out
push
(bad)
dec
das
jl
xchg
jno
pop
mov
jo
cmps
inc
pop
shr
test
gs
jmp
jmp
pop
nop
call
xor
add
cmp
pop
nop
push
lods
ret
addr16
loope
or
push
into
cmp
mov
ret
clc
jne
inc
add
nop
imul
int
push
xchg
inc
imul
arpl
cmc
aas
jmp
mul
sar
jg
(bad)
neg
add
sti
in
adc
mov
gs
pop
adc
popa
stos
mov
push
hlt
xor
sbb
sub
push
push
loop
adc
cmp
out
les
leave
in
daa
test
sbb
cmp
xchg
sub
jae
push
fs
popf
or
sub
inc
repz
xchg
jge
jmp
call
leave
xchg
mov
pop
xor
xchg
psraw
mov
xor
pushf
add
clc
(bad)
repnz
aad
add
lds
lock
(bad)
(bad)
xchg
ret
mov
lods
hlt
popf
push
cmp
adc
call
sar
sub
sbb
shl
xchg
sub
inc
test
cwde
data16
in
lods
ror
mov
inc
mov
hlt
jmp
push
add
rcr
cdq
and
sahf
mov
shl
fnsave
pop
mov
repz
add
mov
and
call
mov
dec
ja
inc
jecxz
call
pop
gs
push
pop
scas
and
lahf
test
cdq
push
xchg
in
jge
fdivr
inc
dec
inc
inc
sub
ins
pop
addr16
add
popf
pop
and
int
xchg
jo
into
dec
lods
pop
out
rcl
shl
add
xchg
out
jecxz
sub
and
mov
sub
das
dec
jbe
test
and
(bad)
in
movs
add
cmc
mov
pop
jo
push
push
sbb
cmps
mov
jno
sar
xor
push
adc
mov
mov
jnp
aas
pop
hlt
mov
neg
sar
inc
dec
xchg
sti
rcl
mov
dec
add
stos
aas
mov
lds
fadd
mov
sub
jge
fst
add
push
mov
cmps
xlat
fistp
(bad)
jge
clc
es
stos
shl
cs
inc
push
jp
jg
fisttp
repz
arpl
push
loop
sub
retf
and
adc
mov
fucom
aam
push
jmp
ret
add
sub
mov
cmp
cmp
dec
int3
icebp
add
in
test
mov
sub
std
or
int3
sbb
leave
dec
xchg
pop
fs
imul
mov
in
sbb
push
repz
ret
jns
mov
in
clc
and
stos
or
jbe
lahf
outs
stc
pop
test
stos
sub
movs
jbe
out
cld
cld
ret
and
mov
sbb
or
mov
nop
cmc
xor
jl
movs
cwde
lea
xor
sbb
lods
xchg
int
xchg
mul
movs
mov
mov
and
clc
(bad)
mov
cmps
xchg
fcomip
jmp
cld
or
add
stos
(bad)
in
jne
push
sub
sub
mov
cmp
jle
bound
adc
fwait
mov
push
fwait
jne
jg
lock
stos
imul
jns
add
xor
cmp
mov
xchg
(bad)
jmp
mov
stos
je
ins
push
(bad)
cdq
jb
adc
sub
push
mov
adc
lods
push
xchg
jl
(bad)
xchg
mov
add
mov
ins
jp
add
mov
aaa
pushf
xchg
xchg
jg
dec
popa
lds
(bad)
cmp
ins
int
ins
mov
pop
pop
popf
sbb
lock
cdq
or
lds
movs
jmp
cmp
lods
fcmovu
hlt
mov
and
sahf
xchg
hlt
cmp
(bad)
mov
pop
daa
lock
xchg
mov
sub
cmp
dec
mov
mov
fs
xchg
nop
ret
cwde
int3
xchg
mov
fisttp
aaa
jmp
cmps
mov
push
pop
loopne
pop
inc
fadd
xchg
jb
mov
inc
iret
xlat
jmp
jle
(bad)
dec
sub
xor
cmp
xchg
cmps
lahf
add
cmp
imul
cmc
push
dec
call
cmps
and
sbb
hlt
push
iret
int
sbb
das
mov
jmp
iret
fsub
sub
mov
sub
jne
aas
rcr
fsubp
inc
dec
mov
aas
outs
xor
or
pop
scas
retf
out
cld
sub
sub
dec
xchg
mov
stc
mov
retf
sub
inc
iret
mov
int
outs
into
(bad)
jnp
jae
imul
adc
loope
jmp
rcr
sbb
inc
(bad)
adc
adc
or
iret
retf
popa
xchg
jae
(bad)
ret
leave
loopne
iret
cdq
cmp
mov
repnz
mov
daa
sub
shl
jge
and
cli
popf
stos
aad
and
push
push
jg
xchg
aad
push
dec
jno
retf
fcomip
xchg
mov
xor
in
bound
push
pop
pop
mov
add
sti
cs
mov
(bad)
popf
adc
jno
pop
cmp
xor
mov
fwait
(bad)
in
mov
and
lods
push
xor
pop
add
xor
daa
imul
pop
or
test
retf
repz
int
stc
fs
(bad)
add
pop
pop
in
cmp
jne
mov
daa
xor
dec
dec
pavgw
mov
ins
xchg
lea
sbb
push
not
outs
sbb
mov
lods
or
mov
push
call
repnz
mov
or
iret
scas
push
pop
cmp
icebp
dec
push
hlt
fnstenv
out
jnp
rcl
xchg
leave
test
or
leave
mov
adc
lds
xchg
mov
call
add
inc
jns
jne
jb
mov
test
mov
mov
jb
enter
inc
mov
in
cmp
mov
inc
je
mov
cmp
fcmovu
add
stos
add
mov
out
add
or
and
popa
stos
imul
cmps
stc
xor
das
and
sahf
push
scas
mov
das
stos
data16
int3
into
ja
fstp
sbb
ins
sti
xor
(bad)
and
xor
sbb
cmp
push
hlt
test
mov
(bad)
or
nop
sahf
outs
xor
dec
mov
sub
jno
add
mov
pop
fild
aad
icebp
add
mov
addr16
loopne
adc
pop
mov
test
pop
std
(bad)
ins
adc
push
fisub
ins
mov
shr
inc
ss
xor
xor
inc
dec
pop
or
mov
iret
pop
jo
cld
sbb
sub
stos
inc
loopne
arpl
jno
mov
aas
cmp
aad
lahf
movs
(bad)
outs
call
xor
xchg
pop
sub
call
jecxz
inc
sub
jecxz
sub
test
ror
shr
push
in
das
enter
mov
ss
rol
shl
add
xchg
push
inc
mov
pop
dec
out
jno
out
(bad)
xchg
push
pusha
in
cmp
pushf
xchg
and
sahf
pushf
and
daa
xchg
mov
sub
push
jno
das
pop
mul
sub
cmp
in
ja
outs
jbe
xchg
cmp
imul
cmp
jmp
push
pop
dec
(bad)
push
add
(bad)
sbb
and
jmp
int3
xchg
inc
imul
imul
icebp
pop
rcl
push
sub
pop
push
jno
push
and
mov
stc
adc
in
call
(bad)
cmp
sbb
out
mov
ins
outs
sbb
hlt
fs
mov
jnp
fnstsw
mov
push
add
xchg
push
(bad)
push
adc
inc
test
not
test
mov
dec
xchg
loope
push
mov
cmp
les
mov
mov
push
add
mov
loopne
fcom
adc
(bad)
sbb
xchg
aas
pop
inc
fs
sub
xor
jl
bound
outs
pop
push
cdq
scas
test
test
jmp
out
mov
mov
call
mov
mov
pop
aam
movs
in
cmp
test
push
movs
pop
and
xchg
xchg
ins
fcom
test
sub
or
and
(bad)
adc
out
and
mov
adc
jp
xchg
mov
aad
leave
mov
dec
pushf
cld
push
xchg
push
shl
sbb
xchg
aas
ror
outs
jmp
jle
mov
cdq
lea
mov
cmp
push
adc
mov
jne
imul
jecxz
mov
out
std
sbb
ins
xor
lods
ds
(bad)
add
das
imul
and
and
cmp
or
movs
xor
add
sub
dec
mov
mov
dec
pushf
sub
scas
add
lock
adc
(bad)
push
dec
loopne
ficom
add
sbb
sub
mov
inc
dec
jge
mov
mov
xor
adc
push
pop
(bad)
jmp
jae
inc
and
xchg
xor
mov
mov
test
pop
lods
adc
xchg
pop
mov
movs
mov
and
lods
mov
cmp
repnz
xchg
out
in
(bad)
pop
push
lds
fcmovbe
and
bound
mov
sbb
xor
pop
ss
cmc
lea
xchg
push
add
lock
pop
pop
int3
push
data16
xor
ss
sbb
mov
sbb
sub
ins
adc
push
pop
xor
inc
or
jne
dec
stos
pop
push
icebp
pop
lahf
xlat
xchg
cmp
push
mov
out
adc
sti
pop
mov
rol
fwait
repz
push
bnd
cmp
inc
mov
call
mov
sbb
fst
or
lods
imul
adc
push
pop
sti
xlat
sub
mov
push
push
push
mov
mov
xchg
xor
cmps
add
sbb
repz
cdq
inc
ror
mov
popa
out
jo
adc
jle
adc
push
sti
idiv
int3
ret
aas
iret
pop
mov
cmc
sbb
cmp
cmp
je
jl
fstp
hlt
(bad)
jge
fsubr
movs
mov
xor
in
sbb
or
fdivr
mov
test
pushf
aad
xor
aas
mov
mov
std
xchg
imul
lea
push
xor
test
popa
adc
jmp
jmp
mov
jecxz
fsubr
sub
fdivr
mov
sub
jae
pop
mov
mov
test
mov
and
mov
sub
push
lds
in
sub
loope
je
dec
sar
inc
and
dec
push
mov
les
dec
push
mov
pop
and
jp
dec
jmp
lahf
jbe
call
in
enter
out
(bad)
pop
mov
(bad)
cmc
or
iret
movs
test
popa
mov
xchg
add
add
push
inc
mov
pop
retf
xchg
int
add
outs
mov
stos
mov
sub
inc
dec
xor
jb
xor
outs
xor
and
dec
push
mov
inc
ins
inc
inc
mov
push
(bad)
and
out
sub
or
lock
jb
sub
fwait
mov
pop
ss
or
pushf
cmps
jo
jo
pusha
jg
cmc
clc
xchg
xchg
pop
sbb
cmps
adc
jmp
mov
(bad)
sub
rol
mov
dec
and
push
enter
mov
or
ds
cwde
pminub
and
and
xchg
inc
cdq
pop
push
jge
out
lods
mov
and
jl
jmp
loopne
and
out
inc
movs
rol
addr16
(bad)
jmp
jmp
jmp
dec
pushf
stc
cmp
pop
loopne
mov
mov
in
cdq
fcomp
das
outs
dec
sar
fsub
dec
cmc
pop
mov
test
or
shr
xor
jnp
xchg
ret
jne
aam
jle
push
inc
cwde
cmp
(bad)
jle
call
or
fs
xchg
test
jns
icebp
xor
pop
outs
inc
cwde
add
in
push
sahf
ja
lods
inc
outs
add
cmc
cmp
mov
fwait
mov
and
pop
aas
and
int
jno
mov
add
dec
and
pop
jbe
inc
adc
mov
pop
sub
adc
jg
push
repz
frstor
ror
adc
jge
inc
sbb
add
jne
push
ss
jmp
push
jnp
data16
sbb
outs
cmp
ins
jmp
xchg
or
xchg
lea
or
int
mov
add
mov
ds
inc
retf
enter
dec
adc
jmp
ss
sbb
push
sbb
mov
bound
aam
bound
sbb
xchg
push
out
push
sbb
cmps
test
xchg
push
xor
sbb
out
int
inc
test
cs
sub
(bad)
jae
xchg
xor
fisubr
mov
enter
imul
push
into
mov
call
xor
stos
lahf
jns
bound
lahf
lock
inc
push
xchg
cmp
rcr
cmps
sbb
mov
dec
sti
inc
or
call
enter
mov
xchg
mov
out
adc
jo
repz
mov
shl
fsubr
ss
das
arpl
push
push
iret
ja
in
test
jo
movs
(bad)
xor
ins
fldcw
inc
inc
jge
(bad)
ret
popa
jne
sti
aam
lahf
and
sbb
mov
jb
mov
pop
inc
test
and
cld
rol
jle
jno
cmp
addr16
inc
(bad)
js
je
sub
mov
add
pop
cmp
push
neg
push
outs
mov
retf
dec
mov
jl
sub
xor
mov
jae
and
mov
inc
add
pop
inc
push
sbb
fbstp
rcl
mov
mov
call
dec
and
and
mov
adc
add
icebp
xchg
push
mov
ins
dec
movs
mov
in
arpl
mov
out
cmc
cmp
popa
mov
jp
pop
std
je
adc
sbb
sbb
jle
stos
cmps
jnp
and
xchg
pop
in
xor
enter
mov
ds
mov
jp
aas
mov
mul
xor
cmp
cmp
into
sti
js
adc
fwait
sbb
pop
mov
lea
dec
mov
aaa
sar
test
cwde
enter
lods
or
shl
jg
dec
add
adc
fcom
inc
inc
loopne
push
data16
sub
std
push
repz
pop
sar
jl
add
and
mov
mov
test
xor
sbb
mov
push
rol
cmps
out
xor
dec
repnz
push
in
imul
stos
shl
icebp
nop
inc
cmp
cmp
add
lods
mov
jno
or
jmp
xchg
int
ror
push
xor
cmp
cmp
dec
cmp
inc
xchg
push
test
mov
or
imul
enter
mov
push
sub
pop
mov
adc
sub
adc
push
fnstsw
sub
cli
pushf
adc
out
std
xadd
push
and
sbb
(bad)
dec
jno
dec
push
into
dec
or
sbb
push
push
mov
or
jle
dec
and
and
cmp
int3
add
icebp
mov
mov
mov
pop
out
daa
mov
loope
(bad)
jp
mov
rcl
adc
mov
pop
arpl
ror
call
jg
rcr
repz
fist
stos
pop
repnz
js
out
xlat
fwait
mov
xchg
and
inc
cmp
je
test
aad
or
dec
dec
jg
add
mov
jae
mov
adc
into
aaa
sbb
jecxz
inc
sbb
fcmovnb
fnsave
sar
fistp
pop
dec
in
test
jo
add
push
cmc
add
jp
push
test
sbb
cmp
rcr
or
in
sbb
jecxz
test
sub
arpl
jne
out
push
shl
add
cmps
das
call
js
dec
fimul
mov
add
adc
dec
out
retf
ret
jg
mov
mov
mov
(bad)
adc
pop
ret
adc
add
xor
or
inc
sbb
jae
or
call
dec
aas
push
fcmovb
outs
adc
or
scas
pop
jle
out
ins
inc
or
cmp
inc
aad
jmp
fdiv
imul
sbb
xor
stos
fisub
jge
fistp
movs
add
stos
fadd
je
into
mov
inc
rol
mov
icebp
sti
push
push
sbb
mul
imul
mov
lods
jae
outs
adc
call
mov
cli
sti
cmc
data16
rol
hlt
sbb
popa
mov
ret
jno
es
push
mov
jo
iret
fst
sub
mov
clc
mov
fisttp
or
das
dec
mov
test
in
sahf
shl
cmc
and
sbb
ja
or
lods
out
call
dec
dec
sti
ror
(bad)
push
jnp
adc
xchg
sar
outs
call
sub
jge
push
mov
sahf
push
mov
xor
arpl
mov
popa
cmp
and
xchg
jmp
adc
imul
jb
aad
mov
jl
retf
sub
inc
jl
test
inc
push
jg
aam
xor
into
shr
adc
mov
mov
ucomiss
pop
test
ins
aas
fiadd
js
pop
sub
loopne
dec
push
popa
into
stos
push
sbb
push
sbb
call
repz
lock
(bad)
dec
fld
cmp
(bad)
fisub
xlat
push
adc
or
xchg
cs
fimul
mov
inc
mov
pop
xor
mov
out
mov
retf
sub
ins
mov
push
rcl
or
push
dec
add
shl
shr
and
int3
shl
push
or
dec
js
es
ret
xlat
shl
cs
fxch
ret
nop
xchg
add
dec
les
add
cmp
pmulhuw
cdq
cmc
mov
hlt
popa
imul
dec
mov
pushw
adc
loop
add
mov
stos
push
jae
push
or
push
jo
dec
dec
ins
test
mov
cmp
ret
jmp
sbb
xchg
mov
or
cmp
data16
pop
dec
cmp
sub
cli
push
add
fbld
fild
pop
dec
adc
(bad)
jbe
arpl
pop
sti
mov
test
pop
jl
add
sub
mov
pop
dec
mov
movs
push
or
xor
mov
or
cs
movs
mov
out
sbb
ret
xchg
into
(bad)
dec
das
jle
cmp
fiadd
in
enter
jmp
xchg
sub
ret
sbb
in
mov
adc
jns
mov
sbb
mov
(bad)
xor
jg
aas
jecxz
cdq
lock
and
cmps
sbb
retf
push
inc
and
loope
call
and
imul
retf
mov
daa
in
out
(bad)
sbb
test
mov
loop
pop
aam
fidivr
jl
adc
pop
mov
ret
dec
aad
jno
fimul
sub
cdq
and
mov
jmp
test
mov
add
inc
mov
xchg
scas
inc
pop
sub
mov
xor
and
xor
aaa
aas
lods
dec
movs
cmp
jle
mov
popa
(bad)
mov
mov
enter
fadd
pusha
xchg
fidiv
pushf
pop
int
pop
imul
inc
out
clc
add
jb
pop
mov
mov
fdivr
inc
int
adc
pop
and
hlt
mov
call
fst
adc
jp
sub
jbe
movs
aam
dec
sub
jae
ja
ins
and
jecxz
pop
fwait
jb
aaa
mov
mov
(bad)
mov
ja
sbb
retf
loop
adc
jge
push
rcr
mov
jne
fwait
push
dec
loop
shl
and
ins
push
std
(bad)
inc
mov
sbb
imul
jmp
rol
fadd
gs
pop
jmp
jb
lods
bound
xor
ins
ins
clc
pop
pop
pop
in
jg
push
std
jmp
dec
retf
jmp
div
mov
ds
inc
mov
dec
xchg
inc
(bad)
sbb
push
inc
jecxz
ja
js
iret
call
cli
mov
neg
fwait
ret
jns
aaa
sbb
sub
sub
pop
jp
mov
jle
adc
shr
mov
add
shl
cmp
sar
jnp
or
jnp
sbb
xor
mov
aad
js
mov
inc
je
call
addr16
bound
fsubp
retf
xchg
adc
sub
mov
mov
push
cdq
fmul
jge
sbb
fisubr
cmp
js
fcompp
or
sbb
jo
leave
inc
ins
retf
fcom
loopne
fsub
mov
mov
pop
push
in
push
ins
stos
xor
inc
xchg
push
mov
movs
push
or
les
pop
neg
daa
retf
rsqrtps
mov
jmp
sbb
cmp
mov
and
mov
pop
mul
mov
js
cld
(bad)
(bad)
cmp
out
rcl
sahf
mov
gs
(bad)
add
adc
cmc
(bad)
pop
pop
ret
out
mov
ins
dec
bound
sub
inc
mov
shr
cmp
pop
adc
pop
add
push
cs
pop
std
and
or
add
sbb
push
jno
push
add
dec
xchg
push
xchg
retf
push
imul
adc
dec
sahf
mov
std
in
retf
sub
sbb
leave
jo
jl
pop
inc
dec
xor
int
sub
(bad)
aam
add
daa
leave
ins
mov
xchg
test
loopne
pop
shl
xor
std
dec
clc
pop
mov
lock
stc
or
jb
pop
arpl
into
sub
mov
aad
mov
mov
xor
rcr
pop
test
mov
js
mov
adc
inc
xor
nop
test
jnp
imul
bound
cmp
push
and
fnsave
cs
cmp
push
jnp
mov
out
mov
cmps
ret
es
pushf
bound
mov
loope
inc
jle
mov
or
cmp
add
push
xchg
push
jl
mov
mov
xchg
daa
mov
cmp
call
dec
fisubr
scas
xchg
inc
sar
jbe
aam
(bad)
push
cs
jecxz
adc
cwde
mov
das
pushf
or
cmp
stos
and
mov
jae
sbb
je
mov
inc
cmp
cmp
rcr
xchg
rcr
iret
add
or
or
fsub
inc
loop
inc
(bad)
adc
xchg
fwait
cdq
out
je
sahf
jmp
in
imul
mov
cmp
sbb
fwait
scas
shl
mov
pop
jno
lea
adc
dec
fdivr
pop
mov
daa
and
cmp
xchg
comiss
mov
mov
push
hlt
popa
mov
div
out
in
addr16
dec
pop
imul
sbb
sub
shl
xchg
rcl
jp
dec
jecxz
push
push
rol
cmp
mov
xchg
inc
xor
es
(bad)
mov
test
sub
dec
cmp
jmp
or
mov
icebp
adc
fdiv
(bad)
or
jae
mov
add
jo
int
mov
sbb
pushf
add
jecxz
jmp
push
pop
jge
loopne
imul
mov
ret
pop
dec
jae
in
lea
cdq
repz
leave
jb
pushf
mov
mov
xchg
enter
cmp
pop
jae
lahf
sub
frstor
mov
mov
(bad)
xchg
(bad)
inc
imul
adc
ss
sbb
inc
inc
leave
scas
das
lds
cdq
xchg
adc
or
movlps
je
mov
jmp
not
fisttp
loopne
adc
add
mov
daa
call
call
mov
and
sbb
mov
cmp
cmps
adc
shr
xchg
add
aas
pop
test
test
cdq
icebp
fld
jmp
add
scas
mov
in
cmp
xchg
inc
mov
popa
cmps
cld
out
mov
shr
cmps
rcr
xchg
sub
cmp
sbb
cld
sti
jo
inc
out
popf
dec
pop
dec
xor
popa
and
loop
pop
leave
arpl
adc
pop
xchg
mov
and
push
sbb
mov
sub
sar
pop
dec
cmps
or
gs
bound
inc
inc
fild
add
mov
lock
int
cwde
sbb
push
test
sahf
clc
jns
sub
lock
mov
sar
data16
mov
fild
ins
out
stos
lahf
popa
add
push
lock
stos
push
repz
sbb
aaa
test
or
push
sar
(bad)
fidivr
ret
mov
mov
stc
out
test
(bad)
inc
or
mov
xchg
movs
lock
xchg
or
dec
rcl
inc
xlat
mov
fcom
cmp
mov
xor
loope
xor
adc
and
mov
mov
and
out
fbstp
mov
xor
dec
dec
(bad)
daa
push
dec
rsqrtps
pop
mov
inc
or
sbb
xchg
rcl
mov
call
add
shl
imul
push
movs
sbb
in
addr16
cmp
push
hlt
mov
fwait
pop
xchg
adc
dec
push
jae
ds
fisub
ins
adc
stos
test
retf
xchg
inc
cmp
mov
retf
pop
mov
mov
sbb
(bad)
or
popa
push
mov
pusha
cmp
mov
out
sahf
into
out
cli
adc
cmps
add
cld
add
shr
jl
and
add
ins
fwait
mov
jp
(bad)
(bad)
mov
test
cmps
cdq
inc
pop
int
addr16
addr16
cmps
in
stc
and
add
in
test
neg
sub
jecxz
sbb
pop
sbb
cmps
inc
inc
push
mov
push
lock
dec
add
pop
sub
adc
stc
loopne
sti
fdivr
or
pop
mov
repnz
bound
cmp
lahf
jb
pop
aaa
(bad)
(bad)
push
cld
out
jl
sub
sub
das
jne
das
jmp
cld
ins
xor
sub
and
add
cmc
xadd
mov
fdivr
mov
call
xchg
sub
test
adc
inc
mov
inc
xor
pushf
jge
lahf
lahf
push
push
lahf
cmp
sbb
icebp
jb
sbb
ja
popf
sub
dec
jo
out
dec
std
cmps
mov
inc
adc
dec
and
and
sub
mov
push
lods
inc
mov
(bad)
mov
mov
jbe
stos
pop
mov
inc
jecxz
adc
add
call
out
cdq
mov
pop
cmp
shl
sub
lds
and
bound
fiadd
xor
out
jp
jmp
outs
pop
enter
inc
sbb
in
retf
lds
add
pop
xor
data16
mov
add
daa
movs
fidiv
stc
mov
mov
jg
outs
dec
xchg
data16
fnsave
sahf
leave
mov
retf
icebp
fs
jmp
jne
pop
cdq
retf
or
adc
jmp
cmc
in
sub
pop
stc
push
mov
push
pop
or
mov
sbb
jae
xchg
fdivr
mov
cdq
or
xchg
in
outs
push
push
adc
xchg
jo
loop
scas
(bad)
call
mov
sbb
in
mov
(bad)
(bad)
xchg
fsub
add
or
push
lock
daa
cli
pop
dec
pusha
or
adc
pushf
pop
cs
scas
xor
inc
push
loopne
(bad)
jp
rcl
mov
test
and
jle
pop
jl
and
adc
mov
sbb
adc
xchg
cwde
dec
jo
test
push
mov
out
mov
out
sbb
inc
movs
pop
jns
adc
pop
dec
push
jmp
retf
test
jbe
inc
das
jb
retf
aam
(bad)
mov
loop
aad
das
sub
xor
hlt
push
les
mov
xor
(bad)
loopne
cmp
xlat
mov
pushf
cmps
push
imul
(bad)
pusha
mov
retf
lods
lahf
imul
jo
aaa
mov
loop
lods
in
aam
dec
inc
out
mov
out
or
pop
pushf
pop
and
lds
iret
retf
lock
ss
outs
nop
inc
cmp
mov
xchg
ret
mov
idiv
sbb
mov
or
sub
ror
and
cmp
inc
les
push
push
sti
jo
push
push
add
mov
mov
pop
outs
cmps
stc
dec
outs
call
inc
in
mov
mov
sub
pop
leave
jbe
imul
and
sar
adc
jmp
xchg
xchg
adc
psubsw
vmaxsd
jmp
jno
test
daa
mov
int
js
fwait
mov
inc
jo
inc
mov
rcl
push
ror
mov
ficomp
push
mov
mov
mov
jo
jle
(bad)
cld
xor
loope
xor
mov
mov
add
jecxz
adc
inc
jle
jb
hlt
mov
ds
stos
in
mov
aam
pusha
mov
out
xor
xchg
and
icebp
push
pusha
loope
aas
sbb
mov
jbe
ss
jne
jae
mov
mov
mov
inc
cmps
mov
sub
jmp
ret
imul
pop
mov
test
pop
and
idiv
mov
or
dec
xor
scas
xchg
test
inc
mov
pop
dec
add
pop
xchg
out
jnp
retf
cmps
inc
mov
or
lahf
sbb
jmp
adc
inc
ja
lds
add
push
or
out
jge
jns
adc
and
test
ret
icebp
loopne
dec
cmps
xlat
cli
push
sub
cmc
call
mov
cwde
sbb
mov
loopne
pop
das
fst
pop
pop
dec
push
inc
test
jmp
out
imul
(bad)
in
or
enter
cmp
movs
je
sbb
and
mov
dec
rol
rcl
xor
inc
mov
dec
xor
jmp
cmp
xor
mov
jbe
test
pop
js
mov
mov
or
mov
out
sub
sub
mov
and
std
add
enter
dec
pop
and
pop
and
jmp
div
test
es
nop
jo
je
and
fnstcw
jge
cmp
iret
cwde
cmp
aam
repnz
bound
jle
cmp
push
sbb
fiadd
jle
push
jnp
inc
jno
and
scas
push
sar
push
push
das
shl
and
popa
mov
sets
imul
and
retf
cmp
sbb
movs
jns
inc
stos
sub
inc
add
jp
add
jge
(bad)
cmps
adc
shl
mov
iret
dec
inc
xor
ja
push
xchg
pop
dec
adc
adc
mov
adc
sbb
jbe
sbb
adc
es
leave
or
jmp
mov
adc
mov
int
add
xor
(bad)
nop
call
mov
add
mov
sahf
adc
mov
xor
xchg
aam
adc
xor
pop
mov
lds
fcmovnbe
repz
bswap
in
jg
mov
test
xchg
xchg
sbb
stc
stc
(bad)
push
cmc
(bad)
cmps
push
leave
leave
movs
or
mov
ret
or
jno
and
mov
cmps
mov
adc
arpl
imul
aad
cld
inc
rcr
xchg
cld
aad
lds
jge
(bad)
shr
mov
sbb
stc
mov
arpl
add
cmp
mov
shr
push
mov
adc
outs
fcomip
popf
sahf
lock
lds
int
inc
test
imul
mov
or
mov
adc
jne
xchg
dec
jmp
std
rep
pop
lea
popa
cmps
mov
push
gs
pop
jo
xchg
mov
fs
fild
popf
fprem1
xor
pop
or
or
stos
jns
ret
repz
sbb
or
and
and
in
cmp
cmps
jnp
cwde
jb
push
into
arpl
bound
rcr
shr
repz
mov
dec
lods
mov
mov
(bad)
dec
push
loope
mov
icebp
not
mov
ins
xor
dec
(bad)
jmp
cmps
aaa
movs
push
adc
aam
into
cdq
jbe
jae
retf
scas
jecxz
sbb
xor
mov
pop
data16
mov
sub
xor
dec
jp
mov
fs
imul
cdq
dec
int3
sbb
sbb
cmp
sbb
stos
push
stos
xchg
(bad)
hlt
jbe
sbb
movs
push
ins
or
fmul
or
xchg
sbb
jge
daa
mov
popa
lods
adc
popf
jg
test
inc
ret
inc
xchg
mov
inc
pop
inc
xchg
pop
sbb
pop
add
adc
scas
add
cli
sbb
lods
pop
repnz
inc
jp
dec
add
push
xchg
das
cwde
or
int
sub
out
(bad)
icebp
das
push
sub
xchg
daa
jp
mov
cmp
dec
pop
jae
mov
jp
test
or
out
and
aas
inc
sbb
xchg
aas
aad
adc
fucomip
xchg
xor
mov
sbb
cmps
nop
and
push
mov
push
sbb
and
fnstcw
into
push
mov
push
imul
ins
(bad)
int
in
leave
loop
sbb
mov
and
mov
mov
dec
ret
int
mov
fwait
test
push
clc
movs
or
dec
adc
into
xchg
adc
cmp
rcr
or
push
movs
enter
dec
imul
dec
(bad)
or
in
and
call
lods
test
test
in
movs
dec
xor
(bad)
fistp
mov
cmc
mov
push
jmp
cmps
inc
imul
cld
push
mov
ins
ret
xchg
cmp
xor
xchg
add
imul
xchg
mov
jb
or
pop
mov
rcr
add
(bad)
and
or
or
aad
clc
add
xlat
mov
popf
mov
inc
repnz
xchg
push
lahf
sub
jne
inc
sti
out
lods
and
popa
(bad)
cli
pop
(bad)
xchg
pop
and
pop
shr
retf
and
iret
(bad)
imul
dec
pop
std
xlat
ss
scas
or
mov
mov
dec
xor
pop
add
retf
fwait
scas
push
ret
and
scas
and
cmp
cmp
sub
fsub
dec
jbe
cli
adc
cmps
sahf
mov
es
jo
inc
pop
inc
adc
sar
popf
ss
sub
inc
sub
cdq
push
int
mov
repz
xlat
mov
sbb
mov
inc
pop
inc
test
push
cmps
jp
lods
inc
ja
push
jae
rcr
mov
cmp
and
mov
cmps
lods
jmp
mov
sar
cmp
stos
xor
sub
or
sub
jmp
xor
xlat
ins
cmp
fcom
xchg
ds
inc
sbb
int
retf
dec
adc
and
rep
scas
cmps
or
jp
cmp
aad
aaa
pusha
sbb
push
add
inc
sar
add
push
aas
arpl
jl
leave
xor
push
addr16
mov
mov
xchg
es
push
outs
lock
in
rdpmc
scas
or
les
pop
cmp
or
leave
xlat
mov
sti
lds
inc
add
push
jmp
nop
mov
cli
fwait
cdq
cmc
xor
push
cmp
(bad)
lods
xchg
imul
mov
cld
jmp
test
div
mov
mov
pusha
popa
and
sbb
cs
or
or
sub
jp
test
out
mov
popf
in
fisub
mov
or
rol
test
inc
and
lahf
mov
pop
pop
outs
cmps
(bad)
icebp
ror
jo
(bad)
std
jae
data16
out
lods
test
out
add
int
fcom
jp
cmc
xor
jl
jge
sbb
mov
add
push
and
loopne
push
add
add
pop
xchg
sub
test
adc
lods
sbb
dec
xchg
inc
pop
adc
repnz
mov
out
pop
sbb
div
sub
mov
repnz
pop
mov
sub
mov
fwait
movs
(bad)
in
(bad)
sahf
inc
push
popf
cld
jbe
jae
mov
shl
fwait
(bad)
test
mov
dec
or
pop
mov
pushf
js
jnp
xlat
push
inc
outs
imul
in
daa
in
mov
int3
mov
shl
dec
mov
(bad)
and
dec
enter
mov
dec
sti
and
mov
cmps
bound
shr
ja
adc
mov
data16
shr
add
add
sti
sub
pop
aad
dec
retf
mov
adc
sbb
or
aas
cdq
call
sub
sbb
lods
inc
hlt
mov
pop
(bad)
xlat
fdiv
and
fmul
clc
les
push
clc
pop
mov
mov
jmp
movs
std
bound
mov
push
fld
ja
pop
push
mov
lds
test
dec
xchg
xlat
xor
pop
mov
and
lock
mov
lods
dec
pop
xchg
jge
cmps
add
test
xchg
sbb
ins
popf
(bad)
jmp
push
adc
mov
out
pop
repz
fidivr
cmp
stos
fnsave
loope
cmps
fiadd
cmp
out
call
(bad)
hlt
scas
jb
in
adc
sub
sub
ret
out
push
cmp
mov
xor
xchg
mov
std
nop
xchg
inc
pop
(bad)
lods
pop
not
call
mov
mov
cdq
dec
fidiv
ret
inc
adc
sub
ins
stos
mov
loope
ss
pop
aam
push
and
(bad)
jns
sbb
dec
in
int
adc
punpckhbw
cmps
pop
jle
idiv
(bad)
dec
les
mov
out
loope
add
dec
push
mov
dec
ins
enter
mov
mov
ror
call
jmp
pushf
pusha
(bad)
pop
out
sub
ins
cmps
or
daa
retf
xchg
mov
ja
retf
imul
mov
outs
outs
push
mov
out
retf
xchg
mov
push
xchg
movs
fs
pop
jo
ins
int
or
in
inc
rcr
sub
icebp
bound
push
je
lock
mov
sbb
fwait
or
jecxz
cmp
cli
mov
and
int3
popf
sbb
pop
mov
lods
or
aad
xchg
(bad)
xor
in
add
xchg
dec
cvtdq2ps
and
inc
dec
scas
outs
xor
dec
add
mov
rcl
(bad)
fcomip
daa
mov
add
xor
mov
shr
sub
jo
call
iret
mov
pop
sbb
ins
fisub
push
test
and
push
ds
aad
shl
xor
mov
aad
jle
jp
fnstenv
aaa
dec
mov
mov
int3
jmp
add
inc
sbb
xchg
mov
das
add
inc
jo
adc
repz
fidivr
test
push
inc
xor
push
xor
dec
je
sub
int
pop
sub
xchg
push
mov
or
jno
jne
adc
jo
push
dec
push
xor
shr
icebp
sti
fcomp
dec
loopne
cmps
mov
xchg
mov
(bad)
pop
cwde
pop
jb
mov
loopne
fs
push
xchg
arpl
in
xor
mov
out
imul
jo
lahf
scas
out
aaa
add
cmp
(bad)
pop
and
pop
pop
fstp
jge
add
xchg
les
jmp
sub
scas
call
mov
and
pop
or
imul
call
xlat
jp
(bad)
mov
movs
dec
dec
sub
mov
pop
jo
inc
icebp
test
jbe
loop
jg
or
icebp
sub
dec
dec
mul
adc
sbb
fistp
fstp
aad
fwait
or
mov
out
jle
dec
xor
test
pop
xor
or
jecxz
out
xor
jecxz
push
or
enter
or
sub
bound
loop
pop
mov
mov
dec
mov
and
in
aaa
xlat
dec
push
pop
cmp
les
sub
loop
mov
repnz
test
jne
cmps
and
ds
lds
jno
out
addr16
or
shl
cmp
aad
jbe
sub
sbb
push
js
nop
xor
sub
ja
loop
js
mov
sbb
mov
mov
ja
out
sub
cmps
jnp
mov
adc
scas
ins
in
cwde
arpl
mov
jnp
add
inc
fbstp
daa
pop
sbb
xor
repz
test
stos
movs
enter
popa
js
pusha
cmps
popa
inc
arpl
in
mov
aad
xor
pop
test
inc
es
out
in
mov
(bad)
cdq
mov
dec
and
mov
mov
inc
les
cmc
xchg
rol
and
push
xlat
pop
(bad)
cmp
sti
xchg
loopne
stc
mov
cmp
sub
mov
sahf
movs
ins
push
add
pop
(bad)
ins
enter
ja
or
sbb
mov
sub
aaa
jb
pusha
add
or
dec
mov
popa
cmp
cmps
loope
jg
out
push
idiv
arpl
mov
pushf
xchg
mov
nop
sbb
cs
or
add
push
fadd
mov
push
jge
in
lods
addr16
pop
dec
jns
mov
int
jnp
mov
in
adc
repz
jmp
cmp
mov
inc
jo
stc
mov
ins
(bad)
cmps
adc
ins
mov
sbb
test
and
push
iret
mov
fwait
or
or
and
fist
adc
or
mov
push
pop
aad
ja
je
retf
stc
xor
inc
dec
pop
scas
pmuludq
push
lds
(bad)
adc
mov
icebp
inc
fild
ins
sbb
mov
push
inc
(bad)
daa
pop
pop
or
(bad)
inc
xchg
call
clc
cli
pop
aad
xor
pop
inc
std
sar
mov
and
or
lds
cdq
loope
pop
xlat
jl
adc
dec
in
jne
adc
cmp
xor
push
sub
xor
dec
push
lds
xchg
mov
xor
les
dec
addr16
rcl
ror
xchg
sahf
(bad)
daa
and
outs
nop
mov
addr16
lock
xchg
lods
hlt
xchg
shl
inc
jnp
xchg
pushf
les
lods
mov
and
imul
or
push
imul
out
scas
imul
mul
xor
cmp
test
aam
jle
shl
push
out
call
sar
dec
cmps
add
add
push
jae
pushf
sub
movs
pop
jo
xlat
popa
xchg
pop
and
pop
mov
div
add
adc
lahf
(bad)
in
xchg
mov
jle
cmp
test
add
shr
stos
ins
inc
or
sbb
push
pop
leave
sbb
jmp
ja
les
pushf
dec
aas
xor
scas
xchg
test
jl
xchg
shr
mov
sbb
hlt
gs
inc
pop
mov
mov
mov
or
and
sub
add
mov
ja
jg
push
ins
fisttp
outs
inc
sbb
inc
or
cld
je
push
push
pop
push
popf
xchg
les
repz
aad
xor
repz
pop
or
add
loope
(bad)
cmp
cld
adc
sub
stc
dec
ja
pop
push
retf
addr16
in
aam
mov
and
inc
jp
dec
in
cmp
lahf
gs
adc
popf
cmc
mov
and
jbe
repz
pop
sub
loop
adc
inc
icebp
add
call
addr16
nop
cmp
xchg
mov
aas
add
mov
pop
test
movs
mov
scas
push
rcr
mov
sbb
out
es
sbb
pop
ja
cmp
jns
in
xchg
pusha
std
inc
sub
xchg
xchg
jl
push
outs
ret
fcomp
adc
rcr
inc
sub
ror
push
cmp
sbb
lods
mov
sbb
push
inc
ja
das
ins
or
cmp
xchg
mov
jecxz
ficomp
cmp
or
loop
neg
in
in
ja
int3
imul
pusha
loopne
and
mov
mov
out
and
and
ret
adc
adc
mov
inc
mov
sar
xchg
ss
mov
dec
jg
mov
xchg
jge
add
cmps
popf
xor
sbb
retf
cmp
sbb
cmp
aad
sub
ja
repz
(bad)
bound
push
fwait
lahf
adc
xor
adc
or
ret
pushf
mov
movs
mov
xor
in
sti
repz
loope
(bad)
(bad)
and
(bad)
into
jnp
dec
mov
cmp
lods
mov
and
arpl
popf
jnp
mov
xchg
adc
out
iret
dec
fild
stos
out
nop
nop
mov
push
dec
xchg
mov
fbstp
xor
popf
sbb
adc
mov
mov
mov
jmp
adc
sbb
xchg
sbb
jl
mov
pop
and
icebp
or
and
sar
mov
push
rol
je
loopne
mov
xchg
or
retf
adc
movs
cmps
xchg
sbb
xor
mov
in
inc
shl
test
xchg
jno
push
push
fdivr
cmp
mov
fdiv
and
pop
retf
lahf
inc
test
sub
into
sbb
jns
xchg
and
and
sbb
(bad)
xlat
jnp
test
cdq
xor
sahf
repz
out
call
je
sbb
call
(bad)
pavgw
xlat
scas
cwde
das
rol
xchg
test
dec
mov
sbb
leave
aad
cwde
mov
or
push
mov
pop
add
call
lea
jbe
mov
stos
pop
push
mov
aad
mov
xchg
fstp
(bad)
add
cmps
mov
dec
sahf
mov
das
fldenvw
mov
imul
(bad)
rol
sbb
push
adc
div
pop
imul
icebp
xchg
adc
arpl
push
paddusw
call
pushf
mov
sub
mov
aas
adc
adc
or
xchg
xchg
mov
dec
aaa
xor
adc
jbe
not
repnz
repz
mov
push
les
cdq
mov
or
iret
sbb
mov
(bad)
rcr
dec
imul
and
sub
sahf
test
pop
inc
adc
pop
inc
xor
mov
fcomp
lods
push
out
in
(bad)
out
or
enter
es
aas
in
cmp
outs
cmp
pusha
push
mov
push
jge
in
out
(bad)
cmp
lods
mov
and
sub
mov
cs
ja
mov
retf
repz
(bad)
cdq
adc
pop
jle
int
test
sar
or
jecxz
in
les
sbb
jo
mov
mov
in
rcl
cmps
in
jl
and
out
push
inc
pushf
sbb
hlt
pop
stos
aad
and
ins
mov
into
hlt
cmc
jg
jne
pop
inc
adc
scas
pop
and
into
lea
xor
xchg
lds
in
cmp
in
push
inc
les
repnz
cmp
lods
mov
bound
outs
int
and
iret
hlt
push
ja
xor
sub
into
dec
push
js
inc
je
out
nop
and
jns
rol
in
icebp
out
int
sub
xchg
sbb
out
xchg
mov
mov
mov
xor
add
fisttp
lods
mov
mov
pop
mov
and
push
and
pop
call
mov
xchg
lock
jmp
inc
and
push
movs
mov
(bad)
stc
sub
mov
adc
cmp
jb
or
data16
xchg
arpl
xchg
inc
call
xor
inc
cs
repz
inc
das
fld
in
(bad)
leave
cmc
push
xchg
xchg
out
inc
xor
pop
mov
push
xor
adc
scas
dec
shl
sbb
jmp
sub
test
mov
mov
sub
mov
ins
leave
mov
rcr
pop
retf
call
dec
mov
xchg
imul
inc
and
icebp
cmp
ss
pop
push
out
mov
faddp
mov
fistp
repz
sar
cmp
cwde
ret
int
ins
rcl
and
mov
adc
and
mov
out
test
dec
sub
sub
cs
jne
sbb
cs
or
sahf
jne
sub
cmp
jb
sti
and
cmps
retf
inc
push
jle
xor
loope
nop
outs
stos
outs
pop
push
mov
je
push
repnz
(bad)
(bad)
fidivr
bound
push
das
dec
mov
je
nop
outs
sbb
adc
jg
cmp
xchg
ret
lds
aas
or
xchg
mov
icebp
mov
(bad)
dec
jmp
push
pop
mov
and
outs
out
cs
push
test
mov
stos
inc
sbb
(bad)
imul
fisttp
push
jnp
add
int3
dec
adc
retf
dec
adc
jnp
mov
xchg
shr
push
dec
dec
xor
inc
out
push
and
mov
xchg
(bad)
ins
xchg
aaa
mov
inc
sub
sub
cli
and
mov
mov
fidivr
mov
pop
ret
jno
std
xor
stos
ss
sbb
adc
push
movs
jl
jge
in
cmps
cmps
push
xlat
push
dec
adc
jo
ins
in
push
push
fsub
rcl
test
cmp
scas
out
xchg
xchg
adc
gs
jno
aad
cmp
xor
mov
mov
xor
mov
and
jnp
push
dec
dec
jmp
dec
jb
and
adc
adc
push
sub
cmp
scas
test
out
mov
inc
jb
adc
dec
jecxz
outs
sbb
gs
add
sub
rcl
fiadd
popa
inc
or
xchg
test
iret
imul
scas
pushf
cmp
mov
movs
pop
mov
pop
dec
jl
add
ror
pop
stc
les
jmp
imul
push
popf
cmps
test
pop
(bad)
xor
sar
mov
jp
loope
mov
adc
test
jmp
xchg
sub
sbb
(bad)
push
cmp
shr
pop
loopne
dec
push
sahf
jno
pop
jne
push
xor
mov
mov
jmp
popa
daa
cmp
ss
mov
mov
xchg
jl
ret
cmp
mov
arpl
in
mov
inc
cmps
aam
jb
je
test
loopne
lods
dec
shl
leave
imul
dec
(bad)
(bad)
mov
lods
pop
lds
xchg
pop
sub
ret
push
xor
cmp
adc
int3
mov
aas
mov
and
outs
call
(bad)
push
cmp
stos
stos
nop
je
aam
jecxz
mov
out
outs
and
cmp
in
into
mov
sbb
mov
pop
xor
aam
xor
or
push
pop
iret
cmps
jno
pop
cmp
fistp
iret
pop
imul
xor
mov
loop
inc
add
cmp
mov
cmp
pop
popf
cmps
addr16
rol
jge
ret
sahf
cmp
into
push
add
and
xchg
mov
add
mov
and
lahf
mov
mov
enter
jle
adc
cdq
sti
xchg
add
imul
nop
cmp
stc
jge
js
arpl
inc
fbld
sahf
lock
loope
rol
into
stos
out
hlt
js
jg
cmp
ds
mov
jg
scas
inc
push
or
mov
sahf
and
jg
nop
enter
scas
mov
jo
aas
and
sub
push
inc
mov
cli
shl
pop
push
pop
sbb
inc
jno
xchg
mov
jmp
bound
xor
test
inc
xchg
inc
add
jae
int
frstor
mov
repnz
(bad)
test
and
inc
sahf
fcmovu
cs
sbb
fmul
cdq
xchg
xchg
gs
sbb
sub
outs
iret
shr
es
adc
pop
xchg
test
push
add
icebp
div
shl
dec
aas
test
shl
lods
ret
call
jmp
hlt
pop
rol
dec
jge
ss
call
into
stc
push
sbb
jns
dec
jp
mov
cmp
jno
xor
shl
ror
pop
mov
inc
jae
pop
pop
and
mov
cmp
and
dec
sub
shl
data16
aas
jl
(bad)
aam
cmp
jecxz
inc
jp
pop
adc
mov
cmps
push
pop
xchg
inc
inc
inc
retf
and
sbb
hlt
xor
ds
inc
and
xchg
ds
lock
ds
mov
sbb
nop
cmp
mov
adc
std
fnstenv
lods
push
pushw
mov
out
sbb
jb
rol
mov
inc
adc
les
pop
scas
xor
sub
jbe
mov
rol
icebp
cld
push
je
mov
mov
add
pop
and
push
sbb
add
pop
loop
adc
mov
ins
lods
push
jmp
stc
sbb
loop
push
aad
aad
mov
push
xchg
inc
mov
(bad)
xchg
inc
aas
cmp
add
mov
stc
mov
push
je
adc
xchg
pop
jg
test
and
and
ds
jmp
dec
xchg
je
sbb
xchg
in
stc
jns
iret
add
repnz
adc
retf
xlat
mov
or
in
aam
popf
xor
push
lods
adc
lods
loop
xchg
lock
lock
mov
int
xlat
ret
loopne
dec
pop
xor
scas
repnz
lods
cwde
cmp
xchg
outs
mov
shl
sti
cmp
outs
and
in
lods
jp
xchg
clc
push
sahf
movs
rol
sbb
xor
xchg
push
pop
or
xor
aaa
cwde
xchg
retf
push
out
mov
aaa
loope
pop
sbb
fst
mov
inc
inc
xor
mov
mov
mov
inc
mov
ret
sub
or
je
cmp
mov
out
pop
mov
inc
ret
imul
cmc
(bad)
cmc
mov
jno
(bad)
loop
bound
push
cmc
stos
sub
mov
dec
cwde
js
inc
xor
pop
pop
leave
jmp
or
es
pop
push
aas
movs
rol
repnz
pcmpgtb
push
lods
cmp
scas
adc
mov
repnz
cmp
daa
push
inc
adc
jg
push
sub
outs
ins
scas
or
cmps
cmp
(bad)
pop
lods
(bad)
push
ins
loopne
mov
xchg
mov
sbb
fnsave
mov
gs
int
push
nop
cmps
mov
lahf
sbb
or
loop
js
dec
cmps
fcomip
xor
xor
popf
cmps
push
jb
or
xor
loopne
adc
mov
inc
xchg
fst
mov
xchg
cdq
imul
mov
gs
jno
imul
stos
test
jge
enter
ss
movs
adc
jge
cmp
neg
aad
jmp
fist
scas
jns
rol
adc
fdiv
mov
mov
retf
retfw
push
mov
ds
push
or
movs
out
es
push
mov
in
mov
test
ds
push
pusha
push
in
sbb
call
(bad)
(bad)
ss
dec
or
repz
lock
in
iret
xchg
xchg
clc
inc
arpl
and
div
push
mov
sub
ss
sub
or
xchg
add
(bad)
jnp
ficomp
sti
mov
mov
not
adc
cmp
pop
and
or
pop
mov
pop
ficom
dec
lea
mov
int
xor
sub
mov
mov
mov
repz
rcl
jne
push
mov
add
or
xchg
sahf
lahf
loopne
repnz
sar
cmp
in
xchg
sbb
popf
jmp
push
cld
cmc
inc
add
mov
aas
dec
mov
cdq
cwde
mov
xchg
in
and
retf
cmp
cmps
inc
cdq
hlt
and
pop
aas
jnp
pop
sbb
lods
pop
push
push
outs
jb
dec
int
into
pop
ja
sub
push
leave
scas
xchg
cli
repnz
rcl
(bad)
push
fisubr
push
push
fiadd
mov
mov
cli
adc
leave
popf
repz
jge
cmps
xchg
or
arpl
sbb
sbb
loop
adc
jmp
sti
cmps
les
pop
sbb
lods
hlt
add
movs
popf
mov
shl
inc
pop
dec
inc
in
xchg
jbe
mov
out
xchg
pop
mov
dec
add
push
jp
push
inc
lock
pusha
cmp
or
outs
icebp
cmp
fistp
add
dec
ret
or
repnz
mov
cmps
sub
jb
sar
xchg
inc
(bad)
call
push
or
jns
push
js
and
pusha
cwde
lds
bound
jg
or
sbb
and
cld
sti
jae
jmp
pop
jecxz
adc
lock
jo
xor
fistp
sti
inc
mov
cwde
or
mov
xor
push
xor
retf
cmps
mov
test
xchg
adc
enter
loopne
sub
neg
jp
inc
push
push
repz
les
lock
in
dec
out
inc
repnz
pop
xor
mov
not
ret
jge
repz
leave
jl
ins
mov
adc
imul
mov
push
sahf
test
frstor
inc
add
daa
sbb
xor
adc
push
dec
fild
jmp
std
cwde
mov
aas
cmps
fsub
in
push
xor
xchg
popa
xchg
mov
loopne
mov
hlt
(bad)
or
xchg
xchg
cwde
xlat
rcl
xchg
mov
test
xor
or
and
mov
sahf
jecxz
leave
cmp
popf
lock
test
rcr
jb
pop
call
aad
mov
xchg
mov
mov
push
mov
ucomiss
mov
adc
daa
push
push
dec
fcom
ja
dec
cmp
xor
mov
stos
sbb
data16
sbb
cmp
call
mov
jno
xor
push
fbstp
lods
inc
inc
cmc
int
mov
(bad)
ud0
cmps
jo
cmp
dec
test
(bad)
dec
icebp
inc
sbb
mov
jbe
retf
jmp
int
jle
add
ds
shl
xchg
in
pusha
pop
dec
pop
or
ins
inc
mov
dec
jp
test
in
stos
sub
cmp
mov
icebp
repz
mov
xchg
pop
inc
add
imul
test
xor
and
and
jmp
mov
jmp
fcomp
repnz
or
jp
stos
cmp
inc
cmp
fisttp
add
pop
test
and
mov
movs
fld
lds
push
(bad)
out
pop
aad
cdq
clc
xor
sti
mov
rcr
jns
sahf
cmp
inc
test
aad
(bad)
adc
xchg
addr16
mov
cmps
sti
call
mov
(bad)
stos
mov
jle
mov
fstp
cmc
dec
adc
dec
mov
jnp
pop
jae
ins
cmp
xor
(bad)
out
imul
jo
cmps
popa
sub
jb
jmp
repnz
fistp
movhps
in
push
into
addr16
xchg
imul
inc
push
in
add
mov
mov
fistp
add
jb
clc
push
popa
xor
adc
es
shl
jp
lods
sbb
cmpps
pusha
shl
aaa
pop
icebp
jns
in
mov
jo
pop
inc
iret
pop
aam
push
shl
sahf
mov
dec
inc
ret
rol
loop
jp
push
retf
dec
ja
call
inc
imul
fidiv
inc
sbb
retf
inc
jp
inc
out
dec
xor
in
dec
pop
adc
rcl
xor
xor
xor
cmc
push
jns
push
cli
pop
inc
push
push
ss
mov
dec
ds
out
out
fcomp
ror
push
jmp
jmp
popa
fcmove
nop
cmp
(bad)
push
inc
aad
jge
out
push
xor
and
out
xchg
dec
adc
jb
cmp
mov
or
movs
inc
sub
pop
jle
xchg
push
into
out
mov
sbb
jp
dec
push
push
pusha
loope
loopne
sbb
xchg
xor
inc
mov
call
inc
push
push
test
mov
ffreep
pandn
cmp
icebp
jmp
(bad)
and
mov
ss
push
out
push
in
xchg
les
adc
lahf
std
(bad)
stos
xchg
pop
int3
arpl
aas
test
(bad)
adc
xchg
pop
push
add
hlt
or
xchg
arpl
or
xchg
outs
pop
stos
retf
and
out
int3
xor
retf
retf
sub
xlat
outs
(bad)
add
jae
je
(bad)
int3
test
jo
gs
repnz
shl
add
pop
jge
(bad)
(bad)
jnp
pushw
or
dec
bnd
repnz
mov
aad
xchg
out
gs
inc
jnp
hlt
and
pop
inc
add
shr
cmc
gs
mov
push
nop
fisubr
stos
in
push
push
(bad)
jmp
push
xchg
cs
xor
mov
test
and
imul
and
int
mov
(bad)
mov
jns
aam
xchg
jle
and
or
fild
lock
jb
mov
jmp
jmp
adc
ja
sub
push
xor
call
fcmovu
mov
mov
pop
outs
test
or
mov
jge
cmp
aam
xor
mov
lock
dec
popa
jnp
inc
push
in
jge
pop
pop
sbb
sub
gs
scas
sub
inc
jnp
fdiv
mov
pop
push
jmp
mov
icebp
(bad)
add
xor
sub
jmp
dec
pop
or
sub
jecxz
(bad)
fdivr
cmp
mov
mov
pop
iret
mov
sub
sub
enter
inc
push
cs
jb
into
lods
add
pop
push
cmp
pop
jnp
rep
jbe
in
xor
imul
jp
ficomp
lods
jb
in
test
pop
jns
test
mov
call
jmp
imul
cmp
repz
cs
cwde
jp
jmp
inc
add
push
sar
push
dec
retf
adc
sub
outs
sub
stc
ret
dec
mov
les
cwde
xchg
(bad)
das
adc
outs
sahf
adc
fist
xchg
ins
mov
mov
retf
adc
pusha
out
xor
add
xor
sbb
or
dec
and
int
pop
dec
mov
xor
sar
pop
outs
data16
call
stc
in
fwait
mov
mov
ret
inc
(bad)
xor
lods
sub
jg
xchg
ja
sub
push
and
add
cmp
add
mov
inc
fsub
fld
xor
shl
xor
mov
repnz
jo
mov
and
or
cwde
bound
mov
dec
mov
repz
push
pop
xor
jne
or
les
aas
dec
imul
outs
mov
lods
jg
pop
(bad)
pop
dec
outs
add
iret
and
add
xor
mov
imul
xchg
je
cmps
call
xchg
xlat
add
cmp
es
ror
lahf
out
push
or
cmp
push
mov
imul
cli
(bad)
test
repz
push
and
jle
(bad)
or
mov
(bad)
aas
jb
lods
cmp
jnp
dec
jle
inc
xchg
test
dec
loope
mov
add
mov
push
mov
sbb
sahf
in
fstp
sub
adc
pusha
xchg
bound
jle
pusha
stc
pop
rol
mov
xor
popa
push
scas
adc
jb
ds
mov
jns
(bad)
sbb
es
shr
dec
(bad)
xchg
adc
test
jge
adc
imul
pop
and
cmp
jmp
sar
cmps
add
bound
add
mov
dec
cs
imul
das
(bad)
jns
and
and
call
hlt
in
adc
(bad)
and
mov
push
inc
das
imul
aam
xchg
add
iret
addr16
xor
test
cmp
mov
sahf
push
inc
std
dec
sti
xchg
adc
ins
jle
test
xchg
jne
repz
pop
mov
pop
stc
ror
add
push
cmp
mov
je
jne
cli
repnz
push
dec
adc
pushf
popa
push
push
sub
pop
leave
retf
xchg
int
push
dec
in
mov
enter
mov
ins
xchg
fs
in
call
and
rcr
jge
mov
clc
sbb
or
fidiv
sub
adc
push
inc
or
cmp
xchg
inc
sub
or
dec
mov
sub
pop
push
shl
gs
push
dec
pop
in
imul
adc
or
fcomip
xchg
fsub
pop
sbb
jg
ss
loopne
push
pop
add
jmp
cmc
pop
xor
loop
add
and
mov
fs
es
add
stos
mov
mov
or
clc
arpl
cmp
fdiv
bound
mov
xchg
jb
cs
mov
sbb
leave
sbb
mov
(bad)
in
dec
out
adc
repz
add
mov
int3
pop
dec
popa
jne
jg
out
mov
xor
cmp
(bad)
sar
(bad)
sub
int3
loopne
dec
ins
shl
ret
sub
pushf
mov
add
or
xor
jno
js
or
cmc
cmp
mov
mov
hlt
pop
fcmove
jp
xor
(bad)
jl
(bad)
addr16
adc
xor
rcl
test
clc
cmp
mov
mov
aad
dec
or
iret
repz
mov
or
rep
xchg
fldenv
out
cmp
repnz
fld
ror
test
inc
and
mov
cmps
fisub
fdivr
dec
xchg
sbb
dec
call
cmps
scas
lods
inc
adc
imul
in
je
xlat
mov
shl
mov
or
add
imul
xchg
gs
es
adc
out
lock
lods
data16
pusha
popf
sub
bound
loope
xchg
mov
(bad)
mov
test
jecxz
gs
cmp
scas
dec
es
fwait
pusha
inc
pop
jns
ret
cmp
and
lock
dec
(bad)
sbb
test
mov
fcomp
mov
in
adc
sbb
sub
xchg
add
pop
mov
inc
mov
cmp
or
inc
je
in
imul
inc
fs
arpl
dec
fldcw
add
adc
pop
sub
push
bound
mov
xchg
sti
mov
fucomi
mov
cmp
ret
adc
or
std
repnz
dec
std
mov
loope
out
push
xchg
push
nop
ins
and
cmps
mov
lahf
push
loop
and
pusha
adc
xrelease
adc
add
dec
or
in
or
idiv
stos
sbb
pop
mov
or
push
pop
sbb
stos
test
ins
mov
jb
add
xor
call
popf
xchg
stos
mov
mov
ja
or
jb
retf
xchg
lock
out
retf
ror
pop
bound
and
fs
dec
dec
sub
retf
add
or
ins
in
inc
icebp
jecxz
inc
jno
scas
sti
movs
aas
shr
out
loopne
inc
mov
xchg
(bad)
mov
add
(bad)
(bad)
fcomp
push
popa
push
fist
loop
sahf
pop
ja
fist
les
cmp
pop
adc
add
sub
jb
clc
sbb
push
push
(bad)
scas
pop
inc
ss
clc
outs
jecxz
cmp
push
cld
clc
sbb
jnp
sbb
imul
das
shl
xor
mov
and
push
add
test
dec
pop
outs
xchg
imul
sbb
sbb
xor
xchg
mov
movs
inc
dec
mov
imul
pop
inc
movs
mov
sub
lahf
push
ds
inc
sub
dec
sub
push
dec
pop
cmp
loopne
inc
sub
xor
pop
aaa
jnp
into
stos
mov
imul
movs
pop
(bad)
fild
into
stc
hlt
xchg
pop
push
mov
stos
rcr
xchg
mov
cmp
add
adc
dec
sub
pusha
enter
iret
imul
add
cmp
ret
(bad)
movs
loope
loope
or
sbb
test
or
fcmovbe
mov
setg
mov
add
pop
ret
add
cmp
lahf
je
inc
int
stc
mov
(bad)
mov
mov
jb
popa
int3
push
dec
jb
mov
jecxz
movs
test
xlat
push
(bad)
sub
and
repnz
mov
add
ret
pop
pop
dec
cli
push
mov
test
jp
cmp
push
cmp
aaa
cmp
(bad)
dec
push
mov
add
jle
lahf
dec
dec
stos
in
mov
ins
sub
retf
jl
mov
adc
pushw
cmc
xchg
jle
mov
push
add
jnp
mov
retf
addr16
inc
cmp
dec
stos
outs
pop
push
inc
movs
cmp
jbe
jg
jmp
cmp
lahf
mov
aas
inc
nop
retf
jmp
or
jge
cld
test
xchg
sub
xchg
pop
xchg
shl
cmc
mov
mov
cs
(bad)
popa
add
mov
sbb
add
or
jbe
daa
xchg
mov
mov
loope
in
aas
icebp
push
push
jne
or
inc
fist
cs
mov
dec
push
fmul
aaa
dec
mov
pop
sti
sbb
jmp
sbb
fidiv
sub
pop
fidivr
jno
push
cwde
dec
aad
lock
aas
mov
fild
std
aam
iret
test
push
aaa
mov
push
mov
movs
or
dec
mov
in
push
and
sub
inc
sar
mov
sbb
repnz
push
ret
mov
pusha
imul
and
retf
dec
cmp
mov
push
nop
popf
stos
jmp
xchg
inc
dec
imul
inc
xor
call
jnp
ins
cmp
out
push
add
jmp
dec
sub
aaa
push
sti
pop
movs
scas
inc
bound
mov
pop
into
add
mov
loope
jb
loope
ins
pop
dec
sub
xchg
or
test
(bad)
iret
mov
loopne
xchg
aad
xor
inc
xchg
fimul
or
adc
push
clc
xor
jp
jb
lock
mov
mov
and
loopne
(bad)
and
out
sbb
mov
inc
movs
cs
and
into
dec
dec
push
jmp
and
jb
mov
in
add
fisttp
leave
inc
jl
and
push
pop
inc
mov
mov
sbb
mov
data16
ja
adc
imul
add
jmp
cmp
xchg
jp
dec
xchg
sar
out
push
push
retf
ret
adc
cdq
(bad)
icebp
sub
rcr
cmp
dec
lds
jno
adc
push
pop
mov
aad
push
rol
pusha
pop
jo
pusha
out
cmp
fidivr
lods
mov
add
(bad)
sub
femms
in
stos
xchg
xchg
shl
fcom
or
pop
xor
and
add
push
dec
mov
jnp
pop
and
xchg
shl
cmp
mul
cmps
mov
or
cmps
xchg
dec
sub
daa
cwde
adc
scas
ret
xchg
ins
js
ja
nop
addr16
outs
fild
sub
bnd
pop
nop
jno
cvttpd2pi
(bad)
hlt
aam
add
fisubr
clc
ret
daa
dec
ds
and
mov
movs
and
gs
out
mov
push
pop
dec
mov
fscale
mov
sbb
push
pop
push
dec
pop
or
scas
jp
push
inc
pop
add
pop
pushf
test
mov
arpl
add
inc
adc
xchg
loope
(bad)
jge
mov
pop
lea
add
sar
push
leave
xchg
mov
ret
jl
adc
jae
stc
lea
leave
dec
iret
imul
repnz
xor
fsub
and
ja
stc
sub
ret
retf
mov
jmp
xor
cdq
push
add
xlat
clc
adc
ret
stc
pop
in
cdq
mov
loopne
retf
in
hlt
shl
rcl
cmp
push
xchg
push
pop
jle
and
(bad)
xchg
sbb
lahf
sub
sub
sbb
jnp
adc
fbstp
aad
mov
mov
cs
xchg
sahf
dec
lea
(bad)
mov
scas
dec
outs
mov
or
cmp
xor
xor
sub
xchg
and
out
ret
dec
retf
inc
repz
pop
push
mov
rcl
sbb
loope
mov
xchg
push
es
inc
pop
ret
mov
daa
push
or
test
das
fwait
retf
fadd
push
jno
cmc
out
leave
adc
jne
adc
cmp
nop
in
movs
and
mov
push
je
paddusb
mov
cwde
xchg
popf
movs
(bad)
call
xor
hlt
mov
inc
jae
cli
sbb
xchg
loope
call
pop
in
daa
popa
int
mov
pop
cwde
sbb
or
jg
add
fld
xor
pop
mov
cli
jmp
dec
jb
mov
stos
or
cmps
shr
stc
lods
push
cmp
clc
dec
lds
push
jmp
(bad)
mov
loop
jmp
xor
and
in
adc
sub
call
daa
or
ret
xor
pop
shl
mov
jge
cmp
out
pop
sub
ret
or
cmp
xor
fwait
or
push
add
aas
in
sub
fidivr
inc
cmps
xchg
stos
fist
retf
pop
push
pop
jne
push
ss
jmp
call
pusha
add
cmps
push
in
sbb
(bad)
mov
mov
mul
fwait
(bad)
pop
dec
pusha
xor
call
xor
adc
push
mov
loop
fdiv
into
sar
test
dec
mov
fsubrp
mov
popf
fs
leave
stos
pop
neg
sub
inc
aad
test
(bad)
dec
aas
or
push
pop
lds
sub
pop
ror
mov
addr16
dec
stc
retf
leave
xor
dec
mov
pop
iret
ficom
mov
sub
xor
cmp
dec
mov
data16
(bad)
fnstcw
push
and
cmc
fdiv
aad
pop
fs
mov
jns
and
(bad)
stos
mov
xchg
and
pop
dec
add
jmp
push
push
xor
mov
gs
pop
popf
mov
mov
test
jns
test
fcomi
adc
rcr
sti
mov
pop
ds
sub
rcl
(bad)
int3
(bad)
arpl
dec
in
push
pop
push
inc
arpl
cmp
data16
popa
cli
lea
cwde
xor
ss
or
jb
out
cmp
int3
iret
vmovsd
lds
(bad)
fs
and
jp
inc
cdq
sti
ds
inc
jmp
aad
dec
pop
mov
(bad)
lods
or
fst
jecxz
jmp
sahf
mov
cdq
jno
shl
fcmovnbe
test
out
imul
or
mov
xchg
cmp
int3
retf
data16
fmul
aam
cs
leave
xchg
dec
dec
lods
jnp
mov
pushf
adc
xor
pop
pop
out
int3
imul
cwde
and
je
addr16
jmp
xchg
in
inc
inc
ja
retf
pop
xlat
cs
cwde
sub
push
xor
loope
xor
imul
movs
int
add
push
daa
mov
xchg
xor
pop
push
add
dec
jmp
(bad)
bnd
inc
call
xchg
movs
push
dec
and
add
fisub
mov
and
into
and
sahf
dec
jl
loope
push
out
mov
dec
push
lods
test
ins
cld
dec
fnstcw
pop
sub
iret
cmp
and
dec
sub
ja
cmp
or
pop
test
ror
fmul
addr16
mov
icebp
je
lock
push
iret
stos
movs
xchg
xor
mov
std
imul
xchg
dec
xchg
xor
nop
or
jecxz
call
enter
inc
adc
inc
shl
mov
cmps
retf
inc
and
out
aam
inc
adc
iret
adc
stos
test
pop
icebp
fwait
scas
shl
or
xchg
lea
dec
dec
adc
ret
xchg
(bad)
shl
cld
mov
cmp
and
mov
mov
mov
jle
add
sbb
jecxz
push
push
sub
xor
or
cmp
cmps
fs
mov
bnd
dec
je
and
mov
xlat
hlt
adc
fsubr
in
cmp
jmp
push
movs
(bad)
popa
pop
add
in
sbb
cmp
or
pop
push
addr16
scas
in
shl
adc
(bad)
push
lsl
les
xchg
sub
add
sub
push
mov
xchg
cmc
lds
pop
mov
sti
add
cdq
dec
out
xor
shl
inc
call
enter
in
ret
addr16
retf
jle
adc
and
dec
movs
jmp
repz
mov
cmp
dec
sbb
les
mov
in
fsubr
adc
std
nop
ret
cs
mov
loopne
ins
jnp
out
ret
popf
mov
cmp
mov
and
aas
mov
sar
retf
dec
int3
fucom
out
add
sti
jle
jmp
sub
sti
rol
add
dec
sbb
mov
cdq
sbb
push
cmp
jbe
fcom
sahf
aaa
push
dec
xchg
and
daa
nop
out
mov
into
jp
push
ins
xor
inc
aad
repnz
fcomi
loop
pusha
not
std
fadd
in
call
fstp
xchg
and
enter
sub
adc
or
cwde
hlt
cmp
mov
retf
mov
cdq
leave
loope
das
popf
enter
xchg
into
in
div
pop
sub
xchg
push
pop
cs
push
scas
or
in
xchg
in
lods
cld
mov
imul
and
jmp
(bad)
fcmove
lahf
ja
repz
jns
(bad)
mov
sbb
out
loopne
out
sbb
ins
jl
mov
pop
cmp
xor
fwait
jmp
sbb
pusha
and
in
cwde
push
xor
cmp
push
sbb
out
cmp
stos
sbb
das
(bad)
cld
cmp
pop
(bad)
mov
test
popa
mov
(bad)
scas
jg
inc
movs
imul
push
mov
pop
inc
test
ror
repz
shr
out
xor
lea
or
(bad)
pop
sub
daa
je
jge
jns
adc
les
iret
jle
ficomp
cmp
data16
std
scas
mov
retf
fisttp
add
xor
sub
jle
jp
(bad)
aam
mov
int
xchg
aas
push
rcr
fbstp
mov
inc
push
mov
push
ret
push
(bad)
dec
call
mov
int
sub
test
das
mov
cmp
xchg
mov
sub
test
scas
cmp
mov
in
jae
in
movs
mov
add
xor
out
movs
xor
push
and
fstp
mov
int3
ret
fisubr
cmp
push
and
push
leave
fsubr
mov
jno
hlt
mov
xchg
or
psubusw
sti
cwde
cmps
stc
push
ror
xchg
mov
mov
int3
mov
repz
push
mov
enter
mov
cmp
xor
pop
push
push
xchg
outs
xchg
inc
inc
and
inc
(bad)
stc
pop
pop
mov
sti
push
call
push
ds
movs
jo
movs
idiv
rcr
(bad)
imul
jae
in
mov
test
xor
les
fbstp
mov
xchg
arpl
adc
inc
ins
pop
xchg
add
(bad)
dec
push
test
das
pop
ficomp
das
test
push
mov
xchg
movs
cmp
and
sahf
js
mov
loopne
xor
in
repnz
fst
ins
sub
test
dec
push
mov
rol
sbb
retf
(bad)
sbb
movs
stc
ret
(bad)
fdivr
push
xchg
and
pop
mov
dec
adc
jmp
rep
jnp
int
dec
ret
cmps
or
xor
or
popa
and
imul
or
push
aad
mov
call
test
dec
cwde
and
fsub
movhps
stos
test
aad
ins
push
mov
inc
loopne
adc
mov
(bad)
lods
mov
mov
das
sbb
cmps
repnz
call
iret
or
or
retf
sub
push
idiv
xor
mov
(bad)
jl
cmps
sbb
xchg
loopne
imul
sbb
mov
fistp
aad
or
pop
add
cwde
stos
daa
rol
pop
mov
xor
adc
fadd
cld
stos
or
push
mov
mov
jmp
imul
stos
jmp
adc
call
and
xchg
or
and
pop
ss
es
pop
(bad)
lahf
push
aas
jno
add
jle
repnz
jmp
jge
inc
xor
jne
out
les
mov
sbb
daa
ret
mov
push
(bad)
xor
test
mov
(bad)
jle
push
clc
stc
sub
outs
sbb
aad
jno
mov
int
adc
adc
fcomp
fwait
rol
and
mov
adc
pop
push
imul
retf
outs
movs
jbe
sbb
in
mov
push
push
adc
mov
aam
lods
test
out
sub
test
cwde
(bad)
mov
sub
nop
pop
mov
shl
mov
movs
iret
sub
imul
push
aam
(bad)
jns
das
adc
scas
mov
cmp
jge
enter
out
jo
dec
int
imul
(bad)
cmp
fdiv
mov
sbb
les
mov
or
aad
pusha
push
out
cmc
inc
sar
rcl
mov
mov
hlt
fisttp
(bad)
push
inc
loope
das
jae
(bad)
xor
cwde
lahf
jnp
push
rol
xchg
cmp
dec
xchg
lods
fld
movs
pop
lahf
ins
fisubr
jno
out
stos
fwait
xchg
push
mov
lea
xchg
in
mov
mov
mov
sbb
push
mov
sub
xor
jb
xchg
dec
pop
dec
and
movs
mov
xor
mov
(bad)
lock
mov
and
in
and
loopne
and
or
imul
loopne
or
aad
fld
leave
jbe
mov
push
(bad)
dec
xchg
in
shl
xchg
mov
or
jecxz
add
and
repz
sti
cdq
outs
xlat
sub
lahf
retf
dec
ficom
dec
push
int3
and
adc
add
and
xor
rol
cdq
mov
mov
in
cmps
(bad)
fcomp
inc
jg
sti
xchg
pop
mov
fnstcw
pop
add
pop
inc
dec
(bad)
in
into
lock
or
into
mov
sbb
and
xor
xor
inc
mov
lock
aad
jno
enter
adc
jo
daa
neg
sbb
test
xchg
pop
frstor
inc
pop
dec
test
fs
pop
int3
jmp
push
mov
retf
inc
mov
retf
push
ficom
mov
cmovbe
outs
rol
sbb
cmp
xor
sbb
aad
fdiv
(bad)
cli
pusha
std
sub
fistp
inc
mov
and
outs
frstor
ret
fwait
cli
into
sti
mov
mov
in
pop
xchg
mov
xlat
push
pop
or
push
xchg
test
pop
shl
out
popa
ret
(bad)
aad
cmp
in
inc
std
mov
aad
pusha
stos
push
cmc
(bad)
jo
aas
inc
daa
fnstenv
aas
sti
push
mov
fiadd
push
pop
sti
mov
push
push
adc
xor
add
dec
mov
fcomp
mov
enter
and
arpl
or
jns
ins
retf
movs
sub
pop
inc
andps
mov
ret
ret
dec
inc
pop
mov
stc
mov
dec
and
cmps
cmp
out
out
or
mov
mov
jmp
sti
cmp
and
cmp
fidivr
test
loope
sbb
xor
mov
leave
jl
sbb
daa
mov
stos
fwait
arpl
mov
ror
fistp
shl
lea
xchg
addr16
adc
inc
or
mov
add
movs
leave
pop
cld
retf
adc
cmp
fisttp
pop
push
fwait
mov
fcom
sbb
or
adc
retf
mov
clc
inc
cwde
push
push
ficom
and
ins
fbstp
adc
push
mov
adc
jbe
int
mov
mov
pop
sbb
push
inc
mov
mov
cmc
fwait
mov
outs
adc
into
dec
dec
popf
inc
stos
sub
ret
aaa
xor
popa
and
scas
mov
addr16
popa
scas
mul
int3
nop
mov
sbb
fisttp
sub
mov
inc
out
cli
mov
dec
mov
sub
jmp
cmp
aam
cmp
mov
retf
mov
jmp
pop
mov
movs
xor
adc
sbb
mul
aaa
dec
push
mov
push
in
popf
mov
cmp
mov
iret
(bad)
sub
or
retf
mov
mov
dec
js
nop
ror
sbb
jne
icebp
shl
adc
mov
push
pop
mov
std
jae
adc
pushf
stos
int
add
xor
iret
(bad)
mov
push
rcl
nop
xor
xor
jae
dec
jne
dec
push
fbld
xchg
dec
rcr
jae
jo
in
sahf
movs
fs
mov
mov
lods
(bad)
mov
sti
(bad)
aam
pop
es
(bad)
cmps
push
xchg
mov
adc
push
loopne
xchg
stos
jmp
dec
fldcw
daa
shl
fnstenv
mov
dec
(bad)
aad
inc
pop
icebp
jle
jp
cmp
addr16
jae
data16
push
jmp
cli
pop
clc
pop
sti
je
in
(bad)
cmp
sub
les
mov
jo
adc
imul
inc
loop
hlt
and
in
pop
fsubr
mov
xlat
call
push
xor
inc
add
cmp
icebp
jmp
sbb
xor
nop
cmp
push
leave
test
das
ja
xlat
popf
jg
or
lds
call
jmp
retf
repz
xchg
fbstp
out
mov
sub
aam
rcl
call
xchg
sahf
movs
xchg
mov
cs
cmp
push
sbb
inc
mov
out
pop
push
sbb
push
cdq
cmp
jae
fwait
cmp
sub
dec
adc
push
test
stos
pop
mov
popf
shr
sbb
in
repnz
retf
and
loop
mov
scas
iret
inc
out
test
adc
jp
fcmovnb
jne
xor
ss
xchg
xor
aam
cmc
push
pop
cli
enter
sub
and
adc
push
stos
test
fist
cmp
cmc
mov
repz
rol
stc
add
ja
lea
out
cmp
repnz
cs
sbb
cmc
add
sub
jp
outs
xlat
fdivrp
mov
mov
out
stos
fcmovnu
jecxz
popf
stos
push
imul
mov
and
cmp
cmp
and
mov
mov
cmc
adc
push
sub
int3
int
imul
push
test
sub
out
iret
cwde
je
push
fldenv
jle
push
js
xor
xchg
sar
pop
cmp
jmp
xchg
dec
jp
cmps
test
mov
cmp
sbb
(bad)
jle
in
test
mov
ja
fld
sub
pusha
xchg
(bad)
outs
and
dec
mov
mov
xchg
add
pop
pop
int
fcmovne
push
push
mov
mov
ins
sub
add
pop
sbb
test
adc
ficomp
data16
pop
mov
gs
imul
test
add
mov
and
jge
clc
dec
movs
ficomp
xchg
(bad)
mov
fcomp
loope
or
cwde
sbb
or
lea
mov
int3
mov
(bad)
ss
pop
fimul
je
pop
push
sahf
sub
jno
out
(bad)
rcl
cmc
retf
and
(bad)
fs
sbb
adc
loope
cmc
loop
or
lea
cmp
aaa
cs
jg
xor
and
and
push
cmps
(bad)
and
sbb
push
jg
mov
ds
int
cmps
(bad)
push
push
lea
dec
out
add
push
sbb
sbb
xchg
jmp
scas
and
add
cmps
and
or
fadd
sub
pop
jp
inc
das
out
mov
adc
neg
(bad)
push
int3
jp
and
out
mov
aam
pop
or
push
imul
jge
iret
cmps
mov
push
int3
inc
retf
sbb
retf
adc
int
ins
test
pop
hlt
jbe
pop
sbb
pop
sub
push
cmp
xchg
jno
(bad)
jg
xor
out
ret
mov
jb
mov
cdq
sub
iret
fwait
inc
cli
cdq
cs
jmp
adc
mov
dec
add
add
jo
cmp
sbb
mov
cmp
outs
cmp
gs
stos
xor
sbb
jge
scas
or
lods
push
shl
and
nop
dec
test
push
mov
sahf
mov
(bad)
jp
xchg
mov
retf
repz
test
inc
push
sbb
shl
cmp
loope
xlat
clc
div
in
and
sbb
and
aas
xor
xlat
pushf
jns
push
mov
rol
arpl
adc
cmps
jne
sub
dec
iret
jl
mov
test
pop
xor
add
or
faddp
addr16
(bad)
or
shl
push
gs
push
les
inc
xchg
add
out
push
sub
mov
popa
outs
retf
dec
adc
out
mov
push
aas
inc
push
cmp
pusha
or
and
and
int
int
pop
scas
(bad)
out
dec
ret
rcr
(bad)
dec
imul
sbb
dec
and
cli
add
test
or
inc
inc
sub
cmp
cmp
dec
and
loope
je
test
jle
and
jmp
sub
xor
addr16
or
sbb
fcomp
hlt
enter
add
add
mul
or
mul
push
das
rcl
xlat
pushf
cdq
mov
(bad)
xor
gs
fadd
enter
cmc
fistp
sub
adc
adc
outs
into
out
mov
fmul
sub
and
leave
jmp
push
xchg
dec
mov
add
xor
adc
and
jg
xor
push
inc
push
stos
gs
es
mov
ins
rol
jae
inc
adc
icebp
jge
sub
rcr
jne
xchg
retf
(bad)
pop
pushf
ja
inc
inc
jmp
sub
scas
rcl
or
xchg
mov
and
mov
movs
push
loope
adc
push
cwde
mov
sub
or
loop
repnz
jp
mov
mov
pop
mov
push
xchg
aad
add
cld
es
shl
push
mov
int
pop
rcl
mov
cmc
ror
ror
mov
daa
mov
ss
pop
push
mov
imul
add
sbb
push
pushf
(bad)
push
test
inc
test
xchg
jb
xor
mov
jo
int
pop
add
jae
mov
xchg
retf
(bad)
push
leave
inc
push
add
out
clc
mov
rol
mov
push
xor
icebp
sbb
inc
sbb
fcomp
pushf
adc
mov
in
fwait
cmp
fist
pextrw
cmp
xor
and
test
xor
mov
cmp
pop
pop
ss
xchg
imul
mov
mov
mov
ds
inc
clc
(bad)
adc
aad
loope
mov
fcmovb
outs
add
or
aas
and
xchg
arpl
jnp
hlt
aam
mov
fadd
mov
mov
scas
iret
dec
mov
mov
add
movs
push
add
cmp
jno
cli
dec
fldenvw
jno
adc
pop
xchg
pop
jl
rcl
fisttp
or
cli
xor
add
cli
adc
in
movs
push
scas
and
sub
scas
test
aad
inc
xchg
aas
pop
movs
mov
pusha
shl
inc
jl
jnp
pusha
(bad)
daa
ret
sub
adc
adc
push
dec
sbb
push
add
scas
push
and
retf
mov
or
test
jbe
mov
fwait
add
rcr
jg
and
iret
das
pop
xchg
mov
mov
std
xchg
pop
xchg
sub
push
imul
push
sbb
sub
inc
into
outs
add
cmp
mov
jno
mov
sub
scas
into
std
fdiv
test
rcl
aam
mov
dec
and
push
fidiv
mov
cmp
xchg
xor
cwde
mov
sub
jge
sbb
mov
ins
ss
xchg
aad
fldcw
add
mov
mov
sbb
and
mov
push
pop
psubsw
repnz
mov
bound
xchg
xchg
je
repnz
dec
mov
pop
push
mov
mov
push
and
popa
fsubr
pop
aas
jae
push
in
ror
cmp
add
pop
dec
sahf
mov
jb
push
sbb
fistp
sub
xor
ror
adc
xor
jae
add
cmp
dec
fisub
jnp
inc
cmc
adc
jge
mov
mov
cmp
or
cmp
add
fcomp
lahf
add
into
ret
mov
jns
jecxz
jnp
jmp
jns
cmp
push
(bad)
dec
pop
lds
add
cmc
mov
jo
adc
pusha
and
mov
aaa
repz
neg
jbe
ror
mov
mov
and
rol
(bad)
lock
adc
pop
jmp
xlat
push
mov
cmp
cmp
cmps
dec
xlat
sbb
and
pusha
outs
rcr
int3
or
jp
sbb
out
cmp
mov
hlt
data16
mul
cmp
xchg
(bad)
adc
retf
daa
popa
(bad)
sbb
add
or
and
push
arpl
loope
push
adc
mov
je
aad
add
sub
push
push
stc
into
scas
fild
fdivr
pop
repnz
jne
mov
or
cmc
lock
data16
inc
cmps
les
enter
cmp
and
sub
xor
scas
cmp
xor
in
mov
sub
pop
aaa
test
dec
loopne
clc
push
rcl
sbb
loopne
mov
xchg
push
sti
sub
cmps
xor
add
add
adc
ja
stc
mov
inc
cmp
adc
dec
inc
call
repnz
mov
cld
cmp
outs
rol
hlt
jmp
shl
or
jl
jecxz
and
lahf
fstp
xor
sbb
add
icebp
cmp
xchg
test
dec
out
test
lock
out
bound
adc
sbb
mov
push
aad
movs
jne
mov
dec
jmp
mov
ja
fsub
clc
scas
mov
mov
fmul
mov
pop
mov
sbb
cli
and
dec
clc
jg
(bad)
mov
sub
push
in
daa
cmp
out
jns
int3
icebp
das
xor
push
sub
int3
adc
push
popf
enter
test
jle
xchg
out
inc
cmp
in
sbb
jno
push
jl
push
jecxz
popa
mov
xchg
pop
or
imul
and
rcl
xchg
loop
jno
add
jb
adc
mov
lods
jecxz
dec
adc
inc
xor
out
mov
mov
push
jno
push
sub
sub
cmp
mov
outs
lahf
push
pop
inc
lods
retf
jp
inc
mov
(bad)
pop
in
inc
jnp
cmp
fstp
sti
scas
clc
xor
scas
xchg
push
cli
fwait
add
mov
cmp
xchg
cwde
xor
cmp
test
(bad)
jb
xor
lods
(bad)
jne
fidivr
push
cmp
fnstenv
div
jge
jno
push
pop
sbb
fwait
jo
dec
lock
cmp
rol
fldenv
lods
adc
loop
pop
cdq
xor
pop
pop
pop
out
inc
ins
jo
iret
jge
popf
and
fild
inc
sbb
adc
aam
inc
outs
daa
int3
cmp
sahf
pop
xor
loopne
xlat
xor
add
sub
mov
std
call
shl
push
adc
push
mov
cmps
push
dec
lods
dec
inc
sub
icebp
xchg
in
xchg
in
in
outs
sbb
arpl
xlat
popf
xchg
aaa
push
mov
mov
pop
rcr
daa
(bad)
pop
mov
fimul
sub
jmp
data16
pusha
push
inc
mov
in
and
enter
sbb
(bad)
pusha
or
loopne
loope
(bad)
jbe
out
pushf
push
xchg
add
push
sbb
xchg
add
mov
popa
sbb
stc
dec
dec
hlt
hlt
fistp
push
pop
mov
fs
lea
adc
pop
out
mov
(bad)
jmp
xchg
movs
mov
xor
or
mov
(bad)
fimul
lahf
push
cmps
sar
in
push
cld
cli
aam
stos
push
xchg
scas
retf
cwde
xchg
stc
call
mov
pop
imul
call
(bad)
loope
cmc
jno
mov
clc
fiadd
lea
or
js
popf
pop
(bad)
icebp
pop
out
inc
leave
cs
out
jae
or
out
pop
out
mov
out
imul
stc
jbe
dec
les
mov
arpl
inc
xchg
es
adc
ins
(bad)
mov
add
adc
inc
sbb
mov
mov
sub
mov
cmp
push
mov
icebp
ret
or
les
fisub
jmp
rcr
stc
lods
adc
fstp
lock
jg
(bad)
dec
xlat
mov
ret
stos
aaa
ret
outs
xor
(bad)
clc
fdiv
mov
(bad)
ss
adc
call
in
dec
ins
icebp
nop
ficomp
cwde
mov
sbb
sbb
pop
das
pusha
push
mov
int
mov
and
jb
bound
mov
sbb
ret
mov
out
jle
mov
mov
lods
arpl
xchg
sti
jmp
pop
inc
pop
or
mov
jecxz
imul
test
xchg
xor
pop
retf
adc
add
push
outs
and
xchg
sbb
fist
inc
out
sbb
in
lahf
mov
stos
in
pop
fcomp
adc
cmp
cmp
cmp
pusha
imul
mov
(bad)
fmul
adc
lock
inc
call
lea
cli
mov
mov
imul
out
cmps
iret
test
outs
out
jmp
cmp
dec
cmps
jo
add
dec
sbb
push
neg
sar
fbld
adc
(bad)
sub
dec
xchg
gs
sub
push
sahf
ret
scas
lds
or
mov
pop
inc
jecxz
sub
pop
inc
mov
mov
movs
cmps
loopne
dec
scas
enter
sahf
(bad)
push
fcom
lahf
adc
jl
ins
mov
jg
xor
idiv
dec
pop
add
jno
call
adc
gs
pushf
sub
mov
xchg
aas
dec
add
cli
add
fs
xchg
stos
mov
jno
jb
add
pop
sbb
rcr
rep
push
jne
pop
mov
cs
fld
sbb
enter
adc
mov
xchg
int
outs
fst
dec
jo
in
retf
xor
dec
xor
repnz
or
push
test
scas
jl
add
and
ret
inc
and
out
push
loop
mov
fisttp
xor
std
retf
add
fsub
scas
mov
(bad)
imul
ja
rcr
enter
jae
stc
xor
xor
test
aas
sahf
dec
adc
or
cmp
(bad)
out
jp
pop
movs
sub
movs
pop
cmp
push
cs
inc
sub
add
sbb
adc
cli
push
es
sbb
fisub
mov
jg
dec
dec
call
push
arpl
xor
cs
test
add
(bad)
jmp
mov
mov
dec
(bad)
mov
cmp
outs
mov
mov
mov
inc
in
push
mov
sub
or
shl
arpl
cmp
pusha
(bad)
cmp
movs
lods
ret
call
jns
shl
shl
test
fsub
xchg
ss
adc
mov
and
ret
xlat
push
imul
jge
mov
inc
pusha
test
mov
sbb
ss
pusha
and
jne
jmp
mov
add
push
mov
inc
push
in
hlt
jb
sub
ja
(bad)
jg
xor
xchg
fxam
std
lea
xor
ds
push
push
mov
mov
inc
in
add
mul
cwde
data16
outs
jg
mov
cs
cmp
addr16
aas
dec
mov
mov
adc
enter
sub
arpl
sub
mov
sub
ret
jg
sub
mov
jno
sti
movs
jge
scas
in
or
leave
aam
mov
cmp
mov
mov
(bad)
mov
rcr
fbld
jnp
pop
(bad)
and
mov
sbb
pop
sbb
inc
scas
xchg
test
and
gs
in
loopne
(bad)
sbb
pop
retf
popf
mov
data16
dec
daa
cs
push
in
mov
test
add
xchg
das
push
mov
imul
sbb
push
loopne
mov
stos
pop
rol
mov
sub
pop
push
inc
mov
mov
icebp
fiadd
jbe
stc
(bad)
cdq
pop
sub
out
cwde
mov
movs
dec
aad
adc
stc
daa
or
out
cmps
repz
pop
(bad)
jge
test
inc
pop
xchg
movs
adc
repnz
or
inc
push
mov
or
movs
int3
xchg
bound
stos
les
daa
sub
cdq
adc
dec
sti
shl
push
sub
push
inc
jo
test
mov
inc
test
pop
int3
enter
mov
mov
movs
mov
(bad)
les
rol
adc
sub
ins
outs
jg
mov
test
cdq
jno
push
or
in
sub
cwde
adc
push
or
mov
cmc
pusha
sahf
push
jns
xchg
sbb
cmp
jle
adc
sahf
and
int3
mov
xor
sub
lea
sub
int3
mov
test
ror
bound
or
ins
sub
int3
outs
sbb
pop
xchg
lds
or
int3
jle
movs
outs
push
mov
cld
lock
push
and
stos
sahf
and
and
dec
(bad)
in
mov
jmp
rcl
mov
mov
push
xchg
lock
out
push
data16
sbb
scas
cmp
mov
popa
aam
(bad)
call
clc
push
xor
xchg
int
les
das
dec
ret
in
mov
xchg
fld
xchg
xchg
jg
or
outs
jle
frstor
adc
inc
std
mov
mov
rcl
arpl
mov
adc
inc
imul
rcl
mov
push
je
rol
inc
mov
pop
mov
push
popa
clc
loopne
nop
add
xchg
repz
cmp
scas
(bad)
lea
push
out
jae
xchg
(bad)
fnsave
jns
lahf
jge
test
or
frstor
jmp
test
gs
pop
cli
scas
jl
hlt
ficomp
popa
dec
push
xor
jge
cmc
dec
fstp
mov
ja
add
xchg
sbb
sar
adc
repz
push
mov
leave
or
xor
cmps
mov
push
retf
lock
sub
iret
shl
bound
jle
icebp
aad
test
adc
xchg
and
fdivr
and
ins
xchg
(bad)
lahf
cwde
aaa
shr
mov
dec
cli
xor
stc
ret
xor
(bad)
(bad)
push
sub
push
(bad)
dec
test
inc
sub
add
cmp
xchg
sbb
dec
aad
or
jg
call
push
test
rol
pop
and
imul
cmp
imul
out
mov
inc
mov
lock
or
ins
bound
mul
xor
je
push
jb
and
dec
imul
cmovns
adc
or
jle
mov
(bad)
xlat
inc
jl
pop
adc
shl
sub
jo
(bad)
shr
pop
mov
jg
mov
jmp
pushf
xchg
jno
test
or
and
jae
dec
sub
push
cmp
mov
outs
test
mov
or
cdq
neg
jmp
xor
pop
(bad)
out
adc
cli
fs
shl
shr
nop
mov
mov
aas
in
iret
xor
(bad)
sub
inc
scas
mov
mov
inc
stos
ret
cwde
add
imul
cmc
mov
mov
jne
add
inc
mov
jmp
bound
mov
fisttp
sbb
push
jae
into
add
scas
sub
iret
lahf
test
out
daa
addr16
loope
outs
xor
(bad)
repz
add
out
loop
xlat
cmp
jg
cmp
sub
dec
ins
(bad)
sub
scas
and
xor
shl
xor
jns
dec
and
xchg
loopne
(bad)
xchg
mov
mul
xchg
jmp
pusha
mov
lods
sar
(bad)
mov
fcmovnbe
ds
xchg
imul
adc
gs
adc
neg
mov
in
cmp
outs
pop
enter
push
cmp
jge
xor
fnsave
std
dec
push
pop
test
inc
xchg
pop
lods
jnp
leave
xor
jno
push
mul
pusha
dec
aas
ret
mov
popf
push
(bad)
push
in
jbe
push
sbb
pop
shr
or
xor
stos
xlat
mov
shr
ss
or
fsubr
stos
out
call
push
mov
xor
mov
sar
fdiv
and
xor
mov
js
out
ds
jg
mov
push
sub
fwait
daa
fcomip
push
into
pop
sub
push
icebp
sbb
out
rcl
inc
cmp
sub
xlat
pop
jb
inc
add
hlt
and
mov
push
mov
mov
mov
fmul
pop
inc
outs
(bad)
in
xor
mov
push
test
lds
leave
icebp
jmp
idiv
add
movntps
pop
out
dec
mov
fst
sub
repnz
and
jge
ss
nop
js
inc
mov
mov
jl
jns
xor
push
mov
out
out
pop
out
out
mov
fcmovbe
mov
xchg
xor
sbb
ret
dec
mov
xor
jecxz
js
sbb
push
aam
mov
je
mov
adc
sub
push
out
push
out
fmul
retf
mov
inc
cdq
sub
xchg
test
dec
adc
adc
pop
test
pop
std
dec
(bad)
ror
fs
std
cmp
jno
shl
sar
sar
sar
xchg
push
cmp
pop
lds
rol
pop
jg
dec
pop
fdivr
daa
daa
fdivr
mov
inc
cli
leave
mov
dec
iret
pop
or
(bad)
mov
sub
dec
cmp
inc
fs
or
push
test
push
in
outs
push
sub
or
fimul
(bad)
int3
movs
adc
dec
cmps
cmovb
jae
icebp
xor
lock
outs
add
xor
sbb
shl
dec
bound
dec
sar
pushf
pop
xchg
and
iret
add
stc
out
push
xor
movntq
icebp
xor
stos
neg
push
shl
loop
mov
ins
jno
sbb
out
xor
(bad)
mov
dec
retf
mov
dec
sbb
cdq
sbb
and
xchg
dec
or
lods
push
pusha
in
dec
sahf
int
dec
imul
shl
sub
sbb
pusha
and
add
cmps
(bad)
sti
rol
pop
imul
sub
jo
add
and
cli
mov
aas
mov
mov
sub
sub
in
(bad)
inc
mov
std
cmp
add
push
cmps
mov
out
cwde
push
xchg
neg
pop
ficom
pop
dec
loop
add
rcl
xor
add
movs
xchg
adc
jbe
popf
jecxz
jl
mov
outs
inc
mov
int3
das
arpl
mov
or
repnz
popf
push
mov
and
push
xchg
ds
mov
test
arpl
lea
mov
in
out
mov
mov
xchg
cli
sbb
cmp
adc
add
mov
ret
mov
xor
call
cmp
bound
add
cld
adc
mov
xchg
sbb
cmp
aas
(bad)
dec
call
aad
enter
ins
cmps
sub
(bad)
sbb
add
mov
xor
or
ja
dec
test
pop
cli
aam
xor
scas
repz
inc
adc
jo
fadd
inc
jnp
mov
aas
mov
test
or
int3
lock
addr16
cs
jge
and
add
xor
ret
jle
jg
adc
mov
xlat
mov
mov
xor
add
sub
icebp
int3
sbb
sti
adc
jno
adc
or
fst
sub
and
clc
stos
sub
ret
lea
push
scas
ret
ror
xor
fisub
lods
jns
mov
aaa
mov
xchg
dec
cmp
out
outs
lahf
adc
mov
adc
test
mov
add
fldenv
out
mov
clc
js
pushf
and
or
lods
arpl
mov
push
test
xor
mov
xchg
xbegin
pop
fldenv
cmc
sbb
pop
adc
rcl
adc
mov
pusha
xchg
cld
jae
jae
int3
and
shr
sub
jb
sti
scas
bnd
adc
stc
adc
cwde
out
jle
scas
jp
fnstenv
adc
add
enter
imul
jmp
or
retf
or
lock
or
mov
pop
fld
fsubr
adc
retf
repnz
lds
hlt
or
(bad)
push
cmc
push
rol
jmp
push
adc
add
cmc
xor
xchg
mov
mov
sti
(bad)
lods
pop
push
mov
or
aam
aaa
(bad)
out
pop
cmps
mov
cdq
push
hlt
(bad)
jmp
dec
repnz
pop
and
fistp
add
inc
push
lds
stos
arpl
outs
add
xrelease
fcmovnu
test
cmp
dec
and
jmp
mov
imul
mov
mov
icebp
pop
aas
je
in
mov
jl
adc
mov
mov
loope
mov
pop
sbb
cmp
add
cmp
dec
dec
mov
call
neg
cli
push
fdiv
test
or
add
out
rcr
mov
jbe
inc
ror
(bad)
out
sbb
mov
dec
jl
in
fidiv
xchg
xchg
mov
adc
xchg
iret
ja
cmp
jg
xchg
gs
(bad)
mov
xchg
cmp
call
dec
and
and
adc
stos
dec
mov
aaa
xchg
fadd
imul
fld
lods
pusha
(bad)
jl
stc
xor
mov
jmp
sbb
(bad)
adc
in
std
(bad)
sbb
jle
jns
add
push
ficom
sbb
es
lea
into
pop
das
sub
cmp
outs
test
lds
xchg
pop
mov
xchg
(bad)
mov
xlat
jb
call
lea
push
xchg
pop
dec
push
movs
into
call
sar
retf
fwait
ret
adc
xor
mov
mov
ins
test
fisttp
jge
je
(bad)
xchg
retf
dec
addr16
jecxz
xlat
xor
in
mov
jle
push
jmp
sub
xor
mov
shl
enter
jo
sar
sub
popa
jmp
mov
add
test
sbb
add
mov
icebp
push
lock
aam
sar
xchg
popa
mov
push
push
ret
xchg
es
cmp
stos
push
dec
adc
push
inc
cdq
cmp
imul
mov
ins
jnp
xchg
mov
inc
aas
xlat
jl
mov
inc
mov
test
inc
mov
dec
call
cmps
or
jge
js
cmc
sub
lods
pusha
cmps
cmp
(bad)
sbb
xchg
cld
pop
(bad)
jns
cmp
xor
and
rol
adc
in
xchg
int
add
inc
iret
mov
jns
cmp
std
sar
adc
cmp
sbb
scas
push
neg
push
dec
stos
fldenv
dec
cdq
test
jp
outs
popf
iret
mov
data16
adc
xor
leave
fs
jns
inc
or
loope
or
sub
inc
imul
and
xchg
(bad)
mov
dec
(bad)
cs
not
push
mov
xchg
out
pusha
push
ins
call
push
aaa
fcomp
fdiv
in
cmp
pop
dec
inc
jnp
cmps
pop
xlat
cmp
test
inc
mov
ror
pop
mov
or
dec
cmp
scas
pop
mov
sbb
inc
loop
cmp
jo
scas
outs
dec
hlt
xchg
(bad)
sti
sar
or
dec
fnstenv
fidivr
push
lods
push
fsub
pop
inc
outs
and
lds
es
(bad)
pushf
call
out
dec
(bad)
aam
int3
xchg
(bad)
and
inc
mov
test
add
cmps
adc
dec
leave
pop
js
xchg
ins
jmp
enter
sbb
xchg
retf
loope
aas
mov
adc
mov
cmp
fidiv
push
jp
push
adc
addr16
and
inc
pop
jmp
or
call
stos
jnp
cdq
sar
dec
xchg
pop
push
dec
mov
ss
and
mov
push
mov
fst
jae
push
sbb
pop
stc
retf
imul
push
(bad)
daa
clc
cmp
pop
out
test
xchg
jns
mov
test
sbb
jmp
sbb
push
lods
xor
jmp
shl
aad
mov
sbb
inc
sahf
ss
ins
inc
call
sub
mov
fnstcw
(bad)
jg
dec
sti
mov
and
and
cld
mov
mov
and
(bad)
out
in
or
mov
inc
ss
xchg
fchs
mov
clc
dec
cld
jnp
shl
xor
sti
push
and
std
movs
cli
or
pop
add
mov
sub
sub
sub
push
stc
xchg
push
cmps
sub
dec
retf
and
pop
xor
push
sbb
jmp
mov
fwait
movs
inc
fadd
jp
push
cmp
mov
imul
iret
mov
(bad)
cmp
xor
out
rol
inc
iret
cmp
addr16
cwde
jmp
sbb
outs
dec
fsubr
dec
repz
adc
repz
cmp
arpl
pop
imul
cmp
or
cdq
dec
push
dec
or
sbb
fst
cld
xor
add
adc
scas
xchg
mov
cmp
ins
cdq
cmp
(bad)
push
mov
push
mov
lods
lods
jb
loop
jecxz
sti
fsubr
push
inc
movs
cmp
push
(bad)
xchg
enter
imul
adc
push
xor
clc
dec
call
sub
fst
sbb
rcl
push
(bad)
sar
adc
jbe
pop
fisttp
push
mov
pushf
ins
cmps
sub
pop
jb
into
sub
addr16
jmp
xchg
ss
sar
jmp
movs
(bad)
and
mov
std
xchg
mov
xlat
pop
arpl
pop
test
mov
mov
arpl
lea
outs
sbb
mov
sti
and
push
fstp
push
dec
enter
nop
arpl
(bad)
sbb
data16
mov
hlt
pop
sub
pop
sar
pop
push
loope
push
lods
pop
sbb
mov
inc
cmp
fadd
dec
and
add
xchg
mov
(bad)
sbb
gs
mov
jo
repz
outs
dec
cmp
mov
mov
in
(bad)
sub
movs
jmp
xchg
mov
pop
cmc
rcr
sti
hlt
pop
or
cli
ret
and
or
pop
xchg
jl
mov
sahf
jae
je
xchg
loope
or
sub
push
inc
(bad)
cmp
xor
cld
mov
je
jns
(bad)
out
cmp
pop
sti
js
sub
inc
and
ficomp
es
scas
ins
inc
in
add
imul
mov
(bad)
sbb
in
jbe
cmps
stos
aaa
sub
sub
mov
aaa
stos
sub
adc
nop
push
push
mov
pop
push
push
sub
sub
mov
lds
test
fstp
retf
hlt
popf
jmp
push
aas
xchg
cmps
ret
adc
cs
pop
fdiv
fild
or
mov
cmp
adc
jo
movs
push
ret
mov
push
pop
dec
jne
shl
jbe
test
mov
mov
mul
adc
xor
mov
in
fldenv
call
pop
sub
sub
rcr
out
in
cmp
and
ss
inc
push
ins
repnz
xchg
dec
add
pop
mov
add
lahf
jg
push
adc
jg
iret
jnp
mov
lahf
imul
cmp
les
mov
fdiv
daa
out
leave
cli
xor
je
push
aaa
dec
inc
and
mov
mov
xor
sub
das
mov
push
mov
dec
jge
movs
mov
sbb
mov
push
cmp
and
stos
(bad)
cld
adc
ret
cmp
xor
mov
ja
lods
iret
dec
mov
cmp
xor
sub
push
retf
outs
sub
push
arpl
fstp
bound
sti
pop
cmp
arpl
fadd
mov
pop
mov
xchg
(bad)
cmp
mov
inc
ret
xor
or
xor
add
dec
pop
mov
inc
mov
sahf
push
sbb
aam
pop
push
push
dec
dec
dec
dec
cmps
les
aam
je
cmp
div
push
sahf
mov
mov
add
lock
sbb
mov
cdq
cmp
int
call
inc
mov
(bad)
jg
push
test
sub
jge
fwait
ror
pop
add
adc
out
cwde
les
mov
adc
lea
and
data16
jge
icebp
push
adc
adc
or
int3
mov
(bad)
and
sbb
int
xchg
mov
cmp
mov
push
inc
adc
retf
fwait
jle
jle
push
inc
icebp
call
mov
adc
add
das
ins
lods
xor
mov
fsubr
push
repnz
loopne
mov
(bad)
mov
sar
mov
rol
imul
jge
or
fild
clc
test
jns
push
in
xchg
dec
arpl
inc
pop
lea
xchg
fs
ins
mov
add
arpl
pushf
(bad)
sbb
repnz
ins
or
ins
int
jae
sbb
test
ret
and
dec
xor
mov
and
xor
scas
cmp
mov
out
sub
out
xchg
jl
cwde
mov
movs
xlat
daa
test
xchg
sahf
in
shr
iret
push
xchg
fsubr
cmp
fs
pop
dec
add
add
sti
popf
out
xchg
enter
fild
jns
mov
jo
test
xchg
cmps
mov
xlat
sbb
or
lea
test
das
add
popf
lahf
adc
jae
add
rcl
mov
imul
jecxz
push
mov
popf
popa
dec
pop
fcomip
cmp
mov
imul
dec
and
or
arpl
adc
cmp
cmp
movs
int3
and
loop
mov
adc
pop
fs
in
xor
sbb
and
push
adc
stos
push
test
dec
jecxz
imul
push
add
inc
sub
in
xchg
in
add
sti
or
cmps
pop
shl
cmps
call
jbe
mov
rcr
rol
sub
jo
inc
(bad)
outs
cmps
ds
jno
dec
mov
test
fcomp
pop
jo
dec
scas
cmps
cmp
ds
jge
inc
inc
xchg
xchg
scas
test
sub
rcl
lds
repz
add
repnz
pop
cld
daa
aad
addr16
outs
jae
daa
rol
dec
int3
dec
shr
arpl
cli
lahf
or
pop
into
cmp
fdiv
test
xor
inc
sub
mov
in
xchg
enter
sub
or
adc
adc
jbe
mov
cmps
shl
mov
push
in
imul
sub
xchg
sbb
arpl
push
(bad)
or
or
mov
lahf
icebp
and
mov
jae
jns
cdq
push
test
stos
popf
xor
dec
icebp
jmp
sahf
push
push
daa
push
jmp
xchg
inc
cmpps
fmul
dec
icebp
pop
ja
idiv
fldpi
repnz
stc
test
jmp
fsub
jge
push
adc
cld
mov
lock
cwde
xchg
les
icebp
inc
pop
pop
or
jg
mov
fdivr
jo
and
pusha
xchg
or
mov
push
loop
jmp
or
stos
loope
ja
dec
leave
adc
dec
test
aam
xor
and
outs
dec
icebp
cmp
mov
pop
loop
lds
and
daa
and
pop
ins
fbstp
cmp
(bad)
(bad)
loope
aaa
fistp
dec
xchg
xor
sbb
stc
js
pusha
sbb
pop
or
push
in
mov
xchg
ja
add
enter
loopne
(bad)
mov
outs
cmp
fadd
cmps
(bad)
dec
sbb
cmp
dec
add
push
int3
sbb
ror
mov
scas
push
rcl
cmp
(bad)
adc
mov
out
mov
sub
adc
mov
dec
cmp
or
add
sub
mov
scas
push
xchg
ret
xchg
in
mov
lahf
jmp
push
dec
inc
xor
mov
lds
or
xchg
dec
dec
mov
push
xor
es
xchg
or
inc
je
add
fst
cwde
std
inc
movs
stc
sbb
cmp
and
or
sti
add
les
cmp
sbb
push
jno
(bad)
das
lahf
test
ja
pop
sub
or
jno
popa
jg
ficom
sbb
lock
gs
mov
dec
mov
or
jle
sbb
bound
inc
adc
mov
imul
push
loopne
div
dec
mov
ins
sbb
jl
iret
pop
(bad)
leave
jg
xor
push
in
int3
mov
sar
stc
rcr
push
daa
shl
mov
ds
lods
sub
mov
pop
sti
nop
bound
aad
cmps
mov
jmp
es
mov
and
das
cmc
jb
adc
mov
in
js
xchg
dec
mov
je
mov
ja
dec
mov
adc
jge
and
(bad)
sbb
cwde
leave
out
(bad)
xor
adc
pop
sahf
ds
fwait
ins
stc
fidiv
mov
fnsave
mov
iret
out
xor
or
test
cmp
retf
dec
push
out
push
ret
or
lock
cmps
aas
jno
jo
(bad)
mov
inc
arpl
aaa
sub
cmp
mov
stc
out
and
scas
lods
out
mov
xchg
retf
cmps
mov
dec
repz
pop
cmps
jb
js
fcom
aaa
or
fbld
into
je
jle
dec
(bad)
adc
pop
movs
jecxz
adc
(bad)
push
pop
pusha
into
and
push
dec
mov
cld
mov
dec
loope
sbb
int3
nop
mov
mov
(bad)
sbb
retf
mov
retf
jno
push
cli
jl
add
jbe
inc
xchg
pop
sbb
lahf
(bad)
out
push
loopne
sbb
jnp
fcmove
push
cmp
nop
jg
iret
lahf
outs
push
sbb
jle
cmp
and
movs
jae
fs
retf
adc
es
mov
add
sbb
ja
cmps
add
in
lods
and
mov
push
xchg
ds
mov
test
mov
call
pop
jbe
lock
jns
mov
sbb
loop
and
push
sahf
out
push
loope
xchg
cmp
cdq
xor
jbe
pusha
push
rcr
pop
xor
add
test
jo
mov
push
push
cld
or
mov
hlt
mov
push
movs
outs
lods
jbe
mov
daa
and
scas
sub
and
xor
inc
xor
mov
rcl
push
sbb
imul
mov
mov
push
adc
js
inc
leave
popa
add
scas
gs
jg
scas
add
sub
jbe
and
mov
xchg
cdq
mov
outs
add
cli
sbb
pop
pop
and
int
cmp
pop
dec
sub
xchg
sbb
fstp
push
(bad)
push
dec
add
sbb
inc
cdq
jnp
into
push
stos
mov
fbstp
mov
cdq
add
ja
add
sub
sti
icebp
add
daa
neg
sahf
inc
ja
mov
fstp
pop
pusha
into
outs
fstp
fnstsw
push
sub
or
jge
jl
ficom
stos
mov
jl
inc
pop
mov
add
outs
shl
aam
sub
outs
jmp
jo
jl
dec
leave
iret
dec
and
jo
out
loope
xor
mov
jnp
or
mov
imul
hlt
mov
push
pop
out
push
jo
cwde
dec
outs
jmp
cmp
gs
ins
jle
xor
mov
cmp
dec
jecxz
fmul
jnp
ds
fsubr
lock
sub
movs
popa
push
out
loop
jno
fist
icebp
sub
and
(bad)
icebp
add
mov
inc
jmp
pop
pop
inc
pop
pop
daa
add
jg
imul
jne
popa
add
sbb
pop
inc
mov
or
dec
or
dec
iret
pop
xchg
sbb
jae
xor
and
sub
xor
ds
jp
outs
pushf
lods
xchg
cld
sti
dec
jo
mov
retf
bound
xor
mov
lahf
test
mov
adc
lock
rcl
xchg
aaa
add
aaa
stos
into
jle
stos
xlat
mov
inc
arpl
jp
ss
sub
ror
test
sub
inc
jo
add
adc
retf
jl
je
(bad)
sbb
cmp
sub
and
xchg
mov
sub
push
mov
and
(bad)
rcl
push
adc
mov
icebp
xchg
xor
aad
ret
push
jae
adc
mov
push
ins
pop
sbb
cdq
loop
adc
push
push
js
mov
sub
push
ret
cld
add
loop
data16
jl
add
jbe
test
ins
movs
xchg
test
push
test
xor
and
mov
mov
ss
adc
mov
icebp
add
inc
outs
nop
and
fs
or
test
mov
jno
push
das
test
cdq
gs
stos
add
das
clc
lods
mov
(bad)
clc
mov
hlt
sub
loope
and
xchg
scas
call
jno
pop
pushf
ins
movs
jns
(bad)
cmp
icebp
loopne
xchg
xor
enter
adc
outs
cmps
sub
out
xchg
and
fisub
pop
mov
cmp
mov
ins
mov
shr
aad
mov
daa
mov
in
xchg
xor
mov
or
in
fisttp
push
sub
addr16
jl
xor
mov
mov
ja
inc
fcomi
sbb
neg
test
stos
mov
mov
cmps
hlt
call
cmp
cs
or
es
jmp
push
mov
test
adc
ins
mov
jp
stc
mov
aam
ja
sti
sbb
jae
and
jmp
clc
stos
push
dec
push
into
pop
or
enter
xlat
imul
ret
fcmovnb
call
mov
stc
pushf
shl
and
xchg
and
jae
hlt
lds
sub
sbb
repnz
shr
int
(bad)
fisttp
adc
loopne
(bad)
mov
xchg
mov
mov
imul
sbb
scas
and
retf
sbb
sbb
push
int
addr16
cmp
(bad)
push
pop
sti
jmp
jae
and
xchg
icebp
xor
xchg
sub
pop
fstp
mov
jmp
mov
les
cmp
stc
bound
dec
cmp
jmp
mov
div
lods
push
add
sbb
call
push
or
lods
pop
cmp
outs
pop
cmps
cmp
cmp
(bad)
jmp
sub
adc
mov
sbb
push
adc
out
lods
dec
cmc
push
pop
cmp
and
fdiv
cmp
lahf
pop
clc
jns
and
cwde
popf
(bad)
loope
xor
cs
cmp
mov
stos
lods
jle
ret
sbb
xchg
xchg
inc
xor
or
hlt
push
enter
jae
pop
out
fstp
jno
les
inc
dec
jae
int3
xor
stos
mov
and
xchg
cmp
(bad)
fsub
pop
push
add
test
stos
mov
jmp
imul
std
mov
lahf
imul
dec
mov
(bad)
lds
fs
(bad)
pop
clc
mov
outs
jmp
cmps
push
mov
imul
cmp
lods
pop
out
inc
call
xchg
mov
dec
sub
xchg
addr16
daa
repnz
jle
mov
rcl
arpl
retf
adc
mov
and
mov
push
fsubr
pushf
call
adc
pop
mov
jle
out
and
push
inc
pusha
call
sbb
gs
cmps
mov
add
adc
(bad)
fst
sbb
mov
fsubr
cmp
sbb
lods
sub
mov
popa
sbb
test
mov
cmps
ins
cmp
pop
push
jns
ret
add
adc
xor
mov
cmp
enter
jns
push
dec
sahf
xchg
jmp
push
dec
test
gs
fst
or
inc
movsx
(bad)
jge
inc
(bad)
ret
pop
adc
pop
es
inc
fdiv
mov
jmp
add
(bad)
adc
mov
fwait
mov
test
(bad)
scas
xor
fisttp
inc
enter
mov
xor
in
sub
jo
dec
les
outs
mov
ret
jecxz
test
dec
lds
les
cwde
cmp
enter
mov
push
jnp
jp
and
xchg
or
ds
push
movs
stos
cmp
scas
xor
fdiv
jo
xor
cmp
dec
dec
add
cmp
inc
je
and
adc
cdq
(bad)
lock
in
dec
push
pop
repnz
xchg
jecxz
mov
gs
(bad)
jae
mov
dec
cwde
sbb
push
aaa
mov
shl
xchg
jae
ins
imul
sub
ins
or
fild
adc
mov
cmp
sbb
mov
and
dec
cmp
xchg
push
pusha
ficomp
loop
test
mov
push
aas
repz
shl
lods
cs
mov
jl
jne
push
inc
jmp
inc
push
in
aaa
je
adc
sbb
sbb
mov
adc
mov
xchg
lahf
dec
dec
int
pop
add
sbb
xor
sub
mov
mov
ja
call
lock
mov
rcl
lods
(bad)
dec
push
clc
sbb
push
push
or
mov
fist
(bad)
or
dec
popf
fs
aaa
jl
out
imul
in
dec
jecxz
push
out
sub
dec
xchg
mov
jo
mov
je
cmp
mov
cmps
test
(bad)
xchg
enter
xor
arpl
pop
mov
sbb
sar
lods
enter
and
retf
mov
shl
pop
int
mov
retf
inc
sbb
in
xor
jmp
ins
adc
fs
push
(bad)
das
or
int3
(bad)
sti
ret
xor
mov
(bad)
pop
imul
ds
sbb
pushf
and
inc
sbb
pop
call
std
xor
test
lods
add
mov
and
das
ss
xor
mov
aas
push
cmp
pop
or
fld
fsub
mov
repnz
aaa
jge
imul
mov
pop
(bad)
cmc
xor
mov
fidiv
adc
dec
sub
fnstenv
inc
pushf
pop
dec
mov
add
je
pop
pusha
pushf
mov
add
or
ror
mov
mov
cwde
ins
out
cmc
and
cdq
pop
mov
test
imul
mov
(bad)
out
mov
test
or
sti
repz
xchg
dec
sbb
shr
jb
inc
xlat
fisttp
jecxz
mov
and
stos
dec
imul
daa
and
push
xor
dec
out
cmp
mov
sub
rcr
jmp
out
out
inc
sub
jae
int3
add
dec
fsub
outs
cmps
add
mov
jl
mov
loope
out
stc
icebp
inc
mov
(bad)
fld
push
pushf
dec
lods
movs
call
iret
push
cld
mov
pop
rcl
retf
jg
popa
imul
jl
adc
adc
xlat
sbb
or
xor
add
xchg
push
jmp
out
aas
stos
mov
fsub
mov
xchg
or
and
or
(bad)
fwait
idiv
mov
(bad)
jno
xchg
xchg
and
cdq
fmul
pop
jecxz
pop
nop
cmp
rcr
and
cwde
(bad)
and
xor
retf
add
cld
jmp
push
aam
repnz
in
mov
adc
sti
gs
sti
mov
cmp
inc
jle
aaa
rcl
mov
popf
sub
ds
dec
mov
in
inc
outs
pop
cmp
push
push
mov
cwde
aas
push
popf
fstp
xchg
popa
jmp
and
pop
ss
cmps
retf
imul
mov
arpl
rol
jle
or
sbb
leave
cdq
inc
pop
pop
loopne
addr16
retf
aam
mov
sub
(bad)
retf
xchg
push
test
jecxz
inc
push
cmp
xor
call
xchg
leave
sbb
fld
repz
jo
ja
mov
or
mov
sub
dec
and
mov
pop
sbb
pop
jnp
icebp
jmp
mov
adc
or
mov
sub
dec
fadd
cs
push
cmps
leave
mov
test
mov
mov
push
(bad)
fldcw
push
inc
cwde
pushf
cmps
and
push
js
sub
(bad)
fdiv
repz
add
ss
jmp
js
ss
test
sub
lock
in
xchg
loope
jl
mov
cmps
fsubr
dec
push
cwde
ja
xor
xor
pop
adc
jp
aas
inc
repz
aaa
inc
test
out
and
scas
je
push
xor
push
jns
lods
dec
sbb
and
dec
test
fdiv
(bad)
jb
cmps
lods
das
sub
ds
dec
call
mov
dec
hlt
ss
sar
sub
jge
adc
mov
loope
adc
push
inc
retf
jecxz
xor
add
pusha
jmp
sub
add
(bad)
sub
out
outs
out
nop
mov
inc
sar
test
xchg
xchg
mov
xor
(bad)
mov
icebp
je
add
shl
(bad)
nop
adc
imul
adc
and
mov
xlat
aad
sub
xor
add
stos
jge
and
loopne
movs
inc
pop
mov
(bad)
(bad)
scas
popf
neg
and
xor
pop
cmp
sti
rcl
adc
inc
(bad)
push
jb
inc
dec
inc
dec
loope
mov
cmps
mov
and
into
jecxz
mov
sub
xor
jl
push
add
cld
jg
xchg
je
jnp
fistp
or
loopne
gs
or
cld
out
jle
inc
lods
jge
and
pop
jo
into
cld
dec
push
test
in
mov
inc
cmp
pop
iret
in
test
push
cmp
xor
int3
aaa
std
pop
je
std
add
(bad)
out
dec
stos
ins
fcmovu
aam
mov
iret
popa
in
push
xor
or
sub
inc
fwait
push
cwde
mov
fsub
lahf
fyl2xp1
or
ficom
xor
test
fisubr
mov
add
mov
sar
lods
sub
cmp
add
dec
adc
ret
xchg
adc
jns
mov
nop
sub
das
inc
out
loope
adc
jnp
sbb
mov
pop
arpl
and
mov
fisttp
or
dec
and
cli
mov
or
mov
adc
pop
ss
push
(bad)
push
test
push
xchg
mov
and
sub
xchg
mov
sbb
mov
(bad)
mov
cmp
outs
sbb
aam
adc
leavew
in
xchg
or
add
xchg
scas
imul
rol
mov
leave
jns
clc
mov
mov
cwde
ja
(bad)
sub
jl
xor
xlat
out
add
int3
cmp
cmps
inc
sbb
dec
push
mov
fsubr
int
pop
mov
push
xor
add
(bad)
mov
mov
jae
push
ds
jl
jno
es
push
sbb
scas
cmp
ins
sbb
bound
idiv
mov
mov
nop
adc
push
add
inc
push
jnp
mov
adc
aas
cld
inc
mov
adc
leave
cwde
sub
pop
or
push
xchg
sbb
sub
int3
nop
dec
enter
pop
stc
sub
xchg
xor
mov
add
cdq
fld
mov
les
sti
pop
pop
add
loopne
aam
nop
cmps
bound
and
enter
jo
adc
push
loop
test
(bad)
xchg
scas
std
stc
(bad)
dec
dec
mov
mov
sub
repnz
and
mov
iret
bound
cmp
stc
(bad)
lods
push
out
push
push
sub
mov
(bad)
idiv
mov
scas
dec
ja
and
sbb
add
xor
fcomp
scas
inc
add
or
xor
sti
iret
mov
mov
outs
es
aaa
arpl
inc
sub
scas
dec
stc
xor
stos
mov
fimul
adc
arpl
sbb
jns
int
fdivr
xlat
imul
push
nop
sub
pusha
loopne
dec
xor
icebp
ror
pop
push
inc
scas
clc
rcr
std
rcr
add
sahf
xchg
scas
std
jno
push
sub
repnz
pop
jno
int
mov
outs
jnp
(bad)
hlt
mov
stc
xchg
pop
out
xchg
or
icebp
mov
test
sbb
add
and
test
fmul
pop
cmc
(bad)
fidiv
mov
popa
xchg
out
mov
pop
and
iret
or
adc
add
ret
mov
mov
or
call
inc
call
into
mov
movs
push
dec
int3
fld
ins
cmps
and
es
fiadd
mov
xchg
add
les
sti
sub
mov
scas
inc
ret
and
out
jb
pop
add
retf
or
or
call
ret
adc
gs
mov
pushf
cmps
cdq
cld
mov
es
pop
xor
in
mov
fstp
sbb
xlat
js
dec
dec
pop
add
mov
ret
(bad)
iret
js
mov
scas
ss
pushf
in
ins
pop
mov
scas
aad
mov
mov
or
jae
pop
mov
fisttp
rcl
leave
mov
aam
sbb
push
outs
xchg
adc
sbb
cmp
push
add
cli
xchg
jae
pusha
ins
out
or
push
or
retf
xor
cwde
mov
add
retf
(bad)
stos
fwait
push
mov
popf
push
into
mov
cmps
sub
mov
lods
adc
xchg
sub
int
jp
jo
xlat
jbe
outs
(bad)
pusha
lds
loope
mul
sub
mov
sub
dec
(bad)
outs
xchg
retf
dec
mov
lds
es
mov
and
mov
call
lea
xchg
icebp
mov
retf
aaa
mov
cmp
add
test
adc
jp
sub
mov
add
out
mov
inc
add
mov
mov
dec
pop
dec
jge
div
shl
xor
je
mov
aad
add
jle
inc
shr
cli
cmp
mov
add
arpl
aam
push
push
jmp
mov
add
pop
inc
jb
imul
das
mov
fimul
xor
in
mov
pusha
add
push
dec
lods
jae
dec
les
mov
add
pop
hlt
xor
icebp
mov
clc
dec
dec
pusha
jno
test
mov
xchg
lea
lea
adc
rol
and
mov
pop
invd
and
in
and
shr
enter
cs
shl
scas
mov
cmp
xchg
repnz
inc
in
dec
add
pop
jno
xchg
inc
fucomip
je
mov
jae
test
fnstsw
stos
mov
imul
test
iret
inc
into
scas
fs
rcr
inc
xor
neg
sahf
jo
pusha
jmp
add
pushf
cmc
xchg
popa
lahf
cld
xchg
mov
or
out
clc
push
xchg
sub
cmp
shr
sbb
push
mov
push
dec
push
dec
in
pushf
aas
jecxz
adc
test
jg
jno
push
je
(bad)
cld
lds
push
cs
jns
sub
out
xor
int3
inc
pop
adc
loop
shl
pop
ins
jns
int
jp
stos
xlat
cmp
mov
enter
push
mov
sub
rcl
jle
cmc
xor
jmp
fist
mov
mov
pop
or
movs
push
add
pop
dec
pop
or
popa
cdq
push
pop
cmp
test
xchg
sub
(bad)
sub
je
std
hlt
xchg
into
push
data16
push
iret
sub
xchg
jmp
or
cdq
jae
xlat
or
inc
and
push
das
repz
out
je
cwde
mov
push
dec
jmp
or
pop
repz
xchg
loopne
pop
cmp
inc
add
xchg
cmp
mov
nop
(bad)
push
sbb
lds
fidiv
push
(bad)
mov
xchg
test
add
and
xchg
in
fld
mov
xchg
mov
ds
sbb
and
jno
inc
retf
sar
mov
xchg
sub
inc
ret
aad
jno
out
outs
enter
push
or
mov
adc
push
loope
dec
push
nop
jbe
mov
jl
(bad)
inc
cmps
cmp
test
cli
adc
aad
clc
ret
out
jg
stos
cmp
jge
aam
sbb
pop
jecxz
cmps
retf
addr16
sbb
fsub
mov
scas
daa
icebp
cmp
push
in
test
cwde
call
into
push
push
dec
push
or
pop
iret
cmp
fadd
jnp
pop
xlat
mov
mov
mov
test
push
jmp
rcl
repz
push
test
adc
leave
sahf
cmps
cmp
cmps
add
dec
aaa
cmps
loopne
sar
inc
call
mov
mov
jne
adc
add
jns
orps
jmp
push
dec
mov
cs
lea
cdq
push
in
fistp
xchg
(bad)
dec
sub
add
jecxz
not
lds
sar
jne
into
in
fs
mov
rcl
jg
jns
mov
mul
icebp
mov
cli
pop
xchg
int3
sti
(bad)
(bad)
jmp
lods
add
lahf
stos
lea
or
test
adc
mov
clc
xor
mov
sbb
int
rcl
mov
sbb
pop
jp
jns
fcomp
pushf
popf
retf
rcr
test
mov
or
fnstcw
and
leave
dec
xchg
jle
je
in
aas
mov
fsqrt
jp
repz
(bad)
in
add
or
add
lods
pop
shr
sbb
js
mov
jmp
and
mov
dec
pop
jmp
pop
push
add
bound
jo
jg
(bad)
cmp
jns
nop
dec
push
mov
fidivr
stc
retf
xor
inc
scas
cmp
mov
add
jae
and
cmc
aam
imul
cwde
push
xlat
sub
fild
dec
in
add
pusha
push
enter
je
and
call
(bad)
fisttp
mov
jno
fcmovb
hlt
test
iret
scas
dec
and
ja
pop
movs
push
mov
stos
mov
and
dec
fwait
mov
outs
mov
xchg
pusha
pop
and
es
sahf
jae
ror
or
jmp
mov
(bad)
pop
idiv
not
pop
std
sub
and
sbb
push
sahf
in
mov
je
cli
inc
xchg
jmp
and
push
push
pop
sbb
jecxz
pop
stos
ja
jmp
rcr
jnp
shl
ror
adc
into
adc
div
clc
push
cmp
pop
cmp
enter
pop
mov
cmps
daa
mov
mov
retf
xor
push
adc
cmps
stc
sbb
jnp
inc
push
icebp
fnsave
hlt
add
dec
test
push
sbb
inc
ja
test
cld
push
mov
xor
mov
repnz
jo
pop
aam
jmp
ret
xor
add
lods
fcmovbe
mov
xchg
test
fist
test
mov
into
push
shr
xor
sbb
push
jne
loopne
pop
sub
xor
sbb
or
push
push
xchg
jbe
inc
lahf
inc
xor
add
or
mov
mov
push
std
pop
inc
icebp
mov
shl
jge
xchg
test
xor
enter
xor
pop
xor
mov
iret
pop
dec
mov
sub
fwait
icebp
mov
jnp
mov
outs
ffreep
lods
mov
nop
add
pop
mov
(bad)
in
movs
ja
(bad)
pop
daa
add
inc
inc
cmc
pop
cmp
mov
data16
xor
jns
dec
jbe
in
jecxz
xchg
mov
pop
sbb
xlat
and
lods
repnz
mov
cmovbe
sbb
xor
imul
push
mov
(bad)
add
lds
lds
fadd
cmps
xor
mov
and
sar
and
test
and
adc
hlt
cmp
mov
cmc
push
or
sub
or
push
shr
push
mov
pop
pop
(bad)
test
and
xchg
push
mov
dec
or
repz
pop
repz
daa
jge
inc
xor
pop
pop
push
xchg
rcl
mov
mov
sub
retf
push
sahf
add
(bad)
xrelease
pop
dec
inc
push
dec
or
dec
push
mov
dec
data16
movs
cmp
inc
mov
cmc
xor
inc
and
mov
loop
mov
and
add
or
es
test
push
cmp
pop
ins
and
dec
push
jae
jbe
or
or
out
loope
push
rcr
pop
and
pop
lods
xor
xchg
repnz
pop
scas
pop
mov
xor
mov
sub
xchg
(bad)
ficomp
jo
mul
xor
nop
jg
inc
adc
mov
sub
mov
mov
clc
xchg
stos
adc
push
pop
aam
popa
loopne
sub
pop
(bad)
mov
add
xlat
outs
pusha
les
xchg
retf
clc
adc
mov
icebp
jb
push
outs
inc
inc
cld
popa
adc
clc
jg
jae
stc
xor
ror
daa
cmp
sar
jecxz
sub
cdq
xor
(bad)
push
adc
xchg
stos
inc
ret
cmps
ja
daa
sbb
mov
sar
push
pop
dec
rol
ss
adc
repz
retf
jo
and
fadd
jmp
fld
xor
cmp
mov
(bad)
xor
inc
xchg
pop
xchg
inc
xrelease
mov
sbb
cmps
jl
in
fmul
push
jae
les
(bad)
jae
xor
mov
jmp
dec
stc
or
cwde
outs
pop
mov
jmp
add
repnz
pop
test
jae
dec
sti
icebp
ss
outs
push
loop
lds
add
mov
call
xor
jbe
fcom
stc
test
mov
fisub
in
sub
adc
test
jge
fldenv
xlat
mov
mov
(bad)
xor
movs
fisttp
(bad)
pop
add
je
retf
movs
mov
jo
cmp
jnp
test
pop
xchg
pop
cmp
ds
repnz
and
xor
popf
dec
or
ss
test
not
cdq
in
arpl
adc
xchg
out
dec
fldl2e
jmp
mov
sar
or
cs
push
fnstenv
push
jp
push
xchg
jge
repz
xlat
sahf
and
add
mov
xchg
js
xchg
dec
xchg
data16
rcl
imul
enter
loop
sbb
sbb
mov
pop
sbb
push
ror
mov
adc
cmp
(bad)
mov
fstp
iret
sub
into
out
dec
or
jle
dec
adc
call
pop
movs
adc
jne
or
xor
out
pop
push
mov
ja
sbb
jecxz
dec
lds
sbb
in
jle
mov
mov
xchg
out
mov
nop
sahf
imul
in
add
sbb
js
je
inc
in
xor
fcom
jno
mov
cdq
call
ret
mov
xor
sbb
inc
ficomp
loope
cmp
inc
mov
and
test
(bad)
fsub
imul
ret
daa
push
sti
mov
daa
xor
add
jecxz
(bad)
cs
nop
add
xchg
pop
lods
adc
popf
fwait
xlat
mov
adc
sbb
aad
dec
out
dec
inc
mov
xchg
test
adc
push
jns
mov
std
(bad)
movs
adc
push
xchg
scas
xchg
aam
dec
cmps
test
push
ins
add
retf
stos
or
dec
in
pop
dec
leave
ins
push
xchg
jnp
xlat
mov
and
fst
inc
test
sub
jnp
mov
dec
(bad)
(bad)
jmp
(bad)
mov
xchg
xchg
sbb
xor
adc
jnp
or
fmul
(bad)
add
adc
std
pop
adc
push
std
(bad)
jbe
into
out
dec
add
data16
adc
pushf
sub
sbb
out
push
pushf
inc
std
mul
add
xchg
not
cld
fst
mov
push
lock
and
inc
xchg
ins
repnz
and
sbb
ins
dec
leave
imul
jmp
jb
leave
or
call
adc
(bad)
aam
sub
cmc
fmul
jnp
ins
fadd
neg
push
cmp
movs
xor
fiadd
out
inc
inc
mov
addr16
retf
pop
call
sbb
ins
dec
loopne
jge
inc
mov
or
ss
mov
adc
cli
sbb
(bad)
xchg
or
jns
(bad)
inc
imul
pop
std
pop
fld
mov
test
xchg
sub
pop
ss
add
fcom
sub
pop
test
nop
std
pop
div
xchg
loope
sub
sub
add
push
std
ds
pop
retf
or
jmp
jp
scas
into
cdq
inc
jns
push
lea
div
and
push
jmp
xchg
jmp
mov
cli
add
js
xchg
push
xor
leave
add
mov
and
jns
dec
repnz
sub
push
mov
push
dec
sti
adc
dec
(bad)
ror
cld
cwde
repnz
scas
xor
stos
dec
pop
add
addr16
mov
xchg
jg
xor
fmul
nop
mov
cmp
arpl
clc
dec
(bad)
or
lds
fdivp
test
std
or
nop
jg
sub
push
mov
jne
enter
ja
(bad)
lods
imul
(bad)
push
je
int3
mov
stos
sahf
imul
mov
inc
or
jnp
pop
aaa
xor
dec
pop
(bad)
jbe
out
xchg
test
cmp
push
mov
dec
outs
xchg
stos
jb
mov
mov
xchg
add
sti
jp
std
and
sub
addr16
leave
outs
pusha
push
test
mov
lods
jmp
adc
mov
inc
xor
out
sub
and
and
push
adc
cmp
and
jp
daa
jecxz
cmp
push
dec
sub
out
clc
icebp
inc
in
mov
int
pop
xor
pop
cld
clc
shl
inc
ficomp
sub
hlt
add
xchg
xchg
jne
xor
jmp
pop
in
arpl
jne
mov
mov
nop
sub
xchg
push
or
pop
fsubr
test
push
jb
(bad)
xor
sbb
aad
cmc
cmp
cli
xor
add
mov
lea
clc
(bad)
jmp
out
xor
mov
mov
cmp
mov
push
ins
pop
out
mov
xchg
mov
mul
test
in
enter
aas
mov
jmp
outs
jnp
icebp
popf
push
xchg
dec
mov
sub
add
xor
mov
mov
fadd
hlt
mov
mov
pop
fisub
xor
ret
repnz
rol
out
stos
sbb
push
test
cdq
aaa
bound
or
bound
int3
push
aas
int3
push
outs
int3
jle
test
mov
and
outs
add
mov
push
inc
jle
jns
shl
mov
(bad)
jl
add
sub
pop
out
popf
jmp
aad
aad
(bad)
imul
push
mov
mov
pop
js
xor
hlt
aaa
mov
or
retf
jl
adc
cmp
movs
xchg
mov
xor
fild
pushf
scas
sti
fiadd
mov
arpl
pop
int3
enterw
ror
ds
nop
lock
test
scas
xor
pop
in
adc
xchg
mov
enter
inc
test
cmp
push
cli
je
adc
ss
push
iret
fild
cmp
repnz
retf
iret
push
imul
test
daa
mov
and
mov
add
int3
nop
ror
aam
cmp
ins
movs
inc
in
mov
sub
add
jno
mov
popa
mov
inc
(bad)
int
loopne
push
stc
and
fnstenv
ja
idiv
push
mov
pushf
or
jmp
jl
(bad)
xlat
fisttp
inc
sub
shr
ss
punpcklbw
dec
je
jno
movs
xor
inc
jecxz
mov
stos
hlt
sbb
jo
out
cwde
inc
xchg
xchg
jmp
mov
test
(bad)
stc
lea
jle
stc
cld
mov
imul
sbb
push
adc
pop
pop
xchg
mov
cdq
sbb
dec
loopne
cmps
dec
mov
jmp
cmp
mov
mov
push
hlt
lds
repz
movs
sar
fldcw
enter
in
data16
int
fild
loope
and
aas
mov
test
push
lahf
mov
or
retf
out
sub
sub
aas
sub
test
stos
push
aaa
das
popf
jae
int
xchg
xor
push
shl
stos
(bad)
and
sbb
xchg
xchg
and
mov
push
or
call
mov
cmp
adc
jnp
dec
dec
sti
retf
xchg
test
sub
mov
xor
je
xor
in
sbb
popf
jge
out
jns
jmp
prefetchw
mov
mov
adc
or
ficom
pop
xor
sub
lods
(bad)
leave
jbe
std
push
(bad)
cli
loop
imul
retf
call
mov
sar
and
call
sub
xchg
sub
mov
dec
pop
je
mov
dec
mov
jo
xor
mov
call
ja
adc
pusha
lds
rcl
mov
adc
mov
test
adc
enter
aam
xor
or
jb
and
loope
stos
cs
sub
into
repnz
icebp
add
sbb
mov
js
outs
xor
xor
outs
out
jmp
add
jge
cmp
je
or
sahf
mov
adc
(bad)
cmp
call
movs
ds
pop
popa
mov
rcr
sub
or
push
fwait
push
push
aad
push
mov
dec
cmps
add
dec
popf
sub
lea
test
add
inc
leave
pusha
adc
shl
mov
in
cmps
fcom
lods
jb
aaa
in
dec
call
push
and
cmp
stos
xor
jbe
mov
daa
push
pop
or
(bad)
clc
inc
inc
ret
jno
xchg
retf
div
add
or
add
xor
mov
xchg
jmp
push
mov
sahf
and
fisubr
ins
and
and
xor
stc
movs
mov
(bad)
cld
mov
pop
pop
das
into
jno
sti
lds
nop
mov
popa
daa
aas
in
pop
fnstsw
sub
mov
ds
xor
(bad)
movs
push
push
xor
jns
pop
popa
stos
dec
inc
cli
cli
into
cwde
out
or
inc
mov
ret
les
leave
das
and
les
or
ja
das
or
push
fnstenv
xchg
adc
ins
jno
repnz
jb
cmps
pop
(bad)
sbb
xchg
das
shl
push
(bad)
outs
dec
call
dec
or
and
fwait
add
repnz
dec
lds
sbb
jo
out
addr16
iret
adc
outs
mov
jmp
test
cmp
jle
add
adc
fwait
sti
scas
fwait
inc
add
(bad)
push
push
xor
fiadd
fnstenv
lock
outs
adc
out
jge
inc
lea
pop
imul
mov
shr
push
repnz
push
push
cmp
push
dec
shl
in
sar
ins
shl
xor
adc
dec
pop
ret
xchg
repnz
ds
and
loop
xor
pushf
push
js
add
loope
inc
add
pop
jmp
jmp
addr16
ins
dec
js
int
test
jmp
movs
int
mov
hlt
sahf
and
es
xchg
jg
adc
add
sti
push
(bad)
cmp
sub
sar
pop
xor
push
or
enter
jb
xor
leave
add
mov
(bad)
xlat
mov
call
pop
mov
in
sub
cmc
aaa
adc
mov
mov
sahf
jmp
dec
xchg
aad
mov
and
cmp
cmps
inc
cwde
stc
inc
(bad)
addr16
sub
(bad)
jmp
mov
add
inc
or
into
or
cmp
push
imul
(bad)
data16
lods
iret
aam
test
ins
fsub
in
xor
jge
inc
mov
ds
push
cmps
pop
add
es
pushf
js
mov
retf
das
ds
jmp
pop
push
or
inc
ja
xchg
aad
out
addr16
outs
adc
inc
test
cmp
test
popf
sbb
pop
sbb
push
mov
and
mov
jne
add
sub
push
mov
std
inc
ret
jl
push
out
dec
dec
pop
ja
addr16
aaa
push
add
sbb
pop
call
paddusw
pop
xor
jbe
push
and
mov
or
ins
outs
xchg
out
and
adc
inc
lahf
addr16
mul
jg
add
pushf
mov
sub
out
adc
adc
mov
jp
imul
std
push
int3
vcvtpd2ps
xchg
xchg
push
loopne
shl
scas
cmp
push
dec
cli
aam
jle
sub
jg
push
scas
jl
or
inc
icebp
pushf
and
jmp
int
fimul
jecxz
xchg
es
add
jbe
xchg
adc
xchg
and
adc
pop
xchg
push
mov
mov
out
inc
push
adc
arpl
out
xor
push
mov
adc
movs
adc
xchg
xor
jb
push
addr16
mov
push
(bad)
aas
mov
xor
shl
cmc
clc
mov
mov
xor
out
mov
leave
icebp
movs
mov
(bad)
cmp
int
inc
stc
dec
fcmovne
pop
sub
jnp
inc
ins
imul
(bad)
mov
div
inc
jnp
mov
mov
cmp
loope
outs
or
jp
fistp
les
push
mov
dec
cmp
jno
jo
xchg
stos
mov
out
rol
add
pop
movs
out
mov
retf
xchg
loope
lahf
out
xor
cmp
inc
mov
mov
cwde
dec
xchg
jb
mov
jnp
leave
mov
jbe
pushf
add
xchg
xor
ds
jne
js
ss
and
fisubr
add
add
fisubr
fucomip
push
push
xlat
fld
pop
aaa
cwde
lds
mov
pop
xchg
in
add
add
in
dec
push
cdq
stos
dec
push
mov
dec
jae
movs
dec
out
sub
push
movs
xchg
loope
scas
(bad)
push
sbb
rol
pop
add
iret
or
mov
xchg
data16
and
lock
arpl
push
sbb
jbe
pop
mov
repz
cli
addr16
scas
jns
push
cmp
repz
lods
mov
jle
mov
lods
shl
jb
sub
adc
inc
sbb
data16
mov
cdq
inc
push
mov
inc
ficom
push
inc
leave
popa
add
jmp
in
cs
push
or
pop
outs
aad
mov
cmps
leave
dec
inc
ret
sbb
mov
mov
add
jnp
(bad)
cs
xchg
cld
out
data16
rcl
adc
and
sub
mov
bound
push
cmps
push
inc
dec
(bad)
cmps
xor
sti
cmp
ins
push
imul
dec
xchg
les
inc
mov
cmc
or
add
out
adc
pop
sub
das
push
and
sub
into
adc
stos
sbb
mov
test
sar
gs
xor
cmc
jmp
xor
out
inc
dec
xchg
pusha
inc
clc
es
fs
out
loop
sbb
js
mov
and
cwde
mov
xlat
movs
and
add
and
test
push
fisttp
fdiv
mov
popf
gs
out
sbb
xchg
loope
stos
(bad)
mov
lock
jge
iret
mov
es
(bad)
xor
adc
shl
cmp
cs
sub
icebp
pusha
(bad)
rcl
aas
dec
jb
retf
fs
jno
popf
jnp
and
cli
rcl
adc
fiadd
popf
xchg
mov
(bad)
hlt
mov
movs
jmp
dec
not
(bad)
pop
sahf
mov
jns
in
js
jae
or
aam
adc
mov
cmp
les
scas
pop
add
repnz
and
imul
sbb
sti
popf
jo
xlat
out
and
cmps
cmp
dec
adc
iret
xor
mov
push
sti
sti
retf
add
(bad)
enter
adc
scas
outs
add
ja
cmp
jmp
or
aaa
repz
or
iret
mov
(bad)
xor
cmp
cdq
xchg
sbb
ret
lea
sahf
leave
pushf
imul
rol
pop
mov
mov
(bad)
lea
push
xchg
ret
adc
cmp
fld
pop
call
cmp
out
fadd
inc
or
cmps
stc
pop
mov
cmp
adc
pop
daa
sub
test
test
and
daa
inc
iret
lahf
sub
add
test
clc
mov
xchg
jge
loope
mov
and
repz
inc
sub
shr
sbb
add
scas
movs
mov
or
lahf
js
pusha
mov
dec
jecxz
repnz
inc
adc
dec
data16
jmp
xchg
and
repz
lds
ds
js
mov
lods
(bad)
loopne
in
jp
mov
dec
fsub
and
loopne
sbb
xor
cmps
inc
(bad)
dec
pusha
fwait
test
xchg
jbe
hlt
shl
pop
call
add
adc
out
mov
or
movs
cmp
in
adc
jmp
stos
mov
push
inc
sbb
leave
jbe
outs
int3
lea
out
xchg
xchg
ret
aam
dec
adc
sti
out
movs
mov
mov
xor
enter
in
push
mov
jge
jnp
cmp
pop
shl
cmps
jmp
inc
ret
data16
sbb
(bad)
out
xchg
xor
jmp
sub
mov
mov
or
or
mov
and
sahf
das
xor
pop
lahf
je
sub
loope
nop
cmps
add
inc
adc
sub
jbe
dec
pop
add
icebp
mov
sti
inc
pusha
outs
mov
mov
loope
scas
mov
dec
movs
inc
xor
dec
fdiv
cmps
xchg
or
add
movs
sbb
pop
push
mov
mov
jl
mov
ja
in
xor
or
lahf
jmp
ja
add
retf
(bad)
cmp
fdivr
xor
and
fwait
mov
(bad)
pusha
add
xchg
into
mov
popa
inc
fidiv
outs
loop
add
push
ins
scas
xchg
sahf
out
stc
call
fstp
xchg
mov
aad
shl
call
adc
mov
neg
or
mov
cmp
mov
jmp
dec
hlt
mov
adc
test
jecxz
inc
or
not
test
mov
sbb
repz
sar
frstor
jnp
or
push
and
sub
push
imul
(bad)
push
and
inc
in
inc
pushf
lock
out
xchg
cli
xchg
in
jno
mov
mov
imul
mov
fidivr
inc
mov
or
push
unpcklps
add
mov
xchg
int3
and
pushf
push
pop
mov
inc
push
xor
out
scas
xor
cs
out
retf
pop
scas
push
pop
rcr
jnp
jno
out
inc
cld
sub
xchg
sub
jmp
movs
sub
out
jg
in
dec
sub
sub
push
push
sub
dec
or
cmps
add
dec
xchg
into
mov
mov
rcr
pop
sub
add
sub
xlat
push
or
std
cwde
pop
retf
xor
add
mov
sub
popa
retf
dec
aam
jmp
shl
(bad)
xlat
lds
jecxz
jnp
jmp
mov
fsub
push
pop
call
xchg
jo
(bad)
stc
jl
data16
pop
mov
or
sub
dec
aad
adc
push
dec
loop
jmp
mov
dec
or
scas
and
retf
imul
ret
inc
pop
dec
int3
test
outs
ret
dec
inc
repnz
aas
mov
xor
pop
adc
mov
push
cmps
stos
mov
adc
sbb
and
jg
adc
test
inc
ins
dec
bound
mov
bound
pop
int
cli
adc
fst
jo
xchg
add
ret
mov
(bad)
lods
sbb
bound
movs
sbb
jae
xchg
scas
lods
inc
push
mov
mov
sbb
retf
inc
addr16
call
mov
lods
rcr
xor
cmc
xor
sti
xor
popa
movs
inc
enter
ins
imul
push
or
mov
stos
pop
mov
in
lds
in
ror
mov
mov
xchg
mov
shl
jmp
sbb
cs
or
loope
mov
ds
add
pop
pop
jle
mov
cwde
add
mov
fisub
push
mov
push
mov
and
pop
pop
jbe
aam
ror
dec
mov
mov
adc
test
mov
mov
imul
xchg
dec
cdq
jns
jae
neg
mov
dec
xchg
mov
test
xchg
movs
dec
out
gs
fistp
dec
ja
aas
outs
cmp
icebp
xor
mov
pop
sbb
cdq
xor
aam
jl
int
xor
fs
adc
fidivr
push
xchg
push
sbb
cmc
mov
mov
lahf
xor
cmps
out
loop
loopne
jg
push
sub
out
xor
sub
inc
jmp
loope
jmp
ror
mov
xchg
and
or
xlat
jecxz
or
inc
mul
inc
mov
daa
sbb
call
inc
sub
out
int
adc
mov
xchg
scas
push
push
adc
inc
inc
popa
sub
jmp
and
xor
mov
mov
pusha
mov
(bad)
fld
jae
or
mov
mov
push
sub
mov
and
mov
sub
push
dec
mov
aam
adc
addr16
sbb
inc
mov
xchg
shr
adc
jo
aaa
rcr
pop
or
xor
int
push
nop
std
sar
cs
cmp
xlat
test
inc
mov
dec
aad
cmp
movs
pop
jle
ror
sub
cdq
sti
xchg
sub
sub
sub
rol
mov
(bad)
sub
push
ficomp
imul
mov
dec
pushf
fstp
cmp
mov
jnp
out
rcr
jmp
xchg
cmp
jge
pusha
dec
enter
and
or
inc
dec
push
sub
je
hlt
mov
xchg
sbb
cmc
lds
addr16
(bad)
fisubr
aas
pop
stc
adc
popf
mov
cmps
ins
cwde
adc
and
push
jbe
add
push
pop
jle
cwde
call
fld
pop
pop
xlat
mov
ins
jb
pushf
pushf
and
mov
and
xor
mov
mov
or
push
ret
js
sub
and
dec
add
(bad)
mov
les
pop
mov
sahf
push
clc
add
or
jmp
les
int3
int
jle
mov
mov
pop
jge
sub
xchg
pop
add
xchg
dec
loop
cmps
rcr
repnz
or
imul
fwait
mov
bound
and
cs
rcl
scas
xchg
mov
(bad)
movs
aas
add
adc
or
iret
and
add
stc
xchg
loop
dec
cmps
push
cmp
scas
das
sub
cwde
pushf
fistp
test
mov
xor
and
adc
fdivr
imul
fwait
dec
into
nop
cmp
adc
mov
push
push
(bad)
ds
lahf
sbb
mov
lds
dec
movs
jmp
xchg
test
stc
fwait
in
inc
test
pop
movs
inc
aad
ret
adc
push
fs
call
inc
ret
imul
sub
test
add
addr16
fcmovu
xor
into
jecxz
mov
dec
xchg
fiadd
fwait
cld
ds
pop
ficomp
pop
aas
shld
push
imul
mov
mov
inc
ss
nop
mov
add
or
xchg
sti
outs
xor
fldcw
xchg
push
sbb
add
ins
repnz
ins
push
mov
mov
sub
and
aaa
sar
in
ds
xor
std
push
jmp
and
popf
mov
into
dec
popf
sti
in
(bad)
mov
into
add
leave
fmul
jo
add
add
ins
sub
jb
add
cmp
mov
pop
mov
sbb
inc
imul
popf
lahf
and
add
sbb
mov
push
sub
mov
mov
sub
ficom
cwde
xchg
sar
push
xor
pop
cvtps2pd
inc
in
enter
test
mov
xchg
fmul
inc
and
pavgb
adc
(bad)
xlat
cs
and
inc
push
jbe
cmp
dec
ja
retf
add
out
cli
mov
jp
ret
mov
cli
push
cmps
add
dec
jle
mov
push
pop
out
out
je
mov
ss
cmp
sub
pop
and
stos
adc
jecxz
and
icebp
push
adc
mov
cmps
jae
movs
pop
push
xchg
sub
inc
popa
retf
movs
test
jl
xchg
dec
mov
cmps
dec
dec
lds
mov
pop
in
ret
xchg
fisub
(bad)
mov
xor
frstor
cdq
mov
sbb
fstp
pop
fstp
inc
aam
mov
pop
iret
or
js
pop
sbb
dec
out
iret
adc
jmp
push
movs
shr
cmp
add
jmp
jle
rol
iret
outs
(bad)
movs
mov
pusha
imul
mov
sar
add
fst
pop
mov
push
and
out
sub
cld
pop
jb
les
gs
cmp
pop
gs
sbb
mov
xchg
cwde
(bad)
fcmove
cmp
xchg
or
cli
mov
push
cli
xor
or
inc
mulsd
test
aad
cmp
and
ds
imul
ret
fsubp
dec
bound
sub
pop
jb
ins
sbb
stos
push
retf
push
mov
(bad)
cld
jae
pop
frstor
fucom
addr16
repz
loop
fiadd
(bad)
imul
(bad)
ins
dec
push
xor
std
inc
push
pop
outs
inc
and
call
lahf
sti
test
jo
mov
inc
push
test
inc
and
leave
inc
push
jae
in
neg
cmp
push
out
iret
pop
shl
dec
pop
jl
mov
xchg
scas
mov
dec
push
jbe
clc
cmps
add
leave
shl
ins
jns
ja
jp
leave
mov
jbe
scas
outs
mov
fbstp
js
sbb
mov
mov
gs
adc
or
add
sub
inc
imul
icebp
mov
ss
int
cmp
call
ret
xchg
xchg
dec
and
fst
inc
fistp
xchg
add
loop
test
clc
push
jmp
jne
stos
pop
xchg
mov
cmp
lock
clc
push
fistp
dec
jmp
cwde
mov
add
adc
mov
push
sub
mov
dec
sti
pushf
cmp
add
and
mov
mov
adc
fsubr
sub
lahf
leave
push
mov
sbb
shl
add
adc
mov
test
in
mov
fwait
aaa
shr
stos
inc
push
je
int
mov
repz
inc
mov
psubw
mov
in
dec
sar
pop
lds
clc
dec
and
mov
jmp
outs
inc
or
sbb
sahf
jmp
fwait
in
jl
mov
bound
mov
or
xchg
xor
dec
(bad)
dec
ficomp
xchg
cmp
adc
xlat
add
in
not
ret
fild
test
xchg
xor
ret
ss
lds
(bad)
mov
xor
enter
daa
(bad)
icebp
add
dec
sahf
push
fsubrp
stos
leave
push
ins
inc
sbb
sbb
xor
sub
pop
ins
inc
lods
cmps
mov
pop
dec
adc
loopne
mov
adc
xor
clc
ss
rcr
ins
adc
mov
inc
stos
jmp
movs
pop
jnp
pop
add
jge
and
imul
sub
jge
(bad)
bound
mov
xchg
cmp
xchg
jecxz
mov
popf
jmp
fcom
out
ins
mov
jmp
adc
mov
ds
cs
arpl
sahf
retf
sub
test
scas
mov
push
(bad)
sub
xchg
cli
jp
push
add
or
lock
cmc
jbe
lods
xor
movs
adc
dec
cli
xor
adc
out
in
fsub
jl
aam
std
and
adc
into
inc
inc
inc
test
dec
add
xor
jo
jmp
hlt
mov
nop
mov
jmp
loopne
popf
mov
scas
scas
hlt
mov
sub
dec
ja
enter
inc
bound
leave
sbb
pusha
call
call
loope
cmp
mov
les
mov
add
xor
and
push
mov
xchg
and
jns
inc
push
mov
aam
(bad)
rcl
(bad)
jns
jae
sub
sbb
mov
in
mov
and
mov
pop
sbb
sbb
int3
cs
fisttp
mov
clc
cmp
cli
repnz
or
mov
push
mov
inc
xor
stc
fucomp
or
xchg
mov
or
imul
mov
jae
outs
daa
fucomp
sti
sbb
adc
jle
sub
repz
das
mov
mov
jns
sbb
xor
xor
mov
pop
lds
and
lods
push
aam
push
test
test
daa
retf
adc
retf
popf
dec
pop
inc
and
mov
xor
repz
push
imul
pop
ror
sti
mov
mov
cmp
mov
cdq
sbb
ss
jmp
in
xor
ja
gs
mov
dec
hlt
mov
inc
pop
cmp
rcr
nop
pushf
movs
ins
scas
in
jg
jmp
cmp
sbb
mov
mov
pop
icebp
mov
sbb
shl
rol
loopne
outs
je
les
icebp
xor
pop
add
push
addr16
push
and
(bad)
jb
fcomp
int
xor
pop
daa
push
js
fwait
(bad)
(bad)
pop
stos
sub
fdiv
popf
jecxz
shr
bound
out
scas
int3
lock
loope
pop
call
mov
cmc
jmp
(bad)
out
jae
adc
and
int3
mov
ds
pop
sub
sub
jmp
(bad)
mov
or
cmp
and
push
leave
out
push
sbb
push
loope
imul
enter
mov
rcr
sub
lahf
stos
pop
mov
add
ss
pop
ss
mov
or
adc
mov
dec
leave
inc
push
hlt
mov
mov
(bad)
in
push
lea
jmp
pop
cwde
mov
jb
mov
jge
ret
mov
stos
xor
pusha
adc
push
mov
dec
iret
(bad)
outs
add
loopne
jbe
mov
mov
leave
pop
test
add
cmp
push
pop
xor
sti
dec
mov
add
xchg
adc
test
in
lock
inc
mov
test
mov
(bad)
(bad)
mov
neg
sub
inc
and
lods
ins
shl
mov
repnz
inc
push
dec
add
xor
dec
jle
jne
lahf
dec
in
call
mov
aam
xor
call
icebp
cmc
jo
(bad)
aam
nop
add
sub
push
icebp
dec
clc
mov
jmp
scas
fs
dec
jmp
or
and
pop
(bad)
sbb
out
mov
adc
scas
sub
inc
push
xchg
pusha
loope
xor
imul
inc
enter
push
call
hlt
imul
adc
pop
daa
ficom
push
and
pop
out
xor
enter
jmp
sbb
pop
test
popa
out
mov
jb
fist
xor
sub
xchg
xor
ds
push
jno
sbb
scas
lods
xor
lods
push
call
in
imul
aad
or
pusha
aaa
dec
aad
popa
mov
sbb
and
push
test
add
sbb
test
and
xchg
cdq
stos
xor
int3
and
clc
out
cmp
mov
test
xchg
fmul
xlat
mov
and
and
pop
and
adc
xchg
xor
push
pop
sub
sub
cmp
in
bound
and
jmp
push
xor
mov
jmp
dec
jp
cmp
sbb
push
(bad)
dec
jmp
mov
(bad)
push
out
test
fwait
dec
push
mov
xchg
iret
pop
cmps
ins
ror
pop
xchg
xchg
sub
fld
xor
es
sub
hlt
bound
fiadd
push
movs
jae
shr
dec
sub
cmp
stos
sbb
outs
les
jns
in
movs
sub
sub
ror
cmps
sub
(bad)
pop
sbb
add
fiadd
out
movs
jge
mov
arpl
aaa
push
das
add
sbb
lahf
jo
inc
push
shl
cmp
jg
rol
sbb
cmp
pop
test
push
push
(bad)
(bad)
dec
pop
lds
xchg
stc
mov
mov
push
xchg
ficom
or
push
fucomip
xor
js
adc
fcom
jg
sar
jae
pop
bound
jno
cmp
and
test
push
(bad)
jno
call
fs
mov
push
mov
stos
adc
mov
xchg
outs
adc
loope
bound
test
mov
push
pop
ret
test
ret
popf
aad
scas
call
or
jno
(bad)
inc
dec
and
push
cdq
neg
dec
mov
and
jbe
dec
dec
ret
jmp
movs
sub
call
addr16
xor
mov
sahf
movs
dec
pushf
add
xchg
push
jnp
lea
dec
stos
or
ja
and
imul
out
les
or
popf
push
jno
jp
loope
mov
adc
mov
loope
in
cmp
js
jno
inc
jge
cli
adc
jne
cli
rcr
dec
xlat
jns
(bad)
aad
loopne
(bad)
cmp
or
cld
test
fnsave
(bad)
rol
cmps
push
movs
push
inc
icebp
jo
xchg
out
or
add
add
test
pop
jmp
push
add
fld
and
sbb
or
xlat
sub
fisttp
or
dec
add
add
dec
(bad)
enter
xor
push
adc
cs
mov
mov
xchg
nop
xor
cwde
mov
mov
inc
loopne
sub
dec
inc
and
jmp
dec
movs
cmps
aam
cmp
cli
js
aam
in
std
cmp
mov
push
push
jbe
and
add
push
lods
aaa
push
imul
sbb
popf
pushf
ds
int
push
pop
icebp
jae
aam
xchg
adc
and
pop
into
pushf
cmp
ret
push
mov
hlt
mov
(bad)
lods
and
pop
dec
push
daa
not
inc
ja
dec
rcr
retf
dec
repnz
outs
mov
std
int3
es
dec
ja
jmp
mov
cmc
retf
(bad)
sahf
outs
jmp
pop
pop
mov
fnstenv
sub
cmp
jp
cwde
pop
in
push
dec
xlat
jmp
mov
popa
repnz
inc
and
and
ror
jecxz
mov
fisttp
cld
cdq
add
adc
and
or
addr16
cmp
sbb
(bad)
loope
fidiv
addr16
adc
sub
mov
jmp
jb
pop
mov
retf
shl
jg
adc
adc
test
fstp
dec
lea
pusha
cmc
aad
movs
push
mov
inc
outs
lahf
adc
ficom
jnp
add
xchg
inc
jecxz
mov
popa
ds
mov
pop
les
clc
mov
mov
mov
cwde
push
inc
jb
pop
leave
add
and
xchg
add
aas
aam
repz
dec
in
pop
jmp
sub
pop
fadd
(bad)
mov
imul
popa
(bad)
mov
xor
gs
push
dec
sub
sahf
fst
inc
lds
jne
xchg
cmp
lds
cmp
ins
jle
inc
mov
cmp
ins
mov
cdq
mov
jo
mov
icebp
imul
ffree
dec
push
sahf
mov
and
jae
mov
(bad)
cmp
call
cld
popf
sbb
dec
mov
jecxz
or
adc
push
jle
mov
loop
mov
jecxz
xchg
push
pusha
dec
sahf
xchg
adc
and
jb
mov
ret
push
kmovb
rcl
shl
adc
movs
or
test
add
sub
add
outs
es
out
and
xchg
jb
sub
cmp
or
pop
cmp
and
rol
and
xchg
movs
mov
cmps
jecxz
std
push
popa
(bad)
ins
cld
sub
scas
push
push
xchg
repnz
push
xor
adc
mov
jno
xor
out
cmps
lods
push
mov
adc
xchg
popa
jae
pop
mov
or
(bad)
(bad)
xor
sbb
jl
pop
js
jp
mov
pop
sub
or
scas
and
je
aad
sub
std
pop
rcr
lods
mov
cdq
cmc
addr16
into
push
sbb
fadd
pop
in
inc
pop
cmp
pop
inc
lea
jo
outs
out
iret
jae
and
mov
(bad)
xor
mov
push
adc
mov
mov
iret
imul
imul
fsubr
push
xlat
mov
int
lock
pop
outs
mov
fst
shl
jno
add
ja
aas
cmp
bound
sbb
dec
js
mov
adc
mov
js
ja
adc
shr
mov
fstp
outs
sub
mov
cs
cwde
cmp
imul
ins
scas
data16
cld
and
dec
xor
push
icebp
ins
fistp
pop
fst
addr16
retf
cmp
icebp
shl
pusha
cli
sub
jp
xor
lahf
or
add
ins
gs
cmp
es
mov
dec
(bad)
push
pop
pop
loopne
pop
or
in
rol
mov
mov
stos
push
mov
mov
gs
mov
xchg
xor
push
(bad)
test
push
mov
jns
enter
adc
sar
fist
nop
test
cwde
push
repnz
sbb
outs
sbb
sub
mov
xchg
sbb
adc
popf
(bad)
fstp
pop
sub
cwde
pop
rcl
push
out
inc
addr16
xlat
push
test
retf
rcr
inc
aam
stos
ret
test
add
mov
xor
cmps
mov
into
pop
jle
leave
outs
loopne
add
mov
jb
add
popa
xor
adc
jno
jne
fidiv
dec
xchg
xchg
cmp
mov
daa
mov
lods
outs
mov
ret
ja
jge
push
mov
adc
scas
or
add
sub
mov
ins
iret
and
mov
ss
push
mov
jmp
in
push
pop
and
jo
and
in
pusha
imul
dec
pop
sub
or
bound
dec
pop
bound
or
ja
add
or
dec
mov
and
adc
js
shl
pop
es
push
cmps
jmp
mov
fldenv
mov
jnp
rol
test
pusha
inc
and
inc
push
aad
mov
xor
lea
sub
aaa
or
data16
jne
and
cmp
fadd
xchg
mov
mov
and
cmp
xchg
adc
mov
not
sbb
gs
and
sbb
and
push
mov
cmp
(bad)
lock
retf
std
ss
test
call
bound
pop
ss
xor
push
and
cmps
sar
inc
push
retf
adc
lods
es
xor
or
dec
inc
in
ret
inc
cmp
pusha
retf
cmps
xchg
mov
int3
pop
ins
inc
iret
call
dec
fcmovb
inc
and
push
adc
(bad)
outs
sar
pop
add
pop
mov
inc
xor
fst
mov
xchg
pop
out
aaa
mov
rcr
inc
sar
fwait
repz
push
mov
js
adc
int3
(bad)
jmp
add
mov
pop
(bad)
cmp
and
adc
ins
jae
(bad)
into
hlt
inc
arpl
popf
outs
hlt
jo
pop
xor
loop
inc
jle
mov
popa
inc
aaa
mov
shr
sub
xchg
scas
bound
mov
scas
sub
dec
mov
xchg
jo
mov
std
pop
cmp
loopne
pop
sub
pop
addr16
inc
or
pop
add
popa
pop
aaa
cmp
mov
push
repnz
cmp
ds
sub
sti
call
and
jno
mov
pop
push
jmp
push
cmp
cs
cmp
xlat
cli
xchg
je
jle
int
jp
popf
rol
cmp
(bad)
and
cmp
aad
ins
test
lods
and
lds
test
xchg
adc
iret
cmps
inc
xchg
test
pop
sbb
call
loopne
and
xlat
xor
adc
rcl
pop
cmps
xor
jne
inc
mov
mov
mov
test
loopne
(bad)
push
test
cmc
mov
sub
jmp
or
pop
xchg
or
xchg
mov
or
ret
sti
inc
push
sub
out
movs
and
push
sbb
(bad)
and
and
call
cmovbe
imul
aad
ja
and
mov
push
aas
clc
out
out
scas
int
mov
inc
(bad)
and
mov
inc
xor
xchg
arpl
lahf
xchg
lods
mov
xor
cwde
cmp
xchg
out
shl
xchg
imul
pushf
jae
das
ror
xor
xchg
cmp
mov
pushf
ret
sti
lock
fimul
mov
and
outs
add
jle
push
jmp
mov
imul
push
adc
and
hlt
xchg
xchg
test
mov
retf
fdiv
call
loop
mul
inc
fisttp
shl
mov
sub
push
pop
(bad)
xlat
sub
repnz
mov
mov
jne
inc
scas
test
arpl
sbb
rcr
mov
into
icebp
mov
pushf
sub
mov
imul
cld
call
out
clc
popf
imul
jmp
jmp
cmp
test
dec
cmp
sbb
xchg
into
dec
mov
(bad)
mov
out
xor
clc
sub
repz
push
push
jno
loop
and
and
and
and
imul
and
adc
mov
add
inc
pusha
retf
xchg
jmp
shr
popf
cmps
sahf
dec
fld
sbb
add
aas
inc
icebp
out
or
(bad)
cwde
mov
iret
(bad)
in
test
cmp
ret
and
sub
mov
sti
pop
aas
push
lahf
push
pop
test
inc
push
jmp
dec
xor
xchg
jecxz
mov
movs
pop
dec
or
pop
pop
dec
cld
icebp
clc
add
jle
sbb
or
sbb
mov
in
xchg
es
pushf
inc
out
shl
xchg
sbb
popw
outs
mov
out
ret
xchg
stc
scas
sub
repnz
adc
in
(bad)
mov
jnp
iret
adc
inc
dec
cmc
nop
and
clc
gs
dec
data16
mov
dec
lea
test
add
das
jo
nop
adc
jno
mov
int3
adc
pop
ins
and
and
xchg
sub
ror
adc
addr16
inc
pop
mov
lods
stc
fst
ins
shr
int
xchg
cmp
ret
sbb
mov
das
dec
sbb
adc
mov
loopne
push
fcompp
sahf
enter
test
xchg
adc
in
aaa
inc
dec
pop
mov
imul
nop
dec
mov
mov
call
cdq
xchg
mov
push
arpl
push
fiadd
arpl
aas
push
popf
or
fucomi
pop
inc
sar
data16
add
pop
push
jne
dec
imul
lods
loope
pop
in
push
cli
or
mov
pop
aad
xchg
fdivrp
shl
aad
cmps
popa
in
(bad)
aam
retf
sub
into
mov
pusha
sbb
pop
out
loop
loopne
stos
ss
mov
int3
sti
pop
icebp
inc
int
add
fdiv
aad
outs
jg
ror
mov
rcl
in
nop
fwait
inc
sbb
mov
fcom
lods
adc
adc
jmp
in
mov
retf
fistp
cld
dec
push
push
cmp
xor
or
push
in
call
popf
dec
add
out
and
loop
mov
xchg
test
mov
xor
std
mov
aas
scas
fidivr
lods
mov
shl
adc
cmp
mov
xor
inc
movs
js
inc
xor
repz
div
inc
fnstsw
cld
arpl
movs
push
in
xchg
popa
pop
dec
fdiv
loopne
jo
int3
add
jmp
push
jmp
mov
scas
scas
adc
sub
xchg
pusha
xchg
cdq
sub
mov
cmp
pop
movs
xor
jb
mov
mov
and
pop
add
push
mov
or
ins
mov
outs
inc
push
sti
or
rol
out
iret
xchg
xchg
rcr
dec
movs
mov
in
(bad)
stos
mov
sub
inc
or
mov
push
fs
sti
jae
pop
mov
pop
and
out
shr
jg
push
fst
sbb
sbb
jns
push
test
pop
push
ret
mov
push
mov
mov
pop
pop
mov
ss
cmp
dec
fsubr
out
pusha
aam
jle
js
sti
cmp
shr
lds
cdq
loope
inc
loop
xchg
xchg
and
fcomi
lock
jp
cs
popf
lea
xchg
sub
mov
adc
sahf
ins
into
cdq
lea
mov
add
inc
dec
xchg
(bad)
fcmovnb
scas
lods
mov
(bad)
jecxz
test
in
or
sti
mov
sub
into
pushf
dec
rol
sub
mov
add
ja
scas
sbb
pop
jmp
cmp
sub
mov
out
out
jbe
push
xchg
inc
mov
call
inc
jb
ja
push
outs
dec
fild
push
mov
xor
add
or
pop
(bad)
sidtd
mov
xchg
ins
int
push
jmp
outs
and
dec
pop
(bad)
xor
mov
stos
adc
cli
adc
call
shl
hlt
pop
addr16
and
rcr
mov
pop
js
xchg
gs
cmps
sub
not
imul
mov
cmp
xchg
cmp
scas
std
push
xor
retf
sbb
sub
gs
sbb
je
fnstsw
add
arpl
pop
inc
inc
imul
ja
xchg
sti
push
pushf
ror
les
inc
fsub
add
fisttp
and
mov
into
pop
loope
dec
cmp
inc
fistp
int
sbb
pop
xchg
cmp
scas
jne
call
add
push
dec
ret
push
xchg
sub
add
inc
push
sti
mov
pop
jnp
xlat
loop
stos
jne
jg
dec
call
xchg
or
out
test
push
hlt
or
lock
ja
add
jns
mov
push
out
jmp
jp
mov
cdq
pop
push
or
adc
cmc
pop
pop
loopne
fiadd
mov
xor
outs
shl
inc
cmp
mov
adc
test
sbb
push
sahf
push
aas
jmp
jmp
xchg
scas
std
stos
add
xchg
adc
cs
sub
dec
push
mov
xchg
aad
int3
rcr
and
inc
pop
jae
pushf
(bad)
daa
or
mov
pop
and
xor
(bad)
rcpps
and
fs
out
fsub
xchg
ret
lahf
imul
cmps
cmp
out
(bad)
fsub
xor
xor
lds
cmp
or
push
sbb
push
movs
sub
sub
cli
dec
cmp
lock
jge
cwde
mov
ror
cmp
lock
cmp
push
cmp
and
ins
xchg
loope
push
or
xchg
sti
scas
(bad)
jb
inc
call
(bad)
or
repz
or
push
shl
outs
arpl
push
(bad)
scas
cld
and
xor
mov
xchg
cmp
push
push
pop
pushf
adc
adc
mov
adc
mov
adc
sahf
mov
mov
inc
leave
into
aas
out
pushf
xchg
loop
xchg
movs
pop
push
cmp
lock
push
mov
sbb
shl
or
add
and
sub
mov
inc
mov
sbb
div
(bad)
gs
push
outs
test
add
sub
int
pop
aaa
and
(bad)
and
jne
data16
mov
sub
out
repz
inc
inc
xor
cmp
xor
jno
dec
sbb
mov
sti
inc
call
xor
lds
cli
mov
add
fld
dec
dec
arpl
adc
mov
popf
ret
div
into
inc
js
ins
sub
xor
(bad)
push
sbb
xor
xchg
test
jae
xchg
gs
cmps
push
aas
pop
or
pop
retf
ins
in
mov
jo
xor
pop
adc
mov
cli
sbb
or
inc
(bad)
push
sub
fs
sub
cmp
pop
mov
mov
cwde
minps
(bad)
or
aaa
sub
(bad)
hlt
ds
mov
mov
cmp
or
clc
inc
mov
sbb
and
pop
push
fadd
sar
stos
pop
repnz
push
inc
mov
lods
in
cmp
into
xor
js
pop
mov
or
jecxz
pop
out
push
inc
daa
repz
inc
clc
and
das
outs
pusha
aas
rcr
in
mov
cmp
push
adc
jmp
aam
mov
pop
(bad)
in
jp
push
jbe
outs
cdq
mov
inc
push
rcr
enter
mov
or
les
(bad)
test
pop
dec
inc
movs
in
or
inc
(bad)
retf
mov
gs
push
jecxz
scas
sbb
dec
xor
fiadd
push
lahf
sub
jo
cmp
inc
cmp
(bad)
pop
and
xchg
mov
enter
mov
push
pop
pop
jl
fst
das
sbb
icebp
lds
pop
jns
or
in
lds
cdq
sbb
cwde
or
dec
pushf
cld
or
xchg
std
xor
jne
ror
leave
sub
inc
sti
loope
xor
mov
cli
repz
mov
cmp
add
cwde
fisttp
cmp
push
and
and
fwait
inc
adc
mov
inc
aam
arpl
movsx
push
cmp
push
or
out
mov
sub
jl
(bad)
mov
jp
jg
dec
icebp
mov
mov
jmp
or
std
fidiv
stos
cmp
cmps
and
lods
bound
sub
repz
dec
inc
mov
aaa
scas
ret
inc
out
xchg
sbb
sub
add
repz
pop
push
inc
push
mov
fld
repz
repz
inc
in
rcl
lods
xchg
aaa
sti
adc
push
push
adc
mov
icebp
pop
pop
repnz
inc
jle
stos
inc
mov
pop
das
mov
pop
(bad)
mov
mov
sub
pop
jbe
push
mov
mov
or
mov
cli
ds
(bad)
repnz
push
into
test
or
jno
jge
into
or
(bad)
sbb
add
cs
ds
sbb
ror
adc
push
popa
mov
stos
inc
(bad)
mov
mov
mov
(bad)
sub
icebp
push
pop
retf
cdq
sub
mov
pop
or
cmp
(bad)
shl
or
push
xchg
cli
fimul
push
push
mov
cwde
mov
loopne
push
sub
jno
or
pop
add
add
inc
inc
mov
loopne
sbb
inc
push
lock
adc
(bad)
push
mov
cmp
cmc
mov
and
jge
xor
hlt
test
sahf
jae
push
mov
rcl
out
cmp
inc
clc
xor
in
dec
out
sar
stc
push
adc
add
cmc
out
out
(bad)
nop
mov
clc
test
in
shr
les
dec
jp
lahf
adc
and
pop
jmp
loope
stc
jge
fwait
cmp
cmp
xchg
sub
cmp
mov
movlps
inc
push
ss
outs
or
daa
inc
rcl
std
aam
and
into
arpl
stc
add
shl
movs
xchg
jecxz
mov
arpl
cmp
aam
inc
cmps
stos
not
in
pushf
cmp
je
jno
or
inc
out
pop
push
hlt
cmp
les
sub
mov
nop
jecxz
sub
int3
xor
repz
xor
mov
cmp
push
shr
lea
pop
dec
(bad)
fisttp
xor
int
add
lds
clc
sub
test
sub
cmp
dec
inc
cwde
mov
mov
in
sub
push
mov
dec
ins
push
xor
inc
js
dec
mov
xor
jmp
dec
add
adc
mov
cmp
adc
cmp
pop
pop
dec
cdq
movs
sbb
inc
aam
adc
ins
into
pop
xchg
cmp
hlt
inc
das
aaa
xor
loope
arpl
sbb
or
xor
lods
repnz
std
ds
sbb
ret
or
je
(bad)
test
push
adc
and
xor
xchg
sub
push
bound
das
jg
ins
iret
jecxz
arpl
jbe
stc
or
inc
adc
xor
aas
stos
sti
mov
xchg
stc
and
mov
push
and
in
cmp
stos
or
xchg
fidiv
inc
mov
and
sub
mov
loop
retf
scas
sar
xchg
repnz
dec
sti
repnz
or
inc
sub
dec
ins
ins
mov
lea
or
jae
pusha
ss
dec
push
sub
retf
cld
fs
and
mov
dec
aaa
cmp
or
dec
and
test
lock
push
scas
dec
imul
and
sub
mov
popa
out
push
imul
addr16
jno
test
div
enter
mov
sub
mov
sar
mov
jno
push
push
fimul
in
test
jg
mov
sbb
cmp
pop
dec
clc
or
inc
leave
icebp
xchg
sub
mov
jmp
sti
mov
cmp
sub
test
mov
fs
mov
sbb
push
push
inc
outs
outs
jg
aaa
cwde
jns
mov
mov
loope
xor
cmp
iret
add
imul
jmp
cld
in
ins
mov
sub
fcomi
(bad)
adc
push
scas
aas
int
adc
pop
je
cmp
mov
inc
cmp
sbb
(bad)
stos
das
xchg
test
xchg
sub
inc
int3
mov
sbb
es
test
or
add
and
xlat
mov
mov
clc
dec
xchg
test
and
fisub
jmp
mov
pop
adc
aas
push
mov
sar
shr
daa
push
sti
inc
dec
pop
add
lahf
inc
stc
adc
retf
std
mov
and
ds
mov
jl
stc
push
inc
or
out
pop
sub
stc
sbb
pop
sbb
stc
jge
inc
or
cwde
xor
mov
mov
popa
test
push
repnz
push
mov
enter
(bad)
push
sub
cmp
repnz
add
and
cli
mov
mov
mov
repz
push
fmul
and
and
(bad)
rol
jbe
(bad)
pop
sbb
dec
icebp
fcomp
sub
jmp
pop
int
mov
ins
sbb
adc
jp
push
inc
mov
or
sub
cmp
lds
bound
(bad)
retf
dec
fstp
dec
dec
jnp
out
mov
mov
jmp
and
inc
rcl
leave
jge
adc
ins
or
push
fwait
cmp
sub
loope
xchg
mov
iret
inc
or
dec
push
push
pop
pop
inc
push
mov
push
adc
pop
cmp
das
xor
cmp
sbb
sbb
(bad)
(bad)
pop
mov
ins
mov
jle
jmp
mov
sub
test
fimul
pop
jnp
xor
call
imul
push
test
neg
and
stos
mov
icebp
(bad)
xchg
sahf
iret
mov
sar
or
push
dec
xchg
repnz
lahf
out
mov
mov
shl
ds
or
js
mov
mov
xchg
dec
nop
sub
xchg
mov
cmp
(bad)
cld
cmps
jl
lahf
xor
mov
xor
xor
and
(bad)
mov
push
push
sub
pop
mov
mov
mov
add
(bad)
or
dec
mov
add
sbb
sbb
add
movs
push
mov
dec
and
push
adc
jmp
mov
(bad)
call
add
jno
adc
sbb
movs
fdivr
pop
sbb
push
and
and
jo
bswap
pop
bound
scas
mov
test
pop
xchg
cmp
xchg
out
shl
and
push
dec
outs
xor
pushf
inc
or
test
aad
xchg
nop
xchg
sub
mov
scas
loope
nop
out
mov
and
inc
mov
jge
in
sti
pop
ret
jle
out
adc
pop
pop
xchg
ins
movs
lock
mov
push
lock
sub
add
scas
xchg
imul
or
(bad)
cld
mov
popa
add
mov
xor
jle
jnp
adc
leave
cmp
cmp
push
and
push
out
rcl
cdq
and
jecxz
pop
mul
adc
dec
inc
call
fidiv
bound
rcr
mov
loop
and
scas
cmc
push
lock
add
xor
idiv
xchg
imul
adc
push
mov
pop
cmp
out
enter
pop
inc
dec
loope
pop
adc
xor
(bad)
adc
ret
xor
mov
or
jns
fbstp
mov
adc
pop
or
js
jmp
sub
lods
mov
aaa
adc
lods
lahf
and
pop
inc
ins
outs
dec
xor
ror
pop
sahf
push
push
mov
hlt
je
test
gs
clc
or
and
fcomp
les
shl
cmps
add
ror
mov
add
add
cmp
push
xchg
sub
bound
xor
aas
nop
xchg
(bad)
jne
fsubr
mov
out
adc
cdq
mov
mov
dec
out
dec
in
lahf
aam
lock
cld
nop
(bad)
dec
push
add
ret
fcomp
cmp
mov
mov
cmps
dec
fnsave
mov
in
ds
test
pop
clc
stc
aam
mov
aad
(bad)
pop
adc
(bad)
mov
(bad)
enter
ds
xor
or
lods
lahf
or
mov
push
and
xchg
jnp
dec
inc
push
ror
test
jmp
adc
push
in
add
(bad)
lock
stc
test
jo
inc
sub
inc
push
fdiv
xor
bound
inc
ret
add
mov
jp
push
pop
leave
mov
jp
adc
mov
mov
lea
(bad)
dec
addr16
mov
sub
xchg
cmp
mov
and
call
pop
xor
jns
add
test
ds
sbb
and
sbb
pop
inc
jns
xchg
arpl
movs
push
in
loope
rcl
les
scas
jae
outs
addr16
in
cmp
call
loopne
lds
outs
inc
dec
add
mov
mov
(bad)
stos
loopne
(bad)
mov
mov
pusha
xchg
jmp
(bad)
xor
enter
dec
cmp
cwde
xchg
mov
lods
mov
cmp
popa
xor
push
xchg
sub
retf
xor
mov
xchg
add
(bad)
dec
scas
cli
imul
mov
sub
ja
dec
mov
sbb
jmp
mov
(bad)
ficomp
push
add
out
test
cmps
pop
es
or
inc
jmp
pop
xchg
addr16
or
jl
add
rcr
push
(bad)
adc
xchg
add
inc
int
enter
std
mov
jp
push
ss
mov
dec
or
push
sbb
imul
push
ficom
jle
inc
mov
cld
outs
stos
cli
add
and
loopne
pop
mov
pop
cdq
pusha
add
xor
jns
scas
inc
dec
lods
add
xchg
add
push
cwde
xchg
sbb
push
or
enter
fst
ins
cmp
retf
push
push
mov
push
shr
hlt
cmc
nop
sbb
xor
adc
jne
leave
push
xchg
xchg
cmp
test
mov
mov
or
inc
or
(bad)
push
inc
inc
xchg
adc
mov
jns
nop
stos
sbb
ror
xchg
inc
test
test
sbb
jp
jmp
int3
sub
fdiv
mov
add
pushf
sub
fcom
test
jmp
sub
jl
imul
dec
(bad)
inc
clc
mov
enter
and
repnz
out
sub
ret
dec
adc
(bad)
jns
mov
jge
ins
sbb
add
fisubr
das
fwait
ss
dec
pop
xchg
enter
xor
into
stos
fs
mov
dec
mov
lock
cmps
xchg
sbb
mov
fwait
call
xchg
sub
mov
test
mov
mul
fwait
dec
dec
jl
sub
or
xchg
mov
aaa
jae
aaa
mov
sub
sbb
movs
lahf
ficomp
lods
xor
stc
push
js
xor
jae
test
push
sub
stos
out
lods
int3
outs
in
cld
or
mov
mov
jecxz
lea
retf
arpl
addr16
rcr
jge
xor
mov
xor
mov
cmp
pop
mov
mov
pop
mov
cmc
sahf
outs
pop
retf
and
push
xchg
pop
jge
test
rcl
mov
mov
sbb
adc
xor
(bad)
inc
fwait
scas
rol
pop
mov
sar
cli
adc
push
push
jmp
js
lea
add
das
sqrtps
(bad)
xor
bound
mov
inc
cs
out
mov
sbb
rcl
sub
sub
retf
pop
lock
call
outs
adc
mov
outs
or
and
scas
cmp
jnp
shl
mov
rcl
int
xchg
lahf
mov
cmps
cmps
je
or
(bad)
mov
cmp
mov
adc
dec
fs
out
jmp
xchg
cs
test
call
cwde
addr16
lods
out
pop
mov
jnp
ds
js
inc
idiv
sbb
or
add
retf
pop
add
add
mov
sub
out
and
add
mov
xor
cmp
cmp
fwait
pushf
xor
out
(bad)
fcom
add
cmp
sbb
lods
out
fsub
mov
shr
push
test
push
and
mov
in
mov
pop
sub
mov
test
pop
repz
pop
loop
inc
mov
jl
inc
xor
in
add
arpl
sub
iret
cs
xor
shr
mov
ret
jl
lahf
and
stc
mov
pop
cmps
mov
arpl
pop
loope
and
push
cmc
jp
and
inc
cmp
push
push
lds
inc
adc
or
add
pop
lods
xchg
adc
adc
mov
push
add
adc
in
mov
cmp
cs
dec
inc
adc
sahf
dec
pop
mov
bound
shl
pushf
mov
add
lock
repz
pop
shl
arpl
push
retf
xchg
push
ficom
xor
outs
sahf
stos
sbb
pop
(bad)
in
sub
rcl
jno
sub
fucomi
aaa
or
lock
inc
jno
add
imul
push
mov
test
mov
ror
in
push
cmps
inc
lock
xchg
sbb
sub
shl
jo
mov
jge
push
call
and
aaa
lods
pop
mov
bound
mov
cmp
sar
push
sub
cmp
stc
mov
adc
fucomip
test
clc
jmp
cmp
out
mul
(bad)
pop
fiadd
add
fst
mul
jp
push
test
cmps
pop
jl
ret
add
or
lods
add
sbb
test
fmul
cmp
pop
fstp
xchg
mov
arpl
push
imul
fstp
xchg
dec
scas
or
cmp
mov
das
dec
xor
adc
jg
pop
int
imul
pop
outs
int
shl
test
ja
lods
iret
push
(bad)
pop
adc
aam
lahf
xchg
scas
(bad)
ss
dec
cmp
xchg
xchg
in
fidiv
fistp
xchg
cmp
(bad)
leave
cwde
jmp
jl
popa
fs
lahf
push
xchg
jecxz
xchg
sub
jmp
dec
icebp
xchg
int3
movs
push
gs
pusha
inc
and
cmp
inc
jne
jbe
inc
cs
rcl
dec
and
jnp
sub
mov
addr16
movs
(bad)
popa
cmp
(bad)
gs
dec
mov
add
jecxz
push
xchg
mov
iret
jge
call
add
sysexit
add
ret
mov
outs
imul
adc
dec
fmul
stc
mov
and
mov
cmp
dec
push
neg
jbe
xchg
sar
aad
sbb
gs
inc
and
pop
nop
adc
dec
pop
cmp
push
stos
jge
or
scas
mov
popa
out
(bad)
jmp
popa
inc
dec
add
mov
mov
mov
mov
dec
je
enter
adc
xor
sar
mov
out
xchg
int
in
sbb
xchg
dec
pop
call
mov
popa
xchg
xlat
cmp
leave
movs
int3
leave
lock
jnp
repz
ja
or
ror
sbb
xchg
jne
jbe
dec
sub
pushf
jae
pop
pop
call
pop
int3
fs
popa
xchg
push
mov
mov
fidiv
sbb
push
cmc
cwde
xor
inc
out
pop
mov
retf
ffree
dec
(bad)
sbb
xor
add
jmp
jo
jbe
popf
cmps
push
shl
xor
(bad)
dec
xchg
xor
fst
js
dec
fsubr
(bad)
jne
outs
push
sbb
sar
push
loop
mov
test
cmps
inc
icebp
mov
inc
out
cli
jle
repz
mov
jne
xlat
pop
pop
pop
xor
jle
mov
xor
aad
(bad)
pop
lds
sub
test
or
dec
pop
or
(bad)
(bad)
pop
scas
(bad)
mov
sbb
jmp
ret
mov
push
out
adc
lods
pop
test
xor
mov
sub
xchg
mov
push
or
jno
sbb
and
push
mov
movs
mov
scas
inc
jbe
ret
in
sub
or
(bad)
imul
mov
stc
push
ret
jae
pmovmskb
retf
aad
aas
in
jmp
cmc
jo
sub
stos
jb
outs
xor
xchg
hlt
(bad)
push
rcr
pop
jns
jbe
cmps
mov
adc
sti
mov
ss
dec
sahf
jge
mov
stos
arpl
push
sub
dec
cmc
fisttp
mov
mov
int3
dec
mov
dec
sbb
jmp
push
mov
lods
mov
adc
loop
cmp
xchg
push
add
out
in
add
jg
mov
mov
imul
je
pop
xchg
mov
push
mov
sar
scas
and
sbb
mov
fld
mov
dec
jmp
into
imul
fwait
mov
mov
cdq
jnp
pop
dec
xchg
push
es
inc
mov
ret
(bad)
ins
mov
push
mov
(bad)
xor
cmp
jnp
fisub
inc
sbb
mov
xor
pop
pop
mov
daa
add
test
ss
les
and
or
push
daa
or
xor
call
xchg
adc
mov
or
mov
retf
out
repnz
sub
shr
dec
gs
cmp
ins
fistp
fisub
fs
out
xchg
fwait
push
dec
mov
fcmovu
out
in
dec
adc
in
pop
outs
cmp
ret
xor
sbb
mov
mov
xchg
dec
retf
inc
sahf
and
mov
jle
push
in
or
out
xor
xchg
ficom
inc
add
fist
or
or
sbb
lods
push
inc
sti
fimul
mov
cmp
pop
sbb
fdiv
pushf
sti
stos
and
xor
int3
ftst
mov
add
xchg
icebp
loopne
imul
fimul
jmp
dec
call
mov
mov
cmp
repz
scas
sbb
addr16
sbb
loopne
aas
adc
pop
ror
xchg
ins
cwde
push
das
(bad)
retf
pop
(bad)
std
lahf
jp
xor
pop
popa
mov
jg
push
test
inc
push
(bad)
in
mov
xlat
or
push
pop
(bad)
jl
xchg
or
adc
mov
sbb
loope
jo
fidiv
dec
lea
fist
mov
js
mov
aad
aam
jge
push
mov
inc
xchg
test
push
adc
jmp
inc
std
adc
mov
sub
loope
ucomiss
jnp
shr
rol
sbb
out
aaa
and
cmps
ror
test
lods
fucomip
cmp
mov
inc
sub
out
sar
aas
cmp
and
pop
aaa
aas
pop
xchg
and
cdq
inc
inc
stos
pop
cmc
pop
enter
enter
inc
into
or
jo
sub
imul
sbb
ins
aam
(bad)
repnz
ret
leave
cmp
pop
mov
push
lods
xor
out
imul
jns
rcr
fucomip
test
jp
scas
aas
out
jmp
fisttp
pop
jecxz
pop
sub
sti
sub
xchg
sub
sbb
push
aad
add
gs
lea
dec
xchg
scas
in
(bad)
pop
(bad)
and
jg
pusha
iret
push
or
ins
cmp
pop
push
pop
daa
push
or
mov
es
shl
and
jae
cmp
mov
cdq
movs
cmp
xchg
test
add
inc
mov
loopne
test
std
cmp
push
mov
sbb
xchg
mov
fucom
movs
jge
xchg
jge
cs
mov
mov
mov
pop
mov
nop
mov
push
mov
jecxz
ror
shr
fadd
jmp
mov
add
mov
in
shl
loope
jb
inc
call
lahf
clc
and
pop
push
mov
pop
out
(bad)
jecxz
jmp
xchg
add
dec
xchg
cld
inc
sar
addr16
sub
(bad)
outs
and
jns
pop
cdq
lea
jbe
addr16
stos
push
loop
lahf
ins
sbb
push
xchg
fmul
sbb
pop
retf
mov
(bad)
push
cs
out
or
cld
es
call
xor
push
movs
loop
sti
xchg
or
jb
fwait
mov
aad
loope
int3
(bad)
sbb
xchg
mov
stc
ds
daa
movs
pop
add
popa
repnz
adc
test
sub
push
stos
daa
(bad)
jmp
xchg
or
std
sub
outs
hlt
jl
stc
jmp
dec
popf
clc
mov
adc
out
daa
push
clc
movs
in
xchg
(bad)
xor
ss
xchg
xchg
cmps
cdq
daa
pop
cmp
jno
lods
pop
aam
dec
stos
ins
xchg
repnz
movs
int3
jle
add
push
pop
leave
out
dec
pop
inc
mov
sub
mov
int3
mov
les
imul
int
sbb
es
call
sbb
(bad)
scas
movs
mov
retf
out
fwait
jbe
fimul
ja
in
add
movs
cwde
inc
imul
aad
jle
xchg
call
retf
mov
mov
ret
dec
pop
xor
inc
test
pop
and
dec
jp
aas
scas
push
xchg
or
jne
jecxz
popa
or
xor
rcl
lock
(bad)
icebp
lods
cmp
jb
movs
inc
jnp
call
out
pop
pop
cmc
test
out
jmp
imul
cld
and
mov
mov
xor
inc
jecxz
les
cmps
sub
add
stc
es
enter
sub
jbe
cld
sbb
(bad)
es
pushf
cmps
sbb
sub
fistp
pop
ret
dec
stos
pop
dec
lods
and
cmp
cmps
pusha
loope
adc
mov
jno
mov
(bad)
cli
loope
jb
ja
pop
sub
push
xor
sbb
movs
shl
mov
ja
or
jb
push
mov
scas
push
jmp
or
fidiv
inc
add
or
mov
cld
scas
or
fild
dec
je
aaa
xchg
popf
mov
inc
xchg
or
mov
cmc
retf
loop
loope
ins
pop
jne
test
adc
jnp
add
lods
or
mov
ins
cs
mov
jg
xor
shr
sub
int3
sub
add
mov
pop
pushf
nop
test
inc
repz
(bad)
dec
add
jl
mov
test
ins
jl
xchg
out
(bad)
in
enter
test
or
sub
shr
pusha
repz
dec
std
pop
cli
push
test
ror
push
sbb
mov
fisttp
ja
sub
fdiv
stos
xchg
movs
adc
dec
inc
das
in
in
lea
or
out
ret
cmp
in
push
inc
sbb
jg
ss
pop
mov
sub
popf
jo
pop
call
out
pop
jno
daa
lea
mov
sbb
sub
sbb
inc
test
inc
outs
mov
arpl
aad
jne
jne
dec
pmaxub
and
and
xor
xchg
mov
cmp
mov
or
pop
jp
mov
ret
cs
mov
mov
ret
inc
ins
and
movs
in
pop
dec
push
jmp
xchg
add
test
fstp
inc
sub
add
fidivr
jecxz
dec
fwait
loopne
(bad)
(bad)
dec
imul
adc
push
lods
fidivr
into
mov
(bad)
cmps
jle
mov
cmp
scas
(bad)
fwait
dec
mov
mov
add
popf
test
or
push
nop
aaa
adc
sti
jmp
push
fiadd
fcmovnbe
pop
push
cwde
rol
push
repnz
out
add
popf
sub
icebp
pop
cmp
cld
mov
cld
popf
(bad)
jbe
dec
movs
(bad)
adc
icebp
scas
dec
cli
xchg
fidivr
pminub
mov
xor
out
out
test
les
push
out
mov
cmp
dec
pop
inc
ins
pop
push
je
in
push
cmp
adc
mov
mov
ds
int
lahf
mov
test
mov
xor
out
loop
sbb
adc
shr
xor
push
dec
sbb
rcl
push
jae
cwde
mov
(bad)
fistp
cmc
inc
add
pop
sub
out
sub
cld
into
fsub
ds
dec
popa
cmp
jo
cdq
add
dec
and
mov
movntq
xor
cmp
inc
(bad)
mov
inc
dec
aam
jmp
ds
jae
shr
adc
xchg
pusha
ret
push
add
fcomp
jecxz
lahf
adc
adc
outs
test
popa
rcl
jmp
sbb
loop
mov
xlat
dec
pop
or
add
jno
pop
xchg
lds
xor
aad
leave
dec
and
and
jmp
push
or
dec
cmp
inc
mov
loope
xor
fmul
test
or
pushf
arpl
push
jno
inc
dec
mov
sub
sub
push
in
loope
sub
sub
cmp
test
or
push
dec
aad
hlt
pop
in
cmc
cmps
xlat
add
repnz
sbb
xor
sub
lods
popa
pusha
and
in
sub
loope
sbb
add
jb
xchg
inc
pop
pop
pop
or
ss
xchg
and
sti
int
sub
sub
push
jmp
inc
cmp
enter
cs
test
js
xchg
bound
rcl
shl
push
aam
(bad)
sbb
je
inc
and
inc
mov
retf
adc
repz
std
sbb
mov
scas
add
dec
mov
sub
or
sub
int
ja
movs
cmps
jl
sbb
push
pop
lods
pushf
xor
and
mov
push
and
loop
push
loop
push
mov
or
mov
mov
into
movs
fimul
popf
xor
jmp
ins
mov
inc
idiv
adc
jge
mov
jp
(bad)
js
fsubr
push
test
sub
in
test
adc
jnp
repz
cmp
xchg
loopne
pop
cs
int3
jae
add
cmc
and
ficomp
not
push
inc
mov
imul
mov
push
cmp
push
inc
add
jmp
int3
clc
push
add
call
cwde
mov
mov
jmp
fisttp
es
daa
inc
popf
and
sbb
sbb
repz
shl
(bad)
out
daa
push
stos
xchg
xor
jmp
sub
inc
ins
das
cdq
dec
sub
or
aad
movs
je
loopne
cmp
retf
ja
add
in
jne
cs
jmp
add
cmp
or
les
(bad)
and
in
adc
inc
(bad)
lock
cs
mov
mov
in
inc
mov
push
dec
pop
dec
xchg
mov
xchg
push
xlat
jge
in
pushf
cmp
inc
mov
call
stos
cli
cmp
aam
push
xchg
arpl
sbb
in
inc
add
call
sbb
add
pop
sbb
sar
push
std
xchg
or
daa
leave
or
pusha
rcr
(bad)
xlat
or
sbb
jb
sbb
xor
add
mov
cmps
imul
fnstsw
sar
lods
test
jns
bound
inc
call
inc
repz
mov
arpl
scas
ret
dec
cli
loop
xchg
std
les
jecxz
xchg
fnstsw
enter
inc
mov
fcomp
xor
jbe
sti
and
icebp
outs
dec
(bad)
jne
jne
push
aad
xchg
cmp
push
or
(bad)
hlt
cld
mov
sar
jnp
xchg
add
jl
test
jl
lods
(bad)
inc
jmp
add
repnz
fist
stos
js
sub
and
ret
adc
sbb
sub
xchg
jl
and
ds
xchg
nop
xchg
push
popf
cmp
and
add
(bad)
popf
pushf
mov
add
rol
jle
dec
jg
cdq
mul
xor
loopne
sub
iret
add
cdq
icebp
push
mov
push
or
test
in
pop
je
push
pop
xor
rol
xchg
(bad)
aas
das
inc
rcr
inc
xor
jle
test
jno
xor
adc
mov
mov
mov
nop
or
sbb
or
jmp
xor
mov
sbb
call
xchg
shl
dec
stos
and
outs
or
push
mov
sub
cwde
sub
lock
or
add
out
pop
pop
jne
add
in
adc
mov
push
dec
int3
mov
sti
xchg
(bad)
in
pop
bound
mov
mov
ret
cdq
inc
nop
call
(bad)
mov
inc
or
cwde
xchg
aam
push
fs
pop
dec
adc
sbb
push
inc
xor
inc
mov
mov
inc
xor
cmp
out
pop
test
or
mov
jecxz
inc
sbb
fs
push
inc
aad
mov
imul
push
addr16
cmc
(bad)
or
dec
pop
push
scas
bound
lea
and
cmp
ins
inc
in
clc
adc
fnstcw
mov
xor
or
and
out
sub
mov
out
jno
out
fld
js
test
push
repz
mov
ret
jne
inc
ds
sbb
mul
movs
(bad)
repz
call
cmps
mov
jecxz
or
scas
mov
inc
nop
xor
das
(bad)
mov
cmp
inc
xchg
je
adc
daa
xchg
into
xor
mov
xchg
pop
inc
or
gs
xchg
int
in
scas
mov
in
jbe
enter
mov
dec
outs
pop
hlt
pop
retf
mov
jmp
ret
out
inc
sub
mov
xchg
retf
mov
fdiv
mov
cmps
stc
dec
xchg
enter
aam
mov
mov
sub
push
popa
pushf
and
jne
sbb
sbb
jae
scas
push
sahf
push
(bad)
push
test
in
sbb
pmaddwd
sub
outs
loopne
xchg
data16
lds
xor
add
dec
pushf
mov
das
ss
jecxz
test
stc
or
mov
sub
in
push
jg
mov
push
add
(bad)
ja
adc
cmps
mov
retf
in
push
lods
push
xchg
hlt
cmp
mov
cmp
aam
mov
repnz
mov
mov
shl
inc
and
adc
inc
add
add
imul
pusha
dec
ds
aas
mov
ins
pop
outs
jp
xchg
dec
enter
aaa
or
fidiv
mov
sbb
cli
jecxz
sahf
adc
mov
sbb
add
in
dec
inc
pop
fild
movs
pop
lock
push
push
hlt
std
jo
jo
xchg
dec
hlt
xor
dec
(bad)
cld
cmps
outs
popf
inc
outs
aam
leave
push
mov
stc
sahf
sahf
push
xlat
in
xchg
ja
loopne
das
and
cmp
pushf
pop
cmp
dec
pushf
and
dec
test
jge
jg
xchg
and
jp
push
and
movs
lds
das
(bad)
jg
cmp
dec
push
mov
shl
push
rcr
mov
in
xchg
aad
mov
jnp
sbb
and
sbb
xchg
mov
xchg
ds
xor
and
add
jecxz
jg
mov
pushf
gs
shl
das
popf
add
push
xor
and
sub
mov
rcl
aaa
test
xchg
adc
push
into
xchg
outs
sahf
hlt
and
inc
es
in
jge
cmp
inc
cmp
mov
mov
xchg
repnz
fnstenv
jns
push
push
arpl
imul
xor
in
sbb
scas
push
pop
sbb
lods
push
jb
xor
clc
cmp
imul
and
rcl
cmp
dec
add
loop
ja
lahf
sub
movs
or
sbb
loopne
adc
push
rol
inc
sbb
jno
mov
xchg
nop
sbb
dec
jecxz
sub
xor
inc
jbe
repz
movs
mov
shl
xor
scas
xchg
mov
xchg
mov
push
scas
aad
pop
popf
sub
out
das
dec
xchg
fwait
mov
xor
into
xor
inc
jmp
inc
or
out
adc
or
retf
(bad)
sbb
jle
gs
ins
push
adc
popa
mov
les
pop
and
and
jg
cmp
ins
jns
das
lea
in
es
mov
cdq
adc
loope
jmp
jnp
mov
btr
pop
mov
jmp
or
in
pop
xor
cmc
adc
sub
cli
fsubr
sbb
mov
add
pop
xor
sbb
imul
mov
mov
ret
add
sub
test
(bad)
ja
mov
pop
call
ds
pushf
inc
jne
std
in
xchg
xchg
sub
cld
mov
mov
add
aaa
pusha
cld
or
sbb
leave
imul
add
mov
mov
dec
test
outs
sbb
movs
rol
jne
icebp
adc
es
pop
inc
pop
and
push
dec
jecxz
addr16
push
lock
mov
nop
inc
sub
mov
dec
sbb
xchg
or
lock
adc
out
in
jecxz
retf
sub
hlt
mov
xor
xor
or
stc
pop
cmc
stc
mov
push
cmp
sbb
enter
push
(bad)
ror
push
sub
shl
lea
push
fisttp
in
loope
xor
(bad)
in
pop
mov
popf
and
pop
pushf
mov
add
ins
test
push
in
ror
mov
jbe
push
div
adc
clc
xlat
scas
jp
add
jns
mov
fldenv
add
push
dec
xchg
(bad)
in
jmp
jg
sahf
fwait
sub
pop
dec
arpl
add
and
xor
jge
lods
dec
loope
jnp
adc
lods
mov
aaa
cmp
inc
cmc
push
imul
adc
xor
mov
jae
call
imul
xchg
scas
cli
or
pop
mov
mov
frstor
jl
pop
clc
and
out
aas
sub
xor
rcr
je
cmps
rcr
daa
movs
sahf
(bad)
aaa
mov
movs
lock
xchg
inc
sub
(bad)
push
xor
(bad)
jle
in
sar
test
int
inc
mov
fwait
pusha
mov
sub
mov
movs
push
lods
fnstsw
je
and
pop
pop
(bad)
loop
cdq
call
test
test
jl
pop
pushf
repz
add
xor
sub
or
in
or
sbb
jmp
mov
fdivr
loope
scas
bound
out
add
mov
pop
jnp
mov
mov
sbb
rcr
ins
scas
sbb
adc
mov
lods
dec
add
loopne
cmp
retf
xor
inc
sti
daa
xchg
nop
(bad)
lods
push
imul
push
xchg
push
imul
ins
sahf
cmp
test
xchg
and
sub
pop
push
test
jbe
out
sub
pushf
adc
pop
sub
xchg
pop
(bad)
fild
push
mov
mov
pusha
enter
and
and
scas
fistp
push
inc
out
or
add
in
xor
into
adc
mov
jne
mov
mov
add
mov
js
dec
out
les
scas
arpl
adc
test
and
xchg
ins
push
imul
dec
mov
push
dec
movs
fisttp
call
shr
nop
jo
daa
inc
in
cmc
sbb
push
movs
(bad)
lods
rcl
add
jne
fiadd
dec
inc
cs
push
je
mov
pop
cmp
add
rcr
retf
imul
jl
repz
xchg
xchg
cdq
and
and
sub
or
cmc
dec
cld
inc
inc
inc
jne
jle
std
mov
rcl
ds
ror
push
mov
inc
ds
shr
(bad)
jbe
shr
ds
and
jbe
adc
cmp
sub
dec
lea
pusha
test
pop
xchg
mov
out
out
stos
sub
gs
adc
rcl
jbe
dec
(bad)
int3
push
and
xchg
push
repnz
cmp
add
add
sahf
js
aaa
xor
add
or
cmp
push
pop
fadd
and
add
popf
(bad)
lock
leave
cmps
push
int
push
lahf
mov
hlt
test
js
pushf
pop
fdivr
int
aam
imul
dec
push
xor
xchg
hlt
imul
test
jge
retf
jmp
cmp
test
sbb
push
pop
mov
lock
mov
push
jge
pop
push
ins
pop
outs
out
int
jmp
pushf
lahf
jns
and
imul
ins
(bad)
jge
jge
adc
in
shl
mov
les
lods
rcl
sahf
arpl
scas
push
and
inc
mov
xchg
or
xchg
and
mov
xor
shl
jnp
mov
cmp
test
mov
adc
xor
lea
jo
in
push
mov
mov
push
sbb
cmps
xor
arpl
mov
inc
jb
arpl
mov
(bad)
aas
into
mov
cmp
js
and
jo
nop
nop
js
pop
ds
xor
js
sub
scas
(bad)
mov
mov
ret
nop
jl
adc
mov
nop
arpl
loopne
adc
rcl
pop
lahf
sub
xor
call
jecxz
mov
xor
test
les
js
rcr
repz
aas
cs
dec
in
into
call
adc
loope
ins
pop
enter
cli
lea
test
mov
call
outs
daa
ins
push
mov
cld
popf
inc
add
outs
dec
mov
mov
sub
aaa
pop
cmp
mov
or
xor
pop
dec
jmp
adc
ficom
jae
nop
mov
sbb
rol
pushf
push
jo
mov
(bad)
pushf
cld
jg
mov
xchg
test
jo
xor
outs
shl
outs
mov
mov
mov
ss
addr16
xchg
inc
daa
mov
imul
jbe
push
pusha
out
pop
arpl
movs
cld
daa
sbb
aaa
add
fld
ret
ret
imul
ins
xlat
push
xor
jns
ins
dec
shl
out
inc
adc
mov
into
ror
test
ror
or
adc
shl
sbb
popa
pop
pop
outs
push
adc
fisttp
enter
adc
mov
sub
je
fdivr
xor
and
(bad)
jmp
add
dec
iret
prefetchwt1
lods
cmp
cld
pop
mov
repz
jg
jmp
es
(bad)
cwde
push
fs
std
inc
outs
adc
xor
popa
push
cmp
mov
or
call
mov
cmp
xchg
xchg
or
sbb
call
dec
jno
les
xchg
stos
scas
inc
xchg
xchg
sbb
mov
ret
mov
fcomp
mov
xor
xor
test
(bad)
fistp
mov
jbe
mov
jae
scas
cli
dec
popf
inc
aaa
test
mov
repnz
(bad)
arpl
jmp
stos
push
jno
xchg
inc
push
pop
mov
int
and
mov
cmp
loopne
popa
mov
call
push
sahf
fisubr
loopne
es
ja
cdq
neg
or
mov
jb
mov
pop
push
xor
adc
fnstcw
(bad)
dec
test
retf
popf
mov
(bad)
enter
retf
sbb
add
jo
int3
inc
aad
pop
into
scas
sbb
mov
(bad)
cs
mov
push
sbb
fsub
mov
sub
pcmpeqw
xlat
dec
popf
jo
xrelease
dec
mov
xor
jb
rcr
push
and
jg
mov
jle
jnp
pop
inc
imul
lods
lds
enter
adc
dec
xchg
push
jp
push
pop
cdq
push
push
aas
rcr
and
outs
popf
stc
les
sbb
and
pop
jbe
adc
xchg
aam
rol
into
sti
movs
cdq
push
outs
push
mov
cmp
mov
jp
xchg
fdiv
sbb
pop
jmp
pop
outs
js
cli
mov
(bad)
nop
sbb
div
or
dec
pop
das
xchg
jle
bound
xor
repz
or
call
inc
fcmovnb
int3
rcl
xor
das
add
pushf
push
push
add
or
jmp
add
cmp
push
pop
jge
xor
jmp
or
(bad)
call
shr
les
les
in
cdq
in
push
push
sub
xchg
mov
mov
adc
inc
mov
add
loop
fdiv
push
mov
sbb
sub
cmc
and
mov
lds
loope
dec
lods
pop
repnz
and
icebp
mov
cmp
or
stos
cmp
das
pop
xchg
and
push
out
mov
inc
push
pop
test
add
jmp
bswap
shl
sbb
js
fadd
call
inc
in
(bad)
imul
inc
jmp
add
sub
shl
(bad)
push
mov
test
push
pop
out
inc
data16
push
lods
adc
jg
jbe
jbe
adc
iret
sub
ror
sub
stos
xchg
movs
(bad)
adc
push
imul
mov
stc
mov
movs
imul
imul
pop
rcr
sub
daa
cmps
enter
mov
pop
fsubr
xlat
pop
lea
cmp
clc
popf
jb
test
ins
sub
add
mov
(bad)
sub
fiadd
jg
aaa
lahf
mov
inc
mov
mov
scas
sbb
xchg
xor
jl
xor
cdq
or
jg
in
adc
adc
add
loop
or
daa
xchg
pop
lods
xor
adc
cwde
sbb
and
arpl
sub
and
outs
ds
inc
inc
shl
dec
(bad)
pop
cmp
push
test
pop
clc
mul
adc
mov
xchg
test
imul
pop
cli
cmp
loop
pop
movs
addr16
mov
dec
not
push
jg
pop
rol
sub
jp
sar
into
xchg
daa
out
or
aaa
loopne
add
jo
ja
icebp
push
fmul
adc
lea
adc
add
xor
in
stc
pop
mov
(bad)
scas
in
aad
mov
mov
or
pop
pop
stc
sub
pop
lods
cmp
xchg
add
inc
neg
push
dec
xchg
mov
popf
mov
clc
push
xchg
es
and
or
mov
jo
(bad)
popa
inc
test
mov
call
fnsave
call
mov
inc
lea
jmp
inc
out
sub
clc
iret
add
push
xor
mov
les
mov
add
iret
inc
nop
push
or
or
adc
shl
dec
jne
rol
pop
jl
or
push
inc
cdq
ror
ja
hlt
retf
dec
mov
repnz
int
fisttp
xor
ins
inc
test
test
mov
or
or
mov
or
movs
jle
mov
ret
mov
cmp
inc
cmps
stos
in
xor
mov
xor
adc
dec
mov
or
jo
imul
out
outs
pop
fimul
mov
mov
sub
jp
add
dec
xchg
ins
lods
push
addr16
repnz
pop
mov
call
scas
cmps
xlat
icebp
or
(bad)
in
dec
in
iret
push
jo
ror
shr
dec
jbe
sub
ret
pop
repz
mov
dec
inc
int3
inc
(bad)
in
push
push
test
dec
call
vandnpd
mov
fldenv
cmc
daa
sbb
or
daa
stos
xchg
xchg
outs
pop
mov
sub
dec
neg
ret
and
fs
mov
clc
jno
cmp
cmp
xor
lahf
or
fs
ret
repnz
adc
hlt
movs
iret
adc
fisttp
adc
lods
dec
imul
hlt
cmps
bound
jle
xlat
dec
test
mov
or
xchg
and
and
dec
xchg
fcomip
(bad)
(bad)
jb
ins
mov
ss
or
cmp
xchg
jo
adc
xlat
jnp
popa
imul
mov
cmp
dec
xchg
push
inc
add
call
gs
int
ins
iret
pop
outs
xchg
rcr
adc
inc
mov
(bad)
mov
dec
fmul
push
cmp
daa
jae
xchg
mov
xchg
jmp
xchg
xor
sub
inc
cs
jge
mov
mov
ins
dec
loope
fwait
adc
cmp
dec
cmp
dec
xchg
rcl
dec
shl
mov
mov
(bad)
(bad)
mov
sbb
outs
fcomi
dec
out
push
sub
cli
mov
scas
test
test
push
cmp
data16
ins
jns
xchg
pop
sbb
pusha
and
pop
out
jb
ins
pop
dec
xlat
inc
pushf
cwde
mov
dec
add
and
adc
sbb
fs
ins
js
cdq
clc
or
add
inc
cmps
or
lahf
sbb
into
mov
retf
rcr
int
rol
leave
imul
pop
test
mov
loope
xor
into
rcr
arpl
sbb
imul
(bad)
cmps
cs
mov
sbb
out
fild
mov
mov
imul
jbe
mov
jbe
dec
aaa
stos
and
mov
jbe
stos
push
stc
inc
and
test
or
push
in
sub
loopne
in
cmp
sbb
cmp
mov
hlt
or
adc
xor
mov
fnsave
es
cmc
jae
lds
xchg
arpl
and
mov
jmp
push
jp
fwait
mov
cld
adc
in
ror
je
add
and
mov
add
push
xor
fs
sbb
pop
xor
and
push
ror
pop
mov
sti
dec
cmp
push
xchg
pop
imul
lea
lods
inc
xor
or
jle
(bad)
pushf
ja
xchg
ret
sbb
cmc
(bad)
inc
inc
je
push
sbb
push
mov
aaa
imul
fbld
enter
sub
dec
mov
cmp
cmp
pop
mov
or
mov
pop
or
adc
and
imul
ins
dec
ror
clc
or
mov
inc
mov
fs
in
inc
pop
aad
or
push
push
or
lds
call
cmc
xchg
cmps
push
cmc
xor
gs
outs
aaa
pop
cs
clc
push
mov
fstp
or
mov
ins
pushf
fucomp
inc
jmp
or
(bad)
mov
sbb
into
cwde
sub
jno
sbb
int3
mov
inc
xchg
mov
inc
add
jo
test
les
aam
and
das
retf
sbb
jmp
push
fdiv
jae
in
cmps
jns
cmc
mov
push
test
out
test
pop
push
fldenv
mov
clc
ret
jo
and
pop
das
jmp
add
cwde
add
ret
dec
push
dec
hlt
das
icebp
stos
(bad)
data16
adc
out
mov
pusha
mov
aaa
and
call
(bad)
adc
loop
and
jecxz
retf
push
dec
inc
mov
lahf
iret
sub
cmc
mov
and
inc
shr
and
lahf
inc
movs
lea
or
in
xor
xor
popa
out
cmp
pop
or
fsubr
jae
add
inc
pop
cmp
push
repnz
and
imul
pop
in
cs
adc
enter
push
aaa
cmp
mov
xor
inc
test
inc
cli
fs
add
mov
jnp
ds
or
xor
jae
jmp
movs
leave
jo
pop
outs
sub
data16
or
leave
ins
imul
sbb
arpl
mov
fwait
retf
cmp
mov
retf
data16
mov
jmp
mov
jno
mov
lea
adc
iret
jl
pop
das
mov
mov
rol
cmp
cld
sub
xchg
retf
sbb
fidivr
sbb
popa
(bad)
mov
jno
dec
jl
sti
lods
es
add
or
cmp
and
fwait
or
bound
rol
cmc
and
mov
ret
xor
inc
jo
es
or
out
mov
out
gs
and
mov
push
inc
cdq
ficom
xor
or
pop
pop
and
je
ret
aad
and
mov
push
dec
xor
out
pusha
fcomp
lds
mov
call
xchg
inc
push
rcl
dec
push
pop
add
mov
pop
scas
in
call
dec
mov
in
cmc
hlt
in
or
das
test
std
scas
mov
sub
test
out
xlat
imul
mov
push
mov
jns
xchg
imul
paddsw
test
or
pop
cmp
sbb
retf
adc
in
pop
jmp
adc
add
jno
and
mov
and
ja
in
addr16
cmps
mov
cdq
cmp
pop
daa
and
shl
frndint
in
sti
jne
fisubr
mov
mov
cmps
inc
jecxz
sub
jecxz
iret
hlt
pop
add
dec
fs
jecxz
cmp
rcl
fld
aas
sbb
ror
outs
iret
dec
xchg
xchg
xor
(bad)
xlat
add
push
mov
mov
mov
mov
mov
pop
mov
ret
aas
mov
pop
adc
mov
jecxz
cmps
adc
pop
pop
movs
stos
cld
enter
jb
jmp
les
mov
loopne
xor
aaa
mov
sbb
jb
dec
adc
pop
lea
mov
xchg
out
outs
inc
push
pop
cmp
push
in
aas
inc
xor
pop
sub
sar
fild
sbb
push
mov
rol
add
repnz
xchg
sbb
add
(bad)
fmul
loop
sbb
or
mov
mov
inc
cdq
sbb
shr
jbe
sbb
xchg
jp
mov
xor
jne
std
pop
add
cmp
je
scas
jno
cmp
sbb
jge
add
inc
jmp
ins
in
mov
push
inc
adc
mov
jb
inc
int
fsubr
jbe
dec
dec
mov
jbe
adc
sub
mov
nop
loop
ins
(bad)
aaa
imul
popf
mov
cmps
pop
shl
sbb
cmp
lods
ins
es
idiv
jp
das
cmp
inc
or
lahf
cld
and
ds
push
pop
rol
mov
les
les
mov
das
xlat
cmc
sbb
test
mov
mov
inc
pop
in
mov
fld
inc
mov
clc
ja
sub
sub
adc
std
jns
retf
ins
push
ret
jns
push
push
push
lods
mov
and
mov
jmp
jns
int
and
sar
scas
das
sbb
jae
xchg
cs
adc
out
inc
pop
inc
out
xor
xlat
xchg
xchg
fs
or
cli
mov
stc
loope
pop
pusha
lea
xor
stc
or
ficomp
nop
sahf
inc
in
outs
add
popa
ja
in
dec
test
cmp
movs
pushf
stos
pop
cld
fstp
pop
jne
pop
jb
and
sbb
sub
inc
mov
xchg
or
xor
cmps
push
adc
xchg
test
sub
scas
sub
adc
std
scas
xlat
add
add
cmc
in
sar
push
xor
sub
mov
mov
not
push
inc
popa
enter
cmp
adc
sub
call
or
adc
adc
mov
dec
cmp
in
mov
fst
push
inc
adc
xor
lds
inc
add
call
mov
arpl
jno
stc
not
test
push
and
shl
stc
cld
int
outs
clc
rcr
rsm
dec
daa
std
push
mov
test
jl
sub
test
sub
cmp
je
dec
mov
leave
add
inc
movs
shl
push
xchg
sbb
dec
push
mov
mov
adc
xor
sub
repnz
or
mov
jae
push
sub
jb
enter
inc
inc
jns
add
pushf
push
push
stos
aam
and
sub
xor
lahf
pop
xchg
dec
mov
out
outs
inc
loop
cmp
loope
add
or
loop
iret
cmp
pop
ret
mov
aad
xor
sbb
push
sub
or
lahf
pop
adc
pop
(bad)
int3
adc
movs
xchg
mov
enter
movs
je
mov
rcr
hlt
sub
push
push
in
mov
mov
mov
pop
ja
cmps
push
sahf
jl
mov
or
push
aam
arpl
cmp
sbb
xor
je
add
ret
loopne
push
xchg
popf
adc
retf
ss
xlat
inc
mov
pop
push
cmp
add
pop
outs
adc
lea
arpl
hlt
or
out
in
push
xchg
ret
mov
add
jle
(bad)
in
mov
sbb
dec
addr16
fisttp
mov
arpl
mov
lahf
test
sub
pop
dec
stos
out
jo
scas
ficom
in
jne
nop
enter
adc
pusha
add
fwait
in
and
jns
xor
jl
cdq
cmc
inc
or
or
ja
or
mov
sub
repnz
mov
xor
inc
pushf
test
adc
xchg
sahf
(bad)
or
(bad)
(bad)
adc
enter
ftst
out
inc
or
mov
and
sbb
fimul
adc
ja
adc
pop
jl
jle
(bad)
pop
rcl
jecxz
jmp
jnp
dec
sti
movs
mov
dec
sub
mov
xchg
xor
call
push
enter
movs
push
cmc
mov
jecxz
fsub
push
sbb
or
adc
or
sbb
xlat
mov
aaa
or
or
jne
cmp
adc
aam
cwde
jmp
adc
jb
fidivr
ins
xchg
inc
push
sub
and
xchg
or
xor
xchg
arpl
mov
or
pop
and
js
(bad)
in
and
gs
or
pop
int3
inc
out
push
aam
jmp
pop
cmp
push
(bad)
pusha
jbe
pop
inc
or
sbb
fbstp
add
mov
sbb
mov
dec
(bad)
push
jb
pusha
out
push
aaa
jge
retf
mov
pusha
xor
retf
cmp
adc
inc
mov
outs
iret
mov
push
mov
sbb
jp
aam
cmc
jg
jbe
aaa
xlat
call
push
mov
jae
es
addr16
aam
imul
add
repnz
aam
add
and
fstp
scas
ja
call
stc
lea
in
test
mov
mov
sbb
shl
sub
and
push
mov
dec
jge
sbb
cli
repnz
idiv
fistp
out
inc
sub
or
cmp
xchg
js
cdq
(bad)
mov
stc
pop
or
push
call
scas
iret
sbb
jmp
jl
fwait
aad
cwde
inc
stos
rcr
xchg
lea
xchg
push
pop
add
dec
mov
adc
sahf
jl
out
out
outs
xchg
xchg
mov
jne
test
sub
(bad)
inc
sar
jp
mov
mov
scas
(bad)
mov
lock
ins
add
or
mov
xor
into
cmp
shl
mov
xchg
jecxz
pop
scas
or
ins
in
rcl
add
ror
mov
sti
data16
xchg
sti
sti
iret
pusha
into
stos
test
ror
push
mov
cdq
jne
push
leave
pusha
mov
fdivr
push
or
push
inc
call
adc
repz
aam
jno
adc
(bad)
in
imul
push
cwde
xchg
push
shl
movs
push
mov
lods
pop
pop
fcomp
aas
sub
cmp
fptan
call
fnstcw
sbb
dec
sar
xor
fdivrp
idiv
cli
jne
prefetchwt1
cmp
pop
in
jg
test
push
xchg
dec
xor
and
lahf
jae
or
mov
push
(bad)
nop
int3
shl
or
xchg
push
sbb
push
stc
pushf
push
scas
mov
and
lods
mov
xchg
cmps
nop
or
ror
inc
xchg
adc
pop
aam
push
pop
sbb
aaa
stc
jge
dec
movs
inc
cld
pop
in
dec
sbb
fistp
movs
pop
add
mov
repnz
jl
add
sbb
and
shl
push
jb
sahf
mov
cmp
cli
cmp
out
dec
xor
cwde
popa
fnstsw
es
add
xchg
or
adc
iret
and
leave
stos
xor
push
push
test
or
pusha
fcom
stc
int
ret
xor
es
aas
cmp
movs
sbb
leave
test
xor
ror
pop
mov
mov
sub
int3
sti
push
mov
and
and
stos
es
and
iret
out
mov
ds
movs
sbb
out
mov
ins
pop
addr16
xor
cmps
xor
mov
rcr
xchg
jne
popa
fistp
arpl
loope
outs
cwde
fbld
push
retf
sub
mov
cmps
adc
push
push
jg
test
clc
xchg
sbb
ja
xor
xor
mov
push
sub
out
sbb
xor
adc
ins
mov
jge
outs
or
pop
popf
pop
sub
mov
inc
jecxz
xor
cmp
cmp
xor
(bad)
mov
adc
imul
xor
jmp
aam
test
cmps
mov
or
test
pop
inc
push
mov
into
rol
mov
push
or
scas
inc
popa
push
dec
movs
nop
test
xchg
mov
fwait
mov
xchg
movs
test
xchg
dec
xchg
dec
mov
xchg
pop
icebp
and
push
mov
fsub
sar
into
inc
xchg
mov
rcl
dec
cwde
push
movs
and
in
mov
jp
jl
outs
add
test
sub
and
mov
retf
pop
cmp
mov
lock
cmps
xchg
lods
nop
loopne
xchg
cmp
sahf
imul
packssdw
mov
jbe
xor
dec
push
inc
xchg
rcl
mov
sbb
mov
push
mov
pusha
inc
call
push
ins
aad
xchg
(bad)
or
clc
fisub
dec
add
ffree
sub
adc
scas
add
xor
(bad)
fisub
and
pop
in
mov
outs
aam
out
jp
mov
outs
sub
sub
adc
push
xor
push
push
(bad)
leave
call
outs
mov
inc
movs
hlt
pmuludq
in
inc
daa
stos
inc
repz
pop
mov
int3
retf
dec
sbb
fmul
xchg
rol
add
cdq
xchg
fadd
push
sub
pop
ins
mov
cmps
sub
rol
loope
mov
in
movs
out
sub
fld
add
xlat
repnz
cld
hlt
sbb
cmp
aas
rol
dec
int
mov
lock
sti
push
sub
bound
or
or
mov
scas
sub
mov
aaa
jg
xchg
mov
mov
test
inc
out
outs
xchg
call
clc
cmp
inc
push
shr
popf
sbb
pop
mov
sbb
test
mov
pop
mov
and
mov
out
push
pop
jmp
pop
cdq
inc
retf
push
xor
xchg
sub
les
mov
aaa
push
je
enter
stos
bound
xchg
add
add
mov
(bad)
scas
jmp
xor
push
fistp
cmp
cmps
sbb
loop
adc
pop
fidivr
nop
push
pop
stos
cmps
inc
cmp
repnz
rcr
iret
jle
neg
(bad)
fcmovu
mov
stc
in
fs
lock
sbb
jnp
fwait
test
jo
(bad)
jmp
fmul
into
mov
retf
cmps
cdq
inc
ja
movs
mov
sbb
push
fnstenv
(bad)
xor
(bad)
stc
sbb
loopne
add
loopne
push
pop
jmp
scas
push
jo
jne
pop
retf
push
es
pop
test
push
scas
inc
dec
in
fadd
je
repnz
ja
dec
mov
dec
scas
fistp
inc
cmp
sub
mov
push
test
jnp
fcom
and
push
(bad)
jecxz
pop
jle
mov
mov
cli
push
mov
xor
pop
out
jmp
addr16
sub
adc
push
addr16
aad
fsub
pop
sub
cs
sbb
cmp
sub
jg
icebp
and
mov
loopne
jne
mov
mov
inc
inc
inc
leave
lods
xchg
int3
std
retf
loope
test
dec
push
push
pop
xor
in
pushf
push
(bad)
adc
jg
xchg
mov
sub
mov
pop
pop
(bad)
lock
push
or
iret
retf
dec
jne
sti
data16
mov
cs
or
pop
and
(bad)
imul
push
shl
mov
mov
(bad)
scas
jbe
lock
(bad)
fstp
int3
adc
enter
mov
inc
or
sub
sar
nop
dec
jle
or
jno
fcom
jle
ret
mov
mov
js
and
test
xor
dec
sbb
pop
ret
mov
pop
out
retf
ss
jns
fld
sbb
ror
addr16
movs
in
jl
mov
adc
popa
dec
mov
xchg
pop
add
fcom
and
or
mov
and
das
pop
in
add
inc
mul
sub
cmp
add
into
push
add
shr
push
repz
out
mov
fcomp
fidivr
outs
xlat
or
sub
retf
dec
mov
call
into
adc
sbb
stc
push
sub
imul
add
pop
mov
fiadd
in
add
sub
xor
fstp
ret
adc
xor
mov
adc
xor
dec
jb
pop
add
gs
add
jmp
(bad)
(bad)
icebp
fs
ret
arpl
lock
es
dec
es
push
jae
pop
fs
jne
(bad)
push
xor
mov
pushf
out
shl
or
call
jle
fstp
mov
aas
mov
adc
mov
call
fwait
in
sub
pop
aam
loope
xor
bound
xchg
into
call
push
push
retf
(bad)
mov
dec
stos
dec
mov
mov
and
ds
leave
pop
cld
test
jns
or
jg
adc
movs
movs
dec
push
out
ror
in
std
vmwrite
lods
inc
add
ins
inc
and
fwait
mov
mov
push
out
mov
mov
fdiv
aas
pop
fisubr
sbb
das
in
inc
icebp
cli
shl
and
jge
mov
gs
xor
jecxz
adc
stos
xchg
or
push
sbb
je
pop
and
rcl
(bad)
shl
sahf
stos
jg
fiadd
fld
xchg
add
retf
jp
test
or
sub
movs
lds
inc
call
fsubr
jmp
xchg
jg
aad
jecxz
es
mov
jae
xor
in
dec
pusha
or
sbb
gs
cmc
stc
inc
pop
and
retf
sbb
mov
push
xor
mov
out
cmp
add
out
jbe
popa
call
or
jo
ja
inc
repnz
loop
and
leave
stc
lahf
out
mov
jmp
sbb
je
ins
jb
(bad)
inc
sbb
ins
jns
repz
sbb
pop
ja
dec
not
fnstsw
push
enter
icebp
dec
(bad)
pusha
pop
(bad)
or
out
fs
add
cmp
jns
push
jl
test
retf
mov
lock
dec
mov
jecxz
jo
(bad)
call
dec
pop
not
jle
stos
and
(bad)
xor
mov
movs
pop
push
xchg
sti
imul
int3
cmp
int3
imul
scas
dec
dec
sti
(bad)
pop
scas
jbe
jl
inc
adc
sub
fwait
shl
mul
mov
icebp
test
loop
pop
push
pop
pop
inc
mov
out
stos
loopne
push
jle
xor
ins
out
inc
leave
je
stos
push
lds
sub
fcom
mov
cmp
mov
cli
or
enter
push
cmp
jnp
pop
push
loope
pushf
pop
inc
sub
ins
in
fstp
or
sbb
aaa
(bad)
out
imul
adc
jnp
push
sub
jno
retf
jl
cwde
test
xor
test
in
daa
ror
xor
in
pusha
cmps
cmp
sbb
xor
movs
int3
rol
or
pop
push
jle
shr
cli
inc
pop
mov
loopne
mov
call
xor
adc
clc
mov
mov
push
jg
sar
push
dec
ja
sub
aaa
nop
dec
(bad)
push
adc
jmp
sbb
call
sbb
jmp
shr
mov
fidiv
cli
test
(bad)
cmc
push
mov
loope
enter
adc
leave
int
popa
mov
stc
aad
lods
ins
ins
outs
jo
inc
mov
pop
test
cwde
rcr
in
adc
ror
sar
mov
and
inc
rcr
mov
push
add
xchg
gs
test
xchg
int
mov
icebp
pop
jp
call
rcr
adc
mov
(bad)
inc
(bad)
mov
pop
outs
scas
mov
xchg
jle
xor
inc
retf
inc
jmp
jmp
lock
dec
xchg
pushf
movs
stc
or
inc
mov
add
pusha
pop
add
shl
mov
mov
xor
push
out
push
inc
leave
xor
clc
xor
xchg
jns
mov
enter
mov
leave
dec
arpl
add
cmc
hlt
sub
les
aas
mov
sbb
inc
leave
outs
push
int
pop
or
push
adc
adc
xor
and
jmp
adc
clc
outs
call
lods
test
sti
fisubr
pushf
retf
push
enter
in
xchg
cmp
sub
(bad)
(bad)
std
push
jne
or
pop
mov
cli
mov
cmp
dec
(bad)
mov
or
push
pushf
adc
pop
mov
test
push
jg
sub
sbb
xchg
fsubr
adc
xor
and
rcr
call
aad
es
add
xchg
or
mov
and
inc
test
shl
push
not
cmc
jbe
xor
fst
push
jo
ds
lock
rcr
fucom
inc
push
jle
das
movs
es
int
outs
xchg
pop
cwde
or
add
sbb
fsub
inc
pop
pop
and
mov
scas
jmp
out
repnz
sbb
push
(bad)
push
imul
js
mov
and
push
and
adc
and
and
and
arpl
pop
int3
stc
xor
or
mov
outs
adc
repz
xchg
mov
jmp
jne
cmps
pop
lods
test
cmp
fdivr
out
(bad)
dec
rcl
leave
fistp
sbb
data16
jle
jle
jne
in
mov
sti
test
pop
loope
sub
and
mov
or
pop
inc
dec
pushf
pop
ret
xchg
cld
sbb
inc
xchg
mov
fdivr
punpcklwd
or
(bad)
or
inc
mov
inc
int
fild
or
sahf
lods
mov
jne
add
mov
idiv
(bad)
cs
pop
adc
scas
(bad)
test
dec
icebp
in
das
push
sbb
cmc
arpl
adc
and
sub
mov
inc
in
imul
or
outs
jg
movs
add
stc
in
test
sbb
inc
sbb
sub
sub
ins
mov
hlt
addr16
mov
cmp
data16
xor
jmp
mov
mov
cdq
or
in
pop
push
push
adc
cmps
jmp
aad
pop
or
sbb
or
retf
into
je
pusha
jmp
mov
dec
lods
iret
mov
push
push
outs
push
push
aam
stc
jg
pop
lea
(bad)
gs
inc
or
cld
inc
push
movs
xchg
(bad)
imul
xor
es
pop
lods
into
fist
fisttp
jge
jle
iret
pop
loop
bound
sbb
jmp
imul
scas
inc
shr
out
(bad)
loopne
lock
pop
mov
cmp
cmp
fdivr
jo
pop
mov
sub
out
sub
cwde
gs
mov
pop
dec
(bad)
scas
fwait
cld
jle
mov
dec
fmul
mov
sbb
leave
inc
imul
gs
jb
jno
test
fiadd
inc
ret
sub
pop
adc
mov
xchg
jae
scas
jns
es
pop
cmps
pop
nop
movs
sbb
rol
xlat
mov
push
out
jg
xlat
xchg
test
xchg
into
neg
ret
fnstsw
mov
test
xor
stc
dec
add
add
mov
js
stos
push
and
lods
repnz
in
out
sub
jae
jle
addr16
(bad)
test
(bad)
dec
sbb
les
mov
mov
fidiv
and
cmp
mov
pusha
in
and
in
daa
leave
mov
push
push
or
es
dec
or
xchg
fidivr
inc
xchg
ret
sub
mov
sbb
pop
fsub
jnp
stos
mov
fnsave
lock
pop
loop
push
jg
jne
lea
dec
rcl
push
push
or
mov
push
adc
pop
ror
outs
repz
push
shl
cmp
jecxz
cmps
push
sbb
sahf
daa
and
into
sub
jp
icebp
inc
cmps
inc
or
inc
out
cmp
stc
lahf
adc
fmul
retf
adc
push
in
test
xor
ds
hlt
or
push
sub
pop
pusha
aas
jmp
push
and
das
(bad)
push
mov
cmp
fwait
mov
(bad)
or
popa
pusha
retf
inc
push
push
loope
or
rcl
subps
xor
xor
jae
sti
cmpps
inc
add
jnp
fwait
arpl
jne
aas
mov
ds
into
aaa
push
gs
add
test
enter
lock
(bad)
rcl
push
std
repz
push
mov
nop
dec
out
jl
or
push
fcmovu
xor
movs
mov
cmp
dec
(bad)
mov
js
jge
popf
sub
loope
das
test
pop
pop
out
mov
pushf
imul
add
retf
fcomip
cmp
shr
es
loope
and
in
fbstp
jbe
cs
jle
sbb
jecxz
xchg
cld
cmc
ret
mov
cmp
cbw
je
ror
sub
mov
fwait
dec
sbb
jg
sub
aam
(bad)
or
cwde
sub
push
and
addr16
stos
xchg
jmp
jbe
mov
sbb
sub
cmp
idiv
or
dec
mov
fnstenv
aaa
lds
retf
int
jnp
fnstenv
out
jmp
pop
dec
push
sub
fadd
ja
dec
test
movs
pushf
aad
xchg
jg
std
mov
fbstp
ins
push
lahf
clc
mov
(bad)
ror
add
int
(bad)
cli
mov
xchg
pop
ins
jae
movs
pop
test
call
pop
push
xchg
ins
fwait
lahf
repnz
enter
outs
sub
daa
movs
mov
push
or
sub
out
loopne
xor
sahf
adc
xor
call
dec
xor
(bad)
pop
imul
push
mov
scas
cdq
pop
mov
jg
sbb
xchg
loop
add
mov
retf
rol
and
mov
call
icebp
lock
sbb
aas
test
add
xor
adc
retf
lds
or
shr
lods
test
cmp
imul
repnz
stc
test
push
and
sbb
pushf
retf
jae
mov
lods
sub
fsub
cli
hlt
mov
int
inc
scas
aaa
lock
add
or
pop
loop
adc
push
mov
pop
mov
inc
push
imul
ror
mov
cmp
ja
mov
pop
clc
out
adc
push
mov
(bad)
pop
push
fiadd
hlt
sbb
jne
push
pushf
push
xor
repnz
xlat
jge
dec
xchg
imul
sbb
xchg
(bad)
imul
mov
sbb
sub
test
add
jnp
pusha
mov
out
mov
fcmovnbe
stos
ja
(bad)
iret
lahf
das
mov
repnz
fcmovnb
pop
add
cmp
pusha
jg
mov
outs
movs
inc
sub
cld
dec
cmp
push
je
push
ja
out
add
sar
xchg
mov
jecxz
ror
retf
shr
dec
mov
iret
test
mov
outs
or
test
push
stos
movs
jmp
lahf
push
ja
push
in
push
hlt
cmp
lea
adc
jl
add
sti
addr16
out
(bad)
mov
stc
push
cwde
adc
jno
or
ins
test
jo
and
mov
pop
or
js
and
cli
add
clc
mov
dec
xor
arpl
mov
sub
mov
jle
xchg
dec
shr
dec
cmp
ret
test
jg
mov
and
push
inc
nop
dec
jge
lahf
inc
cmp
sbb
(bad)
out
addr16
dec
and
push
xchg
into
and
shufps
(bad)
sub
and
fistp
adc
jmp
loope
adc
jb
sbb
jl
inc
mov
mov
mov
mov
jmp
add
addr16
pop
push
out
div
fild
inc
rcl
dec
rcr
mov
pop
setp
or
int
mov
(bad)
fst
shr
(bad)
sar
ins
mov
sti
je
add
jns
popa
jge
pop
push
dec
ror
test
mov
cdq
pop
sbb
add
pop
in
adc
pop
mov
fstp
cmps
mov
int3
hlt
push
(bad)
cmp
cmp
mov
cmc
pop
push
cmc
mov
dec
test
sub
mov
add
out
mov
adc
enter
ss
jl
rol
adc
aaa
dec
xor
cvtdq2ps
inc
jmp
mov
mov
mov
rol
push
sahf
cld
in
xchg
or
in
mov
pop
pop
cmp
retf
jnp
jle
mov
call
and
mov
shl
mov
into
xchg
dec
mov
adc
xchg
mov
push
rol
push
push
neg
mov
or
outs
cmp
mov
add
dec
inc
lock
adc
fst
sbb
out
add
dec
out
sub
cld
xor
pop
mov
and
out
cmp
or
es
or
xchg
rcr
mov
ja
pop
or
push
adc
xchg
test
leave
mov
arpl
loop
in
push
call
xor
mov
stos
pop
mov
movs
retf
mov
dec
popf
pop
jae
arpl
jnp
add
mov
test
inc
and
mov
dec
mov
jmp
jle
push
in
movs
adc
mov
add
stos
jmp
xchg
mov
jb
sbb
cmp
sub
xchg
shl
push
xchg
pop
add
adc
(bad)
and
jne
sbb
push
inc
pop
popf
jae
stos
pop
jl
ret
leave
push
dec
or
push
mov
pop
sti
dec
inc
clc
pop
mov
(bad)
ficom
xor
jbe
sub
dec
jno
xor
inc
leave
pop
mov
xchg
cmps
mov
retf
dec
jo
pop
pop
xor
lea
mov
stos
xchg
inc
ins
push
xor
call
loop
or
aas
leave
xchg
mov
jg
rcl
mov
(bad)
ja
jge
imul
pop
push
jne
in
ret
scas
cli
sub
push
into
mov
(bad)
out
ins
(bad)
les
dec
mov
into
pop
(bad)
retf
fistp
retf
dec
pop
movs
adc
test
ja
push
xchg
or
sti
shl
jg
jg
cld
push
push
sbb
dec
sbb
add
mov
inc
xchg
mov
pop
adc
hlt
pop
cmp
push
jns
in
and
sbb
popf
mov
fmul
repnz
mov
inc
loope
cli
fild
loop
and
scas
jmp
das
fadd
push
stos
ins
in
xor
stc
loop
xor
cld
jl
test
xchg
jle
pushf
push
jp
and
xchg
int
push
mov
adc
mov
(bad)
or
sbb
add
call
scas
mov
inc
ins
sub
xchg
pop
inc
pop
jle
out
(bad)
stos
sbb
push
movs
jo
xor
(bad)
inc
cmp
and
aaa
push
ret
ftst
sbb
popf
sbb
les
cwde
or
push
rcl
dec
xchg
dec
call
mov
inc
fidivr
lea
test
gs
dec
loopne
pusha
repnz
xchg
lods
aaa
fwait
push
and
dec
jnp
dec
mov
ror
jbe
es
adc
cmp
mov
add
inc
fdiv
mov
cmps
mov
iret
movs
sbb
and
ja
cmps
loop
jmp
cmp
inc
(bad)
enter
(bad)
out
mov
loop
data16
sbb
sub
outs
(bad)
rcl
cmps
bndstx
xchg
dec
adc
push
popa
mov
adc
js
retf
adc
(bad)
xor
aad
mov
inc
dec
push
cmp
adc
ret
sbb
xchg
clc
jp
(bad)
daa
loop
or
and
cmps
ret
pop
repnz
aas
add
jno
xchg
mov
rcl
pusha
sti
sbb
xchg
mov
cwde
ins
test
push
fild
retf
dec
sub
int3
out
(bad)
push
scas
aas
out
scas
outs
das
pop
push
ret
xchg
ficomp
loopne
test
sbb
adc
jp
cmp
ret
cmp
test
lods
arpl
mov
pop
fild
mov
or
gs
cmovp
dec
mov
dec
add
pop
jno
(bad)
adc
push
inc
jmp
leave
mov
repnz
sbb
xor
push
in
ss
iret
test
mov
scas
inc
fsqrt
mov
jmp
popa
(bad)
popa
sbb
ret
imul
cmp
fild
test
pop
mov
call
adc
mov
clc
push
pushf
mov
push
jmp
repz
xor
outs
ins
jg
sti
inc
xor
ins
mov
mov
nop
push
dec
cdq
in
and
cdq
cmp
ins
mov
fdivr
mov
dec
call
outs
jbe
fiadd
sbb
jbe
jns
lods
(bad)
in
cli
jb
movs
lock
fnstenv
imul
xchg
mov
es
ss
or
inc
fwait
ins
aaa
ret
ins
lahf
iret
sar
cld
mov
out
nop
test
inc
pushf
imul
sub
cmp
dec
mov
lods
loope
popa
mov
or
das
das
pop
leave
(bad)
(bad)
iret
bound
adc
jp
mov
nop
int3
dec
out
or
pop
dec
ret
loopne
jnp
jne
xchg
ret
mov
mov
stos
test
or
std
ret
jmp
bound
lds
mov
xchg
jnp
mov
aad
cmp
sbb
and
cmp
je
ficomp
fdivr
pop
mov
inc
xor
xchg
ja
popf
pop
idiv
pop
mov
inc
sbb
sub
dec
sbb
add
mov
xor
push
rol
movs
mov
mov
or
mov
cld
pop
pop
repz
mov
(bad)
test
cmps
jns
mov
adc
mov
adc
leave
push
and
stc
sahf
and
jne
inc
xor
outs
mov
or
test
add
mov
(bad)
call
(bad)
je
mov
or
cmp
xlat
(bad)
outs
(bad)
xor
fnstenv
jge
push
inc
retf
dec
jp
adc
pushf
test
lahf
xor
out
jecxz
pop
adc
es
dec
enter
ins
jge
ret
and
test
pop
lahf
ins
fst
retf
add
aas
data16
add
in
data16
mov
push
js
xor
sbb
in
bound
adc
xchg
push
jne
sbb
ret
jmp
jmp
daa
dec
push
jg
xchg
mov
nop
push
mov
nop
xor
arpl
adc
scas
xlat
mov
mov
arpl
and
sub
stc
cmp
inc
pop
ins
aad
sti
jmp
call
pop
lods
pop
mul
or
lds
jne
stc
jne
call
and
mov
lds
jno
in
lods
mov
stos
cmps
test
loop
call
pop
fcomp
sbb
push
int
aam
fst
mov
(bad)
loopne
mov
ror
sbb
mov
out
je
fsubr
jne
lds
dec
mov
jmp
repnz
jnp
pop
mov
sti
push
mov
inc
out
sar
aam
pop
int3
ret
ins
movs
lds
mov
add
test
hlt
add
mov
dec
in
cdq
aam
mov
aas
xchg
add
into
call
lock
mov
in
fnsave
shl
das
test
bound
and
mov
repz
comiss
xor
add
fcom
push
push
pop
sbb
call
cmp
fbld
or
pop
push
add
shr
nop
out
pop
push
cmps
cmc
test
dec
pop
in
dec
neg
pop
inc
call
js
push
mov
push
out
mov
popf
push
cmp
retf
imul
ja
adc
dec
call
add
xlat
jnp
fs
adc
out
jo
inc
shl
loop
pop
push
mov
add
inc
out
dec
nop
loop
repz
ss
leave
add
jl
xor
or
inc
jnp
xlat
shl
push
push
xlat
pop
call
push
pop
ins
das
lock
fnstsw
mov
dec
je
cmp
mov
push
in
mov
stos
mov
pop
arpl
push
dec
xchg
pushf
sbb
inc
cmp
add
or
sbb
adc
outs
push
out
adc
and
sbb
daa
sub
imul
nop
or
push
sbb
test
jns
mov
mov
cmp
out
mov
aaa
mov
ins
das
ds
mov
addr16
ja
xor
push
fwait
cli
and
fild
addr16
sub
xor
ror
scas
jecxz
inc
bound
push
jbe
into
and
popa
xchg
push
and
pop
scas
mov
std
cmp
fld
rcr
add
push
scas
mov
imul
iret
stc
nop
jle
test
repnz
and
(bad)
xchg
sbb
cmp
les
xchg
push
xor
rcr
fs
aad
pop
xchg
scas
es
sbb
imul
in
(bad)
dec
dec
mov
inc
fldlg2
sbb
lods
adc
stc
ret
aas
cmc
adc
aaa
fcomp
pushf
xor
mov
in
out
cli
push
loop
mov
imul
pop
not
(bad)
xor
push
inc
mov
push
mov
mov
push
xlat
dec
shl
adc
push
mov
cmp
push
lds
xor
mov
outs
rcl
push
sbb
xchg
xlat
js
add
out
out
bound
cwde
iret
xchg
(bad)
ins
sbb
iret
repz
(bad)
(bad)
cmp
jno
inc
add
xor
cdq
sbb
(bad)
adc
popa
sbb
sub
mov
or
or
add
xor
mov
lods
mov
(bad)
xchg
shr
push
scas
retf
mov
outs
inc
jp
jae
mov
movs
repnz
or
sub
sbb
push
inc
ins
cmps
sar
cwde
cmp
inc
ins
test
lea
cwde
xchg
mov
mov
fsub
jne
mov
pop
cmps
cdq
jbe
or
ins
in
mov
call
shl
inc
cwde
jl
push
mov
mov
sub
scas
addr16
mov
mov
sub
or
fwait
xor
jmp
bound
lmsw
xor
fcmovne
addr16
stos
test
mov
sahf
std
fdivr
(bad)
inc
retf
inc
dec
pop
fst
push
aad
cmp
adc
into
dec
cmps
ss
sbb
dec
and
aam
jb
fnsetpm(287
loop
fs
jecxz
lds
aas
fsub
arpl
push
mov
xor
(bad)
int3
std
pop
pusha
in
add
addr16
mov
rcl
icebp
pop
jge
ss
mov
scas
stc
pop
mov
mov
jae
mov
dec
and
sbb
cld
or
rol
xlat
cmp
xor
xchg
outs
inc
inc
inc
xchg
mov
sub
jg
xor
and
dec
sti
xchg
jo
jmp
pop
shr
test
jmp
ffreep
sti
xor
hlt
mov
pop
fadd
mov
and
xor
int3
mov
xor
shl
mov
cdq
cmp
jno
sub
sahf
push
out
pop
push
arpl
xchg
push
sbb
jge
lahf
mov
mov
mov
in
cmps
outs
jle
cli
and
jae
ret
and
push
jmp
mov
lods
sbb
(bad)
mov
stos
sbb
into
and
pop
div
movs
ds
or
pop
push
or
dec
retf
test
(bad)
jb
pop
cmp
mov
mov
add
(bad)
sti
jg
ficom
data16
add
(bad)
pop
sbb
jl
jle
jmp
push
cmps
inc
cld
inc
(bad)
push
mov
push
les
test
daa
aas
and
inc
bound
mov
mov
ret
int3
xor
push
xor
stos
add
mov
lahf
and
mov
push
pop
dec
scas
stos
stos
bound
lea
adc
(bad)
ss
imul
mov
popf
xchg
out
(bad)
scas
add
das
jle
imul
imul
ds
test
push
fnsave
aam
jnp
inc
push
push
iret
(bad)
in
ret
call
loopne
dec
xchg
retf
jge
(bad)
inc
inc
jbe
stos
jmp
xor
cs
cdq
pop
stos
mov
pop
dec
stos
pop
enter
pusha
or
mov
popa
inc
shr
add
mov
add
imul
xor
inc
lea
mov
jnp
xor
retf
loopne
jge
adc
loop
repnz
cmp
mov
cmp
out
pop
call
push
nop
or
pop
hlt
ja
xchg
xchg
out
pop
mov
je
enter
adc
stc
cmp
hlt
repnz
cld
shr
sub
pop
ror
jne
mov
mul
in
je
pop
adc
add
mov
jmp
pop
ror
sub
scas
mov
lea
sbb
in
add
ins
adc
xor
call
outs
out
jl
rcl
je
add
xchg
mov
pop
sub
jne
dec
add
cmp
and
scas
xchg
sub
movs
dec
xor
adc
mov
mov
pop
movs
mov
rcl
inc
mov
jle
nop
jecxz
and
push
les
sbb
in
jl
sbb
fst
mov
repz
sub
hlt
adc
or
push
shr
movmskps
es
sbb
mov
cmp
add
movs
in
mov
fisubr
adc
sub
sahf
sbb
loope
std
jns
outs
out
pop
xor
pop
mov
cmp
add
mov
dec
push
cdq
movs
xchg
ror
pop
out
jnp
adc
mov
jmp
jnp
pop
jmp
hlt
push
pushf
into
pop
push
or
stc
pop
int3
(bad)
sbb
outs
in
adc
sahf
out
mov
out
scas
push
xor
mov
and
and
fimul
xor
xchg
sub
jl
into
dec
and
es
cmc
jno
aam
movs
popf
dec
idiv
jns
lods
add
rcr
pop
cmp
cmp
adc
jmp
sbb
loopne
adc
mov
sbb
cmp
cmp
adc
inc
scas
push
add
out
js
pop
push
dec
outs
push
cmc
cwde
jp
mov
push
pop
push
pop
jp
ret
add
sub
unpckhps
imul
or
xor
stos
adc
clc
test
jno
lea
repz
push
(bad)
addr16
neg
cmps
xchg
out
dec
jno
cdq
inc
fcomi
jbe
xchg
cld
js
(bad)
jp
les
xor
mov
xchg
sub
iret
fsubr
pop
shr
inc
std
xor
daa
ret
pmuludq
pop
popf
inc
jmp
cmp
fs
aas
stc
mov
jno
aad
loop
shl
mov
test
sub
mov
fbld
mov
aam
jo
mov
ror
mov
mov
clc
hlt
std
sbb
mov
repz
push
call
adc
mov
and
dec
ret
add
mov
add
mov
imul
push
loop
lods
push
mov
push
sti
in
mov
push
pop
fcom
in
ror
imul
or
stos
scas
xor
sub
stos
or
hlt
hlt
cmp
sub
outs
and
push
mov
lahf
xor
ja
cmps
mov
or
(bad)
sbb
loope
xor
xor
mov
pop
aaa
adc
fdivr
jle
jnp
mov
xor
mov
lea
push
mov
orps
js
jmp
adc
xchg
pushf
cmp
fcmovu
pusha
jb
xor
push
lods
mov
fadd
or
pop
sub
mov
or
mov
add
dec
pop
xor
dec
xchg
xor
(bad)
sahf
js
jb
fwait
mov
enter
hlt
dec
(bad)
dec
div
add
mov
fisub
push
aas
sub
fbld
shl
push
ins
punpcklwd
push
mov
xchg
xchg
mov
xchg
pushf
jl
mov
pop
and
and
and
xchg
bound
sub
and
xor
mov
rcr
lahf
pop
mov
fwait
xchg
rcl
gs
and
lods
cmp
jno
pop
push
mov
cli
pop
add
ds
fsub
sbb
sub
xchg
mov
dec
add
inc
fistp
pushf
or
retf
dec
add
mov
dec
test
movs
add
adc
pop
scas
sbb
cmp
and
dec
jo
shl
fprem
adc
je
loopne
sub
jg
sti
enter
push
ss
(bad)
mov
inc
out
jbe
add
int3
nop
sbb
popa
inc
scas
not
nop
jno
punpckhdq
inc
push
jg
movs
scas
enter
rol
push
popf
or
mov
leave
push
mov
mov
outs
dec
sbb
cmps
stc
fistp
cmp
repnz
std
adc
aam
cmp
push
xor
inc
lahf
int
push
pop
out
adc
add
and
call
and
std
mov
cmp
(bad)
in
sbb
inc
or
dec
daa
add
xor
push
imul
add
or
popf
dec
cwde
imul
retf
mov
mov
iret
push
sub
or
call
inc
lds
dec
jge
add
jg
aam
arpl
jle
or
mov
sbb
call
mov
cmps
lock
fdiv
jae
cmp
popf
pop
loop
push
hlt
aam
xor
leave
lods
xor
aaa
aad
push
cmc
fwait
xchg
push
cmp
jp
pop
inc
loop
ret
mov
scas
mov
pop
iret
popa
je
jne
pop
mul
push
jp
pusha
inc
cli
aad
nop
and
and
xor
mov
enter
(bad)
int
imul
or
push
and
xchg
cmps
inc
push
or
or
add
test
lea
(bad)
jecxz
inc
mov
sbb
scas
fisub
cmp
push
xchg
push
out
add
stc
pop
cwde
jns
lea
outs
sbb
fdivr
cmp
cld
int3
dec
inc
xchg
xchg
ds
(bad)
lock
mov
enter
out
ror
in
or
adc
(bad)
imul
pop
pop
jbe
shr
and
mov
jmp
int3
vlddqu
pusha
(bad)
jg
xor
data16
push
cmp
dec
and
test
sub
cmc
adc
inc
dec
movs
mov
enter
mov
pop
icebp
jle
or
dec
and
dec
push
fstp
add
mov
pop
push
mov
jecxz
ja
imul
jmp
inc
push
inc
dec
ja
jg
lods
pop
loopne
pop
adc
dec
inc
adc
repz
lea
sub
add
leave
(bad)
mov
add
clc
dec
repz
dec
loope
pop
and
lea
iret
pushf
ins
jo
or
pop
outs
jo
adc
lea
mov
sub
inc
mov
cmps
fidiv
adc
xor
push
jecxz
shl
mov
cmps
mov
cwde
fild
mov
dec
inc
mov
out
arpl
fwait
and
movs
push
jecxz
loop
idiv
(bad)
adc
lock
fnstsw
push
and
sbb
xchg
and
jae
cmp
rol
jmp
shr
inc
shr
mov
push
mov
sbb
push
add
(bad)
bound
jle
and
pop
or
jge
mov
fdivr
mov
xchg
adc
and
mov
sbb
sbb
jg
enter
xor
imul
loopne
mov
das
pop
mov
stos
cmp
jecxz
loopne
xchg
sub
jae
xchg
mov
arpl
cmps
adc
add
xchg
and
mov
(bad)
lods
inc
repnz
cmps
sbb
les
movs
inc
ficom
idiv
jo
fsub
dec
and
fisubr
in
push
cld
(bad)
mov
push
(bad)
xchg
and
inc
sub
inc
(bad)
popa
ficom
inc
sahf
je
mov
cmps
xchg
jnp
cli
sub
scas
addr16
pop
push
or
outs
ret
xchg
out
push
sub
cli
aas
pop
into
stos
adc
aam
add
inc
xchg
in
imul
mov
push
les
jmp
adc
rcl
cmc
movs
cmp
adc
(bad)
xchg
dec
cld
fs
mov
pop
xor
in
mov
jecxz
xor
nop
call
add
fsubr
ret
mov
jl
push
adc
je
xchg
add
ins
jge
imul
jno
add
fld
or
iret
xor
and
or
into
adc
adc
into
inc
or
stos
adc
stc
retf
inc
xor
(bad)
xor
scas
or
jmp
es
loopne
push
into
inc
fiadd
popf
adc
int
push
sbb
mov
out
mov
fimul
and
cmc
addr16
into
out
mov
push
pop
adc
dec
jecxz
cs
jmp
xor
sbb
movs
ss
mov
leave
(bad)
sti
pop
loope
in
push
cmps
xchg
in
aaa
cmps
leave
push
mov
fcmovne
pop
xor
bound
cmp
inc
movs
sbb
scas
inc
data16
push
push
push
jmp
fiadd
inc
div
into
imul
mov
clc
and
ret
adc
sahf
and
dec
out
out
inc
and
lahf
mov
mov
jbe
stos
into
mov
loopne
mov
dec
aam
fst
adc
pop
mov
lock
test
dec
outs
inc
inc
add
mov
and
idiv
mov
cmp
mov
sti
adc
pop
(bad)
mov
popf
push
and
dec
fist
lahf
or
dec
sbb
xchg
inc
adc
imul
dec
in
pop
movs
xor
xlat
shl
pop
enter
xchg
dec
out
pop
cwde
jae
aaa
adc
or
dec
adc
push
xchg
xchg
cwde
mov
mov
mov
(bad)
in
cmp
cld
adc
(bad)
cmp
pop
repnz
sbb
mov
and
xor
xor
jmp
and
mov
aas
pop
nop
inc
pop
mov
cmc
pop
cdq
jbe
push
out
jbe
movs
(bad)
rol
push
bound
jnp
xor
into
xchg
xor
dec
inc
pop
dec
dec
(bad)
jg
jmp
loopne
ror
pop
xchg
jp
and
cmp
(bad)
rcl
jne
xchg
in
and
xor
cli
lea
xchg
mov
cmps
push
or
dec
(bad)
enter
sub
in
cmp
sar
retf
ret
cmp
sub
daa
pop
xchg
mov
nop
ret
push
pop
ret
mov
mov
ja
and
in
pusha
lods
das
mov
mov
pushf
ins
mov
jmp
sar
pop
sbb
sti
ret
push
xchg
or
es
mov
cmp
xor
mov
ficom
jae
fidivr
push
retf
dec
cmps
add
add
or
push
jl
jne
iret
xchg
pop
push
or
jp
in
jp
push
adc
push
pop
add
mov
pop
and
and
leave
xchg
sbb
adc
(bad)
dec
pop
hlt
out
lock
retf
pop
sbb
(bad)
cmp
mov
mov
adc
lock
out
dec
outs
lods
sahf
aam
xor
fld
enter
xchg
cmp
(bad)
push
push
mov
mov
cli
sbb
orps
or
sbb
shl
adc
arpl
enter
adc
fs
sbb
test
mov
scas
fcomp
jge
dec
pop
sub
xchg
jl
(bad)
push
arpl
mov
sub
sbb
mov
dec
cs
(bad)
(bad)
scas
daa
xlat
leave
push
pusha
and
xchg
lds
mov
pop
xor
in
dec
jle
dec
and
push
mov
add
fidiv
add
xchg
movs
and
pop
dec
or
scas
jnp
ss
mov
cld
jmp
sbb
jno
add
cmp
aas
icebp
hlt
cmp
xchg
movs
inc
jecxz
and
pop
add
fnstsw
adc
(bad)
cld
mov
jno
cmps
imul
add
dec
jne
pcmpgtd
inc
mov
push
sar
scas
inc
push
lea
leave
ds
and
adc
in
xor
shr
mov
out
aas
push
aas
push
aaa
in
mov
call
dec
pop
enter
mov
push
cdq
mov
xor
inc
sbb
int3
retf
mov
xchg
mov
mov
xor
repnz
call
mov
movs
(bad)
pop
xor
xchg
in
adc
jle
arpl
cmp
iret
fst
xchg
jecxz
mov
retf
mov
push
jge
imul
sbb
xchg
cli
scas
in
ins
cli
pop
add
dec
retf
pop
pop
mov
fwait
or
mov
pushf
adc
mov
test
jb
mov
jl
cs
dec
pusha
xor
mov
adc
adc
jae
in
dec
pop
sub
xor
icebp
cmps
or
sbb
dec
mov
mov
xor
(bad)
xchg
dec
in
or
jp
mov
adc
nop
sbb
jmp
cmp
lahf
inc
jno
add
jno
sahf
aad
xchg
or
mov
pop
shr
(bad)
in
pusha
stos
outs
in
lods
cmp
push
xchg
les
or
int
sbb
push
push
mov
xchg
pop
cld
xchg
retf
sub
mov
pop
repz
push
lahf
dec
or
inc
mov
les
in
push
sub
cmp
fisttp
pop
push
es
mov
fistp
mov
das
xor
sahf
sar
adc
pop
adc
mov
add
fwait
movs
lods
mov
inc
add
inc
mov
jmp
shl
arpl
ffree
dec
jmp
(bad)
push
ins
mov
inc
cli
daa
mov
pop
adc
adc
stos
je
xchg
adc
scas
mov
iret
jmp
dec
sar
jmpw
add
jnp
xchg
(bad)
xor
xchg
mov
(bad)
and
loop
cmp
jne
(bad)
xor
nop
out
lds
scas
out
push
push
hlt
pop
shl
dec
xchg
pop
and
jmp
test
je
retf
ins
fstp
or
fiadd
call
rcl
jns
fs
and
pop
fs
sar
mov
xchg
hlt
in
xchg
mov
retf
adc
clc
cmp
mov
or
push
repnz
(bad)
mov
into
push
into
dec
loope
rol
leave
test
or
pop
mov
mov
bound
aad
mov
adc
(bad)
dec
and
pop
stc
fist
cmp
es
mov
and
lea
and
je
push
outs
in
xlat
adc
xchg
xchg
repnz
dec
pop
sar
jns
pop
sbb
mov
retf
scas
ds
xor
cmps
arpl
add
icebp
addr16
out
mov
mov
mov
xchg
cmp
xor
push
inc
movs
(bad)
aam
mov
repnz
pop
int
call
cli
jge
dec
adc
xchg
add
jle
and
in
dec
mov
pushf
mov
retf
mov
loope
fnstsw
or
movs
(bad)
xor
dec
and
pop
inc
sbb
and
std
xchg
in
sub
pop
ret
out
adc
sbb
push
sbb
rcr
lahf
ss
clc
pusha
test
cmp
je
jno
add
adc
or
icebp
scas
or
cwde
jmp
dec
ss
inc
test
and
sti
idiv
pop
mov
popf
shr
and
pushf
inc
loopne
sar
repnz
inc
fild
jp
dec
sbb
pushf
inc
sub
retf
jns
cdq
inc
out
mov
dec
inc
dec
fdivr
or
ins
jl
sub
add
aas
pushf
inc
and
sub
ins
xchg
xor
sub
das
dec
sahf
lahf
jecxz
sub
cli
stos
ins
data16
add
dec
jl
clc
mov
repz
cmp
cmp
add
ror
mov
add
gs
es
push
mov
cmp
int
fwait
mov
sub
adc
retf
shr
lods
cwde
xchg
and
or
jle
sub
sar
in
fst
cld
jbe
fisubr
pop
dec
pushf
inc
adc
rol
stos
imul
push
sbb
idiv
(bad)
daa
sub
adc
repz
sub
shl
pushf
or
stos
sub
arpl
cmp
pop
or
jmp
xor
cmps
neg
clc
cwde
pop
or
add
and
jmp
inc
or
push
jo
ss
imul
mov
and
mov
out
call
mov
movd
cdq
retf
mov
lea
jl
push
or
es
sbb
lods
clc
or
cmp
(bad)
neg
repnz
(bad)
cmp
ins
(bad)
(bad)
jle
fist
int3
aam
fcom
pop
add
repz
or
(bad)
faddp
sub
mov
out
mov
dec
shl
bound
cdq
(bad)
ret
pop
dec
pop
inc
and
aaa
xlat
push
cs
loop
fwait
cmp
dec
and
jecxz
pop
(bad)
(bad)
mov
les
push
pop
pop
jmp
mov
test
push
jecxz
in
push
jmp
cmps
fwait
jecxz
cs
xor
movs
xchg
rep
jbe
push
movs
inc
(bad)
lahf
nop
push
cmc
pop
jmp
dec
sub
fcmovu
xchg
push
mov
inc
sub
hlt
xor
pop
movs
repz
imul
dec
mov
int3
fisttp
cli
int3
mov
pop
push
mov
xchg
and
outs
stos
repz
dec
push
loop
pop
test
bound
sub
xchg
and
call
in
adc
cdq
cmp
out
jp
sbb
in
icebp
jl
jle
adc
sbb
jg
or
cmp
cmc
inc
ins
retf
iret
push
(bad)
(bad)
cdq
sub
dec
jbe
cmps
pop
cmc
mov
cs
cmp
(bad)
push
mov
test
and
cmp
adc
in
and
aam
adc
(bad)
jp
jb
pop
pop
sub
mov
sar
push
and
pop
hlt
xchg
add
jle
in
xor
dec
xchg
push
mov
stos
jbe
push
adc
xcrypt-cfb
cmps
pusha
push
inc
push
jbe
js
pop
fist
push
cmps
and
movs
inc
(bad)
mov
cdq
test
out
sub
push
movs
test
inc
clc
sub
cmp
inc
std
push
dec
cmp
enter
sbb
mov
and
inc
int
dec
sar
adc
cmp
push
test
loopne
jge
sbb
sub
jmp
mov
lods
es
ins
or
push
dec
sbb
shl
repz
pop
dec
push
mov
pop
mov
mov
mov
or
jns
loope
pop
sbb
loopne
rcl
push
mov
jmp
ror
push
dec
sti
xchg
sbb
movs
(bad)
imul
xchg
xchg
mov
daa
data16
movs
and
inc
and
push
pop
sub
cmps
(bad)
retf
addr16
(bad)
add
dec
xchg
(bad)
cmovle
or
pop
cmp
or
sub
adc
sbb
aaa
mov
adc
jg
(bad)
xlat
movs
mov
mov
inc
or
jle
and
int
or
mov
push
push
inc
xchg
jl
arpl
clc
adc
dec
lods
sub
sub
adc
push
jnp
sub
pop
mov
lock
fist
adc
inc
mov
cmps
lahf
jmp
out
mov
jb
inc
xor
cli
and
add
test
adc
xor
test
push
xchg
ss
ss
mov
pop
mov
adc
sub
lods
cmps
mov
loopne
sar
xchg
out
outs
cmp
into
pop
jmp
movs
sbb
sti
loop
mov
adc
cdq
pop
sbb
add
push
mov
cmc
stc
dec
cmp
outs
xchg
fstp
ins
add
jge
sbb
push
cmc
and
jp
jae
jne
mov
mov
mov
mov
push
xor
shr
int
push
dec
icebp
data16
loope
jl
mov
add
ja
lds
pop
repz
repz
int3
pop
pusha
cmp
xchg
shl
cmp
test
cli
icebp
out
dec
(bad)
out
or
jge
pop
dec
(bad)
arpl
loop
xor
popf
mov
arpl
test
pop
dec
cmp
mov
stos
jge
ror
out
xor
ds
dec
jns
aad
loope
and
xor
pop
loop
pop
mov
xchg
das
xchg
imul
call
std
popf
and
cli
inc
adc
jecxz
repnz
lock
xor
imul
dec
sub
adc
imul
cmp
push
pop
lahf
into
aad
inc
jmp
sbb
ja
xchg
push
rol
into
retf
test
bound
fmul
mov
jle
retf
push
test
fwait
and
mov
inc
mov
jne
enter
lods
cs
sbb
mov
and
push
into
lds
sbb
or
fwait
ret
adc
cmps
sub
mov
in
adc
fs
push
jecxz
inc
(bad)
lods
pop
push
or
(bad)
mov
ins
js
mov
int
ins
cs
mov
pop
sbb
push
fucomip
sbb
push
aaa
ja
mov
push
daa
mov
adc
mov
repnz
sar
ds
or
mov
imul
mov
add
pop
rol
sub
fs
ror
(bad)
cmc
xchg
adc
adc
lds
(bad)
jecxz
aad
out
pusha
in
xor
mov
in
movs
nop
loop
stos
enter
adc
xor
pop
inc
imul
outs
xor
jg
dec
xchg
xchg
push
mov
loop
add
and
movs
dec
xlat
les
std
sbb
int3
(bad)
sbb
(bad)
jnp
adc
retf
aam
inc
dec
push
ret
sub
mov
xor
mov
lock
aas
mov
loopne
sub
shl
jo
out
dec
out
cmp
or
(bad)
sub
push
jo
cmp
daa
loope
add
dec
je
inc
add
jae
xor
(bad)
push
pusha
push
or
mov
jmp
ret
fcmovbe
sbb
xchg
outs
adc
call
pop
fsubr
arpl
add
inc
mov
ins
xchg
neg
icebp
dec
test
ss
xor
clc
push
jmp
jbe
cmp
and
ja
adc
out
icebp
icebp
add
imul
out
and
cdq
div
cmp
(bad)
imul
sbb
out
push
sbb
add
cwde
div
mov
out
xchg
daa
out
mov
in
push
pop
cmps
xor
stos
jno
xchg
pop
clc
clc
out
aad
xchg
idiv
loopne
enter
test
ror
push
lods
xchg
cmps
outs
jmp
sbb
test
fs
into
shl
jne
mov
cld
sbb
pop
xchg
push
loop
ins
test
jne
cmp
fisttp
inc
dec
out
adc
push
jge
cwde
sub
jb
neg
mov
ror
test
test
jno
mov
mov
and
dec
lahf
push
sbb
cmp
cmc
or
aad
jmp
je
lods
leave
jl
pop
jmp
mov
test
push
cli
call
push
fsubp
(bad)
neg
adc
pop
add
push
pushf
push
xchg
jb
mov
(bad)
push
(bad)
and
popa
cmp
xor
arpl
adc
mov
xor
sbb
pushf
adc
repz
xor
mov
or
inc
icebp
or
inc
pop
lds
std
xchg
js
jp
xor
dec
or
das
mov
fmulp
fimul
rcr
jnp
clc
mov
xor
inc
xchg
mov
in
aas
xchg
ret
push
or
mov
xor
les
cli
scas
cmp
aas
sub
imul
mov
rcl
adc
mov
test
and
mov
ror
movs
jne
sar
mov
aas
mov
cmp
and
adc
sub
adc
mov
cmp
mov
shl
shl
lock
sar
imul
int
xor
xor
je
out
jg
sbb
sbb
push
je
inc
sti
cmc
ins
inc
mov
jb
cmp
jmp
mov
out
xchg
gs
fnstsw
dec
mov
mov
(bad)
in
pushf
push
repz
mov
idiv
or
loop
not
inc
mov
mov
hlt
fisub
out
in
xor
inc
and
out
pop
mov
xor
mov
(bad)
lahf
jp
outs
out
add
dec
add
(bad)
jp
arpl
sub
fucomip
div
sahf
dec
xchg
test
outs
test
jmp
outs
mov
enter
dec
call
out
sbb
popf
mov
out
pusha
fiadd
das
sbb
pop
xchg
mov
mov
pop
sub
(bad)
xlat
or
fild
sar
mov
loope
xchg
mov
dec
into
mov
mov
call
xor
jns
adc
xchg
mov
ja
test
test
add
clc
aas
inc
or
imul
hlt
fild
fmul
stc
mov
lds
aam
imul
mov
add
mov
scas
inc
jmp
test
jne
sub
js
into
ins
pop
xchg
fistp
ins
cmps
dec
ror
stos
cmps
fisub
cmp
lds
cmp
adc
scas
int3
xchg
adc
push
push
hlt
xchg
sbb
sti
js
sub
or
(bad)
xlat
pop
pop
lahf
mov
mov
(bad)
ror
adc
cmp
call
cmp
test
outs
imul
(bad)
xor
sbb
div
jle
retf
mov
fs
adc
xchg
int
mov
sub
mov
aad
jge
add
xchg
mov
mov
mov
imul
stos
pop
enter
icebp
pop
rcl
sbb
mov
push
bnd
jnp
(bad)
int
inc
jg
and
xor
adc
push
cdq
das
(bad)
push
into
xor
mov
loope
(bad)
mov
fsubr
pop
das
call
fs
add
ins
outs
leave
call
ror
push
xor
add
jge
or
mov
sub
fsub
dec
jne
jge
push
cmc
ss
sahf
call
and
xchg
imul
out
pop
fnstcw
cmp
inc
sub
dec
jns
in
arpl
adc
mov
stos
mov
xlat
xchg
out
push
scas
dec
psubd
jo
xlat
or
or
outs
ret
mov
xchg
adc
ds
cli
xlat
test
cld
std
push
xor
fmul
ds
push
vpaddw
dec
dec
stc
pop
imul
pop
push
das
cmps
jmp
sub
mov
push
adc
mov
outs
(bad)
ins
jp
dec
les
cs
xor
sbb
mov
sbb
es
in
xchg
vfpclasspd
(bad)
addps
fsubr
mov
fidivr
adc
pop
mov
push
imul
jle
ficomp
cmp
mov
les
push
push
mul
lods
and
ret
jmp
mov
lods
sub
mov
jnp
mov
adc
mov
rcl
xchg
push
inc
ror
or
pop
sti
fisubr
hlt
mov
or
inc
mov
and
in
add
repz
cwde
cmps
sbb
repnz
arpl
shl
call
fpatan
in
lock
loop
sbb
dec
enter
xchg
push
sbb
mov
push
inc
push
aaa
mov
popa
push
xor
jg
cmps
xchg
les
out
in
fimul
ja
popf
es
jne
(bad)
inc
fidiv
xor
and
inc
stos
fdivr
mov
popa
ins
xor
jl
or
pushf
mov
mul
xchg
or
addr16
call
into
xlat
repnz
sti
(bad)
arpl
mov
or
mov
and
xlat
rcl
rcl
and
xchg
or
xor
xchg
leave
xor
dec
mov
neg
jae
test
clc
in
sbb
les
sub
or
in
inc
shr
shl
ret
xchg
jbe
fiadd
dec
sbb
inc
lea
sahf
pop
mov
cmps
push
ja
jae
rcl
clc
inc
dec
das
jecxz
inc
mov
jg
inc
sbb
xchg
sbb
and
cwde
fs
jle
pop
sbb
cmps
pop
inc
leave
in
push
rcl
arpl
shr
dec
rcr
retf
push
push
cdq
or
add
out
inc
bound
dec
add
in
cmp
cmp
stos
and
popf
pop
push
push
scas
fs
mov
xchg
fild
ins
or
test
cs
loopne
out
pop
mov
or
push
xor
ret
xlat
inc
ror
mov
fnstenv
out
out
imul
addr16
das
sbb
push
xchg
pushf
adc
movs
sub
fstp
dec
in
aad
pop
push
sbb
and
mov
inc
pop
cmp
push
inc
aam
inc
gs
mov
aaa
fwait
mov
or
inc
pop
pop
pop
movs
mov
xchg
out
mov
fdiv
xchg
fild
aam
push
inc
and
ror
inc
lds
xor
popf
mov
aam
in
aas
xchg
outs
add
lods
ds
iret
xchg
into
out
pop
in
popa
push
(bad)
(bad)
cld
mov
pop
push
dec
inc
sub
or
xchg
inc
and
xchg
imul
pop
xor
test
pop
jle
add
hlt
and
inc
sbb
inc
jecxz
xor
lds
mov
js
cmp
hlt
adc
adc
outs
sbb
mov
inc
or
aam
xchg
neg
sub
mov
pop
jecxz
inc
sar
xchg
dec
(bad)
pop
xor
loopne
and
and
mov
dec
fdivr
fwait
lea
or
mov
mov
mov
pop
jns
mov
push
jne
movs
das
push
xor
or
ss
xchg
addr16
jmp
nop
movs
sahf
sub
out
ja
dec
pop
call
retf
add
(bad)
xor
dec
pop
test
xor
nop
adc
xchg
or
and
mov
lea
inc
mov
xchg
ds
fwait
std
ret
lea
inc
lods
cmps
dec
cmps
repnz
outs
push
sahf
cmp
sbb
cmp
arpl
xchg
sub
sar
in
mov
call
mov
dec
dec
pop
dec
(bad)
int
movs
sahf
inc
jp
loop
stc
ins
cmp
or
scas
fbld
mov
out
movs
mov
mov
fmul
iret
fist
or
inc
fild
lods
sahf
push
(bad)
shr
add
in
mov
(bad)
or
(bad)
imul
(bad)
fisttp
daa
cs
clc
sbb
(bad)
fcomp
mov
lock
(bad)
dec
sbb
popa
cmp
repnz
ja
jnp
gs
loop
sbb
mov
or
enter
dec
xor
jae
mov
jl
int3
mov
mov
cwde
mov
mov
mov
sub
fiadd
push
xchg
mov
jo
jg
sahf
fst
daa
sub
and
push
mov
push
xchg
ficomp
in
clc
stos
inc
enter
xor
push
mov
jp
dec
xchg
push
mov
dec
mov
jmp
mov
jg
mov
movs
jecxz
out
or
aaa
cmp
cmp
mov
sbb
mov
addr16
sbb
in
retf
mov
push
rcr
mov
xchg
std
jae
arpl
mov
imul
pminsw
sti
arpl
outs
xor
push
and
adc
(bad)
out
in
push
enter
int
sysenter
repz
push
cmp
xor
inc
xor
jo
aas
pop
push
fs
mov
add
out
pop
mov
fbld
and
jmp
shr
das
scas
jmp
sbb
rol
das
jecxz
xchg
xchg
adc
push
dec
adc
out
xlat
add
mov
jne
mov
dec
pop
fwait
mov
jmp
call
mov
xlat
mov
into
sub
(bad)
dec
cld
mov
or
lods
cmp
ret
and
push
gs
xchg
bound
mov
add
aaa
xor
adc
mov
loopne
ja
enter
xchg
adc
in
test
jge
or
retf
dec
cmps
mov
cmc
lods
in
lea
pushf
mov
out
sbb
add
aaa
and
and
push
ds
call
movs
sbb
and
aas
icebp
cmp
mov
add
arpl
xor
lods
mov
pop
cmp
aam
add
loope
inc
je
xchg
add
ss
loope
jmp
mov
cmp
push
call
ror
pop
mov
xor
pop
sub
jp
push
jns
mov
stos
rol
enter
shr
xchg
xchg
fwait
fwait
adc
push
mov
cmp
in
adc
aaa
inc
and
mul
sar
xchg
or
and
shr
aam
nop
mov
retf
std
pop
mov
lahf
lea
xchg
enter
(bad)
xchg
cmp
cwde
aad
sahf
inc
std
loopne
pop
fcom
cmp
and
jp
xchg
inc
test
xchg
adc
sub
jl
test
popa
dec
mov
sti
mov
sub
lds
stos
jb
pop
pop
sbb
jo
cmp
mov
cs
or
pop
xchg
out
test
and
add
and
mov
inc
sub
mov
test
dec
fisub
jnp
push
push
jl
sub
add
ds
(bad)
add
call
mov
nop
xor
xor
ds
mov
or
jp
stc
mov
xchg
xchg
int3
test
and
cwde
mov
into
repz
xchg
sti
aas
loop
mov
ret
and
add
add
aad
fsub
popf
mov
jnp
loopne
enter
mov
xchg
jo
adc
(bad)
mov
lahf
test
enter
or
cdq
out
jle
or
clc
aad
mov
call
retf
and
das
nop
sub
mov
jecxz
icebp
outs
sub
pop
jae
gs
bound
lea
cmp
aam
sahf
mov
xor
pushf
and
ss
xchg
sub
enter
jge
or
cmps
sbb
jb
bound
push
mov
adc
and
and
or
push
mov
mov
pop
aaa
addr16
pop
mov
or
jbe
dec
xchg
dec
or
push
out
test
imul
jo
pop
or
and
(bad)
fbld
add
dec
adc
add
retf
inc
sub
mov
pop
pop
inc
and
loop
test
and
je
xchg
fwait
(bad)
aam
inc
inc
repnz
scas
add
fwait
mov
inc
mov
pop
div
xchg
dec
push
jne
lds
imul
aam
adc
xor
and
pop
aas
dec
(bad)
call
push
cwde
stos
jecxz
pusha
retf
dec
or
jno
add
arpl
xchg
jecxz
dec
leave
aas
outs
sub
dec
aad
xchg
in
mov
fadd
in
pushf
test
sbb
or
movs
pop
bound
mov
icebp
pop
adc
rcl
fist
mov
fild
cld
xor
mov
aas
fistp
imul
stos
into
xchg
pusha
push
or
sbb
mov
arpl
adc
and
loope
push
je
aas
fucomp
jno
mov
lock
jns
icebp
sahf
out
xor
or
lods
cmps
std
lock
retf
mov
push
sub
mov
jle
stos
aad
mov
adc
ror
shl
adc
jp
ret
aas
jmp
cmp
outs
jge
es
les
dec
add
aas
mov
xchg
push
xor
push
(bad)
cmp
cmp
adc
jp
sub
js
cmps
fs
(bad)
hlt
(bad)
cmp
xlat
xchg
add
in
push
iret
data16
(bad)
mov
call
cmp
addr16
test
mov
and
sub
(bad)
adc
fwait
loop
pop
adc
sar
repnz
adc
daa
retf
dec
lahf
push
loope
shl
aas
cmp
sub
iret
sbb
(bad)
xor
icebp
jno
push
in
call
out
call
adc
push
cmp
add
jbe
repz
and
and
jmp
push
cs
dec
into
pop
pop
arpl
daa
sub
into
scas
push
rcr
cli
in
xor
iret
jmp
xor
repz
out
mov
xchg
push
mov
out
fdivr
in
repz
sbb
fsubr
outs
mov
daa
push
scas
int3
lock
es
mov
icebp
or
in
or
ret
loopne
mov
jmp
gs
adc
out
inc
cmp
dec
nop
test
xor
bound
lea
shl
nop
mov
sbb
mov
fcom
call
mov
test
xchg
sub
push
cmp
and
call
pop
mov
ins
jne
sbb
cmp
cmp
inc
(bad)
push
mov
mov
test
es
cmp
retf
loop
and
mov
pop
in
add
mov
in
add
lods
std
(bad)
(bad)
icebp
cmp
jp
jg
or
test
mov
add
imul
imul
dec
test
and
push
and
hlt
enter
icebp
jo
sub
jecxz
pop
sbb
shl
(bad)
adc
jae
jp
icebp
out
lock
loop
dec
test
push
ja
iret
retf
out
repz
jmp
rol
call
in
cmps
mov
sbb
sbb
sbb
push
cmp
mov
iret
inc
dec
call
outs
ret
fcomp
es
out
gs
popa
mov
or
jae
(bad)
sbb
jge
icebp
into
mov
(bad)
cli
rcr
jns
enter
shl
sub
jbe
js
cmps
cld
shl
mov
and
rol
jb
push
pop
scas
mov
call
std
push
cmp
daa
adc
cmps
pop
sub
ret
ret
arpl
push
fimul
sbb
popa
and
push
and
cmp
nop
(bad)
test
fucom
inc
dec
dec
or
pand
or
out
int
push
inc
iret
inc
(bad)
mov
jp
fisttp
jge
add
ss
ret
mov
mov
fmul
dec
xor
sub
xor
ja
inc
repz
repnz
mov
jge
cmp
ret
sbb
mov
pop
cmc
mov
sar
imul
pop
jo
cmp
or
or
sahf
and
aam
xchg
mov
cwde
xchg
add
mov
dec
xchg
jne
jge
mov
ret
add
mov
jns
dec
add
jge
fidiv
lock
cmp
push
stos
jmp
shr
std
inc
shl
bsr
or
dec
loope
mov
mov
and
pop
adc
xor
std
popa
ss
xchg
push
push
xor
jle
dec
nop
addr16
sub
arpl
mov
fwait
fwait
(bad)
jl
jp
xchg
stos
lea
in
mov
pop
adc
bound
dec
add
lods
dec
add
ins
xchg
out
out
std
lahf
(bad)
jne
retf
xchg
sub
jnp
cs
pop
jbe
sbb
mov
pop
test
out
add
jne
pusha
xchg
or
pop
fstp
mov
add
inc
pop
add
popf
or
push
lahf
push
xor
jo
(bad)
xor
jle
xor
sahf
xchg
push
adc
addps
inc
jbe
inc
sub
icebp
pop
pop
inc
test
xlat
xor
enter
mov
movs
dec
sub
adc
stc
fldpi
mov
test
js
mov
into
into
or
dec
add
mov
jno
fnstenv
xlat
and
jo
xlat
xchg
adc
mov
push
sbb
add
aad
addr16
sbb
ret
movs
inc
or
mov
lods
(bad)
arpl
xchg
xchg
jle
dec
jmp
icebp
nop
aad
fcom
mov
inc
int
push
daa
dec
and
lea
call
sar
dec
in
cmp
std
cld
push
mov
dec
jmp
pop
mov
pop
(bad)
ins
into
mov
fdivr
and
fdiv
sub
lock
fldcw
arpl
push
fnstcw
cdq
cmp
in
or
mov
sub
(bad)
push
sub
sbb
mov
lahf
je
add
daa
pop
xchg
rcr
jae
mov
push
inc
scas
or
push
out
sahf
es
jae
je
push
xchg
repnz
pop
test
loope
xchg
pop
fsub
inc
fwait
jmp
hlt
jb
push
lea
lea
xchg
jns
shl
mov
out
fisttp
aam
push
sub
int
and
mov
pusha
sub
or
imul
or
xchg
pop
dec
mov
xchg
mov
std
xlat
inc
mov
pop
popa
(bad)
and
mov
dec
iret
mov
test
(bad)
out
xchg
fs
ss
fcom
(bad)
iret
xor
jp
xchg
inc
stos
rcr
dec
push
sub
sti
(bad)
push
mov
sar
inc
jp
mov
xor
(bad)
jo
jo
xchg
jg
cli
in
sbb
add
mov
push
into
adc
pop
pop
test
pop
push
outs
xchg
rcr
xchg
xor
je
push
xchg
dec
push
xchg
loopne
in
dec
cmp
ds
mov
or
shl
cs
repz
out
in
mov
daa
dec
cmp
and
imul
pop
jb
ret
push
call
shr
sub
adc
push
cmps
mov
outs
enter
sbb
add
pusha
enter
ret
arpl
mov
adc
test
scas
dec
(bad)
xor
adc
cmp
and
pop
mov
(bad)
push
inc
ja
mov
xor
xor
mov
jbe
icebp
or
add
ret
xchg
(bad)
mov
inc
add
or
out
iret
mov
mov
mov
movs
push
adc
ret
fidiv
push
in
inc
dec
adc
sbb
jnp
sbb
addr16
pop
xchg
sti
pop
xchg
enter
scas
mov
test
cwde
rcl
ja
retf
push
cmp
enter
xchg
ret
or
jne
(bad)
or
xchg
push
into
xchg
jnp
inc
jo
cmp
xor
jo
xchg
sub
fwait
test
cmc
sub
cmps
dec
jae
mov
in
das
lea
push
add
pop
retf
(bad)
jmp
mov
xchg
add
sbb
push
pop
jl
push
jb
bound
cmp
call
jno
shl
mov
loop
pop
scas
xor
add
xchg
jb
mov
out
xchg
retf
mul
ins
jge
xor
pop
int
add
mov
pop
iret
xchg
inc
cmp
scas
ret
mov
jbe
repnz
dec
or
mov
dec
adc
and
stos
mov
dec
jecxz
aam
cmp
test
pop
mov
adc
jo
fisubr
xchg
mov
mov
push
outs
cmp
inc
inc
xor
imul
jns
jae
mov
jbe
retf
pop
aad
les
push
ret
les
or
fist
xor
mov
nop
div
sub
pushf
loop
mov
loop
add
lock
mov
ins
sbb
ss
cmp
shl
jnp
(bad)
jne
sub
mov
cdq
mov
push
adc
ds
jo
inc
aas
xor
inc
loop
xchg
fsin
dec
call
cmc
pop
mov
addr16
out
(bad)
xor
mov
jl
mov
aaa
mov
ins
fwait
pop
jo
or
shr
scas
sar
nop
(bad)
push
fsubr
mov
lods
fadd
xor
sahf
mov
push
push
mov
xor
dec
pushf
dec
xchg
xchg
(bad)
and
and
xor
sub
push
loopne
and
stos
test
hlt
loop
pop
pop
sbb
rcr
add
jle
push
xchg
xchg
push
adc
and
cmp
add
rol
pusha
jnp
push
mov
shl
xchg
dec
mov
sbb
sub
jecxz
sub
mov
jge
xchg
sahf
pop
push
mov
popf
(bad)
jne
pmulhuw
inc
fld
cmps
call
enter
pop
aas
xchg
inc
xor
mov
inc
imul
dec
gs
dec
add
out
inc
sbb
fst
mov
mov
gs
mov
out
and
popa
leave
lea
jb
mov
std
ins
ret
scas
arpl
and
jmp
out
xchg
fs
and
cmp
mov
call
jae
sbb
cmp
cmp
sub
out
(bad)
sub
movs
jbe
ins
aas
sub
jmp
in
das
in
out
jge
cmp
mov
add
sbb
pop
clc
mov
dec
icebp
cmp
add
cmp
(bad)
sbb
fldenv
call
or
movs
xchg
repz
xor
jg
jecxz
gs
ret
pop
push
lods
adc
imul
xchg
lea
push
ror
(bad)
lods
pop
shl
add
jmp
sar
shl
int3
sub
cdq
sbb
fs
pop
add
cwde
cdq
mov
cmp
mov
aaa
add
xchg
cmp
and
je
jns
mov
fnstcw
or
loopne
movs
retf
jp
mov
adc
dec
pop
xchg
mov
invd
push
stos
or
cmp
sub
fisttp
inc
icebp
je
sbb
cmps
aam
fwait
test
ret
mov
mov
aas
test
pop
addr16
push
lods
cmps
mov
mov
cmp
and
adc
dec
aad
add
mov
push
adc
sub
xchg
mov
daa
mov
dec
dec
lahf
sub
out
test
pop
mov
test
bound
popa
pusha
hlt
pop
lds
fnstenv
sub
mov
sbb
cs
dec
ins
inc
mov
xlat
and
lods
ret
pop
cmp
and
es
pop
out
retf
push
ror
jbe
xchg
adc
jo
sbb
(bad)
xchg
xchg
jo
cmc
push
adc
sbb
jg
push
sub
jl
or
ffreep
jno
(bad)
arpl
lds
or
dec
(bad)
jno
loopne
push
pushf
xor
loop
push
ins
and
xchg
dec
jnp
sbb
adc
repnz
rcl
in
loopne
pop
cwde
inc
push
test
dec
cmp
icebp
jbe
and
test
cmp
das
sub
pop
push
sbb
dec
(bad)
jl
add
cmps
int
sub
shl
sbb
ss
push
or
pop
inc
sahf
lahf
pusha
leave
cmp
cli
xor
sbb
add
adc
retf
push
push
cmc
xchg
mov
mov
xchg
and
pop
pop
xor
lods
jnp
dec
aaa
out
cs
adc
aas
mov
push
imul
je
cmp
jno
fild
xchg
push
(bad)
cmp
cmp
jne
fdivrp
call
adc
push
jecxz
test
adc
test
iret
pop
xchg
mov
jge
loope
xor
mov
(bad)
int
jbe
jmp
push
jne
bound
and
call
pop
dec
mov
add
out
test
mov
sub
jmp
test
sbb
mov
rol
out
jl
push
xor
sbb
leave
push
adc
pop
sbb
(bad)
sbb
fnstcw
rcl
jg
sub
popf
clc
movs
std
mov
sti
inc
push
scas
sbb
cmps
or
nop
nop
ss
mov
jne
push
jns
mov
dec
adc
inc
or
nop
pop
xor
adc
push
fstp
xchg
add
adc
mov
mov
ret
sbb
movs
test
into
outs
loope
retf
addr16
xchg
xchg
cmp
xor
pop
sub
gs
mov
cld
jo
sbb
push
das
sbb
push
call
jae
int
mov
cld
es
mul
mov
mov
shr
inc
mov
rcr
into
test
xor
dec
lds
or
mov
jbe
sub
shl
jecxz
hlt
pop
xor
ins
neg
ins
idiv
repnz
into
repz
ror
ds
in
stos
mov
out
call
pop
xor
stos
dec
fldcw
jmp
cmp
jp
sub
sbb
aam
mov
jne
add
xchg
and
jg
call
lds
cld
std
scas
sub
test
bound
jecxz
push
jecxz
test
adc
jno
outs
adc
retf
mov
stc
outs
mov
inc
sub
or
clc
and
std
test
mov
into
jle
out
loop
cmp
out
aas
xor
xchg
int
xchg
mov
ret
mov
sahf
push
cmp
or
jge
ins
loope
es
sub
add
sub
and
xlat
call
test
sahf
xchg
and
int3
cmp
pop
adc
out
aad
add
iret
icebp
sub
add
fprem1
mov
xor
std
inc
or
popa
push
inc
sub
jp
inc
loope
sub
movs
sub
cmps
push
mov
fistp
jge
jne
jg
imul
sub
or
popf
mov
in
les
movs
daa
lods
mov
aam
loopne
xor
add
aam
leave
jo
lea
sbb
or
arpl
add
cmp
add
jg
sbb
xlat
lea
imul
ror
mov
imul
add
inc
lods
addr16
mov
push
outs
and
push
(bad)
imul
js
arpl
stos
lahf
ret
pop
push
or
jp
ror
mov
mov
movs
mov
cmp
test
fcomp
xor
adc
addr16
dec
pop
jo
je
call
movs
add
push
dec
cmp
mov
(bad)
adc
cli
sahf
lods
jg
into
fisub
sub
pop
sti
je
enter
inc
popf
dec
mov
fsub
xchg
(bad)
ficomp
psrlw
ins
retf
jmp
push
or
ss
mov
js
push
fmul
cli
adc
js
fsub
mov
xchg
fwait
dec
test
and
sbb
gs
pop
popf
push
hlt
add
int3
jg
mov
dec
push
retf
cmp
inc
inc
add
retf
pslld
sahf
cmp
mov
jle
mov
icebp
hlt
jg
push
es
mov
ror
rcr
push
jecxz
popa
sbb
ins
xor
or
xor
xor
test
les
in
pop
jp
mov
aas
jae
rcl
rep
pop
and
jno
push
fisttp
inc
mov
idiv
test
out
push
sbb
fnsave
jae
test
sbb
dec
jno
add
push
mov
mov
movs
mov
das
into
or
mov
lods
adc
dec
xor
movs
inc
fsubrp
cmc
push
adc
mov
and
xor
popa
fisubr
jnp
stc
xlat
jns
addr16
movs
jnp
add
xor
dec
(bad)
xchg
jmp
xchg
mov
clc
add
or
inc
cmp
jne
cld
imul
arpl
push
neg
pop
je
pop
push
xchg
in
sub
icebp
arpl
fbstp
scas
dec
xchg
mov
sbb
test
jbe
aad
leave
pop
shr
add
mov
dec
sub
ret
cmp
xchg
or
outs
add
xchg
mov
cwde
rol
dec
dec
test
dec
nop
sbb
dec
pop
dec
mov
ins
ror
push
aad
sar
fmul
cmp
jle
mov
out
or
mov
test
cmp
xchg
mul
cwde
mov
mov
test
in
jne
lea
mov
outs
or
sbb
int
xor
push
pop
pop
sbb
iret
inc
aam
mov
add
adc
cmps
cmps
mov
stc
mov
stos
jg
je
xchg
(bad)
(bad)
clc
jge
add
cmp
movs
outs
pop
jl
adc
jp
rcl
mov
sbb
cmp
fdivr
loopne
nop
adc
push
adc
dec
imul
or
mov
cmp
xchg
mov
inc
(bad)
iret
and
jge
out
es
cs
imul
cmps
jle
adc
inc
imul
aas
in
push
mov
mov
push
test
mov
mov
std
adc
cmp
sub
ins
ds
call
lods
push
inc
ficom
out
dec
mov
jmp
das
hlt
jge
popa
out
pop
and
call
rcl
cmc
and
mov
mov
push
pop
addr16
pop
stc
mov
dec
add
repnz
xchg
setbe
or
push
cmps
js
or
mov
sub
and
int
xlat
mov
push
in
push
inc
mov
retf
loop
popa
pushf
test
imul
je
imul
cmc
jo
sub
push
pop
pop
cmps
in
fist
aam
repz
jmp
xchg
(bad)
cs
arpl
inc
in
xchg
cmp
dec
push
pop
ds
out
imul
outs
in
ret
xchg
and
jg
mov
adc
mov
push
inc
mov
(bad)
repnz
test
mov
sbb
cmp
mov
push
mov
in
xor
sar
sbb
mov
aad
shr
sub
ds
frstor
inc
jmp
mov
jmp
cmp
adc
xchg
outs
add
test
daa
les
aaa
dec
std
(bad)
mov
push
sbb
jb
cmp
fidivr
jl
mov
jmp
ds
dec
daa
shl
test
out
stos
mov
push
ret
enter
not
(bad)
or
push
xchg
mov
int3
repz
mov
mov
fbstp
movs
inc
std
jae
push
add
sub
mov
push
popf
or
push
push
dec
cmc
add
pop
pop
repnz
div
push
mov
sbb
(bad)
loop
adc
sub
adc
mov
jno
mov
dec
call
pop
js
out
mov
or
jl
sub
push
or
inc
mov
std
loop
jbe
(bad)
jo
ret
sbb
nop
mov
jae
in
popf
add
and
fidivr
add
cmp
pop
xor
ficomp
add
das
add
(bad)
in
push
jo
ds
or
in
mov
and
aad
ficomp
aam
or
test
adc
call
mov
lock
jne
ret
inc
push
pop
scas
aam
mov
rol
fldenv
rcl
in
inc
mov
sbb
push
and
push
out
je
mov
fs
(bad)
ins
nop
dec
cmc
push
cld
fs
lds
das
jge
add
xor
imul
cmp
(bad)
and
mov
sbb
add
frstor
not
xchg
loopne
sub
jecxz
and
(bad)
pop
mov
addr16
pop
mov
inc
pusha
js
hlt
mov
loope
sub
daa
fs
retf
dec
jmp
fadd
sbb
add
xor
out
fist
loopne
fcmovb
jle
sub
jne
cwde
es
jg
lods
jo
das
retf
into
ret
mov
dec
push
fwait
rol
movs
int3
cmp
ret
or
jl
out
loope
mov
je
xchg
pop
hlt
or
sbb
popf
int
lods
mov
cmp
imul
push
xchg
mov
mov
mov
fs
cwde
jae
adc
sub
jae
sbb
sahf
mov
(bad)
js
(bad)
mov
mov
or
clc
and
push
pop
mov
and
loopne
fcomp
xor
push
add
ret
jb
add
hlt
pop
fdiv
popf
cwde
inc
sub
fist
cmps
mov
jmp
adc
add
xchg
sbb
out
push
dec
jb
inc
outs
mov
repnz
addr16
and
sub
mov
scas
xchg
adc
sti
setb
push
adc
mov
cmp
and
dec
or
pop
xor
sub
fild
fisttp
push
cdq
or
inc
push
jge
ins
inc
in
mov
jae
or
(bad)
fadd
test
xor
inc
jns
dec
mov
sbb
or
push
add
ins
sub
add
or
sbb
cmp
test
cld
in
xchg
mov
ja
xor
rol
outs
hlt
sbb
pop
shl
mov
add
sar
ror
push
or
xor
mov
xchg
(bad)
xchg
mov
sub
and
xlat
test
fdivr
and
icebp
push
nop
js
and
xchg
in
and
jl
adc
in
xchg
sub
out
sub
dec
scas
enter
sub
push
cmp
and
xor
xor
(bad)
test
and
and
mov
aam
xchg
push
jecxz
mov
xchg
mov
int3
or
inc
jge
pop
dec
retf
mov
pop
out
fstp
cmp
pop
mov
or
stos
ror
(bad)
imul
sub
stos
gs
scas
loopne
mov
xchg
cmp
adc
add
pmulhuw
int
mov
js
arpl
cmp
pop
out
jecxz
xchg
xchg
imul
scas
mov
jno
nop
add
mov
adc
addr16
push
mov
lds
lods
xchg
add
fsub
mov
stos
inc
sub
stos
xchg
push
ret
in
sbb
ret
aam
jge
cmp
(bad)
fnstsw
test
not
dec
inc
push
repnz
loop
dec
xor
fldenv
and
mov
int3
and
pop
jne
out
aaa
jo
mov
dec
(bad)
loopne
push
in
add
adc
push
movs
push
in
sbb
push
nop
pop
lock
or
jmp
sub
pop
retf
mov
cmp
cmp
pusha
mov
or
mov
adc
add
mov
xchg
add
mov
or
sub
sub
scas
iret
test
push
pop
int3
and
push
mov
xor
pushf
jnp
push
mov
sub
ds
push
mov
sub
sub
aam
and
adc
jle
add
sbb
aas
std
test
cmc
faddp
jb
ins
movs
jmp
loopne
mov
bound
add
add
pop
mov
jbe
js
sbb
xchg
inc
outs
pop
mov
pushf
jecxz
cwde
xchg
mov
fstp
jp
adc
push
out
add
cmp
sti
test
jmp
mov
in
cmp
push
sti
div
repz
adc
pop
pushf
mov
fdiv
call
sbb
int3
and
push
inc
sub
pop
popf
ror
or
jge
sti
imul
add
call
xchg
inc
add
sbb
push
dec
ret
ins
pop
loopne
(bad)
in
jle
xchg
in
fild
mov
dec
xchg
push
xchg
pop
ficom
int
out
(bad)
out
inc
rcr
repz
xchg
push
xchg
pop
(bad)
leave
xor
retf
or
add
xor
or
cld
mov
pop
pop
mov
add
sbb
push
out
jge
push
xchg
push
or
imul
add
shr
jb
cmp
pop
test
(bad)
or
je
dec
(bad)
sub
sbb
ins
test
pop
out
int
add
and
jne
in
pop
ins
push
pop
jno
aad
inc
jno
push
add
iret
icebp
add
daa
add
das
push
inc
(bad)
mov
cdq
mov
push
jmp
test
adc
or
loopne
iret
addr16
cmc
rcr
jg
push
mov
push
pushw
adc
jmp
xchg
repnz
push
cs
cs
(bad)
mov
not
test
xchg
into
mov
adc
popf
dec
pop
aaa
inc
jecxz
xchg
jnp
cs
or
repz
mov
add
mov
xlat
push
mov
test
inc
outs
and
jae
out
cmp
jl
jg
xor
sahf
mov
mov
ficomp
jl
push
mov
fadd
mov
jmp
ror
loopne
cmp
xor
in
sahf
mov
aam
gs
fwait
jno
pop
sbb
cmc
jbe
shl
aad
adc
mov
jns
adc
test
lods
ins
push
in
xchg
scas
jb
lea
adc
mov
pop
je
out
xor
mov
(bad)
hlt
xor
les
pop
stc
mov
pop
xchg
call
imul
xchg
stos
cdq
adc
add
mov
in
mov
cli
xor
(bad)
in
rol
cmp
pop
scas
(bad)
(bad)
out
ret
mov
div
xor
xchg
shl
add
cmp
ss
inc
adc
ss
mov
pop
xor
es
mov
test
cmc
(bad)
and
daa
push
sbb
test
popa
ror
ins
jecxz
sbb
int3
add
add
mov
inc
stos
jmp
or
in
inc
jnp
add
xchg
test
xor
pushf
jno
add
sbb
dec
fcomi
xor
sbb
(bad)
(bad)
cld
adc
mov
inc
or
lods
std
or
sub
fprem1
sar
retf
lahf
ss
les
mov
(bad)
fisubr
push
sar
inc
xor
jb
js
js
sbb
cmp
iret
ins
movs
inc
ror
sti
neg
sub
in
mov
ja
popa
pop
push
dec
repz
lods
push
jmp
cmc
or
push
inc
jbe
jae
retf
aaa
retf
mov
test
jns
cmp
fld
(bad)
dec
jl
sbb
sbb
mov
movs
push
inc
adc
bound
rol
mov
dec
mov
retf
push
xchg
(bad)
(bad)
out
lahf
pop
mov
ficom
test
in
sbb
ja
mov
fmul
fidiv
aad
sbb
mov
jnp
push
mov
les
je
xchg
adc
lahf
inc
xlat
jo
inc
fnstcw
movs
or
lods
(bad)
or
es
rcr
loope
lock
jnp
pushf
cs
pop
jo
push
cs
push
mov
fiadd
ficom
push
sti
push
sbb
jno
pop
(bad)
xor
out
mov
push
es
clc
leave
add
aad
arpl
sub
push
mov
inc
test
mov
mov
mov
xchg
stc
(bad)
mov
cmp
stos
xor
adc
loopne
jecxz
inc
mov
or
cli
inc
jmp
push
(bad)
mov
stc
fisubr
repz
cli
mov
dec
jecxz
clc
sbb
mov
loope
dec
scas
mov
std
cli
out
cmp
jbe
dec
and
lock
xbegin
jl
call
adc
mov
div
movs
lock
inc
push
dec
cmp
adc
inc
call
mov
cmp
jcxz
lea
push
ret
or
and
adc
(bad)
sti
mov
jbe
jns
jp
idiv
cmp
inc
push
(bad)
xchg
fadd
loope
rcl
mov
test
add
test
and
or
mov
inc
sbb
movs
xor
out
xchg
cwde
pop
popa
fs
iret
inc
ret
gs
outs
sub
xchg
mov
inc
pop
and
or
ins
sbb
inc
adc
mov
cmp
sub
inc
ret
in
mov
or
xchg
pop
(bad)
popa
pop
cmp
sti
clc
dec
je
pop
ins
cmp
scas
(bad)
hlt
fnsave
mov
jns
sbb
xchg
jg
fld
test
jmp
div
ins
cs
aad
sahf
call
or
js
fsubr
int
les
aas
ds
xlat
je
mov
fisub
cmc
(bad)
sahf
out
sub
loop
sahf
bound
dec
jo
outs
pop
pushf
jae
lock
push
pop
test
cmp
fisttp
movs
sbb
xchg
ror
xor
(bad)
cmp
mov
hlt
mov
and
sub
ret
push
das
mov
xchg
jns
std
mov
arpl
jl
cli
stc
sub
adc
gs
outs
push
data16
(bad)
pop
out
popa
xchg
mov
mov
jecxz
rcr
xor
and
pop
cmp
outs
sahf
xor
push
mov
push
inc
pop
repz
cmp
rol
mov
jmp
ror
jl
test
or
push
rcl
pop
repz
mov
and
inc
sbb
add
inc
inc
pusha
aam
ins
imul
mov
into
popa
leave
adc
or
out
aam
push
scas
inc
xor
dec
cmps
adc
iret
mov
(bad)
in
test
ror
xor
xchg
inc
test
hlt
jae
cmp
sbb
ss
xor
adc
jne
es
add
pop
and
ins
pop
lock
sub
les
ja
cdq
loopne
mov
idiv
test
cmp
xor
into
aad
call
scas
loopne
sub
pop
cmp
adc
mov
cmc
daa
or
jno
inc
adc
add
lds
aas
out
out
sbb
sbb
ret
jb
addr16
cmp
mov
das
je
and
enter
jbe
ret
mov
enter
dec
ficom
cdq
xor
xor
jmp
out
hlt
xchg
pop
aaa
pusha
mov
fistp
int3
bound
cmp
dec
add
(bad)
dec
clc
jmp
ret
into
out
cwde
adc
pop
mov
pop
enter
inc
addr16
int
sbb
pop
nop
jmp
fwait
mov
inc
push
call
dec
hlt
movs
inc
push
adc
mov
repz
icebp
push
pop
or
xchg
fist
sbb
xlat
add
mov
in
cld
xchg
mov
iret
adc
mov
cs
inc
push
pop
mov
pop
jmp
and
adc
and
xor
daa
(bad)
sub
iret
xor
pop
xchg
jmp
mov
and
sar
xor
mov
push
dec
dec
mov
xlat
pop
cmps
push
ret
lds
test
sbb
iret
lods
dec
std
mov
xor
sub
pop
or
cmp
mov
sub
mov
pop
cmp
inc
shr
aad
in
retf
movs
mov
mov
xor
add
out
adc
fstp
mov
mov
mov
popf
bound
rep
mov
cdq
and
retf
out
push
mov
mov
xchg
cmp
(bad)
movs
and
pop
or
test
xchg
push
addr16
fstp
sub
hlt
adc
jle
sti
mov
and
inc
data16
test
add
pop
bound
std
xor
jne
std
(bad)
data16
mov
cli
std
pop
jnp
mov
jecxz
cmp
adc
shr
or
jo
xchg
sbb
dec
cmc
add
out
out
or
jnp
cld
push
retf
push
je
ins
cmp
pop
sahf
or
jne
(bad)
stos
cmp
jl
jmp
cmps
push
retf
pushf
es
add
xchg
and
loope
jno
mov
lock
scas
outs
push
loope
xor
ss
sub
or
call
or
pop
xchg
lds
xchg
nop
mov
mov
jae
mov
out
fidiv
push
add
fcom
sti
rcl
xchg
pop
int3
push
stc
pop
(bad)
out
push
cmp
test
(bad)
aas
sbb
jge
xor
and
ficom
jno
test
mov
adc
lock
addr16
dec
fbld
sub
mov
pusha
ins
scas
mov
out
stos
jmp
sub
imul
es
icebp
retf
into
and
mov
test
and
neg
mov
adc
pop
jle
jne
xor
adc
jne
pop
test
rcl
adc
(bad)
dec
cmp
test
pusha
xchg
in
mov
adc
push
hlt
mov
dec
mov
mov
out
sbb
movs
pop
fnsave
sbb
cli
and
retf
dec
cmp
pop
xchg
inc
mov
lods
ret
test
or
pop
fild
dec
scas
inc
stos
into
das
jmp
push
jmp
lahf
or
mov
mov
movs
pop
es
cmps
retf
push
jb
mov
shl
out
mov
and
adc
jbe
and
aaa
dec
cmp
test
add
aad
pop
sub
mov
inc
xchg
or
pop
dec
xchg
bound
jnp
shl
sub
mov
jae
mov
add
xchg
push
ret
add
jmp
jecxz
(bad)
ss
test
out
inc
jae
and
cmp
xchg
popf
sub
movs
push
jge
int3
cwde
xor
mov
add
or
mov
cmc
or
pop
inc
das
mov
dec
aas
pop
xor
add
ja
(bad)
(bad)
inc
xlat
cmps
dec
ret
stos
mov
add
or
mov
clc
jae
mov
shl
sbb
lods
hlt
push
xchg
cmc
(bad)
into
jo
mov
pop
dec
jl
pop
or
mov
shl
jmp
dec
pop
cli
add
mov
fild
rol
xchg
xchg
push
inc
loopne
xor
je
aad
test
mov
sahf
clc
or
pop
fcom
pop
popa
outs
call
mov
repnz
scas
push
cmp
fld
add
mov
pop
icebp
pop
outs
xchg
push
rol
cmps
mov
mov
fdivr
mov
cmp
arpl
je
adc
lea
aam
fs
addr16
es
lods
fldcw
pop
mov
lahf
loopne
xor
movs
retf
ss
cmp
shl
aad
add
jne
and
outs
loopne
inc
cmp
je
mov
inc
jmp
pop
ret
sbb
ins
stos
mov
test
dec
jo
in
xchg
addr16
leave
sub
dec
pop
jbe
dec
jg
cmps
inc
lds
push
fild
push
int
mov
ror
sub
pop
les
and
push
retf
adc
cmp
fld
aam
in
and
add
or
addr16
mov
mov
das
mov
adc
fwait
push
mov
xchg
in
jbe
add
mov
or
out
cli
dec
int3
pusha
pop
lock
data16
mov
mov
sub
sbb
jecxz
scas
outs
xchg
ret
scas
neg
sbb
int3
popa
push
sub
xlat
jecxz
jmp
fisttp
xor
call
push
sub
push
jno
mov
loope
ds
ret
xchg
cwde
popa
pop
cmps
mov
inc
enter
push
xchg
daa
jge
ja
fbld
shl
test
push
ror
ror
push
stos
int3
dec
sbb
mov
sbb
pop
or
in
mov
xor
pop
jecxz
adc
jo
xchg
jns
mov
jo
or
lods
fmulp
sub
cs
jmp
outs
stos
stos
movs
bound
mov
and
xor
ret
mov
fwait
add
outs
(bad)
fsincos
dec
and
mov
sbb
jl
in
mov
rcl
outs
sub
mov
icebp
push
mov
aad
mov
stos
or
sub
retf
icebp
dec
push
push
lock
daa
push
cmc
test
xor
adc
and
ficomp
inc
in
sbb
arpl
cmp
(bad)
adc
add
sub
jno
sti
imul
xchg
imul
popf
into
pop
dec
mov
ret
loopne
mul
div
in
int3
push
aaa
push
je
cwde
push
dec
es
cmp
bound
cwde
mov
xchg
into
outs
mov
lds
push
test
arpl
out
push
loopne
test
sar
cmp
xchg
cli
adc
cmps
aam
jmp
adc
sub
je
dec
std
fisttp
fwait
pushf
mov
sar
outs
gs
outs
sbb
xchg
push
jo
imul
and
or
adc
push
sbb
sub
imul
outs
pop
adc
mov
adc
xchg
hlt
ins
das
inc
jmp
xchg
repz
imul
cmps
xchg
push
pop
or
cld
xor
loop
fcomp
and
mov
test
jns
dec
jo
stos
or
cli
fidiv
cmp
mov
sub
loop
or
(bad)
out
mov
repnz
xchg
in
push
aad
data16
aaa
cmc
fsub
mov
and
mov
popf
push
jae
xor
int3
sbb
(bad)
scas
arpl
mov
mov
cmp
mov
outs
stos
push
std
or
mov
pop
cmp
out
leave
or
dec
push
aas
xor
lock
daa
cld
in
jno
xchg
lods
adc
pop
test
xchg
ror
and
neg
mov
adc
cmp
outs
retf
movs
ret
cwde
xor
or
iret
jae
dec
movs
jge
jno
mov
xchg
fucom
scas
pushf
mov
pop
gs
xor
sub
xchg
add
addr16
repz
or
jne
daa
retf
add
int
mov
sub
adc
jge
jmp
(bad)
xor
js
push
jnp
jge
dec
daa
test
ja
add
push
push
push
push
(bad)
and
xor
pop
or
xor
fadd
and
push
mov
mov
xchg
mov
sar
(bad)
stc
xor
leave
push
pusha
outs
push
add
mov
or
out
and
xchg
lods
and
push
in
dec
adc
add
sbb
mov
xor
out
dec
jns
jae
mov
xchg
mov
push
(bad)
xlat
shl
jle
stos
cld
in
scas
in
(bad)
jns
stos
jp
repz
mov
enter
jg
rol
imul
adc
mov
or
or
mov
ja
adc
mov
dec
adc
cmp
mov
lock
test
fwait
lahf
xchg
mov
xor
je
dec
nop
cwde
and
pop
xchg
mov
adc
cmp
jnp
repz
push
lea
dec
data16
mov
or
arpl
lahf
cli
loope
push
test
dec
inc
or
mov
dec
mov
cmps
push
leave
aas
push
test
jmp
mov
sub
jecxz
push
lods
int3
jmp
icebp
call
push
jnp
cld
js
test
pop
or
cmp
adc
pop
mov
inc
add
push
sub
xchg
jecxz
aam
clc
mov
outs
mov
xchg
jnp
into
iret
ja
call
fcmovu
or
mov
call
push
dec
xchg
pop
stc
jge
mov
mov
mov
xor
push
mov
cmps
cmps
jmp
mov
sub
add
lahf
in
pop
push
in
dec
ret
test
mov
ror
out
mov
adc
scas
sbb
aaa
mul
sub
pop
out
outs
mov
outs
mov
mov
test
out
add
push
repnz
sti
mov
push
mov
cmp
mov
sub
ror
add
inc
(bad)
fdivr
cmp
aas
mov
jmp
push
mov
inc
xchg
daa
push
ret
xchg
xchg
imul
fld
(bad)
repz
xchg
push
sbb
leave
in
mov
js
nop
push
mov
sub
xor
arpl
mov
inc
mul
sub
in
jae
and
jb
adc
cmp
lods
dec
and
int3
lds
and
mov
mov
stos
movs
(bad)
jl
jbe
or
int3
out
sbb
jle
arpl
add
test
pop
sub
cmp
mov
sbb
movs
data16
mov
out
(bad)
std
jo
aad
addr16
xchg
cmp
pop
mov
sub
inc
inc
and
(bad)
nop
mov
setae
nop
fadd
lds
rcr
pop
arpl
xlat
iret
sub
pop
jecxz
inc
push
fs
or
sub
xor
push
(bad)
call
lods
cmp
sub
mov
js
pusha
pop
xlat
jge
hlt
xlat
sbb
icebp
xor
sub
in
cmp
pop
ds
stos
inc
dec
dec
pop
adc
sub
push
add
shl
push
pop
mov
adc
or
push
push
lea
mov
dec
outs
stos
imul
bound
add
fdiv
jp
jecxz
sbb
mov
sar
add
push
sahf
test
ret
popa
xor
call
and
mov
push
lods
dec
jno
mov
cmp
mov
pop
jle
mov
mov
in
ja
hlt
movs
cmp
mov
fnstcw
jmp
loop
je
out
lock
jmp
sbb
addr16
mov
or
xchg
nop
adc
loop
push
jmp
inc
ret
add
adc
stos
das
push
push
scas
icebp
rcr
mov
test
xor
retf
dec
xor
dec
pop
adc
cmps
cmc
dec
pop
not
lahf
bound
(bad)
jmp
xor
stos
loope
icebp
js
mov
fiadd
pop
xchg
jp
or
pop
mov
sbb
lock
push
(bad)
sbb
push
mov
(bad)
pop
inc
shr
push
jmp
ret
sub
xchg
mov
mov
retf
in
cmp
(bad)
dec
paddq
xchg
inc
push
adc
xchg
into
movs
hlt
fidiv
mov
add
push
push
jecxz
mov
fnstenv
repz
mov
cld
dec
pop
shr
loop
ficomp
fstp
xchg
pop
and
imul
cli
xchg
outs
out
sbb
mov
add
push
xchg
adc
and
int
mov
out
stos
pusha
stc
adc
shl
sub
outs
je
pop
mov
out
loope
add
inc
das
retf
aad
fidivr
xchg
cmp
hlt
shl
fwait
bound
adc
add
pushf
dec
add
mov
mov
and
jl
lock
jns
in
lock
sbb
leave
call
push
xor
and
xlat
pusha
call
popf
(bad)
gs
out
and
mov
out
sub
jns
(bad)
jl
bound
mov
movs
jns
dec
(bad)
jle
dec
repz
push
mov
loopne
lods
repz
xor
and
inc
std
js
pop
jnp
sub
push
nop
je
div
retf
test
push
mov
dec
ret
dec
xor
out
jle
adc
in
stos
ret
mov
out
xchg
fistp
in
lahf
inc
sbb
xor
dec
sbb
bnd
aas
pop
pop
jg
inc
xchg
jg
jecxz
or
rcr
inc
popa
into
aad
mov
movs
fwait
mov
loop
dec
sbb
int3
pop
retf
mov
je
xor
test
push
pop
leave
(bad)
mov
stos
push
mov
jno
mov
ror
mov
jge
les
idiv
cmp
adc
fst
push
loop
ds
cmp
cmp
imul
pusha
push
clc
jno
sub
in
fwait
or
mov
mov
lds
in
in
push
in
sub
ror
and
pop
dec
mov
and
ins
minps
aad
iret
cmp
dec
sbb
clc
int3
lds
lahf
mov
leave
jb
aad
sbb
bound
fld
loopne
jne
fist
in
aam
daa
push
inc
mov
je
dec
sahf
lods
pop
jge
scas
adc
ffreep
or
mov
ror
test
ret
out
inc
dec
loop
and
dec
hlt
push
mov
cmc
in
add
cmc
sub
mov
lds
mov
fistp
stc
movs
jbe
pop
and
push
adc
push
sub
inc
xor
shl
out
mov
jb
js
pop
pop
pop
add
and
jne
das
std
fmul
pushf
out
in
xor
push
movs
imul
cdq
leave
inc
jmp
lods
popf
test
and
and
mov
ja
push
pop
lds
gs
mov
lock
add
and
imul
loop
push
outs
(bad)
pop
mov
out
fisttp
lahf
scas
mov
fucomip
movs
mov
ds
movs
cmps
mov
add
ret
stos
clc
out
jnp
dec
inc
adc
pushf
push
mov
pop
rol
mov
inc
mov
fild
jb
fcmovnbe
loop
cmps
xchg
stos
jp
fbld
adc
mov
and
lahf
pop
xchg
push
inc
daa
cmp
xchg
ror
push
movaps
inc
pop
fucomp
inc
jecxz
ror
fidiv
repz
test
xor
pusha
mov
sbb
jbe
lea
imul
daa
pop
or
inc
(bad)
(bad)
popf
and
mov
outs
fcom
jl
leave
sbb
push
inc
dec
mov
loope
xor
stos
movs
jmp
adc
or
(bad)
inc
push
pop
inc
xor
push
mov
call
gs
lock
sub
aaa
in
loopne
nop
or
push
dec
jb
cmp
jns
or
jmp
into
(bad)
nop
and
or
sub
fwait
or
lahf
sbb
pop
imul
fidiv
ins
adc
and
sbb
pop
sti
dec
inc
cmc
sbb
addr16
je
inc
fiadd
fimul
ins
es
cmp
sbb
cli
sbb
pushf
jnp
cmp
in
mov
bound
and
inc
or
cmp
adc
out
mov
mov
gs
(bad)
pop
cmp
fnstcw
inc
jo
jne
sbb
xor
push
popa
mov
test
in
(bad)
push
vmwrite
and
idiv
dec
lea
enter
addr16
sub
or
ds
fist
pop
jnp
fwait
bound
push
sar
push
ins
sbb
mov
jle
clc
scas
push
rcr
ins
inc
or
xor
pop
xchg
push
inc
and
sub
jo
add
dec
les
adc
jmp
addr16
xor
cwde
in
into
cmp
mov
fisubr
imul
lods
or
mov
inc
fwait
(bad)
cmp
fsub
fwait
test
mov
call
fld
sub
sub
and
pop
cmps
mov
shl
dec
push
xor
pop
xor
lods
xchg
ret
mov
cmp
repnz
cmp
scas
push
aaa
pop
clc
cmp
jns
push
pop
mov
daa
xchg
lds
or
popf
mov
inc
sbb
jns
in
mov
popa
sub
pop
inc
sbb
js
cwde
mov
inc
sub
push
icebp
jo
and
inc
shr
cmc
push
shl
add
dec
mov
inc
mov
aad
jle
xchg
out
div
jne
lods
mov
jmp
mul
push
jecxz
jg
jp
push
adc
bound
bswap
push
sub
jne
pop
fisttp
or
pop
cmc
test
in
sbb
test
std
retf
pop
shr
pop
vpshufd
jb
jnp
xor
std
fild
test
push
das
mov
out
xchg
or
adc
mov
sahf
mov
cmp
lods
movs
push
or
pop
call
xor
mov
clc
loope
sahf
add
pop
daa
scas
clc
mov
sbb
adc
mov
imul
bt
mov
sar
repnz
mov
mov
or
aas
lock
cmps
inc
test
or
and
push
or
sub
xor
cmp
ins
pop
shufps
icebp
sti
sub
test
pop
push
mov
imul
xor
inc
cmps
movs
and
jecxz
cs
xchg
jns
ds
add
mov
test
mov
repnz
mov
mov
cwde
push
jb
pop
pop
inc
and
sub
dec
cld
rcr
mov
mov
outs
call
inc
jmp
out
aas
fistp
mov
aam
xor
(bad)
or
sbb
ret
int
cmp
add
ds
push
call
or
push
call
sub
mov
in
jo
gs
sbb
add
cs
cmp
jne
test
in
cmp
loop
ss
int3
(bad)
fstp
iret
fisubr
mov
out
hlt
mov
popa
add
cmp
rol
fidivr
mov
cmps
inc
add
dec
lods
aaa
aam
out
out
push
xor
cmp
mov
xchg
cmp
mov
das
jecxz
sbb
xchg
enter
xor
mov
jp
cs
push
dec
or
sbb
xchg
(bad)
fwait
xor
add
sbb
adc
cmp
fs
out
jbe
or
cli
ja
mov
dec
mov
arpl
cmps
jge
push
cli
mov
xchg
jo
xor
aad
push
dec
add
add
jns
ror
adc
sub
adc
adc
xchg
jge
or
mov
mov
js
xor
mov
ret
(bad)
jno
jae
push
jmp
outs
sub
or
lahf
jge
ss
inc
inc
pmaxsw
mov
sub
pandn
jecxz
mov
test
das
cmp
in
xchg
in
inc
push
push
xor
js
and
cmc
test
js
fiadd
cli
mov
popa
ror
or
retf
out
fs
(bad)
int3
stc
fldcw
jmp
aad
jge
loope
xchg
xchg
imul
mov
(bad)
push
fcmovu
mov
ins
jne
xchg
stc
sub
dec
mov
sbb
mov
in
push
jae
xchg
xchg
sbb
cdq
xchg
mov
shl
in
(bad)
js
loopne
jmp
sbb
mov
sub
and
retf
ret
stos
(bad)
cmp
pop
xlat
sub
fnstsw
lahf
mov
cmps
jge
sub
ss
cmps
call
push
cli
gs
jae
inc
xor
test
popa
das
(bad)
jmp
sub
std
ja
out
imul
xor
aas
fisttp
jo
jns
cmp
xor
loopne
lock
and
mov
mov
sub
cdq
push
rcl
push
mov
or
jge
arpl
rcr
repnz
stos
cs
xor
push
bound
outs
imul
sub
mov
jbe
je
mov
(bad)
jle
and
inc
push
sub
fidivr
(bad)
es
mov
adc
cmp
enter
(bad)
push
adc
(bad)
push
jns
fs
xlat
test
inc
pop
add
pop
shl
je
hlt
sub
shl
pop
aam
pop
mov
xchg
ror
sar
and
xchg
push
sub
add
clc
xor
popf
mov
xchg
in
or
aaa
sub
jmp
pmaddwd
inc
xor
xchg
sub
xchg
xor
mov
sbb
pop
call
inc
mov
sub
ds
bound
test
add
or
mov
arpl
mov
cmp
fiadd
dec
fbld
fsub
imul
cdq
jmp
jno
mov
mov
dec
sub
mov
push
call
xor
xchg
push
pusha
mov
test
(bad)
rol
adc
es
mov
test
sbb
add
fcomp
lahf
jmp
(bad)
sbb
inc
lods
dec
mov
mov
leave
mov
mov
and
inc
sahf
or
xlat
push
push
push
mul
shr
in
xchg
clc
dec
jecxz
cli
rol
xor
popa
bound
loop
add
jo
add
pushf
mov
jge
xor
adc
cmp
imul
nop
es
adc
or
jge
xchg
iret
sbb
test
fucom
pop
mov
cmp
add
cmp
xchg
gs
mov
cli
std
in
fsubr
add
fisub
ret
adc
mov
les
xchg
dec
cdq
adc
and
(bad)
fwait
mul
out
jbe
jbe
dec
jbe
adc
bound
mov
nop
daa
push
ja
out
mov
clc
or
outs
dec
inc
neg
mov
rol
push
cbw
or
jecxz
call
ror
dec
sbb
and
neg
hlt
fs
lods
lock
dec
test
mov
xor
inc
outs
aam
cmp
mov
ret
or
dec
mov
pop
inc
retf
lock
xlat
test
sub
pop
push
and
xchg
(bad)
mov
daa
scas
movs
dec
pop
shr
mov
mov
les
push
loop
xchg
lods
test
shr
cmp
sbb
in
mov
mov
push
ffree
out
call
loope
dec
into
add
inc
jp
cwde
inc
(bad)
scas
or
lods
ins
jmp
in
add
shl
(bad)
std
test
cmp
jmp
push
cmps
popf
xor
jge
call
(bad)
inc
gs
pop
pop
push
dec
out
dec
adc
movlps
js
xor
pop
mov
cmp
scas
in
pop
icebp
or
hlt
imul
jnp
pop
add
pushf
pop
mov
push
xor
dec
aaa
or
pop
push
retf
les
and
stc
add
add
adc
movs
xchg
or
xor
repnz
sbb
adc
adc
push
jae
dec
sbb
fmul
clc
push
or
xor
jmp
inc
push
mov
outs
outs
test
popa
cmps
mov
inc
repnz
jnp
jnp
adc
jbe
(bad)
cld
cmc
or
das
arpl
in
push
pop
out
bound
jbe
mov
fisub
xor
out
jne
dec
xor
push
fsub
add
jns
adc
je
mov
enter
and
clc
cmp
cs
leave
fwait
add
inc
xchg
stos
and
inc
inc
(bad)
hlt
jmp
inc
sub
retf
stos
dec
push
or
not
repz
in
cmp
inc
dec
lds
inc
lods
push
(bad)
aad
and
sbb
mov
cwde
add
aad
call
xor
fist
addr16
fwait
fs
xor
stos
add
mov
repnz
scas
lds
and
in
stc
scas
and
add
dec
enter
es
lock
bound
daa
jo
mov
jo
dec
popa
push
mov
outs
xchg
lods
cmp
ret
lods
pop
test
mov
mov
push
test
retf
add
sub
push
and
test
or
lahf
mov
outs
jno
inc
cdq
adc
jae
cs
push
sti
(bad)
jbe
mov
push
jnp
adc
pop
arpl
aam
bound
jge
pusha
dec
fadd
dec
jno
sti
xchg
mov
jmp
addr16
es
nop
fnstsw
mov
jns
push
pushf
mov
xchg
clc
in
mov
ins
fwait
sbb
cmp
mov
pop
stos
dec
aas
inc
enter
jecxz
test
arpl
push
data16
in
pop
int
test
dec
jl
mov
(bad)
aaa
mov
ins
pop
adc
repnz
mov
in
and
aad
rcl
aam
rcr
cld
xor
jle
clc
mov
jg
sub
(bad)
leave
xor
xor
mov
pop
mov
out
fisubr
ret
stc
outs
mov
sbb
lds
pmullw
js
mov
or
pusha
jecxz
or
and
shr
daa
test
pop
and
dec
or
push
or
dec
fs
sub
aaa
cmp
test
add
push
adc
sub
mov
scas
neg
xor
xor
and
push
loope
loope
call
retf
add
jb
iret
inc
ret
pop
dec
les
jl
xchg
int
sahf
jae
push
mov
enter
rep
fnstenv
dec
jo
mov
xor
retf
aam
mov
push
and
fisttp
lea
popf
ins
cs
inc
inc
or
xor
push
pop
fistp
jg
dec
arpl
std
mov
cmp
cmp
adc
mov
mov
not
jmp
xchg
fldcw
sbb
push
(bad)
adc
mul
sar
push
dec
xor
inc
inc
mov
pop
dec
arpl
(bad)
fwait
repnz
mov
pop
or
and
and
xchg
and
lahf
mov
ss
in
(bad)
cmp
test
push
(bad)
fmul
sbb
lahf
xchg
add
jg
fwait
daa
int
pop
mov
fisttp
shr
test
adc
inc
and
in
imul
jmp
sbb
clc
dec
into
out
fisttp
mov
xor
sahf
(bad)
fsubr
dec
push
xlat
gs
stc
pop
neg
imul
retf
add
mov
(bad)
fnstsw
retf
les
pop
icebp
fstp
and
ins
jmp
adc
inc
jmp
cs
adc
call
cmp
xor
mov
fs
ja
addr16
fst
mov
inc
inc
push
(bad)
push
lods
push
clc
adc
xchg
push
push
cmps
adc
adc
pop
mov
mov
add
sahf
adc
fdivr
shr
std
mov
mov
(bad)
dec
shl
retf
and
jo
dec
aad
adc
and
mov
mov
stos
add
scas
sub
fiadd
std
and
jb
aad
movs
jo
xchg
sub
aaa
fadd
popf
xchg
jno
xchg
enter
icebp
lock
sbb
pop
loopne
nop
sbb
xchg
call
sbb
jb
jmp
or
xor
imul
aas
fdivr
pusha
imul
ins
and
cmp
in
movs
jge
pop
test
(bad)
test
xchg
cmps
fwait
adc
cmp
add
lods
mov
push
push
adc
sbb
cwde
es
mov
hlt
stc
rep
add
add
pushf
add
mov
mov
or
or
nop
add
fs
xchg
nop
in
loopne
xchg
in
jl
sub
mov
shl
mov
into
push
fadd
leave
inc
adc
inc
lods
pop
or
cdq
nop
call
addr16
repnz
fist
call
dec
inc
addr16
imul
stc
daa
sbb
jmp
push
retf
cmp
xor
(bad)
mov
enter
rcl
push
pop
xchg
mov
popa
in
mov
outs
adc
leave
jae
lds
mov
arpl
shl
fucom
scas
sbb
inc
daa
fbstp
loopne
(bad)
in
repz
mov
pop
(bad)
daa
jb
jecxz
in
or
inc
jl
xor
cli
dec
pop
data16
jo
mov
rcr
jg
loope
xchg
movs
mov
or
and
xchg
xchg
pop
cdq
push
out
fs
lock
xor
(bad)
pop
ret
outs
retf
sub
cmp
div
mov
add
(bad)
cmp
call
repz
arpl
pop
sub
sahf
xchg
call
inc
shl
sahf
push
int
inc
pop
ja
or
pop
retf
fucom
xchg
jle
pop
push
and
jle
les
imul
movs
clc
sbb
push
and
or
cmp
fnstcw
and
mov
add
xchg
and
cmc
iret
cmps
(bad)
loopne
hlt
jno
popa
jae
sub
and
shl
int3
aam
cmp
scas
sahf
into
dec
fcmovnu
ss
xchg
mov
push
into
imul
out
mov
push
ror
push
frstor
retf
mov
cmc
lea
cmc
mov
dec
aas
movs
dec
pop
mov
push
jmp
lods
and
js
xchg
rcl
xor
cdq
icebp
call
and
not
push
jmp
jmp
bound
add
or
cmp
movs
retf
xor
shl
inc
mov
pusha
das
xchg
push
nop
les
lahf
jae
in
push
xor
test
in
push
add
inc
adc
inc
inc
repz
test
jno
dec
enter
out
into
lock
inc
mov
imul
ficom
add
jae
cmp
pop
adc
push
stos
lds
stos
cmp
ficom
mov
pop
xchg
inc
int
lahf
or
out
es
mov
mov
adc
adc
inc
and
inc
or
mov
cdq
jo
cmp
int
add
mov
loope
pop
aaa
xchg
fsubrp
fstp
inc
lahf
std
aad
lahf
daa
or
lods
sbb
mul
fnstcw
shr
pop
pushf
int
mov
rcr
xor
neg
xchg
ds
imul
outs
jecxz
or
retf
leave
bound
stos
and
in
sub
aad
inc
fstp
jo
leave
add
cmp
in
sahf
cdq
dec
or
xor
mov
cmp
mov
in
je
neg
cmps
aaa
and
ss
shr
inc
cmp
jb
or
repnz
cmp
jp
inc
ret
jmp
xchg
inc
cwde
xor
mov
movups
call
cmp
test
aam
shr
in
imul
in
cmp
xor
and
mov
sti
mov
popa
sbb
out
adc
sahf
sbb
jge
or
xor
enter
cmps
ins
mov
scas
sub
xor
loopne
ins
mov
mov
dec
(bad)
daa
pop
(bad)
call
or
je
dec
add
sub
pusha
inc
out
test
fs
push
and
adc
cdq
ficom
xor
or
push
xor
bound
jmp
clc
and
cmp
jecxz
ds
push
cmp
cmp
xor
retf
fld
and
mov
movs
call
jecxz
add
sbb
test
push
pusha
lea
and
movs
in
test
xor
retf
(bad)
lahf
rol
pop
int3
add
lods
cmp
jg
out
adc
sar
push
mov
jns
jmp
out
pop
xchg
cmp
outs
xchg
sbb
jle
inc
aam
shr
repnz
imul
sti
outs
xor
mov
outs
cld
arpl
sub
aam
push
bound
dec
ja
ins
inc
mov
js
not
scas
mov
repnz
pop
neg
mov
je
lods
out
mov
call
cdq
daa
push
daa
dec
mov
sbb
sbb
xor
dec
enter
std
xchg
aad
push
cld
cmp
retf
data16
xchg
lods
push
or
pusha
shl
dec
sub
clc
imul
rol
popf
mov
cs
and
push
ret
push
test
cmp
mov
and
ss
xor
cli
arpl
xchg
pop
adc
pop
xor
imul
pop
push
sub
inc
sub
(bad)
test
(bad)
add
xor
or
retf
add
mov
je
imul
mov
push
test
mov
aaa
iret
sti
cli
push
cmp
movaps
in
mov
xchg
fcom
adc
mov
imul
outs
and
push
ins
fbld
mov
std
popf
xor
out
jmp
inc
(bad)
into
jl
sub
leave
sub
cmc
retf
out
xchg
push
lea
mov
ds
push
push
jno
movs
minps
xor
jns
shl
cmp
ret
retf
(bad)
mov
call
mov
jbe
mov
adc
sahf
ds
pop
iret
cli
loopne
cmp
jno
in
(bad)
nop
push
sti
xchg
push
jbe
in
ds
mov
iret
cmc
mov
sbb
pop
fimul
mov
xchg
sbb
ror
dec
inc
movs
scas
mov
out
(bad)
xor
jae
pop
inc
scas
push
ficom
bound
cmp
int3
pop
xor
inc
rcr
sub
(bad)
pop
or
movs
enter
cmp
and
ins
sbb
adc
push
ret
add
(bad)
adc
test
loope
sbb
or
mov
ds
push
js
repnz
or
xor
or
out
cmp
das
push
adc
pop
pop
rcl
ror
nop
dec
xchg
lahf
push
cmps
jge
retf
std
push
pop
add
bswap
jecxz
push
out
pop
xchg
add
push
pop
cmps
les
fsub
xor
mov
jmp
jae
ret
mov
jmp
cld
loop
rol
lea
lea
pop
dec
cmp
sub
pusha
pop
adc
mov
les
pop
xor
push
sbb
mov
adc
xlat
lock
mov
(bad)
and
fmul
and
mov
(bad)
mov
in
pop
not
pop
or
rol
ror
jg
out
imul
xor
call
clc
or
pop
fimul
cmp
fdiv
test
sti
cld
mov
push
in
xor
cmp
cmc
cmps
pop
jg
sub
sbb
jb
retf
(bad)
and
out
mov
dec
shl
xchg
addr16
add
(bad)
ret
and
enter
push
lods
and
sub
sti
mov
and
(bad)
xlat
in
cmp
out
jbe
clc
loopne
dec
sub
pop
out
shr
arpl
pop
xchg
out
dec
into
in
iret
(bad)
outs
stos
push
sbb
sub
mov
rol
mov
mov
xchg
mov
icebp
or
shr
pop
in
pop
cwde
inc
xlat
into
popa
push
pop
xchg
int3
or
push
xchg
std
(bad)
fcom
das
out
ret
pop
int
cmp
sahf
mov
out
push
loopne
aam
and
test
jne
xchg
mov
pop
adc
mov
or
mov
iret
imul
inc
in
xor
xchg
inc
int3
sub
push
mov
out
sub
sar
les
push
jg
cmp
in
fwait
retf
jae
mov
(bad)
psubd
xor
jno
pop
cmc
popf
xchg
jle
loope
aas
mov
cmp
fsave
test
std
repnz
inc
outs
push
aas
out
test
pop
cwde
mov
cmp
push
test
cld
out
(bad)
dec
dec
add
sbb
into
jnp
arpl
adc
stos
adc
test
push
sbb
cmp
cmp
xchg
jo
push
dec
xchg
dec
cld
mov
loop
push
popf
xchg
out
add
xlat
jecxz
push
(bad)
and
daa
test
jb
out
jmp
in
sub
push
dec
fwait
mov
mov
int3
add
and
and
retf
retf
jge
fnsave
xchg
int
repnz
dec
ret
sbb
stc
sbb
je
push
test
sbb
mov
or
jnp
inc
gs
sub
pop
or
jo
mov
xchg
mov
mov
jge
xlat
cmps
into
cmp
test
test
aad
popa
dec
jecxz
and
mov
mov
inc
mov
les
mov
je
jle
jbe
out
rdmsr
call
sar
retf
repz
add
fwait
out
cmp
push
not
arpl
jne
dec
rcl
dec
mov
push
sbb
icebp
imul
inc
jo
mov
(bad)
mov
arpl
test
ins
(bad)
es
pusha
push
repz
das
fsub
lods
or
nop
test
movs
mov
dec
les
and
sub
dec
hlt
inc
push
jmp
std
retf
jmp
stc
cmc
cmps
ret
popa
dec
jge
mov
imul
stc
dec
fadd
mov
dec
retf
sub
pop
jae
mov
pop
jmp
nop
sub
mov
nop
sub
test
sbb
iret
mov
mov
test
sbb
inc
out
hlt
jge
adc
test
dec
xor
pop
fisub
call
lods
retf
(bad)
dec
je
inc
dec
mov
inc
push
sub
(bad)
cs
outs
pop
cmp
pusha
mov
pusha
out
ds
push
inc
outs
repz
xchg
pusha
jmp
and
into
push
lock
push
adc
inc
cmps
clc
pop
loop
push
xlat
jl
inc
dec
add
sbb
add
das
push
xor
jmp
(bad)
dec
push
pop
add
sbb
shl
push
mov
test
push
(bad)
xchg
cmp
adc
popf
imul
or
mov
outs
fdiv
jnp
std
cmps
and
push
cmp
pop
push
mov
das
inc
xchg
mov
sub
je
enter
js
xlat
mov
jmp
popa
das
scas
pop
sub
mov
mov
les
mov
sub
subps
adc
cdq
mov
and
jl
or
retf
dec
mov
sahf
push
xor
pop
jl
(bad)
jg
loope
into
test
loop
bound
shl
inc
add
xchg
retf
dec
xchg
sbb
adc
cli
fidiv
js
jns
in
inc
lods
ja
mov
sub
fwait
push
outs
dec
and
fcmovnu
cmp
icebp
fld
push
shl
or
(bad)
or
inc
push
mov
jle
xor
sti
dec
inc
adc
or
daa
call
adc
mov
imul
push
test
xchg
int3
movs
inc
dec
aas
pusha
loop
test
cdq
iret
jbe
mov
dec
pop
dec
ins
dec
in
adc
in
and
aas
aaa
sti
sbb
ror
xchg
ss
mov
mov
jecxz
or
call
pop
push
xlat
inc
mov
jns
ja
loop
out
cli
scas
stc
mov
push
(bad)
arpl
sbb
test
xchg
shl
pop
inc
rcl
arpl
sbb
cmp
cmp
and
jae
jmp
sub
sbb
call
jb
in
push
sbb
dec
jno
or
adc
mov
arpl
add
sub
aas
adc
in
dec
test
cmps
lods
mov
ror
imul
xchg
imul
cld
shr
dec
mov
adc
cdq
jb
xchg
sub
mov
xor
xchg
adc
mov
sbb
in
and
sbb
ins
mov
mov
jnp
fiadd
pop
cli
xchg
push
js
ins
push
inc
in
fnsave
adc
cs
dec
test
jmp
sub
mov
inc
mov
neg
sar
xchg
sbb
shr
xor
mov
or
mov
lock
pop
jp
cli
aam
(bad)
jmp
sar
inc
scas
or
pop
push
dec
gs
mov
sar
cmc
not
fist
xor
jo
sub
neg
pop
outs
ret
xchg
pop
scas
adc
mov
movs
push
dec
js
in
mov
fwait
inc
and
shl
dec
sbb
(bad)
pop
pop
xor
cld
inc
ss
arpl
shr
xchg
cs
xchg
jnp
loopne
ds
cli
xchg
mov
or
dec
sub
daa
pop
dec
bnd
lock
add
sar
push
jbe
(bad)
sbb
stc
in
adc
ins
ja
mov
sahf
ins
push
out
pop
iret
push
fwait
xor
jo
xchg
push
fwait
test
adc
mov
fstp
fidivr
aam
and
lods
inc
sbb
enter
xchg
sahf
and
popa
jg
lods
(bad)
adc
mov
mov
push
pop
sti
xor
and
and
adc
faddp
dec
movs
out
adc
ror
push
int3
js
scas
popa
into
mov
or
inc
cmp
(bad)
xlat
push
mov
aam
pop
sub
icebp
mov
mov
ficomp
ror
mov
test
xor
pop
icebp
mov
ins
xchg
xor
pop
ret
or
push
xchg
pop
lea
push
jb
add
dec
popa
in
ret
ins
test
jecxz
mov
push
xchg
ror
mov
fcom
lock
(bad)
xlat
arpl
sti
popf
lods
cmp
out
cmps
loopne
cmp
icebp
dec
ss
(bad)
push
or
mov
cmps
mov
ss
xchg
add
ret
lea
mov
xchg
addr16
and
in
dec
xor
dec
movs
adc
cmp
mov
jmp
leave
mov
test
sub
fs
add
movs
loopne
jmp
(bad)
fst
repz
std
pop
dec
cmps
jb
pop
dec
pop
out
loop
fldcw
jno
xchg
loopne
push
lea
cmpps
inc
pop
fstp
enter
jno
rol
movs
mov
xor
jnp
mov
pop
sahf
adc
mov
clc
pushf
adc
popf
fnsave
(bad)
idiv
push
loopne
loopne
das
pop
mov
scas
mov
sti
xor
mov
nop
in
test
mov
sahf
push
shl
movlps
imul
cmp
push
scas
or
mov
pop
clc
and
jae
push
test
aaa
mov
stc
dec
int
mov
add
xor
adc
sub
scas
add
iret
lds
ret
inc
in
mov
out
imul
mov
mov
stc
popf
cmp
xor
and
jl
mov
pop
outs
dec
stos
xor
mov
fadd
or
loop
or
xchg
mov
cmp
pop
lea
pop
and
jmp
xor
(bad)
scas
xlat
dec
cmovno
add
fnstsw
sub
add
pop
test
push
cmp
or
int
push
mov
sub
sbb
jns
and
mov
shl
mov
xor
jo
pop
xchg
test
lea
clc
xor
sub
pop
fistp
and
cld
jle
movs
adc
(bad)
into
mov
push
jge
dec
lds
sbb
cdq
sub
jbe
push
and
dec
push
fwait
jae
bound
pop
pop
xchg
je
test
daa
push
cmp
in
push
jns
pop
out
rcl
call
sbb
push
out
in
mov
les
pop
push
loopne
sbb
pushf
pop
mov
pop
mov
push
int
mov
cmp
cld
push
mov
mov
(bad)
(bad)
mov
push
call
je
sub
clc
cmp
jecxz
std
scas
mov
div
in
js
jns
test
jmp
cld
scas
cmp
sahf
(bad)
cs
stos
dec
fs
add
sar
mov
out
leave
add
sbb
aas
lds
out
bswap
add
shl
jecxz
dec
fmul
add
ss
out
cmps
arpl
jmp
(bad)
iret
ds
fucomp
cmp
(bad)
jg
and
(bad)
cmp
call
or
cmp
mov
icebp
jp
sub
cdq
push
neg
adc
ror
loop
add
dec
je
sbb
inc
aas
fistp
shr
je
ss
xor
pop
retf
sbb
xchg
fcom
scas
lds
stos
sub
je
cmc
pop
inc
ret
and
jmp
lea
push
test
popf
icebp
jb
inc
mov
hlt
push
fadd
inc
hlt
and
jbe
movaps
mov
sub
imul
mov
and
mov
scas
ret
ins
cli
push
mov
retf
jae
enter
dec
fsub
sub
adc
push
sub
inc
or
(bad)
push
stos
pop
sub
call
js
mov
lar
inc
xchg
xor
push
aam
mov
into
xchg
dec
imul
jno
push
jle
mov
loop
mov
call
mov
dec
push
adc
mov
xchg
adc
adc
cwde
cmovb
dec
into
or
shr
bound
inc
lock
xlat
or
shr
aam
mov
das
or
stos
mov
push
inc
bound
out
fsub
daa
mov
(bad)
(bad)
in
popf
aaa
fst
and
retf
mov
stc
jg
inc
movs
push
xor
cs
imul
popf
popa
popf
aad
fwait
lock
push
leave
mov
sbb
aaa
xchg
cmps
fstp
dec
mov
or
ins
scas
jmp
nop
mov
dec
cdq
inc
mov
xor
stc
int
add
xlat
aas
sub
mov
xchg
inc
lods
mov
sub
inc
xor
cmp
popa
enter
nop
pop
xor
or
xor
add
mov
test
adc
inc
xchg
xchg
mov
xchg
arpl
aaa
add
cmps
sbb
stc
cmp
cs
test
out
dec
mov
(bad)
sti
jae
xchg
movs
(bad)
and
pop
test
xchg
push
push
mov
push
sub
jb
add
jnp
(bad)
mov
dec
ret
out
jne
stos
mov
lods
mov
adc
dec
jne
cwde
xor
adc
mov
shr
movs
cmp
push
stos
test
addr16
add
out
movs
or
sub
or
push
(bad)
sbb
dec
sbb
cmc
mov
mov
jne
pop
mov
mov
stos
int3
mov
xchg
int
lods
sbb
lods
(bad)
aad
sbb
(bad)
shl
movs
sbb
sahf
call
mov
xlat
adc
clc
out
movs
mov
pop
jae
and
mov
jmp
imul
ret
gs
sbb
jno
jecxz
sbb
and
js
sub
push
push
sbb
mov
bound
je
mov
jg
cwde
xor
and
clc
sub
or
movs
sbb
push
cli
outs
xchg
sub
add
(bad)
stc
scas
out
sub
call
sbb
stc
mov
test
pushf
mov
in
addr16
lods
leave
imul
fsubr
repnz
mov
sub
repnz
and
inc
inc
ss
fisub
mov
popf
hlt
or
cmp
jns
rcr
dec
push
nop
int3
imul
xchg
int3
test
out
mov
jp
loop
call
fstp
jb
mov
sbb
mov
or
lods
dec
cmc
ret
xor
dec
stos
lods
push
lahf
aaa
xchg
test
out
pop
fs
sbb
xor
sub
sbb
pop
xchg
adc
adc
fiadd
sub
ret
dec
jp
pop
bound
into
jl
ds
pop
jle
xor
add
mov
fmul
fstp
push
pop
fwait
mov
jnp
pop
cwde
arpl
test
repz
mov
setge
fsubrp
out
(bad)
mov
fnsave
test
sbb
pop
jg
mov
sti
sub
test
js
cmp
add
mov
lds
(bad)
arpl
mov
(bad)
pop
popa
call
and
iret
xchg
int
(bad)
xlat
push
int3
mov
inc
(bad)
(bad)
mov
xor
ja
inc
jno
shl
fisttp
mov
loope
pop
ins
stos
loope
popa
shr
or
add
mov
or
movs
jl
aam
jnp
es
(bad)
into
cs
test
jno
stos
jle
mov
hlt
sub
sub
push
sti
xchg
mov
jb
push
imul
clc
dec
jp
mov
retf
mov
cmp
leave
or
pop
(bad)
sub
js
ror
ret
and
cmc
imul
xchg
inc
loopne
out
cmp
add
movs
in
jbe
neg
je
mov
mov
sbb
mov
or
pushf
mov
(bad)
shl
retf
lods
adc
rcr
test
test
dec
push
imul
imul
push
outs
jne
adc
inc
fxch
es
stos
sbb
stos
sti
frstor
aas
cld
dec
push
jmp
(bad)
div
mov
mov
cmovnp
dec
mov
gs
mov
xchg
xor
daa
ror
cmps
pop
pusha
cmp
cmp
mov
xchg
dec
push
stc
xor
or
icebp
aad
icebp
pop
xor
sbb
jno
lods
sbb
mov
sub
gs
mov
dec
ja
out
xor
sub
add
into
test
push
pop
cdq
xor
shl
push
(bad)
rcl
inc
mov
jbe
sar
int
xchg
inc
xlat
and
or
(bad)
fs
popa
jmp
out
mov
fld
lahf
add
xchg
retf
xor
in
lahf
aad
shl
pop
rcl
in
clc
ins
inc
bound
mov
aas
xchg
int3
push
push
mov
clc
sbb
jne
loopne
setge
or
out
test
jne
sub
test
jge
jl
mov
std
mov
mov
add
dec
xchg
mov
dec
xchg
jo
movs
and
retf
not
mov
push
push
xor
mov
lds
pop
repnz
pop
int
movs
mov
cmp
outs
pop
aaa
popf
aaa
aas
bound
imul
jnp
and
test
push
rol
es
push
dec
cmp
repnz
lds
fistp
xor
aad
dec
cdq
not
push
movs
push
xchg
sub
sub
mov
imul
clc
jg
or
out
int
std
dec
sbb
mov
inc
loopne
dec
mov
sub
js
lds
add
ins
imul
mov
xor
imul
ficomp
sbb
or
inc
xchg
sbb
pop
jp
pushf
sub
arpl
(bad)
mov
push
fild
dec
mulps
bound
imul
ret
push
jns
bound
loopne
dec
dec
adc
imul
(bad)
and
mov
jp
inc
call
sub
push
fs
popa
lahf
out
ins
xchg
cmp
mov
cld
mov
add
in
ins
sub
xchg
sbb
mov
dec
cmps
pop
xor
xor
movs
jb
fldenv
js
int
(bad)
je
dec
xchg
jmp
push
jns
ss
imul
mov
(bad)
push
test
xchg
daa
adc
fs
inc
lahf
pop
push
jmp
xchg
add
add
jae
and
aas
jle
(bad)
cmps
mov
xchg
cmps
add
ret
cmp
inc
mov
inc
adc
fdiv
arpl
lods
fnstcw
or
adc
adc
out
push
std
imul
xchg
mov
rcl
cvttps2pi
add
es
lods
add
push
mov
inc
das
xchg
adc
ins
mov
add
fist
adc
xchg
sahf
enter
mov
test
rol
int3
or
lea
sbb
test
scas
fcomp
out
js
outs
xor
iret
pcmpgtd
xchg
xor
push
sbb
jbe
cmc
inc
loopne
add
jmp
(bad)
in
cmp
in
arpl
test
push
popa
ret
cmp
sahf
jne
or
dec
fsub
movzx
sbb
cmp
dec
aas
jo
repz
fild
call
mov
mov
gs
int
adc
fidivr
out
popa
sub
mov
adc
mov
adc
lods
sub
xchg
or
inc
mov
inc
xchg
(bad)
movs
push
xchg
xchg
nop
jp
xchg
xchg
bound
pop
(bad)
mov
dec
push
sbb
xadd
test
jnp
int
cmc
fstp
lods
js
cwde
xchg
stos
jl
push
lea
add
nop
inc
mov
sbb
rcr
adc
jb
retf
shr
repnz
sar
sbb
adc
shl
xlat
push
mov
xchg
jle
(bad)
shl
pop
fisttp
xchg
mov
mov
imul
mov
mov
in
add
call
in
fcom
pop
addr16
xchg
adc
int3
or
ds
sbb
xchg
pusha
rcr
sub
dec
loop
inc
xchg
sti
or
repnz
movs
or
adc
add
jno
sub
mov
mov
dec
and
dec
fdiv
jbe
lds
sbb
addr16
jg
jl
push
int
pushf
add
(bad)
cmp
xchg
sbb
in
mov
dec
add
mov
cmc
mov
push
ins
popa
cs
mov
add
jg
xchg
mov
shr
and
leave
adc
outs
clc
fldcw
outs
jns
adc
mov
mov
pop
sub
jecxz
xor
icebp
les
mov
iret
lods
mov
pushf
mov
popf
pushf
pop
mov
push
inc
cwde
sub
aas
aam
ins
mov
sbb
jle
cmc
imul
mov
push
or
mov
sub
retf
xor
in
jbe
pop
cdq
pop
ror
in
mov
mov
sahf
enter
or
int
test
cmp
(bad)
cwde
popa
data16
mov
mov
push
adc
fld
sbb
cmps
arpl
inc
jnp
sahf
fsubr
fwait
enter
or
fisub
inc
xor
aaa
in
(bad)
(bad)
fidiv
mov
fild
inc
xor
sub
fcomi
jge
out
jno
sti
cmp
retf
jecxz
jp
inc
jb
cmp
int
xchg
(bad)
ds
xlat
aam
xchg
add
jmp
leave
mov
loop
mov
(bad)
lsl
jl
(bad)
(bad)
in
xchg
adc
sub
imul
mov
(bad)
cs
mov
jmp
pop
cwde
xor
mov
shr
jmp
cmps
cs
adc
mov
cdq
sub
fdivrp
pushf
cmps
aad
lock
neg
push
out
in
ret
mov
push
add
or
ret
out
pop
ficomp
add
fnstcw
ret
mov
imul
add
stos
jge
dec
outs
popf
cwde
rcl
push
dec
jo
pop
test
in
loopne
mov
movs
sub
nop
sti
jnp
cmp
fstp
dec
out
lahf
stos
add
fwait
pop
sub
loop
movs
pop
sar
clc
xor
mov
mov
mov
arpl
cmp
lods
ins
out
xlat
aad
jae
jns
lods
xchg
cmps
dec
push
mov
data16
pop
outs
mov
ja
outs
dec
test
mov
xchg
pushf
dec
mov
or
(bad)
aaa
mov
test
leave
(bad)
adc
sbb
xchg
jnp
loope
jo
sbb
jb
mov
sub
jb
pop
mov
lahf
rcr
ret
push
jbe
icebp
test
and
popa
daa
or
movs
add
mov
sbb
test
inc
call
mov
xchg
fwait
pop
mov
adc
test
add
rcl
popa
loop
out
push
les
sbb
test
inc
adc
xchg
loop
mov
stc
or
jmp
jno
into
imul
sub
fcom
int3
mov
mov
mov
mov
mov
or
es
jl
or
pop
inc
out
push
cmp
cmc
fmul
xchg
mov
movs
and
arpl
fwait
adc
jb
nop
(bad)
dec
mov
and
add
fwait
dec
push
jnp
std
xchg
xchg
stos
dec
test
sub
loopne
(bad)
or
pusha
adc
push
mov
push
xchg
retf
sub
inc
repnz
stc
inc
mov
adc
fistp
idiv
sahf
inc
or
arpl
xlat
loopne
ficomp
and
nop
sub
mov
sub
pop
inc
or
push
pusha
xor
sub
mov
call
inc
pop
mov
jae
jno
arpl
and
mov
inc
ret
mul
jno
cmp
or
ins
or
xlat
cld
xor
popf
inc
push
fcom
jb
in
jnp
push
push
call
movups
adc
push
adc
and
dec
fmul
dec
fist
xor
adc
dec
js
push
and
out
sbb
icebp
xor
sbb
daa
mov
ror
rcl
cmps
adc
lds
ret
in
fmul
cmp
and
int3
xchg
mov
xor
adc
jae
push
mov
cmp
mov
repz
mov
jno
mov
(bad)
fsub
(bad)
dec
hlt
inc
sahf
push
in
dec
call
cmp
arpl
cdq
mov
and
mov
int
outs
out
jle
cmp
cs
sbb
int
mov
test
mov
push
bound
sub
pop
pusha
cli
retf
mov
popf
lock
fmul
inc
xlat
dec
retf
push
dec
sub
mov
pop
mov
jno
(bad)
mov
(bad)
aas
out
cmp
pop
mov
int3
sbb
inc
lods
xchg
push
int
cld
daa
int
cmc
cmp
jnp
stos
inc
in
inc
and
les
shr
stos
int3
cmc
mov
cwde
mov
data16
outs
cmp
mov
dec
je
call
pusha
(bad)
and
(bad)
lds
(bad)
sahf
push
jmp
push
inc
add
xor
or
dec
push
pop
nop
nop
lock
and
rcl
push
lock
jno
loop
fld
pop
xor
jno
add
aaa
dec
lds
neg
mov
xchg
mov
sahf
sahf
pusha
adc
jmp
jle
call
mov
fcomp
loope
retf
jno
test
push
mov
outs
add
add
and
ss
inc
loop
sbb
stos
mov
xchg
fdiv
mov
inc
outs
ins
out
inc
aaa
cmps
dec
xchg
popf
inc
mov
dec
iret
test
ret
inc
mov
cld
jbe
test
jnp
sbb
mov
jge
aas
mov
outs
inc
cmp
je
dec
sub
sub
mov
movhps
cmp
jns
mov
lds
(bad)
mov
sbb
div
fist
push
sub
(bad)
call
shl
dec
pop
loope
jecxz
ja
push
out
out
or
enter
fwait
jns
and
fsubr
inc
sbb
div
sti
dec
lods
inc
daa
or
lods
sub
inc
dec
sar
push
dec
xor
arpl
mov
nop
ds
or
xchg
jae
lds
inc
int3
cmp
xor
fs
xchg
add
gs
pop
add
outs
loopne
mov
mov
pop
jae
mov
dec
and
push
pop
ja
fld
aas
pop
out
cmp
cmps
mov
xchg
gs
inc
mov
mov
pop
call
jmp
addr16
add
lock
add
pop
or
(bad)
mov
or
fmul
jb
daa
jge
lock
and
lds
sbb
rcr
jmp
xchg
sbb
sar
cmps
fs
adc
mov
mov
pop
mov
stos
inc
stos
sbb
push
sar
mov
les
xor
jbe
mov
sbb
repz
fld
xor
test
mov
add
mov
addr16
mov
adc
adc
int3
mov
mov
jl
div
inc
add
sub
(bad)
sbb
or
cmp
and
daa
xlat
mov
sbb
pop
mov
shl
imul
xchg
pop
repz
or
cwde
add
movs
mov
stos
ds
adc
imul
nop
addr16
mov
mov
outs
push
jbe
push
cmp
push
and
f2xm1
pop
mov
fild
repz
jecxz
sbb
sbb
and
inc
push
pop
retf
pop
cs
inc
add
inc
lods
push
add
inc
mov
mov
jmp
mov
xchg
push
test
sbb
ret
push
ins
and
dec
(bad)
test
inc
push
test
and
in
call
in
xchg
add
icebp
mov
lock
cwde
jb
mov
sbb
mov
stos
ins
xchg
push
xchg
and
loopne
dec
adc
cmp
inc
inc
mov
mov
icebp
sbb
enter
sbb
inc
lock
aaa
aas
push
call
cwde
test
sbb
sub
test
pop
mov
mov
jne
sar
div
test
jp
cld
(bad)
imul
sbb
ret
xor
fidivr
cwde
(bad)
sbb
pushf
xchg
adc
and
pop
push
jns
aad
adc
push
dec
cwde
into
sub
test
dec
mov
inc
test
xchg
xchg
int
jmp
jmp
arpl
retf
div
adc
mov
stos
call
lds
adc
dec
or
popf
(bad)
sahf
std
or
adc
mov
pop
sub
out
xchg
pop
jbe
fdivr
(bad)
aad
dec
leave
and
or
jb
xchg
or
mov
dec
popa
xor
mov
dec
aas
mov
xchg
fs
sbb
fs
pop
lods
push
or
scas
sbb
cs
pop
test
sti
mov
icebp
jb
dec
mov
out
jnp
or
mov
cli
test
adc
lahf
cld
mov
inc
ret
mov
xor
das
gs
lods
gs
(bad)
lock
push
repz
xlat
js
mov
in
jl
push
fistp
and
push
(bad)
data16
or
dec
mov
and
xor
xchg
mov
adc
lods
sub
pop
pop
pop
dec
popa
cmp
pop
adc
or
mov
js
lods
stos
add
add
stos
ret
out
adc
push
or
mov
xchg
push
sub
xor
xor
push
sbb
push
call
dec
xchg
into
jp
dec
ss
xor
shl
mov
es
icebp
fwait
shl
push
adc
sub
pusha
xor
je
adc
or
jle
out
dec
cwde
lds
(bad)
cmp
inc
xchg
sub
cld
mov
cmp
mov
dec
inc
call
xor
rol
dec
retf
iret
scas
in
test
aaa
into
inc
(bad)
mov
and
mov
mov
out
jmp
and
jne
jmp
cdq
pop
xchg
outs
cmp
and
lods
mov
popf
xchg
aad
jbe
push
and
jo
das
mov
fdivr
int
pop
stos
int
fisttp
enter
mov
scas
stc
xor
lea
jns
mov
dec
(bad)
xchg
call
test
adc
(bad)
in
adc
sub
or
or
inc
xor
add
out
xchg
ret
adc
enter
pop
fcomip
gs
cmps
jg
fisub
xor
(bad)
dec
ja
dec
push
fild
cpuid
retf
adc
and
shl
outs
mov
sub
int
hlt
cld
adc
jle
(bad)
stos
push
dec
mov
repz
repz
inc
(bad)
nop
lods
fs
xchg
xchg
fsubr
push
sub
mov
arpl
jnp
das
jbe
sar
xchg
movs
or
popf
jmp
imul
mov
push
adc
cs
mov
push
cli
ret
shl
fnstcw
push
or
push
add
sub
cmps
mov
dec
psadbw
add
xor
mov
mov
inc
cmp
hlt
outs
or
jl
push
sub
sbb
mov
pop
fucomip
sub
loopne
stos
and
aad
das
scas
mov
xor
add
mov
cmp
mov
lock
jae
sub
call
in
pop
imul
cs
lea
push
in
retf
leave
add
inc
jae
xchg
cmp
dec
jmp
push
xor
xor
xchg
adc
xchg
jl
xor
inc
popa
mov
sahf
adc
in
hlt
and
cmp
push
mov
(bad)
push
cld
gs
push
pop
outs
xchg
sbb
push
ins
xchg
cmp
mov
or
or
movs
ret
jg
jp
adc
je
sub
dec
scas
std
fwait
jb
(bad)
cmps
mov
fmul
sahf
push
dec
sub
sbb
xchg
sbb
out
test
(bad)
rol
cmps
xchg
mov
xchg
add
add
or
movs
jecxz
mul
add
pusha
add
shr
inc
lahf
scas
cmc
sub
ret
or
cmps
mov
cmp
sub
mov
(bad)
int3
sbb
inc
xor
dec
test
repz
dec
or
inc
cmp
gs
daa
sahf
push
arpl
xchg
aaa
ins
inc
xor
nop
cwde
out
lahf
fisttp
mov
pop
push
test
arpl
outs
mov
cs
add
lahf
sub
outs
fucom
out
jae
es
xor
rep
sbb
jbe
scas
push
int3
hlt
div
pusha
shl
arpl
fidiv
ja
push
dec
cs
retf
imul
xchg
push
push
arpl
jg
pop
mov
xchg
movs
mov
cmps
mov
jo
movs
int3
stos
adc
das
rol
pusha
inc
ds
loopne
add
(bad)
out
add
push
js
sti
into
mov
mov
xchg
pop
add
out
test
aad
or
adc
aaa
cld
mov
mov
sub
imul
sar
xchg
cdq
(bad)
retf
inc
jecxz
push
fsub
sbb
enter
test
scas
data16
aaa
dec
movs
mov
scas
iret
in
inc
inc
cli
not
repnz
data16
xor
cmp
adc
pop
dec
dec
(bad)
(bad)
mov
push
icebp
das
mov
movs
adc
push
je
fisttp
(bad)
and
ja
leave
xchg
cli
pop
and
inc
lods
pushf
jge
and
pop
and
jne
and
(bad)
pushf
push
jmp
sbb
adc
xchg
es
sar
je
outs
popa
mov
jmp
out
push
sbb
inc
les
dec
call
in
jne
ins
dec
popa
sbb
scas
xchg
add
lahf
pop
lods
(bad)
push
lods
add
sub
pop
or
ror
inc
ror
lock
sbb
mov
cmp
call
bound
and
nop
int3
or
cmp
cs
inc
jbe
jl
test
test
rol
fiadd
xchg
lods
cdq
mov
in
sbb
(bad)
jne
js
mov
mov
inc
test
sub
cmps
mov
outs
push
adc
dec
in
push
xchg
push
sbb
dec
pop
jnp
pop
add
xchg
stc
jl
les
xchg
xchg
lahf
(bad)
outs
pop
sub
jmp
outs
int
pop
push
sub
inc
fiadd
push
enter
ror
lock
ja
jmp
push
test
sub
ror
out
shr
mov
dec
sahf
mov
mov
mul
jg
nop
add
out
outs
xchg
dec
popf
add
push
inc
cs
sub
repz
sbb
mov
pop
mov
xchg
mov
ja
push
popf
push
or
ret
repnz
rcl
imul
fwait
or
not
les
ss
outs
fstp
add
xchg
xchg
cli
rcr
add
cmp
popa
and
xor
scas
inc
inc
jae
add
jmp
or
push
sbb
add
lahf
ffreep
or
inc
sbb
push
dec
xchg
push
inc
nop
xchg
cld
jno
cmps
je
cmp
adc
push
dec
xor
push
mov
leave
pop
mov
int3
scas
fldenv
sysenter
aaa
cmps
push
test
in
(bad)
cmp
mov
leave
ficom
and
in
repnz
ja
movs
movs
jmp
outs
sub
and
js
push
imul
xchg
xor
ins
out
(bad)
ss
fcomp
shl
add
or
add
cld
clc
in
add
xlat
frstor
shr
std
dec
stos
inc
push
lds
add
sahf
ds
xchg
rcr
dec
or
or
cmps
mov
jl
fst
mov
(bad)
and
add
lods
cwde
and
arpl
mov
(bad)
mov
cmp
inc
dec
dec
cmp
sub
aad
outs
or
outs
loopne
ret
(bad)
cwde
xor
(bad)
xchg
(bad)
mov
ss
adc
mov
or
cmp
(bad)
dec
in
push
clc
mov
sbb
xchg
sti
and
aaa
dec
pop
pop
sbb
sub
mov
mov
dec
cmps
shl
sub
mov
dec
push
cs
mov
push
and
nop
cmp
call
das
fidiv
call
aad
push
ins
in
cmps
and
and
mov
ja
iret
enter
call
cmc
inc
int3
jge
popf
movs
xor
pop
loopne
jp
push
out
add
fwait
cwde
add
fidiv
lods
cs
loopne
xchg
retf
shl
push
xor
popa
(bad)
mov
mov
movs
and
dec
aaa
into
pop
xor
jg
xor
into
addr16
outs
jne
push
jle
sub
dec
lds
push
fucom
dec
sub
xlat
int
mov
adc
mov
inc
dec
adc
sub
(bad)
mov
inc
lea
mov
ret
popf
cmp
in
pop
sub
mov
cmp
sub
mov
arpl
repnz
sub
xchg
push
popf
sar
aam
mov
xchg
cmps
(bad)
std
cmps
fist
in
ds
jle
jecxz
xchg
mov
xchg
push
cmp
sbb
ja
adc
xchg
push
ins
dec
xor
lods
jbe
mov
mov
pop
adc
js
stos
sbb
and
or
adc
mov
push
add
dec
mov
inc
pushf
fwait
popf
inc
and
jnp
mov
loopne
(bad)
aam
inc
dec
std
and
mov
push
stos
cwde
ins
loopne
dec
inc
sub
push
push
mov
push
iret
mov
cmp
int
and
arpl
cs
lea
mov
std
int
test
sub
rol
out
daa
push
pop
mov
inc
out
xchg
adc
shl
shl
sub
sbb
push
sub
in
jne
sub
dec
push
fbstp
out
addr16
dec
data16
inc
push
cs
(bad)
cwde
dec
popf
call
push
sub
shr
sbb
mov
movs
scas
pop
call
shl
sub
(bad)
xlat
out
pop
iret
cli
add
adc
loopne
repz
add
cs
push
pop
dec
pop
xchg
dec
test
icebp
(bad)
push
stos
cmc
cs
jge
pop
ret
xchg
or
xor
std
(bad)
adc
xchg
pop
inc
sbb
ja
inc
sub
call
pop
retf
outs
pusha
add
std
dec
lock
leave
ror
adc
test
jne
push
mov
rcl
sbb
sub
dec
fwait
sbb
mov
addps
sbb
retf
and
scas
mov
popa
inc
sbb
jmp
cdq
jne
lock
(bad)
sub
out
(bad)
inc
adc
cld
or
jg
inc
xchg
or
cld
xchg
in
mov
pop
inc
dec
cmp
and
int3
push
sar
bnd
xlat
enter
mov
mov
mov
add
clc
(bad)
rcr
fsub
pusha
cmps
sub
add
bound
mov
out
mov
stc
(bad)
in
xchg
add
push
fucomp
inc
sub
mov
mov
inc
push
xchg
jns
jnp
push
(bad)
icebp
jge
cmps
add
iret
cmc
cmp
push
sub
hlt
repnz
dec
imul
scas
pop
or
mov
ins
in
sbb
stc
cmp
jmp
cmc
into
mov
dec
das
xor
xchg
push
sub
xchg
xor
mov
or
mov
jb
fdiv
sub
rol
push
xchg
in
mov
push
mov
into
test
stc
and
enter
aas
pop
ret
inc
call
into
mov
pusha
jle
cmp
pop
gs
(bad)
aam
push
mov
cmc
(bad)
push
inc
lods
mov
dec
les
jb
bound
(bad)
hlt
dec
cmp
or
mov
xchg
jbe
mov
fwait
pop
fwait
outs
clc
jo
xor
(bad)
je
into
(bad)
loop
not
sub
ror
(bad)
push
sub
outs
repz
push
push
loopne
mov
sub
sar
jmp
stos
daa
jne
xchg
xor
mov
bound
out
jnp
pop
lock
mov
and
ds
in
mov
add
add
sti
rcl
cli
mov
retf
int
mov
xor
mov
ds
imul
repnz
rcl
cmps
arpl
iret
inc
mov
add
scas
je
mov
jle
cmp
aaa
jp
aam
mov
mov
lea
rcr
mov
hlt
je
inc
fild
imul
cmp
and
movs
sub
push
addr16
pop
in
pop
and
fiadd
jmp
int3
adc
(bad)
cld
inc
sub
lahf
push
imul
ins
cmp
(bad)
std
and
cmc
in
arpl
xchg
imul
test
movs
fwait
push
adc
xor
cmc
xlat
xor
xor
sub
pop
clc
pop
fld
push
push
out
sub
push
aam
xor
xchg
xchg
pop
sub
push
icebp
push
ss
mov
pop
in
push
in
dec
mov
mov
aaa
jmp
fisubr
xchg
int
mov
xchg
aas
pop
sub
adc
jbe
stos
inc
dec
outs
std
sbb
retf
jle
dec
cmc
sbb
push
lods
xchg
sar
bound
push
push
push
sbb
xchg
push
and
push
es
scas
dec
jmp
adc
jp
add
in
xchg
lds
icebp
cmp
sub
dec
add
(bad)
std
out
out
sub
push
push
sti
addr16
adc
adc
(bad)
lahf
dec
push
sub
movs
mov
add
xor
fld
dec
js
(bad)
inc
push
(bad)
enter
shr
mov
out
or
call
sub
icebp
dec
inc
test
sahf
(bad)
sub
push
sti
and
sbb
das
leave
movs
or
mov
punpckhwd
cs
je
jmp
dec
shl
push
xchg
jecxz
cs
cmp
fisttp
xor
pop
pop
pop
xchg
xchg
pop
mov
popf
(bad)
pop
mov
sub
jecxz
jecxz
fisttp
adc
pop
addr16
pop
jge
cld
push
out
push
sbb
pop
mov
retf
mov
inc
repz
dec
sbb
(bad)
out
test
shl
sbb
sbb
stos
popf
leave
add
test
or
(bad)
mov
xchg
mov
dec
cs
jmp
movs
and
sti
rcl
inc
(bad)
fmul
in
into
mov
push
sub
mov
lahf
fsubr
cmp
outs
pushf
add
imul
mov
pop
sub
cmp
xchg
sbb
adc
sub
cmps
dec
inc
int
es
xlat
mov
pop
sar
out
push
repz
das
repz
jo
iret
in
xor
or
lahf
mov
xor
pushf
and
cld
jp
data16
xchg
retf
lea
adc
sub
inc
popf
test
pop
fwait
(bad)
sbb
xchg
dec
sbb
inc
adc
imul
mov
xchg
push
and
outs
loopne
arpl
push
inc
xor
adc
jp
in
dec
clc
not
lds
sbb
in
mov
ins
and
xchg
(bad)
cmc
lock
jg
shl
hlt
movs
sti
jecxz
and
push
jl
lds
cmp
and
lahf
cmp
(bad)
js
jg
cld
lods
cmp
shr
inc
mov
nop
push
inc
jle
adc
test
adc
or
repz
dec
mov
daa
aam
ret
cmp
xchg
imul
and
add
mov
xchg
test
jg
ja
dec
cs
mov
lods
fs
push
pusha
inc
pop
pop
sub
test
pop
in
inc
sbb
jbe
out
push
retf
hlt
(bad)
fs
data16
xlat
popf
shr
cs
push
mov
mov
push
shl
or
ret
aam
inc
pop
sbb
mov
call
repz
inc
sub
pop
mov
cmp
jmp
addr16
and
ffree
mov
and
cmps
fdivr
stc
xor
cs
cmps
mov
out
bound
cmp
push
jmp
mov
daa
ins
inc
cmp
fstp
inc
lods
popa
repnz
inc
js
mov
fld
fs
lds
inc
sbb
in
test
sbb
cli
or
inc
fist
jmp
int
xchg
clc
jns
sbb
retf
in
hlt
(bad)
push
jae
aas
mov
test
gs
mov
rcr
push
ins
inc
pushf
fiadd
dec
inc
xor
aam
cmp
fld
std
inc
mov
pop
in
ds
fsub
pop
pop
mov
(bad)
retf
jns
dec
sbb
dec
jne
in
aad
cwde
mov
jl
push
je
dec
sub
mov
stos
in
dec
cmp
cmps
sbb
pop
ror
cmps
in
pop
mov
sbb
test
xor
sbb
fwait
in
sbb
ja
or
in
sbb
cmps
dec
pop
adc
(bad)
pop
pusha
(bad)
test
xchg
push
in
add
rcr
stos
mov
clc
push
adc
clc
xchg
mov
shl
push
data16
mov
xchg
int
jb
in
mov
pop
retf
iret
loope
cwde
xchg
sbb
cmp
(bad)
fwait
sub
and
mov
aaa
push
mov
add
mov
pop
inc
shl
jp
mov
xor
mov
fnsave
movs
scas
movs
call
xor
mov
bound
call
call
cmp
mov
add
xor
(bad)
clc
icebp
mov
sub
sbb
sbb
repnz
sbb
jbe
in
rcl
jmp
pop
mov
fst
and
dec
mov
jns
out
into
in
or
mov
(bad)
jmp
jno
(bad)
jle
sbb
shl
mov
lock
ret
xchg
idiv
call
jecxz
pop
test
sub
(bad)
mov
mov
sbb
lds
aas
cmp
cli
cmc
adc
popa
or
rol
adc
mov
xchg
jo
ret
xor
add
dec
retf
push
cmps
mov
and
ja
and
loop
sbb
movs
shl
sub
jns
outs
in
cmp
int3
scas
or
jb
repnz
(bad)
jp
js
sahf
iret
repz
idiv
cmp
and
dec
inc
in
std
sub
and
and
or
jle
cmc
repz
fisub
jl
inc
(bad)
cmp
ret
mov
dec
data16
jmp
ins
mov
sbb
fmul
cli
mov
dec
xor
retf
cmp
push
clc
or
push
xchg
shr
mov
in
movs
call
(bad)
repnz
add
sar
(bad)
cmp
xor
mov
mov
fwait
sbb
and
and
xor
mov
fcmovne
pop
xlat
in
out
fidiv
inc
fwait
sub
shl
and
lods
push
popf
mov
daa
mov
pop
add
addr16
mov
fmul
fld
sbb
outs
mov
mov
sbb
jne
sbb
fiadd
pusha
bound
push
pop
push
fisttp
cmps
fcmovnb
mov
xchg
pop
jo
in
out
ror
test
cs
cmp
fild
adc
jg
(bad)
mov
jge
mov
mov
loop
int3
(bad)
fucomp
cld
mov
add
repz
add
iret
fcomi
lods
push
push
xchg
ins
add
sub
mov
push
sub
(bad)
pop
pop
call
push
adc
xchg
fst
rcl
jns
mov
out
xchg
pop
ja
dec
mov
mov
add
fsub
outs
xor
cmps
out
enter
dec
rol
mov
shl
add
sub
pusha
mov
pop
out
fdiv
test
dec
xlat
cwde
xchg
popf
jp
fsubp
cwde
push
nop
je
and
sbb
ret
int
jbe
dec
pusha
cli
cmp
addr16
or
icebp
sub
push
xor
fwait
lods
xchg
cmps
ret
outs
int
loopne
mov
ins
xor
mov
out
ins
push
jns
nop
mov
or
movs
dec
xchg
loop
jmp
sbb
fisubr
xchg
sar
adc
out
shl
and
arpl
repz
cmc
and
test
sbb
test
scas
mov
push
fdivr
pop
dec
stc
ins
lock
pop
xchg
cmp
jnp
lahf
pop
sbb
inc
out
iret
inc
gs
inc
mov
jns
inc
fcmove
and
jbe
xor
fucom
mov
push
sbb
idiv
cmp
(bad)
adc
cwde
(bad)
pushf
sub
fst
adc
jecxz
loope
adc
or
or
loop
popf
xlat
inc
push
add
push
inc
bound
jge
std
mov
lods
or
cwde
and
push
sbb
push
xchg
push
add
jecxz
mov
adc
mov
push
sub
daa
imul
aas
cs
jmp
dec
inc
int
ret
push
add
sbb
imul
fld
sub
test
into
aas
dec
mov
add
jle
cmp
jecxz
fisub
cmp
frstor
and
loope
jmp
imul
out
sbb
mov
xor
jb
add
fsub
mov
push
pop
or
adc
retf
int3
dec
ret
mov
test
sub
ficomp
sub
dec
cwde
das
add
outs
js
fwait
sbb
mov
mov
test
mov
dec
add
sbb
and
fisttp
pushf
scas
mov
retf
shl
test
mov
lea
lods
pop
xchg
pop
shl
push
xor
push
or
add
push
ret
(bad)
ins
mov
in
pop
not
std
pusha
adc
enter
(bad)
or
jg
jmp
and
xchg
test
repz
shl
add
pop
adc
dec
mov
cmp
hlt
ret
and
enter
cs
es
pop
mov
stos
gs
sbb
push
sbb
enter
lods
test
pushf
mov
add
jmp
xchg
push
mov
dec
and
bound
xchg
push
or
jo
cmc
add
and
movs
xor
or
shl
and
mul
mov
mov
mov
mov
outs
dec
ret
call
call
out
or
in
xor
add
mov
push
aad
dec
mov
stc
pop
pop
jno
aad
xchg
stc
shl
retf
shl
push
dec
shr
adc
fcomip
shl
in
xchg
mov
int3
xchg
aam
sar
loopne
xchg
push
retf
mov
retf
daa
jb
xor
xchg
mov
add
sbb
jae
jecxz
fist
and
cmp
lods
repz
sti
arpl
call
mov
sar
ret
mov
inc
int3
aam
jno
out
ds
push
dec
rcl
sahf
adc
jl
dec
jecxz
int3
cmp
out
or
cmp
jnp
test
cmp
sbb
mov
lods
sbb
mov
rcl
cwde
pop
ret
lock
imul
or
sahf
mov
xchg
in
pop
pop
cld
dec
lods
mov
pop
mov
xor
jnp
not
xchg
cmc
cmp
lock
sub
pop
add
xchg
xor
sahf
(bad)
mov
push
lock
add
mov
dec
mov
xchg
adc
movs
add
mov
adc
jae
in
aam
pushf
test
mov
lds
mov
adc
inc
loope
stos
push
rcl
fsubrp
movs
mov
jmp
jnp
mov
fisttp
and
cmp
sbb
pop
dec
cmp
(bad)
aam
idiv
lahf
loope
sub
mov
or
xchg
xchg
push
jmp
push
jnp
ror
sbb
movs
lods
imul
fild
mov
shl
mov
fiadd
(bad)
dec
outs
fist
xor
mov
shl
aam
xlat
mov
sbb
jp
aaa
std
sub
test
mov
mov
xor
test
cs
push
int
int
dec
mov
outs
out
adc
pop
stc
pop
cmp
pop
or
xor
mov
and
mov
or
(bad)
int3
fimul
mov
data16
popf
jle
test
ds
out
cmp
(bad)
addr16
jp
cld
bound
fmul
dec
xchg
cmp
(bad)
shl
inc
cmp
fcmovnbe
data16
cmp
xor
mov
mov
xchg
stos
xchg
fdivr
mov
loopne
test
jbe
xor
push
jbe
nop
imul
adc
(bad)
out
adc
test
dec
jle
dec
mov
adc
ins
idiv
(bad)
ss
add
inc
cmc
adc
lea
ficomp
mov
adc
and
adc
jg
shl
push
aaa
mov
mov
dec
lahf
loop
clc
js
pop
adc
(bad)
pushf
lea
mov
push
pop
cmp
test
or
push
mov
jge
mov
xor
jge
lds
inc
pop
adc
leave
pop
pushf
retf
shr
and
fs
imul
lea
pop
fsubr
push
call
fiadd
push
inc
mov
inc
push
gs
and
clc
in
mov
push
and
push
xchg
aad
outs
sbb
fmul
sub
aaa
xchg
dec
and
xor
adc
push
sahf
cli
daa
mov
lock
or
int
jbe
mov
in
(bad)
jmp
mov
mov
xor
inc
shl
adc
add
mul
dec
adc
(bad)
enter
(bad)
es
or
xchg
sar
loopne
shr
shl
mov
adc
ds
(bad)
rcr
add
xor
rcr
leave
jg
push
mov
jecxz
and
fucom
in
(bad)
repz
cdq
das
imul
out
popa
sub
(bad)
ja
adc
cld
or
test
inc
sub
(bad)
push
(bad)
loop
in
sub
xor
mov
ficom
sub
aam
cmp
(bad)
pop
cmp
repnz
inc
or
push
and
sub
xor
fnstcw
cmc
dec
out
cmps
aad
jno
add
add
cwde
dec
pop
data16
push
push
dec
fisttp
and
lods
out
pop
xor
ds
pop
in
lea
push
push
in
mov
in
push
mov
sub
call
xchg
sbb
cwde
and
push
scas
sub
daa
cmp
mov
movs
shr
addr16
dec
push
sub
inc
hlt
pop
enter
adc
push
push
outs
xchg
jmp
push
lods
daa
ins
mov
cs
mov
daa
push
call
arpl
stc
xchg
iret
ja
addr16
fimul
xchg
inc
hlt
je
xchg
mov
or
out
xor
mov
shl
push
into
int3
stos
lods
push
cmps
and
adc
jno
push
das
lods
stc
jne
fsub
and
add
adc
jl
mov
dec
ja
ins
xchg
dec
and
fimul
mov
out
pop
jge
adc
mov
fmul
(bad)
adc
xchg
repz
mov
inc
sub
in
cmp
aad
dec
ret
xor
xor
mov
jle
rcr
adc
dec
xchg
ss
pop
sbb
xchg
pop
pop
lds
into
ret
cli
(bad)
xor
xchg
(bad)
(bad)
push
pop
or
popf
out
bound
adc
xor
js
ds
hlt
xchg
ret
es
rcr
outs
push
jl
push
lea
mov
xor
dec
xchg
mov
inc
mov
sbb
test
dec
fsub
and
imul
(bad)
pop
sbb
pop
sub
enter
test
mov
push
or
sub
jle
or
xor
sbb
outs
callw
xor
jne
retf
stos
aad
xchg
stc
adc
lahf
retf
mov
(bad)
dec
and
jle
imul
pop
cmp
fist
fidiv
repz
(bad)
adc
push
sub
scas
mov
movs
cmp
pop
xor
nop
push
std
xor
loopne
or
std
fmul
(bad)
mov
inc
cmp
jl
dec
push
das
(bad)
cmps
mov
cmps
mov
ins
rcr
shl
(bad)
sub
out
fstp
inc
jp
mov
dec
lahf
xchg
ret
test
int
or
or
add
loop
and
(bad)
mov
adc
mov
retf
popa
aaa
cld
push
inc
xchg
lds
hlt
cmp
movs
inc
or
jg
outs
sub
lods
icebp
push
pusha
xchg
scas
inc
mov
and
fisub
xchg
and
fimul
mov
test
inc
pop
sub
jbe
test
into
cmp
into
shl
pop
in
es
das
imul
adc
lahf
cli
ss
push
mov
sbb
xchg
dec
hlt
movs
pop
int3
call
aaa
push
test
fnstenv
xchg
into
mov
retf
aaa
idiv
mov
mov
(bad)
mov
dec
cmp
push
mov
jno
ds
leave
fsubr
jl
inc
mov
xor
xor
and
cmps
mov
pop
mov
push
dec
rol
popa
dec
sti
fidivr
xlat
sub
adc
add
push
std
movs
push
push
cld
and
lahf
inc
mov
xor
test
stc
and
cmp
jle
dec
retf
dec
mov
imul
cmps
ja
push
jmp
aaa
sbb
adc
adc
push
sbb
in
scas
jne
xchg
loope
jno
sbb
imul
sub
and
mov
cld
or
sbb
dec
sbb
stos
xor
add
inc
out
repz
fs
and
mov
mov
js
ins
cmp
aam
or
repz
ja
fsub
or
sub
cli
aad
mov
in
xor
je
cmp
mov
pop
jns
dec
cmp
push
scas
inc
jge
mov
xchg
xchg
jge
and
xor
sbb
pop
cmp
mov
dec
cli
cld
xchg
add
not
or
mov
stos
iret
cmp
add
cwde
scas
pop
cmp
rcl
jmp
fwait
ja
data16
ret
loopne
push
push
movs
fldcw
pop
loopne
xor
dec
mov
(bad)
jnp
cs
outs
push
outs
pop
addr16
outs
repnz
mov
sub
or
push
int
mov
sti
rol
in
cmp
repnz
aaa
jae
(bad)
pop
jb
loop
xchg
mov
add
les
xor
das
scas
in
movs
repnz
fstp
sbb
stc
xchg
test
add
movs
in
cli
ds
aaa
outs
add
push
dec
or
rcr
into
xor
mov
pop
idiv
xor
jmp
enter
cmp
test
inc
sub
loopne
cmc
lock
jmp
and
retf
pop
leave
jne
daa
call
xor
mov
push
fadd
jnp
mov
out
inc
out
(bad)
shl
shl
mov
mov
dec
adc
cmp
mov
sti
sbb
and
cwde
mov
mov
lock
jmp
mov
ret
in
mov
pop
mov
test
jecxz
push
ret
pop
mov
xlat
pop
push
int
out
dec
inc
sub
push
ret
mov
outs
jno
mov
xchg
jmp
nop
test
jbe
in
out
xor
pop
retf
(bad)
test
leave
dec
and
int3
hlt
xor
sub
cmp
pop
scas
pop
add
int
pop
jecxz
cdq
test
(bad)
jns
jno
jo
cmps
inc
jecxz
nop
fnstcw
xor
aaa
dec
sbb
dec
jle
adc
ficomp
cmc
inc
test
push
lds
mov
test
inc
sti
push
push
fistp
ror
repz
jae
mov
jnp
mov
loopne
ins
mov
sbb
addr16
bound
loope
scas
rcl
outs
in
popa
jmp
mov
mov
stos
scas
lods
cmp
mov
xor
ds
sub
sar
retf
and
movs
shl
adc
ss
mov
jge
or
jne
adc
and
sub
xchg
je
mov
ins
xchg
retf
pop
aam
scas
daa
hlt
stos
xchg
and
out
jmp
(bad)
jge
cld
dec
loope
dec
pop
test
rol
stos
pop
and
aad
pusha
mov
cmps
test
call
in
mov
sbb
mov
pop
das
mov
pop
mov
es
cmp
push
repnz
xor
stc
movs
std
mov
cmp
xchg
popf
pop
sbb
add
jl
shl
xor
cmp
js
popa
jmp
add
jae
and
jmp
lods
div
xor
(bad)
into
lods
dec
in
add
ds
xchg
mov
fisub
movs
cwde
or
clc
dec
mov
mov
push
aad
push
add
cmp
mov
popa
push
psubq
inc
neg
(bad)
in
mov
push
fwait
(bad)
call
loope
sbb
cs
sbb
jl
mov
sahf
rcl
imul
xchg
mov
mov
jo
mov
and
ins
loopne
retf
mov
test
cli
mov
ss
sub
ds
cmp
xlat
adc
mov
mov
jb
gs
fcomp
sub
pop
xchg
sub
push
dec
cmps
aam
inc
jb
inc
xor
(bad)
mov
bound
jae
mov
js
cmps
inc
mov
mov
jae
add
adc
mov
mov
je
dec
(bad)
loopne
xor
shl
mov
aaa
call
pusha
mov
es
jg
js
loop
xor
bnd
pop
jnp
or
xor
mov
jp
ins
jbe
shl
fiadd
push
jbe
loop
into
adc
pop
add
mov
and
cmps
inc
in
popf
xchg
fdivr
pop
push
aas
push
rol
mov
mov
fabs
sub
or
jge
jmp
inc
pop
and
dec
push
ins
repz
cmps
mov
mov
lods
push
lods
jo
sbb
es
mov
push
into
cmps
dec
xor
call
jbe
mov
pusha
xchg
cmp
cmp
jns
gs
fld
mov
adc
aas
cmp
cwde
pop
jl
dec
jecxz
dec
mov
mov
dec
fs
cmps
jmp
push
popf
sbb
(bad)
int
rcr
xor
(bad)
shl
push
cmp
and
std
lock
cli
in
jo
mov
mov
add
sub
adc
sbb
loop
int3
popf
mov
and
push
jnp
pop
stc
jnp
stc
retf
ret
dec
sub
jecxz
pop
push
rcr
ins
sbb
imul
adc
jmp
(bad)
nop
mov
jmp
xchg
xchg
and
mov
xchg
pop
dec
fidiv
push
cmp
jne
mov
fdivp
mov
mov
std
adc
or
push
(bad)
pop
mov
pop
xchg
arpl
out
hlt
ds
inc
add
sbb
jns
sbb
push
repnz
movs
mov
(bad)
not
out
out
mov
dec
data16
and
mov
mov
add
inc
popf
lock
sbb
pop
hlt
xchg
jge
in
inc
test
or
xchg
jg
retf
inc
mov
sub
fimul
(bad)
push
xchg
push
loopne
and
jge
fst
sbb
cmc
cmps
add
call
(bad)
ret
or
pop
pop
sbb
sub
fwait
cmp
call
jle
add
aad
fmul
mov
cmp
stos
mov
sub
mov
adc
repnz
mov
jne
sbb
stos
mov
push
xor
ja
ret
(bad)
stos
in
mov
jo
aam
fwait
xchg
dec
mov
hlt
call
jnp
pop
sbb
dec
push
rol
ja
inc
mov
loopne
mov
sbb
xchg
adc
or
dec
lahf
mov
es
clc
sbb
or
sub
out
mov
push
idiv
mov
jno
push
rcr
and
cmc
repz
pop
mov
sbb
je
retf
xor
adc
or
sbb
addr16
adc
hlt
or
aad
inc
jl
cld
lods
mov
xor
nop
das
add
stos
icebp
dec
xlat
pop
enter
clc
rcl
in
out
into
jns
movs
retf
ror
test
in
adc
xchg
repnz
pop
pushf
mov
or
mov
push
dec
js
ror
es
adc
and
sub
cmp
fistp
cmp
add
push
mov
out
push
rcr
repnz
cmps
cmp
movs
add
pop
sbb
dec
out
mov
cwde
retf
mov
call
mov
inc
cwde
xchg
jecxz
retf
scas
xor
inc
adc
stos
xchg
cmps
jmp
sbb
mov
mov
mov
loopne
in
sbb
cld
das
shl
push
daa
push
cmp
jg
jae
adc
push
pop
jb
ins
mov
push
xchg
fldenv
mov
mov
pop
jns
or
popf
popf
data16
mov
mov
mov
and
hlt
pop
push
push
aad
sbb
mov
fisubr
adc
call
cmps
hlt
and
sbb
test
pop
repz
lds
(bad)
and
jmp
mov
ficomp
xlat
movs
mov
aaa
mov
mov
sti
add
popf
fadd
push
sbb
push
fwait
aad
xor
dec
aaa
and
pop
jae
(bad)
cmp
lea
mov
in
fnstsw
adc
test
fmulp
nop
jbe
fstp
cwde
(bad)
mov
push
mov
ret
mov
jno
mov
inc
dec
lds
imul
ja
and
aam
lock
dec
ins
cli
jns
fimul
ds
jo
sbb
pop
pop
pop
pop
sbb
jecxz
mov
mov
es
jge
fisubr
mov
cmp
jle
push
hlt
sahf
xor
cmp
jno
repz
stos
or
dec
or
cdq
mov
aas
dec
inc
imul
pusha
fisttp
dec
dec
clc
lods
jno
push
mov
lahf
or
inc
or
push
dec
sbb
jnp
pop
mov
movs
push
dec
xchg
stc
retf
pop
shl
mov
push
fbld
and
pop
and
or
mov
fwait
clc
not
mov
popf
push
addr16
es
and
fiadd
cmp
jge
jmp
dec
loope
jmp
lds
or
adc
jns
and
scas
xchg
adc
xchg
push
push
stos
sub
mov
xchg
push
adc
cmp
push
jg
add
push
mov
inc
sub
sub
xor
lds
add
cld
mov
rcl
shl
ja
in
xchg
pop
mov
dec
retf
or
mov
fstp
lods
mov
std
(bad)
fst
dec
lods
ret
bound
icebp
add
shr
mov
test
or
idiv
cdq
or
xlat
rcr
call
mov
inc
pop
fdivr
push
xchg
pop
fadd
push
adc
push
(bad)
aaa
outs
repz
jmp
cmp
inc
cld
mov
adc
or
sub
push
push
mov
lea
fdivr
mov
bound
jl
cld
push
jns
mov
pop
inc
rcr
dec
aam
dec
cdq
mov
repnz
outs
in
gs
aad
inc
jg
push
(bad)
mov
xchg
pop
add
xor
and
sbb
push
push
dec
or
mov
leave
lahf
shr
jnp
(bad)
das
push
adc
cmp
jp
je
movs
adc
(bad)
push
popf
mov
add
jge
fsub
xchg
pop
cmc
les
push
jne
loopne
pop
add
xchg
mov
xchg
mov
xchg
loop
push
and
je
ins
ins
push
sbb
imul
pop
mov
adc
stc
mov
in
fucom
shl
adc
sbb
inc
(bad)
mov
push
leave
out
jb
int
ret
sbb
adc
adc
xchg
sbb
mov
bound
(bad)
stc
out
dec
daa
adc
push
pusha
jns
xlat
div
shr
(bad)
mov
scas
fmul
scas
jae
je
(bad)
test
jbe
dec
inc
fstp
dec
arpl
xor
push
pushf
stos
push
lock
inc
inc
mov
out
test
popf
test
cmp
dec
(bad)
cmp
aas
ss
fimul
loope
push
mov
jg
inc
fnstcw
daa
jae
lods
and
je
dec
jmp
jge
mov
sub
pushf
repnz
out
int3
cdq
jo
(bad)
pop
mov
push
jp
out
sub
cmp
add
mov
ret
jns
and
aas
cmp
shl
fistp
fs
jno
aam
mov
lahf
inc
loopne
cmps
adc
cmp
xchg
in
mov
fcmovne
jae
pop
jl
sbb
pop
enter
dec
cmp
das
add
test
fucomi
jbe
or
cmps
lock
rol
or
(bad)
sbb
aaa
xor
test
popa
mov
and
(bad)
test
adc
xchg
sbb
mov
add
jle
in
pop
shl
arpl
and
mov
or
push
(bad)
fcomp
repz
test
push
in
mov
imul
cli
out
pop
arpl
xchg
or
cld
pusha
dec
ret
into
xor
aaa
sti
push
mov
jae
xor
pop
adc
jmp
test
retf
repz
pop
mov
mov
sub
sub
mov
shr
ss
test
and
sub
or
arpl
jg
inc
lea
jno
and
shr
loop
repz
push
add
ficom
mov
fnsetpm(287
pushf
int3
dec
xor
shl
test
pop
pop
mov
xor
mov
sar
es
ja
push
pop
mov
inc
jle
or
pop
fs
and
dec
in
mov
fdiv
xlat
jbe
mov
xchg
xchg
mov
cmp
mov
add
mov
fcomp
dec
loopne
or
mov
shl
mov
test
cdq
sub
mov
sub
test
or
shl
out
frstor
(bad)
xor
aas
dec
sbb
inc
aam
sbb
test
out
mov
push
aas
jecxz
loop
cmps
gs
fistp
shl
repz
sub
das
sti
(bad)
clc
pop
stc
outs
cmp
cmp
jb
sub
scas
jmp
pop
aad
xor
dec
xchg
(bad)
ficomp
(bad)
mov
nop
(bad)
loop
rol
fisubr
pusha
push
jl
ror
(bad)
subps
shr
movs
xchg
dec
dec
add
jae
adc
daa
xor
retf
fcomp
jo
int3
xchg
popf
adc
shr
sahf
daa
lds
rcr
pop
inc
lods
mov
pop
add
mov
push
push
hlt
sub
jbe
stos
fwait
movs
mov
shl
stc
inc
nop
push
mov
cld
shrd
mov
mov
loopne
and
xchg
or
push
ficomp
mov
mov
loope
push
cmc
jecxz
adc
ins
push
jb
out
cmp
pop
mov
repnz
repz
icebp
mov
sbb
jmp
add
gs
pop
imul
test
cmp
cld
nop
sub
sub
rol
gs
sbb
call
gs
fadd
pop
(bad)
retf
clc
in
mov
sbb
fnsave
cwde
jae
sub
dec
push
leave
sbb
add
mov
scas
inc
div
jecxz
jbe
int3
jl
mov
sbb
out
mov
sbb
movs
cmp
push
xor
gs
retf
out
fsub
cmp
inc
push
mov
xchg
sbb
aaa
popf
sar
mov
(bad)
mov
arpl
cmps
sbb
xchg
sbb
push
xor
ror
sar
add
xchg
mov
push
daa
push
pop
test
jo
retf
pop
mov
out
adc
and
xchg
xor
iret
out
sar
sbb
mov
push
inc
test
jp
daa
int3
clc
mov
adc
out
mov
repnz
ror
sub
in
ret
pop
sahf
add
adc
cwde
mov
mov
mov
inc
std
and
stos
and
data16
aas
pop
rol
pop
or
out
dec
or
scas
lahf
nop
pop
fiadd
xchg
aas
push
xchg
cmc
cmp
sar
mov
sub
mov
bound
push
and
xor
dec
mov
in
dec
mov
les
test
fnstsw
call
jmp
add
mov
loopne
outs
inc
push
test
hlt
adc
jb
stc
lock
call
rcr
inc
call
cmp
pop
xchg
sub
jae
jns
pusha
cmps
inc
sbb
nop
jnp
nop
div
icebp
mov
lods
mov
or
nop
inc
lock
inc
and
jge
jns
outs
loope
mov
dec
and
dec
js
or
xlat
inc
push
in
mov
sub
mov
(bad)
xchg
sub
xor
sbb
inc
fucomi
cmps
cli
iret
test
mov
jmp
or
pusha
call
in
ds
jl
mov
das
jne
pop
ss
cli
dec
xchg
jns
inc
cmps
fcom
dec
aad
or
push
in
pushf
hlt
xchg
and
xchg
into
lds
xchg
inc
push
mov
xchg
fnop
adc
gs
mov
outs
in
movs
xchg
int3
dec
in
sahf
add
sbb
call
or
mov
fwait
aas
add
push
nop
dec
push
imul
in
and
in
pop
pop
xchg
mov
dec
xchg
xchg
in
add
adc
cli
push
dec
repz
je
and
movd
inc
fwait
inc
inc
xor
cmp
mov
pusha
dec
lea
inc
jmp
mov
jae
add
xor
push
push
out
leave
xor
mov
mov
add
les
pop
jno
in
lahf
ss
mov
loope
xor
dec
mul
fnstcw
and
push
jnp
push
jbe
cmp
xor
mov
mov
sbb
pop
xor
xor
jmp
push
arpl
mov
in
pop
fbstp
arpl
xor
out
loope
xor
dec
xchg
ds
mov
dec
add
aad
cwde
mov
call
inc
mov
and
sahf
jb
dec
push
rcr
xchg
imul
jo
movs
xchg
jne
scas
jno
movs
pop
and
xor
jne
sti
jle
xchg
fldenv
and
and
inc
js
sahf
push
outs
in
mov
adc
fsubr
xor
pop
pop
in
iret
jns
pop
mov
data16
sub
outs
or
leave
rol
pop
sbb
fnstcw
sub
into
sar
jle
call
test
cld
pop
pop
dec
push
rcr
stos
clc
adc
push
xchg
aaa
(bad)
sub
inc
fmul
jp
movs
inc
xor
ins
sbb
mov
add
pop
mov
dec
retf
mov
aam
xchg
xor
xchg
cdq
ja
stos
mov
int
retf
and
inc
fs
int3
(bad)
sahf
fist
inc
loopne
dec
pop
jbe
dec
loope
popf
cmp
dec
push
pop
mov
popf
inc
mov
cmps
test
pop
xchg
mov
pop
das
jge
jecxz
mov
jl
ficomp
jbe
adc
mov
stos
test
fldenv
outs
addr16
stc
dec
(bad)
das
and
dec
xchg
mov
pop
out
or
pop
fwait
movs
ror
adc
adc
test
cmp
or
hlt
stos
ror
repz
cmp
dec
add
test
or
fst
sub
test
loope
loopne
cmc
pushf
sub
pop
sahf
jne
cmp
add
mov
mov
dec
xchg
lods
pusha
jle
shl
pop
aad
inc
or
mov
out
push
push
pushf
pop
jmp
enter
pop
xor
jae
jne
je
xor
sahf
fistp
ret
retf
or
sbb
and
mov
xchg
cmp
in
(bad)
xlat
adc
push
(bad)
mov
ss
push
xor
sub
and
stos
cmp
pop
cmps
sbb
xchg
xchg
(bad)
fisub
add
push
ds
cmps
call
jmp
push
lock
mov
xchg
mov
jnp
(bad)
jmp
mov
jge
dec
cmc
dec
xlat
outs
retf
test
imul
dec
sub
mov
bound
sub
jl
mov
sub
jmp
mov
scas
dec
mul
push
push
arpl
jge
push
cmp
push
xchg
mov
mov
dec
ret
cmp
dec
loope
int3
lds
dec
les
lods
adc
sub
fs
sbb
jnp
lds
cmp
cmp
movs
add
dec
test
xchg
xchg
dec
mov
jmp
mov
push
add
loopne
lea
xor
jecxz
mov
adc
pop
xchg
popa
adc
fisubr
xor
fcomp
sub
out
aas
xchg
lds
inc
call
cmps
test
xchg
xor
in
xchg
xchg
inc
sub
dec
jmp
or
idiv
arpl
push
and
cmp
repz
push
sub
dec
stos
pushf
or
je
sub
imul
sub
pop
mov
dec
sbb
enter
add
mov
sbb
jmp
std
lahf
pop
xchg
popw
outs
jb
sbb
mov
add
sub
cmp
(bad)
push
push
cdq
in
xor
(bad)
push
mov
test
xchg
and
call
aam
or
mov
fild
dec
lds
xchg
test
jl
xchg
inc
jnp
pushf
mov
xchg
or
pushf
lahf
ins
add
and
jge
or
retf
cdq
mov
mov
push
sahf
sub
repnz
pop
les
inc
enter
(bad)
xchg
adc
xchg
sbb
imul
adc
push
rol
ret
or
lea
push
xchg
popf
push
mov
std
add
or
out
cmp
pop
neg
jns
dec
xor
adc
test
outs
ds
xchg
push
cwde
adc
(bad)
out
pusha
cmp
push
or
pusha
mov
jle
mov
leave
mov
pop
jnp
fdiv
jne
in
ins
mov
cs
test
jbe
add
jle
pop
add
lea
jmp
xchg
mov
xor
jge
mov
ret
cmp
daa
xor
cmp
test
pop
push
pop
sbb
xor
imul
fwait
jge
fsub
lods
int
pop
pusha
mov
jbe
inc
push
aam
lods
sub
dec
in
push
movs
(bad)
xchg
shl
sbb
jne
pusha
mov
adc
jl
and
inc
gs
adc
test
push
lods
pop
mov
mov
jge
mov
les
mov
sub
out
push
push
addr16
ret
sbb
movs
gs
int
dec
mov
jg
popf
enter
xor
mov
jne
pop
fcmovbe
jne
mov
enter
(bad)
scas
xchg
and
and
ja
out
cld
mov
dec
popf
adc
out
push
ror
inc
retf
jb
in
fcom
ror
mov
ror
pop
push
ins
fcmovne
cwde
das
sbb
(bad)
lock
push
and
add
in
out
(bad)
push
xor
pop
mov
gs
xchg
jnp
sub
popa
es
cmp
cli
add
shr
call
icebp
and
inc
push
imul
in
repnz
das
aam
jl
xchg
fdivr
sbb
inc
adc
cmps
adc
sub
jmp
xor
fstp
jle
test
out
or
pushf
mov
sbb
jecxz
iret
loope
ret
inc
iret
test
adc
push
sub
mov
fsub
mov
pop
aam
cmp
dec
mov
fisubr
cli
jg
xchg
jp
jl
movs
bound
sbb
mov
push
gs
mov
pop
mov
outs
mov
or
enter
fld
fs
shr
inc
mov
cmp
fwait
mov
or
and
shr
(bad)
fistp
push
adc
jmp
pop
mov
xor
(bad)
cmp
mov
jl
(bad)
rol
xor
cli
jg
pop
loopne
push
jns
fadd
push
int
xchg
add
jns
or
jne
cmp
inc
sbb
fisubr
sahf
stos
jle
sub
pop
jg
popa
data16
in
push
pop
push
aaa
dec
and
cmps
push
fcomi
jp
mov
imul
dec
sahf
or
dec
jl
retf
or
sub
sbb
pop
sub
adc
ret
out
pop
clc
mov
xor
not
stc
xchg
or
repnz
lds
mov
sbb
cmp
ret
jp
ja
fstp
adc
add
fnstcw
xchg
sbb
cmp
push
pop
scas
fcomp
mov
lock
cwde
mov
sbb
daa
xor
adc
mov
imul
retf
cmc
in
sub
cmp
clc
sub
push
cmps
test
jmp
xor
lea
mov
push
adc
js
jmp
sar
inc
push
inc
pop
test
clc
in
adc
shl
lock
cmc
push
or
and
aam
mov
cli
js
outs
dec
mov
rep
fs
cmp
mov
addr16
adc
loope
icebp
ins
cli
(bad)
in
in
(bad)
and
mov
cs
xlat
push
mov
jno
cmp
call
push
(bad)
mov
add
jne
aam
retf
jns
lods
mov
jns
lock
pop
jmp
js
into
xchg
pop
or
stc
mov
stc
adc
mov
mov
cmp
jnp
mov
cmps
cmp
and
mov
adc
push
pop
(bad)
out
pop
inc
mov
or
pop
scas
dec
aad
xchg
outs
out
and
cmp
jae
outs
int3
adc
lock
jle
mov
aas
sti
icebp
mov
leave
and
jbe
add
xor
jmp
xor
jp
ss
dec
cmp
jbe
pop
test
(bad)
mov
js
test
mov
dec
aas
(bad)
jg
enter
call
mov
mov
out
imul
dec
sbb
dec
aaa
mov
mov
aam
movs
jmp
jmp
mov
mov
jo
cmp
lods
xor
into
cmp
inc
jbe
dec
dec
add
(bad)
sbb
cmp
jae
lea
(bad)
dec
add
out
xchg
lahf
sar
rcl
stos
push
jl
sar
inc
loop
or
shl
hlt
out
inc
data16
or
adc
mov
adc
xlat
pushf
icebp
(bad)
mov
xor
inc
enter
mov
mov
mov
ss
mov
xchg
push
imul
je
nop
gs
push
and
mov
out
(bad)
cwde
(bad)
icebp
lea
mov
scas
adc
mov
cmp
ficom
xchg
pop
stos
or
or
lahf
mov
aas
push
imul
outs
mov
retf
cwde
into
mov
addr16
das
and
movs
call
push
adc
dec
mov
mov
dec
jne
fs
xor
sar
cmps
mov
inc
mov
mov
mov
addr16
test
inc
adc
movs
in
ret
dec
popa
pop
imul
add
fsubrp
xor
(bad)
lods
pop
cmp
or
pop
lahf
aas
xlat
pop
fadd
inc
shr
test
pop
shl
mov
push
stc
imul
in
int3
mov
xor
rol
arpl
js
fmul
pushf
iret
xor
pop
jmp
fucomip
iret
jae
popf
int
enter
das
mov
and
jnp
mov
cdq
shl
xchg
(bad)
dec
dec
pop
pusha
and
sbb
scas
add
scas
cli
sahf
jecxz
jle
fwait
repnz
in
fwait
sub
inc
mov
ret
mov
sar
cmp
and
push
pop
jbe
mov
mov
sti
sbb
popf
pop
dec
dec
mov
mov
pop
mov
adc
pop
stos
movs
pop
xchg
mov
or
in
sub
or
ret
push
sub
div
jno
retf
and
ja
inc
ss
(bad)
sub
mov
push
fsubr
dec
xor
loope
outs
inc
adc
push
mov
ret
and
cmp
or
sub
xchg
xchg
add
mov
test
jl
mov
shl
retf
push
fwait
je
sub
lds
hlt
pushf
(bad)
sbb
stos
sub
mov
dec
mov
xchg
xchg
nop
popa
das
lock
outs
push
cmp
fwait
div
mov
fmul
push
mov
jae
hlt
cmps
repz
push
data16
lock
inc
out
jg
gs
xchg
(bad)
xchg
(bad)
and
inc
iret
outs
pop
popa
sub
lea
push
dec
dec
stos
mov
aad
jne
sbb
jle
adc
das
ja
mov
xchg
(bad)
sub
call
lds
push
and
or
push
fstp
or
sbb
mov
pop
repz
dec
fs
add
xor
or
and
jge
fwait
cmc
push
add
inc
in
mov
in
aad
pop
fsubrp
stos
iret
fcom
cmp
pushf
mov
push
jge
sbb
push
or
cmps
aad
cli
jnp
push
mov
mov
jmp
adc
das
out
jge
fcom
dec
cmps
fisub
inc
mov
add
dec
mov
bnd
cmp
xor
xchg
leave
cmps
(bad)
shl
adc
xor
loop
movs
cmp
dec
mov
pop
push
xlat
jnp
and
mov
popa
xor
jmp
add
xchg
jg
add
bound
mov
out
push
or
push
es
xchg
adc
aam
or
sbb
pop
retf
jl
out
imul
mov
add
or
pop
add
js
(bad)
in
sub
adc
mov
sub
xor
mov
(bad)
call
or
xchg
aad
movs
aam
sahf
imul
mov
mov
das
adc
das
loope
jmp
in
pushf
pop
ret
add
mov
adc
dec
dec
sbb
(bad)
out
sahf
mov
cmps
sahf
push
fwait
clc
nop
inc
or
jecxz
sub
popa
in
mov
add
in
shl
xchg
mov
jbe
push
push
les
adc
sbb
loop
push
les
loopne
dec
mov
xor
inc
xor
or
fldenv
inc
in
xor
cmp
loop
push
lds
sbb
int3
mov
loop
mov
mov
push
loope
dec
fcmovne
xor
rol
(bad)
xchg
cdq
xor
cmp
cmp
pusha
cli
pop
iret
test
jp
pop
das
mov
dec
xor
push
pop
mov
adc
inc
movs
mov
cmp
cmps
out
push
mov
arpl
pop
xor
arpl
and
add
sub
in
or
ins
test
and
je
dec
mov
scas
fs
push
dec
gs
test
popf
test
and
push
push
jmp
repz
xor
popf
add
push
add
sub
int
add
xor
arpl
test
sbb
xor
xor
sub
(bad)
repnz
fdiv
mov
cdq
call
sub
fist
enter
pusha
adc
loope
pushf
icebp
sub
ss
enter
push
mov
out
sbb
fidivr
add
stc
aad
std
inc
adc
test
fld
in
clc
maxps
xlat
movs
push
ret
fdivr
dec
fbstp
push
sub
jle
loope
aaa
mov
xchg
fiadd
mov
cmp
call
test
jns
in
push
xchg
test
xchg
mov
mov
call
or
push
repz
call
std
mov
jbe
push
stos
xchg
mov
std
adc
outs
xchg
sbb
arpl
cmps
sub
adc
hlt
xor
xchg
repz
jno
fsubrp
(bad)
arpl
xor
mul
bound
push
setno
arpl
push
mov
push
in
sub
mov
inc
push
xor
jge
popa
cmp
icebp
adc
shl
or
push
nop
jnp
pop
xchg
popf
xor
or
aaa
cmp
les
and
mov
std
outs
aam
aam
mov
fnsave
stos
cmp
outs
outs
dec
mov
arpl
outs
mov
pop
popa
fbld
(bad)
mov
sub
sbb
pop
add
mov
ret
fistp
aad
mov
mov
jo
(bad)
aam
xor
mov
enter
cld
(bad)
sub
xchg
xchg
and
add
pop
or
ja
(bad)
repz
int
rcl
lods
lea
test
test
lock
mov
shl
mov
jecxz
and
push
out
xchg
mov
cmp
fabs
add
out
jb
out
and
test
add
int3
jle
jns
and
mov
clc
cld
mov
push
shl
dec
push
sbb
mov
sub
outs
out
mov
enter
add
push
popa
popa
xchg
cmps
popa
cmps
add
mov
cmc
mov
cmps
test
push
sbb
pop
sbb
repz
in
fldenv
(bad)
arpl
shl
cmps
daa
loop
mov
test
js
cmp
mov
dec
mov
out
inc
jne
test
scas
cmp
pop
hlt
jp
jnp
out
sahf
jae
sbb
loope
dec
ins
mov
jg
loopne
(bad)
and
or
mov
cmp
jp
fucomi
jl
iret
rcr
jbe
dec
pop
jne
pop
lods
cmp
pop
sub
and
mov
dec
stos
xor
mov
fwait
and
cmps
or
sbb
add
pop
mov
push
mov
pop
sub
cmc
movs
inc
stos
jns
mov
repz
retf
push
pop
and
push
lock
inc
cmp
or
pushf
mov
cmps
fwait
or
sbb
xchg
fist
call
cmp
shufps
sbb
lods
xchg
push
repnz
div
movs
fdivr
(bad)
mov
out
xor
pop
scas
mov
enter
mov
jle
mov
repnz
mov
loopne
fwait
adc
(bad)
fsubr
test
xchg
sbb
(bad)
hlt
cmp
mov
sbb
adc
pop
mov
aas
idiv
imul
inc
bound
cmp
dec
dec
inc
cmp
pop
inc
xlat
in
(bad)
pop
sbb
mov
cmp
cmp
push
ret
jmp
movs
mov
inc
rol
xor
xchg
push
call
call
lods
ins
cmp
push
cdq
adc
ret
mov
dec
ret
ins
xchg
jns
int3
aam
daa
and
test
call
cld
mov
cmp
inc
test
push
sub
push
push
lea
clc
fmul
or
sub
icebp
push
dec
cmp
inc
jg
fwait
or
push
sbb
lods
push
adc
(bad)
push
jne
sbb
popa
pusha
cmc
out
pusha
push
(bad)
lahf
mov
dec
shl
push
mov
pop
cmps
sti
sti
push
xor
cmps
test
movs
test
movs
cmp
mov
lods
cmc
adc
daa
enter
out
push
ret
jmp
xlat
pop
mov
aad
sahf
test
or
ss
call
ror
imul
into
out
cdq
sbb
int
movs
mov
add
inc
cld
into
sti
push
mov
jecxz
jo
fcomp
(bad)
(bad)
and
fnstcw
cmp
test
fwait
ret
sbb
popa
mov
cmps
fisttp
add
pop
jmp
data16
test
dec
cmp
sub
clc
ret
xchg
shl
stos
sub
jbe
mov
hlt
xor
aaa
jns
pop
pop
jg
inc
sbb
xchg
lahf
ins
xor
daa
fwait
test
pop
inc
push
lods
inc
mov
cmps
repnz
icebp
sqrtps
ret
pop
xchg
jns
mov
arpl
fs
loope
jns
imul
inc
and
cmp
or
(bad)
adc
fsubr
cmp
jne
pushf
xor
arpl
lock
xchg
in
xor
sbb
push
xchg
cmps
pop
pop
std
or
add
mov
ja
lock
lods
ja
jg
mov
cs
push
jno
and
or
mov
(bad)
mov
(bad)
int
lahf
jle
mov
xchg
imul
xor
inc
inc
inc
clc
iret
fst
cmc
sbb
in
loope
dec
push
mov
movs
cmp
jl
mov
push
ret
cs
xchg
fcomp
pushw
jmp
sub
pop
das
test
lock
mov
jnp
mov
jbe
pop
popf
ret
jecxz
mov
gs
xchg
adc
adc
dec
aaa
jnp
mov
retf
pop
cmc
mov
mov
daa
sub
in
inc
mov
jbe
in
ins
psrld
mov
cmc
or
mov
xchg
ja
ret
rcl
repnz
jno
jne
jno
mov
mov
jnp
hlt
ret
mov
addr16
test
ror
or
fisubr
mov
in
dec
lock
jo
cwde
push
inc
sbb
popf
fcmovne
mov
mov
movs
xor
adc
movs
adc
xlat
cmps
or
sar
jl
adc
xchg
arpl
daa
aaa
sti
jb
into
loope
leave
jle
cli
mov
jb
push
movs
add
int
ins
sbb
xchg
aam
and
dec
push
cli
cmp
pop
jp
xchg
stc
cmp
es
fldenv
outs
daa
clc
pop
push
movs
dec
pop
inc
leave
cs
rep
cmp
and
jg
xor
mov
ffreep
mov
sbb
sar
xchg
add
sub
and
addr16
arpl
pop
dec
jns
inc
push
push
dec
aad
loop
sti
lds
mov
mov
push
inc
cmp
push
not
mov
jecxz
mov
aam
cs
mov
jp
mov
cmp
out
or
mov
jns
cmc
xor
into
xor
dec
call
mov
imul
add
push
movs
mov
push
pop
loopne
lock
mov
test
mov
out
sub
retf
inc
loop
dec
inc
mov
mov
mov
loope
inc
pop
sar
sbb
outs
ror
je
addr16
mov
(bad)
popa
pop
test
push
and
sub
mov
sub
xor
retf
dec
jle
es
mov
xor
hlt
sbb
sar
cwde
or
pop
test
jae
pop
js
push
out
jp
xchg
sahf
outs
mov
outs
cdq
ds
fild
adc
mov
inc
or
mov
ss
gs
inc
aam
pop
add
ret
pop
sahf
and
push
fisttp
mov
mov
fisttp
jne
repnz
lea
fnstcw
(bad)
and
bound
jnp
movs
aaa
imul
push
js
mov
or
jp
pop
sub
imul
xchg
adc
add
inc
or
std
jmp
or
or
mov
xchg
fcmovb
imul
xor
inc
test
daa
popf
jmp
mov
ins
cli
push
pop
sbb
push
cmps
sub
fist
inc
pop
or
jne
sub
xchg
jo
scas
cmc
lds
sub
xchg
inc
jl
sbb
(bad)
jmp
fstp
test
ret
cmc
ins
pcmpgtd
bound
test
div
cmps
sub
aaa
jne
test
(bad)
out
shl
xchg
and
adc
xchg
sub
in
sub
(bad)
(bad)
push
mov
mov
pushf
iret
xor
pop
(bad)
out
mov
fcmovb
ucomiss
cmp
stc
stc
cmps
inc
into
(bad)
or
aad
jecxz
push
mov
and
mov
ficom
jae
inc
jl
xchg
mov
das
dec
scas
inc
xchg
adc
addr16
jecxz
jne
mov
pop
ret
or
jae
leave
ret
mov
out
movs
ret
dec
jno
xor
sub
jle
mov
(bad)
js
test
dec
ret
jl
mov
loop
dec
sbb
fisttp
stos
aaa
test
lods
(bad)
add
mul
in
mov
push
inc
iret
jne
clc
or
(bad)
fnstsw
jg
jne
mov
jecxz
mov
repz
sub
mov
mov
aas
js
xor
ins
fisttp
mov
in
mov
sub
mov
sub
lock
xchg
icebp
cmps
mov
or
pusha
xchg
imul
movs
jecxz
pop
icebp
cmc
pusha
fimul
ror
adc
jne
popf
jb
neg
pushf
mov
mov
adc
call
stos
xchg
repz
stos
popf
add
stos
imul
(bad)
or
push
out
mov
ja
or
cld
inc
call
je
leave
imul
or
out
add
test
test
dec
jo
inc
icebp
pop
sbb
cmc
mov
fadd
test
add
sbb
cmp
xchg
mov
mov
mov
(bad)
adc
repnz
add
sbb
sub
fldenv
ins
mov
xor
jecxz
jbe
test
push
xchg
(bad)
xor
jge
inc
dec
mov
xchg
dec
fsubr
sub
mov
(bad)
add
not
or
shr
sbb
jl
daa
jbe
movs
fisubr
movs
add
cmp
inc
pop
stos
outs
mov
jbe
retf
pop
sub
fisubr
mov
mov
cmp
je
xchg
sub
test
inc
mov
faddp
in
es
xor
push
mov
das
xlat
into
sub
xchg
xchg
xchg
mov
xchg
xor
xchg
mov
xchg
mov
pop
cdq
sub
adc
pop
xor
push
adc
iret
test
or
aad
sbb
outs
ss
mov
dec
ja
out
retf
(bad)
retf
rcl
mov
in
das
mov
inc
les
xchg
lock
add
inc
mov
retf
iret
inc
aaa
push
add
jmp
mov
aaa
in
pop
dec
arpl
mov
mov
mov
out
adc
add
dec
(bad)
bound
jecxz
dec
fwait
pop
push
inc
mov
or
sub
adc
dec
inc
das
fisttp
ja
int
or
out
inc
xchg
les
test
adc
(bad)
xchg
in
imul
inc
xlat
jge
fcmovu
push
mov
inc
aaa
mov
sub
jmp
mov
pop
mov
push
movs
push
fstp
mov
gs
cmps
push
imul
scas
and
and
repnz
fist
mov
dec
hlt
outs
mov
pop
dec
inc
test
mov
rcr
jno
aad
mov
ins
js
and
sub
jmp
ror
pop
leave
call
adc
stos
push
out
ficomp
dec
loopne
jae
iret
xchg
loope
mov
and
in
icebp
add
xchg
movs
dec
adc
retf
call
ja
xchg
sbb
rcr
scas
stos
stos
fwait
psrld
ins
pop
push
mov
scas
sub
pop
mov
es
fistp
mov
stc
fld
cmc
xor
add
sbb
sahf
xlat
inc
xlat
ret
inc
pop
rcr
in
sbb
jg
stos
sbb
fiadd
retf
inc
nop
add
test
push
scas
sbb
shr
inc
faddp
sbb
aaa
pop
mov
call
dec
out
sbb
clc
add
call
adc
jae
int
shr
and
clc
xor
icebp
add
enter
aam
dec
adc
movs
xlat
add
push
aaa
lea
lods
popf
or
adc
enter
push
daa
fcom
push
ds
sub
and
clc
push
mov
push
aaa
leave
push
nop
push
ins
push
aas
ins
jp
mov
jae
jp
test
push
mov
jne
test
jne
dec
xchg
pop
or
outs
shl
dec
dec
dec
lods
int
pop
mov
popf
inc
mov
test
xchg
adc
xor
sub
jecxz
mov
sub
clc
mov
movs
and
xor
lds
pop
outs
repz
les
into
loopne
cdq
and
and
imul
push
and
push
mul
sbb
std
pop
jae
ins
sbb
mov
mov
sub
xchg
lods
dec
scas
sar
mov
mov
cmp
add
jo
push
(bad)
rcr
xor
mov
pushf
cmp
sub
mov
pop
mov
jne
pop
fs
xor
out
mov
jl
lock
ja
aas
add
cli
test
aas
or
loop
lock
mov
fisub
xlat
sti
cmc
int
(bad)
gs
les
xor
inc
mov
mov
push
(bad)
clc
mov
pop
mov
inc
(bad)
hlt
ret
mov
das
jmp
cmp
jmp
mov
(bad)
fistp
movs
mov
fadd
and
mov
inc
loop
jge
shl
out
xchg
(bad)
pusha
retf
outs
adc
clc
test
jge
cmp
sbb
fmul
in
lods
mov
pop
mov
into
stc
mov
sbb
cmp
and
jle
jmp
mov
sbb
or
xchg
shl
fsubr
retf
test
loopne
and
retf
xchg
add
ror
cmp
cmp
sub
mov
leave
adc
dec
lea
xchg
pop
xchg
xor
or
or
aam
rol
jge
jmp
adc
xor
dec
adc
or
inc
jg
mov
xor
pop
cmp
jbe
cmc
or
daa
ja
xchg
xchg
pushf
jnp
in
xchg
xor
pop
jmp
jmp
ins
adc
mov
lahf
sub
or
fs
pusha
retf
in
lock
xchg
movs
cli
pop
pop
loope
adc
loopne
cld
jns
push
leave
add
ficomp
scas
jp
cmp
daa
fcmovnbe
(bad)
and
in
in
imul
and
xor
push
mov
cmp
mov
xor
add
xlat
mov
ret
mov
sub
(bad)
xchg
(bad)
hlt
ret
mov
adc
sbb
or
or
add
mov
jecxz
popf
jmp
jo
fadd
inc
daa
mov
ja
jno
mov
test
pop
cld
push
shl
test
loope
sar
int
mov
test
sbb
lds
imul
and
scas
and
pushf
mov
into
push
daa
xchg
push
ret
xchg
or
or
fsubr
push
clc
loopne
add
mov
fstp
ins
aam
add
fiadd
cwde
xchg
mov
(bad)
scas
cld
in
(bad)
adc
pop
xor
gs
outs
add
jbe
scas
daa
popf
aas
stc
push
mov
mov
mov
mov
adc
les
gs
popf
popf
sub
mov
dec
sbb
(bad)
test
pop
cmp
test
es
cmp
mov
inc
popf
aam
aam
cmp
fisttp
rol
ss
repz
jecxz
fld
in
pop
clc
je
nop
xchg
push
int
pop
popa
add
or
mov
jge
and
cmp
shr
dec
or
cld
leave
inc
xor
push
jmp
push
xor
adc
sbb
cld
rol
cdq
inc
xchg
(bad)
xor
push
mov
lea
cwde
lock
sub
add
jecxz
ins
cld
movs
xchg
sub
dec
pop
inc
mov
es
xlat
cld
sbb
xchg
fs
push
push
shr
(bad)
into
jae
cmp
loope
ss
xor
cmps
fnstenv
js
mov
xor
pop
bound
lea
out
enter
fs
call
sbb
rcr
sahf
push
xor
mov
sar
scas
ret
shl
in
and
arpl
test
movs
dec
xor
std
call
xlat
test
in
fcomp
ins
or
mov
cli
mov
cmp
into
jne
xchg
cld
mov
jge
push
and
enter
nop
pop
sbb
mov
ret
(bad)
out
icebp
xor
jg
mov
arpl
inc
(bad)
mov
mov
clc
or
sbb
aam
pop
cld
inc
cmp
iret
lods
jmp
inc
stc
bound
sub
retf
ficomp
ins
mov
cmps
ret
sub
shl
inc
sbb
cwde
cli
add
jecxz
adc
mov
mov
xor
iret
or
push
xchg
inc
mul
(bad)
jecxz
pop
xor
sbb
dec
sub
sbb
int
loope
xchg
jb
fsub
daa
stos
sub
inc
in
fisub
add
pop
rol
jbe
push
pop
sub
inc
rol
cdq
addr16
and
ins
mov
jns
and
je
nop
dec
mov
js
inc
fisubr
scas
ret
sub
repz
pop
int
cdq
pop
in
mov
scas
fldcw
cmps
or
cmc
dec
cmps
fbld
ja
push
and
xchg
dec
jo
int3
cmp
int
mov
jb
into
mov
in
sbb
fmul
fwait
cmp
push
shl
jnp
cmps
push
pop
sti
or
rcl
xor
cld
stos
jmp
pop
outs
add
dec
mov
jne
or
aam
mov
inc
ret
out
pop
push
pop
xchg
jb
xor
aaa
jno
ins
test
or
mov
mov
mov
(bad)
loopne
call
jne
jns
push
push
in
xor
push
mov
mov
add
pop
inc
xchg
xchg
fdivr
rol
inc
daa
cmps
ret
repz
xchg
test
inc
xlat
repz
adc
and
stos
inc
or
mov
mov
psadbw
push
hlt
dec
add
jne
mov
xchg
dec
xchg
push
fsub
adc
push
leave
int3
test
cld
add
mov
(bad)
cmp
in
xchg
dec
or
and
mov
sbb
nop
shl
bound
in
repz
mov
mov
inc
test
xor
cld
daa
ins
pop
xlat
sbb
inc
jmp
or
movs
dec
std
cmp
ret
cmp
(bad)
pop
data16
sbb
or
test
xchg
outs
inc
ds
cmp
dec
les
mov
stos
retf
in
push
arpl
nop
mov
mov
mov
and
cmp
cmp
add
cmps
jbe
mov
out
ret
fisttp
movs
push
fwait
cwde
pmulhw
retf
cmp
jecxz
xor
sbb
add
outs
cmp
outs
adc
xor
sahf
(bad)
std
cs
neg
sub
cmps
dec
mov
cmps
bound
call
xchg
stos
repnz
mov
mov
sti
aad
hlt
xchg
jecxz
nop
lock
gs
push
sub
retf
push
jmp
fisub
sub
adc
push
int3
jecxz
add
adc
mov
ja
dec
push
xlat
jp
test
push
push
popf
pop
dec
dec
bound
inc
pop
jne
stos
test
pop
ds
pop
in
lods
call
fst
retf
sbb
retf
(bad)
cmp
jl
les
dec
outs
pop
mov
sbb
or
pop
ds
inc
push
and
inc
xor
mov
retf
int
loopne
mov
adc
sub
and
in
pop
sbb
loopne
enter
jl
fmul
mov
lds
arpl
popf
or
loop
and
cmc
(bad)
icebp
in
fnstenv
mov
push
xchg
rcr
push
or
xchg
(bad)
out
cmp
or
pop
icebp
cmp
jo
sub
dec
jp
sub
xchg
icebp
ins
out
pop
xor
dec
imul
or
hlt
pop
jp
inc
je
call
add
not
inc
and
outs
sbb
mov
inc
push
clc
fdivp
aas
mov
out
and
imul
gs
lock
jle
bound
mov
dec
dec
inc
jno
push
ins
(bad)
ret
retf
jnp
in
stc
xchg
call
scas
stos
xchg
ja
movs
inc
pop
push
rcl
in
sti
aaa
sub
in
xchg
sbb
jns
(bad)
repz
aas
mov
push
retf
xor
and
sbb
mov
nop
inc
mov
test
push
add
xchg
mov
jmp
mov
add
jge
gs
dec
cmp
or
jmp
std
mov
dec
xlat
lds
ins
inc
call
cld
push
xchg
add
fs
dec
adc
mov
lods
out
addr16
enter
sbb
or
dec
xor
jge
mov
out
mov
call
and
pop
xchg
ja
test
jp
xchg
sbb
in
cld
cmovns
fwait
adc
push
pop
sub
lods
ror
pop
cmps
jp
pop
sbb
add
shl
adc
hlt
mov
cmc
xor
mov
mov
ret
mov
or
movs
in
jp
enter
sub
loopne
jno
cs
in
xchg
pop
test
mov
aam
pop
or
mov
jecxz
dec
(bad)
retf
div
add
retf
into
stc
(bad)
pop
test
and
and
dec
sub
int
movs
mov
pop
(bad)
cli
cmps
mov
sub
cmps
pop
movs
stos
mov
imul
test
dec
ins
int3
mov
push
fistp
call
nop
add
push
shl
push
or
test
sbb
or
iret
fisttp
arpl
sbb
xchg
in
cmp
mov
push
in
pusha
movs
rcr
pop
sahf
neg
lahf
arpl
(bad)
loope
(bad)
sub
jb
push
pop
dec
je
fdivr
pushf
sbb
mov
jno
fidivr
std
(bad)
and
ss
lea
sbb
add
test
jb
push
test
aad
push
ret
popf
out
pop
sub
das
push
fcom
mov
int3
hlt
das
sub
in
mov
leave
jl
retf
adc
or
adc
mov
jge
inc
mov
pop
jge
cmc
xor
test
or
jmp
stos
movs
lods
mov
fs
mov
data16
xchg
add
cld
or
(bad)
clc
(bad)
xchg
mov
stos
scas
je
movs
adc
bound
mov
cmp
sti
arpl
pop
loopne
out
and
fwait
daa
and
dec
dec
sub
inc
shr
and
dec
inc
sti
mov
pop
lods
dec
sub
jl
aas
outs
and
xor
sahf
jae
mov
lds
adc
pop
cmp
push
mov
jmp
lods
xor
mov
aaa
cld
stos
retf
lahf
jmp
sbb
jmp
pushf
aad
jo
and
push
push
adc
add
mov
daa
xchg
mov
xchg
fild
xor
pop
cmps
mov
test
pop
cwde
mov
inc
ins
repnz
outs
aad
adc
add
mov
dec
popa
das
in
test
shl
shl
push
sbb
lds
(bad)
int
and
fs
push
mov
fwait
push
or
sbb
hlt
into
jmp
cmp
adc
jge
in
cmp
data16
sti
sbb
pop
bnd
jmp
xchg
test
fdiv
mov
mov
pop
sbb
and
test
mov
(bad)
nop
push
pop
data16
or
sub
inc
enter
push
xor
add
dec
and
(bad)
sub
ins
icebp
sbb
pop
mov
fisttp
mov
ins
xchg
and
popf
icebp
fsub
or
ret
jo
push
movs
xchg
cmps
pop
mov
popa
or
sub
mov
pop
dec
and
xor
aaa
sub
inc
pop
jnp
jge
lods
outs
test
sbb
fwait
cmps
or
(bad)
jge
xor
lods
(bad)
imul
pop
mov
and
movs
ror
mov
daa
adc
in
push
scas
and
pop
mov
gs
mov
test
mov
jns
pop
pop
mov
adc
add
xor
bound
popf
sub
in
mov
movs
fnstsw
out
jmp
ins
inc
sahf
ret
cli
and
fs
sbb
mov
mov
dec
jmp
arpl
outs
fs
fucomip
xor
dec
jae
pop
xlat
sahf
mov
cmc
not
dec
pop
cmps
fst
test
jmp
pop
or
xlat
and
inc
stos
and
hlt
(bad)
mov
inc
or
mov
call
out
inc
pop
mov
mov
lods
test
hlt
out
dec
and
mov
add
xchg
js
jmp
cmc
scas
fsubr
lds
cmp
dec
sub
js
cmps
clc
(bad)
fstp
xor
mov
loop
cmp
repz
push
mov
sub
mov
leave
add
sub
and
movs
mov
rol
out
or
mov
mov
push
rcl
and
clc
mov
(bad)
xor
call
jne
pop
call
sbb
sub
mov
dec
into
inc
add
movs
stc
or
xor
test
outs
call
xchg
sbb
pavgw
shr
cwde
jb
or
lahf
push
fcom
enter
ja
fist
dec
adc
stc
or
push
inc
outs
les
ds
fst
jbe
mov
dec
add
addr16
stos
adc
and
and
sbb
movs
popa
fisttp
popa
ss
push
mov
jecxz
push
outs
adc
(bad)
sbb
out
shr
add
dec
js
dec
test
int
jmp
loope
inc
or
fldenv
stos
and
repz
std
iret
stos
das
out
sub
inc
lock
jecxz
dec
inc
sbb
pop
or
retf
sbb
cli
retf
imul
in
jecxz
test
lahf
inc
jl
mov
test
add
mov
inc
stos
push
push
dec
jl
fisttp
faddp
dec
xchg
ret
adc
mov
add
enter
call
je
and
popf
and
ja
pusha
cmp
inc
cdq
add
xchg
xchg
mov
adc
jmp
outs
mov
ret
mov
ret
sbb
cmc
mov
mov
pop
xor
adc
mov
and
mov
call
add
jo
dec
lods
dec
xchg
sti
mov
sbb
in
fisttp
rcl
xor
cld
movups
sbb
loope
mov
add
mov
cdq
pusha
clc
jg
inc
test
mov
fisubr
inc
(bad)
ins
pop
(bad)
into
sbb
sbb
push
pop
mov
bound
test
inc
scas
mov
dec
xchg
aam
mov
xchg
pop
xor
adc
fnsave
jb
popf
mov
hlt
fidivr
cmc
jo
leave
add
retf
inc
rol
xor
pop
jnp
in
sub
out
adc
inc
mov
mov
jecxz
mov
imul
or
test
sbb
pusha
(bad)
cwde
mov
sub
outs
sbb
mov
out
cmps
push
stos
or
and
ret
sub
fidiv
aaa
fwait
sbb
or
ror
push
sub
jne
out
js
jne
add
pop
ret
rcl
es
sub
pop
push
scas
sbb
cmc
call
gs
inc
xor
cwde
xor
lock
dec
test
add
fnstenv
fild
fiadd
frstor
daa
in
clc
std
xor
ret
sar
rep
mov
add
inc
mov
sub
add
push
call
sahf
mov
mov
or
adc
mov
shl
sub
cmp
sub
mov
push
push
lods
mov
rcr
jb
lock
and
cdq
aad
popa
cmps
jo
sub
leave
or
(bad)
loopne
fild
pushf
outs
sqrtps
hlt
or
shl
jmp
addr16
adc
nop
jns
xchg
pop
mov
xchg
pop
pop
adc
(bad)
rcr
mov
out
je
sub
hlt
in
loopne
out
popf
or
push
gs
adc
xor
movs
mov
aam
sub
sub
fld
lods
xor
jle
out
pop
lods
cwde
fidiv
push
fmulp
xchg
pop
mov
retf
push
mov
xchg
iret
repz
sahf
or
ss
or
xchg
dec
sub
or
ret
cmp
add
and
movs
pop
xor
xchg
cli
sub
or
aad
push
pop
mov
cmp
push
shl
test
mov
jp
lock
pop
cwde
in
mov
icebp
push
test
arpl
lea
adc
pmuludq
pop
retf
inc
std
mov
rcl
mov
jnp
push
retf
rcr
jno
ins
mov
cmp
ja
mov
mov
jmp
sti
dec
rcr
lds
setle
mov
inc
int3
xchg
bound
fucomp
mov
out
mov
sahf
shl
mov
mov
movs
in
jnp
jmp
pop
mov
jl
adc
sbb
and
ficom
jecxz
mov
(bad)
popa
xor
enter
xor
cmp
add
or
ja
xlat
in
push
cmp
add
or
shr
es
inc
leave
adc
pop
adc
dec
fucom
adc
xor
sar
or
out
mov
mov
adc
int
out
aaa
retf
rcr
lock
add
and
mov
sub
das
mov
mov
bnd
(bad)
popa
jmp
movs
cmps
adc
inc
cmp
push
hlt
mov
inc
or
(bad)
sbb
imul
cmp
aad
xchg
daa
std
pop
cmp
xchg
add
mov
jmp
in
lods
cmp
fcomp
sub
sub
mov
mov
pop
pop
call
test
add
cld
test
sbb
and
ja
daa
stos
xor
retf
push
add
and
push
test
call
sbb
call
(bad)
xchg
xchg
add
cmp
xchg
imul
jno
jecxz
stos
rol
and
mov
and
or
pop
sub
sahf
ins
retf
pop
sbb
scas
rcl
sub
adc
mov
add
pop
cmp
retf
or
pop
jnp
xchg
aam
mov
lock
add
cmp
ins
or
or
dec
test
shl
xchg
or
mov
push
pop
pop
(bad)
out
pop
hlt
movs
test
rcl
fdiv
mov
inc
test
dec
scas
jno
mov
scas
sub
pop
xchg
sahf
leave
and
add
xor
dec
pop
jo
sub
(bad)
jns
ret
imul
jne
lea
out
or
lock
xchg
mov
jbe
stos
sub
pop
or
sbb
push
sbb
sub
aas
mov
das
jae
xor
lds
inc
pop
mov
(bad)
retf
ret
push
and
jge
(bad)
sar
inc
pop
icebp
popa
mov
nop
xor
or
stos
enter
xor
push
stos
cmp
xor
imul
push
bound
fst
in
nop
jmp
mov
std
adc
loop
add
fistp
mov
mov
sbb
aaa
mov
mov
shr
repz
stos
mov
loope
pop
add
retf
fbld
(bad)
xor
mov
mov
dec
mov
or
(bad)
push
dec
out
jns
cs
cmc
and
or
sbb
fistp
fbld
xchg
cmps
or
dec
jmp
lea
dec
std
(bad)
fdivr
retf
les
ins
call
push
dec
xchg
fdivr
and
arpl
pusha
push
fwait
out
xchg
outs
hlt
or
and
std
adc
push
and
jb
inc
test
sbb
inc
addr16
add
pop
jbe
adc
stos
dec
cli
jae
not
cwde
mov
mov
add
cmp
sbb
xor
cmp
nop
sbb
sub
ds
push
scas
mov
js
sahf
mov
sub
xlat
lods
inc
in
mov
es
movs
xchg
sahf
ret
jbe
push
aaa
sub
jb
ror
js
mov
cmp
lds
hlt
xchg
xchg
nop
sub
outs
add
aaa
xchg
mov
cwde
jge
mov
div
test
dec
jmp
cwde
dec
fwait
sub
js
push
inc
sbb
retf
repnz
icebp
bound
stos
cmp
pushf
and
dec
and
into
mov
movs
cmp
loop
imul
and
rcr
mov
mov
jne
adc
pop
iret
xor
in
pop
test
sbb
cli
mov
push
xchg
mov
scas
loop
and
pop
sub
fild
daa
dec
fs
adc
cs
repz
and
mov
test
scas
mov
mov
ret
push
xchg
push
retf
push
sbb
fcomi
sbb
rcr
pop
fwait
push
fidivr
mul
mov
xchg
shl
jo
or
push
loop
or
sub
(bad)
xchg
fsub
aam
push
retf
mov
pop
fs
xchg
hlt
call
jbe
pop
sbb
dec
daa
mov
(bad)
scas
outs
aam
fs
sar
lea
mov
or
pop
into
outs
aaa
movs
and
sti
shr
xor
mov
enter
pop
lahf
outs
sub
jb
(bad)
scas
loope
rcr
lahf
push
fsubr
inc
pop
mov
sbb
in
jecxz
xchg
cmp
(bad)
xlat
dec
movs
retf
lds
(bad)
pop
vcmppd
clc
push
inc
dec
jle
loopne
aas
(bad)
sti
xor
xor
stos
(bad)
loopne
cld
fcmovbe
inc
(bad)
cmps
scas
loop
imul
fidiv
out
rcl
lahf
mov
cmp
(bad)
dec
xor
imul
jmp
data16
and
mov
jnp
cmp
add
(bad)
das
sub
push
xor
pop
xchg
jmp
retf
fmul
jp
inc
mov
jbe
loopne
jb
push
xchg
adc
(bad)
jne
and
pop
sub
nop
fisubr
test
test
xor
sahf
ret
outs
in
mov
fs
cmp
cmps
mov
out
gs
lock
repnz
adc
inc
jl
dec
xor
jae
popf
ret
int
xchg
(bad)
inc
ss
mov
or
fmul
fidivr
repz
pop
cmp
inc
hlt
cdq
xor
xchg
pop
fst
jmp
cmp
call
stos
lock
ja
cmc
popa
adc
push
pop
pushf
sub
outs
mov
sbb
jne
fdivr
daa
fwait
cmp
inc
test
lock
mov
test
test
mov
ja
jbe
loope
rol
sti
daa
nop
jmp
in
mov
nop
fwait
sbb
int
(bad)
(bad)
mov
push
sahf
and
dec
mov
inc
or
push
sbb
imul
sub
fadd
pop
in
lods
sub
mov
mov
inc
sub
sbb
push
dec
mov
pop
and
iret
mov
loop
push
repz
mov
xchg
and
xlat
adc
(bad)
hlt
repz
test
pop
mov
cmp
lods
mov
inc
or
pop
pop
and
adc
mov
xchg
jb
and
pop
sbb
sub
daa
dec
stc
out
repz
fs
retf
fisttp
dec
sbb
add
add
mov
jecxz
out
push
pop
inc
pop
imul
mov
mov
fcomp
mov
sub
int
(bad)
mov
mov
sar
popa
push
or
add
sbb
lock
inc
sbb
adc
popa
and
imul
push
out
(bad)
out
jle
leave
mov
dec
es
and
dec
cwde
ret
sub
push
mov
repz
push
xchg
clc
call
fdiv
add
stos
pop
leave
ret
loopne
sbb
push
add
mov
mov
xlat
inc
sbb
iret
inc
inc
ret
jne
sub
mov
dec
stc
dec
xlat
sahf
or
mov
and
adc
test
adc
lods
pop
sub
and
jg
push
jg
mov
fstp
pop
dec
mov
pop
imul
loop
test
pop
pop
jo
jnp
ffree
xlat
out
xchg
pop
adc
loope
sti
mov
push
sub
push
in
sbb
xchg
jne
pop
push
or
cmp
pop
call
dec
lds
or
(bad)
mov
mov
sbb
jmp
cmp
std
push
mov
or
call
push
inc
sub
and
in
movs
xchg
dec
pop
dec
jns
add
mov
fbstp
push
adc
mov
push
lahf
je
dec
arpl
push
push
jno
mov
into
data16
fdiv
dec
dec
or
popf
cmps
mov
sub
jge
mov
inc
mov
adc
pop
and
rol
push
(bad)
sti
or
test
loopne
fidiv
rol
mov
ror
cmp
(bad)
fs
int3
out
div
out
and
sti
mov
jae
ror
std
adc
sbb
adc
int
ds
xchg
push
cmps
or
push
les
push
mov
mov
adc
push
add
fistp
mov
mov
jb
(bad)
xor
imul
jnp
xor
lods
adc
add
loopne
imul
cli
lock
pop
(bad)
aam
add
push
inc
lahf
adc
xchg
sbb
int
(bad)
lock
fst
xchg
pop
mov
and
adc
pusha
pushf
fwait
dec
push
arpl
xchg
adc
out
mov
jnp
fist
loop
shl
adc
lods
adc
xor
push
pop
or
mov
mov
int3
lods
pop
fstp
inc
and
xchg
jp
mov
out
xchg
(bad)
out
mov
jmp
scas
jno
and
pop
ja
xchg
call
sbb
mov
je
pop
adc
xor
cli
jg
jmp
leave
adc
aaa
push
mov
cmp
fisub
or
xchg
movs
push
int3
inc
push
jb
xchg
sbb
daa
jle
daa
pop
xchg
fdiv
dec
inc
mov
cmc
jns
adc
xor
int3
js
jbe
mov
add
les
inc
in
xchg
popf
push
lods
adc
push
mov
push
ins
jmp
and
xlat
fiadd
xor
push
push
xchg
ins
dec
bound
mov
in
mov
add
fnstsw
repnz
xchg
or
xchg
jp
mov
loopne
ret
movs
retf
push
jb
xchg
dec
jnp
aas
(bad)
std
ffreep
test
jnp
mov
pop
push
sub
mov
pop
push
(bad)
sar
ins
cdq
sub
das
fstp
ror
test
sub
xor
add
mov
sub
jmp
mov
sbb
pop
pop
jae
inc
adc
fisubr
mov
repz
fisubr
or
xor
fwait
push
adc
ret
jge
or
mov
add
jno
rcr
mov
adc
iret
jmp
mov
ins
jo
jne
sub
pop
xchg
cmp
sbb
jae
retf
sti
mov
das
hlt
cs
xor
inc
out
or
call
pop
bnd
xchg
jmp
lock
xor
stos
call
jo
fidiv
mov
retf
neg
push
retf
inc
jmp
xor
enter
(bad)
das
stos
jne
cmc
adc
ja
or
mov
addr16
push
and
rcr
add
mov
(bad)
mov
mov
movs
mov
ss
ds
or
mov
arpl
or
xchg
movs
test
movs
and
push
test
repnz
lea
out
pop
(bad)
lds
arpl
call
imul
(bad)
pop
dec
jl
bound
leave
movs
out
adc
retf
shr
mov
std
(bad)
push
mov
pop
mov
jae
xor
adc
out
mov
out
jmp
icebp
sub
mov
(bad)
lods
mov
cmps
test
inc
mov
inc
inc
out
cmp
test
out
adc
hlt
pop
xchg
add
repnz
jo
loopne
jg
ins
ins
xchg
pop
pushf
adc
inc
jl
icebp
les
and
jmp
scas
mov
sti
jbe
les
xchg
mov
shl
inc
pushf
call
into
push
push
pushf
cmp
sub
inc
loop
mov
test
sbb
add
push
fist
adc
aam
fisubr
pop
adc
add
sahf
lea
and
cmp
jl
cmp
push
cdq
mov
sahf
xor
pop
mov
pop
mov
cmp
xor
(bad)
adc
aam
jmp
ins
xor
xchg
(bad)
pop
jmp
push
ds
jp
and
push
into
sub
call
xchg
mov
ins
ins
in
and
into
fimul
out
mov
shl
int
mov
mov
xor
adc
aaa
fwait
not
and
cmp
mov
or
arpl
mov
inc
mov
movs
cmc
js
xor
call
je
call
out
stos
push
dec
inc
mov
and
les
and
in
adc
or
mov
xor
loope
pusha
cdq
xlat
popa
pop
xchg
mov
sbb
pushf
add
hlt
jae
loope
lods
ffreep
jo
or
push
jg
(bad)
xlat
(bad)
add
jg
jmp
inc
movs
push
mov
popa
inc
daa
add
lods
push
push
dec
xor
imul
xor
fdiv
es
jnp
mov
xor
xchg
sbb
dec
inc
(bad)
jnp
ja
push
dec
cli
in
pop
add
push
xor
inc
rcr
add
pop
mov
leave
jno
sub
imul
inc
cs
(bad)
jmp
ins
xchg
push
mov
mov
adc
cs
or
xor
cli
ja
pop
add
adc
push
pop
and
sub
test
movs
xor
retf
mov
test
cmp
dec
dec
adc
or
scas
xchg
in
inc
rol
and
shr
mov
imul
ret
fdiv
gs
rol
cmp
test
test
iret
sub
ins
add
mov
mov
ja
int
pushf
ins
test
movs
pop
xor
xchg
repnz
add
cli
inc
(bad)
sar
lods
push
dec
clc
test
xchg
leave
cmc
push
call
jb
outs
iret
cmp
mov
ss
add
sub
daa
mov
mov
js
push
js
pop
inc
popa
scas
rol
pushf
ds
xchg
adc
xchg
mov
les
ss
sti
fild
ss
enter
out
shr
cmp
addr16
cdq
pop
sub
jl
mov
fstp
pop
xchg
(bad)
inc
aam
out
xchg
int3
xor
mov
mov
xchg
hlt
mov
push
xchg
movs
call
or
dec
add
loopne
mov
fdivr
nop
lods
retf
ins
pop
push
mov
cmp
dec
or
cmp
jmp
add
shl
fsincos
inc
adc
retf
stc
das
pop
adc
mov
idiv
pop
push
aad
jmp
je
movs
ins
mov
out
jb
lods
and
push
das
fnstenv
sbb
retf
push
jne
out
jecxz
and
lahf
and
enter
jp
into
shl
popa
push
fcom
sub
xchg
push
mov
fldln2
push
or
dec
clc
xchg
dec
jne
bound
pop
sar
frstor
and
(bad)
pop
xor
cdq
mov
mov
call
mov
retf
push
clc
dec
sbb
add
adc
and
daa
xor
imul
jb
mov
jae
and
gs
jmp
lea
dec
test
push
pop
into
movs
std
cmp
movs
int3
lods
repz
movs
mov
xor
(bad)
dec
pop
cld
sub
shr
retf
sbb
cmp
push
adc
ror
fwait
es
xchg
cmp
adc
dec
(bad)
and
ffree
add
mov
sub
jne
mov
fdiv
loope
xchg
into
sbb
test
movs
inc
nop
mov
test
inc
dec
xchg
les
dec
(bad)
xlat
sahf
mov
and
pop
mul
inc
ds
je
cli
pop
push
adc
sub
lods
sbb
xchg
js
push
push
xor
inc
fs
inc
sub
gs
into
enter
jge
or
out
and
pop
jmp
push
outs
ins
jbe
and
pop
dec
add
retf
int3
test
xor
dec
sti
loopne
test
jl
imul
out
push
add
retf
xlat
das
out
push
add
fs
or
or
xchg
mov
sub
push
inc
cmp
jle
test
aad
scas
mov
clc
imul
adc
push
movs
add
cli
sbb
xlat
rol
out
push
mov
pop
in
jecxz
lods
gs
ja
ja
and
shr
popf
cmp
adc
lahf
and
cmp
push
or
push
scas
shl
xchg
and
cwde
icebp
dec
push
inc
push
data16
and
jae
sub
sub
push
xchg
and
fucomp
fcomp
xor
mov
xor
cmp
mov
push
aaa
jl
mov
pop
xchg
(bad)
iret
stos
dec
mov
mov
jns
es
out
repz
add
mov
jmp
jle
push
sbb
or
xor
pop
xchg
loopne
int
dec
jo
xor
lea
lock
test
imul
lahf
(bad)
aaa
(bad)
or
loop
inc
or
aas
push
sub
das
cmp
fdivr
loop
sub
mov
push
stos
mov
mov
xchg
loope
int3
add
fwait
jg
add
push
rol
clc
aaa
data16
aaa
xchg
xchg
push
jmp
mov
dec
push
int
sub
in
aam
je
loop
push
inc
cmp
cmp
mov
fistp
fcmovu
out
and
js
clc
sar
retf
test
test
ds
cmp
adc
bound
sahf
dec
xchg
adc
or
sub
lock
nop
mov
sub
push
ja
cmp
lods
loop
mov
xor
loope
jnp
(bad)
mov
cmps
mov
push
jmp
sbb
adc
sar
sbb
(bad)
dec
cmp
mov
mov
sub
mov
aaa
test
(bad)
push
mov
fwait
mov
xor
(bad)
aam
bound
cmp
mov
scas
loop
sub
mov
imul
pop
adc
jmp
jo
mov
or
mov
jne
and
mov
jge
push
xchg
jae
push
mov
sbb
inc
pop
stos
inc
and
mov
lock
loop
into
or
lahf
neg
pop
test
in
xor
sbb
mov
sbb
push
jne
scas
cdq
dec
mov
shl
bound
adc
xor
in
inc
pop
fcomp
retf
inc
dec
ds
and
sub
inc
and
in
les
cdq
jle
cmps
movs
test
aad
xor
push
popf
jne
jbe
mov
inc
add
push
pop
loope
mov
dec
mov
dec
cwde
push
fimul
and
cmp
sub
and
pop
stos
cmp
dec
test
pop
mov
fisttp
cmps
adc
std
adc
sub
fimul
jl
les
jecxz
xchg
scas
jg
xor
aaa
xchg
call
jge
push
rol
or
mov
push
outs
push
or
xlat
loopne
(bad)
fwait
mov
scas
es
and
in
xchg
push
cli
add
outs
push
fild
xor
cs
call
fbstp
cmps
or
xor
in
mov
leave
mov
inc
(bad)
mov
inc
adc
xchg
jp
mov
mov
push
adc
cld
call
out
mov
(bad)
jmp
movs
inc
sbb
mov
adc
addr16
mov
cmp
xchg
neg
dec
push
push
pop
mov
mov
cmp
add
ss
clc
inc
loop
aas
fsubr
sub
les
mov
jg
pop
pop
mov
and
jo
stos
or
inc
or
inc
inc
mov
mov
test
xor
fdivr
inc
mov
in
mov
and
mov
sar
js
jne
icebp
pushf
in
cmps
call
push
popf
jns
in
cmps
mov
(bad)
pop
mov
inc
or
imul
inc
hlt
jo
lods
dec
push
or
cmp
sbb
or
cmp
dec
(bad)
in
sbb
dec
jmp
out
adc
dec
ja
(bad)
fldcw
pushf
imul
push
or
lods
jns
loope
jle
jle
stc
lock
jl
push
and
or
dec
sub
push
cld
lods
cmp
sbb
or
jg
or
push
inc
and
stc
or
outs
fist
rol
retf
loopne
sbb
push
(bad)
nop
mov
pop
cmps
pusha
pop
mov
mov
pop
inc
mov
sbb
cmp
pop
les
add
jp
inc
push
pop
les
jg
lahf
movs
fistp
icebp
sub
and
stos
mov
std
pop
fs
nop
rol
arpl
pop
movs
jmp
pop
push
imul
mov
popf
lods
lea
xlat
jmp
stc
mov
adc
mov
jp
push
imul
pusha
stos
icebp
popa
scas
or
retf
dec
loope
add
pop
mov
xor
js
xor
and
ja
addr16
jmp
xchg
mov
nop
dec
jns
jne
sub
cli
xchg
(bad)
mov
xchg
movs
cmp
call
nop
push
addr16
ret
movs
jl
sti
fmul
outs
scas
(bad)
or
cld
dec
jo
pop
emms
mov
jno
iret
sbb
hlt
or
mov
sub
mov
or
or
pop
(bad)
pop
mov
pop
cmps
(bad)
sbb
cmp
adc
xchg
pop
pop
fimul
in
ret
lea
push
xchg
inc
imul
sub
pop
rcr
jle
std
pushf
dec
sub
and
mov
add
in
outs
xlat
es
add
mov
cld
cmp
xchg
pop
jbe
adc
pop
mov
push
std
xor
mov
mov
pop
xlat
test
js
fidiv
fidivr
mov
pop
add
loop
xor
xlat
jns
cmp
inc
in
xchg
lock
xchg
and
jbe
push
ins
(bad)
dec
mov
mov
xor
mov
pop
out
mov
mov
xor
cmp
inc
dec
mov
fbstp
add
pop
adc
and
stos
ror
or
fldcw
inc
inc
xor
dec
xchg
les
xchg
push
jmp
mov
leave
push
sbb
xchg
je
mov
cmps
enter
out
mov
xchg
aad
addr16
jbe
jle
(bad)
enter
pop
add
fiadd
in
jo
dec
fisubr
jl
or
inc
arpl
arpl
pop
inc
mov
fisubr
inc
push
xchg
jge
sbb
movs
or
call
movs
jp
jle
mov
or
pop
nop
push
or
mov
pop
popf
push
cmp
xor
sub
movs
or
loope
aas
aad
daa
adc
inc
gs
xchg
dec
das
push
shr
out
inc
xlat
in
pop
bound
dec
int
inc
(bad)
or
(bad)
and
xor
dec
out
sbb
add
sbb
(bad)
popa
mov
pop
addr16
xchg
sbb
outs
push
repnz
sbb
hlt
aam
cli
mov
aaa
mov
push
sub
pop
mov
inc
inc
mov
sahf
pop
addr16
lock
push
(bad)
adc
inc
in
fucomp
ja
scas
jbe
aad
in
jbe
and
lock
and
and
mov
adc
sub
cdq
call
adc
dec
xchg
add
inc
aam
jb
xchg
mov
outs
enter
mov
jne
push
cld
test
fisttp
sbb
cmp
repz
inc
pop
push
in
test
dec
push
mov
xchg
stos
test
add
mov
dec
ds
imul
xchg
push
int
ja
mov
push
add
dec
jne
inc
inc
lods
imul
mov
enter
add
mov
pop
mov
mov
icebp
sbb
xchg
push
sti
push
push
jae
cmp
push
or
xlat
adc
cs
lahf
ja
xor
int3
jno
or
pusha
hlt
or
lods
into
cmp
or
cmp
iret
fisub
(bad)
test
movs
and
loope
gs
pushf
sar
and
dec
sbb
ins
mov
jae
test
fsubr
inc
sbb
pop
out
xchg
outs
fdiv
popf
pop
ret
pop
out
sub
lods
sub
nop
add
js
sbb
inc
mov
dec
mov
adc
sbb
pop
(bad)
mov
retf
cs
xor
test
push
adc
mov
mov
gs
dec
sub
fisttp
sbb
mov
scas
sti
lahf
sub
cmp
mov
jp
mov
push
ins
mov
cld
xor
pop
push
push
pop
add
hlt
push
pop
fs
lahf
sbb
mov
push
fcomp
mov
shr
dec
call
xor
mov
mov
icebp
cmp
add
enter
sub
mov
in
mov
jne
push
pusha
push
sub
loopne
sti
aas
imul
push
inc
xchg
sar
popf
pop
sbb
mov
jle
pusha
mov
jmp
sub
or
dec
pop
fild
mov
adc
xchg
inc
in
pop
fdiv
jp
pop
adc
cmps
mov
or
push
dec
sbb
retf
xor
call
xchg
push
pop
push
loop
lds
add
ret
leave
inc
inc
and
mov
mov
je
or
adc
sbb
mov
pop
mov
mov
xchg
mov
nop
ds
cli
rcl
or
xchg
int3
cmp
daa
rcl
in
mov
jae
mov
ins
rcr
loope
dec
mov
and
mov
xchg
enter
mov
and
in
ins
jmp
arpl
test
(bad)
jecxz
aas
jno
(bad)
cmps
stos
mov
jns
cmp
mov
push
fiadd
out
sbb
dec
aas
arpl
add
push
outs
dec
cwde
outs
aaa
aad
inc
or
sar
(bad)
adc
imul
sub
sbb
or
push
push
jl
loope
shl
inc
fbld
das
mov
retf
in
inc
outs
push
xchg
sub
sbb
cmc
mov
test
repz
cmps
aad
mov
push
lahf
aaa
sub
inc
outs
mov
push
and
xor
sti
leave
sub
loop
loopne
stos
arpl
lods
push
inc
outs
xor
xor
add
into
dec
mov
cmp
je
inc
mov
(bad)
call
fyl2x
test
test
xor
(bad)
fcmove
stos
sahf
mov
jnp
xchg
cmps
sahf
mov
std
mov
mov
inc
and
pop
shl
lods
fcmovnbe
sti
cmp
mov
js
fwait
and
movs
out
mov
xor
leave
in
cmp
mov
mov
int3
or
sub
outs
sub
mov
inc
lock
and
ret
in
inc
add
test
imul
inc
mov
jo
xchg
sbb
push
xchg
in
dec
mov
fwait
and
mov
mov
jne
pop
jnp
push
fsub
test
and
js
ret
in
(bad)
es
mov
push
and
adc
cli
cmp
xchg
pop
inc
sbb
mov
inc
xchg
or
fnstsw
mov
movs
lsl
mov
out
das
jmp
cmps
cmp
mov
push
mov
imul
in
cmps
or
dec
test
es
enter
fmul
sbb
dec
fst
cmp
das
lds
jg
pop
les
rcl
ret
into
mov
xor
and
sub
sbb
cmps
add
jb
mov
popf
out
xchg
std
icebp
pop
and
loop
or
or
test
and
movs
mov
and
lahf
je
arpl
aam
xchg
push
cdq
adc
in
xchg
aaa
dec
mov
rol
in
je
movs
sbb
inc
rol
push
loopne
xor
gs
cdq
mov
je
je
or
sahf
mov
daa
pop
mov
adc
shl
mov
mov
adc
nop
ds
xchg
push
fidiv
push
mov
mov
cmps
ret
in
loope
push
or
inc
arpl
lods
scas
not
add
pop
and
retf
dec
dec
push
pop
(bad)
mul
sbb
pop
rol
inc
into
inc
lds
inc
nop
clc
mov
outs
sbb
test
add
jbe
or
xchg
test
xchg
repz
sub
xchg
push
loopne
add
into
fcom
cmp
dec
cmc
and
xchg
xor
jle
jne
(bad)
and
jo
pop
inc
stos
je
cmp
adc
mov
ins
push
adc
push
iret
inc
lahf
push
mov
xlat
jle
retf
mov
mov
adc
and
sti
inc
imul
mov
dec
add
jge
imul
call
retf
rol
loope
and
inc
and
jmp
test
repz
jecxz
js
jp
clc
iret
jnp
jb
loope
xchg
inc
mov
int3
mov
(bad)
rcr
outs
adc
enter
(bad)
sahf
aam
sar
repnz
pop
fst
retf
dec
ror
stos
pushf
xor
mov
ins
stc
jno
push
lea
arpl
mov
cmp
cwde
(bad)
adc
repz
les
push
mov
sub
mov
pop
jl
mov
imul
retf
fisttp
pop
or
(bad)
in
gs
sbb
xor
push
cli
leave
pop
jo
fsubp
rcl
mov
retf
cmp
sti
jb
fnstenv
dec
out
(bad)
adc
lods
fwait
je
in
nop
mov
ins
jne
push
out
lock
(bad)
mov
add
popf
das
xchg
enter
adc
loop
xchg
jp
in
fistp
mov
adc
leave
cmc
fcmovbe
push
xchg
and
fwait
sub
adc
xor
push
xor
cmc
mov
in
fwait
rcr
inc
sbb
adc
cs
inc
push
and
sbb
push
iret
mov
sbb
mov
jb
adc
out
addr16
dec
jne
inc
and
cmps
cmc
jo
out
and
xchg
jge
hlt
outs
mov
mov
add
cmp
ret
xchg
mov
push
sahf
icebp
shr
fsin
mov
jmp
test
pop
cwde
jb
loopne
sbb
push
and
dec
mov
out
and
shr
xchg
ja
sub
or
call
jo
lahf
mov
cdq
aad
sbb
jle
call
scas
and
nop
adc
arpl
outs
lds
gs
es
jb
xchg
mov
stos
push
jns
or
jmp
jo
out
mov
hlt
mov
aam
adc
ret
and
mov
shl
int3
rcl
jb
push
ss
aam
out
outs
or
repnz
(bad)
loope
mov
lock
stos
mov
mov
mov
lods
sub
or
int
push
jmp
dec
lods
push
inc
(bad)
ins
stos
lds
mov
inc
pop
gs
add
xchg
mov
shl
mov
rcl
push
shl
and
shr
stc
xchg
cmc
mov
jp
iret
mov
mov
mov
xor
cmp
or
sbb
clc
dec
cwde
sbb
ror
push
(bad)
les
sub
outs
or
xchg
and
stos
mov
jmp
(bad)
xchg
cwde
jne
(bad)
ret
jno
mov
push
repz
dec
add
dec
or
xchg
jge
mov
xor
mov
(bad)
pop
mul
call
pop
mov
mov
dec
sti
ins
les
sbb
mov
data16
xchg
jle
xchg
mov
xor
add
mul
lea
push
aam
cli
loopne
loop
jb
imul
sbb
int
fdivp
sub
cli
dec
and
adc
inc
xchg
mov
jns
or
sbb
ret
pop
(bad)
aam
mov
adc
mov
stos
dec
mov
jmp
shl
mov
std
outs
pop
test
sbb
out
and
movs
das
xchg
xor
and
outs
add
mov
push
cmp
mov
jns
outs
das
les
and
dec
mov
jae
adc
inc
out
imul
stc
out
cs
xor
cmp
mov
(bad)
push
pusha
aas
addr16
mov
mov
mov
lods
shl
xchg
cmp
inc
clc
int
ror
repnz
shl
mov
mov
lea
push
xchg
shr
dec
not
sub
jb
xor
loopne
and
sbb
loop
sbb
sbb
mov
mov
pop
lds
retf
or
mov
fs
call
bound
mov
shl
adc
and
push
mov
cmp
std
imul
ror
rol
lahf
lods
xchg
icebp
mov
cmc
xlat
jne
inc
xrelease
dec
dec
bound
jl
push
push
fldcw
sub
retf
xor
sub
sub
movs
cmp
add
xchg
sbb
test
sar
push
mov
sbb
and
jmp
icebp
mov
adc
xchg
cld
mov
and
ins
sub
xor
out
ror
mov
add
aam
not
jb
sbb
mov
xor
pop
ss
mov
mov
or
ret
pop
arpl
fiadd
mov
test
push
jnp
fstp
fwait
das
pop
repz
cmp
dec
ret
iret
and
popa
add
sbb
lods
gs
movs
xlat
iret
xchg
mov
pop
dec
int3
and
bound
or
mov
mov
cmp
(bad)
push
dec
mov
mov
sub
inc
fidiv
fs
(bad)
imul
ret
fdivr
hlt
push
and
sub
popa
push
in
(bad)
cmp
xor
xor
xchg
inc
cmp
mov
retf
shl
scas
movs
xchg
cmp
ret
pop
xor
dec
xor
ucomiss
jne
sbb
adc
das
xchg
cdq
cs
cmps
jbe
popf
xchg
dec
es
add
xchg
int3
xchg
sbb
imul
arpl
call
add
dec
je
jmp
pop
mov
imul
xchg
inc
ret
cwde
ud0
or
outs
and
lods
ret
not
call
xchg
xchg
push
sub
mov
fsub
jl
mov
hlt
jnp
mov
shl
sbb
dec
int3
xlat
fucomi
xor
enter
fidivr
stos
inc
push
jb
pop
lea
dec
inc
imul
cmc
and
and
pusha
pop
ins
jmp
scas
jl
lahf
imul
mov
xchg
xchg
dec
dec
test
adc
mov
pop
cmps
stc
add
lea
lods
add
pop
jmp
loope
inc
mov
mov
shl
adc
mov
loopne
add
aad
imul
mov
ins
mov
cmp
add
sbb
add
imul
mov
out
cmps
mov
pop
jmp
(bad)
and
sar
jle
sbb
sub
push
inc
pushf
repnz
nop
retf
fdiv
mov
push
dec
xchg
or
inc
test
fwait
jbe
mov
pusha
and
mov
leave
fcmovbe
out
and
cmp
mov
pop
xchg
jg
cmp
jb
sbb
and
inc
or
push
sbb
mov
ss
les
repz
aam
or
jns
in
call
fwait
(bad)
sub
mov
sub
enter
inc
or
push
pop
jnp
pop
adc
movs
hlt
push
mov
ins
jge
adc
fisubr
pop
mov
xchg
cwde
or
iret
into
xor
push
cmova
dec
adc
adc
cld
and
and
sar
xor
inc
sti
mov
gs
push
push
sahf
or
pop
xor
imul
push
sub
and
sahf
xchg
loope
inc
add
stc
les
jecxz
fcom
(bad)
adc
ins
cs
sbb
sti
(bad)
stos
dec
pop
and
pop
and
cs
cs
mov
push
xchg
fs
int
out
cmp
mov
shl
test
push
loop
cmc
cmp
rcr
es
pushf
xor
das
mov
call
push
test
jmp
cmps
adc
mov
mov
adc
dec
sub
cmp
je
dec
push
aaa
xor
adc
(bad)
jge
ret
fwait
inc
adc
js
adc
ds
jp
adc
into
mov
add
mov
jg
iret
jns
pop
lahf
and
ins
mov
test
push
mov
mov
mov
inc
dec
mov
fstp
sbb
or
scas
jecxz
push
sbb
mov
bound
lea
cmc
add
leave
daa
inc
push
inc
sti
imul
pop
mov
test
mov
es
jo
int
add
sbb
repz
pushf
push
jmp
mov
mov
comiss
mov
sbb
ds
aaa
dec
out
dec
das
lea
pop
call
mov
stc
les
or
push
cs
adc
jl
lahf
sbb
popa
mov
leave
add
sub
adc
push
or
dec
jle
mov
xlat
xor
ja
test
mov
sub
addr16
enter
mov
mov
dec
test
jns
jbe
mov
xor
push
dec
xchg
(bad)
imul
push
xor
sub
xchg
jge
sbb
add
sbb
call
xor
das
in
retf
adc
xchg
cmps
ret
sbb
add
xchg
frstor
jnp
pop
mov
push
shl
push
mov
sar
cmp
popa
adc
dec
retf
mov
sbb
sbb
mov
out
out
dec
xchg
bound
fmul
imul
push
outs
cmp
loopne
rcl
cmp
adc
sbb
(bad)
jbe
sar
pop
mov
jo
popa
cmp
push
sub
cmps
mov
sub
and
fisttp
mov
push
sbb
jbe
mov
sbb
and
adc
and
dec
lods
(bad)
int3
xor
sar
dec
mov
outs
popf
out
dec
xor
neg
out
and
aas
rcl
xor
xor
outs
push
xchg
jle
out
cmps
dec
jae
(bad)
jae
jae
leave
into
inc
stos
push
and
inc
adc
sub
cli
addr16
das
adc
into
fcomp
(bad)
cmp
clc
jle
popa
cmp
adc
sub
jmp
loope
pop
push
or
pop
cmp
popa
or
and
or
cmc
add
jecxz
dec
call
test
mov
les
fisubr
sar
add
pop
sbb
push
inc
pop
rep
test
fistp
out
inc
xlat
mov
pop
faddp
pop
jp
jge
js
popf
fbld
dec
int
mov
inc
xchg
popf
add
cli
inc
and
jl
hlt
dec
fwait
mov
and
add
mov
cdq
ja
data16
mov
jp
push
xor
lock
pop
call
push
test
(bad)
add
lods
mov
int3
mov
imul
xor
ja
or
jmp
cmc
sbb
data16
(bad)
ds
mov
mov
ins
icebp
jnp
test
adc
cmc
sbb
pop
cwde
and
mov
movs
addr16
xor
loop
scas
rcl
repnz
inc
es
xchg
jo
and
imul
lods
or
pop
mov
mov
or
sub
std
pop
xchg
push
mov
fidiv
iret
mov
sub
ss
push
pop
jae
test
out
inc
pop
cmp
das
jecxz
adc
loop
cmp
lods
shl
loope
add
xor
xchg
or
xor
into
add
pusha
out
(bad)
mov
push
ins
(bad)
pusha
push
or
xchg
add
dec
inc
xor
(bad)
inc
jmp
hlt
xchg
sbb
pop
mov
movsx
xchg
sbb
inc
int3
jg
or
mov
push
fisttp
or
mov
pop
xchg
dec
movs
jmp
mov
mov
fnstsw
daa
mov
ins
xchg
sub
dec
repz
je
mov
mov
gs
fdivr
fisttp
mov
jge
mov
call
lods
arpl
rol
adc
jb
sub
bnd
scas
fiadd
mov
int
je
(bad)
in
jno
test
pop
xor
sbb
sbb
mov
xchg
cwde
mov
(bad)
popa
dec
dec
cmp
mov
data16
div
stc
pop
(bad)
outs
lods
test
sbb
test
dec
loope
dec
ret
gs
inc
sti
fidivr
pop
lahf
add
inc
jg
enter
inc
into
mov
out
scas
pop
pop
fild
jle
nop
aam
cli
js
dec
mov
dec
call
mov
push
enter
(bad)
pop
mov
pop
xor
and
jnp
jg
repz
fild
sub
push
cmp
and
int
ins
cs
loop
out
rcr
loopne
inc
sbb
add
fstp
push
addr16
fist
jno
call
mov
scas
sub
sub
inc
push
jne
test
jb
inc
lea
mov
mov
cwde
inc
jo
(bad)
push
repnz
fwait
pop
mov
mov
xor
lock
mov
pop
mov
scas
pop
test
mov
xor
aaa
cmps
test
inc
ins
retf
xchg
xor
mov
inc
clc
push
adc
and
sub
mov
dec
xchg
test
rol
lea
out
xor
mov
cld
stos
imul
repnz
scas
mov
sbb
std
xor
inc
lods
and
cli
lds
out
xchg
repnz
mov
outs
jbe
fcom
ss
push
or
out
shr
test
inc
call
arpl
push
(bad)
stos
nop
mov
(bad)
xchg
lea
cld
sahf
outs
icebp
add
out
sbb
mov
shl
lods
mov
push
pop
sub
mov
test
push
stc
sub
pop
aam
or
xor
loope
enter
xabort
or
pop
pop
outs
lods
mov
cmp
jmp
int
dec
cmc
test
add
loope
aas
ja
lock
aad
jmp
push
inc
xchg
fwait
push
xor
jno
loopne
stc
add
and
pop
xchg
dec
xchg
es
das
cmp
cwde
neg
fidiv
enter
or
pop
ror
dec
mov
and
or
xor
cmp
xchg
icebp
adc
int
test
sub
js
arpl
lds
shl
js
in
popa
das
sti
and
div
dec
imul
jmp
mov
outs
scas
jge
mov
mov
push
and
push
add
add
sbb
aad
add
mov
fstp
(bad)
aad
or
(bad)
nop
sub
les
test
xchg
(bad)
sahf
es
not
push
pushf
mov
dec
cmp
sbb
fisubr
jne
inc
cmps
pop
cmp
test
test
cmps
call
xor
pop
mov
sub
jnp
add
xchg
in
jns
int3
adc
or
scas
test
cmp
fwait
pop
mov
(bad)
fidiv
adc
add
sbb
ss
xchg
out
ficomp
mov
jecxz
add
fisttp
lods
lea
fldenv
retf
sub
ja
mov
fxch
das
and
lods
das
sbb
cmps
ret
gs
adc
fnsave
pop
mov
xlat
cmp
cdq
push
sub
lock
lods
ror
fcomp
adc
add
cld
fs
and
xchg
pop
mov
cmp
push
or
xor
test
in
inc
mov
ja
dec
add
ins
mov
cdq
xchg
pop
xchg
repnz
adc
sbb
and
dec
in
inc
sbb
ss
cli
(bad)
xor
push
imul
cmps
lea
jns
mov
xor
sub
mov
inc
ins
and
mov
cs
sbb
ret
xchg
(bad)
jns
xor
sub
or
sbb
jle
and
or
aaa
cmps
xor
cld
scas
xor
mov
mov
sbb
idiv
jle
cmp
pushf
in
in
imul
aaa
xor
fcomp
rcr
fdivr
jnp
ds
dec
xchg
hlt
sub
pop
push
mov
pop
int3
pusha
jae
out
add
mov
call
lock
jne
rol
ja
and
dec
aas
cmp
pushf
ins
and
adc
shl
xor
stos
xor
bound
dec
add
pop
mov
adc
mov
mov
or
in
cdq
js
ja
or
xchg
(bad)
sti
loope
iret
mov
push
xchg
sub
or
cmp
inc
or
rol
(bad)
fld
addr16
cmp
jl
(bad)
out
cli
adc
adc
lea
icebp
int
dec
jo
test
pusha
xor
or
popa
out
dec
out
cdq
sbb
ja
into
stos
fnstcw
push
dec
mov
js
and
adc
sub
push
sbb
cmp
cwde
xor
mov
sti
int3
mov
add
sbb
push
push
pop
dec
or
fbld
and
add
xchg
scas
es
je
push
cmc
push
sub
dec
and
fstp
inc
popf
loop
inc
mov
mov
ss
xchg
and
xchg
shl
adc
jb
mov
add
xlat
cmp
sub
call
fst
and
inc
pop
sbb
push
fnstsw
mov
stos
cmp
pop
mov
jne
pop
clts
cli
push
lahf
jecxz
aam
inc
push
inc
scas
stc
icebp
movs
popf
cmps
in
cmp
inc
inc
dec
pop
xor
jp
add
popa
cmp
xor
inc
repz
push
aaa
sub
fxtract
push
(bad)
loope
outs
adc
movs
fsubr
sub
and
bt
(bad)
cmps
adc
pop
mov
or
cdq
stc
stos
and
in
cdq
(bad)
cmp
and
ins
(bad)
lahf
jecxz
jo
mov
pop
frstor
add
jne
cmp
cwde
cs
dec
lods
scas
outs
stos
mov
inc
mov
push
es
fst
dec
or
fild
fdivr
push
sahf
dec
push
or
pop
retf
stos
sbb
shl
xor
jne
clc
cld
pop
aam
sub
mov
mov
test
mov
inc
out
cmps
xchg
sub
cdq
lods
add
(bad)
cmp
push
cmp
pop
adc
sub
stc
sub
cmps
mov
stc
shl
mov
stos
lahf
xlat
inc
jae
push
jmp
mov
inc
scas
lea
loopne
movs
loope
push
cli
sub
jmp
xor
xor
ror
pop
fistp
xlat
and
mov
mov
inc
and
jns
mov
in
jmp
and
add
(bad)
pop
test
cmp
das
adc
jge
dec
fidivr
or
ret
fnsave
sbb
aas
cld
dec
or
imul
jge
pop
mov
cmc
jp
hlt
xchg
(bad)
and
jo
call
(bad)
and
scas
out
xor
stos
cmps
shr
jnp
aam
sbb
lods
stos
pop
ret
jmp
xor
cmp
call
adc
loope
push
in
loop
int
je
mov
inc
sub
sbb
(bad)
mov
sbb
cmp
mov
xchg
mov
pop
std
sbb
rep
in
add
fwait
inc
add
ins
push
push
push
cld
jle
push
and
lods
hlt
dec
arpl
test
push
rcr
(bad)
push
push
cmp
stc
icebp
dec
jmp
nop
dec
enter
call
jl
outs
repz
rol
jmp
ret
jecxz
mov
or
adc
retf
movs
fidiv
sub
cmp
inc
popf
sub
adc
mov
mov
add
jge
xchg
add
aas
or
cs
movs
fwait
stos
in
idiv
in
sbb
mov
pop
xchg
cmp
nop
mov
jecxz
movs
xchg
addr16
test
add
mov
ins
dec
fbstp
xor
es
mov
jbe
imul
cmp
in
jae
shr
rol
or
in
es
enter
data16
and
xchg
push
loopne
enter
stos
stos
cmp
jmp
and
rcl
es
(bad)
mov
popf
in
push
sahf
cmp
push
jle
jns
add
add
xchg
shl
out
enter
push
jbe
leave
sub
repz
outs
pop
xlat
imul
dec
mov
es
loope
adc
sub
cmps
adc
imul
dec
scas
fisubr
inc
mov
movs
lea
cmp
fdiv
stos
inc
push
mov
test
jecxz
mov
jns
lock
mov
mov
loopne
out
test
push
ja
sub
dec
icebp
gs
jnp
sti
or
inc
retf
int
inc
cmp
sub
add
and
int
aaa
xor
sti
cmps
or
xor
inc
mov
fild
mov
jl
push
lahf
dec
push
push
int
inc
xchg
and
repnz
dec
stc
in
idiv
imul
dec
push
mov
cmp
stos
pop
outs
fs
adc
mov
mov
(bad)
stos
shl
aaa
push
clc
lock
xor
adc
add
push
jmp
in
jmp
inc
movs
and
sbb
xchg
test
movs
adc
adc
sub
movs
bound
jno
push
in
int
test
mov
mov
leave
pop
sub
adc
xchg
aaa
sahf
jl
arpl
mov
pop
shl
test
ins
(bad)
add
ds
cmps
js
xchg
mov
mov
into
cli
leave
jnp
sub
push
test
scas
test
inc
test
adc
cld
mov
es
pop
push
lea
bswap
(bad)
aas
mov
sub
mov
(bad)
lds
inc
and
iret
shl
sti
jg
cmp
int
xor
mov
xor
loopne
pop
stos
xchg
jge
pop
and
cs
das
mov
inc
int
pop
mov
or
add
jnp
adc
outs
mov
xor
mov
lahf
sub
xor
je
jnp
or
or
std
(bad)
and
push
nop
mov
int3
adc
sbb
inc
mov
(bad)
pop
xor
js
xor
mov
xor
or
jns
fcomp
loop
dec
and
or
xchg
scas
xor
and
sub
push
adc
and
adc
and
enter
pop
mov
aad
add
jl
mov
daa
leave
jno
add
sbb
fs
popf
mov
data16
outs
mov
call
frstpm(287
mov
push
fstp
in
call
scas
pop
mov
je
adc
and
rol
mov
out
fcomp
mov
dec
rcr
inc
outs
inc
sbb
adc
dec
or
test
mov
rol
pop
jo
push
sbb
push
gs
mov
clc
cs
sti
ins
bound
dec
pusha
std
adc
lds
adc
scas
sbb
call
push
sti
je
mov
test
cmc
cmp
add
inc
mov
sub
retf
sub
dec
and
push
inc
mov
nop
inc
stc
out
cmps
dec
ret
les
sub
stos
push
add
pop
inc
(bad)
stc
movs
mov
jns
test
push
add
push
mov
and
xchg
pop
stos
pop
and
movs
adc
mov
(bad)
loopne
jl
xor
sub
inc
add
into
outs
xchg
and
sub
jns
enter
or
inc
pusha
xlat
pop
scas
in
adc
pop
mov
xor
xchg
retf
cmp
stc
sub
cmps
test
add
call
xchg
adc
cmp
sub
ins
mov
retf
out
lods
jge
push
(bad)
adc
mov
inc
sahf
push
xchg
mov
cmp
push
in
sub
xchg
call
pop
and
cmp
pop
and
pushf
sbb
push
pop
adc
(bad)
addr16
cli
call
jle
loope
or
gs
ins
sub
dec
and
test
ins
xor
dec
mov
sti
arpl
aam
cli
sub
or
sbb
sti
cs
xor
jmp
inc
fisub
adc
add
ror
jmp
data16
cmps
mov
push
call
and
push
sbb
jnp
adc
pop
es
xor
mov
mov
cmp
ficom
call
ja
mov
jmp
mov
xlat
stos
push
or
gs
mov
sbb
pop
int3
sbb
push
fld
call
dec
adc
jnp
call
outs
int3
fidiv
jno
push
dec
jle
js
sub
sub
jmp
stos
cmp
comiss
ja
xor
in
es
data16
cmps
and
mov
adc
in
cs
call
(bad)
js
movs
pop
pop
into
add
adc
adc
fisttp
cdq
shl
or
xlat
or
inc
repz
push
mov
sbb
sti
in
or
jl
pop
push
sar
jge
add
lahf
cmps
xchg
fsub
jmp
cmp
and
mov
inc
enter
mov
psubw
sbb
or
inc
jne
sub
jo
bound
ret
std
aad
ss
test
call
adc
bnd
cmp
jo
cwde
xchg
gs
xchg
jb
ds
arpl
pop
xor
iret
cmp
mov
inc
and
outs
jl
aaa
jge
mov
push
ret
add
cdq
mov
mov
es
in
frstor
fnstsw
cmp
adc
inc
cmps
int
ret
mov
stos
adc
sbb
add
dec
jp
push
(bad)
std
inc
sub
dec
je
sub
cmp
popa
fisub
mov
imul
std
push
into
(bad)
loope
pop
or
repnz
mov
mov
mov
call
jno
jno
movs
call
jmp
xor
jo
es
pop
data16
and
cs
dec
lods
cld
mov
stc
movs
jo
jp
aad
inc
push
in
popf
xor
fsub
repnz
imul
pop
jmp
loopne
mov
sub
mov
push
rcl
inc
pop
push
mov
test
dec
pop
stos
cmp
movs
add
int3
jnp
call
push
cli
xchg
jp
or
mov
push
add
fwait
retf
pop
loopne
dec
test
adc
sbb
xor
jp
ss
jge
adc
mov
shl
dec
push
jo
mov
fldenv
pop
mov
push
retf
stc
mov
ins
cmps
movs
ins
xchg
stc
xor
jmp
out
mov
sti
inc
int3
jnp
cmps
call
aad
je
mov
daa
loopne
and
or
test
xchg
lds
ins
ins
ret
scas
cmc
popa
sub
lds
outs
xchg
add
jl
mov
jp
in
fldenv
push
sbb
mov
pop
push
and
adc
mov
loope
or
dec
aas
mov
loope
out
push
cmp
mov
push
pusha
cld
lods
mov
(bad)
ds
hlt
jge
xchg
ss
jno
jmp
sbb
add
sbb
pop
mov
jecxz
mov
ret
pop
loop
adc
pop
mov
and
mov
mov
scas
fnstenv
mov
ins
pushf
sbb
or
jae
mov
sbb
mov
cdq
jge
(bad)
or
ss
(bad)
fcom
mov
jns
scas
pushf
xchg
fadd
jnp
xchg
inc
stos
sbb
(bad)
hlt
mov
les
sub
outs
lods
lock
outs
sbb
push
push
(bad)
inc
inc
mov
xchg
mov
out
rcl
stc
add
mov
or
inc
sti
fsubr
sub
push
xor
xchg
xor
in
ror
or
jb
ficom
jne
(bad)
iret
mov
or
pop
aad
and
mov
pop
stos
mov
inc
daa
xchg
stc
xchg
(bad)
aad
pop
in
dec
cmp
sahf
and
xor
shr
daa
lock
repnz
cmp
stc
nop
loopne
mov
out
(bad)
pop
(bad)
dec
sub
cmp
xchg
mov
clc
call
jmp
xor
cli
mov
xchg
jmp
add
hlt
push
push
xchg
cmp
in
aaa
rcl
adc
push
mov
mov
popf
cmp
iret
(bad)
outs
jecxz
jg
xor
das
fcomp
clc
xor
or
out
pop
pop
jge
jnp
fisttp
and
ss
xchg
xchg
bound
jmp
push
pop
add
loop
cwde
test
mov
xor
dec
jp
bt
pop
xchg
ret
sbb
imul
jmp
mov
cmp
je
mov
iret
and
out
fimul
inc
in
mov
adc
or
je
jnp
aam
mov
and
add
pop
inc
cwde
out
pop
aas
ja
sbb
or
fsubr
xchg
add
pop
xchg
pop
dec
push
add
popa
dec
(bad)
lods
inc
cmp
or
sbb
shr
and
xor
je
and
movs
stos
mov
mov
add
pop
sar
fwait
cwde
dec
push
aam
and
imul
mov
pop
xchg
sbb
or
sub
(bad)
ja
sbb
ss
icebp
clc
jle
mov
xchg
pop
push
fmul
sbb
xor
mov
cs
cs
(bad)
retf
mov
inc
inc
popa
cmp
popf
mov
pop
xchg
enter
div
in
call
popf
push
inc
mov
in
add
or
mov
sub
out
lods
sahf
daa
lea
loope
fmul
pop
fwait
jg
sbb
stc
dec
mov
loop
ret
push
loop
repz
and
sbb
jne
pop
and
xchg
ja
and
test
repnz
jne
test
jp
cwde
hlt
mov
mov
dec
mov
xor
dec
repz
cmp
inc
in
dec
adc
cmps
mov
push
popa
cwde
mov
out
dec
pushf
test
dec
jmp
mov
ds
in
fmul
(bad)
and
sbb
ja
xchg
jp
jl
push
xchg
xchg
cmp
sbb
and
fmulp
mov
xchg
and
stos
std
ss
je
push
inc
fld
int
sbb
(bad)
retf
jbe
sar
sub
mov
shl
jb
mov
daa
mov
test
test
js
aas
pop
sbb
bound
xor
aaa
les
sar
inc
aad
dec
imul
sahf
fisttp
ret
mov
je
lgs
inc
es
xchg
fwait
pop
les
xor
mov
ss
push
test
js
cs
stos
push
sbb
test
rol
add
call
xlat
jge
mov
das
push
dec
pop
rol
out
test
push
mov
xlat
add
sti
(bad)
fs
push
adc
sub
fadd
outs
daa
mov
xor
jnp
outs
push
out
ret
pop
jmp
mov
push
inc
jb
iret
pop
ja
sub
mov
cmp
sbb
or
mov
jl
rcl
repz
inc
push
xor
cmps
(bad)
aam
cdq
pop
fadd
add
fld
xchg
dec
mov
jp
and
clc
push
add
xor
jg
pop
fcom
adc
(bad)
and
xlat
xrelease
shl
jns
ret
jb
repnz
xor
mov
fldl2e
pushf
gs
es
xor
imul
sub
add
or
cmp
push
loop
mov
pop
mov
fsubr
outs
push
xchg
jb
js
mov
xchg
adc
or
fidivr
push
fstp
call
or
dec
(bad)
mov
hlt
mov
dec
adc
loop
repz
and
jge
pop
mov
sub
sahf
cs
ror
push
add
push
mov
or
fwait
retf
nop
sub
div
add
pop
int
sbb
aam
sbb
fwait
outs
mov
clc
push
add
(bad)
jns
ds
ret
arpl
and
out
cmp
and
adc
pusha
mov
aam
inc
mov
fist
popa
stos
mov
ror
repz
call
jae
xor
js
imul
ror
sbb
imul
xchg
loopne
jbe
scas
mov
sub
dec
mov
pop
lods
in
es
mov
jmp
sub
outs
pop
test
add
pusha
dec
loop
adc
ss
int3
xor
rol
mov
jg
sbb
lods
fld
cdq
mov
inc
jae
dec
not
sti
jmp
sbb
mov
or
sbb
dec
or
inc
mov
jo
test
xor
arpl
jb
sub
pop
mov
xor
fisub
test
(bad)
iretw
lods
sub
sub
cmp
push
xor
mov
pop
movs
ins
(bad)
arpl
aaa
outs
rcl
fimul
stos
stos
sbb
inc
add
push
jecxz
sahf
inc
call
popa
mov
cld
mov
inc
adc
in
aam
je
popa
les
and
or
push
cmp
mov
or
ins
mov
movs
add
lods
cmc
inc
(bad)
pop
push
cmps
cmp
jo
sub
inc
movs
cs
test
cmp
mov
jmp
dec
scas
not
bound
dec
dec
outs
pushf
scas
div
lds
sbb
fcmovnbe
pop
fadd
cld
icebp
cmp
cmps
inc
push
xor
inc
add
int3
mov
jmp
pusha
cmp
test
outs
aad
dec
loopne
sub
in
sbb
jb
or
stos
cld
into
in
jmp
outs
clc
clts
dec
dec
stos
out
lahf
pop
hlt
cmp
jmp
add
lea
arpl
or
xor
cmp
mov
data16
xor
sub
cdq
icebp
in
mov
cdq
push
push
fist
pop
pop
outs
mov
pop
pop
mov
clc
xor
repz
ins
shr
xchg
jmp
int3
clc
push
mov
cmp
fs
sbb
xchg
xchg
xor
xor
mov
mov
add
jp
fwait
pop
ret
and
movs
cmp
popa
out
dec
push
jg
test
call
ret
pop
push
std
xchg
sbb
movs
add
inc
add
mov
fs
add
sub
inc
popf
add
cmps
movs
adc
fnstcw
ret
mov
mov
inc
dec
cmps
sbb
dec
or
jb
out
out
mov
cmp
sti
or
jle
pop
mov
sbb
ret
outs
push
sub
cmp
in
retf
mov
mov
mov
imul
push
pop
xlat
cmps
adc
pushf
fsubr
(bad)
inc
stos
popa
or
pop
ret
retf
aaa
sbb
mov
psraw
push
out
cmp
xor
sub
and
scas
xchg
jge
std
dec
and
das
nop
inc
pop
or
aaa
sbb
test
sbb
out
cli
mov
cli
pop
stos
repnz
ds
push
js
leave
jmp
ret
call
mov
scas
lahf
sahf
add
push
test
aad
dec
lea
sub
inc
or
cli
gs
xchg
mul
and
ss
mov
pop
xlat
mov
cmp
xchg
in
mov
shl
add
loop
or
out
ds
adc
jle
sbb
inc
daa
fldenv
cmps
add
mov
sti
xor
loopne
nop
outs
out
mov
loopne
call
inc
cmp
(bad)
xlat
fldenv
inc
ja
pop
push
mov
inc
sub
xor
loop
adc
xor
jg
ds
cmc
mov
setbe
mov
cmp
inc
or
daa
out
jns
shr
nop
mov
ret
rcl
stos
push
push
add
and
sbb
les
jl
out
push
mov
cmp
movs
jns
call
dec
ss
jle
add
loope
and
js
and
int
test
stos
and
rcl
xor
(bad)
mov
stos
fwait
es
aas
add
mov
cld
mov
lods
jecxz
cdq
cld
arpl
mov
enter
nop
jge
(bad)
cmp
xchg
scas
mov
jns
sbb
add
xor
jle
inc
aaa
cmovg
jns
int3
sbb
cs
in
cmp
xchg
iret
push
mov
or
cld
pop
add
ss
or
sbb
int
jge
and
outs
jnp
ins
mov
stos
rol
sbb
hlt
loope
xor
sbb
(bad)
sbb
or
xchg
ret
add
pop
adc
movs
mov
inc
aas
rol
mov
xor
outs
push
adc
mov
test
mov
lods
push
jmp
lods
repz
push
ss
out
mov
jle
jmp
pop
loope
xchg
loop
jno
sub
adc
jg
pop
lds
fs
aaa
mov
and
pop
cmc
push
cmps
inc
imul
jp
mov
ficom
jle
push
int
enter
sub
mov
mov
xchg
aas
pop
repnz
push
sbb
into
out
cmp
mov
pop
pop
fisttp
ss
cwde
xchg
jmp
pop
clc
inc
pop
inc
and
mov
(bad)
aas
lds
cmp
(bad)
inc
add
lds
add
lds
cmp
and
mov
cli
call
popf
or
adc
pop
(bad)
mov
push
outs
stc
dec
movs
cmp
push
xchg
adc
xor
sahf
out
sub
mov
scas
mov
dec
sbb
add
add
call
or
xchg
xchg
popf
fiadd
ffreep
test
push
bound
aaa
enter
add
or
mov
mov
fnstsw
popf
mul
mov
fs
and
ret
inc
sub
sbb
mov
retf
sbb
xor
mov
fld
emms
and
push
xchg
daa
shr
fisub
mov
icebp
xchg
fld
ret
mov
sbb
pop
mov
mov
mov
lock
adc
in
add
stos
add
jmp
xor
mov
dec
cmp
iret
jmp
jge
into
xchg
shr
and
adc
xor
in
fneni(8087
aam
dec
test
out
xchg
aaa
mov
ret
aaa
mov
or
dec
je
test
pusha
mov
add
fxch
ficom
rcr
mov
add
fistp
cwde
adc
mov
xchg
push
ror
xor
add
imul
xchg
sbb
je
xchg
jne
add
(bad)
dec
push
cmps
call
addr16
mov
je
mov
or
int3
(bad)
jmp
repnz
sti
sahf
dec
fiadd
sbb
inc
sbb
mov
fst
add
js
jge
inc
into
inc
jmp
inc
cmp
loopne
stc
call
sbb
push
pop
adc
stos
sub
cmps
mov
dec
jb
jmp
ins
jl
rcl
jg
cld
std
mul
or
cmc
fld
mov
lds
scas
cs
inc
jl
add
out
sbb
sbb
or
mov
cwde
push
add
or
call
jbe
inc
adc
sub
data16
aas
sub
(bad)
cld
or
cmp
pop
je
retf
mov
out
stos
popa
cmc
out
out
in
jo
call
push
popa
sub
sub
mov
cmp
in
adc
mov
(bad)
adc
ja
(bad)
cli
rcr
mov
ss
int
jle
inc
sub
stos
dec
cmp
(bad)
cs
outs
out
mov
(bad)
jle
fdiv
push
popf
pop
mov
or
retf
sub
cmp
pop
pop
arpl
xchg
sub
dec
ds
pop
vphadduwq
lea
loope
int
xor
imul
nop
sahf
ds
mov
lds
xor
jge
push
push
xchg
retf
fldenv
ret
or
fistp
fisubr
fst
int
cmps
cmc
sbb
xor
adc
out
test
xchg
popa
pushf
cmp
mov
mov
hlt
das
mov
std
addr16
inc
xchg
icebp
sar
cld
cdq
lods
(bad)
call
xor
xor
popf
sub
mov
adc
mov
push
repz
out
stc
lahf
sub
mov
pop
cwde
or
sub
mov
rcr
jo
iret
pop
fsubr
mov
ret
jbe
push
ins
sbb
push
push
and
lock
jl
xchg
push
loope
sub
push
mov
setno
pushf
push
(bad)
mov
sbb
cmp
push
(bad)
ss
fcmovne
cmp
fsub
jl
xor
sub
add
popa
and
test
jle
sahf
mov
xchg
dec
xchg
xchg
jnp
mov
jle
call
jecxz
fimul
in
and
add
and
adc
data16
cli
dec
(bad)
pop
inc
or
shl
fcmovne
fidivr
into
add
movs
add
iret
mov
inc
xchg
aam
out
mov
xchg
cdq
js
mov
lods
in
xchg
cmovb
out
mov
stos
ss
push
push
(bad)
jb
dec
mov
pop
stc
popa
jmp
pop
rcl
adc
out
imul
push
jl
dec
cmp
mov
xor
ja
and
pushf
cmp
int3
sub
push
pop
ds
cmp
(bad)
adc
xchg
cmp
test
jge
or
cmc
sub
and
je
ficomp
add
sub
dec
xchg
dec
push
inc
test
xchg
inc
xchg
rcl
rol
inc
sbb
jnp
inc
stc
scas
(bad)
pop
push
push
jp
jbe
inc
icebp
call
enter
pop
mov
fmul
sub
adc
mov
dec
push
daa
pusha
dec
push
add
sub
pushf
div
test
aas
push
fdiv
jle
retf
fbld
push
sbb
movs
ret
pop
xor
(bad)
and
push
push
pop
jecxz
fcom
aaa
xchg
aaa
push
dec
mov
arpl
mov
xor
pusha
mov
mov
jl
clc
jle
test
repnz
add
imul
xchg
mov
push
sbb
pusha
dec
inc
and
loopne
sbb
xor
push
das
inc
repz
xor
leave
jmp
ret
ins
mov
jae
lahf
mov
shl
imul
cmp
scas
jle
jmp
pop
inc
push
(bad)
std
add
or
(bad)
pop
mov
bound
loopne
cmp
int3
cld
xchg
jle
mov
jbe
repnz
dec
inc
movs
stos
push
mov
cld
int3
cli
cmp
bound
mov
sbb
inc
mov
rol
add
sub
rcr
adc
push
or
adc
repz
lahf
cmps
fidiv
push
add
push
cmp
sub
addr16
xchg
lea
sbb
jbe
mov
jns
add
dec
cmp
and
mov
pop
push
loopne
ficom
adc
xor
sub
jae
int3
arpl
test
ins
push
ret
les
mov
inc
aam
nop
arpl
jg
xchg
sub
mov
mov
fiadd
xor
mov
shl
mov
cmp
loop
pop
loop
test
pop
jne
cmps
repnz
xchg
push
xor
jns
mov
or
in
lods
mov
mov
adc
push
popf
sbb
inc
(bad)
fnstcw
mov
cs
cli
leave
cmp
cmp
pop
rol
mov
sbb
in
mov
xor
add
imul
rcl
cmp
inc
dec
push
jb
jle
out
push
dec
cmps
inc
sar
cmp
xchg
pop
xor
in
add
popf
cmc
into
fs
cld
inc
push
hlt
(bad)
pop
mov
or
push
adc
mov
jecxz
rcr
outs
jmp
sbb
pop
pop
cwde
pop
inc
xor
add
pop
repz
sub
(bad)
imul
in
mov
test
jmp
sbb
jecxz
scas
fist
aad
pushf
lock
xor
mov
jno
imul
loope
call
xor
jl
call
enter
add
cs
nop
(bad)
push
(bad)
sub
mov
arpl
dec
das
out
mov
push
ins
dec
sbb
test
loopne
ds
dec
stc
fimul
xor
and
xlat
stc
xor
fwait
adc
loope
xchg
push
sbb
cmp
xor
jnp
mov
in
pop
stc
lahf
sbb
push
jb
scas
(bad)
retf
mov
es
sub
call
pop
xchg
mov
loop
mov
(bad)
(bad)
cmp
out
and
mov
push
pusha
loopne
pop
cmps
push
test
mov
jl
outs
jg
xchg
xchg
or
xchg
aaa
dec
in
clc
and
enter
nop
dec
sub
shr
mov
inc
or
sub
mov
icebp
shr
test
cmps
mul
pop
mov
fs
js
dec
(bad)
adc
mov
pop
push
retf
jl
jp
or
(bad)
mov
sbb
xor
jecxz
stc
daa
fs
push
mov
cmp
inc
(bad)
stos
leave
movs
inc
iret
rol
push
imul
dec
dec
or
fist
loop
xchg
pop
push
test
pop
arpl
stos
test
mov
sbb
dec
lods
xchg
adc
adc
dec
pop
push
jg
iret
adc
adc
cmp
xor
sub
arpl
in
mov
not
mov
movs
iret
jecxz
xchg
(bad)
and
sbb
(bad)
idiv
sub
xchg
xchg
sbb
not
xor
and
jns
ficomp
add
sbb
inc
inc
xchg
les
adc
inc
repnz
push
push
xor
test
pusha
shl
pop
ret
sti
adc
mov
mov
or
push
lods
popf
dec
jo
enter
inc
retf
xor
sbb
xchg
aam
dec
clc
mov
retf
retf
jecxz
inc
jmp
pop
jo
jl
sbb
push
jnp
xchg
js
stos
in
inc
ret
scas
mov
xchg
mov
sub
push
sub
inc
push
ss
stos
int3
sub
ror
sub
sahf
fadd
xchg
jge
mov
in
sub
cdq
xchg
addr16
imul
ror
call
xlat
inc
adc
jns
test
retf
ror
into
jmp
cmc
cmps
(bad)
mov
scas
add
adc
adc
cmps
and
cwde
mov
cmp
inc
ficom
movs
popf
fstp
push
mov
and
(bad)
call
push
mov
je
in
mov
xchg
ror
(bad)
mov
pop
std
rcl
mov
add
sbb
ret
dec
mov
retf
sub
and
stos
xor
rcr
mov
loope
cmp
call
push
or
xlat
mov
sub
dec
fimul
je
(bad)
sub
sub
xchg
inc
movs
lods
out
dec
jae
xor
xchg
xchg
nop
lahf
jge
lods
add
jns
pop
shl
into
mov
(bad)
dec
fcomp
hlt
popa
bound
inc
sbb
popa
inc
jge
mov
(bad)
mov
and
pop
cmp
xor
mov
mov
stos
call
push
sbb
sub
lods
pop
sub
je
and
pop
sahf
faddp
aaa
sbb
dec
test
dec
inc
jns
test
inc
dec
cwde
mov
inc
mov
mov
xor
push
push
jmp
jp
mov
aam
add
add
clc
outs
ja
or
ret
je
imul
aad
mov
movs
mov
xor
dec
cmps
inc
push
xor
or
dec
sub
nop
and
mov
ret
mov
adc
sbb
adc
sbb
push
int3
ret
mov
imul
into
sub
mov
idiv
ss
jmp
inc
cdq
js
clc
mov
int3
lock
pop
inc
test
lock
call
enter
js
mov
mov
cmp
(bad)
jb
push
cli
movs
fwait
mov
in
or
cmps
(bad)
xor
cwde
cwde
cld
push
or
cmp
push
push
popf
cmp
cmps
mov
cwde
fldenv
xchg
xchg
dec
sub
fstp
mov
jp
cs
mov
out
adc
jnp
sbb
fs
jmp
in
and
retf
or
cld
mov
adc
movs
pop
pop
xor
adc
inc
inc
adc
sbb
(bad)
adc
ss
cmps
sbb
fist
mov
or
sub
repnz
cli
inc
adc
inc
into
loope
mov
and
mov
test
mov
xchg
lods
(bad)
adc
push
retf
mov
jg
push
cmp
cmp
dec
fs
stos
stc
adc
leave
push
jo
out
rcr
dec
aaa
mov
repnz
xor
dec
fidivr
addr16
mov
mov
(bad)
push
in
inc
out
dec
jo
inc
cmps
fnstcw
(bad)
cmp
xchg
inc
out
xchg
in
mov
mov
sti
jb
jecxz
ins
pop
gs
sub
retf
adc
(bad)
dec
ss
dec
pop
frstor
mov
jmp
lods
mov
xchg
out
xchg
(bad)
imul
push
arpl
daa
xchg
dec
sbb
dec
mov
xchg
pop
rcr
sbb
xor
lds
das
dec
push
or
outs
outs
sbb
ror
xchg
icebp
mov
dec
jno
add
pop
js
rcr
jge
int3
inc
sti
pop
cmp
je
add
cld
xor
jae
push
cdq
add
cs
test
lods
or
mov
push
add
sub
out
add
jmp
faddp
or
loope
add
push
dec
mov
mov
sub
xchg
or
addr16
out
test
pop
shr
cmp
sbb
aas
adc
push
add
fdiv
dec
daa
ja
adc
push
lods
inc
jno
sbb
push
sbb
sub
cmp
sbb
push
inc
fs
inc
mov
inc
pop
mov
adc
rcr
add
mov
mov
retf
inc
adc
mov
mov
xor
push
cmp
into
in
gs
call
(bad)
push
sub
jb
xchg
push
cli
mov
fs
enter
adc
or
jo
sbb
(bad)
lods
push
dec
mov
mov
xchg
mov
pop
push
jne
out
nop
icebp
call
movs
stos
mov
add
adc
fld
push
in
mov
sbb
push
aad
jbe
dec
cdq
in
test
clc
(bad)
push
add
mov
mov
push
mov
cmp
and
mov
in
dec
sub
in
adc
ret
inc
adc
and
mov
xor
adc
ins
pop
(bad)
je
pop
arpl
dec
or
fidiv
pop
dec
or
repz
sbb
xchg
mov
pop
scas
movs
xchg
dec
dec
inc
adc
fadd
int3
jbe
mov
leave
xchg
sub
jbe
or
in
ret
push
ficomp
sti
or
inc
pop
scas
jns
fistp
gs
je
stc
or
mov
push
lea
mov
cmps
shr
gs
add
shl
or
push
mov
add
sbb
lahf
inc
ficom
mov
sbb
xchg
mov
adc
cmp
(bad)
xor
int
mov
imul
jmp
ss
or
outs
test
scas
dec
ret
inc
sbb
iret
lahf
jns
cs
out
inc
test
sbb
xchg
dec
push
jne
inc
fdiv
sub
leave
push
push
jbe
adc
push
and
jmp
cld
fnsave
push
test
sub
lock
pop
inc
cmp
fistp
inc
shr
sahf
rol
lock
scas
cmp
and
mov
sti
ins
ins
fwait
mov
mov
cwde
into
adc
xchg
icebp
jl
in
or
data16
cwde
ins
js
retf
mov
add
ja
bound
leave
mov
rcl
push
xor
test
shl
add
and
push
clc
adc
push
ins
jmp
movs
dec
lock
sar
pusha
mov
shl
pop
add
aas
test
jmp
pop
jg
pop
aas
mov
mov
int3
xor
mov
ins
sahf
mov
lds
push
fwait
cmps
out
lock
mov
pop
add
mov
inc
xor
ficomp
in
mov
jl
xor
xor
movs
cmp
adc
mov
xchg
cld
(bad)
mov
aaa
out
push
mov
mov
sbb
outs
call
bound
imul
lods
leave
inc
push
inc
sbb
push
fcmovne
addr16
adc
push
xchg
push
sub
cli
aas
mov
jmp
mov
inc
cld
add
ja
(bad)
test
sbb
pop
push
call
add
aad
popa
arpl
inc
add
jmp
call
mov
push
loope
push
test
xor
inc
aaa
daa
addr16
sbb
mov
shr
inc
mov
mov
fwait
imul
push
jmp
arpl
cmp
add
pop
mov
mov
mov
into
jecxz
imul
xor
push
test
xor
and
add
inc
add
mov
push
mov
out
mov
push
xor
adc
gs
outs
(bad)
ret
mov
pop
sub
and
sub
cmp
ret
add
push
mul
fisttp
das
(bad)
repz
sub
ins
shl
cmp
mov
iret
pop
pop
cmc
add
pmullw
jns
call
xchg
int3
clc
(bad)
imul
dec
cmp
aad
or
inc
dec
dec
out
pop
mov
adc
or
mov
inc
lds
loopne
and
jp
sbb
push
in
shl
xchg
inc
dec
xchg
scas
loop
bound
pop
cmc
imul
push
mov
pop
cmc
jb
test
mov
(bad)
loope
jb
xlat
out
xor
mov
and
add
mov
aaa
or
xchg
ficomp
mov
cmp
cld
xor
or
test
jmp
xchg
test
das
cmps
arpl
cmp
nop
or
or
lds
inc
mov
das
js
mov
adc
fbld
inc
mov
jbe
aas
iret
sbb
add
out
les
add
icebp
pop
adc
into
in
daa
jmp
xor
mov
jmp
in
outs
sbb
xchg
movlps
cmps
xor
out
push
jmp
sti
in
or
push
out
dec
jmp
fsub
sbb
aas
stos
xchg
xor
jbe
xchg
ud0
and
es
inc
(bad)
call
(bad)
call
mov
sbb
cli
icebp
je
outs
lea
push
pop
sbb
in
pop
mov
test
daa
mov
adc
xchg
jmp
jne
mov
and
fidivr
sbb
into
sahf
arpl
int
push
scas
rcl
pop
fstp
sub
add
cmp
jbe
xor
mov
pop
scas
cmp
lds
int3
adc
cmp
sub
mov
and
mov
into
sub
ret
cli
rol
mov
adc
enter
mov
mov
inc
imul
dec
shl
or
out
mov
mov
pop
pusha
mov
in
xor
test
sar
fimul
or
fsin
icebp
xor
jmp
js
movs
push
mov
xchg
and
xor
sub
xor
ret
xor
pop
ss
dec
jno
inc
inc
std
movs
pop
mov
jge
scas
call
xchg
jo
push
mov
push
paddusw
xchg
or
mov
rcr
mov
xor
add
jg
sub
xor
mov
fist
cs
loope
lods
inc
lods
pop
repnz
xchg
jle
and
xor
(bad)
or
inc
sub
xchg
(bad)
fnstenv
retf
imul
pop
sbb
nop
outs
cld
cmp
repnz
addr16
jl
xlat
xchg
cld
ss
push
leave
mov
daa
sub
xor
inc
jl
stos
out
aad
fist
sub
movs
sahf
ja
and
xchg
pusha
aaa
scas
repz
aad
rol
jl
mov
xor
psubsw
cmp
ss
cmp
jo
sbb
lods
mov
cmp
xchg
inc
clc
sar
out
push
fnstsw
rcl
mov
inc
cli
and
xor
mov
outs
les
loopne
pop
sub
call
cmc
sub
cs
and
lock
mov
adc
(bad)
adc
test
mov
stos
mov
pop
push
add
(bad)
icebp
aaa
sub
cmp
push
pop
mov
shl
sahf
mov
sahf
shl
dec
rcl
das
xor
pop
lahf
sbb
scas
imul
and
leave
pop
inc
out
cmp
or
xor
jnp
pusha
fnop
jno
pop
add
sub
(bad)
pusha
mov
push
add
pop
xor
fucomp
mov
movs
arpl
jl
mov
rcr
push
jmp
push
in
(bad)
jp
or
and
inc
mov
cld
mov
in
ins
retf
inc
mov
sti
(bad)
call
or
movs
inc
les
and
test
int
mov
push
ja
test
dec
xchg
mov
mov
fst
ss
jne
jmp
xor
cwde
mov
enter
adc
push
out
call
mov
jl
in
pop
pop
lds
cmp
jp
(bad)
bound
jle
imul
and
ret
inc
mov
adc
lock
jnp
xor
test
jl
sub
lods
mov
movs
xchg
mov
push
pusha
jmp
sbb
in
cmps
jl
je
mov
into
cld
out
ja
mov
cld
rcr
mov
push
cwde
dec
jno
cmp
das
ja
stos
jo
sub
or
sahf
pop
fmul
push
fidivr
push
inc
sar
jnp
fidiv
lea
lock
and
adc
bound
mov
or
stos
inc
jecxz
mov
imul
mov
mov
and
das
hlt
push
daa
call
cmp
jns
aaa
sub
add
xor
cmp
xor
push
dec
daa
call
rol
or
jl
fst
jg
scas
pop
xchg
aas
bound
cmp
jmp
jge
sub
cmp
test
(bad)
por
xor
cs
xor
rcr
xchg
retf
push
(bad)
stos
mov
xor
jno
jno
push
mov
push
xchg
iret
imul
hlt
xor
push
cli
push
add
cmps
je
cmps
xchg
shl
inc
sbb
movs
addr16
jle
mov
jp
mov
or
or
sbb
retf
sbb
cmp
sub
dec
imul
cli
or
(bad)
fadd
es
ret
shl
ror
shl
pop
jecxz
call
adc
inc
ror
jae
push
rol
mov
ret
add
mov
inc
loope
lock
jno
xor
jbe
dec
scas
push
inc
adc
pop
cmp
or
mov
push
pop
mov
leave
sub
int
sub
push
nop
pop
in
cmp
add
mov
rcr
ja
or
mov
call
sbb
push
jmp
lods
test
(bad)
out
call
ss
mov
loope
pusha
ss
movs
test
dec
enter
pop
retf
mov
inc
out
or
dec
mov
cmp
je
movs
out
xor
gs
nop
push
push
push
movs
arpl
mov
pop
ret
adc
jmp
xchg
jae
and
sub
in
mov
cdq
pop
fdiv
adc
jae
aaa
pop
or
sub
cmp
mov
pop
clc
cmp
aam
xor
gs
call
sub
push
push
imul
or
in
inc
and
int3
shr
popf
(bad)
call
push
fsubp
xchg
sahf
mov
add
cmp
addr16
pop
sbb
clc
mov
push
fcomi
aad
retf
jnp
or
stc
das
cmps
jbe
jp
pop
dec
sbb
stos
enter
out
retf
dec
sub
jnp
jae
sub
inc
mov
lods
pop
mov
or
mov
inc
pop
sar
and
pop
stos
pop
inc
lds
outs
mov
push
xchg
arpl
iret
mov
sub
loopne
push
adc
cmp
out
std
xchg
retf
inc
mov
adc
inc
sbb
push
repz
movs
sub
sbb
aad
std
sbb
dec
imul
data16
inc
dec
and
ja
inc
mov
rol
mov
test
lods
lods
ss
movs
mov
into
(bad)
sar
jle
aad
push
add
popa
out
dec
dec
pop
push
lahf
xchg
jge
cmp
imul
mov
das
dec
or
mov
movs
fimul
mov
fdivp
and
inc
pop
push
push
dec
pop
mov
cmp
cmp
ja
icebp
das
or
pop
or
loop
clc
mov
sub
mov
mov
mov
pop
test
das
out
jae
ret
jb
push
dec
inc
lds
aad
add
cmp
scas
dec
sbb
imul
into
loope
push
movs
add
retf
cmp
aam
sub
inc
lahf
pop
test
inc
push
pop
loop
sbb
xor
movs
mov
mov
pushf
aaa
cs
popa
xchg
and
push
outs
cmc
fidiv
xor
push
push
xchg
cmp
stos
and
or
add
fcomp
lods
inc
add
je
movs
retf
jmp
push
mov
mov
bnd
test
xchg
ja
cdq
je
fwait
mov
inc
sub
push
mov
call
(bad)
or
mov
mov
dec
xchg
gs
jmp
jno
pusha
stc
sub
sar
mov
sub
scas
iret
or
and
mov
js
les
xor
or
sub
mov
inc
icebp
dec
cmp
sbb
hlt
inc
push
xor
cli
ret
movs
sbb
xor
mov
mov
dec
add
add
dec
iret
sub
repnz
pop
ja
mov
inc
fwait
cs
repz
out
push
loop
aam
sub
inc
test
xor
push
pop
addr16
push
movs
fild
push
mov
cwde
xlat
fbld
outs
mov
cmp
mov
mov
lods
and
lods
call
xchg
cmp
ror
ficomp
test
stc
cwde
sub
xor
stos
sub
ins
data16
jg
imul
xrelease
inc
pop
pmaxub
arpl
mov
mov
xchg
in
fstp
std
add
lea
nop
cmp
rcl
mov
inc
dec
dec
retf
dec
sub
in
repz
stos
push
xor
ja
xchg
sbb
push
and
lods
stos
(bad)
push
xchg
in
dec
dec
loope
mov
in
sub
and
xchg
popa
jp
push
sub
fld
push
jp
mov
test
and
and
bound
dec
fmulp
push
mov
fucomip
push
fs
jg
in
inc
in
dec
cmp
into
rol
std
mov
and
jbe
mov
iret
pop
fsqrt
jo
xchg
xlat
inc
pop
jle
push
push
sbb
icebp
sbb
or
sub
sub
ret
or
push
cmp
pxor
adc
dec
add
std
and
push
test
pop
add
ins
push
imul
cmp
push
jne
adc
push
jb
jmp
mov
dec
rcl
add
xchg
sub
jne
xor
push
jmp
into
mov
xchg
lds
mov
mov
shl
add
xchg
add
mov
int
jmp
inc
loopne
fmul
or
xor
or
push
and
ret
das
iret
push
push
call
nop
jnp
dec
push
inc
inc
jle
sub
mov
cmp
or
stc
gs
iret
movs
xchg
sbb
lahf
add
mov
mov
xchg
js
lea
retf
sub
ret
arpl
and
mov
ret
cmc
dec
dec
repz
push
mov
xor
stos
stc
jne
out
leave
pop
test
out
adc
out
fbstp
call
pop
stc
lods
xchg
jmp
lea
stos
out
sahf
cs
xchg
pop
mov
push
fcomip
and
js
(bad)
or
retf
fwait
jle
sub
inc
pop
rcr
movs
and
mov
jl
mov
test
popa
aad
or
movs
dec
iret
movs
sti
xor
test
or
es
int
jp
inc
push
sar
movs
mov
xchg
inc
daa
cmp
and
pop
xchg
xchg
test
div
adc
lock
xchg
xchg
and
sub
sub
test
in
adc
out
dec
xor
ds
mov
lea
adc
push
rol
xlat
test
ins
retf
mov
pushf
cmp
sub
inc
add
aam
mov
mov
push
xor
mov
pop
pop
mov
push
cmp
add
call
ja
or
stos
mov
sub
pop
or
sbb
(bad)
adc
repz
or
lods
stc
adc
sbb
mov
shl
and
test
das
aam
sbb
lea
ds
call
fwait
jmp
xchg
aad
cwde
mov
xor
push
mov
(bad)
mov
push
das
icebp
imul
xor
push
pop
dec
std
jecxz
mul
push
shr
push
in
shl
jge
fisub
inc
push
out
call
shl
mov
sbb
out
hlt
adc
jl
sub
mov
cmp
jp
pushf
clc
or
arpl
push
cmp
pop
sub
mov
jge
xchg
outs
xchg
(bad)
rcr
xchg
pop
xchg
cwde
stos
bound
daa
mov
arpl
and
out
fisubr
jne
add
push
(bad)
in
pop
mov
int
retf
mov
and
jno
pop
and
ficom
cmp
xchg
adc
out
dec
xchg
xchg
and
fdivr
sub
mov
dec
ds
in
add
jg
inc
push
mov
dec
adc
mov
bound
movs
(bad)
or
cli
lahf
add
cmp
add
rcr
pop
(bad)
movs
xor
and
pop
add
pop
scas
retf
ja
mov
leave
rcr
adc
ret
out
sbb
cwde
lods
jmp
jno
sub
dec
and
idiv
(bad)
div
xlat
jl
xchg
lock
mov
popa
repz
pop
adc
aam
(bad)
popf
(bad)
mov
loopne
leave
xchg
jno
test
(bad)
jecxz
(bad)
xor
cdq
mov
cld
ret
jne
enter
push
fistp
dec
pop
into
jb
push
stos
adc
mov
dec
or
adc
push
shl
aaa
cdq
jbe
loopne
add
push
int
iret
imul
movs
dec
sbb
fcom
xor
js
sbb
pop
lds
and
mov
sbb
retf
push
ss
inc
cdq
ins
sti
jmp
nop
sub
push
add
shl
pop
repnz
sbb
pop
das
jne
or
or
adc
dec
mov
out
ret
dec
cmps
mov
test
cld
es
inc
int3
and
pusha
test
popf
dec
xchg
pop
ja
adc
mov
pop
mov
and
push
xchg
xor
hlt
bound
repz
stos
and
fdivrp
imul
xchg
das
bound
push
retf
push
in
test
pop
pop
lock
or
fdivr
push
sbb
mov
lock
loop
inc
loopne
jg
jg
outs
cmps
jae
in
push
sar
cmps
mov
aad
pop
push
stos
cmp
(bad)
int
pop
bound
inc
inc
inc
dec
pop
repz
retf
pop
cmp
loop
jne
popf
rcl
cld
mov
mov
dec
xor
xor
dec
test
jp
stos
scas
jge
xchg
mov
lock
mov
jno
cmp
xchg
push
call
std
xlat
cli
movs
or
sbb
sar
push
retf
int3
pop
out
fcmovu
pop
xor
pop
mov
(bad)
sub
and
rcr
xchg
dec
nop
mov
jmp
shl
fcmovbe
dec
int
enter
inc
mov
ror
pop
cmp
sar
loop
cmp
ss
arpl
cdq
cwde
and
lahf
sbb
mov
adc
xchg
xor
add
push
ret
sub
aas
cdq
cs
cmp
icebp
loop
icebp
leave
aam
cmp
fnstenv
add
mov
cli
mov
aaa
ret
cmp
cmp
sahf
clc
mov
fidivr
daa
add
sub
ins
jo
mov
xchg
(bad)
lods
jecxz
call
ja
fxch
test
dec
xchg
jmp
inc
xchg
test
mov
mov
push
(bad)
shl
ret
sbb
aam
imul
fld
movs
jl
mov
jno
loope
dec
pusha
jae
addr16
jb
cmp
cmp
movs
xchg
mov
dec
sub
and
xor
std
int3
clc
dec
cld
(bad)
push
loope
retf
call
popf
pop
repnz
je
push
mov
fsub
icebp
mov
mov
stos
mov
in
pop
sar
push
fadd
jecxz
pushf
mov
(bad)
cwde
ficom
dec
out
mov
movs
mov
sbb
into
or
mov
mov
rcr
stc
loop
pop
jge
movs
cmp
adc
or
xchg
inc
mov
sub
int3
xor
or
jge
es
test
stos
fmul
rcr
in
(bad)
rcr
xchg
fistp
mov
cmps
sbb
rcl
dec
or
out
push
cmps
cmps
jmp
jg
cld
push
and
push
aam
scas
mov
jne
jmp
mov
cld
outs
push
and
sbb
jae
sbb
pop
mov
add
rol
mov
nop
cmps
(bad)
lahf
sbb
mov
iret
cmp
pop
hlt
aam
adc
mov
sbb
xor
popf
inc
call
inc
pop
dec
sbb
sbb
fsub
mov
retf
sub
aad
xor
pusha
retf
dec
mov
ret
sub
aad
popa
cmp
jg
in
(bad)
std
int3
imul
repz
inc
jbe
or
dec
dec
std
mov
aam
daa
dec
cmps
cmps
jmp
push
mov
je
mov
or
in
push
(bad)
stos
mov
or
mov
aaa
jo
cld
lock
sbb
pop
(bad)
sub
jnp
xlat
ds
mov
kunpckbw
ins
mov
mov
(bad)
mov
mov
cmps
mov
popa
xor
sbb
int
xor
sub
push
stc
movs
sbb
movs
xchg
lock
mov
jns
sub
stc
jl
cmps
cmp
mov
or
popa
inc
pop
frstor
repnz
ins
sub
aam
dec
and
outs
jmp
shr
mov
cmp
shl
or
add
fst
stos
gs
jbe
mov
or
mov
or
xchg
mov
jmp
das
iret
push
pop
das
jae
or
call
out
fdivr
cmp
inc
test
pop
or
pop
hlt
mov
call
adc
add
push
jne
outs
(bad)
adc
mov
xchg
xor
leave
mov
push
mov
dec
adc
pusha
call
mov
test
mov
xlat
cmp
adc
pop
int
shr
inc
dec
es
cmp
test
or
out
dec
xor
fs
add
push
push
cmc
aas
pop
jge
cmp
es
cdq
add
add
pop
mov
sub
inc
or
pop
mov
icebp
dec
cmps
cmp
call
jle
scas
jp
push
movs
jge
or
test
xlat
test
sahf
mov
xlat
(bad)
cmp
pop
push
mov
pop
push
es
loopne
js
scas
aaa
stos
or
pushf
xchg
mov
jns
cmc
jge
loopne
out
retf
scas
out
fld
dec
out
icebp
clc
inc
mov
xor
outs
mov
jl
jle
ficomp
outs
lock
add
dec
nop
ror
rcr
jle
in
inc
and
imul
inc
fistp
test
or
adc
xchg
jne
fadd
adc
cs
mov
jmp
test
push
jg
(bad)
xor
pop
icebp
call
std
mov
lahf
inc
inc
ret
mov
pop
cli
jmp
cmp
push
pop
(bad)
addr16
or
sbb
ret
mov
pop
(bad)
sti
dec
mov
rcl
fmul
fimul
rcl
(bad)
cmp
cdq
movs
cmp
cli
int
mov
test
leave
sbb
ja
mov
sub
or
lock
es
jbe
(bad)
stc
fdivr
adc
fcom
add
shl
lods
outs
repz
aas
mov
ror
cmp
push
sub
xchg
ds
shl
mul
pop
es
pop
adc
adc
push
push
call
pop
push
dec
cdq
sbb
jle
hlt
neg
retf
xchg
jmp
push
rol
psadbw
cwde
mov
cmc
fnstcw
imul
dec
and
jmp
jp
scas
sahf
jl
pushf
sti
les
retf
mov
imul
or
and
mov
ds
pop
mov
fld
pushf
mov
neg
add
mov
or
mov
addr16
or
loopne
jmp
adc
out
inc
(bad)
jmp
ss
fucomip
mov
mov
test
pop
clc
push
pop
mov
sub
(bad)
cli
pop
and
add
out
cmp
sbb
inc
gs
arpl
pop
adc
xchg
push
lea
pop
cmps
sub
jae
rol
mov
sti
imul
lods
or
mov
scas
push
mov
not
cmp
push
jmp
sbb
jnp
iret
movs
bound
and
sbb
cli
loopne
push
out
out
not
push
mov
shl
in
fidiv
out
fisubr
mov
pop
push
lods
mov
sub
lea
test
lds
out
or
loopne
ror
out
pusha
and
addr16
push
dec
ins
jo
adc
clc
ins
lods
mov
mov
mov
test
sub
xchg
xor
mov
cdq
pop
(bad)
mov
cs
lods
aas
or
adc
cmps
jns
xchg
push
out
gs
xchg
data16
(bad)
adc
aaa
stos
mov
pop
std
sahf
cmps
inc
cmp
outs
clc
dec
test
mov
jmp
adc
cld
pushf
cdq
add
fidiv
les
jle
adc
dec
test
mov
enter
ins
inc
pushf
mov
nop
push
dec
stos
out
and
xchg
aad
aad
or
test
push
push
add
retf
sbb
dec
mov
jle
cmp
dec
sub
or
or
sbb
push
adc
cdq
xchg
lods
inc
jo
and
add
and
pop
cmp
leave
push
xchg
popf
inc
scas
out
jae
xlat
sbb
popa
not
test
(bad)
mov
push
inc
daa
das
addr16
shl
adc
icebp
push
jb
adc
add
dec
xor
ret
das
test
sbb
inc
(bad)
xchg
ja
cdq
cmps
mov
mov
jp
inc
sbb
mov
jecxz
mov
iret
add
ret
loop
dec
ins
outs
in
mov
xor
loope
call
jmp
pop
push
mul
shr
test
(bad)
push
cmc
adc
shr
or
test
dec
mov
iret
shr
rcl
aad
loope
pop
sbb
xchg
push
jle
fistp
cmp
cmp
popf
sub
call
mov
jmp
sahf
rcr
pop
mov
xchg
loop
sub
cmp
mov
out
es
fnstenv
les
sub
xor
dec
call
in
imul
gs
cdq
add
retf
add
sbb
add
inc
inc
adc
xchg
inc
inc
xlat
pop
adc
nop
inc
mov
fmul
push
pop
mov
sti
enter
mov
xchg
push
(bad)
dec
fsubr
stos
inc
aad
pop
fidiv
dec
int3
mov
mov
push
or
scas
pop
xor
aad
dec
pop
jge
test
daa
neg
jb
xor
mov
fisub
push
sbb
gs
push
mov
push
push
test
sbb
inc
into
add
xor
adc
cmp
test
pusha
or
inc
xchg
jno
cmp
jecxz
mov
sbb
inc
mov
mov
mov
push
aaa
dec
dec
div
mov
fcomp
push
ror
sub
pop
aad
xchg
fs
lods
cmp
jle
and
adc
pop
pop
mov
add
xchg
sub
jg
fild
and
push
add
xchg
mov
mov
aaa
popf
scas
or
add
push
mov
bound
cwde
or
sbb
cmp
rol
cmp
mov
jae
scas
mov
std
xchg
jmp
cmp
xlat
jb
fsubr
stos
lods
jge
cwde
sub
cmp
repz
and
xor
dec
fsubr
mov
popf
(bad)
mov
shl
cdq
imul
or
cwde
int3
stos
es
or
shl
jno
sub
mov
mov
inc
cmp
jge
loope
movs
cmp
mov
adc
out
cs
jmp
pop
mov
mov
shl
adc
adc
pop
fistp
std
(bad)
xchg
push
stos
pop
cmp
pop
mov
lock
sub
rcr
dec
push
js
inc
dec
out
cwde
or
aas
retf
adc
push
mov
jle
pop
shr
or
in
adc
jae
mov
jmp
clc
loope
stos
sti
add
jp
stos
lds
add
or
popa
jns
cmc
es
mov
dec
adc
nop
icebp
jb
(bad)
cs
ins
js
fdiv
loop
(bad)
jnp
push
sub
cld
xor
sub
mov
int
ins
dec
jle
dec
out
es
pop
xchg
scas
sub
cmp
out
nop
pop
les
fild
add
fst
cmps
addr16
or
add
adc
cmp
scas
pop
sbb
addr16
add
and
cld
inc
shr
dec
add
add
pop
sub
(bad)
(bad)
mov
sbb
loop
dec
jmp
push
mov
fst
stos
popf
xchg
sub
inc
stos
loopne
cmps
ja
mov
sti
lods
cwde
cmp
shl
add
xor
push
shl
cmp
pop
pop
into
jbe
int3
sar
aas
jmp
popf
adc
push
fwait
jae
xor
push
sbb
xchg
mov
adc
jno
inc
ret
pop
outs
xor
pusha
fst
pop
iret
retf
cmc
out
xchg
cmps
imul
out
aam
sbb
scas
stos
leave
push
pop
jo
xlat
lahf
movs
or
cmps
js
jo
jne
aam
fcmovnbe
push
pushf
fbstp
sub
dec
mov
jle
sbb
cmps
movs
(bad)
loop
stos
arpl
xchg
into
lahf
add
pop
ror
dec
adc
retf
inc
int3
sti
in
(bad)
loope
movs
call
ja
imul
pop
rep
mov
sub
xchg
mov
rcr
das
push
add
or
jmp
sub
jno
pushf
std
(bad)
shl
(bad)
lock
xor
sub
jns
mov
leave
cmp
sbb
hlt
pusha
cmp
pop
sub
pop
stos
mov
xor
(bad)
xchg
sbb
data16
lods
fidivr
bound
scas
mov
rcr
in
rcr
outs
mov
adc
loop
dec
jne
xchg
(bad)
imul
sbb
fnstcw
push
dec
outs
fld
xchg
mov
inc
aam
mov
mov
test
shl
jle
or
push
pusha
int
fwait
sahf
add
inc
std
jmp
jmp
dec
jb
ins
stc
cmp
stos
imul
repnz
mov
mov
and
jnp
out
pop
mov
scas
repnz
mov
ja
pop
fucomip
stc
and
sbb
cmps
ror
adc
sti
inc
adc
ficomp
(bad)
in
fbstp
fadd
scas
repnz
and
std
pop
cmp
mov
out
(bad)
(bad)
jg
inc
mov
mov
cmc
es
xor
repnz
cmp
mov
sub
jmp
xchg
mov
jbe
push
repz
loop
jns
sbb
pusha
repnz
push
inc
ja
lods
lea
pop
enter
or
adc
arpl
outs
pop
loopne
xchg
pop
pop
jbe
adc
sbb
shr
popf
xchg
xor
sub
lods
sar
sbb
mov
jo
xor
xor
movs
aad
add
inc
lods
mov
rcl
dec
cmp
jne
mov
in
xchg
daa
test
pushf
pushf
loope
(bad)
bound
pop
sti
and
rol
add
mov
jp
stos
scas
mov
fist
jne
xchg
rol
add
jle
mov
xchg
leave
jg
and
sahf
dec
sti
adc
jns
es
ucomiss
mov
test
cwde
lods
or
sub
mov
cmp
add
jmp
(bad)
jl
sti
jno
xor
pushf
out
xchg
fst
add
push
push
outs
mov
cmp
mov
stos
push
jns
cmc
inc
and
pushf
adc
mov
in
xchg
jl
jbe
push
retf
mov
jmp
fimul
(bad)
jnp
inc
(bad)
pop
jb
cwde
cmc
and
nop
int3
stc
popf
ret
test
dec
push
and
adc
gs
cmp
and
fisub
dec
lahf
lock
or
(bad)
push
aam
cmp
aas
inc
icebp
push
or
mov
add
nop
or
je
bound
aas
out
push
(bad)
std
push
jae
mov
xor
ror
cmp
outs
push
and
sbb
iret
retf
sbb
lock
scas
xor
lea
xor
je
xchg
pop
cmp
outs
out
adc
(bad)
in
cmp
test
mov
jl
cli
push
push
mov
sbb
or
into
dec
std
das
or
xor
enter
inc
jle
jnp
add
xchg
gs
sbb
xor
cli
aas
sahf
sub
std
sub
ins
fucomp
xor
jp
repnz
push
or
movs
fsub
cmp
mov
push
scas
pop
cwde
movs
inc
push
cmc
mov
pop
inc
jnp
ins
dec
cmovge
call
inc
sub
inc
jmp
add
mov
(bad)
(bad)
pop
cmp
dec
sub
sub
cwde
loope
sub
jo
mov
add
push
stos
das
jae
adc
repz
ins
mov
pop
dec
push
jnp
arpl
inc
xlat
in
inc
mov
lea
mov
imul
retf
enter
into
push
movs
mov
sbb
pop
mov
push
dec
out
xchg
mov
xchg
mov
or
retf
out
mov
jns
movs
aam
pop
sub
mov
jge
ja
xchg
movs
stos
fisttp
and
dec
xchg
jle
shl
(bad)
or
fsub
faddp
mov
pusha
sbb
inc
fcmove
lock
and
fild
xor
stc
cmp
lahf
inc
sbb
mov
push
dec
jecxz
push
ret
jb
xchg
and
mov
mov
and
cmps
xor
loopne
mov
ror
inc
fisubr
mov
imul
push
out
cwde
mov
das
(bad)
mov
mov
retf
ja
enter
inc
retf
inc
mov
inc
addr16
test
dec
xchg
fadd
daa
adc
nop
lahf
jae
shr
test
inc
xor
fistp
inc
pop
imul
push
xchg
xchg
in
in
pusha
mov
and
mov
shl
(bad)
xlat
pop
xchg
add
and
inc
jnp
movs
pop
adc
cmp
test
rdtsc
ret
adc
stos
shr
std
push
out
ds
jp
push
leave
sub
ss
aad
call
push
hlt
test
push
jge
adc
or
fnstenv
fnsave
lods
and
and
test
mov
fs
xchg
add
mov
xchg
(bad)
fcmovnb
add
mov
xchg
add
pushf
push
jp
jae
fist
cmp
retf
cmp
jmp
push
clc
pop
sub
rcr
mov
adc
and
stc
jl
ret
cmp
or
data16
jbe
(bad)
push
loope
shl
and
or
push
adc
repz
dec
rcl
jnp
(bad)
stos
test
dec
(bad)
(bad)
sbb
sbb
inc
arpl
and
popa
pop
not
dec
push
xor
and
mov
jbe
pop
cmp
or
fimul
push
fbld
sub
dec
in
jp
mov
movs
adc
xchg
push
cmps
(bad)
cmc
xchg
(bad)
movs
xor
aad
jmp
push
mov
mov
sbb
test
std
jno
es
cmp
movs
and
pop
jle
xor
bound
sti
scas
repnz
ins
loope
outs
push
dec
stos
mov
aas
and
mov
dec
test
adc
jne
repnz
and
cmp
outs
push
ins
(bad)
imul
add
cmp
mov
into
push
(bad)
test
sub
repnz
test
xor
xor
cli
sti
cmp
sub
dec
mov
aam
ins
sti
mov
xor
push
sahf
ins
inc
rol
cmp
cmp
mov
push
mov
dec
pop
sbb
jp
xor
or
gs
push
fdiv
cmp
pop
or
xlat
pop
lock
mov
inc
jl
inc
scas
sub
cli
adc
test
(bad)
scas
imul
jg
mov
cli
push
daa
push
dec
add
adc
clc
jg
nop
aam
std
mov
pop
cmp
adc
dec
inc
jo
mov
jge
sbb
imul
inc
loopne
and
les
mov
adc
jg
stos
cmc
in
retf
or
popa
movs
mov
ss
frstor
ja
movs
sahf
add
sub
data16
test
pop
push
cdq
rcl
push
sbb
mov
shl
dec
not
push
aam
sub
fistp
push
test
xor
mov
fwait
leave
retf
fucomip
xor
dec
lahf
fimul
ret
jnp
sub
leave
aas
add
jmp
push
jno
cmp
pop
jle
push
idiv
push
sbb
sahf
es
shl
xchg
push
(bad)
imul
jp
mov
cli
cmps
loopne
bound
fsub
rcl
and
mov
jo
cmp
stos
dec
sub
or
test
sbb
out
push
add
mov
addr16
adc
xchg
xchg
or
into
dec
xor
loope
sahf
pop
dec
xchg
mov
sbb
out
clc
mov
xchg
repnz
ret
ret
lods
gs
daa
(bad)
ja
(bad)
push
dec
cmp
call
mov
clc
sbb
jl
mov
xchg
retf
xor
out
mov
mov
(bad)
(bad)
mov
lds
imul
hlt
jae
dec
test
pusha
add
ror
sahf
scas
popa
leave
dec
nop
dec
jb
lea
inc
xor
mov
aaa
adc
cmp
xor
and
ss
sub
ss
not
ret
mov
mov
mov
mov
jae
addr16
sbb
xchg
jo
pop
push
mov
out
rol
(bad)
aam
inc
fs
cmp
clc
in
es
call
cmp
lock
sbb
cmovg
cmps
in
mov
jp
pusha
maxps
mov
out
cmp
dec
ins
mov
fisttp
sub
mov
dec
xor
xor
test
rol
or
ret
add
shr
std
movs
mov
ror
xchg
pop
jle
cmp
andnps
or
or
pop
push
arpl
cmp
in
cmp
or
adc
lods
pop
dec
shr
retf
add
mov
inc
and
xchg
inc
sbb
fild
movs
sbb
imul
mov
xchg
push
sub
fisubr
xor
into
dec
out
lods
or
nop
push
clc
dec
cmp
lods
les
mov
sub
lahf
adc
aam
pop
mov
pop
sub
cmp
retf
retf
add
cmp
dec
sti
cmp
loop
mov
and
imul
or
jne
sub
fcomp
sub
jle
movs
out
mov
push
into
pop
jns
adc
dec
jne
pop
fld
sar
adc
(bad)
scas
xor
cmps
jae
pop
mov
nop
jmp
inc
cmp
mov
jecxz
mov
pop
adc
je
sbb
dec
ss
popf
daa
mov
mov
test
or
inc
fidivr
jle
mov
(bad)
and
retf
sub
sbb
dec
inc
cli
pop
jle
sbb
jle
popf
push
jle
sar
push
xchg
aas
inc
jnp
dec
cmp
lds
in
cmp
out
test
xchg
mov
sbb
lds
loope
push
frstor
inc
loope
xchg
iret
and
pop
jl
push
in
ins
mov
dec
jle
push
jle
les
xchg
cmp
(bad)
retf
xor
dec
xchg
enter
xchg
jle
das
clc
push
push
xchg
retf
sub
pushf
ds
(bad)
cmp
les
je
dec
mov
ret
lock
jo
adc
cwde
mov
mov
rol
aaa
pop
pop
daa
fs
adc
popa
(bad)
mov
push
scas
leave
mov
push
push
xor
fcom
(bad)
adc
xchg
xor
sbb
cmps
cli
icebp
frstor
xor
sahf
adc
(bad)
int
or
fdivp
xor
call
jne
(bad)
cmp
icebp
sahf
mov
fbstp
loope
push
scas
mov
ins
cmp
xchg
mov
test
mov
cli
pushf
dec
out
stos
jb
hlt
cmp
in
lds
push
cmps
into
and
jo
hlt
loope
mov
xchg
(bad)
out
adc
adc
shl
cmp
popa
push
pop
fldenv
in
lods
jbe
scas
fnstenv
iret
in
mov
dec
pop
xor
repz
mov
sub
dec
add
xchg
adc
xchg
stc
int3
push
and
cdq
jae
ss
jp
test
adc
in
cmp
or
std
(bad)
ds
mov
mov
retf
int
lods
mov
mov
test
pushf
mov
and
sub
seto
mov
xchg
pop
xchg
jns
add
out
arpl
adc
and
or
dec
pusha
adc
xchg
(bad)
or
lods
xor
mov
lea
test
and
or
xchg
les
dec
rol
jmp
test
arpl
mul
lods
es
mov
jle
sar
sbb
mov
sbb
xchg
inc
cmp
or
adc
adc
mov
or
push
sar
popa
inc
pushf
pop
mov
mov
clc
and
fsub
dec
daa
cmp
inc
or
ins
popa
rcl
sbb
pusha
mov
dec
pop
test
xchg
dec
aad
inc
sbb
mov
sub
in
sbb
loop
aam
sub
pop
xor
xchg
fcomp
data16
repz
push
repz
mov
mov
cli
(bad)
js
ror
call
cmp
ret
push
fcmovne
nop
cs
xor
aaa
dec
inc
movs
and
out
jnp
scas
sub
cmps
pop
add
jle
test
push
or
xchg
loope
popf
cmp
outs
cmps
loope
pop
adc
inc
cwde
adc
inc
test
xlat
popf
adc
stc
cmc
sub
gs
inc
fs
std
xchg
xchg
mov
add
movs
push
fisubr
cmp
pop
push
add
fld
adc
xor
fild
(bad)
cli
sub
imul
imul
or
sub
sub
jecxz
sub
xor
dec
adc
push
(bad)
pop
lods
scas
rol
(bad)
push
rcl
pop
ins
xor
ins
fwait
sbb
mov
mov
into
dec
adc
jecxz
add
retf
mov
(bad)
leave
and
sbb
call
daa
inc
push
pop
neg
inc
js
jo
fiadd
aas
pusha
push
mov
stos
addr16
imul
clc
lea
jmp
cmp
pop
ins
leave
call
cmp
add
jb
std
ficom
lods
out
pop
jge
icebp
outs
sub
test
fnstsw
push
or
fild
je
ja
pop
push
retf
in
mov
retf
jno
push
sbb
daa
leave
push
cdq
inc
repnz
mov
or
ins
cld
mov
les
sub
mov
add
and
mov
pop
not
sub
mov
or
add
ret
ret
xor
test
inc
cwde
lds
ja
retf
inc
retf
daa
mov
add
out
inc
or
adc
xchg
and
js
mov
shl
dec
jg
neg
call
or
retf
enter
(bad)
jne
pop
shl
fisttp
bound
mov
xor
ss
out
in
mov
or
retf
xor
adc
test
jmp
test
xor
mov
push
cld
jae
lea
push
mov
loop
adc
sbb
add
mov
popf
and
mov
jnp
pop
shl
rcr
and
js
neg
adc
or
xchg
fwait
push
add
enter
shl
jge
loope
and
inc
cmp
test
xchg
test
adc
in
jle
pop
adc
push
data16
(bad)
jbe
xchg
mov
cmp
fsubr
mov
mov
mov
sar
dec
pushf
stc
enter
iret
or
mov
jae
es
inc
shl
inc
retf
cs
in
nop
ja
pop
sti
(bad)
(bad)
(bad)
fsub
pop
jbe
ret
mov
repnz
adc
ret
test
pop
(bad)
mov
push
and
jbe
or
addr16
jmp
aas
sti
inc
jmp
pop
pushf
popa
or
movs
and
pop
cld
pop
aam
xor
mov
enter
add
lods
test
sbb
sahf
push
dec
pusha
sub
adc
adc
retf
je
shr
es
lods
aad
lea
inc
or
add
fisubr
fcomip
aad
cmps
jb
cmp
or
mov
into
ret
and
mov
sbb
loopne
mov
jbe
sub
cmp
push
scas
cmp
jns
add
xor
pop
(bad)
mov
mov
fisub
pop
inc
call
mov
out
imul
popf
mov
fnstsw
call
scas
pop
pusha
jge
add
pop
cdq
(bad)
nop
or
push
pop
sub
cmc
xlat
mov
aam
xor
add
sbb
sahf
lods
mov
ds
test
and
jp
adc
adc
gs
ss
push
iret
jp
push
or
jge
mov
fcomp
or
xor
or
pop
sub
out
sub
std
cld
xor
and
mov
leave
sar
sbb
fs
pop
aaa
pop
jo
loope
xor
ret
ins
test
add
and
add
call
mov
(bad)
mov
int3
dec
addr16
mov
and
jb
outs
cmps
les
add
cmp
aad
pop
xor
out
jb
push
cdq
dec
cwde
or
(bad)
pop
xchg
pop
jns
and
(bad)
mov
xor
mov
nop
scas
clc
cdq
mov
call
xchg
(bad)
loopne
cmp
inc
iret
cs
int3
ret
ds
daa
repnz
hlt
mov
inc
push
mov
xor
in
das
daa
or
pusha
push
xchg
mov
in
dec
fild
les
mov
mov
and
adc
(bad)
cli
jmp
test
mov
daa
inc
adc
sahf
fwait
clc
sub
jecxz
xor
in
not
or
cmps
(bad)
push
mov
push
push
call
xchg
ds
ret
xor
push
rcr
mov
ret
stos
xor
lahf
xchg
movs
inc
fwait
dec
rol
cwde
popf
sar
dec
mov
leave
sub
xor
xchg
ss
xor
lods
sub
pushf
outs
fs
inc
popf
in
push
ror
sbb
fcomp
push
int3
cmp
xchg
scas
pusha
xor
or
inc
lods
xchg
mov
push
mov
bound
mov
cld
sbb
jge
jecxz
outs
mov
stc
and
pop
movs
stc
clc
fisttp
(bad)
shl
sub
mov
shl
lahf
mov
dec
add
stos
push
inc
jne
leave
sbb
outs
or
and
jle
mov
test
or
jne
cdq
add
int3
mov
cmp
and
shl
loopne
inc
in
adc
fs
adc
je
or
mov
int3
movsx
jmp
adc
push
add
into
fisttp
dec
stos
pop
lods
and
outs
ja
jo
outs
or
pop
and
in
shr
sbb
(bad)
call
push
xor
push
and
scas
push
jae
loopne
int3
jge
mov
mov
rcr
loope
mov
pop
lods
int
pop
rol
pop
mov
mov
jmp
sub
add
mov
cmp
gs
pop
jl
push
jle
out
adc
(bad)
sub
xor
cld
cmp
add
fstp
js
cmp
push
fstp
lds
cmp
in
mov
mov
mov
jecxz
movs
mov
and
cmp
mov
mov
pop
push
xor
movs
xor
dec
mul
cmps
mov
in
fwait
ja
mov
and
or
aam
cdq
xchg
popa
mov
sub
int3
cwde
ficom
cmp
inc
pop
jecxz
mov
ja
push
or
rcl
inc
sbb
imul
pop
je
push
jl
jp
adc
and
xchg
adc
int3
adc
scas
xchg
stc
sbb
retf
retf
ins
mov
and
call
fs
outs
adc
fcomp
add
in
sub
pushf
scas
jmp
aad
sbb
std
fsub
das
cmp
xchg
(bad)
adc
and
or
mov
and
fcomi
pop
xor
retf
in
push
ins
cld
lock
pusha
fcmovnb
mov
inc
sbb
inc
inc
ins
xor
inc
lds
and
not
sbb
jmp
xchg
pushf
xor
cli
jge
lea
cwde
mov
pop
inc
ret
push
test
stc
pop
mov
dec
mul
adc
xchg
push
adc
inc
test
mov
loop
loopne
pop
mov
fist
mov
data16
and
cmps
fmul
jp
shl
test
gs
data16
outs
mov
(bad)
imul
mov
cmps
pop
fldenv
pop
mov
movs
jl
mov
movs
xchg
popf
movs
ja
test
(bad)
mov
call
ja
ror
push
stos
jno
or
xor
sbb
mov
push
(bad)
mov
shl
xor
mov
ror
mov
mov
iret
outs
loopne
pop
jmp
xchg
inc
xchg
jp
sbb
xchg
mov
adc
fwait
sbb
sub
jns
mov
fwait
test
gs
fisttp
addr16
fidiv
lods
pop
pusha
cmp
fdiv
gs
xchg
shl
push
arpl
mov
in
les
ins
adc
xchg
(bad)
shr
push
dec
(bad)
push
mov
cdq
dec
pop
mov
(bad)
loop
mov
fsub
dec
sti
mov
jle
cdq
xor
fbld
adc
out
pop
out
ficom
pop
cmp
dec
mov
sbb
add
xchg
sahf
push
leave
and
jo
mov
je
dec
xlat
pop
arpl
pop
adc
pushf
ja
cmp
pop
or
add
adc
cmps
lahf
jmp
ret
das
in
bound
push
push
jb
es
sbb
adc
clc
cwde
xchg
push
cmp
loopne
fbld
aam
mov
adc
adc
cmp
pop
fdiv
ja
cmp
test
(bad)
jo
loopne
inc
test
jp
jb
cmps
inc
xchg
adc
rcr
cmc
push
push
xlat
mov
xchg
lods
daa
outs
jae
mov
enter
cli
mov
push
jns
sbb
sub
add
lahf
sub
in
addr16
ds
mov
mov
lahf
mov
rcr
pop
mov
or
xchg
or
arpl
nop
pusha
jl
push
sub
stos
jns
in
sbb
add
aad
pusha
pop
xor
nop
out
dec
jp
inc
cmps
dec
sub
(bad)
xor
jg
push
aad
xlat
xor
repz
(bad)
mov
cmc
es
adc
add
out
sub
dec
xor
test
retf
pop
and
pop
xor
cmp
xlat
pusha
outs
cmp
or
int
pop
cmp
cmps
(bad)
adc
clc
add
(bad)
rcl
sbb
inc
adc
out
out
gs
mov
pop
cdq
mov
add
mov
inc
nop
pop
mul
inc
pop
xor
not
ficomp
clc
iret
or
sbb
stc
push
stos
jl
mov
loop
shl
push
cmps
out
imul
ja
push
(bad)
xlat
push
mov
sub
ret
lock
sbb
retf
jecxz
loope
std
jo
mov
iret
cdq
enter
mov
mov
jno
fistp
mov
xchg
fldenv
sbb
mov
ins
outs
pop
repnz
cmp
add
sbb
lahf
xchg
shl
jae
mov
mov
bound
aam
sbb
push
fsubr
inc
ins
xor
test
pop
test
std
cmps
push
(bad)
jns
adc
int3
nop
sub
addr16
inc
jne
dec
push
xor
(bad)
aaa
aas
dec
adc
cmc
loope
test
test
inc
xchg
sbb
scas
mov
mov
and
in
(bad)
push
sub
cmp
pop
cmp
sti
ja
adc
sub
ret
sti
xor
mov
int
in
cmp
fabs
inc
cdq
bswap
ret
push
fsubr
adc
add
cwde
aaa
pusha
xchg
or
inc
fbstp
call
and
adc
fmul
push
lods
xchg
bnd
and
push
mov
push
jns
mov
pusha
stc
mov
push
int3
movs
(bad)
fnsave
xor
cmc
test
push
imul
lods
call
inc
jecxz
dec
imul
pcmpeqw
shl
push
add
push
or
pop
jnp
into
pop
jbe
call
sub
xlat
mul
js
sar
adc
shr
dec
cmp
dec
and
cmp
sub
jmp
aas
jecxz
fdiv
(bad)
dec
cs
add
nop
scas
add
rol
int
mov
and
xor
dec
pushf
sbb
xchg
rol
and
repnz
std
cli
test
xchg
(bad)
popf
imul
mov
or
call
xchg
sar
repnz
and
xchg
into
or
adc
retf
popf
rol
icebp
int
out
loop
inc
adc
xor
pop
not
jbe
fisubr
dec
imul
jp
neg
in
lods
in
add
cmps
adc
fidivr
mov
jl
test
enter
add
pushf
jb
pop
fstp
pop
nop
mov
leave
(bad)
sti
pop
dec
fsub
bound
in
mov
cli
ror
stos
std
dec
nop
sbb
mov
lahf
in
add
in
push
inc
cdq
or
in
fs
add
lahf
add
inc
(bad)
pop
or
js
enter
push
xor
mov
inc
sbb
pop
test
inc
icebp
inc
xchg
loopne
lock
xlat
cs
arpl
loope
not
aas
stc
add
rcr
dec
sub
rcl
mov
les
js
push
rcr
lds
(bad)
push
not
dec
fisub
sub
jns
jns
in
fwait
cld
jecxz
shl
add
inc
push
sub
lahf
loop
xor
movq
push
mov
addr16
pop
imul
call
aas
daa
sub
jbe
aas
fstp
faddp
retf
xchg
pop
add
and
pop
sub
mov
sbb
mov
and
push
popa
inc
fcomp
(bad)
fs
xor
cmp
mov
mov
jns
(bad)
mov
fldcw
out
mov
inc
pusha
mov
into
or
push
inc
mov
push
rcl
test
cli
test
mul
mov
push
sub
imul
ins
pop
add
push
loop
sub
jg
int
scas
fs
dec
mov
sub
inc
or
jne
xchg
add
out
cli
push
and
jge
push
mov
stc
sbb
pop
jl
movlps
out
mov
cdq
ret
imul
or
mov
jle
bound
jg
rcl
outs
add
les
movhps
jp
ret
lods
fnstcw
xor
inc
clc
(bad)
shl
jno
push
int3
out
cmp
cld
jnp
inc
(bad)
or
or
sbb
jg
(bad)
repnz
mov
adc
push
mov
or
and
mov
add
xlat
fcmove
shl
loop
fst
mov
clc
mov
jmp
xchg
dec
mov
call
add
push
(bad)
mov
dec
xor
sahf
sbb
inc
mov
jge
dec
sar
mov
cmp
stc
aas
retf
xchg
add
mov
rcr
push
outs
mov
sub
jbe
out
lock
push
retf
in
xor
mov
clc
xor
aad
rol
push
xchg
jg
dec
(bad)
dec
inc
test
push
xchg
mov
cmp
xor
aaa
mov
xor
dec
jne
push
cdq
ss
xchg
ror
out
fucomi
sub
hlt
cmc
clc
fwait
pushf
or
pop
jne
cwde
dec
ins
ret
xor
inc
xlat
inc
fisttp
and
fst
ins
es
xchg
adc
lods
sub
add
mov
pop
jno
cmp
and
jns
fistp
call
mov
enter
or
mov
arpl
enter
dec
mov
clc
mov
(bad)
mov
fucomp
xor
push
fcom
adc
or
sub
scas
ror
ficomp
pop
dec
pop
cs
or
jno
pop
cld
aad
fxch
jecxz
or
dec
mov
jb
ds
mov
cwde
fsub
pop
add
mov
test
add
aaa
imul
test
jmp
jo
repz
add
test
push
in
mov
ret
adc
push
lods
jns
xlat
inc
mov
sbb
sub
cli
aaa
inc
pop
or
pusha
pop
ss
leave
cli
movs
add
cdq
push
movs
dec
xchg
xchg
popf
ss
xchg
sahf
cmp
into
xor
and
sub
fsub
add
(bad)
or
(bad)
into
lods
xor
jmp
jge
outs
ins
imul
sti
out
(bad)
ss
mov
out
pop
mov
and
sahf
movlhps
shr
push
xor
dec
fsub
mov
rcr
shl
stos
push
ret
push
mov
div
pop
loope
xlat
mov
sub
sar
xor
(bad)
mov
mov
and
cmpxchg
ret
scas
cli
dec
sub
inc
xor
mov
aas
rcl
out
adc
pop
(bad)
imul
dec
and
inc
xchg
es
sahf
iret
(bad)
sar
push
pop
gs
shl
test
aam
xor
iret
imul
shl
push
xchg
outs
fwait
xchg
test
fisub
inc
in
cli
push
mov
sbb
xchg
test
ret
add
hlt
in
je
sub
cwde
mov
xor
push
adc
pop
mov
in
scas
inc
add
mov
mov
pop
mov
push
sbb
adc
iret
repz
xchg
add
pop
mov
cmp
adc
mov
fmul
nop
adc
ins
out
sbb
(bad)
shl
sbb
xbegin
loop
int3
adc
jl
push
retf
(bad)
in
dec
aas
(bad)
adc
sbb
xor
push
out
jecxz
cli
retf
outs
stos
test
shr
and
mov
adc
push
lods
scas
inc
jecxz
hlt
mov
xor
nop
or
(bad)
pop
and
clc
int3
push
lahf
je
aas
es
out
(bad)
xor
push
retf
jp
arpl
adc
call
outs
cmc
stos
iret
mov
mov
add
mov
ja
adc
pop
mov
(bad)
in
jbe
seta
inc
inc
lahf
pop
mov
add
mov
adc
mov
pop
jmp
mov
mov
push
pop
mov
xor
add
out
or
push
and
mov
inc
jmp
es
adc
repnz
sbb
dec
pop
leave
fnstsw
jnp
in
fistp
sbb
and
inc
jecxz
outs
xor
mov
icebp
sti
add
push
retf
add
cmps
leave
mov
ja
fwait
xor
adc
nop
dec
cmp
jnp
push
sub
mov
push
dec
cmps
xchg
add
mov
pop
sbb
pop
scas
or
sub
xor
hlt
pop
(bad)
hlt
mov
stc
dec
ins
mov
sbb
push
cdq
or
pop
mov
lods
cwde
das
inc
pop
cmp
and
push
push
(bad)
sub
(bad)
dec
repz
adc
sub
cmps
fild
nop
add
iretw
and
ins
xchg
fcomp
aad
popf
dec
(bad)
nop
add
sbb
push
xor
mov
icebp
imul
xchg
mov
xlat
inc
fadd
or
les
stos
out
mov
add
xlat
inc
shl
sub
and
rcl
cmp
gs
aad
test
inc
dec
jmp
jbe
ins
add
mov
push
jbe
fucomi
jno
mov
cmp
pop
out
shr
mov
mov
hlt
xchg
dec
sub
jp
fs
inc
adc
xchg
push
(bad)
cmp
(bad)
idiv
inc
ficom
inc
imul
(bad)
aad
add
(bad)
into
(bad)
out
push
fidivr
sub
mov
clc
outs
out
inc
jg
push
repnz
xor
adc
das
jl
push
mov
lds
xchg
xor
xchg
inc
out
push
pushf
add
sub
ss
pop
push
(bad)
push
scas
es
test
(bad)
lock
sub
shl
enter
call
hlt
fsubr
push
adc
pop
push
lahf
xor
push
pop
aas
repnz
(bad)
or
lea
dec
test
xchg
hlt
js
movs
or
push
adc
pop
ins
(bad)
inc
mov
jge
fst
mov
lods
sbb
sub
or
test
pop
pop
xchg
dec
inc
mov
push
mov
ins
jb
mov
js
movs
sbb
cmps
xchg
xor
pop
fiadd
mov
dec
pop
icebp
adc
int
xor
cmp
jb
cmp
stos
out
test
inc
mov
(bad)
jp
mov
inc
dec
or
neg
in
and
and
pusha
mov
push
jbe
mov
lods
retf
xchg
or
test
push
pop
fld
mov
dec
sub
adc
or
fwait
lahf
loopne
sub
pop
pop
add
inc
cmc
inc
cmp
sbb
mov
mov
ss
int3
pop
jmp
retf
xchg
mov
xor
mov
pop
in
add
pop
fdivr
sub
pusha
mov
loopne
push
stos
(bad)
mov
loopne
(bad)
cwde
adc
pop
scas
test
sub
loopne
cmps
dec
mul
mov
adc
daa
ror
dec
test
sbb
fisub
in
gs
jl
fld
jecxz
push
mov
or
rcr
in
bound
out
ss
or
test
sti
mov
pop
imul
scas
mov
in
addr16
jp
ja
bound
mov
(bad)
fld
pop
movs
test
out
dec
fisubr
inc
xor
adc
dec
jnp
test
fiadd
add
in
xchg
aaa
jne
mov
scas
or
jmp
adc
iret
scas
dec
xchg
xor
and
shrd
inc
not
scas
jbe
sbb
pop
scas
inc
cwde
xchg
sub
dec
pop
push
cs
mov
dec
retf
ins
das
(bad)
mov
ret
xchg
enter
add
mov
inc
dec
add
fcomp
xlat
lods
cli
cdq
(bad)
pushf
and
leave
adc
les
fcmovne
or
popf
sub
sbb
or
(bad)
loope
cli
sti
xor
les
je
rcr
sbb
mov
repnz
mov
or
jmp
pop
retf
jl
cdq
cli
loopne
sbb
or
lods
inc
or
fcmovu
jg
dec
fwait
sti
dec
loopne
mov
cmc
adc
xchg
mov
shld
lahf
test
outs
dec
pusha
push
shr
sti
xchg
sar
iret
mov
fimul
sub
jecxz
fistp
and
(bad)
mov
xor
test
cmc
sahf
jnp
shr
mov
push
(bad)
fdiv
xchg
arpl
hlt
je
mov
pop
fs
cmc
imul
mov
ins
jmp
gs
sub
std
mov
repnz
imul
cmp
mov
sbb
mov
(bad)
aam
fwait
mov
ins
outs
jno
cdq
movs
test
(bad)
test
dec
jnp
inc
jecxz
(bad)
sbb
jbe
jecxz
xor
sub
dec
mov
in
ficomp
pusha
pop
add
in
xor
xchg
shr
cwde
shl
retf
pop
xor
stos
jns
mov
dec
push
mov
xchg
adc
xor
test
mov
adc
inc
sub
sbb
mov
retf
in
outs
daa
in
mov
stos
fnsave
jcxz
jle
hlt
imul
jge
sti
inc
xchg
div
pop
xchg
ret
pop
cmp
mov
inc
cmc
imul
std
pop
iret
std
mov
leave
adc
mov
rol
xchg
mov
pop
and
mov
test
pop
mov
enter
mov
in
pop
mov
pusha
or
jae
jns
or
lds
mov
in
sub
mov
jle
stos
xchg
xchg
adc
rcr
scas
xchg
and
sub
mov
or
mov
mov
xor
sub
inc
arpl
add
outs
aad
add
test
dec
sub
inc
inc
sub
mov
icebp
or
es
sub
repnz
pop
test
jns
scas
sub
xlat
retf
inc
jle
pop
pop
cmp
mov
mov
std
test
fnstcw
les
movs
(bad)
mov
sbb
aaa
cmp
adc
inc
nop
and
mov
ins
xchg
pushf
add
inc
xchg
stc
xchg
jl
shr
pusha
dec
mov
fwait
dec
push
shl
loop
or
xor
inc
movs
inc
push
sahf
cmp
add
jb
sbb
xor
pextrw
xchg
push
adc
jmp
cmc
mov
hlt
add
sub
outs
and
stos
loopne
imul
inc
ror
aaa
dec
or
xchg
mov
push
xor
lock
fcmovne
add
je
or
dec
aaa
jmp
aam
sbb
imul
cli
test
mov
inc
repnz
inc
lods
cmp
jecxz
lods
in
sub
add
or
mov
pop
sbb
mov
xchg
sbb
mov
loop
and
daa
xlat
fistp
retf
jle
push
movs
push
jge
test
into
ins
inc
xchg
mov
stos
mov
jl
xchg
leave
fwait
scas
movs
ins
mov
pop
mov
out
or
(bad)
mov
fcmovbe
push
jnp
(bad)
aad
cmps
(bad)
lds
push
adc
jns
shr
push
lods
lods
outs
das
add
add
inc
daa
cli
cmp
add
aas
sbb
retf
shr
mov
inc
mov
hlt
int3
(bad)
sbb
add
rol
pusha
scas
scas
cmp
xchg
fnsetpm(287
jnp
adc
cli
jle
nop
pop
icebp
or
in
mov
lods
in
mov
pop
sbb
out
call
cld
dec
and
in
pusha
call
add
mov
movs
pop
repnz
in
rol
lahf
int3
pop
push
mov
or
dec
sbb
inc
(bad)
das
push
mov
pop
jp
add
retf
or
jb
fstp
xor
in
inc
xor
retf
call
xor
or
add
xchg
jg
xor
stc
ds
std
rcr
inc
inc
out
pop
les
mov
aas
and
enter
shl
push
pop
stos
and
movs
(bad)
sub
jne
or
push
inc
inc
out
ja
cmp
je
add
and
xchg
enter
loop
inc
mov
sub
pop
mov
shl
loop
jmp
or
ret
mov
lock
test
push
(bad)
sbb
cmp
shl
jp
retf
sbb
sar
sbb
push
int3
cmps
jl
mov
push
daa
arpl
jns
rcr
mov
and
out
cdq
push
cmps
(bad)
dec
adc
loop
or
data16
mov
ins
int
mov
mov
or
cmp
cmovae
or
mov
xchg
repz
(bad)
jl
jo
lods
push
test
xor
sbb
out
pop
fwait
outs
jbe
in
test
mov
leave
stos
fucomip
dec
or
(bad)
movs
cmp
enter
cs
adc
push
inc
in
xchg
or
add
add
lock
sub
adc
xor
sub
mov
dec
sbb
push
pop
mov
mov
cwde
stos
sub
sbb
div
retf
pop
sub
aaa
hlt
ret
out
jno
ja
and
jge
test
or
ins
(bad)
or
pop
mov
icebp
(bad)
cmp
jmp
stos
add
(bad)
and
in
xor
in
movs
inc
jns
sbb
ins
mov
xchg
or
sub
das
fdiv
enter
ds
or
(bad)
push
jnp
sbb
lds
mov
xchg
push
inc
push
in
push
and
fadd
jno
mov
aam
pusha
adc
dec
movs
pop
lahf
mov
(bad)
xor
retf
mov
mov
retf
cdq
push
jo
mov
xchg
ficomp
jb
jmp
stos
cli
jbe
test
popf
ret
(bad)
ss
jo
aaa
retf
cwde
(bad)
js
sbb
mov
mov
jecxz
rcr
pop
xchg
aas
test
jne
mov
inc
or
jae
dec
(bad)
mov
or
mov
retf
jo
les
std
push
std
mov
imul
pushf
sti
adc
shl
stos
dec
inc
bound
dec
push
icebp
mov
sbb
pop
jno
mul
lea
adc
inc
add
enter
dec
int
repnz
icebp
ins
pop
data16
inc
mov
add
jp
add
int3
sub
lock
xor
call
cli
adc
loop
cmp
xchg
jbe
mov
movs
out
cmp
xchg
inc
xor
push
xor
mov
fmul
sbb
and
sbb
imul
mov
jle
clc
test
push
test
scas
(bad)
add
or
xchg
clc
in
dec
cmps
popa
pop
call
add
lahf
inc
sub
add
cmp
pop
mov
mov
jbe
sahf
lock
sbb
movs
and
test
push
into
cmp
test
dec
and
mov
jle
cld
cmp
bound
clc
adc
dec
jecxz
jl
fsub
hlt
jg
jle
add
adc
aaa
pop
outs
jecxz
rol
test
xchg
add
mov
add
dec
jg
adc
pop
jge
cmps
jns
popf
popa
jne
push
mov
or
ja
jnp
push
out
xchg
dec
xchg
inc
addr16
icebp
mov
in
neg
pop
push
or
lds
(bad)
and
dec
pop
push
add
into
jns
add
inc
mov
call
in
mov
mov
add
adc
jg
pop
adc
xlat
inc
mov
popa
pushf
cli
cld
mov
pop
pop
adc
mov
mov
mov
(bad)
mov
loope
inc
ja
aas
xchg
push
mov
aam
mov
push
sub
inc
sub
in
neg
stc
xchg
xchg
jl
ins
loop
xor
test
rol
ficom
sub
sar
movs
adc
adc
xor
test
mov
movs
xchg
in
mov
ret
xchg
lahf
push
(bad)
cmp
sbb
fsubr
jecxz
mov
loope
inc
sbb
jno
call
xor
and
mov
jb
xor
mov
int
wbinvd
pusha
(bad)
mov
cmp
dec
ins
adc
pop
fidivr
adc
xchg
(bad)
pusha
sbb
enter
ss
call
mov
pop
mov
(bad)
sbb
inc
push
inc
gs
lods
cmp
xchg
jbe
(bad)
aas
and
xchg
movs
outs
popa
inc
jl
sahf
out
ss
mov
hlt
scas
cli
ffree
xchg
add
orps
jmp
dec
retf
push
cmc
fwait
mov
sub
cmps
mov
cmp
dec
mov
ficomp
cmp
ret
nop
dec
mov
sub
adc
cmp
mov
dec
test
(bad)
in
or
scas
(bad)
cmp
jg
in
cmp
cmps
jno
clc
sti
nop
and
in
xlat
ins
mov
int3
sbb
dec
jle
push
cmp
cmp
pop
pop
test
popf
ds
retf
dec
pop
pushf
mov
add
stos
out
or
or
inc
test
dec
test
adc
mov
dec
push
or
xor
dec
xchg
loope
cmps
iret
mov
fs
inc
ins
push
sbb
and
mov
pop
sub
fdivr
sub
int3
cdq
pop
mov
outs
sbb
or
movs
in
cmps
or
cmp
addr16
mov
jmp
lea
and
mov
inc
push
mov
fistp
gs
mov
fdiv
jo
xchg
jnp
jb
loop
not
data16
and
sbb
sahf
jbe
sbb
or
test
movs
cmps
mov
mov
sub
xor
mov
clc
rcl
rol
mov
add
cwde
mov
adc
neg
data16
test
shl
sahf
pop
xor
xchg
cmp
push
push
mov
xchg
xor
mov
(bad)
out
add
adc
xchg
std
cmc
fmul
stos
xchg
cmc
ds
dec
repnz
xchg
aas
dec
call
add
mov
cmp
pushf
sbb
test
call
icebp
cld
in
movs
push
adc
fild
mov
shl
jg
(bad)
mov
mov
or
rcr
jo
mov
push
retf
shl
adc
pop
(bad)
(bad)
sub
jmp
stos
or
xor
jle
and
pop
cmp
sbb
push
aaa
jecxz
jg
push
movs
and
clc
pop
scas
ds
xchg
push
adc
dec
jp
xor
out
(bad)
test
jb
ror
xchg
pop
pushf
jbe
imul
adc
mov
cmps
cmp
mul
mov
or
jle
sbb
push
es
sbb
mov
cmp
out
xlat
inc
in
stos
sbb
sbb
adc
mov
es
xchg
outs
je
xchg
cmp
gs
daa
loope
sahf
push
out
cmp
xor
out
mov
cmp
daa
ja
xor
mov
or
push
neg
stc
mov
call
xchg
shr
(bad)
shl
test
xor
pop
movs
and
mov
push
pushf
and
inc
and
adc
fdiv
repz
xchg
jae
xor
sub
in
int3
fbld
cmp
rcl
pop
pop
cmps
fstp
cs
outs
add
jg
add
gs
call
jge
xor
popf
push
push
and
fisubr
cmp
aad
pushf
stos
sbb
js
sub
jl
loope
mov
pop
mov
dec
sub
xlat
mov
sbb
xchg
imul
cmp
(bad)
data16
dec
jbe
out
xchg
mov
gs
or
jnp
in
outs
jae
mov
inc
add
in
mov
imul
sub
outs
fnsave
inc
int
mov
in
jns
xchg
leave
pop
pop
loope
stc
out
sub
arpl
add
sahf
push
(bad)
jmp
push
and
dec
push
dec
mov
or
and
gs
out
lods
sbb
pushf
lahf
(bad)
mov
retf
aad
das
iret
ret
dec
jmp
push
add
mov
rcr
sub
outs
sbb
dec
mov
push
add
push
xlat
jbe
inc
xor
cmp
dec
pop
xor
adc
xchg
popa
jle
call
mov
(bad)
addr16
and
test
rcr
xchg
cdq
mov
sbb
aaa
sbb
mov
cmp
out
add
popf
and
jmp
mov
(bad)
xchg
std
mov
jns
call
or
cmps
test
adc
mov
jnp
call
mov
dec
clc
lahf
jbe
loope
xchg
jbe
imul
imul
iret
mov
inc
fnstcw
inc
jmp
and
cmp
test
mov
hlt
test
jg
mov
mov
or
mov
mov
lahf
fwait
(bad)
repnz
push
icebp
sub
imul
ins
je
adc
movs
je
jge
ds
sbb
xor
jp
adc
sysexit
inc
addr16
add
cs
mov
add
mul
inc
mov
(bad)
sbb
sub
adc
aad
mov
dec
jge
dec
test
push
das
inc
stos
add
add
or
jne
addr16
xor
sar
jne
iret
lahf
adc
dec
xchg
mov
cmp
ds
mul
mov
inc
mov
jns
ror
test
push
out
adc
dec
mov
pop
mov
jecxz
inc
rcr
outs
sti
push
sbb
les
push
popa
imul
daa
test
out
jb
stos
and
push
push
outs
add
aas
pop
pop
adc
jbe
leave
adc
imul
enter
fs
shr
pop
pop
and
mov
xchg
jno
or
jnp
xchg
sub
stc
mov
sbb
jmp
call
inc
iret
cmp
push
movs
adc
fcomp
inc
popf
hlt
adc
icebp
sbb
pop
inc
cdq
rep
jae
mov
enter
or
mov
fst
mov
sub
pop
sbb
sbb
movs
retf
(bad)
pop
xchg
xchg
xor
mov
xor
movs
ret
jbe
aam
xor
ds
sub
stc
pop
popf
or
and
cmc
imul
or
add
sbb
enter
lods
mov
push
cs
dec
cmp
or
fwait
dec
xchg
fs
stos
sub
rol
out
fild
idiv
jmp
test
pushf
push
or
mov
adc
sub
jae
shl
jmp
sub
cmps
cld
repz
test
dec
pop
outs
sbb
jns
(bad)
int3
add
retf
sub
cli
enter
lea
inc
in
call
icebp
ins
xchg
dec
ins
pop
and
fdiv
mov
push
push
sbb
or
and
pop
iret
sub
in
mov
lods
sbb
into
push
cmp
retf
sar
cmps
(bad)
or
cmp
sub
xor
jl
sbb
pop
cwde
lods
lods
call
inc
sub
jmp
out
ficom
adc
in
in
out
in
lock
(bad)
push
iret
cmp
dec
out
add
jge
cmps
jle
test
adc
adc
shl
jmp
test
test
sahf
sar
jge
xchg
adc
rcl
sbb
pop
ja
mov
jne
push
aas
cs
rcl
push
and
shr
sub
jbe
enter
dec
enter
or
pop
add
push
pop
and
pop
pop
jp
cmp
mov
push
outs
or
popa
xlat
mov
(bad)
jbe
xor
call
mov
iret
mov
mov
ret
or
pushf
inc
(bad)
cmp
mov
pop
push
enter
in
mov
test
scas
cwde
jle
cs
les
xor
pop
mov
test
pushf
jne
add
jp
jecxz
and
jecxz
pop
lea
jp
mov
aaa
(bad)
jecxz
ja
lods
stos
pop
mov
push
jae
ficom
xor
out
inc
inc
stos
(bad)
lock
and
ficom
repnz
cmc
or
ss
(bad)
push
aad
xbegin
test
sbb
adc
or
cmc
movs
bound
cli
aas
popf
imul
dec
or
push
clc
loopne
into
cmp
adc
dec
adc
push
fwait
lock
mov
pushf
in
push
push
pusha
cmps
add
jae
push
dec
or
fsub
call
in
push
cwde
les
call
cmp
icebp
aas
idiv
fidiv
sbb
icebp
pop
iret
jmp
pop
push
outs
mov
xor
jnp
jne
push
fldenv
inc
scas
mov
data16
and
rcr
rcr
icebp
xor
(bad)
mov
or
jno
mov
jno
enter
cmpxchg
not
push
out
sar
jmp
lods
dec
jb
mov
imul
jecxz
inc
push
pop
pop
jo
sub
mov
push
inc
fisubr
or
scas
inc
sahf
lock
sbb
hlt
inc
retf
mov
aas
or
shr
xor
loope
push
adc
push
push
push
stos
ja
rcr
inc
mov
push
jmp
enter
stos
ds
shr
dec
jmp
xor
push
xor
test
xchg
test
lds
test
sub
les
out
jnp
lock
into
cmps
ss
mov
mov
xor
les
test
stos
and
push
dec
sbb
sub
adc
sub
lock
(bad)
cmp
mov
adc
adc
push
fs
in
pop
lods
inc
push
es
push
scas
adc
xlat
pop
das
push
push
into
int
test
mov
mov
push
dec
cs
mov
mov
mov
sub
fnstenv
sub
fsubr
add
dec
xchg
mov
imul
sub
scas
lea
pop
in
xor
and
shl
sub
pop
jae
int
push
mov
enter
add
lock
cdq
movs
rcl
mov
fidiv
aaa
mov
sub
push
into
(bad)
push
adc
or
xchg
push
dec
jno
inc
stc
retf
mov
dec
or
cs
stos
and
lea
gs
or
cmp
xchg
pusha
lods
xlat
out
sbb
aas
mov
dec
push
or
sbb
jb
(bad)
jo
or
push
dec
push
sbb
lahf
stc
in
loope
mov
xchg
lahf
jnp
fs
mov
xor
ret
jne
jae
outs
mov
hlt
loope
dec
sbb
pop
das
or
icebp
push
cmp
xchg
stc
fisubr
scas
jo
lods
add
cdq
call
popa
sar
ret
sbb
ret
retf
dec
(bad)
rcr
stc
jno
mov
mov
js
mov
sbb
lock
cld
mov
xor
push
dec
jp
ret
std
mov
into
xchg
cli
mov
pop
movs
scas
stos
je
in
jecxz
(bad)
repz
xor
(bad)
mov
sbb
mov
int
pop
dec
jle
rol
sub
nop
or
pop
xchg
mov
loope
pop
out
lock
div
loope
inc
push
lods
pop
cmp
jbe
jno
jmp
xchg
inc
mov
mov
cmp
sbb
jnp
mov
outs
xchg
pop
loopne
jns
std
push
(bad)
int
jno
adc
and
dec
xor
or
shl
add
jmp
sbb
cmp
ins
or
inc
and
mov
icebp
xor
sub
shl
mov
retf
sbb
cmp
pop
sub
(bad)
addr16
shl
or
cdq
fs
push
movs
sbb
int3
cmp
js
jae
ins
sub
jle
jge
inc
mov
push
nop
sbb
dec
xchg
inc
xor
aaa
pop
lahf
jge
repnz
mov
adc
aaa
mov
dec
mov
cwde
lock
add
std
pop
(bad)
mov
cwde
xor
fsubr
xchg
mov
shr
pop
jmp
sbb
adc
fisubr
mov
loopne
call
pop
ss
or
xchg
inc
inc
mov
fcmovnb
mov
xor
mov
push
into
into
sbb
xchg
ret
movs
sub
xor
mul
or
outs
jnp
imul
pop
ins
test
in
lds
xor
mov
rol
and
xchg
js
mov
into
or
mov
(bad)
cmp
jmp
push
mov
lock
or
loopne
test
adc
sbb
call
fsubr
(bad)
pop
pop
pusha
stc
js
inc
and
ds
dec
and
cli
shl
retf
lock
popa
mov
sbb
out
inc
dec
pop
arpl
cmp
(bad)
ins
test
mov
jno
push
aam
sbb
imul
mov
cmp
leave
fsub
psrlw
mov
pop
jmp
or
mov
lods
movs
shl
mov
adc
xchg
fcmovnb
pop
sub
mov
nop
mov
lods
jmp
mov
imul
mov
add
in
loopne
xchg
add
pop
push
movs
cmp
or
xchg
pop
or
rol
in
dec
sti
xchg
mov
shr
aaa
jae
or
loope
ror
aam
lea
pushf
lock
int
sbb
ret
mov
(bad)
fcom
xor
iret
jo
ins
jno
push
jnp
fnsave
sub
inc
mul
mov
pop
mov
loopne
out
sub
push
clc
out
outs
push
aam
fmul
mov
mov
(bad)
test
cwde
sub
fadd
(bad)
sar
pop
lds
push
push
and
out
mov
ret
add
mov
call
stos
pop
dec
sar
add
mov
aam
mov
sbb
inc
sub
ret
sbb
(bad)
and
ror
je
sahf
mov
mov
jmp
test
mov
rcr
push
inc
into
pop
jg
ins
cmp
add
mov
popa
retf
or
adc
lods
push
cli
and
in
in
int
inc
xor
outs
cmp
jl
xor
inc
sar
aam
test
jl
jae
out
pop
(bad)
xor
mov
pop
or
movs
cwde
in
test
(bad)
in
test
out
ja
inc
lea
fimul
pavgw
push
adc
cmp
ins
cmc
stc
neg
mov
sub
ret
out
pop
xor
mov
loop
shl
mov
outs
ja
in
pop
lahf
xor
sbb
jmp
dec
dec
iret
lds
mov
xchg
mov
ss
pop
mov
in
sbb
faddp
mov
xchg
mov
push
clc
cmp
call
(bad)
ror
int
inc
adc
dec
test
pop
(bad)
pop
mov
(bad)
pop
popf
test
scas
pop
mov
int3
add
ins
movs
add
std
mov
pop
adc
popf
mov
loopne
icebp
sub
cli
loopne
into
mov
jge
inc
out
int
mov
pushf
icebp
repnz
and
test
push
fst
iret
(bad)
stos
repnz
fsub
(bad)
mov
xchg
inc
mov
mov
retf
xor
inc
repz
fisttp
mov
(bad)
aaa
rol
cmp
int
and
xor
lods
dec
mov
nop
mov
xor
adc
call
icebp
popa
xor
popf
push
push
ja
and
and
ror
push
pop
inc
inc
inc
sti
rep
mov
jg
sub
add
test
push
adc
add
cmc
ror
ret
dec
scas
mov
aaa
inc
add
clc
push
ret
rcl
test
nop
leave
mov
outs
les
push
mov
mov
mov
mov
idiv
popa
and
inc
inc
push
xor
arpl
cmp
movs
mov
ja
push
add
or
or
(bad)
arpl
fisttp
xchg
xor
dec
fs
push
xchg
jl
or
inc
fistp
ins
gs
dec
(bad)
dec
pushf
mov
or
mov
rcr
mov
xchg
outs
aas
adc
jns
jo
inc
call
sbb
mov
push
push
pusha
fstp
out
addr16
das
push
(bad)
inc
mov
push
(bad)
lock
sbb
popa
out
fdivr
(bad)
jbe
jge
cmp
nop
xor
mov
ja
adc
in
dec
leave
jle
test
sub
dec
fprem
stc
fs
mov
adc
in
mov
adc
inc
scas
push
(bad)
dec
dec
(bad)
loop
xchg
mov
mov
jmp
inc
(bad)
pop
stos
mov
imul
or
jbe
in
mov
sahf
popa
cmp
pop
in
dec
ss
cmp
mov
sahf
mov
add
inc
cli
cwde
cmps
push
jle
pop
lss
int3
jae
jle
add
lock
retf
mov
ja
cmp
jb
adc
mov
int3
inc
push
ins
or
popa
fadd
sbb
add
(bad)
push
xor
pop
push
mov
jbe
mov
xor
shr
in
mov
(bad)
rcl
and
fild
mov
jbe
jp
fucomip
arpl
sub
push
xchg
mov
(bad)
fcomp
push
adc
xor
aad
bound
aaa
or
in
push
pop
or
stc
mov
inc
fwait
jne
ds
int
aam
adc
mov
sahf
inc
aad
and
mov
pop
push
mov
fst
mov
repz
cmp
clc
jg
je
adc
stos
call
fs
aaa
push
jbe
in
icebp
cmp
inc
pop
outs
sub
jbe
in
inc
rol
mov
shl
hlt
xor
jp
icebp
movs
sti
or
jae
fwait
sub
cmps
dec
test
mov
dec
pop
ins
mov
cmp
mov
imul
adc
xlat
mov
into
push
pop
pop
leave
dec
mul
popa
in
mov
sub
imul
lock
xchg
adc
test
addr16
nop
jae
mov
movs
shr
jo
mov
ret
adc
ror
xor
retf
bound
gs
sub
out
cs
mov
adc
test
je
dec
gs
mov
adc
add
leave
movs
mov
cmc
ret
adc
jmp
mov
ss
je
fsubr
mov
adc
movs
lock
mov
jae
fiadd
in
gs
lock
inc
xor
retf
xchg
hlt
cmc
jae
arpl
jp
cmps
in
mov
les
test
pop
mov
mov
fst
daa
(bad)
lods
jbe
sub
mov
sbb
arpl
jmp
je
fdivr
xchg
(bad)
or
repnz
call
sti
ds
xor
in
add
loope
sbb
push
or
mov
fadd
inc
jnp
out
icebp
pop
fimul
rcr
mov
sbb
std
xor
out
in
shl
adc
and
stos
clc
imul
scas
scas
dec
sbb
les
or
jmp
inc
comiss
inc
imul
test
jo
arpl
cmp
xchg
aad
xor
ins
lahf
xor
data16
sar
out
sub
pop
adc
ja
jp
mov
or
in
and
sar
push
not
cwde
or
jne
aam
mov
cmps
mov
scas
sub
fnsave
daa
dec
push
gs
jmp
bound
call
inc
in
push
in
les
aas
test
cmp
add
pcmpgtd
xor
add
and
adc
cld
pop
fist
vmread
aaa
jns
mov
jnp
adc
mov
add
cmp
js
lea
fsubr
add
xchg
adc
mov
lock
inc
imul
pop
mov
lds
fwait
std
cmps
(bad)
push
stos
(bad)
nop
sti
loope
or
mov
mov
mov
das
(bad)
jne
pop
sub
test
std
mov
push
adc
sub
dec
add
and
in
dec
ins
fisttp
in
stos
add
push
out
ss
in
outs
dec
lock
xor
mov
scas
adc
adc
into
std
pop
mov
xor
pop
movs
rcl
inc
mov
in
mov
pop
(bad)
dec
in
outs
push
adc
inc
outs
inc
jp
outs
in
and
cmps
mov
mov
out
mov
fst
add
std
lods
into
sub
jns
jmp
lods
ret
in
lds
xchg
mov
xlat
stc
cmp
xchg
add
xor
or
pop
in
pop
sbb
mov
mov
mov
jb
mov
xchg
inc
mov
push
and
in
fdiv
cld
(bad)
mov
out
dec
inc
ret
out
sbb
xor
xor
xor
stos
jmp
lock
jle
adc
aad
push
inc
or
xchg
inc
jae
lods
add
mov
hlt
mov
lods
mov
cdq
xchg
stos
cmps
imul
pop
push
test
ret
dec
push
push
sbb
jbe
xchg
jbe
inc
pop
jo
jg
and
push
cmp
sub
inc
hlt
dec
js
sar
lods
xlat
out
loope
and
je
inc
xchg
loopne
clc
jnp
pop
scas
or
outs
les
or
cmps
repnz
adc
shl
mov
ja
jnp
loop
inc
enter
push
addr16
push
or
ret
sub
jp
jge
push
adc
(bad)
xor
add
dec
mov
repz
xchg
call
or
push
in
ins
sub
push
and
mov
sub
inc
add
sbb
cs
dec
aaa
aaa
(bad)
and
loope
sahf
sbb
in
pusha
std
adc
sbb
inc
cli
add
sbb
idiv
sbb
xlat
jns
or
aaa
xor
mov
lods
jmp
cmp
lods
enter
jecxz
pop
in
(bad)
dec
imul
pop
pop
xchg
jmp
in
fdivp
outs
out
out
das
das
inc
mov
add
jmp
outs
bound
and
sub
xor
aaa
mov
push
test
movs
inc
adc
add
jb
arpl
nop
retf
mov
inc
out
mov
dec
jmp
push
push
sub
(bad)
mul
dec
(bad)
fbld
ins
inc
loop
fwait
ins
daa
mov
push
pop
les
pop
pop
mov
(bad)
jle
je
ins
or
fdiv
inc
jno
xchg
inc
dec
gs
push
push
and
cmp
pusha
push
sub
adc
fistp
xor
inc
fdiv
jl
sub
shl
(bad)
fstp
test
ret
and
push
xor
rcr
mov
dec
outs
test
mov
lahf
sbb
nop
aaa
pushf
mov
sbb
push
and
outs
xchg
pop
mov
or
inc
scas
gs
outs
clc
faddp
mov
xor
or
popa
lock
dec
pushf
mov
fld
test
sbb
mov
jo
mov
scas
std
cmc
adc
ins
jl
and
call
xchg
cmp
enter
mov
pop
mov
adc
pop
or
or
shl
inc
push
pop
dec
loope
push
out
movs
mov
gs
cdq
mov
rcl
or
fdiv
loop
sub
add
(bad)
mov
fist
(bad)
sbb
cmps
repnz
lea
enter
inc
dec
test
pusha
add
jo
(bad)
pop
daa
mov
add
es
xor
mov
ror
or
cli
jmp
cli
push
test
adc
popa
aas
sub
push
fwait
in
cmps
mov
fcom
cmps
pop
dec
lods
je
cmps
(bad)
in
mov
jp
push
and
in
mov
mov
cmp
mov
and
jnp
std
cmp
inc
add
jp
and
sub
fistp
mov
pop
les
dec
repnz
adc
repz
mov
mov
int3
stos
aam
mov
aaa
mov
not
aaa
lods
repz
mov
push
iret
pop
mov
stc
aas
outs
call
test
popa
and
call
sub
inc
sub
mov
inc
loop
movs
sub
ret
push
adc
retf
sahf
aam
out
cmp
icebp
call
call
pop
aas
xchg
or
mov
sbb
movs
xadd
retfw
nop
add
and
(bad)
(bad)
out
ret
stos
adc
mov
xchg
ds
inc
jmp
sbb
pop
push
push
sbb
pop
xor
sbb
pop
jb
push
fistp
mov
sahf
sub
sti
cmp
es
iret
add
loop
xor
daa
ficom
cmps
lods
(bad)
retf
out
outs
adc
sar
or
outs
or
mov
inc
jnp
or
(bad)
outs
inc
jne
dec
cwde
xor
test
dec
out
and
ret
sub
pop
inc
push
push
sbb
pop
repz
movs
stc
aad
push
sub
xor
test
pop
mov
outs
pushf
lock
pop
add
outs
or
inc
add
xchg
fmul
daa
ret
sbb
mov
std
mov
push
les
sbb
mov
test
push
inc
pop
mov
icebp
lods
ret
xchg
inc
(bad)
fstp
or
push
xchg
dec
fsubr
scas
sbb
mov
jb
lock
xchg
push
push
mov
mov
xchg
pop
imul
popf
mov
add
imul
(bad)
out
cmp
frstor
mov
repz
inc
cmp
pop
ins
push
into
xor
and
dec
mov
addr16
sbb
xchg
xor
jo
stos
cs
inc
mov
imul
push
jge
inc
jle
popf
and
sub
xchg
xor
dec
jae
cmp
imul
or
mov
pop
cli
and
and
or
popf
mov
sbb
test
ja
imul
sahf
test
retf
adc
adc
jne
mov
sbb
xchg
loopne
pop
mov
jne
scas
dec
jno
push
ss
pop
xchg
daa
dec
repnz
fwait
out
iret
iret
and
dec
shr
sbb
dec
aad
cmp
ror
fisub
test
fld
mov
shr
retf
inc
xor
xchg
jmp
cmp
int
out
add
dec
into
lods
or
out
mov
cs
scas
aas
sbb
shl
xchg
cld
scas
sahf
add
mov
jo
xchg
test
jecxz
pop
fsubr
sub
push
mov
cmp
call
lahf
ss
mov
push
ins
xlat
stos
pop
je
adc
ins
mov
jnp
lods
(bad)
jmp
ins
ins
cwde
idiv
lods
mov
add
cmp
mov
or
int
sbb
stc
mov
out
mov
inc
add
jbe
mov
ins
sbb
jno
fld
cld
pop
and
mov
adc
pusha
hlt
xchg
xlat
jns
(bad)
lock
aam
push
and
xor
mov
lds
pusha
pop
sbb
dec
rcl
das
mov
add
xor
mov
test
rcl
adc
pop
jo
(bad)
mov
lock
push
test
xchg
sahf
call
sub
repz
adc
add
mov
inc
cmp
xchg
sub
mov
rol
js
pop
mov
nop
movs
xchg
int
mov
or
bound
pop
enter
popf
popa
pop
shl
jmp
out
mov
in
cmp
sbb
jb
or
cmp
out
rcl
sahf
(bad)
arpl
sbb
push
ret
shl
in
xchg
xchg
push
out
ret
pop
cmp
cmp
test
sbb
sti
inc
mov
or
sahf
cli
into
outs
shl
out
inc
call
and
cmp
or
cmps
xor
nop
(bad)
cmp
inc
dec
sub
(bad)
(bad)
adc
mov
lods
add
jmp
push
xchg
and
fwait
es
es
mov
sub
(bad)
fild
fs
lds
les
jg
rol
rep
arpl
sbb
fild
shl
out
cld
cmp
and
cs
mov
mov
pop
push
sbb
mov
shl
in
mov
mov
xchg
mov
dec
mov
shr
popa
mov
pop
jns
scas
xor
dec
vxorps
pop
sbb
jle
ins
(bad)
loop
mov
sub
aaa
inc
cmc
adc
sub
add
enter
shl
sub
mov
cld
movs
scas
push
in
xchg
jnp
push
jnp
out
ins
in
dec
dec
out
fs
outs
pushaw
test
mov
lods
call
pop
sbb
pusha
(bad)
shl
sti
push
add
xchg
jecxz
addr16
jo
nop
dec
dec
cmp
bound
jbe
out
sahf
inc
repz
fmulp
(bad)
test
xlat
shr
pushf
add
fnstsw
lahf
popa
aaa
sub
jmp
dec
loope
fldcw
cmp
push
cmp
mov
repnz
fidiv
mov
push
test
loop
mov
sahf
cdq
popa
jne
in
or
or
or
pop
sar
xchg
adc
fsubr
call
fst
lods
sbb
ja
scas
xchg
cmp
pop
clc
mov
sub
cwde
(bad)
outs
inc
fnstsw
and
pop
(bad)
stc
lock
xchg
stos
inc
and
icebp
stos
add
loope
xor
push
fnstenv
inc
sub
repnz
sbb
jecxz
mov
pop
xor
push
add
aaa
pop
aam
sub
mov
push
test
(bad)
iret
sub
jecxz
(bad)
stos
dec
push
and
outs
cmp
xor
je
mov
pop
pop
movs
or
shl
lock
fisub
push
jle
enter
inc
sti
xchg
ffree
jae
pop
pop
push
aaa
push
adc
mov
in
mov
jmp
enter
test
or
sub
inc
not
loope
les
add
imul
popf
sbb
pop
cmp
jno
enter
push
xor
cdq
ds
lahf
push
(bad)
adc
push
or
lods
xchg
lods
jbe
test
xchg
pop
xchg
es
xlat
ss
ret
dec
xor
xchg
pop
pop
push
fisubr
idiv
sbb
jmp
sbb
pop
in
lods
sbb
aam
pop
rcr
fidivr
sub
gs
ret
cmp
in
mov
loope
loop
(bad)
mov
jle
in
dec
(bad)
sbb
dec
sbb
mov
fdivr
and
sahf
mov
ror
inc
sar
jecxz
scas
cmp
jle
jle
shl
jmp
sbb
sbb
jo
xchg
or
lods
inc
push
call
xchg
dec
inc
sbb
lds
loop
or
xor
jl
jmp
inc
mov
lea
repnz
adc
test
push
outs
fist
aaa
sub
fs
add
jo
xor
jg
mov
sub
aam
inc
cmp
ins
mov
cld
push
sbb
cdq
add
out
mov
mov
jo
outs
jmp
arpl
das
movs
enter
(bad)
pop
mov
mov
jl
popf
lock
es
inc
out
retf
bound
idiv
xchg
std
add
adc
jge
call
fstp
inc
xor
jecxz
fisttp
idiv
or
inc
retf
cs
mov
jle
push
or
xor
es
cmc
pusha
dec
pop
inc
icebp
jmp
cmc
in
mov
dec
(bad)
cli
scas
jns
mov
lds
fs
mov
ror
aaa
aaa
data16
push
loope
jae
inc
or
sbb
retf
(bad)
mov
jmp
inc
xor
out
mov
dec
mov
(bad)
mov
movs
inc
cmc
scas
push
enter
ret
sub
cmp
mov
mov
mov
enter
jno
fisub
into
dec
pop
dec
xor
mov
out
sbb
mov
scas
pop
or
xor
fistp
dec
lea
push
and
test
jl
mov
call
ret
adc
gs
adc
adc
jg
mov
in
pop
xor
pop
rcl
addr16
neg
mov
adc
xchg
icebp
push
jmp
cdq
dec
test
inc
call
in
or
push
loopne
or
sar
stc
aaa
jno
loope
cwde
int
sbb
aaa
mov
and
ret
or
pop
sbb
push
mov
jp
loopne
sub
mov
(bad)
xchg
xchg
enter
xor
xor
(bad)
mov
pop
xchg
mov
jae
enter
je
(bad)
std
inc
ins
nop
adc
jp
jbe
call
out
rdtsc
push
add
push
inc
in
xchg
pop
xadd
sbb
stc
test
add
rcl
and
stos
xchg
xchg
addr16
push
mov
pop
sub
cld
stc
fst
xchg
cwde
in
aam
outs
call
add
push
ins
fidivr
add
add
das
xor
push
arpl
add
mov
cdq
and
enter
inc
sub
mov
or
ss
xor
(bad)
outs
sub
dec
mov
pop
clc
outs
not
ret
imul
ins
pop
jmp
lea
push
les
push
xor
pop
inc
pop
ds
sahf
mov
bsr
xchg
jmp
jnp
adc
cmp
pop
rol
mov
int
int
or
jp
lods
add
jecxz
aam
jmp
add
es
jno
sbb
arpl
xchg
cmp
add
xor
push
jne
jo
mov
repnz
dec
jg
rcr
fisttp
xchg
jmp
repnz
or
xchg
dec
dec
push
dec
xor
loopne
mov
and
test
pop
aad
outs
mov
out
and
add
cmps
lea
movs
inc
and
xchg
mov
ffreep
add
in
xchg
call
push
je
dec
xlat
popa
dec
inc
mov
js
das
pop
inc
push
dec
(bad)
jno
fs
xchg
mov
inc
ret
dec
xchg
add
out
mov
mov
cmc
and
pop
int
test
push
xchg
mov
(bad)
bound
in
xlat
fwait
nop
mov
lds
mov
out
sahf
fistp
xchg
xchg
cmc
mov
fist
cld
mov
jne
cld
pop
jp
shl
sbb
call
sbb
sub
movs
mov
pop
leave
hlt
dec
add
xor
or
scas
inc
ds
mov
sbb
mov
xor
inc
pop
cmc
mov
ds
ds
push
jno
aad
mov
jnp
inc
cs
push
mul
movs
mov
aam
sub
jl
and
push
mov
xchg
test
or
data16
nop
retf
inc
test
test
xchg
daa
inc
js
retf
xor
mov
push
mov
das
adc
pushf
es
pop
inc
adc
pop
xchg
xlat
in
sbb
jl
lahf
jmp
inc
jnp
mov
std
and
sub
push
out
ficomp
lock
inc
cmps
inc
xchg
popw
test
es
hlt
xchg
retf
cdq
(bad)
test
push
xor
inc
clc
call
pop
mov
jbe
cdq
das
pop
push
dec
jmp
stos
push
push
or
inc
ret
add
sti
jecxz
ins
push
mov
adc
cmp
push
mov
xchg
mov
fnclex
cmp
(bad)
cmp
ret
stos
movs
cli
test
xchg
(bad)
pop
enter
rcl
test
mov
push
or
push
sbb
gs
push
fld
xchg
scas
xchg
dec
mov
and
push
out
cwde
cmps
mov
test
sbb
out
les
retf
repz
mov
push
push
xor
inc
enter
out
ds
push
test
adc
pop
mov
inc
pop
sbb
cli
dec
inc
stos
dec
iret
inc
jmp
add
pop
cwde
sub
into
nop
ret
sub
xor
sub
lods
mov
into
int
repz
jae
fwait
pop
push
bound
rol
pop
xchg
call
dec
sbb
adc
push
fist
add
push
jmp
fldl2e
leave
xor
movs
push
add
movs
pop
icebp
nop
les
pop
or
xlat
loop
cmp
cmp
in
sub
add
in
mov
repz
gs
xchg
and
sbb
into
test
sar
push
pop
xor
sub
cmp
stos
xchg
adc
fdiv
mov
retf
pushf
ins
bnd
pop
addr16
xchg
std
fs
sar
cmp
adc
cs
mov
jl
cmp
loopne
xlat
mov
stos
jmp
adc
adc
(bad)
clc
xor
(bad)
adc
mov
jp
inc
leave
adc
sub
faddp
aaa
stc
adc
or
add
nop
and
repnz
cdq
add
and
popa
rol
dec
lods
and
movs
call
mov
imul
(bad)
xchg
cmps
push
aad
test
add
cli
dec
push
jno
leave
lods
jle
mov
push
daa
jle
stos
push
mov
inc
fbstp
mov
dec
add
sub
faddp
jns
mov
loope
ss
sbb
cli
push
or
arpl
popa
sbb
movs
cmp
push
sbb
stos
mov
in
stos
gs
lahf
xor
adc
jecxz
int
xrelease
xor
push
pop
test
jns
jmp
fisub
aam
shr
out
retf
pop
(bad)
jo
xor
pop
cmps
and
jg
scas
sti
pop
retf
out
test
pop
cmp
dec
inc
xor
dec
or
cmp
fistp
xchg
jae
and
adc
loopne
sub
pusha
pop
outs
jno
arpl
addr16
and
or
(bad)
out
mov
out
aad
mov
cdq
sahf
lods
jne
cdq
lods
sahf
aam
jmp
and
repnz
fadd
in
jl
pop
dec
in
push
mov
pop
or
xor
aaa
cdq
xor
repz
pop
mov
cmp
pop
and
aas
mov
push
outs
test
fwait
leave
shl
in
push
in
test
pushf
dec
out
and
inc
imul
push
mov
fldlg2
lahf
sar
cmp
mov
adc
inc
jg
data16
xor
mov
(bad)
sbb
ret
sti
adc
xchg
add
xchg
xchg
or
mov
xchg
or
xchg
sti
aad
dec
dec
push
push
fiadd
cmp
xchg
mov
into
test
sub
mov
das
pop
in
loope
push
push
mov
xchg
xor
(bad)
aaa
lods
or
cmp
aad
adc
sbb
out
iret
add
mov
imul
xchg
jecxz
std
or
cmp
lock
xlat
lahf
into
loop
add
mov
rcl
rcr
(bad)
jbe
xchg
lods
mov
sub
jno
cwde
push
pop
add
adc
sbb
shr
inc
mov
add
in
or
in
loop
jnp
dec
adc
mov
fcomp
push
and
pop
aam
scas
sbb
xor
je
loop
or
out
enter
stos
je
pop
cs
or
adc
push
mov
jo
push
inc
movs
dec
jo
dec
inc
lea
(bad)
(bad)
jp
into
cmp
or
mov
push
in
pop
inc
cdq
add
icebp
ficom
fucomip
sbb
fwait
jecxz
test
jno
dec
dec
pop
and
mov
call
sub
or
jmp
lahf
mov
add
dec
mov
or
xchg
sbb
sti
shl
frstor
fist
mov
arpl
mov
int
mov
ret
pop
or
stos
fchs
push
cmp
cmp
popf
xchg
dec
(bad)
dec
mov
jo
(bad)
call
mov
xor
and
cmp
pop
int
jae
jmp
jmp
mov
sub
les
cmp
push
repnz
shr
rol
movs
neg
add
fisttp
push
imul
adc
or
aaa
adc
daa
outs
adc
fimul
sub
imul
popa
jmp
mov
sahf
xchg
fadd
pushf
sbb
(bad)
push
dec
sub
push
jp
sar
mov
pop
push
cmp
test
(bad)
pop
dec
add
outs
stos
sbb
mov
into
fld
jb
cwde
jno
push
jecxz
adc
pop
cmp
adc
in
lock
mov
fisttp
into
xchg
push
ins
retf
out
inc
cmp
mov
add
dec
daa
ja
movs
cmp
dec
inc
rcr
jne
retf
mov
lds
mov
jne
sbb
mov
sub
data16
mov
sub
xor
ss
jmp
and
sub
aam
push
cwde
les
add
popf
movs
das
xchg
call
popf
xacquire
add
shl
mov
xchg
mov
outs
xor
or
ja
and
jae
lock
fcmovnb
fisttp
xchg
lahf
rcr
test
mov
fidivr
outs
popf
push
jecxz
int3
cdq
cwde
mov
imul
mov
and
imul
lock
adc
jecxz
out
frstor
cmps
loop
jnp
mov
jne
push
mov
ret
cmc
or
pop
jae
js
inc
repz
std
sbb
add
mov
xchg
das
sbb
add
xchg
fldenv
fldenv
pop
push
ins
dec
sub
jl
(bad)
jnp
sub
mov
or
jp
movs
call
mov
xor
pop
retf
pop
fnstsw
cmps
ins
pop
inc
ret
push
ficom
jbe
shr
push
imul
jge
bound
jmp
jae
and
sti
inc
mov
leave
push
push
xlat
je
sub
xor
push
das
and
retf
dec
push
and
popa
mov
push
add
push
mov
loope
dec
jl
dec
loop
sbb
nop
(bad)
scas
ror
aas
std
jbe
xchg
inc
test
(bad)
jl
daa
mov
mov
or
pop
jge
das
cli
mov
hlt
cmps
loopne
std
pop
or
xor
enter
jmp
and
xchg
jne
xchg
xchg
pop
repnz
mov
aaa
dec
dec
shl
aam
and
sbb
dec
xor
cwde
jmp
out
and
pop
shl
lods
xchg
mov
mov
and
mov
(bad)
call
out
jp
data16
add
out
sti
ficom
fist
dec
and
nop
mov
outs
mov
repnz
int
push
shr
push
adc
fsub
jp
lds
pop
mov
adc
call
inc
push
adc
inc
fiadd
leave
xchg
adc
jge
inc
je
mov
add
xor
aas
xchg
test
pop
add
adc
inc
mov
jbe
mov
push
and
shr
and
push
gs
inc
movs
or
scas
call
fist
or
retf
xadd
pop
mov
xchg
xor
aas
imul
mov
test
cli
test
add
adc
mov
rcr
clc
call
mov
sub
stos
push
mov
repnz
push
add
in
pop
mov
adc
(bad)
jl
lea
test
mov
fldenv
pushf
mul
mov
mov
mov
ret
push
mov
and
jmp
outs
push
jbe
(bad)
sbb
jmp
mov
jmp
int3
sbb
inc
test
push
(bad)
cdq
cli
mov
xchg
inc
(bad)
mov
push
and
aas
dec
mov
jp
sub
inc
and
pop
imul
in
add
adc
sub
or
aam
xchg
bound
or
cmp
mov
adc
(bad)
sub
stc
mov
hlt
(bad)
enter
jo
inc
sub
add
cmp
adc
sbb
repz
cwde
jp
stos
les
in
pcmpeqb
pop
imul
rol
sub
mov
movs
in
fs
stos
nop
lods
adc
les
and
xor
cmp
lea
add
fldcw
add
adc
inc
cmovp
lock
aas
je
mov
sbb
push
(bad)
jmp
test
cld
addr16
push
icebp
clc
fild
pop
lea
xlat
xchg
(bad)
(bad)
cld
push
xchg
inc
mov
pop
imul
xchg
adc
mov
pusha
mov
out
mov
sub
cmps
add
(bad)
fwait
pop
sbb
mov
ret
sub
sbb
icebp
aas
test
ds
dec
xlat
iret
ds
mov
repz
sub
pop
sar
push
or
je
leave
outs
aaa
xchg
mov
sbb
pusha
das
fisttp
mov
cmp
adc
out
xor
cdq
retf
pop
push
test
jecxz
xchg
mov
std
mov
cwde
repz
inc
fstp
xchg
cwde
xchg
jns
clc
mov
in
jo
(bad)
imul
inc
fs
dec
test
jae
and
adc
in
fwait
adc
jmp
jle
mov
mov
cmp
repnz
xchg
add
nop
cmp
gs
shl
or
jae
ss
adc
das
test
adc
push
adc
mov
sar
and
imul
aam
mov
mov
and
xchg
pusha
sub
mov
daa
(bad)
mov
fldenv
fsub
sbb
xchg
ins
xor
(bad)
cwde
or
xchg
stos
ins
test
test
imul
call
push
lods
out
aad
call
cmp
ins
sub
bnd
push
fadd
dec
rol
test
jne
sbb
imul
sbb
(bad)
jle
jl
call
cmp
repz
add
push
push
repnz
imul
retf
in
or
scas
jle
cmps
test
sub
(bad)
loope
mov
jns
xchg
test
aam
mov
rcl
test
aas
imul
add
cmp
ins
loopne
lods
cdq
add
pop
and
mov
sbb
mov
es
ror
sbb
sbb
mov
mov
push
mov
dec
cmp
add
jne
cmp
cmps
mov
jp
jbe
push
test
and
push
and
cmp
add
or
data16
jl
scas
movs
xchg
shl
adc
jbe
jle
addr16
(bad)
xchg
clc
jo
call
adc
jp
leave
fimul
cmp
dec
dec
push
ja
and
inc
(bad)
sub
and
jne
and
nop
sub
popf
ins
mov
mov
sub
sti
jle
xor
jmp
push
repz
pop
cmp
cdq
cmp
jbe
test
in
adc
popa
xlat
push
sub
ret
pop
xchg
(bad)
cmp
(bad)
pop
push
adc
xchg
dec
cmp
adc
jbe
jp
sbb
js
loop
xor
(bad)
cmps
mov
cmps
xor
addr16
sub
cli
pop
movs
bound
sub
sub
sbb
fstp
jge
fidiv
jne
jecxz
mov
add
push
dec
shr
jns
xor
pop
adc
mov
jg
jge
ror
jno
add
pop
pop
hlt
and
jmp
pop
jmp
or
movs
dec
inc
or
xor
ret
jne
add
sbb
or
mov
stc
lahf
pop
push
and
pop
jmp
pop
pop
popa
es
inc
mov
and
mov
sbb
mov
ins
lea
mov
mov
or
div
xor
enter
js
push
cmps
outs
sub
out
pop
iret
ja
adc
js
dec
sti
xor
or
in
lea
add
(bad)
or
fdiv
xchg
hlt
pop
cmc
mov
iret
iret
call
xor
pushf
sbb
pop
sahf
(bad)
aad
clc
or
test
sub
xchg
lods
stos
xor
outs
rcr
add
into
ret
popf
pop
ror
pop
adc
sub
pop
adc
mov
jno
popf
mov
loope
jge
lea
stos
pop
popf
push
sub
out
outs
in
cmp
push
mov
xchg
pop
push
jmp
in
fidiv
pop
out
add
or
popa
cmc
xchg
(bad)
mov
dec
mov
js
lock
xchg
je
jnp
in
mov
fcmove
cmp
adc
adc
in
cmp
js
aaa
mov
(bad)
jo
into
fnstcw
sbb
div
test
pop
leave
(bad)
and
jg
or
int3
stos
sbb
imul
jmp
jbe
inc
jge
aad
mov
test
pop
xchg
jl
sub
test
add
aas
(bad)
push
jno
push
and
sbb
xchg
jmp
clc
mov
imul
jecxz
pop
dec
cmps
daa
jge
fs
jle
loope
nop
jbe
cmp
push
and
or
or
inc
adc
xchg
sete
std
cmp
mov
jmp
and
pop
lods
daa
mov
xchg
sub
cmp
jge
cdq
lahf
sub
pushf
aad
pushf
xchg
push
jg
sbb
mov
jns
hlt
mov
inc
jmp
sub
outs
syscall
push
mov
or
mov
aad
jns
mov
das
xor
addr16
or
push
fdiv
jecxz
ins
cmp
int
sub
sub
push
jb
aas
rol
mov
stos
jmp
dec
jnp
call
jp
daa
sub
pop
pusha
cs
lock
cmp
sub
mov
push
sub
sbb
adc
fisttp
movs
shl
inc
mov
sbb
jmp
retf
mov
jge
fisubr
aad
cmp
aad
jecxz
xor
ror
(bad)
loopne
inc
cmps
test
dec
xor
retf
cdq
leave
dec
loope
and
rcr
jmp
mov
hlt
and
shl
sti
mov
push
lahf
dec
sub
pop
push
sahf
rol
xor
push
out
pop
fiadd
movs
dec
jg
xchg
add
arpl
stos
pop
dec
mov
leave
lahf
inc
fucom
clc
clc
mov
mov
inc
inc
aaa
xor
or
cmp
lock
out
fdivr
sub
jnp
adc
enter
scas
mov
mov
and
cmp
fwait
in
add
pop
xor
adc
sbb
mov
ins
pusha
jmp
aaa
ins
fimul
mov
inc
push
retf
out
aam
and
inc
jae
and
or
add
jmp
mov
pop
mov
int
push
out
mov
inc
retf
(bad)
out
ja
inc
pop
add
imul
mov
sbb
jmp
int
mov
mov
jp
movs
push
jp
inc
sub
(bad)
cli
push
xchg
add
dec
imul
out
mov
adc
adc
push
inc
jne
out
push
mov
pop
fisttp
call
mov
jge
jg
mov
jp
lea
test
repz
inc
cld
mov
pop
dec
into
inc
test
dec
cmp
mov
leave
inc
push
ss
mov
mov
mov
fbld
out
into
or
mov
xchg
add
sub
and
push
cmp
dec
inc
cli
xor
cmps
jns
test
aad
cmp
pop
mov
push
icebp
sbb
push
mov
and
mov
aaa
push
adc
shl
dec
push
pop
arpl
xchg
sbb
add
adc
sub
sub
push
push
movs
dec
cs
in
idiv
lods
cmp
push
push
pop
adc
and
popf
aad
aas
push
xchg
ins
mov
(bad)
push
xor
jecxz
push
jns
adc
push
mov
pop
(bad)
mov
into
mov
cli
aad
js
cmps
dec
add
leave
inc
or
repnz
int
and
sbb
imul
cmp
mov
test
aad
xor
pop
xor
mov
jp
mov
xor
out
pop
fcmovnbe
(bad)
iret
push
cs
clc
jp
jo
dec
xchg
arpl
mov
in
add
inc
pop
or
cmp
mov
cmps
jns
shr
ins
inc
mov
das
jno
daa
das
xor
jns
jnp
out
jmp
push
lods
adc
shl
sub
xchg
jb
jbe
or
aad
pop
jo
mov
lds
loopne
retf
mov
popa
mov
mov
loope
popa
pusha
aam
push
loopne
jge
rol
xchg
es
inc
pop
mov
movs
ins
jno
dec
in
ins
sar
cmp
lods
xlat
sbb
mov
adc
pusha
add
fidivr
mov
bound
call
cs
push
std
iret
xchg
loope
add
and
retf
mov
scas
aas
and
dec
add
fbstp
adc
adc
aaa
test
adc
mov
jge
push
push
mov
or
push
push
pop
pop
inc
push
jns
mov
xchg
inc
mov
(bad)
xor
jl
inc
in
popf
loope
imul
xchg
lods
retf
pop
xchg
popa
cmps
imul
jnp
or
dec
lahf
pop
or
mov
out
into
dec
jno
xchg
sbb
idiv
push
jmp
loopne
xlat
fst
mov
dec
xor
sub
(bad)
idiv
jecxz
aaa
pop
cmps
or
in
lds
mov
mov
in
addr16
sbb
cli
mov
test
pushf
sbb
std
push
xchg
shl
rcr
ret
add
fisub
cmp
jo
cli
jle
std
jne
loopne
enter
inc
imul
jecxz
pop
add
push
or
mov
and
sbb
es
jg
sbb
nop
xor
cwde
test
test
into
adc
scas
mov
out
mov
in
aas
aam
fld
movs
sbb
mov
jns
sbb
xchg
jns
sub
bound
push
xor
sbb
adc
jmp
pop
cs
push
mov
sub
push
mov
pusha
dec
ins
test
xor
fs
lahf
mov
sub
dec
shl
xor
mov
(bad)
xlat
gs
sub
pop
jbe
repnz
aaa
sbb
loop
pop
xlat
stos
inc
mov
sbb
sti
mov
sbb
cmc
push
or
scas
jns
xchg
fdiv
adc
xchg
inc
ret
dec
(bad)
xlat
adc
mov
cdq
mov
movs
xchg
inc
or
lea
dec
ja
into
xchg
push
iret
lahf
pop
imul
setle
jp
adc
out
push
je
shl
retf
or
lahf
xor
sbb
(bad)
jmp
int3
ja
adc
cli
les
outs
in
cli
retf
je
rcl
pushf
stos
add
push
fcom
cmp
fidivr
add
jnp
jmp
push
pop
stos
xchg
xchg
rcr
icebp
or
aas
ja
or
retf
push
out
push
jae
iret
xor
pushf
cmps
mov
fs
sbb
cmc
ss
or
es
or
loop
pop
ss
adc
and
arpl
pop
inc
cmp
dec
aas
jo
or
mov
dec
shl
xchg
and
sub
inc
adc
imul
mov
inc
call
pop
(bad)
iret
retf
adc
in
loop
jb
out
out
push
ins
cs
inc
mov
xlat
das
lea
dec
mov
add
xchg
fs
(bad)
jl
retf
mov
sub
imul
or
push
mov
imul
pop
xor
stc
dec
adc
movs
pop
icebp
nop
sbb
cmp
xor
mov
sub
rcr
stos
lods
add
ror
or
add
pop
fidiv
pop
add
hlt
jno
shl
xor
adc
cmp
repnz
and
xchg
mov
and
xchg
mov
imul
push
cmps
and
fisttp
sub
retf
ins
in
arpl
pushf
test
jmp
(bad)
lods
add
scas
test
cmps
lahf
xor
cld
sub
(bad)
dec
ins
sub
push
sub
repz
add
adc
or
sbb
mov
pop
mov
shl
push
mov
xchg
dec
mov
loope
cmp
mov
xor
js
(bad)
shl
and
jo
jge
js
jae
dec
sub
or
mov
and
push
fild
pusha
sbb
enter
test
push
lock
push
popa
js
cmp
push
popa
mov
les
or
pop
cmps
adc
(bad)
and
lea
out
xchg
xor
xchg
sbb
scas
std
(bad)
pop
xlat
mov
data16
ret
ret
mov
xchg
outs
data16
mov
jecxz
push
and
cmp
cmp
loopne
fcomp
out
sub
aas
mov
jmp
out
push
out
dec
in
adc
mov
out
inc
fcmovbe
xor
rol
neg
mov
push
push
push
retf
retf
jmp
sub
imul
out
adc
sub
leave
loopne
inc
push
aas
imul
cmp
repz
mov
or
mov
mov
test
int3
push
(bad)
adc
lods
jge
dec
push
add
cmp
mov
mov
test
mov
mov
ins
jmp
jbe
out
lahf
ret
and
in
test
inc
push
mov
push
jge
add
adc
inc
push
pop
fimul
mov
hlt
mov
push
cmp
cmp
test
stos
mov
out
iret
les
sbb
cld
pop
aad
mov
adc
fistp
add
out
mov
dec
mov
jge
repnz
mov
mov
pop
std
adc
pop
xchg
mov
pop
(bad)
xor
jg
adc
push
stos
mov
outs
or
xor
jge
stos
je
(bad)
adc
jne
mov
inc
sbb
outs
out
pop
test
test
icebp
jnp
xor
adc
std
and
mov
jb
jecxz
push
adc
les
lock
add
push
lds
mov
mov
fisub
jnp
bound
push
data16
xor
and
mov
inc
dec
neg
sahf
fdivp
call
rcl
div
test
stc
sbb
dec
sar
push
pusha
sbb
sbb
sub
mov
jnp
add
adc
ja
dec
movs
push
clc
jbe
dec
mov
nop
loop
clc
aad
out
ds
idiv
xchg
jmp
adc
packssdw
jns
pop
retf
lods
(bad)
pop
add
add
or
sbb
inc
iret
mov
imul
je
xchg
sbb
mov
add
mov
shl
adc
cmp
mov
clc
aas
mov
out
xlat
adc
and
jge
and
mov
cmc
pop
aam
call
nop
adc
mov
rcl
inc
out
add
out
mov
cmp
add
xchg
fs
add
ror
popf
dec
mov
cmp
pop
push
test
jo
cmps
jecxz
std
xchg
mov
rcl
loope
jbe
ret
dec
add
je
inc
xchg
loope
push
icebp
and
ficom
xor
inc
aam
lahf
mov
fsub
mov
addr16
je
jmp
jle
add
ror
ficomp
test
mov
cmps
fadd
cmp
sbb
inc
rcl
adc
jge
inc
lahf
clc
xlat
(bad)
nop
push
aaa
loopne
retf
outs
jle
add
outs
jnp
mov
or
sti
loope
sub
movs
dec
out
push
retf
stc
dec
nop
dec
add
in
ins
cmp
std
mov
out
ins
aas
dec
push
inc
cmp
dec
add
and
div
daa
xor
add
add
adc
xor
js
ins
xchg
xlat
pop
pop
sbb
jns
aas
mov
add
(bad)
das
cmp
pop
dec
sbb
sbb
lods
pop
push
mov
dec
jp
mov
jecxz
xchg
ret
fsub
test
cwde
add
adc
pop
jmp
arpl
cmc
push
and
bound
inc
cmp
or
pop
or
in
cdq
sbb
loopne
loop
lahf
and
jle
push
or
adc
aad
test
pop
aaa
(bad)
vpackuswb
sbb
jge
fidiv
mov
scas
fst
aaa
retf
mov
mov
arpl
and
adc
shl
arpl
imul
mov
jge
mov
inc
loopne
(bad)
iretw
leave
in
movs
lods
repz
pop
into
pop
adc
and
(bad)
and
addr16
outs
pop
movs
push
add
push
xchg
mov
fmul
int3
cli
pop
sbb
mov
loop
popf
jnp
(bad)
mov
jmp
sbb
aam
lods
mov
rcr
call
movs
cs
outs
pusha
sti
mov
add
pop
mov
and
cmp
pop
adc
jl
inc
sub
popa
add
jmp
dec
dec
jno
xchg
jno
pop
je
pop
add
jle
cwde
inc
cmp
jp
jmp
sbb
adc
out
push
push
pop
xor
cmps
sti
call
add
lahf
ins
icebp
xchg
dec
iret
sbb
aas
loop
fbld
add
cmps
cmps
mov
imul
daa
lods
loopne
sub
jp
cld
in
sti
or
shl
dec
sub
imul
pop
sbb
fmul
mov
mov
ins
lahf
addr16
ja
in
out
sahf
jmp
sbb
imul
push
push
dec
sar
xchg
rcl
inc
push
cmovp
imul
xor
bound
inc
jb
sahf
xor
jne
daa
cli
or
sub
pslld
jo
mov
mov
mov
sub
shr
je
xlat
pop
and
mov
ret
sbb
fldcw
xchg
popa
out
(bad)
in
push
vmread
sub
and
loopne
sbb
retf
sub
pop
sub
std
and
jae
jbe
cwde
clc
jmp
(bad)
popf
mov
mov
test
adc
mov
out
adc
pop
add
ins
scas
sbb
sbb
xchg
(bad)
in
nop
mov
pop
inc
leave
aad
mov
cmp
shl
xchg
xchg
adc
pop
and
gs
sbb
aam
fcmovnbe
mov
add
xchg
cmps
imul
sbb
sub
xor
fisttp
ret
ins
imul
call
pop
stos
movs
inc
jmp
imul
aam
bound
mov
ja
int
outs
jp
pop
pop
pop
out
sbb
out
jo
cld
jb
mov
shl
mov
out
inc
sbb
fadd
pop
jae
add
xor
mov
xchg
mov
xchg
jmp
ja
fadd
xor
xor
jg
out
pop
dec
jno
(bad)
mov
pop
in
xor
mov
xor
adc
adc
(bad)
lds
jns
dec
push
in
loopne
jmp
cmp
sbb
adc
pop
inc
out
adc
push
pop
popf
xor
lock
dec
push
imul
mov
xchg
mov
mov
sbb
shl
in
repnz
push
push
fadd
and
shr
jmp
call
iret
inc
int
cmp
shl
add
sahf
test
mov
jecxz
jbe
scas
dec
cmp
xchg
addr16
ins
cli
aaa
cmp
loop
mov
jae
test
int
xchg
or
mov
inc
sar
and
push
movs
jle
std
nop
nop
and
adc
iret
or
pop
pushf
inc
xchg
ret
setp
inc
pop
outs
xor
in
xchg
in
adc
push
jnp
push
xchg
sar
mov
das
movs
in
stos
sti
mov
push
xchg
out
imul
fdivr
shl
adc
cmp
dec
call
sub
and
popf
scas
xor
aas
inc
jae
sbb
jle
cdq
out
sar
dec
mov
loop
mov
repz
(bad)
outs
push
sub
add
mov
mov
jae
test
shl
adc
scas
xchg
test
mov
mov
cmovns
jecxz
in
shl
fnstsw
fistp
arpl
repnz
enter
cwde
add
das
call
cs
adc
ret
(bad)
xor
lahf
jo
xor
pop
mov
dec
push
jns
xchg
sub
dec
daa
jb
les
add
or
int
cld
mov
xchg
xchg
(bad)
retf
cmp
jae
aam
data16
xor
ss
ret
jo
cld
mov
add
xchg
test
and
popa
ss
addr16
in
out
sub
dec
ja
jo
mov
in
movs
data16
lock
loop
jno
ror
push
test
loope
jecxz
test
mov
movs
aas
and
cld
push
sub
sub
sbb
ret
jge
jl
mov
test
sbb
or
out
sub
mov
pop
sbb
test
outs
leave
push
loope
inc
add
scas
mov
jo
call
sbb
cli
cli
repnz
dec
add
jbe
popa
shl
mov
xlat
pop
and
push
call
or
scas
in
or
mov
or
sub
push
cld
sbb
in
xchg
mov
lahf
inc
fcom
ret
fs
jecxz
lds
push
ds
jmp
in
mov
pop
cli
and
sub
mov
cdq
xchg
cmp
icebp
jmp
add
and
cmps
or
loop
jle
mov
mov
mov
mov
xchg
jge
or
mov
sub
ret
xchg
mov
cmp
pop
xor
pop
sbb
jo
fmul
icebp
loope
xor
lds
aas
pop
push
cmp
xor
push
cmp
retf
fucomip
xor
or
sbb
pop
js
(bad)
hlt
fsub
addr16
(bad)
inc
cmp
mov
jge
nop
fs
sbb
sbb
adc
add
mov
das
pop
jb
adc
sub
shl
test
lahf
mov
icebp
scas
inc
cs
rcl
push
and
dec
mov
add
sar
sub
cmp
mov
push
imul
add
in
outs
scas
(bad)
sub
mov
mov
xchg
push
lds
and
aas
pop
lock
xchg
out
out
mov
comiss
shr
inc
into
mov
mov
jo
and
cmp
in
(bad)
das
xchg
in
sub
jnp
xor
fdiv
inc
bound
sub
xor
adc
mov
in
aaa
lods
sbb
mov
fadd
popa
push
sub
jle
inc
mov
idiv
bnd
cmc
mov
jle
sub
enter
mov
jl
icebp
jle
mov
mov
lock
in
test
inc
inc
pop
xchg
xor
sbb
mov
out
inc
ss
cmps
dec
adc
sub
and
cmp
push
jno
add
iret
clc
fsub
inc
adc
movs
iret
add
add
pop
pop
pop
lock
jnp
ficom
and
cli
movs
mov
add
xchg
jnp
pop
lahf
cmp
cmps
jl
mov
retf
in
popa
test
mov
inc
mov
sbb
jmp
add
dec
movs
mov
push
sahf
in
pop
outs
pop
add
jmp
fnsave
movs
or
(bad)
ss
jne
enter
shr
pop
mov
movs
ret
jno
fidivr
pushf
mov
sbb
les
int3
ss
jae
(bad)
sar
int
xchg
fisubr
inc
movs
fsubrp
adc
cmp
xchg
fild
daa
(bad)
pop
sar
fisub
cmps
adc
lds
es
in
push
mov
push
inc
xor
mov
xchg
jb
outs
pop
sbb
sbb
ins
outs
je
dec
in
cld
into
ficomp
push
dec
push
gs
sub
sbb
sar
retf
xor
scas
and
rcl
cmp
xchg
xchg
ss
sub
sti
jmp
dec
iret
adc
push
or
jmp
cmp
cmp
sbb
mov
cmp
xchg
sbb
inc
add
pop
xor
in
xchg
test
and
lock
cdq
(bad)
cli
dec
pushf
adc
sub
mov
or
inc
out
mov
xor
xor
ds
push
retf
cmp
mov
jmp
dec
pop
lods
mov
mov
sbb
inc
inc
clc
aam
das
jp
jg
jmp
or
pusha
or
sub
(bad)
(bad)
shl
cs
sub
mul
cmp
inc
mov
pop
mov
dec
fsub
mov
cmp
xor
cmp
or
sbb
jg
jbe
sbb
sti
mov
(bad)
jg
(bad)
in
add
shl
mov
xor
and
xchg
dec
cmp
cmc
in
inc
test
test
call
xor
int3
int
inc
adc
inc
mov
and
outs
jmp
fucomp
enter
mov
scas
pusha
xor
stc
dec
lahf
sub
cmp
pop
pop
mov
sub
push
or
jl
and
mov
or
cmps
mov
xor
test
aad
(bad)
fcmovnu
jnp
(bad)
mov
adc
or
jge
out
lahf
rol
jp
scas
retf
mov
movs
inc
mov
sar
mov
leave
add
lods
pop
(bad)
push
jge
push
imul
fwait
imul
ins
rcl
mov
fistp
dec
loop
fmul
and
fsubr
adc
mov
mov
mul
jl
mov
nop
mov
(bad)
fs
imul
enter
pusha
cdq
retf
out
xchg
mov
sbb
sbb
gs
in
dec
fsubr
jecxz
adc
pop
enter
(bad)
and
adc
dec
rcr
out
test
enter
mov
xchg
vmovsldup
sub
mov
adc
adc
sbb
dec
je
int3
ins
adc
int3
xor
dec
xchg
push
cmps
sub
add
outs
fild
rcr
scas
das
mov
inc
hlt
cmps
push
cmp
xchg
add
mov
push
loope
out
scas
mov
scas
fdivrp
popa
mov
mov
nop
jnp
xchg
in
mov
cld
hlt
sti
mov
ror
(bad)
or
ds
xchg
in
mov
xor
sbb
mov
sub
fistp
jmp
out
pop
pop
jbe
jbe
jbe
jae
lods
dec
jge
sbb
jo
aad
mov
mov
add
inc
push
imul
loop
mov
pop
xchg
call
jge
xor
dec
popf
test
cmp
pop
fyl2xp1
scas
pop
shl
pop
dec
pop
cmc
mov
int3
ss
pusha
sub
in
cmps
push
jg
push
cmps
mov
pop
nop
push
sub
cmp
aas
lds
int
cwde
in
add
push
cpuid
enter
mov
int3
cmp
inc
pusha
imul
xchg
cmps
sub
or
xor
test
jl
and
jmp
jg
stos
ins
push
mov
das
(bad)
mov
scas
jmp
push
xchg
jp
sub
jle
lods
fwait
adc
sbb
ja
test
jmp
push
sbb
pop
imul
mov
add
les
pop
dec
mov
and
pop
into
sahf
xor
adc
mov
out
ins
pop
add
sbb
xor
push
out
loope
push
(bad)
mov
lods
clc
xchg
in
sub
cmc
sbb
ret
(bad)
imul
movs
hlt
int
shl
or
stc
sahf
int
lock
aas
sub
(bad)
fsub
int3
sbb
leave
test
sub
mov
mov
aaa
sub
aam
lea
jns
sbb
aam
or
mov
arpl
stos
les
cmps
sub
jnp
fadd
cmp
mov
test
ss
(bad)
aad
stos
out
or
mov
mov
arpl
xchg
fs
stos
jbe
pop
test
std
fucomp
or
arpl
dec
push
ins
enter
lods
aaa
mov
out
sbb
jmp
pop
sub
psadbw
inc
xchg
retf
fisttp
movs
or
daa
loopne
adc
pop
je
jne
stos
gs
cmps
mov
ins
xlat
out
xor
inc
push
outs
loop
test
int3
xor
std
sub
xchg
jmp
xchg
ins
lock
jns
cdq
mov
sahf
stos
leave
shl
fisttp
test
xchg
inc
xor
out
test
clc
push
movs
mov
ds
addr16
add
bound
push
pusha
in
dec
xchg
iret
mov
into
iret
sub
xor
jmp
xchg
iret
pop
pop
mov
and
and
popa
popf
jbe
mov
arpl
out
ds
cmp
inc
js
sub
or
jle
out
dec
mov
call
or
push
or
and
pop
ret
mov
mov
sbb
sub
push
movs
std
ret
cmp
test
in
lods
adc
mov
or
jmp
cmp
dec
(bad)
and
mov
cmp
loope
orps
cmps
xchg
and
es
mov
lds
push
xor
adc
add
in
pop
(bad)
in
mov
push
rcl
pop
nop
(bad)
pushf
ret
adc
sbb
and
loope
jp
aad
in
push
push
lods
push
sub
pop
jg
and
jl
mov
sbb
ins
mov
mov
aas
mov
cld
and
dec
test
mov
adc
(bad)
lods
lods
xchg
adc
mov
(bad)
pop
xor
aaa
mov
loope
or
dec
xor
aaa
rcl
stos
mov
mov
fldenv
adc
inc
sub
xchg
mov
leave
mov
sub
cmp
adc
mov
aaa
mov
xchg
enter
adc
mov
daa
xchg
cdq
popf
cmps
out
push
addr16
in
pop
lods
jecxz
sub
iret
outs
xor
ja
stos
and
mov
mov
mov
xchg
sub
sub
mov
(bad)
mov
cmc
or
stos
cmp
(bad)
shl
sub
push
scas
jecxz
cmp
xor
add
loope
inc
je
icebp
aam
pop
push
mov
push
jecxz
fcompp
xor
dec
xchg
cs
jp
ins
test
dec
or
rcl
mov
xchg
mov
xor
mov
sahf
(bad)
mov
(bad)
sar
mov
adc
fisub
dec
in
inc
inc
jno
enter
cmc
stc
xor
(bad)
fld
or
xchg
fchs
mov
xchg
jle
push
jg
es
or
in
xchg
in
addr16
jo
mov
loope
lea
iret
cwde
mov
retf
adc
repnz
cmps
sub
mov
push
in
lods
out
add
fwait
jno
xlat
push
inc
inc
and
aad
lods
cmp
mov
dec
je
cli
out
inc
je
cmps
rol
push
or
pop
mov
add
icebp
xchg
and
test
sahf
inc
pop
or
js
hlt
cmp
xchg
pop
test
or
push
rcr
xlat
in
inc
mov
dec
enter
jmp
add
xor
shl
test
ret
and
add
pop
mov
xlat
jnp
add
jne
mov
aaa
xchg
jg
popa
std
leave
and
push
xchg
push
cmp
loope
or
cmp
out
sub
dec
add
add
inc
pop
and
push
adc
jg
bound
or
cmps
xchg
mov
pop
mov
cld
jmp
xor
sbb
les
inc
jne
jp
mov
mov
aaa
test
(bad)
retf
jle
adc
inc
xor
or
gs
in
adc
out
test
mov
jmp
add
sbb
ret
mov
pop
xchg
aas
or
js
dec
dec
loop
idiv
scas
ja
jb
or
push
ins
xchg
dec
cmp
jno
clc
fcmovu
dec
adc
jecxz
add
adc
add
sub
xor
mov
pop
sub
xor
push
clc
xor
add
jb
push
loopne
mov
es
(bad)
or
fs
iret
cmp
fisttp
pop
stos
call
or
pop
pop
inc
xchg
xchg
inc
sbb
and
mov
mov
push
sub
enter
fsin
movs
xchg
dec
cmp
push
ds
mov
es
adc
out
fistp
and
cmp
mov
xchg
and
repz
(bad)
pop
cmps
cmp
test
(bad)
int
mov
ror
out
adc
inc
addr16
jmp
push
test
fwait
inc
pop
and
mov
out
inc
ret
jge
fwait
ins
mov
or
test
mov
int3
mov
mov
cmp
cmc
add
out
lahf
ss
into
test
(bad)
adc
lods
pop
and
mov
inc
test
cwde
inc
pop
inc
mov
lock
inc
std
lods
cld
dec
push
js
push
jg
in
adc
adc
xchg
shl
xor
inc
fdiv
mov
adc
jmp
sub
ffree
sbb
or
pop
not
inc
or
jmp
movs
or
mov
jb
pop
dec
dec
push
jae
je
dec
push
xchg
in
cs
pop
mov
repz
in
outs
dec
out
cmp
or
movs
jecxz
adc
out
and
imul
sub
fnstcw
adc
cmp
ret
cmp
push
mov
(bad)
in
pop
scas
xor
jmp
test
ss
jl
jmp
ret
and
shr
push
sti
or
ins
xchg
dec
inc
int
sar
pop
rcr
imul
das
sbb
sbb
or
imul
push
mov
mov
mov
or
iret
dec
and
ins
jb
lock
sti
xor
popf
rol
jo
repz
stos
ins
jecxz
repnz
pushf
test
shr
in
add
mov
mov
inc
out
sbb
sub
sbb
fsub
mov
adc
add
mov
mov
fistp
mov
xor
(bad)
sbb
gs
lds
jge
leave
addr16
dec
mov
in
cmps
xor
mov
fsub
mov
or
push
mov
aam
dec
retf
mov
mov
and
bound
and
leave
setge
je
and
(bad)
and
(bad)
gs
ins
outs
out
push
cmc
xchg
outs
xchg
stc
jo
xchg
and
js
cs
cmp
jnp
(bad)
cmc
mov
(bad)
out
aam
(bad)
imul
cmc
adc
xchg
int3
int
cmp
jne
jne
jg
shl
movs
sbb
cmp
jle
dec
popa
call
fstp
mov
hlt
in
mov
fsubr
inc
mov
pop
(bad)
mov
call
out
or
push
push
das
stos
cs
mov
adc
jmp
sub
aad
enter
les
int3
push
pop
rcl
stos
add
xchg
inc
imul
jecxz
mov
sbb
cmp
xor
into
xchg
mov
cmp
pop
loope
and
movs
adc
pop
add
test
xchg
loopne
jg
mov
xor
mov
mov
addr16
push
fcomp
xchg
(bad)
jae
ja
mul
push
test
mov
nop
and
lea
stc
aad
dec
movs
pop
dec
inc
adc
test
addr16
mov
std
xchg
test
jae
sbb
pop
and
(bad)
in
scas
mov
add
push
ficomp
and
dec
mov
ja
inc
pop
push
xchg
push
mov
out
xchg
push
sub
and
cmovl
jg
inc
scas
sbb
jmp
arpl
out
outs
xchg
rol
test
add
mov
cmps
add
pushf
xor
xchg
test
movs
cmc
jmp
call
add
call
fdivr
mov
xor
pop
out
std
ins
ffreep
xor
sti
jne
fwait
jecxz
jl
(bad)
pushf
xchg
dec
or
fucomip
mov
xchg
fcmovu
or
mov
test
cmp
mov
es
inc
out
sbb
cmp
cmps
xchg
adc
xchg
shl
mov
mov
retf
sub
xchg
or
in
cmp
and
mov
mov
xor
jmp
rol
mov
mov
jp
lods
loopne
in
jge
add
jle
(bad)
jns
cmp
xor
pop
cmp
jp
add
(bad)
pop
aaa
aaa
jns
lea
jmp
out
loope
ret
push
sub
(bad)
cli
jb
mov
stos
int
xchg
xchg
loope
xchg
sbb
movhps
stc
and
jle
add
sbb
gs
pop
push
push
cmps
fisubr
pop
mov
dec
push
inc
mov
enter
add
pusha
cmp
or
out
cld
movzx
inc
inc
mov
jg
dec
mul
dec
fild
das
lods
xor
fidiv
sbb
jnp
push
cmc
in
pop
jecxz
inc
cwde
retf
ins
jno
shl
mov
cmps
loope
sbb
or
(bad)
neg
daa
add
mov
scas
mov
push
rol
lods
sahf
hlt
test
retf
jle
cmp
cdq
aad
mov
cmps
pop
loope
out
inc
cs
ror
inc
paddd
cld
iret
ds
(bad)
mov
int3
jne
ror
cmc
imul
jnp
jp
push
jne
or
xchg
xchg
push
daa
pop
jp
movs
jae
gs
(bad)
je
leave
dec
in
adc
out
das
not
and
faddp
call
sub
aaa
lods
xchg
jno
loop
hlt
je
ret
push
ins
push
xchg
icebp
dec
push
pop
sub
inc
sub
jmp
mov
pop
mov
jle
add
bswap
enter
push
mov
ret
jbe
mov
in
jmp
cmp
imul
mov
repnz
mov
test
pop
pop
(bad)
push
mov
test
xor
jmp
cmc
dec
pusha
push
aad
cld
mov
push
mov
adc
imul
and
push
lock
inc
mov
mov
ret
in
jae
cmp
call
icebp
mov
jecxz
loop
cli
mov
pop
das
jb
xor
int3
or
cli
mov
pop
dec
aam
fcom
stc
cmp
xchg
and
pop
push
shl
mov
jmp
iret
add
inc
xchg
test
repz
fidiv
mov
test
inc
repz
pushf
xor
popa
and
fild
push
out
scas
dec
out
into
cdq
aas
xchg
or
scas
jne
jl
xchg
jnp
dec
sbb
and
jbe
mov
cmp
mov
mov
retf
xchg
cli
aam
and
cdq
fild
outs
cli
add
mov
cmp
sar
xor
pop
pop
(bad)
out
inc
out
aas
shl
js
adc
xchg
loope
test
xchg
dec
dec
push
mov
popa
add
and
push
repz
out
jb
xlat
test
add
out
mov
xchg
inc
lea
or
test
hlt
int
jae
call
iret
sbb
push
in
xlat
jae
push
aaa
gs
out
sahf
mov
pop
nop
je
test
or
in
out
mov
pop
movs
inc
mov
fdivr
daa
out
jg
push
cs
mov
call
jmp
scas
mov
pusha
mov
fnstsw
cmp
adc
cwde
cmc
aaa
fdivr
je
xchg
jl
sbb
int3
imul
jmp
retf
hlt
adc
jns
pop
jb
jbe
sti
cwde
stos
push
jmp
ins
or
inc
jbe
sbb
jg
int
das
and
or
fldenv
mov
mov
pop
xchg
(bad)
cld
and
push
cdq
fsub
and
call
stos
scas
or
pushf
or
rcl
push
jno
jb
sar
arpl
dec
sti
jo
into
xchg
pop
cmp
xchg
mov
cmp
js
cmps
fistp
adc
adc
sub
out
add
jno
sbb
inc
repz
lods
lods
jecxz
xchg
das
mov
inc
pop
(bad)
jmp
jg
fstp
push
dec
cmp
iret
mov
mov
test
iret
mul
popa
neg
dec
fsubr
js
gs
mov
sbb
ja
fistp
and
cli
les
cmp
lea
loope
xchg
cmp
adc
sub
fisub
sub
int
retf
add
(bad)
fs
jne
(bad)
in
push
pushf
xchg
(bad)
cmp
test
scas
xchg
scas
push
bound
aam
jmp
sar
inc
push
loopne
loope
lods
nop
daa
shr
adc
xchg
inc
jmp
push
pop
clc
add
ins
in
aas
(bad)
icebp
jge
retf
add
and
ror
add
push
pushf
pop
sbb
xchg
pusha
mov
mov
fstp
retf
leave
repz
iret
arpl
or
cld
mov
lock
add
jbe
in
cmp
mov
xor
in
add
hlt
stos
mov
in
lds
add
int3
mov
cs
lock
cmp
out
push
adc
out
adc
cmp
call
cmc
push
adc
retf
push
retf
push
mov
sbb
or
stos
dec
cmp
pop
adc
test
sahf
out
gs
inc
push
mov
sub
dec
mov
pop
push
mov
pop
mov
cld
in
mov
jmp
leave
out
in
je
push
repnz
adc
jns
es
hlt
push
mov
jmp
mov
mov
jg
xor
mov
lods
(bad)
cwde
mov
in
dec
sub
pushf
adc
add
dec
xor
sbb
aam
cdq
mov
push
out
stos
ret
ror
(bad)
sub
or
loope
xor
xchg
ins
add
dec
int3
(bad)
pop
sbb
jnp
call
int3
inc
rol
leave
pop
fisubr
les
sub
fst
imul
ds
or
mov
push
inc
cmp
or
mov
scas
cdq
pop
sbb
and
pushf
int
sub
shl
sub
mov
xchg
fld
xchg
xor
out
(bad)
fisttp
pop
fidivr
scas
and
sbb
addr16
ins
lds
sub
in
jle
clc
pop
jo
loopne
outs
jbe
loope
movs
out
or
psubw
scas
lods
sbb
or
sahf
fwait
test
int
mov
call
sbb
sahf
into
popa
sbb
je
dec
cmc
fwait
cmp
das
dec
fs
shl
nop
lea
sbb
push
retf
jns
imul
ins
push
xor
retf
cli
ret
das
or
int
or
and
mov
je
pop
movs
push
icebp
and
mov
xchg
xchg
mov
int
mov
(bad)
jmp
mov
cmp
and
(bad)
movs
mov
test
ins
ret
sub
es
cmp
scas
jne
add
loopne
jecxz
rcl
ja
sub
cdq
mov
jno
jnp
inc
int3
retf
dec
ins
xchg
pop
mov
gs
out
mov
inc
inc
ja
jl
inc
cli
rcl
scas
pushf
sbb
mov
sbb
mov
aaa
push
push
scas
(bad)
mov
or
add
aam
(bad)
scas
dec
std
call
jge
cmp
jmp
fwait
jns
mov
mov
push
push
jmp
mov
push
imul
icebp
cmp
repnz
aam
or
inc
(bad)
and
mov
mov
cmp
or
hlt
or
sub
push
das
sbb
mov
movs
call
inc
xlat
jmp
iret
(bad)
xchg
call
jb
mov
jns
call
or
xchg
mov
inc
fst
cmps
fild
fwait
pop
(bad)
aad
push
in
xrelease
scas
inc
icebp
aad
sbb
out
mov
nop
(bad)
mov
mov
(bad)
xchg
rol
(bad)
push
pop
ds
movs
loopne
xchg
lods
xchg
push
pop
or
shr
jae
call
xor
loop
stos
dec
scas
sbb
dec
call
inc
cmc
and
inc
pop
aas
xor
sub
ins
scas
sub
dec
or
ins
xchg
popf
out
inc
imul
xor
jmp
dec
retf
(bad)
scas
js
sbb
mov
(bad)
shr
dec
push
mov
push
outs
xchg
mov
xchg
or
pop
aam
mov
bound
dec
aas
pop
push
enter
movs
pop
mov
inc
sbb
mov
lods
cld
test
push
stc
retf
loop
cmp
daa
xlat
movs
inc
inc
cmc
adc
(bad)
jmp
xchg
clc
clc
jo
fidiv
(bad)
mov
and
jg
ins
inc
(bad)
mov
jb
cmc
inc
(bad)
mov
imul
int3
pop
sub
sub
mov
dec
sub
cs
or
pop
add
clc
cs
push
mov
mov
addr16
and
dec
leave
jle
push
or
xchg
icebp
outs
xchg
shl
scas
sbb
lea
lods
mov
sbb
cmp
pop
dec
movs
int3
imul
sub
mov
outs
jle
jbe
daa
sbb
jbe
xchg
loopne
call
xlat
pusha
pop
je
push
mov
add
adc
repz
ror
popf
xchg
(bad)
sbb
jb
outs
arpl
or
scas
ficomp
add
cs
xor
inc
daa
and
data16
ror
in
stos
lds
xchg
mov
xchg
das
dec
mov
xor
dec
jmp
jg
fsub
add
adc
imul
je
mov
ds
and
push
adc
sar
jecxz
push
sbb
es
jno
cmp
cmps
pushf
stos
cmps
cmp
push
jns
imul
push
test
pop
nop
dec
imul
mov
sub
outs
div
push
loopne
fsub
xchg
out
je
push
mov
pop
cli
push
mov
sahf
or
cmp
xchg
fcomp
adc
xlat
or
shl
mov
jno
sbb
push
movs
pop
ror
lock
cmp
ja
push
and
es
or
retf
ja
ret
and
mov
inc
xchg
sub
call
movs
fstp
xchg
addr16
adc
xor
mov
mov
lods
cli
nop
shl
std
repz
adc
dec
pushf
sahf
out
popa
nop
test
aad
cwde
int
into
test
dec
ins
fisttp
xlat
mov
(bad)
ret
loope
xor
popf
ins
ret
popa
ret
aas
xchg
test
xchg
shl
xchg
loop
pop
sbb
or
xchg
mov
icebp
daa
or
stos
push
xchg
das
dec
sub
mov
das
outs
push
push
int3
or
lock
mov
ss
xchg
or
mov
adc
std
xchg
out
outs
mov
test
and
sbb
xchg
inc
cmp
cld
pop
out
hlt
jae
push
jne
jb
int
sub
retf
mov
xlat
lods
scas
pop
mov
push
aam
push
(bad)
push
test
sahf
retf
xor
leave
or
dec
xchg
push
cmp
inc
pop
clc
dec
sbb
addr16
or
adc
xchg
fstp
mov
arpl
push
cld
ss
mov
ror
mov
push
pop
sti
dec
stos
sub
sahf
in
retf
pop
out
cld
in
imul
xchg
xlat
ss
in
fcom
mov
out
dec
je
mov
pop
cmp
mov
jmp
imul
xchg
mov
(bad)
adc
mov
test
les
push
jp
and
xchg
test
adc
xor
(bad)
pop
mov
jbe
add
ins
mov
lock
ins
in
push
call
jg
pop
(bad)
fcmovnb
movs
jl
dec
push
sub
push
mov
mov
cli
call
pop
mov
cmps
jp
inc
(bad)
pop
retf
push
pop
jle
mov
fistp
mov
add
jg
adc
(bad)
pop
test
fnstenv
test
inc
dec
push
movs
aad
cmps
and
sub
and
fldenv
sub
mov
add
push
add
jnp
inc
repz
pop
xchg
push
sbb
jl
(bad)
pop
sbb
out
pop
int3
cld
xor
lods
into
mov
in
or
adc
inc
repnz
mov
ja
fs
out
retf
stos
or
push
je
js
bound
mov
add
sbb
sbb
stc
inc
ins
or
imul
into
call
scas
xor
call
mov
std
inc
sbb
repz
sbb
repz
pop
push
mov
push
push
dec
pop
ins
stos
mov
ficomp
nop
das
push
xchg
sbb
pop
sti
test
cmp
sub
fldcw
or
movs
and
rcr
or
adc
adc
fdiv
cmp
das
outs
arpl
lods
rcl
mov
jl
outs
(bad)
(bad)
inc
test
cmps
mov
xchg
lods
ret
das
inc
jns
cmp
mov
rcl
pop
dec
sbb
mov
loope
loope
call
loopne
mov
xchg
mov
cmp
ss
je
es
aad
push
mov
or
cld
ror
lahf
sub
in
fist
jl
jp
xor
loope
lock
pop
sub
cmc
cmps
movs
sub
out
out
or
mov
je
cdq
mov
push
sub
inc
mov
push
sbb
sar
push
mov
mov
fdivr
ss
(bad)
mov
aam
(bad)
ficomp
push
pop
mov
jp
xchg
sub
scas
adc
jns
fisubr
scas
mov
ret
add
fnstsw
xchg
popa
ds
sub
mov
pop
aam
and
cli
pop
cs
mov
cwde
in
mov
xchg
cmp
aas
add
cmp
call
sub
cmp
sar
stc
pop
inc
and
cs
sub
call
sbb
adc
lds
fnstenv
dec
out
adc
aam
out
and
sbb
(bad)
mov
loope
mov
mov
sbb
pop
adc
retf
retf
shr
aad
xchg
pop
add
call
adc
and
mov
jnp
sti
rsqrtps
repz
inc
out
cmps
js
movs
(bad)
(bad)
hlt
and
cmp
and
xlat
push
add
in
sbb
test
jmp
call
add
xchg
je
or
out
out
aam
int
or
and
push
stc
mov
inc
add
pop
cmps
(bad)
jo
adc
scas
ins
in
mov
mov
mov
outs
or
pushf
xor
mov
inc
fwait
rol
movs
arpl
pop
or
dec
aam
jno
loope
fdiv
sbb
not
call
lods
fistp
stos
js
mul
pop
inc
lods
push
sar
je
mov
out
xor
add
enter
inc
push
aam
inc
jo
std
dec
rol
mov
cmps
ss
jae
sub
sub
jge
daa
call
and
jnp
int3
cmc
leave
lods
jl
rcl
shl
cmp
xchg
add
xchg
test
adc
mov
js
and
cmp
sub
sbb
mov
add
rcr
ja
cmp
sbb
retf
fldcw
dec
pop
pop
mov
out
xor
jp
cmp
sub
mov
mov
lods
fwait
xor
jmp
pop
call
ss
sar
in
mov
mov
lock
cld
xlat
data16
add
adc
cld
fidiv
sti
movs
paddb
ins
scas
mov
sub
mov
add
iret
add
ds
and
enter
add
popf
dec
cdq
jnp
(bad)
loopne
(bad)
in
call
xchg
adc
fnstenv
or
repnz
shl
inc
mov
gs
sub
out
mov
xchg
push
jmp
push
cmp
mov
inc
int
clc
xchg
pusha
sbb
xor
cdq
sbb
mov
ins
mov
mov
mov
sbb
or
mov
icebp
or
cmps
je
or
mov
imul
xor
stos
jae
inc
or
inc
cmps
jecxz
or
cwde
jge
pop
es
pop
push
adc
mov
lahf
adc
sbb
leave
adc
lods
sub
add
test
inc
push
pop
inc
cmp
adc
loop
or
rol
jge
loop
mov
mov
ss
sub
xchg
test
pop
je
and
jl
cli
int
xchg
push
setne
xchg
popf
push
dec
in
ror
lea
mov
ins
cmp
jb
repnz
xchg
pop
mov
ins
sub
das
aad
cmps
in
inc
cwde
jl
outs
movs
cmp
mov
das
pop
je
mov
xor
mov
mov
or
in
mov
ins
mov
in
add
sti
rcl
jne
data16
mov
push
xchg
cmps
scas
fbld
(bad)
jmp
push
aad
jmp
jae
scas
jmp
inc
mov
ret
or
pop
mov
js
ja
popa
xchg
fidiv
test
xor
mov
out
pusha
out
pop
jbe
xchg
ss
pop
repnz
sub
test
cmp
adc
add
cmp
mov
jge
loopne
mov
int
aas
test
dec
cmp
mov
jnp
jnp
cld
jp
enter
xchg
mov
lahf
(bad)
stc
inc
push
xchg
pavgw
push
push
sub
iret
mov
push
pop
push
dec
adc
out
cmps
in
mov
enter
mov
aad
addr16
mov
pop
mov
dec
in
inc
or
iret
bound
pop
sahf
jmp
rol
inc
stos
jo
or
(bad)
ror
add
jo
mov
icebp
loop
inc
ret
ror
fdivr
push
(bad)
es
out
sti
dec
mov
jecxz
jp
in
cli
jne
add
sbb
jmp
cmp
idiv
nop
mov
dec
add
push
add
push
ja
or
leave
popf
sbb
dec
fadd
mov
lea
mov
adc
inc
repz
mov
mov
imul
pop
repnz
int3
inc
scas
test
call
test
inc
daa
cmps
scas
pop
stos
aad
adc
pop
ins
mov
add
dec
mov
xchg
sbb
fwait
jnp
adc
cld
xchg
movaps
(bad)
jmp
and
mov
jle
pop
xchg
fcom
add
push
dec
xor
cld
ror
add
mov
mov
xchg
icebp
add
das
jl
xchg
inc
sub
(bad)
std
cmc
retf
(bad)
fimul
inc
mov
add
outs
movs
or
xchg
mov
cli
dec
push
jle
mov
pop
pop
pop
jmp
fcom
xor
push
(bad)
rcr
(bad)
cwde
push
pop
pusha
push
dec
test
mov
pushf
xchg
out
rcr
jmp
(bad)
cmp
in
cmp
mov
sub
popa
dec
push
cmp
adc
mov
or
add
inc
xchg
sbb
mov
mov
jbe
ins
xchg
dec
fsubp
adc
mov
xchg
or
test
push
outs
daa
and
dec
inc
out
push
retf
into
and
stc
pop
or
adc
or
inc
inc
fild
push
or
fbld
mov
fnsave
jne
mov
add
or
push
lods
ror
mov
fmul
or
fmul
arpl
or
loope
or
fs
sbb
ror
(bad)
cld
pop
sbb
jle
jg
ret
mov
mov
dec
and
inc
xchg
hlt
cs
test
fwait
stc
call
pop
(bad)
jp
or
mov
test
cmp
fld
or
fwait
es
mov
call
aad
sbb
push
xchg
inc
mov
pusha
jne
xchg
enter
cmp
sbb
movs
add
mov
addr16
stos
push
and
pop
or
mov
push
test
xor
repz
dec
mov
leave
(bad)
adc
mov
ins
fwait
jecxz
cmp
jne
jmp
std
stos
mov
loop
push
push
push
(bad)
int
dec
adc
inc
mov
js
or
dec
or
mov
add
and
sbb
sti
into
scas
icebp
pushf
and
cmp
or
call
test
cmp
xchg
and
pop
repnz
mov
test
fstp
and
ja
and
shr
mov
xchg
frstor
xor
mov
bound
sbb
inc
ds
inc
ins
jno
jle
int3
and
das
pop
or
scas
(bad)
hlt
imul
movs
and
pusha
dec
popa
arpl
xor
mov
aas
inc
and
sahf
mov
stos
das
mov
xchg
inc
xchg
add
mov
ins
xchg
mov
imul
adc
and
jmp
ficom
sahf
stc
add
jne
(bad)
rcl
rcr
cmps
sti
sbb
jnp
jmp
lods
adc
xchg
push
mov
inc
hlt
cmp
imul
cli
pop
ss
sbb
xchg
rol
mov
ja
inc
out
imul
sub
dec
sub
(bad)
xor
test
mov
mov
inc
lock
arpl
xchg
add
into
ss
jb
dec
jle
lea
adc
test
ins
push
lock
push
add
jbe
mov
sbb
test
mov
inc
fiadd
and
mov
in
push
icebp
stos
or
xchg
inc
fwait
push
(bad)
adc
in
outs
mov
mov
push
pushf
pusha
mov
sbb
mov
(bad)
sub
(bad)
push
push
ds
fsub
mov
iret
mov
lock
inc
aaa
test
cli
inc
adc
jo
pop
push
sub
sbb
jmp
iret
inc
push
fldcw
inc
and
or
jp
xlat
mov
sub
call
hlt
dec
mov
sti
loope
mov
xlat
jle
ficom
push
cmp
adc
call
inc
inc
das
cdq
(bad)
cmc
add
cdq
mov
xchg
dec
and
stc
cmp
mov
repnz
retf
lock
(bad)
push
push
or
fcom
enter
es
retf
add
xchg
cdq
enter
sub
stos
pop
xor
scas
add
neg
call
push
movs
jp
pop
xchg
cmp
ret
mov
sub
xor
xor
div
fsub
jno
add
scas
push
pop
scas
inc
push
ins
in
shr
dec
pop
xchg
mov
sub
in
repnz
sbb
retf
aam
icebp
jbe
popa
jmp
mov
fs
enter
mov
out
mov
sub
adc
ss
ror
xor
in
imul
addr16
icebp
mov
xchg
fidivr
inc
and
pop
sbb
and
push
push
scas
stos
sbb
jb
rcr
loop
scas
mov
xor
pop
add
clc
sub
add
ja
push
inc
mov
mov
imul
shr
sbb
and
fld
iret
push
ins
rcr
pop
dec
arpl
jae
fbstp
push
inc
jmp
(bad)
cdq
sbb
inc
call
pop
popf
xchg
outs
sub
mov
clc
sbb
cli
cmps
and
adc
mov
add
in
lods
add
mov
mov
out
cwde
mov
or
push
out
pop
sub
movs
jne
inc
inc
mov
xchg
pop
cwde
xabort
enter
call
xchg
or
mov
repz
fistp
mov
shl
and
xchg
push
jne
or
mov
mov
cmc
adc
mov
mov
jae
mov
jo
adc
jno
dec
test
xor
pop
sbb
jne
mov
addr16
bound
cmc
xor
pop
in
xchg
add
fidivr
call
mov
push
push
outs
ror
iret
call
inc
dec
pop
jae
push
movs
fidiv
ins
xor
inc
in
dec
daa
les
xor
xor
jp
fcmovb
fwait
sar
xchg
mov
sbb
es
minps
in
leave
sbb
xchg
repnz
jecxz
js
repz
xchg
or
inc
mov
adc
push
adc
dec
shr
repnz
lock
inc
inc
and
sbb
sar
add
mov
invd
and
movs
and
ins
sub
(bad)
and
out
cmps
ficom
mov
mov
push
(bad)
mov
adc
rol
cmps
jnp
js
pop
mov
push
addr16
arpl
add
fcomi
mov
rcr
fmul
outs
aad
push
and
sbb
jno
adc
cmp
pop
stos
inc
pop
inc
cli
jge
sti
sub
shl
sar
pop
or
stc
cli
mov
gs
cmp
sub
pop
pop
jns
in
loopne
test
dec
bnd
je
sbb
xchg
stc
fisubr
stc
adc
add
xor
test
cmc
pop
jae
xor
call
ror
pop
adc
cmps
bound
xlat
cmp
fisub
cmp
xor
sbb
ss
fiadd
outs
dec
(bad)
inc
xor
xchg
cmp
outs
adc
rcr
ret
push
pop
xlat
and
or
push
sar
cvtdq2ps
and
inc
sbb
je
push
inc
mov
pop
sbb
push
jo
xchg
cmp
cmp
div
mov
std
iret
cmc
ins
js
pop
pop
xor
arpl
dec
jnp
cld
xchg
xchg
mov
ins
xlat
inc
dec
jge
lods
push
test
ins
cmp
xchg
pusha
cli
movs
pop
ss
mov
cwde
ss
inc
aas
aas
out
mov
mov
dec
mov
or
mul
adc
rol
mov
jmp
repnz
lods
aam
jne
jp
jmp
aas
bound
outs
or
xor
mov
adc
mov
mov
test
mov
dec
mov
aad
sbb
cld
adc
jo
xchg
jne
(bad)
sub
cmp
aas
xchg
push
sub
leave
mov
ins
shl
xchg
(bad)
into
fbstp
adc
xchg
imul
mov
in
dec
out
sub
inc
cmp
pop
in
mov
dec
pop
or
shl
jbe
sub
mov
cmps
mov
pop
lds
add
sub
lods
inc
mov
add
ret
(bad)
pop
ins
sub
and
adc
jo
dec
dec
fdivr
pushf
sbb
aaa
add
out
ja
test
add
push
push
jo
fwait
xchg
xor
fs
mov
fcom
popa
mov
fs
jbe
test
mov
jae
xchg
mov
pop
cli
cmp
push
loop
push
loop
(bad)
ja
add
adc
popf
sub
mov
xchg
rcr
aas
mov
cmp
stos
mov
add
clc
aad
mov
add
xor
in
push
inc
sub
shl
pop
mov
pop
sub
popa
cmc
mov
sub
daa
adc
and
push
outs
stos
xchg
mov
sbb
cmp
(bad)
cmp
cld
mov
aad
jecxz
mov
aaa
sahf
lods
xor
mov
sahf
(bad)
and
fs
dec
xor
jns
aaa
aaa
loope
retf
xor
(bad)
cmc
out
cdq
imul
out
or
or
js
add
scas
nop
add
jb
cmp
aaa
pop
sbb
mov
aad
xor
stos
add
test
sbb
dec
mov
setnp
out
out
mov
cli
call
ret
inc
jle
push
bound
mov
mov
xchg
imul
gs
cmps
retf
sbb
jb
cmps
and
or
pushf
ds
mov
inc
int
lods
pop
popf
sbb
push
dec
int3
aad
retf
ror
aas
fwait
xchg
cld
mov
sbb
int
and
cdq
addr16
pushf
jp
xchg
sbb
xchg
sbb
push
adc
or
int3
shl
(bad)
shr
or
movs
fwait
cwde
dec
fiadd
daa
in
pop
scas
lahf
popa
inc
popf
enter
mov
cmp
push
mov
fidivr
pop
jnp
pop
call
and
xor
data16
xlat
dec
dec
push
js
sub
cmc
sbb
xchg
mov
push
mov
dec
jae
mov
iret
fwait
or
add
outs
rcl
and
inc
sub
popa
jmp
movs
std
dec
dec
cs
ss
mov
push
cmps
fild
xchg
inc
ffreep
push
fstp
push
mov
imul
sub
mov
mov
adc
xor
fisttp
xchg
xor
sahf
test
sub
xchg
scas
lea
ja
add
cmps
pop
inc
idiv
pop
xor
rcr
in
cs
mov
gs
pop
sub
add
outs
repnz
pushf
pushf
inc
dec
ds
xor
std
xor
stc
or
mov
inc
icebp
call
dec
cmps
push
pop
(bad)
enter
in
(bad)
mov
pop
lds
sbb
push
dec
and
adc
mov
fistp
jp
adc
enter
in
dec
mov
ret
pop
rcl
mov
sbb
push
or
or
test
out
xchg
sub
jp
aam
fsubr
scas
or
dec
cld
xchg
inc
ins
or
repnz
push
sbb
and
cmp
enter
imul
push
jle
fcomp
xchg
mov
cmc
pop
retf
add
lods
cmp
sub
cmp
or
cmp
pop
or
and
pop
pop
lods
es
add
dec
jmp
cmps
loope
cmp
jae
cmp
mov
cmp
sbb
imul
dec
lods
mov
xor
sub
test
mov
sub
cld
dec
fadd
mov
xor
ins
adc
out
xor
or
movq
xchg
ds
dec
leave
(bad)
and
adc
in
xchg
sub
in
or
cs
push
in
pop
nop
mov
call
cmp
popa
fild
jbe
gs
adc
fiadd
pop
loopne
add
ja
cmp
test
push
push
push
leave
movs
sub
push
jg
cdq
jmp
xchg
jbe
mov
popf
inc
test
xchg
mov
dec
ret
inc
dec
mov
outs
pushf
nop
cmp
mov
pushf
dec
jge
rol
ror
lahf
das
or
xor
call
ss
mov
add
inc
(bad)
jo
popa
xor
add
inc
adc
sbb
xor
int
mov
stos
or
stos
(bad)
out
pop
mov
dec
dec
pusha
mov
xchg
outs
and
stos
push
cdq
fsub
push
xchg
ret
xchg
data16
imul
inc
sub
pop
inc
ds
lods
popf
jp
jge
pop
mov
xor
add
adc
hlt
jp
data16
add
mov
adc
pop
cli
xor
ror
sub
sub
push
pop
daa
jne
and
sbb
mov
mov
jbe
sbb
sbb
loopne
push
or
stc
xchg
sahf
jbe
dec
mov
(bad)
adc
adc
repnz
or
mov
jg
fcmovnu
or
sbb
sar
jae
fnstsw
cs
enter
inc
sar
lea
add
(bad)
mov
xchg
xchg
inc
lea
pop
fisubr
or
or
cmp
test
dec
jmp
dec
add
xchg
mov
outs
(bad)
cs
loope
xor
mov
inc
sbb
xchg
scas
mov
xor
iret
xchg
sbb
imul
adc
loopne
cdq
push
rcl
push
ds
jae
mov
ret
add
xor
loop
sbb
cmps
cmp
enter
push
int
lds
dec
ror
mov
aas
inc
adc
dec
fs
gs
inc
adc
xor
mov
jmp
retf
bound
pop
pop
mov
pop
frstor
xchg
repz
jg
inc
neg
xchg
pop
xor
shl
jns
xchg
mov
add
rol
jae
idiv
fsubr
pop
xor
mov
and
sub
ss
pop
dec
mov
jmp
inc
repz
fwait
ins
inc
mov
clc
mov
imul
push
jne
push
aad
xchg
dec
stos
push
(bad)
xchg
dec
push
mov
xchg
repz
jmp
shl
clc
inc
mov
mov
ins
dec
add
xchg
clc
movs
dec
fs
jl
xor
ds
mov
repz
in
adc
pop
std
lock
sbb
ds
popf
xchg
test
adc
stc
sub
mov
mov
xor
inc
sub
xor
or
stos
xchg
das
in
and
das
xlat
or
xchg
ror
fsubr
mov
scas
ret
lods
test
ds
cmps
push
call
jbe
mov
iret
xchg
or
lods
loop
sbb
test
imul
aas
stc
xchg
not
sbb
cmp
add
cli
inc
adc
jmp
imul
mov
call
mov
int
loopne
pop
stc
jl
ins
fist
icebp
test
cmp
pop
push
mov
push
dec
mov
test
dec
cbw
push
sub
out
xor
or
jb
dec
cli
jmp
sbb
scas
jae
dec
dec
mov
push
mov
jbe
mov
dec
jge
pop
(bad)
xor
(bad)
lds
xor
cmp
xor
pop
aam
in
(bad)
daa
daa
sub
pop
xor
xor
add
mov
sbb
cwde
inc
daa
mov
lds
mov
cdq
aad
movs
fbld
pop
ins
scas
cs
dec
loop
inc
jp
mov
mov
pop
popf
sbb
jl
mov
enter
sub
pop
leave
mov
loopne
cwde
xchg
dec
and
adc
adc
dec
pop
sbb
(bad)
xchg
xor
xchg
into
shr
enter
das
xchg
sub
push
mov
jmp
movs
pushf
pop
adc
pop
xchg
shr
movs
ins
adc
scas
mov
repz
pop
mov
div
sub
xchg
mov
out
and
sub
jg
dec
push
mov
movs
loopne
mov
sbb
xor
push
jbe
or
mov
or
jne
jmp
rcr
mov
movmskps
mov
mov
fcomp
aad
mov
cmp
jae
loope
sub
mov
jno
daa
pop
jbe
pop
xor
or
ja
mov
shl
adc
rcl
fld
addr16
mov
push
(bad)
loop
xor
mov
movs
bound
rcr
mov
imul
test
jle
jae
and
in
imul
or
mov
add
ret
inc
or
test
push
jg
pop
repz
call
xchg
daa
xchg
sub
add
mov
push
xor
xchg
fld
je
xchg
out
rcl
pushf
xor
cmps
push
cld
mov
sub
outs
test
fsin
shl
ss
and
cdq
mov
cld
leave
enter
mul
dec
js
cmp
adc
js
or
lahf
dec
pusha
mov
ins
ret
dec
xchg
mov
cmp
loop
mov
xchg
les
sbb
loop
arpl
and
xchg
sub
push
test
or
or
lahf
mov
je
movs
push
jle
inc
aad
sete
retf
xchg
test
sti
(bad)
jge
mov
push
popf
in
pop
sbb
add
(bad)
jmp
aam
cmp
adc
rcl
and
cmps
mov
scas
pusha
ret
mov
outs
in
pop
jecxz
pop
out
repz
add
scas
daa
bound
cs
fld
movs
jmp
int
sbb
or
pushf
and
mov
mov
cmp
dec
cmp
test
sbb
cdq
jmp
jmp
mov
imul
das
push
push
mov
dec
push
or
outs
xchg
cwde
frstor
sub
loope
sbb
push
dec
pop
jmp
push
pop
jb
add
pop
fst
xchg
lods
shl
push
fdivr
aad
pop
pop
mov
or
fidiv
pop
aam
aaa
sbb
xor
and
sbb
push
sbb
fiadd
cmp
xchg
sub
add
xchg
addr16
imul
dec
xor
in
aad
mov
push
stos
and
xor
xchg
xchg
or
adc
xchg
outs
call
fistp
xor
outs
ret
repz
mov
xchg
adc
sbb
pop
xchg
push
jmp
jecxz
mov
daa
leave
es
cld
cmc
adc
cmps
test
dec
scas
sub
arpl
jge
ror
test
pop
dec
movs
es
pop
cmps
pop
push
pop
or
pop
int
inc
pop
add
popa
add
push
dec
adc
sub
or
mov
call
lea
addr16
(bad)
mov
mov
ins
fs
lds
stos
dec
and
pusha
shl
jle
adc
jne
dec
xor
pop
repz
retf
xor
icebp
test
clc
mov
mov
push
mov
sub
inc
sub
pop
fsubr
adc
pop
push
movs
and
cli
and
inc
inc
and
in
lods
mov
and
pusha
cmp
call
xchg
in
pop
pusha
sub
ja
adc
fwait
or
cmp
mov
and
shr
les
mov
out
add
push
outs
mov
test
pusha
aad
adc
xor
sub
or
or
lea
out
add
imul
sti
scas
mov
jo
cmps
and
or
fdiv
(bad)
fwait
test
out
rep
push
lock
jge
xchg
sbb
sbb
lods
(bad)
jg
cmc
jl
ror
in
repz
test
mov
mov
jne
dec
mov
aad
int
xchg
sbb
jge
popf
cld
dec
test
mov
mov
jb
xor
mov
mov
or
jno
pop
cld
fistp
ins
add
and
daa
shr
sbb
mov
imul
neg
js
inc
inc
push
adc
pop
and
call
adc
sbb
movs
xchg
(bad)
mov
retf
dec
xchg
cmp
out
ret
cs
adc
and
push
repnz
or
push
mov
jae
lea
xchg
mov
in
clc
dec
push
fst
xchg
neg
sbb
sar
mov
nop
and
(bad)
rcr
out
test
retf
ja
loop
mov
sahf
or
(bad)
aas
push
lea
cmp
sub
movs
enter
lock
jns
and
pop
push
fstp
int3
add
ffree
push
sub
jmp
push
in
push
mul
xor
jns
scas
pop
(bad)
pop
mov
arpl
pop
pushf
pop
dec
xchg
jle
std
clc
fcmovu
pop
ret
inc
popa
add
and
push
jne
cmp
or
movs
xor
jle
(bad)
outs
cmp
dec
loopne
jle
lock
dec
push
int3
ss
lea
jns
movs
mov
xchg
lods
push
ret
cmps
(bad)
repz
jmp
sub
call
lea
test
pop
clc
or
ins
ror
rcl
jg
jae
or
mov
rol
fidiv
adc
stos
inc
repz
mov
jbe
rcl
lea
and
mov
rol
sbb
imul
adc
xchg
push
adc
fdivr
fcom
test
out
test
pushf
mov
aad
sbb
xchg
sti
and
enter
add
pop
mov
daa
je
lock
dec
out
or
imul
retf
retf
mov
sub
cmp
cmc
fmul
xor
das
into
cli
jp
sbb
pop
cwde
fwait
mov
fsubrp
ds
in
push
icebp
inc
dec
inc
outs
ror
sbb
adc
xor
push
mov
jmp
enter
lahf
push
push
mov
dec
scas
fmul
std
outs
out
adc
pop
inc
mov
into
sar
test
test
(bad)
jno
push
mov
push
pop
push
sub
cmps
enter
add
and
adc
sbb
scas
sub
fsub
fimul
mov
mov
(bad)
stc
ss
in
in
inc
(bad)
jmp
bound
gs
mov
xchg
sub
in
jmp
sub
sti
add
stc
add
pop
push
stos
retf
repnz
fwait
test
dec
cmc
sbb
inc
out
shl
retf
fldcw
sahf
daa
fisubr
loope
pusha
std
mov
arpl
aad
dec
dec
push
cmp
mov
xor
mov
jae
mov
push
jo
inc
(bad)
push
add
popf
stos
cmp
fcom
sub
adc
mov
out
push
inc
cs
or
jne
push
mov
sbb
mov
rcl
inc
or
je
jge
sahf
fild
imul
mov
mov
xor
xchg
xor
out
rcr
push
sbb
int3
xchg
lds
or
sar
xor
push
jno
data16
add
mov
and
jle
pop
xchg
les
dec
scas
jnp
out
cmps
pop
pop
push
sti
repnz
ja
pushf
stos
(bad)
pop
fisttp
push
pop
adc
cmp
cmp
sub
adc
mov
stos
xchg
ins
sbb
imul
or
adc
xchg
call
imul
push
stos
retf
xor
test
xchg
test
cmp
clc
xchg
das
loope
(bad)
pop
and
cwde
push
jp
sub
lock
fstp
fst
mov
imul
sbb
mov
adc
bound
retf
das
adc
cmps
repnz
mov
aad
pop
shl
sub
mov
popa
pop
push
jnp
inc
or
sub
jns
popf
inc
clc
adc
push
jge
push
test
ds
cmp
xchg
es
push
fstp
mov
or
int3
and
ins
jmp
rcl
xchg
repnz
mov
in
jmp
stos
xchg
dec
and
dec
jl
push
lods
xlat
call
ds
and
adc
jl
leave
jge
mov
cmp
xchg
repz
mov
and
and
sub
aad
adc
dec
gs
(bad)
push
out
cmp
and
cwde
push
(bad)
xchg
ja
pop
daa
(bad)
ret
scas
cmp
and
add
gs
push
cmp
jae
and
xchg
ds
ror
repz
xor
push
movs
mov
pusha
aas
mov
addr16
imul
push
mov
iret
mov
mov
adc
and
mov
sar
ror
scas
jmp
js
jmp
(bad)
stos
shl
sub
ins
cmps
sbb
or
pop
fnsave
and
rcl
cdq
frstor
jo
lock
movs
sub
in
mov
push
add
clc
retf
mov
xchg
push
out
sbb
aam
je
jg
mov
iret
sub
inc
mov
popf
call
mov
fstp
(bad)
test
inc
call
iret
add
call
test
mov
jp
imul
push
and
add
in
out
mov
sbb
mov
push
popf
push
pop
or
push
test
xor
js
mov
inc
push
ja
mov
xchg
jge
call
or
cwde
inc
dec
shl
test
bound
cmp
cmp
out
shl
xchg
pop
mov
jmp
cmps
mov
out
imul
loopne
adc
xor
loopne
(bad)
popf
and
jl
mov
xchg
lods
(bad)
dec
cmp
mov
das
push
pop
xchg
adc
addr16
arpl
popa
adc
push
scas
shl
test
aas
fldcw
enter
push
mov
into
xor
inc
(bad)
xchg
push
mov
jbe
xchg
mov
aaa
jg
loop
scas
in
test
ret
nop
push
sbb
out
cli
push
sahf
xor
in
mov
pop
inc
dec
dec
mov
aad
dec
fist
dec
xchg
mov
lods
mov
fs
iret
sub
ficomp
xchg
push
movs
xor
jg
dec
popa
pop
mov
cli
jae
mov
push
pop
xchg
jb
aad
test
addr16
pop
add
mov
sub
loope
sti
hlt
out
and
popf
xchg
inc
mov
push
jg
adc
aad
gs
or
sbb
test
lock
sbb
fwait
neg
cvtps2pd
dec
mov
xchg
unpckhps
xor
and
int3
xor
lea
inc
shl
ins
xchg
out
repnz
jp
iret
outs
pop
fs
inc
int
mov
add
rcr
push
dec
adc
sbb
popa
xlat
sahf
add
icebp
lds
lods
jp
jp
mov
jb
dec
lea
int3
(bad)
jbe
adc
into
cs
test
cmps
nop
and
cmc
cmps
in
sbb
push
and
call
ret
adc
add
pop
imul
idiv
add
lock
jecxz
int3
popa
xor
dec
xchg
sbb
jl
and
test
push
and
pop
mov
outs
out
data16
fs
jge
shl
out
ret
cmp
clc
pop
add
ror
and
icebp
ret
rcr
jl
pushf
mov
xor
mov
icebp
sbb
dec
push
and
sub
dec
ret
jecxz
adc
and
lods
jl
push
sub
xchg
fsubr
inc
lahf
push
sbb
bound
sub
adc
push
sar
adc
mov
mov
arpl
scas
push
das
out
out
outs
ror
js
inc
mov
cmp
ret
push
movs
push
mov
fdiv
loop
and
and
xor
push
push
push
in
icebp
loop
mov
push
cmp
push
aas
xor
xor
cli
std
xor
mov
inc
jmp
push
fcomp
sub
movs
jle
arpl
jb
or
rcr
inc
cld
mov
dec
scas
int3
xchg
jnp
fld
cmp
int3
ret
aas
lock
rcl
push
jbe
xchg
iret
jns
ins
mov
pop
icebp
test
cmps
packsswb
push
jne
fisubr
stos
push
jo
dec
fwait
cmp
dec
imul
dec
sbb
ror
test
(bad)
push
push
jbe
add
popa
fsubr
add
dec
inc
inc
fidivr
inc
shr
cmp
mov
push
pop
mov
rcr
popa
sbb
hlt
and
mov
sbb
ins
fs
popf
repz
jg
or
xchg
movs
lahf
pop
xchg
xchg
add
test
push
cmp
lods
jg
les
inc
sbb
gs
popf
daa
cmc
retf
bnd
add
pushf
popf
in
jl
pop
cmp
pop
xchg
scas
rcl
push
dec
call
in
mov
sbb
inc
push
xchg
outs
frstor
push
fs
(bad)
mov
add
mov
cwde
loope
fnsave
pop
lock
(bad)
out
or
jle
sbb
gs
addr16
push
push
mov
dec
mov
dec
push
lods
adc
das
lahf
adc
push
pusha
fwait
popa
daa
ins
xor
scas
pop
xchg
out
call
(bad)
pop
xor
dec
(bad)
inc
push
sbb
gs
test
add
in
push
pop
jnp
stos
dec
shl
sub
test
fild
sub
push
fidivr
xor
jns
lea
or
loope
lea
jb
or
imul
jge
add
(bad)
test
movs
and
imul
jo
dec
fmul
xchg
fdivr
cmp
lods
mov
ss
daa
fisub
pop
xchg
sbb
mov
(bad)
sti
bound
cli
pop
adc
or
mov
mov
out
add
mov
inc
xor
lock
hlt
and
movs
pop
clc
and
cmp
pop
int3
dec
lods
and
inc
mov
clc
xor
and
push
or
xor
add
in
sbb
das
test
dec
xchg
add
cmp
sub
test
or
and
popa
dec
(bad)
aad
ins
div
dec
movs
sub
jmp
imul
push
mov
xchg
add
sub
shl
or
cmp
dec
xchg
fld
fidiv
jo
hlt
aaa
stos
loop
imul
pop
test
sub
mov
push
aad
adc
cmps
call
jge
xchg
ss
out
sbb
sub
and
lea
ror
stc
xor
fsub
push
sbb
std
cld
push
clc
cs
fdivr
(bad)
lods
(bad)
push
sbb
inc
cmc
aas
test
loop
leave
push
loop
sbb
cld
mov
rcr
out
rcl
mov
out
mov
dec
das
xor
js
push
fdiv
pop
shr
adc
pop
mov
mov
in
pop
movs
dec
cmp
movs
pop
fild
dec
push
shr
pusha
adc
and
mov
pop
mov
jb
sbb
es
fwait
dec
mov
mov
add
xor
mov
dec
mov
jecxz
xor
iret
lea
cs
jl
inc
cli
jns
clc
inc
int
shl
mov
daa
int
sbb
xchg
(bad)
sbb
aam
(bad)
imul
ficom
jmp
inc
and
jecxz
mov
cmova
outs
push
hlt
mov
popf
cwde
cmp
fistp
sub
test
mov
fsubp
jmp
fldenv
inc
shl
adc
fld
jmp
mov
add
cmp
xchg
out
jo
les
js
mov
or
fwait
mov
inc
xchg
mov
ins
push
das
retf
aaa
rol
inc
(bad)
xor
in
retf
cmps
imul
sti
lods
aam
mov
(bad)
push
test
push
mov
dec
jecxz
cli
pop
data16
inc
mov
jb
test
mov
cmp
lods
ret
jae
ret
leave
nop
dec
and
inc
imul
or
repnz
retf
inc
aas
add
je
push
adc
ins
mov
cmc
or
aas
mov
mov
add
fcomp
adc
ja
mov
mov
cmps
push
cmps
cmps
adc
test
aam
(bad)
and
call
pop
inc
jmp
xor
popa
sub
popa
jne
xlat
or
loope
nop
outs
rcl
in
xor
sbb
fs
(bad)
(bad)
dec
push
retf
movs
into
movs
mov
aas
loop
pop
sub
sbb
pop
mov
xchg
jmp
fwait
repnz
(bad)
fdivr
jae
and
and
fiadd
jle
int
leave
mov
jle
out
lock
(bad)
imul
mov
mov
pop
xor
xlat
pop
lods
lea
dec
ret
movs
push
xchg
or
push
in
jae
pop
outs
pop
jnp
pushf
sub
fwait
mul
sub
cmps
cmp
xchg
add
in
fisttp
xor
in
sub
ja
ins
nop
mov
daa
xlat
jns
inc
nop
rcl
dec
shl
xchg
xchg
mov
xlat
add
mov
in
(bad)
je
repnz
div
fnstcw
jo
mov
jne
jl
retf
xor
loope
add
push
retf
xchg
in
adc
mov
jge
fs
mov
push
clc
test
pop
push
ja
stos
out
jo
popf
(bad)
dec
dec
cld
cmp
sub
neg
and
in
mov
add
mov
sub
fisubr
inc
dec
adc
cwde
and
lods
mov
cmp
adc
retf
sbb
push
in
inc
lds
and
fs
(bad)
stos
xor
icebp
(bad)
call
cmps
movups
jmp
add
lea
or
pop
mov
addr16
xchg
ror
mov
adc
cmc
or
idiv
dec
shr
call
mov
bound
(bad)
cs
les
cmp
lods
mov
fxch
lea
dec
rcr
sub
ds
sub
std
or
mov
sub
loop
dec
and
and
or
jno
pop
fucomi
int
jb
les
mov
xchg
sti
xor
sub
or
fsub
pop
add
push
fcom
inc
lock
xchg
pop
pop
jmp
sub
mov
and
xor
gs
and
push
(bad)
ja
popf
test
dec
xor
in
shr
ss
movs
dec
adc
sbb
adc
stos
mov
pop
sbb
mov
xchg
mov
cmps
add
sub
xor
ja
call
and
mov
sbb
push
xor
imul
sub
leave
retf
cmp
jns
outs
cmp
push
adc
jb
fchs
(bad)
pop
std
add
mov
call
xor
pop
xor
inc
sbb
icebp
push
ja
mov
sbb
ret
clc
pusha
je
mov
leave
shl
je
adc
call
push
push
cld
sbb
popf
jle
(bad)
mov
leave
xchg
jle
xchg
ss
ss
sbb
push
clc
iret
fsubp
mov
popf
inc
cmp
jge
lods
jo
inc
ja
adc
ret
inc
push
and
(bad)
(bad)
in
mov
pop
movq
std
adc
push
test
fdivr
and
sub
not
shr
out
ror
enter
(bad)
(bad)
pop
out
pop
data16
pop
inc
push
out
enter
nop
pop
jl
popa
add
movs
out
in
or
mov
jp
nop
push
pop
dec
inc
repnz
add
dec
xor
call
cmp
cmp
jb
and
fwait
arpl
lea
mov
dec
(bad)
lds
mov
fnsave
test
or
or
adc
push
cdq
inc
cmps
ret
inc
popa
pop
loope
add
inc
adc
and
movs
push
(bad)
pop
mov
fsubr
cmp
iret
adc
fdiv
(bad)
test
test
int
and
mov
push
lahf
pop
pop
jno
movs
mov
(bad)
imul
je
popf
sbb
rcr
rcl
mov
pop
rol
(bad)
cmp
enter
outs
mov
stos
adc
and
stc
mov
test
outs
test
sub
aam
lahf
(bad)
movs
push
pop
lea
xchg
adc
pop
in
bound
jle
ja
shl
pop
cmps
stos
push
data16
inc
push
cwde
test
(bad)
mov
mov
aam
mov
inc
add
push
lahf
scas
and
ss
sti
rol
outs
mov
rcl
dec
ret
call
jecxz
add
addr16
pushf
pop
mov
sub
jb
imul
push
cmps
add
hlt
mov
dec
or
clc
hlt
cs
xchg
stos
add
rol
out
push
lahf
xchg
into
push
ror
mov
jbe
repnz
test
sub
(bad)
mov
imul
imul
fidivr
imul
pushf
inc
cmp
inc
mov
je
cmovns
xor
push
xor
cmp
jmp
xchg
js
mov
mov
add
(bad)
outs
(bad)
and
push
enter
xchg
push
push
pop
xor
jl
jns
popf
not
mov
xchg
pop
cmp
ss
and
ror
add
dec
adc
push
cwde
in
mov
inc
retf
jge
in
sub
popf
loope
mov
les
sub
stos
cmp
xor
or
push
push
xor
pop
mov
mov
cmp
(bad)
(bad)
add
imul
test
xchg
das
out
jns
lds
mov
xchg
pop
ss
rcr
aad
mov
and
fild
(bad)
dec
push
inc
mov
pop
inc
jae
lods
cli
gs
jge
xchg
jae
cmps
out
mov
jae
mov
cmps
dec
cmp
push
jle
cli
and
int3
xchg
repz
mov
ss
mov
or
(bad)
mov
fisubr
js
fsub
inc
adc
adc
dec
scas
sahf
add
je
data16
push
jle
sbb
jg
mov
mov
sbb
shl
xchg
nop
outs
dec
xchg
adc
dec
ficomp
jnp
maskmovq
imul
lods
inc
icebp
and
dec
fcmovb
shr
sub
xor
arpl
out
add
hlt
inc
xor
je
sbb
fild
push
adc
test
and
dec
loop
inc
js
int
jno
in
cmp
sbb
popf
addr16
cmc
mov
pop
xchg
mov
movs
pop
ins
mov
push
jne
pop
xchg
stos
retf
xor
and
sar
sbb
mov
retf
sbb
and
js
push
pop
rcr
movs
clc
call
mov
es
fisttp
xor
add
arpl
mov
cmp
and
cmp
push
jne
rep
pop
xchg
inc
dec
cld
ja
das
loopne
mov
jbe
cmps
push
dec
ja
or
arpl
xor
mov
repz
mov
(bad)
xor
push
xchg
mov
pop
cmps
addr16
fwait
adc
dec
cmp
aas
mov
inc
inc
xchg
(bad)
dec
and
pop
fcmovnbe
lahf
int
fidivr
jno
xchg
fsub
fs
movs
movs
and
int3
retf
or
arpl
sti
or
xor
inc
mov
cmp
scas
push
(bad)
inc
sub
add
mov
call
lods
(bad)
pop
jecxz
adc
cmp
out
pusha
mov
mov
sbb
or
out
and
xchg
push
jbe
or
fs
pop
fsub
stc
dec
pop
cmp
push
gs
mov
cmc
inc
adc
inc
xchg
push
mov
xor
sbb
ins
xchg
cmps
std
data16
pop
ret
mov
and
xchg
std
call
pop
cmp
inc
cmovno
cmp
jge
xor
sub
(bad)
(bad)
ins
cmp
in
xor
mov
lock
loopne
push
mov
and
jl
inc
mov
mov
mov
loope
gs
sub
inc
das
aad
inc
out
imul
inc
mov
inc
mov
jmp
test
stos
adc
das
add
scas
and
push
mov
call
pop
ret
sub
fidivr
out
daa
cmp
cmp
dec
mov
ficom
add
int
adc
push
add
push
popa
add
xchg
jae
out
cmp
outs
jb
out
xchg
push
adc
leave
inc
aam
mov
test
fdivr
popa
sub
and
xor
adc
fld
fisub
inc
data16
cmp
xchg
arpl
adc
pop
push
mov
(bad)
pop
push
(bad)
test
xor
(bad)
aaa
or
(bad)
enter
and
iret
mov
jge
and
sbb
das
cwde
add
add
lock
into
lock
push
test
ja
push
cli
stc
aad
(bad)
aad
mov
test
xchg
enter
pop
pushf
shl
cmp
push
pop
in
sub
jns
lds
imul
mov
pop
bound
jge
mov
int
sbb
jno
add
jo
inc
in
lods
xor
cdq
add
jecxz
push
and
add
dec
jle
mov
mov
nop
aad
push
sbb
out
xlat
cwde
hlt
xor
outs
sar
(bad)
(bad)
jb
adc
jb
and
add
lods
mov
or
addr16
and
dec
jg
xchg
sbb
or
out
aas
gs
fld
fadd
icebp
cmp
clc
(bad)
mov
xchg
call
xchg
js
es
cmps
mov
inc
out
mov
test
fild
cmps
aas
loop
dec
pop
loop
icebp
dec
xchg
std
xchg
mov
and
outs
mov
adc
mov
leave
xor
sub
dec
icebp
jp
cld
mov
cmc
pusha
sbb
mov
adc
cld
scas
lahf
adc
jno
cmc
sti
mov
and
test
xor
aad
retf
add
sbb
test
lahf
(bad)
cld
pop
bound
add
push
jmp
int
loopne
dec
(bad)
scas
jmp
test
rcl
sar
or
push
add
xor
icebp
fnsave
pop
rcr
mov
inc
aas
rol
inc
sbb
call
(bad)
mov
js
add
sbb
adc
mov
in
fisttp
hlt
mov
mov
fcom
mov
cmp
rcr
outs
mov
adc
fiadd
inc
(bad)
in
sub
or
fst
mov
sbb
or
sti
add
push
fld
out
push
mov
adc
neg
pop
scas
sub
mov
mov
mov
fild
ret
ins
and
sub
dec
or
ror
fidivr
inc
iret
mov
cmp
in
cmp
mov
mov
jle
test
add
inc
das
add
mov
jp
icebp
lahf
imul
dec
xchg
sahf
pop
ficomp
loopne
push
sub
fld
mov
jbe
mov
jmp
outs
sbb
jmp
cwde
add
sti
pop
ds
hlt
adc
push
adc
jmp
stc
and
or
push
movs
aam
pop
out
sub
outs
aas
jle
and
dec
push
das
jg
mov
shl
mov
jnp
and
push
dec
cdq
mov
and
jb
movs
lods
out
pop
push
push
or
jge
pop
cmp
cli
or
in
in
xchg
mov
push
repnz
cli
pop
push
out
sub
mov
push
adc
xchg
cmc
xor
cli
inc
mov
pop
ins
jnp
inc
popa
pop
push
shl
and
inc
jbe
lahf
mov
xor
mov
das
xchg
das
xor
cld
shr
push
cmp
js
aam
mov
push
push
pusha
repz
fisub
dec
lods
dec
or
neg
fcomi
add
adc
jo
xor
cs
mov
repnz
xor
sub
popf
mov
sub
test
and
dec
jecxz
push
shl
inc
int
mov
cmps
inc
lods
add
shl
xor
loop
jmp
sub
lock
mov
xor
fbstp
and
leave
jne
inc
out
shl
es
js
ja
(bad)
movs
sbb
(bad)
xchg
push
into
xor
adc
sbb
mov
test
test
push
ins
mov
rcr
adc
mov
fdiv
push
cli
ret
inc
imul
or
xchg
inc
lock
test
fwait
je
scas
push
jae
leave
xchg
stc
mov
dec
pop
mov
fild
inc
rcl
jne
push
imul
mov
inc
adc
mov
add
jnp
xor
mov
ins
out
cmps
lea
mov
hlt
movs
or
cmp
mov
sub
jecxz
in
aad
mov
in
movs
hlt
sbb
adc
or
sub
call
outs
cmp
mov
rcl
lods
out
jmp
icebp
xchg
movs
or
xchg
or
arpl
(bad)
xchg
push
lods
imul
cmp
repz
mov
ja
fild
mov
mov
dec
dec
pop
push
push
clc
sbb
retf
mov
loop
mov
push
xchg
aad
out
sub
xor
cmp
pushf
shl
retf
push
cmps
xchg
mov
mov
adc
(bad)
imul
mov
dec
cmp
and
push
sbb
and
xor
lahf
and
push
mov
push
mov
iret
pop
test
stc
hlt
std
mov
push
or
fdiv
dec
push
not
push
sar
pop
sub
dec
and
jno
mov
imul
aas
and
js
sar
inc
and
or
mov
sub
xor
sar
mov
cmp
(bad)
imul
xchg
shl
int
pop
loope
cmp
mov
arpl
xlat
pushf
mov
mov
sub
add
push
xchg
push
mov
push
int3
cmps
inc
mov
push
outs
mov
add
sbb
or
mov
rcr
repnz
mov
mov
dec
add
xor
aaa
lods
push
fnstenv
pop
test
in
pop
push
jns
retf
cmp
js
dec
mov
xor
(bad)
mov
cmps
and
sub
repnz
xor
ret
nop
mov
sti
mov
cs
jg
sar
ret
js
das
fs
(bad)
add
cmp
xchg
cmp
movs
jp
add
lods
mov
(bad)
cmp
sub
fmul
out
(bad)
xor
frstor
shr
lock
sbb
retf
fld
jne
cs
lock
fadd
cdq
or
daa
adc
sahf
sub
push
jp
jl
xlat
repnz
(bad)
sub
xchg
jmp
(bad)
out
ror
jo
mov
icebp
iret
out
fwait
add
fnstsw
cdq
fsub
outs
aam
and
rep
fmul
and
inc
ror
(bad)
fistp
jmp
and
in
pop
iret
mov
push
sub
mov
mov
loopne
adc
out
jl
jl
les
mov
jl
inc
jb
add
push
jle
aam
jne
push
rcr
mov
daa
cwde
or
lods
pushf
mov
mov
or
add
fs
dec
xlat
or
and
(bad)
repz
call
jl
out
test
pop
cmp
sbb
jno
add
aas
adc
jb
test
push
push
stos
pop
lods
pop
cld
pushf
aad
add
fdivr
adc
aad
pop
(bad)
sti
and
les
mov
and
or
test
pop
xor
jae
or
jno
mov
adc
cmp
pop
cmps
xor
outs
inc
imul
out
jns
(bad)
adc
mov
push
sahf
dec
js
sub
adc
mov
stc
mov
pop
repnz
popa
cdq
mov
xlat
dec
jns
cmp
nop
jmp
push
mov
push
in
or
int3
pop
push
xor
xor
sbb
(bad)
ror
dec
hlt
or
int
test
xchg
pusha
imul
dec
daa
ja
fld
xor
jmp
jmp
lds
xchg
outs
out
jae
jmp
xor
xor
cmp
sar
sub
sti
jp
mov
push
leave
mov
mov
mov
rcr
aaa
test
sbb
mov
inc
jl
in
es
call
cdq
mov
mov
inc
mov
int
clc
xor
and
sub
fisttp
push
jmp
call
sbb
(bad)
mov
adc
or
int
jle
push
mov
mov
int3
loop
pop
lea
out
test
ds
mov
or
cmp
dec
add
sbb
pop
in
xchg
dec
lods
inc
ror
aas
push
mov
ret
mov
lock
(bad)
sbb
pop
xlat
daa
clc
inc
add
add
and
int
jb
xor
stc
shl
xchg
cmp
sahf
mov
pop
mov
retf
inc
mov
fsub
stos
sahf
adc
sbb
call
addr16
pop
xchg
or
or
or
adc
stc
or
or
lods
push
adc
xor
pop
push
push
(bad)
xchg
es
push
pop
stos
xchg
daa
mov
and
pop
(bad)
jmp
mov
ret
loope
stos
inc
xchg
mov
pop
xlat
xor
cmc
stc
and
push
xchg
mov
xlat
das
xor
enter
xlat
add
in
jmp
pop
cmps
lahf
retf
mov
(bad)
clc
cs
xchg
stos
adc
xor
adc
nop
cmp
pop
xchg
in
repnz
ins
jns
mov
add
dec
mov
mov
push
popa
lds
mov
test
fdivr
sbb
aam
jb
inc
push
sti
inc
test
xchg
mov
je
cs
iret
mov
and
sbb
nop
js
mov
jecxz
sbb
loope
and
adc
mov
mov
mov
mov
sbb
and
sbb
jnp
or
shr
push
cmc
pop
add
out
ror
mov
aam
push
mov
xor
mov
jecxz
out
icebp
sar
sbb
mov
mov
sub
or
xchg
mov
ss
jb
(bad)
push
mov
imul
pop
out
ja
iret
movs
ins
repnz
int3
pop
xor
xchg
not
pop
pop
inc
mov
adc
ror
jecxz
(bad)
and
(bad)
je
mov
test
dec
fstp
arpl
inc
mov
fistp
adc
and
sbb
pop
mov
mov
mov
add
xor
out
lock
jno
dec
jae
out
jne
add
xchg
sahf
imul
jle
int
inc
aaa
fst
outs
inc
scas
jg
sub
mov
out
imul
jb
call
test
leave
test
mov
js
cdq
icebp
push
adc
adc
mov
mov
mov
adc
inc
icebp
pop
push
lods
out
mov
sub
mov
jbe
pusha
das
fstp
jg
cmp
aas
aad
ins
xchg
push
and
test
dec
outs
mov
das
bound
lods
push
mov
and
pop
jle
scas
jp
cmc
inc
inc
ret
loopne
xchg
adc
inc
clc
push
xor
inc
int
mov
out
adc
(bad)
lock
test
mov
jmp
xchg
add
push
arpl
inc
outs
or
push
sbb
dec
fwait
inc
xchg
in
pop
jmp
test
mov
popa
xchg
mov
mov
cwde
lea
dec
xor
(bad)
push
push
adc
into
cld
pop
sbb
mov
fcmove
xor
dec
test
xor
fldpi
inc
and
and
sahf
fs
mov
jmp
pop
inc
aam
xor
(bad)
pushf
xor
mov
ret
lock
das
and
sbb
in
add
push
int
mov
lea
sbb
prefetch
adc
xchg
mov
or
add
jbe
outs
xchg
gs
(bad)
or
inc
mov
inc
pop
sbb
retf
cmp
and
jge
mov
and
outs
outs
jle
in
sbb
pop
call
aaa
add
repz
sbb
jmp
sbb
pop
push
xlat
cmp
push
shl
loop
mov
aam
loopne
and
push
sub
(bad)
pushf
mov
cs
xchg
test
pusha
fidivr
ins
sbb
mov
add
ins
cld
xor
jns
test
push
(bad)
and
adc
test
stos
imul
mov
pop
addr16
addr16
mov
in
(bad)
pop
hlt
sub
imul
mov
cwde
sbb
mov
call
push
add
stos
lea
xchg
lods
pop
dec
icebp
mov
sub
add
sbb
adc
jmp
jle
bound
pop
nop
mov
aam
icebp
mov
xor
fcomp
dec
jmp
leave
mov
cwde
pop
(bad)
xchg
call
cmps
jle
mov
retf
push
leave
xor
or
mov
mov
dec
daa
movs
push
aad
loop
fcmovb
and
push
cld
mov
jne
fnstsw
push
mov
cmp
mov
lahf
shl
movs
jle
scas
ret
cmps
retf
add
cli
sbb
cmps
repz
and
mov
jbe
mov
xlat
push
ja
and
xchg
aam
ret
xchg
cmc
inc
mov
pop
cdq
icebp
inc
cld
icebp
int
ins
imul
test
dec
sub
loopne
ds
test
mov
(bad)
adc
pop
dec
mov
adc
pop
xchg
bound
inc
jge
fwait
jmp
je
ins
into
aad
push
mov
inc
and
xor
dec
xor
add
aam
(bad)
addr16
pop
imul
data16
cmp
ins
inc
mov
and
leave
rol
and
gs
jae
sbb
mov
sbb
inc
xor
sahf
out
ret
gs
test
sub
push
mov
jbe
add
int
fdivrp
cmc
mov
push
das
cmp
test
repz
sbb
xor
imul
js
mov
jns
inc
(bad)
lahf
(bad)
adc
push
sub
or
adc
cwde
add
cli
mov
inc
test
aas
stos
pop
dec
(bad)
mov
dec
test
repnz
jo
(bad)
div
mov
lea
js
scas
jge
adc
ins
dec
sub
or
push
pop
lea
out
xor
mov
push
adc
jmp
jecxz
add
fucomip
jo
sbb
push
sbb
stos
mov
inc
imul
shl
repnz
jne
inc
add
retf
iret
(bad)
pop
xchg
sbb
push
sub
arpl
ins
mov
pop
and
daa
lods
out
mov
sbb
cwde
out
push
push
loope
int
dec
push
add
or
mov
repnz
adc
dec
dec
(bad)
lods
cmps
adc
mov
mov
std
and
pop
cmp
mov
mov
rol
(bad)
mov
clc
bound
or
sub
(bad)
iret
mov
adc
neg
loope
lock
test
or
sbb
or
stos
sahf
enter
adc
sbb
jmp
sbb
mov
mov
ins
sahf
nop
jg
push
jo
push
mov
out
cmp
sub
hlt
xor
mov
ds
fstp
aam
sub
pop
mov
aad
aas
inc
(bad)
mov
adc
push
sti
int3
test
(bad)
stos
fadd
hlt
cmc
mov
xchg
add
(bad)
xor
call
xor
sbb
xchg
call
inc
loope
into
addr16
pop
nop
lock
cmc
ret
push
jns
inc
or
cmp
cdq
cdq
and
or
mov
lea
jo
sbb
mov
mov
fs
hlt
adc
jg
adc
ds
fisubr
cmp
fild
je
push
rol
pop
sub
dec
fs
iret
xor
(bad)
(bad)
imul
xor
push
inc
sti
dec
mov
fistp
mov
(bad)
movs
fidivr
loope
xchg
push
sub
xor
popf
cmps
mov
retf
mov
dec
push
xor
cmp
(bad)
or
out
and
sbb
cmp
push
je
xchg
jle
mov
mov
cs
pop
loope
outs
(bad)
xchg
xchg
dec
lahf
lahf
mov
pusha
and
test
jne
fnstenv
xor
jo
inc
scas
or
rol
inc
or
fadd
push
or
icebp
add
push
ja
pop
lahf
cmps
iret
mov
nop
daa
jne
dec
mov
xor
les
jno
xchg
add
jne
and
sub
(bad)
popa
pop
neg
and
jl
mov
retf
and
repnz
aaa
dec
mov
aaa
mov
out
pop
mov
jle
loopne
pop
adc
neg
and
fdivr
mov
je
out
push
mov
pop
int
lods
mov
cmp
int
iret
addr16
sbb
inc
inc
call
stos
cwde
jae
jae
cmps
jmp
(bad)
jbe
out
push
cmc
cmp
sbb
jb
imul
and
adc
mov
or
jbe
add
clc
sub
test
shr
shl
cmp
xor
jl
cwde
mov
aad
ja
push
add
inc
into
bound
push
retf
addr16
repz
mov
inc
test
cmp
loopne
or
imul
in
jmp
xchg
inc
jmp
dec
xor
add
cli
ror
aaa
test
fdiv
mul
std
pop
push
out
movs
add
mov
and
pusha
mov
dec
or
or
and
lods
xor
xchg
add
xchg
jecxz
push
and
mov
stc
(bad)
cdq
push
pop
cmps
sub
nop
cmps
xlat
ja
inc
sub
jbe
dec
jmp
pop
xor
shl
inc
jge
loopne
out
enter
aas
xchg
push
xchg
or
pushf
stos
fnsave
ror
fdivr
push
xlat
sub
mov
int
or
ret
jno
retf
or
adc
lock
outs
push
jmp
mov
imul
inc
sub
in
enter
bound
and
xor
cmp
inc
ret
jae
or
aad
div
scas
jne
xor
lock
and
xor
mov
push
lods
cmp
cwde
das
sub
dec
outs
jo
adc
add
mov
fist
sbb
sbb
xor
or
pop
push
jae
cdq
cmp
test
(bad)
sub
push
xchg
in
pop
fnstcw
call
stos
fstp
(bad)
scas
cmc
jg
inc
jl
xor
xor
cmps
xor
mov
cmp
sbb
mov
test
xchg
(bad)
in
push
mov
ret
cmp
cmp
and
fcomp
mov
xor
hlt
xchg
pop
iret
(bad)
int
shl
mov
xchg
dec
mov
sbb
mov
pop
outs
inc
add
es
push
mov
push
enter
cmps
cdq
push
out
mov
call
xlat
push
stc
add
and
sub
pop
sbb
add
inc
out
data16
mov
test
lock
adc
sbb
out
out
aas
not
xor
jbe
iret
cli
pop
mov
mov
lock
out
inc
add
les
sbb
jp
dec
clc
adc
fimul
push
aad
pop
or
jg
mov
(bad)
jo
shl
aaa
loop
aaa
pop
inc
mov
adc
retf
stc
push
repnz
mov
cs
or
invd
data16
les
mov
fcomp
dec
inc
mov
sub
pop
cmps
(bad)
(bad)
repnz
push
dec
cwde
cli
push
add
lahf
clc
push
sub
or
cmps
or
pop
pop
stc
cwde
imul
scas
inc
xor
xor
adc
pop
out
jae
rol
popf
fild
or
ret
pop
(bad)
jo
fcomp
imul
je
pop
inc
loope
lods
icebp
out
inc
cs
fcmovne
sbb
adc
sahf
sahf
in
psraw
mov
pop
loopne
jg
es
mov
sbb
repnz
jge
or
push
rcl
into
and
adc
nop
(bad)
sub
mov
stos
nop
xchg
jno
ss
repnz
leave
push
add
mov
xchg
ror
aam
and
push
pop
dec
sub
push
pop
cmp
ss
sbb
jge
pusha
ret
in
repnz
mov
mov
dec
jmp
push
push
(bad)
ret
inc
sti
pop
mov
stos
or
add
iret
imul
jns
aad
xor
int3
or
adc
sbb
or
push
jg
(bad)
call
jno
cld
sub
in
push
je
cmp
push
or
hlt
arpl
dec
xlat
test
mov
bound
aam
add
mov
std
cmp
inc
push
pop
cmp
cdq
mov
stc
add
push
inc
push
fcom
test
aaa
je
xor
sub
pusha
jmp
movs
cmp
fsub
int
call
das
or
imul
rcr
sub
xor
bound
pop
js
add
int3
pushf
xor
or
scas
nop
or
sbb
hlt
loopne
xlat
neg
pusha
dec
add
fs
rol
mov
popa
and
pusha
or
daa
mov
inc
aaa
cmps
ja
mov
ins
fucomp
popf
and
test
sbb
mov
icebp
ror
adc
and
cmp
jg
xor
adc
fs
add
jnp
cmp
psllw
fnsave
push
scas
in
into
test
pop
push
push
jp
push
fbld
xchg
cmp
shr
push
cmps
jge
sub
loope
addr16
sbb
sub
mov
jno
pushf
add
mov
adc
loopne
cpuid
adc
fbstp
enter
sbb
sub
inc
inc
fwait
lods
or
ret
lea
and
cmp
daa
mov
sbb
xchg
nop
out
in
jb
push
sub
in
push
jg
dec
jmp
or
push
data16
push
and
sub
cmp
loope
xchg
xchg
pop
dec
sbb
mov
pop
int
movs
and
movs
pop
ins
or
xchg
xor
pop
xor
rcl
icebp
xchg
jmp
jns
gs
add
addr16
sub
xor
or
in
fwait
and
iret
xor
mov
pop
mov
mov
xor
mov
icebp
in
cmc
bound
dec
adc
outs
ss
cmps
outs
push
and
leave
dec
es
hlt
fmul
rcl
test
ins
and
in
mov
loopne
mov
mul
push
pop
out
in
leave
aam
inc
lods
ins
adc
mov
xor
xor
xor
and
xchg
(bad)
pop
gs
leave
push
(bad)
add
pop
inc
clc
or
cs
mov
pop
jne
mov
or
xor
sti
(bad)
(bad)
fistp
sbb
mov
xchg
adc
mov
xchg
add
push
mov
add
lods
test
sbb
hlt
mov
adc
lock
(bad)
pop
in
je
inc
mov
sti
sub
mov
movs
add
inc
push
xchg
inc
inc
test
adc
push
mov
fmul
jne
sysret
xchg
adc
scas
imul
sub
(bad)
into
pushf
or
outs
push
pushf
aaa
sbb
adc
pop
es
mov
das
repz
sub
xor
sahf
in
sub
jecxz
pop
dec
cs
add
arpl
or
lock
cdq
clc
ds
push
gs
stos
sbb
rcr
cmp
mov
jbe
pop
push
cs
xchg
mov
dec
jno
stos
and
and
in
pop
fcom
jb
aas
es
xor
jb
popf
cld
inc
add
mov
aaa
movs
lahf
in
dec
outs
jae
xchg
sbb
push
push
(bad)
js
shl
xchg
dec
inc
bound
jp
or
sar
inc
pusha
jae
adc
cwde
popf
mov
imul
lds
(bad)
mov
jbe
pushf
out
inc
push
pusha
lock
aad
adc
xchg
sbb
fld
and
out
add
push
dec
or
loop
ja
test
pusha
sub
nop
addr16
mov
fcomp
daa
add
(bad)
mov
push
les
shl
push
scas
xor
cmps
ficomp
js
neg
jmp
xor
pop
dec
and
mov
inc
mov
lahf
test
iret
stos
cmp
xchg
jle
in
mov
lock
jo
inc
mov
hlt
adc
pusha
xchg
fdivr
sti
imul
pop
pop
outs
das
aas
jnp
mul
in
test
sub
es
ficomp
sub
stc
mov
int
mov
xchg
pop
jle
jp
in
sub
test
loopne
(bad)
stos
popa
pushf
clc
mov
jno
mov
imul
jbe
jne
sbb
dec
sbb
push
pop
jbe
in
push
push
js
out
imul
out
cmp
gs
push
dec
ja
jle
repnz
or
jg
cmps
add
sub
cdq
push
aad
daa
lea
dec
fwait
mov
inc
aaa
dec
shl
add
dec
imul
stos
imul
int
retf
outs
loope
je
and
xor
imul
jne
mov
cmps
sub
call
mov
aam
sbb
mov
out
ja
mov
ret
inc
push
and
movs
adc
stc
and
lahf
(bad)
test
mov
sbb
inc
daa
sub
xchg
icebp
lock
jb
cli
test
adc
mov
jg
mov
shl
add
scas
xchg
and
daa
cmp
imul
jae
xchg
imul
fimul
push
pop
sahf
push
xchg
stos
push
inc
jecxz
xchg
std
iret
lods
ror
lods
ss
ret
add
cmp
jmp
push
fldcw
xchg
ds
mov
push
imul
jge
gs
in
xor
mov
xor
pop
jb
fimul
scas
inc
outs
cli
add
ffreep
xlat
stos
mov
add
mov
cmp
test
add
aaa
cmp
lds
pop
inc
mov
daa
loop
es
mov
shl
mov
nop
xor
add
cmp
lahf
out
movs
mov
call
mov
xchg
scas
or
enter
inc
test
aam
cli
dec
or
icebp
std
mov
fisttp
aad
(bad)
mov
daa
shr
adc
or
or
cdq
fs
call
(bad)
js
inc
call
hlt
std
pop
fs
inc
xchg
mov
mov
or
aas
push
cmp
sbb
mov
mov
cwde
cmp
push
out
and
pop
dec
mov
add
mov
mov
mov
and
call
(bad)
lock
shl
iret
out
push
cmp
scas
xchg
push
std
movs
(bad)
sbb
(bad)
or
sbb
sbb
lods
lea
or
xchg
adc
mov
int3
pop
ins
sbb
imul
and
gs
sub
add
mov
fimul
pop
mov
outs
test
push
adc
ror
(bad)
or
inc
ja
and
add
add
xlat
push
dec
or
jmp
mov
rol
pop
mov
cmp
addr16
shl
jae
pop
push
and
movs
sub
idiv
lock
push
jecxz
fsubr
cmp
fs
sti
inc
clc
adc
std
sbb
movs
fnstenv
mov
das
in
popa
lock
std
js
inc
popa
mov
test
outs
sub
add
shl
push
and
adc
add
pop
cmp
or
pop
and
cld
or
les
push
jecxz
cmp
imul
mov
xor
xor
xchg
call
mov
sar
call
punpcklbw
ins
sti
fst
push
push
fwait
not
inc
repz
or
aas
clc
xchg
mov
cs
lods
neg
xor
std
sub
add
(bad)
xlat
push
ret
and
loopne
jo
aas
mov
xchg
inc
pop
test
mov
push
and
movs
pop
je
mov
adc
std
sbb
ret
test
or
add
pop
and
push
int3
lgs
cmps
cmps
add
push
out
xlat
add
test
fisttp
jp
adc
hlt
mov
mov
pop
shl
out
xor
neg
inc
lods
dec
test
fbld
imul
(bad)
mov
jb
cmps
jno
cmp
movs
in
js
sub
arpl
cld
ret
enter
cdq
push
xchg
xlat
outs
pop
cwde
inc
add
out
push
movs
fidivr
mov
js
xchg
and
mov
or
mov
xchg
xchg
scas
xchg
pop
sti
push
pusha
stos
jge
sub
popf
in
inc
pop
in
int3
cmp
lods
lahf
and
add
add
inc
sbb
mov
add
inc
icebp
shr
xlat
into
and
sbb
or
retf
sbb
mov
fild
push
xchg
iret
aaa
inc
pop
xchg
adc
in
sbb
mov
xor
int
pmuludq
ss
test
(bad)
retf
or
mov
and
and
adc
inc
ja
nop
sub
cmp
stc
xor
xchg
addr16
xor
retf
aas
(bad)
jmp
aad
mov
imul
je
(bad)
inc
test
inc
mov
scas
pop
icebp
pop
inc
scas
dec
pop
pop
test
xor
cwde
dec
dec
movs
mov
inc
xor
rcl
leave
mov
push
fimul
scas
jecxz
(bad)
repz
and
mov
pop
jg
push
popf
ins
test
mov
jmp
pop
(bad)
push
inc
xor
inc
fdivr
mov
les
movs
adc
mov
mov
inc
cmps
pop
xchg
test
retf
ja
repz
add
nop
push
and
test
outs
(bad)
jmp
mov
call
stc
popa
push
dec
out
xchg
div
push
mov
xchg
das
or
inc
sub
pop
xchg
scas
aam
sbb
lahf
jp
lea
test
pop
sar
jne
mov
bound
sbb
in
xor
jge
push
ja
and
fstp
dec
xor
push
fild
sbb
outs
mov
sahf
push
cmc
scas
adc
xchg
mov
push
pusha
mov
adc
fld
cmps
inc
dec
scas
jne
bound
loopne
xor
(bad)
aam
jo
fsubr
je
jp
iret
fcmovnbe
jecxz
imul
sti
sahf
aam
scas
std
hlt
fs
xchg
inc
pop
fisub
push
ds
add
add
sub
clc
adc
cmp
movs
xchg
repnz
retf
pushf
xor
je
add
(bad)
(bad)
in
or
pop
out
aas
push
inc
cmp
and
jb
xchg
loopne
icebp
mov
sahf
pop
or
mov
lods
cmp
mov
icebp
dec
sbb
enterw
hlt
push
lds
dec
or
push
and
mov
in
jnp
dec
and
cmps
sub
fisub
in
retf
rcl
jp
movs
mov
fst
in
int3
mov
shl
xchg
xchg
mov
push
nop
xor
(bad)
test
pop
jge
mov
shl
xor
aaa
push
rcl
clc
jo
push
nop
adc
mov
and
xor
and
mov
idiv
sub
jmp
daa
dec
sbb
inc
pop
xchg
ds
sub
lds
push
push
das
rcl
jbe
lea
in
data16
pop
fistp
in
jge
imul
div
push
in
(bad)
outs
mov
sbb
add
mov
sub
out
fsub
and
(bad)
dec
stc
mov
mov
sti
inc
movntq
jl
pop
and
mov
xor
push
and
cli
(bad)
xor
(bad)
movs
out
jns
add
movs
cwde
inc
es
mul
daa
push
scas
sbb
mov
jnp
inc
packuswb
es
mov
xchg
inc
add
or
retf
outs
dec
rcr
ds
(bad)
fist
pop
inc
and
stos
popa
in
movs
xchg
cmp
outs
jl
jnp
out
and
cmp
adc
icebp
call
nop
jp
cmps
sub
xor
and
pusha
lahf
xchg
xchg
inc
push
or
ds
iret
pop
cmp
int
bound
cmp
push
pop
ins
ins
fild
lods
movs
add
rcr
out
add
cmp
inc
in
inc
adc
outs
add
adc
ds
adc
ror
jecxz
push
cli
mov
fistp
loope
adc
adc
or
mov
lahf
jle
stos
inc
ret
adc
push
and
enter
sbb
lock
iret
movs
cmp
imul
mov
jae
fs
in
das
jmp
es
adc
jg
mov
int
aam
push
jmp
mov
and
imul
push
push
ja
mov
mov
sub
and
ficomp
leave
pusha
addr16
and
arpl
dec
sbb
call
xchg
out
fsub
jns
pop
pop
sbb
xor
push
mov
test
hlt
rcl
xchg
pop
and
push
addr16
push
adc
mov
jecxz
push
jns
dec
outs
xchg
fs
scas
pusha
jmp
push
jmp
dec
mov
in
jb
mov
cmp
adc
mov
fcom
mov
inc
ins
add
leave
mov
fist
jg
add
(bad)
call
dec
loopne
add
xchg
adc
and
and
mov
and
push
mov
imul
data16
xchg
in
sub
jecxz
or
stos
pop
int
push
mov
mov
pop
cmp
xchg
retf
pop
mov
sbb
jmp
push
mov
dec
leave
sti
loopne
push
stos
adc
rol
xor
cmp
cmp
pop
push
outs
add
stc
xchg
xor
xor
push
ja
sbb
clc
adc
leave
movs
jmp
(bad)
dec
push
xchg
mov
push
ins
aas
cdq
out
sbb
nop
push
adc
cmps
test
das
mov
mov
push
xchg
or
xlat
cmp
and
or
(bad)
adc
out
(bad)
(bad)
sti
push
push
outs
inc
adc
shl
(bad)
rcl
pop
pusha
sbb
aaa
aad
dec
neg
fisubr
(bad)
aad
dec
inc
aas
cli
repz
sahf
fxtract
sti
cli
daa
shr
add
std
pop
and
mov
or
mov
lahf
add
lods
push
fisub
fdivr
int3
or
pop
bnd
cld
jne
inc
in
fcomp
xchg
jmp
jle
mov
ds
movs
mov
push
xor
mov
add
jo
call
je
stos
arpl
std
inc
mov
aas
sub
mov
loop
cmp
or
mov
je
mov
ret
in
out
mov
inc
es
loop
cwde
xchg
push
push
adc
adc
cmp
jmp
xchg
dec
jae
pop
inc
das
movs
mov
mov
xchg
jl
cli
das
jg
cmp
(bad)
in
mov
rol
scas
test
leave
cmp
(bad)
arpl
cli
mov
sub
and
rcr
in
jnp
push
cmps
dec
dec
xchg
(bad)
xor
fisttp
mov
add
mov
mov
test
inc
mov
xlat
call
add
retf
fbstp
mov
lock
xchg
mov
mov
aas
inc
inc
pop
xor
lock
sub
mov
mov
jmp
or
dec
push
xchg
(bad)
mov
lea
idiv
(bad)
inc
and
scas
repnz
test
jle
ror
xor
add
or
aam
repnz
mov
(bad)
aam
loop
mov
sbb
ss
adc
cmp
or
sub
xchg
push
test
pop
retf
dec
clc
dec
ret
(bad)
imul
je
adc
push
scas
sti
pushf
jae
fwait
sti
pop
cld
ret
lahf
xor
pop
pusha
inc
retf
mov
mov
sbb
sub
mov
ficomp
leave
fidiv
adc
push
mov
push
push
or
pop
cmc
lahf
adc
inc
in
push
es
push
scas
adc
push
add
aas
iret
loope
popf
cli
dec
cmp
ins
cmp
imul
push
jecxz
arpl
cs
fs
jno
mov
mov
push
adc
ins
rcl
cmps
lods
add
mov
out
shl
loopne
std
(bad)
xchg
cmp
scas
adc
test
pop
sub
xchg
cmp
pop
add
popf
in
and
out
inc
mov
xchg
push
sbb
out
mov
mov
mov
bound
leave
in
outs
clc
stc
mov
ss
mov
add
fst
leave
test
add
mov
pop
fist
adc
stos
add
clc
into
jb
leave
dec
cmp
dec
pop
enter
test
mov
mov
push
jno
mov
(bad)
xor
lods
xor
ficom
add
jmp
push
int3
xchg
call
in
cmp
enter
mov
dec
outs
jmp
mov
or
jns
cmp
test
inc
pop
shl
in
xor
push
xchg
dec
int3
cmp
jle
mov
out
sbb
(bad)
sar
lods
or
xchg
in
push
cmc
push
jmp
mov
rol
inc
mov
repnz
jecxz
imul
lods
mov
cld
sub
fnstsw
pop
icebp
inc
aam
mov
sbb
mov
adc
sbb
fidiv
push
push
lods
mov
test
inc
aaa
pop
dec
sbb
into
add
sub
(bad)
adc
(bad)
ret
pop
lock
imul
dec
sub
std
adc
and
test
dec
scas
push
mov
push
jno
sub
mov
jmp
jbe
jmp
ja
inc
xchg
cmps
repz
hlt
aam
mov
cmc
or
call
push
gs
jo
xchg
lock
sbb
ret
popf
aaa
jge
push
mov
sub
push
jns
aam
les
pop
icebp
(bad)
jne
and
xor
sub
out
aas
mov
aad
jle
pushf
dec
pop
test
fisttp
xchg
xor
mov
jge
loop
xchg
in
mov
add
inc
jo
mov
ret
add
mov
retf
movs
(bad)
movs
sbb
push
cmps
adc
sar
pop
push
loope
or
mov
scas
sti
adc
cmps
xor
icebp
push
retf
cmps
inc
pop
xor
lahf
mov
(bad)
ds
mov
mov
push
pop
sub
setns
ja
or
xchg
pop
push
push
pushf
sub
or
jl
out
push
fistp
or
mov
in
cmp
int3
push
push
mov
cmp
(bad)
and
out
retf
add
stos
push
pop
jle
lods
(bad)
(bad)
push
xor
push
add
cmp
push
pop
(bad)
repnz
add
test
mov
sti
mul
test
(bad)
mov
jnp
jno
push
pop
mov
dec
jg
push
jmp
adc
xchg
jge
mov
sbb
and
push
sahf
nop
dec
and
mov
pushf
add
enter
add
addr16
mov
sbb
add
push
push
adc
push
inc
xchg
sub
std
bound
daa
jae
mov
or
out
jp
push
inc
sub
in
repz
push
push
cmp
add
sbb
or
jge
pop
loope
jno
fistp
stos
(bad)
stc
dec
mov
pop
mov
aam
mov
popf
xchg
xor
add
xor
in
push
jg
gs
or
dec
add
cmp
inc
inc
icebp
jnp
jbe
mov
dec
xlat
jmp
inc
adc
leave
je
out
add
and
jl
test
mov
cli
mov
imul
repz
aas
pop
retf
sbb
daa
sbb
mov
(bad)
sbb
sti
push
(bad)
icebp
ins
nop
mov
adc
sbb
imul
data16
cli
mov
ds
lahf
retf
out
lahf
xchg
scas
js
push
dec
jecxz
push
shl
fisttp
pop
add
or
mov
adc
mov
leave
test
aaa
dec
ins
mov
adc
mov
clc
and
ins
cwde
inc
in
leave
mov
pop
data16
and
add
popa
jnp
rol
mov
shr
mov
mov
inc
cli
call
test
movs
cmp
stc
(bad)
pop
inc
imul
mov
jl
call
(bad)
outs
xchg
ror
inc
scas
dec
cwde
int
arpl
test
and
push
test
mov
xor
aas
ja
mov
pop
(bad)
jl
fs
idiv
mov
jmp
aad
adc
dec
xchg
xor
mov
mov
aam
cmp
cmp
add
ficom
sub
popa
push
jge
(bad)
push
push
aas
cdq
loop
inc
mov
xchg
push
out
inc
push
mov
fistp
test
cwde
pop
pop
cmp
ret
inc
jmpw
or
adc
or
jmp
fs
or
pop
ins
idiv
jne
or
xchg
mov
js
addr16
in
jo
cwde
scas
push
aas
loop
or
loop
fild
jno
cmp
sbb
dec
xchg
and
inc
cmp
rcl
pop
mov
mov
fidiv
adc
mov
mov
retf
sti
and
repnz
sahf
mov
jbe
in
jnp
add
inc
dec
retf
pop
cmp
outs
push
dec
push
jge
sbb
mov
movs
jg
push
cmp
lods
es
dec
dec
pop
dec
in
inc
sub
pop
or
dec
arpl
xchg
in
out
pop
fisub
fidiv
test
inc
xor
cmp
and
jecxz
mov
inc
push
xchg
push
xchg
(bad)
test
mov
jb
popa
cmp
xlat
test
xchg
mov
mov
inc
adc
lods
mov
retf
cmp
scas
push
xor
add
shr
inc
into
xlat
aad
addr16
mov
repnz
(bad)
push
add
movs
xor
(bad)
pop
cmp
jo
repnz
test
fsub
(bad)
sbb
lods
imul
cmc
out
and
scas
xchg
and
mov
lock
dec
stos
mov
out
std
test
dec
push
loopne
fist
sti
lahf
pop
inc
pop
and
cmp
jae
icebp
in
cmp
jp
stc
or
mov
inc
xchg
fisub
int3
adc
adc
mov
and
or
xor
xor
shr
xchg
cs
out
hlt
les
popf
add
pop
jno
cdq
das
xchg
adc
add
sub
mov
xchg
xchg
int
mov
sbb
in
imul
das
cmp
xor
or
stos
aam
mov
push
jbe
sub
data16
clc
jo
add
fldenv
scas
rol
test
fstp
xchg
(bad)
sbb
into
out
sbb
and
lods
stos
xor
sbb
mov
mov
mov
pop
mov
dec
jle
test
xchg
jne
pop
dec
pop
jbe
add
movs
stos
stos
nop
push
movd
cmp
xchg
add
push
out
out
cs
fisttp
xlat
xor
inc
es
ss
ss
jp
in
pop
sub
aad
dec
mov
jl
out
and
jp
dec
lds
inc
popf
adc
xor
cmp
mov
ret
mov
xchg
mov
jg
mov
shr
xchg
cmps
xchg
adc
nop
ret
sti
or
mov
push
pop
add
add
cmp
imul
xchg
mov
std
das
test
adc
pop
jo
rcl
mov
mov
jb
ds
mov
scas
(bad)
sti
jl
popa
inc
ja
ror
mov
jmp
movzx
push
bound
xor
sbb
sbb
xor
mov
ret
xor
xlat
and
jo
push
xlat
mov
xchg
jge
sub
retf
cmps
mov
mov
popa
out
xor
movs
gs
cmp
retf
adc
adc
in
js
popa
call
aas
(bad)
pop
rcr
jno
xlat
ja
mov
loope
psllw
mov
fdivp
outs
sub
lods
mov
and
cli
mov
ds
jnp
push
mov
pop
sub
out
jae
mov
popa
sub
out
inc
js
out
mov
rcl
cmps
jb
lock
jbe
sub
clc
ret
ret
adc
push
or
jbe
push
mov
lods
sub
push
pushf
mov
and
jb
cmps
xor
sbb
test
mov
sbb
sub
popa
inc
cs
retf
call
adc
shl
mov
push
xchg
or
hlt
in
sub
mov
adc
movs
or
pop
dec
call
callw
sbb
int
adc
push
je
test
push
dec
xchg
xchg
pop
inc
arpl
rcr
cmp
xchg
cmp
push
xchg
popa
inc
jmp
sbb
nop
and
adc
outs
stos
fld
or
test
xchg
inc
jo
cmps
stos
lock
adc
jmp
ret
add
movs
test
dec
ja
xchg
pusha
add
inc
add
mov
dec
push
out
fistp
inc
xor
xchg
xor
jno
pmuludq
and
jp
ins
into
stos
cmp
sahf
pop
push
call
pop
adc
shl
inc
inc
dec
pop
xor
cmps
push
xchg
inc
push
cmps
mov
stos
cmp
outs
push
std
add
outs
pop
movs
or
outs
push
(bad)
mov
enter
push
cmp
mov
mov
enter
fistp
mov
(bad)
jmp
iret
adc
or
test
or
shl
mov
mov
jle
fbld
push
es
mov
js
imul
sbb
mov
adc
arpl
aam
sub
sti
dec
jne
scas
pop
icebp
sub
and
mov
dec
(bad)
out
add
fstp
and
outs
ins
inc
mov
out
sbb
cdq
sbb
stos
fcomi
jnp
hlt
lods
out
xchg
or
mov
xchg
push
mov
mov
lock
and
shl
ret
inc
imul
stc
aad
xor
ja
(bad)
cmp
mov
(bad)
sbb
dec
das
ror
pop
inc
mov
adc
xchg
lock
xchg
adc
rol
repz
cmp
jle
ret
lock
(bad)
adc
out
xor
cmp
xor
pop
push
mov
sbb
in
mov
stos
aas
pop
push
pop
sbb
xor
and
rcl
(bad)
cld
inc
addr16
ret
ds
test
data16
sbb
call
jb
out
dec
mov
in
dec
or
leave
xor
push
or
gs
dec
mov
popf
movs
jnp
mov
fwait
push
out
adc
pop
lahf
mov
xor
retf
cdq
icebp
in
sub
fs
jmp
adc
xor
mov
movs
mov
sub
and
pop
pop
mov
lods
(bad)
(bad)
ret
sub
test
into
pop
jnp
pusha
xor
mov
mov
xchg
shr
adc
jne
xchg
mov
cmp
lahf
inc
xchg
lea
nop
add
dec
cmc
and
popf
aam
push
xchg
fist
pusha
out
and
mov
in
add
or
loope
cmp
add
out
and
push
xchg
xor
daa
push
imul
arpl
xchg
cwde
lahf
add
dec
ficomp
cmps
cmps
outs
adc
(bad)
cwde
or
dec
sub
ins
test
sub
nop
pop
xor
dec
xor
daa
cmp
push
and
jns
mov
hlt
mov
or
movs
ins
adc
sahf
jb
ret
and
and
or
mov
cmp
in
push
pop
out
xchg
(bad)
stc
ret
ins
mov
cmp
pushf
jns
jae
shr
call
or
inc
jp
mov
gs
push
and
dec
std
inc
popf
repnz
lea
mov
push
aad
sub
(bad)
pusha
mov
xchg
stos
mov
sbb
mov
pop
in
jl
(bad)
ret
dec
mov
or
jg
add
pop
test
push
inc
div
(bad)
push
or
pop
mov
push
lahf
add
push
jp
rcl
and
pushf
or
pop
jp
js
xchg
stos
cmps
pushf
lds
dec
aam
or
mov
(bad)
adc
sbb
or
add
pushf
lods
neg
ss
loopne
nop
inc
aas
adc
fidiv
pop
je
inc
dec
pop
mov
add
cmp
jno
(bad)
(bad)
or
jp
bndldx
bound
cmc
mov
je
mov
test
inc
ds
loop
sbb
adc
xor
call
push
imul
push
test
and
leave
push
cmps
inc
dec
inc
mov
push
mov
dec
add
sbb
lods
ror
pop
call
adc
imul
in
out
mov
stos
out
(bad)
std
pop
sub
jmp
push
mov
in
popf
adc
aad
add
mov
call
fild
push
cmp
icebp
rcr
xchg
push
(bad)
test
jp
mov
inc
mov
daa
dec
fsub
call
not
or
push
(bad)
jmp
push
push
aas
je
imul
clc
or
xchg
(bad)
sti
mov
add
add
test
cld
adc
push
rol
push
adc
push
mov
jnp
mov
xor
int3
jmp
mov
fnstcw
je
cmp
push
int
pop
enter
sub
nop
cmp
aaa
sub
inc
cld
push
int
loop
xchg
mov
xchg
jbe
fs
clc
mov
hlt
adc
bsr
cmps
dec
iret
daa
call
jo
pop
adc
jns
fs
ss
ds
jae
aam
out
and
mov
mov
jne
je
lock
jnp
push
or
(bad)
icebp
inc
cmp
ret
pop
mov
stos
mov
sbb
sbb
pop
jge
and
jecxz
sub
outs
mov
pushf
xor
in
pop
mov
sbb
std
loop
and
jge
mov
mov
in
mul
or
dec
rcl
test
ret
es
dec
and
or
in
retf
xchg
aas
test
out
dec
jae
inc
test
enter
test
outs
call
cmp
pop
cli
push
mov
pop
std
push
jne
xchg
jecxz
mov
and
sbb
mov
test
push
cmp
push
mov
lea
adc
and
add
out
stos
cwde
or
pop
stos
shl
stos
outs
sbb
push
inc
add
loop
inc
call
out
ja
repz
rcr
adc
add
in
cs
sbb
cmp
cmp
shr
sub
pop
push
adc
dec
xchg
aam
adc
repz
adc
push
sbb
add
lods
or
mov
adc
mov
fild
mov
loop
mov
mov
jecxz
les
cs
push
loopne
add
in
mov
sbb
movs
sahf
sub
sbb
(bad)
jo
repz
xchg
dec
dec
mov
mov
fiadd
out
idiv
mov
leave
dec
popa
xor
das
add
repz
(bad)
rcr
inc
outs
mov
dec
xor
fs
xor
xlat
xchg
clc
mov
fmul
clc
jae
cli
retf
stos
cli
stos
pop
sbb
movs
pushf
mov
xor
fdiv
add
add
mov
xchg
sbb
and
(bad)
nop
test
rol
sub
mov
fcmovu
mov
loop
inc
cs
daa
xchg
mov
or
out
bound
add
mov
rcl
and
jl
mov
loop
push
xor
sbb
ins
jbe
inc
sbb
inc
rcl
loopne
dec
fldenv
fist
or
data16
retf
xor
loope
cmc
xor
ror
mov
lds
and
mov
xchg
dec
pop
mov
aas
pop
add
popf
add
fimul
popa
jp
out
in
cdq
sbb
popa
jmp
in
sub
add
cmp
add
int3
jae
cmp
inc
ds
mov
cmp
out
cmp
inc
adc
inc
cmp
les
cmp
mov
xchg
out
push
xchg
repnz
mov
jnp
xchg
test
sub
fcom
cdq
cmp
sub
(bad)
out
adc
mov
sar
ss
int
out
popf
into
ja
adc
shr
loop
(bad)
mov
(bad)
out
js
adc
inc
ins
je
jno
ds
cs
into
pop
imul
sbb
pop
(bad)
out
scas
rcr
mov
xor
neg
jnp
adc
mov
ins
lea
mov
ror
out
adc
imul
gs
and
fisubr
or
repz
cli
ret
cmp
rcl
leave
mov
cmp
es
shl
jbe
sbb
inc
lods
add
dec
call
data16
loope
pop
xchg
inc
push
in
jne
sbb
xor
and
and
popf
push
lods
aas
jmp
fs
or
adc
call
cmps
arpl
mov
push
cmp
cmp
and
shr
scas
dec
add
xchg
pop
mov
sbb
into
and
rcl
pop
inc
sub
fbld
cmp
pop
mov
cmps
(bad)
rcl
mov
std
std
in
push
sub
or
xchg
sub
mov
mov
push
cdq
and
(bad)
jb
cmc
fisub
sbb
jno
stc
or
inc
not
imul
daa
in
ret
rcl
pop
xor
push
jle
cmp
cmp
mov
out
cld
xor
dec
(bad)
mov
inc
mov
add
or
and
pop
mov
das
shl
xchg
jns
dec
sub
out
fadd
pushf
adc
jge
pusha
mov
mov
ds
test
es
or
aaa
dec
inc
pop
inc
cli
adc
outs
fcomp
push
and
inc
cmp
(bad)
cmps
add
sbb
jge
sub
(bad)
lds
outs
adc
(bad)
out
adc
imul
xor
mov
adc
mov
int3
xchg
xchg
cld
(bad)
pop
mov
adc
mov
xchg
rcl
rol
jno
inc
inc
fidivr
xchg
js
jecxz
and
out
and
or
jmp
dec
out
xor
jmp
sahf
mov
jb
fisttp
xchg
push
scas
push
rol
jb
push
mov
xchg
jl
mov
cmp
or
xchg
ss
shl
xchg
mov
outs
test
mov
jecxz
push
ficomp
sbb
inc
shl
dec
push
cmp
cdq
jae
outs
retf
and
retf
and
mov
mov
hlt
ss
addr16
stos
call
xchg
xor
scas
lds
inc
xchg
push
ret
mov
pop
hlt
sbb
popa
loope
je
jg
mov
cmps
mov
jp
imul
shl
lods
mov
jae
xchg
test
aaa
sub
ficomp
dec
cmp
outs
(bad)
movs
or
pop
dec
mov
dec
cmp
pop
sub
sahf
dec
pop
sbb
mov
add
inc
mov
cmp
imul
push
push
(bad)
lock
fsub
jle
cmps
stos
repz
or
out
jg
fsubr
fcom
(bad)
leave
dec
mul
aaa
sti
push
fstp
push
and
mov
je
out
sbb
movs
nop
fdiv
pushf
loop
dec
(bad)
cmps
(bad)
sar
add
xchg
imul
sar
ret
jo
int3
add
std
lods
mov
xlat
clc
mov
leave
xor
std
(bad)
pop
pop
push
cmp
adc
dec
xchg
call
adc
int
cwde
iret
adc
jle
imul
out
pop
sub
push
aam
xchg
movs
dec
cmp
add
sub
mov
push
fldcw
movs
in
stos
shl
cs
fisub
inc
outs
jo
xchg
mov
aad
daa
ss
dec
inc
mov
mov
mov
test
xchg
mov
sbb
ds
enter
(bad)
in
leave
sub
ss
addr16
fisub
xchg
std
into
repz
out
or
imul
mov
xor
mov
jb
or
lea
xchg
jecxz
and
or
or
mov
sub
inc
daa
cwde
sub
jns
clc
xchg
dec
xor
mov
pop
pop
in
test
mov
nop
mov
xchg
or
push
jb
inc
push
lods
sub
push
xchg
dec
imul
mov
aaa
in
add
fiadd
mov
jo
shl
fisubr
iret
ss
mov
ret
mov
frstor
add
rol
mov
int
test
push
and
mov
pop
xlat
jl
stos
push
mov
call
mov
stos
xchg
jl
lods
cld
cmp
faddp
shr
nop
jno
jle
call
add
dec
inc
add
xor
je
out
jl
outs
dec
push
in
rep
lahf
mov
pmaxub
and
stos
rol
mov
in
jp
mov
xchg
inc
fs
call
imul
push
sbb
movs
popf
daa
adc
sub
sub
imul
pop
ret
xchg
dec
xor
mov
inc
in
in
dec
imul
daa
sbb
jb
aaa
push
xor
ss
jae
or
push
add
les
jg
mov
mov
push
mov
add
cmps
gs
cmp
mov
sub
stos
dec
add
push
sub
cwde
aas
jecxz
mov
pop
push
fwait
cwde
mov
pop
das
in
cmp
int3
xchg
outs
je
cvtpi2ps
push
push
adc
je
jecxz
pop
cli
pop
fld
xchg
push
push
dec
scas
jecxz
inc
mov
ins
jbe
addr16
and
ins
sbb
test
in
stos
test
loopne
mov
ret
call
pop
cmp
(bad)
dec
add
xchg
out
sub
mov
or
add
retf
and
test
bound
in
cs
or
jp
jns
dec
sbb
push
in
ficom
or
sub
gs
addr16
mov
daa
jo
outs
loop
data16
push
mov
pop
mov
syscall
or
inc
sar
out
dec
movs
adc
cmp
dec
cmp
sub
mov
test
adc
(bad)
sbb
xor
or
xchg
push
pop
mov
cdq
cwde
jmp
das
sahf
lods
sub
dec
sub
jl
je
sub
pop
push
sti
mov
mov
enter
clc
inc
pop
dec
dec
dec
outs
sub
pop
(bad)
leave
jns
call
daa
fwait
push
or
fwait
push
sub
pop
cli
repz
xor
xor
mov
inc
jo
push
mov
pop
or
retf
mov
jb
and
aas
imul
fist
xor
clc
lock
sbb
shr
dec
jle
mov
das
dec
push
jecxz
pop
pop
add
jmp
sub
jge
mov
dec
and
dec
in
scas
xchg
add
out
push
bound
cmc
xchg
push
in
xor
inc
mov
mov
test
pop
out
(bad)
(bad)
mov
or
dec
pop
sbb
lds
cs
jecxz
ins
jg
sub
dec
jle
jo
jne
xor
push
cs
xchg
push
aam
xor
dec
sbb
mov
fwait
xor
mov
inc
cli
sub
or
fcmove
dec
jae
push
call
sub
xchg
xchg
and
iret
push
loope
add
mov
cs
cwde
add
xor
cmp
inc
mov
push
push
retf
sbb
js
ins
inc
(bad)
icebp
cmp
jae
test
pusha
and
iret
pop
mov
repnz
adc
stos
mov
mul
retf
sbb
dec
jae
lods
pop
and
xchg
adc
test
repnz
push
dec
std
fdivr
fwait
call
cmp
jge
xchg
or
sbb
(bad)
cmp
sub
out
in
addr16
shl
or
and
adc
retf
rcl
push
int3
clc
adc
ror
pop
fwait
enter
pop
retf
adc
loope
add
add
fdivr
addr16
rcr
lahf
pop
and
push
cmp
test
jle
and
cmp
xor
adc
cmp
jae
rol
inc
pop
mov
out
arpl
cmc
js
push
and
jae
sbb
int
ins
cmp
inc
pop
xor
adc
test
outs
cli
cmp
int3
idiv
pop
adc
mul
mov
in
mov
imul
xchg
mov
nop
hlt
out
dec
mov
bound
lds
nop
xor
mov
sub
cs
sub
(bad)
pop
mov
sbb
cmp
pop
cwde
fs
xchg
add
jae
cmp
scas
out
mov
enter
movs
sub
sahf
adc
(bad)
and
popa
sahf
outs
xor
bndstx
xchg
aam
sbb
inc
ror
and
neg
in
xchg
xchg
jecxz
push
nop
std
sbb
fldenv
ins
mov
outs
dec
loope
mov
ret
dec
push
add
fld
cwde
dec
ds
dec
sub
movs
inc
js
cmp
sahf
sti
adc
jge
or
imul
sbb
inc
jae
cmps
jmp
jae
pop
and
adc
inc
out
inc
inc
(bad)
sbb
add
sub
push
out
jle
xchg
stos
xor
xor
mov
push
jmp
in
xchg
cmp
jg
bound
xchg
dec
fucomip
outs
loop
fsubr
test
lds
jge
push
push
and
movs
je
sti
jmp
push
jae
mov
push
xchg
test
inc
pop
loop
inc
mov
sbb
mov
cmp
test
jb
dec
fst
cmp
mov
adc
jne
or
bound
shl
add
call
in
das
pop
inc
out
int3
adc
inc
push
lahf
or
das
cmp
adc
jle
or
xchg
mov
ds
jl
sar
pusha
ret
sbb
cwde
call
stos
icebp
jmp
scas
sti
jl
pop
inc
dec
sbb
mov
(bad)
jbe
inc
cmps
or
ss
jp
je
(bad)
or
jne
enter
ret
dec
push
pop
retf
mov
dec
ret
ins
pop
shr
fst
sahf
arpl
xchg
adc
jmp
mov
retf
sbb
das
sbb
call
inc
add
rol
daa
test
arpl
dec
ins
pop
les
mov
mov
mov
mov
push
repnz
retf
push
in
rcr
sti
dec
fisub
xchg
hlt
fimul
pop
cmp
in
push
lock
fcmovnb
or
pop
xchg
jne
mov
inc
cmp
daa
xlat
in
xlat
mov
xchg
fstp
ins
cld
inc
jmp
lods
enter
ret
fcomp
or
imul
sar
iret
xor
rol
pushf
xchg
int
fcomp
shl
pop
inc
in
jg
xchg
test
add
scas
enter
jbe
and
retf
mov
mov
dec
mov
add
adc
add
retf
inc
int
outs
sbb
(bad)
js
loop
mov
xor
imul
repz
iret
hlt
mov
sahf
inc
mov
inc
outs
sub
xchg
cdq
aam
fst
lods
ins
(bad)
and
pop
in
sar
in
fcom
(bad)
pusha
out
cli
imul
(bad)
aas
push
mov
stos
push
stos
sub
cmp
hlt
js
inc
arpl
aas
shl
xlat
sub
popa
int
jno
push
dec
add
cmp
gs
sub
mov
xchg
and
outs
dec
fcom
pop
sub
adc
xor
mov
ins
lods
(bad)
popf
int3
cdq
inc
xor
inc
retf
dec
mov
lock
xchg
cwde
jae
jmp
sub
rcr
jmp
rcl
pushf
jbe
pop
mov
das
lock
fsubr
inc
xchg
loopne
push
js
jge
push
cld
ins
adc
mov
js
cmps
lds
(bad)
int
fmul
xchg
cmps
popa
or
retf
or
out
mov
addr16
fbld
mov
arpl
test
cmps
inc
mov
push
dec
pop
sub
mov
mov
aaa
push
shr
xor
xor
jle
xchg
jb
lods
adc
repz
cvttps2pi
pop
xchg
or
cwde
and
add
or
mov
mov
pop
push
or
add
ins
cmps
movs
stos
mov
mov
xchg
jge
les
pop
inc
xor
scas
jns
call
lds
bnd
cmps
test
mov
and
pop
jmp
movs
add
jns
jbe
and
aam
sahf
pop
push
sub
inc
shl
fnstcw
out
adc
mov
fisttp
lods
push
jl
mov
xchg
mov
cdq
sbb
inc
xchg
xchg
out
fsubrp
mov
dec
cdq
push
sub
repnz
mov
pop
jl
push
(bad)
in
shl
mov
inc
aaa
jge
mov
les
cmps
cmp
(bad)
into
aas
mov
dec
data16
or
mov
inc
aas
stc
daa
gs
es
lea
xchg
mov
dec
loope
jbe
xchg
xchg
mov
into
(bad)
fnstcw
inc
push
jmp
les
aaa
imul
test
in
aad
scas
mov
and
sbb
arpl
mov
add
sub
mov
push
pop
stos
and
sub
es
arpl
mov
loop
mov
stos
iret
sub
jle
push
dec
push
scas
push
sbb
xor
and
jns
movs
jne
xchg
mul
fsubr
add
push
lock
fisubr
out
lea
dec
sbb
mov
iret
imul
out
nop
jbe
and
mov
cmp
mov
aaa
and
in
js
mov
ficom
stc
je
sahf
(bad)
outs
add
ins
sbb
xor
pushf
sub
push
push
or
add
ret
mov
loopne
cmp
xchg
mov
dec
jmp
aam
aaa
cmp
outs
mov
cs
scas
cwde
(bad)
mov
scas
(bad)
mov
xchg
pop
pop
adc
xchg
jnp
or
stos
out
inc
cmp
and
or
or
sbb
(bad)
ror
mov
jae
mov
pop
int3
jb
mov
js
les
jno
sbb
mov
jge
jg
imul
push
add
jmp
cmp
(bad)
das
and
fdiv
inc
sub
push
fcomp
or
mov
jae
cwde
jbe
popf
mov
loope
cdq
cmp
shr
dec
retf
out
xchg
ret
xchg
stc
into
inc
imul
fisttp
outs
(bad)
mov
push
push
lods
push
cmp
push
inc
mov
call
adc
mov
xor
jecxz
jnp
(bad)
outs
imul
dec
fwait
pop
sbb
xchg
xor
xchg
and
out
xchg
jp
div
shr
into
or
mov
out
arpl
loope
adc
bound
ror
es
outs
fdivr
mov
add
retf
cmps
inc
mov
dec
sub
out
inc
int3
xchg
cmp
daa
xchg
pusha
mov
lds
jecxz
adc
inc
jge
pop
mov
fstp
dec
sbb
retf
push
dec
test
add
ins
loopne
jmp
leave
or
gs
je
fidiv
(bad)
rcl
add
call
cmps
mov
lods
mov
cmp
pop
jae
add
adc
xchg
xchg
out
loop
sub
inc
mov
cmp
stos
inc
pusha
or
daa
ret
mov
rol
jl
lods
mul
fadd
jnp
push
aas
in
mov
xchg
(bad)
lds
das
adc
imul
std
dec
das
aas
ins
jo
dec
(bad)
les
fwait
sub
pop
movs
dec
cmps
and
les
add
fs
in
sti
pop
mov
push
mov
mov
pop
mov
cdq
test
adc
adc
xor
loopne
hlt
mov
xor
jp
shl
sti
mov
mov
popf
xchg
cmp
sub
adc
pushw
xor
pop
pop
jae
rol
in
imul
sbb
mov
aad
add
fnstcw
stos
push
imul
cwde
push
(bad)
sub
cdq
push
push
mov
mov
sub
stc
inc
sbb
add
and
retf
cwde
inc
outs
xor
imul
sub
pop
aad
pop
lahf
mov
sbb
(bad)
mov
and
cmp
clc
mov
push
or
jno
cwde
cmp
je
fisubr
adc
scas
fs
push
mov
mov
daa
xlat
mov
pop
(bad)
div
lahf
add
pop
jmp
and
cmp
cmp
pop
jge
aad
lods
out
ror
leave
mov
cmp
dec
das
std
lods
sbb
sub
call
fstp
xchg
enter
xchg
mul
cwde
dec
je
push
sahf
xor
addr16
(bad)
out
movs
clc
pop
mov
pop
cmp
sbb
dec
lea
pusha
arpl
les
stos
mov
repz
call
nop
outs
add
push
iret
fdiv
xchg
dec
fnstsw
add
sbb
xchg
ror
call
in
fidiv
bound
data16
enter
mov
jbe
push
fwait
and
pushf
sbb
push
ret
dec
sahf
mov
push
inc
adc
repz
cs
outs
sub
addr16
or
in
sub
daa
cmp
cmc
cmps
xor
out
add
add
pop
or
pop
jge
or
mov
push
test
sub
add
es
mov
mov
or
js
dec
shl
pop
imul
std
xchg
lahf
lods
(bad)
mov
ret
(bad)
ficomp
scas
xchg
addr16
outs
jp
movs
pop
sbb
sbb
ret
ss
(bad)
lahf
pop
std
xor
sub
pushf
ja
pop
sub
movs
(bad)
sbb
or
inc
(bad)
movs
inc
dec
jnp
in
cmp
jle
xor
xchg
stos
jge
in
rcr
mov
adc
mov
and
fidiv
pop
ss
inc
pop
icebp
xchg
setnp
jne
mov
movs
test
pop
lock
mov
fbld
mov
xchg
xor
xchg
mov
test
js
sub
pop
xlat
cmp
mov
fcomip
cmp
jne
(bad)
mul
repnz
and
mov
mov
mov
ss
mov
sar
scas
jo
mov
rcl
(bad)
sar
jae
mov
mov
ficom
and
and
jge
pop
arpl
pop
into
stos
fisttp
or
daa
jnp
fnstcw
and
cmp
aas
dec
sub
sbb
sbb
aam
dec
mov
imul
hlt
out
mov
jbe
clc
retf
fsubr
inc
sub
mov
int
or
jg
mov
pop
cdq
in
xchg
pusha
into
jg
push
lods
jle
pop
or
jg
aas
inc
xchg
es
popf
xor
rcr
jae
sbb
mov
lds
push
ins
inc
int
rcr
leave
lods
retf
popa
(bad)
out
bound
inc
cdq
xor
ficom
sub
rcl
imul
mov
shl
xor
loopne
xor
fidivr
push
and
sti
add
or
xchg
sti
jg
outs
test
fmul
je
jns
push
repz
fidivr
(bad)
inc
ret
push
xchg
imul
int3
mov
out
add
(bad)
loopne
mov
jae
popf
stos
mov
ret
and
iret
lea
dec
jnp
cdq
add
loope
add
cdq
out
and
jmp
leave
adc
mov
mov
mov
je
pushf
mov
and
sti
ja
or
cld
inc
jb
pop
aas
inc
pop
dec
cmps
ror
imul
or
in
stc
mov
call
stc
aaa
fbstp
sbb
dec
(bad)
mov
pop
jp
in
dec
movs
jl
pop
ss
cmp
add
inc
push
not
ja
sbb
js
add
add
bound
pushf
fst
push
cwde
push
xchg
lock
mov
and
and
push
cmp
mov
pop
sbb
leave
sbb
push
ror
sbb
jbe
repnz
inc
retf
imul
push
test
mov
sbb
pusha
xor
sub
mov
mov
out
push
ret
js
hlt
cmp
(bad)
mov
jne
or
adc
nop
add
aam
(bad)
mov
xor
push
repnz
cli
pop
fbld
int3
inc
dec
pop
fld
mov
aaa
dec
out
inc
cmp
icebp
adc
call
add
cmp
xlat
ror
jecxz
mov
jmp
xor
addr16
movups
pusha
lock
add
ret
mov
mov
jle
pop
sub
cmc
xor
lods
cmp
jp
xor
(bad)
ins
cdq
loopne
pop
cmp
jae
ret
or
fisubr
xchg
test
xchg
push
add
ficom
mov
in
jno
adc
pop
push
jbe
cmps
sahf
mov
ins
ja
je
repz
jnp
and
mov
and
jbe
cwde
cmp
inc
jl
into
lea
add
push
or
outs
sub
push
and
jmp
or
adc
pop
out
or
(bad)
jne
stc
shr
(bad)
xor
ds
lock
mov
les
fwait
pop
fsubr
push
test
and
es
lds
push
aaa
aaa
pop
adc
xchg
push
call
push
jne
imul
push
jne
sub
xor
popf
or
pop
inc
repnz
mul
jecxz
jle
or
xchg
(bad)
push
dec
cwde
mov
int3
or
je
pusha
sti
xchg
dec
iret
aad
dec
dec
ins
pop
stos
mov
(bad)
mov
pop
out
aad
(bad)
xchg
out
cmc
xchg
pusha
arpl
add
lea
add
xchg
sub
sti
(bad)
lds
xor
mov
mov
or
(bad)
jmp
mov
mov
sub
sub
jmp
and
xchg
repnz
or
xchg
cli
js
iret
(bad)
stos
jg
enter
loop
icebp
inc
fisttp
mov
loopne
xor
clc
in
pushf
sbb
and
xor
pop
div
stc
adc
test
lods
push
(bad)
mov
sbb
and
sbb
fstp
lock
and
hlt
sbb
sub
out
sti
pop
int3
cmp
gs
xchg
aam
popa
outs
rcr
pop
sbb
(bad)
jns
out
push
jmp
lds
outs
or
fs
daa
retf
aad
cmp
test
call
push
mov
repnz
cmp
leave
daa
(bad)
mov
sub
(bad)
push
mov
xor
(bad)
mov
cs
or
retf
xchg
jmp
jp
mov
aaa
iret
pop
or
mov
or
mov
sub
push
mov
sbb
(bad)
(bad)
cmp
lods
mov
sar
and
sar
inc
xor
(bad)
jb
in
jmp
rol
gs
outs
dec
sub
push
lea
xor
fnstsw
lods
out
jp
xchg
jo
or
ins
add
xor
add
sti
push
ret
outs
dec
cdq
inc
in
sub
cmp
push
pop
cs
jb
in
mov
cmp
jle
hlt
cmps
icebp
inc
pop
mov
mov
(bad)
test
ficomp
enter
or
pushf
ins
cli
jge
inc
out
fnstenv
pop
cmps
call
mov
add
mov
fnstenv
repnz
mov
add
dec
cwde
add
cdq
xor
and
test
std
mov
sbb
mov
ss
push
dec
js
popa
call
pop
inc
lea
lods
popa
sub
pop
outs
sub
jnp
adc
pop
mov
mov
add
icebp
inc
rol
aas
lods
mov
loopne
out
cmp
das
push
adc
adc
mov
scas
xlat
ret
adc
aas
xchg
push
adc
and
mov
fild
jg
leave
nop
jl
cmp
(bad)
shl
fimul
in
call
push
gs
jns
sub
add
mov
mov
fisub
pushf
mov
mov
dec
test
mov
in
mov
cmp
push
sahf
mov
outs
inc
inc
les
stc
cmp
fst
pop
push
out
rcl
loope
add
hlt
ret
outs
push
xor
add
ss
or
into
sub
inc
dec
mov
cs
cmp
shl
ret
jmp
out
xchg
das
data16
into
out
xchg
jns
dec
into
sahf
popf
mov
movs
aaa
repz
test
mov
pop
inc
sub
(bad)
dec
clc
fild
add
sub
rol
add
pop
or
push
cmp
sti
push
ss
mov
xor
cmp
sub
jae
test
add
push
ins
into
adc
mov
popf
mov
xlat
xor
sub
adc
out
cli
int3
or
mov
(bad)
xor
or
call
mov
call
repnz
pop
cmps
mov
add
mov
pminsw
fstp
mul
sub
inc
loopne
cmp
dec
mov
mov
or
data16
and
sub
xlat
pop
inc
mov
sti
pop
add
cdq
out
dec
adc
(bad)
loope
test
xchg
add
xchg
jns
pop
cmc
(bad)
mov
mov
movs
(bad)
call
xchg
push
sbb
imul
pop
aas
mov
sub
(bad)
lods
gs
movs
pop
scas
bound
not
mov
mov
mov
shr
pop
fmul
fisubr
mov
loopne
lahf
adc
push
mov
out
push
nop
fwait
aam
sbb
pop
adc
or
shl
into
bound
sbb
repz
in
mov
out
inc
out
xchg
popf
sub
mov
sub
pop
add
ins
pushf
dec
fucomip
cmp
(bad)
sub
sbb
xchg
mov
retf
gs
adc
ror
cdq
jl
push
mov
or
rsm
and
daa
mov
mov
pop
sbb
je
pop
sbb
lods
leave
outs
scas
sbb
push
mov
movs
add
lock
xchg
fist
cmp
inc
sahf
inc
test
aas
ins
xchg
test
push
aam
out
add
push
in
cs
xchg
pop
inc
popf
or
cmp
mov
cwde
into
mov
and
add
ficom
iret
stc
call
clc
outs
adc
add
push
dec
adc
jge
(bad)
shl
inc
retf
or
imul
dec
push
ror
or
dec
and
or
and
jb
addr16
jle
push
in
not
das
loopne
xchg
aas
mov
enter
pop
pusha
sub
cmp
test
xor
xchg
rcr
dec
stc
mov
dec
adc
cmp
dec
sub
lds
mov
retf
dec
or
dec
jbe
fwait
and
repnz
retf
fld
xor
pop
jmp
fst
arpl
jnp
mov
shl
xor
mov
adc
and
mov
(bad)
ss
push
mov
adc
jle
pop
mov
in
jp
pop
push
add
ins
dec
pop
aas
jb
cmp
xor
popa
loop
shl
movs
pop
jl
push
outs
ja
lock
stos
jno
test
push
adc
stos
out
dec
into
sub
jecxz
or
fsubr
cmp
push
scas
mov
sahf
mov
pop
out
test
ficom
aad
xchg
loope
jmp
(bad)
pop
jne
inc
not
mov
loopne
gs
xchg
jl
mov
daa
out
aaa
cmp
je
jecxz
cmp
test
mov
call
arpl
cmp
xchg
and
and
add
jle
cmp
push
daa
jg
addr16
aaa
stos
ja
jbe
pop
stos
addr16
inc
cmp
mov
mov
rol
inc
stc
fstp
loop
pop
sbb
faddp
imul
sar
and
addr16
call
pushf
lods
mov
pop
xlat
not
sub
mov
mov
mov
imul
push
mov
test
sub
sub
and
mov
cld
fisttp
outs
add
and
sub
pushf
adc
in
cmp
int3
in
push
pushf
adc
dec
adc
fdivp
test
pop
stos
sbb
out
int3
jmp
shl
adc
(bad)
in
mov
leave
bound
mov
leave
add
fst
fild
sbb
lods
gs
lahf
dec
add
and
addr16
cwde
(bad)
push
lods
sbb
jl
pop
dec
fwait
push
adc
ss
mov
cmp
mov
test
push
rcr
inc
(bad)
rcr
pop
xchg
mov
sub
mov
in
adc
or
mov
imul
sbb
cs
lock
fxch
xchg
rol
lods
inc
push
nop
int
std
push
cmp
test
lods
les
mov
push
sahf
jmp
fiadd
loopne
jp
std
adc
xchg
mov
lea
cmps
pop
push
xor
jb
or
gs
cs
sbb
xor
cmps
out
loope
je
cld
mov
outs
mov
xchg
adc
call
ja
jno
cmp
cmp
call
ins
jae
jecxz
aas
xlat
pop
lea
mov
sub
pop
mulps
adc
inc
dec
pop
ja
rcl
in
std
sahf
jno
je
repnz
cmp
jle
arpl
in
dec
cld
(bad)
and
sbb
mov
sar
mov
out
sbb
cmps
xchg
pop
mov
popa
push
sar
les
fdiv
bound
xchg
and
std
or
mul
leave
les
(bad)
fld
jo
jecxz
sahf
dec
push
and
sbb
in
adc
adc
mov
sbb
scas
loopne
fmul
sbb
inc
fldenv
dec
ins
pop
outs
sub
add
jo
jnp
adc
movs
ret
lock
mov
and
sub
(bad)
mov
xor
mov
xchg
shl
mov
or
stos
mov
push
cs
stos
cmp
add
or
adc
stos
or
mov
inc
or
mov
loop
cdq
push
out
repz
scas
div
cmp
mov
rol
sbb
mov
lea
retfw
arpl
push
sub
out
jl
adc
iret
pop
inc
mov
cwde
icebp
idiv
xchg
mov
dec
enter
cmc
add
in
lods
mov
mov
mov
xor
xchg
fdiv
and
in
jmp
out
cld
fisubr
sub
fcom
or
(bad)
sti
lea
(bad)
das
or
mul
xor
sbb
(bad)
daa
adc
bound
stos
shl
pop
test
cmp
sub
dec
rol
push
(bad)
stos
or
das
push
ret
std
inc
push
xor
inc
mov
jns
sbb
pop
sbb
pop
pop
stos
inc
fist
out
rcpps
test
mov
inc
or
ret
loop
sub
out
push
and
sar
xchg
dec
xor
xor
mul
iret
out
pusha
fs
mov
mov
pop
dec
mov
fadd
xchg
cmp
sti
add
jns
movs
mov
pop
jmp
pushf
or
jecxz
sti
ret
xor
loope
push
mov
test
ror
pop
mul
aad
pop
call
jne
cmp
loopne
loopne
cdq
sub
clc
into
lea
mov
ficom
(bad)
cmp
call
pop
lods
scas
not
xchg
and
sbb
push
adc
call
dec
test
or
sbb
iret
(bad)
sub
gs
and
mov
daa
sub
js
(bad)
jp
lods
or
xor
jne
cdq
out
pop
cmp
cmp
sbb
imul
adc
pop
push
xchg
sub
jae
pop
jmp
cdq
sahf
push
mov
jo
inc
adc
mov
mov
popa
sub
cmps
jo
mov
dec
adc
mov
lea
rcl
sub
pop
pop
imul
retf
dec
and
xchg
mov
xchg
pop
(bad)
retf
push
jp
das
mov
pop
and
jae
xchg
int3
lock
push
repz
int3
push
and
adc
and
mov
out
push
mov
pop
sub
(bad)
mov
push
cmp
stos
(bad)
sar
inc
xchg
mov
out
ret
xor
sbb
(bad)
fdiv
or
cwde
xor
jnp
ficomp
rcr
lods
fidiv
jno
jp
xor
repnz
mov
(bad)
cwde
enter
hlt
popf
hlt
fdiv
ds
inc
(bad)
out
aam
daa
fstp
dec
dec
ins
mov
pop
mov
sbb
pop
push
xor
xor
mov
mov
int
jg
push
jge
xor
inc
test
sub
push
push
adc
(bad)
es
jp
cdq
cld
lds
jge
fwait
icebp
xchg
jge
aam
cmp
xlat
fistp
xor
xchg
aas
xchg
pop
mov
cmp
mov
ror
int3
xchg
test
loope
iret
iret
pop
rol
jecxz
nop
xor
mov
inc
jle
sub
mov
inc
xchg
inc
inc
add
mov
push
push
mov
test
lds
clc
xlat
outs
dec
pusha
cwde
adc
inc
enter
lds
mov
or
cmc
in
xchg
xchg
test
jmp
push
and
jno
jmp
cmp
mov
lock
into
aaa
ds
mov
dec
push
sub
jge
inc
pop
adc
sub
push
or
xchg
addr16
mov
sbb
pop
mov
jo
jne
inc
aam
xlat
sub
cmp
add
ja
clc
shl
add
mov
mov
ror
and
pop
mov
cmps
jb
scas
dec
in
ins
es
int
add
jbe
inc
shl
or
pop
mov
retf
jge
retf
shr
mov
add
enter
xor
dec
jge
inc
adc
imul
or
mov
sar
(bad)
xchg
add
popf
mov
pop
and
push
stos
aas
pusha
jl
mov
enter
mov
mov
pop
or
enter
push
jae
mov
stos
das
ins
ins
cmp
stc
fnstsw
sbb
inc
dec
retf
sub
mov
fninit
pop
add
pop
je
dec
dec
(bad)
clc
cmps
scas
movs
and
test
out
imul
gs
aad
fmul
push
out
add
repz
sub
in
or
xor
clc
adc
xor
sub
mov
imul
xchg
fimul
aas
fisubr
mov
jmp
shr
lock
scas
stos
sbb
or
popa
and
push
jmp
sti
lahf
out
leave
fisttp
cdq
shl
xor
popa
cld
pop
mov
inc
cmp
retf
add
stos
push
pusha
sbb
jnp
and
lea
inc
xchg
jg
mov
imul
push
test
mov
dec
sar
inc
jne
test
xchg
scas
mov
mov
adc
pop
(bad)
cld
mov
mov
aaa
jmp
mov
push
ror
fwait
mov
jnp
ret
aam
ss
push
mov
fist
add
imul
cwde
xchg
add
(bad)
sti
push
add
sbb
xchg
pop
in
jne
lahf
jl
gs
adc
jecxz
push
push
jmp
add
out
xor
adc
call
test
sbb
adc
rcr
cld
xchg
fs
lds
fldcw
mov
adc
mov
push
int3
and
adc
mov
jne
sbb
retf
mov
out
jo
push
pop
dec
ret
sub
mov
xchg
leave
mov
pop
mov
xlat
sub
data16
pop
addr16
in
and
jge
cli
call
jle
adc
sub
idiv
or
mov
ficomp
xlat
add
popf
mov
mov
pop
imul
sub
retf
lea
sbb
mov
nop
fucomi
adc
add
lods
in
cmp
bound
adc
movs
mov
in
loopne
imul
stc
push
rcr
xchg
sahf
add
adc
and
and
loopne
(bad)
test
xchg
dec
inc
cdq
jae
test
shl
or
test
in
(bad)
mov
dec
fldcw
lds
movs
push
mov
inc
cld
push
xchg
xchg
in
adc
sub
inc
or
imul
and
add
cli
fs
les
or
dec
cmp
daa
sub
sbb
fwait
aam
ror
pop
jno
(bad)
outs
daa
ret
sti
aam
jle
pop
std
dec
xchg
adc
xor
adc
jle
fnsave
push
push
icebp
jp
mov
push
ds
xchg
cmp
in
or
rol
icebp
mov
fsub
adc
out
push
cmp
dec
inc
push
push
jno
mov
xor
or
das
push
sub
mov
mov
pop
pop
cmp
xrelease
in
iret
je
and
cmp
daa
adc
cld
out
sahf
mov
fstp
into
adc
lahf
and
mov
xor
ror
imul
mov
lods
jnp
sti
test
popf
int3
add
ss
jle
jnp
fwait
dec
mov
jp
call
ret
inc
stos
dec
loop
cld
mov
adc
xor
push
(bad)
xor
sbb
sbb
mov
pop
movs
fistp
add
cmp
jb
popa
push
cs
cmp
(bad)
fstp
or
div
mov
shl
dec
cmps
mov
inc
inc
and
retf
jo
scas
jno
test
or
je
jecxz
mov
daa
push
cmc
mov
rcr
cdq
xor
push
inc
(bad)
pop
sti
es
adc
scas
fcomp
push
pop
or
rcr
lahf
cdq
fcomip
mov
sahf
inc
jne
push
xchg
clc
push
addr16
cmp
jne
cli
jmp
cli
nop
jmp
add
jp
jecxz
sbb
xchg
ds
jae
sti
push
ins
or
lea
or
lods
pusha
pop
inc
and
cmp
rol
fcomp
jo
xchg
or
xor
sahf
mov
or
push
jae
mov
mov
sub
push
hlt
mov
jmp
pop
inc
mov
sub
add
mov
pop
add
mov
xor
sbb
and
mov
std
jnp
scas
push
stos
mov
fisttp
push
mov
or
cdq
xchg
sbb
movs
mov
test
movs
out
retf
jecxz
jmp
xor
pop
cmp
dec
pop
add
push
mov
stos
cli
push
(bad)
jns
sub
cmp
jge
or
fadd
pop
or
cli
push
es
jg
dec
or
mov
dec
mov
xor
xor
mov
mov
cld
setbe
div
cwde
je
sar
mov
jns
adc
push
push
jmp
mov
mov
mov
in
(bad)
mov
xchg
in
pop
mov
add
pop
into
loop
ds
pop
and
jb
pop
leave
mov
or
and
push
ins
call
lock
pop
mov
adc
push
mov
in
fcom
cmp
iret
cmp
sub
adc
pop
push
add
movs
dec
fstp
xchg
and
mov
bound
cdq
std
ss
xchg
stc
fstp
push
lahf
test
leave
in
icebp
int3
mov
mov
(bad)
movs
mov
mov
dec
xchg
push
cmp
mov
jno
xchg
and
arpl
push
pop
or
mov
jl
push
sub
mov
sbb
push
adc
pmuludq
mov
jnp
push
push
cdq
push
pop
adc
inc
mov
movs
movs
fisubr
gs
push
push
(bad)
cld
scas
inc
mov
mov
mov
shl
fwait
bound
cwde
pop
je
mov
popa
add
pop
repnz
cmps
imul
push
xchg
xchg
imul
mov
sbb
pop
or
aam
dec
out
iret
bound
out
pop
je
call
movs
sbb
push
test
xchg
sub
cmps
add
gs
mov
add
jp
pop
addr16
fdivr
sub
imul
lea
and
dec
scas
cmp
xchg
pop
mov
pop
dec
fadd
call
into
cmp
scas
movs
cs
jecxz
jnp
add
gs
mov
out
bound
dec
cmp
cmc
lahf
cmp
das
fistp
iret
loop
fsub
ins
sbb
add
in
outs
dec
mov
xchg
inc
mov
jmp
inc
sub
int3
aaa
mov
add
rcr
outs
push
cmps
(bad)
mov
cwde
jg
sbb
mov
fiadd
xor
test
test
leave
scas
jmp
movs
repnz
add
xchg
push
addr16
cmp
ins
add
outs
pusha
push
repnz
sub
mov
mov
mov
hlt
jae
pusha
xor
bound
in
mov
mov
pop
pop
ins
jmp
push
mov
or
ret
cmp
mov
cmps
inc
test
jbe
push
jmp
mov
ret
inc
or
sbb
xor
(bad)
imul
push
neg
fcomp
fnstenv
outs
xor
jbe
jmp
mov
mov
pop
mov
inc
enter
push
aas
cmp
jo
pop
adc
mov
xor
lods
and
aad
xor
push
dec
push
xor
jno
dec
pop
adc
adc
dec
ss
push
xchg
(bad)
push
pusha
pop
or
xor
jmp
mov
inc
mov
retf
aaa
scas
sub
xchg
cmps
or
movs
aam
stos
les
gs
cmp
sub
jge
push
leave
retf
nop
out
aas
cmps
dec
adc
or
xor
push
nop
out
data16
popa
pop
adc
rcr
mov
call
pop
push
fdiv
adc
push
in
cwde
bound
dec
sub
data16
inc
lods
ss
fist
loopne
ret
dec
mov
push
adc
push
cmp
or
xchg
jp
add
(bad)
fistp
das
stos
mov
dec
push
lahf
sbb
and
add
jp
in
test
pop
push
or
stc
push
push
cli
push
cli
imul
addr16
adc
jl
rcl
ins
xchg
je
hlt
inc
sub
test
mov
rol
addr16
jle
xchg
aaa
jp
inc
iret
das
loope
cmp
jge
and
outs
adc
mov
mov
or
xchg
or
(bad)
jae
fisubr
je
push
rcl
cld
pop
add
repnz
push
aas
(bad)
and
push
icebp
lahf
int3
sti
(bad)
ja
lds
mov
or
dec
lock
dec
inc
mov
imul
dec
add
add
inc
pop
xor
dec
sub
scas
pusha
adc
cmp
iret
xchg
jge
shr
pop
xchg
pop
fidiv
and
hlt
hlt
test
sbb
sub
ret
mov
fwait
inc
dec
xchg
pop
hlt
adc
(bad)
jbe
neg
push
xchg
cmp
inc
push
sub
rcl
cwde
fild
rol
xlat
mov
push
hlt
popa
xor
retf
push
inc
hlt
mov
sahf
jno
jge
sar
in
sbb
imul
mov
sub
mov
pop
add
clc
jns
dec
cmp
(bad)
ds
pop
retf
fadd
or
dec
popa
test
popf
lea
arpl
and
je
xor
mov
xchg
movs
xchg
add
mov
out
xchg
mul
cmp
int
push
adc
out
enter
rcl
xchg
stc
or
pop
mov
in
or
cmp
ins
ss
sbb
imul
push
cli
or
pusha
sub
or
fwait
mov
repz
fmul
arpl
popf
add
out
arpl
test
pop
sti
mov
adc
fst
adc
jbe
popf
inc
ror
fild
mov
cmp
lea
mul
daa
pop
pop
fisttp
jl
lds
push
sub
add
sbb
add
mov
imul
into
fisubr
lahf
mov
pop
or
adc
push
arpl
ror
xlat
pop
mov
mov
scas
sub
mov
in
daa
or
inc
cmps
add
call
neg
pop
dec
xor
xchg
lock
mov
dec
add
mov
test
mov
sub
ret
xor
into
(bad)
ja
xchg
sub
lock
lock
and
retf
jae
mov
call
imul
mov
clc
xchg
jne
sar
sub
mov
cli
repz
jl
mov
lods
pop
dec
mov
xlat
push
xlat
sub
movs
arpl
sub
jmp
dec
and
dec
add
mov
test
add
mov
out
sbb
nop
or
adc
mov
int3
repz
idiv
inc
xchg
cmp
jl
(bad)
fs
cdq
popf
push
retf
mov
and
push
arpl
stos
sub
push
adc
lock
das
sub
aam
(bad)
mov
pop
mov
xchg
mov
xor
sbb
push
or
adc
cmp
shl
sbb
aas
xor
jnp
imul
pop
cs
jo
cmp
outs
scas
sbb
push
inc
pop
rol
jno
xor
fdivr
adc
push
sub
and
xchg
aam
pop
jl
mov
cld
arpl
pop
or
into
adc
jb
jge
jecxz
push
inc
sar
push
scas
orps
cs
imul
movs
pop
sti
lods
pop
pop
fld
cmp
(bad)
push
out
inc
inc
and
out
mov
adc
vpsrlq
sbb
xor
xchg
jmp
sbb
jl
xor
mov
cmp
lea
inc
icebp
mov
add
test
dec
test
bound
mov
xchg
in
clc
xchg
mov
push
sbb
test
aam
movs
push
inc
jne
mov
inc
jnp
push
pop
int3
lahf
outs
push
inc
movs
add
dec
jmp
and
xchg
pop
stos
call
hlt
inc
or
shr
out
mov
int
(bad)
jle
sub
push
mov
in
sub
std
icebp
(bad)
hlt
mov
xchg
(bad)
push
arpl
add
sbb
test
enter
xchg
or
in
into
or
lds
mov
jno
sti
jmp
lock
add
les
bound
in
fimul
sti
fidivr
je
mov
jp
jle
mov
rcl
adc
mov
sbb
cmp
shl
test
fnsave
stos
ds
loop
(bad)
mov
dec
sub
and
fld
daa
cmp
mov
cmp
pop
das
mov
inc
sub
ds
pop
xor
inc
sbb
shl
sbb
jnp
jb
scas
mov
inc
pushf
jmp
test
adc
inc
stc
jbe
in
or
outs
xorps
fidiv
js
mov
(bad)
shl
or
ins
mov
and
jo
dec
iret
xchg
sbb
and
sub
dec
adc
xor
es
loop
add
dec
fisubr
jg
mov
mov
repz
xor
jg
push
pop
loope
push
je
cmp
or
xor
sahf
sbb
sub
fwait
jp
shl
fadd
jo
(bad)
jmp
fmul
lds
pop
or
aas
jae
inc
push
mov
retf
dec
xor
nop
retf
sub
xchg
mov
jae
sahf
rol
xchg
mov
inc
jp
addr16
fadd
shl
test
mov
stc
mov
(bad)
cmps
sti
mov
fstp
or
imul
add
(bad)
test
mov
xor
sbb
daa
cmps
add
sub
mov
xchg
call
outs
and
(bad)
(bad)
xor
fisttp
inc
popf
fwait
enter
cmp
sar
rcl
(bad)
arpl
jb
fmul
pop
imul
push
cmps
pop
(bad)
mov
cmp
(bad)
push
mov
rol
into
adc
cmp
pushf
inc
push
push
call
shl
and
xor
bound
mov
pop
add
nop
jo
stc
sub
fs
push
push
xor
mov
jno
data16
dec
jae
dec
aas
dec
int3
mov
int
neg
xchg
push
mov
jne
ficom
add
aaa
mov
cwde
lock
dec
mov
lahf
aam
push
cdq
cwde
sbb
clc
adc
movs
jnp
mov
cmp
mov
mov
dec
dec
xchg
retf
test
jae
imul
xchg
fisubr
std
cmp
add
out
cmps
sub
sti
cwde
call
adc
pop
call
in
mov
(bad)
les
gs
mov
retf
imul
int
adc
(bad)
int
add
xchg
scas
push
push
xchg
(bad)
cld
jns
shl
adc
mov
jbe
inc
out
aaa
aad
out
es
mov
je
out
xchg
jns
mov
je
mov
scas
(bad)
push
cwde
std
inc
sar
jecxz
fdivr
xchg
adc
or
int
in
mov
rol
xchg
mov
adc
mov
mov
cmps
loopne
inc
out
out
mov
push
fcom
cmp
and
pushf
push
inc
rcr
pop
cmps
ret
les
jne
lahf
pop
sbb
pop
inc
into
push
imul
push
adc
jmp
mov
push
popf
xor
enter
or
cld
dec
not
pop
and
or
mov
pop
mov
loop
xchg
fadd
pushf
test
cmps
sbb
(bad)
push
data16
dec
repnz
mov
mov
mov
pushf
mov
into
jo
jo
(bad)
or
outs
jecxz
mov
xchg
paddw
push
xor
test
dec
mov
sbb
mov
pop
pop
into
mov
movs
lods
retf
stos
dec
dec
xor
jg
into
mov
push
adc
sbb
jl
and
mov
fstp
imul
fs
pop
out
out
and
mov
adc
mov
pop
sbb
into
add
fimul
je
jmp
repnz
pop
rcr
lahf
sub
dec
(bad)
cmp
movs
pop
aad
aaa
retf
test
loope
mov
inc
popa
pop
cli
stos
add
pop
push
in
(bad)
shl
cld
sti
mov
jo
inc
(bad)
sbb
mov
clc
xor
gs
fisttp
mov
dec
jp
clc
retf
xor
jmp
sbb
pushf
mov
add
aas
ror
adc
inc
js
movs
outs
push
mov
scas
adc
ror
mov
inc
fs
xchg
cs
jmp
les
jle
into
sub
xchg
ins
lods
add
push
add
push
xchg
or
mov
xor
outs
les
mov
and
push
cmp
or
xchg
inc
jbe
fbstp
div
and
dec
xor
(bad)
lock
stos
aas
test
adc
ins
push
dec
cld
stc
pop
pop
test
or
stos
xor
jl
mov
mov
xchg
call
inc
cmc
fild
clc
mov
into
push
fisttp
stos
dec
sbb
and
imul
dec
data16
adc
cs
adc
int
xchg
sub
mov
rol
cmps
and
in
cmp
sub
cmp
cmp
ds
shr
cli
loopne
dec
mov
jmp
cwde
lods
xor
ins
dec
mov
push
sar
call
gs
inc
cmp
repz
jecxz
loopne
gs
sbb
and
xlat
mov
xor
jae
test
sbb
jmp
daa
sqrtps
xor
int
push
aaa
in
ret
mov
xlat
inc
inc
js
or
pop
in
sar
jno
push
cmp
sti
jmp
sbb
rcr
mov
pop
leave
faddp
lock
movs
daa
inc
ss
add
adc
jmp
push
inc
leave
pop
adc
mov
sti
sbb
dec
xor
pop
imul
adc
popf
mov
xor
dec
mov
sbb
daa
mov
in
(bad)
dec
jmp
in
add
dec
pop
scas
std
add
push
dec
aam
icebp
jmp
mov
jb
sub
xchg
ret
retf
(bad)
xchg
mov
loopne
fwait
push
daa
in
mov
mov
and
ror
loope
mov
pop
sub
cli
mov
scas
repnz
fst
(bad)
jo
cwde
aad
aad
adc
or
(bad)
sbb
idiv
sbb
jo
mov
dec
and
mov
dec
(bad)
or
add
ret
dec
pop
ret
stos
je
jno
pop
mov
sub
cdq
loopne
outs
js
adc
lds
scas
outs
pop
or
sub
cld
and
push
clc
stos
cmps
fimul
aas
aam
push
dec
jge
js
test
jg
(bad)
xor
sbb
fs
out
in
imul
jb
jp
stos
outs
lahf
jp
shr
xor
out
addr16
aad
cs
(bad)
jns
xor
fidiv
pop
xchg
pop
mov
nop
mov
aam
pop
ins
iret
push
sti
jmp
mov
jne
mov
int
cmp
das
adc
add
xlat
ret
jbe
inc
xchg
push
(bad)
fwait
push
ins
outs
int
pop
push
(bad)
loope
daa
xchg
jae
ret
cmp
faddp
adc
or
mov
mov
cld
push
es
dec
iret
mov
cmps
ja
jns
stos
xor
and
add
inc
mov
popf
cmp
lds
jae
mov
jmp
test
jmp
jae
sbb
inc
cmp
push
ins
test
cmp
dec
sbb
test
xchg
push
lods
repnz
es
in
retf
mov
jl
push
mov
fldenv
or
cmp
jge
retf
in
sub
mov
pop
sbb
mov
test
enter
or
clc
push
sbb
fistp
sub
daa
out
mov
rcr
dec
loop
sbb
sti
out
std
xchg
lahf
jge
jo
xor
push
aad
jmp
pusha
push
pop
inc
into
sub
add
xchg
pop
sub
int3
cmp
add
sbb
jg
leave
shl
cmps
adc
inc
js
bound
loope
ret
sbb
push
retf
push
aaa
shl
adc
ins
and
ins
lods
or
xor
enter
jns
cmp
or
sub
out
aas
daa
or
xchg
test
cmp
or
sbb
sbb
add
movs
hlt
jl
fidivr
(bad)
jo
sbb
cli
push
pop
test
add
mov
pop
es
sub
mov
and
ja
cmp
(bad)
xlat
test
shl
retf
in
sub
je
push
mov
cmp
or
or
mov
sti
imul
cmp
pop
stc
mov
sub
setb
jmp
add
xor
and
(bad)
pop
call
scas
dec
scas
mov
inc
in
xor
lock
js
retf
add
stc
jb
retf
repnz
mov
pop
fwait
retf
mov
mov
ror
add
sti
scas
jnp
loope
sbb
lea
and
mov
or
and
(bad)
mov
ror
xchg
xchg
repnz
cmp
xchg
jns
or
loop
push
and
and
push
dec
push
xchg
mov
arpl
call
leave
jmp
and
adc
xor
ins
xor
xor
ds
loop
les
fnstcw
pop
stos
and
enter
ds
(bad)
loopne
pop
mov
add
jle
daa
je
aam
xchg
add
ja
cmp
mov
pop
sbb
aaa
push
loope
dec
sbb
ja
dec
xchg
xor
xchg
mov
outs
adc
(bad)
aaa
daa
inc
push
aad
pop
adc
vxorps
test
fnstenv
xor
add
outs
fidivr
cmp
repz
push
dec
jno
pushf
iret
retf
push
in
jnp
sub
lods
xchg
out
inc
inc
add
dec
cmp
popa
loopne
repz
inc
mov
push
push
xchg
in
ret
push
push
mov
cmp
loope
imul
jbe
aad
inc
xor
movs
shl
or
das
adc
ja
ficom
add
stos
in
test
pop
repz
mov
sti
xor
sbb
sub
cmps
imul
aas
popf
jbe
add
ror
dec
cs
fwait
test
repz
dec
fcom
sbb
xchg
push
into
mov
add
xor
adc
add
ins
movs
and
xor
adc
sbb
mov
std
popa
(bad)
cdq
das
jecxz
(bad)
pop
test
mov
mov
sub
pop
adc
inc
sbb
mov
dec
pop
cmp
int3
fdecstp
leave
push
rol
movs
dec
addr16
js
fwait
cmp
lods
(bad)
jae
outs
sar
icebp
test
std
cmp
mov
jne
cmp
aaa
stos
mov
dec
jno
mov
sti
pusha
add
jno
in
add
push
movs
inc
pusha
scas
dec
mov
in
cmp
jo
pop
xor
test
mov
and
mov
mov
dec
outs
or
add
push
and
pushf
add
mov
sub
xor
popa
or
(bad)
cmc
cmc
js
push
dec
in
or
xchg
pop
mov
loopne
popf
std
jg
loopne
cmp
in
add
js
ror
or
inc
pop
jae
sub
dec
shl
add
loop
fldenv
xchg
cwde
mov
cmp
int3
adc
or
pop
(bad)
or
mov
mov
stc
popf
push
leave
enter
(bad)
cmp
aad
mov
arpl
jl
xchg
dec
sbb
xor
hlt
test
jmp
pusha
mov
adc
pop
fild
mov
xchg
test
xor
jo
mov
pop
fadd
adc
popa
shl
push
cmp
sbb
loop
outs
rol
xchg
cmc
mov
pop
lods
ret
(bad)
cmp
cs
mov
mov
aaa
or
xchg
test
pop
pop
test
push
in
cmp
push
mov
cld
loope
dec
cmp
shl
sub
(bad)
cmp
adc
mov
fnclex
dec
xchg
adc
cmp
jle
rcl
push
mov
sub
push
movs
xchg
aaa
adc
(bad)
fldz
test
xor
aad
mov
das
sbb
stos
xor
lods
adc
mov
adc
fwait
(bad)
jg
and
mov
pop
cmp
xchg
adc
imul
ins
pushf
push
push
lea
xor
dec
jge
and
or
retf
int
bswap
hlt
xor
or
ret
(bad)
rol
ins
xor
or
js
test
push
fld
push
xor
push
stos
xchg
not
cmp
sbb
movs
mul
out
imul
mov
jo
pop
mov
scas
jo
int
pop
test
or
mov
inc
sbb
(bad)
and
mov
enter
cmp
dec
add
(bad)
add
push
jbe
mov
inc
xchg
mov
fstp
jmp
ins
std
mov
movs
test
or
pop
in
adc
shl
push
push
and
addr16
stos
mov
jne
lock
xchg
jb
out
lods
add
(bad)
mov
loop
inc
push
imul
movs
ret
aad
loope
and
push
xchg
nop
imul
hlt
loope
cmc
dec
jmp
and
lahf
not
pop
mov
shr
pop
(bad)
dec
jp
clc
iret
sti
cmp
popa
loopne
sbb
xchg
jle
aas
sahf
add
fbstp
inc
pop
outs
adc
test
lahf
xchg
jae
pop
jge
das
or
sub
push
mov
ins
fisttp
dec
in
add
pop
aaa
sbb
lods
or
xchg
dec
je
adc
pop
lahf
lsl
mov
push
sub
sub
stos
clc
mov
mov
jae
ins
mov
push
mov
xchg
iret
xchg
mov
repnz
sbb
mov
push
je
pusha
mov
paddd
lods
fst
and
jno
ds
inc
jp
lea
movs
bound
or
les
pop
fwait
mov
movs
lods
shr
cmps
ret
repnz
or
xchg
ret
jmp
lahf
les
leave
sbb
push
or
test
xchg
loop
out
js
in
retf
es
test
jl
xor
pushf
mov
repnz
mov
pop
(bad)
and
mov
stos
mov
ss
cli
pop
in
pop
rol
xor
inc
retf
sub
push
cs
stos
pop
mov
and
cmp
daa
adc
mov
hlt
sti
xor
in
(bad)
adc
nop
xor
test
sti
cmp
or
mov
inc
sub
sub
add
and
jle
pop
in
stos
inc
cmp
fsubrp
jne
mov
int3
fs
adc
pop
push
arpl
adc
or
rol
fadd
mov
pop
cwde
sahf
rcl
pop
cmp
xor
xchg
sbb
loopne
xchg
xlat
pop
gs
mov
sub
xchg
enter
push
fsub
call
mov
lds
ss
pop
mov
mov
adc
fmul
mov
in
test
mov
inc
and
bound
cdq
pop
mov
add
inc
cmp
xchg
cmps
xor
outs
pop
adc
dec
cld
and
cmc
inc
dec
fisub
mov
dec
push
xor
jae
mov
imul
sub
xchg
je
into
adc
fld
dec
icebp
mul
or
adc
inc
in
sti
inc
addr16
stos
hlt
inc
aaa
lods
push
enter
call
push
mov
mov
loope
jns
(bad)
mov
ss
call
sbb
test
push
adc
fnsave
jno
outs
xor
pop
push
add
rcl
movaps
pop
fadd
sbb
cwde
pop
xchg
lods
inc
dec
unpckhps
ins
call
lods
pop
sbb
pop
pop
pop
aam
je
repnz
popf
push
cs
idiv
sub
jnp
adc
aaa
ja
push
jl
xchg
clc
ins
mov
cmp
cdq
xchg
call
int3
add
cmp
pop
(bad)
sub
and
xchg
push
aam
inc
ret
loope
xchg
aam
xchg
dec
lods
mov
adc
and
in
mov
stc
retf
jmp
and
jmp
(bad)
clc
mov
pop
add
sub
lds
mov
sbb
xchg
ret
pop
enter
retf
push
mov
call
sbb
icebp
into
bnd
mov
and
ret
outs
and
mov
pop
push
xchg
les
sbb
inc
das
cs
idiv
lea
int3
cmc
cwde
addr16
pushf
enter
inc
jg
and
cs
adc
imul
(bad)
in
cmp
jno
imul
xor
xchg
mov
sub
xchg
push
fisub
xchg
out
inc
jmp
(bad)
sub
push
mov
cmc
push
je
adc
xchg
sbb
xor
push
xor
mov
push
or
jle
adc
jmp
xchg
or
adc
sub
mov
ja
xlat
pop
xchg
dec
rcl
cld
mov
sbb
dec
sub
in
mov
enter
addr16
lea
shr
(bad)
sti
sti
(bad)
mov
jae
mov
cwde
push
fwait
aam
mov
jns
fcom
ins
jno
fsubr
or
jg
mov
add
xor
add
repz
js
stos
cmps
test
aaa
js
xchg
ja
lahf
stos
xor
pushf
outs
sbb
push
add
add
in
jecxz
cdq
out
push
hlt
std
ror
cmp
xor
sahf
out
add
mov
push
(bad)
hlt
int3
cmp
aam
or
jne
mov
jno
mov
jno
inc
(bad)
mov
mov
stos
loopne
(bad)
or
dec
adc
xor
pusha
lods
retf
pop
xchg
xchg
repnz
punpcklbw
dec
shl
scas
or
je
lods
adc
mov
cli
inc
xor
add
mov
addr16
retf
mov
ins
dec
or
hlt
inc
or
cmc
scas
bound
lahf
fld
call
(bad)
(bad)
or
movs
ret
movs
jmp
mul
pop
xor
dec
shl
push
aaa
mov
mov
ret
fld
push
bound
pop
xchg
rcl
stos
jo
das
xchg
clc
ins
jmp
es
cld
out
test
mov
xor
push
js
or
xor
es
xchg
cmps
inc
clc
stos
xor
leave
mov
cmp
mov
repz
jno
xchg
movs
xchg
cmp
push
push
cli
and
adc
lock
pop
jle
hlt
inc
adc
cmc
int
fdivr
adc
enter
fistp
adc
mov
pop
repnz
mov
jns
sbb
add
inc
push
les
cs
mov
push
scas
scas
push
je
retf
in
add
dec
sbb
inc
jp
pop
add
retf
retf
(bad)
ret
mov
cdq
push
test
popa
cmovge
or
ret
enter
lods
test
mov
ja
mov
and
xchg
xlat
in
sub
cmp
or
ins
leave
retf
mov
sbb
neg
jno
pop
xor
sbb
cmp
jg
rol
sub
xchg
xlat
mov
ret
test
out
xchg
mov
xor
push
lea
shr
and
inc
jp
fstp
imul
aam
mov
pop
pop
ja
push
sbb
dec
shr
mov
cld
pop
push
adc
or
stos
dec
mov
inc
jp
scas
retfw
jno
jne
adc
js
mov
and
test
shr
(bad)
pop
ret
push
jne
stos
mov
inc
mov
pop
xchg
add
cmp
(bad)
jo
retf
(bad)
mov
fisub
nop
cmp
imul
sbb
je
ror
mov
or
xor
shl
les
jmp
jp
into
push
repz
xchg
std
popf
shl
ja
push
mov
outs
mov
loopne
mov
jecxz
xor
loop
sbb
inc
cmp
sbb
mov
fcmovne
retf
clc
std
out
xor
mov
xor
call
and
out
push
sub
push
shl
inc
(bad)
or
fs
mov
std
hlt
cmp
hlt
es
and
into
push
xchg
or
nop
gs
adc
mov
je
push
out
in
sahf
mov
pop
cwde
push
and
test
(bad)
out
in
mov
cmp
call
jo
xchg
aad
sbb
and
rcl
scas
push
ror
mov
outs
push
test
call
or
in
aaa
ss
cmp
pop
enter
sbb
jo
inc
mov
shr
out
and
and
adc
jl
sbb
shr
repnz
fistp
sahf
push
dec
lods
xor
addr16
push
shr
mov
stc
and
xor
out
fst
loope
cmp
push
mov
cmps
mov
pop
and
sub
retf
cmc
rcl
cmp
jo
adc
sub
cdq
add
dec
jp
mov
and
xchg
stc
mov
into
out
dec
ds
shl
call
cdq
push
std
inc
cmp
sbb
popf
popf
xchg
jo
mov
mov
popa
push
jbe
xlat
pusha
xchg
ss
sbb
xor
iret
(bad)
cmp
dec
shl
sub
pop
push
jle
imul
push
and
dec
scas
in
mov
clc
jl
pusha
mov
repnz
push
stc
pop
repnz
minps
std
(bad)
and
enter
jnp
fadd
jge
aas
fld
inc
fwait
mov
gs
mov
and
into
call
dec
stc
pop
cmc
mov
ss
in
adc
jecxz
in
mov
jnp
jmp
data16
ficom
adc
mov
mov
xor
push
mov
iret
and
sbb
mov
ret
clc
cmc
sbb
pop
and
ja
ret
repnz
add
fcmovbe
mov
xor
(bad)
ins
jmp
mov
mov
or
xchg
movs
push
mov
or
inc
jp
add
mov
and
data16
xor
aaa
lods
fs
jl
jl
push
jp
int
(bad)
mov
jl
test
inc
rcl
mov
je
mov
ret
sub
inc
sub
xor
xchg
rol
ret
daa
cmp
jb
leave
test
sbb
and
lahf
xor
jle
pop
and
shl
xor
dec
imul
lods
jb
push
cmp
test
push
cmps
adc
fld
sub
sub
dec
out
jg
adc
push
jno
cli
sbb
ret
jmp
cdq
adc
mov
add
sahf
push
lock
call
fsub
mov
int3
inc
retf
mov
call
jmp
inc
stos
imul
stos
adc
jae
jge
call
lea
xor
push
jbe
pusha
or
ror
xor
(bad)
mov
fldenv
xchg
jle
dec
dec
imul
push
inc
mov
repz
add
adc
jno
cmp
outs
pop
mov
push
inc
mov
pop
sub
outs
retf
je
fild
loope
dec
xchg
in
jb
cli
mov
mov
movs
xchg
fidivr
xchg
mov
pop
pop
xchg
in
cmc
dec
lahf
or
add
xchg
test
and
lahf
cmp
sub
stos
call
lods
jle
sub
sbb
cmp
mov
int
dec
sar
ret
sti
cdq
hlt
jl
mov
mov
sbb
hlt
xchg
sub
fmulp
lods
sub
pop
outs
dec
enter
mov
mov
(bad)
or
mov
shr
sbb
out
rcr
pushf
jg
pushf
rol
ret
out
out
xchg
push
es
mov
adc
mov
repnz
lods
into
ins
mov
mov
xchg
mov
xchg
push
inc
popa
ja
sti
jb
add
int
ins
inc
mov
inc
inc
and
mov
mov
test
cs
nop
mov
fist
pop
clc
xlat
inc
(bad)
mov
xchg
mov
dec
rcl
arpl
add
mov
xor
mov
mov
pop
mov
mov
pop
push
add
test
dec
cdq
pop
or
mov
or
repnz
pop
es
xchg
outs
mov
xchg
(bad)
int
sub
sub
(bad)
into
les
jnp
jno
xchg
adc
dec
fst
cmp
cli
jae
push
add
push
push
js
scas
ret
cmp
out
or
sub
rcl
cmc
ja
sub
cld
mov
mov
inc
push
cs
dec
js
jmp
pop
pushf
dec
pop
xlat
iret
loopne
adc
ret
leave
sahf
pop
jle
aaa
fs
lods
cwde
icebp
icebp
sub
idiv
push
sub
in
retf
test
movs
outs
adc
sub
daa
nop
dec
rcr
push
xor
xor
cmp
pop
lea
mov
enter
mov
push
xchg
mov
repnz
or
ja
popa
push
add
adc
(bad)
in
iret
dec
js
enter
add
xor
fwait
mov
shr
icebp
scas
inc
repnz
inc
mov
(bad)
outs
jp
rcl
dec
out
cdq
xor
nop
es
pop
lods
add
fwait
outs
cmp
mov
push
cmp
push
inc
dec
mov
sub
cli
pusha
or
adc
pop
fist
xchg
popf
aaa
dec
fidivr
punpckhbw
pop
mov
fdivr
ror
jmp
and
out
mov
pop
int3
cmp
cli
jno
lock
mov
fldcw
lods
xchg
test
dec
xchg
(bad)
mov
jns
adc
fs
loop
push
gs
push
jno
imul
mov
push
dec
mov
repz
push
sti
pushf
mov
jg
cmps
bound
mov
test
cmp
cmps
jb
bound
jmp
sbb
ds
mov
sbb
pop
pop
aad
mov
aam
xchg
int3
pop
retf
ret
loope
pop
mov
jno
jns
cli
mov
pop
or
ss
pop
cmp
imul
iret
adc
mov
inc
cmp
sbb
inc
(bad)
push
repz
daa
movs
test
xor
jl
fiadd
jmp
shr
sbb
adc
in
and
pop
fstp
sub
jo
pop
ret
setne
jo
push
loope
ret
out
push
inc
shl
xchg
push
jbe
(bad)
aas
jmp
and
cmp
pop
mov
out
sahf
pop
ror
and
sar
jnp
cld
retf
mov
cmp
pop
add
adc
pop
js
dec
bound
mov
inc
add
(bad)
or
mov
test
dec
arpl
jl
fucom
cmp
outs
adc
inc
xor
mov
add
inc
mov
sahf
pop
jmp
mov
inc
push
retf
outs
mov
xchg
cmp
cdq
scas
xchg
xor
pop
pop
jl
out
dec
(bad)
xchg
gs
or
mov
movs
stc
push
dec
mov
or
inc
dec
test
shl
jmp
xchg
ror
ins
pop
mov
cmp
aam
jo
inc
lahf
out
into
fbstp
or
dec
jb
inc
test
pop
add
fimul
pop
xchg
shl
jl
hlt
pusha
imul
lods
mov
adc
and
or
xor
push
and
pop
gs
mov
jp
adc
xlat
lock
into
sbb
out
pop
sub
xchg
jl
xchg
movs
sub
lea
jmp
and
rcr
aas
mov
push
sub
fcom
sar
out
inc
(bad)
loope
sub
aaa
in
sub
outs
(bad)
in
ret
test
jae
call
mov
loope
ret
jo
inc
jne
cld
push
pop
imul
test
leave
ret
lds
movs
xchg
nop
jmp
lods
push
xchg
adc
push
jbe
mov
or
cwde
fs
sub
mov
popf
das
lock
pop
or
or
inc
cmp
inc
test
js
fisttp
ja
mov
call
mov
pop
shl
dec
or
adc
rol
cmp
mov
jb
sbb
aaa
and
adc
jl
and
push
mov
xchg
sub
sbb
outs
or
xchg
ret
ret
lods
jb
in
sub
cmp
add
add
lahf
sub
retf
js
adc
sbb
cmp
iret
out
xchg
dec
fdiv
lods
stc
mov
add
(bad)
fidivr
adc
mov
jg
fdivp
test
mov
cmp
adc
mov
mov
inc
xchg
test
stos
pop
or
test
je
xor
or
repz
adc
dec
sar
mov
int3
sti
xor
es
sub
call
or
mov
and
cmc
mov
mov
mov
mov
jns
js
jg
add
in
dec
fisttp
mov
cld
xor
push
jmp
sbb
dec
jg
dec
lods
cs
pop
movs
sub
jmp
add
dec
mov
fmul
pop
xchg
xor
rcl
loopne
fbld
cmp
outs
inc
cmp
aad
(bad)
or
xchg
sbb
fwait
fwait
pop
out
loopne
mov
mov
mov
jg
bound
add
ret
mov
out
scas
mov
mov
pop
dec
push
add
mov
repnz
cld
outs
fwait
int
mov
jge
or
xchg
xlat
gs
mov
pop
repz
sti
(bad)
pop
xchg
cmp
or
adc
data16
addr16
arpl
inc
sub
(bad)
jns
and
jle
and
fcom
ss
add
clc
mov
cmps
jmp
adc
inc
mov
clc
jecxz
jge
jmp
pop
call
mov
addr16
lds
in
or
pop
clc
mov
xor
cmp
repnz
test
(bad)
mov
jecxz
or
movs
pop
test
retf
(bad)
out
jno
mov
imul
rol
popa
mov
pop
repnz
jae
add
inc
inc
mov
mov
in
scas
nop
dec
or
and
dec
into
repz
sbb
iret
pop
jmp
outs
push
(bad)
(bad)
(bad)
or
int
movs
stc
xchg
fisubr
xchg
je
fwait
mov
adc
es
(bad)
cmp
pop
sbb
js
sub
sub
(bad)
repz
and
push
mov
test
fnstsw
sbb
fsubr
(bad)
jg
dec
add
xor
sbb
fsubr
popf
or
sub
lods
mov
sbb
mov
mov
cmp
gs
dec
sub
cmps
inc
(bad)
sti
sbb
lahf
ret
xor
mov
addr16
std
dec
loope
test
pop
cmp
pop
jbe
daa
fcom
inc
add
fist
data16
mov
push
popa
in
sahf
stc
cmovl
idiv
repnz
or
movs
mov
jmp
pushf
mov
enterw
mov
iret
in
jo
dec
fcomi
mov
into
sbb
cli
and
repnz
adc
lock
add
xchg
int3
lea
push
mov
pop
sbb
mov
outs
jno
ja
loopne
dec
call
pop
sub
pop
scas
nop
fild
mov
movs
das
mov
and
call
push
je
mov
xchg
xchg
jecxz
push
and
sub
in
pop
sub
cld
xor
nop
push
imul
pop
cs
push
sbb
mov
fsub
sub
mov
jmp
aad
jl
xor
outs
add
xor
call
cmps
cld
mov
ss
or
mov
movs
clc
mov
popa
int
fnsave
inc
push
cli
sbb
bound
xchg
mov
jmp
dec
xchg
or
adc
adc
pop
loop
sbb
sbb
(bad)
push
pop
pop
push
sbb
mov
inc
iret
inc
jp
cs
and
es
mov
xchg
cmps
not
popf
push
push
outs
cmps
sar
and
inc
(bad)
dec
enter
jbe
jmp
push
adc
dec
sar
xor
out
in
pushf
add
xchg
ss
jle
mov
stos
jns
mov
test
mov
cmp
in
or
mov
lods
les
fwait
test
test
jp
pop
(bad)
push
cdq
inc
mov
lock
das
mov
cld
out
loop
adc
enter
add
inc
sbb
outs
imul
cld
sub
frstor
stos
outs
adc
push
cwde
in
int3
xor
lods
es
or
mov
sar
sub
fcmovne
jecxz
test
into
das
jle
xor
lds
std
xor
mov
aas
popa
sbb
in
popa
mov
mov
push
mov
xor
pusha
xor
add
add
shl
repz
(bad)
xchg
cmp
sbb
jns
outs
xchg
xor
shl
fdiv
lods
jge
sub
leave
xchg
jnp
sub
stc
out
daa
arpl
(bad)
pop
mov
or
adc
adc
sub
adc
jb
or
movs
pop
mov
fnstenv
pop
in
int
sub
out
dec
or
das
in
mov
(bad)
call
mov
push
ret
jge
push
sbb
jbe
mov
push
lods
mov
sbb
lea
popa
movs
inc
jg
jl
pusha
js
loope
movs
imul
mov
and
loope
arpl
mov
add
addr16
xor
and
in
sub
lods
jmp
inc
xor
das
xchg
mov
mov
outs
xor
(bad)
mov
addr16
loope
out
(bad)
and
jmp
jl
in
mov
sub
or
sahf
inc
mov
pop
mov
and
and
out
movs
dec
or
jmp
push
mov
(bad)
int3
xor
pushf
(bad)
push
cwde
cmp
cmc
mov
jne
mov
in
test
xchg
stos
jae
stc
cmp
dec
cmp
loop
jae
dec
aam
(bad)
inc
jo
mov
jb
inc
mov
inc
adc
sub
mov
push
(bad)
mov
lea
push
(bad)
fidiv
add
jl
mov
fimul
inc
test
jb
cld
mov
mov
sbb
js
pop
push
xor
push
adc
push
inc
add
push
adc
mov
sbb
fucom
icebp
(bad)
mov
daa
and
sub
cmp
or
adc
lods
dec
push
jp
ds
arpl
sub
fwait
mov
repz
scas
jne
or
adc
out
vprotq
xchg
and
dec
wbinvd
mov
nop
jb
pop
cmps
int3
retf
imul
and
std
mov
inc
mov
gs
adc
or
ret
mov
fidiv
(bad)
cmp
sub
jno
stos
fs
push
out
pusha
stos
jae
push
mov
sub
cmp
add
mov
aaa
in
mov
das
or
arpl
retf
jmp
es
mov
mov
daa
mov
inc
push
add
je
mov
lahf
sub
mov
sti
dec
jbe
jl
inc
outs
popa
inc
add
mov
xlat
cwde
call
push
cdq
ss
mov
add
das
mov
xlat
lock
ficom
mov
rcl
jbe
lock
jl
lea
sub
pusha
cwde
xor
xchg
and
fbstp
stc
scas
shl
(bad)
cdq
dec
mov
jge
or
js
out
sub
ins
or
addr16
scas
xor
cmc
imul
mov
imul
les
ss
out
xchg
jne
xchg
mov
arpl
cld
xchg
jo
adc
or
sbb
mov
or
mov
mov
scas
inc
js
mov
aaa
ins
test
dec
ins
leave
sbb
dec
es
pop
pop
dec
or
xchg
and
jnp
repz
or
dec
shr
adc
mov
dec
push
pop
pop
xchg
popf
fild
ss
mov
loop
xchg
and
call
xor
xchg
retf
cmps
dec
lahf
movs
add
fs
(bad)
jae
jne
sbb
ret
out
mov
mov
inc
push
int
push
or
bound
pop
pcmpgtd
sub
and
ja
loopne
jp
into
ficom
sbb
ror
int3
mov
mov
cmc
in
and
fstp
cdq
and
lock
popf
out
mov
sub
pop
sbb
and
add
mov
jmp
and
pushf
sub
aas
(bad)
cmp
pushf
add
jmp
pop
cld
mov
imul
mov
out
lods
adc
mov
shr
pusha
mov
stc
outs
test
and
dec
test
retf
imul
xchg
add
adc
and
dec
jmp
mov
ror
fidivr
mov
inc
sti
jmp
xor
aas
push
les
and
push
dec
ret
dec
pop
jno
mov
or
jl
pop
cmp
dec
xor
data16
iret
loop
sub
in
(bad)
pusha
mov
out
(bad)
jmp
(bad)
cwde
jp
push
jno
push
out
jo
out
xchg
fmul
cmps
xor
mov
ins
sub
aaa
aad
push
int3
xor
fwait
cli
lods
bound
test
cwde
fsubr
fdivrp
add
ficomp
fild
push
pmaddwd
daa
fsub
aad
(bad)
cwde
pop
mov
pop
adc
xor
ret
jo
lahf
lea
cmc
push
cdq
je
adc
mov
pop
add
xlat
lods
(bad)
popa
xchg
repnz
call
push
xchg
retf
js
repnz
das
pop
dec
iret
pop
fs
mov
dec
adc
mov
pop
sub
push
dec
xchg
loopne
and
mov
rcl
popf
mov
movs
movs
push
out
sbb
sbb
adc
sub
out
inc
sbb
ss
div
bnd
jns
cmp
in
jecxz
mov
dec
mov
shl
mov
fisubr
std
xchg
pop
xlat
push
sub
imul
jl
adc
les
inc
pop
data16
ret
retf
dec
sbb
inc
out
sbb
push
lds
cmps
sub
stos
or
ret
shl
sub
push
bt
icebp
lahf
fdivr
or
aaa
mov
movs
add
cmp
test
mov
and
mov
pop
retf
shl
in
shr
popa
cmc
aas
std
rcr
ror
in
dec
xor
mov
jge
repnz
add
fwait
xor
jbe
adc
mov
movs
shr
sub
cli
sbb
cmp
mov
fcom
mov
mov
ins
and
sbb
or
enter
push
test
mov
mov
pushf
bound
push
mov
fld
les
aas
jno
sbb
cmp
es
and
dec
es
fmul
and
outs
cmc
int
dec
call
aaa
fimul
cmc
fiadd
cmp
cs
shr
sbb
pushf
fisubr
sti
xchg
ja
pop
loope
cmc
cmp
push
cmp
cmp
loop
movs
jns
(bad)
adc
mov
mov
cs
lahf
and
es
sub
and
cld
mov
clc
or
pusha
retf
and
cmc
jae
jg
stc
repnz
xchg
sahf
sub
xor
mov
arpl
xor
push
jno
push
js
les
adc
and
or
(bad)
iret
out
add
cld
dec
clc
test
aas
push
cmp
sbb
stos
sub
retf
push
(bad)
sub
jno
test
(bad)
xor
imul
aam
and
add
retf
push
outs
or
dec
mov
pop
out
mov
add
outs
aas
mov
and
in
xor
in
cmp
popa
xchg
dec
xchg
in
mov
inc
push
push
into
dec
xor
js
pop
pop
push
dec
jne
aas
test
push
xchg
mov
cmp
(bad)
push
mov
outs
sbb
sub
ret
sbb
sub
fldenv
mov
add
mov
inc
cmp
and
jecxz
mov
outs
adc
shr
out
pushf
mov
ds
dec
xchg
ret
mov
sbb
adc
jnp
xlat
scas
fadd
mov
rcl
and
test
push
sub
and
jg
adc
pop
and
enter
mov
mov
dec
add
ret
mov
xor
ret
or
sbb
or
fisub
sub
dec
adc
aad
lock
push
lock
(bad)
cmp
adc
xchg
and
cmps
in
sbb
cmp
add
xchg
mov
lods
push
xor
retf
cli
push
and
ins
push
rcl
push
js
adc
jae
adc
sbb
pop
dec
mov
mov
je
sbb
xor
ficom
sub
and
aad
movs
shr
bound
cli
adc
mov
mov
push
xchg
sbb
iret
jle
and
stc
fist
push
add
into
gs
pop
xor
jge
fidiv
in
sub
fst
movs
xchg
dec
test
(bad)
jmp
lahf
(bad)
add
mov
out
inc
jno
dec
or
mov
mov
fucomip
mov
jecxz
sbb
mov
ins
data16
stc
add
xchg
pusha
dec
jecxz
addr16
call
in
add
mov
pop
pop
div
mov
xor
aaa
mov
test
cmp
adc
sbb
dec
sbb
mov
imul
cmp
je
mov
cmps
leave
pushf
scas
aad
sbb
sub
inc
aam
into
int
(bad)
je
sahf
cmp
lock
bndstx
sbb
add
ss
add
pop
xchg
loope
push
call
rcr
lea
sbb
pop
lock
mov
cld
cmp
xor
pop
daa
mov
addr16
jecxz
aas
or
mov
push
or
pop
pop
cmp
addr16
(bad)
mov
fsub
adc
les
mov
(bad)
test
push
shl
xor
je
pop
repnz
fs
xchg
addr16
js
icebp
ss
mov
or
ds
arpl
cdq
shr
(bad)
inc
mov
dec
movs
mov
popa
aaa
jp
rcr
mov
mov
sub
mov
jge
xor
es
mov
mov
dec
retf
sbb
dec
rcl
rol
adc
cmp
inc
push
jo
lods
int3
gs
jae
std
xlat
mov
lahf
out
daa
jno
push
sbb
mov
inc
test
dec
adc
iret
pop
dec
mov
cs
das
xchg
aas
(bad)
jecxz
movs
fisubr
pop
xor
xchg
pop
adc
push
and
jmp
and
popf
cmp
(bad)
out
and
mov
xor
sti
cmp
push
mov
jno
(bad)
mov
or
dec
mov
jns
inc
shr
(bad)
push
retf
lahf
pop
inc
push
push
sub
mov
repnz
jae
cmp
cmp
neg
movs
sbb
inc
and
inc
shr
jmp
test
xor
push
out
xchg
jg
add
mov
or
js
xor
mov
mov
mov
in
arpl
add
mov
bound
aad
hlt
stc
in
in
xor
movs
aaa
add
repnz
je
mov
push
not
dec
ret
or
inc
xor
je
push
sub
mov
pop
and
sbb
push
aaa
inc
or
jecxz
mov
in
xchg
inc
test
sbb
imul
ja
dec
or
into
nop
jnp
fwait
cmps
lods
or
bound
pop
and
dec
ds
pop
push
les
pop
cmc
dec
vmwrite
sub
push
push
call
pushf
por
jo
push
cmp
sub
sub
mov
imul
retf
pop
add
jo
inc
push
push
jmp
mov
inc
icebp
fs
push
inc
seto
push
bound
adc
mov
ret
(bad)
jbe
daa
nop
mov
cmp
mov
dec
adc
fidivr
xchg
(bad)
call
in
push
mov
(bad)
out
mov
cmp
aam
cmp
ss
jae
mov
enter
pop
test
(bad)
ins
mov
sub
arpl
mov
repz
fwait
sar
push
in
push
das
out
repnz
jnp
jns
fidivr
loop
push
push
mov
cmp
mov
out
pop
leave
retf
je
pop
jnp
sub
pop
add
push
cmp
cs
jp
cmp
clc
ret
out
adc
adc
mov
mov
mov
mov
stc
test
fs
jo
inc
icebp
xor
jge
jae
dec
inc
mov
inc
js
leave
dec
jno
xchg
imul
stc
into
cmp
sub
call
mov
push
addr16
sahf
mov
mov
dec
add
adc
sbb
dec
mov
fcomp
fisttp
fldcw
test
popf
mov
jl
sub
mov
add
int
cwde
xchg
gs
or
loope
fst
jbe
pop
mov
test
sub
sahf
jns
nop
sahf
dec
movs
pop
aam
xor
jg
and
in
jnp
mov
pop
ret
retf
xchg
mov
jmp
shr
inc
pextrw
mov
pop
jns
adc
(bad)
fist
push
xchg
in
imul
ins
int
outs
repz
jmp
out
(bad)
loop
inc
push
shufps
sub
aas
pop
mov
leave
cmps
sub
out
cmc
mov
cli
dec
push
and
fs
mov
dec
cmc
fs
(bad)
sbb
rep
sti
mov
in
xlat
js
test
jecxz
adc
or
pop
xchg
retf
add
sbb
jb
mov
and
dec
or
pop
rcr
cs
loope
xchg
cmp
inc
daa
adc
pop
inc
jg
inc
mov
cli
add
mov
into
lods
(bad)
mov
outs
mov
sbb
rcl
xchg
mov
push
inc
fcom
push
imul
jl
jg
mov
std
push
push
or
mov
addr16
in
mov
or
cmc
jl
sub
xlat
push
repz
cmp
cmp
jnp
sub
push
or
add
or
in
and
shl
and
(bad)
inc
shr
push
das
es
sub
add
into
xor
js
inc
cmc
jae
xor
mov
and
fiadd
lock
pop
jno
jl
ficomp
fwait
pop
outs
(bad)
pop
in
lods
data16
sar
arpl
pusha
cmps
and
rol
loop
aad
repnz
movs
and
and
ins
popf
pushf
movs
mov
xor
mov
out
test
jns
and
fsubr
cld
daa
popa
loope
and
pop
in
in
lds
xor
ret
iret
fimul
(bad)
sub
pop
pop
stos
jecxz
or
daa
cld
sti
inc
jmp
fcom
(bad)
cmp
into
xchg
mov
imul
sub
push
mov
jo
sbb
pop
pop
mov
retf
cmp
(bad)
movs
(bad)
(bad)
xchg
sbb
outs
(bad)
mov
cmps
sbb
dec
pop
out
test
aad
outs
or
repz
(bad)
sti
ds
mov
lods
add
not
cmp
mov
outs
pop
addr16
pushf
aad
sbb
xchg
jb
add
pop
popf
loopne
lock
call
retf
inc
inc
mov
cmp
cmp
sbb
dec
shl
dec
mov
push
fidivr
hlt
add
pxor
fnstenv
add
mov
jl
imul
add
pop
ja
imul
mov
lock
jnp
mov
(bad)
ja
adc
jecxz
xchg
rcr
add
xchg
mov
retf
xchg
pop
aaa
mov
test
jnp
gs
xchg
imul
fidiv
jns
inc
cmc
dec
out
adc
sti
imul
mov
mov
out
into
retf
push
pop
nop
or
sub
jl
(bad)
fisubr
into
rol
idiv
cmps
out
sub
xchg
mov
ror
fsubr
ds
push
or
add
std
push
out
lds
jecxz
jb
js
sub
jle
sub
pusha
sub
push
pop
std
push
or
retf
mov
aaa
shr
mov
test
outs
pusha
in
mov
lock
(bad)
fnsave
add
and
xchg
sahf
mov
ror
mov
or
and
mov
repnz
stos
push
mov
xor
jae
ss
cdq
mov
mov
cld
mov
ret
push
lea
lea
inc
daa
adc
pop
xchg
inc
xor
dec
mov
and
sub
add
and
pop
xor
push
(bad)
ins
dec
pop
pop
stos
mov
es
mov
adc
ins
aam
ds
retf
mov
pusha
pop
aad
mov
ins
dec
mov
stc
or
mov
sub
mov
add
cmc
mov
xchg
les
xchg
cli
movs
pop
push
sub
jno
fld
(bad)
repnz
(bad)
jbe
xchg
pop
xchg
cmp
call
adc
pop
jmp
repz
xor
push
jb
lds
adc
ret
pop
(bad)
mov
push
jge
and
cmp
mov
mov
ds
retf
and
adc
sar
fisttp
jge
jns
jp
mov
cmp
jmp
adc
rol
movs
lods
adc
movs
lods
sub
int
mov
movs
popa
enter
repz
data16
adc
stos
cdq
mov
loop
cmp
arpl
jbe
out
je
hlt
lds
test
movs
in
jmp
je
outs
jb
jnp
iret
lds
ss
arpl
push
test
icebp
fsub
shl
(bad)
mov
or
ins
pop
xchg
and
daa
aaa
sbb
out
add
sbb
jp
xchg
shl
mov
nop
out
mov
hlt
mov
retf
mov
push
jle
mov
push
sub
bound
add
popa
(bad)
mov
add
call
inc
mov
jno
dec
sbb
dec
in
and
test
mov
jg
outs
sub
xor
and
jno
mov
aam
or
cwde
int
dec
xor
rcr
or
xor
cmps
je
cmp
push
fs
scas
add
fdiv
mov
cli
pavgb
paddusw
clc
ds
shr
call
js
addr16
je
add
xor
adc
xchg
jecxz
ja
adc
push
inc
call
imul
outs
lods
push
adc
jge
test
sbb
xchg
jle
retf
jg
cs
ja
jg
and
inc
pop
dec
(bad)
mov
jno
mov
sbb
fnstcw
xlat
adc
fnstsw
xor
(bad)
jmp
mov
xor
cmp
inc
je
cmp
out
xchg
xor
mov
adc
mov
clc
xor
stos
cmps
sbb
(bad)
std
jne
pop
jae
pop
in
cmp
int3
sub
test
inc
jmp
dec
mov
sub
pusha
mov
adc
jo
sub
jl
jns
mov
adc
push
pusha
add
dec
or
in
in
cmps
(bad)
push
ret
ret
in
push
jne
push
and
xchg
xchg
shr
push
test
jns
mov
sbb
sub
push
mov
dec
dec
mov
jmp
retf
mov
push
and
les
out
je
lds
and
jae
out
mov
mov
sub
inc
leave
ds
jmp
shl
and
sbb
(bad)
push
cli
movs
mov
pusha
inc
loopne
dec
ror
int3
das
test
mov
(bad)
xchg
adc
rcl
clc
hlt
dec
out
mov
lea
shl
xchg
repz
pop
push
imul
lea
pop
mov
mov
sub
xchg
(bad)
(bad)
movs
les
mov
pop
adc
call
fdivr
mov
(bad)
dec
and
and
xlat
inc
das
mov
scas
cmp
loopne
sub
ins
ja
pop
imul
aam
lods
push
jbe
lods
test
jmp
mov
aas
mov
or
or
or
aam
aaa
add
jne
mov
add
push
jae
jns
shl
data16
jb
push
dec
adc
mov
dec
and
repz
dec
mov
xchg
and
scas
lods
adc
sbb
popa
xchg
int3
lods
pop
cmc
xor
jne
loop
jl
and
shr
movs
stos
in
xor
cmp
fnstsw
pop
std
push
rcl
adc
cmps
pop
dec
jle
iret
fsubr
xchg
and
push
sub
stos
cwde
lods
clc
jns
icebp
xlat
add
(bad)
pause
sbb
jbe
jge
xor
push
shr
mov
out
lods
push
adc
add
je
scas
aas
dec
pop
or
pop
movs
cmp
popa
das
mov
test
or
mov
sbb
xchg
gs
inc
mov
mov
xor
jle
xor
xlat
loope
xor
cdq
bound
jmp
push
aad
and
out
ficomp
adc
outs
mov
dec
add
iret
push
mov
sub
daa
inc
or
inc
ret
daa
xchg
lods
add
fs
mov
xchg
push
adc
adc
mov
jmp
(bad)
(bad)
int
sbb
test
or
pop
add
inc
or
call
pop
mov
bound
mov
add
add
iret
in
xchg
dec
pusha
adc
into
test
jl
rol
mov
ins
or
pop
pop
adc
or
cli
imul
lds
ds
test
stos
cmps
inc
xchg
fld
or
adc
out
and
dec
push
mov
mov
cmps
and
push
jg
mov
mov
rol
mov
out
dec
cli
rep
test
cmp
inc
enter
fcomp
iret
adc
sub
jne
ins
mov
mov
mov
inc
cmp
fidiv
arpl
jp
xchg
mov
repz
mov
(bad)
sahf
or
test
(bad)
aas
mov
test
xor
addr16
pop
jbe
cmp
in
call
repnz
or
xor
push
das
mov
test
fwait
gs
add
push
xor
scas
push
add
push
mov
sar
movs
loopne
pop
outs
mov
fnstenv
mov
jo
fmul
cs
stos
adc
imul
xor
fst
inc
xchg
sbb
mov
sbb
lods
push
loopne
je
in
jne
adc
mov
inc
sar
pop
mov
popa
jl
sub
inc
scas
jbe
push
rcl
jl
test
fidiv
mov
inc
(bad)
sbb
mov
inc
mov
and
pop
xor
cmp
push
pop
cmps
into
and
in
aad
sbb
aaa
sbb
ret
cmp
sahf
adc
add
in
dec
stos
adc
lods
std
mov
iret
add
mov
enter
call
in
mov
mov
out
push
dec
out
dec
mov
pop
dec
outs
mov
ins
in
jmp
add
scas
sub
mov
out
cld
shl
daa
es
je
push
ins
or
jae
dec
cmc
mov
jbe
push
div
add
cmp
mov
les
jbe
jge
or
jns
adc
ss
nop
movs
xor
loope
add
add
dec
cli
sub
and
icebp
xchg
ret
mov
cmp
cmc
stos
mov
out
rcl
and
adc
fst
inc
clc
out
les
pop
bound
mov
mov
sub
ss
xor
fld
fadd
lods
ins
cld
lds
lahf
dec
cs
xor
ja
sbb
mov
mov
lds
jbe
cmp
prefetchw
clc
test
cmp
loopne
jmp
not
fisub
mov
stos
aad
adc
imul
arpl
test
scas
test
fist
dec
mov
int
mov
popf
cmc
adc
jo
ficomp
dec
je
mov
and
cmp
bound
dec
adc
test
cs
jo
into
sbb
les
mov
push
add
adc
jg
mov
mov
sbb
sbb
push
not
add
xchg
(bad)
sbb
xor
loop
mov
out
or
mov
pusha
push
mov
mov
dec
enter
dec
mov
fbstp
mov
lock
push
fmulp
js
lahf
ret
fwait
pop
call
sub
push
fisub
popa
movs
mov
sub
pop
jle
imul
in
and
jp
xor
lea
push
ja
repz
push
dec
sbb
divps
jmp
mov
cmp
push
loop
ins
jp
nop
hlt
cmc
icebp
sbb
je
and
xchg
std
add
pop
dec
or
inc
icebp
pusha
xchg
sbb
aad
sub
(bad)
cmp
stos
or
into
test
jae
and
push
jnp
call
or
jle
add
sub
(bad)
xchg
mov
jp
fwait
pop
sub
addr16
cs
stos
mov
stos
shl
inc
out
cmp
jno
mov
pop
or
shl
dec
in
push
push
jne
imul
adc
cmps
xor
adc
sub
adc
(bad)
cwde
pop
mov
mov
mov
mov
not
jle
jmp
stc
jg
jo
loop
inc
push
idiv
lods
lea
adc
push
jmp
cmp
gs
xlat
push
push
bound
out
pop
outs
aad
xor
push
pop
fmul
push
test
(bad)
mov
inc
cs
mov
jo
imul
or
or
fisttp
xor
int3
(bad)
cld
neg
div
(bad)
jl
aam
mov
les
daa
mov
and
sti
lods
jecxz
xchg
mov
and
stos
hlt
jp
mov
pusha
dec
dec
lahf
and
retf
jle
mov
add
mov
movs
sbb
push
sub
sar
jmp
or
mov
imul
sbb
imul
mov
sub
mov
push
inc
cmp
call
les
out
mov
inc
loope
mov
ret
les
arpl
pop
xchg
lahf
inc
jecxz
dec
das
inc
dec
mov
mov
jno
in
inc
xor
xchg
push
push
jbe
fild
mov
retf
outs
xlat
mov
stc
dec
cmp
push
cmp
aas
mov
or
int
in
lock
cmp
dec
ret
cmp
in
outs
xor
cmc
fwait
aas
cmp
aas
sub
fs
xor
jae
cs
mov
xchg
dec
hlt
jno
inc
dec
test
mov
sbb
enter
inc
sbb
jae
call
imul
fwait
cmc
mov
in
cmp
mov
pusha
dec
push
out
cmp
cmp
cli
cmp
adc
sub
mov
xchg
outs
xchg
push
push
mov
sbb
xlat
xlat
ins
jo
icebp
jge
push
js
out
in
popa
and
adc
outs
and
ss
loop
push
stc
pop
mov
in
push
(bad)
cld
repnz
js
xchg
leave
jae
sub
mov
push
neg
into
sbb
loopne
and
mov
xchg
and
clc
call
sar
adc
adc
data16
xchg
adc
rcl
repz
mov
xchg
add
add
sub
sub
push
pop
add
mov
imul
mov
add
adc
arpl
div
adc
(bad)
dec
mov
hlt
dec
jnp
cmp
adc
dec
inc
jb
mov
arpl
push
mov
pop
ss
sub
jecxz
push
shl
pop
stos
aad
ds
mov
cmc
stos
aam
or
lods
inc
mov
scas
push
out
sub
xor
inc
js
stos
into
sbb
or
mov
add
popf
dec
inc
push
retf
sbb
jnp
scas
adc
cs
test
out
xchg
lock
dec
mov
icebp
sub
mov
cmp
sub
and
(bad)
dec
xchg
add
inc
gs
push
fild
leave
stos
(bad)
mov
sub
(bad)
jmp
adc
mov
cmp
retf
push
push
loope
jg
adc
ror
adc
(bad)
call
sub
data16
jl
inc
sub
test
add
jmp
mov
je
push
jle
dec
scas
add
(bad)
cmc
int
adc
sbb
imul
ja
test
dec
leave
lock
push
aas
mov
leave
cmp
xor
push
xor
mov
ret
(bad)
repnz
jl
adc
sub
cli
mov
(bad)
xlat
sub
nop
xor
and
xor
xor
mov
dec
jns
test
in
cli
ret
test
or
int
add
rol
retf
jae
cmp
sub
mov
retf
pop
pop
mov
xchg
stos
mov
lea
or
cwde
ret
pop
cs
aaa
(bad)
shl
adc
ret
push
fsub
jle
in
mov
lock
jg
dec
adc
mov
and
mov
(bad)
ffree
pushf
mov
push
dec
fcom
sti
add
or
icebp
jle
lods
cwde
std
pop
mov
sti
sbb
iret
in
stc
rol
shl
push
push
imul
push
mov
push
fld
popa
cdq
imul
arpl
jbe
push
inc
(bad)
mov
xchg
pop
adc
loopne
fist
imul
xor
sub
aaa
fild
mov
adc
cwde
jmp
aas
cmps
sub
sti
mov
mov
nop
or
lods
pop
jp
pop
xor
call
xchg
jbe
movs
add
xchg
mov
xor
pop
mov
rcl
sbb
sub
fst
add
movs
cli
xor
test
dec
pop
out
lock
loope
inc
jl
loope
xchg
pop
mov
cmps
sbb
xor
pop
dec
add
mov
test
(bad)
fwait
(bad)
fdivr
lock
(bad)
sbb
(bad)
imul
push
push
dec
xchg
sbb
fadd
inc
jmp
xchg
or
mov
jne
fwait
inc
mov
xchg
or
mov
aad
jb
popf
push
mov
jb
pop
jns
sub
std
or
sub
dec
sub
fimul
xchg
add
addr16
iret
in
mov
in
call
inc
imul
pop
ja
inc
sbb
(bad)
adc
lock
shl
ficom
sub
cld
sti
cmp
dec
push
outs
mov
dec
cld
out
addr16
lods
ins
push
sbb
sub
lods
dec
leave
into
fisubr
fmul
xchg
ret
(bad)
cmp
clc
ja
call
mov
dec
cwde
pop
jp
rcl
(bad)
stos
mov
(bad)
jne
es
enter
cld
leave
adc
pop
mov
jb
or
jge
cs
jbe
mov
imul
or
inc
aam
(bad)
aad
dec
adc
pusha
inc
inc
jns
retf
xchg
xor
sub
mov
les
mov
aaa
pop
gs
dec
mov
movs
mov
stc
(bad)
cdq
rcr
lahf
xor
stos
jbe
test
push
jmp
ins
mov
mov
mov
cdq
xchg
sbb
call
cli
jle
fmul
cmc
sbb
xor
dec
and
aam
and
nop
(bad)
xor
test
fcmovbe
jb
or
dec
mov
or
or
aam
outs
pop
sub
aam
mov
cmp
mov
dec
sbb
test
add
jge
jmp
mov
mov
aaa
sub
nop
lds
stos
push
mov
lds
mov
push
xchg
pop
ins
mov
push
or
fimul
xchg
and
lods
mul
cmc
push
push
hlt
neg
(bad)
test
push
xchg
pop
mov
mov
dec
and
pop
fbstp
aas
sub
stc
loope
pop
aas
xor
dec
jno
inc
iret
xor
or
add
xor
pop
scas
sar
loopne
jo
in
mov
sub
pop
xor
stos
jp
into
xlat
fdiv
aas
cmps
or
jo
stos
cmp
add
retf
out
sub
jno
dec
test
mov
push
mov
mov
lahf
adc
xor
xor
cmp
dec
mov
(bad)
stos
inc
mov
repnz
scas
dec
outs
xchg
pop
jge
gs
imul
ficomp
sbb
mov
or
repz
ret
xchg
xchg
cmp
sub
inc
jl
je
mov
mov
push
add
add
jge
add
pop
das
pop
push
or
inc
dec
loopne
push
fwait
das
jmp
mov
mov
int3
push
(bad)
sbb
fidivr
test
cmp
jmp
push
aas
scas
mov
pushf
jp
inc
lahf
call
str
cwde
mov
pop
xor
mov
dec
out
jmp
mov
push
mov
idiv
jbe
mov
test
cmps
mov
out
call
cmps
sar
sti
inc
cli
and
add
rol
fs
pop
xchg
out
lods
fwait
(bad)
je
rcl
call
and
mov
mov
test
mov
and
pop
arpl
dec
hlt
(bad)
sbb
fsubr
pop
add
sbb
test
pop
ror
(bad)
mov
sub
ds
scas
jge
leave
cmp
inc
sub
int3
cmc
rcr
ds
call
test
jno
mov
cmp
inc
lock
pop
mov
ret
enter
push
rol
cwde
mov
sbb
clc
mov
sahf
iret
les
in
idiv
mov
aad
push
jmp
scas
xchg
adc
out
loop
inc
imul
jnp
in
sbb
adc
pop
push
xor
xor
xchg
mov
sub
and
int3
loopne
cmc
fwait
and
shl
popa
lahf
jo
mov
daa
test
push
xor
(bad)
xchg
out
scas
aas
pop
aad
test
stos
enter
dec
jmp
or
pop
call
mov
jne
or
(bad)
and
outs
jmp
xchg
mov
sbb
mov
push
mov
ffree
adc
cmps
(bad)
sub
cmc
xchg
sub
aad
pop
pop
pop
cmps
mov
sbb
imul
mov
out
sub
pop
scas
push
pop
out
stos
or
mov
enter
shl
std
or
out
in
out
dec
fs
push
jo
or
jae
xchg
imul
dec
std
std
push
scas
cwde
ss
loop
cmp
xchg
lods
popf
sbb
lods
mov
xor
and
cmp
cmp
data16
imul
pushf
inc
test
xchg
dec
add
lea
pop
addr16
das
stc
cmp
mov
xor
(bad)
cli
stc
adc
mov
inc
icebp
mov
mov
or
add
mov
ss
push
jg
nop
cld
add
xchg
sub
adc
dec
and
cli
repz
sub
inc
xchg
xchg
fild
shl
xor
fwait
aas
mov
arpl
enter
sahf
shr
and
adc
aas
xchg
int3
pop
inc
out
enter
dec
xor
mov
mov
je
and
push
outs
icebp
ja
push
arpl
xor
pop
outs
cld
mov
push
in
sub
fisttp
aas
loop
push
clc
enter
ja
js
xor
addr16
jmp
push
popa
xlat
pop
cmp
outs
dec
(bad)
mov
adc
xor
cmp
inc
mov
rcl
cmp
dec
dec
push
arpl
ins
jmp
xchg
push
sti
icebp
in
cdq
jns
daa
(bad)
pop
dec
add
pop
pushf
and
xchg
rcl
sub
movs
arpl
xor
(bad)
cli
lahf
in
xchg
push
mov
adc
xor
mov
sbb
jbe
push
cmp
pop
into
fist
xchg
add
ret
adc
xchg
mov
clc
xchg
nop
test
dec
cmps
jl
jecxz
dec
sub
sub
sub
lods
call
pop
into
xlat
mov
movs
outs
mov
lods
cmp
leave
inc
test
cdq
dec
mov
(bad)
pop
imul
js
or
retf
(bad)
adc
jb
lds
push
mov
mov
(bad)
mov
and
in
fiadd
cmp
fcom
adc
lods
ds
test
jl
push
dec
sbb
lds
cmp
test
add
aam
add
or
sub
sbb
mov
and
popf
adc
push
test
and
jae
sub
cwde
rol
or
adc
cmp
mov
mov
push
mov
jmp
(bad)
ss
mov
sub
adc
in
outs
cmc
icebp
and
ja
gs
shl
test
mov
pusha
repnz
in
cmp
xchg
mov
mov
xchg
jmp
push
pop
nop
(bad)
pop
mov
jle
mov
das
movs
loopne
mov
lea
pushf
mov
pop
movs
div
add
jge
es
iret
push
loopne
ins
cmp
pop
inc
push
mov
inc
ins
mov
in
pop
or
ds
mov
jmp
cmp
out
(bad)
xchg
inc
sub
popa
fst
lea
sbb
dec
mov
fbld
shr
daa
rol
popa
popf
stos
ret
pop
imul
push
test
sbb
or
es
push
sub
out
jge
pop
pop
mov
mov
int3
mov
inc
xchg
mov
pop
les
movs
popa
shr
jl
mov
in
push
lods
mov
mov
je
enter
cld
and
lods
fild
and
sahf
or
out
cli
popa
and
xchg
mov
jl
icebp
jmp
ja
daa
add
pop
jo
mov
mov
jo
mov
adc
cvtdq2ps
xchg
data16
jecxz
and
repnz
test
(bad)
cmc
cwde
popa
push
loop
ret
dec
xchg
enter
fldcw
mov
add
hlt
jp
push
jne
sbb
jge
aas
das
rcl
mov
fadd
scas
xchg
outs
in
lods
cmps
(bad)
stos
add
adc
and
mov
jno
dec
sub
adc
fcom
cdq
int
call
test
jmp
test
sbb
jbe
push
icebp
sbb
lea
fbstp
in
fsub
sbb
mov
adc
(bad)
scas
push
adc
movs
or
lds
xor
mov
jno
and
cmp
jno
xchg
ss
jmp
int3
and
loop
and
gs
or
mov
(bad)
sub
jp
stc
pop
dec
nop
push
mov
das
sub
loopne
mov
mov
or
push
push
adc
dec
xor
or
test
mov
(bad)
ins
jnp
cld
jecxz
mov
test
fistp
ds
loopne
push
or
jl
popa
stos
push
sbb
xchg
loop
les
mov
out
add
popa
add
rol
mov
xor
dec
rcl
push
je
dec
mov
fldcw
cmc
push
push
sbb
ja
dec
sub
mov
fmul
and
push
mov
and
retf
dec
les
or
sti
cmp
pop
adc
ficomp
sbb
mov
jle
xchg
cli
fld
jae
xor
mov
pop
push
fs
sbb
push
xchg
and
add
pop
pusha
xchg
shr
cmc
mov
mov
pop
xor
xor
adc
mov
fistp
(bad)
mov
int
outs
adc
cs
lds
sub
pop
arpl
or
cmp
nop
not
adc
or
xor
jmp
dec
loope
icebp
add
enter
jne
pop
aas
pushf
jmp
or
stos
loope
fisub
dec
adc
xchg
inc
pop
ret
fidivr
adc
push
xor
mov
mov
shr
aas
das
cs
sbb
pop
outs
mov
mov
mov
aam
les
inc
lahf
scas
xchg
mov
cmp
ins
fwait
out
mov
xchg
daa
mov
data16
jns
fbstp
push
mov
mov
je
mov
pop
sub
lock
adc
push
xchg
and
mov
jmp
cdq
popa
sbb
aam
xchg
push
(bad)
inc
lods
jge
pop
jecxz
adc
pop
out
dec
das
mov
shr
pop
pop
rcl
call
sbb
xor
retf
popf
mov
cmp
in
xchg
and
ds
cmp
sbb
xor
out
dec
sbb
jg
in
das
inc
xchg
push
test
add
cdq
cmp
sar
shl
repnz
pop
in
sbb
push
test
inc
xor
pop
jb
out
scas
sbb
xchg
add
sub
jge
and
(bad)
mov
jbe
mov
repnz
int3
jae
mov
xchg
pop
lea
or
(bad)
push
mov
xchg
js
sbb
stos
inc
jmp
(bad)
std
(bad)
jle
rcl
popf
xchg
out
xor
data16
fiadd
pop
pop
dec
fadd
xlat
stc
pop
or
add
movs
fisttp
mov
and
sub
sbb
mov
aad
loope
mov
fstp
mov
mov
dec
movs
dec
sub
mov
test
outs
xor
(bad)
fcom
scas
dec
push
addr16
jmp
(bad)
inc
cmp
inc
not
mul
(bad)
call
mov
or
out
cmp
mov
fiadd
gs
sbb
lahf
cmc
js
xchg
dec
call
addr16
jg
mov
sbb
push
pop
mov
fild
loop
nop
jne
repz
jbe
push
xor
rcl
out
mov
call
push
ss
push
mov
movs
scas
push
mov
fmul
loopne
and
sub
dec
fldz
stc
ss
xchg
add
dec
in
jl
xchg
dec
loop
pop
outs
(bad)
std
push
mov
movs
paddusb
jmp
test
neg
sbb
jg
repz
xchg
push
xor
loop
add
jg
xchg
jmp
jmp
lock
leave
mov
xor
mov
stc
in
cmc
push
aaa
scas
push
push
jmp
xor
(bad)
mov
das
jbe
sbb
jp
nop
call
pop
sbb
gs
xlat
pop
arpl
mov
xor
ret
jl
xor
sub
dec
push
ret
mov
ret
cmp
lods
ins
hlt
xchg
pop
jo
cmp
daa
aaa
pop
xchg
es
dec
push
mov
outs
or
inc
retf
(bad)
push
ret
adc
mul
add
scas
call
cmps
dec
pop
shl
ins
and
mov
lods
fidiv
xchg
ins
jb
fwait
jecxz
xchg
mov
mov
xor
inc
xchg
lods
enter
sahf
or
test
mov
popf
inc
cwde
add
aad
cmp
jg
xchg
add
(bad)
jp
or
scas
repnz
mov
add
shl
shr
add
xor
push
and
jno
mov
add
add
daa
shr
xchg
mov
sub
iret
std
pmaxsw
sub
call
retf
jp
movs
test
lods
mov
mov
push
jnp
dec
mov
add
mov
das
fnstenv
cli
xor
xchg
inc
cmp
push
aas
inc
fdivr
adc
and
mov
dec
mov
(bad)
gs
inc
(bad)
into
and
outs
sti
into
test
dec
xor
into
push
xor
adc
add
cmp
mov
or
rol
pop
loope
pop
jmp
cmps
add
fwait
mov
jno
sub
fiadd
pop
xor
mov
rcr
sbb
mov
and
sbb
(bad)
retf
mov
sti
mov
sub
mov
lahf
sub
(bad)
dec
inc
aaa
into
cmps
adc
push
dec
mov
cmc
cwde
and
sub
adc
int3
lds
mov
jns
loope
fsub
adc
cmp
mov
fcmovnbe
and
dec
mov
in
pusha
jnp
ss
cmp
(bad)
xchg
adc
in
ds
outs
fcmovu
xor
fwait
jecxz
cmc
xchg
add
xchg
sbb
jae
xor
jg
xlat
and
push
popa
jae
push
(bad)
xor
or
and
or
in
or
popf
repnz
fdivr
sbb
push
push
mov
xor
pop
cli
sbb
jnp
into
cmps
repz
xor
and
sub
int
aad
jmp
dec
scas
ss
stos
pusha
(bad)
and
out
pop
push
mov
scas
cmp
and
sub
(bad)
sar
jp
test
mov
cmp
sbb
mov
pop
in
pop
popf
aaa
mov
stos
add
loopne
jae
push
and
out
dec
cmps
bound
or
mov
mov
push
rcr
fisub
xor
popf
ret
adc
mov
ror
add
retf
and
das
adc
adc
or
sbb
mov
fstp
adc
jno
jnp
sbb
xlat
lods
jo
sub
cmc
imul
out
mov
imul
out
cmps
pop
cmp
inc
xor
xchg
mov
adc
mov
push
outs
cdq
inc
cmp
jmp
int
test
sub
mov
xor
xor
and
pop
or
pusha
pop
pop
cmp
nop
push
int3
int3
xchg
add
dec
test
push
jno
loop
adc
cmp
jle
xor
sti
outs
mov
or
frstor
pop
out
repz
mov
sub
mov
adc
ss
jb
inc
inc
mov
cmc
lds
push
gs
mov
add
jnp
push
rol
adc
cmp
jmp
pop
sbb
mov
push
and
ret
sbb
inc
jp
push
xor
pop
push
int3
and
je
retf
mov
and
fsub
or
lea
jbe
test
jle
add
sbb
dec
pop
push
ret
inc
sub
mov
dec
fwait
add
adc
jle
dec
push
jns
(bad)
jb
mov
or
les
cmc
int3
xchg
movs
adc
je
or
cmp
arpl
fsub
cmp
cmps
cmps
cmp
pop
cmps
jmp
jns
mov
pop
lea
add
fnstcw
pop
push
int
jnp
and
scas
jecxz
inc
adc
loopne
mov
pop
ffreep
movs
in
(bad)
mov
cmp
pop
dec
(bad)
mov
inc
das
xchg
call
and
dec
mov
idiv
add
(bad)
pop
and
add
mov
leave
aam
push
xchg
fcom
mov
and
adc
out
cmps
fwait
mov
lods
outs
popf
loope
adc
jmp
xor
ins
out
push
(bad)
push
mov
ins
mov
nop
lock
(bad)
out
sub
and
push
adc
(bad)
cmps
fnstcw
sub
cld
mov
int
popf
jmp
jl
pop
addr16
xchg
cmp
add
mov
cmp
xchg
retf
leave
and
push
std
push
sub
add
or
jo
stc
dec
or
dec
adc
push
not
sub
cmp
sub
add
xor
ins
iret
inc
xchg
pop
lahf
mov
ja
mov
inc
xchg
por
sub
int
leave
dec
retf
(bad)
(bad)
sbb
fcom
scas
mov
mov
xchg
(bad)
clc
pop
mov
and
lods
sub
pop
mov
sti
iret
out
xchg
dec
hlt
or
test
dec
arpl
sub
movs
les
mov
adc
ds
xchg
push
adc
ins
mov
or
cli
mov
xor
stos
in
xor
sub
xor
cmp
cwde
mov
push
sub
mov
aad
stos
dec
dec
(bad)
or
mov
std
xor
in
cmp
(bad)
xabort
ret
mul
loope
jmp
push
and
jo
pusha
popf
out
adc
ror
xchg
and
inc
xchg
xor
stos
pusha
xor
or
push
loopne
aas
stc
pop
out
rol
mov
call
add
stc
in
jbe
sub
jge
push
inc
hlt
imul
dec
mov
enter
mov
shl
push
mov
jns
inc
push
jb
stc
neg
fnstcw
int
shl
nop
(bad)
xor
mov
jne
pop
xchg
mov
lea
sub
push
ret
call
bound
fiadd
add
dec
xor
not
outs
adc
mov
sbb
aas
dec
fcom
(bad)
sub
or
fneni(8087
and
lods
pop
xchg
cmps
inc
jne
add
das
mov
nop
outs
lods
sub
clc
fcomp
push
dec
mov
jecxz
pop
stos
jnp
sub
inc
lahf
outs
addr16
mov
xor
mov
das
out
sub
test
(bad)
push
dec
add
and
jle
dec
rcl
mov
inc
es
ds
(bad)
(bad)
arpl
imul
or
add
push
pushf
or
push
(bad)
sub
mov
in
pop
sub
cmp
mov
aam
pusha
and
or
mov
imul
add
and
cli
retf
xchg
in
xor
rol
sub
retf
mov
cli
jb
mov
xchg
jb
pop
addr16
sar
inc
adc
lds
push
ins
or
pop
push
mov
rcl
xor
xchg
mov
(bad)
fsubr
movs
lds
pop
out
mov
adc
sbb
fistp
pop
(bad)
or
iret
in
fs
leave
lods
mov
scas
cli
mov
add
mov
(bad)
pop
sbb
dec
xchg
mov
into
mov
push
ret
adc
dec
add
mov
fsub
and
add
jmp
loopne
data16
stc
movs
popa
retf
sbb
add
mov
adc
dec
shl
repnz
rcr
mov
test
mov
inc
mul
shl
mov
mov
out
jp
push
inc
dec
shl
add
sub
test
(bad)
std
ja
sub
mov
pop
mov
sbb
dec
ds
mov
(bad)
mov
fld
fmul
xchg
push
mov
xor
xchg
fwait
rcr
popa
mov
pop
adc
sar
dec
pop
push
push
pusha
es
jns
add
mov
fdivr
or
jl
repnz
xchg
pusha
mov
stos
push
leave
inc
mov
das
ss
xor
stos
and
jle
jecxz
cmc
fcmovne
hlt
push
jbe
icebp
aas
mov
dec
pop
xor
adc
mov
lea
mov
in
les
rcl
mov
jg
push
sub
xchg
int3
pop
inc
pop
ds
test
mov
jp
in
jmp
xchg
mov
push
inc
mov
adc
rol
pop
sahf
mov
mov
shl
loope
ss
ja
adc
mov
pop
mov
clc
inc
push
outs
cmps
add
fimul
add
in
sar
call
jae
inc
cmps
push
sbb
xchg
sub
jmp
(bad)
retf
inc
sub
push
scas
push
cmp
repnz
(bad)
add
popa
adc
js
std
in
push
xor
pop
rcr
fnsave
xor
jo
fst
cmp
outs
xor
in
ins
mov
shr
outs
movs
xlat
iret
inc
mov
aas
xchg
punpcklwd
mov
sub
and
push
add
xor
mov
mov
pop
xchg
push
fidiv
arpl
test
sahf
xchg
pop
add
or
mov
in
pop
jb
jl
ins
in
pop
in
or
mov
or
push
adc
or
mov
and
mov
adc
fdivr
call
adc
pop
push
dec
lods
dec
shl
xor
inc
sbb
adc
or
xchg
in
call
std
push
push
pushf
jl
fwait
dec
inc
and
out
std
inc
adc
mov
adc
jb
inc
xchg
ins
mov
aad
shl
mov
adc
jmp
imul
les
xchg
mov
add
fstp
jns
fistp
shr
xchg
idiv
dec
outs
mov
inc
ss
xor
jnp
cmps
hlt
inc
mov
or
cmc
push
mov
pop
lods
lock
adc
shl
fld
dec
ss
stos
stos
popa
inc
sti
add
int
or
mov
sahf
xor
gs
dec
int
test
int3
pusha
mov
out
sbb
adc
jl
add
pop
mov
xor
fldenv
and
push
call
or
push
cld
xor
pop
pop
xlat
jp
ret
cld
jae
mov
mov
mov
or
loop
push
mov
or
mov
int3
jmp
xchg
fiadd
das
dec
outs
stos
pop
js
and
mov
mov
ds
jne
mov
sub
retf
sbb
sti
arpl
sti
lods
push
or
test
(bad)
nop
and
jbe
inc
sbb
xor
mov
push
sub
adc
shr
cmp
xor
std
bound
daa
cmc
mov
add
sbb
add
pop
ins
pop
aas
push
lods
(bad)
xor
mov
cli
fsubr
sahf
arpl
xchg
test
and
retf
lahf
jg
in
mov
mov
stc
in
into
fadd
or
add
ffree
push
imul
xchg
xchg
dec
fdiv
test
push
(bad)
sti
mov
pop
xchg
ja
xchg
in
mov
shr
mov
mov
adc
add
inc
popa
add
xchg
push
rcpps
std
pop
out
out
sub
jo
pop
pop
stc
cmp
sbb
or
dec
mov
inc
mov
ror
es
jecxz
scas
xchg
jnp
push
int
jecxz
out
scas
fidiv
sti
rcr
add
sbb
jb
inc
sbb
test
div
movs
mov
retf
call
jge
sub
ret
xor
pop
or
mov
mov
jmp
xchg
inc
mov
out
test
in
pop
push
loopne
in
mov
imul
add
clc
enter
cdq
or
jle
adc
gs
inc
inc
push
push
jbe
aaa
scas
xlat
sbb
xchg
push
and
fcmove
jle
adc
mov
jle
dec
test
retf
dec
cmp
inc
sbb
lds
fisttp
(bad)
lods
jmp
sti
into
or
rcr
repnz
aas
imul
mov
xchg
mov
mov
inc
fs
xlat
mov
neg
gs
mov
dec
mov
mov
sahf
sub
loopne
sub
fwait
std
mov
dec
(bad)
call
mov
xor
cmp
test
(bad)
aad
fimul
int3
sahf
sub
and
shl
pop
mov
xor
inc
pop
cdq
xor
mov
fistp
shl
lock
jo
ins
pop
inc
add
add
rol
and
inc
or
ss
jmp
pop
and
pop
imul
jl
ins
push
jmp
push
add
jbe
mov
fistp
pop
imul
leave
add
cmp
(bad)
push
call
enter
inc
ins
push
ffree
sub
bound
test
inc
int3
movs
pusha
out
and
jns
lock
movs
jmp
mov
popf
add
sub
out
fwait
scas
addr16
mov
or
xchg
test
xchg
adc
out
stos
pop
fidiv
dec
inc
mov
inc
stos
mov
call
mov
pop
adc
rcl
adc
inc
sbb
test
push
pushf
pop
jmp
popa
sbb
int
lock
daa
and
out
cmps
loope
pop
fwait
cli
das
aad
clc
mov
xchg
jmp
(bad)
test
push
sub
sbb
adc
or
(bad)
jge
sbb
mov
or
xor
aam
imul
jmp
sub
cdq
cmp
call
std
div
retf
xchg
pop
inc
test
push
dec
or
mov
mov
inc
jp
retf
mov
jne
add
call
mov
shl
cmc
and
pushf
push
cmp
add
daa
mov
pop
dec
pushf
mov
pushf
jae
push
fst
addr16
test
adc
xchg
leave
add
shl
ja
cld
inc
pop
fcom
adc
add
mov
dec
adc
daa
dec
mov
and
aad
mov
out
jo
mov
iret
cmp
(bad)
inc
loop
ds
das
addr16
push
cmc
fwait
xor
fwait
in
js
mov
clc
sar
retf
cmp
mov
(bad)
xor
mov
js
or
into
outs
jle
push
mov
gs
add
mov
pop
cld
pop
movs
mov
pop
dec
test
inc
jno
ins
(bad)
fsubr
shr
das
(bad)
in
xchg
out
lahf
inc
xlat
xchg
cmp
sbb
mov
xor
inc
cmp
xchg
or
jecxz
pop
jl
in
aas
xor
clc
sti
xor
push
dec
and
aam
imul
xchg
or
test
dec
mov
or
push
cmp
cmc
mov
xchg
and
jle
sbb
mov
shl
jp
xchg
add
test
push
pop
in
push
shr
xor
inc
or
dec
adc
clc
lds
addr16
adc
jno
lods
imul
mov
add
pop
stc
sbb
sub
mov
leave
int
xor
inc
aam
cmp
and
sahf
les
movs
or
sbb
push
push
jmp
pop
repnz
sbb
push
dec
cld
std
jb
dec
sub
in
cmps
sbb
mov
in
dec
cmp
std
ss
aas
mov
or
add
mov
clc
mov
xchg
mov
ins
adc
sbb
jns
daa
mov
mov
sti
(bad)
push
out
dec
scas
xor
icebp
mov
inc
leave
pop
fldcw
jmp
(bad)
rcl
cli
or
push
jp
dec
or
and
cld
rol
shl
retf
loop
add
xor
dec
pop
push
add
scas
leave
sbb
pop
pop
je
les
adc
lds
(bad)
aad
imul
jl
adc
push
jo
loopne
or
adc
lods
call
and
(bad)
out
shl
test
ja
jmp
dec
or
pusha
push
in
push
sub
pushf
test
dec
rcr
xchg
std
loopne
stos
or
fisub
jmp
es
inc
cmp
mov
lahf
dec
pop
std
(bad)
xor
arpl
fs
or
cs
pop
or
jno
mov
ins
into
dec
xchg
ret
and
rcr
cs
cmp
adc
movs
add
call
cmps
icebp
icebp
xchg
std
fist
in
pushf
into
scas
int
sbb
xor
sti
pop
xchg
sbb
popa
retf
lods
sub
es
sub
(bad)
dec
jno
loope
inc
clc
inc
and
inc
test
cmps
sbb
sub
lock
mov
pop
test
inc
(bad)
mov
movs
hlt
sub
mov
dec
dec
ins
mov
mov
and
mov
lods
xchg
mov
xor
stos
jne
inc
mov
(bad)
imul
out
push
shl
push
dec
mov
(bad)
mov
out
ins
jle
cmp
gs
test
add
ins
pop
xor
push
pop
sub
rcl
jnp
jecxz
mov
syscall
mov
pop
jo
test
jmp
push
rcl
es
sbb
mov
(bad)
mov
fucompp
and
inc
gs
pop
add
xor
(bad)
dec
ins
jne
xor
pop
adc
cmp
sbb
and
adc
jne
jge
inc
mov
inc
and
mov
loope
les
or
fbstp
push
lods
in
nop
push
idiv
push
nop
into
cmps
movs
cli
stos
sbb
and
cvtps2pi
xor
push
call
dec
popf
push
cmp
imul
sub
add
adc
add
push
jnp
movs
xchg
(bad)
(bad)
mov
pop
(bad)
and
xor
aam
jo
push
pop
mov
pop
and
mov
or
cmc
add
push
fld
fnsave
xor
shr
scas
movs
pusha
pop
in
pop
sahf
outs
push
sar
adc
cdq
fldenv
mov
or
ins
(bad)
jno
into
jmp
stc
and
pusha
pop
nop
xor
and
xchg
sbb
arpl
pop
dec
aaa
sbb
imul
shr
xchg
adc
inc
and
dec
and
pop
inc
inc
mov
xchg
call
sub
hlt
mov
loop
hlt
out
nop
daa
sbb
out
dec
lahf
cdq
les
je
ret
leave
jge
or
in
xchg
mov
mov
xchg
icebp
sahf
ja
and
push
push
cmp
jmp
dec
lahf
add
mov
adc
sahf
int3
loop
imul
mov
add
mov
sub
mov
dec
test
fnstenv
xor
leave
jmp
inc
shr
js
rcl
in
sub
adc
jl
mov
xchg
cld
pop
clc
adc
mov
push
jl
mov
add
push
aam
inc
(bad)
retf
mov
lock
sbb
test
mov
daa
xlat
adc
push
pop
cmp
sub
or
pop
mov
xchg
sbb
pop
xchg
pop
cmp
sub
pop
pop
adc
test
inc
push
(bad)
mov
add
mov
out
test
aas
and
adc
add
lds
aam
or
pop
in
retf
out
jmp
hlt
push
mov
push
lds
push
or
sub
js
jmp
test
aaa
fsubrp
lock
neg
cmp
out
into
addr16
ror
mov
mov
(bad)
mov
xchg
cmp
cdq
mov
pop
adc
imul
xor
test
inc
push
jle
cmp
sub
(bad)
push
adc
test
sar
xchg
and
pop
xor
adc
push
mov
test
lea
push
int3
mov
jnp
call
test
(bad)
adc
adc
adc
enter
mov
xchg
dec
aam
xchg
xor
pop
scas
fs
movs
retf
jle
cmp
push
xor
in
mov
stc
pop
test
dec
and
repnz
xor
cdq
inc
xor
ror
ret
mov
or
cdq
mov
test
push
movs
data16
ss
sub
mov
test
enter
pop
out
enter
and
popa
jns
add
dec
das
inc
sub
in
lahf
movaps
xlat
pusha
pop
call
pop
loop
daa
jno
or
sub
add
push
xchg
jbe
xor
pop
sbb
ss
dec
lods
jbe
adc
push
out
or
mov
or
retf
stc
cmp
push
lea
js
mov
adc
addr16
js
adc
ret
movs
(bad)
dec
sub
sti
test
aaa
js
sub
push
(bad)
mov
adc
jg
stos
cmc
jbe
fisttp
popf
mov
and
sbb
mov
fincstp
mov
or
fimul
mov
mov
lods
inc
(bad)
call
aad
xchg
out
mov
aam
lods
mov
adc
arpl
push
pop
sbb
inc
ins
and
enter
(bad)
jg
aaa
sub
pushf
push
mov
leave
movs
jbe
adc
pop
sahf
ficom
mov
nop
(bad)
add
out
repz
loopne
cmps
sbb
xor
cmps
xor
sub
inc
push
sub
dec
sub
ss
test
adc
clc
fsubr
fs
and
lock
pop
shl
cmp
jne
mov
retf
and
int
and
and
pop
es
popa
add
adc
ds
ret
sub
bound
imul
mov
jb
xor
inc
hlt
scas
popa
xchg
add
int
fcomi
jge
int
mov
mov
sbb
in
add
les
sub
jg
ins
test
mov
cmc
cli
in
and
jmp
ret
xor
xchg
or
mov
imul
test
jg
xchg
in
icebp
push
aam
mov
xchg
leave
test
xchg
adc
in
inc
push
xchg
cmps
arpl
dec
adc
fwait
test
ds
jge
or
pop
in
addr16
xchg
int3
push
out
fsub
push
mov
pop
mov
fwait
inc
(bad)
gs
mov
pushf
jecxz
jmp
sbb
out
push
jbe
fwait
(bad)
xor
adc
fst
mov
stc
es
shr
test
add
cmp
mov
ret
xchg
into
scas
ins
or
mov
lahf
femms
xchg
and
lods
(bad)
and
clc
and
add
dec
aaa
call
xchg
inc
jp
jno
jecxz
test
fsubr
sbb
add
ret
pop
xor
outs
pop
xor
adc
arpl
xor
ret
loope
loopne
pop
mov
int
xor
(bad)
xchg
shr
ins
xchg
jmp
fimul
and
cld
or
into
or
jne
in
xor
cmc
(bad)
pushf
adc
jb
jl
retf
fs
add
fistp
inc
xor
adc
or
and
scas
jecxz
(bad)
ss
stc
lahf
call
jae
dec
movs
xchg
jno
ds
ror
and
xlat
out
rol
pop
mov
(bad)
sub
or
jle
ins
fcom
in
mov
mov
out
add
xor
xchg
fcom
cli
fs
push
mov
cmps
or
hlt
retf
jnp
std
loopne
out
or
cwde
mov
aas
repz
inc
aaa
add
loop
call
dec
mov
jne
pop
mov
sar
lea
rol
sbb
mov
inc
pop
(bad)
arpl
push
scas
push
aam
scas
mov
mov
stc
xor
ror
pop
or
in
push
sbb
push
into
mov
sbb
aam
push
cmp
or
(bad)
retf
frstor
and
pop
adc
(bad)
adc
xchg
rcr
jbe
jns
cmp
cmps
test
enter
nop
scas
adc
stos
(bad)
or
daa
lock
and
addr16
(bad)
in
imul
pop
jp
add
cmp
sar
mov
enter
cmp
shl
xor
mov
icebp
cmps
std
dec
mov
(bad)
out
xchg
cmp
fmul
adc
out
inc
cmp
es
mov
loopne
inc
fwait
mov
mov
into
xlat
test
ds
sbb
cmp
or
enter
adc
ret
push
push
es
xchg
push
(bad)
out
mov
sub
lahf
mov
pushf
aad
scas
add
in
and
jl
icebp
mov
adc
sbb
mov
and
fadd
arpl
stos
and
sub
mov
cli
ds
xchg
ret
add
mov
inc
jle
mov
fisttp
pop
jne
adc
inc
cmps
lahf
loope
inc
pop
int3
dec
and
ret
dec
or
pop
sahf
jp
ret
jb
push
xchg
pop
into
xchg
pushf
pop
jb
mov
cmp
inc
xchg
xchg
jecxz
repnz
cmp
inc
movs
push
into
(bad)
jae
ja
mov
push
fcom
mov
add
xor
das
leave
lds
sbb
mov
inc
ins
add
popa
push
mov
fcom
rol
jp
call
xor
dec
outs
sbb
push
aad
scas
lahf
(bad)
push
nop
(bad)
push
pop
pusha
cmc
lods
repnz
mov
and
shr
mov
adc
inc
stos
enter
mov
jmp
mov
xor
xchg
adc
mov
in
or
push
xchg
dec
inc
dec
jmp
(bad)
mov
ret
sub
push
int3
sub
mov
ins
arpl
hlt
lahf
outs
push
xchg
jge
mov
lea
mov
dec
cdq
or
dec
jno
adc
dec
sar
lahf
in
dec
sbb
stc
ficom
and
stos
movs
psubusw
loope
sub
arpl
test
adc
int
cdq
test
xor
imul
or
(bad)
(bad)
dec
cmp
push
xor
pop
push
sub
xor
pusha
xchg
ds
sbb
retf
jge
xor
mov
sbb
sub
shl
mov
or
iret
lods
push
push
(bad)
(bad)
xchg
sub
pop
ja
mov
mov
outs
shr
jae
xor
int3
dec
xor
push
clc
test
inc
cmp
dec
jg
xor
jns
push
dec
push
or
sahf
jbe
mov
and
imul
test
lahf
int
add
inc
les
mov
ret
and
xchg
mov
sub
mov
mov
mov
inc
sar
push
das
retf
or
fs
mov
push
cdq
ja
mov
lahf
loope
mov
mov
xor
xchg
xchg
daa
sub
push
pop
cwde
test
mov
or
push
fwait
in
(bad)
xor
fldcw
lock
push
xchg
ins
sbb
add
xor
inc
push
dec
das
jne
out
add
inc
add
or
mov
add
dec
call
jmp
push
loopne
xchg
xchg
idiv
lock
mov
popa
xchg
(bad)
lock
(bad)
sbb
inc
neg
sbb
mov
mov
xchg
lods
fsub
shl
dec
inc
mov
stos
and
pop
jmp
pop
out
pushf
je
(bad)
fs
shr
xchg
mov
push
into
gs
sar
popf
inc
cmp
stc
bound
xlat
scas
xchg
pop
pop
mov
aam
xchg
rol
enter
jb
cs
and
loope
mov
nop
pop
repnz
and
call
push
out
retf
(bad)
ins
cmc
push
jo
xchg
iret
out
push
add
rcr
push
mov
or
test
xor
imul
mov
fwait
ja
mov
dec
into
cmp
pop
aad
leave
scas
pop
pop
mov
mov
scas
aad
(bad)
sub
fbstp
dec
(bad)
mov
shl
ret
jae
mov
mov
xchg
or
sbb
xchg
popf
call
cmp
and
retf
and
clc
ud0
dec
inc
jmp
inc
sahf
adc
scas
push
jmp
jno
mov
inc
sbb
sbb
sub
fsubr
cdq
pop
jmp
in
sbb
popf
cmp
and
inc
or
shl
xor
mul
cld
pop
mov
xor
jl
mov
mov
or
mov
mov
jecxz
cmp
cs
popa
cmp
ret
jae
cmp
retf
fstp
add
mov
bound
push
repz
movs
shr
fmul
fbld
lods
add
push
test
push
test
ins
cmp
mov
sbb
mov
retf
jns
test
and
mov
enter
fnstenv
rcr
jno
ret
std
dec
adc
int
std
out
fsub
mov
push
(bad)
jle
adc
ss
pop
mov
mov
sub
in
cwde
adc
mov
pop
fwait
adc
scas
cmp
pop
clc
stos
imul
lods
fwait
enter
jmp
mov
in
iret
sbb
inc
cmp
cs
aaa
les
or
ficomp
mov
adc
repz
jmp
fcom
aaa
or
inc
cmp
stc
ficomp
gs
mov
mov
les
pop
xor
adc
test
mov
jbe
stc
mov
xor
test
add
mov
add
push
dec
jbe
or
loopne
(bad)
fs
loope
mov
mov
out
js
paddsb
cld
pusha
pop
xor
jno
into
outs
cli
shl
xchg
sub
pop
ds
dec
xchg
push
enter
fst
test
sbb
sbb
mov
ja
add
retf
movs
xchg
sar
cwde
out
(bad)
dec
cmp
(bad)
repnz
adc
stc
dec
ins
xlat
or
pop
xor
mov
mov
fwait
inc
xor
shr
aas
mov
pop
push
jmp
data16
enter
or
mov
stos
and
inc
(bad)
mov
push
mov
xchg
cmp
out
repnz
mov
cmp
fmul
shl
push
cli
sbb
je
inc
cmp
cld
ins
cwde
pop
stos
adc
mov
mov
in
aad
and
mov
mov
syscall
not
inc
jle
stos
lods
movs
stos
or
add
pminub
test
(bad)
pop
icebp
pop
xor
xor
adc
jge
adc
sub
pop
cwde
sub
dec
gs
gs
mov
sbb
or
push
aad
push
and
cmp
clc
inc
push
ror
dec
out
pop
aas
sbb
cmps
mov
repz
daa
sub
sar
fdiv
shl
ss
cli
sti
sbb
movd
int3
xchg
jge
in
out
sbb
cmps
xor
jne
fadd
jecxz
scas
out
add
cmp
lods
(bad)
xor
sbb
mov
or
and
cli
test
xchg
adc
and
repz
mov
pop
aaa
sar
or
repz
jo
mov
fs
mov
inc
adc
std
adc
lock
xchg
xor
lods
xor
xchg
mov
fstp
sbb
mov
xor
dec
aam
neg
push
and
pushf
shl
inc
and
cmp
stc
mov
shl
stos
cs
hlt
je
outs
mov
inc
stos
ret
(bad)
aaa
mul
and
int
push
and
js
cmc
lahf
(bad)
pop
or
xor
adc
mov
xlat
jb
(bad)
xchg
sar
iret
mov
je
pop
inc
dec
mov
sbb
fdivr
pop
sbb
mov
cmp
repnz
mov
mov
data16
mov
ins
mov
sbb
fadd
push
sbb
cmps
mov
or
daa
test
jge
call
and
shr
cld
jno
jo
sbb
push
or
stos
in
sbb
ds
(bad)
sahf
fld
pop
cmp
jmp
ss
ins
arpl
aas
add
jb
or
jg
in
or
call
jb
sahf
push
imul
(bad)
fdiv
sub
sub
(bad)
jne
js
fidiv
sbb
mov
sahf
idiv
and
ins
mov
scas
mov
outs
mov
dec
outs
movs
xor
cwde
jge
jo
mov
xor
xchg
and
fwait
inc
xchg
inc
mov
mov
xchg
jp
into
loopne
mov
test
call
jmp
into
xchg
xchg
ror
stos
mov
and
stos
sar
xchg
sar
pop
js
sub
mov
adc
push
clc
arpl
jmp
(bad)
mov
jl
push
or
xchg
mov
jle
bound
daa
outs
sbb
or
inc
sti
push
mov
jmp
jecxz
jp
ror
mov
sahf
xchg
ret
add
inc
aam
iret
rcl
icebp
or
pop
and
xlat
push
repz
xchg
rcr
mov
jnp
sti
movs
push
inc
stc
das
jmp
pop
or
mov
aaa
ret
enter
call
ds
push
dec
shl
fstp
das
jne
mov
dec
test
xchg
ficom
xchg
and
popf
mov
shl
sbb
jmp
test
and
aad
ret
cwde
xchg
adc
cmp
inc
unpcklps
cmps
jbe
mov
fisub
aaa
inc
sub
out
pop
mov
daa
(bad)
mov
and
aas
lea
shl
ss
xchg
push
enter
rol
sahf
fsubr
imul
ja
fistp
add
mov
push
inc
icebp
scas
add
pop
push
daa
mov
imul
retf
adc
mov
xlat
movs
mov
outs
xchg
xchg
xor
and
pop
cwde
inc
lds
icebp
xor
test
pop
pop
adc
in
mov
aaa
push
call
repnz
je
cmp
adc
popa
and
fistp
push
fimul
ficom
xor
jp
gs
retf
jg
popf
jmp
ins
fidiv
retf
std
mov
(bad)
fistp
dec
dec
jne
fstp
aam
call
ja
ss
jb
push
outs
sub
jne
lods
xor
dec
jecxz
cwde
imul
xor
fwait
inc
call
xchg
sub
xor
cwde
movs
or
push
jns
push
rcr
mov
enter
xchg
adc
pop
xchg
push
adc
fst
test
(bad)
pushf
je
jb
xor
inc
adc
sbb
sahf
mov
jl
and
imul
ror
out
cmc
mov
push
and
setp
jmp
and
jmp
mov
push
outs
adc
adc
or
xor
das
(bad)
clc
push
mov
rol
push
pushf
jmp
push
mov
xlat
pop
stos
push
add
lar
fs
mov
mov
int
mov
pushf
popf
sbb
push
mov
pop
stos
shr
mov
stos
mov
int
popa
jmp
outs
lahf
scas
or
retf
mov
ror
and
shl
icebp
inc
hlt
adc
jae
pushf
or
sbb
clc
ret
lahf
and
shr
pop
dec
(bad)
ror
ins
cmps
stc
push
mov
pop
out
retf
(bad)
sub
and
loop
cld
dec
mov
out
out
adc
xlat
arpl
sub
mov
out
xchg
inc
movs
test
jo
jbe
out
fcom
in
sub
in
sbb
adc
in
aaa
inc
adc
push
out
mov
dec
mov
pop
lods
pushf
pusha
test
push
repnz
jbe
dec
sti
fwait
inc
je
test
jmp
clc
push
call
jecxz
je
movs
pop
retf
stos
inc
jns
push
push
call
or
jmp
xchg
cld
ja
loope
imul
mov
cmp
inc
call
lahf
rcr
push
sbb
xchg
(bad)
jns
inc
jge
shr
mov
sub
ins
imul
test
dec
xacquire
imul
loop
and
movs
fsubp
jp
fild
lods
test
cmc
daa
sti
adc
fld
(bad)
ss
xchg
out
ss
out
and
and
stos
adc
daa
fcomp
(bad)
push
and
push
inc
shl
mov
ins
xor
xchg
ret
mov
hlt
add
ins
popf
jno
stos
mov
nop
out
inc
scas
cmp
xor
add
pop
mov
or
in
mov
test
in
mov
call
or
call
gs
test
bound
push
hlt
dec
fisttp
sbb
sbb
inc
xor
dec
pop
into
sbb
cmc
inc
push
lahf
sub
outs
xor
mov
push
push
fsubr
mov
mov
stos
xor
xor
dec
(bad)
arpl
pop
lea
lods
cmc
bound
outs
fwait
sbb
aaa
(bad)
jns
inc
dec
cmp
inc
adc
dec
ret
test
sub
push
(bad)
dec
shl
xor
scas
out
sub
add
mov
bound
mov
push
jae
lahf
hlt
das
out
(bad)
or
push
or
call
mov
sub
imul
and
mov
lock
pop
int3
sbb
xor
push
xor
xchg
fsubr
gs
jl
daa
add
int3
out
(bad)
test
jno
mov
mov
push
add
xor
mov
sbb
sbb
xor
mov
(bad)
dec
pop
xor
pop
sbb
retf
out
jecxz
jle
lea
pop
mov
xchg
out
fist
(bad)
out
pop
gs
jb
pop
dec
jns
push
dec
ja
aad
fst
adc
jl
fs
retf
out
mov
cmp
je
aad
ins
push
add
cld
or
inc
pushf
out
daa
out
cld
xchg
inc
ds
arpl
imul
sbb
cmp
out
pop
cmp
cmp
sbb
pop
or
ret
sbb
dec
mov
push
out
xor
jbe
xchg
mov
or
shr
xor
mov
or
add
sbb
xor
imul
adc
shr
or
test
mov
aaa
loop
mov
outs
outs
jno
dec
add
push
pop
lds
sbb
mov
cmp
xchg
push
xor
pushf
pop
lock
and
pushf
data16
dec
sbb
loope
mov
mov
mov
into
cmp
cli
fiadd
in
jae
dec
mov
out
call
aad
std
pop
or
loope
into
retf
lods
pop
xchg
dec
adc
jl
stos
add
mov
push
jmp
in
mov
sub
in
(bad)
dec
nop
leave
xor
push
adc
out
jl
popa
fs
adc
mov
lea
cwde
out
cmc
iret
mov
jmp
inc
cmps
mov
add
xchg
push
nop
lds
(bad)
gs
or
mov
sbb
scas
(bad)
and
inc
sub
pusha
cmp
call
loope
in
std
lea
lods
imul
and
imul
jnp
add
inc
fistp
and
je
sub
pop
mov
mov
imul
call
jo
jg
xor
sub
mov
int
dec
push
jns
shr
add
mov
sub
test
push
js
out
adc
fcmovb
data16
xchg
outs
mov
xor
or
cmp
shl
or
les
call
xor
call
loopne
inc
lds
mov
jmp
div
in
repz
push
add
movs
add
dec
mov
fdivr
or
adc
mov
out
add
cmp
int
or
aam
addr16
add
sbb
sbb
retf
je
xor
cli
pop
test
js
xlat
jmp
pop
in
push
jbe
mov
and
adc
inc
adc
lea
dec
scas
pop
adc
sub
push
(bad)
cmp
jne
imul
stos
shl
jnp
sbb
pop
ror
aam
jl
test
or
aaa
hlt
mov
sbb
push
sahf
dec
adc
in
pmulhw
fwait
sbb
pop
pop
mov
leave
adc
xlat
cli
xor
jl
inc
ret
jbe
xchg
sbb
dec
(bad)
sub
mov
push
xchg
leavew
sub
pop
ja
and
pop
lock
scas
push
mov
fstp
ins
and
dec
retf
cdq
call
stos
mov
ins
movs
paddsb
push
enter
fcmove
push
cld
loop
adc
add
jmp
aaa
jge
adc
ja
test
aaa
out
adc
and
movs
xchg
xchg
in
mov
dec
or
add
icebp
pop
(bad)
std
sbb
cmp
shl
lds
cs
and
sbb
push
dec
xor
jne
mov
pop
shr
inc
mov
(bad)
jg
xchg
std
fdivr
cmc
mov
lock
out
adc
mov
je
or
imul
add
dec
adc
into
and
enter
in
push
ftst
retf
push
ret
stos
sbb
setle
pop
dec
add
jp
repnz
mov
shl
not
or
mov
or
xchg
push
or
or
cmp
xchg
add
out
or
xor
mov
and
loopne
push
jae
cwde
push
aam
sub
rcl
call
and
in
rol
pop
jo
mov
out
mov
sbb
cld
jp
sub
retf
mov
push
push
mov
push
nop
test
out
enter
mov
sub
retf
test
in
and
int
jbe
leave
dec
nop
ds
pop
add
dec
ret
addr16
add
mul
inc
push
scas
clc
mov
cmp
pop
mov
addr16
mov
fiadd
mov
pop
xlat
jge
out
in
push
sahf
es
call
sub
inc
leave
mov
rcl
(bad)
add
outs
pop
add
sar
mov
dec
in
bound
or
enter
in
cld
xchg
jle
xchg
xor
sub
xor
xchg
mov
into
xchg
push
scas
retf
(bad)
pop
jo
popa
sub
mov
pop
shrd
je
(bad)
fiadd
mov
popf
ss
mov
imul
sub
shr
xchg
mov
retf
xchg
into
and
movs
dec
add
jmp
add
hlt
mov
xlat
add
and
leave
dec
pop
mov
(bad)
dec
xchg
jb
jp
loop
sub
(bad)
shr
ins
inc
sbb
lods
dec
fisttp
cdq
movs
pop
ds
mov
dec
sub
popf
cmp
in
iret
test
ss
mov
push
dec
cmp
push
shr
add
clc
retf
adc
pop
jp
dec
mov
aam
outs
xor
pushf
test
dec
inc
mov
mov
sub
jae
cmps
aas
fstp
div
jae
ret
jge
out
jno
arpl
xor
xchg
add
clc
popa
mov
or
xchg
into
test
pop
addr16
rcr
sbb
outs
push
sub
scas
ud0
inc
shr
xor
pop
stos
rcl
mov
jnp
xor
or
pop
xor
int
stc
cwde
sbb
sub
stos
aam
movs
jg
sub
rcr
mov
xchg
sti
loopne
loopne
ins
lds
cld
mov
jge
out
test
jbe
je
pop
lahf
or
psrld
inc
mov
mov
sub
pop
jg
inc
push
sbb
out
mov
mov
dec
pop
mov
sar
fs
(bad)
mov
cmp
in
mov
imul
or
out
and
sbb
adc
hlt
pop
call
outs
inc
retf
(bad)
arpl
xor
lea
les
test
push
(bad)
adc
aaa
dec
mov
cli
inc
jmp
sub
mov
clc
mov
jne
dec
std
es
mov
(bad)
sbb
das
mov
lods
(bad)
je
cmps
jmp
daa
or
mov
not
lds
and
adc
pop
jno
push
shr
or
cld
cmp
sub
call
(bad)
sahf
cmp
lock
mov
mov
ret
hlt
repz
jo
retf
imul
cmps
mov
dec
mov
shl
cwde
mov
je
mov
in
repnz
dec
adc
mov
retf
inc
repnz
scas
pop
fadd
sti
adc
in
fiadd
lods
jns
idiv
clc
mov
cmc
fistp
movs
push
dec
js
adc
xchg
push
test
retf
fldenv
stos
in
mov
(bad)
xchg
jo
lods
pop
ss
outs
shl
mov
push
sar
pop
mov
cmp
or
mov
cmp
mov
test
or
pop
xor
jl
push
cmps
popf
(bad)
call
pop
mov
ret
or
xor
mov
jp
(bad)
icebp
xchg
in
ss
in
fist
loope
pop
dec
cs
fstp
sbb
sub
xchg
adc
inc
dec
sub
mov
(bad)
fldenv
mov
mov
popf
mov
scas
add
mov
rcr
outs
xor
in
jb
mov
jae
aad
ret
js
ins
enter
and
xchg
and
push
call
cmps
mov
fnstsw
dec
xchg
das
and
xor
sbb
mov
push
jbe
jb
int3
add
dec
jb
aas
sub
ror
ss
mov
sbb
inc
enter
sar
jle
in
call
in
or
call
mov
mov
cmp
ja
jb
ret
lods
and
push
push
push
xchg
js
xor
enter
inc
jne
push
loopne
in
int
cli
stc
fdivr
mov
xchg
(bad)
int
cmp
fcomip
inc
loop
(bad)
out
jnp
add
lock
sub
cmp
stc
push
movs
push
mov
xchg
in
mov
(bad)
cmp
pop
dec
fisub
enter
addr16
popa
xchg
fist
pop
push
ret
lahf
test
push
loop
(bad)
aam
imul
jmp
jo
cmp
and
in
outs
addr16
and
cdq
and
sbb
int3
lds
ret
jmp
mov
jnp
pop
in
sbb
shr
mov
mov
test
dec
push
add
dec
fild
mov
push
xchg
pop
retf
in
pop
push
addr16
mov
out
aaa
out
scas
mov
pop
(bad)
retf
dec
sub
and
out
je
mov
mov
or
mov
xor
cli
push
dec
sub
ins
pushf
fisubr
mov
xor
bound
mov
add
xor
sub
xchg
and
enter
imul
lods
push
pop
ret
and
stos
xchg
sbb
daa
or
cmps
sbb
mov
call
outs
mov
(bad)
inc
mov
xchg
jno
xchg
jmp
dec
push
dec
imul
mov
xor
jo
shr
out
div
imul
icebp
jg
add
std
mov
pop
scas
sub
imul
push
mov
cmps
dec
cwde
push
mov
xchg
jg
add
push
jg
sub
fs
ss
mov
ss
cwde
test
stos
add
push
xor
or
js
xchg
or
retf
push
adc
addr16
cmp
clc
sti
aam
enter
outs
lahf
xor
mov
ja
test
fcomp
(bad)
sub
mov
movs
jno
xor
xchg
call
mov
jne
adc
jno
loope
rol
jb
out
test
mov
iret
or
pop
adc
repz
cmp
jbe
add
sub
aam
aad
outs
sahf
xor
push
push
call
repnz
xchg
fldcw
push
xor
lods
fs
movs
cmps
push
test
sub
clc
and
or
loop
loop
and
cmps
out
push
xor
sub
loopne
pop
lock
sti
xor
add
inc
retf
mov
add
xchg
cmp
add
pop
add
jle
sbb
out
jbe
clc
inc
icebp
ds
sbb
xchg
retf
xchg
adc
adc
xchg
sahf
fldenv
movs
out
(bad)
hlt
jl
mov
and
rcl
and
scas
retf
shl
push
out
js
mov
add
push
loope
repnz
lods
popa
xchg
fcomp
(bad)
push
mov
sub
jp
sub
fwait
xchg
sti
sbb
jae
fld
inc
nop
and
or
add
mov
stos
fs
outs
mov
and
cmp
cmc
outs
mov
pop
in
inc
push
and
aad
fcomp
mov
mov
pop
aas
jp
and
push
pop
pop
nop
or
cmp
and
aas
ret
dec
or
nop
cmp
xchg
cmp
jmp
(bad)
in
ficom
cmp
lods
mov
das
inc
lahf
jg
push
push
cli
cmp
and
mov
in
jno
sub
mov
sbb
js
sti
push
push
mov
dec
jle
sar
leave
rcl
mov
push
fcom
inc
push
mov
lock
pop
lds
fsubr
xchg
clc
push
popf
addr16
jbe
std
stos
mov
mov
sub
and
jns
or
jbe
data16
in
jmp
cdq
push
test
outs
push
mov
sbb
mov
int
cli
mov
mov
dec
fst
(bad)
mov
imul
pop
cmps
mov
xchg
mov
sub
lds
imul
jne
aaa
and
mov
xor
jbe
and
push
hlt
xchg
xchg
fmul
dec
test
inc
sbb
pop
into
xchg
cdq
or
sahf
inc
mov
mov
int3
lahf
popa
jne
scas
test
push
outs
ret
aad
mov
push
pop
mov
mov
mov
mov
cmp
push
fsub
xchg
jge
in
int
into
mov
pop
scas
cwde
jae
mov
mov
cli
or
popa
sbb
shr
clc
enter
arpl
stos
mov
lds
in
mov
adc
shr
aaa
xchg
aaa
push
test
pop
xor
xchg
mov
call
test
sub
stc
adc
and
repnz
jl
hlt
dec
hlt
jp
out
xchg
cwde
ins
test
(bad)
jecxz
sub
aam
loopne
fsub
xchg
or
add
cmp
stos
nop
mov
les
sub
stos
cmps
aaa
imul
and
fimul
lods
fild
cmps
xchg
sub
gs
fcomp
and
(bad)
add
jo
gs
ror
jbe
xchg
gs
jl
pop
push
call
cmp
add
test
mov
jno
mov
jbe
jae
cmp
jne
cmp
jmp
ret
call
(bad)
xchg
mov
sbb
pop
pop
jl
dec
mov
xchg
fld
pop
test
std
pslld
test
and
inc
mov
mov
or
push
outs
push
jl
test
cmp
mov
jmp
push
jg
daa
dec
mov
inc
dec
push
mov
iret
mov
and
mov
movs
xor
loope
xchg
jle
fwait
pinsrw
xor
neg
in
imul
sahf
ins
popf
cli
xchg
addr16
push
push
aaa
adc
cmps
jns
popf
pop
inc
pop
add
movs
dec
mov
push
fxch
push
inc
into
mov
mov
rcl
jp
mov
push
data16
xchg
inc
sbb
mov
sar
cdq
jb
stos
call
and
aas
jl
fst
sub
add
pop
or
sbb
push
dec
nop
pop
rcl
(bad)
push
xor
imul
mov
stc
or
and
dec
repz
pop
repz
aaa
sar
xor
inc
aas
out
test
xchg
sbb
bound
fwait
inc
jmp
jno
push
ja
lods
call
leave
mov
(bad)
ja
mov
xchg
repz
fstp
mov
adc
sar
ss
aas
jge
jne
popa
js
mov
push
into
push
ins
sahf
and
jp
mov
hlt
enter
sbb
mov
retf
xchg
mov
sbb
xchg
ins
mov
or
cld
or
mov
xor
push
sbb
xor
ins
fwait
outs
retf
cdq
scas
mov
fadd
adc
in
scas
(bad)
movs
inc
xor
call
or
pop
cmp
stos
test
popa
pop
adc
addr16
adc
xlat
pushf
add
cld
cdq
lea
mov
imul
neg
jg
es
jmp
repz
or
add
dec
in
xchg
or
jb
or
adc
jae
repz
cli
xor
mov
jge
frndint
pusha
cdq
aaa
push
mov
cs
mov
ret
cli
inc
fiadd
jmp
adc
js
sub
cmp
inc
sbb
fcmovnu
jmp
xchg
in
pop
sub
jmp
mov
sub
cmp
dec
call
cld
adc
mov
mov
sbb
pop
pop
lock
mov
ret
pop
xchg
sbb
outs
mov
sbb
arpl
add
cmp
pusha
popa
rcl
mov
xor
neg
xchg
out
lock
dec
ret
dec
lea
inc
into
and
xor
call
sub
stos
sub
sbb
popa
popa
call
mov
shl
hlt
sbb
std
dec
inc
cmp
jmp
repz
retf
xchg
and
std
sbb
inc
push
retf
div
ds
jg
or
stos
xchg
(bad)
aad
test
imul
mov
or
shl
xchg
sbb
je
repz
out
pusha
daa
cmp
shr
jns
scas
mov
dec
addr16
sbb
sub
nop
fdiv
popa
xchg
aam
adc
cmc
aam
(bad)
dec
fdiv
inc
fcom
pusha
xor
sbb
xlat
out
and
mov
xor
cwde
fistp
mov
push
pop
jmp
sub
cmps
sahf
push
test
test
aam
xor
arpl
pop
je
cmp
xchg
pop
mov
data16
neg
pop
mov
mov
adc
dec
sar
dec
clc
ins
xchg
out
adc
mov
jb
nop
mov
fsubr
xor
xor
add
pushf
enter
mov
jb
(bad)
lahf
in
push
mov
stos
fdivr
jno
xor
inc
mov
enter
sar
imul
not
aad
ins
jae
inc
mov
push
push
out
sti
inc
ins
xor
push
sbb
mov
jle
(bad)
or
cmc
add
fild
out
movs
sbb
jecxz
test
inc
sbb
loopne
ret
in
sub
push
lea
ret
fsubrp
cmp
out
mov
pusha
cdq
icebp
sub
jge
int
xor
arpl
xchg
sub
ins
inc
and
jae
gs
mov
fnstcw
mov
push
shl
add
add
xchg
or
retf
cli
imul
mov
inc
push
dec
mov
push
xchg
pop
test
cmp
fisttp
and
push
or
mov
mov
adc
call
ss
mov
int3
movs
(bad)
shl
aas
mov
push
loop
or
pop
call
push
not
ds
nop
xor
daa
add
test
cmps
xor
adc
fild
mov
jp
mov
mov
arpl
les
les
cmp
(bad)
sbb
mov
test
mov
add
in
mov
into
jg
jecxz
sbb
adc
aad
push
fwait
leave
mov
neg
call
cmp
pop
cmp
push
xor
je
inc
into
mov
call
ja
fiadd
mov
lahf
cdq
dec
push
fisubr
xor
mov
retf
cmc
jne
mov
stc
or
fs
mov
sbb
scas
xor
jne
call
add
lods
aad
arpl
das
mov
xor
cs
sbb
arpl
push
dec
xor
mov
xchg
mul
dec
mov
inc
xchg
add
xlat
test
das
scas
fist
mov
retf
cmp
lock
out
jg
out
xchg
imul
fs
cmp
sti
sub
mov
push
mov
imul
sub
dec
ss
push
cmps
loop
addr16
shl
sbb
add
jns
adc
inc
adc
hlt
test
jo
mov
mov
jl
in
mov
lods
fdiv
push
mov
pop
cmps
dec
fwait
stc
pop
int
cld
fmul
jmp
daa
pop
(bad)
(bad)
mov
repnz
jecxz
daa
xlat
push
mov
loop
jecxz
mov
and
sbb
pop
ja
cmp
sub
xor
jb
lahf
sub
xchg
mov
jmp
fdivp
(bad)
jnp
inc
cmps
lea
cmp
cmps
mov
in
aad
jns
and
and
call
jp
ins
movs
or
push
mov
cmp
jle
cmc
pop
fmul
pop
arpl
fs
leave
jge
mov
sahf
push
jl
fild
icebp
mov
ja
mov
or
(bad)
scas
repnz
fiadd
mov
rcl
fucomip
pop
cmp
mov
call
sbb
jne
fcom
neg
ja
mov
test
data16
aaa
pop
pusha
sbb
adc
nop
rcr
jg
shl
test
jmp
jp
or
call
pop
push
and
in
xchg
jge
rcl
cmps
mov
push
mov
(bad)
outs
aam
xchg
(bad)
imul
(bad)
pop
xlat
add
loopne
ror
dec
daa
shl
adc
fidivr
mov
stos
xor
adc
adc
aad
retf
pop
jmp
push
(bad)
in
and
call
outs
pop
inc
cmp
xchg
cmps
leave
stc
jle
fild
stos
push
adc
test
add
arpl
jnp
xor
jae
xchg
repz
xchg
sbb
frstor
jae
rol
or
leave
adc
ins
push
pop
and
ja
(bad)
mov
add
imul
cmp
adc
or
xor
inc
jmp
outs
mov
cmp
jno
and
xor
sbb
pop
mov
pop
push
sbb
aas
out
sub
cdq
mov
cdq
push
mov
dec
ja
dec
fiadd
es
cwde
jge
ffreep
(bad)
and
mov
xor
cli
fild
sbb
dec
not
outs
dec
lock
and
dec
(bad)
out
adc
ins
sub
xchg
mov
lea
(bad)
nop
xchg
dec
ret
sub
retf
bound
stos
loope
cli
(bad)
mov
lods
and
(bad)
lods
mov
push
inc
lahf
mov
int3
jae
push
sub
fdivr
pop
aad
add
js
stos
pop
mov
jno
addr16
jmp
out
xor
daa
or
cmp
mov
cmp
push
or
pcmpeqw
jbe
clc
sbb
jnp
ja
or
mov
call
and
adc
xor
mov
cld
inc
push
and
sbb
pop
out
xchg
imul
int
sbb
dec
adc
mov
nop
jmp
dec
pop
ins
sbb
pop
cwde
adc
and
mov
icebp
out
cmps
mov
mov
retf
gs
xchg
mov
stc
enter
xor
xchg
sahf
imul
or
hlt
sahf
in
mov
inc
pop
xor
jns
retf
xchg
adc
(bad)
jmp
inc
popa
icebp
inc
mov
icebp
aas
cli
sbb
xor
scas
xchg
aaa
sub
iret
clc
cwde
jp
pop
in
inc
sub
pop
outs
mov
or
and
in
cmp
retf
pop
push
inc
movs
std
adc
popa
outs
call
cld
repz
popf
adc
add
or
cmp
dec
cmc
push
adc
or
ds
(bad)
mov
sub
scas
mov
test
cmp
ficomp
add
jmp
sub
mov
cmp
pop
rcl
mov
add
pusha
xchg
cmp
movs
mov
jle
push
aaa
jmp
cwde
scas
daa
cwde
call
cmps
aaa
sbb
xchg
jae
cmps
xchg
in
add
cmp
xchg
or
xchg
fimul
rol
fwait
cmp
mov
jbe
dec
iret
sbb
aam
pop
aaa
mov
jge
dec
sbb
inc
jb
lods
test
or
push
pop
outs
(bad)
(bad)
jmp
sub
rcl
adc
or
push
popa
cmp
inc
and
gs
xor
sub
sbb
inc
mov
pop
pop
lock
add
(bad)
(bad)
leave
xchg
inc
out
ret
ret
call
push
sub
sbb
ret
stc
push
jmp
add
rcr
lds
aaa
xlat
cwde
or
lahf
xor
adc
xchg
clc
xor
pusha
daa
adc
jl
cmp
retf
in
xchg
out
xchg
sub
add
fstp
dec
xchg
sub
ss
movs
aaa
or
shr
sbb
xor
sub
inc
ins
cld
lock
bound
xchg
mov
cmc
or
out
out
mov
shr
pmulhuw
loop
out
xchg
outs
inc
push
push
mov
scas
adc
les
xor
push
jo
mov
push
mov
pop
pop
pop
push
mov
sbb
cmp
clc
pop
rep
aaa
inc
pop
push
lods
sbb
push
and
lds
mov
test
mov
lahf
jo
ds
imul
pop
ja
xlat
es
jb
push
sub
jl
jmp
cmp
inc
imul
retf
(bad)
mov
pop
cmpxchg
mov
mov
mov
cdq
ror
mov
add
push
mov
fwait
retf
lds
sbb
cmp
loope
push
movs
aad
out
dec
retf
or
sub
push
adc
jge
addr16
cmp
xchg
arpl
sbb
repz
mov
adc
bndldx
sahf
pusha
xchg
inc
adc
push
and
(bad)
pop
icebp
pusha
ins
add
or
mov
xlat
cmp
std
(bad)
stc
xchg
mov
mov
or
inc
ret
mov
sbb
daa
inc
push
push
rcl
xchg
sub
push
push
push
jne
jne
loope
sub
imul
dec
repz
sub
jle
call
mov
xor
sub
aad
xchg
cmps
scas
les
or
dec
(bad)
cmp
or
fs
pop
or
xchg
and
outs
jns
jecxz
sub
arpl
leave
pop
ja
cs
ds
sbb
cmp
sub
add
and
dec
mov
or
sbb
loopne
icebp
push
stos
dec
sbb
pushf
ret
shl
sub
mov
sbb
push
push
jl
pop
cmp
in
stc
and
cmp
push
ins
adc
arpl
jb
and
jb
inc
aas
pop
jmp
adc
jbe
sub
sub
or
retf
hlt
call
add
rep
cmc
xchg
mov
push
mov
ds
loop
jmp
pop
cmp
pop
test
cmc
lods
jecxz
lock
sub
jmp
pop
std
fiadd
sti
ins
dec
jmp
call
jge
jl
daa
xchg
pop
or
out
pop
cdq
es
(bad)
(bad)
movs
xor
or
xchg
rol
(bad)
xlat
sub
es
ror
inc
fbstp
dec
add
mov
push
shl
stos
jae
lock
ficom
adc
pop
aas
pop
adc
and
pop
push
sub
lods
inc
aad
mov
jb
pushf
inc
pop
lods
inc
lods
dec
nop
mov
push
mov
enter
test
out
movs
test
push
aaa
push
pushw
sbb
cli
dec
retf
in
movs
xor
pusha
sbb
jle
nop
in
jle
adc
cmp
rcr
fcmovne
dec
xchg
pop
gs
jle
xor
shl
xchg
lods
sub
outs
dec
adc
sbb
add
shr
dec
stos
jl
cld
push
mov
push
add
cmp
xchg
cmp
repnz
or
loopne
call
out
mov
sub
push
cmp
stos
xor
dec
mov
adc
or
jbe
inc
jae
inc
stc
pop
xor
int
into
or
push
mov
or
xor
mov
call
test
ds
in
adc
pop
sub
sbb
push
shl
cwde
pop
outs
inc
xchg
dec
inc
adc
retf
cmps
pop
fdiv
cmp
stc
ret
fnstenv
xor
stos
inc
retf
push
xlat
pop
das
aam
sub
sbb
push
push
or
xchg
jbe
or
iret
loop
mov
dec
jmp
aas
and
jle
fidiv
jnp
dec
push
loop
cdq
dec
cmps
in
stos
(bad)
sub
mov
or
lahf
push
push
sbb
and
pusha
mov
push
inc
dec
mov
pop
mov
cs
xlat
and
xchg
cwde
push
test
popf
std
mov
cli
fadd
mov
jmp
jecxz
mov
sbb
sub
mov
mov
arpl
xchg
or
call
inc
mov
ins
fisub
adc
in
inc
xor
data16
pushf
adc
sbb
in
or
jecxz
pop
(bad)
imul
cli
xlat
mov
sbb
test
adc
es
xor
adc
pop
mov
inc
add
adc
aaa
stos
movs
jg
popa
cmps
loope
xor
mov
enter
jbe
cmp
cmp
and
dec
add
inc
xchg
daa
loope
mov
push
jmp
ret
fstp
pop
jb
sub
gs
push
in
or
push
arpl
das
or
iret
call
stos
mov
pusha
jmp
dec
jbe
enter
sbb
test
dec
jae
ret
xor
cmps
push
pop
jl
mov
movs
mov
lods
mov
cmps
pop
xor
not
test
fst
mov
clc
inc
fmul
das
cmp
xor
rcr
sbb
enter
test
mov
dec
cmp
mov
inc
cwde
pop
clc
les
ins
scas
mov
inc
dec
pop
int
call
call
pop
in
ret
mov
pop
add
mov
pop
mov
mov
push
sbb
mov
xchg
push
and
mov
inc
std
jmp
push
and
aas
lock
jae
pop
inc
add
push
stos
pop
neg
clc
cmp
mov
retf
test
fmul
stc
jae
push
dec
test
sbb
xchg
jnp
data16
sub
call
inc
cmp
aaa
push
clc
imul
stos
ss
push
repnz
fstp
push
or
inc
stos
fmul
push
sti
mov
add
out
fsub
leave
lods
hlt
mov
adc
shl
hlt
mov
add
shr
add
stc
jmp
jmp
jnp
sbb
add
pop
hlt
mov
out
jb
adc
jl
add
mov
fcmove
dec
sub
or
jp
(bad)
jg
cld
fdiv
shl
pop
call
push
test
mov
push
push
inc
mov
leave
adc
mov
fmul
clc
dec
(bad)
pop
pop
retf
bound
push
or
fcmovnu
cmps
shl
iret
mov
jl
std
sbb
push
cwde
cmc
mov
fild
and
clc
daa
repnz
push
dec
out
pushf
pop
pop
retf
cwde
jp
lods
jno
add
out
int3
lds
inc
push
mov
adc
scas
(bad)
jg
add
pushf
add
out
or
(bad)
push
lods
jns
addr16
pop
sbb
xchg
and
imul
sti
mov
mov
cmps
fs
xchg
xchg
int
mov
add
push
jns
enter
movs
add
das
cmp
neg
pop
jne
xor
clc
mov
xsha256
cmps
xchg
push
call
or
sbb
mov
ret
leave
je
scas
mov
les
in
scas
inc
jb
imul
mov
xchg
les
mov
fistp
xor
js
and
or
cmp
repnz
in
push
xchg
mov
or
jo
int3
(bad)
mov
xor
sbb
call
jge
mov
add
xor
clc
fcmovbe
sub
sub
les
push
adc
retf
add
aaa
pop
test
push
dec
cmc
sbb
pop
push
outs
cli
push
pop
sub
sub
repnz
push
fcomp
fmulp
loope
jae
fsubr
dec
inc
xchg
cdq
mov
data16
nop
lahf
push
or
les
and
adc
ins
sbb
dec
jae
and
pop
scas
push
inc
push
lock
not
jbe
push
push
loop
call
fdivr
pop
data16
adc
ja
sub
mov
out
xchg
and
push
in
jmp
lods
cmp
sahf
push
add
sub
jg
out
push
mov
js
rcr
bound
pop
mov
sub
test
xor
mov
jbe
push
jo
movs
retf
pop
sub
xchg
push
lock
mov
int
pop
add
dec
fistp
jl
pushf
sti
and
fsub
xor
repz
xor
or
pop
adc
outs
jl
or
or
je
mov
js
mov
cld
cld
dec
xchg
sbb
adc
dec
pusha
(bad)
mov
sub
sbb
jmp
mov
hlt
pop
addr16
inc
xchg
test
xchg
xchg
add
outs
mov
dec
(bad)
mov
scas
cli
out
pop
test
std
lods
mov
push
cmp
retf
gs
push
cwde
test
div
adc
inc
outs
fidivr
test
scas
jp
test
test
pusha
pop
leave
sub
loopne
or
test
pop
sub
outs
push
je
sbb
xchg
adc
in
pop
(bad)
jl
fldenv
jp
push
outs
jp
sbb
add
imul
cmps
je
aas
jmp
mov
mov
stos
sti
push
in
cmc
lods
sub
add
(bad)
fadd
aas
aam
jb
or
add
aam
dec
loop
inc
dec
les
mov
rcr
inc
and
ss
pusha
xchg
mov
dec
pop
lea
sub
add
pop
push
dec
jp
fisub
cld
dec
add
add
nop
push
mov
or
jg
lods
dec
icebp
movs
push
mov
cwde
adc
pushf
jb
xor
push
shl
xchg
sbb
inc
imul
add
fsubp
push
lds
mov
or
(bad)
pop
pop
jb
push
fs
jecxz
jge
xchg
add
jnp
div
mov
mov
iret
xor
push
es
mov
pop
sbb
inc
in
mov
pop
shr
popf
jns
sub
pop
xchg
sbb
lock
es
sti
pop
inc
fiadd
mov
mov
sub
rcl
pop
test
jae
cmps
pop
into
inc
xchg
jl
and
repz
sbb
or
cli
mov
cmp
inc
mov
sub
jmp
mov
mov
movs
sub
mov
hlt
out
push
lods
cmps
ins
enter
stos
add
or
test
inc
mov
mov
aad
or
lock
push
addr16
mov
adc
add
add
and
jle
(bad)
dec
fnstcw
sub
cli
pop
ins
add
ror
imul
xor
push
daa
cld
xchg
jne
shr
mov
jl
rcr
mov
xor
cmp
sub
pop
cmps
leave
(bad)
push
outs
icebp
fidiv
ja
xchg
add
push
push
or
leave
sti
scas
xor
lods
idiv
pop
(bad)
mov
mov
retf
mov
xchg
sbb
jno
aad
ins
lea
jecxz
xor
call
xchg
dec
push
adc
gs
or
(bad)
mov
or
adc
xchg
cmp
inc
(bad)
sbb
cmp
cli
adc
sbb
shr
retf
mov
jnp
sub
xor
xor
out
repz
push
stos
jl
cmp
or
cs
or
inc
ja
stc
pop
gs
outs
ja
aas
(bad)
test
rcl
mov
sbb
(bad)
in
pop
add
fdiv
daa
inc
push
cmp
pushf
mul
fucom
ror
jo
lods
or
cmp
sub
out
xor
les
cmp
test
pop
js
xor
outs
fcos
mov
fxam
loop
es
xor
push
test
test
jle
int3
out
mov
cmp
jno
js
xlat
(bad)
cdq
dec
cmp
lods
or
aaa
les
not
fimul
movs
push
sbb
rol
out
adc
mov
sub
jae
add
neg
sub
jmp
add
jg
xchg
inc
jp
cmp
scas
nop
and
ss
(bad)
jbe
mov
and
sahf
or
jge
or
dec
inc
leave
sahf
sub
pop
in
mov
sub
int3
repz
push
xchg
enter
adc
inc
sbb
cmp
scas
mov
lods
sbb
ins
jmp
cs
(bad)
arpl
lea
(bad)
fcmovne
dec
pop
adc
mov
push
cmp
sub
test
add
jbe
nop
xor
sub
jnp
fldl2t
xchg
mov
test
push
sub
xchg
(bad)
shl
sub
cmp
jns
popa
push
jl
mov
dec
int
idiv
hlt
mov
pop
xor
sbb
push
cmp
cmp
xchg
bound
push
movs
es
cmp
xor
pop
ret
mov
and
je
shr
jb
out
lods
add
ret
idiv
retf
je
in
into
pop
jne
out
mov
repnz
push
fsubr
pop
mov
fisttp
imul
popf
or
adc
ret
mov
jle
inc
gs
das
dec
repnz
sahf
sbb
call
sub
out
and
outs
dec
mov
aaa
push
xchg
mov
test
pop
mov
pusha
test
fcomp
pop
mov
xor
push
push
jae
repnz
push
push
les
aam
enter
adc
lahf
ret
jecxz
push
sub
mov
pop
pop
push
adc
or
cmp
jb
mov
push
xchg
ret
xor
add
dec
xchg
xchg
xbegin
adc
loopne
stc
fistp
jmp
cmp
out
cld
mov
ins
mov
enter
mov
xor
icebp
push
push
inc
in
in
push
ror
jnp
add
and
hlt
push
push
outs
ret
stc
arpl
dec
shl
popa
pop
ins
jmp
repz
(bad)
jg
xchg
push
lods
add
push
jno
cwde
int3
iret
mov
mov
rcl
mov
mov
shr
jg
or
xchg
xchg
push
ss
sar
dec
test
mov
ins
int
(bad)
aam
xor
imul
cld
jmp
xor
pop
cld
or
stos
sbb
sbb
inc
gs
movs
outs
loop
lods
repz
sbb
test
fsub
or
arpl
imul
sub
imul
push
jb
call
and
adc
sub
sub
jmp
dec
(bad)
push
mov
sbb
add
mov
fcmovb
mov
sahf
jle
xchg
ja
mov
mov
cmp
dec
cmps
jmp
nop
sub
dec
pop
les
daa
dec
xchg
iret
mov
fldcw
mov
xlat
dec
mov
aaa
xor
pop
pop
push
and
xlat
(bad)
mov
hlt
stos
ficomp
mov
cmps
sbb
pop
addr16
movs
int
push
in
movs
xor
push
iret
fsubr
pop
lds
nop
jecxz
(bad)
cmp
jnp
push
(bad)
pop
jno
lea
sbb
repz
imul
jne
addr16
std
fbld
sub
pop
(bad)
das
mov
(bad)
jl
outs
dec
mov
cld
sahf
sub
xor
dec
push
or
mov
dec
xor
stos
push
add
daa
rcl
sar
bound
cmp
xor
push
adc
jl
fdivr
stos
pusha
lds
bound
scas
ins
inc
cs
cmp
adc
popf
pop
mov
or
inc
fmul
adc
std
ds
dec
cmp
test
fiadd
sbb
dec
test
out
xchg
iret
or
js
push
mov
hlt
inc
lods
push
xor
repnz
jne
pop
add
cld
cwde
push
sbb
out
(bad)
gs
ja
sub
mov
and
add
inc
sbb
dec
jge
or
xor
repz
cld
push
rcl
xlat
aad
mov
shr
(bad)
ins
or
(bad)
mov
and
je
outs
jb
out
(bad)
fistp
stc
adc
stc
mov
or
inc
bound
and
dec
mov
rol
mov
imul
mov
imul
movs
push
push
mov
int
iret
mov
leave
jmp
scas
fxch
or
pushf
adc
dec
icebp
or
adc
sti
inc
sub
adc
sub
jo
leave
popa
mov
xchg
inc
push
loopne
cwde
xchg
outs
jp
dec
aas
inc
mov
lods
xchg
sbb
jl
out
adc
lods
daa
cmp
push
sub
fcmovnbe
(bad)
aam
xor
rol
push
stos
hlt
sub
inc
je
sbb
ss
xchg
std
mov
jecxz
aam
mov
fs
repz
rep
add
cmp
or
scas
mov
lea
out
xlat
call
fld
loopne
xchg
iret
outs
add
jno
mov
jmp
jb
aas
fiadd
scas
cmp
mov
inc
pop
sub
pop
scas
sub
jae
push
retf
gs
xor
adc
xor
int3
mov
movs
ins
enter
jno
and
ins
dec
loopne
sar
and
jmp
and
fs
xor
mov
push
xchg
inc
jae
pop
adc
jmp
jne
loop
dec
lock
pusha
enter
sub
sti
int3
loopne
add
cld
shr
lds
ds
fcmovu
xchg
jge
ret
jl
mov
int3
pop
push
jmp
inc
mov
push
jl
and
fimul
cwde
call
and
dec
hlt
les
in
xchg
iret
sub
outs
dec
inc
ins
pop
xor
aaa
leave
mov
in
sub
mov
pop
and
mov
adc
mov
mov
in
ins
pushf
xor
sti
adc
in
push
add
add
push
mov
stos
mov
ja
ds
cmp
rol
cdq
test
mov
call
adc
cwde
xor
fdiv
aaa
aas
xchg
cmps
in
jb
outs
adc
mov
neg
mov
sbb
jne
pusha
mov
push
and
and
inc
adc
push
jl
or
add
loop
jbe
hlt
rcl
repnz
mov
xchg
ins
xchg
xor
lods
call
push
fst
lock
dec
xor
popf
push
mov
adc
mov
pop
push
xor
mov
pop
mov
push
sub
bound
out
jg
push
sti
adc
rcl
add
fimul
sahf
repz
cdq
xor
mov
stos
(bad)
js
dec
pop
dec
fisub
in
lods
xor
jge
xchg
jno
mov
cmp
push
xor
push
sub
mov
jnp
mov
adc
fsub
jecxz
and
push
sbb
dec
(bad)
adc
dec
inc
pop
iret
push
adc
inc
lock
xor
and
or
retf
lock
(bad)
xlat
ds
inc
xchg
mov
in
lods
add
xor
out
das
or
pushf
push
inc
xchg
call
and
pop
movs
out
es
cdq
or
les
lods
not
ror
mov
ds
out
dec
mov
mov
jo
loopne
pop
jno
fisubr
xchg
pop
loope
retf
dec
das
cs
or
fld
retf
xchg
mov
mov
pop
into
xchg
(bad)
push
sbb
int
ins
ja
sbb
cmp
or
fmulp
adc
ss
pop
popa
lahf
xchg
push
(bad)
fcomp
out
test
push
push
jns
call
ret
or
push
data16
rcr
inc
pop
mov
sbb
std
push
test
adc
inc
pop
dec
add
lea
nop
and
xchg
mov
jecxz
nop
loope
and
mov
add
dec
jg
jno
push
rol
push
in
test
retf
imul
fsub
sbb
mov
dec
or
pusha
sbb
cld
lods
mov
xchg
int3
push
aad
sbb
scas
lahf
test
or
push
test
in
add
xchg
pop
sbb
mov
mov
inc
pop
pop
push
inc
test
ja
in
arpl
(bad)
pop
pop
add
int
mov
pop
xlat
pop
bound
test
sub
int
pop
push
mov
rcl
pop
nop
xlat
mov
in
stc
jae
repz
mov
(bad)
sub
in
pop
jo
mov
test
sub
cmp
cld
or
or
aad
jo
cmp
and
sar
push
idiv
(bad)
and
add
and
hlt
loop
jmp
movs
nop
mov
out
ror
jb
ret
sbb
out
imul
movs
imul
out
jp
scas
cmp
xchg
and
sbb
or
push
sub
xchg
sti
jecxz
inc
sub
pmovmskb
fist
push
movs
sub
jns
cmc
jge
clc
das
adc
out
jge
pop
movs
pop
fisttp
dec
push
fs
pop
jecxz
out
fdiv
pop
cmp
cmps
jo
into
pop
outs
jns
xchg
sub
movs
lods
mov
stc
stos
aaa
jmp
and
in
je
enter
outs
addr16
pop
jmp
mov
in
pop
movs
add
jnp
fwait
ja
inc
js
xchg
and
pusha
out
or
test
mov
sub
movs
dec
mov
ins
in
mov
jb
jne
dec
pop
xchg
xor
retf
repz
into
sub
stos
shl
and
fwait
in
dec
sahf
adc
mov
mov
mov
retf
mov
(bad)
xchg
iret
add
mov
adc
xchg
ss
arpl
shl
shl
bound
add
cli
js
push
mov
jle
in
or
xchg
sahf
mov
xlat
adc
cmps
and
add
lds
fsubr
in
mov
test
jge
mov
dec
outs
dec
dec
mov
mov
sub
xor
mov
ins
mov
div
aas
adc
inc
push
xor
push
imul
outs
out
fisub
aad
sbb
inc
dec
mov
in
cmp
sbb
clc
fcomp
loope
inc
jo
cmp
xchg
popa
(bad)
imul
sbb
push
mov
sar
jbe
pop
in
xchg
ret
mov
sbb
gs
xchg
xor
push
jg
push
addr16
add
jmp
mov
fisttp
pop
cmp
add
jb
sub
and
push
add
leave
sbb
sbb
lock
fnsave
das
bound
adc
dec
(bad)
leave
cli
mov
bound
xchg
ss
inc
inc
jno
mov
add
ins
mov
bound
test
jne
into
jnp
sub
std
mov
fisttp
mov
retf
jp
xchg
sub
mov
pop
iret
clc
pusha
js
call
inc
fist
nop
sbb
jle
int3
mov
and
push
in
jg
dec
jns
jbe
shl
xchg
int3
call
adc
mov
ds
sbb
push
xchg
and
push
int
dec
mov
mov
scas
stos
fld
mov
(bad)
iret
cmp
xor
mov
jbe
push
xchg
push
aaa
pushf
leave
pop
inc
add
cs
xchg
inc
jg
fidiv
test
in
and
xchg
mov
dec
rcl
xchg
test
fistp
push
popa
stc
fistp
(bad)
jmp
lea
int
in
int3
dec
add
and
stc
cmp
lds
xor
mov
mov
inc
leave
cmps
jp
mov
lahf
xchg
les
xor
xchg
mov
pop
cmp
mov
xor
or
int3
jp
inc
adc
adc
push
push
xchg
dec
dec
movs
sub
pop
lods
and
call
xchg
xchg
rcr
and
out
(bad)
ror
fiadd
scas
dec
test
int3
add
in
add
xor
sub
push
inc
mov
mov
cmps
dec
rol
cmp
in
dec
jl
mov
jns
jo
icebp
and
add
pop
inc
fs
ss
jb
(bad)
sti
arpl
fld
pop
push
ror
and
lods
leave
loope
mov
daa
cmps
aaa
pusha
push
adc
rcr
pushf
xchg
sub
outs
das
cmps
sub
clc
mov
sti
mov
pop
push
mov
xor
ja
cmp
in
iret
data16
push
fcomp
cmp
adc
std
in
(bad)
movs
rcl
pusha
pop
mov
mov
mov
popf
sub
dec
lahf
mov
in
mov
test
and
jbe
fcomp
sbb
call
sar
add
out
jae
sub
jmp
ror
ror
ss
jp
mov
xchg
es
xchg
sbb
sahf
cmp
mov
inc
in
mov
inc
dec
(bad)
ds
xchg
inc
mov
xchg
jae
daa
cmp
lods
pusha
out
or
cmp
out
lock
xchg
sub
mov
add
xlat
(bad)
div
(bad)
fnsave
rcr
movs
jmp
outs
and
loope
dec
inc
cmp
ror
mov
xchg
fcmovne
sbb
(bad)
lock
and
pop
jl
mov
fnop
ds
mov
dec
pushf
out
rol
mov
retf
sub
xor
pop
add
pop
sbb
mov
std
pop
inc
cmp
push
mov
xor
or
cmp
(bad)
icebp
ss
cmp
sbb
xor
(bad)
loope
jnp
pop
mov
jg
mov
das
jle
mov
outs
fsubr
xor
sub
nop
jmp
pushf
cdq
in
mov
in
mov
jne
outs
pop
cmp
call
ins
lds
fisttp
stos
rcl
mov
imul
gs
in
(bad)
ret
lods
call
dec
sub
mov
mov
and
mov
arpl
and
adc
pop
lahf
or
fld
xchg
push
mov
sahf
push
jp
inc
mov
mov
jno
push
jbe
stc
mov
adc
out
ds
pop
push
mov
or
ds
arpl
push
outs
aam
mov
cmps
mov
je
adc
out
pop
cmps
dec
push
mov
xchg
les
or
mov
pop
not
gs
or
loopne
pop
and
fadd
push
sahf
mov
push
stos
pop
bound
and
xchg
add
aad
outs
inc
cs
rol
(bad)
cmp
ss
sub
in
dec
inc
int
icebp
add
es
cdq
gs
shl
mov
aaa
test
inc
bound
sti
mov
xlat
xor
scas
fld
(bad)
pop
xor
imul
pop
lds
movs
pop
pop
mov
(bad)
and
mov
arpl
in
xor
shl
xor
jne
adc
dec
jecxz
outs
cld
mov
cmp
imul
ds
daa
push
mov
mov
fnstsw
pop
jmp
sub
xor
(bad)
imul
mov
add
cmps
or
cvtps2pi
dec
xchg
sub
aas
sub
lea
arpl
test
std
cmp
cdq
call
sub
adc
and
stos
mov
cld
stos
mov
sti
shr
dec
out
mov
popa
je
mov
xchg
push
mov
mov
add
gs
jmp
dec
inc
inc
mov
aaa
cmp
mov
fbld
pop
mov
sbb
lods
jmp
pop
mov
xchg
and
cmp
push
out
in
inc
inc
pushf
fadd
mov
out
or
pop
lock
pop
push
stos
retf
dec
xor
call
xchg
lock
jne
cs
jmp
add
mul
cmps
adc
sub
fimul
xor
addr16
inc
int
(bad)
movs
cmp
add
dec
adc
ret
lea
push
cmps
out
std
clc
add
or
pusha
mov
pop
sub
jbe
mov
repz
inc
lahf
fcom
fs
shl
push
and
push
or
mov
stos
and
inc
popf
mov
dec
test
push
out
scas
jnp
gs
push
jb
gs
out
movs
push
outs
push
push
or
cmp
mov
xchg
xor
stc
je
push
popa
dec
sub
dec
in
imul
in
and
push
mov
inc
cwde
call
jg
jns
fsub
mov
mov
clc
mov
int3
or
jp
cmps
adc
movs
push
dec
movs
shl
shl
adc
imul
stos
push
movs
pop
pop
xchg
(bad)
push
fbstp
movs
add
popf
xor
iret
pop
sub
das
and
xor
add
jmp
ret
ficom
push
mov
inc
push
cdq
adc
retf
xor
dec
or
std
mov
ja
jg
inc
rcr
sub
mov
lods
sub
cmp
add
add
test
stos
or
lods
das
add
push
inc
jp
pop
mov
jbe
xlat
or
fbstp
pop
retf
in
test
arpl
fiadd
cmp
pop
adc
mov
sbb
aaa
fst
test
in
aaa
sub
sub
(bad)
sub
adc
jo
test
(bad)
ins
inc
lds
and
inc
mov
test
pop
lock
lock
ss
ficomp
in
jb
cmp
dec
(bad)
int
retf
clc
add
mov
mov
lock
nop
pop
pop
inc
dec
hlt
mov
mov
call
imul
icebp
push
mov
jmp
inc
fdiv
sub
dec
nop
hlt
ins
xor
push
iret
iret
rcl
push
pop
mov
cwde
inc
dec
mov
xor
sub
mov
hlt
xor
aaa
retf
pop
movs
push
add
popf
cmc
rcr
and
jg
dec
mov
xor
mov
adc
daa
sbb
jl
push
xchg
push
mov
lock
call
pop
fsubr
push
jl
leave
and
out
data16
add
sub
lock
sub
jp
(bad)
pop
outs
les
hlt
out
movs
rcr
sbb
or
push
shl
adc
into
daa
test
xchg
adc
lds
nop
mov
cmp
cld
scas
mov
dec
stos
mov
inc
add
add
dec
fbld
inc
push
pop
xlat
xchg
xchg
pop
pop
or
xchg
xor
mov
sub
lods
xor
test
rcl
jge
cmovs
faddp
neg
mov
add
fmul
fidiv
or
fldln2
cmp
add
fimul
daa
test
call
push
inc
int
sub
jne
pop
mov
mov
nop
and
mov
aaa
cmp
mov
sqrtps
pop
sub
in
mov
je
xchg
mov
jmp
push
stc
fstp
sub
inc
sbb
icebp
test
pop
rcr
or
fld
ins
mov
sub
aaa
inc
mov
sbb
xchg
mov
dec
popa
stc
es
outs
in
(bad)
jbe
test
bound
ret
retf
inc
mov
xchg
adc
pop
dec
in
jnp
leave
inc
adc
cld
es
mov
int
xchg
scas
sbb
or
neg
cmp
jo
or
retf
mov
mov
daa
jg
cmp
cmp
or
dec
xchg
fdivr
shl
jmp
xlat
cli
jns
sub
adc
cmp
xchg
fucom
lods
mov
mov
lds
sbb
rcr
inc
mov
mov
mov
mov
xchg
imul
fnsave
nop
pop
rcr
or
loop
jmp
cmp
repnz
stos
add
inc
xor
stos
xchg
out
inc
int3
or
sbb
adc
pushf
inc
jno
in
add
test
and
scas
sub
ret
sbb
pop
mov
or
push
add
ffree
mov
retf
out
adc
test
popf
cmp
outs
xor
in
jbe
mov
dec
imul
or
fdivrp
jmp
mul
mov
add
enter
inc
ja
popa
mov
sbb
sub
sbb
jmp
das
repz
les
cmps
pop
cli
pop
adc
fwait
jg
ret
xchg
mov
into
shr
mov
test
rcr
mov
gs
div
inc
int
mov
adc
mov
test
clc
fsubr
btc
xor
sub
push
xchg
sahf
stc
lds
cs
mov
repz
les
ror
jecxz
(bad)
cmc
sub
fcomp
sub
xlat
aad
in
out
dec
ins
dec
clc
enter
hlt
or
mov
pop
cmp
mov
call
pop
sar
test
xor
mov
aam
xchg
mov
and
icebp
test
sub
scas
adc
shl
jg
mov
push
and
popa
iret
je
fsubr
test
mov
adc
repz
fimul
xchg
fprem
movs
pusha
inc
mov
jbe
cmp
adc
xchg
outs
jmp
sbb
scas
add
add
mov
jmp
loope
scas
pop
das
in
or
xchg
xchg
clc
or
std
ja
mov
push
sbb
jl
das
clc
inc
hlt
xchg
out
fistp
adc
add
ror
fmul
clc
mul
mov
mov
mov
lahf
inc
jmp
stos
ror
fadd
mov
and
mov
(bad)
je
adc
(bad)
mov
inc
jmp
retf
not
fsub
int
inc
xor
nop
mov
adc
daa
lods
xchg
retf
cmps
jl
hlt
add
test
ss
inc
aas
add
dec
pusha
mov
mov
jbe
je
sbb
mov
popf
fwait
mul
int3
js
dec
loop
nop
aaa
sbb
sbb
out
arpl
push
jae
sahf
jbe
data16
adc
fucomp
add
int3
mov
xchg
retf
dec
sahf
fnstenv
(bad)
and
push
movs
jmp
jmp
shr
push
pop
sti
xchg
pop
out
loope
dec
add
daa
nop
rol
mov
jle
sub
dec
sti
sub
inc
and
jbe
pop
xor
xchg
fwait
loopne
stc
jle
xlat
push
fidivr
xchg
imul
cli
push
cmp
sar
push
push
sbb
mov
push
das
movs
sub
arpl
and
clc
pusha
aad
dec
dec
pop
sbb
mov
mov
xlat
ret
xchg
pop
cmps
movs
push
mov
jae
and
leave
repz
loope
js
mov
mov
outs
fs
inc
(bad)
in
push
retf
in
inc
sti
push
popa
call
enter
push
bound
fbstp
sbb
daa
(bad)
rcr
leave
loope
add
test
(bad)
ret
adc
sbb
pop
(bad)
jmp
das
movd
mov
inc
and
xchg
in
in
and
cmp
inc
cdq
icebp
and
mov
jp
out
and
xchg
cmc
mov
or
aam
xchg
mov
sub
pop
jo
test
or
leave
das
ins
xor
imul
sub
mov
out
mov
dec
dec
sbb
je
lds
push
je
nop
call
cmp
adc
lods
loopne
add
or
hlt
add
loopne
or
push
dec
cmc
sbb
and
daa
inc
push
mov
cmp
pop
mov
jmp
push
jns
dec
mov
imul
mov
test
fistp
jmp
leave
mov
ss
adc
dec
lea
aad
jbe
jbe
sti
ja
clc
rep
add
nop
inc
mov
pop
(bad)
stos
xlat
loopne
imul
test
rcr
loope
cmp
dec
pop
pop
out
jnp
sti
jb
xor
aam
(bad)
int3
mov
mov
sti
das
adc
movups
push
div
adc
std
cwde
test
cmps
mov
sbb
ins
mov
aas
fbld
xor
pop
and
mov
sar
test
push
xlat
mov
dec
mov
sbb
sbb
xor
sub
cli
js
fld
inc
in
cmc
xor
inc
stos
aaa
(bad)
xchg
mov
jl
iret
xchg
call
pop
pop
push
jae
ds
dec
pop
not
shl
xor
add
out
inc
sub
imul
ret
and
rcl
mov
(bad)
jae
(bad)
hlt
inc
sub
test
adc
and
pop
or
jg
adc
cwde
bound
sub
div
inc
pop
dec
ss
(bad)
sti
mov
clc
mov
mov
jno
hlt
out
loopne
jl
cmps
sub
scas
mov
or
xchg
das
xchg
pushf
fist
ins
loope
cli
mov
in
int3
dec
aad
adc
or
(bad)
xchg
sbb
and
outs
add
cld
sbb
cs
arpl
repnz
lea
mov
movs
cli
sbb
cmp
leave
jns
adc
movs
sub
or
dec
shl
inc
data16
dec
enter
xor
jne
dec
stos
cmp
fcom
bnd
push
lods
es
push
mov
rcl
dec
out
push
rcr
dec
lock
imul
inc
mov
movs
cdq
repz
and
add
xchg
add
stos
ds
imul
pop
and
mov
cld
cmps
loope
lock
clc
pushf
jo
jb
or
popa
in
mov
or
leave
push
mov
dec
mov
xchg
push
outs
mov
ja
inc
pop
inc
pop
xor
clc
aaa
ss
jl
into
or
pop
mov
hlt
stc
sahf
pop
push
inc
inc
inc
sub
ret
pop
adc
daa
ss
imul
jns
sbb
xor
fcmovne
push
push
sub
pop
inc
push
dec
inc
cmps
int3
cmp
mov
mov
fist
gs
inc
or
xchg
jge
std
test
pushf
retf
push
inc
ficomp
cmp
lahf
hlt
mov
mov
sbb
mov
pop
fnsave
(bad)
mov
adc
xor
mov
fisttp
sub
mov
mov
adc
aad
lea
sbb
fmul
pop
xchg
outs
lods
cmp
es
jmp
fwait
stos
xchg
mov
je
mov
repz
fistp
push
xchg
mov
les
sti
xchg
pop
into
mov
pop
test
addr16
ret
addr16
push
bnd
fld
(bad)
push
inc
retf
xlat
inc
ror
push
(bad)
cmps
inc
fnstenv
add
mov
xor
cmps
ins
pop
push
lds
cli
jmp
movs
mov
add
adc
inc
xchg
test
lock
mov
sbb
pop
mov
nop
push
mul
call
inc
cmps
clc
xor
movs
clc
push
or
cld
mov
das
add
adc
jbe
out
imul
int3
sub
mov
add
xlat
jae
pusha
mov
das
call
xchg
jmp
cli
add
pop
cdq
jge
jnp
dec
outs
push
cmp
push
test
sub
pop
outs
adc
bound
push
jmp
cmps
ret
loope
add
lds
out
mov
jmp
adc
gs
loopne
mov
xchg
jo
faddp
cmp
push
pop
sbb
jb
pushf
stos
mov
(bad)
ret
pusha
adc
mov
jmp
pop
outs
xchg
inc
push
nop
jmp
out
and
test
xchg
mov
mov
lahf
(bad)
test
in
imul
sub
fisttp
into
adc
popf
and
cmp
les
inc
mov
xchg
cmp
stc
mov
mov
sahf
enter
jle
pop
imul
xchg
cld
sub
pop
psrlq
std
jnp
out
mov
dec
retf
cmp
cmp
xchg
adc
loopne
mov
mov
or
fwait
xor
pushf
or
call
add
inc
push
fs
adc
cmp
fisttp
ja
clc
(bad)
jge
(bad)
cdq
(bad)
xchg
and
pop
adc
arpl
push
add
aam
(bad)
jnp
aas
inc
push
loopne
dec
aaa
mov
mov
sbb
inc
popf
sub
imul
call
push
sbb
and
ja
mov
or
jo
scas
movs
inc
cwde
mov
xchg
bound
aad
ficomp
sbb
xchg
inc
or
pusha
call
xchg
mov
jo
and
push
adc
sbb
pop
add
add
jns
enter
cli
stos
out
inc
add
inc
inc
sbb
inc
ins
fist
pop
cmp
pop
pop
mov
shr
jo
rol
les
mov
int3
lock
xor
out
ret
imul
cmp
inc
mov
dec
out
cmp
mov
xor
loopne
les
push
inc
mov
stos
xchg
add
pop
lds
bound
mov
push
enter
(bad)
iret
mov
jnp
sahf
cwde
mov
lock
push
push
dec
push
or
push
jecxz
or
pop
add
push
repz
jl
ja
movs
push
or
xchg
call
inc
sub
cmps
stos
dec
or
xchg
jle
mul
rcl
loop
loop
jne
out
out
dec
cld
add
dec
adc
push
test
ficomp
pop
xchg
or
and
les
push
jecxz
and
push
sub
adc
je
nop
adc
(bad)
jb
jo
fistp
out
lds
cmp
ror
(bad)
xchg
mov
fdivr
xlat
(bad)
mov
pop
add
mov
in
push
mov
add
mov
or
loop
in
xchg
dec
mov
cmp
in
test
jae
pop
dec
frstor
mov
into
std
(bad)
js
into
cmps
jecxz
imul
pop
cs
sub
mov
xor
or
mov
addr16
in
xchg
adc
in
hlt
rcl
daa
das
test
out
cmps
retf
adc
add
mov
scas
pop
test
sbb
jmp
cmc
push
mov
lods
push
sbb
pusha
(bad)
les
les
mov
mov
adc
in
pushf
daa
mov
imul
pop
mov
mul
loopne
jbe
jo
mov
cmp
sbb
mov
xchg
je
fmul
fwait
or
xor
dec
xchg
cmps
test
mov
adc
xchg
scas
nop
ss
xchg
int
retf
mov
mov
sbb
clc
loopne
mov
mov
dec
adc
(bad)
jg
in
pop
jg
add
xor
arpl
int3
jnp
mov
bound
and
ins
call
dec
adc
out
add
cdq
mov
push
add
nop
pop
cdq
inc
mov
in
retf
xchg
ins
and
imul
push
test
jo
push
addr16
sbb
dec
mov
gs
dec
mov
inc
xchg
in
xchg
loope
fild
rep
cmps
mov
pop
call
pop
inc
int
pop
iret
mov
xchg
(bad)
dec
mov
ss
fdivr
lock
push
adc
in
xchg
mov
mov
push
add
cmp
sub
mov
movs
nop
and
xchg
sti
mov
add
clc
dec
inc
iret
cmps
sahf
dec
sbb
add
and
pop
cmp
out
or
inc
mov
into
cmp
les
cwde
xor
popa
add
xor
pop
test
inc
cdq
rcr
out
imul
nop
dec
ins
aam
push
repz
shl
mov
fnsave
repnz
cmp
add
iret
jne
add
sub
jnp
shl
mov
popf
mov
jmp
adc
data16
push
into
add
add
push
cmp
pop
dec
ret
sbb
push
sbb
in
stos
mov
mov
add
jmp
test
in
push
ror
pop
adc
jnp
out
ret
push
scas
repz
sar
jno
push
push
cmp
mov
aam
jecxz
xlat
jo
in
call
add
sub
push
lods
xchg
or
mov
inc
pusha
std
jo
sbb
aad
inc
lds
xor
int
adc
cli
dec
test
mov
(bad)
mov
mov
cmp
sub
pop
cli
fcomp
ror
dec
inc
int
sbb
lea
mov
xor
dec
jmp
pusha
mov
pusha
shr
or
adc
adc
and
and
out
and
dec
jl
cmp
push
test
shl
inc
sar
pop
sub
ins
push
mov
mov
mov
pop
sbb
fidivr
jb
ret
mov
mov
pop
jge
dec
lods
stc
call
cmp
outs
dec
sbb
mov
rol
repz
cmp
js
sbb
or
call
mov
mov
imul
xor
loop
mov
scas
push
pop
(bad)
lods
outs
leave
cmps
sar
mov
inc
leave
repz
and
call
pop
push
push
les
(bad)
out
pop
push
dec
pop
push
pop
mov
scas
repnz
cdq
or
minps
jl
sbb
retf
loope
inc
popa
cmp
push
mov
outs
ja
cmp
xchg
mov
xchg
out
pop
xchg
pop
mov
cdq
and
jmp
sbb
mov
add
push
xor
(bad)
stc
dec
imul
call
and
push
shl
ds
lahf
mov
push
scas
in
(bad)
ror
dec
xchg
pop
push
sbb
iret
mov
fadd
push
out
ret
dec
repz
mov
fucomi
retf
xchg
mov
mov
ss
ds
pushf
push
scas
and
xor
lods
jmp
cmps
inc
out
push
push
add
je
or
xchg
cmp
loope
push
dec
test
xor
test
jo
into
enter
outs
int3
out
stos
xchg
cmp
cdq
jnp
inc
xchg
ins
pop
pop
xchg
mov
dec
pushf
dec
(bad)
jbe
mov
es
cmp
adc
mov
xchg
sub
xchg
sub
xchg
add
stc
cmp
rol
pop
pop
in
pop
ja
in
stos
jle
sar
ds
shl
hlt
sbb
call
popf
add
icebp
stos
in
rcl
in
aam
xchg
data16
push
xchg
in
add
mov
inc
pop
add
out
xchg
mov
xor
(bad)
mov
mov
fnstenv
fstp
into
dec
cmc
ds
lock
push
xor
adc
xor
daa
int3
push
push
mov
jne
xor
jnp
or
dec
call
lods
cmp
xchg
stos
movs
adc
(bad)
dec
movs
jno
jnp
call
in
das
jae
jnp
ins
int3
ret
jb
push
jo
adc
shr
sbb
fsubr
hlt
aaa
xlat
or
out
inc
in
xchg
xor
pop
dec
mov
out
call
hlt
mov
or
(bad)
fbld
fadd
push
push
iret
pop
movs
push
out
pushf
xor
push
retf
cmp
call
(bad)
int
push
jnp
neg
icebp
(bad)
and
adc
push
call
fiadd
pop
jno
dec
mov
out
sbb
fmul
jnp
retf
sub
fcmovu
xchg
ss
fmul
cwde
daa
or
xor
jle
aam
call
jae
gs
aam
pop
cs
or
in
cmps
adc
dec
add
dec
scas
add
xor
xor
scas
nop
ret
cdq
in
in
test
add
aam
bound
in
mov
mov
xor
xchg
push
jo
test
jecxz
push
cld
jb
dec
jmp
mov
adc
in
and
loop
out
mov
sbb
inc
cli
clc
repz
xchg
in
mov
out
icebp
stos
and
or
dec
adc
hlt
(bad)
ds
jle
in
cmp
sbb
add
rcl
sbb
mov
push
cli
pop
adc
inc
push
mov
stos
mov
test
pusha
icebp
enter
push
push
ficom
iret
dec
push
cmp
cmc
test
movs
inc
int
xchg
movs
daa
mov
in
and
jg
je
mov
pop
push
outs
xor
xor
push
inc
mov
(bad)
pop
jmp
jge
je
adc
jb
xor
call
cmp
sub
ret
aaa
xor
pushf
out
push
xchg
(bad)
(bad)
adc
pop
lock
cmp
push
retf
dec
xchg
xchg
fs
dec
into
or
icebp
outs
pop
sub
lds
or
shl
adc
jle
jns
out
jbe
and
imul
push
hlt
jg
xlat
test
xchg
in
imul
mov
leave
xchg
cs
dec
fcomp
loope
les
cmp
movs
test
pop
mov
sti
cmp
call
out
mov
std
sbb
mov
popa
add
mov
mov
xlat
jo
mov
adc
cli
mov
inc
ss
jmp
or
data16
sub
mov
mov
push
lds
(bad)
scas
lea
js
stc
aaa
loope
pop
in
leave
cwde
mov
mov
div
push
pushf
pushf
loopne
jg
scas
ror
(bad)
aaa
lods
jmp
jge
pop
in
lds
or
gs
push
xchg
(bad)
outs
pusha
adc
xor
xor
mov
lds
cld
sar
cwde
daa
mov
mov
call
pusha
mov
jo
(bad)
and
mul
ds
(bad)
or
mov
cmp
int3
repz
pop
int3
es
scas
xchg
xchg
mov
sahf
imul
cld
enter
add
pushf
sub
dec
(bad)
hlt
clc
jle
fmul
call
inc
cld
fsubr
fnstenv
fild
pusha
ret
rol
std
mov
bound
mov
and
and
cmps
sti
mov
mov
bound
sub
push
mov
fs
add
pop
dec
imul
movs
cmp
das
call
inc
test
fldcw
test
mov
fild
gs
mov
jb
lods
mov
and
push
xchg
and
test
inc
into
mov
scas
lods
fwait
sub
pop
fistp
leavew
sbb
shr
je
and
sub
mov
xor
popa
push
jbe
sub
outs
and
in
dec
cmp
popf
pop
sahf
aaa
ds
xchg
sbb
retf
inc
xor
jp
aas
jmp
or
inc
dec
and
sub
xor
jns
cmps
movs
pop
pop
mov
ficom
xchg
add
cmp
ins
ins
icebp
or
je
jne
in
jno
mov
scas
gs
sar
clc
ja
retf
push
mov
fild
call
add
xor
or
pop
stc
and
push
cs
pop
cmp
cmp
cmp
dec
ins
sub
inc
(bad)
xchg
and
add
pop
stos
shr
sbb
or
mov
mov
mov
sub
push
pop
js
mov
sbb
in
out
xchg
mov
iret
fnstsw
imul
scas
pop
fisub
sub
mov
cwde
in
enter
rep
mov
sub
xor
nop
sbb
xchg
gs
stc
pop
sbb
loope
lods
sti
test
and
cmp
fidivr
xor
bound
mov
add
jmp
xlat
jo
add
push
cs
dec
in
jle
cwde
icebp
or
(bad)
repz
jl
adc
xchg
cmp
test
add
jns
add
(bad)
gs
sar
stos
bswap
push
pop
lahf
inc
jne
cmp
push
ds
lahf
add
adc
sub
pop
lea
inc
call
pop
movs
test
xor
or
test
in
popa
aaa
mov
out
or
retf
test
movs
sti
pusha
int
add
xchg
xor
xor
stos
inc
mov
inc
mov
(bad)
gs
mov
daa
leave
inc
rcl
(bad)
jne
xchg
mov
test
in
lods
int
xchg
popf
and
stos
jbe
add
pop
ss
hlt
into
mov
jne
dec
sar
pop
gs
addr16
push
pop
mov
ss
neg
sahf
in
jp
push
xor
mov
js
jle
jo
xchg
mov
jo
pusha
pop
jnp
fst
inc
out
retf
xchg
mov
jmp
ret
bound
and
rcl
pop
jg
outs
dec
jmp
xor
push
inc
sbb
sub
enter
mov
and
sbb
inc
movs
jbe
add
sbb
retf
cmps
shl
mov
cmp
sub
push
stos
out
jmp
mov
jns
mov
adc
(bad)
std
inc
ds
mov
pop
lods
pop
sqrtps
sahf
jae
or
jbe
je
inc
mov
adc
(bad)
mov
jns
std
inc
push
mov
pop
xor
in
clc
loop
cwde
push
dec
(bad)
adc
outs
cmp
jo
mov
int
sar
(bad)
leave
(bad)
mov
pusha
mov
inc
out
leave
hlt
adc
dec
rcr
imul
mov
sub
retf
call
dec
aas
shl
push
loope
or
dec
adc
push
adc
dec
cmps
std
sub
test
mov
dec
stc
imul
and
jns
sbb
cmps
and
pop
mov
and
cmps
std
jo
dec
in
icebp
das
xor
(bad)
and
in
outs
add
xchg
loopne
adc
test
sti
push
scas
cmp
adc
xchg
lods
jp
scas
lock
out
ds
mov
ss
dec
cs
sbb
stos
dec
(bad)
sub
jecxz
scas
jmp
(bad)
leave
xchg
sub
xchg
ins
pop
xchg
retf
xor
mov
or
sub
mov
mov
(bad)
(bad)
mov
mov
into
push
das
mov
movs
rol
sbb
xchg
ja
and
inc
lock
lods
adc
sub
bound
stos
ds
mov
mov
push
xchg
mov
lods
fnstcw
jl
aad
(bad)
and
sbb
mov
xor
inc
and
arpl
xor
xor
sti
xor
sub
sahf
mov
leave
mov
repnz
mov
out
sub
and
mov
outs
sub
ret
je
pop
cmp
xor
int3
imul
jmp
push
and
mov
adc
mov
xchg
mov
or
fidiv
pop
test
mov
ja
gs
cmps
inc
aaa
fwait
dec
pop
sbb
scas
dec
clc
xor
dec
mov
jb
cld
and
mov
pop
shl
push
int3
push
add
inc
and
jnp
mov
and
xchg
xchg
adc
repnz
cmps
das
sbb
xor
ja
ja
retf
popf
inc
sbb
gs
push
cmp
sub
out
addr16
jmp
cmps
push
xchg
dec
sbb
cld
xchg
mov
fdivr
sahf
pop
xchg
bnd
lods
jg
pop
xor
push
push
push
ins
cmps
add
ins
fist
iret
xor
pushf
std
fstp
cli
inc
adc
xchg
fcomp
repz
and
pop
cmp
in
add
sub
lock
cmps
dec
inc
popf
pusha
or
sti
outs
jle
(bad)
cld
in
stos
pop
es
pop
out
jmp
adc
mov
and
jle
sbb
push
scas
nop
cdq
hlt
das
fs
xchg
(bad)
mov
repz
loopne
leave
adc
xchg
pop
xchg
mov
pushf
ins
dec
mov
icebp
adc
pusha
into
mov
jno
mov
ds
cmc
jnp
cmps
mov
mov
dec
leave
jle
jmp
push
pop
sbb
dec
ret
xchg
xorps
shl
stos
test
sbb
push
push
push
adc
sbb
pushf
inc
cwde
xchg
add
and
adc
out
aam
inc
cmps
jl
dec
cmp
or
mov
hlt
fdiv
out
std
shl
mov
mov
shr
add
xor
push
addr16
popf
fs
jnp
and
out
scas
xchg
fbld
cmps
fidivr
dec
xor
sbb
and
les
in
mov
out
in
aaa
jle
out
mov
retf
xchg
add
into
fs
push
sbb
loopne
retf
test
xchg
(bad)
fstp
sbb
imul
stos
aaa
and
pop
fnstcw
sbb
outs
repnz
cmp
mov
loopne
push
cmp
adc
test
and
stc
dec
xor
js
ret
int
pop
movs
xchg
movs
loope
sub
mov
aad
or
adc
xor
mov
xchg
outs
sbb
sub
fisub
pop
imul
js
xor
in
xor
or
push
mov
xchg
xor
clc
jb
lock
mov
xor
adc
icebp
dec
test
test
inc
ss
jge
ins
bnd
add
gs
inc
cmp
xor
sbb
xchg
imul
dec
and
lahf
or
and
jmp
jns
push
pop
adc
dec
push
mov
stc
cmps
sub
xchg
adc
add
push
movs
scas
stos
test
rol
out
lahf
xor
repnz
clc
mov
mov
jmp
mov
xor
push
sbb
inc
mov
jecxz
adc
or
xor
and
in
ins
out
inc
mov
mov
dec
dec
jnp
dec
mov
push
repz
lea
in
clc
loopne
xchg
jle
add
xor
jg
mov
xor
rcl
ret
pusha
stc
cmp
mov
and
jb
jmp
fwait
sbb
scas
jae
xchg
xor
xchg
push
stc
inc
aad
xchg
ror
push
adc
lods
cmp
mov
(bad)
xchg
int3
(bad)
popf
cmp
hlt
imul
pop
mov
jecxz
(bad)
jmp
and
xchg
and
addr16
adc
ds
mov
(bad)
sbb
cmp
xor
std
popa
xlat
jno
add
cld
xor
int
movlps
xchg
clc
fs
sbb
das
stc
sti
mov
adc
inc
add
inc
scas
inc
inc
mov
and
inc
mov
pop
xor
dec
sub
sti
fnstsw
test
gs
fucom
dec
mov
or
dec
imul
xchg
scas
iret
pop
add
test
enter
or
stos
push
test
not
and
outs
add
pop
mov
lock
mov
pop
mov
dec
js
mov
clc
inc
clc
fnsetpm(287
into
sahf
hlt
pop
add
imul
sar
jmp
(bad)
jae
mov
sbb
ficom
and
fsubr
sub
out
adc
pop
loop
sbb
stos
sahf
ficomp
stc
push
aam
xor
inc
pop
fwait
je
inc
mov
dec
iret
push
fstp
push
adc
and
shr
inc
xchg
and
sbb
iret
sub
sti
and
mov
in
push
xlat
push
push
inc
test
loope
mov
push
cmps
aas
xor
pop
ds
retf
sbb
add
fdivp
in
inc
imul
xor
rcl
pop
add
sub
js
jne
or
xor
aam
outs
and
dec
mov
iret
jecxz
xchg
cmps
pop
idiv
pop
fld
mov
out
in
lock
jae
push
(bad)
sub
loopne
xor
aam
sbb
sbb
test
jae
mov
ror
mov
push
push
push
or
cmp
fsub
jae
aaa
into
and
jo
pop
(bad)
sbb
cmp
(bad)
dec
add
mov
outs
cmp
jg
sub
push
or
push
fwait
aaa
es
imul
data16
mov
xor
fwait
out
and
pop
mov
cmp
cmc
xor
cli
pop
retf
daa
dec
retf
add
cmp
neg
dec
or
ds
mov
(bad)
adc
jno
sub
push
mov
push
sub
dec
ins
push
sub
jmp
jg
data16
or
aaa
inc
mov
shl
mov
test
push
addr16
inc
sbb
bswap
jae
ror
ficomp
mov
add
scas
mov
stos
pushf
loop
aas
dec
sub
out
sub
sar
les
lds
cmp
enter
jbe
add
pop
sub
sti
movs
scas
inc
sub
inc
jb
dec
out
push
mov
jmp
mov
(bad)
or
or
dec
mov
inc
test
push
mov
jp
xchg
sbb
inc
les
outs
outs
ret
(bad)
std
dec
push
iret
push
mov
scas
push
sub
movs
mov
cwde
icebp
push
mov
(bad)
ds
clc
mov
inc
or
or
loop
ss
test
ins
mov
hlt
mov
stc
scas
std
test
xchg
sub
mov
ror
mov
xchg
shr
mov
inc
jns
xchg
pop
cmc
sbb
adc
xor
mov
mov
pslld
cmp
push
je
xor
pop
mov
sbb
or
stc
fstp
call
inc
cmc
das
jno
push
add
jge
xor
in
or
mov
out
push
pop
stos
xor
pop
or
shr
scas
arpl
dec
and
mov
mov
retf
scas
adc
test
adc
inc
and
push
cmp
push
out
mov
inc
jp
cmp
cmps
out
sub
test
dec
xchg
shl
sbb
jge
dec
(bad)
das
adc
mov
and
push
cli
mov
sbb
or
add
jns
cld
(bad)
in
fsubr
or
ret
add
xor
sti
cwde
push
rol
and
mov
fnstsw
cmp
add
sbb
cmps
and
or
sub
call
dec
push
adc
fcom
sbb
rcl
lods
rol
adc
jnp
repz
sbb
jb
repnz
adc
mov
xor
or
adc
push
mov
(bad)
in
loope
dec
dec
adc
outs
fsub
stos
cmps
enter
in
popf
jo
xchg
fsub
cmp
dec
dec
call
dec
sub
pop
lds
pop
xor
mov
(bad)
cmp
into
dec
mov
inc
mov
loopne
call
cmps
(bad)
popa
push
cmp
(bad)
ror
retf
xchg
mov
jne
inc
fisubr
leave
jns
out
adc
push
push
mov
dec
add
xchg
jmp
imul
into
inc
add
adc
neg
sub
or
inc
mov
ror
retf
movs
xor
jge
in
push
sub
out
mov
mov
fsubr
nop
call
push
cld
mov
icebp
popf
mov
jp
or
int
jne
mov
(bad)
mov
jp
mov
pop
fmul
cmp
out
sub
mov
cli
jmp
or
xchg
pusha
push
mov
ins
xchg
in
pop
mov
inc
aad
pop
ja
mov
mov
xchg
shl
es
lds
sub
dec
repnz
fwait
or
jb
in
adc
xchg
mov
push
std
aas
lock
scas
inc
mov
pop
pop
jg
pop
adc
out
xchg
scas
mov
jae
test
test
aad
adc
ret
and
aaa
ds
jp
dec
bound
test
aas
add
ins
adc
xor
jb
sub
add
xlat
mov
arpl
add
add
div
sbb
loopne
or
add
lock
dec
add
call
mov
add
ins
retf
jmp
scas
sbb
push
pcmpgtw
push
pop
xor
sbb
cmp
cdq
out
fwait
mov
jle
jmp
jp
daa
cmps
cdq
mov
jmp
jo
imul
inc
popa
je
out
mov
not
ss
pop
in
mov
not
cdq
fnsave
jp
jns
pop
ficomp
push
mov
fild
xchg
and
jo
xchg
loopne
cld
bound
aaa
jns
test
sbb
mov
call
popa
inc
shr
fnstsw
retf
pop
add
and
pop
jnp
or
jb
sar
sub
push
xor
adc
jae
dec
(bad)
test
cmp
cmc
push
xchg
lock
nop
jo
xor
icebp
aam
mov
loopne
test
int
fdivr
add
lea
jmp
mov
jmp
xchg
and
fwait
mov
or
ficom
nop
jns
mov
mov
xor
xor
pop
mov
icebp
jnp
jecxz
mov
js
pop
sbb
(bad)
mov
mov
xor
mov
fistp
or
nop
das
test
xor
jmp
leave
mov
es
cmp
mov
pop
inc
or
xchg
jo
inc
pop
mov
sub
pop
add
fucomip
mov
xor
push
pop
fs
test
hlt
push
imul
dec
je
pop
pop
popa
sti
dec
or
and
clc
cld
xlat
bnd
adc
dec
or
push
iret
cli
jb
stc
jmp
cmp
cmp
mov
aam
int
in
jle
pop
outs
out
mov
imul
gs
push
or
jb
xchg
pop
adc
(bad)
xlat
mov
add
jae
mov
jl
mov
push
loopne
or
inc
add
and
cld
cmp
jp
and
into
lea
popf
mov
sub
lods
fucomp
movs
call
in
mov
mov
pop
sub
fstp
mov
ret
mov
out
mov
add
clc
add
vmwrite
sub
jle
inc
movs
stos
sbb
push
(bad)
xor
and
ror
(bad)
mov
retf
xor
inc
fadd
sub
cld
add
aad
test
jp
fmul
(bad)
das
dec
and
int
sub
mov
stos
sub
ret
mov
xchg
sub
mov
dec
fadd
cmps
mov
and
adc
out
or
test
fldenv
lods
adc
ins
adc
jnp
cmps
push
sbb
mov
jne
xor
xchg
aam
xor
jle
stos
inc
add
jo
stos
sub
add
dec
and
jbe
sar
jp
and
and
cmp
ins
pop
out
sub
das
jo
mov
fdivr
daa
or
je
into
xchg
scas
pop
les
sub
cmps
fst
retf
sbb
fst
adc
lods
in
sub
shl
push
iret
shl
cmp
inc
mov
cdq
sbb
jg
xor
cld
xor
test
pop
jno
mov
add
stos
pop
jge
pop
inc
rol
mov
dec
jmp
idiv
sbb
stos
ds
jg
ss
icebp
lds
mov
stc
pusha
in
loopne
jecxz
imul
mov
sub
jle
or
push
push
jns
sub
inc
push
cmc
test
cmp
adc
mov
mov
inc
xchg
fcomp
mov
fstp
add
inc
cwde
xor
and
inc
icebp
outs
imul
cli
les
cmc
xchg
fild
sbb
nop
add
dec
and
or
cmps
mov
mov
nop
jb
dec
sbb
sub
out
fisubr
hlt
jb
xor
ss
out
scas
shl
adc
test
jb
add
out
cld
mov
inc
mov
or
jmp
pop
lods
call
std
jns
jmp
inc
lds
mov
cmps
mov
pop
push
pusha
or
cmps
dec
cmp
push
lods
pop
adc
js
mov
gs
mov
jbe
je
inc
mov
fild
mov
push
cld
or
push
adc
xor
jp
jae
clc
js
push
or
xlat
cmc
jno
push
call
xchg
xchg
mov
aaa
push
adc
out
xchg
lods
outs
and
fld
dec
cmp
retf
ret
fsub
movs
add
cmps
call
push
add
and
stos
push
push
dec
sbb
sbb
lods
int3
add
fnsave
in
mov
xchg
sub
pop
mov
sbb
push
test
aam
rcl
mov
(bad)
iret
frstor
pop
mov
jns
mov
sub
fnsave
ja
int3
dec
es
pavgw
and
in
jne
cmp
jno
mov
(bad)
ds
mov
add
add
hlt
adc
dec
or
mov
hlt
mov
scas
js
pop
pop
loopne
mov
sbb
fcomp
or
inc
in
stc
push
out
inc
or
movs
test
int3
out
xchg
and
xor
neg
push
ss
arpl
jmp
xor
cmp
xor
cmp
or
adc
into
mov
or
mov
in
icebp
imul
daa
add
sti
dec
movs
out
mov
or
or
adc
retf
pop
rcl
jge
mov
aaa
(bad)
pop
jp
je
or
sub
sbb
jmp
pop
movs
cmp
dec
jb
adc
sub
gs
push
xor
fld
imul
inc
cmp
lahf
jl
icebp
aaa
dec
(bad)
xor
ret
or
clc
imul
gs
dec
push
and
lods
int
ret
icebp
ins
jns
outs
sub
stc
fisttp
sub
ror
bound
jl
imul
push
xor
aaa
into
shr
mov
loope
bound
xor
lods
loopne
pushf
or
push
ins
test
pop
std
push
fs
loope
and
stos
mov
inc
(bad)
mov
and
cmps
add
or
sbb
and
dec
repz
xor
xor
cmp
out
mov
cmp
and
imul
ss
xchg
es
lds
push
lods
outs
fild
imul
mov
ret
mov
sbb
push
xchg
nop
mov
lea
out
sbb
push
xor
mov
in
(bad)
push
xchg
cmp
cmp
sub
or
inc
fld
inc
jmp
mov
repnz
sub
std
enter
xchg
xchg
cdq
(bad)
fcomip
loope
jbe
cs
pop
xchg
and
(bad)
test
adc
cld
sar
mov
gs
and
jge
cmp
icebp
gs
sub
vmwrite
scas
test
mov
mov
jmp
dec
mov
sub
movs
lock
arpl
hlt
mov
ins
push
aad
mov
jno
scas
pushf
dec
(bad)
mov
call
mov
mov
cdq
adc
test
xchg
jl
fistp
sbb
add
mov
adc
loope
adc
mov
loope
ins
int
sbb
adc
mov
jecxz
sub
sub
jge
scas
adc
push
in
xchg
xor
cli
ja
push
mov
pushf
fwait
cld
xor
mov
inc
xchg
fcom
add
daa
(bad)
(bad)
or
cld
sub
adc
sub
loop
mov
mov
pop
mov
mov
xchg
mov
(bad)
std
dec
enter
xchg
sub
cli
and
push
jno
sar
push
hlt
mov
ss
lods
cmp
mov
mov
test
dec
popf
imul
mov
out
push
retf
add
pop
pushf
pop
jp
popf
push
sahf
pusha
cmp
xchg
xchg
xor
mov
icebp
adc
cs
loop
test
push
es
inc
lds
ja
fidivr
daa
in
dec
push
lods
push
mov
repnz
xchg
push
push
push
mov
cmp
pop
jge
ret
repnz
scas
xchg
call
mov
mov
cwde
and
xchg
scas
cmps
imul
push
bound
push
fadd
or
aad
test
push
or
xor
ret
pop
push
cmp
jno
test
test
cmp
(bad)
and
pavgw
mov
dec
call
repz
xchg
xor
adc
mov
int3
or
mov
sbb
xchg
dec
pop
xor
je
jp
jne
aam
pop
aas
mov
pop
push
pop
push
add
lods
inc
mov
jge
pusha
cmp
jmp
repz
das
das
pop
jl
push
dec
sbb
mov
test
pop
in
sbb
sar
adc
cld
and
ds
shl
adc
sub
out
dec
out
mov
mov
test
adc
xchg
cmc
sub
jecxz
sbb
lods
in
lods
jmp
inc
imul
mov
push
jle
ja
pop
cmps
push
call
pop
sbb
pusha
xchg
mov
jp
mov
and
or
shl
and
popf
pop
mov
fnstsw
jle
ss
push
les
movs
pop
sbb
in
mov
or
xor
loopne
loop
shl
fst
cmc
pusha
and
or
adc
jmp
stos
sbb
leave
test
lods
mov
movs
push
outs
xor
std
shl
fsub
mov
mov
push
popa
aas
add
pusha
sub
shl
jbe
outs
add
and
mov
das
call
dec
into
push
adc
cs
cmc
pcmpgtb
lea
add
std
fs
adc
lods
stos
mov
mov
call
adc
jmp
cmp
dec
push
sbb
lahf
mov
inc
cmp
mov
js
clc
jge
mov
test
out
and
jmp
popf
adc
jle
inc
inc
sub
cmc
jge
mov
xor
mov
rol
movs
scas
fmul
and
xchg
pop
in
sbb
xchg
out
(bad)
mov
xor
add
test
repz
mov
in
inc
xor
or
jge
mov
enter
(bad)
adc
sahf
retf
pushf
das
inc
enter
cmp
lahf
adc
or
xchg
cs
outs
hlt
aas
or
into
out
and
inc
nop
xchg
jns
jbe
adc
mov
mov
cdq
cmp
sub
in
pop
mov
or
add
std
jl
clc
xchg
xchg
mov
call
lods
add
jp
dec
push
inc
mov
push
int
mov
ins
enter
mov
mov
shl
adc
fwait
arpl
xor
and
int3
dec
mov
ins
jp
jecxz
or
inc
sbb
scas
pop
sbb
repnz
retf
js
sbb
mov
js
jo
daa
push
int3
add
jmp
in
lods
push
jne
sub
pusha
xor
and
push
call
cmc
jo
jecxz
bound
inc
or
mov
iret
neg
test
cmp
rcl
ins
add
add
repz
arpl
call
jns
popf
jmp
cmp
inc
push
mov
test
(bad)
in
sbb
or
out
repnz
pop
jl
popf
jp
data16
mov
hlt
imul
(bad)
nop
mov
sub
fsubrp
cmp
addr16
aas
hlt
sbb
mov
lods
sbb
(bad)
push
test
adc
xlat
jecxz
pop
xor
jno
lahf
sub
inc
test
enter
sti
mov
xor
mov
popa
scas
xchg
(bad)
ja
retf
push
cmp
push
xchg
loop
xchg
jns
popa
daa
int3
pop
cld
push
jmp
daa
nop
sbb
pop
mov
ret
daa
std
(bad)
dec
cmp
loope
mov
mov
imul
jnp
push
mov
add
enter
call
xchg
and
jmp
stos
sbb
ja
sub
dec
sbb
or
aad
loopne
xchg
and
push
mov
popf
xor
push
jnp
call
inc
out
adc
ja
mov
xchg
xchg
dec
or
out
xor
test
bound
lock
stos
jnp
sysexit
(bad)
or
xor
(bad)
repz
add
mov
cmps
out
mov
ret
cmp
movs
lods
fild
or
add
push
pop
fimul
mov
jo
lahf
(bad)
fcomp
imul
jle
movs
std
out
dec
sbb
jle
in
pop
mov
ins
xchg
mov
push
inc
pop
lea
sbb
das
test
mov
mov
ja
not
jns
jge
cmp
xchg
cmp
cwde
pop
cmp
scas
fadd
dec
fldenv
jno
dec
retf
jno
push
xchg
mov
lock
and
dec
lds
adc
ret
retf
cmps
cmp
inc
xor
out
mov
retf
loop
sahf
(bad)
daa
pop
and
sbb
lahf
inc
and
out
out
jmp
sbb
in
adc
lahf
mov
les
push
mov
aaa
lea
or
mov
jo
pop
inc
mov
or
scas
mov
xchg
mov
sub
jge
addr16
xchg
xchg
clc
sbb
rol
out
sub
jns
xor
xor
ret
cli
js
daa
jecxz
cmc
add
cmps
mov
pop
icebp
inc
cmp
das
test
dec
xchg
inc
in
leave
ins
lea
js
es
ja
mov
ins
inc
iret
cmp
std
nop
xor
sbb
stos
mov
pusha
mov
jb
in
ror
movs
pop
push
jmp
fidiv
jnp
sbb
mov
dec
fs
mov
adc
xor
and
sub
cs
(bad)
cmp
pusha
pop
movs
or
cmp
mov
and
movs
dec
test
test
pop
fldcw
dec
mov
test
push
push
cmp
sbb
mov
mov
xor
jo
xchg
jmp
mov
fsub
push
add
sub
dec
idiv
imul
adc
and
mov
mov
dec
imul
or
(bad)
jns
test
(bad)
adc
add
jns
popa
das
cmp
dec
jmp
cli
inc
nop
fmul
stc
jne
shr
jnp
add
xor
int3
or
stos
or
add
retf
dec
xchg
push
cmps
imul
shl
dec
xor
or
sbb
arpl
(bad)
clc
mov
and
mov
or
push
jle
push
imul
jne
push
jge
dec
fidiv
mov
add
(bad)
cmp
retf
dec
or
mov
pop
mov
int
das
add
mov
loop
push
push
cmp
cmp
loop
andps
mov
je
mov
ss
daa
mov
cmps
call
test
ret
jns
adc
push
push
xor
and
popa
mov
mov
sub
cmp
dec
adc
cmc
xchg
push
push
xchg
mov
dec
cmp
cmp
out
daa
imul
out
mov
dec
loop
jle
jne
mov
cmp
call
jo
push
lahf
mov
adc
in
in
repnz
rol
aam
mov
and
push
fdiv
ret
mov
stos
and
adc
sbb
(bad)
jb
dec
adc
cmp
jmp
stos
cdq
rcr
push
mul
mov
into
jl
pushf
cld
sbb
clc
xchg
inc
rcr
aas
push
mov
and
xor
fwait
retf
push
test
retf
dec
add
enter
mov
inc
hlt
in
mov
mov
ja
sbb
int
mov
xor
push
xor
scas
and
sub
dec
jnp
push
adc
jbe
out
jo
les
(bad)
iret
push
sub
inc
ficomp
mov
sti
mov
or
inc
adc
jo
into
mov
cmp
fisttp
gs
cli
out
jge
mov
out
pop
js
jo
push
call
fdiv
outs
ret
jo
add
loopne
xchg
rol
sub
push
(bad)
push
pusha
mov
(bad)
cmp
(bad)
in
xchg
dec
dec
leave
icebp
dec
pusha
(bad)
mov
rol
lods
imul
pop
call
(bad)
xlat
dec
mov
js
mov
jmp
(bad)
pushf
inc
adc
nop
fcmovbe
cli
leave
stos
pop
ins
sub
shl
out
mov
mov
jl
cmp
dec
das
add
test
je
xor
and
shr
adc
mov
ror
mov
fstp
sub
ins
aas
dec
repz
mov
icebp
pop
jg
cmp
add
xchg
pop
mov
rcl
xor
ja
in
sub
mov
scas
xlat
push
retf
add
cmp
imul
or
test
push
pop
leave
call
loop
sub
mov
push
pop
(bad)
sahf
dec
js
xor
xor
lods
bound
nop
xlat
out
pop
clc
out
movs
jg
adc
pop
pop
out
por
les
dec
xchg
xor
ins
jbe
or
(bad)
scas
retf
dec
neg
into
repz
mov
call
add
xchg
jo
sti
jno
cmp
and
xchg
cmp
cmp
mov
jl
cmps
repz
in
push
(bad)
push
and
inc
pop
fcom
pop
cmps
push
sbb
or
loopne
cmp
dec
jmp
pushf
inc
sub
xchg
iret
retf
call
push
mov
in
mov
mov
mov
arpl
lahf
jns
push
dec
or
cmp
xchg
pop
pop
push
jge
jecxz
or
test
jns
fiadd
dec
adc
dec
icebp
dec
test
add
xchg
imul
aam
inc
not
nop
popf
push
push
ss
test
fdivr
xchg
or
dec
sti
adc
or
rol
popa
imul
mov
sub
mov
lock
out
cmps
outs
int3
inc
pushf
mov
xlat
cmp
bound
scas
and
fidivr
je
icebp
das
les
cld
imul
scas
mov
or
mov
dec
push
jge
and
cli
xor
dec
mov
fptan
imul
xor
test
push
adc
scas
(bad)
repz
jp
test
inc
enter
xchg
jno
movs
je
add
into
or
fisub
outs
dec
mov
aaa
add
leave
cmp
sbb
xor
mov
inc
pop
jbe
sbb
push
stc
ins
iret
adc
xchg
sar
loope
in
lods
pop
lods
ds
xchg
adc
ins
sbb
mov
int
cmps
inc
mov
push
lahf
stos
add
movs
jnp
ffree
sti
mov
push
cmp
nop
cli
outs
pop
pop
fisttp
pop
pop
xchg
outs
push
int3
mov
dec
xor
mov
push
push
adc
test
or
jmp
dec
pop
add
mov
jl
test
pop
out
mov
push
movs
stos
mov
lea
stc
add
pop
xchg
push
pop
adc
xchg
pusha
xor
pusha
xor
sub
cmp
loop
cmp
loopne
or
neg
push
jl
iret
rcl
push
or
loopne
loop
rol
add
retf
pushf
pop
addr16
fs
outs
jo
int
pop
jecxz
ffree
push
sar
sub
into
xor
pop
stos
jg
aad
jl
pop
pop
loope
mov
inc
fistp
fimul
(bad)
push
adc
or
call
mov
push
in
fnsave
push
or
dec
and
mov
data16
adc
test
and
xchg
daa
pop
(bad)
int3
(bad)
or
or
cmp
pushf
mov
dec
cdq
lea
cmp
or
mov
mov
inc
push
xchg
loopne
xchg
dec
mov
push
push
jns
jp
adc
jo
fisttp
mov
addr16
call
(bad)
cmps
cmp
xchg
ja
jle
leave
jp
ss
sub
add
js
xchg
pop
sub
xchg
imul
add
adc
aam
jo
push
je
arpl
push
dec
xchg
in
mov
cdq
push
cdq
jmp
(bad)
sbb
add
test
dec
cmps
(bad)
out
repnz
ret
jb
mov
into
cmp
cmps
repz
mov
in
push
and
sbb
fidiv
call
dec
pop
in
cld
jns
jno
or
mov
sub
aam
das
fwait
jle
xor
jecxz
ins
shr
cmp
repz
mov
int3
test
sub
mov
mov
mul
pop
clc
mov
jno
mov
mov
stos
ins
cmps
pop
and
call
mov
jbe
repnz
fwait
outs
push
ud0
inc
clc
sbb
sahf
jo
cmp
push
xor
rcl
sbb
fldenv
ret
int
mov
sbb
icebp
jne
pushf
fwait
pop
rcr
mov
mov
add
sti
jge
mov
in
es
mov
and
xchg
or
xor
mov
add
or
rcl
push
sbb
xor
mov
pop
in
jmp
call
sahf
ja
sbb
(bad)
fcom
jns
xchg
jae
inc
lea
cs
jmp
std
jmp
int3
and
outs
outs
sbb
ds
sub
mov
mov
jg
jno
dec
adc
xor
mov
adc
xchg
adc
imul
retf
test
jmp
or
ja
jnp
pop
int3
add
add
mov
mov
xor
push
pop
xor
pop
popa
push
(bad)
stc
add
push
outs
pop
shl
add
sub
and
mov
xlat
or
xchg
das
inc
jg
pop
rcl
jg
mov
into
sbb
(bad)
in
xchg
dec
sar
push
scas
aaa
jmp
(bad)
(bad)
jmp
or
(bad)
(bad)
pop
jno
push
or
ins
imul
or
loope
xchg
cdq
push
pop
rcl
lahf
inc
dec
and
xor
mov
out
leave
push
jne
mov
mov
xor
out
jo
mov
out
mov
clc
xchg
inc
lods
call
jg
jae
fisub
neg
push
sbb
pop
lods
(bad)
leave
inc
or
das
sbb
or
push
iret
mov
leave
cmp
mov
cld
mov
div
cmc
xchg
test
adc
cmp
xchg
test
loop
cli
push
fwait
jno
ret
jp
repnz
enter
fisttp
std
out
outs
cmp
inc
sar
sub
ror
jecxz
int
cmp
pop
pop
lods
call
js
xor
or
inc
cwde
or
and
fs
xor
das
inc
push
mov
stc
fbstp
fsubp
les
cmp
cdq
into
loope
mov
adc
push
outs
lods
not
or
cmp
dec
inc
arpl
jge
push
mov
es
lds
jge
jmp
test
push
mov
iret
push
jae
cmp
ins
jnp
and
test
mov
mov
inc
std
imul
outs
mov
cmp
fist
mov
push
bnd
dec
fs
aam
shr
mov
aas
mov
xor
lods
mov
repz
lea
push
dec
push
pop
stos
push
jae
repz
jmp
mov
ret
lahf
test
(bad)
jne
jae
test
push
and
inc
dec
jecxz
cmps
cmp
xchg
jo
rcl
dec
mov
mov
jb
jno
mov
push
pop
xchg
and
pop
loop
ror
inc
mov
or
test
adc
dec
stc
jno
mov
xor
mov
neg
mov
iret
out
add
add
addr16
mov
repnz
loop
and
cmc
or
mov
sub
clc
shl
cmps
push
shr
out
repz
fstp
jecxz
shr
pop
jbe
cwde
push
jmp
imul
ret
add
mov
outs
cmc
and
in
jl
and
ins
dec
and
cmp
daa
add
std
push
int
ss
gs
pop
add
das
push
fcom
hlt
inc
shl
or
xchg
xlat
call
sti
(bad)
mov
jmp
mov
lock
into
or
iret
or
push
lock
mov
popf
gs
shl
xor
ins
pushf
push
retf
pop
nop
scas
ja
retf
add
mov
sub
popf
pushf
into
lods
mov
aaa
outs
inc
push
adc
dec
in
pcmpeqb
ret
sub
or
jge
dec
xchg
gs
pop
pop
icebp
push
pop
retf
adc
jp
mov
dec
jne
push
(bad)
add
les
int3
psrld
pusha
iret
and
mov
mov
xor
dec
add
cld
repz
out
cld
test
sbb
mov
data16
or
sub
es
cdq
sub
fisttp
mov
sub
pop
sub
call
sub
sbb
fidivr
push
push
pop
(bad)
pop
(bad)
push
xlat
xchg
int3
xor
mov
ss
jmp
dec
cli
test
mov
or
cmp
pop
outs
push
sbb
cmp
ret
adc
fnsave
ds
fidiv
fcmovnbe
cld
not
add
pop
pop
inc
push
popf
xchg
rol
mov
std
in
sub
int
pusha
loopne
mov
jo
or
inc
les
or
mov
or
out
cmps
xor
sub
bound
inc
cmps
mov
cwde
xchg
mov
jmp
or
call
daa
sub
std
cmp
mov
jecxz
push
jo
test
push
out
and
mov
ror
adc
out
or
mov
or
adc
push
cdq
nop
add
xlat
(bad)
mov
retf
lds
lock
loopne
ja
(bad)
stc
adc
cmp
sbb
xchg
nop
(bad)
mov
sub
lods
mov
jmp
mov
sbb
mov
xor
mov
xchg
mov
cmp
mov
and
neg
stos
int3
inc
xchg
adc
jae
sub
jmp
jbe
loopne
retf
jmp
div
(bad)
mov
mov
jns
jne
mov
lock
xchg
ficom
add
push
push
adc
xchg
pop
jmp
cdq
icebp
xchg
jp
push
pop
cmp
jbe
mov
aas
adc
mov
lock
xchg
or
cwde
mov
mov
jns
(bad)
push
xchg
in
sahf
add
fxch
pop
pop
mov
pop
test
loopne
pop
cs
scas
in
push
dec
pop
out
ins
cmp
out
add
and
mov
xchg
push
xchg
jnp
inc
inc
or
arpl
sbb
ret
and
jnp
aaa
(bad)
push
mov
xor
cld
push
adc
lods
push
and
cmp
sbb
cld
push
or
mov
(bad)
push
xchg
add
enter
ins
loope
outs
imul
cli
xor
mov
cmps
lods
and
cdq
mov
mov
or
or
mov
jge
mov
mov
adc
imul
sub
mov
inc
push
arpl
push
sbb
jo
shr
mov
in
cmp
xchg
outs
adc
bound
sahf
cmp
in
out
push
addr16
mov
test
inc
jle
cmp
inc
movs
test
imul
dec
add
ret
push
sar
aad
push
mov
(bad)
ins
scas
jge
in
loopne
sub
test
jmp
mov
adc
clc
popa
fild
adc
xchg
fwait
and
mov
and
arpl
cli
pop
or
sub
out
mov
sti
jg
bound
repnz
out
or
cdq
dec
and
add
adc
pop
or
mov
mov
ja
(bad)
add
mov
ja
rcr
cmp
xor
adc
push
clc
stos
push
fsub
xchg
push
jge
xor
xor
les
mov
lods
lock
movs
ffreep
xor
mov
inc
push
adc
shr
dec
packuswb
adc
xchg
enter
mov
mov
or
pop
pusha
cmp
fwait
pop
gs
out
cmp
dec
sahf
inc
ds
in
mov
je
push
sbb
push
xor
cld
pop
dec
sar
in
push
xlat
out
push
sub
inc
add
or
push
xchg
shl
jmp
push
add
jle
cmps
jg
jmp
pop
cwde
add
cwde
repnz
icebp
shl
jae
pop
jl
loopne
into
inc
retf
pop
push
arpl
jg
addr16
fcomp
icebp
pop
add
test
test
js
dec
into
fld
int
mov
fstp
cmp
xor
fcom
repnz
leave
pop
sbb
or
jnp
push
dec
xchg
and
cmps
shl
sub
cmp
mov
arpl
inc
out
jl
xchg
xchg
pop
xor
cs
xchg
and
in
fld
and
sbb
stc
fsubr
adc
mov
mov
pop
push
ins
xchg
clc
jae
mov
pop
test
sbb
mov
cdq
jmp
and
or
mov
gs
rcl
xor
stos
inc
fcmovu
xor
or
xchg
sub
in
push
pop
xchg
cmc
(bad)
popf
call
pop
mov
mov
mov
and
or
inc
jl
(bad)
adc
jmp
out
push
mov
xor
leave
(bad)
je
and
into
outs
je
adc
in
addr16
dec
movs
cmp
mov
icebp
jg
nop
or
ss
lock
aam
adc
aas
ins
popf
ja
hlt
loopne
fsubr
clc
aas
xor
jecxz
jae
or
push
retf
neg
xchg
push
mov
xor
xchg
arpl
push
shl
pusha
frstor
shl
stc
jb
ins
inc
xchg
scas
sbb
mov
dec
push
ds
ds
not
sub
lock
enter
push
dec
mov
mov
iret
aad
add
out
sub
dec
jo
ja
or
loopne
mov
loop
pop
imul
rol
out
repz
mov
and
pusha
arpl
pop
push
mov
push
xor
movs
popa
sbb
sub
dec
or
and
outs
inc
cmp
ss
in
pop
and
popf
xchg
cmp
jecxz
ins
(bad)
bound
in
and
loope
push
fs
fst
outs
movs
mov
jnp
add
adc
jecxz
inc
pop
pop
mov
jne
daa
leave
or
mov
inc
mov
push
sti
shl
fsub
cmp
adc
hlt
inc
in
inc
and
cmp
add
or
inc
sub
pusha
data16
out
lds
adc
cmps
dec
rcr
cmp
mov
(bad)
xchg
scas
inc
jns
inc
std
and
outs
cld
mov
into
retf
dec
clc
add
sub
(bad)
jmp
lds
popf
push
mov
ds
jae
xor
mov
cmp
clc
outs
add
mov
adc
adc
jecxz
test
pop
dec
imul
inc
jne
arpl
adc
sub
mov
mov
cmc
jns
dec
sbb
loop
pop
dec
jnp
dec
push
push
or
lds
imul
xchg
jb
mov
and
neg
sub
rcl
adc
push
inc
or
cmps
xchg
jmp
fwait
int
repz
adc
xor
sti
or
xchg
adc
push
test
xchg
lods
test
stos
add
(bad)
pop
das
cdq
cmc
adc
sub
adc
jge
dec
mov
adc
arpl
in
and
aas
jmp
xchg
test
lock
jp
xchg
and
out
and
pop
cmp
push
lea
sbb
ss
xchg
and
xor
test
or
mov
or
imul
es
(bad)
iret
pop
in
leave
and
cdq
or
icebp
xchg
enter
es
pop
js
adc
int
pop
icebp
mov
stc
cdq
and
mov
sahf
scas
hlt
lods
out
das
mov
jbe
dec
inc
out
idiv
adc
icebp
stos
sbb
jo
jno
jg
(bad)
mov
loop
push
into
call
jl
das
mov
push
(bad)
clc
retf
aad
adc
mov
enter
test
ret
inc
adc
lods
cmps
jne
aam
sub
ret
xchg
das
fiadd
pop
mov
test
arpl
xor
mov
jmp
dec
mov
mov
and
adc
jp
dec
push
in
sbb
sbb
jae
push
popa
jecxz
lahf
dec
xchg
push
xor
jne
and
xchg
call
mov
ss
int
inc
gs
dec
pop
into
inc
lds
pop
loopne
lods
xor
push
fdivr
and
mov
js
lock
loope
or
cdq
(bad)
fdiv
(bad)
push
xor
mov
loope
or
dec
repnz
push
mov
add
test
xor
out
inc
outs
out
sub
xchg
xchg
xchg
repnz
cmps
ins
sti
out
mov
cmp
cmp
push
cmc
div
scas
loop
ins
push
push
pop
sbb
add
lods
cmc
stc
rol
les
inc
pop
and
retf
push
cmp
inc
xchg
rcr
push
or
ror
jl
ret
daa
adc
icebp
loop
jg
stos
rol
out
jne
inc
aam
or
cld
lock
pop
js
in
push
cmp
loopne
loopne
and
add
test
rol
jno
cmp
shr
scas
cmp
fs
pusha
and
imul
into
rcr
es
outs
fnstsw
xor
xchg
and
jle
dec
out
pop
sub
and
int3
popa
lods
scas
add
sahf
and
mov
and
pop
seto
add
sub
sbb
dec
es
jecxz
dec
and
mov
cld
sbb
neg
js
mov
call
jne
retf
push
dec
jmp
addr16
div
outs
add
fld
rol
imul
jp
mov
fcmovne
sahf
cs
add
(bad)
jge
lock
push
xor
jmp
aaa
mov
push
xchg
aam
je
push
mov
dec
loop
cwde
or
fdiv
sbb
mov
pop
push
gs
jmp
and
test
jp
addr16
popa
fsubrp
xor
mov
pusha
and
or
ret
bound
push
retf
push
mov
mov
and
pop
or
sar
mov
mov
ret
cmps
test
retf
mov
int
outs
retf
add
inc
enter
test
sti
xchg
mov
out
in
inc
jbe
xor
inc
shl
dec
loope
dec
push
repz
cmps
inc
jns
xchg
mov
pop
push
ja
repnz
mov
dec
not
push
cli
idiv
cmp
jbe
and
lods
mov
js
(bad)
fbld
call
mov
cmp
clc
test
cmp
cwde
test
ja
adc
(bad)
jl
fistp
in
jno
xor
add
push
stc
mov
and
je
test
mov
mov
mov
in
sub
dec
xchg
and
adc
rcr
repz
mov
lock
mov
aas
inc
mov
or
add
adc
mov
or
jbe
push
jns
jb
jno
push
and
aas
jbe
mov
and
out
fcomip
mov
jmp
xchg
(bad)
stos
js
pop
cmc
(bad)
jmp
mov
in
mov
mov
adc
jmp
sub
inc
adc
adc
cmp
sbb
pop
or
inc
outs
cmps
sub
dec
clc
repz
mov
mov
enter
je
ins
lods
cmp
dec
inc
inc
pop
sbb
aaa
rcr
(bad)
xchg
hlt
(bad)
in
mov
pop
push
mov
xchg
sub
out
aam
dec
cmp
stos
mov
imul
test
(bad)
xor
xor
mov
movs
fsub
sbb
inc
call
dec
or
out
pushf
xchg
jns
int
ins
cdq
lods
mov
dec
lock
cmp
out
jmp
cmovo
push
fisttp
push
lods
popa
call
int3
lods
pop
mov
jbe
cmovnp
fdiv
adc
push
pop
or
in
push
stos
fwait
jecxz
adc
mov
ins
inc
mov
ror
xor
cmp
das
(bad)
cdq
fstp
add
mov
shl
mov
sub
fucomp
xor
mov
ret
push
pusha
xchg
push
xchg
in
xchg
std
jmp
in
dec
inc
push
xor
daa
add
popf
mov
inc
int
shl
pushf
pop
rcl
push
pop
dec
sub
sub
xor
or
mov
stc
dec
mov
in
inc
cld
aaa
pop
inc
imul
fld
inc
imul
call
add
aad
mov
inc
in
imul
mov
(bad)
(bad)
mov
add
or
jle
add
jns
enter
mov
sub
(bad)
pop
cmps
mov
test
xor
test
sub
fnsave
daa
fdivr
imul
adc
pop
and
jle
(bad)
(bad)
int
push
ret
xor
repnz
ins
cmc
mov
in
push
stos
dec
popf
xchg
stos
loop
pop
mov
push
icebp
xor
(bad)
push
pop
and
mov
loope
push
mov
(bad)
pop
dec
dec
cmps
adc
popa
sub
fcomi
movs
es
xor
add
(bad)
idiv
push
xor
in
adc
push
cs
dec
jl
(bad)
push
mov
sub
out
sbb
scas
fcomp
(bad)
cli
rcl
sbb
repz
adc
scas
mov
mov
into
test
repz
jmp
leave
retf
pop
pusha
xor
or
and
test
out
cmp
mov
sub
adc
sti
jb
or
mov
push
stos
xchg
ins
lods
sub
mov
(bad)
in
mov
xor
dec
cmc
mov
push
pop
xchg
mov
imul
mov
loopne
gs
mov
in
xchg
mov
call
(bad)
out
inc
push
jl
fwait
out
outs
hlt
cwde
repnz
sub
repz
outs
sbb
pusha
sbb
push
mov
xor
push
adc
and
loop
and
jge
or
pop
fmul
in
or
mov
inc
sbb
push
sbb
jge
pop
sbb
popf
mov
sbb
scas
sub
mov
sub
scas
pop
push
fdivr
xlat
mul
aad
sbb
mov
in
and
xchg
fs
and
jo
test
leave
pop
xchg
push
jg
sub
retf
ins
dec
jp
inc
cmp
pop
pop
pushf
xor
push
rcr
mov
int
add
int3
dec
in
cli
fcomp
cmp
dec
loop
sub
sbb
daa
adc
pop
mov
inc
jle
ret
movs
sbb
or
nop
movs
jb
lods
pop
dec
icebp
test
xor
mov
adc
jo
add
std
shl
lods
sbb
and
outs
xor
mov
push
or
cld
adc
xchg
xchg
xor
push
imul
push
push
mov
dec
jl
xor
fwait
outs
mov
dec
nop
cmp
push
jmp
add
mov
or
xchg
sub
push
ds
or
outs
lea
cld
inc
retf
push
mov
mov
loop
cmps
inc
stc
ret
fimul
push
sbb
and
xchg
sub
sahf
rcr
lods
push
(bad)
pop
loopne
cmp
mov
xchg
dec
stos
jmp
mov
(bad)
push
arpl
jmp
ficom
push
cmp
mov
out
xchg
fild
dec
push
inc
ret
or
xor
xchg
and
pop
movs
imul
push
mov
mov
jle
jno
jp
pop
scas
aas
stos
fnstsw
and
xchg
sbb
repz
jbe
dec
cmp
sub
(bad)
adc
jns
mov
aam
cld
and
inc
sub
mov
stos
sub
lock
retf
(bad)
mov
and
pusha
loopne
push
dec
xor
jle
mov
xor
xor
sbb
sbb
mov
adc
ins
and
mov
nop
jb
and
sar
dec
mov
jnp
fwait
pop
rcl
push
dec
(bad)
pusha
retf
add
test
test
repnz
mov
adc
sbb
int
cmp
out
pop
out
add
xor
cdq
sub
jecxz
aaa
mov
sbb
das
push
mul
pop
stc
call
pop
mov
pop
dec
std
cld
gs
imul
push
cmp
jmp
div
leave
popf
jle
mov
push
sbb
sbb
pop
dec
daa
gs
outs
jo
test
jns
add
or
idiv
push
inc
not
inc
sub
mov
inc
mov
fucomip
pop
push
sub
popa
pop
test
ds
add
mov
adc
test
js
sbb
sub
dec
jp
out
inc
outs
push
push
xor
rcl
(bad)
jmp
mov
dec
or
leave
push
pop
sbb
fnsavew
cmps
addr16
xchg
xchg
(bad)
cmp
dec
xor
std
push
mov
add
mov
sar
lock
or
push
fnstcw
jecxz
dec
add
arpl
imul
sub
sub
lock
lods
mov
aam
gs
mov
sysret
in
idiv
mov
icebp
mov
mov
pop
jle
ficom
adc
mov
sub
fld
inc
sbb
cmp
cli
je
cs
and
push
inc
lods
and
mov
ficom
pushf
loope
mov
dec
test
pop
xchg
in
sub
std
inc
jbe
int
cmp
idiv
mov
mov
sub
mov
add
cmps
xchg
sbb
push
cmp
retf
mov
rol
ret
bound
ins
fcomp
mov
cmp
mov
cwde
je
or
adc
dec
pop
ds
add
jmp
mov
popf
mov
addr16
out
out
cmp
dec
shl
ret
stos
shl
bound
outs
mov
pusha
and
mov
stos
sbb
leave
xor
push
movs
cmc
fucomi
test
or
inc
inc
and
push
sbb
cdq
push
mov
mov
fcomp
ret
addr16
sub
outs
jle
fldenv
cmp
je
xor
in
popf
daa
adc
and
lock
test
clc
ret
add
addr16
cmp
xor
inc
bound
idiv
add
fmul
pop
xchg
cld
loope
(bad)
test
aaa
cmc
fsub
enter
dec
pop
pop
cli
cwde
scas
ins
sbb
cmp
(bad)
xor
jmp
retf
jl
cs
and
mov
or
shl
mov
fldl2e
bound
xor
aaa
pop
das
aaa
mov
jl
cmps
scas
and
push
push
rcr
gs
mov
popa
pop
push
jle
pop
dec
fwait
out
mov
ror
and
clc
lods
mov
adc
in
cmps
aam
popf
or
std
out
fwait
adc
les
jb
dec
mov
in
inc
in
mov
and
imul
sub
adc
push
lods
xchg
add
cmp
shl
mov
enter
bound
push
jb
push
cld
push
lea
addr16
call
scas
push
mov
fbstp
dec
mov
bsr
adc
(bad)
jns
lock
sbb
lods
and
stos
hlt
add
pop
jle
inc
mov
pop
stos
cmps
out
mov
add
inc
sub
stc
sub
ds
and
add
xor
or
dec
xchg
(bad)
shr
sub
and
mov
stos
xor
nop
push
or
inc
retf
fwait
in
push
or
mov
sub
imul
in
mov
test
into
xchg
pop
jne
pop
loop
retf
xchg
add
pop
xchg
dec
inc
sahf
rcr
imul
daa
pop
jae
xchg
push
mov
ror
inc
lahf
pushf
addr16
jae
push
(bad)
mov
ss
addr16
mov
push
(bad)
mov
mov
xchg
sub
add
sub
and
or
mov
addr16
mov
adc
leave
xor
fdiv
mov
ds
js
push
dec
inc
shl
lods
mov
mov
fldcw
pushf
dec
aaa
add
jge
adc
or
xor
push
shl
mov
clc
idiv
(bad)
(bad)
mov
xor
adc
sar
pop
and
mov
push
in
xor
shl
(bad)
adc
pusha
cvtps2pi
jo
dec
fs
push
jle
(bad)
mov
(bad)
fisttp
mov
xor
dec
adc
shr
or
xchg
mov
mul
mov
mov
out
cwde
and
ss
data16
pop
pushf
dec
rep
in
ins
not
daa
jnp
bound
jle
test
mov
(bad)
or
fst
cmp
jns
in
xchg
(bad)
cmp
sahf
or
mov
(bad)
mov
(bad)
fdivr
scas
je
std
jge
stos
dec
push
daa
and
icebp
outs
cmp
in
push
lods
call
fcmovne
push
add
ja
dec
sub
in
into
cwde
push
xor
stos
xor
cmc
cwde
xor
adc
jns
adc
cmc
movs
mov
mov
scas
pop
cmps
jo
neg
test
jae
jae
dec
or
ins
mov
fimul
aas
inc
jg
mov
pop
sub
sub
fisubr
repnz
out
mov
lods
mov
mov
int
sub
jo
call
dec
adc
mov
test
outs
in
clc
popa
lahf
xor
int
jb
and
int3
adc
fld
sti
setg
xlat
or
push
fsubr
sbb
inc
arpl
pop
sbb
fs
xor
sbb
inc
push
add
push
das
push
arpl
mov
mul
xchg
inc
jno
clc
and
xor
pop
cmp
xor
outs
movs
sub
add
jns
mov
and
sub
js
dec
add
retf
test
fist
xchg
lods
cmp
jle
rcr
inc
fadd
mov
imul
repnz
paddsb
push
(bad)
imul
sub
dec
arpl
not
(bad)
push
cs
pop
adc
mov
enter
in
jp
xchg
imul
fs
xchg
clc
and
inc
pop
pop
cmp
loop
xor
xchg
enter
pop
out
add
(bad)
mov
clc
sub
jmp
repz
push
out
mov
loope
mov
call
sbb
sub
ds
xor
enter
xchg
mov
adc
xor
aad
dec
dec
js
nop
shr
cld
pop
jle
loopne
dec
adc
or
sub
dec
sti
xchg
mov
cwde
cmc
jmp
jns
int
add
dec
xor
mov
xchg
test
out
shl
ret
lock
test
rcl
sub
fsubr
repnz
test
and
adc
xor
in
(bad)
and
push
mov
mov
push
xchg
dec
or
mov
inc
aaa
jnp
adc
scas
repz
cld
cs
jne
ss
retf
xchg
cs
add
pop
push
imul
adc
pusha
add
fsubr
sbb
add
xor
fcom
and
fstp
mov
or
scas
sub
sbb
(bad)
movs
jae
mov
fiadd
rcr
mov
mov
lea
mov
mov
adc
xlat
push
aas
or
shr
shl
and
std
leave
dec
ror
and
pop
je
leave
xchg
dec
daa
and
imul
cmps
jno
movntps
xor
fstp
sub
push
iret
neg
dec
mov
mov
call
mov
pop
ins
jne
sub
lods
outs
fdivr
stos
push
pop
lock
and
sub
lahf
add
pushf
repz
jp
nop
(bad)
cwde
or
sub
mov
fcomp
ins
inc
xchg
mov
iret
mov
mov
xor
hlt
arpl
dec
sti
push
arpl
stc
sti
xor
and
lods
in
fldcw
fisub
stc
jns
jl
sti
(bad)
out
inc
adc
call
mov
xchg
loop
xchg
das
call
outs
cli
leave
scas
leave
dec
jae
leave
inc
rcl
in
shr
and
or
loop
pop
jecxz
js
(bad)
pop
in
jl
adc
jmp
addr16
xchg
xlat
mov
test
jae
in
bound
adc
inc
mov
add
add
cmp
fmul
jl
cdq
fcomp
mov
push
or
bound
fsub
push
xor
mov
adc
inc
mov
inc
mov
cld
cmps
push
clc
and
or
sbb
adc
cmps
dec
mov
sbb
xchg
loope
jmp
or
or
out
jl
dec
jnp
add
ror
push
push
jmp
and
fild
das
cmc
xchg
add
fcomp
sbb
pushf
movs
pusha
pop
bound
add
scas
push
cli
xchg
fld
int
aaa
out
shl
jge
int
retf
mov
lahf
push
inc
xchg
dec
mov
xor
push
das
push
movs
mov
push
test
push
ja
cmps
dec
les
cmc
not
fsubr
cmp
hlt
pop
test
in
jg
loop
rol
popf
pop
dec
lahf
jmp
mov
pop
push
push
shl
outs
lea
mov
push
fsub
jl
pop
push
loopne
fwait
rcr
or
cmp
xchg
(bad)
fucomi
inc
or
retf
in
repz
dec
test
fs
sbb
pop
push
mov
xor
mul
hlt
repz
mov
adc
push
pop
adc
aad
pop
sti
fidiv
outs
sbb
leave
xor
or
dec
mov
(bad)
and
inc
loopne
or
dec
test
mov
sub
out
test
xchg
xor
sub
push
ss
in
sub
and
xchg
rcr
xchg
(bad)
out
cmp
or
mov
and
jno
mov
mov
mov
sbb
cmp
aad
cmps
les
scas
clc
sbb
lods
movs
loope
or
stc
mov
stos
jl
lock
repz
mov
sar
lds
into
fsub
cmps
inc
cmps
or
stos
jns
enter
xchg
xchg
cwde
(bad)
pop
sub
inc
test
js
push
push
mov
add
adc
cmc
push
sbb
pop
cdq
retf
push
push
xchg
movs
xor
jmp
movs
stc
inc
mov
add
retf
(bad)
and
sub
(bad)
stc
mov
in
rep
or
xchg
jmp
sbb
sbb
psrlw
dec
pop
fdiv
push
cmps
call
adc
adc
pop
fcmovnb
dec
lds
mov
cmc
push
rol
xchg
mov
nop
lds
inc
xchg
xor
xchg
lahf
lods
adc
mov
scas
ja
fs
mov
cs
cmp
xchg
outs
dec
fisttp
sbb
mov
push
mov
cmp
fldenv
imul
mov
cld
xlat
pop
loopne
nop
in
sbb
sub
pop
dec
push
mov
dec
stc
scas
test
retf
mov
int
ins
adc
adc
enter
ins
out
jae
dec
in
dec
aaa
fwait
cmp
movs
stc
inc
popf
repnz
fimul
adc
xor
pop
sbb
(bad)
and
lods
ficom
enter
add
mov
bound
jl
and
jns
je
and
aas
rol
not
(bad)
xor
push
mov
dec
cmp
xor
adc
jo
outs
or
or
cmp
mov
shr
jb
push
mov
xchg
repnz
int
mov
and
or
bound
add
loop
push
sub
pop
or
jmp
inc
cli
inc
add
add
xchg
or
cmp
mov
imul
push
pop
ret
ja
xchg
fbld
pop
int3
push
loop
mov
pop
pop
out
ds
aas
inc
cmps
mov
mul
mov
pusha
pop
jp
lea
repz
mov
mov
pop
in
ss
pushf
mov
add
test
js
fstp
mov
sbb
sub
xor
jmp
sbb
fnstenv
cdq
push
and
shr
js
mov
lods
xor
xor
push
mov
not
ja
pushf
mov
push
xor
or
pop
push
repnz
data16
mov
mov
lahf
retf
or
mov
inc
adc
rcr
inc
out
stos
jo
sbb
scas
loope
xor
out
lds
loop
es
in
call
push
and
out
mov
fucomi
cmp
popa
clc
mov
dec
xor
cmp
das
lea
ja
adc
fnsave
aam
stos
icebp
in
std
movs
scas
xchg
cmp
imul
and
sub
inc
pop
ins
dec
mov
push
push
push
out
mov
and
push
leave
mov
add
es
jmp
mov
or
call
mov
jl
js
mov
or
arpl
and
out
or
in
ret
in
inc
loope
mov
loop
out
aaa
push
nop
add
and
mov
repz
mov
inc
pop
add
mov
nop
push
add
clc
scas
mov
push
dec
mov
or
test
xor
jns
rcl
jp
(bad)
jmp
and
icebp
imul
push
push
mov
hlt
lds
(bad)
ficomp
call
cmp
and
dec
xchg
pop
and
(bad)
mov
in
sar
(bad)
fild
adc
clc
xchg
les
inc
cs
mov
in
dec
js
cmp
mov
shl
or
jnp
mov
mov
xor
std
out
test
add
jle
sub
or
jle
jmp
cmp
jno
cmp
cmp
push
ins
adc
sub
test
fisttp
add
push
arpl
add
hlt
add
not
xor
adc
inc
jl
cmp
ins
(bad)
out
xchg
mov
(bad)
mov
xor
cmp
and
mov
push
jbe
stc
adc
(bad)
test
pop
in
repnz
je
jne
fdiv
test
sub
imul
dec
xchg
cmp
lds
mov
cmp
xchg
in
rol
rol
xor
mov
lds
adc
push
adc
nop
sbb
call
mov
ja
or
pop
sbb
cmps
add
sti
adc
and
adc
or
sbb
pushf
jg
pop
add
mov
xchg
std
xchg
std
ins
frstor
mov
jb
cmp
pop
in
rcl
lds
mov
inc
jmp
jo
and
mov
xlat
(bad)
cwde
lods
or
mov
lock
cwde
fnstcw
scas
push
hlt
pop
pop
mov
std
pop
sbb
cmp
pop
aam
pop
push
push
fdiv
jbe
cmp
call
xchg
and
jl
(bad)
mov
push
leave
adc
retf
movs
push
adc
or
fs
push
mov
lea
jge
mov
test
dec
arpl
xchg
mov
rcl
cmp
add
sub
outs
imul
ins
push
xor
jmp
scas
out
(bad)
imul
jmp
push
das
and
xor
xor
int3
das
and
xchg
xor
lods
and
sbb
jge
popf
fs
pop
inc
mov
sub
test
and
sahf
mov
or
sbb
mov
repz
jb
adc
in
cli
or
push
popf
jle
push
aam
fcomip
(bad)
ss
movntps
inc
movs
cwde
push
jmp
(bad)
mov
cmps
fcomip
jp
imul
push
fcomp
icebp
retf
or
or
push
stos
xchg
xchg
mov
mov
outs
or
rcr
stc
fcmovnbe
dec
out
sub
fnstsw
push
mov
push
fmul
jmp
xor
add
cmp
test
and
pop
movs
loope
out
push
lods
push
jl
outs
jl
dec
fimul
or
jae
and
jb
mov
mov
mov
dec
ss
sbb
sbb
mov
ret
call
ja
out
(bad)
jno
or
sub
imul
test
pop
xor
ret
cmps
imul
dec
sbb
aam
(bad)
mov
repnz
outs
retf
or
sub
push
mov
les
push
or
jl
sbb
jp
mov
mov
sbb
call
push
mov
(bad)
jbe
and
or
cdq
cmp
mov
push
fdiv
dec
jno
out
fist
sbb
adc
jle
into
push
dec
je
js
fidivr
pop
adc
sahf
(bad)
and
jb
xor
cld
dec
pop
mov
sub
mov
in
leave
mov
jbe
adc
cmp
xor
loope
mov
mov
mov
not
aad
push
and
mov
test
in
imul
out
loope
stos
sbb
jg
sbb
mov
jne
xor
movlps
pusha
aaa
adc
xlat
imul
inc
inc
bound
or
out
dec
pop
dec
outs
idiv
inc
stc
inc
mov
jmp
lahf
in
popa
pop
mov
push
jmp
jmp
mov
aad
loop
popa
cli
in
xlat
and
jp
add
dec
daa
mov
push
mov
int3
add
pushf
mov
jnp
aam
xchg
lods
(bad)
(bad)
ret
sub
pop
jecxz
mov
push
fstp
sbb
fwait
jnp
cli
fimul
cs
enter
xor
movs
sbb
add
fnstenv
sar
enter
jae
add
rcr
clc
lahf
sbb
sbb
jecxz
es
gs
out
push
std
rol
fcomip
jmp
mov
out
cwde
jl
push
and
sub
jbe
add
pop
test
xor
xchg
mov
xor
fbstp
out
push
stc
pop
je
adc
iret
sbb
adc
cmp
lock
icebp
fistp
lods
inc
outs
cld
(bad)
sub
in
xchg
adc
inc
push
fdiv
mov
inc
stos
pop
inc
xchg
push
fs
int
and
pop
xchg
mov
mov
push
dec
call
out
imul
push
dec
pushf
jns
pop
cld
mov
sbb
imul
xchg
fmulp
dec
sub
repnz
xchg
fs
push
pusha
cli
push
aas
test
xor
mov
and
mov
sub
imul
test
dec
retf
add
aam
ja
push
add
adc
(bad)
pop
push
stos
add
xchg
pop
js
jne
jbe
retf
daa
in
fucomp
out
inc
scas
push
push
scas
mov
mov
fidivr
push
jmp
loopne
js
xchg
(bad)
out
add
sti
inc
scas
ss
sub
pop
sub
inc
push
ror
push
fadd
shr
es
sub
mov
outs
fs
xchg
sbb
push
lahf
xor
sbb
popf
stos
fmul
sahf
mov
popf
jecxz
jbe
xor
dec
pop
pop
js
std
adc
retf
mov
add
adc
mov
call
pop
xchg
xlat
sub
cdq
mov
pop
adc
xchg
mov
mov
mov
add
fwait
clc
div
(bad)
dec
jg
cmc
daa
out
std
xchg
rcl
outs
leave
sub
and
rcr
or
ja
or
movs
add
jecxz
add
mov
mov
pusha
aaa
ret
cmps
call
inc
pusha
xchg
call
xor
mov
daa
mov
push
bound
lahf
out
stos
imul
add
inc
and
add
push
add
push
jmp
int
into
js
sbb
jge
mov
ror
stos
sti
add
cmc
rcl
dec
push
mov
pusha
retf
fist
imul
dec
stos
xchg
push
adc
xchg
jle
clc
nop
shr
add
bnd
mov
mov
faddp
rcr
loopne
das
or
enter
arpl
xor
bnd
cld
sti
sbb
cmps
adc
daa
lods
test
cmp
fild
dec
sbb
retf
scas
les
ret
in
leave
mov
dec
mov
inc
sub
xchg
outs
mov
test
rcr
mov
sti
in
mov
out
or
mov
imul
dec
mov
ret
cli
outs
mov
fld
push
and
adc
cmp
retf
mov
ins
rcr
push
ins
dec
jge
scas
mov
cmp
push
call
push
mov
lods
push
sar
out
mov
cmp
popf
dec
shr
fsubr
daa
not
cmps
add
and
retf
push
(bad)
pop
sub
retf
and
xchg
and
clc
call
jmp
pusha
push
adc
adc
out
dec
call
outs
(bad)
mov
xchg
stos
mov
sbb
ror
xchg
xchg
mov
int3
stos
sub
mov
inc
cwde
aam
pop
in
push
jp
repz
test
ror
adc
ficom
pop
push
lods
je
ror
adc
xor
sub
jb
or
jmp
or
jecxz
std
fisttp
rol
cwde
mul
push
(bad)
adc
mov
(bad)
mov
in
repz
mov
in
cld
pop
pushf
aad
aam
or
int3
or
popf
cmp
mov
sub
sub
div
cdq
mov
fsubp
rcr
das
int3
aaa
inc
jmp
shr
or
lods
es
sub
cwde
ds
xchg
jl
data16
ffreep
sti
je
mov
addr16
mov
jle
loope
add
push
repz
jp
ss
xchg
outs
add
(bad)
(bad)
mov
rcr
dec
std
ins
mov
xor
sbb
sbb
fcmovu
int3
xchg
xchg
push
sub
fwait
popf
movs
sub
sub
inc
pop
xor
cmp
call
push
mov
xchg
jae
push
sub
repz
or
popf
mov
out
push
test
movs
push
mov
mov
in
outs
push
fs
mov
jmp
into
mov
inc
jb
mov
jp
xor
imul
sbb
dec
adc
pop
sub
sar
mov
lods
push
clc
dec
popa
jo
fs
js
sbb
xchg
add
dec
and
jo
daa
pop
fwait
cmp
ret
fwait
or
out
clc
clc
cmc
add
icebp
dec
lock
test
mov
lahf
inc
mov
jl
cmps
push
xchg
mov
jp
mov
out
cld
mov
mov
jle
outs
dec
retf
pop
xor
add
call
mov
or
bound
mov
fwait
xchg
push
stos
inc
push
and
cwde
arpl
lock
adc
and
push
jo
mov
in
outs
fs
adc
mov
dec
rcr
aas
sbb
outs
adc
iret
repnz
push
aam
mov
and
fbld
pop
inc
lods
xor
movs
mov
xor
loopne
test
retf
shr
std
neg
das
retf
xlat
pop
push
xchg
inc
and
movs
in
aaa
xchg
call
add
jmp
sbb
mov
ja
sub
imul
fisttp
cmp
adc
pop
xchg
fs
aad
bound
pop
test
addr16
add
ins
or
and
rcr
test
pop
mov
pop
inc
dec
fwait
mov
xor
pushf
mov
imul
mov
int3
sar
fsubp
aam
add
sbb
icebp
inc
out
sahf
jle
jno
push
popa
popf
mov
inc
inc
scas
inc
int3
inc
daa
es
imul
cs
ja
xchg
xchg
lods
bound
jbe
ret
fwait
in
and
ret
int3
(bad)
pop
mov
(bad)
sbb
sbb
addr16
xchg
cmps
xor
add
xchg
aam
xor
setnp
stos
ja
int
cld
shl
call
test
mov
push
mov
cmc
outs
mov
(bad)
jae
int3
in
mov
scas
jae
(bad)
lods
stos
fldcw
mov
nop
or
std
lahf
ds
test
cs
ficomp
mov
das
push
cmps
adc
shr
cmp
dec
movs
adc
jo
cmp
iret
mov
imul
add
out
xchg
mov
inc
jns
jb
lahf
shr
dec
cmp
fcom
fcom
cmp
mov
add
cmp
jae
adc
js
stos
in
xor
test
fcmove
sbb
ror
(bad)
aad
fisub
movs
popf
int3
leave
push
mov
out
or
rcl
aaa
xor
in
(bad)
lock
fs
das
mov
and
mov
cmp
sbb
mov
or
outs
cmp
int
pop
pop
fisttp
ror
cmp
add
aaa
stos
loop
in
push
xor
popa
xor
add
inc
mov
stc
sbb
inc
inc
mov
sbb
jecxz
loope
sbb
fsub
loop
(bad)
sbb
shl
xchg
movs
push
test
fwait
test
push
aaa
arpl
cmp
xor
repnz
dec
dec
pop
cmp
cmps
mov
jmp
and
leave
(bad)
cmp
xchg
(bad)
push
int
fstp
mov
push
cmp
jge
push
daa
das
outs
add
js
adc
out
jnp
push
cs
aas
xchg
pop
es
into
cli
jmp
xor
push
sbb
call
push
mov
scas
or
and
test
fild
fwait
jp
scas
sub
jmp
in
mov
push
jo
test
cs
push
pop
xchg
ja
jl
cmps
jae
xor
mov
sbb
inc
add
push
(bad)
jmp
enter
jecxz
mov
mov
xchg
repz
cmc
mov
and
imul
fnsave
jnp
sbb
loop
push
fwait
jecxz
(bad)
call
rcr
je
sbb
scas
and
xchg
jne
xor
daa
loopne
aad
out
mov
lea
(bad)
pop
mov
xchg
push
hlt
inc
cdq
daa
out
aaa
add
es
sbb
xlat
fs
aam
fwait
daa
clc
pusha
add
in
out
inc
mov
cmp
hlt
jnp
repnz
mov
ffreep
push
dec
mov
mul
out
cmp
sahf
(bad)
out
cli
adc
inc
fcomp
out
jne
adc
jae
popa
clc
pop
leave
inc
or
in
and
test
dec
lds
xor
call
push
stc
add
pop
fs
(bad)
dec
adc
aas
pushaw
pop
fisub
inc
cli
xchg
mov
sar
push
sti
add
stos
xor
in
jne
adc
cmc
and
push
inc
xchg
enter
mov
(bad)
pushf
cli
mov
pop
fwait
out
pop
xchg
push
or
sbb
dec
add
dec
dec
mov
ins
push
xor
cmps
xlat
test
lds
mov
loop
loop
imul
xchg
pop
mov
mov
call
rol
sbb
sub
or
or
test
mov
leave
jno
inc
jb
sub
jb
pop
pop
jnp
push
out
ficomp
push
pop
popf
xor
jns
xchg
adc
les
sar
icebp
add
dec
fisub
sub
call
pop
sub
out
int
mov
mov
aaa
scas
loop
mov
add
in
cmp
or
pusha
das
adc
sbb
das
sbb
and
sahf
push
adc
cwde
cmp
in
cmp
test
std
and
es
inc
leave
and
and
jb
jmp
aaa
xchg
les
pop
lea
(bad)
retf
xor
or
ror
xchg
jbe
cld
enter
xchg
adc
repz
cli
rcl
in
loopne
lods
sub
aad
jle
out
aaa
pop
sub
mov
jle
lods
sub
mov
je
mov
sbb
xor
dec
nop
inc
sahf
(bad)
dec
mov
jne
mov
hlt
ret
inc
push
out
fwait
retf
xor
stc
fstp
sub
mov
mov
push
jmp
in
ja
addr16
jns
(bad)
aam
adc
sbb
movs
pop
jne
cmp
mov
mov
clc
xor
xchg
jo
sbb
sbb
push
lea
(bad)
mov
dec
xchg
pusha
pop
iret
addr16
push
and
and
movs
iret
test
push
rcr
sub
mov
inc
js
inc
ja
out
scas
xchg
mov
cmp
arpl
cmp
push
aad
adc
inc
mov
enter
xchg
fld
rcl
xchg
hlt
lods
xlat
shl
sar
or
cmp
xchg
pusha
call
adc
fsub
scas
jns
xor
or
dec
jmp
adc
dec
nop
mov
retf
add
scas
jno
mov
cmc
jno
cld
mov
mov
push
fisub
clc
push
push
outs
xchg
aas
pop
pop
add
loopne
das
lahf
enter
mov
popa
pop
int3
dec
call
fld
dec
stos
(bad)
retf
scas
dec
ds
mov
lods
push
inc
and
pop
stc
xchg
mov
add
xchg
sbb
mov
mov
add
jg
push
inc
lock
inc
repnz
push
cmp
push
cmp
dec
mov
jmp
mov
add
add
cli
sbb
test
fs
jmp
dec
out
dec
push
adc
lahf
nop
mov
push
movnti
fxch
and
jle
test
loope
mov
loopne
mov
cmp
xchg
clc
jecxz
out
jmp
sti
les
adc
xor
xchg
jge
xor
jge
(bad)
aas
xor
lods
pop
rcr
dec
dec
mov
pop
jl
inc
test
mov
mov
(bad)
je
(bad)
cmp
pop
movs
xchg
pop
sti
ret
ret
mov
dec
jmp
cmps
lods
retf
jnp
sbb
jno
iret
popa
repnz
push
xor
sti
mov
xchg
dec
inc
cmp
sbb
sbb
push
xor
ds
iret
fidiv
xor
mov
into
stos
mov
js
sbb
pushf
(bad)
jmp
les
cmp
ins
push
inc
pop
add
adc
movs
stc
mov
jecxz
icebp
jne
mov
adc
enter
adc
jnp
mov
jns
pusha
inc
(bad)
popf
or
lahf
(bad)
retf
ror
push
mov
add
sub
mov
push
retf
jne
data16
jp
pop
pop
or
fs
dec
shl
cdq
fstp
stos
pop
xor
sub
pop
pop
xchg
jle
sbb
sub
pusha
fs
dec
cmp
lahf
jnp
aad
cmp
dec
int3
or
lds
ret
rcr
repnz
fmul
mov
aas
xchg
das
scas
jge
mov
xchg
shl
int3
push
cmp
ror
push
rol
and
mov
mov
gs
pop
test
in
(bad)
mov
push
out
pop
ins
dec
(bad)
and
sti
ror
mov
dec
cdq
lods
fild
iret
out
mov
push
in
das
out
and
outs
neg
jp
jle
movs
push
sbb
pop
enter
daa
dec
sbb
mov
pushf
jo
inc
cwde
in
iret
mov
jg
pop
cli
cld
inc
add
push
mov
shl
enter
and
call
std
retf
inc
push
xchg
xor
adc
push
sbb
es
or
daa
adc
div
jne
jae
sub
sbb
(bad)
dec
mov
add
lea
sahf
inc
push
push
push
pop
adc
mov
add
inc
sub
dec
sub
(bad)
imul
push
cmp
sbb
sub
jg
sbb
push
js
nop
in
fst
mov
inc
outs
jb
daa
push
mov
add
sbb
xchg
sahf
adc
jle
icebp
cmps
(bad)
cli
iret
ret
(bad)
jmp
shl
into
das
(bad)
out
xor
cmp
sub
mov
or
mov
cdq
add
push
fld
inc
cli
retf
pop
popf
mov
mov
mov
fcomp
rcr
add
int
retf
adc
fld
fsub
pop
jp
repz
retf
in
and
mov
push
inc
sbb
mov
sub
je
or
(bad)
les
int
lods
cmc
mov
jecxz
out
clc
in
push
pushf
push
mov
pop
lods
fstp
lods
adc
js
std
(bad)
outs
sbb
fst
outs
add
add
ins
dec
dec
jecxz
movntq
jecxz
fbld
test
sbb
sbb
adc
cdq
lock
aas
pop
xchg
aaa
add
mov
jno
push
out
sub
mov
stos
ins
arpl
sbb
xchg
gs
movs
lods
inc
jbe
mov
vphaddbw
imul
pushf
std
jp
inc
ror
jo
dec
jl
jl
mov
sub
leave
add
inc
lods
aam
clc
mov
std
and
out
iret
clc
fldcw
aad
scas
lock
sub
pop
imul
imul
and
and
add
jnp
pop
push
mov
fwait
sbb
add
fnstenv
push
stc
add
or
cmp
mov
jg
xor
neg
push
cs
mov
xchg
movs
ja
mov
les
fdiv
das
mov
inc
call
cmp
cmc
pop
inc
bound
sbb
push
add
add
ins
lds
mov
jg
sbb
dec
scas
mov
int3
fld
dec
movs
fisttp
and
(bad)
sti
lds
rcr
cdq
xchg
fisubr
and
cwde
into
popf
aam
not
mov
cmp
dec
mov
out
sbb
mov
jl
push
fnsave
push
inc
mov
cmp
mov
test
fwait
arpl
adc
vmovd
lods
xchg
add
retf
fiadd
fwait
adc
pop
xchg
jmp
call
mov
(bad)
and
shl
mov
adc
jo
cmp
outs
xchg
outs
mov
push
je
add
(bad)
jmp
adc
ret
mov
mov
js
mov
or
aaa
inc
das
enter
(bad)
dec
ret
out
clc
shl
test
xlat
ror
sbb
mov
lahf
xor
xor
and
pop
adc
test
clc
pop
leave
into
in
out
jle
xchg
jmp
rcr
mov
push
(bad)
out
cmp
movs
outs
dec
dec
jg
outs
push
fsub
add
mov
fstp
div
add
cmp
mov
mov
or
push
(bad)
aam
mov
jmp
xchg
xchg
sbb
jne
(bad)
cmp
xchg
ret
out
retf
sub
mov
aas
enter
xchg
push
mov
lods
cmp
push
repnz
xor
mov
test
in
imul
fwait
mov
jmp
in
mov
cld
sub
jmp
mov
jae
fisubr
(bad)
daa
rcr
pop
int
out
cmp
js
out
fldcw
pop
jle
or
and
(bad)
cmp
sub
add
push
dec
sub
stc
add
(bad)
scas
add
in
jb
imul
ficom
inc
(bad)
sbb
push
rcl
ins
lods
sub
loope
rol
(bad)
or
adc
add
cmps
jae
stos
push
sahf
and
cmp
jmp
fsubr
(bad)
xor
rcr
mov
dec
jl
pushf
inc
jp
jo
dec
test
je
addr16
or
repz
inc
sbb
mov
and
push
jno
fmulp
lds
add
mov
push
and
gs
bound
mov
movs
out
fldenv
fisub
out
pushf
fmulp
(bad)
ins
mov
jmp
dec
out
inc
fist
mov
iret
jmp
xchg
into
mov
scas
fdivr
jns
retf
inc
adc
sbb
lods
mov
jne
adc
cli
shl
dec
pushf
scas
test
mov
pop
shl
jg
inc
fs
cdq
pop
icebp
and
mov
add
mov
(bad)
(bad)
sub
pop
test
sub
xchg
pop
jmp
daa
sub
aas
scas
jo
les
movs
xor
sub
push
sbb
sbb
sub
iret
adc
pusha
add
pusha
or
pusha
cwde
bswap
inc
sub
aam
(bad)
sub
push
mov
sbb
movs
add
div
rcl
push
gs
in
jmp
rcr
retf
ins
shl
cld
mov
outs
pusha
adc
popa
(bad)
cli
adc
(bad)
test
test
enter
into
jbe
sbb
or
mov
sbb
inc
sbb
or
xor
repz
fmul
aas
pop
dec
in
mov
pushf
or
xor
and
jae
inc
mov
lods
std
xor
jmp
call
jle
call
inc
xchg
add
mov
sbb
pop
sbb
leave
sbb
inc
jnp
adc
nop
pop
stos
js
mov
mov
push
dec
fisubr
aad
push
test
scas
cli
ins
inc
sbb
sbb
pop
shl
test
and
xchg
loop
mov
xor
mov
push
mov
jge
pop
add
(bad)
out
sbb
scas
rcl
pop
ror
pop
inc
fdiv
mov
jmp
cwde
sub
dec
or
pop
xor
jecxz
out
and
iret
mov
std
add
out
mov
ins
adc
mov
lds
adc
fwait
or
sahf
(bad)
jae
adc
push
inc
push
sbb
sub
sbb
pop
pop
sbb
mov
push
les
into
push
xor
cmp
jg
lahf
mov
and
stos
mov
loop
xor
jp
mov
jl
xchg
js
aas
shl
lahf
push
xchg
fdiv
dec
cdq
loope
aad
lahf
stos
xchg
or
outs
xchg
adc
or
cmc
xchg
inc
and
test
lods
mov
fs
add
sub
push
hlt
xchg
aad
xchg
adc
in
shl
push
lds
jbe
ja
loopne
add
jecxz
fdiv
das
repz
rcl
not
ror
jo
dec
ins
jnp
cmp
and
pop
nop
xor
in
(bad)
jmp
add
pop
dec
sahf
push
cmp
mov
jmp
jns
stc
arpl
pop
cld
push
xchg
mov
jl
pusha
fmul
pop
jb
sbb
mov
(bad)
fcomi
mov
add
mov
pop
test
movs
fs
mov
gs
jae
aad
lea
mov
pushf
pop
call
push
adc
ins
mov
inc
std
ret
jne
inc
pop
cmp
(bad)
cmp
mov
enter
punpckhbw
fcomp
out
bound
inc
outs
mov
push
or
mov
jmp
sub
adc
pop
mov
mov
fsubr
test
test
xchg
int
inc
in
(bad)
push
lea
ss
inc
ds
add
pop
cmps
xchg
call
cmp
fimul
and
dec
retf
cmp
pop
addr16
push
daa
out
mov
jne
add
xchg
nop
ret
xor
loop
js
lds
test
or
dec
and
pop
xchg
scas
xor
sahf
ja
fisttp
aam
movs
add
or
aam
inc
rcl
test
fidivr
sbb
popa
test
in
adc
push
cmp
push
div
retf
xor
retf
shr
jns
jg
rsm
push
sbb
loope
in
add
adc
js
xchg
jo
push
retf
pushf
test
dec
je
bound
(bad)
jg
sub
repnz
cmc
ret
(bad)
and
and
fsub
dec
(bad)
or
es
jle
cmp
mov
(bad)
jecxz
fidivr
jmp
adc
ret
imul
or
jno
loop
popf
sahf
nop
stc
int3
fidiv
iret
xlat
shl
stos
jecxz
rol
xchg
test
in
cmp
mov
test
out
fcom
inc
shr
scas
(bad)
lahf
xchg
sub
inc
and
inc
fwait
shr
xor
pop
adc
cdq
jno
mov
loopne
add
call
loope
push
sbb
push
fldpi
push
and
push
push
ror
pop
inc
aam
xor
call
push
inc
out
add
pop
mov
std
mov
loopne
loopne
retf
push
popf
sti
push
aam
xor
xchg
mov
(bad)
ffreep
push
leave
cli
cmp
mov
pop
sub
xor
pop
fyl2x
sbb
or
add
aaa
cmp
mov
fist
fld
stc
imul
mov
imul
(bad)
mov
clc
movs
inc
add
mov
adc
xor
adc
clc
shl
and
loop
mov
cdq
ret
popa
loopne
inc
out
push
jb
imul
stos
fist
mov
data16
dec
inc
hlt
test
mov
call
scas
popa
and
xchg
arpl
adc
mov
or
ret
iret
and
or
and
xchg
imul
add
sub
cs
and
ss
adc
into
xchg
cmp
sub
fdiv
call
sbb
fstp
add
pop
xchg
add
jbe
pop
push
adc
inc
xlat
push
pop
das
ret
mov
lods
xchg
daa
mov
mov
add
xor
inc
and
push
adc
scas
xor
jb
vorps
das
push
xchg
xor
pop
and
mov
sbb
out
xchg
pop
cmp
sbb
loope
and
ins
sub
jp
cmp
adc
into
(bad)
rcr
jo
lods
mov
adc
fild
mov
lods
in
mov
sub
pop
(bad)
pop
mov
mov
jecxz
or
mov
nop
adc
jbe
(bad)
mov
repz
jle
mov
scas
cmp
push
push
pop
sbb
xchg
js
jp
mov
into
cmp
aam
dec
shl
fiadd
stos
push
inc
dec
rol
or
dec
push
aam
mov
mov
dec
jg
xchg
and
in
inc
sub
scas
rol
mov
in
or
shl
int3
pop
xor
adc
xchg
or
sub
repnz
pop
add
cs
push
adc
xor
(bad)
pop
into
sub
pop
scas
stos
dec
nop
dec
cwde
loop
aaa
ret
leave
call
add
repnz
jne
scas
sbb
int
nop
pop
jl
ja
fmul
sub
jle
jns
sti
pop
jp
into
and
je
inc
lods
ss
sbb
lea
jp
cmp
outs
sbb
icebp
imul
pushf
sahf
lods
stc
shl
pop
cmc
jae
and
cmp
ffreep
hlt
in
repnz
push
push
inc
dec
mov
jecxz
das
pop
arpl
pop
jecxz
fisubr
or
rcl
mov
movs
jmp
mov
enter
jno
pop
inc
hlt
add
push
fistp
and
leave
jae
fsubp
(bad)
stos
mov
sub
mov
mov
rol
mov
cwde
or
jae
sub
idiv
adc
lods
cmp
xchg
jl
test
jmp
lahf
dec
jbe
scas
(bad)
popf
cmp
(bad)
jns
mov
mov
ja
sbb
out
mov
sub
sub
cwde
dec
jecxz
(bad)
fld
leave
cdq
xor
mov
es
imul
xor
jno
sbb
xor
icebp
mov
adc
aad
fdiv
fwait
and
fimul
adc
and
push
ds
mov
out
popa
mov
sub
inc
push
xchg
lock
mov
adc
leave
ds
sbb
and
dec
cmp
or
leave
imul
add
les
movs
sahf
into
sub
cmps
dec
mov
aad
fild
mov
outs
push
or
shr
mov
jne
add
ficomp
(bad)
aaa
out
stc
xchg
retf
mov
dec
shr
cmps
cmp
in
test
push
pop
scas
clc
mov
mov
dec
add
test
scas
inc
sub
pop
movs
fistp
out
daa
inc
or
pop
adc
push
sbb
mov
imul
xchg
psrad
dec
mov
mov
or
outs
adc
mov
(bad)
mov
repz
inc
not
enter
in
ins
jns
lods
cmp
xchg
outs
inc
xchg
jmp
retf
add
fcomp
cli
int
mov
call
jecxz
js
xor
in
jo
(bad)
sbb
jmp
js
and
sub
and
mov
mov
and
jl
(bad)
or
fsub
mul
gs
xlat
aad
sti
inc
in
push
gs
test
mov
ins
stc
scas
jo
xor
cs
add
add
push
jmp
xchg
xor
cmp
cli
cmp
sub
daa
scas
pop
mov
push
inc
adc
jb
jl
mov
inc
or
jmp
sti
hlt
in
clc
sti
(bad)
push
jle
add
iret
ds
pop
fst
cmp
dec
push
int3
scas
cwde
cmps
ja
stos
lahf
rol
sbb
sti
daa
pop
pop
aaa
dec
lods
pop
inc
retf
ja
std
call
cmps
mov
pop
jno
mov
bound
test
xor
cmps
ds
test
dec
jle
push
repnz
push
fild
xchg
mov
jmp
mov
push
je
bound
std
jle
push
and
pop
aad
xchg
mov
mov
xor
inc
cld
mov
loop
or
push
popf
xchg
xor
xor
or
jns
fwait
adc
popf
pop
imul
ficom
lods
sti
aad
cmc
in
mov
jae
retf
cs
fwait
out
sub
jmp
mov
scas
push
cmp
cld
cdq
cmps
push
mov
pop
lock
xor
mov
jb
mov
nop
inc
adc
aas
mov
addr16
mov
nop
(bad)
cld
stc
mov
dec
int3
retf
xchg
push
push
adc
stos
mov
(bad)
mul
mov
add
cmp
xchg
bound
cmc
int3
mov
xlat
jbe
sahf
ja
inc
mov
jne
sbb
ret
mov
pop
pop
(bad)
popf
or
daa
out
loop
mov
pop
lock
addr16
ret
jns
sar
stos
cmps
xor
push
adc
xchg
dec
sub
or
adc
jecxz
hlt
repnz
xchg
or
push
jbe
pop
pop
cli
dec
sub
cmp
lds
cmps
retf
push
push
ror
jns
ret
stc
pop
mov
mov
cmp
loopne
fstcw
ret
sbb
popa
aaa
pop
mov
ins
sub
loop
iret
dec
cmps
in
test
cli
inc
mov
dec
or
inc
cld
ret
pop
dec
xor
mov
or
lods
popa
stos
jecxz
retf
movs
push
fbstp
push
mov
out
xchg
sbb
mov
mov
jnp
jbe
cmp
cld
mul
inc
rcl
mov
adc
outs
jge
and
add
pop
xchg
mov
bound
(bad)
leave
xchg
xchg
test
push
and
mov
pop
retf
aas
and
mov
daa
adc
xlat
and
mov
hlt
sbb
movs
xchg
icebp
mov
sbb
jo
dec
js
inc
stos
jmp
ret
movs
in
dec
mov
out
pop
sbb
ss
cld
movs
(bad)
mov
movs
cwde
stos
push
iret
es
or
lock
inc
xor
xchg
fldenv
push
inc
jge
std
jns
add
test
mov
inc
pushf
pop
jmp
xchg
xor
imul
pop
mov
into
es
xor
cmp
mov
cs
sub
int3
pop
pop
icebp
cmp
ret
xchg
jns
in
jno
int3
jo
(bad)
or
ins
dec
outs
loope
or
jge
out
js
addr16
xchg
sub
push
es
add
xor
nop
les
ret
adc
jge
mov
inc
inc
fimul
std
pop
mov
push
icebp
mov
aad
fistp
or
inc
ja
out
cmp
loope
adc
jmp
and
dec
xor
mov
sbb
popf
imul
xor
ror
lahf
mov
jmp
and
lods
mov
mov
jnp
loope
xor
jb
push
jl
sbb
jns
arpl
mov
or
mov
stos
mov
add
sbb
movs
cs
sub
out
cmp
lock
pop
(bad)
sahf
adc
adc
inc
test
test
cli
retf
lock
jmp
call
imul
cmp
imul
loopne
sahf
daa
inc
cmp
test
push
and
pop
xor
hlt
retf
hlt
sub
dec
test
icebp
adc
jnp
xor
jmp
push
mov
(bad)
movs
add
mov
std
ror
ret
jmp
jle
addr16
les
xchg
sbb
sub
push
jbe
(bad)
in
push
fdivr
mov
inc
cwde
mov
imul
push
jg
mov
push
mov
add
js
dec
and
mov
dec
movs
sbb
mov
rol
je
popf
xchg
dec
call
fcomi
xchg
mov
sub
jne
and
leave
out
in
xchg
in
xor
add
sub
sahf
or
or
jg
es
cs
inc
dec
je
or
jecxz
ja
ins
call
mov
pop
adc
jo
dec
cs
or
and
adc
pop
mov
push
ins
cli
sbb
jo
out
xlat
xchg
or
aad
jbe
int
xor
lods
mov
shr
repnz
and
out
in
jp
rcl
test
pop
aam
mov
push
add
fistp
sar
dec
add
xchg
stc
inc
movs
sahf
mov
hlt
pop
ss
repnz
into
enter
sbb
shl
mov
ins
mov
sahf
cmp
lea
cwde
fimul
outs
inc
fld
fistp
xchg
jo
(bad)
(bad)
stos
adc
cmp
stc
jae
xlat
sub
xchg
popa
inc
ja
push
cmp
bound
imul
leave
popa
inc
lods
mov
cmps
or
cmp
jns
mov
add
movs
inc
add
inc
cmp
popf
bound
push
sub
mov
and
mov
std
fucomp
adc
push
jb
fiadd
jle
loopne
rdtsc
movs
shr
push
xor
xor
adc
xor
lock
pop
(bad)
std
inc
and
out
fcmovu
or
aaa
clc
cli
out
xchg
push
push
xor
cmps
dec
inc
movs
or
pop
pop
mov
sahf
stos
aas
and
inc
shl
pop
inc
inc
cmps
mov
loope
pop
push
movs
xor
test
jae
data16
lods
push
(bad)
xchg
repz
cmps
and
rcr
push
lock
push
push
pusha
push
add
sub
sbb
cs
mov
mov
jo
div
out
jecxz
fadd
jg
xchg
xchg
mov
push
call
int3
pop
dec
repz
retf
or
nop
scas
ds
div
sbb
es
mov
mov
(bad)
(bad)
xchg
cmps
mov
dec
add
inc
imul
xchg
mov
inc
sbb
cmp
lods
add
ja
add
push
cmp
mov
(bad)
int
cmps
call
pop
push
xchg
or
outs
xor
fisubr
fmul
leave
jbe
push
test
adc
test
mov
push
stos
test
mov
test
in
ret
inc
cmp
fist
sub
mov
jns
sbb
aas
retf
ds
xor
addr16
mov
xor
mov
imul
ret
(bad)
jl
jg
inc
mov
and
inc
mul
pop
pop
mul
pop
add
ds
cmp
and
mov
xor
sbb
push
push
mul
(bad)
cs
jle
mov
call
(bad)
mov
add
ins
mov
sbb
pop
rol
mov
jp
jle
hlt
ja
hlt
jns
rcr
cld
scas
pusha
and
mov
xor
outs
jae
push
call
mov
das
pop
jmp
outs
js
call
mov
and
pushf
cmp
scas
cpuid
cli
xchg
xchg
mov
jmp
pop
iret
adc
jnp
in
xor
outs
push
ja
outs
bound
or
ja
push
iret
ins
fld
popf
jae
imul
xchg
neg
test
push
into
mov
inc
or
mov
jg
pop
sahf
xor
sub
in
stc
push
(bad)
jmp
mov
lea
daa
and
call
inc
mov
leave
sar
sbb
call
hlt
neg
sti
arpl
and
ss
mov
lahf
idiv
arpl
fstp
xor
ss
(bad)
out
test
aam
lahf
cdq
mov
and
sub
pop
js
sbb
mov
or
psrlq
pop
cmp
(bad)
jmp
lods
idiv
aad
cmp
repnz
mov
xchg
adc
fist
pop
xchg
js
ds
cmp
retf
jno
cli
sub
imul
stos
sub
adc
lods
call
ficom
sub
xor
daa
lds
mov
stos
push
(bad)
retf
xor
loope
xchg
mov
push
pop
pop
sti
push
bswap
mov
sbb
sbb
push
cs
inc
xor
pop
or
push
jne
or
add
in
pop
dec
in
imul
pop
adc
(bad)
jp
or
jmp
pop
arpl
cmp
mov
mov
jo
shr
je
mov
add
hlt
jne
mov
jnp
adc
or
sbb
jp
daa
xchg
mov
adc
ss
inc
push
add
mov
add
js
jmp
cmps
adc
aam
mov
daa
aad
push
rcl
imul
cmp
xor
sub
sub
cmp
scas
sbb
mov
pushf
pop
fld
mov
dec
dec
(bad)
fisubr
fwait
mov
stos
std
fisttp
stos
(bad)
jl
fsub
cmc
jbe
movs
pop
mov
xlat
jbe
js
jb
or
(bad)
jg
adc
push
mov
xor
dec
and
lods
xor
add
sbb
rcr
push
adc
mov
fwait
test
inc
mov
dec
adc
outs
ja
jl
inc
or
xlat
popf
imul
icebp
ins
inc
jns
(bad)
or
or
lea
ins
push
rol
xchg
mov
loop
shl
loop
aam
jo
dec
push
pop
outs
jns
repnz
push
jmp
and
mov
or
pop
or
xchg
pop
mov
dec
sbb
jae
xlat
popf
adc
push
adc
cmps
lock
mov
pop
enter
mov
mov
xor
bound
push
inc
fstp
(bad)
clc
push
test
pop
icebp
rcr
add
or
imul
pushf
mov
and
aas
mov
mov
mov
mov
test
sub
leave
test
or
push
aas
scas
xor
jmp
in
mov
lock
out
out
jl
shl
(bad)
retf
inc
mov
popf
or
ins
pop
div
or
outs
mov
xchg
sbb
lahf
add
cmps
jmp
sar
pop
ins
push
dec
mov
enter
fwait
retf
jne
sbb
pushf
cmp
and
loopne
add
pop
ret
adc
xor
aad
repz
dec
or
push
aaa
cmp
(bad)
hlt
push
imul
loop
mov
mov
pop
pop
fwait
xor
std
push
add
sbb
adc
dec
stc
sbb
in
and
in
mov
sbb
int
sbb
dec
je
xor
(bad)
retf
mov
dec
dec
push
mov
arpl
jno
bound
fs
fist
arpl
add
ss
dec
or
(bad)
sub
jbe
cwde
fwait
ss
inc
ss
(bad)
je
icebp
mov
xchg
loop
pop
sub
frndint
push
and
scas
mov
add
add
jg
pop
retf
repz
cmp
test
jge
in
mov
xor
cs
pusha
jle
mov
and
call
add
sub
(bad)
push
push
(bad)
mov
adc
pop
test
rol
cmp
loop
popf
and
icebp
or
in
punpckhwd
out
push
loop
push
sbb
sar
inc
sahf
jno
cmp
mov
adc
movd
pop
fcomp
sbb
mov
mov
sub
mov
xchg
hlt
mov
fnstsw
retf
sbb
mov
or
add
push
nop
sti
inc
xor
test
dec
(bad)
loop
dec
ds
mov
int3
in
ins
mov
pop
mov
outs
xor
call
jg
imul
movs
dec
int
leave
add
dec
hlt
stc
fwait
das
xchg
push
lds
(bad)
ss
jmp
push
or
(bad)
ja
add
cmps
test
cmp
aas
dec
mov
adc
retf
je
jbe
mov
push
fimul
mov
push
inc
xchg
(bad)
ja
inc
pop
inc
loop
push
lods
std
jp
sub
sub
sbb
pushf
lea
mov
dec
inc
mov
std
loopne
or
jb
lock
sub
lods
or
fs
mov
ret
push
inc
xor
cmp
lock
in
cdq
push
and
outs
jne
iret
and
fld
inc
pop
aaa
sub
adc
mov
jno
into
or
xchg
lods
sub
xchg
sub
cmp
pop
mov
and
mov
test
js
cld
dec
leave
mov
popf
icebp
xchg
cmp
jecxz
fidivr
mov
test
xchg
jmp
repz
fidivr
cmp
ja
ret
in
push
add
fdivr
imul
push
dec
mov
push
xor
adc
xchg
cmp
pop
mov
(bad)
les
(bad)
imul
fwait
cmp
jmp
sahf
(bad)
ficom
into
inc
push
jle
mov
repz
push
mov
test
cmp
push
popf
cli
mov
aaa
or
test
(bad)
in
push
push
daa
(bad)
cmc
xchg
sub
cwde
adc
lock
and
cmp
das
sbb
mov
pop
push
jb
mov
int
mov
xchg
ret
leave
movs
xchg
stos
je
rep
mov
sbb
pop
inc
(bad)
sub
cmp
ds
pop
cwde
mov
fs
sti
add
mov
and
mov
loopne
in
mov
dec
ror
mov
pusha
pop
push
pop
ret
dec
sub
fld
(bad)
(bad)
xchg
add
loop
xor
ss
retf
mov
or
inc
mov
(bad)
xlat
dec
xlat
sti
(bad)
retf
test
pop
add
cli
in
cmp
dec
and
daa
dec
adc
pop
pop
mov
popa
add
adc
pop
cs
mov
je
fbld
je
push
and
popf
cdq
sub
mov
hlt
inc
cmp
mov
cli
shl
out
push
pusha
inc
out
inc
bound
in
and
xchg
outs
add
ja
or
cmps
push
pslld
std
loop
fs
stos
add
test
fld
mov
shl
mov
lock
mov
or
arpl
or
pusha
pop
dec
aad
add
cmps
fimul
repz
mul
push
xor
xlat
rol
or
mov
out
mov
es
test
xchg
add
lea
cmc
mov
sahf
mov
std
stc
jnp
inc
movs
inc
retf
shl
stos
(bad)
dec
imul
pushf
mov
push
inc
call
imul
idiv
shr
pop
xchg
add
xor
xchg
mov
lods
aaa
jecxz
test
cmp
sub
dec
xlat
mov
jl
outs
dec
les
mov
pop
and
xor
ja
(bad)
(bad)
cmc
xchg
cmps
and
clc
sub
cmp
ret
cmp
dec
cmp
js
popf
hlt
xchg
inc
(bad)
mov
(bad)
stc
lds
adc
je
lahf
inc
push
push
rcl
out
and
fmulp
movs
dec
lds
mov
adc
shr
xchg
mov
enter
mov
and
jmp
inc
loop
leave
xchg
dec
pop
push
pop
inc
push
bound
mov
xor
fsubr
or
or
cmp
(bad)
aad
pop
adc
jns
lock
ins
sub
push
mov
mov
jnp
inc
jle
push
sub
pusha
test
std
mov
(bad)
jmp
call
fidiv
jo
ins
xchg
popf
adc
mov
popa
pushf
adc
sub
(bad)
es
xchg
mov
cmp
add
int3
pop
retf
mov
or
jl
mov
imul
push
sti
shr
es
jbe
jl
in
pop
dec
popf
xor
sub
int3
js
shr
idiv
adc
adc
pop
sahf
(bad)
xchg
add
loope
xor
adc
mov
and
popa
xor
xor
outs
stos
jb
sbb
mov
push
dec
jle
out
lods
jge
mov
addr16
dec
sar
cmp
int3
lods
iretw
test
or
fnsave
into
xchg
bound
lea
nop
inc
das
xor
mov
dec
or
enter
sub
dec
lods
in
pop
out
adc
inc
fst
push
sbb
mov
push
das
in
mov
ins
ror
shl
push
push
pop
mov
jmp
movs
mov
test
push
push
cs
lods
es
xchg
popa
cmp
jne
stos
test
jo
sub
add
fimul
jge
mov
ss
sub
rep
dec
and
mov
sbb
jo
add
add
adc
ja
and
(bad)
enter
mov
loopne
mov
pop
nop
jb
stc
aad
xchg
xor
xor
imul
push
cmps
jge
imul
cmp
mov
xor
pop
mov
jmp
into
push
cmc
aaa
xor
cld
stos
scas
stos
dec
pop
cmp
in
or
add
aam
cmp
push
mov
jnp
mov
mov
js
aam
add
scas
aas
xor
add
ins
stos
xor
adc
xlat
ret
lahf
cmp
add
not
ficomp
movs
cmc
or
sub
fwait
cli
inc
aas
mov
push
dec
repz
fstp
(bad)
aad
and
and
dec
pop
cmp
sbb
push
push
jl
test
jbe
adc
inc
or
mov
mov
xor
imul
pop
mov
pop
retf
jg
push
stos
popf
aaa
in
cmps
jmp
or
xchg
push
add
fimul
sub
add
in
push
scas
inc
sar
scas
mov
lea
cmp
fmul
mov
fisubr
xchg
cwde
int3
sbb
aam
adc
outs
int3
adc
mov
sbb
pop
daa
and
ret
add
aaa
cmp
sbb
pop
mov
jbe
mul
aad
or
stos
jge
mov
mov
add
fisubr
inc
push
sbb
xchg
sbb
jno
clc
push
cld
jmp
and
retf
cmp
(bad)
sub
mov
jb
adc
enter
inc
mov
push
add
dec
and
lods
call
mov
je
xchg
std
movs
push
into
mov
jbe
mov
cs
cmps
and
push
sub
or
inc
outs
fwait
adc
ret
push
in
xchg
mov
xchg
mov
mov
sbb
and
sub
adc
push
movs
fild
push
les
push
mov
xor
push
xor
pop
pop
mov
repnz
and
xor
sahf
sbb
das
inc
mov
sbb
xchg
mov
inc
movs
adc
loope
cmps
jns
loop
imul
shl
xor
push
push
adc
jo
ficomp
test
iret
jae
inc
push
push
je
cmc
imul
cmps
xchg
or
push
ficomp
mov
push
hlt
aaa
into
mov
push
or
in
dec
out
dec
jmp
lds
push
dec
pusha
inc
aad
push
hlt
out
aaa
fldcw
fcomp
int
sbb
cli
add
jnp
add
outs
lods
or
push
cmp
xchg
push
div
shr
movs
sahf
mov
int3
ss
(bad)
mov
adc
fild
jg
xchg
clc
push
inc
inc
and
push
cld
out
enter
out
push
jae
jge
sbb
inc
cmp
sbb
xchg
dec
mov
sbb
in
push
pop
mov
in
add
xlat
jmp
int
jns
(bad)
ror
pop
push
repz
clc
pop
cmp
mov
aas
imul
ja
sar
int
movs
sub
xchg
hlt
retf
jg
mov
movs
push
xchg
push
push
sbb
(bad)
outs
sub
sbb
or
les
test
nop
ret
(bad)
fs
sub
inc
movs
adc
or
adc
repz
movs
xor
cmp
or
out
sub
jg
hlt
sahf
ss
add
mov
add
push
aaa
jl
cmp
or
pop
cs
cwde
dec
xchg
in
xor
push
jg
scas
(bad)
(bad)
clc
xor
(bad)
dec
out
xor
rcr
sbb
std
mov
xchg
sti
retf
imul
xor
mov
xor
fild
in
pop
ret
test
jge
pop
outs
dec
ss
jmp
sbb
icebp
call
not
mul
jns
inc
mov
cmps
dec
data16
ret
ret
or
outs
xchg
xchg
add
push
outs
cmp
xor
ja
dec
hlt
inc
xchg
jge
push
ror
dec
adc
repz
data16
xchg
leave
dec
push
jmp
push
adc
push
inc
in
sub
and
adc
mov
jne
cmp
sbb
push
jle
adc
test
xchg
fsub
lahf
pop
jecxz
dec
mov
(bad)
ja
into
lock
std
outs
pop
jb
inc
cwde
and
fsubrp
clc
cmps
aaa
add
dec
jbe
push
mov
std
mov
inc
sti
in
mov
add
pop
cmp
ret
push
sbb
rcl
pop
shl
inc
sbb
adc
sti
xor
or
outs
(bad)
pop
ins
or
cmps
sub
std
fs
retf
push
pop
in
adc
mov
icebp
and
enter
les
dec
xchg
pop
(bad)
mov
xor
loopne
xchg
jmp
lea
cmp
(bad)
or
jo
pop
aad
(bad)
sub
xor
dec
sbb
sti
sbb
repnz
les
sbb
jne
dec
push
(bad)
sti
xor
aaa
mov
lods
push
(bad)
in
daa
lock
das
push
scas
ins
jo
fcomp
scas
pop
mov
pusha
jo
add
mov
data16
jb
rol
sahf
test
sbb
inc
jmp
fdiv
pop
and
inc
jnp
dec
dec
stos
inc
fdecstp
and
(bad)
dec
fsubr
adc
adc
leave
add
std
test
xchg
(bad)
out
int
jb
push
sbb
xchg
pop
hlt
jae
pop
inc
jbe
mov
dec
add
push
sbb
or
std
jo
jp
xor
out
push
mov
mov
cmc
xor
add
add
push
xor
outs
scas
mov
ret
inc
lahf
jp
rcr
(bad)
mov
mov
into
adc
jle
adc
or
in
hlt
mov
hlt
sbb
out
lods
dec
push
and
push
loope
sar
fstp
xchg
int
mov
cmc
jns
nop
out
mov
and
and
mov
sub
push
gs
sub
and
push
jo
mov
scas
mov
or
das
and
pop
popf
popa
in
ds
and
pusha
dec
push
aad
sub
std
ins
stos
and
lock
test
fwait
lahf
and
stos
out
pop
(bad)
xchg
leave
stc
jmp
hlt
in
in
addr16
sbb
sbb
jmp
pusha
or
and
stos
mov
mov
mov
lods
or
cmp
jb
adc
mov
test
neg
adc
sub
jl
in
jo
or
sahf
ins
fstp
test
les
inc
fwait
mov
push
div
sbb
add
jnp
push
std
or
in
in
mov
mov
(bad)
lock
pusha
cmp
fs
das
rol
dec
cwde
push
add
sbb
ret
fbld
cmps
aas
add
mov
les
ss
push
xchg
sbb
xor
fstp
adc
or
scas
cs
mov
in
enter
call
(bad)
and
fmul
push
imul
(bad)
mov
push
push
pop
(bad)
fmul
rol
or
mov
pop
jecxz
pop
adc
pop
cs
arpl
ds
in
jmp
out
loopne
into
retf
xor
mov
jl
dec
xchg
mov
les
into
jl
out
cmp
dec
nop
je
cmp
pop
sub
data16
inc
fs
ret
ds
cwde
sub
push
sub
jno
mov
sub
jns
add
test
movs
or
imul
arpl
jns
cwde
out
or
mov
inc
mov
in
add
sub
jbe
int
nop
xlat
(bad)
jge
fdivr
xchg
js
inc
addr16
les
std
retf
nop
scas
(bad)
jmp
out
nop
cmps
mov
or
and
add
loope
ins
fld
adc
imul
not
or
sub
out
mov
mov
pop
jg
shr
mov
mov
cmp
scas
and
and
and
pop
sub
push
fmul
retf
jae
xor
cmp
cmps
hlt
fsubr
xchg
cli
jg
iret
cmps
mov
jl
or
das
cmps
test
in
fldl2e
out
sbb
jg
popf
mov
mov
inc
outs
push
ins
xor
dec
or
rcr
cld
dec
dec
out
mov
jno
mov
aaa
mov
call
hlt
or
jne
imul
ins
push
not
retf
sbb
pop
jbe
pop
push
mov
push
mov
test
out
fcmovne
push
mov
inc
dec
sbb
in
mov
adc
in
jp
stos
sbb
data16
jbe
cdq
fdiv
stos
movs
push
icebp
mov
sub
mov
das
or
div
outs
cmp
ja
fwait
mov
mov
in
call
pop
int
push
dec
fimul
in
(bad)
mov
add
jmp
jmp
mov
aas
aad
cmp
sub
lods
mov
imul
sbb
fcomip
fidiv
imul
cld
in
ins
sbb
loopne
mov
test
in
add
mov
lods
and
ins
shl
add
xor
pop
or
lds
jae
pop
scas
jns
adc
sub
push
cmp
adc
loop
mov
movs
mov
or
jo
into
stos
jge
test
mov
fiadd
scas
popa
mov
sbb
ss
pop
fwait
mov
(bad)
sub
push
(bad)
lahf
sub
daa
je
(bad)
dec
sbb
push
retf
push
push
cmp
sub
mov
(bad)
and
ja
sahf
push
inc
test
aad
mov
lds
jo
ins
test
xor
in
or
dec
enter
sar
nop
pop
mov
lods
pop
mov
jmp
xchg
jl
push
shl
dec
cdq
in
dec
jmp
int3
jle
outs
xchg
pop
lds
int3
das
adc
inc
fdiv
push
add
xor
sub
ins
mov
mov
retf
daa
popa
sub
loopne
out
test
pop
stos
pop
pop
jmp
xchg
xchg
dec
sbb
arpl
cli
jae
imul
mov
and
(bad)
push
mov
push
lds
sub
inc
movs
mov
fiadd
xlat
enter
in
cwde
mov
or
cmp
aad
jo
lahf
dec
xor
cmp
in
hlt
imul
(bad)
push
pop
adc
cmp
pop
rcr
not
mov
or
rol
dec
cmp
jae
rol
pop
ret
jg
inc
test
popa
add
cmps
adc
adc
xor
push
xor
dec
outs
and
in
sub
movs
mov
into
pop
pop
mov
dec
cli
push
mov
pusha
or
xchg
mov
rcr
scas
cmp
in
test
popa
mov
outs
and
(bad)
loope
or
shl
out
mov
in
(bad)
mov
add
push
push
sub
popf
in
popa
mov
jle
pushf
std
mov
adc
sbb
nop
mov
xchg
cmc
ror
sub
js
jno
pop
mov
not
sahf
mov
push
in
push
push
in
rol
in
xlat
ret
cmp
ja
add
rol
or
fwait
loop
out
ficomp
stos
pop
xor
shr
jnp
jge
dec
or
into
mov
lahf
(bad)
sbb
sbb
cmp
std
sbb
outs
add
bound
stos
mov
cs
addr16
adc
ds
retf
push
bnd
xor
cli
int3
ret
or
xchg
sbb
pop
call
das
jp
into
rcr
inc
imul
xor
frstor
ins
and
push
stos
adc
xor
dec
push
xchg
mov
sub
ins
xor
push
(bad)
and
(bad)
or
arpl
push
movs
in
mov
gs
xchg
lea
lods
ins
out
stc
fstp
or
in
and
jne
in
or
xor
addr16
and
cmp
(bad)
jge
pop
retf
int
dec
add
int3
ss
sub
pop
test
xchg
mov
mov
imul
call
or
mov
add
jne
mov
dec
jnp
xor
idiv
cwde
push
sbb
mov
xchg
repnz
sbb
retf
add
aam
pop
dec
jge
pop
out
adc
dec
imul
cmp
jb
sbb
mov
dec
and
lods
xor
ds
sub
jae
mov
test
(bad)
push
outs
jae
outs
call
xor
repnz
mov
in
pop
mov
lea
push
xor
cmp
or
adc
(bad)
mov
nop
add
ud1
sub
(bad)
xchg
inc
inc
push
call
adc
lods
sar
push
sub
push
scas
mov
in
adc
int3
add
jno
ja
mov
sub
or
das
mov
ja
(bad)
sbb
(bad)
cmp
mov
cs
inc
clc
enter
pop
test
mov
repz
cmp
test
jb
mov
dec
out
mov
sub
fcmovne
sbb
lds
jmp
retf
jmp
or
mov
mov
add
popa
clc
sar
sbb
lods
xchg
arpl
inc
test
jbe
loope
std
pop
lods
(bad)
sub
add
imul
outs
mov
movs
hlt
gs
mov
inc
inc
sub
add
(bad)
movs
adc
pusha
shl
in
(bad)
pop
in
cmp
cmps
xchg
out
ror
jno
dec
dec
lods
cmp
jnp
sub
icebp
les
mov
mov
pop
jne
pop
popa
lods
adc
rol
jg
js
repnz
fwait
add
imul
pop
test
sahf
(bad)
iret
ror
mov
int
mov
dec
adc
fistp
mov
or
leave
pusha
test
dec
scas
ret
rcl
test
ins
pop
cmp
mov
out
xor
mov
movs
loop
mov
adc
xor
pop
jae
ret
or
fwait
icebp
add
adc
sub
mov
int
xchg
ins
jae
mov
fnsetpm(287
icebp
xor
sub
sbb
xchg
lea
push
addr16
jae
std
xchg
addr16
(bad)
pushf
pop
mov
mov
daa
and
cmc
cmp
ds
inc
jno
mov
call
lahf
cmp
shl
add
pop
or
(bad)
outs
inc
sub
dec
fldcw
ror
pop
inc
push
lods
ret
imul
cdq
sbb
(bad)
jge
sti
aam
xor
(bad)
ret
mov
frstor
mov
sbb
mov
sbb
push
xor
mov
test
ins
jb
int3
and
adc
repnz
add
call
jo
mov
outs
xor
sub
pop
enter
jle
(bad)
or
movs
push
sti
dec
hlt
scas
mov
cmps
rcl
push
outs
adc
jg
push
jmp
jle
sub
xor
xor
rcr
mov
mov
ja
out
popf
jmp
mov
pop
arpl
and
jno
push
mov
ja
push
mov
sub
imul
xor
pop
into
cmp
push
lods
popa
sti
shl
dec
cmp
imul
ret
mov
sti
xchg
cs
sbb
push
sbb
dec
mov
mov
mov
test
pop
(bad)
repnz
mov
mov
div
popf
cmc
cwde
cmp
pop
jg
pop
in
xor
cmps
adc
movs
mov
and
mov
mov
mov
call
adc
pop
add
add
call
sbb
sbb
mov
clc
rcl
xor
ss
jnp
cld
sbb
inc
cs
repnz
xchg
or
inc
int3
cmp
cmps
cmp
call
lock
jle
or
rol
cmps
inc
jmp
stos
cmp
(bad)
adc
repnz
jmp
pusha
(bad)
lods
mov
and
push
inc
inc
dec
sbb
sub
inc
daa
ins
jmp
adc
stc
dec
(bad)
sbb
mov
inc
movs
icebp
ja
push
mov
pop
into
sbb
outs
lsl
jge
not
push
mov
xor
jle
or
sub
mov
pop
inc
into
push
mov
sbb
inc
jg
or
test
rcl
cmc
data16
scas
mov
add
jne
fdiv
into
aas
lock
xor
mov
mov
mov
aad
jmp
adc
sbb
add
ins
push
scas
inc
rcr
sahf
jno
sub
pop
arpl
mov
cdq
fisubr
mov
(bad)
sub
inc
scas
(bad)
iret
push
(bad)
scas
retf
cmp
inc
sbb
or
stos
jnp
neg
push
fwait
gs
pop
es
xchg
iret
lods
mul
pop
sbb
sub
mov
jb
sbb
xor
or
and
stc
mov
push
imul
lds
test
cwde
xor
(bad)
in
dec
ss
(bad)
xchg
inc
and
iret
inc
xchg
lahf
into
lea
imul
xor
push
movs
pop
sbb
lock
retf
dec
push
sbb
in
out
jl
pop
mov
mov
sub
mov
xor
push
xchg
xor
gs
and
jecxz
retf
movs
sbb
push
adc
xor
lods
mov
sbb
xor
ret
and
pushf
mov
adc
leave
add
jne
out
mov
cmp
daa
mov
inc
ds
stos
dec
mov
fmul
test
xlat
mov
cmps
iret
xchg
or
imul
pop
cmp
arpl
mov
push
in
ins
xchg
sahf
nop
sub
retf
cmp
xlat
mov
sbb
inc
sti
daa
inc
clc
lock
dec
xor
add
jmp
into
xchg
repz
mov
es
xchg
sbb
mov
ret
cld
(bad)
ficom
scas
dec
(bad)
cmp
jnp
jp
or
into
stos
push
jmp
jle
loope
outs
xor
fistp
cmps
ret
shl
mov
call
mov
push
popf
movs
enter
xor
cmp
(bad)
(bad)
mov
add
push
movs
aad
pop
push
loopne
ja
int3
outs
push
mov
je
xchg
add
call
scas
xor
cdq
add
mov
pop
je
movs
cmp
movs
adc
(bad)
mov
cmp
xlat
adc
inc
inc
inc
mov
sbb
ds
jno
dec
inc
inc
pusha
(bad)
inc
jmp
pop
sub
sub
aas
ss
adc
jp
icebp
arpl
mov
jl
cs
and
mov
hlt
xchg
mov
les
call
push
les
push
icebp
movs
je
popf
popf
mov
ret
mov
push
nop
sbb
push
pop
mov
pop
sub
les
push
sbb
lea
xchg
mov
call
xchg
pop
cmps
inc
out
fisub
dec
lds
retf
add
inc
push
cmp
inc
jb
ss
sub
add
int3
cdq
push
cmp
lock
sbb
mov
cmp
adc
jno
jmp
xchg
mov
call
push
ja
in
nop
jmp
or
outs
gs
repz
daa
sbb
test
fadd
mov
mov
xor
mov
cmps
jmp
push
jl
and
dec
mov
ret
pop
sub
hlt
add
pop
addr16
mov
rcl
lea
(bad)
and
inc
jnp
call
psrlq
lea
sbb
fild
sti
out
xchg
or
pop
xor
cmps
add
fwait
jbe
iret
xor
fwait
push
pushf
das
cmc
or
push
loope
mov
mov
adc
fs
into
out
push
ins
or
mov
data16
jae
dec
push
jge
imul
cmp
outs
cmp
jb
fnstcw
inc
call
pusha
add
scas
sub
bound
call
jle
mov
in
adc
outs
sbb
push
inc
cmp
and
push
sub
xchg
in
dec
dec
into
add
and
shl
enter
and
sti
jmp
aad
push
lahf
jp
add
xchg
sub
in
push
jmp
mov
test
push
bound
add
and
cmc
(bad)
and
pop
push
nop
cmp
cmps
outs
and
xor
xchg
jne
inc
stos
das
mov
mov
cs
mov
mov
mov
sub
mov
adc
inc
repz
push
adc
ret
bound
bound
popf
jno
in
sbb
imul
cmp
add
fimul
sbb
pop
mov
scas
jge
fdiv
mov
and
ret
test
jl
xchg
jo
in
out
sbb
pop
mov
repnz
jge
dec
xchg
sahf
push
xor
cdq
mov
xor
cmp
add
(bad)
ficomp
inc
addr16
push
jae
fadd
shr
loopne
dec
dec
loop
ror
std
pusha
mov
or
mov
push
add
jo
mov
add
sub
pop
pop
mov
sub
out
loop
sbb
pop
jg
dec
push
inc
clc
js
adc
mov
lods
dec
popf
inc
ins
pushf
scas
inc
push
ins
xchg
(bad)
lock
mov
(bad)
cli
int
shr
in
add
xchg
stc
mov
fwait
jnp
out
push
add
fs
add
iret
nop
and
push
xchg
fs
pop
in
ror
shl
adc
pusha
sub
push
dec
mov
adc
and
mov
in
popa
cmp
xor
cmp
jg
inc
adc
repz
(bad)
js
cwde
out
test
in
cmc
lahf
push
inc
ret
pop
and
ins
adc
mov
enter
or
daa
or
mov
jne
dec
dec
retf
sub
and
stos
add
popf
jp
in
fnstenv
mov
xchg
mov
mov
push
push
add
fsubp
push
mov
and
aaa
fsub
dec
mov
sbb
in
gs
gs
in
cld
fidiv
je
mov
fucomp
out
jae
or
or
push
sbb
into
ins
int
xor
cmp
or
(bad)
int3
and
cmp
ret
movs
cmps
lods
shl
or
ds
call
lods
pop
and
icebp
hlt
lods
xchg
push
pushf
sbb
mov
mov
adc
(bad)
jmp
leave
(bad)
std
inc
jb
add
cmps
das
rol
xor
xchg
(bad)
movs
inc
scas
pop
ss
add
mov
std
push
leave
aaa
mul
mov
ss
popa
sub
addr16
inc
test
iret
stos
cdq
dec
push
ja
popa
inc
mov
addr16
test
inc
dec
cmc
inc
and
jecxz
mov
push
or
(bad)
in
ret
sub
fisttp
aaa
or
mov
adc
mov
xor
ficom
(bad)
jb
xchg
outs
popf
or
sub
mov
mov
frstor
pop
xchg
outs
(bad)
popf
shl
sahf
fisttp
inc
lods
dec
rcr
ror
add
jb
sub
nop
in
cmp
xor
leave
loop
loop
mov
js
gs
jmp
fcomip
jmp
xchg
and
mov
mov
out
je
loopne
push
addr16
and
and
xchg
ds
add
daa
movs
dec
retf
loop
scas
add
mov
rol
mov
adc
xchg
(bad)
lds
push
cmp
imul
inc
ss
mov
rcl
mov
push
and
jno
mov
pop
push
pop
in
fidiv
sahf
sbb
loop
cmps
out
mov
push
fidivr
push
pop
mov
int
push
arpl
and
frstpm(287
movs
push
pop
pop
imul
iret
push
inc
repz
cmp
test
fdiv
push
push
dec
in
pop
or
lods
xchg
adc
xchg
mov
cmp
rcl
jns
fcom
inc
push
movs
xor
mov
sub
xor
xor
out
jp
sbb
js
mov
adc
div
outs
pop
mov
leave
arpl
test
jb
jbe
xor
xchg
shl
sub
add
pop
loop
sbb
lods
mov
fisubr
mov
jae
inc
dec
xchg
inc
cli
and
sar
xchg
(bad)
outs
gs
ja
sbb
dec
jge
test
jns
minps
outs
xchg
clc
icebp
cmps
lods
push
in
shr
xchg
adc
cdq
ins
loope
(bad)
jnp
or
retf
jmp
test
push
inc
hlt
and
pop
push
bound
cmps
mov
into
and
mov
lds
sbb
mov
fsincos
sbb
shr
xor
add
sub
test
cmc
lea
lahf
repnz
inc
ins
pop
pop
nop
xor
in
pop
lock
pop
jnp
sub
rcl
push
cs
push
ja
jae
int
jg
daa
dec
adc
mov
cmp
cwde
movs
int
mov
retf
fstp
lock
push
rol
shr
outs
loop
push
xchg
test
push
pushf
adc
imul
std
inc
ror
popf
mov
nop
inc
dec
imul
xor
(bad)
hlt
mov
shr
jecxz
pusha
xor
nop
push
mov
mov
int3
mov
mov
les
xor
push
lock
ret
fdiv
loopne
mov
stos
lahf
adc
cmps
sbb
mov
popa
jne
loopne
call
xor
scas
ret
out
jg
fistp
inc
jp
dec
fisubr
mov
mov
ins
fwait
xor
mov
mov
daa
adc
cmp
cdq
rol
imul
mov
sahf
mov
popa
in
sbb
jb
xor
jne
pop
mov
jb
cwde
imul
jmp
nop
jecxz
add
cmp
lock
jecxz
mov
adc
arpl
retf
mov
arpl
add
jo
dec
pop
push
sahf
or
push
(bad)
jnp
sbb
jle
push
daa
mov
cwde
cmp
mov
sbb
fdiv
retf
xchg
adc
lock
xor
xchg
sahf
int
imul
mov
dec
popa
das
xacquire
mov
les
jo
fprem1
in
mov
aas
jmp
int
jmp
pop
ins
outs
mov
adc
push
nop
mov
inc
es
fild
inc
(bad)
icebp
mov
or
je
cwde
push
sub
mov
comiss
or
pop
nop
jp
cmc
stc
icebp
adc
xor
cld
sti
les
sbb
bound
out
or
xor
js
or
shl
and
mov
adc
push
push
inc
add
and
or
pushf
add
jmp
fwait
cmp
mov
sub
repz
inc
or
mov
xor
mov
mov
cmp
sahf
fmul
inc
push
xor
aam
adc
ret
std
add
(bad)
and
imul
out
sahf
sti
fs
jl
jl
retf
or
cli
fisub
sbb
jo
in
stos
mov
add
fwait
inc
push
cmp
std
outs
jno
into
inc
xchg
mov
jg
mov
div
fmul
mov
mov
scas
mov
imul
and
shl
inc
(bad)
(bad)
xchg
or
cld
retf
shr
jnp
rol
xor
sub
sub
iret
cdq
cmp
inc
sub
or
pushf
jl
repnz
xor
jp
mov
cmp
mov
jg
into
or
push
ja
sub
pop
pop
ret
xor
das
scas
dec
(bad)
mov
xor
jmp
jp
popf
neg
xor
dec
(bad)
ss
sub
je
xor
daa
aad
push
adc
mov
in
push
push
(bad)
aam
mov
push
cli
cmp
add
cmp
(bad)
pop
movs
ret
cmp
xor
loope
out
cmp
jnp
cwde
jo
je
fst
or
out
data16
shl
add
push
test
ins
adc
mov
jge
and
out
in
dec
cdq
jnp
inc
xchg
fistp
popa
jb
mov
sbb
clc
or
jmp
sbb
push
pop
clc
iret
sti
xchg
mov
scas
cmps
dec
fst
cmp
xor
cmp
gs
neg
jl
pop
push
(bad)
scas
imul
pop
jb
cmp
repz
push
inc
retf
xor
or
das
bound
jae
dec
sti
adc
cmp
fnstsw
pop
sub
pop
mov
imul
daa
into
xchg
jno
sub
fisubr
xor
repnz
fwait
dec
int3
and
push
iret
jno
ss
aad
jmp
mov
test
xchg
fwait
rol
mov
mov
sbb
outs
nop
push
mov
adc
push
jp
in
pop
in
push
sbb
jmp
cdq
sub
dec
ss
inc
inc
xchg
fadd
pop
mov
nop
(bad)
js
inc
rol
add
test
jp
call
push
ins
push
mov
mov
xlat
in
jno
imul
stos
sub
adc
sub
mov
enter
sub
aam
pushf
iret
retf
dec
add
cmp
enter
arpl
cmp
or
test
xchg
sub
push
imul
cmp
and
(bad)
mov
lds
rdtsc
pop
sub
ret
movs
adc
cld
test
cmp
xor
and
ss
dec
jbe
and
mov
dec
mov
and
add
test
repnz
push
movs
add
mov
fiadd
inc
mov
sahf
test
dec
mov
lea
mov
mov
jae
dec
adc
pusha
lods
xchg
lea
sub
test
mov
xchg
cwde
(bad)
ss
cmp
ror
pop
(bad)
aam
divps
fsubr
bound
xchg
xchg
arpl
and
push
sub
and
ror
loop
dec
jmp
sbb
(bad)
mov
or
or
mov
lock
stos
imul
ja
push
and
mov
inc
lock
ret
inc
dec
jp
aas
push
mov
lds
mov
push
dec
xor
mov
lea
adc
pop
mov
iret
ret
mov
fild
into
sbb
xchg
in
icebp
dec
or
test
aaa
sahf
pop
pop
out
pop
xor
sahf
(bad)
cli
xor
xor
fwait
adc
xchg
sar
inc
test
jne
xchg
push
fcom
sti
mov
icebp
sar
mov
sti
jo
xor
call
xor
jecxz
gs
lock
sbb
movs
ins
popa
icebp
fisttp
sti
neg
jno
and
rol
in
bound
scas
out
jb
loop
push
sbb
test
mov
or
jae
lods
fs
loope
es
push
and
cmp
cld
test
je
lock
jmp
aas
sbb
outs
inc
ror
xchg
adc
ins
cmp
test
test
ins
jmp
sbb
sub
cmp
mov
dec
mov
(bad)
stc
out
mov
push
xor
out
movs
cmp
les
pop
aaa
or
sub
idiv
fwait
nop
push
add
xchg
das
test
(bad)
shl
pusha
lds
pushf
pop
jg
(bad)
push
cwde
(bad)
pop
jg
adc
in
fld
test
popa
jmp
mov
cmp
lock
or
jae
(bad)
test
mov
test
in
cmc
popa
and
xchg
mov
shl
lods
lea
pop
cmp
xor
fbstp
mov
popa
cmp
xor
stos
fldcw
xchg
clc
hlt
movs
outs
(bad)
mov
adc
dec
in
sbb
pop
shl
lea
sahf
push
les
mov
push
jmp
test
or
pop
jmp
cmp
jg
arpl
add
aad
sub
mov
mov
call
div
aam
test
pop
inc
int
mov
push
mov
test
jecxz
xor
lods
pop
adc
pop
pop
ss
(bad)
push
jnp
(bad)
mov
mov
cs
xor
sahf
adc
enter
scas
jns
imul
call
add
xor
lods
mov
sub
cmp
jno
push
xchg
dec
lods
(bad)
xchg
adc
add
sbb
mov
inc
ret
push
clc
pop
cmp
adc
pop
jecxz
sbb
call
leave
repz
xchg
int
dec
mov
iret
add
out
hlt
xchg
mov
into
cmps
and
sbb
movs
fisttp
xor
lahf
xchg
cwde
and
mov
mov
add
(bad)
push
es
outs
and
cli
pop
rcl
in
addr16
icebp
or
sahf
sbb
jmp
push
pushf
mov
iret
outs
pushf
sub
mov
out
js
xchg
push
jge
repz
xchg
or
test
cmp
push
retf
hlt
mov
(bad)
ret
jecxz
loopne
addr16
es
mov
js
lds
fild
dec
nop
jno
mov
pop
in
scas
outs
pop
inc
cmp
add
xor
outs
pushf
push
push
push
rcl
mov
sub
shr
jbe
pop
mov
cmp
xor
mov
cmp
push
xchg
ret
mov
stos
or
xchg
popa
push
jne
sahf
fcomp
xor
xchg
push
pop
pushf
xor
in
gs
das
push
sbb
stos
inc
jo
repnz
mov
test
mov
cmp
adc
inc
mov
call
ins
scas
pop
pop
pop
shl
cbw
cwde
arpl
popf
jge
mov
in
rcl
add
push
xchg
cmc
mov
js
out
shl
out
(bad)
repnz
and
(bad)
pop
(bad)
mov
mov
or
or
idiv
ror
xlat
add
or
pop
dec
sub
sbb
and
out
add
repz
ror
ror
or
std
nop
dec
je
pop
mov
test
rol
test
jp
mov
adc
push
in
jl
mov
movs
pop
test
test
mov
xor
leave
popa
cli
jae
push
ret
sti
sbb
ss
in
jnp
pop
cmp
mov
add
scas
sti
pop
frstor
int
push
mov
fistp
mov
jno
outs
or
sub
jle
push
inc
outs
jmp
push
or
outs
sub
lds
adc
cmp
or
je
pop
and
lock
jmp
jo
aam
lea
stos
retf
pushf
mov
and
cmp
dec
inc
push
mov
mov
jp
inc
jl
mov
or
int
xchg
dec
adc
iret
cmp
sbb
gs
shr
xchg
adc
sub
int3
inc
jge
pop
(bad)
fisubr
xchg
out
(bad)
mov
imul
leave
pop
and
xchg
cmp
std
add
leave
cld
sub
cmp
loopne
mov
push
cmp
sub
jmp
mov
jle
data16
imul
loope
sub
retf
clc
leave
sbb
xchg
lock
mov
add
stc
shl
movs
fcom
jmp
repnz
(bad)
bound
push
pop
jl
addr16
test
push
push
xor
enter
imul
push
xor
retf
mov
rol
cdq
mov
out
xor
rol
push
stos
aaa
mov
pushf
retf
push
pushf
dec
aam
or
retf
xchg
lahf
call
mov
ror
ins
dec
enter
idiv
inc
cdq
(bad)
cmp
sbb
xchg
jle
xchg
addr16
xchg
imul
mov
js
sub
sub
cmps
outs
fimul
into
(bad)
mov
in
ins
out
retf
inc
adc
push
test
frndint
xor
cld
shl
sub
fcmovne
ins
add
pop
add
jle
cmp
mov
test
mov
test
and
jge
rcr
(bad)
sti
xor
fs
imul
pop
(bad)
retf
add
adc
mov
loope
mov
out
adc
js
or
outs
mov
jns
xchg
or
std
xchg
add
sti
fisttp
push
loop
jb
imul
int3
je
mov
iret
mov
dec
clc
or
out
xchg
in
add
daa
mov
clc
push
push
push
test
loop
xchg
das
js
jae
mov
sar
(bad)
aas
sar
and
std
xchg
clc
cmp
mov
jb
int3
cmp
adc
ss
pop
pop
push
fcom
lods
loopne
leave
rol
mov
retf
fisttp
inc
je
mov
mov
les
xor
dec
xchg
or
mov
loopne
dec
xor
push
imul
clc
jns
push
xchg
in
jns
xchg
(bad)
test
pop
pop
mov
iret
jge
mov
sub
sbb
in
in
jo
cwde
inc
sti
fdiv
mov
push
adc
jo
mov
sub
xor
ja
jecxz
mov
shr
data16
fstp
cmps
cmp
jmp
or
mov
into
or
call
mov
mov
rcr
cmp
xchg
pop
push
cmp
sub
xchg
gs
outs
dec
icebp
rol
fidiv
iret
imul
lods
jl
shl
add
dec
sbb
or
pop
pop
sar
iret
dec
cld
or
ss
stos
cmps
outs
call
inc
xchg
pop
outs
je
dec
jp
lock
arpl
push
xor
outs
jne
jbe
push
mov
cmp
pop
stos
cs
cmps
les
mov
cmp
add
or
jge
out
mov
pop
jecxz
outs
mov
sub
pop
jmp
push
xchg
stc
fstp
repz
test
add
sbb
fld
jbe
repnz
(bad)
push
fsubr
imul
movs
lock
fimul
push
dec
add
les
inc
pop
mov
(bad)
outs
movs
fmul
cli
pop
and
fidiv
inc
or
ficom
adc
pop
inc
cmp
add
xchg
sub
add
in
push
mul
xor
fnstenv
mov
cmc
xchg
hlt
in
and
ret
or
(bad)
test
xchg
mov
pop
mov
lds
cmc
fwait
add
aam
stc
movs
inc
jnp
repnz
jle
add
jge
jno
in
clc
pop
scas
movs
daa
jmp
adc
or
nop
ja
pushf
or
xor
jno
movs
xor
add
dec
repnz
jmp
aam
aam
sar
xchg
in
jle
fiadd
js
pop
jae
sahf
dec
jnp
inc
popa
fmul
ds
(bad)
mul
stos
xchg
xchg
xchg
mov
mov
or
mov
in
fstp
(bad)
rcr
mov
jecxz
cli
addr16
in
pushf
stos
(bad)
pop
(bad)
frstor
pop
dec
mov
ror
loop
mov
jns
loope
fistp
pop
out
fcmovbe
cwde
div
cdq
sub
jl
sbb
cmp
and
fs
mov
pop
imul
sbb
cmp
fldcw
(bad)
xchg
retf
out
mov
xchg
sahf
xor
xor
jbe
push
pop
adc
aaa
jmp
mov
push
mov
jg
sbb
sbb
jp
mov
jne
jecxz
in
adc
mov
pop
jle
fisubr
or
or
pop
cmp
add
pop
gs
sub
std
push
pop
mov
aaa
nop
call
xchg
and
fstp
aas
popa
push
iret
mov
movs
mov
int3
or
icebp
cmp
dec
xor
push
sub
or
out
into
(bad)
fdiv
fucomp
repnz
jbe
lock
push
int3
and
add
mov
ins
movs
jmp
mov
mov
outs
push
mov
push
dec
sbb
pusha
adc
xchg
pop
sar
cmp
mov
mov
cld
aam
jle
cmp
xor
pushf
xchg
aad
mov
sbb
pop
xor
inc
dec
fistp
jge
div
fadd
loop
rcr
in
aad
jmp
movs
fisub
xor
shl
sbb
pop
and
dec
int
push
cld
test
outs
inc
push
mov
loope
sti
pop
fwait
aam
movs
aas
lods
xor
inc
jae
xchg
pushf
dec
bound
jl
jge
inc
stos
cdq
nop
mov
inc
imul
xchg
cwde
pop
les
adc
sbb
stc
mov
pop
push
sub
iret
jmp
and
in
dec
adc
pop
push
sub
popf
(bad)
pop
scas
push
jmp
mov
fucompp
js
sbb
clc
pop
and
xchg
pop
js
mov
cwde
sbb
add
jae
stos
push
lea
bound
std
xchg
and
push
lock
jo
adc
mov
and
fidivr
xchg
mov
cmp
outs
nop
sbb
push
mov
mov
jp
or
(bad)
mov
inc
adc
in
fisttp
mov
push
add
mov
addr16
mov
jp
add
repnz
jnp
dec
mov
push
inc
adc
es
jle
ds
add
or
xchg
add
mov
and
lods
dec
and
cwde
ret
cli
inc
mov
pop
adc
xor
retf
adc
jge
repnz
jmp
mov
inc
hlt
jge
or
mov
cs
push
sbb
jno
mov
into
ins
scas
mov
cwde
arpl
pop
xchg
mov
out
fimul
jle
(bad)
mov
cmp
inc
cmps
or
mov
addr16
outs
mov
mov
inc
jae
adc
fstp
pop
mov
imul
repz
pop
and
pop
mov
jnp
and
retf
or
mov
sbb
jb
jp
mov
sub
clc
cmp
xor
mov
in
fwait
mov
jb
arpl
int3
rol
cmc
dec
cld
pop
ret
fcom
int3
inc
xor
inc
jno
cld
imul
repnz
pushf
rcl
mov
in
scas
cli
(bad)
loopne
fld
sbb
or
sbb
mov
mov
movs
inc
adc
shl
dec
cmp
and
ret
xchg
push
leave
dec
lea
out
(bad)
cli
mov
and
sub
cmp
mov
jmp
aaa
fsub
pusha
cmp
sbb
dec
or
adc
pop
push
push
xchg
push
xchg
sbb
xor
outs
xchg
out
ja
xchg
or
xchg
(bad)
mov
xchg
cmp
ins
out
sti
lahf
mov
push
cld
inc
loop
or
mov
(bad)
pushf
lods
and
test
bound
mov
rcl
xchg
mov
mov
dec
rcr
sbb
adc
ficom
xchg
imul
push
jge
pushf
jmp
out
rcr
mov
inc
sub
bound
xchg
sbb
pusha
int3
jbe
cwde
mov
sti
hlt
test
ja
fisttp
imul
loopne
sar
xchg
loopne
add
or
sbb
(bad)
dec
ins
in
and
cmps
inc
mov
in
cs
fdivr
sub
mov
push
mov
jmp
lds
sub
lock
pop
in
push
ja
icebp
or
imul
mov
sub
push
push
popa
cmps
shr
sar
mov
or
jg
jecxz
gs
cmp
in
pushf
imul
pop
std
pop
inc
getsec
ins
push
sahf
or
cmc
cmp
jbe
in
jnp
pop
sub
mov
xchg
push
cmp
adc
jmp
test
mov
or
test
and
or
call
dec
ja
add
mov
pushf
test
repz
jge
mov
dec
retf
(bad)
xor
jge
loop
push
lods
dec
add
dec
jnp
fsubr
cmp
pop
enter
icebp
xchg
das
adc
pop
cdq
add
mov
imul
das
and
in
sbb
(bad)
or
push
(bad)
jmp
cwde
cmp
ror
mov
and
jnp
lds
rol
jmp
mov
int3
xchg
pop
ror
xchg
sbb
imul
dec
sub
retf
jae
std
leave
cmp
adc
mov
neg
inc
(bad)
out
jne
cmp
stc
lds
fldcw
mov
dec
(bad)
call
pop
loopne
pusha
inc
jmp
xor
lds
pop
das
vmwrite
xchg
sub
xor
mov
(bad)
mov
rcr
mov
fcom
mov
clc
jae
psubq
movs
inc
adc
push
fstp
dec
outs
bound
sbb
and
adc
mov
cmp
and
into
sub
push
pop
into
fs
test
inc
inc
jecxz
cmp
dec
push
xchg
dec
jne
bound
pop
mov
ins
add
jle
sub
ret
dec
and
mov
sbb
lods
or
inc
cli
fimul
in
pop
inc
pop
ror
push
aas
adc
pop
mov
js
adc
pop
pop
int
mov
inc
push
test
fs
imul
push
cmps
popw
mov
jne
push
xor
cld
enter
inc
jl
add
mov
pop
fs
jge
push
leave
jbe
mov
mov
loop
cwde
out
std
mov
sbb
movs
out
cmp
jno
lock
sbb
int
push
fs
xlat
add
dec
in
inc
lahf
clc
pop
sub
fnsave
sub
imul
push
(bad)
ror
xlat
add
mov
mov
popa
ins
ret
dec
add
ins
lock
or
or
inc
add
icebp
xchg
jno
sbb
adc
ins
mov
push
clc
mov
inc
out
aas
xchg
arpl
aas
int
stos
jns
dec
add
clc
hlt
ja
fs
mov
push
adc
sub
jge
adc
lods
push
or
pop
or
in
movs
mov
(bad)
or
and
cmps
mov
dec
inc
inc
ins
icebp
xor
push
outs
fwait
pop
nop
mov
gs
loop
das
(bad)
cli
js
sub
sub
or
push
cmc
jl
push
pop
das
add
pop
or
mov
sub
pop
pop
mov
and
imul
pop
inc
sbb
sbb
out
fsubr
jge
jb
repnz
imul
sahf
jns
icebp
test
ja
adc
shr
clc
jbe
pop
je
pop
mov
mov
sbb
xchg
(bad)
cmps
cmc
push
push
mov
ins
xor
cmp
push
(bad)
mov
add
movs
popa
das
push
daa
retf
sub
fimul
jnp
pop
aad
loopne
xor
adc
push
push
inc
inc
adc
pop
mov
add
pop
lds
repnz
movs
scas
dec
jbe
sbb
jl
push
push
aaa
call
jno
call
dec
enter
data16
bound
shl
fwait
cdq
xchg
idiv
hlt
mov
mul
std
jne
(bad)
xor
or
jb
(bad)
rol
mov
jg
retf
cmp
popf
xchg
das
mov
mov
mov
sub
xchg
and
mov
mov
pop
sbb
mov
fidiv
dec
cmp
mov
xchg
in
lahf
loop
mov
mov
out
das
xchg
(bad)
pop
popf
jnp
mov
sbb
xchg
aaa
push
mov
repnz
nop
sbb
data16
push
pop
dec
in
pop
and
adc
mov
sbb
xor
mov
loop
and
out
adc
sub
adc
fmul
jecxz
je
jge
jne
or
add
mov
pop
pop
mov
fimul
in
ds
clc
fmul
std
xchg
or
fcmovnu
ins
in
inc
mov
not
js
call
jmp
dec
pop
bound
mov
cld
gs
mov
rcl
xor
inc
cli
inc
sbb
ret
movs
mov
out
sub
add
mov
sar
push
sub
add
stos
popf
aad
add
push
lods
add
clc
pop
sub
dec
add
sub
xchg
lods
mov
stos
aam
push
add
sub
test
mul
add
push
xchg
xchg
xchg
pop
ja
lock
sbb
lods
sub
push
sub
aaa
jmp
test
call
mov
nop
mov
in
xchg
test
dec
mov
(bad)
iret
and
push
dec
jp
sbb
shl
jp
out
sub
leave
push
inc
cs
jmp
mov
sbb
jmp
cmp
lahf
pop
push
mov
out
inc
jp
loopne
imul
popf
stc
push
enter
sar
jg
or
mov
add
lds
mov
std
cmps
and
pop
add
adc
sbb
mov
imul
out
cmps
sub
dec
fwait
std
loope
pushf
test
cmp
or
mov
cli
dec
sub
add
(bad)
xchg
ins
sbb
inc
in
outs
mov
pop
retf
xchg
sub
push
inc
mov
nop
cmp
mov
ins
jns
inc
adc
mov
pop
push
cmp
bnd
outs
and
cmps
adc
movs
sub
cdq
mov
icebp
popa
lock
mov
popf
movs
das
iret
mov
jae
pop
ret
mov
jb
loop
test
push
sti
jmp
test
xchg
int3
jno
dec
jne
aas
jle
inc
dec
outs
in
mov
and
jmp
sub
mov
dec
je
dec
iret
les
adc
or
mov
pop
or
add
gs
mov
pop
push
mov
or
pop
mov
iret
mov
sbb
push
dec
hlt
adc
fbstp
ret
inc
dec
popa
pop
sub
jbe
bound
nop
push
inc
mov
adc
hlt
sub
movs
add
xor
imul
sti
xchg
adc
sar
cmp
adc
add
movs
push
mov
ins
pop
xchg
mov
(bad)
retf
outs
call
xchg
stc
addr16
pop
and
pop
sub
mov
adc
stos
push
mov
mov
(bad)
cmp
xor
ja
fistp
inc
jb
mov
inc
test
in
aad
addr16
pop
or
mov
adc
ds
pop
or
cmp
add
jnp
sbb
mov
enter
xor
clc
movdqa
xchg
addr16
stc
cmc
les
xlat
cmp
mov
and
shr
pop
jmp
xchg
das
add
pop
jns
push
push
int3
ret
(bad)
hlt
ficom
mov
xor
mov
jae
sbb
popf
sbb
out
sbb
jl
stos
cdq
retf
outs
leave
icebp
int
cwde
bnd
xchg
add
mov
nop
or
add
mov
fmul
aas
cmc
mov
jnp
and
xchg
jnp
cmp
ds
mov
das
and
call
daa
cli
rcl
call
scas
enter
imul
bound
rcr
aas
cdq
cmp
jo
pop
aad
and
xlat
xchg
arpl
jnp
push
pushf
jb
ins
ds
hlt
stc
jle
or
lea
loopne
pop
adc
push
ror
and
clc
repz
lahf
stos
ds
xchg
jb
sahf
jbe
push
sti
dec
sub
mov
mov
mov
lods
cli
cmp
push
cdq
pop
dec
dec
not
add
jecxz
cmp
stos
pop
iret
out
stos
nop
sbb
mov
(bad)
std
fadd
push
jnp
es
enter
pusha
cdq
hlt
fstp
loopne
shr
sub
clc
jle
jmp
sbb
mov
or
push
jne
int3
dec
lock
cld
aaa
loop
lods
in
mov
push
sbb
das
icebp
lods
cdq
mov
fisub
mov
and
call
cmps
inc
js
je
lahf
popf
xchg
push
clc
cmp
pop
js
into
mov
jg
les
mov
or
das
jno
(bad)
mov
addr16
popa
sbb
jecxz
repz
mov
pop
aaa
les
and
mov
jp
lahf
lock
lock
jbe
dec
test
(bad)
arpl
(bad)
mov
inc
(bad)
sahf
mov
out
dec
inc
cmp
sbb
arpl
inc
cmp
(bad)
in
arpl
das
outs
fwait
in
or
cmp
inc
aam
sahf
loopne
imul
push
mov
loop
xor
arpl
and
inc
inc
adc
(bad)
cmp
add
in
movs
ss
or
lahf
jecxz
ret
mul
push
rol
and
lock
jns
shl
ja
cmp
icebp
(bad)
sub
push
loopne
mov
or
mov
cmp
xchg
pop
fadd
mov
into
outs
mov
rol
or
mov
mov
xor
lock
jnp
cmp
outs
not
fs
lock
mov
xchg
pop
and
jnp
pop
xchg
mov
icebp
out
adc
test
xchg
outs
jg
sub
(bad)
stos
dec
das
pop
jl
jns
stc
mov
push
push
je
push
pop
and
inc
add
rcr
push
or
pop
into
pop
ror
mov
rcr
neg
fimul
or
js
fistp
ret
pop
sbb
pop
add
outs
or
stos
xor
mov
jne
inc
sbb
adc
cmp
push
mov
xor
int
push
stos
and
pop
es
fst
adc
movs
jecxz
push
scas
fisttp
leave
ds
and
xchg
sbb
repz
stc
mov
sbb
mov
lods
and
rcl
(bad)
stos
push
sar
ror
xchg
pop
in
cdq
mov
sbb
ret
ficom
mov
sub
sbb
popa
pop
aad
sub
in
cmps
lahf
push
cmp
push
mov
xchg
push
xchg
mov
jge
cmp
lods
(bad)
mov
mov
in
fiadd
mov
sbb
adc
out
push
mov
repz
adc
call
daa
retf
in
inc
ss
mov
or
movs
lahf
dec
ds
xor
mov
daa
ror
xchg
test
mov
js
jmp
jb
repz
clc
and
inc
jbe
scas
push
(bad)
fnstenv
outs
xor
adc
jg
push
fcomip
jb
push
fistp
in
or
sub
inc
cwde
test
stos
test
mov
pop
in
cs
jge
and
fsub
vrcpps
lods
xchg
push
jp
fdiv
mov
mov
mov
pop
or
mov
inc
test
lods
movs
xchg
into
adc
add
pop
clc
cmps
xchg
and
jno
lahf
lods
into
mov
sub
jne
and
mov
ss
mov
xchg
enter
test
xchg
outs
popf
leave
or
jb
dec
out
or
push
lahf
fmul
pop
ret
rol
retf
pop
lds
inc
aas
push
dec
sub
lds
mov
dec
push
daa
cmp
add
clc
mov
xchg
cli
not
cmp
pushf
movs
push
int
jmp
inc
stc
ja
adc
xor
stos
js
or
ins
pop
imul
dec
std
dec
test
mov
call
pop
xchg
or
adc
xchg
(bad)
fcom
(bad)
cli
mov
mov
cmp
dec
inc
repz
cli
mov
test
inc
test
dec
push
aaa
pop
mov
fnstsw
(bad)
hlt
sbb
lock
dec
add
cld
inc
jo
mov
jae
int3
push
pop
retf
or
add
sbb
jg
cmps
int3
popa
popa
add
mov
hlt
clc
or
cmp
subps
ins
ins
jp
ds
mov
sti
popa
and
mov
mov
aas
sahf
neg
adc
add
adc
aas
xor
xchg
call
dec
retf
sar
sbb
jmp
sub
aam
int3
xchg
jecxz
test
hlt
shr
scas
movs
cld
dec
dec
dec
mov
sub
sub
or
fist
sub
xchg
fdivp
aas
push
nop
add
inc
mov
icebp
popa
fist
adc
pop
pop
inc
push
loope
aas
add
xor
sub
mov
push
jns
nop
pop
and
frstor
sub
and
mul
xchg
fisttp
jge
adc
push
dec
push
adc
ins
dec
sub
fidivr
movs
jo
push
jbe
sbb
imul
xchg
rol
call
pop
fsub
(bad)
add
dec
dec
push
fnstenv
inc
sbb
or
adc
mov
jmp
stc
sub
push
ja
jns
ins
in
repz
and
add
fdiv
mov
adc
jae
ss
pop
add
xchg
xchg
mov
retf
popa
and
ret
push
aaa
mov
fwait
xor
icebp
or
test
fcom
mov
adc
cs
dec
sbb
sub
fst
aad
cwde
push
shl
sbb
cmp
jle
cmps
mov
lock
pop
pop
mov
ins
imul
adc
inc
adc
push
xor
retf
div
sbb
inc
sub
sbb
cmp
push
test
fimul
cmp
(bad)
pop
dec
ins
(bad)
loop
cmp
mov
outs
out
jl
(bad)
xchg
or
stc
leave
es
mov
in
push
dec
xchg
xor
dec
aas
fdiv
jae
jl
push
ret
xor
call
sbb
jecxz
mov
jmp
fsub
cmp
mov
cmp
mov
lods
ss
add
jp
test
sahf
in
pushf
fadd
pop
fst
jbe
jbe
loop
jmp
bound
pop
in
out
xor
mov
ins
sahf
(bad)
xchg
das
(bad)
cmp
(bad)
stos
(bad)
div
mov
inc
int3
popa
jnp
mov
pop
jecxz
pop
outs
add
ja
mov
int
cmc
pop
leave
movs
xchg
ins
sbb
bnd
enter
mov
test
repz
cli
js
retf
ins
in
adc
xor
sbb
mov
retf
sbb
xchg
mov
pop
(bad)
push
pop
bswap
add
out
or
mov
push
das
fisttp
mov
push
mov
push
outs
sub
adc
mov
xor
pop
ins
mov
mov
fst
movs
clc
dec
rol
idiv
scas
cmc
into
repnz
test
xchg
fisub
popa
lock
fstp
sbb
shr
mov
ret
sub
repnz
xor
mov
push
push
inc
stos
ins
icebp
and
sub
std
mov
add
push
and
or
retf
popa
or
or
add
fs
cmps
in
fsubr
popa
mov
test
movs
scas
stos
inc
push
sbb
outs
mov
push
adc
cmp
es
fwait
(bad)
sub
cs
stos
and
fcomp
loopne
pop
add
cmp
sbb
cwde
mov
dec
mov
ins
ret
xor
ss
and
sub
push
dec
int3
add
mov
call
sub
push
xor
jecxz
mov
mov
dec
sbb
aam
pop
shr
mul
lea
cld
call
push
and
fdivr
sbb
cli
xchg
lods
pop
cmp
fbld
pop
adc
xor
and
ins
jg
push
mov
neg
add
mov
cmp
arpl
sub
es
nop
and
sub
ja
adc
dec
mov
mov
pop
test
stos
cwde
and
call
add
outs
ins
popa
sbb
sbb
adc
out
dec
and
imul
cmp
and
out
fadd
std
inc
jbe
rol
xor
mov
sub
xlat
add
shr
sbb
lods
mov
ss
push
repz
mov
icebp
repz
sub
adc
imul
xchg
push
cmps
sti
neg
xchg
mov
pop
xchg
push
mov
push
push
jno
inc
push
cdq
cs
push
and
sub
cmps
test
out
rcr
mov
int
mov
fwait
scas
add
(bad)
mov
nop
or
lds
cli
fsubr
shl
mov
mov
or
adc
retf
aas
push
and
jle
aas
xchg
mov
add
dec
sub
int
jno
add
push
mov
test
outs
icebp
push
cs
xchg
stc
pop
inc
or
repnz
adc
mov
mov
fisttp
jmp
lea
rcr
lds
scas
xor
fild
int3
or
sbb
pop
hlt
(bad)
mov
js
xor
std
(bad)
jo
popa
mov
pop
dec
movs
movs
mov
push
(bad)
and
rcl
xchg
imul
inc
mov
xor
cmp
xchg
es
add
or
cmc
retf
xchg
ds
cmps
(bad)
aaa
or
lahf
aad
xchg
lds
add
out
shl
jbe
(bad)
mov
mov
and
pop
and
mov
adc
add
mov
pop
int3
out
aam
ss
sbb
push
dec
lock
fdiv
dec
mov
(bad)
dec
or
lock
(bad)
jecxz
inc
fidiv
imul
mov
cdq
adc
fsubr
mov
mov
mov
repz
iret
sar
(bad)
adc
push
add
xchg
xchg
sub
mov
jno
rcr
popa
xchg
jmp
dec
push
jmp
push
jmp
pop
dec
mov
int3
cwde
shl
inc
add
push
cmp
jl
ins
ds
dec
dec
cdq
mov
pop
cmps
mov
mov
or
mov
shr
rcl
adc
lods
imul
imul
out
inc
mov
mov
rol
pop
shl
fist
jnp
leave
mov
test
mov
stc
and
pop
aam
lds
out
neg
or
jns
lock
test
xchg
fisub
mov
fcomp
push
and
imul
in
ja
push
out
outs
sti
sbb
xchg
mov
out
add
cmp
pop
fld
or
dec
call
xor
mov
repz
add
pop
mov
inc
push
jg
xchg
inc
(bad)
xchg
pop
push
sar
cwde
and
cmp
push
(bad)
enter
or
pushf
je
mov
pop
push
sbb
or
cmp
jecxz
cli
sub
out
repz
sub
(bad)
or
jl
pop
les
shl
pusha
data16
or
ins
sub
push
mov
or
inc
arpl
jbe
pop
imul
mov
pop
test
mov
movs
sti
xchg
mov
mov
push
cs
pop
shl
xchg
inc
dec
(bad)
mov
fistp
dec
add
add
jmp
xchg
xor
clc
push
push
sub
loope
or
sub
nop
cld
cld
in
mov
dec
push
mov
test
mov
out
mov
mov
pop
gs
mov
or
fistp
sbb
push
mov
dec
sar
inc
cmp
push
jns
fdivr
mul
repz
lods
popa
cmp
movs
jo
xor
pop
cmp
cmp
cli
sbb
add
push
adc
mov
in
and
dec
and
cli
and
ret
out
sbb
fs
data16
rcl
pop
adc
hlt
fcom
loop
jmp
xchg
jae
inc
jg
sbb
enter
lea
mov
dec
pop
sub
lods
cmp
jmp
cmp
sahf
mov
inc
cmp
fisttp
xchg
stc
in
mov
push
cld
ffree
out
push
addr16
int3
mov
push
xchg
cld
mov
sbb
lock
add
aas
cmovle
retf
push
adc
loopne
jge
push
lahf
ins
fwait
pop
pushf
sbb
sar
push
dec
rcl
and
sbb
inc
jae
jbe
mov
jmp
sub
xchg
jb
(bad)
mov
jl
in
out
in
add
add
out
js
push
clc
test
jecxz
lea
jmp
shl
fistp
xor
mov
mov
pop
push
push
cmp
xor
mov
aas
out
call
bound
adc
xchg
(bad)
addr16
mov
pop
pop
test
retf
push
imul
xor
cld
sub
pop
stos
xlat
xchg
cmps
dec
or
pop
add
pop
cmp
push
and
(bad)
mov
sbb
leave
mov
xchg
loop
dec
sbb
adc
or
and
mov
push
push
addr16
push
jecxz
sti
repz
outs
pop
dec
pop
sbb
cmp
inc
inc
xchg
ficomp
mov
cli
dec
imul
cwde
popa
dec
outs
push
mov
mov
xchg
mov
dec
mov
pop
scas
mov
xor
test
pushf
pop
out
mov
or
inc
jl
(bad)
out
mov
pop
pusha
xchg
ror
mov
xor
cld
mov
shl
xchg
loope
lods
(bad)
push
dec
mov
pop
mov
shr
push
dec
pop
and
mov
inc
push
shl
sub
push
in
fneni(8087
loopne
ins
ret
mov
leave
dec
rcr
nop
stos
test
adc
dec
push
in
sbb
cmp
sbb
adc
es
mov
arpl
push
scas
loope
imul
les
xchg
lahf
cmp
repz
cmps
sbb
stos
lock
es
and
and
cmp
add
jl
outs
cmps
adc
call
retf
xchg
lods
mov
adc
mov
imul
sub
clc
rcl
sub
sub
push
ret
cmp
(bad)
call
and
(bad)
jmp
inc
test
sbb
in
and
cmovb
int
pop
test
pop
xor
inc
ja
inc
xchg
pushf
fsubrp
and
popf
enter
mov
jge
mov
(bad)
dec
dec
mov
je
popa
sbb
mov
xor
(bad)
ret
in
and
add
sub
push
dec
pop
mov
jns
repnz
aam
pop
jnp
dec
cld
enter
mov
add
shr
arpl
inc
mov
cli
xchg
sahf
push
cmp
outs
ror
dec
je
sbb
inc
data16
sub
lea
out
iret
and
mov
mov
pusha
mov
xchg
lds
pop
cmc
je
xchg
aaa
repz
jle
ins
stos
sti
mov
jl
cmp
(bad)
out
stc
pushf
jno
and
cmp
and
(bad)
nop
add
pop
push
dec
stos
jmp
test
dec
out
jns
pop
and
es
and
scas
test
fbld
pop
imul
lods
stos
out
pop
xor
int
dec
inc
mov
inc
cli
dec
nop
dec
jns
push
shr
(bad)
mov
std
mov
cdq
test
add
mov
mov
cdq
add
icebp
xor
mov
jle
xor
rol
adc
imul
add
jmp
push
inc
sbb
cmc
daa
adc
cmp
int
mov
mov
ja
in
mov
xlat
inc
mov
es
rol
int3
sub
push
xchg
sub
iret
cld
mov
xor
mov
adc
fs
mov
pop
dec
pushf
shl
cmp
ret
and
cdq
movs
dec
or
cmp
(bad)
cmp
loope
push
mov
ins
and
xchg
mov
cmp
cmp
rcl
or
mov
into
inc
clc
out
retf
adc
add
pop
add
jg
jmp
cmp
or
xchg
push
xor
pop
push
in
mov
pop
xchg
fwait
ja
mov
mov
retf
xchg
dec
mov
sbb
jle
xchg
pop
outs
dec
das
push
cmp
mov
movs
ins
adc
jmp
js
dec
into
leave
jecxz
dec
gs
jle
sub
cmps
mov
push
jle
test
jp
data16
jmp
ror
(bad)
out
rcl
xchg
jecxz
jecxz
aas
and
loope
jecxz
leave
adc
mov
inc
into
clc
shr
xchg
out
pop
outs
or
push
jmp
and
inc
inc
or
mov
add
sbb
(bad)
(bad)
or
and
inc
pushf
sbb
xchg
scas
imul
sub
add
pop
cs
adc
jmp
cwde
in
out
mov
mov
adc
pop
out
jbe
add
or
push
cdq
dec
xor
cmc
mov
and
push
sti
in
cld
sbb
ret
aad
les
sbb
xchg
(bad)
push
adc
xor
sbb
retf
mov
stos
(bad)
sub
add
ret
mov
cmps
mov
retf
or
cld
int3
mov
or
and
cmp
adc
cmp
adc
cwde
(bad)
not
imul
lahf
jp
sub
inc
or
mov
fmul
jl
lods
or
and
mov
aaa
sbb
ins
std
and
push
hlt
(bad)
clc
out
fld
sub
sub
loopne
(bad)
fcom
sbb
xchg
cs
mov
and
les
cmp
sub
xchg
adc
std
lds
addr16
jp
std
imul
jns
inc
mov
push
aas
mov
and
push
add
mov
xor
mov
push
sub
jae
popa
xchg
xor
shl
out
jne
int3
mov
mul
loope
mov
rcl
stc
aad
and
inc
mov
xor
cmps
sbb
mov
dec
fistp
sbb
movs
mov
and
scas
xlat
mov
jmp
nop
add
(bad)
pop
outs
cli
pusha
(bad)
jmp
adc
jge
popf
shr
sar
jns
mov
jno
out
push
std
imul
mov
pusha
add
inc
test
add
jl
fisubr
es
xlat
pop
jge
mov
test
dec
inc
adc
and
cs
dec
dec
sbb
fnstsw
dec
and
xchg
sahf
xor
or
sub
imul
rol
bound
inc
add
mov
or
push
fld
mov
sti
test
pusha
cmp
adc
das
xor
in
icebp
sbb
inc
jne
adc
xor
jp
mov
jecxz
outs
hlt
outs
jmp
fwait
jmp
pusha
mov
mov
jne
xor
mov
in
ds
pop
mov
sub
and
mov
lods
xor
mov
ffreep
add
add
adc
sbb
loopne
pop
cmp
loopne
adc
int3
(bad)
add
aaa
rol
pop
lds
xor
adc
sbb
lahf
or
les
xor
xchg
fcmovne
into
out
frstor
scas
stc
jb
dec
push
mov
call
bound
fldcw
cmp
pop
cmp
aam
into
push
cmp
xchg
daa
cmp
fidivr
sub
je
mov
(bad)
cmp
cmp
in
xchg
xchg
mov
or
jmp
je
std
dec
inc
movs
pop
mov
repnz
jbe
xchg
loop
pop
sbb
pop
or
mov
mov
xchg
je
dec
fdivp
xchg
xor
mov
mov
xchg
and
cmp
mov
or
stos
jge
cmp
mov
xchg
fwait
jae
xchg
cmp
(bad)
fsubp
test
and
ins
add
mov
sar
add
jmp
cmp
or
pop
bound
cld
mov
push
lock
pop
adc
bound
add
push
std
add
loop
sub
xchg
jecxz
adc
sbb
sbb
dec
or
mov
in
imul
jbe
stos
(bad)
mov
or
jne
jmp
test
icebp
mov
ss
and
mov
sub
xchg
jnp
cmp
xchg
outs
dec
idiv
push
lds
jb
(bad)
aam
ret
call
inc
xchg
aam
test
pop
push
xlat
out
nop
jbe
je
mov
jne
xor
call
ds
push
inc
call
sbb
mov
sub
push
add
adc
jns
int
fs
loopne
stc
jecxz
popf
push
ja
scas
inc
inc
pop
(bad)
js
push
es
push
test
pop
jbe
mov
les
retf
gs
dec
pop
scas
push
sub
mov
rcl
out
loop
jg
xor
mov
mov
out
push
mov
movlps
inc
xchg
pusha
(bad)
lock
mov
or
outs
add
cli
popa
lock
sub
or
out
dec
sub
push
loop
sub
cmp
or
adc
mov
mov
sub
nop
lods
outs
fcom
cmp
jg
xlat
fst
repnz
xlat
fimul
loope
mov
lock
mov
mov
dec
mov
jne
or
call
(bad)
mov
dec
out
loopne
mov
cmps
loope
add
and
xor
xchg
jmp
jp
das
or
outs
je
mov
inc
or
rcr
jp
push
xor
clc
dec
fistp
xchg
(bad)
lds
mov
or
jne
sti
loope
pop
in
leave
jns
push
xchg
leave
jecxz
push
ins
enter
adc
xchg
dec
dec
cmp
iret
ret
pushf
aad
cmp
adc
pop
cmp
xor
sbb
mov
push
cwde
das
aad
jne
jo
cmp
jbe
push
jge
icebp
ret
mov
mov
sub
fild
ja
and
pop
xlat
(bad)
cmp
in
dec
pop
movs
data16
lahf
pop
push
dec
ins
sahf
shld
mov
dec
jge
cdq
ffree
fwait
scas
push
and
aam
movs
xchg
shl
mov
lods
xor
cld
jge
jp
stos
je
jnp
call
jb
lods
add
outs
iret
jb
into
ins
retf
pop
jl
sub
push
retf
xor
adc
into
sub
pop
xor
imul
mov
mov
pop
and
cmp
add
in
mov
gs
test
adc
jmp
pop
out
(bad)
cmp
cmc
imul
jmp
xchg
ds
test
inc
jg
push
repz
dec
test
push
and
and
xchg
mov
aas
push
pop
repz
int3
push
xor
add
inc
add
sbb
xchg
xor
dec
adc
jmp
dec
(bad)
repz
jb
retf
imul
ins
and
jb
icebp
push
xlat
cmp
mov
out
mov
adc
add
mov
stc
inc
fwait
jge
cli
mov
xchg
shl
fldl2t
cmp
dec
xchg
or
test
mov
cmp
pop
mov
cmp
dec
sub
or
mov
addr16
or
xor
pushf
xor
mul
icebp
ss
(bad)
into
or
fnstsw
test
xchg
jb
loop
mov
pop
pop
xchg
push
pop
std
cmps
ror
inc
movs
in
outs
shr
and
hlt
call
dec
push
adc
popa
cmp
and
adc
ins
jnp
pop
(bad)
pop
add
mov
mov
int3
bound
jge
pop
js
sub
jl
adc
pop
jmp
nop
retf
mov
mov
dec
add
test
pop
add
xchg
xor
or
retw
mov
inc
inc
xchg
or
out
addr16
jmp
aam
xor
mov
int
sub
rol
mul
cmp
das
in
jbe
ror
push
push
retf
jl
sar
sbb
fldcw
scas
outs
add
int
xor
jbe
mov
add
and
push
xchg
leave
test
lods
adc
cwde
leave
cli
jg
mov
dec
mov
repnz
test
mov
mov
cdq
mov
inc
inc
or
lods
pop
mov
mov
xor
outs
pop
mov
loopne
cld
or
pop
push
out
inc
iret
loop
add
int3
(bad)
cdq
jo
movs
sti
mov
add
jo
fdivr
inc
jae
ins
shr
(bad)
in
(bad)
sub
sub
jg
cwde
retf
stos
test
gs
inc
aam
xchg
sbb
jle
ss
jnp
xchg
add
outs
sar
repz
mov
test
push
es
xchg
std
ds
jecxz
push
in
mov
jno
xorps
dec
imul
nop
retf
mov
shl
repnz
call
xchg
aaa
or
mov
adc
pop
movs
outs
push
push
sub
or
sub
inc
(bad)
popa
sub
mov
inc
jne
add
dec
mov
cwde
jnp
(bad)
xchg
loopne
jnp
xchg
sbb
retf
mov
or
push
repnz
jl
inc
and
cmp
pop
xchg
inc
push
outs
xchg
cmp
lahf
test
arpl
out
mov
scas
cmp
ret
sub
(bad)
jge
and
mov
push
ret
and
inc
or
ror
je
mov
ins
ins
cmp
push
cmp
in
ret
idiv
inc
push
aas
das
adc
outs
test
loope
push
inc
add
push
mov
cmp
push
call
vrsqrtss
push
cmp
fist
test
sub
ja
data16
adc
xor
gs
in
aas
test
cmps
rol
jl
popf
fs
xchg
dec
out
pop
loopne
pop
jno
or
popf
dec
pop
arpl
loop
rcr
movs
into
pop
retf
push
sahf
sbb
int
stos
fwait
push
sahf
sbb
outs
iret
sbb
xor
inc
mov
push
inc
je
add
xchg
push
sub
fst
(bad)
jnp
imul
addr16
cmp
test
inc
loopne
rcr
mov
push
movs
(bad)
jmp
cmp
jecxz
push
mov
popa
out
inc
pop
mov
and
int3
inc
mov
std
or
mov
repz
inc
aam
out
(bad)
push
stc
ja
or
jmp
jmp
test
lods
pop
repnz
int
xchg
mul
jne
cwde
add
jbe
retf
jne
cmc
mov
inc
sub
jae
and
sahf
bound
int
pop
and
pop
inc
fisub
imul
xor
pop
sub
hlt
inc
fidivr
ins
fcmovne
call
loopne
or
out
lods
xlat
mov
cs
jbe
ja
sbb
ins
sahf
push
into
mov
movs
add
push
fldenv
and
ja
imul
adc
inc
repz
jp
fs
push
iret
fdivrp
jno
sub
push
dec
xchg
cld
sub
hlt
or
mov
and
mov
test
mov
mov
or
push
xor
push
push
jmp
add
jp
xor
js
pop
ret
repz
cmp
mov
(bad)
pop
or
mov
sbb
sbb
repnz
or
stos
sbb
(bad)
jbe
aam
std
test
mov
enter
fdivr
fcom
(bad)
mov
test
cmc
nop
sbb
fldenv
inc
or
sbb
add
mov
or
enter
scas
push
dec
movs
cs
mov
arpl
dec
xlat
pusha
xchg
int3
repz
fnsave
adc
mov
fstp
pop
imul
mov
sbb
pusha
adc
fcom
fidivr
xor
dec
movs
imul
ja
cmp
retf
and
lods
or
xchg
js
sbb
(bad)
sbb
repnz
adc
cmp
jbe
call
jge
cmp
pusha
push
dec
and
mov
in
cmp
repnz
mov
dec
imul
mov
fsubrp
enter
enter
push
push
cs
rol
inc
mov
inc
jmp
loopne
pop
enter
iret
mov
fxtract
ror
pop
stc
repnz
or
inc
jle
outs
test
and
or
movs
addr16
sbb
fwait
mov
mov
mov
ja
jno
mov
mov
loope
scas
lea
xor
push
arpl
cli
cmp
stc
push
pushf
adc
fistp
adc
test
add
xchg
imul
out
mov
mov
cmp
aas
or
or
mov
or
je
les
dec
(bad)
sub
jb
std
fmul
fadd
and
lods
xor
fdiv
stc
xchg
sbb
pop
pop
enter
jo
mov
(bad)
wbinvd
jl
sub
or
cmp
fmul
adc
in
mov
out
jbe
push
(bad)
xchg
(bad)
jmp
(bad)
jg
inc
push
fucomp
retf
outs
pusha
adc
int3
mov
mov
lods
sub
imul
and
enter
mov
add
ss
adc
pop
outs
pusha
fdiv
add
or
cmc
xlat
adc
fcmovne
neg
arpl
sbb
neg
sbb
loopne
adc
adc
mov
adc
aaa
and
sbb
sahf
jno
div
test
bound
lahf
or
pusha
fs
and
adc
jp
xchg
call
jne
cmp
stos
dec
fnsave
cdq
mov
sbb
mov
pop
dec
test
ficom
stos
jp
fisub
or
xchg
jl
iret
dec
mov
inc
pop
hlt
ret
ret
mov
ret
cli
mov
xchg
daa
dec
jmp
add
push
sbb
repnz
imul
dec
daa
add
icebp
cs
ds
or
aam
test
dec
push
sub
pop
out
or
adc
loope
mov
pushf
(bad)
fcmove
jle
(bad)
outs
dec
sub
pushf
xor
in
push
rcl
add
test
dec
mov
out
add
inc
retf
sti
les
adc
inc
mov
data16
add
xchg
es
xchg
fs
aaa
cmps
and
ret
mov
in
bnd
cmp
and
scas
mov
add
outs
jle
mov
cwde
call
pop
pop
ret
dec
sbb
sbb
inc
rcr
mov
sub
mov
repz
pushf
push
sub
push
add
xor
imul
stc
out
dec
push
sbb
push
lods
jecxz
loope
stos
mov
adc
repnz
add
repz
fnstsw
shl
push
out
out
mov
pop
cmp
les
jb
scas
push
xchg
xor
icebp
push
sub
call
pop
call
pop
(bad)
jl
dec
iret
xchg
daa
mov
mov
and
bound
mov
sub
add
test
cmps
fsub
push
cmp
hlt
repz
test
inc
or
aas
and
imul
es
pop
jle
jg
mov
in
or
loopne
addr16
mov
int3
xor
aas
add
adc
sbb
push
repz
sub
into
push
mov
push
mov
pushf
out
cmp
sbb
cmp
outs
cmp
mov
pusha
(bad)
rcr
neg
adc
sahf
push
push
mov
pop
sub
xor
aam
out
out
fmul
ret
cmp
cmp
scas
push
out
std
inc
retf
xlat
jne
sti
hlt
call
mov
mov
(bad)
je
fldcw
jno
push
or
dec
mov
(bad)
adc
arpl
nop
cwde
out
inc
lock
mov
add
xchg
popa
loopne
loop
mov
or
pop
adc
cmp
outs
fs
pop
lock
push
es
adc
dec
cdq
sbb
pop
dec
sbb
and
in
cmc
push
xlat
or
rol
cs
fcom
sbb
daa
xchg
and
mov
popf
mov
sar
repz
dec
imul
scas
jbe
xor
mov
mov
mov
push
jo
mov
(bad)
sub
push
fcomp
ins
sub
scas
and
jns
out
stos
xchg
adc
xchg
push
add
adc
jmp
(bad)
(bad)
xchg
adc
gs
and
pushf
cwde
(bad)
push
mov
fmul
int3
jne
loopne
outs
cmp
push
cld
fist
cmp
push
int
xor
inc
and
scas
xor
into
cmp
dec
or
fwait
or
mov
mov
in
movs
data16
xlat
adc
sub
dec
jo
lea
adc
popa
ins
mov
adc
stos
repz
jmp
sbb
ss
sbb
lahf
inc
jbe
inc
lahf
sub
popf
pusha
movs
dec
inc
cwde
aad
cld
clc
mov
outs
and
ror
jl
mov
clc
dec
inc
shl
or
inc
pushf
push
dec
sub
sbb
sub
fld
loopne
cmp
push
test
aas
cmp
aaa
test
pop
xor
xlat
or
shr
mov
jp
mov
out
les
and
loopne
push
dec
inc
movs
cmp
pop
inc
add
mov
and
mov
dec
xchg
stos
fisubr
gs
dec
adc
dec
aad
add
jl
mov
lods
push
adc
and
or
cmps
sub
iret
ins
xchg
call
(bad)
std
cs
dec
test
test
ficom
push
fdivr
adc
retf
int
fstp
js
dec
(bad)
mov
lds
btr
inc
test
xor
cmp
push
arpl
(bad)
enter
sub
movs
outs
pop
(bad)
out
inc
jmp
repnz
imul
fnsave
or
jne
and
cld
add
fiadd
push
cmp
mov
repz
push
or
adc
stos
pop
dec
cmc
aaa
mov
jge
int3
in
sub
mov
repz
(bad)
jmp
fwait
xor
jae
mov
xchg
sub
sbb
test
pop
(bad)
jl
data16
sbb
(bad)
leave
pushf
test
daa
jl
ret
ins
data16
pop
jle
fdivr
das
jbe
pop
mov
movs
cmps
out
(bad)
jl
leave
push
jmp
add
repnz
cmp
(bad)
pop
hlt
mov
sbb
push
aaa
das
aad
inc
mov
cmp
mov
push
sahf
sub
xor
arpl
mov
test
fadd
stos
dec
push
mov
push
xchg
or
lods
inc
jmp
sub
jmp
xor
add
ins
inc
outs
cdq
cmp
xor
jg
rcl
mov
adc
jns
fsubr
daa
popa
inc
inc
les
lahf
and
mov
cld
ret
loope
cdq
xor
mov
xchg
mov
cwde
and
movs
dec
lds
jl
outs
xor
mov
or
mov
movs
jp
cli
jmp
test
mov
push
ins
je
adc
xchg
and
daa
pop
push
adc
jo
shl
pop
out
stos
mov
mov
xor
in
push
push
or
fdiv
cmps
icebp
push
adc
dec
(bad)
cmp
adc
daa
leave
ja
inc
retf
cmp
dec
fstp
clc
push
jbe
les
test
and
xchg
(bad)
pop
mov
out
loope
pop
add
inc
sub
bnd
retf
fistp
lea
fs
std
inc
fbld
push
push
imul
mov
jmp
mov
das
mov
jne
xor
mov
sub
push
add
push
in
pop
mov
clc
push
ror
mov
cmp
and
outs
(bad)
(bad)
pop
cmps
hlt
cmp
xor
imul
inc
fnstsw
mov
movs
sub
cmc
mov
iret
inc
jnp
pop
sub
stos
aad
test
bound
sbb
shl
lea
jns
or
fdivr
cwde
ret
inc
in
fs
jb
test
test
repz
xor
repz
out
dec
add
xchg
push
fwait
shr
enter
sbb
cs
call
loope
fcom
stos
js
adc
dec
mov
lods
mov
fadd
jl
rcl
sub
rcr
or
mov
not
jnp
nop
adc
dec
and
cmp
daa
push
push
push
idiv
sbb
pop
and
pop
jmp
data16
add
push
adc
xchg
imul
mov
test
inc
mov
pop
pop
mov
dec
pop
add
xor
scas
call
lods
push
push
sub
int
outs
bound
mov
dec
sti
or
xor
cmp
outs
dec
sbb
dec
jns
(bad)
in
lods
fstp
rol
imul
test
jg
rcr
aad
cmp
sbb
test
lahf
mov
sbb
mov
push
sub
jl
dec
sar
loop
loopne
push
mov
aaa
xchg
pop
loopne
(bad)
lea
or
ret
xchg
and
and
int
lahf
xchg
sub
add
xor
and
inc
and
xchg
or
inc
sub
or
mov
ins
cli
or
mov
xchg
mov
mov
dec
jle
sbb
out
repz
push
stos
rcl
push
and
mov
cmp
into
mov
cmp
mov
ds
mov
pushf
xor
jns
in
imul
jp
fidiv
(bad)
sub
(bad)
push
xor
div
or
jae
in
retf
pop
rcr
std
xchg
mov
mov
xchg
jmp
stos
xchg
xor
pop
xlat
pop
es
cmp
inc
mov
or
dec
popf
jecxz
xor
jmp
cmp
sahf
and
sbb
jp
inc
rcl
out
jmp
cmp
jae
out
inc
imul
call
adc
scas
lahf
loopne
jno
dec
sbb
sub
pop
mov
scas
sub
pop
nop
mov
adc
mov
bound
fwait
cdq
ja
ror
push
rcl
pop
jmp
not
ret
bound
rcl
add
in
pop
dec
ja
stos
xor
push
arpl
mov
push
sbb
mov
xchg
sub
imul
and
mov
xor
imul
xor
icebp
xor
(bad)
test
mov
add
and
and
mov
cmps
(bad)
jns
jge
cdq
push
adc
ds
pop
fcom
xchg
mov
ins
dec
add
push
cmp
scas
push
sbb
aad
call
mov
out
or
mov
sbb
sub
xchg
ffreep
and
repz
mov
add
(bad)
adc
les
jecxz
sbb
add
adc
xchg
mov
call
stc
mov
or
jnp
enter
leave
(bad)
ds
jmp
xchg
xchg
fwait
dec
xchg
and
xchg
xor
jb
sbb
shl
or
mov
or
mov
sbb
push
repz
pop
inc
xchg
sti
mov
mov
into
mov
(bad)
stc
push
adc
outs
add
adc
adc
or
movs
mov
cdq
xchg
dec
pop
rcr
test
xor
xchg
push
cs
int
or
add
xchg
xor
jbe
int
test
imul
dec
xor
call
ud0
lods
je
jg
scas
imul
push
mov
push
(bad)
push
mov
aaa
les
add
ror
out
push
leave
push
icebp
jno
jns
out
sub
mov
leave
and
pop
push
sub
sbb
mov
sub
fs
jnp
popa
scas
cmps
mov
hlt
xchg
xchg
pop
imul
cmp
daa
mov
inc
pop
je
ins
icebp
jge
daa
js
mov
inc
rcr
loopne
in
nop
movs
mov
arpl
mov
je
mov
cmp
push
stc
and
jbe
into
pop
push
(bad)
fdivrp
imul
mov
add
pop
adc
mov
arpl
(bad)
jbe
sub
push
push
pusha
jecxz
pop
add
xor
jp
jae
int3
push
push
aad
enter
rcl
int
inc
test
jle
movhps
cld
pop
daa
das
jno
jb
jae
sti
mov
xchg
mov
sub
dec
(bad)
retf
mov
add
or
ret
cwde
or
scas
fs
retf
push
ror
push
cli
pushf
fisub
xor
addr16
push
mov
jns
inc
ds
ror
push
mov
outs
je
pop
mov
push
repz
mov
jp
dec
cmps
lahf
in
jae
(bad)
inc
xchg
jle
mov
lods
out
xchg
or
jle
out
rol
int
leave
in
lds
mov
retf
dec
mov
inc
(bad)
call
test
jecxz
imul
pop
sbb
sub
mov
add
mov
rcl
and
mov
arpl
xor
sahf
push
int3
push
pusha
retf
inc
dec
add
jb
ins
and
pushf
mov
fadd
push
fst
(bad)
mov
imul
ins
sub
cmp
aad
adc
(bad)
(bad)
ins
cmp
lock
xchg
push
pop
mov
add
mov
std
add
out
dec
sbb
adc
aad
and
aam
std
fsub
retf
inc
loopne
pop
xchg
js
or
sbb
or
call
pop
ret
push
jne
cdq
daa
push
outs
stc
or
aas
test
cmps
cdq
aaa
push
or
xchg
xchg
call
or
loop
add
sbb
(bad)
jle
scas
add
or
xchg
jne
mov
arpl
adc
inc
mov
mov
sub
xchg
mov
lock
or
add
xchg
outs
stos
jae
push
movs
sub
stos
ss
jnp
inc
sub
xor
ins
mov
xchg
outs
dec
mov
ret
pop
(bad)
stc
push
scas
mov
fcomip
add
push
rcl
push
mov
addr16
pushf
into
mov
mov
mov
fadd
stos
xlat
xchg
dec
(bad)
push
and
cmp
outs
mov
dec
xchg
mov
jmp
(bad)
nop
cmp
fadd
add
mov
inc
int3
in
sbb
sbb
fwait
into
jnp
pop
jecxz
dec
ins
movs
jmp
adc
loop
jb
movs
cmp
and
into
int3
dec
(bad)
idiv
cli
int3
stos
sbb
xor
push
jns
inc
sbb
das
ins
push
push
jns
dec
loope
adc
mov
cmp
mov
data16
xor
cmps
(bad)
cld
jl
cmps
dec
sub
loope
cmc
gs
xor
push
call
pop
mov
enter
xchg
jl
xor
xchg
movs
and
pop
iret
pop
adc
fcomp
std
outs
repnz
push
sub
ss
movs
mov
mov
mov
push
and
call
xchg
jle
inc
addr16
inc
div
fld
jb
mov
cmp
imul
sub
sbb
std
hlt
fiadd
fs
push
mov
push
ss
addr16
ret
pushf
mov
fwait
push
shl
(bad)
push
hlt
iret
shr
jns
hlt
cld
out
cld
push
sub
sub
cmp
add
dec
mov
pop
dec
scas
inc
lock
xchg
sar
pop
cwde
push
sahf
clc
inc
outs
retf
pop
mov
rol
cmp
je
inc
movs
or
dec
inc
sbb
repnz
das
and
pop
xchg
mov
cmps
push
xor
das
movs
loope
xchg
movs
add
pushf
pop
or
xchg
adc
js
pop
pop
icebp
into
retf
mov
int3
pop
jae
jmp
fwait
fs
jge
lock
(bad)
fnstsw
dec
add
jno
ret
je
and
mov
xchg
arpl
push
jle
in
adc
call
out
inc
jecxz
lds
inc
lods
adc
push
pop
data16
jmp
scas
clc
jmp
jno
push
xchg
mov
inc
add
cdq
aas
bound
cmps
push
fnsave
or
mov
or
xor
into
mov
push
mov
ja
inc
sbb
ins
xchg
push
mov
push
loop
test
pop
xchg
jl
gs
dec
fstp
inc
int3
jl
sti
ret
sahf
leave
movs
or
retf
pop
scas
outs
js
xchg
lahf
cmp
and
rcr
addr16
mov
inc
iret
push
push
pop
popa
and
push
dec
pop
rol
aad
mov
int3
dec
pop
pop
jno
and
loope
lahf
test
movs
cmps
hlt
(bad)
clc
clc
dec
sub
ret
std
xor
dec
pop
lea
ds
std
test
jns
mov
xor
out
or
rol
shr
or
movs
mov
movs
xor
dec
push
lahf
sub
pop
movs
push
ins
(bad)
xchg
dec
ins
cmps
fld
in
and
jle
push
(bad)
in
enter
mov
xchg
lock
cwde
xchg
push
jae
jp
push
and
xor
fpatan
pusha
pop
ss
out
(bad)
mov
popa
mov
mov
mov
out
cmp
sub
in
sub
retf
dec
lods
sbb
(bad)
stc
outs
mov
mov
nop
mov
inc
cdq
mov
mov
cmp
jns
pop
shl
pop
mov
dec
and
imul
out
(bad)
sub
bound
adc
lds
dec
fsub
push
arpl
lock
pop
ror
stc
add
jnp
dec
mov
js
xchg
test
sbb
and
in
adc
mov
loop
mov
pop
cmc
inc
cmps
vdivps
cmp
xchg
fcmovne
imul
push
inc
push
test
fcmovnb
iret
jbe
loop
aam
fistp
push
imul
push
xchg
add
rcl
ss
shl
pushf
cmp
xadd
cli
or
aad
mov
and
iret
dec
enter
sbb
aaa
jmp
mov
js
sbb
aad
test
pop
pusha
jp
and
cmp
jnp
cmc
adc
in
fwait
addr16
int
mov
ja
fldenv
ja
aaa
mov
daa
jo
pop
jbe
loopne
out
cmc
add
push
push
adc
cmps
pop
add
inc
mov
(bad)
popf
mov
mov
inc
test
out
nop
xchg
test
das
shl
push
pop
int
sbb
push
cli
pop
fwait
test
xchg
repz
stos
cwde
lock
lea
lds
mov
xor
or
inc
dec
movs
ins
cmp
add
lods
leave
test
(bad)
sti
das
xor
sub
sub
dec
sub
out
ret
sub
shr
test
inc
std
into
mov
xchg
xor
(bad)
or
cmp
ins
and
jmp
add
jb
and
jae
or
ret
pop
jne
or
les
adc
dec
sub
loope
adc
push
inc
mov
adc
repnz
(bad)
in
jbe
fucomip
xchg
cmp
cld
dec
ins
mov
fucomi
jmp
sahf
jmp
test
xor
dec
push
icebp
lods
pop
dec
inc
ret
jecxz
popf
or
(bad)
neg
fisttp
add
out
and
and
jae
add
dec
cwde
repz
add
pushf
xchg
push
and
pop
push
leave
xchg
cmp
sbb
(bad)
jnp
or
dec
jb
push
add
jl
jecxz
(bad)
jae
push
push
popa
ja
retf
sar
(bad)
data16
pop
jo
pop
and
daa
cmp
movs
sbb
mov
xchg
loop
sbb
bound
push
push
sti
jmp
test
adc
jns
lea
mov
fcmovnu
push
xchg
jmp
ds
jbe
int
call
shr
ins
and
xor
test
enter
(bad)
(bad)
arpl
fistp
out
repnz
xchg
ins
ss
fdivr
push
sub
lds
cwde
adc
or
into
lock
pop
stos
xchg
es
jp
mov
movzx
dec
add
sub
mov
(bad)
outs
jp
aad
not
daa
std
jo
sub
stos
adc
inc
xchg
xchg
push
dec
inc
jbe
les
aam
or
xchg
fisubr
imul
pop
mov
sbb
mov
push
inc
pushf
hlt
and
xor
mov
jecxz
jnp
sub
add
sub
mov
fwait
shr
xor
add
mov
push
in
daa
add
sar
mov
js
fcom
jno
rcl
(bad)
jbe
cli
xchg
mov
xchg
and
call
pop
and
test
int
ins
enter
ror
sahf
inc
outs
nop
and
nop
sub
aad
out
int3
mov
push
jbe
sbb
int
sbb
jle
in
mov
clc
jle
neg
popf
pop
ret
dec
mov
inc
cmps
mov
popa
jg
neg
cmp
pusha
lods
mov
pusha
pusha
aam
mov
mov
ins
inc
push
xor
pusha
jmp
xchg
sub
dec
and
mov
shr
add
pusha
jmp
stos
or
and
mov
pop
(bad)
jecxz
xor
mov
dec
pop
shr
mov
ins
xor
pop
xlat
mov
fs
pop
add
test
cmp
inc
es
aaa
mov
push
sub
xchg
fist
in
xor
dec
fmul
cmps
(bad)
mov
bound
inc
add
jmp
push
int3
push
in
mov
jecxz
pop
pop
rcr
and
outs
dec
ins
loopne
cmp
inc
push
xchg
jg
(bad)
and
xchg
mov
push
ret
sub
fcom
sub
loope
push
mov
imul
scas
outs
sub
scas
adc
retf
test
push
cmc
in
mov
ret
cmp
or
or
inc
dec
xchg
mul
fisubr
mov
add
clc
pop
xor
stos
mov
(bad)
in
sti
inc
fwait
push
jb
in
mov
das
mov
mov
aaa
je
dec
add
sub
fs
jo
mov
(bad)
lock
inc
or
loope
cwde
shl
pop
pop
sbb
jmp
xor
adc
fwait
sbb
js
fwait
mov
xlat
loope
jbe
adc
jge
sub
retf
sub
hlt
mov
scas
fisubr
cmp
bound
cli
pop
adc
ss
xchg
ds
pop
dec
push
mov
dec
pop
ror
mov
mov
fisttp
adc
cmps
sub
jno
xchg
fnstenv
add
dec
pop
push
data16
in
icebp
mov
sbb
mov
retf
inc
call
inc
outs
jns
pusha
sub
iret
inc
jae
stos
jno
inc
arpl
push
push
mov
pop
mov
cli
add
ror
popa
(bad)
imul
sbb
mov
adc
adc
popa
dec
in
ins
fisub
adc
fnstenv
push
lods
cld
loope
movs
mov
mov
mov
stos
mov
mov
xchg
repnz
cmp
push
ror
dec
pminsw
daa
jbe
mov
mov
or
mov
adc
jnp
nop
fistp
xor
cs
xchg
popf
lods
not
js
add
add
and
hlt
sbb
dec
scas
retf
aad
dec
cwde
mov
mov
adc
sti
popa
sbb
mov
or
scas
pop
add
rcl
adc
adc
icebp
push
mov
sbb
xor
dec
mov
test
ret
mov
dec
aaa
call
xor
inc
hlt
mov
dec
std
pop
ret
pop
push
arpl
jbe
enter
stc
add
in
into
cwde
add
sbb
icebp
xor
mov
(bad)
inc
enter
and
aam
mov
iret
xchg
repz
xchg
dec
into
js
cmp
xchg
inc
push
out
cmps
lods
bnd
daa
imul
cdq
(bad)
jg
imul
xor
fxch
aaa
dec
add
xchg
jg
imul
popf
mov
adc
sar
in
mov
shl
outs
inc
mov
lock
xor
fld
and
pop
retf
push
lahf
(bad)
pop
mov
and
scas
cmps
pushf
iret
push
add
and
mov
arpl
fcomip
int
icebp
and
into
loope
fidiv
ins
scas
add
mov
mov
mov
jmp
out
cdq
sahf
adc
mov
push
in
pushf
fs
sbb
cwde
mov
sub
pop
dec
xor
jle
mov
daa
mov
add
loopne
push
test
mov
rcr
mov
and
icebp
mov
rsm
sub
out
dec
inc
retf
sbb
dec
cmp
xor
(bad)
ret
mov
fld
inc
pushf
add
push
adc
in
jmp
adc
inc
jo
adc
push
cli
repnz
and
dec
cwde
arpl
ja
imul
sub
adc
adc
pop
add
add
xchg
ficom
fst
std
stc
inc
(bad)
push
dec
(bad)
mov
cmp
rcr
xchg
push
jns
into
fimul
rcl
gs
jle
inc
mov
adc
xor
aad
xchg
adc
lds
pop
and
sub
pushf
jp
out
jne
stos
scas
retf
or
jnp
push
inc
mov
inc
fist
push
push
int
inc
or
pushf
cmp
es
ins
push
lea
mov
push
sbb
mov
cmp
loope
mov
popa
in
sti
dec
pop
fwait
mov
stos
rcr
xor
outs
test
(bad)
jns
aas
jne
jle
scas
cmp
in
test
sub
(bad)
or
xor
inc
xchg
push
mov
jne
and
cdq
add
int3
push
mov
not
fmul
(bad)
cdq
ins
dec
out
cmp
dec
shl
int3
(bad)
jne
repnz
cld
xor
jg
mov
pop
test
cmp
or
add
adc
fwait
arpl
mov
push
pusha
sub
cmps
fild
cmp
mov
and
jmp
jmp
pop
and
jmp
push
or
xchg
add
loopne
xor
test
outs
out
retf
test
inc
gs
lds
rol
repnz
pop
adc
js
cld
fidiv
xor
ror
cmps
in
cmp
and
loopne
out
daa
rol
js
jo
aam
sub
push
push
test
xchg
jb
add
in
push
into
pusha
mov
jo
(bad)
aam
scas
mov
test
mov
xor
mov
push
imul
adc
cmps
(bad)
dec
(bad)
pop
pop
add
js
or
arpl
push
sub
add
outs
or
xor
icebp
mov
or
and
fdivr
out
and
(bad)
mov
mov
jb
mov
jnp
inc
xchg
call
mov
fcmovbe
(bad)
push
sbb
repnz
jmp
icebp
dec
aad
jg
dec
ror
stos
inc
(bad)
(bad)
and
sahf
shl
or
cmp
sub
aad
inc
fcomp
or
xor
outs
dec
stos
jmp
xor
mov
add
aam
xor
mov
mov
ret
cli
mov
movs
add
lahf
in
mov
mov
ret
cmp
sub
or
inc
pop
xchg
push
pushf
jg
sub
xor
sbb
inc
xchg
or
out
xchg
and
aaa
call
sbb
test
fsub
test
pop
add
aas
dec
test
jmp
push
(bad)
fistp
stos
jecxz
icebp
jne
ret
dec
xchg
xor
mov
xchg
pop
lahf
inc
jmp
out
ret
and
mov
mov
cmp
shl
pushf
pop
sub
and
out
push
(bad)
icebp
movs
inc
push
frstor
adc
data16
jl
inc
in
imul
jecxz
cs
loopne
mov
xor
inc
jge
outs
sti
cmp
cmp
test
or
cdq
and
and
test
and
in
stc
ins
ss
jecxz
and
out
dec
ins
test
iret
gs
shl
mov
cmp
mov
add
pop
(bad)
push
xchg
xlat
xchg
add
jmp
xchg
data16
or
mov
adc
mov
xchg
shl
xchg
mov
sbb
ins
icebp
aad
out
pop
adc
stos
jl
clc
mov
push
add
jg
inc
fdivr
call
lock
ja
xor
xlat
and
jge
mov
push
std
jge
xor
rol
adc
xchg
pop
loop
adc
mov
adc
aas
mov
in
push
ficom
push
push
cmc
sar
arpl
sbb
sbb
mov
cdq
mov
out
mov
add
sbb
mov
hlt
or
pop
fsub
mov
(bad)
xor
pop
add
adc
clc
and
mov
xor
xchg
jp
and
dec
xchg
bound
(bad)
(bad)
xor
cmp
or
fnsave
test
aas
and
les
(bad)
inc
cmps
enter
fsubr
fisttp
sub
test
xchg
inc
jecxz
cmp
aad
push
repz
and
out
outs
jnp
xchg
mov
daa
pop
push
test
fnstsw
out
lods
sahf
xchg
jo
int3
scas
frstor
add
gs
push
pop
nop
orps
push
pop
lods
ror
dec
jmp
and
into
lock
stos
lods
stos
cmp
and
inc
(bad)
div
inc
fwait
das
ficomp
adc
mov
lods
sar
ror
movs
pop
or
mov
pusha
mov
cmp
mov
dec
es
inc
pop
in
mov
inc
jecxz
jmp
sbb
rol
dec
inc
ins
(bad)
call
xchg
xchg
mov
sar
jmp
sub
imul
test
in
cmp
push
idiv
xchg
sbb
pop
or
pop
inc
mov
mov
jmpw
leave
xor
into
cmps
jmp
ins
rol
jle
bnd
repz
fldcw
setb
push
popf
mov
mov
mov
das
enter
cdq
mov
retf
mov
inc
stc
and
outs
cmps
mov
sbb
arpl
cwde
icebp
dec
in
rcl
aad
jl
(bad)
or
jle
nop
out
dec
dec
int3
cmc
jg
inc
inc
retf
mov
jge
movs
and
jmp
add
mov
es
in
mov
mov
push
mov
loope
mov
cli
das
lea
outs
ins
mov
fidivr
dec
jmp
and
xchg
mov
mov
scas
mov
clc
sub
cmps
repnz
sbb
movs
jns
daa
rol
cmp
adc
(bad)
and
mov
jbe
(bad)
xchg
push
in
loope
sbb
stos
call
das
popf
movs
jle
ins
xchg
pop
int
inc
cmp
jmp
cmp
xchg
mov
mov
lods
push
out
adc
js
je
sub
pop
add
mov
daa
pushf
push
mov
adc
test
push
cld
cmp
or
clc
mov
jmp
sub
sub
test
sub
psubusb
lds
repnz
xlat
pop
inc
xchg
xchg
cmp
fwait
aaa
adc
les
jg
mov
dec
xchg
mov
or
mov
ror
les
mov
ds
(bad)
inc
push
dec
xor
std
shl
ja
and
or
dec
ins
mov
in
xchg
cmp
mov
test
fsubr
ret
push
adc
iret
or
outs
ins
das
iret
push
xchg
or
mov
dec
mov
pop
adc
fsubr
sar
out
dec
dec
retf
(bad)
repz
adc
rcl
jae
popa
retf
jmp
mov
xchg
xchg
bound
mov
jge
(bad)
scas
sub
into
push
ret
ja
jecxz
xchg
ja
pop
rol
push
jnp
(bad)
in
pop
fld
daa
inc
pop
mov
xor
add
arpl
(bad)
out
pop
leave
inc
mov
xchg
aam
pop
push
jbe
lock
(bad)
pop
pushf
retf
hlt
push
(bad)
push
xchg
pop
sar
pop
leave
test
daa
aas
mov
push
out
jge
sbb
push
pushf
in
retf
data16
and
and
out
add
pop
mov
outs
mov
mov
inc
inc
dec
sub
jbe
and
or
fdiv
inc
push
jnp
jle
push
xchg
adc
mov
fldenv
jb
inc
xor
sub
cli
pop
popf
stos
shr
pushf
xchg
ds
mov
pop
cmp
iret
scas
jne
inc
stos
out
jmp
push
iret
sbb
adc
push
dec
jecxz
fwait
leave
lahf
ret
sbb
(bad)
push
push
retf
push
jns
call
dec
cli
in
push
cwde
pop
push
adc
pop
pop
inc
pushf
inc
int3
in
jne
std
adc
or
fcmovu
mov
mov
jl
push
out
xor
push
cmp
rcr
aad
cmps
sbb
ins
cld
jecxz
icebp
cmps
inc
dec
adc
test
inc
popa
out
pop
faddp
(bad)
imul
or
stos
mov
cmp
rcl
shl
dec
mov
mov
push
and
je
mov
sti
dec
icebp
xor
push
dec
jmp
xchg
stc
lock
jo
sti
adc
mov
js
retf
scas
mov
sar
movs
out
(bad)
int3
and
xlat
sar
shl
push
out
or
mov
xchg
mov
in
mov
(bad)
pop
idiv
dec
scas
out
or
sub
shl
aaa
sub
fs
jno
sar
into
mov
in
mov
jge
aas
out
rol
ins
inc
mov
fiadd
dec
and
dec
and
cdq
pop
iret
sub
jns
jb
fcomp
int
ret
and
outs
gs
clc
and
sbb
jecxz
mov
or
dec
ror
call
jg
gs
xchg
jb
nop
out
and
lods
cmp
sahf
jg
loop
(bad)
movs
jle
popa
ins
mov
push
(bad)
or
add
or
(bad)
iret
pop
cmp
xor
mov
mov
pusha
push
sub
mov
sbb
enter
inc
xlat
xchg
push
inc
(bad)
pop
push
cmps
sbb
cmp
sub
test
mov
jno
sub
loop
in
push
sbb
or
lods
pop
js
xlat
pop
int3
icebp
jb
pop
pusha
es
adc
pop
or
mov
mov
jge
js
pop
pop
aas
jmp
mov
sbb
add
mov
aas
mov
mov
shl
iret
fmul
inc
ds
push
or
aad
(bad)
cmp
call
rcr
aas
je
cwde
push
jne
std
adc
dec
mov
daa
cmps
pop
scas
xor
push
mov
add
sahf
stos
mov
xor
test
and
inc
sbb
dec
pop
les
cld
pop
sti
push
pop
(bad)
adc
xor
xchg
push
xlat
in
int
sahf
out
scas
cli
je
inc
push
sub
mov
and
int3
mov
in
repz
cwde
lock
mov
outs
iret
addr16
out
push
cmp
fild
gs
or
lds
outs
aad
jne
dec
mov
pop
sub
loope
pop
mov
or
lods
retf
xor
dec
test
pop
push
adc
sahf
rcr
cmp
ror
sub
retf
(bad)
scas
mov
mov
das
out
push
adc
clc
scas
xor
xor
retf
aaa
jg
mov
sbb
push
mov
jnp
pop
fscale
leave
jne
pop
imul
inc
(bad)
mov
(bad)
mov
stos
pop
cli
std
fwait
movs
cwde
int
fild
les
mov
dec
fcom
adc
stos
pop
pop
mov
adc
(bad)
lods
fistp
and
loop
adc
jecxz
fnstenv
inc
les
push
aaa
jne
inc
in
mov
in
lods
sbb
xor
cmp
imul
and
shl
cmp
repz
and
fidivr
cmp
push
leave
daa
mov
cwde
jmp
ror
push
adc
lock
push
mov
add
dec
rol
fs
lods
mov
mov
pop
(bad)
(bad)
(bad)
ds
jle
into
dec
loope
out
adc
ficom
call
data16
cmp
push
jbe
js
les
shl
and
mov
xor
iret
cdq
mov
or
add
pop
test
int
cmp
jnp
and
inc
out
cmp
in
pop
ret
outs
imul
in
fimul
sub
adc
jae
hlt
outs
loopne
sbb
data16
push
out
cmps
mov
(bad)
cld
popf
pusha
sbb
pushf
push
adc
rcr
(bad)
fisttp
mov
bound
fnstcw
jbe
mov
int
retf
outs
fstp
pushf
adc
out
add
arpl
mov
imul
out
mov
push
imul
les
add
inc
sahf
xor
int
mov
dec
pop
fisubr
mov
pop
xchg
js
in
and
ror
mov
mov
(bad)
mov
push
ret
and
pop
push
adc
pop
fldenv
cmp
in
xchg
cmp
inc
sbb
mov
int3
mov
pop
inc
jno
sub
repz
xor
mov
mov
push
outs
mov
out
xchg
push
test
sub
fdivr
in
scas
xlat
cld
dec
aam
outs
xchg
int3
dec
jl
inc
(bad)
push
cmp
mov
mov
aad
lahf
mov
xor
push
inc
or
movs
in
add
mov
or
xchg
out
xlat
dec
mov
push
mov
pop
mov
add
jge
mov
dec
cmps
and
xor
shl
cmps
xchg
int
inc
inc
sbb
jmp
sub
mov
mov
sti
dec
retf
sbb
rep
fldcw
cmp
mov
aaa
xor
mov
xor
mov
aaa
jg
sub
mov
out
std
and
out
lahf
xchg
cmp
push
xor
loop
test
fs
les
sub
jmp
adc
pop
xchg
jbe
cmp
imul
pop
mov
inc
or
mov
pop
inc
imul
sub
xchg
add
addr16
js
xor
dec
js
enter
push
(bad)
mov
mov
sub
loop
stos
add
ss
das
dec
mov
iret
adc
mov
jg
cmc
in
pusha
xor
add
mov
lea
push
add
cs
aad
xor
popf
jle
adc
add
pop
into
xchg
mov
push
stos
jge
pop
cdq
mov
leave
mov
sub
jns
mov
pop
stos
not
mov
sub
pop
ss
jno
push
sbb
das
into
cs
xchg
mov
add
test
popf
dec
(bad)
test
jns
es
dec
loope
add
mov
jg
dec
jge
mov
outs
pop
cmp
(bad)
jbe
mov
or
fmul
or
mov
mov
adc
push
aad
inc
imul
mov
fdivr
mov
scas
pushf
out
jecxz
push
arpl
stc
xor
push
test
jmp
loope
mov
call
cmp
cs
sbb
(bad)
shr
push
cmp
fidivr
mov
xchg
sub
add
outs
pop
enter
mov
push
ss
jne
mov
adc
mov
jne
out
mov
bnd
mov
pop
adc
xchg
jmp
mul
rol
in
imul
inc
adc
pop
sub
cdq
sti
cmp
inc
jmp
out
dec
in
mov
mov
stos
loop
(bad)
lods
enter
fisttp
push
mov
pop
and
repnz
add
mov
jp
rcl
outs
(bad)
jmp
enter
(bad)
neg
jp
inc
fst
out
pop
add
into
mov
ror
xchg
daa
std
scas
hlt
push
mov
es
enter
sub
inc
add
fsubrp
out
mov
(bad)
cdq
popf
les
pushf
inc
daa
cmp
add
mov
mov
stos
cmp
sti
push
scas
pop
jp
fwait
xchg
pop
sbb
push
out
bnd
and
les
repz
push
fnstsw
aam
dec
mov
rcr
mov
lahf
or
retf
adc
into
icebp
cmp
or
leave
sar
sbb
pop
jmp
ins
fcom
dec
xor
xlat
xor
js
adc
add
adc
test
enter
je
sub
mov
push
or
inc
mov
adc
stos
inc
mov
xor
jns
jge
ffree
xchg
jbe
mov
inc
push
and
nop
mov
pop
dec
out
pop
in
adc
mov
aad
pop
xchg
addr16
xor
cmp
out
add
outs
and
clc
push
mov
xchg
idiv
bound
and
xor
outs
inc
xor
sbb
pop
aam
mov
pop
mul
push
int
jmp
(bad)
fadd
xor
in
retf
xchg
dec
test
popf
xchg
pop
mov
in
jae
inc
xchg
xchg
xchg
xchg
dec
mov
and
mov
jne
jmp
push
sub
cli
push
dec
sub
out
xchg
jg
fwait
xor
xor
mov
xor
arpl
inc
push
inc
dec
nop
cmc
xchg
jl
jp
push
loop
dec
or
mov
jmp
xchg
or
xchg
frstor
push
push
push
(bad)
js
lea
xchg
xchg
xor
xchg
xchg
pop
stc
cs
bound
push
les
dec
pushf
fisubr
sub
xor
xchg
cmp
pop
fldcw
adc
inc
test
cwde
sbb
sbb
fst
cdq
inc
jmp
dec
daa
pop
ret
in
push
iret
pop
push
pop
pop
mov
jno
jae
jg
mov
adc
mov
add
inc
xor
push
cdq
push
ins
movs
jmp
ja
mov
sub
mov
ds
aas
sub
aad
shr
mov
mov
jge
inc
push
movs
dec
adc
mov
sub
add
cmp
push
adc
hlt
xchg
imul
popf
mov
cmp
lds
cmps
fiadd
jge
sub
int3
out
cmp
sar
test
xchg
or
push
xor
daa
or
dec
or
scas
cvttps2pi
sub
adc
mov
cmp
jl
or
and
mov
pop
sbb
inc
inc
and
cli
add
pop
je
stc
xchg
mov
or
ror
sti
loop
sub
sbb
sbb
push
in
adc
int3
(bad)
out
(bad)
je
aas
fmul
enter
ins
mov
add
sbb
add
push
loope
pushf
jmp
mov
inc
outs
mov
(bad)
pop
mov
ins
popf
lock
mov
sub
xchg
mov
and
adc
or
lods
scas
jp
jl
xchg
gs
fiadd
xchg
mov
jmp
ret
mov
fnsave
popf
xor
add
lds
lock
scas
dec
fsubr
imul
in
repz
(bad)
and
adc
dec
movs
out
test
jp
dec
and
in
call
xor
pop
jns
push
add
in
jmp
and
jns
retf
fcos
in
pop
push
aad
je
mov
dec
mov
xor
add
and
movs
scas
add
xor
xchg
cmps
ds
lea
inc
movs
jecxz
movs
and
sbb
(bad)
out
lods
out
pop
adc
fwait
jg
shl
enter
lock
sub
xor
jmp
dec
push
pop
mov
push
jecxz
les
jae
scas
(bad)
add
sbb
js
adc
xchg
rep
scas
adc
loop
cmp
es
push
add
fild
push
aam
outs
es
add
test
movs
lds
sub
ret
jnp
mov
int
ins
ins
mov
pop
jl
mov
adc
dec
leave
out
call
test
jno
add
nop
inc
cwde
fistp
cmp
data16
add
mov
out
lods
mov
imul
test
shr
push
add
(bad)
mov
lds
xor
dec
sbb
mov
mov
add
adc
mov
sar
add
daa
pop
xor
jns
fild
mov
cld
out
lahf
or
movs
add
dec
shr
jbe
out
lock
push
scas
scas
sbb
popa
sbb
inc
pop
pop
fbld
ds
push
push
push
mov
sub
mov
jecxz
out
xor
popa
outs
test
jecxz
cmp
push
test
xchg
adc
cmp
pop
pop
push
push
mov
lock
aaa
pop
pop
ins
jb
imul
mov
cmp
push
inc
mov
loope
dec
pop
xor
(bad)
iret
jp
adc
out
dec
stos
push
pop
mov
jp
leave
dec
je
cli
jbe
and
aas
pusha
sahf
rcr
std
bound
dec
jl
(bad)
inc
ficom
inc
fwait
push
ja
xor
repz
fcmovb
xor
inc
pop
test
pop
push
mov
fldenv
scas
mov
and
stos
idiv
data16
mov
and
out
pusha
mov
push
lods
mov
out
sbb
and
pop
and
mov
add
aam
sub
mov
mov
ds
xchg
pmuludq
inc
pop
mov
pop
xor
cmps
mov
fisub
and
mov
cmps
add
push
mov
cmp
fimul
(bad)
hlt
mov
pop
adc
movs
push
icebp
fcmove
movs
(bad)
jmp
and
(bad)
out
pop
aad
cmps
ret
jbe
test
in
test
clc
mov
test
es
push
fstp
adc
in
mov
ins
dec
jno
push
cs
and
call
js
test
adc
fistp
aad
out
jae
test
adc
rcl
das
adc
ret
xchg
imul
or
sti
sbb
push
pop
xchg
sub
and
in
frstor
(bad)
pavgw
retf
push
pause
fild
std
popf
sub
lods
pop
pop
jge
xchg
popa
ror
mov
jnp
add
adc
sub
sbb
and
fistp
stos
movs
jmp
inc
add
adc
sbb
(bad)
loope
fcomp
fld
xchg
pop
jmp
hlt
sahf
cli
imul
aaa
imul
adc
outs
fisubr
mov
iret
rol
jnp
push
cmp
or
push
add
xchg
movs
push
dec
sub
push
jg
pop
sub
repz
rcr
jge
adc
loope
stc
sub
aam
push
pop
cmp
cmps
push
xchg
test
leave
bound
stos
xchg
xor
sbb
sub
dec
jp
movs
mov
data16
xchg
(bad)
int
rol
pop
push
ss
dec
push
out
inc
cmp
xchg
jo
jge
push
xor
xchg
int
mov
mov
dec
imul
or
sbb
outs
stos
xchg
sub
mov
retf
pop
movhps
pusha
push
cld
sub
cmp
fisub
xchg
into
sub
push
cdq
add
jle
jb
jmp
or
mov
sar
push
pop
dec
mov
xor
int
pop
cwde
cmp
push
xor
hlt
xchg
dec
and
stos
jbe
data16
jmp
jge
in
xor
or
imul
push
cmp
pmuludq
add
pop
aaa
pop
dec
push
dec
(bad)
fild
push
add
mov
or
mov
mov
in
or
dec
push
pop
out
in
mov
das
scas
push
(bad)
mov
jle
or
punpcklbw
out
mov
sub
cld
sbb
jno
pop
dec
dec
arpl
(bad)
add
inc
mov
push
stc
cmc
xchg
inc
pop
test
pop
jmp
adc
add
adc
in
or
dec
mov
fwait
into
mov
mov
and
or
stc
mov
loope
sbb
lea
out
int3
or
into
push
retf
sbb
fsub
add
jp
push
jg
sub
jb
xchg
in
in
popa
enter
(bad)
push
cmp
ins
push
mov
les
cdq
pop
fiadd
dec
int
adc
dec
sub
cwde
mov
shl
hlt
test
mov
cld
std
pop
and
stos
jg
gs
xchg
jns
idiv
jo
jge
push
mov
pop
push
daa
mov
xchg
mov
xchg
in
xchg
push
shr
sbb
cmps
aad
cdq
sub
rcr
dec
push
les
pop
ins
(bad)
arpl
xchg
(bad)
std
out
cld
lock
add
mov
ins
xor
pop
mov
sahf
fbstp
test
cmp
push
mov
ins
dec
dec
aad
call
mov
rcr
enter
xor
xchg
inc
push
imul
mov
jbe
ret
lock
or
pop
out
cwde
mov
movs
sbb
aad
es
cmps
pop
sub
or
jne
xchg
enter
and
das
lock
pop
test
fld
clc
and
mov
pop
xchg
push
mov
add
inc
enter
jno
iret
or
std
in
pushf
jnp
sar
pop
leave
jecxz
lds
jp
add
xchg
mov
lea
jmp
aad
dec
aas
xchg
mov
int
data16
push
movs
les
sub
retf
retf
test
dec
xchg
cmp
and
out
(bad)
repz
ror
sub
mov
pop
lods
out
out
add
loope
push
je
adc
xchg
or
mov
push
xor
and
inc
aad
repnz
add
mov
dec
or
es
xchg
iret
ins
(bad)
fisttp
fnstsw
push
or
push
mov
loope
pop
xchg
or
xchg
cmps
xchg
or
shl
imul
mov
ret
and
cmp
and
sub
loope
adc
push
out
adc
push
cmc
js
dec
ja
mov
pop
je
or
pop
pop
jne
ret
scas
pop
sbb
mov
fwait
sbb
or
dec
xor
push
jne
mov
sar
nop
das
sub
and
out
xor
xchg
and
jne
push
pop
mov
shl
sbb
call
cmp
mov
dec
aas
lods
cmp
(bad)
push
sbb
test
xchg
sub
daa
fsubr
jecxz
arpl
cmp
in
arpl
out
cwde
mov
jo
(bad)
sbb
mov
dec
out
test
mov
mov
mov
popf
pop
and
xchg
inc
mov
xor
mov
push
add
loop
xchg
out
jp
sub
inc
xor
fwait
and
int
sahf
pop
cli
push
scas
mov
adc
pop
dec
jge
xor
adc
sub
lods
shl
pop
hlt
clc
add
xor
loopne
test
add
cdq
data16
imul
ror
neg
test
fidivr
dec
pop
and
push
cmp
push
mov
xchg
daa
mov
sub
mov
pop
xchg
jb
leave
sub
(bad)
(bad)
push
enter
stos
inc
sbb
stos
retf
adc
outs
push
enter
mov
int3
stc
inc
add
neg
jnp
or
div
mov
gs
xchg
mov
(bad)
mov
push
push
xchg
(bad)
daa
ror
pop
mov
std
add
inc
push
adc
lahf
sahf
and
sub
int
rcl
sub
sub
data16
and
adc
aas
lds
mov
or
aad
(bad)
jl
or
adc
leave
jecxz
jbe
add
sub
leave
mov
push
sahf
shl
mov
iret
xchg
jl
xchg
movs
mov
bound
jbe
jne
or
mov
and
mov
aaa
or
je
inc
shl
pop
lods
mov
sub
jle
mov
fwait
mov
pop
retf
jl
pop
sub
sbb
leave
hlt
sbb
or
cmp
stc
iret
push
sub
sti
add
mov
mov
shl
shl
cs
addr16
outs
adc
test
mov
xchg
sahf
ins
ss
mov
jnp
(bad)
or
loop
hlt
mov
add
ins
add
fld
pop
ret
jecxz
xor
(bad)
into
pop
jl
mov
inc
test
data16
cmp
mov
bswap
mov
push
mov
push
aas
push
das
xchg
fmul
cmp
jbe
mov
cmp
mov
push
inc
(bad)
hlt
jge
ror
jmp
ja
sub
sbb
pop
pop
cmp
sbb
or
push
cwde
mov
mov
sub
add
dec
jo
jecxz
in
mov
es
sar
je
in
stos
loopne
out
in
xchg
push
inc
aas
cld
or
add
ins
cmovl
and
(bad)
fwait
je
call
into
clc
int3
movs
cmps
or
adc
clc
sub
push
pop
scas
mov
xor
(bad)
mov
dec
ja
pop
pop
pop
fld
jb
xor
dec
ret
mov
pop
xchg
dec
fwait
test
std
cwde
xor
ins
test
mov
push
jg
das
pop
inc
retf
dec
stos
dec
cmp
mov
cs
push
mov
mov
mov
push
shr
(bad)
jmp
sbb
daa
xlat
xchg
and
lea
sbb
sub
sub
pop
pop
call
out
push
sar
stos
push
push
je
movs
cmp
mov
call
push
loop
out
stos
in
cli
push
xchg
sbb
jbe
pop
adc
ret
pop
push
test
adc
repnz
jg
cmp
stc
or
jmp
dec
or
lods
adc
imul
mov
pop
jl
sbb
out
xor
enter
fild
and
movsx
inc
sbb
cmps
cmps
stos
xchg
retf
or
loopne
jbe
or
repz
mov
out
inc
add
jg
pop
jp
inc
jle
imul
xor
mov
or
adc
popa
add
lds
rcl
imul
(bad)
push
(bad)
xchg
xchg
xchg
(bad)
loopne
scas
jnp
int
enter
adc
mov
xor
loopne
pop
xor
icebp
sub
xchg
popf
jle
arpl
cdq
adc
jae
mov
enter
iret
aaa
sar
xchg
pop
stos
add
cmps
jns
lods
add
pushf
addr16
in
(bad)
int
pushf
leave
cs
add
sub
xor
or
adc
xlat
sub
inc
cli
dec
xor
in
cmp
adc
fsubr
sti
repnz
push
push
inc
cmp
xor
call
jp
mov
paddq
add
fild
fiadd
jge
cwde
js
push
push
mov
sbb
jmp
mov
jg
shl
adc
mov
cmp
sub
mov
mov
push
mov
rep
push
ja
jmp
in
dec
shr
sub
xchg
je
clc
xchg
jmp
push
jecxz
stos
cmp
cld
mov
add
cmp
fwait
inc
mov
xor
iret
lds
push
cmp
ret
pusha
mov
ret
retf
cmp
push
mov
mov
mov
sub
dec
mov
or
cmp
inc
and
bound
jmp
push
mov
inc
ror
fimul
adc
cmps
daa
dec
pop
ret
sbb
mov
inc
pop
popf
mov
inc
pop
cmp
jnp
int3
jl
aaa
mov
dec
inc
jns
mov
jg
xchg
fucomi
fwait
or
mov
fadd
test
xor
adc
mov
leave
mov
mov
xchg
or
or
pop
leave
addr16
pop
sub
sahf
pop
mov
(bad)
pop
pop
fstp
cld
inc
pop
and
mov
dec
jnp
xchg
pop
sub
fcom
pop
mov
call
int3
repz
stos
inc
outs
push
sbb
cmps
fxtract
adc
mov
(bad)
(bad)
sub
dec
mov
push
(bad)
inc
std
or
jbe
nop
push
xor
data16
xchg
fild
dec
outs
cli
dec
out
imul
ds
cmp
sub
cld
mov
adc
mov
mov
(bad)
dec
cmp
xchg
pop
inc
out
lea
mov
shl
stos
xchg
xor
mov
stc
cmp
mov
mov
sar
dec
push
pop
xchg
mov
repnz
cmp
ja
sub
aaa
pop
outs
push
cmp
pop
mov
jno
leave
or
call
or
jmp
cmp
ins
stos
inc
adc
mov
adc
retf
sub
out
in
mov
and
(bad)
adc
arpl
pop
lahf
push
inc
or
add
aaa
(bad)
jns
push
pop
movs
inc
loope
mov
jmp
sahf
cwde
xor
ror
clc
(bad)
jmp
pop
cmp
inc
fimul
sti
(bad)
addr16
push
and
inc
jno
xor
adc
clc
icebp
je
push
adc
lods
dec
fcomp
push
add
jne
je
sar
stos
inc
ror
xlat
test
xchg
xchg
ja
push
test
pop
dec
leave
dec
cmc
sub
mov
sub
adc
mov
loope
push
mov
(bad)
hlt
adc
xchg
pop
jl
jecxz
popf
fucom
or
call
add
inc
hlt
xor
and
(bad)
adc
cld
(bad)
pop
(bad)
jmp
into
mov
fnsave
fucomi
in
push
cmp
sub
push
jbe
retf
cdq
push
mov
xchg
stc
add
jno
mov
push
xor
dec
xchg
pop
mov
(bad)
lahf
out
stos
(bad)
mov
cmp
cmp
ss
jl
ret
mov
pop
sub
jp
xchg
xchg
xor
push
xor
cmp
clc
movs
iret
gs
jl
outs
or
xchg
fwait
jbe
rol
mov
and
iret
add
and
int3
aas
dec
pop
test
or
push
stc
cdq
pop
loopne
(bad)
push
retf
aad
sbb
mov
sbb
scas
push
iret
or
icebp
lock
xor
sub
sbb
clc
shl
and
sub
add
inc
jbe
mul
push
mov
mov
int3
cmp
out
adc
dec
mov
pop
and
mov
dec
sub
and
outs
pop
int
stos
adc
pop
mov
loope
xchg
es
into
mov
sbb
push
xor
stos
je
arpl
call
lahf
test
mov
jl
cld
add
inc
push
scas
xchg
push
test
mov
ds
pop
cmps
ss
lods
push
adc
aaa
mov
mov
mov
shl
cmps
xor
pmullw
adc
pop
jne
fwait
lods
sub
aas
aaa
mov
jmp
stc
xchg
xchg
pop
into
fstp
mov
aas
push
dec
jle
sub
repnz
and
jle
fcmovnu
jae
mov
push
add
push
mov
mov
div
retf
int3
jp
hlt
(bad)
mov
std
xchg
inc
xchg
idiv
test
iret
outs
cmc
lahf
sti
and
sub
ficom
les
mov
test
dec
or
cmp
retf
inc
mov
popf
adc
push
test
xchg
mov
jb
add
jne
mov
scas
mov
push
test
aaa
and
cdq
lea
enter
mov
mov
cwde
fld
pop
add
adc
or
outs
fdivr
dec
jno
in
stos
cs
xchg
jb
lahf
test
fist
adc
xchg
xor
fwait
xlat
or
enter
es
out
mov
inc
dec
ss
mov
or
cmp
lahf
sub
fidivr
inc
aam
dec
mov
cmps
imul
sbb
movs
inc
ror
adc
jmp
enter
into
adc
cmc
sar
and
adc
inc
in
aam
mov
clc
pop
retf
sbb
inc
push
jno
fnstenv
sbb
inc
lods
stos
iret
add
sub
mov
cmp
mov
jmp
ret
xchg
call
js
push
mov
pop
cmp
clc
dec
add
pop
push
sub
stc
das
movs
shl
xor
pop
push
clc
outs
nop
cmp
loope
mov
add
pop
or
daa
mov
dec
or
popa
sub
mov
test
and
cmp
shl
jmp
es
movs
jns
retf
loop
imul
mov
cld
test
inc
icebp
ror
add
lods
inc
push
mov
add
dec
pop
xchg
or
hlt
add
xchg
dec
mov
add
aaa
push
dec
pop
mov
popa
sub
imul
pushf
mov
or
mov
retf
fmul
mov
cdq
pop
cld
ror
adc
push
sbb
in
and
popa
and
push
dec
xchg
pushf
add
mov
daa
or
jb
push
lods
das
pop
in
mov
cmp
jg
push
aas
sar
jns
das
cmp
ja
aaa
aad
es
ffree
mov
push
add
inc
sub
outs
sbb
arpl
adc
jb
push
dec
cmp
scas
out
mov
cmp
pop
add
add
mov
add
push
imul
sub
adc
sub
inc
inc
xchg
out
cmp
jp
mov
mov
outs
jge
push
mov
sub
(bad)
cwde
or
in
cmp
pop
cmp
jb
mov
push
mov
clc
add
mov
shl
xor
sahf
dec
dec
xor
rcr
sub
pop
int3
sub
jbe
sub
clc
dec
ret
int3
or
enter
cmps
repnz
jne
pop
mov
sbb
(bad)
out
xchg
dec
in
in
push
jns
xchg
cli
cs
fnstenv
adc
fcomp
shr
dec
dec
not
xor
sub
mov
outs
adc
out
iret
stc
fdiv
movs
mov
cmps
sbb
jmp
xchg
sbb
cmp
jl
mov
add
cmp
stos
dec
lods
jo
lods
retf
aad
sbb
inc
xchg
jb
pop
mov
fstp
dec
pop
out
idiv
in
lods
leave
jno
jmp
sub
mov
jle
sbb
push
(bad)
sar
clc
add
mov
mov
sbb
mov
aaa
jge
mov
ja
cmps
cli
sbb
nop
test
aas
xchg
mov
repz
gs
jb
(bad)
movs
retf
imul
add
lods
cmps
popf
addr16
mov
sahf
mov
add
stc
cmc
cmp
int
test
test
sub
mov
jl
loope
push
push
mov
and
int
cmp
repz
dec
loope
sbb
jp
mov
or
adc
in
pop
call
adc
popa
xchg
fidivr
xor
sar
push
outs
ja
ret
mov
jecxz
xor
jno
adc
mov
nop
push
add
mov
ret
pop
xor
inc
(bad)
push
sahf
mov
jo
pop
es
sub
pusha
test
cli
retf
mov
xor
mul
sbb
and
pushf
dec
lds
jg
jg
sub
and
aaa
xchg
xlat
jae
repnz
cmp
fisttp
push
or
lock
mov
fist
es
data16
adc
xor
dec
push
push
xor
cmp
pop
setbe
xor
sub
fisub
cmc
cli
xor
cmps
adc
ret
aaa
stos
adc
pop
push
push
bound
pop
(bad)
leave
fisttp
mov
push
add
add
dec
sahf
or
and
mov
pop
out
hlt
mov
loop
or
scas
popf
lods
mov
jecxz
test
add
dec
lods
dec
out
call
movs
das
stc
loope
enter
(bad)
out
lea
test
xor
xchg
adc
and
add
mov
repz
out
push
nop
test
iret
mov
sub
and
scas
jmp
xor
mov
arpl
les
jo
es
in
add
mov
aad
test
fist
ins
icebp
and
and
(bad)
fmul
repnz
xor
in
js
(bad)
test
rcl
rol
daa
lods
arpl
and
fcomp
sahf
inc
mov
sbb
cmps
adc
mov
mov
int3
or
sahf
call
(bad)
cs
outs
loope
lock
mov
stos
(bad)
aaa
bound
std
es
add
mov
(bad)
in
bound
movs
lock
pushf
sbb
movs
cwde
mov
xchg
pop
pop
and
jae
push
sbb
sbb
sbb
(bad)
mov
rol
dec
pushf
jl
add
cmps
xor
fstp
shl
out
and
imul
test
inc
jmp
ins
inc
pushf
(bad)
push
add
mov
ret
or
sbb
xlat
add
cmp
inc
ret
jae
movs
inc
or
xlat
push
aas
popa
test
cmp
dec
push
jno
adc
mov
fstp
dec
mov
call
inc
sbb
cmc
mov
mov
inc
aam
and
push
xor
out
movs
add
cdq
inc
mov
xor
and
jp
xchg
adc
mov
loope
jns
call
pop
into
clc
sub
out
adc
std
cmp
aaa
pop
pop
cmp
out
adc
movs
mov
es
adc
ds
scas
loop
scas
add
test
and
mov
(bad)
dec
sub
and
aam
mov
inc
inc
add
jno
je
or
loop
cmp
in
and
xchg
and
pop
jns
or
push
daa
mov
outs
cmp
dec
or
cmp
retf
fcom
sahf
cli
xchg
mul
and
pop
(bad)
xor
in
retf
push
mov
daa
aad
out
adc
rol
movs
fs
das
adc
arpl
in
cmp
xchg
popa
ror
into
mov
dec
jo
fs
in
das
out
fdiv
push
ss
and
cmps
fisubr
cs
scas
lahf
jl
inc
cmp
mov
adc
cmp
clc
loop
cmp
or
pop
mov
or
xor
jmp
aad
jg
adc
ss
ins
push
mov
cmp
arpl
(bad)
cli
ffreep
and
mov
mov
push
daa
stos
mov
mov
xchg
movs
ins
and
rol
(bad)
cmp
jns
xchg
mov
ja
test
fsub
fxam
dec
jno
cmp
addr16
(bad)
jne
outs
and
test
sub
cmc
das
jbe
mov
dec
rol
or
fisttp
add
inc
arpl
fidiv
push
fdiv
cli
and
xor
inc
cmp
push
jae
fdiv
cmp
mov
sub
xchg
mov
fnstenv
daa
cdq
fsubr
pop
xchg
into
cli
jmp
ret
data16
adc
inc
es
rep
sbb
xchg
mov
sbb
cmps
jnp
stos
in
mov
int
aad
mov
popa
cmp
adc
inc
dec
nop
rol
inc
jge
and
adc
test
nop
imul
retf
movs
(bad)
jg
cwde
pop
inc
out
and
mov
fcomip
js
dec
clc
mov
and
xchg
inc
jmp
xchg
cmp
add
and
jecxz
cmps
xchg
movs
repnz
jmp
popf
call
or
dec
jo
xchg
in
push
and
push
arpl
leave
call
and
inc
cwde
and
jmp
or
in
stos
lahf
mov
or
jmp
push
add
call
sub
and
xchg
shl
out
fdiv
movs
fdiv
or
mov
mov
mov
sub
sub
pop
and
xor
ins
mov
add
sbb
push
xchg
fidiv
xor
adc
aad
sbb
int
cmc
sbb
and
inc
and
sti
xchg
dec
mov
xchg
ins
inc
ins
and
retf
jo
xchg
adc
ret
mov
in
mov
gs
jns
mov
and
xchg
push
sub
push
pop
add
lods
mov
push
in
pop
cdq
mov
mov
pop
inc
inc
call
and
cmps
cmps
mov
xchg
ja
add
mov
mov
call
dec
jbe
push
mov
aas
mov
push
ins
(bad)
sub
retf
clc
movs
ss
test
aam
pop
cmps
mov
dec
pop
stos
mov
mov
nop
sbb
jae
jno
inc
lds
dec
inc
ins
xor
sbb
jge
in
lea
push
shl
jno
cli
fs
and
xor
and
mov
enter
call
mov
paddq
mov
out
div
imul
int3
add
ror
fucom
inc
mov
sub
add
std
aas
imul
mov
or
mov
mov
or
push
cmp
or
test
jno
mov
pop
rcl
dec
mov
pop
dec
xchg
adc
daa
out
or
add
push
das
cmps
pop
cmp
cmp
arpl
push
cmc
push
test
out
ffree
cmp
fdiv
jp
add
inc
push
pop
inc
movs
add
in
push
std
cs
popa
mov
mov
lahf
mov
lods
push
pop
or
pop
test
out
cmp
int
mov
inc
cdq
clc
inc
ja
push
mov
mov
inc
mov
shl
out
sbb
and
sbb
jne
adc
arpl
iret
ret
mov
pop
push
or
push
mov
xchg
cmps
jmp
jecxz
dec
mov
lds
daa
or
adc
pop
sahf
xchg
mov
pusha
ds
jbe
pop
mov
outs
imul
aad
cmps
mov
add
(bad)
pop
jg
sahf
xchg
pop
ins
std
pop
sub
in
add
outs
ss
sub
es
mov
rcr
lds
mov
sub
pop
jne
aas
jge
and
nop
fbstp
xor
dec
cdq
ret
call
mov
fstp
enter
pop
jns
loope
fcomp
hlt
(bad)
xlat
xchg
in
pop
or
xchg
and
mov
ja
jno
std
jmp
add
adc
sbb
xor
dec
and
outs
push
mov
jmp
sar
and
xor
add
fild
push
and
jnp
retf
xchg
sub
xchg
jae
dec
add
test
out
mov
arpl
inc
dec
out
rcr
push
adc
and
fidivr
in
dec
(bad)
xor
bound
(bad)
xchg
push
cmps
pop
xor
leave
shl
retf
(bad)
jp
cmp
adc
(bad)
out
inc
fild
cs
das
aad
cmps
out
repz
sub
cwde
sbb
sub
push
repz
fist
xchg
shr
jmp
xchg
js
sub
jbe
sub
mov
ret
cmp
(bad)
jmp
outs
fild
pop
cmp
mov
shl
mov
mov
mov
push
cmp
aaa
enter
sahf
or
das
xchg
push
cmovnp
lea
repnz
sbb
inc
xchg
sub
push
and
mov
jp
sbb
sbb
xchg
in
clc
outs
sbb
int3
ja
inc
mov
repnz
stc
int3
mov
stc
in
cli
sbb
mov
jnp
xor
xchg
mov
or
or
push
inc
imul
shl
sbb
adc
dec
data16
int3
aaa
xchg
and
cmps
retf
pop
cmc
adc
mov
or
xchg
out
inc
ret
fistp
icebp
cmc
pushf
push
cmp
into
sar
div
(bad)
inc
or
sti
ret
xor
sub
test
inc
inc
mov
mov
fisttp
dec
dec
out
movs
adc
or
mov
into
je
sub
and
cmp
cmp
pop
xchg
not
cmc
jb
mov
shr
mov
and
dec
inc
imul
dec
(bad)
adc
iret
xor
pushf
push
mov
cli
clc
xchg
ja
mov
aad
movs
push
cld
cmp
pop
js
ja
adc
jb
imul
mov
mov
adc
ss
mov
cmp
ins
rol
mov
mov
mov
(bad)
mov
xchg
push
lea
cmp
xor
ret
out
inc
aad
adc
stos
dec
cdq
lock
push
sub
push
(bad)
xchg
fnsave
cmp
push
and
loope
xlat
dec
sar
cmp
out
ss
sbb
pop
lock
inc
fldcw
and
sbb
mov
cdq
or
sahf
mov
or
sub
fisub
mov
jno
das
adc
js
rol
mov
stc
bound
adc
daa
or
sub
(bad)
pop
xchg
push
loop
adc
dec
inc
fcmovb
rol
pop
add
or
mov
movs
push
popw
and
cdq
call
pop
cmp
ins
imul
jg
fnstsw
dec
(bad)
lahf
and
cmp
push
aas
hlt
popf
fnstsw
retf
into
sbb
jge
inc
jno
pop
rcr
inc
in
ficom
xchg
unpckhps
inc
cdq
jg
out
fidiv
pushf
push
or
mov
push
data16
adc
inc
scas
out
or
dec
mov
mov
inc
xor
(bad)
push
xchg
cmp
jecxz
pop
mov
jno
mov
arpl
or
push
pop
fadd
mov
shl
retf
and
ds
jns
adc
add
ja
je
fwait
out
push
shl
xchg
sub
fnsave
push
cli
sbb
mov
cdq
in
mov
lods
mov
sahf
mov
pop
cld
push
mov
push
(bad)
outs
add
dec
loope
fsubr
retf
mov
xor
push
mov
inc
ficomp
stos
setne
das
pushf
(bad)
outs
(bad)
mov
jb
xor
movs
fiadd
xor
mov
sbb
das
retf
psubw
pop
js
out
popa
jae
pop
mov
jecxz
fbstp
jae
ins
ss
(bad)
pop
(bad)
jns
xor
enter
aas
icebp
dec
jmp
shr
xor
and
mov
pop
and
not
mov
popf
test
pop
xor
push
or
div
or
imul
es
aad
sbb
push
cmp
nop
cmps
jo
cmp
call
sub
add
iret
cli
enter
cs
mov
in
push
inc
data16
ret
inc
movs
ja
mov
test
add
xchg
push
push
jne
xor
jnp
mov
enter
jge
gs
ror
loope
pop
in
xchg
mov
jmp
outs
pop
dec
mov
stos
push
inc
imul
popa
(bad)
out
popf
sbb
mov
loopne
stos
or
inc
jp
and
push
push
test
out
out
mov
ror
inc
scas
xchg
dec
add
clc
in
je
out
jmp
stos
fs
(bad)
scas
nop
mov
aam
cmp
push
dec
push
rcl
scas
stc
push
into
push
mov
shl
lea
stos
xor
pop
xor
movs
mov
or
jb
pop
fs
dec
mov
movs
sbb
dec
jg
xlat
or
lods
stc
lods
jle
cmp
push
sub
adc
push
jno
inc
jbe
mov
sbb
push
dec
lds
int3
ins
add
js
adc
outs
sub
aad
pop
push
adc
dec
cmp
pusha
mov
push
and
dec
test
mov
mov
adc
add
leave
adc
in
into
cmp
ins
dec
pusha
arpl
pop
idiv
loopne
mov
inc
mov
int
aas
cld
or
mov
and
ret
cmc
repz
mov
ret
pop
mov
data16
mov
or
cmp
mov
push
sbb
add
scas
mov
sbb
mov
or
pop
pop
scas
retf
inc
xor
mov
ins
xchg
and
fstp
fmul
mov
rcl
push
jne
dec
dec
push
movs
pop
dec
out
lods
mov
mov
stc
mov
and
mov
sbb
or
stos
rol
imul
lock
and
popa
scas
(bad)
(bad)
cmp
inc
aam
ss
mov
shr
test
sbb
cmc
(bad)
int
movs
push
mov
cwde
mov
jle
pop
icebp
jp
or
xchg
imul
mov
clc
mov
std
pop
sub
aad
jb
cmp
in
add
mov
jle
add
xchg
and
call
mov
mov
pop
imul
in
and
xchg
xchg
push
xchg
inc
sbb
mov
loopne
or
cmp
inc
jge
(bad)
and
ret
adc
xor
sub
retf
jge
bound
jne
test
cmp
call
adc
stc
mov
out
push
adc
adc
cmp
out
xchg
scas
cmp
pop
add
inc
dec
outs
fadd
out
mov
test
(bad)
shl
movs
push
mov
push
add
mov
add
mov
outs
push
xchg
xchg
sub
cmp
fcmovbe
faddp
pop
aam
scas
fist
dec
dec
cmp
popa
in
xchg
jno
fbstp
cli
mov
sub
popa
psubsb
cmp
mov
dec
ret
(bad)
icebp
je
cmp
or
or
add
std
in
jp
cmc
dec
pop
jle
and
fnstenv
icebp
test
adc
inc
mov
movs
out
rcl
hlt
setp
or
jge
sar
pop
rol
cdq
mov
test
retf
scas
jb
pop
clc
or
mov
out
pop
imul
repnz
scas
xchg
cmp
xor
lahf
fcomp
mov
in
out
adc
push
add
xchg
or
cmp
or
and
xor
loop
and
loop
mov
or
mov
mov
out
mov
into
add
mov
pop
dec
push
pop
pop
rcl
repz
(bad)
ret
mov
jmp
mov
xchg
jle
jne
movs
inc
mov
cmp
mov
sahf
ins
ret
repz
pushf
outs
mov
and
inc
mov
xor
push
push
sub
jle
sti
gs
outs
push
retf
lods
xor
int
pushf
push
lock
dec
and
aad
pop
and
aaa
(bad)
jg
xor
and
lods
xchg
xchg
popa
push
iret
push
push
movs
or
enter
iret
aam
push
sti
loopne
jo
jns
dec
xor
push
repz
jo
scas
test
stos
call
jle
push
xchg
jb
xor
adc
cmps
ret
cmp
adc
nop
jg
pop
cmc
ss
mov
outs
mov
pushf
inc
out
shr
xchg
add
lea
adc
mov
test
push
inc
xor
dec
or
mov
mul
cmc
ds
push
add
test
and
(bad)
int3
jb
aam
out
mov
push
addr16
push
jbe
and
pop
(bad)
stos
jo
ja
cdq
adc
in
ret
or
push
repnz
or
pop
test
pusha
dec
loopne
dec
(bad)
hlt
rol
pop
adc
rol
xor
outs
pop
mov
adc
mov
sub
int3
outs
daa
lea
sar
mov
mov
sub
loop
imul
cmps
dec
xlat
inc
and
not
lahf
sbb
sbb
mov
jp
es
mov
arpl
aaa
adc
and
sbb
rcl
pusha
call
ins
pop
aad
jmp
inc
fnstcw
inc
clc
sub
xor
xor
dec
xchg
push
push
fisubr
out
loope
xor
stos
leave
mov
mov
pop
pop
loope
cmps
mov
sub
lds
pop
or
ror
mov
not
dec
aad
mov
stos
div
add
call
les
rol
or
or
repz
sahf
sbb
add
into
(bad)
push
(bad)
not
xchg
xor
sbb
inc
imul
iret
inc
das
and
fsub
lds
sbb
cmps
imul
out
xor
popf
jb
inc
add
movs
movs
xchg
cmp
enter
mov
adc
mov
push
aad
mov
mov
or
test
imul
mov
and
cmp
or
inc
jae
xchg
xchg
int3
aas
xchg
cmp
cld
lahf
xchg
pop
sub
mov
outs
arpl
lods
cwde
iret
(bad)
test
js
or
inc
ds
or
cmp
ds
movs
mov
bswap
jge
sar
(bad)
adc
push
mov
nop
enter
sar
nop
mov
pop
std
push
cmp
sub
lods
cmp
and
scas
inc
pop
imul
out
popa
stos
sbb
inc
sub
mov
or
adc
add
sbb
lds
icebp
mov
aam
test
(bad)
int
jbe
movs
fdivr
inc
jnp
ins
and
test
jg
jnp
lods
jno
jns
mov
fadd
scas
push
in
jae
mov
retf
mov
jae
popf
mov
sub
sahf
aas
xor
neg
sub
movs
add
sbb
sar
aas
loopne
pop
pop
or
pop
xor
sahf
push
lods
xchg
lds
icebp
add
and
mov
rcr
ins
pop
movs
fisttp
fcomi
(bad)
ins
inc
mov
mov
cmp
cmp
sub
lea
test
cmp
lds
mov
dec
jne
inc
pop
retf
lds
dec
xor
imul
in
cli
pop
xor
movhps
in
shr
or
in
pop
ja
xor
adc
sbb
test
in
sahf
ror
and
and
jg
dec
fwait
xor
dec
test
loop
fmul
add
cld
fiadd
sub
jo
inc
mov
int3
sub
push
and
sbb
mov
outs
sbb
jae
test
mov
cmps
sbb
popf
inc
and
mov
lods
and
int
cmp
out
mov
sbb
cs
xchg
repz
sub
arpl
int
rol
clc
inc
shl
inc
gs
or
jl
imul
xchg
and
sbb
test
cmp
jnp
and
mov
psubd
jae
stos
shr
add
dec
scas
enter
mov
xchg
cmp
ins
ud2
iret
cs
fcomip
ret
dec
stc
retf
mov
pop
(bad)
(bad)
out
xor
test
or
xor
fcomp
push
sub
adc
enter
sbb
mov
(bad)
mov
sub
outs
add
es
dec
jbe
inc
retf
adc
cs
dec
push
adc
push
daa
pop
or
(bad)
out
stos
add
fdivr
jecxz
les
jecxz
mov
jecxz
push
cs
aam
or
fiadd
xchg
jge
imul
jecxz
mov
or
adc
popf
jmp
cmp
adc
and
aam
lods
xor
cs
iret
sbb
repz
mov
leave
sbb
aam
cmc
mov
shr
enter
das
cmps
(bad)
mov
aad
neg
inc
lahf
in
or
push
xchg
shl
mov
jmp
dec
inc
movs
mov
add
xchg
dec
xchg
in
outs
xor
test
scas
push
xor
inc
inc
outs
not
mov
movs
stc
xchg
retf
mov
inc
out
ja
jp
out
out
xchg
cdq
and
stc
push
jmp
adc
or
pop
jne
cmp
ror
xchg
and
pusha
push
sub
ja
xchg
mov
push
cli
mov
lds
andps
cmps
pop
dec
and
xchg
outs
sbb
js
retf
mov
mov
idiv
jbe
sbb
je
mov
sub
sti
je
rcl
pop
inc
mov
mov
jl
popa
out
xchg
fiadd
popf
ret
sbb
cdq
addr16
ja
xor
icebp
(bad)
(bad)
daa
dec
data16
and
adc
sar
mov
mov
xchg
(bad)
imul
or
xchg
lock
fmul
test
or
mov
das
mov
retf
scas
(bad)
cmp
addr16
sub
adc
mov
jge
cmp
or
lahf
sbb
or
int3
sbb
and
repz
jp
xor
adc
popa
sub
repz
cmp
aas
lods
ds
xchg
fbstp
enter
loope
inc
cdq
std
inc
(bad)
in
jle
and
shl
mov
stos
push
aas
popa
jp
test
test
rcr
shr
push
mov
and
aas
jecxz
stc
sbb
adc
xor
push
sbb
pop
adc
sbb
pusha
arpl
scas
movs
xchg
mov
div
cdq
mov
imul
loop
loopne
mov
jmp
mov
xlat
out
mov
mov
retf
sahf
sahf
pop
fld
cs
inc
mov
div
jl
mov
lds
mov
(bad)
xchg
xor
dec
test
jns
jo
mov
test
rcr
aam
mov
mov
iret
fidiv
loopne
cmc
pop
sbb
test
sahf
dec
inc
mov
fbld
xor
sbb
ss
cmc
and
push
mov
xor
ds
vpperm
push
jbe
xor
nop
mov
push
int
pop
push
xor
pop
data16
mov
stc
push
jae
jp
pop
push
pop
add
cmp
mov
add
sub
pop
pop
cmp
dec
mov
jnp
mov
and
dec
xor
outs
syscall
cmp
xchg
fistp
mov
jb
mov
popa
cs
add
add
ret
xchg
and
aad
pop
dec
int
xchg
cli
mov
push
sub
or
loopne
mov
xor
imul
cmp
add
es
or
aaa
sbb
dec
test
in
retf
fs
lahf
dec
lods
sub
lea
fnstenv
dec
aam
xchg
pushf
mov
mov
ret
arpl
xchg
pusha
push
fadd
pop
in
jmp
call
(bad)
shr
mov
loop
test
clc
inc
into
mov
and
ins
shr
cmp
mov
cmp
scas
adc
(bad)
xchg
push
mov
mov
mov
adc
lock
les
xor
mov
push
dec
js
push
dec
jb
scas
cmp
or
xchg
movs
fs
adc
dec
jb
adc
fcomp
lods
jns
inc
mov
or
inc
jns
mov
out
aaa
cli
(bad)
cmps
bound
sahf
jge
aam
popa
xor
fldenv
inc
inc
mov
and
(bad)
mov
xor
in
fs
daa
adc
fdivr
jo
(bad)
pop
pop
jmp
jl
xchg
pop
mov
lods
out
into
leave
mov
mov
add
in
cmp
adc
mov
dec
sub
sar
imul
push
mov
push
popf
add
jg
cs
mov
jbe
lock
push
adc
cmp
popf
jmp
inc
ins
scas
test
jecxz
adc
(bad)
cwde
mov
cs
mov
or
mov
idiv
jl
fnstsw
mov
sti
aas
jb
and
outs
mov
add
inc
in
push
xor
push
jl
push
cmp
xchg
mov
push
jne
inc
call
or
sahf
pop
push
outs
inc
js
adc
mov
das
xlat
fist
stos
mov
add
xor
xchg
push
push
in
cld
mov
adc
iret
fisttp
scas
xor
push
pop
rol
mov
adc
scas
or
lock
mov
rcl
mov
jo
mov
out
daa
repz
xchg
sub
(bad)
sbb
cmps
lahf
xor
scas
enter
pop
sub
dec
out
call
cmps
lahf
data16
jmp
and
aas
test
cwde
push
mov
das
scas
dec
push
sar
adc
pusha
fs
dec
sub
or
mov
scas
in
mov
scas
mov
and
adc
jp
cmp
push
data16
sub
cmc
pop
and
push
jmp
scas
sub
jbe
mov
and
push
icebp
and
push
pusha
jecxz
test
push
nop
aam
mov
arpl
dec
out
jmp
fs
or
and
call
jle
ins
rcr
mov
out
mov
(bad)
cmps
adc
sbb
fadd
inc
xchg
sub
stos
sti
ja
xor
add
xor
push
imul
cwde
cwde
int
test
pushf
xor
push
fisttp
pusha
aaa
pop
js
repnz
std
cli
xor
ins
fmul
inc
adc
sbb
aaa
jne
jo
or
call
rcr
call
and
mov
xor
fcomp
jge
movs
xchg
cld
jmp
pop
cmp
and
cmp
fdiv
outs
lahf
sahf
cli
popf
push
dec
out
in
jno
mov
out
js
scas
or
aam
jbe
adc
sbb
lock
test
jecxz
shl
push
jo
or
inc
ss
mov
sbb
les
jle
pop
jle
and
pop
sahf
inc
fbstp
cli
pushf
bound
retf
add
sbb
aaa
jns
shl
jge
pavgb
jp
pop
cmp
sub
daa
sbb
adc
popa
es
add
(bad)
enter
mov
mov
jno
lods
cmps
xchg
mov
imul
mov
loope
in
mov
cdq
(bad)
scas
mov
dec
xchg
and
xchg
or
inc
jae
or
fild
mov
mov
sbb
leave
cwde
call
repnz
jg
enter
xlat
ins
dec
or
sub
int
popf
mov
rcr
mov
xchg
push
push
xor
adc
mov
dec
clc
push
push
gs
sti
in
and
(bad)
pop
sbb
enter
fs
cmp
mov
imul
mov
push
pop
mov
cmp
push
ins
fstp
inc
pop
cwde
pop
ret
add
in
cmps
or
inc
icebp
aad
movs
or
(bad)
stc
retf
sbb
call
xchg
bound
pushf
mov
jo
fcomp
push
iret
push
mov
jg
(bad)
mov
dec
cdq
(bad)
and
call
and
test
int3
and
into
inc
jae
ret
repnz
arpl
xchg
mov
aaa
inc
gs
xchg
out
test
clc
pand
dec
(bad)
sub
push
adc
mov
push
jae
ret
iret
sbb
in
js
hlt
aas
inc
jp
xor
adc
pushf
mov
xchg
dec
xor
(bad)
into
repz
xor
aad
mov
lods
cmp
jno
xor
bound
addr16
xchg
jge
popa
js
and
(bad)
syscall
add
repnz
pop
sbb
je
push
pop
dec
mov
in
adc
mov
or
jnp
xchg
in
ret
or
mov
or
(bad)
push
jmp
mov
pop
cmp
inc
sbb
or
pop
xor
pop
loop
pop
aas
jne
add
fwait
xchg
jecxz
lods
aaa
(bad)
fucomp
and
(bad)
xlat
sar
jns
(bad)
loope
pop
mov
jo
cmc
or
ins
or
mov
pop
mov
jo
inc
(bad)
jp
jg
sub
movs
xchg
jecxz
fld
xor
aad
arpl
loopne
pop
cmp
in
dec
outs
ins
dec
dec
into
loope
dec
inc
push
jno
pop
and
mov
popa
push
pop
pop
dec
xchg
fld
jne
clc
lock
adc
push
cmp
mov
sbb
add
add
xor
cwde
xchg
and
and
hlt
xor
xchg
mov
mov
pop
les
cmp
shr
xchg
sbb
imul
mov
je
jae
and
mov
sahf
cmp
scas
adc
mov
jle
test
and
sub
lock
push
xlat
add
(bad)
adc
push
cwde
in
push
mov
mov
and
add
mov
mov
mov
ins
sub
and
(bad)
leave
daa
lods
jno
scas
jmp
std
mov
(bad)
sar
imul
rcr
sti
dec
xlat
or
mov
popa
sub
pop
mov
cmp
pop
jmp
fldenv
popa
dec
in
add
add
ja
into
jns
aas
jle
pop
neg
ins
push
inc
aad
mov
call
jmp
pop
popf
ret
ret
xor
sbb
mov
push
jbe
push
iret
adc
adc
icebp
adc
loopne
and
and
cmc
inc
les
fwait
sbb
cmc
fmul
mov
fwait
push
push
push
xchg
mov
jmp
lahf
ins
xor
sub
jo
(bad)
movs
(bad)
xchg
cmp
cli
pop
int
sbb
gs
inc
imul
mov
retf
cwde
sbb
xchg
pop
out
dec
je
pop
fistp
cld
pop
jne
cmp
pop
cmp
add
xchg
sub
or
fcmovnb
mov
cmp
add
fmul
sub
cmp
dec
leave
lock
mov
sub
ss
das
push
mov
movs
jae
test
in
jae
fs
cmpneqps
push
loope
add
mov
or
daa
sbb
mov
jb
pop
push
sbb
adc
xlat
es
push
test
sbb
lods
and
shr
ror
push
repnz
or
daa
pop
push
das
hlt
mov
fwait
sbb
jl
adc
push
pop
xor
das
inc
sub
gs
stos
xor
les
retf
jmp
bound
jnp
sbb
(bad)
xlat
cdq
ins
in
fiadd
or
or
xchg
push
in
ret
pop
or
xor
pop
fsubr
cmp
push
jge
mov
dec
loop
cmp
jmp
enter
shl
cmp
iret
es
push
idiv
jmp
push
push
retf
adc
(bad)
jns
clc
adc
cmp
mov
mov
shl
mov
shl
push
(bad)
(bad)
scas
push
ret
repz
imul
mov
ret
xchg
inc
cmp
mov
ror
js
ret
cmp
mov
push
add
repz
aad
fidiv
stos
jecxz
sar
fild
pop
xor
sbb
xchg
pop
cs
inc
js
ins
push
adc
jns
xchg
ins
mul
in
mov
or
sub
jp
cmp
sub
cmp
iret
sbb
mov
jne
les
js
fimul
pop
dec
and
shl
sbb
push
call
dec
jge
jbe
lock
ins
iret
stos
iret
cwde
sub
cmp
mov
fisttp
jle
in
jns
fisttp
pop
pop
lock
fsubrp
pop
fst
sub
imul
mov
in
dec
mov
shl
cmps
out
ret
cs
add
ficomp
pop
jmp
test
jns
aaa
stc
or
cmp
jmp
(bad)
enter
lods
cmc
add
bound
rcl
loope
mov
mov
xor
mov
in
test
and
cmp
fwait
push
dec
and
pop
or
dec
in
jmp
mov
sbb
xchg
inc
hlt
pop
idiv
adc
dec
push
mov
jp
dec
ror
or
xchg
enter
dec
nop
repz
or
cld
in
inc
std
and
pop
pop
xor
scas
cmc
enter
jnp
in
adc
pop
jl
mov
cmp
cmp
(bad)
fstp
jne
(bad)
stos
movs
loope
imul
dec
ror
mov
push
dec
xchg
call
push
mov
xchg
jb
dec
jbe
and
(bad)
adc
or
sbb
mov
lds
enter
out
fwait
and
shl
int
cwde
jl
ss
xchg
std
pop
in
jp
dec
sub
adc
shl
jg
mov
int3
xchg
sbb
adc
dec
jne
fidiv
shr
add
dec
je
fimul
jo
outs
clc
sbb
rep
xor
jbe
dec
mov
sbb
out
push
enter
mov
push
adc
lea
mov
mov
sbb
retf
push
sbb
jmp
push
mov
push
sahf
gs
(bad)
dec
in
mov
add
imul
sub
push
icebp
pop
test
es
xchg
pop
retf
cmp
in
cmp
das
pop
sub
inc
jmp
add
fistp
lds
(bad)
or
push
xchg
pop
mov
and
cld
in
daa
fdiv
mov
lods
imul
or
adc
outs
inc
jne
push
sub
mov
xlat
fucom
popa
pop
popf
xor
enter
out
cmp
in
adc
sbb
cmp
push
lea
push
movs
mov
in
bound
sbb
retf
repnz
rcl
jne
loope
outs
call
inc
into
icebp
ja
shl
loopne
out
jmp
or
inc
shl
in
test
adc
jnp
xchg
lahf
lods
int
sub
pop
ret
cmps
cmp
lock
cld
pop
add
adc
sbb
pop
pop
test
movs
rol
jns
mov
pop
inc
xchg
push
jmp
cli
ja
mov
stos
pop
xchg
push
inc
sub
retf
sbb
mov
xchg
mov
inc
push
outs
es
xchg
push
(bad)
xor
sti
mov
les
cmps
aas
ds
jo
pop
mov
push
dec
jmp
sub
or
in
push
and
out
xchg
xlat
sbb
or
movs
pop
jmp
loop
ror
imul
jns
push
add
mov
push
xlat
loop
std
and
cmc
mov
cld
sbb
cld
(bad)
pusha
fisub
(bad)
dec
cs
cdq
stos
fstp
xchg
inc
(bad)
stc
daa
stos
inc
cmp
out
cmps
(bad)
loope
inc
test
dec
sti
adc
scas
pop
mov
add
inc
stc
in
fsubp
xor
xchg
daa
nop
push
mov
pop
xor
sbb
inc
adc
jmp
cmps
retf
adc
mov
inc
mov
lea
jne
ss
xchg
cmc
pop
xor
mov
idiv
add
mov
fadd
jns
push
adc
dec
imul
add
and
or
jp
(bad)
gs
add
in
ds
call
leave
imul
hlt
and
sar
aas
or
mov
das
mov
out
cdq
sar
mov
test
cmp
and
mov
ret
ins
push
mov
mov
icebp
retf
inc
sahf
imul
lods
gs
jo
aam
xchg
jmp
mov
and
outs
not
push
jnp
mov
es
lock
fistp
sbb
cld
dec
lods
xchg
add
pop
sub
pushf
rcl
sbb
test
add
push
mov
or
ror
or
dec
call
idiv
lock
and
das
sbb
es
pop
ret
fstp
mov
(bad)
(bad)
dec
sbb
add
les
dec
into
pop
fist
sbb
in
cmc
fdiv
sbb
mov
stos
lods
(bad)
das
mov
pop
lods
mov
add
inc
fs
mov
cmp
jae
popa
js
shr
mov
es
dec
inc
pop
leave
dec
add
popa
and
mov
add
push
and
cwde
(bad)
xchg
inc
sub
mov
mov
loop
push
push
cmps
pusha
lds
pop
neg
outs
jmp
cmp
retf
or
retf
addr16
js
rcr
inc
out
repnz
fst
leave
jmp
enter
cmps
xchg
imul
in
cmp
pop
aas
and
jne
inc
pop
sub
xchg
(bad)
stos
add
and
in
pop
std
push
adc
repnz
mov
pop
mov
mov
add
xor
cwde
jge
ja
shr
jl
imul
and
jmp
sbb
movs
ja
out
cmp
lock
idiv
call
or
xabort
loope
stos
sub
inc
mov
mov
dec
mov
mov
ins
and
nop
leave
sub
sub
push
retf
loop
jns
push
push
es
jo
xchg
dec
test
inc
inc
jb
push
dec
pushf
mov
mov
dec
or
mov
sti
aas
mov
fcom
add
outs
rol
xor
jl
pop
inc
dec
and
stos
adc
xchg
call
repnz
popf
jne
push
xor
inc
popa
out
lds
jmp
mov
sbb
xchg
mov
test
pop
cmp
clc
jmp
bnd
and
movs
add
inc
sahf
imul
inc
xchg
xor
push
bound
fs
popf
add
mov
out
fsincos
loop
repnz
cli
jne
adc
aad
aad
mov
data16
jo
push
mov
cmp
sub
imul
cld
push
fnstenv
and
rcl
aas
pop
fisttp
jmp
test
xor
adc
sub
inc
add
fmul
into
in
or
lods
adc
icebp
scas
xor
jg
and
sar
sbb
mov
fsubr
(bad)
ja
mov
mov
pop
fs
pop
mov
pop
(bad)
xchg
outs
(bad)
out
mov
(bad)
popf
fdivr
ffreep
repnz
add
pusha
dec
xor
add
pop
popa
mov
adc
push
in
jo
adc
dec
and
test
mov
pop
sub
ins
xor
mov
shr
add
popf
cdq
lar
jecxz
loopne
fcomp
jmp
jmp
into
std
adc
push
sbb
hlt
(bad)
cmp
nop
into
xlat
pushf
sbb
lea
sbb
ret
push
jno
dec
fprem
cmp
pop
call
mov
pop
or
pop
hlt
sbb
(bad)
push
adc
pop
lea
fisttp
into
xchg
mov
test
pop
les
jecxz
xchg
mov
jl
cmp
int3
mov
imul
call
mov
popf
and
retf
pop
push
into
das
out
bound
adc
push
sbb
xor
adc
call
xchg
cmp
jnp
pusha
in
icebp
les
jo
data16
out
lods
faddp
adc
sub
outs
out
xchg
push
dec
jbe
push
(bad)
xchg
xchg
mov
push
repnz
in
push
mov
mov
sbb
addr16
sub
cmp
mov
popf
lds
fmul
sub
add
mov
mov
push
movs
push
idiv
repz
dec
imul
cmp
aad
bound
xor
jbe
fisub
jno
neg
(bad)
adc
sbb
sbb
movs
(bad)
mov
test
das
lods
(bad)
(bad)
scas
test
sahf
pushf
and
xchg
in
fcomp
popa
and
jno
xchg
es
jmp
clc
(bad)
or
lods
push
cld
rcl
push
push
neg
cmps
loopne
scas
inc
mov
test
add
movs
mov
dec
frstor
js
aad
add
mov
mov
mov
pop
hlt
dec
sbb
jl
mov
and
pop
xlat
aas
fisubr
lods
inc
fidivr
(bad)
(bad)
pop
xchg
jne
dec
test
xchg
jo
leave
or
sub
int
daa
xchg
cmp
mov
jbe
sbb
jno
pop
and
push
addr16
test
aad
clc
inc
cmp
inc
aas
mov
mov
xlat
jnp
aaa
xlat
aas
gs
fisub
pop
xchg
mov
outs
movs
jns
test
ret
jg
xchg
or
and
sub
pop
lods
xor
pop
xchg
sub
cmp
push
das
pushf
mov
daa
(bad)
cmps
test
sub
push
push
inc
lock
ss
push
scas
jbe
cmp
icebp
jae
adc
adc
dec
sbb
fld
movs
lds
imul
or
test
stos
out
mov
stos
enter
dec
lahf
jl
cmp
cmc
push
xchg
cmps
xchg
cld
push
shr
inc
mov
jecxz
xor
jecxz
sbb
mov
jno
mov
mov
(bad)
cmc
cmc
pop
xchg
pop
xor
mov
(bad)
test
jae
or
mov
pop
ss
mov
shr
mov
add
mov
fs
jecxz
outs
out
pop
test
mov
adc
add
add
(bad)
and
cmp
mov
dec
mov
adc
daa
adc
sbb
imul
mov
mov
inc
lea
push
mov
jmp
bound
lods
push
jp
cmp
sub
inc
inc
jle
dec
pop
jle
shl
inc
xor
mov
sbb
movs
bound
mov
(bad)
jne
loopne
icebp
jmp
and
scas
scas
add
mov
imul
and
cs
call
push
ds
sar
mov
jae
xchg
mov
aam
cmps
fs
shr
mov
xor
mov
jge
and
movs
xchg
add
lea
out
jae
repnz
outs
fnstenv
inc
pushf
in
push
jnp
mov
push
xor
ficomp
adc
cs
dec
pusha
and
push
addr16
cs
fdiv
and
jb
mov
iret
mov
jns
add
mov
xor
jmp
jmp
jae
pop
clc
aas
push
out
sub
push
daa
nop
popf
stos
xchg
mov
cmp
or
loope
rol
call
into
data16
or
movs
es
push
or
push
pushf
loope
cld
push
dec
in
fcomp
aas
fldcw
jno
mov
lds
cld
push
adc
(bad)
fmul
xchg
mov
stos
in
in
xor
into
xchg
mov
add
aad
adc
jl
lods
adc
stos
pop
frstpm(287
push
mov
xchg
icebp
loopne
(bad)
fucomi
in
mov
sub
adc
cld
mov
cmc
mov
cmc
push
mov
test
outs
dec
sahf
sub
(bad)
mov
mov
sub
inc
nop
out
push
sbb
(bad)
das
les
fimul
xor
inc
mov
mov
popf
or
popa
(bad)
xchg
mov
in
adc
add
push
push
cs
outs
outs
test
ins
pop
push
push
pop
dec
ja
push
mov
adc
out
pushf
add
dec
std
out
in
push
adc
fidivr
repnz
scas
lods
aad
dec
dec
cmp
out
imul
pop
imul
mov
jp
call
mov
or
xchg
cmps
cmc
mov
adc
imul
mov
mov
mov
and
je
stc
mul
clc
add
call
fadd
xor
mov
sub
mov
imul
bound
(bad)
and
rol
lea
mov
mov
stc
sahf
mov
sbb
stos
push
sub
gs
es
or
aam
and
mov
push
sbb
push
in
ja
cmp
scas
das
leave
fst
pop
xchg
(bad)
mov
stos
xchg
cmp
punpcklbw
lock
fdivp
popf
(bad)
leave
adc
scas
aad
pop
sbb
gs
sub
adc
sbb
push
pop
(bad)
stc
dec
pop
mov
arpl
pop
pop
retf
jp
jbe
ja
lods
push
fnstsw
cs
rcl
mov
mov
push
enter
pop
imul
fsubr
mov
dec
ffreep
adc
adc
mov
push
retf
xor
xchg
mov
adc
dec
std
inc
or
out
or
dec
cdq
fdiv
mov
fst
clc
or
and
stc
inc
imul
hlt
or
sub
add
and
popf
cmp
jno
ja
pop
in
mov
jb
repnz
sbb
sub
cs
jecxz
xchg
add
jmp
in
repnz
jecxz
in
pop
xchg
and
mov
sbb
cdq
test
daa
or
jmp
push
push
adc
xor
push
mov
jo
repz
sub
xchg
outs
mov
bound
jg
dec
fs
add
pmulhw
shl
hlt
mov
dec
pop
jecxz
rcr
xlat
push
popf
mov
sahf
pop
inc
int3
cdq
lods
xor
push
movs
inc
xor
cmp
mul
push
mov
stos
add
push
stc
and
out
lds
js
or
leave
pop
cdq
lock
sbb
sbb
aad
xchg
in
mov
popf
sub
dec
das
mov
push
hlt
leave
add
jl
stos
repz
addr16
push
push
test
ja
mov
mov
inc
repz
lock
gs
inc
cmp
addr16
mov
ss
fnstcw
inc
(bad)
push
xor
sub
ret
push
gs
jb
push
test
and
pop
mov
mul
xlat
mov
add
jg
xor
pop
push
and
jmp
pop
ror
in
repz
push
push
bound
ins
fldlg2
and
fstp
mov
pop
adc
retf
das
mov
out
(bad)
ds
dec
lods
sub
fs
(bad)
outs
pop
aam
inc
add
adc
das
sbb
push
popf
jmp
sub
adc
add
enter
push
ja
popa
sub
data16
mov
iret
cmp
das
cmp
or
cli
jecxz
mov
std
mov
mov
test
into
push
leave
dec
outs
lds
cmp
mov
(bad)
jmp
push
(bad)
xor
xlat
push
(bad)
gs
mov
xchg
add
xor
in
into
sub
mov
jno
nop
xlat
mov
outs
out
sub
inc
fadd
std
rcl
xor
ror
mov
add
sub
cdq
mov
sbb
(bad)
jp
jne
mov
pop
pop
or
sub
xchg
mov
sub
add
xor
js
int
(bad)
cmps
loopne
ffree
fcmove
jnp
dec
add
lock
loope
test
xchg
cdq
sub
adc
dec
jp
push
ins
in
std
push
jl
or
push
sub
lea
or
jno
cmp
scas
aam
mov
xchg
cmp
mov
cli
xor
sahf
dec
cmp
push
dec
cs
fnstcw
mov
jbe
mov
mov
and
mov
dec
rol
idiv
xchg
sbb
xor
pop
ins
mov
and
cwde
nop
(bad)
push
mov
mov
test
xchg
jnp
adc
sbb
ins
inc
mov
xchg
cmps
jmp
push
pop
movs
xor
ss
or
mov
mov
out
and
cli
cmps
pop
jecxz
mov
and
cmp
mov
scas
jp
sahf
mov
jo
sbb
lea
loope
inc
ins
dec
jmp
or
(bad)
add
lock
int
push
pop
adc
cld
ja
je
popa
jnp
xor
out
fwait
stc
push
mov
sbb
dec
ret
aam
rcl
lahf
pop
push
push
or
lahf
(bad)
fucomip
aas
pop
lods
cs
jg
push
or
iret
aam
sub
test
sbb
jmp
mov
imul
jle
popfw
xchg
mov
(bad)
jmp
jnp
cmp
add
dec
inc
adc
retf
xchg
scas
lds
out
lds
mov
cli
cmp
mov
or
or
mov
pop
call
popf
shl
inc
hlt
mov
or
in
jnp
mov
fisubr
pushf
jp
mov
fs
enter
jno
lds
rcr
mov
pop
adc
or
pop
mov
push
(bad)
ja
aam
xlat
or
mov
dec
fiadd
mov
mov
xchg
and
ss
ss
cs
mov
neg
pusha
mov
scas
loopne
jmp
cmp
imul
sbb
aaa
pop
xchg
movd
ja
ret
xor
dec
mov
dec
pop
adc
lock
inc
mov
inc
xchg
jl
es
lea
cmp
sbb
jl
in
adc
loop
es
and
lock
xchg
add
cmp
sbb
arpl
push
mov
daa
dec
xor
loopne
mov
push
mov
arpl
push
lahf
and
adc
mov
clc
add
jne
rol
ins
int
and
ret
fdiv
mov
adc
or
cmc
pop
aam
arpl
cmp
das
loope
std
push
fs
pop
push
xor
lods
mov
pop
je
sbb
lahf
sbb
repz
lock
adc
addr16
nop
xor
pop
test
push
aas
imul
fmul
popa
test
lds
pushf
call
test
sbb
push
sbb
push
cmp
inc
shl
cmp
adc
and
mov
dec
daa
push
push
les
sub
ds
ss
out
pop
test
sbb
pop
xlat
mov
lahf
cli
inc
cld
loopne
jno
and
sti
xor
outs
in
mov
in
sahf
aas
cli
ret
in
mov
int
inc
add
xchg
sahf
daa
clc
push
pushf
pop
and
daa
mov
rcr
xor
sar
repz
nop
mov
in
sub
std
iret
and
pop
ret
dec
test
and
pop
popa
ret
movs
rcl
gs
scas
test
out
inc
aad
and
mov
sbb
dec
push
push
push
lods
ror
pop
xor
jmp
xchg
xor
push
sbb
(bad)
mov
xor
pop
scas
dec
add
pushf
retf
repz
jmp
retf
or
mov
mov
inc
jecxz
dec
loop
stc
xchg
adc
adc
xchg
enter
pop
mov
and
add
(bad)
mul
std
and
sbb
jmp
mov
cmp
pusha
out
stos
jecxz
mov
dec
adc
xchg
imul
clc
jg
inc
btr
lea
test
push
xlat
jnp
pop
sbb
cdq
xchg
push
out
or
push
icebp
jg
or
cli
retf
(bad)
std
div
push
lds
cld
fnstenv
lods
outs
movs
mov
jno
sahf
pop
jnp
or
add
imul
adc
mov
repz
fs
test
clc
in
scas
pushf
add
pop
scas
adc
add
rcl
fmul
ret
call
fwait
loopne
mov
and
mov
mov
(bad)
pushf
xor
adc
pop
lahf
mov
and
retf
push
mov
xor
push
dec
xor
pusha
aas
in
sahf
ret
cmp
mov
sub
pushf
repnz
or
xor
shr
fwait
retf
test
out
mov
jnp
bound
mov
jmp
push
dec
mov
jns
stos
in
mov
imul
into
pop
and
out
test
out
cmps
add
(bad)
cmps
int
fcomp
sub
add
out
outs
mov
push
cmp
adc
add
or
lock
mov
push
push
xchg
sahf
loope
adc
or
fiadd
ret
or
inc
movs
sub
(bad)
xor
jmp
fsub
repz
jb
jno
sbb
mov
sub
test
push
in
out
inc
ss
inc
adc
jmp
mov
mov
inc
sbb
pop
shl
retf
imul
cvtps2pd
cdq
inc
add
xlat
push
add
cld
sub
xchg
ins
mov
int
aas
scas
xchg
imul
jne
adc
pusha
jge
jl
sbb
aam
js
push
(bad)
pop
sahf
lds
retf
ret
arpl
sbb
add
ins
dec
mov
leave
or
ret
int
cmp
and
mov
or
imul
mov
pusha
sub
xchg
aad
pushf
jge
mov
mov
aas
xor
and
pop
inc
mov
push
xlat
mov
inc
cmp
bound
hlt
inc
cld
cmp
dec
add
jae
test
xchg
adc
push
cmp
dec
fwait
or
jns
add
push
adc
out
dec
pop
stc
das
lahf
pop
ja
mov
shl
mov
mov
push
inc
mov
es
pop
(bad)
cmp
mov
xchg
jmp
mov
mulps
pop
mov
enter
pop
in
repz
jbe
inc
mov
sub
lods
inc
add
loop
or
sub
repnz
mov
and
sub
mov
dec
dec
jns
push
or
inc
sbb
sub
mov
fnstsw
add
lods
pop
mov
lahf
cmp
imul
pop
sub
inc
mov
jmp
(bad)
pop
inc
or
fs
or
not
outs
enter
ret
inc
mov
ins
test
mov
(bad)
xlat
sub
dec
cmps
cs
retf
cmp
sahf
xlat
cmp
jb
ja
rol
xlat
add
adc
js
sub
jae
push
xor
stos
push
movs
addr16
mov
scas
fbstp
outs
dec
add
inc
push
stos
cwde
mov
imul
lods
cwde
fimul
pusha
sbb
test
xor
cli
shr
dec
adc
jmp
lds
sbb
sub
lods
(bad)
fcomp
xlat
cmp
xchg
sbb
pop
nop
adc
inc
sub
lahf
je
xchg
sub
in
scas
add
in
aad
std
pop
sub
xor
mov
sub
pop
pop
sbb
repnz
xor
ror
or
(bad)
daa
out
rcr
mov
test
idiv
jbe
test
add
add
xchg
sub
xor
mov
in
or
jno
iret
or
xor
jo
dec
fstp
test
xor
rol
mov
sti
inc
inc
sbb
xor
mov
mov
cs
cdq
into
sub
imul
inc
(bad)
sub
into
push
dec
and
movs
ret
adc
scas
lods
pop
inc
retf
cmp
xchg
stos
mov
cld
mov
inc
out
(bad)
bound
dec
leave
int3
push
pop
add
xchg
and
adc
jl
lds
pop
fnstcw
bound
cwde
fwait
fs
or
std
enter
add
jno
cmp
or
add
stos
push
adc
das
out
bound
repnz
sbb
add
lods
jge
pop
(bad)
or
icebp
sbb
clc
push
add
rcl
into
cmp
mov
ret
fst
out
xchg
xchg
fsubr
dec
aas
push
xchg
jle
dec
(bad)
adc
and
test
mov
lods
retf
or
nop
cmc
add
aad
adc
test
inc
in
hlt
lods
cwde
lods
test
and
and
test
xchg
add
pop
bound
popf
and
ins
repz
mov
push
mov
std
push
add
scas
outs
rcr
je
int
mov
xor
xchg
lods
cwde
and
ds
mov
push
lahf
inc
mov
stos
mov
enter
cmc
jne
aaa
fiadd
stc
lods
mov
dec
cs
pop
adc
xchg
cli
aaa
pusha
cmps
push
push
call
inc
push
adc
xor
push
data16
jbe
in
enter
mov
int3
int3
daa
push
push
mul
mov
shl
mov
lods
jl
mov
inc
in
mov
scas
and
sub
or
pop
ds
fwait
sub
cmp
pop
sub
in
das
fst
mov
fwait
cmps
pop
cdq
ja
dec
out
adc
inc
clc
nop
jbe
nop
or
cmp
nop
xor
inc
or
lods
mov
sbb
sbb
stos
mov
adc
mov
daa
sub
ins
and
dec
mov
push
mov
jmp
test
jecxz
mov
std
inc
dec
ficomp
xor
lods
(bad)
mov
sbb
popa
sar
pop
pop
not
jp
and
in
jo
xchg
and
push
sbb
sub
mov
mov
movs
push
aad
mov
pop
mov
into
mov
lods
in
mov
repnz
das
lods
xlat
mov
pop
ror
outs
clc
mov
and
fwait
mov
inc
shr
aam
dec
cmps
popa
sbb
inc
cmc
and
in
in
scas
xor
mov
scas
popf
pop
sbb
call
cmp
dec
iret
iret
jae
ja
push
sub
mov
(bad)
and
xchg
cmps
arpl
jmp
xor
mov
jnp
inc
adc
mov
mov
jmp
jns
mov
mov
add
adc
popa
popf
pop
std
mov
jmp
call
xchg
and
xchg
sbb
push
and
xor
fwait
push
push
in
dec
test
inc
pushf
push
add
das
pushf
push
sub
jbe
fcmovb
xchg
xchg
dec
add
push
sbb
pop
mov
movs
push
fistp
inc
test
xor
adc
movs
push
jle
jae
mov
mov
daa
adc
in
lods
pop
mov
js
lock
cmps
das
clc
call
mov
and
mov
fiadd
jecxz
in
sub
or
inc
adc
mov
pop
push
pop
addr16
mov
mov
sti
daa
add
popa
add
pop
in
push
stos
push
popa
loop
loopne
test
pop
add
push
pop
enter
ja
inc
xor
push
add
adc
push
test
lods
mov
mov
mov
fwait
and
cmc
loop
pmaxub
dec
clc
or
fwait
mov
push
cdq
test
mov
mov
inc
mov
out
jne
rcl
lods
xchg
cmp
push
cmc
dec
and
xor
into
adc
in
popa
xor
mov
nop
popa
icebp
push
rcl
in
sahf
pop
fcmovnb
mov
mov
imul
in
lahf
ds
mov
daa
repnz
pop
cmc
fs
xchg
push
jnp
sbb
lods
and
aad
cmps
jbe
aas
je
mov
dec
xor
mov
rcl
enter
mov
rcl
xor
scas
stos
dec
jp
(bad)
loope
fdivp
stos
sar
inc
xchg
(bad)
xchg
in
fistp
test
mov
mov
cs
xor
jp
or
pop
mov
jbe
shl
idiv
pop
dec
std
xchg
inc
pop
cmp
dec
or
enter
xor
div
call
stc
or
outs
dec
lea
xor
pop
adc
es
or
xchg
mov
mov
adc
and
in
test
es
adc
jl
jne
or
mov
ja
xchg
mov
sbb
stos
xchg
cmp
ret
cwde
lea
test
iret
out
shl
inc
mov
in
scas
repz
sbb
cli
jg
jne
push
or
aam
inc
or
mov
ins
mov
push
jns
ret
(bad)
retf
mov
jecxz
inc
call
in
jb
push
mov
pop
(bad)
cwde
mov
test
movs
jb
scas
aaa
lods
nop
push
stos
repz
fimul
fs
je
cmp
dec
test
iret
fcmovb
adc
mov
jbe
cmp
jne
add
pop
sbb
and
jno
lock
jp
pop
loope
xlat
mov
sahf
(bad)
mov
xor
add
les
pop
mov
inc
fwait
push
cmp
lods
mov
xchg
ins
sub
mov
popf
retf
ror
cmc
rcr
sub
jbe
out
jnp
xor
push
retf
or
xor
push
push
and
adc
push
daa
sub
je
xor
in
cdq
js
daa
push
dec
jecxz
push
jmp
(bad)
cmps
aam
cmps
iret
cmp
sbb
mov
aad
mov
inc
and
inc
xchg
(bad)
dec
fdivr
movhps
or
jg
jge
xchg
mov
or
ins
mov
mov
mov
xchg
test
push
imul
lods
arpl
mov
and
mov
adc
inc
mov
cs
test
mov
add
sar
(bad)
cli
cwde
fwait
ds
cmp
aad
mov
test
inc
pop
test
dec
push
dec
rep
xor
in
adc
add
icebp
fild
in
popa
add
icebp
jo
fstp
mov
lea
aas
int3
inc
outs
ret
popf
stos
cmp
movs
fstp
sub
in
(bad)
cmp
je
stos
xchg
xor
pop
pop
int3
cmp
and
mov
jp
mov
mov
xor
imul
sbb
push
pushf
lea
jae
cmps
call
cs
test
int
(bad)
not
fiadd
pop
push
int
xchg
jg
clc
inc
inc
add
sub
jp
adc
xchg
call
mov
xchg
pop
cmp
xor
shl
inc
mov
in
push
jecxz
mov
call
mov
xor
xchg
sbb
xor
es
xchg
iret
test
sar
sbb
data16
cmp
loope
into
js
or
mov
retf
mov
or
sbb
cmps
sbb
sub
xor
xor
jne
dec
jne
xchg
(bad)
and
std
(bad)
std
mov
sbb
stos
dec
sbb
clc
mov
jnp
in
bound
or
mov
xor
ins
jg
or
pusha
mov
or
jge
mov
xchg
jmp
cld
test
gs
clc
pop
inc
daa
test
loopne
jno
(bad)
jecxz
aad
xlat
shr
pop
push
(bad)
sub
mov
out
mov
pop
sub
mov
jecxz
ja
test
push
jp
xlat
pusha
push
pop
sub
xor
xchg
fist
mov
fmul
adc
dec
dec
adc
cmp
xor
test
cmps
and
fst
adc
xchg
mov
stos
jmp
stos
mov
pop
add
or
test
jnp
repnz
sbb
mov
mov
lds
pop
jl
sbb
not
or
call
add
lahf
and
push
shr
cld
daa
mov
mov
adc
fs
movs
inc
jmp
mov
and
cmp
xor
imul
xor
jmp
movs
into
xchg
out
mov
loope
cdq
jmp
les
int3
in
add
cmp
enter
fisubr
mov
jbe
inc
jp
mov
outs
in
mov
or
fbstp
clc
sbb
gs
mov
adc
cli
adc
movs
dec
rcr
dec
aam
and
mov
out
mov
test
sbb
and
mov
xlat
push
mov
add
lea
inc
xchg
cmp
pop
pop
xchg
or
mov
stc
sti
call
sub
sbb
fcomp
lds
jmp
add
xchg
push
retf
xchg
sub
adc
cmp
scas
mov
icebp
dec
retf
out
pop
inc
mul
cs
shr
push
mov
push
and
jae
mov
setnp
and
mov
in
mov
mov
sbb
repz
call
movs
cmp
daa
xchg
jnp
inc
sti
pop
mov
mov
das
xchg
inc
mov
daa
out
sbb
bound
fdiv
push
(bad)
mov
inc
jmp
and
nop
adc
mov
adc
jb
cmps
and
pop
(bad)
imul
movs
xor
(bad)
ds
pop
mov
and
push
pop
dec
popa
stc
ja
and
les
and
cmps
cmp
jmp
lea
mov
les
pop
push
push
pusha
add
push
cmp
(bad)
rcr
int
pusha
mov
xchg
cmc
pop
test
bsr
out
test
rcl
ins
cmps
jg
or
dec
and
ret
cmps
xor
jo
mov
pushf
sub
pop
jle
mov
sbb
out
scas
add
adc
dec
les
mov
cmp
add
scas
add
or
rcr
ror
jge
test
xchg
xchg
dec
lods
mov
add
cmps
lods
or
cdq
ret
les
sbb
sbb
push
dec
fisubr
add
push
(bad)
js
loop
mov
add
loop
(bad)
sbb
or
inc
ins
icebp
push
out
dec
enter
imul
lahf
sub
jecxz
cmp
leave
xor
xchg
fidivr
jo
and
imul
push
push
fsubr
pop
dec
std
push
pop
push
repnz
js
ror
xchg
sub
sub
shr
inc
pushf
fst
pop
xchg
repz
in
ss
int3
mov
inc
je
sub
jle
xor
ins
mov
test
jo
sbb
mov
fnsave
fimul
sbb
lahf
cli
(bad)
aad
adc
inc
in
adc
sub
xor
add
fistp
shl
sbb
jp
retf
stos
xor
mov
nop
iret
js
jg
in
arpl
test
sub
out
fnstenv
(bad)
dec
or
sub
cmp
add
lods
fmul
ret
rcl
rcl
aas
mov
int3
xor
mov
adc
jmp
shl
pop
dec
dec
push
adc
out
das
push
call
xor
cmps
ja
adc
test
iret
xor
jmp
movs
sbb
arpl
jne
xor
cmps
jno
mov
das
sbb
mov
shl
fs
inc
or
mov
mov
sar
xchg
push
dec
cdq
mov
jmp
xchg
imul
mov
sub
and
push
ss
push
imul
aam
rol
rcl
sbb
aas
shr
dec
fld
retf
lods
fisubr
push
stc
cmp
pop
(bad)
retf
jecxz
inc
cdq
popa
aam
inc
xor
push
pop
or
lods
cmp
and
mov
inc
outs
out
out
popa
or
cmp
sti
jmp
add
mov
xor
lods
enter
(bad)
repnz
sahf
data16
push
outs
out
stos
xor
add
lds
xor
mov
mov
add
neg
xchg
mov
inc
ss
cs
ins
xor
es
pop
js
pop
inc
adc
add
cmp
mov
pop
mov
sub
jnp
lock
or
sub
sbb
xchg
jmp
mov
lds
adc
adc
pushf
outs
popa
or
leave
sbb
cmp
cli
xor
jb
outs
jbe
idiv
scas
pop
dec
dec
sub
cwde
rol
mov
cmp
xor
push
cwde
cmp
aam
mov
inc
int
dec
or
xor
mov
push
mov
mov
pusha
add
or
jecxz
inc
scas
sub
dec
mov
not
pop
clc
(bad)
imul
clc
and
pop
cmp
outs
and
jge
mov
sub
mov
pop
loopne
mov
push
loope
(bad)
adc
mov
pop
ret
or
cmp
test
into
dec
add
cmp
inc
jno
add
cmp
out
dec
pusha
jne
and
inc
ja
push
retf
cmps
pusha
(bad)
cmc
or
out
cli
iret
jbe
adc
or
stos
sar
mov
cmp
(bad)
jmp
mov
xacquire
add
enter
mov
adc
adc
mov
inc
outs
fild
ror
arpl
sti
in
into
test
mov
mov
scas
test
pop
retf
lds
fisub
ss
cmp
sub
mov
fisttp
loopne
cmp
mov
xchg
add
and
sbb
in
sbb
sbb
fcomp
and
add
test
xchg
cmps
jge
int
imul
stc
dec
test
aad
sub
jle
xchg
xchg
dec
dec
cmp
jo
jle
mov
int3
mov
xor
jb
dec
add
jne
dec
inc
jb
enter
pop
jg
jmp
pop
dec
fadd
out
test
mov
xchg
movs
mov
(bad)
leave
pop
inc
or
add
cmp
enter
scas
or
jne
scas
(bad)
jle
cmp
pop
imul
add
clc
(bad)
ss
xlat
fld
push
mov
pop
add
jb
cli
xchg
popa
mov
xor
imul
add
fimul
ss
popa
fnstsw
jae
lods
inc
stos
sub
push
out
icebp
xchg
jns
sbb
jp
aas
call
aaa
push
cs
sbb
test
push
cmp
cs
jg
out
push
ja
xor
jnp
dec
jge
push
nop
mov
xchg
aad
ss
fsub
test
push
lds
hlt
pop
mov
xchg
lahf
mov
mov
int
pop
shr
mov
mov
rol
jns
mul
rcl
xchg
fidivr
in
shl
scas
mov
mov
sub
xchg
out
hlt
cmp
xchg
jge
stos
jb
pop
dec
mov
(bad)
data16
repnz
std
popa
clc
push
pop
outs
popf
xchg
fidivr
ficom
cmp
dec
jecxz
xchg
mov
inc
pop
icebp
push
inc
loope
sbb
pop
rol
je
in
clc
inc
xchg
xor
outs
jecxz
push
pop
ret
daa
inc
imul
ins
xchg
adc
inc
and
inc
shr
xor
aaa
dec
sub
mov
mov
jne
mov
xchg
xchg
(bad)
in
popf
mov
adc
push
aad
fidiv
aaa
inc
fisubr
test
jmp
or
mov
arpl
pop
out
cmp
add
dec
mov
cmc
mov
inc
pop
call
ds
adc
cs
pop
out
jne
in
in
sub
adc
sbb
out
mov
jge
or
pop
ror
xlat
xor
jecxz
sbb
in
test
inc
pop
cli
imul
arpl
xchg
mov
ret
ins
imul
gs
mov
scas
mov
je
cld
adc
aas
lods
cdq
mov
(bad)
fwait
pop
jmp
mov
mov
call
add
push
jo
push
push
cdq
out
retf
in
cwde
sub
mov
imul
fistp
jge
movs
mov
mov
adc
stc
sti
mov
or
xor
mov
add
and
mov
push
sub
nop
push
(bad)
imul
jmp
stc
call
bound
dec
shl
cmp
ins
and
mov
cmps
push
mov
cli
or
pop
sbb
aad
mov
retf
inc
mov
imul
xchg
hlt
sahf
fnstcw
imul
movaps
jmp
and
mov
mov
mov
inc
gs
xchg
add
popa
adc
xchg
sti
pop
xor
xchg
xchg
jbe
popf
int
ins
jb
mov
mov
jo
push
dec
test
bound
or
xchg
scas
add
mov
and
push
call
fxch
pop
sub
pop
hlt
jp
ins
js
aaa
clc
mov
push
ins
sbb
add
or
loopne
cwde
out
mov
jp
cmp
pop
fild
push
in
mov
xchg
cwde
enter
stos
inc
mov
ins
outs
rcl
ins
or
xchg
test
push
jns
movs
adc
bound
dec
or
jmp
dec
jo
fnstsw
repnz
sub
out
mov
dec
das
(bad)
push
inc
pop
sbb
dec
jnp
repnz
sbb
push
push
adc
out
repnz
mov
shl
jo
popa
ficomp
ret
mov
int
jnp
cmps
and
ins
push
outs
jmp
shl
repnz
or
in
xor
cmp
adc
mov
add
fldcw
jbe
cmp
movs
push
pop
shr
jo
sbb
arpl
popf
movs
pop
cmp
sbb
push
push
test
retf
sub
dec
fbld
movs
pop
arpl
outs
imul
xchg
aam
fadd
cmp
aaa
xchg
jmp
fsub
mov
into
aas
cdq
jg
in
aaa
imul
scas
jo
test
shr
xor
cmps
pushf
lds
push
hlt
rcl
pop
pop
and
ins
pop
dec
repnz
adc
sub
aas
iret
int
dec
xor
lea
cli
and
fwait
sub
mov
je
fld
push
retf
fld
call
clc
aad
pop
ins
mov
pop
sbb
or
cmp
daa
xchg
jo
jb
jecxz
xchg
cmp
adc
ror
(bad)
rcr
dec
or
aad
add
xor
adc
jg
xchg
ss
fwait
mov
sahf
mov
dec
fwait
daa
inc
cld
mov
cdq
xor
jg
pop
pop
les
xor
jne
(bad)
hlt
and
and
dec
nop
xor
in
movs
pusha
into
xor
lock
cmp
jb
add
shr
cmp
js
(bad)
pop
add
pop
out
in
in
cs
sub
stos
scas
imul
adc
cmps
pop
push
adc
aad
xor
ds
sti
sub
pop
lds
inc
adc
inc
push
sub
je
add
call
dec
sub
pop
popa
dec
mov
in
inc
popa
push
xchg
xchg
sar
cdq
push
push
dec
addr16
data16
cmp
fldenv
int3
cmp
xor
popf
daa
out
adc
xchg
mov
loop
rcl
jmp
(bad)
enter
mov
push
cdq
js
push
dec
push
jmp
lods
aas
stc
sar
xchg
dec
out
inc
out
lods
leave
and
mov
hlt
movs
fisttp
mov
ror
and
sbb
xor
js
mov
sbb
jns
sub
pop
push
dec
inc
ret
push
fwait
test
xchg
push
xor
sar
rcr
into
pop
adc
cld
nop
cdq
or
or
jne
cmp
ss
into
cmps
je
enter
jns
fcom
je
inc
(bad)
cmps
lock
pop
je
or
sub
test
sbb
inc
ins
ins
xchg
cld
cmp
push
adc
push
js
arpl
jbe
test
aad
xlat
push
dec
jle
arpl
jl
push
mov
sti
push
es
xchg
jb
mov
repz
fiadd
inc
xor
lds
mov
adc
xchg
sub
xchg
data16
cli
mov
inc
mov
push
inc
idiv
daa
xchg
pop
jmp
(bad)
std
gs
(bad)
in
loop
or
sar
sub
stos
cli
xor
int3
jmp
inc
mov
imul
int3
mov
clc
repz
xchg
adc
adc
leave
movs
xchg
jns
pop
and
jmp
or
push
or
cmp
sub
int
lds
sbb
lahf
loope
sbb
pop
clc
es
xchg
stos
pop
or
xor
(bad)
ror
int
pop
jae
pop
mul
jnp
mov
cmp
sbb
scas
retf
jge
stc
xor
jae
sub
and
mov
pop
pop
mov
sbb
inc
add
or
ret
push
cmps
loope
jge
test
dec
xor
inc
add
out
and
lods
imul
push
add
ret
das
rcl
inc
imul
add
pop
cli
xchg
movs
and
push
(bad)
in
inc
push
cmp
pop
xlat
and
inc
mov
pop
pop
dec
repz
sbb
jl
fcmovb
in
mov
cld
mov
inc
adc
loopne
inc
imul
ret
jmp
stc
pusha
pop
fs
mov
scas
xor
bound
rol
xor
arpl
push
in
popa
pop
adc
sbb
pop
or
fld
dec
xor
or
pop
ror
mov
movs
xor
mov
xchg
(bad)
jmp
test
mov
(bad)
and
aad
mov
jge
mov
pop
jb
or
cmps
test
or
sahf
test
pop
popf
fucomi
cmps
mov
mov
inc
out
inc
mov
mov
and
sti
stos
cld
fsub
or
ret
mov
mov
test
push
adc
(bad)
mul
push
inc
iret
fcom
mov
mov
add
mov
clc
jmp
dec
stos
mov
sbb
mov
pop
test
mov
outs
adc
cmp
inc
ret
dec
and
jne
inc
sbb
inc
sub
neg
jg
mov
or
fild
xchg
(bad)
xlat
aas
sbb
sar
rol
retf
hlt
xchg
(bad)
nop
das
lods
pusha
xchg
or
mov
sbb
leave
arpl
inc
mov
push
int3
xchg
sbb
pusha
xor
jb
xchg
dec
idiv
xchg
movs
stc
stc
(bad)
push
pop
rcr
cmovge
mov
push
pop
xor
jmp
mov
clc
ja
cmps
cmps
mov
int3
in
fdiv
stos
jbe
jmp
scas
loop
(bad)
nop
mov
cld
in
loopne
sti
loopne
push
push
inc
xchg
adc
popa
xchg
into
pushf
push
and
xchg
ins
pusha
xchg
xchg
clc
add
inc
fdivr
mov
jns
(bad)
int
jg
sbb
loopne
fidivr
test
xchg
pop
and
in
stos
clc
push
retf
adc
dec
adc
xor
and
(bad)
jmp
xchg
or
mov
xchg
dec
push
xor
xor
add
std
sti
and
out
pop
lods
xchg
int
xor
push
sub
push
push
and
sbb
or
adc
outs
retf
ins
pop
push
and
js
xchg
repz
psrlw
(bad)
js
mov
fild
mov
and
mov
mov
(bad)
fmul
out
int3
cli
adc
jno
and
out
sbb
adc
mov
and
arpl
fadd
imul
jmp
pop
aad
inc
dec
mov
push
push
int3
push
pop
mov
or
pop
pop
xor
or
push
test
cmp
fninit
stc
je
push
cs
loop
out
jbe
int
push
dec
or
or
cmp
es
dec
adc
push
sbb
popa
cmp
sbb
cs
shl
imul
sub
daa
sub
push
inc
push
jecxz
fwait
inc
sti
xchg
adc
movs
inc
aam
out
test
retf
push
push
outs
(bad)
(bad)
int
add
xchg
xchg
xlat
cmp
aad
fist
pop
fidiv
test
push
dec
into
imul
mov
leave
cmp
inc
stc
je
jge
inc
add
jg
mov
mov
shr
adc
stos
fadd
(bad)
pop
outs
clc
mov
mov
xor
xor
push
cmp
or
outs
lods
jns
cmp
mov
fcomp
adc
in
das
adc
movs
push
popf
push
jl
push
and
leave
fdivr
sub
bound
xchg
rcl
sub
push
out
and
lea
loopne
ins
xor
scas
inc
pop
fnstcw
sbb
int3
mov
jmp
popf
sbb
ds
popa
clc
aam
mov
imul
and
xlat
out
pop
mov
cmp
repz
jge
loop
leave
fst
pop
add
call
movs
inc
mov
sbb
jmp
jno
adc
and
xlat
fwait
mov
test
mov
pop
ret
into
add
test
jnp
fldcw
mov
fwait
hlt
and
mov
ficomp
dec
dec
fld
xchg
bound
enter
cmps
fsubr
movs
pop
sbb
add
ret
loop
dec
mov
outs
test
mov
pop
(bad)
jecxz
fisttp
adc
rcl
jg
and
pop
rcr
(bad)
xor
inc
data16
fisub
enter
sbb
jbe
and
sbb
jno
xor
retf
ja
(bad)
xor
aad
scas
retf
in
lahf
mov
mov
xor
adc
add
xchg
ins
fwait
ss
sub
sub
mov
fisttp
and
hlt
in
push
sahf
add
dec
inc
aam
sbb
and
xor
pushf
mov
call
mov
popa
mov
das
cs
hlt
(bad)
in
lods
sbb
add
mov
or
(bad)
cld
pop
xor
lds
push
popa
clc
into
cwde
jo
sbb
pop
mov
mov
mov
xor
bnd
xchg
jle
fbld
and
(bad)
enter
fidiv
mov
pop
adc
inc
je
(bad)
stc
jb
xor
js
mov
das
cmps
jae
add
popf
sbb
cli
or
js
lahf
int3
mov
int
leave
push
inc
or
push
xchg
sub
cwde
cmp
fst
inc
shl
frstor
test
sti
pushf
push
push
pop
push
and
test
jp
not
cs
(bad)
pop
cmp
call
inc
mov
lods
in
fadd
inc
jmp
add
mov
mov
pusha
(bad)
pop
sbb
adc
dec
rcr
aas
and
pop
push
push
call
sti
and
pop
movs
nop
loope
add
lock
std
repnz
stos
stos
lock
mov
jno
and
das
sbb
push
add
jmp
push
cld
cmp
repnz
retf
xchg
xor
sahf
nop
cmp
sbb
add
inc
scas
loop
arpl
loop
fidiv
push
ins
add
or
sub
ss
jge
imul
or
inc
jmp
dec
sahf
mov
fsub
jo
jl
xor
int
lahf
cmc
aas
mov
adc
mov
sbb
fcomip
sbb
sbb
sub
fstp
cmp
js
movs
mov
jp
rcl
into
jmp
ins
and
ins
aad
lea
mov
dec
fsubr
and
rol
aam
cmp
mov
cdq
(bad)
adc
sbb
mov
je
push
repnz
cld
fnstsw
in
fwait
test
sub
push
inc
pop
sti
push
add
sbb
mov
cli
xor
(bad)
ds
cmp
repnz
and
scas
xor
inc
loope
xlat
ins
lock
popf
mov
mov
popf
dec
xor
xchg
(bad)
hlt
pop
mov
adc
mov
shl
ror
add
add
int
jno
arpl
fwait
loope
scas
fist
push
imul
lods
cmps
je
xor
not
vmovlps
icebp
dec
pop
sti
cmp
outs
mov
test
pop
imul
sbb
pop
cwde
xor
or
test
das
retf
xor
shl
and
sbb
fimul
rol
and
cmps
mov
add
addr16
push
iret
jmp
mov
sbb
pop
mov
hlt
push
pop
and
outs
call
outs
int3
or
fcomp
stos
sahf
pop
int3
sbb
and
mov
imul
es
cld
into
lds
push
icebp
(bad)
jg
in
lock
adc
ret
test
addr16
jno
xor
cmc
push
sbb
pop
bound
sahf
test
aad
adc
dec
xor
sub
push
mov
jb
fadd
ret
aad
into
inc
sbb
stos
dec
sbb
lods
mov
xor
int
mov
cmp
outs
jo
in
cmc
mov
lods
and
clc
fwait
add
jno
fild
mov
sub
in
mov
adc
nop
mov
or
push
(bad)
xchg
pop
enter
ds
std
mov
push
sbb
cmps
mov
mov
xor
or
xchg
jb
mov
sbb
sbb
ds
enter
cld
cmp
inc
bound
enter
sbb
icebp
loope
push
sahf
call
xchg
out
lods
mov
xchg
dec
sbb
pop
ret
fstp
fistp
mov
(bad)
into
cmp
call
xor
shr
xlat
xor
mov
ins
mov
sub
mov
hlt
lods
push
das
sub
add
jo
loope
fnsave
push
lea
fsub
iret
push
in
jnp
push
xchg
shr
push
movs
ins
sbb
(bad)
mov
clc
fidiv
or
das
cmp
int3
test
arpl
pop
popa
mov
std
lea
stos
call
inc
out
pop
mov
je
add
aam
xor
mov
test
pop
fild
adc
movs
pusha
sar
shr
jg
clc
pop
sub
push
repnz
outs
in
sub
adc
push
push
inc
jns
dec
lahf
push
dec
into
sbb
mov
cmp
pop
inc
jg
sbb
inc
rol
shl
lock
stos
cmc
sbb
and
pop
scas
mov
fisttp
test
mov
jecxz
fdivr
mov
pop
push
cmp
test
jmp
or
sbb
test
out
push
push
sbb
cdq
repz
mov
pop
push
xor
outs
pushf
or
sti
mov
or
jp
or
fmul
jl
jbe
jnp
push
das
sbb
lods
les
push
inc
pushf
and
sub
fwait
mov
fcomp
(bad)
leave
cmps
pushf
or
int3
fistp
jbe
cmp
stos
test
mov
cmp
fild
shl
addr16
dec
dec
and
jle
add
jns
jl
inc
jns
jo
inc
das
cmps
clc
jnp
add
shl
mov
sub
mov
adc
inc
bnd
sbb
push
xor
or
stc
xchg
lods
cs
lds
data16
loope
and
std
rol
mov
push
xor
sub
xor
pop
outs
mov
xchg
fimul
(bad)
and
adc
js
rcl
movs
xor
cli
in
cmp
dec
push
sti
or
sar
and
fstp
shr
push
(bad)
frstor
push
call
mov
imul
mov
sbb
mov
pop
or
lock
mov
or
and
int
cmp
jns
out
scas
clc
cwde
ss
popa
mov
test
out
lods
in
sub
jbe
cmp
and
arpl
out
xor
mov
arpl
adc
pop
repnz
cmps
pop
cmc
or
cs
das
and
retf
lock
adc
stos
and
adc
ficomp
dec
mov
ss
adc
adc
or
adc
leave
pop
mov
scas
cmp
sbb
es
aas
movs
hlt
pop
push
dec
push
xchg
add
(bad)
and
scas
addr16
mov
xchg
test
mov
sub
retf
call
xchg
(bad)
jbe
lds
sub
clc
getsec
in
mov
test
sub
dec
dec
dec
xchg
aas
test
sbb
mov
sbb
dec
dec
cmc
hlt
add
mov
std
ror
scas
ins
jno
sub
outs
clts
mov
bound
add
dec
xchg
test
xchg
xchg
sub
shr
dec
dec
mov
or
cli
or
push
mov
jnp
cs
xor
clc
pavgw
call
push
pop
pop
das
loopne
jg
mov
rol
mov
out
pop
xor
rep
movs
test
pop
(bad)
cmp
jecxz
sahf
sub
into
es
cmps
pop
hlt
sub
xor
pusha
out
js
int
xlat
(bad)
icebp
and
jns
out
push
stos
cwde
mov
mov
or
add
sbb
adc
push
ins
mov
leave
sahf
xchg
jge
in
fwait
in
jne
call
popa
dec
icebp
sub
and
jmp
adc
push
mov
xor
inc
xor
sub
dec
add
ds
inc
test
je
mov
pop
mov
sbb
jge
jl
stos
in
dec
add
je
add
dec
mov
dec
fdiv
call
pop
test
sbb
xor
or
push
pop
xchg
xor
mov
pusha
(bad)
(bad)
fisubr
mov
xor
cmp
das
xor
in
pop
fidiv
bound
dec
lea
sbb
fild
aam
loope
adc
out
mov
push
mov
sbb
pop
sbb
ins
inc
dec
aaa
inc
(bad)
loope
jg
xchg
push
out
shr
in
imul
clc
xlat
jp
sbb
loop
push
and
adc
xchg
inc
loop
xor
push
cmp
mov
jnp
fldcw
mov
mov
fisubr
mov
lods
push
xor
iret
xor
dec
xor
push
outs
retf
bound
cmp
jmp
cdq
xor
pop
in
or
add
mov
xor
inc
jae
adc
movs
xchg
sub
jmp
adc
es
adc
lea
add
cmp
push
xchg
add
mov
enter
(bad)
in
push
clc
xchg
mov
and
call
into
cmp
retf
pop
or
sbb
inc
imul
addr16
sub
and
popa
pop
ins
push
jg
xchg
das
sub
jnp
cmc
xchg
mov
lods
and
push
push
mov
mov
arpl
push
cmp
jae
sbb
mov
loopne
cmp
test
inc
sbb
retf
cmp
pop
ins
sar
mov
das
(bad)
call
xor
xor
mov
fdivr
pop
scas
dec
mov
xor
inc
std
add
add
not
mov
pop
aam
mov
fs
ss
dec
add
pop
ja
pop
jnp
jl
jmp
xor
mov
clc
add
and
enter
inc
cwde
jecxz
adc
adc
ror
mov
ret
fnstenv
mov
push
push
clc
daa
lock
push
lods
das
adc
and
dec
aad
mov
cld
ins
test
adc
(bad)
bound
arpl
mov
jg
cmp
inc
sbb
gs
push
dec
fisttp
pop
pop
or
push
dec
sub
and
mov
iret
imul
inc
xchg
cld
repnz
push
mov
xor
out
dec
sub
adc
mov
push
loope
pushf
adc
fmul
das
gs
sar
pushf
idiv
add
lods
(bad)
mov
xchg
ins
cwde
dec
pop
and
aaa
dec
add
inc
aam
sub
shl
iret
ins
shl
ja
ja
arpl
xchg
xchg
dec
dec
(bad)
aam
fcomi
aas
pop
lods
adc
pop
cmp
jnp
int
or
aas
cmp
jo
test
mov
das
in
xor
fcmovne
(bad)
jo
dec
bound
loop
jecxz
loop
or
(bad)
lea
and
in
dec
call
aam
inc
inc
jge
scas
loopne
push
iret
cmps
sbb
das
inc
imul
leave
stos
adc
pop
jbe
jecxz
dec
jmp
nop
enter
dec
push
pop
das
retf
out
call
std
ret
cli
mov
dec
out
add
xchg
sbb
pop
cmps
mov
add
or
adc
dec
jbe
add
pop
cmc
clc
loopne
mov
add
jg
aam
lea
cdq
fstp
stc
ins
inc
jmp
test
(bad)
pushf
leave
movs
adc
out
cmp
js
push
pusha
pop
lahf
out
jne
mov
je
fisub
or
mov
mov
inc
adc
cmps
test
ins
pushf
or
cmp
(bad)
fcom
fsubr
stos
sbb
cmp
inc
out
imul
in
pop
inc
mov
in
jl
or
adc
fiadd
js
pop
nop
cmp
aam
movs
push
pop
push
or
stos
les
pop
in
xchg
xchg
icebp
jnp
mov
leave
cmps
adc
retf
mov
pushf
into
(bad)
nop
repnz
jle
cdq
and
cmps
fmulp
xchg
outs
pushf
call
push
jne
mov
mov
dec
mov
sti
pop
dec
(bad)
adc
mov
add
jg
mov
xchg
lods
aas
jo
push
lea
mov
clc
rol
hlt
and
fidiv
dec
adc
cmp
or
cmp
adc
jp
cdq
int3
bound
xchg
lods
(bad)
cmp
and
sahf
sub
jno
cli
jb
inc
mov
imul
dec
fbld
add
ds
xchg
nop
xchg
and
inc
icebp
ficom
clc
push
push
out
pop
hlt
adc
sub
ja
fild
sub
in
or
or
fild
pop
loope
xchg
(bad)
and
xor
jle
push
adc
cmp
pop
(bad)
(bad)
cld
loope
mov
cmp
sub
mov
mov
cmp
jp
test
xchg
mov
mov
jb
loop
jb
or
push
leave
aaa
push
daa
fadd
ja
mov
call
mov
fnstenv
xchg
out
iret
and
mov
push
cmp
adc
ds
mov
out
pop
or
stos
mov
inc
inc
mov
lock
jle
cmps
mov
(bad)
and
clc
sub
and
movs
jno
dec
cdq
jno
lea
dec
test
(bad)
cmc
mov
je
adc
dec
out
nop
out
ja
fcomp
fst
mov
in
pop
cmp
mov
les
and
scas
xor
sbb
ficomp
mov
jmp
scas
mov
aad
mov
xchg
nop
aaa
out
test
pushf
cs
hlt
ret
(bad)
pop
sbb
xor
shr
not
sbb
pop
lds
fnstsw
clc
push
mov
or
mov
ret
mov
add
cld
mov
dec
imul
in
in
jp
sti
mov
xor
push
jo
sub
cli
pop
push
pop
ret
sbb
or
jbe
std
test
pop
sar
or
dec
fild
loop
lods
imul
cmp
jge
gs
pop
(bad)
adc
push
xchg
mov
call
jno
int3
pop
xchg
je
test
and
and
xor
cmc
cmp
pusha
int3
or
fstp
pop
(bad)
bswap
fsub
jmp
dec
xchg
and
std
jle
aam
mov
add
push
(bad)
fwait
xor
arpl
out
(bad)
mov
rcl
mov
xchg
cld
pop
mov
sbb
add
mov
les
outs
lods
scas
jo
rcl
push
aad
cmc
inc
sub
sub
push
test
xchg
ins
jnp
mov
mov
or
aad
dec
test
add
mov
stos
and
in
cmp
aad
add
add
cmp
fstp
mov
sbb
je
jae
push
jne
pop
(bad)
adc
fs
mov
jmp
call
mov
xor
and
inc
mov
lahf
mov
cmp
xor
push
inc
test
push
mov
out
dec
cli
out
out
mov
out
outs
lock
push
(bad)
xchg
and
je
pop
cmc
cmps
and
sbb
aas
add
clc
fst
or
and
mov
mov
imul
out
adc
inc
(bad)
push
xchg
sbb
pop
clc
xchg
imul
inc
sbb
icebp
aaa
jg
mov
imul
cdq
add
sbb
mov
dec
pop
push
xchg
fbld
aaa
scas
dec
inc
jp
inc
mov
out
xchg
outs
jne
cmp
aaa
mov
hlt
sbb
cmps
jmp
pop
jne
lea
(bad)
aad
outs
pop
jecxz
mul
mov
mov
repz
cli
push
xchg
add
nop
add
inc
jl
sti
movs
sub
jmp
push
enter
adc
inc
or
jmp
mov
mov
and
add
imul
push
sbb
loop
add
sbb
jl
sub
cmp
int
pop
dec
jnp
jle
inc
jmp
idiv
das
sub
sar
repnz
xchg
outs
add
mov
jno
or
jmp
ret
hlt
pusha
call
xchg
mov
mov
addr16
pop
jb
cli
sbb
dec
movs
inc
fisttp
pop
sub
jg
or
pop
xchg
icebp
movs
xchg
call
cmp
inc
mov
popf
shl
dec
mov
imul
imul
pop
xor
sahf
loopne
xchg
push
(bad)
clc
add
mov
dec
mov
cmp
pop
mov
mov
mov
mov
pop
scas
adc
mov
or
add
push
push
sbb
inc
sub
sbb
xchg
sub
in
push
inc
stc
pop
call
test
int3
ins
cmp
lods
in
dec
inc
inc
inc
ss
loopne
and
push
pop
jl
movs
test
stos
mov
dec
mov
push
push
retf
andps
xor
movs
sbb
fucomip
cwde
test
dec
push
in
call
lods
ja
and
push
lds
adc
fistp
sbb
mov
lock
loop
mov
jecxz
or
(bad)
fldcw
jno
js
mov
gs
mov
dec
xchg
loopne
push
nop
jp
inc
fmul
xchg
rcr
dec
js
pop
mov
data16
imul
test
xor
mov
cwde
jle
adc
mov
cmp
push
sub
jno
add
(bad)
div
ss
push
mov
sbb
stos
mov
aam
xchg
std
pop
cdq
leave
sbb
mov
add
pop
mov
aad
(bad)
ret
adc
or
jno
je
lds
mov
jne
sbb
aas
add
jnp
ss
and
or
lods
mov
out
xor
aam
shl
or
xchg
movs
and
add
sbb
push
jb
fwait
int
arpl
cdq
cdq
adc
xor
shl
mov
push
call
pop
test
fcomp
shl
(bad)
sbb
cmp
daa
mov
pop
ds
aas
repz
sbb
shl
nop
dec
jecxz
cli
rcl
pop
int
xor
stos
push
jbe
out
lock
pop
sub
inc
mov
cmp
rol
xchg
out
cmps
pop
test
enter
push
jbe
cmp
sub
cmps
loop
adc
fld
ror
sbb
rcr
adc
mov
movs
js
movs
cs
hlt
adc
push
cmp
mov
ror
mov
movs
sbb
sub
xor
fdivr
and
imul
sbb
jo
jo
adc
es
push
fsub
mov
xor
jno
mov
out
sbb
mov
lods
cwde
mov
or
mov
jge
sub
sbb
mov
es
jmp
cmps
mov
adc
cdq
jb
ins
sub
inc
nop
je
mov
sub
dec
sub
repz
pop
push
pop
retf
mov
push
push
lahf
mov
xchg
mov
imul
adc
repnz
or
pop
not
adc
mov
hlt
stos
pusha
lds
sub
sbb
scas
xchg
hlt
shr
pop
imul
fmul
mov
pop
fcmove
xchg
pop
pop
push
and
in
push
addr16
jno
or
xchg
hlt
stos
adc
add
and
pop
jbe
inc
xchg
int3
adc
loope
das
push
ds
push
push
pushf
mov
add
push
sub
xor
jae
dec
pop
sub
out
inc
leave
jns
inc
call
aaa
jbe
out
(bad)
fmul
sar
in
mov
xchg
mov
mov
push
call
call
push
mov
lods
or
(bad)
out
pop
mov
cmps
outs
add
sub
bndldx
cmp
bound
repz
jb
sbb
xor
arpl
ss
pop
jo
jnp
xor
xchg
dec
icebp
mov
call
hlt
jge
sahf
and
sahf
sub
in
adc
jmp
out
and
xchg
es
mov
pop
popf
movs
xchg
xor
mov
xor
mov
scas
arpl
test
adc
jg
sbb
outs
mov
add
and
adc
movs
lds
aad
xchg
lock
mov
xchg
lock
lds
adc
icebp
(bad)
pusha
mov
jecxz
pusha
les
je
add
stc
push
call
push
jge
sub
outs
mov
pop
arpl
mov
sti
mov
cmc
adc
inc
in
pop
and
(bad)
mov
adc
mov
pop
pop
inc
pop
push
in
call
sar
xchg
mov
fcomp
mov
hlt
adc
cdq
xchg
lock
cmp
fsubr
js
or
xchg
jae
adc
stc
add
cli
mov
std
or
into
cli
inc
scas
mov
hlt
jecxz
fidivr
adc
dec
aad
repnz
das
xchg
rcl
aad
cmp
test
loop
int3
aam
jl
dec
sub
mov
sbb
ds
cmps
jg
sub
xchg
mov
clc
adc
xlat
pop
or
pop
cli
xchg
or
outs
inc
fdiv
aaa
repz
ds
dec
adc
neg
test
and
ret
sub
xchg
imul
mov
cs
sar
enter
pop
es
mov
(bad)
int3
adc
mov
mov
cwde
movs
adc
mov
aam
loop
(bad)
fmul
inc
jbe
shr
inc
xchg
retf
xchg
nop
icebp
clc
arpl
mov
stos
out
dec
in
xchg
add
mov
repnz
mov
mov
jbe
pop
cwde
sub
mov
lods
dec
and
cmp
push
or
imul
inc
pop
fnsave
stos
cs
outs
popf
sbb
popa
inc
in
(bad)
popa
inc
int
nop
add
xchg
test
mov
ficom
mov
int3
adc
call
and
in
fsub
push
add
pop
inc
fidivr
xchg
mov
push
popf
adc
mov
inc
gs
xor
pop
mov
int
aaa
stos
mov
ds
fs
sub
pop
out
push
neg
in
dec
jmp
aad
arpl
push
or
cmps
in
mov
push
in
out
or
jmp
aam
mov
sub
mov
add
inc
shr
out
pop
sar
sbb
inc
add
pushf
sbb
nop
pop
dec
mov
and
adc
loope
xor
ss
inc
mov
cmp
add
imul
xchg
mov
mov
push
(bad)
mov
jmp
mov
xchg
dec
gs
xchg
mov
push
pop
mov
pop
push
(bad)
inc
outs
adc
dec
icebp
inc
loope
pop
test
cs
das
fldenv
sbb
fcom
mov
dec
mov
mov
(bad)
int3
cmp
jmp
cmps
push
pop
sub
dec
outs
in
inc
fisttp
cld
jno
push
ds
jae
add
or
mov
out
cmp
cmps
adc
add
mov
jl
mov
test
aaa
cmp
popa
js
int
inc
and
xchg
aaa
icebp
daa
iret
leave
imul
int3
in
(bad)
(bad)
xchg
push
call
ins
in
aad
cmps
push
add
push
fist
sub
push
(bad)
pusha
inc
mov
ins
jmp
sbb
jp
jbe
sub
push
cmp
jne
imul
fs
pop
mov
add
leave
test
mov
call
mov
adc
into
or
call
push
xor
push
mov
jecxz
sar
rcl
push
push
push
xchg
mov
cmps
sub
shl
jbe
mov
fbld
and
popf
dec
ret
popa
sub
loope
shl
jecxz
mov
and
adc
sub
pop
mov
lods
jmp
and
aas
and
out
dec
in
das
outs
mov
jl
cld
neg
hlt
(bad)
fs
dec
mov
stos
dec
fistp
xor
or
adc
jmp
dec
fdivr
call
pop
or
sub
(bad)
or
fxch
xchg
mov
xor
push
cmp
rcl
rcl
inc
in
push
adc
das
xor
jb
mov
lahf
dec
mov
push
aam
std
imul
dec
jg
add
cmp
movs
jbe
fbld
sub
cmc
inc
mov
push
and
dec
jne
aam
popa
xlat
dec
test
jp
jb
shl
movs
data16
out
mov
enter
dec
jle
cwde
jp
add
adc
and
sbb
or
add
leave
je
cmp
add
mov
(bad)
mov
mov
cs
and
jle
add
mov
inc
(bad)
push
jmp
sbb
push
cwde
push
(bad)
iret
inc
das
xlat
jae
adc
inc
sbb
mov
mov
and
popa
dec
lock
daa
jmp
shl
stos
imul
xor
sar
xchg
bnd
sar
mov
cs
mov
and
jnp
mov
adc
sbb
xlat
sti
imul
sub
fcom
movs
inc
shr
(bad)
push
out
ins
or
mov
pushf
cmp
xchg
ss
out
scas
mov
xchg
pop
sbb
or
pop
jbe
(bad)
sbb
push
scas
mov
and
fs
dec
sbb
inc
mov
push
push
mov
mov
setge
dec
jg
pushf
repnz
leave
daa
jmp
mov
ja
sbb
sbb
out
out
adc
xchg
mov
xlat
sub
ret
add
lahf
out
mul
dec
std
add
not
pop
cmp
(bad)
je
pop
jo
cmps
sub
imul
xor
cmp
test
jbe
sub
pop
or
aaa
lock
or
and
adc
mov
shl
aas
fild
jg
ret
push
xchg
movs
ret
pop
jl
push
and
ret
add
sub
or
in
sub
sar
sahf
mov
ret
fist
mov
out
(bad)
xchg
scas
sbb
mov
sub
aam
sub
(bad)
aam
adc
shl
je
jno
ja
in
or
loop
or
out
sbb
push
retf
bound
shr
jae
call
cld
dec
sub
push
mov
dec
ins
dec
mov
push
enter
mov
je
retf
or
xor
jmp
mov
cdq
sbb
xchg
jge
not
jnp
out
jecxz
mov
sub
rcr
adc
sbb
push
ret
mov
int
ins
popf
dec
push
add
ins
movs
shr
js
ins
jne
pop
fnstcw
mov
popf
mov
and
in
(bad)
daa
aaa
loope
movs
and
and
jmp
jp
stos
and
xor
sbb
cld
jmp
leave
aas
mov
ror
mov
push
push
(bad)
lds
jmp
add
mov
sbb
cmps
cmp
cld
cmp
in
add
loop
or
stos
shl
sbb
xchg
ror
dec
add
jle
rol
into
test
jno
inc
rcr
cld
jo
pop
mov
(bad)
push
mov
xchg
test
sbb
cmps
cld
sar
ja
ja
in
cs
enter
adc
bound
xchg
sahf
pop
mov
(bad)
addr16
pop
pusha
mov
jnp
mov
mov
mov
cmp
mul
scas
jge
cdq
push
cmp
dec
cs
sar
mov
jl
jnp
sbb
rcl
adc
dec
fsubr
clc
retf
add
ins
les
mov
cmps
mov
pop
lds
js
mov
retf
(bad)
mul
push
push
ror
mov
daa
sbb
sub
dec
xor
jo
xor
(bad)
jmp
je
jecxz
push
jbe
pop
loope
jge
jno
dec
std
cmps
sar
cs
cmp
cmc
inc
retf
(bad)
iret
jl
cmp
fcomp
push
in
inc
and
push
sar
pop
es
sahf
mul
(bad)
pop
xlat
mov
les
call
mov
xchg
sub
mov
movs
pop
jne
xor
sbb
push
mov
add
rcr
call
dec
test
fsubr
push
aas
xchg
xchg
or
shr
adc
ret
pop
ss
shl
inc
sub
call
and
xchg
call
cld
pop
push
mov
add
inc
mov
xchg
mov
jmp
cmps
cs
jne
dec
sbb
dec
mov
addr16
dec
or
popf
mov
lods
outs
adc
out
test
cmp
and
jae
lock
test
adc
ror
adc
repz
mov
out
outs
sbb
test
sbb
jmp
mov
ins
sbb
sbb
psubq
pop
sahf
pop
gs
mov
sbb
or
in
cld
sti
inc
mov
xchg
shl
mov
dec
in
xchg
das
jmp
and
adc
dec
xchg
(bad)
enter
xchg
xchg
mov
jne
ret
pop
stos
scas
push
dec
loop
sub
sar
nop
dec
mov
inc
mov
xchg
popf
cmp
cmp
mov
or
call
addr16
ins
rcl
cli
dec
xchg
pop
cmc
dec
cwde
ins
ret
xchg
iret
mov
mov
sub
inc
mov
lahf
jo
fbld
lock
stos
pop
cmc
adc
xchg
mov
cmp
pop
out
loope
hlt
jmp
xchg
pop
push
sub
add
push
or
movs
pop
das
inc
jmp
cs
idiv
sub
pop
cmc
shr
add
pop
sbb
mov
rcr
add
xchg
mov
loopne
loope
cmps
dec
adc
int
push
ins
adc
pop
lea
mov
out
into
lds
mov
xchg
es
jns
mov
add
mov
mov
jge
lds
loop
push
cld
fwait
out
mov
test
sahf
lods
jne
sub
add
leave
xlat
and
mov
cs
scas
xor
sub
(bad)
pop
ds
test
imul
jmp
jecxz
lahf
sub
or
dec
in
shl
std
xchg
or
in
adc
mov
bound
adc
lock
push
jg
pop
xchg
pop
scas
mov
pushf
aad
mov
inc
cmp
mov
add
fwait
jbe
movs
jnp
scas
cmp
fisubr
cli
jle
cs
ds
mov
dec
mov
sbb
scas
sub
in
sbb
xchg
(bad)
aad
dec
pop
std
clc
sbb
or
jecxz
xchg
sbb
push
jecxz
xchg
mov
cmps
lods
adc
ins
ja
fbstp
pop
push
out
sbb
dec
mov
adc
arpl
add
sub
xchg
bnd
lock
pushf
or
std
mov
inc
mov
sbb
std
mov
hlt
push
jo
mov
adc
(bad)
aaa
repz
or
mov
jl
daa
jb
xchg
icebp
push
adc
and
cli
test
push
fnstsw
es
xor
jge
scas
lods
dec
mov
shl
in
xor
cmc
js
in
sbb
mov
mov
sub
xlat
outs
pop
cmp
aam
call
jl
push
popa
and
dec
pop
js
outs
test
fdivr
fsub
outs
outs
sbb
push
xchg
inc
or
in
in
mov
pop
lds
fcmovu
in
adc
or
jo
xor
fucomi
retf
add
mov
inc
enter
mov
push
xchg
aad
push
test
loop
fwait
jo
jnp
ins
sub
daa
dec
retf
mov
jp
rcl
add
jne
pop
movnti
fwait
adc
lods
gs
mov
add
cld
je
loope
movs
fmulp
mov
gs
fidivr
inc
jl
dec
das
dec
or
into
rol
cmps
lahf
dec
mov
pop
mov
jne
inc
scas
loop
push
pop
xchg
mov
fsubr
repnz
popa
movs
dec
popa
lock
jo
mov
push
shl
pop
pop
imul
out
dec
jnp
fsub
mov
pop
jge
mov
or
fsub
(bad)
xchg
mov
push
rcl
add
mov
lea
cli
and
sbb
jg
jno
push
and
dec
mov
data16
aaa
fisubr
dec
data16
ins
in
dec
fild
xchg
fnop
aas
psllq
and
pop
retf
out
ins
jecxz
cmp
in
verr
stc
bound
dec
hlt
movaps
shr
or
shr
mov
mov
fs
jo
dec
xchg
or
loope
cmp
mov
mov
xor
test
je
fldenv
adc
aad
jecxz
push
mov
ds
jns
cdq
sub
xchg
adc
imul
push
js
enter
lds
popa
and
adc
and
das
fild
pop
(bad)
cli
jg
(bad)
mov
sahf
popf
bound
jb
or
pop
cmps
(bad)
dec
xchg
mov
cld
arpl
aad
pop
pop
movs
and
pop
aas
push
xor
nop
and
mov
sub
jno
push
imul
pop
in
lahf
hlt
cmp
out
stos
or
jno
sbb
mov
adc
fimul
mov
fwait
and
mov
cmc
dec
(bad)
xchg
rcr
dec
rol
mov
not
imul
outs
and
ins
sahf
dec
mov
mov
jae
and
xchg
mov
imul
jns
sbb
ret
rol
jno
rcl
loopne
cwde
and
movs
sbb
(bad)
std
sti
retf
(bad)
adc
pop
jae
icebp
lods
push
(bad)
in
ss
add
mov
jg
jns
add
jns
out
sbb
pop
pop
dec
into
mov
aaa
pop
test
sub
push
es
call
xchg
sub
je
inc
inc
mov
into
jo
loope
jno
cld
sbb
test
xor
rcr
stos
shl
and
and
test
fstp
pushf
push
inc
push
test
mov
jno
arpl
out
mov
jl
xor
fs
or
sti
jmp
add
push
ret
(bad)
xchg
adc
les
jo
loop
jmp
fwait
pop
aaa
cmp
loop
cmp
adc
out
mov
stos
xor
test
(bad)
movs
xchg
(bad)
xor
add
mov
call
inc
dec
dec
lods
into
xchg
adc
jecxz
push
test
xor
shr
ja
fnstenv
pop
mov
in
(bad)
cmp
repz
test
(bad)
arpl
mov
sbb
dec
adc
fstp
mov
push
dec
push
sbb
mov
mov
jmp
push
xor
jecxz
out
add
xchg
xchg
dec
aaa
das
hlt
cdq
inc
push
mov
pop
or
push
loop
and
ins
adc
sub
nop
js
(bad)
xchg
add
and
test
mov
and
jae
jecxz
xchg
stos
mov
sub
popf
mov
test
xor
and
mov
in
jg
out
xlat
iret
or
repz
push
mov
pop
cmps
aad
adc
pop
fwait
xor
push
sbb
movs
cmp
pusha
mov
mov
jg
and
xchg
dec
inc
iret
inc
outs
inc
mov
adc
push
jo
pop
neg
adc
enter
mov
ins
cmp
pop
leave
outs
clc
mov
popf
mov
in
xchg
rcr
jg
inc
mov
push
test
popa
add
push
stos
jl
jl
jbe
or
outs
in
push
popf
ror
into
adc
mov
jmp
push
gs
adc
(bad)
fcom
inc
jl
je
push
lods
mov
sbb
mov
sbb
pop
sub
imul
fst
mov
stc
out
scas
dec
or
add
retf
pop
dec
pop
jmp
push
xor
imul
fst
std
in
ds
mov
arpl
hlt
mov
dec
fs
aad
les
fild
icebp
int
outs
mov
mov
cmp
shl
mov
jbe
jmp
xor
(bad)
xchg
jp
inc
fiadd
je
popf
aad
jcxz
pop
shr
test
xchg
nop
(bad)
sub
lea
scas
push
rcr
pop
add
pop
fprem1
stos
cs
call
jo
sbb
(bad)
inc
dec
adc
dec
rol
dec
sbb
push
test
nop
xor
pop
daa
push
in
push
push
xor
cmp
aam
jmp
lods
sti
jge
pusha
out
push
call
mov
mov
add
in
inc
sbb
lds
repz
xchg
ror
inc
lds
stc
xchg
frstor
xchg
inc
jg
scas
jecxz
mov
jae
fs
nop
imul
inc
lods
stc
push
out
dec
popf
mov
jle
sub
pushf
pop
pop
pop
or
add
out
loope
les
jge
and
test
je
into
out
icebp
xchg
or
push
xchg
scas
cld
add
and
sub
add
xchg
mov
mov
sub
dec
sbb
test
xor
fstp
repz
mov
mov
fdivr
ss
sub
push
dec
jmp
and
loope
jns
fmul
ins
bound
int3
cmp
xchg
inc
imul
jmp
and
ret
clc
cmp
aam
sbb
and
mov
and
pusha
xchg
add
mov
stc
jle
cmp
out
hlt
xchg
pushf
out
pop
add
push
fs
cmp
leave
(bad)
call
out
repnz
mov
mov
into
nop
mov
xchg
dec
in
xor
sbb
sahf
icebp
gs
inc
pusha
and
xchg
aas
iret
sbb
outs
mov
cs
mov
adc
into
xchg
adc
(bad)
sbb
pop
mov
clc
cmp
imul
stos
push
push
out
pop
loop
or
mov
loop
in
js
pop
push
mov
(bad)
jl
mov
jae
ret
adc
mov
push
or
xchg
mov
int
call
aam
jp
mov
push
cmps
fistp
fnstenv
jge
(bad)
das
loop
dec
xor
sub
add
data16
imul
in
xchg
mov
inc
cmps
or
shl
jp
jnp
adc
xor
jle
fidivr
push
dec
neg
call
add
push
ss
ror
out
in
cs
mov
dec
ficomp
add
inc
sbb
ficom
jae
adc
cmp
mov
sub
idiv
inc
sahf
faddp
retf
outs
sbb
mov
rcl
sbb
lea
int3
cmc
fiadd
nop
or
inc
(bad)
sbb
loope
adc
outs
(bad)
fxch
cmp
push
add
sbb
(bad)
mov
pusha
das
sub
mov
mov
hlt
mov
lds
jle
inc
aad
pop
push
lock
scas
(bad)
cmp
ds
(bad)
and
xchg
shl
aas
push
pop
push
xlat
push
int3
jge
and
inc
sub
mov
xor
inc
push
cld
(bad)
cmc
dec
dec
cmp
in
jb
cbw
mov
xchg
call
inc
xchg
rcr
lods
inc
push
es
out
jmp
add
out
and
inc
call
mov
adc
sar
inc
ds
(bad)
dec
sub
movs
js
jl
mov
not
xchg
loopne
xor
and
fdivr
dec
xor
stos
inc
pop
xchg
aad
xor
int
dec
inc
adc
mov
stos
scas
mov
cmp
mov
dec
push
in
dec
pushf
stos
jmp
scas
push
xchg
shr
inc
sbb
add
push
xor
xchg
inc
xchg
inc
js
dec
cmp
in
dec
call
and
sbb
dec
test
shl
adc
addr16
movs
cld
mov
sub
sbb
std
cmps
imul
pop
bound
push
cmp
cmp
inc
loope
aas
clc
shl
push
aad
shl
leave
jne
pop
cmp
(bad)
pop
or
xacquire
aam
retf
fisttp
cs
(bad)
mov
fstp
add
or
mov
pop
lock
aam
fild
cmp
int
push
xchg
jle
rcl
iret
int3
and
and
cdq
adc
out
out
push
cmp
mov
and
push
mov
push
cmp
inc
mov
jne
add
or
scas
(bad)
pop
mov
jo
mov
xchg
popf
fs
or
stos
push
dec
pushf
lea
shl
lods
inc
int3
or
push
mov
push
adc
sub
mov
dec
out
xchg
inc
jge
inc
mov
sub
aaa
mov
std
and
inc
inc
sbb
loope
sub
nop
jp
ss
loope
jae
das
jge
mov
dec
shl
inc
movs
add
shl
adc
fcom
jnp
jecxz
iret
jno
not
inc
loopne
push
out
mov
and
mov
test
cmp
xor
imul
adc
bnd
jbe
into
fs
ins
ins
outs
xor
(bad)
enter
outs
inc
pop
out
pop
push
xchg
pop
jmp
ret
mov
or
inc
int
cmp
test
into
and
mov
dec
retf
pop
xor
scas
(bad)
mov
cs
mov
pop
imul
stc
nop
jl
and
sbb
mov
dec
cdq
jns
mov
or
sahf
or
mov
cmp
push
call
xchg
push
add
xchg
dec
sbb
mov
cmps
icebp
ja
or
hlt
int
dec
mov
clc
outs
mov
je
sub
adc
or
call
jne
lods
inc
xor
xchg
cmps
xor
je
mov
push
dec
sbb
mov
mov
(bad)
scas
int
add
ins
and
ins
add
sub
stos
xor
push
jl
(bad)
jle
daa
push
push
mov
in
mov
adc
(bad)
call
sbb
sar
leave
mov
or
inc
mov
pop
cli
loope
xor
xchg
adc
repnz
test
xor
int
sbb
push
xchg
test
pop
cmps
loop
xchg
cmp
(bad)
loopne
xor
push
push
sbb
pop
jae
jg
cmp
add
push
jmp
fld
fist
push
ret
test
rcl
js
xchg
jg
jmp
pop
pop
xchg
movs
add
fdiv
xchg
jae
jmp
jl
ds
xchg
add
jo
addr16
leave
push
(bad)
jae
cmp
(bad)
xor
pop
jbe
iret
jne
cmps
rcr
iret
jnp
mov
push
mov
and
inc
mov
sub
repnz
sbb
jae
data16
ror
dec
aad
std
xor
xchg
call
imul
cmp
cmp
imul
scas
mov
(bad)
loop
(bad)
(bad)
and
jae
pop
mov
ror
sub
cmp
add
xor
lahf
xor
sar
mov
pop
pop
in
pop
sbb
(bad)
aaa
add
or
faddp
fsubr
xor
sbb
test
aam
fs
test
sbb
out
xchg
jge
push
xor
popf
call
add
add
mov
jmp
dec
cld
add
mov
inc
dec
(bad)
mov
add
std
jmp
mov
data16
xchg
push
push
das
pop
aad
mov
inc
jne
or
mov
lock
mov
ins
adc
pop
stos
imul
xlat
mov
repz
adc
inc
stc
fdiv
xor
(bad)
call
push
jecxz
or
adc
jl
in
nop
pop
cmp
and
xchg
fild
stos
mov
popa
mov
sub
dec
pop
sbb
test
add
loope
shl
sub
movs
mov
xchg
das
mov
aad
xchg
out
stos
pop
lahf
bound
(bad)
xchg
jl
push
xor
cld
ja
out
call
cwde
cmp
movs
icebp
or
mov
jns
fdivr
outs
fadd
outs
pop
cwde
inc
xor
push
push
adc
mov
pusha
and
push
stos
icebp
out
ins
popa
and
fsub
cmp
push
mov
add
pop
mov
in
pop
int3
sbb
out
fdivr
add
int
je
mov
mov
jge
bound
int3
inc
not
cmp
jge
dec
aaa
jns
jbe
or
out
xor
xchg
test
shl
inc
cli
shl
inc
adc
and
aaa
mov
add
push
push
rcl
push
clc
mov
pop
lock
sub
pusha
mov
in
sbb
sub
xchg
cmp
stos
pusha
popa
mov
inc
xor
fs
imul
ins
sub
ret
push
es
fwait
enter
test
(bad)
sti
mov
loop
movs
stos
and
sub
push
into
(bad)
lahf
out
test
push
cmp
cmp
out
cmp
fcomp
push
ins
jl
div
in
mov
add
sbb
cli
ins
mov
sub
and
dec
or
and
lds
push
jb
outs
stos
pop
fld
jbe
pop
aas
xor
outs
bound
pop
jmp
inc
into
rcr
(bad)
out
cmovle
pop
jbe
xchg
xchg
mov
jns
or
js
mov
shr
scas
dec
cmp
add
js
or
adc
jne
test
push
inc
(bad)
sti
sub
xchg
mov
(bad)
call
std
push
ins
in
ds
mov
pushf
sub
mov
sbb
jne
push
or
add
xchg
or
int3
aad
and
pusha
fld
sbb
test
lds
push
clc
jge
cdq
cmp
shr
je
lds
add
shr
jns
addr16
addr16
xchg
movs
out
mov
popa
jne
add
push
jg
jmp
xchg
pop
cmp
and
js
or
scas
ja
sti
sar
jmp
push
push
mov
(bad)
outs
aad
dec
stos
imul
aam
lea
push
pushf
jne
and
fbstp
and
imul
adc
(bad)
pop
lahf
js
xlat
les
mov
push
jge
push
jge
leave
loope
adc
or
xor
dec
scas
or
lods
mov
pop
push
aad
and
dec
das
mov
and
pop
jne
xchg
push
(bad)
ret
pop
out
sbb
sub
xchg
fwait
addr16
stos
cmp
cld
outs
sar
inc
sub
mov
jns
mov
cmp
cmps
std
mov
jb
jge
pop
mov
test
xchg
push
inc
rcr
or
cmp
test
mov
call
or
imul
in
xlat
imul
fdiv
push
test
xlat
retf
push
cs
imul
repnz
or
fbld
cmp
xor
and
loope
aaa
jae
xor
push
sub
into
mov
mov
(bad)
add
cmps
movs
xor
fiadd
mov
mov
lods
mov
out
add
imul
xor
lea
ins
push
mov
cli
jns
add
test
and
mov
xchg
test
in
scas
or
mov
fs
in
inc
add
push
jne
test
ja
xchg
pop
cmovae
pop
lock
sahf
rcr
sub
movs
xchg
aad
fldcw
lea
sti
jg
and
fild
stos
push
stc
in
stos
mov
sub
ficomp
xchg
in
sub
mov
push
dec
sub
aaa
inc
(bad)
push
adc
cmp
adc
outs
nop
cbw
cmps
dec
add
shl
fwait
movs
push
test
scas
sbb
cs
adc
pop
(bad)
pop
dec
stos
push
out
adc
loopne
dec
(bad)
in
pop
add
add
adc
dec
in
into
call
out
ins
dec
cdq
mov
fs
iret
mov
mov
jle
fisttp
test
(bad)
ins
fcom
bswap
jmp
outs
popa
or
(bad)
in
push
jb
fimul
pop
repz
mov
adc
adc
data16
pop
rcr
call
pop
shl
int3
cmp
and
and
xchg
lods
mov
xchg
stos
bound
adc
and
lea
(bad)
push
rcr
push
jne
pop
(bad)
xor
ss
cmp
in
addr16
lods
sar
or
xchg
adc
or
dec
call
adc
push
dec
call
or
mov
dec
cmp
mov
cmc
in
cli
scas
popf
cmp
add
stc
dec
js
xchg
pop
(bad)
add
mov
call
int
cmps
or
mov
js
sub
out
sub
jns
pushf
xor
mov
gs
or
mov
nop
ret
cmps
les
mov
ret
addr16
cmp
mov
or
mov
jnp
mov
imul
mov
addr16
int
push
fwait
repz
les
add
inc
add
jbe
(bad)
jmp
retf
and
xlat
pop
addr16
repnz
jle
and
cwde
mov
mov
mov
sub
adc
int
inc
cmps
mov
sbb
jecxz
xchg
adc
pushf
mov
cli
test
xchg
and
jp
xor
mov
nop
add
(bad)
cld
jae
and
dec
sub
pop
pop
xor
das
jnp
and
dec
cmps
idiv
mov
pop
mov
push
or
call
shr
mov
pushf
dec
fmul
push
adc
inc
outs
cmp
loopne
ins
test
push
xchg
xor
loopne
sbb
rol
lock
fisubr
add
mov
pop
cmp
stos
adc
outs
test
repnz
mov
gs
inc
mov
sbb
mov
jno
xor
cmc
scas
sub
mov
xchg
jmp
stc
dec
xor
push
das
rol
push
cmp
xchg
hlt
push
aaa
push
repnz
inc
lods
jl
cmp
enter
dec
enter
in
push
cmp
mov
mov
sub
icebp
ins
mov
clc
and
push
ficom
fbstp
push
aaa
ins
repnz
mov
cli
test
mov
nop
popf
dec
add
push
jg
mov
lods
mov
imul
not
push
ret
jmp
or
mov
loopne
cld
and
(bad)
jmp
and
daa
gs
je
shl
(bad)
mov
jl
mov
loopne
sub
add
mov
call
ret
dec
fcom
lds
shr
popf
ins
and
leave
int
arpl
pop
and
pushf
sbb
inc
idiv
(bad)
sbb
ror
jns
cmp
mov
int
aam
inc
out
fcomi
data16
jb
es
fimul
shr
out
push
sub
pop
mov
inc
mov
addr16
cmp
outs
and
out
cdq
or
enter
ds
ret
cmp
(bad)
call
outs
or
lods
sahf
cmp
pop
bound
dec
sbb
jns
cmp
lods
js
enter
sub
gs
dec
dec
push
gs
in
push
leave
fadd
mov
jb
jp
jl
cmps
add
cmp
popa
aad
stc
scas
or
push
cmp
mov
xlat
add
ror
icebp
push
mov
pop
enter
popf
out
push
rcl
ret
adc
std
loope
mul
lods
add
es
ins
jp
fmul
fst
out
push
adc
add
xor
sbb
push
arpl
in
inc
xor
jmp
je
pushf
mov
sti
outs
repnz
adc
push
pusha
ror
inc
jp
push
and
xor
fsubr
xchg
xor
popf
fidivr
xor
mov
das
pop
cmps
pop
xchg
in
test
fmul
jae
ins
ror
nop
and
cs
fwait
xor
dec
cdq
cmps
(bad)
pop
loope
fcomp
jg
push
loopne
xchg
jno
xor
ds
fild
pop
(bad)
sub
sbb
(bad)
fisub
fs
cmp
in
fsubr
out
cmp
int3
pushf
inc
loop
cmp
xor
into
cmps
clc
adc
clc
ror
jg
pusha
ror
xchg
je
add
sub
outs
jmp
(bad)
and
cmps
dec
imul
lahf
and
mov
push
sub
bound
call
loope
pop
sbb
cmp
sbb
xor
scas
scas
test
xchg
jg
repnz
fisttp
cmp
in
in
scas
jmp
adc
fs
add
sbb
mov
or
lea
push
or
mov
scas
cwde
ror
mov
and
ret
mov
cmp
out
mov
cmc
jecxz
mov
mov
pop
shl
test
movs
add
mov
mov
jp
sbb
in
cmp
rcl
pop
rcr
cmp
imul
or
pop
lods
vpsubsw
cmp
jb
jns
inc
inc
call
inc
add
es
jb
or
pop
mov
and
jnp
mov
retf
pop
lock
sub
pop
sub
mov
xchg
jb
adc
push
mov
imul
jo
fcomp
pusha
jmp
and
cld
(bad)
lods
loopne
dec
xor
ins
inc
retf
mov
pop
arpl
outs
cmp
(bad)
in
add
das
imul
es
mov
ja
scas
pop
push
scas
cld
leave
pushf
cmc
lods
mov
push
paddq
cmp
das
lods
je
(bad)
pop
pop
mov
jns
cdq
jnp
enter
pop
fs
pop
adc
fisubr
ror
add
rcr
or
mov
or
xchg
call
jne
out
out
dec
mov
sbb
and
sbb
nop
in
les
push
icebp
jbe
gs
sahf
mov
(bad)
push
dec
shl
jg
push
push
push
leave
enter
xor
adc
mov
iret
xor
stos
sub
in
pushf
dec
adc
push
pop
pop
imul
sub
adc
cmp
fst
cld
aam
retf
xor
and
sub
xor
fmulp
and
jns
sub
dec
out
jle
movs
jno
frstor
aam
lods
jmp
lock
mov
std
test
mov
add
pushf
icebp
call
cdq
xor
adc
dec
or
aam
(bad)
jmp
popf
in
mov
movs
fld
xor
loope
int3
mov
out
into
lea
test
push
jmp
sbb
mov
mov
mov
jns
es
test
stc
and
ja
dec
retf
pop
lds
ins
dec
pop
cmp
lods
jmp
out
push
adc
xor
pusha
scas
ja
mov
stos
xchg
adc
cmp
mov
mov
ret
jno
push
inc
call
cs
xor
mov
jne
push
into
(bad)
out
fst
std
lea
fnsave
inc
stos
in
sub
pushf
mov
fcom
rcr
ja
dec
mov
test
jmp
fisub
jp
aas
imul
psubb
in
add
adc
popf
mov
icebp
cmp
sub
ret
fist
or
imul
mov
mov
or
repnz
inc
jns
inc
and
in
pop
inc
push
ret
mov
push
(bad)
mov
jmp
mov
pop
(bad)
push
add
push
enter
pop
call
shl
addr16
cmp
mov
ret
into
push
nop
mov
aas
or
add
int3
or
cmp
leave
push
hlt
dec
shr
leave
sbb
mov
ffreep
mov
inc
inc
rol
retf
jo
dec
es
cmp
jmp
sub
push
loop
cmps
push
pop
scas
cmp
fstp
push
mov
add
mov
cmps
out
dec
call
dec
and
outs
ret
clc
shl
fnstsw
movs
scas
push
aam
inc
push
mov
lods
or
dec
ins
and
adc
add
mov
movs
rcr
ds
inc
test
scas
lahf
xlat
adc
sub
push
add
jae
mov
mov
(bad)
dec
sti
jg
daa
into
cs
sub
push
lahf
sub
and
sub
cmps
xlat
sub
rcl
or
push
inc
cli
cwde
push
pusha
or
fistp
pop
jbe
ins
fwait
and
jg
mov
pushf
sub
adc
xchg
pushf
rcr
fcmovb
xchg
dec
cmp
fisttp
test
mov
cld
arpl
cwde
test
pusha
ins
fs
xor
jae
mov
jns
xor
ficomp
pop
pusha
xchg
mov
lock
pop
out
cmps
test
adc
xor
dec
(bad)
ins
test
inc
aaa
mov
jecxz
push
lods
sub
fwait
loope
sub
inc
jle
sub
lock
xchg
xor
xchg
ss
scas
mov
jno
inc
and
loope
out
stos
adc
push
leave
loop
repz
fiadd
pop
or
xchg
jne
mov
xor
add
sbb
sbb
pop
sti
fnsave
adc
not
out
or
js
xor
out
cmp
and
xchg
mov
(bad)
gs
and
ss
sahf
aaa
rcr
cmovle
xchg
sbb
ss
test
add
clc
sub
addr16
xchg
js
shl
arpl
push
ret
mov
mov
mov
xor
fucomip
pop
or
adc
cmp
test
inc
je
xchg
ret
mov
loop
inc
jb
dec
mov
out
xor
and
xor
xor
div
mov
rcr
xchg
std
xor
mov
xlat
mov
and
sbb
mov
mov
add
div
mov
push
not
push
lods
cmps
shl
xchg
sub
mov
pop
cdq
(bad)
out
ret
stos
pop
xchg
xchg
add
add
inc
pop
les
mov
adc
push
xchg
lds
jle
and
pop
ret
cmp
jmp
loope
pop
iret
ret
push
out
fild
pop
dec
xchg
push
jo
daa
and
adc
in
in
gs
jg
imul
mov
jmp
push
mov
xchg
je
jnp
dec
ficom
stc
lock
in
cli
cmc
jae
iret
into
xchg
xlat
mov
das
test
mov
push
movs
xchg
daa
test
sbb
cwde
jge
fmul
aaa
les
push
cmp
movs
cmp
jle
(bad)
push
repnz
out
test
push
adc
push
icebp
mov
movs
inc
sbb
cmp
push
cmp
out
mov
sti
inc
mov
mov
stos
and
push
je
je
(bad)
ja
sbb
xchg
ds
push
jl
and
add
fild
jmp
push
out
mov
nop
jge
test
jle
dec
jbe
std
jb
mov
and
xchg
push
js
jae
xor
cmp
dec
xchg
add
push
inc
cld
fist
mov
jecxz
push
stc
mov
or
mov
jmp
in
push
jp
jg
int3
cwde
pop
aam
loope
rcr
mov
jne
add
leave
fadd
cmp
lock
push
sub
pusha
mov
setnp
or
fdiv
and
xor
mov
add
xchg
jmp
dec
jmp
fild
and
xchg
xor
ins
sbb
xor
sbb
outs
(bad)
movs
fld
xor
rcl
sub
dec
inc
pop
sub
cmp
iret
jecxz
adc
xchg
inc
lds
xor
(bad)
push
das
inc
es
ror
aam
jl
vmaxss
test
dec
cmps
sbb
xchg
push
sbb
mov
pop
push
in
xchg
sar
sahf
mov
jle
push
sti
dec
jg
je
int
inc
sbb
push
fist
retf
std
or
inc
retf
mov
inc
add
vcvtps2dq
add
in
mov
dec
stc
xor
shl
pop
fwait
not
xchg
jmp
icebp
or
ret
inc
pop
mov
pop
inc
push
(bad)
out
les
mov
mov
mov
sbb
push
mov
arpl
popf
mov
aaa
jo
mov
cmps
cmp
mov
xchg
cld
sub
jle
imul
fst
lea
dec
sub
cmc
outs
movs
movs
imul
cwde
mov
mov
lahf
add
or
retf
push
bswap
out
fcomip
jp
popf
enter
inc
mov
sti
adc
fld
pop
pop
inc
rcr
mov
sbb
pushf
gs
sbb
mov
push
mov
sbb
adc
add
adc
test
mov
ins
loop
out
aam
cs
push
adc
cwde
repz
out
cmps
sub
je
lds
ja
jg
inc
mov
jbe
cmp
(bad)
imul
mov
mov
or
cmp
add
js
fs
inc
pusha
nop
mov
imul
mov
div
test
dec
loop
addr16
hlt
xor
inc
jge
xor
stc
in
cs
adc
inc
das
inc
and
lods
movs
add
aaa
jo
dec
sbb
cmp
jnp
data16
inc
pop
out
fucompp
adc
cmp
adc
xor
int
imul
shr
add
cwde
(bad)
fistp
xor
adc
sub
(bad)
cmps
ret
lods
jge
or
mov
xchg
xor
pop
add
icebp
js
int3
cmp
shl
jge
cmps
mov
cdq
and
pop
sub
gs
dec
lea
jg
dec
inc
(bad)
fimul
mov
cmp
add
ds
sar
lahf
add
xchg
cld
push
xchg
in
(bad)
pop
pop
jo
xlat
sbb
push
stos
cmps
adc
cld
inc
rol
stc
test
dec
and
pop
mov
mov
sbb
movs
sbb
inc
inc
cmc
jbe
mov
js
lods
add
loop
ja
xor
cmp
test
push
les
sbb
out
jecxz
sbb
mov
add
outs
test
mov
push
mov
mov
jae
gs
not
leave
cmp
cmps
les
mov
push
les
arpl
test
lea
gs
data16
push
push
out
mov
rol
push
add
aad
test
inc
icebp
enter
xchg
pop
add
fadd
pop
jns
outs
adc
fild
out
mov
or
lds
mov
(bad)
xor
mov
rcr
xchg
dec
mov
push
fmul
fimul
and
xlat
fld
mov
mov
mov
rcr
aad
xchg
fwait
int
ss
push
cmp
into
bound
jp
dec
adc
cmc
xchg
push
xor
mov
xchg
ret
retf
pop
add
pop
jle
pop
jo
push
enter
stc
ret
cmps
cmp
fisttp
and
in
loop
add
stos
jge
out
popa
push
test
jmp
(bad)
lods
jo
dec
ins
jns
lahf
test
dec
add
je
mov
in
or
aam
cmc
in
cld
or
sub
dec
jb
inc
xor
push
pop
test
out
inc
imul
daa
cmps
shl
stc
in
nop
jmp
fdiv
loope
inc
mov
add
retf
aaa
inc
add
sub
xor
xor
mov
imul
enter
and
pop
loope
push
inc
das
sahf
imul
push
cmp
adc
hlt
xchg
xchg
stc
lods
movq
xor
dec
test
dec
outs
push
sub
add
into
sti
(bad)
imul
(bad)
out
aaa
popf
jg
bound
add
cli
int
sar
sub
aad
test
mov
fwait
cmp
cld
fst
pop
popa
jmp
pop
dec
sub
or
add
or
(bad)
pop
mov
imul
pop
xchg
aas
xor
dec
mov
addr16
in
or
sahf
int3
mov
jne
xchg
(bad)
jmp
pusha
out
dec
cmp
xchg
sbb
adc
lods
xchg
sub
cmp
dec
ror
sahf
cmp
and
lods
xchg
ror
mov
cmp
test
push
mov
jmp
int
push
or
xor
ja
outs
jmp
push
loopne
push
mov
movs
les
dec
mov
fnsave
cmp
pop
sub
fld
jmp
das
push
mov
jno
adc
loopne
pop
mov
imul
mov
shr
out
jmp
mov
pushf
loop
xor
ficomp
inc
mov
sbb
fs
fst
dec
and
cmps
xor
push
hlt
cmp
rcr
jmp
add
mov
jmp
mov
test
imul
imul
jge
cmp
scas
in
push
js
shl
mov
or
sbb
push
cmps
or
(bad)
div
or
mov
test
push
jl
in
ins
add
mov
jle
and
loope
in
adc
jno
sub
jo
jo
ficomp
push
repnz
fstp
imul
push
pop
xchg
retf
loopne
pop
xchg
jp
mov
jp
or
pop
pop
mov
gs
push
popa
cli
xor
cmp
sar
loope
ret
imul
mov
outs
add
iret
push
aad
and
jae
push
push
ret
arpl
test
scas
(bad)
rcl
sub
inc
push
ret
dec
sub
inc
mov
out
ret
sub
mov
int
xlat
jmp
xchg
fwait
out
xchg
mov
or
dec
cmp
cmps
pusha
adc
adc
xchg
in
mov
clc
test
and
or
cmps
mov
sbb
mov
jl
mov
push
out
movs
(bad)
jno
jmp
push
pop
sbb
test
ss
xor
shr
rcl
mov
mov
or
mov
sar
mov
lea
jb
jno
mov
mov
jbe
loope
sar
fldenv
cmp
stos
add
aaa
hlt
call
xor
jmp
or
cwde
test
out
and
scas
or
fistp
xor
(bad)
loopne
xor
int3
aaa
dec
pop
std
mov
dec
test
mov
out
test
push
push
add
imul
popa
and
xchg
cmp
mov
idiv
stc
test
mov
fst
fild
iret
mov
adc
jge
mov
popa
int
rcl
mov
les
jo
mov
retf
hlt
sbb
add
test
or
clc
or
cdq
jno
push
inc
dec
out
adc
dec
outs
sub
xor
jg
push
pop
add
push
mov
xchg
loopne
aam
jecxz
iret
mov
mov
xchg
push
hlt
(bad)
mov
sahf
mov
test
neg
mov
shl
or
ins
cmp
cmp
xor
aad
sub
sbb
(bad)
mul
sti
cmp
(bad)
xchg
pop
bnd
or
shl
mov
loop
cdq
call
xchg
mov
mov
or
arpl
lahf
push
cmps
(bad)
arpl
mov
stc
mov
push
lds
pop
scas
lock
fucomp
imul
rol
ret
and
xor
cmp
loop
lea
cdq
(bad)
loopne
adc
in
or
call
fild
lds
cmp
xchg
ds
je
(bad)
(bad)
jmp
xchg
dec
enter
cdq
shr
int
pusha
cmp
inc
(bad)
stc
repnz
xchg
sbb
clc
and
mov
aam
cmc
es
mov
push
(bad)
das
jmp
push
aaa
mov
or
mov
dec
jns
(bad)
not
shl
jl
aam
inc
sbb
mov
or
inc
pop
jp
test
mov
inc
das
sub
loopne
xchg
push
addr16
dec
cld
adc
cs
pop
pop
xor
fistp
cmp
push
mov
cmc
das
xchg
xchg
jl
sub
adc
cs
sahf
int3
xor
in
adc
xor
pusha
out
jmp
cmp
icebp
(bad)
cdq
pop
jg
mov
dec
and
or
mov
cmp
cwde
jge
jg
fistp
cld
jns
push
and
data16
cmp
mov
cmp
sti
das
jbe
cmp
add
(bad)
in
inc
loopne
pop
inc
xchg
repnz
fmul
movs
jb
shl
loop
sbb
sbb
fnsave
dec
sub
imul
rcl
(bad)
adc
cmp
loope
or
sub
fisub
imul
cld
or
jl
ret
aas
(bad)
aam
xlat
out
daa
aam
pop
sbb
lahf
out
mov
xchg
out
rcr
sub
mov
mov
xor
test
jo
retf
repz
add
add
cmc
aaa
rcr
addr16
adc
stc
stos
jl
mov
pop
pop
push
loop
retf
dec
xor
mov
dec
pusha
sbb
int3
enter
cmc
scas
inc
inc
adc
std
mov
js
(bad)
sahf
xchg
pop
mov
fdiv
dec
dec
inc
add
cmp
(bad)
pop
dec
stos
mov
arpl
(bad)
loop
and
push
jns
mov
adc
shl
clc
in
ret
xchg
and
adc
std
movs
fdiv
inc
and
in
mov
ins
and
push
pushf
jge
cmp
imul
xchg
push
imul
mov
fisttp
das
rcl
nop
sub
dec
es
fsubr
or
fcmovb
xor
inc
inc
push
or
xchg
addr16
jmp
pop
repz
clc
out
push
add
sub
nop
lods
fmul
add
xor
aad
sub
lock
dec
loopne
jns
bnd
push
stc
mov
jmp
dec
hlt
dec
fwait
or
icebp
sti
jo
push
stos
jge
jae
mov
jg
inc
xor
jg
mov
and
imul
mov
adc
cli
push
mov
test
bound
clc
imul
scas
retf
in
xor
inc
push
push
fidivr
sbb
cmp
pop
imul
stc
mov
cdq
inc
cmp
sub
and
stos
in
out
xchg
or
jmp
mov
stos
add
test
inc
arpl
mov
jbe
adc
inc
inc
xor
or
sbb
mov
jecxz
(bad)
cmc
mov
in
push
dec
test
(bad)
lock
lods
mov
iret
inc
loopne
shl
fisttp
fild
xchg
and
cs
and
sub
cmp
fcom
xchg
adc
jno
rcl
mov
aaa
cmp
ret
and
test
test
mov
pushw
in
lods
ret
add
xor
mov
sbb
hlt
inc
stos
mov
pop
sti
prefetch
jno
push
call
dec
sbb
shl
add
dec
jmp
retf
jge
and
and
jmp
jns
xor
sub
xchg
xchg
ins
mov
mov
mov
inc
clc
push
jl
push
pop
mov
mov
lods
push
push
or
arpl
mov
cmp
lods
xchg
or
mov
fnstsw
xor
iret
push
or
retf
div
push
test
sbb
inc
pop
add
popf
jne
xlat
or
clc
dec
mov
or
xchg
not
xor
sbb
and
(bad)
in
bound
xlat
nop
cmp
aam
jp
lea
pop
outs
fwait
and
jb
mov
js
std
cmp
jno
mov
pop
sub
cmps
leave
jge
test
fcomip
loope
xchg
mov
call
test
imul
add
in
(bad)
call
mov
sbb
jo
pop
dec
inc
sbb
or
mov
cli
and
add
mov
sub
jl
(bad)
cmp
das
xchg
imul
lods
popa
adc
sbb
push
pop
jmp
test
fcom
(bad)
sub
stc
cli
shl
jle
popa
xchg
xor
or
and
or
xchg
test
cdq
fcmovnbe
imul
imul
movs
or
loopne
xchg
aaa
fs
mov
jle
in
mov
mov
clc
shr
out
xchg
ins
mov
jbe
bound
mov
sub
sbb
jbe
jge
cmps
jae
or
push
cmp
adc
fdiv
cs
loope
sbb
xlat
outs
jecxz
shr
mov
mov
xchg
outs
addr16
int
adc
mov
sbb
xor
test
inc
sub
mov
out
sahf
dec
and
xchg
cmp
mov
lea
fwait
das
xlat
out
xor
jns
gs
cdq
xchg
push
sub
int3
push
les
jno
scas
in
adc
mov
add
cld
lock
es
fwait
and
add
mov
inc
jl
fwait
mov
pop
jnp
int3
inc
dec
les
and
xor
xor
jb
mov
scas
mov
adc
add
push
repnz
test
jmp
sti
iret
pop
rol
(bad)
test
(bad)
push
adc
pop
not
push
sub
push
dec
fwait
jo
in
dec
pop
shl
sbb
int3
mov
xchg
out
inc
ins
add
repnz
cmp
xchg
jge
popf
pop
std
imul
sub
ds
or
out
jno
loopne
mov
push
pop
inc
retf
mov
mov
and
jmp
or
lods
(bad)
xor
pop
stos
es
mov
push
inc
cmc
cs
sbb
add
hlt
mov
in
push
mov
aad
push
or
add
fild
(bad)
clc
adc
dec
jno
popf
dec
pop
mov
dec
mov
aad
sbb
and
pop
aas
inc
lds
stos
sbb
int
scas
dec
ror
sar
js
inc
loope
xchg
test
push
ret
repnz
dec
icebp
sqrtps
or
shl
cdq
jns
in
cmps
js
mov
iret
adc
gs
daa
jg
xor
xchg
inc
and
test
out
jmp
loop
xchg
push
or
test
cmp
mov
in
fwait
das
cmp
call
dec
pushf
mov
retf
test
fs
dec
shr
push
add
fs
pop
outs
aas
mov
ficomp
pop
hlt
neg
jle
push
inc
push
pusha
test
call
dec
movs
sub
leave
loope
fwait
data16
shl
retf
xchg
ja
xchg
imul
es
imul
xor
out
js
pop
push
in
mov
imul
fs
fs
cmp
sti
xor
pop
adc
es
adc
js
pop
mov
test
inc
stc
aad
rol
icebp
or
sbb
loope
repz
dec
mov
xor
js
mov
inc
sbb
enter
cmp
and
adc
adc
das
mov
or
mov
xchg
and
in
jmp
ins
xor
sbb
sbb
inc
mov
stc
sahf
inc
fcomp
test
push
jmp
int
push
leave
sub
dec
cmc
test
dec
imul
adc
pusha
inc
ret
xchg
data16
ins
fist
and
jno
mov
dec
pop
movs
sub
cmp
fsubr
xor
nop
vpmovsxbw
adc
xchg
mov
movs
iret
mov
jle
cmp
push
je
hlt
(bad)
in
sbb
test
sbb
push
mov
push
fldenv
aas
stc
pop
pop
cmp
js
push
push
jno
add
dec
pop
hlt
lods
popf
adc
or
push
or
pop
or
lods
push
test
pop
adc
jbe
aaa
mov
mul
jge
(bad)
jmp
mov
adc
cmps
cdq
mov
inc
jno
jp
xlat
iret
subps
hlt
mov
not
stc
stos
popa
mov
jns
sub
aad
mov
xchg
add
mov
js
xor
lock
rol
add
popa
mov
lods
xchg
pushf
loop
lea
push
jp
loope
loopne
pop
repz
dec
(bad)
and
hlt
rcl
jecxz
or
lea
sbb
icebp
and
sbb
push
stos
out
bound
xor
lds
jmp
xchg
(bad)
gs
mov
adc
call
xor
cmp
mov
sub
movs
mov
cmp
adc
cdq
adc
xchg
ret
xlat
cmp
lock
mov
les
aaa
sahf
jno
pop
outs
mov
ja
leave
pop
pop
outs
call
jne
xchg
xchg
mov
push
adc
push
sub
push
dec
mov
pop
push
pop
stc
mov
call
mov
or
fsub
mov
jmp
push
ss
inc
fwait
inc
(bad)
ror
shl
xchg
pop
pop
cmp
mov
jl
test
lods
mov
or
test
lock
cmps
pusha
movs
ins
mov
and
loopne
int
push
fld
push
lock
out
mov
jne
retf
push
jo
fs
in
and
outs
(bad)
popa
mov
xchg
xchg
jae
es
lahf
test
fbld
xor
fdivrp
icebp
push
cmp
int
mov
pop
add
pop
jno
mov
mov
xchg
cld
push
jecxz
push
cmp
pop
dec
push
aad
add
adc
repnz
scas
repnz
rcr
xchg
psubsb
ins
jns
gs
xchg
add
fdiv
or
leave
push
aam
sub
jge
sub
sbb
aas
mov
loopne
dec
lahf
(bad)
add
mov
outs
(bad)
fidiv
pop
add
stos
addr16
iret
jae
push
mov
adc
stc
out
dec
mov
cmc
add
retf
fs
lea
aaa
cmp
cmc
mov
popf
jnp
ss
cmps
dec
jnp
jl
sub
je
mov
inc
test
leave
(bad)
adc
sub
cwde
sbb
scas
fist
mov
dec
ret
sbb
cmp
xchg
outs
xchg
push
push
in
add
scas
leave
(bad)
push
push
jno
push
sbb
pop
cwde
pop
ins
add
or
leave
fs
aam
add
jecxz
outs
mov
fcomp
loope
dec
mov
pop
xchg
call
pop
pop
mov
mov
not
cmps
mov
mov
fcom
mov
pop
out
xchg
push
and
mov
pop
xchg
dec
cdq
cmp
cwde
imul
pop
fs
push
fistp
jo
dec
adc
daa
cmp
shl
cdq
xchg
repz
push
repnz
dec
sbb
xor
test
loop
fsubr
out
or
jo
mov
dec
mov
dec
(bad)
test
or
repz
fidivr
or
lea
sub
and
cdq
nop
iret
leave
jg
and
dec
iret
nop
pop
jecxz
adc
lahf
call
cs
scas
enter
mov
imul
jl
pop
int3
xor
push
stos
adc
mov
fisub
sbb
add
hlt
and
pusha
loopne
test
stos
adc
mov
outs
adc
out
addr16
xchg
leave
xchg
xchg
adc
xor
aaa
lea
pop
cmp
and
(bad)
dec
cmps
inc
cmp
jmp
bound
stos
and
(bad)
out
jge
stos
sub
sub
sahf
std
test
test
pop
fidiv
dec
mov
test
jns
retf
int
std
mov
movs
stc
pop
inc
adc
imul
sbb
fisttp
jns
stc
inc
pushf
xchg
out
enter
push
push
cmp
add
out
pushf
pop
or
neg
pop
lahf
mov
xor
imul
adc
clc
add
out
pop
dec
xchg
retf
pop
lock
xor
mov
mov
lock
add
rcl
or
stos
sbb
(bad)
mov
push
movs
add
mov
daa
inc
pop
mov
xchg
mov
add
push
ret
adc
sbb
cld
js
sbb
cli
dec
stos
in
adc
pop
mov
add
sbb
push
mov
push
mov
sub
xor
cmp
mov
iret
mov
dec
jo
lahf
push
mov
mov
fs
mov
in
add
xchg
mov
pop
cmps
pop
rcl
cmp
shl
out
xlat
fwait
mov
(bad)
and
jmp
das
jl
(bad)
outs
sbb
push
pop
mov
lea
cli
mov
cld
test
jecxz
bound
das
pop
xchg
lahf
int3
outs
arpl
aaa
mov
and
(bad)
add
nop
and
cmovg
retf
rcr
cwde
adc
outs
dec
(bad)
fmul
call
es
inc
and
adc
lods
and
aam
xchg
mov
out
cmp
jno
xchg
or
retf
xchg
dec
ficomp
rcl
xchg
and
xchg
shl
out
(bad)
imul
xor
sub
sti
push
inc
xlat
in
ss
inc
xor
ds
cwde
nop
es
outs
ss
lods
je
or
ror
scas
in
stos
jecxz
lahf
(bad)
sub
cmp
out
adc
pop
pop
ficom
jae
stos
div
shl
movs
out
push
fcomp
sub
cs
push
push
push
jb
out
cwde
push
shr
push
cmp
pusha
pusha
sbb
adc
repnz
ret
mov
mov
(bad)
cmc
jb
xor
push
lods
push
adc
sbb
inc
bound
call
into
xchg
das
jg
cld
mov
or
mov
push
xchg
mov
xchg
fwait
push
movs
adc
test
jne
pop
mov
shl
shr
cmp
add
jmp
jo
dec
daa
cld
pop
mov
xor
pop
je
outs
lock
and
repnz
jl
or
push
mov
mov
(bad)
sbb
mov
and
ja
cld
jle
(bad)
div
(bad)
mov
arpl
inc
push
sbb
fsubrp
test
lahf
not
mov
out
pusha
loop
sbb
mov
jnp
jle
out
shl
cli
movs
dec
sbb
sub
cmp
push
int
add
gs
mov
cmps
jbe
xor
out
rcl
and
push
cdq
fbld
sahf
inc
sbb
push
add
adc
shl
js
push
icebp
or
lds
xchg
in
push
pop
fistp
retf
cld
sbb
mov
ficomp
cs
adc
dec
ret
movs
in
xor
mov
sbb
pop
inc
popa
out
call
push
xor
dec
fs
sbb
ds
fimul
adc
sbb
mov
lldt
call
imul
push
call
mov
fbstp
or
call
inc
xchg
outs
and
sbb
jns
pushf
xchg
mov
fcomp
jmp
stos
mov
lods
cmps
lds
mov
enter
jne
loopne
cli
and
pop
mov
shl
(bad)
fdivr
test
xchg
loopne
or
or
inc
(bad)
lea
into
or
adc
call
and
push
popa
sbb
mov
sub
je
sbb
aaa
int3
jl
fcomp
push
lds
cmc
pop
mov
sbb
or
icebp
mov
das
xchg
inc
or
cmp
and
ins
push
dec
shr
fldl2e
or
ins
dec
fs
jecxz
pop
xor
imul
lds
xchg
test
xchg
retf
push
ret
ficom
frstor
cmp
push
fdivrp
ret
aam
sub
outs
mov
jno
lock
cmovs
enter
mov
lahf
mov
pop
out
mov
fnstcw
aad
retf
lds
es
mov
fucomp
cmc
cdq
pusha
xchg
out
(bad)
push
mov
mov
movs
test
fsub
in
push
cmp
pop
mov
fst
(bad)
push
pop
ins
add
mov
fwait
dec
and
pop
mov
daa
lahf
fs
mov
cmp
add
mov
das
loop
adc
xchg
in
ins
xor
lock
daa
jl
pop
retf
in
or
aaa
sbb
xor
push
test
mov
inc
cmp
cmp
fwait
inc
cdq
push
dec
push
jmp
xchg
mov
sub
sub
shl
mov
pushf
nop
sti
inc
pop
mov
pop
pop
or
cmps
dec
push
jg
and
aad
dec
jecxz
mov
sub
sbb
mov
xor
mov
test
jne
push
or
and
cmp
jge
inc
and
xchg
(bad)
ret
jne
call
push
mov
add
(bad)
mov
jne
(bad)
sahf
push
xchg
cdq
adc
mov
fucomip
sub
push
pop
lds
mov
enter
lahf
sbb
cld
les
mov
xchg
or
sub
mov
xchg
retf
outs
into
jecxz
fmul
dec
mov
daa
jns
dec
push
push
push
das
xor
adc
pshufw
push
push
dec
hlt
pop
arpl
xchg
rcr
dec
jmp
xchg
inc
mov
dec
inc
fnstenv
mov
imul
loopne
mov
push
xchg
sbb
sub
(bad)
aam
jnp
rcr
scas
jae
lea
aas
pusha
dec
rcr
in
fs
out
fnstsw
fidiv
mov
mov
and
pop
lds
ins
or
retf
out
mov
xchg
jl
dec
jl
aad
outs
inc
aaa
ret
outs
mov
dec
adc
sbb
js
gs
or
cmp
sub
in
xchg
pop
shr
enter
inc
push
pop
mov
rcr
mov
les
or
mov
adc
inc
ja
pop
std
jo
(bad)
jae
xchg
or
pop
rcl
dec
mov
leave
cmp
mov
lahf
out
cli
pop
clc
inc
cmp
outs
pop
hlt
mov
xchg
movs
daa
(bad)
std
stc
rcl
pushf
sbb
inc
mov
jb
cmps
rol
adc
sahf
fldenv
retf
scas
mov
sbb
repz
add
call
je
das
jnp
and
pop
ffree
xor
mov
xchg
les
ins
mov
in
jecxz
js
xchg
out
ret
sub
call
mov
dec
mov
in
inc
les
mov
pop
rcr
inc
add
push
cmp
inc
std
pop
popa
xlat
xchg
dec
cmc
xor
mov
push
and
or
in
pop
push
ret
push
mov
or
ret
adc
jecxz
(bad)
mov
std
lea
mov
movs
xor
ror
add
lock
scas
fdivp
add
and
repz
xchg
mov
add
out
jp
mov
sahf
lds
mov
retfw
popa
dec
inc
jnp
push
mov
add
xchg
(bad)
in
xor
test
test
bound
adc
ss
stc
inc
call
gs
stos
cwde
(bad)
iret
aas
dec
mov
stos
push
pushf
call
mov
aam
cmp
jg
inc
aam
sbb
mov
mov
sbb
ret
test
sbb
shl
fiadd
cmp
jno
or
movs
dec
dec
repnz
scas
imul
cmps
push
mov
sbb
ins
fcom
js
cdq
push
xor
inc
push
scas
xchg
in
stos
jbe
fstp
stc
dec
ins
fcmovne
jne
sub
sbb
idiv
push
adc
sahf
jle
push
lock
fiadd
xchg
mov
shl
(bad)
out
push
dec
push
mov
inc
cmp
and
xor
and
sbb
dec
push
sar
jecxz
jnp
std
je
dec
sbb
mov
xor
mov
outs
ffree
inc
add
push
mov
outs
aam
aas
mov
jmp
dec
cdq
xchg
leave
sar
mov
push
imul
jge
out
or
dec
ins
add
call
inc
jnp
and
inc
in
out
cdq
or
fistp
cmp
test
int
movs
stos
push
rcl
pop
aam
fs
mov
jg
scas
lock
jne
test
pop
mov
pop
mov
cmps
xor
mov
and
js
mov
sqrtps
ffree
cmp
dec
mov
fxch
or
jbe
out
xlat
inc
mov
das
aam
jl
lahf
lahf
pop
ficom
pusha
fisubr
ja
popa
pop
sbb
bound
js
cs
jbe
mov
ins
jmp
popa
fmul
stos
inc
add
gs
mov
or
cmp
adc
sbb
mov
fdivr
dec
push
dec
sub
push
mov
and
jno
mov
xor
mov
ret
mov
movs
and
les
sbb
xor
ss
jecxz
aaa
push
sub
ret
test
xchg
scas
lahf
sbb
lods
push
daa
int
sbb
push
xor
jb
imul
loop
icebp
(bad)
xor
xchg
lods
pop
push
pop
cmp
lods
popa
mov
test
aad
sub
add
idiv
cmp
outs
cwde
dec
jb
movs
popf
cmp
sbb
push
add
sbb
out
jno
pop
jp
inc
stos
and
les
xchg
or
xor
fwait
stos
in
je
xchg
xchg
jmp
outs
add
out
mov
mov
ror
lock
jmp
ins
enter
or
adc
mov
mov
popa
stc
leave
repnz
sbb
(bad)
rol
cdq
mov
mov
sti
jecxz
(bad)
sar
int
jno
and
sub
and
inc
cmp
in
push
and
xchg
push
daa
imul
pop
push
test
jb
or
imul
fidivr
add
aad
xor
push
jae
dec
je
rcl
or
in
jp
jae
inc
fs
adc
sbb
aam
mov
adc
sar
das
fs
add
sub
loop
mov
outs
inc
psubd
imul
mov
pop
push
shr
aas
in
mov
cmps
test
test
push
adc
and
in
jno
push
inc
imul
out
jnp
fcmove
cmc
push
lea
in
sahf
call
mov
ss
and
cmp
stos
dec
pop
outs
in
xchg
retf
lods
je
adc
pop
inc
xchg
jp
int3
into
sahf
pop
inc
mov
push
jae
aam
sub
sub
xchg
fbstp
or
jp
dec
rcr
jae
jnp
loopne
aad
inc
push
pushf
cwde
adc
mov
mov
ret
leave
add
mov
pop
sub
adc
icebp
sub
test
bound
xor
sbb
cmp
pop
fdiv
bnd
imul
popa
sar
pop
in
jbe
stos
ja
out
shl
mov
cmc
(bad)
lods
sub
scas
sub
fwait
sahf
jbe
mov
mov
xchg
cmp
test
(bad)
jecxz
pop
retf
mov
push
popf
fs
test
lahf
out
inc
das
mov
call
ret
inc
push
push
sbb
stc
or
add
(bad)
test
or
jmp
push
mov
mov
add
movs
test
push
lds
call
jno
je
push
jns
sbb
das
pop
push
xchg
(bad)
enter
aaa
xor
scas
mov
adc
loopne
je
push
xchg
xchg
add
sub
in
ds
outs
xor
add
mov
mov
push
sbb
push
sahf
cmp
aad
sub
std
sub
sbb
fldcw
in
out
add
stc
inc
ins
jl
rcr
pop
out
mov
es
jecxz
mov
adc
lds
movs
pop
pop
inc
push
addr16
aas
mov
xor
cmp
ror
outs
rcl
inc
pop
enter
aad
test
xlat
outs
push
mov
pop
mov
ror
pop
or
enter
inc
shr
xchg
jns
xchg
test
or
mov
inc
test
std
sti
jmp
sub
xor
loopne
cld
retf
add
call
adc
test
orps
cs
xor
xchg
cmp
clc
retf
js
mov
inc
xchg
cdq
loope
jecxz
(bad)
(bad)
fwait
sub
xchg
aad
mov
fadd
push
mov
cmps
jg
inc
test
xchg
daa
jg
je
es
pop
movs
imul
xchg
ret
fistp
ins
std
jno
pop
jecxz
jo
fwait
dec
loopne
jbe
adc
push
loopne
sbb
aam
push
fsub
stos
in
xchg
jbe
xor
jbe
stc
sbb
mov
popa
sahf
daa
xor
inc
fwait
out
mov
push
mov
movs
sahf
dec
fld
and
cmp
lods
jl
lahf
fs
sbb
and
push
(bad)
mov
cmp
les
xor
adc
pop
lods
pop
add
nop
sbb
sar
cli
lods
xor
es
(bad)
and
in
mov
clc
ja
push
push
push
xchg
sub
jmp
hlt
adc
mul
mov
add
mov
inc
xchg
mov
sbb
(bad)
mov
add
cmp
add
adc
in
lods
inc
adc
jg
inc
sahf
ss
add
cs
sub
aam
sbb
aas
jge
inc
ja
xor
push
sbb
mov
dec
fucom
cmp
jnp
inc
dec
xor
pop
sub
push
lds
scas
push
(bad)
mov
sub
push
pop
cs
lods
aas
arpl
test
sub
daa
and
cdq
jle
ins
and
adc
jl
sbb
test
fbstp
loope
das
js
xchg
add
bound
push
cmp
or
mov
mov
or
mov
inc
movs
push
out
enter
(bad)
mov
pop
test
(bad)
icebp
dec
push
sbb
add
inc
jecxz
push
push
and
xchg
inc
fsub
fidivr
fnsave
fdiv
pop
fist
push
xlat
pop
jl
dec
aam
add
push
call
mov
mov
movs
cmc
sub
repnz
and
ror
cdq
add
xchg
sahf
or
scas
sar
pushf
pop
xchg
adc
sbb
mov
inc
rcl
push
cmps
add
xlat
jmp
aaa
mov
ret
lods
loope
in
inc
pusha
mov
xor
jle
inc
test
mov
cmp
jge
aad
mov
mov
aam
xchg
loope
dec
and
nop
xor
mov
aam
les
repz
icebp
mov
sahf
sar
outs
lock
aas
sbb
faddp
sbb
xor
imul
sar
mov
push
mov
leave
mov
or
jmp
jle
cmps
xchg
jmp
adc
and
jnp
add
stc
and
cmp
retf
rcr
ret
xchg
and
mov
xor
sahf
add
int3
adc
aas
add
aas
pop
adc
mov
push
inc
idiv
cmp
cmps
sub
and
lods
cmps
push
cmp
jmp
or
imul
mov
mov
aam
imul
lock
mov
cmp
sub
jp
or
push
iret
pop
imul
(bad)
jae
mov
sub
nop
movs
push
arpl
retf
lods
mov
mov
into
sbb
in
clc
mov
mov
mov
repnz
sahf
push
dec
jmp
xchg
pop
mov
in
xchg
movs
jge
scas
sub
lea
xor
nop
adc
xchg
(bad)
sahf
mov
mov
jmp
mov
mov
or
leave
dec
pop
lea
fistp
test
xor
lea
pop
loope
(bad)
out
push
and
mov
adc
(bad)
call
fdiv
pop
inc
jns
mov
xchg
pop
je
dec
cwde
inc
push
icebp
(bad)
xchg
test
rcl
mov
loopne
add
cmps
mov
jmp
add
xlat
arpl
mov
ins
int3
pushf
jle
cs
adc
das
test
cmc
out
push
ja
jg
cmp
add
inc
pop
sub
jnp
lods
int3
loop
sub
jnp
ins
shr
inc
add
xchg
xchg
inc
adc
jmp
popf
mov
dec
xor
inc
hlt
bound
push
nop
lea
xchg
push
sbb
ror
cmp
dec
sbb
add
xor
jb
clc
scas
pop
cld
jl
icebp
sbb
pop
addr16
or
mov
shl
pusha
jbe
sub
retf
rcl
jg
aaa
push
ins
repz
mov
sub
push
ja
jge
mov
popa
ins
out
pop
sub
fcomp
mov
add
xchg
cmp
sub
aaa
add
push
rol
add
mov
rcr
das
mov
sti
daa
(bad)
xchg
fsubr
push
(bad)
lahf
dec
(bad)
push
sar
pop
aas
add
cmps
pusha
jge
jb
stc
and
push
iret
into
sbb
retf
clc
pop
pusha
mov
mov
sbb
cmps
xchg
pop
cmps
iret
xor
cmc
inc
(bad)
and
pop
jb
xchg
jne
xor
test
fwait
add
mov
cwde
add
shl
mov
mov
je
(bad)
sti
loop
push
pop
int3
push
je
in
test
cmps
ret
std
fwait
xor
inc
icebp
js
sub
and
cld
cmp
cmp
fsub
push
sbb
pop
mov
cmp
jp
cmps
mov
test
(bad)
cmp
rcl
mov
jns
dec
and
xchg
aad
sbb
movs
or
arpl
les
mov
sbb
push
sub
dec
iret
xchg
push
add
lea
aas
sub
test
cmp
xlat
leave
ret
mov
inc
(bad)
pop
xchg
jl
push
cs
loopne
jle
scas
loope
je
rcr
push
and
and
cmps
mov
mov
(bad)
mov
jne
icebp
xchg
and
(bad)
adc
cld
sub
fnstenv
in
pop
out
out
push
or
mov
movs
daa
inc
push
aad
pop
aaa
outs
repnz
int
sbb
sbb
add
sbb
add
outs
rcr
push
push
or
mov
push
test
xchg
and
lock
sub
inc
and
pusha
lock
ss
aam
rcr
test
sbb
mov
test
stc
jecxz
fidivr
loope
jnp
mov
add
ror
or
push
push
stos
xchg
cwde
mov
pop
cdq
in
and
cwde
(bad)
adc
xor
aad
out
int
dec
in
retf
xor
adc
lahf
cvtps2pi
aaa
dec
adc
jp
jecxz
pop
idiv
add
jle
das
aad
sbb
pop
mov
xor
test
dec
retf
and
mov
fwait
mov
dec
pop
hlt
mov
mov
inc
mov
fisub
add
cmps
fidivr
push
out
xchg
imul
push
mov
pop
fimul
jl
mov
push
and
fisubr
imul
xor
scas
push
fs
aam
cmp
or
leave
sub
dec
repnz
push
(bad)
in
ret
pop
xor
pop
jmp
in
les
repnz
(bad)
fdiv
fcomp
xchg
add
scas
dec
push
scas
shr
cmp
adc
mov
or
jnp
cwde
mov
jl
push
retf
jecxz
mov
push
xchg
hlt
adc
mov
xor
dec
inc
push
lea
dec
not
sub
imul
stos
adc
scas
cmp
mov
arpl
and
xchg
outs
fsub
shl
pop
sbb
jle
xor
mov
xchg
cwde
or
push
fs
icebp
(bad)
out
push
and
sub
scas
mov
push
jne
cs
inc
or
(bad)
retf
ret
popa
push
cmp
enter
lock
fist
jl
xchg
sar
mov
shl
inc
jmp
xor
cmp
cmp
je
xchg
cwde
(bad)
ins
aam
dec
(bad)
xor
inc
push
jno
xchg
xor
leave
scas
aaa
aad
push
pop
or
push
adc
addr16
adc
enter
jg
in
outs
lods
out
sub
dec
mov
adc
jmp
clc
sbb
out
div
or
xchg
cmp
xchg
scas
lods
imul
cli
loope
test
lds
xchg
gs
pop
add
movs
daa
and
dec
sub
jmp
hlt
or
clc
sar
add
neg
mov
es
das
push
aaa
(bad)
pop
sbb
inc
cmp
fdiv
popf
xor
jle
ret
jb
pop
jg
cmp
popf
jle
pusha
out
pop
sub
xchg
arpl
mov
and
popa
rol
and
rcl
ins
cmp
loopne
into
ficom
mov
sub
push
sub
mov
aad
mov
cmps
xor
in
mov
add
repnz
(bad)
in
jno
popa
clc
pop
in
mov
(bad)
imul
movs
push
lods
pusha
and
retf
fwait
jmp
(bad)
sub
xor
push
mov
or
adc
out
mov
or
xlat
ret
inc
into
or
repnz
add
jmp
sbb
nop
imul
into
xor
add
push
icebp
adc
addr16
(bad)
cli
xlat
ja
xchg
pop
mov
inc
push
xlat
and
mov
sbb
add
sub
ja
jb
das
aaa
and
cmp
jl
mov
aaa
call
hlt
xor
pop
scas
mov
aad
dec
std
je
jbe
loope
mov
pop
or
adc
xor
int3
aaa
push
pushf
add
pop
sub
mov
mov
ins
das
arpl
mov
clc
fsubp
sbb
jno
ins
or
cld
out
cld
pop
adc
inc
push
push
in
idiv
arpl
jb
xchg
ins
sbb
xor
daa
outs
gs
xor
int3
or
iret
(bad)
adc
out
sbb
inc
stc
test
mov
push
repnz
stos
adc
xor
shr
sbb
mov
ror
out
js
cwde
add
loopne
mov
dec
mov
cmp
sub
and
xchg
mov
xor
aas
sub
retf
jmp
rol
add
stos
mov
or
mov
or
and
repz
stos
lds
fcomp
jp
stc
aam
cld
sar
inc
lock
xor
adc
js
int
pop
inc
sub
gs
pushf
mov
adc
jle
int
pusha
push
mov
dec
dec
retf
sbb
stc
adc
repnz
test
ret
cmps
inc
ss
sti
mov
jle
xor
add
mov
jp
push
out
shl
and
sbb
push
cmp
dec
push
mov
retf
sbb
xchg
shl
cmp
pusha
cmc
mov
xor
xor
loope
mov
in
cmp
lock
out
sub
or
movs
sbb
fsubr
mov
push
adc
inc
cs
pop
call
ret
lahf
js
jle
dec
out
ins
or
pop
rcr
dec
aaa
push
xchg
and
xchg
das
shr
fsub
lds
add
cli
xchg
cmp
into
and
cld
xchg
in
and
out
or
push
cmp
xlat
pushf
icebp
rcl
dec
dec
xbegin
hlt
and
arpl
imul
test
pusha
inc
xor
mov
mov
mov
mov
pop
outs
out
sbb
xor
lds
xchg
cwde
push
das
mov
mov
ror
push
call
ins
mov
lahf
movs
gs
ins
and
stos
and
hlt
sub
pop
popf
add
sar
std
scas
xor
rol
cs
(bad)
pop
sbb
jge
sub
fisttp
out
sbb
in
dec
ds
jp
or
or
fisub
js
scas
jmp
lods
sub
cmp
pop
and
imul
lods
loopne
cmc
ins
push
sub
add
shl
jl
xor
and
cwde
imul
(bad)
mov
cld
cmp
pop
mov
loope
jmp
push
sbb
scas
cmp
je
out
leave
cmc
pop
aad
mov
xchg
stos
mul
popf
adc
cmp
xchg
cld
pop
cmp
cmps
and
xor
mov
jmp
jns
mov
cmp
or
jo
jno
lea
fcom
mov
mov
loope
lds
and
cmps
cmp
imul
out
push
xor
std
jge
mov
je
dec
aaa
stos
and
rol
jnp
leave
shr
ins
out
into
add
ret
fs
test
fst
and
rcr
mov
loopne
cmp
sbb
mov
xor
push
jmp
fist
repnz
xchg
stc
je
pop
cld
and
ret
and
cs
cli
and
inc
sub
or
aam
jne
out
outs
sub
xor
add
int
sub
mov
fldcw
sbb
inc
hlt
pop
jnp
cwde
stos
dec
xor
pop
xchg
xlat
jno
jb
push
jmp
adc
inc
push
cdq
sub
fsubr
fwait
xchg
test
sti
std
and
add
pop
lods
mov
jns
jns
add
(bad)
inc
cld
add
scas
retf
inc
lods
mov
stc
push
imul
fistp
sbb
xchg
cmp
fwait
call
jae
inc
imul
(bad)
les
shl
add
and
xchg
mov
loopne
cmc
inc
pusha
cmp
popf
push
fisttp
inc
shl
dec
and
sub
std
cmp
push
and
fstp
or
je
fwait
gs
vprotq
add
leave
outs
xchg
(bad)
push
mov
retf
daa
int
or
xor
cli
xchg
pop
jno
lock
iret
retf
sub
pop
lods
mov
add
mov
cmps
mov
or
(bad)
div
retf
inc
idiv
and
leave
daa
or
sbb
ror
xchg
inc
mov
fs
adc
push
call
aas
hlt
push
sbb
loopne
rcl
jmp
call
push
in
mov
add
push
add
bound
lock
sub
add
and
out
test
(bad)
lods
or
mov
test
leave
add
test
imul
nop
xchg
(bad)
inc
cmp
mov
inc
xor
dec
ror
shl
rol
add
and
rol
out
xchg
jecxz
arpl
jle
inc
push
out
push
xchg
cli
lods
dec
into
mov
loope
sahf
outs
nop
mov
and
int3
mov
or
rcr
ret
lods
sub
out
out
mov
gs
mov
sub
mov
cmp
fcmovnb
addr16
and
int
aaa
push
ins
or
mov
aam
adc
or
in
rcl
xlat
pusha
adc
test
sbb
into
add
jge
lods
sbb
out
or
jb
call
sbb
(bad)
test
mov
push
add
icebp
test
sbb
fstp
pop
sub
into
push
lahf
in
js
adc
mov
xchg
cmp
or
mov
push
shl
adc
pop
stc
imul
js
and
mov
xchg
mov
(bad)
xchg
icebp
bnd
stos
jp
jae
jle
(bad)
xchg
pop
imul
mov
ficomp
sbb
or
or
inc
daa
cmp
mov
mov
xor
(bad)
cli
test
fwait
sub
cmps
mov
sbb
inc
pushf
xchg
cmp
in
pop
scas
xchg
xchg
sub
jmp
mov
pop
xchg
repnz
mov
mov
cmc
jb
mov
inc
(bad)
fcomp
es
cli
inc
(bad)
loop
enter
in
retf
mov
bound
cmps
xchg
cwde
add
aaa
jp
iret
pop
enter
fnstenv
adc
ja
ja
popa
mov
pusha
pinsrw
jae
outs
inc
sbb
sar
adc
mov
push
jge
pop
push
in
pop
test
sub
shr
or
in
sar
aaa
pop
adc
mov
add
pop
inc
outs
cwde
mov
sub
pushf
push
push
inc
dec
lock
movs
movs
pop
xchg
inc
push
xchg
mov
retf
xlat
pop
les
aam
sub
pop
or
stos
dec
push
scas
adc
dec
pop
mov
jge
(bad)
cmp
out
pop
xchg
sub
outs
xchg
in
jle
jno
mov
cmp
enter
push
inc
stos
scas
adc
pop
retf
xchg
imul
mov
fadd
pop
lds
cmps
das
xor
adc
xlat
fdivr
adc
mov
xor
stos
and
and
fsub
out
jle
push
and
fisub
xor
cmp
pusha
cli
or
jns
jp
jb
dec
push
lock
sbb
data16
enter
repnz
jne
xor
(bad)
mov
pop
call
(bad)
cmp
and
mov
mov
push
mov
js
pushf
and
add
adc
xor
test
idiv
in
lea
pushf
aas
add
inc
fidiv
in
mov
ds
xchg
pop
dec
xor
cmps
dec
push
jmp
inc
mov
xchg
mov
sbb
sub
mov
(bad)
mov
clc
jae
jo
aam
sub
xchg
hlt
sbb
add
clc
out
aad
not
push
neg
dec
dec
push
xchg
mov
sbb
js
out
dec
ss
out
sub
mov
jg
jb
pusha
fisub
sbb
ins
mov
jl
or
imul
enter
es
ucomiss
mov
jecxz
test
mov
lock
mov
mov
pop
and
cli
gs
(bad)
fistp
mov
(bad)
push
inc
xchg
cld
inc
shl
cmp
and
add
jge
arpl
sub
sbb
add
mov
dec
and
pusha
mov
lods
mul
sahf
cmps
dec
loopne
retf
mov
aam
test
xchg
dec
test
inc
cmp
sub
mov
pop
in
popf
in
jnp
xchg
adc
adc
xchg
out
push
in
xor
jae
and
(bad)
js
shr
xor
arpl
(bad)
cmc
push
aam
retf
pop
xchg
cdq
or
lahf
test
addr16
cmp
inc
mov
lock
jbe
pop
(bad)
(bad)
fist
cmp
push
push
mov
mov
je
lods
cmp
mov
jmp
xchg
push
pop
fstp
cs
std
mov
pop
sbb
pop
mov
shl
pushf
test
adc
push
pop
pop
or
cmp
lahf
mov
pop
es
mov
or
xchg
rep
call
xchg
inc
push
sub
out
mov
mov
test
mov
in
and
push
jae
clc
mov
pop
lea
push
cdq
inc
mov
pop
scas
and
cmp
ins
adc
mov
inc
and
or
retf
pop
push
push
sbb
inc
or
rcl
aas
daa
pandn
movd
add
pop
xlat
dec
dec
dec
scas
pop
fisttp
or
lock
jb
ret
lock
dec
int
mov
dec
retf
add
add
mov
pop
ds
add
mov
dec
mov
sub
imul
dec
xchg
jne
mov
push
loop
push
sbb
xchg
xor
xor
jo
dec
inc
lods
sub
and
clc
jle
pop
adc
lods
mov
push
cwde
in
das
in
scas
or
icebp
jle
sub
rsm
out
cdq
mov
imul
pop
jg
cmp
and
jp
mov
cmp
jp
cli
dec
mov
(bad)
and
out
mov
ror
push
pop
push
mov
fimul
shl
sbb
pushf
std
pop
fwait
mov
adc
push
inc
je
psubsb
pop
pop
outs
or
nop
sbb
rol
or
cmp
loopne
jp
xor
nop
and
mov
cmp
push
jmp
es
or
adc
or
mov
icebp
xor
pop
sub
sbb
(bad)
cmp
lods
ss
les
in
sub
jns
adc
or
mov
push
mov
stos
(bad)
retf
sbb
and
and
mov
xor
dec
xchg
leave
retf
shl
jecxz
jbe
mov
xchg
stc
loope
popf
ins
add
movs
loop
mov
outs
cli
inc
mov
cmp
xchg
mov
imul
test
test
std
test
and
xor
adc
pop
dec
shl
test
imul
test
or
mov
bnd
imul
rol
in
lds
push
loope
aaa
adc
stos
mov
jle
dec
mov
cmp
sub
cld
ins
and
clc
push
std
sahf
pop
mov
and
sub
stc
add
out
cli
in
sub
add
dec
cmp
inc
xchg
out
mov
jmp
mov
cs
and
mov
mov
or
push
pop
jmp
adc
cwde
cmps
scas
es
stos
push
dec
xchg
mov
mov
pop
add
in
arpl
jmp
dec
pop
ss
mov
push
cdq
sbb
lods
push
fnstsw
(bad)
dec
es
jp
fwait
xchg
jge
cmps
add
int
repz
jnp
push
xor
imul
push
or
mov
icebp
xchg
push
inc
retf
mov
cmp
pop
mov
add
(bad)
test
cmp
xor
(bad)
push
cdq
sbb
sub
hlt
mov
jle
or
sbb
sub
scas
icebp
pop
rcl
popf
jno
leave
jbe
jl
cmps
movs
mov
cmp
(bad)
cmps
jns
clc
popf
test
mov
aaa
frstor
and
std
data16
push
sbb
mov
mov
cmp
adc
int
sub
inc
loop
xchg
sbb
dec
movs
aad
jmp
out
dec
push
(bad)
jge
push
repz
inc
xor
adc
popa
push
cmc
pop
cmp
cmp
add
xor
in
pushf
sbb
enter
push
push
push
inc
aaa
xchg
xor
imul
loope
xor
cmp
repnz
(bad)
mov
cmp
mov
push
jno
dec
sbb
xor
cmp
adc
into
jle
inc
stos
adc
popf
sub
call
push
out
js
mov
movs
mov
xor
dec
push
loop
pop
faddp
(bad)
inc
jo
ret
add
push
mov
loope
inc
ja
mov
dec
sar
jg
cmp
mov
shl
pushf
sbb
sti
(bad)
pop
and
push
jmp
and
mov
dec
lods
cs
push
jmp
and
xchg
notrack
inc
bound
repz
jbe
(bad)
stos
cmc
pop
cmp
js
xchg
sub
xchg
xor
mov
out
(bad)
test
mov
sub
call
inc
addr16
push
and
cmp
push
inc
ror
push
mov
mov
mov
pop
xor
push
fmul
mov
mov
jg
adc
dec
popa
std
adc
and
adc
imul
les
test
aam
sub
ficomp
sbb
leave
cdq
pop
movs
pop
lea
test
adc
aaa
inc
add
pop
les
inc
jle
(bad)
sbb
imul
loop
inc
and
add
inc
mov
sub
call
and
add
nop
in
xor
shl
fcomp
clc
mov
ins
jmp
cmp
rcr
xchg
adc
mov
out
sbb
inc
or
or
outs
mov
xlat
and
sbb
xor
loope
pop
mov
xchg
mov
addr16
inc
stos
sbb
int3
std
imul
sbb
out
stc
push
sub
xor
je
hlt
mov
inc
dec
jecxz
popf
mov
push
dec
in
xor
(bad)
ds
aad
inc
(bad)
and
mov
xchg
mov
inc
cs
add
xchg
test
mov
das
dec
popf
push
add
xor
push
mov
out
ins
mov
xchg
xchg
test
cmp
test
ficomp
(bad)
jne
dec
sub
sysexit
pop
jge
fwait
je
jo
or
xor
dec
test
push
or
or
cld
cmp
ret
dec
cmp
sbb
push
jae
mov
or
fcmovnbe
sti
repz
inc
call
push
test
jmp
cmp
jns
push
mov
pushf
out
fnsave
adc
add
dec
xor
jno
fidivr
ret
(bad)
lea
inc
cli
push
jae
imul
in
test
scas
pop
iret
xor
leave
inc
adc
adc
in
push
rcl
mov
pop
cmp
in
repz
dec
cmps
sub
lods
xor
sbb
hlt
imul
movs
pop
mov
add
pop
outs
icebp
out
shr
mov
aad
dec
jno
xchg
add
dec
or
xor
mov
les
mov
in
add
mul
fisttp
jb
jmp
ins
push
adc
stos
ds
test
xchg
jmp
test
push
push
pop
(bad)
cmp
cmps
imul
mov
addr16
sub
adc
div
out
push
sub
in
xlat
out
jae
pushf
inc
fadd
mov
fwait
jl
cmps
dec
sti
mov
stos
xchg
or
das
pop
lock
(bad)
cs
mov
cmp
imul
mov
dec
les
dec
or
cmp
imul
adc
cmps
jle
in
cmp
push
enter
repz
mov
ins
lds
stc
fcom
jge
cwde
inc
das
push
and
pop
das
fbld
mov
mov
out
mov
mov
fwait
imul
repz
test
js
mov
adc
out
dec
scas
dec
pop
fsub
das
mov
stos
(bad)
pop
mov
jmp
jge
out
mov
push
jecxz
in
(bad)
rcr
cmps
popa
test
pop
add
mov
sbb
sub
push
in
ja
or
sbb
jp
jno
cs
push
(bad)
ret
jl
cmp
outs
jmp
fimul
pop
fnstenv
add
mov
xor
stc
mov
out
xor
xchg
jmp
enter
jbe
outs
aad
call
inc
out
idiv
fistp
(bad)
mov
jmp
or
add
cmp
xor
cdq
shl
fst
shl
addr16
(bad)
add
repz
lods
stos
cld
pop
(bad)
sub
clc
and
mov
sbb
out
sbb
cmp
mov
pop
add
arpl
mov
imul
in
cmp
pushf
sub
in
jae
inc
icebp
(bad)
enter
push
cmps
xor
mov
and
out
(bad)
ds
sbb
add
dec
test
or
cld
pop
not
inc
loopne
pop
lods
xchg
mov
and
stc
fs
sar
mov
xchg
or
mov
fdiv
out
loopne
pop
fdiv
add
sub
icebp
stos
in
iret
lods
sub
dec
pop
and
push
cdq
inc
nop
int
pop
pop
(bad)
clc
sub
retf
shl
xchg
and
push
cdq
add
in
jo
movs
jg
add
mov
xchg
aam
jmp
int3
aad
inc
int
push
or
or
jmp
(bad)
retf
sub
push
mov
test
js
jne
xor
repz
mov
(bad)
(bad)
ds
ds
inc
lock
sbb
enter
popa
and
jns
test
stc
cmc
out
pop
adc
cs
out
inc
cwde
je
scas
sub
mov
adc
out
imul
xchg
stc
(bad)
xchg
ins
mov
jl
xor
fnstenv
mov
repz
call
or
push
adc
adc
ja
fptan
loope
add
xchg
out
ins
in
mov
sub
and
lods
ins
push
retf
push
jmp
leave
inc
mov
jmp
push
xor
sbb
xchg
push
inc
(bad)
jbe
xchg
loopne
std
and
mov
(bad)
pusha
mov
test
nop
loope
pop
mov
jne
lods
aam
or
popa
xchg
call
sahf
fimul
ret
mov
jle
inc
pop
out
mov
inc
test
xchg
mov
bswap
stc
mov
push
loope
xor
movs
repnz
mov
outs
(bad)
jge
mov
sub
cmps
add
sbb
out
in
cmp
sub
dec
add
loopne
jmp
jno
into
loope
fisubr
daa
or
adc
les
ss
out
aam
jbe
push
dec
jecxz
es
cmps
push
imul
inc
inc
dec
sub
in
ja
pop
mov
jmp
fsub
sbb
and
mov
js
dec
adc
int
push
jecxz
(bad)
xor
xor
repnz
imul
icebp
xor
imul
int
and
or
xchg
adc
inc
jg
(bad)
jno
pop
jbe
push
xchg
cmp
retf
out
fs
sahf
jb
pop
mov
adc
jmp
inc
dec
cs
and
jg
xor
cmps
adc
aaa
fisub
stos
sbb
retf
daa
push
xchg
(bad)
and
ds
loope
sbb
mov
inc
cmp
cmp
ins
mov
push
sub
sbb
div
sbb
les
and
clc
push
fldenv
jbe
stc
mov
sub
push
mov
int
cmps
push
popa
(bad)
xor
and
loop
in
xchg
aaa
mov
push
add
ds
add
pop
cdq
int
inc
fnsave
out
mov
cmp
and
jbe
xlat
and
das
fild
call
adc
jbe
fwait
push
pushf
adc
xor
sub
xchg
ins
in
xor
sub
clc
imul
loop
hlt
lock
pop
stos
jnp
fs
push
paddd
ret
xchg
pop
stc
stos
mov
bound
sbb
add
test
nop
dec
cmp
inc
sbb
stc
(bad)
sub
mov
in
retf
add
fstp
jne
add
test
test
mov
mov
fnstsw
mul
leave
sbb
push
jmp
lock
or
xchg
and
xor
ss
stc
test
pop
mov
jl
sti
shl
mov
push
mov
push
xchg
ja
rcl
inc
sub
pop
mov
bound
arpl
adc
inc
inc
dec
xor
leave
or
sbb
cmps
lds
or
jl
dec
sysret
aam
fsubr
push
enter
mov
jbe
push
mov
gs
cmps
clc
bnd
push
inc
out
lock
sub
jne
retf
pop
movs
push
repnz
lods
or
xor
jnp
pop
loopne
xchg
leave
jno
cwde
xchg
mov
lods
inc
jns
lahf
sbb
jb
pop
adc
cdq
mov
enter
loope
leave
jl
xchg
xchg
test
pop
outs
pop
imul
stos
loope
repz
push
outs
mov
push
mov
sub
mov
sbb
inc
adc
dec
sub
pushf
leave
jbe
repnz
scas
hlt
fld
cmps
retf
neg
jae
add
fldcw
xchg
in
fisttp
jb
fs
out
or
push
xor
loopne
adc
dec
popf
out
xor
mov
clc
or
jo
fisubr
mov
add
stos
mov
das
xchg
mov
iret
pop
sbb
shl
mov
leave
fisub
or
xor
xchg
or
xor
xchg
push
push
jbe
push
inc
pop
pushf
inc
cli
lods
inc
xchg
movs
ins
push
int3
(bad)
sub
aas
push
xchg
mov
inc
push
xor
nop
mov
pop
cmp
cmps
ins
fcom
ss
pop
jnp
movs
xchg
jne
sub
fidiv
fsubp
and
or
dec
jmp
xor
clc
push
ds
out
pop
shl
inc
mov
rcl
or
mov
pop
adc
mov
mov
ret
out
push
scas
sub
ins
test
dec
xlat
mov
outs
mov
mov
and
xchg
xchg
sbb
push
pop
mov
fcomp
popa
sub
xchg
jns
fsub
loopne
mov
push
cmp
out
push
mov
(bad)
push
es
rcl
sbb
in
sbb
movs
pushf
mov
mov
outs
add
mov
sub
cmp
xlat
(bad)
xchg
pop
(bad)
jg
push
sti
mov
jmp
and
pop
inc
inc
(bad)
bound
arpl
pop
cwde
(bad)
loopne
and
mov
xchg
fisub
hlt
mov
outs
mov
mov
ret
push
leave
scas
push
aas
sub
mov
sub
dec
out
dec
xchg
jnp
dec
push
cmp
retf
rcl
scas
add
adc
mov
pop
enter
push
xor
pop
inc
xor
dec
(bad)
adc
add
js
mov
xor
push
inc
fsubr
mov
iret
xor
call
sahf
fs
xchg
xchg
cwde
mov
enter
pop
mov
xor
fst
loope
aas
cs
arpl
jl
and
mov
lods
pop
cmp
sub
fdivr
or
xor
ins
fsub
fldcw
je
cli
cmp
dec
inc
jp
loopne
out
cdq
jecxz
adc
ins
shl
jne
sub
jno
push
rcl
fisttp
ins
retf
mov
ins
push
cmps
mov
jp
repnz
and
mov
es
xchg
cli
imul
push
push
jae
xor
dec
ins
lea
das
aas
adc
push
xchg
leave
push
cdq
mov
mov
out
push
fadd
sahf
sbb
inc
and
sbb
push
stc
push
out
add
pop
fdiv
mov
dec
ja
enter
add
inc
jae
js
and
or
imul
retf
sbb
arpl
out
fsubr
sub
push
push
fnstcw
pop
mov
mov
dec
in
pop
enter
cwde
jge
mov
out
sbb
imul
mov
cs
loope
movs
ret
and
adc
daa
xchg
xchg
inc
sbb
push
cli
ret
sbb
pop
mov
mov
add
add
inc
inc
pushf
sbb
xor
jnp
dec
cmp
sbb
ja
mov
pop
mov
test
and
push
mov
xor
lea
shl
scas
cmps
xchg
mov
enter
or
dec
dec
and
frstor
push
aaa
pop
cli
jl
in
jnp
jmp
push
sbb
jmp
into
scas
pop
add
sbb
xor
push
je
retf
repz
sbb
push
mov
cmc
xor
pop
shr
mov
add
inc
cmp
mov
add
mov
sub
rcl
ins
ja
adc
out
jns
movs
ins
push
lds
loop
jns
jl
mov
mov
dec
sbb
xor
xor
rol
rcr
inc
ss
test
add
(bad)
test
sbb
mov
mov
shl
mov
nop
ffreep
push
jge
mov
pusha
daa
or
adc
cmp
jmp
jl
scas
dec
or
or
inc
sbb
adc
pop
cmps
pusha
jae
int3
out
mov
iret
iret
jmp
stos
pop
xor
int3
or
stc
cmp
inc
dec
xor
mov
jmp
gs
add
adc
inc
push
ja
rcr
mov
or
mov
pop
sbb
in
or
iret
mov
and
add
xlat
dec
and
cmc
inc
out
cwde
bound
push
fimul
sbb
push
inc
in
dec
jp
jmp
adc
es
mov
addr16
mov
add
repnz
mov
push
ret
std
call
add
(bad)
(bad)
pop
or
or
sahf
pop
cdq
adc
or
outs
dec
push
xchg
iret
pop
mov
das
out
mov
pop
mov
push
cwde
dec
fisub
jmp
repz
mul
cmp
int
in
add
xor
repz
adc
pmulhw
sub
mov
mov
pusha
das
jb
mov
fwait
sbb
add
cwde
mov
aad
pop
inc
scas
mov
mov
push
xor
(bad)
sbb
inc
jae
std
lahf
pop
or
enter
sbb
cwde
cmp
lea
or
clc
jmp
fcmovnbe
in
or
mov
jg
movsx
jne
sbb
inc
mov
mov
mov
push
jo
mov
mov
(bad)
jae
jl
dec
dec
rcl
hlt
cs
push
xor
or
push
mov
adc
arpl
mov
and
mov
(bad)
jge
(bad)
adc
movs
(bad)
push
mov
mov
jle
ret
movs
mov
mov
cmp
or
jp
dec
sbb
sahf
leave
xchg
cmps
add
sahf
cmps
test
pusha
popf
lds
loop
adc
aad
sbb
mov
inc
fs
mov
int3
int3
inc
adc
jl
outs
shr
mov
jne
or
lods
jle
add
dec
icebp
je
test
add
cmp
sub
cli
adc
pushf
sahf
sbb
lahf
retf
xchg
rcl
dec
(bad)
jno
jae
sub
adc
sub
ret
xor
bound
xchg
add
push
xchg
mov
jnp
imul
jno
dec
mov
ins
add
dec
sti
inc
div
out
sub
bnd
mov
mov
adc
or
in
push
jno
push
sbb
adc
mov
shl
sar
mov
out
inc
or
mov
jns
aad
adc
xor
mov
leave
add
(bad)
or
mov
xchg
pop
(bad)
jecxz
add
ins
shl
inc
test
pop
aad
dec
clc
ja
mov
or
(bad)
addr16
cs
push
cmp
aam
mov
stos
xchg
icebp
pushf
int
push
push
mov
pop
in
pushf
fild
or
sub
inc
(bad)
test
mov
popf
push
push
xor
jno
and
movaps
(bad)
add
pop
mov
jmp
int3
movs
mov
call
pop
xchg
mov
mov
fstp
data16
add
(bad)
mov
int
dec
sub
pushf
into
mov
dec
test
sub
and
jo
shr
jnp
mov
push
or
adc
xchg
cs
inc
fstp
cld
loop
pop
inc
repz
add
jbe
push
sbb
cwde
dec
pusha
cmp
pop
push
and
mov
and
cmp
dec
add
fdiv
arpl
mov
sti
call
retf
sub
mov
mov
jae
je
pushf
dec
inc
ja
cmp
icebp
adc
xchg
adc
loop
pop
mov
pop
jno
ret
shl
stos
test
js
movs
ror
inc
out
mov
inc
cwde
jbe
pop
mov
sub
out
cld
fs
pop
fsub
pusha
nop
push
dec
into
cld
loop
lock
test
js
loop
sub
jae
into
xchg
dec
dec
rol
xor
loopne
out
pusha
out
push
retf
jae
mov
fiadd
aad
xchg
mov
mov
push
adc
xlat
mov
loopne
iret
ja
mov
or
jne
pop
mov
pop
mov
retf
sahf
fmul
or
add
out
(bad)
mov
push
push
mov
cmp
add
ror
pop
jl
inc
sbb
inc
test
adc
and
pusha
addr16
sub
push
jnp
loope
(bad)
cli
cmp
sbb
mov
jae
mov
retf
out
dec
push
daa
inc
cmp
add
pop
sub
xor
dec
lds
in
hlt
sub
jae
sbb
mov
gs
add
popf
sbb
nop
adc
cmps
(bad)
mov
mov
xor
add
addr16
shl
xor
or
test
aam
rcl
imul
xlat
bnd
push
int
sahf
add
sub
add
sub
pop
dec
loop
push
or
pop
xchg
or
mov
inc
mov
dec
daa
sub
outs
ficom
sub
sbb
inc
icebp
cmp
add
cmp
jge
adc
fimul
pusha
push
rol
inc
mov
add
aaa
and
pusha
or
std
das
popa
daa
mov
mov
ret
xchg
shl
enter
xchg
push
mov
das
xchg
pop
shr
sub
inc
add
mov
inc
dec
xchg
mov
push
(bad)
jmp
in
sub
ds
popf
dec
nop
xchg
(bad)
mov
push
xchg
(bad)
mov
in
jmp
stos
repz
sbb
and
inc
mov
inc
fild
adc
icebp
cmp
jo
movs
movs
dec
and
sub
xchg
fdiv
fstp
push
aam
sbb
cdq
push
pop
cmp
and
pop
xchg
addr16
sub
and
dec
lock
dec
shr
(bad)
mov
cmc
and
xlat
mov
adc
or
aam
push
jg
stc
sti
jle
inc
pop
sar
jge
cwde
cld
adc
sub
xor
dec
mov
inc
pop
add
xchg
repz
pop
xor
movs
retf
stos
jge
jecxz
icebp
adc
mov
sub
aad
in
(bad)
sbb
sub
mov
jl
ins
pop
cld
hlt
cmp
fidivr
push
fnstsw
fnsetpm(287
stc
ss
mov
sahf
popa
jnp
arpl
lds
adc
dec
sub
icebp
(bad)
sar
push
pusha
xchg
lock
movs
dec
jo
dec
ss
xchg
xchg
pop
jno
jns
cmp
es
nop
xlat
xor
and
nop
nop
iret
cmp
sub
scas
dec
imul
mov
or
xchg
inc
adc
or
dec
movs
xor
pop
in
cld
push
and
jmp
sub
cwde
pop
fld
mov
sbb
rcl
add
call
rcl
inc
je
xchg
jne
xchg
ds
outs
dec
mov
cwde
and
sahf
ror
loope
loope
push
push
xchg
inc
dec
adc
mov
(bad)
jge
and
test
sbb
(bad)
(bad)
and
cwde
gs
rcl
jg
fnstenv
lea
jns
lods
scas
sbb
push
aas
(bad)
jg
fidiv
(bad)
repnz
push
mov
sbb
jp
retf
mov
ja
jnp
add
push
mov
sbb
push
xchg
sar
cmp
xchg
sbb
jae
pop
fistp
pop
push
inc
and
inc
jnp
test
lods
mov
lahf
adc
outs
sar
outs
pop
nop
pusha
mov
adc
xor
int3
ins
jns
outs
iret
push
popa
or
pop
pop
or
mov
sar
popa
pop
jno
mov
mov
enter
mov
call
cmp
in
iret
iret
adc
dec
adc
movs
mul
mov
pusha
sub
mov
popa
add
mov
sub
jp
cmp
add
imul
retf
shr
inc
mov
popa
dec
lds
scas
(bad)
adc
fwait
push
mov
ss
leave
push
xchg
cmc
add
ins
sub
or
xlat
das
repz
jecxz
inc
shr
mov
cmp
and
inc
cmp
outs
jp
lock
and
ja
jge
and
repz
stos
scas
adc
ins
push
rcl
out
aaa
out
(bad)
xchg
stos
sub
pop
retf
ror
cmps
in
cmps
inc
les
sub
xor
dec
mov
lods
or
mov
aad
mov
into
cmp
dec
inc
adc
sub
inc
fiadd
dec
mov
push
retf
or
rcr
add
bound
les
xchg
cli
popa
mov
dec
jge
xor
sub
std
xor
repz
cmp
ret
or
retf
dec
sub
(bad)
lock
jg
daa
sbb
xchg
adc
inc
out
jno
sar
sub
mov
dec
push
jo
imul
cmp
imul
dec
add
in
sub
xor
invlpg
mov
sbb
and
dec
lock
sar
shl
mov
(bad)
sub
dec
sub
jg
xchg
adc
or
outs
pop
sbb
sub
aaa
push
inc
mov
or
mov
cmp
inc
xlat
bound
cdq
sbb
and
call
adc
in
sbb
cmc
push
push
loop
mov
xor
test
jg
jmp
cmp
imul
jnp
cmp
pop
xor
jmp
or
mov
out
or
sahf
mov
rol
ds
add
(bad)
pop
cdq
les
cmp
or
mov
ins
std
jge
or
jb
imul
packsswb
(bad)
(bad)
sbb
mov
add
xor
test
stc
lea
sub
mov
repnz
add
(bad)
clc
pop
or
fiadd
int3
push
cld
fs
mov
cmps
pop
cmp
sub
push
pop
pop
icebp
loopne
stos
mov
in
aas
fst
ds
mov
imul
fcmovnb
mov
mov
iret
sti
cdq
das
ficomp
rcl
sub
mov
ds
cli
cmp
aas
sub
mov
lock
push
sbb
sbb
fcmovu
mov
pop
popf
stc
cmp
lds
push
ficom
lea
fadd
mov
push
hlt
pop
jmp
add
(bad)
pusha
and
mov
push
cmp
xchg
inc
in
pop
in
jnp
xor
jbe
xor
test
xchg
cdq
ds
sub
push
in
icebp
jne
jge
fisub
sub
mov
adc
out
mov
xor
inc
dec
fisttp
psubq
dec
adc
jmp
and
cdq
cs
clc
and
mov
adc
add
push
leave
or
mov
adc
mov
xor
jp
movs
hlt
xchg
and
pop
push
gs
ret
jle
enter
cmp
aad
pop
mov
mov
movs
or
or
(bad)
popa
fild
test
xor
out
mov
jb
or
mov
ds
jo
fnsave
cmp
dec
les
xchg
lar
jns
mov
dec
xor
xchg
adc
stos
push
pop
les
and
pop
adc
out
mov
add
dec
loopne
retf
fiadd
mov
jl
js
or
adc
add
scas
fdivr
iret
inc
xchg
add
push
cli
sar
push
fwait
ss
test
or
lahf
sub
or
imul
jmp
(bad)
or
mov
sub
addr16
jl
jns
sbb
add
xor
data16
mov
into
jecxz
mov
sti
and
shl
cdq
ja
jne
outs
sub
push
dec
jp
es
in
mov
cmp
lods
(bad)
nop
or
lahf
fild
out
cmps
sti
dec
pushf
jp
(bad)
shl
stos
iret
jmp
add
jae
cmp
dec
mov
cli
dec
mov
in
and
frstor
pop
jg
jo
xchg
xchg
lods
adc
dec
outs
xchg
inc
jg
jmp
sbb
es
iret
fwait
mov
xchg
adc
fcom
mov
or
int
sar
loopne
sub
loopne
sbb
leave
xchg
mov
mov
adc
mov
xor
fwait
sbb
stc
pop
mov
scas
dec
clc
arpl
pop
cwde
adc
ja
jo
mov
mov
js
mov
lock
inc
jne
mov
shl
cld
aam
jo
mov
jns
mov
(bad)
stos
sbb
stos
sbb
jno
dec
sbb
mov
push
test
mov
out
stc
xor
scas
sar
jmp
sti
inc
lahf
scas
sahf
mov
and
mov
call
adc
arpl
clc
int
and
out
and
mov
fisub
inc
mov
shr
adc
cmp
jbe
test
push
sub
or
sar
dec
jns
mov
es
inc
xchg
xchg
pusha
inc
arpl
ror
fist
repnz
xchg
or
fst
or
arpl
outs
das
sbb
push
add
mov
ror
mov
hlt
add
xlat
or
xchg
dec
test
inc
mov
nop
add
push
sbb
mov
push
cmp
and
es
inc
out
or
fsub
je
and
mov
lds
inc
pop
jl
imul
lahf
loopne
mov
js
xor
push
inc
add
push
in
cmp
sbb
dec
sub
sub
lock
pop
pop
fld
dec
into
in
push
call
sub
adc
sbb
shl
add
outs
push
mov
shr
call
mov
ss
js
mov
push
xchg
int
cmp
cld
call
cmps
sbb
pop
mov
xor
movs
pop
jmp
inc
cmp
sub
idiv
nop
pop
cs
int
push
inc
xor
cmp
sar
cmp
shl
call
(bad)
into
test
call
pop
test
xchg
mov
inc
ss
push
xchg
cmp
aas
cld
sub
les
int
outs
mov
xor
push
mov
jbe
aaa
cld
xor
ret
xor
in
clc
pop
and
dec
cmp
aaa
sbb
je
rcr
into
inc
popa
scas
pushf
pop
mov
mov
addr16
mov
mov
popa
test
push
ss
bound
dec
pop
fwait
or
jl
pop
jo
dec
jl
out
xchg
xchg
jo
(bad)
ins
inc
int
fst
bound
cs
dec
leave
ret
sbb
std
daa
shl
into
ins
push
retf
inc
int
js
(bad)
push
and
push
nop
mov
jg
mov
pop
add
mov
xchg
femms
or
lods
loopne
inc
xor
jge
jge
pop
jmp
cmp
adc
add
lods
mov
(bad)
xchg
cmp
test
adc
mov
pop
nop
xchg
mov
rol
jno
fldenv
jg
push
mov
jmp
call
retf
mov
out
retf
mov
(bad)
sbb
mov
xchg
mov
hlt
push
mov
in
pop
xchg
jmp
jmp
or
mov
jecxz
sti
xor
cs
arpl
retf
pop
pop
das
add
inc
jg
ss
cmp
and
ror
ins
ret
pop
pop
jle
sbb
mov
ins
pop
adc
stos
test
sub
clc
xchg
ficom
movs
add
cmps
pop
adc
add
hlt
in
push
xchg
inc
popa
inc
adc
xchg
es
out
mov
jle
bnd
jl
jmp
xchg
xor
inc
mov
xor
dec
std
ins
or
adc
fwait
mov
push
fs
cli
mov
jecxz
ror
mov
(bad)
xchg
jne
outs
inc
mov
ret
dec
jge
mov
dec
push
imul
xchg
add
cmp
out
push
nop
pusha
cmp
sbb
icebp
aam
dec
and
xlat
jmp
in
dec
xor
push
cmc
add
sub
jmp
test
addr16
cmp
lods
cmp
mov
popa
hlt
xchg
and
repnz
add
rcl
pop
jl
mul
and
aas
and
outs
fcmovu
ins
loope
mov
out
bound
into
jecxz
or
xchg
in
jmp
cmc
pop
cmp
aam
ss
in
dec
retf
fisubr
jo
pop
mov
mov
in
mov
jge
dec
mov
pop
addr16
push
iret
fdiv
cwde
cmp
inc
cmovne
retf
fistp
shl
fild
nop
mov
scas
cmc
jmp
and
imul
xlat
(bad)
pop
ror
adc
sub
mov
and
pop
mov
stos
ds
scas
lods
cwde
jb
xor
pushf
push
cmp
idiv
mov
push
sub
test
mov
sub
sbb
loopne
mov
out
ja
mov
cmp
xchg
cmp
push
retf
cdq
xchg
pop
push
test
mov
cli
out
push
rcl
add
push
iret
stos
call
sti
enter
(bad)
mov
call
cdq
pusha
cmp
into
outs
outs
adc
jbe
adc
dec
mov
sub
inc
shl
js
dec
dec
xchg
stos
jp
clc
jnp
pop
mov
scas
cli
adc
jg
inc
pop
or
jmp
sahf
rcl
cmp
test
les
xor
jae
ins
xchg
lds
mov
int
and
adc
rcl
cmp
inc
(bad)
into
js
(bad)
rcr
dec
lds
ret
je
xchg
jnp
lods
dec
cs
dec
in
push
mov
push
and
inc
ins
jb
popf
push
dec
out
add
mov
pop
out
idiv
aam
dec
xchg
mov
cmp
dec
pop
(bad)
(bad)
retf
sbb
jnp
frstor
test
inc
int3
xor
mov
push
sbb
(bad)
xchg
mov
mov
mov
ja
inc
cdq
mov
ins
sti
push
push
adc
push
outs
cmp
pop
jmp
xchg
sbb
lahf
jp
xor
mov
jno
push
adc
bsr
mov
fldenv
jbe
or
dec
mov
push
add
sub
aaa
inc
mov
outs
fs
lock
std
cmp
and
repnz
mov
sub
xchg
cmp
loop
pop
call
sbb
mov
mov
stos
xchg
adc
sbb
mov
pop
stos
xchg
and
jp
stos
cli
add
cmps
inc
adc
mov
nop
out
rep
movs
mov
shr
add
rcr
pop
scas
mov
rol
mov
in
xor
or
inc
xchg
jmp
in
or
pop
xor
xlat
nop
imul
leave
push
pop
add
leave
mov
repz
pop
es
push
call
test
or
and
retf
call
fist
pop
xor
xor
sub
xor
das
scas
mov
test
clc
or
ficomp
out
ja
push
loope
lahf
push
xor
clc
inc
fs
sbb
or
sbb
retf
inc
adc
sub
jnp
dec
pusha
xchg
push
or
stos
xor
fs
sahf
add
sub
popa
gs
mov
cmp
in
xchg
dec
cmc
movs
fsubrp
stc
scas
cs
rol
dec
test
imul
xor
cwde
fiadd
ins
pop
lahf
jne
clc
dec
mov
mov
in
enter
lods
xchg
loop
adc
lods
mov
call
cmps
out
sbb
adc
push
je
arpl
sub
jo
fiadd
push
enter
cmp
loop
inc
and
leave
popf
popa
push
shr
test
ret
pop
mov
es
outs
inc
xor
add
sbb
dec
xchg
test
lahf
sub
inc
mov
sti
xchg
fidivr
mov
push
and
loopne
lock
jnp
cld
loope
cs
mov
cld
mov
dec
ss
idiv
pop
adc
int
pusha
test
and
mov
cli
ins
inc
cmp
push
hlt
lea
es
mov
loope
(bad)
arpl
inc
ret
pop
(bad)
or
js
jle
es
inc
and
pop
or
lock
jnp
test
ins
add
add
xlat
mov
xor
add
js
jae
sub
xor
mov
add
mov
push
leave
add
xchg
lds
fisub
pop
lods
mov
out
fcom
test
fs
pop
in
repz
push
inc
gs
sub
aad
fdiv
and
push
call
dec
mov
inc
out
shl
push
test
mov
hlt
loop
mov
pop
mov
rol
(bad)
call
sub
test
pop
dec
fcos
outs
xor
adc
jmp
push
mov
(bad)
test
test
xchg
mov
inc
cld
in
and
lods
(bad)
icebp
aam
(bad)
inc
fs
adc
mov
mov
sti
pop
mov
or
pop
dec
es
inc
add
pop
dec
pop
jl
add
mov
jne
cs
pop
cmp
pop
iret
out
pop
daa
fistp
out
inc
fidiv
fbstp
jae
aaa
ror
push
pop
les
fsub
cdq
sub
ret
mov
mov
cli
vmovaps
cwde
push
xchg
mov
pop
enter
mov
mov
shl
jne
push
adc
je
test
test
push
cmps
xchg
jnp
rol
push
dec
inc
and
cli
add
cmps
imul
repz
dec
mov
sbb
and
rcl
dec
inc
je
xchg
fbld
call
cwde
add
aad
fwait
push
sbb
aam
dec
mov
outs
mov
out
into
pop
add
scas
dec
xchg
shl
jecxz
ret
repz
neg
push
inc
leave
jb
or
daa
jae
mov
adc
movs
mov
adc
xlat
stos
out
js
xor
add
ss
inc
mov
mov
test
push
push
mov
mov
dec
add
aam
dec
psrlw
inc
call
sbb
iret
and
stc
or
add
cli
das
pop
retf
sbb
and
nop
ins
jne
lea
mov
les
fstp
fisubr
push
pop
pop
pop
mov
jnp
outs
fnstenv
mov
jae
push
lock
aad
fisub
add
mov
mov
dec
inc
push
mov
add
pop
(bad)
cmp
sub
not
(bad)
inc
ins
shr
loopne
pop
mov
aad
adc
fstp
pop
add
repz
pop
popa
outs
add
xor
inc
movs
xor
shl
in
xchg
sbb
xchg
mov
dec
push
inc
scas
adc
fs
outs
cld
xchg
es
pop
ins
and
pop
jp
cmp
fcom
test
call
cdq
push
and
inc
popf
and
sub
xchg
add
xor
cld
jbe
ret
cmp
or
adc
xchg
scas
es
sbb
call
icebp
xchg
add
rcr
cli
call
in
addr16
fstp
fiadd
dec
popf
retf
mov
out
cwde
xor
ins
rcl
jp
mov
fstp
add
mov
and
sub
retf
push
data16
repz
cmp
mov
add
push
pop
cmp
xor
mov
xor
pusha
xchg
lea
(bad)
in
xor
outs
aam
push
sbb
test
jle
jmp
inc
std
lea
ins
add
mov
push
cli
or
daa
jnp
call
(bad)
xchg
test
sbb
mov
xor
mul
mov
and
ss
xchg
shl
div
adc
pop
enter
out
or
jecxz
call
jns
scas
xchg
repnz
ja
push
js
cmps
xchg
sbb
cmps
xor
mov
lods
cdq
jns
shr
add
jmp
and
mov
emms
sub
xor
mov
cld
xor
push
ret
test
loope
outs
push
shl
in
cld
adc
cld
xchg
xor
xchg
and
mov
loope
sub
ins
fsub
dec
fsub
jo
add
ss
mov
(bad)
clc
ret
push
jbe
lea
jo
arpl
adc
shr
fsubr
enter
mov
iret
out
xchg
push
and
movs
dec
sbb
sbb
outs
aas
imul
adc
cmp
sub
jae
sub
dec
sub
stos
stc
add
inc
retf
lods
push
fdivr
aam
repz
jo
and
lods
arpl
fyl2xp1
dec
or
or
pop
jmp
dec
or
out
sbb
or
hlt
add
mov
stc
add
sar
mov
xor
mov
ret
and
rcr
scas
aad
mov
pop
pop
dec
jno
and
or
mov
dec
mov
inc
dec
sub
add
retf
fdiv
mov
adc
and
jns
sub
push
(bad)
or
cld
movs
sbb
jg
push
xor
bound
or
addr16
std
jno
in
jnp
dec
pusha
mov
sub
cmps
out
push
out
add
pop
xchg
jmp
xor
mov
es
add
or
pusha
cmc
mov
dec
mov
addr16
jno
xor
rcr
inc
stos
test
sub
imul
cld
fisub
je
icebp
out
add
fwait
jecxz
adc
aaa
clc
mov
stc
sub
data16
test
mov
inc
adc
push
in
fiadd
imul
(bad)
xchg
jno
loopne
cli
cmps
push
xchg
arpl
test
jge
iret
mov
xor
jecxz
sub
push
lea
jno
mov
and
adc
jbe
jmp
in
push
and
add
pop
movs
mov
fbstp
mov
fld
(bad)
mov
in
out
mov
sub
nop
or
pop
imul
lds
aam
push
mov
jns
push
adc
in
call
imul
inc
or
jae
loopne
or
fdiv
lock
push
jmp
(bad)
cmp
sbb
jmp
xchg
mov
cs
ret
ret
cld
lock
cmps
push
repnz
repnz
pop
sahf
xchg
sbb
iret
out
adc
ins
iret
in
sub
dec
int
cwde
rcr
adc
add
mov
stos
daa
xchg
mov
push
dec
sub
mov
or
(bad)
movs
dec
adc
sbb
and
add
daa
jecxz
xchg
pop
push
or
fwait
adc
loope
ins
(bad)
imul
movs
inc
mov
jbe
inc
sub
mov
mov
and
push
dec
sbb
pop
or
test
cmp
add
cmp
push
dec
or
mov
xor
push
fmul
push
jae
dec
jle
movs
scas
dec
(bad)
mov
fnsave
mov
mov
out
sub
push
push
ret
enter
dec
stos
jb
(bad)
hlt
pop
sbb
scas
lock
in
lock
mov
mov
pop
jbe
ds
cmc
xor
xchg
popa
cmps
cmp
push
mov
movs
cmp
mov
mov
and
mov
test
cmps
(bad)
outs
cld
xchg
or
add
pop
dec
aaa
pop
xchg
add
pop
out
rcl
inc
mov
jnp
ret
xchg
fistp
adc
push
int3
out
call
push
mov
jo
mov
ret
arpl
xchg
(bad)
call
fdivr
call
inc
dec
fs
cmc
shl
jb
add
in
push
add
aad
mov
frstor
sub
dec
fdiv
dec
int3
mov
es
ss
rcl
jmp
(bad)
jmp
ret
in
push
jo
cmp
pop
jmp
popf
mov
dec
cli
mov
mov
ror
ret
or
inc
inc
lds
mov
sub
push
sbb
add
lods
lods
cmc
mov
hlt
daa
sbb
repz
inc
pop
jle
daa
(bad)
jle
mov
jecxz
pop
jnp
retf
pop
add
sbb
call
dec
out
icebp
pop
sbb
mov
mov
xor
rol
or
jp
test
sbb
ins
cmps
shl
imul
hlt
cmc
pusha
ds
xor
or
sub
dec
sbb
and
dec
pop
add
repz
pop
dec
(bad)
jp
pop
sbb
out
cmps
jmp
jmp
sub
(bad)
jge
retf
mov
cmp
sub
test
jnp
push
and
mov
ret
cmps
jmp
jg
neg
xor
(bad)
sbb
mov
test
dec
aaa
sti
xchg
sbb
or
call
adc
mov
stc
inc
xchg
push
push
mov
lds
lahf
mov
outs
(bad)
popf
fsub
imul
and
jns
scas
cwde
pop
jno
shl
push
cmp
sub
adc
fld
sahf
arpl
mov
aam
(bad)
jb
cmps
xchg
or
retf
and
cvtps2pd
inc
mov
sub
inc
or
outs
dec
adc
add
mov
cmc
imul
repz
out
scas
data16
shl
loope
sti
pop
dec
cmp
push
jno
jg
cmp
scas
adc
mov
(bad)
push
stos
mov
retf
ret
adc
mov
lahf
mov
je
lea
sub
out
adc
fild
out
xchg
jg
mov
add
nop
mov
push
daa
inc
pop
aam
mov
jmp
adc
aad
fxch
rol
or
fidiv
jne
(bad)
mov
ret
sub
es
das
addr16
(bad)
fisttp
xchg
fisub
mov
fistp
(bad)
ins
and
icebp
es
jne
fistp
pop
mov
mov
mov
pop
shl
movs
xor
cmp
cwde
movs
dec
rol
add
ror
jae
ds
(bad)
mov
scas
bound
push
imul
xlat
push
xor
sbb
(bad)
loopne
(bad)
js
inc
adc
outs
(bad)
xchg
xor
les
inc
xor
fisub
cmp
jle
push
pop
jge
int
test
jne
(bad)
cmp
mov
push
mov
add
mov
mov
push
and
sbb
push
(bad)
test
sub
ret
pop
adc
dec
xchg
fnsave
not
jge
repz
xchg
adc
inc
outs
adc
xchg
iret
inc
cli
sub
xchg
mov
imul
sbb
loopne
sbb
mov
lds
shl
imul
rol
ins
imul
push
mov
xchg
lds
cmp
push
int3
cmp
push
adc
mov
das
dec
js
add
pop
icebp
retf
push
jecxz
adc
out
dec
mov
icebp
pop
jp
xchg
stos
push
jo
or
addr16
bound
in
inc
jb
mov
add
cmp
in
mov
push
mov
and
daa
sbb
push
retf
inc
(bad)
xchg
xchg
cmp
test
fiadd
movs
(bad)
or
jns
adc
shr
add
stos
outs
shl
xchg
jp
cmp
jp
sbb
xor
and
nop
push
jmp
pop
or
add
inc
jl
daa
das
xlat
mov
xor
es
les
test
lods
(bad)
test
inc
in
cdq
jbe
xchg
mov
nop
shr
mov
or
arpl
add
cmp
adc
int3
fistp
xchg
or
adc
sbb
ins
sub
clc
mov
sbb
sbb
les
clc
add
mov
ror
mov
adc
jbe
sub
loopne
fldlg2
adc
xchg
mov
cmp
xchg
jge
sbb
adc
cdq
xor
mov
ins
out
xor
pusha
in
gs
retf
movs
push
xchg
clc
jno
(bad)
mov
push
enter
pop
or
out
scas
jne
cmc
rcr
mov
(bad)
push
dec
cmp
idiv
lods
pop
push
fdivr
shl
sub
or
xor
jne
cmp
retf
test
push
add
mov
mov
jg
retf
cmp
and
into
daa
dec
ins
push
cmp
mov
jle
mov
cwde
test
std
mov
int3
out
loop
mov
pop
arpl
xchg
pushf
mov
scas
leave
das
into
dec
repnz
cmp
fdiv
xor
cs
in
hlt
pushf
jg
mov
push
adc
and
loope
dec
xchg
push
int
sbb
sub
xchg
repz
out
fild
dec
dec
dec
mov
sbb
and
jne
cld
rcl
adc
and
or
(bad)
fcmovbe
rol
mov
mov
movs
inc
in
adc
addr16
repz
(bad)
retf
cmps
lods
dec
into
or
imul
push
lock
mov
shr
leave
sahf
push
sbb
mov
pushf
sub
xchg
xchg
mov
xchg
leave
das
repz
push
sub
(bad)
dec
aaa
fwait
or
and
pop
fwait
jmp
lods
xchg
push
dec
pop
enter
in
aad
jg
push
sub
std
pushf
ss
dec
clc
jmp
add
ror
sbb
cmp
cld
and
outs
mov
xor
test
cmp
fldcw
inc
and
iret
or
fstp
mov
sub
mov
inc
retf
dec
ret
sub
pop
enter
hlt
cmp
sahf
lods
call
daa
fmulp
mov
cwde
dec
pusha
adc
popf
pop
gs
scas
mov
inc
or
mov
jb
sbb
mov
sub
stos
jge
mov
jnp
cmp
jb
add
mov
(bad)
inc
mov
in
sub
out
jne
outs
hlt
aaa
pop
cli
inc
cmp
pop
jmp
or
mov
fmul
loop
test
cmp
das
sti
(bad)
xchg
movs
test
sub
and
mov
add
mov
xor
push
mov
pop
rol
mov
out
push
les
dec
(bad)
rcl
lods
mov
ror
mov
jno
in
and
in
dec
outs
lods
imul
xor
cmp
icebp
pop
sar
not
lahf
fnsetpm(287
sub
scas
pop
mov
xchg
popa
add
adc
in
out
adc
add
cmps
bound
lock
call
cmps
enter
or
ins
mov
in
mov
popf
pop
add
cmps
mov
add
sub
int3
inc
add
mov
sar
ds
cmps
dec
test
ror
icebp
push
pop
retf
test
add
or
sbb
or
mov
add
and
pop
js
cmp
jmp
mov
jmp
scas
cmp
iret
push
lahf
push
pop
in
rol
sbb
fdivr
adc
stos
cwde
lahf
iret
pop
dec
arpl
xor
dec
jmp
adc
outs
mov
ins
mov
shl
idiv
pop
xchg
shr
pop
in
mov
and
push
and
(bad)
es
push
add
(bad)
pop
fist
(bad)
mov
fdiv
(bad)
ins
sbb
out
fwait
jmp
sub
xchg
pop
retf
clc
arpl
jo
dec
fstp
cmp
pop
aad
stos
movs
mov
xor
rcr
xchg
daa
and
test
inc
mov
and
aas
int
mov
nop
scas
mov
out
jae
or
jmp
sar
jne
les
push
cli
lea
dec
add
adc
sbb
adc
into
lea
rol
jmp
push
imul
std
retf
jae
mov
ret
xchg
fisub
cs
cld
inc
mov
xor
cmp
mov
mov
push
rcl
mov
jmp
mov
xor
pop
mov
int3
and
mov
fld
bound
popf
pop
mov
stos
push
(bad)
xchg
es
repz
xchg
cmp
push
iret
int3
mov
je
xlat
aad
xchg
ror
dec
adc
sar
sub
sbb
pop
adc
arpl
fwait
in
and
push
out
xlat
and
ss
mov
inc
loope
imul
xchg
iret
int3
dec
or
dec
pop
in
jge
not
push
call
(bad)
inc
repz
and
es
push
xor
pop
jo
scas
test
add
fmulp
mov
fimul
retf
dec
gs
cmp
push
fld
clc
das
jmp
xor
popf
adc
inc
adc
cmovs
imul
add
mov
sbb
ror
es
hlt
(bad)
stos
test
aad
push
je
mov
cmp
lock
dec
movs
push
andps
adc
aam
cmp
jmp
and
mov
mov
cld
hlt
mov
rol
inc
add
or
ins
ror
cmp
lods
jmp
(bad)
xchg
test
int3
dec
sub
mov
in
scas
std
fisub
inc
cwde
mov
cmp
add
test
cmps
mov
dec
xlat
and
hlt
mov
adc
int
jp
data16
cmp
xchg
into
dec
pop
mov
mov
jb
sbb
mov
cs
xor
pop
sbb
in
mov
or
sbb
push
xchg
inc
push
repnz
dec
push
inc
popf
(bad)
enter
push
rol
pop
mov
pusha
sub
sbb
pop
popa
das
pop
scas
xchg
outs
es
and
enter
mov
sti
cmps
sub
xchg
mov
jo
imul
cmps
(bad)
stos
sbb
bound
sbb
shr
push
add
js
retf
xor
test
outs
out
or
and
pop
into
mov
mov
mov
shl
cmc
loop
push
les
aam
shr
add
cli
dec
shl
or
cmps
jno
ins
mov
cmp
je
scas
inc
repz
lods
adc
xor
cli
scas
loopne
xchg
pop
xchg
lds
xor
inc
mov
jae
inc
loope
pusha
adc
test
pop
xchg
in
mov
push
(bad)
adc
mov
(bad)
fsubr
pushf
cmps
xchg
sub
mov
stc
jno
xor
jmp
popf
jle
push
xor
add
jo
jge
or
push
pop
call
pand
mov
cli
xor
adc
lock
rol
cmp
cmps
jb
icebp
jle
dec
cwde
jns
dec
loope
call
inc
xchg
(bad)
enter
xchg
clc
pusha
fdivr
(bad)
dec
fsubp
or
(bad)
pop
sub
mov
and
and
mov
pusha
pop
sub
lahf
inc
mov
das
fidivr
ret
pop
mov
ins
fisttp
push
call
imul
ror
cmp
dec
xlat
mov
xor
stos
das
hlt
or
shl
int
adc
daa
or
inc
dec
cmps
cmps
sub
fimul
jbe
test
int3
test
sbb
dec
sbb
fwait
push
addr16
mov
rcl
xchg
out
scas
push
(bad)
xor
jns
gs
or
es
aas
and
jl
repnz
mov
and
(bad)
lock
lods
add
fst
cmp
cmp
pop
cmp
mov
leave
push
xor
and
sbb
mov
cmp
inc
div
pusha
dec
dec
into
fs
loopne
mov
rcr
je
jle
ret
lods
mov
adc
mov
out
push
xchg
adc
hlt
dec
in
add
inc
mov
jp
aas
mov
add
or
aam
adc
fmul
fcmovu
mov
adc
push
inc
inc
sbb
call
mov
adc
lea
movs
sub
lea
and
pop
cwde
popa
jae
test
xor
push
push
mov
add
es
dec
(bad)
dec
mov
not
lds
dec
clc
sub
in
test
sti
mov
addr16
iret
pop
test
lea
lods
retf
lahf
mov
shl
loop
xor
adc
sub
or
iret
daa
int
adc
enter
jmp
popa
xchg
mov
loopne
mov
inc
ret
xor
dec
jns
or
jno
xchg
jb
retf
pop
shl
fild
scas
mov
xor
push
xor
cmps
sbb
test
mov
sub
and
call
sbb
jecxz
sub
idiv
aad
fcomp
xor
fisttp
pop
hlt
mov
int
inc
je
push
adc
mov
xchg
dec
outs
push
sub
call
inc
pop
aam
xlat
mov
cld
inc
js
(bad)
pop
sahf
scas
xchg
imul
push
mov
xchg
inc
arpl
inc
sbb
cmp
mov
xor
jae
shr
and
cs
leave
inc
cmp
popa
jo
div
loopne
in
dec
repz
out
mov
pushf
cmp
leave
or
fiadd
jae
fxch
sub
jl
push
dec
mov
sub
cs
mov
outs
cdq
cmp
(bad)
(bad)
pop
and
xor
fbstp
sbb
sbb
in
push
(bad)
cmc
or
push
jmp
gs
sub
mov
jae
aad
cli
xor
shl
in
push
std
push
push
mov
xchg
inc
mov
stc
ret
sbb
mov
in
(bad)
jmp
rcl
hlt
into
pop
scas
test
shr
enter
mov
xor
mov
and
pop
mov
into
mov
jmp
push
adc
sub
je
out
adc
fld
mov
stc
sbb
dec
mov
jmp
push
mov
adc
std
or
imul
xchg
ss
xor
inc
imul
daa
ror
cmp
scas
loop
and
pop
lock
adc
jo
call
push
int3
add
ret
push
sahf
stos
and
push
jno
inc
mov
mov
cmp
arpl
jne
mov
xlat
mov
imul
mov
lods
add
stc
cmp
addr16
xor
(bad)
push
in
int3
mov
jno
add
lea
add
out
aam
repnz
shr
std
call
ins
aaa
nop
dec
sahf
and
cmp
cmp
xor
aad
daa
ret
test
lds
gs
lahf
arpl
and
adc
xchg
aas
loop
jbe
mov
cmp
scas
push
neg
(bad)
mov
mov
mov
cmp
retf
aam
adc
js
(bad)
cmp
adc
test
and
mov
inc
pop
jae
iret
jae
fisubr
mov
dec
loopne
leave
loope
xor
dec
dec
repz
popa
dec
xor
pop
mov
mov
mov
stc
aaa
cmps
mov
mov
test
and
add
call
jb
inc
and
stos
jne
fst
ret
pop
pop
rcr
enter
inc
stc
mov
mov
stos
retf
and
or
sbb
sbb
mov
push
shl
call
inc
pop
jg
mov
ds
adc
dec
push
pop
test
cmp
les
call
movs
jns
or
fild
or
ss
mov
cmp
pop
es
or
or
lahf
and
fs
mov
push
popf
ds
lds
je
inc
outs
ret
div
shl
(bad)
push
mov
adc
cdq
loope
pop
movs
bound
outs
or
xor
jmp
(bad)
dec
pop
shr
mov
xchg
mov
adc
icebp
xchg
pop
gs
movs
dec
inc
dec
(bad)
push
cmp
mov
add
mov
dec
mov
ret
(bad)
das
pop
or
fcmovb
push
jmp
lds
cmc
data16
aad
mov
dec
inc
repz
mov
repnz
mov
test
pop
push
xchg
xchg
and
jmp
cmp
out
xchg
cmps
add
loopne
mov
sbb
push
jns
sub
xor
push
mov
xor
mov
mov
inc
mov
push
mov
ss
imul
xor
nop
pushf
das
sbb
mov
shl
fs
sub
aad
aaa
outs
and
dec
test
shl
hlt
sub
cmp
outs
xor
enter
gs
stos
outs
stc
and
dec
or
push
xor
dec
popa
popa
mov
ror
inc
mov
cmp
ret
push
bound
ds
and
pop
and
adc
xor
cmp
pop
ror
sub
jo
icebp
dec
mov
xchg
inc
push
sar
push
push
pusha
xor
data16
pop
push
rol
(bad)
leave
push
frstor
dec
mov
arpl
sbb
mov
fistp
or
mov
scas
lock
jno
xchg
pop
dec
jns
movs
lock
xchg
jne
sbb
(bad)
inc
cmp
or
cmp
dec
or
push
mov
jnp
retf
call
ds
mov
inc
lahf
push
jmp
(bad)
pop
leave
jo
push
cmp
ins
ins
arpl
sub
mov
ss
dec
hlt
add
cmp
xchg
out
xchg
mov
test
mov
sub
xor
ds
std
sbb
call
retf
and
jle
xor
and
inc
out
(bad)
loope
add
aas
ins
fimul
jbe
push
icebp
add
add
loope
push
cld
mov
(bad)
(bad)
jle
jo
and
out
and
repz
cmp
pop
scas
cmp
xchg
cmc
mov
lods
and
jb
das
jnp
fcomi
jmp
retf
add
shr
cwde
or
lock
adc
bound
adc
je
ss
add
test
aaa
movs
int
imul
(bad)
ins
aaa
inc
fiadd
jo
test
xchg
neg
pop
sub
movs
aaa
push
jne
pop
nop
aad
and
mov
icebp
cmps
iret
pop
je
cmp
xor
aad
adc
lea
movs
mov
mov
shl
mov
mov
loopne
out
xchg
test
leave
mov
cmps
rol
push
div
pop
dec
sar
mov
mov
hlt
sahf
push
(bad)
vmwrite
ins
sbb
in
addps
rcr
mov
xor
mov
jne
lock
jbe
xor
push
push
jbe
xchg
inc
xor
(bad)
ret
ds
icebp
cmp
mov
movs
movs
dec
outs
icebp
inc
(bad)
sbb
fidiv
jle
js
jbe
ins
or
jecxz
pop
sbb
rcl
lds
jnp
sbb
mov
inc
dec
xchg
mov
call
jae
mov
imul
js
fadd
rcl
or
cmp
mov
or
dec
iret
and
popa
hlt
mov
sub
mov
sub
int
or
mov
mov
ret
cmp
cmp
test
push
adc
fabs
mov
cmp
add
in
in
sar
jl
cwde
out
add
xchg
les
jbe
gs
(bad)
pusha
rcl
adc
pop
mov
adc
xchg
je
ret
add
in
das
aaa
dec
shr
add
xchg
loop
jnp
add
or
push
inc
(bad)
pop
or
push
into
mov
sti
in
enter
je
rcr
xchg
into
ss
hlt
ds
xchg
and
mov
dec
mov
or
ror
cdq
jbe
mov
cmp
addr16
outs
rol
(bad)
enter
and
xchg
bound
jecxz
xlat
mov
cmp
mov
icebp
and
es
test
or
lds
popf
addr16
inc
push
mov
test
repnz
mov
test
call
xchg
mov
call
xchg
cmc
test
(bad)
push
cmps
mov
cmp
jge
pop
cwde
ins
mov
jle
push
cmc
dec
push
test
in
shr
stos
jmp
cmp
pop
pop
iret
hlt
cdq
sbb
(bad)
aad
mov
mov
test
sbb
dec
pop
pop
push
out
mov
push
sub
mov
test
das
pop
cmp
and
pop
lods
cmc
ret
dec
inc
sbb
mov
xor
mov
dec
repz
sbb
mov
fdivr
xchg
add
test
adc
dec
xchg
cdq
xchg
repnz
shl
inc
aas
scas
mov
in
adc
inc
neg
movs
data16
call
sub
int
rol
sbb
push
mov
lock
pop
xlat
push
sbb
mov
jle
arpl
xchg
mov
(bad)
sahf
pop
stos
or
push
pushf
cmps
push
jp
xlat
icebp
jno
movs
(bad)
jge
imul
sahf
jo
pushf
push
rol
sbb
fcomp
je
arpl
mov
cmps
jmp
out
mov
jg
inc
ds
xchg
out
jmp
sub
icebp
js
and
sbb
mov
cmp
dec
imul
or
adc
leave
mov
ficom
clc
mov
push
mov
addr16
stos
xor
div
add
outs
xchg
cmps
xor
mov
imul
or
retf
or
popf
mov
repz
retf
jge
das
mov
movs
fcomp
sbb
popa
dec
mov
jecxz
lahf
hlt
jo
push
mov
inc
inc
sti
dec
in
sub
in
test
push
add
pop
xchg
dec
movs
push
sub
xlat
adc
scas
aaa
pop
jns
mov
loope
inc
xchg
js
js
sbb
adc
jp
sti
adc
add
je
cmp
fcom
cmps
mov
fst
xchg
inc
hlt
fbld
rcr
and
jl
jb
adc
xor
fiadd
mov
call
pop
cmp
sbb
jg
mov
xchg
fwait
or
out
imul
mov
lds
(bad)
out
and
mov
sbb
and
jae
and
fdivr
or
cmp
add
inc
or
mov
adc
dec
xchg
fimul
push
xchg
add
sub
stos
in
sub
fnstenv
fdivr
pop
jnp
mov
les
cwde
ins
xchg
jmp
or
shl
and
adc
dec
sub
jge
gs
xchg
xor
sar
jne
aam
mov
aam
mov
xchg
and
mov
or
jb
dec
mov
jno
jle
adc
push
sbb
retf
in
xchg
retf
mov
pop
xchg
sbb
mov
add
shl
mov
sar
fwait
push
adc
sbb
sbb
push
jecxz
add
(bad)
push
mov
pop
jle
mov
jns
push
push
xor
mov
arpl
(bad)
neg
dec
das
mov
jo
push
loope
adc
pop
pop
mov
jae
in
ror
dec
retf
ss
pop
adc
aad
adc
out
push
out
fiadd
test
ins
fwait
xchg
xchg
scas
cmp
adc
inc
pusha
pusha
cmp
cwde
jl
xchg
sub
daa
sti
ret
pop
pop
jmp
call
daa
mov
push
scas
imul
(bad)
das
in
ja
retf
jns
jns
outs
push
mov
mov
mov
pop
push
movs
xor
addr16
jg
sub
iret
rcr
test
fsub
mov
mov
ins
icebp
fmul
pusha
lea
dec
nop
xchg
lock
hlt
dec
or
mov
push
dec
mov
mov
out
(bad)
inc
mov
pop
push
fst
pop
pop
std
bound
inc
lock
in
repz
and
inc
jge
jl
inc
xchg
lock
jecxz
retf
lds
sbb
add
aas
loope
mov
enter
lods
sub
call
or
rcr
jno
sbb
jno
es
(bad)
enter
push
cld
dec
pop
mov
adc
inc
test
push
or
mov
mov
jmp
lods
repz
outs
add
ret
dec
inc
addr16
out
mov
nop
mov
sbb
ins
mov
cmp
inc
jle
mov
retf
loope
xchg
int
mov
retf
sti
test
iret
sub
loope
(bad)
cdq
add
xchg
icebp
jmp
and
(bad)
sbb
push
and
loop
xchg
pop
jmp
mov
cmp
lods
cld
pop
sub
ja
stc
pop
ffree
jecxz
mov
out
mov
scas
cld
mov
cmc
scas
pop
cld
push
scas
ds
mov
(bad)
pop
xchg
test
or
mov
sahf
fucom
pop
inc
xchg
adc
sbb
je
sub
dec
aad
jp
nop
push
mov
ret
add
sbb
mov
lock
shl
xchg
lods
in
sbb
push
sbb
test
sahf
inc
push
sub
(bad)
jns
jecxz
and
and
cmps
jne
dec
retf
fimul
shr
enter
jecxz
cmp
and
out
mov
aaa
jmp
and
dec
(bad)
xor
jbe
inc
inc
inc
pop
daa
(bad)
mov
cli
stos
jnp
mov
popf
dec
in
fdivr
sbb
loop
aam
shl
(bad)
ss
outs
sub
repz
cmp
sub
or
mov
or
addr16
pop
and
push
inc
pop
inc
and
(bad)
or
popf
int3
xchg
scas
mov
scas
push
pop
push
jns
mov
pop
lahf
mov
lea
movs
mov
cmp
xchg
mov
jmp
inc
dec
jl
xchg
jno
addr16
push
push
sub
inc
jmp
fcmovnbe
out
adc
sub
int3
sub
out
jmp
mov
aad
sbb
and
add
repz
inc
not
add
cmp
push
sub
push
ja
test
adc
mov
ficom
jmp
push
xchg
xor
pop
ja
fwait
inc
xor
sbb
add
jne
call
fistp
mov
xor
pop
or
xchg
mov
add
retf
pop
mov
lods
fcom
xchg
out
sub
jne
mov
pop
mov
out
bound
push
push
rol
xchg
sub
lahf
in
or
lahf
fnstsw
sub
fst
ficom
mov
and
(bad)
mov
in
inc
jns
movs
push
loopne
fld
mul
mov
addr16
pop
icebp
clc
and
sti
data16
and
ror
xor
std
out
repz
arpl
stc
(bad)
not
out
movs
ficomp
jo
leave
data16
push
push
in
in
dec
push
and
adc
inc
into
iret
test
push
lahf
mov
nop
jg
sub
adc
mov
or
sub
push
add
push
mov
xor
fstp
mov
inc
int3
or
mov
ret
popa
add
aaa
push
cld
jo
(bad)
xor
xor
bound
mov
fistp
fldenv
and
sub
test
out
push
jle
in
jbe
popa
movs
and
lds
mov
js
rcr
out
pop
cmc
pushf
ficom
mov
xlat
and
push
div
(bad)
and
inc
inc
xchg
cwde
push
and
(bad)
xor
popf
mov
cmc
fsin
sub
ror
lea
outs
xor
cli
jne
and
iret
cmp
cmp
add
pop
cld
ret
stc
adc
pop
add
imul
popa
add
sbb
dec
iret
pop
movs
jbe
test
stos
mov
dec
mov
gs
movs
into
out
sbb
add
iret
sbb
test
mov
add
sub
retf
or
js
js
dec
call
repnz
sahf
sbb
nop
jg
shr
icebp
jg
or
pop
(bad)
xchg
ja
fnstenv
jae
jmp
scas
movs
push
push
mov
jnp
mov
movs
test
dec
xor
inc
add
mov
cmc
cs
or
aad
(bad)
cmp
mov
out
jmp
add
int
fwait
mov
mov
imul
jne
mov
dec
imul
mov
pop
mov
inc
push
cli
mov
add
sub
or
mov
pop
pop
in
les
mov
lods
scas
or
lahf
hlt
cmps
adc
mov
enter
mov
int
bnd
or
add
aaa
or
adc
in
or
jge
shl
jo
bound
mov
xor
mov
and
jg
outs
and
mov
aam
sub
loopne
popa
(bad)
xchg
xchg
adc
inc
pop
add
dec
xor
aaa
jp
adc
and
fisub
add
imul
add
jecxz
xchg
lea
jecxz
add
push
out
mov
fadd
pop
aad
cli
imul
lea
xor
pop
rol
lea
pop
ror
ins
jmp
dec
loope
call
add
jle
mov
jp
leave
aas
or
sbb
arpl
and
mov
mov
fld
mov
sub
stos
fldenv
hlt
daa
sbb
sub
sahf
or
lahf
add
fmul
movs
add
in
pusha
mov
dec
imul
lods
and
fst
outs
push
jns
inc
sub
(bad)
push
pop
xchg
lods
mov
in
xor
jp
pop
clc
sbb
ins
sub
cmp
push
(bad)
test
adc
cmp
cs
sub
fld
mov
mov
out
bound
push
xchg
sti
or
adc
lods
cli
jge
xchg
nop
dec
ret
push
out
xor
mov
ins
in
mov
shl
mov
or
sbb
pop
cmps
jg
repz
add
aam
(bad)
call
fnsave
aaa
xchg
push
and
into
push
jbe
pop
dec
ret
xor
in
sbb
jge
push
dec
mov
addr16
jo
mov
outs
fstp
fiadd
and
mov
adc
cmp
pop
dec
lock
fld
loopne
or
xchg
jp
in
fadd
call
out
retf
push
fist
mov
adc
(bad)
imul
add
test
aaa
test
out
js
pop
cmp
sbb
lods
jb
cmp
mov
into
fstp
lods
cmp
enter
add
popf
mov
movs
pop
jl
int
xchg
push
mov
jne
mov
fs
rol
loope
cmp
sub
inc
xchg
mov
arpl
add
icebp
push
aas
out
jbe
cmc
(bad)
mov
ja
inc
shl
xor
in
sti
jp
gs
xchg
mov
neg
mov
pop
mov
out
jnp
inc
out
cdq
or
stc
enter
adc
cmps
lods
fdivp
and
xchg
and
movs
sbb
cli
add
imul
int3
pop
add
xlat
xor
hlt
pusha
outs
sub
dec
push
xchg
outs
mov
rcl
xor
scas
shl
push
ja
es
imul
imul
ins
dec
adc
cmc
aad
retf
xor
pop
cli
pop
adc
(bad)
push
inc
rol
mov
movs
pop
out
xchg
xor
sbb
sub
retf
cmp
ja
jb
and
push
sub
push
mov
(bad)
xor
xor
ret
rol
je
mov
das
jb
and
pushf
iret
mov
mov
mov
shl
scas
add
or
popa
pop
push
shl
repz
ret
dec
cld
cli
out
movs
add
jns
imul
push
pop
inc
xchg
in
fprem
push
push
arpl
mov
push
outs
dec
push
out
js
movs
push
rol
icebp
mov
push
mov
jle
or
jecxz
add
cmp
push
xor
(bad)
inc
scas
xchg
ja
pop
clc
inc
(bad)
test
mov
ins
retf
inc
jmp
dec
inc
shr
sbb
mov
mov
movd
mov
scas
out
add
outs
inc
repnz
(bad)
in
mov
sbb
sbb
in
xchg
ja
sbb
or
mov
sub
repnz
int3
fs
sahf
mov
xchg
push
mov
div
pusha
add
dec
outs
and
mov
inc
pop
push
jnp
xor
out
mov
dec
ret
adc
adc
outs
adc
lods
test
xlat
inc
dec
pop
call
popf
jne
stc
fidivr
shl
sub
(bad)
shl
outs
popf
(bad)
iret
call
xor
or
mov
xor
stc
pusha
fidivr
and
add
pop
rol
xor
xor
jecxz
jnp
push
push
push
sub
xchg
int3
adc
(bad)
fisub
push
in
ja
sbb
xor
fsub
xchg
mov
iret
pushf
xchg
gs
cli
sar
jne
enter
fisubr
jmp
or
push
fstp
mov
cmps
movs
xchg
sub
ins
or
test
in
xor
dec
mov
jb
(bad)
or
xchg
clc
push
mov
js
pop
xchg
movs
in
xor
dec
xchg
(bad)
dec
fwait
xchg
sub
cmp
movs
and
inc
repz
mov
sbb
sbb
cdq
pop
test
push
test
mov
imul
dec
in
or
mov
in
or
in
nop
clc
mov
and
push
mov
cdq
ins
adc
shl
cmp
mov
jmp
mov
dec
push
shl
mov
data16
jmp
das
(bad)
sub
jae
repnz
sub
rol
mov
fdiv
jp
add
gs
ret
xor
xchg
jb
iret
and
arpl
cdq
sbb
mov
adc
mov
arpl
out
or
sti
bound
pop
xor
iret
outs
jns
mov
mov
into
movs
outs
mov
push
dec
ja
loopne
cli
movs
jbe
pop
adc
cmp
data16
rol
adc
int
sbb
cmp
mov
add
pop
adc
xor
stos
or
fcomp
pusha
inc
daa
mov
pop
xchg
out
clc
jnp
pmaddwd
inc
cdq
div
aam
int
adc
data16
inc
jno
movs
lods
mov
scas
inc
stc
sub
mov
mov
into
mov
movs
sbb
mov
out
test
out
div
pop
jbe
cmp
jl
aaa
stos
pop
jbe
pushf
sbb
sbb
sbb
or
imul
out
iret
test
int3
lods
imul
js
pop
bound
jg
fild
fwait
cmp
es
hlt
(bad)
pop
pop
jnp
lods
push
push
sub
jnp
ins
fwait
ret
das
xchg
cs
loopne
test
cs
shr
jb
mov
push
pop
(bad)
fimul
in
mov
sub
bound
(bad)
fbstp
std
rol
adc
addr16
jl
inc
sti
mov
arpl
aaa
xlat
shr
pusha
ret
pop
shr
pop
jb
cmp
cmp
mov
and
imul
aaa
fwait
into
cmp
and
imul
fs
pop
cmp
test
or
movs
xlat
push
xchg
call
or
jecxz
xlat
mov
sti
int3
gs
mov
adc
gs
dec
mov
cdq
(bad)
clc
dec
popa
and
sub
lock
outs
xor
jge
pop
jp
out
xor
mov
ins
imul
out
lods
ret
js
pop
dec
mov
call
mov
stc
sbb
retf
(bad)
enter
dec
clc
xchg
adc
(bad)
pop
into
push
mov
mov
(bad)
(bad)
shl
ss
pop
out
xchg
add
push
pop
mov
(bad)
imul
jae
cmp
imul
mov
stos
out
cwde
sar
dec
mov
sbb
fdiv
xchg
jmp
and
addr16
hlt
jmp
rcr
jmp
pop
dec
xor
mov
mov
mov
sub
fidiv
push
jle
ret
ds
sbb
or
jl
inc
daa
dec
in
in
dec
sub
jb
adc
and
push
imul
sub
jl
push
push
fisttp
push
pop
push
dec
fild
iret
cld
or
push
push
faddp
xchg
addr16
jmp
adc
aam
out
(bad)
mov
int3
jno
test
jl
pop
jmp
iret
popa
xor
or
and
les
aaa
mov
dec
ja
jbe
jecxz
push
sub
or
push
mov
cmp
stos
xchg
test
mov
push
sub
bound
mov
fld
scas
xchg
out
push
nop
movs
test
aad
test
push
inc
pop
cwde
nop
jbe
push
lock
(bad)
xchg
push
loop
loope
ja
aaa
add
aad
into
retf
fisubr
ja
and
popa
xor
dec
sub
popa
and
pop
adc
adc
push
lods
xor
popa
inc
pop
or
jno
sub
jecxz
fstp
push
pushf
xor
je
sub
(bad)
lds
fistp
out
or
cmp
cmps
stc
push
inc
ds
sub
test
loop
rol
pop
imul
das
cmp
out
cmps
adc
lds
inc
test
push
push
jg
cmps
cmp
pop
test
cmp
stos
enter
cmp
adc
jmp
loope
(bad)
dec
jnp
xor
mov
pushf
jle
pop
out
shl
adc
push
xchg
sbb
mov
lods
lds
call
test
ins
clc
adc
fdiv
sahf
int3
mov
ss
(bad)
adc
sub
jmp
loop
or
lea
test
lods
adc
adc
jl
sbb
rcl
xor
ins
jo
fmul
fldenv
or
shl
push
pop
sub
les
ins
pop
and
ret
test
and
sti
jge
retf
sahf
mov
inc
fst
pop
movs
ss
pusha
sub
sub
xchg
add
xlat
or
mov
push
sbb
jbe
add
cld
ja
fisttp
sbb
and
inc
pop
pop
cmp
add
jge
loope
mov
xchg
dec
adc
rol
fdivr
push
test
mov
push
stos
push
rcr
imul
enter
ss
push
repz
sti
mov
scas
data16
push
sub
sbb
bound
push
jg
or
mov
or
(bad)
jne
movs
imul
std
iret
ror
scas
jp
test
(bad)
out
fbld
mov
pop
mov
(bad)
or
pop
(bad)
mov
jl
in
ins
hlt
clc
jmp
fidivr
inc
xchg
in
sub
adc
lahf
cmp
add
dec
leave
jno
test
pop
in
outs
cmp
or
cmp
pushf
loop
and
dec
lods
(bad)
loopne
std
imul
mov
cmp
dec
xchg
xor
stos
cmp
pop
mov
adc
scas
(bad)
in
lock
push
mov
mov
js
sub
clc
push
inc
xchg
xlat
mov
xchg
adc
cmc
push
jo
in
or
cdq
push
cwde
lock
mov
gs
inc
sub
into
in
ds
lods
push
cmps
stos
fidiv
add
and
and
imul
push
fld
call
jge
mov
bound
(bad)
call
(bad)
sbb
jle
(bad)
fstp
xchg
jp
add
dec
stos
test
fistp
cmp
cmp
lock
test
xchg
hlt
sub
popf
dec
pushf
mov
(bad)
shl
scas
in
add
aas
outs
neg
pop
add
dec
cmps
jp
pop
call
out
dec
mov
test
jp
imul
xlat
xlat
mov
ret
(bad)
and
xor
jmp
push
jb
addr16
test
jecxz
mov
adc
in
fcom
ret
jecxz
aad
call
xchg
(bad)
push
xchg
cmp
xor
xchg
dec
inc
sub
iret
fisttp
call
shr
icebp
xchg
mov
mov
popa
push
adc
jl
rcl
sub
mov
and
mov
and
xchg
xchg
jl
jb
mov
rol
ins
xor
xor
pop
adc
test
inc
cld
rol
adc
xchg
pop
std
jnp
dec
shr
sti
mov
cmp
loope
mov
or
cwde
addr16
fiadd
jge
mov
push
xchg
sub
xchg
aam
(bad)
mov
mov
sbb
dec
stos
jne
mov
enter
sbb
push
enter
mov
je
cmp
movs
sbb
iret
and
gs
loope
mov
daa
test
push
ds
xchg
jmp
jnp
add
and
mov
inc
mov
mov
push
out
jae
lds
js
ret
sahf
pusha
data16
out
add
add
(bad)
xchg
jl
icebp
adc
inc
or
mov
lods
ja
out
add
cmp
mov
pop
push
xor
gs
inc
(bad)
iret
pop
mov
hlt
push
add
jbe
les
(bad)
xor
mov
dec
add
rcr
mov
jp
adc
daa
cli
int3
call
inc
cdq
lahf
loop
popa
cld
xlat
scas
pop
mov
popf
std
jnp
pop
mov
in
push
lea
cmc
lock
test
sti
add
or
fadd
and
stos
aam
jge
sti
pop
std
popf
cmp
and
xchg
and
mov
dec
xor
inc
test
push
lods
mov
leave
sub
aas
jl
data16
loopne
or
push
push
ss
rcr
inc
sahf
retf
jmp
ja
pop
dec
cli
jmp
mov
pushf
pushf
jbe
push
add
es
dec
mov
test
jo
or
sbb
jmp
imul
test
jae
sub
add
push
js
sbb
popa
out
pop
push
or
sbb
into
mov
push
xchg
mov
stc
inc
loop
or
sbb
push
adc
add
adc
enter
inc
cmps
cdq
ins
xchg
fdiv
repnz
jns
(bad)
jp
push
data16
push
add
in
inc
jb
das
sbb
adc
or
cs
aad
(bad)
hlt
int3
inc
mov
cmps
inc
std
sbb
dec
push
or
inc
out
jp
mov
pushf
or
jmp
xor
mov
mov
lds
outs
sub
mov
fbld
push
(bad)
int
dec
or
enter
lahf
(bad)
cld
dec
movs
dec
mov
cmp
or
imul
mov
cdq
cwde
fcomp
(bad)
imul
xchg
test
or
cmp
lds
jg
test
xchg
imul
gs
push
aam
jge
or
xchg
sbb
xchg
and
xchg
mov
pop
loop
cmp
fild
inc
mov
xor
sbb
inc
fstp
dec
retf
call
daa
ret
or
adc
das
adc
dec
js
sbb
rcr
dec
into
sub
xor
shl
imul
int
lea
popa
mov
mov
je
sbb
mov
fcomp
pop
test
or
jnp
mov
and
repnz
call
(bad)
bound
cmp
cmp
shl
scas
shl
icebp
jns
push
das
sub
mov
mov
push
push
repnz
pop
or
sti
mov
sub
pop
or
data16
dec
inc
inc
dec
cmp
sbb
dec
mov
jnp
mov
hlt
or
rcl
stos
stos
inc
test
sbb
fstp
aad
fbstp
loope
xchg
int3
and
dec
pop
push
loop
xor
adc
add
cmp
repz
loopne
std
pop
cs
mov
fimul
scas
sahf
sbb
jo
out
outs
imul
dec
cmp
cmp
in
jp
or
xor
icebp
cmps
inc
add
mov
jb
fistp
test
pop
push
mov
push
sbb
push
lds
mov
cmp
adc
mov
gs
scas
lods
add
mov
mov
and
sbb
das
int3
or
or
outs
sar
shl
mov
sub
je
ins
push
adc
(bad)
aad
leave
cmp
sub
in
in
movs
xor
jmp
push
aam
aad
pop
into
int
out
mov
test
mov
mov
(bad)
test
sbb
xchg
mov
adc
push
aaa
adc
call
into
aaa
pushf
in
jle
mov
cdq
stc
mov
jecxz
or
pop
add
xchg
mov
jg
adc
ja
jae
dec
inc
add
mov
sti
or
(bad)
cmp
inc
movs
out
call
ds
fidivr
cmps
inc
and
jbe
xchg
xchg
lea
pop
jns
jo
enter
inc
adc
cdq
mov
or
xor
dec
xchg
pop
adc
pusha
sbb
call
adc
mov
push
and
jecxz
jnp
and
mov
popf
jle
sbb
dec
test
call
sbb
inc
int3
in
fistp
sub
in
nop
or
movs
call
hlt
popf
out
jp
xchg
movs
push
pop
or
xor
xchg
mov
or
mov
push
in
cmps
in
pushf
mov
or
xchg
pop
sbb
mov
push
push
xor
mov
push
xor
mov
dec
pop
jmp
call
inc
pop
jbe
iret
jnp
push
into
out
mov
mov
sub
dec
xchg
fcomp
add
fnsave
xchg
cwde
outs
pop
mov
and
mov
enter
push
pop
call
xor
xchg
rcr
fidiv
aad
cmp
pop
lds
lds
arpl
dec
adc
repz
push
test
rep
and
jge
mov
sar
popf
movs
mov
out
in
add
loope
test
test
mov
cs
xchg
add
mov
sub
cdq
dec
jmp
jae
add
leave
das
in
lods
and
ret
sar
xchg
jae
sub
popf
dec
les
jbe
bswap
jl
ins
push
sbb
mov
pop
outs
lahf
retf
(bad)
std
gs
dec
jae
xchg
retf
inc
js
cwde
data16
bound
push
mov
jnp
xchg
mov
ret
cwde
mov
mov
call
sub
ins
int3
in
ins
daa
addr16
lds
mov
mov
mov
in
and
je
and
lods
add
push
pushf
add
call
add
lods
(bad)
call
lds
mov
adc
aaa
and
push
rcl
test
faddp
call
movs
inc
mov
jns
jle
mov
jl
test
in
mov
sbb
pop
sahf
test
cli
(bad)
jb
xchg
sti
push
jo
mov
(bad)
repnz
movs
lds
and
pusha
stc
rcr
imul
cmps
or
dec
mov
daa
adc
xor
daa
ret
pushf
sahf
out
fisub
rcl
dec
adc
adc
je
add
and
pop
sbb
outs
jecxz
sbb
xchg
ss
adc
push
adc
(bad)
and
mov
(bad)
outs
mov
pop
mov
mov
pop
repz
push
stc
cmp
mov
jmp
push
add
ret
not
sbb
std
stc
dec
repnz
or
mov
mov
sti
js
xchg
xlat
sub
and
mov
mov
xchg
sbb
lds
pusha
setae
cmp
xchg
inc
add
mov
int3
repnz
push
(bad)
sbb
mov
push
repz
mov
popa
cli
ror
add
jp
aam
jns
or
hlt
mov
jmp
pop
popf
sub
outs
das
jne
rcr
mov
pop
xchg
call
xor
cdq
fistp
lahf
and
ins
sbb
xchg
jmp
cwde
pop
pushf
pusha
jns
and
cld
cld
(bad)
xchg
mov
mov
push
push
jbe
and
pushf
movs
in
xchg
xchg
adc
movs
mov
idiv
adc
fld
lods
inc
adc
(bad)
test
sbb
jb
pop
iret
shld
jns
and
adc
nop
push
or
les
mov
icebp
or
jle
cli
adc
dec
scas
xchg
aad
cmp
mov
pop
rol
add
popf
mov
mov
sar
adc
pop
adc
pop
mov
loopne
mov
cmp
mov
pop
jb
aaa
cmp
ror
fneni(8087
jno
retf
and
(bad)
adc
dec
xchg
or
cmp
dec
mov
cmp
out
into
push
inc
aas
cmps
(bad)
cmp
push
or
ror
cmp
push
in
call
and
sbb
sar
or
call
addr16
outs
mov
aas
lock
test
out
sbb
cmp
mov
mov
inc
fiadd
mov
fsub
xchg
shl
dec
int
and
add
fldpi
inc
and
dec
adc
shr
push
pop
inc
cmps
push
aam
or
inc
sub
push
test
adc
jnp
or
inc
sbb
push
js
xor
push
addr16
ja
mov
mov
sar
inc
sub
mov
retf
sti
adc
adc
pop
mov
push
push
dec
jmp
xchg
dec
xor
repz
rol
out
sar
jmp
fiadd
int3
aad
xor
call
sbb
mov
jnp
jmp
inc
loop
adc
repz
xor
cs
sbb
mov
cmc
mov
nop
mov
adc
aaa
(bad)
in
cmp
add
rol
mov
add
push
xor
inc
aad
mov
mov
in
push
push
je
jle
jns
inc
jmp
ds
(bad)
dec
loop
mov
or
and
ffreep
pop
mov
xchg
test
push
sahf
fild
push
dec
jo
xor
mov
in
xor
push
call
pop
inc
jp
fadd
mov
dec
fldlg2
aas
out
ds
(bad)
rcl
xchg
and
add
adc
les
inc
jns
dec
jo
out
dec
push
dec
lahf
push
inc
out
retf
shl
(bad)
outs
and
sub
ins
or
das
cmp
fs
daa
adc
aam
movs
ret
adc
push
js
pop
pop
(bad)
inc
ret
xchg
or
cmp
aad
fsub
xor
sti
(bad)
fdecstp
cmp
popf
add
add
xchg
das
mov
jbe
cmps
pop
(bad)
fnstenv
add
fcomp
push
ficom
movs
clc
xor
inc
stc
mov
fdivr
or
arpl
neg
pop
(bad)
jns
sbb
(bad)
cmps
xor
test
icebp
jg
cwde
fwait
aad
leave
mov
or
scas
xchg
fstp
enter
mov
jmp
scas
dec
imul
xor
add
repz
xchg
sbb
pop
inc
and
mul
cmp
jmp
cdq
xchg
push
lock
pushf
sbb
jmp
test
mov
push
pop
jnp
jno
push
mov
sub
aam
push
call
sbb
or
mov
in
jge
repz
in
sub
imul
dec
pusha
inc
add
scas
fstp
mov
sbb
call
(bad)
fsub
mov
or
cmp
push
imul
mov
sub
cmp
repnz
addr16
mov
sub
add
or
push
sar
lods
mov
out
inc
mov
int
sbb
clc
sar
in
repnz
jns
stos
sbb
jge
cli
dec
inc
or
mov
inc
sub
push
int3
dec
push
stc
lods
mov
retf
in
push
int3
je
cmp
leave
out
sbb
inc
sbb
aad
mov
cmc
repnz
cmp
out
add
(bad)
adc
loopne
xchg
fcmovnbe
imul
pop
fdiv
addr16
into
dec
sar
test
int
and
enter
mov
jne
movs
pop
pushf
mov
out
mov
xchg
adc
sub
pop
aaa
ret
and
repz
popf
stos
out
mov
out
inc
sti
push
cmp
inc
add
adc
and
out
in
or
jmp
and
daa
(bad)
int
test
jp
call
scas
sar
nop
inc
jns
sub
stc
daa
or
jge
xchg
loopne
push
ficomp
xchg
mov
mov
aas
mov
pop
push
and
dec
repz
daa
scas
push
add
fild
ins
push
aad
shl
xchg
or
xor
add
push
cmp
mov
jmp
aaa
repnz
jnp
call
dec
stc
adc
cmp
and
sbb
mov
out
and
mov
sbb
mov
cmp
test
in
retf
mov
scas
dec
xor
inc
sbb
cdq
dec
les
or
jl
adc
pop
inc
cmc
das
test
mov
enter
dec
add
sbb
mov
pop
outs
mov
pop
cmp
and
push
test
das
adc
lea
stc
push
jecxz
adc
mov
or
test
ret
sub
adc
mov
sub
lock
mov
sti
es
adc
or
push
lahf
push
jle
jecxz
xor
and
mov
and
cmp
call
mov
je
ss
adc
jmp
jns
je
jae
sub
out
test
cmp
cmc
retf
test
mov
dec
adc
pop
xor
dec
ins
aas
sti
rcl
jmp
dec
stos
nop
fidiv
call
xchg
lods
or
mov
mov
ret
add
hlt
xor
and
(bad)
cmp
lods
cld
in
out
push
push
stos
xchg
pop
or
dec
(bad)
and
clc
loope
xor
outs
icebp
inc
xor
pop
dec
ja
in
fs
cmp
and
jae
adc
add
in
call
push
movs
cmp
xlat
xchg
mov
pop
shr
shl
pop
mov
cld
cmp
inc
jg
arpl
(bad)
jmp
mov
pop
fsub
dec
mov
inc
outs
xchg
adc
cld
es
nop
jne
scas
pushf
or
jge
movs
bound
mov
retf
(bad)
lods
test
pop
cmp
pop
(bad)
and
aas
ins
or
(bad)
iret
mov
xchg
test
inc
add
iret
addr16
dec
or
data16
retf
or
jbe
mov
fdivr
es
and
mov
xchg
(bad)
(bad)
xchg
xor
jne
xchg
mov
push
sti
or
pop
push
xor
test
jp
and
bound
outs
xchg
lds
pushf
sbb
icebp
(bad)
push
(bad)
xchg
mov
mov
outs
add
scas
popa
clc
sub
call
mov
pusha
arpl
mov
add
cvtdq2ps
stos
outs
dec
push
push
int
jae
movs
xchg
in
pushf
xor
add
add
outs
sbb
sub
xor
mov
mov
ins
outs
sbb
or
in
sub
pop
inc
outs
loopne
add
mov
pop
bound
cmp
xchg
sahf
push
shr
mov
xchg
in
lods
push
cmc
jae
push
fld
mov
jb
mov
(bad)
fwait
popf
lods
and
mov
sub
jmp
adc
jp
cmp
test
xchg
inc
mov
(bad)
(bad)
mov
pop
dec
lds
mov
add
xor
pop
mov
int
repnz
push
xor
fs
jmp
jle
clc
dec
inc
sbb
or
loop
je
(bad)
mov
ret
mov
mov
mov
pop
adc
xchg
leave
lea
ins
ins
js
movs
mov
xchg
pusha
neg
jl
fimul
sub
out
call
(bad)
lock
das
lahf
cmp
enter
adc
int
and
xchg
rol
dec
inc
out
or
jle
test
repnz
rcl
or
ins
jmp
inc
jmp
or
mov
jmp
pop
fs
mov
test
xchg
call
push
sbb
in
(bad)
int3
repnz
add
retf
or
or
push
pop
xchg
lahf
pop
mov
or
sbb
repz
add
lods
fcomp
xor
inc
(bad)
lods
pop
pop
adc
cmp
push
arpl
in
and
or
leave
stc
in
mov
rcl
cmc
jbe
xor
ins
mov
cmp
push
in
push
out
sub
mov
in
adc
cmps
mov
lea
mov
and
imul
lods
mov
(bad)
ds
cmps
and
mov
cmps
ror
lock
cdq
cs
outs
fnstcw
repnz
es
shl
and
push
call
mov
and
dec
shl
movs
pusha
cmp
outs
lods
sbb
rcr
mov
shl
rcr
xchg
enter
daa
hlt
gs
shl
clc
and
ins
cwde
(bad)
cld
adc
sub
mov
into
mov
leave
test
(bad)
cmp
stc
jecxz
iret
ret
pusha
or
scas
sub
enter
stos
jl
arpl
xchg
xchg
xchg
test
jb
jbe
adc
lods
in
lahf
arpl
dec
add
lds
mov
test
test
je
add
mov
mov
jae
fldcw
adc
push
mov
adc
jp
fwait
sub
int
popa
jb
imul
cmc
je
outs
xor
xchg
sub
aad
sub
xchg
lds
hlt
mov
hlt
ror
cmp
in
pushf
inc
xor
push
xchg
mov
inc
jmp
jmp
adc
(bad)
lods
shl
mov
lods
pop
sub
jl
lods
sub
jmp
(bad)
repz
mov
adc
lods
or
sbb
sbb
cmp
or
fstp
jge
sub
rcl
aam
scas
lods
push
push
(bad)
jo
mov
xor
pop
(bad)
cwde
add
push
lahf
pop
mov
push
pop
and
ins
jle
push
aam
xchg
mov
daa
outs
test
aaa
push
cmp
mov
ds
bound
mov
movs
xchg
mov
(bad)
fcom
mov
ret
and
cmp
cmps
arpl
inc
in
fisttp
daa
sti
mov
mov
out
add
jmp
add
in
inc
jle
dec
loope
nop
adc
xchg
out
mov
inc
adc
fs
or
movups
cmp
fbld
loopne
rol
jmp
mov
dec
call
pop
mov
add
mov
cli
xor
test
adc
cmp
icebp
cmp
iret
lds
and
test
imul
pop
movs
dec
inc
and
jp
(bad)
fisub
or
add
cmp
push
add
sbb
fbstp
cli
or
ret
fstp
iret
jae
retf
cmp
(bad)
cmps
pop
adc
sub
pop
mov
pop
xor
adc
fimul
sti
xor
bound
ror
adc
in
or
and
(bad)
lds
cwde
je
(bad)
test
xchg
mov
sahf
and
push
adc
mov
mov
(bad)
xor
aas
sbb
xchg
gs
adc
in
pop
sub
imul
or
dec
xchg
push
fmul
mov
loop
fmul
lds
test
adc
shl
cld
loopne
(bad)
ja
xor
sub
ret
jecxz
lea
sub
fild
and
jns
pop
sti
mov
sub
sub
push
mov
pop
rcl
lods
rol
push
sub
iret
leave
bound
leave
cmp
int3
arpl
xchg
shl
ret
pop
push
add
mov
(bad)
or
(bad)
push
or
mov
xor
call
xor
jbe
and
push
push
add
dec
int3
movs
aad
jg
or
hlt
or
push
jnp
mov
sahf
push
bound
fstp
push
ret
add
mov
test
push
out
xchg
jmp
outs
loope
js
jae
xor
jmp
or
push
cmp
cmp
dec
sbb
jle
addr16
dec
and
adc
sbb
add
outs
lods
cmps
(bad)
xchg
ins
sbb
test
push
push
add
out
pop
add
loope
push
ins
jb
into
js
mov
int3
aas
jp
and
(bad)
xor
loope
retf
ffree
cmp
rcl
data16
lods
out
scas
push
add
dec
(bad)
mov
out
ss
icebp
adc
out
mov
inc
jp
mov
icebp
mov
out
cs
push
pop
test
push
fdiv
push
dec
and
cmps
gs
adc
(bad)
push
lea
jno
jp
js
jno
xchg
stos
call
and
cwde
je
loope
pop
lea
jne
inc
pop
std
cdq
jp
cmp
enter
sub
shl
cmp
test
cmp
xchg
sti
pop
mov
sti
out
or
inc
ins
xor
pusha
add
fnstsw
ret
outs
sub
fs
pop
dec
xor
retf
mov
outs
mov
aas
adc
dec
stc
xchg
stos
xor
test
ins
call
jns
jmp
out
aas
mov
or
lods
rcr
adc
lea
loop
sub
pop
mov
lds
fld
aas
data16
test
rcl
cmp
outs
dec
mov
pop
in
xor
pop
es
cdq
je
ss
(bad)
outs
sub
or
fbld
mov
add
in
aaa
xchg
push
pop
mov
hlt
xor
aaa
neg
dec
mov
enter
add
xor
cmp
and
retf
inc
sbb
sub
cmp
arpl
and
retfw
jg
sbb
in
mov
dec
sub
js
out
into
mov
cmc
ficom
out
jl
fbld
pop
imul
aad
mov
lods
aaa
adc
pop
stc
les
(bad)
dec
add
dec
aam
cmp
or
jecxz
add
adc
jo
gs
add
pop
dec
cmps
mov
lds
pop
or
repz
stos
pop
int
xchg
cmp
jnp
popa
popa
dec
test
lods
in
jnp
push
pop
sub
push
sahf
inc
popf
xchg
sbb
outs
int3
sub
pop
js
fisub
or
imul
jns
cmp
and
int
mov
loop
outs
daa
cmp
cwde
xchg
and
aaa
cmps
jo
loop
std
pop
jl
xor
push
sub
aad
pop
push
jp
push
xchg
outs
mov
mov
adc
cmc
jae
mov
(bad)
es
inc
fs
ror
sbb
cmp
or
push
jmp
xchg
mov
xor
jmp
xchg
jo
sbb
int
retf
(bad)
mov
imul
mov
add
std
int
int3
and
pop
or
(bad)
dec
dec
cdq
xchg
in
pop
les
add
cmp
not
dec
ss
mov
in
pop
shl
int3
int
sbb
adc
dec
xchg
cmps
xor
movs
iret
push
mov
rol
or
gs
outs
clc
imul
test
add
stos
xchg
std
(bad)
fs
or
sahf
jg
leave
in
adc
cmc
dec
test
lds
xor
call
or
fst
sbb
je
inc
mov
adc
jb
hlt
add
out
repz
outs
shl
push
push
int3
add
mov
pop
loop
push
or
stos
sub
icebp
ret
outs
mov
loopne
not
gs
cmp
adc
ror
mov
hlt
cmp
add
adc
and
or
push
inc
cmc
call
add
test
lods
mov
add
or
retfw
inc
(bad)
cmp
bound
adc
pop
mov
dec
mov
inc
jnp
ret
sbb
mov
and
pop
sbb
fwait
mov
in
fisttp
mov
cmp
jno
scas
loop
aam
in
xchg
jp
clc
dec
dec
cmps
pop
mov
fwait
jbe
pop
adc
or
sub
cld
mov
inc
cmp
ror
lods
xchg
inc
mov
pop
xor
inc
clc
xlat
jne
xchg
sbb
test
push
lahf
arpl
retf
xor
stos
cwde
sub
jo
jno
test
inc
icebp
dec
shr
xchg
jmp
jb
hlt
adc
shl
xchg
or
arpl
push
jbe
jo
pop
mov
and
inc
push
or
arpl
dec
fild
and
je
(bad)
xchg
out
rcl
push
mov
inc
int
popa
mov
test
pop
inc
enter
mov
push
lds
gs
gs
das
add
cmp
repz
fadd
dec
addr16
ds
sar
push
ds
mov
stc
mov
add
inc
test
ins
pop
fild
adc
or
or
xchg
mov
mov
xor
ds
fisub
or
xor
mov
fdivr
cmps
pop
retf
xchg
fist
repnz
aaa
pop
out
imul
lahf
hlt
pop
xchg
sbb
out
call
sbb
je
inc
loop
mov
mov
xchg
sahf
icebp
xchg
push
call
and
int
int
repnz
jl
adc
push
mov
xchg
cld
shr
pop
and
hlt
cmps
add
shl
xchg
sbb
cs
inc
mov
xchg
pushf
fbld
movs
loope
fild
enter
into
test
mov
fwait
icebp
inc
out
or
push
and
ror
rcl
(bad)
sbb
mov
mov
push
pop
jae
sub
sbb
or
mov
mov
sbb
enter
pop
std
sub
or
popw
in
lock
mov
and
(bad)
data16
iret
arpl
jg
sub
fincstp
enter
jp
mov
and
div
data16
jmp
nop
outs
mov
fsub
psrad
fadd
add
mov
jge
push
push
leave
ret
push
movs
mov
popf
out
ins
(bad)
dec
jo
xchg
sub
pop
fs
xor
and
push
push
adc
mov
add
test
ror
xor
inc
cmp
fsub
loopne
hlt
call
jne
repnz
pop
fs
adc
or
popf
sbb
xor
jmp
repz
jno
fiadd
push
out
xchg
mov
stos
cld
sub
aaa
sbb
cld
push
sbb
pop
xchg
lea
out
fbld
loopne
push
jb
and
xchg
jne
loopne
dec
call
enter
jbe
sbb
push
xor
inc
or
or
push
mov
xchg
scas
sbb
inc
pop
out
enter
test
inc
xchg
enter
xlat
clc
mov
ficomp
fst
pusha
mov
mov
hlt
(bad)
jecxz
popa
xchg
or
or
test
mov
pop
mov
loopne
aaa
hlt
sub
dec
loopne
in
cmps
jg
push
push
cdq
push
pop
adc
push
sbb
cmp
fist
add
les
jle
jge
xor
mov
movs
and
mov
ss
or
cmc
mov
jmp
inc
outs
mov
pusha
cwde
in
push
xor
es
mov
fadd
or
adc
inc
hlt
mov
push
push
push
mov
jae
sbb
int3
inc
adc
jmp
imul
mov
mov
jg
ds
rep
je
or
movs
ss
sbb
adc
mov
mov
jb
mov
out
mov
mov
jmp
aam
mov
out
pop
push
xchg
sub
xor
dec
jp
pusha
clc
cmp
arpl
nop
cmp
or
xchg
sbb
pop
movs
xchg
xor
int3
push
cwde
dec
mov
dec
or
sbb
push
outs
and
out
pushf
mov
mov
loopne
add
scas
sbb
push
imul
jmp
arpl
pop
icebp
mov
add
mov
test
sbb
jge
jae
(bad)
sahf
out
xchg
rcr
add
jbe
scas
cmp
mov
outs
and
sar
sbb
inc
adc
mov
neg
push
(bad)
xchg
fdivr
sbb
and
xor
mov
dec
cmp
imul
jne
sub
ins
cmp
jmp
or
or
in
fisttp
push
clc
xchg
pop
inc
mov
imul
adc
add
xor
in
xchg
adc
scas
imul
mov
mov
inc
out
push
movs
push
jbe
and
arpl
or
icebp
pop
loop
cs
and
aas
rcr
sti
mov
ss
pop
outs
mov
imul
call
aam
iret
arpl
xchg
ja
aam
push
sbb
dec
movs
pop
inc
dec
mov
jp
sub
bound
mov
test
lahf
and
ins
es
dec
mov
xchg
in
add
jle
or
mov
jecxz
adc
sub
cli
in
mov
jl
arpl
pop
inc
xchg
mov
mov
(bad)
xor
mov
pop
push
(bad)
mov
pop
sbb
jnp
scas
in
(bad)
(bad)
fild
ins
(bad)
imul
test
sahf
push
xchg
push
inc
jmp
push
test
outs
and
xor
jb
retf
inc
js
ss
and
sbb
sti
ds
imul
mov
and
dec
push
test
ds
sub
(bad)
js
pop
rol
and
popa
add
jmp
dec
ficom
xchg
cmps
les
mov
ret
adc
in
pop
or
(bad)
rcl
xchg
out
in
xchg
cs
pop
data16
es
mov
pop
dec
cmp
xor
xor
int3
lea
sahf
shl
push
fs
leave
sbb
pop
jmp
shl
ss
add
mov
aas
jge
and
jl
mov
jnp
stos
sahf
daa
and
test
xchg
mov
mov
push
adc
call
mov
mov
xchg
adc
loop
in
cmp
mov
lea
add
push
fisttp
inc
popa
into
sbb
scas
call
pop
neg
and
push
in
outs
scas
and
sbb
vxorps
and
ins
xchg
jnp
in
imul
xlat
les
js
inc
call
ret
inc
dec
aam
not
fwait
or
mov
cmp
adc
dec
jecxz
mov
movs
out
cmp
mov
cmp
push
lea
mov
add
push
scas
imul
pop
fld
sub
sbb
in
mov
mov
inc
dec
push
push
out
add
push
mov
and
inc
mov
xchg
or
inc
push
adc
pusha
movs
sbb
aad
fimul
cmp
or
mov
xor
repz
test
mov
mov
fsubr
push
jo
ror
mov
int3
movs
jmp
pop
pop
stc
jb
lods
and
(bad)
call
(bad)
shl
and
or
mov
in
pop
movs
loop
cwde
(bad)
rcl
(bad)
ret
ins
cmp
frstor
mov
repnz
out
or
fadd
pop
in
aas
mov
jae
mov
sbb
jo
idiv
cmp
lea
cmp
mov
or
test
das
sbb
xchg
in
pop
add
sub
adc
mov
test
test
add
mov
stc
arpl
cmp
movs
pop
add
loopne
xor
push
push
les
and
cmps
rcr
leave
inc
inc
mov
sbb
mov
retf
inc
push
sbb
ins
pavgw
leave
xchg
inc
adc
in
pop
push
icebp
(bad)
repnz
icebp
scas
sub
mov
jle
mov
mov
mov
mov
(bad)
popf
jb
popa
cmp
out
adc
xor
cs
(bad)
movs
stc
mov
imul
in
daa
mov
retf
xor
ret
sbb
fsubr
push
fstp
mov
cmp
xlat
pushf
pop
sbb
or
imul
jp
mov
jle
fs
retf
gs
push
push
movs
nop
into
or
xchg
adc
mov
in
push
jge
outs
out
(bad)
scas
imul
jbe
pop
enter
push
jmp
clc
mov
aaa
inc
sahf
ret
mov
jmp
ss
inc
push
pop
mov
adc
push
(bad)
cs
mov
xchg
push
scas
loopne
or
das
inc
mov
cmp
xlat
jno
inc
mov
or
shl
out
xchg
addr16
xlat
pop
cmp
sahf
test
jo
inc
scas
(bad)
out
and
push
or
adc
outs
mov
dec
jb
(bad)
inc
xchg
dec
call
jb
stos
mov
idiv
xor
pop
xlat
imul
cmc
aas
cmp
pop
dec
cmp
push
inc
nop
push
push
stos
shl
lahf
xor
out
loopne
add
pop
push
sub
cmp
lea
add
popa
and
jnp
shr
add
or
mov
mov
aaa
icebp
fnstcw
jg
das
push
fldcw
sub
(bad)
lods
push
call
hlt
out
or
push
mov
js
das
xchg
sar
push
xchg
xor
mov
pop
scas
test
push
sbb
ss
xor
add
out
cmp
adc
mov
jge
shl
addr16
push
dec
push
inc
retf
xor
imul
mov
aas
idiv
push
outs
cs
(bad)
jmp
in
adc
ret
scas
aad
cs
fs
jbe
rol
pop
mov
fs
daa
jg
mov
jae
out
sub
scas
jp
pop
stos
xchg
and
(bad)
push
jmp
xor
jmp
adc
les
adc
dec
add
mov
test
mov
pop
(bad)
stc
mov
cmp
or
jecxz
jle
mov
(bad)
push
dec
xchg
sbb
jge
jae
pop
adc
jne
xchg
jle
outs
scas
pop
mov
cmp
pop
(bad)
push
ss
push
adc
dec
xchg
jge
sbb
out
mov
xchg
sbb
xchg
mov
dec
retf
aad
movs
push
push
or
mov
pusha
lods
xchg
sbb
cli
push
cmps
xchg
fld
or
mov
xchg
dec
push
adc
nop
cmps
loope
jmp
nop
inc
frstor
enter
sub
push
cmp
clc
rcr
or
adc
sub
xchg
outs
sbb
xchg
or
sub
pop
push
or
test
push
pusha
mov
dec
test
les
jae
jno
cmp
jge
inc
out
dec
mov
mov
(bad)
lods
push
or
xor
sub
lods
cmps
push
sbb
cmp
in
jecxz
push
xchg
int
clc
pop
mov
push
pop
ins
pusha
pop
shl
int3
in
jae
das
mov
scas
and
jle
add
dec
mov
sbb
ret
xchg
push
push
add
cmp
(bad)
adc
mov
jl
je
and
jmp
int3
pop
or
in
call
inc
in
(bad)
sbb
into
fldl2t
sbb
retf
xchg
movs
pop
jle
(bad)
jmp
into
inc
push
adc
jbe
xor
sbb
(bad)
out
sub
fldenv
pusha
and
push
les
sub
cmp
ret
pusha
add
add
fcompp
sar
inc
dec
dec
mov
popa
aam
xchg
sub
sub
inc
jbe
sub
xchg
fcmovnbe
jnp
cmp
push
jbe
mov
out
enter
xchg
jle
ds
call
or
cld
xchg
xchg
mov
lock
daa
fisubr
hlt
cli
test
ss
mov
popf
add
mov
sti
mov
aas
or
fimul
adc
dec
movs
loope
sbb
(bad)
add
adc
outs
and
add
fadd
cmps
mov
cmp
out
lods
or
dec
(bad)
cmp
ret
and
mov
imul
ins
arpl
ds
cmc
inc
push
lds
push
outs
out
loopne
xchg
mov
outs
aas
add
aam
(bad)
fld
add
cs
ror
cmc
fsub
dec
aaa
nop
jle
mov
cmps
dec
mov
adc
jmp
jnp
(bad)
sub
lock
shl
pop
in
sbb
pop
mov
sbb
push
mov
stos
mov
inc
cmp
adc
jl
cli
jo
fistp
les
ret
sbb
push
xor
mov
mov
xchg
and
arpl
inc
sub
leave
repz
fwait
push
jmp
xchg
shr
push
jno
inc
and
adc
(bad)
xor
lahf
iret
mov
or
and
call
hlt
mov
sub
push
ins
retf
mov
stos
inc
mov
ret
or
push
fnstsw
mov
add
sbb
pop
jle
jp
fnstsw
(bad)
out
std
pop
jb
mov
fidiv
sti
dec
sub
jecxz
bound
mov
aam
sbb
stos
fbld
or
test
es
sbb
out
jecxz
xchg
push
jae
es
scas
fwait
and
or
pop
imul
outs
cmp
jecxz
push
adc
cmp
arpl
pop
sub
adc
cmp
nop
jae
mov
mov
fwait
jne
sub
popf
pop
stos
into
test
xchg
or
sar
gs
retf
jg
sbb
mov
jmp
add
clc
repz
push
imul
pop
call
inc
push
adc
adc
mov
(bad)
test
sbb
and
daa
jae
jmp
jecxz
and
or
fstp
jge
enter
loopne
sahf
(bad)
mov
scas
jnp
out
lahf
hlt
cmp
es
sar
sub
fidiv
mov
sbb
shl
jmp
mov
sbb
ds
or
jb
mov
inc
push
sbb
shl
mov
add
mov
jbe
lods
mov
call
xchg
std
into
add
out
mov
xlat
clc
(bad)
and
inc
cs
sub
mov
push
retf
cmp
push
cmp
pushf
lds
movs
mov
loope
jb
sub
cwde
cmp
inc
xchg
test
bound
mov
or
fsubr
aad
pop
sbb
jg
dec
add
inc
fs
sub
pop
jecxz
and
or
call
pop
cvtdq2ps
(bad)
cwde
int3
inc
addr16
adc
scas
(bad)
popa
lea
cdq
fisubr
inc
sbb
or
mov
fild
mov
sub
jae
mov
fwait
inc
push
push
aad
loope
mov
inc
retf
mov
retf
adc
hlt
jecxz
and
push
mov
mov
sbb
test
push
call
inc
dec
call
enter
push
ja
jmp
popf
push
fstp
dec
rcl
out
dec
push
cmps
pop
je
icebp
pop
test
xchg
iret
xor
fwait
rcl
pushf
jge
and
(bad)
shr
mov
fstp
inc
(bad)
out
rol
mov
or
sbb
test
out
pop
aam
xor
mov
mov
ins
xchg
or
(bad)
lds
icebp
xor
push
(bad)
in
rol
popa
or
cmp
mov
rcr
mov
jp
call
fs
add
xchg
stc
hlt
neg
cmp
imul
sub
stos
(bad)
popf
daa
fs
lock
fidivr
mov
mov
cmp
outs
lea
retf
mov
les
jle
mov
in
cmps
dec
jp
cdq
jl
push
mov
test
and
mov
sti
sahf
mov
mov
pop
xlat
pop
adc
fcomp
cmps
mov
push
(bad)
cmc
inc
push
inc
jo
sub
pop
adc
aaa
int3
jecxz
or
imul
pop
in
pop
fld
imul
iret
cmp
or
aam
xchg
push
jmp
add
push
push
xchg
jnp
test
sbb
sar
imul
repnz
outs
push
(bad)
push
in
cmp
ror
outs
mov
adc
cs
and
pop
mov
push
and
shr
jl
dec
cmp
sbb
jge
out
fistp
add
in
and
mov
pop
(bad)
fist
or
ss
dec
or
sub
sti
in
xor
jno
repz
jmp
or
or
cmp
pop
(bad)
ins
pushf
xchg
pop
mov
sbb
addr16
sbb
mov
xor
icebp
or
js
gs
sub
dec
jnp
movs
xchg
hlt
pushf
sub
cmp
and
iret
adc
fimul
ficomp
and
rcl
test
mov
xor
pop
sub
fdiv
sbb
add
inc
scas
mov
fsub
gs
ficom
push
sub
or
xor
cmp
xchg
aaa
jle
scas
add
sbb
ins
out
add
mov
and
xchg
pop
sbb
fistp
addr16
ins
dec
mov
inc
repnz
inc
popf
mov
in
leave
mov
fimul
mov
inc
popa
mov
mov
call
pushf
dec
xor
xchg
js
fwait
shr
movs
jnp
enter
cmp
pop
cmp
mov
add
dec
ins
pop
movs
(bad)
int3
scas
xor
inc
sbb
outs
iret
icebp
jae
xchg
and
pop
out
ins
ss
mov
cdq
sbb
sub
xchg
and
test
xchg
iret
pop
jmp
jo
fadd
mov
jb
mov
jge
mov
cmp
shr
adc
lahf
sub
and
popf
and
fild
dec
add
loope
aam
jmp
call
outs
fs
add
ins
loop
mov
xchg
cld
cli
inc
leave
in
iret
stos
jmp
dec
dec
jns
mov
aaa
cwde
inc
movs
push
jmp
retf
(bad)
arpl
pop
dec
push
call
sbb
and
mov
ret
outs
pop
out
mov
cmp
movs
shl
xor
and
push
mov
out
mov
jecxz
jns
movs
xor
fld
add
sub
inc
sub
loop
or
test
mov
adc
sbb
and
xchg
dec
mov
and
push
lods
jmp
cmp
frstor
iret
dec
loop
mov
shr
shl
mul
mov
jp
(bad)
sub
stos
xchg
xchg
pop
call
or
fnstcw
out
jg
inc
dec
aam
out
rol
mov
mov
les
das
out
into
add
pushf
push
mov
out
jne
popa
cmp
pop
or
out
xchg
clc
push
jbe
in
and
(bad)
cmp
xor
xor
inc
jl
cmovo
ficom
fs
mov
pusha
pop
inc
stos
or
jae
fwait
sbb
mov
popa
sbb
push
sub
xor
pop
mov
cmc
lock
xchg
mov
in
ins
movs
fiadd
jp
sbb
sub
mov
mov
aam
sbb
ret
aas
leave
and
sbb
push
rol
dec
daa
in
push
out
cld
test
repnz
clc
mov
pop
iret
fist
call
jo
bound
rcl
movs
cwde
popa
loop
or
iret
or
xor
shr
(bad)
sub
sub
(bad)
inc
cmp
jmp
sbb
repz
pop
pop
or
and
cwde
push
mov
sub
in
lahf
sub
sbb
adc
test
jp
(bad)
loope
fchs
jae
and
push
icebp
loopne
cmps
mov
xor
out
cmp
dec
mov
retf
imul
mov
pop
int
push
jb
adc
stos
sar
and
jg
sub
cmp
adc
test
push
fbld
out
dec
test
xchg
pop
movs
out
mov
dec
cmc
ret
dec
xchg
inc
cmp
fiadd
dec
cmp
jecxz
mov
movs
movs
push
fwait
mov
jl
retf
(bad)
loope
push
call
dec
xchg
add
jge
outs
int3
xor
les
adc
test
out
(bad)
jno
mov
xchg
push
mov
call
mov
es
scas
scas
jb
int
mov
dec
adc
je
push
xchg
mov
pop
xchg
es
pushf
retf
shl
add
xchg
mov
push
pop
shl
(bad)
lock
or
retf
and
ja
mov
pop
std
jne
push
leave
inc
ja
stc
cs
xchg
sbb
addr16
les
jns
add
xor
imul
pusha
pop
pusha
xchg
imul
fistp
and
gs
xchg
sub
mov
scas
pusha
mov
xor
(bad)
mov
cmp
xor
shl
js
sbb
push
push
je
or
aad
in
gs
mov
mov
mov
cwde
push
int
xlat
popf
jbe
xchg
imul
jmp
add
pusha
bnd
dec
adc
imul
xchg
xchg
jnp
sub
arpl
mov
call
pop
xchg
and
or
ret
pop
cli
jl
lahf
inc
sub
sbb
sub
xor
cmp
add
xchg
mov
adc
popa
movs
push
inc
inc
mov
rcr
jbe
cmp
cmp
pop
pop
mov
cmps
neg
cwde
jo
movs
inc
sbb
mov
lods
mov
mov
sub
add
xchg
gs
mov
push
retf
fistp
xchg
repnz
cmp
push
aam
outs
je
add
pop
pop
(bad)
lods
iret
mov
adc
add
push
sub
cmp
(bad)
sub
sbb
pop
inc
mov
stos
push
add
enterw
ins
std
mov
push
retf
xchg
cmps
pop
xor
add
xor
aam
inc
stc
call
push
leave
loopne
pushf
aad
data16
xor
push
addr16
out
cmp
into
in
ror
lds
bound
pop
mov
es
xor
movs
shl
pop
jo
inc
inc
pop
adc
jmp
fstp
or
xor
out
cli
out
sub
ficomp
push
jp
push
jns
jmp
stos
ret
fs
ret
and
jecxz
hlt
dec
dec
mov
add
push
dec
xor
inc
pop
push
dec
and
sub
test
sbb
jnp
cmp
and
jge
rcl
lods
jae
rcr
fwait
inc
int3
iret
scas
jnp
adc
repnz
cmp
call
mov
ss
fwait
bound
inc
push
sar
sbb
out
mov
addr16
sub
shl
jne
shr
shl
ja
pushf
imul
lock
mov
arpl
mov
dec
jb
inc
cmp
outs
dec
add
xor
aaa
daa
stos
ja
cmc
dec
cmps
or
aaa
cmps
aad
push
mov
dec
adc
mov
mov
js
bound
sbb
enter
cmp
mov
std
int3
mov
pop
mov
dec
adc
(bad)
pop
cmovo
sub
imul
mov
and
or
jecxz
mov
retf
sbb
jecxz
jge
aaa
test
dec
mov
and
outs
xchg
mov
xchg
adc
adc
mov
(bad)
cmp
dec
mul
lods
ss
pop
sub
push
pop
mov
arpl
mov
sub
mov
xchg
sbb
retf
jns
mul
out
in
sbb
cli
mov
pop
or
and
add
fcmovbe
push
inc
mov
repz
push
in
dec
adc
pop
and
sub
sar
dec
mov
rcr
lahf
push
sub
(bad)
jmp
mov
pushf
lds
bound
inc
or
outs
in
jno
loop
sub
arpl
push
pop
loope
in
ds
je
jmp
cmps
arpl
xchg
fldenv
cli
outs
xor
xchg
push
or
(bad)
adc
jge
(bad)
icebp
pushf
xchg
outs
call
test
movs
cmp
(bad)
(bad)
fs
retf
and
ins
sub
shr
ret
sub
xchg
cmp
cmps
inc
add
push
ins
or
popf
in
loope
jno
xchg
xchg
xchg
and
cmps
push
push
test
mov
lods
pop
movs
mov
dec
push
pop
dec
mov
sub
inc
jl
clc
in
or
fs
jmp
fnstenv
and
jp
dec
inc
push
mov
imul
sbb
cmp
cmp
je
clc
retf
sbb
dec
ret
lahf
mov
dec
add
push
int3
mov
hlt
sar
or
jae
dec
mov
repnz
mov
jecxz
mov
bound
ss
inc
bound
addr16
pop
mov
mov
push
mov
(bad)
movs
cmp
dec
mov
je
ins
dec
retf
push
jle
adc
xchg
in
hlt
xor
aam
jo
mov
sbb
mov
sub
push
add
iret
and
mov
loopne
cdq
pop
scas
cmp
xor
push
push
mov
stos
loop
push
lds
sub
dec
leave
repz
out
jmp
add
sub
inc
adc
xchg
xor
add
fidivr
mov
(bad)
call
pop
inc
inc
mov
lahf
or
movs
lods
and
mov
or
fimul
mov
idiv
mov
mov
cmp
iret
mov
mov
push
mov
sub
scas
mov
out
jl
add
cmp
push
in
jno
pop
(bad)
and
ret
fucomi
out
mov
dec
nop
sbb
cwde
rol
jle
push
popa
clc
imul
mov
jbe
sbb
xchg
sbb
mov
fcmovbe
cmp
js
sbb
mov
(bad)
ins
vpavgb
jp
dec
sbb
nop
cwde
jmp
push
fstp
sbb
adc
and
xchg
mov
fdivr
hlt
jmp
dec
or
sahf
add
sub
xor
daa
and
or
pusha
jmp
or
sub
gs
cmp
dec
outs
cld
aad
jg
mov
ss
movs
into
cdq
das
popf
rcl
rol
mov
sub
retf
dec
jg
loop
fnstenv
sbb
cdq
jmp
pop
rcr
out
stos
xlat
cmp
sub
mov
sub
xchg
or
cs
lods
aas
jmp
sbb
daa
lods
xor
mov
inc
mov
cmps
aam
loope
inc
and
and
sbb
sbb
cld
nop
dec
push
inc
xchg
das
arpl
outs
mov
mov
loopne
mov
(bad)
jne
mov
pop
inc
sub
out
sbb
movs
cmp
xor
neg
gs
push
lock
xchg
mov
mov
cmps
push
stos
or
add
cld
sbb
out
dec
push
push
cmp
bound
mov
add
ins
add
jae
add
xor
adc
xlat
mov
or
hlt
jmp
scas
pop
sahf
sub
imul
push
ja
loope
push
ins
and
pop
retf
jmp
xor
push
shl
rcl
push
mov
fisttp
sub
imul
push
pop
xchg
fadd
mov
sbb
mov
and
pusha
pop
clc
pop
cmps
sub
sbb
pusha
(bad)
aam
imul
add
dec
movntq
xchg
or
mov
mov
jmp
int
jnp
jmp
inc
mov
jbe
es
ins
psadbw
or
rol
gs
pop
dec
in
inc
test
xor
lods
or
inc
mov
rcl
or
cmp
cdq
mov
mov
pop
lods
and
(bad)
stc
sbb
push
lock
push
adc
inc
adc
pop
sbb
adc
jnp
cs
lods
fisttp
icebp
mov
pop
dec
mov
out
xchg
fs
clc
and
shl
shl
ds
(bad)
adc
jmp
outs
int3
mov
xchg
test
add
adc
xor
sub
pop
jecxz
(bad)
in
pop
pop
jmp
xchg
mov
ins
or
adc
loop
sar
mov
sbb
(bad)
mov
sub
push
lea
sbb
lods
mov
push
out
cmp
sahf
and
sbb
movs
mov
pop
jle
(bad)
data16
mov
les
es
rcr
jo
(bad)
leave
popa
xchg
fcom
xor
xor
dec
fistp
ret
and
lods
pop
mov
adc
add
sahf
loopne
mov
adc
add
outs
stos
jns
int3
pmaddwd
ss
mov
push
inc
mov
outs
(bad)
mov
add
jle
sbb
sahf
fistp
inc
jp
out
in
dec
or
std
fisttp
xchg
out
mov
adc
cmp
dec
jecxz
mov
push
cwde
mov
fbstp
loope
cs
push
fsubr
hlt
jle
inc
jl
je
cli
dec
jl
push
sub
nop
sub
sbb
jo
stc
pop
mov
xor
mov
jns
imul
lea
mov
outs
cmp
pop
sub
jecxz
sub
loope
xchg
mov
repnz
xchg
rcr
jge
mov
inc
cmps
fist
sbb
and
and
repz
shl
push
and
in
pop
pop
popf
in
and
jmp
add
fsubr
jmp
jmp
mov
movs
dec
das
retf
outs
adc
ret
lahf
int
mov
xlat
mov
ins
popa
inc
scas
cmps
inc
not
sahf
cmp
loop
sub
push
jno
in
test
lods
fwait
add
(bad)
in
nop
mov
jle
data16
adc
mov
int
(bad)
jecxz
data16
mov
or
(bad)
dec
ret
xchg
movs
sub
cdq
cli
mov
cmps
popf
xor
jle
sbb
mov
not
aad
cmp
pop
push
cmp
cmp
lds
call
data16
inc
mov
rol
add
fsub
out
arpl
add
adc
in
lods
leave
imul
test
mov
cmp
cwde
sbb
jae
out
stos
mov
ss
cld
fild
mov
jne
in
cmp
leave
pop
inc
adc
nop
movs
std
enter
je
ret
xchg
outs
sti
cwde
add
mov
push
adc
jge
int3
mov
shr
call
cld
ja
inc
pop
xor
rcr
jnp
jecxz
shr
ret
daa
pop
pmaxub
ins
mov
inc
xor
mov
lahf
inc
sub
adc
cmp
pusha
les
sub
cs
out
inc
or
sub
xor
xor
std
inc
push
inc
lds
sti
movs
ret
cmp
ret
imul
repz
xor
adc
xlat
call
or
xchg
xchg
dec
dec
xor
lock
adc
pop
pop
sub
add
mov
test
add
lods
mov
outs
mov
lods
or
mov
cdq
xchg
mov
sti
stos
mov
adc
mov
dec
and
jb
inc
jns
sub
mov
enter
mov
inc
sbb
dec
into
jo
fadd
sbb
mov
sbb
pop
mov
or
jl
jmp
mov
loop
out
adc
fwait
or
adc
xchg
icebp
adc
inc
cmp
push
jb
or
test
outs
adc
loope
pop
aaa
xchg
jbe
test
aas
xor
stos
sbb
xchg
or
icebp
sti
cmp
dec
inc
ins
sti
xchg
dec
jp
int
mov
repz
mov
inc
in
scas
lods
xor
call
dec
repz
daa
mov
stos
pop
dec
xor
jge
cdq
xlat
clc
xlat
dec
sbb
test
and
adc
jg
mov
xchg
or
sar
es
pushf
push
movs
sub
mov
ror
fidiv
jb
mov
rcr
xchg
adc
sbb
mov
sbb
inc
data16
(bad)
repnz
adc
and
pushf
dec
jmp
(bad)
aam
dec
aad
or
xor
es
in
loope
loopne
adc
dec
out
daa
scas
fnsave
(bad)
and
pop
mov
in
psllw
mov
mov
dec
in
xchg
mov
ds
push
ss
nop
jmp
push
fcmovnbe
cmp
xlat
(bad)
jae
jno
dec
fwait
inc
pusha
mov
fstp
retf
lods
bound
shl
repnz
out
xor
cmp
shl
dec
lahf
sbb
xchg
mov
or
js
pop
ja
jb
scas
das
test
clc
test
dec
popf
outs
pop
add
ja
cmp
aaa
mov
aam
fcom
pop
test
sbb
test
in
and
cmps
push
test
pop
and
jmp
xchg
inc
xchg
push
add
xor
sbb
pop
loopne
fmul
iret
stc
(bad)
adc
outs
shr
mov
sbb
iret
cmp
mov
imul
mov
stos
fst
into
sub
sub
fs
ror
jne
jecxz
dec
int
and
hlt
pop
sbb
add
xor
aas
retf
mov
test
dec
sbb
xchg
sub
(bad)
xor
inc
dec
(bad)
psrlw
lds
retf
fnsave
pop
sbb
loop
aas
and
ror
push
mov
shl
xchg
mov
cmp
in
ret
clc
xchg
inc
test
push
and
stos
mov
fwait
inc
push
cli
dec
pop
fwait
mov
mov
imul
retf
push
aas
enter
pushf
retf
retf
inc
cmp
rcr
loope
ins
retf
cmps
jecxz
hlt
mov
lahf
shl
jmp
pop
pop
xor
int
pop
xlat
mov
adc
enter
repnz
ins
xchg
inc
dec
in
daa
pop
aad
rcl
cmp
ds
mov
jbe
fidiv
add
and
inc
fbstp
fld
and
jns
mov
inc
and
mov
jae
pop
adc
push
jmp
call
popa
mov
lock
(bad)
cmc
(bad)
pop
cmp
ins
loop
jbe
jg
xchg
sub
xlat
js
fdivr
ds
cwde
cmp
outs
sti
rol
mov
sbb
inc
jbe
xchg
lahf
jbe
dec
inc
rcl
xor
xor
sahf
mov
cmp
adc
sub
ja
mov
push
jmp
je
adc
jmp
mov
(bad)
dec
mov
ret
jae
mov
retf
in
fsub
aad
adc
jns
into
cmp
enter
sbb
(bad)
xchg
mov
xor
out
ss
xchg
xor
xchg
and
call
sbb
loope
fs
adc
dec
lds
rcr
fwait
test
cmps
inc
arpl
arpl
add
call
sub
(bad)
xor
ja
(bad)
push
into
cmp
add
push
xor
rcl
cs
pop
fcomp
mov
stc
adc
jns
sbb
cld
neg
and
mov
and
and
mov
inc
mov
jmp
pushf
jae
cmp
pop
retf
ins
daa
mov
test
fist
dec
mov
(bad)
lods
mov
mov
adc
outs
mov
dec
mov
icebp
inc
sar
ret
jl
aam
adc
jo
in
mov
push
(bad)
fs
call
sbb
stos
xchg
sub
pop
fiadd
push
in
cmp
mov
jge
inc
das
dec
cs
dec
xlat
loope
inc
jp
stc
jb
int3
add
sbb
int
or
jbe
outs
mov
(bad)
sbb
sbb
test
mov
mov
in
stc
mov
mov
lock
lahf
or
adc
sbb
not
inc
movs
add
ret
(bad)
adc
aad
fnstsw
sbb
push
sbb
mov
js
adc
push
jmp
(bad)
pop
pop
mov
out
stc
xchg
aad
sbb
push
popa
lea
popa
sub
inc
call
jns
adc
pusha
(bad)
jmp
ret
loopne
pop
addr16
sub
test
ret
clc
dec
jecxz
int3
xor
icebp
test
dec
test
mov
mov
in
mov
sub
inc
sar
cmps
dec
fwait
iret
jg
loop
popa
add
hlt
loope
lds
dec
ret
add
sbb
or
pop
cmp
dec
aas
enter
int
sar
xchg
pop
fcom
push
popa
int3
xrelease
mov
les
ret
sub
mov
dec
sub
and
pushf
sub
mov
mov
jmp
push
js
call
test
mov
cmp
mov
hlt
jle
xchg
pop
cmp
jle
jb
mov
sti
rcr
mov
pop
sub
jmp
pop
mov
mov
mov
cmp
mov
(bad)
sbb
mov
sub
xor
test
inc
sbb
jle
mov
pop
test
push
ja
sub
adc
adc
sub
cmp
dec
or
xchg
xor
or
jne
sti
xor
and
pop
add
push
ret
movs
shr
or
(bad)
in
sbb
xchg
inc
das
mov
jbe
rol
sub
in
call
shl
or
sub
shr
imul
lock
cmp
lods
pusha
inc
fiadd
popa
or
sub
arpl
lock
mov
cmps
movs
or
scas
daa
fcomp
jp
call
adc
push
rcr
xchg
call
mov
in
shl
sti
mov
fiadd
scas
arpl
ins
push
jmp
and
ss
outs
repz
inc
clc
outs
cwde
popf
pop
dec
or
mul
xor
mov
shl
repz
in
sbb
call
lea
jecxz
sbb
fstp
push
or
mov
repz
xor
mov
shl
adc
xlat
(bad)
jmp
test
adc
jnp
jno
mov
xchg
mov
or
xchg
xor
daa
sar
xchg
ret
push
mov
popf
ret
fisub
dec
movs
test
xor
gs
or
cmp
mov
mov
and
sub
pop
cmc
cmp
cmp
sbb
aas
js
pop
das
jp
push
or
push
shl
jae
sub
mov
rcl
or
cmp
cmps
sbb
mov
popa
cmp
mov
rol
pop
sbb
mov
sub
mov
std
inc
jp
xor
fnstenv
loop
inc
and
daa
cwde
push
sbb
arpl
das
fst
lods
xor
repz
int3
loope
or
adc
push
mov
test
mov
imul
test
jecxz
pop
pop
js
cmps
gs
jl
mov
mov
hlt
xchg
xlat
mov
xor
dec
add
imul
dec
adc
mov
pop
cmp
fimul
sub
adc
and
dec
pop
sbb
loop
ja
pop
xchg
loope
daa
nop
jle
imul
cwde
add
cmp
jecxz
ins
sub
(bad)
xor
cs
sahf
sbb
fcomp
pop
push
leave
call
cdq
mov
imul
lods
daa
sbb
mov
fcmovnu
cmp
rol
mov
ds
aam
sar
pop
or
cwde
mov
push
call
ss
sbb
stc
mov
add
mov
dec
mov
mov
dec
mov
pop
cmp
repz
fcomp
add
jge
lods
inc
lds
dec
push
mov
test
(bad)
(bad)
call
fdivr
inc
xor
out
scas
cmps
into
push
adc
(bad)
xchg
rol
add
sub
test
sub
push
push
xor
test
test
add
and
and
mov
mov
out
ror
fisubr
cmps
stos
pop
sbb
add
mov
sbb
mov
outs
pop
sub
xor
sbb
lea
pop
addr16
fcmovu
int3
xchg
or
cmp
test
push
mov
adc
movs
out
aaa
add
push
inc
pop
in
je
mov
and
stos
call
jl
mov
or
push
mov
mov
lods
(bad)
and
sub
test
pop
mov
xor
add
push
iret
jmp
push
in
mov
adc
jmp
outs
sbb
jnp
ss
sar
cwde
lds
iret
dec
imul
aas
out
fcom
sbb
call
add
and
sbb
push
sahf
outs
add
sub
sar
pusha
sub
adc
fwait
push
jae
cmp
push
les
(bad)
cdq
xchg
mov
imul
pop
mov
jo
jmp
cld
dec
and
dec
je
dec
jge
mov
cmp
loope
jmp
mov
leave
jo
ins
hlt
push
lods
jle
or
adc
fcom
inc
lock
repz
xor
xlat
sub
and
and
mov
nop
pushf
xchg
and
jg
jb
pop
aaa
das
stos
or
or
or
dec
shl
leave
inc
jb
xor
dec
push
loop
pop
test
pop
test
xchg
mov
sbb
hlt
mov
add
arpl
pop
in
push
fisttp
adc
or
adc
inc
jno
mov
dec
mov
lds
push
sub
ins
inc
aam
out
jle
jle
mov
pop
int3
mov
push
in
push
jle
out
push
pop
dec
and
jae
sub
inc
pop
dec
loop
ins
cmp
(bad)
cld
int3
jae
int3
in
lock
aad
jecxz
adc
leave
test
jb
rcr
movs
inc
sub
jmp
fs
aam
push
(bad)
movs
cmp
cmp
(bad)
lods
dec
inc
pushf
jbe
mov
lahf
stos
mov
mov
test
sbb
sbb
push
stc
xchg
push
xchg
add
cmp
in
sbb
push
out
sbb
push
shl
imul
mov
in
jl
lods
and
les
fmul
test
and
jmp
push
xchg
xor
add
adc
cmp
mov
cmc
aaa
inc
dec
std
mov
cmc
ror
xor
push
mov
fist
xlat
dec
daa
push
(bad)
dec
fnstcw
dec
dec
ret
imul
jmp
adc
mov
out
ret
sbb
mov
xor
push
leave
jl
fldenv
aas
jnp
into
jns
stos
add
out
jbe
dec
repz
mov
or
pop
into
xor
fdivp
ret
movd
adc
inc
imul
jns
test
bound
xchg
and
add
enter
mov
xchg
mov
xchg
cmp
imul
inc
pusha
jbe
pusha
and
cmps
adc
sbb
pop
push
sahf
sbb
inc
ja
jnp
xchg
adc
push
adc
cmp
aaa
add
loop
xchg
mov
into
or
adc
in
mov
ret
sahf
sub
xchg
jb
xor
xchg
adc
or
cmps
or
inc
inc
xchg
xchg
call
fmul
push
cmps
es
icebp
and
jp
jo
std
or
(bad)
sbb
shl
dec
daa
pop
inc
and
inc
sbb
push
rol
jb
inc
arpl
inc
add
lods
inc
icebp
out
cmp
fs
pusha
fcomp
sub
stc
rol
adc
rcl
xchg
dec
daa
sbb
stos
mov
pop
xchg
sti
sar
pop
(bad)
fldcw
repnz
std
add
inc
mov
mov
out
sti
repnz
or
cmp
imul
sbb
xchg
inc
pop
repz
sbb
nop
je
mov
cmps
jbe
int3
lea
dec
outs
push
ret
jb
push
push
jno
jb
jns
test
pop
repnz
mov
mov
mov
add
shr
mov
adc
arpl
mov
pop
imul
inc
fdivp
mov
cmp
add
or
mov
adc
fimul
mov
jge
int3
mov
inc
jno
add
sbb
jecxz
aas
cld
popa
adc
scas
lahf
jmp
test
push
in
js
(bad)
fnsave
ins
xor
pop
jg
push
int
or
sub
dec
cmp
inc
in
jb
jnp
call
or
pop
fnstenv
sub
out
sub
aad
adc
xchg
(bad)
sbb
adc
ret
push
aaa
add
push
cmps
pop
scas
inc
mov
add
cmps
ins
sub
loope
inc
jnp
cmp
pop
das
mov
fwait
sahf
pop
sub
mov
or
mov
dec
cli
xchg
fcom
and
and
outs
ret
mov
loop
sbb
push
adc
popa
(bad)
popw
jl
add
(bad)
sti
add
xchg
add
mov
add
dec
pop
xchg
fnstenv
ret
daa
sub
mov
mov
dec
mov
push
adc
stc
jg
add
enter
scas
leave
mov
shl
cmps
ret
mov
pop
inc
inc
dec
mov
xor
jle
mov
sub
loop
mov
fidivr
cmp
mov
or
dec
cmp
jmp
push
popa
les
inc
in
std
loope
xchg
cmp
mov
scas
and
sub
push
std
lods
add
xor
rcl
fwait
sub
jmp
cdq
fisubr
sub
sub
pop
out
icebp
call
mov
pop
cwde
clc
mov
jbe
add
mov
add
btr
sbb
adc
push
sar
jmp
out
daa
(bad)
push
test
mov
(bad)
xchg
cwde
mov
jns
bound
or
loope
loop
push
sar
icebp
add
and
or
xchg
mov
pop
cld
fld
add
dec
xor
mov
addr16
std
scas
shl
data16
sbb
adc
adc
cwde
out
cli
pop
sub
fild
nop
mov
or
and
int3
mov
cmp
cwde
mov
out
adc
push
movs
pop
in
mov
gs
call
cld
dec
add
mov
mov
je
pop
into
sbb
or
jge
in
pop
imul
mov
dec
push
out
rcl
data16
(bad)
lahf
xchg
add
pusha
push
mov
sbb
aaa
gs
push
test
fcomi
aad
jne
jae
jle
fwait
(bad)
mov
aad
add
shl
fbstp
outs
xchg
add
inc
dec
imul
idiv
mov
push
push
outs
jne
adc
adc
loope
add
or
dec
add
je
icebp
ret
cmp
std
add
stc
movs
push
add
hlt
xor
dec
add
repnz
mov
pop
ins
int3
loope
pop
pop
into
jge
xchg
or
push
sbb
ss
jnp
mov
xchg
cdq
or
jno
xlat
mov
and
cmp
mov
ja
ret
fst
sub
and
mov
add
fwait
aas
lds
fild
jo
push
jg
loopne
push
or
pop
adc
mov
(bad)
das
and
add
icebp
sub
push
gs
(bad)
jbe
ins
inc
xchg
imul
lods
push
or
cmp
xor
jl
xor
mov
pop
inc
cmp
enter
lock
pushf
nop
mov
adc
push
bnd
lods
in
inc
mov
arpl
mov
loope
jno
adc
inc
push
mov
jl
jl
mov
test
ret
add
or
cwde
jae
add
imul
(bad)
call
or
ss
mov
ret
stos
pushf
add
xchg
cld
js
adc
fisttp
test
inc
xor
je
pusha
stos
xor
dec
jmp
(bad)
xchg
xchg
ret
out
lahf
ret
or
push
fisub
(bad)
xor
repz
aam
xchg
daa
and
es
pop
fist
aad
mov
dec
cmps
inc
stos
xchg
add
shl
daa
xchg
or
dec
ret
xchg
cs
sub
and
inc
(bad)
fwait
shr
scas
or
cmp
xchg
out
fnstcw
shl
mov
jecxz
xchg
ror
test
xchg
jmp
pop
mov
pop
jecxz
clc
sahf
jnp
and
mov
sahf
jo
sbb
add
rol
sbb
dec
(bad)
pop
or
jle
repnz
xchg
sub
dec
adc
ds
mov
fsubr
in
pushf
xor
and
clc
pusha
sub
mov
adc
jg
test
add
test
lock
(bad)
and
jb
xor
jg
dec
or
(bad)
jne
dec
stos
push
hlt
imul
push
pop
mov
mov
or
outs
popf
fisubr
pop
bound
cmp
xchg
jae
stos
cmp
dec
in
data16
(bad)
paddusw
cmps
push
(bad)
xor
and
pop
cwde
retf
scas
mov
inc
out
ficomp
sbb
fcomi
ja
fld
inc
dec
and
sbb
adc
sub
fimul
call
daa
push
in
and
ret
es
fs
sub
test
arpl
push
imul
arpl
retf
sub
test
stc
mov
hlt
xor
inc
jp
js
mov
xchg
ja
fwait
sub
adc
stos
sahf
rcl
xor
inc
mov
inc
or
xchg
nop
loope
sbb
push
mov
dec
pop
push
sub
sti
mov
shl
mov
or
pop
mov
scas
ret
(bad)
lock
xchg
mov
fsubp
lods
cmc
jle
lods
jo
std
cmps
aaa
and
into
mov
xor
shl
cmps
xor
sar
loopne
pusha
inc
mov
(bad)
sbb
hlt
dec
jle
shr
loop
push
sub
dec
inc
push
inc
adc
jle
and
enter
rol
retf
jo
in
or
jo
and
dec
sub
(bad)
xchg
mov
(bad)
es
lds
int
(bad)
inc
(bad)
in
shr
bnd
push
(bad)
aaa
cli
sub
mov
mov
mov
or
vpcmov
retf
cld
sub
sub
mov
repz
pop
add
jnp
dec
ins
mov
mov
push
push
sbb
mov
stos
mov
ins
push
jae
pop
fisubr
rep
cmps
mov
sbb
mov
adc
pop
sbb
imul
jge
aam
xchg
pop
mov
inc
das
in
jle
lods
lds
dec
sbb
inc
sahf
adc
cli
pushf
and
(bad)
fcom
jle
jp
adc
sbb
sbb
xchg
add
jp
mov
push
and
retf
retf
mov
stos
inc
sub
sbb
sti
sub
xchg
vmread
ja
lds
xor
xor
pushf
cli
xchg
sbb
dec
jle
xor
movs
loopne
bound
fisub
mov
mov
xor
push
rep
(bad)
mov
sahf
mov
push
add
dec
and
xchg
orps
xor
xchg
xchg
xlat
jle
inc
int3
adc
std
xchg
and
xchg
sbb
or
es
and
imul
(bad)
ins
dec
xchg
cwde
jno
loopne
pop
pxor
lahf
fstp
push
rol
mov
fs
repz
sbb
or
dec
outs
pop
ret
inc
je
xor
push
dec
cmp
nop
bound
inc
cmps
fidiv
(bad)
mov
sti
and
xchg
push
daa
(bad)
mov
fistp
cmp
jge
pop
cmc
push
mov
or
sbb
outs
sub
mov
ret
movs
jne
jo
jb
gs
jle
sub
sbb
call
adc
fcomp
pop
cmp
cli
adc
inc
js
lea
cwde
and
push
dec
ins
(bad)
icebp
test
ror
mov
cwde
adc
lock
hlt
adc
add
mov
adc
cld
outs
add
xchg
push
iret
cwde
div
mov
jl
test
push
cmp
cmps
mov
adc
pop
aad
cmps
add
mov
ins
mov
mov
clc
fwait
sti
sti
outs
sbb
repz
xor
jle
mov
sbb
ins
imul
xchg
dec
jge
mov
outs
repnz
inc
jmp
sub
jmp
add
xor
sar
fcom
enter
inc
push
out
cmps
or
sub
cmp
add
xor
fwait
scas
jbe
ret
clc
out
or
mov
pop
ja
mov
mov
sub
xor
mov
and
movs
out
pop
lods
popf
ins
pusha
call
mov
jae
icebp
cmp
leave
xor
imul
scas
mov
add
int
icebp
push
add
shl
and
aaa
int3
pusha
mov
aam
push
jle
sbb
push
fidiv
lea
test
(bad)
add
push
in
pop
xchg
cmp
or
xor
sbb
sub
jmp
cmp
xor
dec
xchg
out
pop
int
pop
dec
and
leave
(bad)
add
mov
jno
mov
pop
xchg
push
(bad)
data16
dec
mov
ins
and
arpl
lods
bound
fdiv
outs
add
sub
cmp
fldenv
adc
aam
cmp
jmp
jecxz
add
add
fiadd
pop
push
popf
shr
mov
jmp
adc
in
mov
add
out
cmp
dec
pop
pop
popf
cmps
stc
xchg
lods
cmp
sub
mov
dec
or
mov
and
push
and
scas
xchg
or
addr16
sub
xor
jae
shl
add
push
mov
xchg
nop
test
mov
fld
call
mov
xchg
add
enter
les
adc
dec
and
movs
add
dec
and
pop
xlat
jge
jmp
sub
aad
daa
dec
fimul
xchg
lahf
mov
jo
push
inc
jnp
aad
jne
pusha
xor
mov
loope
(bad)
adc
add
pop
ret
inc
inc
out
inc
xchg
fcmovne
xchg
or
mov
xchg
pop
jo
push
cmp
inc
xchg
xchg
xor
neg
jl
xchg
sar
push
xchg
pop
cli
and
push
pop
mov
pop
data16
jge
fcomp
fwait
jle
fs
xchg
or
or
dec
xor
lods
ret
shr
mov
hlt
add
(bad)
addr16
xlat
das
and
dec
out
adc
push
ins
add
retf
retf
es
iret
fs
stos
(bad)
enter
sub
mov
repnz
outs
and
jo
fwait
or
lock
xchg
js
fst
call
test
cld
fistp
jno
iret
sar
pop
jl
xor
cmp
mov
add
sub
xchg
adc
mov
(bad)
nop
sub
mov
push
sub
fdivrp
rcl
cmps
mov
add
fwait
sub
xchg
xchg
cmp
popa
loopne
push
es
fst
cmp
xchg
movs
adc
aad
lahf
push
xchg
icebp
add
xor
lock
pop
(bad)
bound
ret
jp
(bad)
into
inc
xchg
das
inc
pop
fisub
or
pop
and
outs
jmp
sub
outs
outs
cwde
rcl
sub
or
or
xchg
jle
dec
xor
jae
add
dec
xlat
popa
mov
sahf
retf
bound
scas
add
shl
(bad)
mov
imul
scas
jmp
fstp
aaa
push
scas
nop
pop
inc
or
push
(bad)
fimul
shr
pusha
jbe
push
jp
cmp
cld
xchg
inc
inc
pop
mov
mov
lea
mov
push
lea
ror
leave
push
pop
div
mov
out
mov
pop
ss
or
cmps
test
add
and
sub
jmp
jmp
lods
ins
push
mov
retf
mov
ins
adc
out
and
push
jmp
pop
jl
fxch
ins
sub
xor
adc
(bad)
fcomp
fcmovnb
hlt
or
push
pop
jns
jmp
lods
mov
out
imul
xchg
cmp
cmps
outs
mov
out
in
call
cmps
sar
fs
mov
xchg
adc
jmp
dec
gs
pop
xchg
mov
jnp
fsubr
jle
repnz
leave
sbb
xchg
mov
cld
ins
jge
inc
adc
mov
test
jmp
xor
mov
pushf
lea
mov
sub
mov
(bad)
fidiv
push
pmullw
pop
or
mov
das
mov
xchg
add
js
in
pop
clc
jecxz
into
sub
add
leave
push
pop
lds
es
pop
cmp
call
(bad)
cmp
aad
sti
and
mov
xadd
loopne
cmp
sub
sbb
jmp
test
mov
daa
and
push
adc
leave
inc
(bad)
mov
cmps
(bad)
sbb
in
gs
lods
pop
xchg
mov
pop
call
sbb
mov
jmp
push
dec
and
push
outs
movs
push
outs
jne
retf
cmp
test
mov
call
aam
adc
cmps
xchg
jno
adc
cli
repz
and
inc
test
sub
mov
test
ret
idiv
mov
aaa
ret
pop
(bad)
cmps
mov
xor
test
aad
cmp
mov
inc
add
pop
sbb
jle
mov
dec
push
sub
in
loop
(bad)
jge
or
pop
pop
and
leave
xchg
(bad)
jmp
pop
add
and
(bad)
push
test
jae
cmp
in
push
pop
mov
cmps
jmp
inc
cwde
add
pop
leave
jg
dec
sti
push
cli
mov
pop
pop
clc
call
push
add
and
repnz
dec
aad
jb
mov
adc
pop
jo
jmp
add
and
outs
jl
popa
push
ret
xor
add
mov
popa
mov
outs
fidivr
fild
mov
aaa
ret
dec
(bad)
imul
rcl
mov
pop
(bad)
mov
xor
xor
cmp
clc
jns
push
inc
dec
mov
pop
stos
dec
sbb
mov
push
stc
mov
xchg
mov
xchg
cdq
loop
mov
adc
jp
cs
cmp
dec
xchg
sbb
push
mov
je
adc
aas
jmp
push
aam
push
inc
mov
and
push
mov
cdq
bound
sub
retf
xchg
adc
popa
jne
cmp
fdivrp
push
add
loope
ret
mov
xor
or
adc
mov
sbb
stos
outs
pop
ror
je
ret
sbb
jl
cmps
cmp
stos
push
add
sub
rol
cmp
call
arpl
push
push
mov
outs
cmps
mov
mov
or
test
adc
pop
mov
push
outs
adc
jo
mov
and
int
cld
sbb
inc
and
mov
ret
lods
and
add
into
shr
(bad)
scas
adc
sub
arpl
(bad)
and
pop
sbb
jnp
jnp
push
ror
sub
push
jnp
in
push
push
retf
pop
cmps
jne
fldenv
rol
adc
jl
fcomp
test
arpl
mov
mov
cmps
aas
test
hlt
or
ror
mov
sar
cmp
sbb
sbb
pop
cmp
push
pushf
mov
dec
adc
jo
pusha
and
fs
or
movs
imul
inc
adc
ss
in
sbb
or
jge
loopne
fs
add
in
jnp
cs
dec
adc
inc
push
arpl
mov
mov
dec
call
ins
jb
rcr
mov
mov
mov
inc
sub
xchg
push
out
pop
(bad)
aas
fs
cmps
xor
mov
jne
scas
bound
ret
das
add
adc
shl
dec
mov
fisub
jg
add
mov
popa
ja
pop
xor
adc
mov
dec
cmps
popf
mov
jecxz
fstp
ret
outs
push
jae
pop
inc
xchg
lahf
in
or
retf
ror
xchg
mov
push
mov
(bad)
fisubr
push
out
xlat
xchg
ret
sbb
data16
and
(bad)
xchg
adc
shl
sub
push
cli
dec
pop
test
cdq
jae
pop
shl
xchg
stos
or
cmp
mov
sub
pop
cld
rcr
sub
or
sbb
cmp
movs
lods
mov
cmp
test
(bad)
dec
pop
in
inc
ins
arpl
es
sbb
gs
xchg
dec
pusha
mov
mov
ins
jg
mov
inc
push
out
out
mov
dec
cmps
out
inc
add
loope
or
xor
dec
dec
dec
test
loop
adc
xor
repnz
or
mov
imul
fdivr
pminsw
push
(bad)
xor
popa
mov
add
jnp
nop
cmp
sub
retf
pop
mov
imul
cmp
xchg
push
rol
mov
push
popa
cmc
inc
add
sub
push
mov
shr
ins
cs
jb
add
inc
popf
xor
neg
jmp
rol
movs
inc
inc
mov
enter
push
dec
enter
fs
in
mov
or
pop
push
call
imul
and
inc
jle
mov
sti
push
aam
inc
dec
(bad)
int
sbb
cmps
xor
mov
fidiv
mov
push
xchg
popf
dec
push
in
xchg
aas
fild
inc
pop
mov
xor
outs
je
jg
mov
dec
mul
mov
sbb
push
ret
ins
jnp
add
inc
(bad)
fsubr
jle
sub
cmp
mov
mov
adc
std
xor
dec
fst
add
or
xor
sbb
and
adc
mov
mov
repnz
and
xor
dec
out
jle
mov
mov
pop
icebp
nop
mov
pop
es
adc
and
add
(bad)
fimul
adc
(bad)
test
jbe
test
mov
clc
into
or
xchg
mov
les
out
sbb
icebp
loopne
xchg
imul
dec
scas
inc
ret
outs
xchg
in
lea
imul
jns
cmc
add
fimul
jne
cmp
cdq
mov
adc
pop
fs
inc
je
pop
and
sub
call
repnz
xchg
ds
mov
adc
fld
sbb
mov
inc
mov
xchg
les
sti
ret
push
aaa
ficomp
fdiv
cs
mov
mov
call
or
aad
sbb
cmp
dec
enter
xor
jae
sub
test
cmp
test
ja
mov
call
clc
mov
fbstp
adc
xchg
push
ja
xchg
psrad
push
push
lea
call
movs
and
aam
mov
ins
in
fs
jle
jmp
fwait
stos
jmp
mov
test
jbe
pop
jb
jno
or
jo
cli
push
fcomip
call
sub
leave
cmps
(bad)
pop
push
push
stos
test
add
cmp
aas
mov
es
ficom
fldenv
ja
jecxz
arpl
xchg
cmp
ja
rol
int
in
mov
fnstenv
cwde
mov
fwait
popf
jmp
repz
sub
xchg
sbb
push
xor
rol
sbb
xchg
int
sub
das
lods
xor
sbb
test
pop
dec
xor
mov
dec
loop
ficom
pop
ins
xor
push
mov
xchg
xchg
mov
fcom
pop
mov
ror
sbb
sbb
mov
pop
in
repz
xor
xlat
rol
into
or
stc
inc
and
fimul
mov
scas
fist
inc
ds
and
movs
call
inc
adc
rol
or
mov
inc
xor
imul
fidiv
icebp
push
fist
shl
and
xchg
ret
mov
(bad)
pop
xchg
and
imul
in
sbb
mov
xchg
and
sub
sti
cwde
int3
scas
pop
cs
test
cmps
sbb
cmp
retf
scas
je
cli
sub
push
retf
xchg
dec
imul
mov
wrmsr
pusha
mov
mov
pop
cmp
popf
(bad)
xor
(bad)
or
add
in
mov
aas
shr
lea
pop
sub
dec
sar
outs
aaa
xor
fwait
scas
add
ret
test
fs
shl
or
jnp
sub
call
gs
xchg
mov
mov
mov
add
pop
cmp
cmps
les
mov
push
add
and
cld
push
data16
inc
test
(bad)
mov
lahf
sub
sub
fstp
jmp
adc
rol
mov
ja
push
fs
cmp
cmp
dec
push
dec
cmp
xor
inc
fist
sbb
xor
or
loope
add
push
xchg
jl
std
xchg
jp
ds
sub
cmp
mov
test
cwde
call
ss
push
cmc
or
xor
int3
ins
pop
in
sbb
mov
adc
jecxz
pop
cmp
add
loopne
not
mov
jle
dec
hlt
mov
mov
clc
call
inc
fs
cs
daa
lods
or
fcom
push
js
push
push
sahf
pop
xor
mov
fld
(bad)
das
push
mov
mov
cmps
and
test
add
xchg
(bad)
fmul
add
loop
jae
test
xor
xor
mov
and
test
jmp
nop
and
push
and
mov
sub
and
test
inc
xchg
sbb
push
cmp
lahf
(bad)
std
lods
dec
cmp
in
dec
pushf
mov
in
and
lods
aaa
outs
lock
mov
cmp
sbb
inc
aaa
shl
mov
dec
and
or
fld
aad
jl
adc
call
popa
(bad)
outs
mov
jle
xor
out
mov
jnp
sti
mov
movs
cld
test
lods
test
or
mov
rep
pop
cmps
pop
dec
sub
inc
cmp
sbb
pop
in
les
push
lods
aaa
stos
sbb
test
push
fwait
rol
sbb
inc
sti
sbb
jmp
adc
ds
xor
pop
into
shr
jno
and
les
mov
mov
aaa
cdq
push
outs
inc
mov
xor
xlat
js
mov
mov
or
arpl
jge
imul
popa
in
inc
mov
mov
pop
dec
pop
add
repz
push
push
and
and
daa
jecxz
aad
jne
fsubr
sub
ins
push
add
scas
out
dec
out
cmp
test
mov
test
loop
es
pop
xchg
(bad)
call
xchg
aas
add
imul
fdiv
xor
xchg
mov
jb
stos
(bad)
cdq
dec
dec
add
mov
adc
nop
pop
fsub
or
add
outs
adc
pinsrw
shl
(bad)
cmp
dec
mov
pop
xchg
dec
js
outs
mov
push
dec
xchg
sbb
loopne
dec
jae
fidiv
xlat
sysexit
cmc
push
pop
bound
cdq
sub
push
daa
or
fdivr
pusha
add
js
cmps
leave
mov
mov
pop
stos
mov
and
les
cmps
push
dec
xor
ins
cmps
mov
test
xchg
jecxz
cs
push
std
mov
jo
imul
aas
enter
mov
daa
sbb
popa
mov
xchg
mov
sub
retf
(bad)
xor
pushf
out
inc
adc
adc
xchg
mov
push
out
aas
je
jle
pop
xor
lahf
or
cld
dec
fcomp
test
jecxz
xlat
js
std
leave
stc
sub
stc
fist
stos
xor
shl
push
push
sub
cmp
pop
xor
xor
outs
pop
lods
(bad)
sub
sub
stc
arpl
dec
sub
pusha
lock
adc
sbb
test
jns
mov
cmp
adc
dec
sbb
js
cmp
adc
jne
sub
es
push
rol
sub
in
cld
in
jns
cld
hlt
sahf
xlat
mov
inc
push
retf
and
jge
push
adc
cmp
adc
and
dec
dec
add
test
scas
imul
and
test
stc
movs
dec
arpl
pop
push
mov
jge
mov
scas
in
mov
or
not
int
mov
je
adc
adc
lock
xor
cdq
bound
or
push
mov
push
pop
adc
imul
lea
mov
sbb
test
pop
cmp
xchg
adc
inc
cmp
test
mov
cwde
out
pop
inc
dec
push
cmps
xor
enter
xchg
cmc
bnd
es
pop
call
(bad)
push
mov
dec
add
sti
rol
setnp
xor
inc
(bad)
daa
test
cmp
repz
sbb
push
add
arpl
pop
dec
xchg
call
or
lods
sub
rcr
mov
mov
inc
sbb
lea
arpl
sbb
fnstcw
fcom
and
outs
ins
fisubr
xchg
mov
addr16
inc
loop
cmps
cwde
cli
cmp
xor
fsubr
iret
xchg
mov
push
addr16
cld
int3
mov
inc
punpckldq
(bad)
jb
out
pop
inc
outs
lahf
retf
jge
enter
pop
jl
sbb
sbb
jl
lds
daa
in
lock
adc
add
sub
nop
pop
xchg
shr
jne
or
mov
sahf
pop
pusha
dec
cs
cmp
cld
and
ins
mul
out
jle
pop
inc
enter
xor
jl
and
clc
jb
jecxz
das
movs
pop
in
sub
bound
mov
cmp
mov
pop
dec
xchg
or
inc
movs
xchg
pop
cli
ins
lods
ret
jno
inc
(bad)
div
cli
inc
repnz
add
xchg
mov
jne
aaa
fimul
jge
or
(bad)
ss
scas
lahf
jg
stos
dec
movs
jl
leave
shr
(bad)
fild
mov
cmp
std
je
stos
stos
mov
or
je
add
shr
cmp
sbb
dec
test
inc
ror
fdiv
bound
bound
or
jne
adc
movs
mov
cmc
pop
sti
add
imul
cmps
sbb
sahf
cmp
push
fwait
(bad)
lahf
leave
loopne
sbb
push
jnp
(bad)
sub
adc
or
(bad)
xor
ds
repnz
mov
pop
daa
scas
mov
clc
lods
sub
xchg
mov
xchg
int
cs
pushf
jl
or
inc
jae
loope
mov
dec
cli
or
add
jnp
sub
cmp
xchg
nop
jns
lods
push
lods
mov
std
mov
fcmovne
cmp
or
pop
mov
mov
inc
jo
das
hlt
jp
adc
inc
es
sbb
push
mov
or
jmp
sbb
ins
dec
dec
mov
(bad)
das
fild
push
dec
jnp
mov
rcr
adc
and
popa
in
sub
dec
xor
xchg
leave
call
cmc
mov
clc
push
mov
xchg
scas
fisttp
push
sbb
imul
mov
cmps
int
adc
hlt
xchg
(bad)
out
repnz
mov
test
and
cmp
loope
in
jge
add
jecxz
aam
jb
or
je
xchg
sub
popa
add
imul
dec
push
dec
jae
iret
fcmovu
dec
mov
cwde
hlt
int3
cwde
mov
xchg
mov
ret
inc
stos
and
sbb
push
fimul
sub
push
scas
addr16
xlat
test
sbb
cmps
fimul
sar
enter
pusha
es
mov
inc
call
ins
ja
mov
clc
gs
fstp
shl
pop
retf
or
sub
cli
jnp
popf
neg
outs
mov
call
jge
and
adc
gs
push
out
push
adc
hlt
test
hlt
push
fsubr
sbb
push
or
dec
(bad)
bound
leave
mov
(bad)
mov
adc
into
cwde
ins
call
pop
push
call
aaa
mov
pop
daa
repz
xor
repnz
dec
add
inc
movs
ror
sbb
shl
jo
fwait
cmp
fdivr
imul
fldcw
cli
jae
push
popf
arpl
repnz
(bad)
in
repnz
rcl
adc
inc
nop
fs
jnp
repz
fisttp
add
out
adc
popf
sbb
jno
rol
(bad)
(bad)
repnz
arpl
aas
adc
hlt
sub
sub
xlat
int
xchg
sbb
add
(bad)
dec
jp
xchg
add
inc
popf
xchg
mov
dec
test
fwait
ss
cmp
jmp
pop
shr
retf
xor
pushf
enter
sbb
dec
and
mov
and
cmc
test
jae
loop
jno
adc
xor
pop
call
jno
fadd
cs
jns
test
fs
scas
pop
fs
mov
adc
fnstcw
(bad)
push
mov
rol
sub
adc
xchg
ins
cs
xchg
add
mov
arpl
mov
aaa
or
fisubr
xor
sbb
aas
jne
leave
mov
push
and
imul
xchg
arpl
jmp
add
sbb
xor
sbb
sbb
mov
inc
fadd
in
and
lahf
mov
sub
ret
out
mov
movs
stos
sbb
sub
test
test
jl
(bad)
xor
scas
push
push
mov
shl
jmp
pushf
sub
dec
xor
ror
fbld
cmp
sub
mov
inc
pop
pop
mov
cmp
ret
nop
outs
dec
aaa
and
movs
data16
(bad)
jb
test
sti
xchg
js
int
push
popa
mov
mov
sbb
dec
repz
popf
(bad)
sahf
pop
adc
mov
aas
aaa
sbb
inc
mov
xchg
dec
xor
outs
pop
ins
xor
dec
pop
pop
push
add
jae
lds
retf
jb
add
or
data16
sahf
sbb
jle
(bad)
cmp
jg
jmp
jo
mov
bound
fmulp
dec
add
mov
inc
iret
xor
adc
into
mov
fcom
adc
jp
xchg
test
jbe
movs
mov
fmulp
jge
mov
inc
xor
dec
jo
inc
dec
bound
icebp
mov
stos
shr
(bad)
lods
mov
cmp
xor
std
cdq
and
cmp
data16
mov
das
outs
sub
jp
jo
out
jne
rcl
inc
cmps
lea
mov
mov
inc
aaa
into
adc
(bad)
in
pusha
fmul
imul
sbb
sbb
repnz
call
cmovbe
sub
pop
stos
int
out
inc
push
add
dec
pop
xchg
xor
cmp
xor
pushf
test
jno
rcl
outs
mov
push
jne
sbb
jno
gs
out
mov
and
sahf
pusha
jl
push
lods
push
data16
retf
mov
mul
dec
fwait
(bad)
jmp
mov
push
jle
jno
inc
stos
mov
mov
mov
aas
cmp
cwde
iret
sbb
pop
or
mov
dec
in
or
fbld
icebp
push
cmc
cld
out
add
dec
mov
out
repz
jb
pushf
das
imul
loope
pop
jge
ret
xchg
mov
push
mov
daa
jmp
mov
sbb
add
movs
jb
jecxz
into
cmp
mov
xchg
popf
scas
jmp
mov
fmul
cmp
test
pop
mov
xchg
cwde
inc
sub
mul
add
xor
ins
aad
adc
or
aas
retf
movhlps
dec
test
repnz
cmp
mov
or
add
out
adc
cli
or
int
imul
sti
or
mov
jecxz
movs
into
dec
inc
push
push
fidiv
das
inc
mov
xchg
pop
je
arpl
sub
jbe
mov
out
cmp
jmp
mov
aam
shr
cmp
and
pop
sub
mov
stc
mov
push
cwde
jle
scas
push
and
cmp
aam
(bad)
mov
mov
scas
mov
outs
or
xchg
or
add
ficom
(bad)
je
outs
sbb
loop
push
enter
add
arpl
popa
mov
mov
in
dec
or
mov
int
add
outs
push
sub
sbb
sub
repz
aaa
out
in
xor
push
sahf
pop
and
pop
fiadd
adc
sbb
mov
xchg
mov
sbb
lea
fsub
xor
stos
aaa
sub
shr
mov
fs
dec
push
inc
add
enter
repz
sbb
or
mov
and
inc
jns
std
test
pop
(bad)
fbstp
outs
mov
xchg
xchg
and
add
pop
call
mov
std
jb
mov
push
sub
shl
fimul
pop
mov
inc
pop
sbb
xor
or
call
fdivr
and
out
jno
push
xor
into
mov
adc
push
adc
push
je
cmp
mov
pop
out
es
aaa
icebp
and
xchg
and
and
mov
xchg
add
out
repz
push
or
jae
xor
leave
mov
cmp
mov
and
lea
sbb
mov
jne
aad
(bad)
cwde
xchg
push
rcr
shl
xchg
jne
dec
hlt
push
int
test
mov
dec
push
and
fdiv
ret
mov
lods
repz
addr16
xchg
bound
xor
les
call
test
aam
inc
imul
mov
and
retf
jae
or
mov
cld
mov
bound
xchg
push
and
adc
inc
mov
sub
mov
xor
jle
jbe
sahf
mov
add
test
pop
sbb
aam
sub
pop
xchg
cmps
xchg
adc
fcmovnb
test
es
in
test
retf
push
iret
mov
xor
ficom
or
ins
pushf
dec
jne
sub
fcomp
cmp
inc
pushf
retf
pop
aaa
ins
inc
sub
pop
retf
add
or
xchg
dec
push
and
pusha
mov
xchg
clc
test
jb
mov
loopne
rcr
(bad)
sbb
mov
mov
pop
jo
ds
retf
sbb
(bad)
inc
add
add
ficomp
je
push
cwde
ror
xor
test
sbb
mov
mov
sbb
push
cmp
mov
pusha
sub
add
mov
test
pop
ret
fidivr
or
fisttp
out
aad
inc
mov
xlat
sub
inc
jg
imul
jg
jo
xchg
sbb
mov
fistp
sbb
sbb
and
mov
mov
les
pop
scas
add
xor
mov
aam
mov
hlt
je
or
inc
push
ret
arpl
std
por
sbb
push
xor
test
mov
xchg
push
fistp
jle
sbb
imul
mov
not
and
call
jg
xchg
pushf
cmp
rol
enter
cmc
outs
in
push
lahf
jecxz
add
inc
rol
ins
(bad)
jae
and
sbb
fcmovb
fisubr
or
and
cmps
adc
push
dec
jne
or
add
or
add
jno
(bad)
(bad)
sar
stos
test
imul
rcl
sub
pop
mov
fld
sbb
adc
xchg
and
sar
adc
mov
fcmove
in
cld
test
in
pop
fimul
test
or
xor
das
dec
mov
inc
in
or
lahf
sub
cmp
mov
jae
adc
cmc
cmp
inc
movs
mov
inc
or
mov
push
cmp
hlt
dec
push
or
sub
push
jg
stc
xor
jno
mov
jae
adc
bound
add
call
cmp
scas
popa
mov
jp
imul
mov
xchg
cmp
adc
add
outs
(bad)
inc
(bad)
xchg
pop
add
xor
dec
repz
xchg
lahf
dec
(bad)
adc
cmp
jnp
loope
test
leave
or
or
mov
outs
inc
repz
ins
inc
and
add
xchg
cli
cdq
sbb
cmp
adc
fsin
mov
cmp
pop
add
adc
xchg
push
pusha
push
xchg
pop
pop
push
adc
mov
sbb
and
xchg
jmp
test
xor
sub
jle
ins
xchg
mov
adc
(bad)
cli
mov
cmp
cmp
outs
fmul
push
lahf
dec
and
outs
pop
hlt
fbstp
mov
arpl
mov
js
sub
shr
iret
xor
or
jp
inc
stos
in
cwde
js
pop
shl
dec
adc
xor
pop
mov
pop
pop
jne
mov
sub
push
dec
leave
mov
or
test
cmp
lds
sbb
jbe
push
fsubr
sub
jbe
das
ds
pop
int3
loopne
and
dec
mov
pop
sub
xor
(bad)
mov
jns
mov
jecxz
or
jge
aad
jle
xchg
mov
mov
pop
xchg
stc
jb
addr16
shl
mov
das
test
loop
xor
sbb
nop
das
jge
mov
mov
jmp
sbb
call
inc
adc
jnp
add
ins
xchg
(bad)
jmp
jnp
xchg
mov
out
or
mov
bound
adc
xor
cmps
daa
aas
bound
pop
cmps
out
pop
int
call
mov
mov
lods
cmps
dec
loopne
or
outs
pushf
inc
mov
add
cmp
and
fstp
sub
ror
jnp
adc
add
jge
popa
mov
ja
mov
or
ss
or
scas
out
mov
adc
xchg
or
shr
aam
push
imul
mov
repnz
js
shr
jge
aas
sub
lods
jae
mov
mov
int3
scas
inc
ret
dec
xchg
pop
(bad)
(bad)
jne
sub
xchg
hlt
jno
imul
pop
(bad)
push
xchg
sbb
jge
xchg
mov
xchg
lea
lahf
fs
in
or
jl
jg
and
fcom
mov
jbe
lods
cmp
mov
scas
cld
and
out
(bad)
std
xlat
or
retf
in
and
pop
outs
out
push
test
aas
std
clc
pop
push
pop
jmp
inc
sti
dec
int3
sub
lock
sbb
sub
das
inc
in
push
inc
dec
jg
in
xchg
xchg
loopne
pop
icebp
lahf
dec
test
mov
sub
out
scas
add
mov
mov
imul
jo
xchg
push
dec
sahf
and
movs
jg
sbb
repz
push
xor
cli
iret
sbb
pusha
and
into
xor
es
test
xor
dec
ret
fistp
sbb
jp
push
icebp
imul
jmp
in
jmp
call
inc
pushf
jge
xlat
test
push
(bad)
mov
xor
push
mov
push
pop
pop
fdiv
cmps
ins
pop
sub
mov
rcr
(bad)
jmp
sub
fwait
sahf
int3
fdiv
lea
sub
mov
jne
stos
sbb
in
lahf
xlat
test
add
mov
outs
xor
or
xor
ds
mov
test
and
int3
xchg
add
lds
adc
adc
pop
push
out
movs
mov
sbb
jb
ret
movs
into
imul
inc
fdiv
shr
adc
dec
stc
mov
xchg
les
jmp
xor
mov
jmp
dec
sbb
mov
mov
inc
sub
sub
popf
shr
jl
icebp
cs
adc
gs
xchg
stos
adc
movs
(bad)
xchg
das
retf
cmovne
fsub
sub
xor
scas
in
mov
stc
pcmpgtb
inc
test
sbb
shr
sbb
js
cmp
fadd
cmp
jp
xchg
ds
fdiv
call
out
fs
mov
fdiv
dec
lea
std
lods
test
pop
fisttp
pop
scas
inc
loop
and
icebp
xchg
jae
sub
lea
outs
and
lahf
mov
gs
add
out
mov
sub
sahf
add
sbb
call
jo
mov
movs
test
popa
fist
in
jno
lods
push
in
and
mov
nop
cld
mov
mov
jge
ss
aad
jb
retf
shr
out
mov
(bad)
cmc
loop
adc
sbb
xlat
xor
push
shl
lods
add
movs
or
sub
push
aaa
mov
(bad)
pop
sbb
repnz
mov
and
jnp
fmul
sahf
jbe
fs
xchg
fs
sbb
paddusb
jnp
shl
add
cli
stc
jne
(bad)
fidivr
push
clc
xchg
jo
mov
(bad)
clc
nop
fidivr
push
mov
in
ss
fcomp
cmp
aas
xor
ins
jae
sbb
dec
je
sub
pcmpeqd
icebp
jecxz
setbe
xchg
jb
cmp
data16
inc
sbb
rcl
jo
mov
xor
test
push
jnp
xchg
jb
aaa
lods
add
(bad)
push
sbb
les
cld
out
jne
dec
or
mov
sub
pop
sub
test
or
hlt
sub
xchg
sbb
out
loopne
dec
ret
sub
cmp
push
cmp
test
cmp
pop
or
pop
dec
imul
shl
lods
adc
mov
push
and
ins
jmp
cmc
push
retf
popf
mul
out
mov
imul
loop
cmps
out
inc
adc
adc
fisub
xor
cdq
outs
inc
xchg
pop
data16
cmp
cmc
cmp
sub
cmp
push
xchg
jmp
in
jmp
or
dec
nop
jge
cld
pop
adc
or
shl
cwde
xor
dec
gs
daa
stc
int
ret
xchg
les
ds
daa
inc
fcmovu
mov
xchg
test
xor
jnp
fld
cmp
dec
and
jns
sub
push
xor
cwde
xchg
call
aam
lahf
cdq
sub
call
push
jns
mov
mov
movs
icebp
idiv
movs
scas
jns
icebp
push
jle
pop
fcomp
push
std
xchg
ja
les
jmp
sbb
mov
shl
mov
les
push
dec
push
ret
ret
add
arpl
and
retf
call
mov
aam
fld
mov
out
push
shl
cmc
or
or
or
out
dec
pop
sti
imul
rcr
adc
fdiv
add
adc
sub
adc
test
or
test
cmp
test
idiv
pushf
(bad)
int3
js
jo
push
push
sbb
jmp
mov
in
lods
popa
test
push
jb
sub
add
imul
xor
test
inc
xor
lahf
mov
scas
movs
push
jns
mov
gs
sbb
cmps
sahf
pop
pushf
jecxz
ret
pop
xchg
push
dec
ds
and
push
jmp
in
inc
jecxz
int
sbb
add
add
mov
test
out
cmps
imul
jp
in
xor
ins
jl
sub
pushf
xchg
fdiv
sti
popf
sbb
(bad)
aad
out
sar
imul
outs
jge
jns
stos
mov
pop
push
dec
cmp
xor
sub
(bad)
in
mov
sahf
mov
daa
cmp
rcl
cs
add
ret
mov
add
jg
cli
xchg
adc
(bad)
dec
xchg
xor
imul
mov
adc
and
pusha
mov
adc
and
sti
movs
xor
out
add
mov
test
adc
outs
movs
dec
scas
mov
jecxz
mov
inc
push
inc
add
ins
and
xor
dec
inc
sub
xchg
ror
lahf
inc
and
xchg
xor
add
pop
lods
out
hlt
gs
add
dec
dec
repz
mov
ins
sahf
jbe
pop
in
sahf
pop
mov
(bad)
pushf
jb
push
repz
dec
mov
call
add
dec
les
das
push
sub
repnz
push
rcl
stos
ins
retf
fadd
gs
ds
test
xchg
lock
fimul
fidiv
rcl
ins
push
mov
(bad)
pop
push
shr
or
cs
sbb
or
sub
or
and
leave
xchg
pop
mov
pushf
ja
nop
sub
(bad)
inc
lock
mov
mov
dec
outs
fwait
ja
adc
or
sbb
jle
popf
dec
add
call
pop
test
mov
ins
sbb
or
or
repz
sbb
mov
test
leave
xchg
and
jle
fdiv
pop
fwait
adc
adc
ror
cmp
jno
jecxz
mov
cmp
xchg
jl
bound
inc
outs
lea
loope
sbb
xor
test
repnz
pop
aaa
movs
or
stc
mov
xlat
jge
mov
das
sub
lods
cmps
data16
dec
pop
and
mul
pop
sbb
cmp
shl
mov
ret
idiv
scas
push
(bad)
(bad)
stos
ins
dec
jmp
imul
fst
ss
movlps
test
xlat
mov
jns
or
sub
xor
mov
gs
test
cmp
pusha
mov
in
add
xchg
sbb
pop
cmp
adc
pop
clc
lea
into
or
addr16
loope
cmp
adc
xor
cmps
fdiv
jbe
jmp
out
test
leave
dec
mov
xchg
mov
pop
push
rcl
sbb
or
inc
add
push
lods
sbb
out
mov
cmps
and
and
pop
adc
add
in
xchg
int
je
aad
add
add
add
cs
(bad)
mov
enter
inc
test
das
push
rcl
out
adc
pop
mov
pop
dec
jbe
shl
mov
out
dec
cmps
call
pop
mov
in
cmps
pop
int
jecxz
jmp
adc
fistp
loopne
cs
cmps
and
cli
sub
and
inc
and
ds
mov
jnp
test
or
dec
push
add
leave
scas
fdivp
add
nop
in
xchg
jo
rcl
add
out
les
je
out
fld
imul
and
push
scas
lahf
and
adc
adc
adc
cli
xor
popa
loopne
mov
hlt
lea
sbb
jmp
jb
sbb
pop
fdiv
outs
ss
outs
jecxz
jnp
rcr
mov
loopne
cmps
fimul
inc
out
mov
std
lods
mov
scas
pop
adc
out
or
cmp
retf
adc
push
popf
xor
push
adc
outs
mov
push
add
pop
adc
pusha
sahf
sahf
fmul
jp
clc
mov
dec
push
std
cwde
pop
imul
push
cwde
dec
sub
inc
imul
sub
push
dec
jmp
cwde
aad
mov
daa
scas
enter
lods
call
jg
adc
jbe
add
loope
push
pop
rol
cmp
arpl
fld
scas
in
clc
xchg
and
sub
lds
mov
and
and
retf
mov
out
es
(bad)
or
(bad)
retf
mov
mov
iret
mov
imul
mov
(bad)
arpl
xchg
or
mov
out
cmp
daa
into
or
std
outs
leave
add
add
mov
daa
in
out
sub
jge
cs
movs
jl
loopne
lods
cmps
fs
aas
pop
xor
retf
inc
and
push
sbb
jne
cdq
push
add
cwde
mov
jecxz
jl
xor
shl
inc
mov
out
adc
mov
xor
in
dec
addr16
push
std
mov
shl
test
in
xor
stos
sub
mov
enter
sbb
in
jl
pop
push
sbb
xlat
pop
push
stos
add
sbb
fld
movs
or
ror
pop
push
mov
adc
cwde
hlt
retf
pop
dec
xchg
sbb
ds
push
outs
jmp
mov
mov
sub
jl
jmp
fisub
jl
int3
pop
pop
mov
js
mov
aaa
adc
jge
dec
enter
cmp
sahf
ror
stc
in
bound
dec
out
jg
into
int
jg
dec
adc
fcmove
in
push
xor
xlat
xor
pop
sahf
pop
outs
icebp
int
dec
jmp
sub
nop
repz
xor
xor
sbb
dec
xor
scas
imul
aaa
and
adc
loopne
and
pop
call
xor
lods
(bad)
jl
xlat
jno
mov
int
push
push
sub
push
adc
into
loop
add
inc
aad
shl
gs
jg
in
iret
aaa
dec
fsub
stc
hlt
out
and
js
clc
std
mov
ret
mov
push
cmpxchg
clc
ror
push
jnp
call
pop
cmp
test
shl
addr16
fwait
cli
aad
pop
add
rol
repnz
enter
pop
sub
or
lods
clc
test
pusha
jge
call
xor
lea
xchg
test
stc
outs
or
ds
mov
int3
pop
xchg
adc
xchg
jmp
and
jo
lods
jo
movs
jo
or
pop
mov
hlt
xchg
inc
jnp
add
inc
pusha
jmp
ds
in
pop
and
dec
push
(bad)
leave
dec
lock
cmp
imul
mov
cli
call
retf
jnp
mov
fistp
sub
or
push
and
pcmpeqd
cli
xor
sar
(bad)
adc
push
shl
and
mov
clc
outs
dec
adc
(bad)
mov
or
xchg
add
fst
push
in
and
xchg
xor
inc
test
sbb
cld
and
adc
cld
movs
out
ss
or
sahf
xchg
add
aas
and
cdq
fwait
jecxz
xor
mov
and
mov
dec
lahf
nop
jb
mov
aas
js
push
push
push
ss
icebp
test
add
sbb
push
ins
pop
lods
dec
loopne
mov
(bad)
pop
mov
mov
sub
into
add
dec
jne
sub
cmp
xchg
fisub
mov
out
leave
jno
pop
sbb
or
push
pop
mov
ficom
xor
(bad)
jecxz
mov
outs
stos
test
inc
lea
(bad)
inc
jmp
push
mov
sub
rol
in
dec
mov
je
in
fiadd
stc
pop
fisttp
mov
adc
pop
xchg
jo
addr16
pop
mov
dec
ret
ja
cmp
sbb
adc
aad
outs
or
pop
cdq
xor
pop
fist
sahf
cmp
mov
dec
push
inc
retf
ds
addr16
js
ror
mov
inc
push
pop
add
lods
fimul
xchg
jmp
push
push
cli
cli
dec
adc
sbb
outs
add
adc
dec
fwait
mov
sbb
xchg
cs
loop
and
movs
cs
push
pop
mov
and
push
mov
xchg
mov
sub
repz
jns
or
push
add
ret
jg
(bad)
sub
dec
xor
xor
dec
lock
pop
dec
fwait
mov
cli
inc
into
int3
gs
adc
das
jbe
addr16
ror
or
sbb
nop
or
adc
retf
je
pop
retf
mov
sbb
push
sub
xchg
jbe
in
pop
adc
push
outs
sar
jnp
imul
cld
shl
lock
call
cmp
xor
xchg
push
stos
mov
xchg
icebp
retf
dec
jmp
cmps
(bad)
stc
mov
loope
mov
hlt
cmps
pop
in
mov
pop
fcomp
scas
cmp
jno
nop
adc
xchg
xchg
and
xchg
xor
inc
dec
mov
sbb
ror
int3
adc
cli
repz
mov
out
mov
jbe
setge
mov
cmc
cmp
sbb
jo
pop
xor
pop
addr16
in
scas
iret
inc
test
scas
movs
xchg
in
cmp
mov
pop
push
jmp
or
shl
(bad)
cwde
not
sbb
sti
mov
jne
mov
repz
popa
pop
div
sahf
cld
or
mov
sar
xchg
mov
jae
inc
mov
sbb
stc
sar
fdivp
jno
xchg
inc
sbb
xchg
mov
push
pop
cwde
mov
jns
push
idiv
dec
dec
stos
stc
stos
adc
sbb
les
mov
je
ins
add
mov
xor
push
mov
jo
and
retf
mov
xor
jmp
push
cld
pop
sub
xor
ins
popa
cli
xchg
retf
xchg
mov
mov
movs
push
push
(bad)
shl
pusha
and
es
cli
shr
xor
push
stos
sti
movs
pop
cwde
fs
cmp
in
lods
gs
adc
cmc
push
xchg
idiv
ficom
mov
mov
stos
fcmovu
pop
push
dec
mov
pop
aas
repz
ins
fwait
pop
mov
test
sahf
sti
mov
cmps
aaa
jl
inc
fmul
pop
fmul
add
seto
mov
xchg
icebp
retf
mov
cmps
mov
push
inc
sbb
and
(bad)
jg
add
jmp
sub
push
into
or
mov
jg
mov
mov
test
pop
xor
pop
or
mov
push
es
cmps
push
cmc
adc
scas
cwde
in
cmp
mov
int
shl
js
add
sub
out
dec
add
sahf
mov
idiv
push
sub
ds
imul
sub
adc
jl
mov
inc
lds
dec
fisttp
xchg
and
inc
pop
ficom
dec
lahf
adc
adc
in
das
mov
cld
adc
lods
hlt
and
mov
or
pop
mov
dec
jae
repz
fs
mov
push
pop
ins
int3
adc
xchg
retf
sub
not
mov
iret
push
in
jle
sub
enter
add
movhps
or
lahf
push
dec
sub
add
mov
ins
inc
test
call
jbe
test
ss
sub
int3
adc
or
mov
outs
push
scas
aam
fwait
pop
lods
mov
mov
out
std
stos
shl
mov
les
pop
data16
xchg
out
mov
mov
outs
sub
inc
jl
mov
(bad)
jae
jl
push
in
mov
push
sahf
test
lahf
add
adc
push
and
cmps
mov
in
imul
outs
and
ret
imul
inc
fcomip
outs
icebp
rcr
mov
mov
lds
outs
jl
pop
out
out
sti
ret
mov
imul
xchg
icebp
scas
jmp
push
scas
cld
sar
(bad)
imul
pop
fnstenv
dec
cmc
or
(bad)
mov
retf
outs
cmp
pop
push
jae
cmp
lahf
sub
ror
das
cwde
in
lock
in
jecxz
or
sub
loopne
mov
xor
movs
out
addr16
mov
mov
loope
mov
pop
push
iret
aad
dec
adc
repnz
lds
inc
iret
jb
jns
adc
fistp
clc
jmp
or
(bad)
mov
in
inc
das
mov
mov
xchg
fiadd
in
ret
dec
push
dec
iret
pop
fist
repz
std
adc
xor
stos
in
sbb
out
ficomp
cwde
repnz
or
es
push
ffreep
dec
cmp
pop
fild
pop
scas
ret
sub
daa
xlat
test
mov
or
cmps
add
fsub
call
bound
jno
imul
pop
mov
xor
mov
inc
movs
add
inc
arpl
sub
mov
adc
mov
or
mov
sbb
jg
mov
push
sub
jo
add
iret
cmps
scas
cmps
adc
test
cmp
inc
mov
ss
push
add
push
xor
add
int3
(bad)
fucomip
mov
dec
or
mov
js
mov
or
dec
js
cmps
pop
inc
mov
outs
out
xchg
nop
stos
inc
and
loope
and
fimul
fnstenv
fimul
pop
xor
cmp
xchg
jg
or
leave
addr16
in
sar
push
mov
mov
xor
inc
or
movs
jbe
jno
ins
cli
gs
dec
inc
ins
ins
xchg
push
scas
xchg
jmp
in
mov
lds
mov
jg
or
jle
je
mov
xchg
into
jae
push
mov
xchg
out
mov
pop
mov
fiadd
loop
mov
(bad)
test
cmp
ret
dec
and
(bad)
jmp
cmp
mov
retf
pop
jg
sbb
aad
mov
mov
jne
arpl
or
push
and
or
daa
dec
adc
pop
ss
hlt
in
stos
(bad)
and
out
inc
cmps
mov
jg
int
ret
and
mov
loope
mov
(bad)
pop
fidivr
aas
retf
clc
dec
sahf
mov
pushf
cld
lds
push
movups
repz
ins
xchg
es
gs
loop
cli
jne
int
scas
imul
cmp
add
scas
inc
cmp
push
sub
and
push
xchg
(bad)
cmp
lahf
mov
cdq
push
pop
xlat
jbe
dec
dec
fs
cmc
inc
cmp
imul
scas
loope
sti
mov
xchg
call
loopne
push
int
pop
(bad)
add
fwait
push
retf
test
or
loop
mov
mov
jg
cdq
xchg
xchg
mov
sub
or
push
add
sub
lock
push
and
and
das
adc
outs
in
(bad)
and
ret
stc
mov
mov
adc
mov
in
jmp
rcl
add
hlt
jns
test
inc
cdq
js
nop
mov
fmul
xchg
pop
shl
mov
lahf
rol
cmps
push
push
repnz
mov
sbb
test
pop
push
sub
rcr
cmp
std
mov
int3
dec
mov
leave
inc
mov
call
jnp
sbb
popa
mov
push
jne
stos
gs
dec
and
test
adc
call
stos
cli
jmp
les
dec
xor
jmp
les
add
mov
fdivr
sbb
idiv
aas
xor
xchg
adc
outs
sbb
fstp
(bad)
jbe
mov
retf
mov
std
inc
rol
jl
pop
out
fistp
inc
ret
dec
jmp
scas
cmp
and
mov
popf
mov
jno
(bad)
pop
das
(bad)
(bad)
cmp
dec
cmp
push
xor
out
xchg
aam
xlat
mov
push
add
cwde
mov
xlat
test
sub
cmps
push
cwde
pop
data16
jns
aam
lds
outs
sbb
(bad)
jl
adc
bound
mov
xor
ret
cs
sub
test
inc
rcr
mov
adc
push
rol
mov
lock
out
sub
jmp
cld
jmp
jno
add
mov
push
les
(bad)
aam
test
push
mov
mov
in
push
push
mov
ret
xchg
mov
jns
ja
dec
bound
mov
inc
sahf
xchg
or
xor
push
out
lods
dec
or
pusha
sub
sub
jg
or
sbb
test
push
adc
fiadd
inc
cdq
sbb
push
rol
dec
retf
das
addr16
jl
xchg
inc
jb
pop
xchg
mov
fnstcw
xchg
inc
out
lods
xchg
mov
ins
shufps
nop
aad
xchg
aaa
or
dec
ret
ins
jle
ins
sub
les
sub
pop
push
xchg
nop
cwde
push
xor
loopne
mov
outs
adc
enter
mov
inc
in
inc
test
sbb
jmp
sub
pop
sbb
push
adc
mov
jl
ins
(bad)
xchg
leave
ins
sub
out
pusha
dec
mov
cmp
adc
loop
sbb
fincstp
cmp
dec
xor
adc
pushf
mov
add
popa
shl
sub
(bad)
rol
jbe
mov
mov
pop
(bad)
dec
sub
loopne
call
add
push
jnp
ja
fcomp
jnp
ror
xchg
jo
bnd
stc
shl
call
xor
pop
mov
mov
sub
push
add
dec
out
jg
xor
pop
lock
nop
enter
inc
arpl
loope
sub
jmp
adc
ror
cld
fnstsw
(bad)
jne
sbb
xchg
jl
mov
dec
fild
out
xor
out
push
sbb
out
test
outs
rcr
ja
les
cmp
es
loope
(bad)
pop
xchg
data16
sar
xchg
rol
cli
dec
add
sbb
popa
ret
cwde
ds
inc
ins
cmp
adc
adc
push
push
jnp
les
inc
into
lods
nop
inc
dec
ja
fsub
push
or
push
mov
mov
add
mov
inc
dec
in
sti
add
pop
xor
push
mov
jb
jmp
jo
or
sub
je
(bad)
(bad)
pop
pop
rcl
cwde
xor
repz
add
rcr
sub
pop
adc
imul
sbb
jo
xor
mov
loopne
xor
ds
mov
pop
mov
cmp
aam
mov
pop
sbb
mov
mov
mov
adc
and
push
fcom
dec
mov
xchg
inc
(bad)
pop
cmp
sbb
ror
jp
stc
push
mov
pop
rcl
mov
loope
inc
mov
aad
popa
mov
mov
mov
aaa
dec
into
cmp
xor
push
jle
and
or
stc
push
ret
pusha
xor
pop
push
cmp
in
ror
popf
add
mov
dec
and
out
dec
add
fdiv
movs
aad
jne
int3
(bad)
retf
ror
add
aas
jae
mov
pop
(bad)
outs
xor
sub
aaa
push
cmp
xchg
std
add
dec
(bad)
dec
ficomp
inc
sub
push
pop
pop
mov
push
push
int3
push
gs
inc
xchg
pop
push
push
jae
(bad)
mov
pusha
ins
jmp
sahf
je
loop
pop
dec
cli
mov
sub
dec
neg
lods
je
xchg
sbb
fidiv
pop
pop
cmc
mov
push
adc
fwait
mov
in
in
ins
cmp
lods
mov
sbb
lock
test
push
ins
addr16
test
gs
shr
mov
push
out
pop
(bad)
dec
out
ins
pop
ret
jne
nop
jl
fisubr
loopne
dec
push
mov
sbb
xchg
push
repnz
mov
rol
in
pop
mov
jle
dec
jle
test
jb
fdivr
aas
mov
(bad)
adc
js
mov
dec
mov
mov
(bad)
cmovle
cmp
add
push
mov
fldenv
pop
retf
shr
(bad)
mov
mov
xchg
push
leave
xchg
sub
fs
repz
ins
mov
push
push
mov
into
fsub
add
and
push
pop
and
mov
nop
xor
add
out
push
pop
inc
jne
sub
push
bound
cli
stc
cli
adc
in
inc
lea
(bad)
pop
xor
addr16
sahf
sbb
mov
lahf
xchg
test
sar
lods
arpl
movs
loop
retf
push
test
lods
sub
jne
sbb
shl
pop
inc
mov
and
std
div
xchg
stc
jg
ja
adc
inc
(bad)
jno
shl
imul
add
enter
leave
mov
fnstenv
pop
adc
sbb
add
dec
out
int3
rcr
or
push
call
inc
jmp
mov
mov
jb
iret
mov
xor
inc
icebp
loope
(bad)
je
scas
mov
sbb
push
sti
add
sbb
xor
fsub
icebp
out
ja
jle
push
inc
pop
sub
push
mov
push
xchg
popf
and
out
test
add
ins
pop
and
jl
out
imul
out
or
(bad)
cmp
rcr
sub
push
fmul
lods
mov
(bad)
mov
fdivr
mov
jp
aad
adc
inc
or
dec
mov
iret
jnp
inc
xchg
movs
add
dec
and
stos
daa
or
call
or
imul
aad
out
fcom
ss
jp
pusha
clc
push
or
out
les
xor
xchg
jb
stos
jb
xchg
pop
mov
cmps
push
clc
jmp
jbe
jns
xor
or
mov
leave
das
or
enter
ror
jb
pop
call
pushf
mov
stos
fstp
stos
mov
push
mov
xchg
mov
cwde
ins
sti
in
mov
and
and
enter
jns
mov
in
or
dec
dec
iret
sub
or
cdq
pushf
mov
pop
imul
aam
push
scas
sbb
outs
cmp
ins
mov
xchg
pop
mov
sbb
ds
inc
cdq
enter
mov
fadd
xor
mov
loop
push
push
push
aad
mov
out
push
je
mov
xchg
jbe
cs
and
xchg
fstp
hlt
movs
hlt
mov
retf
jp
mov
mov
sub
xchg
imul
mov
std
mov
sbb
mov
or
add
cmp
mov
repnz
and
cmps
jl
jmp
mov
xor
ss
frstor
adc
push
inc
popa
(bad)
ss
add
fnstenv
pop
mov
addr16
fbld
pop
ds
pop
fistp
loop
je
or
movs
jbe
test
aaa
xlat
cmp
sahf
in
lds
scas
nop
sti
in
jne
add
arpl
cmps
jge
fist
mov
dec
in
cmp
sbb
pop
push
ins
mov
in
mov
arpl
mov
stos
dec
(bad)
les
lea
add
inc
add
inc
xchg
cmp
ds
test
fwait
or
adc
(bad)
int
cmp
mov
daa
(bad)
inc
cmps
in
jg
test
adc
stos
jmp
shr
pusha
adc
mov
gs
xor
retf
shr
sbb
mov
sbb
rcr
push
xor
xor
xor
(bad)
es
adc
clc
pop
mov
adc
sahf
mov
out
(bad)
outs
xor
cdq
mov
repz
(bad)
xor
scas
xchg
jns
cmp
adc
and
iret
div
nop
sub
adc
ret
or
mov
adc
test
mov
fs
rol
lock
cmps
nop
es
pop
retf
jo
(bad)
and
push
cld
pop
inc
xchg
xchg
in
xchg
lahf
sub
addr16
mov
push
xchg
mov
inc
popf
lds
(bad)
xor
inc
cld
or
repz
repnz
shl
pop
ficomp
xchg
mov
mov
lods
adc
mov
adc
sbb
dec
add
sub
cmp
and
push
push
jae
jl
shr
les
out
and
inc
mov
sbb
retf
sti
jg
xchg
jle
push
out
out
hlt
sbb
mov
xlat
or
mov
imul
dec
cdq
push
jle
inc
fnsave
sub
fsubr
cmc
sub
(bad)
mov
std
mov
inc
jp
add
mov
xchg
and
jne
out
or
repnz
mov
push
mov
imul
aaa
or
rol
xor
add
sub
push
faddp
inc
mov
fisub
xchg
jecxz
addr16
adc
call
pushf
movs
loopne
movs
or
sbb
mov
bnd
dec
mov
xor
or
push
push
sbb
sbb
rcr
(bad)
movs
inc
lahf
push
fsubr
pop
mov
mov
add
dec
nop
int
cmp
fisttp
lds
sbb
xchg
push
retf
add
pop
aad
lahf
xchg
sbb
(bad)
mov
jne
mov
mov
pusha
mov
xchg
mov
(bad)
in
es
lds
int3
sbb
ss
rcr
dec
sar
pop
push
test
xlat
fistp
fisttp
popa
dec
bound
inc
movs
add
jmp
push
push
push
jecxz
pop
lods
or
sbb
sbb
xchg
test
push
pop
adc
test
jae
or
pop
call
out
loope
xor
and
loope
imul
ror
ret
(bad)
in
sbb
fs
sub
push
mov
cdq
outs
xchg
or
scas
mov
sbb
jl
mov
push
push
adc
ins
ins
outs
int
retf
and
lods
or
dec
push
jb
outs
aam
lock
sub
sub
fiadd
sub
sub
cmps
adc
sbb
mov
or
xor
sub
pop
push
add
out
and
cmc
(bad)
push
es
xlat
adc
es
lods
push
in
mov
mov
adc
fld
dec
jo
pop
mov
popa
xchg
or
cmp
outs
shl
and
pop
or
jno
stc
js
iret
mov
add
push
or
out
pop
mov
(bad)
push
das
mov
and
(bad)
cli
ss
in
sub
test
inc
pop
inc
mov
lods
push
pop
(bad)
pop
dec
es
scas
packuswb
lods
pop
stos
inc
outs
lds
ror
pslld
dec
add
jmp
mov
cmp
fs
fwait
lock
or
adc
push
and
fsubr
and
outs
shl
adc
ret
retf
adc
mov
test
jb
cs
sbb
push
push
jle
cmp
mov
jecxz
retf
jbe
fsub
(bad)
mov
jle
push
sbb
xor
push
fdivr
xor
hlt
jne
add
sub
inc
cmp
hlt
or
sub
push
pushf
or
or
mov
psubb
rcl
je
add
pop
ret
test
fdivrp
xor
and
push
cld
(bad)
xor
or
retf
ins
mov
fwait
std
fs
push
repnz
call
and
sahf
outs
lock
je
or
sub
sub
call
pushf
daa
icebp
jo
(bad)
inc
(bad)
test
ja
xor
or
pop
xor
lahf
ins
int3
mov
je
inc
xchg
call
icebp
scas
dec
outs
cli
popa
aam
sbb
dec
mov
and
push
adc
loop
loope
jo
xchg
and
push
jo
sub
cmp
popa
inc
clc
adc
jl
jp
jne
call
js
int3
fild
inc
pop
sub
rcl
pop
call
ret
sbb
aad
into
adc
movs
cmp
inc
adc
(bad)
jno
sbb
inc
sti
ret
jmp
cmp
cmc
inc
out
mov
mov
push
data16
aas
(bad)
mov
adc
aad
cmp
mov
int
xor
ficom
mov
adc
push
ja
call
or
pop
mov
inc
mov
popa
add
mov
add
mov
cdq
scas
xchg
xchg
mov
and
mov
(bad)
test
ja
test
add
das
inc
and
pop
xchg
stc
adc
test
push
retf
cmp
neg
mov
popa
inc
movs
mov
(bad)
test
or
push
enter
(bad)
mov
cmp
icebp
and
dec
cli
cdq
mov
je
test
inc
and
jb
xchg
cmp
stc
bound
mov
ret
inc
inc
adc
cli
call
inc
xor
jae
jnp
loope
xor
leave
mov
dec
adc
jl
imul
sub
movs
ret
int
in
jmp
jne
and
xchg
push
push
das
cmp
pop
mov
mov
inc
mov
jmp
adc
fisttp
retf
retf
dec
(bad)
stos
mov
cmp
jecxz
xor
jmp
xor
push
ds
dec
gs
jl
adc
fisttp
cmp
jno
jmp
mov
ror
cli
cmc
in
enter
sub
jmp
add
mov
ror
ror
or
jg
aas
xor
fild
iret
or
fcomp
loope
xor
sub
and
xor
mov
jmp
xchg
jb
xchg
frstor
out
nop
add
sbb
push
stos
and
pop
pop
in
dec
jno
cmp
add
dec
aad
xchg
mov
xor
sub
push
cmp
icebp
sbb
pop
adc
test
cmp
mov
movs
mov
sahf
idiv
and
ja
xchg
jle
leave
adc
jae
arpl
neg
mov
hlt
idiv
mov
dec
icebp
push
(bad)
ja
mov
inc
aam
dec
xchg
xor
inc
ja
pop
jecxz
int3
pop
out
retf
jne
dec
sub
test
lods
les
xchg
jo
cmc
(bad)
and
push
xchg
xor
cdq
hlt
arpl
in
jecxz
loop
(bad)
or
fdivrp
inc
pop
lock
in
mov
add
js
sbb
and
(bad)
sub
sub
lods
mov
mov
cli
aad
stos
repz
shl
and
or
xor
jle
xchg
iret
cmp
cdq
mov
out
pop
push
pusha
and
push
xchg
lea
ja
(bad)
enter
pop
sub
and
icebp
mov
mov
jo
out
xchg
inc
dec
(bad)
cmp
cmc
cs
mov
(bad)
adc
fdiv
gs
mov
js
xchg
div
outs
ror
js
mov
fsub
or
imul
push
test
cmps
nop
je
mov
movs
sar
rcl
xor
out
pop
cdq
inc
push
je
pop
inc
iret
mov
hlt
mov
cmp
sbb
mov
sub
(bad)
fcmovne
or
and
mov
mov
mov
cmps
xor
sbb
outs
fidivr
enter
pop
sar
test
jnp
lock
add
sbb
rcr
shr
sti
xchg
mov
out
inc
(bad)
popa
rcl
cli
sbb
lods
fisub
dec
in
mov
pop
dec
test
shl
pop
rol
sub
add
jns
push
fisttp
sbb
ja
loope
mov
xor
cmp
imul
sbb
sbb
je
dec
out
in
add
xchg
cld
push
fild
daa
iret
push
outs
or
rcr
fisttp
sbb
and
call
push
ins
dec
dec
cmc
add
cmp
and
push
inc
stos
xchg
add
or
add
xchg
jb
push
clc
push
out
jle
jne
into
mov
call
sub
clc
push
pushf
psrlw
arpl
scas
movs
das
sbb
outs
mov
cmps
jecxz
mov
rcl
mov
xor
mov
sub
adc
pop
(bad)
imul
(bad)
fs
mov
mov
xchg
hlt
outs
mov
sahf
xchg
lahf
sahf
mov
mov
ins
sub
jp
jp
inc
xchg
dec
call
pop
xor
sbb
or
or
adc
outs
mov
inc
movs
and
jb
test
aaa
pop
in
mov
xor
mov
ret
mov
jge
xor
inc
clc
loope
add
sbb
pop
into
inc
and
xchg
lds
ss
data16
xchg
out
dec
sub
xchg
mov
pop
lods
ins
xchg
mov
fdivp
retf
cmp
repnz
adc
addr16
pushf
xchg
cmp
dec
fdivr
test
dec
fist
mov
cmp
gs
ret
hlt
out
xchg
out
jns
arpl
shl
(bad)
rol
sbb
pop
add
sbb
xchg
push
add
xor
pop
fdivr
cdq
retf
adc
fst
add
adc
aad
jmp
inc
add
add
loop
enter
mov
aam
fld
mov
(bad)
(bad)
(bad)
scas
mov
nop
cwde
jge
sbb
xchg
ret
in
sub
(bad)
push
mov
xchg
add
js
mov
inc
xchg
call
add
xor
or
addr16
or
jb
ja
cmp
inc
mov
sub
xchg
pop
shl
lods
enter
mov
pop
xchg
sub
lahf
mov
dec
ret
rol
nop
int
fimul
push
in
sbb
add
jecxz
cwde
jp
outs
mov
mov
and
(bad)
cwde
push
pop
pop
and
push
pop
mov
adc
dec
aaa
push
inc
jl
and
aad
inc
push
enter
js
dec
or
cwde
mov
jnp
mov
pop
stos
ins
fistp
rol
fisubr
xrelease
dec
adc
sbb
je
xor
ret
fwait
mov
mov
mov
push
xchg
pop
test
inc
add
pop
inc
test
enter
pop
stos
mov
sti
(bad)
lds
cmp
daa
pop
push
mov
push
xor
lock
mov
data16
lods
inc
cdq
add
or
jb
lahf
mov
(bad)
(bad)
sti
xchg
mov
sub
pop
repz
les
cmp
dec
jecxz
ret
dec
dec
arpl
dec
sbb
jo
push
mov
sbb
data16
mov
dec
add
(bad)
ins
xchg
pop
or
dec
dec
dec
sti
inc
sbb
pop
dec
(bad)
dec
push
stc
push
xchg
lds
icebp
and
cmp
daa
inc
pop
jnp
dec
and
inc
jg
cs
push
jo
ret
cmp
sbb
mov
and
jg
fild
sub
stos
inc
ins
lahf
xchg
in
fimul
push
sub
(bad)
jmp
shl
scas
test
cld
test
mul
cli
or
push
xchg
cs
es
push
dec
and
arpl
and
push
clc
imul
(bad)
jmp
sti
pop
xchg
dec
inc
xor
push
pop
fs
iret
sbb
jns
xchg
sar
pop
not
jmp
sbb
sub
xchg
push
(bad)
cmc
sbb
mul
inc
and
xor
stc
int
fstp
mov
xchg
push
neg
or
sti
test
fs
fild
ficomp
fisttp
pop
or
out
lods
fmul
call
loopne
cmp
imul
xor
idiv
sbb
xchg
push
jb
pushf
gs
push
fsub
cld
mov
mov
and
jle
add
inc
mov
mov
xor
ins
jnp
imul
ror
(bad)
sbb
(bad)
pop
in
popf
stos
mov
fwait
jg
movs
jno
mov
test
outs
mov
icebp
popa
add
imul
daa
cmp
aam
sbb
ret
clc
rep
stos
leave
dec
cmp
mov
jo
inc
and
add
shr
ds
pop
out
rcr
shr
loopne
add
(bad)
ja
setno
pop
lds
sti
fs
shl
inc
pop
je
sbb
push
xor
fimul
add
sbb
and
dec
mov
nop
bound
jge
dec
adc
pop
jbe
cmp
push
jmp
xchg
push
mov
cli
push
ja
fstp
enter
addr16
dec
xor
xor
call
mov
fidivr
call
add
retf
loope
ror
jae
ds
xchg
jae
into
ins
es
mov
xor
into
int
loope
xor
and
enterw
popa
mov
push
jbe
ret
or
inc
imul
(bad)
or
xchg
mov
outs
jno
dec
(bad)
cwde
inc
push
ja
lods
xchg
jbe
ds
loope
rol
jmp
mov
not
loop
arpl
stc
add
jae
test
push
xor
scas
xor
bound
push
mov
cmp
imul
loop
icebp
cmp
rcr
sbb
mov
js
out
inc
rcr
pop
dec
and
stc
jo
sub
out
xchg
dec
cmp
call
or
shl
clc
pop
hlt
mov
xorps
cmp
jo
sbb
into
loopne
push
fldenv
movs
das
dec
(bad)
in
mov
fld
loop
inc
cs
sub
int3
dec
sub
dec
sbb
test
jg
xlat
jnp
dec
inc
xlat
pop
je
inc
and
cmp
push
enter
inc
(bad)
repz
(bad)
adc
fwait
or
test
push
and
loope
mov
add
cmp
mov
mov
xchg
inc
push
cmp
mov
sti
xchg
inc
int3
cli
inc
cdq
repz
mov
push
mov
shr
mov
leave
aas
call
cmp
jnp
popf
or
das
ror
jecxz
adc
fadd
mul
xchg
test
cmp
adc
pop
shl
mov
lods
pusha
sbb
dec
or
daa
ss
scas
mov
test
imul
aas
xor
adc
dec
or
imul
xor
jno
pop
aas
fcomp
add
inc
dec
mov
mov
sub
lock
lahf
and
cmp
lods
lock
cmc
hlt
in
adc
sub
jg
aam
push
lods
and
and
dec
push
mov
add
push
into
fwait
cmps
imul
data16
or
mov
sbb
imul
sub
scas
and
mov
leave
or
push
mov
mov
mov
rcl
retf
and
mov
xor
aam
jmp
add
movs
ret
bound
cmp
push
jae
(bad)
fist
add
pop
adc
inc
mov
(bad)
into
sar
sbb
mov
and
orps
cwde
outs
int
(bad)
in
mov
adc
pop
bound
push
repnz
mov
lods
mov
adc
std
and
jmp
sar
mov
clc
outs
sahf
shl
sbb
jb
sub
xchg
loopne
repz
rol
call
ror
or
test
(bad)
enter
(bad)
or
gs
inc
test
mov
hlt
retf
hlt
push
ret
fistp
xor
fistp
and
adc
sub
icebp
imul
dec
mov
push
loop
fadd
jbe
sub
push
lock
pop
mov
pop
repz
data16
xchg
or
call
ins
and
jns
xor
clc
inc
sbb
call
ret
cld
lea
xchg
mov
sqrtps
idiv
jg
arpl
outs
ror
out
mov
int3
sub
fs
daa
adc
mov
leave
lds
jecxz
jns
div
push
jae
out
mov
push
xchg
in
sub
lock
push
(bad)
(bad)
imul
inc
push
ret
and
sub
pop
(bad)
jbe
push
add
mov
mov
mov
ins
dec
(bad)
or
push
adc
push
loope
movs
mov
jecxz
mov
shr
cld
retf
test
or
pop
mov
jp
iret
xor
dec
ret
cmps
and
mov
and
mov
into
cmps
in
dec
sbb
jno
add
and
ins
aad
jb
mov
dec
outs
pop
mov
xor
movs
jbe
dec
push
aam
pop
cmps
dec
dec
imul
daa
sub
inc
adc
and
cli
and
pop
push
jno
cmp
(bad)
popa
shr
out
pusha
lods
(bad)
sar
repz
jp
(bad)
mov
repz
jg
and
iret
mov
mov
ins
jae
push
outs
xchg
add
xchg
add
xchg
dec
cdq
mov
dec
and
jb
shr
in
stc
fisub
dec
lods
test
clc
retf
stos
adc
or
pop
xchg
stc
mov
adc
push
cmc
mov
aad
test
idiv
xchg
mov
adc
cmp
sub
xor
sbb
pop
sub
add
cs
xchg
pop
and
cmp
push
push
push
fiadd
lods
es
movaps
pop
(bad)
sti
into
scas
enter
add
nop
sub
cmp
mov
test
xor
pop
pop
movups
call
cmc
push
mov
dec
mov
pop
adc
aaa
add
pop
repz
mov
push
dec
pop
sbb
or
aas
je
inc
cvttps2pi
push
xor
clc
pop
clc
sar
pop
imul
movs
mov
test
mov
ins
aas
rcr
mov
into
cmp
jecxz
inc
jnp
mov
call
push
mov
ret
xor
int3
jmp
pop
and
mov
seto
js
gs
(bad)
int3
pop
cld
ror
fldcw
add
mov
mov
cdq
sbb
inc
ss
jge
nop
loope
data16
aad
movs
aam
cmp
test
pop
(bad)
aad
add
aaa
and
or
nop
fs
fidiv
adc
push
cmp
pop
cli
dec
push
addr16
or
and
daa
mov
fiadd
sbb
loope
jge
and
push
adc
dec
rcr
adc
fild
scas
pop
jle
dec
xchg
inc
or
fstp
ret
inc
sbb
xchg
les
in
rcr
repnz
add
and
pop
jmp
mov
mov
mov
sbb
mov
and
imul
aaa
fild
dec
lss
dec
jo
mov
inc
inc
and
rcl
mov
or
(bad)
and
sti
xor
in
xchg
imul
jns
out
and
sbb
push
ja
sub
pop
(bad)
enter
clc
xor
pop
int3
aad
mov
movs
sub
xchg
add
mov
xlat
push
or
mov
dec
int
je
cmps
pushf
inc
inc
and
test
ins
mov
inc
fcom
push
or
xor
mov
sbb
repz
mov
popa
rcr
lahf
retf
sar
out
adc
pop
dec
mov
mov
out
dec
and
inc
pop
aad
mov
outs
xor
dec
pop
xchg
sbb
or
pop
push
(bad)
lods
pop
and
jb
ds
stc
into
adc
push
dec
pop
pop
pop
jecxz
fdivp
ss
pop
cmc
mov
not
popf
xchg
or
or
sbb
bound
sbb
inc
or
arpl
jmp
(bad)
(bad)
aas
int
stos
add
or
push
jns
cmp
ins
test
enter
data16
mov
mov
mov
dec
mov
pop
fs
mov
lds
sbb
dec
xlat
xchg
pop
mov
outs
fldenv
repz
jno
mov
xor
xor
push
sar
add
push
mov
adc
movs
jbe
inc
fimul
into
jno
lock
add
cmc
pop
or
jb
ja
ins
pop
outs
bound
popa
in
cld
fwait
nop
clc
dec
frstor
outs
pop
and
inc
addr16
jl
sahf
or
push
(bad)
cmp
mov
popa
mov
cmp
pop
int3
cmps
jae
scas
or
dec
or
fisttp
xchg
add
jne
mov
xor
movs
cmps
jl
daa
lea
mov
xor
(bad)
in
call
cmps
push
push
mov
int
loope
ss
ret
lahf
test
int
lea
(bad)
add
ret
xchg
mov
arpl
and
mov
fs
fild
mov
fisubr
fidiv
call
dec
mov
jg
fnsave
iret
fcmovbe
outs
jbe
pop
test
add
push
push
add
jmp
cmp
ja
std
mov
hlt
in
dec
in
jne
scas
and
sbb
push
loop
arpl
ret
xor
shl
mov
sbb
xor
xor
push
adc
ins
xor
jae
xchg
aas
sahf
js
leave
shr
loope
call
gs
lock
inc
bound
jmp
das
xor
and
daa
pop
loopne
pop
push
aam
lahf
in
aas
xchg
mov
outs
ret
in
imul
push
int3
mov
pop
dec
mov
stos
add
push
push
mov
push
cmp
jg
sbb
je
in
out
sub
jmp
call
aad
pop
fsub
push
xlat
in
sti
pop
push
jp
shr
inc
into
ret
push
sbb
div
add
or
daa
aam
mov
(bad)
gs
shl
jg
pushf
lods
cli
jmp
jbe
ss
xor
int3
icebp
fucomp
and
push
aad
iret
dec
out
mov
pop
push
dec
popa
xchg
pop
jmp
sub
jp
scas
ret
push
dec
and
(bad)
mov
adc
sti
inc
out
fcmovnbe
pop
inc
lods
aad
movs
mov
rol
cmp
imul
cmp
inc
xor
pop
je
or
mov
push
in
rol
mov
push
leave
pop
mov
sbb
dec
inc
pushf
jb
inc
std
(bad)
fwait
(bad)
sahf
sahf
push
adc
stos
mov
or
dec
ins
scas
std
push
mov
lea
pop
adc
xlat
shr
adc
xchg
mov
rcr
mov
mov
aad
mov
xchg
or
adc
stos
mov
fmul
adc
(bad)
mov
lds
cmp
mov
pushf
mov
loop
inc
or
pop
ds
js
inc
dec
jl
cmp
add
or
aaa
push
mov
ins
and
mov
sahf
leave
jno
add
jns
jle
xchg
loope
mov
adc
pop
jl
in
push
cdq
or
or
push
pop
pop
movs
std
ret
test
std
mov
outs
loopne
repnz
xor
loope
pop
pop
xor
inc
and
lods
not
fild
ror
sub
cli
(bad)
popf
mov
sub
(bad)
jp
dec
inc
sbb
stos
xlat
in
sbb
aaa
mov
xchg
arpl
(bad)
jnp
add
cmp
sti
test
push
mov
call
(bad)
icebp
push
out
sub
dec
sub
and
sbb
sbb
and
cmp
xchg
(bad)
and
push
nop
jns
fidiv
xlat
push
fimul
push
ret
pop
les
inc
push
out
sub
das
test
arpl
sbb
xchg
loop
(bad)
inc
sbb
or
sti
lock
fidiv
loop
outs
loope
hlt
mov
or
mov
sbb
push
out
cwde
xor
leave
xchg
push
arpl
sbb
pop
mov
imul
xor
sar
(bad)
mov
stc
ins
cmp
adc
(bad)
pop
cmp
sahf
cdq
jno
hlt
jo
repnz
dec
inc
adc
dec
pop
jmp
pushf
push
aad
call
fimul
sbb
mov
fcomp
in
or
cmc
(bad)
movs
sbb
int
push
cmp
pop
pop
xchg
jmp
pop
out
mov
imul
addr16
inc
dec
mov
ret
movs
adc
or
jecxz
cmp
hlt
add
rcl
scas
dec
push
lock
or
xchg
inc
push
or
leave
pop
cmovno
lahf
scas
ja
test
call
dec
and
nop
jbe
(bad)
pushf
push
lods
sub
jne
mov
out
mov
sub
mov
std
scas
fmul
mov
or
shl
jbe
push
pop
dec
shr
or
jmp
adc
out
adc
xchg
jge
mov
loop
fistp
jp
(bad)
jg
fisubr
jmp
pusha
(bad)
btc
cs
je
xchg
xchg
pop
inc
shr
push
mov
cmp
int3
pop
mov
dec
cmp
or
mov
push
cdq
(bad)
(bad)
rol
sbb
cs
add
leave
jmp
sbb
xchg
mov
outs
retf
cs
xor
repnz
pop
(bad)
rol
sbb
das
(bad)
out
out
or
and
jbe
push
int
mov
xchg
jbe
push
cld
mov
cmp
cmp
or
xor
cwde
ins
sub
sti
and
mov
mov
xchg
mov
ins
ret
mov
addr16
icebp
push
mov
inc
repz
(bad)
xor
pop
sti
jae
sti
(bad)
mov
mov
test
enter
test
sbb
adc
push
push
and
js
mov
mov
xchg
xor
push
jne
push
pop
xlat
inc
(bad)
mov
sahf
ja
imul
sbb
mov
rcr
push
pop
push
xchg
mov
mov
mov
sbb
xchg
mov
pop
push
add
jp
sub
inc
shl
pop
movs
outs
push
adc
stos
push
rol
or
aad
pop
xor
je
nop
jae
(bad)
and
pop
xor
or
add
and
xchg
imul
outs
mov
loopne
scas
fsub
inc
xor
push
fcomp
push
adc
mov
push
iret
cli
test
paddsw
sbb
xlat
mov
lods
icebp
ins
xchg
xchg
fwait
xor
xchg
pop
movs
push
arpl
or
mov
mov
mov
or
dec
mov
cmp
inc
cmp
cmc
fisub
retf
push
lods
shl
or
nop
(bad)
dec
adc
mov
std
int
lock
dec
shl
mov
mov
cmp
mov
lds
repnz
dec
xchg
popf
mov
mov
fwait
and
add
bound
cmp
fs
ds
xor
scas
retf
dec
mov
iret
mov
fld
cld
dec
pop
or
lds
repz
dec
inc
sbb
add
cmp
add
cmp
mov
push
jo
rol
adc
cmp
add
xchg
sbb
mov
add
or
enter
mov
jle
xchg
sahf
or
xchg
adc
add
push
in
jb
or
gs
push
and
mov
mov
xchg
out
test
movs
inc
(bad)
mov
pop
add
mov
ja
cmp
daa
add
lods
fucomp
out
or
shr
jg
adc
in
push
addr16
repz
cmp
pop
fnsave
bound
or
repnz
fwait
jno
dec
inc
dec
out
dec
push
or
pop
into
mov
iret
imul
sub
call
js
(bad)
or
jge
mov
add
sbb
inc
hlt
inc
jnp
test
fadd
mov
shr
pop
add
cs
or
inc
sub
or
jecxz
xor
je
mul
rcr
cmp
dec
sti
inc
push
movs
sub
xchg
xor
js
adc
mov
enter
addr16
aas
repnz
mov
in
daa
call
outs
repz
and
js
and
dec
clc
ficomp
nop
jb
jbe
sub
dec
sub
jno
or
xor
mov
scas
sti
push
sahf
add
mov
mov
push
mov
rcr
fnsave
add
sub
sub
or
inc
js
jne
sbb
jns
dec
shr
out
jo
adc
mov
nop
mov
int
inc
ja
xor
inc
retf
ins
cs
in
scas
jnp
or
out
sbb
xor
fmul
shr
jmp
ss
test
gs
push
ret
out
mov
lods
push
dec
push
add
leave
add
ins
out
fst
cmp
test
int
cmps
xor
test
xchg
push
push
mov
out
popf
arpl
or
sbb
into
pop
jo
loopne
dec
pop
lock
nop
mov
sub
push
retf
addr16
xor
mov
out
xchg
popf
cmp
lds
aas
loope
xchg
test
into
add
pop
mov
pop
js
scas
stos
ret
ins
repnz
stos
sahf
jne
adc
jnp
jl
jmp
push
adc
inc
aam
lock
jge
push
jns
cmp
ja
and
dec
(bad)
imul
and
lods
icebp
push
div
lea
mov
aas
xlat
xchg
cmps
sbb
stos
out
sbb
mov
sub
hlt
push
push
xchg
sub
test
mov
repz
data16
lds
mov
mov
xchg
xchg
jle
out
sahf
rol
xchg
mov
fld
mov
or
adc
inc
(bad)
sbb
in
mov
jge
daa
or
fmul
or
pop
jmp
and
or
sbb
das
test
(bad)
fidiv
dec
lock
or
or
fist
sub
sbb
jb
cwde
xor
pop
(bad)
sar
add
jmp
sbb
leave
call
fs
bound
xchg
mov
cmp
pop
mov
loop
iret
aaa
push
and
int3
ror
ret
add
(bad)
mov
pop
imul
adc
dec
cmps
push
push
xchg
sbb
jmp
das
xor
add
push
pop
(bad)
fdivr
aam
adc
ss
fsubr
adc
xor
js
xchg
daa
cmps
test
and
pop
push
pop
push
imul
sahf
ret
and
mov
push
and
push
push
aad
addr16
test
add
inc
stc
loope
push
int
inc
lods
mov
jbe
mov
mov
hlt
adc
mov
push
loope
xchg
inc
xor
fisttp
bound
fsubr
inc
mov
jg
retf
mov
leave
inc
or
cmc
sbb
ins
sar
push
out
inc
cmp
adc
dec
push
mov
out
js
jecxz
std
cmp
xor
cwde
test
sti
jnp
inc
or
ss
add
jmp
jp
fistp
or
sbb
inc
shr
or
and
das
stc
into
push
and
sbb
mov
jp
jne
xchg
fcomi
mov
and
sbb
xchg
fwait
cmps
arpl
push
das
sbb
jmp
in
sub
xor
repnz
mov
aad
xchg
mov
mov
xor
inc
imul
mov
sub
xchg
lods
cmc
xor
cld
popa
and
cmps
cmp
xchg
retf
adc
lds
call
dec
jge
jns
jo
mov
xchg
and
sub
cmc
rol
sbb
cdq
xchg
adc
retf
loop
mov
ror
xchg
int
pop
add
inc
and
clc
nop
push
fcmovnbe
std
sub
ss
js
lods
repz
push
push
dec
pushf
pushf
inc
mul
push
mov
cmp
ins
dec
imul
lock
test
mov
mov
add
dec
sbb
aas
repnz
lea
push
jbe
lock
test
loopne
(bad)
jmp
jnp
cmp
and
mov
sbb
or
sub
leave
cmp
rcr
comiss
daa
aad
ret
mov
aas
mov
ret
add
sub
jno
mov
push
jl
push
outs
lods
mov
sub
mov
int3
out
mov
or
and
mov
pop
in
jb
xor
mov
push
out
or
outs
les
fisubr
leave
aam
pop
adc
adc
cmps
stc
lods
cmc
xor
inc
lock
ins
add
push
std
aas
jno
nop
iret
fucomip
(bad)
test
repz
dec
shl
outs
pop
sub
xchg
xchg
add
push
cmp
and
(bad)
fcomp
inc
stc
lahf
jno
mov
std
dec
xor
aas
cmp
test
loope
cmp
pop
jbe
sub
and
and
jge
jg
mov
hlt
mov
jno
sub
loope
cli
dec
scas
ret
mov
jns
imul
xchg
movs
shl
xchg
pop
push
mov
nop
cli
cld
jmp
mov
adc
xchg
stos
mov
xor
fucomip
(bad)
loope
int
pusha
mov
fimul
add
mov
stc
in
nop
xchg
shl
inc
fiadd
out
push
pop
sbb
stos
test
or
pop
dec
and
idiv
fdivr
test
dec
xor
xor
or
out
std
mov
aad
das
push
xchg
pop
shl
std
ror
iret
(bad)
cmps
and
cmc
retf
xor
pop
(bad)
js
pop
das
les
cmp
xor
leave
inc
fs
icebp
mov
scas
pop
test
lods
test
sti
jmp
sub
xchg
ins
sbb
mov
mov
adc
mov
pop
enter
pop
lock
cwde
jmp
(bad)
sbb
dec
int
jo
inc
stc
inc
aaa
dec
sbb
dec
adc
pop
sbb
jnp
aam
and
bound
adc
test
jne
pop
popa
popa
sbb
retf
dec
lock
xchg
shl
lea
repnz
push
popf
and
jae
pop
leave
xchg
xor
imul
cmp
inc
data16
and
fwait
repz
mov
adc
sbb
int3
fidiv
cmp
imul
iret
add
cmps
std
cmp
sbb
bound
cmps
cli
stos
in
and
jbe
repnz
mov
or
loop
push
jge
mov
lods
aaa
movs
jo
adc
loope
(bad)
cmps
fs
vrcpps
and
adc
mov
in
fidiv
push
shr
or
mov
push
pushf
mov
pop
mov
in
sbb
jl
sub
push
test
(bad)
push
fsub
mov
std
sub
cwde
test
loop
add
push
sbb
push
hlt
fs
repnz
xor
les
loopne
mov
mov
pusha
push
(bad)
(bad)
adc
in
pop
pop
lds
pop
mov
rol
arpl
ja
cdq
es
out
imul
(bad)
xor
int3
stos
fisub
pop
xor
(bad)
imul
mov
xchg
mov
pop
das
call
and
cwde
sbb
outs
loope
adc
aaa
nop
cld
imul
pop
(bad)
repz
sub
clc
pop
jb
jbe
jmp
loopne
adc
cmps
fld
inc
jmp
int
mov
jne
sub
and
jle
sbb
jmp
pop
mov
mov
xchg
push
xchg
add
aad
mov
mov
sbb
add
inc
lea
fs
lods
xchg
rcr
sbb
mov
and
loope
out
dec
inc
mov
cmp
lea
mov
mov
movs
shr
lea
inc
mov
call
enter
mov
gs
mov
nop
mov
adc
sbb
cmp
in
add
cmp
sub
push
push
stos
mov
icebp
cmps
add
shl
jle
push
dec
inc
or
add
ins
lock
sbb
push
push
pop
sbb
sbb
shl
add
clc
add
or
rcl
sahf
xor
popf
mov
jle
rcr
scas
sbb
cwde
push
and
or
imul
sbb
dec
mov
cmc
mov
mov
jl
push
push
mov
or
dec
pop
int
gs
sub
aaa
jmp
mov
cld
and
popa
mov
fisubr
mov
lods
ins
and
and
push
cmp
adc
fild
push
push
cmp
xor
xor
movs
sub
xor
ss
dec
sar
sbb
mov
fimul
clc
xor
dec
sbb
lods
jo
in
scas
arpl
dec
mov
mov
aad
fidivr
adc
push
push
cmp
push
mov
out
out
or
aaa
in
xor
and
repz
xlat
add
je
scas
pop
popa
call
shr
cmps
xor
fld
ss
popa
popa
fdivr
mov
repnz
or
mov
mov
sub
adc
mov
fsubrp
push
sub
xor
cmp
push
shl
test
inc
push
dec
call
mov
xor
imul
sar
jbe
data16
rol
das
call
out
nop
aaa
jg
je
loopne
js
push
aaa
adc
xor
pop
out
mov
movs
mov
mov
les
stc
clc
sbb
les
call
data16
inc
lock
mov
pop
(bad)
dec
movs
lock
push
test
in
scas
stos
fnstenv
mov
shl
xor
out
icebp
inc
push
ret
push
xchg
fistp
push
or
rcr
stc
repnz
sub
(bad)
pop
inc
mov
outs
fwait
test
sbb
fisttp
or
sbb
std
xchg
in
repnz
dec
(bad)
retf
je
jle
xor
shl
jge
jmp
in
in
test
pushf
mov
inc
iret
(bad)
sbb
cmp
sub
push
data16
jno
mov
stos
dec
and
jno
jecxz
jp
imul
add
cmp
or
and
cmc
mov
mov
xchg
in
jmp
cmp
push
pop
popf
aam
movs
hlt
(bad)
out
pop
xchg
sbb
jecxz
or
wbinvd
inc
and
and
cmp
pop
call
dec
jne
int
pop
cmp
imul
mov
and
stos
in
adc
test
popa
sub
pop
pop
jge
cmc
mov
cmp
jmp
mov
mov
ret
sub
add
xchg
movs
push
rcl
jmp
mul
inc
in
and
mov
test
(bad)
pop
mov
jo
ds
xchg
test
enter
fadd
or
test
hlt
adc
lea
mov
fbld
jg
dec
xchg
dec
fcomp
arpl
dec
int
pop
addr16
pop
adc
push
rcl
fisubr
sub
loopne
dec
mov
push
lods
test
pop
shr
sbb
or
sbb
cmp
cmps
es
fsub
fdiv
in
or
lods
push
xor
mul
dec
mov
imul
mov
pop
dec
push
sub
imul
sub
rol
xor
imul
nop
mov
sahf
sub
pop
loop
pop
mov
sub
jns
adc
dec
shr
jmp
dec
adc
out
mov
gs
pop
shl
mov
lds
(bad)
pop
adc
xchg
clc
stos
mov
or
lea
dec
call
sub
or
add
js
mov
add
arpl
int
jg
enter
ss
or
(bad)
cmp
je
retf
pop
cwde
adc
lods
mov
xor
or
sbb
push
jb
mov
movs
xor
sbb
cmps
push
movs
(bad)
ror
dec
sbb
imul
push
daa
mov
adc
clc
pop
xchg
repz
call
jno
fs
repz
popa
mov
cmps
lds
and
sbb
mov
mov
and
and
fsubr
or
jp
lds
outs
sti
mov
add
cmp
fs
movs
pop
and
jle
adc
call
dec
jo
and
jecxz
jmp
rol
cmp
jns
mov
int
lods
cmp
mov
mov
cli
retf
ficom
pop
xor
sub
cli
movs
xchg
cwde
dec
push
sub
cld
clc
cmp
dec
iret
pop
int3
dec
(bad)
xchg
pop
mov
cmp
cmp
xchg
mov
out
retf
rol
sahf
mov
xchg
pop
aam
inc
stos
jo
dec
test
jae
or
ja
aaa
arpl
add
sub
test
add
mov
jmp
icebp
loope
lods
in
mov
pop
popf
jno
(bad)
repz
lds
pop
jmp
adc
hlt
sbb
jae
or
jo
add
rcl
jb
or
aam
or
xchg
pop
clc
addr16
push
loop
mov
mov
add
mov
or
clc
enter
xchg
(bad)
xor
fs
ss
scas
je
jne
call
mov
jo
add
pop
xchg
sbb
ins
daa
sub
add
push
or
outs
retf
sti
fadd
mov
add
or
stc
jo
cli
pop
out
xor
jae
adc
jo
sub
lea
pop
pop
adc
sub
mov
pop
mov
stos
jmp
inc
pusha
out
js
push
pop
loope
imul
sbb
xchg
mov
mov
clc
inc
jl
movs
mov
mov
nop
aaa
daa
push
lea
adc
mov
aaa
jnp
and
not
gs
mov
push
and
mov
mov
push
das
call
mov
cmps
neg
cs
xchg
sar
sti
sub
sbb
mov
cmc
retf
dec
stos
jne
pusha
mov
xchg
(bad)
xor
sbb
jbe
mov
out
push
pop
repnz
xchg
and
push
adc
sbb
mov
cdq
cmp
sbb
adc
call
jno
add
mov
jg
nop
lods
mov
xor
mov
mov
(bad)
push
test
out
fcomp
daa
xchg
jmp
jmp
push
fwait
ret
sub
rcl
mov
iret
call
jnp
dec
sub
pop
imul
xlat
pop
jg
mov
stos
mov
xchg
and
push
jnp
ins
aad
push
arpl
pop
mov
add
and
xchg
and
cs
jge
inc
jmp
mov
ins
mov
ret
pop
and
pop
iret
add
into
(bad)
dec
xor
jge
call
jb
(bad)
xchg
lods
or
loopne
add
fs
ret
pop
mov
or
ret
clc
pushf
push
sub
sub
push
mov
dec
out
sbb
bound
adc
cmp
dec
cwde
les
pushf
cmp
xchg
arpl
inc
popf
jnp
jmp
jno
pop
fnstenv
mov
ss
mov
xchg
les
jmp
jg
out
add
int3
xchg
call
jmp
aaa
jmp
push
sub
push
mov
outs
pop
cwde
mov
sub
popf
mov
pushf
adc
add
mov
in
xor
(bad)
cmp
pop
sub
sbb
pushf
jmp
sub
ficomp
adc
adc
jae
in
ror
pusha
jmp
mov
mov
aam
push
mov
fcos
shl
lods
mov
mov
movs
or
xchg
add
movs
dec
mov
mov
jge
inc
out
and
push
add
lods
inc
jo
pop
cmp
add
xor
jle
nop
sbb
es
xchg
dec
mov
addr16
push
cld
retf
fimul
ret
pop
mov
fldenv
lea
out
or
add
adc
pop
into
inc
test
cmp
and
push
ret
out
xor
add
je
jne
rcr
mov
push
adc
movs
cmc
adc
xor
xor
stos
xor
jle
cmp
aaa
xchg
mov
lods
dec
jp
out
iret
xchg
rcl
pop
jb
push
mov
jge
repz
jp
sub
sub
and
in
cdq
adc
pushf
and
jecxz
inc
xchg
dec
jo
(bad)
xchg
inc
adc
fcom
cli
out
aas
inc
addr16
and
ss
inc
pop
leave
lock
scas
(bad)
pop
xlat
stos
dec
ror
and
push
or
stc
(bad)
mov
das
mov
arpl
inc
fld
dec
mov
sahf
iret
or
xchg
sbb
ret
xchg
out
jg
jg
sub
mov
sar
pop
not
and
mov
jmp
jle
ins
in
fdivr
adc
push
in
and
test
imul
les
outs
test
sahf
(bad)
shl
repz
or
loopne
jnp
fs
aaa
rcr
cmc
jae
mov
push
push
inc
cs
dec
pushf
inc
sub
xor
dec
loopne
arpl
jmp
add
or
xlat
shr
xchg
mov
mov
cmp
xor
push
sbb
push
dec
xlat
lods
jp
aad
xchg
pop
and
mov
in
lahf
bound
and
test
or
popa
fld
mov
mov
cmp
cmovg
vpsubw
push
in
aad
lahf
sub
sub
cmp
cmp
clc
push
rol
push
mov
out
aas
and
sub
inc
cmps
xchg
inc
icebp
xor
outs
xchg
jb
mov
(bad)
(bad)
sub
rcl
in
stc
std
stos
test
arpl
push
cwde
adc
ret
es
rcl
sbb
cmps
mov
inc
mov
jnp
jle
int3
mov
dec
lock
ins
nop
sbb
add
test
aam
and
cmp
xor
adc
cmp
push
and
out
popa
rcl
imul
lea
push
xchg
sti
int
test
fsubr
imul
cmc
icebp
out
fmul
mov
stos
xchg
add
dec
bound
pop
add
call
sub
jno
adc
fwait
data16
ss
push
sbb
add
ins
pop
add
inc
cmc
push
call
leave
mov
mov
nop
outs
or
pop
pop
outs
out
test
cs
jge
xor
push
xor
inc
xchg
or
stc
sbb
xchg
shl
cmp
adc
adc
loopne
mov
xor
mov
mov
(bad)
push
pop
push
(bad)
dec
scas
repz
fld
push
mul
fwait
sub
fbstp
std
cmp
jge
mov
fimul
xchg
cmp
lahf
xchg
cs
loope
imul
xor
shl
xchg
push
lods
inc
inc
std
mov
or
or
(bad)
(bad)
mov
and
dec
shl
iret
sub
lea
adc
pop
sti
idiv
or
xor
in
push
mov
xchg
mov
jmp
loop
xor
cmp
rcl
pop
dec
scas
imul
mov
lahf
iret
sahf
xor
shl
maskmovq
imul
sbb
in
ror
or
cli
ret
cmp
imul
imul
leave
bound
push
mov
or
sahf
xchg
or
mov
sbb
adc
add
push
icebp
or
pop
(bad)
inc
cli
mov
(bad)
(bad)
mov
fs
push
add
sub
js
push
retf
dec
sub
clc
jnp
(bad)
dec
inc
cmp
push
shl
xchg
mov
push
inc
ret
pop
repnz
aad
sbb
push
jnp
cdq
jae
jecxz
sub
std
stos
mov
inc
push
mov
fsub
or
or
jb
xlat
add
into
sub
in
adc
add
and
enter
and
arpl
daa
xor
movs
sub
adc
pop
mov
jp
stc
mov
shl
das
xchg
fwait
xor
fsubr
jge
outs
iret
aad
cmps
ret
or
mov
sub
fild
cli
pop
inc
and
mov
or
and
(bad)
cli
sub
in
rol
iret
shl
inc
xchg
repnz
and
or
stc
mov
pop
ja
cs
(bad)
pop
inc
push
movs
mov
fcomip
cmp
dec
mov
popf
cli
ret
pop
cmp
cmc
cmp
out
dec
int
lds
repnz
int
cli
or
push
and
pop
mov
iret
out
mov
out
push
push
or
fcompp
call
ds
jmp
movs
ss
jp
mov
cwde
push
sub
or
(bad)
sbb
pop
inc
jle
and
cmp
imul
retf
and
out
sub
mov
mov
dec
and
xchg
es
mov
add
mov
inc
sar
mov
push
cmp
(bad)
jmp
xchg
or
test
lahf
ret
jecxz
pop
mov
jmp
lds
cmp
pushf
outs
leave
or
neg
ret
mul
aas
sbb
mov
push
mov
ror
dec
cmc
ret
mov
cmps
jl
sub
mov
scas
jae
aas
xchg
push
jmp
adc
adc
in
or
jne
or
ret
div
and
addr16
or
outs
cmp
cmp
nop
xor
push
mov
or
inc
ror
outs
or
(bad)
cmp
fsub
aam
aad
sbb
ins
sub
cwde
jns
mov
test
sbb
jmp
test
fwait
add
mov
add
ret
or
xlat
stc
js
jl
ds
cmp
sbb
adc
jmp
xor
cmps
(bad)
stos
and
sbb
pop
push
ja
push
inc
xor
ret
mov
clc
lds
pop
cli
jg
call
and
sub
cmc
mov
fstp
cmps
aaa
adc
scas
js
jge
fmul
xchg
pop
push
mov
pop
sub
stos
shr
jmp
mov
int
retf
outs
adc
inc
in
aas
sti
(bad)
mov
sbb
das
cmps
pusha
jns
mov
sbb
in
stos
inc
inc
mov
ss
and
out
xlat
sub
push
mov
clc
jno
jmp
jp
imul
add
mov
(bad)
(bad)
mov
sub
push
push
inc
dec
push
push
pop
mov
rol
lock
or
test
nop
nop
fiadd
idiv
nop
rol
scas
jg
add
push
test
repz
(bad)
shr
sub
mov
dec
es
mov
mov
(bad)
imul
cld
push
adc
int
push
sbb
add
(bad)
ds
sbb
mov
inc
xchg
fstp
inc
cld
adc
mov
in
scas
shr
mov
fcom
sub
in
aam
jmp
and
adc
enter
xchg
inc
clc
mov
into
mov
or
in
push
lahf
mov
cli
add
mov
fadd
arpl
jg
jbe
outs
cmp
mov
xor
fnstenv
mov
popf
inc
xchg
bound
dec
or
ror
ret
bound
add
add
mov
ds
or
je
sar
mov
nop
pop
das
je
imul
mov
jne
and
and
xor
jbe
movs
leave
sbb
jno
dec
movs
sub
mov
xchg
repnz
lock
mov
arpl
jmp
add
lods
push
or
push
dec
out
ins
and
pop
mov
mov
rcl
cmp
sbb
repnz
mov
jp
(bad)
mov
fisttp
jp
add
icebp
mov
popa
sub
adc
inc
dec
inc
in
sub
test
iret
ret
pop
clc
aaa
sti
xor
mov
test
cmp
rdmsr
sub
xchg
lods
mov
in
dec
inc
cli
repnz
jbe
in
imul
inc
repnz
iret
mov
(bad)
pusha
mov
cli
mov
hlt
out
mov
and
cmps
lahf
add
pop
movs
mov
mov
ret
shr
sbb
gs
int3
add
mov
or
lahf
and
or
cmp
ins
xchg
sar
jle
cmps
push
adc
lds
sbb
xlat
mov
aas
popa
cwde
add
pop
adc
movs
cld
sbb
xchg
(bad)
dec
jg
int
jecxz
push
loope
lea
(bad)
std
jnp
xchg
push
cmp
call
leave
outs
popa
adc
or
and
lahf
scas
outs
popa
fcomp
add
xchg
sub
adc
sub
push
mov
lahf
add
out
push
mov
hlt
jne
mov
mov
je
jmp
(bad)
jp
out
jg
or
xor
add
pushf
fcom
jne
fmul
jbe
pop
lods
jge
dec
and
(bad)
loop
push
les
(bad)
fimul
movs
outs
(bad)
dec
mov
push
in
sar
sub
imul
mov
add
xchg
hlt
add
push
jg
dec
inc
je
outs
ss
mov
mov
loopne
dec
mov
arpl
imul
pop
inc
mov
mov
mov
jns
xchg
or
pop
test
cli
popa
pusha
or
in
adc
jl
fisubr
xlat
std
les
stos
cs
lods
fist
out
or
fmulp
sub
sbb
sbb
aad
das
mov
stos
mov
add
dec
dec
out
xchg
sbb
xchg
mov
sbb
sbb
sub
sbb
pop
in
cs
repz
add
loop
ror
sub
jne
int3
and
popa
int3
adc
(bad)
bound
ret
sbb
dec
or
cdq
in
push
cs
cmp
into
aas
enter
xchg
pop
and
push
movs
xor
jne
cmp
add
or
ja
inc
pop
(bad)
xchg
pop
shl
pop
test
inc
rsqrtps
pop
popa
repz
xchg
fwait
jle
add
mov
sub
jge
into
ret
add
movs
leave
lea
in
repnz
call
mov
fnstenv
sbb
sbb
pusha
jno
pop
stos
mov
push
jnp
pop
push
lds
(bad)
ds
out
mov
gs
(bad)
sti
mov
int3
in
jp
dec
mov
add
stos
popf
js
retf
mov
jle
in
or
out
fstp
jp
fadd
dec
sub
mov
ja
jle
inc
add
cmp
je
clc
or
repz
add
repz
data16
rol
pop
(bad)
xchg
mov
sar
sub
cmc
fwait
xor
or
pop
pop
and
retf
sub
popa
sahf
sbb
mov
xchg
sub
aaa
scas
pop
or
add
dec
gs
jl
(bad)
push
stc
adc
inc
test
sbb
(bad)
sahf
push
and
retf
or
pop
(bad)
push
and
mov
mov
test
xchg
xchg
mov
mov
imul
add
push
sub
push
cmp
cmc
pop
popa
xor
add
ins
lock
xchg
(bad)
jo
jecxz
pop
push
mov
or
repz
and
pop
out
push
add
std
cwde
and
and
lea
arpl
pushf
push
jmp
jecxz
fs
in
div
mov
out
sbb
sbb
in
cmp
and
cmp
retf
cmps
call
retf
mov
sbb
in
pop
outs
add
xchg
push
aam
ins
int
not
bnd
ficom
xchg
xor
imul
xor
out
mov
jp
push
(bad)
pop
xchg
lods
sbb
out
popf
ss
mov
ffreep
cld
into
stos
ins
dec
rol
mov
out
gs
pop
ret
sub
xor
adc
rcr
sub
and
pop
sub
sbb
dec
inc
test
mov
jge
mov
ins
call
rcl
out
add
xor
cmp
adc
inc
jge
pop
jns
add
push
stos
not
imul
in
mov
push
stos
adc
addr16
jmp
inc
inc
lahf
ror
(bad)
and
cmp
clc
dec
cdq
mov
movs
cmps
cli
add
jb
rcr
pop
(bad)
push
lods
add
ret
clc
(bad)
push
ds
mov
mov
lahf
lock
or
fnstsw
push
push
dec
icebp
clc
sub
cmps
push
jno
std
xor
mov
cmps
mov
not
jmp
mov
movs
inc
lahf
(bad)
gs
mov
xor
call
xor
ja
ror
arpl
jecxz
mov
imul
push
pushf
imul
call
movs
inc
jae
push
xchg
jmp
mov
loope
inc
jmp
and
mov
scas
mov
loop
adc
mov
cmps
in
pop
jne
movs
rcl
push
pop
lahf
repz
and
(bad)
repnz
dec
and
add
jp
inc
and
dec
xor
mov
dec
mov
js
or
enter
mov
fcmovbe
mov
inc
lods
sbb
aam
xchg
inc
sti
or
dec
mov
imul
int3
dec
dec
sub
xor
(bad)
into
mov
stos
mov
cmp
call
std
in
mov
jmp
adc
mov
sub
nop
fcomp
imul
imul
dec
inc
stos
mov
shr
mov
or
mov
mov
aad
sbb
pop
xor
xchg
xchg
dec
jno
mov
cmp
fs
cmps
data16
jbe
jge
cmc
jl
clc
jecxz
popf
(bad)
(bad)
lods
int3
push
lods
add
inc
xor
xor
enter
dec
test
lods
inc
pop
imul
hlt
pusha
bound
sub
mov
lock
ds
mov
push
mov
fwait
repz
test
and
repnz
mov
clc
test
mov
lods
and
sub
mov
sub
je
and
xor
inc
and
ins
sbb
cli
test
pop
cmp
push
add
les
add
pushf
arpl
mov
jp
sbb
add
iret
cmp
mov
add
in
jnp
clc
sbb
dec
xchg
lods
aad
xchg
jns
(bad)
fldenv
fwait
or
cli
or
mov
(bad)
add
ja
xor
cmps
cld
in
mov
cmp
iret
dec
pop
push
mov
(bad)
adc
outs
sbb
mov
push
mov
add
adc
add
ss
xor
add
dec
jb
xchg
stc
lds
push
mov
out
jbe
lods
mov
retf
jb
xor
inc
sbb
push
sahf
xor
jno
and
xor
mov
adc
popf
fcmovnb
rcr
loop
xchg
imul
gs
sbb
cmp
out
xchg
and
test
cmps
popf
outs
add
dec
int
rol
call
sbb
mov
addr16
cli
cli
pop
(bad)
retf
pusha
sbb
(bad)
mov
aas
pop
pop
cmp
adc
test
lods
mov
mov
xchg
adc
in
push
xchg
push
(bad)
aaa
and
pop
addr16
jl
or
pop
(bad)
and
or
in
mov
pop
lods
sbb
repz
add
mov
rcl
fld
xchg
bound
and
xchg
lods
(bad)
jl
shl
shl
sbb
pop
fisubr
adc
out
sysret
or
pop
inc
stos
sbb
es
jb
mov
int
idiv
dec
dec
test
mov
xor
mov
mov
push
xchg
xchg
hlt
adc
test
sar
jo
rcr
pushf
test
adc
pop
(bad)
jl
and
les
sar
pop
push
out
ret
push
std
repz
dec
push
mov
in
dec
or
dec
in
rcr
xchg
mov
cmps
stos
popa
ins
cli
(bad)
xor
aam
shr
jge
shl
outs
jb
add
push
add
jge
inc
sub
xchg
ins
inc
jl
fdiv
dec
cld
sub
mov
add
adc
or
in
and
mov
pop
mov
jge
lods
mov
dec
sahf
xchg
adc
and
(bad)
jmp
fld
es
xchg
mov
movs
cwde
es
jns
test
xchg
adc
inc
mov
repnz
xor
pop
mov
scas
ins
rcl
add
addr16
es
inc
loop
leave
imul
fs
jne
(bad)
das
mov
ret
pop
jge
(bad)
push
mov
aas
adc
cmp
pusha
sbb
repnz
mov
jno
loopne
jnp
std
loop
or
cmp
sub
xchg
(bad)
and
sar
push
jo
jmp
stos
ds
fs
fsubr
js
int3
jmp
add
shr
cmps
xlat
push
mov
imul
frstor
aaa
mov
cmp
inc
push
sti
xchg
pmullw
push
sbb
call
std
(bad)
cmp
test
ss
sti
or
test
jae
add
retf
aam
cmc
jg
fnstcw
cmp
(bad)
xor
loop
mov
cmp
inc
inc
out
fidivr
push
inc
stos
pushf
(bad)
sub
(bad)
shl
mov
cs
push
add
inc
icebp
and
mov
pop
jnp
(bad)
jp
sbb
inc
add
cmp
addr16
mov
enter
jmp
and
stos
pop
idiv
xchg
mov
or
inc
mov
fidiv
adc
add
(bad)
mov
xlat
cmp
xchg
movs
or
xor
xor
aaa
rcr
sub
aaa
call
daa
call
cwde
inc
cmc
jle
pop
jl
arpl
fs
mov
mov
fstp
arpl
push
push
pop
les
sar
jp
retf
jo
leave
loop
jmp
push
sbb
xchg
jne
pop
xor
xlat
xlat
iret
pop
pop
addr16
jbe
jl
pop
fs
mov
arpl
fld
cmp
jne
xchg
or
pusha
sti
xor
jmp
pop
sbb
jge
fdivr
ffreep
mov
sbb
ret
enter
xor
push
(bad)
in
mov
xlat
sbb
sub
mov
aam
loopne
data16
sbb
das
push
pop
mov
or
pop
mov
push
push
or
mov
sbb
repz
cwde
add
sub
adc
(bad)
pop
lahf
sti
sti
add
pop
mov
lods
and
and
jae
bndldx
xlat
dec
mov
dec
movs
push
out
rcl
pop
push
outs
loope
ret
mov
jbe
mov
push
out
sbb
inc
push
xchg
pop
cmp
fsub
cmp
dec
stos
sbb
inc
mov
pop
sar
mov
aad
cld
jg
jbe
(bad)
cmps
loopne
in
push
adc
cmp
cmc
xchg
cmps
das
in
out
mov
xchg
icebp
clc
add
test
pop
and
mov
into
daa
xor
mov
pop
call
das
jge
xor
addr16
movs
cmp
pop
(bad)
dec
and
lahf
mov
sub
test
sub
lock
icebp
mov
inc
or
mov
dec
inc
aad
mov
int
xchg
jbe
std
(bad)
lock
clc
adc
xor
ss
cld
cld
pop
data16
cdq
mov
nop
pusha
mov
js
in
add
shl
and
call
push
dec
mov
mov
(bad)
mov
loope
repnz
sahf
lods
cs
loopne
fist
clc
lahf
repnz
and
out
fbstp
xor
jle
push
or
loop
push
neg
sbb
fucomp
shl
inc
ins
nop
cmp
fidiv
pop
test
xchg
adc
loopne
out
cli
mov
xchg
fbstp
pop
stc
shl
fwait
sar
sbb
psubusw
inc
mov
push
mov
inc
ds
test
pop
int
movs
(bad)
jmp
out
pop
push
popa
mov
call
dec
jmp
cmp
sbb
fsubr
in
ins
push
adc
pop
jno
push
stos
or
or
mov
cmp
(bad)
test
(bad)
cs
pop
xchg
mov
jns
inc
ret
xor
fisubr
push
repnz
jl
sub
inc
mov
out
fisubr
aad
jg
or
sub
sbb
or
and
jno
mov
jle
pcmpeqb
idiv
cmp
fcomip
lods
bound
inc
adc
mov
sub
pop
pop
das
jecxz
jge
cmp
cmp
in
sbb
xchg
jecxz
stos
retf
call
popf
in
jp
add
gs
jmp
adc
stc
aad
xchg
xor
jo
aam
or
leave
xor
dec
mov
inc
lea
sbb
cdq
mov
fsub
les
add
stos
xor
out
outs
cwde
mul
jb
fiadd
dec
in
out
xor
ds
(bad)
out
out
mov
mov
movs
or
sub
pop
(bad)
and
test
sahf
retf
pop
repz
test
xor
mov
jle
jl
jecxz
jl
arpl
call
leave
mov
aad
mov
push
jns
int
fs
stos
sbb
and
add
scas
push
dec
std
dec
fmul
cmp
cmp
adc
sbb
and
adc
cmp
scas
stos
push
pop
and
bound
mov
inc
clc
jb
jne
dec
out
ret
leave
loope
int3
lahf
mov
pop
dec
or
into
mov
or
and
jecxz
fs
xor
pop
scas
dec
sub
(bad)
sbb
jns
mov
pop
fcomip
bound
call
(bad)
sti
out
cmp
cmps
ror
aas
jmp
gs
iret
adc
retf
hlt
or
je
cmp
push
or
test
push
dec
lods
sar
rol
ds
pop
pop
jo
les
push
jae
popf
fimul
call
inc
cmp
dec
shr
push
jno
mov
and
dec
ret
div
call
cmps
pop
pop
mov
jmp
lods
fstp
sub
mov
fst
push
mov
mov
add
sbb
add
xchg
xchg
repz
bsf
shl
cwde
repz
imul
sub
sub
pop
mov
ja
popf
push
(bad)
das
cmp
or
xchg
imul
lods
jp
and
int3
ds
xor
sbb
or
ds
sbb
adc
sti
ins
adc
repz
div
dec
adc
mov
cmp
xor
mov
dec
or
adc
lock
in
mov
popa
iret
je
add
pop
jg
(bad)
out
dec
push
dec
outs
xchg
daa
(bad)
xchg
inc
mul
jbe
aas
ficomp
pushf
mov
push
xor
mov
loop
dec
sbb
outs
cmp
push
adc
std
dec
mov
adc
mov
mov
loop
jecxz
jne
sbb
xor
(bad)
(bad)
icebp
push
lods
(bad)
mov
(bad)
add
sbb
push
push
je
enter
xchg
add
daa
dec
mov
add
lods
(bad)
fsub
sbb
in
and
push
xchg
cmps
adc
stos
jecxz
cmp
pushf
pop
xchg
sub
ds
mov
mov
ficom
pop
xor
stc
enter
push
rcl
ins
xchg
add
adc
in
in
mov
out
jle
add
(bad)
adc
xlat
adc
dec
pop
in
aad
ja
mov
mov
xchg
mov
cli
fcom
movs
xlat
div
mov
scas
add
lock
sub
fs
sbb
dec
sub
outs
repz
sbb
fdiv
sahf
out
aad
jbe
cmp
pusha
and
cdq
sar
sub
stc
loop
imul
imul
cmp
add
test
loopne
and
mov
fisubr
enter
leave
pop
cwde
loope
jl
es
pushf
stos
add
fisub
jns
mov
(bad)
push
push
mov
test
retf
mov
imul
add
push
fidiv
cmp
hlt
pushf
neg
repz
cmp
lods
or
mov
je
cmp
fcmove
call
jecxz
jl
std
lods
loopne
repnz
push
cli
mov
jns
jp
mul
outs
and
aas
push
xor
sub
adc
xchg
and
inc
hlt
ja
push
loopne
or
xor
push
mov
lahf
push
mov
mov
pop
xor
add
in
iret
add
pop
xlat
mov
(bad)
fcom
inc
stos
sub
fsub
mov
or
or
xchg
ret
or
in
inc
in
sbb
pusha
call
xlat
loope
xor
lods
call
dec
mov
mov
out
sub
stc
jne
mov
or
fwait
lds
out
scas
or
ror
or
jmp
push
adc
cs
lods
fadd
jo
hlt
add
inc
out
stc
outs
mov
nop
pop
sub
enter
jg
stos
or
or
leave
push
mov
xor
out
sbb
or
lds
cdq
mov
cmp
sbb
push
ret
xor
jecxz
push
mov
jmp
or
outs
ret
ficom
fld
jmpw
repnz
out
sbb
in
mov
sbb
cmp
aas
(bad)
sub
dec
fstp
js
xor
rcl
push
lock
popa
lahf
dec
inc
xchg
push
out
ins
js
movs
mov
or
sbb
repz
cs
inc
mov
in
sbb
rcr
jmp
retf
ret
jmp
cmc
xchg
push
fwait
cmp
dec
and
mov
xor
push
js
pop
cmp
ins
inc
es
jbe
mov
pop
out
push
inc
cmp
mov
popf
idiv
retf
stos
inc
(bad)
fadd
mov
jne
addr16
test
in
adc
cli
frstor
call
adc
mov
mov
pop
fsubr
mov
mov
(bad)
icebp
outs
(bad)
popf
jne
cs
repnz
cmc
inc
pusha
jmp
or
and
ins
and
bound
out
sti
adc
xchg
shr
inc
out
fidiv
inc
xchg
jg
push
mov
imul
mov
stc
test
pushf
xlat
mov
je
push
pop
fcmove
retf
sbb
sbb
cmps
adc
dec
xchg
aad
mov
jne
cmp
movs
dec
mov
xchg
jle
movs
and
sub
xchg
or
cmps
aam
xchg
cli
(bad)
gs
or
jge
push
pop
ins
in
test
push
scas
fwait
xchg
or
stos
popf
fist
icebp
movs
sub
push
mov
xchg
push
xchg
mov
(bad)
les
mov
ins
loop
jo
cmp
jae
addr16
popa
mov
add
jns
xor
bound
jge
mov
icebp
sbb
inc
(bad)
je
loopne
movs
stos
mov
les
je
jmp
scas
or
test
pop
aas
dec
inc
icebp
repz
test
adc
lock
fst
mov
xchg
ds
jno
les
inc
xchg
and
mov
xor
and
xor
xchg
push
lods
dec
pop
inc
into
retf
repz
in
adc
jle
cmp
cdq
xchg
pushw
jb
xlat
pop
sub
mov
sub
and
into
mov
push
loop
ret
in
push
js
jg
fimul
or
mov
cmps
hlt
jns
mov
dec
push
sub
pop
es
fwait
mov
and
je
daa
jnp
aas
jmp
push
stos
retf
xor
xchg
pop
test
mov
loopne
mov
pop
call
sub
xchg
xor
xor
cmp
pop
call
inc
push
pop
jmp
xchg
loope
adc
mov
stos
jl
lock
xor
stos
and
inc
stos
fwait
pop
or
cmp
in
mov
and
das
adc
inc
out
addr16
sti
repnz
inc
mov
cmp
jg
or
in
(bad)
sti
adc
int
pop
jge
inc
pop
jo
add
or
pop
dec
dec
xor
(bad)
sub
xchg
ins
ja
adc
pusha
std
mov
in
dec
mov
mov
(bad)
mov
jne
daa
fs
cld
icebp
test
xor
retf
push
push
adc
clc
imul
outs
cwde
jne
nop
mov
pop
iret
cmp
push
fs
pop
adc
data16
and
(bad)
jbe
pop
fs
xor
mov
jge
imul
mov
inc
test
int
les
inc
jmp
inc
xor
es
fild
push
or
sahf
add
pop
jle
lea
(bad)
hlt
les
(bad)
mov
jb
and
pop
mov
test
loope
rcl
fdiv
xchg
jbe
jb
sbb
enter
inc
inc
sbb
rcl
jnp
xchg
xor
and
jae
cwde
call
fs
sahf
jne
into
fiadd
push
or
test
dec
push
ins
and
mov
or
pop
jp
cmp
fistp
mov
sbb
or
sbb
adc
push
in
push
in
outs
pushf
pop
sub
cmp
js
xor
jg
retf
not
das
sahf
and
clc
pushf
outs
pop
sub
jne
and
sub
mov
loop
movs
int
(bad)
(bad)
(bad)
(bad)
jg
mov
leave
adc
mov
xor
add
or
fisub
ret
cmp
push
xlat
lods
or
jg
adc
mov
sbb
fmulp
mov
xchg
push
out
push
jae
stos
enter
jge
xchg
stc
pop
jge
bound
sub
ja
clc
mov
int
adc
adc
jmp
es
ss
jnp
pop
fcompp
pop
add
ins
push
pop
scas
imul
inc
repz
sub
sub
cmps
cmp
pusha
ret
stos
retf
jmp
mov
push
aaa
ret
loop
mov
fst
adc
idiv
dec
jns
and
ror
mov
pop
(bad)
loope
jg
pusha
test
in
pop
xor
cs
fwait
cmp
cmp
enter
xchg
jne
in
push
mov
stos
data16
and
mov
std
inc
mov
cdq
cmp
xor
push
popf
addr16
cmp
neg
loope
dec
in
dec
pop
(bad)
loopne
sbb
sbb
mov
(bad)
mov
arpl
mov
add
call
stc
push
inc
(bad)
cmc
push
nop
cmps
mov
jle
adc
mul
mov
mov
ss
test
(bad)
mov
or
sbb
dec
or
outs
(bad)
pop
fild
mov
push
add
div
dec
sbb
pushf
mov
cwde
inc
das
adc
jns
retf
adc
pushw
xlat
add
faddp
test
js
push
loope
sar
jae
xor
scas
popa
jns
xor
loopne
jmp
fmul
and
rol
xor
aaa
aad
mov
add
sahf
popf
jnp
inc
lahf
push
fld
xor
in
and
ror
xchg
call
push
mov
es
add
cmp
nop
mov
jmp
stos
jne
fcom
push
test
sbb
ins
or
pop
ja
in
sub
inc
shl
cmp
enter
mov
xchg
sub
movs
lea
jecxz
sbb
adc
not
icebp
or
sub
sub
jne
jo
sub
push
sbb
hlt
jo
xor
cs
adc
cmp
cdq
push
test
inc
xor
adc
cmp
push
hlt
into
push
fnstenv
mov
repz
and
test
(bad)
mov
pusha
lea
add
into
pop
sub
pushf
mov
mov
xchg
xor
mov
xor
xchg
mov
add
mov
mov
jecxz
fbstp
adc
shr
imul
ds
rcr
sbb
mov
in
pop
inc
shl
fist
cmp
lods
add
jmp
sti
adc
into
rol
cwde
cmps
xchg
lods
retf
push
sbb
stc
jbe
jmp
icebp
jmp
movs
scas
stos
adc
mov
clc
sbb
out
push
jb
xor
rcl
test
shr
data16
mov
loopne
sti
jb
stos
retf
leave
stos
push
adc
pop
imul
jecxz
xchg
and
stos
adc
push
enter
and
or
cwde
test
ins
jmp
pop
ret
mov
test
jnp
xor
outs
adc
cwde
in
push
mov
xor
cmp
mov
js
mov
scas
fwait
jno
xor
test
arpl
bound
adc
dec
ret
push
or
pop
pop
add
shl
cli
loopne
jge
out
xor
(bad)
arpl
test
mov
pusha
loope
fisttp
shl
imul
add
and
dec
jne
ror
adc
loope
dec
ins
mov
add
ins
out
stos
inc
mov
add
out
mov
sbb
jp
mov
xchg
imul
sub
push
movs
sahf
mov
stos
xlat
sahf
sbb
stos
push
or
cmps
std
inc
pop
jbe
push
les
movs
test
shl
std
das
or
jmp
test
leave
cmp
popa
add
not
cmp
pusha
lahf
pop
jge
sbb
into
cmps
movs
out
imul
pop
ja
mov
ja
aas
shl
clc
rcl
cmps
cmp
out
xor
adc
cmp
add
das
jmp
fld
or
adc
idiv
std
mov
jl
xor
sar
cli
rcr
cmps
xlat
shl
xchg
(bad)
arpl
pop
mov
or
fmul
adc
shr
sub
and
or
pushf
lahf
or
push
test
pop
mov
ja
xchg
dec
push
adc
aam
pop
ror
push
cmp
fldenv
aad
mov
inc
test
fild
or
dec
sbb
xor
xor
add
das
mov
jmp
mov
fidivr
imul
pop
mov
cmps
inc
pop
call
mov
jge
cwde
ret
add
cmp
shl
aaa
shl
pop
pop
or
sub
sub
mov
mov
or
ret
mov
(bad)
sub
push
pop
cmp
xchg
or
ja
sahf
rcl
push
xchg
lock
cdq
and
ja
xchg
mov
mov
and
dec
dec
movs
pop
inc
jo
adc
xchg
mov
dec
sub
retf
ret
les
fist
fsub
push
int
jmp
and
out
(bad)
jge
cmps
jle
call
packsswb
jg
fsubr
pop
mov
mov
push
sbb
cs
call
movs
mov
add
push
jmp
cmps
ja
arpl
call
and
test
cmp
mov
outs
fimul
sub
jecxz
xor
aam
pop
jo
sub
retf
push
jge
and
xchg
push
inc
mov
adc
das
ins
pop
jmp
and
adc
stos
xor
jae
lea
adc
test
sbb
es
call
adc
mov
adc
js
cmp
in
mov
stos
jbe
or
fcom
mov
into
dec
test
fdivr
dec
repz
jge
lods
pop
pusha
mov
loope
cmp
aaa
fidivr
fcom
pop
lfs
lods
jnp
(bad)
dec
scas
mov
mov
xchg
nop
(bad)
sbb
push
push
mov
gs
xlat
lea
mov
dec
xlat
push
sub
fs
hlt
inc
cdq
enter
imul
dec
mov
sub
mov
jnp
dec
lods
in
es
mov
dec
mov
mov
push
fmul
xchg
mov
jl
mov
or
lods
dec
dec
test
icebp
pop
ret
rcr
and
and
jmp
loop
loopne
add
inc
cmp
add
aam
dec
cmp
inc
jns
mov
push
mov
sbb
imul
shl
pop
or
out
dec
mov
rol
retf
data16
cmp
ins
jno
cs
sub
mov
mov
jnp
or
daa
add
xchg
popa
and
cld
imul
inc
cwd
fcomp
mov
fstp
xchg
call
sub
or
dec
ret
dec
push
dec
test
xlat
jecxz
xchg
or
jne
push
stos
push
sub
push
loop
jnp
or
mov
test
lahf
das
loopne
dec
cmp
push
mov
les
aam
xchg
gs
outs
jno
test
add
sbb
sub
inc
aad
arpl
int
das
arpl
mov
sbb
jmp
xchg
(bad)
dec
aas
imul
pop
shl
ins
jle
fld
xor
retf
mov
push
out
pop
repz
lock
dec
xchg
(bad)
aas
xor
fadd
sub
test
test
mov
push
mov
xchg
adc
out
pop
repnz
fidiv
je
popa
sbb
push
dec
mov
jno
mov
movs
je
in
cmp
je
cmp
adc
cwde
nop
repz
push
xor
dec
in
pop
jb
sbb
out
lods
xlat
xchg
dec
or
xchg
jbe
add
scas
fisubr
in
rcl
ficom
dec
jae
push
stc
mov
retf
cmp
bound
cmp
xchg
dec
mov
int
cmp
add
inc
xor
push
cmc
xlat
adc
pop
mov
jne
pop
xchg
sbb
movs
mov
stos
lea
push
push
xor
lds
mov
mov
inc
mov
mov
fwait
std
ja
ss
pushf
ds
stc
ret
jmp
pop
push
mov
movs
xchg
leave
xchg
(bad)
and
aam
pop
mov
pop
inc
pxor
mov
push
sub
cmp
neg
fmul
pushf
pop
daa
lds
pop
movs
mov
mov
sbb
pop
xlat
mov
(bad)
aad
les
shr
xor
or
arpl
call
pop
pusha
jmp
cmc
in
cld
rol
add
push
pop
aaa
ret
(bad)
retf
mov
les
jbe
fwait
xor
fidiv
xor
sbb
jns
push
add
ins
add
xor
adc
adc
add
jge
mov
xchg
inc
(bad)
not
adc
(bad)
loope
mov
mov
shl
xchg
push
and
or
push
xlat
in
aaa
(bad)
or
mov
int3
call
test
pop
add
pop
jne
popa
cmps
push
mov
cmps
adc
aam
fnstsw
xchg
ret
scas
push
mov
mov
ffreep
sub
dec
xchg
pop
(bad)
jp
push
pop
push
xchg
push
pop
js
imul
cs
inc
test
mov
xor
jl
inc
fidivr
sub
mov
cmps
outs
das
cld
jae
pushf
cmp
cmp
adc
and
push
cwde
mov
push
adc
mov
sbb
aas
stc
stc
fldenv
dec
gs
inc
inc
jle
push
(bad)
(bad)
mov
cmc
mov
mov
call
push
in
pop
and
fwait
push
outs
push
icebp
inc
xchg
scas
and
int
les
mov
and
lahf
inc
fisttp
sbb
or
adc
stc
outs
mov
retf
mov
and
hlt
(bad)
fisttp
push
sbb
fiadd
popf
int
test
shl
aam
lea
cli
xor
fcmovnbe
sahf
lock
out
scas
or
jle
cwde
pop
(bad)
xchg
xchg
mov
push
sbb
fstp
sub
outs
cmps
jno
add
lds
mul
mov
(bad)
adc
xor
out
cmp
fucom
ret
mov
scas
mov
mov
popa
inc
lea
xchg
or
leavew
hlt
mov
sub
mov
add
add
xlat
out
add
add
mov
mov
add
xor
dec
inc
and
push
stc
adc
loop
jae
mov
jae
pop
inc
arpl
pop
fnstsw
je
push
sub
fimul
xor
adc
add
pop
push
mov
xchg
mov
cmp
jp
gs
mov
jns
mov
scas
inc
or
or
enter
sub
or
rol
in
sbb
cmp
mov
enter
cmp
adc
xchg
pusha
outs
mov
xor
arpl
cmp
ret
xchg
fist
into
aas
(bad)
ret
adc
xor
pop
movs
loope
pop
inc
in
ja
in
cvtps2pi
and
addr16
aad
ins
mov
cwde
jb
add
aam
push
lahf
ja
push
cmp
and
and
or
push
inc
or
ret
fnstsw
and
ja
mov
sub
out
add
call
ins
add
mov
psrlq
dec
xchg
scas
mov
or
ins
popa
mov
inc
xlat
hlt
sbb
xor
push
adc
add
ret
fcomp
fld
push
cmp
xor
mov
ins
js
xchg
xchg
hlt
pop
ins
rol
test
adc
movs
jecxz
arpl
jo
out
retf
aaa
jb
mov
pop
sbb
jmp
aad
jmp
jmp
inc
fisttp
push
or
push
jmp
adc
xchg
stos
loopne
into
push
inc
xor
sub
arpl
xor
push
icebp
ret
inc
test
adc
mov
ficom
sub
jno
es
inc
cmp
sbb
retf
addr16
popa
sbb
xchg
das
add
add
fldenv
push
scas
sub
sbb
rcl
jg
mov
or
add
fcom
mov
call
(bad)
xor
stc
add
pop
ss
xchg
or
shl
pop
in
push
adc
loopne
add
jg
pushf
adc
in
cwde
arpl
icebp
aas
daa
xor
ja
lods
jno
sub
ja
pop
loop
push
test
mov
fmul
outs
or
scas
rol
cld
scas
shl
jno
or
mov
es
pushf
in
ret
imul
push
push
lahf
mov
gs
and
(bad)
sti
test
int
loopne
push
leave
ficomp
mov
jb
jecxz
jmp
lahf
fidivr
rol
mov
fnstenv
mov
lods
bound
xchg
sbb
mov
dec
les
push
xchg
push
push
fstp
in
pop
push
dec
pop
in
lods
jmp
sbb
jge
lods
pop
mov
mov
mov
pop
push
sub
push
or
frstor
and
mov
add
ret
inc
and
arpl
repz
data16
mov
mov
arpl
je
jg
dec
fst
iret
mov
xchg
shl
dec
hlt
jb
std
cmps
push
push
loopne
into
or
cmps
cmp
xchg
fcmovu
fisttp
enter
jmp
shl
aam
push
mov
hlt
mov
jmp
xchg
arpl
pop
fsubr
adc
adc
es
(bad)
push
(bad)
dec
aaa
sbb
imul
sbb
lods
jae
fldcw
fnstenv
sar
mov
and
jl
or
inc
repnz
xchg
sbb
leave
mov
mov
jecxz
repz
in
test
mov
cmc
or
dec
pop
lsl
jns
call
mov
jecxz
adc
popa
mov
push
loop
iret
add
or
(bad)
jno
rol
lahf
cmc
test
ss
in
call
pop
push
pop
arpl
mov
popf
inc
cwde
fwait
loop
xor
adc
test
pop
and
jmp
ror
sbb
stc
add
and
es
stc
push
arpl
cli
cmp
je
gs
les
imul
dec
inc
sbb
add
or
stc
bound
(bad)
adc
jl
fmul
rol
outs
out
cmps
fst
jmp
out
dec
fs
daa
push
and
push
loop
sahf
arpl
pop
loopne
in
pop
cmps
xor
xor
shl
int3
and
cmp
add
ins
mov
inc
pop
sbb
(bad)
sbb
stc
mov
(bad)
adc
jle
sbb
xlat
add
outs
rep
movs
fwait
sbb
loope
jb
hlt
ins
sub
add
sub
inc
js
int3
ins
les
lahf
stos
sbb
and
aad
mov
add
inc
cmp
aam
ret
xchg
cmps
sti
push
or
xlat
inc
aaa
mov
ins
dec
sub
cs
xchg
imul
mov
es
mov
ficomp
test
dec
ficom
adc
rcl
jle
je
loope
xchg
mov
aaa
sbb
jns
xor
and
(bad)
mov
in
jno
and
into
pop
xchg
mov
or
(bad)
fistp
jmp
jmp
pop
ret
imul
repz
mov
push
cdq
mov
xchg
stos
add
shl
inc
inc
xchg
mov
pop
xchg
mov
adc
and
pop
xchg
xchg
lods
fdivrp
cmp
push
popa
mov
mov
clc
cmp
push
std
xchg
dec
inc
jmp
inc
out
or
lods
dec
xor
dec
mov
icebp
nop
loopne
outs
pop
mov
and
shl
fnstenv
or
dec
mov
push
pop
out
jl
jmp
loop
fldenv
pop
and
jno
pop
in
dec
(bad)
jmp
aaa
push
mov
and
xor
push
cmc
inc
(bad)
fucomi
lods
push
sub
dec
(bad)
repz
out
cmp
push
pop
das
repz
mov
gs
(bad)
clc
sub
xchg
xlat
iret
inc
add
jb
jmp
jb
hlt
xchg
(bad)
xchg
aad
dec
mov
pushf
loopne
loopne
dec
int
test
test
mov
(bad)
pushf
jmp
mov
or
inc
or
pop
ret
add
test
add
jge
cmp
mov
hlt
popa
enter
in
sbb
cli
pop
pop
rcl
add
and
inc
nop
(bad)
neg
xchg
mov
adc
mov
test
push
xor
sbb
mov
(bad)
gs
sbb
mov
or
fld
(bad)
mov
xor
iret
sub
mov
je
aam
out
rcl
mov
and
mov
je
test
or
and
mov
scas
jo
std
or
push
fstp
sub
dec
push
adc
dec
push
les
xchg
ins
xchg
jle
(bad)
arpl
jns
and
inc
push
push
dec
test
xchg
xchg
cmc
push
sbb
retf
cmp
pop
xchg
or
cdq
test
add
repz
sub
inc
out
cmp
add
or
cmp
dec
iret
dec
jle
cld
stc
adc
pop
dec
sti
adc
pusha
test
in
loope
aad
shr
pop
aas
push
aam
pop
push
js
repz
sub
ins
xchg
pop
daa
mov
mov
inc
mov
cdq
mov
fbld
les
aaa
stos
dec
mov
xchg
ss
jecxz
sub
jge
aam
add
dec
popa
pop
xor
(bad)
push
int
xor
test
sub
outs
jecxz
inc
cmps
jl
xchg
mov
jle
in
sahf
adc
add
lods
jp
cmp
cmp
adc
add
fcom
sub
mov
jno
jno
fadd
call
nop
je
aas
test
movs
cdq
(bad)
js
xor
hlt
sbb
(bad)
adc
or
clc
cli
retf
shl
test
out
mov
mov
add
js
mov
or
mov
jecxz
ror
jb
stc
shr
sub
leave
mov
add
data16
aad
enter
dec
call
sub
in
fwait
inc
das
xchg
outs
inc
add
add
repz
and
pushf
mov
xor
fsubr
mov
sbb
pop
jg
ja
dec
pop
popa
cmp
inc
jle
cmp
and
push
mov
add
push
imul
adc
stc
sahf
xor
jne
test
rcr
nop
mov
mov
ins
mov
loope
pop
outs
push
imul
inc
or
jmp
clc
sub
xchg
fdivr
in
pop
mov
xchg
lds
push
or
sub
push
pushf
pushf
jmp
mov
xchg
ret
push
sbb
sbb
cdq
jae
in
and
mov
pop
xor
sar
jp
pop
pop
dec
mov
fldenv
and
scas
or
mov
cdq
pusha
add
inc
loope
arpl
mov
xor
les
cmp
test
dec
push
sub
sub
in
jmp
in
lods
mov
jle
push
not
push
test
sahf
xor
pop
adc
retf
retf
pop
jmp
in
dec
dec
adc
retf
pop
push
jg
xlat
test
test
jp
push
jae
xor
jle
xchg
mov
jle
out
scas
fwait
mov
shl
fisub
cmp
and
leave
jnp
jo
cmp
sbb
gs
cmps
std
add
scas
or
push
add
aam
cmp
leave
sbb
pop
cmp
jmp
ficom
fnstenv
lock
sbb
adc
jnp
xlat
mov
mov
xchg
test
xchg
mov
popa
imul
into
lods
xchg
(bad)
jp
fist
xchg
test
jge
sar
and
fnstenv
dec
push
arpl
cmp
mov
arpl
lock
out
iret
cmp
pop
(bad)
shl
cmp
pop
mov
dec
int
sahf
clc
mov
into
xlat
retf
or
addr16
popa
das
sub
dec
(bad)
fst
fisubr
inc
mov
outs
add
rol
arpl
sti
out
jo
outs
cwde
pop
adc
pop
sbb
and
pop
cmp
dec
xchg
pop
push
data16
xor
or
push
lods
cmp
push
or
mov
and
jg
jmp
push
cld
fisttp
fcmovbe
leave
xor
fadd
sub
in
add
fcomp
lods
push
sbb
and
jmp
xor
adc
pop
retf
jne
into
dec
xchg
scas
sub
ds
(bad)
jecxz
cmc
out
push
jmp
pop
sub
jo
popf
jge
push
scas
and
daa
xlat
dec
fist
fstp
retf
mov
fisubr
add
mov
(bad)
and
sub
mov
jne
mov
sub
fnsave
pop
aam
pop
inc
xchg
lock
fcom
xchg
aas
js
aad
push
cmp
sbb
push
mov
div
add
jecxz
ror
pop
je
sbb
out
out
dec
add
xlat
inc
mov
push
adc
stos
(bad)
jle
popa
pop
sub
fist
and
mov
js
sahf
fwait
push
popf
movs
mov
js
jnp
inc
jne
jge
arpl
enter
rcr
fiadd
mov
inc
pop
cmps
jbe
or
das
pop
daa
fsqrt
iret
sbb
cmp
sbb
and
push
fistp
inc
or
push
or
cmp
and
pop
push
jle
ss
xor
pop
sbb
pop
or
or
int
sbb
xchg
jmp
mov
add
mov
ror
sub
push
or
push
sub
call
std
fnstcw
cld
mov
pop
scas
jmp
inc
sub
and
jmp
hlt
jno
(bad)
cmp
mov
popf
inc
jge
aad
into
push
mov
(bad)
shl
jb
push
mov
out
push
sbb
gs
push
push
mul
aas
or
jno
pop
out
xlat
or
data16
push
lahf
pop
adc
jp
fadd
sbb
inc
aas
(bad)
adc
ins
sbb
pop
lods
jmp
cmp
xor
dec
ja
cli
out
jge
pop
mov
and
push
stos
ss
push
pusha
loop
(bad)
xchg
xchg
mov
icebp
sbb
mov
push
lahf
shl
dec
xor
sbb
(bad)
sub
(bad)
cmps
sbb
inc
rcl
and
in
sub
mov
push
pusha
retf
mov
cdq
not
mov
gs
dec
test
aam
btc
push
inc
bnd
pop
mov
pop
pusha
or
push
call
sahf
mov
les
xor
pusha
mov
shr
cdq
xchg
adc
xor
mov
pop
data16
jne
adc
imul
xor
and
sbb
int3
or
xchg
mov
int3
jg
xchg
loope
cmp
pusha
test
stos
sub
jnp
inc
mov
mov
(bad)
mov
mov
push
mov
adc
outs
leave
sub
cmp
sbb
pop
inc
dec
sub
push
fadd
in
cmp
mov
mov
pop
add
std
xchg
daa
mov
push
adc
call
in
aaa
loop
pusha
or
push
repnz
pushf
push
aas
xchg
cmp
pop
jg
jg
call
xor
ins
add
lea
lea
shl
adc
push
cmps
push
mov
popf
test
sub
in
jb
fimul
and
cmp
mov
sbb
cmc
(bad)
sbb
ins
cmp
sbb
cli
aas
xchg
jo
jnp
xchg
add
das
jl
sbb
fs
lds
add
aam
dec
xchg
lock
jmp
aaa
mov
inc
push
pop
cmc
pop
adc
test
sar
pop
test
cmc
inc
dec
fcom
(bad)
in
or
inc
cmp
ret
cli
cmpps
pop
mov
jae
push
cld
xor
xchg
shl
retf
and
jl
test
ins
inc
sbb
sti
outs
pop
loop
adc
or
pop
xor
lock
push
sub
aad
inc
or
cmps
or
pop
fldlg2
add
test
xor
(bad)
pushf
cdq
pusha
and
ins
cmp
or
add
ss
leave
adc
(bad)
sub
mov
les
in
mov
fistp
adc
xlat
mov
mov
loop
ins
xchg
pop
cwde
adc
nop
ins
hlt
sbb
jo
repz
retf
sbb
xor
sbb
pushf
pop
in
push
mov
test
clc
hlt
push
imul
lds
ja
inc
test
xchg
push
xchg
sahf
fdivr
mov
add
cmp
out
pop
scas
loope
inc
mov
out
mov
mov
ins
jg
test
or
cli
stc
sub
test
or
out
jmp
ficomp
int
mov
jmp
xlat
test
rol
scas
push
lds
mov
pusha
movs
std
adc
cld
mov
dec
not
sbb
sahf
xchg
pop
sbb
lods
xlat
mov
cmps
push
inc
and
mov
dec
(bad)
(bad)
dec
enter
jno
pmulhuw
mov
js
(bad)
ficomp
fmul
cmp
jb
retf
adc
imul
jns
(bad)
xchg
push
mov
cmp
fs
clc
mov
in
scas
out
(bad)
xlat
xor
imul
xchg
push
cmp
rcr
out
ss
pop
mov
or
and
test
mov
dec
or
xchg
pop
jne
pop
mov
hlt
rol
sub
and
add
fs
imul
pop
cmp
notrack
inc
movs
and
xlat
push
inc
(bad)
(bad)
inc
pop
jnp
xlat
sahf
xchg
cli
mov
pop
enter
push
vmread
in
cs
add
leave
out
loope
push
cmp
lods
adc
nop
cmp
aam
div
in
movs
push
popf
out
mov
pop
jo
xchg
call
jae
jle
(bad)
pop
pop
add
(bad)
pop
repnz
add
iret
mov
nop
(bad)
mov
icebp
mov
hlt
pop
movs
jl
or
jbe
jmp
fimul
cmp
add
and
cmp
sbb
cmc
jg
cmp
and
in
mov
pop
mov
xabort
ds
dec
adc
test
or
ja
mov
xchg
adc
mov
fldcw
leave
dec
(bad)
ds
mul
(bad)
mov
push
mov
cmps
test
mul
mov
js
sub
and
push
lahf
cmc
pop
adc
cmps
xchg
ret
loopne
xor
push
sbb
scas
(bad)
dec
adc
or
mov
(bad)
and
dec
leave
adc
mov
lds
push
and
push
cmc
adc
xchg
les
aam
pop
mov
and
ins
mov
ins
stos
ret
ins
jle
jno
sub
inc
dec
dec
push
stos
mov
call
fwait
fwait
inc
xor
stc
pop
and
add
pop
mov
lea
fidivr
xor
pop
(bad)
stos
movs
dec
dec
jae
(bad)
mov
add
mov
lock
xchg
jae
enter
cmp
sbb
aad
adc
mov
fist
jecxz
mov
mov
cmp
jg
das
mov
pop
iret
pop
jne
mov
and
or
cdq
inc
cmp
and
sbb
addr16
mov
cmp
aaa
push
cmp
adc
and
inc
xor
dec
cmp
xlat
(bad)
lds
jb
or
jb
push
pop
mov
jmp
cmp
and
mov
int
cmp
dec
nop
je
cmps
mov
or
in
arpl
xchg
fnstsw
xchg
popf
adc
push
inc
fiadd
jns
inc
call
mov
jp
mov
pop
sub
sub
lods
stos
sahf
idiv
inc
adc
(bad)
jl
out
repz
sbb
mov
mov
push
lods
popf
lock
call
mov
imul
sbb
in
call
sahf
mov
add
call
data16
pop
jmp
add
(bad)
mov
push
fadd
addr16
or
cmp
sub
mov
(bad)
xchg
mov
arpl
(bad)
(bad)
pop
mov
aas
test
xchg
in
or
pop
sbb
mov
xchg
jns
ins
test
dec
sub
fdiv
cmps
or
cld
scas
xchg
xor
mov
das
mov
or
push
out
fcomp
inc
sbb
push
xor
into
jae
fst
ret
cli
jmp
call
test
ins
push
sar
and
cdq
push
and
ins
bound
cmp
sub
inc
jmp
dec
test
stos
mov
xchg
cmp
dec
push
fcomp
loope
pop
std
(bad)
clc
retf
push
xlat
(bad)
mov
adc
leave
adc
mov
mov
mov
jae
dec
cmp
add
shl
xlat
out
sti
or
and
ja
add
inc
repnz
movs
or
add
inc
in
hlt
xchg
cmp
inc
push
out
and
int
jmp
fstp
cmp
xchg
rol
xchg
xchg
cmp
add
sbb
push
mov
mov
sti
stc
js
dec
arpl
enter
dec
inc
jne
scas
mov
ja
jge
ret
popf
inc
js
mov
mov
lock
in
(bad)
cli
xor
jge
cmp
jbe
cmps
fs
cwde
inc
pop
fnstcw
inc
int
ins
sbb
loope
pop
mov
inc
adc
sub
pop
mov
imul
sub
sub
mov
out
iret
cld
or
aad
pop
adc
daa
xor
imul
jle
jl
sbb
mov
ret
inc
aas
cs
daa
mov
xor
mov
sti
in
repnz
mov
loop
(bad)
out
popa
outs
sub
bound
fcom
ins
fsubr
xchg
sbb
(bad)
pop
push
push
or
test
ja
in
(bad)
inc
dec
(bad)
push
xlat
in
loopne
aad
imul
inc
inc
push
out
xor
inc
fst
stos
and
outs
fwait
dec
rcl
add
repnz
mov
aas
dec
mov
ins
sub
xor
dec
cmp
ret
jne
mov
rcr
jns
push
hlt
bound
cmps
cmp
push
in
dec
pop
bound
std
and
dec
push
mov
mov
pop
shld
pop
daa
xor
or
mov
jo
pop
inc
or
cdq
add
sub
std
mov
fdiv
outs
out
push
jmp
xor
mov
fst
xor
jg
in
adc
mov
xchg
in
fwait
mov
or
push
stos
stos
fcomp
scas
sub
sbb
jb
(bad)
ja
out
sub
jge
xchg
js
mov
cmp
test
mov
stos
lods
sbb
lods
mov
mov
jmp
mov
mov
inc
mov
(bad)
stos
push
inc
mov
stos
cmps
aam
inc
ss
dec
mov
adc
idiv
jmp
xchg
or
lea
int3
dec
fsubr
cld
out
or
out
pop
adc
xchg
xchg
dec
inc
adc
sub
sbb
lods
jecxz
call
add
repnz
or
out
popa
sbb
or
test
retf
sub
jne
stos
mov
mov
pop
mov
fwait
aam
mov
call
or
inc
mov
mov
in
push
jno
dec
xchg
not
enter
pushf
popf
shr
mov
sub
pop
jmp
pop
dec
jmp
jnp
mov
or
add
add
fimul
adc
clc
out
sub
push
shr
loope
push
loopne
cli
sti
inc
ja
or
hlt
jmp
inc
stos
inc
xor
push
sar
call
dec
adc
call
mov
sar
add
std
mov
cmp
sub
(bad)
loopne
lods
mov
fwait
mov
js
dec
inc
inc
sbb
pop
or
cmp
mov
stc
pop
adc
adc
icebp
aaa
inc
or
add
sti
push
or
outs
ret
sbb
mov
sub
push
sbb
pop
push
aas
pusha
dec
jmp
sbb
mov
pop
in
cmp
dec
cwde
mov
jmp
in
test
and
pop
and
sbb
inc
pop
test
xchg
fs
sti
jb
or
or
mov
and
inc
push
or
inc
ror
push
dec
adc
cmp
(bad)
es
pop
add
cwde
iret
aaa
lods
add
repnz
rcl
pop
add
ror
sahf
mov
clc
fadd
fild
cmps
pop
jb
adc
xchg
movs
(bad)
or
ret
fwait
ja
inc
addr16
dec
enter
daa
and
lds
stc
jno
xchg
mov
stos
push
loope
push
loop
gs
arpl
jnp
sbb
xor
jmp
pop
push
repnz
fs
push
cmp
popf
cmps
add
push
add
test
mul
and
sub
xchg
or
mov
(bad)
push
dec
mov
mov
mov
imul
daa
imul
clc
xor
rcl
jg
xchg
pop
fwait
push
sti
jnp
mov
adc
(bad)
ds
in
add
(bad)
retf
(bad)
dec
push
sti
dec
es
out
jecxz
int
loope
dec
popa
sub
sti
push
(bad)
(bad)
xchg
dec
mov
mov
xor
rep
bound
xchg
cs
scas
sbb
mov
add
stos
mov
add
push
(bad)
aad
sbb
pop
sar
pusha
callw
int
jecxz
(bad)
xlat
data16
inc
push
out
push
xchg
pop
and
push
stc
fstp
sub
(bad)
and
sar
stos
xor
or
xchg
fisub
jmp
dec
fild
pusha
jg
pop
sbb
(bad)
out
mov
in
push
lods
sti
mov
in
or
lock
cmp
call
mov
shr
js
push
adc
mov
mov
gs
or
jae
add
xor
inc
or
das
popa
fsubr
jno
into
loopne
jmp
pop
or
aad
inc
sub
or
mov
dec
and
icebp
and
cld
retf
jae
loop
jge
jmp
ret
jg
adc
add
jp
dec
add
xchg
loop
leave
mov
add
jecxz
fisttp
aam
sahf
adc
mov
hlt
cmp
push
adc
into
enter
inc
loopne
xchg
frstor
(bad)
adc
fimul
out
stos
mov
aam
cmps
cdq
push
or
dec
cld
push
je
pop
mov
repz
cmp
and
adc
cdq
enter
leave
mov
cli
pop
lock
stos
push
or
mov
jle
and
ss
cmps
mov
cmp
fimul
(bad)
repz
jnp
gs
inc
into
dec
mov
addr16
imul
dec
vpmaxsw
call
inc
sti
jne
mov
dec
xchg
das
and
repz
adc
cwde
sbb
pusha
sbb
cmps
mov
mov
sub
inc
cwde
int
enter
(bad)
and
clc
neg
mov
or
add
out
jge
add
xor
das
dec
jb
sub
pop
(bad)
xchg
pushf
push
mov
sbb
xchg
fst
(bad)
sbb
pop
push
fnstcw
scas
dec
inc
xor
pmuludq
add
dec
out
lods
mov
shr
jge
addr16
mov
ficomp
adc
lea
lea
cmp
pop
rol
ror
lods
iret
je
pop
mov
mov
ret
xchg
pop
hlt
mov
cmp
aaa
mov
jge
out
mov
xor
rcr
retf
sbb
inc
cmp
std
das
(bad)
mov
sub
stc
and
daa
aas
mov
inc
or
in
pop
pop
mov
dec
jecxz
pop
lahf
lods
mov
xchg
sub
pop
xor
xor
dec
sar
cmp
popf
ret
loopne
adc
push
mov
dec
mov
xor
ja
sub
mov
mov
push
enter
xor
jo
movs
xchg
sub
retf
or
mov
addr16
in
cmp
jb
(bad)
jg
ret
int
jp
mov
clc
pop
or
cmp
pop
mov
push
popf
enter
mov
or
add
loopne
and
mov
in
retf
test
sbb
jg
clc
pop
mov
test
test
(bad)
cmp
dec
sub
out
jge
pop
pop
shl
out
adc
mov
jns
call
sbb
aaa
sub
sti
xor
ss
(bad)
iret
lahf
shl
das
(bad)
outs
imul
imul
or
mov
inc
xchg
adc
dec
pop
(bad)
ret
bound
adc
dec
mov
ret
cmps
nop
ret
cwde
and
or
cmp
xchg
(bad)
xchg
mov
pop
ret
pop
dec
int3
retf
test
ret
mov
cdq
lods
ret
bswap
loope
out
inc
xor
jmp
push
sub
push
cmps
cmp
inc
or
xchg
aam
push
in
cmp
pop
aad
out
jnp
jne
icebp
clc
mov
mov
cli
(bad)
iret
mov
mov
stos
xlat
mov
(bad)
fidivr
(bad)
xor
je
xchg
daa
psubq
or
and
call
mov
cmp
test
jmp
hlt
test
sub
repz
repz
icebp
imul
fistp
or
aam
out
out
loop
fidiv
(bad)
inc
jmp
jecxz
cs
jo
mov
xor
xchg
push
sti
adc
xchg
add
and
stos
push
jp
sar
daa
dec
shl
mov
lock
push
add
fdivr
xor
rol
icebp
push
cmc
repz
ja
retf
pop
inc
in
pusha
lods
sbb
leave
popa
fadd
sbb
mov
xor
jno
pop
adc
and
fadd
add
enter
rol
mov
outs
cmp
push
mov
xor
pop
rcr
rcr
movs
mov
pusha
mov
loop
xor
leave
sar
push
inc
cmc
pop
loopne
lea
jle
hlt
mov
xchg
sbb
in
mov
je
jo
or
lods
adc
and
sbb
sub
sbb
sub
or
(bad)
fwait
or
in
cmc
cs
sbb
imul
imul
lea
sbb
dec
ds
imul
cli
aad
xor
int3
movs
and
ins
push
xchg
pop
test
dec
imul
lods
movs
inc
adc
sub
jne
xchg
ss
dec
(bad)
jmp
ror
sbb
xor
cmps
sbb
dec
add
dec
ret
xor
inc
push
dec
adc
sbb
push
fmul
inc
jo
push
mov
mov
jmp
imul
mov
jae
fisttp
adc
lods
mov
aaa
out
cmp
mov
pushf
cmc
or
cwde
cld
mov
jmp
mov
mov
add
pop
(bad)
jmp
sbb
test
cwde
lock
fldcw
push
repz
xor
movs
fwait
mov
pop
add
sahf
cmc
mov
popf
or
(bad)
fwait
pop
mov
(bad)
jnp
add
dec
adc
jns
xor
adc
fcomp
jne
mov
mov
xor
fisttp
mov
in
and
mov
dec
jle
addr16
pop
inc
pop
retf
xor
fcmovb
jne
cmp
sub
pop
inc
mov
xor
push
and
add
in
cmp
push
ins
ds
push
adc
test
cdq
xor
mov
mov
mov
sbb
jns
dec
xor
sub
test
rcr
mov
xor
(bad)
in
scas
lods
add
outs
clc
xor
mov
cwde
cld
pop
test
mov
sbb
cmp
pushf
and
jno
clc
outs
movs
scas
inc
inc
and
sahf
lea
jnp
push
test
adc
jp
pop
enter
jl
gs
and
jmp
push
out
or
das
out
fcomip
xor
in
ret
shl
cmp
sbb
adc
or
dec
(bad)
in
ss
out
xchg
clc
scas
aad
push
jb
add
cld
push
test
js
jae
mov
popa
xchg
push
push
cmp
cld
add
sub
je
jo
lods
das
mov
jmp
and
in
rcr
or
mov
mov
jbe
dec
loopne
cmp
mov
cmp
call
xor
repnz
dec
cmp
sbb
mov
in
or
jp
sbb
out
les
cdq
jb
jns
fdivrp
jle
(bad)
cmp
lea
sbb
ror
adc
ss
sub
or
je
js
ds
fwait
(bad)
fisubr
dec
movs
(bad)
adc
enter
addr16
gs
inc
in
das
xchg
pop
out
inc
in
test
mov
stc
fdiv
inc
call
or
xor
out
or
(bad)
es
stos
xor
and
xchg
fucomip
push
lods
test
cmp
fsub
and
dec
test
adc
mov
scas
test
in
mov
leave
mov
sub
mov
mov
dec
ror
call
jb
xlat
cmp
mov
cmp
pop
mov
push
lods
adc
mov
mov
aaa
sub
outs
or
dec
xchg
pop
pop
into
shl
in
sbb
and
test
xchg
arpl
jle
mov
push
addr16
sti
loope
(bad)
xor
lods
sub
pop
iret
mov
and
shl
outs
(bad)
popa
push
push
jbe
xchg
mov
sbb
push
fdivp
shl
push
pop
pop
movs
jmp
fild
shl
cmp
dec
mov
std
xor
add
aam
ins
in
and
jp
xchg
cmp
jmp
inc
stos
xchg
xchg
xor
mov
mul
ret
adc
stc
ret
jns
inc
and
cmps
sub
out
not
cmp
mov
add
vmovaps
xor
(bad)
mov
popf
das
push
xchg
test
int3
nop
cmp
adc
repnz
popf
das
dec
cmp
push
jmp
je
(bad)
add
ret
adc
jg
sub
sbb
push
out
mov
push
xchg
rol
(bad)
repz
sbb
mov
mov
out
cld
push
ds
(bad)
test
sar
in
shl
imul
cld
or
retf
xor
repnz
repnz
sti
stos
jo
sar
leave
xor
xchg
xchg
nop
pop
mov
nop
cmp
mov
or
int3
int3
(bad)
lea
mov
mov
(bad)
pop
ins
cmp
sub
sub
mov
jg
test
loopne
and
test
out
repz
clc
cmps
push
push
mov
xor
inc
sub
jns
cmps
pop
imul
push
jbe
add
rcl
das
cmp
pop
sub
(bad)
push
pop
js
push
push
xchg
jo
sahf
jns
add
popa
stos
lock
in
inc
arpl
push
dec
in
push
ja
mov
loopne
sbb
clc
iret
ret
retf
sti
movs
loopne
dec
push
adc
call
aad
or
imul
inc
in
push
xor
xchg
clc
fidiv
xchg
cmp
dec
mov
fsubr
push
test
or
dec
scas
mov
iret
daa
jle
js
ins
nop
es
ja
dec
loopne
adc
xchg
ds
inc
bnd
dec
in
xor
retf
out
sub
mov
mov
push
dec
ficom
xchg
int3
mov
sbb
add
repnz
sub
and
cs
pop
cs
add
jnp
sub
aaa
jl
and
bound
jnp
rcl
sub
pushf
xchg
fs
cld
int3
aaa
xchg
push
mov
inc
ja
sub
xchg
or
sbb
pop
mov
ins
outs
inc
xchg
aam
arpl
mov
xchg
test
js
xchg
inc
sub
mov
mov
shr
xchg
mov
mov
sbb
mov
lahf
aam
jne
mov
das
push
push
cmc
lea
inc
leave
xor
xlat
pop
icebp
mov
xlat
loope
dec
div
lods
xchg
inc
xor
lods
scas
mov
xor
mov
pop
inc
and
xlat
mov
xchg
push
pop
jp
iret
sti
retf
je
sti
mov
add
add
pop
jb
mov
out
mov
pop
repz
inc
push
test
dec
fdivr
mov
cmp
test
sub
jecxz
xor
dec
dec
addr16
push
xor
push
(bad)
stc
test
jnp
push
int3
mov
das
jge
push
popf
jmp
jp
int3
xchg
adc
and
pop
ins
fdiv
shl
or
in
jb
mov
push
cmps
ja
retf
mov
jo
jne
leave
rol
fldenv
imul
push
xor
std
in
ficomp
aam
(bad)
and
push
push
jno
mov
sub
nop
loopne
jo
push
inc
push
mov
fist
out
popa
pop
daa
loope
inc
imul
or
out
xchg
call
cmc
movs
pop
cmp
std
sub
and
les
pop
movs
jl
js
fwait
sub
lds
lds
movs
push
icebp
jbe
loope
outs
ds
sub
jmp
jg
enter
xor
in
mov
ss
repnz
pop
or
inc
inc
fcomp
test
or
lock
xor
sbb
bound
(bad)
data16
int3
add
sbb
addr16
push
es
and
pushf
and
scas
sbb
jp
pop
in
fsubr
mov
sub
ror
scas
loope
xchg
out
push
inc
jge
addr16
jb
cdq
cli
aam
ja
lea
jecxz
xor
or
repnz
cmp
pop
pop
out
mov
and
sub
cwde
adc
dec
fcmovb
cs
and
loopne
push
or
jnp
test
js
and
(bad)
adc
sub
movs
dec
movs
mov
iret
clc
mov
sbb
xor
int3
mov
jo
or
cmps
inc
xchg
jmp
test
imul
imul
mov
retf
sbb
mov
imul
push
mov
pop
pusha
scas
mov
adc
int3
lahf
add
(bad)
test
sub
in
jae
jmp
test
sti
jmp
add
nop
and
mov
mov
movs
or
retf
jmp
push
lods
push
add
shl
add
call
xchg
add
jnp
popf
pop
push
or
sbb
test
or
call
pop
cmc
int3
and
ficomp
dec
mov
jecxz
je
cmp
div
or
std
cmp
cli
jecxz
in
jns
xor
adc
cmp
aaa
iret
push
mov
add
xchg
fild
sbb
xchg
fwait
mov
or
data16
fbstp
xchg
clc
mov
aad
shl
std
and
add
das
pop
cmp
push
outs
jl
in
pop
or
test
in
push
hlt
push
inc
aaa
int3
mov
inc
inc
push
mov
popf
fcomip
jmp
adc
inc
(bad)
pusha
inc
outs
ja
std
jg
add
retf
stos
add
or
xor
jns
fadd
jg
nop
into
div
sti
or
cdq
les
push
adc
push
retf
mov
popf
and
(bad)
outs
dec
sub
xor
push
xor
dec
pop
gs
sbb
push
sub
mov
xlat
stc
test
jl
stos
lds
sbb
push
mov
lods
outs
mov
cvtpi2ps
shl
mov
mov
popa
rcl
mov
shl
rcl
pop
adc
push
inc
fcomp
dec
repz
ins
mov
xor
xchg
ja
rol
mov
jp
dec
inc
inc
xor
retf
inc
sar
jge
jl
lea
out
jb
stos
ja
int3
push
mov
lock
test
ret
sub
or
jecxz
loop
pop
sahf
sub
xchg
repz
pusha
dec
push
mov
ins
mov
fwait
dec
jns
mov
fst
in
or
pop
dec
mov
pop
dec
cld
lahf
jmp
test
ds
(bad)
repz
and
mov
cmp
fimul
sub
mov
fs
mov
sbb
ret
stos
pushf
pop
adc
push
ret
shl
lds
fisttp
inc
div
mov
or
xor
bound
pop
test
mov
clc
and
mov
mov
pop
cmp
add
lock
fldcw
loope
and
xor
pop
(bad)
rol
not
in
mov
fnstenv
push
ins
mov
pop
jmp
mov
ror
jne
or
and
gs
fmul
outs
icebp
xchg
add
mov
xchg
mov
jb
cmps
scas
adc
movs
out
or
call
add
and
retf
mul
mov
out
js
pop
(bad)
data16
out
vmread
mov
retf
jbe
dec
je
rcl
icebp
cmp
xor
outs
and
inc
les
add
push
sub
pop
mov
push
cmps
(bad)
pop
pop
and
jo
aaa
(bad)
stc
sub
inc
mov
mov
xchg
adc
cmp
jnp
aad
inc
jbe
ja
pop
mov
sub
call
inc
mov
adc
dec
jg
cmp
test
retf
js
or
fild
xor
xor
pop
out
jno
sub
(bad)
loopne
cli
mov
mov
loope
sub
imul
sar
lea
pop
clc
daa
pop
push
cmp
cmc
ret
addr16
cld
xchg
pop
sub
xchg
test
arpl
xchg
xchg
jmp
mov
push
mov
stc
push
enter
shl
imul
mov
add
pop
call
mov
push
or
ret
mov
add
dec
cwde
mov
out
inc
inc
ja
aaa
jg
jmp
push
leave
adc
in
cli
xor
loopne
inc
enter
loope
mov
lods
sub
outs
jno
imul
mov
(bad)
in
adc
repnz
cmc
jge
lock
lahf
mov
arpl
es
and
cmps
mov
aam
xchg
stos
add
(bad)
xchg
ins
das
and
push
dec
and
cmp
mov
cmp
mov
mov
fidiv
out
shl
push
outs
rcl
int
add
mov
or
pushf
test
cmp
xor
push
and
je
mov
push
and
mov
dec
mov
mov
mul
int
push
shr
mov
inc
mul
in
add
fisttp
sar
sub
sar
xor
arpl
xor
cwde
xor
std
jle
into
pop
dec
adc
adc
mov
xchg
pop
push
pushf
outs
iret
xchg
pusha
jo
mov
sahf
or
aaa
loop
or
dec
sti
neg
icebp
inc
loop
ror
test
pop
leave
cld
movs
fisttp
(bad)
test
test
out
cmp
fnstsw
adc
into
icebp
(bad)
fst
pop
mov
and
test
mov
test
dec
sub
fwait
ins
jecxz
pusha
cmp
mov
sti
jmp
dec
rol
or
xor
sbb
lock
mov
and
(bad)
sbb
or
rcl
ins
dec
das
into
addr16
or
inc
pop
dec
into
jbe
sub
jmp
fisttp
cli
popf
and
mov
dec
pusha
lods
js
pop
retf
es
xor
sti
push
push
gs
(bad)
jmp
call
xor
inc
jno
jmp
cmp
pop
pusha
(bad)
aaa
fs
xchg
(bad)
enter
sbb
ret
mov
jmp
sub
outs
xor
and
mov
pop
mov
push
mov
scas
lahf
xor
ficom
mov
mul
out
adc
pop
outs
sahf
ins
test
add
imul
xor
adc
sbb
mov
shr
xor
sbb
xor
or
mov
fstp
push
mov
xchg
mov
sub
sub
jmp
repnz
sbb
das
not
mov
cmc
dec
fwait
ror
movs
call
imul
pop
ret
in
inc
pop
outs
enter
xchg
in
mov
mov
push
imul
jge
je
push
int
xchg
mov
inc
xchg
cmps
cmp
sbb
mov
jae
and
xor
add
call
imul
aas
stos
pusha
inc
rol
adc
test
xchg
sbb
or
jo
dec
sbb
inc
inc
mov
mov
ret
xchg
scas
enter
mov
out
aaa
out
jo
sbb
cmps
or
mov
repz
inc
jmp
dec
xor
popa
test
dec
int3
sub
scas
clc
jae
xor
xchg
or
scas
jb
scas
sub
int
dec
and
lds
bound
fst
stc
int3
ret
imul
and
mov
and
dec
sub
add
movs
ins
jae
add
shl
inc
dec
outs
mov
call
cmp
stc
add
test
call
pop
jo
loop
jp
sub
icebp
call
inc
cmp
sti
cmc
pop
loopne
inc
iret
or
push
mov
stc
pop
jecxz
sbb
clc
jl
adc
xchg
jbe
stc
sub
xchg
out
stc
inc
dec
and
cmp
repnz
add
bsf
in
jge
inc
cld
add
cld
and
into
adc
mov
xor
(bad)
mov
push
inc
rol
pop
movs
mov
xchg
mov
in
out
lds
jecxz
aam
pop
cmps
scas
stos
xchg
jmp
xchg
adc
xor
dec
push
jmp
scas
sti
add
jbe
push
(bad)
mov
pop
jbe
mov
mov
outs
add
xor
mov
or
(bad)
push
and
adc
aas
sbb
mov
sub
repnz
push
adc
mov
fimul
cld
fwait
sub
fsub
jbe
dec
push
mov
pop
cmc
mov
jmp
adc
cmp
adc
adc
push
cmps
mov
sbb
bound
pop
enter
cmps
retf
pop
inc
imul
mov
sub
xor
mov
mov
adc
mov
in
mov
push
sub
(bad)
shl
xor
xchg
cmps
mov
xor
dec
sub
add
test
popf
xor
cmps
or
inc
(bad)
jmp
xchg
call
ret
test
cmps
jne
rcr
popf
ja
xchg
jmp
add
aaa
pop
sub
sub
cld
mov
mov
pop
and
leave
sbb
sub
mov
add
sbb
mov
jnp
out
jbe
xchg
out
and
inc
adc
dec
mov
pop
cdq
addr16
lods
data16
ins
call
call
and
iret
aaa
int
ds
mov
xchg
add
jae
sti
imul
cmps
movs
jb
jg
(bad)
inc
and
dec
das
out
pop
leave
mov
jne
sbb
fld
mov
ret
push
adc
adc
(bad)
jge
sub
imul
pop
fbstp
rol
sbb
retf
and
dec
dec
arpl
cdq
push
xlat
sbb
inc
sbb
lahf
je
ror
adc
sub
xchg
add
in
sub
inc
out
pop
or
mov
pop
or
imul
or
jp
jns
test
sub
push
mov
out
leave
sbb
unpckhps
and
fwait
mov
jne
nop
test
mov
xor
push
adc
adc
stos
and
or
in
push
imul
pop
mov
fldenv
mov
jmp
mov
(bad)
iret
dec
and
ins
pusha
mov
ret
hlt
leave
push
test
xlat
mov
scas
out
sub
jns
in
mov
push
add
out
out
leave
push
or
retf
or
cmps
outs
mov
pusha
inc
mov
mul
push
jb
sbb
shr
dec
inc
test
cmp
cs
inc
inc
push
scas
add
stos
jg
lock
or
int3
call
jae
clc
lods
jno
mov
mov
mov
loop
inc
sub
ja
aam
sbb
add
fisttp
popf
imul
and
adc
sbb
mov
cmovns
aaa
push
or
jb
lods
fisttp
aaa
mov
(bad)
adc
out
jp
mov
aad
cdq
cmp
push
jns
jmp
imul
loope
stos
pop
fnstenv
hlt
test
(bad)
sub
stos
pusha
js
xor
rep
stos
add
aaa
aaa
mov
cmp
ins
and
mov
scas
jmp
push
sub
add
nop
imul
ds
fs
shr
cmps
test
icebp
jl
ret
in
xor
push
idiv
mov
pop
(bad)
mov
(bad)
push
xchg
test
adc
das
jmp
and
call
inc
inc
inc
pop
jmp
test
imul
imul
sub
sti
pop
enter
loope
into
psadbw
mov
pop
mov
push
adc
pusha
fild
retf
push
jecxz
mov
test
inc
adc
arpl
jmp
pop
into
add
or
aam
sub
enter
mov
push
xor
data16
pusha
fisubr
out
sbb
pusha
movs
add
test
ins
dec
add
mov
loopne
int
loopne
stc
push
sbb
sub
cld
dec
mul
pop
push
rol
int3
jp
aam
pop
mov
jge
mov
jae
addr16
test
and
in
xor
xchg
sbb
or
ss
retf
ins
push
(bad)
fstp
int3
lods
out
mov
cld
xor
push
jae
neg
xor
jl
sub
mul
inc
push
mov
jg
or
mov
xchg
addr16
les
test
ja
(bad)
cwde
jmp
pop
jnp
jl
inc
lahf
outs
aas
movs
mov
loop
pop
push
mov
xchg
mov
or
imul
pop
add
add
sub
out
push
mov
xor
pop
adc
pop
mov
xor
push
ret
sbb
adc
movs
repz
xchg
aas
iret
push
neg
mov
lods
stc
ficom
pop
imul
in
div
loope
rcl
jae
ins
hlt
inc
xchg
fild
adc
shl
xchg
mov
and
nop
pop
push
call
mov
xchg
test
mov
pop
arpl
and
inc
cwde
cmp
mov
test
aad
ds
mov
outs
push
lock
iret
adc
inc
jecxz
adc
xlat
adc
jns
test
xchg
inc
adc
pop
cdq
cld
popf
pop
xchg
(bad)
mov
mov
cmp
fwait
xrelease
push
bound
pop
jmp
and
mov
xchg
and
pop
cmp
jae
sahf
add
push
in
jmp
call
mov
pop
(bad)
lock
push
imul
xor
mov
xor
cwde
(bad)
scas
movs
xchg
out
push
or
xor
mov
(bad)
mov
fisttp
xor
outs
sbb
sti
push
je
or
pop
mov
adc
xor
pop
pop
clc
mov
clc
popf
mov
je
fs
je
icebp
int
jae
mov
jmp
aaa
xchg
loope
adc
push
repz
mov
(bad)
jge
retw
aaa
push
data16
push
sub
xchg
std
cmps
ds
in
jb
sbb
mov
dec
icebp
ret
sub
call
push
xor
jno
adc
fwait
mov
or
lods
ret
mov
lea
jp
mov
aaa
jecxz
cmp
jb
cmps
pop
cwde
(bad)
int
sub
out
lfs
and
js
pop
fist
es
or
repnz
stos
fs
xchg
test
mov
scas
mov
push
sbb
mov
loop
fwait
xchg
xor
scas
dec
ret
ret
push
or
inc
mov
outs
ja
popf
sbb
inc
push
repnz
int
mov
call
push
push
inc
aas
and
mov
test
outs
dec
sbb
clc
popf
adc
(bad)
dec
mov
inc
cmp
fld
xchg
cmc
daa
mov
mov
pop
mov
or
or
dec
xor
cwde
adc
(bad)
xlat
aad
mov
pop
enter
dec
(bad)
mov
mov
dec
pop
push
into
int3
lock
and
dec
pop
mov
dec
add
jge
push
sub
aam
jl
pushf
push
jbe
push
lock
mov
or
imul
test
imul
push
push
add
mov
mov
jbe
pop
pushf
jmp
sub
mov
scas
xor
ret
cmps
mov
out
mov
aad
mov
or
add
mov
pop
movs
bound
lea
cmp
jl
inc
in
das
inc
add
ja
ins
cmps
or
inc
mov
into
pop
xor
sub
adc
mov
sbb
inc
pop
and
jg
aad
add
aad
pop
iret
es
hlt
jno
sub
push
dec
add
ror
test
mov
jl
add
shr
push
inc
in
aam
das
pop
jne
ret
jo
pop
push
mov
jl
ja
retf
outs
or
aam
bound
into
pop
cdq
sti
sbb
addr16
push
pusha
rol
test
nop
pop
cwde
(bad)
fisub
mov
jge
sbb
jg
sbb
lock
fsubr
test
(bad)
jmp
call
xor
add
lds
ins
add
xor
mov
pop
retf
pusha
(bad)
sbb
jne
push
lahf
mov
mov
mov
imul
and
jo
inc
test
fcomp
add
lea
loopne
rcl
cmps
cmc
ja
cld
jge
mov
cmps
or
leave
mov
sbb
fdiv
loop
enter
xchg
add
push
arpl
ins
inc
mov
push
mov
add
add
jae
(bad)
add
xchg
and
and
in
cmp
(bad)
lods
push
xchg
sub
sub
sub
outs
(bad)
retf
cmp
fdiv
daa
rcl
and
setne
sbb
adc
cmc
mov
cmps
sub
in
add
xchg
or
jo
mov
ret
mov
daa
and
sub
cli
inc
(bad)
cmp
mov
xor
add
jmp
push
cmp
mov
push
mov
int
push
xlat
xlat
sti
inc
ds
mov
mov
dec
(bad)
dec
rcl
dec
je
cmp
sbb
mov
adc
xchg
rcr
cmc
push
add
pusha
cmp
in
xor
sub
icebp
ror
push
ja
and
sbb
xchg
int
imul
add
retf
daa
loopne
aas
adc
push
imul
retf
sub
test
inc
push
daa
cmps
repz
mov
das
test
push
xor
add
mov
jmp
push
adc
test
adc
jnp
scas
aaa
out
mov
(bad)
pop
pusha
sbb
jl
outs
arpl
sbb
adc
push
mov
dec
jne
sub
hlt
rcr
add
push
loopne
xchg
lock
int
lods
push
outs
inc
and
lea
fistp
add
mov
pop
pushf
lds
cmp
xchg
es
cmp
inc
stc
outs
mov
xchg
in
mov
js
jmp
cmp
call
out
lock
mov
aas
addr16
inc
mov
scas
ins
(bad)
xor
add
mov
ins
and
idiv
and
int3
add
lahf
dec
call
shl
lods
push
sbb
mov
retf
out
inc
cwde
out
dec
aam
jnp
push
inc
pop
jnp
leave
pop
xchg
pop
fcomp
xor
lahf
mov
sbb
adc
(bad)
cmps
xor
mov
ret
fcomp
lods
(bad)
aas
sar
cmp
add
loop
loopne
outs
sub
test
cld
inc
push
gs
lds
cs
mov
push
stos
mov
ret
and
shr
mov
in
xor
adc
cli
stos
push
cmc
cmp
add
push
sub
bound
cmp
and
or
push
sbb
leave
jno
mov
repz
mov
inc
mov
popa
xor
rol
sbb
fdivr
bnd
hlt
adc
fs
jne
xchg
mov
sub
inc
ds
xor
movs
cmps
mov
jmp
inc
and
push
les
fcom
push
add
outs
mov
mov
mov
adc
stos
mov
jge
aaa
call
sbb
sbb
lds
mov
stos
sub
pop
inc
mov
push
add
ror
or
mov
pop
jbe
inc
(bad)
fsub
cmp
pop
leave
je
mov
loop
je
outs
loop
addr16
or
push
lea
pop
imul
xchg
ror
movs
fdiv
ja
rcr
lock
push
cs
sahf
lock
inc
fadd
jmp
popf
test
lods
xchg
or
xchg
xchg
push
push
jmp
mov
stos
je
lahf
lock
jecxz
lds
inc
xor
push
jnp
or
jge
xchg
and
or
lods
fisttp
ret
daa
daa
lods
or
fstp
sub
mov
call
les
jnp
test
inc
sub
mov
in
or
pop
mov
sahf
cmc
iret
cld
mov
ins
test
xor
jl
sub
jne
adc
push
push
repnz
or
sub
jnp
pop
mov
popa
sub
mov
cmps
fisttp
iret
xchg
sub
mov
dec
jns
add
jecxz
js
cmp
inc
call
(bad)
cmp
push
imul
js
scas
push
push
push
popa
mov
jecxz
mov
loop
neg
scas
xlat
cmp
jns
jb
push
inc
sub
movs
cmp
sub
inc
inc
mov
gs
add
mov
adc
add
mov
mov
ds
mov
adc
add
mov
or
iret
pop
in
xor
xor
mov
mov
stos
cli
fist
mov
xchg
loope
xor
paddd
sti
pop
(bad)
pop
popf
repnz
xchg
loope
cwde
mov
sub
xchg
(bad)
pop
jl
aam
mov
in
sub
xor
fstp
es
pop
sbb
pop
rcr
bound
pop
mov
push
js
pusha
aad
cdq
ja
leave
fmul
aad
fist
add
ja
jg
ja
push
sub
adc
int3
mov
arpl
movs
or
out
lea
xchg
sub
es
sar
push
mov
loopne
cmp
int
js
xor
stc
push
lods
jecxz
minps
adc
dec
mov
mov
add
mov
jecxz
jp
pop
scas
(bad)
in
arpl
mov
icebp
mov
push
pop
push
inc
dec
test
jmp
push
or
inc
xchg
les
(bad)
in
cld
dec
test
(bad)
shl
(bad)
mov
add
mov
outs
(bad)
sti
pop
xchg
inc
fst
jno
add
repnz
dec
mov
enterw
sub
cdq
popf
lock
mov
ret
cdq
xor
mov
mov
ins
jne
(bad)
and
xchg
rcr
(bad)
out
movs
sbb
out
hlt
sbb
sub
fidiv
cmp
mov
hlt
loopne
rcl
cmp
mov
dec
fsubr
push
cmp
aaa
sbb
pop
stos
ss
sahf
out
push
scas
loop
inc
sbb
scas
pop
hlt
mov
sti
shr
(bad)
std
out
mov
daa
adc
mov
pop
clc
cmp
push
dec
inc
lods
jmp
and
sbb
je
mov
arpl
push
shl
xchg
movs
fcomp
sti
outs
arpl
adc
inc
int3
xchg
xor
outs
push
mov
(bad)
sub
mov
enter
jo
hlt
xor
adc
pushf
sub
ins
add
bound
in
xor
call
or
xlat
pop
loopne
cmp
mov
out
jp
test
inc
cmc
sbb
ins
jno
mov
movs
pusha
retf
outs
lahf
xor
ss
push
sbb
sub
shl
xlat
inc
push
and
pop
(bad)
daa
jnp
pop
enter
add
inc
cmp
push
daa
sbb
mov
out
push
sti
aaa
push
lods
xor
mov
retf
iret
xor
mov
bound
mov
stos
fnsave
in
(bad)
das
sbb
cmp
ror
sbb
call
fstp
popa
leave
nop
cmp
je
js
xchg
xor
sub
mov
pop
dec
cmp
or
imul
mov
inc
add
shr
jae
xchg
xchg
sbb
daa
mov
dec
imul
(bad)
dec
in
gs
fistp
imul
mov
mov
fwait
sahf
test
fs
add
xchg
xchg
jmp
push
rsqrtps
pop
pop
or
mov
add
push
xor
and
arpl
or
fisubr
(bad)
popf
push
enter
jmp
cmovp
mov
fs
sbb
dec
pop
daa
mov
xor
retf
fldenv
cmps
add
or
imul
inc
in
push
dec
jmp
mov
shr
loop
daa
sbb
sub
sbb
js
push
cwde
cmps
rol
and
pop
sti
push
sbb
sbb
inc
sub
push
pop
and
xor
xchg
or
and
ror
(bad)
sub
inc
fcomi
ss
je
dec
add
xchg
cmp
ficomp
gs
into
add
data16
test
mov
or
into
js
inc
mov
adc
clc
and
fs
pop
stos
jnp
and
jmp
repnz
mov
(bad)
push
mov
sbb
gs
xchg
dec
inc
sahf
test
jne
cmps
xor
shl
lods
(bad)
das
mov
sbb
cli
dec
int3
pop
cmp
fwait
test
pop
inc
xchg
xchg
mov
cld
(bad)
ja
mov
push
enter
mov
xlat
or
adc
push
jbe
or
sub
adc
int
jp
push
loope
loopne
jo
mov
mov
jb
or
or
add
pop
xchg
ins
and
or
mov
push
adc
cmp
test
adc
test
and
repz
fs
add
mov
cmp
mov
sub
repnz
mov
mov
fstp
pusha
ficom
and
mov
jmp
mov
mov
mov
and
repnz
(bad)
mov
sub
dec
loop
cwde
xchg
test
aam
pop
jbe
(bad)
in
sub
sub
add
sbb
jnp
sbb
xor
or
movs
push
adc
sbb
fadd
sub
movs
xchg
in
cli
call
pop
inc
push
repnz
mov
test
xor
push
add
mov
outs
sub
pop
sbb
div
inc
nop
aad
add
pop
mov
sti
inc
test
cld
into
mov
popa
and
sub
and
int3
scas
xchg
mov
adc
mov
test
(bad)
cld
or
jns
xchg
neg
pushf
fild
cmps
fwait
fs
jae
nop
jnp
pop
icebp
lds
jae
test
(bad)
outs
pop
jle
mov
push
cwde
stos
sub
ds
scas
xor
(bad)
mov
xor
sbb
and
inc
xchg
ss
sbb
mov
and
cmp
add
shl
movs
fcmovu
addr16
ss
pushf
mov
mov
fcom
jge
push
movs
add
mov
outs
(bad)
rcr
pop
data16
inc
jle
lods
aaa
(bad)
outs
cmp
(bad)
lea
xor
in
iret
call
pushf
inc
push
ins
and
xlat
pushw
ret
ret
xlat
scas
stos
push
sub
in
sar
add
movs
push
ins
push
push
(bad)
pop
push
jge
ss
lahf
stc
jle
inc
lahf
jb
mov
cli
gs
mov
xlat
lods
jae
pop
sub
jp
lock
repz
ror
adc
loopne
loop
jg
neg
data16
adc
fidiv
jns
jne
shl
outs
pop
popf
es
gs
movs
loop
push
adc
sub
jle
add
idiv
cmp
push
fwait
je
inc
push
or
inc
imul
outs
dec
lahf
(bad)
imul
xor
std
adc
dec
cmp
push
inc
adc
dec
test
shl
retf
mov
(bad)
push
ja
ins
popa
(bad)
push
dec
xchg
inc
jmp
outs
xchg
mov
shr
inc
(bad)
ins
imul
pop
int
push
inc
clc
jmp
lock
xor
and
mov
scas
and
cdq
ins
cmc
int3
pusha
inc
sbb
cdq
adc
lds
sub
lahf
arpl
ins
inc
push
add
cmp
gs
(bad)
push
out
outs
sar
and
push
and
lods
cwde
outs
or
mov
mov
lds
not
das
jg
fdivr
mov
ss
clc
movs
dec
push
ss
dec
xchg
(bad)
cdq
(bad)
mov
popf
shl
bswap
fisttp
pushf
sbb
adc
xchg
push
lock
sti
out
in
sub
(bad)
sti
test
xchg
or
movups
pop
pop
xchg
mov
mov
sub
inc
mov
push
push
pop
shl
cmc
xchg
adc
jno
and
push
jb
sub
jns
cmp
push
sbb
lods
int3
mov
in
add
cmps
mov
sti
out
and
cmp
arpl
sub
ds
(bad)
ds
adc
(bad)
addr16
mov
cmp
xor
outs
cmps
pop
xchg
jns
test
push
stc
add
add
push
lods
cs
or
sbb
call
add
pop
cmp
push
jle
dec
jecxz
jno
inc
cmps
lds
add
test
dec
out
add
fldcw
cmp
pop
inc
int3
das
jmp
shl
adc
sbb
inc
mov
fsubrp
pop
xchg
inc
out
jno
and
fdivr
or
shl
pop
cs
frstor
fld
inc
xlat
sub
pop
mov
nop
pop
lahf
adc
push
or
xchg
loop
daa
gs
pop
in
test
jmp
add
jne
ret
scas
jecxz
or
xchg
push
fimul
push
stos
retf
push
(bad)
xchg
push
les
mov
cmp
jns
icebp
push
rol
fiadd
ret
cmp
cmp
nop
xlat
test
mov
int
mov
sbb
clc
(bad)
rcr
xchg
inc
call
xor
push
(bad)
loope
or
daa
pop
inc
mov
mov
fwait
lock
les
adc
mov
xlat
pop
sub
inc
ficom
adc
adc
mov
das
into
mov
sahf
fbld
jno
out
mov
fs
mov
lea
pop
mov
test
cmp
mov
das
pop
cdq
(bad)
dec
sub
test
adc
or
mov
retf
nop
ret
xor
ror
sbb
push
pop
(bad)
mov
mov
out
stos
loopne
jbe
sbb
jge
add
adc
addr16
fucom
mov
push
fmulp
push
xor
or
imul
mov
xchg
cwde
dec
dec
fiadd
jp
sub
and
mov
and
jno
(bad)
shr
mov
dec
(bad)
in
lock
inc
cmps
repnz
or
sbb
push
ins
push
test
fst
(bad)
int
repz
push
shr
add
mov
into
mov
xlat
cmps
mov
pop
pop
stos
inc
sub
xchg
and
call
and
pop
or
jbe
ss
xor
mov
xchg
add
xchg
and
sbb
cs
inc
fmul
movs
sub
push
fs
push
cmps
fwait
data16
fsubr
int3
rcr
fs
mov
adc
push
das
xchg
sbb
imul
icebp
aad
pop
(bad)
sbb
movs
popa
lock
fdiv
jg
cmp
inc
xchg
cli
test
int
add
mov
lock
mov
cdq
sbb
lock
inc
mov
pop
fimul
pushf
and
sti
mov
add
push
add
ficomp
inc
inc
push
lock
sbb
and
and
mov
stos
push
push
nop
adc
jmp
add
mov
inc
enter
into
cmp
lahf
jae
stos
and
sub
daa
cwde
jae
mov
xchg
std
push
cwde
jecxz
das
imul
mov
xchg
rcr
vmwrite
aaa
ins
or
cmp
test
xor
cld
fimul
jg
into
adc
gs
pop
mov
jnp
pop
shl
bound
mov
cbw
push
cmp
daa
cdq
adc
and
pop
xor
mov
xchg
test
inc
jp
and
cmp
adc
pusha
mov
std
adc
push
inc
mov
add
ins
int
sar
lods
xor
out
fucomp
ja
dec
add
pop
xchg
int
dec
cmp
pop
cmp
(bad)
push
clc
add
dec
pop
test
xchg
shr
fucomi
fs
sahf
ins
jp
iret
xchg
(bad)
add
int3
outs
inc
sbb
rol
jg
jmp
pop
push
imul
push
pop
aaa
repz
jge
xchg
or
cmp
push
lods
sub
fnstcw
in
test
adc
jg
loopne
mov
cmp
jg
pop
mov
sbb
mov
mov
and
and
stc
daa
lods
sbb
sub
xchg
pushf
gs
fadd
pop
jmp
fcom
js
push
push
hlt
jmp
scas
jge
pop
and
fist
jo
pusha
gs
add
mov
movs
aaa
pop
stc
dec
adc
cmp
inc
outs
mov
call
punpcklbw
or
mov
xchg
jne
inc
mov
inc
sahf
popa
and
fsub
pop
mov
xchg
dec
imul
mov
stc
js
or
xlat
mov
push
push
push
fwait
jmp
iret
fild
pop
in
dec
stos
(bad)
jp
jecxz
movs
pop
dec
enter
adc
fsubp
sar
mov
push
sub
pusha
adc
mov
ins
mov
mov
test
xchg
ret
inc
lods
aaa
scas
dec
dec
pop
jne
and
fstp
mov
mov
mov
(bad)
aas
pop
test
rcr
xor
xchg
dec
pop
cmc
push
fdivr
or
jnp
jge
sub
std
out
les
test
push
sub
sub
std
add
sbb
mov
mov
jg
(bad)
pop
inc
stc
pop
popa
dec
push
inc
outs
and
mov
cdq
sub
(bad)
ss
inc
cmp
inc
or
(bad)
or
adc
adc
sbb
sbb
and
ret
addr16
lahf
in
sub
stos
arpl
stc
test
push
and
sbb
pop
add
xchg
add
pop
ins
sbb
jmp
lea
mov
(bad)
cmp
into
mov
xor
inc
and
imul
xor
push
pop
xchg
(bad)
jge
and
lds
out
push
jp
je
add
adc
sar
jo
aaa
mov
call
and
mov
minps
out
in
into
test
push
and
mov
bound
push
jecxz
(bad)
adc
pusha
test
stos
es
fadd
(bad)
inc
call
pop
and
mov
jge
push
(bad)
imul
cmps
mov
pushf
gs
inc
xchg
ja
lahf
sbb
retf
mov
fcomi
dec
ja
mov
(bad)
(bad)
hlt
popf
sub
xchg
adc
(bad)
enter
pop
mov
gs
popa
fisub
mov
loop
and
leave
out
jo
frstor
shl
fs
or
in
(bad)
pop
mov
dec
scas
nop
popf
sbb
loope
dec
jae
pusha
mov
pop
cli
ja
imul
push
je
push
ja
cmp
mov
push
in
xchg
xchg
repnz
inc
movs
and
leave
div
pop
into
call
repnz
cld
pop
adc
inc
or
add
dec
ss
loop
lds
jnp
xchg
sbb
ins
dec
dec
inc
fisttp
pop
sbb
loop
fcmovnu
push
xchg
jecxz
call
cmps
cmp
aam
xchg
push
mov
(bad)
mov
sbb
(bad)
(bad)
and
pop
arpl
xchg
jge
loop
ss
xchg
fist
hlt
pushf
xor
mov
(bad)
add
cdq
mov
add
mov
xchg
mov
lock
movq
pop
xor
xor
xor
clc
mov
sub
retf
dec
cmp
retf
and
scas
and
popf
mov
cmp
popf
test
nop
dec
scas
pop
add
iret
gs
scas
loope
push
popa
cmp
mov
add
pop
rol
and
repnz
iret
sbb
(bad)
cmp
adc
and
xlat
sub
or
adc
sub
ds
push
add
test
pop
jo
mov
pop
cmp
cs
mov
bnd
(bad)
repz
cmp
pop
cs
push
mov
or
out
movs
out
jl
test
aaa
shl
jnp
push
cmp
mov
xor
(bad)
xor
pop
push
clc
retf
cdq
cmp
ret
movs
inc
xchg
div
outs
adc
adc
xor
cmps
jbe
adc
ss
stc
push
xchg
add
push
mov
mov
mov
enter
xchg
pop
xor
rol
jmp
into
xlat
int3
aam
pusha
jmp
fild
mov
stc
scas
jbe
ja
clc
(bad)
or
push
sar
sbb
in
ret
mov
xchg
les
add
adc
cmp
mov
cmp
xlat
aad
popf
ss
in
and
push
cmp
fmul
jo
or
jp
add
test
cld
ror
push
mov
inc
xchg
jb
xchg
pop
xchg
pushf
sar
ss
das
rcl
imul
xlat
jnp
pop
push
icebp
cwde
mov
imul
xor
inc
jl
and
mov
push
pop
(bad)
aas
and
movs
ins
scas
loopne
push
ins
push
je
sbb
aam
add
icebp
mov
sub
jl
fld
in
stc
imul
movs
push
and
mov
mov
jo
jle
mov
std
xchg
int3
fld
add
inc
cwde
aad
adc
mov
out
add
das
xor
out
jns
dec
cmp
adc
mov
pop
int3
scas
out
push
loope
sbb
mov
stos
pop
iret
push
dec
sbb
mov
jo
add
outs
add
dec
xor
mov
push
data16
or
movs
test
test
inc
push
fs
cmp
hlt
pushf
sti
sub
or
mov
xchg
repz
push
cmps
xchg
mov
(bad)
shl
adc
push
mov
inc
sub
or
(bad)
in
jmp
dec
bound
cdq
retf
pop
sar
jbe
pushf
nop
add
xchg
push
retf
dec
pop
inc
sbb
mov
fdiv
scas
sahf
sub
mov
loope
les
adc
push
adc
imul
jecxz
xchg
pop
dec
mov
mov
xor
leave
adc
jg
push
pop
(bad)
xor
xchg
xchg
xchg
movs
out
movs
arpl
loopne
push
mov
sub
xor
mov
(bad)
sbb
cmp
in
rcl
das
in
mov
xchg
xchg
xor
stos
add
iret
and
aam
lods
sbb
outs
out
fwait
loop
dec
push
or
(bad)
cmp
sub
cdq
out
jecxz
add
mov
mov
mov
push
leave
or
aas
das
arpl
cmp
add
cmps
in
dec
push
inc
imul
xor
add
fmul
pop
icebp
sub
fwait
pop
xor
lock
(bad)
jnp
cmps
ret
sub
mov
idiv
fld
push
in
jmp
nop
pop
into
xchg
mov
mov
(bad)
scas
mov
daa
pushf
jg
inc
add
adc
mov
jle
sub
jg
outs
clc
ds
in
mov
arpl
mov
or
inc
clc
pop
add
in
ja
lea
jbe
cmp
adc
or
lahf
inc
in
dec
inc
cdq
push
test
or
xor
fdivr
test
cmps
mov
sub
call
cmp
(bad)
mov
icebp
push
test
inc
cld
in
ins
movs
fldcw
pop
imul
pushf
dec
sar
jmp
inc
scas
retf
push
sbb
sbb
rol
mov
sbb
xor
xor
push
jnp
std
enter
(bad)
movs
test
adc
stc
mov
dec
aas
push
jmp
inc
je
add
push
xor
mov
ficom
mov
loope
and
xchg
push
push
jge
xor
push
mov
mov
dec
add
jno
adc
into
pop
inc
out
aaa
lock
pop
ins
(bad)
xchg
cmc
add
push
js
mov
stos
stc
push
jg
in
loop
jo
(bad)
in
push
iret
cdq
dec
adc
dec
adc
(bad)
js
fmul
jne
test
add
xchg
adc
and
xchg
sub
(bad)
jl
adc
xor
jne
push
xchg
pop
out
dec
pop
or
inc
adc
push
xchg
dec
cs
mov
mov
xchg
jmp
fisttp
push
cmps
stc
pop
(bad)
dec
sbb
jae
fistp
or
out
adc
xchg
mov
out
cmp
or
jnp
cli
fild
test
fcmove
std
cmp
mov
pop
pop
add
sbb
enter
mov
in
push
mov
jl
xor
out
pop
mov
add
call
movs
test
je
stos
outs
push
mov
sbb
mov
popf
mov
sbb
mov
icebp
std
ror
clc
stc
and
mov
add
pushf
push
scas
and
fsubr
mov
sahf
jle
mov
ret
(bad)
retf
and
mov
mov
out
or
stos
lods
mov
jae
imul
xchg
retf
movs
imul
push
add
sar
(bad)
mov
inc
ror
push
or
and
in
push
pop
daa
push
jnp
xchg
sti
(bad)
arpl
mov
xor
pushf
in
jns
(bad)
adc
imul
(bad)
cmps
ror
jnp
jne
stos
dec
cmp
mov
pushf
in
movs
pop
pop
push
and
mov
ret
sub
or
out
pushf
pusha
mov
dec
mul
(bad)
cld
ss
popa
pop
lea
retf
js
pop
add
xor
scas
jmp
int3
pop
lahf
sbb
jb
sub
add
sbb
clc
push
lahf
mov
push
data16
pop
mov
lods
rcr
out
mov
jmp
push
aam
fild
push
mov
stos
jl
cmp
mov
dec
push
rcl
adc
xchg
addr16
leave
ja
mov
dec
js
inc
data16
cld
pop
pop
stc
mov
and
loop
(bad)
or
hlt
stos
stos
adc
iret
sar
mov
js
cmp
inc
(bad)
xchg
and
xchg
loop
fs
cld
add
fld
les
fdiv
push
cli
cwde
retf
call
in
mov
lock
jmp
cmp
lods
sbb
adc
retf
or
mov
push
mov
push
xor
or
mov
mov
mov
sub
int3
movs
jns
sub
jnp
mov
mov
cdq
xchg
push
push
jo
mov
mov
arpl
lock
jl
or
icebp
stos
clc
mov
xor
ja
test
inc
mov
nop
push
push
in
mov
test
scas
ins
sbb
mov
in
pmuludq
dec
(bad)
adc
ret
xchg
stos
sub
jecxz
jmp
and
sar
push
hlt
fidivr
std
add
add
inc
and
inc
push
shr
pop
cwde
fld
jg
inc
sub
fbstp
cmp
add
stos
in
mov
xor
and
cmps
mov
push
cmp
push
mov
std
jo
cmp
xchg
scas
fnsave
aas
call
cwde
adc
or
int
xchg
hlt
call
ror
fadd
stc
push
xchg
push
ficom
jmp
(bad)
imul
mov
dec
jge
xchg
dec
test
mov
cmc
jecxz
dec
jmp
enter
fyl2xp1
(bad)
mov
cmps
scas
jp
loopne
mov
inc
mov
icebp
out
cld
xchg
mov
pop
mov
jecxz
popa
push
mov
mov
outs
int3
xchg
and
and
sbb
out
imul
mov
inc
sbb
jnp
test
adc
xchg
adc
in
movs
xchg
sub
sbb
sbb
xchg
bound
mov
test
test
test
test
outs
push
shr
in
jae
cs
repz
adc
jo
repnz
cmp
(bad)
into
sar
iret
push
and
jb
div
in
pop
les
mov
(bad)
cmp
adc
ret
cmps
int3
(bad)
dec
xchg
fisubr
mov
into
pusha
je
inc
loop
xchg
test
cmp
aaa
jo
inc
add
mov
push
jg
outs
adc
mov
adc
dec
(bad)
push
popa
jne
stos
or
jnp
cmp
lods
out
(bad)
out
xchg
pop
xor
add
xor
mov
fnstsw
mov
pop
test
push
fsub
in
test
inc
fistp
push
cmp
inc
nop
sub
mov
call
cmc
mov
out
xor
cmps
inc
or
je
xlat
sub
jge
sahf
ret
jle
mov
inc
xor
cmp
jmp
cmp
adc
and
xchg
pop
push
push
mov
retf
loope
popa
cwde
xchg
add
jmp
in
pushf
sbb
sbb
jbe
sbb
(bad)
sub
dec
mov
mov
popf
in
sahf
and
imul
mov
out
(bad)
out
sahf
in
xchg
imul
clc
aas
or
hlt
dec
sub
push
mov
or
inc
cmp
idiv
(bad)
mov
loopne
(bad)
fcomp
popf
pop
bound
ss
out
fdivr
call
inc
imul
mov
imul
loop
repnz
retf
(bad)
rep
pop
sar
and
mov
into
push
les
fdivp
push
ret
adc
stos
into
pusha
arpl
ds
jnp
mov
dec
mov
add
mov
fbld
idiv
jo
mov
fld
retf
icebp
loopne
in
pop
push
sub
pop
xchg
jmp
dec
lock
inc
inc
shr
data16
cdq
push
and
pop
mov
out
and
jnp
out
ret
xor
out
loope
mov
xchg
add
sar
das
cmps
mov
pop
jne
mov
out
add
lds
add
rcr
mov
lods
xchg
pop
jo
stc
scas
repnz
les
xchg
aas
pop
sbb
(bad)
test
fwait
jne
daa
pop
das
mov
bound
scas
mov
mov
cdq
inc
pop
sar
xor
and
and
jp
mov
icebp
mov
shl
aas
shl
cmp
std
push
cld
mov
sbb
and
outs
scas
cmp
add
sbb
and
add
sub
into
ret
pop
mov
sbb
(bad)
xchg
leave
and
hlt
inc
cwde
jns
jge
popf
xor
outs
cmp
mov
imul
into
cmc
fmul
out
popa
pop
push
and
aaa
mov
sub
add
mov
imul
in
mov
pop
aad
mov
cmp
jo
mov
dec
mov
sar
or
ret
push
cmp
fmulp
movs
and
push
mov
inc
in
aas
xor
cmps
out
loop
dec
cwde
pop
lods
mov
lods
aam
sbb
xchg
fsubp
push
jp
pop
dec
mov
xor
mov
or
cmps
push
mov
push
xlat
add
adc
(bad)
test
inc
fwait
push
add
repz
mov
nop
shl
jns
pushf
xchg
cmp
pop
xor
enter
mov
dec
pusha
das
cmps
xlat
dec
inc
rcr
pop
sbb
loope
xchg
cmp
or
xlat
out
jne
and
cmps
or
imul
jmp
mov
or
std
push
scas
sti
pop
imul
mov
int
fld
push
mov
icebp
pop
adc
jbe
popf
in
inc
imul
loop
push
leave
outs
fidivr
fs
mov
movs
mov
cmp
test
jl
inc
mov
inc
or
cmp
push
push
cmp
sub
xchg
cmp
pop
dec
frstor
movs
std
retf
in
push
jecxz
sub
push
adc
mov
mov
sbb
xor
jmp
test
pop
mov
push
sub
shl
add
dec
lahf
sahf
sub
mov
faddp
jnp
pusha
sbb
pop
repz
cmp
xchg
push
out
sub
pop
in
outs
pushf
rol
jle
inc
(bad)
xchg
push
stos
std
mov
stos
push
mov
mov
push
mov
add
fwait
ja
(bad)
repz
outs
push
jecxz
push
sti
aam
pop
push
jl
(bad)
mov
stos
add
inc
test
sbb
ficomp
push
into
adc
sbb
scas
out
xor
sbb
icebp
cs
shr
loop
pop
(bad)
fistp
gs
lods
xchg
test
outs
pop
mov
test
ss
push
jecxz
xor
mov
out
pop
xor
imul
bound
idiv
mov
mov
out
in
(bad)
adc
xor
bound
and
sbb
pusha
and
loop
fidivr
hlt
bnd
xchg
inc
imul
fadd
jnp
sar
in
ins
neg
adc
push
sahf
xlat
sub
repz
sub
mov
sbb
imul
xchg
xchg
sar
sbb
in
out
sbb
cmc
adc
inc
stos
jg
mov
mov
fs
int
call
leave
jp
adc
mov
bswap
dec
test
mov
inc
adc
rcr
rcr
xchg
jo
inc
xchg
lods
clc
pushf
adc
cmp
ss
inc
iret
jae
cmp
dec
jg
sub
inc
or
mov
stc
repnz
inc
out
imul
push
jmp
push
retf
cmp
mov
punpckhbw
gs
mov
addr16
stos
xor
add
mov
idiv
sahf
jo
mov
in
sub
and
pusha
retf
int3
pushf
retf
lock
xor
or
mov
xchg
sub
nop
cmps
in
and
fisubr
push
leave
xlat
fsubr
mov
test
push
ja
ins
push
cmp
push
jmp
fnstenv
rcl
push
mov
mov
daa
das
or
push
xchg
xchg
push
test
and
mov
pop
and
or
bound
cmp
push
mov
pop
fisttp
jmp
lahf
pop
sbb
(bad)
dec
movs
popa
fisubr
mov
pop
lea
xchg
(bad)
cld
mov
pop
adc
dec
rol
push
xor
stos
mov
mov
add
mov
sub
sub
and
add
pushf
retf
inc
xchg
lahf
mov
aam
dec
stos
adc
cld
xor
out
mov
in
lods
xchg
mov
enter
sub
mov
add
push
sub
sub
push
sbb
add
adc
jg
push
ret
ret
dec
aam
jle
fs
jae
movs
jg
pop
ins
es
out
movs
add
js
repz
fld
mov
cwde
push
out
shl
rcl
xor
xor
dec
and
dec
and
mov
jb
sbb
ins
loope
push
ja
out
xchg
ja
cli
mov
sbb
cmp
inc
xchg
pop
shl
jne
adc
call
call
cmp
rcl
cs
lock
jnp
sub
mov
mov
popa
cli
out
and
inc
mov
mov
pop
and
int3
aaa
neg
les
idiv
aas
cmp
mov
add
movs
lahf
jge
xor
popf
add
xor
xchg
pusha
and
or
push
lods
cdq
bound
jae
(bad)
repz
push
in
cmps
lock
sbb
mov
jge
push
lds
hlt
ins
(bad)
sub
test
and
mov
nop
mov
cli
inc
or
push
jecxz
pushf
fxam
and
push
shr
bound
adc
in
call
es
jmp
cmp
jg
adc
fucom
sbb
xor
jo
sub
pop
xor
mov
int
dec
inc
or
in
(bad)
rol
cmps
mov
add
pop
xchg
inc
mov
xchg
mov
xlat
jmp
cs
xchg
in
stos
pop
(bad)
jge
pop
repnz
sub
jbe
cli
rcr
cdq
sub
into
mov
(bad)
adc
push
add
sbb
pop
std
retf
shr
xchg
mov
xchg
aas
dec
loope
xor
ret
mov
pop
es
pop
cdq
mov
pop
add
int3
sbb
cs
cmp
sbb
jae
cmp
or
and
shr
pop
movs
cmp
pop
xlat
in
mov
dec
stc
xchg
movs
xchg
cld
push
cmp
pop
aas
mov
push
jo
shl
fs
mov
cmp
xchg
cdq
mov
push
mov
and
sub
dec
loope
and
loope
hlt
or
inc
call
and
fstp
jo
pop
pop
inc
add
sub
or
adc
mov
and
sbb
mov
sub
cmp
iret
and
leave
mov
popa
xlat
es
shl
push
cmc
daa
push
pop
cmps
sbb
cmp
xchg
nop
fwait
jmp
mov
adc
mov
cmp
dec
mov
ss
jns
pop
jae
pop
push
push
nop
lods
retf
hlt
mov
jbe
sahf
movs
adc
xor
xchg
je
out
sub
cmps
jns
arpl
das
add
cmp
mov
and
sbb
nop
(bad)
out
rol
add
std
and
add
mov
xchg
stos
xor
push
and
mov
imul
xchg
in
js
out
push
or
adc
jmp
pop
jnp
repz
pop
xor
fiadd
cmp
or
jns
(bad)
test
mov
jg
gs
jnp
sti
dec
call
sub
retf
scas
xchg
jge
push
loop
iret
and
pop
pop
mov
xor
xchg
pop
mov
fild
outs
mov
pop
ja
adc
push
lea
pop
sub
js
call
out
cmps
pop
adc
ins
jbe
js
dec
mov
xlat
lods
mov
into
inc
adc
popf
pop
add
adc
pop
mov
xchg
ds
cmp
(bad)
out
cwde
ins
in
xchg
xchg
bound
(bad)
and
or
int
xor
hlt
sbb
adc
mov
and
aam
retf
jb
ins
ficomp
sar
or
sbb
test
sub
and
pop
push
adc
sbb
call
dec
or
jp
cs
jb
xor
cdq
je
pop
mov
or
call
and
sbb
bnd
or
call
xchg
mov
fwait
(bad)
ins
mov
ss
cmp
mov
call
test
jmp
je
add
adc
push
xchg
xchg
xchg
xor
dec
dec
sub
push
mov
call
mov
enter
cmp
sub
pop
fxch
sub
push
dec
add
scas
sub
mov
jno
aaa
fld
inc
(bad)
push
not
adc
(bad)
sbb
pusha
mov
add
ins
shr
xchg
adc
mov
leave
mov
out
shl
movs
out
retf
and
mul
rcl
jns
cs
and
enter
lock
mov
fnsave
ret
add
push
push
outs
(bad)
pop
jnp
jnp
repz
jmp
jmp
xchg
mov
add
xchg
xor
adc
or
ret
push
add
mov
push
and
jg
pop
cmps
inc
clc
es
adc
test
in
scas
data16
outs
js
push
push
js
jae
jp
mov
dec
mov
sbb
das
icebp
add
loopne
inc
mov
adc
cmps
rcl
push
jge
push
and
jl
sub
xchg
cmps
inc
ret
xchg
aaa
cmp
nop
and
mov
ss
mov
outs
popa
xlat
daa
sahf
jge
jo
(bad)
jnp
sahf
cmp
imul
mov
stc
pushf
pushf
inc
das
push
pop
push
mov
retf
jbe
sbb
iret
dec
xchg
scas
mov
es
call
popf
or
add
rcl
sub
push
add
push
(bad)
xchg
xchg
sbb
add
out
in
fisttp
and
lods
loope
in
mov
add
xchg
mov
push
sub
ds
rcl
jle
push
jl
pop
cmps
arpl
and
sub
fs
mov
(bad)
mov
aaa
arpl
xor
repz
cmp
dec
clc
dec
mov
add
dec
std
out
xchg
xchg
ds
push
xor
cs
pusha
cmp
call
loop
test
push
ret
gs
sub
push
mov
sub
bound
in
push
arpl
sbb
movs
mov
adc
es
pushf
jnp
mov
inc
sub
popf
mov
clc
sbb
mul
(bad)
mov
fnsave
ds
les
mov
mov
pop
push
inc
jo
push
loop
or
inc
ja
mov
mov
(bad)
in
loop
cmp
pushf
mov
popf
mov
xor
jb
(bad)
out
adc
sar
sbb
lahf
data16
aam
pop
add
xor
cld
inc
mov
das
icebp
mov
in
dec
jecxz
repnz
fsubp
fidivr
xlat
sbb
add
adc
in
pop
adc
jmp
push
add
(bad)
xor
cld
xor
(bad)
push
jb
(bad)
shr
cmp
popa
xlat
call
dec
pop
inc
call
jbe
push
pop
movs
inc
jnp
dec
add
mov
pop
pop
push
sbb
ficom
iret
nop
adc
xchg
stc
push
mov
imul
retf
test
jns
xor
xor
xchg
mov
pop
das
cmp
adc
je
movs
mov
shr
jbe
xchg
dec
test
cmp
in
mov
out
dec
ret
stos
daa
mov
std
cs
or
dec
ins
pushf
sti
add
cmp
adc
mov
data16
mov
mov
xchg
or
lds
loopne
push
addr16
addr16
sahf
xor
sbb
or
dec
mov
jg
inc
test
pop
xchg
(bad)
xchg
fcomp
push
cmp
add
or
mov
jno
push
add
xor
jge
lahf
pop
push
inc
aas
mov
xchg
pop
and
and
adc
sahf
ret
mov
ficom
pop
(bad)
ss
cs
in
sbb
loop
mov
adc
and
js
ret
jg
iret
addr16
or
push
dec
repnz
shl
mov
push
xchg
sahf
add
int
dec
int3
jno
and
add
xchg
push
es
cmc
inc
or
add
retf
std
mov
sbb
shl
jae
es
adc
stc
stos
push
sbb
pop
(bad)
push
sub
pop
lods
mov
rcl
sbb
pop
fidiv
adc
push
jle
icebp
cli
ins
ror
(bad)
jns
pop
jne
sub
mov
mov
pop
imul
add
pop
(bad)
hlt
not
push
mov
adc
dec
cmps
xchg
imul
cdq
sub
frstor
cmp
pop
es
xlat
xchg
pusha
adc
shl
mov
outs
cld
js
ficom
sub
sub
push
clc
rcl
mov
mov
xlat
mov
fistp
inc
push
xor
dec
push
cmp
popa
test
inc
cld
adc
xchg
xor
in
jno
inc
iret
pop
gs
fmul
sbb
sbb
jbe
daa
in
es
xchg
pop
shl
mov
mov
push
sub
mov
xchg
cmp
push
imul
js
popf
sysenter
(bad)
outs
and
jl
int3
fdivr
cmp
push
(bad)
in
and
inc
out
loop
out
jl
push
dec
mov
aad
stc
lds
xor
xchg
mov
ins
out
jno
aam
clc
scas
stc
push
cwde
invd
popa
push
das
ins
mov
pop
pop
call
(bad)
sbb
xor
nop
(bad)
mov
stos
add
std
je
mov
enter
pop
stos
retf
push
xchg
sub
mov
push
jecxz
mov
ret
push
stos
outs
je
jp
mov
fist
cmps
cmp
int3
fisttp
add
xchg
dec
push
es
mul
ret
pop
(bad)
jno
push
mov
sbb
loop
mov
and
pop
xor
and
mov
cmp
cs
sub
idiv
movs
in
and
xor
cdq
icebp
aas
jne
jno
xor
mov
call
mov
pop
push
inc
mov
jmp
lods
in
xchg
xchg
in
cwde
and
rcl
xchg
xor
mov
sub
fadd
cdq
lds
repnz
jmp
popf
cmp
pop
cmp
ss
dec
jae
xor
in
or
(bad)
pop
mov
add
nop
leave
inc
and
ret
xor
lock
pop
iret
(bad)
mov
retf
sbb
int3
xchg
mov
mov
ds
mov
cmp
fwait
sbb
stos
and
fidiv
pushf
push
xor
add
inc
ds
daa
pop
sbb
fs
ss
cmp
out
xchg
lods
fs
add
test
mov
jge
sahf
lea
cmp
xor
in
add
repnz
sub
sbb
mov
add
movs
loopne
nop
sub
dec
imul
shl
shl
stos
add
in
sar
adc
dec
addps
cwde
jle
stos
xchg
and
and
jb
jae
arpl
in
add
or
and
push
stos
inc
xchg
mov
mov
sbb
scas
ficomp
aam
loop
lods
cmps
outs
out
push
xchg
or
push
jne
in
xchg
jecxz
jg
out
jno
pop
cld
movzx
sub
lea
lods
mov
dec
or
(bad)
data16
repnz
movs
sub
push
jmp
pushf
jl
add
sar
call
and
in
cmp
inc
xchg
mov
pop
inc
push
adc
pop
clc
jns
adc
lahf
clc
js
lahf
mov
call
mov
stc
loopne
call
or
inc
ret
clc
add
jmp
cs
fld
outs
or
mov
push
aaa
mov
dec
inc
out
popf
out
test
into
pusha
ror
add
int
aas
lods
jle
ins
pusha
icebp
sbb
mov
xor
stc
cli
imul
mov
out
xorps
push
cwde
jne
mov
jmp
sahf
popa
fcom
push
or
clc
aad
adc
and
xchg
xor
lock
aad
scas
shl
jge
ret
inc
fidivr
pop
ja
vmwrite
push
pop
in
(bad)
add
cs
xor
pop
lods
out
pop
test
cld
sbb
cmp
aam
add
lods
pusha
call
mov
gs
ss
sub
mov
gs
pop
and
xor
in
pusha
cld
jo
sahf
cmp
dec
repz
jns
dec
cmps
pop
mov
outs
adc
sbb
xchg
vrsqrtps
xlat
test
add
ins
xchg
add
mov
add
aad
pusha
rcr
out
pusha
dec
push
lds
sbb
jl
in
and
retf
movs
(bad)
cmps
jo
xlat
out
(bad)
push
mov
adc
int
(bad)
xchg
push
aam
stos
fs
sbb
jmp
xchg
sbb
in
ins
sub
pop
push
rol
push
dec
call
pop
sbb
inc
adc
add
jecxz
loop
out
sbb
adc
cmp
sub
dec
sub
loop
cmc
in
pop
and
adc
mov
out
stos
mov
pop
or
pop
add
out
adc
mov
enter
jmp
in
push
push
cmp
fist
push
add
mov
or
cmp
adc
cmp
cdq
cmc
mov
lds
test
jp
pop
std
scas
inc
or
pop
or
adc
sahf
icebp
mov
in
cmp
jle
sbb
jns
adc
outs
leave
pop
nop
mov
cli
xor
test
pop
sbb
stc
int3
dec
cmp
jecxz
(bad)
mov
sbb
push
es
aaa
sub
mov
mov
rcl
popa
ds
popa
cdq
pop
sbb
add
xchg
ja
jg
adc
mov
call
aas
xchg
sbb
xor
pop
cwde
pop
or
mov
jne
adc
(bad)
push
loop
and
and
xchg
ds
pop
test
xchg
mov
push
cs
pop
push
xchg
stos
push
and
add
mov
out
add
sbb
fs
or
mov
dec
loop
es
fimul
push
or
in
sub
sbb
pop
mov
jmp
sub
jmp
inc
fwait
stos
bnd
push
(bad)
sbb
dec
int
xchg
jnp
sub
jp
movs
sbb
popw
xchg
data16
add
mov
xchg
inc
push
scas
test
pop
(bad)
stc
out
inc
sub
push
push
lds
dec
mov
mov
jp
mov
push
mov
inc
xchg
rol
int3
cmp
mov
lahf
scas
ret
pop
push
push
out
sbb
mov
in
(bad)
mov
mov
std
push
pusha
sar
(bad)
sbb
sub
jb
xor
shl
push
cmp
cmp
lea
pop
sbb
inc
jge
enter
inc
jae
shl
fwait
sub
sub
and
call
shr
pop
je
and
jl
lods
ficom
call
sahf
cmp
cmp
sub
jg
(bad)
arpl
xor
out
cmp
ret
push
mov
shl
(bad)
mov
pop
repz
dec
shl
jnp
xchg
out
sub
push
fisubr
push
rcr
jle
cwde
jmp
add
outs
cmp
dec
jecxz
mov
cmps
or
pop
fimul
sbb
xor
dec
or
mov
xchg
fst
das
lock
cmc
enter
jecxz
jp
xor
adc
repz
sti
ins
and
push
add
jl
sti
sub
dec
cmps
sbb
mov
pop
jnp
repz
enter
rcl
adc
and
clc
cmp
and
loopne
dec
lds
pop
push
repz
movs
and
and
dec
fst
adc
fistp
mov
clc
xchg
or
inc
sbb
xor
sbb
pop
jno
shl
adc
cld
mov
rcr
push
pop
fs
pop
dec
repz
or
jb
ja
pop
pop
xchg
lods
mov
(bad)
stos
xlat
sub
(bad)
out
inc
or
test
daa
inc
sbb
mov
into
retf
bound
adc
fldcw
out
retf
xchg
or
inc
add
cmp
push
xchg
sti
fwait
add
jno
shl
mov
jmp
sub
sbb
or
aas
push
add
js
pop
mov
or
add
or
std
(bad)
aas
inc
sub
mov
clc
jbe
sub
lahf
and
adc
inc
xchg
push
jecxz
lds
inc
lea
idiv
adc
(bad)
cli
out
test
gs
sbb
sub
retf
int3
add
cmp
add
aam
dec
pop
jle
hlt
(bad)
rol
jmp
adc
xchg
push
popf
fucomi
or
inc
outs
test
daa
cmp
shl
sub
ds
inc
ret
ret
aam
outs
dec
ds
xor
fst
xor
out
movs
sub
pop
loopne
das
ror
mov
neg
shl
rcr
sub
jnp
cmp
stos
jg
cmps
cmp
loope
das
pop
dec
inc
or
lds
shl
cmp
sub
pop
jno
xor
push
outs
retf
stc
sub
or
call
pushf
mov
cwde
repnz
mov
jnp
dec
lods
sbb
or
mov
xor
or
sahf
in
sbb
(bad)
or
push
cmp
mov
pop
stos
iret
pop
mov
mov
cwde
cmp
fist
push
data16
mov
loopne
jle
iret
aad
push
or
fwait
mov
push
ficomp
add
pop
xor
lea
jp
mov
sub
and
sub
fldz
cmp
add
(bad)
out
pop
ja
inc
ret
mov
push
push
or
push
jns
test
ins
jmp
inc
push
(bad)
pop
(bad)
sbb
hlt
es
and
ds
js
arpl
icebp
rcr
rol
push
jle
icebp
jecxz
arpl
push
xor
mov
pop
push
sbb
cmp
xchg
add
ja
mov
out
es
dec
adc
cmp
inc
fiadd
shl
loop
fidiv
adc
movs
data16
jle
ins
sahf
scas
les
test
mov
xchg
dec
pop
out
inc
cmp
das
out
push
into
arpl
fdivrp
add
xchg
pushf
and
out
mov
or
jmp
lahf
xchg
ja
mov
movs
or
push
mov
adc
inc
das
adc
cwde
lahf
inc
lock
xchg
std
mov
inc
push
inc
xchg
hlt
(bad)
push
(bad)
in
aaa
rcr
fistp
mov
push
sub
inc
cli
bound
out
fwait
xchg
in
inc
icebp
xchg
dec
imul
push
pop
leave
sbb
lods
hlt
jle
mov
aam
add
ins
mov
fadd
push
cli
das
push
mov
bnd
inc
(bad)
(bad)
cmps
out
sub
dec
pop
push
mov
jnp
xchg
in
loopne
clc
mov
es
push
pushf
stos
sub
mov
(bad)
adc
sub
mov
dec
daa
cmc
and
inc
sahf
mov
or
dec
mov
push
fcom
in
mov
pusha
call
rcl
mov
push
xor
sbb
lock
push
jno
imul
jo
mov
sbb
or
shl
adc
ret
jnp
aaa
outs
lods
cmps
shr
cmps
lahf
push
jnp
popa
pushf
inc
vcvtsi2ss
shr
dec
cli
jp
call
xchg
(bad)
push
(bad)
or
pop
aam
push
push
xchg
scas
cs
ret
cmp
outs
sub
inc
adc
movs
int3
lock
mov
push
pop
mov
mov
add
idiv
outs
jecxz
push
test
jbe
daa
js
cmps
inc
fcom
or
into
inc
pop
outs
(bad)
call
lahf
add
int
icebp
xchg
popf
into
push
jmp
(bad)
lods
mov
xor
and
xchg
mov
mov
mov
add
cwde
mov
mov
cmc
adc
pop
nop
add
fst
ja
loope
dec
ss
pusha
hlt
adc
scas
adc
jae
mov
pusha
cmp
dec
adc
jno
mov
shr
or
stos
adc
cmp
inc
dec
ds
jge
idiv
iret
retf
dec
pop
fcom
fwait
xor
push
mov
dec
das
xchg
cld
cwde
dec
cld
mov
stos
mov
mov
cmp
or
jnp
in
inc
mov
pusha
ss
or
mov
lds
adc
push
push
imul
gs
cmp
pop
mov
test
mov
mov
sub
xor
mov
loopne
push
dec
inc
pop
les
sbb
xor
sub
sub
(bad)
jnp
out
call
in
test
shr
cmps
jnp
inc
xchg
scas
mov
mov
scas
stc
into
or
jo
inc
ds
mov
and
mov
outs
outs
(bad)
jge
(bad)
scas
cmp
inc
add
dec
push
dec
lods
cli
imul
aas
cmps
call
out
loop
push
and
mov
xchg
xchg
mov
fisttp
push
repz
and
imul
fwait
push
pushf
xor
mov
and
mov
adc
out
es
ins
(bad)
hlt
rcr
in
call
retf
es
es
inc
sub
stos
push
add
addr16
arpl
fldenv
dec
adc
mov
jo
out
adc
dec
arpl
out
add
inc
fsubr
inc
div
pop
pop
icebp
mov
xchg
enter
leave
push
mov
mov
dec
in
sbb
adc
outs
in
dec
sub
ret
loopne
push
push
xchg
dec
mov
cli
pop
(bad)
test
stos
mov
pop
inc
test
in
pop
mov
lahf
inc
or
mov
cmp
mov
xchg
jmp
jo
pop
mov
int3
(bad)
push
out
aaa
hlt
push
add
fisubr
xchg
mov
add
push
mov
push
sub
addr16
rcl
mov
retf
xor
(bad)
mov
or
out
outs
mov
or
add
sbb
fisttp
xchg
cli
inc
sbb
or
xchg
aam
js
rcl
mov
out
clc
push
sbb
dec
cmps
rcr
mov
inc
push
fwait
mov
inc
ss
cdq
adc
call
xchg
ret
push
sub
ins
adc
sbb
in
or
rol
cmp
out
movs
inc
mov
out
xchg
dec
lahf
push
pop
das
sar
push
fwait
repnz
mov
cmp
jae
push
icebp
push
adc
mov
xchg
int
daa
or
ss
xchg
cmp
daa
outs
fwait
imul
call
loope
nop
in
add
inc
mov
inc
push
cwde
push
xor
xchg
adc
movs
jo
(bad)
push
adc
sbb
std
pop
std
mov
int3
test
sbb
inc
shr
lock
mov
sub
push
sub
dec
ins
jae
mov
out
fst
jp
sub
repz
sti
clc
add
clc
lahf
aad
push
sti
es
mov
or
sub
push
cmps
jmp
es
lea
loop
jno
dec
add
jo
xchg
lea
pop
sbb
lds
gs
lock
iret
(bad)
mov
mov
ins
ficomp
add
je
ins
out
inc
out
push
xor
test
push
fnsave
int3
(bad)
sete
loope
push
add
(bad)
pop
ret
dec
dec
cmp
dec
mov
cld
cmp
inc
mov
mov
cmp
(bad)
sub
ret
stos
jl
iret
loope
cmp
retf
inc
mov
and
push
dec
push
jp
lahf
mov
(bad)
aas
shl
int
es
int3
out
scas
cs
(bad)
ins
sbb
jo
outs
gs
sub
cmp
xchg
loop
pop
iret
sbb
adc
nop
out
in
dec
imul
dec
popf
pop
add
sbb
inc
ds
pop
shr
call
mov
inc
into
test
out
stos
test
iret
rol
adc
and
push
shr
retf
mov
int
jns
lahf
sbb
xor
and
inc
push
xchg
jg
pop
push
push
les
xchg
aad
xchg
sub
lahf
jbe
pushf
pusha
test
mov
jp
and
inc
(bad)
and
movs
cmp
ss
cmp
sbb
jae
sbb
in
nop
data16
inc
cmp
gs
pop
xor
icebp
adc
ror
xor
lds
stc
pop
cli
xchg
leave
xor
loopne
mov
loopne
adc
push
mul
pop
xor
add
push
and
push
clc
out
mov
adc
in
cld
iret
arpl
jg
int3
stos
lock
pusha
movs
sbb
ror
or
mov
dec
aas
cwde
(bad)
jle
xchg
cwde
push
jle
cmps
das
pop
xor
add
ss
sub
add
sub
mov
adc
loopne
popa
sbb
jo
sub
test
jne
aas
pop
cs
mov
pop
or
icebp
mov
jecxz
in
rol
mov
outs
xchg
call
adc
xor
mov
imul
js
pop
or
ss
xor
in
outs
(bad)
test
xchg
in
cld
out
push
or
push
gs
pusha
and
pop
cld
arpl
or
inc
ret
jecxz
(bad)
sti
in
shl
mov
xchg
imul
push
in
xor
je
test
fst
(bad)
cdq
call
mov
mul
jge
cs
pop
mov
ins
imul
sub
xchg
lods
xchg
dec
loope
jns
int3
iret
cs
rcr
xor
pop
xlat
out
mov
mov
or
or
push
lea
pop
adc
dec
and
xlat
std
mov
inc
xchg
out
cld
jb
ss
jns
dec
mov
xor
out
test
fadd
mov
adc
ret
add
jmp
dec
pop
xor
adc
nop
xlat
inc
add
rcr
lock
push
sub
or
out
aaa
and
scas
das
ins
mov
out
sbb
fucom
rol
or
and
ret
shld
cmp
jmp
movq
mov
jnp
sbb
test
ret
call
xchg
sub
ins
xlat
mov
call
mov
sub
inc
(bad)
jp
push
ins
movs
cmp
in
scas
adc
pop
ins
mov
cmp
and
push
jle
ja
aaa
lea
fwait
test
pop
push
pop
imul
or
pop
retf
sub
loopne
jb
jecxz
out
or
scas
test
xchg
mov
int3
sub
push
mov
xchg
add
lds
push
mov
popa
loop
add
not
call
mov
imul
ins
xchg
test
mov
and
mov
pop
push
clc
jne
jecxz
cwde
push
dec
push
dec
arpl
aam
add
xlat
push
add
(bad)
xchg
std
fisttp
mov
xor
mov
enter
pop
sub
iret
cmc
pop
mov
xchg
jb
mov
jns
(bad)
icebp
dec
or
imul
mov
(bad)
shr
hlt
add
dec
lods
gs
sbb
das
test
mov
push
lds
retf
add
sub
mov
pop
mov
and
dec
out
rcl
add
aam
ror
xchg
ins
pop
mov
xor
imul
mov
int3
push
push
imul
shl
in
xor
ret
int
xchg
jno
aaa
ja
cmc
addr16
mov
push
adc
pop
cmp
shl
dec
sahf
sub
aam
xchg
je
and
popa
lods
movs
dec
arpl
clc
pop
inc
sub
push
rol
les
add
std
test
out
stos
or
xlat
jns
jle
cs
cmp
je
mov
mov
sbb
push
add
pop
mov
push
das
ss
sbb
jne
or
sub
xor
inc
fcmovnb
(bad)
xor
xor
ins
pushf
mov
das
xchg
cmp
xor
pop
jmp
out
or
(bad)
(bad)
and
cmp
inc
(bad)
sbb
cmps
xchg
ret
mov
xchg
es
and
cdq
out
push
mov
fcom
and
jge
add
or
push
into
ret
repnz
adc
ins
sub
arpl
xchg
pop
out
mov
add
enter
adc
pop
or
mov
outs
and
push
or
sub
ficomp
mov
aad
or
jge
xchg
xor
and
pop
sbb
inc
aaa
xchg
mov
pop
mov
sbb
enter
add
and
xor
xor
pusha
add
clc
push
inc
inc
loope
adc
mov
dec
inc
xor
and
div
adc
cmp
clc
popf
sub
pop
push
pop
adc
pop
(bad)
jae
clc
jg
in
xor
sub
push
(bad)
test
cdq
loop
jmp
ins
mov
mov
push
aad
jmp
je
gs
aaa
sahf
jecxz
and
or
rol
ss
vpunpcklbw
(bad)
jne
pop
repnz
dec
mov
inc
xor
sbb
push
inc
pop
fiadd
ja
mov
iret
pop
mov
test
out
dec
jb
sub
out
out
sti
in
and
pop
inc
xchg
sar
sub
push
gs
pop
jg
sbb
jnp
rcr
xchg
inc
mov
and
push
xchg
or
or
imul
sub
mov
cmp
push
fsubp
or
inc
pop
outs
cwde
sbb
mov
or
scas
jmp
push
mov
cld
sub
addr16
or
pushf
push
in
mov
fs
and
fild
cmp
sub
dec
ret
mov
push
je
cmp
pop
add
rep
mov
outs
or
mov
pop
arpl
cmc
movs
jae
hlt
cmp
test
lds
dec
push
retf
push
ret
push
enter
movs
xchg
xchg
cmp
cmp
mov
and
jmp
(bad)
xor
sub
xchg
mov
icebp
xchg
push
out
push
xor
mov
stos
(bad)
mov
or
test
shl
jp
call
mov
pop
jae
mov
ins
addr16
test
or
push
rcr
jo
mov
mov
adc
push
push
add
mov
(bad)
jns
cld
ret
ds
push
stos
jbe
loope
push
hlt
daa
push
jl
dec
retf
sbb
out
nop
and
test
cdq
fucomp
sub
aam
inc
xchg
aad
and
leave
or
pop
xor
pop
jmp
cmp
mov
xlat
add
mov
ins
lea
sub
out
test
addr16
or
jmp
call
js
test
int3
adc
int
adc
imul
mov
cwde
das
mov
pop
mov
stos
movs
fs
or
add
repnz
cmp
popf
cmps
sub
rol
shr
fwait
push
les
xor
cmps
jp
cmp
fs
xor
mov
mov
mov
imul
xor
adc
xchg
into
clc
leave
cmps
loopne
daa
jl
push
leave
int
imul
mov
sub
add
lahf
xlat
bound
push
gs
call
pop
int
stos
adc
nop
cmps
xrelease
adc
jp
push
outs
cs
es
adc
xor
arpl
jmp
outs
pop
pop
aad
and
pop
or
mov
mov
outs
ficom
xchg
cmp
movs
mov
sub
in
call
cwde
mov
lods
pop
cwde
int3
fist
rep
popf
inc
and
dec
mov
dec
mov
stc
(bad)
mov
dec
fs
nop
cmp
sbb
xchg
mov
jmp
dec
jo
icebp
cmp
mov
mov
mov
or
test
adc
imul
cmc
pop
pop
sbb
pop
mov
fcmovne
adc
lahf
adc
sti
adc
(bad)
jmp
xor
arpl
push
jo
add
cmp
inc
xchg
jmp
loope
test
jmp
cmp
inc
and
adc
sar
rol
jns
xlat
push
mov
sti
je
(bad)
arpl
mov
pop
int3
or
xchg
jmp
in
pop
push
into
xchg
push
mov
push
cli
fcom
iret
jmp
push
(bad)
pop
mov
jb
shl
pop
mov
mov
push
lock
push
xchg
aaa
arpl
mov
and
or
sub
sub
adc
sub
fdiv
mov
and
cmp
push
in
dec
pop
add
(bad)
inc
push
dec
movs
or
push
dec
icebp
inc
jecxz
mov
cli
xchg
mov
outs
push
loop
add
mov
fwait
sbb
(bad)
xchg
xor
mov
adc
imul
test
aaa
(bad)
(bad)
call
lods
enter
mov
lea
jbe
movs
mov
call
or
outs
bound
stos
movs
mov
jecxz
lahf
dec
jp
pushf
cli
repnz
in
and
add
aas
cmp
fs
jb
mov
retf
jae
ins
movs
inc
xor
or
inc
les
sub
(bad)
dec
cmp
push
not
jns
xchg
das
or
pop
lea
or
out
push
mov
mov
or
shr
rcr
mov
std
int
jecxz
fsub
fs
in
jge
xor
or
int3
mov
adc
push
test
sub
enter
ror
mov
jmp
mov
repnz
inc
cmp
mov
or
adc
push
jae
jmp
push
lods
inc
call
call
fwait
cmp
sti
xchg
pop
pop
mov
sbb
add
aam
jnp
imul
scas
(bad)
call
nop
dec
sub
jecxz
and
xchg
out
scas
dec
add
mov
aas
enter
jmp
lods
mov
sub
je
(bad)
xor
push
pusha
movs
jmp
jns
mov
retf
ds
lods
pusha
clc
add
cmp
scas
fadd
icebp
out
inc
sub
dec
ret
out
push
mov
(bad)
jbe
pusha
loop
and
loopne
fnsave
push
scas
mov
into
pop
test
xchg
mov
test
and
push
cmp
mov
popa
loope
imul
iret
popf
push
add
adc
mov
div
repz
mov
and
ins
cmc
lock
(bad)
cmp
and
and
into
scas
in
mov
mov
and
pop
xchg
mov
pop
mov
xor
call
inc
fistp
cmp
(bad)
loopne
sub
dec
(bad)
outs
or
frstor
or
ror
xor
scas
(bad)
push
ret
mov
pop
and
add
jl
dec
xchg
sbb
push
xchg
mov
enter
sub
jne
rcr
jp
fldenv
pop
das
in
sbb
aas
data16
movlps
jbe
aad
stos
pop
inc
push
mov
add
cmc
jle
les
scas
cmp
dec
fstp
pop
sbb
fsub
arpl
lds
xor
sbb
cmp
add
pop
adc
inc
lods
(bad)
les
ins
je
stos
cmp
sbb
mul
fwait
popf
push
aas
lods
mov
dec
inc
cmp
cmp
cmp
ja
inc
push
into
jecxz
jge
xor
shl
in
jnp
or
sbb
das
addr16
or
in
scas
mov
or
adc
aam
sub
sahf
lds
dec
(bad)
pushf
in
std
sub
stc
inc
adc
(bad)
xchg
stc
sti
dec
sub
cmp
out
fcmovbe
xchg
mov
sbb
cld
(bad)
xchg
ins
jg
ins
xchg
push
push
xchg
retf
pop
xchg
add
lahf
jge
imul
adc
imul
out
call
dec
sbb
inc
add
lea
add
jnp
and
cmp
mov
addr16
test
call
popa
sub
call
and
sbb
jbe
test
arpl
aad
dec
sti
call
shr
fs
pop
stos
fcmovnb
jp
jnp
mov
xchg
mov
push
(bad)
and
fsub
or
xchg
in
retf
in
call
sub
leave
idiv
fstp
lods
jmp
sub
pusha
jno
mov
mov
inc
mov
cdq
adc
push
retf
xor
xchg
nop
ins
adc
(bad)
mov
test
movs
pop
sbb
clc
stos
mul
sub
not
adc
mov
mov
push
imul
cmp
out
dec
in
jns
and
xor
sbb
js
pop
adc
push
push
dec
xlat
lahf
fwait
and
sbb
fild
imul
xor
dec
push
mov
hlt
(bad)
jbe
test
xor
pop
shr
fild
and
mov
sbb
inc
mov
lods
sbb
dec
scas
inc
dec
pusha
xchg
jns
popf
jmp
cld
out
loope
sub
gs
ins
add
int3
clc
xor
aaa
nop
pop
mov
outs
shr
sar
mov
clc
inc
and
dec
add
jns
push
pop
add
scas
dec
dec
(bad)
sub
fistp
ret
dec
jb
retf
push
pop
mov
pcmpgtw
jo
test
and
cmps
sub
popf
and
into
rol
mov
push
ffree
pushf
(bad)
cmp
jle
and
push
cmp
push
jne
xor
daa
icebp
sbb
ins
sbb
and
test
in
imul
jg
sbb
mov
dec
mov
rcl
ins
imul
outs
cwde
mov
mov
test
mov
movs
lea
dec
aaa
jmp
icebp
imul
pop
arpl
inc
push
push
test
sbb
pop
push
and
jo
pop
dec
out
sub
xor
sub
(bad)
jne
inc
pop
push
in
daa
cdq
ret
mov
aaa
pop
sub
movs
mov
shl
mov
test
fld
sub
shl
test
or
out
test
nop
aam
push
repz
xor
sub
rol
(bad)
jnp
lock
aaa
jne
mov
push
push
sbb
test
sub
fscale
mov
mov
sar
jecxz
cmps
lods
das
cwde
dec
push
call
ss
enter
push
fdiv
sub
inc
pop
or
test
ins
retf
mov
std
in
and
repz
cmps
cmc
mov
mov
mov
or
mov
mov
xchg
push
sbb
popf
add
psrlq
in
jmp
pusha
lock
call
hlt
sbb
mov
mov
xor
mov
and
movs
outs
add
mov
cmp
cld
sub
jne
cmp
aad
daa
mov
mov
pop
pop
ja
pop
jno
xor
daa
push
pop
inc
les
inc
data16
pop
fidiv
xor
cmps
or
dec
in
popa
ds
call
xor
push
mov
jg
cmc
daa
into
les
and
xchg
in
push
icebp
scas
into
mov
dec
mov
inc
mov
dec
bswap
add
call
add
aad
adc
inc
das
jae
enter
mov
fstp
aad
ins
mov
sbb
int
inc
push
mov
je
or
cmp
fsub
pusha
cmp
push
push
cmp
jmp
mov
sbb
xchg
rcl
in
movs
lods
pusha
int
or
fimul
fucomi
mov
aaa
dec
mov
rol
push
inc
dec
pusha
lock
mov
push
xor
ror
mov
loope
js
fbstp
lods
jo
inc
pop
xchg
mov
push
jo
inc
int3
shl
ja
jl
add
das
gs
hlt
icebp
sbb
mov
fbstp
pushf
or
stos
mov
mov
aaa
pop
or
js
aas
pop
cmps
mov
sbb
and
rcl
xor
sbb
mov
mov
jne
pop
xchg
inc
stc
movs
(bad)
xchg
push
xchg
and
sub
sbb
xor
pop
leave
or
(bad)
mov
je
jmp
adc
cmps
mov
jns
adc
lds
aas
sbb
cld
sub
clc
aas
nop
retf
fld
xchg
jp
aad
pop
movs
xor
nop
mov
arpl
les
and
das
mov
imul
jg
ja
out
cmp
jne
inc
jmp
in
ja
scas
xchg
sbb
push
xchg
mov
les
int3
jb
jmp
call
mov
jo
mov
or
sbb
xor
adc
jle
jnp
xchg
jae
ss
jnp
(bad)
cld
mov
(bad)
mov
sub
pop
mov
lea
push
stos
aas
loope
add
add
sbb
push
add
add
pop
in
retf
iret
jns
mov
cmp
and
mov
cmps
xor
jns
inc
xor
jecxz
add
ds
inc
(bad)
test
shr
clc
mov
enter
ins
add
mov
cdq
stos
outs
(bad)
mov
or
and
sbb
fs
mov
xor
arpl
mov
fdiv
sbb
pop
push
icebp
sbb
retf
jmp
or
or
xor
loope
inc
shr
add
xchg
push
stos
fild
call
mov
push
outs
and
sbb
sbb
repz
jg
cmps
mov
inc
push
or
dec
out
xchg
aaa
and
adc
lds
inc
mov
mov
test
push
jnp
jo
pop
cld
aaa
push
rcl
pop
loop
jae
test
ror
jae
test
xor
and
imul
jb
ds
xor
inc
into
jo
enter
div
in
cmp
dec
lock
gs
cmc
outs
imul
xchg
and
out
jbe
(bad)
movs
(bad)
cmp
mov
pusha
cmp
in
hlt
push
pop
jmp
sub
js
fld
or
xchg
push
jge
mov
and
pop
test
mov
popa
xor
enter
cs
push
pop
mov
dec
mov
mov
xchg
or
jg
add
adc
popf
(bad)
pop
dec
jo
pop
jmp
jecxz
add
jmp
bswap
(bad)
fistp
enter
pop
dec
cmps
jle
adc
xchg
xor
mov
iret
(bad)
or
hlt
mov
push
(bad)
adc
xor
mov
ds
cmp
addr16
pop
mov
jl
or
mov
aad
out
rcr
mov
test
xor
std
mov
jle
add
cmc
bound
lea
inc
pop
inc
ja
dec
cmp
and
and
push
es
ret
test
(bad)
and
add
mov
dec
xor
xchg
pop
or
mov
ds
jmp
aam
sbb
sbb
pop
and
mov
test
sub
push
and
jb
or
mov
daa
inc
icebp
ins
sub
jg
(bad)
movhps
push
inc
mov
add
jae
cmp
add
bound
mov
call
pusha
mov
mov
dec
dec
(bad)
jl
popa
ss
call
pop
cmp
test
xor
or
inc
pushf
sahf
xchg
out
pop
cmc
xchg
repz
push
mov
sti
imul
dec
jl
into
push
lahf
sbb
sbb
retf
test
cmps
adc
jg
inc
sub
movs
pop
pop
icebp
icebp
icebp
pop
mov
retf
and
aas
bound
loop
retf
int3
sub
(bad)
push
mov
into
(bad)
mov
inc
push
out
push
jl
daa
push
mov
mov
cwde
adc
(bad)
mov
sub
shl
jns
cld
(bad)
out
inc
je
push
pop
loopne
out
add
cli
(bad)
pop
sub
mov
mov
cli
inc
lods
mov
xchg
gs
fidivr
imul
sti
out
push
rcr
retf
mov
imul
dec
xor
sub
mov
sub
pop
retf
daa
adc
sbb
repnz
idiv
adc
dec
ss
hlt
imul
bound
fidivr
mov
and
ret
ins
sub
nop
and
xchg
popa
repnz
sbb
scas
call
sbb
push
into
lods
push
loopne
dec
xor
xor
dec
test
icebp
retf
icebp
test
pop
imul
dec
sti
add
sbb
add
jmp
in
push
jmp
sbb
add
mov
stos
mov
das
ins
cmps
sub
ret
fnsave
sub
pop
add
push
(bad)
rol
add
ret
mov
scas
jecxz
and
cs
test
mov
idiv
retf
mov
jb
ficom
(bad)
xchg
repz
(bad)
out
jl
cmp
jae
ss
js
iret
push
call
repnz
xchg
mov
(bad)
and
gs
mov
jge
push
push
imul
in
test
or
pop
imul
neg
fldenv
cmp
cmp
test
call
aas
test
adc
call
or
iret
mov
test
adc
push
mov
mov
in
rcr
std
ss
mov
das
push
jmp
push
rsqrtps
push
jno
jns
shl
inc
adc
(bad)
sub
dec
ins
sub
fnstenv
inc
outs
pop
out
adc
push
adc
lds
mov
jno
pop
icebp
or
test
dec
push
pcmpeqd
push
rcr
jns
or
lea
mov
sub
push
add
jne
das
movs
mov
xchg
out
or
dec
dec
add
nop
add
in
jecxz
pop
aam
pop
(bad)
test
inc
sub
bound
jo
or
mov
stc
push
push
push
movs
aaa
pop
jg
mov
inc
ins
xchg
int3
stos
sbb
push
inc
sub
pop
inc
stos
mov
hlt
je
pop
(bad)
repnz
sbb
ins
xchg
outs
lea
imul
mov
inc
stos
imul
sub
outs
sbb
mov
das
sbb
add
fld
pusha
adc
cwde
fistp
lods
adc
push
stos
mov
scas
push
outs
jmp
repnz
mov
dec
rol
cmp
xor
xchg
(bad)
shl
xor
xchg
pop
mov
jmp
ret
adc
ins
mov
ror
xchg
popf
sub
and
mov
(bad)
mov
das
into
inc
add
mov
xchg
push
mov
jns
call
ins
call
inc
scas
pop
sub
or
xchg
and
or
pop
pop
sub
loop
adc
add
xchg
mov
xor
inc
(bad)
(bad)
jo
and
shl
adc
aas
sub
push
inc
pushf
pop
jmp
xlat
add
lahf
adc
cmps
cmp
cmp
imul
pop
add
scas
adc
movs
sub
lods
add
xor
repnz
mov
or
pop
cmp
jmp
clc
lss
pop
add
jecxz
(bad)
jmp
mov
adc
outs
mov
ror
sub
jnp
lahf
outs
lock
dec
sahf
pop
mov
push
or
xchg
jle
bsr
cmp
push
mov
js
in
push
push
fsub
pop
(bad)
imul
in
sahf
or
pop
call
sub
pop
push
push
inc
sbb
add
cmp
pop
sbb
inc
cdq
dec
cmp
jno
out
rcl
nop
sub
adc
jne
jge
nop
test
in
dec
stc
add
les
mov
or
pop
cli
lods
sub
mov
out
pop
inc
(bad)
mov
mov
cmc
mov
xchg
ins
adc
dec
fwait
sub
mov
sar
(bad)
inc
sbb
fld
sti
lahf
mov
dec
xchg
into
adc
into
mov
push
bound
xchg
mov
sub
pop
ret
mov
cmp
mov
cdq
test
sti
imul
xor
cmp
jb
rcr
jecxz
int
imul
popf
jg
adc
adc
jmp
lods
loopne
push
cmp
pop
xchg
push
pop
inc
xchg
cs
stc
or
mov
inc
fst
fdivrp
sbb
xlat
or
sbb
inc
shl
pop
ins
(bad)
pop
xchg
fdivrp
jbe
fwait
rol
mov
cmps
mov
fisub
es
daa
mov
and
inc
mov
je
mov
jge
mov
and
in
adc
xchg
fistp
fmul
rcl
xlat
ret
push
add
neg
repnz
es
mov
movs
cmc
imul
mov
popa
mov
pop
xor
je
mov
into
mov
iret
adc
cli
cwde
out
sbb
scas
lock
pop
push
mov
push
cmp
popf
xor
pop
mov
pop
mov
mov
pusha
jb
mov
in
and
push
sbb
dec
xchg
inc
jle
ja
mov
sbb
loope
add
add
mov
fcom
add
out
mov
cmps
xchg
push
movs
lods
addr16
in
imul
out
test
mov
xor
dec
sti
sub
push
stc
mov
dec
loopne
aas
and
pusha
pop
sbb
test
ret
sbb
pop
push
mov
xchg
xor
mov
jo
fdiv
sahf
cmp
out
cmp
and
test
call
xor
adc
rcl
add
jbe
test
jmp
ds
iret
xor
loope
scas
loope
cmp
pop
adc
push
pop
or
out
in
leave
push
adc
es
jne
jmp
jo
dec
or
pop
lods
sbb
test
out
out
fisttp
xchg
movs
cmp
push
out
aad
push
repnz
fcomp
mov
ins
imul
xchg
or
imul
aas
jg
and
fiadd
xchg
test
adc
(bad)
sti
fidiv
(bad)
and
fsub
ins
ins
push
sub
mov
and
int3
pmaddwd
push
js
icebp
jmp
ins
xchg
mov
cmovne
arpl
leave
dec
je
cmps
ja
inc
add
jmp
test
loope
fdiv
das
adc
push
and
pop
shr
adc
int3
sub
jg
mov
or
sub
xchg
mov
aas
popa
push
shl
xchg
leave
pop
mov
push
ins
add
mov
not
sbb
call
add
aaa
fwait
not
aaa
(bad)
sbb
inc
pop
aas
xchg
pop
pop
stos
pop
daa
dec
and
cmp
and
mov
mov
nop
pop
add
sbb
cwde
mov
inc
mul
(bad)
jmp
add
ret
jo
fcomp
ss
ret
inc
hlt
xor
sbb
lods
jo
push
pop
nop
inc
xor
imul
add
dec
fcmovb
add
mov
stc
or
add
push
pop
rcr
xchg
in
std
cld
icebp
shl
dec
das
aaa
ss
jecxz
pop
pop
xchg
sbb
call
lock
(bad)
pop
push
jmp
ja
push
or
retf
inc
push
inc
lock
pop
aas
xlat
xor
mov
xchg
and
push
pushf
cmps
push
dec
adc
ret
sbb
jne
mov
out
leave
push
mov
cli
gs
ds
stos
loop
je
adc
outs
sub
jmp
scas
xchg
cli
test
in
shr
adc
(bad)
cmc
dec
shl
lds
out
hlt
lock
pop
pmulhuw
xchg
mov
jg
fsubr
fcmovnu
inc
retf
ret
arpl
lea
(bad)
daa
mov
and
pop
xlat
sub
mov
(bad)
fdiv
pop
lock
icebp
push
sub
mov
xor
xor
sbb
jns
fild
push
mov
push
or
(bad)
or
mov
or
push
sbb
lods
push
gs
xor
(bad)
fld
dec
call
sbb
fisttp
xchg
mov
call
cmp
xor
jl
call
sub
mov
fiadd
fisttp
inc
fdivr
pop
aad
inc
in
popa
pop
int
pop
fs
shl
dec
mov
mov
enter
jo
xor
sub
leave
fstp
push
in
faddp
pop
lahf
mov
push
add
adc
enter
outs
inc
shl
cmps
(bad)
lock
pushf
cmp
pop
out
dec
scas
or
movs
mov
jne
push
sbb
mov
imul
fdiv
popf
es
sbb
dec
pop
adc
jns
lds
iret
mov
sub
xchg
push
push
or
mov
(bad)
or
cdq
mov
daa
jl
sbb
or
pushf
mov
xor
push
xor
xchg
or
cwde
jnp
lock
mov
shl
mov
mov
sbb
xchg
xor
fadd
(bad)
sub
adc
fild
pushf
fs
push
mov
mov
popa
push
or
call
sub
add
test
movs
(bad)
cli
pop
fcmove
xor
ficomp
call
mov
call
jae
shl
cmp
ins
add
movs
add
mov
xchg
push
mov
mov
fsubp
mov
retf
lahf
je
jne
or
cmps
adc
sbb
xchg
cmp
sub
js
(bad)
push
push
dec
push
in
lds
or
sub
adc
push
cmp
dec
xor
lock
test
mov
add
cmp
xor
pop
inc
adc
ss
pop
call
pcmpgtd
movs
aam
xchg
cmp
fwait
aas
lahf
xchg
ret
fnstenv
push
or
pop
mov
push
fisttp
stc
outs
dec
sbb
lock
pop
push
and
retf
dec
or
mov
aaa
mov
dec
in
xor
mov
add
clc
cmps
mov
mov
inc
clc
mov
js
push
dec
test
cmp
ja
ret
popa
push
xchg
xchg
fadd
xchg
sub
sub
adc
mov
fldln2
dec
stc
mov
xor
sbb
mov
es
cmp
lds
cmp
fwait
or
es
push
adc
rcl
dec
sub
outs
xor
cmps
out
pop
imul
sub
imul
xchg
dec
sub
into
mov
ret
ds
sbb
sbb
pop
jb
(bad)
xchg
test
loope
pop
int
mov
and
mov
jmp
or
retf
jg
cmp
mov
push
mov
ss
vmovddup
push
jmp
popa
cmp
dec
pop
std
mov
mov
clc
cmps
test
mov
jb
xchg
call
jp
mov
adc
push
repnz
jmp
arpl
out
dec
mov
mov
xor
test
fs
adc
add
cmp
push
fadd
lock
xchg
(bad)
jbe
mov
mov
push
enter
pop
and
icebp
push
xlat
pop
or
in
inc
mov
adc
jb
jbe
ror
and
mov
adc
mov
int
repnz
aas
mov
cmp
out
jmp
sbb
xor
mov
mov
out
xor
jb
jno
scas
lock
test
fst
dec
mov
adc
cs
es
jp
jle
cmp
pop
adc
jecxz
jp
fdivr
push
or
cs
lahf
lock
mov
(bad)
fdiv
jge
pop
pushf
call
mov
mov
(bad)
shr
cmps
es
hlt
(bad)
mov
pop
inc
sbb
sub
xchg
sbb
xchg
xor
inc
fild
in
xor
dec
(bad)
call
sub
adc
into
pop
and
mov
cmp
loop
shr
stos
ja
fs
mov
loop
dec
mov
or
add
hlt
inc
mov
je
shl
les
pop
cli
sbb
call
inc
mov
push
(bad)
scas
repz
out
cdq
push
je
fiadd
and
rcl
pop
sbb
iret
das
xor
popf
cmp
sub
sbb
daa
aas
fcom
xor
mov
ficom
mov
mov
aad
lea
mov
stos
jle
rcr
lea
push
mov
push
nop
aam
push
and
jmp
test
add
out
dec
add
and
test
mov
lods
addr16
sysret
push
int
inc
sub
(bad)
mov
adc
in
inc
add
popa
movd
adc
xchg
mov
sti
out
sbb
into
pop
push
mov
scas
push
rcr
xchg
adc
cs
dec
add
aam
push
popf
nop
jno
rcl
repnz
jg
cmp
jle
sbb
and
in
retf
inc
leave
pop
xchg
xor
retf
in
cmc
shl
mov
xor
and
jo
xor
adc
and
or
ds
jns
xchg
fsubr
sub
loope
ins
call
lods
ror
out
int3
fisub
mov
xor
add
xor
cmp
std
das
add
xor
lods
jmp
mov
jne
xor
push
aaa
sbb
rcr
pop
or
pop
lds
dec
(bad)
jl
or
cmp
neg
out
or
xor
jne
add
f2xm1
rcl
(bad)
xor
outs
retf
pusha
(bad)
loopne
ret
aam
sub
xor
jl
jns
(bad)
cwde
lock
lea
xlat
iret
xor
jp
sub
sbb
pop
sbb
fs
dec
xchg
jl
loop
nop
jp
sbb
rcl
push
xor
jle
xchg
stos
push
adc
movs
sbb
push
les
push
or
das
cmps
jmp
ret
xchg
add
cmp
mov
jae
push
rol
or
in
(bad)
fldz
jl
add
mov
mov
scas
ds
mov
call
jg
jg
cli
jmp
pop
ja
pop
test
mov
outs
enter
test
mov
and
retf
mov
push
xlat
cmc
adc
js
test
mov
adc
sar
xor
sbb
shr
inc
cmp
jg
and
aas
rcr
scas
jp
push
ja
les
out
pop
ret
inc
xor
mov
jp
fst
pop
and
jne
jne
clc
mov
stc
or
pop
jge
addr16
stos
jmp
aaa
enter
jb
jo
pop
push
jge
push
xchg
shl
adc
and
(bad)
ror
mov
dec
sub
mov
and
add
mov
mov
push
jecxz
aam
retf
push
sbb
dec
pop
and
pop
mov
aaa
fs
addr16
test
mov
sar
jp
and
or
inc
les
cmp
fist
dec
push
mov
cmp
cmps
adc
sub
xchg
add
xchg
stos
cmp
fwait
or
cmp
not
jge
movs
or
scas
cs
(bad)
ficom
cld
movs
pop
ins
push
jecxz
fild
pop
cmp
imul
add
clc
jmp
push
jmp
pop
sti
aam
scas
in
dec
ja
jns
sbb
lods
in
into
sti
(bad)
xor
or
pushf
cdq
mov
xchg
fimul
clc
push
push
add
mov
add
fldcw
repz
mov
push
sbb
out
test
mov
adc
mov
sub
(bad)
imul
sub
aad
ins
dec
inc
fld
sbb
das
test
cs
xchg
jns
das
(bad)
cmc
jle
cs
ds
dec
inc
movs
ret
js
sub
sbb
in
add
retf
jecxz
mov
sbb
or
inc
arpl
pusha
jmp
ror
ficomp
pop
mov
mov
fcomp
push
or
mov
mov
sub
(bad)
mov
pop
pop
cmps
(bad)
shl
pmaxub
jecxz
adc
in
add
shl
stos
pop
fs
sub
fisubr
sahf
bound
pop
push
xchg
mov
es
jmp
pop
(bad)
xchg
adc
fimul
inc
jge
jb
pop
jb
es
mov
test
mov
rol
call
jno
out
jmp
pop
add
gs
mov
ud2
lods
push
sub
push
repz
add
or
jns
test
dec
ss
xor
jmp
cmp
aad
retf
fisttp
mov
test
stc
push
jle
push
cmp
sub
cli
dec
or
and
lock
cs
or
or
(bad)
iret
in
and
mov
pushf
dec
cmp
je
not
stos
and
mov
mov
cmp
stc
sbb
mov
enter
lods
dec
dec
nop
in
add
cmp
mov
(bad)
xor
lds
mov
xchg
push
inc
pop
(bad)
iret
stos
psrld
mov
test
shl
stos
loopne
popf
daa
(bad)
shl
add
xchg
mov
push
jnp
jge
data16
sbb
(bad)
ja
pop
jmp
dec
mov
inc
test
mov
cmps
push
in
xchg
mov
add
xchg
dec
push
push
ins
popa
rcr
xor
push
mov
sbb
xchg
inc
push
sbb
inc
int3
push
mov
mov
push
lods
aas
int
sub
mov
ret
sub
push
sub
stos
push
and
cmps
sbb
xlat
pop
pop
push
call
ror
and
cwde
in
movs
leave
test
stc
hlt
add
pop
retf
(bad)
aam
enter
outs
sbb
test
cmps
mov
cmp
loope
adc
leave
jge
mov
js
push
xchg
loop
es
lea
adc
xchg
cli
sub
test
imul
inc
xchg
pushf
xchg
pusha
(bad)
dec
jno
cwde
push
push
sbb
sub
xchg
mov
jle
sub
xchg
fsub
mov
or
in
add
cwde
pushf
ret
push
leave
jno
fs
push
out
xchg
pop
xchg
xor
arpl
jne
adc
adc
or
and
mov
mov
pop
mov
in
test
pop
pusha
push
out
push
mov
comiss
repnz
cmp
add
cmp
xchg
jl
(bad)
mov
push
fs
sub
jb
jl
jo
pushf
and
cmp
das
loopne
dec
inc
add
ror
adc
mov
and
sub
mov
cmp
jnp
push
cmps
addr16
cli
sbb
jecxz
xchg
mov
gs
xor
dec
lahf
je
xchg
fadd
fdiv
jnp
mov
push
mov
loop
icebp
push
data16
mul
sub
pop
mov
out
(bad)
cmc
(bad)
inc
jo
mov
dec
fiadd
fcomi
jp
mov
not
cmp
pop
jmp
pop
das
add
data16
aad
icebp
outs
(bad)
shl
adc
les
scas
scas
lods
mov
(bad)
jmp
dec
movs
xchg
in
out
xor
and
jb
sub
adc
push
imul
jp
lahf
retf
xlat
neg
and
call
push
ret
test
aad
or
pop
pop
or
add
les
je
movs
push
dec
add
lods
and
fs
pushf
bound
fisubr
stc
mov
xor
mov
call
cmc
jo
and
or
lds
xor
bound
cmp
pop
daa
mov
jbe
sbb
cmp
sbb
fild
inc
dec
xchg
sbb
hlt
dec
cmps
pop
(bad)
loopne
xchg
inc
pop
and
mov
lock
mov
or
dec
dec
mov
popf
mov
xor
cdq
je
es
outs
ds
cmp
jmp
(bad)
xchg
pop
stos
push
or
add
cdq
outs
jp
hlt
xor
out
sti
inc
dec
mov
push
xchg
test
mov
jg
xchg
xchg
sub
cdq
cmps
in
in
jmp
xchg
sbb
push
shl
les
push
mov
jmp
cli
sub
sahf
test
mov
inc
fbstp
cwde
stos
mov
sbb
jg
cmps
das
mov
jbe
in
mov
int
test
adc
xchg
cmp
sub
(bad)
xor
sub
dec
pop
cmp
xchg
mov
push
dec
add
mov
xor
dec
pop
adc
jmp
mul
(bad)
push
push
ss
scas
test
pop
push
inc
sub
rdmsr
add
wrmsr
jo
in
scas
enter
aad
pop
cmc
imul
inc
ds
mul
aad
shr
in
mov
leave
mov
cmps
or
repz
shl
nop
jg
stos
xchg
mov
fsub
mul
mov
lahf
or
inc
loopne
dec
sbb
pop
jo
push
arpl
add
sbb
shr
ins
mov
mov
retf
sub
iret
repnz
gs
dec
les
push
pop
cmp
in
mov
xlat
add
(bad)
jmp
xchg
add
xor
jecxz
movs
stos
add
mov
leave
and
mov
dec
cmp
cwde
mov
fild
imul
test
dec
push
inc
imul
and
imul
std
jmp
jp
push
pop
es
and
inc
adc
leave
mov
icebp
test
loope
mov
mov
mov
add
cmp
mov
mov
fiadd
scas
inc
clc
gs
loop
sbb
pop
jge
ret
xchg
movs
xor
(bad)
pop
aam
push
(bad)
jne
add
push
enter
or
and
push
ret
mov
jmp
test
mov
(bad)
mov
das
hlt
sahf
mov
sbb
jnp
sub
test
ds
mov
stos
cs
xchg
cld
fsub
sbb
add
stc
or
enter
ins
jecxz
fst
add
jnp
dec
lahf
hlt
pop
push
int3
jp
inc
retf
adc
push
test
jne
xor
jae
and
cmp
jno
outs
jne
pop
stos
pop
into
imul
dec
xchg
stc
loopne
jmp
(bad)
fild
or
fwait
jae
adc
pop
lods
lds
dec
push
jle
ret
and
xor
mov
xchg
leave
and
mov
lock
dec
sbb
inc
jb
mov
xor
adc
or
cmp
jmp
rol
cmp
enter
or
sar
aas
retf
add
ins
inc
push
inc
inc
gs
xchg
lock
dec
imul
fild
in
jle
dec
push
dec
mov
rol
int3
(bad)
mov
adc
call
rcl
pop
push
mov
aaa
pusha
cmc
add
push
cmps
dec
mov
cmp
scas
add
mov
push
popf
out
dec
movaps
cmp
test
cmps
xchg
ror
mov
push
xor
test
stos
outs
adc
push
lods
jmp
lds
inc
adc
scas
or
cmp
lods
inc
clc
xchg
and
push
push
jne
fbld
bound
jl
repnz
int
jae
push
push
pop
and
xchg
push
repz
cmps
outs
stos
out
xchg
std
mov
mov
int3
inc
lahf
ins
dec
jns
fucomp
inc
mov
xchg
loope
mov
ret
inc
jmp
into
push
mov
cdq
sbb
and
mov
cmc
loop
ds
add
pop
sbb
loop
stos
fld
sbb
xchg
fbstp
out
mov
and
cmp
push
movs
jne
and
into
dec
imul
xchg
sbb
int3
lahf
loope
fwait
ins
cli
lods
xor
sti
ret
outs
inc
sbb
xlat
inc
shl
push
fwait
dec
(bad)
mov
jns
and
icebp
pop
mov
cmps
pop
or
sbb
ret
shl
pop
dec
push
repnz
hlt
les
jmp
dec
iret
into
int
sub
mov
inc
push
shr
cmps
(bad)
cdq
push
test
clc
test
(bad)
mov
and
cmp
cmp
inc
test
push
sub
ja
retf
call
push
mul
iret
dec
cwde
outs
pop
push
ss
fadd
je
xchg
call
out
jp
fcomp
gs
dec
push
pop
movs
mov
mov
in
je
in
and
not
aaa
push
dec
push
cmp
jbe
ror
dec
ja
shl
loope
mov
fstp
add
or
push
fdivr
gs
inc
add
test
and
push
scas
std
lods
or
scas
in
push
jbe
and
out
aam
repz
ret
adc
test
fsubr
retf
push
dec
jmp
pop
mov
mov
rcl
xchg
pop
sbb
pushf
fadd
(bad)
pop
adc
and
pop
(bad)
pop
es
repz
xchg
test
ins
or
cmp
out
adc
aaa
and
stos
mov
jbe
push
xor
mov
stos
or
call
sbb
dec
xchg
stos
dec
mov
dec
adc
inc
ss
cdq
pop
adc
xchg
ret
lea
aas
jns
mov
mov
inc
imul
mov
inc
arpl
pop
in
pop
dec
movs
pop
imul
mov
punpcklbw
aam
gs
fisttp
cmp
jp
cmps
and
push
mov
xlat
push
ds
jo
aam
fsub
pushf
inc
bound
cmp
loopne
sahf
pusha
xchg
mov
out
xchg
sti
bound
js
cs
sbb
add
push
retf
cwde
pop
add
sti
or
add
mov
sbb
inc
dec
jnp
add
adc
cmp
cmp
cdq
aas
inc
or
jmp
mov
dec
push
mov
jb
(bad)
imul
sbb
fisubr
dec
cmp
sub
loop
mov
sbb
xor
add
add
dec
aam
sub
rcl
push
les
bound
mov
(bad)
repnz
add
lea
pusha
cmps
xor
ja
xchg
into
adc
int
jo
loopne
fs
mov
pop
retf
push
xchg
sub
inc
jno
and
inc
adc
rol
add
add
sbb
mov
xchg
inc
cdq
je
jmp
xchg
cmp
cmp
pusha
xchg
push
sbb
mov
cmc
out
loope
adc
lods
sub
into
scas
call
fstp
js
or
ss
and
pop
push
mov
into
pop
xchg
mov
and
and
adc
jo
push
push
mov
stos
jbe
xchg
stc
pop
inc
cli
pushf
daa
pop
call
push
xchg
sbb
inc
push
arpl
adc
fnstenv
sub
jmp
aad
daa
pop
and
push
mov
mov
pusha
in
dec
jbe
inc
mov
push
jl
cmp
out
and
push
ins
mov
dec
mov
sbb
in
imul
or
dec
mov
mov
fimul
(bad)
jno
xor
cmp
inc
pop
pop
sub
adc
and
xchg
cs
add
add
call
jmp
aas
adc
ds
or
(bad)
shl
sbb
iret
dec
sbb
xor
push
jmp
aad
pop
cmps
jb
or
ret
outs
xchg
or
push
xchg
add
mov
lahf
cmc
cmc
cdq
in
das
cmp
call
shr
es
add
or
xor
dec
mov
imul
aad
sub
push
lahf
pop
ret
in
xor
in
lods
or
fs
dec
div
fistp
call
sar
sub
inc
(bad)
scas
jns
push
movs
sub
pop
ins
test
rol
daa
loop
adc
in
enter
mov
movs
pop
push
ficom
fstp
mov
jo
shl
pop
mov
lock
add
repnz
sbb
inc
cld
out
rol
out
stos
rol
push
fwait
and
iret
inc
mov
mov
cmp
or
enter
fs
cmps
imul
stc
dec
xchg
jne
push
ss
int
pop
adc
mov
xor
cmc
inc
int
and
cwde
add
xor
jno
push
sub
test
fisttp
add
dec
mov
in
push
popa
mov
hlt
sbb
test
mov
inc
lods
add
add
les
add
pop
pop
lahf
shl
or
or
cld
add
or
xor
inc
or
inc
push
push
or
jbe
inc
imul
(bad)
fcmovne
jp
lock
push
jno
dec
inc
inc
lods
sbb
add
dec
cmp
(bad)
and
and
cmp
mov
push
jbe
xor
cs
pop
push
cmps
xor
(bad)
outs
cwde
inc
pop
mov
loopne
inc
sbb
cmp
sub
(bad)
jp
std
call
sub
push
in
add
sub
mov
in
or
sti
push
cld
mov
mov
(bad)
js
pop
cmp
xor
xchg
cmp
and
xchg
push
cmp
fs
nop
sbb
jp
shr
add
add
mov
inc
cmp
sbb
mov
in
les
xor
jmp
loopne
jl
pusha
xchg
jbe
(bad)
int
ret
loope
lods
mov
popa
ins
pop
dec
xor
fld
or
inc
mov
pop
fiadd
xor
fs
push
(bad)
rcr
xchg
lods
mov
jmp
in
hlt
push
dec
mov
aaa
inc
mov
out
cmp
mov
mov
push
push
retf
dec
push
rol
nop
leave
paddw
and
ins
inc
arpl
int
cdq
stos
mov
xchg
bound
stc
test
push
push
dec
add
dec
lahf
push
mov
inc
aaa
(bad)
xchg
das
pop
fsubr
and
movs
push
xor
outs
stos
mov
cs
fild
pop
lods
sar
mov
xchg
xor
into
enter
cmp
adc
adc
push
pop
push
pop
cld
add
pusha
pop
push
xacquire
jge
mov
mov
mov
ficomp
movs
ins
rcr
ss
xchg
inc
cld
push
cwde
jno
pusha
loope
push
lds
mov
ret
enter
sbb
sub
mov
sbb
lock
je
ret
add
sbb
xor
jne
cmp
jae
add
inc
add
pop
mov
shr
jne
lds
jg
fild
ins
and
ins
pusha
ret
jmp
mov
cwde
add
fsubr
or
aaa
add
and
int
inc
sbb
sbb
or
popf
sub
pop
(bad)
lahf
retf
mov
cmp
or
xchg
xchg
cmp
loopne
mov
and
aas
jmp
cmp
push
jo
mov
cmp
add
lock
or
ins
retf
scas
sub
gs
jno
and
movs
inc
sbb
cdq
mov
sub
and
sub
fst
and
push
imul
je
mov
(bad)
adc
xchg
scas
retf
jo
jecxz
cmps
loopne
jge
cmp
push
add
pop
(bad)
std
xchg
(bad)
and
pusha
or
adc
es
push
and
dec
mov
int
cmp
sti
cmc
addr16
push
xor
mov
mov
fdivr
push
test
sbb
out
cdq
mov
and
pop
je
push
mov
jb
inc
adc
sbb
scas
mov
leave
enter
mov
push
rep
pop
cmps
jb
(bad)
lock
iret
jae
fnstcw
add
fdivr
sub
int
pop
push
fbstp
iret
add
je
in
push
jae
std
aad
out
shr
or
mov
pushf
test
aam
aaa
int3
dec
jecxz
jno
bound
mov
push
jl
mov
in
pop
mov
int3
mov
push
gs
retf
and
mov
pop
or
sbb
cdq
mov
repnz
pop
test
pop
dec
push
mov
retf
(bad)
icebp
dec
aas
xlat
test
gs
stos
or
stc
test
aaa
push
cs
jne
jno
xchg
xor
arpl
clc
pop
inc
int3
outs
and
movaps
pop
push
cli
aam
les
jmp
(bad)
(bad)
xchg
adc
push
hlt
leave
mov
pop
ja
sbb
jmp
out
pop
cwde
ins
pop
rep
xchg
jae
and
sub
add
cwde
add
dec
mov
fadd
and
dec
and
pop
clc
inc
cmp
mov
inc
xchg
push
scas
sti
std
xor
and
or
cld
ds
mov
loope
ja
ja
mov
test
aas
test
push
add
sbb
das
mov
(bad)
mov
inc
or
mov
push
inc
mov
dec
jge
inc
push
cmps
cwde
xchg
aad
pop
stos
or
mov
add
mov
xlat
xlat
lods
je
scas
jbe
loop
push
gs
adc
add
dec
mov
and
mov
cs
pusha
es
ss
pop
hlt
stos
mov
dec
or
stos
ret
lock
mov
xor
stos
out
stos
cmps
jmp
xor
push
(bad)
out
inc
dec
and
adc
push
cmp
cmp
push
enter
pop
push
mov
das
std
xor
push
xlat
cli
out
fs
data16
fdiv
mov
inc
jbe
sbb
dec
daa
movs
sbb
mov
(bad)
or
jb
jl
ins
movs
movs
movs
add
dec
pop
sbb
lds
jl
imul
lods
jge
ss
sbb
inc
outs
mov
mov
or
mov
jle
add
loopne
push
fisttp
inc
mov
outs
add
jmp
sub
pop
dec
jmp
iret
cmp
jge
push
clc
xor
mov
jecxz
movs
cs
fcom
fsub
or
sahf
ins
ret
adc
shl
mov
xor
mov
push
and
jbe
add
dec
lea
gs
push
clc
and
add
(bad)
fsubr
fldl2t
adc
icebp
addr16
and
jne
mov
jge
push
jle
retf
dec
fxam
pop
add
loopne
rol
jae
jae
mov
and
call
test
popa
mov
ret
cmp
addr16
call
sub
les
sub
jnp
fnstsw
cmps
jne
push
sub
lahf
popf
mov
push
std
imul
je
test
add
dec
fld
mov
push
(bad)
bound
nop
mov
(bad)
jmp
dec
mov
mov
out
xor
sub
jb
mov
mov
sbb
sbb
pop
xor
retf
xor
fidiv
imul
pop
imul
movs
push
xor
xchg
mov
push
mov
pusha
jnp
pop
and
push
inc
push
(bad)
xchg
mov
mov
inc
aas
jns
adc
push
jbe
cmps
xchg
mov
std
dec
(bad)
mov
cmp
aas
mov
pop
icebp
in
enter
in
sub
ret
dec
ins
das
jp
popf
jle
imul
sub
mov
inc
mov
out
jo
mov
jle
mov
out
push
hlt
cmp
add
divps
out
test
pop
loopne
cmps
and
iret
stos
sbb
cmp
ror
shr
enter
adc
xchg
ss
data16
out
jl
pop
lods
(bad)
adc
int
push
xor
icebp
xor
std
or
inc
aas
ror
lahf
mov
or
daa
fcmovne
lds
shl
or
rol
retf
aam
(bad)
adc
cld
loop
test
movs
mov
aam
aad
jg
inc
ins
inc
nop
sub
mov
adc
enter
sub
cmp
sahf
mov
sub
stos
in
adc
call
add
aam
pop
sahf
(bad)
cmps
mov
arpl
add
into
fdivr
xchg
dec
ror
jno
shl
jp
add
cmp
push
je
movs
inc
adc
je
xchg
add
fsubr
bound
and
inc
rcr
js
xor
jge
jg
(bad)
and
dec
pop
pop
out
loop
cs
or
shl
ds
or
mov
pop
pop
imul
(bad)
inc
mov
add
int3
aad
xor
shr
movs
aas
push
adc
jno
xor
scas
cwde
mov
outs
rcl
in
xor
jne
cmps
movs
scas
das
mov
mov
jb
cli
add
cmps
lds
mov
test
jmp
push
mov
push
add
adc
inc
sbb
and
adc
inc
test
xchg
and
xchg
mov
test
mov
mov
pop
fs
add
inc
mov
sbb
ret
sbb
data16
leave
pop
mov
xor
sar
aaa
mov
cmp
jbe
adc
call
pushf
and
cwde
pusha
sub
pop
lods
adc
fisub
jp
(bad)
sub
fidiv
push
xlat
inc
inc
mov
cmc
sub
dec
mov
mov
mov
mov
imul
push
push
mov
push
mov
push
out
outs
xor
dec
mov
jne
cmp
pop
fnsave
push
dec
mov
retf
or
pop
jmp
xor
mov
rcl
push
push
pop
repz
jmp
sub
sbb
sbb
adc
or
xchg
sub
mov
fwait
mov
adc
mov
cmp
cmp
push
mov
mov
sbb
and
jnp
mov
scas
fcmove
lods
nop
sbb
adc
mov
or
mov
cmps
imul
mov
push
aad
mov
gs
repnz
ja
push
iret
mov
mov
sbb
and
xchg
fcmovbe
push
bound
or
cmc
in
in
dec
imul
sbb
mov
dec
dec
lock
inc
mov
jo
add
lods
adc
cmps
adc
pop
or
int
dec
fsubr
cmp
div
jae
call
cli
data16
stos
mov
xchg
or
sti
(bad)
popa
stc
pop
pushf
ret
sbb
jne
dec
and
aas
push
int3
xchg
mov
xor
inc
inc
sub
jmp
and
mov
adc
gs
dec
pop
rcr
pushf
ret
pop
add
ficomp
push
sbb
sbb
inc
retf
cdq
(bad)
data16
cs
and
pop
sub
fs
dec
push
add
mov
imul
adc
repz
mov
lods
sbb
das
inc
js
out
test
pusha
daa
adc
push
ins
cmp
pusha
and
(bad)
in
in
int
cmp
or
gs
add
xor
xchg
mov
cli
shl
imul
mov
mov
inc
dec
das
mov
cld
pop
mov
mov
mov
lea
xlat
movs
and
jge
mov
pop
cmc
mov
or
nop
test
mov
ja
leave
gs
pop
and
dec
xchg
leave
out
xchg
inc
test
ds
push
push
sub
sub
test
outs
jne
sub
add
push
mov
sti
mov
ret
xor
stos
popa
adc
cli
or
pop
or
lahf
sahf
add
mov
test
dec
sbb
xchg
and
mov
push
xchg
fldcw
cmp
nop
mov
sub
inc
xor
cdq
cmc
sbb
imul
mov
mov
das
in
scas
ja
pop
pop
sub
ret
into
ins
sbb
fcomip
aaa
push
fwait
xchg
push
pop
daa
or
hlt
push
mov
mov
cmp
mov
call
out
dec
ret
lock
xor
sbb
js
fcom
ror
rol
(bad)
sub
dec
imul
mov
jne
aaa
jb
adc
dec
rcl
(bad)
xchg
sti
hlt
ins
xor
lock
xchg
jecxz
sub
xor
and
out
dec
sub
pop
inc
pushf
cmc
into
pop
or
call
test
dec
cmp
lods
adc
sbb
dec
into
lds
fcomp
push
outs
adc
xchg
data16
clc
retf
imul
test
add
push
(bad)
in
mov
push
daa
inc
fwait
mov
xor
sbb
in
test
imul
sub
(bad)
div
aaa
push
aad
cmp
repnz
cmp
jmp
jge
mul
jbe
aaa
xor
pop
iret
(bad)
push
push
out
mov
jno
ret
je
faddp
out
stc
scas
pop
cwde
call
rcr
in
daa
out
popa
not
sub
pop
(bad)
add
imul
mov
jl
aaa
loope
mov
jbe
xchg
inc
pop
push
adc
fnsave
jmp
sub
aas
stos
stos
out
(bad)
jne
pop
enter
or
xchg
repnz
aas
mov
mov
cmp
lds
fbld
out
aas
or
or
and
jmp
enter
pop
xor
jmp
out
and
out
pop
out
mov
pop
mov
pop
int
xlat
rcr
adc
mov
pop
pop
in
scas
mov
fistp
(bad)
mov
sbb
mov
cmp
mov
inc
jb
lahf
sbb
pop
sub
push
inc
push
jp
jae
xchg
inc
pop
dec
stos
pusha
and
pop
xchg
lods
ret
add
jle
cmp
retf
sub
pop
(bad)
add
inc
cmps
daa
rcr
dec
dec
test
sbb
jns
inc
dec
(bad)
lahf
pop
adc
adc
fmulp
not
fwait
inc
popf
fnstsw
sbb
(bad)
pop
jno
ror
or
mov
fwait
jne
mov
mov
bound
cmp
push
call
sbb
fistp
mov
xchg
pop
pop
(bad)
xor
(bad)
hlt
aam
stc
fsave
xlat
(bad)
pop
pop
sbb
ja
xchg
bound
not
mov
out
scas
jb
movs
adc
and
nop
in
std
inc
mov
mov
add
stos
xor
stos
mov
push
xchg
shr
call
jmp
stos
cmp
add
push
cwde
mov
dec
clc
pause
pushf
stc
test
cmps
inc
dec
js
pop
(bad)
aad
(bad)
mov
arpl
fnstcw
mov
int3
imul
jbe
movs
mov
lods
dec
mov
mov
int3
inc
(bad)
xchg
cmp
mov
out
aaa
pop
dec
adc
sar
stos
ds
or
sbb
inc
adc
or
sbb
mul
pop
jb
jg
sub
push
mov
into
test
shr
xchg
inc
loope
push
and
inc
push
lock
jns
inc
xchg
xchg
and
scas
sub
ja
and
fwait
cld
inc
clc
adc
sbb
aad
das
pop
mov
inc
int3
pop
sbb
pop
xchg
fiadd
loopne
mov
fst
std
test
movs
dec
push
adc
dec
pop
in
jmp
mov
call
je
dec
das
mov
pop
dec
inc
mov
cmc
lahf
xor
mov
cmc
pop
xlat
pop
inc
cmp
or
fimul
rol
or
out
fist
mov
call
sar
mov
or
call
mov
sbb
outs
out
ds
test
jmp
loop
test
mov
into
ret
popa
mov
repnz
rcl
pop
fadd
sbb
xor
mov
aas
sahf
cmp
loopne
ins
xor
pop
jno
jl
jmp
push
jmp
mov
daa
xchg
rol
add
nop
add
mov
in
popa
and
fidiv
(bad)
mov
sti
jb
sbb
mov
retf
push
and
add
(bad)
shl
(bad)
and
mov
movd
dec
add
gs
iret
popf
mov
out
sbb
push
fdivrp
into
cwde
and
xchg
aam
addr16
add
lahf
aas
pop
or
pop
pop
fild
outs
pop
cmp
stos
cmps
lea
xchg
jne
xchg
push
sub
jbe
mov
pop
fs
sahf
xor
dec
mov
mov
ins
loop
dec
sub
cmp
mov
retf
or
cmp
daa
push
pusha
pop
fist
je
adc
pop
nop
and
adc
fld
or
jecxz
push
dec
cmp
xchg
or
cmps
not
inc
sbb
or
and
mov
jecxz
and
call
xor
xchg
jge
dec
inc
scas
jne
ins
push
sbb
lahf
adc
jmp
pop
mov
xchg
call
shl
push
out
cli
lahf
scas
outs
mov
jbe
inc
sbb
pop
pop
movs
sbb
xchg
dec
jns
xchg
sbb
xchg
sbb
hlt
(bad)
sti
mov
cdq
icebp
mov
ret
inc
cmp
mov
cmp
push
add
dec
fld
repnz
xor
inc
dec
xlat
push
popf
loop
adc
add
data16
js
or
cwde
leave
or
mov
mov
aad
inc
push
and
fadd
(bad)
test
(bad)
cld
shr
xchg
fwait
das
stc
xlat
jns
inc
int3
repz
or
jg
jl
inc
mov
packsswb
addr16
sbb
add
(bad)
mov
add
shr
shl
xchg
jp
outs
loopne
pop
sub
mov
mov
pusha
pop
jl
adc
das
(bad)
jecxz
pushf
mov
in
iret
jb
push
inc
stos
scas
ror
dec
mov
jl
mov
push
sub
sar
dec
inc
ret
mov
hlt
int3
(bad)
cmp
dec
int3
mov
pop
mov
xor
mov
pop
rcr
mov
cs
nop
pop
sub
int
(bad)
movs
dec
imul
dec
cmps
pop
lods
inc
aas
mov
pop
mov
or
or
pop
xchg
test
mov
test
mov
xchg
and
jnp
pop
or
call
dec
retf
sub
add
jo
jle
adc
or
inc
(bad)
xor
xabort
js
lahf
retf
mov
jle
sbb
mov
(bad)
cmp
sub
retf
ja
ins
sub
pop
adc
xor
jmp
sbb
fcom
push
test
xchg
fwait
icebp
adc
sbb
imul
mov
cmp
jge
add
lods
xlat
(bad)
xor
jg
mov
adc
lods
adc
out
lock
jb
xor
or
jp
test
(bad)
pushf
jg
(bad)
(bad)
jmp
pop
sub
nop
and
sub
mov
call
clc
(bad)
cmp
xchg
mov
add
aaa
sti
loop
pop
mov
out
pop
sbb
int
push
fs
dec
aas
in
jo
mov
mov
enter
int3
ret
push
mov
or
retf
mov
jl
fsubr
or
push
sbb
add
(bad)
pop
pop
mov
lahf
in
cmp
(bad)
push
es
inc
pop
shl
xor
xchg
inc
mov
loop
cmps
fsubr
push
out
or
jge
enter
imul
jns
sbb
adc
shl
retf
or
pop
dec
js
push
xor
or
jae
push
repz
rcr
xchg
jns
mov
adc
jmp
ds
(bad)
addr16
mov
mov
jecxz
sub
xor
mov
popf
jmp
pop
ja
and
add
pushf
cli
xchg
(bad)
jmp
leave
rcr
mov
fdivrp
leave
xchg
or
test
lods
add
mov
icebp
cmp
aaa
add
pop
mov
sub
inc
fimul
or
cmp
ja
pop
jo
lea
test
push
lock
add
stos
movs
xor
das
add
and
or
outs
inc
jmp
mov
scas
test
cdq
test
cwde
movs
fldenv
clc
inc
iret
xchg
icebp
js
loopne
jle
movs
lds
push
push
into
aaa
enter
pop
pushf
gs
sbb
mov
xchg
jo
add
push
pop
pop
push
or
mov
fst
jnp
int3
dec
movs
adc
nop
or
sub
repz
adc
push
pop
stos
inc
dec
ret
js
sahf
inc
inc
sbb
not
fdiv
fild
cmp
(bad)
jl
add
int
sub
in
shr
sub
aas
push
xor
dec
inc
inc
cld
inc
popf
push
(bad)
sbb
xchg
adc
out
aad
aad
sub
imul
mov
push
xchg
std
xchg
test
xor
(bad)
loop
mov
les
cdq
mov
cmps
ror
jno
int3
pop
adc
dec
pop
bound
add
call
in
jecxz
adc
or
mov
jmp
lea
out
sub
or
sub
fisub
mov
mov
lock
fcom
rol
cwde
push
jmp
adc
shl
xlat
enter
xor
es
xchg
sti
test
adc
fs
xor
out
mov
push
xchg
test
xchg
out
mov
out
add
movs
shl
or
add
mov
jle
dec
pop
into
dec
or
pop
mov
pop
sub
cdq
mov
ss
pusha
enter
fadd
std
adc
push
add
aaa
rcr
pop
xor
sar
loop
pop
imul
fistp
icebp
fs
outs
hlt
cmp
pop
jp
out
mov
and
out
inc
repz
hlt
int3
imul
dec
sbb
push
cld
xchg
or
pop
shl
xchg
dec
dec
sub
ins
adc
and
lock
hlt
sbb
iret
scas
xchg
fldcw
js
sub
mov
inc
sub
inc
pop
(bad)
jecxz
icebp
mov
and
in
mov
jp
repnz
add
lods
push
inc
add
sub
call
aaa
or
push
inc
mov
or
test
gs
int
sbb
dec
int3
and
aam
pop
and
idiv
adc
cmc
sub
loop
or
addr16
fsub
ret
ins
ins
inc
mov
and
add
add
test
add
adc
std
test
ret
add
ss
mov
cmp
test
iret
lods
lahf
mov
stos
aam
mov
mov
mov
mov
stc
fs
cmp
add
cmp
loopne
ja
sahf
lods
jne
mov
adc
jle
movs
mov
es
pushf
jg
scas
fs
inc
(bad)
cmp
into
mov
(bad)
adc
(bad)
add
popf
and
xlat
(bad)
pop
cmps
mov
loope
dec
or
dec
cli
lods
(bad)
mov
fwait
xlat
stos
mov
push
cmp
fs
sub
cli
pop
(bad)
xor
mov
int
loopne
jge
and
dec
or
sub
ret
scas
dec
mov
fsubr
jae
jle
mov
cdq
into
or
mov
add
sahf
ret
popf
lea
fwait
jmp
and
gs
xor
int
jge
in
fild
(bad)
out
sub
rol
movs
loop
mov
xchg
clc
fwait
test
pop
add
and
fsubr
xor
push
sbb
adc
cmp
loope
mov
adc
adc
jno
adc
jmp
xlat
addr16
add
inc
aas
sub
in
ds
push
test
mov
test
mov
adc
int
jo
push
or
loope
xchg
xor
mov
xor
mul
cmp
test
(bad)
addr16
pushw
stc
fcomp
stc
in
das
in
mov
int3
mov
xor
pop
mov
lock
cwde
clc
sbb
pop
in
loopne
aaa
out
int3
aad
sbb
ret
popa
pop
mov
inc
dec
or
push
and
movs
ror
das
leave
sbb
pop
push
or
scas
fs
add
and
xor
mov
lods
sbb
jae
add
add
test
and
and
adc
pop
xchg
std
mov
mov
pop
or
sub
sar
js
out
sti
repz
xor
test
and
adc
adc
pop
vmwrite
fdiv
sub
cdq
clc
xchg
mov
pusha
pop
push
retf
fist
jae
xchg
cmp
nop
mov
xchg
ja
ds
jns
pop
fwait
lock
arpl
push
mov
fwait
pop
sbb
inc
fwait
mov
xor
ds
push
push
into
jb
(bad)
cdq
dec
xchg
xor
push
test
add
cs
mov
ja
arpl
(bad)
lods
fidivr
loope
std
jo
imul
xlat
push
cmp
call
inc
bound
mov
dec
jmp
adc
push
int
es
dec
cmp
inc
add
addr16
pop
mov
cmp
cmc
push
push
mov
in
icebp
sahf
icebp
arpl
add
int
popf
maskmovq
neg
pop
or
test
stos
jle
fwait
add
cwde
movs
jmp
fadd
cmps
sbb
jmp
jo
xor
mov
addr16
cs
push
mov
scas
cmps
das
sti
and
das
es
jns
pop
sub
jnp
ret
sub
scas
leave
push
jge
adc
lock
cli
sti
(bad)
jbe
clc
sbb
ss
jo
pop
mov
pop
(bad)
or
mov
arpl
repnz
stos
mov
mov
(bad)
and
out
sub
add
(bad)
dec
mov
inc
cli
push
jmp
sub
sbb
or
bound
fadd
mov
les
or
xchg
outs
inc
mov
(bad)
jle
xor
(bad)
dec
mov
add
sub
mov
shr
sub
jae
sub
es
jg
pop
or
ins
xor
jne
gs
dec
in
and
mov
adc
enter
loope
sub
push
adc
or
mov
daa
das
fwait
push
arpl
adc
mov
push
jo
fwait
push
mov
mov
out
repnz
stc
cmp
fucomp
sub
xor
not
cmp
es
(bad)
icebp
ja
fidivr
neg
fucom
ins
mov
sub
ins
hlt
imul
push
and
xor
xchg
enter
inc
test
cli
xchg
xor
ja
test
loopne
fild
xchg
sar
sub
leave
in
fwait
dec
mov
arpl
and
xor
adc
sub
inc
adc
mov
jp
inc
pop
mov
imul
dec
add
(bad)
and
in
pop
sub
lods
pop
addr16
or
mov
cmp
out
sti
pop
sbb
inc
pop
push
test
imul
cdq
in
push
nop
or
(bad)
popa
jmp
adc
inc
xchg
mov
(bad)
out
out
and
inc
mov
retf
in
movs
xchg
xchg
and
aas
enter
pop
jb
or
scas
(bad)
clc
scas
xchg
pop
xchg
movs
fcomp
dec
pop
mov
(bad)
into
dec
daa
sub
add
sbb
xchg
je
jle
mov
pusha
cmc
test
sbb
cmp
sub
sbb
mov
mov
jno
into
jo
mov
pop
ds
dec
into
dec
aam
mov
scas
inc
xchg
js
(bad)
outs
adc
mov
imul
and
jnp
push
sbb
(bad)
xchg
xor
outs
test
loopne
mov
not
scas
mul
dec
and
mov
retf
idiv
cmp
(bad)
fimul
xor
into
cmpxchg
cmps
mov
pop
or
mov
push
inc
rcl
bound
xor
dec
and
xor
hlt
test
in
push
shl
sbb
sub
shl
xchg
mul
jp
cmp
pop
mov
aad
jl
jl
xchg
iret
adc
push
test
xor
or
stos
pop
jmp
or
out
push
icebp
repnz
add
xchg
inc
call
mov
mov
scas
mov
mov
loopne
imul
test
jae
cld
loope
dec
gs
sub
test
sub
and
inc
cmc
cmp
pop
jge
inc
lods
pop
inc
jg
sbb
dec
pop
stos
adc
add
in
jmp
stos
retf
jbe
xchg
xor
(bad)
mov
leave
sub
je
adc
cs
jns
xlat
and
xor
pop
jmp
or
pop
dec
jecxz
inc
mov
push
pop
push
mov
pop
inc
lahf
push
add
cmps
or
inc
push
mov
out
test
sub
xchg
lea
mov
int
mov
push
adc
scas
cmps
lods
sub
cmp
(bad)
aad
loopne
sub
dec
imul
and
mov
bound
loopne
xchg
das
or
test
sbb
xor
xchg
dec
push
add
sbb
inc
inc
jmp
test
sbb
or
inc
movs
sub
sub
xor
out
pop
pop
pop
xchg
jg
aad
test
xchg
cmp
add
movs
addr16
in
pop
test
je
stc
adc
in
imul
pop
push
cmp
pop
mov
into
pushf
push
lahf
add
jp
and
jae
test
xor
out
inc
dec
xor
(bad)
scas
jno
ds
cmp
mov
push
ins
cmc
fcomp
dec
xor
sbb
push
fisttp
fstp
jno
lods
sbb
push
add
add
arpl
test
sub
add
jmp
ds
les
jne
in
dec
or
and
movs
imul
jb
push
sub
jnp
std
addr16
call
and
sbb
inc
push
mov
and
test
cmp
and
clc
lock
or
pop
adc
in
loope
sub
aam
in
imul
into
movs
outs
sbb
call
xor
jbe
dec
mov
arpl
add
std
cmp
jl
jle
leave
mov
mov
adc
xor
(bad)
aam
rcl
mov
loope
in
movs
test
xchg
adc
adc
shr
xor
jo
push
sbb
mov
cmp
mov
test
(bad)
or
dec
rcr
(bad)
jbe
out
iret
into
xchg
sbb
leave
rsm
cdq
push
push
jmp
in
sub
inc
in
adc
add
push
lar
rcr
cwde
test
(bad)
test
push
xchg
add
pop
je
pop
mov
sbb
mov
mov
scas
mov
pop
movs
pop
add
push
(bad)
and
retf
mov
sbb
inc
xchg
jno
jns
jp
mov
stc
loopne
add
retf
mov
sbb
ret
repz
movs
pop
jp
sbb
icebp
fs
xor
aam
mov
xor
and
in
xchg
popf
(bad)
xor
adc
sahf
leave
ds
xchg
scas
xchg
and
int3
jge
push
xchg
adc
retf
dec
and
dec
loop
bound
jmp
and
repz
mov
cmps
stc
adc
lods
push
fsub
adc
dec
xchg
and
xor
sbb
jb
fiadd
push
cmp
rcl
out
scas
xchg
add
push
mov
push
adc
push
pop
xor
xchg
test
xchg
jle
out
pop
outs
xlat
aad
push
out
ror
popf
ret
arpl
xchg
cmp
and
test
and
or
rol
fbld
ret
and
push
pushf
xchg
retf
int3
adc
fisubr
inc
arpl
cmp
aad
xor
cdq
test
pop
sub
push
lahf
jmp
or
imul
mov
sub
jl
leave
cs
movs
dec
and
movs
inc
test
ds
adc
jle
xor
add
dec
dec
jb
jle
test
dec
jnp
xchg
xchg
adc
nop
or
sub
inc
inc
fild
je
mov
add
int
mov
jnp
leave
jmp
dec
sub
mov
jae
inc
sahf
(bad)
aad
repnz
xor
mov
aad
xor
out
cwde
ret
mov
into
pop
pop
movs
cmp
push
shl
xchg
sbb
pop
mov
cmp
cmp
sbb
fisttp
call
add
adc
jmp
sbb
cmp
dec
mov
inc
call
ror
or
(bad)
pop
xor
outs
mov
iret
mov
and
push
cwde
cmp
mov
pusha
adc
in
scas
xchg
enter
lahf
les
fwait
mov
rcl
push
add
xor
push
inc
(bad)
sbb
test
mov
push
nop
test
repz
aam
ja
adc
clc
jmp
xchg
jl
push
sti
ja
shl
mov
inc
mov
mov
icebp
jmp
jl
(bad)
sub
adc
sub
jns
mov
mov
sub
pop
retf
or
mov
iret
xor
ins
push
or
lock
pusha
fcomp
dec
push
aam
es
mov
dec
pop
mov
and
jl
xchg
or
(bad)
repnz
and
int3
cmp
jo
test
or
mov
movs
pcmpgtw
mov
jl
lock
bound
mov
sub
(bad)
sub
dec
mov
test
mov
call
(bad)
stos
mov
jno
fldenv
or
js
push
cld
fistp
inc
cwde
fcomp
jo
mov
add
test
push
dec
or
xor
fwait
or
inc
dec
xchg
xchg
sbb
adc
int3
inc
ss
sti
mov
sub
fwait
xor
fstp
out
out
(bad)
fidivr
sub
push
sub
xor
(bad)
je
arpl
sub
xchg
cmc
ficom
fbld
mov
inc
in
push
rcl
ret
int
popa
pop
jb
imul
push
cs
sub
sbb
les
push
test
cmps
or
iret
mov
dec
dec
mov
mov
test
mov
jg
mov
fild
stos
inc
loopne
sbb
sbb
fldenv
sbb
cwde
cmp
and
sub
mov
iret
das
pop
add
xchg
test
mov
dec
aaa
or
icebp
out
pop
ret
xchg
clc
xchg
sub
or
xor
movs
mov
sub
frstor
ja
ret
jp
inc
repz
jp
xchg
jae
jo
and
cmps
in
push
sbb
ins
loop
mov
cs
pop
aad
sar
xor
inc
sub
ror
sbb
xchg
xchg
or
icebp
es
and
ins
or
jns
adc
addr16
mov
push
fs
aad
call
jbe
or
outs
push
add
and
sti
xchg
jmp
dec
sti
mov
popa
psraw
xchg
inc
sbb
push
repz
fwait
add
dec
xor
ins
rcl
adc
cmp
fstp
jge
inc
dec
loop
cmp
dec
shl
ret
call
xchg
push
cmp
mov
mov
dec
sub
data16
sub
jb
mov
bound
mov
ins
ret
sub
and
add
push
pop
xor
adc
xor
fst
scas
fnstcw
cmc
mov
or
inc
scas
ja
lods
xchg
push
adc
nop
push
lods
xor
push
jns
loop
(bad)
out
cmc
mov
jg
pop
sub
xchg
jmp
(bad)
mov
enter
jle
imul
jno
or
or
inc
push
scas
ror
add
xor
add
inc
cmp
jo
int
inc
mov
addr16
mov
js
pop
imul
test
mov
inc
sbb
and
xchg
pop
aaa
(bad)
xchg
popf
outs
in
popa
sbb
lock
cmps
fucom
adc
jns
adc
mov
std
retf
mov
pop
in
push
adc
js
fcom
add
cmp
mov
dec
and
lock
xor
arpl
and
push
or
retf
les
adc
xchg
nop
or
mov
adc
xor
sbb
stos
outs
pop
cmp
add
mov
stc
mov
push
push
push
movs
clc
mov
repz
int3
outs
loope
jne
jl
jnp
sbb
push
call
retf
dec
dec
sti
adc
test
not
sbb
or
add
inc
(bad)
fiadd
je
mov
stos
push
div
daa
inc
xchg
in
int
mov
lods
popa
lahf
cmc
ds
mov
shl
mov
push
clc
mov
jne
or
inc
mov
fst
lods
pop
inc
adc
scas
push
jmp
fcom
jno
or
cmp
jg
push
imul
fisub
call
rcl
push
jnp
jo
sti
jge
mov
lods
and
adc
add
cwde
test
xchg
ffree
fadd
cmp
inc
test
dec
mov
inc
inc
xchg
jne
cmp
loopne
xrelease
test
into
sbb
adc
outs
adc
pop
hlt
neg
lods
sbb
in
ja
mov
pop
bound
aad
popa
call
or
inc
jno
mov
push
add
inc
outs
mov
ins
push
inc
lea
(bad)
call
jmp
mov
lods
call
push
mov
fist
call
adc
adc
repnz
sbb
ret
jp
div
cmps
fbstp
outs
or
js
sbb
push
jg
mov
iret
test
mov
jge
scas
push
int
lods
inc
xor
(bad)
cli
sti
dec
mov
cld
addr16
shr
jae
shl
cdq
aaa
jge
add
movs
aad
jmp
xchg
test
inc
add
imul
xor
retf
sbb
sbb
push
daa
(bad)
fdiv
fisubr
inc
das
mov
test
out
rol
dec
add
pop
lds
ds
addr16
mov
retf
sub
aam
pop
sbb
outs
in
sbb
subps
jmp
in
jl
es
fcomp
sbb
push
jmp
sti
dec
data16
cmps
(bad)
jb
scas
adc
leave
fistp
retf
dec
and
sbb
push
fcmove
inc
inc
jae
pop
or
aad
vhaddpd
cmp
ret
jnp
call
jecxz
sbb
sub
sahf
and
data16
xor
adc
inc
adc
fadd
loopne
lods
jae
and
dec
xchg
mov
push
dec
loope
(bad)
into
inc
mov
mov
dec
clc
int3
fdiv
int3
stos
xchg
cmp
cld
xchg
imul
dec
outs
fisub
push
pop
adc
call
ret
push
sbb
inc
ficom
xchg
push
cmps
ins
aas
inc
popf
pop
cwde
inc
sbb
dec
mov
inc
inc
pop
and
in
inc
xchg
outs
push
mov
mov
int
mov
aaa
jno
xor
sbb
aad
fsub
or
shl
cmp
inc
mov
jmp
(bad)
repz
add
lods
mov
into
sbb
xor
adc
cmp
mov
sub
and
sub
cmp
xchg
sub
and
daa
in
sub
cli
mov
and
sub
xchg
(bad)
mov
pop
sbb
mov
push
int
out
aaa
dec
icebp
cmp
cmps
xor
je
mov
jmp
jb
cmps
inc
xor
push
jg
xor
out
push
rcl
xor
lahf
jg
scas
std
sbb
jo
mov
mov
xor
xchg
add
dec
fdivrp
enter
stos
mov
rcl
aam
(bad)
adc
inc
mov
mov
repnz
retf
mov
in
dec
mov
and
call
adc
test
lods
jne
adc
js
call
out
mov
push
int
call
pop
mov
adc
xlat
mov
repnz
ins
mov
sub
or
jg
fidivr
inc
mov
imul
outs
ss
iret
dec
push
xor
and
xor
cmp
clc
xor
jle
(bad)
repnz
das
js
in
inc
pop
test
sub
cmps
int3
inc
xchg
pop
je
xor
aaa
dec
ja
jmp
loop
rol
retf
pop
bound
out
cmp
xchg
xchg
mov
mov
and
or
sub
sti
dec
dec
cmp
mov
pop
pop
movs
push
stos
(bad)
ja
mov
leave
sbb
repnz
out
fbstp
sbb
rcl
inc
enter
sbb
ss
seto
loopne
xchg
cmps
imul
jecxz
jns
mov
daa
mov
xor
mov
mov
lods
or
pop
ror
mov
push
imul
iret
addr16
mov
mov
test
mov
cmovno
jmp
sahf
push
xchg
loopne
jmp
mov
stos
imul
rcr
fmulp
retf
out
jno
js
jp
or
call
xchg
movs
(bad)
cli
fnstcw
dec
dec
sub
push
xor
aaa
and
popa
mov
call
mov
sub
mov
push
cmp
pop
stc
mov
lods
(bad)
fwait
push
test
sbb
cwde
xchg
aas
test
fldenv
je
mov
and
inc
push
adc
jmp
mov
add
jbe
cli
lahf
hlt
(bad)
dec
movs
add
lahf
sub
(bad)
cld
mov
xor
or
sub
mov
xlat
adc
mov
(bad)
push
jecxz
cli
leave
pusha
xor
ja
mov
push
pop
leave
push
rcr
cs
lea
xor
inc
jge
loopne
std
sub
repnz
adc
js
in
into
or
push
fcmovnbe
and
push
mov
mov
in
lock
popf
popa
outs
cdq
out
(bad)
into
stos
repz
mov
in
ja
cli
(bad)
mul
mov
fs
test
outs
popa
je
and
sti
mov
xor
mov
enter
test
aas
lods
ret
retf
cli
pop
mov
fsub
mov
lock
add
pop
mov
sub
pop
movs
jl
stos
sub
sub
cli
add
push
push
sub
jmp
sbb
push
not
movs
cmp
or
(bad)
std
popa
add
test
shl
ror
aas
imul
(bad)
(bad)
fnstenv
add
push
ret
xchg
inc
int
pop
int
repnz
popa
ds
jnp
(bad)
inc
mov
cwde
gs
aam
fnstsw
mov
mov
(bad)
mov
std
push
retf
pop
sub
iret
inc
js
cmp
daa
loope
push
sub
lods
dec
jnp
nop
rcr
lock
imul
push
nop
mov
dec
sbb
lods
jae
jmp
adc
and
jmp
rcl
add
sbb
mov
mov
or
pop
out
ret
scas
mov
call
sub
sbb
les
mov
sub
adc
mov
sbb
shl
ss
(bad)
out
ror
bound
bound
es
popa
ret
sub
repnz
push
add
adc
cdq
jnp
adc
pop
sub
add
sub
cmps
push
pop
dec
iret
jge
push
jne
(bad)
clc
leave
inc
test
adc
fstp
sbb
mov
mov
loop
imul
dec
jbe
cmp
mov
cmps
jns
ror
je
div
test
stos
test
repnz
sbb
js
sub
dec
ror
pop
inc
mov
inc
(bad)
cmp
mov
jl
xchg
inc
cld
rcl
in
jb
jns
cli
cmp
adc
fst
in
and
jae
mov
imul
test
ss
xchg
repz
cdq
xchg
bound
jae
(bad)
dec
xchg
mov
sub
xchg
or
in
cmps
dec
jb
pop
pop
cmp
popa
cmp
inc
mov
xchg
fimul
retf
push
xchg
iret
xchg
mov
fdivr
outs
adc
sbb
pop
shl
jl
outs
and
mov
pop
ins
or
or
les
test
fcmovnbe
repz
(bad)
rcr
ret
dec
sbb
cli
outs
ret
inc
mov
cwde
jnp
fstp
mov
xor
call
cs
jge
test
rep
pop
add
jl
int3
imul
scas
sbb
test
in
fcomp
mov
cmp
cmp
(bad)
cmps
push
les
mov
je
retf
imul
cwde
add
hlt
inc
jne
mov
fmul
add
and
mov
sub
daa
lea
es
add
mov
fsubr
jmp
(bad)
(bad)
int
es
xchg
aam
add
outs
not
mov
movs
xor
lods
push
std
sbb
jp
xor
shr
pushf
cmp
popa
cwde
dec
inc
rol
retf
fisubr
fbld
adc
cld
mov
mov
jg
por
fmul
inc
loope
fild
mov
push
shl
retf
leave
call
jmp
(bad)
fmul
and
mov
neg
inc
fnsave
push
jae
aaa
loopne
loop
mov
add
or
inc
mov
cdq
cli
loopne
mov
jne
push
sbb
fisubr
mov
or
stos
push
es
dec
mov
pop
vpcomlew
lea
mov
dec
scas
or
mov
sbb
aas
inc
dec
out
hlt
mov
cmps
xchg
fadd
(bad)
mov
(bad)
repz
pop
data16
cmc
fiadd
iret
cmc
dec
and
outs
aas
sub
fstp
shl
mov
jmp
push
lea
gs
mov
xor
movs
mov
aas
inc
push
imul
pop
mov
and
sub
shl
pop
fucomp
jne
out
pop
loopne
(bad)
out
(bad)
push
(bad)
adc
cmp
pop
pop
(bad)
cmp
(bad)
jmp
jge
jge
es
xor
cmp
inc
fsub
arpl
ja
inc
cmc
mov
adc
dec
or
loope
xchg
ds
shl
add
sbb
popa
cli
push
push
mov
stos
(bad)
mov
jge
adc
add
shl
or
(bad)
and
cdq
fisubr
fst
js
xchg
loopne
jecxz
and
cmp
aaa
adc
mov
sbb
test
dec
adc
jo
push
daa
adc
xchg
add
sti
(bad)
std
repnz
out
fdiv
mov
popf
test
adc
data16
xchg
jae
xor
mov
xor
fmul
or
jl
mov
cld
push
(bad)
arpl
fld
sub
dec
(bad)
or
sahf
fdivr
mov
or
imul
push
inc
push
stos
inc
adc
xor
fidiv
sub
add
push
mov
repz
mov
mov
scas
call
or
xlat
cmc
pop
cmp
ins
adc
xor
ret
or
into
inc
cmp
test
in
out
push
in
test
jnp
cmp
push
mov
leave
(bad)
icebp
mov
cmp
scas
or
inc
test
sub
sbb
movs
push
mov
in
and
or
xchg
mov
rcl
dec
bound
jmp
cli
repz
and
out
nop
cmp
loope
sbb
pop
mov
loope
rcl
aad
rcr
stos
fdiv
xor
mov
push
sbb
sbb
ja
push
inc
cmp
mov
enter
pop
pop
pop
jecxz
js
loope
cdq
pop
int
mov
pop
shl
daa
push
sbb
and
fucomp
mov
ss
mov
cmps
fs
mov
jmp
mov
(bad)
pop
(bad)
push
test
shr
xor
repnz
push
add
or
xor
pusha
jnp
adc
sub
pushf
sbb
push
loopne
add
add
pop
scas
sbb
in
hlt
ds
retf
fwait
loopne
sbb
lock
push
es
xor
shl
xchg
ret
arpl
cmc
jge
push
cmp
xchg
push
addr16
sub
ins
mov
or
mov
js
stos
mov
dec
fisubr
mov
fwait
sbb
rol
push
pop
mov
and
jge
mov
mov
jl
xor
ins
fdivr
sbb
xlat
push
stos
xchg
arpl
push
popa
dec
push
push
leave
jge
add
sbb
add
data16
cmp
add
int
xchg
inc
lahf
data16
adc
test
mov
in
nop
iret
pusha
xchg
sbb
ins
cs
test
jle
inc
xchg
add
pusha
sub
mov
loope
lock
ja
pop
jmp
(bad)
sbb
daa
inc
xchg
xchg
mov
cmp
dec
fwait
repz
rcr
xor
fsub
mov
cmp
mov
test
pop
neg
pop
xchg
mov
sbb
test
test
mov
dec
mov
fdiv
std
fild
das
std
add
cdq
fwait
sbb
or
aas
mov
aaa
stos
push
mov
xchg
jo
pop
sahf
int3
mov
mov
retf
or
in
fld
pop
xchg
inc
call
neg
cmp
inc
test
sbb
fld
in
cmp
js
jns
pop
xchg
sti
fucom
mov
popa
fs
nop
mov
pop
mov
mov
add
movs
push
add
mov
xchg
adc
imul
fistp
mov
dec
fmul
outs
hlt
sub
inc
pop
iret
push
enter
adc
ffreep
ficom
and
stc
jae
stos
lock
mov
mov
jl
inc
das
or
les
sahf
mul
cmps
xchg
scas
(bad)
pop
stc
addr16
jne
dec
xchg
retf
lea
jo
sti
imul
test
cli
fld
jb
pop
fist
sbb
aaa
xor
(bad)
push
or
or
inc
test
xor
ss
xor
fcmovnb
pop
jno
mov
cmc
cmp
adc
mov
pop
gs
xor
fimul
cmp
lds
push
fbstp
inc
mov
xchg
push
mov
ss
sbb
xchg
aaa
xor
imul
mov
imul
je
in
repz
push
mov
xchg
or
call
dec
enter
jmp
xor
mov
cmps
xchg
ins
rcr
sar
in
jge
xlat
and
push
xchg
mov
jp
icebp
(bad)
adc
cmp
cmp
inc
inc
jge
repz
fst
icebp
psrlw
stos
or
mov
inc
push
call
adc
shl
int3
test
das
mov
jo
mov
jmp
jo
pusha
xor
sub
mov
sub
pop
adc
(bad)
add
jo
inc
test
faddp
aas
out
jo
pushf
out
out
cmp
push
add
mov
inc
xlat
jo
movs
mov
or
add
pop
pusha
shl
mov
pop
mov
jnp
adc
mov
repz
push
or
xchg
aaa
into
jg
jae
inc
sbb
enter
xor
push
aam
cli
jnp
mov
fwait
cmps
les
adc
and
movs
mov
iret
arpl
rcl
push
dec
call
push
add
(bad)
cmps
pop
and
popf
stos
xchg
push
xlat
jnp
cmp
ficomp
fld
call
xchg
loope
jle
sub
mov
dec
pop
mov
in
cmp
jmp
xchg
jb
xlat
push
or
fist
js
add
or
aas
stos
sub
mov
cmp
mov
fcomp
or
retf
xchg
mov
je
test
or
in
mov
jb
jno
dec
in
push
or
jns
adc
cmp
test
jmp
sti
mov
in
jl
popf
(bad)
jmp
mov
imul
frstor
js
mov
xchg
mov
dec
vmwrite
in
dec
mov
pushf
jge
enter
mov
push
inc
jno
out
pop
out
ffree
jbe
jnp
inc
xchg
je
mov
dec
mov
xor
(bad)
shr
jb
jns
out
xlat
loopne
daa
and
dec
mov
add
jg
into
xor
ds
add
popa
dec
add
popa
jle
shl
rcl
push
stos
inc
sbb
xchg
out
sub
xor
push
sahf
aam
addr16
cmp
dec
cmp
pushw
pop
jae
gs
test
arpl
repnz
add
ins
xlat
inc
xchg
and
cmp
in
pop
aad
push
adc
fiadd
sbb
jecxz
pop
fst
fnstsw
lahf
popf
inc
mov
repz
enter
pop
mov
push
sbb
sbb
fs
adc
xlat
sbb
mov
mov
psrlq
out
aad
lahf
cdq
cmp
popa
add
adc
pop
sbb
cmp
mov
jp
push
lea
dec
jnp
xchg
loopne
dec
(bad)
fs
add
mov
movs
sbb
test
call
sbb
jb
ja
sub
mov
add
sbb
pop
mov
jle
(bad)
call
aam
aaa
and
push
xchg
inc
or
mov
gs
pusha
sub
movs
mov
mov
pop
jmp
iret
pop
retf
or
std
ss
outs
xor
mov
or
mov
and
xchg
test
sahf
arpl
push
inc
mov
jns
in
aad
daa
mov
sbb
shl
add
ja
push
test
pop
ror
cmc
(bad)
jg
hlt
call
fld
ins
mov
test
sub
sub
out
icebp
je
sub
xlat
pop
push
popa
cdq
pop
int
imul
sbb
adc
xor
sub
pop
mov
out
xor
jmp
xchg
pop
in
lods
pushf
fldcw
mov
les
shr
int3
dec
pop
mov
fdiv
pop
inc
cmc
nop
adc
in
pusha
pop
iret
mov
push
mov
(bad)
push
sub
xor
out
or
jp
(bad)
div
call
dec
aad
imul
cmps
packssdw
adc
in
mov
daa
jb
repnz
stos
jmp
call
jno
ja
sub
sti
out
dec
loopne
pop
stos
sub
jl
pusha
mov
mov
shl
cdq
ins
and
lea
mov
mov
push
xchg
sbb
mov
inc
(bad)
cmc
pop
xor
and
fidiv
sub
jmp
fild
rol
aam
sbb
(bad)
mov
xor
inc
jo
fwait
stos
or
lods
test
xor
push
push
repnz
stos
aas
repnz
(bad)
dec
out
add
jl
jno
addr16
mov
pushf
(bad)
adc
out
pusha
adc
jo
or
sbb
xchg
sbb
movs
out
ss
sub
lds
fs
clc
jmp
inc
fs
je
sbb
push
outs
mov
shr
or
cmc
aad
lahf
cld
xor
push
jo
inc
jnp
push
pop
pop
jmp
mov
jo
popa
sbb
and
push
xor
xor
xor
jge
pusha
sbb
or
pop
or
add
pushf
call
xchg
sbb
(bad)
xchg
ins
fs
les
es
(bad)
cld
stos
sbb
adc
dec
push
mov
dec
adc
ret
fsubr
(bad)
xor
inc
jl
xchg
lds
jmp
and
movs
jle
adc
push
int3
ja
xor
inc
mov
mov
cli
push
in
pop
idiv
dec
repz
call
dec
ret
xchg
loop
push
stc
cmp
js
lea
arpl
das
lahf
je
imul
mov
sbb
add
jne
popf
ins
dec
mov
retf
int
lds
mov
jno
mov
gs
shr
pop
push
dec
das
cli
cmp
xor
xor
test
pusha
ja
adc
loope
imul
scas
fist
pop
ins
retf
fcom
in
repnz
cmps
popf
xchg
cdq
inc
jp
mov
mov
jle
les
dec
shr
in
div
test
and
ja
outs
cmp
xor
add
xchg
fidiv
inc
sub
push
sub
retf
cmps
push
test
and
repz
sbb
push
movs
in
jnp
or
xor
out
mov
scas
jle
in
aad
mov
int
mov
push
push
inc
jge
pop
sti
int
xchg
xor
xor
mov
dec
xchg
or
jno
cmp
out
sbb
sbb
lods
call
cmp
fist
cmps
sbb
jle
add
lods
out
ja
test
std
call
sbb
cmc
mov
leave
std
xchg
add
fdivr
add
xor
inc
out
rcl
call
int3
jecxz
jl
int3
aas
fmul
cs
xchg
sbb
sub
mov
test
cmp
xor
int3
inc
and
pop
dec
mov
mov
sub
mov
and
jge
ja
sub
and
js
mov
ja
bnd
sar
or
ds
mov
stos
xor
push
inc
fcom
sub
rol
fadd
xor
pusha
loope
mov
mov
aas
fcomp
adc
ficom
or
add
cli
sbb
call
mov
push
(bad)
out
mov
xchg
pop
sbb
sub
dec
gs
xchg
mov
mov
sbb
cmp
mov
push
push
lea
jns
or
cmps
push
pop
popf
adc
mov
daa
pop
out
cs
ror
shl
(bad)
out
stos
sbb
jbe
cdq
bound
mov
mov
sbb
and
popa
dec
mov
or
fadd
fdiv
int3
addr16
enter
jg
mov
push
out
jge
sub
lahf
loop
inc
jbe
or
push
push
add
rol
in
cmps
stos
call
(bad)
sahf
push
pop
imul
cmp
test
xchg
sbb
cmc
mov
or
and
inc
mov
push
jb
ret
js
sub
xor
pop
or
xchg
xchg
push
cmp
call
imul
add
add
xchg
test
js
sub
das
icebp
mov
ret
add
test
or
icebp
xchg
fs
jle
xor
bound
cmp
(bad)
not
repz
not
sub
mov
push
pop
xchg
push
lahf
lods
les
or
sar
cdq
es
and
pop
int3
xchg
mov
cmp
nop
xor
pop
and
push
retf
dec
add
ins
adc
add
xlat
jbe
push
push
mov
jae
imul
add
xchg
sub
and
(bad)
cmps
mov
jle
int
icebp
sub
clc
stos
jmp
mov
jae
aas
mul
call
std
inc
stos
xor
not
pop
inc
cmc
clc
je
retf
pop
sar
addr16
fdivr
bound
test
sbb
sub
push
sbb
fst
aas
and
fld
mov
pop
test
outs
mov
popa
add
jbe
scas
rol
fimul
jg
or
and
out
xor
cmovno
and
pushf
add
and
pop
cmc
sub
in
or
pop
xchg
(bad)
mov
fwait
sub
or
int
fcomp
sub
or
push
cmps
cld
pop
lods
or
repnz
mov
and
pushf
cmp
push
cmp
mov
repnz
push
ror
in
aad
retf
(bad)
jne
mov
jno
jg
inc
xchg
push
pop
mov
jb
mov
or
mov
add
dec
sbb
lea
dec
test
cmps
stos
or
lock
xchg
mov
jecxz
sub
mov
mov
and
mov
cmps
add
dec
inc
stos
add
cli
dec
mov
push
lahf
std
or
iret
jmp
test
imul
jmp
cld
xor
mov
cmp
icebp
dec
out
jle
push
xor
test
call
jecxz
pop
fnsave
movs
retf
or
or
inc
hlt
push
js
nop
(bad)
xchg
sub
shr
mov
cs
cli
cmp
sar
int3
lods
mov
jne
in
outs
cmp
adc
(bad)
(bad)
jbe
sbb
dec
int
lock
clc
jmp
adc
les
jp
cld
or
sub
sbb
out
js
call
mov
xor
adc
mov
mov
cmp
clc
ja
jae
lods
lods
xor
fsubp
push
or
mov
inc
int3
call
fwait
mov
loop
daa
imul
dec
in
mov
adc
mov
rol
scas
data16
cmp
adc
jbe
cmps
outs
inc
mov
shl
(bad)
stos
xchg
call
or
add
enter
mul
dec
mov
xchg
inc
fsub
imul
mov
or
mov
inc
arpl
sbb
fsubr
add
pop
mov
in
fld
call
pop
lea
jb
jo
mov
pop
aad
and
rcr
dec
mov
js
mov
fs
(bad)
out
cwde
add
aam
sti
(bad)
int3
outs
fisub
pusha
pop
mov
aas
xchg
mov
iret
out
out
lods
lods
push
mov
cmc
cmp
cmp
lea
das
outs
in
cmp
or
sbb
movs
pop
fist
stos
inc
repnz
mov
out
ss
clc
pop
popf
in
mov
repz
sub
sbb
inc
mov
pop
inc
cmp
sub
retf
ret
mov
cwde
in
or
out
sub
pop
cmps
lock
cwde
push
mov
sub
xor
in
(bad)
xchg
(bad)
fmul
xchg
popa
ins
push
cmp
xchg
jmp
aaa
and
jne
xchg
xor
mov
sbb
mov
jecxz
daa
div
ins
je
mov
inc
in
inc
icebp
mov
xchg
mov
scas
pop
std
jle
push
out
into
mov
xchg
retf
arpl
hlt
lods
sbb
and
mov
pop
or
retf
lahf
movs
mov
retf
movs
and
in
dec
movs
jo
inc
ss
inc
loopne
and
popa
(bad)
cmp
test
inc
pop
jnp
add
mov
ja
std
jb
lods
test
repz
js
xchg
pop
jge
sbb
cmp
test
add
inc
cmp
leave
cmp
sub
sub
and
pop
mov
fsubr
loopne
das
or
fimul
mov
stos
sbb
jg
mov
stos
inc
xor
xor
mov
inc
shl
adc
aam
inc
or
dec
inc
fild
call
mov
cmp
loope
shl
push
stos
out
inc
sub
fiadd
hlt
leave
cmp
or
imul
xlat
outs
test
mov
dec
xchg
in
adc
movs
mov
clc
add
lods
inc
retf
mov
and
add
inc
xor
mov
sbb
lock
push
mov
jno
loop
mov
mov
xchg
and
sub
scas
test
lds
mov
or
rol
mov
sbb
fdiv
dec
js
jmp
jge
xchg
punpckhdq
sbb
sbb
push
das
dec
jl
jecxz
jmp
and
push
ret
push
mov
add
xchg
or
jmp
cmp
in
mov
adc
aas
ficomp
sbb
cmp
xchg
std
retf
cmp
add
scas
mov
inc
inc
in
loop
and
xchg
js
sub
jmp
push
xchg
adc
sub
cmp
ror
xor
les
fild
scas
ins
mov
xlat
push
pushf
cmps
movs
sahf
jl
es
ret
jmp
mov
push
and
hlt
pop
cwde
cmps
pop
ret
pop
out
outs
nop
jge
or
dec
shr
add
or
mov
jge
outs
ret
push
xchg
nop
dec
jno
mov
cld
dec
xchg
adc
cmp
cwde
jb
adc
or
fs
data16
mov
addr16
cld
jmp
mov
jecxz
pop
pop
mov
jl
pop
gs
(bad)
cwde
xchg
xchg
mov
dec
adc
(bad)
div
call
adc
rcr
fist
lahf
add
mov
loopne
ins
pop
push
in
cwde
mov
jb
mov
pop
aaa
test
pop
push
cs
jg
xchg
int
dec
and
in
mov
and
cdq
fmulp
or
xor
mov
int
mov
popa
pop
jno
and
dec
inc
and
and
popa
sar
lods
lea
mov
movs
xor
shl
cmp
lods
pop
mov
cld
dec
fstp
push
mov
ja
out
mov
jbe
mov
mov
mov
clc
xchg
xor
stc
dec
out
or
mov
imul
mov
pop
and
fldenv
and
jbe
xchg
std
dec
int
and
dec
pop
cdq
xchg
sahf
sahf
mov
dec
es
repz
les
mov
mov
lds
xor
pop
adc
repz
fstp
shr
sbb
push
jge
cs
xchg
mov
pop
cs
and
int
inc
add
in
js
add
mov
stos
xor
call
xchg
mov
push
mov
dec
out
cs
pop
out
jge
push
cdq
imul
jb
push
test
int3
cwde
mov
mov
les
or
pop
repz
pop
in
adc
jle
push
sub
ds
inc
mov
sti
sahf
int
movs
(bad)
iret
aad
loopne
mov
cli
mov
pop
mov
cmc
popaw
sbb
sub
jge
mov
inc
adc
ds
ftst
outs
cmps
xchg
sahf
(bad)
bound
int3
std
popa
or
jmp
outs
outs
nop
cdq
int
and
daa
jle
or
outs
push
dec
int
and
js
arpl
mov
adc
pop
mov
shr
inc
sub
mov
outs
inc
sti
xor
test
push
inc
mov
or
cdq
cmp
jge
outs
and
pop
aaa
pop
mov
das
clc
and
mov
cmp
dec
(bad)
jecxz
xor
outs
inc
mov
loopne
mov
out
retf
sbb
pop
into
pop
cmp
mov
lock
lock
pop
aad
mov
pop
loopne
xchg
xor
mov
add
xor
fldenv
adc
into
scas
jp
bound
loopne
scas
jl
add
inc
mov
neg
shl
sbb
neg
sub
outs
cmp
ror
sbb
xchg
jae
(bad)
inc
retf
mov
fld
xchg
ror
(bad)
jnp
sub
cmp
sub
in
sar
call
rcl
fcomip
outs
leave
aad
jae
ret
lods
fninit
retf
xchg
push
stos
dec
inc
jo
xchg
movs
push
dec
stc
lahf
xor
mov
cmp
sti
out
stos
arpl
in
add
mov
repnz
adc
push
hlt
push
mov
jmp
je
movs
jo
inc
add
mov
movs
adc
pop
mov
fisttp
dec
enter
jp
enter
cmp
or
inc
pop
movs
inc
arpl
call
mov
jne
sub
inc
sti
xchg
add
or
inc
js
rol
jae
add
test
popa
adc
pop
mov
cli
pop
enter
pop
adc
call
mov
daa
sbb
data16
ss
jno
fs
cmps
call
stos
fiadd
(bad)
xchg
icebp
dec
fsubr
add
cmp
fst
outs
js
sar
mov
mov
mov
jle
jl
xchg
ds
jle
(bad)
jg
mov
nop
imul
dec
jmp
fld
jp
imul
dec
loope
lods
xchg
cmp
mov
or
ja
adc
out
ss
cmp
xor
pop
mov
push
cmc
cmp
fwait
retf
int
fwait
sbb
enter
ret
jp
(bad)
sub
repz
fnsave
fwait
scas
cmps
lds
xor
dec
or
mov
out
call
pop
(bad)
xchg
jmp
pop
daa
(bad)
shl
sbb
je
mov
loop
sub
mov
ins
repnz
dec
pop
ficomp
test
adc
ins
inc
fwait
leave
push
cmp
pop
imul
adc
out
push
mov
cmps
(bad)
loopne
mov
sub
sbb
bound
test
mov
mov
pop
adc
(bad)
pop
enter
loopne
lds
cmp
ficomp
(bad)
adc
enter
rcr
clc
or
fimul
imul
sbb
repz
adc
rol
jo
mov
mov
dec
sbb
mov
fcom
sbb
pop
xor
lods
sub
sar
dec
mov
mov
jae
(bad)
jmp
(bad)
mov
stos
jns
out
movs
mov
cmp
outs
hlt
loope
inc
sub
(bad)
jmp
xchg
sbb
movs
inc
daa
dec
je
push
mov
test
or
sub
sub
mov
mov
dec
adc
movs
shr
xchg
out
dec
bound
(bad)
dec
mov
add
jg
loop
call
or
xchg
fwait
test
sbb
es
imul
xor
sub
sub
mov
sbb
mov
cmp
rcl
mov
push
cmp
imul
(bad)
pop
jg
xor
xor
addr16
mov
jmp
or
es
ret
add
cmp
add
mov
out
xchg
jp
jecxz
fidivr
xchg
retf
jbe
inc
xchg
fadd
mov
sti
ss
cmp
sbb
push
(bad)
push
fidiv
fadd
add
push
push
enter
add
jns
test
jmp
cwde
aas
mov
popf
aam
std
and
(bad)
cmc
xor
mov
repz
mov
data16
lea
mov
push
jl
rcr
adc
je
retf
mov
sti
fistp
jmp
xor
mov
mov
inc
das
mov
cmps
mov
cmp
fadd
pop
aad
mov
icebp
lock
cmp
arpl
fcomp
pop
mov
jne
ret
sbb
or
pop
mov
inc
cmp
sbb
push
mov
jmp
sti
repnz
mov
ja
stos
idiv
movs
stc
lods
push
popa
cmp
mov
dec
daa
rol
mov
mov
push
sbb
call
xchg
mov
inc
es
cmc
and
dec
pop
fld
xor
mov
retf
cmp
ret
fs
shl
call
sub
daa
or
outs
mov
ret
jg
or
jbe
fucom
aaa
and
(bad)
je
lea
aam
sub
add
xchg
xchg
cmps
lahf
adc
(bad)
movs
mov
and
adc
fdivr
jmp
xchg
jne
ja
xchg
fnstenv
or
jo
es
leave
xchg
or
jae
fdiv
out
jecxz
mov
pop
jecxz
push
outs
adc
aad
rcl
hlt
sbb
adc
dec
adc
lods
aam
outs
call
add
jns
push
fs
enter
test
cdq
loope
arpl
leave
lds
lea
shl
sbb
jl
fdivr
neg
add
cdq
push
pop
out
push
shl
hlt
mov
mov
sub
mov
lock
loopne
(bad)
fcom
retf
xchg
icebp
ficomp
or
push
(bad)
fsub
jnp
add
and
outs
mov
push
add
(bad)
jnp
xor
loope
or
xchg
imul
(bad)
ret
inc
cs
out
aam
jns
jge
inc
int
daa
dec
in
data16
inc
test
out
push
sub
fiadd
xchg
mov
ja
outs
sbb
bound
or
cld
mov
sbb
arpl
cmp
mov
mov
inc
inc
mov
enter
aad
cli
inc
sbb
cdq
xor
imul
fstp
stos
or
movs
pop
jae
stc
clc
cmps
inc
push
push
sbb
add
adc
dec
das
cmp
lods
(bad)
popf
bound
mov
add
dec
push
outs
push
(bad)
mov
rcr
cli
mov
cmps
push
cmp
jnp
mov
xchg
inc
dec
fbld
mov
rcr
retf
mov
jae
mov
ret
stos
sbb
int3
xor
test
rdmsr
dec
ja
xchg
loope
dec
jl
mov
sub
jmp
lea
xlat
shl
push
aaa
mov
jg
push
(bad)
jmp
xchg
je
icebp
fldenv
loopne
or
dec
fisttp
ficomp
push
test
sbb
xor
inc
movs
pop
ror
cmp
sub
sub
push
push
add
dec
jle
mov
sbb
mov
imul
fild
rcl
icebp
xchg
sub
push
xchg
popa
mov
sub
test
or
push
fidiv
int3
pusha
mov
xor
xor
imul
pop
bound
ret
mov
mov
push
lods
sbb
and
and
ret
jnp
cmp
xchg
es
adc
jecxz
fisubr
pop
and
xchg
fistp
out
push
in
dec
mov
mul
test
les
push
and
es
into
mov
int
and
enter
sbb
cs
mov
cmc
cdq
cmc
data16
push
inc
ins
stc
or
xchg
je
and
mov
popa
fdivr
scas
dec
mov
in
in
jle
adc
scas
test
(bad)
pushf
jb
sub
push
pusha
fs
mov
or
push
fisttp
adc
dec
leave
or
lods
and
xor
inc
or
jmp
pusha
jle
push
xor
out
bound
add
pop
xchg
mov
add
sbb
sbb
or
dec
jnp
cmps
xchg
sub
push
addr16
xchg
pop
(bad)
lea
fbld
cmc
xchg
icebp
test
addr16
popa
push
fxtract
lods
add
pop
add
int3
push
inc
inc
dec
out
pushf
aaa
jmp
test
jo
repz
and
das
pop
sbb
jne
xor
(bad)
or
inc
add
xor
add
xchg
mov
adc
std
jl
adc
dec
scas
push
jb
aad
bound
ret
outs
sub
mov
push
ins
and
sbb
pop
sbb
int3
aad
imul
dec
in
int3
dec
mov
stos
push
mov
test
lods
movs
(bad)
sar
dec
lea
loopne
add
pop
dec
out
sar
pop
(bad)
dec
pusha
pop
mov
loopne
xchg
mov
cmp
int3
pop
cmps
mov
mov
or
add
jge
repz
xchg
xchg
sub
outs
test
pop
push
inc
rcr
mov
sbb
pop
mov
mov
(bad)
adc
push
xor
fiadd
aaa
xchg
ins
loop
add
mov
pop
ror
cmp
leave
stos
int
jecxz
pop
sbb
std
add
jecxz
ror
pop
sub
inc
jg
xchg
and
data16
xchg
inc
mov
mov
xchg
int
pop
or
cmp
movs
mov
dec
ins
mov
inc
pop
loope
aas
test
push
ror
rol
mov
pop
les
call
mov
cwde
sbb
sub
sub
cmp
xor
adc
call
out
das
dec
or
push
inc
test
das
in
out
jg
cmp
sub
and
jne
sub
jmp
push
cmp
fwait
sub
loope
sbb
movs
lods
push
shl
push
xor
fcom
or
scas
daa
push
test
lods
sbb
shl
lea
lods
ret
mov
ss
sahf
rcr
jle
je
cmps
cli
dec
mov
and
sbb
scas
xchg
mov
(bad)
pop
cli
aad
dec
movs
mov
dec
mov
popf
jmp
outs
out
adc
mov
jle
mov
xchg
(bad)
cmp
mov
mov
cmps
repnz
or
rcl
sahf
xor
es
lahf
push
std
adc
xor
repz
cmps
inc
cmp
or
sahf
cs
or
fs
ret
mul
push
sbb
push
icebp
xor
dec
pop
mov
cmp
mov
cmps
xor
out
mov
clc
xadd
lahf
jno
mov
stos
push
cmps
pop
add
(bad)
retf
fmulp
dec
mov
or
stc
cmp
xchg
push
addr16
pop
mov
dec
je
mov
(bad)
frstor
cs
sub
pop
inc
dec
and
lods
ds
mov
xchg
push
sti
cmps
cs
jne
jbe
stc
fild
and
(bad)
mov
ins
dec
fild
icebp
(bad)
aaa
fisttp
enter
rol
or
out
mov
dec
jb
ins
or
jnp
push
sti
jbe
rol
pop
sti
add
jmp
cmp
mov
cmp
inc
mov
mov
imul
pop
jne
mov
fmulp
dec
jge
mov
cld
std
daa
sub
mov
(bad)
(bad)
xchg
int
add
stos
mov
out
fcmovnb
mov
je
push
scas
js
icebp
mov
(bad)
xor
and
add
mov
sbb
fimul
popf
cmp
adc
adc
test
sbb
outs
mov
push
icebp
dec
or
or
xchg
out
lahf
mov
mov
dec
pushf
sbb
pusha
ret
sub
add
je
cmps
or
test
idiv
mov
int
xchg
cmp
cmps
mov
pushf
xchg
adc
or
adc
mov
push
test
out
jg
sbb
jno
mov
cli
bnd
jg
jp
pop
fsubp
stos
xor
and
out
mov
fst
fisub
mov
cdq
adc
cmp
sbb
mov
push
and
neg
stc
in
dec
(bad)
shl
pusha
sti
xchg
pop
aaa
xchg
mov
mov
int
mov
mov
push
fiadd
sub
pop
jns
add
jp
in
pop
pop
lods
jns
and
xlat
mov
push
sbb
mov
leave
xchg
sbb
cmps
push
push
sub
or
mov
(bad)
outs
mov
fwait
retf
mov
push
neg
add
add
cdq
jp
xchg
cmp
aad
jmp
js
repnz
inc
das
xchg
inc
mov
stc
int3
rcl
in
call
pop
pop
cmp
xchg
das
aad
outs
pop
das
js
imul
pop
cdq
std
adc
xchg
fcomp
sub
cli
inc
jae
cld
push
inc
push
das
sbb
add
(bad)
mov
fcmovnb
ins
inc
out
or
push
aas
dec
loopne
sub
test
sbb
clc
out
popf
movs
lahf
mov
hlt
or
add
mov
xor
cmp
ficom
lds
fisub
ds
push
dec
fwait
mov
outs
call
cli
cmp
lods
jmp
sti
loop
data16
aam
jmp
(bad)
mov
call
cmp
jnp
or
scas
push
lahf
fnstenv
xor
ret
mov
or
dec
cmp
in
cmp
je
sub
pushf
xor
sbb
mov
stos
daa
repnz
sub
stos
dec
sub
pushf
push
pop
lock
sub
ss
test
cmp
sti
sar
pop
icebp
bound
fwait
cld
jns
mov
add
push
stos
ins
cmp
cs
ins
(bad)
dec
ret
xchg
and
jmp
es
jmp
add
cmpxchg
ins
dec
xor
cmps
aaa
and
jge
lock
pop
or
dec
or
mov
xchg
dec
xchg
adc
in
xor
mov
fcomp
ds
sbb
icebp
and
jg
push
mov
cs
retf
clc
aaa
(bad)
movs
mov
jbe
jge
in
cdq
xchg
push
mov
push
sub
jbe
repnz
jg
test
ins
jns
adc
mov
sbb
xchg
xor
add
and
imul
loop
mov
push
xchg
mov
jle
in
jmp
sbb
popf
pop
xor
or
cdq
mov
mov
aad
scas
out
ret
mov
mov
add
shr
stos
xchg
jl
push
mov
jmp
and
aaa
jecxz
fild
rcl
sbb
xor
(bad)
test
pop
cmp
je
sahf
imul
imul
movs
cli
mov
mov
sub
(bad)
cmp
or
lods
jae
aaa
lds
xor
pop
jecxz
push
xchg
mov
mov
adc
pop
dec
mov
cdq
push
mul
jge
push
mov
jne
aam
addr16
icebp
data16
add
shl
rcr
push
gs
dec
cli
pop
ja
stos
int
das
retf
cmp
pop
inc
jae
in
(bad)
adc
leave
pop
mov
mov
test
sub
push
sbb
dec
and
xor
or
mov
out
and
push
xor
inc
aas
adc
inc
retf
mov
jecxz
mov
push
lahf
jmp
cdq
push
imul
cmp
jmp
xchg
add
mov
mov
add
in
aas
and
daa
icebp
daa
in
jg
fwait
cwde
jle
add
in
push
xor
leave
stos
ficomp
ja
sub
xor
fstp
das
mov
push
es
es
mov
push
sub
xchg
xor
popa
out
fwait
jmp
inc
fwait
shl
inc
cmp
or
push
xchg
cmc
ret
or
outs
dec
inc
outs
repnz
dec
loopne
xor
gs
test
imul
out
movs
jne
add
jmp
div
call
dec
dec
(bad)
call
into
push
cmps
push
popf
jne
jp
pop
shl
xor
dec
push
fnstsw
or
jmp
add
xchg
lock
add
dec
fnstenv
stc
mov
and
ds
pop
lock
stc
or
xchg
pop
mov
movs
cmp
sub
or
xchg
jecxz
and
arpl
js
push
test
or
xlat
jl
fst
sbb
push
bound
jmp
jecxz
(bad)
sbb
and
in
call
or
outs
sbb
scas
xor
inc
in
(bad)
fld
test
add
fmul
dec
popa
sbb
sub
adc
mov
ror
imul
(bad)
cmp
pop
test
xor
movs
sub
mov
test
mov
mov
mov
and
sub
pop
loop
(bad)
pop
pusha
inc
int
adc
int3
and
fcom
sbb
inc
mov
mov
arpl
fs
jae
dec
ficom
out
retf
fnsave
push
iret
mov
xor
(bad)
jg
and
pop
clc
cmps
fld
push
xor
push
jmp
dec
(bad)
jbe
mov
push
mov
sbb
sub
mov
mov
jo
xchg
adc
add
cmp
std
fadd
mov
jl
cmp
pop
mov
sub
(bad)
sar
aam
jg
imul
push
sar
or
jne
das
xchg
mov
cmp
xchg
mov
lods
xor
mov
push
xchg
int3
mov
loopne
xor
test
pop
popf
add
xlat
div
sbb
into
xchg
adc
inc
hlt
mov
mov
fdivr
jmp
sub
je
outs
dec
adc
pop
adc
jnp
push
jns
xchg
sub
out
jae
cdq
push
in
add
int
push
das
jns
and
enter
popa
inc
cs
cmp
sbb
(bad)
fnstenv
out
push
int3
push
(bad)
clc
jnp
cmp
mov
cmp
callw
nop
int3
cmp
imul
test
xor
into
cmps
pusha
clc
push
cmp
ins
stos
test
add
jmp
sti
push
out
jnp
es
cli
icebp
cmps
inc
xlat
into
and
les
cmp
iret
or
pop
adc
dec
lds
inc
mov
add
fwait
push
in
jmp
retf
cmp
mov
int3
mov
xor
adc
mov
lea
(bad)
xchg
dec
pop
jecxz
retf
mov
jnp
loope
rcr
mov
retf
cmp
xchg
dec
mov
dec
iret
adc
mov
push
cmp
call
pop
push
bound
jmp
imul
not
xchg
mov
xor
xchg
adc
xor
dec
std
pop
in
mov
retf
arpl
test
test
fiadd
lock
jbe
or
lds
mov
loopne
(bad)
fisubr
sub
jae
mov
xchg
in
dec
dec
movs
inc
mov
jmp
gs
mov
xchg
push
scas
fidivr
lock
dec
add
fist
or
idiv
push
xchg
fwait
sbb
add
inc
pop
inc
jmp
fistp
fld
push
mov
mov
cmp
arpl
(bad)
mov
outs
scas
xlat
push
xor
jbe
adc
and
inc
rcl
sbb
in
movs
xchg
movs
mov
sbb
sahf
mov
std
push
cmp
sbb
out
add
xchg
or
and
cdq
es
adc
aaa
sbb
mov
pop
mov
mov
cmp
pop
jp
cmps
adc
lea
test
sub
sbb
das
(bad)
call
les
cmps
xor
add
jns
push
mov
jmp
inc
push
xor
sar
mov
pushf
les
fistp
jo
push
mov
and
pop
or
mov
xchg
push
jne
shl
add
mov
pusha
(bad)
ds
xor
ins
icebp
pop
xchg
inc
lock
ret
push
pop
dec
add
xor
jnp
or
out
and
pop
cmps
aas
dec
lds
movs
jg
repnz
push
stos
in
ins
pop
push
mov
sbb
fimul
jg
movs
sub
mov
repnz
std
pushf
sub
jne
ja
frstpm(287
and
mov
push
sbb
shl
ds
rcl
cmps
fisubr
cmp
in
(bad)
inc
push
test
jl
sbb
mov
movs
les
inc
mov
(bad)
mov
enter
mov
and
xchg
mov
repnz
clc
shr
mov
in
retf
cwde
sbb
sar
repnz
ins
push
sub
push
mov
popf
pop
sbb
pop
ins
mov
sti
jae
cmp
xor
sar
es
adc
mov
push
or
xor
jmp
cmps
push
scas
ret
jne
inc
icebp
dec
dec
jg
or
xlat
mov
stc
cs
hlt
pop
iret
out
lods
test
inc
add
jb
jno
jle
sub
fnstsw
add
pop
test
dec
pop
pop
test
push
adc
imul
jle
push
rcl
cdq
(bad)
maxps
outs
sbb
scas
sbb
pop
retf
mov
xor
js
dec
int
pop
call
dec
jmp
pop
mov
(bad)
inc
adc
dec
dec
sbb
call
cdq
ror
adc
mov
jno
adc
mov
push
mov
inc
adc
xor
or
xor
out
call
sub
cmp
jnp
push
cmp
test
cmp
adc
sbb
pusha
pushf
dec
pmaxub
inc
test
scas
mov
add
pop
jp
ja
leave
add
ret
fdivr
out
pop
pop
and
loop
add
mov
push
add
xchg
sub
scas
sub
mov
push
imul
(bad)
lods
mov
(bad)
push
(bad)
fstp
mov
into
out
jnp
xchg
fstp
xchg
push
jp
push
mov
mov
mov
call
test
fadd
les
mov
int
out
adc
test
mov
xor
ret
cmps
ins
cmp
adc
push
cld
jo
repz
dec
test
mov
cli
ret
gs
sbb
ins
mov
das
fcmove
jns
ror
sbb
sub
in
inc
jge
dec
or
(bad)
jle
loopne
fwait
mov
gs
sahf
shr
imul
sbb
cmp
sbb
enter
outs
ds
enter
call
and
dec
cmp
inc
dec
sbb
rol
mov
call
pop
push
adc
pop
jb
xchg
shl
dec
lds
dec
loope
retf
popa
mov
cmp
push
jp
fst
stc
sub
mov
inc
mov
aas
out
adc
(bad)
mov
or
add
jns
add
inc
or
fsubr
fsubr
push
stc
lds
cmp
dec
and
das
cmp
lods
adc
push
push
inc
xor
call
inc
adc
out
mov
dec
leave
sbb
or
mov
cld
retf
call
xchg
sbb
ret
fnstcw
inc
ret
xor
leave
adc
div
or
push
mov
add
pop
(bad)
and
pop
xchg
pop
pop
fcomp
add
daa
sub
and
addr16
sbb
test
sahf
mov
mov
mov
aas
dec
rcl
cmc
sbb
xor
retf
inc
mov
inc
imul
jl
cmp
jno
adc
cmc
xor
jnp
sub
rol
enter
add
iret
xor
(bad)
sbb
retf
dec
jg
stos
push
add
ds
retf
stos
popf
in
rcl
pop
xchg
fcom
and
pop
mov
cmp
dec
imul
(bad)
sub
cmp
cmp
int
push
jno
into
inc
cli
and
and
call
push
xor
xor
adc
xchg
int3
inc
lds
xchg
add
into
daa
mov
fnstcw
mov
mov
popa
dec
ins
cli
add
inc
les
inc
dec
sub
cs
inc
enter
jb
popa
adc
ss
inc
aas
fwait
imul
not
or
jae
das
out
lds
scas
dec
imul
hlt
ds
jno
cli
mov
mov
pop
push
inc
int3
mov
dec
mov
add
inc
jge
adc
or
add
sbb
and
jle
aam
test
mov
adc
adc
movs
jge
and
jmp
(bad)
xchg
jnp
fs
inc
xchg
js
jbe
(bad)
pop
and
fst
xor
add
into
jmp
ss
inc
lds
inc
cmp
jg
movd
xchg
(bad)
mov
sub
repnz
fs
inc
pop
pop
retf
pop
mov
std
sbb
inc
pop
jecxz
jl
push
push
jo
jo
mov
mov
imul
add
hlt
xchg
daa
in
test
sub
pop
es
mov
push
mov
jno
mov
call
movs
ins
(bad)
stos
pop
pop
sub
aas
pop
push
or
loopne
fisub
sahf
mov
ss
mov
jbe
sysenter
shl
add
inc
inc
push
(bad)
addr16
(bad)
cmc
fsubp
mov
push
ss
push
push
mov
add
xchg
out
dec
js
js
sub
nop
int3
ja
sbb
in
(bad)
pushf
(bad)
out
mov
dec
inc
mov
push
push
imul
je
mov
and
fistp
imul
xor
fsub
(bad)
pop
mov
lods
clc
lds
xor
dec
lock
mov
push
xor
dec
xchg
inc
int
push
mov
adc
fwait
sti
jae
sbb
loop
push
ds
movsx
jp
ds
repz
int3
mov
push
mov
loopne
stos
adc
hlt
das
aam
ror
int3
adc
call
cwde
nop
cmp
shr
fwait
mov
mov
and
sub
add
(bad)
push
or
add
stc
xor
movs
and
lds
push
push
shl
mov
(bad)
test
sar
pusha
mov
inc
cld
pusha
fild
mov
nop
jl
xlat
stos
mov
mov
pop
repz
mov
inc
add
fidiv
xlat
out
sti
mov
push
js
movs
inc
cmp
jmp
adc
out
or
push
jo
shl
addr16
ficomp
jg
pop
push
jmp
sti
sub
or
into
cmp
in
out
cld
push
jl
lods
lods
in
stos
jo
jne
test
daa
fcomp
int3
test
pusha
scas
ror
sahf
inc
lahf
out
xchg
jg
das
jo
mov
call
jecxz
mov
xchg
sub
leave
cmc
movs
out
iret
fstp
xchg
loopne
push
and
js
xchg
dec
and
jecxz
call
mov
ss
mov
in
cmps
loope
xor
sub
cs
add
pop
gs
mov
jne
pop
add
aam
xor
xchg
into
daa
call
jo
mov
ret
je
iret
retf
adc
rcl
aam
and
lods
cmc
in
mov
in
inc
adc
fsubr
popw
pop
rcr
push
enter
rcr
jne
(bad)
call
fmul
pop
outs
ins
add
lahf
test
mov
jno
inc
cmps
cld
stos
or
mov
out
inc
fcomp
xchg
push
jne
adc
push
cmps
or
jmp
dec
aaa
sub
ss
int
in
adc
call
bound
dec
out
ror
sbb
sti
push
mov
sbb
pop
mov
adc
adc
outs
(bad)
xor
jns
inc
or
xor
js
pop
out
cld
lods
cld
dec
in
adc
xor
jb
jmp
outs
test
xchg
mov
out
popa
add
push
ins
add
iret
rcl
jbe
aaa
bound
add
adc
imul
out
pop
xchg
xchg
retf
cmp
ror
lea
(bad)
adc
sbb
mov
imul
and
mov
outs
mov
int3
sub
cmps
aad
test
js
or
adc
dec
mov
cmp
or
int3
les
sar
sub
push
mov
xchg
pop
xchg
pop
push
lock
add
lahf
push
mov
and
(bad)
(bad)
pop
rcr
loop
cmp
vpsrad
sahf
ja
fnstsw
xor
mov
push
js
push
aad
jl
fs
out
daa
outs
xchg
mov
sbb
xchg
xor
and
test
push
fwait
or
jo
mov
xchg
js
mov
push
in
fldenv
bound
mov
out
adc
sbb
cmps
out
or
fist
mov
jo
fs
pop
sub
adc
add
mov
ds
les
pop
jmp
hlt
pop
(bad)
mov
add
retf
gs
shl
xchg
into
hlt
in
enter
shl
lock
jns
retf
add
and
mov
and
sbb
xchg
jno
xlat
mov
repz
mov
xchg
(bad)
and
daa
jecxz
psrlq
pop
gs
icebp
lods
icebp
push
sub
cld
mov
xchg
ret
call
daa
(bad)
xor
adc
mov
mov
movs
aas
out
mov
dec
sar
mov
or
jmp
dec
lock
and
aas
mov
dec
retf
pop
xor
ins
dec
sbb
mov
push
mov
cmp
ss
inc
ins
hlt
(bad)
je
or
cmp
pop
hlt
jne
mov
xchg
adc
cmp
inc
dec
ror
xchg
add
test
test
or
das
jb
adc
pop
data16
popa
repz
(bad)
xchg
sub
mov
stos
enter
cmps
cli
inc
cmc
cmps
movs
in
sbb
cmp
sbb
ins
mov
or
sbb
push
pop
(bad)
dec
adc
imul
in
jae
les
sub
cli
jecxz
nop
outs
test
idiv
sbb
dec
push
les
retf
mov
mov
iret
data16
aas
idiv
adc
xor
xor
(bad)
idiv
out
(bad)
push
frstor
mov
std
lock
mov
mov
sbb
adc
and
fsub
(bad)
(bad)
and
inc
xchg
shl
cld
out
dec
sbb
push
loop
jmp
les
leave
push
jle
or
dec
outs
cmp
cmps
arpl
sbb
sub
stos
xchg
call
scas
push
dec
pop
std
out
fst
sub
leave
jmp
cmp
mov
test
fdivr
xor
hlt
loope
sub
pop
push
mov
(bad)
ffree
neg
inc
lea
dec
push
mov
movs
mov
pusha
jbe
imul
xchg
sbb
hlt
sbb
jmp
add
rcr
adc
mov
cmp
adc
stos
mov
jnp
pushf
in
imul
(bad)
repnz
and
pop
ror
pop
loope
pusha
sub
addr16
push
lods
xchg
xchg
mov
les
xor
imul
dec
mov
cmp
ins
xchg
ret
pop
ds
and
jp
ja
ffreep
sub
add
fcomp
sahf
jb
test
add
stos
pushf
mov
jae
rol
xlat
inc
push
dec
cli
xchg
mov
push
sub
lds
jg
push
icebp
push
rcl
xor
sbb
fwait
popf
gs
fisub
xor
in
dec
dec
mov
pop
dec
sbb
sbb
sbb
jns
movs
and
xchg
sbb
sub
pushf
aam
dec
repnz
mov
add
inc
in
xchg
repnz
adc
(bad)
xchg
outs
xor
inc
pop
test
fidiv
jns
dec
daa
mov
(bad)
xor
jmp
nop
(bad)
xchg
in
imul
inc
fadd
and
pop
bound
int
or
loope
shl
shr
gs
js
in
addr16
jle
fiadd
pushf
inc
idiv
push
or
ds
sti
dec
lahf
push
je
mov
push
dec
sar
fcomp
mov
aad
jp
xlat
popf
pop
sub
sbb
fcomi
sub
enter
sbb
in
data16
int
iret
pop
jns
fnsave
mov
mov
push
xchg
xchg
ja
and
xchg
inc
jb
mov
pusha
mov
(bad)
fimul
jno
mov
add
shl
adc
or
test
sbb
retf
push
mov
mov
adc
mov
adc
ffreep
add
sub
adc
xlat
into
fmulp
stc
and
inc
sbb
call
push
inc
ins
mov
rcl
fild
les
push
pop
or
(bad)
mov
ret
and
and
lahf
lods
cmps
mov
es
mov
loopne
(bad)
pushf
xor
mov
push
push
push
dec
push
mov
into
jb
lods
cmp
mov
fwait
push
mov
cwde
sub
(bad)
iret
push
dec
rcl
inc
inc
inc
inc
dec
sahf
fucomi
mov
loop
in
push
wrmsr
daa
mov
dec
inc
inc
and
mov
scas
cli
or
pop
sub
jno
arpl
push
push
test
nop
pop
mov
test
cmp
inc
jecxz
call
dec
adc
gs
dec
xchg
xor
xchg
pop
std
pushf
mov
in
sbb
or
adc
outs
fbstp
push
out
adc
push
adc
cmps
adc
and
inc
in
lock
cs
mov
into
push
nop
test
mov
jle
push
xor
dec
sub
loope
fisubr
and
and
mov
xor
jecxz
and
dec
push
push
cmps
xchg
xor
xchg
push
daa
neg
xor
mov
popa
push
popa
loope
cpuid
push
popf
imul
sub
adc
push
add
sbb
adc
dec
jge
lahf
retf
sti
lea
xor
xrelease
xor
xor
sub
jmp
out
jbe
sbb
mov
add
movd
movs
lock
not
and
ds
cmps
mov
cmps
xchg
ror
and
jmp
mov
mov
pcmpgtw
(bad)
dec
xchg
xor
jo
inc
lods
bound
xlat
in
shr
mov
aas
out
inc
out
mov
cmps
outs
movs
ja
cs
and
xchg
stos
outs
pop
frndint
jecxz
(bad)
adc
(bad)
aaa
xlat
or
inc
imul
shl
mov
test
pop
mov
(bad)
stc
jg
sub
cld
sbb
icebp
popf
or
and
push
js
in
popa
hlt
outs
mov
ret
repnz
jge
ds
sub
xchg
jae
push
pop
adc
outs
or
lahf
xor
mov
xchg
lea
mov
imul
test
lds
idiv
out
dec
mov
dec
ret
and
call
fstp
aas
push
push
sub
fisttp
push
sbb
pop
sar
pushf
movs
fdiv
jne
lock
mov
xchg
ins
sub
sub
cmps
cdq
in
cdq
lods
xchg
and
inc
push
dec
das
sbb
and
xacquire
mov
(bad)
loope
repnz
xor
lock
stos
push
in
inc
adc
add
or
popa
loopne
dec
pop
sbb
cmp
in
int
test
enter
lods
das
cld
imul
sub
xor
jo
push
xchg
rcr
mov
mov
aaa
and
ins
cmps
jo
cmps
std
cmc
xor
dec
pop
xor
and
cmp
mov
mov
pop
inc
(bad)
mov
jl
cld
call
(bad)
cli
xor
pushf
jno
repz
sub
out
or
and
stc
call
ret
cmp
xor
sti
imul
mov
or
mov
cmp
cld
cli
bound
int
dec
dec
xchg
mov
dec
adc
lods
addr16
mov
or
xor
xchg
dec
and
aad
cmps
jno
sub
or
sub
and
pop
xchg
add
xchg
push
dec
movs
jno
sub
call
mov
pop
mov
pop
cwde
mov
data16
adc
inc
adc
sar
xchg
inc
xor
or
jecxz
lods
call
cmp
imul
(bad)
(bad)
call
or
stc
and
mov
inc
out
pusha
(bad)
pusha
(bad)
scas
sbb
jbe
jnp
mov
jb
pusha
sbb
clc
cmp
sub
aad
mov
push
jg
icebp
jo
pop
lods
jo
add
mov
movs
sub
in
jp
and
mov
inc
out
icebp
into
sub
mov
ja
lahf
adc
jne
repnz
xchg
sbb
rcl
fidivr
sbb
(bad)
adc
fild
mov
inc
sub
jnp
jmp
loop
push
xor
pop
xlat
pop
sbb
mov
dec
cmc
rcr
pop
pop
mov
rcr
aam
or
xor
and
mov
mov
xor
add
cmc
loop
sbb
xchg
retf
or
scas
ins
xor
fmul
mov
mov
pop
mov
push
jge
cmc
and
fisub
pop
aam
ret
es
sbb
stos
mov
and
mov
movs
mov
(bad)
lock
daa
loope
or
adc
pop
call
in
cmc
adc
jnp
clc
or
xlat
push
ficomp
cmp
hlt
push
xor
xchg
inc
dec
out
outs
fsubr
ret
or
daa
bound
repnz
sar
jg
stos
xor
pop
mov
jbe
(bad)
and
cdq
retf
and
sbb
icebp
jge
inc
push
or
inc
sbb
(bad)
aam
cmp
xor
pop
call
xor
inc
push
sti
pop
pusha
pop
push
inc
ins
sub
test
and
mov
mov
adc
jo
fidivr
dec
jmp
and
mov
movs
loope
rcl
add
data16
(bad)
mov
jnp
jne
mov
neg
jb
ror
lds
fwait
(bad)
fs
stos
fdiv
stos
xchg
adc
imul
mov
test
inc
ret
sub
(bad)
jle
popa
dec
push
out
xor
push
sub
sti
test
inc
jbe
mov
mov
je
dec
mov
out
outs
push
imul
das
push
sub
sti
push
push
dec
adc
call
sar
cmp
(bad)
out
jmp
cmp
movs
leave
test
push
xor
pop
push
and
cmc
sar
pop
cmp
jnp
pop
add
dec
sbb
ins
es
inc
cdq
or
sbb
pmuludq
scas
mov
loop
mov
add
outs
mov
int3
addr16
pop
jge
mov
or
sbb
push
sub
ds
std
es
adc
cmps
fidiv
test
sub
pushf
xchg
out
int
push
mov
test
push
sub
add
sbb
test
xchg
jge
jg
out
mov
push
call
jo
lods
inc
or
and
jns
jo
cmp
dec
jge
sub
je
imul
mov
je
push
cld
fdivr
and
sub
pop
in
jo
(bad)
lock
lahf
and
jns
adc
loopne
dec
mov
xor
add
call
jns
mov
cld
scas
clc
mov
pop
cmp
xor
outs
add
mov
mov
cld
mov
adc
into
pop
push
in
in
daa
adc
iret
js
call
loopne
push
xor
sbb
popf
sbb
call
pop
xor
aad
mov
loope
ror
(bad)
mov
jecxz
lds
popa
inc
xor
add
xor
lock
push
(bad)
je
pop
push
bound
lods
sti
leave
es
xchg
push
mov
nop
fmul
jmp
inc
(bad)
iret
aaa
in
mov
inc
(bad)
jb
xchg
sbb
push
cmp
and
and
pop
mov
mov
mov
outs
sbb
xchg
pusha
popa
fild
bound
iret
ret
pop
iret
mov
jno
cwde
nop
push
push
jb
test
mov
ins
shl
add
inc
jbe
pop
lahf
fs
test
(bad)
mov
add
retf
nop
stos
mov
pop
inc
pop
mov
jne
stos
jno
cmp
pop
(bad)
cmp
cmovge
mov
xchg
icebp
dec
int
mov
in
sahf
xchg
dec
rol
es
sbb
add
fdivrp
cld
inc
jae
popa
mov
nop
jmp
pop
out
mov
adc
out
das
jmp
cld
ja
xor
mov
mov
inc
sbb
ret
push
ins
jne
mov
test
xchg
add
rcr
std
inc
mov
jecxz
test
lods
and
inc
pushf
adc
lods
xchg
lahf
xor
cmps
sub
xchg
retf
add
mov
stos
push
shl
or
repz
inc
(bad)
lock
or
fist
pop
mov
dec
pop
(bad)
pushf
mov
and
popf
stos
or
iret
stos
mov
dec
lods
inc
popa
mov
cmp
fimul
cmp
push
mov
xchg
pop
(bad)
loop
ins
mov
out
push
push
outs
fcomp
add
jo
cli
or
inc
out
in
sbb
add
repz
mov
jb
mov
lods
gs
jmp
mov
xor
or
xchg
jb
and
mov
es
xor
imul
xchg
xor
jmp
mov
(bad)
iret
xor
dec
fst
sub
jl
pop
je
mov
push
je
shl
xchg
rcl
or
std
sbb
adc
gs
mov
fild
adc
mov
mov
xchg
ror
mov
pushf
shr
fnstenv
and
add
pop
retf
mov
jns
test
int3
das
push
add
or
mov
sbb
add
jnp
ja
test
dec
aaa
cmps
(bad)
jae
mov
lods
mov
mov
inc
mov
arpl
xlat
fs
add
add
add
mov
pop
push
cmp
out
mov
cmp
mov
lahf
xchg
mov
imul
jmp
hlt
ret
cli
add
push
call
movs
mov
or
adc
retf
mov
mov
pop
cmp
shl
mov
mov
ror
lods
mov
and
xor
popf
xchg
and
sti
and
(bad)
rcr
data16
test
push
mov
xchg
hlt
xor
loopne
retf
pop
cdq
xchg
cmp
xor
test
jns
out
xor
sub
nop
pop
inc
lds
mov
pushf
mov
xlat
mov
and
jae
cmp
scas
addr16
mov
xor
cmp
jmp
lds
dec
dec
push
packuswb
cld
fsubp
jg
push
leave
call
mov
test
mul
sub
dec
mov
mov
add
cmps
cmp
jle
jp
icebp
fcmovnu
lea
and
mov
icebp
mov
aaa
bound
adc
push
(bad)
mov
xchg
sbb
mov
movs
xor
ins
sub
les
jb
add
imul
cld
leave
add
jp
jmp
call
jp
(bad)
jo
xchg
sbb
and
dec
jb
jbe
xor
repnz
jne
icebp
movs
aaa
sub
jno
imul
xor
fs
pop
ret
test
adc
and
pop
sahf
sahf
dec
pop
(bad)
cli
xor
add
stos
add
sahf
iret
jg
or
aaa
aaa
mov
mov
mov
call
jge
mov
add
mov
loope
loop
mov
gs
inc
scas
mov
popa
pop
sub
ret
aam
pop
das
adc
add
daa
push
inc
dec
test
out
or
or
pusha
pop
mov
rcl
jge
fild
in
mov
imul
xchg
mov
mov
mov
dec
mov
bound
nop
cmp
inc
repz
mov
mov
movs
retf
xchg
sbb
mov
repnz
aas
(bad)
dec
sub
andnps
cmc
sub
sbb
imul
in
mov
jmp
lea
shl
mov
inc
arpl
in
mov
adc
mov
inc
jns
sub
sub
cmp
mov
dec
push
lahf
retf
jp
cmp
sbb
in
imul
mov
out
adc
(bad)
out
movs
arpl
retf
adc
mov
and
lods
pop
add
rcl
mov
ss
dec
cli
fisttp
jne
add
arpl
call
mov
mov
cmp
ja
inc
pop
add
cmp
inc
inc
lahf
xor
cmp
repnz
mov
loopne
(bad)
pop
pop
fisubr
repnz
add
sub
fs
das
xlat
imul
mov
push
movs
test
fisub
retf
push
xchg
loope
pop
(bad)
shl
mov
and
jo
jmp
test
in
ds
scas
inc
fimul
imul
test
or
xor
and
or
or
push
xor
xor
pushw
jl
push
movs
inc
out
cmps
push
inc
xor
mov
jns
push
xor
scas
inc
fsub
push
mov
in
jp
shr
int3
sbb
jns
lock
xor
pop
cwde
in
xor
stos
test
movs
pop
retf
inc
into
dec
sbb
loop
fld
sar
lods
jo
in
lods
fcom
call
xchg
and
xor
ss
cmp
(bad)
dec
outs
and
popf
and
mul
inc
dec
and
sub
movs
pop
mov
mov
cld
mov
push
loop
(bad)
pop
xchg
cmps
in
mov
scas
in
imul
pop
call
or
dec
xor
in
xor
push
out
ds
repnz
ins
ror
pop
(bad)
mov
inc
callw
enter
rcl
and
sbb
lahf
adc
ins
and
inc
lods
adc
adc
dec
out
xor
repnz
sub
outs
push
and
pop
retf
(bad)
push
push
out
test
jo
pushf
jne
lds
aas
iret
in
out
cmp
jnp
call
shl
inc
xor
ret
pop
test
jge
inc
in
jne
sub
jecxz
daa
je
aas
pop
das
add
movs
dec
or
pop
jle
stc
push
es
cmp
(bad)
sbb
push
adc
jl
mov
jg
pop
jmp
adc
or
pusha
cwde
xlat
push
mov
mov
xchg
pop
das
ja
or
mov
ds
clc
pop
frstor
out
jl
rcr
leave
popf
data16
xchg
inc
leave
sbb
dec
jno
fs
leave
cmps
inc
sbb
inc
inc
sub
out
xchg
cmp
jb
sub
adc
mov
(bad)
sub
pop
inc
sar
gs
xchg
test
jp
add
sbb
xor
add
fdiv
mov
inc
or
icebp
cmp
test
fdiv
leave
or
pop
ret
jb
ret
jecxz
mov
ja
(bad)
retf
ret
jmp
jmp
sub
inc
je
or
loope
in
(bad)
mov
jmp
jg
push
xchg
inc
xchg
ds
adc
adc
mov
add
std
cmps
jmp
movs
adc
aaa
cmp
cwde
xchg
dec
pop
mov
outs
mov
test
push
cmp
adc
pop
pop
xor
jg
push
dec
sar
call
mov
ins
je
xchg
sub
pop
test
xchg
outs
into
clc
mov
lock
adc
cld
sahf
cs
and
dec
pop
or
inc
xor
jne
sbb
jne
(bad)
cwde
jno
mov
test
scas
pop
loope
loop
sar
push
sbb
add
test
push
cli
bound
mov
inc
sbb
sti
in
fcmovb
adc
lahf
mov
adc
mov
stc
adc
stc
or
inc
pop
stos
test
push
rcr
sbb
adc
sbb
pop
sbb
stos
cmc
pop
pop
aaa
cmps
dec
xor
cmps
pop
adc
ret
test
mov
jg
(bad)
out
loope
sub
fild
sbb
(bad)
inc
dec
ret
mov
add
ror
xchg
add
mov
imul
mov
clc
cmp
ror
retf
rcr
sti
mov
dec
push
and
cmps
and
lahf
(bad)
jmp
inc
mov
inc
out
jb
dec
and
push
repnz
(bad)
in
popf
popf
lea
inc
arpl
test
ror
mov
jle
add
outs
pop
sbb
sbb
dec
pop
jl
add
lods
dec
inc
xchg
daa
xchg
sbb
jo
gs
sub
int3
sub
jae
inc
data16
sub
aam
push
cmp
or
icebp
addr16
mov
aad
push
inc
ror
adc
mov
add
xchg
out
adc
mov
or
dec
fild
ret
jmp
cmp
and
mul
push
ror
es
xchg
int
clc
test
jnp
lds
pop
jbe
pop
ss
push
and
loopne
pop
out
cwde
xor
sub
xchg
fnsave
mov
jge
mov
shl
sub
fs
sub
push
adc
mov
cmc
push
in
loopne
inc
jnp
test
pushf
xchg
sbb
xchg
pop
push
out
test
in
inc
outs
stos
pop
mov
fwait
pusha
fisub
out
pushf
into
jl
int
jmp
mov
(bad)
imul
es
fcmove
cmp
push
push
push
and
enter
jo
push
mov
xchg
mov
xor
xor
mov
lods
test
xchg
xchg
fwait
xor
mov
push
mov
jp
arpl
sbb
mov
or
mov
xchg
icebp
jg
outs
push
and
sbb
sbb
fidivr
paddq
jp
popa
jmp
loopne
std
or
ins
jb
mov
(bad)
cmp
inc
inc
clc
rcl
adc
arpl
retf
and
or
jg
xor
out
add
push
aas
xor
ds
add
fcomp
idiv
xchg
into
(bad)
mov
fbstp
sub
sbb
adc
icebp
(bad)
dec
xchg
mov
dec
mov
fisubr
and
pop
enter
inc
push
sbb
shl
push
pop
imul
sub
jne
les
mov
mov
test
jmp
test
cmp
xchg
loop
es
mov
cli
icebp
pop
je
std
pop
inc
(bad)
mov
sahf
sbb
pop
repnz
popa
and
jns
fistp
cmp
push
or
int
stos
or
lods
mov
push
pop
mov
mov
lock
in
jmp
scas
test
retf
lock
inc
dec
cmp
dec
movs
mov
ins
enter
or
mov
and
xor
ins
pop
push
mov
(bad)
hlt
push
aaa
(bad)
std
call
imul
jle
jo
clc
xchg
jo
mov
cli
mov
sbb
sub
push
stc
pushf
xchg
push
shl
inc
inc
sbb
cwde
je
xchg
sbb
xor
pop
and
ins
adc
shl
(bad)
(bad)
adc
out
push
aas
xor
xchg
adc
or
test
pushf
shr
pusha
mov
mov
repz
pusha
or
xor
in
(bad)
pop
push
cmp
fldenv
stos
inc
push
shr
xchg
jmp
mov
outs
pop
sti
scas
call
fsubr
add
ins
rol
int
outs
test
push
dec
xor
pop
dec
not
fs
cmp
sub
or
inc
push
jne
lods
mov
ja
inc
repnz
cmps
rol
fld
mov
pop
call
hlt
adc
mov
mov
cdq
and
cmp
and
je
inc
add
movs
lods
cmps
dec
out
mov
lods
repnz
adc
dec
jg
jno
inc
jno
add
push
or
adc
jg
and
(bad)
mov
scas
mov
test
repnz
scas
mov
mov
add
mov
test
mov
jg
mov
idiv
addr16
imul
movs
cmps
or
(bad)
jmp
aas
adc
enter
dec
inc
jg
ja
push
(bad)
adc
pop
dec
fcmovu
addr16
adc
das
outs
std
mov
loope
pop
(bad)
sbb
es
xchg
sbb
sbb
fistp
and
rol
jb
into
inc
es
stos
popa
add
pop
mov
add
shl
pop
cmp
lock
xchg
lods
xor
push
clc
adc
cmp
lods
retf
mov
das
jp
daa
sbb
dec
pop
aaa
ss
cmps
cld
lds
inc
jne
aad
pop
je
inc
out
sbb
or
xor
xor
jl
xchg
mov
push
xchg
xor
lea
sti
fs
fdivr
mov
rcr
test
xchg
jae
or
outs
mov
in
push
inc
sar
out
jmp
push
mov
mov
mov
or
fs
xchg
dec
sub
clc
pop
adc
(bad)
sbb
fsqrt
adc
xor
rcl
sbb
xchg
or
xchg
inc
adc
mov
mov
loopne
mov
push
test
inc
push
pop
sub
sub
xor
xor
fadd
mov
pop
adc
xor
imul
pop
idiv
sbb
bound
test
mov
cmp
and
sbb
or
add
or
or
and
popa
repz
aas
dec
or
sbb
iret
sar
add
xchg
lock
retf
sub
pop
mov
repz
pop
(bad)
push
pop
jmp
mov
fs
(bad)
mov
and
jo
or
xchg
sub
loope
out
inc
adc
icebp
out
jg
loope
outs
push
ret
fcom
sbb
cmps
not
fstp
xchg
outs
xchg
mov
ins
bound
pop
stc
jne
ds
pusha
movs
dec
fwait
jne
pop
shl
add
cmc
call
or
xor
mov
mov
push
push
dec
xchg
ja
add
pop
pusha
and
and
inc
(bad)
popa
fdivr
jecxz
popa
ror
mov
push
(bad)
(bad)
mov
aaa
sub
pop
mov
and
arpl
retf
mov
in
les
adc
jp
mov
pop
jl
push
and
fmulp
arpl
movs
int3
inc
push
hlt
pop
(bad)
xor
xchg
sti
scas
mov
rcl
xchg
outs
mov
mov
cmps
pop
leave
mov
(bad)
cmp
mov
sbb
cmp
mov
sub
push
rcl
or
mov
movs
inc
test
cmp
ds
js
les
test
mov
loop
pop
xchg
ror
nop
shr
add
fwait
xor
sub
mov
es
popf
sub
aam
add
rcr
(bad)
neg
dec
mov
outs
pop
popa
sub
imul
pop
lahf
inc
repz
push
movs
fadd
loopne
je
xchg
movs
mov
and
jl
popa
cmp
daa
push
mov
sub
cmp
retf
pop
pushf
out
enter
pop
fcomi
call
lods
add
xor
shl
add
cmp
sbb
retf
rol
lock
imul
sbb
loope
or
pop
aad
mov
inc
cmp
mul
test
mov
cmp
fisubr
pop
jg
(bad)
shl
loope
imul
scas
lods
sbb
das
scas
hlt
cmp
sub
repz
xchg
scas
jle
inc
jecxz
sbb
mov
lea
xchg
pop
jp
lods
cli
inc
pminub
push
retf
ins
mov
repz
ins
int3
sub
std
push
sbb
and
icebp
pop
retf
xchg
push
sub
jmp
xchg
lods
movs
pop
push
bound
psubusw
loope
jp
push
ret
data16
sti
push
and
test
jno
inc
jp
mov
fstp
popf
cld
jp
es
stc
xchg
push
and
repz
cmp
sub
and
and
dec
adc
cmps
inc
push
mov
xchg
mov
jmp
pop
or
imul
je
gs
aaa
dec
retf
jmp
push
shl
xor
cmp
xor
out
test
call
cmp
xchg
xor
cld
iret
mov
push
pop
iret
mov
sub
pushf
dec
dec
data16
mov
rcr
sbb
xchg
ret
fidivr
push
ret
test
push
cmps
push
mov
rol
push
mov
gs
push
inc
add
mov
cmp
std
fwait
dec
cld
mov
sti
bound
clc
and
jne
and
(bad)
push
mov
popf
cmp
ret
paddsb
mov
xchg
jl
test
cmps
xchg
and
movs
mov
fstp
mov
hlt
(bad)
out
push
ror
pop
adc
std
mov
es
ins
das
in
mov
cmps
outs
inc
pop
sbb
cmc
inc
aad
cld
hlt
lahf
fnstenv
sbb
jns
add
mov
pop
push
pop
ja
stos
outs
jmp
jne
adc
pop
in
dec
or
scas
sub
call
mov
ror
mov
mov
push
xlat
xchg
sbb
iret
lahf
fs
ror
gs
mov
mov
sti
and
push
popf
push
lods
das
mov
lea
sbb
and
inc
push
push
inc
ret
ins
xor
adc
mov
sub
mov
inc
(bad)
lahf
cdq
push
ss
fsub
mov
mov
sar
inc
xchg
pop
gs
retf
loope
ficom
push
stc
loopne
xchg
and
lock
jae
inc
test
cmp
fidivr
adc
ret
xor
inc
cmp
call
xchg
xchg
push
frstor
pop
pop
xor
push
inc
lock
aam
in
push
sub
inc
mov
out
push
stos
jecxz
lods
and
or
pop
sub
jb
xchg
cld
mov
sbb
jbe
sbb
pop
xchg
sbb
cmp
push
stos
rcr
xor
outs
mov
loop
test
mov
jmp
lods
sbb
jbe
or
fist
adc
dec
lods
and
shl
(bad)
jecxz
in
fsub
jmp
push
dec
in
out
mov
pop
(bad)
pop
bound
loope
ret
cmp
mov
sbb
(bad)
addr16
stos
pop
adc
aad
jnp
shrd
call
jl
lahf
cmps
mov
jb
in
pusha
xor
or
pusha
pop
ds
popf
mov
jg
sbb
or
mov
or
cmp
xor
or
int
xor
jno
loop
enter
(bad)
xor
mov
pop
dec
push
mov
fsub
les
and
inc
inc
and
loopne
lods
inc
mov
push
loop
call
mov
sub
into
pop
je
sub
sbb
xor
cmp
mov
adc
std
xchg
test
test
into
out
mov
(bad)
cmc
pop
popa
pop
jle
add
ins
call
lahf
es
dec
cmp
js
jg
and
dec
out
sub
lahf
pusha
mov
fcmovb
adc
adc
mov
pop
aas
mov
out
sbb
push
imul
sahf
mov
shl
ret
in
mov
outs
mov
adc
aas
push
adc
rep
popf
mov
jns
mov
sbb
xchg
outs
cwde
jbe
loopne
dec
aad
lods
jg
bound
cmp
push
push
pop
call
out
sbb
jns
(bad)
mov
inc
xor
dec
jecxz
outs
inc
stos
shr
cmp
outs
imul
and
push
inc
push
rcl
push
int
jae
cmp
vcvttps2dq
aaa
aam
pop
imul
or
in
(bad)
adc
das
mov
out
push
ja
xchg
loope
daa
dec
push
pushf
imul
dec
jns
or
dec
inc
lahf
or
rol
sub
xor
ds
mov
ins
pop
iret
mov
rol
and
pop
dec
pop
leave
xchg
(bad)
xchg
sub
dec
dec
int3
ja
mov
out
mov
and
xchg
int
pop
jo
inc
mov
leave
cmps
push
inc
popa
out
jp
imul
lock
mov
push
mov
dec
inc
fild
dec
daa
sub
lahf
mov
and
call
popa
outs
sub
xchg
inc
sub
mov
sub
mov
das
nop
jge
(bad)
sub
cs
in
(bad)
xor
xor
js
outs
xor
(bad)
daa
jmp
pop
push
cld
cmp
mov
fs
add
div
mov
fnsave
or
push
add
movs
jmp
sub
jp
xor
mov
out
pop
(bad)
mov
pop
fiadd
nop
mul
ror
and
jecxz
jno
mov
test
call
test
shr
pop
aad
(bad)
fild
mov
mov
test
pushf
gs
mov
mov
mov
ja
aad
stos
push
jg
lea
sahf
xchg
ss
mov
(bad)
lods
mov
or
repnz
adc
outs
cmp
dec
lds
add
cmp
into
dec
test
push
scas
clc
add
xchg
in
or
mov
outs
sbb
sbb
sub
cmp
mov
std
push
xor
inc
mov
ja
jg
cmc
loope
idiv
dec
test
ja
sbb
dec
or
push
out
and
std
lds
push
jg
dec
push
sub
adc
lods
xor
adc
xlat
mov
mov
aad
mov
dec
push
sub
leave
sub
add
addr16
or
jl
adc
xchg
lds
pop
inc
aad
push
bound
jmp
fldenv
jge
test
dec
xor
adc
addr16
mov
and
dec
mov
xor
lds
or
mov
inc
(bad)
aaa
and
scas
hlt
jg
je
dec
nop
clc
mov
mov
add
ds
lods
sbb
add
js
pop
stos
(bad)
adc
xor
xchg
sub
add
loope
sar
sub
lods
push
pop
add
pusha
icebp
hlt
movs
frstor
cdq
fs
cs
sub
cmps
ret
pop
cmp
std
(bad)
retf
stos
pushf
sbb
pusha
mov
daa
lods
fwait
ja
cli
jae
loope
in
adc
push
ja
and
mov
popf
in
inc
mov
daa
cdq
adc
or
sbb
popf
mov
out
lods
xchg
out
movs
scas
fs
stc
dec
sub
jge
xchg
je
shl
jge
and
nop
xor
push
jmp
adc
std
pop
not
xchg
scas
jbe
pop
jmp
push
data16
mov
cld
(bad)
fcom
dec
sbb
retf
xchg
fwait
(bad)
stos
or
dec
mov
rep
and
rcl
mov
pusha
mov
scas
jl
cmps
lds
rcr
inc
xchg
push
ret
sbb
inc
aaa
jns
mov
jmp
enter
mov
fadd
sbb
lods
add
inc
xor
cmc
jne
test
loope
sub
scas
and
xor
fcmove
adc
fcmovb
xchg
pop
psrld
pop
mov
sti
ret
shl
out
jle
aaa
mov
cmps
fisttp
idiv
xor
xchg
sub
ror
mov
sbb
gs
cli
push
(bad)
lods
jno
jb
adc
xchg
xchg
cli
push
lods
and
mov
stos
sub
clc
outs
mov
loop
push
mov
inc
fst
jecxz
mov
fwait
sub
adc
push
sub
leave
mov
and
aam
repz
pop
inc
pop
outs
xchg
data16
lds
adc
jmp
inc
push
cwde
xor
fcmovne
icebp
ins
push
popa
mov
dec
inc
cmp
xchg
fwait
loop
fstp
in
sahf
retf
jmp
sahf
movs
mov
add
mov
push
loope
in
xor
dec
(bad)
adc
fs
jl
sti
jecxz
add
push
xchg
or
adc
fisub
xchg
(bad)
loopne
call
fwait
enter
call
in
or
dec
retf
sbb
je
sub
xor
cld
movs
pop
repz
pusha
or
dec
inc
add
ds
outs
repz
xor
xchg
pop
out
xor
in
push
adc
ret
dec
xor
inc
pop
retf
fldenv
pop
push
push
cmps
stos
cmp
ret
jp
in
add
ror
cmp
jle
xor
or
sbb
shl
xlat
jge
xor
sbb
arpl
in
inc
or
cmp
pushf
movs
and
xchg
adc
repz
add
pop
sbb
dec
cmc
lods
mov
(bad)
rol
int
ficomp
les
mov
or
stc
jle
cmc
mov
aas
sbb
sar
cmp
jecxz
ins
and
test
mov
inc
cs
cld
test
jmp
int3
ins
retf
das
xchg
sbb
cli
jmp
sub
sub
bound
fwait
pop
jns
stc
mov
dec
lahf
jne
cs
pop
mov
pop
push
fdiv
imul
sbb
aad
hlt
addr16
ret
das
sub
hlt
pop
mov
fadd
mov
mov
not
cmc
mov
and
xor
test
out
test
int
bound
test
xor
aas
test
or
lea
fcomp
adc
push
push
int3
out
ss
fst
mov
and
movs
mov
ins
cmp
jmp
pop
int
cmp
jecxz
jmp
cmp
inc
test
call
aaa
jne
outs
push
and
mov
mov
xor
jne
jne
outs
adc
cmp
ins
inc
mov
or
sub
fmulp
lea
scas
mov
lods
adc
outs
fidivr
xchg
and
sub
ja
add
imul
cmovno
xchg
cwde
clc
jecxz
jl
jns
enter
or
adc
rcr
stos
das
pop
cmp
data16
push
(bad)
imul
sub
and
cmp
push
pop
(bad)
jp
nop
mov
and
jmp
mov
lahf
stc
pop
add
mov
lods
out
xchg
sti
fmul
jl
sub
test
inc
lods
pusha
dec
stos
sub
jns
add
push
aam
(bad)
test
sbb
inc
rcr
mov
test
test
ds
jg
pop
fcmovnu
adc
jnp
adc
es
and
test
js
jg
clc
daa
ror
call
xchg
mov
inc
pop
mov
xchg
rcr
das
sub
stos
mov
es
mov
inc
and
jmp
int3
xchg
jecxz
cmps
xor
jp
xchg
jge
mov
push
xor
push
cdq
xlat
cmp
call
mov
hlt
push
cmp
jg
scas
(bad)
int
or
or
push
xor
xlat
jnp
sahf
sub
xchg
mov
pop
lock
push
call
pop
mov
sbb
push
(bad)
jle
nop
test
aam
ret
or
popa
(bad)
(bad)
and
and
or
mov
scas
or
(bad)
mov
push
add
dec
mov
imul
scas
sub
mov
sbb
push
sub
imul
push
cmc
(bad)
mov
retf
hlt
add
fwait
cmp
test
leave
call
mov
sub
out
dec
in
or
xchg
inc
inc
cmps
fcom
and
cwde
stc
dec
dec
mov
out
sahf
lds
xchg
xor
dec
imul
jnp
mov
sbb
sti
test
fdiv
xchg
test
mov
xchg
test
pusha
and
push
and
movs
xchg
inc
popa
hlt
cwde
popa
jae
adc
lods
out
xchg
nop
mov
mov
mov
add
sbb
dec
scas
div
fdiv
dec
pop
inc
(bad)
push
jnp
(bad)
push
sahf
adc
(bad)
call
popa
cld
mov
jg
jmp
cwde
test
xchg
fimul
mov
inc
and
jl
add
push
mov
ja
jge
rol
xor
mov
sub
loopne
pop
xor
mov
sbb
push
xchg
out
push
lock
and
add
gs
mov
and
std
cmp
cwde
add
adc
jo
(bad)
pop
pop
std
sub
(bad)
jmp
(bad)
imul
cld
and
sub
lods
jnp
adc
subps
clc
or
cmp
inc
mul
cmc
cs
sub
or
jb
sub
cmp
pop
cmp
push
into
cmps
ins
push
dec
iret
push
ds
mov
idiv
jb
(bad)
inc
and
xor
jno
jl
mov
(bad)
xor
retf
stc
mov
jge
xchg
mov
(bad)
stos
jmp
pop
mov
daa
mov
cmp
hlt
clc
jbe
xchg
pop
inc
(bad)
out
adc
sub
stos
push
jmp
addr16
sbb
pop
loope
loope
adc
pavgb
outs
sub
jg
xchg
mov
inc
pop
outs
pop
pushf
and
cmp
dec
shl
rcr
push
sub
repnz
or
mov
adc
add
cld
jb
inc
pop
inc
test
jb
stos
sti
aam
add
pop
les
jge
lahf
arpl
lods
pop
aaa
dec
movs
retf
add
enter
inc
es
adc
test
cmps
mov
je
sahf
pop
and
dec
hlt
xchg
mov
and
in
pop
sub
mov
or
dec
xchg
pop
enter
mov
sar
mov
jmp
mov
fist
and
icebp
test
mov
inc
test
jo
pop
jae
mov
daa
test
or
jge
sbb
mov
inc
add
mov
or
cmc
aam
clc
push
xchg
mov
cmps
(bad)
push
or
sbb
sub
push
test
enter
pop
into
(bad)
ret
popa
xlat
adc
in
pop
icebp
std
mov
push
cmc
ss
fsincos
jb
xchg
xor
lahf
aam
and
inc
aad
sub
xchg
sti
cdq
aad
int3
popf
jns
fstp
push
adc
popf
cmp
idiv
lea
por
mov
inc
pop
inc
daa
sub
pop
sar
jl
cmp
xor
xor
sub
mov
cmp
mov
ret
push
jbe
mul
loopne
push
test
xor
mov
mov
call
cmp
out
(bad)
out
repz
cmp
dec
inc
jb
add
iret
mov
loope
or
mov
addr16
loop
callw
xor
inc
jmp
cmps
fcom
xor
dec
xchg
sar
pushf
dec
shr
xchg
xor
sbb
mov
rol
and
js
test
enter
jmp
neg
cmc
mov
mov
ficom
push
or
xchg
pmaxsw
xor
adc
aaa
inc
mov
xor
movs
into
inc
hlt
mov
lds
xchg
inc
jmp
jp
jbe
xlat
adc
add
hlt
enter
jge
pop
shl
loop
dec
inc
push
jbe
ins
in
mov
sub
leave
push
adc
inc
fcmovnbe
sbb
cmp
push
inc
add
(bad)
js
mov
lahf
cmp
jno
pop
and
pop
or
out
xor
adc
or
or
icebp
lahf
xor
std
fucompp
mov
push
ins
mov
or
fst
test
call
cmp
ret
sbb
fist
sub
(bad)
retf
mov
sbb
sub
stc
push
pop
adc
cli
fs
test
jnp
jmp
dec
adc
push
out
fdiv
xor
repnz
or
call
ins
scas
call
outs
pop
inc
lock
bound
(bad)
xlat
(bad)
dec
sti
lock
or
stos
mov
sbb
sahf
in
stos
aas
adc
dec
in
dec
leave
inc
push
cmp
push
jl
xor
mov
or
xlat
mov
inc
mov
push
sbb
icebp
sub
jb
mov
retf
sbb
xchg
mov
and
mov
xor
scas
dec
jne
push
rol
mov
dec
push
daa
xchg
retf
xor
xchg
adc
test
icebp
xchg
and
push
cmp
mov
xchg
pop
mov
stos
lods
cmp
shl
adc
pop
pop
jmp
ja
(bad)
call
push
aad
push
jo
nop
in
nop
test
outs
xor
out
adc
movs
xchg
test
mov
icebp
mov
nop
mov
mov
mov
scas
sbb
mov
jns
cmps
and
jmp
jnp
push
cmp
cmp
push
int
mov
mov
adc
addr16
call
mov
push
jo
add
cmps
out
or
sub
add
mov
mov
and
push
call
adc
jg
adc
add
popa
or
fild
in
test
add
test
jecxz
sub
sub
aad
push
mov
in
(bad)
retf
fcmovb
adc
test
lods
pop
or
sbb
inc
push
mov
pop
lock
enter
iret
imul
pop
jl
pop
addr16
repz
lahf
mov
or
add
leave
mov
stos
xchg
inc
pop
ss
xchg
push
ins
(bad)
fiadd
mov
mov
repz
and
mov
jp
push
lds
cmc
xchg
jg
(bad)
mov
dec
adc
or
fist
mov
mov
inc
mov
dec
sti
sbb
jb
out
ficomp
add
out
cmc
outs
adc
cmp
add
inc
mov
ret
pop
push
mov
add
je
xor
loope
test
out
out
adc
in
jmp
mov
lds
push
mov
xlat
div
cmc
jle
push
fcomp
push
or
mov
mov
jo
fmul
jo
(bad)
rcl
pop
ret
ret
repnz
cs
add
aaa
mov
or
sti
mov
shl
mov
cmp
fist
(bad)
sub
fild
mov
inc
lahf
dec
fist
jne
jmp
xor
cmp
mov
push
pop
shl
das
and
xchg
xchg
aas
(bad)
lods
mov
mov
aam
ret
es
jmp
xchg
dec
xchg
sub
ins
xchg
mov
sub
scas
cmp
ins
mov
jbe
mov
inc
retf
scas
mov
pop
nop
mov
cli
mov
sbb
pop
retf
mov
out
jo
fwait
mov
call
lods
outs
int3
bound
adc
pop
out
call
aad
lods
out
and
je
(bad)
xchg
xchg
inc
gs
call
imul
or
(bad)
and
popa
sbb
jmp
(bad)
jp
shl
stos
or
cld
or
addr16
bound
aam
mov
mov
dec
dec
push
popf
sbb
mov
pop
test
arpl
mov
stos
js
stos
loopne
dec
mov
in
jne
lock
mov
inc
fs
popf
ss
popa
ficom
sub
(bad)
sub
or
inc
add
pop
(bad)
jecxz
pop
daa
cmp
push
dec
mov
sbb
inc
mov
xchg
mov
inc
xor
cs
stos
jae
nop
add
mov
out
dec
mov
cs
adc
test
test
jge
mov
dec
call
push
clc
test
jge
mov
xor
mov
push
jecxz
arpl
xchg
rol
mov
pop
inc
sbb
and
dec
jae
add
inc
sub
shl
jp
repnz
inc
lods
aas
xor
call
scas
add
push
hlt
xor
test
into
fs
jmp
inc
cs
arpl
mov
jge
adc
sub
fsubr
push
dec
mov
push
dec
shl
xor
(bad)
shl
add
pop
test
es
or
call
mov
shl
iret
push
ins
jns
sub
cmc
daa
retf
icebp
inc
jo
inc
pop
(bad)
jnp
nop
adc
dec
xchg
mov
push
(bad)
sub
xlat
mov
int3
mov
call
stos
jmp
cmp
pop
sar
lahf
push
addr16
mov
mov
outs
pop
jecxz
mov
cmps
adc
pop
push
push
cmc
inc
outs
iret
fst
stc
add
jle
popa
sbb
shl
cmp
psubusw
cmc
cmp
jno
adc
test
cmp
ficom
push
nop
nop
dec
dec
fmul
dec
outs
cmp
adc
cwde
mov
add
xor
mov
push
mov
shr
mov
clc
cwde
mov
mov
lods
add
cs
push
push
lock
test
imul
test
push
and
xchg
cmp
leave
mov
loope
movs
xchg
jb
push
pop
hlt
sbb
fist
pop
inc
bound
ss
adc
fs
push
push
pop
pop
fxch
dec
mov
sti
sub
rcr
ins
stos
cmp
pop
mov
dec
mov
ja
push
daa
pop
jno
rcl
shl
pop
call
adc
sbb
jae
xchg
sbb
mov
sub
jno
push
mov
sbb
push
push
loopne
rcr
adc
mov
ins
rcl
sbb
pop
pop
fiadd
mov
(bad)
lea
out
outs
mov
inc
mov
bound
mov
fadd
lock
repnz
jmp
cmps
fcomp
shl
mov
xor
cmp
(bad)
jbe
leave
inc
add
sbb
sub
cld
mov
xchg
int
add
push
ja
dec
js
fisub
and
xchg
mov
scas
jmp
xchg
push
mul
in
in
mov
ss
mov
mov
popa
imul
repz
loope
shr
sar
sub
push
cwde
jg
shr
pop
inc
lahf
jle
lods
fist
or
jg
mov
clc
(bad)
adc
sub
pop
dec
inc
frstor
dec
shr
aaa
lods
shr
les
cmc
or
xchg
stc
mov
shr
xchg
jg
mov
xchg
cmp
outs
clc
mov
cmp
nop
xchg
ss
push
pop
and
cmp
idiv
cmp
adc
mov
or
sub
xor
add
mov
cmp
jbe
jo
xor
mov
or
retf
push
push
fisubr
mov
inc
(bad)
aas
jp
dec
in
xlat
movs
mov
inc
mov
nop
pusha
add
retf
mov
outs
xchg
retf
mov
adc
push
mov
jne
or
sub
mov
stos
push
jnp
cmp
and
fmul
xlat
dec
mov
popf
enter
out
or
mov
aas
and
push
or
rol
jns
mov
les
in
fmul
push
mov
adc
jmp
rcl
(bad)
rcl
test
mov
aam
push
fdivr
lods
cmc
or
jbe
inc
outs
xor
and
xchg
push
cmps
inc
sbb
or
sbb
sbb
fst
jo
cmp
test
push
or
xchg
iret
retf
hlt
xchg
pop
pop
jge
push
js
adc
sbb
jae
ret
das
push
sbb
into
sub
mov
mov
jg
aas
int3
ins
into
xor
in
jno
dec
cmps
dec
in
or
vpshlb
out
loope
jno
ror
add
cli
jmp
lock
sbb
push
retf
call
not
xlat
pushf
mov
fadd
sub
mov
sub
xor
pusha
push
mov
lock
add
fbld
adc
fld
(bad)
xchg
scas
mov
pop
nop
push
lods
jbe
xchg
out
cmps
enter
cmc
retf
ret
dec
mov
cli
rol
push
xchg
and
push
cld
mov
cmp
mov
shl
div
and
push
push
push
mov
pop
cmp
dec
pop
adc
and
loop
and
das
into
cmp
jmp
test
popf
xor
lods
in
xlat
jmp
cwde
in
scas
add
add
cmp
pop
retf
imul
fild
mov
sbb
mov
dec
iret
adc
xor
inc
mov
lods
mov
or
add
rcr
dec
dec
sti
add
test
pop
pop
inc
jmp
dec
xor
push
jno
aam
arpl
cmp
mov
fcomi
pusha
mov
and
ror
repnz
dec
imul
rol
data16
mov
icebp
rcr
adc
jnp
ins
out
les
out
xor
dec
loope
(bad)
jecxz
add
mov
loopne
xchg
jnp
outs
or
push
cmp
jmp
cs
mov
out
pop
xor
jae
ja
ret
or
mov
and
jmp
xor
test
mov
mov
xor
fdivr
ret
mov
dec
test
es
scas
or
imul
js
es
cmc
ret
sbb
icebp
inc
push
aaa
cmp
mov
pop
pop
fisttp
xchg
lea
fidivr
js
cmp
(bad)
fmul
lods
lds
mov
aad
inc
pop
cmp
pop
ins
cmp
test
and
cmp
mov
sbb
mov
xchg
mov
scas
adc
outs
and
movs
pop
leave
sahf
in
icebp
pop
retf
std
pop
in
pop
sub
lods
mov
data16
push
sbb
push
push
movs
sar
sbb
arpl
ja
fimul
aam
xor
lock
jge
push
clc
pop
movs
jl
in
test
stos
fld
ins
fwait
xchg
jle
mov
sbb
out
xchg
adc
repnz
movs
sti
and
inc
jmp
sub
mov
rol
hlt
inc
sub
push
xchg
(bad)
in
pop
sbb
lds
rcr
fnsave
sbb
jge
je
mov
mov
jmp
mov
stos
and
or
enter
mov
mov
scas
mov
bound
push
mov
mov
inc
mov
push
mov
adc
repz
loope
mov
shl
mov
or
ret
add
mov
stc
xor
jl
sub
loop
pop
pushf
xchg
ins
out
clc
mov
cld
ds
push
cmp
cmp
ret
inc
or
cmps
mov
stos
dec
movs
jne
xor
push
pop
out
mov
test
js
aaa
fstp
mov
ret
out
or
mov
shr
sub
sub
cmp
cmps
pop
or
lods
rcr
fldenv
fs
hlt
aad
jbe
addr16
mov
outs
ja
push
mov
retfw
jl
lods
lods
xchg
rcl
cmp
jo
and
popf
xchg
mov
mov
pop
rcl
sub
xor
repnz
and
clc
test
dec
xchg
fs
mov
test
not
movs
mov
iret
cld
jmp
add
mov
data16
test
outs
sbb
stos
shl
pusha
inc
in
push
push
jge
cmps
add
(bad)
jns
ins
scas
add
xor
push
jecxz
fild
dec
adc
mov
push
js
lock
jmp
pop
adc
push
mov
mov
or
jnp
fistp
fs
xor
(bad)
mov
cdq
enter
or
jmp
out
lods
std
and
loop
mov
ds
pop
push
in
mov
pushf
and
(bad)
xor
mov
and
adc
mov
push
in
sub
sub
push
dec
mov
inc
adc
cmp
and
out
call
jb
cs
fmul
mov
mov
test
cld
mov
pop
out
push
pop
neg
sbb
inc
adc
mov
fwait
push
icebp
dec
mov
jmp
in
push
mov
rcr
cmp
push
mov
cmp
push
inc
push
out
(bad)
out
sbb
xchg
sti
call
xlat
es
inc
xchg
loop
dec
in
and
fdiv
cmps
sahf
fs
aaa
mov
pop
cmp
mov
(bad)
adc
(bad)
dec
repz
cld
mov
inc
enter
dec
test
es
xchg
inc
fs
adc
dec
into
pop
pop
cmps
in
adc
jp
cli
shl
data16
mov
jbe
dec
mov
ins
std
ret
sar
and
repz
mov
mov
sub
mov
add
fnstcw
xchg
stos
mov
cmps
adc
dec
push
into
or
add
inc
out
les
pop
push
cmps
xchg
jb
mov
push
out
cs
cmp
and
lods
in
and
es
pop
adc
cs
pop
fst
js
ss
mov
push
call
js
lea
jns
xchg
scas
shr
mov
push
xor
push
pop
add
sub
inc
(bad)
out
push
inc
fadd
loope
jno
sahf
xchg
aam
mov
xor
cmp
jge
pop
mov
in
loop
xor
push
xchg
xchg
outs
sbb
and
mov
stos
sub
pop
pop
mov
xchg
pop
fstp
xor
call
aas
push
xor
repz
rcl
call
inc
mov
mov
inc
lods
push
or
push
xor
cwde
loope
cdq
push
jno
and
call
stos
and
inc
jns
cmp
mov
adc
xor
add
call
in
jl
or
add
fcmovnb
cli
ins
jmp
int
push
ss
nop
add
aad
data16
imul
or
fwait
xchg
mov
pmulhw
(bad)
fst
mov
pushf
repnz
or
sbb
inc
xchg
fisubr
repnz
inc
inc
aad
int3
sub
or
in
bound
outs
bound
sub
inc
out
stc
dec
and
mov
sub
nop
cmc
mov
push
cwde
push
push
pop
fld
repz
test
push
arpl
mov
cmp
in
xchg
mov
jmp
jae
sbb
bound
push
ficom
adc
inc
jmp
mov
dec
out
ret
mov
pop
jae
(bad)
adc
in
xchg
mov
add
outs
ins
(bad)
push
push
adc
es
pop
shl
retf
fisubr
adc
lahf
adc
repnz
mov
or
stc
(bad)
(bad)
fsubr
aaa
add
push
and
retf
daa
mov
popa
lds
sub
dec
adc
xor
pop
ret
test
mov
mov
cmp
les
mov
stos
not
rol
mov
push
mov
xchg
push
cli
dec
stos
jmp
int3
or
add
mov
ret
inc
js
or
jnp
adc
jecxz
(bad)
nop
idiv
out
xor
or
in
out
stos
pop
jnp
les
aam
aaa
dec
dec
gs
enter
mov
daa
add
jle
inc
pop
mov
cmc
fadd
inc
cmp
or
in
lea
into
or
ror
popa
jo
cmps
mov
mov
movs
push
(bad)
inc
in
mov
scas
mov
dec
pop
dec
dec
fs
xchg
loope
outs
cmp
push
adc
imul
fwait
and
jp
dec
adc
jmp
inc
sub
int3
test
jo
mov
adc
inc
mov
int
lds
test
sbb
loop
adc
fcom
cld
jle
or
retf
daa
mov
mov
stos
call
xchg
out
mov
sub
adc
adc
push
int
adc
adc
adc
jp
hlt
xor
test
arpl
(bad)
xor
mov
inc
xchg
cmp
div
(bad)
mov
xchg
out
lods
add
mov
add
aam
inc
or
(bad)
inc
inc
cmc
jp
daa
inc
sub
jno
scas
and
mov
adc
or
inc
cs
gs
mov
add
popa
in
xchg
adc
cmp
sbb
retf
retf
rcr
das
dec
leave
jae
in
ja
rcl
outs
inc
adc
and
xchg
push
sub
test
sbb
popf
ret
(bad)
jecxz
cdq
dec
test
rcl
rcl
cwde
jmp
lods
bswap
js
and
repnz
int3
sbb
sub
adc
pop
lahf
movs
and
leave
or
jge
cmps
xchg
je
adc
jg
sub
mov
add
push
jg
shl
fmul
sub
inc
scas
xor
arpl
fistp
popa
add
sbb
add
jmp
pop
push
mov
stc
mov
cmps
out
(bad)
inc
(bad)
imul
xchg
ja
jle
aas
fist
loop
test
add
dec
(bad)
mov
(bad)
in
inc
xchg
enter
scas
ffree
imul
dec
mov
push
pop
mov
pusha
stos
jne
in
fcomi
lahf
add
jle
or
push
sbb
xchg
stos
xor
out
arpl
push
mov
xlat
xchg
push
jge
fsubp
outs
(bad)
ror
cmps
mov
outs
lods
push
fdiv
mov
add
xor
retf
and
adc
movs
adc
pop
pop
lock
dec
out
push
adc
or
push
push
icebp
and
cmc
xchg
je
dec
push
(bad)
inc
fsub
mov
mov
pop
test
fwait
inc
mov
mov
xchg
jmp
test
pop
mov
adc
push
inc
cmps
lds
jmp
inc
aad
pop
int3
retf
movs
sbb
fwait
cwde
mov
pushf
lea
push
cmp
hlt
xchg
ror
mov
xor
mov
mov
or
sti
aaa
aad
xor
jg
add
fwait
scas
ret
jno
inc
popf
shl
or
test
dec
mov
mov
adc
push
not
js
out
mov
shl
imul
lds
ja
xchg
mov
xchg
mov
push
xchg
cld
arpl
(bad)
jge
mov
pushf
das
rol
(bad)
adc
and
dec
jbe
retf
inc
add
mov
dec
jg
arpl
and
dec
sub
dec
sbb
cmps
xor
dec
mov
xchg
xchg
imul
push
adc
fidiv
mov
in
mov
neg
ja
xchg
jge
dec
push
outs
test
adc
scas
push
mov
stos
repnz
jecxz
cwde
cmp
call
scas
dec
adc
mov
jp
adc
push
(bad)
fsubr
or
mov
loop
dec
sar
clc
stc
movs
xor
xchg
adc
mov
push
retf
mov
dec
pusha
(bad)
dec
sar
mov
ja
and
cdq
(bad)
test
cdq
or
icebp
dec
push
repnz
pop
inc
std
repnz
xchg
push
cwde
mov
loopne
jmp
or
ret
test
repz
aas
push
xchg
sub
jnp
push
loopne
repnz
cmp
outs
(bad)
stos
inc
ja
sar
loope
(bad)
sub
out
ins
jecxz
aaa
inc
fstp
fsub
das
adc
push
inc
jae
(bad)
xchg
jmp
cli
aas
retf
xchg
jp
mov
pusha
sbb
not
mov
pop
fadd
jg
mov
push
xchg
push
inc
mov
push
mov
push
inc
mov
repnz
xor
sti
or
imul
cmp
push
test
push
mov
cli
popa
aaa
jge
pop
mov
inc
int3
addr16
xor
punpckhwd
pusha
outs
and
mov
(bad)
shl
dec
sub
or
(bad)
dec
leave
stos
adc
ins
in
out
stos
mov
push
cmp
and
jecxz
dec
shl
dec
mov
cmp
in
and
lods
xor
push
push
aaa
sti
loopne
fimul
fstp
or
scas
lods
sbb
mov
mov
inc
dec
sbb
push
and
sbb
sub
adc
cld
punpcklwd
mov
dec
push
retf
aad
outs
pop
xchg
or
mov
adc
add
add
adc
pop
sbb
in
push
xchg
jp
repz
adc
scas
inc
sbb
int
repnz
or
xchg
or
clc
adc
cdq
repz
ror
sub
inc
inc
jg
loop
pop
jbe
int3
mov
sbb
push
add
adc
cmp
mov
jb
lock
dec
aam
test
out
shr
scas
adc
leave
xchg
out
test
in
in
mov
mov
cmp
xchg
adc
dec
mov
and
(bad)
sbb
add
inc
xchg
cs
loope
stos
ror
mov
in
inc
push
mov
ss
jle
lahf
cmp
dec
push
test
test
inc
add
adc
fbstp
sbb
addr16
jae
pop
jmp
mov
ficomp
push
and
xor
push
(bad)
jns
dec
out
sub
and
fidivr
icebp
mov
(bad)
mov
ins
jmp
sub
mov
aaa
or
mov
pop
add
mov
jnp
iret
repnz
cmc
call
pushf
fistp
movs
lods
push
or
inc
pop
push
push
adc
not
push
add
adc
xor
jns
into
cld
fwait
adc
js
in
ja
cmp
and
lods
mov
push
dec
mov
inc
mov
(bad)
sbb
jge
xor
fnstsw
in
mov
xor
enter
leave
test
and
mov
dec
and
jmp
xor
js
sbb
sub
add
mov
mov
in
ds
cmp
gs
leave
lods
fidiv
cmps
repnz
mov
clc
jbe
mov
leave
xchg
lock
mov
jmp
pop
retf
iret
pop
inc
jae
pushf
cmc
fcom
movs
add
or
pop
jmp
adc
sbb
loopne
jg
push
pop
pop
(bad)
jmp
sbb
or
lldt
dec
(bad)
fst
test
dec
repz
add
dec
add
pop
ror
xchg
(bad)
sahf
dec
mov
enter
add
sub
and
jge
out
(bad)
mov
or
test
pop
(bad)
fidiv
lahf
pop
call
dec
retf
and
jge
shr
retf
fstp
xchg
or
mov
dec
call
sbb
dec
bound
xchg
popa
(bad)
mov
adc
jmp
xchg
xor
push
mov
sub
ds
sub
adc
inc
pop
mov
add
sub
push
or
dec
xor
and
push
mov
clc
test
adc
popfw
stos
lock
loopne
and
push
(bad)
sub
xchg
das
jecxz
(bad)
mov
or
and
aaa
retf
sub
fdivp
test
(bad)
jo
and
add
stos
(bad)
inc
jge
push
movsx
mov
xor
pcmpgtd
mov
push
jno
es
js
stc
mov
pop
mov
leave
fldcw
lea
sub
test
imul
sbb
inc
mov
enter
and
movs
fnsave
push
les
fild
xchg
ins
bound
rcl
dec
fdiv
xor
ds
mov
pop
xchg
xor
cdq
mov
cmp
sbb
data16
fidiv
cmp
je
sbb
outs
cli
cmp
jge
test
shl
mov
cmp
test
adc
jmp
shr
mov
xlat
sub
outs
das
sbb
push
mov
ret
mov
mov
mov
pop
adc
gs
inc
pop
stos
xchg
ss
push
in
scas
push
or
pop
lods
mov
stos
ror
in
mulps
and
scas
xchg
add
loop
jae
es
xchg
mov
push
das
jge
shl
push
mov
fidivr
cmc
shr
add
cmp
lds
pop
(bad)
xchg
cmp
xor
jge
push
jne
imul
clc
inc
scas
mov
inc
fdiv
xor
xchg
scas
movs
mov
jne
es
pop
test
or
fwait
add
shl
pop
mov
or
pop
push
mov
cmc
adc
iret
mov
xlat
scas
pop
mov
or
and
sahf
pop
dec
addr16
sbb
in
ret
inc
sub
adc
push
ds
icebp
(bad)
adc
mov
mov
(bad)
sbb
xchg
addr16
ret
scas
mov
mov
and
fwait
cmps
pop
(bad)
aam
jl
cmps
xor
jno
push
cmp
(bad)
mov
fbld
add
mov
lock
stos
out
neg
loope
mov
mov
pop
adc
adc
hlt
or
jae
jns
adc
cdq
xchg
mov
(bad)
mov
out
mov
or
inc
popa
pop
cmp
mov
aam
or
sub
xchg
jo
data16
out
inc
rol
sub
sub
loopne
and
xchg
mov
mov
or
stos
stos
arpl
into
addr16
je
std
jp
or
icebp
dec
mov
rol
cmp
dec
adc
aaa
lods
cld
sar
test
cmp
repz
cmp
out
pushf
sub
bound
addr16
loop
fmulp
int
js
sub
mov
fwait
popa
outs
xor
lods
mov
in
sbb
in
sahf
nop
ror
arpl
and
xor
pop
push
ja
add
loop
inc
push
mov
and
inc
dec
out
jne
xor
pop
jmp
xchg
sbb
int3
loopne
add
into
xchg
mov
lahf
xor
xor
fistp
xor
mov
mov
sub
ja
movs
ret
mov
mov
dec
inc
pop
cmp
sti
push
and
cli
push
cmp
mov
jne
cdq
and
add
lea
push
sbb
aad
mov
sub
push
lods
call
mov
dec
mov
loopne
mov
das
data16
ss
push
dec
mov
pusha
repz
mov
mov
adc
ret
imul
(bad)
leave
push
icebp
int3
xchg
dec
pop
and
int3
inc
iret
outs
in
lods
adc
mov
mov
(bad)
and
mov
xchg
arpl
sub
jmp
outs
or
rcl
cmps
and
sub
mov
out
pop
cmps
es
or
mov
mov
ins
(bad)
jp
fidiv
aaa
mov
mov
jns
enter
retf
and
mov
stc
scas
pop
pop
cld
movs
jg
mov
fldenv
jne
pop
or
lock
xor
icebp
pop
popa
(bad)
sbb
fisttp
add
or
jnp
in
addr16
mov
jp
popa
aas
daa
inc
inc
sbb
mov
enter
rcl
dec
sub
cmc
push
mov
inc
cli
pusha
dec
pop
or
xchg
mov
sbb
fld
sbb
xchg
gs
cmp
imul
mov
mov
out
lods
data16
in
sbb
push
add
mov
leave
test
loop
pop
daa
cld
mov
fcom
jae
and
dec
mov
mov
jne
cwde
xor
aad
std
shr
mov
xlat
sbb
mov
jmp
cmp
std
dec
int3
xor
xlat
jmp
out
cmps
lea
cmp
push
fdiv
popa
mov
js
xchg
je
lods
add
xor
push
aad
fnstsw
sub
jmp
in
stc
jo
out
ja
cdq
stc
aaa
sbb
popa
in
cmp
xchg
push
xor
pop
scas
inc
mov
adc
mov
fwait
pop
add
test
psrld
sti
imul
jns
sar
js
aam
mov
outs
(bad)
in
test
outs
adc
jg
scas
out
cmc
fld
xor
(bad)
sar
jnp
ficomp
jp
enter
std
(bad)
mov
aad
add
add
xlat
push
xchg
out
or
mov
outs
nop
mov
jecxz
and
or
dec
cmc
ins
push
dec
pop
je
push
inc
(bad)
sbb
mov
adc
push
mov
xor
jl
xchg
or
adc
ret
dec
out
jg
inc
dec
retf
adc
push
adc
jge
mov
push
push
loop
je
shl
pop
imul
ins
mov
and
loope
sub
stc
stos
mul
jmp
dec
mov
(bad)
into
ss
and
mov
jmp
cld
xchg
imul
outs
xchg
mov
jno
cmps
shr
iret
lea
outs
daa
cmc
or
imul
loope
adc
push
loop
push
sub
icebp
clc
repz
or
xor
call
out
fbstp
fisubr
(bad)
xchg
cmp
mov
mov
xor
aas
inc
sub
and
stos
pop
das
retf
movs
adc
pushf
mov
pop
(bad)
(bad)
and
inc
out
sub
pusha
pop
mov
xor
cmc
rcl
pop
or
jecxz
stos
icebp
es
repz
pop
xchg
mov
les
inc
pop
or
cmc
or
mov
push
int3
pop
inc
pop
mov
mov
jo
mov
fimul
iret
into
jl
cs
ret
in
pop
xchg
inc
lahf
lea
adc
imul
xor
mov
add
cld
push
push
ret
mov
mov
retf
lahf
dec
test
sti
push
leave
dec
cli
arpl
mov
or
fwait
mov
ins
sti
mov
sub
xchg
mov
jl
push
and
xor
mov
pop
and
jns
daa
xlat
fdiv
push
xor
xor
ret
ins
fs
(bad)
push
jnp
stc
jmp
pop
mov
mov
cmp
pop
js
hlt
pop
mov
stc
das
ins
addr16
jge
out
cmps
(bad)
in
jmp
add
ss
mov
pop
in
or
arpl
aam
add
ins
mov
imul
sahf
aad
xchg
sti
cld
xchg
dec
sar
mov
cmp
add
ffreep
ret
pop
pusha
ret
inc
jge
jbe
pop
and
out
xor
xchg
stc
cmps
sub
fdiv
mov
xlat
inc
bound
xor
jge
pop
fidiv
sub
je
xor
xchg
inc
mov
mov
cmp
int
(bad)
jmp
jge
mov
movs
sahf
push
inc
mov
(bad)
inc
movs
call
pop
test
cdq
sub
ja
cwde
push
cli
in
adc
(bad)
jge
psubq
xchg
gs
js
and
pop
fs
test
imul
xchg
pushf
inc
inc
ins
inc
arpl
call
sbb
ds
xchg
mov
gs
std
loopne
dec
nop
repnz
scas
push
(bad)
jb
imul
mov
in
ficomp
scas
and
int3
aam
or
movs
xor
(bad)
stos
cmc
cmc
popa
and
xor
std
js
jnp
or
push
add
icebp
out
test
add
fidiv
rcr
(bad)
and
or
nop/reserved
ins
test
mov
mov
lahf
or
enter
lods
popa
xor
push
sbb
jl
mov
xor
shl
sbb
add
(bad)
scas
and
enter
rol
dec
pop
nop
jg
sar
stos
in
push
ror
mov
pop
push
int3
rol
xor
jnp
xor
jle
inc
(bad)
add
(bad)
pop
push
icebp
mov
and
pop
dec
retf
sbb
cdq
sbb
sub
stc
inc
mov
popf
imul
ds
push
add
sub
xchg
pop
in
ins
push
sbb
ret
jmp
mov
xchg
cwde
cs
or
fidiv
mov
sti
stos
les
int
pop
inc
enter
sub
push
test
int
and
leave
xchg
pop
fimul
cmp
push
sbb
cmp
fidivr
popa
pop
arpl
mov
(bad)
in
sti
popa
iret
adc
nop
mov
aaa
pop
jae
imul
call
push
ror
test
adc
push
stos
pushf
lea
cmp
push
pop
adc
jae
add
jp
or
icebp
mov
(bad)
adc
and
loop
jb
fwait
jo
pusha
jno
mov
js
xchg
adc
stos
jecxz
inc
cmp
je
cdq
pop
gs
dec
adc
push
and
aaa
jle
pop
inc
out
add
push
pop
bound
mov
les
packsswb
ins
adc
cmp
jmp
clc
lea
xchg
daa
dec
add
mov
cmps
stos
cli
aaa
rol
push
sub
rcr
popa
out
or
sbb
cmp
ficom
xchg
mov
cdq
jo
fadd
xor
popf
mov
ss
(bad)
xor
gs
push
in
jg
xor
es
(bad)
cmp
cwde
fisttp
jns
jns
push
cdq
sbb
xor
sqrtps
push
popa
imul
cmp
(bad)
ins
lods
int3
or
adc
arpl
icebp
sti
arpl
cld
js
xor
xchg
clc
add
xchg
xchg
(bad)
xchg
fcmovb
(bad)
or
push
dec
jmp
adc
sbb
mov
leave
lea
outs
ds
jb
shl
test
add
in
jl
pop
jae
and
jecxz
dec
mov
mov
mov
retf
or
dec
pop
pop
mov
ds
stos
sti
mov
inc
sbb
mov
loopne
sar
mov
sbb
mov
imul
pop
(bad)
frstor
popa
cli
sub
sar
mov
nop
sbb
pop
retf
mov
mov
push
sub
pop
and
outs
pusha
sbb
inc
dec
loope
pop
int3
mov
mov
mov
data16
dec
test
or
adc
add
ins
jge
and
scas
std
cwde
aad
mov
inc
ret
inc
out
js
mov
pop
and
dec
lea
(bad)
in
adc
xor
jns
fild
push
test
pop
enter
outs
sub
test
pop
arpl
test
lds
lahf
xor
ret
inc
jmp
data16
mov
and
mov
adc
adc
gs
ret
push
cmp
dec
mov
call
pop
pop
out
mov
dec
ds
cmp
js
test
repnz
stos
jg
(bad)
imul
jp
dec
mov
pop
ins
in
cmp
(bad)
cmps
mov
(bad)
dec
xor
(bad)
jmp
push
mov
in
push
pop
mov
sub
test
mov
fs
xor
les
xchg
or
into
rol
daa
(bad)
das
adc
lods
(bad)
push
movs
aad
gs
maxps
jne
pushf
in
hlt
in
in
mov
mov
jmp
add
data16
add
cs
mov
mov
pushf
xor
les
cdq
popf
mov
push
(bad)
(bad)
ror
into
push
cmp
hlt
push
pop
adc
or
and
stos
fldenv
arpl
cmps
ret
mov
add
mov
fbld
adc
ins
js
ror
xlat
dec
test
ins
cmp
daa
cdq
inc
lahf
adc
xchg
cwde
fs
aaa
loop
jle
or
inc
push
pop
ret
mov
(bad)
cdq
repz
dec
aas
not
pop
sbb
jmp
jge
or
mov
mov
loope
outs
fmul
fld
in
std
cmps
dec
push
cmps
push
adc
mov
xlat
add
fisttp
fnsave
push
int
adc
mov
pop
into
lods
ins
sbb
push
repz
pop
inc
stc
jge
xchg
xor
cmps
outs
inc
lea
sub
cmc
pop
mov
mul
xchg
mov
pop
push
sbb
sub
jmp
cld
mov
or
cmp
xchg
push
jecxz
das
test
fadd
movs
aaa
dec
cmp
or
in
add
mov
ror
inc
cld
mov
inc
sbb
outs
dec
cmc
push
(bad)
add
pop
fsub
cmps
cwde
(bad)
mov
xor
(bad)
jns
popa
out
sub
sbb
cwde
pop
(bad)
jp
or
adc
xchg
jne
push
mov
out
dec
mov
cmp
mov
loopne
jp
inc
stos
xchg
aam
sub
data16
ds
pusha
adc
push
mov
xor
ret
mov
and
and
cmp
pop
adc
ret
fsubr
(bad)
jmp
inc
scas
pop
mov
out
cwde
push
shr
sub
pop
xor
inc
in
stos
ret
pop
aad
jge
data16
loop
out
pop
push
inc
push
push
mov
in
scas
icebp
mov
aas
daa
mov
xchg
push
cmps
lods
scas
out
pop
adc
sub
and
shl
mov
imul
add
jecxz
ins
and
or
daa
loop
cmp
sub
lods
rcl
les
add
fwait
sti
popf
push
pcmpeqb
les
dec
xchg
imul
mov
inc
imul
sub
inc
mov
add
or
cmps
and
or
lahf
and
or
sbb
mov
or
inc
int3
inc
rol
pop
pop
aas
mov
add
mov
mov
adc
sub
fsubr
mov
out
cmc
mov
xlat
jae
sbb
pop
lds
dec
rcr
cs
outs
pop
push
xchg
xchg
mov
xor
bound
add
rcr
sub
push
mov
js
cmp
xchg
mov
sbb
push
push
mov
movs
frstor
(bad)
pop
mov
retf
xor
pop
jnp
mov
movs
jl
inc
mov
add
aas
imul
push
adc
jp
not
test
(bad)
ficom
push
mov
lea
pusha
mov
into
cmp
mov
pop
fisubr
test
data16
clc
scas
sub
pop
(bad)
in
outs
in
xchg
stc
pop
inc
add
out
or
int3
push
pop
fiadd
sbb
inc
loopne
jg
xchg
mov
cmps
fs
mov
jp
(bad)
hlt
hlt
inc
bnd
xor
fiadd
bound
dec
imul
shr
push
cs
sub
inc
std
sbb
cmp
xor
dec
xor
lods
pop
loopne
popa
imul
push
movs
inc
leave
test
rcr
inc
mov
adc
cmp
sub
fld
pop
add
fisubr
mov
mov
sub
xlat
push
pusha
(bad)
xchg
adc
cmp
pushf
jne
in
aad
dec
inc
sub
mov
inc
in
(bad)
mov
dec
jbe
adc
xchg
sub
or
stos
mov
js
shl
rol
mov
mov
cmp
and
add
bound
lar
cmp
dec
into
outs
jnp
jo
xchg
add
mov
jge
pop
cmp
cs
push
add
xor
jl
js
cmps
in
xchg
xchg
or
sbb
loopne
mov
xchg
xor
shr
jne
bound
push
jg
adc
sub
xchg
push
int3
sahf
mov
loopne
add
mov
into
dec
movs
out
pop
pop
int3
js
xor
icebp
sub
test
ja
fld
pop
xchg
aad
cmp
(bad)
fld
mov
test
mov
imul
push
into
jmp
add
aas
push
call
xchg
loope
push
jns
cmp
sbb
lea
pop
xchg
push
(bad)
cmp
mov
loope
(bad)
mov
imul
pmuludq
into
cs
loope
aaa
aaa
cmps
lods
jmp
movs
xor
or
and
ret
inc
(bad)
ja
xchg
lar
cmp
hlt
mul
(bad)
aad
push
mov
mov
rcr
push
sub
inc
add
cmps
cmp
xchg
stos
mov
rol
xor
or
push
or
outs
push
in
pop
mov
out
xchg
xchg
call
bound
ror
inc
jno
ss
adc
pop
sub
mov
cli
cli
aad
push
ret
mov
int3
stos
mov
mov
push
sbb
idiv
cmp
out
mov
and
cmp
sahf
jns
icebp
push
inc
sahf
mov
mov
lods
sbb
xchg
push
xor
sahf
sbb
xchg
pop
pop
mov
not
xor
jge
mov
xchg
enter
mov
movs
xlat
pop
clc
mov
pop
jnp
jne
add
repnz
mov
add
or
jle
into
jnp
push
es
jmp
cmp
daa
mov
xlat
sub
cmps
mov
or
sar
(bad)
lods
mul
gs
retf
adc
or
fs
xchg
idiv
movs
es
sub
or
add
jae
pop
sub
adc
bound
shl
pop
push
cmps
je
fucomp
sbb
into
retf
daa
and
mov
jmp
dec
pop
ret
push
dec
add
in
and
nop
push
sahf
arpl
add
sub
mov
in
sti
mov
xor
cdq
push
inc
xchg
cdq
out
mov
mov
idiv
jnp
or
and
pop
lods
jmp
stos
jg
int3
cmps
cwde
jns
add
fnsave
mov
pop
jbe
dec
shl
jns
cdq
push
into
ins
push
call
sti
cmp
outs
pusha
and
adc
enter
jl
(bad)
int
cmp
cmp
(bad)
adc
nop
xchg
test
xchg
outs
hlt
loope
out
mov
pop
sbb
cs
rcr
mov
mov
cli
xchg
popf
cmps
adc
pop
push
(bad)
jmp
cmps
and
inc
aas
add
push
inc
movs
dec
and
jo
icebp
sub
ret
repnz
out
sbb
fwait
xchg
stos
sbb
rol
movs
sub
in
dec
push
xor
loopne
sbb
dec
mov
xchg
and
cs
sbb
aas
outs
adc
aam
xchg
jg
push
push
pop
out
pop
add
cmp
sub
fdivr
pop
mov
js
stos
sbb
jo
cmp
rcr
xlat
cwde
popa
movs
push
cmp
fcom
into
mov
jle
mov
jge
jp
jmp
pop
or
test
nop
mov
ret
push
push
mov
inc
pop
sahf
fcomip
push
(bad)
xchg
or
mov
(bad)
call
add
push
jmp
addr16
adc
stc
and
mov
jns
mov
repz
iret
call
inc
(bad)
mov
sub
dec
inc
push
dec
sbb
ins
lods
addr16
repz
nop
repz
cli
(bad)
das
sbb
dec
neg
jmp
jnp
rcl
outs
or
ret
out
inc
sub
xchg
mov
xchg
movs
movs
pushf
dec
out
mov
adc
jne
mov
pop
push
cdq
sbb
nop
sub
inc
or
or
out
and
repz
inc
enter
add
ds
inc
in
sub
out
cmp
mov
les
(bad)
fxch
jbe
pop
jecxz
test
in
ds
sahf
pushf
mov
iret
mov
jb
cmp
aas
xchg
and
ret
mov
mov
lea
sub
fst
arpl
int3
xchg
or
dec
push
das
xor
pop
pop
aad
mov
leave
outs
push
xchg
xchg
sub
xor
sub
cmp
repz
outs
mov
mov
(bad)
fs
jl
xchg
in
dec
in
push
dec
xor
int3
movaps
cmp
xor
hlt
inc
jp
dec
repz
sub
push
sbb
aaa
cmp
add
mov
push
pop
push
fisttp
xchg
sub
fmul
inc
shl
or
xor
sahf
mov
jge
addr16
outs
push
xor
imul
push
cmp
iret
add
or
or
int
adc
(bad)
stos
adc
pop
es
lahf
push
or
imul
adc
cmps
cmp
mov
xchg
(bad)
into
sub
push
dec
jno
stos
arpl
sti
sbb
iret
dec
or
pushf
pop
sbb
ss
(bad)
mov
das
xchg
pop
adc
mov
add
xor
mov
hlt
shl
mov
pop
sahf
aas
mov
pop
mov
lods
div
stc
xchg
xor
push
in
popa
xchg
repnz
jns
mov
in
pop
mov
jne
rcl
xchg
ins
xchg
nop
sbb
and
adc
daa
xchg
pop
icebp
ret
in
cld
sub
arpl
repnz
ror
xchg
push
es
stc
mov
push
test
and
mov
test
adc
jp
xchg
mov
test
mov
xor
and
adc
xor
lods
mov
adc
and
sbb
sub
in
ja
push
mov
adc
xor
pop
in
cld
dec
hlt
and
mov
push
in
cmp
push
std
loope
sbb
ins
ins
cmp
popa
cmp
mov
mov
popf
push
(bad)
in
jae
and
out
loopne
mov
nop
arpl
test
bound
fistp
sahf
idiv
inc
jnp
seta
aaa
sub
jmp
ficom
(bad)
jmp
in
in
fwait
dec
add
mov
mov
aaa
not
mov
cmp
or
enter
pop
xchg
outs
add
movs
mov
js
pop
inc
aam
ins
fcom
es
cmp
fsubp
adc
jo
retf
jne
lods
inc
xchg
and
xlat
lods
adc
repnz
jge
nop
sbb
(bad)
jl
loope
add
xor
mov
bsr
cli
pop
mov
dec
shr
(bad)
sub
xor
sbb
pop
clc
pop
xchg
gs
xchg
js
popa
sub
out
xor
adc
sbb
push
jne
(bad)
std
sahf
cmp
in
cwde
dec
or
cmps
inc
aaa
nop
inc
mov
xor
aas
xor
out
add
js
(bad)
jae
xor
les
and
loopne
mov
mov
xor
test
adc
ins
setno
sbb
mov
push
(bad)
not
add
dec
fdiv
shl
dec
inc
mov
movs
imul
in
mov
call
jg
sbb
push
adc
mov
jmp
icebp
and
movs
pop
or
xchg
ud1
stos
mov
xchg
sub
or
pop
stos
adc
xor
inc
add
inc
sbb
icebp
sbb
aad
cmp
cs
scas
(bad)
mov
sbb
in
push
mov
(bad)
cmc
push
lods
stos
or
outs
clc
inc
pop
jmp
hlt
jns
pop
shl
into
shl
adc
mov
jg
push
or
fstp
xlat
pop
and
mov
es
ret
adc
push
mov
ins
add
sub
leave
in
std
ret
mov
pop
dec
pop
mov
mov
xor
cmp
xor
and
ss
pop
mov
test
lea
and
pushf
addr16
add
mov
mov
push
xor
jne
cmp
xchg
push
mov
retf
xchg
(bad)
call
clc
stos
jge
cli
inc
mov
xor
cdq
jl
fsub
or
ficomp
dec
call
hlt
gs
cmp
push
loope
add
fwait
jge
jecxz
dec
push
cmp
inc
in
inc
test
push
inc
fwait
pushf
pop
out
push
test
add
nop
pop
das
jns
clc
mov
push
inc
jg
repz
cmps
cmp
inc
stos
xor
push
neg
icebp
mov
pop
pop
inc
mov
pop
nop
jb
push
inc
dec
sbb
add
ss
std
mov
shl
or
arpl
push
mov
mov
inc
inc
adc
mov
add
jne
fcomi
mov
push
into
jo
mov
bound
in
movs
aad
xchg
scas
sbb
mov
jg
adc
push
pop
and
repz
sub
pop
adc
xor
movs
repnz
jae
xor
jne
xor
(bad)
hlt
je
dec
push
call
cwde
cmps
push
adc
out
ins
out
push
(bad)
mov
arpl
repnz
in
cwde
call
add
adc
je
pop
push
pop
jo
dec
dec
lea
shl
mov
or
test
jae
cld
jae
pop
shl
jns
repz
dec
jae
retf
push
xchg
jne
pop
xchg
dec
bound
push
sbb
inc
lock
add
leave
test
dec
sbb
inc
sbb
repz
pop
push
shl
leave
mov
add
ret
lock
xchg
adc
in
xor
cmps
scas
xor
xor
pop
je
clc
or
jmp
ret
mov
adc
hlt
inc
or
loop
cmp
xor
dec
jmp
mov
ja
enter
scas
lock
jb
ds
cmp
add
sub
adc
call
lock
in
add
imul
test
imul
add
pcmpeqw
shl
aad
sbb
shl
push
lea
inc
or
jp
sbb
cmc
fnstenv
pop
sub
or
xchg
fwait
aaa
and
push
repz
scas
pop
repz
inc
inc
mov
dec
pop
push
enter
(bad)
and
movs
dec
sub
bound
enter
test
(bad)
daa
retf
lea
xchg
xchg
shl
mov
in
xchg
mov
sub
out
popf
xchg
add
sub
lods
or
scas
es
retf
iret
mov
ret
lock
loope
shr
sub
sub
push
mov
and
push
(bad)
out
sahf
sub
(bad)
mov
rol
out
in
aaa
add
aam
pop
push
and
sbb
lods
dec
lahf
pushf
daa
bound
loopne
push
push
popa
movs
push
not
(bad)
in
and
gs
inc
lds
lahf
sub
push
add
inc
cmp
dec
rcr
in
cs
mov
je
or
adc
mov
inc
cmc
jb
push
and
aas
sbb
leave
inc
add
addr16
popf
ret
retf
rcl
cld
mov
xchg
stc
sub
imul
adc
pop
push
ss
sbb
pop
add
and
call
lock
mov
cwde
mov
aaa
out
pop
and
into
pop
xchg
pop
movs
xor
jnp
xchg
inc
fmul
cmp
rcr
and
out
in
mov
mov
popf
lods
or
cld
movs
cmp
add
mov
je
jbe
and
popf
mov
fist
inc
add
inc
adc
or
jg
xor
imul
xchg
pop
icebp
adc
pop
call
(bad)
xchg
out
lahf
retf
hlt
add
xchg
mov
outs
cwde
push
mov
mov
movs
test
arpl
pushf
imul
dec
add
test
scas
mov
(bad)
fisub
ss
jne
call
or
aas
mov
repnz
ror
and
daa
xchg
cmovbe
push
imul
adc
fcomip
mov
pusha
cmps
cmp
scas
adc
enter
and
add
clc
add
shl
jae
fisttp
lahf
pop
mov
xor
jp
lds
popa
and
dec
and
push
sub
arpl
(bad)
(bad)
push
lods
dec
mov
pusha
sub
dec
xchg
pop
scas
div
cmp
pop
inc
xor
mov
pop
cmps
imul
fs
jbe
shl
pop
cmp
adc
es
scas
bound
jp
mov
push
(bad)
cmp
sbb
jo
mov
ret
iret
sub
jne
frstor
int
sahf
cmc
imul
inc
into
sahf
cmp
in
mov
cmp
mov
jmp
ins
mov
jno
sbb
gs
popf
mov
dec
enter
cmp
mov
jmp
in
jmp
or
xlat
push
call
xor
iret
movs
stos
ret
or
mov
jmp
mov
jns
push
rol
or
cs
repz
jg
xchg
pop
dec
push
(bad)
out
stc
xchg
adc
mov
mov
int
popf
and
xchg
ror
in
or
adc
das
jno
mov
loop
sbb
add
inc
adc
rcr
inc
push
dec
lds
fwait
mov
inc
into
xchg
ret
test
out
aas
xchg
mov
sti
xchg
mov
ficomp
lods
cli
xor
data16
lds
in
repz
jg
stos
imul
cs
(bad)
or
retf
sbb
xchg
jle
enter
pop
pop
dec
in
test
popf
out
daa
add
jp
lds
sbb
mov
dec
movs
xor
mov
scas
cmp
ins
sbb
icebp
iret
icebp
mov
jo
mov
sbb
in
mov
xlat
adc
xchg
inc
pop
mov
and
div
iret
pop
test
in
cmp
add
jbe
clc
mov
push
sbb
jp
sbb
mov
(bad)
sbb
pop
pop
(bad)
mov
mov
jl
dec
data16
sbb
sbb
cmp
rcl
stos
adc
and
fild
(bad)
sbb
push
outs
aad
je
imul
std
and
out
mov
push
push
hlt
mov
pop
mov
push
mov
pushf
cwde
push
inc
rol
div
dec
bound
jns
repz
mov
lock
mov
loop
aaa
jmp
xlat
jp
cmp
lahf
mov
and
dec
mov
cmp
mov
mov
xor
dec
jge
test
test
xlat
retf
or
jns
rcl
and
pop
jb
jb
push
fld
popa
xchg
ds
fstp
push
stos
aam
pop
inc
fnstcw
mov
inc
add
sbb
dec
mov
sub
out
std
sub
out
pushf
xor
repz
push
ret
push
cmps
inc
(bad)
xor
jmp
test
mov
popf
mov
mov
and
ret
fwait
or
dec
cli
add
jle
xchg
(bad)
xchg
sti
mov
enter
add
seto
bound
xor
(bad)
cmp
adc
jne
pop
cmp
mov
mov
push
push
jbe
sbb
push
cmps
sub
das
mov
sbb
jns
loopne
div
xchg
jle
push
daa
xchg
and
out
add
xor
sub
test
scas
pushf
es
cmp
test
xor
sub
(bad)
cdq
xor
pxor
cmp
loope
mov
ss
jmp
xchg
jge
cld
cmp
scas
cmps
test
fwait
stos
inc
xor
(bad)
aas
jb
ja
sub
and
fxch
push
jge
mov
psubd
dec
inc
loope
out
into
stos
out
cmp
stos
push
mov
not
(bad)
sbb
ja
add
les
outs
fmul
pop
enter
push
mov
dec
sbb
xchg
js
in
scas
mov
retf
mov
fwait
movs
test
adc
dec
pop
xchg
and
stos
push
or
mov
mov
mov
mov
scas
cmp
iret
gs
je
out
js
dec
cmp
repz
push
jecxz
jnp
jne
or
inc
xor
and
cs
push
fmul
push
loop
es
fsub
pushf
fs
or
dec
sahf
mov
push
addr16
dec
pop
loopne
popa
addr16
not
fcmovne
sub
mov
jb
push
in
jmp
fst
retf
adc
sub
sar
into
xchg
or
hlt
dec
shl
aas
or
sahf
adc
aad
push
push
mov
aam
xchg
cmp
cdq
mov
mov
xchg
(bad)
jo
stc
xchg
repnz
loop
pop
mov
inc
test
cwde
bound
and
imul
adc
icebp
fs
mov
dec
das
and
test
mov
int3
fs
stos
loopne
adc
lahf
inc
out
sti
lahf
and
pop
inc
jb
scas
sub
push
test
ds
xor
xchg
jmp
fwait
rcr
mov
cmp
push
leave
pop
bound
ins
add
js
inc
push
pop
cmp
fdivp
dec
or
and
push
fnstenv
lods
mov
and
cmps
inc
xor
in
xor
xchg
cmp
fsubr
inc
add
mov
mov
sbb
jmp
rol
cli
ret
fsubp
into
pusha
pop
mov
addr16
mov
clc
test
js
rcr
and
call
(bad)
ret
adc
push
ja
rol
loope
mov
dec
jl
fld
mov
fadd
es
xchg
adc
aad
jg
das
push
add
in
int3
ror
ja
push
hlt
mov
call
cmps
and
fcom
jbe
fld
stc
iret
aad
push
mov
push
lds
gs
pusha
xor
and
arpl
pop
pop
jns
das
mov
icebp
fbld
(bad)
xchg
inc
and
sbb
test
and
out
fimul
jns
fdiv
call
jmp
or
pusha
outs
xchg
dec
ins
mov
xor
cmps
sahf
cwde
loopne
repnz
out
sbb
cwde
ds
popf
pop
iret
pushf
call
mov
pushf
dec
sub
jno
cmps
mov
(bad)
jmp
mov
push
stos
mov
inc
sti
cmps
idiv
mov
aaa
push
scas
jmp
cdq
iret
sbb
sbb
test
cmps
push
test
sbb
cmp
pop
sbb
lods
test
sar
mov
or
sub
jae
mov
arpl
sbb
push
sbb
pop
addr16
inc
cli
dec
adc
cmp
adc
leave
pop
ins
ss
call
setge
mov
jp
and
inc
sub
fbstp
jne
push
jbe
and
call
lock
ins
cmps
pop
ret
mov
or
sub
scas
daa
lea
and
xchg
jnp
stos
sub
add
adc
jp
ins
mov
lahf
mov
lock
mov
push
cmc
inc
mov
xchg
xchg
sahf
mov
or
mov
xor
push
outs
daa
push
aad
loopne
sub
xlat
iret
lock
je
xlat
mov
shr
and
dec
loop
ret
(bad)
enter
dec
and
popa
in
mov
mov
es
aas
ss
inc
jo
jmp
and
push
jp
sbb
ins
shl
loopne
mov
and
xor
dec
xor
mov
jo
idiv
adc
push
fstp
(bad)
imul
mov
retf
enter
and
adc
call
into
cmc
cmp
jg
jns
out
jecxz
mov
jno
jl
in
data16
pop
retf
xor
(bad)
xlat
sub
in
sub
enter
adc
ret
sti
add
(bad)
cmp
repz
push
mov
add
aaa
pop
push
or
into
push
ficomp
shl
mov
(bad)
xchg
in
outs
jnp
mov
shufps
das
mov
mov
in
repnz
imul
(bad)
rcl
ss
and
shl
adc
push
lea
lods
xor
mov
xchg
and
dec
repnz
mov
popa
ja
cmps
repnz
xchg
sti
ror
cld
mov
or
and
pop
sub
jmp
std
push
add
jmp
lods
mov
lods
push
adc
dec
scas
es
and
scas
mov
(bad)
(bad)
ficomp
ret
fisttp
inc
ret
loop
lods
fdiv
cs
inc
or
and
(bad)
push
scas
pop
xchg
mov
jmp
sbb
push
les
js
jmp
pop
cs
push
cmp
dec
cwde
movs
or
sbb
fidiv
rol
fisub
ficom
sub
fdivr
mov
add
cmps
cli
imul
(bad)
and
jp
lahf
lea
leave
jecxz
add
xchg
pop
push
pop
fisub
idiv
push
dec
and
push
out
push
xchg
call
fldcw
add
jmp
test
cmp
inc
jg
lea
and
dec
push
dec
mov
ss
out
push
pop
fadd
lds
rep
inc
in
inc
add
ret
add
fld
bound
sbb
push
int3
xchg
jne
push
push
or
inc
das
xchg
cmp
mov
aam
sbb
sbb
mov
dec
push
bound
or
(bad)
xchg
lock
push
inc
and
mov
out
cdq
in
dec
nop
jmp
in
sbb
or
sahf
push
out
push
ins
and
nop
mov
add
stos
sar
hlt
js
ins
out
dec
jo
dec
jo
fwait
ins
add
cwde
add
shr
aas
ss
jmp
mov
addr16
sbb
pop
xchg
pop
sub
cmps
mov
inc
pusha
movs
das
in
call
test
mov
mov
add
sub
call
or
enter
cdq
std
add
fldcw
mov
fwait
scas
mov
push
cdq
xlat
sbb
push
cmp
fsubr
or
test
add
(bad)
adc
into
jle
daa
sbb
rcl
jle
sahf
adc
iret
cmp
scas
xchg
rol
push
test
retf
(bad)
push
pop
scas
inc
push
push
retf
inc
imul
sub
adc
lods
xchg
(bad)
in
fstp
pop
imul
dec
xchg
icebp
mov
gs
xor
pop
add
cli
pusha
adc
inc
jae
cdq
movs
mov
cmp
fnstcw
test
arpl
gs
hlt
imul
rcr
cmc
cld
sub
into
mov
fs
and
jl
imul
jecxz
and
ror
into
jo
push
mov
jmp
addr16
repnz
fst
or
jg
or
mov
xor
cdq
sub
push
ins
xor
inc
xchg
xchg
xor
adc
sub
xor
in
dec
pop
inc
xchg
sbb
scas
icebp
test
in
fisttp
leave
out
aas
inc
out
je
sbb
test
inc
and
xchg
push
fiadd
xor
cmps
dec
inc
in
adc
push
dec
jmp
mov
cmps
push
sub
xor
cmp
push
lahf
addr16
adc
scas
xor
jl
xchg
cwde
jnp
sub
test
add
mov
scas
stos
fwait
(bad)
test
loop
lds
mov
cmp
in
out
mov
inc
mov
int3
mov
pop
mov
mov
retf
data16
cdq
call
adc
sbb
call
enter
js
jmp
mov
mul
or
js
(bad)
les
imul
push
cmp
adc
es
add
mov
enter
pop
out
jl
sbb
add
inc
sbb
jmp
retf
cmp
je
sub
sub
into
leave
and
mov
(bad)
sbb
push
cld
int
xor
(bad)
pop
xor
fistp
xor
xchg
je
ins
cmc
sbb
gs
aad
retf
jecxz
dec
in
jae
movs
mov
sub
movs
adc
inc
or
cwde
aad
pop
push
loopne
push
sbb
imul
jg
jmp
pop
ret
stos
add
xor
inc
pop
test
adc
mov
out
(bad)
jns
lods
and
or
je
inc
mov
inc
and
sbb
xor
ror
jb
repz
dec
mov
(bad)
call
loop
cmps
imul
(bad)
cmc
or
jmp
xchg
movs
adc
pop
dec
mov
int3
or
inc
retf
(bad)
inc
retf
sbb
mov
pop
and
repz
scas
add
dec
fisttp
sbb
push
inc
fistp
add
add
lods
sub
fdiv
mov
nop
in
pushf
test
mov
cmp
push
xchg
mov
je
sub
dec
xchg
jb
mov
cmc
mov
out
adc
out
add
ss
call
and
and
int
das
jnp
push
xchg
cdq
add
and
cmp
mov
cli
cmp
fisttp
fidiv
inc
mov
frstor
mov
(bad)
jmp
enter
stos
mov
out
mov
lock
sub
cmp
xor
mov
jl
repnz
adc
test
cmc
loope
pop
push
aad
scas
or
fiadd
repz
jae
add
sbb
sub
jmp
out
inc
fdivr
xor
ret
out
push
xor
fcom
xor
or
cmp
mov
mov
jge
xor
jbe
xchg
push
lods
pushf
(bad)
mov
out
popf
ret
xchg
stos
stc
or
in
mov
pop
bound
lods
call
add
out
mov
xor
cmp
jne
enter
call
dec
mov
mov
adc
imul
push
sbb
xchg
pop
out
or
stos
pop
dec
cli
ror
sub
inc
push
adc
outs
sub
cmp
gs
and
iret
add
lahf
pop
cli
iret
cwde
int
sbb
int
xchg
and
push
mul
mov
jb
ss
pop
call
lea
cs
popf
inc
or
add
js
ins
lahf
sbb
(bad)
in
test
mov
push
stos
and
adc
xlat
push
int3
push
imul
aad
ins
mov
push
mov
sbb
push
jp
repz
test
scas
fs
add
fdivr
and
and
dec
test
adc
lods
or
(bad)
mov
sub
aad
ret
shl
cmp
fs
rol
pushf
mov
cmc
sbb
pop
jecxz
and
mov
mov
xchg
xor
aam
loop
aaa
dec
pop
push
jnp
dec
iret
adc
dec
fst
out
sbb
(bad)
jno
cmp
pop
push
adc
sub
xchg
mov
or
out
sub
mov
repnz
xchg
xchg
aam
not
outs
sahf
lock
mov
and
cmp
imul
(bad)
lock
imul
imul
and
out
les
retf
xchg
cmp
pop
loop
retf
dec
push
out
or
cdq
test
sar
loope
fist
out
fs
push
stos
adc
es
into
xlat
(bad)
ss
mov
nop
cmp
jl
jmp
sbb
dec
or
stc
ins
and
push
cmp
lock
out
loope
fidiv
xchg
neg
push
push
mov
push
cmp
mov
rcr
sub
sub
loop
cmp
fdiv
inc
imul
psadbw
in
mov
mov
add
pop
(bad)
adc
shl
shr
ds
xor
sahf
jne
jmp
inc
jmp
inc
xchg
push
cmp
xchg
cmp
int3
hlt
jno
push
test
sub
call
bound
sub
lods
sbb
cmc
fmul
test
ret
sub
repnz
hlt
lods
sti
sub
add
test
outs
rol
cld
xchg
ins
pop
dec
jmp
add
sti
xor
or
retf
cmp
lods
(bad)
loopne
inc
out
xchg
in
fs
call
imul
scas
jmp
mov
sbb
xlat
cmp
stos
cwde
jns
mov
add
jno
inc
outs
sub
add
pop
addr16
mov
mov
leave
xchg
xchg
jle
fdiv
lods
push
and
inc
out
sbb
dec
cmc
test
push
pop
stos
xchg
dec
sar
pop
clc
std
retf
imul
out
daa
leave
mov
movs
mov
add
imul
push
cld
fiadd
mov
adc
cmp
out
popa
inc
repnz
jmp
aam
div
sub
push
add
loope
es
add
push
cmp
ins
mov
sbb
inc
cmps
fwait
xor
popa
pop
repz
push
in
dec
adc
out
shr
mov
mov
mov
dec
xchg
sbb
sbb
shl
dec
les
call
dec
and
nop
(bad)
icebp
into
imul
out
enter
cmp
sbb
mov
test
ss
and
ins
retf
adc
jno
psubq
xchg
aas
jle
add
jns
adc
xor
lea
out
push
inc
in
sbb
push
jmp
cmps
mov
sti
icebp
sub
or
mov
loop
ret
mov
mov
push
or
add
jae
call
cmp
bound
nop
or
xor
out
in
xor
jle
jecxz
or
(bad)
in
jle
mov
pop
xor
inc
pop
mov
sub
push
test
mov
inc
mov
mov
das
sbb
xor
inc
ds
mov
ret
mov
pop
test
jne
leavew
sbb
imul
arpl
dec
push
js
sub
jecxz
jbe
out
jmp
loope
cmp
stc
je
adc
jbe
xor
fld
push
pop
shl
xchg
xor
stos
pop
ins
cmp
push
mov
xor
cmp
pop
call
and
retf
mov
repnz
cmp
cmp
fadd
and
lock
or
sub
or
arpl
xor
jmp
in
jae
push
dec
scas
test
push
popf
das
push
sbb
add
cmp
pop
dec
add
daa
mov
jno
mov
mov
jnp
mov
(bad)
out
inc
leave
jge
icebp
push
or
(bad)
fdiv
arpl
mov
jle
call
leave
xor
cs
fstp
jno
mov
mov
mov
xchg
sbb
pusha
je
cmp
add
dec
mov
ret
adc
mov
lods
bnd
jp
in
mov
xor
aam
lahf
and
push
sbb
call
pop
call
or
retf
pop
nop
les
sar
test
fwait
cmp
and
adc
idiv
(bad)
fiadd
pop
ss
jmp
lods
add
add
xchg
mov
je
(bad)
mov
sub
(bad)
xchg
sub
pop
pushf
les
les
push
adc
adc
cmp
push
xor
mov
data16
sub
add
sub
inc
sti
aad
es
and
movs
xchg
fwait
xor
cmp
mov
out
push
cld
outs
hlt
push
and
add
jnp
jnp
mov
xor
cmp
jo
jnp
cmp
shl
aad
adc
mov
jae
mov
pop
inc
push
or
loopne
mov
jg
iret
ins
add
jae
mov
jmp
ins
xor
ficom
mov
arpl
or
scas
outs
or
push
add
les
xor
xor
mov
sbb
push
js
je
ficomp
(bad)
dec
ja
push
cwde
data16
adc
mov
std
addr16
ficomp
mov
lea
add
inc
ins
dec
ror
outs
xchg
addr16
out
mov
or
vpcmpgtd
cmp
jns
xchg
fsub
mov
sub
xchg
pop
iret
sbb
jge
(bad)
fs
fwait
xor
jmp
push
(bad)
xlat
pop
push
(bad)
mov
push
push
mov
into
ror
cmp
test
in
push
test
rol
pop
jns
imul
rol
adc
cmp
stos
fst
movs
mov
xchg
test
ret
imul
es
add
sbb
mov
dec
pop
xchg
fdiv
fnstcw
xor
movs
inc
sub
and
lea
(bad)
lock
js
ja
pop
sub
lods
adc
xchg
pop
daa
in
and
loop
fbstp
xor
sub
push
icebp
xchg
(bad)
mov
in
fsubr
mov
and
inc
aaa
iret
adc
ins
out
(bad)
fisttp
rcl
lea
ds
ins
(bad)
dec
fisttp
xlat
push
cmp
dec
ja
ins
scas
les
cmps
cmp
sar
outs
jae
scas
(bad)
ficomp
fwait
jecxz
test
test
xchg
aaa
adc
pop
sub
jns
xor
pop
cmp
mov
sub
jmp
push
test
(bad)
sbb
dec
adc
fisubr
push
push
inc
pop
std
fwait
mov
push
pop
xchg
cs
out
add
add
add
in
mov
ret
ret
xor
nop
hlt
fiadd
jae
aam
clc
inc
jl
sbb
sub
jno
pop
xor
jb
retf
int3
or
push
in
das
mov
sub
and
jle
add
jnp
daa
je
call
jecxz
dec
push
(bad)
fcom
js
sub
sahf
mov
movs
inc
std
pop
sub
pop
pop
pushf
repz
inc
lods
dec
xchg
jg
mov
mov
aaa
bound
mov
push
ins
cmc
push
ficom
(bad)
in
rcr
jmp
adc
dec
sbb
shl
push
jbe
call
add
mov
cmc
inc
push
cmp
or
mov
jne
fsin
adc
fidiv
sbb
sub
test
ja
das
dec
jbe
sahf
or
bound
loop
sar
sub
sub
and
dec
bnd
sub
sar
sbb
(bad)
xchg
lods
(bad)
push
inc
or
and
jns
sbb
jbe
pop
inc
mov
scas
arpl
push
into
rol
jb
(bad)
sub
enter
push
mov
in
sti
jmp
in
test
xchg
ds
inc
neg
push
push
jmp
loopne
cmp
dec
jle
data16
mov
jg
push
adc
je
(bad)
cmps
sahf
arpl
cli
mov
gs
pop
jecxz
or
sub
xor
jmp
add
in
dec
sub
ret
fild
mov
loop
cdq
jb
das
ja
push
movs
or
jo
add
cmc
add
repz
in
or
jae
xor
rcl
pop
mov
jne
repnz
push
test
or
loope
das
(bad)
clc
nop
jle
stc
imul
in
out
in
and
mov
out
dec
mov
ins
pop
sbb
xchg
and
lahf
popf
leave
daa
test
jno
push
push
mov
and
pushf
popa
or
push
cmp
into
pop
cs
lahf
jb
clc
add
fsubr
mov
adc
inc
xchg
xor
lods
aad
enter
neg
add
cmp
inc
mov
sbb
mov
ja
ror
movs
or
push
fstp
mov
inc
clc
pop
loopne
mov
fiadd
cdq
lds
movs
cmps
sbb
(bad)
push
inc
scas
fwait
sbb
sbb
es
push
lds
lods
adc
mov
pop
inc
push
pop
nop
scas
out
or
dec
push
dec
shl
sub
mov
mov
imul
sbb
stc
add
out
fisub
sbb
mov
or
test
aad
dec
addr16
out
xor
or
push
xor
xor
(bad)
sti
test
js
dec
hlt
das
call
jmp
cmp
ret
xchg
popa
(bad)
retf
mov
shr
ins
and
popa
pop
es
or
pop
test
call
dec
adc
adc
aaa
inc
aaa
sub
xchg
and
cs
push
pop
fmul
test
imul
mov
jp
rol
not
xor
shl
xchg
std
neg
xchg
inc
test
stos
push
test
xchg
mov
xchg
xchg
test
add
dec
push
xchg
xor
fidivr
push
mov
enter
and
add
jp
sbb
xchg
out
fbstp
fimul
pop
xchg
scas
push
ret
jle
sub
mov
push
popf
dec
fimul
or
fs
dec
pop
clc
dec
dec
dec
or
stc
adc
xor
cmp
rcl
stos
mov
scas
(bad)
mov
(bad)
adc
or
test
inc
jmp
push
and
pop
xchg
push
lods
push
adc
lods
iret
jle
mov
and
mov
mov
jmp
rcl
jno
fnstcw
jge
out
lea
inc
jmp
cmps
or
jnp
ja
scas
fild
stc
mov
mov
icebp
mov
push
movs
mov
popa
in
div
or
cmp
js
cld
sbb
jo
neg
add
xchg
push
movs
clc
mov
test
sbb
push
lock
repz
sbb
test
xchg
mov
int
dec
out
lods
fs
sub
dec
xor
cs
js
jmp
xor
cmp
mov
fidivr
xchg
pop
sbb
fs
xor
push
pusha
iret
enter
int
sbb
mov
sub
and
adc
test
aam
inc
mov
retf
push
popa
pusha
add
pop
(bad)
sti
xor
mov
mov
or
add
fcomi
or
das
sub
cs
test
fidiv
xor
fidivr
jo
clc
jo
outs
xchg
mov
ret
mov
dec
in
mov
jg
pop
iret
jle
cmp
ret
je
bound
cwde
fdiv
and
das
adc
pusha
pop
in
and
mov
mov
outs
adc
pop
nop
(bad)
movs
fld
mov
stos
push
add
inc
mov
leave
adc
scas
pop
in
pop
sbb
int
pop
xchg
sub
in
out
ins
aad
shr
es
mov
mov
pushf
loope
jge
add
aad
cmp
or
retf
dec
(bad)
mov
and
mov
and
(bad)
icebp
or
lock
pop
mov
stos
in
xchg
pusha
rcl
iret
imul
jmp
std
jb
adc
inc
lods
push
fcomp
cmp
es
faddp
inc
adc
sar
mov
or
iret
mov
and
lds
call
jno
into
cmc
inc
pop
xchg
sub
stos
mov
shl
leave
and
iret
adc
dec
mov
fbstp
in
xor
or
xor
xor
ins
dec
imul
repnz
je
or
stc
and
adc
mov
dec
mov
add
rol
add
mov
dec
jp
(bad)
stos
pop
sub
pop
inc
lds
sti
sub
mov
mov
mov
push
xchg
jns
xor
popa
sbb
xchg
mov
in
add
or
inc
(bad)
(bad)
jl
gs
popf
sub
pop
mul
xchg
sbb
fild
(bad)
aaa
jg
sub
push
mov
jg
fisttp
jo
mov
xor
imul
mov
ins
sbb
pop
out
es
sbb
es
xor
jl
pop
pop
scas
pusha
cwde
pop
(bad)
fidiv
xor
shr
push
or
jg
fdiv
dec
inc
dec
jbe
imul
clc
inc
rol
pop
pop
lea
lds
xlat
xchg
push
enter
dec
(bad)
popf
push
icebp
pop
sub
outs
cmp
lds
mov
mov
fcmovb
pop
adc
(bad)
sbb
inc
call
je
call
xchg
(bad)
adc
daa
dec
fdivrp
popf
(bad)
(bad)
sbb
loopne
add
nop
mov
jg
sub
sbb
push
addr16
(bad)
mov
cwde
mov
adc
push
add
and
ret
frstor
xchg
xchg
jb
dec
mov
lahf
loope
add
add
mov
jp
sub
jle
adc
jae
mov
aaa
fsub
and
stos
sbb
(bad)
adc
dec
fst
cwde
dec
cmp
jae
mov
or
mov
push
in
repnz
xchg
add
pop
or
bound
icebp
popf
and
xor
shr
mov
and
nop
movs
xchg
lock
cld
test
dec
sub
fsubr
iret
mov
not
sbb
loopne
in
inc
adc
xchg
mov
mov
mov
xor
retf
fwait
sbb
inc
adc
lea
(bad)
fsubr
mov
inc
(bad)
xor
mov
dec
les
je
hlt
pop
sub
push
mov
sub
stc
call
jge
adc
rcr
lahf
push
cmp
stos
adc
mov
or
push
and
fsubr
les
addr16
rsqrtps
lock
into
jge
sbb
fcmovnbe
push
sbb
sbb
mov
jge
and
(bad)
mov
push
hlt
iret
scas
ss
pop
xchg
pop
add
sbb
(bad)
(bad)
cmps
mov
pop
pop
pop
in
push
mov
aad
jne
mov
inc
inc
in
call
retf
rcl
mov
inc
cmp
add
dec
loope
or
xor
inc
cli
push
sub
xor
push
push
mov
xchg
jl
jmp
cdq
mov
jg
imul
nop
scas
mov
sahf
(bad)
adc
xchg
rcl
cmp
mov
sbb
inc
jmp
(bad)
ficomp
loop
xchg
dec
push
xor
lea
scas
push
push
xor
pop
fs
push
movs
mov
mov
into
icebp
shl
aas
pop
add
test
adc
cmp
imul
scas
mov
sub
xchg
or
(bad)
pop
xchg
outs
stos
repz
mov
push
out
ret
mov
cmp
mov
loope
inc
push
mov
in
(bad)
cmc
jg
daa
cmps
xor
cmps
movs
dec
add
test
jno
pop
je
in
test
sbb
stos
inc
push
inc
or
inc
call
int
push
pusha
mov
sub
add
sahf
fcmove
fld
cmp
loopne
dec
sub
dec
mov
jle
or
leave
push
xlat
outs
push
loopne
in
sbb
push
pop
dec
mov
push
in
mov
inc
pop
mov
adc
mov
and
push
mov
bound
inc
lods
rcr
mov
sub
ins
jbe
and
lods
repnz
sbb
xchg
call
mov
aaa
sbb
adc
xchg
repz
sar
add
push
inc
or
pop
fs
movs
leave
and
repnz
xchg
cs
pop
or
sub
ds
mov
out
out
into
ror
sbb
xchg
(bad)
and
repz
cmps
mov
mov
cmp
test
retf
sti
push
rcl
es
pop
mov
int3
ja
sub
int3
shr
imul
lods
stc
outs
push
and
adc
jns
(bad)
hlt
js
inc
mov
call
cwde
fcomp
bound
aas
inc
cmp
cmp
jl
push
push
xor
cmp
push
nop
aad
fbld
xlat
mov
shr
mov
xor
xchg
(bad)
aam
call
jp
in
outs
mov
daa
jns
cmp
(bad)
lahf
jo
jbe
jmp
pop
(bad)
(bad)
addr16
or
mov
jno
movs
xchg
rcl
ret
test
sub
ss
mov
mov
iret
dec
aaa
push
test
mov
int3
inc
mov
pop
clc
jle
jg
xchg
and
push
jp
fisubr
xor
dec
sbb
push
or
mov
neg
in
aad
jle
cmc
dec
int3
std
mov
loope
rol
(bad)
fnstcw
clc
cmps
mov
mov
jbe
cmp
adc
fidiv
call
push
(bad)
adc
aam
jl
scas
mov
jns
pop
adc
xchg
jae
enter
(bad)
stos
cmp
or
pop
mov
xor
adc
jge
pop
add
adc
arpl
and
jo
mov
arpl
jno
inc
iret
mov
pop
mov
mov
lea
mov
xchg
out
xchg
or
mov
dec
inc
in
xor
mov
cwde
movs
mov
and
in
(bad)
in
or
retf
hlt
cwde
push
mov
fsub
sbb
daa
mov
mov
inc
call
adc
out
xor
push
jns
and
cli
repz
(bad)
popf
jmp
movs
cmp
adc
fwait
xor
push
lea
pop
or
je
ss
xchg
(bad)
cli
imul
mov
inc
les
inc
int3
mov
mov
dec
pop
or
add
int3
push
in
pop
call
push
cmc
mov
inc
sbb
jb
mov
pop
push
fmul
and
(bad)
sbb
cmps
dec
in
jg
add
and
shl
xchg
jne
(bad)
jmp
repnz
retf
hlt
sub
or
aas
call
mov
addr16
push
inc
xchg
aas
mov
aaa
(bad)
js
je
cmp
or
stos
mov
scas
xchg
(bad)
pop
lahf
mov
rol
xchg
rcr
pop
out
push
pop
jmp
leave
push
nop
popf
gs
aad
adc
cmp
and
lods
mov
call
lea
test
push
inc
iret
arpl
add
mov
jmp
ja
jl
jbe
pop
loopne
ins
push
retf
adc
cmp
loop
pop
mov
sbb
push
inc
jge
loop
je
shr
and
stos
test
add
mov
mov
daa
aam
jbe
out
sub
int
jp
aad
xlat
pop
cld
fld
xchg
mov
ror
cmp
inc
movs
jecxz
mov
xchg
dec
imul
sbb
mov
sahf
pop
jle
jo
or
xor
or
pop
movs
sbb
xchg
adc
pop
inc
mov
mov
mov
jmp
cld
(bad)
leave
(bad)
add
sbb
stos
hlt
xchg
xor
leave
(bad)
out
sti
sub
ins
stos
xchg
lods
mov
jmp
retf
or
fwait
jbe
iret
sbb
(bad)
imul
sub
and
retf
ficomp
dec
push
mov
add
mov
and
inc
int3
(bad)
les
push
clc
stos
and
push
loopne
addr16
jb
pop
fst
xchg
pop
mov
jne
lods
xchg
movs
cs
into
adc
(bad)
inc
imul
aad
xchg
push
cli
or
leave
sub
pop
jp
dec
sbb
stos
inc
jmp
mov
movs
in
jl
xlat
loope
aaa
mov
int
data16
lock
into
std
test
es
lock
mov
mov
xor
shl
jb
push
jge
daa
cwde
imul
jbe
cdq
and
(bad)
jo
daa
in
addr16
xor
inc
sahf
jo
cmp
stc
push
shl
repz
sbb
repz
pusha
xor
lods
jl
mov
or
mov
cwde
xchg
movs
or
mov
into
(bad)
inc
push
xor
imul
nop
push
mov
mov
adc
jmp
or
pop
jne
ins
pop
ret
sub
les
push
stc
pop
add
imul
loopne
pop
fs
pushw
movs
push
mov
and
push
or
call
sbb
fsubr
sti
xchg
(bad)
je
aaa
mov
pop
fsub
adc
fistp
cld
mov
mov
fidivr
xchg
icebp
rol
pop
or
dec
mov
sub
sub
popa
jb
inc
cli
imul
inc
push
jb
mov
cmp
mov
inc
mov
mul
sbb
test
aas
(bad)
push
retf
xor
sar
popa
out
dec
or
xlat
imul
scas
push
scas
pop
cmps
(bad)
sbb
(bad)
ret
enter
cdq
mov
pop
push
lock
mov
stos
jge
daa
or
addr16
(bad)
xor
shr
in
jo
repz
std
repnz
jp
or
out
xchg
add
inc
test
xor
dec
inc
jbe
outs
cmp
cdq
adc
jmp
clc
scas
mov
sbb
das
scas
pop
cmp
dec
jo
fyl2x
cli
mov
daa
retf
sub
neg
lea
push
adc
hlt
scas
adc
popa
test
jnp
sbb
sub
adc
add
or
pusha
adc
or
mov
popf
inc
dec
lods
repz
xchg
push
push
mov
cmp
lds
cld
jo
push
enter
movs
push
movs
xlat
fimul
es
push
adc
fst
cmp
popa
enter
sbb
outs
clc
add
mov
aas
xor
xor
xchg
(bad)
push
out
ret
call
lea
add
ret
outs
cmps
arpl
arpl
enter
cmps
inc
out
sbb
push
lds
stc
rcr
ret
popa
jle
enter
push
pop
push
jbe
iret
add
ins
jmp
rol
outs
out
dec
loope
sbb
pop
xchg
jl
pop
into
adc
mov
das
inc
mov
das
leave
add
dec
fadd
lods
sbb
lods
out
js
pop
ja
xchg
dec
call
ret
call
inc
mov
ret
outs
push
imul
jg
jg
jmp
dec
cs
adc
inc
pushf
neg
test
pop
cmps
mov
jmp
push
sahf
or
in
mov
sar
pusha
or
push
aas
mov
mov
mov
lds
int3
jmp
arpl
lea
cwde
aas
cmps
inc
mov
mov
retf
xchg
xlat
mov
mov
mov
in
pop
mov
adc
shr
out
or
imul
or
add
int3
adc
dec
int3
mov
adc
fst
cmp
mov
push
nop
sahf
in
pop
movs
mov
jmp
inc
hlt
xchg
xchg
inc
loope
mov
push
sbb
push
xchg
mov
div
push
shr
stc
cmp
and
repz
imul
jb
div
add
(bad)
mov
push
jae
test
jle
movs
push
test
inc
shr
out
nop
jg
movs
fwait
xchg
(bad)
fnstcw
add
xlat
jmp
add
popa
std
fst
(bad)
call
pop
adc
mov
stc
mov
popf
repnz
stos
dec
stc
mov
sub
xor
xlat
sbb
rol
hlt
mov
mov
jecxz
adc
pushf
adc
sub
xor
push
movs
lds
xchg
rcl
ret
std
out
jo
addr16
xor
inc
pop
test
int
pop
movs
jbe
mov
push
mov
push
inc
(bad)
gs
popa
fcmovnbe
clc
inc
mov
sbb
xchg
sbb
sahf
sub
mov
or
adc
pop
push
push
popa
(bad)
mov
aaa
mov
mov
sub
dec
or
push
push
add
xor
pop
aam
aaa
xor
stc
pop
adc
inc
out
inc
stos
jge
sbb
ins
sbb
je
mov
outs
or
sbb
mov
out
call
mov
adc
push
lock
mov
gs
inc
sahf
cmp
(bad)
cs
mul
out
into
adc
cmp
int3
xchg
cmp
mov
hlt
std
mov
mov
mov
mov
mov
inc
adc
or
ins
call
pop
imul
inc
xor
rcr
hlt
fst
adc
rcl
xchg
push
mov
dec
and
push
leave
ficomp
xchg
cmp
jbe
lahf
and
push
es
or
mov
sub
sub
push
dec
sbb
pushf
sbb
leave
jo
retf
jb
mov
mov
lds
dec
push
out
or
pop
mov
test
repnz
(bad)
ret
cmp
in
sahf
les
nop
cwde
ds
mov
sub
lea
ins
and
inc
les
sbb
mov
cmp
outs
cmp
jle
loop
mov
mov
int3
pop
test
pushf
in
(bad)
call
leave
shl
stos
cwde
mov
aad
ins
fbstp
mov
sti
adc
std
movs
stos
scas
cmps
and
cld
mov
xchg
in
sub
push
and
mov
pop
retf
mov
je
fcomp
aaa
jne
fidiv
add
(bad)
(bad)
pop
in
mov
(bad)
mov
lock
popf
mov
xchg
add
mov
cmp
mov
xchg
xor
pop
adc
xchg
jns
mov
sub
rol
jmp
aaa
sbb
mov
ins
aas
es
cmp
lods
mov
add
(bad)
out
mov
icebp
in
mov
xchg
jo
xchg
jge
xchg
iret
dec
fild
inc
cs
cmp
mov
loope
int
bnd
ins
cs
push
out
mov
mov
scas
push
mov
or
lea
inc
add
dec
stc
(bad)
retf
rcr
cmp
(bad)
call
cmc
ret
das
mov
ds
dec
or
and
ss
xlat
dec
inc
xchg
xor
fdivp
(bad)
js
add
sbb
int
std
fbstp
dec
push
pop
mov
and
xchg
jle
repnz
mov
add
jp
fistp
dec
xor
loope
shr
mov
jnp
xor
rcr
sub
mov
aam
fcomi
xor
mov
test
mov
ins
cs
add
cmp
sti
bound
jnp
dec
hlt
jp
push
clc
loopne
jle
sar
sbb
mov
dec
or
mov
fmul
inc
lock
xor
xchg
sbb
dec
adc
aam
or
div
xchg
xchg
ins
loope
mov
jp
pop
mov
jns
inc
jns
outs
std
call
(bad)
adc
cmps
int3
push
xor
push
sbb
lock
dec
out
es
mov
sub
pop
aaa
loop
adc
aaa
call
or
cmp
sahf
jp
dec
jg
xchg
pop
nop
mov
pop
cmp
cmp
daa
push
fstp
pusha
mov
div
pop
dec
adc
inc
push
aam
repnz
loopne
pop
jae
stos
sbb
push
loopne
mov
popa
(bad)
cmp
pop
add
xchg
arpl
jp
iret
mov
xor
pusha
daa
adc
push
fs
jno
test
lods
fmul
aam
imul
sub
cmps
mov
out
leave
xchg
sbb
in
mov
push
cmc
jg
add
sti
xor
sub
jne
out
xchg
outs
push
push
dec
movs
hlt
outs
dec
(bad)
enter
dec
ror
or
mov
cmp
int
dec
jae
addr16
fld
mov
js
and
mov
aad
xchg
sub
mov
enter
adc
add
(bad)
xor
pop
xchg
xor
mov
push
cmp
retf
sbb
out
cdq
cmps
mov
cld
fsubr
sbb
sbb
pop
sub
test
loope
xor
jmp
lahf
(bad)
jl
mov
xchg
pop
fwait
pushf
aaa
mov
nop
sub
xor
mov
retf
outs
loope
push
or
in
stc
popa
pushf
inc
jle
and
pop
sbb
outs
mov
dec
enter
mov
jp
push
xchg
xor
ret
jb
mov
push
pop
dec
lea
les
jns
dec
or
fnstenv
sub
inc
fist
into
outs
sbb
dec
or
sbb
fist
xchg
jle
fxch
(bad)
cli
dec
mov
(bad)
mov
or
stos
imul
les
les
rcr
cmp
or
imul
neg
sahf
mov
mov
addr16
cmc
imul
repnz
hlt
xchg
cmps
inc
pushf
and
sub
cmp
xor
ret
clc
mov
in
dec
inc
jmp
pushf
loope
pop
movs
mov
jnp
ror
sub
pop
fwait
jle
jle
jno
sbb
mov
push
dec
jl
data16
fcmovnbe
jmp
or
jo
jbe
je
leave
mov
out
sub
inc
imul
sub
pop
call
sbb
jmp
or
or
test
xchg
movs
mov
cmp
mov
xor
les
imul
or
arpl
hlt
and
sbb
mov
xchg
retf
outs
ret
stc
loop
jle
push
push
xchg
aad
cli
mov
cwde
mov
xchg
sub
push
sub
cmp
iret
xchg
or
sub
sub
lods
sahf
push
repz
mov
test
add
retf
outs
mov
lds
gs
test
add
imul
in
jne
sub
mov
push
xchg
mov
mov
out
mov
sbb
fldenv
sar
mov
mov
mov
or
xchg
mov
mov
mov
int3
bound
dec
adc
mov
sbb
clc
push
cmps
or
pop
sbb
icebp
mov
sub
adc
dec
sub
xor
add
das
pop
icebp
jp
stc
dec
ds
cmp
lahf
pop
pop
mov
or
ret
mov
jg
sub
ret
sub
push
fiadd
pop
fbld
xchg
out
dec
mov
jmp
pop
out
mov
arpl
fs
enter
mov
adc
mov
jl
int3
sbb
movs
fld
push
rcr
xor
mov
ja
mov
and
push
add
pop
cmp
xchg
call
xchg
nop
cmp
sbb
xor
imul
adc
mov
push
jnp
push
adc
mov
sub
sbb
sub
lahf
and
mov
stc
out
or
cwde
stos
mov
cmps
xor
stos
or
mov
fmul
mov
aas
or
mov
push
in
add
nop
in
inc
xor
jo
and
loopne
cmc
sbb
int
not
scas
fst
push
xchg
scas
(bad)
mov
ret
aas
loop
lods
repz
pop
arpl
mov
jnp
pop
cdq
sbb
sahf
sub
mov
data16
addr16
loop
shl
jecxz
jno
push
aas
cmps
sbb
aaa
push
(bad)
dec
dec
scas
fcom
rcl
sub
xchg
xor
frstor
shr
dec
leave
addr16
sti
dec
fwait
or
dec
mov
mov
mov
pop
mov
xor
loop
dec
fs
jle
xchg
out
stos
jle
dec
ss
ret
cwde
mov
xor
ret
(bad)
leave
jecxz
dec
mov
fcomp
xor
cmc
push
inc
jp
mov
adc
inc
push
xor
mov
cmp
les
add
pop
(bad)
int3
or
ins
jns
adc
mov
mov
or
sub
shr
add
cld
pop
(bad)
xchg
push
sub
jl
retf
movs
and
pop
daa
out
(bad)
pop
dec
aaa
fstp
inc
retf
mov
add
adc
(bad)
and
push
das
lods
dec
das
daa
ret
jo
and
cmp
pop
push
nop
add
sub
mov
test
daa
dec
cmp
pop
inc
pop
add
rol
jle
ja
sbb
ja
add
ret
mov
cmp
xchg
xlat
and
in
mov
cmp
cmp
sbb
xchg
pop
pusha
dec
mov
dec
push
shl
push
jbe
adc
jmp
jne
sahf
je
xlat
pop
(bad)
out
shr
xchg
call
pop
or
cmp
or
sahf
fild
(bad)
in
(bad)
push
jle
mov
inc
(bad)
call
fdivr
call
dec
mov
inc
lock
xchg
fisttp
in
xchg
pop
sbb
mov
loopne
and
inc
cli
pop
test
dec
test
or
cmp
call
cld
push
data16
popa
addr16
push
mov
push
outs
lods
call
scas
inc
push
xor
loope
cmp
add
push
push
ins
mov
inc
dec
jns
ja
inc
jg
inc
mov
sub
mov
push
mov
or
pop
sub
outs
jae
out
add
out
fmul
mov
jmp
mov
mov
out
iret
xor
shl
mov
(bad)
loope
pop
push
or
and
(bad)
(bad)
jmp
pop
call
xchg
inc
cli
dec
mov
(bad)
fwait
stos
aad
push
bound
pop
push
jmp
es
xchg
(bad)
ret
aad
push
pop
push
push
ret
inc
dec
mov
loopne
mov
inc
push
push
daa
test
scas
xor
mov
dec
scas
loope
lahf
adc
jo
push
in
test
push
jl
push
imul
adc
mov
arpl
xchg
int3
test
xchg
xchg
and
shr
aaa
es
and
aas
add
pop
push
xor
or
retf
pop
xchg
mov
pop
movs
(bad)
fbstp
stos
icebp
in
inc
je
in
and
push
pop
pop
inc
leave
fbstp
mov
jge
push
scas
jno
mov
pop
ret
mov
aaa
adc
add
jg
test
mov
popa
ss
mov
(bad)
les
push
inc
xor
adc
sub
inc
inc
gs
rcl
(bad)
jg
pop
and
xchg
ins
cld
cmp
jecxz
xchg
aam
cmps
mov
mov
adc
sysexit
icebp
xchg
sbb
push
out
ds
(bad)
pop
pop
add
push
cld
loopne
cmp
pop
add
push
jb
jnp
pop
pop
xor
out
lea
(bad)
or
push
pop
std
outs
xor
addr16
movs
(bad)
in
jne
(bad)
dec
add
mov
dec
jg
push
cmp
dec
pop
dec
pop
int
mov
repz
pop
pop
lods
popf
mov
les
outs
fistp
gs
and
sbb
in
retf
les
sub
aas
scas
call
pop
in
aam
push
arpl
sbb
mov
mov
inc
pop
in
jns
jns
popa
rcl
jmp
push
sbb
mov
es
shr
cmp
std
mov
mov
cmp
(bad)
in
retf
cdq
pcmpeqb
int
scas
add
ret
hlt
mov
pop
(bad)
fsubr
cmp
in
mov
sub
mov
ret
ds
loopne
lods
sbb
or
rcr
sahf
sub
sbb
arpl
(bad)
push
sbb
jnp
and
(bad)
pop
jns
stos
and
arpl
sub
repz
sub
(bad)
fdiv
setnp
xchg
std
cmp
fdiv
mov
cmp
scas
test
pop
xchg
in
inc
jb
xor
ds
in
outs
mov
lds
sbb
sbb
iret
sbb
movs
test
mov
jae
xchg
jno
xor
shl
in
jp
mov
call
sbb
pop
xchg
mov
dec
fidivr
loope
dec
inc
mov
outs
jl
fnsetpm(287
adc
(bad)
mov
cmp
jbe
mov
lock
(bad)
cmpxchg
popa
sbb
in
pop
inc
xlat
sbb
repz
mov
dec
imul
pop
mov
jb
sub
dec
adc
mov
iret
push
mov
call
dec
mov
movntps
mov
pop
retf
adc
cmp
cmp
iret
pop
mov
icebp
jb
fcomp
jmp
cmp
jo
ss
shl
in
dec
xchg
fwait
(bad)
cld
jp
pop
(bad)
xchg
lods
sub
mov
adc
out
mov
mov
(bad)
in
icebp
xchg
dec
pop
mov
mov
sti
and
pop
xor
cdq
sbb
in
or
(bad)
jae
and
out
add
xchg
sub
dec
jmp
aad
cmp
cdq
inc
push
sub
out
push
hlt
test
xchg
push
push
(bad)
pop
pop
bound
or
lahf
jmp
mov
add
imul
sbb
or
mov
ds
jge
sub
push
in
(bad)
ins
test
mov
neg
(bad)
bound
ss
mov
jb
ins
pop
fdivr
jmp
mov
or
and
jle
data16
ret
pop
xor
in
dec
loop
add
ins
pop
mov
jl
adc
out
jb
mov
fs
lods
cdq
pop
retf
cwde
ud2
mov
inc
mov
sub
jmp
push
aam
mov
fcomp
mov
in
sbb
sbb
shl
mul
mov
dec
push
inc
out
sub
outs
sbb
popa
add
cmp
fst
dec
pop
push
shl
pop
inc
inc
pop
adc
cmps
mov
adc
aas
pop
cmps
and
mov
jae
add
mov
neg
xchg
stc
or
pop
jmp
mov
jbe
retf
jne
gs
mov
push
(bad)
dec
mov
push
in
push
xchg
add
ret
xchg
sub
adc
mov
in
in
or
(bad)
fcomp
pop
lahf
mov
pop
ret
jno
and
dec
or
scas
adc
les
addr16
stc
add
imul
pop
mov
ret
adc
xchg
mov
retf
push
xlat
scas
and
or
xchg
jae
pop
pop
ins
inc
aam
or
dec
hlt
sbb
rep
repz
mov
aad
mov
iret
enter
iret
adc
mov
mov
cmps
xchg
push
imul
jmp
lahf
arpl
idiv
and
mov
cmp
and
retf
or
pop
mov
frstor
sub
cmc
sub
ret
imul
pop
inc
(bad)
cmps
mov
mov
add
ret
adc
into
(bad)
je
mov
adc
xchg
push
test
push
pop
repz
(bad)
retfw
push
cmp
dec
ds
sahf
test
adc
movs
sbb
jg
cmps
inc
popa
adc
adc
ss
push
aaa
dec
movs
adc
je
dec
pop
popa
psllq
push
clc
ror
aam
sub
fmul
test
adc
and
pop
daa
jnp
cs
cs
(bad)
div
xor
mov
sub
jne
sbb
pop
adc
fs
jo
loope
das
mov
push
jnp
retf
fdivr
add
push
aas
jecxz
xchg
jbe
(bad)
xor
dec
jg
adc
imul
jnp
or
xor
clc
cld
fs
inc
adc
rol
call
int3
xor
lds
imul
in
sbb
push
inc
or
aad
sahf
xchg
xchg
add
in
inc
and
sahf
xlat
jmp
adc
sub
sbb
mov
jge
cmp
ins
nop
mov
push
imul
repz
push
sub
dec
cwde
and
mov
inc
cmp
push
mov
mov
nop
loop
jp
scas
cwde
or
(bad)
aad
sbb
push
fcmovnbe
call
test
aaa
ret
mov
pop
jg
scas
or
dec
enter
cmc
xchg
pop
mov
(bad)
inc
xor
push
ds
ds
lods
and
mov
xor
gs
pusha
jo
jg
cmp
idiv
nop
in
es
jle
sbb
xchg
(bad)
shr
outs
iret
int
mov
lea
adc
jae
or
pop
pop
mov
xor
ins
mov
mov
cmp
jae
sub
test
dec
pop
push
sahf
adc
dec
mov
inc
mov
xchg
jbe
sub
stos
lods
fstp
and
ret
mov
retf
cld
cmp
push
mov
jnp
pop
jmp
jnp
or
pop
call
ins
enter
push
addr16
mov
jno
mov
xchg
inc
xchg
and
cmps
cmp
mov
imul
dec
iret
outs
into
xor
shl
cmp
les
loope
daa
adc
mov
xchg
pop
lahf
out
mov
out
mov
xor
cmps
or
push
rol
(bad)
lea
cmps
pop
fsubrp
cmp
xor
or
mul
test
loope
add
hlt
sub
inc
xchg
fiadd
in
mov
ret
inc
(bad)
pmaxsw
aas
mov
cmp
mov
mov
xchg
test
adc
sub
aas
fimul
xchg
cmp
rcl
out
int3
xchg
push
dec
es
retf
fld
enter
popa
adc
adc
es
(bad)
jmp
clc
dec
inc
xchg
cmps
mov
push
jle
and
stos
lea
sti
jmp
and
in
xchg
cdq
outs
jno
sub
xchg
leave
into
dec
add
push
popf
mov
push
lods
cmps
idiv
dec
es
sahf
xor
jns
xor
shr
sub
mov
in
mov
xchg
fcomp
jne
test
jb
xor
neg
sub
mov
cwde
and
sub
int
xchg
dec
adc
sub
fs
ss
jbe
push
sbb
dec
jle
mov
adc
push
xor
pop
cmp
(bad)
sti
stos
test
rol
test
cmp
shr
pop
adc
imul
fcmovnb
test
mov
xor
or
xor
out
or
jl
in
je
mov
adc
shl
dec
pusha
add
test
add
nop
icebp
lahf
xchg
das
test
scas
or
cmp
inc
adc
pop
dec
push
pop
adc
imul
mov
push
xchg
adc
(bad)
aas
sbb
clc
jne
clc
stos
imul
push
bound
jp
(bad)
mov
enter
clc
push
add
cmp
in
js
xchg
pop
inc
pop
xor
or
in
jne
sbb
or
sbb
aad
test
dec
test
dec
retf
pop
and
push
xchg
call
scas
in
cmp
mov
ja
push
jp
test
jae
push
push
pop
and
jbe
int3
push
in
dec
fcmovnu
in
mov
cmp
push
stc
mov
cdq
mov
(bad)
scas
xchg
sub
mov
popa
fistp
xchg
mov
jle
ja
mov
mov
push
and
xor
mov
ins
push
xchg
pop
dec
cmp
sar
leave
sbb
fsubr
push
nop
popf
pop
lods
aam
adc
(bad)
enter
jp
pushf
mov
push
and
(bad)
stos
or
(bad)
jo
mov
sbb
xor
fbstp
sbb
inc
mov
fincstp
pop
pop
push
push
mov
addr16
pop
scas
mov
pop
lahf
cmp
cmp
test
push
daa
sahf
retf
sbb
shr
inc
frstor
pop
jno
jae
inc
test
xlat
popf
ret
pushf
jp
mov
shl
mov
and
les
xchg
pop
pusha
inc
jecxz
repnz
nop
jmp
mov
sub
jno
jbe
mov
repz
xlat
push
dec
gs
out
xor
mov
xchg
mov
ja
jo
mov
stos
xchg
and
retf
std
lods
stos
popf
pop
push
addr16
cdq
sub
adc
dec
inc
sbb
retf
cmps
jno
mov
ja
stos
push
pop
gs
xor
jo
mov
dec
mov
push
cmp
sub
hlt
daa
ror
jbe
aaa
in
fadd
aas
bound
sbb
add
pop
inc
ins
imul
bound
mov
aam
dec
leave
cmp
(bad)
sub
mov
adc
cwde
push
int
int
stos
lods
mov
jnp
inc
leave
scas
je
mov
mov
cmp
inc
jb
jo
mov
fld
sub
scas
pop
dec
addr16
pop
xor
adc
ss
cmovl
fadd
(bad)
aas
cwde
cwde
sub
dec
xor
jb
pop
push
add
cmps
scas
add
sub
popa
outs
(bad)
(bad)
retf
push
xbegin
test
not
in
jmp
movs
jecxz
das
call
cli
inc
fcomp
pop
sub
xor
outs
xchg
adc
add
xchg
aam
or
clc
add
test
pop
adc
sahf
je
dec
xor
cwde
xchg
icebp
dec
jb
sbb
mov
sub
push
daa
inc
mov
inc
jmp
mov
jb
xchg
pop
ror
sub
shl
or
mov
aad
sbb
sub
or
mov
fisttp
lods
cmp
mov
and
add
push
in
es
lahf
daa
ins
jo
jno
lds
push
js
lods
pop
loopne
nop
cmp
call
push
mov
pop
push
stc
cmp
pop
test
cmps
hlt
test
aaa
inc
and
(bad)
ficom
lods
push
fisubr
ret
mov
xchg
pop
mov
into
test
rol
fs
jbe
lahf
pop
js
data16
pop
push
ins
test
call
jne
push
xor
adc
repz
cli
loop
fstp
fldenv
idiv
or
aad
xor
jo
push
mov
push
pusha
mov
in
out
in
jo
lahf
cmc
jecxz
add
(bad)
mov
ss
xlat
add
xor
aad
das
cmps
xchg
mov
imul
xchg
stos
xor
lds
push
jmp
add
inc
sahf
and
or
and
inc
mov
mov
(bad)
xlat
lahf
es
aaa
repnz
in
int
test
loop
or
and
addr16
sahf
aam
sub
cli
sti
mov
aas
sti
push
sar
or
push
out
fisubr
cwde
fsubr
lods
mov
inc
jnp
or
dec
sbb
popf
dec
mov
sahf
jmp
mov
xchg
fild
cmps
xchg
sub
mov
xchg
rcr
dec
fcomp
stc
mov
test
fiadd
std
nop
dec
pop
or
adc
scas
xchg
mov
dec
jne
idiv
mov
sbb
pushf
or
aas
jmp
mov
lock
(bad)
in
jmp
aas
cmp
xor
xchg
xor
xchg
dec
mov
mov
mov
addr16
test
cmps
sub
leave
jle
ins
cmc
inc
sbb
iret
ss
mov
jbe
sbb
arpl
cmp
ss
jle
xchg
jecxz
xchg
rcl
mov
xchg
loopne
sub
sub
jmp
pushf
jmp
mov
jecxz
jmp
popf
mov
cmp
cdq
inc
frndint
cmp
push
loop
enter
int3
sbb
lea
push
push
arpl
and
inc
pmulhw
(bad)
lods
mov
sub
icebp
inc
cmp
into
xchg
dec
dec
fcom
cmp
mov
add
outs
into
mov
js
pop
test
(bad)
jo
fistp
loopne
cs
mov
jns
aad
cmps
daa
sub
pop
leave
movq
sub
addr16
dec
aaa
sbb
lods
inc
sub
jb
and
sub
dec
mov
mov
pop
mov
sbb
pop
fnstenv
adc
xchg
loopne
imul
adc
popa
outs
sub
push
movs
das
mov
in
and
inc
int
push
pcmpeqw
jecxz
stos
mov
push
aaa
stc
xchg
aas
out
pop
dec
fmul
fwait
jl
add
pop
add
int
ficom
push
cmp
mov
into
mov
sub
push
iret
xor
xchg
sbb
jnp
add
fsub
aaa
loopne
sub
push
xchg
test
test
neg
cdq
int3
js
xchg
sub
int
stos
mov
adc
dec
push
pop
sar
inc
ror
aaa
cmp
test
jo
(bad)
ficom
adc
add
pop
cli
pop
adc
inc
adc
movs
xchg
andps
ins
je
push
sbb
cmp
ror
pop
ins
loopne
cli
addr16
push
inc
loope
jp
add
xchg
(bad)
pop
mov
cmp
xchg
sub
into
inc
cmp
or
(bad)
(bad)
pop
rcr
lods
loope
add
fnstsw
sbb
lds
xchg
push
retf
xchg
push
fidivr
or
popf
jmp
mov
cmp
int3
cmp
ss
retf
clc
inc
cdq
dec
sbb
xor
loop
cmp
loop
sub
ss
sub
xchg
popa
jb
cmp
data16
mov
mov
pop
add
xor
inc
mov
nop
push
cmps
mov
mov
or
out
stos
les
or
stc
cld
lahf
add
mul
retf
ret
imul
xor
lahf
add
xchg
test
sbb
pop
or
or
imul
in
aam
pop
xor
and
pop
and
push
mov
push
cmc
mov
mov
bound
push
cmc
sub
and
retf
add
mov
xchg
sti
mov
js
das
or
pop
mov
cli
cli
xlat
call
mov
fmul
mov
mov
inc
sub
sub
ret
(bad)
pop
mov
mov
cmc
in
(bad)
mov
and
add
mov
xchg
es
jp
jge
and
mov
sub
fld
call
mov
or
push
in
xor
hlt
jnp
mov
mov
jg
xor
xchg
ret
retf
add
cmps
fistp
dec
jg
pusha
daa
addr16
mov
add
mov
cdq
retf
div
sahf
aam
dec
pusha
inc
and
sti
sub
mov
jbe
pop
fwait
pop
inc
push
ret
cld
cmp
push
mov
mov
test
pop
adc
gs
mov
sub
cmc
xchg
and
cmc
jbe
ja
or
jp
sbb
sbb
or
in
lock
retw
dec
mov
mov
adc
xchg
jecxz
jmp
inc
mov
mov
in
cmp
nop
iret
and
loop
clc
out
sbb
add
xchg
xchg
sub
iret
mov
or
jo
movs
fld
push
push
int
aad
pusha
pop
sub
movs
inc
out
push
xor
fidiv
sub
xchg
popa
cli
mov
pop
adc
fwait
jmp
or
call
add
inc
and
sbb
adc
imul
inc
retf
add
add
push
popa
and
sbb
push
sub
mov
pop
out
cli
xchg
add
and
mov
leave
inc
lds
cld
pop
in
fbstp
pushf
arpl
or
sbb
les
push
or
adc
and
je
xor
xchg
inc
test
test
sbb
and
adc
inc
add
inc
dec
lods
mov
popa
mov
or
sahf
cmps
mov
mov
push
movs
cmovge
push
test
mov
pop
xor
and
push
arpl
mov
aaa
fistp
jbe
pop
rol
jp
(bad)
jmp
ins
out
cmp
mov
bound
sub
sub
mov
ret
pandn
xor
dec
xor
bound
js
out
ret
add
sbb
test
test
push
fst
je
fmulp
imul
jmp
sti
hlt
sbb
retf
popa
inc
fcom
lods
or
lods
loope
(bad)
xchg
push
gs
fsubr
push
push
fst
xor
push
imul
inc
leave
push
sbb
das
inc
and
push
or
xchg
stos
out
jno
out
cmp
sbb
jp
adc
add
das
pop
push
push
add
xchg
dec
mov
xchg
lods
mov
(bad)
push
mov
or
and
out
pop
movs
in
(bad)
out
add
lea
sub
inc
std
cmp
xor
lods
aaa
pushf
dec
cdq
mov
mov
out
adc
jmp
test
mov
repnz
and
out
daa
out
mov
movs
dec
mov
xchg
mov
jnp
xchg
es
cmp
mov
leave
mov
call
inc
xchg
cmp
mov
cmps
cmp
cmovo
and
xlat
inc
ret
outs
adc
mov
cwde
mov
rcl
and
cdq
loop
sub
xchg
and
into
aaa
das
dec
loopne
in
fiadd
mov
jle
dec
mov
movs
ror
mov
sahf
in
add
jae
outs
adc
in
rcr
inc
out
fisubr
loope
cmp
cmp
daa
push
jo
mov
in
push
(bad)
jecxz
fst
sbb
mov
mov
sbb
adc
jo
pop
mov
hlt
xchg
shr
ss
int
in
imul
xor
mov
xor
jb
in
xlat
pop
inc
dec
(bad)
mov
inc
add
push
(bad)
in
sbb
and
dec
call
xchg
js
es
pop
pop
mov
or
adc
xlat
out
jb
sub
enter
inc
mov
mov
lahf
test
sbb
adc
and
or
add
push
mov
add
hlt
mov
int
pop
movs
cwde
cmps
fst
gs
push
jae
cwde
xor
xor
mov
jae
cs
jne
clc
inc
(bad)
shr
add
jno
push
loope
dec
stos
or
push
add
add
mov
cld
mov
xchg
pop
pop
mov
jge
ins
movs
pop
sbb
in
into
mov
aas
cli
jmp
cmp
shl
enter
jns
sub
cld
ret
popa
(bad)
cmps
inc
jmp
pushf
aas
retf
push
adc
push
in
jl
iret
imul
pop
das
scas
mov
retf
adc
mov
mov
adc
dec
mov
xchg
dec
mov
sub
test
scas
mov
push
mov
jl
jmp
push
retf
dec
fdiv
lahf
sbb
mov
in
gs
jp
xor
loop
cwde
dec
pop
mov
mov
adc
jnp
fwait
mul
int3
cwde
jmp
sti
cmps
pop
push
addr16
jnp
mov
test
int
jns
dec
dec
daa
(bad)
sbb
xchg
scas
sti
xor
pop
pop
cmp
out
iret
int
xor
sbb
ja
test
push
mov
dec
mov
rcr
or
dec
jno
std
dec
adc
xchg
sub
cmp
fistp
sub
lea
ins
popf
stos
jnp
add
mov
xchg
jno
mov
sub
push
cmp
fabs
pop
in
xor
std
test
(bad)
mov
jns
cwde
aas
add
daa
cmp
sbb
mov
ins
dec
inc
daa
cli
dec
sbb
aad
loop
xor
push
mov
mov
or
xor
sub
retf
fldcw
inc
inc
cmp
pop
movs
jge
xchg
or
rcr
mov
jnp
aam
jecxz
repnz
dec
sub
mov
nop
lahf
outs
jne
fcom
hlt
pop
cs
cwde
or
fs
es
xchg
div
jo
call
shl
xlat
movs
mov
(bad)
rcl
add
test
imul
pop
fisub
adc
mov
addr16
out
add
mov
pop
cld
out
pop
jmp
cmc
pop
jae
mov
psrlq
loopne
mov
ja
mov
(bad)
test
xchg
inc
xchg
addr16
(bad)
mov
call
pop
ret
sbb
xchg
enter
int
push
jbe
arpl
adc
jns
test
retf
jge
xchg
icebp
lods
mov
ret
bound
mov
jmp
lahf
sub
sub
dec
popf
lods
cmp
cmp
jns
push
pop
mov
pop
repz
jno
aad
loop
cmps
mov
retf
pop
mov
inc
add
in
loop
retf
jecxz
sub
into
pop
push
shl
push
dec
fmul
cdq
repz
add
mov
mov
popa
movs
dec
cmp
bound
adc
rol
jle
popa
cmp
push
mov
jl
mov
pushf
push
out
cmp
mov
cdq
mov
repz
sbb
xlat
xchg
pop
jmp
push
scas
mov
mov
mov
cmp
scas
adc
and
mov
jmp
test
scas
jo
and
int
add
pop
scas
addr16
mov
inc
or
and
and
lea
xor
jne
icebp
call
das
jmp
mov
cmp
sar
jns
stc
cs
and
bound
jne
adc
dec
sar
jmp
mov
jl
stos
mov
sub
adc
mov
inc
dec
or
and
xor
les
(bad)
push
std
cmp
test
cmc
sub
clc
xor
aad
ret
jp
hlt
out
inc
cmp
fsubrp
xchg
push
call
arpl
mov
aas
inc
cli
lds
or
arpl
add
cmc
sub
fucom
int
addr16
or
sub
in
jno
add
hlt
shl
or
mov
pop
cmps
icebp
lahf
inc
out
mov
mov
mov
int
sbb
add
or
mov
shl
dec
mov
clc
inc
add
inc
movs
jno
push
rcl
mov
dec
sahf
shl
frstor
dec
dec
xlat
sbb
xchg
cmp
sub
xchg
cmps
into
aaa
jp
sub
jecxz
fisttp
sbb
xor
xor
inc
fld
ss
cmps
push
jbe
lea
aad
out
sbb
and
mov
loop
setb
mov
ss
js
mov
push
cmp
in
push
sbb
out
jmp
test
add
dec
in
icebp
dec
mov
in
fucomi
(bad)
cld
(bad)
lahf
cmps
sub
popw
and
and
mov
mov
jo
and
stc
cmp
dec
cmp
pop
mov
mov
into
retf
push
mov
int
pop
ins
addr16
mov
das
jbe
movs
mov
mov
mov
jp
stos
(bad)
dec
pop
push
test
sti
bound
cmp
bound
cmp
mov
jp
in
jae
jp
pop
push
sub
shr
shl
xchg
dec
or
ins
sbb
sub
clc
add
xor
ins
cwde
retf
pushf
hlt
push
hlt
dec
or
xchg
ret
add
xchg
adc
push
pusha
mov
pushf
sub
sub
jne
pop
ror
test
cmp
movs
call
adc
imul
mov
push
mov
aam
inc
jecxz
jmp
xchg
ss
shl
fwait
cmps
dec
push
xchg
fs
and
xor
aas
(bad)
ins
and
loop
sti
out
mov
stos
ficom
or
jle
pusha
cmps
or
add
aas
fist
sub
cdq
jns
ret
outs
xor
lods
arpl
cmp
scas
into
arpl
cdq
loope
add
inc
(bad)
push
pop
cs
inc
dec
mov
rcr
adc
outs
sbb
outs
push
mov
xor
std
dec
mov
out
and
(bad)
fnstcw
cmp
scas
(bad)
pop
push
cs
jecxz
movs
icebp
cmp
mov
xor
xor
aaa
sub
mov
mov
and
mov
mov
addr16
pop
arpl
fmul
ds
shl
lds
add
(bad)
fcmove
mov
mov
fidiv
add
mov
cdq
aaa
push
rol
push
sahf
in
loop
lods
(bad)
adc
inc
test
jg
inc
int3
inc
es
ins
push
add
es
xchg
(bad)
push
cmps
sub
hlt
pop
jmp
sbb
mov
pop
fldenv
rcl
mov
sti
cmp
leave
daa
and
or
mov
sbb
jb
dec
leave
in
sub
daa
lea
mov
xor
ror
pop
fld
ins
out
mov
xchg
sbb
mov
enter
aam
mov
mov
pop
mov
cmp
movs
or
maskmovq
div
popa
pop
pop
push
bound
inc
je
cdq
jb
retf
pop
mov
xlat
xlat
jg
mov
or
mov
neg
jmp
and
sub
in
adc
and
mov
std
jle
mov
pushf
add
sbb
jmp
jno
jmp
aas
mov
pushf
mov
das
jnp
stc
(bad)
pop
enter
and
xor
xchg
mov
pop
mov
popa
mov
imul
and
bound
pusha
mov
lds
movs
in
out
adc
(bad)
xor
jmp
retf
jmp
into
jbe
cmps
loope
xor
add
ss
cmps
and
aas
lods
call
loopne
jg
aad
out
mov
cmps
or
ja
in
or
out
adc
repnz
fild
add
or
aam
dec
in
lock
cmp
sub
mov
cmp
mov
mov
mov
fnstsw
call
clc
sahf
mov
outs
leave
fild
and
lods
sbb
mov
xor
mov
xor
sbb
xor
mov
mov
(bad)
in
movs
jae
ret
pusha
sbb
push
imul
or
push
shl
enter
hlt
aaa
mov
es
jg
mov
mov
aad
xor
sar
ins
in
dec
fild
cmp
or
(bad)
mov
outs
inc
adc
ss
(bad)
jge
xor
sbb
jo
mov
xor
dec
fwait
and
push
jbe
mov
fdiv
loopne
call
mov
dec
out
cmp
mov
cmc
mov
mov
or
and
push
jbe
xchg
call
retf
(bad)
cmp
and
xchg
add
fwait
jle
cdq
int3
or
in
pushf
xor
mov
(bad)
push
ins
add
xor
push
sbb
adc
outs
sub
mov
jg
imul
cmps
sub
pushf
jne
jmp
pop
imul
inc
ss
jbe
xor
pop
mov
add
(bad)
das
xchg
and
inc
xchg
retf
cmp
xchg
sub
cld
xor
add
jl
jne
nop
movs
mov
std
jo
idiv
xor
pop
outs
call
(bad)
push
pop
or
xchg
shl
pop
fimul
cmc
add
shl
push
jl
repz
xor
test
cmc
xchg
pop
nop
mov
addr16
out
aad
scas
in
retf
adc
cli
push
and
mov
retf
mov
movs
xor
fst
mov
inc
test
add
fiadd
aas
ss
movs
stos
scas
shl
inc
xchg
lods
xchg
xor
cmp
les
adc
mov
loope
jo
mov
sub
mov
(bad)
mov
movs
bound
jnp
push
in
add
rcr
mov
mov
fidivr
xchg
aad
cmp
retf
pop
popa
sbb
pop
add
retf
dec
arpl
and
es
and
fdiv
(bad)
stos
cmp
mov
in
lods
fld
aas
std
lds
pop
xchg
mov
mov
cmps
push
jb
leave
mov
mul
fwait
pop
dec
inc
pop
inc
adc
add
(bad)
test
sub
sub
xchg
cmp
outs
retf
mov
pop
imul
sti
imul
xchg
stos
popa
push
imul
in
fidivr
mov
cmp
jecxz
retf
push
repz
retf
lods
outs
push
pop
jns
push
mov
pushf
push
cld
or
pusha
mov
push
xchg
repnz
call
and
inc
mov
fdiv
leavew
inc
repz
inc
cmp
inc
je
pop
add
fst
mov
stc
dec
inc
jbe
lds
xchg
inc
sub
pusha
mov
retf
add
mov
icebp
clc
not
out
std
inc
imul
ss
push
aas
sbb
and
or
mov
(bad)
scas
sbb
iret
fadd
fstp
test
and
shl
inc
into
out
jg
pop
mov
jne
adc
popf
sub
(bad)
dec
les
scas
add
cdq
nop
jae
loope
arpl
cmps
cmp
fistp
nop
push
(bad)
sahf
cmp
jae
repz
jle
xchg
sub
xor
xchg
out
shr
cwde
adc
lds
imul
mov
dec
inc
or
fsub
or
dec
mov
lods
mov
add
inc
or
cmps
jns
jae
scas
sub
iret
ret
nop
mov
fist
sti
mov
cmp
and
in
pop
pop
mov
fild
aaa
push
scas
mov
js
sbb
call
lahf
pop
fcom
call
mov
add
cmc
arpl
xor
mov
pop
jmp
(bad)
cmp
sub
cmp
loope
test
fisub
dec
jno
mov
(bad)
lds
ffreep
xlat
in
test
daa
jle
or
test
jb
push
sbb
pop
cmps
inc
gs
mov
(bad)
fsub
out
or
jge
jecxz
repnz
fld
clc
xchg
pushf
inc
aaa
sahf
int3
call
dec
imul
sub
cs
scas
xor
popf
cmp
pop
xchg
dec
fdivp
push
out
xchg
xor
retf
movs
and
pop
in
cmp
sbb
and
(bad)
xor
jmp
mov
stos
call
or
mov
mov
mov
ret
mov
popa
pop
cmps
mov
fsubr
ja
stos
inc
stos
sub
mov
lds
aad
dec
ror
pusha
mov
in
dec
lods
ret
xor
addr16
mov
out
aam
jmp
ins
inc
lds
sub
mov
jmp
loop
cmps
imul
hlt
(bad)
xchg
inc
jle
inc
add
aam
sbb
(bad)
rol
loopne
or
ret
sbb
xor
shl
pop
push
mov
mov
test
pusha
mov
call
push
arpl
je
jb
fsubr
jnp
add
pop
rol
int3
dec
ss
movs
addr16
fisttp
test
or
stc
and
inc
xor
mov
mov
(bad)
pop
mov
(bad)
pop
aas
dec
jmp
pop
pop
xchg
loope
jg
pop
add
ret
push
frstor
adc
arpl
lods
ficomp
stos
add
xor
ror
pop
mov
xchg
jg
push
xor
dec
pop
jecxz
enter
out
pop
(bad)
sbb
xchg
cli
cwde
mov
cmp
push
lea
jo
adc
mov
lds
dec
je
imul
leave
cmp
mov
in
sbb
(bad)
cmp
cmp
mov
or
pushf
or
ins
xchg
mov
fs
(bad)
popa
mov
jecxz
test
jmp
icebp
pop
in
mov
push
add
mov
mov
loope
icebp
dec
repz
cmp
lea
pusha
dec
movs
ret
adc
test
es
stos
int
push
rcl
jmp
or
scas
dec
add
pop
ins
mov
lock
cmc
lahf
xchg
mov
in
clc
outs
cmp
rol
lds
dec
frstor
mov
lock
inc
ret
fwait
xchg
sub
imul
icebp
pusha
mov
fstp
loope
mov
mov
call
mov
dec
cwde
loop
jns
pop
pop
test
cmp
add
std
loope
mov
jmp
mov
aaa
xchg
stc
jnp
cmp
test
iret
(bad)
mov
mov
les
div
cmps
movs
fwait
jmp
lods
outs
int
(bad)
jmp
add
and
dec
sbb
nop
jne
das
mov
dec
sub
rol
lds
dec
shl
push
xor
inc
sub
and
pop
es
ds
stos
outs
fwait
pop
popa
cdq
jne
mov
fidiv
and
bound
mov
fsub
dec
and
(bad)
push
jmp
(bad)
popf
cmc
pushf
mov
jl
shl
cld
dec
mov
xchg
xchg
pop
(bad)
cwde
nop
cli
jb
jae
(bad)
popf
mov
jnp
cmp
sub
or
add
sub
data16
or
int3
mov
mov
ret
dec
push
mov
push
retf
inc
mov
loopne
dec
sub
xor
or
pop
jmp
repnz
loope
pop
retf
lahf
dec
daa
jl
cmp
shl
imul
cmp
mov
and
rol
(bad)
add
cmp
add
and
sub
jbe
pop
add
inc
pop
scas
sub
xchg
sbb
fstp
mov
mov
jo
dec
mov
rcr
dec
dec
xlat
sbb
movs
daa
mov
jg
minps
xchg
jne
cmps
dec
int3
(bad)
sti
adc
das
loopne
or
stc
pop
xchg
and
cmp
call
jae
in
sbb
xchg
shl
fwait
adc
mov
gs
in
mov
cmp
mov
pop
icebp
dec
popf
ret
gs
rcr
sbb
add
push
lea
in
(bad)
mov
and
repz
jmp
mov
ins
cmp
push
cwde
fmul
fs
cmp
or
bound
stc
cmp
jno
cmps
jecxz
pop
pop
xor
jae
mov
cdq
cmp
ins
addr16
mov
mov
push
fs
sub
out
mov
mov
call
call
jo
jmp
xor
sbb
loopne
ins
sahf
ficom
add
rcr
sti
jle
push
dec
jns
pusha
out
jnp
lock
iret
retf
and
push
jmp
dec
repnz
(bad)
lds
adc
ror
outs
adc
shr
(bad)
jmp
retf
iret
xor
les
inc
retf
les
mov
gs
mov
pop
and
popf
adc
retf
lahf
cmps
jmp
jmp
std
(bad)
in
pop
out
mov
pop
add
and
dec
xor
and
nop
lea
mov
fnstsw
shl
ss
imul
sub
addr16
adc
(bad)
and
imul
inc
adc
cmps
out
inc
lods
loope
jmp
mov
(bad)
ins
pop
inc
xor
adc
lock
test
inc
adc
cmc
inc
dec
mov
popa
jb
xor
mov
or
cmp
xlat
mov
jmp
fild
lods
inc
xor
rcl
out
movs
mov
iret
std
clc
mov
jmp
hlt
dec
pop
jge
push
(bad)
and
push
retf
stos
leave
adc
fstp
(bad)
scas
lahf
iret
and
xchg
xor
(bad)
jmp
rcr
es
sub
cmps
subps
nop
test
cmp
imul
or
xchg
add
mov
movs
out
dec
aaa
jbe
xchg
cmps
xlat
jno
idiv
repnz
jae
loopne
mov
dec
ins
dec
mov
js
xchg
dec
arpl
sub
sbb
xchg
pop
xor
bound
and
or
push
add
repz
and
dec
je
xor
cdq
jns
and
data16
enter
arpl
jbe
in
imul
ss
pop
or
pop
mov
pop
sti
ins
add
cmps
data16
das
pop
outs
shl
lds
pop
js
and
add
pop
push
or
bound
jnp
xor
cli
popa
cmps
fldlg2
mov
or
nop
std
in
movs
push
pop
repnz
dec
ins
int3
inc
sub
imul
xor
retf
add
or
sub
or
out
add
xor
mov
nop
call
movs
xor
mov
jns
iret
not
fcomp
mov
cdq
xchg
adc
or
dec
push
mov
mov
iret
pop
gs
(bad)
pop
push
mov
push
xchg
dec
test
sbb
mov
dec
or
sub
add
mov
pusha
fimul
les
jl
daa
mov
bound
mov
sub
mov
xchg
jecxz
aad
in
add
popa
mov
out
loope
(bad)
mov
in
or
cmc
(bad)
jmp
test
aam
xchg
sbb
pop
xchg
(bad)
mov
dec
daa
bnd
retf
dec
and
scas
push
dec
xor
outs
aam
cmp
popa
and
push
sub
inc
cwde
cmp
dec
cdq
and
loopne
sbb
mov
pushf
in
and
loope
imul
mov
mov
xor
movs
pop
aaa
dec
dec
dec
dec
cmp
repz
(bad)
inc
xchg
push
arpl
sti
mov
nop
out
inc
sub
sub
test
popf
popf
mov
loopne
or
je
jno
mov
pop
loopne
cmps
xchg
test
mov
sbb
cmp
push
inc
and
div
out
push
mov
mov
inc
push
stos
sub
pop
xchg
addr16
mov
pop
sbb
arpl
test
(bad)
push
movs
pop
int3
adc
das
in
data16
or
cmp
sbb
adc
pop
pop
mov
add
cli
fcom
adc
loop
lds
shl
(bad)
jbe
test
push
cmp
mov
mov
cmp
cmp
test
shl
pop
out
inc
mov
xor
(bad)
sub
iret
xchg
cmp
mov
cmps
test
(bad)
std
push
sbb
movs
rol
es
clc
(bad)
adc
call
mov
mov
cmc
mov
sub
aaa
xor
into
pop
mov
mov
push
mov
push
bound
cmp
mov
xor
mov
jae
mov
and
xor
inc
push
push
aad
in
aaa
fstp
xor
dec
add
dec
dec
aaa
push
mov
mov
dec
(bad)
popa
cld
cmp
xor
sub
mul
out
xchg
jno
(bad)
lahf
bound
mov
pop
mov
push
and
sbb
adc
movs
sub
mov
fist
or
inc
std
sbb
and
out
xchg
inc
outs
out
mov
mov
retf
pop
(bad)
mov
sbb
std
fwait
shl
xchg
jle
add
pop
stos
test
jmp
and
rcr
and
mov
shr
pop
or
aam
aaa
and
sub
fldln2
out
sbb
cld
xchg
test
mov
shl
enter
push
cmp
pop
test
or
sub
cmps
push
sub
ss
mov
dec
adc
mov
gs
mov
dec
das
jmp
sub
jno
cwde
not
mov
fimul
pop
xor
xchg
jp
sbb
inc
mov
cmp
or
sbb
pop
inc
cmp
cmps
jmp
xor
cli
mov
out
je
adc
add
int3
add
mov
mov
jb
inc
pop
mov
add
jmp
movs
jae
xor
test
in
(bad)
out
pop
fs
dec
inc
inc
and
sbb
es
mov
mov
mov
inc
addr16
and
loope
add
mov
pop
sbb
test
outs
out
mov
add
adc
cdq
xchg
xchg
push
arpl
push
mov
or
xchg
jp
enter
fist
cmpxchg
cmp
fstp
or
xor
cmp
call
jmp
fidiv
mov
jo
aad
pop
ins
or
dec
pop
fnstcw
daa
adc
mov
arpl
std
and
add
cwde
das
xchg
call
scas
mov
adc
ins
jae
jp
and
sbb
mov
dec
mov
(bad)
cmp
sbb
adc
and
mov
icebp
jle
mov
sbb
lds
ins
and
(bad)
xor
and
leave
iret
xchg
mov
push
mov
inc
and
mov
es
or
cli
(bad)
mov
jb
popa
in
call
add
dec
jg
mov
xchg
adc
ss
iret
push
stos
sub
(bad)
stos
xor
add
pop
xor
inc
push
mov
arpl
dec
pop
jle
jp
push
mov
mov
(bad)
xor
adc
mov
aam
mov
hlt
adc
inc
cmp
lds
mov
dec
out
pop
rol
das
cld
sub
push
adc
(bad)
arpl
repz
imul
ret
or
test
test
sub
out
out
pop
add
mov
retf
mov
cs
ins
inc
jb
and
sbb
int
sbb
sbb
and
add
shr
add
in
xchg
fild
imul
pop
stos
jmp
cmp
shl
dec
stos
jge
pop
xchg
or
(bad)
and
popf
call
push
packssdw
cmp
push
add
xor
jbe
mov
jle
leave
fisttp
lahf
retf
mov
push
ins
add
ins
xor
push
fs
fisttp
leave
call
jb
std
sub
pop
xchg
xor
call
or
scas
pop
retf
clc
not
ret
outs
push
mov
sub
sub
lods
rcr
or
retf
push
les
inc
ret
add
mov
shrd
xchg
loop
cs
das
ins
data16
jp
pusha
pop
scas
mov
cmp
adc
cwde
test
and
dec
adc
or
mov
cmp
push
cmp
xchg
int3
into
popf
mov
inc
push
mov
clc
jo
sbb
push
popf
mov
xor
xchg
jno
sbb
push
pushf
fs
sbb
test
cdq
pop
das
test
push
pop
enter
les
sub
adc
jp
jmp
sti
sbb
test
xor
or
mov
mov
or
mov
sbb
cli
jecxz
mov
lods
add
xor
and
test
pop
ror
xchg
inc
daa
movs
push
fwait
push
repz
fwait
ins
sub
adc
xor
sahf
scas
aad
push
push
test
ror
(bad)
mov
cmp
mov
mov
gs
pop
in
inc
call
inc
ds
push
lods
add
mov
out
jge
xchg
repz
and
sub
push
inc
retf
sar
inc
mov
imul
or
clc
lods
sub
cmp
add
repnz
adc
repnz
xchg
xchg
adc
push
fisub
rol
cmps
retf
jmp
inc
push
inc
sbb
mov
stos
adc
adc
loope
stos
push
add
adc
fldcw
sub
fisub
mov
repnz
dec
rol
aad
fdiv
scas
cmp
xor
loop
movs
push
mov
inc
fstp
in
push
cmp
add
pop
push
in
popf
xchg
loop
mov
and
push
sbb
outs
in
mov
stos
sbb
pop
xor
loope
jp
aam
movs
push
ds
rol
sar
and
imul
jns
in
cmp
or
mov
and
or
clc
sub
jb
repz
cld
or
addr16
sahf
test
dec
mul
add
enter
jle
hlt
sbb
jp
mov
lahf
pop
mov
test
sbb
mov
daa
mov
arpl
je
repz
ins
neg
stc
fiadd
data16
(bad)
aam
sbb
into
mov
stos
and
adc
sub
fs
imul
inc
cmps
ins
sbb
cmp
mov
cld
inc
out
enter
mov
sti
hlt
inc
cmc
mov
arpl
jb
sti
not
mov
test
sub
(bad)
mov
jno
push
pop
mov
fsubr
sub
push
pop
cs
loopne
not
pop
mov
aas
scas
or
mov
fisttp
cmps
add
call
dec
dec
pushf
hlt
inc
cld
xor
mov
add
ins
(bad)
mov
mov
lahf
cmp
xchg
mov
pop
loope
and
or
sbb
mov
xor
cmps
push
es
pop
and
push
mov
jmp
repnz
iret
inc
loop
mov
inc
inc
xchg
inc
inc
rcl
fidivr
outs
cmc
pop
adc
add
jne
leave
jno
stos
sbb
jge
pcmpeqd
int3
push
out
in
inc
clc
sub
call
jle
jnp
inc
or
(bad)
arpl
xor
stos
dec
mov
cmps
xchg
(bad)
sbb
fiadd
pop
cmp
rcl
jecxz
(bad)
popf
imul
mov
fwait
adc
ret
arpl
and
ret
in
scas
pop
es
mov
(bad)
ja
push
ret
pop
xor
popa
out
outs
mov
repnz
jp
(bad)
push
retf
xor
in
mov
xor
in
adc
sub
shl
aam
aaa
loopne
cmp
popf
xor
sbb
or
cmp
push
loope
cld
and
mov
xchg
out
into
clc
popf
aam
icebp
push
xchg
dec
fisttp
stc
loopne
push
(bad)
shr
adc
fwait
arpl
loopne
add
cs
mov
mov
sbb
mov
dec
loopne
lds
inc
ror
ret
pushf
xchg
adc
lods
cld
clc
sahf
adc
ss
das
inc
or
fmulp
sub
les
mov
aam
and
retf
add
push
fmul
aaa
push
mov
mov
fidivr
sar
jmp
mov
add
pop
pushf
mov
in
dec
(bad)
mov
cld
adc
adc
inc
bound
fsub
add
cld
fs
push
sbb
clc
push
cmp
repz
movs
sbb
and
dec
cli
clc
cs
retf
add
inc
push
leave
aam
mov
into
(bad)
pop
cmps
nop
and
cli
loope
inc
mov
outs
clc
mov
rcr
mov
or
fisttp
imul
push
sub
inc
dec
pop
loop
xor
dec
shl
out
scas
fs
xchg
push
add
jns
cmps
sar
pop
cmps
dec
inc
(bad)
mov
inc
add
pusha
cld
mov
gs
push
jp
jmp
dec
inc
mov
test
pop
push
cdq
into
mul
jmp
or
dec
pop
xchg
jl
das
mov
dec
jmp
test
pop
test
ret
fidiv
add
inc
das
dec
cmps
mov
retf
add
or
hlt
mov
push
push
mov
mov
scas
xor
inc
sbb
neg
sti
adc
(bad)
fwait
push
cdq
adc
sti
test
and
dec
neg
in
fsub
and
cmp
out
retf
std
xchg
and
cmc
mov
mov
je
test
push
xchg
lods
pushf
xchg
pop
(bad)
sub
fs
cmp
or
xor
xlat
xchg
cs
movs
pop
test
or
nop
mov
out
hlt
or
shl
pop
cmp
add
fnstsw
daa
out
or
mov
retf
add
mov
retf
outs
fistp
xor
mov
xchg
cmc
pop
adc
scas
xchg
push
sbb
fild
fistp
mov
cmp
or
ins
add
jge
stos
xchg
scas
jg
js
jp
jo
mov
xchg
leave
ds
(bad)
xchg
jp
sbb
aaa
cwde
stos
jmp
sbb
inc
imul
add
rol
or
pop
fstp
outs
or
push
minps
lahf
inc
int3
mov
cs
out
fidivr
(bad)
fimul
movs
lea
and
push
and
pop
cwde
push
push
xor
push
retf
push
jnp
pop
fst
mov
out
cmp
cmp
mov
pop
sti
into
sbb
repnz
xchg
(bad)
jge
jo
jno
mov
add
push
imul
fstp
sbb
fcomip
scas
adc
call
test
mov
mov
pop
adc
adc
or
sbb
call
xor
dec
pop
jp
jo
mov
hlt
sbb
rol
add
popf
call
xor
add
mov
adc
hlt
rcl
in
dec
mov
mov
cmp
mov
fld
les
sub
fwait
cmp
inc
daa
lahf
inc
shl
mov
(bad)
xlat
shr
adc
xor
mov
adc
mov
ror
ins
mov
call
iret
clc
dec
xor
and
in
stos
hlt
shl
and
(bad)
jmp
xor
jbe
icebp
in
imul
pop
rcl
jb
outs
jp
rcl
ja
cs
loope
inc
push
stos
inc
je
je
(bad)
sbb
movs
loope
ds
popf
sahf
repz
fdiv
xchg
or
jae
test
xchg
and
adc
fxch
retf
iret
int
mov
adc
push
mov
xlat
daa
test
in
jl
shr
aaa
out
jns
scas
not
shl
dec
mov
xchg
ja
mov
jp
inc
xor
enter
pop
cld
push
lahf
mov
xor
lahf
push
jp
push
popf
mov
out
or
push
(bad)
mov
sbb
add
retf
fneni(8087
and
mov
repnz
xchg
shl
jo
cs
cdq
xor
popf
and
js
mov
in
shl
and
and
mov
mov
dec
out
(bad)
dec
stos
adc
fild
jne
jbe
fwait
scas
int3
push
cmps
push
xchg
pushf
adc
aam
mov
fs
aas
add
mov
push
mov
cli
iret
shl
jo
sti
je
scas
out
call
jne
jmp
add
pop
dec
add
mov
fxch
sub
(bad)
lods
iret
jl
inc
sub
imul
dec
popa
in
pop
and
dec
cmp
mov
inc
sub
aam
ror
mov
pop
jnp
(bad)
unpcklps
inc
mov
jns
xlat
lock
mov
jae
imul
in
jnp
mov
xor
xchg
add
push
pop
inc
adc
xor
or
sahf
mov
cld
pop
pop
sub
adc
(bad)
aam
and
dec
rcl
jb
mov
dec
fwait
push
jmp
push
imul
and
or
mov
xchg
jp
inc
fistp
shr
xlat
stc
mov
inc
xor
jne
cmp
fisubr
test
cmp
lock
mov
pop
in
mov
das
adc
pop
jp
jmp
outs
scas
rol
push
movs
dec
sbb
pop
or
mov
dec
add
pop
sub
or
and
outs
pop
push
pop
(bad)
jnp
sub
call
pop
hlt
pop
in
pop
xchg
push
add
sbb
retf
popf
xor
mov
mov
shl
sbb
(bad)
ror
push
mov
cmps
jle
les
mov
dec
out
in
dec
repz
pop
out
jp
cmp
mov
dec
mov
inc
loope
mov
inc
push
iret
xchg
ja
mov
or
adc
pop
imul
mov
ficom
inc
(bad)
push
mov
test
cmp
enter
repnz
adc
dec
repz
sbb
dec
dec
leave
cs
fld
add
mov
mov
mov
or
pop
test
icebp
adc
mov
cmp
sub
mov
lods
and
pop
scas
or
push
pusha
jmp
inc
jmp
lods
pop
bound
aas
hlt
sbb
int3
in
or
imul
pop
or
nop
cmps
pop
iret
mov
clc
lock
inc
add
pusha
sbb
xchg
daa
pop
addr16
lock
mov
sub
or
or
mov
xor
std
mov
popf
and
mov
sub
push
fdivr
icebp
cmp
mov
fnstenv
sbb
xchg
int3
(bad)
pop
scas
sbb
shr
pop
lahf
fst
adc
in
mov
and
adc
sahf
neg
push
cmp
mov
push
jg
pop
fstp
loop
xchg
push
mov
fmul
sub
fmul
mov
sar
dec
imul
retf
add
push
retf
(bad)
mov
ficom
jno
adc
(bad)
xor
xchg
mov
(bad)
mov
daa
cdq
push
jno
xor
(bad)
retf
ds
mov
or
lods
push
imul
mov
jo
js
adc
xchg
mov
pop
shr
std
test
mov
xchg
xor
gs
fadd
hlt
and
push
icebp
add
and
mov
ss
cmp
sbb
xchg
add
pop
scas
inc
hlt
jle
dec
inc
xor
into
ror
mov
test
adc
jbe
sbb
in
cmp
iret
xchg
stos
dec
or
mov
pop
sub
neg
jl
(bad)
iret
stos
(bad)
retf
mov
and
sbb
mov
and
push
jnp
fstp
xchg
xchg
call
stos
test
xlat
pop
ins
test
aam
xchg
and
psubsw
add
pop
or
popa
enter
shl
mov
addr16
xchg
push
ss
xchg
test
xchg
and
stos
hlt
mov
cdq
(bad)
leave
ror
inc
inc
stc
lock
es
sbb
mov
jbe
mov
cmp
dec
mov
pop
iret
pop
jo
mov
scas
or
imul
arpl
push
sbb
push
lea
sub
mov
fmul
ficomp
sahf
mov
pop
add
adc
inc
mov
xor
sahf
les
or
sbb
in
cmp
call
add
push
aam
data16
hlt
cmps
pushf
fstp
add
imul
mov
fstp
add
pop
add
jns
out
adc
nop
rol
pop
xchg
xchg
(bad)
cmovb
clc
(bad)
pop
pop
test
rcr
enter
mov
jg
mov
lds
imul
and
jae
push
jnp
mov
(bad)
jecxz
icebp
xchg
mov
inc
pop
cmp
or
push
xchg
iret
imul
sahf
xchg
pusha
xchg
or
out
add
jp
mov
data16
adc
in
jecxz
sbb
xor
popf
jb
adc
or
mov
ror
ja
inc
mov
mov
sar
sub
jmp
add
mov
jae
inc
pop
je
cs
dec
pushf
aam
xchg
push
mov
sbb
mov
into
mov
ins
and
ror
repz
mov
mov
push
xlat
stos
inc
test
das
in
xor
enter
ss
push
dec
rol
xor
arpl
dec
leave
gs
movs
push
and
imul
sbb
popf
test
pop
xchg
pop
add
dec
ds
in
push
(bad)
and
mov
inc
addr16
cmp
mov
push
sub
out
pop
stos
inc
mov
(bad)
data16
(bad)
retf
fcom
sub
div
or
shr
cwde
jnp
clc
mov
jbe
xchg
inc
xchg
data16
pusha
lds
ror
dec
test
mov
xchg
repz
lods
pop
movs
and
in
sti
fcomi
or
inc
and
sbb
mov
pop
fidivr
sbb
lea
add
mov
hlt
cmp
shl
gs
add
mov
jge
movs
cmp
arpl
pop
in
loopne
fistp
dec
int3
xchg
fcmove
enter
gs
jae
and
fild
dec
xchg
scas
arpl
imul
sbb
aas
push
in
add
sbb
jne
imul
pop
jg
dec
or
inc
pusha
jnp
xchg
inc
frstor
xchg
les
ret
aaa
cmp
or
mov
and
loopne
hlt
adc
jnp
dec
sbb
add
sub
pop
adc
sti
pop
jnp
aaa
jmp
movs
inc
js
dec
or
je
inc
xchg
repz
loope
icebp
sbb
in
ss
mov
mov
retf
push
ins
add
enter
movs
inc
push
ja
xor
cwde
sbb
jge
cmp
call
jmp
mov
sbb
enter
int
lods
enter
retf
cmp
loopne
daa
shl
xor
fwait
daa
and
xor
bswap
or
mov
and
ja
ret
or
int
mov
cld
pop
nop
sar
sbb
lods
fiadd
push
pop
in
mov
pop
push
xchg
mov
pop
mov
pop
test
bnd
js
cmp
scas
jns
cdq
ret
sbb
jmp
out
bound
ror
fldcw
pop
ret
xor
fisubr
test
jae
ds
xchg
add
jnp
neg
gs
add
icebp
xchg
icebp
fsubr
push
repnz
mov
cld
bound
xchg
fild
ret
imul
mov
and
inc
jge
fstp
fsubr
mov
imul
add
adc
xor
push
or
mov
inc
loope
lahf
sti
ficom
jns
loopne
mov
xor
push
pop
add
sub
std
jb
test
imul
push
movs
cmps
ror
loope
xlat
cwde
sub
dec
and
xor
cdq
retf
push
leave
rcr
and
pop
push
pop
dec
lahf
ret
scas
xchg
xorps
pop
push
test
mov
pop
and
jmp
inc
push
pop
cdq
call
jno
jns
dec
mov
into
lahf
pop
leave
mov
and
xchg
daa
pop
jl
lahf
pop
mov
int3
xchg
ins
inc
punpcklwd
mov
je
ins
out
mov
ins
lea
dec
(bad)
sbb
and
add
sbb
aaa
push
out
push
retf
xor
or
aam
inc
sbb
xchg
or
jae
push
into
and
push
lahf
pop
xchg
cmp
or
fist
fs
mov
pop
pop
push
int3
stos
popf
ficomp
jno
imul
arpl
test
dec
or
mov
popa
inc
or
add
push
repnz
cwde
adc
dec
pop
rol
syscall
aam
dec
adc
ret
outs
sbb
div
das
aaa
ins
mov
jge
lds
xchg
cld
push
rcr
or
inc
sbb
test
mov
and
int
jae
mov
pop
jae
dec
popf
sbb
jns
mov
retf
ficomp
(bad)
fisubr
shr
mov
sbb
stos
xchg
push
jle
pusha
add
pop
and
gs
enter
add
neg
jnp
test
dec
dec
mov
push
stc
leave
mov
fst
sbb
retf
test
mov
push
push
pop
xchg
pop
push
push
adc
ins
pop
xchg
cmp
xor
mov
fbstp
dec
stos
xor
aad
inc
out
imul
inc
jmp
add
jb
hlt
cmp
inc
stos
cwde
in
adc
retf
pushf
out
ret
lods
ret
sub
addr16
pop
test
es
xchg
stc
mov
sub
push
cmp
mov
lods
(bad)
push
push
xchg
fbld
dec
push
(bad)
loop
or
into
push
mov
adc
xor
or
push
mov
push
xor
push
lea
push
xchg
pusha
sub
pop
and
and
gs
aaa
arpl
jle
cs
les
inc
or
daa
aaa
lahf
xchg
hlt
sbb
pop
sbb
outs
movs
mov
movs
push
scas
pusha
lahf
nop
dec
std
std
and
lods
inc
mov
nop
sub
(bad)
fwait
inc
adc
mov
xlat
test
in
loopne
or
adc
addr16
call
in
addr16
cmp
sbb
pop
adc
out
btr
dec
repz
hlt
jmp
je
sbb
loope
js
mov
push
ss
inc
stos
(bad)
mov
rcl
scas
or
mov
rol
js
cmp
sub
push
xor
fwait
repnz
push
frstor
pop
add
xor
pop
jae
popa
mov
iret
out
mov
loopne
sbb
mov
mov
pop
outs
cli
xchg
mov
fstp
or
cmc
push
and
adc
jo
cmp
and
(bad)
int
xor
mov
hlt
loop
cwde
push
stc
sub
pop
and
ficomp
hlt
rep
test
and
pushf
das
sub
jmp
cmp
adc
cmps
jp
outs
or
test
push
sahf
xchg
iret
mov
pusha
dec
cdq
pop
add
jb
inc
mov
iret
test
mov
push
or
and
sub
push
dec
sbb
adc
scas
rol
hlt
mov
(bad)
push
jbe
cmp
mov
xor
mov
mov
fisub
loop
(bad)
mov
xor
jecxz
sbb
pop
enter
cmp
stos
pop
test
(bad)
xchg
pop
add
xor
jp
mov
rol
or
jns
loopne
ss
adc
dec
dec
in
push
test
add
ror
xor
xor
xor
xor
cdq
add
cld
movs
fild
or
into
scas
fld
js
nop
push
and
and
loope
pop
sub
(bad)
lds
es
(bad)
and
push
inc
call
ins
scas
push
and
pop
push
outs
jae
xchg
mov
js
sbb
loop
add
pop
(bad)
pop
pop
imul
mov
xlat
aam
xor
xchg
xor
ja
jbe
in
(bad)
and
mov
mov
rcl
inc
pop
cmps
jecxz
jp
sbb
push
push
in
mov
scas
add
ins
mov
(bad)
pushf
lds
cmc
in
xor
aad
push
mov
rcl
jg
ins
inc
adc
scas
cli
sub
loop
jmp
test
mov
dec
outs
jae
addr16
dec
jnp
icebp
jl
sbb
nop
mov
pushf
push
loope
pop
xor
push
dec
pop
pop
xchg
lahf
stc
adc
jecxz
in
test
rol
sub
mov
loop
shl
xchg
mov
mov
cmpps
mov
jg
cmc
jbe
aad
xchg
sti
mov
rol
mov
xor
xchg
dec
jns
adc
xor
daa
pop
pop
in
loop
pop
ins
mov
rol
fs
pop
and
push
mov
out
cmc
repz
popa
pop
inc
sar
and
dec
mov
sar
add
add
hlt
and
(bad)
rcr
shl
in
push
jg
retf
xor
sar
pop
jns
daa
es
cld
mov
fcomp
lds
loopne
dec
mov
add
lahf
test
test
and
arpl
mov
ds
adc
(bad)
jne
mov
not
imul
pusha
xor
aaa
mov
js
push
mov
sbb
idiv
cmp
sbb
aaa
cmc
sbb
jo
pop
mov
pushf
dec
ret
pop
mov
inc
imul
pop
add
or
jo
cmp
nop
fistp
adc
stos
iret
mov
lods
stos
in
cdq
dec
loope
ror
outs
push
enter
xchg
push
dec
push
adc
cld
xor
xchg
arpl
mov
ja
sub
sub
xor
nop
ret
xchg
lds
(bad)
addr16
pop
mov
push
icebp
out
inc
push
mov
rol
shl
fisubr
xor
mov
(bad)
dec
pop
xor
jbe
xor
aam
sbb
and
call
repz
mov
repnz
mov
fistp
mov
inc
fimul
push
fdivr
bound
pusha
pushf
pusha
mov
ins
lahf
xchg
pop
sahf
or
sub
imul
test
pop
or
add
jmp
mov
stc
repnz
xor
call
jno
push
dec
push
scas
inc
inc
xchg
xor
dec
jge
sar
iret
test
retf
sbb
jbe
push
dec
test
push
test
out
stos
mov
in
pop
call
sbb
push
(bad)
sti
mov
inc
cmp
fistp
mov
in
sbb
push
scas
mov
xchg
sbb
push
add
pop
(bad)
mov
ins
add
cmp
mov
mov
loope
push
(bad)
sub
cs
mov
lds
mov
rcl
adc
cmp
into
int3
push
popf
mov
loopne
and
call
dec
sub
jp
ror
xor
div
cmp
fild
sub
repz
out
or
mov
mov
ins
retf
dec
in
pop
and
mov
and
jmp
push
xchg
xchg
ins
mov
fisttp
pop
dec
rcr
pop
movs
js
enter
sub
ja
in
jle
jge
push
je
adc
in
inc
test
call
push
out
cmp
ins
ret
push
sub
mov
fld
xchg
or
and
movs
mov
cmp
jp
or
outs
push
movs
aaa
mov
int
add
fild
xor
(bad)
(bad)
jle
jle
jecxz
inc
cmp
call
xor
or
ins
test
sub
sbb
sbb
fmul
push
enter
daa
int
(bad)
icebp
and
call
fidiv
push
inc
jb
icebp
pop
popf
out
retf
add
adc
mov
or
push
and
or
sbb
adc
push
(bad)
adc
les
sbb
call
adc
scas
cmp
inc
xor
dec
mov
mov
or
ins
mov
dec
enter
jo
fwait
cdq
jecxz
sbb
in
mov
fnstcw
xlat
imul
inc
inc
push
mov
dec
dec
add
leave
or
xlat
mov
loop
fcomp
jns
xchg
dec
add
out
jbe
test
and
(bad)
das
ret
sub
sub
or
fnstenv
xor
sbb
popf
pop
retf
and
in
xor
push
fldenv
sub
sbb
mov
add
cmp
sahf
aad
(bad)
data16
jno
div
popa
add
rcr
push
sbb
sbb
retf
or
pop
cld
mov
pop
push
adc
aas
movs
scas
mov
out
stos
out
add
mov
dec
loope
sbb
(bad)
stc
out
(bad)
(bad)
push
sub
add
jmp
imul
leave
dec
(bad)
xor
inc
or
xchg
pop
mov
mov
mov
push
cmps
ja
mov
xchg
cmp
pop
or
outs
add
push
cmp
mov
fisubr
mov
arpl
test
xchg
cmps
in
movs
icebp
inc
mov
mov
and
leave
enter
xchg
push
mov
cmc
ret
mov
jmp
mov
xor
enter
pop
mov
call
ret
pop
in
fnstcw
pushf
fisub
sti
leave
sub
add
jecxz
mov
fwait
movs
cli
retf
inc
int3
out
cli
pop
and
push
cmps
xchg
and
cs
scas
call
dec
or
hlt
jle
cmp
jae
sub
lock
push
jge
stos
leave
add
xchg
cmp
idiv
dec
lds
dec
in
and
xor
(bad)
loop
push
sahf
dec
pop
out
fistp
ins
jge
or
lods
pop
mov
jmp
cmp
mov
adc
xor
pop
mov
xchg
mov
xchg
ret
sbb
inc
mov
retf
sahf
xor
imul
test
idiv
sbb
adc
mov
cs
lahf
add
mov
enter
cmps
mov
aas
loope
mov
cmps
ds
je
mov
xchg
pop
es
inc
lea
stc
mov
and
cdq
add
inc
imul
xchg
mov
cmp
xchg
in
not
(bad)
xor
add
leave
(bad)
or
and
push
cld
test
das
popf
cmc
jo
sbb
test
jg
mov
hlt
out
mov
dec
cmc
mov
sti
push
xchg
push
and
je
fnstenv
into
dec
loopne
popa
push
cmp
xchg
neg
loop
mov
adc
mov
pop
ja
mov
lock
xchg
xchg
fild
fadd
in
and
mov
imul
pushf
push
pop
outs
xchg
fdivr
xlat
inc
mov
mov
pop
dec
cli
movs
rol
arpl
mov
and
fcom
jl
dec
shl
dec
xor
xor
mov
mov
jbe
mov
movs
mov
push
in
push
xlat
push
jmp
pop
push
push
rcl
out
mov
outs
xlat
inc
or
ins
inc
xchg
xchg
xchg
es
loop
ins
dec
cmp
and
ret
mov
fadd
clc
cmp
(bad)
lock
jmp
mov
repz
jb
adc
aaa
jo
pop
jnp
mov
cmp
pop
jecxz
dec
pop
push
aas
test
pop
adc
fisubr
inc
jae
repnz
in
mov
dec
rol
add
fisubr
or
loop
pop
rol
call
aas
call
ror
int3
rol
sbb
or
std
les
xlat
adc
mov
sub
xor
mov
pop
pop
push
lock
adc
mov
outs
repz
cdq
cmp
jmp
mov
jg
sbb
xor
fpatan
test
ja
and
dec
mov
ss
adc
pop
mov
into
call
mov
ins
hlt
call
call
pop
lods
mov
cmc
nop
and
add
bound
shl
and
sahf
xor
or
mov
ss
jae
xchg
xlat
nop
pop
rol
(bad)
mov
es
les
mov
or
xchg
fisubr
outs
int
cmp
xchg
and
sbb
sub
or
adc
or
int3
inc
pushf
inc
fldenv
stos
mov
xor
into
mov
mov
into
hlt
rcr
out
ds
fiadd
das
mov
popf
jle
sub
pusha
(bad)
(bad)
ins
xor
fistp
inc
mov
add
test
push
or
sub
push
mov
mov
fsubr
cwde
in
dec
(bad)
jl
sti
iret
pop
cmp
xor
pop
nop
scas
dec
ins
pop
mov
ja
mov
rcl
test
add
adc
lahf
mov
inc
sub
jp
or
push
mov
fst
jmp
mov
and
push
dec
inc
cmp
in
popa
pushf
cmc
xchg
cs
mov
and
cmps
lock
xchg
ret
imul
mov
adc
push
sar
ins
sti
or
inc
or
in
imul
sbb
and
mov
inc
retf
sbb
or
mov
ins
movs
pusha
or
(bad)
(bad)
fsubr
idiv
adc
data16
mov
dec
call
das
sub
mov
es
or
jecxz
mul
xchg
fs
and
stc
mov
loop
(bad)
and
outs
bound
fiadd
shl
scas
xor
dec
xlat
fst
mov
sbb
js
nop
cmp
enter
fsub
repz
xor
xchg
and
(bad)
aad
cmp
cld
sub
cwde
mov
lods
aad
jmp
push
push
test
cmp
cmp
or
loope
xchg
sub
xchg
sub
(bad)
fsubr
sahf
pop
dec
ss
sbb
inc
fxtract
sti
jnp
jge
xor
mov
nop
jecxz
test
mov
repnz
mov
xor
cmp
mov
xor
popf
sub
jbe
pop
jo
dec
hlt
mov
cmp
push
jg
dec
adc
fs
retf
push
(bad)
add
clc
je
xor
cmc
and
xchg
aam
or
call
or
mov
sub
mov
cmp
dec
dec
or
adc
and
pop
sbb
xchg
mov
jg
jg
xlat
mov
adc
push
push
ja
cmp
pop
sub
aaa
aad
mov
cmp
out
inc
mov
mov
cmps
clc
push
fbld
sahf
mov
inc
sub
mov
frstpm(287
adc
mov
and
or
fcom
add
cmp
adc
in
sub
les
fs
dec
add
out
ror
test
xchg
in
lods
shl
sub
les
cmp
loope
pop
jp
test
dec
(bad)
xor
in
bound
shr
sbb
sbb
out
inc
xchg
fs
aam
stc
pop
mov
xchg
add
push
fwait
inc
inc
push
hlt
in
dec
or
push
jns
mov
mov
sbb
fdiv
cmp
add
push
hlt
(bad)
adc
data16
(bad)
adc
aam
test
in
ins
jne
mov
adc
jmp
out
or
push
(bad)
shl
ja
mov
pop
jns
pop
mov
in
cld
push
pusha
inc
mov
push
mul
out
lods
or
fsub
stc
data16
nop
add
or
pusha
add
add
mov
addr16
ins
and
push
retf
retf
dec
push
int
mov
pop
mov
adc
retf
shl
retf
xchg
push
dec
dec
enter
loope
scas
je
push
mov
shl
repnz
scas
dec
jo
pusha
in
popf
cmp
aaa
daa
mov
inc
jle
int
xchg
mov
mov
sub
and
pop
push
push
aaa
arpl
adc
pavgb
rcl
mov
pop
jg
jmp
sbb
push
adc
pop
hlt
movs
sbb
pop
loopne
jne
mul
dec
inc
push
sub
adc
jne
push
jp
das
lods
pop
inc
lds
bound
dec
dec
pop
int
dec
les
movs
mov
xchg
add
call
ins
pop
stos
push
inc
mov
sar
lds
rol
mov
add
dec
xor
jo
xlat
cmps
loop
adc
xchg
daa
or
push
mov
outs
test
icebp
popf
data16
cmps
(bad)
aas
ds
js
lea
dec
sti
mov
xor
jge
mov
cld
stc
push
jns
xchg
mov
xlat
jmp
jge
rcl
adc
aas
push
mov
hlt
jbe
ja
movs
cmp
shl
sub
dec
bound
mov
jl
mov
nop
es
or
xchg
dec
(bad)
mov
cmp
and
cld
(bad)
sbb
sub
push
cli
and
add
(bad)
fstp
xchg
loope
pop
test
pop
jecxz
je
inc
nop
mov
or
mov
or
(bad)
mov
mov
and
mov
gs
shl
movs
rcr
inc
mov
pop
out
sub
test
mov
mov
sub
aas
ror
inc
push
pop
sub
or
pop
popa
das
add
cmps
mov
fadd
dec
inc
inc
jae
es
lock
int
cmp
jl
or
arpl
dec
call
inc
(bad)
cmc
xchg
jnp
fild
call
das
(bad)
in
and
jl
int3
ins
mov
or
push
push
loopne
ins
pop
repnz
mov
pop
jecxz
mov
jl
aam
and
sub
int
in
push
or
or
(bad)
mov
sbb
mov
jo
cmp
std
and
add
xchg
mov
ror
movs
jne
xlat
xor
mov
dec
xor
adc
mov
mov
mov
xchg
in
jl
(bad)
imul
jo
or
mov
ins
push
pop
out
xchg
push
adc
aaa
bound
sub
fdivr
retf
enter
loope
test
cmps
add
inc
push
ror
push
mov
scas
mov
ret
int3
pop
retf
loopne
push
test
out
or
dec
xor
jmp
leave
in
dec
clc
popf
or
leave
mov
test
xchg
xor
(bad)
jecxz
jmp
fcmovu
sbb
popa
dec
adc
aas
loopne
inc
jge
adc
inc
add
adc
or
xchg
fstp
inc
mov
adc
gs
fisttp
cmp
stos
xor
xor
mov
jge
ds
bound
xor
test
sti
clc
ret
ret
sbb
cwde
push
mov
or
mov
pop
dec
(bad)
and
mov
sti
repnz
cmp
(bad)
int
stc
or
and
fcomp
jl
test
xchg
in
jae
cs
sub
mov
add
imul
pop
shl
imul
clc
stc
scas
gs
and
inc
popa
out
ds
aad
add
push
ins
clc
push
jmp
nop
loopne
cmp
repnz
dec
mov
sub
shl
xlat
push
fistp
cwde
mov
mov
ret
and
add
in
cwde
(bad)
xchg
mov
push
outs
add
aaa
into
test
cmc
pop
mov
or
and
push
pop
and
pop
xchg
pushf
sti
dec
mov
push
into
jnp
ret
push
sbb
popf
pop
ret
loope
mov
sub
fwait
stc
test
cmp
das
mov
push
shl
sub
scas
mov
movs
scas
es
test
clc
dec
jp
push
mov
std
int3
sbb
xchg
test
mov
push
in
mov
xor
fimul
sbb
rcl
xchg
pop
push
or
cdq
(bad)
and
ins
lahf
cmp
cmp
ss
cmps
xchg
xchg
and
dec
sub
sub
push
test
inc
lock
scas
sub
sbb
inc
mov
or
in
cmp
into
aam
imul
jnp
sti
icebp
push
mov
lds
push
sbb
sbb
dec
mov
pop
int
mov
fdiv
or
jmp
mov
push
push
mov
lods
mov
or
jns
xchg
inc
and
ins
mov
xlat
jmp
jns
push
and
sar
sbb
jnp
mov
fcmovne
or
mov
mov
add
loopne
leave
daa
jo
sbb
push
jg
(bad)
ds
sub
and
or
sbb
jp
in
cwde
xor
dec
inc
sub
sbb
popa
add
inc
cmp
mov
das
sub
and
sub
xchg
mov
fist
in
dec
add
adc
dec
add
nop
nop
ss
xlat
and
loope
gs
lock
bound
mov
cld
push
out
cmp
int
jnp
into
add
xchg
mov
add
sti
pop
mov
inc
jnp
loop
sbb
shr
push
mov
push
cmps
push
dec
or
add
cs
sub
xchg
jl
push
xchg
or
lea
data16
push
movs
bound
out
and
inc
scas
xchg
cmp
loop
dec
movs
cmp
adc
and
jne
dec
pusha
pop
pop
data16
push
pop
sub
imul
jae
fst
repz
cmp
pop
das
rcr
mov
test
mov
mov
mov
push
cmp
xor
jno
mov
call
mov
pop
fistp
sub
cmp
out
cmp
or
shl
push
push
xor
(bad)
sbb
rol
leave
aam
and
sub
push
mov
pop
sub
pop
(bad)
lock
popf
out
sub
cmp
mov
pop
cmp
xchg
xchg
(bad)
adc
lock
loope
ja
adc
and
pop
scas
(bad)
and
pop
int
sub
xchg
and
cdq
pop
cmp
(bad)
test
pop
fprem
aam
push
dec
push
inc
xchg
(bad)
xchg
mov
sub
cmp
mov
sub
xchg
retf
xchg
push
rsm
lock
rcl
ficom
fld
test
add
(bad)
xor
push
or
xor
pop
dec
mov
inc
lahf
pop
sbb
aas
add
jp
hlt
jo
jbe
movs
lahf
adc
sbb
add
dec
or
lea
add
ret
jmp
dec
ss
(bad)
push
pop
xchg
sbb
push
jmp
and
xchg
and
mov
test
cmp
aas
push
cs
push
or
jb
out
and
adc
call
sti
dec
mov
sub
cld
fwait
lock
push
in
loop
push
imul
shl
in
clc
enter
cmps
push
push
lods
arpl
(bad)
adc
dec
sbb
inc
fs
sbb
fbld
sub
bt
ins
and
jg
aas
sbb
add
and
in
lds
repnz
mov
push
daa
sbb
mov
or
(bad)
adc
mov
adc
xor
out
bound
(bad)
sbb
sub
push
or
fnstenv
mov
xchg
add
xchg
adc
cmp
shr
push
cs
out
arpl
aam
frstor
sbb
outs
sbb
pop
stos
or
(bad)
clc
push
and
jge
cdq
mov
or
sub
jae
inc
(bad)
int3
fild
xor
inc
adc
mov
sub
mov
lods
shl
mov
enter
retf
mov
or
js
dec
(bad)
test
jae
cmp
sub
and
movs
sbb
fidiv
mov
sub
sbb
jmp
ds
lods
mov
out
xor
pop
fldcw
push
xor
(bad)
icebp
mov
popa
pop
jbe
dec
(bad)
fst
in
jno
jno
xchg
push
inc
sub
fdiv
xchg
js
xchg
pop
sub
repz
cli
add
(bad)
ror
arpl
retf
xchg
mov
dec
adc
fisttp
push
movs
cmp
mov
cmc
and
fild
into
cmp
mov
adc
mov
sahf
inc
adc
(bad)
push
mov
aas
(bad)
stos
adc
jae
dec
xchg
lock
test
xchg
push
scas
sbb
out
jle
test
dec
jp
sub
jg
inc
jl
add
cmps
idiv
adc
push
fldenv
fsubr
into
std
and
sub
in
ret
mov
enterw
xor
push
sub
pop
push
pushf
rcpps
stos
inc
shr
imul
outs
pop
int
mov
jo
mov
push
cmp
stos
or
movs
adc
push
cmp
sbb
xchg
das
sub
in
cmp
(bad)
leave
pop
outs
pop
ja
or
cmp
sar
xchg
cmps
aad
and
fcmovnu
mov
push
in
xor
cmp
push
sbb
mov
mov
adc
js
out
jns
retf
(bad)
sti
mov
rol
mov
and
cs
xor
fidivr
push
mov
enter
cmps
jmp
stc
mov
loop
xchg
(bad)
cmp
sahf
or
jp
push
add
fisub
sbb
mov
cmp
test
mov
gs
or
sub
jb
loope
fsubr
adc
out
mov
inc
lock
jmp
adc
std
add
cmp
jb
xchg
add
sar
xchg
jnp
jnp
je
cld
loop
sbb
xchg
icebp
pop
shl
pop
mov
push
mov
add
mov
(bad)
pop
xor
ja
cmc
pop
or
dec
push
cwde
aaa
bound
pop
in
out
nop
mov
js
popf
int
push
iret
cld
cmc
push
lea
sub
ins
xor
loopne
repnz
add
push
enter
add
rol
les
push
xchg
jge
retf
arpl
jbe
push
add
adc
add
dec
cmp
ins
dec
mov
xor
(bad)
mov
mov
fldenv
mov
es
and
inc
movs
xlat
push
dec
out
dec
inc
icebp
leave
inc
je
fwait
or
mov
xor
ins
fistp
push
outs
shl
in
mov
imul
mov
jae
push
cmp
sti
add
in
or
lods
pop
es
mov
mov
cmp
movs
inc
fist
sbb
cmp
jle
cli
fiadd
scas
jecxz
mov
adc
push
cmp
push
dec
dec
cli
cmp
xchg
pop
aad
les
js
mov
mov
pushf
ficom
cdq
popf
lods
cli
cwde
je
shl
movs
fs
call
pushf
cmps
dec
retf
add
sub
loop
jb
idiv
mov
push
adc
mov
xchg
das
aas
xchg
lock
popa
pusha
push
jmp
mov
aaa
rol
jno
clc
inc
pop
les
or
or
xchg
mul
jo
scas
fisubr
mov
arpl
or
sar
(bad)
jb
push
sbb
cmps
test
xlat
cmps
mov
retf
inc
fs
sti
push
arpl
add
aas
inc
adc
in
and
sub
mov
push
fwait
stc
aas
sub
add
sbb
push
rol
js
xor
push
scas
push
inc
cmp
mov
mov
sti
idiv
pop
jb
les
dec
and
loope
mov
mov
pop
ja
cmp
fisubr
and
(bad)
sub
xor
cmp
xchg
iret
ds
cmp
inc
mul
in
pop
pop
cdq
add
and
dec
jmp
xchg
dec
pusha
xchg
loopne
cmc
add
fsubr
mov
cdq
cs
sub
ja
push
dec
add
rcl
sub
in
mov
mov
push
sahf
fs
clc
pop
dec
pop
icebp
loope
or
pushfw
fcomp
loope
add
xor
adc
arpl
loope
test
jnp
sbb
dec
retf
movs
fsubr
jnp
jecxz
imul
and
adc
repnz
mov
jnp
push
ds
sbb
lahf
mov
jns
fxch
add
inc
sahf
push
repnz
inc
fwait
inc
cmp
mov
out
lods
mov
lods
aaa
pop
ficom
fcom
mov
in
push
ret
das
je
ss
jecxz
ss
clc
lock
lahf
push
mov
mov
or
call
cs
mov
mov
sub
inc
mov
xor
bndstx
adc
and
retf
mov
fwait
sar
sbb
mov
mov
(bad)
mov
inc
adc
mov
call
and
pop
ins
mov
sar
lea
mov
inc
sbb
cmps
aas
mov
and
cwde
sbb
gs
add
adc
iret
enter
mov
retf
adc
cmps
in
lock
out
stos
add
and
jmp
data16
daa
xor
xor
into
sti
aad
add
lock
xchg
mov
jecxz
outs
jmp
fcom
dec
repz
and
out
ret
in
ds
sbb
pop
les
in
push
es
inc
push
sub
dec
push
fimul
or
push
shl
stos
sbb
inc
dec
push
push
sbb
fadd
sub
cmp
inc
mov
aam
leave
push
sbb
push
dec
bound
and
cmp
ficomp
xchg
xchg
lods
ds
(bad)
hlt
jnp
and
in
paddq
ins
and
int3
jmp
sub
iret
fucom
stos
cmp
dec
ins
or
xlat
pop
adc
ja
or
cmp
xlat
inc
stos
xrelease
retf
sbb
jb
push
movs
imul
dec
leave
shl
sbb
cli
mov
out
std
dec
xchg
and
fs
pop
inc
es
(bad)
pushf
inc
test
xadd
outs
fnstsw
test
lahf
fldenv
lea
jp
mov
mov
jns
adc
cli
sbb
nop
add
mov
repz
outs
call
movs
stos
ins
movs
scas
mov
sbb
xor
(bad)
jno
mov
jp
inc
fidiv
cmps
iret
scas
adc
or
inc
sti
ins
push
mov
jg
push
loope
push
sub
pop
sub
mov
stos
sbb
fcom
and
shr
jp
push
cld
shl
repnz
cmp
(bad)
pop
(bad)
bnd
mov
fld
ror
adc
xchg
add
push
in
in
in
or
lods
jg
jecxz
push
ins
mov
mov
(bad)
mov
iret
repz
test
xchg
sti
mov
dec
aam
mov
cmp
scas
mov
mov
cmp
leave
fldlg2
(bad)
xor
inc
shr
stos
daa
cmp
test
repnz
bswap
scas
movs
ror
push
es
adc
mov
mov
mov
ins
and
cmp
sbb
fcom
and
icebp
int
mov
xchg
(bad)
lock
or
jns
ret
stc
adc
push
cmp
sbb
jmp
xor
stos
push
ds
xchg
and
xchg
jne
mov
hlt
pop
scas
cmp
jmp
ror
and
leave
sbb
enter
sbb
fnstcw
xchg
cmp
and
pop
pop
int
cli
adc
sbb
cmp
push
cmp
in
test
pusha
gs
mov
push
scas
loop
jl
lea
mov
fistp
int
and
ret
mov
repz
mov
fisubr
in
and
stos
loope
mov
pop
mov
mov
sbb
pushf
pop
jge
and
retf
sub
mov
sbb
jns
xchg
push
les
sub
mov
in
arpl
mov
cmps
xchg
mov
xlat
adc
jae
jnp
ss
inc
mov
in
movsx
pop
repz
cwde
push
mov
cmp
pop
out
xor
cmp
movs
or
sar
call
mov
mov
and
out
ds
sub
sub
or
adc
jb
imul
mov
in
xchg
call
and
out
cs
(bad)
push
xor
dec
push
out
add
xchg
xchg
xlat
gs
ss
cmc
mov
call
mov
adc
xchg
stos
mov
or
in
jno
xchg
pusha
sbb
mov
aam
movs
(bad)
mov
in
mov
push
test
and
jecxz
jmp
lods
and
rcl
(bad)
xlat
movs
mov
into
xor
mov
imul
xor
xchg
movs
mov
lds
retf
repz
pop
fistp
mov
xchg
ins
test
popf
(bad)
lock
mov
std
mov
out
inc
stos
mov
adc
ret
jo
retf
cs
cli
cmp
sbb
ror
in
leave
(bad)
mov
dec
jo
or
std
cmp
xchg
or
mov
pop
sub
mov
xchg
jl
jge
xor
xor
dec
(bad)
mov
pop
add
mov
inc
add
cs
pop
mov
jg
push
and
fist
mov
or
jb
scas
mov
cmovs
adc
add
in
pop
pop
inc
cmps
adc
jnp
stos
arpl
cmps
imul
dec
fcom
movs
in
xlat
xchg
xor
xchg
mov
xchg
xor
mov
push
mov
out
sub
or
pop
or
sub
adc
fdiv
outs
cmps
jle
jne
add
dec
ds
aam
in
jbe
fst
test
xor
dec
lds
adc
les
jle
pusha
pop
and
or
and
and
add
fistp
add
push
lods
xchg
and
popf
ss
stos
iret
mov
cld
jno
out
out
or
(bad)
push
inc
mov
fwait
push
sub
and
ins
leave
outs
mov
and
es
mov
aam
out
jle
pop
call
ja
push
sub
into
jns
gs
inc
jnp
add
into
inc
loop
fadd
push
jno
dec
pop
in
test
mov
inc
(bad)
pop
xchg
mov
mov
and
mov
sub
jne
js
mov
pop
jle
jmp
add
inc
cs
scas
fcomp
jge
imul
mov
push
fsubr
mov
ins
add
push
out
pop
sahf
adc
je
es
xor
fcom
daa
repz
or
adc
push
ds
xchg
push
dec
out
jmp
cpuid
or
inc
sbb
inc
fsub
call
add
fs
push
(bad)
int
jecxz
fs
mov
xchg
xlat
and
daa
daa
mov
pop
xor
xor
movs
pop
int
mov
fwait
dec
adc
mov
dec
xor
push
dec
outs
out
repz
jne
ins
sbb
mov
iret
mov
or
xor
lgs
ins
fadd
cmps
shl
(bad)
cmp
cwde
das
and
jmp
pop
pop
mov
pop
aad
mov
sub
mov
das
cmp
add
hlt
dec
sub
sub
jmp
loopne
sub
and
adc
es
sbb
aaa
je
loop
sub
push
icebp
pop
cmp
ss
loope
mov
mov
dec
xchg
push
pop
mov
jne
adc
jl
out
clc
jge
add
cmps
mov
(bad)
jmp
loopne
mov
popf
cmp
push
loope
jecxz
mov
retf
xor
mov
cmp
daa
xor
xlat
mov
outs
jmp
popf
add
dec
aam
sbb
add
or
addr16
jmp
or
push
jmp
adc
leave
jmp
in
inc
lods
xchg
aas
mov
out
xor
sbb
ins
inc
nop
idiv
xor
retf
jne
mov
jge
sub
jmp
xor
add
cmp
pop
icebp
aam
adc
xor
lahf
inc
sbb
mov
xchg
cmp
in
fimul
xchg
jl
mov
dec
push
(bad)
mov
cli
add
enter
sbb
mov
aam
pop
mov
adc
add
mov
pusha
pop
inc
mov
ins
mov
stos
into
icebp
imul
dec
das
pop
cmp
mov
xor
enter
(bad)
std
popf
inc
pop
mov
shl
sbb
or
test
leave
ret
sub
(bad)
jmp
ret
outs
xchg
xchg
(bad)
idiv
mov
cmps
xor
(bad)
mov
cwde
sub
xchg
dec
push
loope
lods
jns
enter
loop
inc
bound
iret
fiadd
jb
(bad)
xchg
sbb
cdq
int
inc
fld
jmp
(bad)
xchg
js
cmp
ins
sti
xchg
std
push
ins
bound
push
mov
les
pop
jnp
out
outs
cmc
bound
lds
jb
clc
mov
sbb
xbegin
push
icebp
sbb
mov
loop
fs
jno
adc
pushf
mov
js
aam
stc
xor
rol
rcr
in
cwde
hlt
jl
mov
int
pop
xor
sbb
mov
fs
retf
test
mov
out
std
pop
scas
fdivr
(bad)
cld
jno
es
test
mov
push
test
icebp
add
sbb
mov
adc
sti
mov
jb
dec
aad
sub
jmp
stos
or
je
jb
mov
popf
imul
jno
icebp
fist
jae
push
push
std
jmp
mov
(bad)
pop
scas
pop
inc
mov
sub
ror
xchg
test
cmp
pop
not
gs
fidivr
cdq
outs
jp
call
pop
xchg
dec
push
aaa
out
pop
xor
pusha
mov
xchg
pop
imul
in
fidivr
mov
pop
sub
dec
pop
retf
mov
icebp
hlt
and
dec
ss
xor
fmul
sub
(bad)
mov
jmp
mov
scas
cld
cmp
pushf
aas
jge
mov
inc
fldcw
mov
or
in
pop
cmps
bound
xor
ror
les
repnz
mov
repz
fwait
stc
jle
not
ds
repz
or
je
add
call
subps
les
mov
fdiv
pop
scas
push
test
cmp
int3
jecxz
cmp
mov
sub
mov
je
in
xor
mov
test
mov
outs
pop
sbb
repnz
or
or
xor
jo
rcl
pop
or
cmp
stos
ins
jnp
jecxz
dec
jmp
mov
pop
adc
in
mov
xchg
repz
daa
fmul
cdq
mov
imul
pop
adc
sub
mov
mov
repz
out
push
or
pop
mov
lds
sub
or
lods
fnstenv
fmul
and
icebp
mov
scas
xor
(bad)
xor
add
scas
sahf
mov
out
dec
(bad)
jg
xchg
sub
xchg
push
in
scas
or
sbb
in
call
xchg
sbb
iret
enter
xchg
pushf
pop
cmp
shl
xchg
cmps
in
lea
jl
mov
add
pop
cmc
sub
mov
push
(bad)
lods
stos
mov
loop
sub
xlat
ins
jmp
fmul
adc
xor
sub
pop
icebp
arpl
in
or
loope
inc
fdivr
loop
cs
shr
sub
sar
mov
mov
repnz
leave
sbb
inc
cmp
dec
inc
lea
stos
cmp
mov
movs
cdq
jecxz
jns
mov
mov
pop
cmp
inc
outs
jecxz
push
test
fldenv
adc
sub
or
fnop
mov
push
dec
(bad)
sub
aad
add
neg
mov
xchg
and
jbe
stos
cmc
(bad)
popf
jp
inc
retf
jbe
mov
sub
ss
daa
(bad)
push
shr
sub
push
arpl
int
add
out
add
call
adc
push
or
sub
out
fwait
arpl
cmc
fsub
mov
sub
les
call
movs
cmc
fwait
jmp
pop
pop
sti
ret
retf
mov
jnp
xor
mov
in
mov
aaa
inc
dec
fcomp
mov
mov
add
sub
cmps
mov
and
repz
push
jp
sub
add
or
pop
mov
(bad)
(bad)
mov
pop
test
dec
out
(bad)
sbb
push
sbb
out
inc
inc
cmp
aam
jne
pop
sar
pxor
mov
fisttp
adc
push
push
sub
retf
dec
imul
mov
mov
mov
fsubr
xchg
ficomp
outs
iret
push
fucomip
jmp
sbb
sub
push
repnz
icebp
inc
jb
mov
leavew
das
cmp
stc
ret
xchg
xor
push
popa
imul
sub
clc
adc
jne
(bad)
push
js
aaa
jae
(bad)
adc
scas
xchg
call
dec
mov
mov
jg
add
retf
pop
and
push
popf
lahf
shl
aaa
mul
es
pop
adc
pop
and
or
push
mov
mov
int3
stc
lahf
mov
into
test
dec
or
jnp
jecxz
ret
aas
xchg
inc
(bad)
cmc
mov
(bad)
push
fwait
push
push
enter
dec
cmp
mov
or
lods
fisttp
retf
xor
fild
add
stos
ror
push
rol
adc
daa
int
sub
mov
loope
jg
pop
(bad)
iret
inc
loopne
ins
pop
in
adc
jl
sahf
add
xor
xchg
scas
jp
lahf
inc
ror
test
aas
mov
or
jno
sub
sahf
fs
ins
pushf
out
dec
in
aam
inc
inc
pop
mov
and
rol
mov
pop
popf
push
sub
(bad)
xor
jae
sub
retf
sub
rcl
cli
sub
push
and
fst
xor
daa
idiv
sti
ja
mov
adc
xchg
sub
ins
jno
les
out
fdivr
inc
cli
jl
xchg
jle
aam
jecxz
xchg
pushf
mov
lahf
or
(bad)
loopne
jnp
test
sahf
pushf
xor
or
scas
jmp
cmp
adc
les
or
xchg
dec
jg
nop
xor
(bad)
jg
cmp
call
cmp
daa
loop
xor
enter
mov
mov
ja
and
push
fwait
xor
aam
pushw
lahf
imul
movs
pop
xchg
popa
cli
mov
mov
popf
sub
pop
push
xlat
pop
mov
dec
call
sar
jle
dec
iret
dec
ins
mov
or
dec
xchg
jnp
xchg
aas
sbb
and
xchg
pop
ret
cmp
push
or
test
inc
pop
call
shl
jecxz
jbe
or
lods
mov
dec
push
dec
std
mov
mov
dec
popf
in
imul
dec
pxor
jmp
test
xchg
fst
mov
jo
xor
xor
jmp
xor
mov
rcr
stc
mov
push
mov
in
or
div
mov
mov
add
rcl
imul
out
arpl
scas
ds
adc
mov
or
sub
je
or
mov
retf
cmp
adc
inc
xchg
pop
mov
cmps
or
xchg
fisub
call
jmp
sub
loopne
mov
add
mov
push
cmp
sub
je
or
jecxz
test
lahf
cs
imul
addr16
mov
cli
sar
add
xchg
sub
cmp
lods
cmps
pop
repnz
shl
push
ret
in
pop
sar
dec
xor
sbb
mov
in
stos
cmc
inc
pusha
add
cmps
mov
jae
out
movs
cwde
rep
push
and
jge
dec
and
sub
icebp
mov
je
daa
leave
sbb
je
test
ds
mov
jmp
paddsb
mov
test
push
sbb
inc
pop
sbb
(bad)
cmp
and
inc
popf
(bad)
lods
xchg
xchg
sub
mov
arpl
xor
retf
aam
cld
ret
mov
dec
lods
dec
pop
jl
out
jmp
mov
adc
leave
jmp
fsubr
sub
dec
mov
push
inc
rcr
jmp
hlt
sahf
stos
dec
push
rcl
ins
cmp
das
sbb
out
pop
sbb
mov
and
jns
shl
lahf
and
inc
mov
ret
into
or
xlat
fisubr
pop
jl
aad
sti
push
mov
adc
cmp
dec
inc
cmps
pop
shufps
mov
aaa
jne
push
adc
adc
popf
not
fist
aaa
jo
mov
mov
push
mov
jae
or
das
outs
and
push
cmps
iret
pop
or
sahf
xchg
popa
or
fidiv
fsub
mov
adc
adc
pop
xchg
jnp
jb
cmp
out
sahf
and
add
cmp
ins
cmps
pop
sub
(bad)
call
xchg
mov
pusha
test
aad
mov
mov
jmp
daa
ror
xor
int
inc
rol
fistp
popf
clc
ins
fsub
and
and
add
imul
cmps
pop
add
movs
fidiv
int3
movs
rcl
mov
sbb
xor
pop
mov
sbb
scas
call
gs
xor
cmp
sahf
xor
bsr
aam
lea
lods
adc
sbb
cdq
push
xchg
xchg
pushf
jmp
or
cmps
addr16
int3
mov
add
mov
mov
pop
push
push
das
push
add
test
sub
test
sbb
into
call
(bad)
aaa
icebp
notrack
mov
mov
ss
popa
adc
mov
add
mov
enter
and
ja
mov
dec
jnp
sub
sbb
push
nop
sub
fstp
adc
nop
(bad)
rol
or
sbb
stos
adc
mov
icebp
jle
jne
xchg
jnp
jns
ins
inc
or
or
loop
pop
dec
jg
mov
jmp
dec
mov
(bad)
ins
vpmaddwd
adc
add
lds
and
mov
arpl
or
in
xor
in
jo
pop
cmps
cmp
pop
cli
cmc
int
xor
push
aaa
lds
cmp
outs
in
retf
xchg
sub
mov
fisubr
dec
stos
push
adc
aad
ins
das
(bad)
call
loope
sub
and
pop
test
dec
ja
test
pop
cs
stos
cmp
cmps
xor
add
mov
daa
mov
jnp
faddp
xchg
outs
and
imul
pop
pop
jne
xchg
push
jecxz
pop
push
mov
add
jno
shl
in
xor
(bad)
cli
or
jl
retf
retf
jmp
out
mov
test
sub
or
test
pop
(bad)
jmp
hlt
clc
xor
mov
jl
mov
inc
xchg
in
push
test
loope
out
sub
in
psubsw
sub
pop
movs
dec
sub
fldenv
cmps
xlat
into
lahf
cdq
in
push
out
inc
sub
inc
jge
pop
push
cmp
cli
mov
call
jbe
fnstcw
popa
das
aad
adc
js
loopne
add
pop
mov
imul
popf
(bad)
das
daa
mov
jbe
dec
cld
imul
repnz
sahf
mov
cmp
rol
rcl
jbe
jmp
and
sub
xchg
repz
push
(bad)
sbb
jmp
fsubr
jo
xchg
pop
scas
ja
jmp
push
jno
movs
mov
xlat
outs
dec
cmp
(bad)
pop
or
and
test
pop
out
inc
sahf
aad
dec
mov
stos
mov
retf
xchg
mov
stc
push
imul
mov
fdivr
addr16
ror
inc
pop
(bad)
loopne
stc
(bad)
mov
fdivr
ss
gs
popf
mov
jle
and
repz
push
push
popf
neg
into
sbb
lock
mov
push
sti
in
xchg
addr16
add
ss
(bad)
jg
bound
push
loop
add
ins
mov
pop
call
mov
fnstsw
jo
imul
xchg
push
pop
inc
cmp
cmp
or
out
jns
sar
xchg
pop
mov
mov
cmp
rol
mov
bound
mov
lods
call
adc
adc
popf
fstp
inc
mov
mov
mov
sub
aaa
and
dec
scas
sbb
enter
mov
in
in
gs
sbb
test
(bad)
cli
mov
cli
adc
cli
mov
xor
jmp
loop
fdivp
or
cmc
jmp
pop
cmp
dec
outs
mov
adc
icebp
ss
retf
add
daa
lock
jmp
mov
pop
dec
gs
test
lods
push
outs
loope
sub
push
pop
jb
rol
int
add
xchg
mov
xor
mov
arpl
push
fmul
mov
add
addr16
mov
in
sbb
adc
sbb
push
adc
enter
xchg
loopne
adc
inc
imul
sub
mov
cmc
inc
and
pop
ret
call
nop
shl
and
sub
fmul
mov
ret
xor
push
push
jmp
adc
fcmovnb
hlt
xchg
mov
inc
xchg
outs
cmp
fsubr
mov
push
jns
mov
adc
lods
leave
sti
sbb
ins
hlt
mov
int3
dec
in
push
pushf
mov
(bad)
adc
in
test
jb
das
lods
xor
xchg
adc
je
xchg
or
jnp
cwde
sar
xchg
mov
(bad)
jmp
mov
call
add
mov
inc
in
js
add
jno
ins
mov
pop
rcr
sti
cld
repnz
repnz
inc
cmp
or
repnz
adc
mov
and
loope
push
out
jle
pushf
or
mov
ja
icebp
into
aad
cs
cli
jmp
xchg
mov
aaa
mov
mov
mov
dec
xchg
dec
std
lock
outs
dec
and
push
mov
or
ja
or
popa
xchg
pop
in
aad
das
leave
shl
add
in
das
sub
dec
add
test
test
pop
sbb
call
xchg
stos
cmp
out
cmp
es
jg
xchg
lock
mov
sti
mov
mov
lds
daa
das
sub
adc
dec
and
xor
in
rcr
jne
jns
xor
popf
(bad)
clc
fidiv
sub
lods
jo
xchg
or
sub
data16
adc
mov
ficomp
loop
test
inc
(bad)
pusha
adc
and
mov
iret
les
in
(bad)
sub
rcl
pop
lods
outs
pop
aaa
pushf
mov
mov
xor
in
mov
mov
fisubr
shl
cmps
ror
push
or
cmp
jae
xchg
test
xchg
stos
xchg
stos
lea
iret
jecxz
jae
and
jbe
nop
pusha
in
pop
fsub
xchg
jmp
(bad)
call
dec
pop
int3
and
push
test
loop
dec
cmc
test
cmp
jno
inc
loop
fst
mov
fcom
rol
in
das
xchg
push
call
push
sti
or
mov
(bad)
cmps
lahf
cmp
imul
outs
jmp
mov
mov
(bad)
mov
jns
add
pop
jno
mov
push
pop
push
and
push
mov
dec
add
enter
lock
cwde
push
or
scas
inc
fdiv
daa
lods
retf
add
dec
mov
adc
push
repnz
outs
ins
xor
pusha
in
stos
fst
push
mov
xor
(bad)
out
shl
leave
hlt
clc
jmp
out
(bad)
out
ja
xor
loope
fbld
pop
push
push
mov
inc
push
test
loope
lahf
bound
cmp
or
adc
outs
call
test
sbb
mov
xchg
retf
cmc
dec
push
idiv
fsubr
mov
push
in
mov
in
lea
stos
repz
and
call
adc
shl
mov
dec
jmp
outs
test
dec
loopne
out
sbb
cld
(bad)
push
mov
lds
fcmovbe
enter
sub
inc
jle
icebp
scas
addr16
cld
cmps
add
inc
rol
xchg
es
call
jg
or
daa
pop
popf
(bad)
pop
call
pusha
add
mov
add
movs
stos
push
mov
popa
and
lahf
jecxz
push
nop
and
cs
mov
test
hlt
sub
cmc
les
and
adc
inc
inc
cmps
movs
out
add
adc
rcr
stos
icebp
xor
dec
inc
and
je
pop
shr
in
aam
mov
mov
mov
mov
push
adc
fdiv
mov
in
addr16
mov
add
jecxz
outs
cmp
jmp
dec
lds
cmp
mov
test
sub
cli
(bad)
bound
jge
loop
movs
sub
icebp
popf
pusha
mov
mov
mov
jecxz
imul
arpl
movs
xchg
(bad)
xchg
lods
push
in
adc
mov
enter
add
std
rcl
jne
jg
pushf
mov
cmp
imul
or
or
xchg
cmp
lea
add
popf
add
iret
das
sbb
mov
movs
mov
dec
xchg
xor
jnp
mov
(bad)
imul
enter
icebp
mov
imul
js
pop
sti
pop
push
dec
iret
jne
loope
cwde
pop
mov
xchg
and
out
mov
iret
inc
and
inc
test
xor
addr16
dec
pop
pop
(bad)
lods
push
loop
xchg
inc
shl
push
xchg
retf
sar
ins
loope
popa
(bad)
pop
jmp
cmp
add
aad
mov
cmps
cmp
mov
inc
xchg
loopne
(bad)
xlat
adc
fisub
(bad)
mov
movs
ins
push
xor
jge
loope
in
hlt
or
push
and
aas
daa
dec
(bad)
fisubr
mov
scas
dec
mul
aad
das
jl
xor
sub
ins
mov
mov
pop
mov
sbb
aam
js
pop
test
mov
jl
jle
adc
xor
sahf
ret
sti
xchg
mov
dec
std
shr
aad
mov
xchg
or
adc
mov
xor
addr16
mov
xor
jno
test
push
mov
mov
or
push
inc
dec
and
adc
or
dec
call
movs
aam
daa
daa
jno
out
fcom
inc
aas
enter
scas
inc
jp
sub
cmp
sub
dec
sbb
out
cmp
sub
shr
dec
outs
in
shl
inc
xchg
adc
test
xchg
enter
jl
mov
add
je
into
xor
inc
popa
mov
ins
ds
xchg
or
inc
or
sar
movs
movs
xor
cwde
clc
out
or
and
fwait
or
imul
mov
jmp
jmp
pop
retf
dec
jge
stc
shr
sub
and
xor
pop
movs
lods
cmps
call
mov
push
adc
pop
fwait
cld
(bad)
fdivrp
dec
mov
jmp
and
out
int3
mov
and
scas
mov
sub
or
jmp
enter
aad
leave
fs
cmp
mov
dec
fdiv
mov
mov
xchg
fwait
gs
fcom
or
scas
loop
mov
and
mov
ret
cmp
cmp
pop
push
out
sub
jmp
int3
xchg
push
mov
adc
push
aaa
and
xchg
and
enter
mov
cmp
ficomp
xor
cmps
or
mov
mov
(bad)
cli
xor
ss
adc
ss
and
or
xor
push
fcomp
adc
test
icebp
pop
and
sbb
loope
call
lea
mov
iret
sub
inc
not
cmp
call
push
cdq
pushf
fstp
sub
mov
add
imul
ja
jo
push
sti
imul
xchg
push
cmps
lods
js
fs
dec
loopne
inc
mov
repnz
add
pop
fwait
je
ffreep
xchg
ss
cwde
(bad)
aam
jnp
xor
add
(bad)
cli
lahf
jle
cs
ror
xor
(bad)
push
sbb
and
mov
punpckhdq
jl
sub
push
cmp
add
cmps
leave
mov
imul
ret
cmp
push
jle
ins
or
and
das
pop
cdq
xchg
mov
sub
push
sbb
cmp
or
and
shl
cmp
push
mov
pop
jmp
push
adc
mov
push
icebp
fisubr
jno
scas
jl
adc
fsub
mov
xor
add
mov
out
jb
push
in
xchg
mov
mov
jae
cmps
rcr
and
arpl
cs
mov
cli
retf
pop
adc
call
(bad)
(bad)
sub
push
jno
xor
stos
popf
imul
jae
mov
push
out
add
pop
xchg
push
dec
aam
nop
mov
rcl
or
pop
jb
sti
in
xchg
test
push
int
data16
add
je
daa
cs
adc
mov
dec
pop
(bad)
or
daa
pusha
sbb
and
add
setl
mov
not
jb
in
mov
inc
out
mov
push
inc
jbe
scas
cmp
ins
mov
xor
xor
das
aad
lahf
and
push
lahf
cmp
xchg
adc
neg
or
inc
push
pop
je
movs
xchg
in
mov
pop
aaa
jbe
test
cwde
ds
inc
pop
icebp
inc
add
test
addr16
inc
sahf
dec
ds
jnp
add
sbb
xchg
mov
xchg
push
or
out
add
rol
jle
mov
test
fnsave
jmp
adc
repz
cmp
pop
enter
popa
mov
xchg
and
cld
dec
cld
dec
ror
ret
ficom
es
and
pop
inc
inc
ficom
rcl
and
fld
mov
int3
xchg
in
fbstp
in
cmp
pop
stc
nop
and
jle
pop
dec
jp
cmp
rol
sbb
xchg
fild
dec
jmp
adc
leave
pop
pop
inc
ficom
adc
int3
mov
nop
push
dec
fiadd
outs
movs
in
ja
push
in
add
fsqrt
inc
inc
mov
dec
imul
test
test
push
inc
or
cmp
outs
xor
xor
(bad)
push
mov
cmp
sub
ret
add
movs
ja
test
dec
mov
push
mov
dec
test
mov
mov
scas
jmp
dec
mov
dec
or
dec
add
cld
out
cli
fcmove
imul
pop
mov
call
ret
cmp
das
inc
pop
js
mov
ret
stc
jo
dec
iret
(bad)
jmp
add
popf
jb
test
lods
dec
mov
cld
push
sbb
add
fimul
push
mov
test
sub
jmp
xchg
out
jp
ret
popf
adc
xor
test
add
cmps
add
loop
xlat
adc
test
inc
and
jmp
jecxz
push
xchg
pop
xchg
mul
call
enter
xchg
mov
mov
or
test
sahf
in
xor
jl
jae
jmp
les
pop
or
xchg
jg
mov
imul
mov
sub
inc
mov
mov
mov
push
mov
popa
add
fimul
adc
mov
test
les
inc
push
mov
sub
dec
xchg
movs
add
cmc
xlat
sub
mov
pusha
dec
rol
adc
loopne
push
test
or
adc
push
out
sbb
mov
pop
xchg
test
inc
cmp
xlat
or
fstp
and
jb
retf
ret
mov
pop
push
clc
je
enter
pop
fdivr
jl
(bad)
mov
test
add
enter
cld
lods
cmp
js
nop
adc
ret
push
ja
jle
add
(bad)
not
sbb
mov
xchg
sar
dec
dec
or
paddb
mov
add
xchg
call
test
popf
outs
or
add
mov
add
adc
std
xor
popa
cmps
nop
(bad)
push
or
mov
mov
cld
in
mov
dec
pop
xchg
(bad)
(bad)
dec
gs
movs
out
push
(bad)
sbb
push
sub
mov
mov
scas
mov
outs
fcmovb
addr16
or
loopne
cmp
imul
ret
rcl
jmp
imul
pop
(bad)
jp
cmp
xor
jg
pushf
sbb
jnp
inc
mov
jmp
and
adc
inc
test
jge
pop
icebp
loopne
adc
ins
outs
mov
ret
in
icebp
rol
adc
mov
mov
push
push
js
sbb
pop
mov
xor
call
aas
aas
lds
pusha
(bad)
and
call
mov
and
cli
loope
mov
jae
test
out
xchg
dec
add
jns
sbb
ss
push
xchg
fcomp
push
dec
pop
add
cmc
push
adc
xchg
sub
rcl
(bad)
ss
push
jl
add
ficom
ret
fld
iret
imul
rcl
cmps
push
(bad)
push
pop
pop
and
sbb
or
xchg
lods
clc
inc
push
mov
dec
cmp
push
out
inc
clc
icebp
mov
clc
iret
mov
mov
ret
xor
repnz
mov
and
out
mov
add
push
mov
cmp
sub
mov
push
or
xlat
out
and
stos
test
xchg
rcr
loopne
ins
lahf
push
pushw
mov
sbb
test
call
jnp
into
pop
xlat
mov
mov
ss
push
hlt
mov
push
test
adc
or
sub
or
jge
mov
or
aaa
aam
iret
add
fs
and
scas
outs
popa
or
dec
pop
inc
aas
push
sub
sar
inc
sbb
sub
sbb
dec
jnp
jo
ins
mov
out
bswap
pusha
dec
int
push
loopne
idiv
xor
int3
hlt
cmps
nop
sub
push
dec
nop
stos
ret
jnp
pop
and
out
mov
or
std
retf
sub
gs
ret
push
push
lds
shr
jo
add
or
adc
lds
push
out
xor
and
stc
pusha
push
nop
idiv
call
and
in
arpl
jmp
shr
mov
ja
rcl
test
inc
jle
sub
mov
clc
mov
shl
jo
xchg
inc
pop
movs
ds
or
(bad)
pop
jns
mov
and
test
push
shl
fdiv
and
or
mov
mov
mov
pop
pop
sbb
fdivr
(bad)
sti
loopne
rol
add
push
(bad)
out
jl
data16
or
rcl
arpl
inc
imul
cmp
pop
cmp
mov
inc
pushf
sbb
test
rcl
jge
pop
mov
mov
and
pop
(bad)
mov
icebp
daa
inc
cld
inc
test
adc
push
jns
mov
or
mov
loope
or
lds
or
xor
jae
push
jae
push
mov
or
mov
inc
inc
mov
lods
sub
ds
mov
add
icebp
sbb
sub
dec
inc
and
jno
retf
mov
sbb
push
je
(bad)
or
and
imul
jp
add
test
adc
enter
push
cmp
or
in
jae
inc
or
jb
push
aam
aas
push
rcr
repz
jg
in
fist
cmps
push
stos
out
or
push
test
mov
jne
push
jg
mov
loope
push
mov
(bad)
dec
or
mov
repz
cli
test
cmps
cmps
mov
ds
js
lds
ss
call
adc
pop
js
jmp
out
sub
adc
push
fmul
stos
xchg
je
stos
pop
xchg
inc
out
push
xchg
jbe
js
mov
add
adc
repz
xchg
mov
dec
pop
mov
out
(bad)
mov
adc
lds
sub
fldcw
cwde
jl
jb
xor
mov
lea
inc
push
sub
inc
cmps
sub
push
call
push
mov
xchg
jl
sub
mov
or
jnp
mov
fsubr
mov
inc
xchg
mov
loope
sahf
pusha
push
adc
clc
bound
adc
cmp
(bad)
fsub
sub
jbe
daa
dec
jmp
mov
ins
inc
test
push
dec
mov
mov
push
inc
not
xlat
pop
(bad)
xchg
movs
(bad)
test
call
imul
jecxz
aad
mov
inc
cdq
or
lock
inc
mov
add
or
mov
jmp
jns
add
dec
gs
(bad)
stc
add
push
inc
mov
xchg
dec
inc
cwde
sbb
(bad)
not
mov
loop
sbb
add
sbb
data16
jb
stos
sub
lods
push
cli
sub
dec
pop
pop
outs
std
push
dec
xlat
jbe
(bad)
add
jp
sbb
(bad)
loope
sub
ss
jmp
test
cmp
cdq
fdivp
xor
idiv
and
lea
into
xchg
jb
jb
inc
and
adc
retf
(bad)
and
sar
xchg
xor
dec
aam
add
pop
ins
and
pop
repz
loope
jne
pop
pop
cmp
mov
sbb
push
data16
inc
xor
push
sar
test
cli
cdq
sbb
push
sbb
and
fprem1
ja
int3
pop
inc
xor
pop
ret
push
push
popa
dec
sbb
enter
sub
pop
xlat
(bad)
push
push
xchg
fist
dec
add
push
icebp
inc
in
xor
mov
shr
or
and
pop
cld
pop
push
and
push
popa
mov
lods
pop
cmps
push
in
jmp
or
xchg
(bad)
pop
pop
sbb
jp
push
enter
jbe
mov
mov
inc
jecxz
mov
mov
xor
jg
in
adc
rcr
dec
xchg
je
retf
mov
cld
pop
push
fcom
xchg
pusha
push
in
mov
scas
xor
dec
add
leave
dec
and
inc
lock
pusha
mov
ja
aas
hlt
bnd
jecxz
mov
scas
mov
out
pop
ret
jmp
cmp
aam
adc
mov
and
fisub
gs
outs
loope
stos
dec
xor
fcomp
cmp
lds
jmp
adc
mov
out
mov
in
repnz
adc
lds
mov
fcmovnu
ja
std
push
or
xlat
bound
jg
loopne
daa
es
fdiv
iret
jmp
pop
neg
mov
or
sub
sti
or
(bad)
pop
daa
dec
adc
arpl
mov
imul
sub
repnz
push
sub
jbe
mov
movs
data16
xor
and
sahf
in
sub
push
in
and
or
in
inc
adc
arpl
dec
mov
shl
mov
ins
xor
test
mov
aas
adc
lahf
pushf
pop
adc
scas
sbb
retf
mov
test
scas
ins
dec
nop
and
xor
loop
mov
push
jo
mov
jmp
mov
xchg
add
test
fild
lds
jg
mov
xchg
mov
pusha
retf
je
inc
outs
push
inc
sub
enter
jb
push
pop
or
pop
mov
fdivr
int3
xchg
mov
popf
fs
push
push
enter
mov
cmp
(bad)
and
bound
mov
mov
jg
arpl
mov
fbstp
dec
leave
add
mov
push
iret
pop
popa
test
xchg
repnz
mov
mov
pop
xchg
in
sub
sub
adc
shl
into
add
imul
stos
sub
adc
shl
sbb
pop
xor
dec
inc
adc
push
jns
outs
mov
mov
jbe
sar
sbb
xor
cmp
jmp
mov
push
out
add
or
push
mov
or
sar
pusha
fisttp
(bad)
cwde
push
push
shl
add
enter
xchg
mov
pop
push
mov
sub
les
(bad)
call
or
pop
jns
mov
shl
or
mov
mov
and
addr16
into
test
lods
pop
sbb
sub
mov
shl
sub
cli
and
ja
popf
sbb
add
cld
sub
inc
add
fimul
mov
and
fild
sbb
or
addr16
inc
cwde
popa
mov
jmp
xchg
and
test
push
push
(bad)
or
jmp
cmp
mov
fwait
mov
loope
push
add
iret
pop
gs
jg
rcl
pop
or
jp
adc
or
sub
xchg
fild
aad
sahf
cmp
mov
(bad)
fcom
movs
mov
int3
dec
int3
or
stos
fiadd
retf
sti
(bad)
arpl
mov
sti
jb
mov
add
xchg
jo
mov
xchg
popf
jge
ret
push
repnz
sbb
enter
jb
enter
ss
jl
jne
inc
xor
xor
push
cmp
mov
pusha
adc
and
repnz
shl
in
js
das
dec
repz
pop
push
popa
and
std
xor
cmc
imul
cmp
ficom
out
jae
xchg
(bad)
outs
imul
pop
push
les
jg
lods
and
xchg
mov
fnstcw
sbb
(bad)
mov
mov
adc
xchg
ja
popf
and
test
shl
adc
stc
mov
push
adc
xor
cmp
jle
push
lea
xor
les
mov
jg
mov
movs
pusha
xchg
push
call
nop
lahf
imul
or
in
outs
sbb
jne
jnp
add
fldenv
aam
sbb
ss
jmp
and
xor
ins
cmp
pop
arpl
cli
outs
mov
sbb
xor
or
dec
xlat
aam
adc
adc
pop
pop
loopne
ds
iret
cmps
push
out
dec
hlt
stc
pop
xchg
pop
push
stos
jg
loop
out
movs
ret
popa
jl
xchg
xor
dec
xor
xchg
xchg
fimul
aas
xchg
dec
popa
or
mov
repz
pop
jecxz
(bad)
mov
push
pop
arpl
mov
lds
ss
stos
mov
in
movs
inc
adc
xchg
mov
push
push
mov
add
mov
mov
inc
mov
mov
mov
mov
call
dec
xor
jae
popf
mov
sbb
retf
std
mov
push
and
aad
imul
(bad)
idiv
dec
pushf
pop
mov
pop
ja
mov
inc
inc
add
sub
test
std
xor
mov
jecxz
inc
xlat
clc
sar
fsubp
inc
pop
jmp
pop
mov
in
aam
mov
ss
mov
nop
mov
sub
dec
adc
ins
call
xchg
cld
mov
push
mov
sbb
call
push
fdiv
mov
je
ficom
mov
push
cmp
push
jae
and
inc
in
movs
cld
dec
mov
jno
fisttp
xlat
xchg
add
in
scas
retf
das
or
cmc
pop
adc
push
into
sbb
and
sub
xor
push
sub
sub
ss
mov
or
rcr
mov
dec
outs
add
outs
cmp
inc
mov
aas
push
adc
imul
xor
adc
shl
xchg
jno
xchg
jg
mov
cmp
jnp
clc
cmp
cmps
jno
scas
or
(bad)
xor
or
clc
inc
out
adc
jl
push
hlt
jae
sbb
mov
data16
and
cmp
jb
jle
inc
(bad)
fcomp
and
pop
cdq
lahf
icebp
pop
and
repz
adc
mov
pop
jno
xchg
push
ins
std
cdq
mov
push
xchg
mov
mov
jne
imul
sar
adc
xchg
inc
xor
pop
dec
(bad)
(bad)
push
icebp
ss
imul
call
inc
mov
add
xor
push
stos
popf
les
inc
mov
pop
cld
mov
pop
rol
out
mov
and
std
jno
cmp
jmp
adc
fucom
outs
(bad)
rol
je
pop
or
push
sbb
pop
mov
inc
popw
cmp
stos
push
mov
iret
sub
jp
dec
call
fidiv
fs
dec
into
stc
jge
adc
loope
inc
xchg
retf
mov
and
mov
mov
mov
out
cli
sbb
push
lods
aam
dec
mov
sbb
hlt
in
inc
(bad)
xchg
dec
je
sub
retf
ret
into
sub
dec
mov
popf
test
ss
fs
lds
test
dec
cmp
or
inc
jmp
xor
std
pusha
(bad)
pop
or
movs
retf
sbb
pop
das
adc
adc
ins
mov
mov
outs
pop
mov
gs
pop
sub
inc
push
fnsave
add
and
iret
popf
clc
or
fisubr
inc
pop
std
push
jmp
std
pop
jmp
cmp
push
ss
sub
adc
loopne
sbb
pop
pop
xchg
(bad)
jecxz
fisttp
push
test
je
(bad)
pop
gs
xor
xor
mov
mov
sub
fnsave
xor
aaa
aam
or
das
icebp
rcl
pop
imul
pop
mov
push
(bad)
aam
pop
sub
pop
mul
js
(bad)
mov
clc
pop
call
out
dec
adc
xor
hlt
jmp
and
cmc
shl
cwde
pushf
adc
push
out
push
ret
int3
sbb
pop
aad
inc
mov
cmp
lock
addr16
inc
dec
sub
out
inc
ins
push
mov
push
jne
or
inc
int3
adc
stos
retf
scas
or
std
cmc
push
mov
or
ror
mov
or
and
mov
mov
bnd
inc
loope
push
mov
xchg
adc
fwait
cdq
stc
shl
jns
sar
fs
mov
lods
rcr
inc
mov
pop
call
cmc
mov
sub
aad
leave
mov
xor
idiv
mov
push
cmp
and
ret
pop
ins
les
jl
jno
fwait
ja
adc
(bad)
jne
cmp
cs
shl
test
cmc
outs
adc
push
data16
hlt
jns
push
inc
repz
inc
bound
xchg
or
sbb
pop
(bad)
std
pop
pop
scas
pop
pop
iret
cmp
ins
inc
inc
(bad)
sub
mov
and
movs
cmp
cdq
cvtps2pi
jl
enter
xor
dec
jb
add
push
dec
sub
sahf
shl
mov
ret
xchg
ss
pop
lods
adc
stos
cmp
fwait
mov
cmp
push
jo
push
out
sbb
push
inc
retf
faddp
jmp
push
jae
mov
fiadd
cmp
mov
stos
out
mov
add
(bad)
in
ret
imul
sbb
xor
dec
xor
jp
fisttp
sahf
xchg
sbb
jbe
sub
pop
or
aad
data16
push
push
les
icebp
or
nop
imul
ror
cdq
hlt
xor
call
ret
hlt
scas
fsub
popa
sahf
pusha
lods
push
cmp
sub
ins
jo
mov
or
sbb
(bad)
movs
jle
out
xchg
sbb
das
data16
or
sbb
leave
pop
movs
cmp
out
mov
pop
cli
mov
jle
push
lea
sub
jge
adc
cmp
aaa
retf
mov
pop
inc
push
mov
mov
fwait
cmp
fist
push
dec
mov
sbb
pop
pop
std
sbb
jnp
sbb
aaa
mov
jno
das
dec
loopne
mul
repnz
mov
jo
scas
pop
pop
mov
jecxz
xchg
xor
scas
jp
adc
mov
xchg
cmp
pop
ins
mov
mov
mov
cmp
in
sbb
or
jb
mov
mov
sub
call
sub
mov
sbb
int
cmp
test
cwde
push
(bad)
jmp
sub
test
in
adc
mov
adc
out
jmp
inc
or
mov
out
repnz
sub
xchg
ins
and
outs
mov
(bad)
shl
fdivr
mov
xor
pop
in
mov
lea
ror
add
pop
inc
mov
cmc
je
ret
icebp
clc
and
lahf
call
out
and
cmps
retf
pop
cmc
leavew
jmp
jmp
arpl
cmp
sar
sbb
pushf
(bad)
mov
pop
xor
jmp
xlat
aam
retf
js
mov
cmp
mov
das
xor
iret
ror
xor
daa
sbb
xchg
add
inc
rcl
jb
xor
dec
rcl
jl
call
call
js
shl
in
cdq
addr16
rcl
addr16
mov
test
adc
and
jge
in
jl
call
add
mov
mov
je
pop
bound
xchg
std
sbb
adc
aas
xor
inc
xchg
or
mov
sub
test
sbb
std
add
mov
sub
jb
arpl
fdiv
dec
xor
jae
fucomip
cmps
add
sbb
add
inc
mov
jo
jmp
inc
jae
mov
test
adc
jmp
cmps
mov
loope
or
adc
sbb
cmp
cwde
(bad)
and
cwde
fst
pushf
dec
cmp
js
dec
cmp
mov
mov
shr
mov
int3
out
fsubr
push
inc
lds
dec
cmp
fisubr
je
js
movs
adc
push
dec
clc
pop
ins
cmp
or
and
fld
mov
retf
push
xlat
push
call
js
popf
sub
add
test
fimul
out
pushf
inc
dec
adc
sbb
sub
cmp
scas
imul
add
mov
cmp
loope
inc
stos
(bad)
int3
jbe
mov
bswap
bound
mov
mov
push
call
cmp
xchg
fstp
dec
sub
jecxz
and
sub
(bad)
not
xchg
ret
mov
scas
mov
jns
shl
xchg
mov
sbb
xchg
or
lahf
outs
push
xchg
pop
pop
jmp
jno
pop
or
xor
xchg
cwde
(bad)
jbe
mov
daa
mov
inc
or
cdq
cmp
sub
mov
sbb
jne
mul
mov
mov
inc
iret
ins
and
cmp
idiv
into
pop
int3
dec
iret
daa
mov
pushf
sub
mov
ins
jno
repnz
fdiv
arpl
mov
lods
mov
jns
push
xor
icebp
mov
adc
jae
stc
ins
out
dec
cld
nop
mov
mov
or
aad
imul
mov
cmp
dec
dec
mov
pushf
sbb
fwait
scas
add
cmc
(bad)
fld
pop
out
nop
rcr
ja
dec
int
cmp
out
cmp
xor
mov
call
js
mov
or
push
mov
sti
mov
sbb
js
and
aad
test
sub
inc
dec
gs
sar
dec
jns
push
sbb
or
neg
xchg
in
gs
and
div
mov
jnp
fadd
inc
inc
jl
sbb
pop
xchg
inc
add
push
and
push
jecxz
xchg
out
adc
adc
sbb
arpl
mov
test
cmc
xor
push
mov
jle
loope
cs
add
jle
in
push
ret
test
ret
out
xchg
push
push
mov
cmp
loopne
dec
lods
cmp
and
jecxz
fs
cmc
push
test
shl
das
(bad)
out
lods
out
inc
fdiv
test
test
ret
mov
mov
bound
adc
nop
dec
in
mov
xor
and
loop
aaa
ffree
div
pop
(bad)
fs
jg
xchg
aas
mov
pop
aam
push
mov
push
out
inc
push
aas
adc
mov
mov
mov
retf
jmp
dec
sub
sahf
js
adc
std
push
cli
inc
pop
push
push
mul
fist
lods
fsubr
daa
imul
ja
fdivr
pop
jmp
sub
push
idiv
dec
(bad)
movs
js
lock
int
sbb
cmp
repnz
les
adc
(bad)
lock
mov
(bad)
or
or
in
mov
cdq
jno
sub
mov
or
mov
arpl
jg
aas
mov
adc
adc
(bad)
push
rol
mov
das
push
mov
ss
js
movnti
iret
ins
loope
bound
arpl
or
mov
adc
mov
push
inc
addr16
cmp
pop
(bad)
(bad)
xchg
cdq
stos
cmc
or
test
bswap
inc
or
into
jmp
ret
out
sbb
int3
jo
dec
mov
in
std
mov
sbb
xlat
xchg
enter
std
mov
sub
push
cmp
scas
jne
pop
test
mov
adc
jae
lds
mov
sub
in
dec
int3
and
lock
push
mov
js
in
jb
sub
push
mov
sahf
cs
cmp
cmc
stc
dec
ja
sbb
mov
clc
cmp
mov
js
mov
mov
add
pop
in
fs
mov
in
pop
adc
or
lds
add
ret
mov
sti
or
xchg
ds
cmc
or
sub
sbb
sbb
pop
add
push
mov
popf
enter
sub
popf
mov
sahf
imul
push
pminsw
mov
das
mov
mov
xchg
inc
mov
mov
jg
or
out
mov
mov
adc
add
mov
aad
cdq
mov
mov
pop
in
arpl
jne
out
repnz
test
scas
jno
mov
int3
sub
cmp
fwait
gs
retf
es
(bad)
mov
xchg
mov
and
out
fisubr
popf
and
or
mov
xchg
sub
sub
cmps
cli
xchg
mov
sub
mov
and
retf
inc
lods
mov
in
mov
cmp
outs
jmp
(bad)
lods
mov
mov
push
jp
mov
fs
cmp
in
in
gs
mov
ror
bound
fidiv
ret
fs
jmp
and
fwait
cmp
mov
dec
sahf
cmp
fimul
fwait
sbb
lds
add
imul
push
call
add
jnp
mov
cmp
fwait
stc
pop
leave
jp
xor
push
xchg
pushf
cwde
int3
push
push
fcomi
rcl
ins
jmp
xchg
data16
rcl
add
sahf
xor
mov
lods
sub
cmp
pop
jl
adc
pop
cmp
popa
dec
xor
or
hlt
outs
shl
sbb
nop
jo
push
ds
adc
jmp
mov
mul
mov
cli
aaa
dec
push
sbb
inc
shl
mov
mov
mov
xchg
pop
rol
lds
cmp
scas
mov
push
mov
mov
sub
sahf
xor
dec
fidiv
sub
leave
stc
push
push
pop
mov
pusha
fmulp
mov
push
test
dec
cwde
aas
dec
jp
enter
aaa
arpl
adc
out
xchg
rol
mov
inc
pop
cmps
push
mov
(bad)
cmp
xor
xor
inc
ret
shl
sub
stos
sbb
mov
jecxz
xor
cmps
mov
mov
jbe
mov
outs
cmps
jnp
inc
lods
jg
popa
cmp
xor
sub
adc
mov
xchg
cmp
fbstp
mov
cmc
aas
add
lahf
sub
stos
push
mov
in
ret
out
test
enter
ss
fisttp
xlat
jno
push
sub
js
cmp
shl
cs
xchg
rcl
lahf
pmullw
dec
retf
inc
and
stos
and
shl
psubusb
(bad)
call
mov
mov
mov
pop
shl
loope
out
cli
repnz
lock
sbb
retf
cmp
push
add
push
push
jmp
daa
ins
xchg
iret
sar
pop
push
popf
jle
out
fisttp
push
add
pop
jno
push
ror
cmp
dec
aaa
jg
xor
dec
test
and
jno
mov
popa
mov
ja
dec
outs
mov
push
and
das
or
cmc
cmp
and
push
fldl2t
push
pop
mov
cld
sbb
push
mov
xchg
cmps
ret
mov
neg
std
push
cli
sbb
fimul
repz
sub
push
loopne
stos
dec
shl
pop
jmp
mov
ret
xchg
cmp
mov
cmps
cmc
(bad)
psrad
jns
push
mov
subps
shl
pop
jmp
out
xchg
adc
call
movs
xchg
lods
lock
mov
cwde
mov
neg
and
inc
mov
xchg
popf
fstp
iret
dec
test
xchg
nop
push
xchg
movs
mov
out
mov
rcr
cmc
xor
stc
fmul
mov
dec
sub
inc
jae
sar
push
fidivr
out
scas
pushf
xchg
ja
xchg
hlt
sahf
xor
cdq
pushf
pop
and
cmp
mov
dec
cmc
ficomp
icebp
lods
sub
leave
cld
lds
mov
or
sbb
sbb
aaa
call
xor
jp
mov
jnp
mov
mov
sbb
(bad)
cmp
or
add
mov
(bad)
pushf
xchg
sub
jns
stos
jns
lods
aad
push
mov
dec
mov
cmps
cmp
pop
sub
sub
fiadd
mov
mov
retf
test
jno
add
std
out
test
loopne
cld
lods
mov
sbb
cmp
jp
pop
dec
mov
xor
jns
push
pop
das
in
jecxz
out
add
xor
xor
jge
and
fimul
add
aas
pop
add
jne
sub
push
pop
mov
nop
inc
pop
int3
pop
sahf
cld
jl
loope
push
das
repz
mov
test
sub
outs
enter
xchg
xchg
add
stos
test
test
fisttp
shl
sbb
xchg
jne
adc
mov
cmp
test
jecxz
sbb
dec
enter
push
out
mov
data16
push
rcr
leave
sub
aad
mov
mov
mov
(bad)
in
add
adc
movs
mov
ja
sub
and
js
rcl
push
mov
jae
mov
mov
repz
sub
adc
fadd
push
sti
arpl
in
jo
adc
test
jnp
xchg
nop
push
cwde
aas
cli
mov
and
dec
xchg
dec
sbb
das
mov
xchg
daa
mov
outs
sub
xchg
je
cmp
popf
aas
dec
adc
test
dec
mov
add
pop
pop
test
cmp
xchg
(bad)
fist
mov
xchg
sbb
call
leave
mov
scas
dec
add
in
pop
fiadd
pop
push
cmp
mov
aaa
or
movs
movs
mov
mov
in
mov
inc
mov
sub
pushf
mov
push
aam
mov
mov
lods
sub
test
ja
sub
movs
sub
imul
add
aad
and
push
out
pop
xor
and
or
dec
xlat
mov
mov
push
pusha
sti
fdivp
mov
jle
sub
in
imul
outs
add
addr16
and
mov
das
and
or
push
test
ret
in
(bad)
mov
xchg
aas
push
jns
fsubr
adc
(bad)
fiadd
aas
jmp
push
lods
inc
ret
jmp
push
out
fbstp
xor
xchg
jns
test
iret
pop
inc
mov
inc
jmp
movs
(bad)
pop
xor
outs
or
in
aad
clc
fwait
(bad)
or
add
dec
xchg
lods
pop
loope
fcom
and
out
fidiv
stc
sti
cmp
cli
push
cli
sbb
jo
movs
stos
fiadd
lea
cmp
adc
lods
pop
dec
mov
xchg
mov
push
dec
and
jnp
add
mov
sub
lds
xchg
popf
jge
ror
mov
mov
mov
and
sub
ins
dec
xor
and
mov
or
rcr
movs
cs
scas
inc
sbb
imul
sbb
outs
sub
mov
mov
lock
(bad)
pop
jae
jne
mov
xor
inc
outs
mov
adc
ficom
pop
mov
mov
nop
cld
push
das
dec
push
cld
ds
mov
sahf
jmp
fld
loopne
inc
das
add
dec
jecxz
in
lea
jo
stc
pop
stos
inc
fcomp
adc
(bad)
icebp
cmp
mov
or
cld
add
push
div
pop
daa
or
lahf
stos
movs
sahf
arpl
leave
lahf
fisub
jle
mov
scas
fimul
loop
sahf
xchg
fistp
mov
test
fwait
scas
add
imul
mov
add
call
imul
retf
jbe
aaa
pop
pop
(bad)
sub
xchg
add
dec
xchg
jb
ds
les
add
fst
fadd
or
data16
push
add
out
xor
lock
sahf
jae
jg
xchg
test
jg
data16
fst
into
xchg
and
outs
pushf
mov
repnz
fsub
out
jmp
std
ins
jg
jp
movs
cmp
mov
pop
out
aad
popa
test
mov
cmp
ss
or
mov
jo
push
push
mov
inc
xchg
sar
popw
mov
or
push
pusha
pop
push
cwde
outs
leave
sub
shr
lods
ins
or
loop
stos
adc
frstor
jne
retf
enter
sub
fwait
dec
push
rcl
sub
xchg
movs
inc
lods
mov
fcomp
xchg
test
neg
adc
gs
iret
push
popa
mov
sub
ins
es
or
adc
xchg
aad
push
cdq
xchg
xor
cdq
dec
ret
push
mov
push
fcomip
sub
scas
or
fsubr
lock
or
mov
or
gs
punpcklbw
into
jecxz
(bad)
cmps
push
xor
xchg
pop
cmp
mov
or
and
adc
pop
push
dec
out
in
fidiv
or
xor
push
jnp
push
cmp
ror
mov
test
sbb
push
jge
mov
in
cmp
cmp
xchg
lods
xchg
jbe
sbb
and
neg
stos
push
je
pop
push
dec
cmp
or
cwde
pop
rcr
mov
or
jl
mov
aad
xchg
jns
mov
jmp
pop
mov
mov
cmps
cmps
ins
out
imul
ret
dec
jg
xchg
test
test
fs
mov
cs
clc
and
and
push
inc
js
ss
(bad)
xor
push
xor
cmps
jg
popf
fisubr
jns
(bad)
sub
les
push
push
imul
in
mov
test
scas
mov
push
jb
test
lahf
add
cmps
lahf
mov
mov
enter
das
mov
mov
xchg
js
aad
jbe
sbb
in
sbb
mov
mov
push
js
jmp
mov
push
fs
pop
or
cmc
cmp
fs
ret
in
lods
sub
jne
jle
sahf
and
aam
mov
out
push
dec
add
dec
ret
bound
jl
(bad)
fs
and
inc
pop
cld
leave
mov
and
movs
imul
push
in
(bad)
mov
mov
sahf
sub
pop
shr
lock
and
pop
nop
inc
loope
(bad)
int
(bad)
sti
mov
cs
pop
int3
aaa
sub
rcl
lods
sbb
mov
je
inc
arpl
cmp
inc
ror
xor
cwde
pop
sbb
(bad)
ss
fsubr
outs
jne
inc
adc
mov
add
dec
mov
loop
out
sub
icebp
iret
jnp
sub
aaa
inc
shl
xor
stos
call
push
shl
popf
sub
out
daa
loop
sbb
stc
mov
test
add
fldcw
pop
test
push
adc
cmp
aam
sahf
xor
sbb
adc
addr16
arpl
leave
adc
add
sti
mov
sbb
push
std
adc
jmp
jl
aad
cmp
sbb
mov
call
ret
add
(bad)
inc
adc
adc
push
mov
mov
cmp
sbb
stos
and
bound
int3
inc
imul
xchg
pushf
jo
shl
daa
jbe
pusha
and
ins
push
inc
fisubr
fadd
xchg
sub
cmp
xlat
sbb
jl
es
xchg
arpl
dec
pop
arpl
xchg
repz
xchg
add
loopne
adc
push
inc
pushf
mov
pop
dec
xor
outs
cmp
mov
xchg
rcl
jl
test
gs
cmp
mov
push
xchg
xor
xchg
cdq
stc
mov
shl
mov
adc
mov
add
add
xor
xor
imul
leave
and
and
cwde
jnp
dec
retf
ins
pop
cmps
sbb
cld
jl
ins
pop
jp
ja
mov
gs
in
push
ds
fs
add
mov
enter
in
push
mov
inc
dec
repz
mov
sbb
push
mov
aad
stc
int3
loop
jo
or
into
push
mov
(bad)
out
sub
jnp
mov
cld
in
jae
adc
adc
sbb
stos
js
in
mov
shl
movs
jbe
iret
aaa
enter
mov
inc
aad
retf
sub
lods
dec
dec
jmp
push
xor
(bad)
mov
xor
add
and
add
ins
das
inc
xchg
clc
sbb
push
popf
iret
mov
cmps
mov
mov
aam
mov
push
das
mov
add
xor
lock
popa
cmp
sbb
mov
jns
push
or
call
fldcw
mov
(bad)
ins
call
pop
(bad)
out
mov
stos
mov
push
stc
nop
adc
test
fistp
arpl
daa
scas
or
inc
rcr
scas
jmp
fnsave
sub
mov
stos
pop
(bad)
fadd
jle
fwait
push
dec
push
push
lahf
add
mov
pop
mov
mov
sub
add
adc
test
repnz
shl
lea
xchg
daa
ja
sbb
mov
or
outs
push
(bad)
push
cmp
push
and
mov
pop
add
fisubr
sbb
mov
jge
out
jecxz
push
nop
neg
fwait
lock
fstp
mov
scas
(bad)
mov
or
call
aam
test
mov
add
jnp
xchg
mov
lods
inc
add
popf
cmp
mov
pop
xor
repnz
pusha
mov
bnd
loopne
xor
dec
dec
in
into
cmp
inc
outs
repnz
cmp
jmp
dec
(bad)
mov
in
mov
mov
mov
inc
or
jb
cmp
or
push
int3
div
test
fwait
push
rol
scas
mov
adc
mov
pushf
jl
mov
push
cmp
jb
add
jle
test
repz
jge
push
call
int
mov
inc
in
call
(bad)
pop
shl
ds
xchg
neg
or
aas
fucomip
push
cmp
adc
pop
cli
bound
dec
sbb
add
imul
xor
das
jbe
push
jo
jno
aad
jmp
shl
push
push
mov
imul
xor
and
xchg
rcl
imul
and
jmp
adc
dec
pop
out
in
clc
sbb
(bad)
das
arpl
or
mov
(bad)
into
sub
push
fwait
xchg
jmp
sub
add
into
cmp
loop
jmp
aad
sbb
arpl
cmp
xchg
fstp
in
adc
jb
in
lods
cmps
mov
sbb
mov
cmp
sbb
cmp
(bad)
gs
test
sti
popf
or
pop
in
xchg
repnz
fs
pusha
fnstsw
pop
ds
test
mov
xlat
and
xor
xchg
sub
cmps
sbb
ds
cmc
sub
and
dec
xchg
and
or
push
add
not
stos
sbb
mov
push
lahf
test
loope
push
mov
mov
adc
aaa
clc
xor
push
adc
inc
jmp
pop
push
sar
push
mov
fstp
retf
scas
mov
stos
pop
xchg
or
(bad)
mov
jg
movs
rcl
inc
stos
mov
ret
push
imul
stos
pop
mov
inc
ins
add
push
jecxz
out
shr
dec
imul
out
dec
jmp
cdq
ds
xchg
imul
repnz
(bad)
mov
push
jo
and
(bad)
pop
sub
xchg
sbb
in
gs
pcmpeqd
movs
int
sbb
or
jnp
jecxz
cmovs
daa
mov
jb
mov
xor
leave
add
or
ss
popf
out
dec
and
pop
mov
out
sbb
sub
hlt
push
add
call
(bad)
(bad)
and
outs
int
sub
je
cs
push
xchg
push
test
mov
jle
cdq
mov
inc
push
fldenv
loope
or
aaa
xor
retf
call
push
leave
push
push
int3
xchg
mov
xchg
mov
push
jbe
fisttp
ins
clc
(bad)
dec
rol
dec
jne
xchg
test
xor
jae
push
lods
aam
dec
mov
call
fist
adc
xor
sub
sbb
pop
mov
push
add
xor
and
lods
xor
clc
xchg
stos
mul
jbe
pop
xor
fidivr
dec
neg
mov
loope
shl
in
nop
scas
outs
or
sar
push
adc
cmp
push
sbb
pop
pop
es
in
jne
in
mov
into
cmp
jnp
(bad)
and
jge
inc
fucom
sbb
sbb
xchg
fst
push
rcl
mov
clc
inc
inc
xor
repz
jae
mov
ret
lahf
jg
mov
pushf
fnstcw
aaa
or
or
mov
pop
sbb
or
movaps
jae
sar
push
add
call
xchg
jle
imul
in
mov
lods
dec
and
ret
into
paddd
jns
or
fadd
xchg
adc
pop
in
sub
cmp
sub
sbb
sub
out
dec
ss
sub
sub
fadd
movs
mov
mov
fstp
pop
mov
xor
(bad)
repnz
push
xchg
pop
popa
cmp
push
mov
push
jle
adc
xor
jmp
mov
call
cmps
cmps
and
and
das
aam
mov
mov
je
dec
jl
hlt
add
(bad)
hlt
mov
jl
dec
test
test
ret
jl
cmps
movs
and
leave
ins
dec
mov
sub
pop
fstp
or
fsubr
das
into
xchg
(bad)
fucomip
xor
sahf
stc
mov
push
(bad)
sti
test
dec
dec
mov
call
icebp
mov
jle
mov
push
push
loop
retf
cmp
(bad)
or
retf
push
ror
aad
cmp
icebp
mov
test
retf
call
dec
jbe
scas
mov
sbb
mov
mov
cmc
out
inc
push
sub
cwde
scas
(bad)
std
hlt
or
gs
pop
out
fild
xlat
or
fs
jmp
icebp
xchg
xor
in
xchg
jmp
addps
jl
mov
mov
ja
shr
lods
jl
hlt
pop
sub
mov
add
and
aad
jb
jg
cld
add
retf
(bad)
daa
imul
xchg
mov
test
aam
and
push
ins
shr
stc
movs
ja
inc
nop
pop
mov
shr
ret
test
mov
jge
jp
pop
jl
lods
or
fstp
mov
retf
push
out
cdq
movs
iret
not
inc
lds
sahf
fst
jae
add
xchg
cmp
ficomp
leave
cmps
sub
cmp
cld
jns
aad
pop
mov
inc
fnstcw
add
movs
mov
cmp
push
mov
in
call
mov
mov
iret
lods
jne
js
(bad)
push
je
sub
sub
mov
cmp
and
and
xor
pop
and
std
mov
mov
fidiv
in
inc
dec
pushf
dec
add
push
mov
dec
cmp
pop
adc
mov
popf
sub
sbb
adc
mov
cmps
pop
fcomp
pusha
frstor
dec
sub
lahf
lods
jmp
mov
adc
in
mov
dec
es
xchg
xor
out
add
cmc
xor
mov
add
cmp
sub
rcl
push
fcmove
lock
or
mov
(bad)
mov
out
lods
(bad)
cmp
xchg
pop
neg
cld
dec
fwait
retf
cli
aas
imul
mov
pop
jns
pop
xchg
xor
dec
and
xor
sbb
stos
mul
dec
sbb
enter
push
adc
movs
mov
mov
cmp
loope
jp
ret
aad
ds
out
push
xlat
sub
xlat
fs
nop
mov
popa
ds
or
arpl
in
mov
in
adc
cmps
sub
shl
(bad)
jnp
loope
mov
out
dec
or
sub
add
(bad)
xor
bound
add
test
dec
add
mov
xchg
ds
cmp
aad
xchg
sub
jno
stc
sbb
stos
sub
rcl
fwait
imul
retf
push
mov
push
jne
cld
pop
jo
jle
test
jecxz
sbb
xor
jle
xchg
push
(bad)
sbb
ins
leave
xor
arpl
add
scas
pop
xchg
dec
push
(bad)
jl
jb
gs
outs
sub
ret
push
xchg
fsubr
push
fdivr
das
push
pop
xchg
push
rol
(bad)
jecxz
(bad)
pop
jne
pop
mov
xchg
or
push
push
and
js
aad
and
mov
sbb
and
sbb
push
push
ins
fidivr
sub
int
xchg
jns
out
jmp
iret
mov
or
mov
je
scas
fld
push
ficomp
mov
add
movs
or
ins
push
jb
(bad)
ins
xor
xchg
dec
aaa
rcl
scas
dec
or
test
sub
(bad)
dec
sub
ins
call
in
movs
test
jno
aaa
add
sub
and
cwde
cmp
repnz
mov
jmp
stos
jae
inc
dec
mov
movs
pop
or
xor
mov
xor
jmp
inc
pop
std
ja
in
call
ins
lahf
add
mov
cmps
mov
loop
lea
pop
cdq
lea
fild
clc
aam
dec
cmc
or
xor
ret
xor
mov
xor
popf
pop
mov
add
sti
jmp
jbe
ss
dec
sbb
xchg
lods
cmps
bound
cmp
stc
pop
mov
inc
call
test
dec
adc
cmp
movs
inc
ins
mov
push
mov
push
pop
inc
fld
sbb
in
mov
mov
lea
out
stos
push
jl
pop
cdq
fwait
cmp
xor
js
popa
add
inc
les
popa
mov
jne
mov
icebp
xor
mov
jmp
aam
cdq
sbb
icebp
rol
imul
cmps
dec
sub
mov
add
sar
xchg
adc
dec
mov
mov
in
inc
mov
ss
cmps
imul
stos
or
js
cmps
mov
jb
xchg
div
pop
jmp
mov
adc
and
mov
cdq
enter
pushf
xchg
jmp
es
mov
ret
(bad)
mov
cmp
add
pop
jl
arpl
sbb
repz
xlat
jne
sub
mov
out
cmp
push
mov
and
push
ins
jbe
adc
out
xor
test
popf
aam
lds
and
out
and
push
or
sub
mov
ins
xor
icebp
popa
ins
pop
mov
and
test
icebp
lods
fcom
movs
loop
push
(bad)
in
and
stos
push
push
fsub
pusha
icebp
out
xchg
dec
and
jns
push
call
clc
test
sti
test
xor
cdq
inc
adc
(bad)
mov
jmp
in
ja
pop
movs
gs
scas
cmps
mov
jp
popa
and
loop
dec
inc
das
adc
pop
push
and
ins
leave
pop
js
loope
pop
pop
int
mov
repz
jne
mov
push
in
je
adc
aam
sbb
call
sub
arpl
je
and
pop
mov
into
jecxz
add
pusha
(bad)
stos
aaa
jmp
ds
mov
mov
fsubr
or
loop
inc
dec
subps
mov
aaa
pushf
test
popa
or
inc
xchg
sbb
sti
out
ins
and
sbb
mov
push
dec
imul
or
retf
fisttp
pop
scas
pop
cmps
stc
xlat
jmp
sub
test
adc
xor
xchg
pushf
jns
pop
sbb
rcr
fmul
dec
fwait
mov
mov
push
jmp
push
cmps
cmp
push
outs
fild
and
sti
sbb
jae
sahf
imul
outs
stos
jae
ret
cmp
cli
pop
in
ret
test
or
or
add
stos
pop
adc
jl
sub
dec
test
fs
pop
jne
cmp
cmp
test
xor
sbb
xchg
xlat
mov
adc
mov
cmp
mov
jg
xchg
in
stos
leave
fsub
inc
cmps
lock
mov
js
(bad)
mov
push
push
adc
dec
sub
sbb
and
push
mov
jnp
sub
push
dec
pushf
das
mov
pop
push
js
mov
add
mov
and
xchg
adc
data16
stc
add
xor
cld
or
mov
jmp
sub
mov
mov
(bad)
(bad)
shl
inc
lds
std
adc
mov
pmullw
mov
push
adc
in
jbe
test
push
pop
mov
or
out
popf
or
jae
dec
jnp
stos
pop
xchg
jp
xor
not
hlt
int3
jne
in
(bad)
test
xchg
sahf
mov
in
mov
push
ret
movs
jmp
dec
pop
dec
jb
fs
sbb
lock
(bad)
cmp
fild
xor
aas
add
arpl
mov
sub
adc
pop
inc
add
sub
or
and
aas
stos
sub
push
dec
and
outs
ret
add
dec
fs
sbb
les
jg
in
shr
outs
nop
call
mov
es
pop
xlat
retf
mov
cmp
ret
ret
scas
aad
cdq
jmp
into
mov
scas
jmp
loop
(bad)
loop
jno
hlt
cli
adc
ja
shl
(bad)
and
in
cli
scas
sbb
push
mov
popf
rcr
cmp
adc
mov
ins
adc
xchg
outs
std
int3
div
int3
stos
and
es
mov
scas
push
daa
push
mov
pop
xchg
test
cmp
inc
jp
ja
fs
push
mov
sub
js
cmp
in
(bad)
outs
xchg
je
xchg
mov
cmp
or
mov
add
cwde
retf
pusha
dec
mov
jmp
out
ret
fwait
scas
sbb
pop
push
call
adc
sti
pop
push
jbe
lahf
outs
mov
pop
es
xchg
mov
shr
(bad)
je
sub
xor
pop
xlat
adc
add
out
dec
adc
nop
sub
test
add
iret
cmp
dec
sbb
xor
out
je
stos
stos
jbe
mov
lds
adc
xchg
add
push
pop
cmp
or
mov
mov
pop
inc
push
mov
inc
xor
add
xchg
cmps
adc
add
daa
sub
xlat
and
jecxz
pop
into
add
and
scas
sub
out
js
mov
cmp
mov
or
jb
mov
cmc
addr16
xchg
outs
cmps
leave
jmp
cmps
xor
xchg
xchg
test
dec
cmp
pop
cmc
mov
sar
js
mov
jae
inc
ss
cmp
push
adc
sub
in
(bad)
pusha
xchg
cwde
shl
fucomp
mov
test
sbb
mov
xor
push
add
sbb
jmp
sbb
pop
jmp
sub
mov
jne
(bad)
dec
jl
cld
je
mov
in
mov
cmp
rcr
cli
mov
(bad)
sbb
mov
fst
jnp
js
jl
cmp
xchg
fisubr
pushf
adc
sar
inc
add
or
ror
jle
(bad)
xchg
pause
xor
in
movs
ja
loope
pop
jb
sub
push
inc
les
push
jbe
xor
icebp
lahf
(bad)
xchg
out
test
sbb
int3
das
mov
pop
add
std
cli
retf
loope
fild
jmp
retf
dec
push
scas
idiv
adc
into
sub
les
scas
std
adc
shl
lock
jbe
and
mov
fisub
mov
push
in
and
inc
mov
add
je
pop
outs
sbb
sbb
xor
sub
dec
popa
bound
xchg
jge
sub
daa
mov
(bad)
jo
scas
ret
xchg
in
or
sbb
add
sub
test
inc
push
fcomip
and
mov
mov
xchg
push
mov
dec
push
mov
pushf
in
push
fwait
aam
stos
outs
mov
scas
scas
mov
loopne
scas
adc
xchg
cmp
stos
cwde
mov
rcr
push
adc
dec
mov
sbb
leave
jp
cmp
mov
mov
icebp
jle
cld
adc
fistp
hlt
loopne
cmp
test
ficom
push
dec
clc
out
scas
jecxz
(bad)
sub
push
shl
rcl
aaa
mov
or
stos
fucom
in
mov
mov
sbb
mov
sub
out
mov
clc
lahf
push
and
xchg
push
pop
frstor
inc
cmp
test
add
pop
inc
loope
xchg
adc
jno
cmp
xor
dec
nop
add
dec
push
lods
arpl
pusha
jae
jne
jbe
ret
jnp
push
test
dec
pop
pop
mov
stc
ficomp
mov
ins
sub
call
mov
ss
jns
push
prefetchw
or
cmps
and
out
arpl
push
fisubr
je
stos
jns
dec
sub
rcr
std
das
and
sub
push
xor
(bad)
push
dec
mov
mov
shl
das
ror
je
xor
dec
adc
xchg
fld
push
mov
xor
enter
add
mov
dec
push
cmp
mov
retf
or
aad
loop
inc
outs
rcr
sub
jae
outs
test
in
repz
shr
cmp
mov
add
mov
mov
cmovo
jmp
pop
retf
pop
stos
enter
mov
addr16
mov
(bad)
cmp
or
rcr
sbb
mov
icebp
cs
xor
aaa
pop
adc
scas
popf
data16
push
and
lea
xchg
xchg
xchg
xchg
ret
adc
ds
jns
data16
pop
retf
sar
pop
push
ficomp
ds
push
push
jb
mov
jmp
leave
dec
push
repz
stos
cmp
and
cwde
mov
xchg
sub
stc
mov
xor
(bad)
rol
mov
push
mov
(bad)
and
add
jne
sbb
cmp
mov
sbb
xchg
jno
pop
or
cmp
and
out
mov
sti
(bad)
jns
and
rol
adc
or
xchg
int
xor
add
out
aaa
arpl
adc
cld
pop
pop
es
sbb
and
lods
retf
add
push
(bad)
(bad)
hlt
dec
out
stos
pop
outs
xchg
jl
adc
and
mov
cdq
arpl
out
inc
sub
dec
inc
sahf
imul
fiadd
jecxz
retf
loop
addr16
out
pop
jo
jg
sub
pop
add
nop
sub
add
and
push
jae
scas
pop
cmp
sub
aas
shl
stos
jnp
sub
scas
or
xchg
rol
inc
(bad)
test
into
and
(bad)
dec
retf
push
and
mov
cmp
test
iret
mov
fyl2xp1
sub
push
mov
fdivr
jbe
or
(bad)
lock
inc
xchg
pop
je
js
adc
fld
pop
sub
jecxz
add
imul
fisttp
sub
loope
xor
sbb
dec
(bad)
push
stos
pop
mov
sub
mov
push
retf
fwait
inc
mov
popf
hlt
movs
movs
jns
call
cmps
fsubp
retf
(bad)
cmp
or
pop
test
sti
mov
shl
jns
sbb
jo
out
mov
pop
push
cld
lea
je
pop
cmp
call
pop
int
int3
mov
sbb
or
fs
js
xchg
sti
das
loopne
cmps
mov
xor
out
lods
fs
cwde
adc
jnp
and
push
outs
shl
inc
mov
icebp
rcr
pop
sbb
lahf
inc
clc
xchg
in
fild
in
sub
(bad)
mov
sub
mov
xchg
jb
xlat
mov
test
jecxz
es
stc
loop
leave
les
fdivr
mov
push
jno
sbb
gs
push
inc
push
or
mov
pop
and
jae
xor
(bad)
popa
les
ret
push
inc
in
imul
retf
fsubrp
sbb
inc
dec
out
pop
sub
fs
jmp
jo
lea
push
jb
xchg
stos
inc
mov
jmp
jno
inc
loope
shr
mov
mov
inc
mov
xor
cmp
hlt
pop
fisub
dec
cmc
cwde
ret
stc
enter
mov
xchg
mov
mov
rol
fild
xchg
mov
arpl
retf
pop
or
loop
call
pop
(bad)
pusha
mov
pop
push
dec
std
cwde
mov
out
xor
rcl
pop
fistp
xor
push
push
test
mov
aaa
add
cld
mov
(bad)
js
neg
cmps
out
fcmovnbe
outs
and
pop
test
dec
push
std
(bad)
jmp
dec
mov
sbb
sub
in
pop
jmp
mov
xor
mov
jmp
add
(bad)
mov
xchg
popf
rcl
rcr
mov
and
sub
xor
sub
sahf
add
pop
lods
adc
loopne
mov
xor
pop
push
out
push
jmp
jp
out
ss
or
shr
nop
movs
jbe
shl
icebp
(bad)
call
push
xchg
hlt
(bad)
mov
add
or
outs
push
xchg
dec
fild
pusha
sbb
(bad)
dec
fbld
loopne
ins
push
imul
shr
pushf
inc
inc
pop
and
stc
push
(bad)
into
into
sti
in
(bad)
mov
lahf
stos
mov
cmp
jmp
jne
test
cmp
mov
xor
out
pop
xchg
inc
nop
push
adc
ins
rcr
icebp
mov
xor
ss
mov
xchg
xor
push
ja
out
xchg
mov
fimul
cmp
add
ja
cmp
retf
and
or
cmp
fwait
adc
mov
xor
inc
leave
jae
sub
sahf
push
jne
inc
add
ins
and
hlt
aas
frstor
retf
or
aam
shr
adc
cmps
sbb
sahf
out
or
popa
fsub
sbb
xchg
dec
pushf
pop
in
mov
xchg
mov
clc
outs
cmp
daa
push
push
xor
sub
cdq
call
or
xchg
and
add
sbb
std
sub
adc
leave
sbb
push
add
dec
ins
pushf
push
int3
or
adc
adc
mov
movs
test
mov
add
into
jmp
test
es
mov
clc
fcmovu
ret
pusha
clc
jmp
imul
sbb
daa
jp
pop
out
cdq
jns
imul
fld
push
add
test
pop
sbb
psubw
repnz
hlt
push
in
xor
cmp
movs
push
rol
mov
hlt
xchg
adc
ins
stc
scas
(bad)
sbb
add
popa
sbb
push
dec
sub
jae
in
into
xchg
adc
lods
and
std
mov
es
aad
(bad)
pop
sbb
leave
mov
cmps
push
rcl
dec
or
in
mov
adc
out
iret
rcr
test
sub
inc
movs
or
into
fwait
adc
repz
(bad)
sbb
sbb
iret
sub
test
rcr
add
jp
push
xchg
fsubp
jno
js
loop
leave
or
push
cdq
mov
popa
fidiv
add
xchg
popa
sub
inc
and
and
ret
cvtdq2ps
sbb
ds
out
leave
adc
(bad)
dec
or
pop
jle
pop
adc
(bad)
outs
mov
push
xchg
fsub
jne
fmul
push
mov
out
and
retf
and
sub
mov
inc
ret
enter
repz
cmp
and
lahf
ins
xor
and
cmp
adc
jmp
pop
test
test
stos
ret
leave
dec
leave
and
js
arpl
or
shr
inc
xchg
pop
mov
sub
test
jg
mov
xchg
int3
adc
mov
rcr
adc
add
gs
xchg
in
cmp
sahf
clc
xchg
xchg
lock
ret
adc
popa
ins
xlat
and
out
inc
jbe
loopne
sar
scas
cmp
push
out
mov
dec
mov
out
xchg
fild
nop
bound
dec
dec
bound
pop
dec
jmp
test
xchg
mov
push
stos
mov
fmulp
push
prefetch
sbb
lock
jns
popa
xor
ret
add
push
xor
xor
jp
xchg
je
stos
test
cmps
data16
add
lods
xlat
dec
sbb
enter
or
and
xor
gs
lock
push
xor
cmp
inc
shl
sub
add
xor
push
sub
push
ins
dec
inc
jecxz
mov
lods
je
and
arpl
loopne
jae
jb
daa
sbb
movs
stos
mov
mov
xchg
and
jne
rcl
cmp
dec
pop
adc
aam
inc
shl
cmp
retf
xchg
fidiv
jmp
mov
pop
or
jmp
mov
sar
pop
sub
scas
call
pop
pop
(bad)
cmps
pushf
hlt
cmp
retf
in
xchg
or
ja
ins
push
jl
and
and
jmp
inc
call
sub
sbb
into
jmp
test
add
pop
fidivr
sahf
push
mov
push
xor
push
add
test
loop
cld
mov
out
cmp
pusha
push
jmp
iret
leave
stc
scas
sbb
ins
test
stos
cld
add
add
adc
pop
xor
pop
jp
inc
arpl
sbb
xchg
sbb
inc
and
xor
sti
scas
jge
test
or
add
jmp
stos
mov
inc
inc
sub
ins
mov
adc
adc
dec
mov
cmp
mov
fsub
pop
mov
mov
leave
push
xchg
call
jmp
xor
pshufw
adc
or
jecxz
push
mov
push
out
fisub
cmp
push
in
inc
cwde
add
hlt
out
push
mov
xor
xchg
or
add
fwait
ror
dec
(bad)
push
es
sbb
jo
push
inc
icebp
ja
mov
mov
mov
xchg
xor
(bad)
mov
xor
cmp
pushf
xchg
sbb
adc
xor
dec
xor
je
mov
adc
jmp
xchg
sar
sahf
xor
mov
shr
jmp
imul
ret
mov
out
shl
aad
cmps
js
pop
adc
ret
jae
fidivr
(bad)
mov
jl
xchg
cmp
cmps
aad
arpl
loopne
dec
loop
icebp
jmp
pop
pop
ins
scas
mov
add
jns
rcl
lea
mov
iret
popa
xchg
fidiv
dec
sar
ja
inc
ficomp
inc
cmp
inc
rol
imul
popa
add
adc
loope
(bad)
imul
bound
lds
ret
popa
xor
mov
jecxz
jb
in
push
mov
icebp
(bad)
jmp
movs
into
pop
fmul
pop
popf
push
std
out
daa
or
mov
adc
and
in
ins
movs
dec
push
and
sqrtps
out
pop
mov
sbb
push
retf
jg
lods
sub
mov
out
in
sub
retf
inc
jge
leave
add
arpl
leave
jp
jo
aad
push
push
xchg
cmp
call
in
lds
jmp
mov
outs
inc
fcmovu
cld
out
sbb
mov
ret
fsubr
push
outs
ds
mov
cli
popa
dec
xchg
in
jmp
repnz
xor
mov
pusha
xchg
in
ins
hlt
popf
in
in
int
push
jmp
push
iret
data16
and
loop
mov
ins
inc
addr16
sbb
mov
jnp
dec
in
enter
adc
dec
scas
mov
loope
mov
sub
shl
outs
jmp
lahf
cmp
aas
add
sub
pop
or
dec
mov
test
and
xor
mov
jge
mov
lods
sbb
cmp
mov
ins
push
repnz
ds
inc
out
vmread
leave
mov
in
mov
stos
push
jg
pop
xchg
inc
sbb
jno
test
imul
push
jae
or
fisttp
fdivp
fidiv
mov
mov
lahf
ret
mov
sub
sbb
add
jb
int
push
and
(bad)
xchg
rcr
shl
imul
(bad)
lock
push
sbb
(bad)
inc
mov
loopne
xchg
xchg
popf
push
jmp
add
jg
in
jnp
sbb
xchg
sbb
cmp
mov
push
and
(bad)
mov
dec
push
inc
imul
push
out
cwde
stc
mov
sub
adc
in
scas
imul
pcmpeqw
or
std
iret
add
lods
shr
cwde
cmp
inc
push
test
cmp
in
pop
push
iret
add
call
jns
cmp
xchg
pop
and
mov
sub
fild
add
mov
mov
outs
and
xchg
sub
ret
pop
or
pusha
int3
aad
shl
jbe
fild
and
cdq
mov
mov
stos
pusha
jne
fnsave
push
cmp
rol
rcl
leave
fwait
enter
mov
jp
ja
les
add
adc
jb
xchg
(bad)
dec
pop
pop
xchg
mov
adc
sub
dec
aaa
dec
and
push
shl
add
adc
push
mov
hlt
in
xchg
fstp
leave
push
or
je
sbb
jb
mov
pop
aad
in
out
aad
mov
jbe
jp
test
adc
cmp
sti
sbb
add
dec
cmp
jno
inc
addr16
sub
jmp
xchg
and
sbb
push
mul
in
mov
jp
fcom
or
cmp
adc
xchg
xor
scas
mov
enter
push
sub
sub
scas
lds
push
cmp
(bad)
mov
and
ffree
(bad)
ins
scas
lock
and
jae
inc
pop
popa
sbb
cmp
add
popf
inc
jmp
adc
adc
push
mov
push
pop
sub
mov
mov
inc
js
mov
test
bound
pop
ret
or
and
adc
inc
outs
arpl
mov
repz
cld
sub
and
pop
push
dec
xchg
jl
in
pushf
repnz
push
fwait
das
loop
addr16
sbb
push
shr
mov
ror
xchg
push
and
addr16
or
ins
sbb
imul
pop
add
scas
pop
adc
retf
ins
hlt
mov
iret
shl
and
hlt
rcl
sub
xor
jp
adc
mov
imul
adc
je
xchg
cs
popf
sar
inc
jge
mov
ss
and
lahf
sbb
pop
xchg
sahf
(bad)
popa
(bad)
ins
cmp
out
inc
cwde
sti
and
pop
inc
mov
inc
xor
ds
inc
out
repnz
(bad)
xor
cmp
movs
xor
clc
loopne
nop
adc
cmp
jae
sub
jg
cmps
or
pop
jmp
nop
call
jo
cmp
jecxz
ins
outs
sub
sbb
inc
aad
(bad)
mov
push
push
bndldx
inc
cmp
movs
cmp
cmc
lahf
loopne
xor
push
fstp
out
jo
clc
inc
mov
dec
cld
mov
inc
add
inc
mov
cld
or
pop
loop
fucomip
cmp
aam
cmp
loop
jle
xchg
xchg
enter
sbb
repnz
mov
cmp
add
mov
enter
test
das
jle
sbb
push
movs
rol
xchg
or
and
xchg
inc
push
int3
or
sub
ret
jp
popa
add
repz
addr16
push
movs
sub
xor
push
das
dec
inc
stc
fdiv
gs
(bad)
cmp
sub
sub
pop
les
add
push
arpl
cmp
pushf
xchg
retf
fadd
mov
imul
aam
mov
test
retf
and
stos
pop
imul
or
cmp
dec
jge
xchg
add
sbb
cmp
enter
addr16
(bad)
fbstp
ror
cs
pop
cmps
push
ret
enter
mov
xchg
pushf
mov
dec
retf
cwde
xor
adc
adc
sub
pop
and
xchg
push
xchg
fs
push
leave
sub
sbb
ret
adc
lock
fstp
jmp
test
js
ins
mov
push
xchg
jno
dec
movs
loop
push
dec
enter
test
push
adc
sbb
mov
les
pushf
stos
add
cmc
pop
sbb
mov
add
adc
shr
sub
not
lahf
retf
call
ja
pop
out
jp
sbb
arpl
(bad)
push
cmp
sar
fadd
xchg
scas
xor
inc
add
push
mov
call
ins
xchg
mov
fcom
push
sbb
mov
mov
jo
clc
in
inc
sub
jmp
xchg
and
out
xor
movs
ret
mov
sbb
je
xchg
cmc
repnz
cmp
sub
xchg
and
pushfw
ret
inc
pusha
shr
out
popf
mov
sbb
scas
rol
(bad)
fwait
push
aad
push
lods
rcl
pop
call
add
cmc
and
ror
push
ds
dec
push
or
cmp
pop
xor
leave
aas
stc
sub
outs
fld
add
shl
hlt
ds
inc
sbb
es
mov
mov
or
sub
xlat
or
and
cli
xchg
ss
adc
jae
retf
popf
mov
data16
pop
adc
ja
inc
mov
test
int
push
jle
and
js
pushf
mov
inc
fmul
sbb
fild
retf
ss
je
and
scas
push
lods
and
jmp
dec
aad
mov
aas
retf
push
aaa
fnstcw
push
dec
(bad)
leave
inc
push
data16
cmp
sbb
lods
adc
cli
aaa
(bad)
inc
ret
mov
scas
push
stos
dec
jg
mov
inc
mov
jp
js
mov
iret
cmp
xor
or
icebp
sub
pop
addr16
xchg
mov
cmp
mov
les
push
loop
pop
icebp
mov
or
mov
push
jl
add
sub
in
xor
ins
clc
cdq
jne
jae
mov
push
popa
std
push
(bad)
and
inc
adc
fcom
cmps
sti
or
cmp
test
pop
jle
fdivr
fisub
xor
sub
iret
neg
stos
out
jmp
inc
mov
test
inc
mov
and
or
mov
xor
sbb
dec
sub
popf
pop
repz
xchg
test
pop
or
in
sub
mov
sbb
bound
inc
daa
pop
bnd
popa
inc
fwait
pop
das
or
rcl
adc
jno
push
or
dec
rcl
jp
in
clc
out
dec
sub
pop
pop
imul
inc
sbb
call
fs
aad
xchg
shr
and
xor
je
and
dec
sub
mov
jg
xchg
adc
jne
or
jl
mov
pop
rcr
dec
adc
xchg
xchg
dec
push
mov
sti
call
retf
(bad)
sbb
xchg
cmp
push
leave
push
cmp
cmp
cmp
push
jno
movs
mov
inc
movs
push
push
leave
scas
or
jmp
sub
sbb
or
sahf
cli
jle
pop
inc
push
mov
xchg
shr
adc
cmc
jle
adc
and
and
cmps
xchg
daa
or
icebp
ja
inc
pop
push
push
jo
mov
sub
movs
mov
arpl
pushf
mov
inc
mov
cmps
push
in
mov
push
mov
jnp
ja
rcl
and
retf
mov
mov
pushf
or
mov
js
mov
aam
rcl
call
inc
mov
cmp
ror
loopne
fisub
mov
cmp
inc
sub
stos
push
mov
ds
cmp
pop
repnz
std
int3
lock
mov
jnp
gs
cmp
sub
movs
loop
aas
add
lock
mov
outs
jecxz
ja
out
std
push
jae
mov
sbb
outs
popf
mov
mul
loop
xchg
pop
fdivr
stos
dec
arpl
outs
outs
pop
pop
adc
cmp
test
pop
into
inc
ret
pop
or
retf
out
mov
mov
adc
test
ss
jnp
mov
and
sub
movs
in
and
sub
pop
push
sti
jno
mov
mov
enter
call
sub
sbb
inc
sbb
pop
leave
arpl
mov
adc
movs
repz
push
pop
out
push
sub
inc
mov
or
fbstp
call
jecxz
push
daa
call
les
into
xchg
or
jne
dec
das
aam
inc
adc
retf
rcr
cmp
bound
daa
fdivr
push
hlt
pop
xchg
rcl
stos
pop
rol
dec
cmp
inc
icebp
ins
dec
iret
rcr
or
mov
inc
stos
fwait
(bad)
gs
or
sub
out
pop
mov
test
lds
test
push
clc
xchg
xchg
inc
neg
jl
mov
pop
sar
sbb
int
sar
xchg
push
mov
stos
scas
lahf
mov
retf
jle
xor
jmp
scas
sbb
fcomp
gs
xchg
movs
cwde
jnp
scas
lea
dec
or
nop
cmp
in
sub
add
leave
mov
test
loop
data16
int
movs
jle
xchg
push
jge
sbb
jno
ret
test
jbe
and
(bad)
test
jmp
mov
fsubr
jl
sti
std
add
test
ret
pop
test
dec
or
out
nop
fsubr
xchg
std
add
stos
cmp
fdivr
dec
inc
xchg
jbe
and
cmc
mov
hlt
outs
push
(bad)
neg
add
fstp
push
add
xor
mov
sbb
idiv
adc
test
mov
sub
sbb
mov
pop
push
in
add
inc
or
pop
ror
loope
cmc
cmps
stos
mov
in
adc
jns
ja
pop
cmps
out
dec
mul
cmps
(bad)
pop
mov
imul
dec
in
mov
pop
jno
push
jae
shl
div
call
outs
xchg
arpl
scas
fild
add
lods
es
push
shl
gs
xchg
cmc
js
int3
not
cs
jae
pop
jae
movs
enter
mov
push
in
lock
push
repnz
xor
xor
push
mov
jmp
mov
stc
cld
scas
jl
or
pop
ficom
cmp
sbb
add
fdivrp
out
fcomp
cld
pop
inc
cmp
sbb
mov
add
jnp
or
inc
cli
mov
pop
std
dec
in
pop
add
pop
fistp
mov
addr16
aad
rol
addr16
xor
sbb
lds
or
pop
inc
je
pop
and
or
or
icebp
inc
fld
lea
enter
inc
fbstp
or
movs
fistp
dec
test
pop
pop
adc
shl
jae
int3
out
test
sub
xchg
iret
(bad)
fsub
adc
add
or
mov
ins
push
mov
inc
mov
xchg
out
out
lods
adc
in
sub
inc
xor
inc
mov
inc
cld
mov
mov
out
lock
fsubr
or
fadd
jmp
lods
or
adc
sbb
in
mov
adc
push
sti
mov
cmp
test
adc
cmp
push
mov
jecxz
jb
mov
mov
pop
or
pushf
call
cmps
ja
test
test
mov
dec
dec
add
mov
mov
in
and
jmp
jne
sub
out
call
pop
sti
sahf
mov
clc
xor
shr
xor
arpl
(bad)
cmp
and
es
cmp
sub
stos
ficom
inc
in
mov
sbb
xor
repz
mov
stos
retf
test
(bad)
dec
stc
sbb
jbe
cli
inc
ins
int
cmp
jmp
rcr
fcomi
xchg
fidivr
ror
(bad)
add
popa
enter
stos
outs
ins
cmp
jnp
into
stos
sub
cmp
ret
mov
dec
(bad)
(bad)
stos
mov
imul
shl
sti
adc
fldenv
sbb
aam
mov
jne
adc
mov
dec
and
push
mov
push
in
sbb
mov
mov
xchg
push
sbb
(bad)
sbb
add
and
and
das
sbb
in
mov
loopne
push
mov
mov
sub
cmc
or
stc
xor
pop
sbb
xchg
data16
ss
sbb
pop
dec
sti
cwde
inc
mov
enter
push
mov
pop
mov
sbb
hlt
stos
mov
add
shl
mov
jl
jmp
es
iret
in
add
push
adc
retf
add
mov
mov
add
test
hlt
out
push
test
mov
xchg
sbb
cmp
outs
lods
imul
xor
sbb
ffree
scas
fwait
jmp
(bad)
nop
jb
(bad)
retf
push
lds
xchg
(bad)
xchg
in
ss
int3
scas
adc
dec
dec
cmp
cmp
mov
cmovb
nop
add
mov
cmp
pusha
test
mov
jno
int3
fld
cld
pop
mov
inc
add
mov
rcr
cmp
add
fsubr
bound
adc
mov
jne
pushf
mov
mov
lods
outs
out
xchg
lock
retf
scas
outs
test
nop
cdq
fnsave
sub
and
addr16
movs
(bad)
xor
popf
call
jge
call
push
cdq
(bad)
(bad)
in
adc
mov
int
fstp
inc
mov
call
mov
das
jmp
pop
ror
jb
xchg
sahf
xor
add
push
adc
mov
push
adc
imul
push
lds
add
fild
out
jae
inc
mov
gs
fdiv
hlt
enter
les
(bad)
(bad)
push
mov
shr
adc
sti
mov
fidivr
push
repnz
fwait
jp
push
mov
or
push
pop
(bad)
lods
add
mov
jle
xchg
jmp
shl
js
xor
xor
jg
pop
cld
add
jns
and
leave
shr
les
fadd
mov
sub
jp
sub
xchg
fld
push
push
push
sti
int
test
sti
mov
aaa
xchg
pop
mov
jns
cmp
sub
add
shl
clc
leave
in
lods
jnp
in
dec
test
mov
sub
mov
adc
mov
mov
in
xor
cmp
les
xor
rol
jp
mov
pop
or
or
pop
aam
inc
inc
xchg
and
add
fistp
sbb
cmc
dec
cmp
mov
test
scas
push
cld
jge
push
daa
fiadd
jmp
fs
shl
or
xchg
or
int
dec
sub
cmc
adc
int
fs
jmp
push
sub
add
fwait
add
mov
pop
sub
mov
inc
sbb
lods
pop
sbb
int
je
xor
sbb
xor
fnstenv
mov
mov
add
xlat
jge
mov
jbe
push
out
cmp
in
jg
popa
sub
adc
sar
arpl
ja
fild
ret
hlt
inc
pop
popf
mov
stc
enter
adc
test
movs
lds
and
sub
sub
or
mov
js
jbe
cmp
sbb
mov
sahf
in
pop
or
add
js
pop
enter
int
sbb
jmp
or
aad
sbb
pop
xor
add
pop
jbe
mov
mov
lods
push
sub
sti
outs
or
pop
jl
or
xchg
inc
stos
and
adc
xor
fistp
mul
xchg
pop
inc
rcr
ss
not
inc
scas
mov
das
(bad)
(bad)
cmp
mov
fs
cmps
or
mov
int3
sahf
jge
mov
mov
ins
xor
(bad)
aad
xchg
add
cmp
xor
mov
sbb
pop
int
test
sbb
dec
dec
jmp
repz
fstp
cmps
dec
ror
mov
adc
and
rcr
gs
xchg
pop
jl
xor
test
loope
mov
pop
mov
xchg
cld
ds
retf
dec
xchg
cmp
push
fist
mov
pop
test
inc
das
into
jno
or
pop
cmp
test
mov
adc
and
cmps
idiv
sub
xchg
vphaddudq
mov
jae
rol
int3
lds
imul
movs
(bad)
imul
jns
add
adc
mov
arpl
out
jb
push
mov
dec
enter
call
fdiv
dec
out
aad
mov
in
das
inc
mov
inc
les
movs
xor
push
push
dec
and
(bad)
js
lock
(bad)
xchg
(bad)
in
es
and
mov
mov
test
and
inc
pop
inc
inc
xchg
stos
rol
fcom
xchg
push
pop
and
call
test
fadd
dec
out
push
cld
or
jp
push
hlt
add
ror
pop
ja
leave
xchg
gs
shl
mov
repz
enter
mov
mov
sbb
les
outs
mov
and
xchg
xchg
jne
add
inc
sbb
add
xor
sbb
loope
mov
sub
inc
pop
mov
jno
xchg
movs
and
pmullw
(bad)
loop
int3
pop
je
mov
pop
xchg
pop
mov
inc
and
cmps
test
pminub
rcl
sub
inc
mov
inc
mov
sub
inc
or
and
sbb
mov
dec
div
jg
cdq
or
movs
hlt
shl
ins
sub
ret
and
sub
xor
adc
hlt
stos
aad
push
xchg
push
or
mov
pop
loopne
push
out
inc
xchg
mov
gs
outs
adc
sub
add
mov
mov
pop
adc
mov
push
pop
std
xor
xchg
mov
int3
lea
jmp
dec
mov
mov
mov
call
sbb
out
out
push
push
cmp
(bad)
xor
inc
sub
scas
add
mov
enter
stos
ins
pop
jb
fsub
aas
and
xor
fisttp
ror
lahf
or
(bad)
xor
ret
dec
int3
mov
push
stos
push
in
ds
fmul
call
adc
ds
cmps
test
aad
int
xlat
push
pop
inc
sub
mov
cmp
xor
lock
in
jmp
ins
test
push
add
addr16
xor
cmp
jmp
mov
popf
sbb
adc
ins
repnz
dec
outs
aaa
stos
pop
test
adc
jne
sahf
sub
push
pushf
inc
xchg
jae
cmp
ret
loop
jnp
mov
pop
out
pop
or
loop
scas
gs
jmp
shl
jbe
mov
je
test
iret
ins
push
jg
inc
(bad)
adc
ins
pop
mov
mov
into
jl
mov
mov
cmp
xchg
add
fisttp
das
ror
jge
cwde
adc
and
ds
scas
xor
outs
xchg
ss
sub
jne
call
lds
lahf
addr16
and
sbb
imul
dec
ret
call
or
jmp
loope
fild
mov
(bad)
popa
lahf
add
sub
push
(bad)
mov
or
adc
sbb
add
fcomp
cwde
or
cld
cwde
and
stos
jle
mov
jmp
jmp
adc
out
out
mov
les
mov
pop
jmp
dec
out
sub
push
in
add
xchg
pop
mov
dec
int
test
(bad)
loop
test
popf
or
data16
pop
(bad)
jno
adc
xchg
fwait
add
stc
mov
in
aad
into
and
mov
mov
mov
call
fisubr
mov
icebp
xchg
xchg
repnz
xchg
inc
shl
inc
call
lock
retf
loop
inc
or
mov
xchg
(bad)
cmp
or
xchg
stos
test
nop
retf
scas
in
dec
nop
icebp
mov
ss
xor
xchg
push
xchg
cmp
in
fdivrp
je
fldcw
and
xchg
inc
mov
and
adc
stc
shl
jno
adc
xor
rcr
imul
mov
jmp
iret
add
stos
test
adc
cmp
cmps
jge
mov
pop
imul
push
xchg
cmps
sahf
xchg
mov
xchg
(bad)
movs
push
push
fnstcw
hlt
jl
(bad)
enter
adc
mov
dec
push
and
mov
outs
arpl
(bad)
dec
add
and
jo
pop
pop
jl
adc
mov
(bad)
out
jbe
mov
sub
rol
xlat
lds
loopne
ins
adc
sbb
in
inc
shr
mov
test
pop
sub
push
enter
or
push
mov
dec
mov
push
xlat
sbb
hlt
shr
mov
aaa
std
mov
inc
int
jmp
cld
nop
loope
or
lea
(bad)
mov
sbb
cmp
in
sbb
test
sbb
call
push
inc
test
jb
test
add
push
imul
jge
(bad)
dec
cli
out
jp
enter
mov
test
push
push
and
jbe
out
daa
sbb
ror
shr
repz
mov
adc
add
mov
xchg
arpl
sti
inc
data16
ret
retf
push
rol
xor
stos
mov
jnp
push
sub
cmp
rcl
(bad)
inc
ret
xchg
jae
ins
loop
or
xor
ss
idiv
iret
xchg
rcl
fist
mov
stos
jno
inc
hlt
or
mov
ret
pop
xchg
and
and
in
or
cmp
cmp
add
add
add
add
fstp
das
xchg
cmc
add
(bad)
test
jnp
jmp
mul
pop
mov
mul
or
add
sbb
pop
cmp
int3
adc
in
icebp
test
(bad)
fstp
movs
(bad)
lea
call
out
pop
movs
xchg
repnz
cwde
test
or
ds
jl
std
jmp
mov
xchg
and
push
pop
retf
xor
or
sti
clc
movs
test
repz
imul
scas
xchg
aaa
push
jne
inc
or
pop
pop
mov
ror
movs
sub
fucomp
test
sbb
mov
dec
cwde
mov
cwde
push
retf
or
int
pop
and
add
std
fiadd
push
addr16
sub
fiadd
sbb
pop
jmp
call
sub
push
xchg
xchg
fwait
stos
aam
stos
mov
pop
inc
leave
push
dec
(bad)
pop
popf
fcmovnbe
cmp
loopne
mul
xor
call
test
sub
fisubr
mov
mov
xchg
ror
lods
dec
and
movs
lock
xor
retf
mov
fmul
push
in
cmp
pop
push
pop
enter
dec
push
test
in
push
ror
lea
pop
sbb
sub
or
scas
rol
imul
pushf
int3
push
add
movs
shl
dec
scas
inc
jp
mov
scas
stos
xor
test
ret
add
lods
shl
clc
aas
sub
div
int3
test
mov
xor
xchg
fs
xchg
inc
shl
push
loope
test
push
or
lea
loopne
std
xchg
push
sub
jle
les
fwait
or
add
push
mov
cmp
push
sub
fcmove
lea
mov
push
sar
mov
aam
aas
mov
aas
or
cdq
push
inc
or
cmp
loopne
adc
dec
outs
sahf
pusha
jb
ss
out
cmps
mov
jns
shr
sar
cmp
in
mov
(bad)
sbb
sub
mov
mov
sub
cs
push
xchg
sbb
inc
pop
cli
mov
push
cmp
jno
cmps
xchg
ins
inc
sbb
data16
xchg
jb
call
es
or
fstp
ds
cmps
fcom
add
cmps
fist
mov
test
add
mov
cmp
test
sub
xor
jb
mov
mov
neg
xor
pop
adc
(bad)
sbb
int
imul
test
mov
rol
retf
sub
mov
imul
mov
xor
cdq
inc
cld
call
(bad)
mov
jecxz
cwde
mov
mov
mov
out
rcl
rcl
jns
jge
push
call
bound
push
pop
pop
xchg
gs
xchg
jmp
test
xchg
fimul
xchg
jbe
mov
or
pop
into
fcmovbe
and
mov
xchg
mov
js
adc
fiadd
sub
ins
mov
scas
sbb
sub
dec
push
(bad)
pop
cmp
outs
aam
outs
jmp
fcomp
push
xor
dec
cs
icebp
pop
jmp
mov
lds
(bad)
out
jle
addr16
add
sub
jmp
lods
jle
inc
lods
dec
pop
stos
call
in
xor
jbe
xchg
pop
mov
rcl
daa
jns
dec
lea
or
adc
or
jp
sar
sbb
jecxz
int3
cmp
and
dec
xchg
ins
in
pop
sahf
js
pop
or
test
ins
or
(bad)
or
sar
and
cmp
lods
push
cli
sahf
stos
cli
and
aam
pop
int3
test
enter
cli
popf
xchg
movs
adc
lock
mov
fild
scas
imul
and
out
cmps
rep
jp
pusha
scas
mov
ret
dec
iret
mov
(bad)
aas
cli
ret
or
sub
les
repnz
xchg
enter
(bad)
xchg
pop
sbb
scas
leave
or
int
rol
mov
mov
pop
adc
outs
push
add
sti
mov
xor
test
inc
cmp
jp
and
pop
xchg
fsub
jnp
sti
paddusb
cmp
mov
cmp
inc
std
xor
and
push
adc
addr16
call
aad
cld
sbb
pop
push
pop
xor
in
jmp
lea
outs
sub
stc
or
dec
pusha
into
dec
fisttp
scas
xor
dec
(bad)
out
pop
adc
mov
icebp
mov
cmp
gs
int
jp
mov
test
inc
nop
je
popf
mov
repnz
xor
sub
das
xchg
xchg
sbb
dec
pop
retf
adc
mov
out
hlt
pop
fucomip
rcr
mov
leave
xchg
mov
mov
mov
mov
fs
inc
shr
pop
push
rcr
add
movs
and
mov
inc
dec
loop
stos
add
iret
icebp
xor
test
addr16
jae
pop
fcomp
loop
scas
mov
push
dec
jno
test
mov
ds
dec
pop
mov
pop
mov
or
mov
pop
jecxz
cmp
xlat
push
xchg
lds
call
add
add
inc
fbstp
pop
or
lock
sub
movs
pop
cmp
mov
aam
pusha
sar
(bad)
mov
cs
jg
bound
cwde
imul
repz
call
sti
add
and
ins
and
mov
jno
ss
dec
pop
mov
mov
loopne
push
inc
pushf
fcmovu
lods
aad
movs
jl
mov
loop
movs
shr
hlt
adc
in
mov
adc
ror
arpl
fwait
ss
arpl
mov
call
mov
xlat
pop
out
nop
or
xchg
push
jmp
inc
dec
stos
inc
nop
cmps
add
jecxz
test
push
retf
js
ja
(bad)
loopne
pop
add
je
test
movs
mov
and
or
into
lea
ds
push
adc
xlat
ss
or
mov
push
enter
repnz
outs
add
mov
push
loopne
icebp
div
imul
ret
inc
push
out
int3
mov
or
clc
call
cmp
pop
mov
push
inc
mov
or
jle
nop
mov
push
or
(bad)
mov
fsubr
inc
pusha
in
jns
xor
pop
xchg
imul
pop
shl
mov
lahf
nop
mov
jae
mov
cmp
mov
out
fcom
int
adc
jle
ficom
jmp
es
nop
or
ss
push
ins
jmp
push
std
and
dec
nop
jne
dec
pop
push
retf
in
stos
movs
dec
jmp
(bad)
jns
sti
mov
xor
pop
stc
loop
ror
sahf
mov
out
out
jbe
adc
outs
pop
bound
(bad)
test
jmp
jb
and
cmps
xor
xchg
jns
push
and
repz
clc
gs
cs
(bad)
jb
mov
add
retf
out
push
adc
fs
cmp
cld
add
mov
inc
adc
mov
cs
aam
jb
jns
sbb
push
push
sti
in
or
and
pushf
stos
jl
xchg
jl
pop
pushf
test
ins
les
inc
jmp
fcomp
push
and
nop
test
push
jno
sub
jno
cmp
push
push
or
push
mov
push
pop
test
xchg
imul
jo
mov
or
push
and
pop
pop
popf
addr16
sub
jbe
mov
cwde
push
(bad)
mov
lods
daa
in
fsub
iret
mov
das
or
mov
cs
pop
pop
shl
push
addr16
sbb
cdq
fmul
inc
retf
mov
ret
loop
scas
and
sbb
das
in
not
mov
jb
dec
mov
scas
jmp
mov
adc
sbb
mov
push
sti
cwde
push
jmp
cmp
fisttp
psubsb
loopne
and
lock
pop
mov
dec
dec
ret
push
idiv
pop
test
mov
xor
in
dec
or
enter
sub
mov
(bad)
(bad)
jl
in
jle
jnp
aam
dec
jns
pop
loopne
mov
xor
std
xchg
(bad)
mov
add
arpl
fcmovnb
lods
add
(bad)
clc
pop
push
sti
xor
adc
xchg
jmp
adc
adc
mov
xor
mov
(bad)
(bad)
sbb
push
adc
mov
mov
push
pop
in
fld
in
(bad)
aad
cmp
xchg
mov
mov
inc
cld
xchg
pop
lods
mov
and
jno
gs
ins
int3
scas
mul
je
lods
es
mov
sbb
xchg
mov
xchg
dec
adc
dec
ret
jg
mov
mov
xchg
cdq
pop
adc
call
leave
imul
test
xor
fisttp
leave
dec
push
xchg
ss
ficom
int
xlat
sbb
outs
mov
jae
jns
sub
dec
push
cmp
and
mov
mov
(bad)
popf
mov
push
lods
pushf
add
add
adc
mov
or
jmp
in
inc
pop
mul
add
pop
and
rol
arpl
aam
jmp
shl
imul
push
mov
and
jae
jmp
inc
lea
mov
int3
push
mov
mov
sub
inc
push
xchg
popf
pop
inc
pop
ret
stc
and
mov
xor
push
movs
sub
or
and
scas
test
inc
mov
jbe
mov
popa
inc
pop
sub
pop
int
xchg
dec
cmp
ror
sbb
ins
js
cli
repz
mov
ja
adc
shl
mov
mov
xchg
sbb
push
and
jae
add
scas
xor
ds
inc
jg
pop
std
out
xlat
rcl
xchg
cmp
test
xchg
jg
push
adc
sub
sbb
xor
ins
mov
push
xor
pushf
stos
repz
pop
xchg
test
xor
mov
xor
inc
add
jecxz
dec
jns
lahf
add
mov
and
dec
inc
mov
movs
jmp
fst
cmp
pop
aad
addr16
addr16
hlt
cmp
repnz
jg
loop
sti
(bad)
aas
call
lock
pusha
loopne
das
mov
fisubr
(bad)
mov
adc
add
loop
gs
mov
fidiv
iret
pop
xor
add
mov
mov
ret
das
das
push
fcomp
les
push
test
jmp
mov
mov
ucomiss
ror
fidiv
cmp
sub
inc
xor
mov
pop
cmp
jg
adc
mov
inc
jmp
(bad)
mov
lods
xchg
les
mov
cdq
lods
xchg
push
popa
ds
inc
fadd
pop
test
mov
repnz
adc
xor
ret
fwait
mov
push
shl
jmp
xchg
and
inc
adc
mov
loop
fadd
adc
ret
fadd
dec
cmps
xor
aas
push
and
sub
push
out
jp
inc
nop
sub
imul
push
sbb
fiadd
ficom
mov
aaa
add
mov
push
ret
sbb
cmp
pusha
add
cmp
mov
or
mov
jge
cmp
imul
scas
pusha
jns
adc
push
mov
push
mov
sub
pop
push
push
cli
int3
stos
loope
rcl
cld
dec
mov
jecxz
inc
pop
in
sub
retf
outs
rcr
jnp
shl
mov
sbb
fsub
cmp
aad
push
push
shl
popf
loopne
xchg
es
and
jbe
(bad)
mov
xchg
push
jg
cmp
sub
punpckldq
jmp
aaa
call
(bad)
mov
inc
pusha
pop
test
retf
mov
ds
shr
(bad)
jg
shr
pop
arpl
or
jae
data16
jb
mov
xchg
jmp
mov
addr16
imul
stos
or
shl
xor
jmp
jne
mov
aad
sub
jo
aas
xchg
out
xchg
inc
adc
and
leave
ror
pop
xchg
in
mov
dec
push
in
fdiv
in
int
jmp
inc
test
xor
dec
jmp
mov
dec
ret
stos
mov
pop
cdq
lods
repz
jle
jne
fisttp
and
cmp
arpl
pop
adc
not
fs
test
sbb
mov
adc
mov
into
jmp
mov
xor
aaa
dec
mov
je
mov
dec
test
pop
pop
mov
fwait
iret
scas
pop
lock
cmp
icebp
cld
jl
sbb
inc
aad
xchg
inc
mov
inc
dec
sbb
adc
loopne
std
(bad)
jge
in
adc
mov
jo
mov
test
sahf
xchg
push
aad
gs
dec
adc
jg
inc
sbb
fild
xor
sahf
inc
dec
clc
aaa
add
or
xchg
fbld
pusha
add
call
inc
js
fwait
outs
adc
mov
loope
xchg
into
retf
dec
fcomip
data16
inc
mov
popa
shl
pop
(bad)
mov
fdiv
(bad)
adc
sub
pushf
repz
fmul
out
repz
out
test
fnsave
inc
iret
mov
mov
imul
adc
mov
and
(bad)
ja
fsubr
(bad)
shl
repz
fisubr
cwde
sub
adc
add
inc
add
push
push
popa
popf
and
pop
shr
cmp
xor
push
sbb
sub
sar
push
icebp
sbb
popf
xchg
or
and
or
shl
sub
loopne
mov
dec
loop
sbb
retf
daa
arpl
and
repz
mul
dec
fist
push
int3
ret
in
popa
mov
or
mov
mov
pop
mov
mov
out
sbb
lea
push
jb
lahf
cmp
(bad)
cli
adc
lds
test
fadd
shl
ds
in
jmp
pop
cmps
adc
mov
das
mov
shl
dec
fcomp
jb
(bad)
aam
dec
push
and
jg
aam
mov
or
cmp
cld
pusha
mov
xlat
inc
mov
pop
sahf
pop
cmp
sbb
(bad)
adc
jae
mov
xchg
movs
out
repz
push
sbb
test
movs
mov
add
push
xor
sar
jp
mov
lds
cmps
inc
popa
(bad)
test
mov
fcomip
push
xchg
push
push
retf
and
sar
inc
in
pop
lods
inc
cmp
adc
rcr
xchg
not
pop
push
ret
(bad)
xor
ins
out
mov
adc
fstp
add
imul
adc
stos
pop
icebp
test
sti
mov
mov
adc
addr16
stc
gs
aaa
inc
outs
shl
mov
push
adc
addr16
jecxz
inc
jbe
sbb
test
jmp
fucomp
mov
daa
cli
test
dec
adc
mov
xchg
fisttp
and
arpl
icebp
cmp
dec
inc
jle
mov
xchg
xchg
aas
scas
int3
(bad)
scas
repnz
shr
cmp
test
and
cmp
loopne
dec
loope
mov
js
mov
mov
cmp
inc
push
retf
lods
scas
lods
bnd
jge
fnsave
es
mov
add
mov
les
repz
popa
dec
jle
push
dec
add
bound
gs
test
mov
(bad)
lock
lods
mov
pop
data16
aaa
mov
dec
out
adc
push
out
add
or
mov
add
(bad)
stos
(bad)
retf
icebp
ss
test
test
ins
mov
add
cld
mov
test
pop
mov
mov
xor
push
iret
mov
fs
jmp
cmp
popa
sbb
xor
xor
js
jb
js
and
mov
xlat
pop
or
push
push
xchg
stos
lahf
in
xchg
xlat
outs
xchg
lea
and
sbb
imul
ja
in
ret
and
mov
xchg
push
fiadd
and
push
clc
pop
pop
repz
mov
xor
jg
or
push
jns
rcr
mov
outs
mov
push
stos
fadd
leave
retf
les
dec
cld
add
bound
clc
leave
loopne
mov
aad
pop
fist
aam
lods
inc
paddw
rol
sub
jle
jb
sbb
(bad)
imul
jnp
mov
adc
inc
in
mov
mov
repz
jle
inc
cmovns
fimul
or
xor
push
movs
fadd
stc
out
sahf
xchg
push
adc
les
popa
mov
or
lea
push
jecxz
dec
sub
dec
int3
sub
adc
and
(bad)
push
cmp
adc
jg
outs
stos
inc
shl
cmps
clc
cld
inc
add
mov
(bad)
(bad)
jae
cs
rcr
aas
pop
inc
movs
inc
ins
xchg
cmp
es
cwde
into
bound
(bad)
sbb
jmp
ins
stos
mov
xor
xor
fcomp
fs
jbe
sub
xchg
stos
outs
xchg
int
stc
mov
dec
inc
add
mov
or
push
call
test
ret
rcl
dec
cmp
test
cmp
sbb
stc
repnz
xor
nop
xor
fistp
imul
jecxz
or
xor
jl
jle
mov
enter
jne
mov
call
mov
sahf
fnstcw
aam
inc
mov
ins
rcl
jbe
jbe
mov
dec
(bad)
push
xchg
stc
mov
jo
fidiv
sbb
into
or
jmp
test
sbb
ss
lahf
push
les
add
(bad)
jae
jo
mov
jb
out
adc
je
or
out
add
dec
dec
imul
jp
scas
lods
fadd
or
cwde
adc
mov
mov
icebp
inc
sti
fstp
add
jmp
dec
xchg
je
mov
dec
push
jmp
jbe
js
pop
add
xchg
fidiv
or
ja
std
add
loopne
mov
jle
pop
frstor
call
xor
push
lea
mov
clc
jmp
add
sti
sbb
into
pop
mov
mov
mov
and
sti
movs
aam
cli
imul
scas
mov
pop
push
out
xlat
(bad)
(bad)
jecxz
imul
dec
shr
and
push
test
ret
add
mov
div
in
pushf
inc
arpl
out
add
iret
sbb
js
dec
or
and
cmp
mov
retf
push
push
xlat
push
jns
fdiv
or
jg
js
cdq
fimul
xlat
shl
pop
and
sbb
add
fadd
xor
xchg
movs
jmp
xchg
adc
pop
lods
adc
inc
jae
inc
(bad)
fcomi
ins
push
in
mov
mov
lods
mov
cmp
ret
call
mov
dec
pop
shr
mov
cmps
(bad)
cwde
out
(bad)
jne
pop
lahf
xor
repz
int3
xchg
ins
xor
addr16
in
dec
or
shr
not
stos
xchg
hlt
test
pop
lock
ret
jmp
mov
adc
in
imul
sbb
pop
idiv
enter
mov
loope
push
sar
sbb
add
mov
cmps
inc
mov
inc
es
call
repnz
loopne
push
push
jl
repz
sbb
sbb
leave
mov
shl
push
pop
loop
repz
(bad)
bnd
or
mov
xor
mov
dec
add
jnp
pop
ja
cdq
dec
mov
xor
sti
pop
cli
dec
ins
adc
xor
retf
into
outs
out
push
jns
fisttp
cmp
sbb
mov
std
test
jne
jmp
test
loope
mov
cmps
movs
adc
lods
movs
mov
out
push
add
cwde
xchg
push
push
test
dec
sbb
in
outs
jb
scas
js
mov
jo
cld
cmp
popf
jo
mov
sub
pop
lods
in
cld
cmp
add
sub
cwde
sar
or
bound
push
out
aad
es
add
sti
mov
loop
pusha
inc
rol
iret
jp
lock
fiadd
fld
xchg
mov
repnz
pop
dec
mov
retf
mov
mov
sub
xlat
xor
scas
dec
or
stc
lahf
arpl
xchg
inc
repnz
add
jbe
(bad)
imul
inc
test
(bad)
out
addr16
fwait
push
mov
popf
dec
adc
out
add
cli
mov
ret
arpl
lock
movs
out
xchg
push
inc
xchg
repz
pop
push
pop
mov
mov
or
cli
mov
sub
pop
jae
imul
shl
mov
dec
and
cmp
hlt
and
in
push
cmp
sbb
inc
or
popf
and
pop
jne
leave
sar
and
adc
cmp
jbe
retf
sub
dec
add
inc
and
ret
mov
and
mov
(bad)
cmp
sub
mov
inc
xchg
jp
shl
cmp
sbb
push
repnz
sbb
pop
inc
mov
in
fisttp
rol
out
out
cmp
sbb
jle
jle
pusha
pop
mov
or
adc
xor
add
jmp
loop
mov
cmp
mov
mov
mov
fdivr
clc
out
mov
lds
mov
or
cmp
stos
xor
gs
jge
push
dec
mov
(bad)
sahf
dec
mov
cwde
inc
xchg
add
mov
cmp
and
pop
inc
mov
and
in
leave
fld
stos
cmp
xchg
movs
sbb
dec
dec
mov
jns
mov
pop
pop
sub
pop
shl
daa
and
inc
mov
mov
addr16
test
ficomp
lahf
dec
push
jecxz
outs
and
mov
mul
jecxz
cld
bound
(bad)
cdq
xor
jmp
jecxz
mov
cmp
jbe
jno
lahf
(bad)
in
sbb
cmps
test
mov
aaa
ins
rol
aad
sti
add
mov
pop
js
pop
cli
test
int3
push
jne
adc
jns
jo
mov
jmp
idiv
adc
add
adc
jmp
in
dec
sub
mov
xchg
aad
lock
jne
cmp
xchg
test
es
mov
mov
and
mov
mov
rcr
adc
imul
imul
in
imul
pop
shr
mov
mov
sub
in
xchg
fst
and
stos
popf
nop
loope
push
or
pop
fnstsw
out
stc
adc
sub
inc
xchg
inc
mov
or
mov
xor
mov
popa
push
dec
cmp
jnp
cmp
addr16
xchg
rol
sub
and
aad
cmps
jp
xchg
push
push
aaa
xor
mov
(bad)
in
pop
inc
sub
push
or
xchg
jmp
cmp
fsubr
adc
int
jb
mov
fistp
in
jle
push
lea
aam
std
push
jge
or
lock
ds
ret
push
shl
out
jg
ficom
adc
pop
fldcw
push
adc
shr
jb
or
or
ror
idiv
(bad)
or
cmps
lds
jge
and
cmp
ret
loopne
sar
adc
pusha
cmp
enter
cmp
push
or
sub
loope
adc
fist
jnp
repz
pop
fdiv
clc
adc
cmps
xchg
in
pop
xlat
push
scas
jp
pop
in
fist
je
add
cmp
stos
pop
push
loopne
cmps
ffreep
leave
shr
adc
pop
stos
and
jmp
loop
inc
popa
push
pop
jns
pop
imul
mov
int3
in
add
fist
imul
adc
push
scas
pop
(bad)
lds
aas
out
enter
dec
(bad)
xor
retf
cs
adc
lock
pop
sbb
xchg
sub
jns
outs
adc
jno
xchg
(bad)
(bad)
icebp
test
loope
shl
cdq
fisub
xchg
inc
add
push
ret
sbb
sbb
cmp
ret
push
les
rcr
popa
or
aad
mov
in
adc
fwait
cmp
(bad)
leave
dec
out
add
push
shr
mov
movs
data16
fidivr
movs
push
loope
imul
cs
push
jno
cmc
movs
loopne
push
cmp
call
add
adc
sbb
lods
push
mov
sbb
jno
sub
std
data16
cmp
mov
push
in
xor
rol
jo
sbb
pop
jne
pop
mov
dec
nop
out
int
mov
mov
popa
retf
mov
fbstp
pusha
push
mov
mov
jb
xor
fwait
sub
xchg
pop
dec
scas
mov
fmul
pop
inc
pop
sub
and
cs
and
mov
jmp
fs
cmp
(bad)
aad
pop
mov
push
shl
jge
sbb
mov
in
mov
jb
aas
push
push
iret
ds
mov
mov
lds
stos
imul
xchg
push
out
sbb
rol
retf
jle
cmp
(bad)
mov
(bad)
pusha
xor
mov
sub
and
fmul
dec
popf
movs
sub
dec
mov
pop
dec
retf
retf
add
dec
aaa
hlt
jmp
add
rcl
ss
lods
aad
push
push
adc
push
cli
push
repz
push
xor
stc
test
sub
in
daa
data16
stc
leave
cmps
aas
sbb
clc
and
mov
cwde
xor
jle
ins
test
and
movs
aad
data16
stc
(bad)
pop
xor
std
(bad)
std
jbe
xchg
sbb
popa
jge
hlt
push
adc
aam
pop
stos
adc
enter
jle
xchg
test
int3
push
imul
mov
lahf
mov
jb
fnsave
retf
cmp
and
call
push
adc
push
retf
push
cmp
inc
push
test
lods
jp
popa
jge
nop
pop
in
mov
adc
and
scas
(bad)
mov
aad
fdiv
dec
dec
pushf
call
outs
daa
sahf
cmp
sub
inc
lods
mov
cmp
or
fldenv
cvtdq2ps
adc
int3
xor
in
sbb
iret
das
pop
test
pop
shl
or
jmp
call
out
jmp
cmc
outs
sti
xchg
call
fcomp
mov
xchg
xor
enter
xchg
pusha
jecxz
js
adc
pop
loope
bound
clc
xor
xchg
cmp
out
push
call
(bad)
push
imul
daa
mov
outs
dec
enter
push
int
add
in
inc
out
mov
xchg
popa
mov
retf
ins
fist
jp
in
loop
jmp
pop
push
inc
sahf
push
adc
push
xor
adc
push
(bad)
rcl
lds
inc
cwde
push
pop
dec
add
cmp
add
retf
inc
sbb
xchg
mov
imul
jmp
sub
push
sbb
mov
lock
scas
fild
inc
or
add
add
dec
outs
outs
jmp
daa
push
mov
inc
dec
fidiv
daa
sub
push
cmp
(bad)
inc
cld
jg
ins
cmp
shl
popa
in
fisttp
mov
dec
and
ds
add
or
pop
cmp
mov
push
adc
scas
data16
in
or
adc
inc
mov
ret
js
adc
push
mov
rcl
cmp
cmc
dec
sar
into
adc
es
dec
push
arpl
test
stos
xor
jnp
sahf
jo
mov
mov
sub
mov
add
and
mov
and
xor
js
lods
add
dec
dec
out
mov
mov
xor
mov
sbb
rcr
and
sub
lods
pop
and
adc
mov
nop
imul
es
pop
movs
or
mov
push
and
adc
(bad)
add
loopne
das
in
nop
xlat
mov
xchg
das
cmp
fnstcw
xor
pop
lods
call
jecxz
mov
ret
test
addr16
sbb
xchg
dec
dec
inc
jbe
sti
js
or
xor
int
jno
or
sbb
or
jmp
dec
test
mov
mov
pusha
xchg
scas
movs
inc
jmp
or
mov
lock
jbe
enter
pop
stos
sbb
jp
loope
pusha
lea
out
pop
mov
cld
in
add
push
dec
lea
mov
add
add
cs
int3
scas
repz
cmp
imul
fst
mov
out
cld
or
sahf
cmc
not
bound
mov
clc
(bad)
sbb
dec
sahf
sahf
dec
dec
pop
cmpxchg
outs
fwait
in
inc
adc
mov
xor
out
ret
xor
cmps
jg
in
add
mov
pop
sar
aad
ret
cmps
std
call
pusha
xor
inc
test
xchg
mov
cld
repz
es
cmp
movs
sbb
cmp
mov
push
ror
nop
jno
mov
jae
adc
retf
add
pop
xchg
and
mov
fwait
xor
fdiv
xchg
test
ror
mov
mov
mov
pop
hlt
dec
dec
mov
and
data16
addr16
add
cmp
sub
out
pushf
ror
(bad)
repnz
mov
jmp
(bad)
sub
inc
lahf
imul
scas
test
(bad)
ja
sub
outs
mov
ret
sbb
movs
jnp
popf
or
jno
xchg
cmp
mov
enter
inc
push
pusha
clc
pop
icebp
test
jmp
or
fs
pop
jle
pop
mov
gs
and
adc
mov
xchg
fdiv
cmp
cmp
ret
xchg
sar
push
movs
xor
fld
cmp
sub
outs
xor
pop
mov
mov
outs
ins
sti
pop
xor
dec
push
(bad)
mov
pushf
sub
dec
mov
mov
fwait
lock
or
js
and
mov
mov
cmp
mov
and
ds
jle
add
xchg
adc
fwait
mov
ins
fcmovb
cmp
push
mov
cmp
sub
stos
enter
inc
and
sbb
out
jo
push
scas
cld
(bad)
pop
xor
stos
psllw
xor
outs
sub
repnz
add
retf
dec
movs
lods
enter
jbe
sub
push
or
or
popa
(bad)
repz
(bad)
push
(bad)
fstp
popa
xchg
jle
jg
sbb
sbb
out
jns
jp
pop
dec
sub
jo
mov
cli
into
clc
inc
jle
inc
lahf
ja
daa
mov
push
jmp
xchg
je
push
nop
mov
lock
pop
imul
pop
pop
mov
int
ins
push
movs
in
jg
push
sahf
out
in
retf
enter
pop
bound
mov
mov
sbb
jnp
inc
dec
jg
xor
push
int
and
addr16
jns
call
test
arpl
in
push
dec
xchg
xor
loopne
dec
mov
mov
add
cmp
mov
jecxz
in
daa
shr
add
xchg
pop
fisttp
stc
(bad)
mov
inc
inc
fdivr
scas
jae
(bad)
repz
inc
mov
in
and
scas
push
push
push
call
xor
cmp
lock
(bad)
mov
xlat
adc
cmp
push
dec
aam
xor
ror
push
adc
jecxz
(bad)
pop
int3
inc
xchg
cmp
enter
loop
popa
inc
pop
arpl
push
xchg
sbb
pop
pop
sub
(bad)
and
mov
fdiv
mov
add
fyl2x
cli
es
cmp
lea
imul
frstor
inc
jecxz
mov
mov
and
mov
push
xchg
pusha
mov
adc
adc
mov
iret
inc
fidivr
aam
inc
pusha
cli
jb
out
cli
into
aam
jne
jo
sub
add
int
mov
xchg
xchg
inc
mov
xchg
movs
inc
dec
add
sub
xchg
fdivr
out
fldcw
cmc
mov
adc
push
das
adc
out
jecxz
enter
mov
hlt
and
stos
stos
fstp
call
sub
mov
adc
aaa
jne
xchg
je
push
and
sub
dec
cld
xchg
pusha
jg
or
pop
mov
mov
dec
cmps
xor
fnstenv
adc
xor
mov
push
sub
repnz
cs
mov
outs
jl
imul
aad
push
add
loope
cmps
cld
call
mov
sub
not
push
ror
mov
test
aaa
sahf
sub
push
dec
hlt
mov
xor
dec
lods
mov
xor
xlat
cmp
(bad)
jne
pop
xchg
btr
pop
outs
cmp
ins
outs
inc
jp
sahf
sbb
mov
jae
sti
test
sti
test
test
xchg
push
inc
jns
imul
out
sub
sbb
jmp
aam
adc
jo
ins
cmc
cmp
test
sub
fimul
ins
jbe
je
(bad)
mov
mov
rol
dec
or
jl
cld
scas
inc
pop
call
mov
add
std
fld
add
xlat
hlt
out
int3
mov
xchg
test
daa
movs
xor
cmps
and
inc
clc
loope
movs
paddd
or
jns
jns
pop
pop
popa
rcr
and
pushf
scas
das
in
xor
sub
sub
cwde
xor
sbb
lods
data16
dec
mov
pushf
jo
int3
fwait
inc
or
int
(bad)
lock
mov
inc
and
jo
push
xchg
fbstp
mov
mov
aam
mov
shl
xlat
xchg
in
xor
sub
and
leave
mov
dec
push
sbb
hlt
loop
fisttp
inc
xchg
and
idiv
loop
adc
push
jp
add
(bad)
and
int
ins
mov
and
cmp
jecxz
ds
in
jb
inc
push
fcomp
call
das
or
xchg
jp
mov
and
jecxz
ds
xchg
sbb
lods
loopne
ret
jnp
jecxz
dec
retf
fs
out
neg
pop
adc
or
in
fcomp
mov
xchg
mov
popf
test
(bad)
mov
rcr
mov
(bad)
sti
mov
xor
shr
int3
js
adc
xchg
mov
push
ss
bound
cdq
stos
cmps
aam
dec
cdq
(bad)
adc
repnz
cdq
and
jecxz
mov
mov
sahf
mov
test
and
lea
hlt
and
lods
pop
push
xchg
push
sahf
sub
sahf
jnp
movs
test
push
mov
(bad)
jb
ds
sbb
rcl
sbb
adc
imul
add
add
imul
xor
call
daa
sub
pushf
jb
into
xlat
jmp
scas
pop
xor
clc
aas
push
sbb
data16
icebp
or
iret
retf
push
in
sar
add
(bad)
jns
test
imul
dec
add
ds
xchg
scas
leave
popf
push
xchg
jge
pop
and
push
mov
scas
cwde
dec
add
call
daa
bound
movs
rcr
stos
shl
mov
push
sbb
fist
mov
movs
add
pop
xor
push
jbe
xor
sbb
push
inc
or
cmp
pop
in
push
add
addr16
jbe
dec
lds
cmp
inc
cmp
lods
jae
mov
jns
xchg
and
dec
fistp
jmp
sub
pop
jg
push
popa
xchg
push
test
pop
push
fwait
test
neg
sub
call
out
adc
(bad)
cmp
mov
call
adc
in
xchg
das
rol
fisttp
jo
mov
jbe
cmps
ret
lods
call
mov
mov
lods
xor
std
add
mov
add
jo
mov
imul
cli
inc
jnp
jns
push
inc
sbb
push
jo
mov
xchg
jne
cdq
fwait
(bad)
jmp
push
push
cmp
sub
mov
or
mov
in
fst
mov
xchg
idiv
call
shl
xchg
jmp
mov
inc
(bad)
jne
out
lahf
dec
stc
aas
jg
fwait
inc
scas
rcl
xor
(bad)
mov
fsubr
and
fimul
movs
(bad)
les
inc
in
push
sbb
repz
daa
js
jno
cmp
inc
mov
push
mov
cli
mov
retf
outs
ficom
and
jg
adc
imul
mov
movs
movs
ins
sbb
push
pop
mov
or
enter
loopne
push
cwde
lods
mov
xor
or
jne
and
inc
xor
retf
cwde
xchg
cmp
xor
stos
adc
(bad)
(bad)
in
jo
dec
lods
call
retf
(bad)
or
(bad)
inc
or
push
shl
jns
mov
iret
retf
mov
div
jns
test
cmp
ins
inc
add
out
sbb
fwait
cmp
dec
jb
clc
push
or
mov
not
inc
jns
inc
add
popa
sub
in
rcr
rol
out
outs
sti
idiv
call
je
and
xchg
fcomp
push
outs
ds
sbb
sar
jo
icebp
popa
pusha
mov
mov
mov
mov
cmp
rol
sbb
jnp
push
xchg
stos
jb
loopne
mov
mov
cmp
stos
sub
mov
sti
sub
retf
or
aas
daa
push
stc
sub
add
lock
mov
mov
retf
mov
sub
lods
cmp
hlt
sar
scas
add
call
pop
adc
xor
inc
ficom
(bad)
dec
jl
mov
pop
retf
out
cmp
fs
jg
lods
ds
pop
jb
dec
or
test
mov
dec
lods
outs
aas
fs
cmp
cmps
mov
mov
adc
test
cli
add
add
pop
sub
nop
arpl
sahf
xor
and
call
dec
push
jnp
sbb
xchg
add
ror
push
daa
sti
mov
(bad)
cmp
push
test
in
test
mov
popa
int
ja
fwait
dec
retf
adc
sar
xchg
xchg
pop
mov
outs
popf
das
inc
loope
pop
iret
push
aad
xchg
fild
xchg
push
xchg
call
push
(bad)
pop
call
xor
cmp
lods
in
outs
dec
inc
push
fiadd
mov
xchg
or
mov
push
xor
dec
sahf
jmp
fs
lock
mov
es
stos
and
scas
ret
push
add
cmps
xchg
mov
bound
nop
jp
cwde
loop
ror
jmp
mov
inc
push
je
inc
inc
inc
xchg
je
out
pop
and
ja
cmp
pop
enter
push
out
push
inc
add
cwde
sub
cmc
aad
or
sbb
pop
or
mov
jge
lods
jg
jnp
in
add
repz
fwait
dec
adc
es
ds
sub
test
(bad)
cmp
scas
gs
aad
aad
imul
addr16
je
cmp
sub
xor
mov
push
test
jmp
add
push
mov
not
mov
dec
pop
aad
push
dec
inc
out
or
cdq
or
fs
adc
and
and
xlat
and
out
gs
retf
mov
test
mov
imul
mov
(bad)
ror
fisubr
int3
mov
cwde
or
mov
sbb
add
and
pop
sbb
mov
push
xchg
addr16
mov
int3
aad
sub
fsubr
jp
div
nop
jne
and
fsub
inc
xor
fdivr
shl
popf
mov
sub
in
mov
pushf
dec
mov
shl
sub
mov
and
pusha
xchg
or
bound
sbb
jl
(bad)
jae
loop
inc
mov
adc
mul
xchg
add
sbb
inc
pop
out
fdivp
jecxz
mov
ja
xchg
(bad)
(bad)
inc
push
jbe
arpl
jae
call
inc
movs
in
fldcw
clc
and
div
cmp
mov
push
mov
jo
mov
xchg
dec
sti
dec
loop
push
xchg
out
loope
add
mov
mov
inc
adc
sbb
sar
fcomp
out
int3
push
into
mov
scas
leave
stc
add
(bad)
and
push
fldcw
rcr
cli
mov
jne
repz
les
les
sti
pop
mov
pop
imul
jns
or
xchg
push
jg
scas
adc
sub
rcl
xor
add
pushf
or
sahf
xor
or
clc
or
jecxz
mov
loopne
xchg
cmp
ins
inc
fdivr
mov
xchg
adc
arpl
aam
push
imul
inc
sar
leave
retf
bound
add
mov
mov
pop
pushf
and
(bad)
push
aam
lock
es
imul
and
lock
lods
addr16
push
cmp
mov
dec
shl
inc
mov
in
iret
mov
inc
aam
xchg
leave
pop
xchg
mov
into
rol
mov
ins
push
nop
xor
push
iret
or
ss
push
aas
cmp
push
add
inc
test
clc
push
aaa
sub
jge
std
out
xor
jmp
sub
sti
xor
xchg
mov
outs
fwait
and
mov
xchg
push
mov
xor
out
push
xor
lahf
popa
pop
inc
ficomp
popa
aam
test
pop
in
dec
cmps
and
fsubr
retf
jb
mov
pop
stos
mov
pop
xor
(bad)
dec
mov
adc
aad
add
sub
lods
imul
push
shl
mov
mov
js
loope
dec
(bad)
adc
in
shr
xchg
dec
pop
or
push
in
retf
test
(bad)
jae
jecxz
push
jmp
xor
push
sub
leave
repz
pop
dec
jns
cmp
sub
rcr
lea
aaa
pop
(bad)
pop
repz
lock
mov
xchg
scas
or
ret
pop
cmp
inc
inc
das
sub
sbb
call
nop
push
in
test
call
mov
cmp
mov
and
jmp
sub
ret
jb
jecxz
mov
lods
inc
xor
and
lea
pop
fnstenv
shl
nop
cmp
ret
dec
adc
out
sub
loope
dec
aam
cwde
add
clc
xor
icebp
sahf
cmp
jae
xchg
rcr
inc
fstp
jg
mov
dec
imul
inc
jmp
mov
stos
mov
fdiv
(bad)
in
out
cmp
(bad)
fidiv
sti
fstp
xlat
pop
sbb
jb
ins
das
inc
test
and
lods
aas
mov
out
push
cmp
adc
int3
push
jp
shr
lods
sbb
mov
dec
cs
inc
mov
xchg
sbb
dec
(bad)
retf
inc
mov
movs
and
jecxz
ret
or
iret
mov
mov
jne
into
dec
fcomp
pop
out
shr
scas
mov
mov
inc
adc
aad
cli
pop
cmp
xor
push
inc
jo
mov
pop
mov
aaa
test
aam
mov
fnstsw
cdq
loop
fimul
xchg
xchg
adc
cmps
cmps
or
mov
rcr
push
daa
mov
or
mov
mov
push
pop
ins
test
inc
inc
call
sbb
fsubp
jmp
fisttp
mov
inc
inc
xchg
jmp
and
shl
cmp
xchg
out
movs
cwde
cmp
dec
vsubps
mov
clc
ins
je
pusha
int3
cmp
jnp
sti
ss
inc
in
jmp
mov
rcr
test
int
mov
jmp
and
dec
ds
shl
mov
inc
fs
xor
rol
jbe
lods
mov
rol
fwait
inc
push
and
repz
je
scas
xchg
and
inc
xlat
jge
cmp
jp
adc
ja
or
jbe
mov
sub
ins
repnz
mov
cwde
mov
jl
jne
popa
add
push
sub
jnp
jle
and
stos
test
sub
cld
adc
mov
cmc
hlt
(bad)
dec
ficom
mov
cmp
xchg
push
inc
mov
into
cmc
xor
xor
sar
pop
pop
mov
sti
or
imul
inc
jbe
push
inc
in
leave
and
lods
xchg
ret
dec
(bad)
popa
xchg
pushf
dec
bound
daa
lock
ss
mov
loope
jle
je
jnp
or
mov
pop
retf
arpl
cwde
(bad)
jae
lds
sar
movs
adc
mov
sbb
mov
test
mov
clc
sbb
mov
or
inc
or
pusha
adc
inc
xchg
(bad)
popa
rcl
xlat
data16
aad
add
call
sti
and
lea
lahf
call
adc
mov
fdiv
sub
scas
dec
mov
jmp
ret
push
test
mov
jmp
push
mov
cld
clc
in
jnp
icebp
push
iret
(bad)
pop
mov
xor
pop
mov
rcr
stos
push
sub
cmp
mov
jmp
and
xor
shl
pop
inc
rcl
jmp
pop
ss
cld
jmp
(bad)
loop
add
bound
ror
int3
push
loope
jo
and
xchg
xor
add
adc
jne
mov
loop
push
leave
ins
fwait
rcr
lods
jmp
retf
xchg
push
je
jp
data16
xchg
in
pop
inc
popa
dec
sub
sahf
xchg
sub
movs
ds
jno
loop
jb
mov
scas
scas
loopne
ss
adc
aam
jg
pop
and
xchg
ret
in
lahf
push
mov
scas
dec
sub
sub
lds
popf
jae
mov
mov
movs
test
inc
pop
out
pop
dec
jle
cdq
aaa
(bad)
xor
mov
in
retf
(bad)
out
mov
mov
inc
shr
jle
stc
mov
out
std
and
(bad)
ds
and
jns
inc
adc
dec
int3
cmp
inc
call
mov
inc
pop
inc
paddsb
mov
enter
and
inc
or
fidiv
les
push
paddq
fild
fs
stos
xor
mov
sbb
adc
loop
stos
int
rcl
mov
rcl
rol
js
cmps
in
ins
fs
cmc
(bad)
cmp
push
enter
cmc
jecxz
add
icebp
les
xor
push
shl
movs
inc
pop
sub
das
aaa
mov
sub
or
and
das
into
mov
fs
clc
jno
bound
scas
xchg
pushf
stos
int
or
push
mov
dec
mul
cmc
push
push
inc
sbb
(bad)
iret
jb
adc
movs
int
mov
inc
xchg
(bad)
out
add
pop
iret
sahf
and
add
sbb
xor
repz
sub
mov
loopne
mov
out
call
lock
inc
or
inc
lods
lds
inc
push
push
adc
hlt
mov
jmp
inc
push
dec
or
stc
ror
or
pop
pop
sub
imul
call
mov
fucom
in
add
and
xchg
jno
call
pop
and
lock
mov
sub
inc
loope
push
jle
xor
pop
dec
jne
cwde
rol
mov
(bad)
or
outs
dec
pop
mov
lods
icebp
fistp
popf
mov
outs
es
push
ret
(bad)
imul
sub
mov
jns
(bad)
in
adc
mov
nop
xlat
mov
cli
adc
mov
ja
les
(bad)
stc
mov
mov
enter
cmp
dec
and
pop
mov
and
cmp
mov
scas
nop
mov
fadd
ss
lods
add
push
repz
mov
sbb
std
vmread
addr16
push
jo
hlt
ror
xchg
enter
push
jmp
mov
rcr
icebp
es
nop
aad
jmp
and
jb
ja
inc
lods
popa
outs
addr16
scas
mov
mov
jle
rcl
pop
dec
ror
ret
xor
repz
ror
and
push
cli
popa
stc
or
(bad)
or
fidiv
test
jo
xchg
inc
sub
xchg
mov
bound
out
or
clc
sub
push
mov
mov
and
mov
xchg
pop
stos
fsubr
hlt
add
jle
fs
pop
div
jmp
add
inc
mov
int3
dec
mov
jmp
iret
add
(bad)
les
stc
(bad)
fmul
push
sbb
mov
movs
xor
dec
movs
dec
mov
std
xchg
jo
sbb
cs
sub
ret
pushf
outs
rcr
adc
push
xchg
pop
xchg
(bad)
pushf
xchg
in
adc
out
(bad)
jmp
std
(bad)
dec
sub
or
or
adc
mov
sbb
popa
lea
movs
aas
data16
loop
add
(bad)
jbe
push
inc
test
je
int
or
add
ret
xchg
call
push
push
and
scas
call
push
jmp
into
mov
xor
js
xchg
mov
xchg
lds
mov
xchg
mov
inc
mov
outs
std
push
jno
aas
out
mov
mov
sar
(bad)
stc
lahf
popf
enter
mov
jbe
mov
sahf
sti
scas
sahf
arpl
hlt
mov
sub
and
add
or
(bad)
jmp
xlat
pop
xchg
mov
scas
mov
dec
adc
jmp
scas
test
jns
xor
fld
dec
stos
jno
pop
dec
mov
mov
adc
xor
add
repnz
jg
xor
push
mov
bound
inc
mov
pushf
adc
outs
arpl
add
jmp
daa
cmps
imul
pop
fucom
(bad)
jle
dec
fwait
pop
ficomp
jg
push
adc
mov
dec
pop
in
sbb
or
push
stos
pop
jecxz
lds
and
sbb
inc
xchg
(bad)
daa
inc
cmp
mov
sbb
xor
into
jno
push
adc
xor
xchg
stos
inc
jmp
adc
das
leave
repnz
js
popa
lea
xor
pop
and
movs
xlat
aam
cmp
xor
pop
mov
jge
jbe
jno
test
pop
test
test
cmp
into
fsub
data16
mov
inc
or
pop
ja
mov
adc
jae
das
out
stos
push
mov
repz
mov
add
mov
adc
xor
pusha
and
in
sub
dec
cs
mov
jge
imul
add
cwde
in
inc
por
mov
add
lahf
jg
xor
es
cli
test
sub
xor
mov
fld
mov
bound
and
adc
mov
loope
xchg
cmp
adc
outs
xlat
inc
xchg
shr
fidiv
and
xchg
add
je
and
out
dec
cmp
mov
sbb
pop
jle
jecxz
mov
adc
pop
sti
fisttp
enter
add
imul
sti
cdq
xlat
mov
dec
movs
into
pushf
pusha
adc
cmp
std
lods
cmp
dec
dec
pop
popa
pop
cmp
(bad)
and
adc
mov
pop
maxps
pop
clc
iret
rol
mov
ins
or
adc
inc
bound
cmp
jecxz
not
jmp
cmp
cmps
push
inc
inc
sub
ret
pop
scas
xchg
push
in
add
aas
aad
hlt
fld
add
jne
cmps
out
movs
cld
cmp
cmc
mov
fisub
inc
push
movs
mov
std
jl
mov
inc
scas
dec
or
inc
shl
mov
test
jg
in
fidivr
fst
inc
add
push
push
cmc
pop
data16
push
iret
cmps
sub
mov
or
loope
lock
in
rcl
pop
push
or
mov
mov
inc
push
push
retf
call
mov
imul
mov
jg
cmc
mov
lock
push
adc
(bad)
and
cmp
cmp
test
enter
cmps
repnz
test
scas
test
imul
jns
mov
into
jne
xchg
(bad)
mov
inc
pop
lea
adc
movs
jns
pop
sbb
xchg
rcl
rep
push
fwait
leave
mov
aaa
or
lahf
mov
push
aad
push
xchg
xchg
call
lea
dec
jle
icebp
popf
aam
test
int3
sub
dec
(bad)
push
jnp
jmp
nop
and
(bad)
lods
daa
xchg
daa
mov
adc
push
imul
push
mov
mov
pop
jae
(bad)
jbe
dec
ja
movs
(bad)
in
adc
adc
dec
cmp
pusha
sti
jne
(bad)
in
pminub
xor
ins
pcmpeqd
cwde
pop
loopne
mov
es
jnp
jmp
pusha
loopne
outs
sahf
repz
mov
or
lea
jl
cmp
test
stos
mov
addr16
jnp
cmp
loope
jl
mov
jno
dec
sub
jbe
push
sub
xchg
sub
mov
sub
pop
mov
(bad)
jecxz
ins
or
cld
test
jbe
fnsave
jg
sub
push
dec
fistp
mov
iret
jmp
pop
loope
rcl
mov
add
xor
repnz
and
in
xor
fld
sbb
inc
test
cmp
in
push
adc
cmp
movs
jo
out
adc
stos
pop
sbb
pop
xchg
jl
push
add
out
cwde
sub
rol
ss
cli
repnz
int3
pop
loopne
bound
rcl
add
mov
dec
stc
cld
pop
hlt
sbb
idiv
out
sub
and
cwde
rol
not
js
add
jne
push
lahf
cwde
push
jns
int3
out
popa
jmp
js
inc
dec
jmp
arpl
aaa
sub
xor
call
stc
mov
scas
mov
mov
mov
jl
cmp
mov
sub
or
add
adc
pop
(bad)
jecxz
loope
xor
sahf
cmp
sub
loope
(bad)
rcl
cmp
stos
inc
jnp
stc
or
fidiv
in
in
dec
sub
or
clc
call
xchg
inc
es
pop
cmp
fcom
cwde
ja
mov
movs
push
nop
lahf
cmps
mov
imul
add
add
(bad)
xor
(bad)
les
ja
sub
leave
xchg
mov
xor
add
nop
ins
mov
idiv
call
xor
cmp
adc
sbb
popa
into
jnp
in
mov
and
add
es
pop
aad
inc
mov
add
cdq
push
sbb
out
sahf
mov
pop
rol
rcl
hlt
not
dec
scas
xor
clc
or
dec
rol
push
xchg
in
cmps
outs
and
stos
adc
(bad)
rcl
cmp
adc
test
sub
pop
sub
arpl
xchg
jns
pop
in
(bad)
scas
jns
ja
inc
xchg
mov
test
mov
int3
xchg
xor
aas
jno
in
cs
gs
out
mov
dec
in
scas
nop
jmp
stos
add
mov
inc
pop
nop
retf
mov
push
imul
nop
jl
cs
cmc
pop
loope
imul
jmp
jno
mov
out
stc
and
loopne
in
and
inc
mov
xor
mov
call
fist
and
and
sbb
repz
into
jecxz
sar
push
push
pop
dec
pop
pop
fist
lods
xchg
pop
mov
mov
mov
call
loopne
and
out
iret
fld
sahf
push
fsub
retf
adc
(bad)
test
push
test
sti
dec
sahf
movs
inc
cdq
shl
pop
inc
sub
ss
inc
mov
add
adc
mov
xor
push
arpl
xlat
fsubr
mov
lods
inc
out
add
lock
movs
pusha
mov
(bad)
fmul
adc
adc
mov
inc
mov
into
ror
push
(bad)
int3
mov
push
adc
cmp
mov
sbb
retf
inc
and
mov
push
iret
sti
enter
jmp
dec
cwde
jbe
retf
xor
(bad)
jmp
js
and
mov
adc
sub
test
jg
pusha
js
outs
push
in
cmc
loope
jb
adc
xor
repz
cmp
sub
dec
inc
xlat
adc
dec
pop
mov
imul
xor
repz
push
sub
and
ret
out
xor
mov
das
sbb
ficomp
push
outs
div
push
(bad)
inc
outs
imul
loope
jne
and
dec
repz
mov
inc
jmp
adc
lahf
loopne
leave
sti
aaa
push
xchg
ret
ins
sub
dec
mov
push
cmp
xlat
jg
inc
and
xor
sbb
or
aas
movs
cli
add
cwde
jp
mov
xor
mov
lea
xchg
mov
fnstcw
mov
push
stc
mov
mov
lahf
pop
nop
sub
aad
mov
aad
cmp
repz
xor
cmp
ds
mov
push
dec
cli
dec
add
pop
jp
mov
jnp
fadd
popa
add
mov
adc
jb
je
xlat
mov
add
push
or
inc
cmpxchg
sar
xchg
test
sub
xchg
je
mov
add
sbb
add
push
test
mov
ret
adc
ss
fs
mov
fs
movs
mov
xor
mov
jmp
test
fistp
aas
and
ds
mov
sub
mov
out
pop
jae
mov
pop
jge
or
idiv
mov
sbb
(bad)
or
imul
pop
mov
jns
into
repz
(bad)
lock
xor
inc
or
lea
or
imul
mov
dec
adc
sahf
sub
retf
popf
scas
cwde
push
add
mov
movs
cmp
pop
jbe
mov
nop
es
cs
dec
xlat
dec
jmp
aad
sub
jns
int3
call
xchg
or
hlt
outs
pop
mov
jo
iret
fwait
cld
and
jb
ins
add
xchg
add
in
push
add
in
aam
and
movs
pop
xchg
add
xor
jp
int
nop
inc
push
mov
and
add
adc
jae
cdq
jo
loop
das
hlt
ror
lds
rcl
or
xor
out
adc
pop
hlt
gs
bound
(bad)
dec
int3
sub
aaa
jl
addr16
retf
push
cmps
cmp
and
shl
xor
(bad)
fidiv
sub
mov
pusha
in
mov
into
add
cmp
(bad)
jne
push
pop
add
mov
inc
sbb
sub
push
sub
mov
imul
mov
or
and
leave
aaa
out
add
(bad)
and
dec
fisttp
fcmovbe
(bad)
fimul
cmp
sub
dec
repnz
cmps
or
mov
add
inc
push
repz
lahf
push
test
cmp
dec
sbb
xchg
jns
in
repz
fld
mov
dec
mov
sbb
mov
pop
cmp
out
and
dec
in
dec
push
scas
mov
ins
jbe
cmp
das
xchg
dec
push
push
aam
push
leave
jae
add
and
enter
stos
in
out
mov
repz
sti
jg
or
dec
sar
xor
pop
test
add
mov
into
sub
inc
cld
pushf
lods
jmp
inc
dec
inc
out
or
jmp
sbb
jnp
leave
jle
pop
inc
mov
pushf
dec
or
jecxz
inc
dec
les
sbb
push
add
mov
xchg
add
test
mov
sub
sbb
xchg
cmp
dec
repnz
sbb
push
sub
out
cmp
or
or
xor
(bad)
das
rcl
mov
sbb
adc
loop
push
add
jbe
mov
fiadd
(bad)
pop
loope
dec
sar
test
mov
cmp
pop
sbb
push
jno
cmp
xor
sub
adc
rcr
add
mov
sub
icebp
or
lods
popf
pusha
dec
dec
(bad)
jl
sbb
retf
fcmovne
adc
sbb
jnp
fmul
fs
jne
xchg
repz
pop
mov
mov
jne
add
mov
cmps
dec
cmp
xor
inc
push
cwde
mov
add
les
and
(bad)
mov
ds
popa
rcl
fiadd
call
shl
and
mov
call
ret
bound
jp
sub
mov
cmp
sub
jle
dec
dec
dec
enter
(bad)
sbb
je
(bad)
fiadd
movs
pushf
repnz
repz
mov
pop
xchg
or
ror
inc
push
cmps
sbb
inc
(bad)
stc
add
and
push
loopne
dec
sub
jg
add
cmp
pop
and
loopne
mov
push
xchg
inc
mov
xchg
fcomp
int3
add
out
fstp
mov
test
sbb
jl
pop
mov
lock
cmps
retf
in
add
or
or
test
pop
cmp
mov
cmp
mov
(bad)
int3
popf
xlat
das
or
je
test
loopne
sub
push
pusha
stos
movs
shr
mov
scas
xor
mov
(bad)
std
and
xor
out
pop
mov
cmp
test
and
dec
xor
popf
leave
pop
scas
xchg
popf
ins
inc
ja
mov
adc
push
pop
sub
imul
lods
out
cmp
sub
and
inc
jnp
gs
out
xor
pusha
pop
sub
mov
jne
sbb
mov
sub
cmc
xor
add
xchg
jb
add
call
lods
push
pop
mov
xchg
dec
add
test
inc
rol
jno
cmp
aad
cs
push
pop
dec
and
cmp
xlat
xchg
add
shl
nop
xor
movs
push
mov
jle
or
jecxz
repnz
or
lds
jmp
les
adc
push
movs
and
aad
stos
(bad)
fnsave
popf
xlat
jbe
push
out
adc
popf
into
lods
pop
je
nop
stos
pusha
(bad)
cld
stc
enter
cmp
retf
daa
std
fwait
xchg
(bad)
jmp
jle
in
ja
and
test
lods
aas
pop
jmp
sub
pushf
cmc
loop
sub
push
pop
jo
pop
or
add
push
push
and
adc
sbb
cmp
scas
pop
cwde
adc
pop
lods
in
inc
push
aad
cld
jmp
cmps
(bad)
enter
lods
pop
or
add
push
cmps
hlt
imul
rcl
push
fcomp
in
xchg
pop
push
dec
clc
mov
ss
jnp
inc
fisttp
add
cld
stos
xchg
scas
inc
ret
and
bound
aam
cmp
mov
sbb
lea
inc
mov
ficomp
or
out
xchg
test
dec
xchg
ins
pop
jo
mul
add
aaa
push
pop
push
inc
mov
es
fidiv
xchg
adc
test
inc
pushf
adc
test
popa
popf
fucom
leave
push
add
push
rcr
scas
or
xchg
sahf
and
add
adc
lea
push
mov
in
inc
mov
pop
jne
mov
add
dec
mov
popf
cmps
mov
imul
stc
mov
add
push
mov
adc
pavgw
push
inc
pop
inc
retf
outs
inc
push
push
inc
adc
fwait
xor
push
xchg
in
fucom
or
pop
dec
in
inc
fs
lods
cmp
jae
sbb
loope
push
fucom
xchg
fbstp
adc
inc
adc
mov
mov
shr
sbb
inc
jecxz
xchg
xchg
sar
sbb
add
fstp
shl
or
es
pop
xchg
test
xchg
push
xor
or
loop
mov
shl
adc
push
adc
sti
dec
int
mov
daa
repnz
test
mov
fisttp
mov
nop
mov
push
add
iret
add
xchg
sub
cmps
add
adc
aam
scas
out
cld
and
test
xor
dec
fadd
cmp
popf
push
adc
iret
inc
cmps
pop
mov
jo
inc
cdq
(bad)
pop
in
loop
repnz
(bad)
xor
push
test
jecxz
inc
sub
sbb
mov
cli
push
push
jnp
fld
dec
jmp
gs
inc
jmp
pushf
pop
ss
xchg
cmp
xchg
(bad)
and
jae
mov
or
out
jmp
in
ret
push
aas
push
mov
call
cmp
xchg
dec
adc
jne
push
(bad)
inc
(bad)
sahf
lods
and
test
xchg
mov
dec
pop
sbb
lea
(bad)
pop
mov
idiv
pop
xor
loope
mov
repnz
addr16
loope
xor
fneni(8087
add
and
mov
xor
(bad)
and
in
mov
mov
(bad)
fwait
xchg
sti
xor
cmp
inc
or
push
fisttp
cmp
mov
outs
push
inc
fst
pop
(bad)
ins
mov
xchg
push
pushw
dec
mov
jmp
call
xor
aas
and
mov
in
fsub
mov
mov
mov
mov
xchg
(bad)
or
xchg
sbb
xchg
or
ins
stos
dec
mov
aaa
mov
aam
push
cli
xchg
dec
call
cmp
pusha
add
and
ss
mov
adc
stos
ficomp
pop
add
stos
int3
fadd
imul
pop
dec
xor
sbb
sbb
out
xchg
adc
in
cdq
dec
or
lods
aaa
cmp
xchg
loope
pop
ins
and
xchg
out
pop
cmp
adc
xchg
dec
(bad)
pop
jnp
repnz
and
mov
mov
xor
popf
test
ret
pop
and
sub
inc
cld
rcr
xchg
test
loope
dec
lea
mov
dec
test
sahf
loope
js
xor
ja
not
aaa
cmp
je
jno
out
iret
sbb
in
or
sbb
out
mov
not
adc
inc
bound
mov
dec
mov
mov
adc
out
outs
cmps
mov
dec
and
sub
xor
into
popa
mov
jo
inc
jmp
xor
or
test
cld
ds
retf
int3
or
pop
push
outs
mov
jae
ror
fst
ins
mov
add
adc
pop
out
push
or
mov
icebp
das
sbb
push
lock
sbb
xchg
push
test
dec
sar
in
and
iret
and
push
test
add
dec
popf
xchg
test
cmp
mov
nop
xchg
clc
daa
mov
adc
xchg
imul
loopne
les
sub
mov
cmp
fcomp
imul
or
add
sub
(bad)
mov
loop
cwde
fwait
pop
add
lea
fwait
sub
jo
stc
scas
mov
jno
mov
aad
aam
sub
data16
pop
imul
movs
sub
cs
cmp
fisttp
cwde
cmp
ins
psraw
cmp
je
cmp
push
dec
outs
mov
stos
mov
or
stos
xor
inc
and
bound
fsub
adc
(bad)
cs
into
adc
mov
add
ins
mov
xchg
dec
mov
je
push
pop
push
test
sbb
xchg
mov
and
or
dec
mov
mov
mov
pop
sbb
dec
push
jb
or
cmps
jecxz
mov
cmp
or
movs
jp
ret
(bad)
nop
cmp
mov
popa
out
movs
and
cmp
loopne
pop
xchg
out
leave
adc
div
lock
inc
cmps
ins
icebp
mov
inc
cmp
cmp
shl
test
in
xchg
repz
jecxz
(bad)
dec
xor
das
mov
lods
pop
xor
pushf
xchg
(bad)
mov
out
call
lds
push
xchg
clc
xchg
push
sbb
std
mov
in
mov
sbb
ins
into
or
sbb
std
std
imul
pop
call
xchg
iret
mov
repnz
mov
xchg
rcr
sub
pop
out
(bad)
sub
inc
mov
fstp
sbb
push
(bad)
in
sub
jno
push
int
sbb
inc
hlt
cs
cmp
jmp
push
push
aaa
mov
(bad)
push
test
mov
and
ins
adc
call
jno
mov
xor
nop
mov
dec
jne
repnz
mov
call
and
cmps
xchg
lock
add
sub
cld
lea
daa
or
jp
mov
fsubr
adc
ja
cs
and
jnp
or
adc
push
cli
aaa
test
popa
mov
fwait
and
mov
mov
xor
sbb
xor
ja
mov
(bad)
icebp
or
or
ret
cmp
pop
ins
xchg
fs
sbb
mov
outs
sbb
(bad)
shl
sub
ja
cmp
cld
out
dec
bound
mov
mov
loope
fwait
cmps
arpl
sbb
add
in
out
aaa
bound
pop
addr16
cmps
inc
rcl
lods
xchg
fmul
xor
ficomp
jo
mov
and
cmp
xor
fmul
stos
pop
pop
jae
jne
jbe
repnz
shr
stos
xor
and
mov
int
int
pop
mov
cmps
push
(bad)
std
clc
jae
mov
push
leave
mov
jg
mov
inc
loop
into
call
fldcw
mov
lahf
adc
jl
ret
bound
fs
retf
xchg
xchg
test
pop
sbb
aam
je
mov
sub
ds
out
fldcw
iret
sub
fist
lods
test
ds
and
nop
sub
cmp
jo
mov
mov
dec
cmp
pop
mov
arpl
jns
or
add
rcl
out
dec
lods
test
shr
pusha
ret
jne
sar
cmps
sahf
mov
scas
cmps
stos
neg
cdq
adc
inc
jecxz
inc
sbb
mov
sti
or
jmp
xchg
pop
sar
mov
dec
int
outs
sub
push
sub
std
rcr
enter
in
mov
push
fs
ret
jecxz
jns
test
fcomp
gs
mov
mov
sbb
test
pop
enter
push
fcomp
dec
std
aas
(bad)
and
push
outs
dec
sbb
fs
pop
(bad)
cmps
les
movs
fadd
fbld
test
test
movs
mov
ficomp
mov
adc
in
sbb
out
sub
mov
adc
movs
push
xchg
xor
in
ins
pop
call
(bad)
mov
aas
add
in
dec
fstp
popa
shl
retf
mov
fisub
inc
and
sbb
mov
out
es
cwde
add
(bad)
add
add
stc
sub
aad
xchg
cmp
adc
dec
jge
pop
inc
jbe
jnp
stc
imul
and
sub
mov
(bad)
int
shl
cmp
enter
xor
je
xchg
daa
shr
in
pop
inc
pop
outs
jae
ins
or
popaw
sti
repnz
lahf
pop
mov
sbb
bound
jae
mov
pop
sub
fwait
aad
mov
inc
dec
cmps
dec
jmp
lds
sub
fwait
sbb
call
mov
sahf
call
lods
cmp
ins
dec
movs
mov
mov
dec
pop
cli
adc
push
(bad)
mov
aas
lahf
imul
or
adc
jnp
int
push
push
cmp
lods
cmp
dec
(bad)
in
mov
adc
clc
fadd
movs
(bad)
xchg
sbb
adc
jl
mov
(bad)
jae
and
in
add
mov
cmp
xchg
push
sbb
mov
xchg
pop
ja
push
cli
(bad)
sub
das
add
xchg
test
enter
pop
call
int
aas
jp
xor
xchg
cmps
neg
cli
add
dec
mov
aas
cmc
retf
arpl
and
lock
mov
xor
inc
xchg
or
sahf
jge
cmps
pushf
popa
cld
rep
fmul
enter
shr
jmp
inc
push
mov
rol
xchg
or
mov
jo
xor
mov
movs
sbb
xchg
cdq
lock
sub
xlat
fbld
std
sti
lock
sar
mov
mov
mov
cmp
or
shr
jno
adc
repz
or
xchg
(bad)
bound
push
cld
test
outs
mov
into
xchg
loopne
cdq
fwait
mov
jnp
inc
fs
popf
mov
out
pop
iret
push
fsub
push
inc
dec
jns
push
mov
and
addr16
sub
mov
cwde
hlt
push
dec
sub
cmps
push
aam
push
(bad)
fst
xchg
imul
loopne
scas
adc
daa
stc
jnp
sbb
cmps
hlt
test
aas
pop
pop
aas
xchg
call
sbb
jge
clc
mov
push
mov
hlt
in
leave
jl
call
imul
push
mov
jp
fs
in
pushf
not
sbb
gs
or
jle
cmp
mov
je
mov
push
pop
fwait
xchg
and
mov
movs
adc
push
mov
std
mov
push
adc
adc
idiv
dec
cmp
add
fnsave
std
loope
inc
in
repnz
lds
mov
jmp
(bad)
xchg
addr16
out
mov
(bad)
mov
fs
repnz
cmp
mov
rcl
or
scas
xchg
xchg
mov
push
push
ret
xchg
ret
lock
xchg
pop
lock
popa
lds
rcr
xchg
jnp
aas
mov
call
in
dec
jbe
jnp
out
mov
cmp
mov
xor
repz
xor
mov
pushf
adc
iret
sub
xchg
xor
xor
mov
xor
dec
mov
leave
mov
in
sbb
inc
fnstcw
and
and
xor
or
ins
int3
jmp
xor
add
mov
push
call
iret
inc
idiv
xchg
or
jns
mov
aaa
sbb
push
dec
(bad)
jo
pop
rcl
and
add
hlt
mov
cmp
mov
sbb
and
push
addr16
ror
sub
dec
ja
mov
mov
ret
sub
loop
in
ss
retf
push
mov
adc
out
loopne
adc
pop
mov
jp
stos
lock
not
cmp
hlt
in
(bad)
push
cmps
push
iret
and
xor
fcmovnbe
dec
scas
lock
das
sub
gs
(bad)
es
sbb
xor
pop
or
ja
add
dec
adc
jbe
pop
mov
lods
xchg
daa
mov
ret
xor
loope
stc
jl
or
in
xor
sub
aas
or
ja
push
shl
fmul
les
leave
out
movs
cmps
pop
lods
cdq
jge
lods
in
cli
fwait
imul
adc
mov
lahf
mov
adc
push
jl
lods
cld
test
adc
cmp
inc
fstp
xor
mov
pop
and
repnz
xchg
inc
adc
jge
mov
jne
jmp
fsub
(bad)
xchg
pusha
sub
xor
or
retf
pop
jo
xchg
adc
fs
jb
aad
sar
and
pop
jmp
ins
mov
adc
sub
das
add
mov
daa
cmp
lock
adc
rcl
scas
gs
jae
mov
push
add
inc
xor
sbb
aaa
pushf
sub
leave
xlat
xlat
ret
xchg
shl
in
pusha
(bad)
loop
mov
push
aad
or
lds
jecxz
js
ins
int
out
xor
shr
fiadd
cdq
dec
xchg
mov
push
cs
cmp
(bad)
stos
gs
push
sbb
stos
cwde
mov
push
pop
test
mov
bound
cmc
nop
ror
ss
push
fsubr
push
and
xor
es
enter
adc
rol
imul
lea
xor
movs
sbb
sbb
inc
les
repz
or
lods
(bad)
jno
mov
aad
inc
pop
and
xchg
add
and
stos
retf
cmp
fdiv
sti
lock
inc
pause
je
jmp
(bad)
out
adc
inc
mov
repnz
(bad)
inc
adc
dec
ret
jmp
pushf
jmp
fnstsw
sbb
and
or
push
dec
loopne
xchg
dec
add
jge
xor
popf
stos
adc
scas
xchg
adc
jmp
cmp
hlt
adc
cmp
sub
movs
imul
cmps
adc
mov
push
dec
pushf
in
out
stc
jle
mov
stc
ins
mov
ficomp
push
xchg
repnz
push
lods
mov
fldenv
mov
sbb
lahf
inc
jne
inc
xor
jo
jge
adc
lds
or
(bad)
sbb
repz
sub
scas
sub
cs
in
pop
mov
mov
jns
inc
mov
mov
sub
sub
ins
or
out
push
clc
pushw
push
push
pop
mov
add
ds
out
out
shl
retf
retf
cld
xchg
movs
sbb
adc
aad
and
mov
test
jne
loope
sub
pop
stc
test
scas
sbb
mov
sbb
or
shl
or
xor
jns
retf
test
cmp
mov
dec
jne
ds
jno
xchg
push
dec
mov
cdq
leave
leave
dec
out
add
fldcw
mov
bnd
mov
call
daa
fld
sahf
not
cmp
iret
fcom
dec
and
xchg
movs
mov
inc
mov
and
jg
hlt
sub
call
jns
movs
fstp
adc
pop
scas
es
adc
xchg
mov
mov
xchg
arpl
das
test
mov
cwde
cmp
out
pop
or
mov
rol
daa
and
sub
lahf
fwait
jp
jo
pushf
lahf
das
in
dec
xor
pop
cdq
pop
and
pop
cli
(bad)
retf
jne
fild
shl
(bad)
and
fwait
inc
test
xchg
mov
xor
in
push
aaa
je
and
ds
pop
jge
arpl
jmp
mov
aas
jnp
sbb
mov
cld
mov
push
xchg
inc
cmovae
cmp
push
sub
xor
int3
out
lea
loopne
fs
enter
out
cwde
addr16
jmp
mov
xchg
mov
mov
lds
dec
mov
pop
ja
adc
aas
pop
sub
jbe
xor
inc
je
xor
daa
mov
movs
retf
adc
fisubr
dec
jb
adc
ins
sub
xor
mov
popf
enter
ds
xchg
sbb
leave
stos
and
push
sub
push
sub
ss
mov
lahf
cmps
push
xchg
sbb
inc
push
xchg
or
pop
mov
adc
or
mov
inc
push
bswap
pop
xor
mov
popf
in
div
jmp
inc
and
retf
ror
jbe
fdiv
adc
fisub
jne
int
scas
fisub
clc
xchg
call
or
xchg
lea
in
and
fldenv
pop
inc
(bad)
fist
and
cmp
sub
movs
test
and
sub
xchg
mul
iret
cld
ret
mov
int3
es
adc
pop
adc
and
cmp
or
mov
jl
xlat
pop
(bad)
fisubr
add
(bad)
sbb
bound
imul
ret
or
xchg
in
mov
push
dec
xor
dec
mov
into
pushf
lods
adc
das
pusha
adc
push
in
test
call
cmp
inc
fidiv
mov
xchg
sahf
dec
retf
leave
mov
adc
mov
mov
lea
aam
sub
pop
mov
icebp
es
cmp
pop
mov
and
dec
pop
aas
cld
jbe
popf
lock
dec
ins
cmp
pop
xchg
mov
mov
sbb
mov
xor
and
call
pop
lahf
in
mov
push
(bad)
adc
push
dec
pop
(bad)
ficomp
dec
jne
sub
enter
inc
dec
dec
mov
aas
and
movs
ret
push
xor
xchg
pop
jmp
push
mov
js
cmp
add
into
lods
popf
xchg
aam
add
nop
mov
shl
mov
dec
shr
push
dec
jg
xor
dec
pop
lahf
xchg
dec
push
xlat
xchg
(bad)
sub
mov
fild
lea
cld
aad
int3
mov
bound
cmp
mov
pushf
jo
sbb
lock
dec
or
out
out
in
push
jge
ins
loopne
sub
mov
push
add
push
mov
mov
(bad)
pop
cs
sbb
pusha
cmp
popa
jg
mov
add
adc
test
add
sub
aas
stos
cmp
cmc
jmp
sbb
stos
sub
mov
imul
inc
mov
cwde
loop
adc
out
cmp
mov
mov
out
mov
out
cmps
adc
(bad)
dec
rol
cmp
mov
sub
jmp
mov
test
fisub
gs
add
retf
cmps
mov
popa
cmc
pop
push
sub
call
adc
jecxz
(bad)
imul
and
enter
add
retf
adc
xor
jno
lock
cmp
out
popa
stos
jmp
ins
sbb
xchg
sar
add
adc
ins
jmp
je
dec
clc
inc
dec
daa
xchg
or
push
fmulp
inc
push
sub
mov
test
xchg
out
(bad)
popa
pop
icebp
out
mov
test
repz
mov
leave
out
call
mov
cmps
cwde
and
mov
push
je
xchg
cmp
cdq
retf
jbe
rol
xchg
or
push
xchg
bnd
sar
xchg
inc
mov
int3
xor
push
and
enter
xchg
popa
cmp
stos
xor
test
arpl
adc
jo
and
dec
movs
jno
and
or
(bad)
fdiv
mov
xchg
cli
aas
lds
jp
mov
mov
sub
xlat
inc
adc
addr16
stos
stos
aas
sbb
add
sbb
xor
sub
pop
cld
stos
test
mov
sub
adc
mov
jo
dec
in
call
or
sbb
je
bound
repnz
hlt
loopne
repnz
cs
ins
mov
push
rcr
push
dec
imul
test
cmp
mov
xchg
adc
lahf
cmp
mov
mov
push
dec
arpl
jmp
outs
stos
xchg
fidiv
call
out
popf
adc
icebp
inc
shl
add
xchg
jge
mov
movs
dec
das
add
sub
jae
into
push
mov
ins
mov
ja
sub
frstor
out
cmp
icebp
xor
hlt
mov
jbe
cmp
push
call
mov
scas
and
xor
ins
cli
cld
mov
mov
xchg
dec
mov
test
or
inc
mov
out
inc
and
mov
xchg
pushf
cwde
jnp
xchg
rcl
pop
loopne
and
xchg
dec
stos
xor
pop
xlat
ret
je
sar
neg
in
stc
loopne
adc
enter
and
mov
lds
fimul
inc
scas
lahf
sar
inc
je
clc
movs
stos
cmc
test
mov
inc
out
sbb
sub
jge
jp
pop
pop
sbb
mov
ror
jg
jb
mov
icebp
rcl
loope
movs
(bad)
push
and
xor
inc
mov
jmp
sar
or
ins
loop
ret
test
fadd
mov
repnz
jb
ror
icebp
lahf
sub
xchg
fidivr
leave
push
xlat
jns
shr
xor
mov
in
jg
push
dec
mov
mov
cmp
jnp
sbb
inc
test
cli
jns
xchg
adc
and
popa
mov
pop
and
and
cdq
or
xor
inc
sbb
fs
mov
inc
and
popfw
loop
ret
lock
mov
adc
inc
inc
and
jle
jg
sub
popa
dec
inc
or
mov
push
push
icebp
xchg
(bad)
mov
test
loop
lods
jno
hlt
push
sbb
mov
bound
(bad)
cmp
rep
xor
cli
test
icebp
ds
mov
jb
push
test
xor
in
fadd
or
fstp
sbb
das
cmp
cmp
pop
sbb
dec
ja
dec
push
fcmovne
cmp
lea
add
mul
add
aaa
push
pop
ret
stc
xchg
ss
imul
xor
mov
(bad)
out
push
sbb
ins
xchg
and
movs
sub
jl
xor
pushf
popf
jo
push
add
test
push
mov
xchg
or
pop
test
pusha
jmp
mov
mov
mov
dec
xor
inc
mov
xchg
sbb
ss
mov
mov
shl
lahf
std
ins
movs
sahf
xlat
movs
mov
les
mov
jg
add
push
mov
and
cmp
das
dec
pop
xchg
fild
mov
xor
int3
sub
xor
lods
out
stos
jne
fdiv
aad
xchg
daa
push
cld
(bad)
cmps
iret
fnstenv
pop
inc
xor
jmp
mov
(bad)
in
add
test
xchg
ins
popa
repnz
addr16
sbb
dec
and
or
out
leave
push
in
adc
hlt
sub
ret
daa
jae
mov
in
lds
std
or
adc
sbb
(bad)
push
pop
adc
rol
or
add
add
mov
pop
xchg
jno
jp
mov
fcom
shl
enter
jle
addr16
jno
mov
pushf
xchg
sar
push
mov
jmp
lods
enter
ss
sbb
rol
jb
xchg
jmp
dec
mov
inc
cwde
lahf
and
ret
imul
cld
mov
mov
mov
adc
pusha
sub
jmp
mov
shl
pop
mov
sub
ret
js
(bad)
(bad)
pop
hlt
sahf
outs
stos
fidiv
add
or
out
fnstsw
dec
and
popa
push
push
fcom
aam
push
pop
jmp
sbb
pop
je
das
cwde
das
rsm
push
and
xchg
int
cmp
retf
dec
inc
ja
fs
cld
pop
icebp
sub
iret
hlt
cmps
ret
nop
pop
fnsave
xor
sbb
bound
or
mov
jnp
nop
retf
repnz
cmp
mov
lock
push
popa
push
jns
add
mov
in
daa
fnstcw
mov
jnp
xor
pop
mov
pop
adc
cdq
out
cmp
adc
aas
jo
pop
cmp
adc
mov
or
mov
shl
dec
jmp
pop
sub
mov
into
cmps
shl
rcr
mov
and
xor
jge
cmp
push
push
rcr
and
sub
adc
(bad)
cdq
cli
loopne
cmps
jge
jo
sahf
xor
iret
arpl
xchg
push
nop
in
cmp
mov
push
enter
ffreep
ret
scas
jmp
sub
pop
ret
lds
imul
shr
push
mov
jmp
mov
xchg
mov
cmp
frstpm(287
es
fmul
popf
movs
lock
icebp
mov
hlt
cmp
fcom
and
inc
les
mov
je
es
rcr
pop
or
ror
(bad)
add
mov
sbb
mov
mov
mov
popa
aas
stos
ins
aad
cmps
shl
jne
push
lods
fwait
movs
pop
scas
scas
cli
fisttp
in
sub
push
lea
test
and
push
mov
xor
push
stc
sbb
jmp
out
jmp
push
ss
cmp
cs
jle
mov
mov
cmp
xchg
std
jge
lahf
into
clc
add
add
inc
push
leave
daa
jmp
jl
sub
retf
imul
cmp
stos
jmp
cdq
mov
mov
pop
pushf
pop
mov
out
jl
mul
aaa
outs
movs
(bad)
fcom
mov
cli
add
xchg
inc
jge
into
xor
xor
sbb
jne
pop
adc
enter
lea
es
lods
xlat
call
adc
js
repz
ins
cli
cmp
inc
jb
retf
push
xlat
mov
add
cmps
cmp
cmp
cmp
dec
bound
xchg
fdivr
adc
pop
mov
mov
jno
(bad)
xchg
in
jae
call
xchg
in
out
dec
int
lock
loop
mov
scas
je
out
mov
neg
call
addr16
retf
and
out
cmp
push
frstor
cmp
cmps
xor
sub
sbb
cmp
sbb
cmp
adc
lock
ds
or
std
xor
mov
mov
and
movs
loop
dec
xor
scas
pop
daa
xor
sbb
pop
add
pushf
jae
pop
inc
xchg
rcr
adc
sbb
cs
cmp
cmps
or
sub
mov
retf
jmp
xchg
lods
fnsave
aad
dec
pusha
daa
xchg
ret
mov
(bad)
imul
mov
sub
pop
push
mov
stos
movs
aas
sti
test
js
cli
ins
adc
add
mov
lock
out
xor
sbb
add
xor
jmp
cmp
adc
scas
lea
aam
pop
icebp
into
pop
jmp
pop
mov
repnz
(bad)
cmp
dec
xor
adc
loopne
retf
ss
pushaw
sahf
dec
pop
mov
jle
aaa
push
xor
dec
pusha
sbb
push
test
push
mov
out
adc
add
mov
scas
call
cmp
add
mov
lahf
mov
cld
xchg
ins
out
add
stos
dec
adc
enter
adc
xor
push
mul
retf
mov
clc
jp
aad
sub
xlat
xchg
and
(bad)
fnstcw
outs
cmp
xchg
inc
stos
(bad)
out
lock
dec
sub
fld
jae
adc
mov
jg
and
xchg
and
out
add
add
adc
adc
fcom
mov
dec
inc
mov
push
sub
ins
mov
das
pop
sti
xchg
out
out
gs
xchg
mov
ds
and
adc
and
shl
and
(bad)
in
das
int
or
xor
or
outs
mov
mov
adc
xor
xchg
test
or
mov
fs
sbb
fld
xchg
test
mov
mov
xchg
fisub
js
jbe
lods
cli
cmp
sar
cmp
cmp
xor
fidivr
sbb
movs
mov
cli
mov
pushf
ss
fidiv
pop
mov
outs
mov
cmp
sbb
movs
mov
xor
sub
popa
repnz
jmp
lods
outs
shl
sub
sti
add
ja
call
pop
cmp
aad
push
or
ret
pop
lahf
in
jecxz
inc
dec
cs
mov
daa
add
push
mov
cli
sti
adc
inc
pop
sub
aas
cmc
inc
stos
inc
enter
push
cmp
sbb
mov
jne
into
ins
add
jno
sbb
adc
ss
jmp
das
adc
sbb
cmp
rcl
test
xchg
inc
outs
std
cld
cmp
imul
iret
pop
xor
lds
sti
aas
pushf
or
lods
ffreep
test
in
jmp
add
mov
jnp
jno
mov
scas
jmp
sub
popf
push
mov
scas
(bad)
jmp
pop
inc
imul
jo
sub
adc
lds
fldz
fld
cdq
lods
lahf
fdivr
outs
movs
push
sahf
lahf
stos
popa
div
dec
push
into
cmps
ror
xchg
ret
mov
sub
(bad)
popf
ja
ins
inc
cmp
das
out
test
mov
jo
mov
mov
fsubr
ins
dec
and
adc
pop
inc
mov
add
adc
stc
mov
or
add
and
icebp
ins
ins
cmc
sti
sbb
out
(bad)
retf
das
sub
int
cmc
jns
cmp
out
movs
mov
test
inc
jbe
ss
mov
inc
and
(bad)
mov
test
xor
add
jl
test
jmp
pop
jl
xchg
aad
push
sub
push
cmp
jg
adc
sahf
cmp
push
xor
xchg
in
retf
fucomi
push
sbb
mov
and
inc
add
ss
rcl
or
xchg
push
loopne
mov
xchg
dec
xchg
cmp
push
inc
inc
rol
push
jno
sub
mov
sbb
movs
mov
push
xchg
ds
test
mov
cmp
or
xchg
jle
test
punpckhdq
xchg
adc
pop
loope
or
pop
bound
adc
int
mov
vmwrite
mul
push
pop
xchg
inc
jae
and
(bad)
jmp
push
fcomp
in
xor
mov
push
inc
fst
iret
movs
inc
cmp
fisttp
gs
mov
push
out
and
cdq
repnz
data16
cwde
adc
jnp
fs
mov
or
sbb
and
xor
cmovb
lods
push
outs
inc
outs
jl
sti
out
scas
fcmovnb
jne
push
adc
test
jp
jns
mov
rcr
out
sub
jmp
adc
xor
jbe
jbe
xor
sub
xor
into
mov
scas
in
sbb
mov
test
xchg
push
jg
add
mov
sbb
xchg
adc
pop
and
fisubr
xchg
mov
pop
adc
enter
adc
xor
mov
sub
fwait
add
adc
rcr
and
(bad)
int3
mov
inc
push
mov
(bad)
sub
cdq
in
push
and
out
inc
(bad)
dec
mov
xor
mov
arpl
and
dec
xchg
cli
inc
rol
arpl
arpl
repnz
jmp
popf
sti
lods
mov
stos
out
jl
lods
mov
wbinvd
jno
mov
cmp
pop
je
adc
and
push
xchg
mov
or
jmp
aas
inc
in
jl
push
neg
stos
jnp
mov
rcl
add
jecxz
mov
sahf
mov
ficom
mov
cdq
jmp
(bad)
test
lods
icebp
dec
mov
or
add
cmp
push
xchg
jbe
mov
sub
fimul
mov
adc
in
sub
push
fisubr
push
mov
ins
cli
imul
adc
jmp
int
dec
mov
mov
inc
dec
or
cmp
mov
xchg
ret
lods
push
cmp
ret
sub
jno
jmp
or
fsub
xor
or
add
pushf
or
in
sahf
pop
repnz
jnp
in
(bad)
clc
add
mov
icebp
adc
repnz
dec
div
xor
mov
push
push
sar
push
neg
out
and
cmps
mov
adc
push
call
bound
pop
clc
dec
mov
mov
add
out
popa
jns
bound
fs
ret
jae
jb
mov
cld
jp
mov
mov
nop
dec
jnp
stos
lock
mov
jmp
jae
mov
cmp
add
push
repnz
push
(bad)
enter
cmp
(bad)
add
repz
loopne
or
mov
and
mov
je
(bad)
jae
add
fwait
das
and
xor
out
inc
in
add
xchg
scas
outs
cmp
mov
jecxz
pop
sbb
pop
and
inc
psubusw
jl
les
push
inc
and
mov
ins
retf
jg
mov
and
and
cmp
xchg
xor
pop
xor
or
dec
xchg
cmps
inc
dec
shl
stos
adc
sub
adc
xor
in
inc
pusha
pusha
fdiv
push
xor
out
pop
or
test
enter
lock
retf
xchg
fist
mov
cmp
test
stos
dec
xchg
dec
inc
lods
jmp
xchg
inc
adc
ret
jnp
sbb
cmps
and
mov
jp
xor
fild
sbb
fistp
js
daa
hlt
jmp
jmp
int3
fld
push
fs
fdivr
xor
xor
in
cmc
fs
cmps
add
mov
mov
popf
xor
je
hlt
cld
xor
mov
mov
sub
retf
xor
cwde
inc
cmp
data16
xor
mov
inc
lea
(bad)
sbb
cdq
inc
daa
aaa
sub
mov
outs
sbb
dec
arpl
sbb
arpl
dec
ins
jecxz
(bad)
and
add
add
stos
xor
(bad)
pop
pop
call
sbb
add
and
adc
jp
cmp
dec
jne
jb
lea
push
gs
out
cmp
ror
xchg
add
dec
pop
and
(bad)
or
mov
inc
xor
stos
cmps
sbb
int3
or
scas
inc
push
mov
push
pop
or
gs
mov
jl
outs
nop
cwde
mov
mov
pop
popa
scas
or
pmuludq
sub
repnz
push
icebp
pop
js
in
icebp
mov
inc
add
inc
test
cli
aam
cs
test
pop
pop
cmp
(bad)
sar
rcl
cld
jnp
xchg
in
ss
je
xchg
cmp
xor
call
outs
xor
outs
push
push
(bad)
pop
mov
icebp
adc
addr16
sbb
js
pop
ror
std
jl
sbb
sbb
retf
scas
sahf
mov
jae
jle
or
fist
jl
jmp
or
xchg
popf
mov
cmp
sbb
push
xor
fs
cmps
pop
jp
pslld
retf
xor
std
dec
pop
cmp
retf
pusha
popa
dec
xor
mov
fwait
pusha
sbb
mov
cmp
or
test
jne
or
mov
outs
push
adc
or
jae
push
or
xor
mov
pop
fxch
inc
scas
outs
sbb
and
loope
in
jmp
pop
adc
push
test
inc
mov
and
jnp
inc
pop
jg
and
out
jno
fisttp
push
mov
push
fsubr
cmp
(bad)
mov
pop
or
out
ss
push
aas
pop
xchg
adc
out
stc
cmp
dec
push
add
sbb
inc
popa
dec
sahf
push
ret
inc
mov
and
idiv
enter
(bad)
dec
xchg
or
jl
pop
std
(bad)
movs
pushf
cmp
and
mov
icebp
test
pop
mov
jmp
lds
sub
sub
das
loop
popf
loopne
test
rol
and
jne
in
jecxz
aaa
movs
sbb
sar
daa
push
repnz
ds
aaa
jae
adc
ins
pop
jae
bound
sbb
jae
or
jb
push
cli
push
cmps
jne
nop
inc
fldenv
fisttp
jo
pop
sti
arpl
mov
sbb
pop
add
and
cli
mov
xor
xor
xor
sbb
aaa
xor
sub
xchg
jl
mov
or
jge
ret
mov
cli
in
int3
jnp
jmp
rol
nop
cmc
xchg
pop
(bad)
cmp
push
push
in
mov
xchg
cmp
inc
ret
je
dec
retf
hlt
push
fs
jg
mov
outs
mov
mov
pop
mov
or
push
jp
clc
cdq
xor
sar
test
xor
stc
icebp
clc
outs
popf
and
jo
test
dec
mov
pushf
shr
cdq
test
cmp
pop
cmp
sahf
imul
jo
jne
int
mul
sub
inc
xor
adc
jb
push
pop
sti
and
mov
xchg
es
and
out
jle
ins
jns
je
mov
cwde
cmp
cmps
adc
loope
push
iret
imul
xchg
mov
mov
push
dec
cld
mov
xor
lea
std
aaa
mov
cmp
daa
inc
lahf
mov
cmc
xchg
inc
icebp
popa
jno
mov
dec
jl
mov
and
push
xchg
sub
ja
scas
jo
imul
jns
mov
scas
test
shl
sbb
(bad)
or
sub
out
movs
loop
(bad)
jg
fild
shr
call
cmp
push
popf
repz
xor
aad
sub
fbstp
add
xchg
mov
jp
pusha
in
jbe
inc
imul
hlt
mov
aad
push
fucom
(bad)
dec
fs
mov
xor
movs
add
xor
popa
pop
push
js
mov
jmp
inc
inc
shl
jecxz
cmp
dec
arpl
gs
sbb
cmp
push
push
ror
sbb
jo
ret
mov
or
push
popf
lds
mov
repnz
(bad)
cmps
cmp
jbe
stos
out
mov
dec
leave
retf
xchg
xlat
dec
loop
sbb
out
sti
div
jge
stc
add
jb
outs
ja
imul
aam
cmps
outs
jp
sbb
movups
lds
cmp
loopne
out
push
sbb
sub
xor
fstp
adc
ins
out
sbb
sub
fadd
adc
mov
or
push
loope
cmp
int3
push
(bad)
pop
popa
loope
nop
and
mov
es
mov
out
scas
push
xor
pop
lock
inc
cmp
mov
(bad)
cli
cwde
into
arpl
fcom
hlt
inc
popf
push
(bad)
adc
mov
mov
arpl
sbb
popa
mov
(bad)
fneni(8087
adc
and
shl
xchg
jne
repz
xlat
unpckhpd
hlt
jne
jbe
outs
push
mov
nop
lods
mov
shr
cmc
call
popf
add
xor
adc
test
xor
cwde
jmp
(bad)
mov
xchg
fcomp
ins
mov
xlat
inc
adc
lea
push
(bad)
cmp
clc
aas
popa
and
(bad)
xlat
mov
mov
mov
sub
gs
push
jle
pop
add
mov
sub
scas
inc
or
pop
shl
fist
jg
jp
pop
pop
rol
and
or
add
jmp
leave
hlt
jmp
not
ds
xchg
cmp
adc
in
push
(bad)
or
inc
jo
sub
jle
mov
outs
xchg
popf
rcl
dec
addr16
lahf
xor
adc
imul
add
shl
xlat
out
jb
adc
das
scas
aaa
dec
cmps
xor
push
sub
cmp
pop
fdiv
push
clc
ja
mov
xchg
add
pop
mov
pop
es
(bad)
iret
ss
push
mov
rcr
inc
dec
pushf
dec
or
dec
frstor
jecxz
outs
xor
jp
clc
inc
mov
or
das
cwde
fdivr
mov
adc
jo
sub
loop
or
lock
xchg
xchg
push
sahf
fidiv
retf
jne
lods
sub
jno
aad
jns
jp
jecxz
loopne
jb
xchg
imul
sub
push
lods
adc
or
jecxz
cmps
loope
xor
pop
push
jmp
(bad)
sub
mov
cmp
push
xchg
lds
int3
dec
sahf
and
or
xchg
ds
sub
sbb
xchg
push
pop
push
dec
gs
clc
shr
enter
js
test
xchg
jl
ins
and
ds
mov
aad
sti
jecxz
lock
or
movs
fdivr
test
scas
mov
rcl
mov
retf
(bad)
or
mov
and
je
ins
and
or
addr16
and
std
push
mov
imul
arpl
xchg
mov
mov
mov
ins
mov
ficomp
pop
in
jae
ret
pusha
xchg
repnz
enter
mov
jg
ins
mul
xor
repz
sbb
mov
xchg
jo
bound
pop
mov
fldenv
not
arpl
or
sbb
test
clc
ficomp
mov
mov
mov
push
pop
int
out
aaa
mov
push
cs
sub
pop
stos
jecxz
cmc
sti
rcl
or
mov
js
mov
mov
cs
xor
dec
cdq
jnp
adc
push
mov
xchg
push
call
xor
shl
das
fstp
push
pop
dec
push
sub
fucomi
jp
daa
jns
inc
mov
mov
(bad)
push
and
addr16
and
pop
(bad)
xchg
mov
push
enter
cli
xchg
xor
add
xchg
jg
outs
add
lock
repnz
add
fwait
and
(bad)
sahf
cmps
mov
ret
sbb
(bad)
jns
jp
in
jno
stos
sti
push
adc
cmp
outs
sbb
push
lahf
cwde
mov
fisub
add
adc
mov
sub
out
repnz
ds
jle
sub
pushf
jg
sbb
cld
dec
jmp
adc
cmp
mov
mov
sbb
pop
in
mov
pop
mov
scas
inc
hlt
mov
pop
sbb
bound
jmp
call
enter
push
mov
loopne
rol
xchg
aas
iret
out
ficomp
cmp
cmp
inc
js
xchg
aam
in
fwait
(bad)
push
pop
push
jo
and
das
dec
mov
add
xor
jp
lds
jge
xchg
dec
in
ret
dec
fsubr
outs
hlt
in
push
xlat
adc
adc
neg
inc
sar
rcr
fimul
js
mov
mov
daa
imul
test
pop
ins
jbe
fwait
call
xchg
xchg
and
nop
icebp
clc
adc
pop
pop
add
pop
lock
fsub
inc
mov
lahf
daa
sub
add
cmps
jle
repz
popf
call
add
push
fistp
mov
jp
sbb
mov
mov
add
ja
in
int
inc
scas
pop
and
pop
pop
adc
daa
ret
add
jnp
inc
dec
push
mov
dec
fbstp
(bad)
mov
(bad)
into
pop
jne
pop
inc
sbb
adc
test
xchg
and
(bad)
mov
jo
jo
stos
adc
add
enter
aad
mov
sub
mov
fwait
cld
pop
in
leave
and
jns
cs
adc
push
sbb
fidiv
lock
adc
arpl
inc
fucomp
push
push
xchg
test
popf
jecxz
cdq
inc
push
mov
jecxz
out
loop
(bad)
cmp
jo
xchg
lods
pop
dec
stos
data16
sub
mov
das
(bad)
dec
ins
test
adc
adc
enter
in
icebp
std
pop
outs
pop
lods
into
cld
outs
cmp
jl
jp
ror
sahf
and
push
cmp
xchg
stc
jo
daa
push
pop
and
aas
enter
dec
add
data16
arpl
iret
ss
into
sub
mov
in
mov
inc
outs
mov
cmp
retf
mov
push
sub
cmp
inc
and
ret
movs
stos
shr
or
(bad)
fcom
mov
inc
and
jns
je
clc
jne
and
mov
ret
lods
es
sub
stos
adc
mov
les
mov
daa
pushf
sub
cld
out
es
int3
sti
ja
mov
jge
int
call
sbb
mov
mov
rcr
arpl
jb
clc
xor
fistp
loop
inc
pop
nop
sub
xor
jb
push
stos
mov
(bad)
(bad)
xlat
jp
(bad)
mov
or
test
push
in
dec
js
mov
sbb
pop
pop
mov
in
xchg
pushf
repnz
push
sar
dec
ja
sbb
mov
pop
mov
loope
mov
pop
out
stos
xchg
cmc
cmp
mov
ficom
xor
pusha
mov
add
adc
in
xchg
add
ins
sub
jg
mov
in
or
pop
push
pop
push
lods
and
adc
xor
push
sub
or
jmp
sbb
shr
xchg
adc
add
push
sbb
cmp
pop
not
xlat
retf
cmp
in
icebp
fsubr
icebp
out
cwde
pushf
retf
nop
js
jg
jae
out
add
(bad)
rol
inc
into
lds
adc
in
mov
mov
dec
adc
into
in
stos
jne
icebp
sbb
out
push
fwait
push
rcl
repnz
mov
inc
in
mov
in
fisttp
test
sbb
rol
mov
shr
jb
mov
mov
jp
cld
bound
lahf
popa
mov
shl
jne
aas
jmp
js
or
cmps
and
push
dec
jmp
dec
xchg
jb
ds
aad
fsubr
sbb
cmc
push
or
or
in
mov
(bad)
repnz
neg
ins
imul
outs
repz
test
sbb
jb
lea
lock
sub
cmp
push
push
sub
push
fcomp
fistp
cmps
fstp
cmp
arpl
into
frstor
sbb
popa
imul
in
sar
xchg
mov
dec
mov
(bad)
js
pop
mov
mov
and
icebp
pop
cwde
sub
ss
pop
stos
mov
mov
cmp
dec
inc
scas
push
or
fwait
xor
test
or
shl
stos
xor
not
jae
enter
add
xor
inc
cdq
(bad)
cmp
stc
pop
outs
je
pop
icebp
pop
retf
and
sub
scas
sbb
mov
scas
shr
cwde
out
imul
loope
jne
sbb
cmc
xor
jle
and
aaa
push
xchg
lds
call
cdq
xchg
loope
mov
scas
xchg
xor
daa
stc
pop
xor
shr
out
xor
pop
pop
imul
and
jmp
test
mov
mov
sbb
gs
in
fld
ins
out
or
fdecstp
jl
das
(bad)
sub
jl
mov
shl
je
mov
xor
sub
cmps
adc
cmp
dec
jnp
scas
sub
pop
retf
mov
ret
mov
gs
add
fadd
adc
jb
jo
cli
push
rcl
test
sbb
cmp
rol
bound
jmp
mov
or
sub
arpl
test
enter
jnp
xor
inc
mov
push
aam
or
bound
icebp
inc
inc
out
xchg
and
push
mov
xchg
dec
pop
mov
fnsave
add
add
mov
iret
sti
pop
idiv
lods
sbb
les
jbe
mov
xor
jecxz
bound
ins
dec
arpl
loope
arpl
adc
in
mov
push
mov
mov
and
das
mov
xchg
lods
xchg
mov
stos
pop
dec
ret
into
mov
test
xchg
fs
iret
sub
and
sbb
add
lahf
or
shr
push
fstp
ins
mov
outs
shl
popf
sub
test
cwde
adc
inc
mov
fcomi
out
aad
jae
push
inc
call
push
xor
dec
dec
or
iret
sub
mov
pop
sub
rol
push
arpl
push
adc
sti
sub
adc
in
sub
cmp
scas
mov
shl
cmps
sub
leave
fwait
mov
cwde
adc
mov
cmp
or
retf
push
out
daa
cmp
push
imul
mov
push
cmp
push
cmps
test
js
push
loop
mov
add
sbb
and
pop
mov
repz
mov
push
mov
or
(bad)
lods
ror
xchg
add
(bad)
(bad)
test
adc
retf
mov
mov
mov
hlt
movs
mov
shl
retf
fldcw
popf
and
mov
int3
push
sbb
gs
add
dec
or
jnp
cdq
pop
mov
sbb
cmps
dec
mov
dec
push
js
and
xor
mov
imul
movs
mov
shr
enter
dec
cld
fbstp
loope
aas
retf
and
push
(bad)
nop
xchg
pusha
imul
pushf
fadd
jb
ins
sbb
mov
or
in
inc
out
inc
xchg
pop
hlt
rol
je
mul
int3
mov
mov
mov
clc
pop
push
or
push
pop
xchg
push
jo
push
sub
push
aad
or
inc
mov
pop
dec
mov
ret
fnsetpm(287
pop
(bad)
fadd
popa
aam
iret
xor
scas
lock
cld
fcmovu
call
sbb
cmp
iret
loope
mov
bound
adc
ds
int3
daa
dec
fcomp
pop
push
sub
test
fldcw
stc
dec
movs
push
in
jl
jb
xchg
add
dec
mov
or
loope
outs
retf
lods
iret
pop
jp
loope
mov
push
pop
shr
clc
daa
xchg
inc
int
mov
ins
cmp
ret
mov
ret
movlps
call
pop
jmp
les
mov
rcr
not
pusha
fs
push
lock
loope
mov
mov
rol
mov
sub
and
out
mov
test
ror
mov
sbb
sbb
xor
lahf
das
jo
push
or
test
leave
cmc
mov
es
ins
xchg
push
pop
sub
in
add
imul
pusha
mov
mov
sub
add
push
add
fstp
mov
and
xor
and
test
push
push
jmp
mov
repnz
cld
or
in
repz
fidiv
and
push
jb
pop
jo
sbb
or
or
lock
rol
sub
loope
mov
xor
fiadd
test
dec
cmp
mov
push
dec
stos
fist
jns
add
scas
movs
jns
icebp
call
push
mov
stc
inc
jmp
dec
movs
stos
push
and
rol
call
data16
sti
sub
es
adc
test
jb
push
sbb
icebp
dec
or
sbb
mov
dec
push
push
adc
cmp
in
adc
pusha
outs
dec
pop
mov
retf
mov
sti
pop
pop
in
popf
inc
xchg
addr16
xchg
loop
je
sbb
xor
mov
inc
xchg
push
jle
sub
jb
sub
in
sti
pop
mov
jl
jo
dec
scas
repnz
enter
rol
enter
xlat
hlt
push
or
(bad)
or
inc
das
shl
call
fnsave
xchg
imul
pop
mov
mov
cli
retf
fisubr
in
mov
in
div
clc
cmp
jmp
popa
test
mov
mov
nop
add
xchg
xchg
jae
push
imul
std
rol
mov
adc
jno
jbe
out
imul
jns
inc
push
xlat
sub
sbb
jnp
into
cmp
stos
mov
push
or
stos
icebp
dec
inc
sub
lock
xchg
cmp
sub
arpl
mov
shl
xchg
std
inc
pop
xchg
fisub
outs
retf
fcom
adc
push
jge
push
dec
jge
mov
or
ffreep
jo
shr
dec
add
jmp
adc
or
xchg
std
xlat
xchg
arpl
mov
push
scas
mov
dec
jp
xor
xor
push
fcom
out
dec
or
mov
jae
in
js
(bad)
ror
adc
int3
and
cmps
mov
and
push
jl
bound
mov
sub
retf
push
or
and
add
inc
sub
out
cmp
daa
ret
ins
inc
into
popa
ret
xor
mov
shr
cmp
push
add
dec
push
push
fmul
mov
cmp
ja
adc
jg
cmp
nop
stos
aad
xor
or
xchg
add
fst
add
mov
(bad)
sub
sub
das
mov
sub
jnp
jmp
test
jns
and
iret
adc
sub
jl
fimul
jbe
imul
loop
and
out
nop
jp
cdq
lock
adc
mov
sbb
xor
retf
jnp
(bad)
retf
push
retf
aad
outs
cvttps2pi
ins
movs
leave
inc
sar
dec
fdivr
dec
je
cs
inc
fwait
mov
ja
push
leave
rcr
imul
in
and
lds
movs
icebp
not
inc
or
je
sub
movs
popa
int
xchg
inc
xor
jnp
pop
data16
outs
mov
mov
xor
or
xchg
xchg
pop
scas
mov
cmp
rcl
xchg
(bad)
adc
pop
adc
scas
lods
xlat
test
(bad)
and
adc
shr
xor
pop
movs
ret
stos
ins
push
fxam
pop
ret
mov
adc
fisttp
(bad)
or
(bad)
in
xchg
inc
in
dec
(bad)
(bad)
cmp
push
jge
jb
cmp
jno
adc
mov
pusha
dec
outs
push
or
cmp
mov
rol
mov
fsubr
mov
loope
fs
jecxz
cmp
inc
test
sti
stos
xor
std
stos
enter
icebp
gs
fisubr
ret
inc
mov
(bad)
in
test
lods
movs
sbb
jmp
ins
mov
push
xchg
mov
xor
(bad)
mov
lea
push
inc
sbb
mov
neg
push
mov
fstp
mov
dec
xchg
cmp
ror
out
leave
mov
and
adc
mul
push
fcom
je
xor
ret
jge
int
mov
in
xor
pop
cmps
loopne
call
inc
(bad)
mov
aas
sub
xchg
jecxz
popa
(bad)
inc
sub
mov
(bad)
jbe
mov
cld
dec
retf
dec
xchg
inc
jae
mov
nop
in
shl
lds
lods
adc
ror
cwde
cmp
add
(bad)
(bad)
cwde
shl
push
jbe
xchg
push
mov
fadd
push
div
jnp
jge
xchg
or
dec
aas
adc
push
in
dec
add
out
outs
jo
add
sub
sbb
dec
into
dec
cs
sbb
pop
shr
push
and
les
mov
adc
repz
jp
neg
bound
jle
mov
bound
or
daa
ds
cmp
jo
sub
mov
mov
jmp
sti
repnz
fwait
dec
les
cmp
stc
dec
imul
ficom
jns
frstor
jle
dec
or
inc
bound
(bad)
retf
jnp
cdq
xchg
xor
xchg
dec
mov
mov
push
ins
push
mov
jnp
fldl2e
push
sti
dec
sub
add
inc
or
mov
xchg
adc
jb
loop
imul
sbb
xchg
dec
ins
pop
(bad)
call
fsub
or
pop
ins
cdq
xor
and
pop
add
fwait
mov
popa
xchg
xchg
fstp
push
inc
pop
or
and
push
movs
jl
stos
sbb
xchg
xor
pop
sub
test
call
out
ins
addr16
sbb
rcr
sub
push
jl
loopne
cmp
jno
jb
outs
out
shl
aam
sub
mov
test
sub
sub
sub
sahf
in
test
xrelease
add
mov
repnz
xor
xor
cmp
xor
and
and
jp
mov
scas
(bad)
div
sbb
push
sub
dec
or
int3
jecxz
es
fimul
push
pop
or
inc
in
or
jle
adc
mov
nop
cdq
int
retf
mov
adc
daa
jb
jmp
sbb
mul
cmp
adc
jp
lods
mov
mov
cmp
lock
lds
mov
cmp
pop
lods
push
pop
mov
push
inc
das
cmps
cli
mov
cs
push
cwde
jbe
sbb
out
mov
jb
jmp
xor
icebp
xor
push
shr
inc
aad
mov
out
pop
aad
test
sub
sub
xor
mov
shr
pop
cli
ins
imul
fisubr
rol
int
mov
and
mov
les
push
out
push
sbb
mov
test
(bad)
retf
(bad)
scas
jmp
push
sub
jne
ds
jmp
mov
scas
fstp
call
pop
jle
shr
sub
test
aam
hlt
and
push
push
or
mov
xchg
mov
loope
inc
jp
call
adc
xchg
or
jae
test
es
imul
cli
or
dec
jle
movs
test
push
xlat
dec
adc
call
ss
test
mov
rcl
test
jg
fs
out
sbb
sbb
jg
mov
out
movs
jbe
mov
ret
rol
mov
add
retf
fstp
pop
pop
mov
je
lds
mov
movs
ds
stos
bound
retf
and
xchg
movs
cmp
or
fdiv
mov
fstp
xchg
in
push
mov
shl
sub
movs
mov
sbb
pop
fisttp
out
push
add
push
inc
dec
popf
test
lods
pop
push
sar
iret
ficomp
and
mov
cmp
iret
jnp
lock
dec
popf
sbb
aad
adc
pop
dec
cdq
adc
jmp
mov
adc
inc
ficom
adc
clc
or
jnp
dec
ret
enter
div
or
mov
test
pop
adc
xor
adc
xchg
sahf
xchg
icebp
imul
cmp
jmp
xor
out
pop
mov
out
les
dec
adc
sbb
pop
inc
ds
clc
loope
mov
and
stc
js
or
mov
dec
fsub
dec
inc
push
out
in
xchg
mov
test
or
mov
das
jo
or
jp
out
or
sub
(bad)
cmc
jnp
lods
ja
mov
xchg
retf
pusha
pushf
ror
sub
jmp
test
jnp
dec
daa
sbb
ret
mov
push
cmp
(bad)
fisubr
push
push
aas
mov
mov
shl
adc
ins
xor
or
mov
xor
imul
cmp
xor
cmc
ds
inc
iret
ror
dec
repnz
out
xor
adc
jno
in
cld
jl
inc
mov
cld
jnp
mov
imul
call
arpl
(bad)
cmp
and
sub
mov
dec
adc
es
(bad)
popa
pop
shl
push
or
pop
push
or
jle
mov
add
mov
rol
jle
popf
ins
xchg
mov
push
push
xchg
sti
icebp
push
add
outs
push
dec
pop
push
xlat
in
cmp
out
outs
sbb
loopne
cld
cmp
sar
xor
icebp
xor
mov
xor
hlt
adc
lds
inc
repnz
xor
mov
rcl
clc
dec
mul
push
leave
pop
mov
jmp
mov
cwde
dec
mov
pop
xchg
dec
retf
inc
push
dec
scas
push
fstp
sbb
jae
pop
xchg
or
scas
(bad)
fsub
and
jmp
inc
sbb
nop
es
cli
movs
xor
fimul
shl
imul
pop
rcl
dec
xchg
and
imul
ror
cld
dec
and
inc
test
xor
lods
ds
or
inc
xchg
in
push
lock
xchg
cs
jmp
adc
cmp
in
and
mov
mov
xchg
inc
icebp
xchg
mov
rol
xor
mov
aaa
adc
mov
push
add
or
popf
or
inc
repnz
pop
mov
and
jb
rep
loopne
mov
daa
xchg
test
aad
bound
das
mov
repz
fcmovnbe
lea
in
stos
mov
popf
fcomp
sub
add
xchg
pop
or
std
and
inc
outs
fbld
xchg
and
xor
stc
sub
xor
call
mov
jno
jb
mov
cmp
ja
jno
cmp
cwde
(bad)
fcom
fs
cmp
ret
add
jge
out
mov
or
jg
mov
pop
idiv
push
inc
pop
pop
gs
adc
dec
adc
es
sahf
ret
imul
adc
cdq
and
in
push
or
sbb
ins
sbb
inc
scas
push
jmp
mov
ins
push
pop
inc
outs
test
jecxz
sub
movs
xchg
cmp
fild
fcom
lds
mov
inc
mov
stos
mov
mov
std
add
pop
xchg
xchg
arpl
movs
xchg
dec
or
push
enter
call
jmp
test
fcmovb
mov
scas
mov
add
ret
push
(bad)
(bad)
fbstp
jmp
inc
pop
cmp
pusha
jmp
arpl
test
call
test
adc
jo
imul
xor
jle
xor
adc
mov
sbb
mov
loopne
test
imul
aas
addr16
sbb
cli
jb
jbe
data16
movs
repnz
ins
xchg
jnp
les
jo
lea
mov
shl
cmp
in
xchg
fsubr
leave
data16
fwait
push
lds
repz
fmul
xchg
add
jbe
fwait
add
ja
xchg
sub
fcom
in
xor
push
adc
fs
mov
lahf
fwait
jae
in
jecxz
or
add
lods
pushf
in
sbb
sti
xchg
xlat
mov
xor
inc
sub
mov
out
dec
mov
push
cli
xor
adc
retf
jo
adc
test
daa
adc
out
out
loop
stos
push
aad
mov
fnstenv
push
inc
retf
add
aas
cld
ror
add
aaa
stos
enter
call
mov
popa
lahf
ss
lods
lock
sub
sub
jge
daa
push
cmp
popa
push
lock
ret
push
and
ror
in
ins
in
jmp
cmp
mov
lods
jne
adc
rol
movs
adc
xor
(bad)
or
das
outs
imul
sub
mov
cmp
xchg
pushf
xchg
mov
aas
and
push
clc
int
sbb
dec
inc
loopne
and
mov
or
lea
push
cmps
lahf
inc
mov
inc
loopne
mov
js
inc
call
mov
push
jge
and
push
push
add
repnz
cmps
sub
push
in
inc
in
mov
xchg
clc
imul
or
fidivr
add
xor
ficomp
sub
xchg
xchg
cli
hlt
cmps
ins
add
test
in
stos
mov
cmp
leave
(bad)
xor
cmp
and
pop
sub
test
xor
inc
xor
(bad)
repz
scas
pop
sub
lds
xlat
fwait
add
push
lods
hlt
icebp
push
jno
xchg
scas
or
fldcw
adc
aad
repz
inc
mov
add
aad
xchg
retf
pop
(bad)
(bad)
rep
mov
adc
mov
ror
push
push
inc
cmp
fidiv
scas
push
jge
add
mov
ret
in
sti
push
jae
xor
pop
or
fsub
xchg
mov
js
jnp
lahf
dec
push
lods
ret
jle
aad
pop
xchg
out
inc
xchg
shl
fcmovbe
test
xchg
les
sbb
fld
ror
pop
stc
pop
mov
jb
cmp
jl
scas
xchg
ja
push
inc
sub
xor
rcr
mov
pop
sbb
fxam
push
jmp
call
sbb
(bad)
out
jle
adc
out
int
cmps
icebp
or
pop
adc
xchg
das
ins
mov
push
pop
push
jno
retf
mov
cmp
mov
jb
push
cmp
fiadd
push
adc
mov
xchg
test
cmp
jg
sub
or
je
adc
ds
sbb
mov
push
loopne
adc
xchg
repz
or
mov
sub
mov
xchg
test
in
sub
push
outs
scas
nop
retf
ins
sub
clc
movs
rcl
mov
pop
mov
jne
mov
cmp
push
int
cmp
shr
jb
mov
shr
out
imul
mov
pop
xchg
pop
add
or
jb
sbb
cmp
imul
imul
ins
in
mov
js
in
adc
and
mov
sar
fiadd
mov
es
std
ja
rol
fisubr
jecxz
sbb
xchg
add
sub
mov
lods
in
popf
pop
enter
enter
sbb
out
loope
or
cmp
xor
dec
push
add
mov
and
sub
stos
and
retf
mov
test
xchg
or
and
inc
jne
fwait
and
repnz
pop
lds
out
push
cmp
xlat
adc
rcl
mov
mov
and
ret
or
mov
jmp
adc
leave
jb
xor
data16
and
loopne
dec
sub
es
mov
xchg
add
stos
ins
xchg
xchg
pushf
leave
js
rcr
inc
and
push
popf
mov
fs
mov
dec
push
ins
pop
push
test
pop
xor
lock
into
(bad)
fiadd
pushf
cmps
cmp
add
ret
std
sbb
movs
shr
cmp
xchg
push
movs
ss
fsubr
lea
push
lahf
neg
mov
dec
pop
xor
dec
pop
sub
mov
sub
popa
mov
ins
leave
mov
in
out
inc
xor
mov
lea
sbb
call
imul
cmp
sub
scas
jno
loop
and
out
adc
dec
push
mov
sbb
or
jmp
ins
movs
adc
sbb
sbb
stc
sub
pop
and
mov
ret
das
ins
ret
pop
or
lahf
out
sub
pop
mov
adc
fmul
mov
or
arpl
adc
fidiv
adc
rcl
push
xor
loope
int
xchg
sahf
mov
aaa
dec
push
xchg
test
mov
rcr
and
dec
ror
pop
push
cmp
out
mov
cld
mov
cwde
icebp
mov
jl
and
or
adc
sub
loopne
stos
or
push
retf
jecxz
dec
push
pusha
fcomp
jp
es
loope
dec
cmp
sbb
pop
mov
jmp
cmp
outs
sub
sub
fstp
call
aam
repnz
sar
and
jns
sub
sbb
add
retf
jns
mov
pop
sar
(bad)
fnstsw
in
jmp
pop
xchg
(bad)
scas
sub
mov
loope
(bad)
(bad)
xchg
adc
ret
sbb
mov
ds
out
xchg
add
(bad)
xchg
popa
jns
pop
pop
cmc
pop
jl
mov
xor
and
sbb
loop
ins
adc
out
clc
push
jge
out
jns
inc
cmp
movs
jmp
xchg
push
(bad)
mov
xchg
jnp
fsubr
mul
sub
push
pop
sahf
inc
mov
(bad)
data16
push
or
mov
adc
sub
xchg
shl
push
cs
adc
pop
pop
cmp
dec
fimul
jno
movs
ds
cmc
fdivrp
psllq
and
imul
jl
push
push
das
test
or
add
cli
popa
pop
repnz
clc
pop
pop
pop
mov
push
daa
jmp
test
jecxz
cmps
in
arpl
pop
xor
arpl
ins
and
rcl
out
clc
sbb
mov
pop
xlat
or
(bad)
sahf
push
ss
push
dec
xchg
fidiv
push
das
clc
add
inc
push
add
lahf
scas
lock
jb
rcr
lods
es
cmp
popf
retf
scas
adc
rcl
xor
jns
rcl
add
xchg
scas
movs
sbb
movs
adc
out
je
xchg
xchg
test
mov
mov
pop
(bad)
in
sub
mov
and
mov
and
loopne
push
lahf
call
es
data16
add
and
daa
cmp
in
jne
std
fwait
mov
lds
mov
call
adc
mov
loopne
clc
in
add
sbb
mov
test
jg
retf
or
jp
sti
repnz
or
and
push
add
sbb
ret
cdq
add
ret
in
jno
movs
pop
in
cmp
sahf
rcr
out
pop
inc
mov
repnz
xchg
fwait
xor
xchg
adc
(bad)
dec
xor
cmp
jle
fs
test
aaa
mov
lds
xchg
jmp
loopne
scas
scas
jbe
sti
mov
push
js
mov
push
jmp
icebp
inc
sub
mov
retf
or
test
ins
das
xchg
sub
mov
sub
int
ins
loope
push
pop
adc
sub
pop
sahf
mov
xchg
mov
sub
neg
adc
jle
mov
cmps
xchg
pop
out
mov
aaa
movs
(bad)
in
repnz
cdq
nop
pop
leave
cmps
inc
push
rcl
jecxz
xchg
add
or
(bad)
int3
jbe
xor
dec
pop
test
mov
jge
shl
and
sbb
(bad)
sub
stos
mov
push
loopne
and
mov
sub
gs
adc
mov
nop
dec
out
mov
leave
daa
cmps
inc
mov
pop
stos
cwde
ret
dec
aam
clc
sub
dec
xchg
add
daa
pop
pop
adc
jge
mov
scas
inc
mov
(bad)
leave
movs
fisub
pop
sub
mov
retf
push
xor
add
inc
fcmovu
rcr
icebp
inc
mov
or
jae
sub
sar
jno
repz
int3
aam
mov
xor
out
imul
push
xor
add
sti
out
cwde
push
mov
dec
inc
jbe
inc
or
jmp
fmul
arpl
cli
add
out
jmp
adc
movs
and
gs
cmps
add
ficomp
inc
ret
in
pop
cdq
xchg
mov
xchg
sbb
loopne
cmps
aaa
or
cmp
and
test
xor
test
ja
push
inc
or
pop
shr
mov
xor
xchg
add
dec
dec
call
pop
pop
mov
fcom
xchg
mov
les
loope
ret
and
(bad)
rol
mov
leave
and
mov
adc
les
imul
fmul
shl
mov
xchg
sbb
aam
(bad)
es
dec
jae
movs
adc
mov
xchg
in
jmp
sub
arpl
jmp
dec
cwde
xchg
dec
adc
pop
mov
imul
lock
mov
out
inc
cmps
outs
iret
sti
movs
frstor
das
push
fbstp
mov
sti
jl
mov
dec
lahf
enter
call
in
shl
adc
push
push
pop
pop
ds
xor
popf
add
jecxz
inc
push
mov
cdq
ret
or
outs
sub
aad
or
mov
icebp
out
xchg
mov
in
fs
mov
dec
push
pop
mov
add
or
sbb
pop
loopne
stc
sahf
dec
movs
push
or
adc
xchg
loopne
mov
adc
dec
xor
lahf
push
pop
jmp
mov
jge
aas
in
xchg
sbb
xchg
pop
mov
pop
and
jmp
lods
cmp
pusha
jle
fs
pop
jp
ret
mov
mov
cmp
mov
pop
nop
lods
and
xchg
pop
push
jmp
push
test
mov
fs
out
stos
mov
sub
jecxz
inc
push
jmp
mov
test
mov
ins
mov
mov
jp
popf
fist
sbb
loop
xor
stos
inc
aad
xor
test
push
cmp
mov
dec
rcl
scas
fst
lahf
loop
push
lahf
adc
les
bound
inc
popa
push
jle
add
ret
fsubp
in
jmp
pop
in
push
int
fsub
shl
push
in
fs
push
xchg
into
xor
loopne
and
xchg
icebp
push
lahf
pop
or
inc
push
lods
(bad)
push
inc
sbb
in
add
xor
dec
sahf
jns
ja
pop
mov
adc
nop
(bad)
push
les
sub
mov
and
imul
in
or
push
push
in
dec
push
cmps
addr16
js
cdq
lods
pop
call
xlat
or
add
adc
scas
or
mov
hlt
jne
adc
or
lods
pop
aas
jge
lahf
mov
jns
dec
(bad)
outs
shr
mov
daa
jbe
movhlps
sub
popf
jae
push
scas
pop
cmps
xchg
retf
retf
push
mov
push
fisttp
dec
pop
push
je
sar
pop
inc
mov
and
call
gs
dec
xchg
dec
push
push
repnz
cmp
popf
mov
pusha
neg
push
cmp
jno
pop
xchg
rcl
sbb
jbe
push
cmp
push
mov
sbb
in
xor
das
inc
loopne
jbe
(bad)
fst
or
ins
cmp
int3
cs
mov
fistp
and
and
or
push
data16
cld
or
push
stc
pop
fs
jbe
mov
les
imul
std
dec
fs
fidivr
sub
cs
paddsw
aaa
adc
jg
pop
jp
es
jo
pusha
mov
jno
mov
in
mov
jo
je
cli
pop
cmps
std
push
aaa
inc
retf
xchg
call
push
lods
repz
inc
div
test
leave
aaa
cmp
mov
jmp
addr16
ret
add
jp
inc
add
lock
mov
adc
popa
jge
adc
sub
and
int3
mov
int3
test
push
mov
sahf
mov
lds
mov
xchg
sbb
pop
imul
mov
stos
popf
sub
fs
ret
fst
fsub
or
call
add
mov
mov
inc
int
jp
div
mov
adc
ror
mov
aad
stos
rcl
inc
or
dec
jb
pusha
sbb
outs
imul
movs
sbb
mov
xor
mov
cli
cld
mov
adc
sbb
xlat
xchg
mov
ret
loope
mov
add
loopne
mov
popf
sbb
repnz
bound
xor
and
loope
mov
out
and
xor
in
adc
rcr
out
cdq
mov
ins
mov
jae
or
or
fidivr
cwde
cdq
hlt
lods
sub
lea
adc
cmp
push
test
adc
sbb
sahf
cwde
adc
jmp
fld
das
jmp
aaa
cmp
lock
popa
dec
xor
retf
loopne
popf
mov
fisttp
xchg
shr
dec
fwait
pop
scas
jle
sti
pop
xor
pop
rcr
loope
mov
loopne
aad
inc
bound
shl
out
push
push
bound
pop
xor
push
mov
dec
mov
cdq
mov
shl
das
fcom
sbb
cli
in
sub
jecxz
cs
mov
icebp
lods
mov
not
rol
and
jge
sub
ret
movs
mov
aam
icebp
movs
jae
adc
pop
adc
push
jmp
int3
mov
xor
adc
sbb
ficom
dec
push
xor
sub
sti
or
jo
mov
add
pop
sub
jge
iret
hlt
sti
pop
sbb
mov
and
outs
aad
pop
hlt
cmp
out
cmps
jb
imul
scas
les
loopne
call
ret
cmp
cmps
inc
fwait
lods
in
dec
fild
in
fnstsw
jb
mov
cmp
cmp
mov
dec
lea
bound
adc
sbb
jb
sar
push
jns
mov
push
or
xchg
movs
(bad)
jo
pusha
shr
stc
repz
fdivr
pop
fsubr
mov
bound
test
add
and
shr
test
shl
fbstp
jnp
(bad)
stc
cmp
fild
cld
int
mov
jnp
ins
inc
call
xchg
sbb
rol
rol
mov
outs
shr
mov
movs
cdq
and
mov
adc
inc
pusha
and
adc
sub
mov
inc
push
pop
(bad)
mov
sbb
std
hlt
push
adc
aas
out
arpl
fldenv
dec
gs
xor
rcr
mov
pop
fcomp
pop
pop
mov
out
lock
dec
fidivr
fadd
xor
repnz
fwait
retf
push
(bad)
mov
jmp
sbb
mov
pop
mov
sub
xor
(bad)
fisubr
pop
nop
add
mov
pop
or
fstp
mov
cmc
mov
lea
cmps
push
pop
cmp
mov
int
sbb
or
cmps
movs
push
push
and
vpaddsw
outs
nop
dec
xchg
int3
pusha
inc
pop
and
test
adc
xor
and
pop
cmps
loopne
jecxz
jle
lock
jge
cmp
mov
pop
pop
cmps
shr
mov
xchg
sti
adc
int3
std
push
repz
pop
and
in
mov
push
repnz
xchg
add
xor
loopne
jmp
rcr
push
cmc
sub
fisttp
inc
ret
xchg
nop
push
pop
adc
daa
jmp
pop
push
push
cmps
sbb
lods
or
xor
rol
mov
sbb
sahf
scas
add
push
and
cmp
imul
pop
(bad)
rol
add
pop
int
rol
jg
dec
inc
aas
iret
cmps
xor
fadd
int
ret
adc
mov
(bad)
loope
rcr
jae
adc
(bad)
jp
(bad)
imul
cmp
push
adc
jge
mov
xchg
retf
sbb
aad
xchg
mov
sbb
mov
jno
sub
inc
push
fild
fdivr
inc
cld
aas
inc
pop
ds
cs
lods
push
dec
(bad)
sar
pop
stc
and
mov
jae
mov
and
mov
xchg
push
push
(bad)
sbb
aad
inc
loopne
adc
aad
popa
pop
jmp
and
add
rcr
ret
popf
pextrw
push
cmp
inc
mov
stc
js
out
push
(bad)
push
xchg
lds
jne
push
sbb
icebp
inc
adc
loope
mov
sbb
mov
ja
dec
push
mov
inc
pop
retf
test
cmp
mov
or
inc
dec
jb
rcl
cmp
inc
div
shl
loope
mov
xor
(bad)
mov
cld
outs
inc
sub
gs
lock
mov
in
fsubr
or
jo
mov
icebp
dec
jno
rol
dec
gs
or
xor
add
jp
out
cmp
xchg
into
mov
add
or
dec
out
(bad)
xchg
mov
add
cmc
xchg
ja
inc
adc
test
inc
add
jmp
loopne
mov
lahf
sbb
sbb
daa
jb
cmp
add
inc
fdiv
add
ss
mov
jo
mov
cmp
lods
cmp
stc
push
rol
and
aam
ins
ret
adc
dec
fistp
add
daa
pop
mov
sbb
(bad)
pop
scas
mov
xor
sub
and
call
imul
mov
aas
repz
mov
ins
inc
add
dec
leave
jo
cmc
mov
add
sbb
das
sbb
or
sbb
shl
retf
mov
arpl
addr16
mov
test
jns
cdq
pop
or
mov
add
and
inc
rol
or
int3
add
sub
ds
push
dec
inc
scas
mov
pop
ss
add
xor
xchg
sti
inc
dec
adc
cdq
cmp
pop
mov
push
adc
jecxz
mov
push
(bad)
mov
and
ret
pop
ins
mov
cli
jmp
add
mov
test
imul
mov
push
movs
jmp
pop
inc
jmp
xchg
xor
(bad)
cld
imul
add
pop
outs
sbb
test
push
sbb
dec
push
std
dec
sbb
in
(bad)
adc
out
imul
push
push
div
out
gs
out
or
fst
ds
push
rcr
test
mov
jnp
jle
sahf
adc
mov
adc
xchg
sub
xchg
mov
sub
(bad)
lea
push
jecxz
fadd
ret
cmp
push
scas
lods
mov
jne
out
stos
add
xor
ret
les
push
test
jmp
push
inc
mov
imul
and
mov
adc
jb
add
inc
sub
dec
fsubp
mov
or
out
sbb
call
cmp
mov
mov
jnp
add
imul
into
std
xchg
data16
jo
push
cdq
mov
cmps
mov
fst
pop
test
loope
push
mov
out
jno
repnz
mov
mov
jnp
and
out
ror
mov
stos
mov
dec
push
fsubr
sti
push
mov
not
mov
add
sbb
inc
xchg
mov
push
mov
dec
out
hlt
pushf
mov
inc
or
mov
push
push
pop
cwde
sbb
retf
inc
test
iret
push
aas
idiv
dec
add
xlat
or
(bad)
pop
xchg
jo
arpl
xor
in
out
pop
ins
loope
mov
push
push
data16
fmul
xor
inc
inc
jmp
push
enter
jle
(bad)
(bad)
push
push
adc
xor
ret
add
(bad)
mov
dec
adc
pop
mov
xchg
repz
outs
sub
aam
fsub
jb
frstor
stos
es
mov
test
cmp
or
aaa
fstp
add
dec
inc
sti
fisubr
mov
popa
jb
repz
(bad)
icebp
ds
xor
aaa
retf
retf
lock
pop
fisub
xor
jl
ins
mov
lods
or
mov
cmp
sub
mov
leave
stos
and
cmp
pop
pop
(bad)
int
ror
in
jno
push
jl
scas
(bad)
imul
cmp
aas
sahf
push
gs
js
je
xchg
sub
movs
add
push
movs
jle
jno
push
or
jp
push
movs
iret
loope
cmp
data16
mov
int
and
test
jp
push
imul
xchg
pushf
sub
inc
stos
pop
cmps
inc
dec
jecxz
sar
xchg
loop
call
add
leave
das
cmp
fldenv
pop
cli
fnsave
data16
mov
xchg
mov
xor
pusha
lock
cmp
shl
adc
cwde
rol
retf
in
inc
cmp
inc
out
ffree
mov
add
and
lods
inc
outs
mov
pop
mov
xchg
cmp
movs
add
sub
mov
test
sbb
leave
or
repnz
scas
scas
xchg
leave
jg
lods
pop
loope
bnd
xchg
cmp
sbb
sbb
push
sar
fstp
sti
and
dec
xchg
enter
cmp
cld
pop
sub
xchg
dec
mov
sbb
pop
adc
or
arpl
pop
mov
mov
cmp
jae
pop
xchg
or
fs
les
mov
bound
jnp
or
ss
std
dec
daa
fisub
ficom
pushf
(bad)
cmp
xor
outs
mov
jp
xchg
cmps
stos
mov
lods
in
inc
into
sbb
or
mov
(bad)
out
mov
in
sbb
push
pop
xlat
sub
jp
mov
bound
and
and
sbb
adc
rcl
rcr
mov
xchg
mul
iret
mov
(bad)
adc
xor
cmp
and
aam
hlt
xlat
js
add
and
lods
stc
push
imul
repz
pop
repz
xor
or
or
or
dec
cmp
jmp
sub
or
and
pop
inc
mov
movs
scas
in
and
imul
push
mov
ror
and
ins
push
jl
call
push
sbb
xchg
inc
mov
(bad)
dec
jle
cmp
lahf
ss
sub
jle
(bad)
popa
fdivr
add
inc
or
cmp
and
mov
test
test
out
sub
sti
mov
outs
aam
retf
or
call
xor
loop
or
nop
loop
cmp
add
xchg
aam
out
push
loop
push
xor
jae
mov
out
mov
fcom
adc
or
std
scas
(bad)
push
xor
pop
sti
add
xchg
in
iret
in
out
popf
scas
push
inc
mov
into
or
imul
ss
repnz
fild
popa
jge
fwait
ins
scas
cmps
arpl
(bad)
retf
fs
xchg
cmp
popf
or
adc
lea
loopne
adc
das
ret
inc
les
data16
gs
addr16
imul
loope
adc
dec
sti
gs
adc
sub
(bad)
sub
stos
ret
lods
imul
adc
sbb
sbb
inc
sahf
jg
pop
fdivr
les
adc
aam
add
jle
mov
mov
das
pop
mov
ret
cmp
jb
pop
aam
loopne
ss
daa
call
js
(bad)
xor
into
sub
pop
cmp
out
in
xor
movs
sub
leave
pushf
nop
je
scas
add
jo
je
sahf
and
hlt
cmp
xor
sub
pop
xchg
xor
out
add
int3
cmps
jae
cmp
push
add
into
movs
cdq
test
lods
ja
sbb
pop
xchg
xlat
adc
(bad)
jmp
sahf
data16
cmp
movs
mov
xor
mov
frstor
cmps
mov
loopne
jl
pop
nop
cmp
inc
xor
int3
xchg
cmp
add
jae
stos
push
xor
mov
pop
fs
aad
mov
cdq
and
jmp
adc
ins
pusha
popf
inc
mov
xchg
and
inc
lahf
sub
adc
in
mov
leave
aas
and
stos
cmp
mov
(bad)
mov
retf
add
test
and
dec
adc
ret
and
scas
leave
jp
sbb
loop
cdq
pop
jmp
jmp
push
sbb
stos
ret
cmps
mov
in
add
mov
push
div
inc
push
cmp
pop
sbb
dec
lahf
adc
(bad)
sahf
aaa
push
js
call
sti
cdq
mov
cmp
cmp
jmp
sub
outs
and
xchg
mov
sub
sti
fisttp
test
ins
inc
add
dec
outs
mov
cs
cmp
mov
out
pop
call
inc
sbb
cmp
shl
jmp
xor
dec
pop
xchg
pop
scas
arpl
loope
clc
shl
mov
xchg
dec
dec
dec
and
mov
sub
in
push
rol
vpunpcklwd
dec
xlat
lahf
test
xor
and
fiadd
and
push
mov
aaa
mov
or
dec
sbb
into
out
daa
aas
mov
xor
dec
push
push
pop
cmp
mov
xchg
fidiv
cmp
dec
cli
and
push
aad
xor
adc
mov
cmp
out
mov
(bad)
call
mov
add
xchg
sbb
xchg
loopne
dec
bound
push
scas
popf
(bad)
mov
push
sbb
int3
and
aam
sbb
and
sub
imul
push
adc
sbb
mov
adc
stos
xor
into
sbb
data16
std
retf
xor
mov
pop
test
inc
jmp
jnp
jp
in
sbb
rcl
sub
rol
mov
cld
mov
and
stc
pop
inc
adc
in
retf
rep
jge
out
mov
sub
rcr
cmp
imul
sbb
sub
pop
int
leave
sub
and
xchg
(bad)
aas
out
mov
iret
std
loope
sbb
mov
mov
mov
mov
push
and
(bad)
ja
es
daa
mov
into
xchg
scas
xchg
mov
fwait
sub
xlat
mov
jo
out
je
lods
xchg
dec
and
dec
outs
fwait
outs
fst
es
push
cli
lods
data16
fwait
inc
push
push
(bad)
jmp
add
je
mov
pop
adc
lahf
jmp
mov
jle
ds
push
test
stc
inc
stos
mov
push
aad
dec
push
iret
ret
xchg
pop
mov
call
js
shl
arpl
mov
sahf
adc
pop
dec
jmp
or
or
jl
xor
fild
cmp
sub
xor
retf
test
stos
gs
scas
fdiv
inc
push
dec
cwde
fwait
xchg
fdivr
push
loope
out
iret
rol
es
sti
or
push
xor
ins
mov
or
push
cwde
pop
enter
xor
loopne
(bad)
sbb
jns
mov
movs
cmp
fsubr
jbe
xchg
dec
dec
inc
lods
(bad)
dec
out
idiv
cmp
mov
retf
popa
cmp
pop
out
jae
gs
into
cmp
test
stos
leave
push
mov
xor
sbb
jne
add
dec
jns
xchg
add
mov
int3
pop
out
jmp
cwde
jnp
dec
pop
push
pop
xchg
fwait
cmp
fistp
xchg
out
int3
ror
sub
ss
or
popa
add
inc
xor
mov
stos
mov
push
push
cmp
repnz
xor
cmp
push
inc
add
dec
call
and
rol
add
cmp
cmc
push
jne
retf
out
(bad)
jecxz
inc
or
xlat
outs
sub
mov
jg
(bad)
and
inc
and
cmps
jecxz
outs
(bad)
pushf
inc
test
in
cmp
gs
push
mov
mov
sbb
bound
sub
fiadd
rcl
movs
pop
fdivr
mov
(bad)
out
mov
and
cmps
mov
jecxz
aaa
lea
push
ds
daa
lock
or
(bad)
jns
loope
fnsave
add
nop
mul
push
xchg
scas
lea
cmc
stos
cdq
retf
mov
dec
mov
ret
enter
fwait
mov
or
pop
ins
loope
xor
mov
dec
xchg
jo
sbb
pushf
mov
mov
cli
xchg
mov
mov
pop
out
sbb
into
in
cmp
push
dec
pop
dec
imul
scas
jecxz
repnz
push
xor
or
adc
test
loop
add
jb
jno
in
jnp
fstp
or
inc
test
and
fcomp
fcom
lock
add
xor
xchg
repz
push
xor
mov
dec
adc
gs
movs
mov
outs
pop
not
lahf
ficomp
or
mov
xchg
sbb
movs
jne
xor
xchg
mov
mov
clc
cld
xchg
std
sub
lahf
push
fidivr
adc
cmp
dec
or
pinsrw
cld
imul
inc
or
mov
loope
mov
cmc
mov
in
push
clc
jp
lock
sbb
out
and
out
test
mov
inc
jo
xor
xor
add
push
rcr
pop
test
movs
dec
jae
outs
mov
jmp
jbe
inc
loopne
push
sub
inc
sbb
aad
inc
mov
push
mov
aas
xchg
mov
cmp
push
mov
cmps
xchg
xchg
frstor
jle
pop
and
or
pusha
xchg
adc
jnp
popf
pop
jbe
out
ins
and
push
sbb
push
mov
mov
ins
push
jmp
rcr
mov
sbb
xor
sbb
jno
mov
mov
mov
js
cmc
xor
adc
and
ins
xchg
dec
aas
mov
dec
mov
test
fist
push
sub
mov
sti
repnz
repz
adc
pop
mov
inc
or
addr16
push
jle
xchg
cmc
pop
cmc
cli
out
jge
clc
dec
lods
xchg
rol
mov
ret
mov
fiadd
ss
(bad)
test
jns
sub
(bad)
addr16
inc
retf
sub
inc
mov
sub
enter
push
pop
int3
cmp
xchg
int
mov
cvttps2pi
ret
es
inc
mov
push
push
sub
fistp
dec
cmps
mov
int
xchg
cmps
xchg
cmp
sbb
pop
nop
cld
fld
jae
(bad)
loop
fnsave
mov
js
push
push
push
repnz
lock
out
icebp
add
jns
sub
jnp
jnp
test
xchg
mov
pop
fild
fistp
inc
leave
outs
ins
fiadd
stos
mov
jnp
in
stos
inc
mov
add
test
popa
shr
lds
(bad)
lds
adc
test
inc
mov
and
cmp
pusha
aas
jecxz
push
add
sbb
int3
stos
cmps
stc
lahf
pop
jmp
ss
loopne
pop
pop
je
scas
inc
dec
rcl
iretw
lods
loope
or
shl
inc
dec
scas
xor
(bad)
or
lock
push
and
aaa
enter
rcr
cmp
pop
ins
mov
test
sar
ror
or
adc
in
in
dec
test
dec
cmps
mov
xor
pop
mov
sbb
ret
push
inc
inc
cs
push
push
movs
mov
pop
push
sub
aas
mov
or
jae
dec
out
xlat
pusha
lahf
or
fwait
jge
dec
dec
jnp
jo
jnp
fiadd
dec
fcmovnbe
cmp
cld
push
cli
(bad)
jbe
mov
gs
repnz
popa
adc
xchg
les
and
icebp
(bad)
push
call
mov
push
cmps
les
push
out
sbb
mov
pop
jp
call
jmp
test
cmps
mov
imul
out
scas
lds
push
or
pop
das
rcr
dec
in
fcomp
and
loopne
(bad)
jp
or
jbe
out
std
add
mov
sbb
ror
xor
push
or
jp
inc
push
mov
dec
fmul
or
fs
fstp
rcl
(bad)
aaa
mov
mov
inc
and
xchg
push
out
sbb
and
cwde
jge
imul
test
pusha
mov
int3
jmp
dec
sub
sub
xor
pop
in
push
jb
mov
in
xor
ss
loope
and
cmp
inc
arpl
cmps
jo
jb
mov
add
lahf
mov
shr
inc
fcom
in
retf
sbb
mov
mov
jns
push
cmps
fisttp
lods
scas
dec
enter
push
movs
adc
les
adc
mov
mov
cmp
sub
xor
sub
xor
jp
sub
loop
push
push
ss
add
or
out
loop
push
lea
xor
add
int
sbb
sub
jge
sahf
or
jmp
lds
(bad)
stos
lahf
int3
out
mov
cmp
mov
cmp
mov
aad
fdivp
and
or
or
xchg
add
inc
imul
or
dec
js
pop
xchg
xor
jle
xor
cmp
stos
mov
fs
cmp
data16
mov
mov
jbe
daa
(bad)
out
in
cwde
dec
xchg
(bad)
call
cmp
mov
out
scas
or
mov
pop
test
pop
adc
test
mov
lods
add
loop
sbb
inc
mov
(bad)
mov
mov
hlt
scas
out
aad
jl
call
xchg
cs
and
retf
and
test
cmc
and
or
and
mov
in
popf
adc
aas
push
xchg
inc
and
loope
ss
xor
push
push
mov
ss
and
mov
xor
pop
in
movs
inc
inc
pop
push
mov
inc
aam
or
loope
ror
xchg
mov
lock
enter
or
xchg
lds
or
ins
add
sbb
rcl
adc
stc
sub
xchg
aam
adc
jge
inc
lea
ins
cdq
inc
(bad)
push
call
sbb
sbb
loop
adc
pop
mov
test
fcomp
cdq
inc
lods
xor
cmp
or
add
jle
dec
and
in
test
mov
cmp
push
adc
retf
sbb
loope
std
leave
imul
dec
jns
adc
cld
(bad)
dec
cmp
jns
inc
cmp
or
dec
lods
fxch
loope
adc
or
inc
sbb
bound
dec
mov
push
imul
mov
adc
push
sub
mov
xor
ja
aad
std
call
cmp
js
fist
lahf
(bad)
and
pop
mov
xor
and
or
out
imul
std
popf
repnz
mov
push
int3
dec
outs
outs
in
(bad)
fwait
mov
fistp
mov
adc
scas
cmc
jbe
sub
ins
repz
cld
sbb
sar
in
and
add
(bad)
into
add
cmp
ret
fist
mov
retf
inc
shrd
or
sub
(bad)
popf
mov
inc
jns
lahf
sbb
repnz
leave
fimul
mov
xor
lods
cs
(bad)
shl
in
loop
pop
add
and
std
sub
mov
mov
inc
mov
and
(bad)
xchg
xor
lds
mov
pusha
rcl
int
ins
pop
or
mov
and
cmp
or
add
mov
inc
push
les
and
mov
mov
call
lock
fs
xor
xor
(bad)
and
xchg
test
fs
mov
jbe
outs
movs
sub
sbb
ins
(bad)
lds
push
jecxz
ret
lock
xchg
cli
inc
inc
mov
jnp
inc
push
cli
int
repnz
repz
or
dec
mov
retf
lds
shr
into
cmc
mov
out
push
cmps
stos
cmp
ja
aam
leave
xchg
sbb
sub
push
stos
fucomp
in
jecxz
fcomp
mov
scas
inc
jge
xor
sbb
stos
jmp
adc
js
daa
pop
pop
enter
xor
addr16
sbb
movs
out
sbb
or
lea
retf
stos
xor
popa
iret
scas
mov
test
sar
and
lods
xchg
push
mov
pop
cmc
add
mov
mov
clc
jg
cmp
pop
inc
faddp
cmc
hlt
lea
js
popa
repnz
in
inc
sti
push
gs
adc
push
iret
mov
fwait
ror
pop
imul
ja
ja
shl
sbb
xor
xor
retf
jmp
inc
mov
push
mov
lods
inc
jo
lods
das
mov
mov
leave
loope
ja
fisttp
cs
lahf
sbb
and
dec
jl
sar
jmp
pop
test
nop
fwait
ret
jecxz
nop
sub
and
push
dec
xchg
mov
or
push
mov
sbb
test
sbb
jl
ins
or
cmp
pop
pusha
pop
mov
ficomp
icebp
add
lods
add
sub
ins
xchg
outs
popf
sbb
icebp
cs
mov
jb
int
outs
lods
mov
jno
inc
or
add
push
pop
add
lea
mov
fdivrp
jne
outs
and
lea
shl
or
loopne
rcl
pop
or
pop
push
push
(bad)
mov
xor
in
dec
and
mov
loope
rcl
or
arpl
dec
push
push
retf
lock
adc
or
movs
and
js
or
popf
xlat
fiadd
jae
cmc
lahf
dec
push
inc
xchg
fisubr
jge
(bad)
jle
ret
mov
scas
push
dec
lahf
mov
dec
push
lds
movs
call
push
add
or
daa
cmp
inc
popa
pop
pushf
sbb
xchg
fistp
cmp
loopne
imul
cli
mov
push
sbb
adc
mov
outs
mov
dec
stos
jle
xlat
mov
pop
lea
jecxz
fnstcw
mov
fistp
fabs
dec
sbb
mov
out
push
jo
outs
sub
cmc
xor
jb
imul
mov
adc
jp
sub
and
enter
add
ins
fcmovnu
dec
pop
cmc
xor
xlat
and
(bad)
mov
inc
stos
fcom
imul
mov
test
sbb
jecxz
jmp
sbb
outs
pop
in
pop
lahf
das
xor
pushf
scas
aam
pop
push
scas
(bad)
popf
ja
xlat
scas
jecxz
sbb
pop
int3
je
arpl
out
and
jbe
in
xchg
mov
push
(bad)
xor
cdq
imul
or
cmp
dec
cmp
loope
push
fcom
imul
test
ror
(bad)
or
dec
jl
dec
jns
push
or
and
pop
jle
fdiv
in
inc
and
pusha
push
bound
(bad)
xchg
xor
stos
and
push
mov
lea
add
dec
or
mov
lods
leave
dec
js
sahf
test
inc
jmp
ja
lea
or
or
fcomip
jno
mov
aam
lods
inc
out
cli
shl
xchg
in
inc
lods
sub
test
enter
imul
and
test
cdq
stc
clc
sbb
pop
mov
cmp
or
pmulhw
movs
out
adc
xlat
rcr
dec
addr16
jns
stc
lock
inc
dec
add
jmp
xor
and
gs
push
dec
dec
mov
bnd
std
data16
and
bndldx
shl
or
hlt
cs
sbb
call
pop
push
cmps
test
xchg
adc
inc
cld
xchg
call
out
push
mov
and
stos
pop
cwde
pusha
lock
cmp
popf
loope
ins
push
cmp
xchg
out
retf
popa
movs
or
shl
(bad)
ja
aas
mov
push
and
retf
ins
loopne
cmp
dec
sbb
sub
ret
pop
mov
push
arpl
mov
dec
mov
stos
iret
adc
out
hlt
leave
mov
push
out
iret
adc
jne
stos
outs
push
loope
mov
add
xor
mov
dec
sbb
or
mov
or
addr16
int3
mul
repz
ins
push
adc
push
pusha
mov
mov
cwde
xor
add
sbb
push
sub
std
ja
inc
xchg
call
shl
rcr
pop
(bad)
addr16
sub
jg
fadd
not
pop
pop
retf
lahf
push
push
mov
mov
imul
sub
loope
(bad)
ins
jmp
mov
inc
les
sbb
repnz
imul
test
call
cld
ins
test
add
and
xor
sbb
pop
pop
adc
dec
arpl
std
cmp
cs
in
xchg
xlat
into
sti
add
mov
xor
retf
clc
xchg
mov
sub
push
jle
repnz
retf
retf
mov
in
repnz
mov
es
inc
fsubp
jb
or
inc
gs
push
pop
cmps
fnstenv
inc
add
nop
mov
sti
sub
adc
mov
fisttp
test
sub
les
js
lock
sbb
sub
xchg
xor
dec
jns
stos
(bad)
inc
inc
push
std
inc
pop
out
push
mov
daa
mov
(bad)
in
jmp
pop
dec
ret
sub
hlt
(bad)
fldcw
cdq
mov
int3
mov
mov
mov
fdiv
(bad)
mov
retf
jbe
push
cli
add
sub
add
jmp
sub
sbb
jno
pop
das
aad
mov
das
inc
bound
data16
ret
loopne
fidiv
cmp
push
rcr
xchg
cmps
mov
div
mov
loopne
shl
cs
cmp
jnp
test
xchg
push
lods
adc
mov
fidivr
stos
pop
sbb
cmp
cmc
mov
ret
in
push
add
or
stc
push
aam
jae
dec
mov
das
mov
mov
adc
fndisi(8087
jnp
mul
cwde
mov
cwde
test
retf
xor
push
xor
push
xchg
in
(bad)
fidivr
loop
push
xor
pop
pop
jmp
pop
xor
cmp
inc
aaa
movs
stos
pop
pop
shl
cmps
stos
sahf
mov
fs
and
dec
push
rcl
(bad)
jns
mov
pushf
push
or
cmp
xchg
test
push
jnp
push
mov
mov
aaa
sub
clc
fmul
daa
and
jge
mov
mov
push
mov
inc
sub
scas
into
mov
ret
xlat
lahf
fnstenv
ja
pop
adc
or
mov
and
mov
out
jge
nop
ins
inc
xchg
cmp
push
cs
fs
out
lods
mov
jne
xor
jl
scas
lahf
popa
sub
aam
pop
add
or
mov
ss
daa
dec
add
fidivr
and
fst
sub
mov
loop
adc
pop
aas
add
out
loop
mul
fdiv
dec
nop
and
lds
(bad)
mov
cli
dec
push
les
repnz
lods
and
inc
adc
movs
cmp
mov
test
fistp
xchg
out
adc
ficomp
mov
pop
or
mov
push
adc
push
loopne
fadd
inc
ret
dec
dec
pop
add
shl
push
jns
mov
aam
and
rcl
jbe
or
js
je
js
and
icebp
bound
xchg
sub
outs
shl
daa
dec
inc
imul
jg
test
and
jmp
cmp
sub
iret
ficom
xchg
lahf
sar
ds
push
pop
cli
repnz
out
call
and
cmps
add
fwait
stos
inc
or
mov
sub
jb
ss
scas
jg
xor
dec
(bad)
dec
movs
mov
bound
dec
mov
fisttp
loopne
push
jo
add
mov
lock
pop
in
clc
adc
hlt
retf
lahf
mov
add
(bad)
hlt
cmp
mov
(bad)
daa
retf
mov
fdivp
add
cmps
nop
xor
aad
les
xchg
data16
mov
js
pop
call
scas
push
lea
call
movs
push
add
xchg
xor
in
pop
repz
pop
cmps
out
(bad)
loope
sbb
or
jecxz
test
jns
test
call
in
jns
hlt
fistp
fstp
push
inc
pop
xor
leave
dec
stc
dec
jmp
fs
jmp
and
cmps
jbe
mov
daa
jl
and
adc
lea
sub
mov
push
test
and
xchg
jg
stos
outs
push
mov
pop
xchg
jl
das
add
mov
adc
addr16
mov
retf
ficom
in
add
add
cmps
add
out
data16
push
fsubr
in
push
and
lods
outs
and
xor
mov
mov
in
movs
mov
aaa
pop
fldenv
mul
adc
pusha
push
ret
pop
jp
xchg
jg
sub
jnp
(bad)
daa
stc
push
ret
call
add
jno
push
test
inc
xchg
pop
scas
sbb
or
or
aam
jl
iret
fdiv
jo
push
stos
mov
mov
maxps
sbb
js
or
sbb
lock
gs
mov
sbb
int
xlat
xchg
icebp
mov
add
sbb
push
mov
jge
push
test
test
mov
xor
dec
pop
(bad)
js
pop
into
mov
loop
sbb
jle
jne
push
cmp
jp
push
jae
lods
lods
push
call
xor
movs
cmp
jno
jmp
sti
push
(bad)
xchg
and
std
push
inc
retf
int3
mov
jnp
jp
aas
sub
cmp
in
inc
addr16
fcmove
pop
adc
mov
mov
rcr
sbb
enter
or
pushf
or
sub
xchg
add
mov
xlat
xchg
ins
ds
sub
xlat
mov
cmp
daa
ds
jo
push
jne
out
cmp
sbb
mov
into
in
dec
xor
jae
popf
das
iret
or
in
or
retf
cmp
imul
mov
xchg
arpl
jns
movs
mov
hlt
add
(bad)
push
mov
mov
aas
sbb
mov
jo
push
jecxz
in
cmps
pop
scas
adc
mov
call
or
xor
fidivr
xor
dec
fdiv
btc
js
mov
push
fs
or
mov
fadd
in
mov
sub
call
cdq
ins
dec
jmp
mov
pop
and
repnz
pop
cmp
cmp
push
je
add
xchg
out
out
(bad)
sti
test
jl
ins
call
pop
shl
and
mov
mov
outs
mov
out
ja
repz
jae
sbb
pusha
adc
xlat
pop
repnz
or
dec
ret
stos
out
cmp
or
mov
ficom
loopne
dec
xchg
mov
add
fnsave
aaa
push
xor
enter
cmc
adc
repnz
stos
inc
inc
test
xchg
jmp
rcl
in
call
sbb
inc
stc
ja
add
clc
cwde
enter
or
bound
xchg
push
sahf
push
int3
aam
dec
int
in
into
je
movs
mov
sbb
jo
mov
loope
(bad)
push
out
fstp
mov
jns
pop
out
sub
mov
or
call
add
ds
jge
leave
push
inc
(bad)
addr16
jl
inc
inc
inc
bound
pop
cmp
mov
stos
or
dec
xlat
pop
dec
jns
sub
ret
jge
dec
outs
mov
jo
adc
pop
xor
cli
mov
out
jecxz
pop
and
cmc
xchg
in
mov
sub
mov
arpl
mov
mov
pop
rcr
movs
loopne
fs
dec
jnp
imul
outs
retf
or
(bad)
pop
jle
hlt
cs
mov
mov
cmp
jne
adc
aas
dec
add
nop
xchg
and
ja
nop
pushf
or
cmp
vaddsubps
and
cmp
xchg
dec
inc
xchg
pop
xor
mov
daa
sar
jp
pop
cmc
je
pop
jo
iret
je
stos
das
cmp
ficomp
cld
gs
and
jbe
cmp
xor
ja
shl
jnp
dec
and
mov
mov
cmp
retf
push
retf
iret
add
imul
stos
push
repnz
dec
adc
call
sti
sub
and
xor
or
(bad)
cli
xchg
jecxz
xlat
pop
mov
(bad)
cdq
ins
retf
inc
and
lea
neg
xchg
sbb
fwait
mov
mov
lods
push
sbb
js
mov
and
dec
stos
adc
lods
dec
dec
dec
mov
jne
push
mov
ins
cli
lock
aas
dec
cld
add
or
ins
push
inc
xor
out
push
idiv
imul
out
(bad)
mov
hlt
retf
pop
xchg
shr
sti
cdq
mov
lock
xor
test
or
xchg
dec
push
out
rcr
(bad)
fst
stc
test
cmp
pop
mov
outs
(bad)
out
(bad)
les
fmulp
or
dec
xchg
lock
add
outs
jge
cmp
nop
mov
add
dec
add
add
xor
call
mov
ss
pop
call
dec
in
sahf
jno
sub
cld
mov
jmp
popa
imul
jae
sar
hlt
test
jecxz
jbe
les
push
ror
adc
das
push
fdivr
bound
loope
mov
out
push
shr
sub
mov
cdq
(bad)
mov
in
lods
add
cmp
mov
push
into
call
scas
rcr
dec
sbb
dec
mov
dec
jmp
push
add
jne
enter
xor
lods
xchg
pop
movs
mov
mov
mov
add
xchg
fsubr
jg
fbstp
adc
push
outs
cmp
xchg
sbb
sub
shl
repnz
es
inc
cmp
shl
sahf
fdiv
adc
aam
push
mov
xchg
add
sub
inc
sbb
call
dec
xor
je
test
mov
inc
enter
jmp
push
nop
retf
sub
push
popf
fistp
bswap
sub
cli
cs
mov
or
push
xor
jge
inc
xchg
mov
or
mov
data16
jl
jg
addr16
sahf
mov
inc
jmp
jne
hlt
pop
and
arpl
(bad)
jmp
(bad)
movs
add
xor
(bad)
sbb
xchg
cmp
xor
cdq
dec
in
xchg
jbe
lods
mov
mov
pop
dec
popf
cmp
mov
loopne
lahf
loopne
cmp
adc
sbb
or
fstp
mov
or
dec
scas
push
scas
(bad)
sub
das
out
mov
aas
xor
cmp
sbb
in
cmps
and
pop
paddsw
xchg
test
jo
(bad)
mov
sub
imul
pop
icebp
stos
mov
dec
pushf
mov
jle
mov
pop
push
aam
inc
dec
jb
mov
int3
rcr
pop
test
and
sbb
pop
mov
sbb
outs
ds
pushf
scas
ret
scas
and
leave
jp
mov
xchg
dec
pop
push
mov
and
mov
cmps
add
cmp
jbe
mov
inc
dec
out
and
mov
test
mov
add
mov
mov
(bad)
retf
in
xchg
ret
pop
nop
ss
adc
and
mul
push
call
(bad)
jne
in
pusha
pop
ret
jp
xor
add
inc
imul
outs
int3
mov
pop
and
cmc
cmc
mov
and
sahf
jbe
cli
jb
scas
aas
in
stos
sub
popf
cmps
mov
pop
dec
imul
jno
je
sbb
aaa
repz
(bad)
adc
int3
mov
mov
pop
jno
adc
jb
enter
or
pop
faddp
and
pop
inc
dec
cmc
ins
cmp
outs
jg
xchg
fwait
mov
xchg
add
jl
(bad)
jge
mov
mov
lahf
dec
add
adc
arpl
in
mov
cld
(bad)
mov
sub
in
stos
dec
int3
inc
xchg
rcl
aas
mov
retf
(bad)
ja
fcmovb
jne
vmwrite
out
(bad)
sbb
(bad)
mov
jne
fxch
mov
leave
mov
hlt
sbb
mov
frstor
movs
jnp
mov
movs
cmps
outs
xor
pop
cwde
xchg
out
dec
in
les
outs
xchg
and
fcmovnb
push
sahf
inc
sub
(bad)
and
dec
mov
ficomp
adc
pop
mov
jecxz
and
jne
inc
std
imul
imul
push
pushf
out
push
fld
dec
mov
cmp
pushf
jecxz
xor
xor
int
inc
arpl
imul
push
mov
add
push
adc
fwait
or
shl
mov
in
leave
dec
sub
outs
mov
mov
sub
ss
push
xchg
jno
push
and
sub
bound
retf
retf
push
scas
sbb
pop
cdq
mov
inc
and
mov
shr
test
and
and
xor
mov
int3
bound
mov
lods
push
jp
das
add
or
lahf
nop
(bad)
fcom
test
cmc
push
cmp
dec
hlt
mov
cli
cmc
fisub
xor
rcr
dec
inc
sti
mov
xchg
push
inc
jbe
dec
push
icebp
pop
or
leave
arpl
pop
js
aaa
mov
fs
out
ds
test
pop
call
int
add
popf
jbe
adc
shl
fbstp
adc
or
cdq
into
and
jnp
ret
or
scas
popf
clc
lahf
mov
cld
ins
cwde
push
xchg
scas
call
lea
xchg
fs
dec
dec
aas
js
xor
hlt
arpl
imul
arpl
and
dec
mov
cmp
inc
rcl
loopne
add
clc
mov
(bad)
out
hlt
hlt
(bad)
push
fld
xchg
aam
iret
mov
jl
pop
jp
or
mov
push
pop
int
and
sub
in
xchg
push
mul
in
hlt
add
clc
lods
cmp
mov
mov
lods
popa
and
aam
out
push
frstor
sbb
cmc
mov
cld
clc
fcmovnbe
push
jmp
sub
(bad)
popa
mov
pusha
aad
xchg
cdq
push
mov
shl
sbb
pusha
outs
dec
into
cmps
xchg
adc
cdq
fcomp
push
xor
adc
das
(bad)
xor
mov
or
push
adc
push
nop
je
pop
arpl
cmps
lds
mov
fldl2t
xor
dec
and
(bad)
(bad)
inc
enter
jbe
xor
lahf
(bad)
cmp
call
xchg
dec
sub
mov
aam
sahf
cwde
shl
fidivr
sub
add
sub
push
add
jg
jnp
mov
adc
ret
push
retf
jmp
mov
imul
mov
sub
ins
jle
repz
daa
mov
xchg
dec
or
push
push
sbb
cs
and
mov
cmp
push
jp
sahf
mov
jmp
pusha
push
movs
push
retf
and
pushf
outs
xchg
xchg
cli
lods
push
adc
add
and
sti
(bad)
cmp
cmp
shr
enter
(bad)
pop
mov
frstor
push
jmp
les
clc
or
cmp
sbb
pop
cmp
repnz
mov
pop
int3
xchg
int
mov
xchg
mov
stc
dec
movs
pop
(bad)
xchg
jno
mov
lea
outs
pop
call
sbb
loope
xor
jmp
sbb
cmp
rcl
neg
aam
dec
adc
inc
cmp
and
push
rcl
mov
xor
das
push
cwde
adc
xor
loop
push
bound
int
outs
dec
jno
(bad)
mov
popa
rcl
add
test
and
ror
retf
pop
ja
and
fld
lods
mov
das
dec
loop
icebp
xchg
les
stos
and
or
add
jp
js
pop
arpl
jo
mov
rcl
pop
das
xor
xor
mov
push
into
sub
push
xchg
lahf
cmp
ror
xor
ins
ja
sub
inc
inc
push
push
jnp
jo
and
add
cmp
add
jnp
xor
mov
ins
pop
mov
daa
test
mov
and
or
mov
scas
(bad)
cmp
lea
test
push
add
aam
xor
call
aas
in
or
and
or
inc
(bad)
int3
in
dec
or
or
dec
stos
add
xor
cmp
fisub
out
jmp
and
adc
lock
mov
jns
fdiv
mov
cli
xchg
push
jbe
cmp
dec
bnd
cmp
inc
out
and
mov
repz
inc
shl
(bad)
fisubr
pop
pusha
or
jb
cmp
xchg
dec
lods
int
and
mov
movs
adc
mov
retf
rcr
dec
xsaveopt
lock
and
std
mov
stc
out
mov
inc
js
rol
xchg
mov
add
movd
mov
mov
jne
jmp
jno
ror
pop
sbb
jmp
xchg
xlat
in
(bad)
call
or
out
xor
push
add
sbb
add
xchg
jae
xor
loope
loope
jno
cmp
add
scas
ins
repnz
mov
fwait
clc
cdq
xlat
cmc
inc
aam
xor
into
pop
mov
dec
ja
pop
(bad)
fmul
outs
push
jl
fs
dec
or
inc
adc
xor
outs
test
xchg
pop
sbb
sub
ret
push
nop
jl
adc
or
ror
nop
pop
jns
(bad)
aam
call
adc
jl
cmp
shl
imul
int3
push
and
add
mov
popf
xor
ds
push
lea
cmps
mov
out
retf
add
fsubr
xlat
ins
pop
dec
call
test
pop
mov
push
dec
xchg
xor
ss
stc
adc
dec
outs
lds
lods
aas
test
push
mul
sahf
pop
adc
push
add
sahf
ret
and
mov
add
iret
sti
pop
and
dec
xchg
jo
inc
call
add
test
inc
mov
adc
pop
or
and
ss
hlt
pop
in
cld
(bad)
jg
cmps
xor
sar
gs
cmps
repnz
push
push
movs
loop
out
jb
cmps
bound
inc
jmp
loop
and
sub
movs
xor
(bad)
retf
push
in
cmp
or
sub
sub
add
scas
mov
dec
lods
cdq
cs
(bad)
push
add
fnstsw
test
mov
lods
sbb
cmp
fild
pop
mov
stos
jbe
popf
adc
outs
cmp
dec
clc
adc
imul
add
in
jnp
and
ficom
in
out
sub
push
and
js
movs
ins
sub
imul
lock
ja
xchg
add
sbb
adc
je
outs
addr16
and
mov
aam
push
sbb
ja
add
fidiv
into
push
cmps
xor
jecxz
push
xor
sub
stc
jns
in
(bad)
inc
mov
cmp
mov
dec
leave
lds
push
sbb
sbb
clc
cmp
add
dec
or
sahf
scas
cmp
or
inc
div
jmp
sub
into
scas
call
test
sub
pushf
popa
in
inc
cli
js
fcomp
jg
gs
hlt
xchg
cmp
retf
lahf
mov
fdivr
mov
call
test
fs
lock
mov
jmp
xor
pop
retf
fadd
jae
outs
neg
fwait
sub
xchg
jmp
loopne
xchg
scas
test
cwde
or
sub
jno
movs
shl
das
cmp
data16
test
(bad)
fs
les
shl
pusha
cmp
jo
enter
jl
inc
dec
xchg
pop
pop
popf
and
jbe
and
out
cmp
mov
in
cdq
sbb
push
pop
push
xchg
out
loope
(bad)
aam
sub
push
mov
std
or
in
(bad)
ins
xor
cmp
lea
leave
std
jne
adc
jb
jle
cmps
jb
shl
inc
int
and
call
cs
jbe
push
sub
xor
sub
addr16
jmp
retf
fdivr
fs
sub
mov
pop
ins
ins
add
outs
(bad)
xor
lahf
aas
mov
mov
cmps
dec
call
cmps
lods
shl
jmp
push
call
std
mov
je
outs
aad
cmp
mov
mov
push
shl
sbb
add
inc
into
dec
push
cmps
pop
xchg
movs
ror
sub
sbb
add
loop
gs
movs
loopne
push
push
sub
pop
cmp
(bad)
push
inc
adc
div
loopne
out
outs
std
sahf
or
and
mov
xor
mov
aad
cmps
cmc
xor
push
xor
retf
repz
(bad)
jecxz
mov
(bad)
sti
sub
fcmovb
cs
add
add
or
leave
(bad)
stc
cmp
dec
(bad)
(bad)
int3
and
je
add
fiadd
test
jbe
sub
and
not
ins
mov
clc
mov
(bad)
xlat
(bad)
or
and
mov
outs
lds
jo
fadd
ret
inc
xchg
and
xor
pop
mov
daa
iret
push
sbb
rcr
and
inc
push
push
sar
lahf
xor
mov
xchg
fdivr
xchg
shl
cmp
or
mov
stc
mov
mov
call
movs
int
or
lods
dec
sbb
jbe
pop
dec
sbb
add
or
sub
mov
aam
(bad)
loopne
daa
or
pushf
adc
sub
mov
shr
outs
xchg
push
(bad)
xchg
mov
int3
or
ds
retf
je
loope
mov
(bad)
out
xchg
test
out
popf
jg
mov
push
pop
(bad)
jmp
pop
fnstenv
mov
or
scas
mov
ds
(bad)
fcmovne
push
mov
je
out
in
ins
loope
hlt
ror
rol
sbb
dec
fst
xchg
retf
mov
fisttp
sbb
jp
mov
repnz
clc
scas
imul
and
pop
in
stos
mov
test
retfw
mov
ss
fnstsw
test
rep
test
lods
mov
retf
jle
or
ror
cmp
jns
jge
mov
in
xor
sub
ja
pop
cmps
cmp
pop
(bad)
shr
pushf
sar
lahf
ins
mov
add
dec
test
std
aas
aas
imul
push
lds
jmp
loop
fwait
cmp
xor
cmp
call
dec
ins
mov
inc
(bad)
sbb
mov
xchg
lea
div
cmp
adc
xchg
icebp
push
inc
test
pushf
pop
stos
nop
jnp
out
sbb
movs
cmp
fwait
push
sbb
rol
stos
mov
jg
(bad)
js
iret
jmp
(bad)
(bad)
icebp
scas
or
dec
test
mov
or
repnz
pop
jecxz
push
xchg
sbb
(bad)
aaa
mov
imul
int
cmp
loope
int3
or
jns
push
jne
cmp
inc
adc
imul
test
in
cld
(bad)
and
daa
(bad)
stc
aam
cmc
das
cmp
test
and
cmp
clc
add
mov
fnstcw
unpcklps
sbb
push
iret
add
outs
or
js
mov
mov
cmc
int
mov
popa
jae
sbb
push
push
loope
xchg
mov
jns
xchg
xchg
xlat
dec
mov
les
cmp
gs
leave
lds
(bad)
mov
sbb
in
sub
sub
inc
adc
xchg
xchg
clc
pushf
stos
fidiv
adc
jle
mov
jne
push
inc
cmp
sbb
jne
aaa
add
mov
lods
add
pop
xchg
pop
addr16
fstp
loop
cmp
mov
cdq
xchg
sub
adc
loope
push
xchg
fdiv
mov
or
pop
adc
ret
int
int3
lock
jg
out
mov
mov
push
cmps
mov
add
mov
jno
les
rcl
sub
mov
repnz
ret
pop
stos
xchg
cdq
fdiv
sub
fistp
cmp
int3
in
mov
or
(bad)
into
dec
dec
ss
test
test
inc
mov
sub
add
test
ins
cmps
cmp
test
outs
stc
(bad)
cmp
push
test
xchg
movs
jg
jmp
pop
lods
test
call
icebp
cli
jae
push
mov
or
fisubr
xchg
mov
mov
fld
mov
arpl
mov
inc
xchg
rcl
cld
test
and
pop
out
xor
mov
cmp
or
in
mov
adc
addr16
mov
aaa
xchg
movs
ret
sbb
add
js
jp
psubw
cmp
cmp
lds
mov
mov
test
push
add
js
popa
leave
adc
ds
xor
mov
stos
iret
push
mov
hlt
into
fimul
pop
cli
push
loope
cmp
(bad)
aad
stc
sahf
jg
adc
mov
ja
mov
es
clc
fdiv
adc
dec
enter
and
pop
xchg
neg
sbb
or
fsubr
xor
mov
mov
mov
nop
adc
fmul
jmp
xlat
adc
cmp
push
daa
or
lock
mov
dec
test
jnp
inc
xchg
jmp
fisttp
in
loope
ss
push
fs
jae
pusha
cmp
sub
sbb
(bad)
jb
pop
leave
mov
dec
in
mov
inc
cmps
mov
nop
jmp
inc
outs
or
adc
mov
jmp
cmp
mov
(bad)
mov
dec
xchg
or
adc
cwde
push
xor
lds
dec
lea
clc
xlat
mov
xchg
add
sbb
stos
enter
and
retf
adc
cmp
fmul
xor
or
not
repnz
gs
sub
xor
cmp
int3
les
mov
sbb
pop
add
movs
pop
xor
jp
call
or
jecxz
inc
es
js
push
icebp
hlt
in
movntps
jp
js
mov
xchg
sbb
stos
cmp
jmp
sub
mov
pop
bound
pop
sub
sub
pushf
jne
iret
data16
xor
mov
es
pop
call
retf
add
dec
mov
(bad)
stos
loopne
call
sub
inc
xchg
retf
mov
sbb
jmp
add
test
xor
pop
(bad)
pop
jnp
or
cmp
sbb
sbb
in
repz
fs
loope
dec
xor
repz
and
mov
xor
arpl
cli
shl
mov
fs
or
fcmovnbe
cmp
mov
cld
fwait
call
jae
loopne
push
dec
adc
je
sub
pop
sbb
and
adc
arpl
pop
xchg
mov
scas
and
lods
bound
push
sbb
or
fist
or
lock
pop
sbb
stos
inc
adc
in
int
adc
mov
jp
xchg
jmp
xchg
or
push
cmc
xor
mov
je
ret
fwait
fwait
or
mov
xchg
int3
xchg
adc
cs
lock
mov
jp
dec
retf
xor
das
test
jno
cmc
cld
mov
sub
outs
lds
icebp
jae
or
test
scas
xchg
or
lods
and
mov
fs
add
mov
push
cs
inc
xor
inc
mov
and
out
scas
adc
ins
mov
and
es
push
mov
mov
jae
std
xor
shl
(bad)
ss
jae
ret
xchg
mov
add
sub
cmp
pop
fucomp
mov
mov
pop
mov
sub
mov
hlt
push
or
out
push
xlat
and
adc
cmp
push
sbb
mov
iret
jl
sub
mov
push
sbb
(bad)
out
push
dec
lods
mov
xor
push
xor
(bad)
into
sub
sub
int
jmp
xchg
out
push
mov
xchg
push
popa
fdivr
int
sbb
outs
aad
jnp
ror
sub
mov
adc
out
or
mov
mov
xchg
std
aas
xlat
dec
mov
jmp
popa
iret
adc
cmp
int
dec
retf
fwait
cmp
mov
mov
ret
mov
ret
lods
adc
cmp
nop
cmp
jo
ds
es
mov
popf
xor
and
inc
repnz
pop
loop
mov
call
mov
not
rol
xor
scas
inc
fadd
fs
cdq
cld
into
xchg
inc
ins
jae
test
mov
xor
or
hlt
cmp
jmp
ret
(bad)
rcr
ds
pop
adc
rol
jmp
inc
pop
jg
jg
push
in
scas
cmp
inc
fisttp
and
xor
cmp
cmp
mov
jne
add
leave
ror
inc
push
and
cmp
push
imul
cmp
jecxz
gs
jge
sub
outs
inc
push
fwait
sbb
mov
mov
and
in
dec
aam
clc
sbb
and
js
add
sub
push
mov
mov
mov
or
mov
mov
ins
jbe
movs
cs
fsub
mov
inc
add
sbb
and
jmp
pop
xlat
mov
adc
stos
push
pop
fdivr
pushf
and
xor
hlt
xor
mov
aas
push
jae
lds
fdivr
and
cli
not
push
jl
test
leave
xchg
jb
xchg
ret
jle
nop
adc
lea
fld
int
cdq
and
(bad)
or
sub
popa
xchg
push
cmc
jmp
mov
mov
je
pushf
fwait
loopne
mov
sub
push
dec
call
(bad)
push
push
jg
push
adc
clc
push
mov
cs
stos
ds
inc
out
out
test
sub
popf
cwde
sub
mov
loop
cmp
ins
xchg
xor
cwde
(bad)
jns
jmp
cmp
xchg
pop
clc
scas
xchg
stos
dec
mov
fbstp
cmp
(bad)
inc
and
mov
cld
jge
ret
push
test
lods
sar
push
or
pop
mov
out
rdseed
and
fnstsw
jae
into
loope
lock
cmp
(bad)
mov
push
int
ja
imul
push
daa
inc
push
and
pop
sbb
scas
push
iret
inc
int
js
sbb
inc
pop
cmps
lea
lock
jae
(bad)
inc
rol
pop
lea
xor
sbb
aad
sub
push
test
mov
sti
jle
imul
stc
sub
ret
stos
adc
adc
sub
lods
dec
push
icebp
cmp
mov
jns
jae
imul
lods
cmp
jmp
xor
cli
(bad)
imul
into
pusha
ss
jmp
fwait
(bad)
stc
in
fidiv
jns
mov
popa
psrlq
rep
push
push
(bad)
fist
popa
fst
adc
adc
xchg
sub
cmp
inc
jno
(bad)
fwait
int3
in
aad
adc
addr16
jno
mov
mov
out
cld
out
sub
inc
lds
xor
repz
scas
lods
cmp
dec
ja
push
mov
test
(bad)
adc
sbb
sub
out
mov
push
mov
test
pushf
out
inc
fs
shr
bound
lock
js
push
sbb
repnz
mov
inc
lods
cmp
pop
push
mov
lods
xchg
std
cld
mov
push
in
ret
retf
xchg
dec
mov
test
loope
clc
push
dec
imul
lds
outs
xor
cld
test
enter
es
push
xchg
push
test
xchg
inc
pushf
jmp
mov
ja
and
test
fild
sub
(bad)
(bad)
iret
shl
hlt
add
(bad)
jp
push
inc
jne
jno
sub
xchg
lock
ins
mov
adc
in
inc
sti
adc
xchg
retf
sub
pop
bswap
cld
or
in
int
adc
out
shl
mov
jecxz
or
inc
or
stos
add
stos
xchg
repz
(bad)
mov
push
imul
fs
jb
adc
addr16
or
mov
fwait
into
inc
outs
and
push
push
mov
xchg
and
jp
(bad)
loop
clc
nop
ins
and
imul
sti
in
mov
adc
xor
stc
dec
jbe
test
mov
sub
sbb
mov
xlat
mov
push
jno
pop
shl
push
ss
cmp
stos
mov
xchg
cs
sbb
and
cwde
les
mov
movs
and
mov
jle
sbb
pop
lods
(bad)
(bad)
cmp
xor
xchg
clc
ficom
ret
out
mov
mov
dec
sbb
xor
ja
adc
add
add
hlt
lahf
and
fsubrp
fld
mov
xchg
xor
dec
or
retf
fs
fucomp
into
jg
imul
mov
stc
ret
jmp
dec
imul
lds
jns
pushf
dec
xor
and
or
bound
pop
push
push
xlat
push
xor
popa
int3
sbb
sub
int
push
rcl
aas
test
jne
shr
add
mov
cli
pop
movs
jl
lods
daa
push
xor
dec
sti
clc
mov
cmp
adc
pop
ret
add
fld
jno
sbb
mov
mov
ins
xor
pop
mov
add
(bad)
jno
jo
aaa
fs
inc
shl
cmp
dec
add
(bad)
es
sahf
bound
stc
ror
stc
mov
xor
jmp
pop
js
inc
inc
pop
movs
gs
mov
push
add
mov
retf
xor
mov
xchg
push
mov
mov
or
(bad)
jmp
sub
jbe
fnstsw
out
ins
call
ror
leave
sub
push
rcr
pop
xchg
outs
mov
push
ss
int3
pop
dec
adc
cld
sbb
addr16
scas
xchg
push
xchg
mov
xchg
fld
add
push
cs
mov
jecxz
and
dec
retf
xchg
mov
loope
xchg
int
push
or
mov
js
jmp
movs
mov
xor
stos
sbb
push
adc
cmp
fld
(bad)
aas
push
push
ret
fdivr
movs
or
xchg
addr16
sbb
sub
push
lahf
cmps
and
push
jle
test
sub
call
pusha
push
inc
out
or
and
lock
mov
into
hlt
mov
cmp
sbb
jbe
ss
or
nop
dec
add
jnp
(bad)
mov
mov
(bad)
cli
jns
bound
pop
sahf
inc
clc
mov
out
cdq
push
push
das
sbb
test
mov
movs
cmp
mov
push
add
pop
mov
add
cmp
or
dec
mov
arpl
jne
cmc
clc
and
movs
jmp
leave
cmp
push
xchg
daa
xchg
ror
mov
pop
ins
sub
std
jb
mov
(bad)
adc
shr
mov
imul
mov
dec
fldenv
or
test
out
pop
out
pop
mov
jp
jecxz
jno
sub
shr
sub
sub
in
jg
scas
mov
sub
scas
div
pop
mov
inc
gs
and
jmp
sbb
mov
inc
enter
pop
add
jl
jp
loop
je
das
mov
and
ret
(bad)
shr
js
pop
shr
xchg
inc
out
mov
mov
mov
(bad)
repnz
push
inc
mov
and
rep
pop
ins
add
and
out
lahf
(bad)
shl
mul
xor
repnz
xor
cmps
ins
cmp
dec
sub
xchg
mov
xor
and
add
dec
popa
dec
popa
lahf
test
and
cmc
mov
leave
fidiv
jl
shl
adc
add
out
adc
jne
jmp
test
adc
sbb
mov
cmc
outs
hlt
mov
mov
jle
or
xchg
(bad)
push
nop
cmp
out
pusha
fwait
push
jmp
push
push
cmp
jmp
jle
std
into
xchg
jae
sahf
sbb
scas
inc
jbe
cs
inc
sub
test
mov
add
sub
not
movs
shl
repnz
rcr
(bad)
dec
aas
pop
or
outs
sar
hlt
retf
in
loopne
adc
test
fcmovu
sbb
cmp
push
mov
sbb
mov
sbb
or
rol
mov
mov
xor
mov
shr
test
loope
outs
push
sbb
jne
arpl
pop
mov
and
test
pop
mov
test
jns
push
add
test
shl
mov
adc
mov
les
jp
rcl
scas
jmp
inc
clc
mov
cld
cs
xor
pop
sti
scas
bound
dec
std
cdq
xchg
push
aas
fneni(8087
ror
call
out
push
iret
pop
add
sub
inc
mov
jecxz
jns
aaa
jb
mov
aad
xchg
test
adc
(bad)
sub
fcom
adc
shl
and
dec
xchg
inc
(bad)
jmp
sub
or
pop
jb
test
pop
pushf
jmp
push
jge
push
std
imul
dec
cmp
fld
retf
push
clc
sbb
xor
mov
shl
fdivr
add
mov
fcmovbe
xor
fstp
add
jle
sar
adc
std
add
out
(bad)
loopne
jge
mov
(bad)
stos
mov
dec
movs
push
xchg
f2xm1
dec
push
xchg
fadd
test
pusha
mov
and
in
pop
push
mov
or
imul
cld
inc
push
nop
pop
or
and
test
push
outs
mov
mov
xor
dec
xchg
clc
xor
dec
jbe
jl
popa
add
xor
pop
jecxz
call
inc
enter
loope
cld
mov
pextrw
(bad)
aam
into
sub
inc
inc
sub
clc
sub
adc
lods
jns
jae
in
fisttp
arpl
dec
ror
xchg
retf
fbstp
xlat
std
dec
or
outs
cwde
and
ret
pop
repz
cmp
clc
jge
push
jmp
or
sbb
pop
or
push
out
add
sub
popa
fwait
repz
mov
loope
adc
add
(bad)
cdq
mov
jle
pop
and
rcr
gs
jg
iret
sbb
sbb
scas
and
movs
add
or
inc
cld
push
sub
add
std
xchg
test
jmp
xor
inc
aam
pop
cdq
mov
out
je
aad
enter
pop
out
cld
rol
dec
jge
xlat
cwde
mov
dec
call
test
push
and
pusha
aad
pop
inc
data16
cmp
mov
mov
sbb
daa
xchg
jns
ss
bound
mov
dec
or
retf
call
mov
sbb
fwait
dec
iret
push
shr
mov
popf
pop
sub
arpl
inc
int3
xchg
ret
gs
sbb
ret
xor
dec
mov
pop
out
pop
jae
cli
jmp
int3
mov
sub
scas
inc
jnp
jbe
mov
ss
xchg
dec
xor
push
or
ins
cmovb
aaa
push
das
aad
sub
nop
pop
loop
out
arpl
mov
jecxz
pop
ret
mov
mov
inc
cli
lods
push
and
pop
mov
aam
aas
adc
sbb
and
mov
rol
cdq
ret
cmp
rcr
sbb
sbb
xor
int3
ins
pop
mov
ja
call
jmp
loop
xchg
shl
push
inc
call
fptan
push
cld
out
mov
xchg
imul
das
jno
pop
xchg
pushf
(bad)
cmp
pop
out
icebp
push
push
fwait
ja
sbb
jb
sub
fdiv
pop
out
(bad)
daa
fdiv
mov
cmp
add
in
pushf
jl
push
xor
aaa
aaa
dec
xchg
jae
xchg
int
sbb
in
mov
push
or
mov
leave
sbb
popa
mov
or
jl
mov
add
adc
mov
jbe
jle
mov
fisttp
into
sub
cmp
fsubrp
or
pop
sbb
inc
int3
jmp
adc
fidiv
push
ds
jp
test
jb
add
adc
lock
icebp
out
ficomp
cmp
je
(bad)
repnz
adc
xor
bound
dec
jmp
arpl
mov
pop
jne
jg
adc
dec
pop
bound
sub
outs
mov
(bad)
pop
push
cmp
outs
xchg
loope
loop
loop
inc
cmc
xor
fdivrp
xor
ja
jne
xchg
and
dec
fisubr
repnz
fcmovnu
sar
hlt
psubd
mov
xor
data16
mov
or
and
data16
stc
xor
jmp
jmp
jb
lods
mov
inc
je
sub
mov
cmps
sbb
stc
aad
sub
mov
jb
scas
inc
dec
std
sbb
pop
sub
jno
mov
sahf
mov
mov
imul
cmps
lods
int3
push
shr
js
or
pop
daa
test
sbb
xor
outs
xchg
inc
push
dec
mov
icebp
(bad)
pop
ins
xchg
aam
fsub
inc
test
push
inc
xadd
adc
scas
ret
cmp
pop
push
jmp
sbb
xor
mov
lea
mul
scas
adc
rcr
aam
and
int3
xor
and
or
out
push
(bad)
ficom
cmps
push
ret
pop
aad
icebp
pop
inc
jg
mul
and
std
sbb
xchg
mov
cmp
(bad)
cli
cmp
and
inc
ins
scas
out
add
clc
loop
and
daa
into
bound
mov
fisttp
call
add
loopne
xor
xchg
cmp
xor
add
xchg
xchg
add
jne
mov
adc
call
pop
jbe
gs
icebp
push
scas
add
(bad)
add
add
inc
add
mov
xor
xor
inc
mov
cmp
dec
cmp
out
ret
fdivr
loop
scas
outs
imul
les
push
mov
jmp
cmp
daa
pop
aaa
push
retf
retf
inc
adc
jne
mov
mov
std
rol
aaa
fwait
repnz
inc
(bad)
dec
jg
or
gs
cmp
pop
fild
packsswb
ins
add
add
jp
and
sub
in
mov
movs
xchg
icebp
jne
mov
loop
push
movs
fmul
das
test
test
cmp
sar
xor
mov
xchg
xor
mov
sbb
rcr
inc
push
add
gs
outs
xchg
xor
mov
inc
sahf
ror
xchg
les
inc
movlps
outs
fcom
xchg
mov
ret
(bad)
mov
xchg
jle
jmp
dec
or
pop
loop
xor
dec
adc
xchg
outs
jl
ror
mov
mov
cld
pusha
gs
mov
ins
inc
stc
rcl
pop
and
in
mov
or
rcr
mov
(bad)
(bad)
stc
jne
ror
sbb
mov
test
push
push
call
cmp
movs
enter
pop
rcl
inc
push
fstp
daa
fisubr
mov
out
mov
outs
das
pop
gs
pop
fldenv
lods
imul
and
mov
push
add
jnp
jb
(bad)
jl
jge
mov
jns
daa
fcmove
mov
adc
in
mov
(bad)
cmp
pop
cmps
cmps
mov
sbb
outs
sub
mov
ret
jl
dec
cmp
jl
pop
mov
mov
mov
push
xlat
cmc
push
js
dec
cmp
outs
pop
test
daa
dec
jecxz
push
cmp
clc
test
mov
cmps
outs
and
and
retf
imul
adc
jmp
sub
pop
cli
daa
pop
push
enter
outs
mov
shr
lahf
popa
daa
cli
jne
xor
add
add
repz
and
dec
jnp
mov
mov
or
and
mov
dec
scas
dec
movs
sub
mov
or
imul
push
dec
xchg
mov
dec
cdq
sub
(bad)
gs
ds
lea
(bad)
cmp
pop
sar
bswap
sbb
dec
push
pop
push
loopne
mov
arpl
cli
aaa
dec
iret
int3
daa
xchg
pop
aad
xor
mov
mov
popf
mov
xor
cmps
cmc
leave
into
and
mov
es
outs
inc
or
outs
jb
xchg
loopne
mov
inc
div
nop
mov
mov
sub
pop
add
jne
cmps
ins
adc
aad
loopne
mov
inc
mov
cmp
movups
sbb
repz
cld
jno
sub
cli
je
mov
pop
jg
mov
sbb
test
jge
fs
xor
pushf
fidiv
sub
mov
imul
loope
enter
loop
xchg
mov
cmp
inc
xchg
jge
adc
xchg
aas
into
inc
mov
mov
ret
dec
aaa
ss
arpl
das
into
jl
ficom
push
dec
mov
pop
enter
xchg
push
ror
out
(bad)
cmc
imul
xchg
test
sbb
shl
popf
cli
cwde
jnp
imul
(bad)
inc
lock
bound
jne
sti
or
add
jmp
and
sub
and
repz
jmp
imul
std
or
loope
int
add
adc
cld
add
sub
and
jne
add
je
xor
push
sub
popa
xchg
mov
lea
xchg
cmp
push
in
icebp
cmc
mov
sub
fsub
xor
or
mov
shl
add
jp
lahf
and
int
sub
cmp
jecxz
inc
vpsllw
jl
xor
mov
jmp
xor
mov
int3
stos
cdq
cmp
iret
rcl
add
imul
lock
leave
lods
push
adc
fstp
xchg
mov
scas
or
loope
and
test
(bad)
repz
(bad)
jg
xor
mov
mov
and
out
mov
aad
and
and
mov
xchg
loop
fs
in
xor
mov
dec
xchg
mov
pop
mov
cwde
ss
mov
cmc
add
cmp
sub
out
loop
push
es
out
push
inc
mov
cli
cmps
cmp
iret
inc
jl
mov
mov
push
outs
adc
bound
out
mov
lds
and
cmp
dec
and
mov
div
push
xor
loopne
cmp
push
mov
xchg
adc
mov
mov
xchg
sar
push
fdivr
inc
out
mov
jbe
ins
jb
cmc
pop
imul
in
sahf
xchg
mov
xor
adc
push
jno
mov
fmul
ret
push
xchg
sub
and
(bad)
and
pop
push
fmul
cmps
or
mov
dec
sti
lahf
dec
movs
retf
aas
cdq
xchg
add
sub
jg
icebp
pop
fisubr
jb
jo
mov
mov
xchg
mov
dec
sub
cmp
lods
mov
in
push
cld
cmp
leave
push
adc
xor
mov
and
in
mov
fisttp
mov
jne
js
pop
xor
es
or
mov
pop
std
fsub
js
sbb
inc
scas
in
sbb
mov
dec
sahf
or
adc
add
gs
jmp
addr16
mov
xor
scas
jae
xor
jge
pop
mov
mov
sbb
xor
daa
imul
shl
add
pop
test
int3
sti
fdiv
pop
nop
rol
mov
es
inc
lds
xchg
std
gs
mov
or
test
rcl
mov
lea
sbb
xor
stos
mov
jb
push
xor
xor
or
outs
push
pop
jns
jge
push
or
dec
sub
and
stc
inc
cld
(bad)
push
shl
in
inc
cmp
js
adc
loopne
pusha
mov
jecxz
jecxz
fs
ror
xchg
loop
fsub
pslld
add
retf
stos
mov
sbb
in
adc
ss
adc
mov
push
push
jne
and
lods
in
ror
pop
pop
xor
jns
dec
or
stc
mul
push
outs
jmp
es
data16
mov
scas
popa
scas
std
mov
add
xchg
jmp
stos
push
ror
mov
scas
inc
pop
or
mov
xchg
stc
jecxz
test
popf
(bad)
pop
mov
sbb
mov
jmp
add
data16
fst
ss
dec
dec
in
shufps
push
and
shl
adc
int
sub
retf
outs
mov
xor
rcr
sahf
stos
push
jl
sbb
dec
push
xor
dec
jmp
stc
sub
ret
or
loopne
pop
fist
scas
adc
and
dec
lock
mov
add
cmp
jmp
xlat
rcr
dec
jo
xor
mov
mov
jp
sub
jp
dec
mov
popf
es
aaa
sbb
not
xchg
movs
fisub
adc
push
mov
push
xor
add
adc
sar
call
inc
xor
scas
icebp
enter
mov
out
jmp
retf
mov
lods
loopne
popa
xor
xlat
in
out
aam
pop
xor
xchg
(bad)
sbb
fwait
ss
dec
adc
sbb
adc
in
scas
cmps
in
push
out
cmp
enter
xchg
inc
mov
xlat
mov
aad
cld
and
(bad)
(bad)
mov
scas
cdq
jns
(bad)
cmc
sub
or
in
adc
xchg
fcomp
adc
sub
push
add
shr
lods
dec
jb
xchg
popf
push
repz
sbb
mov
sub
xchg
je
out
inc
xlat
icebp
cmc
(bad)
scas
dec
(bad)
cwde
jmp
push
sub
aad
into
scas
mov
repz
mov
test
test
fabs
jae
sub
adc
repz
leave
and
sbb
gs
lods
pop
push
scas
mov
loopne
add
mov
cli
nop
mov
adc
add
inc
sub
(bad)
sbb
or
call
jne
xchg
pusha
call
aaa
push
jecxz
cs
mov
movs
movs
repnz
arpl
aad
xchg
jmp
nop
and
cmc
inc
add
mov
js
test
dec
fild
ins
inc
inc
or
ins
pop
dec
cmp
xchg
push
fidiv
rep
mov
sub
repz
aad
sub
sbb
mov
adc
pushf
rcl
push
(bad)
imul
stc
push
jle
inc
out
cmp
es
ja
sbb
dec
in
rcl
xchg
cdq
popw
jmp
shl
fwait
xchg
or
inc
test
jns
adc
cmp
retf
jb
fld
cmp
mov
aad
mov
clc
mov
mov
daa
cmps
loop
arpl
xchg
repnz
test
add
or
popaw
xchg
lock
lock
mov
xor
push
jg
fcomp
out
xor
lock
(bad)
leave
or
xor
inc
push
add
scas
inc
lea
int3
ds
and
pop
mov
test
cli
sbb
repnz
mov
inc
pop
or
outs
or
into
push
mov
dec
cmp
sbb
outs
jp
aaa
cmps
and
and
int3
ja
fisub
pop
mov
push
adc
mov
jns
sbb
sub
push
je
dec
dec
inc
add
out
(bad)
gs
sbb
add
and
cmp
jo
iret
(bad)
clc
add
rcr
(bad)
adc
mov
jecxz
lds
enter
push
jl
mov
dec
(bad)
cmp
dec
xchg
call
jno
add
adc
sub
push
popa
push
imul
xor
pop
inc
lods
push
jecxz
sub
call
jnp
and
mov
inc
add
popf
pop
inc
test
(bad)
fcomp
cwde
mov
aaa
loopne
stc
jne
pushf
push
popa
jle
sbb
leave
cmp
xor
or
rcr
push
push
pop
cmp
les
jge
and
cld
dec
mov
retf
imul
ds
jb
aam
pop
add
xchg
bnd
mov
xor
ja
sub
ja
scas
jne
inc
pushf
jmp
mov
jg
shl
hlt
jecxz
adc
or
into
lods
mov
push
push
jge
pop
mov
in
push
jo
cmp
mov
rcr
jo
fadd
mov
jl
in
jge
sbb
sub
out
sub
dec
push
scas
les
shl
dec
dec
mov
jb
mov
pop
jle
outs
mov
ret
jae
adc
neg
scas
mov
lods
mov
in
(bad)
clc
or
pop
inc
or
dec
gs
fwait
call
cli
and
pusha
cmps
mov
dec
les
pop
or
mov
arpl
retf
pop
in
xchg
jg
bound
sub
test
add
aad
inc
mov
fimul
retf
test
jmp
pop
cld
scas
repnz
mov
xor
sbb
cs
(bad)
jmp
fwait
jge
xchg
iret
sub
xor
ret
sub
outs
popf
ret
pop
fidiv
scas
and
and
in
sahf
test
sub
loop
fbld
pop
mov
pop
retf
jmp
sbb
jne
lods
(bad)
unpckhps
rcr
or
add
popf
(bad)
retf
xor
pop
cmps
push
fisttp
addr16
popa
mov
cmc
xchg
loop
pop
sub
pop
xchg
push
dec
fnsave
jecxz
sub
cmp
mov
mov
pop
xor
popf
sahf
inc
pop
clc
cmp
mov
adc
add
adc
test
pop
mov
dec
mov
jmp
rcl
push
rol
int3
mov
out
cld
imul
call
or
iret
jne
(bad)
mov
add
push
dec
addr16
pop
mov
xchg
jne
cmp
mov
int3
movs
mov
mov
mov
mov
cs
fwait
sbb
jne
mov
cmp
mov
sub
fsub
push
mov
ret
bound
push
xchg
sub
push
(bad)
ret
add
or
xor
jnp
aam
icebp
jmp
mov
test
sbb
leave
mov
les
out
jbe
data16
sbb
fnstenv
(bad)
mov
push
stos
test
pop
ja
loopne
outs
lods
cmp
sbb
nop
shld
mov
mov
push
jns
push
loopne
movs
or
sbb
fstp
mov
mov
sub
mov
dec
inc
adc
sbb
jae
fistp
adc
in
fsub
jg
pop
leave
rcl
div
or
cmp
xchg
mov
sti
push
sbb
cmp
adc
xchg
push
aam
leave
gs
adc
std
cmp
dec
pop
cld
ins
jnp
jno
std
inc
sahf
xor
mov
mov
test
cmps
int
or
loop
dec
dec
cwde
xchg
(bad)
daa
xor
rcl
pop
pop
(bad)
mov
sahf
dec
fwait
retf
dec
jecxz
xchg
sub
fisubr
lahf
push
or
inc
test
mov
les
sub
xor
jb
push
aas
in
xor
jl
sub
mov
push
mov
sbb
jae
mov
jg
ins
or
lods
fs
jae
cli
pop
(bad)
in
cmp
fiadd
pop
mov
pop
inc
ja
cld
cmp
pop
jnp
out
std
inc
les
push
das
loope
and
loopne
and
cld
adc
pop
int3
into
or
push
push
pop
ins
lock
loope
outs
push
sub
hlt
add
or
add
daa
call
mov
(bad)
enter
retf
fwait
lods
rol
push
jp
leave
loope
and
out
iret
pop
adc
mov
push
rcr
or
pop
loope
adc
jno
push
popa
int
mov
enter
popf
ret
out
je
and
inc
aaa
call
scas
push
mov
mov
nop
mov
dec
enter
inc
stc
loopne
(bad)
loope
xchg
add
cli
stos
sahf
push
pop
and
dec
repnz
stc
daa
sbb
mov
dec
(bad)
std
lea
xor
outs
stos
out
add
shl
or
aaa
icebp
cmp
inc
pop
out
sub
pop
stos
jno
sbb
mov
push
outs
lods
mov
jns
inc
mov
push
ficom
add
sub
mov
sub
xchg
rcl
push
popa
ins
and
adc
xchg
mov
mov
sbb
jmp
call
sub
sar
pop
jbe
loope
pop
int
jge
(bad)
cld
ss
scas
in
leave
push
and
imul
mov
mov
gs
mov
xchg
push
sbb
pop
xlat
xchg
scas
adc
fst
(bad)
sbb
movq
pop
jnp
retf
xchg
call
xchg
mov
mov
(bad)
movq
das
cmc
test
jnp
pushf
sar
mov
mov
pop
pusha
leave
retf
gs
arpl
sbb
add
pop
cdq
add
es
mov
cli
std
sahf
int3
inc
in
(bad)
mov
loopne
mov
div
mov
push
mov
add
shr
fimul
lods
pop
sub
sub
sahf
jne
int3
push
cs
lods
jb
gs
pop
test
movs
les
add
retf
stc
jg
movs
ret
cdq
push
jne
cmp
mov
mov
or
and
cmp
ja
popf
dec
ins
cdq
call
sub
scas
mov
add
jg
ret
push
sbb
jl
test
sub
push
push
sub
pop
mov
in
adc
push
stc
mul
scas
imul
xchg
jno
cs
dec
daa
sub
push
popf
into
and
dec
les
push
stos
or
add
lods
xlat
in
scas
int
jecxz
adc
jb
xchg
xor
adc
adc
js
sbb
dec
int
inc
shl
lds
cmp
cld
retf
mov
dec
lods
inc
xchg
cld
pop
mov
dec
lods
js
into
aas
mov
aaa
push
inc
test
jbe
xor
lds
add
jo
inc
lahf
scas
push
mov
sbb
inc
shl
retf
pusha
retf
push
cmps
jg
mov
inc
adc
xor
cmp
adc
add
xor
pop
repz
pop
mov
xor
cli
xor
mov
addr16
inc
lds
stos
cli
dec
inc
push
or
xor
fs
inc
dec
inc
inc
jl
ror
push
cmp
jns
sbb
inc
fcmove
nop
inc
cmps
aam
xor
not
jmp
ja
cmps
movs
xchg
enter
sahf
inc
inc
dec
xchg
dec
fnstenv
add
das
pop
nop
into
jo
retf
mov
push
(bad)
enter
cs
cld
sbb
js
int3
lock
out
push
std
mov
inc
push
hlt
xor
ja
pop
iret
aas
ret
push
ret
scas
(bad)
jmp
hlt
add
adc
das
or
sbb
ret
lock
mov
mov
dec
mov
inc
mov
aad
nop
xchg
fimul
pop
shl
sub
lds
and
ret
inc
xchg
mov
ja
outs
mov
xor
iret
inc
dec
add
sbb
push
mov
bound
idiv
adc
aam
les
stc
fnstcw
aad
jne
aad
add
aam
mov
dec
ret
cmp
imul
mov
lods
mov
jp
xor
jecxz
mov
maskmovq
neg
(bad)
or
rcr
(bad)
inc
cmp
xchg
push
and
std
cli
(bad)
dec
fisttp
xchg
es
push
pop
pop
xchg
cmp
pop
test
add
mov
mov
sub
test
lods
aas
inc
push
and
or
outs
out
movs
and
jp
(bad)
pop
lahf
pop
lods
or
xchg
arpl
lds
fisubr
outs
adc
mov
stos
mov
cmp
int
dec
cs
mov
test
sub
pop
add
shl
sete
dec
mov
adc
mov
(bad)
pop
loopne
shl
stos
pop
dec
lea
jle
cmp
pop
pop
shl
addr16
or
outs
dec
out
cwde
or
push
fadd
ds
fld
add
push
rol
inc
mov
shl
gs
imul
fs
jb
das
cmp
and
add
mov
or
jle
xor
ror
cmps
jg
mov
jp
fwait
pop
inc
pushf
mov
lods
xor
push
out
jl
cmps
dec
inc
cmpps
and
mov
inc
test
pop
movs
hlt
xchg
stos
mov
aaa
and
movs
fdiv
loopne
add
jp
test
push
stos
sbb
pusha
cli
mov
(bad)
aad
and
(bad)
fyl2x
xor
cmps
(bad)
retf
jne
cmp
cmps
inc
icebp
cs
push
cmp
and
repz
mov
adc
xor
std
xchg
xchg
retf
lea
xchg
cmp
mov
les
daa
ins
dec
aas
test
(bad)
adc
jge
in
inc
cmp
call
shr
mov
hlt
and
xor
ret
dec
add
xor
pop
or
lods
jge
ja
rcl
bnd
loop
fwait
push
outs
adc
int3
cli
retf
sub
mov
(bad)
pop
jg
daa
stc
xchg
(bad)
sub
in
inc
sub
jbe
test
and
neg
out
push
popa
xchg
pop
ror
cmp
jae
jmp
push
int3
push
mov
sbb
xchg
xor
(bad)
(bad)
ins
daa
and
mov
xlat
jbe
mov
out
inc
xor
(bad)
jne
repz
jae
adc
sub
mov
pop
(bad)
and
jle
fistp
cmp
out
mov
jmp
aad
das
popa
data16
mov
mov
dec
jmp
test
mov
dec
mov
popa
push
loop
add
inc
fdivr
cmp
clc
pusha
ins
adc
and
sub
jns
ret
push
mov
inc
fldcw
dec
mov
pop
or
push
(bad)
cmp
cwde
aam
jmp
(bad)
clc
mov
push
cmp
and
xchg
aas
leave
in
loop
pmaxsw
inc
sub
sbb
cwde
pusha
inc
iret
dec
fisubr
push
(bad)
pop
in
je
cmp
adc
lock
cmp
jp
sub
leave
(bad)
mov
mov
add
loopne
aam
pushf
jg
and
call
mov
mov
cmp
push
cmc
inc
into
fwait
sti
(bad)
stos
mov
in
pop
jmp
test
mov
movs
int
xlat
mov
jnp
cmps
mov
jecxz
icebp
out
imul
stc
inc
loopne
out
bound
adc
mov
cld
scas
jg
dec
int
xchg
jns
dec
daa
jnp
in
or
inc
jl
(bad)
dec
cld
fcomp
and
(bad)
pop
mov
(bad)
shl
dec
add
jg
xor
stos
cmp
out
mov
dec
inc
mov
xchg
test
(bad)
add
xor
sbb
mov
es
pop
add
jp
outs
push
dec
inc
inc
push
aam
pusha
ret
sahf
fldcw
push
pop
xchg
xor
leave
(bad)
sbb
fcomp
add
or
mov
loopne
ds
mov
mov
push
cld
call
mov
js
sbb
lea
(bad)
fisttp
jnp
fldenv
xchg
xor
pop
into
xchg
jle
xchg
cmp
and
fucomip
ins
loop
cmp
cmps
fisttp
cmp
daa
(bad)
cwde
or
xchg
out
test
call
bound
jmp
pop
or
push
mov
test
popf
out
jnp
lock
mov
arpl
outs
xor
push
cmc
xor
push
fdiv
xor
jmp
(bad)
repz
sbb
scas
dec
jecxz
xor
sti
mov
popf
or
push
cmps
loop
fmul
arpl
gs
xchg
push
dec
neg
das
or
dec
cli
xor
shl
xchg
stc
push
pop
xor
fnstcw
sbb
test
cmp
fidivr
and
lock
push
dec
cmp
and
push
popa
xchg
movs
sti
(bad)
sub
xchg
fs
add
cdq
mov
sub
repnz
cwde
cmp
in
cmp
sub
push
mov
xchg
lahf
adc
imul
add
pusha
mov
ins
xchg
daa
cmp
adc
int3
in
inc
test
out
cmp
scas
cmp
mov
push
inc
jecxz
and
jbe
ss
pop
sahf
mov
(bad)
pushf
jecxz
test
aaa
xlat
icebp
cmp
cmp
mov
mov
imul
dec
xor
test
dec
ror
inc
je
mov
inc
mov
jecxz
sbb
mov
xchg
mov
jb
addr16
add
mov
(bad)
imul
out
mov
push
and
call
dec
neg
daa
and
jl
mov
inc
outs
xor
jge
adc
adc
pop
js
ret
jae
jae
test
(bad)
stc
cmc
clc
pushf
xchg
cdq
cdq
test
adc
in
cmps
arpl
jo
movs
(bad)
xchg
imul
and
ret
into
lods
sbb
dec
cmp
(bad)
adc
adc
repz
pop
jge
add
pop
adc
enter
mov
bound
xchg
inc
fst
test
scas
daa
jle
popa
jmp
inc
ficom
shl
call
inc
sbb
push
std
jnp
mov
mov
mov
loopne
push
test
cs
ja
cmp
xchg
mov
cwde
arpl
rcl
out
out
repnz
xor
xchg
xlat
push
sub
add
daa
cmps
dec
dec
xor
xchg
inc
add
fwait
inc
and
add
(bad)
aaa
ins
repnz
jl
mov
lods
movs
retf
cs
inc
shr
mov
pop
push
shr
test
cmps
imul
sub
iret
test
mov
stc
mov
pop
push
adc
ss
shr
xlat
add
and
sbb
sbb
in
std
cwde
or
jbe
das
stos
xchg
loopne
arpl
sub
mov
mov
push
ja
neg
dec
test
out
aad
das
ins
pop
mov
lea
pop
leave
dec
jl
add
xlat
jmp
mov
cmp
jo
mov
push
ret
ss
pop
mov
adc
or
push
push
mov
xchg
sbb
push
jno
mov
sbb
es
and
clc
inc
cmp
mov
js
sbb
shl
xor
ret
ror
xor
push
mov
(bad)
lock
outs
sti
add
aad
add
shl
push
std
mov
repnz
mov
or
or
mov
pop
js
push
leave
outs
fidiv
rcr
test
stos
imul
sub
push
push
cmp
movs
dec
leave
push
xstore-rng
cmps
add
sbb
outs
(bad)
adc
clc
pop
cli
dec
cli
jbe
mov
xchg
mov
ror
inc
sbb
inc
cmp
repz
cmp
ds
mov
cmp
dec
inc
cwde
sub
cmp
xchg
rcl
push
push
xor
mov
xchg
out
sti
std
xor
jne
inc
nop
adc
outs
lock
mov
xor
pop
in
cmp
jno
in
mov
push
inc
adc
dec
bound
sbb
test
data16
cli
ins
inc
js
mov
retf
push
repnz
adc
pop
div
out
cdq
(bad)
rcr
inc
stos
retf
leave
dec
arpl
ja
adc
mov
sub
rcr
int
mov
out
dec
jle
cdq
dec
push
inc
arpl
call
pop
frstor
repz
imul
xor
pop
ins
out
lods
jmp
or
out
and
test
mov
sub
mov
inc
cmp
cmps
mov
or
loop
xor
mov
push
mov
std
daa
in
sub
lea
cmp
rcl
out
sbb
jns
xor
rcl
xchg
inc
and
xor
les
ror
mov
pop
and
in
jecxz
sqrtps
pushw
xchg
jnp
adc
leave
(bad)
adc
mov
xchg
in
icebp
(bad)
xor
cmp
adc
das
sbb
mov
nop
hlt
mov
imul
dec
repz
enter
sbb
pop
pop
bt
aas
mov
retf
ins
test
aaa
inc
loopne
ins
push
sbb
mov
outs
lods
adc
add
and
push
pop
push
push
rcl
repnz
retw
and
mov
sbb
mov
xchg
mov
jo
outs
retf
jo
cmp
mov
jmp
jmp
hlt
lock
jle
cwde
pop
pop
mov
mov
and
jnp
int
(bad)
sbb
cmp
test
pop
cmp
xor
arpl
enter
dec
xor
jbe
or
jmp
adc
push
test
stc
jge
daa
retf
div
push
lods
xor
mov
std
jno
aam
pop
pushf
mov
jns
add
sbb
jb
inc
push
pop
pop
jp
mov
push
(bad)
xor
inc
push
mov
pop
loop
and
pop
adc
mov
ret
inc
xor
test
ins
call
pop
shr
rcr
inc
aad
xor
sbb
xchg
inc
test
sub
mov
mov
dec
adc
add
adc
and
add
ja
xchg
cld
repnz
dec
push
rcl
dec
xchg
mov
adc
sub
movs
ret
lahf
add
mov
adc
pushf
leave
ss
mov
mov
jge
cmp
movs
and
mov
cmps
push
inc
mov
imul
shr
and
mov
ins
ja
mov
bound
aam
mov
inc
movs
daa
xor
and
inc
sti
mov
in
fmul
cmps
xchg
mov
leave
ins
adc
js
rol
neg
push
jle
add
inc
cld
stc
dec
(bad)
and
mov
addr16
(bad)
push
xor
hlt
loop
fdiv
mov
adc
xchg
mov
imul
fldcw
mov
inc
xchg
fcom
sub
inc
lock
mov
pop
push
adc
cmp
and
xlat
ret
adc
aas
cmp
mov
shl
mov
fbstp
xchg
xor
int
push
mov
adc
pop
inc
nop
and
mov
jg
cmp
jp
mov
gs
mov
xchg
repnz
es
movs
cmp
cmps
lock
or
or
test
js
jp
adc
dec
sub
(bad)
mov
adc
and
(bad)
iret
pop
lods
shr
cdq
mov
out
test
cwde
push
sbb
movs
xchg
sub
sbb
adc
scas
xor
stos
mov
cs
ins
daa
cmp
mov
or
loop
pop
pop
sub
cmp
pop
ja
and
out
div
sub
dec
in
ret
(bad)
fnstenv
idiv
sbb
(bad)
call
aad
xchg
xchg
mov
dec
xchg
icebp
push
jno
dec
push
das
inc
clc
stc
jecxz
out
sbb
es
adc
xor
add
and
aas
xchg
add
stc
sahf
jmp
cmps
xchg
cmps
daa
or
add
loop
add
sub
jp
pop
ficom
push
inc
sahf
loopne
xchg
and
jo
jnp
call
clc
sbb
out
and
mov
mov
inc
arpl
movs
fisubr
cld
mov
test
shl
or
jp
push
or
cwde
out
push
jg
imul
mov
jo
sar
das
dec
dec
mov
das
mov
loop
or
jecxz
dec
cmp
loop
jp
adc
popa
jmp
and
fwait
xor
movs
aas
fistp
nop
xchg
push
stos
sub
arpl
xor
mov
and
stc
add
jbe
repz
add
test
jne
and
(bad)
jl
popf
imul
fcomp
xchg
fbld
xor
lock
xchg
adc
cmp
aaa
(bad)
sbb
retf
pop
bound
or
cmp
pop
test
cmp
push
jmp
xchg
mov
cmp
jo
jmp
push
xor
dec
jg
das
sub
xchg
fadd
imul
jecxz
ja
sahf
push
mov
sahf
xchg
push
or
aam
push
aam
test
outs
inc
cdq
sub
mov
fwait
dec
hlt
out
pusha
push
sbb
inc
arpl
xor
pusha
div
jno
mov
jg
sub
addr16
pop
xor
jge
punpckldq
and
push
imul
add
adc
xchg
xor
sub
mov
adc
movs
xchg
fucomi
(bad)
bound
dec
fsub
rol
repnz
sub
jns
and
add
lds
stos
sub
pop
cmps
xchg
cmps
jne
dec
jmp
xchg
xchg
mov
mov
enter
jo
pop
or
xor
call
call
imul
jle
retf
(bad)
ins
dec
and
loope
aas
push
(bad)
ins
mov
mov
cmc
jecxz
mov
mov
out
mov
(bad)
bound
and
movs
shr
sub
lahf
outs
imul
push
das
pop
repz
(bad)
or
inc
icebp
cmp
ret
fs
push
ds
shr
outs
test
inc
pop
scas
test
je
scas
not
jp
ret
scas
jmp
int3
inc
xchg
out
stc
or
adc
sub
jns
ret
dec
fucomip
fidiv
inc
sub
shr
movs
ret
dec
mov
jecxz
push
push
pop
pushf
adc
or
mov
imul
mov
jp
or
popa
out
mov
xor
ja
ja
bound
jae
retf
fsub
int3
popa
sbb
mov
pop
inc
inc
or
jmp
jmp
scas
in
cmp
aaa
adc
and
add
push
in
int3
(bad)
push
cmp
shr
dec
pushf
cmp
ins
fidiv
mov
(bad)
dec
in
outs
sbb
adc
jecxz
xor
in
sub
xor
sbb
jmp
push
dec
clc
push
pop
outs
inc
inc
repz
xchg
mov
in
fs
adc
stc
movs
push
cwde
mov
clc
jmp
jmp
rcl
hlt
leave
push
retf
lahf
int
out
dec
or
mov
inc
xor
clc
std
mov
sbb
push
leave
xor
jb
cs
inc
push
call
dec
add
rcl
sbb
jmp
out
pop
mov
push
pusha
ss
imul
mov
cmp
jge
cmp
inc
inc
mov
dec
sahf
or
js
in
push
xchg
or
popa
loop
dec
out
movs
(bad)
mov
popa
jg
in
xor
cwde
ins
xchg
outs
add
cmp
iret
push
mov
xchg
addr16
cwde
and
out
sbb
je
and
nop
test
mov
pop
mov
dec
test
xor
cmps
sbb
cld
xor
mov
lea
out
xchg
jl
sbb
mov
fist
scas
cmp
ds
push
inc
fistp
fidiv
xor
or
loopne
mov
xor
js
fs
mov
mov
ss
mov
daa
sti
adc
mov
icebp
or
xlat
mov
mov
xchg
lea
(bad)
or
push
mov
popa
iret
xor
push
push
stos
dec
repnz
fdiv
fild
adc
mov
inc
dec
(bad)
loope
add
mov
out
test
push
dec
mov
jg
inc
sahf
hlt
cmc
fdiv
inc
ds
cmp
inc
add
(bad)
jge
push
addr16
psadbw
and
add
add
dec
jae
mov
adc
mov
bound
sbb
scas
and
loopne
lahf
nop
add
push
jge
push
cld
je
and
jg
sbb
dec
sub
inc
mov
mov
lahf
cmps
adc
addr16
dec
pop
mov
xchg
cmps
mov
jl
xchg
mov
(bad)
xor
mov
fisub
or
pushf
push
mov
aam
adc
fimul
xchg
leave
mov
loopne
ffree
in
call
mov
les
dec
push
push
or
cmps
dec
daa
jae
test
cwde
aaa
test
xchg
arpl
rcr
lods
nop
pop
test
das
fcomp
mov
pusha
inc
mov
sbb
xchg
or
push
cmps
sbb
dec
dec
ja
add
ins
(bad)
jmp
add
and
ins
pop
mov
xchg
or
sbb
daa
pop
loope
popf
imul
ja
mov
cmp
imul
mov
pushf
jecxz
add
cmp
aas
(bad)
mov
cmps
push
mov
adc
inc
test
(bad)
addr16
mov
imul
push
jae
int3
sub
ins
pop
rol
in
xlat
mov
mov
je
cmp
sbb
sar
mov
cdq
movs
(bad)
int3
les
cmp
ret
retf
scas
sti
push
lock
call
pop
or
pushf
lods
shr
and
xor
push
cmp
pop
jl
or
cmps
(bad)
out
lahf
xor
sbb
push
cli
xor
jno
dec
xor
pop
pop
scas
dec
test
cwde
pop
and
push
outs
jmp
pop
aaa
inc
and
mov
fld
or
addr16
mov
shl
jmp
mov
fwait
add
cld
pop
cmp
lea
add
fsubr
bsf
leave
cmp
mov
mov
sub
pop
popa
cmps
push
into
test
pop
loopne
jnp
shl
imul
xor
cmp
imul
push
jg
daa
or
add
out
adc
sbb
data16
mov
icebp
cmp
mov
out
push
jno
fidiv
xor
mov
pop
cs
jns
pusha
mov
je
rcr
enter
jle
ret
mov
inc
cmps
sub
sbb
sbb
cmp
adc
es
sbb
mov
test
mov
scas
mov
push
(bad)
in
pop
ins
aam
in
fdiv
data16
and
bound
inc
leave
jb
ja
sub
in
retf
mov
ficomp
retf
popf
xchg
pop
mov
hlt
cmp
adc
scas
mov
dec
xchg
and
dec
fstp
sbb
in
je
data16
retf
mov
les
sti
push
xor
xchg
test
push
cdq
sar
adc
stc
daa
(bad)
call
sbb
pop
sbb
pop
fidivr
cs
out
test
and
xchg
dec
xor
sub
xchg
mov
rep
push
enter
(bad)
(bad)
data16
cmp
add
and
jecxz
shr
push
mov
jp
pop
stos
mov
fcom
addr16
xchg
jno
push
lods
aam
sbb
sbb
hlt
sbb
std
ficom
push
sti
rcl
jnp
dec
adc
sbb
out
adc
adc
setne
xchg
(bad)
imul
daa
push
jbe
cwde
imul
dec
out
mov
jge
aas
and
dec
xchg
retf
not
nop
pop
mov
imul
mov
xchg
inc
(bad)
push
das
jne
inc
dec
push
jle
adc
add
or
xor
add
xor
or
mov
inc
mov
sbb
imul
outs
popa
mov
and
dec
pop
jle
push
cmc
std
in
dec
jge
fwait
test
(bad)
out
aaa
mov
inc
ret
sub
ret
dec
mov
repz
(bad)
mov
(bad)
adc
cmp
pop
neg
cmp
sbb
iret
imul
retf
jg
test
xlat
in
dec
sub
aam
push
inc
repz
mov
test
int3
pop
pop
xor
or
(bad)
into
fdiv
test
inc
call
inc
add
outs
or
sbb
pop
imul
out
sub
sub
xchg
neg
mov
adc
aaa
mov
jmp
inc
in
loopne
imul
imul
fnstsw
sbb
sub
mov
in
and
dec
(bad)
rcl
mov
lock
clc
cmp
cmp
enter
xchg
pop
out
fmul
shl
cmp
sti
cmp
jno
clc
push
pop
cld
xchg
or
xor
adc
cwde
outs
xchg
fwait
push
or
(bad)
mov
push
out
xchg
xor
mov
xchg
lds
enter
imul
and
fs
jg
push
xchg
fstp
push
outs
cmps
ins
cwde
shl
loopne
dec
sub
fisub
loope
je
jmp
fidiv
jmp
jno
(bad)
mov
cmc
lds
bound
pop
ret
inc
ret
loope
fdivr
sar
jg
xchg
aam
scas
pusha
sub
in
or
imul
xor
push
push
mov
mov
outs
shl
je
sti
(bad)
in
pusha
inc
fidivr
movs
in
pop
sti
mov
mov
enter
add
inc
push
cli
arpl
mov
shl
inc
fisttp
pop
ror
sti
dec
jnp
inc
(bad)
call
cmp
in
dec
and
cdq
mov
inc
sub
xor
push
mov
cmp
pop
add
call
outs
jne
daa
fisubr
leave
lahf
add
jnp
sbb
aad
cmps
call
and
lock
test
icebp
cs
xor
cmps
jp
mov
jno
and
ret
jo
ficom
push
push
add
jo
inc
jae
mov
das
scas
jmp
add
fld
or
mov
bound
or
sbb
scas
xchg
dec
jle
movs
loope
rcr
jle
repz
mov
in
xchg
cmc
cmp
test
and
mov
movs
test
cmp
dec
das
jg
sbb
cmp
push
jo
aad
sbb
fdiv
push
loope
mov
cmp
mov
sar
mov
ret
sbb
fiadd
call
xchg
in
add
ins
add
dec
fmul
iret
xchg
push
jl
sahf
andnps
arpl
rol
inc
hlt
out
or
cli
fadd
retf
mov
sti
fldcw
push
add
lds
inc
inc
aaa
bswap
jae
mov
and
xor
das
cmp
(bad)
jle
jae
and
loop
leave
call
add
xor
gs
inc
dec
inc
push
add
js
inc
adc
mov
out
mov
aas
out
jmp
shl
fisttp
and
cwde
sub
pop
sub
add
imul
mov
out
stc
or
xchg
pusha
mov
sbb
lods
sti
xchg
scas
(bad)
jg
aam
ret
movs
pusha
nop
mov
push
fstp
add
xor
in
sti
and
fs
mov
ins
sbb
xchg
loope
sahf
aaa
retf
sbb
inc
xchg
add
(bad)
call
loope
add
icebp
add
inc
and
inc
les
mov
mov
or
dec
cmp
aaa
cld
xchg
sub
cdq
gs
popa
push
(bad)
repz
xchg
add
pop
cmps
stos
mov
data16
cmp
mov
inc
movs
frstor
and
sub
mov
out
pop
cmp
and
test
mov
add
div
dec
imul
jecxz
dec
add
es
sub
pshufw
or
call
push
(bad)
inc
mov
fdivr
and
jmp
mov
inc
jg
rcl
pop
push
dec
mov
mov
ss
xor
mov
ror
sti
imul
call
cmp
int3
jg
movs
xor
lds
sahf
inc
pop
call
pop
(bad)
inc
jg
xlat
aam
cmp
shl
popa
xchg
arpl
das
push
mov
jg
inc
lahf
sbb
mov
stos
mov
mov
out
in
push
or
ja
adc
pop
je
outs
data16
(bad)
outs
test
or
push
test
mov
push
mov
adc
cmps
stos
dec
xchg
mov
pop
cmps
pop
push
and
lock
jp
aad
jb
sub
loopne
sbb
pop
repnz
inc
cmp
xchg
cmps
mov
add
jmp
loope
test
pop
mov
inc
mov
cmp
inc
fistp
jno
jmp
cmps
bound
(bad)
push
mov
or
repnz
add
aad
pop
mov
sub
ins
add
mov
pop
repz
inc
retf
stos
adc
adc
cld
popf
mov
add
scas
jno
pop
mov
call
add
mov
fbstp
daa
ss
adc
sbb
rol
and
pop
jg
push
imul
test
dec
push
push
jns
fdivr
xor
ret
aas
aas
pop
jecxz
add
hlt
adc
jo
cld
inc
jp
mov
stos
mov
cmp
shl
daa
mov
jnp
fstp
mov
clc
iret
jmp
les
in
sub
retf
retf
sub
nop
cmp
popa
or
jno
pop
mov
ja
gs
(bad)
mov
in
mov
jns
pop
sbb
dec
lods
xlat
and
arpl
rcl
loope
xchg
sbb
(bad)
xor
push
jbe
gs
dec
call
jge
ins
xchg
add
cmp
retf
iret
lahf
mov
in
add
mov
out
sub
inc
and
mov
icebp
mov
mov
mov
(bad)
mov
movs
xor
sub
or
mov
aas
xchg
test
mov
push
(bad)
and
retf
adc
mov
pop
mov
xchg
jne
fstp
cmps
add
xor
mov
loope
mov
les
shl
sti
fld
fnstenv
sub
sub
rcr
fld
setg
mov
test
dec
ss
mov
xlat
test
stos
in
cwde
hlt
sbb
add
std
xor
cmps
push
dec
rcl
(bad)
mov
mov
paddq
shr
push
mov
dec
int
(bad)
leave
mov
ins
js
inc
add
rol
jno
aad
cmp
push
repnz
adc
and
scas
icebp
mov
loop
fld
mov
sub
xchg
cmp
lea
mov
inc
hlt
sahf
xchg
sub
xchg
sbb
fbstp
dec
inc
pop
push
mov
stos
or
inc
out
xor
pop
movs
push
stos
neg
call
pop
lahf
fcomp
adc
test
hlt
add
ror
icebp
adc
xor
sub
add
mov
jmp
xchg
rol
mov
dec
dec
out
pusha
push
leave
xor
mov
fisttp
ja
test
(bad)
push
mov
faddp
fdivr
inc
pusha
sub
jl
loope
lock
jl
movs
imul
mov
dec
pushf
jecxz
mov
push
mov
fwait
push
test
call
jp
mov
call
or
mov
pop
jae
lock
rcr
and
stos
clc
dec
movs
pop
aam
cmp
loop
xchg
imul
ret
lds
pop
scas
jl
repnz
or
aad
loope
add
xchg
shl
and
dec
out
jge
push
(bad)
stos
(bad)
shl
cmps
movs
sti
test
shl
out
sbb
pop
mov
inc
pop
xchg
xor
and
mov
cs
mov
dec
add
and
add
lods
mov
push
out
jl
sar
lea
push
inc
mov
xchg
inc
xchg
mov
mov
adc
xchg
dec
mov
xchg
cmp
push
push
mov
jno
or
mov
scas
nop
or
inc
shr
ins
mov
xlat
inc
pop
imul
retf
or
xor
xchg
pushf
mov
ret
add
jo
lods
dec
dec
inc
lahf
add
jnp
sub
aas
out
pop
xor
jns
and
sub
xor
jo
in
xchg
push
mov
and
sub
push
and
call
pop
jg
gs
sbb
pop
test
rol
call
fsub
jg
out
or
push
push
pushf
mov
sub
mov
cmps
xor
xlat
(bad)
cli
fs
inc
xchg
mov
jbe
mov
into
sbb
and
and
sbb
sbb
sub
cld
pop
pop
adc
les
push
fstp
aaa
push
out
(bad)
mov
add
fwait
and
jns
(bad)
js
jl
ficom
dec
(bad)
movs
inc
xor
hlt
xor
loope
ss
mov
jno
cmps
mov
mov
cmp
enter
(bad)
mov
sub
jno
shl
xchg
xchg
jb
push
bound
mov
dec
into
in
pop
cmps
ficom
out
mov
or
inc
add
mov
push
ds
nop
adc
sub
stos
jno
push
mov
mov
test
cmps
jbe
sbb
add
aaa
js
pushf
mov
test
je
jmp
arpl
aaa
jmp
jo
push
nop
mov
lock
mov
and
cmp
push
out
loope
dec
(bad)
jmp
arpl
imul
repz
ins
adc
aad
xchg
fmul
inc
pop
outs
xlat
mov
outs
inc
sbb
pop
out
cwde
jle
aam
movs
int3
shl
or
ja
jno
adc
add
dec
mov
dec
cwde
data16
in
jns
les
pop
fucomip
shl
(bad)
xchg
push
xchg
pop
popw
iret
cmp
lds
outs
sbb
push
adc
nop
out
mov
xor
icebp
mov
jae
stos
mov
es
xchg
xor
add
mov
das
in
pop
pop
scas
popa
and
pop
jae
xchg
sbb
popf
xor
mov
scas
push
fwait
ret
fs
lock
dec
fcomp
(bad)
cdq
test
xchg
sahf
adc
pop
mov
jbe
xor
ret
ret
xor
inc
push
sbb
rcr
lods
push
cs
nop
dec
push
(bad)
fdiv
leave
popa
test
in
fidivr
cld
xchg
call
popf
lods
sbb
clc
add
mov
dec
push
stos
jns
jg
cld
mov
(bad)
dec
(bad)
dec
adc
mov
fsubr
repnz
leave
sti
add
mov
mov
(bad)
ror
mov
xchg
push
or
sar
or
xchg
xchg
inc
jecxz
bound
scas
shr
fmul
adc
dec
cs
into
in
test
xor
pop
(bad)
mov
(bad)
ja
test
dec
ror
sbb
xchg
mov
add
or
push
pop
loopne
repz
dec
push
inc
jnp
or
(bad)
ret
aas
adc
cld
lds
bound
mov
ins
out
cmp
mov
pusha
idiv
mov
loopne
mov
push
int3
pop
mov
and
aad
data16
inc
jne
dec
repz
ds
imul
sbb
sub
adc
xlat
pop
dec
pop
nop
mov
movs
jp
aaa
xchg
xchg
and
hlt
xchg
mov
(bad)
jns
pop
(bad)
xor
mov
and
lahf
mov
outs
(bad)
pop
jmp
iret
ja
sahf
push
data16
sti
outs
or
cmp
adc
(bad)
jl
cmp
add
test
push
xchg
stc
mov
xchg
loopne
(bad)
stos
inc
xchg
repnz
pop
xor
out
into
sub
retf
rcr
(bad)
or
fcmovb
mov
mov
imul
xchg
mov
shl
pop
dec
cwde
in
and
pop
fucomip
call
idiv
push
sbb
mov
push
in
movs
mov
aaa
mov
or
daa
scas
shr
or
fwait
mov
imul
in
jne
dec
cmps
inc
xchg
in
out
in
or
test
adc
jbe
or
mov
outs
sbb
fbld
pop
mov
test
paddsw
inc
mov
sub
pop
lahf
add
xor
cwde
das
mov
ins
rcl
pop
sbb
jge
ret
xchg
cli
mov
aam
nop
(bad)
jecxz
dec
xchg
cmp
fiadd
ret
mov
nop
scas
cmp
je
pop
daa
cmp
idiv
xchg
in
shl
imul
nop
add
mov
sahf
fwait
(bad)
cmps
enter
cmc
cmp
nop
jg
pop
retf
jns
xor
sbb
mov
in
mov
out
pop
xor
xchg
aaa
xchg
aas
push
cs
mov
cmc
push
mov
xor
mov
adc
push
mov
and
shl
fsubr
inc
jl
xchg
inc
mov
ret
fisttp
sbb
and
and
mov
clc
pop
sbb
fs
mov
push
cmp
ins
push
and
pop
push
rol
jmp
adc
aad
pop
retf
aad
xlat
xchg
fstp
stc
(bad)
mov
mov
out
test
data16
xchg
mov
cmp
inc
cmp
mov
arpl
mov
adc
push
(bad)
fistp
inc
js
mov
jle
inc
idiv
lea
(bad)
fsub
fidiv
push
jno
dec
xchg
rcr
xchg
adc
xor
je
sub
int
xchg
and
jmp
dec
inc
mov
sbb
xlat
adc
jnp
cmp
inc
mov
cmp
dec
adc
jnp
sbb
or
inc
popa
lods
ret
repnz
jmp
jb
add
mov
and
push
sbb
sub
ror
mov
inc
ins
push
and
aam
xor
(bad)
xor
xor
out
sub
adc
ins
lds
mov
inc
fisub
movs
xchg
call
dec
in
sbb
push
sbb
dec
std
jno
jl
push
mov
sbb
pusha
pop
das
xchg
cdq
int3
out
inc
xchg
dec
ja
fsub
push
inc
loop
xlat
sub
push
pop
pop
loop
and
jo
xchg
pop
jns
(bad)
ror
jecxz
inc
dec
adc
push
jns
mov
in
js
test
cmp
pusha
mov
cdq
(bad)
fisub
movs
pop
adc
out
in
shr
cmp
enter
jns
mov
or
mov
ror
and
sub
xor
xchg
mov
pushf
xchg
inc
int
out
mov
imul
push
mov
fdivr
pop
jo
xchg
sbb
cdq
xchg
pop
add
xchg
popa
shr
mov
or
mov
js
call
adc
inc
xchg
xor
stos
repz
sbb
mov
xor
stos
cmc
ficom
or
(bad)
fadd
int3
cmps
jmp
clc
lock
adc
xchg
cmp
adc
adc
or
add
sbb
push
(bad)
jmp
mov
(bad)
inc
jb
dec
aam
xor
stc
pop
mov
adc
ins
jmp
fs
nop
rcr
mov
ins
pop
das
jle
xchg
xchg
cmc
pop
mov
inc
mov
cmp
stos
shr
fcomp
pop
add
inc
je
mov
pop
mov
mov
leave
daa
add
aad
mov
mov
or
or
mov
sub
mov
ret
sub
fwait
test
xlat
sti
jg
push
pop
stc
call
call
push
mov
sbb
rol
retf
(bad)
imul
mov
sbb
dec
je
inc
sbb
cmp
jmp
pushf
loope
jle
(bad)
and
sti
ffree
data16
fsubr
les
xor
add
lahf
fistp
pushf
sbb
jnp
lahf
or
xchg
and
mov
xchg
test
(bad)
ror
jno
mov
movs
retf
or
cmps
dec
cld
retf
sti
jae
cmps
dec
inc
icebp
dec
ret
out
inc
xor
adc
xor
(bad)
stos
and
addr16
mov
adc
or
test
xchg
jne
cmps
outs
inc
jl
jnp
dec
retf
imul
jb
rcl
dec
push
mov
pop
aad
xchg
dec
push
retf
fstp
mov
mov
mov
sbb
xor
loopne
aaa
imul
jno
les
pop
jb
(bad)
mov
std
push
out
or
test
push
and
or
dec
aaa
mov
shl
loope
xor
in
test
aad
cmp
jns
xchg
and
add
lock
repz
lock
dec
and
cmp
clc
jne
and
lds
xor
adc
add
sti
dec
iret
jb
add
sbb
iret
call
popf
rol
fnstsw
out
inc
movs
pop
popa
rcr
loopne
stos
sbb
(bad)
and
int3
adc
mov
in
in
sub
jmp
dec
stos
imul
jge
inc
gs
add
arpl
gs
and
out
mov
mov
sub
imul
jmp
test
xor
jmp
pop
call
sar
pop
and
cwde
dec
pop
lock
pop
(bad)
inc
xor
mov
mov
mov
loope
popf
adc
fdiv
mov
push
adc
loopne
cmp
dec
mov
or
mov
mov
bound
push
(bad)
vmwrite
scas
jne
jle
ins
inc
ja
mov
into
mov
ins
or
sub
ret
sub
xor
rep
das
mov
enter
pop
pop
push
cmp
add
sahf
jge
gs
out
or
popf
adc
push
loope
xchg
popa
(bad)
sub
push
pop
not
push
(bad)
loopne
add
mov
fld
daa
mov
ror
(bad)
in
rol
dec
add
retf
imul
hlt
inc
cdq
xchg
and
mov
daa
outs
push
sbb
adc
pop
or
icebp
call
je
es
inc
imul
repz
pusha
iret
pop
mov
aam
xchg
ss
push
mov
inc
xor
xor
add
dec
mov
movs
push
pop
inc
(bad)
and
adc
out
mov
sub
adc
mov
and
lds
pop
dec
out
pop
or
popf
in
test
pop
lods
jne
cli
jmp
xor
mul
mov
or
cmc
lock
sub
and
jo
into
dec
je
xchg
(bad)
pop
and
xor
dec
adc
xchg
(bad)
ficomp
mov
xchg
xchg
xchg
cmp
repnz
cmps
test
and
or
push
in
repnz
dec
adc
adc
cmp
xor
movs
imul
rol
in
sbb
ret
or
scas
jbe
fwait
add
int
jmp
jno
jae
push
sbb
fdivrp
fimul
mov
sub
ret
aad
jmp
inc
dec
shr
sub
scas
repz
pop
xchg
or
arpl
sbb
pusha
push
cmps
cmp
addr16
imul
jnp
push
xor
aas
cmc
sbb
or
test
dec
mov
int3
(bad)
lds
test
pop
rol
pop
ror
inc
push
add
xor
sbb
popa
std
mov
test
lahf
pop
xor
cmp
mov
or
stos
aam
sub
adc
mov
pop
(bad)
lahf
sub
loope
inc
mov
dec
and
outs
enter
(bad)
and
sub
jb
jl
dec
leave
loope
fwait
push
xchg
pop
dec
fild
popa
loop
jno
std
aam
stc
ja
sub
(bad)
jmp
int
xchg
jmp
jecxz
xchg
out
mov
mov
popa
fld
sbb
outs
inc
pop
push
push
ss
or
pop
nop
add
imul
cld
aas
ins
mov
xlat
mov
aad
mov
dec
xor
push
std
mov
push
push
mov
imul
call
mov
movs
popa
ds
inc
mul
push
into
pop
cmp
and
jno
call
out
in
adc
outs
movs
mov
mov
pop
adc
jle
test
mov
adc
adc
add
mov
push
call
repz
jmp
retf
test
mov
jl
and
xchg
aam
ret
push
data16
sbb
(bad)
xchg
sub
or
dec
inc
sbb
xchg
nop
pop
rol
dec
sbb
cmps
jae
jo
mov
adc
push
push
inc
dec
pop
jae
test
jmp
(bad)
in
mov
ds
adc
retf
out
call
rcl
cmp
lods
retf
pop
sub
cs
inc
aas
adc
jmp
pop
pop
scas
pop
sub
xchg
jle
mov
(bad)
dec
fwait
loop
aad
xor
add
in
pop
cmp
and
mov
stc
leave
mov
test
add
cmp
jl
call
test
fs
stos
mov
sbb
outs
cdq
ds
aad
fwait
mov
jns
dec
jns
test
push
mov
std
pop
mov
xchg
push
cmc
ret
loop
mov
mov
in
into
jg
int3
pop
sub
fcomp
jmp
ret
pop
push
lock
push
and
shr
int3
imul
loope
js
jmp
pop
sbb
fnstsw
mov
rcl
xchg
stos
stos
mov
pusha
push
daa
sbb
inc
sbb
rol
xlat
je
clc
das
push
pop
mov
ror
fwait
sbb
cmp
jb
movs
push
xor
lock
mov
pop
xor
out
fsubr
fisub
cmps
aaa
stc
popf
push
mov
jns
add
aad
mov
(bad)
and
packuswb
mov
xor
mov
out
sub
inc
mov
sbb
sub
pop
or
(bad)
cmp
add
shl
add
int3
aaa
mov
jmp
iret
mov
(bad)
xor
repz
retf
xlat
push
cmp
jb
push
aad
je
pop
test
jmp
jne
add
imul
dec
pop
adc
jmp
imul
ds
xor
adc
sub
and
int
add
pusha
mov
xchg
add
jp
adc
xlat
push
jo
std
pop
mov
or
imul
fcom
jno
outs
mov
das
call
mov
or
mov
mov
mov
or
cs
call
cmp
xlat
in
loope
in
out
popf
fnsave
cld
jecxz
dec
inc
cmps
sar
inc
and
mov
leave
ror
or
fisub
je
adc
call
xor
mov
or
test
pop
dec
mov
push
inc
cld
aam
pushf
idiv
fidivr
mov
add
outs
inc
cmp
jns
stc
mov
(bad)
and
call
adc
push
adc
inc
aaa
fimul
call
xor
xchg
or
xchg
add
call
or
popf
cmp
or
or
loope
cwde
(bad)
dec
or
das
inc
lgdtd
fistp
sub
jns
mov
out
test
lea
cmps
mov
adc
push
push
mov
sub
es
bound
stos
div
ins
cmps
call
pop
scas
mov
rcr
rcr
mov
pop
test
mov
cmps
jne
in
sub
xchg
lods
and
cmp
aam
push
pop
xchg
ds
sbb
sub
icebp
fcomp
stos
gs
in
stos
and
push
cmp
xor
pop
scas
pop
sub
ror
iret
cmp
mov
test
mov
pop
mov
mov
ja
push
ja
fmul
dec
data16
inc
xor
retf
cmp
push
ins
(bad)
xchg
pop
lods
das
(bad)
cld
cmp
push
and
inc
shl
push
pusha
mov
pop
dec
push
push
and
jae
xor
inc
imul
cmps
sbb
cmp
mov
add
ret
ja
(bad)
mov
lods
sub
adc
fwait
cmps
rcl
push
test
cld
xor
and
and
sub
iret
add
adc
cmp
fs
mov
inc
mov
(bad)
xlat
pop
(bad)
push
xchg
xchg
mov
sti
sub
cdq
fcomi
jge
shr
test
sub
inc
mov
mov
test
pop
mov
stc
fnstcw
retf
ret
mov
or
xchg
scas
clc
shl
leave
mov
jle
cmp
fnsave
sub
mov
inc
in
inc
xor
lahf
or
and
push
xchg
sar
adc
sbb
movs
test
(bad)
jb
sbb
loop
into
int
(bad)
mov
sbb
inc
cli
test
inc
cmc
xchg
mov
stc
loopne
fld
sbb
adc
sti
pushf
dec
cmp
mov
into
add
neg
add
in
leave
mov
cmc
int3
mov
push
adc
cmp
aam
or
int3
test
push
hlt
xor
sub
jno
inc
shl
adc
mov
xchg
fimul
ss
mov
int
jae
cmps
out
out
repnz
retf
lock
pop
or
xchg
jle
in
mov
xor
data16
add
sbb
and
outs
push
cld
retf
xor
call
lods
and
(bad)
shl
cdq
scas
push
cli
cld
mov
sbb
jg
xor
loope
push
fisub
not
sub
lea
pop
add
loopne
sti
pop
jecxz
lods
jbe
std
lods
mov
mov
jo
adc
push
adc
in
adc
dec
pop
and
xchg
xor
mov
xchg
xor
ret
jmp
cmps
ret
inc
movs
cmp
push
out
xor
popa
(bad)
mov
or
add
int3
jmp
mov
shl
lea
sub
mov
lahf
pop
int3
in
inc
mov
aaa
xchg
rcr
xchg
pop
inc
shl
outs
xchg
mov
lock
cwde
dec
inc
xchg
sbb
call
(bad)
lods
jge
mov
mov
dec
cs
mov
retf
mov
aas
sub
lods
lock
cs
sbb
lds
ja
cdq
cli
mov
gs
and
inc
or
les
jecxz
das
gs
jmp
repz
jecxz
xor
pop
mov
xchg
inc
je
ret
cld
xchg
stc
xchg
and
fabs
shl
or
mov
and
cmp
es
push
mov
lods
rcl
cmp
dec
imul
and
fist
and
scas
inc
xchg
fwait
je
sub
shr
(bad)
push
loopne
jbe
add
sbb
fwait
dec
stos
lods
cmp
ret
jns
jmp
mov
xchg
push
xadd
ds
jnp
mov
test
leave
(bad)
push
xlat
hlt
jbe
std
sbb
movs
scas
or
jmp
arpl
cmc
pop
pusha
repz
sbb
xchg
cs
pop
mov
pop
mov
pop
xlat
mov
push
jge
neg
dec
sbb
xchg
adc
test
movs
std
sbb
std
jge
dec
mov
jns
loope
and
in
imul
sbb
cmp
push
in
xchg
jb
(bad)
int3
xlat
add
jmp
push
pushf
xchg
shl
push
lods
data16
out
movs
inc
xchg
movs
rol
loopne
jg
mov
cmp
stos
lock
test
fbld
ds
(bad)
aam
inc
xchg
lods
pop
mov
les
mov
(bad)
cwde
data16
and
or
jmp
cwde
lock
(bad)
and
adc
iret
das
adc
mov
int
jbe
mov
test
popf
mov
mov
bound
test
pop
aaa
pop
mov
ret
test
inc
aam
push
or
pop
add
bts
dec
fnstsw
nop
aam
mov
cmp
mov
cdq
xchg
cld
mov
pop
or
mov
movs
cmp
jb
std
lahf
and
(bad)
cmc
mov
mov
popf
xchg
xchg
cmp
pop
lea
cld
jecxz
loopne
adc
into
jb
fmul
out
int3
rcr
cmp
mov
dec
xor
jmp
xor
and
cmp
aam
or
jmp
dec
leave
pusha
jg
cwde
jbe
xor
shl
cmp
js
pop
sub
mov
add
popw
dec
test
sbb
test
outs
out
(bad)
jae
cmps
mov
xchg
int3
mov
cmp
add
inc
arpl
push
xlat
push
sbb
inc
adc
sbb
mov
mov
adc
xchg
aam
push
mov
and
orps
fistp
aam
je
jg
scas
push
or
(bad)
fucom
push
dec
icebp
nop
push
cmps
push
cmp
sub
jge
fsub
call
into
xchg
sub
pop
sub
dec
repnz
add
pop
sub
pop
add
test
shr
jb
(bad)
xor
inc
or
or
add
mov
push
jle
cli
or
dec
mov
mov
adc
adc
bound
(bad)
adc
movs
add
(bad)
mov
call
add
mov
mov
cmp
aam
cmp
sar
mov
lods
adc
push
mov
sub
jo
addr16
adc
cmp
dec
mov
sbb
popf
sbb
jg
gs
in
push
pop
jecxz
mov
shr
dec
inc
jns
mov
dec
mov
dec
and
adc
sar
and
rcl
enter
pop
or
push
cli
dec
cmp
xchg
fild
inc
fild
dec
in
push
dec
jno
adc
imul
mov
out
ss
cmps
mov
ja
out
das
mov
pop
scas
int
lods
jnp
hlt
pop
aad
pushf
call
push
in
pop
jg
jle
mov
rcr
sbb
divps
sti
movs
je
jle
data16
mov
cmp
inc
rol
or
push
dec
push
add
and
push
push
call
in
cmp
(bad)
lds
cmps
mov
gs
int3
xor
sub
xor
outs
retf
adc
or
imul
test
push
adc
pop
cmp
and
jp
and
nop
sub
xor
cdq
jl
fwait
mul
dec
adc
push
in
mov
dec
out
test
scas
lods
jle
outs
sbb
xchg
push
ret
js
sub
push
movs
jge
dec
stos
push
pop
into
clc
push
leave
mov
jmp
(bad)
imul
jle
dec
cmp
fsubrp
adc
sbb
loop
xchg
sub
into
out
xchg
fistp
fidiv
mov
jp
rcl
jg
and
outs
mov
cmp
repnz
movs
mov
or
sbb
daa
mov
cmp
es
in
cli
cmp
jp
cmp
adc
js
loopne
pop
push
add
in
inc
(bad)
icebp
push
bound
mov
imul
or
test
jne
in
jge
test
mov
add
pushf
iret
scas
mov
push
sahf
adc
scas
loope
jb
ret
and
inc
cmc
sbb
pop
adc
stos
scas
cli
mov
jmp
sub
shl
lods
mov
popf
shl
iret
hlt
je
repz
or
pushw
lds
mov
out
(bad)
jo
(bad)
mov
pop
arpl
add
mov
loopne
pusha
push
pop
cmp
dec
jno
xchg
dec
push
xchg
fld
cdq
addr16
or
sbb
fadd
cs
jbe
in
jge
cmp
or
sub
xchg
inc
je
div
jle
push
movs
loopne
shr
cmp
jno
aad
(bad)
fdivr
cld
xor
xchg
or
pop
pop
adc
ins
aaa
in
push
rcr
aam
mov
call
inc
loope
ds
xchg
push
or
cwde
dec
(bad)
lahf
fimul
and
push
mov
cwde
test
pop
add
jbe
lock
out
sbb
retf
rcr
in
icebp
xchg
mov
lods
enter
inc
adc
or
or
nop
lods
mov
sbb
lahf
call
shl
sub
test
sbb
out
div
inc
pop
sti
int3
push
fdiv
xchg
mov
dec
xchg
scas
std
mov
iret
pusha
mov
push
iret
add
adc
in
mov
mov
adc
pop
and
ret
and
cmc
mov
cmp
scas
cwde
sbb
cmp
int3
shl
neg
push
call
xchg
aad
mov
and
jmp
call
xchg
xchg
out
or
in
jmp
mov
(bad)
jb
pop
mov
and
je
xor
mov
mov
xchg
inc
jle
scas
ret
ins
push
push
push
ds
cmc
js
loop
or
xlat
js
pusha
sar
stos
out
in
push
dec
xchg
or
and
mov
inc
lahf
and
in
mov
mov
mov
or
xor
or
in
ror
jecxz
cmps
mov
retf
cmp
ficom
jg
sub
sar
adc
pop
push
xchg
bnd
xchg
out
jno
push
lds
in
ja
pop
(bad)
addr16
push
jg
(bad)
(bad)
jge
sbb
push
cdq
xchg
push
dec
nop
push
cs
retf
loop
sub
pop
or
test
sar
iret
sar
jno
dec
call
push
push
(bad)
call
js
outs
adc
scas
dec
stc
xchg
in
test
or
sbb
xchg
popf
mov
xor
std
pushf
jnp
xor
daa
jle
cmp
sahf
sbb
addr16
call
xchg
in
mov
test
mov
push
cmp
jbe
int
and
nop
mov
mov
jb
push
dec
fadd
push
sbb
cmps
call
mov
rcr
out
cmp
dec
jnp
jmp
jle
in
adc
rcl
mov
aas
sbb
mov
and
(bad)
cdq
in
dec
mov
fist
pop
pop
dec
jo
mov
and
mov
(bad)
cmp
xchg
dec
adc
xlat
mov
pop
push
fist
push
nop
or
and
and
das
pop
popa
add
test
mov
mov
retf
test
fs
aam
repz
out
jno
pop
mov
(bad)
shl
cmp
lock
stc
test
jbe
out
mov
sbb
test
movs
mov
(bad)
pop
movs
push
in
mov
adc
mov
ja
or
pushf
dec
adc
out
jge
hlt
lods
hlt
jbe
pop
not
outs
adc
dec
push
cmp
pop
hlt
dec
push
ret
lahf
and
adc
dec
scas
scas
xor
es
xor
lea
sbb
outs
pop
xor
cmp
jmp
outs
mov
(bad)
mov
shl
das
call
cmp
mov
test
inc
(bad)
out
sub
adc
add
call
repz
test
push
fld
retf
ins
repz
jnp
retf
push
(bad)
mov
xchg
mov
cli
sbb
push
xor
jl
ret
aaa
mov
cmp
xor
pop
(bad)
or
in
aam
outs
sbb
cdq
cmp
cmp
add
dec
mov
adc
xor
and
push
sub
add
cmp
test
jbe
jmp
push
es
push
pushf
rcr
pop
cmp
mov
in
pop
dec
jbe
jbe
xor
dec
jge
xchg
mov
add
mov
js
sbb
pushf
popa
repnz
dec
jmp
jo
push
sbb
arpl
sub
movs
aad
fidiv
sbb
gs
pop
inc
loopne
ret
pop
cld
mov
dec
pop
dec
push
jbe
cmp
pop
fstp
fdivr
fwait
mov
adc
and
xor
fucomi
popa
inc
jge
mov
push
sbb
test
lock
mov
das
in
fsubr
sub
stos
not
add
or
cmp
pop
repz
mov
jno
jnp
xchg
cmp
lea
pop
cmp
movs
push
fstp
out
leave
inc
sub
icebp
lock
enter
clc
sbb
in
repz
push
push
mov
lds
jo
sbb
push
xor
or
push
cmp
call
lods
pop
arpl
or
xchg
in
test
gs
push
xor
rcr
daa
push
push
or
pop
mov
in
ret
add
call
ds
fiadd
(bad)
iret
clc
add
mov
int3
sub
scas
sbb
cmp
outs
jp
push
cmps
xchg
shl
mov
enter
mov
stos
call
fiadd
test
call
push
data16
scas
scas
(bad)
dec
outs
aaa
stos
or
push
(bad)
sbb
int
retf
xor
in
cmp
ds
mov
idiv
shl
lea
sbb
push
out
movs
repnz
nop
repnz
jnp
adc
push
outs
in
inc
add
repz
push
dec
add
mov
in
sti
cwde
pop
nop
int
clc
arpl
sub
popf
(bad)
adc
jae
retf
dec
mov
add
sub
push
sbb
test
(bad)
push
add
jb
ret
mov
xchg
pusha
jmp
ret
mov
in
stos
and
push
xchg
mov
or
fisttp
mov
cmps
js
test
xrelease
scas
mov
fldenv
(bad)
movs
imul
adc
cmp
adc
sub
inc
fsub
pop
push
mov
shl
adc
add
leave
or
cmp
push
pop
jecxz
mov
add
jmp
in
je
dec
mov
sti
mov
or
mov
or
lds
cmps
(bad)
xchg
retf
into
aaa
xchg
mov
sbb
fs
es
jbe
dec
jp
mov
stc
enter
popa
dec
popf
lea
sbb
out
mov
out
popf
cmp
adc
lea
inc
hlt
jmp
std
repz
mov
xchg
xlat
and
sub
add
xor
mov
sub
imul
dec
mov
jmp
push
sti
dec
fnstcw
add
clc
retf
arpl
cmc
and
stc
fs
and
gs
push
stc
add
cdq
lea
dec
clc
xchg
cwde
fstp
mov
stos
sub
mov
pushf
mov
xchg
adc
add
xchg
hlt
fisttp
mov
outs
add
push
or
mov
enter
stc
pop
int3
jmp
push
mov
pop
push
loopne
push
add
ss
mov
jp
jl
arpl
(bad)
or
pop
add
and
out
sub
ja
outs
aad
push
popfw
gs
add
mov
repnz
fimul
jo
outs
push
cld
push
adc
pop
or
ret
loope
xchg
mov
call
ret
dec
xchg
stos
pop
mov
adc
jmp
xor
cwde
mov
dec
mov
nop
and
jns
mov
mov
test
push
xchg
jg
xlat
sub
adc
cmp
bound
mov
retf
mov
sbb
(bad)
jnp
fs
sbb
cld
arpl
dec
dec
es
jbe
dec
jmp
xlat
inc
cs
pop
adc
push
in
pop
scas
sbb
dec
and
jae
or
push
or
into
push
push
data16
sbb
(bad)
mov
outs
mov
push
xor
dec
and
mov
push
push
push
fbstp
(bad)
xor
dec
int
push
pop
lock
(bad)
jns
and
sbb
sbb
stos
data16
enter
inc
fnsave
call
sub
ds
repz
mov
lods
pop
push
(bad)
fld
sub
push
push
imul
mov
mov
in
push
jp
xchg
int
outs
call
fist
sub
ror
leave
repnz
leave
cmp
repnz
dec
xchg
mov
sub
int
mov
dec
and
js
dec
add
adc
add
mov
bnd
rcl
cld
xchg
ror
xchg
pop
rcl
mov
mov
mov
outs
pop
jnp
xchg
aad
fld
mov
mov
cmp
cdq
jo
fbstp
das
das
push
mov
jge
sub
sub
scas
ss
sbb
imul
fild
cs
mov
enter
and
mov
outs
ror
(bad)
leave
and
shr
jp
and
pop
and
xor
xchg
fimul
fst
test
sets
jp
jge
nop
xchg
popa
add
rcr
sbb
call
retf
add
cdq
movs
(bad)
cld
test
mov
loope
repnz
nop
and
mov
rcr
mov
dec
in
bound
xchg
aaa
or
ins
push
jno
mov
cli
arpl
std
jnp
nop
inc
and
fdiv
mov
shl
nop
idiv
aad
xor
pop
cmps
dec
and
push
lahf
xor
xchg
adc
sahf
mov
dec
pop
push
shl
fwait
mov
jo
fsubr
lods
mov
repz
out
cmp
test
and
xchg
lds
movs
mov
adc
rcr
je
add
clc
lds
jae
jmp
push
inc
mov
mov
xchg
aam
jecxz
dec
add
popa
int
mov
je
ss
jb
jbe
xchg
mov
cdq
or
push
ret
pop
cdq
mov
xor
icebp
in
xor
int3
ss
add
mov
int
cli
push
dec
std
mov
cdq
pop
ss
push
in
jo
in
inc
jg
loop
aaa
cmp
pop
movs
aas
fstp
adc
scas
mov
test
mov
cmp
jle
xchg
mov
dec
jo
adc
inc
cmp
or
imul
push
xchg
pop
mov
mov
pop
adc
mov
ds
sub
pop
test
or
pusha
test
cmp
sbb
movs
js
cmps
jne
xor
sbb
lods
mov
cmp
mul
ss
ins
push
lahf
cdq
fbld
(bad)
neg
ja
or
movs
retf
loop
in
mov
xchg
xchg
sub
xor
mov
shr
inc
pop
mov
js
in
xlat
sbb
iret
test
in
(bad)
pop
dec
mov
mov
push
popf
int3
xchg
mov
adc
pusha
das
or
loopne
mov
mov
adc
xchg
out
stos
aam
pop
xchg
mov
mov
in
jae
nop
scas
mov
jne
(bad)
hlt
(bad)
pop
jns
adc
push
xchg
cwde
mov
dec
retf
mov
jl
test
mov
or
xchg
(bad)
scas
or
adc
cmp
mov
pop
data16
cld
(bad)
cmps
ror
dec
adc
nop
inc
repnz
push
loope
push
add
test
sub
pusha
(bad)
out
std
test
jne
(bad)
loopne
mov
xor
pop
daa
add
jl
sbb
in
mov
icebp
dec
inc
sub
out
arpl
popa
frstor
sbb
(bad)
dec
push
fsub
xor
test
test
rol
in
ins
mov
inc
iret
or
lds
mov
cmp
mov
sahf
add
fwait
sbb
xchg
mov
mov
in
jno
sbb
cmp
jbe
sbb
push
dec
push
in
mov
(bad)
add
jnp
mov
pop
rcr
clc
pop
sbb
push
or
sbb
dec
sub
mov
xchg
cmp
mov
aam
fnsave
fsub
out
jle
push
fsub
sar
dec
mov
pop
fld
mov
inc
inc
sbb
inc
iret
enter
or
ret
sub
dec
das
into
inc
xchg
xor
cmp
fstp
sub
adc
movs
or
add
scas
dec
ins
aad
add
or
cli
out
test
clc
mov
mov
pop
adc
lock
retf
and
pop
push
cdq
inc
mov
mov
and
iret
imul
xor
push
int3
mov
dec
mov
sbb
leave
fs
fnstenv
out
cmp
xchg
hlt
pop
fld
pop
push
push
out
jp
outs
aam
xor
lds
and
jl
out
xlat
(bad)
jmp
retf
aas
(bad)
add
les
lds
fwait
test
call
je
clc
je
adc
add
inc
jb
adc
inc
jp
xor
mov
gs
mov
sbb
imul
sub
add
pushf
ja
push
repnz
fcomp
pop
cmp
push
dec
mov
mov
mov
aad
mov
cld
xchg
mov
int3
ret
dec
xor
or
data16
dec
outs
sub
in
les
xor
ss
loopne
mov
push
sub
mov
imul
push
fistp
je
shl
jo
adc
pushf
inc
and
pop
mov
ins
popa
call
mov
popfw
call
xchg
or
scas
mov
and
test
xor
ss
(bad)
movs
sahf
xchg
stos
add
out
mov
lahf
push
fidiv
fidiv
or
cmp
popa
sbb
aaa
dec
(bad)
sbb
add
data16
loope
push
adc
mov
cmc
jge
or
mov
mov
es
scas
sbb
xrelease
mov
addr16
pop
fwait
pop
and
add
sbb
sbb
retf
sub
jnp
cmp
adc
imul
mov
mov
inc
iret
sar
in
and
pop
jg
ins
mov
call
xchg
mov
cmp
add
jns
and
cwde
shr
push
add
xor
outs
mov
push
cmp
pop
push
pop
out
(bad)
jo
div
inc
fdiv
push
inc
sbb
jno
stos
sbb
out
and
add
xchg
xor
in
sbb
jecxz
mov
(bad)
jp
sbb
xor
push
xor
mov
mov
sar
dec
sbb
(bad)
int
in
add
idiv
movs
pop
in
and
les
mov
popf
cdq
push
push
pusha
add
push
mov
in
push
xor
push
repz
pop
mov
add
mov
in
cmps
adc
adc
test
mov
std
cmp
push
xor
fidiv
pop
icebp
repz
pop
push
jo
sar
pushf
cmp
js
pusha
retf
inc
jo
mov
add
add
sub
fsub
and
add
pop
and
aaa
arpl
scas
iret
sub
cmps
aad
cld
push
mov
pop
mov
dec
outs
jl
(bad)
or
xchg
xchg
and
mov
sub
aad
sbb
adc
pop
xchg
sahf
sub
mov
add
shl
ficomp
cmc
sbb
pop
ret
shr
inc
cmps
pop
xchg
xchg
ins
retf
nop
and
(bad)
loope
pop
jle
adc
movs
sub
or
scas
adc
pop
jp
movs
or
ror
movs
push
dec
xchg
pop
adc
mov
das
(bad)
pop
hlt
sbb
cmp
xor
bound
and
loop
adc
mov
adc
inc
push
mov
adc
mov
adc
jae
(bad)
ret
jle
jl
xor
push
sahf
and
xor
jne
fstp
sti
and
ins
(bad)
out
adc
and
add
cli
cwd
and
stos
mov
scas
adc
repz
rol
es
mov
fisttp
test
and
lea
das
fdivr
enter
ja
(bad)
adc
mov
iret
lahf
dec
push
loop
add
sub
leave
mov
xor
cs
fdiv
inc
retf
inc
add
pop
retf
stc
cmp
add
add
ror
repnz
pop
cmc
(bad)
movs
movs
jp
setp
jns
sub
iret
ja
sub
das
lods
sbb
sbb
loop
jbe
ja
push
inc
sbb
or
inc
inc
mov
and
mov
xor
push
cmp
in
mov
inc
xchg
pop
push
xchg
into
mov
adc
(bad)
fnsave
inc
add
outs
mov
pop
icebp
(bad)
out
pop
ds
push
fbld
lahf
test
push
fidivr
sbb
rol
or
repz
retf
add
sub
cmp
or
xlat
imul
dec
xchg
lds
hlt
cmp
mov
cmp
repz
pop
fcom
jns
mov
mov
fnstenv
movs
xor
dec
jns
jns
or
push
pop
test
mov
cmc
out
pop
or
gs
push
fcmove
aas
mov
and
xor
or
dec
int3
out
add
outs
(bad)
lahf
fmul
idiv
pop
mov
pop
in
push
mov
ss
jne
dec
(bad)
lds
pop
adc
stos
pop
dec
test
add
ror
cmps
jle
adc
dec
pushf
in
add
jae
jne
stos
ins
or
sub
addr16
je
int3
adc
shl
jns
ja
xor
xchg
mov
mov
adc
fdivr
enter
xchg
ror
cli
cmp
inc
sbb
pushf
sbb
jecxz
sahf
jle
push
or
mov
scas
mov
lods
mov
test
loopne
fistp
push
je
imul
xchg
add
mov
add
sar
push
ror
cmp
mov
mov
lods
out
mov
mov
mov
xchg
xlat
or
xchg
les
call
mov
in
sub
aas
loope
jge
movs
and
cmps
inc
mov
fisubr
stos
xor
dec
lds
mov
and
xor
adc
retf
repnz
jae
add
int
dec
in
mov
cmp
int3
jecxz
rol
pop
xor
adc
fwait
in
jl
movs
call
sbb
push
dec
sbb
hlt
cmp
loop
test
push
pop
(bad)
aad
das
fimul
inc
jno
inc
cmps
rcr
sbb
sbb
jmp
adc
xchg
fimul
stos
pop
jmp
mov
fwait
mov
cmp
jp
ret
jnp
sti
push
add
ins
jecxz
enter
xor
sub
aas
pop
in
inc
inc
fcomp
cmp
lods
jl
sahf
test
xchg
out
push
js
jg
in
mov
pushf
sub
sub
hlt
sbb
jl
or
repnz
mov
repz
into
in
aas
lahf
xor
push
sub
blsic
stos
sbb
cmc
ret
pop
sbb
cli
fisub
enter
addr16
(bad)
xchg
mov
inc
dec
loop
ss
mov
add
add
out
stos
mov
jp
in
push
inc
loopne
out
daa
pop
pop
inc
outs
xchg
in
ins
aas
xor
adc
mov
mov
add
pusha
aam
(bad)
jo
shl
scas
pop
jmp
outs
call
rcl
das
pop
je
cmps
pop
mov
mov
sub
pop
daa
mov
out
dec
or
hlt
dec
pop
xchg
mov
xor
mov
jbe
mov
inc
lods
in
ja
pop
stos
jo
or
jo
inc
(bad)
mov
popa
push
(bad)
xor
lods
jge
pop
loope
xchg
pop
adc
pop
es
mov
cmp
mov
mov
cmps
xchg
jmp
dec
sbb
push
(bad)
cmp
das
mov
pop
ret
cwde
mov
add
jne
test
mov
movs
iret
retf
push
test
icebp
test
cmp
push
and
mov
mov
sbb
loopne
adc
test
mov
mov
shl
icebp
jge
adc
jl
mov
adc
loop
into
stc
cmp
jge
push
lds
movs
and
lods
and
pop
or
xchg
mov
jmp
push
loop
sub
test
shl
ins
movs
sub
xchg
out
dec
lock
push
mov
into
daa
push
retf
xchg
cmp
jbe
hlt
mov
pushf
ror
dec
(bad)
into
into
push
in
cmc
(bad)
leave
mov
retf
test
xchg
ins
js
addr16
cmc
adc
lea
aas
jmp
rcl
inc
inc
sub
adc
xor
jmp
or
int3
xchg
(bad)
(bad)
adc
retf
sbb
icebp
inc
push
lea
and
dec
cmp
dec
push
rcl
rol
dec
xor
shl
test
fist
dec
dec
pop
adc
cmp
lock
test
pusha
inc
mov
jge
xchg
mov
jge
inc
das
push
sub
inc
mov
or
dec
xor
xor
mov
sbb
call
gs
fnsave
lea
add
cmps
sub
imul
mov
push
mov
ins
push
sti
pop
dec
inc
sub
jbe
fild
out
loope
cmc
(bad)
fwait
push
xchg
xchg
lahf
and
push
pusha
dec
test
cmps
cmc
les
fisttp
dec
inc
shl
inc
inc
pop
mov
aam
mov
test
test
into
outs
xor
xchg
mov
pop
mov
xchg
pop
mov
bound
dec
call
xlat
stos
lea
gs
mov
lods
imul
mov
jecxz
enter
mov
mov
sbb
les
imul
(bad)
pusha
or
je
xchg
leave
xchg
inc
mov
xchg
fcomp
mov
mov
dec
or
jmp
out
mov
out
xor
lahf
sub
xor
push
mov
dec
mov
(bad)
push
xor
rcl
mov
stos
and
mov
mov
fadd
int3
in
test
scas
sub
test
and
dec
mov
test
mov
int3
cli
cmp
aam
push
sub
retf
jle
mov
icebp
inc
push
xchg
in
mov
sub
fld
lock
stos
shl
ja
mov
rcl
xchg
popf
jle
aam
jge
cmp
or
push
push
fisub
jl
sub
jp
adc
xchg
dec
sbb
in
pop
ret
push
shr
jl
xor
inc
dec
outs
stc
mov
push
test
sbb
nop
out
pop
leave
mov
jne
adc
sti
retf
fldz
push
aaa
cmp
aas
iret
in
in
xor
inc
inc
jecxz
getsec
pop
icebp
pop
jp
movs
(bad)
clc
in
mov
mov
sub
fisubr
jmp
outs
jecxz
js
fadd
test
aad
mov
cwde
sub
stos
inc
push
pop
shl
(bad)
xor
gs
xor
hlt
popa
(bad)
adc
(bad)
in
xor
movs
xor
pop
pop
stos
retf
pop
push
dec
stos
out
or
sti
xchg
xchg
and
sub
es
ror
xor
cld
jmp
fdivr
pop
repnz
jno
pusha
loopne
mov
and
mov
pop
cs
je
inc
sahf
inc
gs
dec
inc
xchg
dec
or
mov
in
mov
(bad)
adc
or
push
(bad)
(bad)
pop
or
jmp
mov
(bad)
imul
hlt
and
les
pop
imul
adc
jno
xor
adc
sub
jns
int3
aad
aad
push
add
inc
in
inc
out
cmp
(bad)
out
(bad)
sbb
inc
xchg
aam
xchg
into
lock
loop
push
enter
retf
mov
in
ja
imul
fsub
xchg
jo
in
adc
mov
push
nop
test
jmp
pushf
movs
xor
test
test
aad
adc
or
push
inc
das
jne
adc
outs
ret
test
clc
xlat
in
mov
inc
ds
mov
xchg
or
lods
es
mov
cmp
adc
cwde
ret
cmps
ret
das
lahf
push
inc
call
inc
retf
lahf
or
cli
out
daa
imul
pop
test
repnz
pop
add
and
xor
(bad)
(bad)
std
cmps
or
mov
cmp
sbb
push
bound
inc
or
or
repnz
sub
add
inc
or
and
mov
(bad)
push
mov
jecxz
push
int3
stos
mov
xchg
dec
ja
sub
daa
push
jmp
xor
adc
jb
lds
jecxz
mov
inc
stos
xor
enter
and
xchg
mov
outs
out
retf
cmps
fwait
loop
add
sub
and
push
pop
(bad)
sahf
lea
add
jns
sbb
ret
mov
imul
loopne
ss
ins
dec
add
mov
(bad)
sub
enter
cs
ins
cmps
neg
push
call
jae
out
fistp
cmp
retf
pop
or
jb
out
and
xor
je
ja
cs
mov
sbb
add
fadd
cmp
inc
mov
outs
and
adc
fbstp
mov
js
sar
(bad)
mov
pop
sbb
add
inc
mov
and
jl
adc
mov
mov
mov
addr16
add
fnsave
mov
inc
xlat
ret
shl
lock
jecxz
cmp
call
jmp
add
xchg
xchg
add
stc
inc
dec
jl
rcr
shr
scas
gs
inc
dec
cmps
shl
sbb
push
out
sbb
sbb
(bad)
repnz
mov
cmp
in
lds
in
popa
mov
stc
mov
(bad)
xor
fld
mov
pusha
out
cmp
cmp
ja
arpl
jns
cmp
pushf
inc
sahf
xor
cmp
dec
imul
mov
fcom
inc
pop
imul
xor
cmp
or
mov
mov
repz
cmps
mov
cmp
pop
pop
add
js
pusha
push
(bad)
jmp
jb
dec
jp
adc
inc
lods
leave
or
fild
push
imul
jno
fnstenv
xor
pop
mov
cmp
dec
mov
pop
pusha
ror
mov
mov
adc
lea
hlt
loopne
cmp
mov
mov
les
pop
test
mov
loopne
out
cmp
inc
dec
push
xlat
cmp
test
stos
in
loope
scas
adc
test
loopne
dec
dec
mov
adc
daa
push
jne
xchg
xchg
(bad)
in
jno
adc
add
je
out
aaa
out
pop
(bad)
out
aaa
cmp
cdq
mov
mov
xor
sar
jp
pushf
retf
add
mov
mov
jmp
lahf
outs
shl
pop
sub
repz
test
and
loop
call
cmps
ja
fldcw
mov
or
mov
push
or
lea
mov
pop
jle
xor
push
sbb
lods
aaa
pop
sar
aaa
je
lds
jmp
lahf
mov
sub
xchg
loope
dec
ret
dec
jne
(bad)
neg
retf
pop
add
fwait
push
push
out
lahf
pop
mov
jno
fdivrp
xchg
shl
push
pop
lods
ret
lds
and
in
pop
repnz
lahf
fnstsw
inc
outs
enter
jecxz
add
loope
mov
mov
pop
add
mov
iret
dec
mov
push
push
cld
dec
or
popf
pop
push
dec
mov
pop
ss
outs
call
fwait
pushf
fistp
push
sub
jns
leave
and
gs
aad
sub
pop
xchg
jo
add
pop
pusha
inc
cmp
push
inc
xchg
inc
sub
pop
mov
jle
cwde
test
idiv
mov
mov
inc
ins
adc
mov
mov
in
push
dec
test
pop
sbb
sahf
icebp
push
out
loope
or
jmp
mov
(bad)
and
popa
arpl
mov
les
out
xrstors
pop
dec
ins
cmp
in
lods
loope
imul
cwde
xor
scas
leave
mov
pop
mov
adc
lods
popf
lods
sbb
push
lahf
call
inc
lahf
ret
jns
push
call
lods
xchg
xchg
xchg
lahf
sbb
sbb
xchg
push
out
popa
jecxz
push
sbb
adc
or
mov
pop
push
sbb
or
in
adc
cwde
loopne
call
mov
and
imul
test
arpl
add
jmp
les
mov
fstp
add
sub
mov
rol
push
test
sub
push
cs
mov
movs
in
and
pop
iret
add
mov
call
mov
push
sub
jge
dec
(bad)
dec
mov
call
sbb
or
loopne
push
mov
cmps
cmp
dec
or
cmp
cli
cmp
jbe
adc
in
push
mov
fild
call
sbb
cmc
imul
sub
push
nop
mov
aas
repnz
jae
stc
iret
jmp
add
call
sub
sar
shl
cwde
jmp
call
jnp
fnstenv
out
leave
jbe
inc
retf
int
xchg
in
mov
push
jbe
fsubrp
dec
movs
and
and
fld
dec
lock
iret
sub
(bad)
clc
fnstsw
inc
je
pop
(bad)
cmp
push
mov
inc
sub
fmulp
hlt
(bad)
(bad)
jno
daa
in
xor
fwait
test
adc
(bad)
mul
ins
and
adc
dec
sub
mov
addr16
push
fwait
xor
adc
cmps
dec
xchg
int
jmp
ins
fdiv
jle
pop
lahf
mov
xor
clc
or
xlat
jl
pop
ds
xchg
sbb
test
scas
xor
mov
lds
jo
inc
ret
mov
push
mov
dec
xor
aas
add
pop
movs
inc
dec
es
ds
jae
sub
mov
push
inc
pop
push
popf
jb
cmps
pusha
and
leave
pushf
pop
rcl
fwait
mov
xor
in
cmp
lods
xchg
jl
and
outs
cmp
lahf
call
mov
mul
in
mov
fbstp
adc
gs
mov
xchg
mov
inc
jg
and
shr
adc
dec
cmp
push
aaa
out
jnp
adc
lods
scas
sbb
fdivr
inc
shl
cmp
mov
xchg
push
jp
je
test
daa
ins
mov
test
in
sbb
xchg
das
mov
fidiv
add
mov
cmps
ins
fsub
fldcw
mov
cld
or
adc
cdq
inc
aad
dec
push
rol
repz
ret
rol
mov
fsub
jne
push
inc
daa
sbb
sbb
out
cmp
and
cs
inc
dec
push
xchg
call
pop
or
xchg
ja
jp
pop
pop
cmp
mov
xchg
cwde
mov
imul
movs
inc
loop
mov
jae
ins
test
icebp
in
pop
jb
add
std
(bad)
xchg
data16
addr16
icebp
cdq
enter
in
jbe
shl
int
mov
adc
sbb
mov
cmp
inc
push
cmp
ja
inc
jmp
aam
rcl
sub
in
adc
pop
out
shl
fwait
and
mov
mov
repnz
sub
test
js
mov
xlat
(bad)
faddp
adc
push
mov
pop
fdivr
push
loope
and
sahf
push
push
push
das
mov
mov
sub
ds
pop
call
ret
mov
and
mov
xchg
mov
bound
adc
cmp
xchg
xlat
xor
sar
xchg
xor
push
popf
fs
(bad)
adc
mov
mov
(bad)
push
leave
sbb
jno
out
pop
cmp
dec
mov
pop
fs
in
into
jmp
mov
popf
adc
mov
add
and
and
mov
mov
push
popa
adc
call
xchg
ins
xchg
sbb
mov
push
jge
lods
in
bound
out
in
jp
(bad)
pop
mov
mov
das
mov
scas
sti
xor
push
and
in
aaa
sahf
repz
lea
pop
repnz
sbb
push
inc
ds
mov
sbb
hlt
call
xchg
jno
in
jle
pop
xor
sahf
and
outs
xchg
adc
adc
les
sbb
mov
mov
ins
xor
mov
push
xchg
jnp
mov
and
mov
call
(bad)
xor
(bad)
loop
(bad)
loope
dec
jge
aad
mov
leave
push
fsubr
pop
sbb
or
es
out
push
ret
jae
repnz
cmp
imul
js
je
pop
mov
xchg
out
(bad)
js
jae
jae
pop
mov
sub
arpl
jle
mov
aaa
fsubrp
xor
imul
mov
ss
xor
mov
ror
fistp
repz
xchg
push
push
sbb
loopne
add
mov
icebp
int3
mov
mov
jg
push
(bad)
sar
popf
mov
test
adc
and
add
jl
or
cld
push
jle
sbb
jg
scas
mov
mov
aad
mov
dec
out
jae
pop
sub
pusha
scas
cmp
int
scas
jg
adc
dec
mov
jno
mov
or
call
lods
sbb
fnstsw
gs
mov
inc
bound
sti
mov
int3
pop
and
jmp
movs
cmps
mov
push
(bad)
and
jle
and
and
mov
cs
pop
add
shr
lahf
push
inc
jae
sbb
(bad)
je
sbb
es
sahf
xchg
data16
sbb
int
test
sti
pusha
ins
push
lods
xor
and
(bad)
or
pop
mov
stos
rcl
mov
adc
adc
sub
ret
lea
cmp
push
loopne
stc
mov
clc
xchg
rol
in
mov
lahf
out
in
int
mov
push
test
es
cwde
dec
pop
xor
push
psllq
stos
fild
dec
jne
pop
ins
ins
pusha
sbb
ds
jle
loope
es
pop
xor
adc
stos
sub
pop
add
and
sbb
je
(bad)
leave
call
mov
inc
or
outs
mov
rol
mov
pop
jmp
cmp
and
add
aaa
pop
mov
rol
cwde
inc
(bad)
test
dec
in
pushaw
push
shl
xlat
pop
cmp
push
iret
mov
or
xor
(bad)
sbb
inc
movs
shr
pushf
inc
enter
push
mov
lods
jbe
imul
sub
pop
int
xor
xchg
jge
jp
in
(bad)
jnp
pop
and
adc
daa
mov
mov
nop
pop
jns
add
fist
clc
or
repz
popa
out
lods
pop
add
ret
in
inc
sbb
push
inc
jno
add
mov
lea
dec
add
mov
pop
xchg
fisttp
imul
mov
popf
inc
push
(bad)
pushf
dec
xor
repz
or
sbb
add
push
xor
jg
jno
add
dec
xchg
in
pusha
clc
stc
pop
repnz
into
dec
into
pop
jge
add
fwait
icebp
pop
popa
ins
fidiv
mov
push
ds
cld
out
(bad)
std
pop
inc
or
sti
inc
out
xchg
mov
mov
das
and
out
out
adc
and
mov
push
lods
sbb
pop
aam
fisubr
jl
arpl
inc
ds
test
in
jge
mov
mov
xor
shl
push
add
push
lods
fdivr
push
jb
mov
xchg
out
stc
inc
lock
shl
inc
fmul
ins
cs
mov
xchg
inc
jo
xor
mov
cmp
or
inc
dec
repz
dec
cwde
ins
js
ins
nop
mov
sbb
mov
xchg
mov
inc
bound
test
add
fsubr
sbb
into
sub
pop
cmp
ss
pop
cmc
repz
cmps
call
hlt
shr
xor
jnp
iret
fcmovnb
test
leave
inc
xor
aas
bound
push
pop
test
out
shl
sub
in
(bad)
jecxz
xchg
mov
lock
shr
mov
retf
inc
popa
jmp
jg
push
sub
div
loopne
or
pop
inc
mov
xchg
js
test
rcr
mov
dec
sbb
mov
pop
and
add
dec
ds
push
add
inc
dec
xor
inc
aas
and
mov
add
xlat
xchg
sahf
mov
mov
(bad)
push
dec
std
mov
xor
mov
pop
(bad)
jg
ficomp
mov
mov
std
or
mov
xchg
pop
or
test
hlt
repnz
movs
(bad)
mov
(bad)
and
mov
xor
ja
out
mov
sbb
pop
xchg
xor
call
fsub
xchg
movs
jge
pop
xor
cmp
inc
or
call
mov
jnp
add
push
lahf
je
xor
cwde
test
clc
or
mov
mov
scas
mov
xchg
stos
(bad)
and
pop
sar
push
repz
outs
sbb
int
dec
in
test
adc
mov
cdq
adc
mov
mov
ds
mov
aas
ss
inc
fidiv
bound
int3
adc
dec
jnp
or
push
adc
mov
adc
add
stc
ins
fcomp
push
adc
mov
or
jmp
out
xlat
shr
das
xchg
loop
xor
sub
js
arpl
rcr
or
xchg
sahf
data16
xchg
xor
ficomp
fsubr
les
sahf
jae
mov
retf
xor
enter
add
adc
sti
cmp
into
and
mov
out
movzx
xchg
pushf
push
push
push
sti
out
cmp
pop
push
push
or
fdivr
xchg
data16
and
adc
push
(bad)
and
std
sub
mov
js
add
loope
leave
fwait
jmp
push
or
push
pop
(bad)
in
(bad)
mov
cmp
in
pop
mov
jmp
sbb
jmp
shl
push
mov
sub
mov
or
test
push
out
std
sbb
shr
adc
dec
xchg
stos
pop
sbb
in
mov
lds
sub
pop
sub
cmp
dec
add
jae
push
push
xor
hlt
(bad)
cdq
das
mov
test
retf
pop
in
repz
xchg
test
jge
jns
jle
xor
ret
test
cmc
sub
aam
cmp
and
jno
enter
jmp
push
push
outs
in
jb
sub
xor
les
push
idiv
enter
mov
push
fimul
pusha
aad
mov
call
mov
mov
xchg
mov
inc
movs
test
cmp
or
inc
aaa
loope
dec
cdq
movs
(bad)
call
scas
stos
in
add
cs
ins
adc
cmps
mov
pusha
popf
dec
adc
cmp
jmp
sti
jns
aaa
cmp
xchg
vmovups
mov
jl
mov
dec
mov
inc
adc
mov
jbe
ror
jnp
iret
addr16
arpl
js
xchg
add
and
add
jmp
scas
scas
dec
sbb
pop
retf
dec
and
xor
adc
inc
int
js
test
xor
jg
push
sub
std
push
jno
sub
dec
call
sbb
xchg
ss
sub
sbb
stc
mov
or
data16
mov
mov
call
xor
scas
rol
pusha
xor
ret
enter
cmp
popa
sbb
mov
ror
rcr
(bad)
sbb
ja
push
pop
sbb
and
inc
push
unpcklps
and
mov
stc
jno
jmp
lahf
out
sbb
ret
hlt
mov
and
lock
or
inc
mov
nop
push
out
mov
and
pop
mov
ins
(bad)
cmps
pop
sub
mov
xor
sub
outs
pop
dec
mov
xor
dec
xor
or
call
(bad)
and
cdq
push
inc
lods
pop
mov
scas
arpl
in
cmp
out
pop
push
fdivr
call
mov
(bad)
xor
rol
das
loope
xchg
cmp
xlat
out
sub
icebp
movs
cmp
lea
mov
mov
icebp
les
cli
jecxz
mov
add
fcom
push
mov
xchg
dec
push
gs
or
cmp
sbb
retf
mov
mov
pop
jmp
inc
or
mov
mov
mov
cmp
int
jo
rcr
push
dec
int
int3
pop
or
ins
push
mov
data16
imul
dec
out
cmp
mov
imul
enter
fisub
scas
ja
fcom
xchg
pop
sub
out
fs
ins
aaa
pop
ins
clc
mov
xor
cmps
mov
or
jg
mov
ds
xchg
add
movs
jne
mov
ret
adc
rcr
fld
scas
push
xchg
pop
add
and
call
pop
mov
mov
pushf
test
test
jne
shr
push
or
repnz
sahf
adc
sub
mov
adc
or
loopne
sti
sbb
mov
mov
xchg
xchg
js
xchg
jae
mov
mov
(bad)
iret
add
lods
movs
push
gs
dec
clc
sub
mov
stos
lods
mov
sti
fs
fisub
mov
dec
push
sbb
sub
or
or
test
sub
cmps
(bad)
fdivrp
mov
stos
jns
mov
jp
neg
das
cmp
adc
fucomip
xor
sub
ror
outs
mov
jnp
jmp
or
ja
sti
pop
pushf
jmp
aad
xchg
in
popw
scas
fcmovu
pop
or
and
icebp
and
fst
adc
mov
leave
cli
cmc
retf
into
ret
mov
hlt
xchg
cmp
data16
in
stc
inc
add
outs
js
fbstp
sub
(bad)
cmp
or
and
(bad)
ja
pop
jmp
lock
js
sar
mov
repnz
shl
into
call
or
pop
sub
(bad)
push
je
aad
scas
add
and
les
bound
add
sar
mov
into
sbb
adc
jmp
xchg
aas
jmp
in
adc
xor
jg
sub
jnp
daa
cmc
pop
mov
cmp
test
sub
pop
inc
sbb
aas
add
push
dec
push
call
sub
push
mov
inc
repz
push
mov
(bad)
sahf
mov
into
add
sbb
cmps
cmp
pop
mul
cmp
and
cmp
int3
pusha
pop
or
loope
ret
add
mov
pop
or
mov
sti
in
add
outs
test
and
sbb
test
je
push
les
(bad)
mov
cmps
test
mov
mov
outs
js
aas
jbe
push
sub
loope
out
add
sbb
sbb
jl
mov
xlat
and
sub
es
xchg
punpckldq
not
xchg
dec
push
push
xor
shr
lea
icebp
mov
cmp
imul
inc
aad
adc
xor
push
cld
add
or
adc
push
clc
push
cli
or
push
(bad)
bound
mov
push
add
movs
lds
fbld
std
sub
lahf
mov
aam
mov
data16
pop
lods
imul
sub
cmp
(bad)
outs
cs
sbb
inc
mov
push
xchg
hlt
mov
ja
jne
ins
loope
jmp
xchg
add
lock
(bad)
mov
icebp
leave
sbb
xor
add
mov
fdivr
inc
xchg
in
push
dec
mov
pop
sub
js
loopne
enter
xchg
outs
fwait
add
jno
lods
hlt
xchg
fiadd
jns
mov
rcl
loop
sub
aas
xchg
xor
cmp
popf
addr16
dec
jle
jl
adc
cmp
outs
(bad)
cmp
arpl
fcomp
mov
push
jns
ror
push
mov
js
or
retf
add
push
test
push
mov
sbb
jmp
pushf
test
push
pusha
cmp
pushf
adc
pop
fidiv
imul
cmps
jge
ror
mov
push
repz
shr
mov
rol
pop
inc
int
(bad)
push
pop
cmp
dec
and
xchg
pushf
jb
push
inc
aaa
jp
sbb
icebp
and
test
imul
jecxz
in
jb
mov
dec
mov
mov
xor
leave
xor
adc
ins
cld
mov
loope
and
dec
inc
jne
loop
and
mov
ins
sbb
test
xchg
push
sbb
fbld
(bad)
out
adc
cmp
ficom
mov
test
imul
outs
mov
mov
cmc
mov
add
push
js
or
add
movs
dec
push
bound
std
loop
stos
mov
ins
mov
add
push
mov
stos
push
pop
mov
sbb
scas
xchg
out
fstp
div
cdq
mov
cmp
or
adc
push
inc
std
mov
sub
push
hlt
outs
imul
jge
dec
mov
aam
lock
add
mov
das
cmp
mov
xchg
pop
loope
es
sbb
imul
ins
in
sbb
jb
hlt
ret
sbb
dec
mov
pop
cmps
xchg
fadd
jae
mov
js
inc
aad
loop
lods
imul
clc
xchg
ins
shr
pop
psubsb
loopne
xchg
retf
pop
dec
pop
xchg
ror
xor
lea
(bad)
dec
mov
and
hlt
mov
add
mov
das
jns
mov
mov
push
ds
mov
pushf
(bad)
jge
mov
retf
mov
mov
cmp
cmp
add
add
jnp
xchg
xlat
inc
push
or
jns
push
and
fwait
aad
push
cmp
inc
test
xchg
xchg
pop
inc
repz
mov
xchg
gs
xchg
mov
stc
push
lock
inc
std
out
(bad)
cwde
mov
push
push
imul
(bad)
jnp
dec
inc
out
add
iret
sub
repz
sub
cli
dec
mov
(bad)
ins
mov
cmp
jns
mov
pop
mov
xchg
cmp
jbe
stos
cmps
mov
nop
mov
cmp
movs
mov
jae
jge
or
shl
stc
dec
cwde
(bad)
pop
mov
or
jecxz
mov
ret
xchg
cmc
mov
push
imul
enter
ja
ja
lods
xchg
retf
ja
mov
aaa
jbe
push
rcr
sub
mov
dec
mov
jo
or
and
dec
xchg
je
or
aaa
pop
(bad)
in
hlt
add
ret
pop
mov
xchg
jle
adc
or
and
or
jo
pop
sti
movs
ret
fcomp
stos
rcl
jl
cmps
in
mov
rcl
dec
push
std
repz
int3
mov
test
adc
(bad)
mov
adc
sbb
retf
mov
add
jl
lea
das
or
or
or
sub
pop
mov
mov
fwait
add
and
inc
sub
adc
nop
mov
jmp
int
pop
je
inc
jp
inc
stos
aad
ss
movs
mov
jl
stos
sbb
sub
pushf
adc
push
imul
daa
xor
repz
and
xchg
in
or
mov
arpl
call
and
fist
jns
rol
lock
inc
clc
sub
pop
repz
icebp
enter
imul
in
or
pop
mov
or
and
add
scas
inc
fist
stc
test
mov
lods
(bad)
js
jl
sbb
fwait
cmp
test
push
test
cmp
mov
hlt
les
pop
ins
test
fdivrp
mov
js
pop
jp
nop
dec
icebp
jae
fidiv
aaa
add
aaa
fldpi
loop
dec
jno
test
pop
mov
and
mov
jp
int3
add
repnz
cmp
inc
mov
(bad)
sub
cmp
mov
div
xlat
js
test
jnp
pop
aam
arpl
test
mov
xor
mov
movs
xchg
call
stos
dec
pop
fld
jmp
sar
pop
sbb
retf
lods
mov
ja
cld
popf
rcl
mov
je
mov
jle
pop
sahf
ret
mov
mov
cli
gs
test
adc
mov
jmp
mov
repz
in
(bad)
jmp
dec
pusha
mov
jmp
push
aad
pop
mov
enter
es
add
in
push
xchg
cmp
jmp
enter
test
retf
xor
mov
ins
and
(bad)
scas
mov
mov
in
mov
aas
into
(bad)
lods
push
and
sub
dec
lods
rcl
sbb
xchg
test
lds
push
outs
scas
pop
(bad)
cli
sub
sbb
mov
pushaw
add
lock
dec
mov
cmps
mov
lock
jp
ret
movs
and
xor
mov
sbb
mov
jno
gs
cmp
sti
push
pop
mov
mov
stc
mov
dec
cmc
xchg
ret
push
cmp
lock
fdiv
and
mov
push
fstp
dec
stc
cmp
xor
iret
clc
pop
inc
cmp
or
pop
int
xchg
adc
test
loop
out
imul
cmp
push
clc
jne
and
mov
jb
out
aam
cmp
push
and
dec
xor
inc
and
push
cwde
push
mov
mov
aaa
imul
sbb
adc
cmp
xor
sub
pop
ss
enter
or
ficom
minps
adc
sbb
push
jae
sub
mov
mov
daa
sti
pop
ret
jecxz
ins
jle
jae
push
stos
ret
pop
xchg
mov
jge
aam
add
loopne
in
jns
jno
xchg
mov
fild
mov
push
or
mov
ss
outs
not
movs
adc
sub
nop
lahf
cmps
imul
fst
sub
int
cs
int
jbe
jmp
test
shl
shl
movs
icebp
xchg
cld
jge
inc
loop
sbb
xchg
adc
or
mov
jae
shl
mov
imul
jbe
stos
push
and
in
enter
mul
inc
and
jecxz
loop
inc
cs
jp
loop
jmp
popa
je
test
jge
jmp
sub
int3
(bad)
mov
out
pop
cmc
(bad)
push
in
pop
cmp
push
xchg
lock
jnp
push
ret
pop
and
pop
test
aad
sti
aaa
aas
xor
dec
xchg
mov
int3
push
stos
xor
push
cld
dec
in
movs
fdiv
(bad)
(bad)
mov
lods
movs
in
sbb
mov
jae
xchg
ret
lds
jmp
adc
dec
popf
jae
fst
inc
cmp
mov
mov
(bad)
in
cmp
inc
sbb
popf
jo
in
sbb
mov
addr16
out
les
jmp
sar
and
cld
mov
scas
mov
pop
mov
jnp
pop
sti
xor
push
xchg
sbb
xchg
into
xchg
add
mov
pop
mov
imul
adc
movs
jnp
sbb
repz
icebp
push
inc
xor
jb
sub
push
xlat
pusha
push
(bad)
cwde
cmp
adc
xchg
or
cmp
xor
adc
mov
fld
clc
sub
scas
mov
test
inc
sti
fisub
add
cmps
stos
cmp
push
push
ins
mov
cs
das
adc
mov
jae
fst
imul
mov
xchg
repz
das
lea
dec
mov
cdq
mov
lods
test
push
hlt
repnz
push
ins
mov
sbb
mov
outs
sub
mov
push
jo
mov
push
jmp
(bad)
xor
push
movs
pop
fcomi
mov
loopne
add
das
mov
fidivr
cdq
out
(bad)
ds
inc
xlat
push
dec
add
push
jp
pop
fisttp
or
dec
jl
ret
lods
clc
cmps
js
push
dec
fcom
lock
sti
cwde
popa
jmp
inc
sbb
jno
sahf
cld
fsubr
enter
inc
cmc
add
sub
push
xchg
aaa
fs
movs
mov
rcl
out
or
int
nop
fwait
mov
daa
neg
adc
mov
dec
adc
ret
fld
adc
sbb
sub
jecxz
ja
outs
push
std
jmp
jb
ds
jo
pushf
jnp
repnz
cmps
shr
xchg
mov
cmp
inc
xor
aas
scas
add
dec
xor
xchg
cmps
aaa
pop
cdq
loop
lods
and
add
sbb
sbb
dec
call
xchg
sbb
adc
ins
cmc
les
xchg
jecxz
iret
inc
add
push
loopne
jo
out
sar
call
mov
mov
sub
xchg
test
popa
hlt
xor
aam
rol
jne
imul
iret
in
adc
pusha
push
add
pop
pop
pushf
outs
fild
inc
mov
ins
lods
gs
dec
mov
xor
(bad)
and
addr16
out
jg
push
sub
ficomp
mov
and
inc
jp
mov
push
mov
mov
pop
jbe
sub
in
push
and
lods
dec
ret
(bad)
sub
and
sub
js
fldcw
popf
xor
movs
shl
add
and
or
(bad)
call
lods
xchg
jmp
mov
pop
xor
mov
pop
outs
clc
and
daa
cmp
fild
cld
sbb
mov
je
mov
push
js
cmp
and
nop
jmp
adc
inc
push
fild
repnz
sbb
jp
mov
or
mov
sbb
mov
cli
arpl
dec
mov
hlt
sbb
daa
pop
mov
dec
pop
mov
int
jl
jge
mov
mov
repnz
push
(bad)
pop
mov
push
mov
dec
arpl
xchg
hlt
sti
es
adc
cmp
retf
sbb
adc
push
push
jl
hlt
lock
adc
(bad)
push
out
retf
mov
dec
fucomip
mov
and
add
popa
jecxz
(bad)
cld
movs
leave
cmp
inc
leave
push
(bad)
pop
lds
iret
cdq
and
mov
das
mov
sub
retf
sbb
(bad)
pop
inc
sub
and
or
push
or
jecxz
or
or
add
sbb
div
outs
push
adc
js
or
push
cmp
mov
jl
cmp
fld
ins
ins
je
rcr
fadd
jle
mov
call
scas
mov
mov
jmp
in
jmp
add
loop
jecxz
inc
inc
daa
fcmovnbe
std
in
test
pop
sub
dec
xor
mov
pushf
repnz
popf
xchg
iret
std
sbb
pusha
int3
pop
or
mul
ficom
js
jp
jg
cmc
in
(bad)
adc
ins
pop
test
sub
or
push
cmp
jns
or
xchg
cmps
add
mov
lahf
enter
sar
add
push
pop
call
or
into
push
mov
push
inc
ja
mov
fcomip
jle
dec
mov
sub
hlt
stc
outs
xchg
movs
fdivr
cmp
mov
or
movs
mov
jg
jmp
and
xchg
test
cmp
inc
mov
adc
icebp
ss
inc
jmp
pop
stos
movs
pop
mov
and
add
xchg
jo
mov
cli
ret
xlat
xor
daa
inc
adc
mov
stc
jecxz
add
cmps
mov
ret
pop
data16
adc
out
in
stos
dec
popa
pushf
jne
cld
jle
mov
dec
pop
test
stc
sub
es
fnstcw
xchg
(bad)
push
test
jle
call
mov
fild
ins
pop
xlat
xchg
stos
inc
push
mov
arpl
pop
(bad)
sbb
mov
fwait
in
gs
ficomp
push
or
test
mov
mov
xchg
cmp
sti
sbb
and
repz
lahf
stos
add
push
pop
les
jo
(bad)
in
out
gs
xor
(bad)
lods
mov
outs
imul
sub
repnz
fs
jno
dec
out
sub
je
mov
pop
jo
in
fwait
popf
imul
dec
inc
inc
fist
xchg
add
jle
aaa
lahf
fisub
test
ins
sbb
hlt
scas
enter
(bad)
jl
bound
pushf
test
sub
mov
(bad)
retf
aam
mov
lock
push
xlat
test
push
data16
std
jmp
scas
jmp
inc
ret
sahf
enter
call
or
mov
int3
cli
pop
or
(bad)
sbb
xchg
test
es
std
loope
arpl
fwait
sbb
ret
ins
jmp
fwait
shl
cwde
adc
push
xor
mov
jmp
jle
adc
jb
pop
or
pop
and
stos
(bad)
mov
mov
dec
adc
arpl
inc
test
in
inc
and
sbb
mov
push
or
jge
mov
sbb
push
mov
sbb
mov
push
cld
ja
leave
xor
push
xor
lahf
ins
stos
mov
xchg
stos
stos
pop
ins
pop
sbb
(bad)
push
pop
jp
leave
add
call
xor
test
mov
test
mov
sub
loopne
mov
mov
pop
in
push
or
and
mov
cmp
mov
sbb
lea
push
ret
clc
jecxz
leave
daa
loopne
nop
push
jb
int
dec
into
inc
shr
inc
dec
jae
cmps
mov
nop
sbb
dec
adc
lods
nop
icebp
jbe
mov
movs
mov
push
dec
and
loop
pop
inc
jae
das
test
sbb
mov
mov
rcl
add
(bad)
mov
xchg
adc
xlat
and
mov
shl
bound
frstor
ficomp
je
jmp
(bad)
sbb
and
test
sub
call
push
ret
mov
cmps
jne
xlat
std
jg
pop
imul
or
and
shr
cmp
xor
push
dec
mov
std
cmp
pop
pop
sub
mov
in
rcl
sbb
lahf
jo
in
fild
out
mov
out
add
out
sub
push
adc
retf
or
loopne
adc
and
xor
outs
pop
dec
bound
adc
out
inc
cmps
fild
cmps
(bad)
dec
jge
(bad)
lods
xor
adc
into
in
mov
and
adc
(bad)
sbb
jbe
out
(bad)
jl
mov
dec
rol
gs
fwait
iret
xchg
or
and
cmp
jne
pop
pop
sub
jmp
jbe
mov
xor
sti
sahf
aas
call
das
sbb
mov
test
jg
xor
shr
test
shl
das
cwde
xchg
lea
add
or
jb
xchg
arpl
fldcw
adc
adc
rcl
fwait
nop
push
loopne
clc
imul
and
pop
fstp
mov
bound
inc
loope
pop
mov
adc
mov
cmp
std
jmp
scas
cmps
mov
jmp
mov
loopne
(bad)
xor
dec
jmp
sub
sbb
fadd
push
and
xchg
imul
sbb
pop
push
push
or
cmc
inc
fisttp
adc
pop
sbb
cmp
daa
mov
and
and
fwait
add
sar
xchg
cs
push
add
ins
mov
ret
pusha
in
add
call
add
outs
add
sub
mov
adc
pop
add
out
fwait
xchg
jl
shl
xchg
mov
xchg
mov
or
sbb
lods
fdiv
out
inc
mov
outs
fimul
jle
movs
push
div
inc
sub
popa
ficom
jno
and
jnp
sbb
push
je
pop
lods
je
sahf
cli
lahf
pop
rcl
add
xor
pop
mov
xor
sti
sub
add
pop
push
push
adc
mov
clc
loope
ja
sub
add
sti
mov
dec
out
dec
dec
mov
or
mov
sub
lods
adc
xlat
cmp
push
ja
rcr
mov
pop
jp
mov
test
daa
ins
scas
xlat
scas
jo
sbb
fst
push
ins
(bad)
xchg
test
dec
xchg
(bad)
ror
push
gs
mov
inc
jo
lea
sub
rol
ror
fistp
imul
adc
imul
sub
out
adc
and
into
push
pusha
and
adc
dec
stos
xchg
jb
je
stos
fwait
cdq
dec
mov
adc
fild
mov
mov
jbe
outs
or
aad
fdivr
lea
push
adc
(bad)
retf
mov
lods
push
cmp
pop
pop
adc
lds
sbb
and
gs
lds
cdq
jl
and
and
enter
and
outs
inc
or
imul
mov
icebp
or
mov
ret
mov
dec
add
lods
sbb
ror
xchg
arpl
mov
sub
test
cmps
mov
gs
outs
push
aas
(bad)
cmp
push
add
in
xlat
xor
mov
or
mov
pop
test
add
ins
cmps
lahf
or
call
pop
retf
(bad)
lds
sub
adc
adc
clc
xchg
and
and
add
add
addr16
xchg
and
mov
push
mov
jns
not
cdq
xor
addr16
loopne
sub
int3
fbld
mov
xchg
cwde
pop
cmp
add
add
stos
mov
nop
adc
xchg
les
out
cmps
xchg
sbb
fs
push
iret
pop
cli
or
adc
ds
xor
int
lea
and
jb
xor
pushf
rcr
add
xchg
repnz
mov
mov
xchg
adc
mov
cs
push
dec
add
out
fdiv
xchg
loopne
mov
ret
jg
and
inc
or
dec
stos
add
and
dec
ret
jne
add
sub
xor
iret
mov
cdq
push
ret
push
shl
retf
movs
hlt
enter
call
ja
xlat
ret
scas
and
cmp
outs
xchg
ficom
retf
pop
and
nop
rol
aam
loopne
shr
arpl
fs
push
inc
jl
lahf
and
xor
ins
mov
dec
pop
clc
xor
jne
int
pop
xchg
inc
dec
es
repz
inc
sub
js
inc
aaa
inc
in
ins
push
and
pushf
mov
jo
iret
mov
push
rol
jmp
iret
js
push
lea
push
arpl
lds
retf
mov
rol
retf
fild
aad
mov
pop
sub
jmp
jmp
pushf
add
call
adc
sub
xchg
std
lea
add
stc
cmp
hlt
mov
fwait
xor
jecxz
fistp
sbb
dec
push
loop
sub
pop
cli
xor
mov
xchg
movs
cs
cwde
fnstcw
ror
sti
hlt
jo
scas
pusha
cld
sbb
sub
cld
or
sbb
mov
add
fmul
dec
push
movs
pop
std
xchg
xchg
outs
hlt
mov
sub
in
in
mov
adc
fild
add
sub
out
sbb
xor
inc
retf
fwait
inc
cmp
cmc
sub
xor
mov
repnz
loop
xor
pop
call
or
call
pop
js
test
adc
and
sbb
fstp
shl
fsubr
jp
mov
stc
inc
xchg
push
iret
int3
inc
das
inc
sub
push
(bad)
push
cmps
stos
jmp
inc
int3
inc
leave
push
sub
idiv
daa
mov
cmps
jns
repz
pop
cli
adc
sbb
out
push
jl
or
cmps
fmul
neg
rol
nop
(bad)
mov
fsub
mov
push
cmps
repz
cmp
cmp
ret
xor
out
pop
ins
ficomp
cli
and
xchg
icebp
and
dec
or
(bad)
dec
in
lods
ficom
dec
imul
dec
aad
scas
add
adc
xor
pusha
icebp
ds
jo
in
dec
clc
inc
fisub
shl
lods
popa
inc
inc
pusha
js
or
dec
ud1
ds
push
xchg
out
mov
shl
mov
xor
cmps
xor
imul
add
add
push
fisubr
rcr
push
jmp
stc
lods
and
jp
jbe
in
and
in
ds
inc
inc
shl
cs
icebp
jmp
adc
int3
add
fwait
das
xor
ret
pusha
(bad)
jl
dec
ffreep
lock
out
scas
leave
mov
mov
sbb
cmp
(bad)
mov
(bad)
in
sub
cmp
push
int
mov
ror
lock
sbb
pop
sar
mov
add
and
in
outs
lods
in
add
dec
repnz
adc
mov
jb
or
test
mov
out
fidivr
adc
xchg
hlt
pop
push
outs
pop
inc
loopne
jg
retf
push
ins
movs
dec
neg
jmp
xor
xor
shl
shl
push
ror
jl
pop
mov
push
pushf
arpl
shr
xor
rcr
push
add
loopne
punpckldq
or
or
dec
cmp
in
in
xchg
and
sub
sbb
sahf
push
push
(bad)
test
and
fwait
sub
or
mov
add
fadd
bound
xchg
iret
stc
sbb
xchg
fistp
cmps
shl
into
rcl
(bad)
clc
aad
dec
out
pop
movs
movs
dec
cmp
imul
sar
xchg
dec
sti
sahf
push
clc
das
or
and
jno
mov
add
stos
mov
inc
pop
and
pop
and
(bad)
or
mov
fwait
mov
inc
mov
or
div
jmp
neg
in
sub
out
mov
add
sub
call
jecxz
sbb
mov
add
xor
shl
popa
outs
mov
in
out
jmp
outs
xor
in
sub
(bad)
and
aas
or
fmul
add
out
push
ror
inc
cmc
mov
sbb
pop
daa
cmp
sub
call
mov
push
or
shr
retf
jmp
in
dec
sub
cdq
enter
iret
pop
dec
push
ins
(bad)
xor
clc
push
sti
test
scas
or
addr16
mov
dec
(bad)
xor
jmp
lods
stc
fmul
dec
push
sub
dec
adc
lds
sbb
push
ficomp
sub
call
in
stos
and
ficom
fst
inc
pop
test
sub
adc
es
nop
jmp
mov
mov
sar
mov
imul
scas
xchg
fsubr
add
push
nop
cmp
(bad)
push
cmp
adc
lea
imul
shl
test
inc
loopne
call
cld
add
loopne
cmp
xor
mov
fucomip
fidivr
bsr
add
aad
jne
inc
push
(bad)
xor
nop
and
add
int
int
and
add
jno
jb
mov
(bad)
out
and
cmp
xchg
and
out
or
pop
mov
cs
add
mov
inc
outs
mov
or
out
jo
pop
or
pop
dec
pop
mov
add
aaa
push
inc
call
in
push
movs
xchg
push
in
std
loopne
jge
not
stc
fwait
ja
sub
inc
dec
in
int3
adc
pop
and
shl
mov
jl
cmp
fsubr
pop
ja
mov
sub
fwait
movs
jmp
xor
out
and
sbb
(bad)
and
ins
test
jmp
push
fidivr
int
ret
ror
inc
movaps
mov
lods
cmp
mov
loopne
int
(bad)
mov
pop
or
bnd
in
test
mov
jbe
mov
imul
retf
adc
dec
fld
in
icebp
or
fadd
push
xchg
dec
jne
je
xor
cli
push
ins
cmp
ss
repnz
xchg
ja
sahf
pop
pop
ds
sahf
or
mov
sbb
jb
cmps
mov
jb
mov
shl
cmp
xchg
dec
retf
pop
test
lods
add
(bad)
push
call
and
and
enter
jae
inc
bound
lahf
mov
dec
idiv
pop
fwait
push
and
pop
sar
and
xchg
dec
xchg
xchg
inc
arpl
jle
mov
shl
in
pop
rcr
clc
stc
push
movs
(bad)
into
outs
cli
push
inc
sub
ret
ja
jne
jecxz
push
jge
into
mov
pop
movs
out
rcl
pop
into
cs
call
xor
in
mov
xchg
enter
mov
sub
jg
xchg
add
jl
xor
test
dec
(bad)
out
scas
jl
xchg
lods
dec
mov
mov
(bad)
fld
sub
push
push
sti
mov
cli
fadd
push
dec
loopne
imul
mov
mov
jg
scas
push
or
pop
xchg
mov
(bad)
ja
cdq
sbb
(bad)
mov
call
pop
push
dec
ret
mov
and
mov
(bad)
add
adc
cmp
add
push
jo
adc
push
cs
inc
push
fild
out
in
std
xor
inc
or
add
pushf
loop
daa
mov
in
jno
mov
pop
add
pop
pop
(bad)
and
aaa
jnp
fs
(bad)
push
xor
cs
xor
mov
add
dec
adc
aam
lock
in
pop
je
popf
std
mov
adc
adc
or
test
push
and
rcr
int
aas
sub
ds
jae
in
jo
lea
and
stos
or
mov
(bad)
push
dec
fcomp
imul
(bad)
xchg
icebp
arpl
cs
outs
pop
xor
or
mov
and
adc
lock
cmp
in
aaa
mov
mov
aaa
inc
mov
xchg
push
cmp
inc
dec
mov
sub
push
xchg
xchg
addr16
sub
mov
sbb
xchg
mov
aaa
jae
sbb
shl
xchg
in
test
mov
cmc
(bad)
jne
fstp
test
cmp
jbe
and
in
push
in
cmp
jno
(bad)
jl
mov
daa
mov
out
or
mov
adc
loop
jae
push
idiv
inc
mov
adc
daa
cmp
adc
aas
(bad)
mov
fadd
daa
mov
cdq
jl
jbe
bound
mov
ret
dec
or
xchg
out
mov
dec
fld
retf
sahf
jg
mov
fdivr
adc
pop
dec
mov
add
mov
inc
jbe
mov
lds
xchg
push
jo
ficomp
jae
cmp
mov
(bad)
out
loope
xor
xor
dec
mov
xchg
addr16
sbb
cld
daa
repz
int3
dec
clc
icebp
mov
lahf
adc
push
mov
imul
inc
ret
(bad)
pop
inc
cmp
add
in
stc
ins
fstp
xlat
fidiv
cmp
mov
mov
push
mov
rol
jl
mov
(bad)
pop
out
mov
pop
retf
dec
jno
cmp
mov
push
and
ret
and
push
and
add
call
pop
cdq
push
sub
popf
jno
fisubr
xchg
popf
push
sub
jmp
mov
xor
in
mov
mov
imul
mov
xor
dec
inc
mov
scas
stc
in
xchg
or
imul
es
mov
mov
nop
jbe
ret
imul
ret
xchg
add
pop
push
ret
sar
aam
fsub
cs
into
jo
bnd
int3
loope
addr16
sbb
rol
cld
adc
ins
mov
jmp
cwde
inc
ins
call
hlt
xchg
mov
loopne
and
jmp
and
js
cs
mov
cdq
movs
(bad)
xchg
idiv
pop
pop
popa
push
loope
js
repnz
rcr
aaa
mov
xchg
daa
push
dec
movs
push
xchg
mov
push
adc
pop
add
dec
test
xchg
mov
fnstenv
mov
push
int
pop
jl
test
mov
pop
xchg
in
loopne
in
sbb
aad
(bad)
cli
ss
push
outs
push
adc
retf
retf
jg
or
popf
rcr
push
pop
xor
test
push
mov
inc
add
inc
jl
jge
enter
fld
or
pushf
fldpi
shl
push
ret
pop
fdivr
fidivr
or
in
ret
rcr
sar
jge
lods
pop
out
scas
sbb
add
sbb
mov
aaa
or
out
mov
addr16
pop
test
pop
push
outs
mov
and
pop
sub
sub
in
ret
adc
mov
sub
mov
icebp
push
aaa
cmps
stos
mov
or
sti
jmp
(bad)
das
mov
xor
std
dec
push
mov
adc
in
jmp
jge
mov
iret
jo
sub
ret
or
hlt
div
mov
outs
and
shr
popa
or
inc
inc
pop
pop
inc
add
aaa
stc
jp
aad
add
pop
lds
jmp
lahf
dec
inc
jecxz
push
push
push
xchg
aad
bound
xor
jge
scas
out
cld
or
scas
popf
sbb
mov
(bad)
les
sub
pop
scas
and
ror
jo
pop
out
cmp
mov
jle
retf
inc
outs
cmp
jns
bound
and
std
lods
add
mov
adc
mov
sti
les
lock
sbb
stos
mov
fld
pop
in
and
sub
inc
mov
div
dec
repnz
push
jb
(bad)
dec
jecxz
pushf
mov
mov
sahf
inc
xor
adc
dec
pop
mov
jmp
xchg
lds
stos
pop
adc
call
sub
fcom
xchg
sub
pushf
jp
sub
and
ret
inc
js
pusha
jl
mov
jmp
mov
sub
(bad)
push
sbb
mov
xchg
leave
sub
dec
jp
(bad)
(bad)
add
popa
shr
call
xchg
jecxz
cwde
mov
sub
mov
mov
mov
outs
inc
movs
loope
call
sbb
cmp
xlat
popa
push
sbb
fidiv
mov
mov
inc
and
jae
loop
or
or
leave
sbb
push
scas
cmp
xor
not
nop
ja
rcr
push
imul
push
push
hlt
lods
fwait
xchg
mov
mov
dec
sub
int3
push
inc
fbld
push
lods
mov
imul
aad
sar
stc
push
xor
push
pop
movs
pop
xchg
add
imul
out
adc
pmulhw
xchg
jp
(bad)
mov
inc
outs
jbe
clc
inc
xor
add
sub
mov
jg
mov
int3
cs
aad
sub
inc
retf
jge
nop
jno
inc
xchg
leave
movs
loop
mov
bound
and
jae
adc
nop
mov
mov
call
test
adc
fs
push
push
mov
mov
xor
and
std
(bad)
fcom
push
mov
dec
xor
xchg
les
mov
push
(bad)
jo
cdq
or
pop
mov
movs
mov
popf
pop
jne
mov
imul
jbe
(bad)
mov
out
test
cli
or
inc
and
jl
or
bswap
mov
or
cwde
test
dec
sub
call
add
test
adc
dec
xchg
or
rol
cli
mov
pop
push
je
fbstp
fisttp
ret
xchg
mov
push
jno
outs
mov
fisub
jne
arpl
(bad)
arpl
sbb
outs
int
push
pop
mov
adc
pop
or
pop
icebp
inc
sbb
adc
jae
and
leave
xchg
mov
mov
xor
retf
sti
xor
fdiv
mov
lock
enter
sbb
pop
js
mov
mov
mov
mov
dec
ficom
xlat
dec
shl
inc
fstp
cmp
(bad)
aaa
jnp
fld
ss
movs
jno
pop
in
mov
mov
fimul
adc
add
xor
add
jb
clc
sbb
mov
mov
test
mov
xchg
lock
xchg
mov
push
xchg
scas
cs
mov
aad
mov
mov
dec
lods
imul
mov
add
leave
fistp
test
lods
pop
cdq
cmps
data16
cmps
xchg
fldcw
fbld
hlt
mov
movs
add
ins
out
xor
jle
xchg
pop
sub
mul
ficomp
fadd
xor
arpl
xchg
dec
mov
xor
sti
adc
std
sub
sbb
xchg
or
popf
jno
jne
stc
push
cmps
sub
repnz
push
cmp
imul
add
pop
or
shr
mov
jp
dec
shl
mov
pushf
inc
int
and
cmps
pop
sahf
addr16
pop
ins
mov
movs
in
popf
xchg
adc
rcr
pop
cld
addr16
xor
shl
jmp
rcl
xor
adc
xchg
fs
mov
mov
and
add
imul
ins
mov
test
xor
fnstenv
enter
mov
inc
mov
mov
enter
sub
or
cmps
cmps
or
mov
les
movs
jnp
dec
push
imul
ret
out
jmp
or
stc
pop
retf
lods
dec
mov
mov
fld
cmp
fsubr
inc
in
and
aad
push
xchg
outs
jne
hlt
inc
xor
mov
rol
mov
cmp
outs
ds
pop
jns
cmps
nop
scas
push
stos
xor
sbb
cld
jmp
enter
imul
xor
call
and
pushf
clc
xor
xchg
loope
lahf
fld
icebp
mov
mov
sahf
and
adc
jns
push
gs
add
int
lods
enter
or
pop
popf
jl
inc
add
jmp
pop
dec
fdivr
sbb
outs
cld
pop
jmp
sbb
mov
test
jne
(bad)
std
fdivr
jg
mov
cdq
push
sbb
fst
addr16
or
inc
cmp
int3
push
cmp
es
cld
xchg
gs
xor
jbe
add
cs
mov
ins
mov
dec
hlt
pop
or
test
sub
paddd
cs
push
jbe
xor
pop
repnz
rol
loopne
add
sbb
imul
and
and
cwde
mov
ficomp
cwde
(bad)
mov
xor
mov
push
dec
mov
jg
outs
fsubr
pop
out
stc
enter
jl
sub
cmc
push
aad
mov
cwde
test
shl
aaa
and
ret
mov
cwde
inc
add
cmp
cmc
pop
call
xor
(bad)
les
stc
jge
cmp
mov
enter
pushf
js
in
add
int3
pop
jg
cmp
push
ins
xchg
xchg
dec
clc
and
outs
jb
out
cdq
xchg
push
sahf
jne
pusha
pop
sub
cmp
repnz
or
loopne
js
gs
lods
sahf
xor
imul
jge
loope
xor
fs
push
dec
cwde
cmp
push
adc
dec
or
outs
push
mov
add
jecxz
loope
or
pop
cmp
lods
pusha
mov
out
pop
dec
inc
stos
or
pop
imul
int3
jns
out
add
mov
push
or
adc
pushf
lock
clc
shl
pop
push
sbb
dec
sub
int3
pop
cs
add
lea
push
add
into
and
stos
mul
and
push
mov
jmp
fisubr
mov
mov
dec
push
test
adc
xlat
gs
mov
inc
sub
and
or
xchg
add
lock
cdq
sbb
fidiv
(bad)
shr
mov
pusha
aad
fadd
mov
sbb
cld
popf
xor
push
cli
std
(bad)
mov
bound
arpl
sbb
test
adc
sub
dec
arpl
adc
mov
mov
cs
dec
loopne
jecxz
push
(bad)
shl
fs
test
adc
repz
xchg
imul
or
in
dec
(bad)
and
rol
lea
push
ins
pop
mov
mov
mov
jb
scas
stos
dec
jmp
or
pop
or
pop
adc
js
mov
jmp
mov
ror
fadd
jb
imul
ret
(bad)
inc
xchg
cmp
lahf
mov
outs
mov
in
cmps
jmp
scas
cmps
jp
pusha
fld
cmps
push
xor
sub
(bad)
loop
adc
out
stos
sbb
xchg
ficom
dec
enter
ins
mov
leave
xchg
pop
xchg
pop
movs
fimul
scas
test
test
adc
adc
dec
cmp
inc
cmp
test
jnp
or
add
mov
adc
nop
dec
cmp
loop
lahf
out
loope
mov
ja
xchg
jg
fs
cwde
xor
ficom
sub
cmp
sbb
mov
sbb
mov
mov
test
int3
mov
mov
out
xor
cmc
jg
jne
call
mov
stos
(bad)
sbb
fs
adc
in
aad
jne
ficom
push
sahf
fdivr
cdq
push
cmp
sub
xor
xor
jmp
cmps
mov
xchg
mov
xor
fild
mov
pop
mov
in
adc
std
push
mov
test
sar
push
lock
jno
(bad)
mov
pop
fs
jbe
mov
(bad)
out
fprem1
cmp
aaa
push
nop
mov
mul
or
push
in
sub
xor
outs
pushf
retf
imul
lds
fwait
pusha
inc
sti
call
repz
add
dec
dec
stc
xor
mov
sub
inc
iret
add
scas
fcomp
xchg
fs
jns
mov
movs
push
fist
jmp
pop
and
lock
pop
movs
dec
push
int
lods
or
or
dec
sar
pop
fnstcw
push
sub
out
inc
dec
lahf
js
daa
out
aas
std
mov
dec
cld
fmul
and
setb
call
cmps
inc
loop
fbld
mul
je
xchg
mov
mov
mov
xor
movs
shl
mov
loope
pop
dec
mov
sbb
(bad)
adc
ror
push
jmp
jmp
stos
stc
movs
pop
push
test
jp
fist
lods
imul
jl
lea
cmc
adc
sub
pop
cmps
and
mov
es
push
outs
mov
mov
(bad)
push
aas
inc
sar
and
movs
push
outs
fistp
lahf
popa
leave
mov
enter
int3
jne
push
jmp
mov
js
stc
inc
fild
push
enter
or
dec
nop
jae
sub
aad
into
js
adc
mov
in
movs
std
pop
(bad)
enter
pop
or
add
xor
movs
xor
out
popf
dec
xchg
mov
mov
and
cmp
cdq
cdq
test
jb
sub
and
adc
adc
outs
jp
retf
or
(bad)
pop
and
mov
push
shl
add
sti
pop
xor
xor
jp
pop
add
pushf
mov
mov
push
pusha
les
loopne
xor
in
sbb
leave
in
ins
cwde
mov
jmp
ret
aas
sti
sbb
mov
adc
imul
mov
fs
stos
out
(bad)
retf
sub
and
jl
loopne
and
(bad)
outs
mov
lock
addr16
aad
adc
(bad)
(bad)
pop
rsqrtps
dec
mov
dec
jmp
xor
enter
xchg
mov
inc
push
adc
cmp
pop
ret
xor
xor
mov
mov
lock
out
test
jno
rcr
out
cmps
(bad)
enter
mov
lds
push
sbb
sub
adc
repnz
add
mov
rcl
pop
test
xchg
or
mov
inc
push
cdq
or
adc
fcmovb
outs
mov
movs
or
(bad)
jecxz
iret
pop
nop
aad
cmp
mov
fnstcw
adc
in
retf
pop
mov
into
cmp
lock
jecxz
stos
mov
sbb
jmp
dec
adc
inc
fdiv
push
and
lods
sub
in
adc
(bad)
and
(bad)
jbe
ins
dec
mov
fstp
push
not
mov
pop
mov
xchg
loope
pop
push
ins
inc
cld
xor
mov
mov
stos
test
fs
add
out
sub
sub
daa
lahf
pushf
retf
inc
jo
in
sub
adc
retf
cmp
dec
cli
pushf
lock
mov
je
(bad)
arpl
daa
data16
mov
jo
pop
popa
inc
mov
pop
arpl
push
loope
dec
jmp
lods
sub
imul
rcr
push
push
into
xlat
popf
xchg
pop
dec
data16
fist
scas
jecxz
sub
stc
paddw
push
inc
xor
imul
dec
pop
sub
sbb
mov
jo
fwait
push
cwde
sti
stos
jb
mov
push
cli
sahf
aas
imul
add
dec
ret
pusha
cmps
xor
adc
push
(bad)
xchg
mov
cwde
jo
xchg
call
outs
repz
mov
lock
sti
mov
sub
aam
cs
cmp
je
daa
(bad)
hlt
jle
xchg
lds
int3
sub
ins
sbb
push
ins
sbb
jle
lds
jg
and
and
shl
pop
dec
fld
lds
dec
pop
pop
sahf
mov
movs
push
cmps
mov
adc
test
(bad)
std
in
hlt
push
sbb
call
fnstsw
addr16
repz
ins
lods
adc
call
cmps
push
mov
in
sbb
test
mov
pop
or
shl
ss
mov
xchg
enter
sbb
gs
jae
pop
fidivr
pop
cmc
sbb
out
mov
push
add
not
mov
adc
cmp
cmps
lock
int
inc
in
pop
je
dec
mov
mov
into
and
mov
leave
fcmovbe
stos
xor
push
pop
iret
push
ja
pop
jae
fstp
js
je
cdq
jg
mov
xor
lods
add
es
(bad)
fadd
mov
inc
cmps
cmp
fild
jg
mov
imul
pop
imul
stos
sbb
pop
mov
fldenv
xchg
dec
mov
xchg
cmps
inc
xor
and
pop
mov
push
mov
jns
jmp
xchg
jbe
inc
inc
adc
sub
xchg
test
ja
pusha
dec
ja
sti
inc
in
add
stos
dec
movs
addr16
cmp
fnstcw
sbb
inc
dec
mov
shl
and
mov
jmp
pop
gs
dec
cwde
std
or
dec
popa
adc
rcl
repz
sbb
movs
xor
nop
pop
add
sahf
hlt
xor
xchg
enter
mov
sbb
ins
std
jbe
into
push
jb
xchg
pop
cs
and
push
sub
fnstsw
push
mov
sbb
dec
hlt
daa
xor
mov
adc
xchg
pop
imul
cmp
retf
xor
pop
sahf
and
fild
add
stos
adc
push
xor
mov
xor
inc
icebp
sub
mov
test
xlat
push
or
jp
in
or
dec
pop
cmps
mov
rcr
xchg
adc
in
jbe
clc
mul
(bad)
fbld
das
mov
pop
jnp
(bad)
(bad)
out
cwde
daa
stos
pusha
xchg
add
pop
push
(bad)
data16
jb
pusha
movs
stos
div
push
push
icebp
int
fwait
add
in
mov
dec
(bad)
mov
add
test
cmp
das
xor
jecxz
jg
add
or
ins
mov
shr
ja
ins
xor
lahf
int
mov
das
aad
mov
or
pop
ltr
popf
xchg
jle
xchg
pop
out
es
test
xchg
sbb
add
push
ins
clc
jge
mov
aad
lds
xlat
outs
jb
push
in
mov
sbb
xchg
mov
xchg
mov
and
xor
jmp
cld
cli
xchg
cld
je
test
xchg
sbb
dec
retf
mov
dec
cmp
jle
inc
adc
adc
and
test
into
xchg
fldenv
cmp
mul
in
xor
fwait
cmp
mov
test
sbb
or
mov
mov
sti
fistp
aam
daa
fild
dec
int3
sub
mov
jne
cli
out
cld
push
pop
ret
scas
cmp
add
push
in
xchg
add
mov
popa
rcl
cmc
sahf
pop
jo
in
outs
xchg
sub
test
repnz
inc
in
or
mov
(bad)
push
pop
sub
fisttp
adc
push
cmp
and
gs
scas
sahf
mov
loop
add
xchg
mov
stos
and
mov
das
es
jnp
push
call
movs
sbb
inc
jecxz
daa
pop
std
shl
lahf
stc
jnp
fsubrp
cdq
adc
mov
push
mov
sub
in
sti
mov
inc
lahf
pop
(bad)
mov
bound
or
pop
mov
jne
bound
aas
je
test
fisttp
sar
sbb
ja
fdivrp
in
cmp
push
cwde
cdq
add
adc
xchg
ja
jecxz
aam
mov
inc
sub
sbb
neg
dec
shl
xchg
pop
shl
add
shr
cli
outs
add
cmp
js
mov
cli
dec
xchg
sbb
not
pusha
ror
aam
test
cmp
mov
out
cmp
cmps
inc
push
push
mov
dec
push
sbb
neg
(bad)
loopne
pop
enter
iret
in
cmp
add
add
push
(bad)
sbb
pop
fst
mov
pop
scas
sub
movs
add
fstcw
xlat
pop
imul
out
xchg
daa
add
hlt
frstor
sub
mov
mov
push
mov
lods
add
inc
inc
inc
xchg
dec
inc
in
out
push
outs
add
icebp
cli
xor
scas
cmp
and
xchg
neg
jo
jno
xchg
jmp
test
ins
test
adc
cmps
imul
outs
push
inc
push
in
push
push
pop
stos
(bad)
outs
das
sub
jmpw
ins
pushf
mov
out
cmp
jae
xor
(bad)
or
jne
jo
mov
fsub
push
cmp
push
stc
add
call
test
push
rcr
mov
test
out
fstp
inc
xchg
xor
push
mov
adc
or
inc
push
out
cdq
jae
jg
bound
inc
(bad)
arpl
out
cmc
xchg
xchg
les
jnp
jae
and
pop
fisttp
test
ror
cs
cli
adc
mov
scas
or
outs
or
push
add
dec
(bad)
mov
pop
mov
and
and
push
or
cmp
stc
out
mov
fdivr
push
push
ss
sti
out
div
int3
das
int
jge
shl
pop
push
sub
das
nop
or
dec
int
pusha
xchg
outs
mov
pop
nop
push
pop
clc
mov
add
or
or
mov
sub
mov
jmp
out
mov
dec
aas
adc
inc
cmp
repz
call
jo
inc
push
fnstcw
and
enter
(bad)
je
imul
adc
jmp
fs
xlat
lods
xchg
leave
mov
mov
not
stos
pop
aam
pop
push
adc
das
inc
mov
loope
ret
mov
fwait
imul
ja
loop
xchg
mov
icebp
sub
cmps
clc
dec
mov
loope
inc
mov
mov
sbb
mov
ret
cld
nop
mov
add
movs
scas
jb
push
sub
xchg
pop
pop
and
cli
or
stos
pop
add
dec
shl
addr16
push
movs
sbb
and
shl
mov
bound
xor
aaa
lods
ret
aam
ja
jecxz
sbb
sti
sbb
retf
inc
dec
arpl
adc
inc
mul
push
mov
call
int3
jmp
in
fwait
repz
test
mov
aam
int3
cmp
retf
fxch
sub
das
fstp
gs
pop
ins
mov
sbb
xor
dec
cli
xchg
leave
ja
aad
mov
(bad)
jmp
mov
sub
mov
mov
rol
push
cld
xchg
jmp
out
nop
sti
fidiv
jmp
outs
dec
dec
int
cmps
mov
les
cmp
jmp
imul
pop
test
ret
jnp
xor
xchg
mov
repz
retf
popa
and
cld
nop
dec
mov
push
xor
push
dec
pop
or
iret
sbb
ffreep
jmp
stos
jle
cmp
ret
jne
or
cmc
jne
dec
(bad)
ds
jo
mov
mov
dec
xchg
inc
test
cld
dec
cmps
loop
xchg
aam
out
mov
call
pop
dec
jne
leave
jb
or
test
outs
cli
aaa
and
aas
je
loop
and
jo
inc
sbb
and
sbb
(bad)
sbb
(bad)
xchg
sbb
stc
jge
push
cmps
cmp
repz
cld
pushf
mov
(bad)
xchg
push
push
inc
adc
pushf
mov
pop
cmp
fwait
scas
jo
pushf
std
imul
mov
into
lds
shl
sahf
inc
dec
std
popf
(bad)
inc
cwde
pop
sub
cmp
mov
repnz
and
out
jmp
xchg
clc
pop
nop
sti
push
ins
test
cli
and
jmp
mov
xor
les
std
cmps
and
retf
cli
out
mov
pushf
mov
ss
and
sbb
inc
xor
rcr
test
les
jmp
and
iret
dec
pop
pop
xlat
pop
mov
cmp
or
pop
inc
into
sbb
loop
fwait
lods
pop
fmulp
add
mov
sub
pop
cmps
mov
sahf
pusha
gs
shl
dec
jo
mov
inc
pusha
pop
sub
mov
lahf
add
daa
outs
mov
icebp
cmp
sbb
imul
(bad)
or
movs
test
mov
cmps
inc
push
mov
mov
mov
dec
pop
push
aaa
mov
pusha
pop
imul
popa
adc
adc
arpl
ficom
daa
fs
stos
jnp
(bad)
and
sbb
or
clc
and
cmp
and
outs
lahf
dec
mov
mov
pusha
test
ins
adc
sti
jge
aas
dec
jo
push
push
daa
rcl
jecxz
jmp
stc
mov
jno
add
mov
xchg
jnp
push
push
sub
and
jl
pop
imul
lea
idiv
(bad)
mov
and
xor
mov
pop
xor
pop
mov
popa
mov
xlat
add
mov
pusha
mul
pop
add
and
sbb
ins
aad
mov
push
xchg
(bad)
pusha
fs
loope
std
cmp
clc
stos
push
es
retf
les
sbb
faddp
add
loop
sbb
mov
xor
loop
dec
jle
jecxz
mov
pop
xchg
rcr
call
cmps
and
cs
movs
dec
inc
pusha
call
xor
scas
mov
arpl
xor
in
pop
out
(bad)
xor
xor
cdq
sub
jbe
(bad)
mov
ins
adc
jnp
retf
test
jns
cmp
(bad)
xchg
je
mov
push
cmps
retf
push
push
jb
mov
test
cdq
mov
daa
jmp
fwait
sbb
aam
imul
cwde
loopne
aad
mov
add
xchg
sar
mov
add
fwait
je
jg
(bad)
adc
lods
test
mov
shl
push
xchg
out
pushf
lahf
pop
inc
inc
fnstsw
(bad)
xchg
pop
int
jle
lods
clc
pop
and
pop
leave
xchg
sub
out
call
cwde
jne
adc
ficomp
pusha
outs
xchg
pushf
cld
cwde
xchg
ins
(bad)
adc
and
pop
lods
inc
icebp
imul
shl
lahf
pop
in
das
push
add
cmc
stc
dec
dec
(bad)
aad
rcr
lahf
cdq
fistp
jne
fstp
ror
inc
sbb
(bad)
mov
push
add
and
pop
aas
fild
inc
ds
mov
sti
or
adc
cmp
adc
(bad)
pop
adc
pop
mov
mov
xchg
mov
push
test
mov
stos
xchg
jbe
(bad)
ficom
pushf
test
lahf
das
sbb
fimul
out
jns
(bad)
gs
addr16
adc
mov
adc
xor
ret
dec
mov
mov
jns
dec
cmps
nop
fidivr
push
daa
xchg
popf
scas
and
inc
cmp
hlt
aaa
xchg
fisub
pop
sti
mov
pop
scas
mov
sbb
jmp
dec
mov
(bad)
aam
and
or
mov
mov
loopne
mov
ins
lods
daa
fadd
jne
jle
nop
push
aad
imul
or
push
push
dec
xlat
cmps
adc
rcr
in
call
cmp
scas
movs
call
push
push
sbb
mov
scas
push
add
or
add
pop
or
fwait
inc
add
pushf
mov
xor
xlat
imul
jbe
repnz
xchg
inc
in
iret
push
es
add
mov
imul
lods
and
push
mov
idiv
inc
lods
jge
ret
jne
and
xlat
ffree
inc
ret
scas
call
fadd
and
mov
jnp
jecxz
(bad)
adc
loopne
or
imul
pop
pop
sub
jge
xchg
nop
xchg
dec
push
icebp
shr
fmul
pop
dec
xor
or
fst
lock
cmp
dec
push
lahf
or
scas
fs
xor
icebp
xchg
enter
adc
sub
mov
xchg
jge
cmp
push
std
div
sbb
push
mov
lods
add
lock
ror
jb
pop
push
out
add
shl
repnz
push
or
pop
mov
mov
shl
repz
fdivp
and
xor
outs
mov
ins
xor
adc
or
sbb
js
test
(bad)
mov
xchg
pop
add
nop
or
daa
pop
outs
mov
jne
mov
fstp
xor
call
cmp
or
sar
aaa
adc
fimul
or
ins
int3
fcmovb
jge
jmp
push
jnp
shl
jns
or
xchg
daa
push
mov
ret
sbb
xchg
cs
out
jle
ret
jmp
jns
inc
adc
je
and
repnz
cmps
shl
lods
and
pop
xchg
adc
jns
jl
jmp
or
push
or
push
jne
sub
jmp
int
and
gs
push
call
xchg
pop
adc
rcl
addr16
inc
fdivr
je
cmp
out
sbb
and
mov
rcl
push
push
or
or
inc
shr
pushf
sahf
ja
cdq
dec
pop
pop
repz
push
mov
pop
or
hlt
mov
cmc
test
aam
push
or
xor
sbb
call
and
lea
xor
es
dec
sbb
aaa
daa
push
stos
pop
push
pop
fs
call
sub
mov
jmp
aaa
loop
in
int
mov
xor
dec
push
xchg
pop
arpl
dec
or
inc
sbb
push
sbb
add
pop
mov
mov
adc
dec
sub
sbb
add
xchg
outs
iret
add
cmps
neg
retf
ret
adc
xchg
jmp
sub
mov
ds
mov
adc
sbb
and
xor
int3
dec
push
sub
adc
test
jbe
pop
outs
jp
pop
ror
call
shl
or
movs
and
retf
and
dec
inc
scas
int
movs
stos
outs
fiadd
pop
or
sbb
xchg
cdq
cmps
push
test
and
push
sbb
inc
(bad)
(bad)
ror
std
pushf
pushf
add
push
pop
aam
jmp
sub
or
inc
int3
sbb
iret
sti
xchg
arpl
xchg
cmp
sbb
test
add
add
rcr
pop
clc
sbb
hlt
outs
leave
mov
jmp
sbb
mov
aad
mov
mov
jb
mov
mov
cmp
xchg
push
sbb
push
push
daa
mov
(bad)
aad
fisttp
mov
jns
mov
or
cmp
jne
xor
inc
lods
jo
adc
data16
mov
jecxz
in
sahf
repnz
dec
push
xor
push
push
pop
jno
jae
arpl
mov
inc
push
inc
jo
xor
les
aam
or
mov
dec
clc
sub
fwait
aam
retf
xor
hlt
int3
int
mov
dec
icebp
pusha
xor
pop
pop
sbb
out
add
sub
mov
pop
cmp
test
out
and
mov
adc
fs
push
fistp
sub
ins
fidivr
outs
dec
ins
fcom
jo
lods
jbe
mov
add
sub
jmp
popa
loope
mov
in
es
mov
mov
sub
jp
fimul
es
enter
pop
add
and
cli
repz
bound
inc
adc
in
mov
jmp
dec
push
xor
addr16
xor
sbb
fnstsw
push
mov
xchg
arpl
(bad)
xor
test
hlt
add
pop
jp
jne
inc
and
sub
loope
addps
mov
jo
jo
adc
popa
and
sti
fnstsw
cdq
sbb
mov
repnz
sti
pop
popa
mov
jae
test
loopne
or
movs
inc
pop
and
add
xchg
cmp
sub
fiadd
mov
inc
adc
cmc
hlt
inc
std
cdq
sub
mov
xchg
dec
mov
adc
push
icebp
mov
cmps
enter
inc
adc
sub
pop
mov
push
push
xchg
mov
shl
call
adc
lds
jecxz
mov
mov
ds
lahf
xchg
and
inc
hlt
loop
pusha
jge
ja
icebp
cdq
and
popa
inc
pop
clc
cld
mov
mov
sbb
add
push
inc
inc
dec
mov
iret
mov
loope
mov
push
in
imul
mov
cmp
mov
lods
adc
cmps
mov
add
mov
sbb
pop
(bad)
pop
stos
test
daa
mov
sbb
dec
xor
xrelease
sbb
mov
cdq
lahf
mov
ds
sub
pop
out
fstp
push
daa
add
retf
or
cs
(bad)
scas
scas
pusha
retf
out
sbb
sub
fwait
inc
pop
mov
rol
(bad)
jae
ret
cmp
popf
loop
(bad)
fmul
push
add
nop
popf
push
mov
imul
lds
iret
sar
sub
pop
mov
mov
out
or
inc
pushf
neg
push
jmp
push
aaa
mov
(bad)
pushaw
scas
add
in
fldenv
loopne
int3
ds
outs
addr16
fs
jl
int
outs
dec
mov
fs
or
sbb
cmp
in
jno
sar
mov
push
or
push
shl
das
mov
cmp
lock
in
cmps
and
dec
pop
leave
mov
ret
fwait
and
add
stos
bound
lds
cmps
push
or
arpl
push
mov
or
movs
or
sub
mov
xor
div
lock
ins
shl
xchg
or
sti
in
stos
popf
(bad)
je
sub
push
es
pop
jne
push
push
pop
dec
sub
fs
and
xor
fcmovbe
psubb
pop
cmp
push
test
jns
or
push
fst
xchg
sub
jo
int
jp
scas
imul
xchg
ret
or
mov
cmps
(bad)
stos
inc
jle
imul
mov
lock
cmc
mov
jns
loopne
jmp
js
xor
jne
repz
iret
sub
mov
and
sbb
nop
ja
jmp
sahf
aad
adc
(bad)
jecxz
jmp
add
shr
loopne
movs
ja
mov
mov
in
adc
mov
mov
or
loop
or
jo
mov
mov
bound
imul
xchg
shl
outs
(bad)
push
repnz
js
out
mov
and
out
push
aam
dec
dec
xchg
inc
cmp
movs
repz
sub
repz
mov
xor
(bad)
out
scas
mov
fdivp
iret
push
int3
int
mov
xor
dec
inc
ret
stc
jb
pop
pop
mov
xchg
and
leave
imul
xchg
movs
jle
sub
movs
or
bound
les
js
jo
into
pusha
dec
add
inc
push
retf
pop
cdq
mov
dec
pop
xor
sub
push
into
bound
mov
xchg
test
sahf
push
cmp
loope
jbe
pop
cmp
xchg
jecxz
jae
addr16
out
int
pop
out
ror
mov
and
jb
jo
test
sub
and
cmps
push
jbe
and
imul
test
ror
dec
xor
jl
pop
xor
xor
ds
cmp
cmc
mov
cmp
daa
mov
jae
or
arpl
push
push
int
lock
popa
stos
sbb
fs
call
jmp
add
in
icebp
nop
jb
mov
cmps
push
mov
sub
and
test
popa
test
dec
xchg
pop
xchg
push
int3
add
out
aad
jg
mov
xchg
lahf
ins
push
call
push
mov
xor
xchg
fucomi
mov
adc
pop
pushf
mov
stc
sbb
fcom
es
mov
(bad)
push
pop
jmp
(bad)
not
int3
pusha
dec
mov
push
or
enter
inc
shl
cmps
mov
int3
jae
or
push
popa
les
das
xor
out
loopne
cwde
fidiv
mov
fadd
or
fstp
mov
fs
jl
cwde
mov
cmc
xchg
dec
pop
adc
stos
pusha
shl
push
shl
jle
mov
scas
scas
jbe
idiv
ss
jnp
ins
(bad)
stc
pop
cmp
lds
jecxz
mov
sub
xor
mov
cld
(bad)
das
and
and
ss
xchg
aas
icebp
pop
aam
out
xor
ret
and
push
jmp
xor
inc
fbld
hlt
lods
jb
xchg
mov
ss
lock
xor
inc
movs
das
(bad)
mov
and
push
shl
retf
int3
and
push
xchg
inc
pop
outs
sahf
xor
popf
je
inc
sub
int
jecxz
in
setae
call
sub
cmp
jo
test
lea
outs
jl
dec
or
pop
push
jle
retf
int3
into
or
mov
mov
in
ins
(bad)
out
pop
xor
jbe
sbb
stos
cmp
jge
push
xor
loope
stc
mov
cmp
out
jae
sahf
stos
aad
cmp
xor
retf
add
dec
jg
pop
dec
dec
lea
js
scas
fidiv
dec
mov
dec
pop
data16
or
sbb
aas
add
sub
push
outs
mov
dec
sub
xchg
(bad)
cmp
mov
cmp
call
dec
rcr
inc
inc
push
xor
cmps
and
ret
sbb
cs
retf
(bad)
mov
je
retf
xchg
dec
pop
js
mov
mov
retf
pop
jo
imul
cmps
push
cmp
lock
jno
and
inc
out
cmp
(bad)
test
sbb
rcl
push
adc
mov
jmp
int3
dec
fidiv
sbb
pop
and
jecxz
inc
retf
inc
sbb
in
mov
and
add
in
inc
idiv
nop
sub
lods
fisub
xor
mov
sbb
arpl
adc
sub
sbb
mov
add
mov
jb
pop
cmps
sbb
sub
add
adc
pop
mov
push
stos
jno
and
add
add
lea
movs
shr
dec
push
imul
add
std
cmps
mov
jmp
gs
je
jge
xor
ficomp
mov
out
jb
call
adc
push
lea
sub
dec
out
push
pop
es
pop
add
xchg
jecxz
cli
stos
and
dec
call
int
jmp
clc
call
ins
aaa
pop
push
sbb
or
pop
pushf
and
retf
mov
or
hlt
jmp
inc
add
cmp
xchg
pusha
cmp
add
cs
mov
sahf
retf
iret
shr
gs
mov
int3
xchg
in
in
aad
cmp
mov
hlt
pusha
out
add
int
push
lods
pop
lea
and
pop
aam
pop
into
cwde
dec
cld
or
add
xor
push
call
lods
test
mov
push
icebp
xor
ja
dec
aam
cmp
mov
scas
xchg
pop
inc
bound
jp
sbb
jae
call
mov
out
and
setne
dec
push
mov
cli
shr
mov
or
mov
inc
retf
lds
loop
sub
sub
scas
icebp
sahf
sahf
adc
(bad)
adc
orps
sub
inc
mov
jp
cmp
cmp
and
push
and
jnp
dec
dec
ja
test
cmp
xor
popa
push
loop
jmp
and
ret
add
js
loopne
or
and
scas
test
mov
xchg
jge
fstp
mov
pop
dec
xchg
adc
xor
jne
xor
jmp
add
fcomp
test
mov
or
dec
xor
mov
mov
cmps
inc
scas
out
pop
sub
ss
mov
(bad)
stc
dec
outs
xchg
sub
sub
retf
xchg
add
sti
xchg
or
outs
adc
iret
iret
mov
jmp
or
xchg
cwde
push
add
push
dec
(bad)
sti
imul
cwde
push
cmp
xor
cdq
xor
mov
fild
cmp
jnp
scas
dec
gs
mov
add
xor
test
and
pop
jo
cmp
jno
add
pop
fistp
sub
and
scas
cmp
out
scas
cmp
retf
pop
push
aam
ss
fadd
push
cmp
fstp
sbb
mov
push
dec
sar
aad
and
outs
adc
in
jmp
in
leave
idiv
jg
cs
xchg
loop
and
pop
lods
out
call
inc
ins
push
daa
jp
sub
test
jmp
sub
iret
sub
sbb
mov
scas
adc
or
dec
sar
sti
pop
popf
or
push
pop
pop
fld
in
in
lock
mov
sbb
cdq
in
shl
(bad)
jb
out
pop
add
push
mov
scas
aas
mov
pushf
jae
and
gs
sub
sub
ins
xchg
movs
inc
jecxz
adc
jecxz
sbb
add
inc
out
rol
aam
dec
stc
lods
mov
xor
cdq
es
jne
mov
add
in
in
sbb
dec
dec
xor
mov
inc
sub
push
(bad)
hlt
pop
pop
xor
cmps
out
call
dec
add
in
sbb
ficom
mov
outs
xor
mov
das
ins
loop
rol
sbb
ss
mul
outs
mov
push
out
call
jne
adc
sbb
scas
ror
xor
int3
hlt
mov
add
rol
xlat
xlat
maxps
or
adc
arpl
xchg
js
stos
ins
lods
fwait
push
pushf
pop
fistp
movs
pop
js
jno
add
or
adc
pop
mov
jecxz
sbb
fiadd
jb
mov
xor
outs
(bad)
mov
in
xor
test
fstp
outs
push
les
inc
xchg
lock
jne
neg
pushf
movs
jp
sub
out
dec
loop
xor
sub
scas
js
bound
cmps
or
repnz
xchg
cmps
arpl
jmp
fsubrp
push
pusha
pop
retf
pop
out
pop
nop
cs
mov
in
(bad)
pop
je
aad
add
pop
pop
test
je
fwait
adc
pop
imul
jge
push
mov
aas
mov
pop
lahf
and
add
dec
es
jl
push
fistp
pop
dec
ja
mov
loope
in
mov
mov
sub
sbb
lods
aam
xchg
div
cmp
out
xchg
or
cmps
outs
push
popf
cwde
outs
inc
sar
jl
lods
push
sbb
push
adc
xchg
xor
cmps
xacquire
sub
xlat
test
cmc
or
aad
bound
inc
push
jge
or
cmc
adc
fadd
daa
push
pop
das
and
mov
dec
fbstp
cmc
adc
int3
sub
rol
dec
mov
bound
cmp
stos
mov
cmp
sub
das
inc
xlat
jb
movs
fs
mov
inc
test
test
push
sti
jmp
mov
mov
inc
sbb
push
iret
push
and
pop
aam
jno
add
(bad)
ss
ss
jmp
pop
icebp
outs
pop
pop
cvtps2pi
mov
xchg
push
adc
mov
cmp
pop
cs
repz
ins
inc
xchg
mov
test
fsubr
and
int3
dec
mov
call
adc
enter
movs
setle
xor
cmps
mov
mov
push
shr
cmp
out
sub
mov
xchg
and
jmp
ss
mov
add
mov
sub
imul
cmp
inc
jl
cmp
in
scas
add
jecxz
and
mov
aas
icebp
js
gs
pusha
xchg
cli
pop
adc
cmps
adc
push
gs
sbb
hlt
jp
fs
ins
mov
xchg
and
sub
and
mov
ret
cmps
in
lahf
stc
jno
xchg
popf
xor
daa
enter
test
adc
out
xor
outs
push
cmp
add
mov
and
cmp
add
int3
in
jmp
loope
imul
push
mov
xchg
xchg
and
and
out
xlat
ss
mov
and
push
inc
mov
icebp
into
jae
movs
cmps
jl
push
mov
sahf
push
and
xor
enter
pop
aad
mov
pop
adc
mov
(bad)
xchg
aam
mov
cmp
sbb
addr16
pop
mov
sub
movs
push
xchg
dec
mov
xor
push
cs
mov
adc
ins
cmp
shr
cmp
out
sub
mov
cmps
je
mov
or
jae
div
jae
inc
push
mov
fwait
ret
or
pop
shl
mov
xchg
add
adc
pop
jp
lods
or
adc
dec
jg
in
jge
mov
sub
inc
fs
in
scas
push
inc
outs
lea
sbb
ds
int
adc
outs
or
xor
lods
pop
sbb
sub
cmps
in
sub
hlt
inc
jno
in
pop
push
das
push
ret
daa
inc
fistp
jg
sti
cmp
fnstcw
add
out
addr16
xor
ret
and
(bad)
cmp
movs
outs
and
sbb
dec
int3
dec
add
(bad)
add
cmp
add
xchg
(bad)
cmp
rcl
lahf
stos
jge
xor
xchg
pop
or
cmp
imul
in
(bad)
push
fimul
add
clc
mov
fldenv
and
out
fistp
bsr
aaa
les
dec
mov
cmp
inc
out
mov
(bad)
int
test
psrlq
dec
sbb
jnp
fild
adc
jmp
sub
jno
cld
jecxz
call
xlat
daa
inc
and
pop
push
rol
and
adc
adc
mov
and
iret
xchg
stc
pop
(bad)
mov
sbb
iret
(bad)
aad
jb
test
pop
(bad)
or
add
pop
call
retf
adc
loopne
jp
arpl
xor
scas
call
ja
and
xchg
inc
pushf
xor
dec
cwde
mov
xchg
add
xchg
or
sub
jae
fidivr
pop
add
stos
or
add
lock
daa
retf
push
cmp
outs
adc
(bad)
stc
or
ret
shl
and
stos
ret
loop
push
push
xor
test
inc
cs
xor
jmp
xlat
gs
jbe
mov
xchg
fwait
(bad)
push
adc
and
mov
les
lahf
cwde
ins
test
sti
mov
pop
dec
call
jmp
or
shr
mov
out
push
dec
bound
rcl
ja
fldcw
pop
mov
push
test
js
in
add
mov
jle
loop
sbb
scas
sub
inc
imul
addr16
inc
ret
add
cs
shl
ss
leave
adc
and
mov
popa
jae
or
cmp
cmp
sub
mov
lahf
pop
test
pop
adc
jle
jo
sub
iret
movs
jae
adc
inc
ins
mov
jmp
mov
imul
stc
movs
push
jnp
in
clc
pop
xor
mov
cs
cmc
and
mov
test
pusha
fcomip
mov
fimul
xchg
xchg
pop
sbb
fwait
into
mov
ror
nop
outs
ja
and
mov
mov
jg
imul
push
adc
call
movs
jg
or
xchg
push
xchg
xor
call
rol
out
enter
or
mov
daa
mov
aas
cmp
nop
sbb
fwait
dec
push
cld
mov
sbb
mov
jne
jge
je
add
cmp
adc
pop
or
test
mov
mov
mov
jmp
cli
scas
out
into
push
test
inc
mov
mov
scas
mov
or
retf
stos
and
xchg
inc
fsub
pop
adc
lahf
sub
dec
jne
xchg
add
or
cwde
ins
pop
pop
(bad)
xlat
adc
test
adc
in
pop
xor
ficom
(bad)
retf
push
xchg
ret
sub
int3
call
dec
lods
xchg
shr
gs
mov
sahf
cs
popf
mov
or
and
xor
inc
retf
mov
lods
inc
aas
mov
sbb
jb
pop
movs
pop
cmc
or
iret
mov
lock
mov
inc
loope
out
out
sub
lea
mov
mov
mov
sub
mov
xor
repz
xor
shr
jl
cmp
ins
and
dec
popf
dec
pusha
neg
mov
pop
das
mov
ret
shl
fistp
fadd
add
push
inc
jb
sbb
ret
ret
sub
outs
and
lods
mov
and
push
je
fs
(bad)
loopne
(bad)
(bad)
mov
mov
outs
shl
jp
jp
cmp
lock
test
xchg
jge
mov
loopne
call
add
pop
jp
sub
adc
cmp
xor
push
ja
adc
iret
and
push
mov
dec
cmp
jne
test
pushf
fcom
jae
out
retf
fdivr
add
xor
push
adc
or
mov
jnp
aaa
movs
and
pop
jbe
in
pop
inc
push
fiadd
jb
push
push
push
mov
push
mov
jns
and
and
rcl
mov
xchg
rcr
jmp
xor
sub
(bad)
sbb
ret
sar
pop
jbe
pop
cmp
jne
xchg
in
adc
xchg
sub
jge
jmp
mov
xchg
xor
adc
and
retf
or
pop
push
mov
jae
ja
jne
jae
(bad)
inc
or
mov
xor
sti
mov
repnz
push
(bad)
add
xchg
pop
push
push
inc
aas
lds
(bad)
jo
fimul
retf
sbb
push
jbe
out
and
add
stos
pop
retf
mov
sub
pop
sub
aam
cmps
push
push
inc
mov
shr
loope
dec
add
imul
mov
jle
pop
xor
inc
rcl
test
div
mov
(bad)
dec
mov
dec
adc
xor
test
lahf
in
call
xor
fwait
lea
push
add
adc
in
rol
dec
inc
sbb
adc
xchg
popf
pop
gs
add
mov
out
dec
test
lods
dec
adc
dec
mov
or
call
mov
fimul
out
cwde
xor
push
xchg
jns
das
imul
mov
out
out
mov
sbb
inc
mov
data16
(bad)
mov
cwde
mov
daa
jb
imul
lahf
stos
push
adc
push
sbb
shl
mov
add
jns
push
js
jo
movs
fadd
lahf
jl
pushf
dec
sub
outs
jmp
mov
jbe
mov
mov
or
hlt
(bad)
push
add
mov
ins
iret
xchg
mov
popf
adc
push
adc
pushf
adc
aas
mov
cmps
outs
jo
inc
inc
xchg
mov
mov
adc
push
mov
xchg
pop
imul
push
pop
retf
imul
shr
push
push
scas
addr16
(bad)
pushf
out
sahf
jb
adc
in
mov
push
imul
mov
ins
ins
xchg
jns
jne
adc
cmp
mov
add
mov
test
es
in
js
fild
xlat
pop
or
push
fnsave
test
jge
xchg
mov
in
addr16
push
jg
pop
mov
inc
movs
cmps
or
cmp
inc
xchg
lods
lahf
push
aam
das
scas
dec
das
add
mov
cmp
imul
ret
(bad)
scas
in
pop
ret
lods
and
into
neg
loopne
xchg
(bad)
and
dec
jae
movs
or
les
(bad)
fsubr
mov
sbb
shl
ja
jecxz
jbe
sub
xchg
call
stos
dec
nop
aas
in
add
cwde
and
in
push
retf
dec
inc
push
sub
lock
inc
sub
out
lds
imul
dec
fldcw
mov
aad
and
fxch
jnp
jno
or
fsubr
pop
jecxz
jg
push
(bad)
xchg
mov
ffreep
jmp
in
xor
xlat
inc
mov
inc
push
gs
sbb
aam
sbb
xor
imul
xchg
in
pop
pop
in
fbld
shl
cwde
fisub
jl
movs
sub
pop
jp
in
sbb
clc
neg
sti
shr
leave
inc
div
mov
and
mov
jns
sbb
out
int3
(bad)
push
jp
enter
mov
bound
pop
stos
(bad)
mov
mov
lds
fsub
neg
jno
push
lock
in
inc
push
dec
std
ret
dec
imul
xlat
int3
lods
jne
ds
sbb
mov
sbb
ret
call
xor
ret
dec
ret
sahf
fimul
fsubr
xor
cmc
dec
popf
mov
dec
pop
cli
jo
and
std
jnp
mov
clc
out
(bad)
sti
dec
jnp
dec
cmp
sub
(bad)
neg
mov
mov
mov
bnd
aam
dec
sub
out
sub
jmp
sub
test
jp
ins
retf
dec
arpl
cmp
xor
gs
in
repnz
or
jbe
(bad)
jge
push
or
test
fld
mov
test
or
xchg
xchg
jge
fs
xchg
sub
fild
mov
pop
mov
movs
xchg
pop
mov
jno
shl
shl
call
aam
imul
mov
jbe
cmp
push
repz
add
into
sbb
add
sbb
add
(bad)
pop
lods
cdq
lahf
mov
or
inc
jg
rol
out
in
or
cld
cmp
in
xchg
lock
xor
ret
pop
mov
sbb
mov
cdq
sub
mov
mov
jge
and
in
dec
outs
dec
shl
inc
add
aad
imul
jmp
or
fsub
xchg
imul
or
sbb
iret
inc
xchg
retf
enter
xor
test
sbb
jmp
mov
rol
out
and
inc
jae
jl
loop
hlt
cmp
pop
push
pop
xchg
pusha
(bad)
mov
(bad)
mov
push
xchg
rcr
in
call
test
add
push
loopne
ret
mov
push
xchg
pop
aas
mov
fistp
inc
sub
inc
mov
push
jl
dec
push
pop
in
mov
movs
jmp
neg
test
retf
aad
enter
sahf
mov
and
out
ins
ficom
sbb
cdq
loopne
xchg
adc
out
(bad)
jecxz
js
js
cmp
inc
sub
sub
cmps
popf
mov
rol
mov
retf
ficom
or
arpl
gs
and
mov
leave
fwait
sbb
pusha
jge
test
push
jp
js
(bad)
test
test
stc
xor
popa
fst
mov
mov
bound
xor
out
sbb
jecxz
cmps
shl
das
(bad)
test
mov
in
sti
ins
mov
or
or
pop
les
fstp
xor
lds
jp
push
loope
adc
jmp
xor
xchg
(bad)
lock
push
shl
mov
xor
jmp
pop
xchg
mov
jge
pop
xor
sbb
xchg
inc
dec
cmps
lea
pop
cmc
loopne
lea
dec
jbe
(bad)
imul
scas
fdiv
mov
lahf
cwde
(bad)
cmp
les
daa
push
xor
cwde
fisttp
cmp
and
xchg
and
cmps
adc
sub
xchg
sbb
mov
sub
neg
dec
push
and
mov
adc
pop
inc
jo
jne
cmp
pop
jge
imul
xchg
add
inc
dec
sub
sar
pop
push
and
(bad)
scas
inc
(bad)
mov
adc
adc
fnstcw
push
and
pop
in
mov
repnz
cwde
push
movs
mov
cmc
xor
lahf
cli
xchg
ror
xchg
fwait
jmp
fcom
movs
cli
ss
adc
jbe
jb
xchg
jae
sub
imul
mov
out
pusha
dec
add
dec
call
mov
dec
out
sti
stc
das
mov
movs
pop
pop
out
popa
stc
in
dec
cs
sbb
movs
sbb
xchg
or
mov
out
mov
stos
adc
cmp
cs
jecxz
add
xchg
(bad)
cdq
imul
or
int3
xor
enter
mov
pop
xor
dec
mov
xchg
shl
out
inc
out
in
sbb
inc
pop
add
jp
push
js
xchg
dec
(bad)
stos
jge
loop
push
dec
jo
mov
mov
push
pop
sub
dec
sbb
gs
sub
addr16
lahf
leave
sbb
jae
ss
clc
call
mov
xor
shl
call
in
inc
jns
iret
adc
and
xchg
jae
popf
and
das
cmps
mov
xor
pop
mul
in
dec
mov
sbb
add
int
test
xor
ret
add
push
pop
ds
js
jns
xchg
and
movs
inc
or
cmp
xor
xchg
jmp
ret
cs
pop
jns
enter
shl
inc
or
call
jg
push
dec
add
call
xor
jne
movs
mov
mov
fstp
dec
cmp
leave
cwde
xchg
ins
aaa
lods
lock
fwait
dec
push
pop
std
in
call
fisttp
mov
nop
cmp
jb
cli
shl
in
pusha
loope
pusha
mov
push
int3
dec
pop
ret
ss
in
into
ds
sbb
arpl
jmp
scas
sbb
push
ja
xchg
jns
in
ror
cdq
pop
mov
test
lods
out
jp
push
mov
pop
pop
xchg
std
jp
test
cmp
jne
push
push
(bad)
jnp
pop
dec
movs
int3
lods
xchg
sti
xchg
dec
test
cmp
call
pop
ds
js
(bad)
pop
xor
movs
repnz
pop
dec
jbe
and
jae
dec
cmp
push
popa
adc
sahf
xor
mov
dec
adc
push
mov
cmp
stos
lods
xor
out
add
ret
add
mov
(bad)
ds
ins
push
inc
dec
mov
out
(bad)
and
rcl
add
mov
stc
addr16
lar
icebp
mov
icebp
dec
inc
xor
jecxz
outs
adc
jp
dec
sbb
sub
ret
inc
les
mov
repnz
pop
out
xor
cmps
scas
xor
jl
fs
push
sub
xor
cmp
cld
cmp
jge
stos
sar
js
inc
push
pop
(bad)
dec
(bad)
sub
jno
daa
xor
inc
mov
ins
xor
push
push
(bad)
lods
mov
movs
int
outs
jbe
nop
and
leave
mov
inc
mov
xchg
adc
and
movs
jb
dec
bound
adc
neg
sbb
or
imul
mov
mov
popf
cmp
scas
xchg
gs
adc
dec
xor
pop
sub
pop
sbb
xlat
push
add
vprotq
(bad)
xchg
gs
jle
mov
je
adc
pop
cmps
cmp
outs
(bad)
and
inc
xchg
add
push
sub
dec
cwde
sbb
jb
imul
dec
test
dec
stos
mov
jecxz
pushf
or
enter
in
mov
adc
xchg
xchg
push
add
sbb
addr16
movs
out
mov
lea
mov
mov
cmp
(bad)
std
ret
mov
and
or
dec
cmps
mov
aaa
mov
les
in
in
xor
sub
(bad)
push
inc
and
push
mov
cli
dec
push
pop
cmp
and
dec
adc
in
push
in
xlat
aad
or
movs
ins
lahf
mov
lds
adc
call
sti
pop
(bad)
sub
mov
dec
add
and
mov
mov
cmp
inc
aad
jle
xor
or
push
aam
dec
call
fld
jne
aas
lock
daa
jge
adc
aam
lahf
jmp
aas
daa
sub
(bad)
jg
mov
jecxz
or
call
loopne
mov
adc
enter
add
mov
inc
xchg
push
mov
outs
das
pop
int
cmp
fldcw
push
(bad)
cmp
push
mov
dec
ror
add
adc
push
(bad)
mov
jmp
mov
xor
nop
xor
les
fs
adc
fs
popa
cmps
test
clc
movs
pusha
rol
nop
ins
je
mov
add
xchg
(bad)
mov
retf
popf
sub
or
test
sti
cmp
repnz
test
daa
mov
jmp
adc
mov
test
(bad)
mov
lods
sets
cmc
inc
enter
cmp
ds
fstp
xchg
inc
pushf
leave
and
xchg
(bad)
fdivr
mov
out
sub
movs
and
fwait
and
or
jg
fmul
movs
push
mov
push
call
jmp
mov
mov
imul
push
jge
inc
xor
mov
add
xor
sub
mov
pop
sub
inc
int
les
mov
sbb
jg
inc
fimul
int3
jecxz
cmps
das
rcl
inc
push
call
jle
enter
push
jns
inc
xchg
push
ins
fs
mov
mov
out
jp
adc
repz
xor
push
lea
pop
lods
jnp
shl
mov
adc
in
loop
jmp
mov
and
mov
movs
retf
stos
aaa
jg
or
cmp
call
mov
dec
xchg
push
jp
movs
mov
or
aad
sbb
ret
xchg
adc
sub
arpl
in
aam
and
inc
shl
scas
leave
dec
xchg
dec
adc
jmp
out
fld
daa
dec
neg
(bad)
xor
div
daa
out
cmp
push
jmp
in
bound
push
(bad)
sub
in
ins
push
in
(bad)
dec
repnz
ins
sbb
imul
sbb
jmp
stos
jo
push
ss
mov
and
mov
lods
les
rcl
test
add
imul
push
mov
jno
jmp
inc
push
cmp
les
and
inc
dec
xchg
sbb
shr
xor
cmp
dec
and
dec
pop
mov
and
and
push
or
loope
daa
sbb
mov
mov
iret
js
inc
loopne
or
lahf
fwait
inc
cs
mov
jecxz
call
fwait
mov
add
jecxz
sub
imul
adc
mov
sbb
sbb
icebp
fcom
pop
imul
push
xor
lea
ins
(bad)
ss
call
sbb
push
cmp
push
std
jecxz
aas
daa
cdq
jns
pop
push
dec
push
xchg
leave
punpckhwd
out
mov
mov
mov
and
dec
int3
icebp
push
push
sub
push
inc
add
jne
inc
stc
mov
vpunpckhqdq
xor
jecxz
adc
imul
fwait
je
test
outs
lods
jl
jae
mov
inc
mov
push
ins
sub
pop
fmul
lods
(bad)
(bad)
mov
cmp
push
xor
icebp
dec
adc
mov
pop
fbld
mov
adc
call
inc
pop
(bad)
call
cmps
imul
jb
sbb
cmp
or
pop
stc
or
mov
stos
push
cld
mov
ds
pushf
inc
mov
sub
cmp
mov
mov
push
fistp
or
les
xchg
scas
inc
fidiv
ins
das
jno
push
rcl
sbb
add
fwait
cmps
daa
or
jg
sbb
mov
pop
daa
bound
dec
sbb
jp
jp
out
sbb
mov
(bad)
out
aaa
inc
loop
movs
fcomp
(bad)
adc
and
(bad)
int3
pop
jmp
mov
jmp
or
jmp
xor
pop
push
xchg
xchg
and
xchg
leavew
and
sar
imul
neg
aad
add
mov
mov
jo
(bad)
cmps
retf
xchg
xor
sbb
das
sub
stc
sub
movs
enter
push
mov
int3
jbe
cld
frstor
and
pop
pop
and
dec
mov
cmc
hlt
dec
icebp
rol
scas
cmp
or
cs
push
aad
inc
pop
(bad)
int
mov
sahf
push
fucomi
sahf
sub
fcomp
pop
add
movs
movs
ret
loop
add
adc
add
test
cmp
mov
adc
cwde
int
not
ret
mov
je
mov
shl
ss
xor
loopne
stos
ds
push
jae
dec
sbb
cmps
iret
cdq
ss
aas
sbb
imul
push
ins
in
lods
sub
in
idiv
sub
sbb
pusha
sub
add
mov
out
xchg
movs
jmp
(bad)
stc
jle
xor
addr16
sub
adc
cmp
inc
ret
out
or
xchg
adc
xchg
clc
push
or
sbb
cmp
dec
mov
inc
mov
and
mov
in
mov
fs
loopne
mov
repnz
and
and
dec
sub
push
popf
in
lock
sub
mov
dec
jmp
fwait
call
xchg
iret
sbb
popf
call
movs
mov
adc
imul
jns
mov
cmc
add
push
ret
clc
test
mov
scas
dec
and
faddp
pop
dec
adc
addr16
aam
pop
push
icebp
or
loopne
mov
inc
jae
bound
jo
loop
rcr
add
mov
pop
icebp
or
add
xchg
xchg
arpl
xchg
and
xchg
rol
(bad)
repz
jl
add
into
or
add
movs
inc
inc
xor
imul
icebp
and
xchg
cmps
inc
push
push
jecxz
xor
movs
inc
lea
stos
add
fld
xor
jno
jmp
or
retf
push
outs
loop
lds
dec
imul
push
frstor
mov
ss
loop
jns
out
int
dec
inc
mov
xchg
and
adc
aam
adc
aas
sar
adc
xor
and
stos
sahf
jmp
mov
sub
loope
sub
ins
mov
inc
jle
inc
xor
adc
pop
dec
fild
adc
push
push
lahf
dec
pusha
stc
js
mov
mov
shl
cmps
mov
pushw
xchg
scas
pop
jbe
bound
mov
cmps
fcomp
inc
xlat
inc
pop
xchg
or
out
inc
lock
ficomp
(bad)
mov
push
mov
dec
mov
jmp
cwde
mov
jecxz
fprem1
out
sub
movs
pop
dec
mov
ss
add
xchg
xchg
movs
into
or
or
gs
jle
imul
stc
sbb
imul
pop
mov
jnp
daa
fs
inc
sbb
dec
adc
aaa
sub
sub
mov
cmp
fidiv
test
adc
lods
inc
push
inc
mov
cmp
stos
mov
leave
fimul
ret
movs
jecxz
(bad)
je
out
or
sub
pxor
into
scas
fadd
stos
push
fidiv
jmp
popw
(bad)
or
sub
sbb
retf
outs
pop
fidivr
sbb
jb
repz
cmp
stos
cdq
mov
adc
xor
lock
mov
inc
mov
xor
and
nop
imul
fisubr
int
mov
adc
inc
and
pushf
push
mov
enter
push
jnp
pop
lods
movs
test
shr
nop
dec
or
(bad)
add
scas
xchg
or
(bad)
mov
xchg
mov
and
mov
fist
jp
inc
adc
ja
fwait
pop
mov
adc
sti
loopne
in
ins
jmp
imul
xchg
pusha
add
aam
cmc
mov
and
pop
loopne
inc
pusha
fsub
sub
ss
out
push
cmp
xor
push
fwait
cld
jb
enter
dec
rol
cmp
mov
adc
mov
pop
inc
and
call
sbb
adc
cmp
adc
push
in
push
imul
dec
fldcw
sar
(bad)
movs
enter
jmp
jns
sbb
cmp
xchg
push
adc
mov
bound
gs
pop
int
ds
mov
jmp
xor
nop
or
xchg
jne
sbb
imul
rcl
(bad)
nop
sar
sub
repnz
push
retf
add
mov
hlt
rcl
xchg
icebp
mov
jnp
test
lds
into
mov
mov
xchg
push
pop
arpl
out
add
imul
std
outs
jns
push
xor
jns
and
jo
inc
jno
shr
fisubr
int
test
popf
and
push
fld
mov
push
pop
and
mov
xchg
cli
and
or
pop
inc
imul
ds
loop
xor
shl
cmps
inc
imul
outs
clc
dec
push
xchg
xchg
fs
repz
dec
aaa
std
fmul
cld
dec
push
hlt
lea
outs
and
fst
mov
test
inc
cmp
jg
adc
in
sbb
fimul
xchg
pop
in
dec
sbb
scas
int3
in
popf
call
lds
mov
pop
jecxz
mov
inc
sub
jnp
stos
adc
pop
mov
jmp
add
mov
stos
sub
pop
adc
jmp
jmp
dec
xchg
mov
sbb
inc
mov
cmp
sbb
dec
test
data16
xor
push
jecxz
jmp
push
mov
push
sub
adc
or
(bad)
adc
test
js
(bad)
jbe
leave
icebp
pop
fs
adc
cmps
mov
dec
arpl
lds
lock
xchg
add
pop
push
mov
mov
fdivr
jnp
pop
rcpss
ja
jecxz
mov
or
jmp
pop
call
jb
arpl
push
jo
outs
xor
dec
adc
outs
sbb
lea
(bad)
out
adc
jmp
movs
data16
adc
cs
adc
lods
cmp
ror
or
(bad)
mov
jae
movs
xor
out
in
loope
inc
std
xchg
and
repnz
jnp
push
js
cmps
mov
sub
push
sub
cdq
sbb
mov
add
out
cdq
fadd
mov
dec
mov
pushf
loop
fmul
retf
lods
xchg
push
and
aaa
xchg
iret
sub
in
sbb
repnz
sti
dec
dec
clc
and
mov
lea
jne
das
shl
jl
shr
sbb
pusha
fxch
push
sbb
mov
cli
stc
push
iret
jnp
(bad)
fucomip
imul
or
mov
div
jae
scas
aas
fld
hlt
xchg
jp
dec
mov
sbb
jle
jno
jae
lds
sbb
xor
(bad)
dec
test
enter
mov
push
inc
mov
stos
push
mov
mov
fwait
sub
jle
jl
xchg
cmp
xchg
lds
xchg
cmps
test
(bad)
(bad)
and
mov
xchg
pop
adc
clc
jb
sub
mov
xchg
(bad)
les
pusha
xor
shl
mov
scas
test
shl
mov
ret
cmp
in
cdq
or
adc
jmp
and
mov
(bad)
ss
fnsave
neg
jb
pop
ret
pop
pop
xor
xor
arpl
clc
mov
dec
pop
add
aas
fmul
and
sbb
fmul
push
fmul
shr
mov
mov
dec
xchg
sbb
adc
out
cmp
and
stc
inc
mov
cmp
sti
or
mov
mov
or
or
sub
cmp
add
cmp
aaa
sub
push
add
mov
and
mov
pop
xchg
icebp
outs
aam
xchg
ret
jno
xchg
and
jae
loop
movs
sbb
mov
push
inc
test
not
(bad)
cwde
jne
out
int3
movs
push
cmp
sub
and
dec
movs
and
cld
mov
mov
mov
inc
inc
fmul
ret
mov
ret
push
ret
jb
sub
adc
jno
sbb
mov
fstp
psubusw
sar
xchg
push
fimul
inc
ret
pop
sub
inc
adc
or
mov
cmps
pop
jmp
rcr
cli
mov
leave
aaa
ins
pop
cs
cmp
test
jne
cmp
mov
xchg
and
xor
pop
daa
cmp
fiadd
stos
add
(bad)
cli
add
or
ret
adc
fdivr
jno
aaa
pushf
dec
jns
cmc
sub
in
in
sti
cmps
inc
jge
adc
int
popa
mov
cmp
cli
retf
or
cmps
gs
xor
jp
ret
stos
mov
js
cmps
test
jle
pop
stc
sbb
call
cmc
es
enter
fnstenv
fwait
inc
push
push
in
cdq
(bad)
std
repz
dec
pop
inc
gs
cmps
lods
add
int
gs
(bad)
call
jg
and
lea
lds
data16
pop
sbb
into
jmp
mov
jmp
jns
in
xlat
(bad)
stos
mov
shl
add
out
clc
outs
cmp
xor
inc
fld
call
mov
add
fidiv
aaa
js
jb
pop
imul
inc
pushf
or
and
cwde
push
aam
mov
(bad)
lods
jo
push
rol
sbb
scas
aad
pop
mov
or
sbb
mov
repz
xchg
and
push
mov
(bad)
xchg
mov
mov
mov
icebp
(bad)
mov
push
ins
adc
add
out
dec
push
inc
sbb
mov
jnp
adc
sub
mov
mov
rcr
adc
daa
add
pop
adc
pop
sub
xchg
add
jmp
push
add
fst
mov
je
out
test
mov
shr
(bad)
xlat
xor
sbb
xchg
bnd
add
jne
shr
popa
add
jg
pop
lahf
xor
iret
jecxz
jbe
mov
mov
ret
pop
sub
in
and
adc
retf
fnstenv
movs
pushf
push
cli
lods
pop
push
xchg
test
ror
jecxz
cmp
ss
scas
dec
jbe
mov
adc
fldenv
mov
pusha
in
out
imul
jb
cmps
(bad)
call
push
leave
mov
mov
sub
div
inc
inc
test
jns
aas
test
popf
jmp
add
cmp
pop
mov
xchg
mov
xchg
ins
and
in
add
add
cmp
sub
lds
lock
aaa
not
cmp
mov
test
mov
imul
mov
data16
add
or
mov
stos
ror
lods
pop
add
(bad)
cli
into
inc
stos
pop
dec
dec
xor
adc
cli
aaa
std
and
(bad)
lock
inc
ss
cdq
sub
pop
in
stc
sbb
paddd
cmc
jne
jno
ret
and
int3
aaa
sbb
in
ficom
hlt
test
dec
das
je
cld
mov
int3
xchg
lock
jge
repnz
sbb
sahf
push
test
xchg
ds
into
push
js
mov
push
nop
mov
jl
jg
push
inc
cmps
and
mov
cmp
push
nop
leave
ja
into
inc
rcr
rol
and
data16
inc
pop
(bad)
jg
cmp
movs
popa
or
call
out
mov
cmps
ficomp
push
adc
pop
in
mov
repz
sar
inc
pushf
scas
xchg
imul
mov
xor
shr
scas
sbb
or
popa
push
cmp
out
pop
fimul
lea
inc
cdq
mov
and
imul
mov
push
xchg
test
popa
outs
(bad)
mov
test
std
std
pop
out
fldenv
mov
hlt
inc
sti
dec
add
adc
mov
aaa
jo
add
stos
xor
xor
ins
add
sub
jge
add
xchg
in
or
fistp
mov
gs
inc
xchg
stc
and
mov
out
mov
dec
dec
sbb
jp
imul
dec
adc
leave
in
rol
dec
xchg
or
mov
sub
in
mov
std
nop
add
dec
fnstenv
jns
out
rol
popf
xchg
xor
fwait
sahf
push
pop
sub
mov
cmps
sub
fisttp
mov
leave
stos
icebp
ins
ins
mov
push
jmp
adc
jns
fimul
les
scas
je
jae
jns
jb
jle
ds
cwde
in
xor
enter
loope
cmp
jg
or
jno
push
inc
and
mov
cmps
cmp
shr
movs
cwde
popa
(bad)
fwait
inc
fnstsw
xor
fbld
shr
lds
in
pop
xor
xor
push
mov
aas
out
pop
and
sub
cli
mov
(bad)
aas
cmc
cli
clc
aaa
je
xchg
out
or
pusha
test
shl
scas
push
and
cmps
repnz
and
cdq
call
xor
gs
das
in
retf
ds
mov
push
fidiv
sbb
ss
pop
push
mov
pop
bnd
js
inc
sbb
mov
loopne
adc
js
push
scas
inc
lods
dec
loope
outs
pop
hlt
outs
fldenv
ins
inc
arpl
push
arpl
iret
adc
test
sbb
pop
mov
cdq
jmp
mov
lea
fisttp
add
leave
sub
pop
ret
(bad)
mov
pop
in
adc
(bad)
mov
loop
enter
xor
addr16
iret
xchg
mov
loope
add
cmp
retf
jmp
add
jbe
jecxz
es
retf
push
mov
mov
cmp
cmp
dec
shr
push
sti
mov
daa
hlt
sar
es
shl
or
aam
inc
xor
or
push
lea
cmps
fdiv
aaa
sub
jmp
or
push
scas
stos
xchg
mov
adc
(bad)
std
add
fistp
test
sub
jo
xor
push
mov
adc
aad
xor
loopne
sbb
xchg
xor
jbe
shl
cmp
daa
bound
int
push
fcomp
inc
call
mov
fldcw
xor
cmp
cmp
lds
xchg
pop
outs
cmp
sub
push
add
lods
call
push
mov
cmp
xor
adc
adc
and
ret
repz
mov
icebp
or
inc
in
out
cmp
fisub
cmp
xchg
sbb
xchg
out
dec
ret
push
into
pmullw
jmp
leave
fsub
(bad)
out
xchg
(bad)
cmp
arpl
cmps
(bad)
aaa
sbb
sub
mov
sub
leave
and
fld
xor
pop
or
lahf
or
imul
inc
or
shl
loop
push
jmp
call
adc
inc
mov
push
sub
pop
sbb
xchg
push
(bad)
lock
mov
mov
xchg
call
adc
pop
push
popa
jo
xor
mov
mov
xchg
inc
aad
sbb
and
out
xor
fstp
loopne
sbb
outs
cmps
loopne
into
jns
iret
or
sub
and
sub
in
inc
inc
aas
cdq
sbb
or
push
xchg
xlat
adc
xlat
std
push
cld
les
push
and
push
aas
and
pop
jns
mov
dec
dec
xor
mov
add
pop
xor
pop
dec
mov
jae
xor
fstp
mov
ja
cmp
jle
retf
cmp
div
ss
sahf
int
add
dec
int
xchg
fwait
test
fst
xchg
sbb
jmp
and
adc
or
xor
cmp
inc
jge
retf
xchg
ss
(bad)
mov
mov
ss
sbb
mov
push
cmps
icebp
add
fstp
add
shr
enter
retf
cli
out
mov
push
mov
push
cmp
vpsubusb
jle
xor
pop
mov
sbb
cmp
enter
mov
push
jg
call
(bad)
inc
mov
mov
push
inc
pop
inc
daa
and
inc
rcr
jne
(bad)
push
out
push
movs
mov
jns
jecxz
jae
movq
lea
sub
xchg
arpl
scas
fwait
dec
int3
lahf
aam
inc
push
daa
iret
mov
fidivr
cmp
dec
inc
leave
push
sub
sahf
or
xor
retf
fst
cmp
push
push
push
sbb
fsub
iret
sub
dec
cld
hlt
leave
jmp
push
cwde
out
push
in
xchg
out
xor
adc
and
cmps
test
sbb
rcl
(bad)
shr
xor
dec
adc
movs
dec
jmp
xchg
in
push
test
pop
xor
xor
xchg
sbb
push
shl
inc
mov
loop
lea
push
cmps
pop
mov
inc
xor
aam
es
data16
out
loope
cli
push
xlat
xor
movs
adc
jmp
cmps
cmp
cwde
xchg
shl
xor
inc
pop
out
stos
(bad)
xchg
gs
call
out
pop
loop
ficomp
aas
and
and
add
add
das
arpl
mov
adc
iret
stos
fmul
lock
in
inc
out
stos
xchg
adc
mov
iret
xchg
jge
movs
daa
sbb
fadd
dec
rcr
fs
bound
push
push
push
sbb
fcom
pop
mov
xchg
mov
pmulhw
cld
mov
cmp
or
std
or
pop
imul
out
adc
and
(bad)
push
mov
loopne
xchg
pop
sbb
xchg
lea
mov
mov
mov
mov
dec
xor
into
int3
dec
(bad)
dec
jl
out
dec
and
div
mov
fwait
pop
push
cmp
imul
add
aam
test
ret
imul
xchg
adc
lds
(bad)
mov
jno
xchg
mov
add
(bad)
sub
fs
or
jae
pop
fstp
jae
pop
add
xlat
dec
ficom
jb
inc
add
arpl
jo
imul
in
jl
cmps
xchg
dec
mov
add
jbe
mov
movs
cmps
inc
call
dec
(bad)
imul
fwait
cmp
push
cmp
pop
aam
loop
(bad)
retf
push
jg
jo
inc
les
xchg
(bad)
repnz
xchg
addr16
pop
xchg
dec
ror
repnz
out
repnz
push
mov
stos
mov
mov
dec
icebp
pop
in
add
scas
jb
inc
sub
inc
push
pop
jl
sub
pop
xlat
iret
and
loope
leave
or
vpmacsdd
adc
neg
push
lock
inc
fwait
jae
out
icebp
and
daa
out
jle
outs
add
fidiv
les
xchg
test
shr
call
dec
in
ins
retf
in
cs
in
push
cmc
sub
popa
repnz
inc
jo
push
mov
loopne
and
push
shl
loopne
imul
or
ss
inc
neg
cmp
repz
sub
mov
cli
retf
in
retf
fwait
cld
xchg
sub
xchg
and
test
pop
pop
adc
sbb
loop
rcr
bnd
ins
adc
call
and
mov
dec
pop
retf
sub
adc
test
imul
dec
push
loope
mov
sbb
mov
mov
daa
lahf
fwait
test
add
in
pop
jmp
adc
push
cmps
call
getsec
xchg
mov
test
sahf
aam
out
popa
sub
rep
out
push
mov
cmp
mov
cmp
sbb
jnp
jmp
(bad)
jb
jl
mov
and
std
and
dec
mov
test
scas
push
push
push
push
sub
aad
push
daa
pop
clc
sbb
add
xor
cwde
xchg
push
jnp
data16
mov
inc
cmp
pop
fs
jp
rcr
ja
sbb
push
test
mov
test
data16
aad
ficom
jb
dec
mov
fmul
mov
fcomp
std
xor
sub
in
pop
rcr
mov
enter
lock
out
sub
aad
sbb
ins
pop
sbb
cmps
imul
nop
sub
mov
pop
retf
mov
mov
scas
aam
mov
and
(bad)
cmp
cmp
inc
cmp
or
push
addr16
mov
int
or
les
sbb
mov
pop
mov
dec
nop
mov
scas
ds
add
imul
sub
pop
jge
xor
push
(bad)
mov
clc
ret
xchg
sbb
push
inc
vpcmpgtd
repnz
push
push
sub
mov
mov
push
mov
retf
and
pop
push
dec
cld
mov
or
fild
sti
inc
stc
push
push
psubb
popa
inc
or
arpl
nop
pop
cmp
lock
sub
mov
pop
xor
pop
inc
xor
xchg
xlat
popf
cmps
pusha
add
pop
into
mov
push
lds
mov
sti
adc
(bad)
imul
pop
xchg
ja
int3
outs
popf
jns
out
call
xchg
in
jns
addr16
fwait
gs
sti
xchg
pop
mov
mov
xchg
fadd
fwait
cdq
js
in
jmp
jle
add
shr
and
loop
and
mov
fprem
adc
xchg
std
jmp
jmp
ficomp
pop
or
mov
sub
leave
mov
mov
retf
dec
outs
je
mov
dec
(bad)
push
pop
enter
mov
cmp
and
push
call
clc
mov
fwait
xor
scas
mov
mov
loopne
lock
jb
fs
loop
pop
sub
fistp
push
frstor
out
ins
addr16
and
or
pop
outs
dec
test
lahf
lea
inc
pop
jno
(bad)
in
lock
jnp
je
jle
cld
icebp
or
xchg
and
mov
add
jb
out
sbb
or
sbb
hlt
ret
enter
push
pop
(bad)
es
and
in
mov
in
int3
(bad)
jg
push
push
jg
cmp
pushf
je
mov
pop
or
lods
mov
loopne
out
add
xchg
mov
bound
dec
dec
and
test
enter
sub
shl
inc
bound
loop
inc
imul
and
inc
xlat
sub
xchg
stos
and
ror
loopne
mov
jle
fld
push
arpl
add
js
cwde
pop
push
and
pop
xchg
jmp
mov
int3
jl
mov
pop
sbb
xor
aaa
fcomp
sbb
cdq
jl
shl
jnp
in
mov
push
xchg
mov
retf
mov
lea
push
xor
out
daa
cmp
sbb
xchg
in
in
mov
clc
(bad)
pop
fsubr
das
lds
les
pop
shl
rcl
fldcw
in
and
dec
jnp
fisub
cmp
cmp
and
pop
xor
cmc
pop
int
popf
imul
and
ins
fild
test
pop
push
pop
stc
dec
outs
jecxz
pop
cmp
mov
inc
fwait
inc
icebp
out
inc
mov
mov
xchg
mov
mov
and
pop
jg
lods
lods
sub
pop
mov
and
aaa
xor
push
push
mov
rcl
jnp
mov
xor
aam
xor
into
xchg
sub
sub
push
add
ret
pop
icebp
mov
scas
fs
and
std
pop
or
xor
cmps
pop
out
sub
sahf
int
retf
jnp
rcr
pusha
dec
xchg
xchg
push
stos
adc
rep
cmp
cdq
sub
ins
dec
shl
test
ret
push
das
loopne
pop
repnz
mov
jmp
xor
mov
ja
mov
ror
fcmovnb
shr
aam
ret
mov
scas
je
sub
fdivr
sahf
stos
and
inc
pushf
addr16
mov
adc
sbb
mov
int
inc
xchg
es
xchg
adc
arpl
pop
outs
jno
mov
push
fs
jo
jnp
div
bnd
xor
ror
mov
loope
mov
xor
std
jne
inc
mov
sbb
pop
cmp
(bad)
adc
fidiv
sbb
out
arpl
(bad)
push
shl
inc
add
outs
xor
mov
adc
int3
or
lea
mov
jecxz
inc
icebp
sub
cmp
mov
cmc
xor
jno
push
jecxz
cmps
cmp
sub
das
xor
cwde
int3
mov
or
mov
push
hlt
lahf
pop
mov
aam
repnz
cli
sub
lods
ficomp
cwde
js
mov
test
jle
arpl
add
imul
cmp
pop
stos
mov
fld
sub
fisub
movs
imul
push
outs
push
lock
out
mov
xor
pop
fisttp
mov
out
mov
ret
test
push
clc
aad
ss
cmp
imul
xchg
jge
jae
(bad)
push
inc
mov
movs
cld
sbb
or
outs
xor
add
xor
repnz
movs
xchg
cmps
or
xor
push
loop
out
add
mov
sub
push
daa
repz
imul
scas
sbb
cwde
inc
add
stos
jg
mov
into
mov
mov
inc
inc
mov
add
ins
adc
mov
inc
into
loope
cmps
sub
sahf
pushf
cmc
lods
adc
out
adc
lock
xchg
cwde
xor
mov
pop
lahf
mov
in
pop
push
lods
cmc
xchg
mov
loope
xor
stos
lea
jne
mov
mov
jne
ret
and
pusha
xchg
mov
(bad)
in
mov
sub
popa
movs
pop
or
inc
lods
inc
sahf
test
mov
xchg
fsubr
xor
adc
xor
call
mov
dec
pop
sti
call
xchg
xor
inc
xlat
adc
xchg
call
mov
sbb
stc
sub
outs
out
adc
repnz
std
bound
xchg
cli
cmps
stos
cmp
outs
adc
(bad)
rcl
dec
pop
mov
inc
push
imul
cmp
bound
sub
push
sti
bound
and
fcmove
pop
push
sub
daa
add
fistp
mov
int
pop
and
mov
test
test
mov
lahf
jp
sahf
inc
adc
xor
call
cmp
(bad)
das
out
dec
push
adc
jmp
cmc
dec
imul
out
stc
dec
out
add
sahf
mov
imul
rcl
pop
jge
xchg
shr
lahf
push
jp
fidivr
add
test
(bad)
(bad)
and
add
or
ror
jb
shl
mov
stos
dec
jmp
mov
mov
rcl
adc
pop
mov
mov
or
aad
ins
cmp
scas
clc
xor
rol
daa
repnz
adc
data16
lds
nop
(bad)
retf
mov
mov
push
popf
add
ja
push
jle
in
outs
mov
js
push
mov
cmp
fdiv
stc
inc
arpl
aam
sbb
(bad)
retf
popa
loop
dec
inc
imul
and
push
cmp
repnz
idiv
xor
inc
inc
and
cld
out
jmp
push
dec
cmp
(bad)
mov
js
scas
fcmove
in
sub
add
push
fbld
push
sbb
jo
push
hlt
cdq
dec
fdiv
loopne
and
scas
inc
push
fimul
jbe
ret
in
(bad)
into
cld
sbb
or
imul
add
or
sbb
sti
and
sub
leave
pop
fmul
jns
lods
ja
sbb
dec
data16
mov
shl
push
aam
xchg
sbb
adc
ret
call
jbe
pop
ret
outs
clc
aam
out
fnsave
ss
and
imul
test
pop
add
scas
lock
add
loopne
enter
cmp
xchg
jae
jmp
lahf
add
pop
adc
lods
cmps
push
mov
jmp
test
aam
dec
pushf
push
inc
out
push
and
cmp
seta
cs
sub
or
ret
aam
in
and
jns
sbb
xchg
push
pop
or
pop
xor
pop
aad
test
aaa
mov
or
adc
mov
mov
test
and
mov
pop
jecxz
shl
fwait
in
ss
pop
cmc
call
loop
addr16
dec
push
leave
mov
dec
pop
dec
test
cmp
mov
aas
inc
or
adc
aam
jo
imul
mov
loop
mov
mov
xchg
xor
loopne
push
mov
into
sbb
xor
ret
cmp
les
test
pop
and
out
in
mov
xor
inc
or
das
test
xchg
push
out
clc
or
sub
and
ret
jl
lahf
jo
jmp
outs
cs
or
stos
nop
mov
or
repnz
cmps
xor
data16
pop
mov
daa
pusha
pop
out
dec
mov
sub
pop
dec
cwde
mov
add
(bad)
mov
inc
sub
xlat
sti
sbb
std
xchg
fwait
std
in
xlat
nop
add
mov
adc
or
sbb
inc
repnz
call
xchg
mov
inc
sbb
loopne
push
push
dec
call
(bad)
dec
enter
mov
or
mov
loopne
jae
cs
data16
mov
xor
pop
in
out
jno
into
push
jne
push
xchg
pop
mov
mov
clc
mov
iret
sahf
pop
icebp
cmp
cdq
cld
jecxz
stos
jae
jmp
outs
mov
inc
sbb
adc
loopne
pop
aam
mov
popf
scas
dec
in
fstp
vmovsd
stos
push
mov
dec
cli
cmp
pop
mov
lea
iret
clc
aam
repnz
adc
ret
jnp
inc
xor
cmp
xlat
es
outs
jle
add
shl
pop
xor
or
popa
retf
pop
cmp
inc
loop
mov
test
fistp
push
mov
jmp
cmp
sbb
adc
sub
js
pushf
ja
inc
ret
xor
and
cld
lock
repnz
scas
xchg
inc
enter
ins
lock
popf
inc
mov
jmp
cmps
in
jb
aaa
mov
nop
aas
repz
dec
mov
(bad)
stc
movs
ins
and
cli
test
rep
in
push
mov
out
mov
dec
pop
bound
repnz
mov
sbb
not
push
add
arpl
in
retf
mov
(bad)
or
dec
push
xchg
dec
add
psubusw
cmp
dec
cmp
fmul
cmp
aam
sbb
dec
sti
add
test
xor
test
sbb
dec
lahf
movs
xchg
mov
arpl
sub
inc
(bad)
jb
inc
fnstsw
add
retf
sub
xor
ret
cdq
or
dec
test
(bad)
sub
loope
mov
push
inc
dec
loope
xor
in
and
sub
ret
ss
icebp
push
aad
jnp
dec
scas
js
cdq
mov
popa
jg
mov
push
cdq
aam
int
jle
xchg
push
(bad)
ficom
iret
mul
fbld
mov
sbb
aam
pushf
popa
jmp
jmp
adc
pop
mov
pop
call
movs
(bad)
jecxz
ret
(bad)
pop
mov
xchg
les
lds
xchg
sbb
mov
jg
xchg
test
xor
call
leave
mov
je
je
xchg
sub
jbe
push
(bad)
stc
icebp
sbb
mov
add
scas
mov
adc
fist
jns
xchg
(bad)
pop
pop
jmp
sub
mov
mov
inc
mov
push
mov
jmp
mov
popa
(bad)
clc
push
stos
inc
stos
(bad)
test
or
dec
jnp
stos
sbb
fiadd
xor
jg
retf
dec
sbb
xchg
leave
mov
xlat
dec
jns
aas
push
mov
retf
cmp
enter
in
mov
mov
mov
mov
jae
push
mov
mov
jmp
sub
pop
pop
or
pop
je
pop
adc
lea
or
out
daa
test
pop
inc
push
jo
mov
or
lea
rol
jmp
adc
mov
cmc
sub
outs
ja
and
xlat
xchg
mov
pop
dec
ins
call
cdq
and
cmps
test
push
dec
cld
popa
cmps
rol
(bad)
mov
add
pop
and
std
jp
pushf
and
jmp
ja
loop
not
mov
mov
sub
xchg
scas
gs
aaa
add
jecxz
xchg
stc
pop
aas
inc
pop
push
add
sub
(bad)
out
mov
hlt
add
in
loop
cld
jns
pop
cmp
sub
scas
ret
pop
mov
lock
xchg
lods
lods
jo
mov
push
inc
aad
jmp
or
test
fsub
xlat
test
cmp
cmps
push
adc
stc
dec
fistp
pushf
mov
fimul
mov
inc
jae
sub
in
adc
dec
inc
and
jne
call
jbe
pop
pop
push
outs
jbe
adc
aad
lods
mov
adc
aas
stos
jnp
sbb
push
in
sbb
inc
mov
bound
lahf
adc
or
inc
stos
mov
aaa
movs
fnstsw
sbb
add
cmp
sub
dec
out
xchg
and
xchg
xchg
ret
adc
xchg
mov
push
ror
push
push
mov
stc
mov
mov
outs
or
or
sub
outs
push
pop
pop
out
xor
xchg
add
mov
aam
inc
jmp
scas
test
push
mov
repnz
xor
loopne
out
das
and
scas
aad
adc
mov
das
mov
xchg
adc
stos
or
nop
sub
adc
jl
jge
mov
inc
fisubr
add
push
pop
adc
add
jnp
mov
and
and
push
cld
scas
sbb
sahf
in
and
lds
es
data16
inc
loop
cmp
jg
adc
daa
ror
or
cmps
xchg
jecxz
dec
fwait
push
xor
inc
push
movq
sar
mov
pop
jecxz
jp
lock
sar
mov
fisttp
test
push
xor
aad
jne
in
sahf
stos
int
mov
ins
xchg
(bad)
jle
mov
mov
inc
les
sbb
xor
pusha
cs
cmp
repz
retf
in
cwde
lock
leave
mov
jl
adc
xlat
mov
xor
xor
pop
pop
hlt
mov
fisubr
dec
mov
push
popa
icebp
inc
push
jmp
jnp
hlt
retf
add
scas
pusha
fs
mov
popf
out
push
enter
push
retf
lea
lods
imul
or
or
lods
out
jp
js
xchg
inc
enter
xchg
addr16
mov
adc
rcr
scas
mov
xor
pop
mov
imul
xlat
dec
or
nop
cmps
add
adc
pop
aad
jb
bound
fiadd
lock
dec
mov
pop
(bad)
xchg
or
(bad)
pop
movs
dec
mov
(bad)
fild
outs
retf
push
ja
push
xor
adc
sar
xchg
test
mov
aas
mov
push
jne
xchg
icebp
sub
sahf
mov
or
ret
fcompp
(bad)
data16
out
rcr
jo
jns
les
cli
in
sbb
jbe
(bad)
ds
xchg
test
jmp
pop
sub
jmp
jmp
mov
push
xor
movs
lahf
test
push
pause
mov
jle
mov
or
cmp
bnd
xchg
jno
inc
ins
pop
xor
mov
out
adc
test
mov
xor
jge
dec
jbe
je
adc
shl
mov
jae
dec
jmp
sbb
shr
in
jnp
jg
out
push
mov
pop
jns
sahf
es
sbb
mov
inc
dec
and
inc
scas
jbe
sbb
pop
cdq
ror
(bad)
xor
imul
mov
jle
cmps
xchg
fistp
adc
in
lahf
sbb
(bad)
addr16
push
clc
out
mov
mov
push
mov
push
es
scas
or
xor
jle
jno
push
mov
and
xor
dec
mov
xchg
jmp
xor
xor
sar
cmps
jmp
cmps
xor
xor
sub
sbb
jne
scas
je
jno
pshufw
xchg
retf
movs
pop
push
popa
lods
dec
xchg
bnd
sub
pop
leave
mov
add
das
loop
movs
mov
pop
or
jge
dec
sahf
jbe
lds
ins
sub
jno
(bad)
in
pop
sbb
adc
jg
(bad)
fcom
es
jge
pop
xchg
out
dec
repnz
gs
lahf
dec
push
adc
inc
aad
je
je
iret
adc
dec
add
imul
test
sub
outs
mov
jbe
mov
push
ret
mov
aam
mov
mov
mov
cmps
les
jmp
(bad)
ja
(bad)
xor
push
pop
push
loop
imul
popf
aam
ret
stc
push
sub
or
popa
leave
stos
in
dec
xchg
test
pop
out
xor
shl
rcl
mov
loop
je
inc
hlt
loope
mov
or
int3
(bad)
cmp
mov
int
sbb
nop
inc
and
inc
ins
fstp
popf
pop
add
jmp
pushf
cmp
xchg
call
in
sbb
fldenv
jmp
add
cwde
mov
mov
retf
jo
inc
inc
das
outs
aam
and
ror
push
xor
enter
sub
repnz
jnp
dec
mov
rcl
int3
(bad)
fistp
jno
xchg
dec
icebp
xchg
std
mov
(bad)
push
(bad)
jo
jbe
sbb
jno
in
je
in
stc
jno
cmps
nop
lods
iret
inc
add
xor
inc
cmps
std
sbb
add
push
mov
pop
sti
or
pop
in
aas
mov
out
pushf
(bad)
xchg
test
mov
cli
mov
lds
xor
sbb
mov
push
test
fbstp
adc
dec
mov
jecxz
(bad)
add
ret
inc
nop
retf
xchg
loope
test
sbb
push
mov
xchg
les
xor
adc
mov
and
aam
jge
add
jp
push
push
push
inc
xor
out
inc
dec
jmp
xor
stc
test
mov
mov
adc
fs
add
mov
(bad)
jp
pop
and
test
xchg
dec
xor
or
add
retf
gs
and
push
lods
dec
cmp
add
pop
sub
jae
pop
pop
push
mov
inc
add
inc
mov
pusha
dec
ds
mov
cmp
pop
cmp
dec
jp
xor
jmp
ins
mov
ficom
xchg
pop
aam
mov
(bad)
dec
mov
mov
in
adc
inc
push
mov
mov
xchg
inc
(bad)
mov
repz
add
push
or
into
mov
out
add
mul
push
lods
dec
std
pop
or
shl
call
push
fcmovb
cmp
xor
mov
ret
jg
xor
adc
imul
fidiv
shl
aas
in
mov
test
jmp
dec
movs
leave
or
adc
nop
scas
nop
pop
inc
dec
jmp
adc
scas
push
test
pop
push
stc
pop
in
lahf
push
cmp
sub
lahf
and
push
mov
scas
push
sbb
repz
jns
loopne
fs
xor
and
adc
adc
je
movs
js
nop
lock
loope
inc
jb
loopne
mov
fstp
add
add
jmp
jmp
sti
fcomp
push
lahf
jno
retf
int3
cmc
mov
loop
xor
inc
or
sub
fwait
sub
imul
push
mov
mov
add
adc
jae
mov
pop
mov
stos
addr16
pop
push
mov
js
dec
xor
mov
sub
aam
ret
ret
or
sbb
xlat
fwait
adc
addr16
xor
inc
std
jmp
mov
jb
cmp
cmp
jl
xchg
das
jg
not
ds
add
fxam
jb
fldcw
and
cs
loop
jp
xchg
push
xlat
out
(bad)
jle
xchg
and
sbb
arpl
sbb
cmp
inc
(bad)
ss
popw
adc
movs
movs
out
repnz
ret
dec
dec
sbb
cmps
in
mov
leave
push
aad
or
mov
push
bound
pop
popa
mov
icebp
pop
adc
in
or
fs
pusha
dec
inc
dec
call
rcr
jmp
in
or
scas
sub
sti
sbb
aaa
push
stos
loop
jae
sbb
ins
and
loop
into
jl
ss
fstp
rol
je
sbb
adc
rol
push
xchg
and
mov
pop
mov
jle
out
sti
xor
sbb
jp
mov
jnp
sub
mov
mov
cmp
nop
call
out
fcom
pop
mov
sbb
mov
in
lea
mov
or
push
mov
jno
mov
push
push
(bad)
dec
sbb
out
xchg
fadd
(bad)
popa
ror
fidiv
arpl
daa
sub
mov
nop
mov
sub
dec
ret
imul
lahf
cwde
adc
push
xchg
js
push
mov
jmp
jp
retf
nop
inc
bnd
sub
add
mov
movs
dec
mov
les
cmp
push
cmp
pop
fxch
or
and
pop
movs
imul
leave
sar
(bad)
loopne
stc
imul
sub
out
out
fild
adc
lods
cmp
cmp
daa
(bad)
add
mov
movs
mov
popa
dec
aaa
sbb
data16
aad
in
cs
push
fdiv
push
stos
push
stc
pop
int
sbb
or
jl
les
push
cli
fild
sbb
pop
jns
fwait
xchg
push
dec
jl
(bad)
push
xchg
inc
dec
clc
loope
cmp
pop
sub
and
scas
cmp
lea
xor
stc
cmp
jb
push
into
push
idiv
dec
mov
stos
inc
push
or
mov
dec
ret
lea
int3
cmp
jno
and
xor
int
jno
and
icebp
fmul
aam
popa
(bad)
(bad)
push
jnp
inc
cmp
adc
mov
xor
or
pushf
sbb
iret
ss
retf
pop
adc
mov
std
mov
adc
and
call
pop
sti
imul
mov
jno
test
mov
fwait
mov
pop
adc
mov
fwait
push
inc
xor
div
mov
jle
retf
add
lock
ja
repz
jbe
jecxz
cmp
jmp
lods
fdivr
movs
call
clc
jp
and
in
cdq
sbb
movs
out
xor
xor
std
mov
mov
fldenv
popa
(bad)
lods
mov
int
mov
cli
in
mov
add
cs
jbe
and
jbe
dec
mov
mov
shl
aad
mov
fwait
lock
(bad)
data16
sub
mov
dec
push
inc
ins
icebp
xor
dec
adc
mov
das
js
(bad)
push
ja
aas
add
or
xchg
pop
xchg
das
cmp
xor
mov
pop
push
pop
push
mov
out
sar
pop
xchg
ja
daa
lahf
in
ret
test
jnp
stos
(bad)
dec
xchg
aaa
lds
jp
aad
in
or
dec
pop
enter
pop
adc
sbb
lea
pop
call
fsubr
mov
div
pop
mov
call
mov
mov
(bad)
dec
sub
sbb
outs
push
and
jne
mov
data16
int3
inc
add
enter
dec
and
cmp
(bad)
ja
rcr
and
xchg
lock
movs
pop
fwait
jmp
scas
mov
jl
jl
pop
popf
push
jns
rcr
xchg
(bad)
bound
push
in
ja
push
jmp
mov
push
fldenv
and
das
mov
mov
jnp
xchg
and
call
mov
jmp
mov
fbld
and
shr
sbb
rcl
in
fadd
pop
mov
cmp
arpl
dec
cwde
(bad)
mov
sub
adc
mov
cmp
xor
int
jbe
out
popf
xor
push
dec
fld
fwait
rcl
adc
add
push
iret
sub
mov
pop
rcl
jns
movs
into
cs
call
call
add
pop
pop
cli
shl
imul
or
add
dec
cmp
mov
sbb
fisub
pop
and
pusha
enter
pop
and
mov
ret
mov
mov
dec
dec
or
cmps
xor
sbb
(bad)
xchg
inc
jae
sbb
cmc
push
push
sub
and
ret
fucomip
xor
cwde
call
xor
inc
shr
lods
or
dec
call
cmc
sub
add
adc
mov
cmp
or
ss
test
(bad)
and
xchg
test
outs
sbb
cmp
add
jp
(bad)
jo
cwde
or
and
test
cmp
adc
pushw
dec
jnp
inc
xchg
je
fst
push
adc
jbe
pop
push
mov
inc
mov
lea
bound
rol
add
outs
mov
mov
xlat
mov
pop
stos
adc
test
lahf
int
cdq
hlt
ins
retf
daa
leave
mov
fwait
les
stc
dec
scas
xchg
jmp
test
test
mov
cmps
jne
add
fadd
cmp
or
adc
call
call
ja
sbb
inc
ret
cmps
jmp
std
(bad)
pop
push
push
jp
ss
test
aad
xchg
mov
cli
mov
lds
xchg
imul
mov
push
jae
or
and
mov
rol
push
int3
jl
nop
cmp
arpl
movs
sub
pop
xchg
push
cmp
call
movs
je
clc
mov
sbb
jge
fwait
mov
adc
mov
xchg
push
fadd
std
pusha
jnp
mov
sbb
aad
loope
ja
xor
sub
loopne
xchg
add
cdq
mov
adc
sbb
mov
ret
and
sub
cli
mov
rcl
jnp
xor
inc
mov
lea
pop
xchg
push
sub
(bad)
mov
repz
out
sbb
cmp
cld
pop
fnstcw
push
sbb
pop
xchg
cmp
(bad)
sbb
sub
adc
cmp
fdivp
(bad)
pop
adc
stc
test
cs
mov
test
retf
mul
lds
jl
dec
xor
sub
mov
aad
inc
js
repnz
icebp
jo
sbb
inc
push
sbb
rcr
je
sbb
clc
cs
mov
dec
(bad)
clc
xor
mov
ret
mov
nop
mov
call
ins
out
lods
ins
icebp
dec
inc
jns
repnz
call
int
and
adc
adc
test
gs
mov
mov
icebp
dec
dec
(bad)
lea
jle
jmp
jmp
(bad)
xchg
or
mov
fist
sub
push
adc
enter
clc
add
in
mov
ds
cmp
(bad)
push
and
jecxz
mul
adc
push
hlt
pushf
lods
cmps
mov
movs
push
test
pop
cmp
sub
jns
push
iret
cli
add
rcr
jmp
aad
les
call
ds
push
(bad)
lods
push
mov
iret
cdq
push
popa
in
arpl
xchg
je
test
repz
mov
repz
jmp
outs
mov
mov
xchg
inc
jmp
mov
mov
mov
movs
adc
jmp
pop
pop
sahf
inc
ins
adc
(bad)
mov
xchg
push
ret
iret
jl
dec
pop
jns
inc
ja
mov
jg
scas
shl
dec
jg
mov
shl
xchg
loopne
or
popf
ins
adc
or
loopne
mov
retf
push
push
push
ret
bnd
repz
dec
sbb
adc
xchg
loop
pushf
mov
pop
mov
(bad)
jp
out
in
mov
mov
clc
xchg
stos
js
jecxz
or
daa
sbb
jle
out
ds
div
adc
xor
je
adc
pop
pop
in
or
inc
mov
pop
sti
repnz
pop
xor
out
sbb
xor
sbb
popa
mov
std
shr
(bad)
ins
dec
or
jg
test
loop
inc
push
lock
push
jmp
mov
lock
push
sub
cmps
dec
cmp
xor
push
jbe
xchg
xor
sbb
jno
lds
mov
or
jae
stos
xchg
(bad)
pop
inc
scas
xchg
out
lds
pop
mov
aad
pop
or
addr16
xchg
out
mov
mov
push
dec
or
arpl
jmp
or
std
addr16
movs
outs
add
sub
and
aaa
inc
xchg
retf
fadd
mov
gs
and
adc
add
pop
mov
mov
retf
inc
js
pop
mov
test
pop
dec
in
and
ret
sub
adc
sbb
fsub
pop
in
imul
sub
pop
inc
(bad)
retf
bound
dec
and
push
or
sub
sbb
xchg
inc
or
retf
cmp
sahf
in
mov
mov
(bad)
gs
cmps
push
out
cmp
sub
test
and
mov
in
xchg
mov
(bad)
sbb
imul
inc
repz
fiadd
aam
and
adc
jecxz
sahf
ret
xchg
jo
sbb
lods
cmp
and
mov
mov
lea
lods
ss
inc
dec
push
dec
movs
out
retf
aad
shl
jp
mov
stos
cmps
test
in
xchg
jl
cmp
stos
mov
adc
loopne
xchg
xor
in
push
outs
leave
add
jle
movs
fistp
ror
sbb
jmp
stos
pop
mov
daa
cmp
and
push
push
jmp
push
mov
xor
sahf
dec
mov
dec
dec
xlat
test
out
ja
ins
nop
into
jecxz
mov
adc
scas
dec
mov
sbb
je
in
mov
mov
add
inc
and
call
jno
inc
pop
movs
pop
jae
in
lahf
mov
xchg
jmp
jb
and
mov
or
mov
es
pop
and
int
push
dec
leave
pop
dec
pop
jae
rol
scas
dec
inc
gs
fld
icebp
inc
fwait
pop
sub
sub
(bad)
int
sub
loop
aas
movs
cmp
aas
js
pop
mov
xchg
sbb
dec
adc
scas
jp
shl
or
and
call
sbb
mov
ret
out
push
cmp
jo
mov
hlt
sbb
jmp
ret
and
imul
push
mov
sahf
mov
push
test
movs
jb
xchg
dec
pop
push
mov
ret
push
clc
popa
imul
jns
sub
cmc
jb
dec
push
in
mov
(bad)
jae
xchg
out
adc
fs
scas
ret
mov
das
sahf
inc
or
and
outs
daa
out
(bad)
mov
inc
icebp
or
xor
xchg
and
pop
or
pop
mov
push
int
ins
adc
adc
retf
lea
and
add
retf
adc
pop
lahf
xchg
xchg
scas
cmp
pop
push
call
jne
lods
iret
in
imul
xchg
cmp
mov
mov
xor
xchg
sub
es
arpl
mov
ficomp
pop
fwait
xchg
inc
je
xlat
pop
ret
or
retf
sar
push
test
inc
pop
inc
push
rcl
and
(bad)
movs
mov
cmp
jno
pop
sbb
hlt
xor
push
repnz
xchg
inc
lea
push
popa
mov
inc
mov
in
add
sahf
ss
cdq
gs
cmp
mov
das
jbe
jmp
hlt
mov
out
addr16
inc
enter
cmp
shl
mov
mov
lock
push
daa
call
lea
add
js
scas
ja
adc
push
cld
sbb
iret
in
cmps
xor
mov
inc
clc
fdivr
jmp
cli
movs
call
retf
push
jl
or
inc
call
jb
fild
cmc
fisubr
nop
clc
push
sti
ds
out
fsubp
sbb
cmps
into
push
(bad)
mov
cwde
dec
and
rcr
jb
xlat
pop
into
sub
jns
ror
add
xor
sub
xor
adc
in
push
pop
mov
loope
out
xchg
adc
xor
leave
retf
(bad)
push
and
cmc
int3
or
sbb
sti
sbb
push
inc
ins
ret
daa
and
push
rcr
vpshab
push
inc
dec
rol
cmp
pop
std
inc
sub
adc
mov
xchg
lea
aaa
data16
cld
xor
dec
sub
shl
movs
pop
sbb
cmps
adc
pop
jbe
and
inc
and
or
mov
inc
cli
call
dec
pop
in
jmp
push
mov
shl
add
fs
dec
lea
mov
mov
dec
sti
xchg
out
call
push
mov
cmc
outs
mov
pop
or
jmp
push
xchg
(bad)
push
hlt
add
mov
inc
daa
sbb
jge
adc
dec
push
xor
cld
je
xor
pop
mov
xchg
jl
sbb
hlt
mov
aaa
dec
push
mov
clc
dec
(bad)
cmps
jns
mov
rcl
pop
addr16
cmps
pop
add
lahf
inc
call
add
addr16
push
mov
ins
scas
cli
adc
aam
mov
bound
fs
mov
repz
add
jmp
mov
fucomip
(bad)
rcl
add
xchg
cmp
sub
mov
data16
sti
pop
dec
mov
adc
pop
sahf
or
das
sti
inc
mov
mov
cmps
pop
jmp
jbe
xchg
jne
sbb
aas
xchg
pop
and
repz
in
or
add
loop
clc
mov
mov
mov
push
mov
pushf
adc
cli
cli
sub
jge
rcr
xor
cmp
icebp
mov
dec
mov
dec
test
out
fdiv
jmp
xchg
push
jle
jns
aas
fisttp
mov
dec
or
repz
les
or
cmps
outs
mov
(bad)
push
push
xchg
cld
xchg
mov
je
add
lods
cmp
test
pop
pop
ret
in
test
rcl
sar
dec
jg
push
clc
je
cmp
adc
dec
aam
movs
adc
bound
loop
jecxz
test
ds
and
push
stos
adc
cld
lahf
mov
(bad)
in
daa
cmp
inc
cmp
test
das
fild
adc
ret
mov
and
pop
adc
mov
ret
xchg
mov
(bad)
inc
xlat
push
fisub
mov
and
dec
icebp
das
cmps
dec
int
cmp
fdivr
push
(bad)
fnstenv
xchg
stc
shr
cwde
xchg
push
mov
push
sub
outs
imul
mov
scas
push
mov
lahf
enter
imul
mul
ja
mov
cmp
sbb
and
cmp
jns
ds
inc
(bad)
arpl
in
xchg
into
sti
jno
add
jbe
out
int3
sahf
xchg
js
cmp
scas
pop
lock
jmp
pop
in
and
inc
mov
(bad)
mov
xlat
push
ficom
ret
jns
in
push
jecxz
pop
mov
out
xchg
mov
sbb
jl
sub
sub
loope
and
mov
xchg
or
add
je
mov
cwde
fld
xchg
(bad)
pop
gs
sub
aas
fdiv
pop
ss
test
adc
rcr
xor
sbb
and
ret
jecxz
lods
int
mov
stos
mov
lds
jecxz
sbb
inc
(bad)
test
jge
rol
call
outs
sahf
aas
daa
outs
mov
lahf
dec
daa
fwait
pop
jb
mov
cld
xor
dec
add
rcr
jne
push
mov
sub
ds
xor
pusha
cmp
test
jp
sbb
jno
cwde
cmp
push
push
sbb
fwait
sub
fs
mov
ins
mov
inc
ins
das
cli
ins
xchg
xlat
add
cmovno
rcl
mov
mov
xor
test
test
xor
pushf
int
push
nop
and
popa
sbb
jnp
or
sub
adc
ds
jns
sub
xchg
lds
fild
icebp
into
jns
add
cmp
loope
and
ret
cmc
aam
jmp
es
sbb
cmps
test
jle
xchg
push
fistp
pop
pop
in
mov
(bad)
mov
in
jb
inc
sbb
add
inc
push
dec
(bad)
xor
pop
fst
jb
mov
std
stc
hlt
add
ins
dec
mov
shl
sbb
out
mov
push
movs
jb
mov
jns
jmp
dec
int
or
xchg
dec
cmovl
inc
mov
in
aaa
mov
loope
xchg
clc
dec
xchg
fbld
inc
fwait
daa
push
fst
sub
mov
movs
cmp
sbb
xchg
test
aam
fwait
(bad)
xor
xchg
dec
fld
sar
xor
mov
scas
jle
jb
dec
mov
pop
inc
test
test
mul
bound
call
mov
add
inc
popa
call
addr16
sbb
scas
lods
movs
or
cmps
and
jmp
(bad)
mov
cmc
xchg
call
test
cmp
gs
das
mov
xor
push
lock
push
jle
cmp
popa
sub
and
push
push
or
jge
xor
dec
inc
mov
int
aam
mov
cmp
in
test
hlt
(bad)
test
cmps
lods
out
push
mov
call
push
pop
jae
sahf
sub
pop
push
add
int3
and
pop
xlat
repz
mov
enter
lock
das
pop
mov
xor
mov
(bad)
inc
rcl
jnp
cmp
(bad)
fs
mov
push
mov
lock
in
pop
mov
cmp
fld
lock
adc
mov
pusha
jge
jne
popf
mov
push
jb
das
dec
scas
inc
jle
mov
or
cmp
ficom
cld
fwait
xor
sqrtps
xchg
dec
pop
call
jecxz
out
push
dec
jecxz
mov
xor
jl
daa
test
js
cmp
adc
mov
cmp
lock
out
jb
stos
jbe
pop
jno
or
dec
aas
mov
mov
push
gs
lock
call
pop
add
xchg
inc
cwde
cmp
dec
sbb
sti
push
add
and
jmp
adc
mov
(bad)
(bad)
scas
pop
mov
inc
loopne
dec
lock
je
mov
imul
fs
pop
inc
adc
fild
mov
mov
mov
add
lea
xchg
popf
cmps
mov
nop
sti
loop
mov
in
shr
adc
loop
or
xchg
aaa
xlat
out
jge
dec
in
fdiv
fild
les
xor
xchg
mov
je
cmps
dec
enter
ror
(bad)
xor
loopne
(bad)
or
call
popf
add
in
scas
push
in
aam
and
sbb
(bad)
cld
mov
mov
ret
xchg
arpl
sub
mov
or
cmp
lahf
loop
inc
leave
hlt
idiv
jns
pop
and
fst
mov
adc
adc
leave
and
bound
outs
stos
dec
out
xor
cmp
out
cs
push
aam
or
btr
and
rcr
lods
jmp
mov
xadd
push
pop
inc
push
ret
fistp
jo
lods
inc
out
in
push
call
cli
pushf
pop
repz
cld
push
mov
jle
pop
pusha
loopne
rcl
rcr
pop
aaa
(bad)
mov
jb
dec
repnz
ror
dec
aas
xor
(bad)
adc
std
stos
retf
sbb
outs
xor
cmp
cmps
xor
mov
jge
sbb
cmp
fisttp
aas
enter
inc
mov
ffree
int3
mov
(bad)
jnp
lahf
movs
dec
in
jl
(bad)
loopne
ror
mov
imul
xor
sub
cmp
into
xchg
das
cmp
push
lea
popf
push
pop
fcmovnb
adc
aaa
popf
adc
scas
daa
fisttp
jp
mov
inc
stos
mov
lods
pushf
sar
movs
inc
jnp
xchg
je
sbb
(bad)
imul
push
daa
xchg
adc
movs
sbb
adc
mov
cli
sti
sub
mov
(bad)
sub
int3
mov
xchg
xchg
call
sbb
xor
out
push
push
cmp
sub
pop
das
inc
mov
mov
mov
lock
jo
sar
push
jmp
retf
loopne
ror
ret
pop
xor
rol
aas
mov
mov
jmp
popf
rcl
clc
or
mov
sub
mov
mov
retf
std
ret
jae
stos
ins
out
in
mov
inc
xchg
push
xor
in
pushf
pop
adc
shl
mov
scas
xchg
cs
mov
add
outs
dec
test
inc
popf
adc
scas
in
dec
fdiv
inc
fnstenv
lea
lea
cdq
shl
outs
cmp
xchg
std
iretw
test
inc
lods
inc
mov
xchg
js
fsub
dec
inc
and
sbb
lock
call
fwait
sahf
add
popw
add
lods
cmp
push
cmps
ja
add
(bad)
mov
lds
cmps
push
shl
jno
leave
push
adc
dec
jmp
push
or
je
mov
out
xchg
adc
test
xchg
adc
pop
sub
popa
mov
pop
push
or
cmp
iret
pushf
in
(bad)
mov
ss
sub
mov
(bad)
pop
aad
imul
push
in
in
retf
adc
sbb
rcl
xchg
pop
leave
mov
rol
scas
and
inc
aas
sub
mov
sbb
push
in
xor
out
sub
jl
das
fwait
enter
jns
loop
iret
out
sub
nop
adc
sub
fild
mov
add
shl
xchg
gs
jns
pop
sbb
lods
ins
pop
lahf
ret
cmp
icebp
mov
rcl
pop
jae
aad
das
cmp
mov
in
fwait
retf
push
(bad)
xor
shr
mov
sbb
div
imul
push
stos
inc
cmp
jmp
movs
fst
dec
fld
leave
cli
or
test
xchg
pushf
mov
ds
push
lds
or
popf
jmp
mov
into
(bad)
cmp
pop
stc
add
jns
mov
pop
sub
outs
cmp
arpl
add
mov
sub
dec
aas
icebp
out
lea
mov
and
xchg
jmp
lea
popf
movs
jo
in
mov
loop
xchg
call
popa
add
inc
ret
push
lock
xchg
mov
test
cli
xor
pop
bound
ja
cmp
and
add
dec
adc
les
imul
cli
jg
pop
in
adc
fwait
inc
or
add
xor
fs
fwait
popa
cmp
fmul
int3
clc
call
mov
push
sahf
dec
jecxz
fisttp
movs
cmp
ds
pop
dec
sbb
mov
idiv
rcr
cmp
pusha
fdiv
lods
xor
fs
or
pop
lock
popa
xchg
jecxz
push
cdq
push
es
mov
push
loopne
jno
push
movs
icebp
gs
jns
sub
add
mul
in
pop
add
icebp
jecxz
ret
fst
jl
jbe
fcomp
jb
stos
js
es
jne
out
in
sub
pop
pop
pop
add
mov
mov
cld
(bad)
xor
retf
sbb
js
pop
stos
add
and
pop
dec
and
sub
gs
loope
pushf
mov
sbb
leave
xor
push
jb
lahf
arpl
test
outs
and
mov
xor
scas
jge
push
push
or
inc
pop
xchg
sbb
dec
push
aad
(bad)
out
mov
rcr
dec
cld
sbb
push
pop
inc
dec
and
mov
or
or
xchg
or
pop
jo
jnp
jo
pop
or
add
clc
test
xor
sub
mov
or
into
and
sub
in
or
xor
mov
mov
adc
or
fsub
xor
mov
dec
movs
call
sub
mov
leave
adc
xor
push
dec
fist
sub
cmps
lds
sbb
add
mov
popf
test
xor
das
sub
mov
loopne
outs
push
inc
pop
push
cld
pop
xor
fsubrp
inc
or
lahf
mov
mov
cmp
retf
or
dec
lods
dec
xor
ins
enter
movs
xchg
add
and
mov
xor
or
movs
iret
mov
mov
jmp
fnstcw
pusha
pop
push
movs
jmp
fisubr
aaa
push
jg
pop
sbb
inc
inc
scas
imul
xor
mov
jno
and
push
adc
jp
push
not
fdivr
xchg
push
pop
inc
sbb
adc
retf
shl
or
ret
enter
lock
or
xor
das
or
movs
(bad)
ss
mov
dec
push
dec
(bad)
sti
sub
rcr
gs
push
mov
jle
sahf
movs
call
ss
clc
xchg
outs
mov
sbb
neg
cmc
push
test
cmp
out
call
mov
jl
daa
adc
(bad)
cli
loopne
sub
mov
sub
fistp
rcl
retf
mov
dec
lahf
je
mov
push
popa
popf
sbb
pop
sbb
or
dec
ds
nop
lock
jle
fs
hlt
pop
dec
(bad)
add
jo
mov
mov
ds
aam
adc
add
mov
pop
xor
add
pop
(bad)
movs
loopne
out
icebp
jge
in
clc
pop
jp
mov
retf
jae
xor
shl
push
ret
and
dec
sub
lahf
mov
mov
stos
fdivrp
inc
xchg
ja
fild
dec
or
test
add
in
js
out
fwait
repz
repz
sahf
jne
mov
xchg
sub
test
pop
js
inc
add
add
push
mov
daa
mov
sar
adc
aam
sub
sar
loop
adc
sbb
cmp
cmc
dec
bound
inc
mov
inc
pop
call
aaa
test
push
sub
mov
pop
in
cmps
jg
xchg
out
(bad)
mov
fwait
mov
xor
adc
mov
jnp
test
lahf
movs
ins
sub
repnz
aas
jno
in
loop
xor
cld
cmps
loope
xchg
retf
pop
test
lds
scas
mov
push
fcomp
or
push
mov
lahf
dec
xlat
dec
sbb
in
in
ror
add
outs
cwde
cmp
mov
sbb
out
xchg
jns
shl
pop
pop
jmp
sbb
retf
mov
scas
pusha
jae
outs
loopne
stos
mov
and
cli
xchg
mov
mov
mov
lods
out
les
in
inc
cwde
push
in
rcl
pop
fsubr
inc
mov
les
push
sub
push
push
add
xor
push
add
add
fs
dec
mov
jecxz
or
push
pop
adc
scas
sbb
mov
jns
out
pop
add
jge
pop
scas
repz
repz
popf
shl
test
push
aaa
bound
leave
ret
dec
dec
pop
mov
cli
rol
adc
or
jbe
(bad)
adc
stos
int
mov
adc
mov
int
inc
test
iret
dec
push
mov
xchg
leave
ret
pop
arpl
add
xchg
jne
xchg
stc
jnp
and
adc
std
test
std
mov
stos
xchg
jmp
fist
cmp
inc
push
shl
pushf
dec
rcr
shr
imul
test
push
stc
(bad)
cmp
ret
jge
cmps
xchg
aad
cld
pusha
js
jbe
test
ficomp
arpl
icebp
mov
test
retf
mov
ja
sub
inc
dec
pop
cmps
out
xor
test
lock
dec
inc
pusha
ds
mov
adc
or
mov
rol
push
push
mov
cmp
push
aam
int
jae
in
jmp
cmp
jb
ret
test
pop
jne
push
and
cmc
imul
jne
mov
dec
inc
push
push
shr
lods
inc
das
imul
out
push
pop
push
mov
in
adc
aaa
popa
mov
xor
mov
push
outs
sar
outs
in
imul
jbe
shl
pop
jnp
pop
mov
clc
or
mov
fld
push
in
movs
leave
aam
jno
loop
inc
add
dec
add
jp
adc
int
or
(bad)
call
mov
mov
int3
pop
out
mov
add
into
outs
push
movs
add
xor
or
cmp
sbb
push
not
daa
mov
in
lds
cdq
daa
ja
mov
fcom
mov
push
in
je
call
aam
jmp
test
jns
xor
add
ja
daa
add
aam
je
es
cdq
nop
or
pop
mov
ret
push
xchg
inc
push
xor
retf
jle
jmp
out
push
cmp
cmc
inc
retf
push
pop
arpl
push
jmp
(bad)
sbb
pusha
pop
(bad)
call
jo
jl
test
test
mov
add
xchg
and
sbb
int3
int
ss
jns
inc
inc
pop
out
xchg
fimul
aam
and
(bad)
mov
imul
scas
std
cwde
scas
mov
or
cmp
arpl
lods
inc
lods
or
mov
mov
call
xchg
mov
cdq
aad
push
pop
es
fisttp
(bad)
mov
or
(bad)
sub
arpl
add
shl
mov
iret
outs
or
in
leave
ss
mov
sbb
sti
in
(bad)
jge
addr16
xchg
je
dec
adc
xchg
call
jmp
(bad)
dec
iret
adc
inc
xchg
sbb
mov
pop
jecxz
and
and
mov
bound
data16
xchg
jae
les
in
sar
adc
test
dec
popf
xlat
aam
and
mov
push
inc
or
cdq
gs
sar
test
aad
sar
xchg
jmp
in
int3
mov
cli
fimul
stos
add
push
inc
push
and
pop
mov
ret
(bad)
sub
outs
rcl
xchg
fistp
or
push
pop
retf
loope
or
sbb
cmps
add
inc
cli
repnz
hlt
pop
mov
enter
sar
cwde
movs
adc
sub
xor
test
in
mov
aam
sbb
(bad)
(bad)
jnp
push
or
jmp
fild
adc
dec
xlat
push
pop
fdiv
inc
adc
popf
sahf
stos
rol
push
cs
stos
jge
mov
cld
xor
xchg
outs
bnd
ins
movs
cmc
std
test
ret
jb
loop
mov
idiv
gs
push
enter
cs
out
lods
push
lods
and
fldenv
shr
push
shl
adc
mov
jl
push
(bad)
sbb
inc
retf
test
cwde
inc
jae
rol
lea
clc
jns
das
push
and
sti
fdiv
hlt
cmc
mov
movs
ins
pop
loop
mov
push
nop
sub
leave
inc
lock
pusha
xchg
test
cmps
mov
cdq
cmp
fldenv
jo
mov
mov
(bad)
mov
inc
sbb
mov
sbb
sbb
adc
stos
inc
sbb
lods
mov
mov
in
or
loope
ror
push
jbe
or
xchg
sub
int3
inc
sbb
xchg
add
or
add
jnp
in
ror
int
or
mov
sbb
mov
mov
pop
xchg
push
ss
lock
sbb
pop
adc
dec
or
sbb
cmp
fld
mov
sbb
mov
adc
js
xor
mov
mov
mov
add
jns
in
dec
data16
ins
and
pusha
enter
xchg
jae
clc
adc
fdivr
or
jnp
xchg
lds
cmps
and
or
test
test
cmp
cli
jns
inc
mov
xchg
retf
inc
or
xor
pushf
pusha
or
inc
retf
ins
fdivp
mov
gs
outs
jae
sub
push
test
xchg
pop
push
adc
call
out
pop
repz
mov
dec
retf
push
or
or
mov
xchg
mov
dec
sub
bound
xchg
test
fdiv
sahf
iret
jecxz
test
dec
lahf
addr16
repz
xchg
std
js
(bad)
scas
jo
push
in
fdiv
out
in
pushf
xor
mov
repnz
push
cwde
verr
inc
and
adc
ins
jae
cmp
jnp
fisttp
in
add
push
(bad)
std
jp
jecxz
dec
or
xchg
add
pop
inc
mov
(bad)
mov
mov
idiv
aam
xor
and
xchg
aas
mov
or
mov
and
jnp
pop
adc
imul
sub
test
adc
outs
std
mov
idiv
into
adc
xchg
das
outs
mov
cli
jbe
movs
mov
outs
add
stos
enter
std
dec
fcom
cmps
test
sbb
fcom
les
push
retf
and
std
jnp
add
test
enter
xor
or
shl
pop
pop
inc
sahf
xchg
faddp
cmc
pop
push
sbb
outs
adc
repnz
mov
cdq
cmp
add
push
pusha
adc
loope
xor
sub
add
arpl
pop
mov
add
inc
(bad)
(bad)
ror
jnp
cwde
lds
jo
cld
jp
mov
mov
xchg
mov
jns
lods
inc
dec
inc
and
fwait
cmps
fbstp
mov
cmp
push
sbb
repnz
add
mov
js
ret
xchg
xlat
test
add
mov
loop
dec
xor
mov
pushf
jno
sti
imul
push
leave
dec
test
(bad)
neg
xor
push
inc
inc
inc
pop
es
repz
jae
adc
cs
stos
imul
xchg
pop
sub
mov
add
mov
mov
cmp
xchg
leave
movs
mov
dec
xchg
loopne
xchg
jg
shl
mov
mov
or
mov
adc
in
sub
push
and
adc
pushf
faddp
pusha
(bad)
mov
ret
loope
stos
add
inc
mov
push
nop
push
sbb
inc
mov
(bad)
mov
bound
bnd
mov
sub
push
(bad)
pop
retf
fimul
pop
rcl
mov
sbb
and
daa
rol
retf
cwde
fstp
cmp
sub
or
rcl
and
lea
push
xor
jnp
mov
adc
aaa
dec
(bad)
pusha
inc
test
daa
je
fwait
sbb
les
dec
mov
adc
xor
pop
adc
inc
(bad)
jne
pop
xchg
test
xor
fiadd
(bad)
outs
mov
cmp
mov
xor
inc
jecxz
ret
lds
mov
cwde
xor
or
les
stos
pop
mov
jecxz
mov
mov
adc
and
shr
lahf
sub
or
pop
lahf
adc
jmp
adc
test
inc
add
lds
call
fdivr
mov
sahf
fcom
dec
push
in
das
popf
out
fwait
add
pop
pop
loope
mov
sbb
ret
inc
imul
test
dec
retf
sub
xchg
cmp
lea
add
adc
test
movs
mov
pushf
adc
jle
retf
mov
call
or
(bad)
fnstenv
(bad)
(bad)
popf
sbb
shl
mov
fdiv
test
and
sbb
adc
sub
out
popa
push
lods
add
mov
fwait
mov
popf
js
cmp
scas
jp
leave
(bad)
cld
jecxz
or
xor
jns
fwait
dec
add
mov
dec
into
inc
dec
lods
push
enter
bound
sub
popa
inc
mov
sub
push
pop
jmp
scas
jmp
mov
or
scas
repnz
aad
xor
das
dec
cld
pop
add
shl
call
sahf
jnp
pop
sahf
xor
mov
int3
int3
adc
cmp
mov
add
loop
clc
in
xor
sti
lods
cmp
popf
retf
inc
jb
outs
imul
jle
out
mov
(bad)
pop
addr16
sar
jnp
retf
sar
pop
shr
dec
push
ins
jmp
les
cmp
je
ins
inc
jb
mov
cmps
pop
cmp
scas
and
nop
sub
fadd
jmp
cmps
je
ret
fdiv
mov
lea
dec
mov
inc
mov
inc
out
push
jb
pusha
das
push
enter
retf
mov
push
cmp
push
test
sub
iret
cmp
movs
les
shl
push
jge
ins
xchg
gs
in
add
mov
mov
xor
xrelease
mov
(bad)
jmp
fwait
pop
dec
push
jecxz
xlat
push
cdq
sub
add
add
movs
aas
xchg
cld
mov
pushf
cmps
sbb
test
mov
push
int3
xchg
data16
lods
les
or
es
(bad)
mov
dec
mov
cmps
dec
pop
rol
js
lods
les
mov
cs
sbb
mov
xchg
inc
mov
push
sub
jnp
bound
push
adc
inc
test
jmp
and
adc
repz
cmps
jmp
aaa
fistp
inc
in
inc
nop
or
outs
jmp
fs
daa
sbb
and
shl
leave
xor
int3
xor
pop
into
lods
je
movs
lods
movs
inc
push
sub
mov
ja
mov
fsub
gs
gs
cdq
rcl
sbb
jmp
dec
outs
mov
aas
mov
retf
sbb
or
sub
jnp
fwait
test
mov
lds
pop
(bad)
ret
clc
fwait
sub
jns
inc
pop
and
push
jmp
jle
add
push
and
stos
cmp
pusha
fisub
jno
fst
jno
in
inc
cs
aas
nop
jo
rcl
jl
popf
sub
std
sub
sbb
cmp
and
int
fwait
jbe
mov
push
inc
mov
mov
xchg
jge
mov
push
xchg
cmp
push
dec
mov
aam
xor
imul
mov
xor
shl
sbb
ror
outs
xchg
bound
sub
mov
ret
stos
push
push
lods
fbld
sbb
mov
or
push
and
xor
or
xlat
addr16
sti
ret
jecxz
pushf
and
mov
ss
imul
mul
mov
cmp
por
dec
push
popa
test
fistp
mov
add
mov
inc
lock
movs
xchg
(bad)
(bad)
adc
pop
icebp
mov
std
or
inc
inc
in
clc
int
cmp
push
aad
inc
jmp
test
sub
sub
pop
aaa
addr16
jae
mov
sub
push
inc
sbb
mov
ficom
(bad)
cmp
call
push
(bad)
fld
in
std
(bad)
call
jb
mov
xor
fld
and
mov
sti
or
aaa
jno
jo
pop
mov
cmps
sahf
ss
in
or
test
fiadd
das
lds
add
push
mov
cwde
inc
jno
cmp
frstor
out
mov
fild
xchg
xor
clc
mov
icebp
(bad)
sar
rol
sahf
dec
es
dec
mov
sbb
daa
sbb
in
add
push
fist
xor
cdq
fsubr
ret
inc
test
test
mov
xlat
pop
or
lods
adc
or
rol
and
je
mov
mov
sub
rcl
cmps
(bad)
push
mov
mov
gs
xchg
mov
xchg
test
xor
iret
jg
rcl
add
sub
sbb
add
imul
mov
popf
retf
(bad)
or
sbb
cwde
xchg
fild
sub
pushf
mov
int3
pop
sbb
adc
jne
gs
xor
or
mov
loope
lods
aam
push
ins
sub
test
pop
push
icebp
leave
retf
lds
aaa
mov
and
jno
push
xchg
sbb
sbb
cmp
lahf
out
aaa
not
mov
test
aad
jnp
jae
or
adc
movs
inc
pop
mov
aam
and
mov
push
lock
mov
retf
inc
and
mov
repz
call
iret
rcl
cmp
jns
pop
xchg
in
mov
in
in
fs
or
loop
repz
(bad)
xchg
cmc
xchg
pop
inc
popa
pop
int
pop
les
fsubr
(bad)
cmp
cmps
jmp
mov
inc
jge
push
and
out
movlps
xor
mov
jbe
shl
inc
out
std
xor
cmp
inc
imul
and
mov
mov
inc
lahf
lock
adc
inc
jmp
ror
mov
retf
jae
xchg
or
xor
in
or
test
sub
inc
add
(bad)
aas
or
jno
lods
mov
lods
xor
mov
fmul
arpl
pop
mov
(bad)
mov
xor
dec
and
addr16
mov
cmp
(bad)
addr16
xor
add
(bad)
bound
push
mov
jno
sub
icebp
daa
(bad)
in
inc
push
rol
pusha
icebp
repnz
jnp
and
jne
loopne
cwde
inc
dec
sbb
data16
cmp
inc
out
cdq
dec
jae
scas
shr
fsub
mov
cmp
(bad)
in
mov
stos
jg
push
sbb
push
or
mov
or
jns
inc
mov
movaps
and
push
nop
popa
and
inc
loopne
outs
add
int3
sbb
sar
inc
jl
add
fst
(bad)
fs
or
loopne
add
fidivr
fld
xchg
ja
mov
and
cmp
xor
mov
sub
sub
jbe
push
xchg
jl
lea
int
xor
cmp
jge
xor
inc
scas
(bad)
icebp
sar
sti
out
or
push
mov
bound
fwait
(bad)
fisttp
push
sbb
xlat
call
xlat
into
repnz
imul
fucom
dec
adc
test
ins
sub
sub
(bad)
mov
sbb
jmp
xor
lahf
add
mov
xor
jecxz
xchg
mov
imul
inc
aad
pusha
sahf
cwde
hlt
inc
into
mov
xlat
clc
mov
jnp
mov
cmp
stos
outs
xchg
fdiv
push
jno
add
sbb
ss
pop
inc
xlat
and
ins
aaa
hlt
(bad)
cmp
test
repnz
call
mov
cmps
mov
cli
out
stos
xchg
imul
sub
out
(bad)
test
ds
scas
xchg
push
mov
add
sub
xor
cdq
pop
add
loop
cmp
mov
jnp
cs
repnz
jae
into
retf
dec
cs
xchg
js
mov
mov
arpl
or
(bad)
loopne
inc
rcl
int
je
inc
jp
adc
mov
fs
xor
je
fcomp
test
iret
ret
jo
or
inc
mov
pushf
mov
ja
pop
out
inc
jecxz
fist
sub
add
pandn
scas
aad
stos
ds
arpl
xchg
push
dec
ins
xchg
cld
ret
stos
(bad)
mov
mov
mov
jae
or
pusha
mov
push
xchg
test
adc
std
fwait
jo
cld
pop
sbb
fadd
mov
lahf
cmp
xor
ret
dec
shl
sbb
sub
(bad)
fistp
add
(bad)
out
rcr
aad
call
lock
aas
adc
adc
sub
add
sub
idiv
adc
and
repnz
and
arpl
dec
jnp
call
mov
mov
inc
dec
add
adc
mov
xchg
test
js
leave
sub
pusha
rol
xor
je
cmps
ss
jne
inc
je
aas
std
adc
pop
leave
adc
pop
xrelease
pushf
jne
mov
or
(bad)
xchg
call
outs
inc
(bad)
iret
(bad)
fiadd
xchg
clc
or
ror
xchg
mov
push
loop
scas
test
xor
mov
out
int
push
or
inc
repz
pop
push
pop
mov
test
pop
jo
sub
mov
hlt
inc
into
mov
or
movs
int
xor
lea
movs
fbstp
div
retf
imul
sub
dec
retf
dec
adc
jl
mov
cmp
xchg
mov
jo
xor
movs
lock
lock
movs
mov
adc
or
jl
pop
or
rcl
loope
xchg
xchg
push
daa
xchg
add
and
pop
inc
repnz
inc
xchg
sbb
jb
outs
int
(bad)
pop
sbb
mov
push
outs
icebp
pop
push
or
cmp
push
xor
jl
adc
or
add
ins
mov
mov
xor
inc
pop
xchg
push
jmp
inc
jmp
nop
adc
(bad)
not
fxch
and
les
mov
push
(bad)
adc
fnsave
inc
sbb
xchg
lahf
and
cld
push
sbb
bswap
push
(bad)
shl
push
ret
push
push
dec
jl
xchg
mov
call
pop
inc
fcomp
xor
fxch
je
push
sbb
scas
adc
jnp
mov
(bad)
dec
dec
das
addr16
add
push
dec
fldcw
mov
pop
pop
jb
mov
sbb
dec
push
mov
and
mov
push
rsqrtps
inc
add
popa
and
in
stos
pop
cld
(bad)
xchg
push
jno
or
loopne
mov
mov
fistp
and
xlat
gs
loopne
imul
ja
sbb
sbb
lea
dec
ror
loope
leave
iret
inc
cmp
sub
repnz
jmp
in
jmp
and
sbb
shl
inc
sbb
mov
adc
pop
and
pop
fidiv
call
imul
not
cmp
sbb
fidiv
int
jb
sbb
push
ret
xor
fadd
xchg
mov
(bad)
sbb
ret
or
dec
and
aas
ret
and
xor
pop
repz
lea
jl
push
iret
push
xchg
pop
imul
dec
jmp
cmp
imul
data16
cwde
jmp
inc
adc
in
mov
lahf
(bad)
push
cmp
mov
popa
sub
mov
jge
aam
in
cdq
das
and
cmps
xor
out
jo
pop
sbb
nop
pusha
rol
in
mov
(bad)
cld
sar
and
lds
pop
cs
jmp
push
mov
xchg
loop
mov
sbb
or
stos
and
push
xchg
int3
aam
and
push
jg
out
movs
retf
and
jne
sub
push
adc
icebp
movs
and
push
lahf
adc
sbb
xchg
xlat
pop
and
mov
lock
std
push
clc
aad
(bad)
push
ror
sahf
push
and
pop
mov
outs
or
or
mov
lahf
cmp
pop
mov
and
lahf
mov
lahf
adc
mov
scas
lahf
mov
push
add
dec
sub
sbb
inc
(bad)
stos
fisub
leave
pop
in
push
adc
mov
cs
jmp
mov
lahf
cmps
mov
pop
adc
jno
sub
push
fistp
adc
push
(bad)
lahf
addr16
stc
jae
cmp
xchg
and
cmp
test
ins
mov
jg
outs
jns
pushf
loop
rcl
lock
fsub
inc
cmp
and
in
sub
pop
dec
test
mov
mov
push
retf
iret
loope
mov
inc
jge
or
mov
xor
xchg
movs
jmp
xchg
inc
leave
add
call
inc
cmp
retf
loope
adc
mov
xchg
stc
jge
dec
adc
jp
add
mov
in
std
(bad)
neg
mov
ins
jmp
test
jbe
ja
push
out
cmp
cmps
sub
ficomp
sti
or
or
in
or
jmp
mov
es
sub
in
adc
(bad)
cmp
sub
inc
mov
mov
sub
outs
dec
(bad)
dec
add
cmp
(bad)
pop
ficom
es
add
push
lock
or
jns
xor
jge
mov
and
popw
inc
loope
test
mov
and
dec
scas
cmp
movs
add
jle
mov
cmps
cmc
and
cmc
push
jb
out
jmp
pop
sub
fdivp
nop
pop
adc
cli
mov
scas
sbb
nop
mov
mov
xor
test
xor
add
shl
add
test
mov
retf
and
dec
mov
pop
jmp
loope
out
mov
(bad)
imul
xchg
mov
jno
imul
pusha
jp
out
sub
aam
xlat
add
test
dec
fwait
xchg
out
push
shl
(bad)
hlt
dec
pop
jg
jne
cmp
mov
sar
jb
rol
mov
jbe
dec
and
sar
(bad)
cld
jnp
cmps
(bad)
aas
dec
das
pcmpgtb
and
xchg
jae
add
dec
jecxz
retf
xchg
push
dec
mov
push
lds
xchg
mov
lods
adc
push
cmp
(bad)
push
rol
mov
stos
xchg
retf
and
cwde
cmps
popa
daa
jno
jge
add
imul
pop
leave
sub
mov
and
(bad)
mov
mov
fstp
push
mov
push
movs
mov
into
xor
xchg
lds
inc
int
fs
gs
add
(bad)
pop
lahf
leave
es
loop
(bad)
cli
xor
mov
fnclex
nop
inc
das
dec
fidiv
fisubr
popa
bound
ret
test
adc
ss
scas
push
xchg
push
adc
jo
in
cmp
sbb
inc
test
mul
retf
adc
mov
out
push
push
or
out
ds
vmovdqa
jle
js
dec
ja
ins
sub
xchg
ins
cmp
add
jmp
pop
mov
test
jecxz
dec
psubb
adc
fstp
jl
ss
mov
or
adc
inc
push
sub
cmps
clc
das
pop
push
adc
mov
aaa
or
or
and
push
pop
cmps
push
mov
rcr
push
push
(bad)
ror
sub
inc
pushf
test
fild
or
xchg
xchg
inc
mov
in
cmp
je
ins
pushf
push
fdivr
mov
sub
cmp
nop
imul
outs
aad
push
or
jmp
jmp
fcom
cmc
and
ss
mov
fcomip
push
sbb
mov
dec
xchg
fisttp
jno
movs
pop
(bad)
sub
ins
add
bound
ret
movs
hlt
add
push
xchg
fst
repz
push
push
push
scas
stc
add
jbe
(bad)
add
shr
and
pushf
xor
dec
iret
mov
xchg
mov
ds
sahf
jne
adc
xchg
fadd
jnp
add
fiadd
loope
inc
lahf
mov
ror
cmp
mov
inc
push
mov
rcl
push
scas
or
mov
icebp
cmps
addr16
mov
dec
inc
xchg
gs
xor
(bad)
retf
xchg
xchg
add
jmp
ja
sbb
add
cmp
mov
mov
adc
jnp
rcr
adc
loope
push
es
and
aaa
jmp
stos
mov
ins
sub
scas
popf
mov
mov
jmp
pop
hlt
gs
int
ret
sub
sub
jle
sbb
hlt
cli
call
or
std
ins
das
pop
loop
arpl
xchg
mov
sbb
pop
mov
movs
mov
lahf
sbb
mov
sar
mov
arpl
mov
fistp
mov
ins
stos
mov
or
pop
fs
fstp
mov
jle
mov
fcomp
repz
loop
int
or
js
push
retf
xor
pop
mov
cmps
arpl
xchg
repz
push
push
jbe
inc
inc
jmp
xchg
add
ror
pop
cmps
ds
popf
mov
xor
ret
cdq
and
stos
xor
mov
push
std
jbe
nop
xchg
xor
pop
fs
das
mov
(bad)
std
call
sbb
push
push
mov
rol
dec
cmp
jo
mov
popa
ja
punpcklbw
xchg
int
test
fidiv
(bad)
cmp
out
sub
fist
pop
adc
jl
inc
call
lds
je
lahf
pop
push
or
sub
xchg
retf
pusha
sbb
rol
xor
and
push
popf
xchg
lds
pop
dec
loope
inc
mov
shr
ret
adc
out
ror
pop
cdq
sub
jg
push
data16
cli
cmp
cmc
mov
fild
mov
xchg
(bad)
repz
or
test
cmps
ins
mov
add
push
jnp
mov
xchg
add
mov
out
xchg
stos
and
jp
div
dec
mov
lahf
pop
push
inc
xchg
test
leave
sbb
adc
scas
test
into
dec
or
hlt
xchg
rcl
jle
pop
repz
sti
(bad)
nop
int
sbb
hlt
stc
sbb
retf
(bad)
cs
in
test
push
icebp
and
xchg
jg
ins
pop
inc
jl
sbb
push
mov
xchg
test
push
js
fisubr
mov
push
cmp
sub
or
jg
xor
mov
aas
pop
mov
shl
aaa
jae
cmp
xchg
adc
add
and
xchg
mov
imul
push
in
adc
shl
mov
mov
add
shr
call
ins
push
cmp
cmp
out
fiadd
xchg
dec
test
jge
jp
int
push
inc
cmp
and
xor
pop
out
mov
pop
call
mov
xchg
or
or
out
add
sub
int
(bad)
and
loop
mov
scas
int
jle
xor
mov
push
cmp
bound
or
leave
push
outs
sbb
rcr
retf
add
sub
fadd
sub
loope
dec
mov
mov
jae
or
not
and
cmp
dec
inc
xchg
stc
test
fs
outs
in
loopne
push
mov
mov
ds
ins
lea
leave
push
cmp
retf
pop
stos
out
add
enter
push
push
inc
sbb
daa
mov
or
repz
cdq
fld
dec
pop
(bad)
jmp
das
push
in
jmp
nop
shl
jae
sbb
xor
jle
rcl
dec
dec
or
adc
mov
call
mov
loope
jecxz
in
addr16
jnp
movs
cmps
test
mov
xchg
std
adc
cmc
push
out
repnz
out
sbb
fs
ret
gs
mov
fcmovb
mov
out
add
jmp
or
sahf
loop
outs
(bad)
dec
repnz
xor
dec
rcr
jno
je
ss
hlt
mov
mov
lods
and
or
cmp
cs
retf
retf
push
mov
scas
out
jns
jnp
sub
stos
push
stc
aad
pop
push
popa
pushf
outs
stc
sub
jecxz
mov
in
xor
push
mov
jmp
pop
cmp
mov
mov
sbb
dec
lock
pop
mov
or
popa
and
in
sub
mov
jle
cwde
dec
(bad)
jmp
dec
jmp
ss
fwait
clc
inc
and
jl
arpl
dec
or
std
xchg
sbb
xor
dec
mov
mov
xor
shr
xor
sub
xor
ins
push
in
push
mov
xor
adc
pop
xchg
pop
inc
arpl
xchg
inc
push
pop
push
or
inc
jnp
aas
sub
test
in
mov
or
push
out
pop
ja
stos
sbb
mov
stc
mov
cwde
push
mov
outs
arpl
movs
or
inc
mov
and
outs
(bad)
jecxz
(bad)
popf
xor
pop
jge
cmp
push
mov
sub
and
leave
pusha
cmp
shr
xchg
fwait
loop
mov
stos
movs
push
dec
mov
sbb
loope
xor
cmps
ret
xchg
ret
ficomp
inc
mov
std
xchg
cmps
jmp
pop
jmp
test
pop
add
es
mov
mov
popa
dec
pop
sbb
outs
(bad)
fld
dec
in
lds
enter
mov
xchg
add
xchg
push
ret
mov
sbb
cmps
gs
sub
(bad)
inc
xchg
aas
and
je
inc
mov
out
mov
out
dec
mov
movs
pushf
icebp
fwait
pop
jns
bound
sub
enter
mov
in
hlt
fisttp
ins
repz
aad
xor
xchg
(bad)
xchg
je
test
stc
pop
push
cmps
adc
iret
jne
sub
add
int
loope
inc
mov
add
es
stc
xor
xlat
jb
sbb
mov
inc
in
fld
xchg
push
sar
or
mov
aam
push
data16
sbb
rcl
sub
add
test
inc
mov
inc
mov
sbb
out
sbb
mov
jp
add
inc
stos
aam
js
xor
dec
xchg
mov
xchg
and
jno
sbb
or
je
int
fmul
and
mov
fisttp
cmc
ss
and
and
cmp
mov
pop
leave
std
jno
dec
out
fadd
dec
jp
hlt
and
cmp
and
cwde
loopne
push
inc
sahf
inc
loope
or
push
cmc
lods
push
ret
fimul
pop
lds
push
inc
sub
mov
sub
jmp
mov
ins
fcom
xor
(bad)
loop
inc
daa
pop
aam
test
xchg
cmp
sahf
ds
ret
repnz
xchg
inc
mov
mov
xchg
push
cdq
jmp
mov
(bad)
sbb
mov
loop
fnstenv
cs
out
and
xor
dec
aaa
jl
int
mov
fisttp
push
sub
add
inc
bound
cwde
pop
addr16
test
xchg
dec
xchg
ficomp
mov
cmp
and
imul
or
inc
popf
inc
shr
popf
mov
arpl
push
(bad)
jo
cmp
xlat
aam
and
cwde
inc
sub
out
fucomp
mov
cmps
cmp
ja
push
inc
cmp
stos
pop
popa
mov
daa
enter
repz
ins
pusha
mov
fst
or
sbb
mov
ins
xor
pop
or
sub
and
cmps
dec
jg
mov
shl
ss
jno
pop
or
jge
int3
adc
lods
add
mov
cmps
ja
out
(bad)
xchg
enter
test
sbb
mov
xchg
ds
and
push
push
cmc
mov
or
icebp
daa
ins
retf
add
dec
pop
inc
aad
popf
imul
rcr
ret
data16
add
lods
mov
lahf
(bad)
in
sbb
mov
sbb
aaa
inc
mov
add
daa
mov
les
test
call
ror
and
imul
out
scas
or
jl
lods
cld
(bad)
(bad)
pop
movs
cmp
xchg
jmp
leave
hlt
fimul
add
int3
jg
xor
(bad)
mov
(bad)
scas
pop
lods
addr16
add
aas
mov
shl
inc
mul
xor
xchg
sub
jg
adc
outs
xor
lods
dec
sub
pop
jge
das
mov
cmp
pop
ins
stc
nop
add
jle
push
fcom
mov
fisubr
inc
ss
in
jl
push
loop
lds
jae
out
and
xchg
repnz
xor
lea
mov
aad
inc
xchg
xchg
ja
add
push
dec
add
jno
push
pop
add
mov
xchg
or
adc
mov
mov
clc
retf
mov
cmc
xchg
dec
add
add
and
push
ins
push
pop
cld
jp
add
shr
adc
and
test
pop
and
sub
sbb
pop
push
out
push
mov
clc
inc
sub
xor
mov
in
jmp
mov
int3
or
(bad)
std
leave
dec
inc
jbe
imul
pushf
imul
jl
sub
mov
in
repnz
adc
fild
cwde
call
add
lods
mov
add
inc
mov
pop
xchg
cli
cmc
push
mov
or
stos
cdq
mov
pusha
inc
scas
xchg
out
repz
adc
jne
icebp
cmp
cmp
fwait
pop
test
mov
outs
and
sti
xchg
fcomi
stos
jb
and
sbb
and
fcom
mov
fmul
and
in
es
adc
sbb
fisttp
scas
xchg
in
daa
adc
xor
xchg
jge
pop
mov
mov
jo
rol
repnz
or
xchg
cmc
inc
pop
fstp
inc
sahf
retf
rep
and
xor
mov
mov
(bad)
cld
neg
in
xor
(bad)
fst
in
iret
push
mov
push
in
clc
cld
ins
or
mov
(bad)
bound
jbe
inc
push
push
adc
lock
fcom
dec
jno
jl
jo
jo
not
adc
data16
ja
pusha
addr16
mov
xchg
das
cmp
popf
add
test
repnz
rcl
arpl
xor
clc
jg
and
loop
rsqrtps
stos
push
sub
ret
mov
test
sub
icebp
popf
or
(bad)
lds
push
push
mov
in
iret
mov
inc
jne
in
inc
enter
test
in
push
shl
adc
dec
repnz
stc
push
int3
out
or
xchg
mov
fsubrp
jp
scas
repz
mov
add
aaa
clc
cdq
fimul
or
pop
imul
jo
sar
aam
shr
sti
cmc
loopne
in
cmc
fcomp
fisttp
pop
rcl
ja
add
cli
ds
das
and
xor
repnz
ret
sbb
and
mov
xlat
jmp
xchg
scas
jb
mov
int3
(bad)
adc
sub
test
fldcw
pop
sub
(bad)
ss
mov
ds
sbb
sbb
mov
mov
or
pop
ret
outs
popa
repnz
js
cmp
jbe
out
scas
pop
or
nop
ficom
in
movs
call
add
sbb
cdq
xchg
mov
xchg
loope
xchg
inc
cmps
fwait
sub
movs
cs
lods
mov
inc
xor
add
jle
loopne
or
add
loopne
dec
addr16
mov
jns
xchg
retf
xchg
cmp
data16
popf
out
cmp
jp
out
jbe
call
cli
inc
dec
push
leave
out
test
mov
rcr
pusha
sahf
add
xchg
mov
or
xor
xchg
jnp
cmp
jns
test
shl
add
sbb
jp
add
jns
jnp
mov
cmps
lods
pushf
and
icebp
mov
add
shl
lahf
sbb
push
push
fbld
lahf
(bad)
jmp
add
jo
ds
add
add
xlat
mov
test
mov
(bad)
mov
hlt
out
push
fdiv
cmp
ins
jle
mov
std
xchg
das
xchg
push
iret
cmps
fisubr
mov
ja
bound
or
clc
pusha
fwait
add
clc
xor
das
cmp
movs
add
and
mov
fisub
jecxz
sbb
pop
add
adc
xlat
sub
fistp
js
fst
sub
mov
popf
and
sub
(bad)
mov
or
add
arpl
out
cli
inc
dec
sub
add
xlat
xchg
jge
cmp
or
xor
jg
mov
bound
and
leave
cmps
(bad)
mov
xor
mov
int
sub
mov
pop
popf
loop
cmp
lods
std
cmps
addr16
adc
adc
or
sbb
(bad)
mov
push
mov
xor
les
fs
cmp
sbb
sbb
data16
and
and
sub
push
mov
imul
enter
sub
add
dec
gs
mov
mov
aad
fsubr
mov
inc
adc
cmps
mov
or
imul
addr16
cmps
pop
lods
mov
les
cmp
call
add
xor
fnsave
pop
push
sub
inc
pop
mov
hlt
jge
iret
sbb
push
not
inc
lahf
and
mov
inc
dec
mov
xor
(bad)
popf
or
cdq
pusha
pop
iret
mov
in
popf
push
cli
mov
(bad)
rcl
mov
enter
pushf
sbb
inc
xchg
push
push
mov
mov
mov
cmp
lods
sub
cmp
loope
dec
aaa
stos
push
clc
lods
xchg
cmc
movs
mov
pop
dec
call
xor
xor
(bad)
stc
fdivr
cmps
mov
push
hlt
cld
sub
dec
pop
jbe
jo
adc
jmp
or
mov
push
retf
(bad)
xor
je
mov
test
pop
cmps
stos
call
jp
sub
cdq
push
lahf
adc
je
popf
sar
jmp
fcmovnu
push
outs
mov
cmp
adc
sub
aam
sti
adc
loopne
sub
scas
sti
je
jns
(bad)
pop
pop
(bad)
clc
push
fs
addr16
cmp
add
jg
adc
mov
aam
daa
fisub
ret
mov
in
push
dec
jmp
mov
inc
sub
mov
sub
repnz
jae
sbb
jae
xchg
in
adc
adc
retf
scas
or
(bad)
loop
rcl
shr
fst
movs
daa
scas
in
popf
sbb
lahf
push
shl
pop
pop
fcomip
pop
fstp
mov
aam
mov
push
add
jne
movs
jge
inc
xchg
sub
mov
movs
add
cmp
dec
pop
imul
pop
xchg
test
xchg
xchg
xchg
fdivrp
pop
das
in
dec
sahf
xchg
hlt
jne
sub
and
outs
mov
cmp
ins
lds
fiadd
push
mov
test
call
sbb
(bad)
loop
sbb
retf
or
jg
fld
add
push
jmp
shl
sti
rcr
xchg
and
mov
dec
pop
xor
fiadd
stos
js
sub
mov
(bad)
aad
ja
push
jnp
cmc
lea
jne
jmp
sahf
aaa
les
jb
outs
(bad)
pop
mov
test
ss
push
xor
or
pop
lds
push
push
jmp
dec
jp
jmp
rol
into
add
mov
sub
je
cmp
int3
into
xchg
fwait
leave
add
or
ins
mov
adc
sub
xor
in
aaa
fisttp
mov
xchg
and
inc
sahf
jnp
sbb
retf
(bad)
call
fcmovbe
loopne
(bad)
fdiv
xchg
daa
addr16
xor
cmc
lea
js
sub
inc
cld
fsubrp
and
shl
outs
xlat
pop
aaa
xor
addr16
dec
dec
jecxz
lahf
xor
mov
cmps
(bad)
sti
mov
add
push
cld
mov
loopne
mov
pop
fwait
test
sbb
sbb
popa
and
jmp
cmp
and
mov
(bad)
adc
rcr
in
add
arpl
dec
sub
xchg
push
pop
mov
repnz
push
es
cmps
add
les
ss
and
cmp
push
adc
pop
sub
adc
aaa
aaa
clc
or
ja
jle
mov
cmc
jp
les
cdq
xchg
popa
pop
stos
pop
mov
int
sub
xor
or
jl
sbb
or
addr16
mov
int3
ret
jmp
jne
enter
sbb
push
push
xchg
mov
out
fld
lds
rcr
adc
or
inc
cmp
inc
xchg
retf
idiv
cmp
out
add
dec
jae
test
mov
cdq
push
xor
mov
mov
lahf
lock
loopne
mov
and
arpl
daa
call
cmp
pop
inc
cld
add
mov
cmc
add
je
dec
cmp
mov
push
dec
jg
cmps
fistp
mov
call
sub
xor
ficomp
repz
js
or
pop
rcl
jns
adc
(bad)
mov
retf
xchg
xchg
mov
mov
adc
clc
mov
add
lock
or
inc
fcomp
pop
out
add
arpl
aad
push
mov
and
stos
mov
add
gs
stc
ins
(bad)
mov
push
mov
push
mov
cmp
adc
and
dec
movs
jmp
scas
adc
cmc
mov
sub
out
jbe
adc
pop
or
hlt
cmp
pop
ror
cmp
daa
idiv
cmp
mov
(bad)
adc
enter
jne
mov
es
outs
out
lds
aaa
stos
(bad)
push
mov
stos
mov
mov
enter
call
cld
mul
ror
fldenv
sbb
sbb
mov
or
cmp
xor
dec
push
aad
jge
scas
scas
es
nop
repz
jmp
loopne
icebp
sub
fimul
out
mov
call
inc
mov
lea
mov
mov
cwde
cdq
dec
add
das
pop
ss
std
(bad)
fsubr
out
pop
scas
sbb
xchg
cmp
sub
add
mov
mov
(bad)
xor
add
test
jle
das
cwde
push
mov
inc
mov
repz
ret
cmp
imul
outs
jg
movs
std
lahf
jbe
cmps
(bad)
jmp
mov
xchg
movs
outs
push
lds
fs
inc
xlat
fdivr
into
sbb
pushf
out
cdq
sub
test
xchg
shl
xor
repz
data16
loope
adc
cmp
stos
adc
(bad)
sub
out
loopne
cmp
pop
mov
aad
jne
or
sbb
mov
test
ins
adc
push
or
pop
popf
movs
add
sub
sahf
mov
adc
shr
add
xor
cmp
fwait
jmp
loope
pop
lea
dec
stos
inc
jge
dec
in
mov
call
pop
xchg
movs
clc
cmp
mov
shl
inc
lea
and
lds
stos
mov
cmps
test
scas
ins
ins
arpl
vsqrtss
fisub
js
cs
sbb
mov
in
xchg
adc
pushf
jmp
dec
jmp
or
(bad)
pop
call
xor
test
adc
mov
test
lahf
jns
xchg
pop
or
pop
hlt
and
push
imul
mov
xor
cs
aam
sbb
imul
aas
movs
(bad)
sti
call
fild
fcom
mov
push
mov
gs
pop
loopne
add
addr16
scas
xor
pop
cld
mov
mov
call
aam
mov
push
add
scas
lods
stc
push
jb
test
xchg
stos
and
push
(bad)
jg
test
xchg
cdq
movs
fsubrp
pop
in
mov
imul
pop
mov
jmp
and
fist
rol
cmps
xchg
mov
pop
fwait
hlt
mov
pop
xchg
push
sub
aad
mov
or
sub
mov
push
dec
ret
xor
and
mov
cdq
out
iret
bound
mov
push
sub
and
mov
(bad)
xchg
inc
(bad)
clc
cmp
sbb
push
add
je
(bad)
sti
mov
int3
adc
outs
ret
sub
out
mov
jecxz
xchg
jmp
repnz
in
lock
and
clc
push
jge
movs
out
lds
rol
fxch
test
int
shl
pop
int
das
xchg
add
outs
cs
or
mov
icebp
cld
rol
call
mov
pop
loopne
sar
adc
push
sbb
or
jmp
ret
retf
sub
mov
ret
shl
in
xchg
push
out
pop
dec
shl
add
mov
test
stc
in
jmp
aad
xchg
shl
sub
rcl
push
(bad)
sbb
jg
push
mov
adc
loope
jmp
leave
add
sbb
cmps
fs
in
loop
jmp
or
dec
jno
pop
pop
jecxz
dec
repz
fistp
inc
inc
pop
inc
dec
or
fdivr
inc
pop
inc
lds
cs
mov
and
lea
pusha
scas
ins
fsubr
in
adc
mov
xchg
fldenv
inc
and
mov
mov
pop
fcom
fwait
add
test
pop
push
add
int
pop
mov
push
ds
cs
shl
icebp
bound
clc
movs
rcr
jne
pop
xor
cmps
inc
jl
(bad)
fcomp
sub
xor
shl
xchg
xchg
lahf
into
mov
jle
and
pop
lods
cmp
push
jge
dec
dec
repnz
xchg
xor
mov
mov
dec
cld
push
fwait
adc
popa
mov
ss
popf
or
jge
retf
mul
shr
mov
ins
xor
dec
call
mov
add
in
dec
(bad)
jmp
jo
mov
jmp
xchg
out
or
popa
xchg
mov
jmp
add
adc
mov
js
mov
sti
pop
and
jge
fsub
scas
adc
shr
lds
daa
pop
xchg
shr
xor
adc
iret
cmp
inc
or
fld
inc
jae
pop
(bad)
(bad)
out
jnp
pop
nop
inc
cmp
es
sub
sub
cmp
fs
inc
loop
test
sub
push
push
stc
repnz
adc
push
xor
std
les
sub
in
mov
or
xchg
lods
jnp
sbb
int3
scas
out
pop
cmps
dec
gs
mov
jns
pop
mov
jl
pusha
sbb
xor
cmc
sti
ins
pop
push
xchg
repz
push
ins
inc
sub
add
iret
sbb
push
movs
clc
push
dec
test
mov
adc
inc
inc
adc
cmp
ja
leave
cmp
sub
cmp
shr
cmp
sbb
pop
xchg
sbb
mov
jne
cdq
test
pop
jae
or
mov
addr16
adc
and
inc
mov
call
bound
sbb
adc
inc
addr16
xor
test
xor
add
jnp
in
out
inc
dec
jge
mov
inc
mov
mov
jecxz
xchg
push
mov
cmps
movs
mov
icebp
clc
das
in
arpl
imul
std
(bad)
sub
rol
dec
inc
push
ja
clc
(bad)
fdivr
sar
into
mov
jbe
test
xchg
fiadd
test
inc
out
rcl
push
pop
fidivr
shr
iret
outs
ins
mov
xchg
test
and
fidivr
xor
jecxz
lahf
retf
sub
xor
pop
pop
dec
sub
data16
mov
daa
(bad)
ficomp
sbb
xchg
inc
mov
push
lock
stc
xchg
pop
mov
scas
(bad)
in
mov
push
xor
xor
push
push
fs
sbb
xor
imul
out
mov
or
jno
xor
jge
pop
push
dec
fwait
push
adc
dec
xchg
jae
jle
dec
sti
mov
push
inc
xor
ins
sub
shl
xchg
iret
jne
outs
inc
mov
cs
out
dec
retf
mov
pop
(bad)
sbb
and
je
in
push
or
inc
adc
jecxz
loop
add
mov
test
es
push
cmp
fidivr
imul
and
and
xchg
out
cmp
jg
ret
sub
dec
cmp
(bad)
dec
stc
adc
dec
outs
arpl
dec
movs
dec
cmp
hlt
push
mov
xchg
jecxz
or
add
push
scas
fld
outs
bound
adc
mov
and
and
(bad)
jge
int
in
cmp
push
lea
sbb
jge
dec
jbe
xchg
add
and
stc
shr
das
clc
jecxz
pop
sbb
inc
scas
mov
test
cli
test
stc
clc
popf
mov
mov
sti
movs
mov
add
fsub
dec
stc
out
dec
imul
ds
xor
fisubr
popf
arpl
push
xchg
je
daa
dec
adc
mov
retf
xchg
fstp
test
mov
rcl
or
mov
inc
xchg
pop
(bad)
adc
pop
pop
aas
or
loopne
adc
outs
test
mov
push
aaa
and
enter
int
sahf
leave
xchg
js
jmp
rcr
xor
jo
mov
test
pop
jbe
xor
mov
loopne
xchg
mov
xor
outs
mov
loopne
in
in
jg
ret
rcl
mov
mov
std
add
adc
fsubr
dec
div
sub
dec
lea
dec
push
retf
lock
movs
stos
adc
jmp
sbb
jmp
fsubr
or
xchg
pop
mov
stos
jns
xor
ds
ret
push
aas
inc
cmp
lea
sbb
sbb
icebp
xchg
iret
xor
xor
dec
ins
adc
fldl2t
mov
xchg
adc
fs
dec
ins
shr
dec
ss
(bad)
add
test
test
mov
pop
cwde
out
cmp
pop
xor
push
fs
inc
cmc
mov
int3
dec
idiv
scas
fucom
mov
outs
call
cmp
sub
jne
pop
jo
push
push
and
xchg
jne
or
pop
mov
stos
pop
outs
mov
push
cli
jno
push
mov
xlat
es
lock
enter
pop
cmp
jmp
mov
xchg
sub
lea
stos
in
lea
push
push
aam
jl
dec
push
outs
add
sub
dec
aas
push
loop
in
xlat
stos
sbb
xor
stos
inc
rcr
inc
lds
test
or
fidiv
cmp
push
rol
scas
pop
cmc
and
clc
mov
push
cmps
scas
sub
dec
and
cs
loope
das
pop
div
xchg
xlat
lahf
push
into
xchg
cld
sub
sbb
mov
mov
mov
mov
ror
in
ret
push
outs
idiv
pop
push
stos
sbb
add
aad
or
cmp
jns
call
and
bnd
ins
retf
mov
div
int
into
ret
sahf
test
adc
jne
mov
jmp
popf
add
jmp
div
mov
ret
or
outs
cmp
es
mov
pushf
test
test
sub
cs
or
xchg
sti
nop
and
jnp
(bad)
mov
loope
adc
movs
pop
into
adc
ficomp
cmp
ds
mov
mov
push
mov
imul
js
mov
fucomi
inc
aas
dec
push
mov
nop
lds
push
jg
xor
loope
xor
aad
ret
aaa
cmp
jae
jmp
mov
(bad)
cmps
mov
ror
jo
xlat
pop
mov
dec
jae
adc
out
sbb
jl
imul
or
cmps
pushf
adc
mov
stc
dec
pusha
out
inc
test
je
lods
jmp
shl
jle
or
push
pop
inc
call
stos
xchg
push
inc
pop
shl
test
call
cld
cs
pop
lahf
jge
inc
inc
retf
enter
push
imul
std
mov
daa
mov
pushf
shl
scas
aam
popf
or
mov
daa
add
cmp
xchg
sub
cwde
je
fs
xlat
pop
mov
cmp
or
dec
fucomp
movs
or
inc
xchg
and
test
pop
nop
mov
test
fimul
mov
lahf
in
std
cmp
inc
in
and
mov
ja
xchg
fild
je
ins
dec
mov
repz
jnp
sbb
loopne
shl
mov
fdiv
test
(bad)
(bad)
mov
push
sbb
out
sub
sbb
sub
and
nop
clc
mov
mov
mov
push
fistp
neg
loop
pop
retf
xchg
repz
jg
fdivr
or
cmps
jle
mov
pushf
cmps
shl
or
add
inc
popf
aaa
je
mov
popa
and
ss
mov
or
ret
push
dec
mov
xor
movzx
sub
xlat
dec
inc
fwait
xchg
pop
cwde
pop
xlat
xchg
push
loopne
push
sti
sbb
dec
retf
add
out
sub
mov
xchg
in
cwde
fadd
lods
pop
jmp
test
fcmove
dec
adc
aad
jmp
hlt
jns
or
cmp
in
inc
jmp
cmps
push
call
mov
dec
cmp
or
imul
dec
or
aas
mov
js
jge
test
sbb
mov
inc
hlt
sub
mov
sub
sti
dec
mov
rol
popf
xchg
sub
push
fbstp
popa
push
pushf
pop
int3
inc
sbb
pop
dec
cwde
aas
sub
(bad)
test
mov
sbb
xor
jbe
imul
fisub
rep
stc
pop
das
(bad)
or
xor
cmp
sbb
(bad)
cmp
xor
xchg
arpl
mov
or
xor
fwait
test
dec
jbe
mov
adc
sub
aad
mov
or
mov
stos
fcomp
cmp
out
mov
push
addr16
cli
inc
jle
lods
stc
xchg
or
mov
loopne
push
retf
or
or
sub
and
xchg
jp
in
jbe
mov
shr
outs
bound
ins
das
in
dec
mov
inc
data16
mov
imul
out
clc
inc
jmp
sub
xchg
leave
dec
mov
or
dec
sbb
vmcall
daa
inc
shr
pushf
jge
test
inc
(bad)
sbb
(bad)
pop
movs
call
adc
cmps
cmp
in
jp
mov
mov
outs
mov
nop
fs
mov
mov
dec
and
or
ror
inc
xor
popa
mov
sub
sub
rep
ins
push
js
or
xor
pop
pusha
and
rcr
jmp
mov
sbb
scas
loope
push
out
jg
idiv
shr
lods
cmp
repz
(bad)
(bad)
out
fdivr
fld
in
aaa
in
ret
movs
sbb
outs
mov
in
sbb
sub
add
push
xchg
or
sub
sub
mov
(bad)
pop
add
xor
sub
outs
jbe
jb
add
jb
out
iret
cmp
int
dec
call
lea
aas
push
mov
push
ss
mov
retf
cmc
mov
pop
leave
hlt
fcomp
push
dec
xchg
mov
dec
jo
test
adc
xor
mov
pop
sbb
rcr
adc
sbb
fnstcw
push
dec
inc
or
push
jmp
jl
pop
leave
jmp
inc
out
jne
push
aaa
in
rol
call
into
fldcw
retf
or
in
mov
stc
ins
in
scas
es
adc
fcmovnb
or
pop
loope
jmp
ror
arpl
test
xchg
rcr
mov
or
inc
mov
pusha
jl
fsub
dec
shr
dec
and
dec
cmp
loopne
mov
es
fistp
adc
(bad)
jecxz
inc
repz
test
push
mov
adc
fst
push
push
dec
aaa
or
outs
cmps
pop
add
sahf
in
out
inc
sbb
inc
mov
lods
popa
daa
fninit
out
test
ins
inc
jmp
mov
mov
jg
dec
sar
cmp
push
pop
jns
cld
int
sbb
loopne
pop
sbb
add
jno
sub
dec
(bad)
idiv
xlat
clc
and
neg
into
mov
pop
mov
xchg
aam
(bad)
dec
push
adc
or
adc
mov
add
inc
js
mov
cmc
dec
bnd
push
nop
std
loopne
daa
or
pop
mov
out
pop
xor
fs
fldcw
jl
xchg
clc
leave
add
dec
sbb
inc
imul
mov
inc
cmps
enter
cwde
or
ror
mov
jae
hlt
mov
addr16
xchg
mov
hlt
jl
int3
mov
jg
add
mov
mov
cdq
add
sub
or
cli
sub
or
out
fild
cdq
sti
dec
push
ret
(bad)
stc
dec
ret
sub
aad
push
sub
sbb
mov
sub
cmp
test
arpl
ffree
xchg
sbb
aas
jmp
arpl
mov
loopne
stos
fcomp
sub
rol
xchg
cmp
bnd
shr
push
inc
and
add
pop
scas
nop
int
cmps
mov
jge
stos
repnz
add
repnz
ins
xor
inc
fwait
enter
in
loope
sbb
pop
adc
mov
outs
mov
xor
xchg
mov
pusha
fwait
jp
xor
jmp
test
cs
push
call
add
mov
retf
jecxz
jae
add
out
mov
xor
ja
mov
js
daa
xor
mov
mov
loop
mov
(bad)
adc
mov
clc
xchg
mov
rol
add
(bad)
adc
sub
imul
icebp
mov
ja
xor
pop
int
rcl
pop
push
cmp
inc
pop
ficom
pop
out
dec
xchg
dec
in
ret
dec
pop
and
xor
hlt
adc
pop
iret
mov
dec
popf
pop
(bad)
fadd
mov
sub
call
push
out
xchg
push
bound
into
ja
setbe
arpl
pop
es
lods
mov
mov
inc
cmps
mov
movs
mov
dec
shr
pop
and
mov
mov
adc
pop
inc
mov
or
xor
pop
div
dec
(bad)
sar
imul
add
outs
mov
dec
jge
fild
cmp
lods
push
jb
sbb
sahf
loope
mov
cdq
inc
mov
add
in
xchg
push
(bad)
shl
push
retf
xchg
cmp
mov
push
sbb
icebp
sbb
pop
sbb
call
and
jle
push
sbb
(bad)
out
push
sbb
mov
mov
and
add
mov
xor
cmp
push
popf
mov
or
sbb
(bad)
movs
inc
call
arpl
sbb
ins
mov
pop
jae
in
cmp
fcomp
aad
inc
test
sub
mov
dec
xor
mov
add
sub
(bad)
out
pop
repnz
inc
adc
jp
leave
lds
add
popa
(bad)
jecxz
rcl
frstor
inc
fwait
jl
call
sub
nop
xor
cmc
ror
cmc
nop
xchg
pop
sub
outs
cmps
mov
mov
call
sbb
popa
jl
cli
jnp
mov
add
or
mov
movs
movs
(bad)
dec
in
dec
or
mov
pop
sub
jne
pop
arpl
sub
test
xor
mov
sbb
or
movs
cmp
dec
jg
lock
xchg
ret
inc
shl
lahf
add
leave
test
sar
iret
xchg
mov
pushf
fcomp
dec
int3
mov
inc
ins
xor
add
mov
push
mov
sbb
lock
jmp
inc
scas
mov
adc
sub
retf
dec
pop
push
repz
stos
movs
mov
repnz
cmp
cmps
sub
xchg
repnz
jmp
mov
imul
sub
rol
std
xchg
dec
mov
popf
and
in
lock
ffree
xor
fcmovbe
xchg
scas
and
mov
sar
pop
je
jbe
mov
push
popa
mul
push
leave
lahf
std
cmp
fs
or
lds
jo
and
add
int3
cwde
push
(bad)
movs
mov
(bad)
xor
and
out
add
jbe
mov
rcr
pop
mov
stc
pushf
test
daa
ja
mov
xchg
and
and
sar
das
xchg
adc
and
out
or
loop
xor
or
mov
imul
jnp
mov
mov
mov
ja
popa
jb
imul
rcr
test
and
sbb
and
sub
and
xchg
cmp
outs
dec
inc
sbb
(bad)
inc
push
push
gs
jmp
or
pop
sub
ins
cmp
dec
xchg
pop
std
pop
mov
inc
push
shr
test
jbe
js
mov
shl
repnz
jp
jge
push
jg
bswap
sar
sub
lods
imul
repnz
jne
iret
ffreep
(bad)
mov
jae
push
imul
bnd
call
add
add
loop
cmps
xchg
cs
add
jne
fcomp
push
cmp
inc
cli
xchg
cmp
or
dec
(bad)
mov
mov
sbb
dec
push
or
xor
sbb
in
mov
je
inc
data16
xlat
addr16
push
cld
ret
shr
sti
push
inc
mov
sbb
dec
mul
mov
imul
stos
aad
fild
mov
mov
jns
(bad)
sbb
call
cmp
(bad)
das
push
pop
ds
sub
icebp
loop
rcl
ins
pop
cmps
cwde
test
xchg
dec
and
push
mov
repz
jge
inc
fdivr
xchg
(bad)
mov
or
pop
out
jecxz
xor
push
push
adc
mov
pushf
mov
loop
mov
mov
out
dec
dec
movs
ret
add
sbb
enter
sahf
add
push
ret
cs
mov
jle
sub
pop
cs
ret
jo
add
out
pop
fnstsw
mov
xlat
pop
dec
sbb
adc
sbb
in
outs
movs
mov
dec
cmp
adc
or
inc
mov
fwait
add
push
xor
mov
jnp
retf
xor
push
arpl
sub
pushf
cmp
in
xor
clc
dec
scas
mov
sbb
cmp
lods
cmp
cmp
mov
ja
fwait
ins
sbb
test
js
mov
or
adc
fcom
xchg
push
mov
mov
cli
dec
add
jmp
popf
inc
rcr
jle
aam
xchg
pop
sti
dec
or
pop
pusha
aad
pop
popf
pop
cmps
ss
xchg
mov
dec
ja
pusha
adc
lds
push
push
push
dec
mov
sbb
push
dec
fidiv
mov
mov
aam
mov
fst
mov
xchg
mov
or
pop
test
das
jmp
push
mov
mov
and
adc
add
out
idiv
in
mov
sub
shr
sar
jle
sub
jnp
or
ss
hlt
or
out
push
xor
add
pop
nop
das
dec
scas
imul
xor
jb
in
lock
jmp
adc
xchg
sub
rcr
mov
adc
jmp
(bad)
sahf
add
cli
push
mov
dec
sbb
cld
lea
or
mov
push
in
mov
hlt
xchg
inc
in
xchg
adc
sub
pusha
push
ins
dec
pop
mov
push
pop
(bad)
cdq
pop
adc
fimul
fst
ret
add
jne
sub
into
arpl
push
xchg
mov
mov
and
shl
jb
mov
dec
add
sub
cwde
loopne
jne
in
out
in
or
jb
mov
mov
or
data16
pop
cli
sub
lahf
popf
cmp
sub
fs
mov
mul
xchg
or
sahf
or
movlps
add
jge
loop
or
cmps
lods
jae
loope
xor
dec
fdivr
movs
sub
int3
mov
push
clc
ss
sub
add
enter
enter
jmp
cmp
push
xchg
pop
loope
repnz
iret
dec
push
pop
lahf
mov
ret
punpckldq
out
mov
lock
data16
hlt
mov
retf
adc
or
stos
out
test
cld
sbb
mov
push
sub
nop
dec
addr16
or
ret
jmp
fs
sbb
imul
xchg
xchg
pop
adc
test
imul
xchg
in
loop
pop
push
fadd
sub
sbb
loop
sbb
cs
sbb
inc
mov
cmp
out
cvttps2pi
idiv
call
enter
mov
adc
jo
repz
(bad)
js
dec
jl
push
mov
ds
rcr
cmp
sbb
addr16
add
mov
sbb
inc
loopne
cmp
or
jno
or
loop
sub
ins
jl
fdivr
in
and
cmp
xchg
out
ja
adc
sahf
mov
jmp
bound
fxch
or
popf
int
not
test
jne
retf
lods
cdq
(bad)
push
mov
es
mov
fadd
shl
cmp
cmc
xchg
push
jl
sub
dec
mov
pop
popf
std
retf
shr
aad
icebp
popf
sub
in
sbb
mov
push
(bad)
ret
dec
jne
div
pop
or
stos
in
lea
pop
add
mov
ret
jg
inc
jnp
js
adc
and
cwde
cld
loopne
cmp
jle
xor
lahf
ins
pop
or
nop
mov
mov
(bad)
(bad)
xor
sbb
icebp
mov
lods
push
adc
adc
dec
jp
sbb
inc
sbb
fld
rcr
pop
imul
imul
dec
loope
movs
loopne
out
add
imul
xor
fcomp
adc
sub
inc
(bad)
sahf
aaa
lea
mov
sti
mov
xchg
mov
jmp
mov
les
push
pop
bnd
fisub
clc
in
sbb
fbstp
cmc
jne
call
enter
and
pop
mov
cmps
out
sahf
sub
jmp
dec
in
sbb
inc
and
cmp
aad
cmp
cwde
pop
and
movs
cli
mov
mov
ja
pop
xchg
jns
in
hlt
add
mov
std
stos
push
in
call
popf
and
pop
jnp
popa
mov
mov
ret
pop
ds
mov
test
int3
data16
push
stos
push
xor
clc
push
sub
movs
mov
jmp
movs
jl
jbe
mov
ins
imul
repz
enter
shl
lahf
jl
push
mov
mov
cld
pop
xchg
imul
daa
in
mov
inc
imul
xor
jae
dec
(bad)
sub
loope
(bad)
iret
sub
das
js
js
inc
xor
scas
xor
in
fsubrp
dec
imul
inc
scas
mov
sbb
ss
pop
test
xor
pop
retf
cld
hlt
out
pop
cs
xchg
aam
arpl
iret
mov
cmp
in
jmp
(bad)
sub
inc
mov
or
clc
jle
push
pcmpeqw
fwait
jg
xchg
mov
bswap
std
(bad)
mov
in
pop
mov
or
int
jmp
sub
jle
out
lds
aad
inc
dec
bound
push
imul
xor
mov
mov
inc
cmp
rol
je
jge
push
pop
push
sub
xchg
cs
frstor
or
push
sub
cmp
sub
adc
push
aad
movs
lods
xor
inc
jmp
jmp
sti
popf
lods
mov
(bad)
mov
arpl
xor
bound
mov
adc
outs
xchg
mov
adc
push
adc
cwde
or
outs
jg
ja
pop
xchg
addr16
mov
inc
iret
add
loopne
jg
call
xchg
push
data16
jg
in
mov
mov
sbb
icebp
jge
pushf
dec
pop
inc
push
jl
sbb
add
dec
fldcw
arpl
or
push
outs
dec
and
test
rcl
mov
add
inc
mov
and
movs
add
and
lahf
mov
pop
jmp
pop
mov
xchg
lods
inc
jo
je
test
or
fldl2e
jo
fucom
inc
add
out
out
(bad)
mov
mov
loop
es
push
scas
xchg
mov
adc
pop
sbb
xor
jbe
add
and
inc
cmps
sbb
(bad)
mov
(bad)
jb
xchg
dec
mov
push
pop
xlat
jb
cwde
loope
adc
xor
ja
gs
out
add
xor
jnp
in
das
xchg
rcr
(bad)
jbe
mov
or
pop
dec
mov
pop
push
(bad)
dec
clc
push
into
pop
pop
lods
sub
pop
iret
sahf
mov
cmp
test
(bad)
js
mov
cmps
sub
iret
xlat
int3
fs
(bad)
(bad)
mov
jmp
div
test
imul
cs
cmp
or
push
(bad)
pop
jmp
clc
rcr
sar
push
adc
lahf
(bad)
leave
push
out
and
inc
dec
sub
mov
or
fistp
in
ret
mov
nop
mov
mov
pop
imul
jae
dec
sub
mov
dec
lds
mov
shr
ds
je
cs
sub
addr16
(bad)
movs
cs
outs
retf
jbe
test
lods
frstor
push
mov
cdq
inc
scas
inc
push
jae
pop
mov
daa
hlt
mov
(bad)
xlat
dec
inc
push
ror
xchg
xchg
(bad)
mov
test
xlat
je
fwait
add
stc
int
not
or
imul
xor
sahf
test
and
add
xor
inc
sbb
rcl
ror
fucomp
adc
pop
pusha
repz
std
js
jmp
ins
out
sbb
adc
sar
or
cmp
les
and
xor
inc
pushf
or
pop
movs
mov
psllw
hlt
fcom
stos
stos
cmp
iret
scas
pop
call
lods
in
shl
in
ja
mov
iret
mov
add
imul
xor
test
imul
out
imul
jnp
stos
cmps
add
call
inc
(bad)
jns
aaa
xor
sbb
iret
adc
pusha
popf
push
cmp
inc
mov
mov
idiv
pop
ret
cmp
bts
mov
loop
in
aaa
cmps
cmp
add
xor
push
lds
xchg
mov
shl
mov
in
mov
mov
push
xchg
rol
push
outs
das
(bad)
add
scas
imul
retf
lock
sbb
pop
mov
cmp
and
add
ja
int
add
imul
mov
nop
loop
lock
outs
sbb
jmp
xor
mov
scas
xchg
push
dec
out
hlt
ret
shr
sub
or
mov
dec
bound
push
or
dec
sahf
stc
das
outs
out
jmp
push
fistp
add
sub
retf
add
sub
inc
or
xor
lea
and
pop
add
add
pop
fidiv
fnsave
jmp
xlat
inc
cmp
out
es
int
adc
dec
cmp
sub
mov
sub
cmp
or
mov
push
outs
sbb
dec
mov
push
push
scas
mov
in
cmp
aad
adc
test
fdivr
sbb
mov
add
rcl
mov
jo
cli
nop
sar
cld
aad
sub
test
jg
clc
cmps
cmps
dec
ja
mov
and
or
pop
dec
cmps
ja
adc
pop
fs
daa
mov
bound
xor
jge
adc
xchg
mov
xchg
retf
cmc
sbb
rcr
mov
imul
pop
pop
xor
mov
dec
(bad)
xor
outs
call
xlat
sbb
iret
push
aam
dec
stos
out
mov
dec
inc
popf
adc
sbb
jmp
(bad)
xchg
pop
arpl
jge
pop
adc
cmps
mov
jnp
adc
dec
test
ss
lods
sbb
sub
or
mov
ins
(bad)
sbb
mov
inc
and
fnsave
jl
stc
(bad)
out
sbb
iret
add
sbb
ja
bswap
adc
mov
xor
fldcw
dec
call
loop
xchg
int
iret
arpl
mov
inc
mov
mov
outs
repnz
mov
sub
lods
(bad)
mov
inc
xchg
jnp
push
pop
sbb
fild
pop
inc
mov
add
scas
mov
mov
data16
imul
push
int
mov
jb
repnz
jb
push
add
mov
jmp
xor
or
inc
out
stos
push
mov
push
nop
out
add
mov
imul
and
pop
fild
mov
xchg
leave
mov
pop
jmp
ja
sahf
xor
int
sub
and
pop
icebp
imul
lea
into
push
int
cwde
cmp
bound
mov
sub
pop
in
pop
in
call
sub
mov
dec
sub
test
jnp
or
mov
mov
ss
jmp
push
leave
clc
jmp
fistp
push
jle
mov
jg
mov
inc
jbe
mov
mov
repz
das
pop
out
pop
sar
xchg
and
mov
sbb
fmul
pop
aad
dec
fwait
ror
sub
fldenv
daa
(bad)
jp
not
fistp
gs
add
call
sbb
(bad)
sbb
retf
sub
push
pop
popf
push
dec
and
jg
xor
int3
dec
aaa
stos
lds
xchg
push
add
xchg
or
repnz
sub
push
or
pop
out
dec
shr
cwde
inc
pop
mov
frstor
in
movs
add
movs
mov
das
adc
nop
add
pop
(bad)
lock
pop
(bad)
(bad)
and
stc
ja
and
lahf
out
mov
mov
pop
in
push
in
push
lahf
in
xor
pushf
cmp
scas
imul
xor
cmp
add
mov
inc
jno
js
jle
ja
mov
pop
retf
jge
imul
fs
(bad)
xlat
pop
mov
inc
add
fs
or
inc
aaa
gs
and
sbb
sbb
and
push
pop
sahf
retf
cli
xor
mov
jge
and
or
dec
inc
or
jmp
or
(bad)
pop
imul
mov
fcomp
jmp
jge
scas
add
sti
adc
push
dec
xor
dec
xor
jle
mov
or
mov
jp
push
inc
add
out
pop
jnp
aas
cld
in
(bad)
cmc
cmps
sti
inc
push
inc
jge
inc
fld
push
out
xor
adc
dec
jae
imul
sub
stos
add
adc
shr
dec
dec
test
pop
shl
and
cmovnp
jg
mov
jmp
add
data16
xor
sub
xchg
jmp
xchg
mov
dec
cmc
rcl
jnp
cmc
jge
cmc
imul
sbb
xor
jmp
mov
call
pop
push
out
cdq
sbb
cmp
repnz
mov
mov
xor
sti
out
(bad)
movs
sub
shl
jne
mov
adc
and
inc
add
mov
jg
xlat
mov
mov
inc
in
pop
or
xor
xchg
mov
mov
adc
hlt
jb
push
and
cmp
jns
je
call
sub
ret
push
fs
ss
in
shr
mov
push
adc
inc
repnz
and
push
jo
aam
add
cmp
ds
out
jl
dec
shr
cmc
lea
and
or
imul
leave
test
scas
(bad)
jle
ja
ffree
sub
add
jl
popf
cs
dec
(bad)
fs
lock
cmps
aas
stc
cmp
mov
repnz
sub
mov
mov
outs
mov
movs
or
test
lds
mov
enter
pop
dec
and
shl
lds
add
ja
or
xchg
cli
ret
mov
pop
mov
stos
jle
jle
xlat
cmc
cmp
cmp
xchg
(bad)
repz
adc
jmp
cmps
sar
mov
mov
iret
cmps
aam
out
repz
mov
cmp
test
scas
icebp
jl
dec
call
clc
adc
nop
sbb
daa
fisub
fwait
dec
jbe
les
add
sub
sbb
xor
push
loope
loopne
fcmovnb
lahf
push
push
jbe
push
js
sbb
aaa
xchg
mov
dec
repnz
xchg
dec
fsub
in
push
lods
xchg
adc
aas
fisttp
xor
ja
aam
sbb
pop
push
test
jecxz
or
jno
std
jne
inc
lods
xor
inc
ficomp
push
out
xlat
das
repz
and
int3
inc
sbb
mov
das
xchg
and
xor
sbb
push
mov
fs
fcmovbe
xchg
mov
dec
push
aaa
adc
mov
sub
test
sub
xchg
jae
add
icebp
movs
push
add
out
sub
adc
sub
(bad)
fnstenv
jbe
xchg
mov
call
pop
xor
mul
shl
add
push
lahf
in
lds
call
(bad)
retf
in
pop
jge
fwait
adc
fmul
adc
cmp
fisub
push
dec
cld
push
outs
or
inc
mov
mov
xchg
inc
or
lahf
mov
push
dec
call
cmp
xchg
mov
aam
push
xchg
mov
shl
es
sbb
add
out
xchg
jne
dec
inc
xchg
jmp
bound
inc
adc
mov
dec
pop
push
aam
sbb
fwait
sub
jo
int3
dec
lods
sub
repz
into
enter
and
mov
inc
rcr
ror
and
scas
xchg
gs
add
aas
frstor
and
out
loopne
in
pop
xor
or
pop
mov
push
imul
push
mov
push
push
loopne
or
fild
jp
xchg
jns
lds
add
mov
imul
into
push
or
cmp
gs
in
and
jae
push
dec
pop
fstp
xchg
les
push
jecxz
xchg
jns
jns
fistp
add
call
popa
inc
leave
push
iret
loopne
adc
in
into
loope
pop
ds
outs
sub
(bad)
adc
push
cli
jmp
jle
adc
inc
out
movs
mov
dec
in
and
aam
in
aad
scas
pop
mov
jo
mov
lds
and
adc
popf
push
cld
jne
shr
push
test
out
sbb
hlt
fistp
outs
scas
das
imul
mov
adc
or
cmp
js
stc
movs
inc
xor
popf
inc
loope
adc
adc
(bad)
mov
rcl
jge
mov
clc
jb
pop
test
push
pop
mov
movs
stos
fdivr
jmp
sbb
xchg
xor
xlat
xor
dec
add
mov
and
mov
jnp
or
in
scas
adc
jl
mov
in
or
pop
jmp
aad
xlat
push
scas
mul
jecxz
pop
in
mov
fmul
jno
mov
xchg
mov
sub
cmp
retf
adc
sbb
jle
mov
popa
pop
push
cmp
or
push
inc
mov
dec
pushf
mov
(bad)
(bad)
fisubr
xor
jge
arpl
lds
inc
fwait
mov
mov
js
in
ss
js
ret
sub
pop
shl
mov
daa
push
jbe
in
pop
fsub
add
add
int
jmp
add
cmp
jo
pop
xor
fist
fdiv
fistp
sub
or
push
(bad)
jne
sub
dec
imul
add
shl
in
push
outs
(bad)
xor
je
or
mov
and
inc
xchg
call
jmp
test
(bad)
rol
sbb
add
push
add
into
arpl
and
pop
xor
push
sub
sahf
cmc
inc
aam
push
adc
stos
push
mul
jo
jg
mov
in
cmps
(bad)
int3
inc
mov
jle
mov
mov
inc
jecxz
xchg
ficomp
lods
adc
inc
xor
loopne
mov
jecxz
sub
imul
fsubr
loope
cmp
or
popf
inc
mov
jge
movs
call
cmp
(bad)
in
jns
lods
js
ds
fmul
push
test
outs
cli
movs
jmp
jmp
jecxz
scas
push
mov
or
xchg
dec
loope
icebp
cmc
and
mov
jno
push
inc
push
xor
pushf
gs
nop
push
mov
mov
in
or
stos
or
ds
mov
ffree
icebp
call
sub
and
xchg
cmp
add
stc
out
push
xor
xchg
loopne
sbb
je
or
enter
lock
mov
jo
pusha
movs
and
out
mov
lahf
xor
pop
cld
inc
out
push
jb
outs
sahf
pxor
movs
sbb
aaa
in
(bad)
in
cwde
das
call
mov
jbe
push
iret
stos
retf
dec
sbb
xchg
adc
adc
jg
xchg
fdivr
sti
add
shl
pop
mov
xchg
jbe
push
push
in
and
lahf
or
mov
inc
pushf
ret
pop
ror
fild
call
adc
mov
aas
cli
mov
sbb
adc
sub
mov
test
out
pop
iret
jo
(bad)
mov
retf
push
(bad)
clc
imul
push
ins
push
and
fist
mov
add
inc
jge
push
ins
dec
jo
scas
and
mov
setl
ja
frstor
fisub
mov
mov
adc
in
sub
dec
cmc
cdq
pop
pusha
xchg
in
sbb
test
fnstenv
mov
clc
outs
xor
shl
cdq
retf
ins
xchg
ret
test
stos
cmp
add
cmps
mov
out
mov
xchg
jno
inc
not
adc
push
jle
fs
and
movs
stos
and
or
and
dec
bound
ret
dec
outs
fstp
xchg
mov
aas
sbb
add
mov
xchg
sbb
and
xor
jno
inc
jne
call
mov
fldenv
pop
add
test
push
mov
mov
cmc
xchg
pop
xchg
dec
mov
or
cmp
aaa
mov
mov
sub
in
fs
pop
pop
push
(bad)
fcom
mov
das
cmc
or
ficom
ret
jp
add
add
(bad)
and
sbb
jge
push
arpl
test
popf
ficom
or
outs
popf
jmp
mov
dec
addr16
pop
adc
jle
clc
aaa
int3
mov
retf
xchg
scas
add
push
mov
data16
sub
les
sub
mov
leave
sbb
xor
fidivr
mov
cmp
bound
and
xchg
dec
sub
cmp
stos
xchg
stos
xlat
xchg
sbb
add
mov
icebp
les
pop
sub
out
mov
lods
lock
jbe
jge
push
mov
pop
sti
mov
jb
sub
cmp
pop
fbstp
or
in
push
test
sbb
pushf
pushf
dec
inc
xor
ret
jmp
mov
mov
imul
cmp
pop
cmp
pop
mov
push
test
ficomp
pop
inc
pop
mov
adc
ja
jbe
call
sbb
imul
sbb
fdiv
jae
int
in
aam
jmp
retf
cdq
sbb
mov
inc
data16
mov
xor
les
cmp
mov
fidivr
sbb
movs
mov
ret
xchg
xchg
outs
call
dec
loopne
bound
mov
bound
pop
jg
mov
scas
lods
loope
push
sub
mov
and
shl
mov
mov
xor
out
mov
xchg
fiadd
imul
pusha
ret
and
clc
pop
jmp
nop
xchg
fiadd
addr16
cld
jg
cmp
jp
sbb
xchg
lock
add
xchg
outs
xor
jp
pop
jb
or
ret
push
ret
daa
and
mov
(bad)
ins
mov
leave
sub
push
fbld
icebp
and
xor
jp
repnz
in
xor
cmp
cs
rcl
retf
mov
pop
pop
adc
add
mov
sub
xchg
rol
ja
test
dec
cmps
mov
test
cld
sbb
xchg
fnsave
fild
push
pop
out
dec
inc
pop
mov
dec
inc
mov
fsub
in
iret
leave
xlat
pop
jo
mov
ins
inc
or
sub
cmps
fistp
xchg
pusha
aam
xor
(bad)
das
inc
inc
scas
push
jae
xchg
adc
(bad)
into
pop
retf
adc
cld
mov
mov
push
jle
(bad)
retf
mov
xor
out
icebp
adc
call
bound
mov
inc
jg
xlat
lds
ficomp
es
or
in
out
cs
ins
fwait
dec
repz
jae
pop
aam
and
push
jo
pop
adc
addr16
addr16
retf
jns
push
jo
dec
sar
jnp
sub
cld
addr16
mov
xchg
jge
push
shr
in
outs
out
inc
loopne
test
push
pusha
xor
push
jae
mov
pushf
ss
in
sbb
push
mov
jmp
mov
push
xchg
mov
add
mov
mov
outs
std
mov
int3
retf
xor
addr16
adc
cmp
sub
add
addr16
mov
cmps
std
xor
jp
xor
call
mov
adc
loopne
and
popa
jl
test
mov
pop
jmp
jb
clc
pop
sub
cmp
dec
jns
sar
mov
add
mov
imul
fild
jle
scas
jnp
xchg
lea
push
retf
arpl
aam
mov
inc
in
dec
fmul
mov
cmps
dec
ds
mov
or
or
imul
test
rcl
push
mov
inc
inc
scas
mov
sbb
shl
cli
mov
xchg
hlt
(bad)
in
jae
xchg
rol
cld
scas
mov
outs
fcmovnu
xchg
mov
add
xor
sub
push
ds
or
mov
rol
push
out
stos
mov
sti
adc
mov
ja
ja
inc
leave
sub
sub
dec
loope
or
dec
jl
ficomp
sub
repz
out
sbb
sub
push
mov
sub
mov
shl
sbb
rcl
mov
es
xor
pop
in
push
test
loopne
xor
xor
scas
pop
push
stos
cmps
push
retf
sbb
fistp
sub
and
mov
shl
out
adc
cmp
or
rcr
arpl
xchg
dec
pop
or
loop
add
clc
rcr
or
aam
loop
add
mov
gs
scas
mov
mov
xor
inc
sub
call
lock
shr
scas
jecxz
pop
xchg
cmp
ror
push
pop
mov
xor
mov
mov
or
mov
jbe
mov
sbb
movs
sbb
out
pop
sbb
sub
sub
xchg
jbe
pop
outs
shl
mov
dec
jns
cs
xchg
(bad)
fs
sbb
daa
and
adc
into
ins
mov
in
xchg
test
and
jnp
int3
ror
push
pop
lds
popa
jo
cmc
call
xchg
push
dec
mov
lds
push
rcl
xor
das
je
inc
fsub
ins
adc
mov
pop
push
icebp
add
and
mov
test
sub
pusha
sti
scas
aaa
repz
cdq
push
je
adc
and
ins
xor
pop
mov
mov
out
mov
retf
mov
jno
push
push
in
or
test
push
cs
test
fwait
mov
pop
fst
add
mov
mov
jle
loopne
stos
inc
mov
imul
call
mov
push
popf
das
push
lock
sbb
add
cmp
adc
xchg
(bad)
mov
in
xchg
xor
inc
jmp
ss
jmp
fwait
mov
jecxz
push
jg
into
inc
adc
or
mov
clc
mov
adc
movs
jne
cmp
iret
lahf
bswap
retf
or
into
adc
idiv
xchg
pop
inc
jns
xchg
pusha
in
in
jp
inc
fs
xchg
mov
xchg
cmp
ret
(bad)
call
dec
sbb
shl
cmps
pop
mov
xchg
push
fild
neg
jae
or
or
adc
and
scas
xchg
and
ret
push
fdiv
jo
or
xchg
and
mov
dec
cmc
jno
jge
scas
(bad)
fiadd
sub
cmp
push
cmps
test
sub
enter
xchg
ret
mov
push
aam
lds
shr
xor
xor
sub
mov
xor
and
xchg
dec
mul
push
add
xchg
add
sar
and
movs
and
cmps
push
mov
mov
mov
int
cmp
jge
xor
lods
dec
mov
dec
sar
arpl
mov
je
test
cmp
inc
or
mov
icebp
iret
in
popf
push
aam
pop
test
in
in
outs
inc
out
lds
xchg
rcl
data16
cmp
aaa
inc
mov
cmp
hlt
inc
jecxz
test
jno
rcl
sbb
mov
pop
movs
mov
xor
inc
imul
inc
iret
inc
es
inc
popf
jmp
adc
xor
mov
cmps
mov
jo
sar
mov
and
aaa
mov
fwait
aas
and
cdq
mov
nop
js
push
rol
dec
sbb
adc
in
popf
popf
rcr
jecxz
push
inc
adc
add
xchg
ins
or
mov
retf
or
rcr
(bad)
addr16
dec
cmp
mov
xchg
sub
ficomp
or
jmp
mov
dec
mov
sub
mov
add
and
mov
repnz
inc
xor
xor
jne
scas
lahf
jo
dec
jg
jmp
repz
das
popf
lea
fldcw
ror
dec
xchg
push
fnsave
sub
jle
int
mov
scas
and
cdq
fistp
movs
sahf
iret
(bad)
pop
mov
jo
js
movs
into
inc
xchg
in
imul
sub
and
add
retf
and
pop
add
cmp
js
cmps
out
enter
call
shl
inc
or
pop
jnp
jle
icebp
not
pop
shr
inc
outs
pop
mov
dec
inc
push
push
jmp
out
cld
xor
enter
push
sbb
pop
mov
push
imul
jmp
mov
jae
xchg
in
aad
fdivp
movs
out
daa
inc
leave
fld
jmp
sti
mov
push
sub
cdq
push
in
mov
inc
push
ret
mov
and
movs
ds
push
das
in
mov
jnp
int3
jno
fwait
test
sub
leave
ins
mov
ret
jp
push
jmp
leave
call
mov
jo
sbb
cmp
in
jecxz
xchg
sub
sub
push
smsw
adc
cmp
int3
sbb
enter
js
shl
lds
mov
not
sbb
xchg
or
cwde
fs
or
es
and
stos
mov
sub
dec
enter
idiv
in
cmp
cmp
mov
jnp
call
pop
(bad)
fiadd
fidivr
sub
ins
(bad)
outs
cmp
pusha
out
cmp
scas
ins
lods
arpl
shr
jge
xchg
(bad)
mov
loopne
lahf
jmp
inc
outs
in
inc
xor
sti
xchg
or
push
add
inc
mov
fistp
cld
(bad)
rcr
in
push
int
and
je
mov
push
xchg
rol
pop
lea
or
ins
imul
fidivr
xchg
out
lods
push
out
test
mov
pop
test
cs
es
test
jb
xchg
fs
call
mov
add
xchg
stos
and
sbb
inc
or
xchg
inc
call
shr
ja
shl
sti
aas
in
test
call
dec
cmp
in
jl
adc
mov
and
sahf
and
pop
lods
dec
xlat
(bad)
push
gs
clc
test
sbb
int3
dec
retf
fld
fst
aas
push
popa
mov
cmp
pop
stos
jb
push
and
adc
dec
inc
fistp
push
mov
cmp
inc
popf
cld
call
les
test
and
je
add
mov
sbb
imul
sti
push
pop
test
mov
cmp
(bad)
into
int
pusha
mov
cmc
(bad)
mov
xchg
push
mul
jg
jmp
lods
inc
mov
jl
jg
jns
call
or
loop
jae
ss
cmp
and
sub
xlat
push
sbb
sbb
add
test
fld
cmp
sbb
movs
aas
fbld
add
sub
(bad)
js
mov
movs
pop
ror
xor
sub
adc
fs
add
cmps
mov
les
(bad)
ficom
and
out
int
mov
push
ins
(bad)
ins
or
sbb
aad
cmps
daa
out
inc
pop
test
and
js
jl
lds
or
int3
in
jo
inc
jbe
inc
mov
cwde
repz
push
ds
les
sub
xchg
adc
cdq
(bad)
bound
inc
ins
lahf
aaa
addr16
lods
xchg
and
push
pop
dec
adc
and
cmp
xchg
scas
xlat
pop
and
ins
loopne
test
mov
movs
or
cdq
adc
inc
xor
mov
inc
pusha
mov
(bad)
fstp
add
inc
pop
ja
adc
inc
jns
loope
mov
mov
pop
ins
xchg
je
and
xor
pop
jp
jg
sbb
cmp
int
lahf
sbb
neg
adc
cmp
cmp
cmp
jo
pop
add
push
inc
hlt
arpl
xor
add
adc
inc
out
xor
js
dec
mov
outs
out
mov
jmp
mov
call
xor
test
or
mov
push
fld
add
iret
mov
mov
gs
in
and
pop
imul
lock
inc
mov
(bad)
xchg
push
cmp
or
adc
lods
test
pop
shl
sti
imul
call
mov
call
test
(bad)
lods
mov
test
in
faddp
mov
cld
rol
mov
pop
in
(bad)
inc
cmp
bound
pop
xor
rcr
pop
adc
stos
mov
lods
(bad)
loope
lock
je
retf
(bad)
cdq
ja
ins
fs
rcl
pusha
hlt
sub
popa
jno
dec
mov
or
dec
mov
sbb
pop
or
fst
or
mov
xchg
xchg
dec
call
mov
add
dec
push
pop
mov
into
adc
(bad)
outs
fiadd
push
sbb
and
xchg
mov
iret
mov
pop
and
dec
outs
jg
jns
jmp
add
(bad)
mov
enter
cmp
dec
mov
inc
cld
pop
cmps
or
or
jmp
jbe
pop
call
mov
out
jge
cld
or
js
rcr
adc
jge
mov
xchg
out
imul
sub
pop
fidiv
xchg
cmp
push
jae
fsubr
sub
(bad)
sbb
lahf
sub
and
push
in
ins
int3
xor
leave
test
jmp
push
cmp
sar
cli
ja
fcmovnbe
jne
std
add
iret
jp
add
shl
ins
push
xchg
cmp
add
sub
mov
mov
mov
fisttp
inc
sti
jg
dec
adc
repnz
scas
test
sub
xor
lock
call
mov
cmp
sub
inc
fcom
div
adc
jne
jns
(bad)
lods
fild
loope
out
mov
or
cli
shr
xor
pop
xor
push
push
scas
sub
loopne
outs
jg
in
add
mov
xor
mov
pop
push
fs
mov
push
ror
loop
retf
jge
xchg
add
cld
jnp
sbb
(bad)
pusha
inc
mov
ret
popf
push
ja
call
push
jno
int
repz
je
adc
pop
jbe
mov
out
shr
xchg
shl
mov
sbb
and
into
add
loope
pop
cmp
add
or
mov
and
leave
ret
add
adc
retf
mov
xor
pop
(bad)
int3
in
jge
jle
(bad)
pop
sub
xchg
aas
cmp
pop
sbb
scas
fist
pop
imul
(bad)
and
and
dec
stos
xchg
jae
or
rcl
outs
inc
inc
cdq
push
or
mov
pop
xor
add
icebp
mov
shl
xor
xor
adc
add
and
xor
xor
add
mov
fdiv
cmp
or
cmp
mov
add
iret
movs
pop
lock
hlt
push
mov
std
outs
cmp
xor
inc
outs
jecxz
and
imul
popf
xchg
rcl
mov
xchg
mov
ins
jae
arpl
fistp
jae
dec
or
add
test
sbb
lea
stc
js
mov
mov
sbb
mov
sub
jmp
cwde
mov
out
mov
xchg
and
fs
jnp
out
mov
pop
and
aas
xchg
mov
add
test
je
mov
call
aam
push
jge
push
pusha
jmp
lds
sbb
in
jne
and
popf
lock
lea
xor
stos
iret
sbb
outs
dec
xchg
jg
or
es
adc
in
sub
jo
adc
cmp
sbb
adc
lods
fcmovnbe
mov
mov
stos
add
cmp
fld
and
pop
dec
push
aas
fucomp
les
ins
sub
sub
sahf
iret
inc
mov
in
lods
fild
mov
cmps
mov
mov
add
mov
adc
scas
cmp
mov
outs
out
(bad)
add
in
outs
ds
shl
dec
loopne
test
fwait
sbb
int3
mov
adc
mov
loopne
retf
jbe
adc
inc
jo
mov
mov
adc
sub
mov
cmp
out
repz
cmp
repnz
scas
ss
lds
push
loopne
add
out
or
inc
jnp
rol
cmp
fucomip
and
sub
mov
fsub
cld
loope
jb
ret
imul
push
lods
mov
pop
jl
sub
mov
mov
push
inc
imul
aad
(bad)
jg
stc
cmp
iret
clc
pop
jnp
xchg
dec
mov
int
in
mov
shr
(bad)
xchg
in
mov
mov
pushf
pop
bound
push
loope
push
addr16
enter
mov
xchg
pop
call
xchg
mov
lods
fcom
jo
jge
out
or
or
pop
jmp
mov
das
cmp
xor
xor
aas
xchg
into
or
icebp
inc
aaa
and
ficomp
lods
or
cmp
xor
sbb
mov
push
sbb
test
lods
pop
jno
or
xchg
xchg
psubsb
imul
push
ror
aad
aam
jnp
(bad)
xor
xchg
xor
ficomp
ror
ins
or
push
mov
sahf
xchg
dec
in
shl
sub
pop
icebp
out
mov
mov
push
mov
mov
nop
adc
xchg
fwait
mov
xchg
inc
lods
cmp
out
ja
sahf
ficomp
push
or
dec
fcmovnu
mov
push
mov
lock
(bad)
bound
pusha
mov
jle
std
adc
cs
push
cmp
inc
ja
test
pop
push
retf
lods
inc
sbb
cmp
cmp
jge
mov
mov
pop
and
or
or
jg
je
xchg
jmp
test
aad
fwait
inc
outs
gs
mov
test
enter
adc
imul
pusha
outs
repz
test
jp
adc
(bad)
inc
or
mov
add
or
pop
push
pop
imul
add
loop
call
popf
pop
dec
mov
dec
add
into
mov
push
aam
xchg
scas
inc
sub
pop
or
inc
and
or
sbb
xor
stc
xor
push
popa
jmp
retf
cmp
pop
gs
shl
inc
(bad)
imul
jnp
je
mov
pop
adc
repz
mov
push
jmp
into
mov
jmp
jge
stos
and
pushf
ins
cmc
enter
xchg
jp
repz
inc
or
lock
stos
xchg
cmp
(bad)
or
sub
jmp
hlt
loope
xchg
in
fnstcw
add
out
das
out
jg
dec
pop
bound
(bad)
and
btr
adc
inc
xchg
mov
add
bound
cmp
popa
es
fst
or
xchg
ds
das
jp
xor
icebp
out
sub
mov
sar
sbb
(bad)
xchg
stc
dec
push
addr16
test
daa
fisttp
repz
adc
pop
sub
xchg
fs
inc
icebp
inc
stos
into
lods
adc
fst
dec
int3
sub
inc
out
push
icebp
fidivr
icebp
inc
push
push
and
sub
mov
jmp
mov
sub
and
rcr
call
inc
mov
adc
mov
pop
push
adc
jge
mov
add
cmp
stos
push
or
mov
cmp
stos
sub
xchg
dec
sub
mov
test
jmp
push
cmp
jp
sub
call
jae
rcl
dec
and
clc
xor
xchg
(bad)
push
(bad)
iret
sbb
sub
fisttp
call
mov
repz
inc
test
cmps
sbb
mov
test
repnz
test
or
iret
outs
add
cmp
cmp
adc
push
jbe
pop
fidiv
cmp
lods
data16
mov
xchg
pop
xchg
xor
cmps
stos
mov
mov
push
mov
sub
or
lahf
cs
mov
jne
cmovae
je
xchg
jl
jmp
ja
mov
shl
ja
test
(bad)
pop
cmp
hlt
stos
or
mov
movsx
imul
test
mov
dec
dec
adc
mov
mov
sub
adc
or
add
ins
mov
sub
and
aaa
arpl
xchg
pop
cli
sbb
adc
dec
xchg
xor
jl
lahf
(bad)
pop
jno
lahf
dec
mov
cmp
lahf
push
popa
lods
dec
push
lds
jnp
push
sub
dec
jno
mov
adc
or
(bad)
push
or
sbb
sahf
hlt
inc
mov
sub
mov
shl
mov
inc
(bad)
(bad)
in
ins
(bad)
div
xchg
push
adc
test
mov
and
shl
xor
mov
sub
and
dec
hlt
stos
out
dec
or
inc
mov
xchg
fistp
cli
pop
je
lods
jle
fistp
sub
div
pop
lahf
sub
daa
push
movs
xchg
mov
call
and
ficom
mov
xchg
mov
mul
pop
mov
inc
mov
outs
cmp
inc
into
mov
icebp
or
cmp
cld
in
add
dec
or
pop
push
add
cmp
sti
cdq
(bad)
mov
adc
xchg
xor
ret
push
dec
sahf
dec
out
jle
popa
add
pop
mov
daa
mov
les
and
sbb
fucomip
or
add
cmc
cmp
lock
add
cmp
cli
sahf
aad
fild
adc
mov
popf
inc
xor
dec
nop
jbe
shl
mov
push
pop
test
loopne
adc
mov
sub
or
sub
(bad)
and
sub
cmp
jb
sbb
shr
idiv
shr
inc
sub
(bad)
adc
inc
(bad)
sbb
std
pop
xor
scas
add
mov
outs
fidiv
fldcw
scas
xchg
stos
daa
or
xor
(bad)
ja
jns
cdq
jecxz
xchg
js
pop
add
mov
inc
add
aas
jae
push
push
rol
push
xor
or
inc
cmp
(bad)
mov
fdivr
in
ja
push
inc
mov
push
les
ror
push
ret
add
sub
sub
hlt
gs
arpl
ja
popa
ins
push
(bad)
fmul
sbb
xchg
rcl
mov
sub
fist
mov
mov
clc
rcr
mov
iret
es
xor
shl
mov
sub
sbb
dec
sbb
sahf
dec
cwde
sub
dec
mov
xchg
add
mov
xchg
pop
xchg
test
in
jne
dec
jae
loopne
mov
call
push
jp
pop
scas
adc
adc
xchg
dec
fs
inc
inc
adc
pop
jle
push
movs
rcl
js
jmp
push
dec
popf
es
cmp
mov
loopne
and
cmps
sbb
or
lea
pop
mov
jmp
nop
adc
(bad)
lds
mov
pop
rcr
in
sub
mov
iret
test
loope
jmp
shr
ins
fs
ror
mov
ins
lods
xor
sbb
push
mov
jl
jl
sbb
imul
or
push
lds
cmp
adc
inc
cld
imul
stos
cmp
dec
dec
je
imul
les
not
ret
mov
jb
imul
jmp
cmp
clc
mov
(bad)
push
retf
(bad)
xchg
out
dec
(bad)
repnz
pop
xchg
pop
stc
sub
push
call
dec
and
mov
push
jle
add
xor
and
inc
lods
int
lock
ja
push
repz
out
icebp
sar
cmps
xor
push
in
cmps
pop
add
lahf
(bad)
bound
xor
inc
and
xor
sbb
mov
dec
aad
push
stos
xor
pop
pop
mov
mov
iret
ret
jle
and
adc
jle
int3
xchg
psubw
test
cwde
dec
sar
movs
jecxz
fnstcw
imul
adc
mov
aad
xor
int
or
aam
in
sub
call
sar
adc
outs
push
xchg
jo
jmp
dec
mov
rcl
xor
mov
xlat
mov
int3
mov
jg
dec
mov
pop
sti
and
movs
mov
clc
fucomip
xchg
into
and
mov
dec
dec
inc
adc
imul
jbe
arpl
movs
dec
div
cmp
in
test
jmp
jno
je
test
xor
movs
icebp
pop
call
push
leave
sbb
inc
add
mov
outs
nop
lock
inc
jno
scas
jae
add
jns
dec
div
push
or
mov
leave
ret
pushf
or
repnz
xor
repz
arpl
call
dec
adc
xchg
inc
ret
push
inc
pop
mov
adc
pop
adc
in
jmp
sbb
sbb
cmp
icebp
mov
repz
mov
dec
push
rcr
sub
bound
jp
lods
popa
(bad)
xchg
call
addr16
pop
cmp
mov
xor
jb
mov
xchg
push
repz
out
iret
dec
leave
ds
mov
mov
mov
ror
shl
sub
fdivr
push
add
adc
test
mov
sbb
push
pop
and
cmp
xchg
outs
pop
mov
dec
les
fimul
fdiv
cmp
int
call
pop
cs
fmul
in
fstp
in
fild
cmp
jo
bound
add
movs
ins
test
sbb
test
movs
dec
cwde
sbb
in
adc
dec
mov
and
jecxz
fild
jno
ficom
ins
imul
add
add
xor
jmp
jmp
and
pop
into
in
je
push
cmps
sbb
arpl
pop
shl
arpl
aam
adc
adc
out
xchg
push
jg
push
call
stc
pop
pop
mov
in
dec
cmp
add
cdq
dec
call
or
das
aam
imul
jne
adc
adc
test
cmp
sti
rcr
pop
sbb
adc
ins
out
pushf
mov
adc
cdq
icebp
movs
cmp
and
sbb
outs
add
dec
mov
add
sbb
shl
mov
fwait
mov
xlat
ret
rcl
rol
cmp
sub
pop
mov
sbb
movs
cdq
sbb
fcmovnbe
das
mov
aam
adc
neg
inc
push
mov
and
mov
(bad)
or
xor
push
add
into
or
iret
das
mov
mov
pop
test
xchg
aam
adc
es
stos
das
xchg
loopne
inc
mov
and
pop
(bad)
mov
add
mov
fisttp
add
sar
xchg
push
sub
xor
rcr
sti
and
jge
imul
stos
xchg
and
dec
sub
sub
cmp
and
pop
aas
push
or
hlt
(bad)
jmp
pop
scas
out
jmp
leave
pushf
pushf
and
sbb
inc
xchg
imul
xchg
scas
jne
jne
out
mov
xlat
jae
jno
icebp
xor
push
sbb
or
pusha
mov
mul
in
stc
or
jmp
jle
push
push
inc
or
mov
shl
dec
je
jnp
scas
mov
js
add
mov
push
inc
sahf
sti
dec
cmp
sub
iret
mov
shl
stos
or
cmp
push
inc
or
rcl
in
sbb
sti
cwde
in
add
sbb
sbb
stc
daa
daa
inc
in
scas
inc
test
add
xchg
jg
das
out
push
xor
push
and
in
push
adc
fmul
dec
hlt
pop
cmp
shr
pop
xchg
cs
mov
call
push
xchg
xchg
mov
jmp
adc
xchg
retf
scas
sub
addr16
xor
ja
(bad)
jecxz
lea
or
add
loopne
ret
or
or
dec
and
test
push
cmps
popa
push
adc
mov
push
dec
fild
jmp
rol
and
xlat
xchg
mov
jns
pop
or
mov
pusha
xchg
xor
ror
push
jbe
push
or
jle
mov
outs
xchg
fsubr
jmp
xchg
hlt
cli
mov
not
outs
adc
adc
adc
inc
imul
gs
out
sbb
dec
adc
cmp
dec
movs
mov
push
in
push
hlt
(bad)
and
loope
enter
jp
ds
push
push
retf
rol
ins
out
mov
aam
inc
retf
xchg
sbb
mov
xor
mov
mov
pop
xor
sbb
sub
mov
std
xchg
nop
lahf
test
inc
push
pop
clc
sub
mov
pop
xor
mul
xchg
int3
adc
push
mov
test
test
int
inc
sub
jle
xor
add
(bad)
shr
std
mov
retf
mov
cmp
lods
sbb
aam
add
xchg
mov
push
jl
add
inc
sub
fstp
sub
add
jl
dec
hlt
aas
xchg
pop
sbb
stos
sbb
sub
dec
test
fimul
aam
pop
add
and
cwde
scas
sbb
das
or
pop
popa
ror
jae
mov
mov
xlat
add
fiadd
out
mov
push
aaa
adc
push
popf
fwait
or
in
adc
or
fidivr
mov
push
test
inc
enter
mov
into
xlat
xchg
loopne
mov
jmp
jmp
adc
jge
xchg
adc
push
shl
jo
sbb
mov
xchg
or
push
mov
idiv
cmp
cld
ficomp
sub
ret
xor
data16
jo
lods
pop
std
mov
xchg
adc
sub
(bad)
mul
xchg
test
mov
(bad)
mov
(bad)
jp
lds
repnz
int3
cmc
xchg
lahf
sub
push
in
dec
cmp
mov
aad
fcomp
stc
in
(bad)
std
(bad)
outs
mov
sub
xchg
jp
xchg
push
mov
jns
dec
dec
dec
inc
sbb
(bad)
push
pop
test
ss
xor
mov
push
les
and
int3
in
aaa
jae
mov
cli
mov
jmp
sbb
clts
in
push
push
mov
sahf
cmps
adc
pop
jbe
clc
and
gs
clc
jnp
sub
repnz
popa
mov
les
in
movs
shl
cmp
jns
sub
popa
sub
rol
xor
loope
movs
jmp
(bad)
cmp
sub
int3
mov
mov
je
or
adc
outs
rep
fmul
cwde
jo
sub
cmps
fnsave
cld
mov
or
jl
jno
sub
add
leave
mov
mov
stos
fs
popa
adc
xor
in
push
arpl
sar
push
sbb
fwait
jns
imul
mov
pop
nop
mov
cld
ins
ja
jb
clc
inc
pop
aam
jnp
test
push
std
daa
(bad)
test
cs
icebp
xchg
das
enter
adc
xor
outs
pop
xor
inc
js
and
cs
stc
or
adc
xchg
adc
cld
lods
pop
pop
loopne
out
add
inc
lock
push
cli
inc
pop
jnp
outs
ret
sti
aam
jno
ds
push
lock
retf
out
add
push
int
sbb
fadd
aad
jo
pop
and
int3
cmp
out
sar
sub
(bad)
and
in
mov
sub
scas
mov
xor
les
add
fsub
jp
push
push
sbb
inc
jne
sbb
push
lahf
jecxz
les
inc
dec
jns
lea
pushf
test
int
push
mov
pop
xchg
icebp
frstor
icebp
in
(bad)
daa
push
fldenv
fdivp
lahf
mov
stos
mov
sbb
mov
daa
cmps
ins
int3
sahf
mov
mov
mov
push
adc
lahf
xchg
fsubr
clc
addr16
cdq
sub
pop
iret
call
cmp
inc
push
jle
jb
cmp
repnz
jmp
std
sub
mov
cmps
int3
jne
fs
enter
jmp
push
cld
jge
xchg
cmp
in
into
repz
or
jo
inc
dec
fisub
xor
sub
fdivr
jl
enter
cs
or
jbe
sbb
popa
pop
lods
push
test
popf
sbb
repnz
sbb
mov
push
mov
mov
fdivr
jnp
xchg
sbb
out
ret
push
jle
cmc
addr16
sub
in
aad
icebp
ds
push
mov
adc
jmp
push
xor
movs
test
mov
stos
push
mov
mov
dec
cli
into
(bad)
std
mov
arpl
sar
mov
push
jle
popf
jb
and
rol
imul
sub
or
cmp
dec
mov
sar
(bad)
dec
fidivr
adc
stos
pop
mov
nop
iret
ret
int
in
add
jo
xchg
and
leave
retf
sbb
xor
adc
(bad)
aas
call
cwde
push
and
jnp
mov
push
or
cmp
mov
pop
push
(bad)
sahf
dec
dec
movs
sbb
shl
push
ret
xchg
xor
xlat
enter
mov
in
retf
cmc
out
outs
pop
pop
mov
adc
pop
mov
push
push
fstp
ret
inc
xor
mov
xchg
xchg
xchg
test
inc
adc
pop
and
mov
adc
fcomip
clc
call
xchg
lods
cmp
in
mov
cwde
mov
mov
adc
inc
repz
push
gs
xor
pop
iret
cmp
xchg
and
sub
push
dec
es
xor
jp
test
addr16
inc
jle
std
jmp
dec
push
test
inc
push
cs
sbb
hlt
cli
mov
pop
add
rcr
mov
popf
add
test
arpl
retf
int
lods
mov
sub
inc
jo
sub
test
test
pop
cli
imul
outs
data16
jb
mov
xchg
mul
sahf
jb
adc
jb
or
std
shr
rol
lea
ss
iret
test
test
(bad)
mov
pop
fisttp
add
movs
mov
xchg
add
test
jbe
call
mov
mov
les
loopne
imul
adc
and
loope
(bad)
into
jns
xchg
lods
(bad)
sub
out
xchg
lods
sti
add
fwait
sub
ins
or
imul
pop
push
adc
ja
sbb
mov
ror
xchg
xchg
sub
pushf
(bad)
push
jg
inc
inc
push
(bad)
stos
or
mov
push
xchg
pusha
xchg
ret
je
fisubr
js
sbb
cdq
mov
mov
and
mov
mov
pop
adc
push
pop
mov
int3
push
fiadd
test
(bad)
push
fwait
push
mov
pop
pop
mov
sub
xlat
nop
mov
xchg
cmp
into
cmp
pusha
xchg
pushf
outs
pop
mov
test
les
dec
dec
push
aam
hlt
inc
and
sbb
pop
dec
add
shl
std
cmp
xchg
rcl
pop
mov
fs
imul
(bad)
inc
pushf
cmp
hlt
xchg
mov
jg
popf
(bad)
mov
jnp
fistp
mov
push
sbb
jns
in
mov
sub
or
or
les
xchg
and
sub
mov
xchg
push
sub
es
adc
stc
out
ins
call
movs
repnz
push
(bad)
xor
repz
jae
sbb
leave
push
cmps
jl
add
dec
mov
mov
sets
add
inc
jae
retf
frstor
xchg
jmp
test
lea
mov
cmc
in
fidivr
or
lahf
aas
nop
sar
dec
out
in
jle
test
dec
xchg
mov
shl
ins
lock
pop
mov
cmc
mov
jae
test
popa
and
pusha
shr
rcl
xchg
stos
repnz
scas
movs
mov
cmp
mov
cs
jp
dec
lock
aad
(bad)
xchg
loopne
mov
test
fwait
xchg
pusha
int3
jl
cdq
addr16
xor
aas
js
repnz
dec
dec
push
jo
cld
jb
cmps
push
push
mov
push
add
pop
jo
clc
ret
aad
cli
push
pop
xor
retf
sbb
movs
mov
repz
mov
xor
inc
pop
cmp
scas
sbb
mov
aaa
pop
fisttp
xor
xor
xchg
push
xor
adc
test
push
test
sbb
xor
push
out
xchg
ror
dec
push
jmp
gs
les
int3
fidivr
inc
stos
stos
fcom
adc
in
sbb
xchg
ins
inc
xor
je
mov
stos
aad
and
stos
(bad)
sar
jns
repz
std
dec
and
neg
repz
imul
retf
dec
pop
pop
jge
or
aaa
mov
cmp
sub
add
loope
xor
cmps
jp
mov
jno
or
out
and
and
ret
fdiv
jg
cdq
popa
mov
aas
pop
test
sar
ror
icebp
loop
mov
push
sub
adc
cmp
xor
xchg
push
push
mov
cmp
push
push
sub
sbb
add
dec
cmp
dec
add
push
lods
cmp
push
pop
mov
jnp
sub
pushf
cs
in
adc
(bad)
xchg
mov
popa
jns
mov
dec
push
fsub
test
adc
push
push
cmp
stos
xor
dec
pop
das
and
aam
push
xor
jl
dec
xchg
inc
adc
cmp
mov
aas
xchg
jns
ficom
jl
ja
push
neg
js
out
aam
xor
lahf
fdivr
fnsave
adc
fstp
mov
mov
cmp
jg
sbb
jmp
mov
pop
retf
out
dec
dec
push
xchg
and
imul
jae
mov
and
movs
add
mov
push
mov
mov
push
hlt
push
push
cmp
cwde
sub
adc
pop
and
int
scas
jecxz
lea
daa
pop
sbb
icebp
jae
(bad)
(bad)
mov
aam
fld
dec
loope
test
inc
pusha
push
adc
dec
and
fstp
std
mul
add
push
sub
cmp
mov
dec
pop
test
adc
lods
aas
loopne
and
minps
jnp
pop
xlat
mov
push
pop
or
jne
xor
popa
dec
pop
cld
jbe
xchg
sub
fnstcw
push
xor
dec
dec
icebp
aaa
jnp
(bad)
int3
xchg
fwait
dec
ds
dec
and
mov
out
xchg
sub
cld
inc
mov
out
pop
pop
js
icebp
and
cmp
dec
test
dec
clc
stos
mov
cmp
sub
fwait
dec
add
adc
sbb
fcmovnbe
adc
push
jp
ins
into
sbb
movs
push
jae
xor
loop
mov
xchg
fst
jmp
xor
ret
mov
ret
jmp
jmp
clc
cmp
retf
push
nop
mov
movs
push
sbb
jno
(bad)
sbb
jp
es
mov
xlat
in
pusha
loope
sbb
gs
fisttp
pop
lds
imul
add
push
leave
mov
and
sub
loop
stos
ins
inc
sub
fld
jmp
mov
xchg
sbb
jmp
ds
(bad)
js
ins
cmp
jno
push
push
push
inc
cld
mov
and
or
inc
sub
not
push
sub
mov
mov
outs
jnp
add
mov
pushf
loopne
adc
push
fcom
mov
push
mov
jno
test
push
pop
call
cmp
cld
mov
jmp
cmps
mov
int3
sbb
mov
mov
jae
add
rcl
ret
mov
pushf
out
in
test
ins
dec
push
push
in
fnstsw
mov
stc
ret
fiadd
mov
xor
cmp
cs
mov
dec
cmps
jno
push
ret
das
shl
push
pop
idiv
test
xchg
loopne
repz
inc
mov
jecxz
fwait
fs
mov
adc
cmps
mov
(bad)
and
or
lahf
add
imul
xor
pop
dec
push
fwait
mov
outs
add
add
enter
ret
outs
jle
mov
mov
adc
aam
and
int3
scas
or
or
call
cmp
cwde
add
mov
mov
cs
push
cwde
jae
repz
pop
pop
xchg
push
push
aas
(bad)
aad
jae
lea
jae
sub
loopne
data16
es
retf
jecxz
cld
xor
stos
std
cmps
ss
xchg
popf
clc
adc
mov
loopne
sbb
xchg
lods
mov
movs
jl
in
xor
dec
ins
mov
arpl
mov
cmp
int
jae
jp
mov
push
(bad)
shl
sbb
rcr
jno
push
jecxz
cmp
repz
hlt
neg
fucomi
sub
push
out
pop
add
jmp
daa
fisttp
sub
aaa
or
jae
lods
or
lea
jne
shr
dec
retf
fs
or
push
dec
xor
add
dec
fdiv
in
lods
test
adc
inc
jo
pop
inc
jnp
cmp
test
adc
jl
loop
cwde
pop
dec
add
and
std
cmps
mov
js
mov
add
mov
in
sbb
rcl
inc
fsub
sub
test
int
outs
rol
into
fcomip
and
popa
call
aaa
popa
or
jno
outs
loopne
and
mov
cld
int
retf
out
inc
mov
mov
xor
jb
mov
push
xchg
adc
push
fistp
mov
mov
inc
xor
iret
xlat
cmp
add
icebp
mov
ins
xchg
or
mov
mov
sar
jg
outs
jmp
mov
inc
xor
cmp
in
jl
mov
ins
jecxz
pop
ss
imul
mov
cwde
mov
adc
cmp
xlat
push
push
inc
sbb
and
jl
push
out
mov
xor
ja
enter
out
jnp
rcl
das
popa
jg
mov
add
xlat
push
mov
sub
mov
popf
xchg
pop
mov
mov
cmps
aas
enter
outs
aas
jge
cmp
(bad)
sub
xor
icebp
or
movs
jg
adc
jbe
pop
dec
std
or
(bad)
daa
dec
pop
pop
daa
fistp
(bad)
int
cmc
repz
lods
inc
arpl
sbb
cmp
retf
(bad)
mov
test
sub
icebp
gs
(bad)
mov
iret
aad
icebp
mov
in
push
jae
mov
test
cmp
inc
mov
jnp
or
lods
pop
shr
(bad)
jae
ret
outs
mov
jns
(bad)
outs
xchg
icebp
push
xor
aas
cld
sbb
and
mov
les
aas
int
push
push
or
cmp
sbb
sub
popa
les
mov
cmp
pop
retf
adc
mov
xchg
inc
(bad)
ror
ja
fsubr
push
add
push
and
aam
add
cwde
lea
jle
xchg
(bad)
shl
daa
(bad)
jo
fnstcw
ror
and
loopne
cwde
xor
fadd
mov
sbb
dec
enter
outs
jge
call
cwde
sbb
dec
lds
xchg
in
test
jl
in
xchg
les
loop
aam
je
(bad)
(bad)
jl
repnz
add
sub
mov
loop
or
in
(bad)
mov
xchg
mov
stos
(bad)
call
sub
jmp
frstor
push
sbb
xor
fwait
stos
adc
stc
xor
(bad)
movs
loopne
loope
icebp
mov
mov
inc
mov
jb
sbb
mov
mov
cmp
xchg
loop
cmps
xor
mov
add
fdivr
(bad)
stc
add
cmp
sub
mov
mov
dec
lods
test
push
(bad)
cmps
jno
push
repz
out
add
inc
xchg
jecxz
cmps
sub
sti
push
pop
into
xlat
hlt
pop
jle
loope
or
push
jge
jmp
js
fmulp
sahf
jnp
jno
sbb
or
and
loope
lock
ds
jns
cmp
iret
icebp
leave
mov
jmp
fucomi
jmp
fstp
dec
cmc
xor
mov
adc
push
les
fsub
inc
movs
mov
loope
call
outs
and
jne
iret
inc
fiadd
add
cmp
jns
jo
add
pop
repz
fild
int
mov
dec
fs
cli
pusha
adc
outs
mov
mov
push
jnp
jg
(bad)
xchg
(bad)
jle
sbb
cmp
out
jecxz
xor
dec
(bad)
js
gs
les
sub
ficom
cs
out
jecxz
or
sbb
(bad)
jns
xchg
pushf
or
sbb
ffree
xor
lods
xor
mov
js
es
mov
or
dec
jnp
sbb
rcr
shl
cmps
outs
daa
lahf
cli
int
sbb
cmp
xchg
sub
enter
(bad)
in
push
or
adc
and
fbstp
dec
sub
xor
cs
scas
jb
(bad)
hlt
dec
sbb
ror
js
dec
stos
icebp
inc
sub
cmp
adc
sbb
pop
sbb
ja
pop
sub
adc
jecxz
sbb
push
daa
push
fwait
or
inc
lods
fistp
movs
test
cmp
ja
cs
xchg
ficom
fcmove
jg
int3
aaa
sbb
stos
inc
sbb
(bad)
fsubr
push
mov
loop
ret
mov
mov
(bad)
add
sbb
xchg
movs
daa
mov
inc
adc
push
outs
sbb
push
daa
pop
clc
adc
pop
into
add
ins
jp
test
pop
(bad)
imul
nop
nop
cmps
adc
mov
sub
out
jp
shr
call
fisubr
push
sub
mov
pop
movs
fisubr
icebp
mov
push
popa
mov
jnp
xor
ja
xchg
clc
ret
outs
js
mov
gs
or
scas
imul
pop
into
popa
or
(bad)
cmc
push
popf
mov
inc
mov
sbb
sbb
shl
fdiv
xchg
(bad)
(bad)
stc
mov
xchg
xor
scas
inc
mov
test
xchg
mov
test
je
jmp
lahf
xchg
jg
sub
mov
jmp
adc
sbb
pop
mov
call
pop
sbb
and
cmp
xor
fcom
pushf
out
mov
adc
xor
mov
and
jmp
ins
inc
mov
xchg
push
mov
aad
jnp
test
add
aam
fs
cmps
dec
js
sbb
sub
stos
jb
dec
ins
sti
dec
dec
pop
inc
inc
scas
add
enter
dec
xor
xlat
inc
fild
popf
outs
cmp
cmp
mov
pop
xchg
dec
jb
(bad)
xor
dec
mov
cmp
ss
mov
jle
cmp
mov
lds
push
popf
sub
or
adc
or
or
daa
sbb
mov
movd
test
or
cmp
lods
js
pop
jg
adc
jmp
fimul
mov
cmp
mov
and
lods
shl
mov
fild
sbb
add
mov
push
sbb
mov
sub
mov
pop
mov
imul
add
scas
rcr
lahf
rep
inc
ret
aad
mov
aaa
push
pop
in
test
jg
push
ja
movs
xchg
xchg
mov
retf
and
clc
push
push
gs
ret
jl
add
fist
inc
inc
push
call
hlt
loop
or
push
xchg
sbb
push
stc
and
sar
(bad)
cmp
sbb
in
and
push
punpckhbw
test
nop
ins
outs
mov
pmullw
jno
sbb
into
hlt
dec
loope
dec
mov
xor
mov
and
fnstenv
bound
xchg
or
fcomp
mov
mov
je
sub
aad
not
push
pop
movs
push
xchg
pop
and
sub
xor
movs
dec
fdivp
adc
adc
push
lahf
shr
mov
dec
clc
inc
inc
xchg
icebp
mov
adc
mov
adc
out
sbb
ja
jns
dec
sbb
test
sub
dec
test
daa
ins
inc
sbb
push
popa
mov
inc
(bad)
inc
into
popf
pop
sub
fmul
rcl
in
das
and
enter
cmp
je
push
test
ret
xchg
xchg
mov
cmp
popa
(bad)
xor
imul
or
fwait
inc
neg
lods
cmps
add
lea
sub
mov
pop
cmp
xlat
rcr
scas
cli
cs
or
ret
dec
xchg
test
lea
stos
sbb
lea
pop
mov
dec
mov
fstp
sbb
movs
jecxz
mov
jmp
aas
and
(bad)
aad
stos
hlt
dec
cwde
shr
mov
dec
outs
sub
or
push
jge
hlt
sub
jnp
jmp
leave
hlt
lds
mov
inc
cwde
mov
pop
clc
jb
sub
ficom
leave
cmp
push
mov
xor
push
xor
sahf
out
sub
sub
repz
cwde
sbb
mov
xchg
cs
sbb
mov
jg
(bad)
addr16
arpl
dec
jb
loopne
mov
jne
dec
pop
stos
inc
pop
xor
dec
push
cdq
push
push
dec
push
out
sbb
pop
pop
test
mov
addr16
sbb
mov
int
push
mov
nop
jge
jmp
daa
cmp
in
xchg
inc
sti
or
icebp
sbb
iret
sbb
pop
jl
pop
sub
or
cmps
cmp
xlat
in
or
fcomp
and
sbb
stos
ret
inc
cmp
div
(bad)
mov
cmps
mov
add
gs
xchg
push
mov
and
jmp
pop
and
and
das
inc
ds
inc
aad
mov
xor
out
jmp
scas
mov
test
cwde
or
add
dec
mov
js
mov
cmp
aad
pop
mov
xor
out
add
and
rcl
rcr
cmp
aaa
or
jo
mov
imul
scas
(bad)
iret
pop
(bad)
ins
(bad)
dec
mov
pop
je
jmp
jmp
mov
push
psubsb
pop
dec
js
cdq
(bad)
ficomp
sub
mov
ja
ss
clc
jge
fwait
adc
dec
and
data16
loopne
inc
sub
sbb
inc
or
mov
xchg
mov
ss
jnp
imul
cwde
loope
pop
inc
movs
leave
sub
push
inc
enter
mov
out
mov
pop
and
loope
inc
fmul
mov
lock
and
jae
cwde
push
ret
in
push
push
xor
or
cli
mov
pop
retf
aaa
mov
add
aad
nop
xchg
jo
and
mov
jb
and
xlat
(bad)
addr16
jecxz
pop
push
lods
jle
(bad)
sub
mov
mov
sub
call
fdiv
in
dec
ret
rcr
xchg
test
adc
rcl
jecxz
pop
ret
retf
call
sbb
xchg
jo
mov
std
add
repnz
test
mov
xchg
pop
jno
std
inc
out
mov
pop
outs
jmp
and
or
sbb
mov
imul
mov
call
outs
sbb
das
loope
jo
icebp
mov
in
arpl
test
xchg
mov
ret
cli
scas
add
jmp
pop
retf
xor
imul
sbb
ja
adc
xor
mov
call
cmps
push
jecxz
stos
adc
add
jmp
sbb
inc
in
in
jno
mov
stos
sub
inc
mov
dec
ins
cmps
or
shr
sbb
aam
jecxz
in
test
sub
xor
int3
sbb
test
movs
arpl
lods
xchg
rol
loop
bound
dec
mov
jno
xchg
adc
xchg
jne
and
inc
dec
add
mov
mov
icebp
dec
fwait
shr
jno
jecxz
fwait
sbb
xor
repnz
ds
popa
and
jae
popa
in
mov
pushf
push
sbb
adc
imul
shr
cmps
cmp
xchg
sub
rcl
add
aas
(bad)
(bad)
sub
movs
sub
stos
ins
xchg
and
movs
push
jg
cmp
mov
or
aad
into
inc
jmp
pop
mov
or
mov
jecxz
fisubr
ins
rcr
mov
out
fdivr
xor
dec
in
lea
shr
dec
cld
scas
inc
jns
sahf
xchg
xor
add
jno
and
add
dec
sbb
or
test
mov
adc
xor
dec
(bad)
jmp
call
cwde
cwde
les
adc
fwait
pop
cld
cmp
test
std
and
cs
sub
ins
dec
hlt
inc
sahf
cdq
icebp
outs
(bad)
dec
mov
(bad)
mov
mov
and
cld
ds
out
test
out
xor
cmps
iret
repnz
mov
jo
repz
jb
push
adc
sbb
pusha
movaps
(bad)
fadd
jl
fdivr
repnz
leave
mov
push
or
cmps
iret
push
xchg
mov
paddb
cmp
dec
inc
ret
jo
out
dec
movs
fisubr
mov
enter
fstp
sbb
cmp
cmp
dec
xor
call
lock
data16
aam
rcl
push
dec
movs
call
sub
inc
or
outs
or
xchg
pop
adc
jne
jmp
fistp
inc
mov
mov
loopne
ss
xchg
mov
leave
dec
std
xor
cdq
gs
out
js
retf
mov
aam
test
push
aad
jbe
jb
in
pop
(bad)
sti
inc
sub
in
xor
adc
dec
(bad)
repnz
jmp
xchg
aad
cdq
mul
div
and
fldcw
aaa
cmp
push
popa
nop
imul
daa
out
mov
push
pop
stc
out
xor
mov
pusha
ja
imul
xchg
pop
mov
call
in
xor
mov
int3
cmp
mov
ss
fidivr
and
sub
jecxz
push
call
in
dec
cmp
dec
int
xchg
jne
push
pop
mov
loop
out
movs
rcl
shl
push
push
add
es
dec
(bad)
jge
pushf
mov
push
push
xchg
push
mov
loopne
test
pop
mov
push
data16
ret
sub
sti
push
push
add
mov
sahf
mov
ficomp
ret
lods
call
push
push
mov
jbe
cdq
inc
and
or
mov
(bad)
movs
pop
je
mov
imul
cli
cmc
jb
rol
pop
push
sub
push
(bad)
jmp
jno
outs
daa
xor
push
sbb
cwde
pop
add
mov
or
mov
push
inc
adc
mov
dec
xor
outs
fild
pop
jbe
jne
das
xchg
aam
ja
fidivr
pusha
mov
into
ds
js
nop
and
sub
retf
push
rcl
and
pop
jno
inc
ret
imul
xchg
adc
scas
sahf
mov
add
mov
adc
js
mov
mov
adc
out
mov
fneni(8087
adc
push
mov
retf
jae
mov
cmp
jge
ret
rol
fiadd
xor
popf
sub
or
seto
push
mov
jmp
daa
and
push
lea
add
sub
jo
lea
imul
xchg
xor
int3
rcr
(bad)
jg
mov
pop
aad
or
mov
mov
in
push
push
arpl
(bad)
mov
jmp
jl
rcl
sbb
cmp
pop
(bad)
(bad)
jmp
in
enter
movs
cmps
jbe
ret
hlt
dec
test
jl
xchg
or
inc
fst
dec
xchg
cmp
mov
jb
js
sti
out
sbb
jecxz
or
dec
pop
mov
test
ja
cmp
fdivr
xor
lods
retf
shl
call
mov
dec
mov
ss
fwait
push
mov
add
les
arpl
into
outs
fdiv
xchg
jnp
jp
xchg
mov
fild
aad
dec
lods
mov
jns
xchg
mov
push
sub
cvtps2pi
and
pop
data16
xor
ds
xchg
xchg
outs
adc
inc
mov
(bad)
mov
add
pop
gs
imul
push
xrelease
call
test
lahf
inc
idiv
sub
xchg
jne
mov
shl
mov
hlt
loope
sbb
add
dec
sub
cmp
push
adc
sbb
mov
cmps
push
jne
or
neg
je
in
scas
jne
sub
fidiv
not
sbb
shl
enter
jns
fcmovb
(bad)
aam
stos
hlt
(bad)
aam
sti
add
addr16
mov
xchg
dec
out
lods
dec
xchg
pop
push
fs
jae
mov
push
gs
add
jmp
movs
cwde
dec
loopne
in
jmp
leave
jl
mov
cmc
push
aad
cwde
cmp
or
dec
mov
cmp
cmp
add
and
push
adc
jne
sub
or
les
xor
out
not
jg
push
repnz
das
xor
xchg
push
es
(bad)
daa
dec
test
dec
jnp
inc
bound
fdivr
aad
cwde
pop
pop
pop
cli
sub
mov
in
jg
push
fisub
dec
mov
cmp
pop
outs
add
ret
push
js
jb
sub
jbe
cs
ss
push
mov
sub
cmp
scas
xor
fisubr
jmp
repz
sbb
sbb
js
dec
dec
dec
adc
lea
adc
in
cli
lds
dec
mov
add
inc
(bad)
xchg
adc
or
push
pop
mov
pushf
jl
xchg
dec
inc
or
push
aas
pop
jmp
arpl
jne
dec
or
pop
or
mov
iret
imul
inc
fs
repz
mov
mov
jp
loopne
xchg
sub
inc
in
dec
(bad)
mul
inc
xchg
adc
or
pop
jno
add
mov
add
shl
xor
ins
dec
push
mov
sub
(bad)
leave
es
sar
push
in
adc
into
add
ret
jmp
imul
mov
mov
xchg
movs
adc
jbe
gs
push
cmc
adc
or
and
jmp
adc
test
inc
dec
or
std
(bad)
lods
hlt
or
jno
xchg
mov
mov
jg
into
sbb
xor
lds
shl
add
add
imul
and
cwde
cmp
and
push
ds
(bad)
cmp
mov
inc
mov
ja
int3
je
add
xchg
jno
and
leave
push
jmp
add
sub
mov
fstp
js
or
xlat
std
ret
(bad)
pop
addr16
xchg
push
dec
leave
xor
adc
xor
jmp
sub
mov
pop
shl
aaa
jp
les
fsin
push
call
pop
mov
push
jg
mov
neg
out
pop
in
mov
xchg
mov
fdivr
cwde
out
ficomp
outs
js
and
call
jecxz
scas
jns
retf
std
mul
mov
xlat
outs
pop
cmp
rol
sbb
cmc
inc
cdq
mov
and
movs
enter
inc
pop
cmp
and
and
mov
push
mov
stos
xchg
test
bound
or
pop
push
add
sbb
stos
pop
adc
cs
pushf
(bad)
pop
cmp
jmp
test
xchg
das
outs
ret
outs
mov
ds
jp
test
xor
fisubr
fwait
lahf
dec
xchg
dec
in
retf
push
test
fisttp
das
mov
div
mov
out
jae
aas
jl
fcomp
outs
dec
push
cmp
les
inc
jecxz
gs
idiv
scas
cdq
adc
cld
push
mov
pop
mov
jmp
imul
shl
xor
pop
jns
pop
and
jbe
cld
ja
movs
cmp
jg
daa
enter
lea
mov
pop
jmp
sub
imul
test
mov
add
lahf
pusha
pop
mov
add
loopne
and
push
inc
fld
ja
ins
xchg
fld
test
repz
outs
cwde
push
shrd
or
add
add
mov
push
pop
pop
test
data16
sub
inc
test
mov
xor
sbb
cmps
loopne
push
scas
and
mov
(bad)
out
(bad)
or
fdivr
repnz
fstp
cmp
mov
pop
loope
or
add
(bad)
repnz
sbb
not
call
retf
xchg
pop
fist
xchg
mov
add
or
cmp
fild
xlat
jge
and
mov
mov
into
into
xchg
ins
ss
pop
in
xchg
jno
xor
jae
mov
das
out
into
ja
or
cs
addr16
loop
xchg
bound
mov
lds
into
xchg
ror
cli
jmp
loop
push
push
mov
fnstenv
push
dec
repz
jne
fsubr
xchg
out
xchg
xchg
(bad)
popf
push
pop
pop
add
sbb
cmp
outs
rcr
ficomp
jecxz
xchg
pop
pop
mov
(bad)
mov
test
and
adc
dec
dec
xchg
jmp
mov
dec
and
test
call
test
xchg
test
mov
add
sbb
sub
jl
xchg
test
clc
sub
mov
adc
and
mov
jl
fnstcw
push
fwait
jbe
pop
xor
(bad)
adc
movlps
pop
sub
shl
ss
enter
jl
repnz
int
sbb
sbb
xchg
fxch
hlt
mov
xlat
push
xchg
iret
aas
into
daa
(bad)
stos
xchg
xor
cmp
push
aam
and
sahf
(bad)
ins
test
sub
mov
xor
aad
add
das
clc
add
repz
int3
mov
and
adc
cwde
sbb
ret
pop
loope
push
dec
test
mov
pop
(bad)
cmp
aas
sub
call
xchg
and
ror
mov
aad
mov
xchg
inc
adc
mov
push
jne
xchg
jecxz
lods
cmp
sub
xchg
and
cmps
retf
xor
loopne
jo
push
pcmpgtd
aas
ins
pop
add
sbb
enter
jbe
imul
sbb
mov
xor
test
inc
iret
fstp
in
cmp
pop
je
cmp
inc
jecxz
pop
push
popa
test
push
imul
movs
jo
inc
push
(bad)
pusha
pop
adc
(bad)
ffree
sahf
mov
pop
ror
out
push
add
sub
retf
bound
aas
lock
test
test
clc
cmp
pop
cmc
add
ds
outs
call
(bad)
jmp
cmp
ds
(bad)
popf
mov
push
outs
mov
push
sub
rcl
retf
mov
into
leave
xor
stos
(bad)
int
xchg
or
je
push
mov
ret
dec
dec
cmp
ret
ins
je
push
push
out
fisubr
add
adc
inc
xor
push
add
sub
lds
push
dec
sub
dec
ds
jmp
inc
xor
cli
mov
fisub
xor
cs
jp
aas
xor
push
rcl
hlt
out
pop
cmc
pop
fild
(bad)
sbb
ja
jge
sub
mov
xchg
push
(bad)
sbb
or
mov
(bad)
push
cmp
cmp
ja
popa
cmps
xlat
stc
ja
mov
mov
inc
jecxz
icebp
pmaddwd
jmp
mov
add
repnz
mov
hlt
dec
test
lods
push
inc
sub
lds
mov
mov
movs
es
pop
mov
sar
jo
ror
in
xchg
cmp
cld
iret
mov
hlt
or
jbe
sub
je
dec
bound
fimul
pop
(bad)
lock
sub
or
or
test
cmc
sbb
xchg
pop
jne
fisubr
dec
xchg
dec
fistp
jp
ds
out
psllq
cmp
jp
push
shl
mov
mov
mov
xchg
loope
xor
mov
je
jg
sub
aam
(bad)
cmp
pop
jmp
pop
pop
ret
leave
cld
dec
(bad)
sub
sbb
aam
and
stc
mov
lock
cmp
scas
popf
scas
lods
sub
sahf
rcl
call
arpl
sbb
in
dec
mov
enter
pop
sbb
out
out
or
inc
sub
clc
and
cmp
or
aam
sub
or
bound
repnz
retf
rcr
outs
(bad)
(bad)
in
(bad)
jmp
enter
dec
mov
sub
sbb
cmc
inc
pop
out
jl
adc
jbe
xchg
mov
imul
xor
jl
xabort
cwde
test
movs
outs
in
jne
fbld
popa
add
test
fild
mov
popa
fild
(bad)
in
in
jecxz
out
sbb
cmp
(bad)
jp
mov
out
mov
dec
add
loopne
push
(bad)
aad
dec
push
outs
push
dec
loopne
fimul
jb
out
out
fwait
in
mov
lock
push
bound
mov
mov
add
(bad)
cmp
and
call
adc
cmp
pop
lahf
aaa
jae
pop
sahf
xor
sti
ffree
inc
pop
push
mov
add
xchg
jge
rol
(bad)
mov
adc
add
neg
out
fisttp
jo
dec
push
xchg
mov
xchg
in
push
ds
add
hlt
mov
adc
sbb
ror
mov
aas
dec
mov
xchg
scas
not
pop
outs
ret
repnz
lock
imul
mov
loope
xor
inc
out
loope
fcmovu
adc
xchg
jge
inc
mov
mov
pop
leave
jmp
aam
xchg
fisubr
inc
ins
(bad)
in
adc
add
mov
and
push
add
aas
inc
gs
add
out
or
pop
adc
push
add
mov
inc
icebp
dec
sub
(bad)
gs
xor
lods
imul
pop
movs
outs
adc
add
icebp
int3
jmp
inc
jle
or
ret
test
out
mov
test
cmp
arpl
sub
call
not
mov
push
fstp
push
adc
lds
xor
xchg
sti
or
jg
cmp
fptan
rcr
ins
push
cli
or
aam
mov
xor
xor
shl
gs
stc
scas
adc
sbb
rcr
stos
inc
enter
dec
ss
aas
(bad)
fwait
sbb
xor
cmc
adc
and
pop
jg
xor
inc
mov
in
retf
idiv
inc
in
mov
ficom
movs
out
mov
pop
fstp
mov
nop
(bad)
xor
inc
addr16
in
mov
sub
and
les
imul
xchg
leave
retf
rcl
push
fwait
dec
ret
icebp
xor
jmp
push
xchg
pop
push
loope
cmp
in
jno
psubd
aas
iret
add
push
js
clc
pusha
ret
ror
pop
div
or
jp
cmps
push
jmp
sbb
jmp
pushf
sar
das
ins
inc
js
mov
dec
adc
mov
fdivr
push
push
pop
mov
xchg
jbe
popa
jb
mov
push
mov
jbe
lock
gs
(bad)
enter
aas
test
and
sbb
or
ins
push
jle
or
mov
test
mov
push
hlt
loop
fiadd
pop
push
and
mov
fidivr
rol
pop
jno
out
jmp
call
mov
stc
lods
rcr
mov
adc
es
sub
ds
test
aam
jmp
into
cmp
stos
fnsave
test
jg
lahf
dec
dec
and
popa
sub
add
push
and
sbb
mov
sbb
ja
inc
(bad)
xlat
adc
xlat
stos
neg
(bad)
retf
dec
inc
adc
inc
sub
(bad)
jno
xor
aad
adc
cvtps2pi
or
pop
mov
add
int3
enter
lea
push
xchg
outs
stc
mul
mov
lods
adc
add
xchg
nop
xchg
(bad)
inc
cmp
and
xchg
ror
xor
inc
jmp
add
push
data16
xor
push
(bad)
mov
lahf
pop
push
sbb
ret
push
add
mov
sbb
clc
mov
mov
xor
jb
inc
mov
mov
sub
push
add
sbb
shl
dec
cmp
and
je
pop
(bad)
scas
sub
jb
cmps
pop
imul
das
aad
push
in
test
es
jmp
and
je
dec
sbb
fnstsw
ja
xchg
and
pop
cmp
ins
sbb
inc
ja
lahf
sbb
(bad)
jmp
jmp
add
mov
aam
pop
xor
sub
in
dec
jmp
aas
pop
stos
lds
dec
pop
sub
xchg
dec
dec
stc
push
aam
mov
out
mov
rcl
mov
and
mov
inc
fs
hlt
jbe
aad
and
mov
out
xchg
ins
xor
cmp
or
push
add
dec
dec
lods
mov
loop
jge
sub
jno
dec
inc
dec
and
cmps
push
jno
dec
out
dec
sub
adc
(bad)
mov
sub
mov
mov
adc
push
inc
sar
fwait
lock
sub
repnz
mov
cli
aas
lds
cmp
call
addr16
ficomp
inc
in
loopne
inc
cmp
fistp
loopne
ret
mov
dec
fnstenv
aad
dec
fsubr
mov
fsub
and
retf
call
pop
popf
mov
xor
std
mov
shl
dec
ja
push
sub
fistp
add
mov
jecxz
clc
nop
pop
xchg
xchg
mov
jnp
jmp
cmp
mov
or
cmp
sub
fcomp
shl
fstp
pop
fst
(bad)
push
ja
cmp
and
(bad)
call
lods
retf
in
movs
adc
fcomp
sub
adc
retf
mov
dec
js
pop
daa
cmp
adc
inc
shl
pushf
leave
pop
jno
mov
test
push
cdq
pop
in
mov
sti
fisttp
jecxz
xor
sbb
xchg
loop
push
ss
or
dec
movs
xor
fcom
jmp
fs
neg
stos
mov
fld
cmc
and
aad
sub
push
sub
sahf
adc
adc
iret
cli
ins
pop
div
jmp
retf
push
inc
lods
out
mov
int3
jno
frstor
test
icebp
and
mov
cmps
push
xor
mov
retf
cmp
mov
sti
lock
je
xchg
add
jb
xor
pop
and
mov
dec
or
xor
lds
or
repnz
cli
cmp
in
in
mov
ror
or
stc
and
sbb
fcom
add
pop
cmp
push
enter
dec
(bad)
cmp
(bad)
ins
sahf
faddp
lods
idiv
dec
push
scas
jnp
fidivr
pop
jmp
jp
aam
scas
sar
cmp
push
xor
pushf
faddp
cmp
imul
jecxz
jbe
int3
adc
int
ja
dec
pusha
loop
ror
mov
bnd
sbb
jnp
cmc
adc
ss
push
sbb
pop
jns
xor
neg
xchg
pop
mov
sbb
shl
movs
(bad)
scas
addr16
std
inc
xor
imul
sbb
inc
jg
inc
add
mov
dec
mov
jg
pop
sub
xchg
xor
or
jb
mov
hlt
push
dec
dec
sub
int3
push
jge
push
movs
mov
adc
cdq
fstp
push
mov
cmp
(bad)
jle
ins
jp
and
sub
inc
jmp
addr16
mov
test
movs
sub
cmp
arpl
push
lahf
or
jmp
xchg
mov
fsubr
push
mov
lods
inc
cmp
mov
adc
dec
test
pop
pop
adc
shl
lock
(bad)
ret
mov
xchg
push
pop
xor
sbb
ret
mov
loop
add
call
add
cmps
stc
adc
sub
or
sbb
adc
dec
inc
jmp
mov
sbb
xor
mov
or
into
fdivr
sbb
hlt
inc
les
repnz
into
fwait
jecxz
dec
push
adc
and
lods
call
mov
cmp
push
xchg
in
push
mov
push
mov
test
dec
test
das
sub
pop
pop
cmps
adc
pop
(bad)
scas
enter
sbb
stos
dec
sub
and
fwait
jbe
cmp
cli
push
jbe
mov
int
jae
mov
repnz
jg
test
in
movs
out
add
mov
(bad)
sbb
bound
push
sti
push
jne
push
mov
add
call
out
pop
pop
arpl
fcomp
loop
movs
pop
fwait
push
out
sar
cmc
mov
fiadd
sub
xchg
loop
jmp
jae
xor
scas
cmp
mov
or
add
pop
jmp
daa
inc
pop
add
adc
outs
fsubr
ins
push
ret
mov
ficom
fs
push
hlt
fbstp
inc
or
jno
xor
xor
inc
jle
cmp
dec
cli
addr16
aam
xchg
test
ret
std
test
outs
mov
popf
aam
dec
imul
lea
stc
retf
sub
cmp
dec
clc
mov
js
push
mov
je
xchg
cmps
cmp
pushf
cdq
(bad)
(bad)
pushf
or
dec
lods
jge
es
pop
or
mov
jle
pop
fisubr
hlt
retf
mov
aas
jmp
and
pop
les
fidiv
nop
mov
adc
cdq
push
push
and
es
pop
fwait
cmp
mov
mov
in
test
or
inc
lahf
out
pop
jg
(bad)
loope
ret
add
push
pop
and
inc
test
dec
dec
in
jmp
mov
dec
mov
int
leave
cmc
rcr
nop
scas
addr16
push
jg
push
aaa
jecxz
sub
mov
mov
pushf
pop
and
fisub
or
xchg
mov
cmp
iret
test
cs
icebp
loope
xor
movs
lock
or
cli
sbb
call
jae
cmp
sub
lahf
fimul
or
xchg
mov
stos
sub
push
xor
(bad)
aam
and
adc
dec
xchg
bound
jp
movs
or
adc
cmp
push
ret
dec
cli
fucom
ror
jp
mov
popf
fmul
pop
outs
mov
push
call
nop
outs
data16
xor
or
mov
pop
das
es
pop
das
push
pushf
iret
pop
test
(bad)
(bad)
iret
cdq
icebp
xor
push
lahf
mov
aas
jl
mov
stc
int
fwait
or
aaa
ins
mov
inc
add
and
jg
cmp
dec
add
push
mov
pushf
int3
xor
les
mov
ret
push
test
gs
int3
ret
imul
xchg
push
daa
outs
ror
pop
add
inc
sbb
sub
sahf
inc
jmp
push
adc
and
xchg
push
pop
push
scas
xchg
jge
sti
(bad)
cld
xor
out
int
ins
(bad)
and
enter
cmps
add
jmp
sub
ret
(bad)
sti
xor
sar
xchg
scas
jae
jmp
xor
mov
mov
jnp
cdq
sbb
fld
cmp
ja
rcl
jae
pop
ins
fisub
jnp
pop
addr16
pop
sbb
pop
call
hlt
sub
retf
and
pusha
inc
xor
jns
xchg
jo
xchg
or
test
sbb
clc
mov
loope
fimul
inc
sbb
sbb
jmp
mov
shr
and
jae
(bad)
icebp
retf
xchg
repnz
xchg
(bad)
leave
push
mov
shl
lea
aaa
adc
sub
push
in
dec
xlat
cwde
push
in
push
and
sbb
(bad)
mov
cmps
cmp
mov
xchg
mov
sbb
daa
test
loopne
sahf
out
pop
int
adc
gs
xor
push
mov
ds
adc
or
jmp
imul
adc
pop
and
fisttp
add
xchg
mov
xchg
push
imul
adc
mov
inc
(bad)
in
movs
dec
dec
mov
cli
adc
xchg
or
cmps
or
(bad)
mov
pop
jg
in
aas
dec
lds
mov
fmul
xchg
fisttp
xchg
cdq
adc
les
jmp
cmps
dec
or
and
add
cld
sub
adc
sub
xchg
in
adc
pop
pop
scas
push
repnz
xchg
pop
mov
or
jecxz
cld
jns
cli
(bad)
cmps
adc
ffreep
minps
pushf
inc
pop
add
cmp
aas
mov
mov
dec
ins
xchg
(bad)
test
das
jecxz
add
jne
loope
fdivr
cs
pop
bound
loop
mov
cmp
cld
je
cmps
int
mov
jl
fmul
inc
div
add
push
test
cmc
gs
mov
xchg
mov
sub
xchg
xor
dec
inc
addr16
dec
cdq
das
mov
(bad)
(bad)
int
mov
out
popa
mov
aad
inc
adc
retf
or
adc
sub
adc
jl
cmp
mov
xchg
ja
clc
inc
mov
inc
fisttp
out
push
adc
fistp
xor
xchg
sbb
or
xor
cmp
jbe
sahf
dec
dec
ret
popf
inc
ins
fiadd
loope
adc
add
movs
mov
pop
(bad)
dec
clc
sbb
dec
sti
loope
ret
ds
pusha
icebp
xchg
jae
sbb
and
pop
mov
mov
mul
push
xchg
shl
and
xor
push
fdiv
std
mov
or
enter
cs
or
(bad)
in
xchg
dec
mov
out
mov
call
(bad)
sbb
arpl
imul
test
ja
movs
outs
xchg
adc
imul
dec
sbb
enter
icebp
fwait
dec
sub
inc
dec
imul
mul
call
cli
movs
xchg
sbb
jne
adc
pushf
dec
in
cmp
loope
and
push
cmp
dec
xchg
jno
jb
xor
inc
mov
in
xchg
cmp
push
xor
xor
dec
push
sbb
add
outs
mul
ds
inc
dec
fstp
pop
rcr
mov
xchg
shl
cmp
pop
xchg
jbe
jecxz
mov
mov
shl
aad
xchg
xchg
xchg
or
bswap
mov
lock
cs
jb
mov
push
enter
mov
push
sub
outs
(bad)
stos
and
cli
push
ret
mov
sbb
or
inc
jecxz
adc
pop
(bad)
js
xchg
or
cmp
mov
mov
push
aas
sbb
push
shl
loope
fidivr
pop
fstp
push
pop
out
aas
push
mov
cmp
mov
sub
shl
pop
cmp
xor
in
movs
and
dec
(bad)
ret
jecxz
cs
inc
(bad)
retf
ds
mov
int
sbb
cld
pop
(bad)
jae
sub
lds
sub
pop
je
cmps
movs
jns
cmc
out
lea
add
xor
movs
shl
jl
sub
push
daa
daa
out
imul
loopne
inc
into
jns
ror
jmp
neg
pop
lock
xchg
int
sti
adc
gs
imul
inc
xor
xchg
ins
sbb
add
jle
and
fild
sbb
dec
mov
mov
pop
shr
sar
cld
out
or
aam
xor
movs
aas
hlt
mov
xchg
fbld
push
sub
xchg
(bad)
xchg
inc
cld
data16
sub
out
dec
outs
leave
iret
sub
psrlw
mul
cmp
mov
or
inc
cmp
aad
push
xchg
into
ret
aam
mov
pop
pushf
pop
pop
in
movs
mov
push
test
ins
test
ss
cmps
pop
enter
stos
or
pop
cdq
sbb
push
push
pop
xchg
call
fld
add
out
mov
sti
push
js
cld
jg
inc
test
stc
test
(bad)
push
dec
out
retf
je
gs
dec
iret
sbb
xchg
jle
mov
clc
movs
jbe
jb
cmc
lahf
and
daa
lods
movs
test
sbb
jb
pop
stos
push
scas
pushf
inc
outs
mov
jmp
pushw
push
jp
pop
mov
outs
push
aam
cmp
popf
mov
mov
icebp
lods
inc
inc
add
and
jno
leave
icebp
mov
sub
pushf
jb
out
test
push
mov
inc
dec
push
ret
dec
xchg
push
push
cmp
lods
out
jb
and
in
adc
mov
pop
and
shr
mov
nop
dec
retf
fild
pop
inc
push
push
cmp
xchg
ret
popf
je
dec
mov
add
inc
mov
adc
sub
repz
or
xor
add
mov
cmps
mov
mov
mov
mov
push
ret
sub
or
pop
xchg
sub
test
or
pop
cmp
sti
xlat
dec
and
test
jecxz
jp
ret
rcr
out
xchg
mov
loope
inc
jmp
xor
ror
call
inc
adc
sbb
jg
xor
mov
adc
mov
adc
push
in
jmp
mov
push
dec
xchg
loope
int3
xchg
adc
(bad)
cld
and
xchg
dec
cld
cmps
dec
jmp
arpl
add
mov
or
hlt
hlt
mov
jg
xchg
mov
push
fmul
sub
into
jg
fld
repz
push
or
out
int
sub
jno
sbb
sti
mov
or
lds
adc
in
sub
fwait
rcr
pop
xchg
jmp
adc
sbb
and
leave
cmp
push
mov
mov
pop
mov
rcr
out
mov
cmp
test
and
sbb
(bad)
jno
adc
mul
sub
movs
(bad)
(bad)
jle
and
fisub
mov
push
or
or
dec
sbb
jo
xchg
cld
xchg
cmps
pop
adc
cmp
sub
mov
std
sub
push
inc
sbb
pop
xchg
xlat
xchg
(bad)
and
les
mov
ins
lea
outs
(bad)
push
mov
dec
mov
test
bound
mov
xchg
cmps
mov
xchg
mov
rol
bound
mov
and
push
stos
push
pop
imul
and
sub
push
aad
fs
paddusw
push
mov
int3
xor
adc
inc
inc
inc
xor
inc
mov
cmp
mov
cmp
mov
push
lds
sbb
int3
mov
in
dec
ficomp
fdivr
out
rcr
xchg
push
mov
repz
popf
jnp
loop
xor
inc
push
sahf
xchg
(bad)
out
neg
add
pop
test
std
xchg
js
xchg
loope
sbb
icebp
in
pop
out
push
adc
stos
and
inc
in
jae
cmp
xchg
ja
mov
pop
xor
xor
xor
mov
les
sbb
adc
dec
jbe
push
inc
sar
inc
shl
cld
mov
outs
sub
and
jmp
mov
mov
ins
push
mov
lods
mov
pop
ins
push
push
add
fsub
mov
jno
loope
cmps
jle
adc
push
cld
out
(bad)
mov
adc
(bad)
imul
outs
dec
add
mov
rcl
imul
inc
(bad)
cmc
push
and
jge
push
imul
push
and
test
fisub
jmp
pop
adc
mov
mov
lock
jb
pop
dec
nop
or
pop
push
rcl
jle
fimul
dec
dec
mov
inc
sub
lods
pop
scas
sar
dec
imul
cwde
pop
stc
mov
sub
ret
setg
jmp
sahf
loope
out
inc
mov
stc
push
cmps
cs
mov
add
cwde
push
jle
xchg
stos
xchg
inc
add
lods
jo
xor
and
arpl
into
push
cdq
adc
mov
repz
mov
fld
mov
sub
add
dec
push
push
cwde
scas
jecxz
push
xor
and
fmul
and
xchg
neg
and
jmp
int3
js
dec
iret
jle
call
pop
sbb
retf
cld
xor
lds
mov
sub
and
pop
mov
lock
mov
push
retf
fldenv
mov
cwde
mov
push
or
jle
inc
ret
shl
stos
mov
(bad)
sub
push
adc
lea
pop
arpl
ds
dec
mov
addr16
stc
iret
aam
js
xchg
xchg
pop
ja
cwde
push
out
xchg
or
mov
sub
js
(bad)
cmps
popa
push
jge
sbb
sub
jmp
not
sbb
mov
sub
cmp
lods
mov
cmp
xlat
rep
sbb
and
retf
xchg
(bad)
icebp
shl
into
xor
repnz
test
lock
mov
lods
mov
into
xchg
mov
mov
das
cmc
add
dec
xchg
add
scas
inc
dec
mov
sbb
mov
scas
cmovle
out
or
aas
aad
stos
push
leave
int
fs
pushf
clc
stos
cli
ret
pushf
mov
cmps
dec
mov
in
je
mov
movs
rcl
shr
jecxz
sub
out
cmp
xor
jge
fwait
in
ror
(bad)
pop
cmp
arpl
loope
jl
fistp
pop
test
xor
jp
arpl
sbb
mov
xchg
js
or
jge
ins
shl
shl
cmp
push
je
popa
xor
sbb
jle
pop
pusha
dec
pop
mov
cmp
adc
jnp
mov
fmul
and
push
shl
add
loopne
jae
jl
inc
icebp
jnp
sbb
adc
mov
jmp
push
test
not
ror
mov
inc
outs
pop
or
or
mov
or
nop
xchg
push
fs
and
mov
sbb
adc
enter
mov
fisubr
pop
pop
out
stos
pop
xchg
pop
(bad)
imul
cdq
mov
push
dec
movs
call
jmp
cmp
dec
adc
leave
lods
in
sub
bound
addr16
jns
or
shl
cmc
fs
lods
add
call
pop
fld
mov
daa
cmc
mov
mov
push
or
std
inc
movs
cwde
fwait
add
jl
gs
retf
hlt
jns
sbb
in
pop
mov
jle
mov
pusha
(bad)
mov
loop
xor
pop
cmp
dec
out
mov
daa
inc
in
sbb
(bad)
(bad)
imul
in
(bad)
xchg
movs
(bad)
adc
outs
cwde
pop
popf
push
loope
jae
fsubr
jp
fistp
sub
ins
stos
jl
mov
cli
fdiv
rcr
pop
repz
repnz
scas
sbb
xor
jle
adc
mov
jbe
adc
out
lahf
sub
stos
mov
push
int
shl
and
mov
fistp
mov
mov
(bad)
mov
pop
push
retf
repz
or
pop
dec
neg
or
test
ins
cmp
fist
sbb
cmp
mov
push
sbb
into
push
loope
inc
push
test
mov
repz
test
ins
add
stos
cmp
(bad)
adc
jno
out
inc
and
hlt
adc
leave
jns
jmp
pusha
(bad)
sahf
aas
jne
add
and
pop
sar
sub
inc
loope
fisub
shl
pop
cmp
stos
into
hlt
sub
xchg
pop
sub
retf
out
frstor
movs
sbb
out
aaa
sub
arpl
jge
and
push
pop
sbb
cmp
xchg
or
sub
jmp
mov
xor
scas
and
jmp
xor
or
fcomp
cmps
mov
sub
mov
pop
adc
xor
in
push
(bad)
cmp
mov
xor
sub
data16
add
mov
repnz
push
dec
push
add
pop
test
mov
in
gs
or
xchg
mov
fld
or
xor
xchg
inc
push
pop
icebp
xchg
and
xor
sub
xor
fcom
or
fs
js
pop
adc
inc
mov
outs
xor
aas
adc
fdivr
in
shl
jmp
cmps
shr
xor
outs
sub
bnd
lea
and
jle
or
and
cmp
pop
sbb
jns
push
jae
pop
nop
jge
out
or
fild
ja
mov
leave
mov
pop
cmp
es
pop
sbb
cmps
mov
sbb
pop
inc
clc
pop
in
shr
jnp
dec
test
push
jno
fbld
ins
cs
sub
repnz
jo
ds
imul
xor
adc
ins
add
sub
add
xor
sar
xchg
push
and
push
cmp
mov
adc
imul
ret
adc
ja
sti
pop
cmc
push
movs
cs
push
and
cmp
xchg
or
(bad)
mov
(bad)
icebp
or
(bad)
fdiv
add
mov
sar
cdq
test
div
rep
or
arpl
data16
sub
out
dec
or
stos
xor
inc
jne
dec
dec
adc
leave
cmp
dec
shr
push
sti
pop
test
lods
mov
enter
into
mov
dec
js
sar
cmp
stos
mov
mov
mov
xor
(bad)
out
or
call
test
fcom
and
jno
jle
data16
repz
data16
data16
dec
imul
cmps
sti
loopne
jge
jle
jns
and
inc
shr
add
sti
mov
push
lods
icebp
pop
das
sbb
cmps
push
and
test
pusha
iret
stos
sub
es
stc
dec
lahf
stos
sbb
test
xchg
cmc
fst
cmp
stos
push
pop
sub
aas
leave
fnstcw
(bad)
iret
and
cld
lods
sar
cmp
xor
ins
mov
pop
add
jmp
ret
fs
add
inc
push
bound
daa
xchg
dec
inc
out
mov
cmp
sub
dec
mov
cli
pop
xchg
mov
fild
add
sbb
out
mov
out
(bad)
fmul
mov
retf
dec
fs
sbb
loop
sbb
shr
inc
mov
out
mov
rcr
sbb
movs
mul
(bad)
retf
jle
pop
mov
ss
cmps
pop
mov
aad
mov
xchg
pop
shr
nop
or
adc
lahf
mov
or
rol
int3
xor
lods
sub
sub
sbb
(bad)
sub
mov
es
add
scas
mov
and
add
xor
cld
loop
cmp
mov
das
pop
jg
push
jle
sbb
mov
mov
arpl
mov
mov
adc
or
loop
retf
fimul
out
push
pushf
es
push
sub
and
mov
div
sub
fild
loope
push
fcomi
mov
mov
xor
jmp
dec
xchg
cmp
add
mov
inc
sar
and
pop
out
mov
leave
popa
into
inc
push
push
repz
icebp
mov
scas
cmp
pop
jae
fadd
pop
jne
mov
jnp
sbb
adc
loope
fstp
iret
cmc
sub
(bad)
int
and
xchg
fnsave
sbb
pop
pop
mov
or
movs
ret
jno
fldcw
cmc
repnz
jne
jecxz
in
add
sbb
popa
jnp
cdq
adc
adc
test
test
pop
inc
jnp
lock
push
fs
call
inc
test
std
sar
adc
ja
popa
scas
retf
nop
shr
xchg
push
add
mov
lods
and
inc
nop
jmp
jae
sbb
jecxz
push
mov
pop
dec
fs
mov
push
(bad)
sub
sbb
push
sbb
imul
aad
movs
cdq
ss
shl
scas
iret
addr16
adc
inc
adc
out
scas
das
mov
jle
add
adc
and
popf
mov
and
jmp
pop
xor
mov
fsub
pop
mov
mul
cmp
cmp
dec
mov
xchg
inc
push
jmp
lds
mul
mov
es
add
aas
xor
fcmovnb
shr
mov
fcmovbe
push
icebp
shr
mov
icebp
enter
in
jnp
shr
dec
jge
loope
(bad)
cld
hlt
push
add
outs
pop
pop
aam
pop
push
repz
mov
sub
and
jmp
xor
aam
(bad)
out
dec
popf
stc
test
adc
jl
inc
push
repnz
mov
push
loop
sbb
fcomp
push
cmp
ficom
dec
cmp
dec
mov
lock
iret
cmp
hlt
arpl
or
rol
cmp
ror
inc
cmp
add
push
mov
shr
inc
sbb
jb
sbb
push
aad
rol
mov
pop
fsub
loop
sbb
mov
push
cmp
sub
inc
and
mov
xor
das
mov
mov
pop
ja
push
mov
xchg
bound
jae
mov
das
scas
aas
pop
fimul
xor
mov
aad
int3
jle
mov
mov
jle
pop
lahf
sub
and
and
push
push
sub
sub
xchg
in
jbe
push
nop
cld
fidiv
ins
in
retf
stc
push
sub
(bad)
clc
dec
add
mov
cmp
lods
mov
add
sub
push
retf
mov
push
jg
or
inc
nop
cmp
cdq
in
int
xchg
lea
jb
out
test
add
test
cdq
jae
pop
daa
ret
imul
sbb
into
dec
mov
in
or
xor
fcom
cli
xor
dec
push
ins
int
ins
call
leave
pop
shl
int
sar
repz
bound
or
sbb
lock
aaa
clc
jne
pop
mov
and
xor
push
sub
fidivr
mov
loop
and
pop
dec
pop
push
push
jecxz
mov
adc
mov
(bad)
lods
pop
and
cmps
mov
je
inc
jmp
or
nop
imul
fisttp
mov
push
push
repz
fwait
sar
je
pop
and
add
cmps
fistp
sub
jno
mov
es
xchg
lods
inc
mov
jge
add
lods
xor
xchg
lea
outs
jbe
pop
cmps
and
inc
cmc
(bad)
aas
xor
pop
daa
dec
test
inc
or
(bad)
(bad)
in
pushf
cmp
movs
mov
push
into
or
add
loop
mov
out
xlat
adc
jl
in
leave
cmp
mov
shl
inc
iret
out
jmp
bound
aaa
ja
xor
stos
cmp
mov
std
movs
das
sbb
in
pop
js
dec
gs
dec
das
arpl
stc
push
sub
leave
pop
push
ret
or
mov
xchg
dec
fild
jno
and
or
shl
dec
cmp
pop
inc
icebp
dec
bound
mov
add
dec
test
or
rol
xchg
inc
mov
push
dec
fiadd
(bad)
sti
sub
mov
jg
jecxz
movs
xchg
outs
cmp
push
jle
sbb
sbb
mov
add
mov
aas
jnp
jo
mov
pushf
imul
(bad)
xor
retf
fbstp
sbb
mov
out
push
(bad)
(bad)
mov
inc
cmp
outs
ins
cmp
scas
shl
retf
jns
add
arpl
or
jo
stos
lock
scas
xor
and
sbb
aaa
cmp
repnz
fld
inc
(bad)
(bad)
push
push
mov
inc
ds
iret
adc
pop
mov
cmps
sbb
das
jno
inc
xchg
xchg
fwait
out
pushf
and
(bad)
dec
rol
ret
ret
xchg
sbb
popf
mov
mov
mov
(bad)
push
mov
(bad)
out
add
not
mov
pusha
adc
icebp
pop
mov
mov
dec
lock
sub
pop
cmps
jne
add
jns
in
rcr
dec
sub
push
xchg
aad
int
test
imul
xchg
sub
xor
xchg
call
jmp
lahf
rol
outs
ficomp
mov
push
or
scas
outs
stos
cmps
ins
mov
jne
lds
cs
push
mov
mov
add
cmp
(bad)
inc
push
push
xlat
cmp
mov
lods
xchg
imul
push
js
in
call
pusha
dec
sbb
sub
cmp
mov
cli
int
cdq
adc
inc
add
jge
mov
mov
repz
sub
inc
sbb
push
xchg
dec
jne
dec
imul
mov
cdq
movs
xchg
sub
and
inc
shr
dec
mov
adc
clc
dec
pop
jg
adc
jnp
and
(bad)
cmp
inc
movs
inc
mov
sbb
mov
outs
xchg
rol
leave
mov
mov
fsubr
icebp
or
stos
inc
sti
out
or
stc
lods
inc
inc
int
test
mov
es
adc
push
daa
or
movs
cmp
sbb
push
mov
retf
mov
in
sub
sbb
test
pop
hlt
mov
mov
lods
push
add
sub
lea
popa
out
test
sbb
jno
mov
loopne
repnz
dec
mov
cmp
and
dec
mov
sub
mov
in
pop
sub
int3
out
test
cmp
mov
or
push
sub
popf
inc
imul
pop
and
lods
xchg
fwait
mov
cmp
xchg
test
popf
push
xor
lods
add
movs
sbb
pop
lea
jbe
cs
hlt
cmp
jmp
jg
sub
mov
pop
cli
mov
cs
dec
adc
or
popf
mov
xchg
dec
add
clc
pushf
jb
inc
xor
xchg
xor
cmp
inc
xchg
pop
inc
aad
jae
fistp
dec
stc
sbb
adc
mov
aad
test
leave
shl
fadd
pop
jp
or
pop
or
inc
cmps
push
ficom
and
sub
fxam
ins
pop
stos
fmul
jo
dec
into
xchg
lods
pop
sbb
(bad)
lahf
xor
mov
rcr
pop
mov
(bad)
int3
or
push
mov
test
jno
sub
inc
jmp
xchg
xchg
fdivr
stos
in
call
daa
gs
test
and
repz
popa
push
ds
sub
pop
inc
dec
out
in
xchg
iret
movs
fs
aas
bound
mov
mov
out
sbb
mov
pusha
pop
outs
sbb
scas
popa
adc
jmp
daa
call
pop
ins
jecxz
xchg
in
in
pushf
repnz
dec
and
cmp
stos
loopne
in
and
pop
mov
mov
rol
mov
sub
repz
sbb
icebp
push
xchg
aaa
mov
pop
fs
cld
add
fisttp
mov
pop
lock
jg
(bad)
mov
xchg
pop
and
push
adc
push
lds
or
push
retf
stos
call
mov
or
imul
mov
xlat
aam
push
ss
xchg
pop
cs
sar
rcr
push
cli
mov
(bad)
cs
shr
adc
add
mov
pop
imul
mov
mov
mov
popa
mov
(bad)
repnz
or
mov
ds
mov
inc
sub
setb
jno
lods
test
dec
into
pop
push
mov
pop
push
pop
pop
out
cmc
(bad)
jmp
repnz
jmp
fdivr
mov
cmps
add
xor
jne
jge
add
icebp
pop
movs
inc
mov
sahf
xchg
xor
ds
xchg
inc
(bad)
xor
sar
ins
mov
call
mov
clc
outs
fxch
adc
das
mov
adc
xchg
mov
bound
mov
pop
aaa
cs
iret
shl
mov
add
(bad)
into
sbb
dec
mov
cld
jg
jle
xchg
aas
cmp
cmp
or
add
sub
ret
ret
ret
inc
mov
stos
neg
cmp
mov
stos
js
inc
sub
jl
pop
cs
or
dec
push
int3
pop
inc
pop
push
sub
push
enter
add
jae
push
cmc
outs
out
adc
mov
xchg
pusha
test
mov
loope
mov
dec
jnp
jge
outs
nop
sahf
or
pushf
inc
cli
cmps
por
dec
adc
aaa
adc
scas
jb
mov
mov
mov
mov
xchg
cld
and
dec
pop
inc
xchg
add
inc
aad
in
mov
into
pop
in
mov
scas
inc
(bad)
je
mov
fs
pop
xor
pop
or
cs
movs
lds
gs
adc
and
lds
popa
add
std
or
sbb
mov
icebp
fwait
scas
loop
and
loopne
adc
mov
addr16
int3
std
movs
cmp
push
fs
jno
aam
pop
xchg
nop
lea
dec
sbb
inc
ja
std
pop
mov
frstor
jae
call
push
inc
cmp
cmps
(bad)
xchg
cdq
fadd
push
mov
push
fsubr
or
iret
fdivr
popa
mov
bound
xlat
pop
test
movs
test
dec
adc
in
dec
pusha
shl
adc
mov
xchg
push
out
scas
sbb
adc
cwde
icebp
das
dec
cld
ret
xchg
rcl
inc
sbb
test
sub
mov
into
jp
sbb
mov
outs
lds
cmp
and
mov
adc
mov
add
adc
cmp
add
mov
into
jl
dec
pop
mov
cmp
repnz
mov
or
dec
cmp
xor
addr16
xchg
stos
dec
test
sti
(bad)
sub
popf
pushf
fwait
add
movs
dec
(bad)
adc
adc
adc
adc
outs
fidivr
fmul
cmp
sbb
sti
out
jmp
lods
setg
sbb
xlat
fs
js
popa
cs
cmp
out
cmp
mov
xlat
test
jg
sti
jmp
adc
cs
(bad)
stos
mov
lea
idiv
cdq
xchg
jmp
or
cmp
lea
push
add
jns
jge
add
ins
cmp
mov
jns
shl
jge
mov
inc
and
ret
ins
xchg
cmp
pop
mov
jbe
retf
push
pop
mov
adc
cmp
stc
shr
scas
ds
push
repnz
aaa
into
sub
dec
ror
push
movs
scas
aas
out
inc
ss
fisubr
mov
lahf
mov
shl
je
aad
pushf
dec
pop
mov
pop
dec
loope
sub
pop
dec
xor
pop
out
mov
jae
pop
aaa
div
mov
mov
hlt
xor
aas
sub
add
daa
aad
sub
push
adc
inc
js
cs
aaa
push
sub
ja
sbb
xchg
mov
loop
into
cdq
mov
or
fldcw
jo
fwait
and
popf
rcl
push
mov
pusha
or
adc
xlat
xchg
push
jnp
aam
xchg
xchg
dec
in
retf
cld
xor
or
pop
add
or
bound
jmp
and
(bad)
jne
sub
dec
hlt
cmps
pop
push
cmp
xor
push
scas
cs
push
(bad)
rcr
sub
inc
dec
call
push
movs
mov
mov
(bad)
stos
mov
es
repnz
ds
cmps
xor
gs
and
(bad)
cld
outs
jle
add
jo
pop
add
lahf
imul
cli
and
repnz
mov
ds
jo
dec
xor
int3
fwait
and
into
mov
mov
icebp
or
test
movs
jecxz
jg
adc
add
pop
leave
pop
xlat
fld
ins
jns
sub
aam
dec
aas
pusha
xlat
(bad)
(bad)
pop
loop
inc
outs
adc
mov
outs
adc
dec
daa
fidivr
(bad)
xchg
mov
nop
into
outs
jb
sti
jecxz
or
leave
xor
js
pop
xchg
adc
(bad)
test
sub
sub
sub
sbb
repz
ja
movs
pop
inc
xchg
pop
cmp
xchg
int3
test
add
es
outs
adc
fucomi
xor
push
push
std
aaa
out
and
xchg
imul
movs
pop
pushf
enter
out
xlat
call
dec
add
jp
add
jg
and
add
mov
lds
inc
movs
jno
xlat
inc
mov
stos
pushf
fnstenv
setns
call
or
sub
dec
adc
mov
sbb
leave
mov
call
push
jne
ja
sbb
div
into
or
push
sti
fisttp
pop
cmc
popf
out
mov
lods
in
enter
sub
imul
mov
stos
push
jo
sahf
jmp
and
inc
rcl
cmp
jp
jp
repnz
xlat
sbb
mov
xor
jg
test
rcl
inc
dec
out
inc
push
pop
cld
outs
inc
loop
push
push
mov
sbb
and
adc
scas
leave
dec
into
adc
fabs
pop
test
adc
je
ss
lahf
imul
fnstsw
sbb
les
sub
in
mov
mov
xor
dec
fs
outs
cmc
jl
mov
js
or
scas
hlt
sub
icebp
shl
adc
mov
pop
lods
dec
jecxz
xchg
out
or
cmp
test
mov
inc
rcl
jbe
or
pop
in
cmp
pop
inc
mov
pop
jmp
or
pop
div
dec
mov
test
jge
stc
std
bound
call
fcmovnu
add
mov
test
cs
dec
fild
call
add
add
push
popa
cmc
cmps
ins
inc
icebp
or
leave
clc
(bad)
lock
push
xor
sub
sub
pusha
jecxz
bound
call
es
push
arpl
push
pop
test
lea
scas
inc
mov
mov
stos
scas
jbe
mov
pop
icebp
adc
xchg
rcr
adc
push
mov
shl
mov
pop
inc
push
out
sbb
cld
adc
lds
arpl
in
mov
mov
pop
add
jb
push
out
jne
xchg
aas
or
mov
fiadd
dec
jne
fstp
test
or
dec
es
jae
addr16
push
sbb
or
aas
retf
std
inc
ficom
push
pop
xchg
mov
int
stc
mov
dec
dec
cmp
into
call
fs
ror
movs
dec
aad
adc
xchg
mov
out
cs
cmc
xor
cmp
cld
xchg
lock
adc
out
inc
xchg
leave
adc
push
lea
bound
int
lock
push
cs
push
das
xchg
sbb
jbe
cmp
mov
imul
shr
mov
shl
mov
loop
out
jns
xchg
sbb
xor
int3
add
mov
dec
arpl
ins
push
std
(bad)
aaa
jecxz
push
jno
popf
arpl
sub
ret
stc
in
je
aad
shl
mov
xchg
mov
jmp
repz
pushf
mov
int3
into
pop
xchg
sbb
imul
mov
bound
cmp
mov
rcl
jo
ins
dec
jmp
ror
xchg
loope
test
pop
xor
ds
cmp
loop
fwait
mov
pop
xor
idiv
mov
fwait
movs
lock
inc
shl
shl
add
mov
xor
xchg
inc
in
(bad)
daa
sbb
jge
sbb
push
mov
je
pusha
mov
xor
or
dec
rcr
scas
lds
out
das
loopne
(bad)
mov
mov
jle
pop
push
inc
fs
mov
sbb
jmp
sub
retf
push
and
inc
scas
and
leave
jecxz
out
cli
adc
popf
pushf
int3
rcl
les
mov
add
lock
cmps
dec
bswap
and
adc
adc
add
(bad)
fs
imul
lea
sbb
sub
push
dec
sbb
push
aam
mov
es
dec
fild
sbb
out
fadd
out
xchg
mov
inc
xor
jo
pop
lods
jo
(bad)
out
int3
xor
shl
mov
push
fyl2x
cmp
or
dec
inc
or
loop
jmp
lock
jmp
mov
(bad)
xchg
ficom
loop
dec
mov
add
or
jecxz
aam
and
movs
cmps
mov
push
jle
or
mov
and
xchg
cmp
add
sbb
pop
call
inc
xchg
in
(bad)
mov
ins
je
mov
mov
push
fs
mov
sahf
push
(bad)
adc
sbb
in
xor
in
bound
std
outs
jnp
push
mov
dec
push
test
push
jbe
push
and
(bad)
push
pop
cmp
jp
xchg
data16
lods
pop
call
mov
push
add
jg
xor
aas
jo
jbe
sub
jle
into
add
in
dec
clc
mov
sub
mov
mov
cmp
inc
in
adc
lahf
push
push
mov
dec
daa
scas
pop
push
xor
jne
cmps
loopne
pop
push
pop
shr
inc
add
sbb
mov
jl
aad
das
repnz
outs
enter
ins
add
sbb
jge
ds
and
add
or
arpl
mul
(bad)
jl
and
out
jmp
ret
call
test
inc
int3
xchg
imul
sbb
or
cwde
mov
in
sub
dec
fidiv
das
xchg
test
movs
pop
sar
pop
pop
push
push
retf
xchg
cmp
je
outs
nop
xlat
mov
sahf
cld
repz
into
arpl
xchg
imul
push
rcl
test
sub
in
sbb
imul
add
mov
ins
mov
aaa
sti
retf
scas
into
jns
cs
cmp
xor
lds
je
lds
mov
mov
dec
push
add
mov
push
inc
xchg
out
xchg
and
push
and
les
dec
fwait
inc
inc
fnstsw
test
jo
mov
nop
sub
mov
add
inc
test
in
hlt
xchg
or
pop
addr16
cdq
add
pop
xchg
jl
mov
in
add
pop
inc
fisub
jg
and
ins
or
sbb
mov
outs
sahf
ins
ficomp
popf
mov
push
fcomi
adc
cmc
ret
outs
inc
repnz
pop
cld
and
push
pusha
pop
ret
out
jns
out
push
sbb
inc
jl
fs
jb
leave
add
sahf
xchg
adc
xchg
adc
add
lea
test
mov
xchg
jecxz
xchg
ins
pop
popa
adc
stc
call
out
(bad)
mov
xchg
sub
fist
xor
in
sti
stos
ss
push
mul
aas
sahf
scas
and
mov
mov
aas
xor
fld
xor
inc
jle
shl
ins
mov
js
xchg
(bad)
test
repnz
sbb
ret
sbb
pusha
dec
xor
dec
ret
push
call
sub
xor
(bad)
not
mov
cmc
ja
mov
cmps
push
imul
nop
add
popa
test
loope
mov
xor
fbstp
sbb
mov
or
cmp
xchg
pop
inc
pop
leave
(bad)
xor
lea
int3
xor
std
and
fstp
(bad)
leave
sub
arpl
pop
sub
xchg
lds
pshufw
repnz
adc
idiv
xchg
jae
aad
xchg
dec
in
cmp
cmps
into
mov
sub
aad
popa
xor
leave
mov
dec
repnz
icebp
ins
mov
arpl
sub
dec
ret
out
push
jg
xchg
mov
sub
in
arpl
outs
cmp
test
inc
jb
push
mov
nop
(bad)
stos
add
cli
mov
mov
inc
pusha
sub
aam
mov
dec
or
push
(bad)
in
dec
in
test
mov
cmp
sbb
adc
mov
push
std
pop
(bad)
rep
sub
mov
add
sub
in
push
inc
ins
(bad)
or
aaa
cmp
out
arpl
iret
cdq
pusha
xor
fwait
iret
pop
gs
aad
sbb
cld
jg
jns
int3
and
or
push
jns
mov
or
adc
ret
enter
outs
(bad)
jmp
aas
sbb
jmp
cmps
outs
sahf
push
and
sub
(bad)
mov
stos
adc
and
sub
sub
sti
outs
out
cmp
push
(bad)
std
cli
imul
outs
or
inc
arpl
xor
jle
shr
and
retf
cli
test
push
iret
mov
adc
or
pop
sbb
rcl
fiadd
adc
sbb
jne
cs
fwait
retf
mov
out
and
dec
dec
mov
stos
jecxz
xor
xchg
mov
sahf
ins
jns
mov
sbb
popa
or
add
ds
mov
nop
bound
cs
out
repnz
pusha
or
xor
movs
xor
ins
cmp
out
pop
and
mov
add
inc
sbb
movs
lds
stos
(bad)
jnp
ret
test
pushf
cmp
add
inc
pop
sbb
shl
cmps
addr16
lods
pop
inc
(bad)
mov
dec
pop
jo
test
fsub
cld
out
les
add
mov
cmp
dec
es
pop
fs
jl
fiadd
inc
ja
lds
in
pop
fwait
sub
adc
xor
mov
aam
jg
aad
daa
aaa
jnp
shl
push
and
cmp
pop
dec
test
(bad)
test
cmp
and
pop
pop
outs
mov
push
in
arpl
or
lods
and
call
mov
lahf
aam
adc
outs
pop
mov
jecxz
pop
int
out
xchg
mov
sub
popf
mov
pop
std
fs
push
adc
lock
xchg
mov
pop
xchg
jmp
fadd
xor
scas
neg
adc
mov
jecxz
enter
jg
push
(bad)
(bad)
pop
inc
das
dec
pmulhw
out
inc
xchg
mov
and
cmps
mov
mov
jo
mov
cs
imul
stos
sbb
dec
jmp
pop
in
jbe
pop
xchg
cmps
push
not
dec
fstp
into
xchg
out
arpl
push
jnp
and
mov
mov
pop
xor
pop
(bad)
adc
and
dec
sub
pop
xchg
in
out
gs
jmp
hlt
sub
or
(bad)
sub
test
adc
add
xchg
cld
pop
cmp
xor
xchg
fbld
sbb
outs
adc
lahf
idiv
and
mov
cmp
adc
das
jl
mov
jmp
push
jbe
mov
nop
fwait
movs
mov
cmp
xor
lahf
dec
bsr
inc
mov
sti
stos
xchg
pop
adc
mov
cs
loope
imul
fbld
retf
test
or
sub
out
mov
rcr
xchg
outs
push
push
jo
sbb
and
repnz
adc
jne
ja
push
mov
outs
mov
test
adc
(bad)
push
jge
test
aam
cmc
stc
sahf
jns
dec
push
and
cmp
sbb
mov
jbe
pop
repnz
inc
(bad)
xchg
ret
cld
push
jne
jns
xor
sbb
mov
(bad)
mov
mov
push
test
pop
jo
aaa
imul
xor
mov
jmp
xchg
imul
jge
dec
xchg
mov
cmp
call
dec
add
adc
aad
mov
sub
push
and
push
int3
(bad)
ror
xchg
ss
stos
sub
aam
retf
movs
or
cmps
push
(bad)
push
shr
or
xor
xlat
loop
cmp
push
xlat
jmp
(bad)
stc
or
mov
mov
out
outs
pop
push
mov
cmc
inc
dec
and
xchg
xchg
js
cmc
outs
loope
lahf
ror
cld
jae
ins
adc
xor
idiv
iret
(bad)
or
fimul
repz
sub
test
push
inc
xchg
fisubr
daa
push
outs
int3
cmp
cmc
sqrtps
mov
out
xor
cwde
lsl
shl
xor
push
das
out
add
dec
jae
test
test
xchg
push
pop
addr16
stos
ins
repz
ss
test
jbe
and
inc
sbb
pop
popf
jns
ret
lock
push
adc
or
push
scas
mov
addr16
cld
jmp
jbe
push
sbb
fwait
sbb
iret
div
jecxz
addr16
mov
jg
stc
push
dec
adc
push
dec
pusha
push
inc
gs
sar
dec
aaa
ins
xor
mov
std
sbb
lahf
ins
cmp
mov
mov
mov
out
dec
adc
jecxz
dec
jg
mov
mov
xor
test
add
std
ret
cmp
test
movs
jo
clc
inc
and
ret
sbb
bswap
psubusw
scas
stos
inc
or
fnstsw
leave
xchg
dec
repnz
nop
ja
outs
test
inc
call
sti
inc
stos
adc
mov
jmp
dec
cs
(bad)
in
add
and
mov
or
lods
arpl
retf
cld
sbb
nop
cmps
out
pop
pop
mov
outs
daa
jp
sar
outs
mov
movs
push
ror
aam
sbb
pop
inc
push
dec
mov
retf
mov
jmp
scas
push
fdiv
pop
dec
mov
shr
jmp
fidiv
out
outs
sahf
mov
cmc
push
xchg
cmp
inc
movs
fwait
xor
sub
pop
pusha
stc
jmp
xor
and
cvtps2pd
int
and
outs
adc
nop
pop
popa
loop
icebp
in
sbb
sbb
popa
mov
inc
and
xor
xlat
add
sub
jg
test
loop
fistp
dec
lock
sbb
sahf
int
out
pop
sbb
sbb
in
jae
mov
push
dec
pop
push
mov
ret
push
adc
push
inc
sbb
mov
cwde
push
popa
sbb
inc
ds
es
rol
pop
shl
stos
dec
pushf
enter
stc
push
sbb
cmp
sub
push
xor
inc
outs
(bad)
cwde
pop
sti
lock
inc
lods
retf
inc
adc
cmps
or
xor
es
imul
scas
je
arpl
sub
sbb
imul
ss
pop
cmp
je
inc
adc
ret
mov
les
mov
mov
stos
outs
(bad)
pop
jge
mov
imul
mov
xchg
cmps
push
adc
call
add
jmp
push
adc
js
jae
ja
aaa
pop
cmps
and
ret
lds
gs
aaa
inc
inc
dec
mov
adc
push
fs
rcl
xchg
lods
dec
push
jmp
xor
aas
imul
adc
mov
inc
test
pop
add
frstor
retf
aad
cmp
add
pop
mov
pop
out
add
mov
push
push
cmp
in
xchg
jg
(bad)
fwait
pusha
sub
lods
sti
add
es
mov
fldenv
js
or
arpl
sub
pop
add
adc
js
pop
lods
push
sbb
mul
fwait
mov
shr
inc
jle
push
jo
sahf
(bad)
loopne
sub
sbb
pop
jne
sbb
add
enter
jb
pop
push
and
rcr
pop
add
or
shr
stos
cdq
push
(bad)
or
fist
xchg
push
lea
mov
shl
cdq
je
pop
sub
cmp
stos
pop
inc
sub
loop
sub
mov
push
or
jnp
add
adc
bound
sub
or
loopne
lock
or
fist
ins
pop
test
cmp
aam
in
jle
or
fwait
dec
pushf
mov
mov
outs
test
inc
mov
loop
inc
and
mov
test
dec
dec
and
mov
push
inc
cmc
cli
xchg
xor
mov
lods
shr
ja
xor
scas
cmp
cli
lods
fadd
sar
inc
popa
xchg
push
push
imul
loope
(bad)
and
inc
add
rcl
and
sbb
ja
popa
jmp
dec
imul
clc
iret
sbb
xchg
and
mov
in
pop
outs
or
mov
mov
retf
jle
ss
push
clc
pop
xor
xchg
pop
jnp
mov
dec
movs
push
jne
xchg
cdq
mov
and
shl
arpl
inc
mov
fnstsw
js
sbb
xchg
and
add
xchg
iret
fcom
call
test
pusha
lods
dec
cmp
repnz
shl
and
xor
dec
push
pop
out
mov
movs
mov
test
adc
push
sbb
fdiv
call
in
sbb
lods
ret
sbb
pusha
pop
(bad)
clc
xor
mov
test
outs
jae
pop
cwde
jecxz
pop
mov
gs
cmc
fist
clc
in
xchg
(bad)
or
cmp
cld
xor
fimul
sbb
sti
daa
xchg
(bad)
xchg
test
sbb
sbb
movs
push
inc
dec
mov
push
cmps
sti
fldenv
jo
push
mov
out
cmp
fnstenv
push
pop
repz
shl
loop
adc
je
jmp
inc
js
xchg
add
mov
mov
mov
lock
mov
fldcw
jge
inc
outs
jbe
push
sbb
jle
cmp
mov
cmps
sahf
js
mov
pop
add
lahf
ins
in
add
adc
test
jno
lods
lds
push
and
pop
in
fcmove
ret
inc
arpl
cli
mov
inc
push
cmp
cmp
pop
test
aas
mov
pop
mov
jmp
into
cmc
mov
jecxz
mov
mov
jmp
mov
cmc
mov
ins
pop
mov
adc
mov
push
cli
iret
xor
pop
popf
mov
mov
sub
mov
jmp
icebp
and
aaa
xchg
ins
cwde
les
xor
test
sti
(bad)
and
or
fiadd
(bad)
push
popf
jmp
xor
sbb
pushf
xor
xchg
stos
or
cs
inc
mov
call
ds
lds
test
or
push
ja
int
jp
and
mov
xor
shr
sbb
loope
pusha
bound
mov
adc
fsubr
hlt
ret
(bad)
icebp
mov
das
rcr
clc
popa
sub
pop
fild
clc
cmova
gs
push
dec
fwait
imul
cmp
retf
jnp
add
(bad)
fadd
mov
pop
les
js
inc
mov
jns
rcl
mov
adc
jb
mov
das
std
rol
pop
data16
shl
xchg
cmps
addr16
pop
mov
pushf
xchg
nop
or
and
stos
inc
and
(bad)
addr16
jp
std
ror
mov
add
test
sub
cmps
sub
mov
ja
cld
mov
out
test
adc
shl
in
das
adc
push
out
mov
add
mov
cmps
dec
js
imul
hlt
mov
adc
popf
adc
sub
fld
inc
cmp
js
mov
bswap
cdq
(bad)
iret
lds
xchg
js
movs
movs
mov
fs
fiadd
mov
(bad)
inc
imul
inc
mov
dec
xchg
popf
push
cmps
mov
and
mov
jo
je
or
daa
xchg
jecxz
cwde
push
dec
mov
ja
cli
in
inc
les
mov
ins
cmp
pushf
lods
retf
dec
add
pop
mov
out
sar
(bad)
cli
sub
sbb
in
push
(bad)
fisttp
repnz
int3
mov
popf
xchg
cmc
xor
in
div
rol
and
mov
sahf
inc
adc
or
movs
jge
xchg
adc
out
xor
addr16
push
cs
ficomp
in
add
mov
in
iret
mov
(bad)
mul
cwde
pusha
add
inc
imul
lahf
imul
fidivr
scas
or
call
mov
cwde
outs
iret
jnp
pop
push
mov
lods
sahf
xchg
jmp
mov
adc
inc
inc
out
dec
push
push
out
push
sub
xchg
icebp
mov
stc
mov
mov
(bad)
or
jl
push
pop
addr16
mov
out
sub
and
pop
jle
icebp
jle
ffreep
pop
inc
mov
repnz
in
cmp
cdq
test
mov
add
jecxz
das
lods
sbb
jb
adc
pop
push
dec
dec
ds
in
pusha
or
ficom
shr
jno
mov
ds
pop
lahf
fsub
push
sub
push
jne
xchg
pop
pop
into
xchg
test
lods
dec
fnsave
(bad)
mov
cwde
cmp
sbb
adc
adc
sti
cli
ja
ror
mov
and
and
dec
push
ins
and
jno
dec
(bad)
jbe
fldcw
inc
adc
jge
fst
fistp
retf
stos
ja
push
sub
dec
push
repz
jmp
call
movs
xor
fs
jmp
in
add
dec
xor
(bad)
loopne
cmp
add
int3
pop
xlat
sar
mov
imul
repz
cmp
cli
mov
mov
stos
or
push
jns
or
in
cmc
arpl
(bad)
pop
ds
les
and
add
xlat
retf
add
push
xor
int3
(bad)
rcl
pop
shr
dec
cmc
addr16
cmp
jg
out
ror
retf
pop
xor
fwait
sbb
cmps
cmps
mov
push
xchg
movs
icebp
push
arpl
sub
rol
lods
call
rol
(bad)
retf
push
mov
jo
imul
jb
jo
adc
xor
(bad)
add
jae
jno
(bad)
repz
lds
in
les
retf
ret
test
mov
mov
setne
ja
pop
cmp
stos
sahf
inc
jo
sub
loope
fistp
xchg
mov
mov
fld
stos
movs
push
jns
(bad)
jno
shl
pusha
adc
in
out
push
xor
mov
or
or
sbb
movs
adc
and
xor
adc
outs
pop
or
in
jbe
and
stc
mov
mov
add
xchg
jne
iret
xchg
lods
daa
adc
sar
mov
inc
movs
test
in
jns
inc
jmp
and
xchg
jl
out
sahf
call
pop
jg
mov
in
clc
addr16
mov
mov
xchg
dec
out
push
xor
or
jle
out
pop
pop
cmp
xchg
jg
in
push
inc
mov
push
cmp
cmp
push
leave
sbb
jmp
pop
push
sbb
mov
cmp
jo
xchg
hlt
out
add
inc
inc
cld
jnp
xor
mov
xchg
sub
sub
mov
inc
xor
or
test
mov
push
push
callw
ins
adc
(bad)
add
sub
jg
pop
push
je
dec
ret
fmulp
(bad)
xchg
adc
push
jno
mov
mov
jno
jmp
rol
mov
mov
aam
xchg
jb
mov
ficomp
arpl
nop
lds
adc
jnp
adc
sub
test
in
push
aam
sub
or
push
sbb
ins
fcomp
and
neg
icebp
push
int
inc
arpl
jmp
push
das
sbb
in
(bad)
sbb
sub
push
sbb
movs
mov
sbb
push
pop
pop
jns
and
aas
pop
jg
or
retf
mov
pop
imul
pop
xchg
dec
cmpps
ins
mov
ins
inc
lahf
mov
xor
repnz
clc
sti
jle
push
imul
(bad)
mov
cmp
repnz
dec
pushf
int3
dec
mov
xor
sar
mov
mov
dec
add
mov
(bad)
jnp
add
clts
int3
sub
les
xchg
in
adc
mov
nop
pop
outs
mov
and
push
sub
lahf
dec
repnz
daa
sti
fst
nop
sub
dec
jp
pop
popa
mov
cmp
(bad)
sub
int3
jb
(bad)
lock
sbb
sbb
adc
push
lods
push
xchg
add
add
inc
fcomp
movs
fwait
call
ror
cmp
push
fcom
add
sbb
jno
mov
ror
jl
push
dec
adc
scas
mov
xchg
std
add
cmp
(bad)
fbld
fld
sti
ffreep
pop
mov
inc
sbb
mov
xchg
pop
mov
adc
das
jp
mov
rcr
sbb
jmp
push
xchg
add
pop
sbb
sbb
cli
jmp
sub
imul
mov
mov
mov
pop
dec
fisub
shl
xchg
stos
sar
cli
pop
stos
mov
cmp
mov
(bad)
xor
ss
idiv
jmp
in
mov
xor
push
jnp
xchg
test
push
push
sbb
add
jge
sbb
fadd
inc
cmc
cmp
loopne
push
movs
(bad)
scas
cmp
mov
mov
sbb
and
(bad)
fstp
jnp
pushf
mov
mov
cmp
aas
aas
jae
and
pop
push
sub
pop
or
sahf
out
lods
inc
dec
mov
jne
pusha
jns
cwde
jecxz
xchg
mul
leave
(bad)
push
lock
jecxz
lods
cmps
add
ss
dec
movs
jl
sbb
cwde
jnp
adc
or
pop
mov
rcr
(bad)
push
mov
fld
push
xchg
jne
cmp
mov
xchg
nop
ficomp
ss
ins
(bad)
mov
or
inc
mov
sbb
pop
xchg
jae
sbb
sahf
add
push
ss
adc
xchg
jp
out
jmp
iret
and
push
xor
jo
push
rcr
xchg
stos
icebp
lahf
dec
rol
or
enter
outs
mov
xchg
sbb
dec
xlat
push
pop
cwde
mov
or
mov
cwd
xor
fdiv
dec
ret
add
jp
test
jg
pop
lahf
mov
test
jnp
into
dec
inc
popf
xor
cld
sub
push
cs
(bad)
push
std
jnp
jnp
xor
mov
jae
pop
cdq
data16
xor
push
or
pop
and
or
scas
fs
div
aas
shr
push
(bad)
adc
ins
sub
neg
fisttp
aaa
adc
sbb
sub
clc
icebp
out
mov
push
xchg
push
imul
ret
jmp
push
mov
stc
mov
pop
cmp
retf
cmp
mov
xor
mov
pop
rol
cmps
inc
add
daa
adc
call
pusha
iret
sub
pop
imul
mov
sbb
jl
sbb
jl
ins
pusha
xchg
pop
cmps
push
mov
outs
popf
xchg
xor
icebp
and
les
fisttp
mov
sub
stos
jmp
mov
mov
cli
mov
aaa
jmp
xlat
pop
stos
sti
sbb
pop
leave
sbb
ja
add
gs
lahf
mov
mov
shr
xor
fcomp
push
(bad)
popa
jb
mov
cmps
jecxz
mov
or
pop
lds
and
ins
adc
std
jbe
dec
dec
clc
sub
mov
or
pop
lock
xchg
loop
xchg
adc
test
das
shr
mov
mov
jne
aad
out
mov
mov
mov
push
pop
loope
xor
ins
push
movs
xor
push
aad
inc
jle
xchg
sbb
outs
jp
jge
cmp
cmp
jne
jnp
ror
mov
enter
inc
push
call
popf
lods
frstor
sahf
sbb
(bad)
lock
cmp
xor
pop
add
shl
cmp
mov
fdiv
rol
(bad)
cmp
xor
adc
push
cmp
xchg
in
dec
movs
pop
leave
loope
aam
mov
dec
loope
gs
outs
mov
scas
int
sbb
imul
xchg
js
nop
mov
or
ss
leave
add
pop
lods
inc
cdq
mov
inc
cwde
cld
sbb
add
jge
pushf
je
fmul
stos
cmp
mov
cwde
cdq
add
xchg
xchg
pop
sub
cvtps2pd
xchg
fld
test
aam
push
pop
push
dec
call
scas
sbb
xchg
mov
cdq
movs
aad
xor
in
mov
xchg
pusha
xchg
jmp
or
rol
sub
push
cmp
mov
lods
jo
dec
hlt
loopne
add
test
cmp
xchg
push
jge
or
loope
xchg
rcl
mov
mov
aas
lods
dec
rcl
push
call
js
sti
(bad)
push
(bad)
push
xchg
nop
xchg
cmps
jecxz
and
pop
call
cmps
fcom
ins
pop
out
cmp
mov
repnz
add
xor
mov
sbb
and
into
dec
xor
inc
je
mov
mul
sbb
stc
retf
mov
inc
xor
and
xchg
mov
xchg
fsub
iret
retf
mov
cmps
and
inc
push
xlat
push
push
cwde
ja
push
sub
out
push
pop
push
fistp
in
aam
sti
xor
popa
sbb
dec
hlt
lock
ins
repnz
in
dec
outs
adc
jne
xchg
cmp
jae
imul
jb
loope
jns
into
sbb
mov
popa
mov
and
movs
dec
gs
in
pusha
add
or
push
and
cmp
xchg
js
inc
push
cmp
mov
xchg
sahf
pop
jmp
xor
jl
mov
gs
test
gs
fcomp
dec
xor
(bad)
ror
pop
loopne
xchg
mov
aad
jge
jp
test
pop
mov
pusha
or
inc
inc
shr
fisub
popa
mov
xchg
shr
imul
and
push
sbb
sbb
ror
stos
sti
retf
call
mov
add
iret
test
es
ror
shr
ds
inc
jmp
adc
sbb
xchg
mov
(bad)
adc
imul
cmovbe
add
mov
popf
int3
push
push
les
retf
mov
shl
retf
test
cmp
pusha
stos
jns
test
sahf
ror
std
push
sub
xchg
xor
mov
sbb
sbb
pushf
rcr
(bad)
out
aam
daa
mov
in
out
cli
mov
shl
push
pop
shl
mov
aam
call
inc
in
mov
sbb
or
movs
inc
(bad)
mov
lock
cld
mov
and
mov
sbb
sbb
and
xor
ja
push
add
jmp
in
push
scas
sbb
xchg
dec
(bad)
push
retf
in
int3
jbe
idiv
push
add
stc
mov
adc
cmp
scas
hlt
lods
inc
shr
mov
cmp
pop
hlt
xchg
mov
pop
stos
and
inc
stos
fcomi
div
movzx
addr16
dec
jno
stos
imul
leave
inc
mov
movs
push
and
dec
addr16
outs
popa
adc
fsubr
jmp
pop
cmp
out
test
pushf
int3
xor
jle
xchg
inc
mov
aas
ss
sbb
and
jo
mov
xchg
mov
call
sub
mov
add
scas
sub
jp
inc
ins
xchg
xor
cmp
mov
jns
addr16
xchg
mov
inc
in
stos
push
xchg
mov
xor
xor
mov
mov
div
test
jne
shr
cld
(bad)
cmp
xchg
pop
jp
mov
xor
pop
int
sub
sar
mov
sbb
mov
movs
jmp
cmc
xor
dec
and
jno
inc
call
sbb
out
push
push
pop
xchg
test
jae
pop
sub
cmp
push
mov
adc
loope
xor
(bad)
jecxz
pop
retf
jnp
bound
sub
gs
jno
adc
cmc
std
ret
js
cmp
idiv
mov
fcmovne
(bad)
cli
aaa
dec
mov
add
push
iret
repnz
lds
cmp
(bad)
retf
enter
fwait
inc
in
imul
mov
sub
cld
sbb
mov
fdivr
pop
clc
ss
mov
mov
(bad)
stc
fisub
jnp
sbb
aad
pop
mov
mov
mov
or
jne
add
cmp
or
(bad)
xor
mov
sbb
std
(bad)
push
pop
adc
jg
enter
mov
push
ja
leave
aad
fdivr
mov
inc
mov
out
cmp
jg
inc
bswap
inc
ins
inc
or
loopne
adc
fadd
icebp
and
sbb
test
cld
xor
mov
dec
or
mov
mov
leave
xor
add
js
dec
dec
in
movs
jb
pop
das
dec
ins
scas
pop
xchg
aaa
ficomp
inc
mov
jnp
sub
mov
arpl
shr
test
das
or
and
inc
push
adc
jnp
loope
aad
xlat
pop
inc
int
and
aas
cmp
repz
mov
lods
add
pushf
std
nop
repnz
mov
mov
fisub
pop
out
push
xchg
ins
sub
daa
pop
test
add
repz
fwait
sub
scas
xchg
cmp
push
mov
fsubr
cmp
ret
cmp
push
cmc
xchg
test
mov
lods
std
jl
std
clc
xchg
aad
inc
jae
icebp
scas
lea
push
xchg
es
jle
gs
ins
stos
push
fisubr
push
mov
jo
inc
jne
cmc
jecxz
and
and
retf
mov
jle
cmp
and
fsubr
pop
sub
and
ins
(bad)
sbb
ret
(bad)
bswap
mov
retf
jo
add
fbld
xor
and
es
in
int
and
xor
mov
gs
jae
enter
cmp
push
or
add
push
fld
retf
cld
js
add
lea
push
mov
pop
cmps
test
cli
mov
icebp
sti
sub
pushf
aas
sbb
fcmovne
adc
daa
out
sub
pop
jecxz
in
pop
popf
repz
adc
rcl
js
outs
jmp
neg
ins
mov
sub
adc
dec
push
pop
bound
sub
dec
add
mov
xchg
in
push
cmp
push
nop
aad
call
movs
push
or
pop
xchg
outs
(bad)
xor
mov
sub
(bad)
fstp
aas
jb
lods
test
sub
push
xchg
ss
inc
adc
mov
xchg
mov
aaa
cs
xchg
in
jnp
cmp
xchg
push
call
jmp
mov
(bad)
fild
mov
(bad)
cmps
aas
cs
es
inc
jmp
push
xor
jle
mov
aad
lea
mov
mov
(bad)
outs
cmps
test
cmc
sub
pop
ds
push
inc
pop
inc
cdq
data16
jmp
lods
popf
cdq
popw
rcr
clc
in
aaa
fbstp
es
out
fsubp
jnp
xchg
jb
or
call
xor
aas
xor
pop
lods
(bad)
and
sbb
ja
leave
out
popf
add
mov
int
sub
inc
push
push
(bad)
call
stos
mov
mov
scas
cmp
scas
xor
dec
mov
js
std
leave
loopne
mov
jnp
inc
nop
mov
fnsave
inc
movs
or
ins
mov
call
lahf
sub
push
fwait
shl
push
xchg
jg
push
mov
jnp
lods
(bad)
into
stos
imul
fistp
mov
push
lahf
lods
iret
dec
repz
pop
mov
das
sysret
cdq
imul
lds
into
cmps
bound
push
or
imul
add
jmp
out
loopne
ds
adc
ins
pop
mov
sub
add
ja
aad
lods
jmp
cli
fs
cmp
addr16
cmps
mov
pop
addr16
xchg
cmp
pop
(bad)
js
pop
add
loopne
add
mov
stos
xor
hlt
fsubr
repnz
std
js
adc
xchg
mov
sar
push
and
js
push
xchg
cmp
sub
movs
jg
jmp
movs
scas
push
sub
out
push
movs
loopne
dec
and
leave
mov
out
adc
xchg
ds
in
push
xor
mov
add
fmul
ins
shl
or
mov
mov
inc
jp
movs
mov
add
hlt
cmp
hlt
fadd
jecxz
imul
xchg
leave
arpl
and
movs
not
imul
in
dec
sti
std
mov
xlat
and
ss
mov
imul
sub
stc
hlt
xlat
mov
jmp
ds
jp
mov
inc
cdq
ss
pop
fs
pop
mov
xchg
not
inc
js
gs
ja
sbb
inc
in
xor
xchg
cwde
std
xor
dec
add
mov
xor
jle
in
mov
dec
retf
mov
pop
jae
(bad)
dec
push
xchg
dec
cs
jge
fnstenv
jl
pop
test
(bad)
loopne
mov
adc
or
xor
scas
addr16
gs
idiv
pop
push
xchg
jecxz
or
inc
popf
loopne
pop
test
jae
sub
push
mov
mov
xor
jmp
dec
mov
cli
jg
movaps
add
sbb
lods
xor
mov
fistp
add
repz
je
jg
jmp
sub
or
loopne
add
sti
shr
aas
pop
push
cdq
bswap
adc
add
in
xchg
adc
mov
ss
inc
rcr
push
lods
in
fmulp
mov
jge
jnp
add
dec
mov
xor
inc
sub
mov
jne
dec
int
add
fsubp
jg
lods
cmc
xchg
jns
pop
jl
push
mov
cmps
aaa
pop
loope
mov
outs
or
scas
std
rsm
test
adc
jae
xchg
add
push
dec
repnz
xchg
stc
rcl
pop
mov
mov
(bad)
iret
xor
(bad)
int
div
xchg
cmp
push
sub
iret
mov
sub
mov
xor
retw
cli
push
adc
pop
call
cmp
lods
lock
ja
leave
aaa
imul
fidiv
dec
mov
add
sar
jle
adc
xor
cmc
mov
dec
hlt
lahf
push
retf
test
or
ja
mov
ds
xchg
in
int
daa
xor
sbb
pop
cmp
push
stos
hlt
xchg
mov
dec
mov
add
pop
iret
add
or
pop
das
inc
inc
cmp
aad
out
movs
hlt
repnz
cmps
jno
ret
sub
mov
mov
mov
lahf
dec
and
sbb
sbb
sub
xchg
out
test
mov
imul
sti
pop
enter
arpl
jns
ja
inc
jmp
sbb
daa
jecxz
jmp
fucom
dec
mov
das
outs
fild
mov
cld
loopne
push
(bad)
push
jno
sbb
std
or
mov
jmp
lds
(bad)
pop
inc
leave
push
pop
jae
inc
dec
in
xchg
sbb
(bad)
or
lahf
js
dec
xor
ss
mov
adc
ins
sbb
jb
mov
test
xor
lds
inc
hlt
pop
addr16
loopne
mov
out
inc
stos
in
jge
xor
and
nop
jge
fidivr
ins
test
cmp
test
xchg
xchg
int
dec
fwait
xchg
push
out
inc
enter
adc
pop
add
inc
adc
imul
xor
lahf
(bad)
push
xlat
mov
cmp
inc
and
call
icebp
pop
nop
gs
xor
pop
ins
sub
mov
mov
aam
imul
arpl
fcom
mov
rol
xchg
out
sti
push
and
cs
mov
pop
mov
shr
sbb
lock
stos
ficomp
cmp
and
cdq
inc
sbb
mov
adc
pop
std
enter
mov
pop
lods
mov
das
out
ret
es
jnp
stc
lea
mov
push
sti
cmps
out
fcom
ret
rol
fwait
popa
into
jo
lods
add
aad
scas
lods
dec
jae
or
add
sti
push
sbb
(bad)
in
lods
or
in
stos
jb
sub
ret
in
lds
cli
fdiv
or
mov
addr16
jge
or
and
fldenv
push
jecxz
imul
add
dec
aas
into
mov
adc
adc
inc
cld
sbb
mov
inc
in
sbb
cdq
or
jecxz
jb
push
push
dec
icebp
xchg
call
pop
ins
xor
xchg
cmp
(bad)
sbb
adc
(bad)
jne
out
dec
jl
pop
aas
ja
aam
xchg
adc
pusha
push
inc
aas
mov
mov
inc
xchg
rcl
push
mov
mov
xor
loop
(bad)
test
adc
sbb
xor
xchg
cmps
aam
push
mov
lods
dec
mov
mov
xchg
jb
mov
push
jne
cmp
cmp
imul
outs
mov
lahf
mov
adc
mov
hlt
mov
test
pushf
adc
cs
cmp
push
inc
sub
retf
pop
jbe
jns
fsubr
sbb
ret
pushf
mov
loop
pusha
jae
(bad)
in
push
ins
pushf
mov
into
stos
retf
add
xor
pop
mov
inc
ficomp
jg
aaa
(bad)
cwde
push
and
gs
mov
and
pop
mov
test
int3
shl
jmp
mov
popf
xor
retf
cmps
retf
jae
add
mov
nop
ins
add
aam
outs
cmps
or
inc
dec
add
pop
in
mov
sbb
mov
je
fs
jg
and
add
inc
aad
pusha
sub
xor
xchg
aaa
pop
fdiv
ins
test
retf
lods
xchg
push
call
add
jno
popa
loopne
out
mov
aad
add
(bad)
push
or
mov
sub
pop
push
and
pop
retf
stc
or
and
xor
add
inc
inc
mov
shl
mov
adc
adc
and
inc
adc
or
sbb
cli
mov
xchg
cmp
retf
(bad)
cmp
fisub
hlt
inc
xor
push
jbe
mov
(bad)
mov
sub
inc
add
cli
retf
mov
lea
stc
movs
arpl
aaa
js
cmp
push
add
scas
and
mov
mov
xchg
adc
pop
iret
dec
or
mov
push
(bad)
push
jbe
in
dec
jmp
loopne
add
and
adc
daa
pop
rol
sbb
ins
outs
ret
movs
push
sub
mov
neg
mov
js
outs
lahf
jg
push
fld
or
je
pop
cvtps2dq
mov
cmps
cmp
push
out
sbb
loopne
mov
push
and
cmp
jl
xor
sub
cmps
dec
fnstenv
hlt
outs
aam
daa
adc
pop
mov
jmp
pop
rol
lahf
retf
lock
push
push
adc
sub
xlat
sub
stc
loope
ror
mov
mov
mov
pop
(bad)
into
fldcw
xchg
bound
pop
fsubr
ins
imul
jl
bound
mov
jg
adc
retf
jnp
adc
retf
mov
push
daa
fldenv
cmp
ret
mov
dec
cmp
ins
sbb
bound
xor
add
pop
sbb
cld
dec
ret
push
cli
lods
jecxz
pop
sub
mov
rol
xchg
lods
or
push
cli
and
dec
xchg
popf
ror
fwait
add
fsub
push
ds
add
call
mov
jg
(bad)
inc
cs
sbb
dec
(bad)
adc
xor
dec
xchg
inc
jnp
shl
sbb
sbb
pushf
out
mov
xlat
shl
fstp
dec
cmc
sbb
sbb
loope
mov
xor
push
pop
mov
xchg
jmp
mov
fucomip
dec
jnp
mov
mov
inc
mov
ins
inc
outs
push
inc
lds
pop
add
mov
push
inc
scas
adc
imul
jl
out
cmp
fst
xchg
and
push
push
aam
sti
add
inc
sbb
(bad)
xchg
sbb
dec
pop
pusha
push
shl
mov
jmp
adc
sbb
and
dec
sti
es
push
aas
scas
fdivp
mov
pusha
mov
nop
fbld
and
xchg
mov
xchg
push
dec
pop
mov
jle
inc
mov
push
sahf
dec
fldenv
jle
loope
sti
aad
jmp
jae
pusha
test
jns
adc
call
aam
not
icebp
movs
jmp
mov
or
sbb
dec
test
jae
mov
outs
cmp
push
mov
jbe
pop
sub
cmp
or
adc
fs
cmp
icebp
inc
(bad)
dec
mov
icebp
mov
xchg
jecxz
popa
loopne
push
mov
dec
add
ror
dec
stos
test
sub
fcomip
xchg
mov
jg
aam
add
int
mul
sbb
or
std
pop
leave
test
call
in
(bad)
int3
add
arpl
cdq
(bad)
pop
xor
lods
mov
inc
push
dec
retf
cmp
add
cmp
jbe
inc
int3
jo
inc
arpl
nop
xor
xlat
push
jbe
or
popf
jmp
mov
dec
add
jo
enter
fadd
cmps
xchg
call
jnp
test
mov
test
dec
dec
adc
retf
lods
mov
mov
popa
outs
loop
xchg
pusha
aad
cmp
and
mov
dec
ret
or
aam
imul
pop
mov
lods
pusha
pop
jge
and
cmps
mov
adc
ret
lock
push
std
adc
scas
(bad)
dec
or
jo
in
push
adc
mov
mov
sahf
or
(bad)
out
bound
jle
bound
push
popa
(bad)
jg
adc
fst
addr16
test
inc
mov
mov
clc
hlt
daa
cdq
mov
xchg
cmps
and
clc
xor
add
pushf
ins
out
out
ss
fsubrp
sbb
sti
retf
fcmovbe
xor
call
add
pop
test
ds
inc
sub
push
div
stos
ja
and
leave
ret
in
outs
pop
pop
sub
push
lahf
adc
pusha
imul
pop
call
cmp
mov
jge
adc
mov
mov
clc
push
jb
in
mov
lea
(bad)
sub
push
mov
in
inc
bound
sti
and
popf
mov
push
mov
mov
or
sub
and
call
mov
mov
scas
retf
mov
call
ins
xor
cdq
cmp
cmps
rol
or
sbb
cmp
nop
push
jns
cdq
adc
cmp
ins
inc
ins
repnz
xor
pop
xor
and
mov
sub
nop
push
xchg
add
jmp
nop
das
cli
fadd
ss
xor
dec
or
xor
dec
fcomp
lea
jne
outs
aaa
push
push
pop
cld
test
ror
movs
pusha
push
xchg
mov
inc
gs
adc
rcr
mov
out
test
fisubr
rcr
xor
inc
leave
and
xchg
inc
mov
je
push
aad
and
enter
xor
and
shr
ss
data16
xor
xchg
std
jp
pop
cwde
sub
into
cmovp
jb
scas
xchg
mov
sahf
movs
cmps
cmp
xchg
xor
outs
push
adc
or
cmp
pushf
mov
push
pop
mov
xor
sub
mov
mov
das
sbb
pop
add
iret
cmp
cmp
pop
xor
and
ds
jecxz
retf
ds
aas
dec
xor
inc
push
inc
dec
fprem
rol
pusha
cld
xchg
clc
push
and
dec
push
jne
in
call
push
les
fwait
push
mov
popf
int
jle
not
cmp
mov
add
adc
jg
push
mov
add
loop
sbb
xor
fs
push
jg
aam
jge
jne
mov
xchg
inc
mov
enter
xchg
fisubr
jae
call
mov
xchg
sub
mov
mov
sahf
mov
aad
dec
mov
dec
(bad)
pop
and
test
out
iret
loopne
push
dec
out
cmp
jno
sar
rcr
lock
and
test
push
lods
sbb
and
cmp
pop
mov
push
ret
jmp
fs
movs
popf
jp
sbb
cmp
cld
sbb
ss
imul
jnp
mov
inc
xchg
pop
ins
adc
mov
stos
mov
rol
sub
hlt
aam
sti
aad
stc
inc
movs
mov
repz
mov
inc
or
push
sub
retf
cdq
mov
je
fstp
pop
cmp
(bad)
xchg
and
cmc
lea
mov
adc
ret
repnz
or
ja
das
dec
jae
xor
test
aad
cmp
fisttp
aad
mov
sahf
mov
ficomp
test
dec
loopne
(bad)
jg
loope
push
jp
cmp
(bad)
or
xchg
clc
leave
mov
fst
xchg
pop
jmp
adc
add
into
mov
lds
dec
add
mov
mov
xor
push
jg
sbb
dec
sbb
iret
add
jb
cmp
jne
dec
(bad)
xchg
call
cmp
fsub
stos
jo
cmp
mov
ss
(bad)
mov
fnstcw
mov
outs
sbb
ins
pop
fst
fs
sub
addr16
mov
fldcw
and
(bad)
push
(bad)
adc
(bad)
mov
and
pusha
mov
cmp
(bad)
jge
pop
outs
xchg
add
mov
dec
add
aam
mov
nop
or
aad
or
data16
dec
jge
mov
ins
mov
lods
call
shl
shl
inc
dec
xchg
jg
adc
jmp
movs
mov
push
hlt
push
arpl
fld
imul
ins
adc
shr
jns
push
into
aam
gs
dec
(bad)
cmp
mov
loope
and
leave
popa
push
jbe
test
push
cdq
or
adc
dec
es
and
mov
dec
inc
es
lea
and
cmps
inc
dec
cbw
sub
cmp
inc
jmp
les
ja
and
sti
arpl
and
fucomip
mov
xchg
xchg
jecxz
mov
mov
or
cmc
mov
jle
addr16
push
getsec
xchg
inc
jg
popa
fbstp
pushf
aad
mov
mov
push
mov
clc
cmp
leave
mov
sbb
in
adc
pop
xor
and
adc
cli
leave
sbb
je
(bad)
repz
fild
mov
adc
push
mov
jl
lods
or
adc
jns
dec
sbb
dec
movs
jns
mov
xchg
ret
sub
pop
jl
adc
pop
pop
imul
xor
call
mov
pop
int3
imul
outs
pop
jne
aas
cmp
pusha
gs
pop
ficomp
inc
ret
add
fisubr
cmps
add
xchg
(bad)
cmp
dec
push
popf
ret
in
mov
jne
in
out
je
jle
mov
mov
sbb
sub
mov
and
xchg
das
(bad)
data16
call
js
lds
jae
(bad)
lock
pusha
mov
add
ror
imul
mov
bound
dec
data16
ror
cs
xchg
or
dec
out
xchg
dec
mov
aas
test
fcmovbe
xchg
or
lock
jp
xchg
sti
out
cmp
in
imul
out
mov
lock
out
fnsave
and
ror
xchg
xchg
jns
cwde
bound
retf
aaa
mov
dec
xor
xchg
ror
hlt
ins
and
mov
or
push
das
or
jle
mov
inc
in
mov
sub
ret
pop
sub
xlat
addr16
shl
push
xor
xor
cmp
mov
xor
test
xor
pop
jno
mov
sub
push
add
sub
push
sbb
add
jecxz
add
aad
pop
pop
mov
sub
mov
out
jbe
stc
rol
xchg
sub
stos
jbe
and
mov
ss
(bad)
adc
js
mov
xchg
popa
mov
mov
lods
pop
cdq
imul
leave
popf
pop
pop
movs
xchg
cmp
cmp
sbb
iret
or
sbb
jge
mov
and
jmp
int3
sub
mov
jmp
jp
je
and
inc
jmp
nop
push
sahf
pop
ja
rcr
mov
push
ins
ret
jne
out
sbb
jbe
mov
out
cmp
dec
outs
mov
jmp
ss
retf
mov
sahf
mov
mov
gs
adc
mov
sub
xor
mov
xchg
push
mov
pop
push
pop
out
jecxz
(bad)
pop
push
pop
pop
sbb
jnp
lods
dec
sbb
leave
ficom
mov
mov
sub
arpl
inc
xchg
xor
ins
mov
mov
iret
push
sub
or
adc
shr
inc
mov
pusha
or
ja
xchg
push
jmp
addr16
xor
and
out
hlt
mov
or
lea
lods
and
call
mov
in
push
jno
loopne
or
jle
pop
inc
cmps
mov
jns
cmc
cdq
dec
and
ret
cdq
dec
gs
fbstp
jp
add
inc
lds
mov
scas
es
add
out
xchg
jge
popa
loope
sbb
mov
add
jg
adc
imul
frstor
(bad)
and
or
sub
frstor
mov
lds
(bad)
iret
mov
fisubr
mov
push
xor
aad
call
nop
rcr
mov
dec
shr
fist
jmp
cmc
sbb
sbb
xor
fmul
mov
cmps
xchg
das
jno
cmp
mul
or
pop
js
test
call
sbb
in
cli
push
cwde
adc
mov
sub
in
cmp
or
dec
mov
pop
or
jp
add
cdq
call
jae
fnstsw
pop
fidivr
imul
dec
stos
sub
push
ins
fwait
out
cs
inc
ds
and
neg
(bad)
mov
jle
dec
cs
lods
xor
dec
xchg
pop
mov
enter
shr
and
adc
dec
cmp
cmp
or
bswap
gs
mov
cld
mov
stos
nop
(bad)
adc
add
push
outs
mov
mov
push
mov
or
iret
cs
adc
cwde
pushf
fs
mov
aaa
xor
outs
dec
add
adc
pop
adc
or
mov
je
test
add
mov
jnp
cmp
pusha
into
js
xor
cmps
sbb
mov
inc
or
mov
mov
or
cmp
xchg
fndisi(8087
cli
rcr
mov
and
sub
inc
add
cmp
movs
sbb
cld
push
lods
call
fwait
push
ja
and
popf
inc
adc
(bad)
ss
aas
fild
add
scas
sub
and
inc
pop
or
(bad)
(bad)
mov
mov
pop
add
mov
inc
cmc
std
and
dec
retf
out
sbb
int3
stos
int3
jl
ret
adc
jb
(bad)
clc
fisub
adc
scas
imul
or
pop
and
jne
das
je
xor
pop
adc
jg
cmc
mov
icebp
ret
scas
call
push
(bad)
repz
rcr
ins
push
outs
ds
push
test
xchg
and
xor
rcl
sub
sbb
jnp
int
inc
je
mov
jno
jne
ins
dec
int
inc
fwait
dec
je
cmp
xor
xchg
push
pushf
sub
(bad)
mov
clc
jmp
dec
and
push
pusha
dec
gs
(bad)
retf
or
int
mov
jns
out
aas
push
mov
add
mov
in
ja
(bad)
mov
stos
stc
rcl
xchg
xchg
arpl
mov
xlat
sti
fdivp
or
cmps
mov
inc
dec
xchg
or
stos
jno
and
jg
stc
mov
fisub
scas
pop
xchg
daa
loope
aad
mov
and
(bad)
cli
outs
pop
dec
ss
pop
mov
mov
pusha
int3
mul
or
xchg
jae
xchg
test
cmc
mov
cld
loope
mov
mov
into
ret
pushf
clc
push
bound
iret
push
xchg
sub
cmps
ins
retf
sub
add
jae
fwait
push
mov
sbb
pop
int
mov
dec
sbb
cli
mov
inc
add
inc
shl
gs
loopne
shl
pop
or
xchg
adc
aad
stc
je
adc
and
mov
cmp
and
cmps
(bad)
std
jge
sub
xchg
inc
mov
pop
js
mov
fs
mov
and
test
or
xor
mov
call
xchg
or
mov
jno
cmp
and
cmc
imul
dec
mov
push
ins
dec
mov
mov
pop
add
add
push
jns
(bad)
ds
retf
fwait
in
(bad)
popf
mov
cmp
inc
inc
fst
xor
xchg
pusha
fstp
push
pop
sbb
aam
dec
popf
(bad)
js
scas
jb
hlt
mov
int
or
inc
clc
pop
ds
xchg
lds
out
(bad)
aam
fwait
enter
add
or
sub
jp
or
sbb
into
test
and
push
mov
mov
jo
cmp
(bad)
(bad)
sbb
mov
ss
cmp
outs
lock
jnp
popf
xor
bound
push
sbb
pushf
jecxz
scas
std
(bad)
icebp
mov
cld
out
sub
mov
stos
xlat
add
cmp
jecxz
mov
jb
outs
or
jp
cmp
mov
inc
cmp
and
(bad)
mov
dec
loope
inc
adc
pop
iret
push
aas
in
jno
xor
or
rcl
pop
mov
mov
xchg
aad
(bad)
jge
xchg
gs
inc
inc
ss
dec
mov
and
or
dec
mov
je
jl
mov
mov
cmp
ins
aas
imul
in
push
mov
push
fsub
int3
and
mov
mov
bound
xchg
adc
arpl
inc
or
xchg
pop
sub
clc
aam
fldz
out
popf
aad
mov
out
fstp
adc
cdq
sbb
les
sbb
add
fisttp
pop
test
mov
ss
test
cmp
inc
push
dec
sub
xor
mov
mov
scas
sbb
jmp
shl
pop
add
push
pop
int3
sub
jns
movs
and
test
push
fwait
adc
dec
sub
cmps
xchg
sbb
inc
and
adc
imul
sub
dec
in
(bad)
(bad)
push
inc
inc
aam
mov
jae
dec
leave
call
pop
aaa
xchg
repnz
shl
cdq
jecxz
shl
mov
call
mov
js
xchg
out
pop
enter
ror
sti
and
cli
adc
add
xchg
jge
in
out
sub
sbb
dec
mov
sub
jecxz
lea
mov
push
mov
or
stc
hlt
push
inc
(bad)
and
sbb
pop
cmp
pusha
xchg
push
movs
enter
dec
xchg
xchg
dec
ds
mov
jns
mov
pop
mov
pusha
xor
fdiv
(bad)
pop
sbb
and
mul
pop
cmp
mov
test
sahf
lods
dec
cmp
cmp
mov
adc
or
mov
xor
scas
fist
popf
sbb
ins
ror
add
aam
test
mov
fwait
jbe
or
cdq
addr16
add
xor
jb
dec
stc
mov
sbb
or
inc
les
cld
ret
rol
lock
xor
ret
and
sbb
lahf
in
and
fisttp
xor
sbb
jmp
mov
out
pushf
div
dec
xlat
ins
sar
xchg
lea
mov
cmps
adc
ret
xor
jg
sbb
movs
gs
jl
inc
into
pop
hlt
add
cmp
sub
dec
and
push
(bad)
ss
lock
dec
pop
jne
gs
jl
leave
mov
jne
mov
and
jmp
fdivr
cs
pop
push
jbe
ja
mov
cli
idiv
imul
mov
pusha
repnz
(bad)
xchg
xor
jle
xchg
icebp
pop
int3
pop
cmp
mov
xor
out
mov
mov
inc
and
xchg
and
scas
or
cmp
aam
mov
cmovno
nop
adc
mov
mov
imul
stc
add
push
mov
pop
jecxz
mov
push
(bad)
jecxz
pop
and
out
fimul
mov
xor
shl
je
mov
xchg
adc
out
lods
sub
ja
or
cmps
xchg
pop
mov
bound
pop
mov
mov
outs
loopne
jle
push
js
dec
add
fbstp
inc
cmp
cmps
dec
jmp
xchg
rcr
cmc
jne
scas
(bad)
fadd
ret
das
out
lea
sub
cmp
xlat
inc
xlat
and
mov
dec
xor
mov
or
and
mov
sbb
cdq
int3
jmp
fnsave
push
sub
cmp
mov
dec
add
test
push
or
jnp
jmp
pop
imul
idiv
(bad)
mov
adc
nop
sbb
pop
mov
jnp
out
push
call
mov
adc
xchg
cmps
iret
stos
push
adc
arpl
xchg
and
pop
mov
lods
ins
pusha
std
(bad)
xor
push
sub
mov
scas
adc
call
xchg
ja
call
xor
pop
loopne
fld
fcomp
push
ins
aad
xor
rcr
xor
sub
dec
outs
(bad)
jmp
xor
pushf
add
retf
int
jmp
leave
into
dec
shr
add
fcomp
xchg
fidiv
out
pop
pop
and
jno
adc
repz
dec
jae
loop
test
pop
add
dec
loop
lods
rcl
shl
jo
fsub
fbld
adc
xchg
push
jno
inc
xchg
popf
or
loope
mov
push
jbe
jge
fs
sub
or
adc
loop
push
mov
ror
or
mov
and
push
dec
jge
test
pop
mov
icebp
xchg
js
movs
fdivr
jp
push
jo
jmp
cwde
out
pop
mov
add
xlat
inc
cmp
ja
cdq
pop
and
int3
dec
ins
sub
add
mov
scas
push
int
jl
sub
aad
add
out
push
movs
ins
sub
mov
ja
psubusw
ss
jp
push
nop
popf
cdq
cmp
dec
add
mov
imul
sbb
mov
push
cmc
fwait
adc
mov
xchg
(bad)
sbb
push
into
ss
arpl
stos
outs
repz
outs
cmp
pop
js
gs
xchg
in
hlt
cwde
rcl
sub
adc
inc
dec
(bad)
jp
xlat
fs
into
xlat
std
jge
push
inc
retf
test
pop
mov
mov
jo
lods
fcom
mov
adc
xchg
xchg
test
ja
outs
sahf
es
test
fucomi
xor
out
cmp
ficom
outs
call
and
shr
inc
test
icebp
in
push
mov
jge
js
int3
pop
adc
mov
aaa
adc
cmp
sub
jecxz
push
pop
dec
pop
add
mov
mov
adc
mov
jp
or
sbb
push
push
adc
call
ret
push
sti
jmp
sbb
inc
push
retf
and
mov
sub
stos
jb
aaa
adc
sbb
fmul
jle
xor
in
inc
cmps
push
sub
stc
out
repnz
bound
fwait
outs
pop
inc
retf
(bad)
arpl
and
rol
aaa
out
cmp
shr
xor
cli
pop
dec
xor
add
or
in
test
mov
mov
xchg
(bad)
jae
mov
sub
call
imul
test
int3
inc
adc
ds
fucomi
inc
sbb
fdivr
xchg
pop
test
(bad)
jns
mov
add
jp
pushw
or
stc
movs
jae
aam
jg
popa
fst
rcl
push
popf
push
mov
push
mov
adc
jp
push
fistp
xchg
add
(bad)
mov
xchg
cld
(bad)
rol
pop
xor
movs
pop
ins
frstor
sbb
xchg
pop
or
cmp
dec
movs
fs
lock
cdq
cmps
fnstcw
jae
and
fldcw
push
or
add
aaa
and
lahf
std
mov
ficom
dec
jnp
mov
fsubrp
aaa
mov
fldpi
and
shl
mov
out
stos
inc
mov
cmp
push
mov
shl
adc
pop
(bad)
fnstsw
jns
das
loope
fwait
add
lods
sub
xchg
neg
pop
(bad)
call
mov
dec
add
idiv
pusha
ja
cli
sbb
lods
or
add
iret
xor
add
sub
jb
jecxz
mov
jno
and
fwait
sub
ret
inc
outs
jmp
push
mov
in
xchg
retf
in
cdq
dec
mov
inc
pop
jle
fs
je
mov
cmp
fadd
fnstenv
sub
rcl
dec
popf
nop
jns
sahf
imul
ja
outs
enter
pop
inc
jmp
cmp
mov
mov
mov
test
sub
mov
xchg
lea
jecxz
pop
pusha
mov
mov
mov
mov
mov
pop
jns
add
xor
(bad)
jmp
push
pop
dec
bound
or
or
adc
int3
nop
and
cmp
inc
dec
iret
dec
(bad)
mov
lahf
cmp
push
adc
(bad)
outs
mov
xchg
ficom
aas
lods
jle
add
(bad)
sub
inc
push
imul
push
inc
add
rcr
ret
sbb
mov
xchg
pusha
jmp
outs
mov
lock
popf
out
or
jg
and
dec
inc
xor
ds
lods
js
nop
inc
fidiv
ret
sbb
call
mov
sub
jne
(bad)
mov
adc
dec
stc
add
loop
jne
and
jnp
or
call
loope
dec
fsubr
sti
cmp
push
cmps
les
int3
nop
pop
inc
lahf
and
pop
mov
or
inc
loop
jmp
jo
in
pop
pop
cdq
das
arpl
icebp
cmps
imul
loope
mov
add
mov
mov
xor
fwait
dec
mov
pop
repz
repnz
sub
lahf
(bad)
rol
jmp
fistp
out
jae
data16
stos
out
mov
bswap
(bad)
test
dec
lods
loope
(bad)
adc
jmp
mov
gs
and
dec
in
fbld
fistp
jbe
add
fld
call
iret
leave
paddb
push
scas
push
addr16
shl
pop
cs
xor
inc
leave
or
adc
pop
outs
sbb
jecxz
out
xor
sub
pop
add
adc
arpl
(bad)
hlt
sbb
pop
sahf
xor
xor
and
xchg
cdq
dec
jge
cli
add
xchg
neg
scas
mov
retf
fsubr
and
mov
xchg
fiadd
aam
jns
push
test
bound
push
pop
outs
pop
inc
jle
sub
and
and
inc
inc
icebp
pusha
frstpm(287
mov
jmp
popa
cld
rcr
(bad)
push
push
jns
int3
fstp
imul
mov
mov
imul
cmp
sahf
(bad)
call
jbe
cli
les
adc
cwde
test
fsub
or
pop
inc
das
xchg
sbb
xor
dec
into
dec
pushf
imul
sub
add
faddp
daa
ins
fs
inc
or
cmps
ins
dec
mov
push
data16
in
cmp
mov
or
dec
stc
sahf
ja
sbb
fmul
sbb
mov
cdq
arpl
pusha
lds
lahf
fild
dec
adc
clc
add
pop
xor
ret
rcl
neg
jmp
xchg
stc
out
mov
pop
mov
lds
inc
dec
call
pop
fdivp
cmp
lea
js
sbb
or
mov
je
sbb
fidivr
inc
adc
call
mov
jmp
out
jne
mov
mov
ficom
or
pop
outs
xor
out
imul
lock
jmp
test
cmp
xor
jnp
out
stos
loopne
pop
and
mov
xor
add
pop
ins
inc
add
inc
cmp
jae
push
repnz
js
jle
sbb
jb
pop
jle
mov
call
loope
xor
cmp
dec
or
mov
(bad)
sub
retf
test
jle
sub
adc
dec
mov
sbb
push
mov
inc
lea
xor
push
push
mov
xlat
test
mov
loop
pop
add
add
repz
imul
out
das
pop
adc
xchg
and
xchg
pop
scas
adc
push
inc
xchg
les
dec
sahf
sbb
add
aam
mov
sbb
xchg
loope
movs
inc
scas
in
xor
push
push
sahf
jl
jg
dec
inc
stc
clc
push
xor
iret
test
xchg
push
push
bound
outs
dec
in
inc
shl
mov
xchg
call
adc
sub
adc
sbb
les
stos
mov
xchg
jb
fwait
xor
out
jcxz
ud2
in
push
jae
in
adc
dec
aam
ins
pop
rol
cmp
retf
push
push
std
adc
sbb
add
jecxz
sub
dec
sbb
fsubr
add
mov
jp
fst
jp
lods
gs
arpl
fist
xor
mov
xchg
(bad)
adc
ds
inc
into
ror
(bad)
out
mov
xor
push
mov
mov
add
mov
add
cmc
add
inc
int
inc
fwait
addr16
js
sar
sub
or
pop
enter
rcl
fisttp
cmp
fild
push
adc
mul
rcl
das
inc
js
out
addr16
inc
in
jecxz
inc
adc
add
es
aam
rcr
adc
jg
stos
fs
jg
adc
outs
cwde
jg
retf
out
dec
mov
test
sbb
jbe
(bad)
(bad)
add
lahf
ins
push
dec
mov
loop
std
jnp
adc
adc
cmp
pop
test
push
mov
jnp
push
mov
arpl
xor
pop
or
retf
xchg
fwait
adc
adc
inc
hlt
xor
dec
aam
jo
aaa
loop
and
sub
daa
mov
ins
mov
rcl
pop
ror
retf
sbb
inc
inc
out
enter
lea
shr
inc
mov
mov
cmps
adc
outs
cdq
and
scas
dec
cs
mov
fstp
retf
mov
xor
hlt
hlt
test
cmp
popf
mov
dec
ret
inc
mov
mov
repz
cmp
in
mov
daa
ins
retf
or
cmp
out
fisttp
add
push
mov
in
sub
dec
enter
sub
test
pop
sbb
jb
push
out
lods
retf
sub
xor
jg
out
cmp
or
in
loope
test
out
arpl
push
psubsw
hlt
push
movs
or
ficom
inc
and
(bad)
fwait
shl
push
test
int
or
loopne
add
pusha
jp
pop
cmp
ror
sbb
dec
ficom
stos
sbb
pusha
inc
dec
xchg
rol
adc
cmp
jae
pushf
pop
daa
cs
scas
xchg
nop
dec
jne
in
ss
leave
and
punpcklwd
inc
xor
jne
sbb
int3
pop
sar
inc
jmp
xor
mov
sbb
rol
jne
(bad)
ins
int
cli
push
add
call
shr
repnz
sub
in
add
out
sbb
or
in
xor
xchg
loopne
mov
push
cmp
ja
popa
jno
sti
push
fisttp
sbb
adc
mov
jg
xor
retf
(bad)
scas
push
mov
inc
inc
sbb
sub
cmc
mov
mov
sbb
test
dec
xor
inc
or
inc
cmovo
(bad)
mov
inc
dec
leave
shl
ret
inc
nop
xor
movs
out
(bad)
sar
pop
xchg
push
mov
imul
sbb
test
cmc
xchg
cmp
and
jno
push
dec
mov
mov
cli
push
push
inc
cld
push
lods
rcl
lahf
mov
ds
std
push
jmp
xchg
and
mov
jno
sbb
cld
pop
ds
sbb
(bad)
mov
cmp
jg
aas
stos
mul
aad
cmp
inc
ins
shl
mov
add
mov
loopne
jae
or
adc
cs
jae
push
jmp
push
lahf
rol
mul
(bad)
and
xlat
fnstenv
stos
push
fdivp
outs
scas
popf
jmp
mov
cmps
mov
ja
cmp
mov
adc
adc
xchg
inc
and
dec
jb
pop
adc
mov
xchg
int3
jmp
cmps
inc
or
sbb
fcomp
enter
cmps
mov
test
(bad)
loope
sbb
(bad)
sbb
movs
jecxz
into
ret
in
adc
pop
stos
push
jne
add
pop
fwait
sti
mov
push
(bad)
sub
push
mov
mov
cld
dec
xor
dec
inc
push
sbb
fst
pop
push
pop
mov
call
mov
cmps
jne
push
mov
mov
loopne
stos
idiv
les
mov
sub
jno
jg
pop
inc
loopne
adc
cmp
aam
das
fs
cli
jg
pop
es
movs
xchg
mov
xchg
enter
movs
pop
and
push
into
rcl
push
adc
(bad)
pop
add
iret
lods
jle
rol
lea
clc
jns
dec
sbb
add
xor
push
loopne
pop
xchg
jae
adc
push
popa
mov
inc
xor
sbb
mov
pop
mov
and
xchg
or
test
lahf
out
lea
inc
jns
mov
push
(bad)
movs
movs
push
data16
adc
fisub
scas
mov
cmps
mov
test
and
retf
xchg
mov
adc
sbb
sahf
jae
or
mov
jecxz
hlt
sbb
imul
inc
mov
jae
sub
js
jae
fild
sti
or
or
aaa
cmp
cmps
xor
xor
movs
xchg
fst
ins
mov
mov
sbb
not
or
mov
scas
lods
cmp
cmp
inc
dec
or
sub
jg
into
sbb
cmps
jecxz
dec
aam
xor
sub
rcr
into
sti
sbb
dec
out
jne
mul
xlat
jno
test
jmp
jmp
and
xchg
mov
pop
(bad)
fwait
dec
fs
or
sub
jecxz
test
sbb
mov
(bad)
add
pop
sub
sti
idiv
push
dec
adc
shr
sub
cmps
enter
leave
daa
pop
mov
pop
ret
shl
fldenv
fcmovnu
mov
sub
xlat
push
push
int
nop
sbb
out
xor
jne
jo
inc
jg
cmp
mov
inc
rcl
inc
pop
mov
ficomp
out
jae
sar
mov
pop
jl
jg
aaa
rcr
dec
xor
sbb
imul
and
inc
ror
(bad)
xchg
stos
or
out
popa
leave
pop
sbb
adc
adc
push
sub
ins
jmp
push
arpl
retf
and
std
cdq
xchg
pop
inc
imul
adc
sbb
add
push
test
fwait
adc
jb
cli
mov
stos
add
cmp
in
lock
fs
mov
and
add
les
add
sbb
cmps
push
enter
mov
pop
shl
sbb
movs
sbb
imul
mov
jle
adc
dec
push
ror
dec
shl
xor
nop
pop
xor
and
mov
add
imul
mov
add
fisub
aad
push
arpl
ror
cmps
push
pop
jns
imul
int3
fnstcw
lock
ins
sbb
test
jbe
retf
or
jb
(bad)
lods
int3
cmp
sbb
lods
and
test
aaa
adc
jae
lahf
cmp
add
cdq
xlat
movs
pop
hlt
xchg
movs
and
mov
jg
repnz
and
xor
xchg
mov
push
shr
xchg
cmp
or
sbb
outs
fist
cmp
sti
sti
mov
mov
dec
mov
adc
inc
icebp
cld
xchg
cmp
test
je
add
mov
cli
mov
loop
daa
ror
lahf
pop
xor
outs
neg
fst
xchg
aas
repz
inc
imul
sahf
repz
aaa
lods
imul
jae
jno
out
jbe
xchg
retf
mov
jb
lds
ret
bound
in
call
mul
outs
adc
stos
pop
in
aam
cmp
js
mov
mov
sti
mov
mov
push
mov
pop
jle
mov
ret
xor
add
addr16
int
imul
ret
loopne
sbb
add
add
xchg
mov
cmp
inc
and
push
repz
inc
or
lods
cmp
dec
xchg
mov
iret
add
mov
(bad)
test
cmp
repnz
int3
cmp
mov
cwde
adc
jae
shl
xor
mov
sbb
mov
fst
push
xlat
ins
inc
adc
sahf
stc
nop
fistp
(bad)
inc
sbb
mov
sub
mov
jbe
jg
dec
push
(bad)
fst
xor
adc
test
sbb
mov
dec
inc
loope
cmp
cs
push
mov
out
std
pop
arpl
sbb
in
add
(bad)
imul
scas
cmp
dec
loopne
mov
stos
pop
jecxz
sbb
xchg
sub
mov
inc
jmp
mov
xchg
inc
jmp
cld
in
push
dec
push
int3
imul
ss
outs
sub
aam
or
in
sub
xchg
imul
cmp
cmc
shr
(bad)
dec
in
push
dec
sub
push
popf
inc
sbb
lods
out
sub
inc
mov
dec
xor
or
inc
or
dec
xlat
jno
into
mov
pop
xor
or
pop
enter
pusha
push
mov
pop
cmovb
push
inc
mov
in
dec
pop
mov
icebp
pop
ins
lds
xor
jg
inc
and
inc
xchg
xchg
imul
jnp
(bad)
xlat
inc
and
push
jmp
xlat
mov
jae
outs
or
mov
xor
sub
dec
xchg
add
or
arpl
dec
arpl
jl
in
pop
rcr
test
hlt
movs
test
stc
aad
jae
jo
and
push
lahf
jae
jp
neg
push
pop
mov
sub
cmc
push
pop
div
xor
sbb
test
(bad)
mov
fnstsw
add
jl
add
xchg
push
lods
add
sub
push
cmp
aad
div
mov
push
cmps
xchg
mov
enter
(bad)
out
or
iret
jns
sub
xor
rcl
std
ror
test
mov
out
adc
getsec
pop
outs
push
not
outs
aas
cld
cmc
inc
dec
imul
jns
out
xor
or
jmp
retf
adc
jge
push
les
idiv
popa
shl
dec
sbb
mov
cmps
sbb
popf
imul
mov
xchg
int
inc
fwait
lahf
fwait
jnp
dec
pop
dec
sub
cli
lock
push
xchg
or
fld
mov
cwde
xchg
cmps
pop
xchg
movs
cdq
inc
mov
cmp
das
push
xchg
add
inc
cli
das
xor
nop
dec
arpl
pop
mov
stos
je
movs
movs
or
jmp
nop
pop
rcl
jne
mov
sbb
mov
xor
sbb
sbb
rol
ret
sbb
mov
mov
pop
sub
jge
movs
push
inc
les
cmps
xchg
out
in
jmp
push
push
int3
(bad)
fcomp
jmp
pop
jns
rol
clc
dec
pop
sub
sbb
push
xor
dec
adc
(bad)
cwde
ja
sbb
(bad)
(bad)
fs
push
jecxz
adc
shl
jmp
std
mov
jmp
fnstsw
test
daa
or
clc
pop
mov
pop
inc
mov
mov
mov
scas
inc
mov
hlt
sti
fmulp
cmps
shl
fstp
mov
cmc
push
cmp
ror
je
int
add
call
sbb
call
pop
inc
mov
push
fdiv
xor
xor
sbb
mov
rcl
leave
inc
repnz
adc
pop
scas
sub
ss
jmp
cs
arpl
cmp
or
es
cmp
pop
mov
mov
cmps
xor
pop
(bad)
(bad)
aas
pusha
add
mov
gs
push
inc
add
cmc
xchg
xor
fsubr
les
dec
int
ja
jo
aam
gs
mov
inc
mov
movs
aaa
push
push
nop
jecxz
movs
das
sahf
cs
inc
stos
ret
push
mov
fwait
push
popf
inc
and
pop
xchg
ret
out
cmps
in
in
mov
push
retf
and
or
inc
cmps
mov
mov
jecxz
or
mov
bound
aam
or
pop
mov
jns
jns
fs
inc
leave
inc
stos
jmp
adc
jno
pop
lahf
inc
jmp
scas
vmovq
jle
sub
xchg
movs
sub
adc
add
test
jne
test
iret
lods
jl
rcr
cld
xchg
popf
out
pop
out
mov
js
and
jecxz
mov
xchg
aad
cmp
outs
dec
adc
and
cmp
pop
cmps
xchg
cmp
fbstp
or
jecxz
sbb
in
das
add
mov
xchg
push
xor
test
pop
out
in
mov
push
test
xor
inc
add
mov
jle
les
outs
cmp
sub
mov
push
push
mov
repnz
xchg
xor
inc
clc
aaa
jl
in
mov
add
and
outs
out
inc
ret
add
sub
pop
(bad)
mov
mov
test
sub
mov
call
xchg
outs
loope
add
mov
pop
stos
out
inc
jmp
(bad)
mov
xlat
ficomp
pop
inc
add
popa
popf
add
lds
pusha
sbb
repz
cmp
adc
jno
inc
jl
sbb
mov
jle
sub
xlat
adc
test
imul
cli
mov
xchg
pushf
outs
repnz
dec
cmp
sbb
fbstp
cmp
outs
or
ins
rcr
mov
cmp
int
mov
inc
rcr
pop
mov
test
(bad)
popf
lods
cmps
sar
jnp
aas
jp
pop
mov
add
mov
and
push
push
push
add
lods
cmp
sti
mov
adc
inc
ins
int
popa
cdq
jb
xchg
mov
or
add
dec
mov
ret
daa
or
test
sti
shl
cmp
pop
adc
push
(bad)
sar
mov
pusha
and
dec
ret
fs
cmps
add
pop
dec
enter
xlat
(bad)
jno
sbb
sbb
mov
(bad)
out
jnp
cdq
retf
das
mov
ret
bound
cmc
arpl
cmp
push
mov
std
jmp
xor
xchg
inc
and
stc
hlt
call
adc
or
fcomp
repz
add
hlt
pop
xor
xlat
xor
in
leave
mov
add
or
fist
ss
std
and
in
jg
xor
jmp
push
(bad)
call
adc
cmp
daa
aam
adc
(bad)
jmp
lods
sbb
cmp
pop
stos
out
push
xor
fld
mov
add
std
(bad)
jmp
sub
ror
es
retf
clc
aaa
leave
out
pop
aad
or
push
push
es
lods
pushf
pushf
xchg
dec
(bad)
mov
sbb
xchg
xor
jno
stos
es
loopne
pop
inc
and
dec
and
dec
in
and
jg
stos
int3
cmp
out
(bad)
clc
mov
xchg
push
sbb
adc
push
cdq
repz
es
out
icebp
push
cld
mov
or
imul
fcom
dec
sahf
ins
add
mov
imul
adc
adc
nop
(bad)
jo
out
into
pop
es
out
mov
sbb
(bad)
xor
addr16
test
jmp
or
clc
pop
sub
pop
cs
imul
or
sbb
push
loopne
sbb
push
dec
xor
fwait
mov
mov
mov
mov
push
leave
or
cmp
stos
in
xor
cli
cmps
pop
xor
inc
sbb
push
movs
cli
mov
adc
ret
jp
rcr
mov
iret
push
out
push
retf
hlt
inc
data16
push
outs
fsubr
jmp
aad
pop
mov
push
mov
dec
and
xchg
xchg
movs
adc
cmove
push
jb
xchg
mov
into
mov
and
xor
ret
rol
gs
or
add
pop
pop
cmps
sub
mov
pop
cs
cwde
push
jbe
inc
jge
mov
popf
dec
cmc
scas
inc
xchg
sahf
popa
add
movs
xlat
not
popw
loopne
xor
xchg
lahf
lahf
rcr
stos
loope
outs
push
std
ja
sbb
test
pop
movs
loope
popf
fadd
cmp
addr16
aaa
idiv
or
pop
jnp
jae
mov
fist
ja
stos
aam
es
out
push
or
dec
pop
cmps
icebp
dec
push
mov
mov
fiadd
fistp
repz
js
int3
xor
fcmovne
jno
pop
(bad)
movs
mov
mov
(bad)
movs
loope
jecxz
inc
aam
inc
and
cld
dec
into
push
or
jae
ficomp
cld
je
xchg
cmp
jb
sub
dec
adc
jo
sub
jo
loop
dec
int3
retf
test
jecxz
cmp
push
sub
shl
sub
sbb
test
xor
test
aad
push
adc
xor
mov
cmps
adc
lods
div
jecxz
mov
mov
cmp
and
inc
pusha
retf
jns
jg
pop
pop
mov
pop
(bad)
xlat
push
sub
xlat
dec
mov
jp
adc
enter
mov
push
clc
sbb
mov
push
ret
shr
(bad)
push
repnz
fcomip
cmp
loopne
mov
jge
mov
enter
repz
mov
out
mov
xchg
sub
mov
test
lea
ja
fsubr
pop
inc
icebp
jns
scas
enter
mov
push
mov
add
loop
or
xor
xchg
adc
xor
popa
pop
dec
in
int
iret
rol
jmp
mov
mov
pop
mov
add
(bad)
pop
leave
jno
mov
jb
jbe
dec
pop
xchg
push
pop
dec
enter
dec
scas
push
mov
movs
cmps
pop
pop
inc
push
xchg
adc
mov
mov
in
outs
inc
mov
(bad)
pop
aad
retf
pop
cli
dec
sbb
pop
pushf
sbb
je
gs
pop
xor
mov
jl
push
loope
adc
je
mov
(bad)
mov
out
add
fdivr
lahf
shr
fidivr
jb
lods
push
jmp
aas
pop
mov
jb
adc
inc
jmp
sar
jmp
mov
or
jno
mov
pop
pop
pop
add
in
inc
cmps
cmps
mov
je
inc
jbe
or
ret
push
hlt
mov
mov
sbb
lods
pop
cdq
sub
fs
jmp
mov
sbb
shr
mov
lods
mov
(bad)
and
aam
push
mov
push
cwde
jmp
pushf
movs
mov
xchg
out
addr16
pop
mov
ror
test
sbb
call
inc
jbe
mov
fs
enter
std
dec
sub
pop
ret
jmp
cmc
lahf
xchg
push
stos
cdq
adc
and
mov
mov
loopne
mov
push
aam
pop
jno
rcl
mov
popa
xor
ficomp
push
rol
ins
imul
pop
jns
or
mov
fstp
xchg
lods
outs
sub
int
add
inc
cli
jmp
fimul
fstp
jmp
pop
xor
jnp
or
and
popa
jecxz
pop
lea
and
(bad)
je
outs
adc
mov
outs
xor
lods
or
mov
adc
jp
std
in
sbb
iret
lods
lds
ins
sub
mov
push
jb
dec
outs
test
shr
xor
xchg
pop
ins
jns
xlat
adc
jne
xchg
scas
jae
lods
and
inc
mov
addr16
cld
sbb
outs
lods
call
xchg
test
shr
xlat
mov
outs
dec
fnsave
mov
and
(bad)
mov
mov
xor
push
movs
mov
mov
lahf
mov
and
retf
mov
fcom
fisttp
cmp
call
mov
daa
mov
cmps
ja
pusha
inc
mov
push
mov
add
xor
int
outs
jae
cmps
mov
pop
dec
cmps
ds
xchg
jns
nop
(bad)
mov
cwde
jbe
les
mov
aam
mov
cmp
lds
xchg
push
fdivr
pusha
sti
popf
sub
cdq
lock
dec
loop
mov
les
cmc
xor
scas
loope
push
ror
rol
fcom
fsub
add
ficom
cli
push
inc
mov
scas
inc
cdq
jmp
push
cmp
mov
xchg
adc
xor
inc
aam
std
xor
pop
ficom
je
mov
popf
test
(bad)
(bad)
xlat
pop
pop
inc
sbb
add
or
and
inc
mov
mov
xor
cwde
push
loop
(bad)
pop
aad
jmp
int3
cmp
shr
rep
push
or
pushf
(bad)
pop
dec
hlt
push
imul
sbb
loope
jg
mov
xchg
movs
sub
les
cmp
push
sub
mov
pop
mov
das
mov
pop
mov
mov
pop
push
fbld
xchg
or
ja
ficom
xor
scas
out
fbstp
xor
dec
push
loop
icebp
xor
rcr
cmp
xor
xor
ds
cmp
push
(bad)
jmp
sub
add
ja
mov
pop
nop
add
lock
and
sub
leave
jmp
mov
mov
xor
sbb
dec
call
cmps
add
xchg
fidiv
repz
neg
loop
and
xchg
inc
neg
popa
movs
xchg
rcl
dec
test
int
add
cmps
add
sbb
call
js
add
iret
sub
(bad)
data16
imul
jmp
fisttp
cmp
push
inc
enter
mov
outs
xor
mov
jo
cli
jmp
shl
xchg
test
repz
aas
dec
mov
fcomip
rcr
into
or
sbb
sub
inc
test
dec
xchg
fcomp
jmp
push
push
lods
lahf
cmp
adc
daa
mov
dec
mov
mov
push
dec
fs
sbb
aaa
adc
ds
lock
or
mov
pusha
sahf
dec
enter
jno
xchg
pop
in
popa
xchg
push
outs
shl
mov
push
mov
retf
xor
jns
mov
(bad)
dec
daa
rcr
cld
mov
jb
pop
out
jb
sbb
cmp
push
cmp
int3
and
sub
mov
push
dec
shr
in
inc
mov
bswap
add
psubsw
cdq
pop
popa
inc
xor
mov
aam
pop
nop
mov
inc
stos
jecxz
outs
cmp
cmp
xchg
ja
sti
lea
or
mov
pop
cmps
add
and
outs
retf
repz
xchg
pop
mov
test
add
xlat
mov
mov
xor
ret
pop
cmp
sub
not
test
mov
out
jno
jae
cs
dec
mov
jbe
add
and
or
xchg
stos
out
cdq
jne
or
inc
add
cmp
mov
add
(bad)
sub
retf
mov
sub
inc
(bad)
cmp
push
sbb
push
rol
jle
lods
in
add
jge
aam
cmp
loopne
sbb
adc
xchg
test
scas
adc
loop
mov
pop
nop
outs
jg
jnp
fiadd
cmp
xchg
jmp
adc
fstp
lock
clc
call
adc
fild
(bad)
cli
fdivr
xchg
sub
cli
jl
adc
test
int3
addr16
xor
inc
cli
inc
add
dec
and
xor
sub
cmp
sbb
dec
xlat
or
mov
xor
xlat
push
push
adc
movs
lods
scas
movs
dec
clc
shr
mov
and
nop
pop
fistp
mov
imul
cdq
aaa
push
repz
pop
(bad)
addr16
sub
int
hlt
fadd
sbb
and
dec
jae
inc
dec
cmp
pop
rcr
or
mov
xchg
movs
retf
mov
fsubr
repz
inc
cwde
xor
loop
mov
mov
adc
xchg
rol
hlt
push
cmp
fisubr
jg
dec
adc
stos
jecxz
cmps
add
rcl
adc
movs
cmp
dec
pop
xchg
neg
xchg
jle
pop
loop
inc
xchg
pop
mov
sbb
xchg
push
sbb
ins
mov
pop
or
(bad)
cmp
aam
je
gs
pop
test
jns
leave
mov
dec
loope
sbb
adc
mov
xchg
lods
mov
lods
stc
mov
gs
pusha
xchg
aad
mov
mov
pop
or
cmp
xor
cmp
das
dec
mov
inc
aad
xchg
pop
imul
in
pop
xchg
sahf
push
mov
in
adc
ins
sub
mov
sbb
lods
adc
mov
loopne
(bad)
into
gs
pop
push
mov
je
inc
out
mov
out
les
daa
mov
movs
jmp
jp
inc
popa
pop
and
push
push
xchg
mov
inc
cmp
push
es
sub
xor
test
mov
stc
or
bound
into
xchg
mov
dec
or
sbb
add
mov
mov
pop
add
mov
push
outs
out
mov
hlt
push
shl
adc
jb
or
mov
int3
ins
xchg
aas
add
inc
and
pop
and
or
xor
jmp
mov
xor
push
aad
fnstenv
add
rcr
or
inc
mov
inc
sbb
test
sbb
int3
movs
mov
mov
aam
inc
jle
mov
test
scas
pop
outs
and
sub
inc
ins
adc
cmp
dec
rcr
(bad)
push
xchg
jle
inc
mov
or
mov
test
les
aam
push
jmp
cmp
nop
loope
ins
dec
mov
in
fs
fbld
repnz
or
mov
out
jg
push
mov
jae
dec
shl
sub
cld
jo
push
hlt
xchg
wrmsr
pop
mov
jge
jns
add
jne
mov
cmps
sbb
addr16
adc
jb
add
mov
add
popf
xlat
shl
test
into
xchg
pop
mov
(bad)
push
sub
shr
jmp
hlt
add
or
test
inc
fisttp
call
dec
xlat
movs
push
fwait
ret
fisub
xchg
inc
loopne
adc
mov
loop
aaa
xor
repz
or
lock
ror
mov
das
cld
xchg
dec
stc
loope
and
mov
xchg
jnp
push
jecxz
in
mov
sahf
cmp
or
sbb
push
or
scas
cs
loopne
jo
add
sub
int3
lahf
mov
adc
xor
mov
out
sub
push
stos
scas
xchg
push
repz
inc
hlt
push
(bad)
add
ja
iret
xor
jmp
outs
adc
dec
int
imul
dec
push
mov
inc
jecxz
fisttp
sub
test
daa
dec
outs
data16
aam
xchg
xchg
ret
dec
out
dec
mov
or
inc
loope
fstp
mov
jne
xor
xor
jmp
push
es
call
xchg
mov
(bad)
fst
push
sub
and
pop
jb
push
adc
pop
xchg
int
mov
jns
push
jle
ins
xor
or
addr16
fst
jb
mov
psllw
mov
and
mov
push
bound
xor
xchg
and
mov
add
add
push
dec
jp
sub
mov
mov
and
int3
mov
enter
scas
xchg
sbb
mov
jbe
mov
cmp
inc
cmp
add
add
test
inc
pop
hlt
out
dec
inc
(bad)
sahf
je
clc
pushf
movs
adc
jne
cmp
dec
in
hlt
or
in
enter
sbb
ret
mov
and
ins
enter
adc
adc
inc
jo
push
or
out
test
mov
lods
imul
or
outs
test
ins
fcom
xor
enter
inc
ret
enter
inc
add
ins
cmp
gs
dec
push
fs
sub
xchg
retf
rol
or
les
add
fsubr
es
push
push
retf
add
jp
mov
fwait
popa
pop
and
aam
sbb
adc
adc
loopne
clc
imul
gs
outs
mov
adc
(bad)
outs
jmp
xchg
cmp
nop
xchg
imul
int3
mov
cmp
seta
mov
jmp
mov
pop
movs
sti
fwait
and
pop
jmp
jbe
inc
jecxz
hlt
mov
retf
cmp
aam
in
adc
jl
mov
cs
setb
rcr
inc
lods
inc
(bad)
fdivr
jne
in
je
xchg
and
call
inc
ret
jb
sbb
and
test
pop
jbe
mov
adc
sub
cmps
cmps
fwait
outs
data16
fldenv
cmp
dec
and
imul
mov
mov
sub
(bad)
dec
jp
rol
cdq
pop
(bad)
cld
pusha
arpl
iret
mov
shl
cwde
dec
xchg
inc
clc
daa
mov
stc
mov
outs
shl
(bad)
js
add
mov
inc
daa
scas
scas
popa
add
popf
(bad)
sub
aad
xchg
ins
jmp
pusha
dec
in
mov
push
sub
stos
stos
in
scas
and
xor
repz
xor
mov
push
mov
(bad)
ds
xchg
std
out
mov
jmp
pop
adc
mov
popa
mov
sub
adc
lds
xor
adc
push
dec
sti
add
inc
dec
stc
sbb
pop
out
jg
xchg
loopne
imul
pop
dec
cmp
mov
(bad)
mov
retf
cdq
pop
jmp
pop
aas
cmc
add
and
int3
push
cmp
xchg
jmp
mov
cmp
call
cmp
test
ja
ins
inc
call
jno
jge
in
rcr
jbe
adc
mov
xchg
pop
or
movs
jg
push
cmp
aam
int3
xor
pop
stos
mov
inc
int
ficomp
push
and
loope
arpl
xor
rol
ret
test
imul
and
adc
sbb
jnp
aaa
lea
int
fst
shl
jbe
inc
sbb
jmp
scas
or
mov
and
sbb
xchg
in
movs
(bad)
pop
inc
jae
sub
lahf
sti
push
test
das
enter
mov
cld
arpl
xor
mov
in
inc
in
rol
ret
enter
movs
dec
mov
jo
push
adc
call
(bad)
mov
movs
lods
std
ins
xor
test
shr
call
cmc
stos
cwde
out
jae
pusha
(bad)
cwde
jo
pop
clc
call
mov
aaa
xor
mov
rcl
sub
pop
pop
mov
aas
sti
mov
jp
iret
inc
test
adc
cwde
push
jbe
ins
nop
ja
inc
je
jae
aaa
xchg
dec
mov
in
xchg
mov
iret
in
loopne
push
iret
mov
add
or
pop
and
xchg
mov
es
ins
pop
pushf
pop
inc
popa
mov
mov
pop
and
sub
repz
ret
dec
sub
jmp
pop
mov
cmp
fld
xchg
xor
xor
jne
push
inc
bound
pop
ret
mul
test
xor
inc
sub
push
stc
(bad)
xchg
inc
inc
enter
xchg
inc
mov
repnz
dec
movs
clc
outs
in
jne
and
add
lock
ja
push
js
cld
rcr
test
(bad)
aas
call
push
enter
inc
ret
repnz
dec
jmp
xor
out
xchg
(bad)
pusha
scas
pop
test
call
xor
push
fcomp
aam
(bad)
add
or
inc
sar
call
push
adc
inc
fimul
xchg
jle
cmp
push
dec
xor
xchg
mov
dec
push
retf
cwde
add
call
lock
jmp
aam
adc
pop
and
je
jne
adc
jmp
mov
jb
loop
dec
jge
ss
mov
ins
mov
inc
cwde
(bad)
adc
ret
add
pop
cmc
std
sahf
jg
jl
mov
iret
inc
cli
jbe
mov
fidiv
(bad)
div
lea
xor
arpl
enter
(bad)
mov
(bad)
fwait
push
pop
inc
mov
jnp
pop
mov
sub
sub
push
mov
movs
xor
sar
or
aaa
in
pop
sar
mov
in
jno
dec
in
dec
lods
pop
test
leave
cwde
inc
js
icebp
mov
xchg
cmp
xor
outs
pop
test
ret
xchg
cmp
scas
inc
xchg
pusha
or
mov
mov
in
xor
out
inc
aad
xchg
outs
(bad)
or
inc
fbld
std
loop
fisub
add
scas
(bad)
adc
mov
dec
adc
or
imul
add
sar
int3
ss
mov
fimul
test
push
shl
nop
mov
xor
jle
jns
shl
jmp
and
and
ret
mov
es
jmp
adc
dec
leave
js
movs
into
push
add
sahf
mov
mov
and
sbb
std
adc
mov
inc
lock
ret
sbb
rcl
dec
out
adc
mov
fsub
cmp
sbb
leave
scas
sbb
movs
sub
neg
in
cmps
sbb
and
loope
rcl
pop
ins
push
shrd
outs
popf
adc
ret
shr
ins
fs
add
stos
leave
mov
clc
pusha
push
jp
aad
jle
popa
mov
xchg
cmps
sbb
jns
mov
fcom
push
mov
pop
fwait
lds
pop
mov
jb
cli
lock
ror
lds
popf
retf
cmp
pusha
mov
sti
cmove
pop
sub
push
lea
inc
xchg
cs
or
dec
lea
pushf
cmp
(bad)
jp
jo
xchg
sub
and
movsx
or
mov
stos
push
push
xor
push
popf
inc
pusha
arpl
mov
or
pop
xor
xor
in
push
add
hlt
xchg
movs
adc
cmp
inc
out
(bad)
(bad)
gs
fistp
ds
adc
sahf
jnp
jg
jo
test
(bad)
inc
inc
movs
or
dec
or
or
mov
repnz
ret
sub
or
aaa
xor
jae
mov
pop
jo
es
jp
in
pop
retf
retf
add
popa
jl
fnstcw
push
adc
jge
out
adc
dec
loopne
push
adc
in
in
xchg
sbb
sbb
imul
das
fldcw
icebp
out
sahf
xchg
dec
mov
out
outs
mov
inc
call
mov
mov
retf
push
dec
mov
retf
shl
and
pop
inc
enter
cmp
shl
rcl
xor
push
mov
xchg
xchg
pop
mov
test
inc
inc
sub
xchg
hlt
and
adc
xchg
sub
inc
outs
adc
out
cdq
add
sbb
push
push
xor
dec
push
jmp
push
pop
push
lds
push
repnz
and
xor
(bad)
dec
mov
ja
(bad)
fst
call
mov
xor
or
push
js
push
add
arpl
xor
mov
mov
out
mov
mov
je
jecxz
leave
or
xchg
jae
or
fs
out
sti
xchg
test
xchg
out
jne
pushf
(bad)
daa
push
loope
clc
add
xchg
test
repnz
div
in
pop
xlat
sub
data16
mov
ins
mov
adc
pop
stos
test
cmp
jp
sahf
das
mov
popa
movs
cmp
xlat
and
mov
out
test
pop
addr16
lock
push
push
jmp
fstp
mov
addr16
xchg
out
cld
pop
out
or
mov
mov
in
popa
scas
(bad)
es
iret
mov
inc
(bad)
test
adc
and
sub
xchg
or
jae
sbb
cmp
adc
fsubr
jl
xor
cmp
xor
popa
pop
scas
xor
outs
lock
out
enter
sub
inc
movs
ins
movs
cmp
ret
out
inc
jmp
jle
ins
adc
loope
inc
into
pop
jae
in
or
fldenv
sbb
xor
test
mov
dec
push
pop
mov
repnz
das
jno
sti
pop
cmps
dec
pop
add
push
adc
sub
ret
aam
imul
pop
fwait
push
data16
cmp
popa
imul
xor
pop
ds
call
mov
sub
fld
mov
or
out
rcr
inc
imul
and
sub
rcr
or
in
dec
dec
dec
xchg
push
pop
leave
jmp
out
sub
popa
cs
sub
fucomp
pop
imul
add
rcl
push
cwde
jb
gs
inc
and
lahf
dec
dec
outs
or
mov
gs
xchg
jb
inc
das
sahf
cwde
mov
dec
adc
mov
stos
(bad)
fcomip
xor
inc
(bad)
loopne
and
adc
push
pop
adc
cmps
jnp
sbb
cmp
leave
sbb
jp
test
mov
pop
mov
aas
test
in
fincstp
fstp
sub
sub
retf
rcr
sahf
mov
mov
add
mov
inc
nop
fsubr
es
jp
sub
xor
pop
pop
xor
jns
fucompp
addr16
int3
test
dec
jge
jns
into
retf
(bad)
outs
mov
cmps
add
push
or
jle
sar
cmc
mov
jnp
bound
push
cmc
loopne
aam
lds
pop
cmp
and
adc
aad
jge
xor
or
stos
mov
and
into
mov
loope
mov
sar
fldcw
ins
pop
je
add
adc
inc
nop
scas
jg
adc
in
pop
lods
xor
cld
mov
mov
push
xchg
mov
push
jb
je
popaw
add
mov
fld
test
and
lock
test
repnz
sbb
cdq
cmp
or
mov
adc
arpl
pop
mov
cmps
jmp
pop
xlat
lahf
popa
nop
pop
mov
xchg
and
push
popa
xchg
aaa
sub
and
mov
mov
clc
sti
sub
mov
and
pop
ds
je
push
xor
cdq
fwait
stos
inc
pushf
pop
(bad)
movs
sub
cmps
stos
hlt
outs
push
in
jae
rcl
pop
jecxz
(bad)
shl
or
adc
and
std
pop
push
xor
sbb
push
jo
rol
mov
add
mov
inc
jo
adc
mov
sub
mov
wbinvd
mov
cmp
xchg
int3
mov
inc
fsub
or
mov
mov
ds
loopne
fsubr
scas
jnp
inc
sbb
jmp
mov
movs
xchg
clc
push
ror
mov
ret
xor
out
arpl
adc
pushf
bound
jmp
or
cmc
xchg
pop
cld
ja
ss
xlat
cmps
lods
std
mov
dec
and
shl
xchg
jb
dec
and
mov
pop
aaa
lahf
jno
add
sar
test
add
and
int3
iret
lods
into
inc
sbb
add
jnp
cs
ins
cmp
sbb
mov
pushf
sbb
or
inc
test
data16
test
push
ror
addr16
aas
leave
sbb
movs
arpl
popa
ret
jbe
cli
xchg
in
xchg
int3
sahf
popf
push
xchg
sar
call
cdq
repnz
clc
clc
jae
mov
ds
out
cmc
call
cmp
mov
repz
cmp
lds
ins
push
push
dec
inc
pop
mov
fcomp
icebp
fsubr
out
xchg
int
adc
adc
mov
fild
outs
ret
xchg
cld
mov
(bad)
mov
cmc
inc
aam
aad
fwait
sahf
(bad)
mov
je
es
paddd
or
mov
ins
outs
push
mov
sub
sbb
pop
cmp
xchg
cld
shl
push
inc
xchg
or
mov
mov
out
repz
clc
sub
stc
and
inc
jmp
cmp
ds
and
addr16
pop
push
xor
js
bswap
sub
enter
sbb
cmp
dec
retf
jecxz
(bad)
dec
xchg
shl
or
inc
lahf
and
mov
mov
adc
or
mov
cdq
ror
aam
test
into
adc
push
mov
mov
std
mov
mov
cld
rol
push
sbb
dec
add
mov
pushaw
mov
je
out
xchg
xor
pop
stos
shl
inc
jno
(bad)
mov
inc
repnz
cwde
mov
or
pop
sub
fdiv
sub
add
fwait
aas
xor
out
jae
aam
rcl
or
jno
(bad)
js
lods
repz
mov
jmp
enter
mov
in
add
lahf
inc
and
call
arpl
or
test
rol
xchg
or
out
(bad)
mov
outs
into
data16
dec
jle
mov
cmps
push
mov
push
int3
cmp
out
jle
or
jo
push
lds
shr
and
imul
sbb
arpl
push
aad
mov
(bad)
cmp
dec
std
or
mov
movs
pop
hlt
pop
sti
mov
pop
sub
sbb
fcmove
jle
dec
jno
cli
pop
add
mov
fild
cmp
jno
icebp
addr16
(bad)
jg
lods
mov
aam
addr16
or
lock
dec
test
jbe
pop
pop
jp
inc
loopne
pop
fsub
adc
inc
push
stos
xchg
inc
pop
fstp
pop
jbe
add
(bad)
cmc
inc
mov
inc
lods
sbb
mov
pusha
(bad)
int
mov
jns
les
enter
pop
mov
jae
inc
int
and
loop
cmp
cmps
inc
xchg
in
mov
lds
push
jl
rcl
xor
jbe
pop
mov
push
dec
icebp
fnstcw
fcompp
jp
test
sub
mov
adc
jmp
pop
sbb
cmp
dec
out
fstp
adc
sub
leave
mov
loope
add
fcom
mov
dec
cmp
pushf
lahf
leave
mov
push
push
mov
retf
in
dec
in
fidiv
pop
aam
fs
(bad)
pop
mov
mov
push
clc
mov
dec
xchg
xchg
fucomi
dec
out
lods
ja
or
cmps
or
outs
push
or
cmp
mov
enter
sbb
pop
rcr
loop
std
lds
inc
cmps
cmp
pop
loope
dec
or
xchg
inc
inc
push
jae
rcl
xlat
xor
call
pop
adc
loop
rcr
loopne
add
jecxz
out
std
or
and
cmc
ja
aam
jecxz
inc
jb
retf
stos
out
pop
inc
mov
call
cmp
push
js
sar
pop
pop
std
xchg
sub
mov
fist
mov
and
or
inc
imul
daa
jo
push
fs
sub
jp
push
xlat
mov
mov
dec
int3
adc
inc
(bad)
jmp
dec
jmp
sbb
push
(bad)
(bad)
dec
mov
movd
mov
cmp
inc
test
pop
jnp
dec
cmp
adc
movs
sbb
adc
cwde
sub
leave
jae
push
or
jp
cld
sbb
repnz
or
mov
hlt
cdq
(bad)
popf
mov
xlat
inc
stc
add
xchg
iret
cmp
add
ins
jns
aas
xor
sbb
push
xchg
pop
int3
scas
sub
mov
sbb
daa
pop
push
div
mov
cmp
lea
icebp
xchg
xlat
cmp
sbb
pop
or
pop
pop
mov
retf
arpl
jge
fcos
push
(bad)
popf
dec
mov
out
std
cmp
popa
jp
push
shr
sub
aas
cmp
jne
and
adc
enter
pop
in
into
mov
dec
jmp
inc
mov
inc
cli
sbb
test
lea
(bad)
cld
enter
jae
pop
push
lods
retf
mov
repz
sub
lahf
idiv
stos
xor
xor
enter
int
imul
jmp
cmps
test
sahf
cmc
mov
or
stc
mov
xchg
add
cld
out
in
cmp
mov
push
sbb
pop
push
dec
xchg
fist
ret
jg
loope
icebp
pop
shr
ds
sub
mov
loop
call
sbb
aad
inc
mov
sahf
in
ficom
repz
cmc
pusha
cmp
pop
xchg
and
leave
inc
jo
jle
jbe
fwait
mov
xchg
sar
mov
mov
test
fild
inc
inc
mov
xchg
retf
test
cmp
jno
icebp
lock
push
movs
cmps
pop
in
add
in
sbb
sbb
in
loopne
shr
add
lods
(bad)
jns
shl
jmp
mov
in
xor
cld
dec
popf
ret
out
push
dec
pop
shl
sub
std
cmp
jmp
jno
test
pusha
call
sar
imul
and
and
mov
adc
fs
mov
add
jne
xor
push
cdq
ficomp
cmp
fcom
stos
into
std
mov
adc
pusha
(bad)
cmp
mov
test
rol
cmp
cmp
mov
out
scas
sub
xor
stos
rcl
inc
mov
cs
stos
shl
pop
jecxz
mov
jnp
sahf
aas
cmp
ds
aaa
shr
mov
mov
jge
xchg
daa
dec
loopne
mov
mov
xor
push
daa
stos
adc
aas
jmp
mov
inc
repz
and
or
int3
in
(bad)
adc
(bad)
std
sbb
ror
iret
jmp
sbb
cmc
jmp
(bad)
push
stos
lods
call
xor
dec
jmp
push
fdiv
and
inc
push
push
xor
adc
js
loop
out
mov
dec
dec
dec
popa
or
mov
inc
jbe
mov
jmp
or
mov
mov
xchg
lea
cwde
xchg
pop
xchg
fld
fstp
ins
int
xor
outs
stos
push
sbb
jle
push
mov
lahf
(bad)
int
or
pop
in
xor
aas
jne
aas
(bad)
cld
add
out
das
test
sub
rcr
je
leave
retf
sahf
cmps
and
mov
jmp
retf
mov
and
dec
stc
mov
fucomi
test
jecxz
lods
lods
pop
ds
jl
(bad)
cmp
ja
xchg
xlat
dec
aaa
xlat
fwait
cmc
cdq
(bad)
xor
mov
(bad)
cmp
jg
dec
cmp
neg
(bad)
xor
mov
lock
jmp
popa
xchg
pop
sub
xor
mov
mov
das
fild
mov
jmp
push
sti
imul
push
aaa
lods
aad
push
pop
in
fisttp
in
lds
inc
mov
stos
mov
cmp
mov
mov
in
aas
pop
lds
addr16
pop
dec
repz
fisub
xor
int
xor
pop
out
sbb
pop
addr16
inc
out
mov
adc
cs
(bad)
dec
jecxz
icebp
lods
dec
ret
test
ds
imul
pop
adc
gs
ret
xchg
adc
popa
add
and
cmp
xor
adc
xchg
shl
inc
xchg
mov
dec
jmp
mov
outs
fs
cmc
pop
icebp
rcl
shl
or
aaa
ret
adc
shr
mov
or
push
or
mov
mov
rcr
ins
cld
fmul
jne
ss
outs
sub
test
je
dec
add
rep
push
mov
icebp
cmp
out
imul
stos
xchg
jno
aad
push
ja
mov
add
add
xchg
and
test
out
jmp
out
mov
dec
add
mov
xchg
(bad)
adc
retf
movs
jnp
pop
enter
jp
sub
cmp
repnz
mov
and
dec
sbb
pop
cmp
cmps
pop
cmp
or
scas
dec
in
mov
nop
stos
jle
xlat
ds
cli
stos
test
mov
sub
cmp
pop
ins
ret
cmps
add
call
xor
inc
mov
ficomp
jp
adc
leave
pusha
xchg
add
sbb
inc
sbb
(bad)
nop
in
shr
ss
xor
add
clc
jmp
btr
jae
add
imul
mov
jno
and
mov
adc
je
mov
sub
jle
or
and
out
std
stos
jmp
jo
xor
pushf
push
jne
mov
or
mov
dec
ja
sub
clc
add
clc
dec
xchg
aaa
fcmovnbe
and
inc
fisttp
(bad)
fild
xchg
out
inc
outs
scas
inc
adc
stc
scas
in
adc
sbb
retf
dec
sub
add
lahf
gs
mov
shr
cmp
(bad)
hlt
dec
jns
and
dec
push
adc
out
and
jb
push
rcl
ins
and
xchg
pop
xchg
cdq
pop
mov
jge
stos
mov
add
dec
retf
(bad)
jp
mov
das
enter
rcl
hlt
and
pop
rcr
pop
mov
test
test
rol
xor
repnz
lods
call
arpl
test
push
push
int3
inc
jle
inc
pop
fistp
jg
xchg
repz
mov
mov
mov
pop
mov
mov
std
movs
sbb
add
mov
pop
or
jb
dec
dec
shl
call
aam
push
cmps
sub
nop
(bad)
push
rcl
cmp
stos
pop
les
pop
xor
cmp
mov
pop
inc
out
leave
push
pop
cld
hlt
pop
sti
fdivr
jae
imul
jnp
aam
cli
lock
sbb
pop
shr
sub
and
ficom
mov
mov
into
in
dec
stos
sbb
adc
lahf
aas
dec
shl
cmp
push
or
std
inc
and
inc
sar
das
cdq
dec
loope
test
mov
jns
scas
xchg
stos
pop
sbb
ficomp
add
hlt
or
imul
lods
pop
nop
gs
data16
hlt
mov
mov
push
addr16
test
inc
mov
shl
xor
and
fild
mov
shr
pop
arpl
and
loope
movs
pusha
sub
call
mov
xchg
out
ss
bound
adc
movs
mov
and
sub
aas
mov
jmp
dec
dec
and
sbb
ficom
pop
inc
shr
mul
or
cmp
jecxz
fdiv
xor
xor
sbb
movs
push
cld
mov
pushf
xchg
pop
sbb
test
mov
mov
rol
dec
lods
or
mov
sbb
int3
and
mov
and
dec
inc
repnz
in
sub
aam
enter
xchg
push
push
sbb
rcr
(bad)
clc
ffree
sar
lds
cmps
iret
push
sbb
sti
test
lods
sbb
adc
xor
sub
out
ret
and
fs
test
icebp
inc
scas
jns
cmp
xchg
push
jae
repz
mov
repnz
mov
mov
xor
aaa
xor
std
into
icebp
out
lds
or
aam
sub
dec
push
and
mov
and
xor
loop
and
in
jb
mov
jg
xchg
stc
jp
mov
in
loope
sahf
sub
lahf
or
push
loop
add
int
pop
aaa
clc
jle
mov
pop
lock
push
cli
pop
sti
sti
sti
int3
push
(bad)
cmp
cmp
pop
data16
push
retf
lock
into
(bad)
sbb
out
sahf
adc
and
push
jl
pop
retf
jmp
dec
ret
add
lods
add
iret
nop
sbb
lock
cmp
or
push
mov
xor
popf
into
lock
stos
popf
into
mov
retf
gs
and
cmp
out
dec
popf
test
xchg
test
adc
mov
cmp
inc
inc
in
sbb
xor
(bad)
clc
bound
int
pop
sub
xchg
xlat
cmp
push
loopne
mov
mov
rcl
adc
dec
ss
int3
mov
cmp
push
fisub
sahf
cmp
inc
or
mov
adc
daa
adc
out
fldenv
push
push
scas
in
pop
lods
fadd
aaa
xor
(bad)
and
jno
bound
jb
jae
into
leave
sbb
cmp
lea
sbb
cmp
sbb
push
test
fisubr
inc
pop
test
sbb
mov
push
jno
jg
retf
push
(bad)
adc
dec
jb
fbstp
test
mov
dec
ja
push
loopne
push
cs
rcl
sbb
add
adc
aaa
push
xchg
cmps
xchg
stc
or
or
or
and
jmp
push
loopne
push
fistp
sbb
enter
movs
dec
cmp
mov
loope
dec
outs
data16
or
mov
ss
idiv
repnz
(bad)
das
add
(bad)
mov
push
shl
pop
retf
retf
pop
fpatan
stos
mov
cs
int3
inc
sbb
pop
(bad)
xor
mov
mov
scas
mov
push
cs
inc
cdq
and
movs
adc
mov
shl
lock
xchg
jbe
sub
mov
js
xchg
xchg
rol
fnsave
mov
test
icebp
cwde
mov
sbb
outs
cmp
inc
pop
je
jge
pop
(bad)
lds
jl
(bad)
fwait
into
mov
adc
lahf
cdq
sbb
push
dec
xchg
scas
loopne
out
dec
(bad)
push
in
out
adc
mov
std
sbb
cmp
(bad)
mov
dec
and
add
(bad)
pop
mov
mov
jne
mov
pop
jnp
je
mov
je
or
iret
or
int
and
cmc
lds
sub
lods
int
mov
retf
pop
pop
mov
dec
jae
xchg
inc
mov
sub
ss
push
mov
jecxz
leave
mov
adc
pop
mov
xor
rol
pusha
jo
aam
dec
push
(bad)
push
jo
and
adc
ja
pop
test
pop
lahf
sbb
mov
xor
ja
sub
aam
dec
xchg
jns
lods
sub
sbb
imul
pop
cwde
(bad)
stc
mov
inc
inc
inc
inc
iret
into
pop
outs
(bad)
sbb
adc
xor
dec
call
adc
pusha
pop
mov
mov
pop
inc
push
mov
push
or
not
xchg
dec
jns
scas
pop
xor
sub
or
dec
pop
(bad)
cmc
xchg
jbe
push
call
mov
cpuid
or
sar
repnz
fisubr
les
dec
outs
(bad)
es
mov
push
dec
enter
scas
push
retf
xor
rcl
xchg
xor
leave
fs
fwait
sbb
js
mov
xor
xchg
jecxz
xor
pop
(bad)
dec
push
jl
xor
adc
push
xlat
jle
sbb
xchg
sbb
cmp
imul
mov
cwde
adc
and
es
out
aas
jle
cmc
mov
pop
xor
jecxz
fdiv
mov
aam
daa
in
push
push
mov
push
mov
dec
xchg
lods
ins
leave
sub
out
and
scas
popf
jno
rcr
jb
ret
adc
imul
push
jnp
imul
jb
cdq
mov
cmp
cmp
out
dec
mov
pop
push
daa
sub
jl
iret
pop
hlt
pop
mov
jmp
mov
pop
push
add
ss
pop
js
int3
inc
sti
sbb
sbb
data16
jbe
jmp
loop
dec
and
mov
lock
pop
shl
cld
jle
mov
and
sbb
xor
ds
lea
sahf
cs
jg
aad
pop
dec
inc
add
cmp
mov
mov
mov
push
sub
cs
jle
lea
jmp
sub
jae
push
mov
scas
les
sbb
in
adc
push
jne
psllw
jmp
jl
or
scas
or
in
pop
add
push
ficomp
xchg
int
sbb
fwait
cmc
mov
jle
pop
jmp
retf
push
or
push
lds
in
dec
mov
mov
xor
mov
aaa
jne
pop
test
lea
repnz
je
sbb
mov
arpl
sar
jle
retf
punpckhbw
jmp
mov
(bad)
cmps
jbe
cmps
out
outs
addr16
adc
xchg
mov
sub
xor
xchg
aam
movs
fwait
xor
or
dec
push
or
cmps
push
xchg
push
mov
icebp
inc
arpl
aaa
jl
dec
pop
jle
mov
cwde
push
pop
dec
sbb
into
mov
movs
pop
pop
ror
mov
faddp
mov
repnz
cmc
xchg
pop
and
mov
out
push
inc
out
jns
sub
int
(bad)
fist
stc
test
and
or
cld
pop
pusha
add
jnp
dec
or
fistp
pop
mov
pop
lahf
sbb
dec
xor
dec
push
repnz
test
ds
int3
inc
out
mov
shl
push
dec
xor
das
std
add
fimul
adc
lea
call
mov
mov
cmp
fidivr
test
fiadd
scas
scas
es
mov
inc
mov
js
mov
(bad)
cmp
fcmovnu
jmp
out
add
and
push
mov
jae
sti
lea
jmp
or
xchg
in
imul
xchg
enter
mov
xchg
mov
das
and
push
xor
repz
ret
dec
jno
sub
jns
in
jnp
das
mov
call
(bad)
lock
outs
mov
jmp
cs
jno
stc
xor
test
shl
mov
fwait
sub
outs
ror
mov
inc
fwait
ins
(bad)
jnp
xor
call
pop
aas
mov
(bad)
cmps
xchg
or
jno
daa
xlat
test
pop
fstp
cmc
test
xor
sbb
pop
add
(bad)
frstor
les
imul
and
arpl
inc
enter
push
cmps
shl
push
std
pop
popa
pop
push
fcmovb
aad
cmp
mov
push
fs
push
mov
in
sbb
mov
jb
sbb
mov
mov
cmp
adc
xchg
test
fnstenv
enter
xchg
cmp
jne
scas
mov
push
xor
test
cs
scas
and
call
nop
xchg
pop
idiv
cmp
call
jge
inc
adc
mov
mov
mov
jne
daa
ret
je
lods
fild
mov
ror
aad
retf
leave
or
outs
in
aaa
dec
scas
or
inc
rcl
or
mov
xor
mov
mov
cli
xor
neg
dec
jbe
(bad)
or
xor
pop
pop
mov
add
outs
jnp
mov
and
cwde
sub
outs
or
dec
shr
rol
jne
mov
cmp
sbb
and
sub
cwde
cmc
jne
mov
add
jns
out
dec
jl
stos
dec
adc
ret
xchg
fiadd
inc
in
add
test
inc
icebp
rol
pop
mov
fisub
mov
outs
jb
cmps
in
aad
and
push
mov
pop
fucomp
clc
test
cmp
outs
jp
cmps
inc
xchg
jno
fmul
(bad)
mov
xchg
add
imul
lods
imul
scas
sbb
jns
(bad)
test
ins
ins
inc
add
add
fistp
xchg
fld
inc
jbe
push
push
cli
fwait
sahf
pop
lods
enter
mov
ja
lea
repz
lea
jne
in
push
sub
jne
jnp
daa
std
xchg
hlt
sbb
mul
pop
jl
and
(bad)
iret
retf
mov
pop
or
fdivp
or
jae
enter
stos
mov
out
call
push
cmp
xlat
loop
jl
clc
stos
jg
(bad)
dec
inc
outs
sub
in
push
shr
addr16
loope
dec
mov
add
test
and
push
xchg
cdq
pop
push
ds
push
mov
test
popa
jmp
inc
gs
dec
fsub
jmp
push
pop
xor
and
sahf
mov
xor
lds
jo
repnz
repz
outs
lea
sti
mov
push
inc
dec
dec
dec
nop
sbb
xor
in
dec
push
jl
dec
xor
and
xor
or
ret
dec
xchg
mov
dec
fst
lock
jmp
sub
int
cmp
pop
mov
add
(bad)
xor
imul
in
std
jmp
mov
repz
and
sbb
lods
stos
mov
add
fild
add
pusha
loop
mov
mov
call
cdq
clc
dec
pop
pop
in
gs
fisttp
xchg
addr16
mov
fdiv
test
and
in
mov
adc
jge
sbb
repnz
mov
test
and
call
fcmovne
jle
repnz
jecxz
lahf
xchg
das
mov
dec
push
fdivr
jg
dec
jns
push
pop
dec
lods
stos
and
addr16
enter
(bad)
imul
repnz
cli
mov
retf
cmp
sbb
mov
mov
mov
pop
(bad)
xchg
jecxz
sbb
js
dec
lock
adc
ins
arpl
mov
adc
popf
jne
ins
pop
push
cmp
or
int
out
jnp
shl
cli
cmp
cmps
cmps
out
dec
sbb
das
repnz
sub
mov
jmp
shl
sbb
scas
cmps
(bad)
sti
test
mov
push
cmp
(bad)
sar
cmp
cmp
imul
cdq
movs
or
les
adc
out
adc
mov
sub
pop
fcomp
pop
jecxz
gs
ret
cwde
fsubr
push
imul
popf
jmp
ja
push
inc
or
jbe
stc
gs
pop
inc
mov
adc
pop
push
mov
imul
or
ret
push
in
pop
cdq
stos
(bad)
cmps
jl
pop
push
jmp
xor
mov
mov
sti
stos
popa
xchg
ins
push
ds
ins
mov
iret
mov
mov
cmp
je
repz
inc
sub
movs
gs
mov
jbe
(bad)
in
xor
push
mov
fisubr
cmp
mov
mov
mov
rcr
pop
and
movs
lods
push
cmp
dec
fdiv
call
push
aas
fbld
push
fs
aas
or
rcr
(bad)
pop
in
fiadd
jbe
and
xlat
adc
sub
add
sub
add
jl
repz
inc
imul
jmp
int
sbb
mov
adc
mov
rcl
mov
xor
push
push
lahf
or
inc
sub
sub
jae
sub
jecxz
cmp
mov
xor
mov
rcr
jl
mov
xchg
je
xchg
stc
mov
fwait
push
and
lods
loop
push
test
ds
sub
xor
popf
xchg
sar
out
jp
jg
inc
add
dec
xchg
and
mov
js
movs
push
pop
xor
leave
inc
cmp
adc
mov
nop
je
sub
cmp
sub
aad
fnstsw
and
int3
or
cmp
bound
outs
pop
mov
aam
outs
jae
loop
xor
div
xor
arpl
sub
push
xor
adc
sub
mov
movs
push
popa
push
fadd
add
dec
mov
dec
adc
mov
cmp
and
leave
xor
jecxz
and
in
jnp
adc
inc
push
paddq
in
sbb
adc
dec
ds
mov
retf
stos
out
sti
mov
sbb
sub
(bad)
into
dec
pop
call
adc
test
adc
xor
pop
push
mov
add
mov
sub
(bad)
and
(bad)
scas
std
ss
sbb
das
outs
cmp
pop
(bad)
loop
pop
sahf
mov
jle
sub
stc
pop
test
xor
cmp
xchg
push
fldln2
mov
sub
mov
cmp
add
mov
addr16
test
sar
(bad)
pop
stc
mov
unpcklps
sbb
sub
dec
jl
mov
scas
mov
add
jmp
int3
inc
sbb
out
or
push
scas
mov
xchg
or
jle
mov
js
jns
stos
mov
add
call
jb
lock
outs
sbb
mov
push
cli
fisttp
sub
cmps
es
sbb
outs
jmp
xchg
or
das
push
mov
les
nop
mov
mov
movs
adc
adc
pop
faddp
and
cmps
pop
outs
add
ret
inc
xchg
mov
push
cmp
jl
clc
fcmovnu
cdq
xchg
pop
dec
js
out
jecxz
dec
adc
push
push
fcmovnb
stc
push
adc
in
shl
out
fdivr
sub
mov
lods
dec
or
push
pop
sar
mov
cli
clc
clc
add
push
(bad)
or
lahf
mov
bound
adc
popa
aas
loop
jp
sub
test
sub
ret
cmp
outs
cmps
xlat
mov
dec
das
bound
enter
xchg
dec
aaa
pop
xchg
sub
jae
add
fwait
cmc
lods
cmp
mov
pop
adc
outs
sub
dec
iret
mov
lock
sbb
or
add
int3
pop
leave
xchg
cwde
sbb
pop
lock
dec
std
push
add
shr
shl
dec
fwait
dec
ret
mov
xchg
(bad)
sbb
addr16
clc
cld
adc
xor
add
das
adc
aas
shr
cli
xor
cmp
mov
sbb
mov
xchg
fsubr
cmps
pop
(bad)
jge
sti
pop
mov
push
rcpps
test
xchg
or
mov
dec
jg
(bad)
(bad)
stos
inc
sbb
test
xchg
adc
inc
or
add
icebp
arpl
loope
pop
cwde
xor
cmp
sub
pop
lahf
out
out
add
xchg
adc
repnz
add
or
inc
out
sbb
(bad)
pop
pusha
(bad)
test
stc
movs
pop
int
test
jb
icebp
add
mov
ficomp
xchg
repnz
retf
scas
imul
xor
es
jo
call
fmul
mov
xor
or
sub
leave
(bad)
and
call
xor
pop
inc
and
push
mov
(bad)
ins
sbb
popf
imul
dec
pop
inc
(bad)
aaa
xor
mov
and
fimul
sub
and
test
stc
xchg
xchg
call
fistp
stos
loopne
mov
inc
mov
into
push
call
or
jp
push
cwde
test
enter
dec
adc
fmul
inc
in
xchg
cmp
ja
(bad)
repz
adc
pusha
(bad)
lea
ret
int3
add
pop
mov
xchg
jmp
push
sub
pop
dec
cld
test
adc
scas
mov
out
inc
pop
stc
mov
jl
call
add
ja
mov
inc
loop
cmp
int3
sub
call
pop
xor
jp
out
xor
cdq
sbb
xor
cmp
mov
xchg
xchg
pop
inc
pop
pop
lods
sub
mov
xchg
ds
xchg
sub
pusha
fadd
sbb
sbb
stos
cmp
std
ins
ins
dec
push
clc
sub
cmp
push
mov
pop
sbb
push
sti
jo
int
sbb
cmp
aaa
sbb
in
jecxz
xor
xchg
sub
fwait
xchg
stc
dec
sbb
cwde
xchg
push
and
sub
inc
gs
aam
in
xchg
jmp
test
mov
add
retf
ins
add
(bad)
push
pop
nop
cmp
stos
outs
scas
or
add
cs
dec
retf
(bad)
stos
mov
mov
mov
and
ficom
push
pop
push
jecxz
dec
int
into
fbld
cmc
rol
dec
in
jl
mov
cmps
push
popf
xor
add
in
add
dec
(bad)
cmps
sbb
xchg
test
and
xor
cmc
xor
sbb
ins
add
aad
(bad)
dec
popa
int
movs
nop
call
jl
xor
sub
fbld
mov
add
dec
sub
push
ret
cmp
stos
mov
sub
vpermpd
push
pushf
mov
pusha
mov
add
push
push
mov
mov
imul
fnsave
mov
dec
fmulp
mov
mov
stc
push
sub
(bad)
mov
jnp
dec
mov
repz
cdq
retf
ret
ror
ja
in
loopne
mov
fisub
test
cs
out
mov
rcr
push
retf
pushf
jnp
cmp
xor
inc
aas
dec
mov
inc
lea
sub
cmps
jns
out
test
out
mov
inc
std
ret
fnstenv
das
dec
jo
scas
fisub
cmps
fnstenv
cdq
or
jb
mov
add
inc
lds
sbb
cmp
pop
and
out
stc
cmp
or
ror
mov
mul
repnz
stc
sbb
ret
add
xor
jns
es
mov
adc
leave
inc
pop
add
cli
in
sub
clc
or
inc
lds
aad
jl
xor
ins
or
mov
mov
mov
mov
jnp
aaa
push
push
loop
and
cmp
call
add
pop
shr
arpl
jmp
(bad)
mov
ror
pop
out
add
stos
or
push
mov
mov
inc
xchg
fs
ins
sbb
fcmovnbe
jb
pusha
inc
and
(bad)
in
pop
adc
adc
imul
ss
inc
mov
gs
xchg
es
test
je
push
dec
inc
inc
mov
inc
test
inc
pop
stos
push
sbb
push
push
dec
sub
jb
out
push
push
add
enter
retf
aaa
cmps
aam
ret
push
shl
mov
fld
cmp
mov
inc
jp
scas
push
test
jns
dec
jge
add
mov
in
mov
push
jae
(bad)
and
sbb
mov
push
stos
fs
ins
push
cli
mov
mov
mov
in
jl
push
and
mov
pop
pop
jle
pusha
dec
jns
(bad)
shl
inc
test
mov
test
xchg
mov
jno
aaa
or
out
inc
jne
add
xor
mov
sub
data16
cli
xchg
sti
inc
pcmpgtd
sar
xchg
jl
loope
sub
stc
xchg
mov
outs
add
mov
sbb
jg
xor
icebp
or
cmps
(bad)
cmp
mov
push
ss
xor
inc
and
ins
jns
mov
idiv
test
jg
outs
repz
lock
(bad)
and
das
inc
out
pop
cld
xor
icebp
and
pop
inc
dec
push
or
adc
push
jle
sbb
imul
mov
xchg
bound
pop
ret
shl
cmp
in
mov
sub
pop
mov
in
nop
loop
push
or
rcl
mov
bnd
call
movs
imul
test
cdq
scas
pop
je
cmc
xor
rcr
add
pusha
xor
jmp
push
pushf
out
add
in
popf
repz
push
in
mov
fwait
push
and
mov
data16
arpl
xor
jmp
mov
jmp
pop
rcl
dec
sbb
dec
cmp
test
push
jnp
inc
add
(bad)
loopne
rol
push
jno
sahf
add
popf
sbb
mov
sti
sbb
pop
sbb
xchg
xor
or
ja
jle
das
std
sub
adc
adc
add
addr16
repnz
in
out
adc
out
js
je
jl
xlat
fcomp
mov
cmps
jle
adc
loopne
lock
(bad)
lock
xor
mov
jne
pushf
in
sbb
fs
ss
add
add
jmp
les
out
daa
in
loop
adc
les
into
cmps
jb
push
xor
jnp
ret
sbb
je
or
shl
aad
fcomi
xchg
cs
pop
push
dec
shr
repnz
gs
ins
xchg
ins
popf
out
adc
pop
dec
sbb
loopne
mov
ja
push
mov
mov
mov
inc
inc
std
push
cmps
test
test
xor
jge
pop
and
dec
inc
jnp
fs
adc
stos
cmps
cli
add
(bad)
repz
sub
das
push
in
hlt
add
fist
fcomp
push
push
inc
cmp
xchg
sbb
xor
or
daa
push
fcomp
pop
pop
cmps
pushf
xchg
sar
(bad)
jnp
mov
mov
not
inc
adc
std
sbb
cmp
fst
sub
sbb
jnp
jp
add
enter
icebp
addr16
in
les
add
jge
mov
popa
fsub
adc
in
out
push
cmp
dec
shr
cmps
cmp
push
pop
imul
mov
bound
mov
xor
out
push
fwait
ror
xchg
test
les
pop
add
cmps
ds
mov
(bad)
dec
and
mov
rcl
repnz
std
pop
mov
pop
daa
dec
dec
adc
ss
in
jno
(bad)
das
xor
sbb
xor
into
sbb
pop
jne
jp
mov
jno
xor
jbe
je
mov
jmp
sbb
repnz
lock
sub
sahf
push
push
mov
dec
movs
xor
jo
xchg
push
add
pop
adc
pop
xor
push
or
or
cs
retf
jmp
dec
mov
inc
adc
or
pop
ja
mov
pop
add
aam
retf
das
inc
jno
push
sbb
pop
or
xor
adc
in
out
mov
lods
xchg
push
pop
loop
js
and
cli
fadd
xchg
sbb
les
xor
adc
lock
mov
xor
cmp
sbb
adc
aas
adc
push
sub
jnp
jo
cmp
bound
js
mov
pop
in
mov
loope
ficomp
push
cwde
neg
sahf
bound
in
adc
push
jmp
mov
adc
mov
bound
(bad)
pop
enter
mov
mov
ja
or
ret
mov
fdiv
jns
loopne
ja
add
cmp
cmps
clc
cmps
mov
mov
inc
cli
xor
sbb
loopne
push
push
cdq
loope
sar
adc
in
dec
adc
aaa
push
(bad)
call
int3
mov
push
jp
jnp
nop
retf
sub
jns
add
je
cmps
push
sub
add
icebp
out
mov
sbb
in
sbb
dec
mov
jnp
movs
adc
xchg
push
push
push
sub
cmps
lods
sub
and
aaa
sub
xor
push
add
aaa
fist
xchg
adc
cmps
rcl
repz
mov
mov
mov
setne
leave
dec
ja
mul
cmps
imul
inc
add
(bad)
ja
sar
popf
xor
jl
push
dec
pusha
and
jno
iret
push
mov
sbb
pushf
cmp
dec
sahf
das
jp
ror
cmps
cmp
mov
push
mov
sub
xor
jge
dec
cli
jmp
jg
in
pop
sbb
data16
pop
mov
ins
jl
bound
push
jno
pusha
cmps
clc
es
sbb
loopne
ret
imul
ins
jl
cmp
cmp
cmp
rcr
pop
shl
rcl
sbb
inc
out
cmp
pop
jne
mov
fsub
mov
jne
or
and
mov
mov
push
or
sub
ja
sbb
js
in
pusha
mov
cmc
icebp
add
sbb
pop
cmp
popf
jne
mov
call
arpl
div
arpl
call
xchg
ret
jecxz
mov
adc
mov
cmp
scas
cdq
movs
cmps
jmp
push
push
rcl
jmp
jp
adc
cmp
mov
jbe
mov
sti
adc
or
jnp
mov
fs
mov
mov
sahf
es
clc
rcl
fistp
xchg
jge
gs
mov
dec
add
mov
jmp
sub
cmp
and
mov
sbb
mov
adc
inc
out
sar
cs
mov
push
jno
leave
jns
cld
sub
dec
add
(bad)
mov
loop
pusha
jecxz
fst
mov
adc
adc
jmp
jae
in
repnz
xchg
stos
xchg
jo
mov
mov
xor
gs
fstp
mov
mov
pop
add
push
ret
cld
xor
cmp
add
xchg
pop
scas
pop
shl
sbb
jecxz
and
popa
pop
loop
aaa
mov
jp
dec
push
ror
sbb
inc
add
(bad)
loopne
fst
sbb
(bad)
cmp
jmp
test
mov
pop
jo
es
add
jge
dec
add
mov
sub
aas
jge
inc
in
cs
xchg
pop
retf
arpl
sbb
jo
enter
(bad)
jnp
lods
sbb
sub
mov
mov
push
xchg
add
test
push
cmps
jnp
jns
lahf
pop
stc
xchg
fcom
bound
popa
(bad)
xor
jmp
xchg
cmp
pop
mov
sub
fnstenv
push
jne
fcom
es
jns
hlt
sbb
and
mov
sbb
jno
fwait
bound
inc
(bad)
xchg
adc
fnstsw
sbb
mov
sbb
sub
inc
xor
mov
cmps
fldenv
or
mov
mov
gs
or
xor
movs
ret
fld
in
xor
xchg
icebp
stos
retf
xor
dec
test
shl
addr16
xchg
jne
ss
sub
sahf
lahf
out
xor
xchg
icebp
dec
or
dec
fld
dec
dec
add
(bad)
stos
fist
sub
push
cmp
and
mov
mov
movs
pop
bound
out
std
xchg
xor
in
retf
cdq
ja
push
retf
daa
rep
sbb
adc
js
cmp
pop
mov
sar
pop
mov
inc
ss
(bad)
mov
ja
(bad)
mov
jp
push
stc
jnp
xchg
jge
das
arpl
sub
call
ret
mov
sbb
retf
xchg
inc
jg
sbb
adc
or
(bad)
sbb
(bad)
data16
out
aad
mov
cdq
stos
xchg
cmp
sbb
repz
and
mov
ja
call
xor
cmps
sub
inc
adc
pop
dec
loopne
lds
xor
pop
scas
cdq
and
dec
inc
movs
sahf
cmps
sub
out
add
sbb
js
cmp
mov
ja
mov
test
arpl
pop
mov
sbb
sahf
dec
mov
in
xchg
addr16
lds
add
enter
cwde
cmp
adc
xchg
and
mov
xor
leave
arpl
mov
adc
rol
push
sub
inc
sub
in
enter
repnz
sar
pop
das
and
mov
mov
push
pop
idiv
sub
xchg
push
push
cmp
ret
int3
jle
cmp
inc
call
dec
or
xchg
sbb
fisttp
and
inc
jns
aas
add
test
xlat
mov
dec
out
push
dec
cmps
and
xor
jno
jbe
pop
xor
sbb
mov
vmovq
cld
dec
pop
sbb
pop
add
push
add
aaa
in
enter
sub
xor
jne
sahf
shl
hlt
dec
jnp
inc
cmp
out
adc
arpl
fs
push
jo
add
retf
pslld
sbb
jne
sub
or
or
call
aam
lea
jmp
rol
aam
je
pop
fisttp
mov
lahf
out
test
sub
shr
hlt
mov
inc
std
xlat
stos
xor
dec
xor
pop
test
xchg
shl
or
and
hlt
sbb
ret
mov
aam
fldcw
cmp
jmp
jnp
test
in
aad
int
cmp
out
lods
or
shr
or
test
mov
sbb
xchg
xchg
add
pop
add
daa
popf
mov
in
cmp
sub
ret
mov
sub
or
ins
out
push
jb
inc
jnp
cmp
mov
icebp
ins
sub
iret
and
test
adc
and
clc
xor
pop
or
push
mov
cmp
pop
inc
xor
cdq
pop
adc
xchg
adc
lods
cmpps
shl
shl
add
and
xor
or
es
mov
push
and
sahf
jae
js
push
dec
mov
js
ror
mov
(bad)
or
mov
xor
adc
dec
add
hlt
pop
test
cmp
xchg
cs
retf
mov
repnz
xor
jmp
xor
(bad)
and
pop
adc
inc
fisub
push
lahf
sbb
jecxz
mov
sub
adc
or
xor
sbb
jmp
or
xchg
xchg
xor
mov
cdq
pusha
dec
xchg
psubusw
push
sbb
pop
vpcmpeqd
push
mov
dec
cli
(bad)
ins
adc
jg
push
cmp
cdq
pop
fisttp
inc
ror
test
push
add
rcr
out
sub
sar
mov
sbb
xchg
shl
in
pop
fs
mov
adc
pusha
mov
(bad)
jmp
xchg
mov
stos
mov
jbe
mov
in
(bad)
xor
dec
dec
aas
sti
sahf
push
sbb
bound
mov
jo
arpl
int3
push
xor
xlat
movs
jmp
rcr
or
sub
lea
fcomp
adc
or
mov
ret
jge
ss
sbb
(bad)
outs
fnstsw
fldenv
jmp
add
rol
dec
pop
(bad)
push
shl
dec
stos
test
mov
popf
dec
mov
scas
mov
jae
icebp
adc
add
sub
clc
retf
scas
push
pusha
lahf
xchg
mov
jnp
sbb
in
mov
retf
out
or
fldenv
pop
or
(bad)
push
retf
mov
(bad)
in
sar
cdq
xchg
adc
add
xchg
mov
mov
jmp
mov
call
jmp
js
mov
and
jnp
push
out
mov
cmp
std
daa
cdq
xor
push
into
ins
dec
jne
js
sti
and
and
and
out
fiadd
in
push
ret
or
cmp
rol
adc
mov
scas
fs
jg
cmp
jge
repz
jge
and
cmp
pop
pushf
dec
mov
cmc
or
popf
inc
(bad)
hlt
icebp
test
lahf
das
fst
cwde
test
mov
and
xor
mov
inc
stos
movs
outs
add
(bad)
daa
call
cmp
mov
jge
and
or
add
cli
addr16
jmp
sub
lods
push
add
sub
pop
sub
xchg
sub
mov
ficom
push
jmp
and
sbb
and
(bad)
in
rcl
inc
retf
jbe
jmp
(bad)
jl
inc
out
xor
pop
out
ins
arpl
(bad)
or
retf
rol
mov
stc
lea
pop
jge
cmps
jno
pop
loope
sub
xchg
mov
and
xchg
ss
add
ficom
mul
dec
int
scas
ins
or
xor
sar
(bad)
mov
jge
int3
test
dec
les
(bad)
mov
or
jecxz
retf
aas
daa
shr
mov
pusha
or
imul
dec
xchg
scas
loope
clc
fucomi
mov
or
lahf
fs
lock
mov
icebp
ds
xor
mov
in
xor
pop
movs
inc
pusha
sti
mov
cmp
or
neg
mov
mov
xchg
daa
jmp
jg
shl
fwait
js
call
mov
fisub
dec
lock
cmps
jg
in
inc
mov
movs
(bad)
lock
scas
jnp
xchg
js
pop
dec
loope
inc
push
or
mov
out
push
sub
xor
add
or
inc
aam
or
mov
mov
sahf
aad
in
sbb
add
mov
(bad)
sti
ret
inc
out
frstor
adc
sub
lds
aad
aad
clc
aad
imul
add
pop
mov
push
adc
xor
loop
add
mov
fdivrp
xchg
sub
les
sub
add
xor
mov
xor
sub
sbb
cwde
nop
sbb
imul
mov
int
jb
nop
mov
pop
icebp
sbb
in
cmp
push
xchg
ins
or
lea
int
and
push
jge
push
cmps
lods
in
imul
(bad)
mov
enter
xor
or
adc
xchg
add
ins
mov
or
pop
in
or
iret
sbb
pop
jo
sbb
lea
fstp
test
mov
xlat
push
xlat
jmp
sbb
stos
add
cli
in
xchg
int
adc
dec
je
(bad)
pop
jp
xchg
jbe
cmp
lock
cmp
jae
mov
mov
xchg
jb
sti
sahf
sbb
fldenv
push
cmp
je
mov
ins
daa
inc
dec
and
pop
sub
push
jle
dec
je
aad
aam
mov
mov
and
push
(bad)
fdivr
fcmovnu
or
adc
sar
pop
mov
icebp
mov
inc
adc
iret
enter
jo
inc
(bad)
(bad)
mov
loope
jnp
push
aad
or
push
sub
sbb
outs
pusha
stc
push
xchg
cmp
out
into
sbb
xchg
push
mov
adc
dec
jmp
fwait
cmc
in
data16
data16
adc
cmps
lods
sbb
inc
movs
mov
iret
xchg
inc
dec
movs
add
sar
cwde
add
(bad)
push
and
push
push
mov
movs
pop
cdq
clc
cmc
xor
scas
jp
(bad)
pushw
jb
lods
dec
imul
popa
xchg
in
xchg
adc
sbb
mov
and
stc
push
pusha
sbb
push
push
pushf
sar
mov
stos
push
(bad)
jle
add
push
inc
out
mov
or
sahf
pop
mov
push
aad
jo
lods
jge
jecxz
pop
js
push
xor
js
push
out
inc
mov
in
ja
or
fadd
inc
out
aad
aas
arpl
jmp
sub
pusha
inc
sub
cmp
cwde
lods
xchg
test
mov
cmps
rcl
mov
xchg
outs
int3
jg
xchg
xchg
sub
cld
retf
dec
fs
mov
int
cmovbe
into
(bad)
(bad)
sub
adc
xchg
in
data16
adc
sub
fs
and
sbb
lahf
jg
call
inc
mov
fadd
add
call
aad
lock
popf
lahf
push
inc
lahf
adc
mov
pop
add
pop
out
mov
loop
jno
push
lds
sub
push
pop
pop
leave
stos
adc
mov
mov
sbb
dec
gs
push
and
mov
out
loopne
sub
mov
xchg
jno
sbb
ins
into
popf
or
(bad)
cli
or
stos
pop
pop
sti
es
lock
outs
cld
adc
push
out
(bad)
jns
das
das
add
mov
bound
mov
mov
and
rcl
popf
dec
sbb
int
add
lock
in
push
add
mov
ds
sbb
rcl
mov
rol
jnp
mov
je
ins
cmps
mov
bound
pop
dec
mov
pop
push
and
sbb
scas
mov
mov
std
jmp
pop
xchg
fsubr
lods
pop
ins
je
pop
jns
lahf
std
stos
dec
dec
sub
mov
mov
ret
mov
jne
rcl
int
and
add
mov
ret
dec
inc
arpl
test
mov
jp
(bad)
mov
mov
in
pusha
data16
(bad)
dec
adc
jb
imul
and
sub
jns
inc
mov
pushf
inc
mov
mov
ins
mul
rcr
das
cmc
adc
add
mov
shl
ss
in
stc
pop
in
mov
and
or
ficom
pop
mov
xor
sub
div
xor
stos
xor
std
push
inc
push
add
cmps
add
jl
cmp
pop
jge
imul
pusha
mov
cmp
and
adc
outs
push
cmp
push
test
pop
ficomp
jne
jns
mov
test
sub
aam
mov
sub
ins
mov
mov
ror
ins
fild
mov
inc
sub
dec
cli
pop
loopne
sub
nop
cmc
dec
jge
mov
add
call
xor
daa
repz
daa
mov
mov
push
ficom
addr16
sbb
test
mov
shl
iret
cmc
xor
xchg
loope
fild
add
lahf
mov
or
popa
pop
dec
mov
inc
push
sbb
(bad)
iret
es
inc
xchg
pop
dec
xchg
adc
out
inc
jne
int3
sub
in
or
and
gs
call
sbb
adc
test
and
cmp
mov
mov
scas
add
loop
pop
adc
mov
fist
ins
adc
and
jp
add
pop
mov
popa
jmp
retf
dec
xlat
sbb
(bad)
rcl
and
jnp
cmc
adc
mov
inc
sahf
add
adc
mov
fsubr
pop
test
add
(bad)
addr16
cmp
lods
or
fimul
mov
lahf
xchg
push
xor
xchg
(bad)
lahf
sbb
cmp
xchg
push
jmp
xor
sub
push
jne
pop
dec
and
push
xchg
or
out
cmps
and
and
dec
sub
fadd
cwde
scas
cli
out
mov
lahf
out
addr16
movs
ret
test
push
or
mov
and
fimul
mov
sbb
fsubr
fadd
imul
adc
inc
dec
inc
sub
and
sub
jp
ret
sub
sub
and
dec
add
push
mov
(bad)
mov
push
mov
xlat
retf
inc
and
pop
sti
mov
(bad)
push
mov
and
mov
cmps
sbb
sysexit
dec
rol
or
cmp
adc
loop
pop
cmp
dec
and
clc
int3
mov
pop
xlat
test
cmp
pop
js
inc
movs
add
push
mov
fimul
gs
jae
dec
(bad)
jmp
das
out
pop
gs
sub
scas
and
sub
(bad)
sub
lds
push
in
xchg
fmul
lea
mov
sbb
int3
inc
xchg
dec
push
(bad)
ror
add
inc
inc
pop
pop
mov
and
or
cli
jno
mov
inc
adc
hlt
shr
ror
mov
les
in
push
xchg
mov
sub
in
or
loop
push
jmp
repz
xchg
inc
push
xor
mov
inc
js
mov
repnz
in
(bad)
gs
mov
mov
dec
cmp
in
data16
ds
xchg
xor
push
jge
lea
mov
in
rcl
push
dec
int3
enter
int
clc
repz
ret
gs
cmp
jnp
bound
pop
push
xor
mov
mov
outs
mov
cs
sbb
std
pop
or
xchg
xor
je
out
xchg
int
pop
inc
popa
jbe
call
jnp
in
cmc
jns
das
adc
cmp
(bad)
gs
fimul
js
fcom
adc
jl
(bad)
mov
les
jno
imul
repz
sahf
pop
loope
(bad)
repnz
shr
cmp
mov
xchg
jb
fnstenv
xchg
fcomp
mov
inc
inc
jno
idiv
sbb
mov
ficom
cmp
adc
cld
fisub
shl
addr16
adc
jnp
adc
sbb
(bad)
repnz
aas
dec
inc
dec
or
inc
fs
jp
or
or
clc
movs
cmp
jp
test
fist
jp
pop
adc
mov
adc
xchg
inc
ja
sub
int
(bad)
pop
push
movs
out
aaa
and
js
xchg
adc
stos
iret
sahf
lar
jp
adc
pop
in
in
movs
sahf
and
mov
mov
or
test
movs
scas
cmps
push
add
mov
xor
out
xor
mov
retf
mov
xchg
cmp
dec
mov
mov
(bad)
cmp
std
popa
out
sti
cdq
shr
pop
fld
xlat
and
lods
je
adc
pop
rcl
inc
mov
or
pusha
daa
add
xchg
lahf
daa
add
sub
jl
inc
retf
repz
push
jl
add
and
or
out
push
mov
jle
test
hlt
lods
scas
pop
data16
or
stc
and
and
aad
hlt
sub
cmp
mov
lds
nop
out
add
push
add
add
frstor
jmp
adc
call
nop
mov
cmc
cmc
imul
iret
call
retf
int3
xor
mov
dec
jmp
jmp
loop
pop
sti
icebp
fdiv
dec
and
inc
fld
movs
or
or
pushf
or
jecxz
mov
(bad)
fwait
cmc
jnp
sub
sbb
ins
xor
addr16
cmp
fdivr
std
mov
and
xchg
mov
lds
in
(bad)
mov
pop
arpl
mov
inc
xchg
pop
nop
pop
or
in
or
mov
(bad)
mov
andnps
cld
cs
mov
lods
popf
out
outs
xlat
xchg
call
push
push
xchg
sub
jae
dec
out
test
repz
sbb
xchg
or
ror
mov
dec
inc
mov
mov
leave
shl
cmp
aad
movs
movs
inc
out
mov
mov
mov
fmul
xor
rcr
nop
lods
add
mov
hlt
call
ja
fadd
shr
sub
adc
dec
cs
push
les
retf
clc
adc
mov
pop
xchg
out
pop
push
cs
scas
mov
or
std
jmp
cmp
xor
std
mov
dec
(bad)
arpl
jo
xchg
or
sub
dec
imul
lods
stos
test
xchg
jmp
shl
xor
or
sub
inc
xor
stc
xlat
fld
mov
mov
jle
sbb
ja
mov
mov
int
gs
pop
xlat
je
adc
ret
aaa
mov
gs
and
leave
adc
out
cmp
dec
rcr
fld
not
mov
inc
add
xchg
in
out
icebp
repnz
xchg
sub
pop
dec
jb
lock
xchg
pop
ins
stos
mov
add
and
cwde
pop
pop
inc
jmp
xor
push
xchg
xor
les
rcr
fsub
mov
test
outs
(bad)
fild
jecxz
mov
jnp
pushf
rsqrtps
xchg
stc
xor
lock
cwde
fwait
push
mov
(bad)
fdiv
dec
ror
xor
add
push
mov
add
(bad)
or
idiv
je
stos
push
pop
mov
xchg
xor
mov
push
inc
mov
push
cmps
je
xor
jno
xlat
push
int3
dec
(bad)
mov
inc
sub
push
add
call
add
mov
(bad)
arpl
in
or
les
jg
xor
mov
xor
xchg
pop
dec
test
adc
scas
out
imul
sub
(bad)
cld
add
loopne
xlat
mov
mov
jbe
(bad)
shr
push
sbb
scas
and
mov
sbb
cs
xchg
cdq
push
stos
iret
ret
imul
mov
fisubr
xor
inc
fwait
jecxz
push
addr16
mul
lahf
out
and
movs
cmp
mov
call
cmp
mov
int3
push
add
jge
jl
xor
cmps
call
adc
clc
pop
push
mov
or
lahf
xor
fldenv
xchg
repz
aas
(bad)
test
or
rcl
call
cmps
cmp
out
pop
cwde
in
push
stc
jae
adc
lahf
push
pop
mov
or
cs
test
(bad)
jnp
jae
xchg
addr16
stc
cs
mov
data16
(bad)
cld
push
xchg
cmp
pop
pop
in
push
ret
mov
inc
repz
test
fsub
dec
push
ret
imul
movs
inc
(bad)
lahf
mov
arpl
sub
xchg
xor
sub
outs
shl
dec
call
stos
sbb
mov
dec
std
jle
push
test
xor
add
out
cmp
loop
jne
sub
shld
sub
call
es
mov
and
cli
mov
movs
jl
or
add
dec
cdq
(bad)
dec
dec
nop
jmp
bound
imul
out
xchg
jno
in
scas
(bad)
cmp
lahf
movs
cmp
sub
jmp
adc
jmp
or
and
fdivr
(bad)
aaa
xor
or
mov
gs
fcomip
mov
xchg
mov
xlat
xlat
push
das
das
out
out
movaps
(bad)
sbb
sub
lock
fiadd
inc
xor
enter
adc
aaa
fisttp
stos
jo
fadd
mov
adc
adc
push
dec
call
push
and
cmp
(bad)
int3
idiv
cmp
mov
dec
ss
aaa
mov
loopne
push
dec
ins
arpl
inc
or
inc
sbb
mov
mov
ins
fs
clc
mov
xor
adc
fcomp
ins
ror
sbb
xlat
xor
xor
mov
(bad)
cmps
or
xor
dec
push
loop
and
push
jns
push
pop
or
cmovo
cs
inc
mov
adc
leave
xor
cwde
cli
or
xor
jmp
pop
daa
jae
ficomp
pop
call
add
sub
xchg
inc
xor
mul
and
pop
sahf
movs
add
mov
add
bound
loope
pusha
mov
out
jnp
lea
sbb
pop
xchg
mov
or
stc
scas
test
mov
push
nop
inc
sub
push
cmp
xchg
int
push
push
mov
push
aam
add
retf
lds
test
mov
pop
aad
imul
cld
hlt
sub
int3
jl
add
mov
jle
loop
mov
ja
cmps
pop
jge
jmp
out
jmp
xor
scas
sar
push
pop
leave
loope
call
sbb
sub
push
leave
rcl
pop
adc
bound
test
cmp
inc
mov
mov
push
jb
imul
test
xor
push
das
dec
pop
cmp
inc
in
shl
add
maskmovq
not
dec
mov
ficomp
jecxz
and
and
mov
mov
mov
jle
cmp
test
mov
mov
test
mov
popa
xchg
popf
inc
sbb
dec
pop
cmp
cmp
and
dec
lods
pushf
(bad)
sbb
dec
dec
rol
lds
push
push
sbb
imul
xchg
dec
shr
mov
inc
or
in
ja
jg
xchg
pop
mov
sahf
idiv
mov
pushf
stc
xor
fwait
pop
add
or
cmp
fdivr
xor
les
mov
(bad)
aam
(bad)
and
inc
cmp
push
inc
scas
in
sub
mov
ds
scas
or
outs
sub
pop
sbb
enter
(bad)
cmp
(bad)
adc
sahf
sub
sbb
outs
xchg
(bad)
cwde
(bad)
dec
dec
cmc
mov
jne
inc
xor
and
and
sbb
std
add
jge
pop
dec
sub
into
fnsave
(bad)
scas
or
mov
xchg
and
lock
jo
lods
and
dec
popa
sahf
cmps
daa
and
rcl
lds
pop
inc
(bad)
pop
sub
aaa
inc
and
scas
pop
and
mov
dec
jb
fst
(bad)
sbb
test
xor
rcl
cli
out
lock
dec
clc
daa
xchg
mov
push
je
sahf
push
and
stos
icebp
push
nop
cmp
rol
mov
retf
sbb
add
movs
pop
inc
rcr
std
fimul
mov
jp
in
xor
mov
xor
xchg
out
test
mov
mov
xchg
mov
enter
call
ret
dec
xor
rol
retf
add
pop
add
out
mov
clts
mov
movs
scas
mov
push
icebp
push
call
ret
dec
and
push
xchg
add
outs
ror
out
add
pop
enter
(bad)
push
add
div
dec
iret
loop
sahf
in
and
aaa
pop
arpl
pop
fisttp
iret
in
jmp
mov
xor
xchg
jp
push
mov
and
in
sbb
adc
add
push
sbb
xor
lock
stos
int3
ins
sub
popa
dec
push
cmp
mov
mul
xchg
sbb
xchg
inc
and
fcomp
mov
mov
xchg
rol
mov
arpl
ss
jae
fdiv
xor
popf
pop
adc
rcl
lods
arpl
inc
push
xchg
xchg
stos
scas
in
jge
jge
push
fist
jo
dec
lods
mov
ins
sbb
sub
ss
in
dec
outs
xchg
(bad)
ja
dec
mov
outs
hlt
dec
xchg
imul
xor
out
dec
imul
push
lahf
pop
mov
mov
scas
test
cwde
jo
ret
mov
mov
dec
(bad)
movs
mov
mov
adc
(bad)
jne
mov
pop
or
cdq
lea
mov
add
fs
push
ret
mov
or
repnz
push
iret
pop
dec
mov
sti
pop
fnstsw
inc
push
mov
push
adc
es
or
and
xchg
adc
sub
cmp
inc
mov
ss
test
or
sti
sbb
stos
popa
cmp
jb
cmp
inc
ss
dec
rcl
jmp
mov
les
add
in
in
xlat
push
or
xor
(bad)
jnp
daa
call
popa
cmp
push
and
gs
jp
jecxz
loope
ja
mov
mov
and
clc
loopne
mov
das
jo
xchg
adc
dec
fild
xchg
jl
xchg
cli
xor
adc
or
or
push
and
scas
cmp
int3
cmc
sbb
dec
jmp
cmp
cmp
je
push
ja
dec
adc
lds
dec
js
fist
mov
pushf
aaa
push
cmps
pusha
mov
mov
mov
jmp
bnd
pop
mov
cmps
adc
ss
or
neg
test
sbb
lods
sbb
pop
or
mov
mov
nop
jnp
movs
or
iret
or
loope
cli
jmp
movs
jne
movs
push
push
adc
loopne
jmp
pop
outs
jge
cmp
sub
fild
mov
xor
sub
push
xor
inc
int
dec
ds
xchg
pop
loopne
xor
pop
popa
push
es
and
jecxz
jns
in
push
outs
cmp
loopne
ins
mov
adc
cmp
jle
test
mov
lods
hlt
maxps
sub
xlat
(bad)
mov
xchg
clc
fistp
sbb
sbb
cdq
mov
sar
jle
adc
test
sbb
scas
dec
sub
cld
fwait
cli
out
jg
dec
dec
lods
mov
popf
fisubr
xchg
pop
dec
lods
sbb
add
addr16
jmp
mov
xor
xchg
fistp
xor
xchg
jecxz
jo
popf
out
mov
push
sbb
cdq
adc
aas
sub
or
add
inc
sbb
mov
dec
dec
aad
arpl
inc
imul
pop
xchg
push
enter
push
jmp
(bad)
pop
pop
in
pop
nop
jp
iret
inc
cmps
add
jns
sub
data16
(bad)
mov
jle
sahf
mov
xor
sub
js
frstor
repz
dec
mov
fild
clc
mov
xchg
mov
into
push
cmps
jo
jecxz
adc
mov
cdq
test
xor
leave
pop
and
mov
mov
push
fs
rcl
fisub
movs
mov
add
(bad)
std
in
and
test
sbb
cmp
(bad)
rcl
call
loop
xor
mov
bound
cli
adc
mov
call
dec
mov
lahf
std
jo
add
loope
cdq
shl
inc
aas
lods
pusha
and
test
call
push
ret
cmp
mov
jmp
jecxz
(bad)
inc
cmp
call
ins
push
jp
inc
add
int
dec
xchg
add
mov
push
mov
jno
(bad)
jo
sub
ret
pop
lods
and
fidiv
push
fistp
(bad)
enter
shr
mov
scas
lea
test
pop
cmp
adc
jl
mov
into
add
das
out
xor
xchg
add
lods
and
mov
inc
cld
bound
and
int
push
sbb
js
scas
scas
sahf
shr
push
push
mov
jg
mov
jae
hlt
iret
out
stos
imul
(bad)
mov
mov
cmp
sti
push
mov
or
pop
jmp
cmp
popf
or
call
into
adc
cmp
cmps
test
cmc
mov
sub
mov
sub
daa
sub
div
imul
jge
(bad)
jnp
imul
adc
cmc
stos
pop
gs
in
add
push
sbb
sbb
sbb
sar
push
test
fnstenv
rol
fild
inc
fdiv
outs
xchg
sahf
jo
or
rol
mov
xchg
mov
leave
sub
push
mov
lea
aaa
pop
mov
xor
sub
fild
mov
call
xlat
fsub
push
(bad)
imul
sub
lahf
xchg
and
mov
dec
lds
popf
shr
xor
jo
cmps
dec
inc
push
jmp
aad
dec
push
mov
xchg
xor
cmp
sar
jmpw
aam
out
dec
cmp
sysenter
sub
xor
or
in
adc
scas
sbb
pop
sub
mov
mov
mov
pushf
inc
in
loopne
sub
sar
sar
hlt
pop
loop
loope
mov
or
stos
cmp
add
int3
sbb
repnz
cmovg
mov
or
imul
jg
sbb
je
fbstp
psllq
pop
aad
call
inc
mov
cmp
adc
and
xor
jo
push
mov
ds
sbb
cmps
(bad)
jae
dec
sbb
jmp
add
xchg
vmread
leave
(bad)
xchg
mov
mov
es
dec
xor
inc
mov
push
fdivr
movs
sbb
in
ss
scas
icebp
in
pusha
movs
cmc
xor
retf
push
mov
sbb
or
out
push
sbb
es
xor
jl
rcl
or
mov
mov
sbb
ficom
in
inc
xlat
xchg
and
(bad)
mov
cmp
int3
std
cld
call
cli
mov
inc
push
add
movs
mov
retf
cmp
cmps
fistp
push
idiv
or
push
popa
mov
rol
adc
fwait
inc
imul
push
fsub
(bad)
dec
push
loope
ja
jmp
shl
imul
scas
fs
dec
push
ja
dec
bound
push
sbb
in
and
push
lahf
inc
loop
ror
es
mov
movs
int
fisttp
test
cmp
xor
dec
push
sbb
or
mov
mov
movs
inc
sub
popa
cmps
call
jp
adc
pop
sbb
xchg
adc
push
js
dec
inc
aam
ret
adc
pop
sbb
mov
int
pop
sbb
(bad)
aad
pop
ret
mov
loop
out
sbb
sbb
push
mov
adc
dec
cdq
mov
(bad)
add
call
imul
test
xchg
js
(bad)
mov
call
mov
adc
adc
mov
sub
test
lds
int
push
or
jno
(bad)
sub
pcmpeqw
test
out
adc
les
jbe
pop
fidivr
xchg
daa
out
and
aad
mov
sub
loope
jecxz
cdq
cmp
mov
repnz
not
mov
lock
or
jbe
call
shl
mov
inc
leave
jae
iret
arpl
lods
jmp
cmp
push
jae
mov
and
push
and
mov
cmp
xchg
lods
movs
dec
dec
xchg
or
xchg
add
lods
mov
and
popf
mov
add
pop
cmp
mov
push
(bad)
bound
and
push
sbb
mov
sub
mov
rol
xor
mov
cmps
fcmovbe
sbb
(bad)
xor
loope
in
inc
idiv
inc
fsub
cmp
xor
outs
iret
jecxz
test
xor
push
cmp
jmp
sub
test
jmp
and
fadd
mov
jp
aas
dec
dec
imul
add
stos
cdq
enter
lahf
jns
retf
pop
je
cld
mov
(bad)
mov
sub
ss
in
adc
test
enter
dec
cmc
mov
jb
mov
push
sub
cmp
pop
push
xchg
jne
retf
mov
pusha
bound
mov
popf
pop
push
rcl
mov
pop
in
repnz
movs
out
mov
cdq
mov
inc
test
pop
pop
jae
and
stos
cs
pusha
dec
and
ror
iret
push
mov
add
jmp
add
fs
push
xchg
pslld
inc
sahf
push
jmp
rcl
fld
scas
xlat
mov
loop
pop
in
or
outs
push
sub
add
mov
lds
or
mov
xlat
inc
cli
cwde
pop
or
sbb
pop
mov
dec
mov
mov
ret
cdq
sub
das
fsubr
push
sub
dec
lods
call
jl
pop
or
mov
sbb
push
pop
(bad)
out
jmp
add
inc
adc
movs
and
pop
cmps
ja
ret
xor
cld
cdq
jmp
jge
hlt
inc
inc
pop
push
in
mov
cs
xchg
sbb
les
jne
lds
push
mov
push
fmul
mov
push
icebp
call
outs
nop
lahf
mov
jbe
xchg
mov
test
(bad)
aad
adc
adc
cmps
pop
cmp
js
or
rol
pop
or
adc
mov
push
movs
jp
xchg
clc
into
sbb
pop
movs
sbb
or
push
mov
push
inc
mov
jecxz
scas
stc
iret
add
cdq
push
mov
in
push
pop
fs
lods
nop
fild
loopne
icebp
fs
imul
rol
aas
add
aas
cli
test
aas
mov
pusha
cmp
push
je
sbb
ret
jo
jmp
sar
push
add
les
push
pop
push
jns
jo
loop
loop
dec
repnz
cs
or
or
push
jp
pop
scas
addr16
xor
ret
and
inc
arpl
sahf
in
mov
and
adc
data16
jae
addr16
std
std
mov
pop
xchg
push
mov
test
jns
jb
jecxz
and
test
mov
retfw
dec
repz
dec
mov
fnstenv
xor
fisubr
and
scas
popa
imul
pusha
adc
dec
mov
mov
xor
mov
lock
stos
nop
and
xchg
fisubr
and
cmps
pop
or
push
shr
xor
cdq
pop
pop
push
mov
pop
cld
aaa
ficom
ins
imul
sub
and
ins
fldenv
xchg
jmp
es
pop
lahf
in
imul
add
sbb
xchg
test
push
lods
imul
cld
jbe
or
xchg
je
push
and
jle
adc
inc
out
xchg
mov
adc
nop
mov
cdq
inc
in
xor
adc
fucomp
mov
xchg
fsubr
js
movs
leave
out
pop
into
(bad)
or
mov
jmp
mov
xor
aad
arpl
fdivr
aam
push
rcl
cmc
push
push
fisubr
data16
sbb
dec
dec
lahf
js
xlat
arpl
or
outs
(bad)
out
pop
scas
mov
sar
mov
sub
add
dec
shl
dec
push
les
stos
pop
fcomp
mov
mov
and
bnd
je
push
imul
xor
rol
inc
les
sub
imul
push
push
xchg
shl
or
sbb
xor
dec
aas
es
scas
lods
xchg
outs
xchg
test
(bad)
aam
jmp
pop
dec
push
fild
push
arpl
addr16
push
imul
inc
pop
retf
movs
rcr
sahf
das
mov
cdq
xchg
div
inc
sbb
lea
xor
and
fucomp
jge
mov
sti
adc
jl
lds
ja
test
cmp
lahf
clc
sbb
ret
int
mov
mov
loope
cli
sahf
aad
adc
sbb
jecxz
les
and
repz
bound
adc
nop
sub
cmp
(bad)
in
dec
sbb
dec
mov
aas
pop
push
mov
cmp
jae
nop
ret
jmp
add
fcmovb
mov
ss
fstp
test
xchg
or
repz
in
hlt
sbb
fiadd
nop
inc
cmps
and
mov
scas
out
jmp
cmc
dec
ja
sub
stos
jne
sbb
mov
pusha
mov
fnstenv
mov
xlat
push
data16
popa
dec
pusha
mov
aaa
adc
fwait
loopne
adc
or
mov
or
inc
mov
jno
sub
hlt
xor
mov
jbe
or
pop
in
rol
sbb
fidivr
inc
out
jecxz
popa
(bad)
lahf
int
push
rcl
dec
or
stos
cmp
or
adc
iret
lods
mov
and
jge
adc
es
fisttp
jecxz
test
push
cmps
adc
sbb
mov
xchg
and
out
jne
in
repz
imul
leave
and
call
icebp
out
sub
pop
cmps
mov
push
shr
ja
cs
movs
sbb
push
mov
cli
dec
sahf
or
inc
pushf
mov
(bad)
into
pop
popa
cs
mov
cmc
in
pop
mov
lahf
mov
push
dec
(bad)
mov
adc
pushf
sub
mov
imul
hlt
sbb
ret
push
sbb
inc
cmc
sub
mov
jl
dec
loope
fst
(bad)
mov
lods
mov
loope
lock
lea
inc
sbb
adc
and
xor
adc
pop
push
xchg
dec
dec
shl
aad
inc
or
fidiv
lahf
sub
inc
push
or
adc
mov
cmp
mov
cdq
lds
cmp
mov
inc
pop
les
cmp
sub
movs
mov
cmps
into
pop
lods
and
jmp
popa
xchg
xchg
jb
cli
inc
mov
imul
mov
rcl
nop
ss
into
iret
cmp
inc
dec
imul
dec
and
adc
aam
pusha
mov
push
(bad)
cmp
(bad)
loop
cmps
push
scas
mov
imul
ret
jo
push
pop
icebp
outs
(bad)
daa
jnp
dec
das
je
iret
or
jp
cmp
jmp
and
mov
jp
cmp
lea
sub
punpcklwd
shl
sub
lods
or
and
nop
dec
push
cmp
call
adc
stos
dec
and
(bad)
lock
pusha
bound
jp
loopne
in
pop
and
adc
dec
lahf
xor
xchg
int3
out
xor
mov
mov
or
and
icebp
mov
xor
out
sbb
pop
aaa
cmc
test
rcr
stc
xor
push
cwde
addr16
es
xor
fisub
cmc
ss
jp
movs
popa
aam
or
lods
push
adc
int
push
cmp
test
inc
add
icebp
mov
pusha
xlat
cmc
jg
shl
inc
inc
fwait
cdq
mov
xlat
xchg
ret
lods
jl
add
push
fwait
adc
imul
jmp
push
inc
add
inc
mov
retf
mov
sub
and
jno
mov
xchg
push
(bad)
ins
les
sar
jmp
mov
push
mov
jp
cdq
jne
inc
fadd
cwde
stc
mov
jmp
movs
outs
sar
aas
mov
push
call
sbb
pop
aad
gs
(bad)
dec
js
loope
sub
int
jmp
inc
mov
and
dec
sbb
and
fstp
xchg
jae
push
push
sub
xchg
adc
mov
ja
jns
sub
fs
cmp
in
sbb
scas
mov
int3
arpl
fwait
and
aam
pop
sub
pop
inc
mov
dec
and
xor
xchg
clc
pop
jo
and
fdivr
mov
outs
sbb
stos
or
cmp
sub
nop
and
fidivr
push
fcom
jmp
leave
sar
lods
sub
inc
xchg
test
adc
(bad)
jmp
rcr
mov
push
je
popa
ror
lahf
jmp
loope
je
add
aas
push
jmp
adc
or
gs
or
(bad)
out
and
push
mov
mov
test
sbb
xor
ins
inc
pop
rcr
xchg
jle
stos
mov
cmps
pusha
cmp
mov
not
sub
pop
into
int
jnp
mov
sub
es
pop
jns
ins
stos
cmp
cmps
push
push
jbe
inc
mov
push
push
add
cmc
dec
loop
xor
dec
movs
call
and
or
jnp
mov
pop
jmp
and
repnz
popa
xor
cmp
mov
in
push
push
div
xor
pop
icebp
mov
adc
pusha
fxch
inc
fisttp
inc
cmp
mov
rol
repnz
jnp
ror
out
push
out
cmp
and
test
bound
jno
pop
nop
ja
mov
lods
dec
mov
mov
add
add
arpl
stc
mov
in
stc
mov
retf
pop
mov
mov
int3
nop
pushf
cmps
cmp
mov
push
mov
fidivr
sub
sub
imul
push
and
xor
out
sub
cmp
sbb
cmps
sahf
jle
movs
or
loope
call
or
mov
(bad)
adc
adc
ret
sub
sbb
call
loop
pusha
pmuludq
addr16
mov
pop
icebp
pushw
mov
lock
inc
jge
scas
adc
or
mov
cmps
pop
ret
(bad)
cmps
push
xor
jecxz
mov
(bad)
test
das
fadd
outs
sub
push
jno
mov
adc
push
jge
and
loop
xchg
and
test
js
fdivr
int
imul
cli
sar
loopne
cmc
jmp
jmp
rol
xchg
cmp
cmp
test
xor
jmp
sahf
lahf
(bad)
out
xchg
shl
lds
fs
jnp
add
outs
mov
aas
cli
leave
retf
std
js
push
mov
fcomp
adc
add
mov
popf
dec
pushf
sbb
out
jb
lods
retf
stc
jb
movs
cs
adc
movaps
or
loope
aaa
sbb
ins
test
les
mov
(bad)
cs
dec
scas
mov
sub
adc
in
fwait
mov
shl
popf
and
mov
or
fwait
mov
push
and
mov
mov
dec
and
mov
or
cmp
pop
scas
sbb
xor
and
dec
add
jle
test
gs
or
sbb
iret
movs
(bad)
xor
shl
inc
xchg
inc
xor
leave
push
sub
pop
mov
je
daa
and
jg
push
jbe
pusha
test
cs
fcom
xchg
loopne
push
lock
lods
lods
sar
mov
push
inc
(bad)
mov
arpl
out
iret
fisub
sbb
neg
mov
mov
and
sar
inc
movs
sub
nop
sbb
(bad)
jmp
add
js
ror
inc
cs
xor
ss
mov
fldenv
pushf
iret
add
sub
int
mov
jbe
and
xchg
pop
into
mov
mov
fimul
call
add
add
cld
(bad)
in
xchg
xchg
imul
and
push
(bad)
cmps
xor
fs
or
pop
or
cli
dec
pop
mov
iret
xchg
mov
shl
jo
pusha
push
lock
cmp
les
mov
aas
iret
(bad)
out
xchg
add
(bad)
or
lahf
jae
mov
mov
push
cli
push
mov
verw
xor
mov
clc
xchg
inc
lock
jle
and
mov
add
call
fs
cli
push
fcmovnu
into
push
mov
nop
pop
fst
mov
lods
inc
sbb
fcmovnu
inc
imul
cmp
xchg
jmp
and
dec
push
mov
mov
push
aad
data16
inc
cmp
or
or
shr
cli
and
push
and
xchg
loope
cmc
lods
nop
test
test
pop
pop
test
int3
cmps
jns
pcmpeqd
les
xlat
push
push
jbe
shl
or
(bad)
lds
mov
lods
push
cmp
push
sbb
repz
sub
fadd
xor
lods
adc
cmps
push
adc
mov
(bad)
pop
inc
push
xor
push
or
mul
loopne
pop
push
jbe
push
jae
sbb
inc
adc
rcl
lea
or
arpl
out
popa
daa
imul
call
mov
mov
fidiv
test
cmp
jae
push
mov
sbb
push
mov
pop
not
inc
cli
add
in
leave
in
fucom
adc
call
outs
outs
sub
cmp
jmp
inc
pusha
test
jae
jmp
fdivr
inc
out
or
and
push
test
sbb
std
mov
ret
cmp
cwde
ss
adc
mov
dec
xor
sub
or
mov
retf
xor
shl
pop
and
outs
(bad)
xor
cwde
mov
jmp
sar
sti
mov
nop
ror
xor
xchg
jo
dec
inc
dec
test
stos
add
adc
pop
jg
arpl
mov
mov
mov
jnp
push
pusha
cli
jge
mov
inc
xor
popf
lea
ins
lahf
jmp
out
pop
mov
dec
ret
and
in
and
mov
dec
pop
mov
nop
into
in
rcl
iret
xchg
mov
int
(bad)
out
(bad)
push
add
lock
sub
or
dec
adc
pushf
adc
mov
sar
mov
es
movs
sub
fidivr
jb
gs
out
mul
add
mov
ds
inc
xor
outs
xor
add
inc
mov
mov
mov
in
shr
stos
(bad)
push
(bad)
out
pop
sbb
outs
fisttp
jge
int
(bad)
pop
(bad)
in
out
fcom
sub
pop
xchg
inc
aaa
lock
sbb
xchg
test
dec
bound
push
cwde
xchg
mov
leave
push
inc
xor
movs
dec
xor
hlt
pop
fdiv
in
push
fisubr
sub
sub
dec
xlat
les
retf
in
jg
inc
pop
dec
mov
pop
mov
sbb
and
loopne
push
pop
ins
mov
push
dec
(bad)
aas
mov
xchg
pusha
jbe
hlt
es
ss
or
out
aaa
mov
push
add
and
xchg
cmp
punpckhwd
pop
daa
push
push
xchg
push
mov
dec
nop
popf
lods
or
cs
mov
adc
movs
xchg
mov
xor
div
xor
inc
inc
mov
push
jmp
push
scas
mov
mov
adc
xchg
(bad)
ja
outs
sbb
pop
lahf
inc
test
out
ins
mov
hlt
pop
jo
add
mov
inc
dec
mov
fld
data16
inc
imul
or
fwait
push
xor
retf
xor
pop
ss
xor
push
xor
mov
iret
dec
mov
mov
outs
loop
call
stos
jns
or
test
adc
cmp
mov
or
mov
pop
in
cmp
leave
and
jp
and
adc
repz
jno
(bad)
fucomip
(bad)
fist
sbb
hlt
iret
xchg
int
inc
pop
rcl
xor
out
sbb
fwait
mov
rcr
adc
jbe
cmp
outs
shl
inc
sub
or
xchg
jmp
or
leave
pusha
ss
lock
retf
stos
adc
sub
mov
mov
push
mov
ror
(bad)
sub
add
pop
xor
mov
icebp
pusha
cli
pop
rcr
imul
mov
cmp
mov
repnz
ss
aaa
paddsb
mov
hlt
leave
mov
cdq
bound
dec
call
sub
sub
add
lds
mov
ret
into
push
cmps
dec
inc
or
outs
popa
sub
clc
in
dec
test
cmps
pop
inc
fisubr
jg
push
ds
mov
(bad)
and
inc
pop
pop
jns
fst
add
jae
iret
outs
jmp
and
pop
aad
cmp
and
xchg
ss
dec
fisub
aad
push
icebp
inc
and
popa
popf
mov
pop
inc
jp
xchg
ret
mov
mov
dec
adc
cdq
dec
mov
gs
add
out
es
inc
ins
dec
jg
lods
xchg
cdq
or
das
(bad)
jl
inc
je
push
ins
neg
push
lods
data16
cmps
iret
xchg
sub
scas
pop
jae
fidivr
inc
pop
mov
push
shr
and
imul
test
cmp
dec
pop
inc
hlt
dec
mov
inc
fs
shr
imul
push
xor
pop
mov
fnstsw
data16
cli
ja
rol
push
mov
pop
gs
sub
es
cwde
inc
jecxz
mov
mov
loop
retf
dec
aam
int
retf
repz
cmps
cmp
stos
aas
dec
jg
add
shl
add
or
es
jo
xchg
and
jl
cmp
sub
jmp
pop
jo
and
test
lock
jecxz
call
fadd
call
rcl
stc
and
jmp
adc
lods
push
adc
fisttp
jge
hlt
mov
repnz
xchg
loope
fimul
cs
cmp
rcr
outs
and
push
cdq
popf
inc
dec
repnz
leave
in
mov
jmp
addr16
sub
mov
pop
jb
cmp
and
outs
jle
fidivr
(bad)
jbe
mov
jg
retf
stos
cs
adc
aam
test
sahf
movs
popa
cli
es
inc
mov
mov
jb
adc
idiv
mov
ror
push
inc
mov
jno
pop
cmp
stc
mov
neg
add
das
push
mov
mov
jns
cmc
pop
jp
push
sbb
ret
sbb
mov
retf
in
xor
cmp
fwait
sbb
cmp
lods
je
shr
enter
mov
cmp
xchg
xchg
jmp
mov
outs
pop
push
mov
cmp
xor
adc
fs
push
jns
jecxz
cwde
cmp
imul
arpl
iret
mov
dec
sub
jb
pop
cmp
dec
and
in
dec
scas
and
dec
ror
fs
cmps
shr
add
(bad)
push
hlt
stos
mov
pop
mov
sub
mov
ret
dec
xchg
jmp
dec
xchg
das
enter
pop
inc
cmp
(bad)
ror
or
retf
in
inc
popf
(bad)
cmc
push
fisub
imul
inc
outs
mov
xor
add
xchg
fld
jge
cs
xchg
aam
pop
loope
push
aas
and
and
pop
cdq
leave
shl
jbe
or
(bad)
mov
fstp
xor
add
or
add
dec
jno
mov
jbe
cdq
ins
ret
(bad)
cmps
leave
mov
call
test
stc
mov
add
sub
gs
push
mov
mov
stc
mov
dec
sub
out
adc
mov
mov
fwait
jae
imul
in
cmp
mov
cld
xchg
popa
scas
dec
daa
and
fild
mov
xor
or
arpl
pop
mov
lods
int
add
cmp
stos
(bad)
xor
xchg
jmp
mov
int3
in
cmp
mov
mov
jmp
mov
in
cld
sub
sbb
(bad)
pop
add
jp
jecxz
sub
jbe
cmc
mov
cmc
ss
or
int3
push
clc
rol
dec
push
imul
xchg
sub
fcom
jnp
lahf
fwait
movs
shl
mov
sub
int3
pop
(bad)
xor
xchg
stos
mov
out
add
jl
xchg
pushf
popf
cmps
add
movs
cmps
les
fldcw
fst
mov
cmp
aam
stos
inc
(bad)
cmc
jno
jge
aad
jne
das
in
mov
xor
dec
inc
or
out
iret
add
add
icebp
ficomp
sub
sbb
into
mov
xchg
dec
js
sbb
ins
sar
(bad)
int3
adc
dec
jle
lock
scas
mov
and
push
dec
adc
mov
sub
sub
or
int
cmp
pop
mov
dec
xor
pop
repnz
push
sbb
inc
std
ret
pop
dec
mov
pop
lahf
add
push
scas
mov
jo
push
jb
retf
push
adc
fwait
add
push
ja
mov
icebp
test
mov
dec
test
out
xchg
jecxz
inc
xchg
ins
adc
popf
and
les
push
mov
adc
fldcw
adc
inc
jb
outs
jg
sub
mov
sbb
mov
inc
mov
fwait
ja
(bad)
xlat
call
adc
in
sub
cli
pop
adc
mov
fcom
inc
mov
mov
scas
xchg
scas
push
int
jmp
pushf
pop
sub
and
lods
push
or
pop
pop
xor
jecxz
shr
in
push
int3
sbb
jle
sbb
dec
nop
nop
jb
inc
mov
outs
ret
jp
jmp
mov
imul
dec
mov
shr
sbb
test
push
cmp
xchg
js
cmp
mov
(bad)
loopne
lock
jecxz
lea
ja
push
push
ins
std
adc
fwait
push
leave
jbe
pop
adc
and
aam
sbb
pop
cmp
mov
xchg
cmp
vcomiss
mov
inc
cmp
xchg
inc
or
sub
outs
xor
jnp
test
sti
mov
cmp
fidiv
adc
call
rol
movs
pop
ret
or
out
sub
hlt
mov
pop
(bad)
in
imul
frstor
jbe
push
mov
shl
and
out
adc
jmp
xchg
movs
jl
les
cmp
xor
dec
in
fldenv
out
jnp
cmps
push
fld
pop
jbe
pop
pop
mov
jp
sbb
ficom
loopne
or
fs
stos
and
call
jne
or
ja
in
jb
xchg
dec
cmp
ficomp
adc
add
push
loope
sbb
jne
add
rcr
lea
dec
es
xchg
push
mov
sbb
icebp
sahf
je
test
pop
lock
xor
pop
jo
das
pop
imul
aad
mov
nop
cmps
cmp
fsubrp
aam
adc
xchg
test
hlt
push
sbb
daa
push
movs
mov
jge
arpl
aas
iret
pop
pop
mov
xor
int3
fs
xor
and
call
aaa
and
retf
sbb
out
jns
(bad)
aam
fisubr
or
xchg
into
inc
inc
loop
fidiv
jge
xor
sub
push
adc
adc
(bad)
jmp
(bad)
out
movs
cmp
out
xchg
call
dec
mov
xor
psrad
retf
sbb
aam
jno
sbb
fsubr
push
mov
retf
(bad)
(bad)
xor
sub
push
aad
xchg
inc
inc
add
jmp
add
jno
pushf
ins
sbb
adc
sar
in
stos
sbb
mov
test
scas
push
xor
scas
add
in
dec
add
sub
dec
(bad)
adc
test
push
dec
sub
imul
and
and
pop
pop
push
jnp
xchg
mov
repnz
inc
mov
add
jb
inc
enter
cmp
mov
or
jnp
shl
in
arpl
in
pushf
addr16
push
out
out
pop
mov
push
lods
cli
pop
or
xchg
into
aam
fcomp
dec
fst
push
or
sbb
sbb
rcr
in
sub
lods
movs
mov
(bad)
dec
loope
loope
movs
sahf
sbb
mov
imul
out
dec
adc
aaa
mov
jmp
shl
imul
adc
aas
daa
xor
cmp
in
gs
jp
jecxz
xor
shl
push
inc
inc
sub
jb
add
mov
xor
push
pop
(bad)
and
(bad)
inc
or
gs
std
bound
and
mov
shl
movs
pop
xchg
dec
adc
sbb
xor
adc
dec
push
stc
cmc
mov
inc
imul
pop
int3
imul
test
mov
mov
in
jae
dec
in
push
mov
mov
jbe
push
cmp
cmp
sbb
aaa
jl
mov
lahf
ficom
jmp
adc
mov
rcr
aad
sub
mov
dec
xchg
mov
cwde
xor
test
jmp
inc
or
sbb
push
scas
jno
push
xchg
pop
jbe
cmc
sbb
loopne
xchg
pop
pop
fwait
dec
push
imul
cmp
lock
mov
mov
test
aas
mov
inc
pop
div
mov
lea
push
dec
fistp
int3
outs
xor
cmp
aas
xor
or
jae
add
pop
push
or
cmps
inc
xor
dec
push
cmp
push
iret
mov
ins
xor
lods
pop
cmp
test
ins
cmc
ins
stos
lahf
dec
mov
mov
iret
(bad)
jmp
sub
icebp
sbb
or
scas
dec
gs
dec
jmp
adc
inc
les
loopne
add
sar
test
repz
inc
or
add
loopne
xor
fbstp
add
xchg
out
movs
cs
out
outs
push
and
rol
out
pop
enter
out
sub
mov
arpl
inc
mov
pcmpgtb
pop
test
bound
adc
scas
push
gs
cs
push
out
imul
(bad)
sahf
mov
mov
sub
xor
aas
cmp
fisub
sub
jmp
mov
movs
adc
cld
pop
stc
mov
ss
(bad)
cmp
(bad)
xchg
cmp
mov
jl
sbb
and
imul
or
xchg
jmp
icebp
hlt
fild
enter
mov
aad
fadd
mov
add
cs
hlt
(bad)
sbb
mov
repz
jmp
jecxz
cmps
fcmovne
mov
add
ds
stos
loopne
popa
mov
push
lods
je
scas
sbb
(bad)
std
popa
sti
mov
ret
stc
in
inc
or
and
idiv
push
inc
pushf
leave
loope
pop
fucomip
mov
int
loope
mov
mov
daa
xchg
xor
add
stos
int3
in
fist
les
fild
cmp
popf
and
loopne
or
fucom
je
adc
mov
mov
dec
add
and
fcom
arpl
dec
jmp
or
imul
shl
xor
rcr
dec
rcl
push
jmp
or
stc
fs
out
jmp
adc
in
lods
(bad)
loop
jge
call
cmp
repnz
and
loope
test
jno
sub
mov
bswap
cdq
mov
mov
adc
and
shl
leave
jbe
jmp
dec
dec
cmp
push
movs
pop
cwde
jmp
adc
inc
rcr
or
inc
sub
mov
cld
das
mov
and
dec
lods
jl
into
xchg
adc
jmp
add
or
cwde
scas
xchg
adc
xor
inc
dec
mov
call
mov
xchg
mov
aas
popa
xor
xchg
repnz
adc
fisttp
fisubr
test
sub
and
sub
vpmacsww
mov
leave
jp
ret
clc
out
outs
cmp
aad
inc
nop
test
xchg
jnp
mov
jne
adc
and
daa
int3
pxor
dec
les
xor
mov
xor
lods
pop
dec
pop
xor
out
sub
xchg
jl
retf
pop
xchg
cmp
out
pop
(bad)
fist
or
(bad)
and
js
pop
test
pusha
dec
aas
imul
mov
or
dec
call
jge
shl
mov
test
cmp
ret
dec
push
xchg
fwait
jp
and
imul
gs
sub
hlt
repnz
mov
mov
out
xchg
jg
cs
scas
adc
add
dec
add
sbb
xor
int3
movs
pop
das
sbb
push
iret
adc
popa
mov
jno
mov
aad
sub
push
inc
mov
in
adc
test
and
adc
sub
sahf
inc
shr
retf
fisttp
dec
(bad)
iret
ror
dec
fiadd
add
or
pop
int
cmp
mov
xlat
test
pop
movs
iret
loop
sub
loope
mov
cdq
les
mov
aaa
add
mov
sbb
rcr
pop
dec
xor
fiadd
loop
je
inc
or
jb
jecxz
ret
(bad)
mov
rcl
jb
stos
es
movs
adc
dec
xor
sbb
mov
fldenv
xchg
mov
sbb
push
std
and
jl
xlat
add
jp
or
ds
dec
sahf
jmp
pushf
push
add
push
outs
push
xor
(bad)
fadd
push
in
inc
addr16
sub
mov
(bad)
or
mov
ret
aad
ret
sbb
mov
add
fidivr
scas
mov
ficom
pop
out
mov
in
and
mov
jbe
fcmovnu
sub
fstp
mov
xchg
dec
mov
pop
or
or
dec
jecxz
push
iret
and
mov
push
push
and
and
xor
push
jecxz
outs
mov
push
repz
dec
cmp
jge
retf
sub
mov
push
rcr
pop
jno
adc
jb
pop
in
sub
lods
push
xchg
and
lahf
mov
ins
and
dec
inc
rol
pop
fist
jmp
pop
ficomp
pop
adc
(bad)
xor
mov
inc
dec
(bad)
sbb
stos
xchg
pop
fld
push
dec
pop
or
mov
jecxz
cli
jo
popf
cli
loopne
aad
pop
lods
dec
jle
and
aas
xchg
xor
mov
in
push
in
pop
sub
xchg
dec
dec
ins
fmul
pop
mov
sub
pop
fmul
test
jb
xchg
sub
inc
(bad)
push
mov
ret
and
sub
sub
dec
jmp
inc
mov
xlat
cdq
adc
add
pop
inc
gs
clc
jmp
stos
pop
xchg
mov
inc
jne
call
(bad)
cli
dec
pop
(bad)
mov
dec
cld
in
sub
mov
push
jl
xor
in
jp
pop
cmp
push
mov
add
jb
iret
scas
or
call
mov
int3
jae
adc
adc
movs
test
int
mov
sar
dec
enter
xor
jmp
dec
out
test
lds
add
cmp
ficomp
fdiv
adc
test
inc
add
push
mov
(bad)
repz
icebp
mov
rol
ss
mov
ret
pop
pop
xor
lods
(bad)
mov
dec
mov
pfrsqrt
pusha
int3
call
jae
push
int3
push
dec
sbb
fdivr
jle
or
das
je
jmp
movs
sub
in
cmp
add
adc
jg
jnp
push
push
mov
fdiv
add
or
movs
inc
repnz
retf
outs
shl
fucom
mov
or
jno
mov
jmp
inc
rcr
cmp
(bad)
(bad)
fs
adc
mov
dec
or
mov
cs
inc
mov
pop
jmp
adc
mov
pop
aas
add
ja
(bad)
or
jl
xchg
movs
mov
loope
cmps
int3
rcl
frstor
or
mov
xchg
inc
shl
sbb
xor
push
test
in
imul
pop
jmp
or
xchg
add
inc
fidivr
mov
dec
dec
pop
mov
dec
xor
cmp
fdivp
dec
xchg
dec
add
icebp
push
les
mov
push
loop
mov
cmp
lods
popf
int3
sbb
cmp
jmp
and
xchg
xor
(bad)
inc
popa
dec
adc
xchg
dec
pop
adc
fs
mov
iret
inc
push
add
out
xor
frstor
ins
xchg
lahf
lahf
ficomp
stos
jle
lock
loopne
push
sbb
jno
sub
push
mov
je
inc
push
jne
push
popa
ret
shr
sbb
mov
sub
in
dec
or
int
repz
dec
sub
pusha
or
ss
outs
mov
(bad)
inc
jae
in
(bad)
push
das
dec
std
or
add
das
out
popf
inc
cmp
mov
call
cdq
jecxz
dec
enter
mov
dec
fisttp
jle
cmp
pop
and
pop
cmp
out
cdq
lods
cmps
outs
xchg
and
mov
add
add
mov
imul
jb
sub
dec
scas
rcr
call
retf
adc
dec
push
jmp
(bad)
and
push
popa
sti
call
inc
add
movs
icebp
xlat
dec
jp
jg
cli
sub
clc
add
mov
mov
(bad)
and
sub
mov
lds
xchg
mov
rdmsr
loop
sbb
mov
les
mov
mov
pop
and
retf
xchg
rcr
sbb
xor
push
mov
xor
inc
gs
jg
mov
mov
aad
js
aaa
neg
mov
fist
and
and
jmp
xchg
mov
sub
sub
jmp
sti
imul
dec
sub
leave
ja
or
mov
les
out
or
push
jae
loope
push
dec
push
push
loope
mov
(bad)
xor
or
arpl
and
inc
aaa
in
icebp
push
nop
inc
jnp
cs
pushf
adc
enter
push
ror
cmp
or
out
cs
cli
into
pop
push
add
fsubp
lods
sahf
jmp
cmp
xchg
push
retf
jg
cld
aad
or
cmc
mul
into
mov
ror
pushf
cld
mov
and
out
adc
mov
pop
(bad)
sub
add
(bad)
gs
jmp
std
jb
push
push
sub
and
clc
push
add
mov
inc
xor
xor
adc
sub
jg
fsubr
mov
mov
inc
push
mov
clc
fistp
cmp
mov
add
cld
pop
movs
xchg
seto
cmps
pop
test
and
inc
loope
pop
je
add
mov
int
(bad)
popf
daa
jmp
sbb
add
mov
cld
cmp
fsub
rcl
imul
ret
(bad)
xor
dec
dec
mov
nop
push
mov
dec
push
test
and
dec
fstp
popa
push
inc
jp
cmps
ds
ja
nop
and
test
js
aas
jno
ror
xchg
mov
xchg
mov
enter
xchg
cwde
mov
fisub
aad
sbb
cmp
dec
push
arpl
out
je
icebp
in
mov
mov
ret
pop
push
mov
cdq
mov
push
mov
ja
cwde
stos
cmp
fwait
cld
jl
mov
adc
push
push
or
lods
jb
xchg
dec
test
movs
cmp
cmp
xchg
mov
mov
in
push
mov
fcom
sub
push
aas
xchg
rol
push
pop
add
nop
mov
mov
cmp
lods
xchg
out
push
sahf
mov
mov
add
pop
popa
mov
cmp
addr16
push
xchg
pop
stc
test
mov
mov
cmp
mov
inc
push
push
pop
adc
or
add
mov
mov
or
ja
or
data16
hlt
mov
push
and
shr
fisttp
loope
sub
lods
inc
xor
lock
xor
ins
and
pop
ss
scas
jo
popf
mov
jg
movs
imul
mov
test
pop
enter
shr
adc
addr16
adc
lods
retf
add
or
fst
add
or
cmps
sub
aad
pop
lahf
sub
rcl
jle
xchg
aaa
pop
jl
push
call
sbb
jg
test
es
aad
fcom
iret
rcl
sub
jg
and
ret
fidivr
cs
push
test
lds
mov
movs
test
rcl
dec
outs
cld
pop
pop
stos
adc
adc
das
repnz
inc
lods
ins
xor
dec
fcom
aaa
cmc
(bad)
mov
push
pop
movs
retf
add
xchg
and
xchg
push
adc
pop
repz
add
test
xchg
loopne
clc
add
jge
add
in
out
jbe
push
inc
ins
jle
jns
in
lods
cmc
xchg
add
dec
and
inc
data16
(bad)
test
dec
arpl
call
rol
xor
push
hlt
cmp
sbb
inc
addr16
xchg
pop
rcl
mov
ja
aad
adc
xor
pushf
in
adc
imul
jl
mov
mov
out
stos
push
cmp
retf
mov
aaa
jbe
jmp
add
sbb
xor
push
pushf
sti
xor
(bad)
fsub
inc
mov
clc
test
mov
sahf
push
bound
xlat
cmp
cmp
xlat
outs
pop
push
popa
adc
fisttp
sbb
adc
pop
popf
adc
in
scas
and
ror
lahf
leave
clc
inc
cmc
xchg
dec
mov
sub
lahf
imul
test
pop
and
mov
cmp
ins
mov
rcl
cli
clc
add
into
sti
add
and
retf
jno
mov
gs
rcl
xchg
(bad)
mov
jmp
cmp
sahf
lods
scas
ja
sbb
xchg
pop
dec
jbe
add
mov
call
mov
cmp
jmp
stos
mov
out
jne
jp
fnstcw
cmps
mov
retf
mov
dec
or
lods
jnp
test
cs
sbb
xchg
xor
popf
jae
inc
sbb
add
fldenv
mov
aad
push
cld
and
cdq
or
mov
sub
add
(bad)
adc
call
sbb
test
aam
dec
jecxz
adc
fiadd
and
movs
mov
cmp
jbe
icebp
pop
out
push
adc
popa
pop
sahf
imul
dec
shl
xor
jg
ins
mov
ja
push
push
outs
mov
lods
stc
mov
pop
xchg
jp
dec
push
mov
enter
test
and
in
push
call
cmp
aas
data16
mov
pop
jae
retf
jp
cs
mov
jge
mov
outs
and
xchg
sbb
mov
js
mov
jle
int
jno
pop
rep
pop
(bad)
imul
adc
add
adc
clc
fucomip
adc
aas
es
inc
mov
cmps
mov
je
mov
sahf
push
int
je
xchg
imul
xchg
push
xor
adc
jae
sbb
adc
adc
das
mov
(bad)
sar
fstp
call
cmp
and
or
jnp
pop
(bad)
std
mov
out
cmps
jle
xor
dec
and
pop
mov
push
(bad)
mov
iret
cmp
shl
mov
and
cwde
mov
or
mov
fdivr
psadbw
push
daa
mov
cmp
neg
inc
lock
fs
cmp
inc
sub
sti
jno
fild
clc
push
mov
lock
stos
adc
inc
sub
inc
fstp
ja
outs
mov
pop
sbb
scas
shl
outs
iret
dec
les
sbb
gs
mov
xchg
mov
mov
push
xor
or
sbb
out
xchg
sub
mov
mov
jb
(bad)
shl
pop
cmp
adc
ss
les
dec
mov
sub
or
scas
push
pusha
mov
in
lds
leave
add
shl
mov
add
mov
inc
les
(bad)
sahf
cmp
mov
jno
repz
mov
or
fsub
call
shl
out
jnp
shl
inc
and
clc
jo
jmp
pusha
popa
test
jb
add
cmp
mov
mov
jne
add
dec
dec
scas
xor
push
or
add
aaa
jnp
sub
pop
pop
cmp
sbb
rcl
dec
cli
arpl
jge
rol
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
js
pop
retf
enter
nop
xor
add
add
add
pop
add
add
add
add
test
add
call
add
add
push
add
mov
or
add
call
add
add
push
add
nop
xor
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
nop
xor
add
add
add
add
or
add
mov
add
nop
xor
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
nop
xor
add
add
add
add
or
add
add
add
movs
and
xor
add
nop
xor
add
add
add
add
or
add
add
xor
and
xor
add
nop
xor
add
add
add
add
or
add
add
push
add
add
add
add
add
add
add
add
cmps
and
xor
add
nop
xor
add
add
add
add
add
add
rol
add
add
nop
xor
add
add
add
add
sbb
add
add
add
cmp
call
add
add
add
add
add
add
sldt
enter
call
add
sub
add
sbb
add
inc
add
sub
add
push
sldt
nop
add
sub
add
mov
sldt
loopne
add
or
xor
add
xor
xor
add
pop
add
xor
add
add
repz
test
add
rol
xor
add
clc
add
xor
add
and
add
dec
add
add
jo
add
cwde
add
add
rol
add
add
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
nop
xor
add
add
add
add
add
add
loopne
add
mov
add
add
add
add
add
add
add
add
add
add
lods
and
sub
add
nop
xor
add
add
add
add
add
add
xor
add
sub
and
add
add
nop
xor
add
add
add
add
add
add
pop
add
add
mov
add
add
nop
xor
add
add
add
add
add
add
add
add
and
call
add
add
add
add
add
add
add
add
mov
add
nop
xor
add
add
add
add
add
add
rol
add
sbb
add
nop
xor
add
add
add
add
add
add
clc
add
add
ret
and
int3
or
add
add
add
add
add
add
add
add
add
iret
and
add
add
add
add
add
add
add
add
add
dec
shl
add
add
add
add
add
add
add
add
add
add
cmp
and
rol
add
add
add
add
add
add
add
aam
add
add
nop
xor
add
add
add
add
add
add
rol
add
and
mov
add
nop
xor
add
add
add
add
add
add
call
fsub
add
add
nop
xor
add
add
add
add
add
add
adc
and
loopne
add
nop
xor
add
add
add
add
add
add
cmp
and
dec
add
add
add
add
add
add
add
add
add
xor
and
mov
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
out
and
jl
add
nop
xor
add
add
add
add
add
add
fadd
and
pop
add
add
add
add
add
add
add
add
push
add
je
and
fadd
add
nop
xor
add
add
add
add
add
add
sub
add
dec
cld
and
mov
add
add
add
add
add
add
add
add
add
or
and
adc
add
nop
xor
add
add
add
add
add
add
js
add
sbb
and
pushf
add
add
add
add
add
add
add
add
add
add
add
nop
xor
add
add
add
add
add
add
enter
int3
add
add
nop
xor
add
add
push
add
add
add
jbe
add
test
add
xchg
push
add
movs
push
add
mov
add
les
add
aam
add
in
add
hlt
push
add
add
add
adc
add
and
add
xor
add
inc
sldt
push
sldt
bound
add
jb
add
or
sub
add
mov
or
xor
add
dec
or
adc
add
fimul
add
in
sldt
cli
sldt
or
add
push
adc
cmp
add
pusha
or
add
add
nop
xor
add
add
add
add
add
add
lock
add
test
and
adc
add
nop
xor
add
add
add
add
add
add
sbb
add
mov
or
add
add
add
add
add
add
add
add
sub
and
and
add
add
add
add
add
add
add
add
add
push
cdq
and
push
aaa
add
nop
xor
add
add
add
add
add
add
nop
or
add
dec
add
nop
xor
add
add
add
add
add
add
mov
sbb
add
add
add
add
add
add
add
or
add
shl
add
add
add
add
add
add
add
or
add
loop
add
sbb
add
add
add
add
add
add
add
or
add
sti
and
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
adc
add
add
add
add
add
add
add
cmp
add
add
nop
xor
add
add
add
add
add
add
ror
add
je
es
sbb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
ja
add
add
nop
xor
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
add
add
add
or
sub
push
sldt
nop
xor
add
add
add
add
add
add
cwde
or
add
sub
inc
adc
add
add
add
add
add
add
add
or
add
add
adc
add
add
add
add
add
add
add
or
add
or
add
nop
xor
add
add
add
add
add
add
adc
add
pusha
enter
adc
add
nop
xor
add
add
add
add
add
add
cmp
add
mov
or
add
add
add
add
add
add
add
add
pushf
jmp
add
nop
xor
add
add
add
add
add
add
mov
add
test
add
fmul
add
add
add
add
add
add
add
fnsave
xor
add
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
add
or
add
add
nop
xor
add
add
add
add
add
add
sub
add
add
push
add
nop
xor
add
add
add
add
add
add
push
or
add
pop
ss
sbb
add
add
add
add
add
add
add
add
add
add
add
nop
xor
add
add
add
pop
add
jg
add
or
cmp
add
clc
or
cmp
add
and
add
dec
or
add
jo
add
cwde
or
add
ror
add
add
add
add
add
add
add
or
add
add
add
nop
xor
add
add
add
add
or
add
or
add
add
nop
xor
add
add
add
add
or
add
or
add
add
nop
xor
add
add
add
add
or
add
add
lods
jnp
add
add
nop
xor
add
add
add
add
or
add
jnp
add
add
nop
xor
add
add
add
add
or
add
jnp
add
add
nop
xor
add
add
add
add
or
add
or
add
add
nop
xor
add
add
add
add
push
adc
add
add
nop
xor
add
add
add
add
sbb
add
push
add
push
jecxz
add
add
nop
xor
add
add
add
add
add
add
inc
push
add
nop
xor
add
add
add
add
sbb
add
add
ins
jecxz
add
add
add
add
add
dec
add
dec
add
add
add
push
add
xor
pop
add
add
push
add
xor
xor
pop
add
add
push
add
xor
xor
pop
add
add
push
add
xor
xor
pop
add
add
push
add
xor
xor
pop
add
add
push
add
xor
xor
pop
add
add
push
add
xor
xor
add
dec
add
dec
add
add
add
add
add
push
add
xor
aaa
add
add
add
push
add
xor
cmp
pop
add
add
push
add
xor
cmp
push
add
add
push
add
xor
pop
add
add
push
add
xor
xor
pop
add
add
push
add
xor
xor
pop
add
add
push
add
xor
xor
pop
add
add
push
add
xor
xor
pop
add
add
push
add
xor
xor
pop
add
add
push
add
xor
xor
add
dec
add
dec
add
add
add
add
add
push
add
xor
aaa
add
add
add
push
add
xor
cmp
push
add
add
push
add
xor
push
add
add
push
add
xor
add
dec
add
dec
add
add
add
add
push
add
aaa
add
add
add
push
add
cmp
push
add
add
push
add
cmp
push
add
add
push
add
pop
add
add
inc
add
inc
add
inc
add
add
add
push
add
pop
add
push
add
inc
add
inc
add
push
add
add
inc
add
dec
add
inc
add
dec
add
test
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
stos
mov
add
add
stos
add
aas
jg
add
sub
add
push
add
push
add
jg
push
aas
jg
add
add
(bad)
add
stos
add
aas
push
add
push
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
add
dec
ret
and
sub
and
add
add
and
xor
and
pop
and
and
add
add
and
and
inc
rcl
add
push
push
xor
and
and
add
add
cmps
adc
cmp
and
add
add
add
test
xchg
fst
add
add
add
xchg
dec
mov
add
add
push
ret
and
push
or
rcl
add
add
mov
pop
xor
and
add
add
add
data16
pop
cdq
int3
imul
add
add
xor
add
add
add
add
push
fs
xor
adc
add
add
add
push
push
int3
imul
add
add
retf
push
pusha
add
adc
add
add
js
inc
xor
add
add
adc
add
add
or
pop
add
add
add
add
pop
je
push
pop
mov
add
add
add
test
inc
inc
cmp
mov
adc
add
add
mov
add
add
add
mov
loopne
add
adc
movs
inc
inc
adc
push
cmp
mov
adc
adc
adc
or
mov
adc
push
popa
retf
jp
add
add
or
adc
adc
sbb
add
add
push
push
scas
inc
push
add
adc
mov
inc
adc
adc
dec
fs
jo
add
adc
add
push
inc
adc
adc
add
add
adc
add
push
push
or
adc
add
push
cmp
ja
add
add
add
add
cdq
and
and
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
cld
jnp
add
add
add
add
and
add
add
call
add
jl
add
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
and
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
arpl
jo
je
bound
imul
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
jo
je
bound
imul
or
and
jo
ins
imul
ds
and
and
jne
jo
jb
gs
push
and
cmp
xor
xor
xor
sub
sub
sub
gs
xor
das
ds
and
and
jne
jo
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
das
ds
and
popa
jo
ins
imul
ds
das
arpl
jo
je
bound
imul
cmp
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
outs
popa
ins
gs
inc
ja
jb
inc
jo
ins
imul
and
je
jo
cmp
xor
and
ds
fs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outs
popa
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
and
jb
imul
xor
xor
xor
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
jo
outs
arpl
jae
jb
jb
push
je
jb
cmp
ds
and
fs
outs
fs
je
jae
gs
bound
or
das
fs
outs
fs
arpl
or
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
fs
jb
jo
imul
and
cmp
jae
jbe
cmp
jo
imul
ds
and
jae
jbe
cmp
outs
outs
ja
push
gs
imul
ins
outs
jae
and
je
cmp
das
jae
push
cs
imul
je
arpl
das
push
dec
dec
das
xor
xor
outs
ja
push
gs
imul
or
das
popa
jae
jbe
cmp
jo
imul
ds
jae
gs
bound
or
add
(bad)
jmp
cmp
shr
cmp
fs
add
fsubrp
cmp
ins
jmp
add
jmp
cmp
je
cmp
cmc
jmp
cmp
add
cmp
test
cmp
or
cmp
mov
cmp
sbb
cmp
xchg
jmp
add
and
cmp
pushf
jmp
add
das
jmp
cmp
cmp
lods
jmp
add
inc
jmp
push
jmp
push
jmp
jo
cmp
sub
add
jmp
stos
jmp
adc
add
mov
add
add
add
add
jmp
or
add
fsubr
cmp
add
add
out
cmp
add
add
out
jmp
(bad)
jmp
retf
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
dec
dec
inc
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
push
dec
dec
dec
cs
dec
dec
add
dec
dec
dec
cs
dec
dec
add
dec
push
push
dec
dec
dec
cs
push
push
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
push
gs
ins
outs
jae
dec
gs
add
inc
jb
add
add
jo
popa
inc
ins
outs
add
dec
jae
jno
popa
ins
inc
push
dec
inc
add
add
inc
gs
popa
ins
ins
outs
arpl
add
inc
gs
inc
add
add
jb
jne
jb
push
popa
ins
jne
push
add
je
ins
gs
gs
imul
add
and
add
add
add
add
push
and
dec
mov
rcr
sar
mov
and
push
and
dec
and
mov
mov
push
inc
and
outs
and
fs
popa
jae
and
pushf
sar
sar
mov
mov
adc
sar
mov
and
mov
mov
mov
sar
shl
mov
xchg
mov
adc
mov
mov
sub
sar
mov
mov
mov
shl
ror
adc
and
adc
shl
shl
sar
mov
mov
mov
adc
shl
sar
mov
sar
sar
adc
rol
mov
sar
and
dec
and
adc
adc
sar
ror
mov
mov
sar
sar
and
mov
adc
sar
sar
mov
rol
sar
sar
rol
sar
shl
mov
adc
cs
xchg
sar
sar
rol
mov
adc
ror
mov
sar
shl
shl
mov
sar
sar
sub
add
outs
je
gs
loopne
out
jmp
add
add
add
add
imul
jne
ins
popa
gs
push
dec
dec
add
add
imul
xor
inc
ins
popa
imul
jbe
arpl
das
popa
ins
imul
jae
popa
gs
add
add
push
add
add
push
add
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
(bad)
fild
inc
add
add
push
add
push
pop
pop
push
or
adc
or
or
adc
(bad)
adc
adc
sbb
adc
push
sbb
and
push
and
and
daa
sub
sub
pop
sub
and
fild
inc
add
pop
pop
or
or
or
adc
sbb
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
or
ret
add
and
add
add
adc
inc
add
add
add
add
add
add
inc
add
add
add
add
add
pop
push
push
add
add
add
add
add
inc
push
pop
adc
popa
jno
xor
push
mov
adc
and
push
loope
push
xor
adc
mov
jae
lock
icebp
inc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
xor
adc
add
popa
jno
inc
(bad)
fiadd
or
add
add
add
add
add
lock
fs
fmul
add
xchg
sub
gs
mov
ins
dec
ss
sbb
imul
sbb
sub
mov
cdq
adc
and
rol
mov
dec
cmp
pop
and
pop
ja
ror
inc
sahf
ja
xor
mov
sub
xchg
cmp
or
jne
push
sbb
inc
mov
les
ins
cmp
adc
xor
retf
cmp
jnp
outs
dec
jmp
inc
add
mov
jecxz
mov
pop
call
adc
(bad)
inc
xchg
add
push
mov
mov
js
sar
jmp
in
fsub
push
push
inc
cs
loopne
mov
mov
stos
jno
mov
mov
pop
jp
sub
ret
gs
lock
xor
mov
jne
inc
div
inc
pop
adc
pop
test
shl
xor
gs
sbb
mov
mov
fstp
add
push
adc
mov
mov
pop
call
inc
dec
(bad)
test
(bad)
mov
dec
arpl
mov
adc
retf
pop
call
xchg
sub
int
push
adc
mov
cdq
int3
lods
adc
loope
add
stos
mov
(bad)
push
pshufw
addr16
dec
xchg
push
push
inc
fst
pop
dec
cs
inc
retf
aas
mov
pop
stos
mov
rcr
mov
dec
xor
movs
hlt
test
leave
and
mov
mov
add
push
call
pop
mov
mov
or
push
push
xor
and
jle
xchg
mov
sahf
sub
into
mov
(bad)
lea
in
outs
test
push
repz
mov
lahf
cmps
jae
jno
rcl
into
clc
ret
cwde
je
sub
loope
int3
push
push
addr16
and
push
dec
dec
retf
outs
pop
cmps
mov
imul
mov
xchg
sahf
xor
xchg
out
jae
jge
mov
aaa
bound
jge
sbb
sbb
inc
inc
mov
mov
add
daa
inc
lods
mov
inc
ds
movs
gs
cmp
mov
xchg
mov
adc
lds
cmp
mov
movs
scas
mov
shl
shl
jo
mov
xchg
movs
lods
leave
ins
mov
inc
lods
gs
hlt
cmp
mov
in
xchg
sub
mov
in
jl
lds
repz
jl
jecxz
ins
xchg
inc
data16
test
pusha
inc
retf
scas
(bad)
cmc
outs
imul
leave
dec
xchg
scas
retf
xor
push
add
nop
adc
xor
sbb
data16
sahf
or
outs
xchg
mov
push
inc
(bad)
mov
in
cmp
jae
pop
inc
out
out
es
popf
ins
cwde
shl
or
push
inc
cmp
xor
and
repz
cmp
and
push
das
pop
call
pop
jecxz
jp
sub
jge
int3
xchg
out
outs
mov
jnp
daa
xchg
addr16
mov
iret
imul
mov
ss
ret
mov
mov
push
(bad)
aad
mov
inc
and
scas
lods
loope
xchg
inc
ja
mov
jae
jns
pushf
jge
fwait
xchg
cld
xchg
mov
or
(bad)
into
sub
fdiv
aaa
pop
int
cwde
pop
dec
pushf
cmp
cmc
pop
sahf
mov
pushf
dec
adc
inc
push
arpl
mov
test
lods
jae
adc
sub
xchg
xor
ret
dec
into
sbb
call
mul
(bad)
out
jo
imul
out
xor
mov
fucomi
push
loope
into
out
out
je
jns
push
ss
mov
cmps
or
sub
cmp
rcr
and
dec
sbb
push
inc
fsubr
mov
jmp
fstp
pop
adc
icebp
mov
out
sbb
sbb
mov
xchg
ds
mov
sahf
popf
icebp
mov
xchg
mov
icebp
or
iret
and
sub
jmp
jns
or
xchg
xor
cmp
push
pop
dec
dec
sbb
imul
add
test
es
ret
stos
mov
ins
sub
retf
mov
cmp
and
movs
xchg
mov
sbb
mov
mov
mov
adc
or
fstp
sbb
sbb
repnz
cwde
(bad)
enter
dec
inc
xchg
fsub
loopne
sahf
mov
sbb
xchg
mov
ret
int
call
lahf
or
cwd
pop
daa
stos
fild
lea
int3
sub
ficom
aad
ret
adc
xor
or
pop
arpl
xchg
rol
ins
cmp
test
test
test
mov
sbb
jecxz
add
pop
adc
xacquire
inc
and
imul
xor
mov
aad
mov
mov
mov
adc
dec
out
inc
in
iret
call
aam
jae
cmps
sbb
xchg
ret
pop
rol
jle
xchg
jp
jl
push
sub
sbb
dec
sbb
aas
inc
push
and
nop
mov
cmp
mov
add
mov
out
cmp
repz
ds
mov
push
inc
call
xchg
push
and
ss
repnz
aam
cmp
adc
mov
mov
xchg
jmp
pop
dec
in
in
mov
stc
fbstp
mov
push
xchg
sar
repz
movs
xchg
xchg
push
mov
inc
cmps
imul
mov
pop
push
mov
xchg
add
fmul
sub
sbb
mov
jge
jbe
jno
mov
popf
aam
cmp
xchg
ins
lods
mov
or
retf
int
push
ror
pop
push
popa
cmps
cmps
out
retf
inc
int
mov
fstp
or
mov
mov
cmp
mov
popf
loop
mov
dec
pop
jo
cdq
int
inc
fsubr
mov
sub
pop
or
mov
rcr
shl
pop
sbb
sbb
adc
adc
pop
cmp
out
add
int
xchg
in
mov
movs
out
and
scas
test
arpl
fcmovb
adc
inc
push
sbb
cs
cmp
pop
adc
addr16
sbb
movs
dec
(bad)
frstor
daa
test
fs
xchg
fist
cmp
movs
(bad)
clc
clc
in
pop
mov
or
inc
inc
repnz
adc
cdq
(bad)
mov
movs
ror
add
sub
cmp
dec
inc
adc
movs
je
imul
mov
add
ins
adc
int
jecxz
call
inc
(bad)
xor
ds
inc
int3
mov
sbb
cmc
mov
test
lahf
adc
sub
clc
(bad)
fist
js
mov
pushf
mov
repz
push
popa
lods
mov
test
mov
or
xchg
lea
stc
iret
pushf
sub
ja
and
movs
sub
dec
loope
mov
loopne
xor
mov
mov
fnstcw
mov
(bad)
stos
call
ss
mov
adc
(bad)
fisub
rcl
ins
jne
push
sbb
repnz
ss
adc
pop
mov
sbb
xchg
cmp
or
pop
cmp
lods
js
cmp
fst
and
mov
pmaddwd
jmp
lea
lock
fld
clc
xchg
(bad)
out
int
int
retf
push
retf
scas
mov
jno
imul
push
loop
and
mov
inc
push
call
jbe
adc
mov
push
aam
loop
inc
retf
inc
sbb
aam
add
pushf
mov
and
test
test
dec
clc
push
xchg
ins
aam
jmp
icebp
shl
div
adc
push
icebp
sbb
mov
outs
sbb
movzx
test
jbe
xor
retf
add
dec
dec
aad
or
mov
dec
xor
fidivr
movs
xchg
loope
out
sbb
mov
pop
and
cmp
cmc
fsubr
or
call
sbb
test
imul
ficomp
(bad)
retf
nop
xor
cwde
movs
sahf
cmp
dec
push
jno
test
add
inc
cli
sub
movs
jbe
xchg
xchg
pop
loop
pop
adc
inc
shl
retf
cmp
sub
cmps
sbb
pop
test
jo
add
idiv
nop
pop
loope
xor
sbb
retf
inc
pop
loop
sbb
rcr
cmp
sub
shr
pop
pushf
xchg
xchg
pop
je
jecxz
xchg
push
ret
and
or
pop
leave
mov
lea
jmp
xchg
mov
js
pop
push
ins
(bad)
dec
mov
outs
cmps
mov
mov
lea
mov
cmp
fbstp
call
arpl
add
test
stos
lods
mov
repz
xor
mov
add
mov
aam
fmul
pushf
into
push
dec
bound
mov
mov
clc
xor
adc
cmp
push
sub
pop
cmp
sub
shl
xlat
sbb
mov
adc
mov
push
bound
adc
cmp
or
jne
adc
imul
inc
pop
out
push
or
das
adc
in
sub
inc
ja
aad
xor
int
push
je
fst
cmp
iret
xchg
jecxz
mov
lea
add
mov
shl
gs
xor
out
jne
mov
imul
(bad)
sbb
jns
adc
pop
xchg
inc
jne
imul
scas
mov
xchg
cmc
pop
loop
mov
sbb
fs
cmp
push
mov
sbb
sbb
popf
fcom
mov
push
jnp
sbb
iret
mov
pop
out
mov
ja
sub
mov
adc
lahf
xor
xor
mov
les
retf
xchg
hlt
sub
sub
or
xor
lock
sahf
mov
cs
fimul
and
xor
xchg
les
call
ret
test
pop
loop
dec
ins
mov
iret
sub
aas
dec
adc
xor
jns
sub
xlat
mov
cmps
lods
jl
mov
sub
xlat
in
jecxz
(bad)
fnstcw
int3
ins
je
cs
fmul
mov
adc
out
add
mov
sub
in
mov
add
nop
fnsave
push
mov
pop
jecxz
cmp
loope
aas
dec
push
pop
test
cmp
jns
fs
aaa
sub
adc
push
mov
mov
cdq
sar
rcr
lods
movs
ret
push
sbb
int3
(bad)
int
aam
lds
jno
xchg
jb
mov
pop
cli
jmp
addr16
mov
bound
pop
cs
aam
push
stos
out
push
mov
mov
ja
mov
jo
push
push
mov
leave
xchg
scas
fxch
jne
jno
mov
pop
dec
cdq
repnz
aam
xchg
in
adc
push
inc
sahf
les
stos
adc
dec
(bad)
ds
fild
bound
lods
jmp
leave
sub
mov
rcr
fisub
mov
sub
adc
sti
add
inc
and
sub
or
cmp
cmps
ret
jnp
stos
or
sahf
sbb
add
inc
ins
cmc
stos
addr16
icebp
mov
inc
pop
xchg
mov
push
adc
retf
mov
dec
lds
fisttp
in
addr16
or
pushf
cmps
mov
pushf
mov
xor
test
xor
iret
or
aas
push
ret
pop
sbb
push
xchg
ret
les
lods
scas
xor
adc
js
xchg
loop
nop
fcmovu
aad
and
in
inc
mov
dec
push
sub
mov
pop
jae
js
mov
push
(bad)
or
mov
(bad)
fisubr
jl
mov
adc
pop
dec
dec
in
and
(bad)
push
call
retf
mov
xchg
push
dec
sub
aam
cmp
mov
pushf
sub
adc
mov
retf
dec
adc
gs
clc
scas
jbe
sbb
jno
adc
dec
jns
retf
popa
push
scas
mov
fs
dec
hlt
mov
ret
scas
mov
fs
(bad)
shr
fsub
loope
mov
xor
out
or
xor
hlt
out
ins
lea
outs
inc
xor
push
pop
int
push
sbb
mov
push
out
sahf
stos
pop
mov
fs
retf
arpl
push
xchg
nop
mov
cmp
push
outs
ret
adc
int
imul
ss
xchg
out
imul
cmp
mov
mov
lods
stos
pop
fsubr
fucomi
sub
push
pop
outs
push
dec
pop
jbe
data16
test
mov
(bad)
and
aam
fcomip
ja
pop
aaa
clc
stos
jp
push
adc
ds
inc
out
inc
in
mov
jmp
pop
mov
int3
cdq
lods
pop
enter
cdq
nop
loope
push
push
icebp
test
jecxz
aaa
sbb
inc
gs
push
rol
push
mov
cmps
bound
mov
or
(bad)
lahf
adc
(bad)
push
fild
ins
lods
push
lods
sbb
add
cmp
je
xchg
test
js
call
sbb
retf
jle
ret
cmp
sti
add
or
cmps
test
add
(bad)
in
enter
shl
movs
pop
jne
add
sub
push
inc
sbb
loope
ret
sub
test
test
pop
pop
push
push
mov
test
push
push
ret
repnz
scas
mov
or
mov
and
fld
(bad)
mov
out
push
xchg
ret
sbb
mov
aas
inc
jmp
push
popf
push
cmp
ja
push
inc
pusha
inc
sbb
daa
sbb
out
or
fcomp
cwde
jmp
cmc
xor
dec
pop
test
fnstcw
and
mov
add
jne
(bad)
sbb
lock
xchg
cmc
xchg
retf
test
mov
shl
int
push
adc
sbb
imul
call
rcr
(bad)
mov
xor
adc
pop
xlat
inc
ret
or
mov
sbb
loop
xchg
mov
rcr
sbb
push
cmp
cmps
mov
xor
sbb
clc
pop
bound
ins
sbb
out
test
js
das
or
mov
sub
test
adc
pushf
sbb
sbb
out
popa
mov
pushf
mov
cmp
push
int3
fsubrp
into
and
or
std
pop
ins
mov
push
jnp
pop
out
pushf
js
popf
outs
aad
push
cmc
pcmpeqw
xor
sbb
xchg
(bad)
(bad)
popf
or
and
cdq
dec
call
jmp
fild
gs
inc
and
adc
movlps
(bad)
dec
add
xor
sbb
div
mov
ins
xchg
inc
inc
mov
outs
jno
xor
push
mov
cmps
mov
and
xor
sbb
in
sahf
xchg
adc
fs
into
in
scas
das
sub
push
or
inc
shl
xor
or
das
les
xor
mov
popf
mov
mov
addr16
xchg
ret
and
add
jge
push
stos
push
lahf
call
in
cmp
sub
ret
cmp
movs
xchg
sbb
sub
sub
neg
and
adc
imul
mov
sub
mov
sub
and
lods
in
aaa
mov
arpl
sub
sub
push
dec
(bad)
out
js
cwde
and
lds
xchg
mov
jns
inc
mov
call
loopne
in
push
mov
je
lahf
fimul
mov
push
ins
inc
nop
sub
clc
sahf
out
movs
frstor
fisttp
stos
bsf
xor
push
push
dec
pop
mov
fidivr
adc
in
int3
add
jnp
xor
mov
out
(bad)
xchg
in
movs
lea
push
inc
ret
cdq
mov
inc
inc
imul
data16
jecxz
or
push
loope
dec
iret
xchg
jecxz
test
dec
dec
sbb
pushw
xor
call
pushf
sti
push
leave
inc
pop
fnstcw
sub
in
mov
cmp
(bad)
in
mov
push
inc
lock
cdq
adc
adc
inc
dec
les
movs
mov
inc
(bad)
mov
adc
and
mov
inc
mov
xchg
stc
repz
fwait
test
add
sbb
or
out
mov
aad
cmp
xchg
cwde
out
js
cmps
lock
xor
mov
push
in
fiadd
lods
test
jmp
jb
and
pop
(bad)
pop
imul
xchg
test
sub
jb
push
cmp
arpl
lock
pop
cmp
fmul
mov
xchg
iret
dec
push
sbb
push
rol
retf
xor
in
xchg
mov
push
xchg
fdiv
ja
addr16
test
call
outs
clc
jns
xor
jae
mov
or
or
xchg
cmp
jnp
pop
fisubr
ret
clc
enter
xchg
xlat
das
lock
into
mov
sbb
jl
jp
pop
mov
cmp
aam
pop
les
xor
add
pop
loopne
mov
jno
xor
or
xor
(bad)
jecxz
sub
loope
movs
mov
mov
rcl
jnp
or
jne
cmp
jle
daa
xor
push
push
push
leave
or
adc
ins
push
out
xchg
lods
iret
dec
xor
daa
sbb
mov
or
fdivrp
div
mov
(bad)
or
jno
cmp
and
xor
rcr
jae
lods
lahf
addr16
jnp
push
adc
dec
push
inc
mov
inc
cmp
mov
addr16
in
dec
adc
scas
adc
test
mov
sub
std
jg
jle
stos
stos
imul
outs
sti
xor
test
movs
jnp
(bad)
mov
or
dec
data16
mov
fcmovnu
push
dec
inc
fld
xor
jp
movsx
inc
cmp
jle
inc
sti
xor
xchg
adc
data16
mov
mov
imul
push
jbe
fsubr
cmp
xor
mov
(bad)
jns
or
(bad)
fisubr
call
pop
stos
mov
pop
sub
push
pop
dec
shl
mov
and
xchg
shr
mov
xchg
cmp
push
(bad)
(bad)
dec
mov
les
dec
mov
sub
jno
into
jno
sub
xchg
push
div
add
adc
aaa
lods
aad
pop
xor
pop
fist
cmp
stc
mov
sbb
out
push
sbb
stos
retf
loope
out
mov
out
scas
pushf
js
clc
clc
out
in
push
dec
imul
clc
jmp
fiadd
popf
push
push
push
not
cwde
lea
fs
jns
push
pop
xchg
imul
push
mov
retf
jg
imul
int3
les
out
aam
out
dec
sbb
push
lock
mov
pop
add
stos
test
sub
fld
outs
xor
popa
pusha
add
lods
ins
inc
mov
add
xor
mov
sbb
rcr
add
inc
sbb
jmp
add
dec
mov
lock
retf
xor
retf
and
push
lea
inc
test
push
shl
jae
pop
loopne
stos
push
mov
sbb
ds
ja
lds
jmp
xchg
shl
pop
test
stc
arpl
dec
add
int3
mov
aad
adc
inc
inc
in
into
add
cwde
ret
add
jp
sbb
(bad)
inc
jmp
add
mov
pop
mov
icebp
dec
imul
fadd
jg
(bad)
loopne
rcr
ret
cmp
sbb
jns
inc
cmp
int
repnz
jmp
das
lods
pop
push
mov
int
fidiv
shr
scas
jbe
pop
cmp
stos
(bad)
aas
cli
inc
mov
and
or
arpl
mov
mov
inc
push
mov
xchg
inc
retf
cld
cdq
jmp
and
imul
or
dec
iret
addr16
ret
xchg
push
cmps
mov
dec
test
pop
ret
mov
mov
mov
into
pop
jne
mov
push
sbb
push
mov
dec
add
mov
sbb
leave
jnp
add
jmp
sahf
push
adc
jg
jecxz
loope
mov
inc
mov
mov
mov
add
xor
sahf
test
in
arpl
mov
gs
sub
hlt
outs
xlat
rol
pop
(bad)
pusha
or
sub
in
jnp
rcr
(bad)
ins
stos
mov
cmp
sbb
je
es
loop
ret
mov
int3
(bad)
mov
mov
popf
cmps
movs
cdq
mov
outs
xchg
dec
(bad)
(bad)
mov
sub
and
pop
mov
lock
adc
xor
inc
push
mov
bound
cs
cs
stos
jle
in
sub
xchg
fmulp
(bad)
dec
shl
popa
cmps
test
clc
inc
mov
fisubr
xor
adc
loope
xor
scas
sub
popf
adc
and
or
xchg
push
fcmovb
jmp
aam
bound
cmp
push
sub
jl
cmp
mov
xor
xlat
mov
push
icebp
add
inc
sub
cmp
cmp
inc
inc
lods
bnd
(bad)
leave
mov
out
xchg
adc
cmp
ds
pop
mov
push
push
dec
mov
aaa
xchg
in
push
push
(bad)
jmp
dec
adc
xor
data16
xchg
retf
sub
push
lods
xchg
ins
push
addr16
pop
sbb
lea
and
xchg
pop
sub
dec
fs
test
mov
pop
or
push
cld
mov
push
mov
adc
and
jmp
enter
dec
ret
mov
push
xchg
jne
nop
mov
fld
into
nop
add
xchg
jge
ja
inc
dec
imul
or
test
not
jmp
push
or
ja
jmp
mov
or
aaa
loopne
dec
sbb
push
and
dec
dec
faddp
add
mov
adc
mov
xchg
and
outs
pop
sbb
sub
(bad)
(bad)
retf
popf
inc
sar
mov
hlt
mov
mov
sub
test
xchg
in
shr
in
jno
jns
lods
mov
shl
ins
mov
jno
inc
mov
mov
xor
mov
and
mov
stos
cdq
dec
div
sub
ins
pushf
sbb
test
xor
or
push
lods
sub
lock
lahf
lds
sub
cmc
call
ret
add
or
in
retf
ret
aam
fbstp
cmps
ins
outs
mov
or
sbb
and
inc
mov
lahf
pop
mov
inc
and
mov
mov
div
outs
xor
mov
xor
(bad)
adc
mov
and
movs
mov
sahf
fsub
and
out
cmc
push
dec
arpl
mov
inc
andnps
pusha
push
or
(bad)
mov
out
cs
in
lods
sbb
pop
add
rol
test
mov
rcr
push
add
jmp
mov
movs
scas
pop
add
jno
aam
push
shl
inc
mov
(bad)
xor
mov
jg
into
mov
xor
mov
mov
adc
jns
neg
jno
pop
xlat
mov
inc
cpuid
fisttp
mov
(bad)
inc
mov
cs
outs
clc
out
std
test
imul
sub
lods
xor
pop
imul
push
jg
push
div
mov
lea
push
jno
sbb
mov
mov
push
lods
aam
pop
test
clc
pop
in
lods
loope
push
loope
sub
mov
mov
cmp
add
ficom
sub
mov
mov
jnp
cdq
jne
inc
sbb
sub
lods
or
arpl
lea
push
push
loop
jnp
(bad)
mov
retf
js
dec
rcl
scas
icebp
jae
cmps
dec
sub
lahf
adc
nop
cmp
jb
(bad)
dec
mov
or
ins
mov
call
pop
repnz
xor
xchg
xchg
push
jne
or
shr
dec
push
mov
into
xchg
cmp
lds
into
cli
pop
lods
xchg
and
out
dec
mov
or
sbb
bswap
sbb
jns
mov
in
(bad)
push
mov
push
push
or
mov
cmps
xor
add
cdq
jmp
es
es
jae
xlat
push
test
xlat
aad
aas
jl
sbb
xchg
inc
loop
loope
and
push
xchg
cmp
loopne
lahf
and
aas
pop
cmp
pop
sub
arpl
adc
or
les
push
mov
retf
(bad)
out
jecxz
clc
std
fsubr
cmps
mov
push
loop
jne
setp
fimul
jo
push
xchg
inc
stc
pop
lock
sbb
or
adc
outs
add
cmp
mov
arpl
or
pop
xor
pop
dec
sbb
add
xchg
xchg
lahf
loop
inc
(bad)
repnz
mov
addr16
jmp
sub
neg
les
fldcw
jl
jae
sbb
xchg
jns
sahf
mov
sub
sbb
inc
rol
mov
sbb
pop
clc
xlat
cli
cmp
outs
cmc
dec
mov
or
mov
xchg
push
enter
loope
pop
in
cli
in
lahf
in
jmp
cmp
dec
mov
xchg
adc
out
idiv
push
add
sbb
pcmpeqb
(bad)
in
movs
rcl
add
push
clc
rcr
pop
rol
gs
sbb
and
sub
pop
loopne
pushf
pop
and
mov
xchg
ret
dec
(bad)
cmp
das
sbb
mov
push
int3
fs
mov
cmc
js
in
lock
in
lods
mov
push
jmp
and
sub
in
(bad)
sbb
das
mov
and
aad
cmp
retf
fdiv
loop
xchg
push
fist
push
in
imul
inc
cmps
lods
nop
xor
imul
scas
test
or
mov
inc
std
push
pop
xchg
mov
pop
push
push
or
not
retf
ret
mov
push
dec
mov
not
daa
mov
adc
lds
dec
push
fild
outs
(bad)
fstp
scas
xchg
cmp
fadd
push
xor
inc
adc
cmc
das
(bad)
(bad)
dec
inc
sbb
add
xchg
rcr
rol
loope
push
aam
mov
scas
in
jno
mov
test
dec
pop
sbb
pop
dec
sbb
dec
and
jns
dec
sub
pop
inc
or
dec
xlat
push
pop
add
aad
xchg
jg
add
out
lods
dec
enter
dec
icebp
xchg
in
mov
and
dec
test
dec
add
movs
loop
rol
lahf
rdpmc
sub
test
cmp
mov
addr16
movs
xor
sbb
stos
mov
mov
jne
repnz
xor
int
pop
sub
mov
jae
imul
icebp
cmp
scas
call
rcl
shr
movs
not
(bad)
(bad)
scas
je
xor
and
mov
add
and
sub
mov
pusha
jmp
(bad)
cmp
(bad)
out
push
rcr
retf
adc
rcl
not
sar
or
cwde
popa
jnp
aam
ja
pop
push
pusha
jg
clc
sti
mov
movs
loopne
hlt
ins
mov
adc
jns
hlt
xchg
inc
repnz
movs
shl
push
stos
in
push
call
mov
add
les
pop
sbb
mov
fisttp
in
xor
rcl
xchg
sbb
or
addr16
sub
gs
leave
jmp
push
jne
call
pop
cmp
and
jl
adc
shl
mov
jecxz
mov
cmp
das
sub
fdiv
test
pop
jl
jns
pop
jmp
mov
leave
(bad)
xchg
call
xor
fsub
call
pop
fs
test
or
pop
dec
shr
xchg
pusha
dec
jo
push
imul
rol
pop
jne
push
outs
and
and
or
and
push
shl
test
and
jg
pop
push
(bad)
ds
pop
hlt
iret
clc
movs
in
xchg
fbld
fisubr
fcom
cs
(bad)
mov
adc
arpl
jne
out
jl
lds
ds
xor
ins
push
mov
outs
ss
shr
movs
mov
mov
sbb
jg
or
xor
setb
inc
lds
icebp
sbb
push
fdivr
cmps
mov
ja
ins
add
aad
lea
xchg
daa
sub
pop
in
xor
popa
adc
ret
int
cld
jge
mov
cs
shr
xchg
xchg
(bad)
in
mov
sti
inc
xchg
call
sub
repz
push
mov
int
pop
mov
or
cdq
push
int
mov
or
out
cmp
pop
inc
scas
xchg
mov
pop
iret
aam
xchg
sub
mov
je
adc
xchg
jbe
shr
test
add
and
mov
adc
movs
mov
nop
sub
inc
xchg
(bad)
jns
sub
sbb
addr16
mov
cmps
ins
push
inc
div
jl
mov
jg
std
test
xlat
pop
outs
cmp
call
xor
je
popa
rcr
sub
sub
jne
mov
imul
daa
enter
add
push
loop
mov
cmp
dec
mov
push
cmps
sbb
push
imul
enter
test
je
xchg
(bad)
xor
loopne
mov
cmp
adc
lock
or
loopne
mov
push
xchg
jnp
mov
push
push
add
sub
jno
outs
popa
jb
xor
neg
and
mov
jae
addr16
inc
mov
ins
lock
(bad)
es
add
enter
int
mov
shl
mov
fidiv
mov
push
push
push
xor
jb
aaa
and
sub
dec
push
dec
into
in
rcr
loop
inc
mov
mov
sub
pop
sub
in
sub
mov
ret
ins
mov
jnp
mov
mov
jbe
jb
lods
fidivr
outs
movs
cmc
push
or
sahf
add
(bad)
test
popf
pusha
lock
gs
js
sub
cdq
movs
mov
popa
aad
shr
sbb
push
ds
sbb
push
push
movs
xchg
mov
into
imul
shl
jmp
sahf
sub
push
xor
cwde
push
ss
adc
dec
xor
mov
mov
sbb
data16
xor
scas
or
push
sub
mov
inc
adc
sub
cmp
std
retf
or
test
ins
add
fld
xchg
push
adc
movs
xor
sti
xor
dec
popf
mov
xchg
addr16
mov
test
out
jne
xor
xchg
jo
push
push
and
ss
aas
(bad)
sti
popa
ret
fxch
inc
fdivr
cmp
and
jecxz
mov
icebp
int3
and
mov
cs
jle
repnz
cmp
sub
jg
sbb
test
dec
inc
mov
jnp
enter
fbld
sub
loopne
jg
sub
push
lock
leave
in
push
movs
data16
jle
mov
les
xchg
fst
ret
mov
mov
(bad)
retf
adc
fwait
adc
(bad)
sub
aaa
or
leave
adc
mov
inc
cmc
add
arpl
and
pop
or
push
mov
in
adc
cmp
loopne
mov
gs
ss
pop
or
push
push
(bad)
xlat
dec
xor
mov
jecxz
push
cmp
dec
mov
mov
cmps
js
in
fmul
dec
lods
es
cmp
sub
pushf
ss
std
je
mov
pop
leave
mov
jo
push
fst
loope
xchg
cs
inc
sub
jmp
mov
stos
cmps
xchg
mov
cmps
push
push
retf
or
xchg
mov
or
or
dec
call
mov
inc
dec
adc
mov
and
sbb
push
outs
mov
pop
test
sahf
mov
pushf
jae
or
xchg
repnz
gs
outs
dec
dec
inc
stc
mov
pop
jnp
call
mov
jns
jne
jae
mov
push
mov
ds
mov
imul
sti
test
dec
sbb
loop
sahf
pop
jns
test
dec
jno
mov
pop
(bad)
int3
arpl
and
dec
rol
out
je
push
adc
arpl
xor
mov
mov
xor
jge
test
jno
add
jae
fld
ss
sti
(bad)
fldenv
xchg
sub
xor
mov
mov
jb
in
push
sbb
jmp
push
xchg
add
jmp
jne
push
retf
popa
push
push
push
jmp
aam
cmp
repnz
pop
add
or
dec
je
jno
lods
mov
mul
sub
or
jne
je
fsub
ins
clc
xchg
dec
shl
leave
sub
cld
lods
outs
sub
(bad)
xor
push
mov
int3
sbb
jb
jno
and
lock
fld
lods
into
pop
mov
call
adc
ins
mov
outs
lahf
fstp
jl
nop
xchg
test
and
mov
xchg
inc
adc
mov
sub
gs
test
lods
test
mov
cmp
pop
pop
cwde
cwde
(bad)
xchg
aad
out
jmp
xchg
jp
sbb
(bad)
push
mov
dec
enter
popa
rol
jmp
cmps
add
fld
cmp
mov
cmps
js
out
fdivrp
pop
(bad)
(bad)
int3
ins
fld
push
jmp
jp
cs
cmp
push
xchg
jo
mov
mov
jmp
scas
jg
jns
pop
push
and
scas
ins
dec
and
and
add
or
push
imul
mov
jecxz
mov
fstp
imul
lahf
ds
mov
pop
and
add
mov
pop
or
test
ds
mov
xchg
jnp
imul
pop
movs
pushf
cmp
pushf
call
sub
nop
jb
mov
lods
movs
lock
mov
inc
or
es
and
icebp
daa
push
pop
inc
ins
pop
dec
lds
jle
cld
xor
scas
sbb
mov
test
mov
aas
(bad)
in
ret
pop
mov
mov
sbb
inc
jmp
mov
pushf
rol
out
test
adc
outs
mov
dec
loope
iret
int
add
out
jle
rcr
hlt
push
pop
aaa
xor
jl
mov
mov
add
sub
or
jae
aaa
and
sub
ja
adc
int3
aaa
sub
arpl
mov
jno
in
xchg
jo
sbb
mov
jnp
jmp
std
neg
repnz
xchg
ret
mov
enter
inc
ins
lea
mov
mov
or
fadd
or
(bad)
js
repnz
in
mov
mov
in
push
ins
push
dec
and
fisub
pop
gs
fist
xor
mov
add
xchg
leave
or
lock
xchg
cmp
add
inc
dec
in
(bad)
adc
mov
mov
lods
(bad)
sub
retf
inc
not
sub
pop
movs
push
add
dec
push
mov
push
fld
jne
xchg
pop
jns
dec
xor
xor
inc
out
mov
retf
adc
fs
sbb
adc
lods
imul
pop
stos
sahf
dec
cmp
ins
in
mov
div
sub
idiv
call
pop
(bad)
push
mov
mov
jo
jecxz
enter
test
add
retf
inc
stc
(bad)
fdiv
xor
sub
mov
xchg
adc
test
je
xchg
pop
inc
and
call
xor
nop
mov
xor
test
mov
mov
shl
jge
mov
lahf
ss
fidivr
xlat
cwde
cwde
shr
pop
add
pusha
pop
cmps
push
mov
fimul
jo
xor
jnp
fwait
add
(bad)
xchg
inc
call
push
xchg
loope
inc
inc
jbe
dec
pop
cdq
iret
imul
ins
sub
mov
cld
inc
push
popa
sbb
xchg
xchg
scas
mov
mov
sbb
mov
rol
dec
inc
test
push
xchg
push
(bad)
shl
mov
push
and
mov
jmp
mov
into
fiadd
cmps
mov
inc
or
cmp
aaa
mov
add
into
retf
sbb
xchg
dec
loope
(bad)
xchg
push
mov
xchg
mov
fwait
sahf
dec
outs
cdq
sub
xchg
mov
(bad)
jmp
aas
inc
push
push
mov
and
outs
shl
test
xor
dec
mov
inc
cmps
cmps
mov
cmp
push
mov
stos
cmp
pop
aad
xor
or
ins
xor
inc
out
dec
pushf
dec
cmp
jnp
retf
movs
stos
lea
xchg
dec
jb
cdq
xchg
mov
add
sbb
es
pop
add
loope
xchg
mov
mov
jae
add
(bad)
sub
(bad)
mov
mov
jb
pop
sub
push
fist
cwde
mov
pushf
and
gs
test
adc
pop
cld
cs
push
outs
jmp
int3
icebp
jbe
jno
pop
xchg
(bad)
pop
rcr
fnsave
int3
rcr
dec
pop
out
imul
mov
and
pop
jnp
test
call
pop
mov
loop
inc
jp
ret
jmp
retf
(bad)
shr
fisub
pop
mov
push
mov
push
repnz
loop
clc
jmp
mov
mov
out
inc
mov
xor
fmul
dec
out
fisttp
int
xchg
add
data16
enter
mov
arpl
pcmpgtd
inc
ficomp
or
mov
sbb
pop
les
xor
sbb
outs
mov
lods
jo
add
dec
or
aas
xor
adc
imul
sbb
mov
retf
les
fdiv
push
push
(bad)
and
push
sbb
cs
shl
fs
add
sahf
mov
movs
mov
pushf
xchg
ret
jnp
pop
imul
mov
nop
gs
sub
fisttp
push
mov
sti
std
dec
test
pop
call
pop
dec
cmp
rcl
push
iret
xchg
ds
dec
out
out
or
and
pop
stos
ror
sahf
xor
jge
test
pop
js
or
pusha
push
mov
stc
cmp
cs
lock
sbb
pop
push
enter
sub
je
sub
fild
mov
shl
rcr
jno
imul
in
stos
cmps
adc
mov
and
xor
dec
fldcw
cmps
in
out
fcomip
pop
lea
lea
ret
in
cmp
(bad)
xor
and
mov
add
jmp
(bad)
adc
into
cli
and
call
cwde
push
sbb
sbb
dec
xchg
pop
push
and
aad
xchg
rcr
sbb
imul
inc
rcr
das
fs
stc
imul
fsubp
fmulp
ss
inc
xchg
mov
jae
scas
ins
dec
aaa
sbb
les
xchg
pop
push
ror
push
mov
cld
xor
mov
shl
xchg
jecxz
mov
imul
xor
mov
dec
xchg
rcl
and
push
shl
jno
dec
popf
mov
push
pushf
pop
mov
inc
adc
xor
cmps
out
sub
out
mov
scas
jge
adc
mov
pop
jb
mov
pop
loope
sbb
mov
adc
cmps
push
inc
inc
xchg
cmc
pop
dec
clc
fdiv
and
mov
mov
push
dec
loop
cmc
cmp
cld
scas
cmp
sbb
mov
pop
fisttp
das
test
mov
push
cmp
add
mov
jg
push
sub
sahf
add
cdq
pop
mov
pop
sub
test
sub
and
lds
cmps
test
mov
dec
jp
pop
fidiv
push
sti
xchg
aad
inc
jne
cli
cmps
pop
(bad)
pop
or
ja
push
or
nop
mov
stc
jns
out
into
in
mov
outs
mov
jg
adc
xor
add
stc
mov
dec
xchg
leave
leave
jno
pop
(bad)
loop
xor
sar
es
(bad)
std
ficom
pextrw
add
sar
jns
cmp
std
mov
daa
ins
xor
mov
ins
cmp
dec
and
sub
cmps
cmp
push
ror
fisttp
xor
movs
mov
jb
icebp
pop
jns
lahf
retf
retf
mul
push
xlat
icebp
mov
cmps
cmc
dec
sbb
sub
mov
mov
in
xor
inc
in
sbb
add
sar
popf
cli
movs
mov
cmp
mov
mov
scas
sbb
lock
push
stc
cmp
ins
cmp
mov
scas
and
pop
inc
sub
push
jb
fldcw
pop
retf
inc
div
stos
cmp
shl
mov
int3
jg
lods
js
repz
popa
cmp
mov
test
xchg
pop
push
pop
call
shl
pusha
addr16
test
sahf
sub
je
out
into
pop
cmp
test
dec
sub
sbb
ret
pushf
es
push
sar
in
shl
xchg
cmp
lea
(bad)
jne
jae
retf
leave
data16
(bad)
(bad)
fcomp
xchg
dec
(bad)
or
mov
shl
imul
push
jp
imul
or
mov
lods
dec
jl
outs
mov
push
sbb
test
sahf
mov
stos
(bad)
jmp
xor
sbb
cmps
mov
outs
mov
movs
pusha
sahf
xor
pop
pop
pop
adc
xor
sahf
cmp
adc
xchg
dec
sbb
mov
fimul
xchg
cmp
in
push
add
mov
sbb
neg
or
cs
pop
mov
fld
call
ror
mov
jnp
inc
stos
scas
mov
xchg
lea
adc
and
or
xchg
(bad)
scas
sub
cmp
call
out
mov
sub
and
(bad)
adc
mov
lahf
sub
popa
xchg
jns
sbb
enter
retf
xor
adc
jge
cmps
inc
inc
mov
and
add
popf
xchg
dec
clc
arpl
inc
or
out
mov
movs
push
arpl
cmp
iret
test
push
enter
push
xor
mov
js
adc
sbb
ret
mov
mov
(bad)
or
lds
jge
sbb
fwait
pop
pop
xchg
in
data16
scas
leave
dec
rcl
and
jo
and
popa
in
pop
pusha
push
imul
mov
mov
xchg
pop
mov
dec
aam
or
fiadd
cmps
add
fisttp
ret
mov
or
mov
pop
hlt
dec
into
icebp
or
cmp
out
jecxz
arpl
cld
mov
cdq
inc
adc
(bad)
es
sbb
cmp
add
sbb
mov
or
lock
outs
mov
imul
cmp
lods
loope
bnd
push
xchg
ret
mov
push
sbb
test
mov
test
or
ins
jno
out
outs
pop
pushf
jo
inc
or
lea
scas
int
xor
mov
fucomi
int3
jnp
dec
(bad)
jp
test
xchg
cdq
loope
add
mov
ret
jne
mov
jp
fcomp
sar
or
xlat
fxch
mov
mov
mov
call
ud2
and
push
loop
test
aad
sbb
mov
pop
out
div
mov
pop
fs
xor
(bad)
xor
bnd
iret
addr16
out
push
push
sbb
fnsave
aas
vmwrite
div
arpl
clc
jno
cmps
(bad)
out
daa
dec
adc
push
mov
mov
ffreep
cmps
inc
pop
sbb
inc
repz
out
ret
popf
jmp
lds
jb
add
movs
inc
dec
pop
dec
bound
mov
inc
(bad)
xlat
hlt
push
xchg
int
mov
cmps
push
mov
xchg
jle
ins
dec
mov
cmp
dec
not
inc
mov
test
scas
lods
out
imul
pop
loope
xchg
jno
(bad)
mov
mov
inc
sub
jmp
jns
nop
push
xor
sub
push
loopne
icebp
mov
xchg
and
gs
push
retf
int3
movs
lock
inc
ins
shl
push
retf
and
sub
loope
retf
mov
xor
adc
sub
jg
popf
xchg
cs
pop
pop
je
jbe
pop
pop
add
pop
and
nop
push
dec
retf
jp
xchg
cmps
or
dec
pop
and
lahf
je
pop
push
push
mov
test
arpl
or
push
neg
outs
mov
xchg
push
xchg
pop
adc
es
inc
mov
jnp
jo
inc
dec
cmp
jge
ins
lds
pop
int
fiadd
stos
and
dec
out
or
aad
inc
ficom
fdiv
stc
push
and
retf
dec
inc
movs
cmps
ja
cwde
(bad)
push
pop
(bad)
jo
fs
xchg
xor
mov
arpl
idiv
(bad)
in
mov
scas
stos
xchg
push
sbb
xlat
push
pop
(bad)
retf
stos
mov
xchg
dec
add
fadd
ins
mov
push
jae
ret
mov
xchg
shr
imul
retf
shr
push
pop
push
aaa
jg
outs
mov
push
sub
jo
sbb
lock
jmp
call
mov
and
mov
lods
dec
sbb
mov
mov
shl
scas
(bad)
mov
pop
jno
das
test
loopne
(bad)
push
ins
and
cmps
sbb
loope
push
call
xchg
fmul
cmp
mov
push
mov
std
cwde
or
adc
into
mov
push
dec
stos
pop
xor
test
ret
ds
jo
cmp
(bad)
icebp
int
stos
mov
sbb
popf
pop
dec
rcl
adc
jbe
add
xor
mov
jbe
inc
jecxz
sub
dec
out
call
sbb
retf
lahf
pop
jmp
(bad)
cmp
xchg
lds
test
jns
push
int
stos
pop
cmp
test
fist
sti
or
scas
sub
mov
ss
xor
mov
sahf
movs
dec
mov
xchg
hlt
jae
dec
xchg
retf
push
bound
pop
outs
test
push
lds
shl
inc
mov
push
mov
shr
adc
jmp
cmp
jae
retf
or
mov
inc
outs
add
inc
aam
push
mov
lods
out
movs
ds
cwde
ins
je
sbb
ds
and
add
lea
sub
pushf
je
test
adc
popa
test
rcr
out
ret
and
js
push
inc
ror
or
ror
clc
push
int
leave
jns
xchg
push
adc
xchg
dec
and
(bad)
sti
push
push
or
jne
fidiv
sbb
repnz
fs
mov
cmp
nop
cmp
inc
repz
push
mov
je
shl
mov
dec
pop
aas
mov
mov
clc
cmps
jno
cwde
and
xchg
xchg
mov
push
stos
das
pop
push
int
jno
cmps
xchg
aas
mov
jno
cmp
push
lea
inc
inc
push
cdq
sub
xchg
repz
outs
push
mov
gs
(bad)
je
sti
rcr
stc
jmp
jae
clc
scas
cmc
or
not
sbb
adc
stos
cmps
scas
xchg
push
fist
mov
add
jae
sbb
cmp
cmps
outs
mov
pop
cmovb
mov
pop
daa
loope
arpl
jb
adc
sbb
hlt
test
test
ja
push
xor
jmp
adc
div
mov
adc
sti
stos
dec
adc
inc
and
push
loop
rcr
sbb
push
jnp
and
xchg
jecxz
xchg
push
cmps
ret
loop
cmps
xchg
inc
imul
jmp
scas
int3
stos
mov
push
ficomp
ins
shl
mov
inc
loop
pop
pusha
and
mov
in
sbb
push
call
out
sbb
pop
sbb
js
iret
dec
jae
fnsave
(bad)
test
sbb
in
out
retf
sti
cmp
repz
inc
retf
test
mov
jnp
ja
sbb
mov
lods
pop
inc
add
je
addr16
dec
arpl
call
and
clc
data16
mov
mov
fstp
dec
dec
and
nop
fistp
neg
mov
into
jo
adc
mov
mov
cmp
ret
push
pop
stos
mov
add
out
cmp
imul
mov
lock
dec
int
jmp
retf
cmp
jp
cmc
cmc
adc
cmp
lahf
fs
and
pop
shr
adc
dec
lock
and
into
nop
xor
add
push
rol
mov
leave
adc
punpcklwd
loopne
sbb
or
adc
push
pushf
xor
xchg
mov
fsubr
cwde
ja
gs
pop
jp
xor
call
cmp
pusha
cmp
pop
stos
jmp
sub
aad
xchg
adc
mov
call
ins
loope
fs
inc
pop
or
mov
loop
pminub
and
ins
inc
push
cmp
in
cmp
retf
imul
cmp
jmp
and
sbb
sub
sub
mov
enter
sub
ds
xor
jmp
mov
jns
cmp
lock
ret
sub
sub
add
xchg
mov
pop
push
dec
out
scas
mov
cmps
js
add
ins
(bad)
jg
xchg
jb
dec
and
push
(bad)
jmp
pusha
push
gs
adc
adc
jmp
movs
xor
lea
cmp
and
xchg
daa
mov
adc
(bad)
jo
xor
mov
or
in
xchg
mov
outs
cmp
cmp
arpl
ss
inc
out
dec
in
inc
jmp
mov
pop
xor
out
or
push
jbe
pop
fbld
out
push
fwait
mov
inc
ja
jle
scas
xor
add
xor
rcr
cdq
shl
cmp
rcl
(bad)
ss
outs
adc
pop
out
scas
or
call
xchg
pop
push
pop
adc
sub
push
pop
jns
mov
xor
inc
xor
inc
call
mov
jge
repz
jl
jecxz
pop
sar
mov
xor
pop
jmp
(bad)
stos
sub
pop
pop
stos
jb
pop
fucomp
xor
scas
dec
ret
inc
mov
adc
ss
je
dec
jns
lahf
jecxz
in
mov
js
adc
inc
push
out
loopne
fs
pop
cmp
cmp
cmps
push
inc
add
cmp
lock
add
leave
push
sbb
xchg
add
cmp
jnp
mov
ins
and
sbb
add
inc
call
int3
adc
fwait
add
sahf
loope
sti
and
xor
in
lods
mov
dec
stos
inc
pop
xor
push
pop
in
vpavgb
addr16
push
shr
push
mov
dec
(bad)
ret
xchg
test
pop
retf
call
push
mov
shl
retf
imul
retf
and
retf
ret
std
mov
inc
cmp
and
test
inc
out
int3
ins
retf
sar
mov
mov
xchg
repnz
aam
ss
imul
test
das
jns
mov
jo
xor
call
dec
cwde
aad
retf
retf
mov
mov
test
arpl
dec
arpl
sub
sbb
push
repnz
(bad)
cs
mov
sub
cs
repz
popa
dec
es
add
jne
gs
not
int3
inc
sbb
cmp
sbb
push
je
and
xchg
mov
lahf
pop
arpl
sbb
jp
inc
retf
jno
adc
push
xchg
test
fistp
jno
js
or
lock
int3
push
ffreep
adc
jge
js
mov
loopne
mov
push
call
retf
sub
out
and
aam
cli
mov
popf
mov
test
pop
mov
mov
jp
xor
xor
(bad)
mov
and
sub
mov
loopne
ins
aad
retf
mov
sbb
gs
pop
jmp
jb
mov
sti
dec
push
imul
sub
and
fsub
inc
(bad)
aad
dec
cmp
addr16
dec
push
cmp
test
mov
hlt
dec
pop
movs
es
mov
adc
add
stos
bound
inc
pusha
call
sbb
push
sub
mov
test
cs
xor
add
add
rol
in
mov
push
adc
cmp
call
scas
jle
test
cmp
aam
mov
pop
mov
and
cmp
push
mov
sbb
dec
jb
jl
and
push
mov
mov
(bad)
or
call
mov
inc
loop
inc
std
cs
inc
imul
lahf
mov
inc
cmp
stc
mov
jecxz
add
sar
mov
ins
cmps
cs
imul
add
inc
(bad)
ja
mov
ss
cmp
scas
es
cmp
leave
les
out
mov
jp
xchg
push
mov
add
retf
mov
ins
xchg
test
aaa
mov
mov
jecxz
lods
mov
jl
lds
xor
sti
fstp
push
movs
push
js
daa
bound
jbe
xchg
push
push
mov
fwait
fwait
sub
or
mov
xchg
dec
xor
jb
xor
mov
scas
xchg
cmp
pop
mov
dec
arpl
fbld
(bad)
bound
mov
bound
fist
mov
push
mov
(bad)
push
ins
mov
inc
inc
push
push
sti
loop
mov
add
mov
popfw
sar
pushf
mov
or
pop
mov
dec
and
lods
mov
mov
loope
sbb
adc
dec
mul
mov
mov
dec
retf
shl
mov
add
jae
push
pop
cmp
push
pop
pop
fs
imul
cwde
mov
in
js
xabort
mov
pusha
loop
dec
cmp
pushf
jns
dec
pop
addr16
adc
dec
fst
dec
pop
movs
xchg
mov
adc
popf
ffree
ins
sbb
inc
in
js
mov
jbe
fdiv
push
imul
jmp
push
dec
sbb
jmp
jl
push
(bad)
add
daa
aas
inc
imul
icebp
push
or
ins
mov
(bad)
or
imul
inc
dec
add
push
bound
sub
mov
les
xchg
pop
imul
pop
xchg
fucomi
retf
xor
fdiv
fild
sbb
mov
xchg
mov
cmp
gs
loope
mov
mov
mov
scas
mul
jmp
ret
jge
pop
dec
fnsave
sub
xor
inc
pop
das
jg
nop
leave
pushf
sbb
pop
pushf
ss
inc
dec
jmp
in
stos
movs
sahf
sahf
or
fldcw
(bad)
scas
icebp
mov
dec
and
fstp
loope
xor
fisubr
inc
retf
push
xor
les
push
stos
pop
sub
imul
aad
mov
out
cwde
mov
or
lock
mov
add
mov
jb
adc
inc
sar
jae
imul
ficomp
je
and
push
je
sar
sbb
jne
enter
xor
xor
sar
mov
xor
dec
xor
arpl
sahf
mov
fcom
cmp
push
addr16
pop
jp
bound
mov
adc
sub
jns
mov
cmps
and
cwde
xor
ins
xchg
push
pop
inc
inc
nop
icebp
pop
and
arpl
pop
mov
and
push
frstor
adc
shl
and
pop
mov
mov
mov
loope
mov
data16
std
pop
ins
cmp
(bad)
(bad)
xor
fldcw
mov
fld1
pop
out
pop
add
mov
mov
pop
push
xchg
icebp
aad
xor
daa
mov
or
pop
test
out
cwde
cs
mov
mul
imul
aam
aad
xchg
stc
mov
xchg
dec
popa
test
inc
jp
and
sbb
fwait
and
dec
pop
stc
mov
mov
aaa
dec
push
adc
add
cmp
stos
pusha
xchg
popa
adc
shr
push
popa
imul
cwde
mov
adc
test
sbb
xchg
in
(bad)
push
pushf
daa
fdivr
test
out
sub
in
mov
and
test
mov
pop
mov
xor
add
stos
out
sbb
sub
(bad)
mov
cmp
sbb
mov
pop
mov
mov
dec
ja
xchg
dec
iret
mov
fst
stos
inc
pop
pop
inc
xor
mov
lods
sbb
pop
fldenv
cmp
ret
sar
cmps
pop
nop
clc
mov
loopne
data16
push
fstp
pop
pop
outs
ins
int
aad
adc
fdivr
sbb
repz
out
jnp
mov
jbe
xor
mov
dec
or
shr
fsub
push
sub
sahf
xchg
loope
cmp
iret
xchg
mov
ss
lods
mov
popf
dec
test
fsubr
pop
cmp
out
scas
xchg
push
jmp
push
imul
dec
(bad)
loop
lock
sbb
push
xchg
mov
mov
push
retf
jne
movs
into
and
cmps
mov
leave
stos
push
and
cs
and
test
mov
cmp
(bad)
or
sbb
add
movs
push
ror
movs
xchg
lods
cwde
mov
loope
xor
sub
push
sahf
sar
data16
mov
test
push
cs
shl
inc
xor
lock
mov
or
pop
inc
or
push
addr16
sbb
sbb
leave
sub
adc
mov
pop
ret
ficomp
and
push
jb
rcl
cmp
in
int3
loop
push
mov
dec
xor
or
push
mov
jbe
pop
xor
mov
je
add
xchg
arpl
fld
mov
test
dec
xor
cmp
xlat
sbb
xchg
dec
mov
mov
cmps
inc
dec
(bad)
or
add
stc
and
and
sbb
ins
push
or
sti
scas
or
mov
and
out
dec
sub
xor
jmp
outs
popw
mov
cdq
mov
stos
and
jmp
push
mov
out
jmp
cmp
xor
fisttp
stos
ja
dec
fdiv
xchg
(bad)
xchg
push
(bad)
imul
jg
ret
into
inc
inc
mov
fwait
mov
enter
out
cwde
add
mov
sbb
xor
pop
inc
out
(bad)
ins
imul
cmc
jb
mov
gs
dec
pop
adc
inc
adc
adc
jo
repnz
xchg
push
cmp
mov
push
mov
mov
mov
cmp
mov
ins
aaa
push
mov
pop
xchg
and
or
cli
cmps
les
push
mov
jbe
adc
out
or
lock
xchg
xor
mov
or
scas
jle
mov
push
rol
call
cmps
cmps
sub
mov
mov
adc
arpl
inc
and
xchg
idiv
sar
scas
jns
jnp
outs
cmps
or
and
cld
pop
dec
push
dec
xlat
push
data16
out
mov
test
mov
movs
ret
lds
mov
(bad)
jnp
pushf
mov
xor
add
and
fsub
loop
cmp
js
sbb
cmp
adc
pop
out
mov
xlat
pop
jmp
scas
in
test
popf
scas
and
(bad)
inc
jo
jb
sub
mov
xchg
sti
mov
mov
inc
or
out
cmc
sub
xchg
fwait
jg
sar
mov
adc
and
cwde
std
shr
cmp
repnz
loop
cdq
sbb
mov
fwait
cmp
inc
test
sbb
inc
inc
popf
push
pop
clc
push
pop
pop
imul
push
rol
int3
test
mov
popf
mov
sahf
mov
leave
jbe
mov
ja
jne
(bad)
or
or
ror
xchg
pop
mov
cmp
aad
fucomi
push
sbb
jbe
popa
lds
push
pop
inc
test
stos
aas
fiadd
pop
leave
cli
push
or
in
std
(bad)
dec
dec
into
jmp
movd
mov
repnz
push
sub
repz
stos
adc
test
aaa
sub
fsub
inc
dec
add
aas
imul
and
push
(bad)
cld
push
mov
int
push
call
fld
mov
dec
loope
lds
loope
mov
xchg
stc
jbe
jecxz
mov
cmp
add
pushf
jb
loope
movs
out
inc
cmp
add
xchg
imul
adc
mov
cmp
fstp
ds
in
je
xor
ss
je
imul
outs
test
movs
neg
cmps
sbb
adc
jns
ret
dec
mov
adc
aas
mov
push
adc
rol
pop
jns
or
shl
and
xchg
test
push
push
mov
mov
mov
mov
call
add
adc
mov
cwde
mov
push
xchg
and
call
sub
xchg
fcmovb
xchg
mov
mov
jne
(bad)
push
sbb
mov
call
sub
int3
lods
pop
adc
bound
dec
mov
cmps
fldenv
stc
daa
fwait
and
dec
mov
(bad)
inc
in
jbe
cmps
sbb
clc
xchg
xor
or
sahf
mov
ins
cmp
jp
scas
ret
addr16
aad
fs
test
cmp
icebp
(bad)
outs
daa
inc
dec
mov
ret
or
inc
repz
shr
xor
adc
fisubr
call
les
stos
xchg
(bad)
mov
cld
fstp
test
mov
sub
jae
sbb
(bad)
xor
push
sbb
cmp
sbb
inc
sbb
stc
aad
xor
mov
adc
xchg
(bad)
out
stos
stos
and
or
div
dec
cli
popa
cmp
pop
rol
pop
pop
std
push
stos
nop
and
and
or
inc
mov
push
pop
inc
cmc
aam
hlt
pop
cli
sub
and
pop
jo
sub
add
cli
dec
cli
dec
std
adc
loope
fisttp
cli
sub
in
push
cmp
push
mov
add
add
movs
imul
nop
inc
cmp
ret
mov
push
dec
scas
fisttp
movs
inc
mov
mul
inc
jmp
adc
cmp
loope
mov
sbb
push
enter
aam
sbb
cwde
dec
aaa
cld
test
jmp
popf
fisub
aaa
push
lods
ss
loopne
sbb
inc
test
lock
push
jg
inc
or
ret
pop
inc
cmp
pop
fs
lods
mov
cmp
xchg
paddd
pop
movs
mov
push
dec
in
fild
hlt
xchg
retf
push
add
and
stos
popf
popa
mov
ja
cmp
in
mov
cs
mov
leave
rcr
xchg
pop
repnz
xlat
xor
fsubr
test
dec
xor
mov
(bad)
inc
jl
mov
sub
add
sub
xchg
jmp
std
(bad)
sar
jmp
sub
cmp
inc
leave
jne
or
and
or
push
sbb
or
pop
test
cmc
pop
xchg
adc
cwde
sub
cs
pop
out
in
jno
aaa
cmp
scas
cmp
fcomp
push
sahf
xchg
int3
aas
mov
mov
adc
push
cmp
enter
ins
outs
ins
xchg
jge
mov
cmps
in
sbb
cld
dec
sar
iret
imul
jne
jecxz
mov
sub
in
arpl
call
stos
mov
mov
adc
mov
cmps
test
loopne
push
aad
cmps
pop
scas
cmp
sub
iret
dec
and
aas
icebp
xor
adc
and
lds
inc
movs
into
std
push
xchg
test
add
mov
cmp
ss
int3
sahf
inc
je
ds
mov
mov
xchg
(bad)
push
jp
fsub
in
jecxz
ins
cmps
dec
push
mov
lds
jecxz
jne
std
pop
mov
test
clc
pop
scas
add
or
lahf
jmp
and
push
ja
shl
imul
or
jbe
je
lods
jno
add
arpl
mov
cli
xchg
and
mov
dec
inc
add
(bad)
cmp
add
xor
add
popf
fld
push
mov
out
mov
(bad)
popa
loopne
sub
not
jo
push
sbb
fst
(bad)
mov
dec
xor
push
cld
sub
outs
cmp
xchg
sbb
add
adc
retf
mov
je
sub
xchg
jnp
outs
dec
xchg
xor
inc
pop
out
(bad)
mov
(bad)
call
fwait
adc
xor
in
jb
ret
clc
mov
xchg
xchg
call
or
jmp
mov
ins
cld
dec
pop
sbb
xchg
sbb
ror
ins
jno
jb
fs
fst
inc
je
or
adc
or
outs
push
std
nop
cmp
cdq
pop
int3
and
in
out
mov
je
sti
test
retf
sbb
xor
mov
imul
or
xchg
push
mov
ja
call
xchg
pusha
pop
shl
or
(bad)
or
push
imul
int
sbb
shl
fiadd
aam
lods
out
pop
or
push
pushf
jmp
push
jnp
shl
imul
xlat
shr
dec
fwait
mov
sbb
fiadd
cmc
push
cli
leave
in
fmul
inc
inc
loope
adc
shl
mov
mov
call
cmc
mov
fadd
fist
es
sar
mov
or
pop
mov
xchg
adc
cmp
(bad)
imul
mov
mov
repz
iret
cmps
jmp
lds
mov
out
xchg
fsubr
mov
pop
push
mov
not
inc
sti
leave
inc
nop
jne
and
cmp
cmp
jo
xchg
mov
pop
call
scas
mov
pop
les
aaa
push
out
xor
addr16
sub
retf
inc
and
or
add
cwde
dec
add
sbb
movs
das
aas
test
push
xor
js
retf
jae
test
sbb
push
cmc
push
je
out
cwde
jns
push
mov
jne
fnsave
xchg
dec
(bad)
(bad)
fsub
mov
mov
pop
pop
dec
sub
cmps
mov
cmps
push
inc
add
jp
pop
lds
out
inc
sbb
movs
or
mov
and
enter
add
dec
add
inc
sbb
add
sub
or
into
sbb
adc
(bad)
xchg
push
fcom
fs
push
cs
cmp
(bad)
push
jns
mov
pop
and
pop
push
fist
cmps
movs
adc
pop
fdivr
xchg
adc
add
jmp
lods
cmp
je
fnstcw
ja
outs
mov
iret
inc
fistp
mov
add
call
out
fiadd
xchg
ins
add
leave
add
pop
add
call
sub
sub
popa
repnz
out
push
clc
mov
inc
neg
and
xchg
jmp
push
inc
out
popf
cdq
(bad)
dec
pop
push
out
pop
outs
shl
addr16
cli
xor
or
ins
jp
push
xchg
jecxz
jne
stc
push
add
cmps
loop
cmp
mov
jmp
push
cwde
test
xor
xchg
fisubr
pop
cmp
push
mov
and
pushf
lods
test
(bad)
cmp
push
pushf
call
pop
mov
in
test
and
in
shl
stc
jne
lea
pop
es
arpl
pop
push
and
push
push
outs
dec
retf
dec
dec
or
gs
sub
jns
push
xchg
add
xchg
cmp
mov
or
push
dec
dec
inc
lahf
adc
ret
cs
nop
add
mov
dec
mov
dec
mov
fsub
test
cli
test
mov
ret
movs
push
sbb
nop
cmp
mov
fldcw
fisub
mov
jb
add
sub
mov
mov
jmp
sbb
mov
scas
mov
and
xchg
and
outs
in
jbe
sub
xor
in
jbe
ss
sbb
dec
aaa
push
xchg
sbb
push
xchg
xchg
mov
xchg
sbb
popf
call
or
shr
das
outs
inc
popf
mov
mov
fs
jb
mov
inc
sbb
lods
push
jnp
xchg
push
inc
ss
adc
imul
and
dec
cmp
loope
jp
out
ficomp
inc
popf
adc
pop
mul
and
sub
stc
and
adc
retf
mov
sbb
push
inc
sbb
fnstenv
scas
std
lahf
aam
in
sub
(bad)
and
mov
mov
and
mov
stos
push
cmps
addr16
or
int
inc
push
mov
out
out
fmul
retf
ins
mov
sbb
(bad)
ins
cmps
stos
push
ret
fcomp
push
mov
loope
inc
clc
mov
mov
(bad)
dec
inc
jbe
sbb
sbb
cmp
add
push
cmp
fwait
mov
adc
sbb
add
retf
inc
sbb
arpl
push
daa
inc
dec
add
icebp
fwait
ins
cli
dec
ins
mov
outs
inc
hlt
inc
(bad)
in
mov
jle
leave
rol
mov
inc
xchg
mov
sub
pop
sub
dec
push
and
cmp
lods
mov
jae
or
adc
test
add
shl
cmp
push
adc
fsubr
adc
movs
out
bound
pop
out
je
mov
stos
(bad)
adc
cwde
jae
ins
adc
push
pop
loope
outs
mov
adc
mov
lods
xchg
dec
outs
jne
div
hlt
dec
mov
jno
mov
aam
dec
or
lock
lock
xchg
inc
mov
jnp
push
daa
sub
shr
sub
xchg
gs
cmp
sbb
xor
mov
xor
jge
inc
(bad)
idiv
push
dec
push
sbb
mov
mov
mov
int
pop
xor
cdq
and
mul
scas
jp
inc
xchg
jecxz
push
push
ficomp
cmp
xor
loopne
js
and
int3
sub
push
cmps
and
iret
mov
(bad)
mov
or
cs
ffree
pop
mov
xor
repnz
add
in
dec
jmp
cmc
inc
aas
setb
outs
dec
(bad)
mov
fstp
mov
push
dec
das
call
rol
lods
test
mov
daa
je
push
pop
xchg
or
fsubr
sar
xor
push
mov
ins
cmp
into
cs
pushw
dec
stos
pusha
push
lock
or
inc
frstor
outs
xchg
jmp
sub
daa
jnp
and
adc
sub
add
sub
and
pop
adc
fiadd
lahf
mov
push
and
icebp
push
cmp
dec
sbb
sahf
in
and
ss
rol
in
and
test
push
inc
daa
mov
or
fistp
test
cmp
or
xor
add
push
sbb
ins
mov
call
repnz
adc
mov
xchg
cmps
in
in
(bad)
and
jmp
inc
xor
push
xchg
or
loopne
call
push
push
cli
mov
push
rcl
push
jo
test
add
ss
jne
imul
add
or
or
std
push
rol
inc
mov
dec
or
xchg
scas
dec
mov
(bad)
imul
ror
add
(bad)
out
sub
inc
cmp
cdq
addr16
cmp
imul
mov
mov
test
pushf
push
xchg
add
sub
xor
daa
lock
into
sar
enter
inc
in
cmc
mov
jbe
pop
sub
sbb
jne
xor
jle
aaa
mov
aad
js
adc
stos
adc
outs
pop
pop
inc
or
add
sbb
sbb
movs
fsub
mov
in
or
add
pop
inc
add
shl
add
xchg
or
sbb
leave
out
dec
xlat
jp
cmps
sub
and
xor
call
mov
pop
mov
adc
and
push
dec
mov
mov
adc
fld
adc
shl
push
adc
dec
sar
sbb
jnp
sbb
and
hlt
push
pop
cmp
loop
outs
mov
mov
retf
ins
mov
adc
outs
mov
adc
test
and
jns
mov
xchg
sub
inc
shl
cmp
xchg
add
in
cmp
sbb
out
out
inc
ins
popa
in
mov
test
or
loop
and
(bad)
adc
pushf
jecxz
xchg
ins
lods
xchg
mov
mov
in
xchg
dec
dec
inc
xor
xor
mov
pop
dec
out
jmp
jnp
push
xor
aaa
push
fsubp
out
jnp
dec
jmp
fst
cmp
div
test
test
stc
stos
jle
xor
inc
add
fcmovne
mov
test
punpcklwd
jne
hlt
lahf
xchg
xchg
cmp
xchg
stos
mov
rcl
cwde
lods
loop
mov
in
sbb
repz
mov
jne
sbb
test
and
or
call
xchg
into
cli
jmp
loop
jno
call
popf
jp
fisttp
dec
mov
mov
lods
lds
push
push
sti
sub
outs
ins
adc
push
cdq
pop
rcr
mov
popf
out
pop
or
popf
out
xchg
add
xor
movs
fs
pop
mov
add
mov
pop
and
sbb
and
pop
push
(bad)
sbb
test
and
fisttp
movs
xchg
pop
fcomp
adc
dec
jge
test
ins
xor
jp
inc
jns
es
movs
pop
jl
xchg
(bad)
fcomp
fsubrp
and
jmp
dec
ja
icebp
adc
jbe
ja
inc
xor
push
fnsave
inc
xor
dec
(bad)
push
sar
retf
mov
adc
std
mov
in
dec
leave
pop
pop
mov
xchg
sbb
jl
ins
mov
or
mov
sbb
bt
xchg
jle
shr
out
cwde
push
and
data16
adc
test
cmp
cmps
sbb
(bad)
mov
add
ja
mov
push
jns
int3
cld
inc
cmp
mov
lods
test
sbb
xchg
mov
sbb
ss
popa
clc
fisttp
xchg
jmp
imul
and
into
retf
xchg
push
cmc
call
jmp
jge
or
inc
into
arpl
test
daa
out
popf
pop
arpl
push
cmp
inc
pop
ret
mov
das
add
ins
or
fnsave
cmp
inc
gs
adc
or
rcl
push
mov
sub
neg
cmp
bound
cmp
test
pop
ror
loope
cmp
(bad)
shr
sti
adc
sub
cmp
sbb
icebp
push
fld
gs
dec
mov
js
mov
sbb
popf
rep
test
(bad)
imul
jmp
shr
push
jno
dec
mov
pop
adc
fild
pop
js
xchg
lds
sar
mov
sbb
sbb
iret
cmp
repz
test
push
int
into
sar
xor
out
jns
scas
sub
int
or
sbb
push
data16
fucomi
push
mov
in
imul
ror
outs
(bad)
xor
or
pop
or
jae
or
and
cmp
pop
inc
(bad)
push
into
inc
sbb
push
jo
sub
lods
in
or
mov
fistp
and
fidiv
jbe
xchg
ret
loop
dec
fsubr
push
mov
es
loope
dec
xchg
mov
xor
mov
shl
das
and
xchg
mov
bound
and
test
scas
test
ins
fbld
cdq
stos
push
or
jbe
fiadd
cmps
shr
int3
cs
ss
loope
mov
scas
retf
push
push
loope
and
cmps
movs
cmps
pusha
ror
mov
mov
test
mov
mov
jle
pmaddwd
popa
ss
xchg
sub
sub
jg
shl
arpl
inc
cwde
sub
movs
inc
pop
loope
add
dec
cwde
inc
(bad)
mov
inc
inc
in
or
mov
xor
fisub
add
xor
aad
pop
add
pop
xor
and
mov
and
mov
in
mov
fldcw
sub
inc
gs
inc
test
xchg
push
adc
and
inc
sub
xor
icebp
cmp
mov
xchg
shl
stos
ja
add
cs
(bad)
and
inc
fnsave
mov
adc
mov
push
bound
pushf
inc
data16
push
and
mov
push
rcl
push
mov
adc
je
xchg
ja
jmp
cmps
rcr
imul
movs
loope
push
push
js
popf
sbb
ret
cmp
sbb
sub
rcr
inc
pushf
and
xchg
mov
mov
add
shl
cdq
mov
dec
aas
xchg
dec
imul
addr16
stc
pop
dec
in
mov
push
das
jg
into
add
dec
mov
push
cmp
sti
iret
cs
(bad)
jecxz
sub
mov
mov
mov
aad
xchg
mov
sbb
jo
ss
cwde
or
cmps
(bad)
aad
clc
stos
mov
sbb
leave
or
div
ds
sub
(bad)
ret
adc
add
loope
cmp
jmp
pop
imul
jb
jno
call
cmps
(bad)
push
stos
leave
xchg
push
xlat
xlat
push
iret
in
xchg
in
cmp
sar
icebp
dec
push
sar
pop
rcr
xor
ins
fld
(bad)
stos
cmp
mov
pusha
popf
mov
pop
(bad)
call
stos
mov
pop
inc
xchg
ins
inc
cmp
ins
jae
hlt
jo
sub
pop
jl
sahf
pop
arpl
cdq
pop
and
xor
pop
loop
repnz
xor
xchg
fsubr
je
fcom
retf
sbb
shl
dec
jae
inc
cdq
cdq
scas
lds
mov
hlt
pop
or
loopne
ret
pop
cmp
push
stos
jle
dec
in
push
mov
neg
or
xor
mov
inc
pop
pop
pop
ror
clc
cmps
stos
cmp
push
adc
xchg
mov
xchg
scas
les
fsubr
aam
fist
out
lock
data16
sbb
cmp
and
das
popa
leave
push
shl
inc
adc
scas
cmp
dec
mov
or
mov
sahf
sti
test
add
cmc
inc
mov
scas
in
leave
cmps
mov
sub
loope
mov
and
lds
in
xchg
xchg
jns
xor
add
xor
jbe
test
lods
add
mov
imul
add
and
pop
and
pop
inc
leave
xchg
frstor
inc
lea
dec
jnp
test
nop
cli
mov
push
jnp
aad
mov
xor
xchg
jmp
in
shl
call
daa
inc
and
push
fild
repnz
adc
or
xlat
cmp
movs
fisubr
dec
sub
push
dec
mov
stos
or
pop
fsub
mov
repnz
lods
nop
ffree
xchg
inc
stos
fsub
loopne
inc
mov
scas
sbb
jmp
mov
cmp
xchg
xchg
cli
ret
std
fild
pusha
mov
les
fcmovb
or
iret
cmp
adc
in
pop
push
sbb
repz
iret
mov
je
dec
inc
push
(bad)
repz
xor
scas
push
call
loop
retf
loopne
inc
fisttp
fdivr
add
or
mov
add
arpl
out
ret
pop
leave
sub
mov
(bad)
push
jle
in
add
sub
ds
xor
stos
jo
dec
mov
inc
add
mov
push
movs
push
push
mov
popa
mov
xor
or
stos
sti
aad
mov
and
stos
iret
shl
fs
mov
repz
cmc
sub
sbb
inc
add
dec
rcl
div
fmul
jae
and
fstp
adc
xor
sahf
outs
in
push
xor
call
pop
add
push
popf
mov
inc
jbe
loopne
mov
mov
xchg
out
stos
jae
ret
sbb
leave
repz
or
stos
outs
shl
icebp
or
mov
call
outs
and
(bad)
sub
in
push
repnz
call
push
push
dec
fdivr
sub
mov
lahf
adc
lods
test
dec
les
in
(bad)
jecxz
cli
je
mov
inc
xchg
sub
cs
nop
in
xchg
idiv
(bad)
jbe
xor
jb
push
push
iret
dec
out
dec
xor
cmp
xchg
(bad)
sub
push
jge
ret
cmp
mov
jg
pop
dec
ds
xlat
mov
movs
(bad)
popa
mov
mov
adc
mov
jp
sbb
xchg
push
xchg
repnz
mov
sbb
and
and
inc
icebp
xchg
jmp
xchg
jno
dec
(bad)
add
jno
or
adc
push
pop
bnd
out
xor
and
cmp
iret
aad
xor
or
sbb
mov
push
sbb
push
sar
dec
fidivr
out
cmp
pop
cmp
xchg
pop
mov
sti
mov
lods
pop
ins
jg
ins
jle
fcomp
(bad)
fist
fwait
jmp
lock
cmps
cmp
jmp
and
mov
jge
aas
inc
xor
cmp
jno
pusha
std
push
and
fs
fistp
sub
mov
loopne
lods
push
cs
or
repnz
scas
mov
out
mov
add
repz
mov
mov
aad
push
ret
and
sbb
cwde
mov
cmps
cmp
aam
aaa
imul
dec
xchg
lods
mov
push
mov
setle
pop
ds
and
imul
pop
mov
mov
ins
xchg
mov
jb
dec
ret
xor
in
lods
je
mov
pushf
pop
lock
or
inc
push
push
pop
inc
fimul
cmps
cmp
pop
cs
icebp
mov
and
sbb
clc
in
test
out
cdq
push
push
or
cmp
(bad)
sbb
xchg
sahf
inc
sub
xchg
test
cmp
adc
inc
dec
sbb
in
jecxz
leave
push
in
cmp
mov
fbstp
pusha
cmps
retf
sbb
stos
jno
sub
scas
das
sub
ja
mov
add
jne
inc
xor
test
fbstp
movs
sub
mov
mov
jl
(bad)
sub
or
call
loop
sub
loope
daa
dec
outs
shl
jg
aas
test
dec
lods
out
ins
arpl
mov
mov
dec
mov
cwde
retf
fist
mov
mov
leave
pop
ds
imul
pop
addr16
dec
lfs
sbb
push
fist
arpl
or
push
inc
mov
mov
gs
in
cmp
xor
push
mov
cmps
xchg
sbb
sbb
push
test
add
jno
cwde
pop
mov
xlat
sar
cmp
call
inc
and
jmp
dec
inc
xchg
stc
pop
(bad)
imul
jecxz
pusha
sub
sub
cmps
jo
sti
inc
div
pop
pop
jg
or
cmp
jmp
jecxz
cwde
mov
jbe
push
adc
pop
(bad)
stos
stos
pop
das
fidivr
stc
ud0
rcl
pop
dec
pusha
gs
mov
in
ror
lahf
ret
stos
jp
test
xchg
fcomp
fimul
aas
out
sbb
pop
or
mov
push
push
xchg
fwait
cmc
sbb
shl
sub
addr16
xor
ins
stos
jmp
inc
cmc
clc
lods
cmp
jmp
mov
inc
adc
sub
xchg
(bad)
adc
pop
pop
dec
ret
jl
and
mov
hlt
or
inc
call
int3
jge
and
add
and
sub
popf
cli
mov
int
aad
mov
jae
xor
pop
rol
or
sbb
sbb
pushf
push
dec
dec
(bad)
int
add
inc
jnp
and
lea
sub
les
jl
jnp
pop
mov
push
aaa
add
fstp
dec
xchg
xchg
call
xchg
cmp
lahf
es
hlt
pop
jnp
cmp
sbb
adc
mov
and
enter
mov
xchg
sahf
addr16
lds
pcmpgtb
sahf
loope
xchg
mov
add
loopne
inc
and
(bad)
fcmovnb
push
mov
fsub
inc
cwde
add
jmp
repz
jns
cmp
sub
leave
js
push
ja
test
xchg
sbb
mov
xchg
mov
sti
lods
and
add
movs
mov
and
(bad)
push
and
daa
jo
inc
shr
cmps
enter
push
xchg
sub
inc
fimul
bound
cmp
push
aaa
mov
fstp
cmp
xor
sbb
shl
in
dec
xlat
or
inc
shl
inc
or
jp
pop
xchg
call
iret
sub
ss
in
jge
add
and
xor
aam
dec
std
shr
movs
xchg
out
sar
aas
je
add
xchg
jmp
mov
xor
ins
adc
cmc
push
pop
xchg
xor
mov
cmps
cdq
fstp
aam
inc
in
push
out
loopne
(bad)
fidiv
jmp
mov
mov
pop
or
mov
loop
daa
rcl
loopne
dec
push
cmp
push
pop
cmp
sbb
in
movs
cmp
cwde
movs
push
(bad)
jb
sahf
enter
push
sbb
jnp
bound
outs
push
push
or
or
xchg
rcl
call
ret
int3
add
xchg
leave
jns
jmp
test
outs
and
inc
aad
inc
pop
leave
sbb
call
adc
pusha
or
pop
push
rcl
mov
xor
push
and
int3
cmp
mov
les
pop
mov
add
adc
sub
adc
xchg
pusha
jmp
nop
test
fsub
push
jae
push
popa
icebp
cdq
addr16
inc
rcl
ret
dec
push
sub
xchg
xor
dec
cwde
div
call
fisub
push
rcl
call
pop
push
int
cmp
mov
push
das
adc
fbstp
ror
push
mov
dec
sbb
test
xchg
mov
dec
xchg
ds
mov
lock
mov
xor
mov
repz
popa
xor
sbb
punpckhbw
pop
sbb
adc
sbb
adc
inc
add
xchg
and
cmp
mul
pop
xchg
inc
sahf
mov
pop
cmp
or
or
sti
shl
lods
fucomip
aas
inc
jb
idiv
adc
ret
add
xchg
pop
push
cmps
iret
ja
jg
mov
jecxz
fsub
inc
je
icebp
push
data16
xlat
fxch
add
sar
add
iret
inc
repnz
adc
inc
adc
popf
jecxz
mov
ret
or
xchg
dec
pop
loopne
(bad)
cmp
lds
mov
les
add
jns
and
adc
in
dec
imul
call
popa
push
jo
ja
aam
sbb
dec
in
xchg
enter
imul
mov
aad
xsha256
cmps
xchg
mov
ficomp
lahf
adc
cmp
xchg
ror
aad
inc
mov
xchg
in
in
xchg
sbb
test
cmps
shl
mov
mov
cs
sbb
fdivp
leave
lods
mov
fisub
mov
ins
sub
test
xor
jno
retf
xchg
shr
ss
push
fld
adc
adc
imul
mov
stc
sbb
fidivr
and
and
jno
mov
cmps
mov
cmp
add
cmc
or
test
adc
xchg
or
fstp
daa
daa
aas
out
adc
xchg
in
iret
jmp
add
mov
and
add
shl
add
push
mov
push
loopne
mov
les
and
inc
imul
sub
jg
fiadd
rol
test
shl
ja
inc
loop
xchg
dec
loope
sbb
les
add
and
add
stos
mov
mov
addr16
shl
cmp
xchg
stc
stc
sub
xor
push
fnstcw
adc
out
(bad)
aam
rcl
arpl
stos
xor
ss
imul
adc
jno
(bad)
out
loopne
push
gs
loopne
pop
test
mov
icebp
dec
push
pop
sub
sub
add
mov
jbe
or
movs
adc
sti
mov
stos
outs
nop
xor
retf
push
es
jne
aad
xchg
push
sub
js
(bad)
in
add
jo
aaa
sti
pop
cmps
ret
push
jae
das
cs
mov
cmp
div
fadd
lock
hlt
pop
pop
div
pop
out
sub
inc
fnsave
stc
popf
cmps
jmp
xchg
dec
es
ret
xor
test
in
test
adc
push
mov
or
push
pop
test
sbb
and
test
mov
fmul
xor
lds
push
pop
ror
jb
xor
retf
int
xor
aaa
pop
sub
and
das
aaa
dec
adc
std
sub
pop
xor
dec
jg
push
lods
xchg
lods
and
fsub
dec
scas
jne
mov
fisubr
iret
aas
daa
sbb
cmp
in
movs
rcr
dec
adc
mov
dec
cmp
mov
cld
cmp
xor
jmp
movs
cld
adc
push
push
enter
jl
out
arpl
sbb
outs
pop
push
push
cmp
add
dec
cmps
mov
jl
mov
iret
fcmove
jae
mov
adc
(bad)
push
dec
retf
mov
fwait
aad
loop
xor
dec
or
repz
mov
xchg
jnp
in
jle
dec
jle
and
xor
adc
push
inc
inc
sub
sub
stos
jg
sub
movs
jae
xlat
je
sbb
sub
sbb
cmp
sbb
(bad)
mov
movs
test
js
xchg
jne
inc
icebp
mov
rol
test
nop
or
stos
in
hlt
xchg
retf
jns
add
bound
push
xchg
push
or
inc
pop
and
call
xchg
sub
pusha
jns
pop
(bad)
sahf
call
ins
cmps
and
push
mov
cdq
(bad)
movs
ja
dec
xor
jae
and
(bad)
inc
sbb
fiadd
mov
lahf
and
nop
rcl
or
and
sub
test
cmp
jnp
jae
stos
mov
pop
push
xchg
sti
adc
inc
pop
int3
xchg
add
dec
mov
inc
gs
into
sub
adc
lock
mov
sub
std
ss
adc
dec
out
xor
mov
loope
dec
sbb
xchg
jp
mov
sbb
shr
or
repnz
dec
jbe
xchg
or
mov
dec
out
cmp
push
mov
inc
cmp
test
sub
fistp
ins
or
fistp
cs
mov
and
adc
xchg
(bad)
jo
iret
fs
add
jle
pop
jnp
adc
add
(bad)
div
dec
xchg
and
addr16
pop
das
xor
mov
mov
or
mov
sahf
arpl
cmp
sbb
adc
call
mov
and
fcom
sub
imul
dec
xchg
jmp
ror
ds
dec
pop
xor
sub
xor
out
xchg
(bad)
mov
popa
ret
xchg
mov
(bad)
popa
lock
cmp
fistp
gs
call
or
or
push
mov
push
mov
js
daa
jg
mov
mov
clc
lea
mov
mov
cld
into
sahf
lea
lahf
mov
(bad)
jae
sub
(bad)
shl
add
jo
xchg
popa
fcom
in
sbb
push
jne
sub
sub
(bad)
pop
leave
dec
repz
cmp
pop
xor
addr16
ret
stos
movs
test
std
out
sbb
int3
ds
push
adc
movs
cmp
mov
or
add
or
stc
sub
cmps
cmps
mov
lahf
jnp
or
cmp
aam
jmp
or
aas
(bad)
rcl
and
push
xor
stc
sbb
fwait
or
mov
pop
leave
xor
sbb
xchg
test
addr16
sbb
cld
lahf
lock
aam
add
in
repz
in
jno
pop
jns
pushf
pop
mov
mov
cwde
pop
sbb
push
xor
dec
jae
jle
enter
(bad)
(bad)
lock
fstp
cmc
or
mov
sbb
retf
dec
jae
mov
add
mov
jmp
addr16
cwde
outs
sbb
ds
test
test
jmp
leave
jne
into
jl
(bad)
arpl
out
jb
adc
les
inc
push
sub
outs
addr16
lahf
xchg
stos
test
jl
add
mov
add
shl
cmc
push
arpl
or
retf
(bad)
cmc
xor
xor
rcl
clc
call
pop
in
jbe
dec
push
mov
imul
pop
adc
js
aas
(bad)
iret
retf
mov
lds
cmp
jmp
xchg
div
rol
test
movs
cmp
in
addr16
imul
pushf
push
test
cmps
out
dec
cmps
shr
mov
mov
mov
in
mov
add
mov
dec
sbb
test
xor
sbb
scas
test
push
(bad)
sub
mov
xchg
lock
pop
xor
dec
fisttp
dec
aad
std
dec
call
add
int
push
xchg
xchg
shl
jns
lds
cs
push
fldz
and
fisub
mov
bound
cli
scas
xchg
or
jo
into
gs
mov
adc
fwait
rcr
hlt
add
mov
ret
jl
pop
sbb
pop
hlt
dec
mov
lods
or
sub
mov
(bad)
sbb
xor
imul
clc
jl
repnz
ds
cmc
pop
mov
pop
call
mov
fucomi
sub
xor
mov
scas
adc
mov
repz
jmp
into
in
fimul
clc
jno
sar
xor
push
pop
sub
sub
sbb
cmp
mov
cld
xor
movs
ret
loopne
jecxz
gs
add
and
std
adc
mov
rcl
dec
adc
jmp
add
mov
xchg
mov
mov
and
test
inc
mov
push
or
jle
loop
arpl
cmps
std
and
imul
sahf
ds
push
pop
call
sub
sub
scas
mov
ficom
mov
xchg
mov
sar
aam
clc
int3
xchg
sahf
cdq
mov
sahf
push
sar
aaa
jnp
jecxz
cmp
push
in
mov
les
cmp
mov
aaa
shl
and
sub
cmps
movs
jl
pushf
mov
(bad)
and
jge
jecxz
cmps
ret
jecxz
lahf
cmp
test
pop
dec
adc
into
pop
push
xor
lahf
mov
sbb
mov
retf
mov
sahf
nop
(bad)
pop
adc
jae
fadd
mov
jmp
mov
dec
addr16
cmps
fbld
mov
call
and
inc
inc
rol
xor
inc
push
ror
in
cli
imul
cmp
pop
shr
mov
lods
mov
ins
sbb
push
fisttp
mov
enter
fldz
add
mov
jmp
fld
es
les
rol
test
cmp
lea
loopne
ds
cmp
cwde
mov
dec
mov
and
mov
inc
sub
sahf
lds
jae
jae
push
jb
fsubp
cmp
repnz
lods
je
sbb
jmp
mov
shr
iret
inc
cmp
(bad)
fild
sub
lock
mov
and
ror
mov
push
ror
mov
movs
add
xor
push
pop
push
sbb
lods
outs
xchg
push
and
push
or
add
mov
jp
pop
in
push
je
loop
xlat
in
push
jmp
jne
call
mov
cs
stos
cs
mov
int3
outs
jo
xchg
xchg
out
mov
imul
xor
sub
sub
add
jmp
(bad)
mov
inc
dec
xchg
mov
jno
or
imul
push
js
add
es
scas
jne
es
ins
scas
adc
loopne
ret
cli
and
add
xlat
stos
push
ja
xor
aad
(bad)
push
lock
mov
adc
repz
cmp
ror
into
sahf
dec
mov
mov
or
loopne
mov
push
cmp
pop
and
ins
and
mov
clc
mov
mov
push
mov
sub
jl
xchg
scas
pushf
dec
out
adc
sahf
mov
ds
loop
cmp
and
mov
or
cmp
retf
call
outs
adc
shl
stos
call
mov
loope
stc
das
dec
jo
adc
icebp
sbb
mov
or
xchg
and
xor
add
data16
jne
add
inc
adc
hlt
push
mov
adc
cwde
add
fld
retf
push
push
dec
daa
xor
retf
shl
push
aas
(bad)
out
call
or
dec
and
xchg
out
mov
mov
stos
xor
xchg
dec
(bad)
add
fcom
jae
rol
shl
shl
dec
or
mov
dec
lock
mov
jmp
push
test
mov
add
jmp
(bad)
jno
and
mov
adc
xor
jbe
jbe
aaa
enter
jge
push
pop
cmp
push
mov
scas
push
and
test
stos
adc
jp
fdivr
sub
dec
cmp
aaa
mov
mov
clc
mov
cmp
mov
ins
add
(bad)
xchg
push
clc
xlat
mov
adc
and
adc
xor
inc
ja
sbb
clc
sbb
icebp
std
pop
imul
std
movs
(bad)
xchg
mov
stc
pop
imul
add
dec
push
call
jg
popf
mov
and
cs
fdiv
dec
mov
outs
hlt
mov
mov
add
jns
sbb
(bad)
add
stos
add
inc
test
cwde
xchg
or
popa
test
fiadd
jge
lds
cmp
and
cmp
(bad)
out
sar
inc
(bad)
pop
push
pop
(bad)
icebp
ins
fs
xor
test
(bad)
pushf
xor
addr16
sub
ret
mov
sbb
fisub
cmps
mov
int
jl
fs
imul
test
ret
sbb
mov
(bad)
mov
imul
sbb
inc
jb
(bad)
repnz
imul
loop
test
add
aad
fisub
sti
mov
cld
mov
ss
dec
ficom
mov
jno
ds
(bad)
rcl
leave
sub
aad
jmp
shl
fwait
mov
add
fndisi(8087
je
hlt
ret
mov
inc
push
adc
adc
fisubr
repnz
shr
xor
or
sbb
inc
jno
dec
pop
repnz
cmp
mov
pushf
cwde
dec
sbb
sbb
sub
or
je
pop
fstp
dec
sub
add
and
mov
ds
mov
or
and
adc
and
and
mov
(bad)
loopne
leave
push
sar
cmps
cs
dec
push
es
xor
aaa
and
jmp
out
jg
test
ja
mov
xchg
inc
pop
mov
xchg
push
xor
mov
mov
jg
rcr
test
adc
mov
cmp
cmp
repz
pop
xchg
cmp
hlt
mov
fcomp
(bad)
lea
mov
inc
jne
ss
inc
sbb
(bad)
cmp
inc
xchg
adc
ins
xor
dec
cmps
cmp
imul
mov
mov
mov
dec
mov
fld
test
or
bound
push
dec
pop
fisubr
mov
mov
inc
pop
pop
push
aas
sub
ds
add
test
loopne
mov
fstp
adc
test
and
dec
fadd
out
cli
cmps
test
sbb
lahf
inc
pushf
ret
mov
retf
repz
jae
loopne
jecxz
mov
pushf
push
inc
dec
mov
mov
std
cmps
loop
or
ja
inc
in
mov
jge
ins
mov
mov
inc
out
add
in
dec
mov
das
lds
(bad)
or
dec
dec
test
iret
int
in
mov
xor
addr16
je
in
icebp
jmp
ds
shl
mov
mov
ror
arpl
out
stc
pop
dec
(bad)
xor
ret
call
fst
arpl
js
pop
adc
nop
dec
inc
cmps
xchg
xor
jge
mov
jge
(bad)
cs
stos
adc
mov
push
outs
push
jmp
mov
xor
jbe
add
mov
dec
rcr
xchg
push
mov
ins
test
outs
lock
add
jbe
jne
(bad)
loopne
call
push
shr
stos
add
mov
jmp
pop
pop
call
and
push
and
jae
in
or
movs
or
and
jo
sub
fwait
mov
or
jnp
popf
mov
mov
inc
mov
fs
ret
test
add
xchg
pop
mov
das
ins
sar
jmp
and
repnz
dec
inc
movs
popa
out
cmc
pop
dec
sbb
dec
dec
add
ja
xchg
into
ja
int
movs
daa
and
jp
mov
mov
cmp
movs
push
mov
cmp
daa
push
pextrw
or
lahf
push
test
add
and
mov
sbb
jmp
or
push
icebp
dec
xor
push
inc
enter
aad
sub
lea
mov
ret
pop
loope
adc
ins
into
test
add
imul
lods
ror
mov
nop
sbb
mov
sub
sbb
mov
mov
pop
frstor
outs
push
sub
jge
push
pop
or
inc
je
xor
pop
jmp
cmove
or
in
dec
add
je
ror
mov
int
fcom
xchg
clc
arpl
add
mov
adc
mov
pavgw
xchg
outs
sub
ret
mov
xor
movs
cmps
test
mov
arpl
xchg
and
(bad)
jecxz
sbb
ins
mov
stc
jp
mov
sbb
sbb
push
ja
imul
cmps
pusha
arpl
sbb
iret
call
ret
adc
aas
fstp
std
outs
mov
pop
inc
int
sahf
mov
cmps
imul
cmp
mov
or
push
mov
sbb
jge
loopne
xchg
addr16
inc
fmul
cld
pop
and
ins
hlt
pop
mov
cmp
xchg
int
cmc
pop
mov
sub
stos
stos
mov
or
fisubr
add
push
test
sbb
and
stos
push
aam
cmp
and
movups
shl
in
aas
add
scas
loopne
jle
xlat
fwait
or
jo
das
pop
push
bound
and
les
sahf
dec
and
mov
xor
ret
sub
cmc
pop
out
push
lods
js
jp
loop
mov
jnp
cld
dec
and
cmp
jb
xchg
imul
ficomp
js
data16
sbb
cmp
pushf
ins
sub
xchg
sahf
inc
jmp
push
push
push
in
jnp
call
aas
xor
lods
in
bound
cs
push
ret
jg
sub
and
scas
adc
and
fnstenv
mov
in
cmc
adc
(bad)
sub
in
ret
mov
fsub
sub
jnp
cmc
pop
out
adc
cmps
jne
call
shl
cmp
bound
addr16
ret
icebp
retf
rol
daa
repnz
xor
mov
out
cmp
xchg
sahf
dec
popa
or
test
aas
push
sar
push
arpl
retf
repz
xchg
mov
xor
repz
movs
xchg
ds
cs
xor
test
xlat
bound
and
xchg
jg
jae
push
mov
cmps
pop
or
sbb
(bad)
pusha
das
cmp
mov
sub
test
das
fcmovnbe
js
outs
fdiv
push
popa
push
or
out
test
or
and
dec
dec
lahf
cmp
scas
js
in
pop
and
movs
sbb
sbb
and
aaa
mov
icebp
int3
shr
fs
push
adc
sbb
and
sub
test
outs
add
mov
mov
dec
xor
outs
ds
test
cmp
fcom
aam
ins
callw
jno
fisttp
push
push
push
repz
mov
out
jae
shl
sbb
push
in
int3
daa
and
ret
stos
jmp
mov
xchg
sti
retf
cmp
mov
mov
or
lods
dec
push
lock
inc
shr
xchg
add
sbb
jg
xor
enter
jbe
lods
leave
in
mov
add
call
ins
inc
pop
push
mov
dec
dec
push
ret
dec
mov
test
jbe
les
test
mov
nop
and
xchg
sar
outs
push
ror
fwait
xchg
xor
and
fs
dec
imul
cmps
sbb
sub
push
lds
inc
retf
ret
push
adc
hlt
push
aad
mov
push
mov
in
repnz
sub
push
loope
add
jecxz
xchg
pop
in
shl
je
jns
mov
out
ins
jecxz
arpl
fcomp
fadd
scas
out
pop
loope
cmps
sub
popf
jo
push
jno
int
sbb
addr16
cld
scas
mov
jl
les
dec
mov
or
lock
in
sbb
push
ret
sbb
mov
or
jns
jecxz
dec
leave
cmp
loope
mov
jb
mov
sbb
add
stos
jbe
cmps
mov
mov
ja
lahf
push
cmp
cmps
fnstenv
ss
or
pusha
mov
jge
retf
adc
mov
sbb
xor
ins
mov
cmp
fxch
shl
data16
nop
ror
and
mov
mov
mov
mov
inc
rol
jns
sbb
push
add
(bad)
sub
inc
xor
mov
lea
cmp
dec
mov
mov
jmp
add
in
out
push
adc
push
cwde
repnz
ja
or
dec
mov
frstor
rcr
inc
or
fild
mov
push
test
test
push
repnz
adc
or
dec
pop
xchg
rcl
mov
jecxz
sbb
imul
pop
nop
fnstenv
xchg
jecxz
push
test
fs
xchg
mov
test
inc
shl
int
or
jae
mov
imul
mov
movs
xchg
rcl
jp
popa
aaa
aam
out
push
rcr
pop
int
cmp
ret
xor
jne
inc
sti
pop
add
shl
add
add
test
retf
or
mov
mov
movs
cmp
not
xchg
sub
mov
dec
cmp
adc
and
aaa
stc
and
in
daa
sub
call
add
and
out
(bad)
hlt
dec
mov
push
enter
dec
and
ss
pop
inc
jmp
loope
push
sbb
and
sbb
fwait
jae
ror
pusha
xchg
dec
cs
enter
loop
push
jne
test
inc
fist
jne
mov
ds
and
dec
pop
fiadd
xor
or
or
test
hlt
xor
stos
aad
sub
push
push
cmp
fisubr
prefetch
and
enter
mov
shr
movs
mov
adc
cwde
mov
pushf
add
repz
mov
aam
into
dec
(bad)
mov
in
jecxz
mov
mov
out
sahf
pop
jle
jmp
and
les
mov
sbb
jnp
das
ins
pop
xor
sti
ins
loope
mov
push
jnp
and
stc
jecxz
ds
jmp
xchg
lahf
push
(bad)
mov
bound
xchg
push
dec
add
aam
sub
mov
sub
push
pop
xchg
loop
mov
rcr
es
adc
mov
es
mov
fcom
xlat
push
(bad)
nop
mov
pop
push
mov
lods
push
pop
sbb
fdiv
cwde
ins
sub
addr16
jbe
int3
rcl
scas
ror
sbb
mov
fistp
ficom
test
aas
mov
std
cs
mov
sub
jmp
cmps
add
jae
(bad)
push
push
loope
inc
hlt
aad
mov
and
neg
mov
imul
lods
fadd
lods
sub
xor
pop
inc
add
sub
les
mov
cdq
ret
cli
stos
mov
loop
imul
js
movs
add
call
fsubr
cmp
stc
imul
loopne
fistp
bndstx
nop
mov
dec
(bad)
cmp
aaa
repz
outs
enter
fild
pop
inc
adc
das
(bad)
out
fwait
pop
lds
mov
leave
out
inc
push
pslld
jg
sub
(bad)
lock
scas
stos
(bad)
stc
cwde
xlat
jle
mov
mov
loopne
mov
cld
adc
out
cmp
mov
inc
mov
xchg
sti
inc
mov
(bad)
cmp
jmp
or
not
(bad)
mov
mov
add
cmp
mov
push
int3
loope
mov
je
or
loop
test
je
dec
xchg
mov
mov
(bad)
sbb
mov
mov
xlat
mov
cmps
cwde
mov
je
imul
les
and
xor
jmp
jbe
mov
cmps
scas
xor
loope
popa
adc
shl
(bad)
iret
xor
mov
jl
scas
scas
gs
adc
push
lea
stos
xchg
call
sub
xchg
xchg
or
out
mov
add
jmp
jnp
jae
cdq
push
fadd
sbb
inc
into
pop
jbe
adc
pop
mov
pusha
add
xchg
(bad)
nop
push
sub
push
push
mov
sbb
xchg
daa
ficom
sub
lods
aas
loope
out
push
push
adc
sbb
mov
push
mov
pop
pop
xlat
test
ret
inc
idiv
mov
dec
jl
inc
bound
ret
popa
aas
sar
xchg
push
cmp
aas
sti
ins
rol
inc
pop
clc
mov
or
(bad)
imul
bound
mov
cmps
jmp
fcmovu
mov
sub
stc
sub
jmp
ret
push
sar
imul
or
pop
icebp
pop
push
enter
xchg
lock
loop
xchg
xor
pop
movs
loop
sbb
push
rcl
mov
jg
push
icebp
mov
movs
je
retf
xchg
pop
sub
push
xor
outs
sub
sub
(bad)
enter
jecxz
(bad)
scas
sub
jne
scas
(bad)
jmp
pop
scas
jns
popf
lock
sti
pop
or
test
cmc
cmp
int
stos
sub
jg
cmp
xchg
hlt
clc
mov
push
inc
pcmpeqw
(bad)
mov
repnz
fsub
xchg
inc
outs
test
outs
and
mov
cmp
cmc
cmp
pop
popa
pop
ss
aad
dec
ret
and
out
jne
aaa
imul
dec
and
sub
jmp
movs
mov
jge
pop
jge
in
dec
inc
fild
test
push
push
xchg
adc
mov
rcr
fnstsw
or
icebp
xor
cmp
jg
mov
(bad)
xchg
adc
xchg
inc
sbb
dec
out
mov
inc
in
int
cmp
fs
cmps
call
dec
mov
mov
xchg
movs
out
add
pop
je
repz
xor
jmp
xchg
jnp
inc
dec
cmp
cmp
es
ret
mov
ja
pop
mov
pusha
imul
cs
xchg
add
add
outs
xor
pushf
jmp
inc
xchg
and
dec
enter
mov
mov
fst
pop
inc
xchg
push
shr
mov
mov
mov
cmp
aaa
call
jno
xchg
(bad)
or
inc
push
xchg
fld
imul
jno
aaa
es
popf
popa
int3
fiadd
outs
jo
int
push
(bad)
fnstcw
movs
and
pusha
mov
sbb
mov
imul
pop
(bad)
std
push
call
push
push
pop
mov
sar
push
xor
sbb
sar
lods
add
and
mov
cs
inc
sub
add
ss
mov
dec
push
fsubrp
pop
xchg
ins
cmp
test
lds
jecxz
add
jnp
jl
inc
jbe
dec
mov
pop
jae
mov
repz
hlt
dec
retf
imul
pop
jge
dec
nop
pop
cmp
mov
mov
push
nop
out
out
nop
jecxz
inc
loop
add
cmp
fisttp
inc
jo
bound
cmp
sbb
clc
and
and
(bad)
lahf
adc
aaa
fld
js
idiv
inc
shl
jae
icebp
mov
imul
in
retf
pushf
loope
mov
pop
jmp
daa
rcr
or
inc
pop
ret
(bad)
aaa
add
imul
(bad)
mov
or
dec
dec
mov
movs
imul
add
ret
aad
outs
sbb
dec
pop
inc
mov
jbe
mov
xchg
aaa
cli
test
repnz
cmp
ficom
out
outs
ins
pop
lock
in
cmp
sar
sbb
cli
pop
push
or
sub
mov
cmp
push
xchg
xchg
test
mov
jne
retf
lock
cs
xchg
ins
mov
pop
pop
outs
shl
adc
jecxz
pop
call
dec
(bad)
bound
mov
or
xor
retf
test
les
test
pop
(bad)
mov
dec
and
mov
push
push
std
cld
cmps
clc
test
jb
cli
adc
and
add
scas
(bad)
pusha
jbe
repnz
add
cmc
push
sti
xchg
fidiv
arpl
in
js
or
mov
push
mov
enter
sti
pop
cmp
sub
cs
mov
pop
mov
lea
shr
mov
add
mov
bound
cmc
adc
xor
in
jb
ror
stc
test
push
push
fwait
(bad)
fild
dec
rcl
cs
sub
xchg
sahf
fucom
(bad)
xchg
adc
mov
cmp
hlt
ss
push
enter
push
shl
xchg
ds
test
inc
outs
inc
fsubr
cmps
jno
retf
fmul
jns
arpl
das
adc
or
mov
add
shl
icebp
jae
stos
(bad)
jnp
mov
aaa
inc
sahf
loop
or
or
pop
(bad)
out
or
sbb
mov
in
sbb
inc
rcl
inc
into
in
rcr
push
dec
ficom
inc
sbb
adc
(bad)
hlt
and
inc
out
or
xchg
xlat
dec
ror
fistp
pop
les
into
and
jmp
stos
push
push
fld
aas
push
add
mov
retf
cld
push
shufps
add
ins
dec
inc
out
pop
xor
inc
push
dec
in
pop
mov
adc
repnz
(bad)
mov
leave
addr16
ja
imul
and
ins
cwde
ds
pop
sbb
mov
sub
imul
mov
mov
lods
push
add
push
rcr
add
(bad)
mov
mov
(bad)
pop
out
repz
in
mov
push
js
xchg
pop
lds
jecxz
push
mov
mov
stos
jnp
pop
mov
int3
lahf
repnz
cmp
mov
ret
aam
mov
lds
adc
pinsrw
aam
or
pop
mov
mov
mov
jmp
pop
cmp
aam
stc
cmps
fsubr
imul
inc
pop
mov
xor
sar
dec
mov
arpl
ss
jmp
mov
and
adc
or
stos
jmp
retfw
imul
xor
in
mov
cmp
mov
imul
scas
out
cmp
xor
dec
xchg
fnstcw
cld
mov
push
pop
push
pusha
movs
inc
loopne
sbb
in
adc
xchg
dec
jns
and
mov
sbb
ret
pusha
sub
icebp
mov
xchg
aam
jo
or
popa
jnp
adc
mov
out
or
cdq
pop
shl
out
clc
fnstcw
out
fwait
(bad)
sbb
dec
push
jl
es
and
rol
add
cs
pop
shl
cmp
call
inc
xchg
(bad)
mov
(bad)
push
popa
lock
mov
dec
xchg
xchg
in
shr
stos
dec
or
dec
(bad)
or
test
and
add
dec
mov
push
iret
retf
pop
jmp
hlt
dec
addr16
sub
and
imul
pop
cmc
dec
outs
xchg
mov
stc
dec
mov
jno
stc
movs
or
js
arpl
mov
les
push
push
push
in
mov
xor
sti
ret
jl
push
sahf
call
pop
adc
jno
idiv
mov
push
loopne
add
inc
mov
inc
and
out
stos
and
jge
ds
aas
adc
inc
repnz
push
cmp
xor
loopne
shl
pop
fwait
out
mov
xchg
add
inc
into
jbe
pop
aad
nop
mov
and
sbb
ficomp
test
out
out
push
mov
dec
jg
sub
xchg
int3
neg
mov
out
pusha
jl
or
pop
mov
inc
xor
daa
int
clc
and
je
and
xchg
mov
jle
pop
aas
push
pop
sub
mov
lods
aad
mov
mov
dec
mov
out
jge
popf
lods
xor
xor
jl
push
push
push
mov
test
pop
mov
sub
mov
shl
stc
sahf
outs
xor
shl
sbb
push
pushf
sub
ins
mov
pop
jp
stos
(bad)
pop
in
movs
push
sbb
mov
outs
movs
cmp
movs
retf
arpl
fsub
sbb
cmps
lods
jns
sbb
inc
mov
adc
or
lods
jne
in
jp
pop
inc
pop
dec
fabs
mov
test
push
jl
ret
hlt
pop
in
add
xor
add
jne
mov
scas
dec
sar
rcl
jge
jecxz
xor
mov
stos
add
jo
and
adc
mov
xor
or
sbb
jns
mov
cmp
lock
je
ds
xchg
sbb
cld
inc
xchg
pop
cmps
sar
jle
xlat
mov
movs
cmp
cmp
shl
iret
jne
movs
test
fdivr
lea
mov
jecxz
cli
movs
cmp
jecxz
(bad)
loop
data16
push
add
aaa
jge
pop
ins
arpl
(bad)
loope
adc
xor
pushf
movs
lods
gs
(bad)
push
rcl
or
push
rol
cmp
shr
dec
into
and
bound
popa
arpl
movs
or
popa
xchg
adc
jb
jmp
inc
adc
mov
test
clc
cmps
jecxz
sub
add
mov
pusha
div
leave
inc
cmc
call
retf
cmp
cdq
or
out
and
jae
or
shl
sub
fucomi
int
mov
inc
sbb
sub
mov
mov
or
scas
mov
jnp
pop
jmp
add
popf
or
int
repnz
push
clc
loop
scas
imul
ret
xor
daa
pop
xchg
xchg
bswap
pop
shl
xor
add
push
inc
and
pop
cmp
mov
adc
mov
dec
jecxz
cmp
xor
dec
into
ret
les
push
(bad)
push
inc
mov
adc
loop
movs
pop
shl
(bad)
pminub
xlat
jg
cmp
inc
scas
xrelease
test
lds
xchg
imul
fst
test
bound
mov
pop
ret
xchg
push
pop
mov
pop
loop
xor
push
push
int3
sti
pop
xor
xchg
jp
(bad)
lock
fstp
xchg
add
mov
aaa
leave
inc
xchg
mov
repz
mov
adc
daa
fxch
(bad)
shr
int
pop
loop
xchg
in
outs
and
mov
ret
cmp
shr
adc
fisttp
retf
pop
jg
imul
xor
fisttp
lds
fucomi
mov
pusha
pop
fldcw
fwait
add
or
mov
mov
xchg
and
jge
test
sbb
xor
jne
stos
xor
mov
je
inc
lea
mov
icebp
pop
inc
mov
lea
jne
mov
gs
cdq
dec
mov
mov
fist
cwde
inc
dec
and
shl
xchg
jecxz
frstor
push
cmp
xchg
inc
or
xchg
call
xchg
cmp
xor
mov
out
pop
arpl
jo
sub
mov
scas
test
loop
sti
mov
jl
je
xchg
or
(bad)
mov
mov
test
xor
fwait
add
mov
lods
imul
mov
cs
inc
inc
imul
inc
repnz
add
rcr
cs
cmp
ins
cwde
and
daa
add
cmps
xlat
stos
(bad)
popf
int
sub
punpckhbw
pop
cld
push
lds
add
outs
shr
call
and
add
cmp
or
inc
sub
xchg
or
mov
test
sbb
test
ins
fs
(bad)
dec
mov
push
das
xor
add
cmp
fldcw
and
jno
pop
xchg
add
popf
outs
mov
jne
or
or
add
das
stos
mov
fstp
adc
ret
and
in
add
inc
jb
mov
push
push
and
sub
pushf
mov
jae
xchg
imul
nop
jecxz
inc
jle
fs
shr
enter
in
ins
cmp
xchg
lea
mov
outs
sub
sub
shr
(bad)
cmc
or
cs
cmp
cmp
add
cdq
push
xchg
pushf
cmp
and
ins
rcr
jmp
inc
rcl
xor
or
add
cwde
cmp
cmp
cmp
loope
es
cmps
sub
shl
pusha
movs
rcl
les
cmp
aam
rol
shr
pop
out
ss
sbb
rcr
cli
cmps
call
pusha
rcl
cmp
bts
inc
adc
retf
stos
fsub
jmp
loop
ss
push
push
or
mov
hlt
xchg
retf
xor
bound
pop
enter
cmps
lea
shl
dec
xchg
retf
inc
dec
adc
or
shl
aad
sti
mov
mov
jmp
sub
mov
xor
jle
cmp
(bad)
xchg
adc
mov
loope
sbb
je
aam
imul
stc
fistp
call
jbe
rol
xchg
cmp
add
ins
xor
sar
adc
mov
pop
dec
loopne
outs
sahf
movs
sub
cld
adc
int3
jbe
ja
add
jno
mov
mov
push
dec
mov
ret
fidiv
dec
inc
cmp
jmp
out
jecxz
enter
popa
mov
aaa
aaa
popf
xchg
mov
jo
fiadd
mov
sbb
jle
ja
test
cmp
dec
je
add
fwait
mov
call
(bad)
repz
inc
popa
cmps
and
sub
pop
outs
inc
cs
imul
stos
outs
mov
push
imul
sub
stos
or
xchg
repnz
xor
dec
dec
sub
test
pushf
push
jmp
mov
jge
adc
lods
lods
pusha
sar
loopne
cmps
jo
sub
lahf
mov
pop
gs
xor
test
cdq
aam
mov
sub
popa
cdq
xchg
add
mov
out
jno
pop
pop
xchg
pop
inc
push
cmp
xchg
dec
xor
lds
push
mov
mov
push
call
test
pop
inc
(bad)
fld
mov
scas
stc
test
stos
or
aam
mov
jmp
push
mov
frstor
push
jecxz
dec
fwait
aad
cmp
add
js
imul
dec
jle
in
leave
cmc
(bad)
jbe
sub
sti
sbb
or
dec
arpl
bound
loope
lea
push
pop
int
sbb
int3
das
push
push
dec
inc
pop
sar
mov
loopne
mov
jp
js
pop
sbb
ret
xchg
test
repnz
pop
int3
scas
shr
sbb
inc
add
inc
mov
jb
loop
lock
loope
retf
(bad)
cmp
hlt
fldcw
adc
cmc
push
(bad)
or
xlat
and
je
xchg
jnp
ret
in
mov
inc
xchg
arpl
mov
mov
jmp
mov
dec
(bad)
xchg
or
jae
mov
xchg
inc
inc
push
ins
xor
or
and
test
loope
cld
ins
sub
pop
(bad)
jle
aaa
call
sbb
out
imul
mov
mov
pop
out
je
mov
or
jbe
inc
shl
les
push
or
rcr
add
je
call
ret
or
inc
scas
xor
adc
jno
dec
add
mov
ss
lea
xchg
push
jbe
(bad)
shl
adc
sar
ror
ror
xchg
shr
div
cmp
sar
cmps
mov
sbb
mov
adc
adc
pop
xor
or
rcl
xchg
(bad)
mov
scas
(bad)
loopne
adc
sub
(bad)
dec
dec
stos
mov
ret
sub
jmp
mov
add
mov
shl
and
xor
push
in
sbb
js
push
mov
add
mov
adc
stos
xchg
inc
fwait
in
sbb
cmp
cmp
sbb
cdq
dec
cld
call
fistp
or
xchg
mov
push
mov
scas
dec
fsubr
into
retf
mov
push
sub
popf
outs
rcl
popf
aam
pop
stos
int3
shl
mov
push
retf
aad
popf
mov
pop
mov
and
add
or
pop
cs
dec
out
fsubr
jmp
int3
loopne
imul
fisub
pop
loopne
cmp
mov
jbe
jecxz
jnp
xchg
xchg
adc
test
fsub
jae
fcomp
shr
adc
mov
mov
arpl
jae
arpl
xchg
icebp
movs
inc
cmps
loope
stc
outs
(bad)
fcomp
sub
cdq
and
into
mov
cld
cmp
add
fsubr
imul
arpl
mov
lea
xor
add
idiv
out
mov
pop
sti
ins
cmps
xlat
mov
fcmovbe
jle
xor
cdq
hlt
shl
cs
test
cs
lahf
fld
sbb
out
lahf
dec
sar
mov
int
sbb
arpl
sub
push
sbb
inc
fnstsw
mov
push
or
xlat
sbb
add
xor
jmp
jg
daa
mov
lock
mov
inc
fist
mov
call
or
mov
mov
xchg
int
pop
sub
pop
data16
dec
xchg
pop
lds
dec
xor
in
sub
ja
pop
jns
push
add
xor
stc
xchg
ins
push
add
pop
movs
sub
ud1
jne
ins
je
les
sbb
sub
jnp
mov
pop
mov
hlt
inc
sbb
pop
xor
mov
xchg
mov
mov
sub
es
loop
call
xchg
je
jne
cmp
cmp
push
or
inc
into
push
ja
mov
pushf
add
dec
ss
div
dec
(bad)
pop
inc
rcr
sbb
(bad)
ret
dec
ins
jo
mov
sbb
aaa
jb
ret
xchg
mov
int
scas
mov
cmp
retf
fadd
pusha
(bad)
mov
push
dec
jno
test
fild
(bad)
js
lahf
adc
xchg
and
mov
fstp
cs
jmp
mov
mov
and
mov
xor
int
and
jbe
and
test
leave
and
dec
mov
cmp
rcr
aad
sbb
sahf
jl
mov
jmp
xchg
xchg
sbb
jecxz
add
retf
inc
jo
rcl
mov
inc
(bad)
mov
fsub
mov
mov
jbe
mov
sub
inc
sbb
fstp
(bad)
pop
cmp
jbe
sub
js
mov
xor
jmp
jne
sti
xchg
add
sbb
push
mov
in
mov
(bad)
jae
sbb
cli
pop
or
neg
or
imul
xor
cwde
(bad)
xor
xchg
mov
pop
or
movs
push
sahf
xchg
clc
sub
adc
ds
cmp
rcl
movs
mov
sub
jns
or
cmc
xor
inc
fcmove
jb
ret
pop
fwait
leave
movs
fcmovu
add
jo
stc
jmp
imul
mov
push
pushf
cmp
sub
xchg
ss
cdq
into
and
mov
out
jnp
cmps
std
lahf
sub
pop
fldz
stos
or
fs
adc
outs
inc
jmp
add
push
call
jmp
jmp
or
(bad)
xor
jmp
add
xor
or
mov
in
inc
xchg
shl
movs
push
mov
repz
or
pop
loope
arpl
or
jnp
sbb
popf
jne
adc
xchg
jbe
shl
les
test
push
ror
xor
enter
(bad)
test
xchg
sahf
mov
pop
jle
fstp
jg
cmp
inc
sbb
or
fs
cmp
cmp
out
jae
scas
sub
fwait
and
adc
xchg
mov
pop
and
sbb
fstp
cmps
xor
push
ss
fstp
add
sbb
xor
into
cdq
adc
mov
in
(bad)
stc
out
popf
xchg
(bad)
(bad)
and
dec
mov
jbe
mov
lods
shl
push
mov
dec
ret
mov
fsubrp
or
mov
inc
jge
pushf
xor
inc
xchg
lods
shr
sub
xchg
and
mov
outs
stos
int3
test
(bad)
iret
call
hlt
push
mov
fld
inc
push
dec
mov
stc
pop
popa
out
sbb
cmp
xchg
and
mov
or
(bad)
cmp
pop
repnz
ficomp
aaa
cmc
sub
imul
mov
in
xchg
inc
outs
mov
dec
push
adc
xor
(bad)
jmp
cmps
int3
push
cld
(bad)
mov
jmp
lods
fisttp
in
or
add
jo
push
push
push
mov
xchg
fstp
cmps
in
arpl
dec
test
je
adc
mov
retf
pop
inc
adc
sahf
test
stos
stos
aaa
xchg
push
dec
add
sub
push
popa
jns
pop
fwait
out
sti
mov
inc
iret
push
popf
jne
ja
gs
cmp
push
cmc
dec
jne
sub
loop
inc
xor
pop
push
mov
in
mov
imul
aam
mov
cmp
xor
xchg
dec
cmp
sbb
mov
ss
dec
pcmpgtw
jmp
in
push
ja
mov
test
pop
fwait
push
or
dec
mov
jmp
test
in
dec
jne
iret
imul
sub
push
ret
clc
repz
push
inc
sti
mov
icebp
cmc
pop
ins
aas
mov
sub
cmps
pop
retf
adc
push
movs
pop
into
fstp
js
ins
std
stos
or
bswap
sub
out
retf
clc
outs
mov
jg
movs
aas
(bad)
jmp
inc
fcmovnbe
lea
lds
hlt
and
jnp
loope
mov
mov
int3
int3
mov
lds
xchg
xor
test
fcomp
mov
mov
sub
mov
mov
sbb
xor
push
js
xor
push
sub
dec
outs
mov
inc
dec
mov
repz
cld
inc
or
sbb
(bad)
gs
push
rcr
mov
lock
cli
das
pop
mov
pop
faddp
jp
dec
mov
jne
sbb
xor
test
(bad)
repz
loopne
pushf
cmp
cmp
mov
dec
mov
in
mov
xor
inc
enter
popf
and
aas
mov
(bad)
rcl
push
ret
ret
arpl
dec
mov
inc
in
inc
nop
daa
push
sbb
xor
or
inc
xchg
mov
into
js
adc
pandn
mov
inc
mov
jno
mov
inc
xor
pop
addr16
adc
test
cld
cmp
stos
into
and
pop
in
xchg
xchg
stos
nop
pop
push
adc
pop
cs
(bad)
sub
mov
xchg
push
jl
addr16
sub
push
cmp
cmp
mov
pop
fist
push
hlt
xchg
cs
and
and
call
je
sbb
ins
adc
add
or
mov
fsubrp
cmps
pop
rol
movs
mov
imul
test
stos
sub
and
sub
xor
cmp
jne
mov
push
and
push
dec
push
push
jno
js
add
int
or
xchg
sub
sub
jl
imul
ins
lds
lahf
(bad)
inc
shl
or
scas
mov
ret
adc
es
sbb
jl
imul
jb
sbb
mov
sbb
outs
imul
sbb
retf
dec
cmp
pusha
xchg
out
loope
jbe
outs
(bad)
std
push
das
data16
push
cmp
mov
jp
sbb
adc
dec
loope
shl
loop
adc
adc
repz
push
xchg
adc
into
shr
stos
pushf
mov
inc
gs
pop
mov
inc
scas
gs
sbb
sub
cmp
xchg
mul
push
shl
cmp
and
inc
or
pushf
fimul
mov
outs
adc
mov
rcr
sbb
inc
sub
sub
lds
test
lahf
adc
pop
cmp
jo
jl
dec
sbb
pop
xchg
mov
idiv
xchg
or
loopne
fisttp
and
mov
xor
test
jno
retf
cmp
xchg
cwde
fcom
in
es
mov
xchg
dec
mov
or
xchg
pusha
fnstsw
xchg
push
jmp
and
and
out
int3
icebp
inc
out
mov
xchg
loop
cmps
rcl
xor
test
fimul
scas
mov
cmp
push
fsub
adc
inc
retf
and
fsubr
and
outs
mov
fwait
lea
mov
adc
fistp
inc
outs
sahf
and
retf
xchg
xchg
hlt
jno
iret
xchg
xchg
cmps
movs
pop
mov
test
cmps
cdq
sbb
fdivr
add
popa
jno
int
loope
fs
pop
xchg
xchg
icebp
cwde
imul
mov
js
sbb
sbb
fxam
jne
inc
push
pop
pushf
sub
out
sub
dec
mov
mov
fwait
xchg
(bad)
cmp
frstpm(287
ins
mov
loopne
cmp
xchg
jecxz
fyl2x
sbb
xchg
js
jl
mov
cmp
inc
xchg
cld
aad
mov
xor
not
aad
xor
mov
xchg
xchg
jle
outs
fistp
test
daa
scas
ret
retf
cli
popf
loop
mov
ror
addr16
and
movs
lds
xchg
adc
aaa
cmp
ficom
adc
ins
inc
mov
movs
lods
lods
stos
pop
(bad)
xlat
dec
enter
les
mov
(bad)
movs
aad
es
adc
mov
fadd
ret
fist
or
out
or
inc
lds
jg
loop
xor
lea
xor
ins
and
ja
int3
loop
pop
jmp
mov
inc
shr
stos
push
xor
sub
mov
out
nop
xor
inc
inc
stc
stos
sbb
fdivr
out
addr16
cli
lods
xor
fist
push
in
add
iret
sub
inc
push
pop
je
push
in
stos
mov
dec
xchg
sahf
mov
test
sbb
jns
inc
jo
fstp
adc
xchg
nop
addr16
cwde
pop
fwait
xchg
sti
and
stos
stos
and
sahf
call
mov
add
out
fucomi
sbb
jecxz
(bad)
lock
jmp
inc
call
outs
mov
jne
push
ret
mov
dec
dec
and
gs
push
ror
iret
mov
in
lock
jno
mov
mov
in
inc
out
push
lods
js
mov
sub
mov
repz
pop
call
outs
aad
jae
pop
arpl
ficomp
and
dec
cmc
in
into
jg
or
sub
mov
pushf
jnp
sub
lds
sbb
jge
(bad)
gs
les
int
jl
pop
test
and
addr16
pop
push
test
ss
mov
fst
sbb
sar
mov
clc
pop
push
pop
outs
es
sbb
ja
mov
add
sub
rol
inc
movs
sti
pop
add
mov
stos
aas
mov
or
shl
inc
iret
push
fwait
jge
sbb
lods
scas
fs
mov
popa
int3
call
pop
test
inc
je
mov
cmc
cmps
push
js
loop
jmp
icebp
sbb
add
pop
mov
xchg
cli
sub
xor
aaa
mov
fs
push
mov
in
pushf
sysret
movs
std
adc
mov
inc
pop
cmps
les
scas
inc
inc
cld
fadd
shl
pusha
out
or
mov
out
adc
out
xchg
mov
jmp
data16
test
test
push
xor
fnsave
add
cmp
pop
repnz
shl
call
mov
add
mov
rcl
dec
jo
and
idiv
adc
shl
fist
loop
sub
in
mov
cdq
(bad)
in
push
xor
fstp
pop
jl
mov
xchg
pop
mov
pop
out
mov
mov
xchg
push
ins
test
jne
call
pop
mov
cmp
lock
mov
push
into
inc
not
in
(bad)
sub
test
push
sbb
add
dec
jne
call
ss
aas
add
push
xchg
push
and
mov
ud0
mov
sbb
jmp
addr16
mov
rcl
cmps
dec
(bad)
sub
add
ds
retf
iret
and
xchg
jg
mov
fadd
cld
xor
fistp
mov
loopne
nop
pop
jle
popfw
sbb
sub
xor
fld
push
ret
ins
repnz
call
fild
mov
stos
out
sysenter
inc
sahf
dec
fs
js
lea
lds
mul
mov
sahf
jns
mov
xchg
sub
sbb
or
mov
push
or
inc
sbb
lea
ud0
je
test
int3
mov
into
xor
retf
pop
push
leave
mov
clc
lahf
xchg
sub
inc
lds
imul
stos
mov
mov
dec
aam
imul
or
jno
lea
addr16
sub
add
ret
scas
sub
(bad)
xchg
cs
ins
test
dec
out
dec
mov
push
jp
lods
cmc
pop
jp
dec
clc
cs
stc
fnstenv
cs
aas
adc
add
js
je
enter
pop
call
aam
mov
cmp
scas
cmps
pop
icebp
add
or
inc
inc
ror
shl
int
popf
popf
mov
shl
pop
and
leave
cld
lods
aas
aad
aam
xchg
dec
(bad)
xor
sbb
outs
or
push
test
cmovo
addr16
mov
xor
push
sbb
ins
pop
sbb
aaa
shl
pushf
lods
stc
add
mov
or
jne
and
shl
adc
mov
(bad)
stos
mov
sbb
jne
cmp
int
or
imul
in
jae
xchg
push
stos
sbb
sbb
cld
push
outs
mov
ret
dec
stos
pop
sbb
stos
outs
add
jg
jns
mov
ret
inc
test
dec
lods
sbb
mov
mov
ret
inc
add
jne
adc
imul
add
push
xchg
cmp
popf
imul
movs
cmp
movs
mov
scas
mov
fistp
test
xor
les
xor
mov
test
call
dec
add
mov
pop
mov
mov
mov
call
jmp
mov
lods
outs
cwde
sbb
je
adc
mov
mov
sub
xchg
and
aad
sub
jno
(bad)
sub
xchg
fist
test
cmps
das
test
out
add
les
div
out
out
and
inc
fidivr
ret
(bad)
pop
push
aam
cwde
dec
in
ja
sahf
mov
ret
cmp
inc
call
sar
int
add
jb
cs
jmp
bound
jg
shl
mov
xor
adc
scas
sub
sub
jb
xabort
sar
inc
jae
xlat
and
scas
aaa
pop
out
fistp
and
ret
movs
mov
or
les
pop
jecxz
mov
cmp
sti
sub
dec
add
xchg
in
repnz
pop
jo
adc
sub
xchg
out
test
ret
jbe
cmp
test
(bad)
in
mov
out
and
call
daa
call
xor
nop
or
add
cdq
sar
dec
shr
lods
jno
shl
cmp
mov
dec
mov
test
fs
div
addr16
pusha
push
cli
pop
neg
adc
ins
cmp
retf
test
fbstp
and
clc
push
xor
mov
outs
inc
jnp
dec
inc
je
cmp
and
cmc
pop
cmps
sbb
inc
ror
xor
pop
and
loopne
xor
mov
stos
jmp
jg
push
inc
add
dec
shr
pop
mov
xchg
ret
or
mov
jae
mov
fdivr
icebp
fwait
stc
add
cs
jl
out
push
jnp
jg
add
push
inc
rcr
sub
in
xor
test
neg
data16
inc
mov
ins
fsubr
dec
ins
push
jnp
and
ror
mov
adc
mov
shl
lea
ror
mov
in
pop
add
xchg
stos
sbb
and
fs
js
call
ins
mov
pusha
les
push
int3
push
movs
mov
dec
and
dec
xor
jp
sub
push
push
dec
(bad)
adc
int
sbb
stos
cwde
dec
lds
ja
popa
cld
imul
imul
leave
int
into
imul
(bad)
xor
rcr
jmp
sbb
sbb
stc
mov
add
xchg
dec
pop
push
pop
loop
fst
fmul
cmp
inc
cmc
sub
dec
in
jb
push
call
imul
repnz
xchg
jmp
xchg
and
xor
xor
test
dec
rcl
out
mov
add
sbb
add
inc
jmp
mov
sbb
mov
fst
pusha
or
js
lea
aaa
pop
aaa
bound
inc
pushf
sar
cmps
call
mov
push
inc
(bad)
imul
push
and
xchg
popf
frstor
(bad)
rol
lahf
js
and
pop
outs
xchg
sub
in
push
jns
outs
adc
mov
xchg
mov
or
add
ja
add
fmul
aam
into
leave
clc
fcmovb
leave
sub
add
add
fsubr
add
cmps
mov
rcl
outs
outs
jbe
stos
push
lahf
sbb
imul
(bad)
dec
xchg
cli
adc
jecxz
add
sub
cmp
push
jmp
or
and
cmps
sub
sub
mov
outs
mov
dec
imul
shl
mov
adc
adc
inc
jae
je
pop
inc
inc
mov
mov
inc
pop
inc
pop
out
sti
lea
mov
adc
push
mov
loop
mov
jmp
(bad)
gs
xchg
mov
xchg
push
fbld
fcmovne
or
push
dec
push
mov
dec
and
xchg
outs
(bad)
mov
movs
imul
sub
cli
lahf
cmp
pop
push
outs
pusha
sbb
xlat
mov
dec
or
fnstenv
inc
jae
leave
bound
test
pop
leave
and
xor
inc
cld
shl
ja
mov
(bad)
cmp
add
pop
jno
pop
imul
push
cs
fldenv
ret
je
sub
stos
jb
out
lods
jnp
in
or
sub
pop
mov
dec
cwde
dec
inc
mov
jmp
fisttp
sbb
call
cmp
dec
add
mov
ds
stos
dec
imul
mov
ins
mov
xchg
stc
cmps
sbb
outs
movs
xchg
repnz
loopne
ins
xchg
fcmovnu
push
inc
cmp
pop
ins
test
add
inc
test
cmp
retf
test
mov
mov
add
or
push
xchg
dec
sti
or
push
sahf
sbb
push
pop
dec
inc
xchg
add
mov
and
sub
mov
ins
cs
add
outs
popa
jge
rsm
lea
jno
je
add
test
sbb
mov
cs
pop
ins
push
lea
jae
mov
fwait
mov
push
add
movs
pop
jae
jmp
pop
and
sub
fwait
jg
add
dec
test
rol
pushf
cs
xchg
add
xchg
fcomp
xchg
nop
test
pminub
pop
push
sub
mov
push
push
dec
shl
sar
int3
sbb
mov
imul
fs
cmp
das
loop
retf
jp
in
gs
cwde
jg
ffree
call
or
mov
cdq
lods
dec
mov
jge
cmp
push
cld
cmp
jo
stos
call
fcom
ins
pop
pop
loope
sbb
mov
or
fisubr
je
popa
adc
sub
scas
fistp
cdq
or
push
lods
mov
sbb
or
popa
jo
jecxz
fidivr
cdq
mov
sbb
test
xchg
js
ret
xor
rcl
xchg
mov
add
or
cmps
or
(bad)
call
mov
test
mov
push
sub
lahf
mov
or
pusha
jmp
jmp
and
mov
aas
inc
and
mov
in
out
fisttp
pop
fdiv
div
(bad)
mov
adc
push
dec
sbb
cmp
(bad)
adc
cmp
pop
adc
jl
(bad)
fistp
sub
dec
push
adc
inc
or
mov
inc
out
dec
push
int3
adc
stos
fs
cld
cmp
adc
dec
pop
push
xchg
cdq
mov
aaa
push
add
pop
or
adc
sbb
into
mov
mov
sub
pop
push
xchg
xchg
sub
xchg
mov
mov
fild
add
shl
fist
cmp
cmp
sub
clc
cmps
push
stos
ret
mov
mov
cmp
js
sbb
mov
push
inc
fisubr
sbb
mov
lods
xchg
push
pusha
push
cmp
pusha
cdq
xchg
dec
mov
xor
cmp
idiv
sbb
test
mov
pusha
xor
cmp
mov
retf
push
and
and
jmp
mov
push
push
sbb
jo
ins
cmp
aam
xor
xchg
xchg
push
jae
sbb
jb
out
dec
scas
leave
xor
outs
jge
rol
aam
or
xor
js
or
jle
imul
scas
std
cdq
les
movs
xchg
adc
pop
addr16
and
pop
jb
cli
pop
fdivr
cs
mov
push
adc
pop
lds
cmp
mov
aas
add
sbb
pop
and
mov
lods
jmp
jmp
lea
daa
jns
enter
add
test
bound
pop
add
push
repz
les
mov
ins
pop
jno
push
push
mov
pop
loopne
pop
push
xor
loope
mov
pop
ret
aad
popf
lea
cs
dec
push
mov
and
dec
mov
shl
retf
push
jecxz
arpl
daa
push
(bad)
imul
pop
repnz
dec
mov
(bad)
out
jmp
daa
fst
repz
jg
outs
inc
xchg
jmp
cmp
or
or
shl
(bad)
frstor
push
test
lods
retf
cmp
pop
mov
adc
inc
scas
call
sub
inc
jne
out
les
or
(bad)
test
in
pusha
or
and
into
leave
sbb
je
push
imul
out
mov
icebp
aad
and
pop
imul
xchg
mov
std
push
sar
dec
fbstp
add
push
jns
inc
dec
xor
mov
(bad)
sbb
or
cmp
mov
outs
and
add
inc
push
sbb
pop
add
mov
inc
xchg
xor
adc
and
jmp
sahf
xor
dec
cmp
mov
aas
js
inc
push
out
mov
movs
xchg
xor
cwde
jle
or
mov
push
dec
cwde
or
loopne
imul
mov
gs
jl
scas
mov
add
and
fs
add
dec
xchg
je
jmp
xor
xchg
das
bound
out
neg
dec
inc
xchg
xor
ins
mov
or
inc
dec
aam
cmps
mov
adc
jne
push
pop
sbb
(bad)
mov
mov
push
adc
xchg
in
mul
loop
nop
in
scas
mov
jbe
inc
fld
and
jb
xor
test
test
repnz
sub
and
xchg
sbb
jae
jne
dec
jae
push
xchg
(bad)
xchg
or
ins
fwait
sub
fst
cmp
je
add
cs
shl
xchg
mov
aad
sar
sbb
lods
dec
jle
mov
and
sbb
dec
xor
ins
leave
push
dec
sub
sub
xor
mov
lea
jns
mov
jo
retf
fmul
xchg
outs
inc
sub
adc
pop
jmp
arpl
xchg
movs
inc
sbb
inc
and
or
shl
add
arpl
add
cli
stos
cmps
cs
dec
and
xchg
dec
dec
xchg
xchg
cld
and
mov
mov
nop
out
outs
pop
inc
cmp
imul
xchg
addr16
mov
aam
lea
mov
ds
mov
lea
lds
mov
xor
sbb
jo
sbb
fidiv
add
mov
ins
add
cmp
sub
call
add
dec
mov
out
adc
inc
loop
lods
adc
jmp
mov
fucomip
adc
adc
(bad)
nop
mov
fsub
imul
mov
push
iret
push
loop
push
inc
sbb
add
jge
repz
scas
lds
addr16
dec
add
in
push
leave
jnp
loop
icebp
pop
adc
test
sub
lock
add
scas
ficomp
or
jo
popf
enter
std
sub
adc
into
movs
ret
out
mov
xchg
inc
adc
in
xchg
mov
out
dec
xchg
out
fisubr
mov
ja
ret
push
mov
jb
xchg
fnstenv
cld
mov
add
ret
outs
std
stos
mov
xlat
jmp
push
pop
or
ret
es
xchg
cmps
mov
outs
std
test
and
(bad)
adc
inc
fisubr
aad
lods
imul
xor
push
add
mov
push
sub
nop
cmp
neg
adc
adc
pop
mov
jbe
inc
and
jl
addr16
outs
sbb
mov
dec
mov
mov
stos
ret
stos
sub
movs
adc
loopne
or
cdq
(bad)
mov
movs
mov
inc
sahf
icebp
mov
movs
imul
push
stc
inc
mov
add
jmp
ins
push
in
push
and
scas
cmp
in
lock
inc
aad
arpl
imul
enter
test
sbb
dec
inc
mov
rol
popa
shl
imul
hlt
fs
outs
push
inc
pusha
adc
out
and
scas
xchg
fstp
or
dec
leave
add
jge
cwde
cmp
or
mov
mov
add
add
or
add
sbb
fst
jns
adc
mov
pop
fld
push
and
mov
add
and
dec
inc
add
cmp
inc
or
inc
je
sti
and
stos
gs
cmps
imul
pop
shl
jns
rol
cdq
dec
jmp
mov
ins
nop
inc
jns
adc
or
test
and
add
add
pop
fld
aas
mov
in
push
lea
mov
inc
xchg
imul
movs
ds
fsub
mov
daa
outs
or
cli
daa
and
xor
add
mov
and
and
adc
and
fnstsw
and
stos
sahf
push
jb
add
fldcw
sbb
sub
xor
addr16
jge
mov
dec
sbb
push
dec
sbb
into
leave
inc
or
push
iret
xor
dec
jbe
inc
sub
sbb
inc
aaa
mov
test
sub
lods
mov
dec
adc
sbb
or
or
inc
adc
mov
pop
push
mov
adc
xor
sti
add
add
ins
add
sub
jge
scas
test
nop
cmp
out
lods
push
imul
(bad)
fldcw
addr16
mov
jmp
add
dec
inc
dec
inc
add
add
add
dec
add
(bad)
fild
inc
add
add
push
add
push
pop
pop
push
or
adc
or
or
adc
(bad)
adc
adc
sbb
adc
push
sbb
and
push
and
and
daa
sub
sub
pop
sub
and
fild
inc
add
pop
pop
or
or
or
adc
sbb
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
or
ret
add
and
add
add
adc
inc
add
add
add
add
add
add
les
dec
adc
add
add
add
add
add
add
add
inc
push
popa
adc
jno
adc
adc
jb
shl
and
push
xchg
mov
and
shl
icebp
xor
add
add
add
add
add
add
add
add
daa
adc
add
add
add
add
add
add
add
add
add
adc
and
xor
push
adc
popa
add
cmp
add
add
add
add
add
pop
dec
sbb
xchg
fld
in
scas
adc
xor
dec
ins
mov
popa
lds
push
mul
mov
loop
test
sub
loope
xor
xor
enter
mov
xlat
loopne
fldenv
mov
dec
push
add
int
pusha
repnz
or
add
mov
int
lods
mov
in
int3
mov
stos
xchg
sub
ficomp
and
dec
cli
ins
xchg
pop
push
xor
imul
jmp
in
std
and
push
dec
pushf
xor
in
in
hlt
scas
xchg
rcr
adc
(bad)
lea
add
out
inc
cmps
sbb
popf
mov
clc
jecxz
add
ss
pop
cmps
xchg
(bad)
js
iret
sub
xchg
cmp
imul
mov
push
jmp
add
fdivr
mov
pusha
jp
outs
xor
sbb
fisub
adc
adc
add
daa
xchg
mov
dec
mov
cmps
xchg
les
mov
jne
clc
lods
pop
xchg
gs
ss
aad
inc
mov
lock
adc
xchg
adc
into
dec
pushf
(bad)
aad
adc
sbb
jb
and
data16
into
cmp
clc
pop
gs
cdq
or
jns
sub
lahf
leave
dec
xlat
inc
xor
xchg
not
push
jmp
sti
test
call
sar
aaa
inc
loope
daa
ret
pop
imul
fwait
leave
and
sub
jns
dec
xchg
inc
xchg
nop
jmp
adc
imul
in
jbe
iret
cmp
fst
test
adc
data16
mov
inc
dec
(bad)
repnz
push
cmp
mov
inc
dec
or
mov
or
xor
cdq
xchg
inc
mov
or
das
ss
mov
arpl
pop
lahf
push
pop
in
adc
repnz
jmp
(bad)
mov
int3
rol
sbb
sar
sub
sar
daa
and
or
mov
jns
imul
in
adc
xchg
sub
xor
aaa
mov
fstp
jmp
mov
lock
cmp
mov
cmp
adc
fs
cmp
inc
xchg
arpl
xchg
sbb
dec
mov
movs
jae
inc
gs
test
xchg
xchg
xchg
sbb
(bad)
push
mov
push
and
jo
sbb
push
test
sahf
or
ret
sub
jl
mov
call
adc
test
ret
inc
iret
push
and
or
mov
in
cmp
mov
ja
scas
xor
lahf
sub
jae
xor
push
and
retf
cmp
sub
add
pop
pop
movs
xchg
push
mov
and
imul
cwde
sub
sbb
mov
jno
sub
retf
pop
adc
add
xchg
cs
cli
adc
ret
xor
cmc
sub
xor
xchg
scas
mov
lea
out
sbb
nop
into
out
dec
lods
enter
pushf
xchg
movs
aaa
mov
sar
jnp
gs
les
push
mov
lock
adc
int3
shr
and
mov
or
cmc
pop
inc
and
imul
repnz
mov
shl
clc
iret
cmp
mov
clc
iret
ins
ins
hlt
fldcw
and
jl
into
and
emms
mov
je
gs
xor
cdq
fisttp
xchg
sub
or
and
mov
aas
xchg
inc
adc
xchg
jne
adc
jno
cmp
imul
lods
jb
ss
inc
mov
jbe
cmps
mov
rcl
pop
das
and
push
in
loope
inc
mov
cmp
ins
add
fwait
ds
(bad)
adc
dec
sub
cli
sub
icebp
stos
sbb
jbe
frstor
(bad)
push
mov
mov
retf
mov
loop
loope
jb
inc
inc
int
jno
sub
jb
cdq
ss
add
aam
mov
arpl
mov
xacquire
ins
dec
sbb
pusha
sub
jge
(bad)
loopne
out
test
leave
pusha
test
fldenv
jnp
rcr
adc
aaa
or
fsub
xchg
mov
or
push
cmp
and
(bad)
and
inc
xchg
mov
fs
push
sbb
dec
add
or
les
push
push
dec
out
ret
(bad)
movs
mov
cmp
(bad)
(bad)
xor
stos
aaa
inc
and
retf
add
mov
cld
push
push
ror
fist
aas
adc
pop
shl
pop
addr16
cmp
(bad)
rcl
push
push
inc
or
int3
stos
loop
adc
cmp
pop
data16
sahf
push
adc
push
jbe
retf
(bad)
aad
jg
cmp
aad
das
adc
fmul
(bad)
ins
or
mov
mov
(bad)
mov
inc
inc
xchg
push
fucompp
call
pop
(bad)
xor
outs
adc
not
test
retf
mov
jecxz
lods
pop
sbb
mov
scas
mov
xchg
js
dec
repz
rcl
mov
or
fsubr
pop
xor
aaa
or
pop
or
movs
mov
js
scas
cmp
pop
je
push
xchg
sbb
xchg
cmps
inc
out
dec
pop
pop
fidiv
aam
mov
inc
pop
add
mov
ds
(bad)
aaa
out
inc
jmp
cmps
movs
test
or
test
dec
icebp
mov
fwait
and
dec
pop
push
mov
js
or
scas
lods
xchg
aaa
push
pop
xchg
je
mov
xor
mov
inc
sbb
pop
pop
in
cdq
cld
mov
push
(bad)
daa
push
jl
imul
icebp
xor
neg
jp
sub
mov
pop
popfw
mov
push
mov
add
jp
je
sub
hlt
push
mov
or
aas
sbb
or
adc
mov
popf
movs
fld
pop
dec
enter
adc
lods
cli
and
loope
mov
sbb
sbb
sub
adc
sub
cmp
cwde
pop
imul
jno
add
fadd
mov
jmp
push
and
(bad)
fsubrp
repnz
sub
cmp
mov
into
push
sti
inc
(bad)
jmp
xchg
aaa
inc
adc
or
sbb
inc
xadd
mov
arpl
jge
cli
int3
mov
sahf
mov
push
push
test
fdivrp
repnz
jae
dec
pop
mov
add
out
sbb
add
loopne
and
inc
pushf
call
cdq
movs
xchg
les
xor
lods
jae
mov
pop
add
jo
or
ds
scas
mov
mov
or
aas
and
jle
pop
aad
or
cmp
dec
int3
jl
push
loope
retf
sub
pop
mov
add
push
aam
popf
rcr
scas
je
loope
inc
mov
xchg
stos
dec
ret
mov
jg
or
fwait
cmps
mov
std
inc
shl
adc
mov
add
retf
jb
cdq
xchg
adc
or
setb
call
jns
pop
mov
in
les
fstp
int
xor
dec
sti
lahf
inc
jmp
and
mov
sbb
cmp
mov
mov
int3
rcl
call
lea
mov
sti
ss
mov
sbb
xchg
jle
iret
jg
xchg
push
mov
mov
push
xchg
sbb
xchg
sub
imul
sbb
pop
and
call
fist
add
std
les
or
test
xor
xor
rcl
jns
pop
sbb
in
inc
mov
outs
(bad)
out
clc
movs
xor
lods
aaa
pop
push
ds
loopne
fistp
ins
inc
mov
mov
test
in
lods
cs
outs
jp
leave
push
out
scas
mov
pop
xchg
retf
mov
outs
inc
push
dec
or
jbe
outs
retf
aad
and
inc
add
popa
int3
ret
in
and
pop
push
test
ins
lods
push
ror
scas
jne
sbb
pop
adc
repz
mov
mov
cmp
jle
scas
in
or
jne
cmp
sub
(bad)
push
in
pop
xor
loope
cmp
inc
arpl
push
test
imul
sub
push
dec
(bad)
mov
push
sub
sub
pop
xor
movs
jns
les
dec
and
retf
pop
sbb
arpl
test
xor
arpl
in
inc
pop
lea
mov
xchg
movs
mov
cmps
idiv
mov
test
cmc
aam
test
pop
sub
and
inc
ret
sbb
sar
and
ss
int
dec
fs
je
gs
sub
daa
sub
es
mov
ficomp
lods
and
icebp
sub
mov
sub
jmp
ins
lds
es
xlat
cs
daa
xlat
sub
(bad)
push
push
xor
sub
je
push
sar
sbb
nop
in
inc
xchg
sub
mov
push
js
cmp
sub
pcmpgtw
popf
sub
xchg
mov
jo
repz
imul
cmp
stos
int
cmp
inc
dec
xchg
xchg
cmp
addr16
xor
jge
inc
dec
xchg
adc
jae
or
arpl
rol
ror
lahf
in
in
xchg
jp
iret
cmps
adc
inc
push
bound
mov
xchg
popf
jns
pusha
xor
mov
cld
xchg
mov
fmulp
jle
not
ret
sar
cmp
cwde
lds
inc
pop
arpl
push
mov
shl
xor
rol
loope
rol
imul
clc
push
xor
or
int3
or
dec
ficomp
fcomp
xor
mov
mov
stc
sub
xchg
sub
sub
shl
dec
jmp
dec
sbb
pop
xchg
mov
mov
cmp
imul
mov
and
in
movs
push
cmp
fdivr
add
dec
push
pop
push
lock
stos
aam
mov
imul
mov
mov
dec
je
(bad)
(bad)
inc
icebp
cdq
mov
hlt
xlat
frstor
pop
push
dec
xor
mov
repnz
push
inc
sbb
add
imul
fwait
and
push
jo
ja
data16
lahf
xchg
xchg
jmp
(bad)
jecxz
jnp
int
mov
pop
mov
and
jmp
and
sub
and
in
jb
lock
xor
aas
(bad)
ret
and
pop
pop
clc
xchg
in
jb
sbb
pop
push
and
xor
daa
mov
retf
aam
sub
inc
ins
sub
jbe
push
push
mov
stc
pop
pop
leave
dec
mov
aam
jecxz
sahf
push
push
sbb
out
(bad)
mov
or
stc
cmp
mov
das
pop
push
cpuid
and
xor
iret
mov
xor
lock
ret
aad
or
out
sub
or
loope
out
mov
xor
test
sbb
xchg
mov
aaa
xchg
sbb
rcr
jo
sbb
pop
cs
jb
pop
test
(bad)
movs
fmul
fs
inc
adc
and
adc
movs
movs
and
jns
(bad)
fnsave
add
hlt
int3
lods
test
cmps
mov
invd
xchg
cmc
rcl
sar
pusha
mov
test
mov
retf
retf
ja
dec
shr
lock
loop
mov
xchg
push
dec
mov
(bad)
aas
or
cwde
jne
cs
mov
pop
in
add
test
sub
xchg
xlat
pop
cmc
cmp
sbb
out
mov
scas
sub
and
fdiv
stos
xchg
push
dec
dec
rol
imul
dec
mov
movs
xchg
cbw
push
dec
fcomp
test
sub
xchg
hlt
mov
mov
jp
cs
in
aam
mov
loope
add
movs
stos
shr
das
(bad)
cmp
push
int
in
call
cmp
gs
fcom
cmp
pop
enter
jecxz
loop
pop
call
test
bound
push
pop
and
add
in
fisubr
rcr
(bad)
adc
fst
xchg
pop
inc
and
(bad)
or
and
push
pop
cwde
iret
mov
add
movs
mov
outs
cmp
xchg
nop
lock
jae
pop
fdiv
popf
outs
sub
icebp
push
xor
and
add
mov
cmp
aad
cmp
push
mov
lock
inc
fucomip
js
in
jecxz
outs
pop
xlat
int
or
movs
inc
aad
mov
loopne
lahf
outs
sbb
and
sbb
leave
dec
out
iret
sbb
gs
add
inc
sbb
iret
jne
inc
ret
fsub
mov
retf
jno
jecxz
adc
inc
aam
xchg
int
sbb
push
xor
lahf
or
xchg
inc
stos
das
test
jmp
pushf
pop
xor
je
or
xor
outs
movs
adc
mov
ins
xor
cld
and
icebp
or
lea
ins
cld
popa
jae
xchg
mov
pop
movs
and
xor
out
add
in
add
jle
lds
ins
push
or
mov
xlat
xor
nop
loope
sbb
mov
retf
in
xor
arpl
ror
push
mov
int
adc
retf
in
fidiv
and
inc
in
push
dec
jmp
addr16
loop
push
bound
lahf
les
ds
aaa
pop
mov
in
xchg
push
xchg
cdq
xchg
dec
loope
call
stos
test
mov
push
mov
ins
push
xchg
pop
push
push
push
mov
jb
scas
mov
and
inc
outs
mov
call
cmp
stos
mov
adc
dec
dec
pop
sbb
or
jns
mov
and
test
cmp
int3
repz
lahf
imul
loop
fdiv
lds
stos
cmp
and
jge
push
xchg
push
aam
and
sbb
pop
outs
test
mov
lods
push
mov
loope
inc
dec
push
inc
mov
imul
(bad)
out
adc
mov
jl
or
pop
and
fsubr
mov
addr16
sub
add
and
sar
sti
loopne
(bad)
and
jmp
aaa
pop
add
xchg
fisttp
and
jae
mov
mov
repnz
mov
daa
jb
into
icebp
pop
daa
lahf
inc
scas
cmp
dec
popf
(bad)
repnz
imul
pop
jo
dec
xor
pop
and
dec
jmp
dec
outs
popa
push
pop
mov
inc
sbb
or
jne
mov
out
sub
xchg
call
pop
call
push
mov
popa
es
dec
push
enter
xor
inc
inc
aaa
test
add
test
and
push
out
push
pushf
push
and
in
add
ret
loop
popa
test
mov
test
jo
int
push
or
cmp
mov
pop
jbe
icebp
out
xchg
gs
cmp
fwait
push
outs
lds
in
mov
cmps
and
jne
into
cmps
jns
jbe
in
adc
sub
mov
mov
lds
sbb
sbb
sub
ror
cwde
sbb
scas
cmp
push
or
jb
mov
nop
jae
sub
inc
ins
mov
pop
jl
add
jo
imul
imul
retf
sahf
pop
cmp
push
dec
aaa
ret
outs
call
mov
ins
jl
stos
int3
push
lds
or
fnsave
xor
test
adc
jne
aaa
mov
dec
ret
xor
js
add
or
nop
mov
sbb
movs
mov
retf
dec
ror
retf
cmp
jle
neg
out
not
add
iret
call
scas
add
jge
(bad)
fisttp
outs
pusha
xor
ret
rcr
cmp
xchg
lahf
xchg
movs
push
inc
push
or
jnp
pop
jge
fimul
pop
loop
cmp
inc
jo
mov
leave
push
xchg
xor
pop
or
inc
mov
test
movs
cdq
es
fwait
dec
pop
dec
out
mov
mov
pop
loope
or
fimul
lock
adc
pop
sbb
in
pcmpeqw
fs
cs
pop
gs
mov
das
jnp
stos
aad
arpl
mov
jb
sub
xchg
cmps
in
jp
cmp
push
and
xor
cwde
pop
iret
sub
push
mov
or
jnp
jb
loop
adc
popa
push
pop
sbb
mov
dec
xor
jo
mov
rol
jl
and
xchg
ja
call
add
lods
pop
fistp
lea
xor
sub
inc
movs
ja
in
pop
pop
mov
out
and
push
(bad)
xor
sub
sub
inc
loope
jnp
ds
movs
test
gs
inc
mov
es
loop
sar
and
shl
daa
(bad)
jns
jle
(bad)
sub
fidivr
lods
push
add
mov
fbstp
rol
popa
or
in
cmp
ja
dec
sar
xchg
repz
loope
inc
cmc
jmp
cdq
inc
and
pop
jae
movs
(bad)
jo
(bad)
(bad)
imul
lea
push
and
xor
neg
fwait
cmp
jmp
sbb
sub
push
add
cmp
retf
xchg
fstp
retf
mov
mov
scas
test
inc
ret
mov
in
mov
call
push
lock
call
ret
add
or
jl
jns
push
aas
push
iret
aas
jno
int
and
jae
iret
(bad)
mov
jge
xchg
imul
cmps
or
mov
js
cmps
(bad)
icebp
and
push
xor
jns
loop
out
aam
scas
or
mov
popf
mov
sbb
and
add
jbe
(bad)
sub
jb
mov
xor
xor
mov
pop
xchg
test
and
mov
xchg
test
jne
test
out
out
mov
adc
aam
xor
add
out
add
inc
loope
sub
push
inc
(bad)
push
inc
lods
cld
dec
jmp
rol
add
dec
jno
cmps
push
cmpps
pop
in
cwde
sbb
xchg
adc
jns
mov
shl
push
adc
stos
mov
add
mov
outs
aad
mov
popa
(bad)
push
xor
mov
inc
cmp
ins
lods
(bad)
cmps
sub
sub
push
inc
(bad)
pop
jne
sar
jle
loope
sar
xor
pop
push
push
dec
call
cmps
test
loop
mov
test
xchg
sub
stos
in
mov
out
xor
mov
pusha
aaa
push
mov
shl
sar
lods
pop
icebp
and
lahf
rcl
push
mov
aad
call
gs
rcl
ror
mov
es
mov
xchg
popf
lods
ss
pop
movs
xor
clc
mov
and
sar
shr
cmc
sub
call
and
adc
mov
clc
rcl
sbb
fldcw
mov
xlat
sub
dec
push
add
scas
cmp
cmps
push
push
sub
add
sub
push
or
mov
movs
js
in
sbb
sub
jne
xor
mov
cmp
out
mov
test
icebp
push
mov
retf
pop
adc
sub
ret
loop
sub
call
xchg
inc
sahf
adc
in
shl
fsubr
les
mov
outs
mov
xlat
push
fimul
or
(bad)
arpl
mov
aam
inc
leave
sbb
pop
pop
test
daa
xchg
(bad)
sub
imul
imul
dec
(bad)
out
dec
jmp
aaa
call
sahf
sbb
and
mov
mov
mov
je
mov
(bad)
(bad)
mov
sbb
imul
sbb
ror
push
push
cdq
pop
call
jno
leave
test
fwait
xor
dec
adc
cmp
retf
data16
imul
jg
test
rcl
test
pop
rcr
stos
sub
ja
lods
mov
mov
xchg
mov
bound
sahf
pop
push
push
mov
daa
inc
add
dec
mov
or
xchg
out
push
cmp
push
adc
lods
dec
xchg
rcl
lods
jmp
or
popa
mov
gs
pop
jb
loopne
mov
and
movs
push
cmp
xor
sub
bound
ss
xchg
sar
retf
ret
xor
sbb
(bad)
mov
jmp
retf
mov
push
test
xlat
call
int3
or
rcl
jle
jb
(bad)
enter
mov
dec
push
push
js
or
(bad)
sub
xchg
ret
lods
pop
mov
leave
sahf
dec
sbb
mov
mov
sbb
clc
repnz
jae
pop
pop
jo
call
sahf
pop
sub
popa
jns
add
dec
cmovge
and
xchg
lods
aam
bound
mov
loop
iret
push
std
(bad)
cmps
mov
ins
shl
dec
sub
cmps
shr
loopne
shr
ret
cmp
cmps
sub
jno
mov
or
xor
popf
xor
sbb
mov
lds
and
les
or
add
sbb
frstor
jno
push
jmp
sbb
adc
pop
push
push
push
push
outs
jge
push
jecxz
xchg
jp
popa
aas
dec
scas
push
pop
mov
cmc
or
mov
mov
adc
sub
dec
sub
jecxz
pop
add
out
imul
cmc
es
pop
outs
inc
pusha
jbe
push
jl
mov
or
loopne
pop
mov
mov
cmp
clc
repz
out
push
leave
cmp
sub
fwait
xor
xchg
fldcw
fincstp
pop
jae
iret
adc
(bad)
cmp
push
fwait
sub
sub
cmps
imul
fcmovb
xor
mov
jo
in
mov
xor
rcr
ds
add
(bad)
pop
pop
jp
imul
push
retf
mov
dec
daa
xchg
cmps
in
or
fcmovu
xchg
mov
mov
popf
iret
les
sbb
hlt
dec
jp
test
sbb
das
xchg
cli
xchg
dec
or
or
sbb
ds
jl
jmp
push
inc
test
or
push
inc
out
clc
adc
dec
push
and
leave
xchg
loope
xchg
pop
fcmovnu
xchg
test
push
xchg
out
int
sub
js
jne
pop
sbb
cmp
xor
cmp
test
mov
jle
mov
shl
icebp
daa
pusha
stc
scas
adc
out
lahf
call
jecxz
dec
pop
cld
jge
out
aam
int
mov
or
mov
mov
xor
or
lea
pop
push
out
scas
and
dec
push
and
clc
push
cmp
sahf
pop
cmps
dec
sti
mov
test
retf
pop
adc
pusha
aad
jl
sub
push
pop
mov
mov
cmp
cdq
int
inc
mov
or
ret
sbb
xchg
fimul
fbstp
daa
aad
xchg
cmps
imul
mov
mov
retf
mov
jns
and
push
js
cmp
xchg
rcr
aad
cvttps2pi
push
stos
test
fcom
cmps
sbb
mov
dec
arpl
pop
imul
xlat
add
add
mov
or
sahf
ss
mov
jb
fnstenv
sbb
xchg
les
scas
jmp
out
push
sub
sbb
add
dec
sbb
rcl
inc
and
pop
sbb
mov
jno
mov
adc
ret
inc
xor
addr16
dec
inc
pop
sbb
out
aam
rol
clc
mov
mov
iret
push
pop
xchg
cmp
pop
mov
call
int
sbb
pop
cmp
int
fisttp
int3
adc
push
pop
xor
pop
movs
jl
int3
repnz
sbb
or
lods
cmp
stc
enter
inc
mov
jp
push
test
iret
mov
and
jno
mov
xor
push
cwde
mov
inc
xchg
out
ret
push
pop
cmp
push
xor
mov
push
fist
or
cmps
ins
sbb
and
outs
xchg
inc
fmul
rcr
pop
movs
jle
xchg
mov
(bad)
push
loopne
push
neg
fiadd
jmp
sbb
adc
mov
js
ror
jo
hlt
xchg
xchg
dec
data16
sbb
loop
stc
(bad)
retf
sbb
bnd
clc
pushf
push
sub
test
(bad)
addr16
mov
adc
repnz
push
inc
aam
xor
mov
shl
add
dec
and
inc
mov
xchg
or
mov
(bad)
ja
das
mov
jbe
inc
in
sub
aaa
pop
adc
sub
sub
mov
pop
push
add
aad
mov
dec
jns
fistp
popa
and
mov
xor
or
mov
xor
lds
mov
cs
repz
or
in
ss
push
stc
test
xlat
call
xlat
mov
stos
movs
xchg
mov
and
push
(bad)
xchg
or
push
lods
pop
lock
pop
stos
mov
fidiv
shl
pop
dec
dec
sbb
scas
lods
mov
add
jmp
data16
fwait
and
inc
xor
push
cmp
sbb
adc
and
mov
pop
xor
fisttp
dec
mov
in
arpl
clc
outs
(bad)
outs
adc
jb
(bad)
out
cld
aad
sbb
mov
dec
pop
cld
sub
mov
mov
stos
xchg
adc
int
mov
div
aaa
jno
ja
ror
aaa
fs
sub
push
xchg
inc
fstp
jmp
mov
or
mov
clc
adc
nop
sbb
xchg
retf
(bad)
cmps
fs
adc
retf
arpl
xchg
jno
sahf
movs
mov
mov
aam
loope
sbb
push
and
mov
push
inc
pop
mov
jne
dec
pop
je
pop
xchg
loop
push
(bad)
pop
test
or
inc
dec
mov
adc
jae
dec
jp
sar
imul
arpl
data16
push
jnp
lds
cmps
rcr
jb
push
xor
loope
mov
push
sub
and
dec
shr
loop
mov
cmps
cmps
sbb
mov
movs
fwait
ret
test
sahf
mov
js
pop
retf
dec
dec
push
(bad)
int
data16
ins
dec
stos
xor
imul
sahf
adc
stos
jmp
inc
out
pop
gs
or
(bad)
sub
shl
xor
jecxz
test
jnp
loop
jno
addr16
pop
aas
and
icebp
pushf
out
test
or
(bad)
pusha
mov
pop
adc
and
loop
hlt
repnz
pop
adc
stc
movs
jae
jge
outs
mov
test
push
inc
adc
sbb
popa
arpl
call
fst
mov
mov
push
fstp
mov
fwait
adc
mov
ret
test
outs
outs
jbe
pop
in
cmps
sub
sub
scas
leave
js
sbb
cmc
jno
sbb
scas
repz
ret
dec
pop
mov
xchg
outs
mov
mov
popa
repnz
xor
xchg
cmps
mov
add
xchg
mov
sti
push
nop
push
push
xchg
(bad)
sbb
(bad)
scas
mov
sub
cmp
imul
fucom
mov
xor
cwde
sub
adc
gs
add
fisttp
dec
fbstp
retf
scas
icebp
ret
sub
scas
mov
ficom
in
test
mov
sub
mov
sub
loop
cmc
sub
repnz
test
pop
enter
xor
xchg
pop
and
test
inc
or
jge
scas
leave
pushf
andps
fpatan
inc
ret
cmc
push
(bad)
in
clc
pop
repz
cmp
pop
dec
cmp
xor
in
leave
lds
jno
mov
mov
jo
sub
pop
adc
adc
sahf
inc
and
nop
scas
mov
push
mov
lea
jecxz
mov
sub
dec
leave
pop
loope
xchg
sar
fsub
mov
fsubp
jecxz
test
cmps
and
inc
or
clc
inc
mov
sub
cdq
(bad)
adc
lock
and
jecxz
pop
jecxz
push
(bad)
rcl
xor
daa
xor
mov
(bad)
outs
or
cmp
pop
(bad)
adc
mov
cmp
(bad)
and
jnp
bound
out
push
mov
jmp
(bad)
jnp
(bad)
in
pushf
fcomp
iret
or
pop
(bad)
xor
cmp
aas
mov
xor
das
sub
xor
rcl
sti
adc
dec
repz
lods
(bad)
pop
pushf
jg
pop
jnp
lods
add
(bad)
sbb
(bad)
cmc
mov
das
out
sbb
test
dec
xchg
jno
fidivr
pop
daa
ins
in
out
div
std
mov
das
retf
rcr
arpl
pop
leave
mov
vmread
fdivr
jbe
clc
inc
cmps
arpl
sub
jmp
sti
mov
loopne
std
(bad)
les
sti
sbb
dec
dec
test
cld
enter
js
xchg
bound
sbb
inc
dec
in
stos
stos
scas
push
add
adc
mov
jmp
xor
lahf
xor
lods
cli
jg
mov
mov
mov
sub
push
mov
out
push
test
inc
or
pop
aaa
scas
jbe
(bad)
enter
sub
stos
leave
jp
inc
xor
push
xchg
adc
test
xchg
add
arpl
push
in
mov
pushf
lock
std
adc
mov
ds
xor
fsubr
hlt
dec
xor
mov
test
pop
cmps
sahf
push
pop
xchg
xchg
retf
daa
xchg
cmps
retf
jmp
loope
and
xchg
xor
aad
and
push
ficom
cmp
jae
jl
cli
cs
pop
stos
add
cmps
and
scas
test
repnz
jge
(bad)
test
iret
jne
and
sahf
test
ror
mov
arpl
test
les
pushf
rol
fld
adc
ja
xchg
jge
jmp
push
mov
ret
lahf
xor
adc
mov
aas
stos
scas
std
xchg
int3
push
sahf
push
and
inc
(bad)
dec
dec
xor
inc
jns
push
bound
fdivr
mov
mov
xor
add
cmp
push
imul
ins
lods
or
mov
xchg
dec
call
pushf
add
lods
sub
(bad)
and
jne
push
aam
in
popf
imul
call
dec
jge
sub
fmul
cmp
pop
jge
sbb
sar
stos
pop
clc
xor
and
fcomp
xor
xchg
sub
mov
int
and
lock
cmp
or
pshufw
or
retf
out
bnd
inc
inc
push
(bad)
mov
pop
and
iret
push
xor
and
arpl
shr
gs
stos
lods
ret
xor
mov
push
cdq
out
test
shl
test
stos
int
mov
test
inc
sbb
mov
jno
jno
std
push
xchg
icebp
jb
jne
div
cmc
adc
ret
repnz
and
adc
cmp
(bad)
xchg
adc
(bad)
in
mov
add
dec
jb
(bad)
adc
paddq
les
clc
sahf
push
push
jmp
dec
test
or
sub
ret
sbb
daa
adc
cmp
mov
dec
cmps
push
rcr
pushf
shl
mov
fsubr
xchg
or
gs
mov
sub
xchg
int
imul
lods
jbe
(bad)
pop
mov
xor
stos
or
js
jae
test
in
test
sub
bound
pop
sbb
dec
sbb
mov
imul
cmc
or
xor
stos
movs
data16
retf
into
sub
pop
pushf
imul
mov
cwde
pop
push
test
(bad)
cmps
clc
cmc
or
(bad)
xor
pop
leave
cld
mov
(bad)
popa
mov
cmp
cmp
inc
movs
cmp
pop
popf
shl
std
xchg
clc
imul
rcr
aas
call
jae
or
fisttp
(bad)
sbb
xor
stc
in
mov
rcl
xchg
stos
sar
add
jecxz
sbb
and
push
mov
retf
aaa
xor
adc
sbb
rcl
test
mov
mov
fcmovu
add
push
cmp
jns
jbe
fwait
test
test
adc
mov
(bad)
jno
loope
mov
sub
popa
push
fcom
add
pop
xchg
adc
cmp
pop
cmp
ror
lds
mov
inc
jbe
pop
mov
push
dec
loop
sbb
cli
push
(bad)
cmp
int3
sub
xchg
jbe
inc
jne
in
inc
int
push
mov
cmp
sub
pop
icebp
bound
xlat
xor
adc
vcvtss2sd
sbb
mov
scas
mov
cmp
push
add
iret
loope
scas
mov
test
adc
xchg
stc
mov
push
clc
rcr
test
jge
add
test
loop
mov
add
arpl
mov
push
leave
psubusw
inc
into
inc
pop
nop
in
cmp
cmp
mov
adc
push
popf
mov
lahf
das
nop
jle
pop
mov
nop
loopne
out
mov
push
xchg
adc
dec
aad
cmp
sub
movs
pop
bound
fsubr
repz
add
xor
add
sbb
xor
out
or
sbb
lds
add
int3
dec
inc
scas
aaa
ret
shl
leave
test
repnz
ja
stos
push
or
jmp
mov
lock
adc
pusha
movs
jbe
loop
hlt
aam
mov
pop
mov
addr16
(bad)
out
and
test
jmp
retf
mov
outs
int3
cmps
lea
imul
xchg
xchg
jnp
adc
cmp
inc
xchg
pop
xor
jmp
add
add
cmps
mov
jl
cli
cld
push
dec
repnz
pop
mov
push
lods
mov
in
stos
cmps
fcmovnb
lea
out
jb
fmul
push
push
sbb
mov
call
mov
push
(bad)
inc
pop
dec
or
mov
mov
imul
push
hlt
dec
fistp
inc
imul
fild
mov
dec
lods
push
sbb
adc
scas
outs
push
jecxz
push
mov
arpl
mov
aad
cwde
cmps
mov
cmps
xchg
jnp
adc
inc
(bad)
in
scas
push
add
adc
push
shr
shl
pop
mov
xlat
adc
outs
pop
ret
sbb
shl
les
popf
les
push
lods
push
hlt
xor
xlat
iret
pop
adc
xchg
dec
outs
shl
in
xor
movs
popa
ins
xor
in
xor
aad
or
and
fmul
jmp
jmp
xlat
aam
mov
or
push
mov
sbb
push
fwait
mov
fcmovnu
out
daa
sti
cs
mul
loop
jmp
push
xchg
cmp
movs
daa
cmp
aas
aad
lea
adc
jae
mov
arpl
jg
push
inc
arpl
ffree
in
call
mov
inc
test
call
setb
jbe
push
dec
test
add
push
dec
loope
add
lahf
leave
push
jbe
mov
pop
test
out
pop
jns
or
fist
inc
add
pop
es
je
xchg
icebp
or
dec
xchg
leave
sub
jae
cmp
shr
mov
pop
sbb
mov
lock
sbb
jmp
popf
(bad)
aam
call
dec
ret
clc
sbb
jmp
dec
imul
xchg
scas
push
pop
shr
push
pop
ds
pop
shr
sub
cmp
dec
arpl
bound
jae
xor
mov
movs
repz
lods
sti
xor
loope
call
aaa
mov
out
lds
xchg
(bad)
or
test
retf
call
loopne
aad
xor
imul
push
and
in
adc
jo
mov
icebp
adc
xor
ins
and
ins
xchg
inc
(bad)
lea
leave
adc
jns
and
daa
mov
jl
cmp
mov
les
and
neg
xor
cmp
xchg
mov
scas
(bad)
cli
pusha
loope
mov
into
xor
push
nop
mov
shr
pushf
jnp
or
or
xchg
imul
push
imul
ror
sub
out
mov
lock
jo
sub
jecxz
shl
ss
mov
sbb
jae
pusha
push
bound
jecxz
out
dec
sub
out
cmps
and
fwait
add
sbb
or
gs
cs
stos
xor
je
(bad)
sub
js
pop
neg
push
push
xlat
iret
cwde
and
mov
dec
push
(bad)
fstp
ror
mov
fs
cmc
sub
jae
or
in
pop
push
ret
xor
movs
loop
gs
rol
jle
and
mov
jno
lds
(bad)
xlat
mov
push
ds
mov
into
scas
cld
aad
or
je
adc
pop
jl
sbb
push
ss
and
xchg
sbb
mov
scas
test
mov
fnstsw
int
xchg
fwait
xchg
or
jecxz
div
mov
xchg
mov
mov
adc
scas
imul
add
mov
jnp
ret
jbe
pushf
popa
mov
ret
aaa
ss
jns
ror
dec
scas
sti
lods
fcomp
clc
cmc
fdiv
mov
pushf
fisttp
push
movs
nop
mov
mov
es
fisttp
retf
sbb
movs
aad
jno
mov
retf
in
loope
test
and
aam
or
idiv
mov
fsubr
ins
fwait
(bad)
push
cmps
sahf
mov
mov
sub
sti
push
mov
push
dec
sbb
loop
shl
jmp
xor
mov
mov
sbb
sub
fsubr
xchg
ins
push
push
push
add
test
int3
xchg
xchg
add
cmp
out
pop
mov
and
movs
and
int
pop
fcomi
fnstenv
push
sbb
mov
imul
ins
(bad)
js
loope
ja
retf
push
xor
mov
arpl
pop
in
jmp
iret
icebp
ds
int3
and
lock
xchg
lods
ins
fadd
js
cmp
mov
cmp
mov
ja
(bad)
int3
xchg
cmp
mov
outs
pop
push
mov
jae
push
jecxz
rcr
shl
addr16
mov
mov
cmp
(bad)
dec
dec
(bad)
push
loope
js
mov
jle
cmps
icebp
xor
out
dec
pop
rcl
fwait
mov
mov
mov
call
sbb
loopne
fs
mov
test
bound
sub
shr
call
push
and
movs
js
loope
data16
rcl
mov
shl
stos
xchg
sub
les
mov
cdq
fidiv
(bad)
sbb
and
or
jge
xchg
adc
push
out
adc
idiv
mov
icebp
sbb
fnstcw
fstp
push
jb
jg
jmp
xor
fadd
imul
test
xor
neg
jg
rcl
add
mov
push
neg
inc
cdq
dec
fisubr
pop
sub
xor
loope
adc
pop
out
xor
scas
mov
lds
std
cmps
fwait
xchg
sbb
mov
adc
daa
ret
gs
(bad)
shl
inc
fisttp
mov
fptan
sub
or
imul
inc
xor
test
ficomp
dec
push
fucomi
icebp
mov
movs
int
(bad)
push
sbb
add
out
inc
mov
mov
sub
hlt
mov
scas
call
fsubr
ins
out
ror
xchg
(bad)
adc
pop
pop
scas
sti
lods
shl
push
mov
xchg
push
inc
and
adc
jne
sub
inc
(bad)
xchg
cmp
mov
test
je
jae
or
(bad)
or
js
jge
sbb
ds
sahf
out
icebp
(bad)
and
icebp
cmp
test
mov
out
mov
adc
fidivr
pop
dec
dec
or
xor
mov
inc
adc
not
cmp
je
push
add
add
jbe
sbb
(bad)
dec
sbb
mov
daa
mov
mov
cmp
aas
cmp
mov
out
cmc
aaa
inc
popf
mov
loopne
mov
mov
mov
loopne
push
test
int
pop
js
xchg
outs
mov
enter
jae
xchg
adc
(bad)
lods
(bad)
call
jmp
xchg
lods
aad
sub
stos
test
imul
inc
shr
xor
in
inc
sahf
or
dec
push
data16
push
pop
cmp
push
mov
outs
dec
outs
leave
fisubr
outs
addr16
xor
rol
shr
fsubr
lods
jno
inc
jge
lods
push
pushw
(bad)
push
jbe
lahf
sub
cmps
(bad)
mov
pop
sbb
xor
xchg
movs
mov
push
aam
movs
mov
push
sub
sbb
cli
test
mov
js
or
ins
push
xlat
or
pop
shr
xchg
inc
mov
imul
mov
jo
ja
sar
sbb
fiadd
xchg
cmps
add
sbb
adc
push
fld
push
int3
das
push
adc
ss
into
imul
bound
xchg
and
data16
movs
rcr
in
imul
adc
pop
shl
adc
out
pusha
cmps
(bad)
jmp
mov
int
pusha
adc
sub
mov
cmp
add
or
inc
into
repz
add
mov
or
and
popf
ins
jp
push
pusha
aad
xchg
cmps
fst
cmp
(bad)
out
sbb
call
sbb
mov
(bad)
push
in
add
retf
jmp
push
or
push
push
add
out
and
aaa
fwait
leave
push
pushf
xlat
pop
inc
les
jb
mov
cmp
fsubr
mov
jne
arpl
iret
jnp
leave
cmp
arpl
mov
pop
mov
mov
xchg
test
callw
into
shl
pop
xchg
push
push
mov
ret
hlt
dec
loopne
enter
adc
loop
test
dec
and
xchg
clc
push
dec
call
mov
pushf
sahf
test
loope
inc
jle
aaa
aam
fld
cmp
or
push
xchg
fst
cmps
sub
fcom
and
and
imul
sbb
repz
mov
inc
add
in
das
ins
xchg
cdq
jecxz
sbb
popa
jns
test
xor
ja
sti
js
mov
mov
jno
xor
stos
mov
xchg
xor
shl
add
in
sbb
leave
and
cmc
pop
cmc
ins
xor
sbb
xchg
mov
aas
push
bnd
mov
packuswb
das
mov
sbb
lahf
adc
fsubr
pop
jmp
xchg
scas
add
xlat
out
ret
sub
sub
adc
jns
sbb
xor
push
mov
outs
push
xchg
xor
push
jmp
pop
scas
jbe
hlt
iret
stos
mov
jne
int
push
adc
fwait
push
mov
or
add
aas
or
pop
xchg
mov
inc
sub
js
pop
and
mov
xchg
xlat
out
adc
loop
jae
popa
fnsave
jae
jge
push
fstp
add
scas
xchg
sbb
inc
sub
test
xor
push
popf
fcom
mov
dec
xchg
arpl
mov
(bad)
add
gs
test
xchg
dec
jmp
dec
fs
jnp
fdivp
mov
fsubr
aad
mov
sbb
loope
add
cmp
dec
adc
jb
xchg
adc
xor
arpl
lock
test
ss
ror
sar
inc
aam
les
add
push
bound
cmp
pop
cwde
frstor
sbb
xlat
arpl
(bad)
push
dec
xor
lds
mov
mov
jecxz
mov
pop
xor
add
aaa
arpl
div
out
or
arpl
mov
sbb
or
icebp
dec
mov
jo
paddusw
push
clc
fimul
cs
mov
mov
pop
xor
cmp
imul
(bad)
lods
leave
jmp
add
mov
pop
fnsave
jno
daa
mov
xchg
cmp
in
mov
pop
xchg
das
jae
pop
loop
rol
mov
mov
jbe
adc
pop
sti
push
push
add
mov
jnp
jns
cmc
jb
pusha
mov
adc
mov
add
xor
adc
xor
lea
out
nop
xchg
stos
dec
aas
rcl
cld
or
mov
outs
sbb
push
and
imul
retf
mov
mov
sbb
mov
push
(bad)
push
jne
lods
pop
(bad)
fld
mov
xchg
inc
pop
scas
aaa
mov
arpl
jnp
or
and
jnp
repnz
xor
xchg
popa
mov
loopne
pop
jmp
test
xchg
pop
in
add
sbb
and
out
pop
mov
pop
(bad)
icebp
test
cdq
jo
and
push
nop
sbb
jp
mov
outs
imul
and
int
ds
fiadd
movs
aam
cmp
outs
inc
push
out
imul
call
cmp
retf
mov
push
sub
(bad)
and
pop
and
jmp
stos
pop
fsubr
adc
test
pop
sub
fidiv
fdiv
or
fistp
jp
cwde
je
mov
mov
scas
mov
push
xlat
lea
scas
ins
sub
fwait
xchg
rcr
sub
(bad)
icebp
or
(bad)
inc
loope
test
add
push
iret
jo
adc
movs
int3
rcl
test
ficomp
ret
test
or
fisub
xor
inc
push
pusha
sub
and
fldenv
mov
dec
loope
ins
xchg
jo
fsubr
xchg
imul
fadd
cmps
pop
adc
test
xchg
imul
sub
and
jns
sub
mov
cmp
push
test
adc
mov
les
dec
sbb
push
mov
out
cmp
mov
aam
div
pusha
scas
popf
xor
rol
cmp
mov
push
fld
in
shl
aaa
dec
les
fwait
rsm
adc
fwait
leave
shl
lds
sub
mov
hlt
jb
xor
int
sub
sar
or
retf
dec
inc
ret
fiadd
jmp
jne
xchg
mov
xor
adc
jmp
pop
into
neg
aaa
jecxz
xchg
int
out
out
push
adc
mov
fcomp
rcl
sbb
jo
sbb
inc
fsubr
fimul
dec
je
push
fiadd
shl
push
mov
push
outs
inc
fidiv
cmps
ds
adc
mov
(bad)
in
xchg
stos
push
out
xchg
sbb
leave
and
or
ins
retf
adc
mov
adc
inc
cld
retf
sub
jbe
fdiv
dec
call
mov
mov
(bad)
mov
mov
adc
and
ret
push
push
add
in
mov
push
inc
pop
dec
add
jno
ja
(bad)
pop
jle
pop
loope
jg
dec
arpl
test
lods
mov
int
sbb
jnp
add
push
(bad)
lods
add
push
and
cdq
cdq
neg
gs
xchg
(bad)
arpl
cmp
data16
iret
jp
ror
js
stos
jp
aaa
push
fwait
aaa
jge
sub
dec
sub
loop
mov
xchg
push
adc
imul
mov
xor
shl
bound
sub
enter
mov
(bad)
les
inc
outs
fmulp
sbb
out
or
int3
test
xor
daa
dec
jmp
cmp
push
out
pop
loope
retf
adc
sub
call
sbb
jl
test
push
arpl
pusha
fisttp
(bad)
xchg
xchg
rcl
dec
ror
inc
inc
(bad)
cdq
dec
cwde
add
jecxz
mov
xchg
xor
push
inc
dec
push
pop
dec
sti
mov
mov
arpl
pop
and
cmp
imul
not
shl
or
xchg
test
js
aam
scas
gs
jle
mov
in
sti
mov
aaa
push
sub
dec
je
jno
outs
loope
mov
inc
cmp
xchg
out
jo
cmp
mov
xor
outs
jbe
sub
jge
and
mov
mov
inc
jge
leave
jo
lea
mov
daa
inc
mov
xchg
push
int3
pop
pop
inc
test
daa
inc
push
cmp
fcmovb
pop
pop
icebp
in
cmps
inc
sub
dec
scas
sbb
pop
leave
pop
push
jbe
dec
mov
cs
arpl
lea
xchg
mov
aam
xor
pusha
clc
jl
lods
jne
sbb
(bad)
xor
xchg
icebp
das
mov
mov
push
jecxz
xchg
and
inc
scas
popf
mov
(bad)
cmp
fsubr
mov
stc
xchg
in
movs
jae
jmp
scas
pop
ficomp
dec
pop
and
dec
sub
mov
test
jns
js
and
scas
push
(bad)
sbb
adc
into
cmp
hlt
int3
and
add
mov
mov
out
jae
pop
fnstcw
mov
shr
sbb
gs
jno
pop
in
sbb
clc
movs
js
add
(bad)
iret
cmp
cs
scas
loope
push
pop
dec
xchg
push
(bad)
(bad)
stos
cmc
adc
ss
mov
xor
mov
data16
and
out
aas
test
mov
mov
xchg
jg
push
push
push
pop
jnp
jns
push
jmp
push
scas
push
ins
push
sub
(bad)
cld
push
ins
sbb
pop
mov
bound
sbb
pop
jmp
xchg
ds
fisttp
sbb
jno
cli
data16
dec
leave
pop
xor
test
add
hlt
sub
scas
int3
(bad)
add
sbb
out
jno
es
or
inc
(bad)
push
out
cmp
jae
(bad)
outs
push
cmc
sbb
xchg
inc
push
sbb
xchg
mov
sbb
ret
mov
into
aaa
loopne
xor
rep
inc
fsubr
jmp
int3
int3
cmp
sar
ja
inc
fld
cmp
in
je
jbe
and
retf
and
mov
mov
xor
mov
sub
test
shr
xchg
sub
pop
push
push
ins
je
sub
mov
lods
pop
xor
and
mov
(bad)
lock
fs
cmp
xchg
shr
mov
dec
pop
ja
and
retf
call
jle
pop
mov
xchg
movs
mov
dec
mov
xor
jns
out
xchg
ja
push
inc
push
ins
dec
iret
cmps
add
inc
or
neg
pop
mov
pop
or
dec
out
mov
outs
stos
arpl
sbb
and
add
dec
jecxz
lea
hlt
pop
aam
pop
(bad)
aad
jecxz
loopne
repz
rcr
dec
enter
xchg
(bad)
jnp
push
jmp
add
loope
daa
adc
push
mov
stc
ins
mov
das
sbb
jp
or
jmp
xor
add
idiv
sub
(bad)
mov
hlt
or
sbb
or
xor
xor
add
sub
or
or
lock
or
lds
icebp
cmp
pop
pop
outs
xchg
movs
bound
clc
add
xchg
push
test
ins
jecxz
pop
dec
test
adc
mov
or
fs
jg
mov
call
push
ss
push
or
mov
inc
icebp
test
arpl
and
jae
cmp
jbe
es
aaa
mov
cmps
and
adc
mov
or
push
dec
mov
mov
and
fwait
outs
mov
adc
dec
retf
cmp
mov
rol
jae
stos
add
aaa
jno
ror
dec
and
jmp
leave
gs
sti
mov
mov
pop
ror
mov
xor
xor
push
sub
jns
pop
outs
mov
adc
aas
cmp
mov
pushf
pop
ins
push
or
jl
pop
cld
inc
lods
jecxz
sbb
fnstcw
cmp
xchg
cmp
sbb
pop
neg
and
fwait
sbb
retf
fsubp
repz
scas
inc
retf
leave
cmp
pushf
daa
adc
loop
sub
in
shl
dec
sbb
dec
pop
gs
sbb
dec
xchg
test
loop
aam
adc
aam
arpl
loop
push
sti
lds
cld
sub
and
jl
mov
mov
jmp
adc
adc
and
sbb
pop
aaa
in
mov
clc
push
je
xor
sub
xor
fadd
cdq
aad
loope
sub
test
inc
cdq
cmp
xchg
(bad)
into
ror
int3
rcl
xor
not
push
fisubr
pop
or
jmp
stos
jg
ins
test
jns
test
xor
lods
push
data16
mov
lods
sbb
cmps
arpl
mov
jns
ror
popf
adc
or
in
jne
pusha
adc
idiv
or
loop
jl
sbb
nop
sub
aad
push
addr16
add
dec
dec
outs
cwde
jne
outs
mov
scas
out
jae
retf
pop
mov
xor
call
sub
adc
inc
or
out
pop
jecxz
mov
mov
fsubr
mov
xor
(bad)
cld
scas
js
mov
push
fsub
or
scas
mov
arpl
outs
push
mov
in
movhps
xchg
(bad)
shl
and
call
aaa
int3
jecxz
inc
dec
jp
call
push
ins
fucomi
push
sbb
movs
dec
retf
stos
or
dec
lock
cld
pop
dec
scas
cmp
stc
stos
fsubr
add
xchg
push
neg
mov
out
ins
cmps
rcl
xor
adc
add
test
xor
outs
ror
or
stos
push
out
cmp
shl
iret
lea
cld
adc
inc
mov
pop
cmp
gs
cmp
loope
sub
jb
mov
dec
push
nop
pop
icebp
pop
nop
dec
mov
and
mov
jae
cmp
dec
scas
jle
dec
cwde
inc
xchg
out
or
imul
fdecstp
sbb
call
xor
fsubr
xchg
(bad)
and
movntps
sub
imul
in
ja
push
xchg
xchg
scas
push
push
pop
xor
push
adc
bound
(bad)
mov
mov
jge
jnp
adc
ret
xor
dec
xchg
movs
mov
arpl
mov
jo
pushf
cs
sbb
fwait
adc
jne
xchg
dec
jb
push
xor
jbe
sbb
cs
jns
add
xor
dec
je
and
mov
pushf
cmp
push
and
push
jmp
add
leave
sbb
stos
mov
and
(bad)
cmps
imul
(bad)
int
mov
mov
xchg
pop
jle
retf
sub
out
aam
mov
imul
cmp
out
mov
popa
hlt
or
push
mov
rol
popa
sbb
scas
and
imul
in
cwde
popa
mov
ins
push
jo
daa
cmp
popa
dec
dec
pavgw
rcr
and
pop
add
mov
imul
xchg
clc
bound
cli
xchg
mov
ret
xor
jo
rcl
inc
neg
aad
xor
mov
xchg
arpl
lods
icebp
inc
cmp
add
out
aad
imul
mov
xor
(bad)
rcl
stc
daa
push
mov
cmps
push
inc
cdq
sub
lods
sahf
(bad)
inc
mov
sbb
icebp
mov
cli
sub
dec
pop
inc
push
jbe
sahf
stos
sbb
cmps
retf
out
enter
mov
mov
pop
jne
jae
mov
shr
jne
mov
pop
cmp
jmp
xchg
jae
pop
push
adc
cmp
jl
cs
pop
pusha
mov
mov
jns
push
xor
mov
out
or
sub
sahf
es
mov
push
adc
mov
jbe
into
xchg
mov
inc
pop
cmp
outs
jnp
push
sbb
dec
or
movs
jb
sub
and
cmp
add
mov
pop
test
adc
sbb
push
pop
mov
push
adc
lods
cmp
or
or
mov
or
sub
inc
aaa
adc
sub
jne
mov
scas
lahf
ret
jo
or
jle
daa
icebp
dec
loope
add
inc
mov
outs
xchg
push
mov
adc
jge
hlt
push
push
xor
cwde
mov
dec
fist
jbe
push
popa
test
and
inc
push
adc
test
loopne
inc
add
sti
enter
xchg
mov
dec
fldenv
inc
arpl
and
shl
jbe
pushf
fidivr
fmul
pusha
pop
rcr
inc
and
(bad)
(bad)
scas
cdq
test
lock
sahf
retf
fadd
mov
push
xchg
add
not
pop
(bad)
pushf
dec
xchg
jns
add
sbb
out
mov
cwde
dec
or
sub
xor
cli
jns
xor
pop
sbb
inc
mov
outs
imul
dec
push
(bad)
fcomp
mov
xlat
mov
jmp
cmp
sub
cld
or
add
sbb
fld
arpl
inc
pop
pushf
xor
loop
test
mov
out
mov
mov
fstp
cmp
dec
mov
out
cmp
mov
je
je
scas
arpl
test
cmps
daa
xor
mov
sbb
sbb
mov
add
mov
ret
in
dec
inc
mov
movs
cdq
in
push
xchg
cmp
cmp
lsl
(bad)
retf
pop
clc
movs
div
inc
inc
repnz
or
jmp
mov
mov
mov
int3
jno
(bad)
out
cli
into
adc
rcr
addr16
sub
mov
aad
push
out
pop
call
(bad)
cs
jne
pop
mov
jmp
ds
push
fdivr
push
adc
popa
sub
xor
mov
add
sub
daa
lods
idiv
sbb
repnz
dec
sti
arpl
test
mov
(bad)
fsubr
xor
cpuid
mov
ja
jae
add
fld
aaa
ret
aam
lods
cmp
not
and
jb
(bad)
iret
push
repz
mov
xor
(bad)
adc
mov
mov
inc
shl
dec
lock
aaa
dec
leave
xor
mov
sbb
mov
neg
mov
aaa
inc
sub
inc
mov
retf
dec
scas
jae
xchg
xchg
je
dec
stos
mov
mov
jns
dec
push
push
retf
cdq
fnstenv
inc
mov
cs
jo
xor
sbb
pop
aas
or
cli
sbb
lods
cdq
icebp
js
sub
mov
stc
ins
(bad)
out
mov
sbb
and
push
lea
(bad)
xor
xchg
add
gs
push
xchg
(bad)
or
cmp
nop
xor
xor
fwait
std
(bad)
mov
lods
or
fld
mov
or
ds
lock
(bad)
in
icebp
mov
mov
gs
push
xchg
cwde
sbb
pop
out
and
ja
fistp
add
or
loop
push
popf
push
pop
jnp
js
xchg
clc
imul
pop
in
sbb
loope
ins
test
out
aas
aad
jno
mov
aaa
enter
mov
(bad)
or
pop
cmps
std
into
adc
and
aad
mov
mov
push
inc
cmp
(bad)
dec
addr16
mov
into
aaa
push
lods
ds
push
loopne
mov
mov
cwde
(bad)
test
mov
(bad)
daa
xchg
repz
xchg
adc
(bad)
sar
cmp
cdq
sub
xor
mov
stc
mov
jge
xchg
inc
je
xchg
mov
pop
xchg
fnsave
cmp
out
xchg
test
rol
mov
mov
cwde
mov
inc
jmp
nop
sub
mov
sub
fisub
scas
jae
inc
mov
out
scas
retf
dec
dec
idiv
sahf
aaa
mov
popf
adc
pop
mov
loopne
jp
dec
mov
xor
push
sub
mov
(bad)
pushf
repnz
sti
xchg
int
adc
pop
cmp
push
fs
and
lock
std
in
cmp
jmp
mov
je
stos
leave
push
adc
jmp
xchg
mov
or
mov
or
jmp
addr16
aad
pop
sbb
xor
out
pushf
inc
pop
push
dec
jne
mov
stos
push
dec
or
cmp
mov
aad
dec
mov
jnp
arpl
add
jnp
sub
add
adc
rcl
cmp
dec
stos
xchg
xchg
mov
cmp
imul
cmps
je
icebp
(bad)
out
ins
jecxz
arpl
dec
pop
ret
sbb
mov
pop
xchg
repz
into
pop
lea
arpl
xor
aam
push
adc
shl
les
pop
lgs
scas
cmp
mov
push
rcr
pop
ins
ins
das
fldenv
dec
mov
nop
stc
dec
imul
popa
cwde
div
(bad)
mov
xchg
int3
add
mov
mov
mov
push
sbb
ror
add
mov
pop
inc
or
lock
adc
loope
xchg
xchg
cld
fsub
(bad)
push
and
pop
cli
test
pop
adc
(bad)
leave
and
push
out
sbb
aam
dec
sub
sub
xor
cmc
or
push
push
mov
or
push
sbb
std
adc
add
jl
cmp
sbb
jns
fisttp
and
pop
add
pop
scas
imul
loope
and
jge
adc
outs
nop
xchg
(bad)
into
shl
imul
push
dec
cmp
cs
mov
and
add
pop
loop
dec
cmp
jmp
xchg
outs
and
int3
pop
xor
mov
dec
add
pmullw
shl
sub
push
js
pop
and
cmp
pop
jbe
aam
dec
sub
xchg
or
cmp
cmp
sub
push
sbb
or
mov
xchg
push
outs
cmps
xchg
rcr
rcr
stos
in
cmps
ss
jae
int
mov
sar
aad
mov
sahf
xor
mov
cmp
or
cmps
jnp
jb
inc
pop
out
scas
jmp
comiss
push
push
xor
sub
inc
xlat
inc
retf
imul
imul
add
cmps
add
or
xlat
cdq
push
fld
scas
mov
fwait
aaa
push
ja
pop
xor
inc
xchg
xor
mov
add
mov
out
mov
pop
or
mov
fisttp
daa
dec
sub
(bad)
pop
mov
mov
mov
sbb
scas
adc
push
sti
rcr
das
jo
fdivr
or
sub
push
inc
fidiv
pop
bound
mov
imul
mov
sbb
push
mov
push
sbb
and
cwde
imul
jmp
cmp
xchg
xor
mov
lea
ret
push
cmps
icebp
add
pop
ds
cmp
cmp
int3
mov
mov
movs
mov
test
repnz
pop
ret
sub
call
push
mov
leave
xchg
and
pop
jae
out
jmp
jo
push
lods
scas
adc
das
cmps
call
lea
mov
dec
arpl
sti
add
fstenv
sub
in
repnz
push
sti
and
mov
add
std
push
jno
mov
jnp
mov
xor
in
call
jo
(bad)
es
jg
out
ja
push
xchg
push
xor
popf
xchg
mov
sbb
test
jae
fnstcw
idiv
add
leave
std
dec
mov
and
jne
and
mov
je
dec
and
lea
pop
or
in
push
out
call
sbb
cmps
in
mov
stc
into
sbb
scas
push
popa
xor
(bad)
jb
iret
cdq
fist
xchg
rcr
popa
adc
pushf
xor
int
mov
cs
mov
dec
popf
add
mov
inc
nop
mov
push
bound
and
leave
or
push
xor
xchg
(bad)
iret
push
add
scas
and
nop
cli
pop
pop
inc
rol
cmc
mov
arpl
mov
stc
pop
dec
test
push
inc
adc
sar
scas
(bad)
jmp
dec
out
aad
(bad)
or
mov
lahf
or
jne
in
neg
iret
mov
and
or
inc
(bad)
or
push
shl
ins
sahf
leave
mov
mov
xchg
pop
cmps
jl
outs
out
or
stos
adc
jne
xor
push
jns
into
(bad)
jmp
pop
cmc
ja
xor
inc
fldenv
push
jno
(bad)
ret
dec
xor
or
(bad)
gs
inc
sub
cmp
cs
scas
mov
or
hlt
aam
dec
retf
stos
sbb
mov
cmp
loope
ins
mov
adc
adc
fdiv
inc
inc
gs
jb
or
lods
inc
addr16
fstp
pop
(bad)
or
movs
pop
icebp
and
std
ud0
mov
ss
test
loopne
mov
pop
out
cmps
dec
(bad)
mov
pop
dec
cs
adc
jne
and
adc
cmp
mov
or
loope
jns
pop
cmp
lahf
xor
and
test
xchg
push
sbb
(bad)
adc
push
push
clc
ins
in
mov
or
or
ret
push
into
out
pop
jl
mov
neg
repnz
push
pop
jbe
sti
push
ret
jnp
adc
inc
adc
jnp
dec
int3
mov
retf
sahf
pop
scas
shl
test
dec
pop
stos
lods
add
mov
mov
push
adc
pusha
jle
mov
and
add
outs
jno
add
dec
es
sub
jbe
js
test
jnp
retf
rcl
test
outs
lods
mov
adc
rcl
mov
(bad)
clc
push
or
add
frstor
sbb
stos
shl
sub
pop
pushf
fisttp
inc
imul
mov
xchg
fisubr
push
xchg
push
adc
mov
out
test
cs
scas
mov
ret
shl
aas
xchg
push
das
pushf
fnsave
pop
mov
test
sbb
leave
dec
fld
into
jge
and
dec
adc
mov
dec
inc
push
mov
bswap
or
jmp
shr
and
mov
jmp
jno
dec
loope
stos
dec
ret
and
sti
cmp
inc
xchg
inc
xor
push
xchg
mov
xchg
test
sbb
clc
mov
int
jmp
add
js
popf
retf
and
jmp
std
xlat
pop
ror
lea
retf
test
sub
xchg
shl
test
es
mov
mov
in
ins
fs
sub
xor
ror
mov
fmul
xchg
mov
outs
scas
inc
mov
in
leave
inc
fmul
sub
mov
imul
pusha
sbb
xchg
fmul
daa
add
popa
sbb
or
in
int
aaa
outs
cs
jae
clc
push
adc
pop
pop
jae
lods
mov
mov
imul
xchg
rcr
and
cmp
cmp
inc
in
mov
sub
push
xchg
aaa
mov
cs
xor
cmp
xor
dec
shl
aaa
push
fs
dec
lds
mov
inc
xchg
mov
in
cdq
push
call
js
mov
push
mov
jmp
cdq
sar
cmps
ins
popa
xchg
into
sbb
mov
dec
in
mov
mov
les
enter
fdivr
shr
imul
out
retf
xlat
gs
dec
rol
sub
sbb
xchg
ror
pusha
pop
je
mov
dec
test
mov
sub
mov
outs
mov
add
and
mov
imul
mov
ss
mov
outs
in
call
iret
mov
or
loop
je
rcr
jmp
loopne
aad
popa
mov
push
jae
out
dec
mov
fld
retf
jle
dec
test
mov
js
sub
mov
sub
shr
pop
pop
inc
fisttp
mov
jmp
sahf
retf
cmp
jmp
aas
loop
repnz
mov
les
shl
pop
mov
ja
or
ins
pop
xor
or
or
fs
ror
xchg
in
daa
mov
cs
jl
leave
adc
and
jmp
icebp
retf
aaa
pop
mov
in
pop
push
test
cdq
mov
sub
scas
sahf
(bad)
nop
jbe
stc
sub
fidiv
or
je
clc
cmp
in
sub
test
cmp
adc
jg
cld
aad
mov
daa
(bad)
sub
sti
mov
inc
sbb
(bad)
enter
xchg
mov
jne
mov
mov
fcomp
inc
std
xlat
outs
mov
ins
aam
sub
jae
inc
idiv
es
(bad)
movs
inc
rcl
push
enter
pop
cmp
mov
mov
add
mov
ret
xchg
shr
adc
push
cdq
sbb
imul
push
push
jg
push
sbb
fcomip
dec
sub
jns
mov
pop
sub
repz
out
outs
aad
jmp
js
gs
out
mov
out
mov
(bad)
iret
(bad)
into
mov
sub
push
les
add
mov
mov
fild
int
stos
cs
clc
fsub
ja
mov
xchg
in
jo
(bad)
cwde
pop
inc
(bad)
pop
push
(bad)
jno
inc
adc
arpl
xor
add
fistp
jne
lahf
or
shr
xchg
lods
mov
xchg
adc
push
ret
outs
loop
mov
cmp
fwait
clc
mov
or
dec
pushf
in
or
mov
pusha
sbb
aam
dec
add
xchg
push
rcl
push
(bad)
sbb
leave
daa
jo
cli
cmps
lds
xlat
push
inc
shl
fcom
int3
enter
mov
push
mov
inc
ja
jb
dec
mov
dec
inc
push
push
in
mov
dec
and
push
fnsave
sbb
sub
inc
or
int
int
mov
enter
sbb
mov
or
pop
mov
sbb
jle
dec
pop
xchg
push
les
dec
xor
pop
inc
fld
xchg
sbb
adc
push
out
mov
adc
add
mov
inc
push
push
push
mov
fld
(bad)
sub
dec
xchg
xchg
test
push
mov
and
xchg
mov
pop
xor
adc
and
in
xchg
and
cmc
inc
les
and
mov
xlat
push
lahf
dec
push
and
call
(bad)
sti
push
adc
ins
adc
rcr
ins
ror
and
repz
mov
push
repz
sbb
test
cmps
mov
xor
leave
mov
jle
dec
xlat
pop
test
mov
int3
shl
les
cs
test
inc
ret
std
push
mov
ds
dec
fnstsw
push
enter
mov
xchg
mov
xlat
pop
test
mov
pushf
cli
pop
dec
popf
xchg
sub
jno
xor
retf
inc
fnstsw
sbb
in
aaa
push
mov
mov
test
test
mov
xchg
ret
(bad)
popa
cmps
or
lods
js
in
dec
xchg
xlat
push
jge
jg
jl
shl
dec
sar
ret
mov
out
out
mov
or
cmp
cmp
mov
pop
int3
in
retf
cmp
aaa
inc
(bad)
xor
jne
movs
cmps
int
mov
leave
sbb
or
fisubr
push
mov
inc
and
mov
inc
adc
sbb
sub
xchg
pop
jp
jecxz
jmp
mov
jge
retf
test
out
lods
push
rol
mov
(bad)
push
cmp
add
ret
aam
mov
lds
add
and
fwait
setge
mov
lods
sub
mov
dec
inc
std
neg
inc
mov
push
enter
enter
xor
mov
sub
jl
(bad)
or
in
jmp
mov
imul
mov
pushf
and
cdq
pop
popf
idiv
icebp
xor
repnz
setnp
rol
cdq
xchg
(bad)
sbb
sbb
in
inc
(bad)
and
sbb
add
jbe
xor
call
addr16
adc
pop
inc
adc
call
jmp
bound
in
jno
fisubr
dec
retf
outs
inc
sbb
pxor
mov
sub
mov
movs
jae
neg
inc
xchg
mov
add
mov
dec
inc
repz
add
gs
dec
neg
inc
mov
cmp
ins
sbb
sti
add
jmp
inc
sbb
sub
cmc
inc
xor
outs
mov
lods
mov
shr
or
mov
cld
or
mov
test
(bad)
int
out
in
pop
pop
cmc
mov
or
es
xchg
pushf
xchg
nop
cmp
xchg
mov
add
shl
mov
jbe
fst
retf
mov
(bad)
xlat
pop
push
stos
pop
pop
add
retf
jmp
mov
int3
scas
mov
adc
xor
push
mov
cld
inc
and
outs
(bad)
std
mov
push
stos
pop
shr
and
hlt
inc
cmp
lods
mov
fcmovbe
pop
pop
jo
out
cmp
jl
test
(bad)
ss
xchg
outs
pop
lock
ds
in
dec
int3
sbb
adc
out
jnp
inc
clc
xchg
sbb
xor
cwde
dec
and
push
ja
mov
add
sar
sbb
loop
cli
cmps
adc
psubq
out
fiadd
test
arpl
sub
xchg
sahf
sti
mov
push
(bad)
xor
mov
mov
jns
into
jp
jne
test
icebp
jmp
ss
int3
lods
dec
cmc
out
jns
call
sbb
nop
push
popa
mov
fninit
popa
add
pop
arpl
cmp
and
mov
xchg
xor
out
lahf
rcl
xor
cs
imul
je
push
xor
mov
sti
into
sbb
sbb
jae
test
pop
shl
test
sub
mov
jb
add
daa
retf
mov
mov
sbb
test
jecxz
dec
out
pop
xchg
mov
add
dec
sbb
xchg
sbb
fwait
and
and
mov
lea
retf
pop
cmp
sbb
cld
shr
lahf
sub
mov
stos
pop
add
jmp
adc
ins
cmp
in
and
in
and
xchg
mov
(bad)
push
xor
out
xacquire
enter
sbb
push
cmp
mov
xchg
mov
or
and
mov
cmp
ret
mov
mov
aaa
dec
cli
mov
or
jae
xchg
sbb
add
sub
add
fwait
jno
movs
fsub
fsub
pop
adc
gs
pop
(bad)
outs
jo
dec
xlat
add
cs
sbb
mov
jo
test
into
enter
aaa
sub
retf
push
sbb
movs
mov
and
mov
mov
(bad)
jmp
cmp
stc
or
fst
and
stos
push
sbb
test
cmp
mov
add
fwait
test
add
imul
push
push
pop
test
inc
(bad)
add
or
pop
dec
ret
push
push
test
enter
rol
mov
mov
mov
push
mov
xor
cmp
call
les
dec
mov
aad
dec
ja
push
xor
mov
out
scas
movs
test
mov
jp
mov
inc
cmp
popa
cwde
mov
jbe
xchg
jmp
cld
add
push
mov
movs
xlat
push
ret
inc
mov
push
sub
xor
out
cli
sub
cmp
jmp
jae
ss
div
lea
dec
jb
jno
cs
push
push
mov
jb
push
dec
or
outs
test
(bad)
leave
sbb
fcmovnbe
(bad)
add
(bad)
retf
cdq
lods
mov
pop
cmps
dec
mov
ja
test
push
and
stos
xor
push
or
nop
pop
into
fwait
cmp
call
and
add
stos
xchg
out
mov
ret
mov
ficomp
or
in
stc
and
cmp
mov
jmp
ja
and
jb
retf
movs
adc
and
cs
enter
sahf
and
repnz
ds
and
outs
fmul
jmp
xlat
repz
scas
dec
jae
push
icebp
cmp
imul
cmps
test
push
loope
ret
cs
xchg
pushf
inc
jecxz
fiadd
fisttp
popa
mov
push
iret
cmps
pushf
pop
outs
(bad)
lea
inc
sbb
jmp
sub
xchg
pop
mov
fs
test
lock
imul
jb
xlat
cmp
and
adc
sub
enter
xor
in
rcl
cmp
pop
fstp
sbb
dec
push
add
jl
pop
lods
ins
inc
pop
imul
sub
xor
dec
xchg
mov
jmp
xor
scas
aam
inc
mov
dec
pop
and
repnz
jbe
outs
sbb
pop
out
or
inc
jns
daa
xlat
sti
sub
daa
cs
jmp
xor
xchg
xor
jmp
in
sti
mov
nop
jmp
mov
les
fbstp
push
mov
in
jp
retf
push
dec
icebp
aam
fucomi
mov
mov
fistp
mov
out
mov
iret
sub
pop
cmp
rol
mov
sahf
cmps
call
push
mov
cmps
xor
inc
movs
scas
cmp
xor
or
mov
mov
movs
cmp
or
sub
call
adc
inc
aaa
jne
jnp
xor
outs
cs
xor
test
sub
in
and
cmp
adc
xor
and
dec
mov
add
add
fnstsw
sub
mov
push
ins
cld
mov
sbb
xchg
outs
mov
movs
hlt
add
out
leave
or
in
mov
in
rol
neg
sub
pop
jbe
and
jno
sbb
mov
pop
fmulp
movs
dec
loop
aaa
dec
jo
jmp
test
mov
out
fs
lods
lock
mov
stc
mov
push
lods
and
jge
dec
and
adc
cmp
mov
or
out
mov
ja
cmp
sub
mov
ja
fnstcw
dec
and
cmps
mov
sbb
mov
test
dec
mov
mov
push
sub
jle
jp
and
fcomp
jne
push
jb
or
sub
cmp
or
hlt
pop
or
sbb
sub
sub
xlat
inc
adc
and
in
xor
dec
adc
int3
loopne
jmp
xor
mov
loop
iret
pop
and
enter
pushf
jne
inc
add
push
movs
ds
arpl
xchg
ja
mov
cld
xchg
lea
sbb
(bad)
push
fstp
mov
sub
cmp
cli
push
mov
popa
clc
inc
arpl
adc
jno
adc
or
pop
stos
and
shl
movs
push
(bad)
hlt
mov
fmulp
xchg
test
icebp
mov
xor
aas
std
test
dec
jae
loope
cs
mov
sub
pop
mov
aam
ja
jge
jle
jo
inc
out
fstp
and
test
pop
fst
jg
cmp
loope
test
(bad)
pop
in
out
ins
aad
out
mov
(bad)
or
xor
popw
push
xor
xlat
call
movs
imul
imul
pop
adc
dec
fld
or
sti
repnz
xor
inc
xlat
push
inc
adc
in
mov
xor
xor
cmp
jmp
in
repnz
loopne
add
shl
dec
ret
outs
push
adc
mov
cmp
lods
jge
xor
jbe
add
push
mov
mov
mov
aaa
test
outs
or
fcom
fcom
mov
push
xor
sub
fs
cli
sub
fsubp
popf
aad
js
add
push
shl
jo
call
push
inc
dec
jmp
push
loopne
add
mov
xchg
retf
or
lea
mov
dec
pop
inc
test
aaa
lahf
lds
cld
and
xor
add
mov
cmp
stos
jbe
adc
popf
gs
jnp
aaa
mov
div
xor
retf
jo
adc
jmp
inc
popf
pop
retf
sbb
jle
outs
test
mov
loopne
adc
and
pop
cli
stos
mov
or
xor
rcl
ins
fbld
into
jmp
add
cmp
pop
call
push
push
or
mov
out
cmp
aas
push
pop
cmp
cmps
adc
mov
jo
add
retf
paddw
sti
lods
dec
ins
xor
or
push
fadd
jmp
or
mov
les
push
shr
ins
retf
jmp
or
fnstsw
and
fucomi
stos
jb
movs
add
(bad)
sti
add
ins
pop
and
inc
and
mov
leave
add
gs
cwde
nop
adc
jle
or
sub
mov
add
stos
inc
and
cmp
adc
test
cmp
mov
repz
out
push
push
rcl
aad
pop
fisttp
and
(bad)
add
or
xor
xchg
jg
push
push
movs
ret
cmps
test
aas
xchg
cmp
sub
xchg
jecxz
xchg
frstor
(bad)
(bad)
mov
addr16
movs
imul
inc
xchg
cmps
sbb
cs
jno
xchg
mov
push
fwait
adc
mov
jne
mov
pop
std
push
mov
nop
xor
mov
cmps
call
xchg
sub
push
ja
mov
jmp
and
pop
inc
nop
sbb
rcr
shl
inc
jno
mov
imul
sub
xchg
inc
shr
and
mov
outs
mov
mov
ja
mov
jno
push
ins
fistp
mov
ret
jge
or
add
mov
mov
xchg
pusha
cmp
adc
(bad)
mov
rol
or
and
fld
ds
jo
push
push
sbb
inc
xor
(bad)
xchg
push
jmp
in
cmps
push
add
shl
cwde
or
retf
sub
mov
push
and
and
and
sahf
retf
mov
sub
jp
adc
and
shr
leave
jge
shl
and
xchg
addr16
xlat
cmp
cs
push
popa
out
jns
add
stos
add
inc
in
adc
fs
inc
stc
or
sbb
fimul
into
pop
retf
(bad)
mov
jmp
fisub
dec
push
movs
or
inc
mov
push
xor
test
inc
or
adc
ss
cmp
lods
cmp
jo
mov
jge
fnsave
mov
loop
shr
fisubr
inc
loope
mov
sbb
pop
mov
daa
ror
outs
clc
mov
pop
sub
ja
mov
pop
cld
cmp
mov
push
mov
pop
ss
hlt
ficomp
movs
xchg
lahf
mov
xchg
repz
movs
push
mov
and
sub
pop
fisubr
dec
sbb
retf
jb
fidivr
mov
xchg
je
lds
add
sub
push
sub
call
out
fwait
adc
lods
jge
xchg
xchg
jmp
pop
sbb
(bad)
pusha
cs
jbe
inc
shl
jno
sub
movs
pop
xchg
xlat
aad
jno
jle
sub
mov
push
pop
loop
mov
and
scas
stos
retf
push
inc
sahf
sbb
mov
dec
push
out
jo
and
and
aaa
push
lds
push
pop
(bad)
dec
inc
mov
push
xchg
pop
(bad)
imul
pushf
lds
ficom
pop
inc
push
jge
test
xchg
inc
mov
dec
xchg
lods
cmp
sbb
pop
xor
ja
push
test
cmps
bound
cmps
adc
enter
add
sbb
xchg
mov
repz
mov
and
fsubr
push
or
dec
and
cmps
jns
daa
xchg
xchg
jne
mov
jo
mov
push
xchg
dec
test
imul
push
sub
jne
and
gs
popf
push
ss
xchg
add
rol
push
fild
jmp
pop
adc
in
mov
cmc
dec
out
jmp
fild
add
or
pushf
mov
sub
and
or
mov
popf
sub
pop
mov
test
mov
and
neg
leave
jbe
sbb
imul
ret
push
and
loope
cmp
cmps
and
(bad)
out
pop
scas
repz
xchg
adc
jmp
pop
loope
jle
hlt
cli
add
add
push
cmp
bnd
lahf
nop
push
dec
mov
sti
mov
(bad)
loop
scas
inc
gs
sub
sahf
dec
fdiv
fst
movs
and
inc
fcom
fxam
xchg
cmp
je
cmp
outs
mov
mov
push
pop
shr
sub
in
cdq
icebp
popa
int
push
mov
mov
shl
retf
jle
test
push
sbb
popf
not
or
jp
jne
add
ror
mov
push
mov
cs
push
xlat
and
cmp
mov
pop
call
and
cmps
imul
dec
and
popf
mov
hlt
inc
loopne
popf
xor
adc
xor
aaa
clc
push
sbb
test
fcmovnbe
or
jge
xchg
cmp
mov
adc
add
pusha
in
adc
aam
daa
pop
popa
cmp
push
dec
(bad)
in
int
(bad)
lds
sub
sub
mov
jbe
aas
fs
aaa
out
adc
jmp
pop
xor
mov
std
inc
jb
and
add
jmp
(bad)
shl
sub
stos
adc
pop
adc
or
jl
lds
fxch
repz
dec
and
shr
in
jno
das
scas
jmp
sub
std
jecxz
ja
pop
ja
or
ins
cmp
call
xchg
test
cmp
adc
inc
inc
cmp
retf
jb
daa
jnp
dec
jbe
lea
push
inc
test
sbb
add
mov
mov
loope
sub
xor
fld
das
mov
dec
stos
daa
pop
popf
adc
mov
mov
stc
lods
add
push
push
js
cmp
retf
je
mov
inc
out
push
sbb
and
pusha
shl
js
sbb
data16
sbb
dec
aas
or
mov
int
test
sti
dec
mov
cwde
pop
jl
pop
das
sbb
cld
inc
clc
sub
cs
mov
imul
cwde
inc
test
call
stos
call
mov
dec
add
mov
mov
mov
push
int3
inc
mov
sub
pop
ds
jle
shr
lea
fcomp
push
retf
inc
xchg
push
lods
cmps
mov
dec
fcmovnbe
cli
mov
cmp
pop
push
jge
cwde
jne
sub
sbb
retf
fnstsw
arpl
lea
mov
lods
into
jmp
adc
mov
fst
mov
cdq
sti
push
lds
xor
mov
mov
ins
pop
push
in
add
clc
mov
jmp
repz
jbe
test
jnp
gs
test
fisttp
gs
cld
aam
ret
mov
cmp
or
adc
retf
out
test
xlat
jbe
mov
and
ss
inc
retf
xchg
icebp
jo
mov
pop
sar
push
fisubr
xchg
sar
cmp
addr16
lds
inc
repz
pop
jbe
or
cmp
stos
movs
gs
ins
xchg
add
or
jo
mov
mov
test
cmp
xchg
jge
sbb
(bad)
fcom
shl
dec
test
sar
dec
cmp
in
rcr
push
mov
leave
mov
sub
pop
ss
adc
adc
ja
cdq
add
cmps
test
test
push
inc
push
cmps
mov
or
mov
dec
sub
sub
xor
inc
out
fmul
call
mov
out
dec
ins
ds
cmp
test
fstp
call
out
aad
fdivr
hlt
pop
xor
pop
add
sar
dec
xor
add
shl
ins
jbe
pop
add
push
push
dec
jo
loope
mov
sbb
cmp
stos
inc
sub
inc
fld
cmp
add
cmc
or
movs
iret
jo
inc
in
pop
jb
fistp
inc
or
lahf
mov
(bad)
out
xchg
outs
rcr
push
pop
mov
or
sub
sub
push
scas
js
ja
jae
xor
bound
aad
outs
test
(bad)
call
xchg
imul
aad
mov
es
xchg
fcom
push
mov
mov
pop
popa
pop
sbb
inc
int3
es
push
xlat
push
and
stos
data16
mov
xchg
push
cwde
loopne
inc
ror
xor
adc
imul
pop
or
or
scas
xor
leave
ret
scas
shl
cwde
xor
int
jne
lea
es
push
adc
leave
or
add
and
xor
ins
xor
dec
dec
pusha
add
dec
sar
jns
aam
jp
inc
add
outs
stos
cmp
test
adc
add
cli
fld
jo
push
adc
lods
aam
es
arpl
inc
(bad)
mov
or
and
int3
(bad)
sub
dec
sbb
dec
and
fistp
loope
jae
mov
jo
stc
push
call
call
cmp
cmp
pop
mov
sub
inc
inc
sbb
test
mov
call
shl
div
xchg
mov
scas
cmps
stos
push
stc
push
adc
jmp
or
sbb
lods
popf
sbb
stc
inc
nop
rol
dec
scas
and
test
cli
push
jno
adc
adc
cs
sbb
dec
jecxz
mov
es
dec
push
mov
jne
jno
push
mov
daa
pop
lea
add
nop
cmp
sub
or
inc
test
ins
add
(bad)
out
sbb
xchg
or
pop
sub
sbb
cmp
cli
cdq
call
ret
je
imul
es
mov
test
xchg
cmps
jo
push
mov
(bad)
shl
fbstp
pop
cmp
cmp
call
ret
mov
push
xchg
xor
les
(bad)
pusha
repnz
push
leave
jb
jle
cdq
jle
or
jnp
out
mov
inc
test
pop
xchg
fsubr
imul
movs
les
mov
xor
cs
jo
push
sar
(bad)
int
mov
cmp
bound
retf
inc
(bad)
pop
mov
xchg
shl
inc
ins
cmc
push
mov
xchg
push
xchg
cmp
sahf
xor
in
call
test
not
jne
pop
and
sub
in
add
xor
push
punpckhbw
ins
push
sub
stc
xor
mov
sbb
xor
and
sbb
aam
aad
inc
cmp
fidivr
cmps
mov
aam
push
push
iret
rol
mov
inc
pop
arpl
lea
push
(bad)
pop
icebp
mov
les
fstp
inc
and
ja
(bad)
mov
imul
addr16
out
fst
sub
repz
add
and
loopne
jmp
sub
sbb
je
sbb
lods
arpl
pushf
lds
jp
aaa
out
and
ret
fs
sub
push
xchg
sbb
sub
push
and
inc
and
or
cli
xor
lds
push
fs
jnp
mov
xchg
std
adc
fisubr
enter
cs
out
add
add
cmp
in
pusha
aad
and
mov
jle
sub
stos
call
push
in
imul
cmp
imul
xchg
jg
pop
mov
mov
jg
into
addr16
and
aad
or
or
clc
lahf
mov
cmp
mov
hlt
pop
push
jb
inc
xor
mov
cmp
ror
jb
push
call
retf
outs
push
(bad)
xchg
or
or
or
test
add
sub
test
je
int
pushf
div
mov
push
xor
ror
mov
inc
and
jo
jae
jae
mov
gs
fcmovne
cmp
call
imul
pop
sbb
jmp
inc
dec
test
mov
jne
cdq
movs
mov
inc
shl
lahf
sub
mov
std
mov
std
xor
adc
cmp
cmps
shr
jl
inc
daa
fwait
push
cmp
cli
lods
call
sti
daa
test
test
or
add
sub
mov
push
mov
test
pop
pop
mov
dec
sbb
jl
add
push
push
fs
inc
fmul
aaa
or
or
iret
retf
data16
add
cmc
or
mov
or
test
inc
shr
jmp
ja
pop
pop
add
sbb
adc
(bad)
daa
sub
mov
jne
mov
pop
or
neg
mov
les
mov
es
cmp
mov
inc
sub
xlat
mov
dec
mov
loopne
inc
and
sbb
jecxz
popa
mov
jno
jp
movs
imul
jbe
sbb
fdivr
daa
push
pop
add
daa
mov
inc
xor
test
add
mov
jl
std
push
or
bound
mov
push
sub
dec
fsubr
add
inc
scas
call
inc
mov
cmc
dec
xor
jge
mov
pop
jl
push
inc
loopne
mov
pop
stos
jle
push
jge
repnz
cmp
inc
dec
cmp
jae
pop
sub
mov
cwde
adc
int
add
fcmove
or
mov
fsub
jae
int
jno
pusha
xchg
adc
jb
adc
xlat
add
rcl
jb
nop
out
push
dec
fldcw
sbb
jmp
call
inc
and
mov
sbb
pushf
in
xor
jbe
cs
aad
pop
in
gs
cmp
jmp
inc
repnz
sub
rcr
pop
add
aad
out
adc
xchg
mov
sub
dec
inc
dec
xchg
nop
call
loop
sbb
dec
mov
imul
ficom
and
push
sub
dec
push
je
neg
es
dec
mov
cli
(bad)
aam
push
inc
pop
adc
outs
or
mov
ds
shl
dec
ret
mov
imul
mov
lock
pop
popa
js
ins
push
push
adc
inc
dec
(bad)
cmp
fsubr
ins
sub
push
cmp
mov
pop
clc
fs
imul
sub
sar
or
call
jae
in
mov
call
cmp
pop
mov
push
repnz
ror
and
pop
xchg
(bad)
xchg
mov
hlt
pop
xlat
push
inc
sbb
mov
cmp
aaa
and
dec
xor
arpl
adc
fcmovnbe
lods
loop
dec
in
xchg
jns
xchg
imul
inc
inc
test
fmul
mov
stos
jno
cmps
shl
inc
mov
scas
xchg
fist
fnstenv
sahf
arpl
pop
mov
fadd
jmp
mov
mov
js
stos
fwait
sbb
mov
xchg
jbe
mov
jbe
rcr
adc
sbb
sbb
mov
sub
outs
cmp
mov
push
fdiv
in
ss
bound
loope
cmp
out
sti
push
scas
ficom
pop
mov
(bad)
int
jnp
mov
jo
je
sub
sub
fld
jne
ror
hlt
sbb
dec
mov
jmp
loope
push
fsub
and
inc
shr
or
outs
and
in
movs
push
cmp
xchg
dec
stos
mov
adc
leave
(bad)
sar
nop
ins
out
rcr
or
xchg
xor
pop
les
cmps
test
push
xlat
dec
lock
xor
std
cld
in
add
cli
xchg
fs
push
pop
mov
sahf
ja
cmp
mov
pop
ins
and
sar
hlt
xchg
repz
and
mov
pusha
mov
(bad)
inc
xor
xchg
adc
xor
(bad)
stos
scas
inc
jnp
dec
push
movs
dec
add
nop
rcl
cwde
mov
xlat
mov
lods
or
add
mov
cmps
movs
mov
push
daa
mov
inc
data16
fwait
clc
fbld
mov
add
(bad)
cld
popa
add
cdq
inc
shl
inc
push
int
ds
xor
ins
hlt
pop
and
and
jae
outs
pop
cmps
mov
xchg
push
mov
nop
stc
leave
add
and
repz
mov
and
jb
test
iret
es
and
jns
dec
repnz
sbb
fcom
test
xor
adc
or
cmps
sbb
and
push
push
shr
inc
not
push
test
(bad)
xchg
push
clc
(bad)
jo
mov
cli
adc
add
das
xor
loopne
mov
cmpxchg
add
fist
and
or
shl
in
lea
mov
data16
shr
mov
fisttp
test
repz
inc
xchg
push
sub
mov
cmp
pushf
or
ror
repz
mov
movs
dec
and
popfw
stc
test
jmp
xchg
int
xlat
inc
neg
mov
push
retf
(bad)
fild
or
dec
and
xor
xchg
mov
xchg
inc
xchg
fistp
dec
mov
adc
fistp
add
inc
dec
sbb
mov
add
adc
popf
das
jnp
stc
cmps
or
push
mov
cwde
or
inc
aam
fstp
jns
jp
sbb
jmp
xor
jnp
sbb
popf
mov
pop
cwde
pop
adc
cmp
fwait
sub
and
adc
cmp
xchg
dec
pop
dec
rcl
push
mov
int
stos
adc
in
je
pop
pusha
mov
mov
fst
out
nop
jae
push
inc
inc
in
cmp
inc
pop
mov
push
loopne
jbe
test
(bad)
ret
sub
pop
and
out
jnp
test
adc
sbb
mov
rcr
fwait
jmp
and
fcom
pop
xchg
inc
dec
cmps
loopne
pop
push
pop
pop
or
les
mov
sbb
sbb
jnp
pop
aad
adc
jmp
cmps
mov
push
push
add
pop
ins
in
xchg
popf
mov
retf
fcmovb
adc
mov
mov
pop
pop
aad
mov
push
fs
adc
sbb
push
mov
ror
ds
mov
ds
mov
inc
ins
cmp
aad
fsubr
lahf
shl
adc
mov
push
les
jno
xchg
(bad)
rcl
cmp
sub
sti
out
cs
mov
retf
lods
int
pop
mov
cmp
pop
adc
push
bound
ss
(bad)
and
fsubr
and
(bad)
int3
ss
scas
sbb
ds
popf
mov
inc
fist
imul
pop
jnp
call
mov
sar
das
sub
in
enter
xor
outs
sar
enter
clc
push
into
ret
inc
mov
mul
and
gs
sbb
mov
and
lds
int3
cmp
stos
das
int3
je
into
jge
pop
mov
pop
es
xchg
dec
ror
jecxz
xchg
inc
pop
sbb
sbb
test
shl
iret
cmps
leave
mov
or
ds
sar
jne
jecxz
mov
ret
mov
jno
outs
mov
call
in
movs
pop
push
push
add
mov
enter
aaa
hlt
dec
popf
xor
stc
jmp
cmovge
adc
in
jp
addr16
push
pop
dec
out
mov
je
out
int
sbb
mov
aam
aas
push
fist
bound
push
frstor
arpl
repz
arpl
mov
adc
test
add
dec
fsub
out
aaa
push
mov
es
loop
movs
jno
aam
loop
leave
jmp
stos
jmp
jmp
movs
cdq
stc
cmps
xchg
sar
jno
cmps
and
js
ror
in
sub
lods
jmp
sti
push
imul
mov
fbstp
(bad)
int
inc
sahf
outs
dec
ror
add
popf
test
push
xchg
dec
lods
inc
sbb
test
xchg
cmc
dec
mov
mov
cwde
test
mov
sub
xor
test
sub
aad
inc
out
(bad)
stos
or
scas
rol
mov
or
jne
stos
int3
fs
pop
push
mov
sub
pop
xchg
mov
inc
fistp
push
je
lahf
adc
cmp
inc
sbb
test
dec
fcomp
inc
movs
xchg
push
sbb
add
test
sbb
inc
xor
pop
mov
arpl
inc
scas
push
pop
ins
jp
call
and
fs
jp
test
cmp
and
retf
adc
pop
sbb
push
fnstsw
fisttp
push
repz
out
xor
fistp
pushf
dec
rol
in
mov
mov
jbe
push
mov
int
test
and
push
shl
inc
mov
test
jo
dec
cmp
adc
jns
mov
cmps
aam
sub
and
push
or
pop
inc
adc
jne
cmps
sub
mov
fwait
adc
xor
outs
cmp
xchg
add
cmc
dec
xchg
mov
dec
int
xlat
rcl
lods
inc
rcr
inc
outs
int
jne
stc
test
in
imul
stc
mov
add
cld
xchg
sbb
mov
mov
xchg
mov
mov
pop
cmc
dec
(bad)
xchg
mov
jbe
xor
xchg
push
jecxz
xchg
mov
or
sbb
ror
imul
add
cmp
sbb
cli
je
push
fldenv
cmps
xlat
mov
push
sbb
cmp
and
pop
cs
scas
movs
mov
add
mov
test
lock
aad
pusha
ss
jbe
adc
mov
adc
inc
out
cdq
mov
xchg
cmp
add
pop
jnp
push
outs
stos
pop
fmul
cwde
mov
xchg
aad
mov
shl
push
pop
xchg
xchg
pop
(bad)
or
mov
nop
cmp
(bad)
pop
cwde
push
and
mov
mov
adc
jns
ins
movs
(bad)
aas
rol
add
or
xor
or
sbb
pusha
mov
xor
sub
cmp
into
nop
repnz
inc
adc
cmp
push
bound
lock
push
push
sub
out
jno
int3
push
cli
jmp
sub
push
cmp
repnz
xchg
sbb
iret
adc
ret
stos
sar
icebp
or
cmps
mov
inc
push
shr
xor
(bad)
mov
jne
stc
adc
add
mov
adc
mov
enter
inc
repnz
sbb
mov
push
jg
pop
ret
pop
push
cmp
aad
adc
loope
sbb
fidivr
mov
sbb
fidiv
add
push
mov
push
ss
shl
outs
leave
inc
xchg
adc
adc
and
test
xchg
dec
es
nop
inc
jmp
cs
ss
jbe
lods
pushf
dec
push
mov
xor
push
jmp
in
clc
jno
(bad)
arpl
xor
shl
ret
and
cmp
pop
out
cmp
xor
movs
retf
hlt
jmp
ds
imul
and
clc
in
std
pop
xor
pop
mov
aas
mov
setb
dec
jb
sahf
sbb
ds
mov
jbe
push
xchg
stos
icebp
retf
xchg
or
xchg
stc
mov
in
push
mov
pop
push
shr
sbb
je
jmp
ins
pop
add
fsub
mov
inc
fistp
out
aam
or
add
lods
mov
xor
mov
test
pop
fs
adc
repnz
ins
ror
aad
(bad)
call
pop
sar
sub
les
ins
mov
inc
and
mov
test
test
pop
retf
loope
pop
mov
sub
mov
cmc
dec
(bad)
sub
adc
jnp
jae
inc
xchg
lods
push
cmp
pop
je
test
arpl
in
inc
test
ss
pusha
mov
dec
frstor
cmp
mov
ret
ror
shl
push
dec
sub
fcomp
hlt
inc
jmp
inc
or
fist
xor
fldlg2
sar
or
add
mov
ds
lds
mov
or
mov
imul
data16
daa
jle
rcr
test
inc
mov
les
xchg
sbb
les
repnz
out
int3
mov
es
stos
or
sub
add
fsubp
mov
adc
out
idiv
fwait
stc
dec
xchg
push
cmp
mov
jmp
pop
inc
adc
mov
mov
sub
jbe
les
mov
std
push
add
adc
retf
mov
stos
shl
dec
aam
mov
mov
stos
fisttp
xchg
mov
imul
leave
fdivr
adc
push
repz
ja
adc
and
mov
jne
fild
or
jecxz
xor
aaa
sub
mov
mov
add
shl
fld
(bad)
pusha
cmps
sbb
in
ds
push
aaa
xor
scas
push
fld
mov
leave
add
mov
or
sbb
ins
je
pop
xchg
pop
rdmsr
ss
lea
add
lds
int3
jp
js
xlat
xlat
xchg
jo
iret
xchg
sbb
or
sbb
mov
pop
ins
mov
call
mov
mov
shr
das
sar
lds
std
adc
je
ins
call
std
push
xchg
jmp
mov
mov
dec
call
pop
pusha
test
dec
mov
das
stos
fcomp
mov
pop
sahf
mov
xchg
jae
stos
add
outs
mov
imul
test
outs
stos
pop
add
shr
mov
cmps
leave
pop
mov
(bad)
stc
bound
sub
fstp
clc
mov
add
iret
jb
mov
or
push
popf
xchg
out
push
push
adc
popf
shl
aaa
dec
adc
dec
cld
mov
mov
pop
(bad)
bound
stos
mov
(bad)
out
mov
sbb
or
pop
cmp
adc
mov
test
push
dec
adc
mov
(bad)
test
outs
pop
mov
std
jnp
mov
movs
imul
xor
out
mov
xchg
inc
pop
cmp
fwait
xchg
sbb
pushf
adc
adc
ror
xchg
xchg
or
xchg
mov
mov
adc
lea
dec
vcvtdq2ps
dec
repnz
push
ds
(bad)
adc
(bad)
ins
and
ret
shl
and
out
nop
xor
sbb
(bad)
dec
mov
sbb
sub
sub
sub
test
in
sbb
xor
xchg
sbb
dec
rcr
add
cmps
lock
xor
mov
xor
test
mov
imul
gs
mov
push
jmp
pop
or
add
pop
push
ja
pop
loope
and
fistp
or
pop
test
mov
test
push
dec
push
pop
cmp
sahf
cdq
xchg
aam
sub
rcr
fs
inc
(bad)
test
mov
sub
test
pop
push
mov
int
and
popf
xchg
(bad)
sar
and
mov
dec
inc
aaa
inc
loopne
xchg
push
jo
push
sub
mov
fdiv
push
xor
fadd
jo
inc
xchg
dec
loope
stos
sbb
(bad)
and
(bad)
and
sub
mov
ret
je
popa
mov
sbb
lea
ficom
mov
add
cmp
jmp
mov
pop
adc
scas
test
fwait
call
ss
out
and
push
cmp
aaa
retf
jne
mov
cld
cmc
aam
dec
pop
dec
shl
scas
shr
aad
pop
pop
jle
mov
inc
outs
pop
cmps
jo
xlat
add
sti
and
sbb
fisttp
add
repz
loop
push
call
clc
xchg
and
shl
test
cmp
loopne
xor
out
mov
iret
add
xor
out
imul
(bad)
mov
jb
jo
push
pop
int3
add
and
mov
add
cmp
es
loope
data16
xchg
sbb
or
addr16
inc
dec
jo
imul
fsubp
loope
(bad)
std
push
adc
mov
rol
jno
cwde
mov
adc
imul
stc
adc
pop
fwait
out
pop
jle
js
add
jmp
mov
jmp
mov
sub
pop
je
adc
ftst
or
fldenv
mov
dec
test
xchg
fld
add
jb
pop
mov
clc
ins
dec
add
adc
mov
mov
jb
or
fcomp
sub
dec
adc
shl
pushf
sbb
loopne
mov
jmp
outs
movs
pop
imul
mov
loopne
repnz
cmps
cmp
loopne
ret
scas
jne
cmp
pop
aam
(bad)
add
cmp
cmp
out
xchg
ret
and
aad
(bad)
xchg
cs
es
xchg
in
push
ins
into
retf
movs
imul
add
(bad)
fsubrp
inc
imul
in
mov
jmp
es
ja
dec
add
imul
inc
xchg
sub
jne
mov
jmp
(bad)
je
mov
call
stos
and
push
outs
mov
xchg
outs
push
and
int
fimul
jae
fdivr
cmp
rcl
xor
not
push
push
jne
xchg
inc
fld
mov
push
fmulp
xor
push
pop
mov
mov
xor
adc
xchg
fisttp
enter
loope
fucomi
(bad)
aam
xor
les
inc
repz
and
jecxz
adc
cmp
ins
xor
jmp
sar
add
lahf
xchg
mov
movs
popa
jne
and
jle
lea
xchg
fisub
clc
mov
aad
mov
pushf
and
push
adc
jns
or
jo
or
sbb
pop
and
push
sbb
push
mov
mov
add
shl
pop
push
shr
xor
xchg
cld
stos
retf
add
mov
lock
loope
sub
lea
xor
imul
out
jb
mov
daa
mov
inc
sbb
(bad)
sbb
pop
adc
dec
aas
mov
std
adc
inc
mov
sar
shl
cli
cmps
or
pop
in
adc
sbb
inc
jmp
sub
ficom
loop
jns
test
push
pop
cmp
sbb
jmp
dec
mov
sbb
in
lods
pusha
mov
fsubr
jmp
sar
or
xor
push
dec
cmp
in
js
xchg
mov
pop
xlat
loop
dec
sti
xchg
jecxz
fimul
or
ja
dec
fdiv
push
loopne
jmp
sar
test
out
xchg
aad
xchg
xchg
inc
sbb
jbe
shl
pop
xor
call
in
mov
mov
out
pop
cmps
fs
inc
jbe
mov
inc
and
inc
daa
sbb
ror
call
sub
inc
enter
and
ss
ins
mov
mov
jns
cmps
mov
sbb
mov
mov
or
call
inc
push
jae
mov
aad
sbb
add
lds
inc
ror
xor
ins
mov
push
stos
sub
inc
sub
mov
out
mov
sbb
inc
sahf
xlat
add
add
xchg
repnz
sub
ins
inc
and
dec
cld
inc
mov
mov
in
mov
dec
das
aad
clc
pop
shl
arpl
push
pusha
fistp
jae
inc
loope
add
nop
cmp
js
and
jb
fsubp
jmp
inc
(bad)
mov
mov
mov
dec
cmp
(bad)
test
push
je
stos
pushf
inc
add
adc
or
add
mov
cmp
cmp
and
cmp
out
inc
jle
pop
into
sbb
aaa
cmps
inc
in
cld
inc
jno
inc
cmp
cs
imul
(bad)
(bad)
imul
xor
push
push
bound
sub
inc
mov
mov
daa
xchg
push
inc
iret
push
cmp
mov
cmp
xchg
cmps
sbb
fisubr
cmps
cmp
loop
pop
out
lahf
data16
mov
xlat
cdq
jmp
sbb
ror
mov
or
jmp
jmp
in
fs
push
retf
sbb
cmp
dec
mov
cmp
rcr
(bad)
jbe
jmp
sbb
push
cmp
or
xor
arpl
pop
add
int3
mov
retf
pop
xchg
cmps
test
sbb
adc
or
jg
sub
sub
pop
pop
mov
(bad)
stc
pop
push
fwait
sub
jo
aam
pop
push
xor
into
jmp
clc
and
fdiv
arpl
sbb
mov
(bad)
in
jne
push
xor
(bad)
jl
xchg
xor
jge
or
mov
or
das
xor
inc
sbb
dec
loope
call
jmp
pop
cmps
movs
pop
sbb
dec
mov
push
dec
dec
push
ja
and
add
pop
mov
sub
or
call
xor
mov
jl
or
adc
add
lods
cwde
ins
inc
and
adc
ds
test
pop
add
sub
xchg
ss
cdq
into
and
paddusb
fild
loop
(bad)
aad
(bad)
shr
sbb
mov
mov
rcr
jne
aas
movs
xchg
les
xor
dec
dec
mov
xchg
aam
push
call
and
loopne
push
mov
inc
sbb
mov
aam
pop
mov
in
xchg
dec
add
jmp
push
adc
je
and
mov
push
jbe
dec
sub
mov
cmp
pop
pop
mov
shr
ins
stc
dec
mov
xchg
dec
add
sbb
add
jo
cs
mov
add
out
pop
test
mov
jbe
out
inc
test
mov
int3
outs
dec
add
or
imul
xchg
fs
push
call
adc
(bad)
fwait
xchg
xchg
loopne
or
xchg
add
ins
retf
sbb
sub
ss
pop
out
popf
add
test
dec
xchg
sbb
or
fbld
mov
jnp
(bad)
aad
or
jge
imul
xor
mov
test
call
jno
fadd
push
jno
mov
int3
(bad)
iret
ds
les
fwait
popf
adc
call
addr16
out
in
pop
and
add
mov
add
mov
loop
mov
in
repz
popa
cmps
cs
push
retf
add
cmp
jb
mov
mov
rcl
retf
inc
ss
repnz
inc
push
or
jmp
adc
loope
int
jl
sub
lea
push
cmp
mov
popa
mov
xor
mov
pop
push
cmp
add
sub
int3
adc
int3
xchg
add
in
call
fnstenv
popf
mov
outs
js
cmp
outs
xchg
(bad)
out
and
sti
test
and
popf
jb
adc
mov
xor
inc
adc
xchg
add
or
add
fnstcw
add
sub
add
imul
nop
and
ret
or
inc
mov
sbb
stc
sub
lds
test
inc
jne
add
add
cs
jb
xor
add
leave
adc
xor
and
and
ins
adc
ds
in
mov
lea
test
imul
mov
push
outs
bound
dec
(bad)
mov
fsubp
daa
xchg
call
jno
mov
xor
and
pop
cmp
jbe
loope
jge
jmp
cmp
mov
cvtps2pi
outs
push
call
je
fld
bound
repnz
lods
cmp
into
out
and
dec
mov
stos
test
fstp
jne
add
aam
pusha
jbe
push
add
lahf
lods
ret
in
cmps
mov
jmp
and
add
fsub
sub
jmp
xor
push
adc
push
xor
mov
mov
fnsave
inc
call
test
pop
or
fs
shl
sahf
xchg
sbb
addr16
pop
fadd
int
mov
fsubr
mov
mov
mov
dec
xchg
int3
je
pop
or
retf
cs
aam
test
adc
aaa
pop
popa
(bad)
inc
dec
dec
xchg
jno
int
inc
inc
xchg
add
sbb
cmc
cmp
movs
(bad)
loope
jl
popf
push
push
add
mov
mov
(bad)
sbb
mov
mov
xchg
(bad)
cmp
fstp
call
(bad)
jmp
les
cs
loop
push
call
cwde
jmp
dec
cli
stos
cs
sbb
inc
icebp
and
sub
jb
pop
and
pushf
mov
ja
not
push
push
popa
sbb
sub
xor
in
cmps
jne
loope
dec
mov
inc
and
and
movs
arpl
inc
sub
xchg
mov
cmp
push
inc
ret
popa
sbb
shl
sub
je
movs
sbb
and
fidivr
cmp
pushf
fsub
pop
push
cmp
jmp
mov
adc
mov
bound
jbe
xor
pushf
inc
push
jne
mov
pop
loopne
js
pop
sbb
(bad)
mov
stc
xor
mov
data16
call
data16
pusha
jg
xchg
int3
xlat
jg
jle
dec
mov
add
stos
les
shl
addr16
jl
add
ss
mov
popf
add
mov
stos
imul
xchg
mov
stos
push
xchg
pop
ins
mov
pop
mov
dec
cli
dec
cs
xor
push
or
(bad)
fst
push
sahf
add
call
mov
add
out
fcomi
arpl
cmp
data16
xchg
dec
(bad)
mov
pop
add
out
jle
mov
call
stc
jmp
or
mov
loope
xchg
lods
arpl
outs
into
xchg
xchg
add
std
(bad)
lahf
or
cmp
xor
add
mov
cmp
sbb
mov
xchg
call
outs
aad
jns
or
je
ds
and
fstp
sbb
cmc
repnz
inc
es
ja
jl
inc
daa
push
jno
sbb
fstp
in
mov
mov
jae
pop
push
dec
in
dec
push
cmp
call
pop
mov
jmp
sbb
fwait
lods
mov
jmp
pop
push
mov
shr
std
adc
imul
imul
(bad)
data16
mov
adc
out
cmp
pusha
aam
mov
mov
sbb
xlat
mov
mov
ss
jo
bound
mov
outs
mov
push
call
and
dec
mov
mov
cmp
adc
daa
imul
aam
(bad)
sub
inc
inc
scas
xor
inc
adc
xchg
imul
shl
add
je
adc
sub
add
pop
sar
jbe
add
push
nop
or
fnstsw
fucompp
mov
repnz
loop
stc
inc
add
cmp
ror
mov
and
jbe
xchg
dec
arpl
mov
bound
(bad)
add
dec
(bad)
cli
add
adc
mov
sbb
mov
add
push
add
push
xchg
pushf
rcr
test
rcl
pop
shr
lock
retf
add
mov
inc
or
sahf
outs
ss
jp
ror
and
inc
inc
outs
add
push
loop
mov
out
mov
add
les
not
mov
xchg
xor
jmp
fwait
mov
push
cmps
retf
jne
test
jge
adc
cmp
sub
inc
pop
sub
cs
stos
inc
add
dec
inc
nop
mov
dec
cs
cmp
cmp
aam
adc
(bad)
mov
mov
mov
pusha
dec
fs
adc
push
fisub
es
mov
outs
inc
cmps
mov
cmp
xor
or
psrlq
ins
mov
xchg
cdq
out
pop
cwde
lods
jmp
shr
push
xor
nop
xchg
popa
mov
adc
sub
push
pop
push
lods
ud1
ss
fistp
aad
push
xchg
dec
sbb
movs
or
mov
adc
push
daa
je
mov
cs
test
or
and
push
sub
or
cs
fs
test
push
jbe
pop
je
nop
push
adc
push
push
sub
fwait
and
adc
outs
call
lods
jo
pcmpeqb
jne
sub
(bad)
mov
pusha
cmp
shl
sub
test
fcmovu
ins
push
ja
(bad)
fld
pop
ds
daa
out
(bad)
cmp
test
fadd
fsubr
test
popf
adc
and
add
lock
les
ret
arpl
push
mov
lea
test
mov
mov
cmps
mov
sbb
or
push
ror
in
cmp
jnp
mov
pop
loope
test
lds
or
pop
cld
daa
scas
and
leave
ret
mov
dec
or
inc
xor
push
pop
jecxz
shr
adc
call
xlat
push
clc
rol
enter
fwait
es
sbb
sbb
fcmovnb
hlt
pop
adc
lods
mov
jl
imul
(bad)
popf
cmp
jne
test
xchg
cmp
jp
dec
sahf
rcr
sbb
mov
fsub
and
ficom
and
mov
leave
adc
loope
icebp
cmp
out
stos
mov
jbe
cmp
test
cmp
rcr
push
jns
retf
rcl
ins
(bad)
sahf
xor
add
pop
adc
jnp
(bad)
mov
xchg
dec
and
(bad)
pop
xchg
pushf
pop
or
push
enter
pusha
into
pop
loope
shl
add
scas
adc
cmps
je
ficomp
shl
or
out
retf
mov
cmp
int3
mov
sub
or
(bad)
xchg
add
pop
pop
rol
sbb
mov
not
cdq
repnz
lea
test
mov
shl
data16
mov
sbb
sbb
test
dec
adc
in
repz
xlat
push
mov
lahf
or
(bad)
pop
dec
inc
and
out
stos
cdq
addr16
pop
inc
pushf
fbstp
test
jnp
jge
aas
inc
nop
aas
xor
(bad)
ins
cmp
push
cmp
pusha
or
or
jae
clc
ficomp
ss
icebp
data16
mov
jb
mov
call
and
cdq
push
aaa
in
or
cmps
mov
(bad)
push
mov
call
pop
shl
adc
lods
scas
or
mov
loope
outs
mov
aam
loop
jno
mov
mov
xchg
or
jg
add
dec
icebp
rcl
or
push
dec
(bad)
adc
int
sbb
stos
cwde
dec
int
loopne
iret
xchg
or
jno
lahf
aas
mov
ss
out
retf
pop
sbb
test
femms
scas
je
int3
jne
enter
inc
pop
inc
stos
cdq
jp
xchg
and
jae
sub
add
pop
xchg
fwait
xchg
lods
jmp
inc
pop
pop
add
xor
xor
mov
int
in
movs
jae
pusha
cmp
and
pop
push
sub
popa
jno
dec
inc
fnstenv
(bad)
jo
dec
mov
mov
sub
rol
mov
addr16
pop
test
jnp
xor
shl
ret
sub
xor
xor
sub
and
adc
sbb
mov
ins
outs
push
add
sbb
stos
and
xor
add
adc
sub
fcmove
lea
sub
retf
arpl
dec
jnp
push
add
mov
in
cwde
outs
out
inc
mov
test
adc
add
and
inc
sub
sysenter
sbb
add
adc
ss
fwait
cmp
call
jmp
call
loope
jns
test
stos
sbb
mov
jmp
inc
sub
and
cs
dec
jns
dec
pop
pop
ins
into
aam
mov
pop
pop
adc
or
in
ins
xchg
cli
test
mov
leave
mov
pop
lea
xor
cwde
nop
xor
xchg
dec
rcl
repnz
adc
aad
xor
pop
jne
push
inc
fnstcw
sub
call
stos
stos
call
or
fisubr
sar
lods
xchg
ins
scas
rcl
mov
or
ret
sbb
ins
cmps
or
sbb
aam
mov
mov
inc
icebp
mov
push
leave
pop
movs
add
inc
and
retf
stos
jle
inc
xor
daa
ins
shr
or
pusha
movs
or
mov
add
and
push
add
mov
mov
retf
mov
out
stos
xchg
aaa
dec
adc
ds
mov
adc
mov
repz
pop
out
leave
popa
bound
movs
adc
cmp
rcr
xchg
lods
dec
or
in
push
push
cmps
xor
scas
inc
daa
push
lods
addr16
sub
retf
arpl
mov
test
jge
inc
sti
lea
add
mov
sbb
fsubp
add
xchg
mov
(bad)
add
pop
jbe
nop
jl
jecxz
sub
dec
and
adc
pop
mov
or
mov
fbld
cvtps2pi
sbb
pop
test
(bad)
ins
aam
int3
jl
out
push
(bad)
das
mov
and
xchg
sar
pop
add
dec
ret
lds
fwait
jo
pop
mov
out
sub
sub
jae
ins
mov
mov
sbb
jmp
fsubp
inc
test
and
or
inc
mov
cdq
sbb
xchg
mov
xchg
add
adc
ja
push
pop
xchg
(bad)
std
push
sub
adc
repz
jb
leave
loop
cdq
lods
dec
mov
pop
pop
ror
jle
cmp
mov
jae
pop
dec
sbb
jg
fsubr
jnp
fsub
inc
aam
fcomp
jnp
lds
aam
dec
or
push
dec
dec
fwait
mov
imul
pusha
jnp
xchg
fisub
loope
pop
fbstp
push
xchg
inc
(bad)
lods
js
dec
shl
pop
or
sar
mov
dec
call
jnp
ja
ja
movs
push
pop
inc
in
pop
sbb
mov
idiv
and
cmp
sti
mov
aad
in
pushf
gs
xchg
lods
jae
lods
jns
fmul
push
sar
cmp
ret
fistp
shl
jecxz
jo
mov
mov
pop
mov
xchg
into
shr
mov
xchg
js
popa
mov
mov
mov
arpl
repz
sub
cmp
and
retf
fwait
test
mov
cmps
mov
jmp
mov
cmp
lock
aam
fs
jae
out
cmps
dec
rcl
lea
rol
push
or
fcom
xchg
imul
or
pop
dec
shl
mov
or
adc
pop
test
inc
push
popa
adc
ds
add
pop
pop
adc
sbb
adc
ret
jo
mov
cmp
jns
sbb
mov
push
inc
fisubr
push
cmps
cmp
sbb
dec
retf
or
or
and
push
pop
pop
push
ret
dec
addr16
repz
cs
xor
push
icebp
mov
push
pop
mov
dec
movs
imul
xlat
mov
cmp
xchg
pusha
xor
pop
mov
and
sbb
xchg
cmp
dec
sbb
xor
mov
in
imul
imul
cmp
dec
cs
arpl
js
pusha
rcr
(bad)
pop
aas
xor
or
cmp
cdq
push
dec
xchg
xchg
ja
ret
mov
cmp
jnp
xchg
(bad)
fnstenv
inc
in
sub
gs
loopne
cmps
loop
push
cld
push
aas
ficom
sbb
pop
push
dec
mov
retf
push
js
aaa
dec
dec
push
pop
sub
mov
xchg
lea
add
mov
les
or
mov
push
sbb
xchg
cmps
cwde
inc
jo
(bad)
ss
or
call
sub
test
jns
add
sahf
cli
jne
add
add
rcr
(bad)
aas
xchg
mov
stc
add
sbb
add
aaa
into
icebp
mov
mov
call
arpl
cli
sub
push
or
xchg
call
(bad)
xchg
cmp
cmp
lods
mov
cli
and
push
in
fadd
sub
ss
in
inc
xor
and
cmp
rol
loop
sbb
ja
mov
pop
sub
fnstsw
and
pop
nop
cmp
nop
dec
jmp
xchg
cmp
outs
leave
pop
out
jmp
cmps
daa
push
in
aaa
cmp
xchg
dec
jmp
in
pop
pusha
das
cmps
cmc
inc
add
jecxz
adc
(bad)
push
mov
dec
mov
push
(bad)
ror
mov
cmp
cli
and
mov
sub
ss
sbb
outs
jae
add
adc
das
ins
rcl
xor
cmp
push
fist
fild
popf
inc
sbb
fdivr
scas
loop
jl
xchg
pop
mov
lods
or
add
adc
fwait
pop
repz
into
sbb
sub
mov
dec
pop
jnp
mov
scas
add
pop
jmp
shr
cmp
and
cmp
outs
push
(bad)
int
test
xor
lods
mov
xchg
retf
pop
add
add
mov
shl
mov
nop
mov
mov
sub
imul
adc
loop
pop
ds
jbe
pop
lock
dec
loope
je
cs
pushf
(bad)
push
sub
daa
jb
movs
or
sub
ins
fsub
aad
arpl
mov
pop
xchg
fldenv
lods
ins
aam
mov
mov
jecxz
pusha
stos
cmp
or
or
push
sbb
ins
cs
nop
xor
mov
es
add
fcomp
xor
ins
or
movs
or
je
fadd
lea
push
push
inc
(bad)
pop
adc
xor
outs
mov
push
ss
mov
mov
int
inc
out
out
imul
xlat
push
push
fldenv
in
cmps
stos
inc
mov
scas
lea
mov
sub
wrmsr
aam
sub
retf
pusha
xor
adc
xchg
jecxz
popa
lds
pop
fs
jne
xor
test
fcmovnu
mov
stos
jmp
or
(bad)
jne
mov
dec
lahf
xor
dec
aam
xor
push
cli
mov
pop
add
sahf
mov
fadd
(bad)
push
js
mov
(bad)
pop
mov
and
into
sub
mov
sub
sub
movs
push
mov
das
inc
daa
sub
pop
mov
cld
mov
push
dec
pop
shl
pop
mov
add
sbb
in
push
dec
inc
imul
inc
call
in
enter
inc
pop
xchg
mov
mov
mov
xchg
inc
sbb
inc
in
push
cmp
dec
mov
stos
test
pop
jecxz
xor
out
jo
sub
and
not
mov
jbe
lods
or
sbb
mov
jne
adc
jae
lahf
sub
rol
dec
(bad)
jae
daa
push
loop
mov
lods
ss
ins
jne
inc
lea
call
fwait
push
mov
inc
icebp
dec
int3
push
push
dec
ja
xchg
add
fwait
and
cmp
xchg
xchg
pop
mov
scas
jle
mov
fisttp
push
retf
imul
mov
stos
sub
int
dec
mov
push
fs
xor
in
inc
or
dec
jbe
sbb
or
inc
mov
imul
int3
mov
retf
(bad)
pop
push
rcr
je
sbb
shl
dec
pop
(bad)
jp
(bad)
and
jnp
mov
in
jb
ins
inc
jo
lods
leave
xor
lds
icebp
rol
fld
push
imul
push
test
jae
arpl
jp
pop
xchg
xchg
arpl
rcr
(bad)
xchg
xor
mov
fisub
xor
lds
mov
sub
push
sub
sub
(bad)
cld
pop
sbb
push
pop
jno
ds
add
in
(bad)
arpl
xor
fcom
inc
inc
popa
add
mov
in
outs
jmp
xor
outs
stos
sub
cmps
sub
sar
aas
xor
dec
push
adc
mov
add
and
or
add
push
je
and
call
and
mov
mov
or
cmps
out
call
mov
mov
bound
sub
xchg
dec
inc
movs
ds
lock
push
aaa
fcom
in
push
add
sar
xchg
xor
popf
adc
xchg
mov
test
arpl
push
inc
mov
mov
shl
push
dec
das
movs
sahf
fist
cmc
push
pop
(bad)
aam
pop
stos
movs
sub
inc
inc
xor
push
push
add
mov
in
xchg
pop
xor
sbb
inc
in
pop
das
scas
mov
enter
je
cmp
push
pusha
push
adc
mov
push
xor
push
dec
push
inc
das
ret
ja
and
data16
dec
and
mov
sub
and
jns
xchg
sar
unpckhps
stos
adc
gs
and
lds
ins
nop
out
dec
sub
retf
aam
aad
(bad)
in
and
adc
dec
and
adc
fdivr
jmp
clc
jge
jb
dec
and
add
shr
dec
pop
cmps
(bad)
call
sub
and
and
out
xchg
test
les
mov
sub
push
pop
mov
dec
sub
stos
aaa
loop
dec
lock
pop
lock
xchg
push
inc
pinsrw
cli
movs
xchg
shl
test
cli
test
leave
not
mov
and
lds
repz
adc
push
mov
inc
(bad)
fldcw
add
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
(bad)
fild
inc
add
add
push
add
push
pop
pop
push
or
adc
or
or
adc
(bad)
adc
adc
sbb
adc
push
sbb
and
push
and
and
daa
sub
sub
pop
sub
and
fild
inc
add
pop
pop
or
or
or
adc
sbb
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
or
ret
add
and
add
add
adc
inc
add
add
add
add
add
add
les
dec
adc
add
add
add
add
add
add
add
add
xor
and
popa
jno
pop
adc
xchg
and
push
xchg
mov
bound
shl
push
xor
adc
ror
pop
and
mov
loop
les
sbb
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
adc
and
adc
add
inc
push
and
xor
add
add
adc
adc
aas
add
adc
xchg
lock
mov
dec
xlat
cmp
inc
mov
inc
loop
lods
sbb
stos
mov
adc
scas
cmp
neg
dec
mov
pop
mov
and
xor
dec
fcmovnu
stos
test
(bad)
jno
lea
fisubr
pop
(bad)
rcr
(bad)
adc
cmp
jno
shr
jb
sar
push
imul
sub
pop
in
out
jae
lods
jmp
cmps
lods
movs
mov
sub
xchg
jmp
lock
sub
js
mov
fsubrp
pop
fwait
jae
sti
gs
loop
mov
ins
cli
adc
mov
sub
mov
fwait
sbb
sbb
enter
jne
push
loope
or
ret
scas
push
jecxz
mov
cmp
xor
cmp
or
fcomp
jnp
pop
pushf
gs
push
pusha
mov
shl
pop
adc
icebp
pop
bound
push
gs
enter
or
cmp
push
cmps
aaa
jae
jne
in
sbb
les
fadd
mov
mov
repz
imul
jne
ret
xor
dec
icebp
aaa
dec
shl
mov
popa
ret
data16
pop
sub
pop
fstp
enter
fstp
and
sbb
sbb
xor
sub
inc
or
adc
pop
ret
xchg
aad
stos
lods
adc
in
sub
cmp
mov
mov
sbb
cmps
xor
call
inc
arpl
sbb
or
into
add
dec
adc
sar
sbb
or
push
and
xor
call
enter
shl
fstp
and
cmp
inc
dec
and
dec
cld
ret
jle
xchg
jbe
lods
jbe
push
jecxz
pop
ja
imul
add
mov
dec
jl
fisttp
mov
push
mov
shl
pop
cld
xchg
ds
clc
fsubr
xchg
mov
push
out
mov
sbb
cli
(bad)
aam
mov
imul
je
adc
or
pop
jecxz
cmc
xchg
mov
inc
retf
lahf
add
dec
stc
call
or
or
push
fisubr
sahf
dec
shl
sbb
jb
mov
mov
adc
mov
loope
loop
js
into
popa
jle
mov
int
pushf
adc
jmp
loope
(bad)
dec
cmp
(bad)
pop
je
sbb
nop
pop
xor
push
loope
daa
xchg
dec
shl
mov
fistp
jae
out
loopne
fmul
sar
xor
inc
gs
jae
popa
push
in
scas
adc
out
push
pop
inc
(bad)
fild
mov
mov
mov
xchg
mov
inc
sbb
jnp
and
test
je
sbb
fs
cmps
(bad)
mov
je
loope
and
test
(bad)
arpl
stc
jmp
jnp
lock
sbb
mov
or
mov
dec
push
adc
fidivr
imul
pop
leave
mov
dec
xor
cwde
push
out
scas
ins
out
arpl
mov
pusha
pop
cmps
jnp
aas
in
in
push
pusha
pop
jl
dec
stos
xchg
leave
popf
(bad)
mov
test
loope
leave
sub
sti
sub
and
xchg
mov
adc
push
retf
adc
(bad)
pop
dec
pop
xchg
aad
call
fisubr
ja
arpl
mov
lods
repnz
repnz
mov
jmp
imul
add
in
fwait
cmp
mov
mov
(bad)
mov
dec
pop
sub
cwde
mov
cs
int3
mov
jp
push
sub
dec
in
add
add
inc
(bad)
xchg
and
(bad)
cmovle
cwde
jo
stos
inc
xchg
lds
inc
or
pop
adc
jl
jge
mov
xchg
or
inc
jle
into
iret
loopne
loop
or
sub
js
add
mov
fbstp
and
out
movs
sbb
mov
sbb
popa
imul
pusha
mov
mov
int3
jae
mov
inc
mov
mov
sbb
rcr
test
arpl
or
js
mov
mov
push
sbb
js
shl
add
call
fbstp
out
push
dec
push
xlat
push
shl
sbb
fsub
outs
outs
mov
add
xor
and
mov
sub
push
cmp
in
or
jnp
cmp
adc
cmp
pop
jge
mov
adc
ins
pop
into
xor
ror
cmp
mov
sar
xlat
mov
jnp
scas
ret
pusha
push
call
xchg
and
pop
add
das
jb
icebp
inc
shr
je
pop
cmp
jns
pop
es
mov
icebp
aam
dec
in
lods
xchg
xor
(bad)
xchg
pushf
call
stos
adc
inc
xor
add
mov
fnstsw
(bad)
out
cmp
mov
pop
sbb
mov
shr
fisubr
cmps
xor
push
rol
and
or
hlt
pop
inc
cwde
fcomi
inc
leave
ss
std
xchg
repnz
mov
add
fbstp
fstp
and
jb
in
(bad)
xchg
pop
sbb
pop
repnz
dec
add
shr
jg
fwait
push
xchg
jmp
sub
and
arpl
and
pop
mov
mov
mov
das
mov
adc
mov
pop
pop
sub
shl
fwait
xchg
jecxz
imul
dec
mov
jae
loop
mov
loopne
(bad)
iret
and
fcmove
xor
xor
jno
ret
pop
xchg
lea
dec
and
push
cmp
(bad)
adc
add
add
ss
sbb
push
stos
es
xchg
shl
or
inc
mov
inc
xor
pop
pop
xchg
dec
jp
mov
add
add
fldcw
enter
cdq
push
repz
sub
or
xor
imul
xchg
adc
pushf
push
inc
and
push
adc
dec
out
mov
add
into
cmp
lds
arpl
push
pop
xchg
xchg
cmp
dec
inc
pop
cmp
daa
inc
adc
test
inc
(bad)
std
xchg
(bad)
in
mov
loope
add
sub
sub
mov
mov
mov
xor
mov
and
pop
sbb
in
inc
pop
inc
ins
scas
sbb
frstor
aad
movs
icebp
les
mov
loope
nop
xchg
mov
push
(bad)
out
cmc
jae
pop
add
push
lods
outs
inc
(bad)
hlt
into
or
ins
loopne
cmp
lods
and
ja
fbld
mov
adc
test
mov
jbe
push
add
adc
and
sbb
mov
mov
jl
inc
mov
loopne
dec
pop
mov
sbb
fwait
jmp
div
imul
jecxz
in
ror
aam
mov
dec
stos
jl
leave
cmp
mov
mov
pop
jmp
push
mov
jecxz
pop
imul
xor
pop
or
fidiv
or
xchg
sub
adc
mov
outs
push
push
imul
test
mov
xor
(bad)
sti
(bad)
dec
cwde
pop
xchg
dec
fadd
lods
mov
dec
fld
mov
jbe
adc
imul
jmp
push
fs
pusha
mov
aam
es
scas
daa
mov
in
add
mov
xchg
jnp
mov
push
push
and
fdiv
sbb
pop
frstor
aam
pusha
inc
rol
(bad)
xlat
push
sbb
add
jno
or
sbb
inc
jno
mov
jbe
sub
and
test
test
lea
mov
icebp
push
loop
jno
sub
cmp
jne
ficomp
pop
mov
inc
pop
jb
(bad)
retf
or
mov
dec
loope
mov
pop
fwait
adc
push
xor
test
iret
xor
popa
mov
test
inc
lock
sti
xor
cmps
add
outs
(bad)
retf
mov
mov
sub
push
push
xor
xlat
gs
dec
jmp
mov
ins
xor
and
add
sbb
dec
mov
jo
inc
loope
or
loope
mov
jae
leave
or
sub
test
rcl
bound
shl
mov
dec
stos
lods
jp
ja
mov
mov
shr
sub
mov
jecxz
leave
xchg
jg
test
mov
outs
xor
(bad)
jg
adc
es
mov
or
xchg
(bad)
jmp
cmp
js
jo
out
cmps
cmps
(bad)
mov
fs
(bad)
popa
int
adc
mov
mov
push
inc
cmp
int
pop
adc
mov
nop
pop
movs
stos
repnz
mov
popa
repnz
sub
loop
mov
xor
les
scas
inc
aam
loop
sub
xchg
ja
dec
lea
(bad)
arpl
mov
jno
pop
(bad)
or
or
mov
div
call
sub
push
les
xor
ror
and
mov
fistp
ror
sub
adc
add
jae
outs
xchg
mov
ins
jo
push
(bad)
xchg
loopne
cdq
dec
jnp
mov
push
outs
sbb
pop
push
or
jle
rcr
jo
movs
pushf
stc
inc
mov
adc
push
retf
pop
mov
or
std
push
fnstenv
push
xor
cmp
aad
fdivr
add
xchg
js
xor
mov
in
pop
push
jecxz
into
push
ins
inc
std
mov
push
cmp
push
out
lods
add
call
(bad)
(bad)
inc
xorps
cmp
inc
lds
xor
xor
stc
gs
bnd
cmp
xor
retf
in
push
mov
imul
fsub
test
add
cmp
mov
or
push
dec
and
jno
loop
int3
dec
ds
inc
(bad)
in
cld
and
mov
inc
cmps
data16
pop
arpl
push
psraw
pop
jge
frstor
jecxz
ds
add
scas
ja
(bad)
sub
(bad)
aad
mov
movs
xlat
fmulp
xor
int3
mov
loop
sbb
ret
jns
setno
cmp
inc
pop
jbe
mov
inc
data16
xchg
xchg
add
and
xchg
adc
dec
shl
dec
xchg
sbb
push
jmp
ins
jle
and
iret
outs
cwde
push
test
mov
push
add
adc
retf
dec
sub
rol
ja
loopne
push
mov
jecxz
popa
jg
add
xchg
ret
push
xor
push
je
and
rcr
sbb
adc
push
movs
xchg
jmp
in
push
fld
jns
aas
xor
mov
ins
lds
gs
cmp
pop
rcl
(bad)
icebp
rol
retf
call
retf
imul
rcl
inc
test
xchg
adc
and
or
push
outs
loopne
aam
repz
mov
inc
call
xchg
jnp
pop
push
pushf
jmp
sub
dec
repz
and
pop
xor
xchg
sbb
sub
push
push
in
lods
adc
cmp
mov
or
mov
aad
sub
(bad)
jecxz
pop
ret
fnstcw
push
ins
mov
pop
sub
pop
call
xor
push
xor
pop
push
inc
sub
scas
popa
mov
test
mov
imul
sub
repz
movs
xchg
int3
(bad)
cmp
jne
mov
sub
bound
xor
lods
les
jmp
jecxz
jl
movs
push
add
push
jecxz
jnp
xchg
pop
xchg
(bad)
icebp
enter
cmps
fldl2e
push
dec
out
or
xor
je
cmps
add
jmp
fisttp
popa
mov
pop
mov
push
daa
dec
mov
icebp
pop
inc
int
sub
xor
js
ret
loope
mov
jnp
lds
sbb
adc
neg
cmp
push
shl
stos
xor
gs
sahf
fcmovnu
jae
xor
dec
stc
mov
aaa
or
sub
inc
arpl
cmp
cmps
jl
out
lods
mov
jecxz
fdiv
pop
cs
adc
and
cmp
pop
call
adc
sub
and
das
stos
fwait
and
fldcw
inc
les
stos
jl
or
(bad)
sbb
pop
aam
sub
cmp
jae
test
mov
enterw
pinsrw
pop
jl
sub
sub
xchg
xchg
jge
arpl
pop
jnp
jbe
inc
push
sub
mov
loop
test
dec
or
or
cmp
cmps
xchg
mov
and
adc
aaa
add
ret
call
mov
arpl
data16
(bad)
outs
and
jbe
inc
stos
pop
es
sbb
fs
sub
addr16
xor
test
repnz
lods
ret
out
sub
stos
push
adc
shr
cwde
xchg
(bad)
pusha
fwait
sbb
and
daa
xchg
push
aad
aad
fmulp
dec
dec
xchg
mov
fwait
test
or
fadd
imul
dec
js
cmps
cmps
inc
mov
mov
ds
jbe
mov
or
or
xchg
scas
ss
mov
aam
mov
mov
cld
jne
inc
add
jnp
or
retf
jnp
loop
(bad)
mov
dec
in
and
jmp
rcl
loop
lods
aaa
arpl
inc
lods
stos
retf
or
sub
ins
pop
add
arpl
mov
scas
arpl
cmp
js
(bad)
pop
sbb
mov
cmp
es
pop
or
push
retf
fs
sbb
push
ins
dec
push
and
jbe
mov
int3
loope
loop
imul
ret
mov
out
pushf
fs
mov
aas
jns
pusha
out
dec
push
or
jb
sbb
mov
pop
nop
out
into
stos
stos
stos
sbb
pop
sbb
fnstenv
push
ins
xchg
xchg
repz
pop
lds
sub
adc
xchg
jnp
sbb
cmp
loop
pop
scas
pop
xor
jbe
add
arpl
rol
dec
sbb
xor
adc
pop
call
movs
outs
(bad)
aad
fsubp
xchg
rol
dec
xchg
dec
add
sub
fsubr
shl
push
pushf
cmp
sbb
dec
sahf
jle
ja
jg
fcmovu
(bad)
jmp
push
push
pop
adc
or
call
jno
sahf
jmp
loopne
ror
jno
sahf
or
cmp
ja
jnp
or
xchg
xchg
xchg
sub
test
data16
imul
sub
ja
and
fucom
mov
inc
scas
rcl
call
fisttp
fxch
cmps
pop
fld
xor
xor
mov
or
sahf
add
ja
cmc
sub
pop
sub
sbb
scas
or
jae
push
mov
jnp
xchg
push
add
pop
cmp
sbb
sbb
stos
adc
in
stos
je
jno
sahf
add
out
xor
xchg
das
outs
jno
cld
sub
aaa
in
je
shr
and
fld
mov
or
jno
push
mov
cwde
data16
ins
push
push
xor
dec
cmps
les
aad
push
dec
mov
cmp
add
(bad)
out
and
pop
popf
lods
inc
xlat
jno
mov
xor
into
out
fldenv
mov
sub
test
mov
sbb
popf
ftst
cmp
ins
(bad)
in
cmp
mov
pusha
js
lds
sti
aas
xor
test
fadd
mov
retf
fistp
movs
in
and
push
in
add
inc
sbb
or
inc
jp
pop
xlat
cmc
inc
dec
aam
sbb
push
retf
sub
xchg
fimul
xlat
mov
inc
movs
jo
sub
fild
je
test
and
popf
leave
fs
xor
lods
mov
sub
lods
je
cmp
pop
stos
aas
loop
jg
add
retf
push
mov
mov
jle
adc
hlt
dec
xchg
hlt
push
pop
dec
push
fmul
mov
xor
scas
and
ins
and
call
add
mov
lods
pushf
ja
sub
mov
in
sub
popa
mov
fstp
shl
cwde
sub
sub
add
and
pop
xor
shl
pop
mov
aaa
xchg
es
sar
ficomp
jnp
fwait
adc
aam
stos
mov
ins
sub
out
mov
dec
imul
in
mov
call
popa
(bad)
xlat
pop
adc
stos
mov
je
daa
stos
lods
stc
fnstcw
lock
nop
test
ins
mov
test
sub
mov
icebp
test
and
jnp
push
xchg
push
xchg
shl
test
cmp
stc
adc
xchg
jnp
test
mov
ja
stos
push
pop
xor
es
jae
stc
jmp
cs
pop
in
xor
gs
push
fidiv
mov
mov
push
sbb
cmp
or
fnstcw
sbb
jl
and
push
sub
fld
leave
cmp
dec
sub
mov
sbb
hlt
mov
and
div
aad
push
int
xor
int3
daa
cmps
jo
mov
rcl
mov
mov
(bad)
and
les
jle
sub
inc
fld
bound
jge
cmps
ja
jmp
sub
xor
js
mov
(bad)
sbb
or
imul
mov
lock
ins
out
stc
mov
in
scas
mov
inc
mov
ins
xchg
out
sbb
pop
aas
jp
out
cmc
sbb
aaa
test
pop
jne
jnp
mov
push
push
sbb
popa
jge
hlt
sbb
dec
push
enter
jae
push
imul
xor
sub
imul
jmp
pop
push
aam
inc
or
pop
ja
push
popf
sub
jnp
mov
or
sahf
sbb
in
imul
mov
inc
fsub
shl
sub
inc
scas
dec
jge
sub
or
lods
adc
inc
out
scas
mov
out
mov
mov
loopne
pop
cmp
push
xchg
ds
cli
mov
xchg
pushf
mov
sub
adc
stos
test
pop
stos
rcr
mov
sbb
fnsave
sbb
jno
pop
or
mov
mov
iret
stos
clc
mov
sbb
sbb
lods
lods
test
xor
rcl
retf
retf
push
mov
movs
xchg
or
das
aas
sub
jmp
pop
mov
pop
sar
add
fst
push
(bad)
mov
je
(bad)
in
pop
rcr
xchg
fstp
fldenv
mov
lds
int3
pop
fld
mov
lods
adc
(bad)
xlat
call
jnp
nop
xchg
dec
push
jmp
fimul
jno
fisub
fcmovnbe
out
(bad)
icebp
adc
mov
lods
sub
xor
cdq
dec
cs
adc
push
xor
mov
scas
ja
mov
call
dec
push
shl
add
mov
ficom
jle
ror
pop
cmps
ficom
mov
push
mov
mov
data16
test
sub
cmp
push
mov
hlt
sub
xchg
(bad)
shl
cmp
pop
jne
jge
daa
mov
bound
inc
mov
icebp
aam
out
int3
sub
or
sbb
xor
clc
fsubr
sbb
jl
in
dec
adc
std
mov
in
test
sbb
xor
mov
jl
or
out
test
mov
pop
mov
ds
push
(bad)
xchg
das
mov
enter
mov
inc
pop
sub
cmps
neg
imul
ret
mov
icebp
pcmpeqd
push
movs
or
sbb
dec
jl
test
call
mov
mov
jge
pop
inc
dec
std
pop
or
mov
icebp
aad
sbb
in
push
mov
add
and
inc
xchg
clc
sub
scas
mov
push
mov
mov
push
mov
es
push
cld
ret
js
int3
sahf
nop
jns
mov
jnp
adc
xchg
ret
jg
push
stos
out
cmp
test
sti
xor
repnz
fisttp
in
xor
int3
das
fnsave
out
sub
dec
inc
and
dec
out
outs
js
mov
in
push
inc
dec
push
xchg
or
into
sbb
and
test
movs
and
mov
jecxz
and
outs
retf
push
das
stos
xor
sub
in
fistp
pop
retf
xchg
cmp
in
dec
adc
push
repnz
push
sbb
int
and
cmp
dec
or
jne
jecxz
stos
sub
pop
xchg
inc
neg
add
in
mov
push
push
test
pop
ins
adc
push
mov
lods
xchg
mov
ror
pusha
(bad)
test
popf
sub
mov
sbb
sbb
jmp
cmp
pop
sahf
shl
cmp
loope
mov
(bad)
loop
sub
pop
sbb
xor
and
push
sar
in
mov
mov
jmp
push
push
push
mov
pop
mov
cmp
aaa
or
sbb
pop
ins
shl
sub
xor
mov
add
pop
scas
mov
pop
sub
or
mov
mov
and
cmp
cs
enter
pop
mov
out
imul
push
test
aam
std
retf
dec
cmp
stos
js
(bad)
push
test
dec
icebp
(bad)
sbb
sub
pop
cmp
in
stc
xchg
pop
dec
leave
mov
sbb
push
in
(bad)
call
xchg
stos
cmps
ja
mov
push
cmps
movs
fstp
sub
pop
or
inc
adc
repnz
mov
or
pusha
imul
xchg
jmp
rcl
in
inc
xchg
xchg
js
in
inc
mov
sahf
movs
sub
pop
(bad)
leave
xchg
sets
dec
retf
wrmsr
movs
mov
inc
sbb
inc
int
sbb
sub
sub
fcom
and
out
sbb
push
pop
imul
and
xor
inc
movs
sub
mov
push
or
xchg
jne
mov
mov
aad
pop
jne
fnstcw
add
dec
and
movs
xor
or
add
and
std
test
movs
test
fisttp
mov
movs
aas
pop
add
push
lods
and
jno
mov
pusha
hlt
mov
mov
out
hlt
js
pop
je
int3
mov
icebp
arpl
add
sbb
add
jmp
inc
mov
popf
cmp
cmp
dec
mov
adc
rol
push
xor
push
and
repz
jle
jb
ins
sub
stos
cmp
push
test
scas
jb
not
iret
out
pop
push
je
dec
fidivr
out
mov
cmc
aaa
xchg
add
arpl
mov
cmp
dec
sbb
pop
sub
dec
adc
test
(bad)
sub
sub
adc
mov
and
mov
out
add
push
pusha
test
add
mov
leave
pop
int3
xchg
cmp
jmp
or
lock
and
sub
div
sub
mov
retf
or
mov
test
xor
outs
loopne
test
fild
cli
push
inc
add
add
or
or
jae
jne
or
xchg
sbb
dec
mov
fld
xchg
jecxz
push
sub
jmp
jp
sbb
cmps
sub
sub
inc
mov
ds
test
test
(bad)
loope
jnp
xor
pop
addr16
mov
lods
js
cmp
daa
jne
and
in
and
push
fisttp
mov
jge
je
inc
(bad)
jmp
dec
cmps
or
push
(bad)
test
jmp
shl
hlt
lods
sub
ss
ja
sub
adc
daa
add
fst
dec
sbb
sahf
mov
lds
(bad)
loope
pop
pop
inc
xchg
rcl
ss
nop
add
test
sub
stos
(bad)
fwait
sbb
xchg
loop
mov
pop
and
pop
fisub
mov
cld
rcl
lods
push
outs
cmp
ror
cs
lock
out
xor
(bad)
pop
push
and
xchg
cmp
push
push
mov
jne
jb
pop
push
push
adc
add
xchg
jp
cmps
xchg
mov
enter
mov
retf
imul
mov
addr16
in
fist
fs
adc
out
fwait
scas
bound
push
inc
push
sti
mov
adc
jge
xchg
cmp
outs
mov
ins
jecxz
jp
jmp
test
(bad)
mov
fisubr
lods
jge
sub
mov
sti
adc
pop
xor
pop
add
adc
pop
push
sbb
xchg
adc
pop
xchg
xchg
push
dec
gs
das
dec
mov
stos
push
cmp
aaa
pop
push
mov
test
push
dec
xchg
push
mov
mov
fwait
push
adc
not
push
and
daa
ins
mov
or
setge
in
add
fld
test
pop
push
dec
cdq
add
out
or
cwde
sub
stos
mov
fs
and
mov
add
pop
ror
dec
push
ror
bound
lahf
or
scas
or
data16
popf
and
in
repz
(bad)
sbb
jmp
call
out
scas
mov
cmp
jmp
cmp
dec
xchg
les
jne
xchg
pop
jo
inc
int
es
jecxz
pop
xor
cmps
mov
stc
mov
xor
sahf
mov
fst
movs
stos
xchg
(bad)
fwait
dec
cli
ins
icebp
(bad)
out
repz
push
xchg
dec
outs
call
mov
sub
(bad)
jmp
xor
inc
mov
or
addr16
retf
jns
cmp
mov
fsubr
sub
enter
mov
das
or
add
mov
xor
and
iret
std
scas
push
outs
icebp
fsubr
sbb
push
pop
retf
mov
js
push
fidivr
(bad)
and
mov
popf
xchg
stc
inc
mov
push
fisub
push
jns
ret
scas
pop
in
mov
sbb
inc
cmp
rol
cmp
cmp
sub
ss
stos
leave
sub
jmp
jne
gs
push
and
mov
rol
push
aam
push
imul
cmps
addr16
add
adc
cmp
or
and
jne
push
bound
cdq
out
add
push
xchg
xchg
xchg
pop
pushaw
imul
das
and
xchg
xlat
push
test
add
sub
fadd
call
push
mov
ret
push
pop
mov
xchg
push
pop
int
shl
push
inc
rcr
lods
adc
mov
aad
mov
shl
xor
and
sub
sar
xchg
add
sbb
shr
mov
or
mov
fwait
sub
jne
adc
inc
out
xor
shl
fld
mov
mov
xchg
push
movs
push
das
cmps
jae
pop
jge
push
aam
and
sub
xor
xor
call
adc
jbe
mov
rol
jae
pop
loopne
sbb
mov
test
into
xlat
jns
sub
das
ja
push
lods
daa
or
inc
mov
shl
push
push
jmp
fst
faddp
mov
pop
xchg
cmp
cmp
cs
or
ror
sub
mov
fcomp
pop
dec
and
pop
sub
scas
js
bound
jecxz
push
push
data16
add
sar
aaa
mov
sub
ja
and
loope
fwait
aas
mov
push
imul
cmps
call
mov
call
fs
clc
inc
push
test
scas
cmps
xchg
or
inc
out
popf
or
imul
test
push
clc
mov
hlt
dec
adc
ins
lods
xor
jo
sahf
inc
jp
pusha
xchg
fwait
lods
lods
and
mov
xor
jmp
jg
jae
sbb
sbb
adc
and
dec
and
scas
mov
nop
xor
scas
lock
sbb
enter
mov
aaa
nop
sub
jmp
mov
pop
daa
mov
les
mov
xor
jo
popf
les
(bad)
xor
push
mov
cmps
scas
stos
test
dec
pop
(bad)
lahf
ror
les
ret
pop
and
cmc
inc
jae
push
sahf
(bad)
stos
mov
xlat
loop
movs
sbb
in
push
stos
ins
dec
(bad)
aad
out
retf
xchg
scas
pop
adc
rcr
repz
test
ss
and
lds
pop
sub
pop
push
stos
mov
pop
push
out
mov
push
aad
adc
push
(bad)
xchg
mov
sbb
jmp
inc
pop
push
dec
shl
in
aaa
jns
cmp
(bad)
out
push
and
std
lea
adc
pop
es
sbb
lock
movs
push
fbld
sbb
jp
xchg
call
mov
repnz
sub
pusha
(bad)
loope
pop
fimul
ret
cmps
or
fdivr
jno
js
add
cmps
cmps
push
shl
xor
test
ror
add
and
stos
outs
out
pop
mov
adc
lods
outs
(bad)
dec
cwde
scas
lods
sbb
inc
sbb
sbb
add
ss
adc
sub
mov
cs
sbb
aas
imul
out
inc
ins
pop
movs
jnp
mov
lock
sub
cmp
push
imul
cmps
daa
jmp
popf
cmc
nop
cmp
nop
sub
in
add
mov
or
sbb
push
adc
ret
out
sbb
sub
adc
mov
fisub
es
test
sub
add
push
push
dec
or
push
ficomp
or
sbb
gs
cmp
mov
iret
lock
cmp
inc
and
mov
(bad)
out
lahf
or
loopne
adc
fs
and
pop
or
fiadd
scas
daa
lea
lds
mov
std
push
sbb
lods
cmps
mov
fnstenv
xor
pop
xor
adc
add
in
jge
ss
cmp
cdq
push
pop
mov
pop
fsubrp
fstp
dec
rol
cwde
pop
daa
repnz
rol
stos
push
fucomp
dec
xor
gs
sbb
push
push
fucomp
es
js
adc
(bad)
out
fcmovnb
cli
jp
and
push
loop
fcmovu
enter
adc
in
fs
aam
or
add
lods
mov
sbb
jno
sub
out
pop
outs
push
pop
test
mov
pop
push
outs
int
out
clc
sub
loop
imul
pop
pop
out
loop
jo
out
out
sbb
cmc
pop
in
call
fs
inc
ret
cmp
sbb
clc
outs
fcomp
or
fisubr
stc
dec
mov
in
fwait
test
adc
repz
movs
cmc
stc
cmps
sub
mov
mov
mov
(bad)
push
pop
(bad)
sbb
dec
mov
loope
jle
pusha
lea
and
xchg
stos
pop
loopne
mov
mov
dec
mov
cmp
leave
and
inc
xchg
xchg
xchg
pop
lea
(bad)
push
in
mov
test
adc
ss
sub
repnz
aaa
icebp
jbe
movs
mov
dec
and
test
pop
cs
pusha
xchg
jae
add
dec
aaa
or
add
cwd
(bad)
mov
inc
or
sub
stos
cdq
shl
mov
sbb
shr
arpl
test
xor
sbb
mov
dec
loopne
or
int3
inc
leave
lock
inc
fwait
xor
loopne
or
cmp
sub
mov
inc
xchg
mov
mov
sbb
push
fwait
pop
jne
push
and
ja
mov
xchg
imul
in
cmp
data16
js
aas
xchg
pop
push
push
xor
cmc
xchg
imul
mov
icebp
or
aad
fcomp
and
lds
cmp
fcomp
adc
sub
add
test
sti
mov
pop
neg
mov
or
shr
popa
jb
xor
adc
int
mov
sub
xchg
jmp
sbb
ins
pop
out
sub
and
(bad)
bound
ins
scas
push
jmp
(bad)
dec
ror
clc
push
into
mov
mov
dec
out
and
jp
mov
popf
into
adc
add
jne
xchg
jne
cmps
fs
das
push
jno
das
aad
xchg
je
or
inc
out
or
icebp
inc
jl
dec
ja
and
add
mov
arpl
loop
cmp
jmp
jl
or
xchg
cli
fstp
mov
push
sub
mov
inc
mov
fst
retf
sahf
pop
push
stos
xor
bound
in
adc
mov
inc
mov
pop
lea
inc
cwde
adc
adc
ins
adc
push
pop
rcl
arpl
cmp
out
call
and
xor
push
int3
add
out
dec
test
repnz
es
retf
push
mov
loope
add
push
in
es
je
mul
lods
in
push
clc
mov
out
ins
in
pop
and
int
sbb
pop
in
icebp
rol
scas
and
out
jbe
jl
out
outs
or
fstp
or
fist
cld
gs
(bad)
aad
dec
and
or
add
sbb
stc
(bad)
cmps
xor
fcmovnbe
xor
fadd
dec
mov
inc
xor
jp
xor
sahf
dec
push
mov
jl
push
lahf
jne
jno
xor
retf
fmul
pop
(bad)
cmp
mov
mov
mov
xchg
push
cmps
inc
adc
jnp
lea
push
sbb
test
icebp
pop
imul
clc
inc
das
push
stos
mov
mov
fist
int
xchg
scas
sbb
sbb
(bad)
add
add
sbb
in
stos
inc
sub
mov
es
mov
movs
push
push
fist
mov
xchg
loop
cmp
pop
leave
sub
jo
(bad)
test
cmp
sbb
inc
and
fsub
and
fcmovne
xor
pop
and
cdq
sub
mov
pop
adc
fidiv
xchg
loope
push
add
push
xchg
movs
push
test
and
cwde
js
sbb
add
push
xchg
mov
jno
(bad)
push
imul
mov
imul
cmp
push
xchg
inc
mov
or
sub
mov
sbb
jle
mov
sub
pop
lods
mov
dec
xchg
hlt
cmps
cmps
ss
loop
mov
js
adc
sub
stos
fsubr
and
xchg
les
loopne
in
stos
test
popa
xchg
sbb
fld
stos
xchg
push
scas
(bad)
and
ss
stos
mov
xchg
mov
adc
rcr
scas
cmp
add
jno
push
push
std
pop
inc
imul
(bad)
jo
and
and
dec
mov
mov
mov
test
jo
and
sbb
cmp
inc
loop
ss
xlat
call
xor
add
int
xchg
ins
int
(bad)
dec
or
xchg
data16
xchg
mov
pop
push
movs
push
nop
cmp
mov
shl
inc
dec
sbb
inc
sbb
rcl
lods
sub
dec
mov
sub
sub
xor
xchg
add
data16
retf
push
ficom
mov
std
lahf
dec
sub
sbb
pop
inc
repz
push
push
add
lea
inc
dec
adc
mov
ja
add
pop
aaa
in
jno
sub
stos
fild
out
fidivr
and
pop
dec
mov
sub
lock
loope
scas
pop
lds
test
dec
rcr
retf
jmp
(bad)
icebp
dec
das
sbb
pushf
push
outs
or
hlt
out
daa
jbe
clc
cmc
push
cld
ret
cmp
mov
jl
int
out
call
pop
add
repnz
out
push
pop
push
mov
xor
js
mov
lods
aad
mov
leave
sub
dec
loopne
pop
xor
xor
nop
dec
sbb
pop
mov
cli
pop
pop
sahf
mov
pop
das
in
jp
dec
dec
sbb
sbb
bnd
inc
sbb
js
lahf
ret
shl
xchg
pop
test
mov
loopne
adc
in
je
cmp
push
sar
sbb
adc
adc
inc
stos
addr16
(bad)
mov
ret
stos
call
ins
sbb
mov
scas
xor
shl
sub
push
das
add
xchg
retf
lods
ret
stos
sub
shl
fdiv
in
push
mov
add
xor
mov
push
mov
fistp
daa
adc
xchg
mov
pop
inc
add
leave
jae
add
daa
sub
xchg
iret
les
popf
cdq
in
cmp
adc
mov
push
movs
adc
sbb
inc
ins
jl
push
ret
pop
and
je
loop
gs
pop
pushf
adc
sub
inc
pop
js
jp
stos
ins
cli
add
fldcw
mov
imul
nop
push
or
sub
mov
cmp
ss
dec
cmp
mov
sub
push
inc
xlat
in
das
loopne
into
inc
scas
inc
add
jmp
nop
or
adc
xchg
mov
mov
jno
push
test
xchg
jmp
sbb
push
into
in
xor
movs
ins
je
inc
push
cmp
jno
add
cmps
mov
sbb
movups
jae
or
dec
in
dec
jb
jns
popfw
inc
push
stc
pop
jg
jmp
add
and
pusha
jnp
cs
inc
ja
icebp
lock
cmps
cli
cmp
dec
jne
and
add
sub
mov
or
loope
add
fwait
jno
or
pop
shl
outs
in
stc
aad
mov
imul
das
add
dec
cs
mov
dec
aad
sti
mov
daa
cmps
lods
xor
clc
data16
mov
stos
push
stos
push
push
mov
mov
dec
loope
test
dec
leave
in
or
dec
sub
dec
in
in
push
sbb
add
adc
push
sub
ds
in
xor
lods
aam
sub
fcomp
lods
je
sub
shl
sub
jae
(bad)
pop
jb
mov
cmp
mov
shr
sub
xor
gs
scas
cwde
cmps
dec
add
mov
loope
xchg
push
mov
adc
popf
ret
sub
jo
add
sub
push
xchg
scas
add
pushf
lds
dec
xor
xchg
push
add
add
push
in
aaa
pop
dec
sub
movs
adc
inc
cwde
in
cdq
cmps
push
shl
jae
mov
sahf
leave
pop
add
aaa
push
xchg
mov
or
mov
adc
and
or
cwde
in
dec
or
aam
xchg
xchg
mov
mov
xchg
(bad)
push
stos
stos
shr
outs
pop
inc
mov
add
stos
daa
sub
mov
xor
jg
lds
inc
sbb
dec
lea
xchg
mov
bnd
mov
xor
call
movs
xchg
popf
rcl
add
or
adc
pop
push
test
mov
aas
adc
aad
dec
fldenv
and
popf
out
cmp
xchg
(bad)
popa
inc
sbb
push
je
or
ficomp
xor
scas
popf
cmc
jae
(bad)
fwait
clc
xchg
in
pop
pop
mov
popa
scas
pop
adc
inc
in
push
cmp
cmp
pop
or
retf
gs
mov
les
cmp
mov
xchg
mov
and
sbb
out
dec
xchg
arpl
xlat
pop
xchg
repnz
fisttp
ins
mov
adc
fadd
xlat
push
mov
out
test
cdq
stc
pop
add
mov
cs
push
imul
mov
cmp
mov
cmp
and
mov
test
sbb
imul
shl
fldenv
retf
dec
in
mov
aaa
enter
mov
pusha
mov
pop
xchg
daa
adc
fadd
scas
jle
retf
dec
push
fadd
cmp
stos
enter
adc
and
adc
(bad)
add
cs
and
dec
mov
push
mov
mov
mov
jbe
mov
jno
stc
punpcklwd
(bad)
out
cmp
cmps
ret
adc
xor
add
gs
repz
leave
rcl
adc
call
into
mov
aam
push
adc
jl
std
xchg
cmp
cwde
fwait
arpl
and
inc
retf
ret
or
pop
inc
out
mov
les
test
shr
jge
cmps
mov
test
in
loopne
js
cmp
fxch
inc
and
aas
push
test
add
push
test
xor
xor
mov
retf
pop
jne
das
and
leave
neg
mov
movs
jmp
add
dec
pushf
push
push
vgetmantss
test
xor
icebp
and
inc
push
cmp
fcomp
xchg
add
or
mov
xchg
or
icebp
loope
outs
movs
ins
lds
imul
pop
sbb
dec
call
adc
jmp
test
sbb
or
or
adc
sub
xor
xor
mov
mov
icebp
or
jne
mov
jns
jle
lahf
and
sub
lds
outs
fs
xor
mov
in
mov
pop
scas
and
jp
push
pop
(bad)
(bad)
popw
xor
rcr
retf
stc
push
pop
movs
test
mov
idiv
jb
and
jae
sub
pop
push
js
sbb
pop
push
pop
sub
aam
sahf
ins
mov
or
and
mov
rcl
mov
lahf
repnz
jo
out
mov
jge
loopne
pop
(bad)
xchg
ret
repnz
cmp
xor
sub
lea
hlt
adc
inc
in
dec
dec
mov
jle
test
ret
out
into
out
popa
imul
xchg
out
sub
in
pop
sbb
sbb
jmp
int
frstor
pop
rcl
pop
jge
(bad)
(bad)
in
mov
jns
jb
or
cmps
daa
fisubr
stos
bound
sub
pop
lds
and
pop
inc
dec
and
cmp
fisttp
xchg
dec
and
xchg
aaa
dec
xchg
push
xchg
dec
and
xor
dec
dec
je
adc
jae
cmp
imul
cdq
cli
repz
mov
adc
mov
adc
stos
out
iret
les
mov
xor
(bad)
cmc
add
dec
sub
xlat
or
test
retf
mov
ds
arpl
clc
loop
mov
add
icebp
inc
gs
je
das
mov
call
shl
leave
inc
mov
cmps
sbb
sti
push
add
mov
pop
jnp
js
pop
enter
push
dec
pop
pop
xchg
sbb
xor
enter
cmp
push
push
rol
adc
cs
jge
push
push
(bad)
sbb
imul
sub
not
inc
jns
test
sub
test
sub
fld
int
push
pop
pop
aaa
jne
data16
out
or
arpl
xor
sbb
mov
jns
call
and
or
xor
mov
mov
(bad)
mov
lds
inc
sbb
in
push
add
stos
push
loope
adc
inc
cmc
inc
jge
ja
inc
mov
mov
adc
push
mov
jge
and
ins
aad
add
int
stos
xchg
stos
pushf
retf
sub
push
sub
sub
push
sub
retf
ds
mov
mov
inc
or
fiadd
loop
in
mov
jge
nop
(bad)
xor
mov
lods
or
rol
cs
stos
and
in
lods
jge
stos
mov
call
or
(bad)
imul
push
push
pop
or
icebp
iret
or
ret
loopne
adc
loop
ds
pop
mov
pop
sahf
cmps
jns
mov
mov
test
sbb
pop
ret
inc
and
pop
lea
repz
or
mov
or
stos
xchg
in
cdq
cdq
inc
mov
push
jae
mov
pop
cs
adc
mov
push
jnp
add
jae
ret
scas
daa
push
gs
cdq
lods
je
stos
xchg
aaa
pushf
retf
jns
mov
mov
add
inc
iret
ja
mov
loop
push
xchg
cmp
mov
in
xchg
sahf
rcr
sbb
cmp
pusha
jb
mov
ret
test
js
cmp
and
aaa
ss
ss
loopne
test
in
mul
cmps
arpl
mov
test
sbb
xchg
test
sub
pop
add
std
movs
add
aad
sbb
ins
push
aaa
push
lds
popa
loopne
inc
mov
adc
mov
pusha
mov
mov
lea
aam
fdivp
pop
je
icebp
sub
inc
pop
push
xchg
jae
dec
in
scas
jge
push
jmp
je
and
sub
arpl
loopne
jle
jmp
inc
outs
dec
outs
aad
sahf
adc
mov
(bad)
mov
lock
sub
xor
out
cmc
repnz
cmp
sub
sub
push
mov
pop
add
nop
jne
sbb
cmps
arpl
mov
fsubr
das
fdiv
add
jns
enter
retf
test
and
test
sbb
push
mov
dec
dec
push
or
pop
shl
push
cmp
sbb
scas
das
xchg
ror
ss
push
rcl
adc
in
push
jns
pop
xor
loopne
sbb
cmps
ficom
push
mov
fld
push
lea
outs
mov
dec
loope
adc
mov
jae
(bad)
pop
xor
lahf
test
xor
mov
cmp
aam
jge
rcl
lock
mov
int
dec
jg
xor
jg
out
(bad)
jmp
mov
jno
lods
scas
outs
cmp
enter
stos
jge
daa
ret
xor
out
mov
(bad)
js
out
retf
inc
arpl
xor
adc
and
out
clc
aam
jmp
push
ins
inc
jno
(bad)
rcl
popa
repnz
int3
das
je
push
dec
les
jecxz
dec
xor
mov
mov
stos
xchg
add
data16
int
push
ins
push
aam
fistp
or
neg
fwait
repnz
dec
mov
push
push
pop
and
dec
jge
adc
cmp
mov
add
mov
popa
or
popa
aaa
mov
in
xchg
mov
xor
div
icebp
test
mov
sub
mov
mov
dec
std
test
jg
into
lahf
(bad)
mul
sti
fmul
test
in
(bad)
xchg
repnz
dec
jl
cdq
fcom
aam
push
int3
mov
imul
hlt
mov
jg
fwait
push
in
jg
movs
mov
sub
cld
aad
xor
xchg
dec
(bad)
mov
scas
fs
jp
fmul
dec
mov
out
jb
aas
mov
inc
jle
leave
mov
jne
pop
inc
xor
pop
mov
push
aas
cdq
mov
mov
cmp
fisttp
das
xchg
movs
jle
pop
or
mov
xchg
fmulp
in
mov
mov
cld
adc
inc
jne
push
in
repz
mov
in
add
enter
dec
(bad)
movs
dec
dec
(bad)
movs
ins
iret
mov
cld
pop
pop
and
inc
imul
std
adc
pusha
out
sub
cld
rcl
test
js
ror
shl
mov
xor
push
mov
mov
push
dec
xor
pop
out
jbe
ins
jo
out
mov
push
add
mov
or
enter
jb
push
add
sub
add
pop
dec
test
inc
(bad)
push
imul
sub
loop
and
push
scas
in
cmp
fnstsw
inc
push
push
test
stos
sub
data16
push
dec
ss
ret
pop
inc
lds
push
movs
mov
ds
mov
pop
jnp
daa
xchg
add
retf
xor
push
inc
in
fdiv
call
out
leave
xor
fsub
push
jne
je
mov
cmps
mov
hlt
dec
cmp
clc
es
xchg
aam
push
mov
mov
sub
pop
xchg
jge
imul
stos
jp
xchg
cmp
scas
sbb
in
pop
lds
add
mov
test
mov
add
or
popa
test
jg
sub
jae
push
addr16
aaa
xor
pop
dec
pop
stos
cmps
cmp
xchg
(bad)
inc
jb
out
imul
push
add
sub
arpl
in
cwde
adc
clc
pop
repnz
fild
xchg
aam
jne
int3
jb
jnp
aam
dec
and
mov
push
cld
sub
sbb
add
dec
mov
sub
and
stos
adc
cmp
ins
pusha
sub
gs
xor
lea
jmp
mov
push
pop
xchg
mov
sbb
add
les
xchg
je
jmp
imul
gs
xor
cmp
out
mov
stos
pop
ror
mov
fwait
mov
lea
retf
mov
repz
jmp
push
cs
mov
pop
add
ret
mov
js
fnstsw
push
fcmovbe
xlat
inc
and
pop
sub
adc
sar
pop
mov
lock
rol
mov
ficomp
and
pop
call
icebp
ss
(bad)
cld
push
dec
pop
push
imul
add
cmp
sbb
aam
dec
cmp
add
das
imul
inc
test
sbb
mov
mov
fwait
test
jne
xor
pop
push
cmp
cmp
shr
(bad)
test
push
push
hlt
(bad)
pop
xor
or
fimul
adc
fld
outs
add
lock
into
aaa
jno
repnz
xor
jle
popa
sbb
mov
int
out
jecxz
mov
in
pop
in
mov
aad
xchg
std
or
pop
mov
loope
repz
repz
xor
fild
pop
fwait
retf
cmps
jo
pop
dec
cs
call
and
mov
arpl
jae
imul
stos
mov
mov
pop
and
push
xchg
inc
(bad)
or
cmp
or
ins
dec
sbb
fdiv
stos
(bad)
and
jne
sub
fistp
ss
push
adc
ss
(bad)
and
cwde
cmp
xchg
aaa
sbb
mov
push
mov
shl
inc
pop
or
push
mov
inc
imul
jb
xor
dec
sub
int3
push
out
repnz
adc
jp
and
mov
and
xor
clc
mov
mov
and
aam
pop
lock
movs
bound
adc
dec
je
mov
les
sti
dec
sahf
and
jb
adc
jle
loop
xor
jo
(bad)
mov
not
sub
adc
fld
jle
mov
imul
int3
fmul
jle
loopne
retf
push
and
pop
pop
je
cld
push
sub
fld
adc
inc
sbb
call
and
out
fmul
call
movs
movs
cmps
js
sub
dec
pushf
fstp
adc
mov
test
mov
add
(bad)
shr
pop
inc
jle
cmp
xchg
mov
inc
hlt
xchg
inc
bound
out
mov
mov
cwde
inc
data16
aad
sbb
mov
in
xor
(bad)
jmp
add
and
xchg
cmp
fidiv
adc
inc
jle
mov
cmp
mov
(bad)
inc
xor
retf
test
stos
(bad)
daa
push
jo
inc
jne
ins
lods
popa
cmp
pop
push
sbb
cmp
mov
cmp
add
and
(bad)
ret
aas
stos
neg
js
ficom
mov
sub
sub
inc
hlt
pop
cli
stos
aam
ret
rcr
mov
jle
scas
data16
test
mov
lea
mov
stos
add
jbe
xchg
stc
cmovne
loop
mov
or
stos
fnsave
mov
xchg
stos
xchg
mov
cmps
add
cld
adc
and
dec
cs
adc
or
inc
or
sub
verw
cmp
xor
xchg
jbe
xchg
push
push
hlt
pop
and
inc
mov
dec
xor
xchg
lods
es
mov
xor
pop
pop
add
mov
call
jne
inc
jge
cmp
push
outs
push
mov
neg
cmp
rol
xchg
mov
leave
sbb
or
loop
inc
pop
sub
jbe
inc
cmp
mov
sbb
rol
aaa
loop
fsubr
and
push
gs
mov
ins
rol
jno
pushf
(bad)
mov
add
pop
inc
mov
sub
mov
lods
std
adc
add
and
add
add
sbb
sub
xchg
mov
bound
mov
add
xchg
xchg
mov
mov
xor
dec
cdq
mov
stc
push
xchg
shl
add
pop
rol
pop
mov
fdivrp
repz
movs
(bad)
out
sahf
test
test
jno
dec
mov
(bad)
or
(bad)
in
ja
fs
dec
or
jno
test
fild
lods
repz
loope
call
sbb
pop
int
mov
add
pop
je
sub
sbb
ss
push
mov
add
cmp
(bad)
bound
dec
int3
lods
cs
data16
pop
shr
lods
aam
ja
xor
pop
jp
push
cmp
mov
test
push
leave
dec
jae
sahf
mov
mov
jb
inc
sub
or
push
pop
cdq
repnz
daa
ins
adc
fwait
xchg
nop
jo
mov
in
(bad)
jl
mov
jmp
push
inc
dec
cmps
sub
or
ins
mov
scas
xchg
hlt
icebp
jb
out
cmp
jmp
mov
or
xlat
jle
mov
jnp
and
or
mov
sbb
push
xchg
les
add
(bad)
sti
xor
push
cwde
lea
and
or
ret
mov
push
retf
push
mov
pop
cmp
jmp
cld
push
cmps
daa
fwait
xchg
loop
cli
xlat
scas
mov
xor
mov
xor
mov
jbe
push
push
mov
lods
data16
in
cmc
push
fsub
jne
setne
cmp
push
pop
push
jl
lea
sbb
jae
add
nop
inc
(bad)
or
pop
mov
and
call
imul
push
add
call
push
clc
or
sub
int
movs
push
xchg
lea
outs
imul
xchg
push
push
xchg
pop
sub
mov
mov
shl
outs
push
repz
test
lods
imul
das
mov
rcr
mov
inc
ror
sbb
aaa
addr16
dec
inc
inc
shl
and
out
ins
push
cmp
sub
jmp
cmps
retf
add
imul
dec
fs
jmp
add
mov
cmp
aaa
push
inc
inc
add
pop
aad
sahf
aaa
in
xor
(bad)
mov
dec
enter
int
jmp
lock
push
mov
and
ins
push
fmul
int3
add
xchg
push
test
pushf
or
inc
mov
icebp
loope
cld
enter
aas
or
test
cdq
(bad)
nop
fcom
pop
push
fmul
xlat
cmp
sbb
imul
stos
popf
in
mov
(bad)
fsub
push
mov
lds
loopne
fist
xlat
sar
push
punpckhbw
adc
adc
mov
dec
ds
sub
and
loopne
pop
test
loopne
jae
call
retf
movs
shl
add
xchg
xchg
repnz
mov
adc
jmp
mov
add
push
imul
cmp
xchg
xlat
gs
push
ins
test
xchg
adc
push
shl
jg
cmps
ins
gs
cld
pop
js
mov
movs
xchg
jbe
push
push
push
inc
mov
jno
hlt
push
mov
inc
loopne
fld
fst
mov
jne
test
sar
fcom
mov
mov
test
jns
xlat
das
cdq
pop
aad
sub
xchg
ret
mov
xor
pushf
jnp
lds
loopne
int3
pop
pinsrw
aas
mov
icebp
call
cmp
or
xor
or
mov
xor
adc
rcl
xor
jo
push
mov
xchg
outs
test
and
xchg
movs
pop
aad
gs
rcr
jmp
mov
sub
retf
and
fisttp
pop
and
(bad)
xchg
jnp
mov
adc
sub
add
xchg
mov
push
pusha
out
adc
mov
jnp
add
rcr
popf
cmps
stos
lea
and
xor
in
retf
pushf
frstor
or
inc
xchg
mov
pop
in
ins
retf
fwait
sar
test
sar
stc
mov
mov
ss
outs
push
mov
mov
and
pop
movs
aam
mov
add
add
popa
in
paddb
or
cli
mov
xchg
fdivr
xor
fnstenv
in
mov
icebp
test
or
loopne
aaa
and
cmp
xchg
jbe
push
ins
daa
loope
push
loop
pop
popa
fidiv
sub
call
aad
adc
pop
dec
xlat
mov
pop
push
mov
into
jne
inc
jbe
jne
and
jnp
aam
sub
cmp
cmps
inc
into
xchg
mov
xlat
int
daa
mov
call
dec
or
ss
pop
ja
mov
in
pop
inc
adc
push
mov
dec
mov
add
fwait
mov
mov
mov
ja
cmps
sub
and
retf
loop
fcom
mov
fstp
ss
loop
mov
ret
mov
adc
xchg
mov
xlat
pop
lods
add
dec
pop
xchg
mov
iret
out
test
out
mov
mov
pop
sub
push
and
ds
adc
inc
ins
(bad)
call
cld
cmp
mov
inc
mov
inc
mov
jmp
jle
aad
sub
mov
or
ret
sbb
or
sbb
jge
ret
addr16
and
js
shl
xchg
imul
arpl
fs
xchg
fcom
loop
adc
push
dec
addr16
out
nop
jo
fwait
push
cmp
in
xor
popf
call
lods
inc
mov
mov
mov
cmp
sbb
in
sub
imul
xor
jb
add
stos
mov
push
dec
xlat
clc
(bad)
jmp
add
sbb
jmp
outs
nop
push
or
scas
add
clc
push
cld
jnp
cs
inc
push
jg
rcl
out
cmp
xor
pusha
lods
sbb
movs
mov
mov
jne
cmps
xchg
out
clc
xchg
jl
bound
mov
and
xchg
sub
aad
sbb
mov
sub
xchg
iret
inc
out
sti
dec
cmps
pop
pop
dec
cmp
pop
js
ficom
jne
mov
cs
out
cmp
ja
lahf
pop
js
call
(bad)
add
mov
test
enter
hlt
inc
outs
and
push
adc
fs
and
dec
push
sar
daa
test
js
sbb
and
jecxz
pop
cwde
jle
test
(bad)
lock
je
out
addr16
xchg
push
mov
das
sub
rcl
rcl
inc
mov
clc
test
data16
sub
add
inc
(bad)
div
xor
jae
mov
jbe
fsubrp
add
pop
mov
jp
cwde
(bad)
mov
sub
scas
into
sub
mov
aam
pop
jo
pop
outs
dec
jbe
cli
jb
push
push
out
adc
stos
(bad)
cli
fisttp
push
ror
js
cmp
int3
jno
test
dec
jecxz
cmps
aad
movs
and
add
xor
rol
mov
mov
adc
pop
ins
jle
bound
and
lock
add
int3
push
dec
xor
push
add
outs
cld
adc
push
sbb
outs
je
lea
jge
lea
add
jge
repz
push
inc
bound
pop
je
hlt
jmp
les
lods
sbb
mov
iret
cmps
ins
xchg
pop
xor
jo
or
sub
pop
(bad)
retf
mov
mov
push
or
stos
(bad)
test
cmp
outs
add
cwde
push
xor
idiv
pop
shl
jb
dec
xor
or
sbb
push
lods
fidiv
mov
out
add
xchg
inc
call
mov
data16
push
xchg
pop
(bad)
loope
js
repz
or
clc
jae
repnz
mov
and
loope
repnz
out
dec
ja
mov
pop
pop
cs
and
adc
in
jne
fst
push
ror
pop
cmp
fsub
mov
sbb
fadd
or
imul
xchg
mov
clc
cli
pop
mov
mov
inc
add
xlat
out
popf
or
mov
or
cs
cmps
jmp
outs
dec
pop
call
mov
in
pusha
jecxz
sub
in
fldenv
popa
lds
adc
sub
dec
loopne
out
or
popa
(bad)
mov
inc
xor
leave
sbb
cmps
add
dec
adc
pop
xchg
xchg
les
xchg
xchg
and
mov
jb
pop
ds
add
loope
and
pushf
push
pop
xchg
ins
fstp
xor
add
daa
jge
pop
mov
movs
xor
add
xchg
mov
mov
xchg
adc
jno
popa
rol
pop
out
push
les
mov
stos
cmp
mov
or
pop
cmp
sbb
cs
and
retf
out
call
add
cwde
inc
jbe
neg
lea
pop
imul
adc
test
movs
add
push
test
jae
and
push
cmp
imul
fdiv
neg
(bad)
push
retf
shr
pop
aad
sti
ja
mov
and
push
imul
outs
jecxz
js
push
jae
clc
pop
ds
mov
sub
jae
imul
out
cmp
mov
push
in
or
push
lods
jge
ss
xlat
repnz
pop
(bad)
mov
xchg
loopne
scas
jne
icebp
push
imul
push
fnstsw
cmp
(bad)
xchg
loop
or
mov
push
push
lock
gs
mov
sahf
push
mov
nop
lods
push
sbb
loopne
add
sbb
pop
pop
loopne
adc
pop
push
icebp
ja
aam
pop
and
jl
retf
sub
cwde
dec
push
push
push
jge
rol
jns
sbb
fdivr
mov
iret
mov
ret
icebp
ja
shr
jno
mov
sahf
and
jno
ds
push
pop
shl
iret
jle
jle
out
fiadd
imul
cli
ret
jp
mov
shl
inc
xchg
pop
stos
pusha
mov
and
sbb
cli
stc
es
mov
ds
out
sbb
and
leave
dec
inc
sbb
sub
je
fcomp
int
int3
or
jno
jo
fcomip
in
lock
imul
daa
cmp
jmp
aaa
sbb
jle
loope
xchg
out
sbb
arpl
in
test
cmp
cli
xchg
icebp
mov
lods
out
inc
icebp
out
cwde
fdiv
fcomip
lods
(bad)
mov
mov
mov
or
(bad)
push
xor
sbb
pop
ja
xchg
in
repnz
inc
dec
fstp
jecxz
xor
xor
adc
in
push
data16
and
cmp
fidivr
or
jge
sar
push
inc
aaa
xchg
outs
lods
dec
test
stos
fisub
arpl
add
fmul
push
xchg
xor
add
dec
fldln2
lahf
(bad)
or
div
aas
mov
loope
sti
fld
jne
sub
fstp
sub
ds
leave
out
pop
ret
cwde
fisubr
push
in
or
fistp
(bad)
jo
sar
xor
int3
cmp
inc
rcl
and
sahf
xchg
psrlw
inc
inc
mov
mov
xchg
aas
adc
mov
sub
xlat
add
mov
mov
mov
mov
mov
sbb
sbb
lds
stos
inc
mov
imul
pop
cli
sub
dec
cmp
les
cmc
and
and
xchg
pusha
call
imul
test
dec
dec
out
in
ins
pop
cli
(bad)
jmp
mov
or
aam
out
daa
add
arpl
rsm
stc
inc
jbe
and
les
pop
inc
mov
ja
mov
xor
stc
loope
dec
fsubrp
shl
mov
out
(bad)
push
movaps
mov
adc
jmp
in
jge
inc
cwde
push
cdq
(bad)
loop
out
xlat
iret
jmp
std
xchg
cmps
xor
mov
add
arpl
pop
jecxz
(bad)
lahf
in
mov
scas
(bad)
fwait
inc
adc
out
inc
push
div
dec
(bad)
and
mov
mov
fadd
cmps
jg
jbe
mov
mov
adc
cmp
and
ins
mov
ret
call
xchg
lods
ficomp
inc
data16
into
loope
dec
test
std
mov
cmp
not
pop
cmp
pop
add
sub
fisttp
imul
(bad)
mov
lahf
clc
fidivr
cmp
xchg
jo
xchg
div
mov
mov
enter
out
cld
xchg
sub
rcl
xor
sbb
call
add
aas
test
xlat
pop
pop
in
pop
adc
outs
push
ja
iret
(bad)
jecxz
movs
jne
loop
bound
ret
clc
sub
call
fwait
retf
aas
pop
mov
jno
add
int3
xchg
loop
int3
(bad)
pop
xchg
sahf
js
mov
dec
adc
aam
pusha
imul
rol
xor
ss
pop
aaa
xchg
int3
jbe
arpl
bound
loopne
shl
lods
ins
xor
cmp
add
sub
jmp
xor
sbb
sub
jle
and
out
sbb
pop
jns
push
add
dec
movs
cmp
add
sbb
and
lods
out
pop
add
loop
adc
cdq
xchg
ds
retf
ins
or
sub
cmp
test
addr16
cwde
aam
cmp
sbb
and
jno
push
gs
xlat
jb
push
add
or
inc
sub
cmp
lds
mov
test
es
mov
jne
cmp
adc
out
push
mov
add
mov
and
sub
fnstcw
mov
repnz
push
cmp
or
aad
rcl
add
sbb
out
cmps
jno
fxch
and
and
mov
cmps
leave
cmp
mov
push
rcr
sbb
aad
mov
jge
js
jmp
retf
jle
out
xor
cmp
cmps
and
ret
movs
rol
inc
pop
imul
mov
sub
fldenv
mov
sub
lods
mov
cmp
sub
sbb
sub
ja
icebp
sub
jnp
ins
fdivp
inc
invlpg
pushf
scas
add
xchg
mov
add
dec
or
imul
out
mov
add
out
pop
fld
nop
adc
add
mov
dec
xor
xor
aas
and
cs
dec
jb
sbb
push
adc
mov
(bad)
(bad)
shr
push
test
aad
or
xor
mov
sbb
mov
push
ror
cmp
and
imul
mov
shl
xchg
dec
xchg
lock
mov
aad
mov
hlt
cmc
hlt
out
test
fdiv
inc
mov
jns
xlat
outs
pop
xchg
lock
icebp
mov
xor
adc
cmc
push
mov
js
enter
cld
cmp
jg
std
xchg
(bad)
in
push
xor
repnz
adc
retf
bnd
icebp
aaa
aam
sub
xor
test
cdq
cli
daa
rcpps
pushf
mov
fmul
out
add
mov
jmp
mov
std
rol
push
ret
inc
mov
test
aas
int
cmp
stos
xchg
mov
inc
inc
ss
pop
add
mov
fiadd
mov
(bad)
fist
or
inc
sbb
leave
jo
pop
stc
cwde
lahf
ja
dec
xor
cmp
jbe
mov
jne
or
jge
fld
pop
mov
inc
cmp
and
sub
leave
movs
outs
xchg
mov
add
pop
fsub
cmp
shl
stos
xor
push
jmp
mov
ins
or
sub
push
clc
je
neg
push
icebp
cmps
inc
in
jl
test
push
pop
repnz
mov
cmp
mov
push
jnp
xor
fsubr
call
sbb
or
in
jle
cmp
xor
pop
dec
fimul
lds
pop
pop
xchg
leave
mov
pop
int
fwait
sbb
xchg
(bad)
jecxz
rol
lods
pop
xor
aaa
dec
pop
mov
imul
leave
sar
mov
pop
dec
sub
push
mov
stos
jbe
sub
sub
cvtpi2ps
sub
mov
sub
gs
mov
das
add
dec
xchg
sbb
pop
push
shl
rcl
dec
xchg
add
and
mov
add
ds
pop
test
in
fild
or
push
or
popf
repz
cs
mov
mov
push
mov
in
shl
stc
add
ret
in
push
lea
std
xlat
mov
lock
fwait
inc
add
adc
retf
pusha
out
sar
pop
mov
xor
xor
cmp
cmps
cwde
outs
out
lds
retf
rol
in
sub
out
sbb
(bad)
sub
mov
cs
call
adc
hlt
pop
push
fld
loope
xor
sti
and
leave
ret
ds
int
adc
std
ret
clc
jae
or
fld
sti
movs
(bad)
sub
mov
push
sahf
repz
int3
mov
ins
inc
xchg
xchg
test
les
cmp
dec
dec
or
stc
xchg
cwde
jle
sti
daa
or
dec
cmp
mov
mov
mov
adc
lea
mov
into
cmp
mov
sbb
pop
jns
or
pop
aas
iret
jbe
into
and
(bad)
test
iret
popa
fist
push
outs
add
icebp
adc
jl
fadd
sbb
ss
sub
inc
pusha
mov
and
test
mov
jo
push
pop
and
add
cmp
out
and
inc
cwde
sbb
nop
push
adc
sub
into
xchg
aad
inc
test
add
into
xlat
push
mov
dec
stos
cmp
sbb
sub
jle
cmp
mov
daa
xor
pushf
jns
clc
mov
nop
imul
lea
popf
sbb
jecxz
push
outs
ret
or
mov
test
mov
popa
std
test
cdq
shr
pop
jl
sbb
repnz
mov
dec
outs
outs
inc
pop
ins
loope
add
jns
and
pushf
ret
ins
cli
jns
cmp
out
push
jnp
call
std
fsub
in
mov
add
rcr
gs
push
retf
lea
mov
or
jnp
inc
or
popf
mov
dec
pop
in
and
mov
outs
and
ds
cwde
or
and
mov
mov
cs
in
out
imul
leave
or
cmp
mov
loope
ficomp
mov
or
stos
pop
pop
(bad)
jbe
std
inc
pushf
push
inc
jne
xlat
test
sbb
cs
stos
ret
les
data16
xchg
sub
cmp
xchg
out
fucomp
ja
das
mov
fsub
leave
push
add
mov
push
adc
sub
outs
mov
push
cmp
sub
or
sbb
rcr
lock
jl
xor
and
pop
stos
cmp
jle
out
outs
mov
mov
jbe
loopne
xchg
inc
pop
cdq
in
loopne
push
stos
inc
mov
push
push
cmp
pop
loop
test
loope
(bad)
hlt
inc
gs
inc
adc
push
push
fst
adc
and
lock
add
add
and
pop
sub
sbb
test
ja
adc
cmp
mov
test
pushf
cs
out
lds
and
cld
inc
jmp
or
cmps
(bad)
sub
out
ins
add
jns
xor
faddp
jecxz
inc
test
shl
push
xchg
ror
pop
fcomi
or
or
loop
cli
std
pop
push
cmc
sub
inc
loop
lods
dec
das
sub
fnstenv
add
cmp
repz
pushf
pop
pop
inc
push
iret
cmp
and
sahf
mov
out
add
sbb
sub
pop
ror
arpl
ss
adc
and
mov
movs
jg
inc
hlt
dec
push
cmps
in
jecxz
mov
adc
addr16
gs
jnp
ins
dec
mov
dec
pop
xchg
movs
mov
xchg
inc
jne
pop
test
pop
cmps
aas
(bad)
adc
stos
stos
stos
addr16
imul
jmp
cmp
pop
stos
sahf
mov
ja
sahf
out
cmp
xor
out
inc
xchg
into
mov
pop
cli
stos
xor
into
sub
js
mov
cmps
test
mov
cs
sub
jp
(bad)
in
and
inc
push
inc
jne
icebp
sub
pop
sahf
call
cmp
mov
jno
push
jle
outs
mov
imul
mov
nop
popa
test
gs
pop
sar
pusha
js
sti
inc
push
push
sbb
push
imul
loope
je
int
lds
test
sbb
mov
pop
push
into
fdivp
cmp
int
jge
mov
dec
adc
jl
arpl
sbb
jmp
dec
call
(bad)
lahf
inc
adc
js
sbb
push
inc
scas
aad
inc
mov
inc
ja
pusha
ds
xor
dec
jg
aaa
hlt
inc
repz
xchg
fidivr
dec
out
popa
hlt
cmps
(bad)
push
jg
aaa
ins
(bad)
adc
cmp
std
xor
in
cmc
or
sbb
fld
in
outs
push
jg
call
test
jne
pop
jne
fcomp
sti
add
jmp
sbb
push
cmp
dec
xor
inc
test
cmp
retf
out
addr16
loopne
cmp
(bad)
push
mov
popa
ja
mov
xor
push
ds
xchg
ret
std
arpl
push
jns
push
mov
pop
ds
lock
xchg
mov
lods
stos
pop
ja
inc
xlat
xchg
in
std
mov
in
cld
cmp
test
cdq
popa
loope
mov
fs
lock
fnstsw
adc
sbb
add
adc
lahf
sub
movs
in
jmp
mov
jecxz
popf
lods
clc
fwait
idiv
cmp
lahf
cmp
movs
push
mov
js
js
fsubrp
ret
mov
inc
jg
shr
aaa
popa
sti
pop
in
dec
lahf
repnz
mov
pop
inc
sub
mov
xchg
sub
push
mov
adc
scas
cmp
or
std
sub
(bad)
sub
loopne
in
or
js
out
inc
mov
lea
sub
jne
pop
es
jnp
out
xor
cwde
mov
rol
and
mov
sbb
sub
jne
lods
add
nop
or
ins
mov
sahf
(bad)
pop
(bad)
sar
inc
ret
ins
not
sub
mov
xchg
mov
pop
inc
cli
lods
dec
xor
mov
sbb
jo
jbe
popf
imul
int
dec
cmp
inc
dec
push
retf
popf
mov
scas
(bad)
or
mov
cli
adc
jle
or
ret
push
test
pop
out
loopne
test
xor
dec
sub
dec
xchg
inc
pop
xor
dec
(bad)
sbb
jb
mov
inc
adc
xor
mov
repnz
inc
fldcw
push
adc
(bad)
sub
icebp
xchg
jbe
push
retf
fst
push
pop
dec
les
retf
int
sbb
mov
add
add
sub
inc
fs
and
aaa
mov
pop
mov
pop
and
pop
sysexit
and
xchg
inc
sub
inc
mov
inc
push
cmps
add
push
jne
inc
push
mov
in
adc
fst
jl
jp
inc
xchg
movs
or
mov
pushf
das
pushf
cmove
sbb
mov
inc
test
push
test
dec
and
jnp
xor
cdq
lods
mov
mov
cmps
add
mov
frstor
mov
inc
hlt
inc
test
sub
dec
add
fnsave
dec
and
cs
int
(bad)
ficom
out
pop
int
retf
jg
cmps
retf
rcl
jp
sbb
(bad)
mov
shr
xchg
imul
mov
pop
mov
movs
arpl
ja
ret
enter
stos
dec
xchg
cmp
loope
push
ss
and
movs
lea
sbb
int
pop
cmp
add
sbb
in
(bad)
lock
fs
jo
mov
sbb
das
jb
cwde
(bad)
and
jl
fiadd
push
adc
add
sbb
stos
cdq
scas
aas
inc
dec
dec
mov
add
js
jne
push
xor
iret
icebp
add
xchg
fmulp
pop
nop
(bad)
xlat
aaa
int
cmps
push
shr
dec
xor
ror
mov
inc
pop
rcr
ret
mov
jg
int
sub
add
xchg
cmp
mov
or
inc
dec
out
dec
jg
cdq
stc
add
imul
pusha
popf
xor
and
dec
add
sub
out
in
loop
and
mov
lods
dec
add
sahf
cmp
je
adc
dec
cmp
rol
fsub
enter
cli
or
daa
add
or
aad
mov
xlat
wrmsr
sbb
int3
cmp
sub
test
pushf
cmp
in
(bad)
push
into
push
adc
jo
and
movs
and
mov
adc
and
push
adc
and
bound
ret
push
adc
pop
(bad)
cmc
inc
sub
add
fisubr
mov
dec
cmp
inc
mov
dec
jbe
dec
or
xor
add
or
fs
inc
shr
(bad)
mov
xchg
and
xor
dec
test
xchg
je
pop
mov
fst
retf
fwait
dec
test
lods
movs
cmps
push
scas
cmp
or
fisttp
jno
(bad)
mov
push
jb
pop
add
sbb
inc
outs
mov
or
pop
mov
and
aad
lea
inc
pop
mov
add
inc
call
pop
fdiv
daa
jg
daa
repz
cdq
xor
adc
xchg
cli
movs
dec
and
jge
sbb
pop
adc
(bad)
or
mov
push
cmp
xchg
mov
je
jne
popa
out
push
and
sub
mov
sbb
push
add
fldenv
ret
mov
ja
out
dec
arpl
jg
or
mov
jmp
fld
dec
(bad)
jae
adc
or
sub
ss
out
push
cmp
cmp
xor
(bad)
leave
mov
xor
ja
loopne
xor
(bad)
(bad)
in
inc
cmp
rcr
fwait
add
test
imul
int
and
or
sub
ins
scas
aad
inc
repnz
outs
and
mov
lock
cli
xchg
movs
and
mov
add
out
add
aad
xor
xchg
mov
mov
push
shl
popa
aam
mov
fidiv
lock
into
sbb
pusha
sub
inc
push
nop
call
popf
icebp
sub
adc
push
aaa
push
jnp
sbb
fsub
pop
adc
jnp
push
cmp
call
(bad)
or
push
imul
xchg
imul
dec
cmp
ffree
adc
sbb
aam
mov
push
(bad)
aaa
dec
leave
inc
not
xor
add
(bad)
stos
dec
jnp
cli
cmp
cmp
mov
das
jb
cmp
movs
jnp
loopne
fldenv
cmp
dec
or
sub
mov
jne
gs
inc
retf
mov
push
(bad)
(bad)
fucomp
mov
mov
and
jne
jae
repnz
jl
push
into
jnp
inc
ret
out
sbb
stos
or
cmp
or
mov
in
mov
adc
jmp
push
mov
cli
mov
lods
add
mov
loop
lods
mov
push
dec
fimul
fnstcw
mov
outs
pusha
pop
lahf
addr16
(bad)
adc
enter
nop
pusha
hlt
icebp
cmp
push
inc
je
int3
es
int
mov
sub
lds
inc
xchg
dec
and
and
inc
xchg
dec
xor
xor
fs
sub
dec
add
mov
jecxz
loopne
cmc
dec
and
pop
repz
mov
mov
lahf
test
popf
add
sbb
xchg
fwait
into
xor
dec
je
and
out
(bad)
daa
leave
adc
pop
and
fucomip
pop
jmp
jg
inc
and
push
aas
jbe
sub
or
xchg
xchg
mov
add
pop
mov
dec
dec
xchg
add
out
mov
and
dec
out
or
loopne
sub
not
xchg
fwait
xchg
scas
push
aad
movs
inc
cs
mov
icebp
out
scas
out
dec
xchg
icebp
fisttp
mov
inc
fcomi
mov
or
(bad)
test
mov
jmp
call
push
in
fiadd
in
(bad)
stc
and
cmp
shl
adc
aaa
aam
in
push
test
and
test
test
fldcw
or
rcl
push
mul
pop
sub
arpl
(bad)
out
test
sbb
sbb
jp
imul
adc
aas
jae
fmul
dec
mov
sti
cwde
(bad)
call
jl
jnp
inc
out
add
mov
pop
or
cmp
adc
fstp
mov
stc
sub
mov
mov
push
mov
xor
jns
loope
mov
push
dec
jmp
jge
mov
dec
push
outs
or
dec
jle
getsec
test
mov
and
and
jmp
dec
inc
push
sub
shl
ror
lods
adc
push
xchg
jg
mov
mov
mov
adc
add
add
lods
mov
mov
sbb
inc
or
daa
icebp
pop
xor
inc
add
push
push
loopne
pop
push
add
sbb
adc
cs
es
sar
mov
xlat
cmp
add
and
adc
hlt
sub
inc
push
int
mov
pop
sub
ret
cwde
and
push
aaa
mov
test
xor
jbe
or
inc
inc
xchg
arpl
outs
xlat
(bad)
sub
mov
jbe
jmp
push
cmp
pop
jno
cmps
and
pop
nop
mov
cmps
retf
inc
sub
xchg
dec
add
or
xlat
test
mov
repz
lds
sbb
or
xchg
sub
sbb
ins
sar
push
pushw
out
push
ins
fadd
sub
mov
inc
jae
cmp
mov
call
xchg
push
xor
and
leave
pop
jne
add
dec
sub
push
adc
rol
mov
sub
mov
adc
dec
add
nop
int3
in
adc
push
jmp
adc
mov
movs
push
mov
jl
push
sbb
push
inc
push
or
xchg
inc
pop
movs
lea
test
lods
cli
mov
add
ret
jle
dec
sbb
adc
fwait
int
adc
inc
pop
mov
fbld
test
test
(bad)
cmps
jl
gs
adc
lea
push
adc
outs
repnz
mov
fs
dec
sbb
add
and
sub
movs
cmp
cli
jp
out
ret
jg
cwde
mov
mov
and
imul
outs
or
mov
call
mov
fs
pop
ret
jb
in
stos
push
out
(bad)
fwait
jle
jbe
mov
fisttp
or
in
pop
ja
leave
mov
test
xchg
sub
mov
sbb
call
mov
add
mov
adc
xor
xchg
jb
mov
add
(bad)
jecxz
call
mov
aad
push
aam
test
shl
mov
sbb
inc
inc
or
mov
push
dec
je
call
cs
jo
adc
sbb
mov
stos
movs
cdq
fst
into
in
jae
test
into
out
mov
push
mov
or
and
push
inc
jp
mov
mov
retf
aas
jp
ficom
aad
outs
dec
pop
rcl
push
sbb
xor
mov
lds
popf
ret
mov
out
icebp
dec
mov
cmp
cld
push
fistp
pop
loop
jnp
lods
xchg
and
stos
xchg
(bad)
adc
movs
and
push
xchg
and
jecxz
sub
inc
cmps
pushw
xchg
loopne
test
pop
push
dec
cmp
aam
and
inc
add
lea
mov
mov
mov
scas
sub
jle
ja
push
jle
mov
imul
int3
lods
int
jno
push
movs
push
(bad)
loop
clc
mov
sbb
movs
sub
arpl
dec
push
ror
fldenv
cmp
rcl
test
sub
adc
idiv
sbb
in
rol
enter
jno
mov
cs
add
push
sbb
rcl
stc
adc
fwait
pop
adc
sub
test
test
stc
lahf
sahf
rcr
push
pop
pop
je
rol
sub
xchg
cmp
mov
mov
aad
mov
inc
adc
(bad)
mov
add
call
xor
int
or
rol
jnp
or
sub
cmc
push
je
mov
inc
in
ja
mov
call
push
jl
sub
scas
cmp
test
sbb
jo
retf
ret
mov
pop
jmp
xor
sub
xor
retf
and
test
adc
add
shl
arpl
xchg
out
cmc
push
fcom
fistp
pusha
test
shl
or
in
lds
mov
lahf
test
pop
pop
(bad)
stos
xchg
fidiv
inc
icebp
xor
xor
pop
gs
call
or
dec
cmp
dec
adc
sub
int3
imul
movs
icebp
xor
sbb
inc
gs
retf
push
xchg
push
enter
mov
aaa
and
test
mov
xor
or
mov
pop
lock
shl
addr16
pop
fistp
jae
push
inc
push
mov
into
imul
and
cmp
mov
mov
neg
test
test
or
movs
push
mov
ret
lahf
push
cli
test
adc
cs
push
sti
scas
shl
pop
fldenv
popa
aas
xor
shr
aam
jmp
loope
nop
sbb
mov
in
mov
jmp
or
leave
inc
popa
and
addr16
cmp
mov
lea
push
dec
loopne
stc
mov
cmps
pop
mov
loop
fbstp
jne
cmc
push
ins
cmp
push
int3
lahf
xor
or
icebp
dec
pop
loop
pop
mov
retf
mov
bound
cdq
ds
adc
mov
mov
and
jbe
fs
fimul
mul
inc
rcl
jp
fidiv
add
xor
jp
mov
xchg
jno
xor
mov
sbb
jbe
test
sub
pop
or
or
mov
lods
mov
outs
aam
xor
out
sbb
xchg
call
rol
pop
and
sbb
adc
jae
inc
add
mov
sbb
adc
inc
test
or
call
mov
dec
push
jmp
adc
dec
clc
mov
pop
gs
or
arpl
cmp
xor
mov
push
test
push
(bad)
aaa
mov
out
cmp
movs
mov
outs
imul
ja
rcr
retf
fisubr
add
add
push
xor
loopne
div
pop
fnstsw
sub
enter
rol
or
aam
sbb
pop
inc
dec
out
lods
test
push
jb
jnp
xchg
adc
sub
sar
lea
int3
sub
mov
lea
int
jge
and
out
push
mov
sbb
add
retf
push
sub
sbb
dec
xlat
mov
fs
mov
and
(bad)
jle
pop
imul
cmp
leave
repz
inc
sbb
sti
das
mov
aaa
call
cmp
or
cld
inc
setno
jo
adc
jae
mov
jne
icebp
nop
out
ss
in
mov
mov
fwait
xchg
pop
int3
and
scas
ds
xor
mov
cld
shl
jno
mov
rcr
dec
outs
cmp
jb
mov
sub
pop
dec
(bad)
cmp
out
and
xchg
out
arpl
shl
ret
les
and
dec
movs
pusha
push
cli
es
push
cmp
fsubr
ret
jg
inc
leave
or
and
inc
or
jno
inc
xor
test
in
ret
sbb
shl
ds
jae
test
call
mov
add
push
mov
mov
inc
test
loop
mov
or
dec
jmp
rcr
sbb
mov
(bad)
and
adc
stos
jb
es
mov
int
jo
ss
sahf
addr16
out
test
(bad)
sub
cld
gs
and
jb
add
jne
xor
xchg
lods
xchg
lea
retf
je
ins
les
mov
jmp
xor
repnz
and
mov
dec
fadd
or
mov
add
retfw
push
and
mov
jecxz
nop
cmp
jae
lds
jo
jbe
in
hlt
in
push
lods
dec
(bad)
xchg
push
test
xor
dec
adc
or
ss
(bad)
mov
iret
jnp
jmp
jmp
mov
retf
ficom
aam
push
cld
cs
lea
mov
jae
jnp
xor
fnstenv
in
js
pop
call
sbb
push
aas
clc
imul
or
add
or
imul
aaa
aad
jle
add
mov
fisub
fstp
dec
adc
or
push
inc
push
dec
jne
adc
push
cmp
mov
je
push
add
cmps
mov
push
scas
xchg
fs
jae
stc
nop
jae
int3
cwde
or
push
sbb
pop
shr
pushf
dec
outs
add
sbb
test
leave
inc
ins
loope
push
ficomp
test
xchg
int3
cmp
test
pop
cmp
mov
test
shl
push
outs
call
js
test
dec
xor
pushf
cmc
inc
int3
lahf
xor
out
push
int3
jp
dec
pop
sbb
pop
or
inc
mov
adc
ret
nop
jae
xor
stos
push
and
mov
jnp
int
xchg
es
push
cmps
mov
retf
data16
mov
gs
mov
push
lahf
sbb
xchg
sub
fstp
jmp
push
test
pusha
pop
scas
adc
pop
fidiv
test
jp
dec
jl
arpl
ret
adc
loopne
adc
sbb
mov
push
push
mov
mov
loop
rcl
sub
in
cmc
push
sbb
xchg
scas
aam
inc
test
std
ror
and
call
ret
xor
cmp
dec
stc
or
add
les
dec
mov
pop
add
mov
aam
push
inc
mov
cmp
xlat
mov
fxch
dec
inc
xchg
dec
and
rol
mov
push
retf
lods
ret
jecxz
add
jnp
xchg
aad
loope
sub
mov
test
inc
or
xor
mov
pop
adc
xlat
cmp
adc
test
jp
int3
cmp
and
nop
mov
sbb
test
cwde
push
pop
dec
xchg
pop
mov
sbb
in
aas
dec
test
ins
lock
scas
sbb
add
mov
ret
push
loopne
xor
inc
ja
(bad)
pop
imul
dec
rcr
push
pop
jno
add
jb
pop
sbb
(bad)
push
sub
sub
push
ins
mov
lods
aam
sbb
mov
or
int
push
in
scas
jbe
push
call
jno
fst
cmps
fsub
aad
and
enter
push
daa
mov
mov
lahf
dec
or
push
sub
aaa
arpl
test
xlat
inc
arpl
pushf
mov
int
push
in
push
push
sbb
stos
push
push
cmp
jnp
sub
in
add
test
fidiv
adc
jb
repnz
xor
ja
mov
jb
xor
pop
fisubr
gs
call
fdivr
std
mov
stc
cs
movs
fist
add
dec
jg
sar
(bad)
in
ss
xchg
fimul
push
cld
ret
jmp
add
mov
fst
mov
xchg
ror
in
retf
stos
scas
fwait
icebp
sbb
mov
xor
das
xchg
into
movs
scas
imul
outs
mov
jg
or
dec
lock
xchg
(bad)
and
aas
call
je
sbb
push
call
out
or
div
dec
mov
xor
dec
xor
mov
and
fbstp
ret
lods
test
jno
mov
imul
fstp
sbb
or
jmp
in
cli
mov
enter
pushf
sub
xor
add
retf
imul
scas
out
or
out
inc
and
imul
test
cmp
push
mov
lods
out
jl
out
sti
fstp
rol
sbb
inc
jp
push
repz
out
dec
jmp
push
cmp
in
pop
xor
jnp
mov
push
pop
js
push
sti
shr
cs
cdq
push
fisttp
mov
cld
jne
jle
test
cdq
xchg
int3
stos
outs
(bad)
push
fcomi
cmc
inc
pop
int3
xchg
gs
jle
movs
mov
and
test
fs
inc
ficomp
aad
jns
push
pop
into
adc
mov
push
xor
test
div
or
popa
push
jle
jno
or
test
fs
nop
stc
xor
add
adc
std
rol
test
stos
cmp
lahf
jmp
jbe
push
mov
and
add
push
mov
cmps
xor
in
inc
cmp
add
cli
xchg
adc
xchg
cmp
add
xor
int3
test
jnp
ficom
popa
push
in
loope
fistp
push
inc
mov
mov
into
cli
mov
fisttp
(bad)
stc
xor
scas
adc
outs
cmp
jne
mov
sbb
inc
sbb
lahf
test
or
shl
in
jl
push
or
dec
mov
ret
jmp
adc
popa
loopne
bound
sub
mov
popf
ins
add
daa
xchg
mov
sbb
stos
mov
pop
and
rcr
fwait
mov
xchg
scas
pop
mov
add
mov
push
cwde
adc
pop
and
add
pop
loop
cmp
jmp
mov
iret
imul
inc
dec
movs
xor
sbb
inc
cmps
cmp
xlat
popa
mov
pop
xchg
pop
xor
mov
outs
jbe
hlt
in
and
test
mov
addr16
dec
cwde
pop
mov
adc
in
add
mov
rcl
and
sub
dec
dec
imul
pop
jne
clc
call
movs
test
sub
int
repz
xchg
jg
or
dec
pushf
cmp
or
es
jbe
stos
mov
mov
loopne
jmp
aad
dec
fcmovbe
cmp
mov
or
ss
push
pusha
jo
pop
test
push
les
push
and
or
aaa
jmp
mov
inc
mov
inc
sub
leave
pop
je
add
lock
loop
cwde
jns
xor
push
inc
jae
sub
add
sbb
adc
push
inc
ins
mov
enter
in
pop
jnp
mov
in
hlt
and
lock
inc
iret
mov
adc
sar
or
test
jle
xlat
add
dec
add
push
lds
cmp
aaa
inc
xor
xchg
sub
push
(bad)
out
jno
lods
(bad)
pop
adc
jecxz
scas
mov
and
fs
push
ins
dec
push
sub
mov
push
jae
shr
test
sub
sub
and
mov
std
loop
push
dec
(bad)
adc
sti
sub
sahf
ins
push
and
shl
push
dec
push
and
aas
out
push
sub
into
aam
mov
mov
call
mov
(bad)
dec
and
rol
fstp
or
and
cmp
jecxz
movs
data16
mov
or
int3
not
sti
cs
dec
pushf
je
(bad)
loop
iret
ins
pop
adc
jbe
aad
ss
inc
dec
or
pop
icebp
pxor
mov
retf
mov
xchg
loope
mov
fisttp
fisttp
es
test
push
sub
xchg
scas
xor
xchg
into
mov
cmp
popa
jb
jle
bound
mov
push
cmp
aaa
xchg
push
call
loop
out
dec
out
call
xchg
mov
cmc
lea
nop/reserved
xor
fnsetpm(287
cwde
cmp
xchg
(bad)
not
ret
inc
jbe
fstp
pop
add
dec
das
or
loope
sti
mov
adc
add
xor
inc
shl
push
pop
loopne
inc
in
out
daa
pop
sbb
leave
loopne
enter
adc
lds
lock
jmp
mov
dec
outs
mov
jge
ds
dec
sti
sbb
mov
fild
stos
fisttp
and
cwde
imul
push
mov
btr
fild
stos
enter
daa
fisttp
xchg
cmp
imul
in
add
push
mov
je
and
js
xchg
bound
sbb
in
inc
push
push
sbb
cli
cmp
lahf
daa
cmp
sbb
cwde
scas
pusha
pusha
sar
(bad)
int3
test
fstp
mov
push
pop
cmp
and
sti
mov
jne
mov
jg
xchg
dec
and
push
push
or
push
adc
add
ret
cli
inc
sar
and
push
sub
sbb
xchg
inc
hlt
push
ins
or
mov
rcr
in
mov
or
mov
inc
or
adc
or
mov
mov
sbb
stos
cmp
shl
inc
inc
adc
rcl
xor
and
popa
sbb
or
test
popf
mov
aaa
neg
shl
push
and
(bad)
sti
jne
sub
sub
loopne
xor
xchg
lods
sbb
jmp
inc
adc
outs
out
sahf
movs
popa
ins
xor
call
scas
cs
jb
in
and
mov
push
or
sub
sti
push
test
fstp
xchg
mov
fcmovnbe
sub
inc
lds
sar
ret
and
add
outs
push
test
ret
outs
mov
out
mov
call
cmp
(bad)
push
add
je
sub
imul
fwait
add
loopne
dec
int3
fld
shl
test
pop
and
add
xchg
cmp
and
push
push
sub
fwait
push
shr
test
inc
(bad)
cmps
lds
cmp
jle
test
(bad)
xor
and
and
outs
shr
xlat
stos
sbb
sub
sub
das
mov
adc
xchg
lea
jecxz
xchg
sbb
call
and
cmp
xchg
ins
imul
dec
dec
pushf
cs
sbb
js
stos
jno
mov
add
sbb
and
or
mov
inc
into
stos
jno
stos
aad
retf
jle
mov
sbb
or
sub
lods
loope
dec
dec
ror
jmp
imul
out
js
mov
(bad)
imul
sbb
mov
inc
push
and
retf
inc
adc
sub
adc
(bad)
inc
hlt
scas
or
imul
xchg
jno
repz
sub
jmp
nop
inc
xor
mov
push
cmp
adc
fsubr
xor
movs
out
mov
push
arpl
outs
mov
xor
and
test
and
xchg
cmp
(bad)
xlat
jbe
mov
dec
mov
mov
(bad)
lods
rcr
popf
pop
inc
or
xor
and
pushf
ret
mov
jno
test
mov
out
stos
cmps
nop
hlt
and
aaa
lds
arpl
xchg
xor
out
cmp
pop
mov
stos
cmp
push
cmps
jnp
les
sub
mov
cwde
cmp
xchg
and
mov
jbe
adc
inc
rcl
fadd
add
shl
icebp
sbb
xchg
push
mov
repnz
outs
inc
mov
jae
and
repz
cmc
movlps
(bad)
rol
stc
scas
nop
pop
in
xchg
daa
pop
jecxz
loope
pop
js
adc
test
cmp
pop
call
test
rcr
test
fist
mov
lds
adc
add
xor
add
push
cdq
and
stos
or
sub
arpl
cli
(bad)
(bad)
and
push
pusha
cmps
cwde
(bad)
lea
outs
inc
scas
int3
and
daa
pop
pop
loopne
lods
movs
xchg
aaa
mov
aas
mov
xor
jg
stos
jle
jle
lahf
stos
jle
mov
repz
leave
das
ficom
jne
leave
push
retf
mov
test
in
cmp
mov
inc
mov
(bad)
std
mov
mov
dec
test
xchg
sar
mov
sti
jg
mov
imul
xor
xor
lea
out
xor
rol
xchg
out
dec
cmps
mov
sti
outs
stc
cmps
mov
aam
pop
js
icebp
pop
call
sbb
cmp
inc
mov
sub
aas
jp
call
popf
dec
xor
pop
adc
pop
adc
or
(bad)
ror
or
(bad)
call
cmp
ja
fwait
jmp
arpl
lods
mov
adc
sbb
outs
jno
mov
push
jo
inc
or
sub
and
test
cmc
inc
jae
js
jl
mov
mov
adc
inc
xchg
add
adc
aaa
and
lea
aam
xchg
call
call
pusha
out
repnz
scas
cmp
pop
pop
pop
sbb
sbb
out
rcl
or
or
cmp
fisubr
ins
test
adc
sub
imul
add
(bad)
dec
(bad)
jmp
fistp
add
bound
leave
jnp
inc
arpl
inc
lods
mov
xchg
mov
pop
xchg
cs
lds
xor
test
xlat
push
test
in
nop
ficomp
pop
aam
sub
out
push
neg
rcl
cmps
xor
sar
ins
sbb
adc
pop
push
lahf
mov
add
adc
je
mov
sub
bndstx
add
loopne
sbb
pop
dec
(bad)
pop
pop
xor
pushf
lods
test
fs
pop
pop
inc
or
fidiv
aad
ja
cld
pop
or
leave
div
and
arpl
fldcw
cwde
fist
fisubr
mov
pop
cwde
stos
or
int3
out
mov
mov
xlat
cdq
jmp
bound
lock
loope
imul
fs
push
jbe
mov
adc
aaa
xor
xor
cmp
rcr
aad
sub
gs
mov
sbb
addr16
popf
and
arpl
movs
fdivr
sbb
pop
pop
ret
jl
sub
fs
in
jbe
enter
mov
enter
xor
jle
mov
push
sbb
fst
dec
popf
cmp
fstp
jno
sahf
xor
push
mov
mul
cmp
loop
cwde
mov
imul
xchg
test
xor
push
fisttp
mov
push
sub
mov
xor
ror
out
fadd
mov
loopne
add
repnz
xor
cdq
arpl
(bad)
and
das
fmulp
je
imul
pop
mov
adc
aaa
xor
xor
xor
mov
jae
xchg
xor
dec
adc
stos
or
cli
scas
lahf
adc
mov
push
inc
sbb
mov
into
jno
xor
outs
jge
imul
add
ja
pop
adc
loop
addr16
outs
inc
jmp
imul
test
jmp
fadd
test
cwde
mov
mov
sbb
pop
sbb
sbb
inc
popf
dec
stc
ror
adc
xchg
test
ficomp
enter
mov
sub
out
lods
aam
push
ins
repnz
add
sub
fsub
dec
icebp
rcr
inc
xor
sub
(bad)
sbb
mov
push
retf
push
dec
mov
add
or
in
push
stos
sub
mov
out
scas
add
das
cmps
push
cs
adc
loope
or
test
add
and
push
push
jb
and
ffree
adc
fwait
sub
mov
test
movs
mov
sub
adc
xor
dec
popa
mov
adc
fdivr
test
jo
mov
arpl
in
push
cmps
xor
repnz
js
pop
mov
test
push
xor
mov
adc
pop
(bad)
gs
pop
data16
pop
pop
push
mov
fcmovbe
push
retf
es
add
jo
inc
rcr
mov
aad
push
pushf
jmp
(bad)
outs
movs
(bad)
callw
sar
leave
js
mov
jo
jecxz
popa
xchg
mov
mov
ins
and
sub
out
data16
add
out
retf
xor
(bad)
and
daa
test
ror
and
sub
neg
adc
(bad)
icebp
jge
mov
dec
rcr
loopne
call
mov
cwde
dec
mov
sub
mov
into
aam
or
scas
pop
icebp
pop
and
aad
push
xchg
cdq
adc
push
inc
xor
outs
adc
adc
pop
inc
loope
adc
imul
(bad)
mov
mov
add
xchg
aam
xchg
and
push
pop
xor
(bad)
ret
push
push
xchg
imul
ins
loope
xor
xor
xchg
push
dec
xor
loopne
repnz
fmul
movs
cli
sub
je
xchg
std
fisub
mov
xchg
mov
mov
je
xchg
inc
aaa
lds
xor
outs
inc
push
sub
pop
push
adc
cmp
adc
xor
aam
aad
jg
arpl
add
in
fcomp
push
sahf
pop
and
sbb
mov
cwde
mov
sbb
lock
adc
int3
add
jae
jbe
fcomp
out
std
adc
and
lods
mov
icebp
jmp
mov
pop
jne
push
mov
cmc
dec
ret
mov
mov
pusha
add
cmp
mov
inc
ins
push
mov
cmp
out
lods
bound
cdq
out
movs
sub
and
sbb
cmp
add
mov
jnp
rcl
sbb
push
ss
fisttp
pop
mov
repz
ror
push
xchg
icebp
adc
nop
and
pop
mov
xor
lock
xchg
add
push
xor
dec
jmp
out
mov
push
aad
cmp
loopne
lods
xchg
mov
rol
cmp
mov
mov
push
imul
nop
test
mov
adc
enter
mov
and
lea
mov
cmps
push
cs
lods
repnz
int3
clc
add
inc
xor
push
fsubr
mov
mov
add
nop
test
or
jne
xchg
cmp
call
mov
xchg
mov
cmp
fistp
xchg
jge
retf
jg
cli
call
sbb
sahf
sahf
mov
inc
mov
push
scas
xchg
and
sub
and
ss
push
iret
add
mov
mov
mov
sub
es
movs
add
shl
push
xor
push
dec
sbb
data16
int3
jb
test
out
pop
xor
lods
repz
mov
popa
cmp
mov
(bad)
scas
or
pop
push
mov
retf
xor
int
mov
rol
jb
inc
shl
bound
sahf
push
mov
jnp
mov
sub
mov
rcl
mov
pop
test
lods
call
shrd
xor
inc
test
jb
or
inc
lds
jbe
loop
dec
les
push
mov
lods
imul
jmp
mov
test
mov
in
call
mov
data16
call
xor
sbb
adc
je
push
out
(bad)
ja
scas
lds
test
stos
std
test
cmc
cs
cmps
sbb
and
mov
aaa
mov
xor
sbb
in
es
push
mov
popf
scas
stos
movs
xchg
dec
mov
adc
adc
into
or
call
dec
inc
mov
xchg
cmps
test
std
push
pop
imul
imul
out
dec
push
dec
sub
(bad)
xor
sub
cwde
mul
jae
jne
pushf
or
jle
add
cli
lods
mov
xchg
push
mov
mov
mov
xchg
add
sahf
sbb
mov
jns
xor
add
add
xor
and
(bad)
pushf
xor
jecxz
arpl
pop
push
stc
add
cmp
inc
fwait
ins
and
mov
aaa
je
leave
adc
in
mov
inc
cli
adc
mov
mov
mov
iret
fnstcw
outs
inc
cmp
mov
jg
pop
cwde
xchg
cmp
mov
mov
xchg
call
jnp
pop
pop
outs
mov
mov
fcom
push
movs
lods
sub
push
dec
xor
loop
mov
out
mov
mul
sub
fstp
push
or
jno
add
mov
push
mov
inc
xchg
rol
icebp
sub
sub
cmps
sbb
xchg
or
inc
xor
repz
push
or
push
mov
(bad)
lea
sub
sbb
push
repnz
lods
retf
dec
adc
movs
push
adc
xor
int3
in
sub
out
jecxz
fld
push
push
add
push
sbb
(bad)
in
add
dec
sbb
adc
out
push
cmp
mov
xchg
mov
xchg
daa
pop
pop
outs
xchg
sub
adc
push
xor
(bad)
enter
retf
pop
mov
xchg
fwait
stos
out
mov
or
rcl
push
inc
push
add
jo
inc
pop
inc
in
pop
rcl
push
push
fldenv
mov
jge
jp
adc
fnstcw
lods
mov
lock
and
inc
add
clc
jle
shr
and
xor
inc
out
repz
neg
sub
scas
ins
sbb
mov
add
and
addr16
add
xchg
(bad)
or
push
retf
adc
mov
inc
xlat
mov
lods
inc
fisubr
and
and
mov
push
ins
push
xor
mov
sub
adc
or
pushaw
sub
lahf
ffreep
outs
xor
es
jnp
ficom
mov
adc
inc
or
loope
pop
xor
xchg
sahf
adc
pop
cmp
xor
lahf
cli
test
lods
mov
push
jmp
fwait
pop
fimul
(bad)
fs
jl
add
shl
(bad)
shr
inc
mov
mov
sti
in
out
loop
inc
out
not
pop
ficomp
inc
mov
mov
sti
in
in
cld
pop
inc
ficom
or
pop
cmp
stc
test
data16
scas
(bad)
jno
inc
push
sub
icebp
and
les
jg
adc
(bad)
les
mov
xor
mov
mov
inc
stos
jg
pop
(bad)
aad
lea
inc
cwde
push
pop
inc
out
mov
retf
stos
(bad)
stc
mov
pushf
out
push
xor
xor
loop
aas
(bad)
push
jge
out
push
xor
sbb
cmc
jnp
stos
stc
mov
pop
repz
test
(bad)
movs
sbb
bound
(bad)
(bad)
xor
pop
and
fistp
stos
stc
aad
or
pop
loop
push
cmp
popf
call
mov
clc
sub
call
lods
test
mov
leave
in
pop
data16
xchg
jg
mov
cmp
jnp
out
ja
xchg
loope
cli
pop
push
fnstenv
lods
add
inc
int
in
mov
push
ret
push
(bad)
sar
push
pop
dec
imul
test
js
lods
ja
call
pop
adc
repnz
pop
test
fwait
xchg
stos
dec
in
pop
push
ja
rol
fist
mov
stc
imul
push
jnp
(bad)
pop
fnstsw
pop
cmc
push
addr16
jle
clc
rcr
test
out
xchg
(bad)
fsubrp
stc
cmps
fmulp
jle
stc
cmps
push
(bad)
jge
(bad)
movs
mov
adc
pop
pop
mov
mov
mov
cwde
lea
xchg
mov
sub
int3
jge
iret
and
adc
jg
xor
rcl
leave
push
cmps
sub
ss
cdq
popf
(bad)
(bad)
sub
add
inc
les
movs
jo
cmp
js
retf
cmp
xchg
xlat
mov
and
or
(bad)
push
loop
add
jae
add
lods
sub
add
add
test
out
les
rcl
rcl
sub
hlt
push
pop
mov
ja
stos
xor
xchg
push
ss
mov
xchg
xlat
outs
popa
popa
in
sub
cdq
movs
mov
adc
sbb
(bad)
jp
clc
mov
mov
sbb
adc
imul
or
lock
jmp
ja
adc
mov
mov
jns
mov
test
jecxz
je
sub
fistp
jb
out
xor
dec
inc
mov
mov
sub
pushf
xor
mov
pushf
push
mov
bound
aam
dec
pop
dec
mov
push
neg
outs
inc
dec
repz
sbb
and
ds
in
ss
ja
mov
clc
mov
push
ror
out
push
sbb
or
add
ja
sahf
mov
or
push
and
mov
mov
mov
adc
sbb
push
mov
sub
jne
jbe
add
arpl
mov
push
shl
aam
add
mov
cmps
cmp
cmp
imul
into
stos
xchg
mov
test
pop
dec
adc
sbb
ja
pop
adc
mov
add
jbe
adc
(bad)
dec
ficom
dec
pop
(bad)
in
retf
test
push
dec
mov
sbb
popf
dec
dec
sub
xchg
jecxz
into
push
jmp
cmp
jmp
outs
xchg
add
xor
das
sub
aam
ds
pop
ins
xor
test
inc
xor
cmp
pop
xor
sbb
outs
sub
or
fs
div
addr16
pusha
rol
dec
fmulp
xchg
shr
mov
test
test
xchg
loopne
in
push
add
repz
mov
xlat
(bad)
mov
aas
ds
mov
sub
adc
in
xchg
std
ss
jns
outs
sub
mov
test
fiadd
leave
dec
sub
lods
(bad)
add
or
rcl
imul
add
or
repnz
push
inc
dec
rcl
pop
mov
outs
addr16
fadd
mov
(bad)
mov
inc
inc
xlat
scas
or
mov
pop
(bad)
(bad)
sbb
pop
cmp
mov
add
rsm
lahf
aad
sub
les
movs
mov
and
js
sbb
fild
jmp
xchg
ss
mov
ins
iretw
dec
inc
fidivr
jmp
bound
jb
mov
imul
adc
out
cmp
mov
add
int
int3
mov
shr
in
(bad)
push
stc
fst
mov
fsub
mov
mov
pop
push
xlat
jnp
stos
cmps
xchg
out
xor
xor
cmp
and
call
and
ins
jne
sub
int
cmp
fimul
loopne
push
mov
test
(bad)
ds
popf
pushf
pushf
shr
mov
jno
cmp
imul
xchg
mov
out
and
cdq
jnp
pop
rcl
lds
ret
sbb
fdiv
mov
mov
fidiv
inc
sub
mov
dec
adc
sub
xchg
shl
xor
icebp
push
loopne
sub
icebp
rcl
xor
leave
sbb
push
out
lds
stos
inc
sbb
sbb
retf
or
jns
sti
in
test
mov
fisubr
repnz
inc
fs
adc
jmp
pop
imul
mov
lea
enter
mov
push
push
enter
mov
pop
and
mov
loop
sbb
ss
xor
out
int3
das
jne
push
dec
shr
xor
call
adc
leave
jle
pop
inc
mov
popa
aad
test
ret
jo
fwait
adc
cmp
sbb
repz
pop
jnp
lods
inc
xchg
push
aad
dec
adc
sbb
pop
push
imul
pusha
xor
jle
dec
aad
hlt
pop
movs
mov
shl
jmp
arpl
add
gs
xor
xchg
stos
or
int
aam
mov
pminub
aam
mov
jmp
lock
push
pop
mov
stos
xor
in
popf
xchg
enter
pop
and
adc
fwait
push
stos
nop
dec
out
ins
jno
pop
inc
pop
add
cs
or
or
lods
cs
xor
jo
test
xchg
aam
mov
mov
inc
jp
cdq
imul
rol
dec
fimul
mov
pop
mov
mov
inc
push
pop
mov
lea
mov
fist
or
add
and
add
leave
mov
mov
ds
cmp
adc
std
fistp
xor
push
in
pushf
add
outs
inc
xor
ret
je
stos
ja
mov
mov
or
popf
adc
push
leave
push
and
jecxz
add
outs
xor
adc
pop
jb
push
test
cld
sub
loop
repz
push
add
xchg
add
stc
pushf
jle
mov
dec
sar
adc
imul
push
out
je
(bad)
xor
cld
pop
add
jno
lds
jmp
cmp
mov
icebp
pop
and
retf
lock
xor
dec
int
shl
js
adc
imul
xor
mov
les
add
outs
enter
test
div
push
addr16
aad
cmp
mov
ja
adc
pop
xchg
lods
sbb
imul
push
repz
popf
mov
aaa
or
dec
inc
mov
cmp
leave
xor
dec
leave
dec
mov
call
mov
stc
cmps
mov
adc
xor
dec
iret
xor
mov
ret
in
imul
or
mov
mov
inc
(bad)
ror
movs
mov
shl
sub
ret
aaa
xchg
push
dec
sub
xor
cmps
mov
iret
mov
push
test
add
inc
in
sahf
stos
movs
mov
xor
push
xchg
sub
mov
stos
lahf
mov
lods
sub
test
sub
test
lods
call
dec
mov
jb
push
mov
xchg
jo
ins
mov
sub
pop
xor
inc
xchg
popa
jge
sbb
push
pop
es
not
enter
or
rcl
sub
dec
dec
and
dec
pop
or
int3
ss
add
mov
mov
ret
cmp
test
aam
or
shl
dec
xor
jle
and
aas
xor
cmps
js
xchg
hlt
ror
push
(bad)
(bad)
enter
pop
xchg
jo
ror
adc
adc
xor
out
fisub
int3
sbb
mov
movs
shl
mov
or
dec
imul
(bad)
jno
nop
test
adc
push
inc
lea
(bad)
xor
or
or
loope
fwait
dec
adc
ret
xchg
add
mov
mov
adc
jne
cmp
mov
mov
mov
mov
dec
push
not
and
int3
fist
jge
ffree
icebp
pop
adc
push
outs
lds
mov
jmp
ss
dec
arpl
adc
dec
loopne
inc
add
je
not
xor
loope
fist
mov
add
add
inc
stos
sbb
imul
mov
or
jge
sahf
jg
sub
sub
push
or
xchg
mov
sahf
pusha
mov
dec
pop
jae
fadd
mov
cmp
lods
xor
push
mov
and
out
into
jmp
xor
push
into
cwde
(bad)
inc
xor
jnp
cs
add
inc
(bad)
loopne
inc
or
push
shl
pop
cs
mov
div
scas
scas
ret
sub
dec
sub
jo
push
inc
test
pop
pop
add
aaa
test
push
dec
sub
push
cmps
add
movs
xor
rcl
mov
cmp
cmps
fwait
or
sahf
xchg
aad
mov
mov
ret
inc
sbb
loop
and
je
dec
call
mov
cmps
pop
rcl
cmp
mov
retf
cmp
stos
and
xchg
sub
mov
es
sbb
or
mov
inc
sbb
push
xchg
and
dec
scas
leave
pop
data16
imul
add
leave
adc
out
mov
add
xor
sti
add
lods
in
mov
ror
fsubr
cmps
retf
popa
test
push
push
in
test
add
stc
fwait
call
xor
push
or
stos
inc
addr16
hlt
ins
dec
es
lods
jnp
mov
sahf
and
cdq
rcl
xchg
out
xor
or
and
mov
mov
int
fidiv
cwde
ins
cwde
ret
mov
or
cmp
(bad)
xlat
pop
push
and
in
jmp
sbb
rcr
jmp
inc
ja
(bad)
repnz
ins
lahf
or
loop
lods
xchg
pop
or
pop
int
or
push
pusha
mov
inc
pop
ror
shl
sbb
xchg
jmp
add
jl
dec
sbb
add
pop
sub
pop
into
or
loopne
stos
mov
cld
rcr
lock
inc
pop
push
jmp
inc
jmp
sub
xor
push
push
fst
fidiv
mov
cmc
inc
mov
popf
arpl
mov
push
repnz
mov
scas
data16
xchg
lds
cwde
fsubr
inc
pop
ror
fstp
inc
outs
test
jne
push
int
push
sbb
ret
mov
add
push
push
xchg
mov
je
retf
add
retf
lds
and
jmp
push
dec
add
cmp
test
push
sub
cs
jno
es
xchg
add
xchg
imul
fld
pop
jnp
inc
or
mov
aad
or
loop
mov
dec
sub
(bad)
popa
mov
cmp
outs
cdq
mov
sub
mov
mov
mov
into
push
jb
in
gs
aaa
neg
push
jns
call
mov
aaa
fwait
mov
shl
in
mov
mov
cdq
mov
arpl
inc
pop
xor
inc
shr
mov
cmp
es
inc
xchg
cmp
hlt
pop
(bad)
bnd
arpl
cmp
gs
add
cmps
jbe
pop
pop
jl
stos
xor
inc
mov
mov
call
loopne
mov
or
jo
pop
adc
mov
(bad)
(bad)
mov
out
repnz
mov
xchg
and
div
mov
pusha
imul
add
jne
sti
add
mov
test
test
sar
int3
jl
sub
or
in
pop
loopne
xchg
in
mov
inc
cmp
pop
cmp
cwde
out
dec
push
retf
fs
mov
mov
sbb
mov
mov
push
or
lods
cmps
xchg
sub
test
fs
mov
jnp
mov
imul
xchg
add
movs
pop
popf
lods
mov
ss
ror
rcl
cmps
sbb
or
or
mov
mov
sub
pop
test
(bad)
push
loopne
and
popf
cmp
test
mov
adc
add
nop
icebp
pop
je
lock
aam
push
mov
in
dec
fild
add
push
movs
xor
movs
test
adc
rcr
fist
xchg
mov
pop
loop
or
(bad)
adc
arpl
bound
jmp
outs
push
loop
push
inc
sbb
pop
cmp
leave
cmp
pop
add
sar
dec
ret
cmp
push
cmps
add
inc
push
jno
lar
(bad)
les
inc
cwde
mov
dec
mov
out
push
idiv
pushf
pop
sti
push
jl
cmp
xchg
aad
pop
loope
ret
out
test
ret
(bad)
adc
jno
in
inc
xchg
sbb
push
ins
push
push
pop
imul
inc
fimul
jne
add
outs
test
and
neg
push
or
inc
sub
sbb
push
or
lds
xor
cmps
jae
jge
push
retf
rcr
loop
(bad)
xchg
aaa
mov
push
(bad)
lock
clc
fisubr
sbb
scas
imul
push
push
mov
xchg
mov
inc
dec
cmp
idiv
pop
xchg
xchg
arpl
xlat
mov
ret
lds
(bad)
imul
inc
js
add
pop
cmp
jecxz
or
adc
sub
mov
shr
pop
fstp
cli
stos
cmc
xchg
mov
mov
jo
pop
sub
sub
out
(bad)
xlat
and
loopne
push
cmp
xor
mov
dec
dec
sbb
aas
loope
in
sahf
sub
inc
enter
xchg
xchg
jle
and
cmp
mov
mov
fimul
add
add
cmp
jmp
test
dec
and
push
cmp
lods
jo
sub
movs
push
ins
enter
data16
pop
icebp
dec
and
lock
jno
ja
xchg
push
or
and
test
dec
and
mov
mov
sbb
dec
and
dec
inc
outs
add
push
dec
sub
sub
xchg
loopne
hlt
xchg
inc
pop
cld
aam
dec
inc
pushf
sub
inc
cmp
adc
dec
and
add
cmp
dec
push
xchg
outs
imul
and
and
and
adc
out
dec
and
xchg
push
dec
cmp
sbb
sahf
sub
sub
fimul
fcmovnb
and
cmp
and
xchg
jle
adc
xchg
dec
or
lock
jmp
mov
adc
xlat
inc
xchg
dec
sub
mov
test
mov
dec
and
movs
add
shr
mov
cmp
mov
stos
dec
and
and
cmp
xchg
dec
es
adc
add
movs
into
repnz
sub
(bad)
fldcw
add
call
add
dec
inc
dec
inc
add
add
add
dec
add
(bad)
fild
inc
add
add
push
add
push
pop
pop
push
or
adc
or
or
adc
(bad)
adc
adc
sbb
adc
push
sbb
and
push
and
and
daa
sub
sub
pop
sub
and
fild
inc
add
pop
pop
or
or
or
adc
sbb
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
or
ret
add
and
add
add
adc
inc
add
add
add
add
add
add
inc
add
add
add
add
add
push
push
push
or
or
add
add
add
add
inc
push
adc
popa
jno
adc
inc
adc
bound
loope
push
and
adc
mov
lock
arpl
xchg
mov
push
je
les
sbb
add
add
add
add
add
add
add
les
adc
add
add
add
add
add
add
add
adc
adc
xor
adc
popa
xor
and
push
(bad)
fiadd
or
add
add
add
add
add
fisubr
ficomp
sahf
and
and
fst
outs
mov
or
or
and
shr
cmp
push
fld
inc
fstp
sbb
outs
inc
xor
or
ins
call
movs
adc
mov
pop
lea
mov
rcr
(bad)
or
js
push
(bad)
add
in
mov
movs
xchg
cmp
cmp
fdiv
xor
rcl
push
leave
imul
pusha
clc
fst
adc
into
jnp
in
retf
jbe
fisubr
push
jl
xchg
xchg
scas
pop
in
mov
fld
sbb
pop
cld
cmp
sbb
ins
mov
cli
outs
mov
shl
mov
icebp
call
in
mov
or
cmps
push
mov
mov
inc
mov
sub
mov
mov
gs
sahf
sti
ins
aam
movs
jge
xchg
push
ret
inc
into
into
in
imul
addr16
adc
bound
mov
arpl
mov
in
fstp
adc
iret
mov
rcl
inc
push
fisttp
xchg
or
mov
xor
xor
add
fdiv
scas
or
mov
mov
jo
sbb
mov
ja
call
(bad)
in
sar
or
inc
pop
adc
jmp
lds
cmp
int3
shl
retf
add
sti
or
neg
repnz
dec
imul
(bad)
pop
ret
xlat
pushf
and
mov
popf
imul
into
pop
out
or
mov
leave
dec
and
cmp
and
inc
mov
jmp
jne
push
pop
add
add
pop
in
test
retf
daa
add
fcmovu
(bad)
aad
push
mov
(bad)
mov
je
mov
mov
fimul
inc
aad
adc
fprem1
test
mov
loope
mov
adc
rcr
out
test
int3
outs
loopne
rol
pop
fsubr
mov
inc
fsubr
out
jne
cmp
lea
sub
in
sar
out
mov
jle
mov
dec
sbb
ss
addr16
or
aaa
xor
and
ins
cmp
or
cmps
outs
icebp
mov
inc
sbb
arpl
push
mov
xor
fisubr
test
inc
xchg
push
and
loope
aad
sbb
cs
int
xor
outs
pop
push
push
add
push
add
mov
sbb
and
and
out
jle
mov
les
imul
icebp
pcmpgtd
bound
or
pop
add
retf
and
cmp
stos
xor
shr
cmc
cmp
les
inc
(bad)
out
mov
cmp
cmp
inc
pop
out
xor
dec
push
sub
mov
jb
xor
mov
pop
mov
xchg
stc
cmps
cli
fucomi
gs
xchg
retf
ret
rol
(bad)
cmp
ss
outs
push
leave
jmp
sbb
rcl
mov
mov
mov
push
adc
and
(bad)
jmp
cmc
mov
scas
adc
or
mov
bound
ins
push
xor
fld
inc
sub
pop
adc
dec
icebp
pop
mov
rcr
jg
push
adc
(bad)
xor
daa
sbb
repnz
mov
movs
or
xor
outs
fst
sub
ret
jle
xor
pusha
pop
rol
push
cli
dec
and
js
out
ss
mov
test
pusha
test
pop
adc
call
ss
xchg
mov
cwde
jl
pusha
push
jo
int
jge
push
lods
cmp
xchg
cmc
dec
sub
xor
adc
lods
ins
cmps
jne
fdiv
push
dec
retf
and
xchg
gs
cmp
pushf
pop
rcl
ins
cmc
sahf
into
sbb
mov
aad
push
sbb
inc
xchg
sbb
jle
pop
mov
xor
add
data16
dec
in
nop
mov
cdq
jb
pop
fist
call
add
hlt
imul
or
mov
xlat
push
aad
inc
cli
js
fcmovu
sub
add
jle
scas
dec
jecxz
cmp
adc
or
and
lods
mov
shr
in
rol
mov
inc
mov
add
adc
ja
fsub
mov
cwde
cmp
jmp
mov
shr
sbb
xor
sbb
add
xchg
xchg
pop
and
arpl
shl
mov
into
ret
movs
call
arpl
sub
mov
aaa
popw
mov
retf
or
dec
pop
mov
mov
bound
jae
sub
stos
imul
lods
dec
inc
cmp
pop
nop
and
test
mov
es
fcmovnbe
dec
sub
xchg
mov
and
pop
sub
xchg
adc
data16
jp
in
fcmovnbe
dec
dec
aaa
stos
or
loop
rol
push
retf
pop
iret
push
cdq
sbb
or
lock
push
sbb
adc
xchg
sub
daa
dec
adc
mov
xor
imul
sbb
icebp
into
or
ins
jbe
jmp
jns
outs
ins
jb
jmp
iret
ins
pop
push
sbb
bound
(bad)
fcom
pop
aad
in
push
loope
mov
jl
loopne
adc
dec
and
sbb
imul
div
jg
sar
popa
aam
lods
je
mov
jecxz
xlat
je
mov
push
imul
in
outs
stos
(bad)
out
int
shl
inc
imul
(bad)
in
imul
xchg
inc
rcl
mov
mov
bnd
pop
shr
pop
stos
stos
cmps
adc
and
cmp
mov
fdivr
sbb
cmp
sar
test
xchg
scas
ret
outs
inc
or
dec
xchg
dec
jmp
scas
mov
and
jns
inc
xor
movs
adc
call
in
cwde
in
pop
mov
cmp
push
hlt
out
imul
imul
stos
mov
test
sub
xchg
mov
sbb
and
bound
xor
mov
jns
jae
ins
movs
imul
lock
pushf
xor
dec
rcl
pop
(bad)
mov
push
inc
(bad)
pop
or
loopne
das
sub
stos
stos
jl
xchg
out
cmp
ret
fidivr
mov
pop
mov
jne
les
cdq
mov
cmps
sar
mov
sbb
dec
cwde
xchg
clc
neg
cs
test
xchg
add
sbb
pop
cs
nop
cmp
imul
outs
test
mov
xor
xchg
mov
arpl
pop
dec
les
aaa
or
jmp
fwait
daa
jbe
pop
push
popa
mov
mov
add
inc
cmp
push
xchg
mov
cmp
push
sahf
sub
clc
fs
mov
push
movs
lds
push
and
pop
pop
mov
adc
retf
xchg
out
loopne
sbb
enter
push
dec
xor
cmps
sahf
stc
repz
adc
(bad)
aam
clc
(bad)
imul
xor
xchg
or
pop
aad
imul
out
push
mov
cmp
in
inc
movs
and
xor
cmps
mov
mov
or
cmps
stos
mov
push
(bad)
nop
sub
dec
xor
sub
and
(bad)
movs
adc
movs
mov
pop
sbb
stos
mov
stos
and
fisubr
mov
and
or
mov
sub
outs
sar
jmp
fwait
aad
(bad)
push
bound
pusha
sbb
in
fidivr
add
jne
or
mov
addr16
sbb
pop
sub
sub
pop
pop
mov
mov
sbb
cmp
xchg
jg
mov
inc
dec
pop
stos
je
retf
js
jbe
or
push
fstp
fs
mov
xchg
push
fxch
jae
cdq
(bad)
in
push
(bad)
mov
cli
test
inc
mov
in
xchg
mov
int
stos
sub
xchg
sub
dec
xor
outs
in
outs
fs
neg
retf
push
data16
push
ss
dec
dec
push
inc
adc
stos
dec
or
add
cld
sbb
clc
lods
inc
sbb
dec
mov
or
pop
pop
jo
bound
movs
nop
nop
pop
neg
push
int
ins
out
cmp
cmp
cmp
test
jecxz
jno
dec
mov
xor
mov
bnd
fs
shl
pop
pop
add
mov
pop
out
rol
scas
ret
mov
mov
ss
jmp
sbb
add
sub
loop
mov
scas
mov
fild
call
popf
retf
int3
pop
ret
test
cld
lea
push
arpl
cmps
scas
aad
ror
arpl
ds
loope
dec
dec
es
fst
imul
and
mov
jo
mov
sbb
jmp
pop
leave
out
mov
js
add
inc
(bad)
mov
loope
xchg
pop
pop
jne
jecxz
sub
dec
mov
mov
xchg
loopne
repnz
(bad)
in
and
retf
loope
imul
data16
mov
xlat
cmovne
in
push
xchg
cwde
xrelease
mov
push
ss
addr16
mov
pop
das
or
jne
jo
inc
jmp
les
icebp
aaa
movs
jmp
jae
ins
cwde
scas
inc
(bad)
into
dec
xchg
mov
cld
jnp
movs
lea
mov
and
cmp
je
in
push
rcl
sub
adc
cmp
lds
xor
mov
inc
jl
lods
jae
jl
pop
inc
(bad)
loope
xchg
xor
mov
(bad)
and
int
jns
mov
stos
in
les
imul
mov
xchg
sbb
mov
jae
jne
cld
rcl
lods
push
rcl
pop
shr
(bad)
mov
pop
inc
das
std
pop
js
movs
adc
in
or
add
js
shl
xchg
inc
cli
xchg
imul
sbb
inc
in
xor
pop
mov
sahf
push
iret
sub
inc
mov
xchg
or
movs
cwde
(bad)
jmp
cmp
mov
aaa
pop
movs
lock
stc
lea
sar
xor
push
xchg
stos
ins
sub
imul
mov
cmps
xor
imul
int3
pop
jmp
dec
jge
jmp
pusha
adc
pushf
ss
sub
pop
mov
fsub
retf
mov
or
pop
xchg
into
add
push
cmps
arpl
sbb
add
pop
cmps
jnp
(bad)
push
mov
sub
and
pop
add
test
adc
icebp
push
mov
in
clc
mov
stos
sbb
imul
je
cmps
not
add
dec
xor
xchg
ja
adc
aaa
popa
mov
repz
pop
std
cs
jecxz
inc
scas
shl
ds
aam
mov
int
cdq
scas
cmp
dec
pop
inc
dec
call
mov
pop
cmps
mov
outs
xchg
lea
retf
retf
mov
sub
jp
push
mov
pop
ja
std
push
pop
sahf
mov
push
std
inc
(bad)
fmul
cmp
pop
cmp
jmp
push
cli
cmp
and
xchg
dec
test
cli
jge
sub
sahf
hlt
mov
arpl
inc
pop
retw
xor
xor
sbb
dec
pop
arpl
daa
test
pop
outs
out
xor
sahf
ss
icebp
popf
pop
test
or
sub
sbb
out
clc
cs
mov
inc
mov
shl
aaa
mov
into
shl
in
or
lods
str
xor
sbb
std
arpl
cs
add
xor
adc
pop
jbe
xchg
mov
mov
fistp
push
loope
stos
test
ficomp
add
cdq
mov
repnz
adc
rol
push
jns
xor
or
xor
and
(bad)
loopne
fwait
jmp
cmp
out
mov
es
push
scas
adc
cmp
xchg
mov
stos
retfw
aam
cli
sub
or
push
jae
xchg
cmp
dec
test
daa
cwde
mov
leave
out
lds
popa
int
dec
ficomp
adc
jbe
shl
jl
xor
mov
cmp
cdq
xchg
mov
mov
popf
les
mov
fsub
retf
fwait
(bad)
xor
sbb
enter
pop
mov
stc
pop
sub
mov
(bad)
xchg
xor
scas
push
int3
sbb
inc
imul
mov
pop
jo
or
jecxz
cmp
push
adc
movs
add
sub
jno
mov
stos
shl
cmp
mov
scas
push
mov
push
mov
jbe
mov
mov
mov
jmp
pop
dec
cmp
xchg
mov
push
xor
mov
ss
mov
call
shl
mov
imul
sub
popf
pop
test
(bad)
call
std
fdivp
es
mov
sub
inc
fisttp
fimul
mov
jno
dec
fdiv
leave
ss
xor
adc
fs
and
jb
pop
data16
jg
(bad)
loop
cmc
shr
pop
scas
push
pop
cmp
fdivp
clc
sub
dec
fdiv
sub
into
mov
and
movs
dec
push
push
mov
push
in
call
push
retf
fadd
stc
push
int
pop
gs
mov
sbb
sub
addr16
and
mov
lods
je
out
mov
in
mov
sub
lahf
push
nop
inc
int
inc
mov
push
fld
es
mov
arpl
and
sub
int3
sbb
icebp
inc
mov
add
pop
and
cdq
stos
or
pop
mov
movs
sbb
fadd
outs
mov
cmp
jmp
push
fwait
imul
pop
mov
mov
nop
mov
retf
je
test
adc
push
scas
jo
push
(bad)
or
test
(bad)
out
rcl
inc
sbb
cmp
daa
xor
lea
in
nop
jl
mov
cld
inc
add
stos
xchg
fbstp
jmp
xchg
adc
mov
std
fwait
lods
ins
mov
adc
lods
test
int3
jg
xchg
sbb
adc
outs
sbb
add
test
xor
dec
inc
mov
cld
adc
inc
push
xlat
gs
test
imul
cmp
out
iret
sub
test
stos
mov
pop
cmps
and
cmps
movs
xchg
inc
enter
cmp
dec
adc
pushf
jne
fnstenv
sbb
ret
loope
sbb
and
arpl
int
scas
loopne
mov
push
fldlg2
add
ds
cmp
sbb
pop
add
inc
or
and
mov
iret
cmp
test
xor
test
outs
jno
jmp
cdq
js
or
mov
inc
les
pushf
xchg
xor
lods
repz
movs
(bad)
inc
jmp
sub
or
adc
pop
inc
stos
xchg
pop
sub
jg
xchg
icebp
adc
push
adc
stc
sbb
les
jne
(bad)
push
cli
lea
sar
cs
fwait
sbb
sub
cli
(bad)
enter
imul
out
cmp
aad
sbb
mov
cld
xlat
lods
cli
sub
js
jno
fs
sbb
pushf
jne
(bad)
stos
hlt
pop
sar
push
dec
and
lods
and
into
push
mov
and
push
inc
enter
mov
pop
and
cmp
scas
xchg
(bad)
lds
nop
cmp
mov
mov
cdq
out
pop
mov
mov
fnsave
mul
scas
jl
cmp
lods
lods
jecxz
retf
ins
dec
out
sar
pop
aaa
les
xchg
mov
push
sar
rol
in
clc
lea
jg
jl
jbe
xchg
scas
outs
scas
jge
pop
inc
pop
ja
sahf
and
xlat
push
inc
inc
cwde
or
xor
inc
pusha
dec
popa
push
xor
and
scas
loop
adc
shr
sub
push
out
sub
retf
fidivr
repnz
test
test
das
les
stos
icebp
sbb
or
xor
push
fst
in
movs
mov
call
int3
sbb
pop
push
iret
retf
or
pop
mov
push
lods
in
sbb
out
stos
mov
jg
jecxz
lods
and
into
out
adc
in
push
pusha
jp
(bad)
call
dec
xor
test
dec
add
and
dec
add
dec
pushf
and
jge
(bad)
add
jo
jge
jg
push
xlat
and
sub
cli
or
imul
test
jns
jb
icebp
sub
add
cmp
cwde
nop
inc
stos
cmps
mov
adc
sub
inc
aam
js
inc
and
dec
inc
and
mov
mov
lock
hlt
push
pop
cmps
add
(bad)
arpl
mov
push
test
call
mov
stc
lods
jmp
push
sbb
cmps
push
mov
cld
sbb
retf
ds
(bad)
(bad)
pop
dec
dec
mov
fist
je
je
cmp
scas
mov
and
add
mov
adc
mov
mov
cmp
je
(bad)
cmp
or
and
inc
push
mov
pop
add
int3
sbb
lods
test
in
xor
popf
mov
inc
(bad)
mov
cld
push
xchg
xchg
cmp
push
add
test
jl
push
inc
cmp
jnp
imul
fwait
and
aad
loopne
out
cli
mov
pop
cmp
push
mov
imul
cmps
xor
jecxz
lods
cld
pop
mov
cmp
je
push
mov
inc
sbb
shl
scas
cmp
pushf
in
push
xchg
jecxz
cmc
adc
jno
popf
scas
mov
ret
xchg
xchg
inc
xor
(bad)
xlat
inc
sbb
adc
add
jo
inc
xchg
cdq
jae
nop
mov
daa
xchg
pop
sbb
jo
push
pop
jmp
dec
bound
or
cmps
jmp
fwait
xchg
push
pusha
push
adc
dec
pushw
xchg
mov
bound
bound
jmp
sub
scas
gs
cmp
repz
jle
xchg
or
cmps
nop
out
xchg
xchg
sub
cmps
cs
push
(bad)
or
cdq
test
arpl
sbb
retf
sbb
imul
je
fst
leave
pop
(bad)
(bad)
retw
ss
div
stos
jge
jno
mov
push
sbb
mov
add
lock
sbb
push
mov
xchg
cli
retf
movs
cwde
and
repnz
xchg
stos
fild
lock
sahf
stos
ja
cmp
enter
test
ins
and
std
pop
push
jmp
mov
sub
test
popa
int
in
mov
out
dec
cmp
adc
xor
pop
and
mov
dec
or
inc
xor
jo
cmp
pop
int
in
repz
stos
fwait
pop
push
(bad)
sbb
out
aad
into
les
les
mov
push
jmp
je
pop
int3
sahf
repz
stos
div
gs
push
xchg
int3
jno
imul
sar
ins
popa
jecxz
not
mov
lods
stos
jg
cmp
fsubrp
sub
jne
add
mov
mov
push
scas
jnp
sub
fwait
imul
fst
in
test
stos
push
inc
das
xchg
push
dec
stos
dec
adc
dec
clc
and
push
scas
sub
jmp
jnp
and
fild
call
push
pop
outs
dec
add
leave
jnp
hlt
pusha
ret
mov
in
cwde
xor
push
into
or
movs
jl
nop
push
mov
popa
mov
pop
mov
fistp
sub
lds
inc
jl
sub
mov
aaa
push
push
mov
in
mov
sub
or
out
jle
cmp
inc
(bad)
ja
or
and
mov
mov
jbe
pop
mov
mov
jae
out
jmp
lea
and
pop
hlt
mov
and
les
repnz
shl
cld
scas
inc
sub
dec
cwde
xlat
mov
push
jbe
xor
mov
nop
add
aas
adc
inc
mov
xor
(bad)
(bad)
jne
es
pop
push
mov
and
cmp
sbb
sbb
pop
dec
test
fsubr
push
iret
test
std
xlat
pop
jae
mov
aad
push
shr
push
icebp
xchg
xor
out
bound
sbb
repnz
sbb
or
xor
jnp
cmp
loop
(bad)
dec
idiv
and
pop
gs
mov
push
out
xor
jae
out
scas
clc
movs
and
std
sbb
sub
aam
mov
xchg
cmp
cld
retf
xor
inc
sub
mov
retf
scas
je
shl
xchg
or
mov
add
jle
push
mov
or
loop
cdq
neg
stos
fwait
push
lock
ja
lods
pop
jb
mov
and
sbb
xchg
and
or
push
out
and
push
dec
dec
int3
rcl
out
mov
clc
mov
das
test
xchg
out
inc
inc
fst
jo
movs
outs
push
jg
mov
pop
mov
sub
in
add
mov
sbb
jne
jnp
dec
test
mov
mov
add
xor
xchg
fbld
aaa
out
cld
xchg
shl
fnstcw
hlt
jb
mov
dec
in
mov
xor
xlat
ds
fstp
mov
stos
mov
and
push
out
sub
mov
inc
into
mov
lds
add
test
jne
and
test
pop
enter
test
dec
dec
aad
in
imul
push
(bad)
pop
(bad)
push
adc
xchg
lds
test
xchg
pop
sti
jmp
scas
jle
ja
stos
ja
mov
je
cmp
sbb
(bad)
loope
pop
adc
inc
jns
adc
push
inc
mov
push
arpl
pop
jbe
inc
mov
ret
in
xor
in
popa
(bad)
push
dec
dec
das
jb
test
fsub
and
jns
dec
xchg
addr16
dec
daa
ins
inc
push
jle
pop
jmp
mov
lds
cmp
out
call
pop
gs
into
pop
xor
data16
bound
outs
mov
sbb
sbb
cdq
pop
adc
cmp
xor
repnz
scas
(bad)
dec
push
jb
loopne
je
jge
pop
mov
dec
jns
jne
adc
dec
js
mov
cmps
call
retf
lock
mov
out
cmps
out
leave
int
cmc
jb
push
test
out
(bad)
jmp
test
cmps
shl
movs
mov
daa
bswap
iret
xchg
add
js
inc
push
push
push
mov
adc
push
das
test
jns
retf
xchg
push
cdq
mov
xchg
dec
jno
push
and
in
repnz
shl
retf
pop
xlat
cmp
out
nop
cmp
sbb
sbb
(bad)
lock
sbb
repnz
jno
mov
mov
adc
jmp
inc
sbb
outs
push
jmp
sbb
popa
xlat
outs
jns
les
mov
inc
cmp
aaa
add
(bad)
js
loopne
fld
jne
jbe
add
pop
es
adc
xchg
xchg
dec
(bad)
fdiv
imul
or
movs
cmps
js
mov
imul
pop
repz
or
jge
cmp
clc
fcomp
xchg
int
fnstcw
int3
xor
xchg
je
call
xor
cmps
push
sub
ds
mov
add
cmp
loope
adc
adc
jecxz
call
inc
xchg
das
jne
jo
add
jno
cmp
mov
jge
clc
outs
loop
gs
test
lock
ds
sbb
adc
mov
idiv
and
cmp
mov
fstp
add
and
cmp
shl
sub
cmps
push
push
inc
call
mov
jge
std
adc
shl
stc
inc
stc
mov
inc
sub
gs
rol
addr16
das
idiv
clc
sub
and
sbb
int
jmp
lods
fnsave
xchg
push
gs
into
cmp
stc
repz
es
and
std
enter
in
fcom
dec
jmp
pop
call
or
jb
sub
cmp
js
cmps
sbb
clc
test
add
inc
sar
scas
ins
cld
dec
xor
div
fimul
int3
xlat
pop
dec
mov
gs
popf
and
inc
test
lods
xchg
inc
cmp
pop
outs
mov
dec
push
adc
test
push
out
jge
pop
xchg
sub
dec
sub
outs
test
imul
hlt
into
je
xlat
push
xchg
daa
add
lea
xchg
adc
dec
pusha
movs
and
and
push
pop
ja
bound
int
jmp
js
sbb
sub
stc
pop
xchg
or
adc
test
repnz
xor
fadd
test
mov
push
mov
or
pop
add
out
call
pop
pop
fidiv
ins
mov
shl
scas
mov
sahf
dec
(bad)
fmul
sub
push
mov
xchg
stos
sub
push
aad
scas
jae
jae
mov
or
push
sar
in
or
sbb
inc
cld
xchg
push
cmp
mov
jle
inc
push
push
lock
in
and
mov
stos
push
cmp
and
inc
ret
jne
out
mov
imul
xor
call
jbe
add
mov
shl
aas
add
lods
loope
cmp
fisttp
popf
imul
xchg
xor
inc
push
sbb
push
and
inc
in
xchg
jg
repz
stos
sbb
inc
mov
popa
fmulp
cmp
cmp
sbb
(bad)
rcr
mov
aaa
test
stos
icebp
mov
adc
lods
sbb
cli
mov
mov
jmp
popf
movs
push
mov
sbb
adc
shl
rcl
(bad)
mul
ss
imul
mov
out
pop
adc
je
in
cmp
int
enter
push
frstor
mov
scas
inc
je
mov
adc
fist
inc
pusha
aaa
mov
(bad)
mov
lods
sbb
push
inc
mov
xchg
stos
xchg
int3
and
aas
jmp
sbb
xchg
adc
es
(bad)
(bad)
fimul
stos
lds
jbe
mov
repnz
cmp
pop
xchg
xor
mov
cmp
add
pop
mov
xchg
mov
movs
or
mov
imul
rcr
or
lods
xor
inc
pop
bound
fmul
ror
mov
js
mov
(bad)
jb
mov
cmp
sbb
xchg
jns
sub
xchg
stos
push
xchg
push
push
dec
dec
lock
pop
cs
clc
test
js
mov
sub
outs
dec
dec
sbb
ja
xchg
xchg
jmp
(bad)
mov
jl
mov
je
or
call
dec
ret
das
cli
jg
push
retf
xchg
(bad)
jns
test
cmc
pop
in
and
cmps
pop
jmp
icebp
mov
in
inc
sbb
nop
enter
lahf
pop
or
xchg
aam
ja
(bad)
pop
outs
loop
daa
shl
and
adc
xchg
scas
imul
test
sub
shl
pop
inc
push
popa
gs
cs
sub
iret
xchg
(bad)
or
(bad)
push
imul
jae
fsub
mov
mov
imul
sbb
mov
push
arpl
mov
outs
test
iret
retf
mov
loopne
mov
jo
arpl
lods
xor
leave
add
mov
add
mov
lea
jecxz
rcr
push
ins
add
jle
stos
shl
xchg
lods
mov
pop
cmp
cmps
cwde
jl
fidiv
xchg
sti
cmp
outs
sbb
cwde
inc
movs
lock
mov
cmp
pop
mov
sti
mov
mov
fwait
and
or
retf
push
adc
call
aad
(bad)
or
cmp
repnz
push
test
mov
jae
outs
xor
out
mov
and
sub
mov
cmp
aad
or
xchg
xor
fwait
inc
in
xlat
fidiv
cli
jns
cmps
mov
call
sbb
push
test
arpl
aas
cmps
jo
es
jp
lahf
fcom
iret
(bad)
int3
xlat
jnp
(bad)
ins
hlt
inc
and
imul
movs
into
cld
push
jae
or
ret
mov
loop
and
test
adc
test
xchg
cmp
xor
mov
xchg
fwait
cmp
pop
cmp
mov
push
dec
pop
xchg
dec
pop
and
adc
adc
loopne
popa
mov
retf
adc
movs
fldenv
jns
mov
rcr
xchg
xchg
xchg
add
xchg
test
sub
mov
cmp
jnp
clc
outs
(bad)
dec
sub
mov
cmp
scas
imul
or
mov
adc
mov
stc
das
and
sub
jmp
mov
adc
aam
mov
xchg
and
js
mov
mov
mov
fnstcw
jmp
adc
sahf
xchg
enter
inc
test
push
dec
enter
imul
add
push
outs
test
loop
xchg
cmp
out
fadd
jns
or
dec
aam
xor
jns
shl
xlat
pop
mov
xor
mov
push
iret
pop
adc
(bad)
sar
jmp
loop
dec
ds
sbb
stos
mov
loop
jns
fcomp
retf
jae
in
pushf
scas
pushf
das
mov
shl
and
outs
inc
mov
cld
jbe
jb
test
dec
and
sbb
adc
movs
xchg
call
ds
ja
daa
leave
repnz
out
imul
sub
push
push
push
pop
dec
dec
cmp
xor
test
mov
es
jns
cmp
xor
adc
adc
xor
gs
arpl
clc
int3
xchg
mov
aaa
int3
sub
call
xchg
rol
(bad)
(bad)
xchg
add
jmp
push
mov
push
leave
pushf
jb
mov
cmp
out
xchg
(bad)
mov
jo
arpl
or
xor
sub
ss
aaa
jne
push
jo
or
add
mov
aaa
popa
cmp
addr16
xchg
ins
mov
xchg
push
dec
in
out
push
pop
inc
sbb
stos
and
pop
and
repnz
inc
aaa
enter
sbb
mov
rcr
outs
adc
dec
inc
xchg
or
jno
and
mov
jns
dec
(bad)
stos
es
mov
dec
leave
sub
sbb
(bad)
fst
adc
fsub
xor
sbb
jae
mov
sub
jmp
addr16
in
xchg
mov
pusha
popf
and
push
icebp
js
sbb
(bad)
and
cmp
or
mov
mov
sahf
loope
dec
das
je
ret
lods
push
(bad)
(bad)
dec
mov
jo
cmp
pop
mov
mov
cdq
mov
xlat
pop
xchg
lea
ret
jg
fwait
clc
cs
cmp
jl
mov
xchg
sbb
push
mov
cmp
and
(bad)
mov
inc
push
or
push
mov
xor
popf
aad
retf
and
pushf
pop
sub
mov
test
lock
push
daa
call
ja
push
dec
pop
je
test
popf
mov
lahf
xor
sub
mov
lods
push
adc
cwde
jge
pop
mov
sbb
nop
add
pop
(bad)
mov
sti
stos
inc
mov
bound
push
in
and
jbe
adc
sub
les
pop
daa
jle
lods
jne
or
dec
pop
mov
ret
xchg
iret
mov
clc
test
outs
xor
ins
mov
(bad)
aaa
or
ffree
adc
fmul
lock
shl
test
mov
daa
push
xor
push
cli
mov
leave
cmps
ret
cli
mov
je
push
mov
ret
push
jne
sub
(bad)
(bad)
jb
push
sbb
mov
sub
cli
push
mov
sub
xor
push
jns
and
ret
icebp
mov
adc
in
sar
data16
aad
jge
imul
daa
push
out
mov
das
int3
into
lock
or
mov
and
call
loope
ret
data16
xchg
xor
add
pop
jae
dec
fs
test
cli
mov
out
in
cwde
push
dec
ret
mov
mov
mov
mov
scas
sub
mov
sahf
in
js
dec
cmp
gs
adc
and
arpl
jp
pop
xchg
int
or
dec
fsubr
push
jl
adc
push
inc
pop
pop
cli
inc
shl
or
add
sbb
xor
jnp
cld
xchg
mov
xor
in
xor
mov
xor
xor
inc
ret
mov
add
jg
dec
ret
dec
mov
inc
fild
rcr
mov
es
fist
setp
or
and
pop
jne
test
(bad)
fist
ss
push
aad
inc
cmp
retf
sbb
mov
rcl
mov
mov
in
jno
nop
xor
jp
sar
les
test
or
rol
lds
jl
and
call
jae
retf
imul
jmp
mov
xchg
out
sbb
pop
mov
xor
lods
xchg
mov
js
test
mov
lods
sub
inc
push
mov
mov
out
ins
pop
fs
add
push
mov
stos
jle
adc
cmps
addr16
add
adc
aaa
stos
in
jae
daa
loopne
xor
test
in
jl
and
inc
iret
pop
sbb
fcmovne
clc
dec
xchg
cmp
pop
into
cmc
mov
sub
ss
retf
and
inc
dec
nop
adc
lea
in
lea
adc
adc
aaa
ja
inc
ds
test
shl
leave
mov
lods
mov
lea
sbb
xchg
mul
in
nop
or
(bad)
repnz
daa
add
lods
in
mov
ret
mov
cmp
js
mov
xchg
mov
test
add
in
add
cwde
iret
mov
fld
cmps
cli
retf
out
scas
mov
cmp
pop
jp
daa
xchg
push
loop
pop
(bad)
fadd
mov
movs
retf
cmps
jmp
mov
enter
fisttp
mov
xor
add
add
mov
mov
xor
daa
nop
pop
(bad)
xor
mov
jl
pushf
outs
dec
pop
mov
mov
sbb
pop
mov
sbb
jmp
cmp
fisttp
mov
and
loop
jno
out
pop
stos
out
sbb
dec
lea
xchg
jne
inc
adc
add
sbb
(bad)
sub
outs
je
int3
stos
push
dec
add
nop
and
mov
or
add
push
inc
(bad)
jle
or
aam
mov
mov
lods
mov
fwait
jne
(bad)
fisub
gs
xchg
push
dec
je
pushf
je
cmps
or
sbb
bsr
rcr
xor
leave
push
test
lock
data16
push
push
push
dec
xchg
imul
xchg
push
sahf
push
ins
mov
ret
or
mov
mov
sub
mov
stos
add
mov
sahf
inc
fisttp
xchg
mov
cmp
mov
sbb
mov
(bad)
sub
adc
inc
mov
and
xchg
or
push
mov
adc
sub
fsubrp
and
retf
sub
lods
cmp
add
mov
fst
mov
and
cmps
jne
and
push
je
xchg
and
sbb
and
movs
cmp
sub
jb
add
add
test
neg
jmp
ds
push
popa
and
push
push
fsub
pusha
rcl
cmp
push
sahf
loopne
push
inc
sub
adc
jnp
nop
and
inc
adc
cmps
pcmpeqw
movs
sbb
mov
sbb
adc
outs
loopne
aaa
dec
or
(bad)
ret
inc
mov
ins
adc
add
rcl
dec
cs
sub
and
aam
fsubr
pop
xchg
mov
adc
call
adc
or
and
or
shl
pop
shl
mov
cwde
(bad)
jns
xor
mov
aad
cdq
retf
arpl
call
inc
cmp
adc
pop
adc
cmp
(bad)
div
sub
push
fstp
jne
popa
push
cmps
pop
mov
sub
icebp
push
cmp
adc
add
into
xchg
pop
fld
test
cmp
inc
adc
xor
add
or
xchg
xor
call
lock
mov
mov
xchg
mov
ficomp
outs
in
hlt
push
push
sub
in
sub
jmp
scas
mov
movs
clc
in
aas
xlat
mov
cli
jmp
test
fnsave
fisubr
xchg
loope
sbb
dec
fidivr
clc
mov
mov
cld
push
jb
pushf
lods
mov
aad
fadd
cmps
pop
(bad)
xlat
retf
jge
mov
lods
cli
sbb
adc
shl
mov
sbb
pop
mov
popf
gs
movs
adc
adc
push
lds
inc
mov
in
mov
(bad)
xchg
mul
movs
xchg
jge
jg
out
mov
fnstcw
jmp
mov
cdq
fadd
shl
hlt
mov
cli
(bad)
(bad)
imul
addr16
(bad)
jno
jbe
fdivr
cmp
das
sbb
mov
enter
cmp
pop
sub
bound
xchg
outs
xor
or
ss
loope
adc
in
(bad)
or
icebp
xchg
adc
mov
mov
shl
xchg
and
nop
mov
lock
aad
xchg
cmp
mov
fsubr
ins
cmp
popa
mov
out
sub
dec
(bad)
push
gs
cmp
movs
ret
sbb
popf
gs
lock
imul
sbb
imul
clc
mov
out
cmp
adc
aam
and
dec
and
dec
and
add
and
mov
sub
xchg
jo
add
out
into
fs
fist
shl
test
jmp
cli
dec
xor
sub
je
push
mov
ja
inc
arpl
mov
xchg
dec
and
test
test
sbb
cdq
sub
in
pop
das
mov
popa
lods
cmp
addr16
push
in
in
jmp
mov
push
mov
retf
sub
mov
pop
mov
ror
jb
dec
enter
adc
inc
in
daa
push
fs
jae
nop
jno
lods
push
jne
out
popf
push
push
jno
test
out
cwde
adc
add
aam
sbb
ffree
nop
sub
mov
rcr
es
dec
loope
(bad)
mov
push
and
mov
ins
stos
mov
xor
xchg
sbb
pop
ins
in
mov
cmp
jmp
je
pop
jnp
sub
pop
sbb
movs
mov
jnp
test
jnp
dec
and
ins
xor
pop
mov
frstor
jl
mov
dec
inc
push
pop
jb
ins
retf
sti
pop
push
fidivr
int3
shl
movs
xchg
push
sbb
in
mov
sbb
add
jne
test
pop
add
push
jecxz
adc
movs
pop
ins
mov
leave
fisub
je
fmul
dec
sbb
pop
dec
sub
pop
xchg
dec
and
cmps
enter
mov
gs
push
mov
mov
test
retf
inc
push
jns
dec
outs
and
cli
call
or
cdq
dec
je
sbb
dec
jge
cdq
int
push
add
test
pop
pop
dec
inc
out
cmp
ret
scas
pop
test
out
leave
mov
movs
out
out
test
div
retf
cmps
in
call
cmc
sub
mov
cmp
pop
mov
pop
jmp
into
imul
and
pop
push
sbb
shl
xchg
shl
xor
jae
add
stos
clc
add
and
push
add
xor
fwait
inc
aad
jp
mov
inc
ret
sub
stc
sub
sahf
dec
cmp
lods
mov
dec
icebp
cli
xor
pop
imul
movs
xor
fs
pusha
pop
gs
inc
outs
inc
adc
xchg
lock
ds
push
cdq
xchg
and
aam
sbb
(bad)
push
fwait
xchg
sbb
and
xor
(bad)
adc
push
mov
call
ss
and
xchg
scas
jb
adc
dec
add
dec
xchg
loope
sar
or
fs
inc
sub
or
leave
js
cwde
(bad)
scas
retf
xchg
loop
popa
mov
push
out
gs
push
icebp
(bad)
and
jmp
xor
popf
pop
inc
pop
rcr
pop
pop
in
das
enter
mov
mov
daa
mov
push
xchg
dec
cmp
test
cs
dec
push
sahf
(bad)
call
inc
inc
push
mov
xchg
lods
popa
jmp
or
push
adc
inc
xchg
push
mov
lods
push
les
adc
fcom
je
jns
push
gs
js
not
push
dec
xor
fidivr
icebp
pusha
jns
pop
dec
and
pop
cmp
mov
jns
pop
mov
icebp
or
pop
outs
outs
and
mov
test
ror
jne
retf
add
aas
leave
stos
xchg
mov
cmps
je
push
int3
inc
(bad)
push
push
xchg
daa
or
sahf
hlt
inc
ss
jno
adc
and
pop
dec
mov
test
jb
and
jmp
fadd
bound
call
fiadd
adc
out
jbe
pop
mov
mov
scas
adc
fidivr
and
xchg
(bad)
stc
and
xor
adc
into
or
pushf
and
(bad)
retf
in
jae
pop
pcmpgtd
mov
mov
cmp
imul
call
cs
inc
retf
jp
test
push
jmp
pop
dec
sub
dec
in
fsubr
or
jl
mov
pop
inc
retf
bound
(bad)
xchg
xchg
std
cmp
xlat
lahf
or
mov
sbb
rol
sti
push
sub
and
dec
jns
arpl
fstp
(bad)
jno
dec
or
push
inc
dec
into
sbb
cmc
mov
es
ins
cwde
cmp
clc
push
jmp
nop
jg
mov
pop
(bad)
repz
jecxz
push
mov
sbb
(bad)
push
inc
leave
xor
ins
mov
fimul
lock
dec
push
jo
scas
xor
psrlw
dec
(bad)
pusha
stos
jbe
inc
pop
cmps
and
pusha
pop
jmp
jo
cmp
out
xlat
push
lahf
icebp
test
movs
cmps
mov
add
cmps
(bad)
pop
jg
int3
rcr
xchg
pop
pop
pop
test
ret
push
ror
add
mov
inc
mov
push
lods
push
aam
loopne
jo
sar
fisttp
jmp
push
das
cmps
aas
fnstsw
mov
lahf
xchg
mov
imul
sbb
out
add
ins
aam
sbb
test
xor
mov
sub
shl
push
fld
ins
push
daa
pop
mov
movs
sbb
pop
inc
inc
cwde
(bad)
ret
add
mov
test
arpl
and
dec
(bad)
pop
xchg
push
aaa
sbb
lea
test
mov
xchg
sbb
fwait
xor
and
push
inc
loope
and
je
(bad)
inc
das
mov
loope
or
mov
adc
out
adc
loopne
out
pop
push
or
dec
out
mov
fist
pop
xlat
xchg
mov
sub
cs
popa
and
adc
cmp
sbb
sbb
or
enter
mov
push
mov
add
push
cmp
push
lds
aad
push
into
and
add
inc
sub
add
mov
adc
jl
sbb
xchg
pop
add
sub
fidivr
mov
out
das
cwde
ins
cmp
mov
fcomp
(bad)
cmp
push
push
xlat
rcl
sub
sbb
mov
test
in
mov
dec
idiv
leave
es
(bad)
lods
leave
mov
push
pushf
or
dec
push
and
dec
inc
xchg
dec
sub
imul
data16
popa
test
fucomp
and
(bad)
fs
cmps
ja
jge
inc
fwait
repz
and
loopne
push
fldcw
mov
lock
fcomp
jns
push
add
cmp
into
(bad)
inc
sbb
mov
ja
dec
or
int
arpl
add
sub
push
in
pop
(bad)
mov
push
cmp
jae
sub
movs
clc
fs
fidiv
cld
nop
shl
push
iret
sbb
fist
mov
stos
adc
in
or
loopne
mov
sahf
repz
stos
inc
mov
icebp
mov
ins
lods
adc
enterw
and
or
mov
push
aad
cs
loopne
arpl
pop
mov
sbb
xchg
or
mov
fwait
sbb
leave
sub
(bad)
aam
mov
mov
push
dec
lds
inc
fstp
pop
daa
aaa
mov
gs
enter
pop
or
inc
jge
or
sbb
sub
and
(bad)
jle
test
mov
xchg
gs
dec
stc
mov
jo
or
xchg
sub
jns
ins
lea
fnstcw
call
scas
cdq
inc
adc
mov
test
icebp
mov
ret
ins
leave
aad
inc
push
cmp
in
jl
imul
mov
jmp
push
scas
hlt
fwait
pop
je
pop
leave
jns
jno
xlat
outs
add
lods
retf
outs
mov
aas
shl
ds
adc
neg
push
bound
sbb
and
(bad)
repnz
xlat
mov
(bad)
bsr
pop
and
sub
aas
jp
mov
imul
std
add
push
xchg
cmp
pop
mov
hlt
aad
(bad)
icebp
pop
lock
jg
ficom
lea
fs
aas
xchg
repnz
inc
inc
adc
pop
fiadd
mov
dec
push
xchg
mov
adc
mov
dec
jmp
push
or
clc
xchg
fwait
push
jmp
jl
mov
stc
adc
not
sbb
xchg
mov
add
dec
jmp
shl
test
jp
lds
cmp
jae
jnp
adc
retf
add
mov
adc
dec
(bad)
xchg
cmp
sbb
adc
push
sub
loopne
add
add
push
cmps
ins
dec
jl
adc
sbb
mov
(bad)
push
dec
iret
dec
cmp
imul
(bad)
int
iret
dec
mov
pop
ffreep
sub
push
xor
gs
js
outs
pop
das
in
ucomiss
js
sub
mov
in
pusha
nop
pop
sub
and
out
test
(bad)
ds
pop
xor
hlt
mov
out
loopne
clc
dec
jg
jg
pop
xchg
sahf
add
add
pop
cdq
mov
inc
inc
mov
in
pop
dec
push
(bad)
add
add
mov
mov
mov
add
scas
jle
dec
push
(bad)
mov
dec
sbb
fadd
push
add
cli
push
lds
sbb
les
aas
dec
xchg
cmp
cmp
bound
sti
and
frstor
aaa
movs
jl
rcl
push
pop
dec
sbb
mov
pop
out
jg
out
pop
add
icebp
inc
call
inc
or
inc
leave
xor
pop
ins
hlt
cmps
les
jo
ror
out
jl
icebp
stc
scas
je
lock
je
mov
xor
pop
pop
jle
clc
add
mov
mov
or
cmovne
pop
mov
arpl
cmc
and
hlt
mov
cmp
lock
xchg
mov
clc
das
cmp
jb
push
and
jmp
jp
mov
aas
mov
jmp
arpl
mov
push
in
adc
jns
cmp
in
jmp
scas
stos
sub
(bad)
in
ins
test
jecxz
sub
outs
jns
mov
loope
inc
and
data16
xchg
int
push
retf
lds
or
push
bswap
dec
stos
fidivr
lock
sahf
push
sub
mov
call
adc
(bad)
and
sti
xlat
adc
cmp
adc
adc
out
sbb
push
xlat
mov
adc
sub
mov
sbb
xchg
(bad)
pop
jno
jg
movs
fisubr
xchg
jo
inc
loop
ins
fimul
jns
in
inc
aas
and
call
adc
clc
jb
das
adc
aas
neg
adc
(bad)
cdq
outs
fisttp
out
cmps
hlt
lods
and
loope
aaa
std
pushf
(bad)
cmp
mov
in
imul
movs
movs
cdq
call
das
cmps
sbb
mov
xor
jg
idiv
(bad)
lds
cmps
call
fiadd
jle
xchg
in
push
sub
rol
fmulp
xchg
cmps
hlt
mov
test
inc
imul
and
pop
add
popf
push
xchg
sub
(bad)
(bad)
mov
push
push
add
imul
shl
xchg
xor
push
lea
push
popa
xor
loopne
xchg
cmp
ss
mov
mov
movs
xchg
addr16
retf
dec
aas
push
out
mov
rcl
dec
(bad)
test
sahf
fist
jno
lods
rol
dec
mov
gs
cmps
jae
lahf
push
mov
or
call
aad
sub
movs
ror
jmp
fwait
ins
int
int
rcr
cmp
sub
sar
dec
inc
test
iret
outs
movs
add
inc
loop
lock
scas
sahf
mov
(bad)
sbb
jno
mov
add
cmps
and
addr16
inc
jg
push
sbb
sahf
pop
or
clc
xchg
xchg
pop
mov
in
clc
mov
sbb
es
aas
clc
add
sub
xor
ds
xchg
adc
cs
fnsave
and
mov
popf
push
out
cwde
xchg
pop
outs
mov
mov
cdq
es
fdiv
push
loope
inc
dec
dec
mov
fnstsw
aad
cs
rcl
rcl
mov
ja
ds
jno
rcl
and
loop
and
test
mov
inc
enter
sbb
sub
xchg
sbb
fstp
mov
xchg
add
test
mov
ins
leave
push
inc
les
cmp
add
in
push
cmp
arpl
into
jne
inc
adc
les
sub
xlat
lock
inc
xchg
scas
mov
pop
and
cwde
xor
mov
dec
(bad)
dec
shr
repz
pushf
pop
shl
out
scas
bound
xor
in
and
leave
push
and
pusha
jne
pop
cmp
sbb
in
push
loop
ret
call
cmp
jno
nop
jns
test
add
dec
jmp
rol
pop
sub
cld
shl
cmp
test
clc
sub
jae
adc
push
cmp
das
jno
shl
lods
or
clc
jns
sahf
fcmovnb
leave
pop
dec
cmp
jle
xor
adc
mov
call
lock
aam
sub
and
bound
and
inc
xlat
loop
popa
in
loope
sti
lds
(bad)
repnz
sub
jmp
xor
mov
inc
fcmovu
adc
push
add
push
mov
and
fld
mov
fistp
xchg
(bad)
xlat
data16
test
out
mov
test
out
pop
xchg
pop
xchg
aaa
xor
cwde
or
add
and
push
cmp
shl
fisttp
push
jge
pop
inc
int3
scas
jge
mov
call
xchg
push
inc
fist
retf
cs
imul
inc
xor
cmp
push
repnz
cwde
leave
clc
adc
and
loop
adc
push
ja
dec
std
retf
mov
(bad)
in
in
repz
inc
sbb
(bad)
les
or
movs
jecxz
mov
or
push
or
stos
add
inc
and
push
bt
lods
sub
cwde
cmp
ficom
ja
inc
adc
cmps
ss
mov
sbb
popa
scas
pop
jg
or
push
mov
fistp
les
and
mov
add
stos
mov
mov
pop
mov
push
xor
fisubr
ins
add
imul
ins
js
mov
out
and
test
push
xchg
inc
dec
xor
pop
mov
jp
popa
shr
mov
push
sub
mov
inc
movs
jne
sbb
mov
mov
or
inc
leave
xor
mov
dec
bound
retf
jbe
push
pusha
jno
loopne
mov
lds
repnz
cwde
retf
mov
cmps
popa
sbb
and
jle
mov
loopne
pcmpeqd
stos
outs
das
jbe
loopne
imul
adc
xchg
sahf
nop
js
call
jb
mov
aad
add
xor
mov
jb
and
dec
cmps
hlt
test
mov
jge
lods
mov
mov
bound
cmp
das
adc
test
push
mov
call
imul
push
mov
push
arpl
scas
mov
pop
or
sub
int
ins
add
leave
outs
ret
(bad)
xor
xlat
inc
iret
cmp
clc
in
jmp
xchg
fwait
jne
shl
push
fwait
cdq
popf
cdq
imul
icebp
gs
ins
pushf
pop
push
pop
sbb
arpl
mov
cmp
in
nop
ficomp
sub
dec
scas
stos
jne
sub
int3
dec
mov
imul
das
xchg
shl
movs
scas
pop
ret
data16
mov
out
sbb
add
(bad)
dec
xchg
imul
xchg
retf
mov
inc
xor
push
sbb
shl
test
jne
test
inc
dec
xor
jne
imul
pop
or
fcomp
pop
mov
adc
das
test
xchg
ror
repz
and
test
cli
test
inc
mov
imul
adc
shr
xor
sub
outs
xchg
unpcklps
movs
cs
mov
cmp
xor
mov
fld
(bad)
sahf
fdiv
aad
xchg
mov
pop
aaa
adc
ins
cli
(bad)
jl
popf
xchg
sbb
jo
test
mov
pop
push
jp
out
xor
sahf
das
xor
inc
(bad)
xchg
mov
pop
xchg
push
dec
outs
stos
imul
loope
push
dec
push
xor
add
aam
and
ror
(bad)
leave
daa
aaa
cmp
mov
cmps
push
mov
mov
xor
or
cmp
add
mov
xchg
scas
cmps
mov
mov
cwde
aad
sbb
pop
push
jecxz
dec
inc
push
pop
call
sbb
cld
push
mov
nop
fisttp
mov
push
xor
pushf
mov
fcomi
or
lods
push
or
(bad)
leave
cmps
cmp
dec
push
stc
pop
out
sbb
leave
cmp
hlt
repnz
add
dec
pop
aam
push
sbb
into
rcl
pop
and
xchg
ss
cs
aaa
push
adc
push
cs
pop
push
mov
lds
mov
push
add
push
xchg
int3
not
mov
iret
cmps
add
mov
icebp
in
xchg
inc
shl
(bad)
in
cmp
xchg
adc
and
ret
shl
or
mov
push
ret
pop
dec
cdq
xchg
sub
xchg
fnsave
int
out
sub
dec
inc
(bad)
call
cs
test
add
xchg
inc
xlat
xchg
add
push
mov
in
jbe
ins
mov
xchg
or
xchg
pusha
jmp
out
fidivr
pop
inc
in
in
mov
ss
data16
dec
jmp
push
pop
ins
dec
and
pop
dec
xor
aam
fs
mov
lea
sbb
push
adc
retf
lea
sbb
adc
and
push
add
pop
add
jg
add
inc
cmp
push
xchg
adc
push
and
mov
push
dec
movs
push
popf
add
inc
movs
cwde
or
test
pop
call
or
addr16
mov
pop
jle
inc
jb
xchg
xchg
mov
inc
leavew
adc
scas
out
sub
push
xchg
mov
lahf
mov
inc
mov
add
int3
and
test
(bad)
mul
outs
fimul
mov
push
dec
sbb
cli
push
inc
ins
jbe
pop
sub
test
and
push
xlat
push
js
xchg
fwait
sub
xchg
pop
mov
dec
dec
mov
fnstcw
test
icebp
dec
call
shl
(bad)
cwde
pop
outs
sub
movs
fldcw
mov
jmp
arpl
sbb
imul
mov
push
cmp
popf
mov
sub
cli
adc
int
push
inc
xor
mov
add
movs
mov
aad
dec
je
and
xor
cmp
shr
mov
dec
jnp
popa
std
mov
cmps
ins
xor
cmp
jno
pop
fsub
pop
add
mov
into
outs
xchg
inc
xor
cmp
push
sbb
xchg
sub
mov
xor
mov
mov
movs
push
rcr
jl
xchg
in
lds
jmp
push
sbb
movs
data16
daa
ins
sti
jns
or
sbb
pop
mov
cmc
pop
aad
mov
and
push
cmps
loopne
fst
sbb
ret
pop
(bad)
cld
push
cmp
clc
mov
mov
cmp
mov
test
xchg
or
(bad)
test
sub
mov
or
or
out
xor
call
or
dec
mov
or
xchg
xchg
dec
inc
retf
imul
push
pop
add
into
add
xchg
arpl
out
sar
or
sbb
fdivr
inc
jne
adc
aam
fisubr
inc
sbb
pop
outs
or
rol
pushf
ror
cld
mov
jne
adc
sbb
sar
or
adc
fdivr
sbb
sbb
mov
out
mov
xlat
loope
sbb
or
mov
cmp
rcr
mov
hlt
test
fsubr
jno
push
pop
enter
dec
sub
test
scas
lahf
xor
(bad)
adc
sub
pop
popw
in
push
mov
inc
xor
arpl
sub
scas
outs
fisub
sbb
je
push
adc
imul
or
cmp
jns
stos
ret
bound
xchg
pop
sub
inc
cmp
fwait
pop
xor
jb
xchg
add
shl
and
add
or
push
mulps
test
iret
rol
outs
add
cwde
ret
ja
push
mov
push
push
mov
add
les
daa
stc
das
inc
ins
ss
jmp
fstp
jno
int
adc
shl
out
cs
jmp
lea
ins
push
fcom
push
jecxz
mov
push
xchg
xchg
lods
mov
nop
pop
in
push
(bad)
lahf
leave
imul
pcmpeqw
adc
push
xlat
mov
sbb
sbb
mov
dec
inc
out
jno
aam
fsubr
or
and
jb
sbb
sahf
test
add
test
ja
(bad)
retf
push
(bad)
rcr
sub
arpl
imul
jb
es
gs
mov
xchg
outs
mov
mov
mov
call
bound
popf
ret
out
imul
xor
out
cmp
sahf
retf
sahf
loop
cmp
daa
or
leave
dec
mov
lock
ret
mov
inc
mov
mov
sub
loop
pop
push
xchg
adc
push
cmp
push
pop
sub
pop
ins
fmulp
inc
inc
jecxz
mov
lods
enter
test
inc
dec
mov
in
clc
cmps
adc
sar
out
mov
inc
push
sub
packuswb
jecxz
call
call
ja
jmp
xchg
imul
cwde
jmp
es
(bad)
fs
cmc
mov
sbb
push
xchg
mov
fnstsw
push
xor
into
enter
nop
pop
jecxz
xchg
ins
xchg
sbb
inc
fcomp
push
pop
mov
lea
mov
movs
adc
mov
inc
inc
xor
sbb
loop
pop
jle
xor
dec
scas
and
mov
es
xchg
mov
icebp
fnstenv
scas
test
jne
sbb
imul
int
inc
imul
in
ds
pop
dec
push
pop
rol
pop
sbb
loope
inc
and
or
or
add
in
xor
retf
pop
cmp
loop
jnp
sub
or
bound
mov
pop
jns
inc
cmp
fadd
cmps
std
jae
inc
loopne
(bad)
movs
xor
sbb
std
aas
adc
add
(bad)
add
xor
scas
in
sbb
push
dec
f2xm1
loope
adc
inc
push
and
imul
fisttp
je
inc
mov
mov
pop
push
ret
sti
sbb
pop
(bad)
push
and
mov
add
ss
mov
mov
mov
ret
jo
sbb
cwde
lods
dec
or
data16
(bad)
push
xchg
add
(bad)
fidivr
xchg
cmps
mov
push
je
imul
xor
jae
lea
xchg
fidivr
push
inc
xchg
out
push
loope
dec
les
inc
xchg
retf
(bad)
pop
inc
test
inc
aas
je
lods
mov
xchg
ret
sbb
icebp
bound
adc
xchg
or
xor
inc
and
dec
inc
scas
dec
jg
inc
movs
fwait
in
add
and
and
xor
or
adc
xchg
sub
or
adc
adc
push
das
fidivr
mov
sub
enter
sub
dec
xchg
and
add
jp
jnp
xchg
sub
mov
xchg
pusha
adc
xor
fs
jne
and
lds
icebp
or
jmp
inc
adc
movs
xchg
dec
mov
fldcw
mov
into
jle
xor
mov
mov
fadd
shl
pop
inc
mov
inc
xor
enter
loop
lea
sbb
popa
jp
sbb
jne
sti
xor
das
xor
cld
push
mov
jmp
add
pop
mov
pop
cdq
pop
les
mov
scas
xor
jnp
(bad)
inc
sbb
sbb
cld
dec
loope
(bad)
mov
int
cmp
add
cmp
mov
jae
adc
hlt
adc
or
jb
sub
pop
daa
inc
imul
inc
lods
imul
cmps
sub
and
fwait
fs
pop
ss
lods
cmps
jmp
dec
lods
mov
call
xchg
pop
outs
scas
data16
ins
pop
mov
adc
push
mov
sbb
aam
add
dec
jl
add
push
gs
mov
sar
popa
or
mov
enter
cmp
mov
sbb
(bad)
adc
outs
(bad)
loop
or
ins
stc
das
pop
mov
jbe
mov
daa
loopne
bound
and
pop
jle
adc
sub
cwde
pop
dec
jp
or
sub
pusha
mov
sub
cwde
cmps
jns
test
mov
ret
loopne
fcomp
jbe
mov
push
leave
push
out
dec
sub
add
mov
mov
pop
imul
imul
cmp
popa
mov
sbb
jecxz
stos
mov
imul
sbb
jg
inc
jge
push
stos
xchg
xchg
jo
mov
pusha
ins
(bad)
shl
adc
xor
sub
pop
push
stos
xchg
leave
sahf
outs
mov
cld
push
cs
adc
jb
stos
test
sub
(bad)
mov
(bad)
or
fwait
xchg
imul
jnp
jmp
push
sbb
call
cmp
push
add
lea
xchg
call
fcomp
adc
inc
arpl
sahf
test
mov
or
inc
add
outs
xchg
inc
aas
xor
xor
test
lea
sbb
fiadd
fst
dec
fiadd
repnz
pop
cmps
jle
js
push
movs
movs
mov
(bad)
add
mov
mov
movs
cmps
mov
adc
rcr
jmp
stos
mov
xchg
cmp
(bad)
retf
jmp
push
leave
pop
sbb
push
icebp
add
fstp
inc
in
and
(bad)
sub
out
lea
retf
xor
jmp
mov
retf
call
mov
mov
and
fsubr
js
loopne
fsubr
jne
xor
aas
sub
retf
mov
mov
inc
mov
adc
(bad)
xlat
pop
call
pop
or
movs
xchg
or
in
(bad)
fidivr
xchg
mov
out
mov
pop
jae
cmp
xchg
enter
xor
aaa
inc
(bad)
sub
jb
adc
adc
cmp
jno
and
test
mov
jbe
add
xchg
ds
and
int3
adc
push
mov
retf
xchg
daa
stc
sub
cmp
add
mov
push
sbb
push
(bad)
push
jbe
adc
dec
ss
xor
cmps
mov
fstp
jb
mov
inc
jp
mov
adc
lsl
imul
in
add
iret
add
jno
leave
outs
mov
outs
xor
inc
cmp
outs
add
(bad)
dec
aam
push
cmp
movs
xchg
push
inc
mov
jne
push
je
push
pop
retf
jo
add
fisttp
mov
or
xchg
div
xor
xchg
mov
jmp
dec
repnz
leave
dec
aam
dec
es
mov
mov
sub
out
aam
sahf
movs
xor
imul
inc
stc
and
pop
(bad)
neg
fcomip
jg
sbb
dec
cld
aas
cld
mov
clc
pop
jo
mov
mov
pop
and
daa
inc
(bad)
xchg
loope
push
pop
inc
sbb
loop
dec
pop
mov
adc
lahf
jmp
test
jb
aaa
inc
add
sahf
dec
and
mov
jg
dec
mov
fldcw
int
call
sub
jle
test
cmp
test
pusha
xchg
inc
hlt
inc
test
int
lea
adc
jo
movs
fnstenv
dec
arpl
inc
inc
dec
or
cwde
jns
adc
jnp
adc
sbb
mov
fistp
test
popa
cmp
cmp
lea
add
pop
mov
pop
fist
and
sbb
pop
mov
jle
cmp
inc
aam
inc
scas
mov
or
imul
data16
cs
push
add
ins
addr16
push
xor
call
sbb
imul
or
xchg
rol
inc
xchg
cld
adc
arpl
xor
sub
mov
or
and
jl
clc
adc
stos
scas
xchg
scas
pop
shl
jge
je
mov
xor
cmps
cwde
ret
xor
stc
mov
xor
jle
scas
shl
sbb
retf
fldcw
add
inc
xlat
sbb
je
jbe
sar
cld
jne
ds
stc
scas
stos
jl
xor
push
das
sbb
cld
mov
shl
add
fs
jae
jecxz
cdq
retf
dec
enter
jnp
fwait
test
mov
(bad)
xor
cmp
lock
xor
ret
into
mov
xchg
(bad)
lock
mov
jecxz
push
sti
dec
(bad)
aad
inc
je
cli
and
cmps
stc
mov
add
imul
jg
sbb
test
push
xor
mov
out
iret
icebp
dec
iret
inc
pop
mov
jecxz
mov
add
mov
xor
je
mov
mov
pop
pop
xor
enter
outs
stos
cmp
mov
xchg
(bad)
retf
mov
add
imul
outs
mov
xor
jb
movs
jno
cmps
test
mov
dec
aam
in
xchg
loop
mov
js
push
cmps
loope
inc
in
cmp
fistp
adc
mov
ficomp
or
lods
dec
int
adc
loop
inc
ror
sub
add
sbb
push
inc
sbb
retf
sub
je
js
test
push
sbb
jmp
jns
pop
jmp
in
xor
(bad)
cmp
loopne
mov
jle
outs
rol
mov
or
adc
push
test
jne
dec
retf
ja
icebp
or
or
cwde
out
(bad)
sub
lods
cmp
inc
cmp
pop
shr
lods
dec
xchg
ins
ins
inc
and
into
inc
aad
or
or
daa
(bad)
(bad)
or
aaa
(bad)
test
pop
or
ja
lahf
sub
icebp
jbe
out
and
mov
dec
dec
pop
sub
ja
push
aad
add
stos
jmp
in
sub
pop
jns
ins
test
pop
and
push
inc
jmp
pushf
aam
push
xchg
dec
xor
pop
out
add
cwde
rcl
sbb
mov
out
test
stos
xchg
scas
sub
dec
push
enter
pop
pop
fcmovnb
or
inc
(bad)
lea
adc
xor
cmc
in
jae
pushf
dec
aaa
daa
push
push
and
inc
sti
pop
dec
fs
sbb
(bad)
and
push
aam
push
and
imul
mov
sbb
fs
sub
ds
push
mov
dec
cmps
or
ins
ins
rcl
add
mov
idiv
mov
xchg
int3
jb
mov
or
rol
xor
aaa
jmp
push
sti
jbe
mov
cmp
sub
jne
sbb
add
and
leave
loop
in
cvtps2pi
push
push
cmp
sbb
fisubr
retf
and
or
repnz
xchg
sbb
dec
sbb
add
mov
sbb
mul
sub
div
jbe
adc
mov
test
push
enter
aaa
aad
jmp
dec
cmps
inc
into
mov
(bad)
push
sbb
(bad)
mov
sbb
repnz
pop
dec
clc
mov
pop
cmps
mov
push
mov
retf
out
lds
test
pop
cmp
sbb
in
ds
cmp
fnstsw
jae
or
xor
cmp
(bad)
mov
(bad)
sbb
repz
ret
mov
dec
mov
sub
fmul
das
cmps
push
push
push
jae
lea
stos
cwde
call
jne
and
push
dec
fisttp
inc
mov
and
sub
std
mov
push
jle
pop
retf
movs
into
loop
in
push
xor
es
hlt
arpl
xchg
pop
xlat
push
rcl
cmp
aam
xor
add
jns
xchg
inc
push
inc
and
icebp
cmp
mov
int
pop
iret
xchg
(bad)
pop
imul
stos
stos
ins
sub
cmp
cwde
fcmovnu
xor
inc
xchg
pop
cdq
sub
stos
je
xchg
call
stos
outs
loop
test
push
push
dec
or
shr
addr16
test
ficom
mov
adc
or
cmc
(bad)
cld
nop
add
fld
push
adc
and
cmps
and
std
test
adc
sub
les
outs
inc
cmp
and
call
adc
or
jge
pushf
bound
and
nop
fwait
aad
jns
adc
xchg
cmp
adc
stos
cmc
data16
nop
xchg
stos
add
adc
arpl
dec
xor
mov
sbb
adc
inc
and
cmp
push
ins
out
sbb
sbb
jno
js
fcmovnb
jbe
inc
jp
cmp
movs
add
int
into
pop
xor
mov
sbb
mov
fstp
test
je
test
push
jne
ja
rcr
into
pop
mov
out
aaa
mov
js
inc
and
mov
ret
mov
xchg
shl
inc
fcom
retf
pop
fdiv
fiadd
dec
and
(bad)
lea
mov
(bad)
je
adc
mov
add
loop
xchg
mov
ins
ret
cld
cmc
inc
mov
pop
xlat
je
sub
cmps
popf
mov
test
(bad)
popf
out
cmp
ficomp
arpl
es
xor
xlat
fwait
cs
push
hlt
mov
adc
mov
test
mov
inc
cmp
(bad)
sbb
jns
cmp
sub
shl
lods
mov
pushf
ret
in
sbb
mov
dec
shl
xlat
cmp
sub
push
loop
lea
adc
inc
out
pop
dec
pop
scas
mov
pop
cmp
add
lock
aaa
push
aad
push
mov
neg
lock
cmp
xor
push
aam
jbe
cdq
mov
(bad)
dec
fstp
mov
aad
and
push
and
add
mov
pop
sbb
out
push
or
jmp
inc
retf
inc
adc
das
sub
pop
cdq
jp
push
pop
or
clc
repnz
xchg
sbb
pop
mov
ins
cmp
mov
in
(bad)
je
and
(bad)
in
stos
fnstsw
xor
rcr
add
pop
xor
mov
push
ss
cmp
inc
in
scas
stos
daa
cdq
push
cmp
jmp
push
dec
daa
call
add
add
inc
loope
out
enter
int
lods
and
sbb
enter
inc
push
test
mov
inc
dec
pop
sub
es
mov
mov
dec
dec
cmps
sub
cmp
mov
pushf
(bad)
pop
iret
mov
mov
or
inc
sub
lods
into
and
push
jmp
les
outs
rcl
nop
add
sbb
ja
add
leave
sbb
ret
and
jp
daa
test
test
dec
jb
fdivrp
add
jg
xor
nop
(bad)
loope
xor
out
inc
xor
add
jmp
(bad)
xor
jo
lea
inc
pusha
popa
cmp
inc
leave
std
jmp
inc
aas
rcl
jg
retf
stc
adc
push
enter
cmps
scas
cmp
popa
xchg
sub
push
frstor
mov
push
or
sbb
mov
movs
jno
pop
sub
popf
cmp
shr
mov
sub
in
or
cmp
inc
xor
daa
inc
gs
mov
push
xchg
dec
adc
mov
push
pop
mov
in
and
test
lods
imul
adc
jmp
adc
es
pop
xchg
fnsetpm(287
mov
xchg
pop
dec
sti
xor
mov
std
fsubp
jbe
and
cmp
sahf
(bad)
dec
jns
mov
or
(bad)
cmc
cld
stos
sbb
cmp
jg
loop
std
push
call
repnz
xor
popf
mov
pop
es
push
rcr
fwait
cld
leave
(bad)
and
inc
into
push
push
enter
cmps
cwde
stc
xor
arpl
add
popa
rcr
arpl
(bad)
std
loope
cmc
mov
add
add
and
in
jmp
lock
aam
mov
fcmovne
ja
out
inc
rcl
mov
mov
mov
je
inc
xchg
xor
dec
fist
icebp
and
pop
out
pop
call
dec
inc
data16
fidivr
xor
std
pop
arpl
bswap
push
sbb
and
mov
pusha
xchg
cld
std
pop
jns
xor
test
sbb
xchg
rcr
cmp
ret
dec
sahf
dec
jo
xor
jb
push
mov
pop
sbb
pushf
add
push
gs
enter
push
mov
mov
call
add
nop
repnz
repz
add
cmp
dec
rol
imul
aaa
fld
mov
test
test
enter
lock
fadd
pushf
lea
pop
pushf
ss
outs
clc
push
add
stos
retf
push
out
jg
iret
stc
push
or
inc
fistp
repnz
mov
xor
push
in
cld
xchg
dec
and
cmp
ins
cmps
mov
pop
push
pop
inc
pop
fsubr
sahf
xchg
out
repz
retf
mov
fisub
adc
les
mov
test
xchg
jl
dec
cli
out
jmp
or
mov
stos
mov
push
adc
mov
popf
push
push
into
shr
mov
push
lds
addr16
and
or
inc
mov
mov
push
call
or
jecxz
hlt
dec
fnstsw
cmp
les
loop
and
mov
aas
jb
xchg
inc
jae
int
sbb
nop
jno
shr
mov
jne
and
sbb
jne
and
(bad)
jne
loop
and
add
mov
add
in
mov
add
pushf
mov
add
mov
lods
sbb
je
shr
sbb
in
rcl
ins
sub
ret
pusha
stos
push
xor
retf
xor
out
and
lock
mov
(bad)
add
pop
or
push
clc
scas
loop
in
xor
jg
adc
inc
pop
and
sub
mov
jp
sbb
dec
lea
sbb
adc
and
cmp
enter
xor
jae
xor
clc
test
add
sahf
inc
xor
pop
inc
jg
pop
xchg
sar
add
call
fidiv
imul
and
xchg
mov
and
dec
add
shr
jbe
int3
pop
jae
pop
mov
in
lea
fidivr
sub
shl
stos
xchg
inc
adc
push
push
mov
lods
test
fwait
jno
sbb
not
cmp
xchg
push
aaa
fs
enter
not
add
in
add
aam
pop
int3
pop
xlat
add
loope
adc
call
enter
mov
shr
test
mov
data16
push
adc
dec
addr16
pop
sub
dec
push
mov
cmp
push
rol
pop
add
lods
push
icebp
jmp
cmps
stos
mov
or
je
dec
aad
pop
xor
imul
fwait
sbb
fld
or
movs
lea
mov
push
mov
imul
stos
adc
in
push
loopne
sbb
pop
enter
mov
in
sub
push
push
jo
nop
xchg
mov
cmp
add
jno
add
test
outs
inc
cwde
inc
xor
add
add
aaa
pop
jo
adc
movs
and
(bad)
sub
shr
inc
push
push
repnz
sub
movs
add
push
sub
adc
push
lds
stos
and
jp
ss
or
adc
retf
inc
mov
add
stc
inc
dec
mov
mov
bswap
dec
xor
sub
or
dec
fldcw
inc
cmps
mov
sub
in
or
sub
stc
dec
push
movs
push
mov
leave
repnz
mov
mov
add
je
outs
fimul
mov
inc
lahf
inc
push
cdq
mov
sbb
push
pop
xchg
aad
mov
aam
push
dec
inc
jge
mov
stc
add
daa
fisubr
das
daa
test
and
pop
nop
inc
imul
cmc
push
and
stc
lods
mov
and
mov
sbb
lahf
push
in
pop
xor
test
int
inc
aaa
mov
cmp
dec
out
inc
pop
stos
and
sub
adc
cli
(bad)
xor
into
lock
dec
clc
ins
mov
jae
xchg
mov
mov
or
push
mov
int
sub
int3
enter
mov
ss
iret
and
xor
arpl
sti
nop
lock
clc
movs
fs
in
and
push
int
(bad)
repz
inc
cwde
xchg
mov
hlt
and
inc
das
addr16
xchg
in
and
ja
mov
mov
aad
xor
repnz
(bad)
xchg
mov
cmps
inc
mov
push
lock
call
xor
(bad)
loopne
data16
pop
pop
pop
push
ret
push
(bad)
mov
cld
lea
mov
jl
push
mov
push
dec
imul
mov
inc
pop
leave
cmp
sub
add
cmps
jo
retf
shr
pop
and
aad
mov
dec
push
push
jno
(bad)
(bad)
xchg
sub
fcmovnu
leave
int
in
cmp
xchg
jbe
nop
aaa
inc
push
xchg
fstp
mov
int3
popa
mov
icebp
pop
stos
into
ins
push
mov
or
scas
retf
adc
or
(bad)
in
pop
xor
mov
cdq
and
fcmovnb
sub
outs
xchg
pop
out
sub
mov
inc
fisubr
and
add
mov
and
mov
and
ins
sub
cmp
mov
xchg
pop
lods
pop
fmul
(bad)
ja
xchg
mov
stos
push
or
bound
scas
jle
xchg
sahf
inc
fsubr
adc
and
mov
inc
fstp
ins
mov
clc
in
dec
dec
pop
cli
leave
jbe
push
cmp
loop
mov
push
aad
jp
bound
arpl
stc
add
jae
push
pusha
int3
lock
add
out
push
and
pop
push
jne
mov
or
sbb
jle
mov
(bad)
xchg
int3
scas
inc
movs
mov
push
or
jmp
mov
jns
cmp
bsr
movd
cmps
in
popa
add
sti
mov
cmc
pop
add
nop
aaa
dec
jnp
test
mov
dec
jmp
push
(bad)
dec
dec
retf
out
fstp
xchg
jnp
add
movs
shr
push
jmp
and
cdq
inc
push
(bad)
xchg
or
inc
jl
fld
(bad)
cmp
lods
adc
xor
sbb
xlat
add
mov
in
test
(bad)
jmp
movs
jl
arpl
imul
mov
mov
sub
fstp
pop
je
scas
jbe
push
(bad)
mov
jnp
and
xchg
xchg
cmp
outs
mov
sub
pop
test
pop
add
and
sub
mov
dec
adc
mov
(bad)
in
sbb
call
in
movs
jmp
jmp
int3
pop
add
dec
jne
jo
or
cmc
inc
inc
sub
inc
sar
xchg
call
jns
daa
cli
sub
sti
and
adc
retf
xchg
inc
idiv
jmp
or
sbb
rdtsc
jmp
add
test
jnp
mov
arpl
or
test
cs
enter
ja
pushaw
or
adc
test
aaa
retf
pop
adc
lea
daa
push
mov
in
push
rcl
repnz
jne
es
fwait
out
adc
inc
shr
push
cmp
mov
jmp
fwait
sbb
mov
fsubr
pop
and
cdq
push
out
xor
int
retf
shl
leave
rcl
adc
xlat
lds
pop
js
mov
lock
inc
ins
retf
mov
dec
adc
mul
push
shl
add
cmp
add
and
leave
add
fwait
xor
loope
mov
jno
shl
scas
cwde
xchg
mov
ret
push
mov
ror
push
fadd
push
add
xchg
dec
add
fsubr
and
dec
sub
push
pop
ret
inc
jmp
and
add
xchg
cs
inc
or
int3
mov
(bad)
push
(bad)
arpl
loope
pop
sub
outs
int3
call
cs
pop
push
or
cmp
and
xchg
cmc
and
and
xlat
cmp
(bad)
push
fbstp
cmp
lahf
xchg
adc
mov
stos
inc
std
jecxz
inc
sub
cld
inc
(bad)
mov
inc
add
inc
adc
or
cmp
push
pop
xor
call
scas
mov
adc
mov
mov
repnz
icebp
xchg
inc
jnp
or
fild
out
dec
adc
rol
cmp
jo
aaa
mov
pop
dec
outs
fimul
outs
stos
mov
pushf
xchg
jne
cwde
jg
popa
mov
adc
sti
scas
out
lahf
mov
shl
pop
sti
adc
cmp
or
mov
add
aaa
pop
and
or
mov
xchg
loopne
pop
or
leave
inc
push
stc
call
fsubrp
mov
inc
cwde
ds
sub
aaa
lea
mov
xchg
pushf
retf
je
cmps
mov
and
jns
sub
jnp
cwde
aaa
sbb
mov
(bad)
cmp
add
mov
ror
in
sti
cs
cmp
jge
push
xchg
xor
cmps
push
(bad)
push
push
ror
push
add
mov
add
mov
sub
xchg
cmp
and
inc
loope
inc
shl
adc
xchg
adc
mov
in
sub
cmp
shr
pop
test
mov
int3
repz
dec
mov
mov
cmc
jge
jne
xchg
mov
in
retf
clc
mov
(bad)
loopne
fst
sbb
mov
pop
cli
cs
in
mov
(bad)
jmp
out
retf
jg
mov
sahf
pop
je
je
shr
ss
icebp
pop
xchg
or
cmp
out
test
pop
outs
push
push
add
call
cdq
outs
(bad)
call
mov
cmp
fdiv
push
leave
sbb
inc
adc
pushf
sub
call
out
rcr
dec
lods
jg
mov
stos
les
cmp
pop
push
jle
stos
xchg
inc
jecxz
icebp
or
mov
aaa
sbb
sar
mov
loop
fdiv
xor
rol
std
mov
xor
pushf
aas
mov
mov
jg
cmp
jmp
in
test
rol
xchg
xchg
cli
dec
dec
(bad)
sbb
aaa
mov
int3
jo
and
fcos
add
and
push
repnz
imul
aam
cmc
and
cdq
mov
inc
(bad)
xchg
pop
xchg
inc
je
or
in
cmp
out
test
or
inc
jnp
or
jp
fnstsw
das
in
(bad)
cmp
data16
push
imul
sub
jae
adc
jg
inc
and
frstor
stc
add
test
xor
jl
cmp
push
xchg
push
shl
mov
aam
imul
mov
push
push
xchg
dec
cmp
xchg
enter
ret
arpl
add
setb
js
pusha
daa
mov
pop
push
jo
mov
sti
and
out
pop
mov
push
or
enter
inc
call
test
xchg
and
and
test
movs
outs
jns
test
pop
and
sysret
xor
jp
mov
inc
sbb
sbb
nop
xor
mov
xchg
mov
xchg
xlat
inc
cli
inc
aam
mov
lea
loop
loope
sub
popa
xchg
data16
mov
fsubr
dec
mov
mov
dec
shl
test
jnp
jecxz
xchg
xchg
xchg
xchg
fcomp
mov
cmp
pop
fistp
int3
inc
cdq
dec
mov
test
addr16
jmp
and
jne
cmovg
jbe
xor
jne
pop
ds
push
cmp
retf
jl
cld
pop
sub
(bad)
or
cmps
inc
test
cmps
inc
push
test
sub
xchg
mov
and
pop
gs
inc
test
xchg
mov
retf
(bad)
sub
int
inc
inc
mov
push
mov
popf
mov
lea
dec
test
js
xchg
xor
jp
outs
sbb
jecxz
jae
jnp
adc
dec
jne
rcl
lock
jne
and
sub
jmp
push
sbb
adc
pushf
add
and
adc
or
popa
jo
jmp
jne
or
aam
das
imul
out
pop
rol
aam
(bad)
loope
stos
xchg
ins
scas
stos
fbld
dec
jne
jnp
(bad)
mov
adc
ins
xchg
mov
jle
xchg
imul
(bad)
in
dec
dec
xor
inc
or
xchg
test
leave
sbb
xor
dec
fidivr
inc
enter
mov
popf
into
mov
dec
sbb
or
loope
arpl
xor
stc
push
pop
and
aaa
mov
std
sbb
mov
aam
cmps
pusha
in
xchg
mov
test
cmp
and
frstpm(287
out
add
pop
(bad)
xchg
sbb
xchg
test
pop
push
xor
imul
enter
sbb
dec
sti
aad
ror
sub
dec
outs
sbb
or
lods
out
fsubr
addr16
sub
lods
mov
and
mov
xor
inc
adc
sub
pop
jne
mov
int
pop
daa
pop
movs
ds
imul
jge
pop
mov
(bad)
ins
mov
loop
aas
test
adc
adc
ss
cdq
pop
or
ss
in
sti
leave
repnz
mov
sar
mov
pop
push
call
lea
inc
cs
xor
lods
add
aad
pop
js
inc
stc
xchg
fisttp
clc
sbb
mov
aas
or
hlt
xor
jnp
fwait
inc
aam
pop
mov
push
jmp
iret
leave
mov
mov
add
mov
shl
aas
shl
pop
mov
leave
pop
adc
popa
mov
adc
gs
mov
cmp
or
icebp
mov
(bad)
out
cmps
das
aas
and
shl
add
out
mov
pusha
adc
cmp
push
in
pop
enter
mov
lods
(bad)
jno
mov
in
xchg
mov
daa
pusha
mov
and
leave
es
sub
add
test
(bad)
xchg
sahf
dec
mov
cmp
adc
mov
cmp
sahf
les
call
neg
push
stos
adc
sahf
cmp
push
and
lods
mov
in
es
or
pop
loop
push
sbb
adc
pushf
ins
popf
add
jmp
or
mov
dec
mov
xchg
pavgw
ins
fcmovu
pop
cmp
mov
test
cmp
pushf
inc
popf
pushf
mov
mov
daa
stos
loope
and
retf
mov
push
mov
ins
mov
pop
push
inc
in
aam
adc
jmp
pop
je
fcom
push
sbb
push
dec
jg
ffreep
jae
mov
stos
movs
xchg
aas
adc
ds
in
aas
lea
xor
sbb
mov
stos
mov
cmp
ss
ret
fmul
and
call
mov
dec
pop
inc
inc
sti
shl
and
mov
jge
(bad)
ins
jbe
fimul
inc
jo
mov
jno
pop
sbb
add
xor
pop
add
aaa
pop
fs
test
mov
enter
leave
pushf
sub
adc
pop
shr
inc
xor
test
popa
bound
sub
mov
in
aam
daa
sub
(bad)
mul
gs
xchg
or
mov
xor
and
xchg
pushf
ds
sbb
dec
cmp
addr16
inc
and
adc
fiadd
mov
test
clc
xchg
movs
(bad)
loope
std
cmp
add
sub
xchg
ret
pop
imul
out
repz
stos
jnp
pop
mov
pop
and
or
pop
inc
pop
dec
(bad)
push
or
out
cwde
imul
jns
mov
callw
pop
cmp
sbb
jns
shr
clc
xor
mov
(bad)
mov
mov
sbb
mov
and
cwde
std
retf
cmp
inc
test
rcl
jmp
mov
or
cmp
inc
pop
and
data16
loope
xor
jp
cmps
stos
cdq
int3
adc
xchg
inc
js
sbb
pop
enter
pop
push
imul
stos
cmps
stos
(bad)
mov
push
cmp
out
dec
out
adc
popa
mov
mov
outs
es
dec
jne
int
inc
imul
movs
gs
in
popa
push
sbb
in
nop
and
push
or
jmp
int3
ja
mov
repnz
jae
push
push
(bad)
jecxz
iret
dec
cld
sar
jge
pop
ret
mov
adc
movs
sub
in
(bad)
imul
jnp
xchg
mov
and
jmp
mov
int
arpl
adc
sub
call
mov
adc
pop
jecxz
stos
jo
fnstenv
(bad)
push
inc
bound
imul
add
push
dec
test
sbb
popf
(bad)
sub
scas
fcmovb
int
ficom
dec
retf
or
scas
xlat
add
adc
adc
mov
and
sub
cmc
xor
add
fs
fidiv
xor
int3
jae
fisttp
fldenv
inc
sub
div
outs
and
adc
jmp
out
cmc
mov
mov
(bad)
sub
jp
cmp
jo
pop
mov
adc
out
addr16
dec
repz
mov
ret
test
xor
shr
jne
shl
inc
(bad)
loop
idiv
cmovs
je
sbb
xor
mov
ret
xor
cmp
inc
pop
and
dec
aad
xchg
xor
and
inc
loope
lds
sub
addr16
fucomi
imul
(bad)
icebp
inc
adc
es
mov
mov
lods
mov
iret
push
scas
and
mov
aas
mov
and
sbb
ja
fistp
jmp
mov
xchg
pop
pop
jb
lds
xlat
pop
push
or
and
mov
or
mov
mov
movs
mov
mov
add
jmp
lea
ss
cmp
pop
or
push
xor
popf
add
push
into
inc
inc
push
loop
ror
mov
adc
(bad)
xchg
inc
clc
sub
jp
bswap
adc
sub
add
mov
or
gs
retf
xchg
mul
into
sbb
fnsave
cld
(bad)
mov
pop
aaa
cmc
retf
push
lahf
xchg
sahf
push
shl
sahf
ss
cmc
cmp
sar
stos
fld
fmul
ficomp
fwait
out
jg
mov
call
out
cmp
push
inc
jbe
jl
fwait
dec
or
loopne
push
(bad)
jmp
add
pop
pop
push
jg
mov
test
xor
pop
xor
jno
es
popf
sbb
dec
push
call
push
pop
fadd
sbb
push
fs
mov
jle
dec
pop
mov
scas
jg
push
cmp
add
dec
cmps
mov
enter
leave
outs
out
es
outs
addr16
push
fwait
push
shl
(bad)
fdivrp
dec
bnd
dec
inc
outs
pop
sbb
cmp
jg
sub
nop
jge
mov
(bad)
sub
xor
ror
mov
cmc
xchg
pop
in
enter
fwait
and
test
xchg
push
pop
jns
and
add
or
sub
mov
inc
sti
lods
(bad)
sub
mov
imul
add
xchg
inc
scas
pop
xor
leave
xchg
inc
mov
call
dec
loope
push
xor
xchg
bswap
sbb
and
(bad)
cs
loop
push
mov
mov
icebp
dec
sub
lds
fs
fisttp
mov
mov
dec
(bad)
mov
leave
or
mov
inc
or
mov
outs
mov
stc
inc
fsub
add
push
inc
retf
enter
xchg
inc
cmp
jno
push
daa
xor
add
test
jo
jae
ffree
test
add
mov
cmp
cwde
sub
rol
cmp
out
in
shl
ins
shr
fisub
retf
xor
mov
jbe
sub
shr
je
add
fild
jnp
lods
inc
mov
push
int
xchg
mov
data16
retf
out
and
sbb
inc
fs
jno
pop
imul
xchg
out
push
imul
fld
and
dec
sbb
ficom
pop
jmp
push
jne
push
push
sbb
in
mov
or
loope
xor
xor
mov
int3
and
and
mov
gs
sbb
rcr
and
in
or
mov
cmc
push
movs
pusha
jae
jae
xor
xchg
fs
enter
jbe
adc
repz
fwait
cs
and
sbb
push
pusha
out
push
out
pop
or
xchg
xchg
gs
xor
movs
dec
fadd
sbb
adc
frstor
scas
out
dec
into
xchg
push
outs
movs
push
push
enter
dec
sbb
or
mov
ins
cwde
cmp
aam
pop
fadd
dec
xchg
mov
stos
js
sbb
cmp
jbe
stc
stos
mov
mov
or
lea
retf
push
shl
loop
pop
inc
mov
jbe
pop
movs
xor
(bad)
imul
lock
push
adc
retf
fs
mov
inc
std
iret
inc
aad
stos
cwde
in
adc
clc
fst
stos
into
push
pop
fxam
aaa
shl
mov
dec
fld
inc
pop
rol
inc
out
pop
sbb
out
pop
loopne
and
call
push
xor
mov
aam
or
popa
mov
std
nop
xor
mov
adc
mov
clc
scas
outs
mov
adc
cdq
fbstp
push
enter
mov
movs
in
sbb
mov
repz
adc
inc
and
dec
int
mov
dec
add
cmp
or
cs
(bad)
jno
push
fld
mov
add
xor
je
sub
shl
pop
stos
jnp
ja
sub
pop
push
pop
hlt
rcr
lods
stos
fs
jae
jns
add
les
sbb
int3
lods
stos
mov
xchg
retfw
dec
sub
outs
addr16
sbb
into
add
stos
lods
imul
add
aam
xor
ror
inc
ret
mov
fcmovb
jmp
cmp
mov
repz
mov
je
shr
adc
int
fiadd
mov
mov
add
adc
xchg
add
retf
fwait
push
bswap
out
xor
xor
mov
ss
ins
add
xchg
mov
sub
xor
push
aam
fld
push
sahf
pop
or
dec
mov
call
xchg
aad
dec
sbb
sar
int3
and
push
lock
inc
cmp
inc
int3
push
js
mov
ret
fnstenv
mov
mov
dec
pop
leave
push
test
rcr
shl
sbb
dec
cmp
xlat
idiv
test
mov
mov
bound
scas
fld
adc
push
imul
xchg
dec
sbb
pop
pop
lods
aad
(bad)
sti
ins
add
test
mov
(bad)
mov
sub
sti
popf
nop
dec
les
data16
add
mov
xor
mov
jge
inc
mov
push
int
sti
aad
lods
cwde
sti
(bad)
repnz
retf
sbb
cmp
cld
push
xor
test
(bad)
js
lahf
push
fbstp
loopne
imul
(bad)
stos
sahf
out
pop
sbb
sub
push
pop
je
mov
dec
sub
add
or
sub
push
ds
push
pop
ss
dec
xor
cmp
push
add
cmps
sahf
push
ror
and
jb
arpl
sub
stc
and
push
ror
sbb
and
cmps
call
mov
sub
popf
inc
adc
mov
cmp
imul
test
push
inc
cmps
add
out
push
inc
aad
(bad)
inc
sbb
aad
push
in
adc
outs
jne
lods
xlat
mov
push
cdq
mov
jne
lods
mov
cmp
gs
add
inc
mov
fcmovu
adc
gs
and
sbb
or
cwde
mov
inc
rcl
dec
add
cmp
adc
add
mov
cmp
popa
rol
jne
call
mov
cmp
sub
adc
pop
pop
xor
fsubr
sbb
mov
or
inc
pusha
(bad)
in
aaa
or
mov
xlat
sbb
jae
cld
xchg
and
fisubr
push
mov
sub
shl
push
cmp
fsubr
jge
(bad)
inc
add
into
add
loop
push
dec
cli
test
cdq
mov
sub
stos
jp
jmp
xor
inc
pop
fisub
push
bound
ins
xchg
xor
div
repz
in
xchg
mul
adc
shl
xchg
add
sbb
mov
sub
pop
jle
(bad)
pop
ror
or
fdiv
enter
lds
daa
mov
call
sbb
cmp
or
cdq
out
mov
cmp
push
sbb
mov
mov
popf
ins
rcr
(bad)
sbb
and
aam
or
xlat
sub
mov
cmps
arpl
push
inc
popf
pop
or
lahf
cld
add
stos
stos
dec
test
mov
adc
sbb
jnp
imul
adc
dec
mov
sub
pop
(bad)
mov
ja
inc
or
and
cmp
jge
or
add
call
push
enter
push
(bad)
scas
mov
imul
sbb
pop
scas
mov
jnp
inc
and
hlt
adc
aaa
mov
in
pop
inc
out
out
or
mov
fidivr
and
inc
add
dec
inc
mov
sti
jo
xchg
mov
jne
rcl
and
cmp
mov
sub
push
inc
add
inc
repnz
push
movs
lods
mov
mov
and
jae
sub
mov
stos
mov
push
dec
out
push
imul
inc
add
adc
jle
xor
ja
and
les
inc
mov
inc
mov
adc
cmp
fucomp
mov
data16
jnp
test
sbb
shl
dec
mov
neg
lock
and
xchg
leave
mov
je
out
(bad)
(bad)
leave
test
icebp
rol
aam
rcl
out
and
or
pop
or
sar
es
cmc
cmp
add
test
sbb
imul
jae
shl
dec
and
xchg
out
sbb
mov
or
dec
and
test
dec
and
xchg
add
dec
and
xchg
mov
push
or
pop
add
outs
jne
dec
and
stc
push
add
adc
sub
ss
js
bound
adc
in
mov
pop
pushf
sbb
(bad)
in
mov
lds
jne
dec
push
push
inc
pop
xchg
jae
je
test
fst
cmp
rol
sub
sar
outs
stos
cs
push
sbb
cdq
into
sbb
outs
cmp
sbb
jno
and
jns
xor
test
int3
arpl
xchg
sub
sbb
adc
test
aaa
xor
repz
xor
lock
pusha
lods
mov
fstp
sbb
std
movs
pop
sbb
rcl
add
xor
xlat
xchg
pop
stc
jae
cmps
dec
jle
adc
push
sbb
stos
cmp
pop
xor
(bad)
cs
aam
xor
stos
add
shl
cmps
nop
mov
mov
sbb
mov
sbb
mov
lock
cmp
or
sldt
mov
or
dec
dec
mov
sbb
and
mov
in
mov
jo
ret
loopne
out
jl
pop
pop
and
mov
in
test
js
fadd
push
jle
pop
inc
lahf
mov
scas
pop
xchg
test
int3
xchg
cmps
and
jle
sub
fwait
inc
sub
or
or
mov
cmp
mov
popa
mov
xchg
cdq
fiadd
sbb
xchg
jp
in
pop
rol
xor
loop
mov
xlat
push
(bad)
jl
sub
inc
scas
call
and
in
lahf
add
mov
add
inc
cmp
sbb
stc
xchg
adc
mov
mov
mov
cmp
aam
clc
adc
mov
adc
popf
out
cmp
out
cli
mov
repz
aam
jns
add
add
mov
mov
call
jp
cld
pop
mov
jns
add
fisub
mov
fdivr
pop
outs
aam
std
retf
(bad)
std
sbb
aas
adc
sti
aas
cwde
pop
jecxz
push
sti
jp
push
mov
lods
rcl
inc
ret
rcr
lahf
xor
pop
xor
leave
mov
call
sub
add
or
ja
inc
xlat
fwait
(bad)
dec
out
cmp
and
test
pop
leave
sti
dec
rcr
mov
call
(bad)
ret
loop
packsswb
xor
push
jbe
push
xor
imul
mov
add
push
adc
gs
fs
stc
mov
outs
loop
xchg
push
pushf
ins
nop
push
jns
inc
lds
add
mov
imul
sbb
mov
lods
mov
jl
mov
(bad)
lahf
mov
add
lods
popf
mov
mov
pushf
sbb
aaa
fsub
xor
inc
cmp
push
stc
add
addr16
mov
fcom
lods
push
xchg
fnsave
jae
sbb
fild
scas
pop
push
inc
sbb
xchg
xor
push
lahf
fstp
and
ss
cwde
inc
add
xchg
stos
pop
or
add
dec
jmp
ret
(bad)
(bad)
push
and
(bad)
fistp
cmp
inc
jb
into
add
sbb
mov
pusha
pop
sti
rcr
int3
push
mov
add
aad
push
sbb
sti
cmp
sub
adc
mov
xchg
das
jmp
retf
fcom
or
push
xchg
push
xor
add
dec
std
xchg
mov
xchg
dec
sub
xchg
add
dec
and
inc
xor
push
fs
out
add
das
jne
mov
adc
jbe
ins
shl
jne
aad
out
inc
clc
imul
sub
cmp
imul
mov
push
scas
jae
movs
inc
mov
mov
sbb
pop
shl
sub
test
and
xchg
mov
inc
fist
in
inc
fst
hlt
mov
aam
or
jns
fwait
nop
add
xchg
je
jae
push
stc
mov
cmp
daa
outs
out
cs
pop
ror
ret
(bad)
in
repnz
outs
cli
xor
loop
xor
mov
pop
mov
inc
iret
and
(bad)
into
mov
jl
mov
add
pop
add
add
pop
mov
ja
lods
cmp
mov
jl
push
push
mov
dec
add
sbb
arpl
outs
dec
cmp
cld
imul
jmp
pcmpgtd
mov
xlat
cdq
jmp
gs
adc
sub
call
jl
push
pop
ja
xchg
cmp
xchg
xor
in
nop
inc
or
add
shl
cmp
xchg
stos
jp
xor
push
push
aas
mov
xor
dec
leave
mov
fdivr
or
cmp
mov
enter
in
cmp
int3
fsub
arpl
xchg
jmp
pop
adc
dec
inc
add
leave
lahf
fdivr
and
jae
(bad)
mov
dec
add
mov
cmp
aad
leave
or
mov
icebp
mov
add
add
stc
mov
(bad)
ds
or
sub
fs
adc
push
(bad)
inc
gs
out
stc
adc
lods
retf
ins
add
push
test
cmp
stos
ret
dec
div
mov
and
repnz
in
es
mov
(bad)
rcl
mov
xchg
mov
addr16
adc
xor
lods
call
ret
and
jno
jp
fild
mov
imul
test
call
inc
adc
xchg
jecxz
push
dec
push
add
cld
push
mov
jo
add
xchg
ss
cdq
into
and
paddusb
(bad)
mov
mov
mov
mov
push
mov
xchg
push
xchg
scas
sub
sahf
(bad)
inc
pop
neg
adc
push
jge
je
pop
or
mov
mov
cdq
xchg
mov
js
pop
push
movs
mov
test
jmp
and
mov
retf
and
cmp
sub
test
lea
inc
and
sahf
jmp
dec
inc
inc
mov
push
bound
jp
and
sub
gs
popf
pop
fmul
xchg
mov
mov
std
mov
popa
sub
xor
mov
mov
or
out
xchg
sub
pop
fmulp
fnstenv
loop
cmp
push
mov
xchg
xchg
xchg
cli
xor
repz
adc
daa
(bad)
lahf
(bad)
adc
adc
(bad)
cmp
mov
stc
test
xor
in
mov
inc
loop
imul
xor
xchg
mov
pop
xor
movs
sub
lods
jne
ja
jmp
adc
mul
shl
xchg
data16
jl
push
iret
jns
sbb
mov
mov
and
push
or
inc
xchg
dec
and
xchg
mov
and
out
add
stc
jge
mov
sub
lock
add
add
pop
pop
call
out
(bad)
popa
jnp
add
scas
sbb
loope
pop
call
xor
daa
stos
mov
jmp
xor
out
loopne
mov
sahf
dec
(bad)
popa
push
std
cwde
pop
jle
stc
das
xor
retf
push
and
push
sub
dec
repz
mov
jb
hlt
push
and
mov
sbb
out
cli
lea
cli
test
sbb
aad
xor
sub
(bad)
xchg
push
push
push
xchg
xchg
mov
jb
mov
dec
cmp
adc
scas
xor
pop
jnp
xchg
xor
cwde
in
ror
mov
or
movs
or
pushf
(bad)
sub
and
dec
fs
cld
push
push
(bad)
cmps
int3
test
mov
push
inc
loope
movs
pop
int
ret
fsub
and
xor
cmp
mov
daa
xchg
hlt
pop
cli
sbb
fwait
inc
fldcw
jno
ds
inc
xor
xchg
push
fs
push
push
jne
jne
jl
mov
jecxz
mov
cld
sub
inc
push
jmp
and
push
xchg
(bad)
xchg
cmp
enter
push
xchg
es
cwde
(bad)
fbld
aas
jb
push
and
dec
add
nop
and
dec
add
nop
pop
or
and
(bad)
int
mov
adc
pop
mov
out
movs
xchg
push
in
push
jmp
lods
fiadd
pop
jnp
fs
jle
fild
cmp
in
or
push
pop
push
mov
mov
stos
movs
je
cs
movs
adc
inc
(bad)
push
nop
inc
dec
mov
xchg
dec
sahf
jmp
adc
push
shl
dec
push
or
addr16
dec
inc
push
xchg
xchg
loope
mul
lea
sbb
cld
and
test
jno
ins
ror
imul
pop
mov
outs
pusha
or
jb
js
adc
cmp
inc
shl
adc
iret
hlt
xor
mov
mov
lea
scas
xor
sbb
adc
pop
xor
mov
pop
xchg
xor
imul
data16
test
fld
js
sbb
xchg
mov
cmp
jne
jne
mov
mov
inc
pop
xchg
enter
mov
mov
dec
or
sub
cmc
mov
loopne
aas
lds
dec
sbb
mov
in
(bad)
and
in
xor
mov
fidivr
jae
or
stos
and
fstp
fs
out
out
outs
jl
ja
loop
loopne
test
(bad)
lock
mov
jae
cmp
outs
aad
ins
cmp
cmp
sub
fs
mov
and
jmp
les
fist
ins
movs
imul
sub
mov
jb
pop
and
inc
ret
sbb
add
mov
or
inc
lds
outs
or
xor
lods
push
jbe
ss
lods
imul
clc
mov
add
xor
daa
adc
in
outs
in
int
rcl
mov
sub
xor
retf
fisubr
out
xor
icebp
or
(bad)
sti
pop
retf
call
jnp
xchg
frstor
pop
pop
jae
(bad)
loope
pop
adc
dec
push
push
push
pop
add
adc
movs
imul
clc
repnz
bound
stos
adc
xchg
pop
not
mov
fdivr
dec
inc
loopne
push
push
push
push
retf
pop
inc
sti
cs
xor
fdiv
neg
and
jno
outs
cmps
jae
or
inc
mov
inc
mov
ror
cdq
push
add
jo
sbb
das
call
cmp
in
jmp
loop
pushf
sub
repnz
(bad)
(bad)
in
sub
fdiv
ds
adc
or
mov
or
mov
repnz
enter
and
jl
lods
(bad)
loope
sbb
xchg
mov
push
xchg
push
popf
cmps
int3
pop
out
and
test
sbb
scas
mov
ins
ins
je
mov
xor
fs
in
ss
dec
test
push
mov
jbe
shl
pop
int3
fnsave
or
(bad)
push
xlat
nop
and
and
dec
int
push
js
int
aad
outs
dec
sub
sub
push
xchg
aam
(bad)
cdq
pop
pop
jo
mov
add
adc
sbb
jmp
sahf
stos
out
sub
dec
or
hlt
mov
pop
mov
and
test
mov
mov
lds
sbb
je
call
test
out
cmp
push
fs
test
pop
test
test
popa
pop
sbb
mov
pop
sub
jmp
and
push
sti
cmps
jae
dec
jg
scas
imul
cs
sti
mov
sub
js
cmp
sbb
pop
xchg
push
xchg
adc
mov
mov
jb
ja
pop
cld
push
fs
adc
adc
sbb
push
mov
add
icebp
ror
inc
add
jae
fcomi
test
test
pop
dec
call
xchg
rcr
les
jp
xchg
add
sti
adc
hlt
ins
dec
outs
cmp
pop
mul
ja
lds
mov
hlt
mov
(bad)
mov
sbb
jno
sub
and
jecxz
mov
mov
or
ss
jne
iret
dec
pop
jns
and
scas
mov
rcl
xor
sahf
movs
je
sub
dec
(bad)
imul
adc
dec
sbb
movs
stos
mov
pop
aad
outs
xchg
ss
mov
movs
nop
xor
cmps
jae
mov
mov
aad
pop
(bad)
xor
cmc
jae
out
ins
xor
pop
mov
sbb
test
mov
xor
ins
jne
mov
sub
icebp
push
push
fisub
xor
pop
cmp
mov
out
pusha
ret
sar
inc
xor
adc
sbb
jb
xor
lods
cmps
in
adc
mov
loopne
mov
mov
aas
out
stos
repz
pop
scas
(bad)
sub
not
xor
inc
cmp
call
pop
scas
scas
xchg
(bad)
popa
jae
ror
mov
popf
jmp
imul
pop
jecxz
jo
inc
mov
jge
mov
fisubr
int3
jae
and
and
push
inc
dec
lds
mov
lods
outs
pop
ins
cdq
comiss
xlat
inc
push
and
inc
(bad)
push
pop
out
mov
cmp
pop
mov
adc
sub
xor
cdq
and
jnp
jbe
inc
fdiv
ret
fisttp
ret
xchg
mov
adc
jne
and
mov
(bad)
dec
add
mov
sbb
or
sbb
fsub
inc
clc
scas
ds
inc
(bad)
aad
pop
sub
stos
jmp
iret
mov
stos
dec
dec
and
add
dec
and
xchg
add
pop
add
int
mov
inc
dec
xor
les
rcl
mov
sbb
in
lods
addr16
sub
jno
inc
cmps
xchg
xchg
cmp
lock
mov
push
outs
adc
jp
cmp
ins
loope
mov
scas
dec
add
adc
retf
repnz
mov
movs
add
xchg
sub
mov
add
cmps
test
mov
xchg
stos
(bad)
pop
mul
inc
lahf
push
xchg
mov
pop
das
mov
imul
push
popf
loop
xchg
int3
stc
xchg
jl
loopne
sub
xor
or
test
out
xlat
inc
jmp
jmp
mov
(bad)
mov
je
mov
mov
xchg
or
cmps
xor
inc
test
and
mov
xchg
aad
mov
push
fxch
xchg
data16
jnp
pop
ja
bound
push
sbb
pusha
outs
addr16
mov
jae
xlat
and
loope
xor
inc
and
ret
movs
mov
or
les
pop
dec
add
sub
xchg
cmp
dec
add
xchg
loope
repnz
popw
sbb
loop
push
adc
push
pop
int
in
popa
mov
mov
lods
enter
mov
aaa
and
js
xchg
aam
xchg
pop
scas
stos
test
inc
cmp
mov
daa
cdq
lock
cmp
xor
inc
enter
jb
mov
scas
inc
shl
fcomp
mov
sub
div
addr16
sar
jnp
jb
sbb
pop
sub
dec
jmp
add
cmp
das
iret
shl
mov
mov
enter
xor
enter
lahf
lock
pop
xchg
repnz
ror
and
out
cmp
jge
movs
daa
adc
pop
data16
mov
sbb
(bad)
out
mov
stos
sahf
sbb
mov
aas
call
bound
or
popf
jnp
xor
sar
add
jg
sub
sbb
or
push
cdq
les
loope
inc
lock
clc
mov
push
shl
clc
add
xchg
add
mov
outs
iret
repnz
movs
outs
das
xchg
pop
and
test
(bad)
leave
(bad)
out
jg
mov
icebp
cmps
inc
(bad)
cli
inc
test
mov
mov
outs
(bad)
pop
push
fs
movs
les
ins
mov
xor
lods
imul
pop
outs
fs
(bad)
mov
jle
xchg
or
js
add
fsub
mov
bnd
mov
int3
jno
mov
cmp
iret
lahf
aad
data16
es
imul
xchg
add
loope
out
mov
push
shl
pop
repz
mov
ret
dec
iret
xor
out
push
rol
fld
pusha
cs
movs
nop
dec
mov
scas
rol
cmps
in
mov
inc
cmps
jmp
jp
and
lods
shr
je
push
sbb
inc
cmp
fld
iret
xchg
test
mov
xchg
push
sbb
imul
loop
jmp
fdivr
hlt
icebp
pop
sbb
(bad)
xlat
je
div
jnp
sub
je
xor
pushf
fbld
cmp
mov
mov
xchg
je
mov
adc
dec
imul
loope
call
xor
stos
scas
outs
push
les
or
xor
jp
mov
outs
pop
enter
in
stos
cmp
cmp
ror
cmp
mov
mov
jmp
shl
imul
mov
cmp
retf
outs
cs
mov
xchg
xchg
in
ins
push
push
sub
sub
jno
mov
xor
dec
icebp
mov
pop
jae
sub
popf
adc
loope
jge
lahf
mov
push
mov
xor
js
mov
xchg
loop
rcl
adc
mov
sub
lock
cwde
dec
and
outs
mov
sbb
(bad)
push
stc
pop
out
add
arpl
xor
sbb
xchg
aas
inc
jp
mov
in
arpl
mov
dec
or
fs
lods
mul
jne
(bad)
push
jp
xor
or
cmp
in
mov
push
in
or
jb
retf
xchg
mov
cwde
mov
jae
loopne
loop
jbe
fimul
and
mov
(bad)
cmp
sub
imul
imul
adc
lea
or
mov
xor
mov
and
push
repnz
es
ja
add
sub
mov
nop
lea
ret
jnp
shl
push
int3
addr16
aam
and
push
in
mov
xchg
sub
add
pop
mov
pop
mov
adc
repnz
retf
jne
mov
(bad)
clc
sbb
sbb
add
(bad)
fisttp
inc
aaa
push
outs
xchg
test
cli
and
jge
mov
or
arpl
sub
cmp
dec
mov
mov
pop
scas
fsubr
aas
pop
pop
inc
and
adc
mov
add
test
sar
je
pop
inc
or
xor
div
ins
cmp
push
ret
cmp
jo
cwde
cmp
lds
aad
nop
in
push
call
scas
xchg
cld
sub
in
xchg
ret
or
jp
movs
ja
(bad)
mov
jmp
ror
add
das
sub
jecxz
call
pop
inc
pop
push
je
cmps
cwde
mov
add
aam
test
push
in
je
test
xchg
int
scas
xchg
pop
inc
div
loop
or
mov
and
call
movs
and
lds
adc
rol
daa
fsubr
add
add
pop
sbb
mov
loop
call
loop
rol
adc
jb
mov
jge
push
adc
xchg
xor
or
sub
ficom
xor
or
nop
addr16
dec
out
int
mov
xlat
push
retf
or
lea
sahf
xlat
stos
mov
xor
push
push
movs
jnp
mov
push
mov
mov
xchg
pop
mov
pop
cdq
test
jne
pop
or
jmp
ss
shl
fs
shr
fidivr
mov
mov
shr
xor
mov
xchg
daa
mov
xchg
mov
dec
inc
popa
dec
call
jbe
into
push
xor
popw
mov
imul
push
dec
sub
inc
ret
outs
iret
dec
pop
push
push
dec
jno
pop
jbe
add
repnz
loope
(bad)
push
push
mov
stos
sub
sub
rol
sbb
adc
pop
fistp
imul
icebp
rol
sahf
mov
hlt
pusha
jmp
and
leave
js
mov
pop
bound
loopne
neg
cli
add
jne
fisttp
addr16
ret
cmp
cmps
call
icebp
push
aam
sbb
pop
cs
and
vpminub
clc
arpl
icebp
cs
sub
cmc
dec
push
mov
inc
retf
sar
mov
pop
inc
stos
and
xchg
sub
cli
mov
ja
dec
mov
xor
data16
sbb
movs
loopne
jno
sbb
add
mov
imul
or
pop
dec
shl
jb
lods
rcr
(bad)
jb
or
and
add
pop
pop
adc
(bad)
loope
cmp
imul
push
mov
cmp
pop
pop
outs
(bad)
xlat
sbb
push
mov
xchg
xor
jmp
lods
mov
je
sbb
fdivp
mov
or
cli
ins
mov
cwde
add
addr16
and
sahf
cmp
xchg
stos
stos
nop
gs
adc
imul
xlat
mov
cmp
and
add
shl
dec
arpl
outs
pop
sbb
or
or
aam
add
sahf
mov
imul
inc
jge
lods
lahf
mov
push
and
sub
test
retf
cwde
popa
sbb
sar
(bad)
fs
movs
arpl
ret
iretw
cwde
pop
into
repnz
popa
ins
pop
inc
nop
inc
shl
movs
loop
push
es
mov
daa
and
and
(bad)
iret
xchg
mul
imul
js
lahf
push
stos
scas
xchg
lea
dec
lahf
xor
pop
mov
mov
mov
xchg
mov
and
test
sar
push
neg
sub
outs
push
push
fwait
jmp
adc
and
jnp
sahf
or
jbe
adc
das
mov
lock
cdq
jae
add
inc
mov
je
lods
popa
cmp
or
jae
leave
adc
cmp
in
sbb
push
aad
movs
scas
jo
push
xchg
jae
push
daa
push
inc
js
cli
aad
cmp
cmc
dec
adc
pop
pop
enter
push
or
xchg
fsubr
ret
loop
lods
shr
repnz
mov
and
xchg
push
je
mov
mov
mov
stos
sbb
xor
(bad)
fldcw
jne
sub
shr
shl
or
jbe
int3
add
mov
mov
sbb
ror
sub
or
retf
arpl
push
popf
mov
sub
lods
mov
and
push
push
cli
nop
jns
push
cmp
mov
jl
stos
mul
dec
sar
mov
(bad)
jmp
dec
movs
fiadd
in
int3
sub
push
add
push
cld
dec
add
jecxz
movs
pop
add
int
test
mov
stc
sbb
mov
out
loop
hlt
push
push
xchg
jae
cmps
outs
addr16
sub
aam
xlat
xchg
cmp
mov
push
mov
pop
outs
sub
cld
adc
pop
mov
fistp
lea
push
aad
leave
out
gs
ficom
cmp
rol
mov
mov
and
fwait
xchg
xchg
or
mov
loop
xchg
xor
mov
xchg
inc
int
shl
fmul
mov
rcr
push
fnsave
push
test
push
or
daa
outs
enter
xchg
dec
sub
jns
pop
into
int
movs
push
(bad)
pop
movs
push
int3
int
sbb
in
nop
mov
push
inc
sub
and
xchg
sbb
or
jle
mov
push
retf
test
stos
jno
adc
stos
xchg
jmp
js
cmp
in
(bad)
cwde
pop
cmp
pop
fwait
call
lea
sahf
jnp
jae
imul
add
inc
push
loop
jmp
test
sbb
(bad)
jmp
repz
xor
(bad)
loopne
adc
out
iret
aaa
or
pop
fwait
push
xor
xor
out
aad
xor
pop
push
cmps
retf
pop
call
sub
pusha
rcl
iret
(bad)
mov
bound
inc
adc
mov
dec
cmps
out
mov
mov
jmp
js
daa
push
push
push
push
dec
adc
xchg
jae
jecxz
push
popa
cmc
rcl
clc
fsubrp
int
xor
pop
and
(bad)
in
adc
mov
popf
or
xor
hlt
imul
sub
or
cmps
sahf
ss
fidivr
or
pop
imul
mov
loop
dec
inc
(bad)
lds
xchg
sub
(bad)
jb
mov
push
dec
adc
pop
adc
je
mov
fnstsw
xor
adc
push
xchg
fs
jno
sbb
mov
mov
and
std
inc
retf
movs
sbb
imul
lods
fstp
ins
shr
inc
dec
cli
mov
test
ins
xor
cmp
lods
imul
(bad)
(bad)
sub
aaa
jbe
ror
add
jo
out
mov
inc
pop
jnp
add
(bad)
in
je
dec
sub
push
or
adc
sub
in
mov
hlt
aaa
dec
test
jne
mov
pop
sbb
mov
jmp
movs
cmp
pop
mov
push
in
jae
and
sahf
mov
jmp
js
sub
pop
cmp
repz
mov
mov
mov
dec
pop
sbb
mov
add
inc
pop
push
mov
xchg
movs
xlat
in
mov
(bad)
mov
pop
sbb
mov
adc
imul
loope
sbb
mov
xlat
cmp
add
mov
lods
xor
test
inc
inc
out
pop
in
pop
sub
out
pop
rol
retf
ins
adc
sbb
movs
test
jg
popf
mov
mov
shl
inc
mov
in
das
imul
cmps
in
iret
cmps
jo
mov
stos
retf
jb
cmp
lahf
inc
shr
xchg
mov
adc
sahf
retf
push
mov
mov
xchg
cmp
daa
dec
xchg
addr16
xlat
retf
ss
test
icebp
fnsave
sahf
cdq
mov
ret
sbb
call
frstor
int3
in
shr
add
rcr
cmps
movs
xchg
jno
pop
mov
jae
ins
xchg
mov
pop
xchg
fcomp
in
idiv
jne
lods
dec
mov
jae
cmp
(bad)
rol
jge
jp
jecxz
inc
loopne
cmp
loopne
(bad)
movs
inc
cli
xchg
dec
adc
ss
inc
cmp
outs
aad
imul
xchg
aaa
fcom
imul
add
and
and
ret
dec
pop
data16
outs
scas
lock
(bad)
pusha
push
cmp
fmulp
hlt
idiv
cmp
add
inc
mov
pop
push
out
jns
les
dec
and
aaa
or
psrld
aad
mov
std
sbb
pop
movs
or
mov
int
pop
in
pop
and
inc
mov
ins
stc
mov
xor
dec
or
test
lea
pop
mov
movs
xchg
add
outs
jecxz
and
inc
xchg
push
outs
das
and
push
dec
outs
push
dec
mov
xor
dec
sbb
xlat
int
out
imul
fimul
adc
cmps
ja
adc
inc
in
cdq
and
xor
xchg
cmp
ds
rol
mov
mov
dec
and
mov
dec
and
or
pop
xor
push
js
test
repnz
mov
and
push
cmps
add
test
dec
imul
popf
inc
fisttp
jp
push
rcr
fcomp
mov
nop
inc
dec
aam
and
out
shl
stos
sub
addr16
adc
xchg
iret
inc
dec
push
and
sbb
js
rol
shr
jnp
fidiv
neg
push
aam
xchg
icebp
mov
xchg
fwait
sbb
aad
jo
daa
jmp
xlat
test
sar
inc
gs
test
or
sti
dec
dec
and
leave
mov
xchg
or
fst
and
dec
in
and
xstore-rng
cmps
inc
xor
not
ins
(bad)
dec
and
mov
(bad)
loop
jp
popa
jb
xor
or
mov
out
xchg
dec
and
push
dec
and
repnz
mov
and
dec
adc
and
adc
addr16
ins
stos
arpl
and
mov
or
leave
and
cmp
aaa
xor
mov
push
dec
pop
(bad)
fldcw
add
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
(bad)
fild
inc
add
add
push
add
push
pop
pop
push
or
adc
or
or
adc
(bad)
adc
adc
sbb
adc
push
sbb
and
push
and
and
daa
sub
sub
pop
sub
and
fild
inc
add
pop
pop
or
or
or
adc
sbb
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
or
fiadd
and
add
add
adc
add
add
les
sbb
add
add
add
add
add
les
dec
adc
add
add
add
add
pop
add
add
add
add
adc
and
pop
adc
adc
jb
rcl
adc
and
inc
jae
or
inc
adc
sbb
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
adc
adc
xor
inc
add
and
xor
push
and
inc
bound
add
add
add
add
add
add
adc
pushf
add
shl
inc
aam
and
fs
sbb
enter
dec
mov
fldcw
pop
and
sbb
mov
fsubr
movs
xchg
cmp
pop
adc
push
repz
adc
cmps
add
adc
mov
lods
mov
leave
push
push
jb
mov
pop
adc
dec
mov
daa
add
dec
mov
fsubr
fldcw
adc
adc
inc
sub
inc
pop
and
ins
test
sub
and
test
xchg
enter
adc
ins
xchg
retf
or
inc
inc
mov
enter
sub
dec
and
(bad)
push
dec
cld
mov
dec
cwde
ins
fwait
adc
cmp
cmps
mov
es
and
cmps
fstp
sbb
mov
dec
ins
je
movs
fld
lods
mov
sahf
pop
or
mov
popa
jne
and
xchg
jno
cmp
pop
sub
ss
pop
add
(bad)
add
out
int
ins
push
mov
and
dec
repz
std
test
pusha
xor
icebp
push
inc
repnz
rol
outs
mov
das
dec
inc
je
div
jnp
jmp
mov
add
pusha
jae
popa
stos
cdq
fnsave
(bad)
xchg
pop
cdq
pop
lods
mov
js
xlat
gs
stc
inc
dec
in
push
push
in
jne
add
add
imul
ret
std
stos
(bad)
iret
nop
mov
das
jno
jmp
dec
sbb
out
out
scas
leave
push
mov
dec
xor
xchg
outs
adc
cs
adc
(bad)
mov
jbe
ret
cli
lods
dec
jg
push
dec
pop
out
xchg
push
pop
test
arpl
mov
aam
xlat
mov
test
aam
aam
pop
fst
sbb
inc
dec
xchg
inc
setb
pusha
fs
in
and
retf
iret
cmp
xchg
fwait
ret
call
inc
out
dec
test
iret
cmp
int3
inc
cs
repnz
xor
push
shl
jbe
retf
sbb
pop
cs
xlat
xor
pop
ror
lods
mov
cs
mov
add
aam
inc
mov
xor
je
(bad)
fcom
lods
mov
push
jle
or
cli
stos
repnz
out
test
cmps
mov
test
js
push
std
lock
out
(bad)
push
mov
push
jle
test
iret
(bad)
lods
call
call
es
sbb
push
jle
retf
pop
push
in
scas
cmc
push
mov
aad
mov
add
out
aaa
jmp
in
ins
repz
movs
(bad)
stos
fistp
neg
mov
fidiv
scas
popf
mov
inc
sub
mov
cmp
repz
in
(bad)
jmp
loop
sbb
pop
(bad)
sbb
addr16
push
jae
adc
push
sbb
add
jmp
retf
stc
mov
repz
push
aaa
leave
inc
imul
mov
push
jmp
push
out
test
stos
movs
aaa
adc
lods
mov
push
bound
push
retf
cli
or
and
xchg
add
xchg
add
aam
adc
push
xor
jne
mov
sub
push
adc
inc
xchg
pop
cmp
int3
lds
lods
cmp
add
push
push
lods
movs
add
add
ins
xchg
sbb
push
mov
sbb
sub
fs
or
test
xor
adc
mov
and
sub
pop
and
ins
adc
adc
pop
push
inc
adc
inc
adc
dec
xchg
add
dec
enter
mov
push
mov
sub
pop
sub
add
pop
jmp
adc
cmp
sbb
scas
xor
dec
lds
dec
cwde
mov
sbb
stos
or
cmp
dec
xor
imul
ja
into
(bad)
mov
aaa
pop
push
cmp
xor
ins
inc
test
or
in
pop
add
pusha
nop
ds
(bad)
fstp
arpl
dec
inc
mov
popa
xor
jle
sbb
push
ds
mov
xchg
and
pop
fdivp
dec
cmps
cmpps
pop
inc
mov
or
mov
cmp
cmp
mov
movs
adc
cmps
xchg
mov
inc
mov
add
pop
mov
push
pop
aaa
jp
out
fneni(8087
sub
mov
xchg
or
imul
xor
pop
in
stos
or
jp
xchg
ins
into
in
mov
add
sbb
lea
mov
sbb
mov
jb
or
cmp
pushf
mov
nop
rol
xchg
imul
stos
jecxz
cmp
ret
fst
ret
mov
mov
push
stos
aas
test
outs
mov
retf
cmp
dec
cmp
mov
sbb
in
jge
out
sub
les
push
jae
mov
dec
fisub
pop
adc
out
xor
out
lahf
xor
into
(bad)
sub
cld
popa
or
or
in
jnp
inc
in
inc
ja
dec
dec
cmc
imul
aas
push
gs
(bad)
shr
cmp
cmp
iret
(bad)
scas
cmc
push
movs
loop
cmps
jge
imul
jno
dec
test
mov
popf
sti
pop
sub
cdq
retf
mov
xor
jne
cmp
loop
cmp
jecxz
push
lahf
pop
or
scas
repz
fldcw
mov
sbb
mov
pop
int3
jne
(bad)
je
cmps
and
mov
jmp
out
out
lods
(bad)
outs
sbb
stc
test
mov
pop
repz
inc
in
mov
ins
mov
(bad)
pop
cli
stos
dec
stos
cmp
frstor
(bad)
and
les
jmp
mov
jne
outs
aad
inc
sbb
sbb
scas
cmp
push
not
push
add
xchg
xor
mov
imul
push
lds
jge
lea
test
cmp
js
aad
bound
cmp
clc
xor
outs
and
jb
pushf
es
popa
push
and
test
pop
pop
loop
ret
test
fisttp
les
mov
loope
je
test
call
dec
out
fsubr
inc
cmp
push
push
xor
ret
pop
and
jbe
mov
les
das
and
int3
or
cld
rcr
das
fwait
mov
jg
(bad)
sti
jnp
call
les
pop
xchg
mov
inc
mov
loop
push
xor
nop
(bad)
popf
ins
daa
in
fbstp
fwait
mov
imul
loop
loope
movs
std
push
jae
bound
fisubr
jb
pop
xor
ret
bound
hlt
aas
adc
add
das
repz
stos
xor
jmp
hlt
out
imul
jae
fsubr
xor
add
(bad)
push
fnstsw
shl
jmp
ret
and
cmp
push
in
xor
xor
shl
jne
sar
out
adc
outs
jo
sbb
push
push
push
jns
dec
inc
ja
jnp
outs
jo
ret
push
jns
int
sbb
xor
jae
loope
aaa
fnstenv
cmp
mov
sub
mov
arpl
mov
xchg
mov
test
and
inc
ret
dec
movs
int3
xchg
xchg
in
in
out
cmps
push
cdq
stos
sub
ds
dec
cwde
jbe
retf
sub
and
lock
gs
mov
sub
inc
pop
push
in
pop
sub
mov
js
retf
(bad)
ss
ss
das
sbb
inc
ret
daa
(bad)
sub
xchg
stos
fiadd
mov
fild
repnz
fimul
test
mov
retf
lods
ds
adc
inc
(bad)
js
push
mov
sbb
xor
jecxz
out
push
and
fstp
in
mov
dec
xor
bound
in
iret
sbb
pop
rol
sub
movs
and
retf
and
rol
nop
call
cmps
jl
gs
xlat
dec
dec
fs
movs
mov
aaa
pop
loop
and
mov
sar
loop
sbb
add
cwde
mov
xor
xchg
(bad)
pop
dec
inc
repnz
dec
mov
ret
mov
sub
icebp
dec
out
push
adc
pop
jns
adc
or
imul
shl
mov
dec
fadd
dec
out
jecxz
arpl
in
mov
cmp
outs
pusha
aas
fst
push
push
add
popa
icebp
aam
test
scas
fsubr
mov
xor
mov
movs
into
xchg
cmp
xchg
jmp
inc
mov
add
and
stos
(bad)
loop
inc
sbb
push
sbb
jmp
pop
xchg
mov
push
dec
leave
test
fdivr
movs
dec
div
js
jno
ror
jmp
fucomp
jge
js
xor
les
(bad)
retf
or
fwait
das
cdq
add
cmp
std
fdivr
popf
and
jmp
lods
jle
jecxz
add
iret
cmp
nop
jge
outs
ja
(bad)
je
ret
lahf
mov
mov
dec
mov
or
or
jle
jl
aam
sti
xor
loope
pusha
aam
sbb
and
inc
popa
cwde
mov
shl
jg
loope
adc
push
leave
fs
sbb
add
div
in
mov
xchg
repz
cs
mov
es
fisubr
(bad)
dec
loope
cs
mov
(bad)
mov
inc
and
dec
jmp
into
or
int3
fnstsw
jl
jle
or
cmp
ja
xor
lods
lds
add
sbb
inc
mov
dec
sbb
movs
cmp
vpsrlq
jae
and
xchg
(bad)
in
in
imul
pop
xor
jno
js
ret
jne
adc
and
das
fsubrp
mov
ficom
test
out
fiadd
mov
addr16
mov
or
or
into
jbe
pop
imul
adc
rcr
or
jae
dec
imul
or
fnstsw
sbb
je
or
cmp
fisubr
retf
mov
inc
xchg
addr16
dec
repz
repnz
(bad)
mov
es
or
sub
mov
jmp
ret
xchg
(bad)
dec
mov
and
sar
(bad)
stos
mov
fwait
hlt
or
pop
mov
and
repnz
xlat
xchg
xor
call
xchg
mov
pop
fld
push
mov
sbb
fdivr
jmp
cmp
stos
dec
jmp
mov
je
adc
jl
retf
bound
xlat
adc
hlt
ja
js
sar
ins
push
test
adc
dec
scas
aaa
xchg
into
call
push
test
add
call
fisttp
dec
pop
aaa
or
mov
pop
sub
push
(bad)
ret
movs
jo
(bad)
dec
fstp
push
mov
mov
nop
lea
mov
mov
adc
int
fst
dec
sbb
ins
pcmpgtw
mov
fwait
mov
scas
fwait
mov
aaa
in
cmp
fnstcw
in
xchg
push
dec
fld
std
xchg
sahf
xor
xchg
(bad)
std
aas
gs
mov
mov
aam
jno
(bad)
and
xor
cmp
mov
push
mov
adc
ja
xor
psubsb
inc
cli
imul
dec
mov
mov
mov
add
inc
cmps
mov
sbb
arpl
dec
pop
scas
sti
cmp
fnstcw
inc
cld
cmp
jg
shl
push
shl
and
dec
(bad)
add
lods
dec
dec
push
sbb
xchg
pop
cmp
adc
test
fxch
out
adc
sbb
jg
ins
mov
sub
leave
cld
jl
xor
xor
in
inc
pop
jne
xchg
jno
cmps
loopne
fbstp
cwde
fisubr
lods
int
dec
cmp
dec
shl
cmp
pop
adc
sub
cmp
mov
aaa
call
push
mov
fsubr
pmaxsw
cmp
jae
xchg
pop
pop
inc
rol
mov
mov
fbstp
sbb
sbb
push
ds
or
fdiv
adc
cmp
inc
lods
push
loop
xchg
loope
push
jmp
lods
sub
mov
mov
bound
sar
mov
cmp
inc
pop
adc
lods
dec
ins
fisttp
dec
xchg
cmp
dec
push
xor
pop
dec
lds
jne
(bad)
xor
popa
cdq
mov
cmc
push
inc
rcr
pop
pop
shl
icebp
mov
xchg
cwde
pushf
movzx
sar
or
jle
push
inc
inc
inc
fsub
clc
xchg
push
gs
call
jnp
xchg
inc
mov
in
pop
jmp
jnp
mov
inc
lock
fidiv
lods
sub
cs
mov
mov
jne
stos
cmp
(bad)
jne
(bad)
pusha
rol
xor
arpl
sub
sti
cmp
jnp
jnp
mov
xchg
sti
dec
or
xchg
xchg
pop
in
push
into
add
cwde
lahf
and
clc
push
les
or
jbe
cmp
shr
dec
pop
out
sbb
loope
jnp
and
xor
jge
lods
cli
push
mov
dec
lds
pop
and
sub
fidivr
xor
adc
mov
lods
pop
add
sbb
xchg
cmc
adc
add
out
(bad)
cmp
retf
aad
mov
stc
xchg
loopne
inc
(bad)
loop
inc
push
lds
es
call
repz
add
xlat
imul
dec
dec
ret
mov
xchg
mov
xchg
xchg
addr16
push
test
xchg
push
xchg
lock
pop
or
mov
repnz
out
(bad)
pop
inc
sbb
cdq
inc
ja
mov
inc
jbe
dec
fst
test
popf
xchg
mov
pop
xor
sahf
jns
jbe
pop
pop
mov
push
arpl
jae
cmps
test
sbb
int3
jl
and
call
call
out
pop
aad
xor
jl
jp
cmps
xor
fsubr
push
ins
mov
out
je
pop
mov
ins
pop
jnp
xor
loop
fisubr
or
ret
arpl
xchg
retf
fbld
(bad)
xlat
outs
sbb
jl
(bad)
adc
inc
das
mov
ins
(bad)
jle
aas
push
adc
shl
dec
inc
or
cld
inc
std
cmp
(bad)
aam
adc
cmp
retf
icebp
(bad)
jb
pop
call
or
jmp
jg
mov
mov
inc
sub
popa
and
or
add
rol
pop
retf
inc
xor
cmp
dec
or
int3
test
fmul
scas
mov
in
dec
aad
es
(bad)
mov
fist
inc
in
call
sahf
sub
inc
dec
and
push
or
(bad)
and
nop
rol
pop
std
push
lods
lahf
data16
sub
xor
int3
and
or
cwde
xchg
inc
stc
sub
clc
lahf
adc
pop
dec
adc
jbe
(bad)
and
icebp
adc
cpuid
push
rol
dec
xchg
(bad)
add
dec
stos
dec
xor
jno
(bad)
jae
ja
aaa
sub
and
popf
xlat
out
rcr
into
pop
xchg
adc
dec
mov
repnz
push
in
outs
sub
mov
popf
xor
stos
sbb
pusha
clc
sbb
out
call
cmp
rcr
xor
into
std
cmc
aaa
sub
or
sbb
out
cmp
push
arpl
mov
cmp
neg
inc
adc
in
cmc
aaa
pop
mov
push
dec
pop
inc
rcr
imul
push
xchg
mov
jle
sar
xchg
xor
gs
dec
push
pop
(bad)
ins
out
std
xchg
inc
sbb
adc
daa
or
dec
popw
adc
sbb
div
test
call
pop
cmp
push
add
dec
sbb
cs
cmp
mov
loope
cld
aaa
cmp
add
sbb
outs
mov
push
push
push
lds
jl
sub
retf
ret
push
xchg
nop
movs
sbb
push
adc
in
jno
or
inc
dec
fisttp
ins
xlat
pop
leave
dec
push
pop
jo
xor
scas
jo
cmps
cmp
imul
sbb
in
test
xor
scas
jmp
jns
or
dec
fidiv
mov
pop
xchg
dec
add
xor
sbb
push
inc
xchg
(bad)
in
cmp
jo
cs
pop
or
call
daa
iret
adc
movs
cs
in
sbb
cmp
pop
sub
sbb
xchg
mov
push
sbb
sbb
adc
inc
sbb
shl
add
test
jno
mov
cmps
push
push
movs
fadd
jecxz
jbe
or
sbb
xor
jne
or
pop
ret
pop
add
sub
frstor
jecxz
ins
in
mov
sbb
mov
popa
sub
xchg
mov
loope
xchg
jnp
arpl
xchg
aaa
push
mov
out
mov
cmp
jbe
es
jp
xchg
int3
test
js
ins
loope
fwait
sub
jmp
mov
aam
loope
or
int3
arpl
jb
inc
pop
(bad)
jno
xchg
loopne
retf
lods
cmp
outs
outs
or
pop
push
mov
pop
out
mov
mov
jecxz
push
ins
mov
shl
and
lea
jo
(bad)
dec
cmps
das
ss
je
and
add
iret
hlt
cmc
cmp
stc
bound
xor
sbb
xchg
repz
jb
sub
pop
int
mov
jecxz
cmp
call
mov
std
or
dec
clc
mov
adc
je
add
in
xor
xchg
ror
arpl
mov
fnstsw
xor
push
loope
xchg
stos
inc
imul
popf
arpl
(bad)
loop
fdivp
pop
sub
mov
jnp
cmp
sbb
push
dec
sbb
sub
pop
mov
fstp
test
jmp
repnz
inc
loope
or
jmp
and
arpl
xor
adc
clc
bound
js
jo
push
jo
adc
jmp
popf
xchg
fs
jmp
lea
inc
pop
cmp
xchg
mov
int
out
icebp
fnstenv
fst
adc
jbe
add
add
mov
ins
cmp
sub
mov
imul
jbe
or
jecxz
cmp
add
int
mov
pusha
cmp
mov
pop
lea
test
inc
mov
shl
shl
add
pop
jbe
cwde
xchg
pushf
fdiv
test
push
in
ffree
repnz
xchg
je
cmp
cmps
popa
jbe
and
cmc
pop
push
xchg
cmc
add
pop
mov
pop
icebp
pop
pushf
mov
imul
(bad)
int
push
mov
or
dec
push
mov
mov
movs
shl
jge
dec
das
cmp
nop
push
sar
lods
push
ds
imul
repnz
xchg
mov
(bad)
xor
push
(bad)
iret
xchg
stos
pusha
mov
inc
gs
sahf
sti
cmp
xchg
aam
in
and
push
int3
push
movs
xchg
mov
repz
(bad)
mov
and
xlat
sbb
out
test
mov
sbb
inc
aas
fimul
mulps
dec
jae
into
sti
movntps
adc
sub
call
lds
jns
mov
cmp
aas
leave
out
outs
pop
pop
pop
mov
cwde
sub
cmp
fs
in
fnstsw
(bad)
retf
cwde
mov
ds
fsubr
popf
jl
outs
daa
jmp
cs
push
daa
pop
ds
jno
outs
(bad)
fcmovnu
js
adc
and
cld
sub
pusha
xchg
lods
jo
out
pop
inc
pop
pop
mov
push
inc
icebp
dec
lock
fiadd
add
or
adc
xor
jns
in
mov
popf
ficomp
cmps
mov
int3
adc
retf
sub
scas
cli
das
lds
pusha
(bad)
pop
mov
in
sub
dec
mov
push
loop
mov
rcl
add
cld
cmp
push
push
push
xchg
xchg
sbb
sbb
hlt
dec
xchg
scas
inc
daa
xchg
std
adc
clc
cmc
pop
mov
cmp
shl
and
test
xchg
mov
xchg
cmp
mov
pop
pop
push
ja
mov
inc
aad
inc
xchg
aad
inc
pop
sub
psubusw
pop
js
sbb
adc
fnstenv
xor
push
add
scas
inc
(bad)
jmp
xor
dec
pop
retf
(bad)
ds
dec
test
add
mov
pop
xor
pop
aas
push
stc
sub
push
push
mov
mov
cmp
mov
in
dec
cmp
sub
ss
cmp
loopne
pop
push
dec
and
call
push
movs
neg
and
or
les
cs
pop
xchg
(bad)
sbb
jmp
push
(bad)
xchg
scas
mov
(bad)
pusha
cmp
or
frstor
scas
jge
or
ret
inc
mov
les
mov
mov
out
dec
int
add
out
adc
ds
pop
in
cmc
mov
lods
mov
xchg
lds
mov
mov
jmp
out
cs
sahf
movs
jae
dec
stos
adc
addr16
fsubr
xchg
mov
data16
arpl
push
(bad)
cmp
inc
(bad)
mov
aad
rcl
xchg
mov
or
mov
or
scas
mov
push
mov
jmp
jle
test
call
adc
and
pop
add
xchg
sub
movs
lock
test
sbb
jne
pop
lods
mov
daa
sti
dec
idiv
push
test
scas
jb
inc
int
push
fcom
dec
cdq
mov
fisubr
in
mov
adc
jne
pop
pop
dec
xchg
and
push
mov
add
gs
inc
rol
sub
les
adc
nop
push
adc
jbe
mov
push
mov
jno
lahf
dec
push
(bad)
cmp
cmp
repz
mov
xor
arpl
into
imul
icebp
mov
mov
mov
fcmovu
imul
stos
in
sub
mov
push
movs
imul
xor
aad
daa
dec
inc
sbb
call
je
lds
enter
mov
les
sbb
push
pop
pop
cmp
mov
out
mov
xchg
mov
mov
ins
vpsubd
lods
push
ins
xchg
iret
jno
push
and
push
lods
jae
push
push
pop
pop
lds
xchg
mov
inc
push
rcr
fsub
(bad)
cmp
out
dec
(bad)
jmp
mov
xchg
mov
mov
add
mov
or
pop
and
je
cmps
mov
pop
xchg
cmc
fsubrp
ins
push
and
test
mov
push
nop
ins
lods
lods
fdiv
xchg
movs
push
jl
nop
pop
jmp
cmps
xor
imul
push
mov
inc
in
and
pop
lods
push
dec
sub
lds
dec
scas
jne
xchg
fucompp
test
sub
adc
idiv
pushf
fadd
cmps
push
test
mov
imul
fwait
add
fcomp
jmp
dec
lock
ret
pusha
(bad)
push
cmp
xchg
push
cmp
(bad)
imul
cmp
or
inc
int3
fist
push
dec
ret
pop
mov
addr16
gs
je
jmp
adc
into
lds
pop
fidivr
(bad)
clc
push
aad
js
cmp
sub
in
scas
movs
xchg
lods
std
push
(bad)
lea
pop
dec
enter
dec
(bad)
int3
and
dec
mov
jmp
sbb
sbb
mov
sbb
sub
addr16
loope
dec
imul
xor
pop
jae
aad
out
cwde
cmp
mov
out
shl
sbb
sub
mov
add
sbb
mov
mov
adc
sbb
xchg
and
mov
fstp
push
push
loopne
add
es
adc
jmp
shl
in
fsubr
and
mov
add
ins
mov
mov
jbe
mov
mov
jae
(bad)
or
dec
cmps
jbe
add
and
(bad)
cmp
repz
mov
ret
sbb
stos
pop
xchg
dec
pop
cmc
fisubr
add
fnstsw
mov
pop
push
jae
dec
dec
or
push
xor
imul
cdq
out
adc
jecxz
test
inc
fbstp
nop
retf
(bad)
aad
xor
(bad)
xlat
repz
arpl
ss
jmp
jmp
mov
test
mov
scas
imul
cmc
or
mov
mov
pusha
xchg
loope
xor
jp
gs
popa
int3
cmps
mov
cs
adc
add
(bad)
retf
js
icebp
bnd
sub
add
shl
add
push
pop
addr16
sar
mov
pop
adc
xchg
xchg
push
pop
js
or
jae
xchg
push
ja
cmc
loope
push
outs
and
adc
es
mov
sub
mov
xchg
rcr
movs
ja
sbb
and
jo
sbb
xchg
push
ja
pop
aaa
pop
jno
loopne
push
in
sar
inc
lock
pop
ret
or
call
test
add
shl
or
pop
js
mov
shl
xadd
mov
les
out
adc
mov
jnp
sub
dec
ds
mov
add
xor
ret
inc
sbb
sti
mov
mov
or
lea
or
cmp
mov
ret
xchg
loopne
(bad)
lea
int
inc
les
mov
xchg
data16
fcomp
out
jae
ds
fwait
mov
hlt
xchg
inc
loopne
inc
mov
shr
push
pop
xchg
mov
mov
cwde
jmp
fnstenv
pop
in
retf
inc
outs
cmp
jp
mov
int
inc
shl
retf
push
jmp
ficomp
lea
add
inc
(bad)
fsubr
scas
pop
and
jp
ss
cmp
lods
cld
rol
retf
pop
popf
imul
or
into
jns
adc
mov
movs
retf
push
add
jmp
cmp
cs
es
pop
es
dec
fwait
cs
iret
mov
mov
push
test
push
fsub
push
dec
fwait
ror
inc
imul
push
xlat
call
inc
mov
xor
scas
and
(bad)
rcr
mov
dec
jne
dec
mov
aaa
push
lea
dec
add
cmp
fdivp
aaa
and
cli
inc
cmp
leave
imul
add
push
push
mov
jmp
jmp
xchg
pop
scas
fisubr
fdivr
test
xor
pusha
adc
xor
mov
xchg
aad
ret
pop
pop
lea
popf
sub
jns
cmp
outs
scas
ror
mov
jmp
push
stos
ins
ins
ds
push
or
push
xor
aaa
jmp
dec
cmp
js
in
or
and
adc
inc
addr16
pop
fsub
or
loop
leave
(bad)
popa
cwde
imul
jmp
js
popa
mov
push
bound
jo
daa
or
add
push
pop
popa
dec
hlt
push
mov
mov
dec
xlat
jmp
xchg
jl
push
aam
arpl
push
stc
push
retf
sbb
xchg
test
scas
ins
fst
imul
pop
push
out
pop
mov
(bad)
enter
xchg
pop
aam
ficom
jb
sub
pop
cmp
pop
xchg
rol
int
lahf
jns
or
cwde
mov
cwde
dec
or
push
push
jge
out
sbb
or
jge
sbb
dec
js
outs
or
clc
(bad)
cs
jne
mov
sub
cmps
ins
add
popa
(bad)
mov
js
dec
sti
ret
jmp
lods
call
arpl
adc
cmp
sub
daa
push
cmp
loope
push
fs
je
or
sahf
dec
in
xchg
mov
stos
pop
xchg
mov
shr
jo
scas
movs
test
pop
xchg
and
xor
cs
clc
jl
idiv
aaa
cmp
adc
push
int3
rcl
jg
shr
push
test
(bad)
js
mov
out
inc
inc
cmp
xchg
cmp
adc
mov
add
test
out
jo
xchg
lea
imul
retf
ins
xor
sahf
sbb
xor
sbb
sbb
cld
(bad)
cmp
aad
icebp
mov
mov
test
jmp
pop
out
scas
mov
cs
lock
test
daa
mov
push
pop
inc
adc
mov
aas
fmul
leave
pop
pop
pop
lods
jne
and
(bad)
movs
lds
fwait
sub
push
sti
dec
jecxz
dec
mov
lahf
push
sbb
inc
dec
xor
cmp
jmp
pop
or
arpl
push
mov
mov
dec
int3
sub
mov
pop
lods
fisubr
pop
cs
or
(bad)
pushf
sti
push
loope
jb
jmp
(bad)
repnz
sbb
xchg
mov
in
inc
mov
mov
mov
daa
outs
mov
pop
scas
gs
imul
aam
jle
loope
push
cmps
dec
out
or
jl
int
mov
inc
test
loop
inc
cmc
pop
je
retf
clc
mov
adc
ficom
mov
ds
mov
mov
or
push
or
mov
and
and
push
push
mov
pop
jmp
cmp
outs
repnz
jb
cli
dec
retf
jns
mov
jae
jmp
repnz
mov
lods
mov
jns
sar
aas
movs
stc
push
pop
adc
inc
push
push
stos
or
pop
enter
psllq
xlat
mov
mov
pop
and
cld
inc
inc
(bad)
mov
jg
push
jle
les
sar
les
jg
push
inc
imul
and
jle
mov
sbb
and
icebp
ds
cdq
outs
not
adc
jo
jbe
retf
mov
dec
jnp
stos
icebp
arpl
add
div
sub
rol
dec
cld
pusha
sub
fdiv
fiadd
sbb
dec
jno
dec
sbb
mov
pop
das
pop
jbe
rcl
jns
mov
xor
sbb
hlt
pop
sbb
and
xlat
jmp
cdq
jo
leave
mov
mov
icebp
push
aaa
mov
add
xchg
in
xchg
xchg
dec
push
mov
and
addr16
pop
sub
sbb
fnstcw
pop
mov
mov
add
inc
lods
nop
xor
xchg
aaa
aaa
dec
sbb
ins
aam
inc
adc
pop
sub
xor
dec
sub
push
loop
and
enter
dec
dec
and
or
jb
mov
fs
je
sbb
jb
outs
nop
fwait
sub
dec
mov
sbb
and
add
push
aad
dec
dec
ret
ins
add
jo
or
and
sbb
mov
stos
mov
pop
inc
(bad)
clc
inc
jecxz
pop
mov
stos
outs
outs
push
call
shr
cdq
pop
mov
mov
mov
sti
stos
xor
inc
arpl
mov
movs
or
mov
bound
mov
ins
repnz
mov
push
cmps
sub
mov
and
popf
mov
and
push
xchg
sbb
inc
inc
cmp
pop
xor
pushf
mov
or
scas
femms
mov
lea
daa
ja
mov
jmp
jne
mov
movs
or
and
sub
cmps
mov
mov
add
fsubp
pop
cdq
scas
and
popa
loop
push
retf
jnp
movs
stos
push
not
repnz
push
ror
mov
arpl
in
out
mov
mov
fisttp
dec
jmp
adc
arpl
call
movs
in
lods
push
xor
pusha
mov
fwait
dec
inc
sar
movs
shr
xchg
inc
pop
mov
shr
mov
cmp
aad
sahf
push
sbb
inc
fldenv
push
jbe
das
mov
test
and
inc
int3
test
scas
adc
sahf
sbb
outs
pop
cwde
jp
jmp
pop
lahf
call
test
xchg
mov
retf
mov
imul
cmps
das
mov
jp
call
out
test
inc
cmps
xchg
int3
rol
sbb
cmp
mov
es
xchg
xor
and
sub
xor
in
or
dec
ret
addr16
or
(bad)
push
in
dec
scas
in
aad
into
retf
cmp
jmp
jge
jo
push
and
inc
cmp
gs
imul
fcomp
cmp
stos
fnstsw
mov
stos
fs
pop
add
cmps
inc
and
pop
jb
(bad)
pop
push
shl
add
ror
xchg
out
clc
ret
jp
mov
add
(bad)
mov
sbb
pop
xor
cs
mov
cmp
mov
xchg
ja
ins
inc
ret
pop
lahf
sub
mov
hlt
repnz
inc
xor
xor
(bad)
inc
inc
dec
push
lea
sbb
push
push
sub
xchg
xlat
icebp
cmp
lock
out
xchg
fdiv
push
mov
scas
loop
aas
enter
push
lds
push
test
cld
sub
ss
cmps
bound
dec
push
sti
fadd
dec
les
adc
inc
les
jno
add
scas
sbb
loope
xchg
scas
pop
ucomiss
cmp
jecxz
sub
imul
lods
sub
ss
xchg
inc
call
jl
jbe
pop
pop
jp
out
inc
int3
bound
or
outs
xor
lods
call
out
cmps
mov
stc
fs
aam
mov
loopne
push
dec
xor
xchg
cdq
and
aad
inc
(bad)
lods
lods
mov
pop
inc
sub
(bad)
aas
in
es
fdiv
dec
push
inc
es
ret
cmc
dec
frstor
lods
(bad)
sti
scas
inc
pop
in
xor
cmp
sbb
push
rcl
adc
repz
outs
mov
mov
sub
cmp
cmp
adc
ret
jmp
sub
jne
push
mov
test
sub
bnd
iret
(bad)
ins
jl
(bad)
retf
sar
xor
cdq
mov
dec
sbb
outs
sbb
fiadd
ds
jp
sbb
mov
out
mov
xchg
cmps
or
(bad)
adc
add
dec
mov
sbb
jnp
sub
mov
cld
sub
jmp
push
jecxz
xor
loopne
jae
pop
loop
repnz
enter
std
push
pop
clc
jecxz
jnp
xor
mov
cld
sahf
sbb
jmp
dec
pop
jns
jno
(bad)
das
int
leave
daa
push
jecxz
jl
xchg
ret
rol
push
xchg
push
lds
inc
out
adc
mov
sub
test
outs
stos
sbb
bound
mov
inc
xchg
xchg
scas
aad
mov
mov
mov
sbb
fcmovb
adc
push
cmps
idiv
pop
pop
sub
fwait
jmp
(bad)
jmp
cld
inc
pushf
pavgw
sahf
mov
pop
sbb
mov
shl
lds
div
leave
js
or
popa
ffreep
sar
movs
aaa
mov
push
cld
cs
ficom
fild
cdq
mov
fadd
mov
arpl
test
lea
ficomp
das
fst
movs
pminsw
mov
std
push
cwde
bound
add
(bad)
addr16
hlt
xchg
or
sahf
lahf
das
mov
xchg
div
add
ret
mov
pop
adc
sbb
inc
(bad)
jae
fbld
mov
ss
fs
fs
ffreep
aaa
sub
je
dec
jle
jb
adc
lds
ins
pushf
shl
xlat
mov
pushf
mov
pop
add
cmp
cmps
shl
and
outs
mov
inc
adc
adc
or
and
mov
nop
adc
int3
mov
movs
ror
dec
int3
push
cwde
test
int3
push
out
inc
mov
es
retf
arpl
jmp
mov
xor
jae
mov
(bad)
or
add
jge
adc
mov
xor
cmp
mov
sbb
xchg
out
rcr
push
push
pusha
cmps
adc
xor
push
(bad)
nop
xor
jmp
push
aas
(bad)
sar
push
pop
inc
pop
jecxz
aad
std
pop
loop
push
clc
into
jmp
dec
gs
mov
das
mov
pop
lea
pop
sub
xchg
sub
call
das
les
into
out
sub
xchg
jnp
aas
mov
fsubp
cld
dec
cld
addr16
xchg
mov
lock
je
jnp
pop
mov
mov
into
call
sub
mov
mov
add
aam
mov
stc
or
in
out
push
jle
jnp
inc
out
daa
(bad)
ja
xor
xor
sahf
icebp
pop
loop
iret
mov
add
into
call
adc
adc
das
les
jecxz
fwait
xchg
leave
add
jecxz
inc
sbb
inc
adc
out
adc
push
mov
sbb
inc
adc
out
add
cld
xchg
(bad)
push
into
(bad)
icebp
add
mov
jns
dec
scas
xchg
pop
out
mov
lahf
adc
(bad)
mov
les
jb
xchg
mov
push
mov
popa
mov
push
mov
fst
stos
mov
and
es
test
or
adc
(bad)
mov
ins
arpl
sub
mov
push
(bad)
les
mov
jnp
hlt
or
shl
dec
xchg
test
in
inc
xchg
mov
sbb
inc
loopne
jns
loope
outs
xlat
mov
push
push
mov
dec
call
mov
les
dec
jae
outs
pop
sub
xor
stos
jno
push
sub
mov
nop
xchg
icebp
sahf
(bad)
stc
stos
jne
mov
int
cmp
or
movs
or
pop
or
(bad)
out
cli
(bad)
retf
(bad)
data16
push
cmp
in
pop
adc
fs
cmp
pop
fnsave
test
cs
mov
push
xchg
lahf
jecxz
into
int
dec
mov
out
jno
pop
dec
scas
push
ret
neg
mov
sub
cli
out
mov
test
xor
repnz
test
(bad)
(bad)
out
jecxz
shr
and
or
ins
nop
add
dec
(bad)
mov
mov
xchg
retf
mov
aam
pushf
scas
cld
xor
popf
sahf
mov
adc
aad
xchg
inc
mov
xor
ins
push
or
aaa
(bad)
mov
cmp
cmp
xor
mov
adc
fdiv
mov
jmp
push
inc
sub
push
or
xchg
mov
arpl
psadbw
push
xor
out
push
mov
sub
mov
cmp
and
repnz
outs
stos
call
push
mov
or
add
pop
push
dec
not
push
retf
dec
jne
outs
iret
std
xlat
cmp
pop
jo
push
das
int
pop
neg
cmove
stos
mov
xchg
push
aaa
jno
dec
jbe
and
test
add
or
add
or
pop
movs
push
inc
adc
adc
cmp
daa
cmp
sbb
adc
lahf
adc
sbb
sub
bound
fisttp
dec
inc
bound
or
mov
cmp
xor
mov
xor
push
inc
adc
push
push
sub
test
adc
lods
cmp
adc
hlt
sbb
jnp
shl
sbb
fsub
cli
jo
(bad)
mov
mov
shl
ss
sub
pop
dec
fsub
sbb
jge
pop
mov
std
dec
cmp
shl
xor
mov
daa
adc
dec
lods
mov
push
and
les
and
call
xchg
pusha
mov
inc
xchg
lds
scas
lods
inc
lahf
jmp
test
push
outs
out
adc
daa
jmp
inc
push
retf
das
push
push
xchg
ja
mov
push
adc
das
cli
xchg
(bad)
gs
clc
xchg
inc
arpl
stc
or
ja
pop
cmc
daa
or
mov
cli
xchg
xor
xchg
retf
jecxz
fldcw
fisttp
scas
add
push
das
cli
xchg
inc
sbb
sub
les
outs
js
shl
aas
repz
(bad)
xchg
(bad)
pushf
les
repz
repz
es
inc
test
retf
out
inc
push
nop
arpl
inc
test
dec
dec
fs
cmp
int
popf
les
test
icebp
es
xchg
jb
push
dec
movs
icebp
outs
fwait
(bad)
jmp
xor
push
jge
mov
lds
lods
push
std
add
fucompp
mov
add
leave
cmc
dec
(bad)
lds
add
shl
fwait
test
lds
aas
icebp
outs
push
movs
loop
pop
loopne
lods
jmp
out
add
lea
push
fld
into
sub
xor
mov
enter
jb
or
(bad)
not
dec
xchg
mov
or
test
out
out
cmp
fcom
fiadd
mov
xor
cmps
out
xchg
ds
cmps
mov
adc
retf
je
cs
fucompp
add
xor
arpl
call
clc
sbb
lods
sub
out
aaa
jne
jb
in
push
push
mov
sahf
push
push
test
stc
pop
xchg
dec
outs
push
sbb
inc
mov
push
push
loope
int
lods
(bad)
mov
nop
jns
mov
daa
jge
das
call
(bad)
mov
outs
or
cmps
cmps
xchg
mov
mov
jecxz
mov
sub
cmp
mov
mov
xchg
inc
ret
es
add
out
jg
sar
jecxz
int3
repz
arpl
add
loop
ds
push
jmp
push
div
and
push
xchg
pop
mov
pop
sub
cmp
js
(bad)
ja
enter
cmps
push
cdq
cmc
lgs
jb
sub
inc
sbb
inc
retf
inc
(bad)
xor
xlat
sbb
stc
scas
ja
test
or
mov
mov
enter
shr
(bad)
push
mov
out
mov
pop
fisub
pop
mov
loope
sub
fst
popf
loope
mov
mov
enter
pop
push
or
or
enter
cwde
iret
pop
xor
fsubrp
ss
dec
or
mov
cs
fwait
test
or
pop
cld
inc
or
icebp
xchg
div
(bad)
jle
retf
cwde
pop
aaa
or
add
shl
js
mov
jmp
retf
scas
dec
mov
mov
push
dec
dec
dec
jno
mov
scas
imul
push
lock
fistp
jmp
leave
ds
sub
jecxz
icebp
push
mov
push
movs
jl
aam
inc
or
or
shl
or
mov
fdiv
jnp
or
loop
sbb
ja
sbb
scas
cmp
and
daa
bound
fld
pop
cs
int
pop
dec
arpl
fsub
or
sbb
in
xchg
xor
nop
jecxz
or
lods
pop
push
mov
test
bound
or
inc
adc
adc
je
inc
adc
or
or
or
or
ins
lock
adc
dec
mov
(bad)
mov
mov
ss
sbb
into
push
sar
fadd
stos
adc
int
add
pop
push
das
xchg
pop
xor
out
mov
sub
mov
mov
in
mov
lds
nop
sahf
leave
aam
jno
mov
mov
sbb
stos
cdq
or
cmp
inc
mov
fisttp
jns
push
sbb
dec
sbb
leave
dec
outs
fs
pushf
popf
xchg
ins
push
out
jge
test
in
and
fsubr
and
shl
inc
pusha
mov
adc
mov
xor
stos
cs
sar
push
jmp
jmp
or
xor
push
xor
xlat
pop
fs
int3
outs
je
retf
and
cmps
test
into
jmp
sbb
cdq
xor
xor
pusha
push
fdecstp
fucompp
or
rcl
movs
add
movs
mov
mov
pop
dec
bndldx
xor
bound
sti
fwait
cmps
test
dec
jmp
je
sub
push
jmp
in
or
sbb
pop
xchg
cmp
ins
test
dec
ret
movs
mov
mov
push
push
dec
loopne
movs
add
jmp
mov
xor
sub
gs
ins
cmc
sahf
loope
mov
mov
jne
(bad)
test
mov
pop
bound
imul
jg
ja
cmp
add
jns
call
inc
xor
mov
cmp
or
push
loopne
lahf
loop
cmp
stos
mov
das
push
adc
mov
sub
pop
push
sbb
imul
sub
cli
pop
mov
lea
fiadd
loop
add
test
imul
ins
ins
pop
cmp
mov
adc
jnp
push
out
das
jnp
ja
jmp
mov
sub
arpl
imul
sub
inc
fbstp
fadd
xor
call
pop
jne
mov
das
test
pushf
pop
jecxz
mov
or
sbb
jmp
add
dec
or
js
mov
popa
and
les
mov
cmp
out
xor
mov
leave
add
pop
sub
pop
in
aaa
sbb
sub
popf
mov
mov
jmp
push
js
jo
popf
lea
adc
adc
push
mov
imul
sbb
push
(bad)
and
adc
movs
jne
ja
sub
jno
push
and
test
and
test
add
test
add
test
add
xchg
lock
jno
mov
clc
jge
and
in
in
mov
repz
(bad)
cdq
and
jne
scas
lahf
fstp
jns
repnz
sub
jecxz
retf
mov
fidivr
pop
adc
xor
jge
into
xchg
(bad)
cmp
cmp
jecxz
push
push
lods
mov
jmp
push
icebp
and
ret
adc
push
movs
sar
jp
xchg
push
inc
nop
mov
ins
push
div
push
push
inc
icebp
ror
cmp
xor
int3
cs
cmp
fist
mov
clc
sbb
inc
jecxz
imul
out
mov
sub
jae
repnz
sub
cmp
jbe
push
fisttp
and
fwait
out
mov
jl
ss
mov
xchg
std
adc
movs
out
or
pop
stos
push
sub
imul
repz
and
add
push
inc
mov
lea
int
ins
dec
movs
and
inc
(bad)
xchg
jnp
cdq
fwait
(bad)
in
adc
call
fs
std
add
sub
out
adc
inc
repnz
int
ret
mov
imul
jnp
fst
pop
push
out
movs
out
jle
push
fild
lea
call
push
push
mov
mov
mov
test
mov
xlat
inc
sti
mov
jne
ins
lds
fisubr
test
jo
mov
sub
pop
add
xor
inc
ficom
jne
stos
or
fisttp
movs
push
mov
aas
xor
imul
sbb
ret
add
xor
fmul
retf
mov
stos
cmp
scas
mov
loopne
xchg
jg
xchg
imul
xchg
cli
cs
xchg
lods
rcl
sar
rcr
aam
jno
inc
test
push
and
movs
push
and
in
js
sbb
fldenv
std
cmp
push
into
sbb
ins
in
xor
xchg
out
das
fcom
sub
sahf
and
shl
sbb
stos
test
push
daa
test
jnp
push
ret
aas
add
jb
mov
arpl
test
mov
mov
popa
cdq
cmp
(bad)
pushfw
pop
cli
lahf
sti
sub
and
push
bound
mov
xchg
cmps
sub
movs
jo
out
(bad)
push
cld
and
clc
cmps
js
dec
sub
pushf
loope
xchg
imul
add
xor
or
mov
outs
sub
add
pop
out
imul
mov
sbb
arpl
les
sub
mov
pop
cmp
sbb
mov
icebp
mov
aas
seta
lods
xor
in
aad
sbb
dec
cmp
mul
and
add
dec
shl
jnp
aas
stos
je
push
out
sbb
icebp
inc
cmps
(bad)
push
lahf
xchg
out
cld
sbb
int3
sbb
lods
(bad)
loopne
cwde
sub
imul
jae
arpl
shr
repz
xchg
cmps
repz
in
xchg
add
jae
sub
popf
(bad)
add
inc
jecxz
ret
xchg
mov
jo
adc
in
dec
mov
arpl
mov
sub
clc
or
dec
shr
cmp
xor
(bad)
adc
pop
outs
mov
inc
in
or
push
fbld
cld
aad
call
arpl
mov
xor
icebp
adc
fwait
jns
mov
adc
add
pusha
dec
jecxz
jns
stos
loop
mov
jmp
pop
or
inc
je
and
inc
mov
shl
inc
adc
test
adc
test
mov
add
cld
sub
adc
sub
xor
cmp
xchg
mov
jge
push
jo
adc
or
outs
ja
sbb
out
xchg
adc
rcl
dec
dec
ror
push
dec
addr16
jbe
in
inc
test
mov
stos
xor
cmp
retf
scas
mov
cdq
call
mov
cmp
mov
gs
mov
test
cmps
es
out
or
test
xchg
mov
lahf
push
test
retf
retf
and
je
lahf
repnz
out
call
mov
(bad)
mov
mov
test
cmp
hlt
sub
mov
mov
cwde
dec
in
mov
(bad)
stos
stos
data16
sti
sub
jl
cmc
mov
jge
xchg
xor
sub
mov
inc
cmps
in
stos
arpl
push
data16
lds
jecxz
cmc
pop
repz
scas
cmps
pop
gs
repz
mov
add
xchg
dec
xor
and
pop
inc
mov
call
adc
mov
(bad)
push
mov
(bad)
or
aad
jge
jmp
sbb
call
adc
and
es
pop
je
inc
dec
ret
js
lahf
sbb
mov
pop
xchg
in
inc
repnz
jbe
push
loop
daa
mov
push
lods
iret
in
sti
push
jle
mov
mov
inc
int3
hlt
sub
fwait
jns
jno
fnsave
xor
jge
in
stos
cmps
outs
retf
fmulp
gs
stos
scas
aas
out
popf
imul
out
rsm
rcl
repnz
arpl
mov
fstp
add
js
pop
mov
add
mov
fcomp
aas
sbb
dec
mov
inc
out
pushf
daa
shl
mov
mov
cmps
cwde
jp
test
inc
push
jg
and
mov
or
xlat
sub
sbb
jg
jo
popf
clc
xchg
pop
dec
dec
inc
hlt
fsubr
xchg
out
pop
outs
xchg
enter
(bad)
je
pusha
(bad)
mov
or
int
sub
stc
pusha
nop
mov
fbld
jmp
cmp
stos
or
jns
jmp
popf
lds
xchg
les
adc
shr
inc
popf
mov
pop
pop
mov
dec
call
cmps
xor
repnz
mov
dec
inc
adc
call
popa
repz
mov
ret
mov
ss
fcomp
out
xchg
(bad)
jo
pop
dec
fwait
and
cdq
mov
inc
mov
push
inc
daa
ret
xor
dec
pop
add
(bad)
jecxz
dec
mov
inc
call
pushf
inc
xchg
pushf
stos
div
add
push
mov
js
mov
in
pop
pop
mov
mov
daa
(bad)
sti
cs
arpl
mov
lds
shl
sbb
jp
mov
mov
xchg
outs
shufps
push
cmp
and
les
push
in
stos
add
call
outs
gs
push
and
(bad)
imul
repz
cdq
pop
ja
(bad)
int
test
jle
xchg
in
movs
scas
mov
arpl
mov
int3
call
inc
lahf
rcl
cmp
shl
int3
cmps
in
add
imul
lea
leave
ins
jno
adc
fld
mov
mov
outs
push
adc
in
pop
adc
sahf
rcr
ret
out
and
cmp
stos
add
mov
xlat
rcl
push
pop
cmp
sahf
push
fbstp
pop
mov
pop
mov
cld
dec
cs
adc
arpl
loope
or
push
dec
or
je
mov
call
fcmovu
inc
ret
xchg
lods
inc
jmp
and
sub
fs
add
fsub
or
cmp
fsub
inc
add
test
adc
push
mov
or
and
ins
mov
imul
xchg
scas
xchg
hlt
ins
fst
or
in
cmp
adc
xchg
scas
mov
mov
outs
aad
fst
sub
nop
loop
jne
dec
mov
xchg
call
dec
inc
loope
and
ds
fs
movs
jo
sahf
dec
and
icebp
mov
mov
mov
pop
and
sar
icebp
ds
int3
pop
jb
pushf
jle
scas
jecxz
mul
push
rcl
jecxz
ins
jb
scas
sbb
or
into
imul
test
(bad)
jg
aas
mov
push
sar
pop
mov
sbb
pushf
(bad)
sbb
popa
xchg
repz
dec
dec
push
sbb
popa
fdiv
inc
xchg
js
leave
inc
out
sbb
push
adc
sub
rcl
aam
inc
fmul
cmps
shl
mov
(bad)
leave
imul
add
jl
std
mov
hlt
mov
push
push
out
outs
test
fnstenv
cmp
jae
lds
adc
movs
cmp
push
xor
cmp
or
sahf
in
and
psrlw
xchg
scas
or
sub
mov
and
fcom
xchg
out
shl
dec
xor
jle
scas
mov
(bad)
jle
sub
xchg
ret
cmp
fwait
mov
movs
jb
stos
sbb
out
scas
fcomp
jle
das
icebp
adc
test
bound
mov
call
xor
int
sbb
push
dec
ins
loope
push
jns
xor
dec
lock
enter
jle
pop
mov
repnz
ds
movs
mov
cdq
inc
arpl
dec
arpl
or
arpl
ins
mov
arpl
xchg
sbb
imul
outs
dec
push
add
data16
add
pop
jge
sbb
mov
mov
mov
test
dec
shl
inc
xchg
iret
sbb
repz
pcmpgtw
lock
xchg
test
call
bound
sti
int
cmc
or
daa
jp
lea
mov
mov
jle
mov
(bad)
or
push
inc
repnz
pop
fistp
dec
xor
imul
aad
test
stos
xchg
mov
jne
fst
sbb
dec
dec
add
push
jo
xor
jmp
retf
xchg
fmulp
mov
fwait
outs
stos
sub
sbb
push
nop
cmp
mov
add
sbb
int3
ret
push
mov
test
gs
cld
nop
pop
mov
(bad)
daa
cmp
mov
inc
pop
pop
push
test
int3
dec
mov
out
retf
jecxz
stc
sub
mov
mov
pop
cmp
(bad)
mov
mov
push
fimul
xchg
mov
test
jno
cmp
mov
fdivr
cmp
jge
movs
inc
aaa
dec
lods
leave
add
cs
test
push
out
call
sbb
sbb
ret
sbb
pop
xchg
fmul
jle
mov
cs
sbb
mov
daa
movs
les
sbb
sub
push
mov
mov
add
arpl
xchg
gs
or
(bad)
cli
and
outs
xchg
mov
dec
sub
dec
fcomp
push
aas
std
xchg
mov
inc
test
push
repnz
fldenv
loopne
in
aad
ror
mov
xchg
int3
test
sbb
fneni(8087
add
add
sub
sub
mov
pslld
cli
mov
fdivr
push
fild
aam
xor
cmp
pop
mov
push
push
rcr
push
test
int
xchg
ret
or
loop
push
jmp
cmp
mov
loop
(bad)
xchg
adc
xor
push
lock
dec
scas
seto
xchg
ja
jnp
mov
shl
cmp
cdq
and
sub
jmp
fimul
ret
jno
push
xchg
lods
frstor
fist
sub
sub
call
and
cmc
push
dec
test
pop
xlat
mov
cmps
popf
ror
rcl
push
call
ins
mul
add
or
fmul
inc
adc
inc
adc
inc
daa
pusha
xchg
sub
add
jb
test
mov
fnsave
jecxz
pop
mov
jb
lds
mov
les
mov
xchg
hlt
fwait
xor
cmp
cmp
popa
mov
(bad)
lds
xchg
jp
xchg
and
out
leave
sub
(bad)
jge
push
in
fadd
mov
out
test
cmp
jmp
movs
int3
cmp
mov
shr
add
pop
cmps
in
(bad)
add
cmp
aaa
popf
call
aaa
mov
scas
sub
in
xchg
inc
cwde
out
jl
ds
fnsave
retf
sti
(bad)
push
rol
jle
(bad)
(bad)
push
loop
jl
pop
jbe
lods
scas
xchg
cmps
in
sbb
pop
mov
xchg
fsubr
pop
ins
jl
sti
mov
dec
sub
(bad)
cmc
xchg
dec
fist
xchg
call
dec
push
and
xor
mov
xchg
aad
retf
fist
cmps
xor
out
pop
std
xchg
cmp
test
aas
mov
mov
mov
test
test
in
imul
ins
mov
mov
push
pop
int
push
mov
aam
or
mov
lods
jecxz
hlt
stos
int3
imul
xor
in
push
lods
mov
lahf
add
in
cmps
mov
pop
jno
inc
call
pop
ins
shr
and
std
push
test
enter
inc
(bad)
test
mov
jmp
push
mov
cmp
xchg
push
push
stos
mov
dec
daa
cmc
push
out
ret
cdq
mov
call
outs
out
sbb
sub
outs
(bad)
lock
lods
aad
int3
push
aaa
inc
pop
(bad)
cmp
cmp
pop
lea
sub
test
out
jo
mov
inc
sar
adc
ins
js
xor
(bad)
aaa
jae
push
jg
out
mov
movs
mov
mov
dec
loope
and
fs
jmp
sti
push
sar
jb
out
idiv
(bad)
fstp
not
sbb
mov
pop
fldenv
and
int3
aaa
add
or
out
jg
push
mov
ficomp
lods
gs
and
xchg
or
jecxz
leave
retfw
cli
pop
pop
dec
jb
mov
and
mov
pop
pop
adc
(bad)
aad
pop
jno
(bad)
jbe
cmp
movs
xchg
adc
fsubr
sbb
fnstenv
imul
push
adc
xchg
fld
push
cmp
pushf
in
dec
mov
mov
outs
mov
addr16
in
jb
xchg
sbb
jmp
out
cmovb
ret
aam
or
mov
ins
rcl
ins
adc
aam
call
jp
pop
push
mov
das
fsubr
jge
cmp
stos
ja
pop
and
jne
pop
xlat
xor
arpl
out
nop
call
xor
jo
arpl
dec
in
adc
inc
jo
sbb
sbb
stos
stc
pop
ja
or
jno
test
(bad)
rol
sti
mov
stc
stos
out
hlt
jae
leave
aaa
xchg
inc
mov
jle
test
mov
shl
mov
mov
sbb
cmc
push
mov
jmp
fcomp
sbb
xchg
lds
push
mov
repz
cmp
cdq
pop
sbb
(bad)
rcr
test
xchg
out
outs
pop
fld
lods
je
int3
shl
xchg
loopne
jle
pop
popf
test
out
pusha
mov
jne
push
lea
mov
aad
repnz
mov
loop
mov
inc
das
xchg
pop
and
sbb
imul
lahf
mov
fidivr
popa
clc
xor
xchg
pop
and
adc
add
pusha
dec
or
movs
adc
ficomp
xor
xlat
or
push
sub
fs
jns
ins
mov
sub
cmp
fs
pop
and
add
mov
xchg
test
in
shl
push
add
mov
jle
push
inc
dec
add
adc
aad
in
or
or
xor
lods
std
push
and
(bad)
cmps
jp
ins
ficom
ret
xor
loopne
mov
in
pop
retf
jne
mov
das
xchg
das
cmps
xor
ds
addr16
in
enter
lock
pop
ins
inc
call
test
mov
mov
iret
jne
sbb
sti
call
sub
adc
mov
mov
test
jg
sbb
jnp
ret
icebp
sub
clc
push
and
xor
sbb
std
ret
loop
js
scas
jg
int3
xchg
fnstenv
loope
arpl
mov
xchg
and
add
sub
jecxz
inc
js
imul
scas
test
mov
mov
and
mov
cli
mov
test
mov
mov
add
mov
jecxz
mov
rcr
xchg
mov
add
shl
out
inc
cmps
jns
mov
cdq
mov
stc
or
sub
rcl
push
inc
dec
dec
ret
ss
aad
mov
cli
mov
out
or
div
cmp
mov
enter
push
dec
mov
push
fcomip
mov
add
aad
xchg
popa
(bad)
adc
add
bound
sbb
jmp
jmp
jb
xchg
ror
shl
icebp
add
or
(bad)
cmp
jo
or
sbb
shl
cmp
mov
ret
out
mov
dec
cmp
call
stos
sbb
sbb
mov
and
mov
cmp
jne
int
jns
mov
test
ja
into
loope
inc
inc
mov
jle
enter
rcr
shl
xchg
adc
out
inc
or
pop
in
scas
lds
jo
jg
dec
mov
(bad)
outs
inc
arpl
add
cwde
cli
repnz
mov
pop
inc
and
ins
mov
movs
lods
mov
cmp
push
lahf
push
aad
fcom
and
rcr
mov
addr16
mov
push
mov
cwde
adc
stos
ja
int3
mov
xchg
mov
push
aam
xchg
sbb
je
out
mov
mov
inc
adc
push
(bad)
pop
lea
pop
fld
sbb
xchg
pop
test
outs
push
cmp
loop
mov
leave
sub
pop
sbb
imul
push
sar
mov
sbb
outs
and
sbb
mov
call
push
fstp
sbb
mov
xchg
pop
dec
dec
repnz
pop
sbb
shl
cmp
mov
jle
xchg
xchg
sub
ds
inc
aam
jno
or
fild
test
ror
push
enter
clc
inc
sbb
aas
add
gs
out
call
mov
aad
adc
sbb
shl
push
icebp
call
retf
scas
push
stos
add
jns
push
inc
lods
jl
sub
movs
scas
sbb
push
mov
mov
and
fs
popa
add
arpl
dec
sahf
(bad)
mov
jb
and
adc
scas
add
pop
pop
mov
mov
cld
jl
sahf
push
and
test
nop
ror
jno
mov
js
inc
jmp
inc
fld
int3
dec
ins
lods
xlat
cs
pop
cmc
scas
dec
cmps
test
jb
xor
inc
mul
mov
inc
dec
mov
in
scas
jo
jl
adc
jnp
out
push
mov
icebp
xchg
jecxz
push
mov
mov
daa
push
mov
xchg
push
outs
sub
(bad)
aaa
pop
sub
push
fwait
push
or
mov
sub
shl
mov
ss
cwde
adc
xchg
mov
retf
call
into
imul
inc
rcr
add
push
ss
mov
push
aam
out
jnp
inc
addr16
jmp
call
mov
(bad)
mov
jne
fimul
or
pop
mov
inc
(bad)
int3
jmp
xchg
lods
imul
mov
fimul
test
xchg
(bad)
or
jp
test
fsub
test
(bad)
xchg
jae
je
sub
cmp
(bad)
adc
mov
and
in
aaa
dec
inc
(bad)
gs
mov
aad
xchg
test
fisttp
inc
and
jno
inc
call
imul
adc
sbb
fidivr
xor
ss
sbb
into
push
aad
ja
mov
ins
hlt
push
ds
dec
mov
mov
add
stc
test
fsub
adc
fcomp
dec
xchg
pop
bound
xchg
pushf
mov
inc
push
mov
push
mov
or
xor
mov
dec
cmps
enter
idiv
ficomp
je
mov
fsubr
loope
jnp
and
call
test
cs
aaa
fild
ds
pop
cmp
cmps
jns
push
popa
and
xchg
add
out
(bad)
sub
fstp
jl
imul
and
sub
inc
add
push
xlat
js
jns
bound
ret
aaa
ret
sub
xchg
movs
scas
imul
and
mov
dec
movs
stos
push
and
add
or
sti
movs
sbb
cwde
test
cmp
std
shr
mov
jge
push
or
adc
inc
mov
pop
push
inc
sub
push
(bad)
pop
push
dec
mov
and
xor
mov
jno
pop
push
les
mov
inc
fidivr
(bad)
jle
inc
jmp
in
push
nop
and
mov
sahf
mov
push
pop
push
js
loope
xor
les
push
hlt
rol
dec
imul
jecxz
and
mov
gs
mov
(bad)
jo
outs
push
shl
push
mov
loope
retf
xchg
xlat
ret
js
retf
leave
mov
ret
or
mov
mov
out
pop
fwait
jno
or
add
bound
ins
jge
pusha
int3
ret
repz
pop
dec
sub
not
retf
ins
cmp
dec
adc
lea
out
jno
push
in
jmp
call
lea
push
dec
(bad)
inc
fdivr
popf
test
jecxz
cmp
(bad)
aaa
daa
int
(bad)
int3
push
dec
pop
push
sbb
mov
icebp
sbb
in
scas
rol
adc
cmp
ins
lods
or
mov
adc
xchg
mov
stos
sbb
loop
clc
icebp
retf
push
mov
sahf
mov
js
sub
jmp
mov
cdq
pop
fld
push
push
inc
repz
movs
scas
inc
lds
ss
test
ret
push
jae
scas
stos
out
sbb
clc
sbb
or
add
push
inc
movs
sub
out
fnsave
in
jg
xchg
or
or
in
and
pop
cmp
push
mov
xor
cmc
call
mov
dec
imul
wbinvd
(bad)
push
cmp
mov
cdq
icebp
cmp
cs
loopne
stc
dec
retf
mov
cwde
xchg
add
sub
cmp
pop
jmp
sub
out
pop
fwait
in
test
out
enter
mov
cli
lods
idiv
or
iret
les
inc
out
cmps
mov
xchg
mov
inc
jmp
cwde
addr16
pop
mov
sbb
xor
mov
mov
ins
mov
ins
push
popa
repnz
hlt
outs
mov
xchg
cmp
inc
push
adc
ins
in
sub
sbb
aad
push
(bad)
xlat
shl
(bad)
out
nop
repnz
inc
(bad)
sub
pop
adc
stos
test
xchg
mov
add
scas
int3
ffreep
dec
mov
or
push
int3
mov
iret
cmps
cmps
call
or
test
push
ja
lahf
xchg
mov
push
inc
mov
aam
mov
out
mov
sbb
adc
addr16
pop
mov
mov
int3
movs
mov
js
(bad)
aaa
xor
jnp
(bad)
out
aad
xchg
xor
nop
inc
test
ja
mov
out
jmp
add
sahf
pop
and
or
mov
imul
xchg
pop
ds
sub
pop
cmps
xchg
loop
call
das
pusha
or
push
xor
inc
adc
nop
(bad)
xchg
ss
and
inc
xlat
shl
inc
pop
jl
aas
sub
mov
sahf
popa
aaa
(bad)
dec
out
imul
pop
ror
xchg
inc
lods
dec
ficomp
stos
sub
pop
jl
jp
cmp
not
inc
lock
dec
xor
add
jnp
mov
push
(bad)
nop
shl
ror
std
sub
sub
mov
inc
not
jmp
inc
stos
ss
jge
and
cli
sub
mov
ror
cmp
int
and
cmp
loop
jae
mov
adc
ficomp
gs
loop
std
push
daa
mov
ss
or
jg
push
push
dec
cld
daa
ror
and
add
add
mov
aam
jbe
jb
lahf
and
fdivr
test
in
loope
movs
ja
pop
test
pop
outs
jmp
xor
dec
jmp
mov
retf
mov
nop
xchg
mov
sar
ss
inc
ins
jae
sar
cs
fisttp
mov
xchg
in
sahf
and
cmp
stos
sub
sti
pop
cmc
push
retf
ins
dec
jns
lea
xchg
push
mov
fidivr
sbb
loop
sub
pop
cli
das
or
xchg
(bad)
push
dec
push
mov
and
sti
adc
dec
push
sbb
leave
js
xor
retfw
int3
jae
jns
fldenv
mov
or
in
inc
cmp
stos
pushf
aad
pop
vmaxpd
sar
adc
inc
pushf
aaa
or
cmp
movs
mov
mov
cmps
test
pop
shr
and
pop
rol
movs
inc
mov
or
mov
test
jo
je
outs
mov
std
mov
rol
test
mov
or
and
inc
fdiv
adc
push
retf
add
stos
sbb
mov
xchg
clc
adc
add
mov
jne
pop
push
rcr
push
imul
push
retf
or
xchg
pop
call
ins
(bad)
pusha
popa
shl
out
sub
pop
pushf
jb
daa
xchg
div
jecxz
pop
ins
inc
out
cmp
data16
test
mov
retf
aaa
les
xchg
xchg
cmp
mov
cli
aaa
arpl
xor
out
mov
clc
jle
aam
clc
jo
out
jno
movs
jno
xchg
hlt
pop
mov
lds
mov
pop
xor
xlat
jle
ss
arpl
push
jno
adc
push
lods
cmps
fdivr
aas
mov
lahf
fnstenv
cld
pop
cmc
xchg
jae
sahf
sub
pop
xor
push
pop
pop
or
(bad)
aaa
loop
push
mov
outs
sub
push
out
test
in
mov
ins
xchg
mov
jbe
xchg
lock
mov
dec
mov
scas
adc
into
shl
nop
nop
pcmpeqw
pusha
sub
mov
xor
push
loop
dec
xor
xor
jnp
fisttp
scas
(bad)
int
push
mov
sahf
sbb
cdq
test
inc
dec
in
(bad)
imul
jno
and
mov
mov
cmps
(bad)
fadd
das
push
and
or
xchg
xchg
cmp
loop
or
mov
cs
arpl
(bad)
popa
sub
push
sti
adc
dec
pusha
out
fstp
retf
lea
jno
retf
hlt
cmp
sbb
fsub
outs
and
push
dec
adc
cmp
fild
(bad)
mov
imul
fild
jae
jnp
sub
push
(bad)
cld
jp
xor
pop
leave
push
test
repnz
stos
out
lds
sbb
mov
and
inc
cmp
jnp
cmc
sub
cmps
and
into
pop
fimul
aam
mov
push
cmps
xchg
pop
mov
je
mov
sub
fsubr
mov
arpl
sbb
adc
or
shr
mov
in
xlat
push
sbb
call
mov
popa
mov
jns
stos
mov
add
xor
scas
mov
add
cmp
or
ja
mov
test
push
pop
clc
pushf
jno
inc
push
lds
inc
aad
lahf
xor
sub
retf
mov
pop
fimul
push
dec
xchg
mov
jl
pop
out
push
cs
lock
mov
cs
cdq
sub
outs
mov
aaa
mov
jecxz
lahf
pop
pop
cmp
mov
mov
idiv
push
shl
daa
add
or
in
loopne
movs
push
ror
fsubp
das
mov
pop
sbb
mov
retf
mov
jp
scas
mov
dec
add
pop
adc
ins
retf
or
and
stos
in
jno
ja
lock
add
fsub
dec
fsub
jo
out
cwde
mov
cmc
cmp
das
push
loope
pushf
cmps
adc
pop
ss
(bad)
loope
jmp
lock
test
sub
cmps
ret
shl
xor
pop
idiv
push
retf
dec
or
mov
sbb
mov
xchg
aaa
adc
bound
test
test
into
or
inc
mov
mov
out
gs
jl
pop
ror
adc
int
push
loop
retf
scas
movs
mov
push
adc
call
pop
fwait
cmps
sub
mov
and
cmp
mov
repnz
cwde
pop
mov
jbe
loop
sub
jmp
xlat
setge
ins
push
in
(bad)
jo
test
dec
jb
mov
jecxz
dec
je
lahf
adc
hlt
push
inc
sbb
jne
sbb
outs
fisttp
xchg
dec
mov
jge
inc
dec
dec
xchg
or
ins
cld
in
lods
leave
inc
sub
dec
enter
dec
popf
xchg
dec
xor
mov
push
in
repz
dec
mov
cmp
test
mov
out
mov
or
xchg
frstor
pop
adc
mov
xchg
cli
inc
repnz
add
xchg
jb
dec
mov
inc
test
mov
add
xchg
mov
(bad)
mov
sbb
mov
aam
mov
daa
sub
outs
push
adc
jns
push
shl
xchg
jnp
test
jge
lock
mov
mov
shr
dec
out
xchg
mov
into
xlat
push
pusha
call
in
stos
dec
in
mov
sbb
xchg
in
add
add
mov
out
push
fwait
xor
sbb
jmp
stos
les
stos
iret
jle
dec
mov
pop
sub
dec
xchg
data16
inc
mov
xor
ss
xlat
push
(bad)
dec
inc
int
cli
cmp
mov
outs
and
mov
jno
xchg
add
ss
or
and
jb
jg
hlt
xor
ins
enter
aam
in
les
and
push
iret
mov
jl
adc
(bad)
dec
dec
int3
shl
sbb
jecxz
ficomp
sub
test
add
xchg
jecxz
retf
xchg
mov
icebp
inc
sbb
jb
movs
add
(bad)
mov
mov
xor
and
fsubr
push
outs
mov
dec
nop
stos
mov
inc
adc
outs
xchg
or
add
or
or
and
call
sbb
cmp
or
test
sub
or
or
add
test
sbb
lods
adc
inc
pop
sub
mov
int3
iret
mov
in
arpl
in
fwait
shr
dec
in
adc
in
jo
pop
fild
bound
sbb
sbb
push
push
dec
jmp
mov
mov
popa
xchg
rcr
add
cs
jae
push
cmp
add
jecxz
and
pop
or
inc
in
push
cdq
and
aaa
arpl
shl
ins
mov
ret
clc
les
ins
(bad)
sub
ret
js
fiadd
pop
outs
ret
jnp
mov
mov
jbe
mov
mov
pusha
cmc
ins
push
sub
cld
xchg
icebp
out
mov
scas
sti
mov
mov
adc
inc
shl
sar
int
pop
sub
mov
daa
mov
movs
movs
jae
bound
xor
mov
push
(bad)
cmp
xchg
jmp
(bad)
iret
add
pop
ins
fsubr
and
shl
cdq
xchg
(bad)
out
lahf
mov
lds
jo
mov
(bad)
ficom
xchg
daa
cmp
test
sbb
scas
dec
sbb
fwait
test
fwait
adc
adc
scas
lds
neg
push
(bad)
fisttp
pop
xchg
jo
and
cmp
popf
mul
push
bnd
cmp
aaa
pop
aad
fstp
pop
fisubr
dec
mov
popa
les
xlat
aam
cmp
xlat
pop
dec
sar
sbb
sub
pop
mov
jae
aad
out
pop
push
(bad)
in
mov
popa
jno
mov
add
fmul
imul
mov
sar
jns
lods
cmps
int3
(bad)
shl
das
in
out
(bad)
xor
ds
inc
dec
data16
out
mov
push
imul
les
add
retf
jnp
xor
inc
and
paddb
outs
loopne
sti
xchg
leave
bound
loop
sub
sahf
sar
adc
xchg
int
jmp
sub
loope
test
xor
push
and
mov
and
scas
cs
or
cmp
sti
jmp
sub
push
lods
jno
jnp
push
or
mov
les
fs
das
loop
popf
push
jnp
mov
loopne
fcomp
int3
int3
xchg
and
fild
cmp
je
mov
shr
pop
jg
enter
dec
and
mov
mov
add
mov
sub
(bad)
sbb
int3
pusha
xlat
popa
xchg
push
xor
add
je
ret
sbb
cmp
add
scas
clc
(bad)
nop
pop
movs
adc
xchg
inc
or
leave
jo
js
out
add
out
push
mov
mov
jge
les
daa
cmps
mov
arpl
mov
aaa
mov
push
ins
sbb
push
xor
in
daa
inc
ret
pop
sub
mov
mov
int
fst
pop
pop
or
mov
sbb
and
or
adc
jno
int
mov
mov
call
pop
sub
mov
xchg
mov
xlat
push
mov
sti
xlat
pop
int3
sub
dec
add
mov
add
ja
repnz
(bad)
mov
out
retf
and
xor
movs
mov
and
jp
test
and
repnz
aam
pop
in
add
push
dec
dec
(bad)
jl
ins
std
add
or
ss
cmp
adc
shl
shr
pop
rol
mov
adc
aaa
shl
push
mov
inc
je
js
out
fist
jge
push
iret
jo
inc
mov
adc
dec
add
xchg
enter
pusha
push
in
out
outs
mov
lods
sbb
pop
jne
scas
aam
cmp
in
mov
and
adc
mov
jns
int
call
div
fld
cwde
jp
cmp
nop
mov
cmp
sub
retf
lods
out
jp
dec
or
xor
int3
dec
mov
lds
bound
push
nop
outs
jnp
test
add
rol
jbe
xor
cmp
dec
jbe
scas
xor
lods
dec
iret
jl
stos
pusha
mov
loop
aas
xchg
hlt
dec
xchg
lea
neg
sbb
fiadd
inc
pop
xchg
(bad)
rcl
fidivr
pop
retf
xchg
push
dec
adc
jmp
adc
add
inc
mov
and
jge
mov
fdivr
outs
jne
mov
arpl
or
outs
fsubp
std
xchg
sbb
jne
mov
dec
cmps
jns
sbb
test
ret
mov
sbb
xor
mov
repnz
scas
jnp
cmp
xchg
aad
sub
cwde
fdivr
dec
dec
sub
mov
call
sahf
pusha
pop
and
push
jl
and
xchg
dec
add
mov
test
cmc
fsub
pop
ret
mov
test
ins
rol
xchg
xchg
xor
popa
inc
mov
cmp
stc
jmp
xchg
lahf
aas
xor
lods
and
push
pusha
pop
retf
call
cmps
fs
xor
jmp
arpl
jmp
lods
mov
xchg
push
scas
imul
retf
movs
or
adc
cmp
mov
iret
adc
test
and
scas
fdiv
int3
cdq
mov
mov
rcl
imul
push
jb
push
test
cmps
dec
dec
xor
sahf
jl
fsub
aad
mov
clc
pop
test
pusha
mov
jo
sbb
fs
(bad)
push
stos
dec
push
ins
cmps
mov
popa
mov
bswap
dec
retf
cmps
ds
pop
xor
icebp
or
or
adc
lods
into
pop
les
das
cs
test
cmp
enter
mov
jle
outs
popa
clc
or
and
lods
daa
push
xchg
(bad)
aad
call
imul
add
pop
pushf
das
xor
jb
fldenv
cmp
andnps
inc
add
push
cmp
xchg
pop
lock
fwait
stc
adc
mov
push
xchg
mov
imul
sub
mov
mov
inc
jne
mov
out
clc
pop
mov
or
jo
out
scas
mov
stos
cdq
enterw
xlat
and
and
jge
ins
lock
data16
dec
fld
xchg
add
jnp
fisttp
xor
jp
jae
scas
pop
and
mov
jns
mov
sbb
test
pop
dec
adc
inc
pop
stc
(bad)
lahf
xor
call
lea
test
imul
xor
or
push
cmps
js
aaa
xor
mov
xchg
not
fmul
data16
pop
aas
mov
aaa
cmp
cmp
add
lods
mov
cmp
fsubr
pushf
out
jno
sbb
dec
sbb
ja
ins
jle
(bad)
xor
sahf
stos
fnstcw
xlat
fcmovne
lods
sub
sbb
call
fcomi
fwait
scas
scas
pop
xchg
dec
sbb
fwait
xchg
cdq
jecxz
jl
jae
enter
jecxz
mov
cmp
sub
cli
iret
adc
push
sbb
imul
dec
lds
aas
push
(bad)
loopne
sti
cmp
out
jle
iret
into
sahf
fiadd
addr16
xchg
push
rol
loope
out
push
inc
lds
int
pop
and
inc
mov
mov
stc
xlat
fld
(bad)
cmp
jl
aaa
mov
lsl
adc
cmp
jne
add
inc
inc
in
jecxz
push
xchg
cmps
dec
jne
push
sbb
aad
xlat
mov
loop
sub
aas
push
aad
xor
and
pushw
out
cmp
cmc
cmc
jb
push
retf
xchg
fstp
imul
xchg
jnp
xchg
test
cmp
or
cli
xchg
out
cmps
aaa
mov
mov
loop
aad
push
aas
(bad)
in
mov
test
test
add
or
popa
push
mov
rsm
hlt
outs
sbb
pop
inc
inc
mov
jle
push
call
popa
repz
xor
ds
icebp
(bad)
push
mov
cli
add
and
dec
sub
mul
mov
int
arpl
sbb
jb
imul
scas
test
daa
pop
sbb
aas
push
or
fstp
shr
idiv
or
int3
movs
pop
push
cld
pop
fnstcw
push
mov
mov
call
(bad)
scas
cmp
xchg
fwait
or
addr16
lds
dec
int
mov
push
into
xchg
cmp
fcmovnbe
scas
neg
pop
adc
cmps
hlt
outs
push
dec
mov
sti
push
jg
mov
add
out
pop
adc
xchg
ins
pop
mov
adc
pusha
cwde
jae
aaa
sbb
sbb
rcr
punpcklwd
dec
repnz
mov
jno
lahf
sub
jp
out
test
lods
cmp
adc
jmp
mov
pop
mov
mov
push
adc
int
(bad)
cmp
jno
cwde
shr
ins
push
aas
or
sar
pop
les
into
cwde
push
movups
int
fsub
fisttp
fwait
in
leave
arpl
and
retf
fwait
test
push
mov
out
call
retf
jl
dec
fstp
inc
push
dec
push
cmp
jle
ja
and
push
lahf
fstp
mov
mov
inc
mov
cwde
or
fwait
sub
adc
es
sbb
cli
xchg
gs
cmp
lahf
stos
fs
sbb
(bad)
int3
ret
pop
cmc
push
adc
int3
outs
nop
adc
push
icebp
retf
lods
mov
je
and
imul
test
jo
(bad)
jbe
ds
cmp
or
call
ins
sub
adc
add
mov
cli
xchg
ss
xlat
fsubr
push
mov
or
mov
ss
cmp
xlat
aad
dec
mov
sbb
in
adc
fstp
and
jns
pop
shr
mov
add
div
leave
mov
push
and
mov
fisttp
mov
shl
retf
add
retf
fisttp
dec
mov
and
sub
inc
fcomp
pusha
or
push
out
and
xchg
repnz
xchg
in
pop
fwait
pop
add
mov
cdq
aam
ins
in
xlat
jno
rcl
cmp
pop
leave
dec
mov
pop
jecxz
fwait
in
int3
inc
scas
aaa
cs
and
push
mov
mov
shl
fnstsw
addr16
pop
cmps
(bad)
cdq
sbb
ds
xor
loope
add
nop
aam
mov
rol
pop
retf
cmp
inc
xchg
into
stc
add
test
imul
add
adc
sub
sub
mov
std
push
movs
dec
test
adc
test
inc
and
inc
sub
mov
mov
std
pop
aas
pop
jmp
mov
int3
inc
loop
aaa
lock
lods
iret
inc
add
push
cdq
push
cmp
xchg
shl
jmp
fld
movs
mov
xchg
out
cwde
dec
es
cmps
mov
and
movs
xchg
cmc
adc
pop
pinsrw
sti
mov
int3
(bad)
push
imul
mov
cmp
ss
mov
push
clc
fcomp
mov
sar
jle
test
mov
pop
xor
in
push
cwde
xchg
inc
sbb
jmp
test
xchg
sbb
dec
ins
xchg
cmp
xor
je
xchg
fld
mov
aad
mov
dec
bound
shl
pop
dec
loopne
inc
push
mov
pop
mov
pop
mov
adc
dec
loope
not
retf
or
jo
movs
pop
je
fld
push
xchg
les
(bad)
mov
fwait
sub
retf
and
in
and
mov
dec
test
push
mov
push
shl
pop
sar
stos
lock
ret
jae
icebp
pop
icebp
sbb
jne
cmp
pop
pop
sysenter
rol
pop
pop
and
fidivr
shl
dec
push
add
bound
mov
clc
movs
cmp
inc
scas
xchg
aaa
call
dec
setb
in
jecxz
inc
sbb
fistp
test
jns
retf
scas
lds
psraw
xchg
js
loopne
imul
and
and
jbe
fyl2x
cs
je
aaa
cdq
push
dec
in
ret
jae
xor
mov
sbb
push
cld
aad
adc
movs
add
adc
sbb
adc
mov
fwait
add
sbb
out
dec
mov
sbb
das
push
call
inc
fsubr
xchg
out
(bad)
xlat
arpl
push
mov
cdq
into
je
cmp
cmp
push
sahf
mov
test
sti
mov
dec
lds
daa
mov
jmp
add
mov
add
in
inc
imul
or
loop
es
mov
or
mov
sahf
(bad)
out
stos
clc
lahf
or
aaa
and
add
imul
out
frstor
xor
rdtsc
mov
(bad)
xchg
pop
push
mov
pusha
and
inc
dec
xlat
jg
jmp
and
and
add
aaa
push
stos
les
xchg
in
sbb
push
call
data16
mov
inc
ret
or
pop
xchg
mov
outs
imul
pop
mov
sbb
(bad)
pop
jne
inc
call
iret
loopne
mov
sub
sbb
arpl
in
sbb
sar
add
mov
iret
cmps
outs
xchg
stc
sti
test
push
pop
les
in
jae
enter
fiadd
ret
ss
inc
scas
enter
pop
dec
pop
push
cmps
mov
cmp
rcl
loop
ins
shl
pusha
aad
leave
jns
adc
jbe
les
ret
outs
lock
js
dec
xchg
scas
test
inc
push
mov
xchg
mov
jle
xor
mov
jb
(bad)
add
add
cwde
loope
out
out
(bad)
pushf
in
mov
xor
xor
mov
mov
cdq
add
sbb
and
fist
adc
inc
adc
mov
sahf
jl
into
and
test
xchg
pop
mov
(bad)
jl
mov
bound
jp
adc
movs
ret
jmp
xor
jne
inc
mov
leave
mov
pop
loope
popa
lods
adc
push
add
int
rol
pop
loope
xor
neg
mov
addr16
jae
out
in
cmp
push
cs
and
aaa
mov
xlat
(bad)
push
stos
sbb
push
imul
fisubr
retf
ret
popf
ss
rcl
rcr
sub
xor
inc
jb
jo
test
mov
int3
sub
fstp
inc
mov
sbb
out
mov
sbb
add
xchg
sub
pop
sub
lods
loop
mov
test
jb
pop
jmp
daa
mov
fstp
pushf
shl
gs
lahf
push
pop
mov
out
in
cmp
mov
test
iret
inc
xor
outs
mov
xchg
mov
arpl
xchg
mov
jmp
aas
and
fmul
jge
adc
xchg
jbe
pop
ret
inc
jmp
stc
and
push
cmc
push
and
popf
add
xchg
add
inc
xchg
xor
imul
outs
ret
and
das
jo
ins
scas
jo
int
int
xchg
dec
gs
mov
ins
mov
jecxz
cmp
movs
xchg
es
xchg
das
jne
dec
retf
fst
sbb
mov
push
test
mov
push
dec
scas
add
or
fnstsw
xor
mov
mov
dec
and
jl
xchg
in
into
sbb
dec
and
pop
out
aaa
mov
stc
mov
jo
add
cmp
push
xor
mov
and
inc
add
xor
stos
cmp
retf
add
frstor
or
arpl
mov
(bad)
mov
sbb
push
xchg
mov
jbe
enter
xchg
cdq
call
xor
loopne
sbb
das
dec
jl
fcom
ins
test
popa
in
test
add
mov
mov
pop
xchg
cmc
adc
dec
outs
retf
jmp
jnp
mov
mov
or
xor
mov
xlat
ss
pop
xchg
mov
cmp
es
ss
lods
mov
adc
push
clc
mov
adc
inc
cmps
je
inc
mov
pop
stc
or
push
or
jle
test
mov
stos
imul
mov
or
cwde
pop
mov
lods
pop
das
jne
xchg
sub
and
loop
repnz
sahf
repnz
sbb
jb
dec
fcomp
jmp
leave
pop
je
fsub
lea
frstor
stos
and
pop
and
pop
retf
dec
out
push
push
mov
mov
stos
sbb
ret
ret
gs
(bad)
jns
hlt
push
cmp
push
and
push
mov
sub
dec
add
movs
cmp
mov
jae
pushf
xor
test
js
mov
push
push
daa
loope
mov
in
imul
jp
sti
inc
xor
jns
sub
test
mov
add
or
shr
stc
call
mov
in
add
push
xchg
mov
mov
imul
cli
jne
dec
scas
retf
mov
jecxz
mov
inc
call
dec
int
mov
loope
out
sar
popf
outs
fcmovbe
std
xlat
jns
mov
push
cmp
ins
xchg
mov
push
arpl
push
inc
mov
lods
or
(bad)
cli
mov
ja
mov
add
in
sub
in
shl
sub
hlt
cmp
call
(bad)
sub
mov
and
cmp
movs
jge
data16
inc
repz
sbb
adc
iret
test
fst
imul
add
ret
or
cmps
adc
sbb
xchg
xor
sbb
sar
add
sbb
shr
and
fadd
aam
xor
cdq
lds
shr
fs
adc
hlt
mov
push
jnp
scas
xchg
stc
or
cmc
mov
sub
outs
jo
fs
push
mov
in
cmc
sub
test
div
mov
and
movs
aaa
pop
inc
mov
int
mov
loope
popa
cmp
pop
jbe
stos
out
jecxz
or
add
std
jmp
jp
aas
(bad)
leave
pop
js
xchg
mov
(bad)
sbb
out
push
xchg
test
dec
adc
xchg
sahf
dec
dec
pop
sub
pop
and
lea
xchg
push
sbb
mov
inc
sbb
pop
mov
out
push
(bad)
mov
cli
das
sub
inc
pop
push
and
sbb
push
adc
jmp
sbb
mov
cmp
test
jge
int
mov
add
stos
adc
mov
out
pop
xor
pop
add
and
jno
fstp
xchg
dec
mov
cmps
inc
sbb
mov
fist
icebp
int3
inc
in
out
sub
jns
cmps
ss
mov
inc
shl
push
pop
jl
sbb
xor
cmp
xor
pushf
pop
iret
je
(bad)
or
xchg
add
loop
retf
push
icebp
test
jg
shl
lock
pusha
mov
xchg
ds
fwait
(bad)
mov
mov
iret
and
jecxz
iret
shl
(bad)
jecxz
int
sbb
frstor
jmp
mov
outs
dec
loop
and
jae
ins
inc
dec
mov
cdq
call
pop
(bad)
les
movs
jno
loope
jnp
fldenv
and
popf
dec
mov
push
shl
inc
fsubp
push
scas
pop
js
inc
cdq
jg
dec
(bad)
cli
dec
push
sbb
xchg
push
push
(bad)
jb
icebp
xchg
adc
adc
mov
test
xlat
aam
lea
out
mov
and
pop
jae
jmp
cmp
xchg
inc
stc
pop
out
sti
mov
shl
(bad)
nop
ins
cmps
cli
aaa
sub
jns
clc
jecxz
mov
xor
cmp
add
sbb
lods
(bad)
fadd
mov
xchg
loope
sub
jg
xchg
sahf
call
push
mov
jns
add
fbstp
ins
cmp
call
jp
push
lock
js
push
xor
dec
repz
stc
push
repnz
dec
mov
ss
adc
out
out
mov
pop
or
popa
in
lods
ds
xchg
fwait
ret
adc
xor
pop
mov
jae
sub
adc
mov
test
push
repz
sahf
sbb
xchg
pop
enter
rsm
and
jl
and
div
cmp
mov
or
arpl
jmp
mov
pusha
mov
repz
sbb
cmp
add
fs
rcr
push
push
pop
mov
retf
push
sbb
pop
mov
cmp
shl
pop
adc
out
popw
inc
mov
cmp
sti
(bad)
mov
retf
loopne
in
(bad)
jmp
pushf
jne
sub
cmp
call
stc
sub
rcl
jle
or
xor
movs
sub
iret
mov
add
ffreep
out
repz
loope
sub
fcom
nop
stos
sub
inc
sbb
out
shl
mov
mov
movs
push
mov
cmp
mov
stc
cmp
mov
push
sbb
pushf
push
pop
mov
imul
and
into
addr16
pop
je
das
push
xchg
cmp
ss
sbb
ss
loop
or
mov
(bad)
mov
mov
mov
lods
jbe
popa
add
mov
xchg
jle
dec
mov
shr
imul
mov
jns
mov
leave
outs
out
xor
outs
pop
xor
out
aaa
mov
stos
sub
cmp
push
pop
loop
loopne
movs
aad
mov
push
pop
jno
aam
jmp
inc
aam
lahf
mov
imul
inc
mov
movs
daa
adc
adc
lock
jl
or
arpl
mov
daa
shl
ror
addr16
adc
xchg
sbb
ins
repz
jmp
add
cmp
sub
stos
sbb
pop
add
push
cmp
mov
sahf
shl
sub
mov
pop
repnz
in
(bad)
retf
jno
sbb
xchg
dec
jp
or
adc
(bad)
dec
jnp
pop
mov
nop
repnz
cmp
mov
jns
loop
and
xor
mov
or
fild
loopne
mov
inc
and
inc
and
inc
and
push
inc
sub
mov
inc
sahf
or
jmp
mov
or
das
jg
add
(bad)
ror
mov
pop
push
push
jae
ds
test
lahf
or
sub
outs
jbe
ret
push
leave
popa
scas
in
push
pop
mul
outs
pop
iret
out
sbb
pushf
pop
pop
fsubr
mov
imul
test
test
sbb
aad
(bad)
sti
(bad)
pop
or
pop
and
and
fnstenv
outs
fiadd
not
mov
inc
outs
pop
inc
add
(bad)
jmp
movs
dec
sbb
cmp
leave
cmp
inc
mov
in
loope
stc
lods
mov
cmc
xor
jb
sub
jecxz
ins
ret
jmp
sbb
mov
inc
pop
inc
cmps
jecxz
mov
jl
pushf
and
push
jnp
test
pop
leave
imul
lods
gs
inc
sub
add
lahf
jne
inc
jmp
ins
jmp
cs
addr16
aad
pop
ficomp
pop
nop
cmp
pop
fst
fdiv
cdq
inc
dec
ss
mov
jl
pop
repnz
xor
push
xor
int
rcr
into
pop
or
in
loope
retf
push
mov
mov
dec
xor
outs
pop
and
sub
adc
aad
mov
jge
cmp
fadd
call
das
aam
push
test
iret
aaa
jnp
(bad)
cdq
dec
mov
inc
fisttp
mov
cli
inc
fs
ins
loopne
jmp
movs
dec
inc
(bad)
enter
movs
int3
cmp
int3
cmp
js
(bad)
push
sar
push
jno
add
int
fnstsw
cmp
into
ret
cmps
adc
fld
fstp
int3
daa
adc
and
jb
lock
add
loope
cmp
in
call
ficomp
mov
pop
ins
leave
push
jmp
lods
dec
not
mov
pop
mov
pop
push
out
hlt
sbb
in
data16
jmp
rcr
pushf
inc
push
and
jb
stc
lods
push
dec
push
dec
mov
aaa
push
push
pop
pushw
push
out
test
sub
mov
stos
jns
mov
aad
(bad)
xlat
rcl
mov
cwde
out
sti
add
ins
xor
call
rol
jne
jae
in
out
push
data16
pop
popf
outs
xchg
ins
dec
aad
cmps
shr
cmp
lahf
lock
pop
je
or
std
(bad)
xor
in
and
cmps
dec
mov
movs
movs
sbb
cs
cmp
and
sub
inc
aad
cli
jne
push
dec
pop
mov
mov
inc
ret
add
jle
je
mov
in
out
fwait
jmp
xor
lahf
push
mov
in
inc
aam
push
or
(bad)
enter
movs
mov
ins
ins
or
sub
ja
adc
sub
dec
out
push
adc
mov
push
fisubr
outs
adc
(bad)
mov
xchg
sub
add
aas
xchg
outs
xor
std
je
shr
push
inc
mov
adc
sahf
shr
push
bound
fs
call
dec
(bad)
out
add
add
(bad)
rcr
mov
or
rcr
pop
rol
mov
movs
sub
imul
mov
(bad)
mov
not
xchg
jbe
mov
pop
cli
and
dec
xchg
push
inc
push
xor
loope
movs
lahf
cmp
mov
dec
out
add
lods
mov
or
ins
repnz
shr
jl
xchg
movs
mov
jae
imul
ins
dec
inc
ss
mov
loopne
rcl
push
rol
or
std
(bad)
leave
lods
nop
add
pop
test
int
dec
cs
es
sbb
dec
out
out
outs
xchg
cmp
stos
imul
mov
inc
mov
xchg
fwait
out
cli
sbb
mov
jmp
pop
neg
test
mov
test
fisub
(bad)
ret
xchg
pop
xor
adc
mov
jb
sbb
repnz
xchg
mov
push
inc
dec
and
sbb
jmp
nop
sub
mov
scas
movs
cld
shr
add
push
fisub
cwde
pop
stos
mov
ins
int
push
ins
retf
in
pop
cwde
pop
int3
and
mov
adc
mov
loope
and
dec
(bad)
test
repnz
sub
and
cmp
imul
fild
test
int
out
gs
(bad)
mov
and
call
mov
dec
retf
outs
cwde
adc
out
jmp
dec
cmp
pop
dec
imul
sbb
fist
xchg
mov
dec
mov
inc
and
shr
add
jnp
xchg
adc
das
ds
sub
mov
mov
push
pop
push
(bad)
jns
imul
inc
dec
inc
push
fisubr
daa
push
rol
adc
cdq
sbb
cli
adc
mov
rcl
(bad)
sub
loope
retf
test
shl
push
xchg
mov
(bad)
shl
sbb
pop
adc
imul
push
mov
jo
sub
mov
adc
inc
jmp
dec
dec
movups
cs
call
sbb
ins
xchg
push
sar
xor
xchg
push
fwait
sub
test
adc
inc
and
xchg
std
(bad)
test
lea
push
push
movs
cmp
enter
push
out
jns
push
push
cmp
movs
xchg
adc
pop
lods
rcr
inc
fisubr
std
dec
push
push
ins
jecxz
mov
imul
sbb
xor
jb
cmp
mov
rcl
pop
lock
not
jns
neg
ins
inc
jo
cli
mov
pop
xchg
jae
and
lds
fcom
shl
(bad)
jge
pushf
es
push
bound
lock
mov
xchg
pop
mov
mov
in
aad
mov
sbb
in
xlat
lahf
ds
pop
int
cmp
dec
add
inc
or
xchg
cmp
and
(bad)
call
lds
dec
or
mov
lods
mov
inc
adc
push
and
pop
fiadd
or
je
inc
mov
shl
and
pop
cmp
fdiv
inc
retf
fsub
call
das
mov
arpl
in
sub
in
cmp
jle
cmps
call
loop
cmp
push
cs
test
dec
inc
inc
int3
lods
aaa
das
jbe
push
mov
push
dec
dec
dec
fsub
arpl
(bad)
or
sbb
push
mov
jmp
test
pop
adc
xchg
aam
cmp
adc
rcl
mov
and
call
out
push
jle
xchg
dec
push
popa
(bad)
call
retf
fisttp
ins
adc
aad
ret
lock
lods
inc
outs
pop
and
xchg
(bad)
shl
in
pop
mov
mov
cld
sbb
pop
gs
mov
aad
or
mov
jp
xor
jecxz
into
jmp
push
in
and
cmp
dec
adc
and
cdq
inc
xchg
jp
(bad)
sti
mov
fadd
ret
and
cmp
cdq
mov
pop
cwde
xchg
inc
mov
xchg
jb
inc
int
ds
inc
and
mov
xchg
rol
stc
sub
adc
dec
mov
arpl
lods
mov
push
lea
jae
pushf
xchg
mov
(bad)
push
mov
jbe
into
jmp
add
sbb
xor
cmps
icebp
pop
les
sbb
xchg
imul
push
cs
mov
push
cli
pop
pop
mov
js
mov
and
cmps
adc
mov
sub
mov
nop
(bad)
gs
xchg
fisub
xchg
ja
pop
jecxz
jmp
sub
inc
ret
je
pop
and
mov
or
pop
mov
xor
sub
push
sub
add
mov
ins
outs
mov
(bad)
xor
jecxz
mov
sub
xchg
pop
sbb
and
out
loopne
repnz
jle
into
ja
push
bound
pop
pop
add
adc
ficomp
test
mov
sar
aaa
imul
push
push
in
xchg
jnp
rcr
movs
jnp
mov
fidivr
shl
shl
arpl
push
mov
jns
(bad)
mov
or
iret
push
xchg
xchg
jo
cmp
fcomp
daa
mov
loope
test
sbb
and
mov
nop
shl
movs
pop
imul
xor
aaa
mov
jmp
add
cmp
push
fwait
and
rcr
movs
xchg
movs
cmp
cmps
push
out
lock
repnz
lods
mov
shr
loope
inc
mov
mov
and
jae
rol
rcl
mov
fmul
leave
ret
xchg
popa
jnp
sbb
push
xchg
xchg
adc
xor
push
sub
out
mov
jno
push
fist
mov
mov
fsubp
pop
xchg
mov
adc
in
and
in
xor
sbb
inc
daa
xor
mov
mov
mov
mov
jo
int3
push
xchg
ss
jmp
fld
xchg
push
inc
cwde
jae
scas
dec
push
mov
or
fwait
xor
dec
xor
test
push
mov
in
sbb
scas
mov
mov
mov
fwait
add
and
retf
inc
sbb
xchg
inc
push
loope
push
dec
loope
test
push
fwait
cmp
inc
add
daa
ss
sub
pop
mov
or
rcr
retf
add
inc
xchg
outs
xchg
fimul
out
mov
outs
fadd
movs
inc
dec
jnp
int3
pop
add
stos
in
mov
xor
ret
lea
lods
mov
mov
and
mov
lea
lock
push
rcl
push
mov
push
lds
into
arpl
pop
fadd
and
shr
mov
gs
cmp
cmp
inc
lea
das
pop
inc
xchg
out
push
stc
nop
mov
data16
cdq
(bad)
idiv
mov
sub
jns
lock
popf
adc
push
pop
adc
cmp
fldenv
push
pop
xchg
mov
inc
add
inc
add
jl
test
mov
test
shl
loopne
adc
pop
mov
shl
xor
mov
pop
int3
int
push
(bad)
mov
ss
push
or
cli
mov
in
call
(bad)
lahf
nop
inc
loope
sbb
not
movs
jl
and
xchg
(bad)
icebp
(bad)
stos
and
enter
mov
cmp
sub
mov
push
aas
sub
arpl
pop
ins
aas
jnp
aad
inc
dec
sub
dec
sbb
mov
stos
aaa
sbb
dec
mov
aad
dec
das
jbe
inc
mov
sub
pop
shr
xchg
sbb
add
cmp
inc
stc
gs
mov
sub
clc
aas
test
mov
fdivr
cdq
in
mov
cwde
mov
repnz
mov
add
test
test
loopne
test
add
sub
and
and
inc
mov
mov
xlat
sbb
and
scas
hlt
pop
mov
dec
or
mov
in
push
and
inc
mov
mov
imul
mov
cdq
jns
sub
jb
bound
inc
xchg
mov
add
or
(bad)
jmp
push
pushf
xchg
ins
imul
mov
mov
lahf
push
pop
pop
fs
and
dec
add
gs
pop
xor
pushf
jb
cld
inc
jp
or
mov
ficom
cmp
push
out
das
out
adc
and
lods
xchg
and
(bad)
fsubr
ins
fbstp
into
jmp
xchg
jns
jg
and
add
sub
sbb
lahf
or
add
mov
mov
push
add
inc
sbb
arpl
les
call
xchg
and
mov
pop
rcr
shr
mov
(bad)
outs
loope
mov
mov
xor
(bad)
xor
call
jae
add
xchg
pop
loopne
jmp
push
lods
jne
mov
ja
jge
add
frstor
add
push
cmp
dec
cmps
or
mov
and
xor
or
pop
xchg
xor
loop
add
fnstsw
or
adc
(bad)
jmp
lods
cmp
cmps
dec
jmp
add
mov
ins
aaa
pop
adc
xchg
mov
movs
adc
cmp
les
sbb
and
adc
add
test
adc
add
or
nop
pop
imul
scas
outs
add
das
daa
jbe
xchg
xchg
sbb
loope
cmp
call
test
mov
movs
add
and
sub
div
sub
(bad)
scas
call
and
or
adc
push
mov
mov
repz
jmp
popf
mov
xchg
stc
test
mov
aas
xchg
dec
xor
gs
test
mov
fistp
loope
mov
mov
lfence
lods
inc
jae
fcomp
inc
nop
cld
outs
hlt
push
pop
push
shr
out
ins
test
sub
add
(bad)
arpl
mov
(bad)
and
xchg
mov
imul
fsub
movs
pop
sbb
cdq
nop
push
mov
pop
or
clc
push
test
(bad)
sub
sbb
fist
int3
pop
cmp
retf
mov
fsubr
aaa
mov
lods
mov
pop
pop
pop
cs
rol
aaa
ss
adc
jae
arpl
jecxz
call
sub
test
mov
lods
aad
pop
xor
mov
fcmove
movs
fldenv
add
inc
scas
fwait
mov
cmp
cs
inc
and
inc
or
mov
jnp
imul
add
mov
add
mov
int
rcr
sub
jle
push
aas
mov
dec
add
iret
mov
dec
xchg
mov
cwde
ds
nop
mov
hlt
cmp
xchg
xchg
sbb
sbb
xchg
rol
pop
mov
jbe
lods
mov
in
test
mov
loopne
mov
mov
pop
es
dec
aam
dec
sahf
pop
and
movs
int
add
mov
push
push
mov
enter
push
dec
into
xchg
outs
push
dec
(bad)
pop
retf
or
rcr
je
push
call
and
mov
lods
test
retf
sbb
mov
rol
retf
fs
arpl
mov
retf
pop
mov
stos
out
lock
loop
dec
mov
pop
test
ret
or
xor
sub
mov
cmp
mov
movs
mov
push
and
(bad)
lock
push
dec
out
sub
sub
sub
pop
push
jo
fwait
push
add
test
adc
sti
(bad)
and
stos
mov
sbb
loopne
sbb
xchg
xchg
movs
sbb
inc
jmp
cmp
push
pop
rcr
cmp
rcr
das
fdiv
xchg
xchg
mov
mov
repz
imul
jmp
test
mov
call
cmp
dec
dec
mov
xor
cmps
ds
mov
adc
push
mov
mov
fimul
pop
xchg
movs
(bad)
imul
add
call
dec
sub
imul
cmc
retf
mov
std
mov
scas
push
jae
xchg
pusha
push
xchg
(bad)
push
inc
xlat
aad
mov
aas
jg
mov
cld
ins
mov
in
cmps
and
adc
sub
sbb
sub
test
cmc
inc
gs
mov
mov
mov
fimul
or
stos
retf
cmp
pop
ss
stc
pop
bound
or
in
push
fist
data16
adc
mov
sub
movs
int3
pop
dec
lahf
xor
enter
je
dec
fcomp
pop
jnp
fwait
xor
lods
or
mov
out
iret
and
mov
xchg
std
aas
xor
repz
pop
idiv
xor
loop
inc
test
cli
movs
xor
or
push
sbb
mov
jmp
xchg
lods
adc
mov
xchg
icebp
mov
sti
adc
mul
fs
outs
pushf
and
scas
imul
sub
sub
out
imul
leave
and
shr
enter
jo
dec
arpl
push
stos
jnp
int
test
jge
popfw
or
mov
adc
sub
and
dec
je
cmps
mov
fisubr
dec
int
push
xor
push
dec
and
clc
dec
addr16
and
fs
call
scas
xchg
cli
movs
aam
stos
jae
pop
jge
sahf
dec
pop
shl
es
je
sbb
mov
xor
out
outs
sub
in
icebp
adc
inc
mov
mov
out
test
bound
jge
dec
bound
adc
push
and
addr16
dec
cmp
mov
cdq
stc
pop
aas
cwde
sar
jge
jbe
push
push
call
lods
push
add
or
pop
mov
mov
mov
mov
cmp
dec
push
pushf
in
(bad)
push
jge
scas
push
add
mov
dec
in
sbb
inc
cmpxchg
ins
sti
jp
dec
cmps
in
aad
sbb
int
or
sbb
imul
mov
pusha
pop
addr16
inc
and
mov
mov
inc
pop
ins
outs
jmp
ja
les
mov
cmp
pop
mov
les
call
lods
push
mov
iret
fs
(bad)
cmp
jmp
rol
xor
sbb
pop
or
in
adc
leave
add
and
pop
push
cmp
test
imul
sub
mov
outs
je
pop
xchg
sub
lea
jmp
test
rol
and
adc
xchg
xchg
ret
movs
add
xor
pop
xchg
sbb
aaa
sub
jmp
and
mov
jmp
mov
sub
and
rol
add
pop
mov
sbb
jecxz
mov
loope
dec
dec
cdq
data16
push
inc
sub
sbb
push
sub
push
dec
clc
pushf
push
push
ins
jp
mov
pop
(bad)
scas
xchg
mov
pop
pop
test
push
ret
inc
sub
stos
cmc
adc
cmps
mov
in
in
mov
(bad)
imul
add
dec
push
cmp
or
data16
inc
inc
jne
xchg
inc
ret
xchg
push
aaa
dec
stos
hlt
or
ds
adc
rcl
push
or
xlat
mov
cli
test
or
dec
(bad)
imul
jae
pushf
xchg
mov
push
out
ins
and
cli
stc
adc
lock
or
int
lods
jge
aad
sub
xchg
adc
push
sub
xchg
data16
sub
mov
mov
sub
movs
xchg
call
out
jge
sub
pop
fs
sbb
pop
mov
pusha
stos
push
mov
aas
scas
xchg
dec
pop
jb
and
scas
stos
push
add
mov
pop
scas
jecxz
and
dec
xchg
fs
sbb
lods
jl
fs
fld
jno
test
outs
pop
cmc
push
and
cmp
shl
lea
or
and
fisubr
inc
mov
mov
retf
pop
sub
lods
lods
pop
push
mov
xchg
cdq
xlat
push
enter
loopne
mov
sub
xchg
cmp
fmul
jnp
in
ins
inc
xchg
inc
dec
sbb
inc
call
xor
inc
mov
es
cmps
cdq
rcr
sub
inc
adc
adc
movs
(bad)
in
push
xlat
push
ficomp
adc
dec
lahf
pop
push
pop
jnp
sub
loop
jge
arpl
aaa
pop
ret
hlt
sub
dec
test
retf
sbb
sbb
adc
adc
inc
xor
neg
mov
push
push
cli
lahf
test
aaa
ds
mov
xor
cmp
je
test
gs
add
fist
dec
retf
je
add
imul
pop
mov
jg
cmp
add
mov
mov
jg
ja
adc
pop
cld
shl
mov
arpl
loope
scas
ds
jmp
or
or
push
mov
adc
jbe
push
mov
stos
xchg
inc
(bad)
out
dec
call
daa
imul
mov
jle
sar
shr
scas
jne
push
dec
dec
shl
repnz
neg
jecxz
(bad)
inc
loop
popf
call
xchg
inc
inc
out
pop
jne
ficomp
cmp
daa
ins
jg
inc
(bad)
push
fcomp
rol
jp
sbb
(bad)
fbstp
addr16
jle
xor
xor
mov
sbb
mov
(bad)
dec
in
mov
retf
int
loop
inc
retf
pop
mov
or
mov
dec
shl
mov
jle
ins
or
adc
dec
ror
sbb
sub
(bad)
mov
nop
adc
mov
sub
sbb
push
ja
movs
cmp
adc
jmp
or
sub
or
mov
fs
std
rcr
or
xor
je
das
or
inc
push
outs
and
push
jmp
xchg
ret
pop
xchg
gs
inc
sbb
mov
jge
movs
retf
jmp
sub
imul
add
call
je
xchg
test
mov
xor
inc
imul
inc
adc
ins
fsubr
jmp
and
mov
mov
sbb
lea
hlt
fstp
pop
out
enter
mov
popa
pop
adc
pop
mov
push
in
jge
shr
mov
mov
enter
fnsave
and
or
sub
sub
mov
inc
or
loope
push
movs
call
cmps
shl
add
lea
pop
fxch
(bad)
jmp
jle
ja
retf
icebp
pop
dec
mov
test
push
dec
jmp
sbb
xor
(bad)
mov
adc
inc
out
stos
mov
dec
bound
shl
ret
inc
shr
mov
pop
jp
daa
push
test
movs
sub
mov
cmp
pop
clc
dec
mov
sub
(bad)
clc
add
adc
push
adc
fadd
xor
sub
mov
mov
out
push
gs
test
aas
stos
pop
cmp
out
sbb
jo
pop
sbb
out
jle
lods
lods
adc
mov
icebp
push
mov
sbb
xor
sbb
fucomi
ins
push
push
or
call
test
jle
lds
mov
popf
rcr
mov
xchg
mov
dec
arpl
push
cmp
rcl
out
out
(bad)
dec
add
aam
movs
test
in
test
(bad)
loope
aam
add
fsubp
dec
call
mov
ss
mov
ja
jbe
ret
js
sub
call
jbe
inc
int
arpl
push
(bad)
sbb
xor
jno
dec
push
xor
scas
xchg
clc
lods
or
fdivr
sub
inc
and
lea
dec
dec
cmp
in
ins
xor
fcmovne
pop
pop
xor
jnp
(bad)
dec
mov
adc
push
shl
or
enter
xlat
das
aas
lods
popf
ret
ja
test
cmp
pop
call
popa
add
arpl
mov
loop
(bad)
mov
neg
ins
mov
adc
sbb
jge
pop
pop
lods
xchg
xor
mov
inc
fsubr
pop
movs
adc
push
sar
cwde
out
stc
pop
or
ja
xchg
xchg
(bad)
idiv
and
adc
mov
stos
loopne
cdq
push
retf
rol
loopne
cwde
retf
test
mov
jb
lock
xor
outs
jb
jne
pop
xchg
jmp
shl
into
mov
xor
xchg
add
add
jmp
cmp
cdq
in
dec
and
add
mov
sbb
xor
call
push
outs
sbb
test
ja
shl
or
xor
sahf
inc
pop
push
add
ficomp
repz
jno
inc
hlt
jge
sub
mov
je
fwait
mov
js
mov
sbb
mov
gs
jmp
call
push
mov
jmp
test
xchg
sbb
ret
je
or
push
xchg
(bad)
sub
outs
popa
jbe
and
push
fldcw
and
int
jne
pop
and
pop
dec
xlat
mov
stos
mov
js
mov
push
xchg
xor
aad
cwde
out
in
sbb
xor
and
add
into
push
dec
cmp
rol
call
push
aam
mov
or
or
mov
mov
or
cs
add
test
jb
cwde
xor
(bad)
in
xchg
pop
cmp
ficom
fld
mov
jl
mov
jno
popa
sbb
cmp
ror
into
je
dec
xlat
mov
outs
stos
arpl
outs
sub
shr
or
popf
in
mov
(bad)
outs
inc
pop
fisttp
cli
gs
(bad)
retf
or
adc
cmp
push
ret
mov
mov
inc
clc
in
push
es
xchg
daa
xor
movs
jns
mov
gs
nop
sub
adc
dec
cs
mov
mov
pop
add
scas
cmp
mov
retf
and
(bad)
ror
lods
mov
mov
sub
retf
inc
push
sbb
sub
pop
mov
cmp
and
movs
je
xor
retf
stos
mov
add
or
xor
js
repnz
loopne
push
cwde
xchg
jnp
imul
pusha
pop
imul
xchg
adc
mov
xchg
outs
sbb
fdivr
enter
sar
in
inc
push
xor
adc
fdivr
add
add
scas
mov
jnp
mov
ins
rcl
leave
pop
dec
test
ss
repnz
and
in
int
popf
pop
pop
clc
cmp
sbb
pushfw
scas
sbb
clc
inc
inc
fdiv
cmp
cld
pop
mov
mov
test
push
mov
jp
adc
cmp
sbb
and
xor
and
mov
test
adc
or
or
or
sub
inc
adc
in
xor
inc
test
jne
and
and
and
aam
(bad)
vpmacswd
pusha
add
pusha
imul
jne
fcom
add
test
push
ret
or
cmp
jae
in
outs
(bad)
repz
mov
cmps
movs
xchg
stos
push
and
imul
sbb
cmp
outs
stos
jmp
adc
inc
mov
std
sub
sub
xchg
mov
gs
lock
sar
xlat
pop
dec
dec
pop
rcl
mov
and
jmp
mov
push
xor
mov
retf
ins
inc
mov
cmps
movs
mov
fiadd
lea
push
jb
in
ins
fsubr
rol
lahf
(bad)
jge
mov
add
add
inc
or
into
ins
ret
sub
mov
ja
in
jle
sub
push
js
les
inc
cs
int
pusha
cmp
je
dec
out
(bad)
cmp
(bad)
mov
js
push
cmp
dec
arpl
cmp
add
xor
lods
leave
and
adc
leave
dec
retf
jo
movs
cmp
movs
test
jno
add
adc
jmp
cdq
fsubrp
sbb
sbb
jmp
cmps
ret
pop
(bad)
aad
stc
xchg
jnp
xor
xor
lods
int
add
jnp
(bad)
jno
xchg
int3
test
adc
ret
icebp
sti
cmp
ror
cwde
push
push
(bad)
fstp
stos
xor
mov
jmp
fldenv
xor
fstp
fsubrp
xchg
jecxz
mul
arpl
rcl
xlat
xchg
lea
int
pop
pop
jnp
mov
jl
adc
leave
and
mov
dec
sub
xchg
inc
xor
push
mov
dec
mov
sub
call
and
inc
idiv
outs
and
push
adc
mov
sub
in
sbb
in
push
and
into
pop
adc
out
cwde
push
inc
jo
mov
sar
pushf
cmp
stos
ss
(bad)
cs
jae
dec
jne
cmc
dec
dec
das
cmp
scas
and
sub
xchg
mov
mov
mov
ficomp
test
or
aas
dec
leave
cli
mov
imul
loopne
and
mov
dec
push
push
ret
xor
jne
jecxz
sbb
repz
add
jge
pop
jo
nop
mov
cmps
jnp
and
sbb
iret
imul
jmp
mov
call
retf
or
push
adc
push
fisubr
or
or
sbb
ins
jns
add
add
pop
jmp
jecxz
out
jecxz
mov
fnstsw
jne
pop
fadd
or
add
jmp
gs
xlat
jo
cmp
(bad)
mov
jno
ins
push
call
ins
cli
cmp
push
xchg
cmp
lds
mov
push
push
leave
xchg
jp
mov
pop
cmp
mov
pop
pop
ret
xor
jge
add
ss
cmp
mov
movs
js
jb
pop
daa
add
xchg
push
jge
in
pop
and
cmps
inc
jae
leave
jp
and
in
(bad)
pop
mov
sbb
pop
adc
inc
mov
jg
dec
sar
ins
aas
aad
cmp
ins
sti
cmp
fstp
jg
and
mov
sbb
cli
xchg
jmp
cmps
cmp
add
hlt
aaa
dec
(bad)
xor
mov
inc
ja
add
pop
call
xchg
xchg
sbb
lods
lods
cmp
cmp
xor
adc
pusha
mov
add
and
mov
mov
xor
sahf
outs
stos
movs
fs
inc
push
xor
aaa
test
sub
sbb
mov
fcmove
shl
dec
and
pop
ins
fwait
jne
mov
adc
je
sbb
int
stos
stos
nop
xor
sub
mov
add
out
and
aad
inc
xlat
fcom
add
int
adc
dec
enter
sahf
leave
cmps
mov
test
test
fld
cdq
mov
cmp
sbb
out
(bad)
imul
bound
rcl
mov
sbb
mov
stos
(bad)
xchg
pop
retf
and
loopne
pusha
inc
daa
mov
retf
jge
cdq
cwde
xlat
cmp
pop
retf
jo
and
and
adc
(bad)
mov
movs
aas
int3
daa
mov
mov
sti
sub
sbb
mov
cs
xchg
mov
out
mov
mov
mov
lods
int3
(bad)
fcmovne
pop
test
test
push
sub
mov
cmp
int3
(bad)
hlt
push
jmp
add
imul
mov
or
xchg
or
sbb
push
(bad)
mov
lods
imul
outs
dec
pop
fcomp
pop
pop
xchg
shl
pushf
push
sub
retf
movs
into
(bad)
mov
daa
mov
dec
mov
ja
mov
and
mov
lods
cmp
or
xor
or
xlat
shl
push
pop
ffreep
fnstenv
push
adc
add
xlat
adc
push
fldenv
or
sub
mov
movs
scas
mov
ret
inc
push
pop
mov
fstp
int
cld
xor
mov
test
add
xor
outs
or
fst
adc
lock
sub
cmp
mov
je
das
sbb
dec
into
jne
dec
jmp
or
repnz
loope
outs
jbe
dec
shl
nop
adc
sbb
(bad)
lea
lods
repnz
pop
push
daa
inc
int3
ret
sbb
mov
js
test
lock
mov
push
push
loopne
data16
test
add
loop
dec
pop
add
push
and
loope
loopne
mov
xchg
sub
jae
jno
jmp
(bad)
dec
or
ja
xor
rol
cmp
mov
fs
mov
jl
adc
inc
adc
inc
or
dec
or
int
test
mov
scas
mov
mov
leave
jne
loope
xchg
jno
shl
add
cs
lods
jge
out
or
xchg
test
movs
pushf
or
psubsb
push
mov
daa
xor
mov
dec
int
fist
cmp
xor
mov
icebp
dec
ins
ret
dec
and
and
sub
adc
repz
int
and
xor
inc
mov
sub
push
rol
push
shl
pusha
cs
adc
push
sub
adc
xlat
xor
mov
push
bound
mov
js
cmc
push
xchg
jecxz
sub
jecxz
fimul
mov
loop
ret
xchg
dec
jg
sbb
jg
outs
pop
fsub
ds
adc
imul
imul
pusha
and
dec
xchg
sub
sbb
or
cli
xor
movs
ror
test
int
cmc
push
sbb
sbb
jb
shr
adc
call
push
cmp
jo
jl
imul
jl
xlat
cmps
movs
mov
ins
cmp
mov
int
pop
xchg
ss
dec
icebp
icebp
and
fsub
aaa
sbb
add
mov
inc
and
loopne
push
push
ds
add
(bad)
call
mov
jecxz
mov
pop
jns
push
(bad)
int
in
fwait
int3
or
push
sbb
pop
stos
jnp
ss
retf
sbb
retf
add
xor
or
sbb
ins
xor
(bad)
outs
int
and
cmp
fsub
je
les
inc
ss
(bad)
or
not
xchg
cmp
adc
dec
xor
and
aaa
pop
adc
add
in
pop
into
std
ret
jp
pop
mov
jae
sub
shr
(bad)
mov
sub
(bad)
out
and
push
or
in
js
cmp
(bad)
loop
adc
mov
shl
mov
cmps
stc
mov
adc
mov
xchg
xchg
repnz
(bad)
mov
pop
push
jge
inc
xchg
cli
in
lahf
pop
lds
pop
inc
or
xchg
xor
jmp
pusha
cdq
pop
add
cmps
sub
sbb
cmp
and
add
push
xor
stc
dec
stc
adc
daa
aaa
xchg
pushf
inc
xor
aam
mov
fsin
pop
xor
xchg
clc
in
jae
fadd
and
or
cmp
inc
or
nop
mov
jl
jmp
adc
xor
pop
fild
test
test
(bad)
cmp
xor
ins
shr
cmp
jo
push
popa
pushf
dec
(bad)
adc
test
pop
out
nop
mov
gs
jne
xchg
mov
jae
cdq
add
dec
call
mov
aam
mov
retf
enter
cld
inc
outs
movs
in
jne
aas
cmp
es
popa
les
stc
sub
sbb
inc
mov
push
xor
and
int3
pop
jmp
in
mov
mov
shl
fild
jae
ret
data16
jle
ja
push
loopne
aaa
adc
out
mov
(bad)
xor
xor
test
jno
ins
outs
loope
imul
pop
cmp
xor
sbb
sbb
cs
das
cmp
data16
xor
push
and
(bad)
cld
mov
add
xlat
inc
mov
ret
clc
lods
hlt
scas
xchg
push
out
pop
popa
rcr
pop
je
jl
(bad)
aam
xchg
js
xor
pop
daa
out
in
xchg
xor
jmp
jne
ss
sub
add
fucomi
xchg
dec
push
ret
es
mov
mov
daa
pop
pop
push
shl
lahf
(bad)
pop
cmps
sub
dec
pop
in
or
sar
dec
call
pop
xchg
loope
push
jae
sub
pop
sub
cmps
dec
or
mov
sub
or
jno
jno
or
cmp
and
xlat
rcl
pop
sbb
mov
mov
xlat
dec
xchg
push
ds
sub
test
ins
(bad)
test
push
and
cs
push
fsubr
es
xchg
jne
gs
xchg
(bad)
xchg
push
cmps
imul
mov
push
cmp
call
gs
pop
ins
push
or
xchg
into
and
push
sbb
push
dec
loopne
sbb
inc
lea
int
pop
js
dec
cdq
in
out
mov
scas
scas
dec
and
pushf
repnz
mov
fadd
add
and
mov
mov
int3
mov
pop
outs
or
push
addr16
lea
fsub
jecxz
and
xor
ds
shr
(bad)
loope
pusha
jo
mov
loop
adc
sbb
xchg
imul
mov
arpl
loopne
mov
adc
push
mov
xchg
or
sub
pop
sub
mov
fsubrp
fwait
popf
sahf
imul
ins
retf
ss
xchg
ins
test
add
mov
lock
test
push
lea
sub
stc
addr16
mov
adc
ins
gs
add
daa
push
outs
mov
xchg
sub
sbb
inc
test
jae
ret
mov
mov
mov
jmp
into
push
cmp
popf
xchg
dec
imul
in
lahf
or
jns
in
call
test
cmp
adc
sbb
cmp
outs
ins
sbb
out
mov
xlat
gs
mov
sbb
xchg
sub
adc
scas
jae
mov
shl
aas
sub
inc
lea
cmp
dec
(bad)
test
ins
mov
dec
repz
mov
adc
push
push
enter
imul
or
push
ror
fadd
test
sub
mov
lods
loope
add
jb
movs
mov
xchg
sbb
xchg
into
in
fldenv
mov
lods
pop
or
clc
iret
dec
aaa
sbb
fsubr
and
sub
movs
xchg
sahf
leavew
or
(bad)
mov
cmp
lods
cmp
out
ja
cs
retf
mov
and
mov
sub
popa
out
call
(bad)
shl
cmps
mov
push
mov
shl
dec
dec
or
jne
pop
fst
shr
dec
xchg
xor
ss
hlt
rcl
vandnpd
cli
mov
push
cmp
fsubr
lahf
push
cmp
xor
imul
cmp
ja
adc
and
adc
or
fmul
sub
popa
xchg
mov
lock
jne
out
(bad)
std
push
int
leave
sub
aaa
add
mov
test
push
mov
mov
loope
fisubr
sub
jg
push
movs
push
loope
xchg
push
ds
cli
pop
push
inc
mov
jno
pushf
dec
mov
mov
pop
mov
in
sahf
sbb
stos
cmp
fmul
call
sub
mov
sub
or
adc
call
dec
rol
sbb
test
sub
fbstp
dec
push
mov
scas
add
pop
loope
movs
mov
test
sbb
adc
mov
in
xor
(bad)
push
add
dec
sbb
cwde
cmp
in
call
pop
or
cmp
clc
call
mov
dec
sbb
out
adc
add
int3
shl
mov
sbb
mov
popf
mov
popf
in
jbe
fstp
add
mov
jbe
fdivr
loop
fldcw
mov
xor
movs
mov
nop
shl
sub
pop
sar
ins
push
push
out
push
out
mov
jne
retf
fsub
clc
cwde
cmp
jmp
sar
mov
and
jne
ret
popf
ss
pop
shr
sub
jmp
fsub
mov
push
cwde
fidiv
aad
mov
mov
iret
stos
xchg
sbb
jb
inc
sahf
not
jecxz
jne
adc
lods
mov
lods
popa
mov
sbb
mov
sahf
jp
fs
xchg
sar
mov
add
push
or
fld
wrmsr
xlat
cmp
pop
xor
fimul
adc
aad
sbb
test
pop
pop
sbb
push
xchg
push
fisub
mov
fcom
adc
dec
push
pop
and
mov
ds
adc
push
adc
cmp
lods
(bad)
icebp
xchg
push
sub
mov
addr16
jo
jmp
dec
mov
mov
and
push
push
loop
iret
push
pop
and
outs
imul
jne
lods
jbe
adc
add
stc
sbb
cmps
dec
ret
retf
sub
mov
int
enter
dec
jle
fist
jno
out
sti
movs
cmp
pop
inc
xor
into
test
jns
add
sahf
mov
aas
mov
push
std
pop
push
push
mov
js
rcl
stos
nop
loop
rcl
xlat
push
popa
mov
jns
imul
sub
push
pop
inc
cs
xchg
cdq
scas
jl
popf
stc
mov
(bad)
cmp
mov
sbb
pop
xchg
call
xlat
dec
and
inc
push
sub
cmp
test
call
sahf
dec
push
xlat
mov
test
push
push
loope
nop
leave
dec
test
and
inc
mov
cmps
xchg
sub
push
loope
ret
call
mov
lock
push
(bad)
xchg
ret
cmps
xchg
xchg
push
ret
ins
push
test
jns
(bad)
out
adc
cld
cmp
shl
cpuid
cmps
sbb
sti
jmp
mov
repnz
fisub
push
jo
xchg
dec
xchg
int3
call
in
sbb
jecxz
(bad)
fbld
pop
into
adc
das
adc
dec
pop
adc
cmp
jb
jno
jne
xchg
adc
jecxz
mov
in
je
das
sub
mov
call
outs
xchg
push
cmp
cmp
pcmpeqb
(bad)
or
sysexit
dec
unpcklps
mov
sbb
pop
out
(bad)
fwait
enter
jne
rcr
mov
mul
xchg
(bad)
enter
cmp
bound
xor
rol
mov
xor
cdq
fchs
xlat
push
mov
out
add
adc
fsubrp
out
mov
sbb
cmps
cmp
gs
dec
mov
sbb
(bad)
ror
das
fcmovb
mov
xor
add
push
stc
sub
or
iret
sub
push
inc
ss
cmp
int3
scas
aad
mov
jnp
es
out
inc
out
xlat
add
in
jae
mov
sub
arpl
dec
sub
int3
sbb
fwait
fwait
push
push
xor
jne
jbe
fstp
add
pop
jo
jp
push
mov
not
hlt
mov
fnstcw
cmp
sbb
adc
sub
mov
ds
mov
out
lock
mov
mov
push
mov
aam
gs
dec
add
gs
jae
popa
das
aad
imul
hlt
dec
and
cs
fst
and
ja
jne
dec
outs
mov
xor
inc
pop
xor
push
mov
inc
dec
(bad)
xor
cld
inc
stos
cmps
clc
in
inc
inc
je
dec
stc
pop
sbb
add
inc
sbb
out
pushf
cmp
call
and
imul
pop
and
jnp
les
jl
cmp
in
mov
scas
xchg
aad
ret
mov
push
cmps
lahf
sub
movs
jo
sub
retf
int
xchg
sub
fsubp
mov
out
push
scas
icebp
popf
dec
loopne
fwait
inc
retf
pusha
loope
stos
sub
and
mov
cwde
div
push
push
int3
jb
pop
dec
dec
mov
lods
add
jmp
xor
clc
ss
jne
jns
pop
adc
lods
fdivr
mov
xor
ins
cdq
sub
mov
movs
imul
fst
mov
mov
mov
mov
pop
xor
out
xlat
cmp
lods
xchg
cli
pop
mov
pop
lods
jmp
cmp
inc
push
jmp
loop
jmp
push
sbb
fist
push
call
int3
arpl
(bad)
dec
dec
addr16
cmc
in
stos
push
pop
pop
test
sbb
pop
mul
dec
retf
or
dec
jo
fsubr
adc
xchg
or
cmps
inc
jo
in
mov
movs
adc
add
dec
mov
cmps
xchg
dec
cmp
xor
pop
mov
out
mov
inc
adc
adc
test
sub
xchg
mov
pop
les
in
aam
or
enter
adc
test
test
dec
sbb
add
gs
movs
dec
add
mov
ret
mov
rol
or
movs
mov
mov
jmp
loopne
int
push
enter
jne
mov
ja
mov
adc
imul
push
xchg
sub
mov
or
mov
sbb
adc
mov
add
cmps
push
movs
aad
and
cmps
push
call
inc
sub
mov
test
ins
loope
jp
push
fmulp
ins
push
cmp
fcomp
inc
add
mov
clc
dec
pop
pop
xlat
les
ret
pop
lods
xchg
dec
(bad)
fild
mov
push
push
(bad)
sbb
mov
push
xchg
data16
push
into
sbb
jge
stos
retf
dec
sbb
in
push
hlt
push
mov
mov
out
push
xor
fbld
xor
or
aaa
inc
jb
jmp
adc
add
xor
(bad)
fidiv
pop
call
mov
ficomp
xor
hlt
jo
in
push
dec
mov
rol
mov
xor
fxch
xchg
dec
lds
cmpxchg
out
adc
out
ins
out
lahf
int
test
(bad)
jbe
je
sub
or
jae
mov
xor
fld
cmp
out
loope
cmps
bnd
or
jne
ror
push
gs
pmaxub
test
(bad)
(bad)
loop
ds
and
aad
pop
out
cli
cmp
out
adc
mov
cmp
sbb
xchg
rol
or
push
lods
aaa
repnz
mov
cmp
adc
inc
xor
sbb
cli
je
mov
ja
test
loop
mov
mov
test
leave
and
(bad)
pop
icebp
dec
fs
ins
push
cmp
fist
loope
dec
sbb
sub
pop
sbb
sbb
pop
cmp
xchg
in
jae
enter
jmp
pop
and
ss
inc
lea
add
pop
jl
add
add
fdivr
push
pop
mov
aad
xor
(bad)
fldcw
add
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
(bad)
fild
inc
add
add
push
add
push
pop
pop
push
or
adc
or
or
adc
(bad)
adc
adc
sbb
adc
push
sbb
and
push
and
and
daa
sub
sub
pop
sub
and
fild
inc
add
pop
pop
or
or
or
adc
sbb
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
or
mov
and
add
add
adc
add
add
les
sbb
add
add
add
add
add
les
dec
adc
add
add
add
add
add
add
add
inc
push
adc
popa
jno
adc
inc
adc
jb
push
and
and
xor
arpl
xchg
mov
icebp
xchg
inc
fs
loop
les
sbb
add
add
add
add
add
add
add
push
pop
inc
add
adc
add
add
add
add
add
add
add
add
add
add
and
add
inc
push
add
push
add
jno
inc
mov
(bad)
fiadd
or
add
add
add
add
add
jo
loopne
or
mov
jo
shl
inc
add
sbb
pop
daa
fldcw
or
add
pop
sub
and
or
dec
gs
sub
leave
loopne
retf
mov
daa
pop
or
fs
adc
fs
fld
sub
fnstcw
leave
ins
fwait
or
sub
fs
retf
and
test
mov
daa
fst
inc
retf
and
call
jb
ss
sub
push
leave
xor
or
cmp
scas
pop
jns
cmps
out
and
outs
push
jp
das
mov
movs
(bad)
mov
hlt
clc
mov
adc
sub
jnp
inc
adc
jns
stc
lods
aam
inc
or
(bad)
movs
cmps
cmps
xchg
cmps
lds
movs
xchg
(bad)
sbb
mov
jmp
or
or
sub
xchg
pop
or
inc
push
scas
call
mov
cli
fsub
sti
lods
ins
stc
fcomp
arpl
icebp
mov
ins
lds
ja
lock
into
push
jae
in
jp
add
out
mov
leave
sub
int
sub
inc
call
mul
sub
ins
sbb
pushf
out
inc
mov
pop
cmp
outs
mov
stos
mov
xlat
sahf
fidiv
frstor
mov
xchg
out
cli
stos
jae
or
pop
sti
lods
dec
and
rcl
cli
cmps
xlat
dec
shl
test
test
lahf
mov
popa
cli
sub
and
call
cmps
inc
push
outs
inc
pop
push
sbb
mul
repnz
adc
adc
loopne
aas
in
std
mov
mov
int
clc
in
cdq
xor
sub
pop
sbb
aas
cdq
test
stos
stos
call
lock
and
or
or
or
sub
or
or
or
lahf
adc
fnstcw
sub
bound
fistp
pop
enter
push
pop
icebp
icebp
sub
fs
jge
cwde
(bad)
push
cmp
cs
nop
inc
push
cmp
int
inc
arpl
clc
fnstcw
call
in
(bad)
push
pop
imul
clc
scas
mov
gs
xor
pop
mov
and
lahf
retf
or
jo
(bad)
mov
mov
pop
test
aaa
pop
mov
loop
mov
xor
mov
jge
jns
xor
jmp
pop
lahf
or
(bad)
faddp
jbe
pop
jne
scas
scas
cmp
sub
or
adc
or
call
gs
inc
xchg
test
stos
imul
scas
les
call
push
lds
aam
aad
push
push
inc
pop
call
pop
stos
sub
shl
lods
or
push
pop
fnstcw
jnp
add
stc
jno
in
fild
loopne
lods
aam
sub
mov
xchg
or
xchg
add
dec
mov
dec
or
sub
mov
fldcw
add
push
adc
test
jle
mov
in
xchg
dec
xchg
enter
sub
leave
ins
xchg
adc
nop
test
adc
push
inc
and
fldcw
and
adc
mov
and
arpl
in
dec
pop
leave
lds
cmps
ss
mov
test
mov
push
repz
sahf
jle
xchg
icebp
and
jmp
dec
out
xor
popf
lock
mov
lock
adc
cmps
mov
dec
popf
in
mov
pop
add
mov
jl
cwde
inc
xchg
xor
repnz
das
repz
lods
stc
dec
cli
dec
test
cmp
bound
repnz
in
(bad)
mov
or
pop
add
xchg
jae
(bad)
push
add
sti
jge
push
icebp
ss
ffreep
stos
dec
pushf
into
pop
cmps
sub
cdq
jmp
test
(bad)
cmp
sbb
xchg
pop
je
outs
(bad)
xor
js
pop
repz
stos
xchg
push
iret
sub
dec
movs
jno
pop
dec
addr16
mov
xchg
(bad)
xchg
push
xchg
sub
fwait
inc
ins
mov
call
gs
(bad)
div
push
inc
push
push
pop
out
out
mov
js
xchg
iret
in
out
sbb
call
cmp
popa
mov
dec
pop
pop
mov
jg
aad
stc
pop
std
push
sub
cdq
fidiv
aad
shr
ret
scas
sbb
loope
jnp
das
movs
cmp
arpl
jno
inc
(bad)
lock
push
pusha
retf
jmp
mov
scas
pop
out
xor
ss
xor
pop
call
scas
aaa
push
push
retf
aas
jmp
mov
jl
dec
jmp
cmp
movs
add
mov
pop
jae
stos
xor
xchg
and
pop
adc
aaa
(bad)
repz
frstor
popa
push
add
push
pop
inc
mov
mov
out
sar
(bad)
push
(bad)
ficom
dec
sub
fnsave
push
adc
sbb
outs
in
cmps
cmc
push
enter
popf
fcom
ret
sub
inc
shl
adc
add
mov
loop
push
imul
jo
sbb
out
sub
ja
inc
or
inc
dec
fs
sub
push
inc
sbb
mov
dec
add
dec
cmp
push
pop
imul
es
sar
sub
dec
jmp
dec
mov
sub
hlt
pop
mov
sub
jae
dec
pop
hlt
sub
fs
cld
das
xchg
enter
mov
sahf
imul
(bad)
dec
or
dec
arpl
imul
pop
jne
es
call
(bad)
mov
cwde
jne
jne
inc
jne
test
cs
in
mov
or
shl
xor
xchg
pop
fbld
or
clc
xchg
scas
adc
into
jne
stos
test
std
out
cmps
jmp
sbb
outs
sub
sahf
pop
sub
lea
pop
sub
push
test
or
or
or
or
push
retf
dec
sub
js
mov
jp
push
cli
push
scas
ret
and
bound
sbb
arpl
loope
xor
jno
sbb
push
cmp
mov
mov
jmp
call
jmp
mov
mov
xor
lea
jmp
pop
mov
and
sub
fs
xchg
or
retf
dec
mov
dec
fs
jbe
inc
nop
test
ins
movs
and
or
dec
dec
inc
test
test
mov
stos
scas
xor
inc
pop
scas
sub
mov
jmp
xor
xor
inc
retf
cdq
pop
pop
mov
das
imul
fmul
adc
xchg
fstp
cli
cwde
pop
int
and
and
mov
add
or
arpl
ins
jnp
push
cs
xor
xchg
fst
inc
mov
adc
and
repz
in
test
shr
repz
in
pop
aad
mov
lods
scas
rcl
jmp
fist
jmp
sub
pop
aad
int
inc
dec
mov
shr
ss
sub
xor
push
jo
(bad)
iret
data16
daa
call
in
add
cmps
push
shl
jecxz
ja
fiadd
sbb
sahf
sbb
jg
iret
adc
stos
cmp
dec
xor
in
sbb
sbb
push
dec
inc
adc
mov
int3
and
sbb
sub
les
in
lea
sub
pop
pop
or
xor
icebp
mov
pop
dec
push
outs
fcom
mov
push
lock
mov
fldenv
leave
in
(bad)
arpl
cli
mov
and
push
(bad)
fstp
stos
push
loop
cmp
mov
cwde
dec
adc
push
cmp
and
hlt
jmp
jp
add
sbb
jnp
ds
cs
rcr
retf
es
push
ret
loop
out
repz
cmp
mov
xchg
loope
sbb
rcr
mov
mov
into
xchg
push
movs
xor
je
bound
add
ins
ins
in
inc
mov
and
leave
mov
or
inc
adc
adc
push
je
retf
test
aam
ret
adc
pop
pop
xor
xor
sub
inc
out
mov
hlt
daa
call
xchg
cmp
fs
outs
int
xchg
fist
movs
into
sub
cmps
hlt
xchg
xor
int3
pop
jns
push
push
es
loope
jp
xchg
mov
test
aad
cmp
cmps
jle
lods
sub
cmp
call
sub
mov
int3
jg
(bad)
push
ret
xor
ficomp
pop
cmp
pop
push
inc
sub
sbb
aaa
xchg
lahf
mov
iret
adc
packssdw
adc
mov
out
cld
(bad)
cmps
jb
jge
fs
jo
pop
jmp
inc
xlat
call
ds
push
mov
aaa
or
xchg
fs
and
dec
xchg
sub
mov
push
xor
out
div
mov
inc
hlt
lds
sbb
call
jmp
cmps
es
sub
in
and
call
repz
(bad)
pop
sub
and
push
mov
mov
mov
jb
sub
mov
jns
mov
sbb
aaa
xor
arpl
inc
out
movs
fwait
push
xchg
js
icebp
push
bound
jg
adc
mov
inc
fdiv
pop
fdivrp
sbb
pop
stc
mov
je
jo
rol
or
sbb
sbb
mov
add
pop
pop
jl
cmps
sub
icebp
das
inc
clc
cmp
xor
aad
sahf
inc
cmp
cli
scas
dec
adc
sbb
inc
sub
and
mov
xor
xchg
mov
sub
call
pushf
push
add
mov
xchg
jmp
inc
mov
js
mov
fxch
mov
jecxz
loope
dec
mov
jp
loop
int3
mov
inc
cdq
ret
hlt
pop
fmul
out
sbb
in
cmp
push
mov
inc
jnp
mov
in
cmp
enter
imul
jmp
movs
and
jnp
or
imul
sbb
adc
mov
or
jg
fld
push
push
bound
repz
push
mov
ins
or
inc
and
or
xchg
jmp
aaa
pop
inc
or
pop
dec
push
retf
xlat
(bad)
cmp
pop
(bad)
fld
push
test
fst
push
inc
test
fldenv
retf
and
mov
enter
inc
dec
and
and
cmp
aam
outs
test
out
jle
xchg
(bad)
xchg
int
and
das
xchg
jb
xchg
repz
mov
shl
cmp
in
sub
xor
pop
push
ficom
cmc
daa
test
lock
mov
jb
call
jp
call
mov
not
stos
ins
cmp
push
pop
fs
(bad)
in
iret
js
sub
mov
and
jae
jmp
fstp
lea
push
rcl
int3
mov
sub
dec
push
outs
pusha
repnz
cmp
(bad)
sub
xor
fs
jae
inc
(bad)
sbb
int
pop
and
mov
(bad)
ja
cmp
fs
xchg
push
stos
ss
jno
mov
xchg
sbb
cwde
mov
lea
shl
or
mov
push
stos
fwait
xchg
pop
not
dec
inc
adc
dec
test
adc
in
jae
dec
lds
pop
dec
pop
push
sub
out
mov
out
add
adc
aaa
movs
xchg
mov
mov
mov
lods
and
into
aas
ret
data16
jns
pop
cmp
arpl
jbe
mov
mov
cmp
cs
aaa
jbe
clc
xchg
jb
retf
jl
cmp
mov
movs
mov
mov
lds
mov
xlat
iret
mov
cli
popf
aaa
push
mov
out
fnstsw
jecxz
(bad)
aam
int
add
and
popf
aam
mov
sahf
mov
lahf
les
push
jmp
lods
inc
dec
cmps
(bad)
out
and
cmp
(bad)
mov
(bad)
punpckldq
cmp
stc
scas
sub
js
sbb
data16
xchg
adc
jo
inc
frstor
mov
dec
pop
inc
ficom
inc
xor
popa
xchg
mov
(bad)
je
mov
push
iret
sbb
pop
or
(bad)
outs
enter
lods
scas
jo
xor
mov
imul
jno
loop
fistp
in
pop
dec
mov
cmp
sbb
mov
aaa
sbb
cmp
lahf
xchg
(bad)
loope
push
or
adc
loopne
ins
das
in
mov
(bad)
iret
rdpmc
int3
push
sub
jge
retf
lds
sti
push
xor
xchg
imul
mov
mov
fst
fwait
pop
ret
aad
pushf
cmp
adc
retf
push
inc
stc
jmp
mov
inc
mov
cmp
in
ret
movs
outs
data16
cwde
pop
mov
mov
in
enter
nop
mov
int
xor
pop
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
pop
shl
fldenv
icebp
enter
xchg
pop
add
push
sub
inc
and
(bad)
adc
adc
jl
test
xchg
icebp
mov
inc
adc
aaa
cli
lods
mov
hlt
xchg
ret
clc
dec
sub
jle
or
xor
inc
adc
mov
in
mov
mov
fisttp
scas
adc
and
jnp
jo
je
xchg
loop
cld
xchg
or
and
and
inc
outs
scas
jl
scas
adc
pop
push
mov
mov
clc
gs
hlt
ins
ds
inc
clc
lock
adc
xor
(bad)
arpl
add
sti
scas
movs
call
xor
lods
arpl
add
imul
add
lods
mov
pop
or
inc
les
pop
and
enter
xchg
sub
and
and
rcl
pop
cmp
inc
loop
ss
mov
inc
inc
or
test
mov
nop
test
adc
sbb
push
rol
sbb
sub
ret
jne
ins
repnz
pop
leave
mov
sbb
or
jp
cmp
inc
add
icebp
cmp
fisttp
jnp
pop
(bad)
or
ins
and
pop
jecxz
fild
mov
test
cmp
lods
cs
push
pop
out
cmp
(bad)
or
retf
cmp
call
pop
cs
or
test
div
push
test
push
jmp
aam
call
daa
mov
(bad)
lock
(bad)
xor
pop
push
jno
cmp
lods
js
cmps
push
jbe
in
loope
sbb
sbb
sub
mov
icebp
inc
and
inc
aaa
or
sbb
inc
mov
xchg
sub
(bad)
sbb
jne
adc
fsubr
fist
cld
das
push
ss
sub
push
and
or
out
stos
jg
inc
adc
add
dec
sub
les
les
mov
stos
cmp
call
dec
(bad)
cmp
cmp
pop
ss
push
fdiv
daa
loop
icebp
icebp
int3
mov
arpl
sub
setae
dec
sar
(bad)
aad
mov
sahf
scas
addr16
sub
jl
out
push
add
popf
xlat
mov
mov
or
xchg
bound
enter
jbe
movs
cmps
int3
fwait
sbb
jle
fwait
sahf
mov
movs
stc
and
(bad)
imul
rol
dec
lods
shl
push
lock
ror
stc
pop
cld
test
pop
scas
loopne
sahf
xor
mov
pop
mov
pop
cwde
out
sub
sbb
int
jle
ss
xor
fadd
pushf
js
rol
js
adc
movs
shl
sbb
dec
in
cld
mov
aad
or
xchg
cmps
cmp
scas
ja
xchg
pop
js
xchg
dec
mov
push
loope
sub
xchg
fstp
ret
je
mov
outs
test
add
jp
lock
pop
xchg
mov
xor
sti
add
xchg
scas
sahf
pop
fwait
outs
call
xchg
adc
pop
pop
inc
mov
xor
jmp
pop
pop
sbb
retf
cmp
add
adc
mov
data16
sar
jp
movs
dec
into
xchg
test
fidiv
into
cmp
mov
int3
popa
xchg
xor
sar
int3
cdq
lahf
cdq
mov
push
and
test
xchg
push
leave
sbb
rol
push
loop
das
lea
inc
adc
test
add
test
add
test
add
test
add
test
add
dec
sub
test
lods
pop
and
cwde
adc
xlat
mov
leave
mov
das
movs
mov
loope
fstp
xchg
mov
xor
sar
lahf
hlt
dec
call
sub
inc
add
sti
das
outs
mov
(bad)
rcl
add
inc
sbb
adc
daa
fnstenv
xchg
push
mov
or
mov
or
orps
jne
mov
rcr
dec
xchg
cmps
mov
scas
pop
cmps
mov
idiv
aad
in
or
jle
jae
lea
mov
mov
sbb
dec
addr16
mov
lods
fisub
and
sub
add
outs
int
(bad)
adc
aad
mov
adc
cmps
aaa
or
pop
aad
cmp
or
push
inc
ins
nop
test
ret
stos
dec
pop
push
pop
cmp
xchg
pop
mov
sbb
frstor
test
push
loop
ins
loopne
into
cld
dec
ins
shr
loop
push
jmp
nop
inc
arpl
cdq
(bad)
daa
xchg
hlt
jo
add
jp
loop
pushf
outs
ret
test
inc
sbb
jbe
push
inc
loop
nop
cmp
jns
(bad)
dec
fimul
arpl
in
repnz
xlat
mov
stc
sub
test
inc
stc
mov
ja
pop
imul
stos
(bad)
int
mov
cmp
mov
or
repz
fwait
test
xchg
mov
cmp
push
jp
cmps
sbb
sbb
jge
movs
and
jmp
jno
lods
into
(bad)
push
loop
cmp
inc
sub
int
or
jp
(bad)
loopne
into
arpl
nop
scas
mov
enter
push
div
fisttp
cmp
pop
je
test
adc
cmp
cmps
ret
mov
aad
mov
imul
ins
aas
mov
inc
sbb
ins
xchg
jbe
jmp
rcl
dec
sbb
jo
loope
cs
push
inc
arpl
daa
mov
mov
sbb
adc
sti
scas
dec
rcr
int3
add
sti
sub
loop
sbb
aad
jb
sub
dec
into
xchg
out
jp
jmp
mov
and
scas
xchg
pop
dec
ror
imul
jb
ss
xchg
cli
add
push
sar
cmp
pop
mov
xor
test
push
ins
push
add
ins
js
in
dec
outs
adc
add
lahf
clc
scas
or
into
cli
test
out
mov
jg
(bad)
hlt
pop
push
push
(bad)
loop
or
loop
aad
iret
lods
vmwrite
dec
pushf
jne
in
pusha
and
lahf
js
push
mov
dec
mul
jo
adc
ret
or
leave
xor
xor
xor
cmp
pop
xchg
shl
xor
push
mov
cmp
pusha
jle
clc
mov
inc
imul
cmp
cmps
aas
enter
cli
jecxz
mov
imul
push
pop
or
xchg
pop
and
mov
fadd
fstp
les
and
jo
inc
dec
cmp
xchg
mov
jle
ret
jne
les
pop
stos
fidivr
jns
icebp
sbb
mov
in
bnd
sbb
mov
jbe
cmp
xor
stos
mov
aam
add
repz
loop
pop
xchg
pop
mov
jecxz
mov
xor
or
jmp
ds
cmps
mov
jecxz
mov
or
pop
pushf
loop
pop
cmp
jg
in
aaa
xlat
shl
xchg
test
adc
(bad)
leave
clc
aad
popf
(bad)
sbb
cmp
(bad)
jnp
(bad)
or
mov
mov
jmp
cmp
cs
ret
xchg
stos
mov
jbe
or
ror
mov
cmp
dec
push
rcl
dec
inc
cmp
jle
pop
mov
pop
or
loop
push
sub
int3
gs
fwait
sub
jge
cmc
mov
inc
adc
fldcw
in
outs
ss
inc
scas
jns
test
hlt
push
xchg
fs
fwait
test
mov
inc
push
(bad)
cmps
jns
mov
dec
and
mov
les
cmp
mov
aad
push
ret
cmp
dec
inc
pop
call
add
int
scas
fisubr
sub
xor
in
pop
je
sub
and
test
sbb
jo
mov
imul
pop
out
paddd
mov
les
test
push
adc
test
and
inc
and
inc
and
scas
loopne
lock
sub
fadd
xchg
sbb
pushf
cmp
push
mov
cmp
fsubr
xchg
mov
adc
mov
xchg
xor
das
addr16
fneni(8087
das
mov
adc
mov
mov
xor
inc
fs
pop
ins
aad
mov
sub
call
(bad)
xchg
sub
xchg
xchg
dec
or
and
imul
mov
(bad)
fsubr
out
and
mov
cmp
push
jnp
inc
add
pop
les
pop
mov
mov
xor
pushf
dec
test
sbb
pop
cmp
(bad)
dec
add
xlat
cmp
lods
xchg
pop
and
fisttp
movs
imul
lock
cmps
cmp
or
push
ret
test
add
mov
and
xchg
cmp
inc
mov
mov
popf
cmps
repnz
ja
aas
push
loopne
cmp
ret
push
xchg
cmps
mov
nop
jmp
mov
neg
pusha
fdivr
cmp
add
lods
and
cmp
or
rol
push
shl
repz
push
std
pop
pop
add
rol
das
and
test
adc
daa
outs
push
addr16
movs
sub
imul
call
jns
dec
into
cmp
jle
jp
fsub
push
in
mov
mov
(bad)
xor
pop
aad
mov
(bad)
(bad)
pop
aad
push
push
fcomp
dec
and
ret
(bad)
xor
mov
push
push
cmps
xor
outs
and
add
mov
inc
sbb
mov
dec
xor
push
xchg
inc
and
sub
in
cmc
pop
jmp
nop
out
inc
add
adc
sar
aas
adc
repnz
and
rol
mov
pop
lahf
and
int
(bad)
cmp
adc
loop
clc
clc
cs
std
mov
repz
mov
push
shl
xchg
popf
xchg
loopne
sahf
or
jae
and
sar
iret
adc
test
or
sbb
mov
mov
data16
sub
cwde
mov
(bad)
fmul
cs
xchg
mov
inc
jo
aam
cmp
fcom
repnz
shl
xor
fidivr
push
lahf
push
std
mov
out
(bad)
sbb
(bad)
lods
or
xchg
lods
or
int3
idiv
data16
add
icebp
movs
and
icebp
repz
js
movnti
or
cs
adc
stc
sbb
call
cld
mov
fisttp
cmp
xor
movsx
or
or
inc
adc
in
sar
inc
sbb
and
mov
ins
clc
jbe
push
cld
cmp
repz
nop
cmps
arpl
or
ja
movs
pop
rdtsc
fwait
cmps
xchg
ins
sbb
and
jbe
call
and
jmp
(bad)
adc
jae
ins
movs
addr16
shr
and
inc
adc
inc
ret
ret
dec
jmp
inc
jb
or
push
gs
xchg
push
push
stos
sub
push
not
dec
stos
mov
xchg
pushf
jne
or
movs
jae
fsubr
nop
inc
or
mov
sub
cmc
push
push
add
test
mov
mov
sbb
or
sar
cli
clc
sub
addr16
rcr
xchg
not
stos
xchg
repz
aad
jmp
iret
into
fnstcw
scas
lods
cs
dec
dec
pop
fimul
sbb
sub
out
shl
add
push
std
xchg
xchg
jmp
push
inc
out
iret
cmp
pushf
mov
sbb
ins
push
jo
dec
je
ja
test
push
push
or
mov
adc
pushaw
in
pop
imul
out
stos
sahf
xor
stos
scas
adc
loop
movs
jo
leave
sbb
fidiv
out
imul
mov
out
inc
imul
mov
loopne
cmc
push
rol
fcmove
add
mov
maskmovq
imul
lods
mov
mov
rcl
mov
sbb
inc
jnp
js
scas
xchg
sub
fs
xchg
fnstsw
aam
mov
imul
ja
inc
dec
sub
in
jmp
jno
jge
std
fidiv
js
leave
scas
pop
mov
fsub
(bad)
data16
(bad)
ss
add
xor
lods
daa
scas
push
inc
out
push
test
or
pop
js
repz
cmps
ins
out
cmps
push
loop
movs
cmps
je
cmp
pop
push
push
enter
jecxz
xchg
xchg
mov
jl
mov
dec
mov
cmp
(bad)
or
push
pop
out
outs
push
cmp
fcmovnbe
cmp
test
jne
test
cdq
jmp
neg
or
lock
leave
ins
cwde
cmp
adc
loopne
and
xor
lods
aas
push
aaa
pop
push
into
and
dec
sub
pop
icebp
mov
push
mov
cmp
ins
ds
mov
test
popa
push
or
push
aaa
pop
push
iret
mov
and
push
cmp
sub
inc
test
pop
dec
xor
mov
aam
and
and
cwde
dec
enter
dec
mov
and
add
test
arpl
ret
jbe
mov
sbb
adc
adc
mov
inc
stos
mov
xchg
dec
and
xchg
test
fsub
mov
adc
mov
sbb
pop
mov
adc
test
pop
int
mov
hlt
pop
xor
int3
jno
xchg
clc
rcl
mov
mov
pop
xchg
mov
jo
or
push
push
or
mov
jmp
sub
mov
adc
or
into
sub
aad
sub
mov
ds
cmps
nop
mov
add
jmp
int3
jnp
rsm
js
sbb
xchg
sbb
sub
lea
xchg
loop
inc
jno
pop
clc
(bad)
stc
scas
xchg
sbb
fbld
fisub
(bad)
mov
inc
mov
dec
out
jge
scas
les
cmp
das
call
add
sub
mov
lds
pop
push
adc
es
sbb
adc
adc
jno
js
mov
outs
ds
stos
add
pop
fimul
ret
mov
fidivr
loope
sub
inc
jmp
xchg
pop
mov
adc
xchg
mov
pop
pop
push
mov
stos
aad
sbb
js
sub
inc
jmp
ficom
mov
pop
cmp
sbb
mov
mov
repz
loope
icebp
cmp
jle
jge
out
adc
mov
and
les
mov
neg
sub
mov
dec
sub
sub
jp
mov
mov
mov
(bad)
jnp
push
push
xor
push
jmp
jmp
pushf
inc
jb
outs
xor
std
loopne
mov
sti
cmps
mov
arpl
pop
pop
dec
stos
daa
stos
ss
jnp
sbb
out
(bad)
mov
das
sbb
xor
pushf
out
lods
pushf
jg
mov
jne
out
call
out
sub
das
sub
cmp
mov
je
jae
stos
jg
aam
xor
lahf
push
arpl
ret
out
sub
movs
fst
adc
ins
outs
into
push
in
test
mov
mov
push
or
test
sub
inc
xchg
test
pop
push
xor
(bad)
jns
sub
icebp
pop
dec
dec
(bad)
jb
popf
imul
imul
cmc
cmp
gs
scas
push
sub
test
(bad)
repz
aam
pop
sbb
fadd
sbb
xchg
sbb
push
inc
fs
lea
in
cwde
fbld
in
imul
fmul
push
jmp
loope
cmp
dec
push
cmp
inc
jbe
xchg
mov
cmps
push
cld
xchg
popa
int
inc
popa
lea
daa
add
sahf
push
rcr
mov
and
push
xchg
mov
rcl
cld
aad
fst
repz
in
call
ins
fisub
ss
pop
repz
arpl
jns
push
push
cmc
or
push
in
outs
loope
or
jne
hlt
push
in
bound
scas
mov
cmp
mov
inc
mov
sub
sar
stos
test
outs
push
sbb
push
pop
inc
stc
or
push
test
push
inc
ret
loope
add
(bad)
sbb
inc
mov
aam
mov
adc
and
je
sar
jno
lods
imul
add
test
loope
mov
shl
push
or
lea
ds
in
(bad)
xlat
loopne
cmps
xchg
repz
and
mov
(bad)
repz
and
jb
movd
clc
ins
mov
mov
shr
push
lea
ins
out
cmp
pop
(bad)
push
inc
pusha
test
je
sbb
jmp
inc
push
dec
adc
mul
jno
cmp
leave
test
sahf
sbb
gs
add
pop
sub
in
or
jnp
cmp
fist
out
adc
ins
das
xchg
jecxz
sbb
push
ins
scas
xor
pop
aam
push
aad
inc
adc
xchg
adc
out
shr
jnp
or
mov
cmp
push
mov
cmp
(bad)
shl
(bad)
mov
retf
call
lock
stc
ror
add
(bad)
das
std
pushf
pop
xor
in
sbb
lea
aam
test
sub
call
inc
cwde
lahf
and
jp
not
popf
std
movs
iret
jg
aaa
dec
pop
sahf
in
mov
fidivr
lods
mov
sbb
xchg
(bad)
scas
mov
fstp
cli
imul
mov
or
stc
mov
aas
push
rep
push
push
cmp
mov
mov
rol
xchg
inc
rep
cmc
repnz
iret
lds
mov
mov
mov
mov
pop
and
mov
mov
jo
not
ss
push
adc
xchg
pop
pop
les
inc
stc
aaa
(bad)
outs
repz
xor
inc
in
test
stos
pop
cmp
dec
mov
mov
mov
sub
(bad)
push
ja
push
enter
xchg
ss
push
loop
cmp
pop
arpl
inc
jnp
add
popa
jl
mov
ret
clc
fiadd
cmp
mov
retf
sahf
jb
aas
retf
js
gs
rcr
cli
dec
push
enter
mov
jo
fild
mov
add
not
cmps
jp
mov
xlat
xor
icebp
mov
jns
jmp
pop
adc
inc
cmps
mov
mov
cmp
pop
sub
dec
ins
adc
lock
inc
mov
gs
dec
call
pop
cmp
shr
and
div
js
and
fld
jae
addr16
imul
or
sahf
pop
mov
sub
ja
pop
inc
movs
dec
sbb
xchg
push
cdq
and
jae
add
fwait
js
aad
pop
lahf
ret
sbb
xchg
push
or
mov
repz
inc
out
sar
sbb
pop
iret
cld
sbb
ins
icebp
pop
gs
dec
jmp
pop
imul
adc
xor
cs
cwde
test
das
lods
js
test
jo
fld
dec
sub
push
sub
lock
ret
jmp
imul
mov
aam
add
mov
jb
(bad)
pusha
jl
mov
inc
cmp
or
jl
or
fdivr
adc
adc
icebp
xor
pop
in
cdq
into
fdivr
jbe
iret
pop
sbb
fisttp
cmps
pop
add
lds
fistp
test
sub
arpl
mov
aas
xchg
imul
jmp
mov
ins
push
ret
jo
mov
bound
stos
cmc
dec
iret
sub
ret
ins
jmp
lds
push
add
mov
sahf
test
in
aaa
retf
stos
(bad)
pop
sbb
sub
test
test
mov
adc
jb
test
inc
loop
mov
test
sbb
ins
mov
movs
mov
cmp
or
sbb
dec
lds
xchg
pop
imul
xchg
pop
xchg
je
stc
sub
loope
stc
loop
enter
push
and
fs
mov
jmp
sbb
adc
xchg
pop
aaa
mov
push
or
or
adc
mov
loopne
pop
dec
dec
mov
mov
jp
add
push
std
lahf
or
or
push
(bad)
popa
jge
loopne
loopne
mov
dec
xor
les
sbb
mov
push
mov
cmp
outs
movs
es
jb
popa
xor
retf
cmp
cdq
stc
sub
(bad)
xor
mov
mov
or
push
dec
stos
fld
aas
xchg
(bad)
mov
sbb
sbb
retf
test
jnp
sub
in
or
cmp
retf
les
sub
mov
rol
sbb
in
sbb
push
lock
out
stos
daa
and
cdq
inc
fwait
leave
sbb
shl
mov
dec
sub
sub
dec
arpl
in
mov
mov
test
cmc
dec
std
mov
and
test
xor
add
ins
inc
and
out
pop
cmps
ret
sbb
push
fucomip
enter
scas
lea
and
sub
outs
xchg
fcmovu
jge
xchg
add
movs
jno
pop
repnz
outs
jnp
fist
fcomp
push
mov
xor
adc
ss
pop
xchg
test
xor
out
dec
test
ret
stos
adc
push
adc
sub
mov
not
pop
sub
imul
mov
rcl
(bad)
cmp
stos
data16
jae
dec
push
add
retf
mov
inc
and
dec
outs
and
and
repz
mov
push
out
je
mov
pop
cmps
mov
mov
mov
enter
jb
in
push
xor
jae
popa
outs
inc
mov
ja
sub
out
stc
mov
out
mov
mov
sub
loopne
test
sub
es
test
pop
sub
jge
retf
jmp
pop
cmps
adc
repnz
frstpm(287
rol
(bad)
sub
mov
lods
(bad)
outs
mov
lds
sbb
cmp
xlat
xor
(bad)
fstp
mov
jmp
test
push
pop
sbb
bound
push
leave
sbb
daa
xor
cmps
in
sub
pop
mov
or
fs
sub
jl
icebp
in
cmp
sub
mov
imul
mov
pop
in
inc
nop
sub
loope
add
dec
test
movs
lods
outs
cs
sub
out
into
add
add
sub
fcom
(bad)
sub
loop
in
xor
cmp
(bad)
addr16
inc
mov
and
retf
movs
shr
mov
xchg
inc
stos
scas
sahf
arpl
mov
arpl
cmp
mov
lahf
cli
retf
cmp
ret
pushf
sub
mov
js
xchg
mov
cld
outs
sti
pop
mov
lods
lods
outs
mov
ss
imul
lods
pop
aad
outs
push
pushf
es
cdq
(bad)
data16
and
or
xchg
(bad)
xchg
xchg
(bad)
or
xor
pop
or
xor
and
aad
shr
xchg
jge
(bad)
jecxz
retf
xchg
jmp
imul
cmps
add
jp
mov
dec
xor
iret
cmc
push
movs
hlt
imul
lods
cmps
ja
test
jl
pop
jl
popf
mov
adc
mov
test
movs
loopne
dec
xchg
xchg
popf
(bad)
mov
push
adc
sub
(bad)
xchg
ret
arpl
xchg
cmp
xchg
xchg
mov
mov
jle
xor
xor
mov
xor
mov
inc
xor
rcr
pop
test
vpcmpgtb
mov
ret
loop
das
mov
xchg
mov
cmps
ins
repnz
call
das
das
sbb
ja
movs
or
or
sub
ss
imul
aaa
push
mov
sbb
sbb
shr
cmp
xchg
ret
push
sub
popf
imul
cli
es
fs
or
dec
jecxz
cs
popa
cwde
inc
jmp
jbe
stos
out
loop
ror
sbb
and
mov
add
add
out
dec
loopne
dec
cwde
dec
inc
mov
inc
mov
cs
jmp
mov
leave
shl
cmp
mov
cmps
mov
xor
aam
cmc
shl
fcmovne
jge
lock
jno
pop
call
arpl
and
xchg
sbb
lahf
mov
and
mov
daa
outs
not
inc
and
gs
mov
cmc
cli
sub
mov
sbb
pop
sub
xor
packsswb
sbb
and
sbb
xor
xor
sbb
xor
out
arpl
mov
pop
push
cmp
mov
rol
scas
cmp
add
sub
pop
inc
ins
or
in
out
jae
sub
xor
movs
adc
or
cmp
retf
dec
push
rcr
sbb
fst
inc
cli
imul
pop
test
cmps
pop
pop
loop
adc
push
loope
inc
and
les
in
mov
jns
push
daa
lds
mov
scas
imul
xchg
rcr
clc
out
sbb
xchg
popa
mov
and
push
cmp
inc
fild
pop
adc
xchg
rcl
push
dec
and
int
and
xor
xchg
mov
xchg
sbb
int3
adc
rcl
or
cmps
pusha
enter
dec
or
ret
inc
sub
jecxz
(bad)
call
mov
push
ins
shr
mov
loope
out
jne
cmps
sbb
es
sbb
popa
(bad)
jo
mov
push
movs
ds
jo
dec
dec
(bad)
in
jo
int3
jmp
inc
mov
aas
imul
aas
xor
cmp
or
repz
push
mov
pusha
xor
dec
cwde
pop
jle
adc
ss
fcomp
push
xchg
mov
jmp
je
das
jge
xlat
movs
mov
xchg
and
add
mov
xor
or
xchg
inc
xlat
test
ret
stos
scas
pusha
add
mov
enter
cmp
dec
inc
(bad)
aad
imul
scas
and
lahf
or
lahf
xchg
ins
rcr
in
inc
in
stos
fadd
icebp
cmp
(bad)
out
(bad)
and
pop
js
and
xchg
pop
mov
push
aad
pop
sub
in
dec
push
sub
or
movs
stos
jno
sub
lods
pop
aad
cmp
es
rep
xchg
sbb
sub
rcl
es
dec
dec
imul
enter
test
fwait
cmp
stos
int
xor
dec
mov
xor
fstp
mov
cmps
sub
imul
xchg
retf
jmp
mov
mov
pop
fwait
pusha
add
imul
sub
test
mov
stos
push
adc
cmc
pop
inc
loop
ja
dec
(bad)
jmp
pop
retf
xchg
sub
jle
rcl
outs
das
add
(bad)
xlat
mov
lods
push
mov
enter
push
push
jecxz
aaa
push
and
jmp
add
push
push
add
mov
xor
nop
xchg
pop
ss
add
lock
cmp
xor
cdq
mov
out
jle
mov
pop
sbb
push
data16
jno
fsubr
sar
jmp
mov
jle
inc
es
aad
sub
sub
pop
outs
dec
cmp
das
shr
imul
pusha
imul
ret
pop
xor
retf
and
fld
push
imul
push
mov
push
xchg
add
bound
pop
xor
inc
fiadd
ret
std
pop
mov
pop
inc
out
fnsave
in
inc
push
dec
and
inc
pop
in
(bad)
mov
in
jp
push
jae
xor
sbb
dec
outs
imul
outs
outs
jne
ret
adc
pop
mov
jge
in
mov
sbb
add
inc
sbb
dec
push
call
mov
sbb
repnz
mov
bnd
pop
push
(bad)
cmps
mov
outs
add
mov
pop
cmp
jo
push
mov
and
pop
jmp
jmp
imul
test
sbb
pop
scas
mov
repz
cli
pop
lods
cdq
pop
ja
jnp
mov
and
inc
jae
sbb
in
dec
pop
loope
cmp
retf
call
cmps
in
mov
repz
ret
push
xor
add
hlt
bound
stos
xchg
fist
sbb
dec
lods
xor
mov
pushf
out
mov
std
call
sub
add
pop
xchg
push
adc
add
or
out
push
das
cmp
mov
ds
fnstenv
adc
xchg
inc
push
dec
popa
and
and
add
jno
and
data16
fmul
movs
add
pop
mov
pop
call
xchg
jnp
rol
mov
sub
test
movs
cwde
jg
dec
enter
(bad)
mov
shl
enter
jno
leave
int
sbb
pop
lods
ins
xor
test
jns
arpl
jmp
xor
lahf
inc
pop
pop
clc
nop
cmc
cli
daa
mov
scas
mov
push
dec
fnstcw
call
jnp
mov
repz
aam
push
jne
xchg
ins
hlt
push
std
push
jae
jne
mov
stos
les
dec
fldenv
rcl
iret
xchg
cs
mov
mov
cmp
(bad)
out
movs
mov
pop
gs
call
int
jecxz
lahf
repnz
xor
aaa
(bad)
inc
cli
push
fwait
push
add
cwde
dec
mov
pop
fild
movups
ins
dec
xor
call
retf
call
ffreep
inc
movs
arpl
mov
addr16
arpl
mov
adc
mov
test
jns
adc
mov
ss
adc
outs
ja
imul
mov
add
sub
jmp
loop
fsubr
scas
xor
mov
inc
loop
jns
fisttp
js
dec
jmp
jecxz
arpl
outs
aad
sar
(bad)
and
add
imul
xor
add
or
jle
rcr
cs
xor
sbb
mov
in
ficom
add
(bad)
mov
or
imul
les
jmp
dec
sbb
test
sbb
fiadd
std
push
lahf
xlat
push
dec
inc
pop
xor
loop
cmp
mov
arpl
mov
popa
pop
imul
scas
std
or
push
xor
push
cwde
push
call
mov
maxps
pop
mov
push
cmp
ret
xchg
sti
inc
xchg
jno
push
(bad)
adc
loope
loopne
and
jg
pop
adc
test
mov
ds
out
mov
cmp
neg
clc
cmps
push
mov
jg
in
je
dec
retf
push
aam
inc
mov
jge
arpl
(bad)
shl
pop
and
shl
sti
sub
ins
stos
mov
or
aas
pop
ret
mov
push
mov
icebp
shr
loopne
(bad)
rcr
cwde
xor
push
into
add
and
mov
adc
lock
aaa
adc
not
add
mov
inc
test
mov
mov
nop
jl
jns
loop
jb
scas
xor
cmps
cmp
add
inc
xor
inc
inc
dec
inc
sti
outs
adc
pop
or
cmp
pop
push
shl
xor
push
in
ss
push
pop
icebp
jnp
mov
lods
lds
mov
and
pop
ss
int
movs
jnp
sub
xchg
fmul
dec
std
pushf
pop
fild
and
(bad)
cmp
mov
mov
push
adc
outs
push
bswap
lods
rcl
lea
sub
xchg
xor
add
cmp
call
and
sbb
jb
pop
fst
ror
jl
push
ret
in
ret
pop
outs
imul
jne
sbb
mov
xchg
pop
jbe
sbb
mov
xor
sub
adc
sub
dec
push
sbb
inc
jne
mov
call
ret
dec
in
arpl
mov
dec
ret
jae
hlt
adc
into
out
fsubr
test
sbb
mov
sub
xchg
gs
push
ror
adc
mov
test
gs
imul
sub
loopne
add
cmps
sahf
movs
repz
mov
ret
adc
and
ficomp
(bad)
inc
ret
pop
dec
and
pop
sub
pop
movs
pop
and
cmp
out
or
shr
movs
icebp
and
or
mov
jnp
dec
imul
add
sub
mov
mov
inc
dec
stc
dec
fcomp
stc
push
inc
adc
sbb
xchg
inc
push
jbe
push
adc
sbb
lods
scas
call
in
ins
xchg
pop
push
lock
imul
(bad)
popf
cmp
sbb
dec
imul
dec
outs
jp
inc
cmp
mov
sbb
test
add
jae
retf
bound
rcr
push
push
mov
xor
sbb
shr
jae
mov
push
mov
sbb
mov
jne
or
lea
cmp
in
adc
inc
push
mov
mov
rcl
dec
push
sub
add
cdq
int3
call
sbb
mov
cdq
sub
js
cli
lods
arpl
fs
repnz
and
pminub
jle
loope
fnsave
dec
into
rcl
xchg
sbb
ja
cwde
nop
ret
sub
icebp
and
shr
lods
fstp
jecxz
mov
cmps
lahf
lods
mov
mov
ss
lods
dec
aas
adc
push
popa
popa
popa
cmp
imul
jno
adc
or
arpl
pop
cmp
neg
mov
outs
lea
in
repnz
out
mov
ret
clc
mov
sbb
aad
icebp
pusha
mov
adc
das
aas
daa
(bad)
ret
push
cmp
adc
cmp
ds
cmps
cmps
pop
jecxz
pop
in
mov
xor
pop
lds
jb
repnz
adc
ret
adc
lods
(bad)
mov
(bad)
leave
xor
pop
push
loop
out
je
mov
pop
mov
dec
mov
adc
rdpmc
retf
movs
into
push
into
(bad)
fcom
adc
(bad)
xchg
das
dec
loop
inc
cmp
loopne
sub
sti
pop
call
cmps
sub
call
push
lahf
stos
repnz
ins
retf
retf
ins
cli
xlat
out
mov
jbe
sbb
push
mov
pop
adc
mov
cs
pop
mov
aas
or
jmp
popf
xor
xor
jnp
sub
loope
xor
cli
jmp
sub
mov
adc
rcr
dec
push
ffreep
xchg
mov
std
push
and
out
iret
xchg
(bad)
mov
pavgw
xor
das
les
test
movs
jp
jmp
push
sub
ret
xor
sbb
fst
adc
ror
mov
cmps
jo
xchg
pop
scas
ins
cmps
int3
ss
lods
mov
(bad)
imul
inc
aaa
push
mov
cmps
mov
adc
mov
fidivr
(bad)
shl
shl
call
(bad)
(bad)
movups
cwde
dec
jl
test
nop
push
movs
jns
ja
addr16
call
mov
loop
mov
sub
push
inc
push
inc
pushf
ds
in
movs
aas
icebp
mov
icebp
jne
inc
clc
jmp
and
cmps
movs
(bad)
pop
adc
xor
jecxz
xor
out
xchg
out
mov
add
ja
cdq
dec
push
jnp
shl
adc
in
jmp
andnps
pop
mov
sti
dec
dec
out
je
cmp
or
ss
cmp
cmp
xchg
cwde
mov
or
test
and
popa
jne
pop
adc
lds
call
jno
lds
fadd
ins
ds
sbb
xchg
call
jns
sbb
push
lock
push
popa
into
jbe
pop
loop
pushf
or
or
arpl
adc
mov
jle
mov
mov
push
sub
mov
mov
cmp
push
or
js
repz
repnz
fistp
mov
pop
dec
psrlq
std
push
test
jo
adc
jmp
call
je
xor
out
not
jmp
lds
das
xchg
(bad)
addr16
xchg
loope
dec
mov
or
pop
adc
imul
lods
test
call
out
cmp
or
or
or
lock
cs
jns
pop
cmp
inc
jo
push
arpl
mov
cwde
stos
imul
or
push
imul
out
inc
pushf
js
sub
fucom
aas
frstor
mov
and
cmp
push
mov
mov
mov
daa
les
xchg
xchg
mov
shl
mov
leave
inc
xor
ds
or
pop
push
xchg
push
add
ds
or
fsubrp
retf
js
pop
mov
dec
rcr
retf
clc
jno
xchg
mov
mov
ins
mov
xchg
lock
xchg
jle
leave
movs
ret
sbb
ins
mov
imul
and
fsubr
and
xchg
mov
xor
or
movs
sub
je
pop
shl
mov
inc
mov
push
jne
push
out
mov
xchg
cmps
push
inc
push
push
inc
gs
sub
imul
cmps
jnp
and
mov
jne
sbb
stos
jge
(bad)
sti
clc
add
jmp
cmp
mov
dec
mov
and
xchg
adc
pop
and
sub
outs
sub
fwait
adc
cs
mov
pusha
cs
(bad)
pop
mov
stc
fadd
pop
movs
je
ins
sub
pop
call
cmps
dec
mov
mov
daa
push
fwait
ja
dec
retf
out
jne
sahf
and
xchg
push
jecxz
dec
jle
pop
fimul
sbb
je
dec
das
cmp
inc
pextrw
cmp
sbb
aaa
sbb
fsubr
jae
pop
out
fs
mov
dec
mov
push
push
xlat
adc
inc
dec
jmp
es
mov
sbb
xchg
pop
int
outs
cdq
les
cmp
cmps
mov
stos
out
mov
xchg
or
add
imul
lods
mov
xchg
sbb
shl
mov
ret
out
push
mov
int3
stos
add
mov
repz
push
sub
push
adc
inc
ins
jge
cwde
sub
rcl
mov
rcl
(bad)
in
mov
mov
lock
ja
retf
cmp
xor
cld
dec
out
add
stc
test
in
aaa
jne
into
retf
cmp
and
(bad)
add
push
jno
outs
and
dec
out
dec
and
iret
retf
xchg
dec
and
sbb
outs
mov
jns
jle
sbb
cmp
push
(bad)
mov
dec
test
les
popf
hlt
cwde
mov
dec
sbb
push
mov
xor
aam
sbb
sbb
sub
or
movs
repnz
xchg
mov
cmp
cmp
sbb
test
(bad)
pop
cmps
adc
aad
and
in
inc
call
sub
mov
cmp
xor
jmp
arpl
fwait
jbe
(bad)
and
in
in
mov
mov
jno
ret
mov
pop
fst
inc
dec
out
mov
pop
sbb
push
outs
pop
pop
add
pop
scas
adc
xchg
aam
jne
outs
xchg
clc
pop
ret
test
pop
sbb
in
out
shl
pop
add
call
pop
xor
mov
les
(bad)
nop
jmp
fcomp
pushf
pushf
sbb
adc
cmp
jo
sub
fmul
cmp
jnp
shr
add
add
mov
sbb
xchg
mov
mov
cmp
stos
mov
pop
xor
cmp
in
scas
mov
sub
xor
in
mov
outs
imul
jp
retf
adc
out
mov
retf
cmc
(bad)
aad
std
loop
push
das
and
fcmovnu
out
pop
ins
mov
fadd
push
push
pop
xchg
cmp
rol
loopne
ja
ret
iret
js
(bad)
cld
sbb
adc
fld
add
mov
(bad)
aam
jno
nop
sub
dec
fwait
movs
dec
icebp
sub
push
mov
mov
dec
dec
cmp
mov
push
lea
imul
popa
outs
nop
popf
adc
fs
push
adc
mov
or
adc
push
jbe
shl
cs
test
or
jb
jae
sub
and
mov
jmp
pop
pop
punpcklwd
mov
jno
ret
fstp
imul
call
loope
jne
retf
cmp
inc
(bad)
lods
loopne
sbb
jmp
pop
and
mov
sbb
mov
call
pop
(bad)
push
mov
mov
add
or
add
xchg
sbb
aaa
add
mov
inc
into
mov
jns
int
push
adc
shr
add
sbb
cmp
cld
movs
jge
pusha
push
pop
mov
loope
cmp
jae
jbe
xor
movs
add
jmp
fst
pop
mov
cmp
mov
mov
pusha
cdq
arpl
in
in
call
imul
push
call
popf
or
xchg
and
dec
sbb
mov
jo
lds
dec
cs
mov
push
sub
sub
mov
add
push
rol
push
mov
push
mov
mov
and
push
in
outs
leave
inc
jmp
sbb
dec
xchg
xor
pop
push
inc
inc
or
ins
sbb
adc
sar
inc
or
inc
rol
(bad)
aam
cmps
xchg
mov
cmp
pop
cmps
adc
js
xlat
push
nop
inc
sti
fst
nop
fs
nop
das
into
jmp
sub
push
mov
stc
jnp
jge
sbb
stos
dec
and
inc
pop
mov
sbb
xor
cmp
and
xor
dec
loop
(bad)
and
mov
xchg
enter
int3
repnz
dec
jmp
add
cwde
fisubr
lea
jo
aaa
sub
retf
jge
outs
scas
rcr
or
repnz
lods
add
mov
fnstenv
sub
add
out
cwde
pop
xor
mov
pop
out
fld
retf
inc
je
(bad)
mov
cwde
or
(bad)
mov
ins
fsubrp
xchg
les
pop
hlt
add
mov
mov
bound
jp
pop
shl
xchg
xchg
sbb
xlat
(bad)
pop
jg
pop
retf
call
jo
aam
sub
(bad)
cmp
xor
fcmovu
out
xchg
sub
jge
bound
and
xchg
in
and
adc
scas
adc
pop
(bad)
aam
pop
in
mov
push
lahf
mov
scas
popf
lea
mul
xchg
jmp
mov
push
imul
addr16
icebp
mov
bound
mov
data16
stos
mov
mov
push
aad
mov
mov
lods
inc
inc
les
out
mov
mov
fs
bound
lods
xchg
xor
sbb
lods
repz
push
bound
dec
fcmovbe
sbb
inc
and
pop
mov
fcmovnu
stc
frstor
cmp
cmps
imul
xchg
in
outs
out
inc
cmps
retf
or
(bad)
into
cdq
in
mov
pop
les
imul
mov
cli
jp
dec
pop
aas
xchg
arpl
jne
cli
sub
test
das
jmp
xchg
fisttp
icebp
pop
mov
test
stos
xchg
scas
xor
imul
jp
sub
dec
inc
mov
stos
adc
add
xor
stos
and
movs
inc
sub
test
movs
cmp
xchg
(bad)
scas
push
je
call
jnp
pop
pop
and
neg
xchg
dec
mov
int
inc
inc
adc
dec
adc
add
mov
mov
mov
shl
inc
xor
and
xchg
cs
jmp
sub
inc
adc
ins
fbstp
push
jmp
retf
ret
(bad)
ror
pusha
xchg
mov
sub
or
cmp
enter
jno
aaa
or
jmp
mov
sub
or
je
enter
mov
dec
out
fwait
lods
fdiv
add
adc
aaa
mov
mov
and
push
sub
ja
push
aam
cmp
jne
jno
(bad)
icebp
mov
inc
xor
xor
icebp
mov
das
dec
hlt
scas
retf
loope
jb
push
nop
jle
int3
xchg
fwait
xor
inc
call
mov
test
lea
or
in
bound
(bad)
xor
imul
fnstsw
sbb
lahf
pop
xlat
aaa
ret
mov
pop
inc
pusha
inc
cdq
add
ret
xor
gs
sbb
jecxz
pop
fdiv
not
ret
fdiv
adc
jae
cmps
xchg
mov
(bad)
mov
cmp
or
outs
adc
push
data16
out
sbb
inc
dec
or
rcl
mov
push
sub
test
ret
jne
imul
cmp
jne
addr16
pop
sub
int
pop
call
mov
xchg
es
sub
pop
in
xor
stos
push
rcl
and
(bad)
je
inc
out
pop
add
sbb
movs
sbb
xchg
cmp
in
ins
pushf
inc
add
dec
or
inc
mov
das
gs
test
fistp
ret
push
arpl
jecxz
mov
repnz
nop
shr
or
movs
mov
mov
mov
jno
jecxz
rcr
imul
mov
add
mov
test
out
sbb
push
pop
inc
aad
repz
or
out
aad
dec
cmp
or
out
push
iret
retf
xlat
xchg
xchg
jb
retf
sahf
jmp
dec
repnz
imul
mov
fldenv
sub
and
dec
aas
repnz
or
push
push
test
xlat
and
inc
fsub
cmps
lds
enter
pop
loop
add
sbb
mov
mov
xchg
add
sub
outs
jge
mov
add
inc
add
data16
lock
js
out
cmp
inc
leave
jae
(bad)
jne
mov
mov
mov
and
jae
add
pop
jmp
sub
ret
(bad)
frstor
ins
mov
test
aad
jbe
into
jno
mov
mov
dec
xor
inc
or
cmp
ficomp
dec
fs
aas
push
call
xchg
(bad)
cli
push
xchg
mov
and
jns
xchg
pop
xor
and
call
pop
aad
fst
les
inc
adc
movs
ret
popa
add
mov
test
jecxz
xor
xor
je
sbb
ins
inc
sub
mov
fucom
maskmovq
inc
cld
mov
mov
sbb
pop
jmp
gs
aam
mov
xor
sub
push
and
or
lods
ret
pop
add
xor
push
pop
cmp
es
sub
xchg
ds
cmp
cmp
(bad)
pop
mov
xchg
lahf
into
fst
add
mov
stos
push
inc
loopne
fist
pop
std
stos
jecxz
pop
fdivr
push
int3
lock
xlat
pop
test
bnd
pusha
fisubr
xchg
ins
xor
outs
jo
mov
jns
jmp
das
das
int3
inc
mov
scas
lods
cld
push
icebp
fdivr
pop
fist
lea
or
scas
lock
cmps
das
cmovnp
jbe
fnstenv
outs
mov
cmp
(bad)
pop
jge
call
out
sbb
adc
fnstenv
mov
sub
add
stos
mov
ja
in
retf
inc
aam
cmp
aaa
arpl
push
cmc
cs
jns
sub
mov
xor
int
inc
imul
xchg
lock
imul
jecxz
in
push
jle
cli
jae
data16
int
frstor
(bad)
mov
stos
mov
fist
xor
std
dec
or
push
pop
add
adc
add
test
adc
test
add
push
(bad)
iret
and
cmp
lods
mov
xor
sub
aam
push
test
mov
call
push
ja
aad
mov
pop
out
sub
pop
xor
je
mov
pop
xor
push
out
test
mov
fisttp
mov
xchg
popa
adc
jbe
pop
(bad)
xchg
repz
cli
dec
xchg
jg
mov
mov
inc
das
call
imul
stos
dec
imul
inc
out
xor
pop
(bad)
sub
fwait
sbb
push
ds
hlt
push
push
push
out
out
rcl
pop
ret
jo
add
nop
jp
stos
jge
dec
push
pop
ins
cmp
(bad)
cmp
and
push
ds
shl
cdq
loope
dec
aad
retf
ins
inc
mov
pop
add
dec
jne
sub
push
mov
movs
repnz
test
mov
out
mov
scas
jns
add
xchg
xchg
scas
jae
nop
dec
fstp
fbstp
mov
lea
aam
sahf
test
mov
inc
loopne
int3
push
sbb
dec
popf
aad
mov
movs
push
pop
fbstp
xchg
out
int
fs
add
call
adc
xor
(bad)
xor
gs
in
inc
aam
and
nop
mov
fcomp
in
lods
bound
cmps
leave
movs
lahf
add
inc
inc
mov
or
jl
dec
fnsave
push
imul
mov
sub
and
inc
adc
or
sbb
add
or
lock
adc
pop
inc
cwde
imul
rcr
xchg
cmp
and
dec
imul
(bad)
(bad)
and
adc
fst
sahf
jae
pop
loopne
popa
ja
adc
xor
jge
lea
xor
add
out
xor
sub
or
mov
xchg
xchg
inc
adc
in
jmp
mov
pop
push
into
test
or
dec
rol
xor
dec
scas
xchg
gs
arpl
rcl
arpl
mov
(bad)
fiadd
sbb
mov
adc
sub
cwde
data16
xor
scas
int
or
add
sbb
jbe
jb
fisttp
push
push
shl
cmp
jp
xchg
cmp
mov
dec
(bad)
loopne
sbb
int3
sbb
mov
int
not
sub
push
loop
sbb
or
and
popf
jp
scas
daa
add
les
mov
jmp
sub
xchg
jno
inc
or
fdiv
xor
scas
lock
xor
inc
push
arpl
out
dec
sub
mov
cdq
mov
movs
mov
imul
fnstcw
cmp
push
mov
out
pop
or
jnp
cmp
stos
jmp
js
cmp
mov
in
mov
mov
pop
xor
(bad)
std
xlat
jg
aaa
leave
sbb
rcr
jnp
and
add
jns
add
lods
jne
sti
adc
push
push
dec
xchg
fisubr
lea
cmp
sub
sbb
inc
add
mov
mov
retf
jns
std
push
std
aas
mov
fld
push
ret
in
std
pop
add
xchg
mov
dec
shl
mov
int
sbb
pop
pop
jo
hlt
jb
jmp
jp
xchg
add
mov
movs
cmp
cmp
mov
aas
popf
jg
ja
jae
in
or
and
test
add
test
add
pop
rcl
fimul
push
aad
repz
sbb
mov
jns
mov
jbe
lods
jp
ins
stos
push
stos
add
xchg
sbb
stos
sub
jb
dec
stc
cs
adc
xor
dec
jne
lea
frstor
imul
je
mov
sub
retf
loope
mov
mov
jg
sub
or
adc
rol
ds
in
xor
jge
pop
fsubr
mov
xlat
sbb
clc
ins
fbld
cmps
aaa
pop
daa
sub
outs
stos
int
sbb
stos
pop
popa
mov
add
jno
popa
mov
scas
sub
test
(bad)
cs
data16
movs
mov
add
pop
xor
out
repz
sbb
xor
cld
pop
mov
xchg
lahf
push
mov
loop
cld
ins
xor
jns
dec
out
cmp
xor
inc
jge
push
jecxz
in
test
movs
enter
stos
clc
test
and
jb
inc
pop
ins
sbb
inc
cmps
mov
xchg
pop
dec
jae
ins
stos
retf
dec
and
clc
sub
in
sbb
je
data16
sti
inc
fimul
addr16
dec
push
mov
mov
jno
inc
fiadd
xchg
and
outs
call
jle
jae
push
push
cmp
mov
mov
sbb
call
push
xchg
cmp
mov
pop
cdq
movs
mov
mov
mov
inc
addr16
outs
test
xor
mov
js
ret
sbb
js
fsub
mov
or
jne
aas
dec
jmp
jmp
add
xchg
mov
ror
mov
inc
mov
sub
je
pop
xchg
scas
xor
ins
ins
add
repnz
or
push
ret
test
dec
adc
and
sub
mov
lea
int
dec
pop
dec
shr
nop
outs
jbe
dec
mov
lea
test
inc
jns
jns
push
push
add
xor
mov
mov
dec
ins
push
leave
sbb
xchg
jb
push
sti
test
mov
xchg
cmp
mov
in
cmps
mov
mov
outs
and
not
sbb
xchg
mov
lea
out
in
pop
adc
in
lds
pop
inc
jnp
rcr
cmp
cmc
lock
arpl
ret
mov
dec
xchg
xor
nop
jecxz
add
and
mov
mov
jmp
jne
jnp
fnstenv
cli
adc
fnstcw
push
shr
neg
mov
call
and
dec
fstp
cdq
and
sub
ret
call
aas
gs
jae
sub
mov
xor
rcr
cwde
pop
dec
jae
cmps
jns
enter
mov
sahf
aaa
sbb
inc
or
jnp
xor
cmp
xor
fwait
sub
call
loopne
sbb
jg
lods
mov
cmp
cmp
loope
xchg
pop
fmul
fdivr
loop
loop
cmp
stos
repz
aas
push
dec
inc
sub
or
cmp
imul
mov
dec
jmp
inc
out
ret
sbb
rcr
mov
jne
xor
jp
adc
or
mov
scas
push
jo
and
adc
pushf
inc
mov
mov
inc
sub
icebp
arpl
mov
push
(bad)
jmp
(bad)
mov
mov
or
pop
push
inc
mov
nop
or
pop
mov
(bad)
lahf
imul
movs
lds
inc
push
push
push
int3
and
dec
(bad)
(bad)
jne
(bad)
aad
cmp
xor
dec
push
ret
add
popf
push
pop
stc
dec
call
das
dec
aam
pop
sahf
pop
into
mov
scas
aam
pop
sbb
mov
mov
cwde
xor
jne
add
clc
das
(bad)
cld
xchg
dec
fwait
hlt
jg
repnz
add
ins
sti
and
ss
sar
mov
xchg
aas
arpl
pushf
xchg
push
sub
and
imul
addr16
retf
fwait
fs
xchg
push
xchg
int3
push
(bad)
fstp
(bad)
cmc
inc
and
outs
mov
bound
mov
std
mov
(bad)
pop
std
xlat
daa
inc
and
inc
fcmovnb
adc
test
adc
inc
and
imul
push
inc
retf
cmp
enter
sub
rcl
add
push
popf
adc
inc
or
pop
fcom
rcr
jnp
cli
adc
call
adc
daa
test
dec
in
repnz
pop
mov
sbb
push
mov
push
xor
xchg
unpckhps
test
in
bound
bound
xchg
xor
mov
mov
cmp
ins
out
ja
push
stos
mov
daa
sbb
push
jno
and
mov
fsubr
bnd
inc
ret
or
jb
or
pop
push
test
je
xor
popf
fmul
stos
xor
dec
or
xor
lea
xlat
mov
daa
ret
push
pop
inc
ins
cld
cld
fisubr
ret
loope
sbb
or
sbb
stos
bound
lahf
mov
out
in
cld
push
push
cmp
(bad)
idiv
push
sbb
adc
gs
mov
aaa
pop
ins
inc
mov
xrelease
sub
cmp
push
xchg
xor
iret
mov
sub
fadd
shr
cmp
and
sub
mov
and
lock
add
push
outs
mov
sub
mov
or
mov
fcmovne
adc
push
mov
in
and
pop
or
cmp
xlat
repz
ss
lock
and
inc
ss
fisubr
stos
push
jb
cwde
adc
push
sub
gs
fsubrp
inc
push
pop
sbb
popa
xlat
in
lods
ds
inc
das
jo
loopne
mov
or
inc
dec
xlat
mov
cwde
loope
mov
scas
arpl
ss
lea
les
(bad)
xchg
mov
jecxz
test
cmps
cdq
outs
inc
push
add
cmp
pushf
add
leave
push
sbb
add
add
into
sub
pop
imul
sbb
push
and
cmps
leave
inc
jecxz
std
mov
iret
cmp
je
add
xchg
movs
rcr
inc
pop
add
sub
push
mov
imul
(bad)
fstp
inc
movs
test
pop
inc
cmps
jl
mov
and
push
or
adc
inc
pop
jbe
retf
mov
(bad)
mov
jae
rcr
in
push
mov
lds
add
sbb
in
jle
jae
(bad)
push
stos
xor
inc
mov
test
cs
sub
xchg
add
cmp
mov
push
(bad)
es
mov
in
and
mov
jne
scas
leave
dec
dec
shl
push
test
xor
mov
mov
and
cmp
xchg
xor
mov
jbe
cmp
aaa
aad
scas
push
or
faddp
movs
mov
in
retf
into
xchg
xor
lds
sbb
inc
outs
loopne
push
pop
xchg
pop
aas
(bad)
add
jnp
jae
aam
and
inc
cmp
or
xchg
pop
mov
push
popa
inc
pop
jns
retf
jno
dec
loopne
lock
aaa
mov
fisttp
adc
xchg
sbb
sub
out
jb
inc
shl
add
mov
cs
dec
stc
sti
mov
ins
cmp
inc
cmp
clc
pop
out
fdiv
adc
push
loope
push
sub
or
jnp
sbb
popa
cmc
mov
ret
test
adc
jmp
pop
ins
xlat
ja
dec
jp
mov
jae
out
leave
fiadd
(bad)
call
iret
js
jae
lods
mov
push
sbb
push
add
(bad)
and
adc
das
xor
lods
jecxz
ret
mov
add
out
imul
movhps
cmp
rcr
fwait
jp
pusha
or
mov
dec
pusha
cdq
xchg
aaa
jbe
mov
jb
jo
pushf
jl
cmp
jg
xor
xor
out
daa
xor
sub
cmp
and
cmps
push
ficomp
xchg
sub
dec
outs
outs
shl
lods
push
mov
scas
mov
mov
popa
mov
pop
or
xchg
hlt
iret
jbe
aad
jae
sub
pop
neg
jmp
lods
jp
aaa
cmp
pop
ret
rcr
loopne
xlat
push
and
cmp
retf
nop
jae
out
mov
ins
add
xchg
rcr
outs
pop
adc
lea
movs
imul
xor
cmps
pop
jb
fisttp
jns
(bad)
cmp
cld
mov
cmp
cwde
in
jne
cmp
mov
mov
icebp
pop
push
inc
jecxz
and
call
data16
(bad)
xor
and
pop
(bad)
sahf
jle
arpl
pop
iret
je
(bad)
fisub
daa
add
test
dec
mov
mov
cmp
inc
sub
sub
iret
dec
push
imul
outs
icebp
jns
mov
loope
sahf
pop
js
jns
pop
shl
add
xchg
mov
inc
push
xor
repnz
enter
dec
inc
jb
test
ins
xchg
mov
push
inc
repz
xchg
dec
adc
mov
jmp
ret
cld
inc
repnz
push
data16
jns
or
inc
pop
xor
shl
inc
imul
mov
xchg
out
addr16
int
xlat
sahf
push
(bad)
call
(bad)
add
pop
adc
(bad)
fwait
inc
shl
(bad)
lods
xchg
aad
test
cmps
inc
shl
sub
add
fbstp
mov
mov
push
call
fsubr
call
lods
daa
jo
retf
fcom
cwde
test
sub
jbe
stos
xchg
push
mov
xchg
nop
test
dec
rcl
xchg
xchg
rcl
push
dec
and
mov
js
push
retf
jae
out
mov
test
adc
test
adc
add
add
add
(bad)
and
out
andps
xor
lods
and
test
fisub
mov
ss
sbb
fild
cmp
pop
sar
retf
xor
cs
push
pop
adc
call
ja
lods
xchg
in
pusha
or
push
cwde
pop
cmp
test
mov
cmp
faddp
add
mov
mov
inc
lods
sbb
into
mov
xor
push
cdq
xchg
int3
add
gs
in
sbb
mov
mov
dec
imul
dec
push
imul
jo
lods
inc
dec
ins
jne
inc
retf
fsubr
je
imul
mov
xchg
cmp
or
icebp
push
ret
cmp
inc
mov
pop
adc
xchg
dec
fistp
cmp
jmp
dec
dec
fistp
and
ror
inc
push
(bad)
rol
xor
push
mov
xchg
add
mov
push
sbb
sub
pop
aam
push
mov
mov
mov
les
outs
call
fsubp
pop
xchg
popf
loopne
cmp
stos
lods
bound
ret
outs
mov
(bad)
stos
inc
xor
fcomi
or
aad
mov
sbb
mov
adc
out
ret
inc
stc
xchg
dec
loop
cmc
push
lods
in
mov
inc
lea
fldcw
enter
call
mov
or
daa
dec
in
fwait
dec
add
mov
add
xor
inc
or
mov
ret
pop
pop
pop
imul
inc
pop
pop
imul
shl
pop
mov
xchg
inc
push
ficomp
jnp
adc
push
inc
xchg
or
fild
nop
in
sub
out
cmps
sub
stos
inc
fcmovbe
aam
shl
not
(bad)
repnz
inc
bound
cmp
mov
mov
loop
cmp
xor
cmp
dec
pop
je
in
push
adc
ret
push
cmc
dec
in
and
fisub
sahf
adc
dec
adc
into
pop
xor
in
aaa
dec
sub
enter
cmp
mov
adc
(bad)
(bad)
aaa
inc
xor
lods
xchg
in
cmp
mov
ss
and
jnp
cmp
mov
jmp
and
xchg
add
call
in
pop
movs
sbb
das
mov
sahf
sub
jno
dec
(bad)
iret
sbb
test
pop
not
sub
cmp
jo
movs
cmp
xchg
pop
cld
xchg
jb
xchg
xchg
test
in
sub
lods
lock
ins
dec
arpl
cli
mov
dec
jmp
pop
movs
retf
cmps
pop
stos
cmp
int
pop
mov
jbe
scas
or
stc
hlt
push
popa
je
bound
rcl
fcmove
in
mov
jae
jecxz
gs
xchg
out
ins
push
mov
xchg
mov
or
int3
iret
adc
sbb
fwait
adc
retf
cmps
inc
mov
in
mov
inc
jnp
mov
dec
mov
cmps
and
mov
or
dec
gs
or
jno
mov
mov
pop
ins
jg
jg
mov
push
jae
(bad)
xchg
imul
jecxz
scas
dec
(bad)
xchg
clc
jmp
(bad)
wrmsr
xchg
mov
jge
mov
add
aaa
enter
inc
test
stos
repnz
inc
fistp
(bad)
stc
mov
(bad)
sbb
pop
mov
(bad)
call
jno
pop
pop
lods
or
adc
call
xchg
cmp
push
sub
fst
out
sbb
mov
xor
jg
ja
fisttp
inc
adc
or
or
or
or
or
or
pop
mov
dec
cwde
rcr
pop
sub
ror
mov
fs
pop
imul
push
jo
pop
les
sbb
(bad)
mov
sar
mov
cmp
mov
test
sbb
loope
shr
push
fbld
out
pmullw
xchg
es
repnz
and
pop
jle
leave
inc
shr
aaa
out
jne
lea
or
sub
daa
in
or
repnz
cld
cmps
shl
aaa
mov
test
sbb
lea
jmp
adc
test
xor
clc
adc
pop
fbld
or
gs
(bad)
sub
mov
dec
stc
sbb
movs
inc
pop
pop
aad
pop
dec
call
popa
mov
pop
repz
fs
mov
daa
push
pusha
ficom
mov
jbe
test
test
pop
pop
push
xor
(bad)
push
cmp
cs
sbb
and
xchg
loopne
out
adc
fwait
jne
xchg
imul
mov
ss
idiv
add
pushf
in
lods
inc
out
in
xor
rol
dec
mov
(bad)
cdq
pop
les
cmp
cmp
pop
int3
movs
test
jl
out
or
pop
loop
cwde
pop
adc
dec
sbb
or
idiv
int3
cmp
and
and
test
retf
sbb
sbb
mov
pop
xor
pop
out
shl
fs
repz
(bad)
into
(bad)
imul
lea
inc
jg
sbb
xchg
mov
xchg
cmp
adc
jge
sbb
loopne
jno
mov
cld
scas
retf
dec
stc
pop
xor
test
push
in
cmp
sub
adc
test
mov
fs
stos
mov
mov
xchg
and
sub
shr
mov
and
mov
push
in
jle
jne
inc
lea
adc
sti
dec
push
jns
loope
dec
scas
popa
imul
pop
dec
and
dec
cmp
mov
mov
jge
pop
ins
sub
xchg
cmp
out
in
inc
aas
xchg
stos
stos
xchg
inc
pop
cmp
pop
aaa
add
jno
int
jno
mov
sub
test
js
cmps
int
xor
out
push
or
daa
dec
adc
je
xchg
push
mov
stc
or
(bad)
lock
(bad)
in
adc
push
xor
popf
out
jns
enter
sub
out
xor
mov
sbb
fcmovb
(bad)
mov
ja
rcl
mov
pop
inc
das
outs
mov
jnp
rcr
or
aaa
pop
push
xor
enter
pop
push
adc
xor
jnp
popf
push
jb
out
pop
jo
test
(bad)
(bad)
fst
fcomp
or
out
aam
xchg
test
dec
cmp
call
pop
add
test
fstp
popf
push
fsub
cmp
nop
sbb
std
sub
dec
fdiv
xor
test
repnz
loop
jo
pop
je
adc
push
sub
test
(bad)
icebp
dec
(bad)
aas
loop
lods
sbb
or
xor
out
mov
jmp
ss
and
sbb
ret
pop
mov
dec
enter
outs
dec
shl
fisttp
pop
sbb
jae
mov
test
fs
push
jg
cmp
pop
mov
pop
clc
inc
pop
test
push
mov
(bad)
adc
in
xor
sti
stos
xchg
add
(bad)
in
fiadd
ds
xlat
iret
pushf
in
push
dec
iret
stos
out
aad
cmps
(bad)
jmp
pop
lods
xchg
inc
retf
adc
ins
les
jl
aas
add
sub
mul
in
fdivr
push
push
mov
enter
fwait
adc
lea
sub
mov
and
push
or
add
add
or
or
xor
test
inc
pop
jnp
repz
leave
dec
bound
push
xchg
cli
pop
mov
cdq
xchg
in
jecxz
xchg
xlat
iret
sub
(bad)
pop
cmps
xlat
push
push
push
pop
adc
dec
mov
imul
push
cli
jmp
jg
fs
fidiv
es
shr
sub
jne
scas
test
jge
add
(bad)
mov
inc
jno
pop
ds
cmps
aam
test
mov
inc
lock
pop
push
dec
les
aad
dec
stos
push
cmp
sar
inc
dec
push
inc
les
pop
stc
dec
jae
xchg
(bad)
(bad)
aas
adc
cmp
out
cli
int
mov
mov
jae
jle
cmp
cmp
repz
not
test
loope
or
imul
cmp
sahf
hlt
sar
stc
pop
pop
fsubr
pop
mov
(bad)
addr16
and
mov
cmp
push
cs
loope
arpl
(bad)
in
jp
sti
cmps
push
les
adc
rol
and
fs
ins
not
test
push
inc
ins
out
ja
mov
out
add
fst
dec
test
inc
movs
inc
adc
and
push
push
cmp
ss
je
fnstcw
push
inc
sbb
add
aaa
not
rol
and
push
mov
dec
mov
dec
retf
jns
mov
pushf
pop
das
imul
jl
scas
pop
repz
shl
sbb
cmp
jmp
mov
ins
mov
stos
out
jo
pop
pop
sub
stos
or
add
cmps
mov
in
dec
sub
cmps
ds
or
push
gs
(bad)
xchg
sbb
dec
xor
sub
cmps
call
pop
ins
adc
add
cmp
in
fcomi
or
fiadd
ins
icebp
pop
rol
sbb
sar
and
mov
add
sbb
pop
not
push
test
lea
jbe
inc
loop
adc
dec
mov
sbb
sub
fwait
test
cwde
adc
sub
sbb
push
adc
or
pop
into
xlat
int
xchg
inc
sbb
loop
jne
sub
jecxz
pushf
repz
adc
cs
stos
je
mov
les
cmp
sbb
in
std
rsqrtps
imul
mov
adc
leave
push
adc
adc
sbb
jmp
or
test
sbb
rol
popa
in
sti
sub
shl
repnz
sbb
out
dec
rcr
push
loopne
mov
pop
or
dec
arpl
dec
mov
cmp
jbe
dec
test
push
mov
add
sub
xor
inc
push
cwde
scas
call
or
adc
sub
mov
fbld
dec
sbb
xchg
cmp
inc
or
pop
mov
mov
add
(bad)
in
outs
imul
shr
xor
es
popf
repnz
mov
fdiv
mov
retf
ja
repnz
mov
sub
mov
test
fs
mov
push
mov
adc
outs
cli
and
add
cmp
cmp
pushf
mov
pop
or
pop
jnp
pop
jae
and
xchg
fucomp
syscall
and
lea
and
adc
in
ret
jge
outs
xchg
fisttp
sti
int
test
or
jb
movs
call
ins
mov
sub
shl
jae
loop
inc
inc
inc
retf
scas
je
push
int3
(bad)
or
add
test
sbb
mov
push
fisubr
lea
mov
push
out
dec
dec
xchg
push
pop
push
mov
popf
icebp
inc
pop
jae
frstor
imul
jmp
sbb
mov
mov
arpl
fldenv
js
jle
daa
fsubr
cmps
loope
push
test
les
lods
xor
stc
(bad)
mov
call
xchg
adc
mov
or
dec
jo
inc
xor
mov
mov
ss
out
mov
xchg
and
pop
iret
push
test
inc
(bad)
aaa
push
inc
adc
or
movs
or
adc
inc
pop
or
mov
sub
jl
jmp
or
lods
add
mov
sub
push
xchg
or
push
pop
inc
shl
dec
and
leave
adc
aaa
nop
dec
xchg
pop
sub
dec
movs
mov
inc
pop
mov
or
enter
inc
adc
outs
inc
and
adc
test
stos
test
or
adc
or
xchg
inc
add
xchg
inc
mov
cs
popf
push
push
cli
cmp
mov
jmp
outs
jle
icebp
sbb
loop
inc
xchg
xor
scas
movs
and
in
xchg
movs
xor
daa
sub
xor
leave
add
daa
inc
mov
ss
cmp
xchg
mov
icebp
push
pop
pop
adc
pop
xor
cmp
ror
mov
call
dec
sbb
outs
pop
repnz
test
or
xadd
add
inc
inc
and
or
adc
mov
cs
scas
lds
mov
xor
xlat
fild
jb
adc
movs
scas
retf
add
xchg
ins
je
ss
lea
mov
adc
fdivr
mov
repnz
les
jp
inc
js
push
and
mov
enter
adc
int3
jl
push
mov
sbb
xchg
xor
shl
cmp
inc
fldenv
jle
push
fwait
push
sbb
scas
pop
ror
imul
int
jmp
loop
aaa
pop
lods
movs
retf
fidiv
fld
jmp
in
mov
push
or
lock
arpl
pop
xor
pop
shl
push
jmp
std
cmp
adc
xchg
out
push
out
call
push
cmc
mov
and
clc
ins
mov
and
jb
push
mov
dec
mov
fiadd
push
or
repnz
stos
inc
push
cmp
mov
fs
cmp
call
retf
addr16
movs
pop
add
dec
mov
retf
in
iret
loop
push
and
bound
push
arpl
jb
int
fmul
and
repnz
push
(bad)
retf
int
scas
sbb
xchg
stc
sahf
out
push
inc
nop
push
setge
inc
cs
add
inc
push
movs
test
call
mov
in
enter
push
pop
xor
inc
(bad)
xor
cwde
xchg
ret
jb
mov
sbb
nop
ffree
push
mov
cmp
lea
mov
mov
cmp
fwait
push
add
cmp
xor
dec
mov
pop
sbb
pushf
(bad)
loopne
ins
loop
call
xchg
ins
xor
add
mov
sbb
call
call
stos
xchg
sahf
es
adc
data16
adc
(bad)
ins
mov
retf
iret
call
mov
mov
(bad)
jae
push
test
pop
and
or
jmp
fs
or
das
mov
leave
and
jno
xchg
mov
dec
push
sub
repz
movs
inc
sub
in
push
leave
iret
loop
or
jae
loop
imul
jmp
in
xchg
push
pushf
not
scas
retf
pop
inc
jne
scas
arpl
mov
inc
sub
mov
scas
fistp
test
mov
mov
ja
push
stos
in
imul
push
ins
in
and
sbb
mov
in
lds
aas
cmc
sbb
stos
dec
dec
in
fs
xor
mov
call
addr16
imul
adc
push
mov
dec
jae
repz
or
mov
mov
push
repnz
mov
pop
pop
or
inc
fistp
std
sbb
aam
or
mov
xlat
mov
inc
pop
dec
push
mov
add
adc
xor
ret
and
fst
pop
jb
mov
retf
xor
sbb
cdq
xchg
push
mov
jb
outs
mov
ja
mov
cdq
sbb
je
dec
mov
mov
inc
rcl
fsubr
mov
rcl
dec
xchg
or
or
cmps
gs
pusha
mov
adc
jb
or
xor
out
dec
call
je
cld
sub
or
(bad)
sti
lahf
nop
push
and
jo
jg
fadd
fisttp
pop
mov
xchg
jecxz
test
js
nop
sahf
dec
imul
push
mov
push
push
cmp
push
inc
sub
test
(bad)
add
mov
in
pop
xchg
sti
repnz
inc
test
mov
sbb
into
push
imul
jb
test
jmp
frstor
sbb
fs
add
push
inc
push
xchg
cmp
leave
icebp
es
push
dec
jo
ret
aam
jg
ja
loop
inc
pop
add
popa
sbb
sbb
(bad)
cs
inc
in
add
add
jns
in
cmc
and
push
mov
jae
(bad)
pop
push
cwde
(bad)
pop
ret
call
les
sub
fist
repnz
inc
and
dec
std
push
cmp
out
lea
pop
xchg
out
outs
ja
adc
ror
lds
pop
sub
xor
and
push
xchg
(bad)
cmp
adc
mov
push
aaa
push
lds
jno
es
test
cmp
xchg
movs
pop
pop
call
jb
push
sub
push
push
and
inc
inc
iret
push
ja
lods
sub
mov
and
mov
sti
adc
(bad)
rcr
ret
imul
inc
fldenv
xor
push
lahf
jne
xlat
clc
test
nop
cmp
sahf
and
xor
pop
sub
rol
inc
mov
aaa
fcmovb
je
cmp
push
xchg
xor
mov
add
lods
jbe
inc
jo
sahf
push
out
cmp
inc
cmps
jmp
popf
adc
lods
arpl
imul
mov
xor
lahf
and
xchg
mov
or
mov
test
sar
shl
jae
sub
dec
rcr
sub
lods
test
lahf
mov
sub
cmp
stc
call
or
movs
cmp
cwde
pop
and
cmps
mov
lods
cdq
mov
int3
inc
out
mov
mov
mov
loopne
dec
xor
popa
jnp
in
stos
and
in
sbb
mov
mov
xor
jae
jns
out
in
call
sub
mov
test
xchg
push
neg
cwde
stos
imul
mov
into
mov
lods
sub
pop
mov
(bad)
mov
adc
shl
nop
cmp
fdivr
push
sbb
ins
mov
xchg
or
retf
bound
inc
sbb
adc
rcr
xchg
sub
inc
jnp
out
loop
lock
arpl
loop
retf
push
imul
out
pop
enter
dec
das
inc
jo
or
cmc
push
out
mov
xor
daa
ins
std
sub
pcmpgtw
mov
call
sub
mov
jnp
cdq
mov
jne
dec
sub
dec
lds
out
enter
fldenv
sub
sahf
dec
or
(bad)
int
cmp
leave
ds
fwait
jmp
in
fstp
sti
cmp
pop
mov
arpl
shl
mov
mov
mov
push
sub
lods
mov
push
mov
loop
into
and
imul
mov
push
dec
mov
mov
or
retf
(bad)
or
dec
xchg
mov
ss
shl
push
pop
sub
sub
call
int3
dec
adc
sahf
pop
les
data16
call
cmps
xor
xor
out
sub
in
sbb
je
mov
jae
call
lds
fadd
pop
sahf
shl
mov
inc
out
imul
xchg
es
cmp
mov
ins
mov
ficom
mov
movd
repz
jmp
or
sub
movs
dec
imul
mov
leave
mov
adc
ja
dec
push
in
inc
inc
mov
int
and
push
sub
cmp
inc
pop
and
and
or
or
inc
adc
adc
aam
sbb
cmp
sub
mov
xchg
test
push
inc
aad
or
pop
adc
dec
repz
(bad)
rol
cld
pop
dec
sti
cs
dec
rol
mov
mov
pop
in
or
jp
sbb
and
aas
push
dec
mov
(bad)
xchg
mov
ds
and
push
in
int3
mov
scas
xchg
pop
push
jae
pop
sub
mov
out
xor
cdq
(bad)
mov
xor
mov
xchg
(bad)
jb
jle
jo
cld
lods
or
mov
aaa
push
loope
lock
aam
aam
nop
ret
popa
repz
sub
call
js
int
mov
dec
sub
fild
fst
cs
jno
clc
xchg
mov
(bad)
inc
in
aad
mov
test
push
test
in
fld
adc
push
in
mov
cmp
mov
aad
cli
jmp
add
push
add
int
xchg
fistp
sbb
mov
shl
(bad)
xchg
add
xlat
cmp
dec
fsubr
repz
sub
pop
add
int
add
pushf
sub
jo
xchg
pop
call
xor
cdq
nop
xor
je
pushf
xor
retf
into
fmul
adc
mov
push
xchg
inc
ja
jmp
(bad)
mov
mov
in
(bad)
aam
xchg
add
dec
retf
out
mov
stos
rcl
out
sbb
cli
test
std
inc
mov
fs
mov
cld
jp
or
scas
fild
(bad)
sub
arpl
repz
clc
and
add
pusha
(bad)
into
mov
jb
cmp
or
movs
call
sbb
scas
outs
in
jne
or
(bad)
pop
loop
inc
pop
dec
xchg
dec
dec
xor
xor
loope
sub
jne
xchg
pop
jbe
(bad)
popf
jp
dec
les
dec
adc
ss
jo
(bad)
dec
outs
pusha
dec
nop
aam
ins
xor
rcr
mov
ror
sbb
enter
add
pop
stos
push
dec
xor
mov
inc
pop
dec
sbb
stos
gs
fcomp
loop
bound
mov
sub
(bad)
sbb
add
mov
jp
data16
fdivr
cmps
test
mov
rol
push
frstor
mov
push
dec
in
pop
and
loopne
mov
imul
cmp
xchg
aaa
push
nop
pop
mov
dec
enter
sub
repnz
mov
js
mov
mov
push
mov
push
jge
js
push
sbb
xor
ret
int3
sub
ret
jbe
or
(bad)
or
xor
cld
ret
outs
mov
ja
sbb
and
pop
test
adc
sbb
sbb
in
(bad)
and
das
mov
(bad)
(bad)
mov
and
jae
div
cmp
add
push
add
jb
pop
or
(bad)
add
in
add
sub
adc
(bad)
mov
xor
and
mov
add
push
cmps
jmp
inc
test
lods
fldenv
or
push
add
nop
push
push
imul
test
jne
outs
jecxz
rol
ins
sub
jnp
adc
lock
push
sbb
cmp
cmp
cmps
enter
pop
push
push
in
or
mov
inc
xor
jae
add
or
arpl
pushf
shr
cmp
pop
pop
out
inc
add
sahf
jmp
mov
push
xchg
(bad)
sbb
scas
fwait
sub
iret
test
fwait
sahf
push
sub
movs
xchg
dec
(bad)
ds
jmp
in
pop
pop
cmp
test
or
arpl
and
adc
add
mov
sub
in
outs
sub
xchg
inc
or
enter
ss
xor
stc
inc
push
in
pop
push
sahf
push
rcr
cwde
pop
sar
dec
jmp
pop
cmp
stc
sub
or
sbb
mov
pop
in
rol
inc
adc
pop
fist
adc
cmps
aaa
je
xchg
(bad)
push
sahf
fstp
adc
hlt
mov
int3
and
lods
nop
call
pop
xchg
or
jle
sub
ss
mov
movs
jg
arpl
int
push
aaa
cli
stos
cwde
outs
aas
mov
inc
adc
sti
shr
iret
out
test
inc
hlt
arpl
sar
mov
jno
sub
popf
xor
(bad)
(bad)
test
and
stc
enter
ss
fisub
inc
sbb
mov
pop
dec
out
addr16
cdq
jg
pop
inc
idiv
ud2
push
(bad)
adc
jne
dec
sub
outs
push
lahf
les
mov
lahf
mov
adc
outs
stc
(bad)
hlt
dec
sbb
and
in
inc
enter
(bad)
bound
jg
(bad)
inc
sub
and
dec
xchg
gs
jns
sbb
adc
scas
in
cmc
inc
in
ins
and
jg
add
jnp
in
cmp
sar
dec
pop
sbb
bsf
dec
repz
jae
sbb
xchg
inc
push
mov
sti
lods
cmc
and
add
mov
popf
mov
lods
fiadd
mov
fsub
xor
aaa
lahf
aas
(bad)
mov
adc
loope
scas
out
fidivr
xor
pop
outs
sub
out
(bad)
inc
sbb
daa
ss
mov
xchg
sub
(bad)
push
into
push
push
mov
xchg
adc
and
mov
inc
and
fldenv
call
pop
icebp
sbb
not
fxch
jae
inc
mov
jmp
shl
dec
sbb
cli
mov
add
stos
push
popf
out
dec
jnp
bound
das
cmp
out
bound
or
cmove
sub
and
pusha
fnstcw
adc
call
je
neg
loope
test
xchg
xor
add
pop
push
lods
dec
and
sbb
scas
mov
mov
popa
mov
jnp
push
out
test
loop
pop
shl
lds
fisttp
scas
btr
fmul
push
jne
xchg
fdiv
push
out
add
rcr
dec
shl
jmp
mov
sbb
loope
cmp
dec
or
(bad)
in
mov
cmps
xor
(bad)
and
or
shl
pushf
inc
ins
retf
sbb
xor
or
ror
clc
sub
imul
or
adc
and
add
xchg
pop
mov
cs
mov
jg
mov
in
(bad)
cmp
out
add
sti
add
xchg
sbb
sub
xchg
or
scas
or
rol
out
in
imul
or
scas
pcmpeqb
aam
xor
out
jg
or
mov
pop
and
push
ds
mov
gs
and
add
push
cmps
xchg
adc
jnp
cmp
sbb
pop
test
sub
add
add
dec
inc
hlt
aas
aad
iret
push
lods
xor
idiv
loope
std
aam
movs
jns
or
dec
jge
pop
mov
xor
mov
adc
pop
inc
dec
xor
lds
xchg
sbb
dec
rol
mul
outs
je
mov
mov
xor
dec
push
pop
jmp
adc
pop
out
mov
rcr
aad
rol
inc
xchg
sub
push
jmp
xchg
jbe
ror
sti
and
mov
js
stos
adc
mov
call
xor
dec
test
xchg
imul
mov
or
movs
pop
and
add
inc
fs
xchg
(bad)
int
test
adc
mov
movs
inc
sbb
push
or
mov
sbb
mov
aas
xor
and
int
pop
jno
inc
idiv
je
and
repnz
jnp
cmps
mov
fs
(bad)
retf
sbb
aaa
xor
out
fwait
dec
idiv
pop
sahf
push
lods
add
out
outs
push
repnz
xor
pop
sub
out
push
cli
popf
aad
cld
out
mov
and
mov
rcr
stos
mov
mov
push
inc
dec
outs
out
int
dec
out
scas
mov
push
enter
nop
xchg
cwde
adc
mov
call
mov
push
mov
gs
mov
inc
lds
pop
(bad)
fild
inc
inc
and
add
inc
push
jbe
gs
jmp
inc
pop
icebp
bound
into
ins
int3
gs
fsubr
jnp
xor
add
cmp
mov
and
mov
pop
xor
lock
push
cwde
push
rcl
fcomp
adc
pop
adc
dec
and
fsubr
in
sub
inc
add
mov
xor
adc
out
adc
nop
jmp
imul
mov
aaa
jbe
mov
jnp
sahf
ret
jns
fwait
lods
repz
inc
inc
leave
pop
jmp
add
mov
dec
pushf
xchg
xchg
pop
ins
ss
push
cmp
pushf
xchg
test
mov
out
gs
cmp
fwait
xor
fwait
loop
in
mov
cmp
xor
jne
int3
xor
push
dec
leave
sub
rol
pop
pop
test
adc
(bad)
test
pop
sbb
outs
imul
fcom
lods
jl
aaa
adc
pop
dec
aas
aad
ret
sub
outs
lahf
bound
jmp
push
aas
push
mov
inc
adc
pop
in
(bad)
and
sbb
in
fucom
call
int3
or
iret
push
mov
rcl
pop
or
push
call
loope
push
cwde
test
push
and
pop
retf
cmp
leave
xor
fwait
movs
in
xchg
xor
and
cmps
(bad)
iret
loopne
cmp
dec
inc
lahf
dec
mov
mov
add
icebp
dec
test
push
shl
ins
mov
test
and
test
and
xchg
inc
aaa
mov
sub
scas
or
fist
xor
(bad)
cs
idiv
fbld
cmp
sahf
enter
popa
scas
ja
push
fstp
sbb
or
jle
pop
aam
out
imul
adc
stc
arpl
cdq
(bad)
xchg
mov
push
lea
sti
test
sti
fcmovb
shl
cmp
mov
xchg
in
and
popa
scas
mov
inc
sbb
int
cli
ret
enter
inc
xchg
outs
cmp
js
je
jnp
fidivr
add
jae
sub
idiv
sar
call
cwde
and
shr
lods
inc
stos
les
sti
into
repz
sbb
in
jae
jb
sub
fldpi
jmp
sbb
clc
fs
outs
xor
dec
xor
icebp
add
mov
push
mov
repnz
push
loope
pushf
inc
add
mov
lea
jp
test
pop
in
imul
jg
cli
lahf
call
fdiv
pop
cmp
push
jg
dec
outs
jle
and
ret
xor
pop
mov
adc
outs
fidivr
sar
inc
sub
vmread
and
pusha
and
inc
(bad)
xor
mov
or
xchg
push
not
stos
lods
push
inc
fidivr
js
pop
mov
xchg
xchg
jae
out
mov
jno
mov
call
retf
mov
arpl
addr16
adc
repz
xchg
add
xor
pop
ficom
nop
in
or
stos
jno
sbb
push
and
inc
and
in
push
out
loope
leave
or
dec
(bad)
rcr
mov
mov
rcr
xor
and
ja
cmp
enter
dec
and
aaa
adc
cld
aas
inc
jmp
xor
push
and
sbb
aam
sub
mov
fcomp
iret
pop
cmp
pop
cmp
pop
xchg
shl
stos
out
jno
pusha
es
push
mov
or
push
dec
call
cmps
ret
pop
mov
add
mov
outs
data16
mov
not
mov
mov
ret
out
mov
cmp
pop
pushf
out
shl
pop
mov
inc
mov
lea
fadd
arpl
call
jl
push
aam
retf
les
cmp
fwait
sbb
jnp
jno
imul
mov
mov
add
call
add
pop
jp
mov
mov
dec
pop
push
add
icebp
push
mov
sbb
xor
sbb
(bad)
mov
xchg
(bad)
aam
aam
xchg
sub
(bad)
fdiv
jbe
jle
lds
adc
pop
lds
adc
adc
imul
inc
in
pop
or
int
or
cmp
rol
cdq
cmps
sti
and
push
jo
cmp
popa
xchg
fadd
dec
xlat
mov
add
mov
xor
mov
test
fmul
loope
sti
pop
mov
sub
pop
in
jno
adc
loopne
int
pop
inc
mov
pushf
mov
mov
mov
test
pop
inc
or
enter
(bad)
icebp
stos
sub
popa
jl
pop
arpl
mov
hlt
pop
inc
cmp
sbb
addr16
in
ins
daa
inc
dec
scas
or
inc
add
scas
test
or
adc
push
in
adc
dec
push
dec
and
pop
push
popa
sbb
in
hlt
mov
shl
mov
pop
movs
adc
inc
movs
scas
sbb
out
jmp
xchg
ds
pop
push
sti
adc
(bad)
idiv
sub
inc
xor
and
div
xchg
sbb
or
adc
hlt
repnz
xor
addr16
xchg
cmp
cmp
sar
sbb
loope
gs
outs
cld
daa
sub
add
xadd
and
jno
imul
dec
jge
mov
push
cli
jno
mov
inc
dec
xchg
jns
loopne
out
adc
sub
imul
mov
imul
pop
ret
jne
sbb
into
ja
dec
sub
mov
cmp
mov
movs
hlt
push
pop
in
add
push
xor
test
mov
aam
outs
jnp
(bad)
cld
adc
shl
aad
mov
push
push
test
fcomp
sub
jae
shl
sbb
jae
daa
push
adc
repz
retf
ret
(bad)
xor
aad
jo
mov
jp
sub
mov
adc
repnz
test
pop
mov
test
xor
rol
scas
jbe
dec
dec
xchg
in
inc
(bad)
out
out
cmp
fstp
loopne
not
inc
sub
in
aam
push
fst
push
adc
xchg
rol
imul
adc
in
adc
fistp
adc
nop
xchg
(bad)
add
mov
fldcw
sbb
ins
aad
out
mov
push
sar
int
leave
add
pop
in
les
outs
call
add
retf
jne
mov
push
shl
fcom
ror
(bad)
lods
addr16
jmp
(bad)
loop
fmul
adc
fimul
out
and
outs
popf
(bad)
call
addr16
sub
ja
ret
std
push
adc
adc
(bad)
fnstcw
loop
cmp
sub
or
jne
cmp
mov
and
test
add
inc
sub
mov
jmp
or
fldenv
push
dec
cmp
lahf
adc
(bad)
outs
aaa
pop
sub
jmp
lea
fsubr
xchg
loope
clc
test
inc
dec
sub
popa
repz
adc
mov
es
adc
sub
out
call
pop
pop
jl
aad
shl
fdivr
pushf
push
dec
jg
jg
pop
cmp
in
ror
sub
or
stos
xor
push
(bad)
cmp
sub
in
fimul
cmp
popf
xchg
fstp
ret
outs
in
inc
clc
mov
fcomp
test
cld
mov
cmps
pop
sub
xchg
mov
leave
dec
ficomp
das
fnstcw
aad
in
xlat
adc
sti
sub
jo
into
and
rcr
mov
mov
std
xchg
sti
or
mov
stos
loope
pop
jnp
and
cs
loopne
in
sub
mov
or
nop
shl
push
and
daa
outs
sar
cdq
(bad)
dec
fwait
add
add
lods
movs
popf
jecxz
fs
dec
fiadd
adc
xabort
push
int
pushf
repnz
ins
jle
and
add
leave
repz
cmp
cmp
popf
mov
mov
imul
inc
in
arpl
div
out
(bad)
push
dec
sub
les
dec
pop
repz
jmp
or
pop
add
movs
push
sahf
jecxz
out
lds
popf
int
sub
hlt
sub
movs
mov
jmp
push
push
xor
fs
inc
popf
lods
pop
std
data16
fwait
std
into
aaa
sbb
in
and
jns
outs
push
les
and
push
mov
mov
mov
pop
mov
mov
xlat
add
cmp
xlat
push
inc
push
sbb
sti
js
dec
mov
popf
dec
inc
test
mov
push
rcr
cmp
sbb
(bad)
(bad)
inc
addr16
js
pop
ins
or
(bad)
movs
pop
sub
xchg
pop
or
sub
or
fld
sub
iret
arpl
push
test
or
pop
cmps
popf
out
mov
mov
imul
adc
into
outs
inc
inc
xchg
and
rol
and
outs
repnz
fdivr
pop
imul
sub
fstp
dec
out
cmp
rcr
inc
sbb
mov
xchg
dec
in
lahf
imul
dec
push
outs
les
call
scas
push
sahf
(bad)
ja
outs
add
inc
push
mov
outs
shl
imul
mov
lds
and
test
pop
xchg
ret
inc
call
jmp
push
ret
xor
inc
jnp
cs
push
loope
jecxz
mov
es
scas
cmc
xchg
adc
int
mov
shl
mov
push
daa
add
sub
aad
jmp
inc
popa
sbb
adc
(bad)
and
lea
inc
(bad)
push
inc
or
pusha
sbb
test
adc
or
mov
xchg
push
pushf
cmp
ins
loopne
mov
loope
jmp
lds
sbb
daa
mov
pusha
pop
mov
jae
scas
leave
xor
sub
sub
jmp
and
jmp
rol
adc
and
cwde
(bad)
push
popf
icebp
jne
btc
das
neg
push
pop
sar
push
cmc
sbb
push
jno
int3
and
jns
jo
(bad)
lock
dec
pop
jnp
loope
je
outs
test
adc
dec
sub
(bad)
adc
adc
les
fstp
sbb
retf
movs
cmps
jle
pop
pop
inc
dec
test
pop
lods
xor
cs
xchg
xlat
leave
or
xchg
ds
adc
les
push
shl
pop
push
pop
outs
xor
mov
xchg
ret
mov
imul
pop
mov
jp
or
std
cmp
xlat
sbb
mov
jne
lahf
adc
pop
xor
mov
(bad)
out
jo
(bad)
pushf
retf
jl
loope
lea
or
push
aad
ret
(bad)
aaa
pop
xlat
imul
adc
sar
test
push
mov
xor
jg
lahf
adc
xor
mov
dec
inc
scas
mov
mov
sahf
dec
pop
jmp
xchg
mov
jo
ins
or
cmp
hlt
mov
sub
mov
pop
dec
and
mov
push
out
jle
fwait
jns
push
add
outs
adc
cs
sub
dec
xor
out
ror
push
sub
mov
dec
dec
shl
sar
stos
push
xchg
dec
loopne
push
(bad)
int3
sbb
shl
outs
shl
cmp
test
mov
les
out
xchg
scas
and
jmp
out
jo
movs
jle
dec
adc
rcl
cmp
pop
in
push
data16
(bad)
xchg
xor
adc
or
dec
xchg
(bad)
and
outs
cmps
fnstenv
mov
cmp
cmp
sub
fisttp
xchg
xor
mov
mov
mov
inc
enter
fadd
adc
mov
dec
lahf
adc
nop
cs
xchg
(bad)
pop
cmp
cwde
aad
aam
jae
sub
sbb
sub
pop
outs
mov
mov
xchg
jb
or
retf
jmp
inc
rcl
xor
retf
stos
and
add
jbe
and
xor
add
push
xchg
mov
and
and
xchg
push
sti
lods
idiv
js
pop
and
jne
test
icebp
test
daa
pop
cmp
xor
inc
mov
mov
xchg
cmp
popf
fnstenv
iret
icebp
push
loopne
je
ja
cmp
fisttp
push
out
xor
in
sub
mov
inc
jno
fld
xor
sub
in
xchg
shr
fstp
stos
sub
inc
fsub
xor
cmps
cs
mov
jno
mov
out
aam
sbb
pop
cmp
mov
add
das
ja
jmp
add
aad
mov
mov
xchg
push
stos
xchg
push
ins
or
sbb
dec
mov
repz
mov
pop
fsubr
adc
test
adc
xchg
inc
adc
dec
lods
add
outs
out
add
loop
or
lea
arpl
add
call
inc
add
data16
mov
fcmovne
icebp
or
cdq
adc
out
xor
ss
(bad)
dec
test
cs
adc
lahf
out
dec
push
pop
data16
cmp
adc
jg
jmp
mov
retf
xor
sbb
mov
ss
adc
jb
xor
xchg
fdiv
adc
pop
pop
adc
or
sub
loopne
mov
sub
(bad)
sub
ret
and
fimul
imul
call
mov
test
pushf
in
out
cld
push
scas
jb
xchg
dec
outs
xchg
or
mov
loope
ret
mov
xlat
xor
inc
push
aaa
or
in
scas
xor
xchg
div
push
rcl
or
or
push
inc
jmp
cld
in
inc
ss
outs
sub
ins
pop
sbb
pop
inc
ds
add
mov
pop
clc
jno
add
mov
idiv
and
les
enter
movs
sti
dec
and
mov
and
adc
or
jl
in
pop
xchg
mul
rcr
test
pop
and
cmp
fucomp
push
fsub
je
sub
xchg
or
adc
adc
movs
es
shl
aad
mov
fcomi
inc
add
and
div
or
jo
jb
ja
or
popa
or
and
mov
in
loope
fsub
inc
mov
mov
jge
in
xor
mov
mov
pusha
(bad)
fwait
adc
bound
arpl
int3
cmp
jmp
mov
ret
jnp
mov
dec
pop
mul
dec
push
sbb
inc
out
dec
cmp
mov
push
fsub
xor
sub
out
fbld
ror
sub
xchg
aam
lahf
or
test
popa
aam
push
push
sbb
fsubr
adc
pop
hlt
es
mov
lods
bound
or
add
inc
outs
aad
gs
ja
fstp
adc
test
mov
mov
cmp
or
xlat
or
xchg
addr16
in
lahf
dec
add
leave
add
out
shl
adc
int
pop
cmp
gs
pop
lods
push
lock
jne
mov
outs
std
push
mov
sbb
xor
scas
pop
add
pop
lods
fild
ss
pusha
mov
push
jne
inc
int3
push
into
cmps
cmp
pop
cwde
mov
ja
aad
(bad)
sub
mov
fwait
popa
cmp
arpl
pop
pop
das
add
push
leave
jno
mov
cmp
jl
in
lock
sbb
bound
sub
outs
mov
pop
pop
sbb
inc
retf
mov
stc
sub
xchg
inc
xor
add
xchg
and
sbb
stos
inc
mov
push
fdiv
call
fisubr
and
push
es
inc
and
add
mov
xchg
adc
push
inc
xor
pop
xlat
cmp
dec
sbb
cmp
push
push
mov
pop
gs
mov
pusha
jmp
fsubr
fistp
(bad)
hlt
mov
sbb
sahf
inc
cmp
mov
out
scas
pop
mov
cwde
xor
stc
sub
pop
cmp
cwde
mov
repz
es
stos
mov
push
pushf
pop
xchg
adc
mov
cmp
or
call
sbb
push
fs
pop
sbb
push
loop
fdivr
cmps
dec
je
call
ins
das
adc
ins
sbb
pop
mov
out
jae
xor
and
mov
xchg
xor
push
ins
mov
lock
sbb
(bad)
xchg
mov
xor
hlt
je
sub
test
pop
addr16
movs
loope
jle
mov
(bad)
xor
add
xor
mov
inc
imul
lods
out
jmp
retf
into
mov
shl
push
outs
mov
mov
mov
and
mov
sbb
push
inc
outs
xor
imul
ror
mov
in
xor
or
movs
test
add
cwde
dec
data16
cmp
imul
jbe
cmp
and
mov
push
pop
or
mov
in
sbb
les
cmp
ret
mov
scas
dec
shl
xor
jne
mov
or
pop
(bad)
xchg
ja
push
cmps
out
dec
int3
movs
sbb
cwde
bnd
iret
imul
sbb
arpl
test
mov
jns
aad
add
mov
mov
add
shl
into
out
xor
(bad)
int
icebp
dec
add
ins
ja
xchg
cmp
gs
js
and
adc
add
popa
push
pop
std
push
adc
rol
jge
jns
lods
mov
(bad)
dec
test
cmps
in
dec
add
or
scas
ss
sahf
xor
pop
xchg
and
or
rcl
in
mov
out
fist
xchg
sub
dec
jo
fsubrp
imul
fwait
sbb
cmp
test
leave
push
pop
sti
outs
shl
mov
cmp
add
push
call
xchg
xor
aam
xchg
or
in
xchg
in
sub
out
sbb
or
cmps
fisubr
or
out
shr
xor
pop
stos
test
pop
sub
mov
dec
sub
sbb
retf
sub
es
push
shl
xchg
(bad)
jne
fmul
jno
in
xor
inc
jnp
pusha
dec
push
push
xchg
(bad)
push
inc
sbb
test
outs
mov
dec
push
sub
xor
into
mov
inc
add
or
or
or
or
or
inc
fs
lea
xchg
adc
outs
jnp
mov
sbb
sbb
jnp
(bad)
jns
inc
xlat
popa
data16
jge
pop
inc
(bad)
or
push
xchg
retf
add
xchg
icebp
pop
loop
dec
pop
cmp
cmps
jbe
inc
fwait
adc
ror
and
inc
sub
inc
lock
xlat
dec
sub
xor
mov
add
mov
ret
jo
daa
jle
xchg
aad
inc
dec
dec
fcom
loope
mov
xchg
int3
js
fs
int
(bad)
jae
scas
xchg
int3
jo
cdq
adc
lock
add
aas
or
shr
je
cli
mov
jge
cmp
mov
pop
mov
imul
pop
push
bound
pusha
out
out
pop
sub
xchg
aam
mov
add
retf
popfw
adc
add
dec
jae
pop
mov
mov
sub
std
add
add
leave
or
jne
push
jmp
pop
loopne
sbb
dec
rcr
es
or
cbw
dec
jle
xchg
inc
pop
in
add
xchg
adc
mov
mov
dec
and
xchg
rcr
pop
sbb
icebp
fwait
pop
mov
inc
cmp
xor
xchg
int
cmp
xchg
jp
xor
or
je
push
inc
test
push
jmp
sub
repz
add
sbb
cwde
adc
cdq
sbb
mov
add
pop
inc
test
inc
dec
test
mov
sbb
jne
lods
xchg
inc
adc
sbb
lods
or
rol
add
adc
out
mov
push
cmp
aaa
pop
(bad)
es
xor
ror
jl
jo
sub
dec
ss
stos
in
call
mov
ins
xor
shl
xor
mov
call
test
shr
and
xchg
inc
(bad)
xchg
dec
loop
mov
xlat
push
mov
scas
and
hlt
int
shl
adc
pop
mov
test
fcmovnu
movs
(bad)
mov
mov
sti
stos
shl
test
call
aaa
and
(bad)
out
lods
mov
xor
push
xchg
mov
mov
xor
or
sti
ret
out
stos
(bad)
sub
cmp
xchg
mov
push
bound
cmps
or
dec
pushf
pop
mov
loope
cmp
adc
fadd
lds
inc
push
pop
and
mov
pop
pusha
ins
and
mov
fld
or
jae
inc
popf
dec
sub
mov
repz
cmp
xchg
xor
jp
cli
fsubr
xchg
sbb
mov
mov
fs
(bad)
xlat
push
and
and
fdivr
cmp
xchg
mov
push
dec
inc
pop
into
sti
jne
call
push
rcl
pop
mov
les
or
mov
cdq
xchg
in
(bad)
(bad)
and
add
fldcw
sub
pop
test
mov
cwde
popa
test
cmp
(bad)
add
imul
sbb
arpl
cmp
xor
push
push
int
pop
inc
dec
pop
inc
test
dec
dec
adc
pusha
das
arpl
mov
adc
sub
mov
rol
add
ss
arpl
int3
cmp
jb
enter
add
fstp
or
(bad)
mov
out
les
(bad)
jmp
xlat
push
jecxz
xchg
out
ret
jmp
test
retf
jmp
ss
inc
xor
fidiv
(bad)
sbb
stos
xor
cmp
retf
sahf
and
cdq
test
jge
mov
xlat
sar
add
jg
popa
repnz
iret
or
adc
(bad)
in
cmp
or
inc
dec
push
mov
int
push
adc
sbb
retf
daa
mov
fadd
xchg
sub
xor
dec
inc
dec
clc
movs
jae
bound
loopne
jnp
loope
cvtdq2ps
aam
push
(bad)
mov
mov
cmc
outs
push
jae
push
mov
lds
cmp
lahf
or
adc
call
or
cmp
fimul
jl
cwde
lea
pop
jb
xor
jge
inc
gs
dec
jbe
pop
mov
test
cmp
shl
jno
out
fwait
and
xchg
add
les
xor
inc
mov
(bad)
mov
inc
xor
adc
into
mov
sahf
sbb
adc
iret
stos
ins
cmp
inc
adc
ror
inc
mov
or
nop
cwde
repz
adc
mov
data16
fadd
pop
inc
and
or
ins
mov
cmp
xchg
out
pushf
shl
xlat
lock
ins
iret
int3
in
xchg
jns
add
push
inc
and
(bad)
push
sbb
jecxz
dec
out
or
xor
mov
sub
push
jmp
mov
or
xor
ins
adc
mov
cs
inc
inc
adc
jae
call
or
test
adc
or
lods
push
dec
adc
dec
or
add
je
imul
or
lds
mov
nop
test
inc
sahf
lods
shl
xor
es
adc
xchg
adc
mov
dec
ret
or
push
stos
sbb
test
imul
aam
ins
inc
frstor
inc
clc
cmp
pop
sub
adc
jns
retf
or
bound
adc
cmp
lds
ss
adc
(bad)
shl
bound
popa
fsub
adc
mov
cmps
ret
movs
adc
jne
and
iret
imul
mov
jnp
loope
push
pop
push
mov
int
push
xchg
int
pop
cmps
pusha
adc
xchg
stos
adc
test
pop
xor
mov
mov
and
mov
arpl
pop
jns
data16
enter
xor
out
xchg
sbb
test
aaa
lea
sub
(bad)
cli
cmp
and
mov
in
pop
xchg
adc
aas
inc
dec
jno
sti
int
in
sub
movs
retf
inc
das
mov
imul
(bad)
dec
dec
inc
xchg
call
cmp
and
mov
leave
or
mov
sahf
retf
or
sub
mov
fadd
dec
mov
fs
cmp
data16
dec
outs
fcomp
push
and
pop
rcr
push
mov
fwait
sbb
xchg
xor
xor
cmp
loopne
pop
call
fst
add
fs
jae
addr16
xor
imul
add
outs
je
gs
je
add
add
add
add
add
add
add
add
add
add
(bad)
inc
sbb
add
add
and
add
inc
sbb
add
add
add
inc
sbb
add
add
adc
add
outs
cmp
imul
jb
xor
add
add
add
or
add
add
add
or
or
pop
add
or
push
or
add
xor
add
add
add
pop
inc
jecxz
add
inc
inc
add
add
add
add
push
push
pop
inc
jecxz
add
push
aad
inc
add
add
push
push
and
jmp
pop
jecxz
mov
push
aad
inc
add
add
push
push
pop
inc
jecxz
add
push
aad
pop
jecxz
test
push
push
leave
pop
jecxz
xor
push
pop
inc
add
add
push
push
pop
inc
jecxz
add
push
push
pop
inc
add
add
push
aad
inc
jecxz
add
aad
inc
jecxz
add
lahf
das
ret
sbb
mov
and
cmp
aad
mov
inc
adc
ret
or
sub
push
inc
sub
or
and
inc
sub
push
inc
sub
push
and
mov
push
add
mov
push
add
ret
or
and
push
add
ret
or
inc
inc
push
mov
add
add
add
pop
cld
and
add
add
aaa
cmp
push
push
push
push
retf
sbb
or
sbb
push
pop
jecxz
adc
stos
pop
cmc
and
adc
stos
std
fucom
sbb
pop
adc
and
and
pop
jecxz
mov
pop
ret
sbb
jno
adc
and
sub
jecxz
mov
gs
inc
or
pop
ret
sbb
mov
test
sti
pop
push
mov
and
sbb
push
push
push
pop
and
bound
push
test
inc
or
or
adc
add
mov
retf
inc
or
and
mov
and
pop
mov
or
fld
add
frstor
add
ret
or
sub
xor
std
inc
or
or
or
add
inc
or
pop
and
add
aaa
pop
aas
pop
pop
inc
jecxz
pop
pop
pop
pop
jecxz
cmps
xor
and
pop
inc
mov
push
add
adc
add
mov
sbb
add
and
add
push
push
or
add
(bad)
fst
ret
sbb
add
not
ret
sbb
add
jge
add
add
(bad)
not
jecxz
add
(bad)
call
add
add
scas
std
push
add
add
fidiv
add
or
sub
sbb
arpl
cmc
pop
inc
jecxz
or
or
sbb
sub
or
add
inc
sub
add
jg
repz
inc
adc
push
stos
add
or
add
and
add
pop
inc
add
aad
add
pop
inc
ret
sbb
pop
add
pop
inc
ret
sbb
push
add
pop
inc
add
ja
add
pop
inc
add
push
push
add
add
jmp
and
bound
add
out
add
jmp
adc
and
add
aas
aas
aas
pop
inc
jecxz
pop
pop
pop
pop
add
jecxz
sbb
pop
inc
sub
cmc
inc
sub
add
pop
xchg
xlat
inc
sub
inc
push
imul
pop
inc
add
add
test
pop
inc
add
add
stos
fld
inc
add
add
stos
std
pop
inc
add
add
stos
fild
inc
add
add
stos
jne
pop
mov
outs
ret
sbb
add
mov
and
movs
add
sbb
das
sub
and
sub
adc
movs
cmps
add
adc
push
push
inc
sub
add
jae
pop
inc
adc
jmp
add
and
and
mov
xor
sbb
cli
pop
push
cmps
xor
sbb
push
aad
xor
sbb
(bad)
jg
mov
stos
add
xor
jge
xor
sbb
call
aad
cmp
and
lods
in
jge
pop
popa
add
gs
add
and
adc
inc
jecxz
pop
pop
pop
pop
inc
sub
bound
cwde
xchg
xchg
add
adc
inc
inc
inc
cmps
xor
sbb
scas
cmps
test
in
inc
sub
sbb
pop
push
jg
and
sbb
test
adc
sub
add
and
ret
sbb
aad
add
cld
cmps
sub
ret
ins
adc
add
and
xor
sub
sbb
lods
and
and
sbb
xlat
fistp
add
inc
or
std
jmp
jae
repz
or
sub
adc
stos
scas
push
add
inc
or
and
fild
inc
or
and
sub
adc
fist
add
and
cli
push
push
mov
push
mov
ret
ret
sbb
add
sub
add
(bad)
add
inc
or
xlat
test
or
mov
add
pop
pop
push
push
inc
sub
push
adc
add
adc
add
and
add
add
test
and
sti
mov
ret
data16
test
sbb
xlat
ret
sbb
aad
adc
pop
stos
mov
or
mov
add
test
test
add
and
sub
test
inc
add
sub
or
and
loopne
popa
mov
add
jae
add
inc
or
sub
add
inc
or
stos
push
stos
add
inc
or
add
and
inc
or
scas
push
stos
and
inc
or
push
scas
pop
inc
bound
leave
push
push
jmp
inc
mov
jmp
push
push
ret
sbb
fcom
and
(bad)
in
sbb
add
sub
inc
sub
xchg
pop
inc
jecxz
pop
pop
pop
pop
inc
sub
lock
pusha
pusha
adc
or
and
add
push
je
adc
add
lds
or
or
push
inc
adc
push
push
inc
or
add
adc
add
adc
or
inc
pop
push
add
adc
call
pusha
pusha
pusha
pusha
adc
or
sbb
inc
sub
test
inc
add
sub
adc
inc
jo
jo
sbb
jecxz
ret
inc
inc
sub
add
arpl
or
add
add
adc
mov
add
(bad)
cmps
xor
add
jne
pop
inc
mov
push
xchg
ret
adc
inc
mov
push
pop
inc
ret
push
jne
ret
sbb
add
(bad)
pop
inc
add
add
add
cmps
xor
add
(bad)
ret
sbb
add
adc
mov
xor
pop
pop
jl
inc
sub
push
bound
add
stos
push
add
push
push
inc
adc
or
add
add
jne
or
add
add
or
add
add
inc
or
add
add
add
add
add
inc
add
sbb
fld
add
inc
inc
cmc
pop
inc
or
add
adc
inc
or
xor
test
inc
add
test
and
dec
inc
or
pusha
dec
inc
sub
add
jecxz
ret
sbb
push
push
lods
add
sbb
add
pop
stos
add
sbb
stos
push
stos
add
sbb
sti
push
stos
add
sbb
add
jg
add
sbb
add
sbb
add
mov
add
fild
or
mov
sbb
add
add
(bad)
ret
sbb
add
adc
mov
ret
sbb
pop
pop
cmps
xor
js
add
or
add
push
adc
and
push
add
push
cmps
xor
add
add
add
stos
push
cmps
xor
add
stos
push
cmps
xor
add
stos
push
cmps
xor
add
stos
push
cmps
xor
add
stos
push
cmps
xor
add
jmp
inc
jne
add
adc
push
test
xor
mov
inc
ret
sbb
or
inc
mov
push
outs
inc
sub
add
jecxz
jae
or
adc
mov
add
mov
add
add
or
repnz
mov
add
scas
mov
add
add
or
or
and
or
and
or
and
(bad)
in
in
and
div
ret
sbb
aad
std
pop
inc
jecxz
push
pop
pop
fsub
pusha
ret
or
add
pop
pop
add
add
push
adc
add
inc
stos
push
and
sub
push
stos
add
add
add
add
add
add
add
add
inc
stos
push
cmps
xor
add
mov
xor
xchg
stos
add
add
inc
xlat
inc
dec
add
adc
test
pop
pop
inc
ret
sbb
leave
mov
pop
inc
ret
sbb
adc
or
test
sbb
add
retf
xor
add
jae
add
or
pop
stos
test
adc
sub
sbb
adc
or
mov
or
movs
or
add
add
add
add
or
stos
add
or
adc
or
add
add
cmps
xor
add
vpmulhw
mov
and
bound
inc
jecxz
pop
call
jecxz
jp
jp
add
adc
or
ret
sbb
add
xchg
push
and
add
push
add
add
add
add
jmp
add
add
stos
jne
sub
add
add
add
stos
ja
and
add
jmp
or
or
pusha
push
sbb
int
lea
cmp
and
adc
and
add
ret
sbb
imul
xchg
and
jae
jnp
inc
or
add
add
add
sbb
popf
fnsave
add
pop
pop
pop
add
adc
mov
add
aad
add
inc
or
add
add
or
or
dec
push
add
add
(bad)
fistp
cmps
xor
jne
pop
push
inc
or
add
inc
add
cmps
xor
add
vpmulhw
add
pop
ret
sbb
cmp
add
add
pop
pop
js
ret
sbb
add
jl
ret
sbb
add
cmp
add
add
push
inc
sub
inc
add
inc
mov
inc
mov
push
inc
test
xor
add
add
push
jg
retf
add
inc
add
add
adc
bound
int
add
lods
add
xchg
push
inc
rol
adc
sbb
adc
jae
jae
add
inc
or
push
in
inc
or
sub
sub
or
sbb
test
push
pop
and
inc
or
and
mov
push
push
cmps
cmp
mov
push
push
sub
imul
inc
or
lock
sub
add
(bad)
int
inc
or
bound
mov
movs
lods
jnp
sub
sub
and
pop
pop
mov
jp
clc
ret
sbb
add
sub
mov
add
test
push
push
mov
xor
add
or
and
and
cli
jecxz
mov
stos
add
adc
inc
mov
adc
adc
or
or
add
add
bound
aad
adc
add
or
adc
stos
sub
and
jae
jae
inc
or
add
or
add
add
add
adc
pop
adc
add
add
add
add
push
sbb
or
add
add
inc
or
add
rcr
add
adc
ret
sbb
add
shr
or
add
jne
inc
sub
add
(bad)
inc
or
push
adc
add
or
or
fcomp
cmp
cli
add
adc
movs
movs
xchg
add
adc
add
add
push
push
ret
sbb
push
inc
or
sbb
or
sbb
stos
sub
ret
sbb
stos
test
sbb
mov
sbb
push
in
popa
or
jp
pop
inc
or
add
or
or
sub
inc
popa
or
cmp
cmps
scas
scas
sub
pop
pop
adc
sbb
ins
pop
cli
and
add
pop
std
inc
or
add
xchg
add
add
fisttp
add
add
ja
in
inc
or
add
inc
adc
add
inc
cmc
pop
add
add
jne
pop
add
add
pop
jne
or
or
add
push
add
add
rcr
rol
add
jg
fiadd
add
add
vpmaddwd
or
sbb
add
mov
jle
push
add
add
sub
pop
popa
or
add
or
add
or
stos
add
add
or
stos
add
popa
or
add
add
add
add
add
add
inc
push
pop
push
add
adc
test
add
add
sub
inc
or
add
or
add
push
fstp
sbb
add
lea
adc
lods
movs
cmc
ret
sbb
je
adc
and
adc
and
mov
adc
popf
sti
ffree
sbb
jg
sbb
enter
adc
and
sbb
and
add
and
pop
add
or
sub
push
add
adc
mov
mov
push
in
adc
mov
or
and
(bad)
cli
mov
or
add
sbb
add
push
and
add
push
push
push
xchg
add
and
add
add
or
add
push
add
add
push
push
adc
add
jne
and
add
adc
jne
add
add
sub
add
and
add
fnstenv
adc
add
add
add
in
push
inc
add
add
add
add
add
add
ficom
jns
pop
jne
or
add
ja
ret
sbb
add
lods
mov
ret
sbb
push
lock
sbb
sbb
aad
dec
adc
and
stos
sbb
adc
sub
jecxz
adc
test
add
popa
or
stos
mov
or
stos
mov
and
push
pop
inc
sub
sub
call
pop
add
adc
test
enter
or
not
sbb
movs
xchg
and
stos
stos
imul
(bad)
cmp
or
jecxz
test
push
pop
or
adc
call
or
adc
call
adc
xor
add
sub
adc
xor
push
adc
xor
add
adc
xor
add
cmps
xor
push
pop
inc
popa
or
inc
mov
push
pop
inc
bound
add
push
jmp
inc
add
xor
fdiv
std
xchg
cmps
xor
jno
adc
gs
or
mov
stos
stos
or
sbb
nop
add
add
inc
or
out
dec
rol
jae
inc
sub
jmp
sbb
popf
adc
and
sub
aad
push
inc
sub
sbb
aad
adc
cs
movs
adc
and
sub
add
and
jge
inc
ret
sbb
xor
add
jo
pop
pop
add
adc
pop
stos
add
sbb
push
mov
movs
mov
and
add
ret
sbb
and
inc
add
jecxz
mov
push
ret
sbb
stos
add
or
and
(bad)
and
(bad)
cli
mov
adc
mov
inc
or
sub
push
pop
daa
and
add
sub
add
std
jmp
(bad)
xor
cmc
mov
cmp
pop
jnp
pop
in
mov
mov
test
ret
sbb
pusha
sti
adc
arpl
pop
test
ret
sbb
xor
sbb
scas
jne
and
cmp
ret
sbb
sbb
test
xchg
sub
jecxz
cmp
sbb
out
adc
div
push
fdiv
adc
std
mov
jbe
mov
inc
bound
sub
and
add
ins
cld
inc
or
add
or
or
adc
add
push
add
adc
stos
stos
mov
movs
stos
stos
mov
cmps
stos
sub
add
adc
call
or
or
mov
mov
push
xchg
sub
adc
sub
xchg
sub
add
xor
pop
pop
xlat
cmc
pop
inc
popa
or
aaa
aaa
aaa
xchg
adc
adc
and
stos
add
pop
stos
add
ret
sbb
cli
adc
pop
pop
pop
jb
xor
sbb
jg
add
mov
mov
and
sbb
push
inc
jecxz
and
stos
inc
sub
sbb
and
sbb
aas
aas
dec
cmps
xor
mov
and
cld
clc
(bad)
out
sbb
add
and
sti
stos
cli
mov
add
add
add
add
sbb
or
add
jne
add
adc
and
es
or
add
rol
add
add
push
test
pop
aad
add
add
push
push
inc
add
add
push
fst
or
add
sbb
add
add
add
add
add
or
or
inc
ret
sbb
add
inc
adc
xor
adc
push
pop
push
mov
sti
push
mov
and
adc
add
add
jae
pop
sub
imul
adc
sub
sbb
push
addr16
inc
and
sbb
in
imul
sbb
add
sbb
add
mov
div
and
and
sbb
or
dec
ret
sbb
rol
inc
adc
add
add
inc
push
push
adc
and
add
push
jne
aad
add
add
push
push
and
add
push
ins
aad
add
add
push
inc
push
push
and
add
xchg
pop
aad
and
add
popf
push
aad
add
add
push
inc
push
push
and
add
xchg
jne
push
add
add
xchg
push
jge
and
add
inc
pop
jne
add
add
mov
inc
add
add
add
push
add
add
push
push
push
adc
push
adc
push
or
adc
pop
push
mov
adc
sbb
add
sbb
mov
inc
inc
inc
sub
jle
sbb
aaa
jecxz
ret
sbb
aad
dec
adc
and
and
cli
ja
std
add
inc
or
aas
cmp
cmps
xor
aas
cmps
xor
sbb
push
push
adc
and
adc
and
inc
ret
xor
add
adc
add
add
pop
push
inc
add
add
push
adc
inc
add
add
push
push
push
push
add
add
add
or
add
add
add
mov
add
add
jne
inc
add
add
gs
and
add
adc
pop
fld
or
add
add
adc
add
add
or
add
or
add
add
add
push
push
add
add
jne
push
pop
pop
inc
ret
sbb
jae
ret
sbb
inc
movs
adc
out
ret
sbb
add
adc
jge
dec
sub
mov
adc
or
adc
fisubr
inc
sub
or
adc
cmc
mov
(bad)
lahf
cs
cmp
xor
sub
in
jecxz
adc
call
sbb
and
add
add
add
add
add
push
push
and
add
push
aad
push
and
add
addr16
push
add
add
push
push
push
push
and
add
push
adc
add
push
adc
add
inc
push
push
adc
jne
aad
add
add
push
adc
add
adc
add
add
push
adc
add
add
add
add
push
adc
add
add
and
or
add
push
push
pop
inc
ret
icebp
jns
ret
sbb
scas
ret
adc
pop
sbb
adc
shl
imul
adc
stos
cli
jle
sbb
push
and
adc
mov
ret
sbb
sub
push
test
adc
das
aas
xchg
inc
sub
mul
sbb
push
ret
sbb
pop
ret
sbb
cdq
mov
cwde
pop
nop
and
add
push
adc
add
inc
push
push
adc
aad
pop
push
add
add
push
push
push
adc
push
push
inc
push
add
add
gs
jne
add
add
gs
push
push
and
add
gs
push
xchg
and
add
jne
aad
add
add
push
push
adc
add
mov
and
add
mov
push
push
inc
or
add
pop
push
add
add
push
push
push
push
add
add
push
push
push
push
and
add
jns
push
push
adc
and
add
adc
sbb
and
sti
bound
mov
mov
sbb
add
rol
movs
push
or
call
out
mov
mov
sbb
inc
jecxz
adc
mov
xchg
inc
sub
test
or
cdq
mov
stos
cdq
stos
ret
sbb
jae
sbb
add
jg
push
add
inc
or
cmp
adc
out
std
cmc
stos
pop
and
das
mov
xchg
retf
add
pop
add
add
push
push
adc
add
push
push
and
add
push
push
aad
add
add
inc
push
push
push
and
add
sbb
add
add
add
or
add
push
add
add
push
push
adc
add
push
and
add
push
push
(bad)
jne
add
add
push
pop
add
add
push
push
push
inc
add
add
push
adc
push
add
add
push
adc
add
aad
gs
or
add
pop
aad
add
add
add
add
push
push
adc
mov
sub
jmp
mov
add
and
add
add
push
inc
and
add
and
add
add
push
and
add
and
add
sub
add
pop
and
jmp
add
sbb
add
add
test
pop
cmp
sbb
inc
inc
or
lock
add
stos
push
inc
sub
add
stos
add
add
stos
add
add
stos
add
add
add
stos
push
and
inc
sub
add
add
stos
add
add
stos
add
add
stos
add
add
add
stos
push
inc
sub
add
stos
add
add
push
jmp
add
stos
add
add
add
stos
push
inc
sub
add
stos
add
add
stos
add
add
stos
add
add
push
push
cli
add
test
add
push
jbe
push
add
add
push
push
push
push
add
add
add
add
jne
push
mov
or
add
popf
aad
add
add
push
xchg
and
add
inc
adc
add
xor
add
add
pop
in
or
add
adc
sub
push
mov
aas
mov
add
sub
ret
(bad)
push
push
pop
inc
ret
sbb
out
push
push
pop
inc
or
stos
call
inc
ret
sbb
out
push
push
pop
inc
ret
adc
out
push
push
mov
test
pop
inc
push
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
cmps
xor
push
cmps
xor
push
sub
add
jp
push
add
add
adc
or
add
push
fldenv
or
add
push
fldenv
or
add
push
push
in
or
add
push
in
or
add
adc
or
inc
add
xor
or
add
adc
add
add
stos
and
inc
or
ds
cmp
in
data16
or
add
pop
gs
or
add
push
inc
and
add
push
rcl
and
add
push
rcl
add
add
push
push
inc
push
inc
or
add
ja
inc
or
add
addr16
cmc
inc
or
add
xchg
inc
or
add
aad
or
add
aad
or
add
jne
or
add
push
inc
or
add
push
inc
or
add
push
inc
or
add
pop
inc
or
add
pop
and
add
jns
aam
and
add
jne
adc
add
push
adc
push
push
push
push
and
add
jne
aad
add
add
push
push
push
adc
push
push
push
adc
push
push
adc
add
push
adc
push
push
adc
add
adc
add
push
gs
inc
or
add
inc
mov
inc
or
add
pop
xor
add
sub
cmp
mov
(bad)
xor
push
xor
or
fld
push
xor
adc
add
xor
push
mov
jge
push
cmp
adc
and
adc
pop
add
stos
movs
xor
adc
add
mov
add
jmp
adc
push
aad
push
xor
sbb
add
cmp
mov
call
add
add
xor
sbb
add
add
stos
movs
xor
or
jge
add
push
add
and
loopne
add
stos
push
add
popa
add
stos
movs
loope
and
push
push
mov
and
push
push
add
xor
add
add
xor
add
add
loopne
and
push
push
adc
and
xor
or
add
or
add
pop
in
or
add
adc
or
jns
or
inc
out
(bad)
cmp
add
pop
cs
add
stos
cmps
xor
add
push
add
xchg
add
add
stos
retf
add
adc
or
add
mov
pop
add
add
add
and
pop
push
add
push
(bad)
cmp
popa
add
pop
mov
cmc
retf
sbb
call
bound
call
push
xchg
push
xchg
lods
jnp
and
loop
or
xor
ret
pop
add
add
push
in
loopne
ja
add
add
pop
push
add
add
add
add
add
mov
jl
xor
add
push
add
add
sub
push
add
push
add
mov
or
xor
xor
add
add
push
adc
add
pusha
add
or
add
push
push
add
add
xor
pop
mov
inc
pop
inc
bound
push
es
and
push
stos
push
add
inc
adc
stos
push
add
inc
adc
stos
push
add
lahf
adc
and
add
shl
loopne
inc
push
ja
jecxz
loopne
push
push
ja
xor
pop
push
push
adc
jecxz
pop
pop
pop
pop
daa
dec
popa
or
sub
adc
pop
pop
or
adc
iret
inc
cmp
test
mov
sti
cmps
xor
inc
inc
arpl
xor
pop
push
push
push
push
add
add
in
inc
push
adc
add
loopne
push
push
push
push
loopne
cmp
add
inc
add
adc
push
or
adc
push
add
inc
adc
stos
push
add
inc
adc
stos
push
add
inc
adc
stos
push
add
push
sbb
mov
repz
add
push
inc
push
push
add
add
push
push
inc
push
inc
or
add
adc
add
das
or
aaa
inc
or
adc
add
test
add
add
add
add
ja
inc
sub
add
add
push
inc
sub
add
add
add
int
push
add
loopne
add
mov
xor
add
xor
xor
add
add
xor
add
ret
push
push
ret
add
and
add
mov
add
inc
add
dec
add
mov
sbb
add
and
add
push
add
sub
add
mov
add
push
add
and
add
stos
add
and
loopne
push
and
add
add
popa
inc
add
inc
sub
add
add
push
inc
sub
add
add
inc
sub
add
add
test
add
add
aad
inc
or
add
add
add
add
(bad)
inc
sbb
add
add
add
add
inc
sbb
add
add
add
fs
jae
addr16
xor
imul
add
outs
je
gs
data16
add
add
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
call
cmp
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
cmp
add
add
add
aas
aad
pop
inc
or
add
add
add
cmp
add
add
add
aas
sub
xchg
loopne
add
add
add
add
add
cmp
add
add
add
aas
inc
mov
mov
add
add
add
add
add
cmp
add
add
add
mov
scas
push
idiv
add
add
add
cmp
add
add
add
mov
sbb
loopne
add
add
add
add
add
cmp
add
add
add
mov
sbb
add
add
add
add
cmp
add
add
add
ds
popf
mov
add
add
add
add
add
cmp
add
add
add
aas
aad
pop
inc
aam
cs
add
add
add
add
cmp
add
add
add
aas
call
add
add
add
add
add
cmp
add
add
add
aas
test
shl
add
add
add
add
add
add
add
add
mov
out
(bad)
add
add
add
add
add
cmp
add
add
add
add
stos
xchg
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
mov
out
lods
add
add
add
add
add
cmp
add
add
add
add
mov
add
add
add
add
cmp
add
add
add
add
pop
ror
aas
add
add
add
add
add
cmp
add
add
add
aas
push
ins
inc
aas
jmp
add
add
add
add
add
add
add
add
add
ror
add
add
add
add
add
cmp
add
add
add
mov
sub
stos
add
add
add
add
add
cmp
add
add
add
aas
sbb
add
add
add
add
add
add
cmp
add
add
add
aas
ror
inc
fmul
cmp
add
add
add
cmp
add
add
add
mov
fmul
cmp
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
lock
mov
add
add
add
cmp
add
add
add
aas
jne
fs
sbb
add
add
add
add
cmp
add
add
pushf
cmp
add
popa
pushf
cmp
push
cmp
rcl
aas
sbb
add
add
add
add
cmp
add
add
add
add
or
cmp
sbb
add
add
add
add
cmp
add
add
add
mov
into
fiadd
add
add
add
add
add
add
add
add
mov
xor
mov
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
inc
inc
mov
adc
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
outs
je
gs
add
add
add
add
inc
sbb
repnz
add
inc
sbb
popa
jae
imul
jns
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
ins
ins
imul
add
sbb
add
(bad)
inc
sbb
repnz
add
inc
sbb
fs
data16
outs
je
gs
je
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
popa
fs
imul
add
sbb
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
gs
pop
jb
pop
fs
ins
jns
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
gs
pop
jb
pop
fs
ins
jns
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
push
add
add
sbb
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
gs
pop
ins
bound
jne
ins
jns
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
gs
pop
ins
pop
fs
ins
jns
add
add
add
add
inc
sbb
repnz
add
add
(bad)
inc
sbb
fs
bound
imul
je
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
popa
fs
imul
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
ins
ins
imul
add
add
inc
sbb
repnz
add
add
add
inc
sbb
je
outs
ins
arpl
add
add
adc
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
fs
popa
jb
add
add
adc
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
imul
adc
add
(bad)
inc
sbb
repnz
add
inc
sbb
gs
add
add
sbb
add
(bad)
inc
sbb
repnz
add
inc
sbb
jb
ins
pop
fs
ins
jns
add
add
add
add
inc
sbb
repnz
add
add
(bad)
inc
sbb
outs
outs
gs
fs
ins
jns
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
outs
je
fs
ins
jns
add
add
add
add
inc
sbb
repnz
add
inc
sbb
jb
jb
pop
fs
ins
jns
add
add
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
outs
fs
jb
outs
pop
fs
ins
jns
add
add
add
add
inc
sbb
repnz
add
inc
sbb
jb
ins
jb
fs
ins
jns
add
add
add
add
inc
sbb
repnz
add
inc
sbb
jb
jb
pop
fs
ins
jns
add
add
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
ins
jo
data16
outs
je
fs
ins
jns
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
ins
jo
jb
popa
jb
fs
ins
jns
add
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
popa
jae
imul
add
add
inc
sbb
repnz
add
add
add
inc
sbb
popa
jae
imul
add
add
add
add
inc
sbb
repnz
add
add
(bad)
inc
sbb
pop
ja
outs
addr16
ins
gs
add
add
add
add
inc
sbb
repnz
add
inc
sbb
pop
ja
outs
addr16
jb
addr16
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
pop
jae
outs
imul
adc
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
pop
jb
outs
add
add
adc
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
pop
outs
imul
push
add
add
inc
sbb
repnz
add
add
add
inc
sbb
push
pop
outs
imul
add
pop
add
add
inc
sbb
repnz
add
add
add
inc
sbb
popa
je
pop
data16
outs
je
add
add
add
add
inc
sbb
repnz
add
add
(bad)
inc
sbb
ins
jo
jb
popa
jb
outs
imul
add
sbb
add
(bad)
inc
sbb
repnz
add
inc
sbb
ins
jo
jb
popa
jb
fs
ins
add
add
sbb
add
(bad)
inc
sbb
repnz
add
inc
sbb
ins
jo
data16
outs
je
outs
imul
add
sbb
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
ins
jo
data16
outs
je
fs
ins
add
add
push
add
add
inc
sbb
repnz
add
add
add
inc
sbb
jb
jb
pop
outs
imul
add
pop
add
add
inc
sbb
repnz
add
add
add
inc
sbb
jb
jb
pop
fs
ins
add
add
push
add
add
inc
sbb
repnz
add
add
add
inc
sbb
jb
ins
jb
outs
imul
add
pop
add
add
inc
sbb
repnz
add
add
add
inc
sbb
jb
ins
jb
fs
ins
add
add
sbb
add
(bad)
inc
sbb
repnz
add
inc
sbb
outs
fs
jb
outs
pop
outs
imul
add
sbb
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
outs
fs
jb
outs
pop
fs
ins
add
add
push
add
add
inc
sbb
repnz
add
add
add
inc
sbb
jb
jb
pop
outs
imul
add
pop
add
add
inc
sbb
repnz
add
add
add
inc
sbb
jb
jb
pop
fs
ins
add
add
adc
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
outs
je
fs
ins
add
add
adc
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
outs
je
outs
imul
add
sbb
add
(bad)
inc
sbb
repnz
add
inc
sbb
popa
je
pop
jb
popa
jb
outs
imul
add
sbb
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
popa
je
pop
jb
popa
jb
fs
ins
add
add
adc
inc
sbb
repnz
add
add
add
inc
sbb
outs
outs
gs
outs
imul
add
push
add
add
inc
sbb
repnz
add
add
add
inc
sbb
outs
outs
gs
fs
ins
add
add
push
add
add
inc
sbb
repnz
add
add
add
inc
sbb
jb
ins
pop
outs
imul
add
pop
add
add
inc
sbb
repnz
add
add
add
inc
sbb
jb
ins
pop
fs
ins
sbb
add
in
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
add
daa
add
(bad)
inc
sbb
add
add
sbb
add
inc
sbb
add
add
add
pushf
add
add
add
add
jl
test
cmp
push
jl
ds
push
or
ds
dec
fdivr
lock
or
ds
push
cmp
popw
push
ds
pop
retf
mov
adc
mov
pop
data16
scas
ds
mov
sar
push
cmp
pop
fs
mov
mov
ds
mov
ds
push
and
pop
fs
retf
and
cmp
popw
push
ds
cmp
mov
cmp
lods
sub
cmp
cwde
sti
mov
ds
fld
cmp
add
mov
ds
mov
scas
ds
sub
out
and
scas
ds
data16
lock
ds
mov
fs
sbb
add
mov
popa
lods
in
ds
out
idiv
add
out
out
idiv
add
out
out
pop
xchg
jecxz
out
out
pop
xchg
jecxz
not
cmp
fmul
loope
cli
jp
ds
mov
cmp
mov
jecxz
aas
idiv
add
xchg
jecxz
aas
idiv
add
xchg
jecxz
aas
pop
xchg
jecxz
xchg
jecxz
aas
pop
xchg
jecxz
repnz
ds
sbb
xchg
cwde
sbb
fcmove
loope
cli
jp
ds
ds
jp
ds
inc
mov
ds
das
sbb
push
xchg
push
ds
ds
mov
imul
das
sbb
cli
jp
ds
int3
cmp
mov
test
aas
test
sbb
pop
stos
add
aas
pop
stos
add
ds
stos
add
ds
stos
add
test
sbb
aas
(bad)
pushf
in
inc
sbb
add
and
and
call
ins
fadd
xor
outs
fadd
mov
jns
xchg
call
xchg
call
jno
inc
aas
mov
jns
xchg
call
outs
fadd
and
nop
call
outs
fadd
shl
fadd
xor
outs
fadd
mov
jns
xchg
call
jno
inc
aas
shl
fadd
xor
outs
fadd
and
aas
jnp
pop
aas
xor
outs
fadd
(bad)
je
ds
inc
aas
and
call
xchg
call
jnp
pop
aas
mov
jns
xchg
call
jno
inc
aas
shl
fadd
mov
jns
xchg
call
xchg
outs
push
inc
imul
sbb
jne
loopne
adc
sahf
xchg
jae
sub
stos
imul
jmp
aas
xor
ja
inc
inc
(bad)
add
jne
inc
inc
(bad)
shl
aas
mov
sbb
jns
jno
jmp
push
aas
lods
jg
aas
xchg
xor
sub
aas
lods
ins
ja
test
aas
int
jb
mov
pop
aas
test
adc
dec
lds
mov
aas
jge
outs
aas
pop
hlt
or
sub
cmp
enter
dec
cli
cmp
enter
hlt
or
sub
cmp
enter
add
je
cmp
enter
add
je
cmp
enter
sub
cld
enter
dec
cli
cmp
enter
sub
cld
enter
je
cmp
and
mov
sub
sar
sub
cmp
and
ds
and
sub
cmp
and
mov
sub
sar
sub
cmp
and
sub
cmp
and
imul
sub
sar
sub
cmp
and
imul
sub
sar
dec
outs
adc
add
pusha
cmp
mov
aas
add
pusha
cmp
out
aas
add
pusha
cmp
out
aas
add
pusha
cmp
aaa
ins
aas
in
mov
adc
in
mov
mov
dec
pop
mov
push
xor
ds
(bad)
ds
xlat
sub
(bad)
ds
mov
scas
jno
ds
lea
ds
int3
mov
aas
idiv
xor
ds
popa
xor
ds
popa
xor
cmps
pop
xor
ds
and
aas
add
ds
adc
ds
and
add
add
imul
adc
aas
imul
adc
aas
ins
data16
aas
ins
data16
aas
cmp
ds
data16
aas
cmp
ds
mov
ds
mov
ds
push
sar
shr
push
aas
adc
aas
or
imul
ror
aas
mov
ror
aas
mov
aam
aas
mov
ror
aas
retf
mov
push
aas
ss
and
sub
movs
ds
and
mov
or
aas
push
ror
aas
push
sbb
ds
sar
mov
or
ds
mov
xor
inc
scas
ds
inc
adc
aas
inc
sti
imul
ror
aas
pushf
mov
push
ror
aas
pushf
mov
dec
pop
mov
aas
dec
pop
mov
aas
cmps
das
mov
aas
or
(bad)
jnp
fld
mov
aas
out
iret
or
xor
aas
imul
aam
imul
aam
je
or
cld
clc
aam
into
jae
ds
repnz
ds
jae
ds
repnz
fisubr
xor
aas
es
mov
rcl
aas
add
add
add
add
add
add
add
add
add
sbb
add
sbb
sbb
sbb
add
or
or
or
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
or
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
sub
add
inc
add
add
xor
sub
add
cmp
xor
inc
add
add
add
add
add
sub
sub
add
xor
add
add
cmp
cmp
cmp
add
sub
cmp
sub
add
sub
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
outs
add
add
add
add
add
outs
add
add
add
add
popa
add
add
add
imul
arpl
add
add
arpl
add
add
popa
add
imul
bound
imul
bound
arpl
add
data16
imul
imul
add
bound
add
ins
add
data16
add
push
imul
imul
add
add
ins
add
add
data16
outs
add
add
push
add
add
pop
add
pop
add
add
pop
add
add
dec
add
pusha
add
add
pop
add
add
pusha
add
dec
add
add
pop
add
add
push
add
push
add
add
push
add
add
dec
add
add
add
push
add
add
push
add
dec
add
add
je
jno
add
jbe
js
jbe
add
jno
jne
ja
add
jg
add
jp
jnp
jl
add
add
add
add
jne
add
jle
jns
jb
add
jge
jl
jns
add
add
add
add
jne
add
add
jl
jge
add
add
test
test
add
xchg
xchg
xchg
add
test
lea
mov
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
cmp
add
inc
mov
inc
cmp
add
add
add
add
jmp
mov
cwde
fdiv
mov
dec
sub
pushf
mov
xor
mov
jb
pushf
mov
sahf
mov
cmp
jle
sar
enter
loopne
xchg
mov
rol
mov
popa
je
cmp
xchg
jns
ds
je
cmp
xchg
jns
ds
add
mov
adc
add
mov
mov
sub
sar
or
movs
mov
mov
sub
outs
mov
or
movs
mov
adc
or
movs
mov
ret
ds
movs
mov
ret
ds
movs
mov
inc
mov
pushf
mov
inc
mov
pushf
mov
imul
mov
imul
mov
jmp
mov
jmp
mov
add
ds
shr
mov
js
popa
cmp
sub
sbb
sub
cmp
movs
mov
popa
inc
cdq
cmp
add
mov
stos
xchg
int
xor
mov
or
inc
mov
or
inc
mov
sahf
mov
inc
mov
sahf
mov
inc
mov
shl
lods
fisub
cmp
lods
fisub
cmp
cmp
(bad)
cmp
cmp
(bad)
cmp
cmps
call
ins
sbb
sahf
mov
cmp
jle
sar
enter
jle
sar
enter
loopne
xchg
mov
enter
loopne
xchg
mov
rol
mov
push
int
cmp
push
or
je
cmp
xchg
jns
ds
add
mov
adc
add
mov
mov
sub
sar
or
movs
mov
xchg
movs
mov
xchg
movs
mov
mov
sub
outs
mov
push
sub
outs
mov
or
movs
mov
push
je
cmp
sahf
jns
cmp
test
lahf
mov
ret
ds
movs
mov
inc
sub
xchg
xchg
sti
mov
mov
fs
lahf
mov
push
je
cmp
call
cmp
pop
or
cmp
sub
sbb
sub
cmp
movs
mov
sub
cmp
movs
mov
popa
inc
cdq
cmp
add
mov
inc
movs
add
mov
stos
xchg
int
xor
mov
or
inc
mov
sahf
mov
inc
mov
sbb
mov
cmp
test
lahf
mov
cmp
test
lahf
mov
inc
sub
xchg
xchg
sti
mov
inc
sub
xchg
xchg
sti
mov
inc
sub
xchg
xchg
sti
mov
mov
fs
lahf
mov
mov
fs
lahf
mov
inc
mov
pushf
mov
inc
mov
pushf
mov
imul
mov
imul
mov
mov
pushf
mov
mov
pushf
mov
mov
pushf
mov
jmp
mov
jmp
mov
push
je
cmp
call
cmp
call
cmp
call
cmp
movs
fisub
cmp
movs
fisub
cmp
pop
or
cmp
pop
or
cmp
pop
or
ds
shr
mov
add
ds
shr
mov
pop
shr
pop
fucomp
mov
push
dec
cmp
fdivr
cdq
loope
mov
(bad)
retf
cdq
push
mov
out
movs
cmp
std
sbb
mov
sbb
popa
loop
mov
arpl
ds
loop
mov
mov
movs
sbb
sar
gs
sbb
mov
add
mov
mov
cmp
and
cmp
pop
in
dec
ds
outs
jbe
cdq
mov
pop
ds
in
loopne
inc
(bad)
sbb
dec
pop
std
mov
xchg
xlat
pusha
ds
aad
cmp
add
cmp
aad
cmp
add
cmp
aad
cmp
add
cmp
cs
mov
jns
sub
adc
mov
push
jmp
mov
and
jmp
mov
cwde
fdiv
mov
cwde
fdiv
mov
dec
sub
pushf
mov
dec
sub
pushf
mov
xor
mov
jb
pushf
mov
push
jl
cmp
out
xchg
push
jl
cmp
out
xchg
jne
out
je
xchg
jne
out
je
xchg
mov
adc
push
mov
mov
push
mov
mov
pop
cmp
call
ds
sbb
mov
mov
cmp
and
cmp
adc
(bad)
cmp
mov
and
cmp
movs
fisub
ds
shr
mov
call
mov
push
ins
(bad)
cmp
cmp
(bad)
cmp
cmps
call
xchg
std
sbb
mov
sbb
popa
loop
mov
arpl
ds
loop
mov
mov
movs
ds
sbb
mov
dec
pop
std
mov
xchg
xlat
pusha
ds
mov
pushf
mov
imul
mov
imul
mov
mov
pushf
mov
jmp
mov
jmp
mov
xchg
mov
inc
mov
add
ds
shr
mov
mov
push
shl
gs
or
test
gs
xchg
push
popa
xor
jo
cmp
mov
jo
cmp
inc
mov
pop
cmp
movs
sub
xor
sar
ret
aas
ss
mov
mov
aas
mov
xchg
mov
aas
mov
xchg
sub
xor
inc
ja
aas
pushf
mov
cmp
sbb
aas
out
aas
pop
or
int3
cmp
sub
aas
mov
inc
mov
in
xor
aaa
add
cmp
adc
sub
push
lds
sub
adc
pop
jns
aas
sbb
push
aas
push
in
cmp
es
aas
mov
dec
aas
int
sbb
mov
sub
adc
cmp
push
aas
ins
inc
or
imul
mov
aas
movs
mov
add
sub
xor
pop
hlt
pop
aas
sub
add
in
push
aas
sub
or
push
das
dec
fistp
jg
pop
lahf
add
sbb
jg
in
bt
iret
cmp
sti
jg
mov
cdq
aam
jecxz
jg
mov
and
outs
sub
jae
data16
pop
scas
xor
mov
aaa
aas
push
cmp
test
data16
lahf
jae
cmp
pop
fidivr
inc
inc
adc
and
aas
inc
inc
adc
ds
call
sbb
cmp
data16
ror
cmp
and
sub
mov
pop
and
jp
fidivr
pop
inc
btr
add
add
fild
dec
div
add
cmp
sub
mov
inc
ficomp
bound
(bad)
aad
xor
add
sti
mov
inc
ficomp
mov
jbe
push
icebp
ds
sbb
mov
es
lahf
sbb
mov
es
add
cmp
jo
mov
fild
push
div
add
cmp
mov
sti
mov
inc
ficomp
aas
bound
pop
int
xor
add
sti
mov
inc
ficomp
popa
out
jp
mov
and
sub
mov
dec
lahf
cmp
xlat
jnp
mov
dec
mov
xchg
movs
je
pop
and
xchg
ds
jno
leave
aas
adc
xchg
xchg
ins
aad
mov
fdivrp
jnp
(bad)
push
xor
pusha
pop
jbe
mov
test
add
mov
and
add
iret
xchg
(bad)
fstp
cmc
repz
call
xor
div
iret
xchg
fs
sub
call
fild
dec
div
adc
mov
cmp
mov
movs
lds
pop
sti
dec
mov
cld
loop
xor
mov
mul
cmp
and
mov
imul
mov
mov
ja
jg
and
push
mov
mov
stc
les
push
mov
mov
adc
xor
inc
pop
adc
repnz
push
mov
sti
adc
pop
or
and
push
aas
fsubr
or
mov
mov
sbb
outs
lods
sbb
sti
and
outs
lods
sbb
sti
and
ret
mov
add
push
mov
push
pop
push
mov
mov
add
adc
push
mov
lock
in
and
mov
sbb
fldenv
mov
mov
out
xor
fcom
ret
mov
icebp
mov
ret
mov
icebp
mov
mov
mov
pushf
scas
mov
mov
pusha
pop
jbe
mov
test
add
mov
mov
mov
in
push
push
mov
add
mov
stc
stos
sar
sub
jae
rcl
aas
mov
or
popa
test
cmp
add
sbb
cli
in
aas
pop
(bad)
push
mov
sbb
adc
mov
or
rcr
outs
les
xchg
aas
jae
out
lods
xchg
shl
mov
inc
stc
es
dec
aam
shr
mov
popf
sahf
xchg
ds
dec
inc
aas
push
lock
aas
pusha
out
hlt
mov
clc
or
addr16
xor
lahf
mov
dec
mov
enter
aas
mov
mov
inc
mov
inc
mov
call
mov
jl
xchg
push
push
mov
aas
push
push
mov
aas
mov
retf
test
cmp
jae
mov
mov
xchg
mov
jo
cmp
fdiv
jecxz
mov
mov
or
test
xchg
movsx
fs
repz
aas
fdivr
push
mov
mov
sar
add
mov
mov
jmp
or
aas
inc
push
inc
mov
retf
ds
push
inc
mov
retf
ds
push
mov
fld
lods
mov
sub
fidivr
fld
lods
mov
cmp
fstp
push
rcl
cmp
fstp
fimul
inc
mov
dec
popa
jmp
lods
xchg
shl
aas
dec
lock
aas
mov
adc
outs
int3
dec
aas
retf
mov
add
cmp
hlt
cmp
test
sub
hlt
ins
jg
or
mov
xchg
pop
mov
and
sub
loopne
mov
add
cmp
and
add
cmp
xchg
mov
mov
pop
mov
ds
sub
mov
push
aaa
lods
ds
dec
jo
loop
pushf
cmp
scas
out
outs
mov
jl
mov
dec
and
ret
cmp
mov
mov
and
fldenv
mov
outs
std
ja
cdq
out
test
inc
and
je
inc
repnz
xor
aas
inc
repnz
xor
mov
ins
pop
cmp
sbb
aas
inc
repnz
xor
mov
xlat
jbe
xlat
into
js
aad
or
or
add
fadd
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
fsub
add
add
cmp
add
add
add
add
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
aas
add
add
pop
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
outs
gs
arpl
xor
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
add
inc
sbb
add
add
add
add
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
int3
int3
cmp
arpl
jo
arpl
ss
add
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
addr16
outs
xor
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
add
inc
sbb
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
add
inc
sbb
gs
outs
jbe
xor
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
gs
jae
arpl
ss
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
outs
gs
arpl
xor
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
aas
add
add
pop
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
outs
gs
arpl
xor
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
add
inc
sbb
add
add
add
add
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
gs
jae
arpl
ss
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
outs
cmp
imul
jb
xor
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
aas
add
add
pop
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
ins
imul
cmp
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
add
inc
sbb
add
add
add
add
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
gs
jae
arpl
ss
add
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
inc
add
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
outs
gs
arpl
xor
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
add
inc
sbb
add
add
add
inc
sbb
add
add
add
add
add
aas
add
add
add
add
push
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
add
inc
sbb
gs
outs
jbe
xor
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
gs
jae
arpl
ss
add
add
add
add
add
add
add
add
inc
sbb
add
add
(bad)
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
and
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
dec
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
dec
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pusha
add
add
add
pop
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
imul
add
add
ins
add
add
add
outs
add
add
add
push
add
imul
add
popa
add
add
add
add
add
add
outs
add
add
add
arpl
add
data16
add
add
bound
add
arpl
add
imul
add
popa
add
add
add
add
add
add
je
add
jbe
add
jno
add
js
add
js
add
test
add
test
add
xchg
add
test
add
xchg
add
xchg
add
jae
add
jae
add
jle
add
jne
add
jg
add
ja
add
ja
add
ja
add
add
add
add
add
add
jp
add
jb
add
jb
add
jge
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repnz
add
add
(bad)
inc
sbb
add
add
add
add
and
add
inc
sbb
add
add
sbb
add
inc
sbb
add
add
add
add
add
jl
test
cmp
push
jl
ds
dec
fdivr
lock
or
ds
push
ds
(bad)
push
cmp
(bad)
pop
retf
mov
adc
mov
pop
data16
scas
ds
mov
sar
push
cmp
pop
fs
mov
mov
ds
mov
ds
push
and
pop
fs
retf
ds
push
ds
and
cmp
cmp
mov
cmp
lods
sub
cmp
cwde
sti
mov
ds
fld
cmp
add
mov
ds
mov
scas
ds
sub
out
and
scas
ds
data16
lock
ds
mov
fs
sbb
add
mov
popa
lods
in
ds
movs
cmp
adc
xor
ds
out
idiv
add
out
out
idiv
add
out
out
pop
xchg
jecxz
not
cmp
pop
xchg
jecxz
not
cmp
fmul
loope
cli
jp
ds
mov
cmp
aas
idiv
add
xchg
jecxz
aas
idiv
add
xchg
jecxz
aas
pop
xchg
jecxz
xchg
jecxz
aas
pop
xchg
jecxz
repnz
ds
sbb
repnz
ds
sbb
xchg
cwde
sbb
fcmove
loope
cli
jp
ds
ds
jp
ds
inc
mov
ds
jp
ds
das
sbb
idiv
ds
das
sbb
push
xchg
push
ds
ds
mov
imul
das
sbb
cli
jp
ds
int3
cmp
mov
test
aas
test
sbb
test
sbb
pop
stos
add
aas
pop
stos
add
ds
stos
add
ds
stos
add
ds
stos
add
test
sbb
aas
(bad)
pushf
in
inc
sbb
push
xchg
push
mov
(bad)
ins
aas
or
jg
inc
fistp
add
add
or
mov
cmp
fistp
add
add
sub
adc
outs
and
and
call
ins
fadd
and
call
outs
fadd
mov
jns
xchg
call
jno
inc
aas
mov
jns
xchg
call
outs
fadd
and
nop
call
outs
fadd
mov
jns
xchg
call
jno
inc
aas
xor
outs
fadd
shl
fadd
and
aas
jnp
pop
aas
xor
outs
fadd
(bad)
je
ds
inc
aas
and
call
xchg
call
jnp
pop
aas
mov
jns
xchg
call
jno
inc
aas
shl
fadd
mov
jns
xchg
call
fs
cmc
sub
cmp
enter
dec
cli
cmp
enter
hlt
or
sub
cmp
enter
add
je
cmp
enter
add
je
cmp
enter
sub
cld
enter
dec
cli
cmp
enter
sub
cld
enter
je
cmp
and
mov
sub
sar
sub
cmp
and
ds
and
sub
cmp
and
mov
sub
sar
sub
cmp
and
ds
outs
adc
add
pusha
cmp
mov
aas
add
pusha
cmp
out
aas
add
pusha
cmp
out
aas
add
pusha
cmp
aaa
ins
aas
in
mov
adc
in
mov
adc
push
call
aas
shl
aas
mov
aas
call
js
aas
inc
fistp
add
add
add
add
nop
push
cmp
inc
shl
ror
aas
inc
fistp
mov
out
cmp
inc
jle
imul
adc
aas
imul
adc
aas
ins
data16
aas
cmp
ds
data16
aas
cmp
ds
data16
aas
cmp
ds
mov
ds
mov
ds
imul
ror
aas
adc
aas
push
ror
aas
mov
ror
aas
mov
aam
aas
mov
aam
aas
mov
ror
aas
retf
mov
push
aas
ss
and
sub
movs
ds
and
mov
fwait
and
mov
or
aas
mov
or
aas
push
ror
aas
push
sbb
ds
sar
mov
or
ds
mov
xor
inc
scas
ds
inc
adc
aas
inc
sti
imul
ror
aas
inc
sti
imul
ror
aas
pushf
mov
push
ror
aas
pushf
mov
dec
pop
mov
aas
dec
pop
mov
aas
dec
pop
mov
aas
cmps
das
mov
aas
or
(bad)
jnp
fld
mov
aas
xchg
push
sar
shr
or
xor
aas
imul
aam
into
jae
ds
repnz
fisubr
xor
aas
es
mov
rcl
aas
add
add
add
add
add
add
add
add
sbb
sbb
add
or
sbb
sbb
add
or
and
sbb
add
or
pop
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
adc
and
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
and
add
and
and
pop
add
add
add
add
add
add
add
or
add
adc
add
add
add
dec
add
add
inc
add
add
inc
add
add
add
sub
dec
add
add
inc
add
add
add
add
add
add
add
add
dec
add
add
add
sub
sub
add
xor
xor
xor
add
sub
cmp
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
das
add
add
add
add
add
xor
dec
add
add
add
add
dec
add
add
push
add
add
dec
add
push
add
add
push
add
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
push
add
push
add
data16
add
pop
add
push
add
bound
add
add
push
pusha
add
add
pop
add
add
add
push
add
add
add
jae
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
jnp
jno
add
add
add
add
add
add
add
add
test
test
push
add
add
add
add
jg
add
add
add
push
add
add
add
add
add
add
add
add
add
movs
stc
sub
mov
cmp
add
add
add
add
test
mov
cli
mov
mov
sbb
mov
sub
mov
scas
fld
cmp
jmp
stos
pop
sar
mov
ret
jo
or
daa
cmp
stc
jmp
daa
cmp
stc
jmp
and
add
mov
mov
push
cmp
mov
jecxz
jecxz
out
cmp
cdq
push
mov
cmp
pushf
mov
cld
lods
jae
and
add
cmp
and
add
cmp
mov
test
outs
aas
cmp
dec
rcl
outs
aas
cmp
push
(bad)
daa
inc
in
cmp
aam
xchg
mov
inc
mov
mov
aas
inc
mov
mov
aas
stos
mov
ds
or
stos
mov
ds
or
mov
icebp
cmp
aam
mov
ja
or
pop
into
sub
and
mov
jbe
jp
push
adc
mov
jmp
mov
sbb
xchg
mov
push
stos
add
std
adc
push
cmp
sbb
inc
mov
add
and
and
sub
and
sub
bnd
cmp
pop
and
mov
xchg
call
xor
jo
(bad)
mov
and
cmp
loopne
mov
lds
icebp
mov
push
rcl
mov
ins
mov
mov
(bad)
ins
mov
mov
test
into
mov
test
into
mov
test
into
mov
test
into
mov
test
into
mov
or
daa
cmp
stc
jmp
and
add
mov
sbb
cwde
mov
jecxz
jecxz
sbb
cwde
mov
jecxz
jecxz
out
cmp
cdq
push
mov
cmp
sar
cmp
pushf
mov
sbb
pop
cmp
push
pushf
mov
sbb
pop
cmp
push
pushf
mov
cld
lods
jae
and
add
cmp
inc
push
inc
mov
pop
mov
inc
mov
mov
pop
mov
add
sar
and
mov
dec
rcl
outs
aas
cmp
stos
test
xor
cmp
inc
mov
mov
cmps
fidiv
aas
loop
pop
cmp
test
and
ja
or
pop
into
sub
bound
sub
and
mov
and
mov
jbe
jp
push
adc
mov
jbe
jp
push
adc
mov
jbe
jp
push
adc
mov
jmp
mov
sbb
xchg
mov
sti
test
and
les
or
push
(bad)
daa
inc
in
cmp
mov
sub
ds
or
or
push
mov
mov
icebp
cmp
aam
mov
pop
mov
inc
mov
mov
pop
mov
add
sar
and
mov
stos
test
xor
cmp
stos
test
xor
cmp
stos
test
xor
cmp
inc
mov
mov
cmps
fidiv
aas
inc
mov
mov
cmps
fidiv
aas
push
(bad)
daa
inc
in
cmp
aam
xchg
mov
inc
mov
mov
aas
inc
mov
mov
aas
inc
mov
mov
aas
stos
mov
ds
or
stos
mov
ds
or
loop
pop
cmp
test
inc
mov
loop
pop
cmp
test
push
mov
or
push
mov
in
nop
cmp
shl
nop
cmp
shl
nop
cmp
shl
icebp
cmp
aam
mov
mov
icebp
cmp
aam
mov
jo
gs
mov
and
jae
mov
jo
gs
mov
mov
cmp
mov
cmp
sub
mov
pop
sub
mov
cli
mov
mov
sbb
mov
sbb
mov
sub
mov
sub
mov
scas
fld
cmp
sbb
mov
jecxz
xchg
cmp
sbb
mov
jecxz
xchg
cmp
xchg
into
sub
dec
add
sub
into
sub
dec
add
or
cmp
mov
mov
xchg
mov
cmp
cdq
mov
xor
push
(bad)
daa
inc
in
cmp
mov
push
mov
mov
icebp
cmp
aam
mov
and
sub
bnd
cmp
pop
and
mov
jo
(bad)
mov
xor
cdq
mov
jg
cld
cmp
pushf
daa
fdivr
arpl
sub
arpl
sub
and
mov
jl
jp
push
adc
mov
jl
jp
push
adc
mov
in
cwde
scas
mov
mov
push
mov
std
adc
inc
cmp
sbb
inc
mov
rcr
arpl
call
jle
xchg
fbld
imul
jle
push
loope
cmp
call
jle
ins
loopne
cmp
call
and
or
dec
idiv
adc
aas
xchg
pop
cmp
pop
aas
iret
mov
out
pusha
cmp
iret
mov
out
xor
pop
aas
sub
leave
out
ds
fidivr
sti
pop
jge
sub
aas
mov
cmp
mov
adc
pop
mov
xchg
xor
enter
out
xor
ss
sub
ds
aas
movs
retf
sbb
dec
pop
fs
dec
push
out
pop
or
push
mov
fs
sub
mov
mov
aas
repnz
push
mov
inc
out
mov
movs
aad
aas
adc
push
mov
or
push
mov
push
shl
mov
ds
cmp
or
aas
pushf
or
aas
sub
lds
aas
fnstcw
mov
fs
pop
aas
add
idiv
inc
pushf
movs
cmp
jmp
fidivr
dec
jbe
scas
xchg
mov
xchg
rol
pop
push
mov
fwait
ins
(bad)
mov
mov
daa
aas
test
es
aas
push
inc
retf
mov
xchg
dec
push
aas
in
or
add
push
aas
in
or
add
ds
ins
or
aas
shl
cmp
jp
mov
or
or
stc
xchg
pop
aas
jnp
(bad)
mov
in
(bad)
sbb
rcr
mov
push
jo
mov
push
cmp
or
scas
cmp
sub
outs
sahf
mov
push
cmp
or
scas
cmp
out
jge
xchg
inc
xchg
mov
out
jge
xchg
inc
xchg
mov
aas
sbb
xcrypt-cfb
cmps
and
dec
push
adc
and
scas
cmp
mov
jl
add
(bad)
fst
mov
cs
cmc
ds
cmp
or
scas
cmp
cmp
and
xchg
or
mov
sub
cld
mov
and
scas
cmp
mov
jle
cmps
sbb
cmp
mov
jge
ins
mov
add
mov
scas
cmp
mov
jg
xor
aaa
cmp
out
jnp
mov
sbb
out
jnp
mov
sbb
scas
inc
jg
jne
and
mov
scas
sbb
cmp
mov
jp
dec
(bad)
imul
in
popf
ds
jmp
dec
mov
jno
cwde
shr
jl
iret
pop
and
xor
jge
jge
xchg
mov
jle
mov
fidivr
fwait
xchg
fiadd
jb
push
lods
dec
ds
xchg
fiadd
jb
add
sbb
mov
xchg
data16
mov
jge
push
std
loop
mov
mov
fild
jb
pop
lods
dec
ds
imul
mov
clc
(bad)
jnp
lahf
loopne
ds
cld
mov
pop
mov
add
or
mov
mov
inc
cmp
mov
mov
mov
jge
mov
dec
cs
int3
cdq
push
ds
out
nop
ds
push
jns
in
in
adc
pop
and
jp
adc
xor
mov
in
inc
cmp
rcl
xor
aas
inc
loope
cmp
sub
ds
js
xchg
xchg
mov
inc
cmp
mov
shr
sbb
mov
shr
sbb
mov
repz
and
inc
stc
inc
mov
pusha
mov
retf
mov
aas
dec
js
cmp
mov
xlat
mov
inc
mov
and
jo
inc
mov
add
inc
mov
push
movs
dec
aas
dec
add
stc
cld
sbb
mov
lea
sbb
mov
iret
pop
and
mov
call
mov
call
jo
retf
mov
push
shl
mov
push
shl
mov
xor
adc
nop
das
cmc
mov
std
ficom
jo
lea
pop
stc
adc
ss
cmc
mov
and
das
daa
jle
dec
frstor
gs
pop
mov
xchg
pop
mov
xchg
jle
(bad)
arpl
call
xor
mov
daa
jle
rcr
arpl
call
repnz
and
mov
xchg
fbld
imul
inc
mov
in
daa
aas
cli
push
xor
mov
cli
push
xor
mov
test
je
mov
sbb
stos
fnstsw
mov
mov
sbb
stos
fnstsw
mov
mov
in
cmp
rcr
add
test
mov
rol
mov
jo
cmp
mov
into
lea
add
cwde
ds
push
jae
add
addr16
ds
repnz
mov
test
jns
mov
aaa
gs
push
pop
stos
mov
fmul
mov
push
push
ja
in
hlt
mov
scas
mov
sti
mov
xor
aas
fxch
test
mov
jle
mov
fidivr
fwait
xchg
fld
jb
push
lods
dec
ds
xchg
fld
jb
add
out
mov
mov
mov
fld
jb
add
(bad)
jnp
lahf
loopne
ds
cld
mov
pop
mov
add
or
mov
sbb
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
fsub
add
add
cmp
add
add
add
add
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
aas
add
add
pop
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
outs
gs
arpl
xor
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
add
inc
sbb
add
add
add
add
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
int3
int3
cmp
arpl
jo
arpl
ss
add
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
addr16
outs
xor
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
add
inc
sbb
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
add
inc
sbb
gs
outs
jbe
xor
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
gs
jae
arpl
ss
add
add
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
push
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
jae
popa
je
gs
xor
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
inc
sbb
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
gs
jae
arpl
ss
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
outs
gs
arpl
xor
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
aas
add
add
pop
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
outs
gs
arpl
xor
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
add
inc
sbb
add
add
add
add
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
gs
jae
arpl
ss
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
outs
cmp
imul
jb
xor
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
aas
add
add
pop
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
jae
jb
je
push
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
aas
add
add
add
add
mov
add
(bad)
inc
sbb
add
add
(bad)
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
adc
add
pop
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
sbb
add
sbb
add
sbb
add
and
add
and
add
pop
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
or
add
sbb
add
sbb
add
sbb
add
adc
add
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
sub
add
sub
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
sub
add
sub
add
dec
add
add
add
dec
add
add
add
sub
add
xor
add
xor
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
push
add
add
add
push
add
add
add
data16
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
pop
add
add
add
pop
add
add
add
push
add
add
add
push
add
add
add
pusha
add
add
add
add
add
pop
add
add
add
pop
add
add
add
push
add
add
add
imul
add
pop
add
add
add
push
add
add
add
add
add
add
add
add
jge
add
jae
add
ja
add
ins
add
add
add
add
jp
add
jno
add
jnp
add
je
add
je
add
jno
add
jno
add
jns
add
outs
add
add
add
ins
add
add
add
outs
add
add
add
jo
add
imul
add
add
or
add
add
add
add
add
add
add
add
add
jle
add
jg
add
test
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
dec
add
add
add
std
repnz
add
add
(bad)
inc
sbb
add
add
add
add
add
inc
sbb
add
add
adc
add
inc
sbb
add
add
add
jb
add
add
add
jb
data16
mov
stos
inc
data16
cmp
cmps
push
gs
cmp
mul
loopne
and
loopne
cmp
xor
shr
xchg
cmp
loopne
cmp
out
xchg
cmp
loopne
cmp
and
add
cmp
(bad)
dec
ds
and
add
cmp
in
ds
cmp
cmp
lods
push
shl
shl
rcr
ds
leave
loope
push
or
mov
cmp
or
mov
cmp
fiadd
inc
xchg
out
mov
pop
cmp
fiadd
inc
xchg
out
mov
pop
cmp
jno
ds
xchg
jecxz
mov
outs
cmp
mov
inc
cmp
sbb
(bad)
leave
loope
sub
mov
(bad)
leave
loope
and
jbe
push
xchg
jecxz
jb
mov
push
xchg
jecxz
xchg
cmp
add
cmp
add
cmp
add
cmp
cmp
pushf
cmp
cmp
pushf
cmp
cmp
pushf
cmp
loopne
xchg
cmp
test
cmp
or
ds
cmp
aas
and
mov
xor
xor
and
mov
and
cmp
cmp
pushf
cmp
cmp
pushf
cmp
test
cmp
or
cmp
mov
loopne
xchg
cmp
mov
in
cmp
pop
aas
outs
cmp
dec
in
cmp
shr
sub
cmp
adc
inc
cmp
cmp
lods
push
shl
cmp
out
mov
pop
cmp
cmp
inc
xchg
out
mov
pop
cmp
fwait
ret
mov
sub
mov
(bad)
leave
loope
lock
add
cmp
mov
inc
cmp
fld
pop
ins
mov
add
mov
ds
ins
mov
add
mov
ds
mov
push
xor
cmp
adc
cmp
adc
cmp
add
cmp
mov
repz
jo
mov
in
cdq
cmp
mov
cmp
clc
push
mov
cmp
inc
adc
cmp
add
cmp
push
xchg
jecxz
jb
mov
push
xchg
jecxz
sbb
pushf
cmp
cmps
jecxz
sbb
pop
cmp
loopne
jae
shr
xchg
cmp
shr
xchg
cmp
loopne
cmp
jbe
cmp
mov
cmp
ds
dec
ds
and
add
cmp
test
push
movs
data16
ds
xchg
jecxz
pushf
mov
pushf
mov
xchg
cmp
add
cmp
clc
jge
cmp
push
dec
data16
mov
stos
inc
data16
cmp
cmps
push
gs
cmp
mul
loopne
and
loopne
cmp
mov
cmp
or
mov
cmp
dec
lahf
ds
adc
jne
ds
push
and
call
adc
cmp
cmp
aas
inc
loopne
cmps
loopne
aas
pop
jae
ds
pop
aas
out
push
ds
lahf
and
pop
jae
ds
pop
aas
out
push
ds
lahf
and
enter
(bad)
jle
aas
in
cmps
cmp
enter
(bad)
jle
aas
in
cmps
cmp
mov
cmp
aas
loopne
mov
sahf
mov
imul
push
retf
xor
inc
loop
cmp
mov
call
sub
aas
pusha
pop
daa
cmp
jmp
push
cmp
jmp
daa
cmp
jmp
push
cmp
jmp
ins
cmp
and
aas
inc
cmc
mov
aas
loopne
add
aas
sbb
aas
add
cmp
mov
mov
aas
and
or
and
aas
test
push
push
aas
test
push
push
aas
test
push
push
aas
ss
add
ss
add
ss
add
push
mov
ds
xchg
push
ds
and
push
mov
ds
xchg
push
ds
and
pop
pop
out
cmp
pop
sbb
aas
pop
pop
out
cmp
pop
sbb
aas
xor
test
add
xor
test
add
xor
test
add
cmp
and
push
mov
ds
xchg
push
ds
out
and
push
mov
ds
sbb
aas
push
pop
out
cmp
push
sbb
aas
push
pop
out
cmp
rcr
sub
xor
out
cmp
aas
loopne
mov
pop
daa
cmp
jmp
push
cmp
jmp
daa
cmp
jmp
push
cmp
jmp
push
cmp
mov
mov
aas
add
mov
aas
loopne
add
aas
rcl
adc
sbb
xor
mov
sub
rcl
adc
sbb
xor
mov
sub
pop
or
enter
scas
dec
push
aas
(bad)
jnp
ds
and
std
jnp
ds
and
jmp
mov
pop
cmp
dec
mov
sbb
ds
cmc
mov
aas
sub
into
push
mov
adc
sbb
xor
mov
aas
sub
into
push
mov
adc
sbb
dec
mov
sbb
ds
cmp
sar
aas
and
or
and
aas
inc
loopne
cmps
loopne
aas
inc
loopne
cmps
loopne
aas
loop
push
ds
lahf
and
pop
jae
ds
pop
aas
pop
jae
ds
pop
aas
out
push
ds
lahf
and
in
cmps
cmp
les
cmp
enter
(bad)
jle
aas
in
cmps
cmp
inc
loop
cmp
mov
imul
pop
ins
cmp
and
aas
cmps
pop
mov
jns
push
aas
cmps
pop
mov
jns
push
aas
test
push
push
aas
cmps
pop
mov
jns
push
aas
(bad)
pusha
mov
mov
push
aas
pop
dec
lahf
ds
adc
jne
ds
push
and
call
adc
cmp
cmp
aas
sub
cmp
test
call
add
add
or
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
adc
or
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
add
and
add
dec
add
add
add
dec
add
dec
add
add
sub
sldt
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
and
add
add
dec
add
add
and
xor
add
dec
add
inc
add
add
push
add
add
inc
add
push
add
add
dec
add
add
xor
xor
add
add
add
add
sub
cmp
cmp
add
lldt
inc
add
add
add
aas
add
add
add
add
add
add
add
dec
add
dec
add
add
push
add
add
push
add
push
add
add
imul
push
add
add
pop
add
add
add
add
add
add
add
xor
add
aaa
add
add
add
pop
add
add
add
add
pop
add
add
push
pop
add
add
add
add
cmp
arpl
inc
add
add
add
add
push
add
popa
add
add
outs
add
add
pusha
add
ins
add
add
outs
add
add
add
inc
add
add
jno
inc
add
add
popa
add
add
ins
add
outs
add
add
add
loopne
push
daa
push
aas
xchg
sub
aas
add
add
add
add
mov
cmp
mov
mov
std
or
cmp
or
cmp
pop
sahf
mov
sub
sahf
mov
sbb
mov
out
mov
xchg
mov
ss
xchg
(bad)
cmp
sub
mov
xchg
(bad)
cmp
sub
mov
xchg
(bad)
cmp
sub
mov
xchg
(bad)
cmp
add
mov
fistp
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
and
inc
mov
and
inc
mov
and
inc
mov
cli
mov
push
mov
cli
mov
push
mov
lds
leave
aas
hlt
leave
stos
mov
lds
leave
aas
hlt
leave
stos
mov
imul
mov
cmp
xor
repnz
mov
repnz
mov
repnz
mov
cmps
das
fs
fwait
(bad)
sar
and
in
mov
and
in
mov
and
in
mov
and
in
mov
cmps
das
fs
(bad)
fcom
aas
cmps
das
fs
rol
or
jbe
push
mov
jb
or
jbe
push
mov
jb
or
fnstcw
xchg
ds
mov
xchg
ds
mov
xchg
ds
mov
mov
add
mov
xor
push
aas
add
mov
xor
push
aas
add
mov
xor
push
aas
add
mov
push
out
xchg
xchg
pop
sti
mov
push
out
xchg
xchg
pop
sti
mov
push
out
xchg
xchg
pop
sti
mov
push
out
xchg
xchg
pop
sti
mov
pop
cmps
xchg
xor
enter
in
ds
cmps
xchg
xor
enter
in
ds
cmps
xchg
xor
enter
adc
aas
adc
adc
aas
adc
adc
aas
adc
adc
aas
adc
sub
push
out
xchg
aam
sti
mov
push
out
xchg
aam
sti
mov
push
out
xchg
aam
sti
mov
push
out
xchg
aam
sti
mov
and
int3
aas
leave
inc
mov
and
int3
aas
leave
inc
mov
and
int3
aas
leave
inc
mov
push
and
aas
push
and
aas
push
and
aas
push
and
aas
call
mov
call
mov
call
mov
call
mov
sub
push
sbb
dec
jl
mov
push
sbb
dec
jl
mov
push
sbb
dec
jl
mov
push
sbb
daa
jbe
mov
cmp
pusha
cmp
imul
or
mov
inc
call
jecxz
xchg
add
jmp
mov
inc
jns
jmp
mov
inc
and
ds
call
inc
jl
sub
xor
jo
inc
jl
sub
xor
jo
inc
jl
sub
xor
jo
inc
jl
sub
xor
jo
jae
jmp
ror
cmp
ror
cmp
(bad)
fcom
aas
stos
das
fs
(bad)
fcom
aas
stos
das
fs
cmp
cmp
call
cmp
int3
sub
aas
call
jmp
ss
call
jmp
ss
call
jmp
ss
call
jmp
cmp
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
clc
mov
push
mov
clc
mov
push
mov
in
add
aas
stos
das
fs
aam
jne
popa
arpl
aam
jne
popa
arpl
aam
jne
popa
arpl
aam
jne
popa
arpl
push
add
aas
pmaxsw
cmp
mov
aas
sub
adc
std
or
cmp
jmp
retf
cmp
out
xchg
nop
pop
sahf
mov
sub
sahf
mov
sbb
mov
and
aas
les
leave
aas
hlt
leave
stos
mov
les
leave
aas
hlt
leave
stos
mov
ret
repz
aas
ja
inc
mov
inc
cmp
loop
mov
inc
cmp
pop
dec
mov
push
and
dec
pop
dec
mov
push
and
push
outs
push
mov
mov
outs
aas
sub
mov
mov
mov
mov
inc
mov
sub
ds
push
outs
pop
ds
or
cmp
push
outs
pop
ds
or
cmp
push
mov
mov
sbb
jg
push
mov
mov
sbb
jg
push
pop
pop
ds
retf
mov
aas
push
pop
pop
ds
retf
mov
aas
daa
xchg
pop
mov
xchg
push
daa
xchg
pop
mov
xchg
push
push
retf
pop
mov
jns
icebp
jns
mov
int
xchg
ds
xchg
add
int
and
mov
lods
aam
ds
int
lds
aas
jne
inc
aas
inc
aaa
movs
mov
sbb
xchg
ds
aaa
movs
mov
sbb
xchg
mov
and
inc
test
scas
dec
mov
inc
test
mov
mov
xchg
je
mov
jns
je
cmp
mov
cmp
mov
cmp
daa
mov
mov
sub
mov
(bad)
xor
daa
mov
(bad)
xor
daa
mov
into
enter
inc
or
and
cmp
sahf
fimul
(bad)
xchg
fdivr
push
pop
sbb
popa
inc
add
les
das
cmp
test
dec
ds
jbe
cmp
gs
xor
inc
cmp
gs
xor
inc
cmp
(bad)
push
pop
lods
push
sar
(bad)
push
pop
lods
push
sar
cmp
popf
jnp
cmp
xor
popf
jnp
cmp
ds
and
js
push
mov
movs
cmp
stos
je
mov
inc
cmp
jge
cli
xor
xor
cmp
add
sbb
in
pop
aas
imul
mov
sub
pop
mov
sub
push
dec
pop
inc
cmp
cwde
sbb
xor
cmp
xchg
movs
cmp
xchg
movs
cmp
cmc
jl
xor
popf
jnp
cmp
xor
popf
jnp
cmp
mov
add
jns
xor
pop
cmp
xchg
int
aas
xor
pop
cmp
xchg
int
aas
jmp
aas
mov
inc
dec
cmp
mov
(bad)
aas
mov
movs
cmp
mov
ja
cmp
aas
sbb
ja
cmp
aas
sbb
mov
aas
cli
call
push
je
cli
call
jmp
jns
test
int
sar
test
retf
mov
sti
sbb
retf
mov
sti
sbb
ins
pop
or
addr16
arpl
push
adc
aas
push
cmp
mov
and
cmp
xor
fs
pop
aas
sub
idiv
ss
idiv
ss
or
addr16
stos
cmp
cld
sbb
popf
xor
mov
xchg
xchg
sar
add
ds
xchg
sar
add
ds
sub
js
aaa
mov
idiv
aaa
mov
test
inc
and
mov
(bad)
xor
daa
mov
rcr
jg
sub
cmp
mov
outs
pop
mov
sbb
js
jns
pop
mov
sbb
js
dec
mov
cmp
inc
mov
dec
mov
cmp
inc
mov
mov
retf
mov
aas
mov
retf
mov
aas
aad
sar
push
lock
cmp
aad
sar
push
lock
cmp
push
push
add
and
and
stc
loop
aas
dec
cwde
xchg
ds
add
adc
inc
aas
ret
mov
mov
fdivr
ins
mov
inc
cmp
ins
mov
inc
cmp
movs
test
dec
aas
retf
aas
and
aas
aaa
adc
aas
mov
hlt
mov
aas
mov
inc
cmp
inc
cmp
loop
cmp
inc
cmp
push
dec
cmp
inc
cmps
cmp
sbb
inc
cmps
cmp
add
dec
mov
add
outs
aas
push
nop
int
dec
mov
inc
aas
mov
and
ins
(bad)
je
xchg
or
add
jo
add
(bad)
inc
sbb
add
add
add
add
inc
sbb
add
add
(bad)
(bad)
inc
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
addr16
outs
xor
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
add
inc
sbb
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
add
inc
sbb
gs
outs
jbe
xor
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
gs
jae
arpl
ss
add
add
add
add
add
add
add
add
inc
sbb
add
add
(bad)
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
outs
add
add
add
ins
add
add
add
imul
add
add
pop
add
add
add
pusha
add
add
add
bound
add
bound
add
inc
add
add
add
add
push
add
add
add
jno
add
inc
add
add
add
inc
add
add
add
add
add
add
add
push
add
pop
add
add
add
cmp
add
cmp
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
push
add
add
add
push
add
add
add
imul
add
dec
add
add
add
add
add
and
add
dec
add
add
add
add
add
inc
add
add
add
pop
add
add
add
data16
add
add
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
inc
add
add
add
sbb
add
aas
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
or
add
or
add
sub
add
sub
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
pop
add
add
add
adc
add
and
add
and
add
sbb
add
push
add
add
add
add
repnz
add
add
(bad)
inc
sbb
add
add
add
add
inc
sbb
add
add
push
add
(bad)
inc
sbb
add
add
add
add
add
add
add
data16
mov
stos
inc
data16
cmp
cmps
push
gs
cmp
mul
loopne
and
loopne
cmp
mov
cmp
jecxz
sbb
inc
ds
xchg
cmp
loopne
cmp
out
xchg
cmp
loopne
cmp
and
add
cmp
(bad)
dec
ds
and
add
cmp
lods
push
shl
ds
xchg
mov
inc
ds
cmp
cmp
in
ds
cmp
cmp
lods
push
shl
ds
(bad)
pop
cmp
movs
data16
ds
leave
loope
lods
jno
ds
xchg
jecxz
mov
outs
cmp
sbb
(bad)
leave
loope
sub
mov
(bad)
leave
loope
out
mov
inc
cmp
shl
push
xchg
jecxz
jb
mov
push
xchg
jecxz
xchg
cmp
add
cmp
add
cmp
add
cmp
cmp
pushf
cmp
cmp
pushf
cmp
cmp
pushf
cmp
test
cmp
or
ds
xchg
cmp
test
cmp
aas
and
mov
xor
xor
and
mov
and
cmp
cmp
pushf
cmp
cmp
pushf
cmp
test
cmp
or
cmp
jo
mov
pop
aas
outs
cmp
dec
in
cmp
pop
aas
outs
cmp
dec
in
cmp
pop
aas
outs
cmp
shr
sub
cmp
cmp
inc
xchg
ret
shl
cmp
out
mov
pop
cmp
cmp
add
cmp
fwait
ret
mov
sub
mov
(bad)
leave
loope
out
mov
inc
cmp
fld
pop
ins
mov
add
mov
ds
ins
mov
add
mov
ds
mov
push
xor
cmp
adc
cmp
adc
cmp
add
cmp
mov
repz
jo
mov
in
cdq
cmp
mov
cmp
clc
push
mov
cmp
inc
adc
cmp
add
cmp
push
xchg
jecxz
jb
mov
push
xchg
jecxz
sbb
pushf
cmp
cmps
jecxz
sbb
pop
cmp
loopne
jae
shr
xchg
cmp
shr
xchg
cmp
loopne
cmp
jbe
cmp
mov
cmp
ds
dec
ds
and
add
cmp
test
push
movs
data16
ds
xchg
jecxz
pushf
mov
pushf
mov
xchg
cmp
add
cmp
clc
jge
cmp
push
dec
data16
mov
stos
inc
data16
cmp
cmps
push
gs
cmp
mul
loopne
and
loopne
cmp
mov
cmp
js
cmp
enter
js
cmp
enter
js
cmp
pop
cmp
data16
aas
or
cmp
aas
or
cmp
les
enter
les
enter
les
enter
les
enter
les
enter
les
enter
js
cmp
jp
add
cmp
jp
push
les
xor
push
les
xor
push
les
jne
cmp
les
jne
cmp
dec
mov
cmp
dec
mov
cmp
test
lock
std
cld
cmp
jp
pop
dec
lahf
ds
adc
jne
ds
push
and
call
adc
cmp
cmp
aas
sub
cmp
test
pushf
cmps
loopne
aas
pop
jae
ds
pop
aas
out
push
ds
lahf
and
pop
jae
ds
pop
aas
out
push
ds
lahf
and
enter
(bad)
jle
aas
in
cmps
cmp
enter
(bad)
jle
aas
in
cmps
cmp
loopne
mov
pop
daa
cmp
jmp
push
aas
mov
cmp
aas
loopne
mov
and
mov
imul
push
retf
xor
inc
loop
cmp
mov
ins
cmp
and
aas
inc
cmc
mov
aas
sbb
aas
add
cmp
mov
add
aas
add
cmp
and
or
and
aas
test
push
push
aas
test
push
push
aas
test
push
push
aas
ss
add
ss
add
ss
add
ds
push
ds
and
push
mov
ds
mov
ds
xchg
push
ds
and
pop
pop
out
cmp
pop
sbb
aas
pop
pop
out
cmp
pop
sbb
aas
xor
test
add
xor
test
add
xor
test
add
cmp
and
push
mov
ds
mov
ds
xchg
push
ds
out
and
push
sbb
aas
push
pop
out
cmp
push
sbb
aas
push
pop
out
cmp
push
sbb
aas
rcr
sub
inc
pop
daa
cmp
jmp
mov
jne
cmp
cmp
aas
mov
jmp
mov
aas
add
ss
add
cmp
mov
add
aas
rcl
adc
sbb
xor
mov
sub
rcl
adc
sbb
xor
mov
sub
pop
or
enter
scas
dec
push
aas
(bad)
jnp
ds
and
std
jnp
ds
and
jmp
mov
pop
cmp
dec
mov
sbb
ds
cmc
mov
aas
sub
into
push
mov
adc
sbb
xor
mov
aas
sub
into
push
mov
adc
sbb
dec
mov
sbb
ds
cmp
sar
aas
and
or
and
aas
inc
loopne
cmps
loopne
aas
inc
loopne
cmps
loopne
aas
loop
push
ds
lahf
and
pop
jae
ds
pop
aas
pop
jae
ds
pop
aas
out
push
ds
lahf
and
in
cmps
cmp
les
cmp
enter
(bad)
jle
aas
in
cmps
cmp
inc
loop
cmp
mov
imul
pop
ins
cmp
and
aas
cmps
pop
mov
jns
push
aas
cmps
pop
mov
jns
push
aas
test
push
push
aas
cmps
pop
mov
jns
push
aas
(bad)
pusha
mov
mov
push
aas
pop
dec
lahf
ds
adc
jne
ds
push
and
call
adc
cmp
cmp
aas
sub
cmp
test
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
push
add
add
add
add
add
add
add
add
add
add
daa
add
add
or
inc
add
add
add
add
add
add
add
inc
add
add
pop
add
pop
add
add
pop
add
add
dec
add
add
and
sub
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
and
das
add
add
inc
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
cmp
add
adc
push
add
add
add
add
add
add
add
add
dec
add
dec
add
add
push
add
add
dec
add
push
add
add
data16
add
add
arpl
push
add
add
pop
add
add
add
pop
add
add
add
add
add
xor
cmp
add
pop
add
add
add
pop
add
add
add
inc
add
add
add
add
cmp
pusha
add
add
pop
add
add
add
add
add
add
add
ins
add
popa
add
add
pop
add
add
pop
add
add
push
add
add
outs
add
add
js
jl
ja
add
jns
jae
jno
add
outs
add
jbe
add
jle
jge
jne
add
jg
je
jnp
add
add
add
je
add
add
add
add
xor
pop
lds
pop
cmps
aas
add
add
add
add
arpl
cmp
mov
mov
std
or
test
std
or
test
and
test
and
jle
(bad)
mov
mov
(bad)
mov
mov
xor
cmp
leave
sub
mov
xchg
(bad)
cmp
sub
mov
xchg
(bad)
cmp
sub
mov
xchg
(bad)
cmp
sub
mov
xchg
(bad)
cmp
add
mov
or
add
mov
or
add
mov
or
add
mov
or
add
mov
imul
movs
aas
imul
movs
aas
imul
movs
aas
imul
movs
aas
imul
movs
aas
imul
mov
mov
lods
ins
mov
mov
adc
mov
mov
jl
test
inc
mov
cmp
xor
inc
mov
cmp
xor
inc
mov
cmp
xor
inc
mov
cmp
xor
psubb
cmp
jecxz
cmps
aas
psubb
cmp
rol
or
jbe
push
mov
jb
or
jbe
push
mov
jb
or
fnstcw
xchg
ds
mov
xchg
ds
mov
xchg
ds
mov
mov
add
mov
xor
push
aas
add
mov
xor
push
aas
add
mov
xor
push
aas
add
mov
push
out
xchg
repnz
cmp
or
mov
repnz
cmp
or
mov
repnz
cmp
or
mov
repnz
cmp
mov
xchg
xor
enter
in
ds
cmps
xchg
xor
enter
in
ds
cmps
xchg
xor
enter
adc
aas
adc
cmp
xor
push
aas
adc
cmp
xor
push
aas
adc
cmp
xor
push
aas
adc
cmp
push
out
xchg
aaa
loop
sub
sub
push
out
xchg
aaa
loop
sub
sub
push
out
xchg
aaa
loop
sub
sub
push
out
xchg
aaa
loop
sub
sub
push
out
xchg
aaa
loop
mov
xor
shl
aas
in
idiv
jo
aas
in
idiv
jo
aas
in
idiv
jo
aas
in
idiv
jo
aas
in
idiv
jmp
cmp
xor
xchg
jmp
cmp
xor
xchg
jmp
cmp
xor
xchg
jmp
dec
jl
mov
push
sbb
dec
jl
mov
push
sbb
dec
jl
mov
push
sbb
dec
jl
mov
push
sbb
daa
jbe
mov
cmp
pusha
cmp
imul
or
mov
inc
call
jecxz
xchg
add
jmp
mov
inc
jns
jmp
mov
inc
and
ds
call
inc
jl
sub
xor
jo
inc
jl
sub
xor
jo
inc
jl
sub
xor
jo
inc
jl
sub
xor
jo
jae
jmp
ror
cmp
ror
cmp
cli
in
mov
mov
cli
in
mov
mov
cmp
cmp
call
cmp
int
ss
call
xor
aas
call
xor
aas
call
xor
aas
call
xor
aas
sub
adc
and
out
xchg
jbe
adc
and
out
xchg
jbe
adc
and
out
xchg
jbe
adc
inc
dec
xchg
and
aas
fst
mov
and
aas
fst
mov
jmp
mov
addr16
cmp
aam
jne
popa
arpl
aam
jne
popa
arpl
aam
jne
popa
arpl
aam
jne
popa
arpl
push
add
aas
push
out
in
aaa
mov
aas
sub
adc
aad
push
cmp
sub
adc
aad
push
cmp
sub
(bad)
xchg
aas
sub
(bad)
les
mov
push
shl
aas
mov
mov
push
shl
mov
addr16
mov
gs
mov
mov
or
xchg
lahf
push
adc
and
cmp
int
mov
and
cmp
int
mov
adc
xor
call
add
mov
call
add
mov
call
add
mov
call
add
mov
call
add
mov
call
dec
xchg
test
push
mov
xor
mov
mov
add
test
cmp
add
test
cmp
fxch
xchg
mov
cmp
or
mov
mov
cmp
or
aas
fxch
xchg
mov
push
sub
sub
fxch
xchg
mov
push
mov
xor
pop
push
mov
jmp
loopne
cmp
xor
sbb
mov
mov
xor
jg
jae
pop
mov
outs
and
aas
jae
pop
mov
outs
and
aas
or
shl
pusha
sub
or
shl
pusha
sub
adc
jmp
ds
pop
idiv
dec
xchg
pop
aas
inc
imul
test
fistp
jg
test
stos
xor
mov
test
stos
xor
mov
ds
ds
or
push
ds
or
icebp
mov
dec
scas
popa
aas
xor
cmp
popa
aas
jl
inc
ds
mov
sbb
jne
ror
aas
mov
or
adc
mov
mov
ja
pusha
test
mov
xchg
div
adc
cmp
ror
lods
jne
ror
aas
cmp
test
aas
std
or
ds
aad
sub
data16
push
stc
(bad)
cmp
dec
add
aas
inc
cmp
sti
outs
lods
pop
aas
xchg
mov
lock
xchg
jbe
jp
(bad)
cmp
aas
xchg
cmp
aas
xchg
add
mov
jmp
ins
jmp
popf
ds
jmp
pop
mov
retf
aas
inc
std
pop
mov
sbb
aas
sahf
fimul
(bad)
xchg
fdivr
push
pop
sbb
popa
inc
add
les
das
cmp
test
dec
ds
jbe
cmp
out
sahf
and
popa
stos
sti
mov
bound
inc
mov
sub
jg
retf
ds
jecxz
mov
retf
ds
jecxz
mov
mov
jle
daa
pop
cmp
mov
jle
daa
pop
cmp
shl
mov
sbb
jne
ror
aas
inc
jmp
daa
mov
fnstsw
mov
add
sbb
in
pop
aas
imul
mov
cmp
jns
cld
ins
pop
mov
cmp
jns
retf
mov
dec
jae
aas
mov
mov
xchg
add
pop
mov
add
js
and
pop
mov
add
js
add
adc
sahf
lds
add
adc
sahf
lds
add
(bad)
cmp
ror
mov
inc
int
aas
mov
ja
jg
jae
popf
add
cmp
aam
addr16
add
(bad)
cmp
ror
ds
jne
mov
jne
pop
call
daa
cmp
sbb
mov
ins
lods
inc
mov
dec
cmps
and
mov
inc
xor
aas
pop
xchg
bound
int
sar
test
int
sar
test
retf
mov
sti
sbb
retf
mov
sti
sbb
ins
pop
or
addr16
arpl
push
adc
aas
push
cmp
mov
and
cmp
xor
fs
pop
aas
sub
idiv
ss
idiv
ss
or
addr16
stos
cmp
cld
sbb
popf
xor
mov
xchg
xchg
sar
add
ds
xchg
sar
add
ds
sub
js
aaa
mov
idiv
aaa
mov
and
or
aas
dec
cmp
or
jb
aas
dec
cmp
lock
into
and
lock
into
and
push
hlt
pop
mov
repnz
js
push
hlt
pop
mov
repnz
js
std
popf
jmp
mov
jmp
mov
pop
mov
ins
in
ja
mov
pop
mov
ins
in
ja
popf
cmp
cmp
add
jge
popf
cmp
cmp
add
jge
iret
or
cmp
ins
mov
jge
push
ds
sbb
ds
mov
cmp
outs
call
xchg
cmp
mov
cmps
and
cmp
pop
es
cmps
and
cmp
pop
es
movs
test
dec
aas
retf
aas
and
aas
aaa
adc
aas
aaa
test
cmp
xor
mov
out
add
add
out
add
add
out
push
cmp
push
jge
out
push
cmp
push
jge
sbb
push
cmp
into
loopne
aas
stc
in
sub
cwde
int3
jno
mov
in
jmp
ds
adc
sbb
dec
xchg
pop
aas
imul
enter
in
jmp
dec
aas
mov
jmp
cli
dec
aas
pop
rcl
jne
ror
aas
mov
or
adc
cmp
mov
push
repnz
pusha
test
mov
xchg
div
rcl
jne
ror
aas
mov
xchg
add
mov
pop
idiv
dec
xchg
pop
aas
popa
imul
xchg
add
shl
ds
xchg
pop
aas
popa
imul
xchg
mov
test
jbe
mov
xchg
add
mov
test
mov
xchg
div
rcl
jne
ror
aas
pusha
test
mov
xchg
div
adc
cmp
ror
cmp
es
aas
into
adc
aas
and
ja
and
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
add
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
addr16
outs
xor
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
add
inc
sbb
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
add
inc
sbb
gs
outs
jbe
xor
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
cmp
div
push
add
add
(bad)
inc
sbb
gs
jae
arpl
ss
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
add
add
(bad)
(bad)
(bad)
fsub
add
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
adc
add
add
add
add
(bad)
inc
sbb
push
jae
jb
je
push
add
add
add
add
add
(bad)
inc
sbb
add
add
add
add
add
add
inc
sbb
add
add
add
(bad)
inc
sbb
repnz
add
add
add
inc
sbb
add
aas
add
cmp
add
aas
add
add
add
add
add
add
inc
sbb
add
add
(bad)
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
imul
add
add
pop
add
add
add
push
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
popa
add
add
add
add
add
ins
add
add
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
bound
add
sub
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
das
add
add
add
das
add
add
add
and
add
inc
add
add
add
add
add
inc
add
add
add
cmp
add
cmp
add
xor
add
pop
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
dec
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
push
add
add
add
add
add
add
add
add
add
adc
add
sldt
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
add
jne
add
jge
add
jg
add
jg
add
jo
add
jo
add
jo
add
jno
add
outs
add
add
add
jae
add
ja
add
ja
add
jl
add
jns
add
jns
add
jp
add
jp
add
jp
add
outs
add
add
add
js
add
jbe
add
jbe
add
jbe
add
jb
add
jle
add
std
repnz
add
add
(bad)
inc
sbb
add
add
add
add
add
inc
sbb
add
add
sub
add
inc
sbb
add
add
add
out
add
add
add
mov
cmp
mov
pop
ds
clc
scas
ds
and
ds
(bad)
jb
scas
ds
lock
cmp
aam
sub
outs
mov
ds
pop
retf
sbb
fist
call
ds
aas
cmp
push
ja
ds
mov
ds
mov
ds
test
cmp
shl
cmp
inc
div
ds
shl
cmp
sbb
movs
cmp
mov
clc
scas
ds
popf
and
cmps
js
imul
scas
ds
js
ds
outs
xchg
ds
imul
out
mov
ds
test
cmp
loope
mov
ds
ret
cmp
mov
mov
ds
test
cmp
lock
ss
push
jmp
ds
push
jle
jbe
push
ds
pop
and
and
ds
retf
pop
ds
jg
sbb
aas
fmulp
loope
into
ins
pop
xor
aas
pop
xchg
jecxz
inc
test
jecxz
inc
test
add
scas
neg
movs
mov
ds
and
ds
jg
pop
and
sbb
sub
test
xchg
dec
sahf
sub
test
xchg
dec
sahf
sub
test
xchg
dec
inc
sub
mov
push
jle
test
mov
or
loope
mov
add
mov
add
clc
jne
cmp
ins
cmp
ds
cmp
ds
cmp
ds
cmp
aas
add
or
movs
mov
ds
or
movs
mov
ds
or
movs
mov
ds
xor
fcomp
jg
test
mov
ds
stos
movs
cmp
dec
stos
movs
cmp
push
std
sub
adc
xchg
push
std
sub
adc
xchg
ss
loope
ins
xchg
je
pop
xchg
jecxz
ins
xchg
je
pop
xchg
jecxz
ins
xchg
je
pop
xchg
jecxz
mov
xchg
jecxz
movs
in
mov
ds
xchg
jecxz
movs
in
mov
movs
in
mov
movs
in
mov
ds
xchg
jecxz
ins
xchg
je
or
aas
or
aas
or
aas
or
cmp
push
xor
out
cmp
adc
mov
add
aas
cdq
arpl
add
lds
add
add
inc
fistp
repnz
jge
mov
or
cmp
jg
lock
ins
cmp
cs
aas
add
cmp
jg
add
add
(bad)
popf
jl
xchg
aas
adc
adc
inc
xchg
aas
(bad)
popf
jl
xchg
aas
add
inc
xchg
aas
jmp
jl
mov
aas
adc
inc
ds
adc
jl
dec
adc
jl
mov
aas
(bad)
popf
jl
inc
adc
cmp
std
cmp
mov
std
cmp
add
inc
ds
adc
jl
inc
adc
mov
adc
cmp
mov
std
cmp
add
inc
ds
adc
jl
dec
adc
cmp
std
cmp
mov
std
cmp
mov
std
cmp
jmp
aas
adc
inc
ds
adc
jl
mov
aas
bswap
inc
ds
adc
jl
dec
adc
mov
adc
cmp
mov
in
ss
mov
in
ss
mov
in
ss
mov
in
ss
mov
in
ss
mov
std
cmp
mov
in
ss
mov
in
ss
mov
std
cmp
mov
in
ss
fmul
inc
ds
dec
aas
icebp
popf
jl
mov
aas
fmul
inc
ds
dec
aas
fstp
dec
aas
jmp
aas
fstp
dec
aas
mov
std
cmp
and
inc
ds
jl
dec
adc
mov
adc
ss
mov
in
ss
mov
std
cmp
and
inc
ds
jl
dec
adc
cmp
in
ss
mov
in
ss
adc
inc
ds
adc
jl
dec
adc
cmp
std
cmp
mov
in
ss
mov
in
ss
mov
std
cmp
mov
in
ss
mov
in
ss
repz
inc
or
adc
inc
ds
adc
jl
mov
aas
pop
hlt
or
sub
cmp
enter
dec
cli
cmp
enter
sub
cld
enter
hlt
or
mov
enter
add
add
je
cmp
enter
sub
cld
enter
dec
cli
cmp
enter
sub
cld
enter
sub
sub
sar
mov
sub
sar
sub
cmp
and
ds
and
mov
sub
sar
sub
cmp
and
ds
and
sub
cmp
and
mov
sub
sar
sub
cmp
and
sub
cmp
enter
je
cmp
enter
sub
cld
enter
dec
cli
cmp
enter
je
cmp
and
ds
and
lds
xor
cmp
loopne
leave
cmp
push
imul
cmp
rcr
cmp
pop
mov
ds
mov
ds
cli
sar
push
sar
mov
ds
or
pop
inc
add
dec
or
pop
inc
add
dec
or
pop
pop
pop
aas
dec
or
pop
pop
pop
aas
dec
or
pop
pop
pop
aas
sbb
cmp
int3
add
sbb
cmp
int3
add
sbb
cmp
int3
add
sbb
cmp
int3
add
sbb
cmp
int3
add
sbb
cmp
int3
add
sbb
cmp
int3
add
sbb
cmp
pusha
cmp
dec
cmp
pusha
cmp
dec
cmp
pusha
cmp
or
inc
fistp
dec
or
push
inc
add
dec
or
push
inc
add
dec
or
clc
push
pop
aas
dec
or
clc
push
pop
aas
dec
or
clc
push
pop
aas
dec
or
cmp
jg
dec
or
add
xor
dec
or
add
xor
loopne
cmp
lock
loopne
cmp
lock
dec
or
add
xor
dec
or
add
xor
push
shr
mov
ds
outs
aas
or
aam
inc
outs
outs
aas
lock
ds
(bad)
jge
ret
aas
jns
jle
iret
mov
jl
cmp
jl
shl
aas
call
and
aas
call
lods
push
aas
nop
ja
aas
cmp
outs
aas
add
outs
aas
mov
push
jge
cmp
jge
cmp
jge
cmp
outs
aas
add
aam
arpl
sar
in
outs
aas
in
sub
ds
jle
int3
mov
jge
mov
(bad)
jge
mov
arpl
fwait
and
jecxz
jl
mov
mov
aas
mov
mov
aas
mov
mov
aas
xor
jl
aaa
fwait
and
lea
aas
aaa
fwait
and
lea
aas
aaa
fwait
and
dec
mov
cli
test
outs
aas
pushf
sub
jge
cmp
jge
cmp
jle
ret
aas
call
aas
add
jg
iret
mov
jge
shl
aas
jb
jge
shl
aas
jb
jge
shl
aas
jno
jge
shl
aas
cwde
in
jle
ret
sbb
jge
shl
aas
cwde
in
jle
ret
sbb
jle
ret
sbb
jle
ret
sbb
jge
shl
aas
jno
jge
xor
jge
xor
push
aas
outs
movs
jge
xor
push
aas
outs
movs
jge
xor
push
aas
mov
jl
xor
shl
aas
add
fnstcw
(bad)
call
aad
(bad)
call
aad
dec
bnd
xor
dec
bnd
xor
dec
bnd
xor
dec
bnd
xor
lods
adc
aas
cs
and
fsub
aas
(bad)
cmps
fnstcw
fs
aad
fs
aad
push
add
add
pop
add
add
add
add
add
add
add
add
add
add
or
or
add
or
add
add
or
or
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
sbb
and
add
and
and
add
add
add
add
add
add
add
add
add
xor
sub
add
sub
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
sub
xor
add
dec
add
add
add
add
add
dec
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
cmp
xor
add
sub
xor
cmp
add
inc
add
pop
add
add
dec
add
add
add
add
add
cmp
inc
add
add
push
add
push
add
add
inc
add
add
add
pop
add
add
add
cmp
push
add
add
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
pop
add
pop
add
add
pop
add
add
add
add
pop
add
add
add
arpl
bound
add
add
push
add
jne
add
add
add
add
push
add
jne
add
add
ins
add
add
imul
jae
je
js
add
add
add
add
jp
jo
add
mov
test
add
add
jbe
jae
add
push
ins
add
add
movs
add
add
js
mov
add
fwait
add
ja
mov
add
add
pop
add
add
mov
jg
movs
add
jl
nop
add
add
add
add
add
add
add
add
add
lea
xchg
add
add
xchg
add
add
add
cwde
add
add
add
mov
rol
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
inc
mov
lea
add
add
add
add
pop
aad
mov
xor
jecxz
cmp
xor
jle
push
fst
mov
add
xchg
mov
mov
lods
mov
mov
test
and
dec
mov
pop
lea
shl
mov
pop
lea
jbe
mov
xor
mov
sub
sub
xor
mov
and
lods
mov
fwait
pop
or
mov
cli
andps
ret
mov
pop
jo
mov
sbb
pop
mov
pop
pop
xchg
mov
sub
pop
xchg
mov
add
cmp
xchg
dec
mov
or
jae
dec
mov
or
rol
mov
adc
xor
inc
test
or
iret
xchg
mov
or
iret
xchg
mov
js
mov
je
out
cmp
push
mov
mov
or
cmp
adc
push
aas
daa
or
cmp
adc
cmps
cmp
cmp
cmp
aas
push
je
mov
add
jb
lea
push
mov
cmp
xchg
mov
(bad)
out
aas
cmp
xchg
mov
(bad)
out
aas
cmp
xchg
mov
in
lods
fs
add
cmp
repnz
aas
adc
push
mov
adc
push
mov
mov
enter
test
aas
stc
sub
xchg
mov
stc
sub
xchg
mov
fxtract
mov
mov
cli
mov
jnp
sub
sub
xor
mov
sub
sub
xor
mov
and
lods
mov
fwait
pop
or
mov
cli
andps
ja
lods
mov
fnstcw
xchg
mov
pop
jo
mov
sbb
pop
mov
pop
pop
xchg
mov
sub
pop
xchg
mov
adc
popa
mov
ss
push
mov
sub
mov
jle
sbb
and
lods
mov
rcr
movs
mov
jno
popf
mov
pop
shl
jno
popf
mov
pop
shl
jno
popf
mov
mov
or
cmp
adc
push
aas
daa
or
cmp
adc
cmps
cmp
cmp
cmp
aas
push
je
mov
call
je
mov
call
je
mov
add
jb
lea
push
mov
cmp
xchg
mov
in
jae
cmp
xchg
mov
in
jae
cmp
xchg
mov
(bad)
out
aas
cmp
xchg
mov
jle
imul
adc
test
cmp
push
mov
cmp
push
mov
sbb
cmp
mov
cmps
ds
cs
fldenv
sub
sbb
sub
sbb
add
andps
add
andps
add
andps
jmp
mov
jmp
mov
jmp
mov
bnd
mov
cmp
bnd
mov
cmp
bnd
mov
cmp
bnd
mov
cmp
bnd
mov
cmp
bnd
mov
cmp
bnd
mov
mov
mov
mov
cli
mov
jnp
cmp
cli
mov
jnp
cmp
cli
mov
jnp
add
nop
mov
dec
