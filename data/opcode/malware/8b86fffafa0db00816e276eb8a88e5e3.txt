jne
sahf
sti
or
xchg
inc
stos
jg
push
cli
js
push
cli
pusha
int
data16
inc
fidiv
add
and
mov
ficom
ja
jo
inc
mov
jo
leave
call
xor
repz
ss
push
xor
inc
xor
rol
iret
push
cli
js
or
repz
fidiv
xchg
and
dec
xor
jo
inc
fdivp
or
pop
or
sbb
pusha
add
and
inc
inc
sub
sbb
sbb
pop
pushf
dec
adc
jl
pop
(bad)
ror
repnz
jo
pop
dec
rol
sub
inc
inc
fidiv
dec
pop
int3
inc
inc
fdivrp
add
fwait
mov
shr
inc
iret
fwait
mov
add
sti
aaa
dec
push
or
(bad)
dec
(bad)
jbe
inc
inc
push
jl
shl
adc
push
sbb
pushf
iret
inc
push
jo
jb
xor
pushf
iret
inc
jge
hlt
add
sti
push
inc
jge
hlt
add
adc
addr16
inc
fdivrp
jns
outs
xor
inc
hlt
add
and
jecxz
hlt
add
stc
jns
outs
xor
cs
sbb
sub
ins
cmp
sti
aas
dec
lea
mov
and
leave
dec
test
inc
int
xor
mov
dec
leave
movs
js
dec
test
jo
aaa
adc
test
into
sbb
mov
mov
add
push
inc
aad
inc
inc
mov
lods
shl
dec
sub
push
repnz
jo
inc
fidiv
dec
sbb
inc
fdivp
or
xor
jno
inc
ficomp
xor
(bad)
jno
outs
xor
or
inc
pop
mov
mov
ficomp
mov
sub
scas
xor
inc
fiadd
inc
inc
xor
xor
(bad)
movs
sbb
inc
inc
ficomp
inc
inc
fisub
sub
outs
xor
pusha
add
mov
inc
pop
pushf
push
adc
and
dec
cli
jo
fwait
repnz
mov
pushf
jo
data16
xor
rol
ss
jno
outs
xor
push
hlt
add
(bad)
jno
outs
xor
fs
add
cwde
xor
fidiv
xchg
inc
(bad)
retf
xchg
mov
xchg
or
mov
loope
jo
inc
sbb
enter
jo
in
test
inc
adc
and
retf
pop
xor
and
sub
sbb
sbb
sbb
lock
dec
xor
or
mov
jg
jo
mov
stc
shr
repz
xor
mov
and
inc
inc
push
cmc
mov
adc
cdq
xor
icebp
stos
lahf
out
inc
adc
jne
inc
fiadd
sub
sbb
loopne
jo
(bad)
jmp
idiv
jo
rcr
jns
and
fild
add
enter
jo
movs
push
cmc
lods
icebp
and
mov
and
sbb
xchg
adc
test
xor
and
std
add
mov
inc
sub
jo
inc
mov
cs
mov
mov
dec
ss
inc
fdivrp
add
cmp
fidivr
fiadd
test
and
cs
and
lods
test
(bad)
xor
fidivr
fiadd
test
fild
inc
inc
xor
sub
mov
sbb
push
xchg
(bad)
scas
shl
adc
and
inc
daa
inc
fiadd
int
push
xor
inc
inc
ficomp
inc
mov
(bad)
cwde
adc
fidiv
test
xchg
inc
out
mov
je
add
mov
mov
and
int
and
inc
inc
xlat
xchg
inc
out
mov
dec
out
mov
test
cmp
add
pop
mov
retf
cmp
test
lea
adc
stos
jl
pop
xchg
retf
mov
push
and
lock
repz
ficomp
add
push
and
lock
inc
mov
mov
(bad)
jg
inc
fdivr
push
loopne
xchg
aaa
fbstp
int
pop
mov
inc
inc
stos
mov
stos
pusha
mov
push
out
mov
(bad)
add
xor
mov
stc
add
push
pop
loop
inc
aaa
daa
dec
xor
pop
mov
pop
repz
fiadd
dec
shl
mov
sbb
mov
retf
cmp
push
inc
fbstp
jns
jo
adc
sti
sbb
cmc
mov
jae
or
mov
adc
mov
stos
les
inc
push
xor
mov
fiadd
dec
test
inc
mov
push
xchg
mov
and
int3
(bad)
(bad)
mov
mov
(bad)
mov
mov
sub
mov
(bad)
cs
mov
mov
test
leave
(bad)
fbstp
mov
sbb
pushf
push
adc
mov
mov
data16
and
fwait
mov
xor
jo
leave
mov
adc
mov
test
mov
daa
outs
ins
mov
sbb
and
jae
out
cmp
push
int
sub
add
fwait
pushf
int
and
sbb
pop
mov
retf
cmp
adc
mov
iret
pop
shl
mov
retf
sbb
xchg
mov
lea
js
xchg
xchg
adc
mov
test
mov
daa
outs
ins
mov
sbb
and
jae
out
cmp
xchg
mov
fwait
mov
inc
push
xor
inc
sbb
mov
mov
leave
stos
pusha
iret
pop
retf
mov
push
xor
xchg
mov
inc
push
xchg
dec
pusha
je
retf
and
mov
xchg
jl
cld
retf
xchg
stos
jne
sbb
cmp
cdq
jo
jae
das
sbb
pop
mov
retf
cmp
adc
mov
iret
aaa
(bad)
iret
nop
je
and
mov
and
neg
sbb
cwde
lea
leave
cmp
movs
add
lods
jno
(bad)
mov
add
(bad)
mov
dec
push
mov
retf
sbb
sbb
pop
mov
retf
cmp
adc
mov
iret
pop
ror
int3
pop
mov
cld
enter
mov
stc
add
(bad)
cwde
push
test
pop
inc
fisub
adc
mov
lods
mov
fwait
jns
inc
sub
add
sbb
pop
mov
retf
cmp
pop
adc
sti
xor
add
xchg
mov
test
shl
out
fidiv
dec
jg
out
fisub
iret
pop
and
dec
leave
cwde
je
xor
sti
pop
mov
and
pop
and
dec
retf
xchg
test
test
sbb
pop
mov
retf
cmp
test
lea
adc
stos
js
pop
jecxz
gs
es
mov
inc
pop
push
inc
inc
mov
lods
loope
jo
iret
fwait
adc
xchg
push
inc
ss
xor
fdivrp
xchg
es
retf
sbb
dec
add
xor
adc
shl
fdivrp
add
fidiv
sub
in
test
fwait
cwde
dec
sub
inc
adc
sti
inc
mov
retf
inc
fidiv
sbb
jne
xlat
stos
dec
ficomp
stc
add
out
mov
test
es
adc
mov
add
int
pop
inc
inc
ficomp
pop
adc
retf
leave
xor
int
imul
cmp
pushf
jo
mov
pop
push
cmp
pushf
jo
jecxz
les
inc
out
dec
dec
pop
mov
add
or
add
icebp
xchg
shl
jecxz
out
fidiv
pop
jg
out
fisub
iret
jb
es
ret
xor
repz
fidivr
inc
inc
mov
mov
mov
and
inc
inc
mov
sub
xor
xchg
mov
imul
jo
aaa
shl
popa
fidivr
inc
inc
aaa
sub
inc
fdivp
mov
(bad)
jo
ret
sub
std
add
push
xor
push
dec
mov
mov
shl
ja
fidiv
aas
and
(bad)
div
inc
pop
adc
cmp
pushf
jo
mov
push
test
mov
and
cmp
pushf
jo
pop
sub
ds
inc
xor
repz
ds
inc
inc
jg
lock
stc
add
fidiv
inc
lea
inc
fisubr
int
out
test
cmp
stc
add
fdivrp
add
pop
pushf
push
retf
cmp
inc
inc
fidiv
out
or
adc
loope
adc
xor
cmps
retf
pop
test
mov
mov
sbb
loope
jo
cmp
inc
leave
fwait
adc
(bad)
push
jg
jo
inc
push
xor
jae
push
pop
pushf
retf
sbb
mov
add
and
jp
out
inc
fidiv
pop
and
aaa
retf
mov
ds
inc
mov
fwait
jl
mov
dec
lds
pop
dec
fsub
pushf
jo
ss
fsub
pushf
jo
leave
out
(bad)
adc
xor
jge
es
imul
mov
add
jo
add
jo
mov
stc
rcl
das
sbb
pop
mov
retf
cmp
test
lea
adc
adc
dec
jno
lahf
mov
fidiv
mov
add
cld
sub
mov
ret
inc
dec
pop
loopne
inc
fidivr
aaa
retf
mov
push
or
sub
sub
cmp
mov
fwait
js
push
fnsave
jbe
js
ja
je
daa
and
pop
(bad)
std
add
and
jl
inc
stos
les
inc
inc
pop
mov
retf
xchg
test
jne
loopne
jo
stos
mov
mov
inc
pop
adc
mov
push
jle
inc
loope
les
inc
xor
mov
test
mov
mov
es
sub
dec
mov
fcomp
into
inc
out
dec
jge
fimul
(bad)
and
es
add
inc
dec
pop
inc
mov
mov
fiadd
mov
inc
xor
sbb
lds
mov
cs
mov
cs
mov
sub
fidiv
sub
out
add
inc
fdivrp
add
mov
adc
call
xor
mov
fiadd
inc
iret
xchg
test
mov
mov
inc
sub
std
add
cs
push
inc
and
inc
inc
push
mov
leave
fwait
or
and
inc
inc
sub
int
data16
cwde
pusha
das
fidiv
adc
retf
and
shr
test
inc
mov
stc
shl
mov
inc
aam
inc
test
mov
cmps
xor
sbb
inc
push
cmc
mov
and
mov
mov
push
jg
popf
(bad)
jo
retf
push
inc
pushf
retf
sbb
add
sbb
ror
jno
retf
sbb
mov
mov
and
jl
jg
rol
inc
fiadd
cli
xor
xchg
int
outs
(bad)
mov
(bad)
ds
mov
loope
jo
leave
out
adc
push
xor
out
push
xchg
mov
pop
lods
mov
and
xor
nop
mov
jp
fs
fidiv
retf
fwait
mov
shl
jae
fidiv
xor
test
inc
rol
inc
mov
jl
mov
int
and
dec
pop
jb
inc
ficomp
adc
lahf
jo
neg
(bad)
mov
mov
push
mov
retf
arpl
ror
rol
inc
push
test
call
mov
loope
jo
leave
out
adc
push
xor
sar
jo
and
int
mov
pop
inc
fdivp
stc
mov
shl
fld
jo
inc
mov
movs
add
std
sar
aad
mov
push
mov
retf
arpl
mov
(bad)
in
inc
dec
imul
jns
and
dec
pop
dec
inc
inc
fidivr
(bad)
js
mov
(bad)
and
adc
lahf
jo
mov
sbb
pop
(bad)
mov
inc
mov
add
jmp
sub
pushf
jo
dec
pop
mov
inc
fdivp
xchg
fistp
xchg
mov
jle
inc
stos
hlt
xchg
jg
pop
push
cs
mov
movs
add
std
stc
mov
ss
mov
jecxz
mov
test
mov
inc
ficomp
inc
sub
nop
push
inc
mov
in
ficomp
mov
mov
sub
xor
lea
mov
(bad)
mov
mov
aam
shr
mov
sub
sbb
mov
jle
inc
stos
js
mov
jg
pop
push
cs
mov
movs
add
std
stc
mov
ss
mov
and
or
mov
test
mov
inc
ficomp
inc
sub
push
inc
mov
in
ficomp
mov
mov
sub
xor
lea
add
sbb
and
ss
shr
mov
retf
push
xchg
mov
fistp
shl
jle
inc
stos
enter
pop
mov
jg
pop
jp
(bad)
jbe
mov
inc
mov
sub
xor
rol
mov
jecxz
mov
test
mov
inc
ficomp
inc
sub
and
add
cwde
mov
ror
mov
mov
sub
xor
lea
in
sub
jns
and
aaa
ret
sbb
scas
nop
push
inc
push
int
mov
dec
test
jg
pop
jp
(bad)
jbe
mov
inc
pop
or
fidiv
push
mov
test
add
add
jo
(bad)
and
in
mov
iret
mov
xor
inc
inc
jg
in
(bad)
and
pushf
jo
call
mov
stos
lds
inc
pop
add
fidiv
mov
sti
rcr
dec
mov
mov
sub
push
cmc
cld
mov
pop
test
mov
and
fs
fwait
mov
call
mov
inc
fidiv
out
(bad)
mov
call
jnp
mov
jmp
mov
neg
jo
ret
sbb
push
add
(bad)
mov
(bad)
jle
mov
inc
push
cmc
int3
mov
pop
call
iret
mov
sti
je
mov
sub
mov
(bad)
or
aam
pushf
jo
(bad)
dec
(bad)
mov
mov
fidiv
pop
and
dec
pop
dec
inc
inc
fdivrp
rcl
cmc
nop
mov
out
rcl
fwait
mov
call
mov
inc
fidiv
(bad)
ss
mov
xchg
and
mov
mov
adc
inc
pop
sub
push
cmc
lods
mov
pop
lods
mov
jp
daa
jl
fwait
mov
bound
shr
mov
mov
fnsave
iret
pop
xchg
mov
(bad)
ss
mov
mov
and
pushf
jae
stc
xchg
mov
adc
inc
fdivp
scas
xor
cmp
es
mov
add
std
sar
inc
sub
repz
test
and
inc
inc
mov
lods
test
sub
(bad)
icebp
scas
and
mov
daa
xor
lea
jge
jo
rcr
int
imul
ror
mov
scas
and
mov
fisub
mov
mov
into
stc
mov
inc
sub
(bad)
mov
retf
cmp
inc
inc
fidiv
out
int
mov
loope
adc
xor
shr
aam
mov
and
inc
inc
push
cmc
loopne
and
push
inc
push
cmc
fdivr
out
push
jg
jo
inc
push
xor
shr
inc
ret
sub
std
shl
mov
mov
out
adc
push
xor
sar
fdivr
mov
ficomp
sbb
retf
sbb
(bad)
mov
(bad)
jbe
mov
mov
pop
(bad)
mov
xor
mov
movs
addr16
inc
fiadd
mov
push
push
xchg
std
inc
fidiv
mov
sti
stc
out
mov
adc
add
inc
fiadd
mov
shl
inc
inc
fdivp
loope
and
sar
xchg
push
inc
push
cmc
les
out
push
jg
jo
inc
push
xor
rcl
shl
mov
xlat
jno
inc
push
cmc
and
and
icebp
mov
mov
mov
and
fs
fwait
mov
call
mov
inc
fidiv
shl
mov
adc
inc
pop
int
mov
pop
mov
inc
fdivrp
rcr
lea
mov
sub
js
test
lea
inc
fdivp
stc
pop
and
retf
inc
fidiv
(bad)
cs
mov
inc
mov
mov
mov
and
push
inc
push
cmc
mov
stos
clc
sbb
mov
iret
push
lea
mov
fiadd
mov
pop
ret
jo
mov
and
rcr
lea
mov
fisttp
lods
fnsave
jl
inc
push
cmc
mov
sub
cmc
mov
stos
adc
inc
inc
pop
mov
ret
sub
repz
(bad)
and
iret
(bad)
pop
(bad)
mov
mov
sub
mov
(bad)
jbe
mov
mov
jbe
mov
mov
jp
mov
mov
inc
(bad)
mov
mov
xor
mov
(bad)
xor
stos
mov
cs
mov
test
mov
fidiv
mov
stc
shr
mov
stos
and
mov
xchg
and
iret
(bad)
push
(bad)
mov
mov
or
dec
leave
pop
movs
mov
jb
es
leave
pop
test
mov
and
dec
leave
pop
lods
mov
jb
es
retf
push
inc
pushf
retf
sbb
mov
adc
cdq
arpl
test
cs
ficomp
ficom
jo
jecxz
jo
inc
mov
inc
pop
pushf
push
adc
mov
cmps
in
fisubr
sbb
inc
test
jo
pop
cmp
sbb
fidiv
dec
mov
inc
rcr
lods
xor
(bad)
mov
add
jo
pushf
xor
(bad)
mov
test
jo
pop
ds
daa
ss
sahf
les
mov
retf
and
retf
stos
lods
scas
lock
mov
leave
fwait
and
fidiv
inc
dec
mov
int
(bad)
daa
sti
adc
xchg
test
sbb
sbb
inc
mov
lods
sub
sbb
lods
movs
mov
mov
retf
cmp
test
lea
iret
pop
(bad)
into
cmp
adc
mov
or
and
neg
inc
rcr
jno
retf
sbb
popa
pop
inc
xor
push
jl
lahf
jo
sar
aam
fidiv
inc
xor
add
inc
sbb
fistp
jo
mov
jmp
inc
add
inc
dec
push
jg
cmp
jo
jg
jo
inc
sar
aaa
inc
fidiv
pop
loopne
add
lock
pop
inc
xor
adc
fimul
inc
jae
lock
shl
test
pop
nop
inc
add
mov
add
cdq
jnp
fidiv
dec
(bad)
out
add
jp
cmc
imul
mov
sahf
jmp
dec
jecxz
in
add
fstp
jne
fstp
xchg
int
sub
sub
jne
fstp
jo
mov
fiadd
inc
push
stos
ja
xor
inc
inc
fdivp
mov
fnstenv
ret
fild
fisub
add
inc
loopne
loopne
inc
aaa
inc
mov
pop
inc
xor
ja
xor
inc
inc
fdivp
mov
into
jo
ret
fild
fidiv
and
fild
fidivr
inc
out
mov
mov
sbb
daa
inc
fdivp
dec
pop
inc
xor
xor
add
rol
lahf
jo
mov
fld
add
jno
inc
out
mov
neg
jo
retf
cs
mov
sbb
dec
pop
inc
xor
jne
fistp
jo
cmc
and
fild
fidiv
inc
out
mov
retf
fdiv
ret
xor
inc
fdivp
dec
pop
inc
xor
jne
fistp
jo
leave
and
lock
pop
inc
xor
jno
retf
sbb
dec
pop
inc
xor
je
inc
(bad)
test
lahf
jo
inc
out
add
inc
fiadd
int
pop
jge
fstp
jo
inc
jg
fld
fdivp
test
jne
fstp
jo
jecxz
jmp
dec
rcr
jo
jecxz
in
add
fstp
jo
mov
fdivp
inc
jp
xor
in
inc
inc
fdivrp
mov
cs
add
dec
fild
fidiv
enter
jae
cdq
mov
jo
dec
(bad)
out
add
or
jo
retf
push
xor
inc
jl
in
fidivr
inc
mov
push
inc
xlat
mov
push
pop
mov
(bad)
push
inc
jecxz
inc
inc
fimul
inc
mov
mov
add
lock
pop
inc
xor
inc
mov
inc
xor
xor
dec
fild
ficomp
fild
fdivrp
mov
cs
add
push
scas
dec
out
mov
adc
jo
ret
sub
or
fimul
inc
mov
push
dec
(bad)
sbb
inc
push
mov
xor
pushf
jo
mov
or
rol
inc
xor
inc
addr16
jo
inc
push
xor
xor
pushf
jo
mov
rol
add
fidivr
retf
fidiv
ret
add
fmul
inc
ret
xor
inc
fidivr
pop
and
jo
dec
jg
fld
fidiv
dec
dec
xor
xor
add
jb
push
pop
or
les
and
xor
pop
jne
rcr
lock
shr
add
lock
fild
add
fistp
xchg
fld
fdivp
movs
inc
push
xor
inc
aaa
shl
cmp
fstp
add
je
mov
or
pop
push
dec
rcr
stc
mov
push
gs
rcr
je
jp
xor
jl
add
ror
jo
inc
shl
add
lods
stos
lds
push
dec
rcr
stc
mov
push
gs
rcr
je
jmp
aam
(bad)
jl
lahf
jo
inc
shl
add
lods
stos
mov
inc
push
mov
aam
fiadd
add
stc
mov
cld
xchg
add
push
mov
fiadd
int
and
neg
inc
stos
test
inc
inc
push
mov
push
xor
icebp
sbb
rcr
loop
jo
push
xor
add
inc
(bad)
push
fstp
jo
mov
stc
add
xor
and
mov
lahf
jo
or
adc
(bad)
je
lahf
jo
sbb
xor
inc
sbb
rcr
pushf
jo
sbb
mov
retf
cmp
test
lea
adc
pop
inc
inc
cmp
test
call
push
inc
mov
inc
fdivrp
add
mov
inc
test
jo
call
test
push
xor
add
xor
icebp
scas
vpshufhw
inc
sar
lock
repz
push
stc
xchg
mov
test
inc
fidiv
pop
add
inc
fmulp
and
jo
mov
sbb
xor
nop
mov
inc
sbb
inc
cli
mov
inc
inc
sub
xchg
fidiv
daa
data16
aas
(bad)
std
xor
fiadd
adc
fidiv
inc
push
xor
mov
lahf
jo
call
fcom
mov
leave
pop
jp
cs
mov
cs
mov
mov
and
jo
pop
jle
mov
repnz
inc
stos
jl
inc
inc
and
neg
in
ficomp
inc
sub
sbb
stos
xchg
lods
cmp
xor
xchg
int
dec
stc
xchg
xor
fild
add
std
add
push
xor
mov
lahf
jo
pop
cmp
pusha
inc
fisubr
sbb
pop
mov
retf
cmp
test
sbb
or
fwait
mov
pop
cmp
add
fwait
lods
int
and
add
xor
int
repz
mov
sub
sbb
fwait
mov
fwait
cwde
adc
stos
mov
inc
push
xor
mov
jb
xor
test
push
sahf
jo
mov
daa
sti
inc
mov
pop
mov
ss
inc
mov
and
fstp
jo
mov
stc
add
sbb
pushf
dec
adc
sti
sbb
jne
neg
inc
jl
pop
add
jae
jecxz
inc
inc
fiadd
jae
jecxz
inc
inc
fiadd
jae
jecxz
inc
inc
fiadd
jae
jecxz
inc
inc
fidivr
dec
fdiv
leave
fwait
pusha
leave
push
fnsave
push
loopne
push
jp
xor
add
mov
(bad)
push
jl
mov
(bad)
dec
jo
inc
push
mov
dec
push
jg
retf
inc
retf
and
scas
inc
rol
push
push
out
xor
push
mov
test
jg
push
enter
mov
mov
hlt
fidiv
stos
fidiv
aaa
cmp
and
test
je
sub
inc
adc
sub
inc
fidivr
pop
and
xchg
push
push
fs
nop
bound
inc
adc
jo
pop
repz
mov
inc
and
scas
inc
mul
lods
inc
push
xor
leave
push
fnsave
mov
mov
inc
ficomp
mov
jle
mov
xor
xor
mov
ss
inc
ret
inc
aaa
mov
mov
inc
stos
cmp
mov
loop
inc
aaa
sahf
stc
mov
jle
je
ja
mov
stos
fidivr
inc
fmul
int3
dec
cli
inc
fidiv
dec
push
mov
stos
fcomi
js
cli
add
add
and
inc
pop
call
retf
jno
inc
fdivp
js
fadd
les
jb
push
push
mov
stos
fdiv
js
fadd
lods
inc
pop
dec
inc
inc
stos
ss
pop
cwde
inc
dec
push
jo
inc
stos
ja
stos
fidiv
aaa
icebp
repz
mov
inc
and
scas
inc
mul
inc
retf
fwait
mov
pop
into
std
add
jno
shl
iret
pop
es
push
inc
fbstp
inc
pop
dec
jp
stos
and
mov
fild
lods
inc
pop
dec
inc
inc
stos
dec
int
pop
cwde
inc
ret
inc
aaa
in
stc
mov
hlt
fidiv
jg
jle
mov
(bad)
inc
fidiv
pop
fstp
inc
fdivrp
adc
and
inc
fisttp
inc
push
fbstp
inc
cdq
icebp
mov
dec
pop
(bad)
mov
sbb
mov
retf
cmp
test
lea
adc
fdivrp
xor
ins
jne
xor
jo
dec
cdq
icebp
mov
xor
icebp
mov
xor
ss
pop
rcr
inc
fidiv
test
jo
rcr
mov
inc
rol
adc
xchg
inc
leave
loop
rcr
mov
mov
sbb
add
jg
inc
ror
fidiv
gs
inc
inc
fiadd
sar
pushf
inc
fwait
mov
push
fprem
push
inc
and
add
out
mov
enter
inc
sar
pop
(bad)
inc
retf
fwait
mov
mov
stos
ins
xchg
push
mov
fbld
add
adc
(bad)
add
pop
mov
push
repz
mul
inc
xchg
pop
cwde
inc
retf
fwait
mov
push
shl
es
push
mov
fdivp
mov
shl
pop
cwde
inc
retf
fwait
mov
jg
jo
inc
lea
dec
hlt
mov
mov
xchg
push
inc
ss
mov
sub
int
data16
inc
ficomp
pop
adc
cwde
call
scas
mov
sbb
jo
inc
fidiv
xor
mov
mov
sbb
mov
and
lock
ja
(bad)
cmp
add
mov
and
clc
add
jno
pop
pop
int
popf
and
repnz
sub
dec
inc
and
inc
inc
stos
jb
sbb
(bad)
shl
dec
fcomp
dec
push
jl
jp
xor
fstp
jmp
adc
lahf
jo
hlt
dec
sub
push
jl
pushf
xor
xchg
inc
retf
dec
aam
mov
mov
add
inc
fdivrp
shl
add
rcr
lahf
mov
(bad)
sub
mov
ret
call
cmp
shl
(bad)
shl
cmp
(bad)
jle
push
aad
fidiv
mov
rol
shl
cmp
iret
push
retf
and
add
stc
rcl
fild
add
lock
mov
shl
rol
jo
jge
(bad)
mov
mov
push
inc
leave
dec
movs
fwait
mov
xor
stc
pushf
inc
fidiv
inc
push
cmc
mov
and
sub
into
jo
adc
fstp
fdivrp
add
jno
movs
fdivr
lock
lahf
mov
inc
into
jo
jns
test
iret
pop
hlt
call
jo
mov
fdivp
loope
xor
inc
inc
ficomp
mov
div
lahf
mov
popf
and
mov
pop
and
ss
(bad)
mov
pushf
and
int
pop
call
and
jo
pop
xchg
inc
jns
int
lods
and
mov
xor
icebp
mov
xor
stc
pushf
inc
fisub
inc
push
cmc
les
mov
push
fidiv
mov
test
mov
mov
pop
pushf
stos
mov
fdivrp
ror
(bad)
mov
inc
out
test
and
mov
neg
mov
inc
ficomp
dec
hlt
dec
sub
push
fs
bound
inc
retf
dec
test
mov
(bad)
mov
lods
and
popf
xor
test
push
jl
retf
push
lods
popf
and
mov
retf
pop
mov
inc
pop
xchg
inc
inc
xchg
mov
pop
jp
mov
and
stc
mov
(bad)
mov
xor
inc
ss
inc
ret
fwait
mov
mov
stc
add
cwde
in
adc
jo
(bad)
jle
mov
push
fisttp
fdivrp
rcr
add
inc
inc
push
cmc
fcomp
scas
mov
pushf
and
inc
retf
pop
in
mov
add
call
loopne
mov
add
fwait
mov
add
sar
(bad)
mov
popf
and
inc
leave
pop
movs
fwait
mov
add
rol
les
sahf
add
fwait
mov
mov
inc
inc
(bad)
sbb
les
dec
mov
sar
add
push
sub
jo
inc
and
call
fldenv
jne
neg
stos
mov
push
std
cwde
popf
and
mov
jb
xor
in
lods
and
push
push
(bad)
loope
inc
push
in
lods
and
inc
adc
dec
adc
stc
shl
(bad)
mov
and
jo
ret
inc
dec
pop
dec
inc
inc
fdivrp
shl
jo
stos
fidiv
ss
cmp
jg
jle
jo
stos
lds
inc
push
cmc
mov
and
inc
inc
fdivp
scas
mov
push
cmc
mov
(bad)
jge
mov
cmps
add
mov
mov
lock
stos
pop
int
pop
cwde
inc
ret
xor
(bad)
stos
(bad)
jl
stos
fs
pop
cwde
inc
ret
xor
add
fcomi
jl
stos
jns
test
push
inc
dec
push
pop
push
jp
mov
pushf
and
jns
fidiv
aaa
enter
fbstp
inc
pop
cwde
mov
retf
pop
xchg
fwait
mov
sub
stos
mov
cs
push
retf
jg
cmp
(bad)
out
jge
mov
xlat
jge
mov
leave
bound
cwde
and
js
fbstp
inc
fiadd
inc
inc
fidiv
aaa
shl
jg
jo
inc
fiadd
inc
inc
fidiv
aaa
aam
js
(bad)
inc
fiadd
add
pop
rcr
cmp
fild
dec
push
(bad)
adc
imul
add
mov
ret
fwait
mov
pop
aad
lods
and
stos
mov
push
test
movs
inc
fnstsw
lods
popf
and
shl
test
inc
fiadd
xchg
mov
ficomp
(bad)
(bad)
sub
jg
(bad)
sub
mov
ret
call
pop
mov
sbb
mov
retf
cmp
test
lea
adc
cmp
mov
push
sub
sbb
mov
add
leave
push
inc
fidiv
out
xor
int
push
xchg
mov
or
mov
aas
push
std
jno
arpl
inc
sti
shl
inc
sub
std
jno
arpl
inc
sti
fnstenv
inc
sub
ins
jle
fdivp
jg
stos
jg
ret
inc
leave
fwait
mov
sbb
int
es
mov
fnstsw
pop
and
push
cmp
inc
test
fcomip
cmp
lea
jo
inc
push
jae
hlt
mov
dec
(bad)
push
jo
inc
pop
xor
inc
ret
inc
dec
push
jo
inc
mov
jno
sbb
inc
shl
xor
xor
pop
inc
push
mov
mov
stos
jp
mov
xor
inc
pop
xor
pop
inc
sub
inc
sub
mov
pop
and
pop
es
xchg
stc
adc
sti
mov
inc
fimul
inc
fidiv
inc
pop
xor
inc
jg
jo
inc
stos
jp
add
dec
xor
xor
mov
dec
shl
adc
and
push
push
jae
hlt
mov
inc
pop
xor
les
and
aas
and
cmps
pop
sbb
inc
dec
push
jo
aaa
(bad)
add
and
sbb
pop
mov
retf
cmp
adc
outs
popa
cwde
or
fwait
add
jo
mov
mov
lods
inc
mov
retf
das
repz
fiadd
dec
ret
sbb
fnstenv
scas
inc
xchg
repz
call
pop
pop
sbb
je
inc
ficomp
adc
idiv
mov
mov
sbb
retf
sbb
xor
(bad)
xor
cmc
inc
mov
enter
push
cmc
inc
mov
shl
inc
pop
mov
retf
es
mov
sbb
push
xchg
adc
dec
push
fimul
jo
inc
mov
mov
stos
inc
and
sub
(bad)
scas
shl
adc
leave
icebp
mov
fbstp
sub
sbb
inc
fidiv
inc
mov
cs
mov
inc
inc
pop
(bad)
xor
ins
push
inc
fdivrp
add
(bad)
xor
or
iret
pop
shl
fs
push
mov
retf
sbb
test
ss
inc
fdivrp
xchg
push
pusha
adc
sahf
cwde
adc
jo
pop
and
stos
out
jo
sub
repz
add
leave
fwait
jl
pop
sub
int
sub
xor
fidiv
stos
xor
inc
inc
push
xor
mov
sbb
mov
mov
std
jmp
mov
push
mov
inc
mov
inc
inc
ficomp
inc
sub
sbb
jo
and
dec
stos
movs
and
mov
test
mov
test
ficomp
inc
adc
icebp
adc
dec
push
mov
mov
xor
jle
jo
mov
push
and
xor
cwde
mov
fidiv
inc
push
xor
sub
xor
leave
adc
call
adc
fmulp
inc
inc
fidiv
sbb
mov
(bad)
scas
shl
adc
ins
jge
push
push
add
xchg
test
inc
sub
sbb
sbb
mov
aaa
(bad)
cwde
movs
adc
jo
test
mov
push
xor
mov
xor
cs
mov
cs
push
xor
push
mov
loopne
inc
inc
push
mov
push
mov
stos
or
inc
inc
out
mov
sbb
push
xchg
adc
aaa
(bad)
mov
mov
pop
sbb
inc
jae
stc
fwait
test
loopne
xchg
sub
mov
mov
lea
ret
stos
mov
add
jo
jns
xor
and
mov
jae
fwait
push
dec
push
inc
movs
add
cwde
adc
fidiv
xchg
xor
ror
jae
fwait
dec
ret
inc
aaa
fidiv
jg
ror
adc
pop
movs
add
cwde
push
xchg
sti
add
push
and
lea
lea
adc
cmp
shl
test
stc
jo
sub
nop
push
inc
test
inc
fisubr
jne
xor
dec
adc
jmp
push
inc
ss
push
inc
fdivp
or
mov
aaa
sbb
pushf
jo
lea
mov
retf
mov
pop
push
xchg
(bad)
scas
repnz
adc
jmp
stc
xchg
xor
and
fdivp
and
push
inc
(bad)
pushf
jo
inc
fidiv
mov
enter
jo
mov
sbb
add
cmps
pop
fdivrp
add
mov
icebp
enter
jo
mov
sbb
jg
push
fild
add
stos
je
das
xor
test
pop
sbb
mov
pop
sar
add
clc
add
jle
inc
rol
add
repz
lods
ret
inc
aaa
(bad)
sub
fcomip
cmp
xchg
adc
iret
pop
(bad)
jg
push
mul
inc
inc
rol
adc
fwait
xchg
int
fild
lods
retf
push
pop
add
sub
add
imul
dec
cmc
mov
xchg
rol
adc
fwait
xchg
iret
pop
sar
add
sti
adc
(bad)
push
dec
mul
add
fild
pop
mov
loopne
cli
fisub
inc
dec
retf
ror
jo
sti
cmps
outs
push
pop
dec
cmc
test
dec
loopne
ss
ror
dec
ror
aam
dec
loopne
ror
aam
dec
loopne
add
aam
dec
xor
ror
aam
push
loopne
ror
sahf
ror
aam
faddp
push
inc
dec
retf
xchg
mov
cdq
jle
add
test
dec
loopne
ss
ror
dec
ror
aam
push
je
ror
pushf
ror
aam
xor
aam
dec
adc
ror
aam
aaa
stc
push
mov
dec
loopne
sar
jo
ror
aam
fisttp
jns
fsubp
imul
push
iret
or
loopne
rcl
dec
ror
jne
dec
loopne
rcr
inc
ror
jge
dec
loopne
shl
loopne
adc
aam
pop
dec
inc
ror
xor
mov
loopne
stos
ins
popa
mov
inc
pop
inc
cmps
outs
push
pop
faddp
push
inc
push
xchg
push
inc
cdq
jle
add
loopne
cli
fisub
inc
dec
sbb
dec
loopne
sbb
dec
repz
ss
aam
dec
retf
ror
jo
retf
pop
loopne
ror
test
dec
loopne
jae
loopne
ror
aam
dec
loopne
retf
push
loopne
ror
mov
dec
loopne
ror
aam
dec
sub
ror
aam
cmps
outs
push
pop
dec
inc
je
dec
loopne
inc
es
ror
mov
dec
loopne
cli
faddp
push
inc
dec
repz
ss
aam
dec
retf
xchg
mov
pop
loopne
ror
test
dec
loopne
jae
loopne
ror
aam
dec
loopne
retf
push
loopne
ror
mov
dec
loopne
ror
aam
dec
sub
ror
aam
cdq
jle
add
je
dec
loopne
inc
es
ror
mov
dec
loopne
and
aam
dec
pop
lods
jns
lea
cmps
pop
pushf
pop
adc
sti
add
stc
add
xor
and
sbb
int
and
and
xor
lahf
inc
fidiv
call
mov
retf
les
and
xor
lods
adc
pushf
cld
mov
fnstenv
inc
rol
adc
inc
xchg
scas
inc
xchg
mov
fiadd
lods
retf
fwait
mov
inc
ror
dec
cmp
xor
into
jg
(bad)
pop
mov
into
jg
inc
ror
fidiv
push
push
test
mov
jg
push
rol
or
pop
xor
inc
sub
sbb
inc
fidiv
pop
sub
lods
in
nop
jo
dec
push
test
mov
std
add
fbld
inc
inc
mov
leave
pop
sub
int
fild
inc
inc
pop
mov
rcr
lds
and
inc
ficom
mov
pop
sar
jge
shl
pop
mov
test
(bad)
scas
repnz
adc
(bad)
cmc
hlt
jo
stos
mov
inc
inc
fs
inc
push
and
sub
inc
mov
mov
daa
outs
ins
mov
sbb
lods
pop
dec
cmp
jo
aaa
fld
stos
call
adc
add
mov
retf
sbb
dec
pop
pop
inc
inc
fidivr
aas
xor
jns
arpl
inc
imul
jo
xchg
xchg
stc
cmp
xor
jns
arpl
inc
retf
sub
xchg
inc
adc
ficomp
dec
sub
stc
mov
(bad)
stos
mov
mov
and
aaa
inc
fdivrp
mov
fwait
mov
push
push
int
inc
out
pusha
mov
arpl
inc
inc
fstp
mov
arpl
inc
retf
fwait
mov
inc
fiadd
int
push
add
sti
push
sahf
arpl
inc
jae
repz
pushf
jo
inc
push
int
inc
out
mov
pmaxub
pop
add
iret
aas
add
mov
or
cmps
push
xlat
cmps
int
push
int
inc
pop
fwait
pop
jne
jo
add
test
jns
jo
leave
mov
stc
xchg
mov
xchg
retf
jecxz
stc
add
sbb
data16
inc
push
add
int
inc
mov
mov
sub
jbe
fdivrp
mov
fwait
test
push
push
int
inc
out
pusha
mov
arpl
inc
inc
fstp
mov
test
inc
retf
fwait
sub
cs
push
sahf
arpl
inc
jae
repz
pushf
jo
inc
push
int
inc
out
mov
add
mov
jecxz
stc
add
jg
pop
xor
movs
call
push
inc
push
jl
retf
sub
xchg
inc
dec
push
sti
push
xlat
cmp
push
inc
push
jge
call
xchg
jo
ret
inc
aaa
(bad)
sub
ss
mov
jne
call
mov
sub
sbb
sbb
sbb
xor
or
jo
pop
cmp
mov
leave
jo
sub
std
add
mov
or
cmps
imul
xchg
jo
jae
xor
inc
fiadd
int
sub
int
pop
pushf
pop
inc
fidiv
adc
into
call
jo
mov
stc
shr
icebp
inc
ss
inc
call
ret
(bad)
fwait
add
stc
mov
cs
sub
mov
int
sub
mov
xchg
xchg
add
xor
mov
and
scas
ins
ss
inc
fidivr
aas
and
xchg
bsf
retf
pop
xchg
mov
push
sub
sbb
retf
mov
pop
and
pop
and
adc
(bad)
mov
inc
fdivrp
xchg
cmc
inc
mov
pop
jbe
mov
shr
inc
push
cmc
mov
sub
push
inc
mov
fwait
add
std
sar
inc
cmovb
sbb
sbb
ficomp
inc
sub
jo
add
mov
stos
or
inc
inc
push
cmc
mov
and
int3
mov
inc
inc
mov
leave
(bad)
lea
pop
fidiv
mov
imul
fidiv
mov
or
and
mov
and
inc
mov
fisub
sub
add
inc
iret
pop
(bad)
mov
std
xchg
jo
iret
pop
mov
sahf
add
inc
iret
pop
(bad)
mov
inc
fidiv
stos
lea
inc
data16
or
retf
pop
cwde
mov
mov
ficomp
xchg
add
inc
iret
pop
(bad)
mov
inc
fidiv
stos
std
jo
inc
lea
sub
add
inc
sub
jo
ret
inc
inc
fdivp
adc
xchg
fidiv
sbb
mov
(bad)
scas
shl
adc
out
or
outs
push
mov
push
mov
inc
stos
les
inc
push
mov
retf
sbb
and
mov
add
loope
dec
inc
mov
cs
mov
mov
dec
ss
or
rcl
add
loop
inc
aaa
daa
stc
add
mov
cs
and
lods
ins
xchg
jo
ret
xor
inc
fimul
or
fisubr
sbb
pop
mov
retf
cmp
sti
(bad)
adc
inc
fimul
add
sbb
and
mov
dec
ss
inc
inc
fdivp
sbb
xchg
push
xchg
adc
jno
stc
mov
mov
mov
leave
pop
retf
aaa
into
(bad)
xor
add
inc
inc
pop
mov
sbb
cmp
adc
popa
enter
stc
mov
iret
fwait
mov
fwait
mov
ficomp
inc
inc
fdiv
inc
mov
cs
and
lods
sbb
add
jae
fwait
jae
stos
push
xor
jo
aaa
into
(bad)
xor
fidivr
ror
or
fiadd
test
es
cmp
jo
jae
xor
mov
pushf
push
adc
sti
xor
xor
pop
std
cmp
add
jo
inc
fdivrp
mov
iret
fwait
mov
(bad)
jo
inc
mov
mov
dec
test
inc
fidivr
fiadd
test
mov
cs
mov
mov
mov
fidivr
ror
add
inc
test
lds
inc
fidivr
pop
(bad)
fwait
dec
cli
xor
inc
sub
sbb
xchg
adc
in
adc
daa
inc
fdivp
jns
or
inc
inc
stos
push
lods
inc
call
inc
fdivrp
add
push
mov
mov
fwait
mov
ins
out
mov
test
sbb
inc
mov
cs
mov
sub
add
inc
stos
test
inc
inc
jge
xchg
add
icebp
mov
stos
jo
dec
push
add
push
mov
ficomp
int
and
pop
inc
fisubr
sbb
inc
(bad)
int
idiv
pusha
inc
push
gs
adc
mov
retf
cmp
pop
adc
sti
xor
sub
sbb
push
inc
iret
pop
and
xchg
stc
adc
pop
dec
jp
stos
pop
int
imul
pushf
adc
add
inc
inc
pop
mov
retf
es
pushf
leave
mov
inc
fdiv
mov
mov
add
cdq
lock
fiadd
gs
inc
aaa
(bad)
or
inc
dec
stos
(bad)
iret
pop
into
mov
inc
pop
xor
inc
retf
push
xor
call
int
pop
xor
inc
dec
and
retf
cs
adc
add
inc
inc
push
xor
xchg
mov
inc
out
mov
sbb
mov
(bad)
scas
retf
adc
fwait
and
cs
ja
fisub
lods
adc
mov
test
xchg
mov
fdivrp
add
rol
inc
jno
xor
push
add
inc
in
ss
add
jle
jo
test
cmp
mov
dec
int
addr16
inc
fsubrp
mov
push
cmps
mov
retf
sbb
mov
pop
call
pop
mov
adc
mov
fwait
add
daa
lods
cmp
and
fwait
mov
es
leave
fwait
test
sbb
mov
cld
or
jb
stos
mov
es
xchg
xor
sar
mov
xor
sar
add
mov
retf
sbb
stc
or
inc
jae
cdq
ins
dec
fidiv
jmp
(bad)
mov
adc
fld
inc
fiadd
stos
int3
jnp
inc
and
inc
inc
push
cmc
pushf
mov
fidiv
mov
mov
xchg
and
mov
call
nop
mov
in
inc
inc
fisub
add
and
sar
sti
xor
(bad)
xor
je
inc
ficomp
int
test
mov
rcl
add
loop
inc
aaa
daa
stc
sub
sti
rcl
and
lods
sub
sbb
pop
add
inc
mov
fwait
jo
rcr
sub
add
inc
mov
and
mov
fidiv
fld
mov
mov
cs
push
inc
and
mov
adc
sbb
mov
or
ss
inc
fmulp
dec
inc
fidiv
mov
repz
mov
mov
xchg
mov
loopne
push
inc
mov
mov
fidiv
fld
mov
mov
cs
push
inc
and
mov
mov
jo
rcr
sub
add
inc
mov
and
mov
fidiv
fld
mov
mov
cs
push
inc
and
mov
std
call
cmp
jo
inc
inc
xchg
popa
sbb
inc
fmulp
daa
inc
fidiv
mov
and
jmp
(bad)
mov
popf
pushf
jo
stos
mov
mov
mov
add
inc
leave
pop
mov
arpl
xor
cmp
inc
fdivp
adc
sbb
call
inc
inc
xchg
push
mov
movs
add
(bad)
icebp
mov
pushf
xor
inc
pop
mov
sub
scas
push
inc
and
mov
ins
call
test
aam
inc
inc
inc
xchg
push
mov
movs
add
(bad)
icebp
mov
aam
inc
inc
pop
mov
sub
scas
push
inc
and
mov
mov
jo
rcr
lods
icebp
popf
jo
sti
aam
inc
inc
inc
xchg
popa
rol
inc
fmulp
daa
inc
fidiv
mov
and
jmp
(bad)
mov
popf
pushf
jo
stos
inc
xor
mov
cli
stos
sbb
int
adc
lods
sub
ss
inc
inc
xchg
add
std
stc
pushf
and
pop
inc
fdivrp
rcr
push
leave
pop
mov
xchg
add
inc
adc
and
inc
fdivp
and
pop
inc
fmulp
dec
inc
fidiv
mov
repz
pop
popf
jo
sti
mov
xchg
mov
loopne
push
inc
mov
mov
and
mov
fidiv
dec
fidiv
fld
mov
mov
cs
push
inc
and
mov
dec
popf
jo
rcr
lods
mov
inc
inc
inc
xchg
push
mov
call
mov
inc
pop
mov
stos
js
inc
inc
addr16
inc
fsubrp
mov
pop
mov
int
mov
pushf
jo
mul
(bad)
mov
inc
fdivp
or
jne
push
mov
aad
xor
fs
(bad)
and
ficomp
xor
mov
stos
xor
inc
addr16
inc
fsubrp
mov
pop
mov
int
(bad)
pushf
pushf
jo
mul
(bad)
mov
inc
fdivp
or
push
inc
fmulp
dec
inc
fidiv
mov
repz
mov
xor
mov
add
jo
xchg
cwde
push
add
jo
dec
fidiv
fld
mov
mov
fdiv
inc
inc
adc
fsubrp
mov
mov
stc
mov
mov
fwait
add
daa
lods
mov
sbb
aas
(bad)
jo
(bad)
pop
jno
inc
pop
aad
mov
xchg
jno
inc
sbb
inc
inc
and
aaa
inc
fdivp
loope
and
iret
(bad)
sbb
test
es
mov
call
(bad)
mov
mov
loop
int
addr16
inc
fsubrp
mov
pop
mov
adc
std
pop
fidiv
clc
xchg
pushf
or
test
and
and
std
stc
inc
fimul
fwait
add
std
stc
inc
fimul
add
push
pop
adc
xchg
mov
pop
mov
mov
and
inc
dec
pop
add
mov
mov
(bad)
fidiv
mov
and
call
jo
rcr
lods
mov
aam
inc
inc
inc
xchg
push
mov
call
mov
inc
pop
mov
stos
add
inc
inc
addr16
inc
fsubrp
mov
pop
mov
int
(bad)
pushf
pushf
jo
mul
(bad)
mov
inc
fdivp
or
jne
push
mov
in
sahf
jo
sti
aam
inc
inc
inc
xchg
push
mov
movs
add
(bad)
icebp
mov
adc
inc
inc
pop
mov
ret
pop
mov
mov
fimul
mov
mov
and
mov
scas
and
mov
mov
movs
jno
inc
push
xor
mov
inc
fidiv
(bad)
fidiv
mov
fbstp
retf
cs
mov
sbb
add
jo
inc
fimul
mov
pop
ss
inc
fdivrp
sar
pushf
mov
push
mov
call
lea
inc
fdivp
or
mov
and
les
jo
mov
arpl
mov
cs
or
jo
mov
pop
mov
mov
sub
pusha
jns
jo
(bad)
sub
cmc
mov
(bad)
shl
test
pop
and
mov
and
mov
pushf
pushf
jo
stos
js
inc
inc
pop
mov
stos
pop
dec
inc
inc
addr16
inc
fsubrp
mov
pop
mov
int
sbb
(bad)
mov
inc
fdivp
or
inc
mov
mov
sbb
jo
sti
aam
inc
inc
inc
xchg
push
mov
call
mov
inc
pop
mov
stos
call
jp
inc
fsubrp
mov
pop
mov
int
mov
pushf
jo
mul
(bad)
mov
inc
fdivp
or
mov
and
inc
ret
sbb
push
inc
fimul
mov
mov
es
mov
mov
pop
xchg
stc
sar
jg
shl
(bad)
mov
inc
and
mov
inc
loope
inc
rcr
lods
and
jo
inc
inc
xchg
push
mov
call
mov
inc
pop
mov
stos
inc
dec
inc
inc
addr16
inc
fsubrp
mov
pop
mov
int
(bad)
pushf
pushf
jo
mul
(bad)
mov
inc
fdivp
or
mov
push
cmc
cmp
sbb
dec
inc
fidiv
mov
repz
mov
xor
mov
jl
jo
xchg
sbb
pushf
jo
mul
(bad)
mov
inc
fdivp
or
jp
fmulp
dec
inc
fidiv
mov
repz
popa
loopne
inc
sti
mov
xchg
mov
loopne
push
inc
mov
mov
fidiv
fld
mov
mov
sub
mov
loopne
inc
rcr
lds
movs
jns
fmulp
dec
inc
fidiv
mov
repz
mov
xor
mov
jg
jo
xchg
cwde
hlt
jg
jo
dec
fidiv
fld
mov
mov
cs
push
inc
and
mov
(bad)
jecxz
inc
rcr
lods
leave
jecxz
inc
sti
aam
inc
inc
inc
xchg
popa
or
fmulp
daa
inc
fidiv
mov
and
jmp
(bad)
mov
popf
pushf
jo
stos
test
inc
inc
pop
mov
sub
scas
push
inc
and
mov
vpshuflw
int
test
dec
inc
fidiv
mov
repz
mov
xor
mov
jg
jo
xchg
sbb
pushf
jo
mul
(bad)
mov
inc
fdivp
or
jns
fmulp
dec
inc
fidiv
mov
repz
mov
xor
mov
jg
jo
xchg
sbb
pushf
jo
mul
(bad)
mov
inc
fdivp
or
inc
push
fidiv
test
jo
sti
aam
inc
inc
inc
xchg
push
mov
movs
add
(bad)
icebp
mov
cmp
pop
mov
iret
pop
scas
mov
(bad)
and
inc
pushf
pushf
jo
stos
js
inc
inc
pop
mov
stos
pop
dec
inc
inc
addr16
inc
fsubrp
mov
pop
mov
int
mov
pushf
jo
mul
(bad)
mov
inc
fdivp
or
call
mov
inc
pop
mov
stos
nop
dec
inc
inc
addr16
inc
fsubrp
mov
pop
mov
int
mov
pushf
jo
mul
(bad)
mov
inc
fdivp
or
aas
inc
fiadd
mov
stos
les
addr16
inc
inc
fsubrp
mov
push
cmps
lds
mov
stc
mov
mov
cdq
add
daa
lods
dec
loop
inc
rcr
lods
lods
in
inc
sti
aam
inc
inc
inc
xchg
push
mov
movs
add
(bad)
icebp
mov
ror
pop
mov
sub
lods
push
inc
and
mov
mov
sbb
cmc
in
inc
sti
aam
inc
inc
inc
xchg
push
mov
movs
add
(bad)
icebp
mov
or
inc
pop
mov
ret
sub
add
cwde
enter
std
dec
fidiv
fld
mov
mov
movs
dec
inc
inc
adc
fsubrp
mov
mov
stc
mov
mov
fwait
add
daa
lods
xor
sbb
xchg
add
inc
mov
and
mov
ficomp
inc
sub
jo
add
add
inc
inc
push
cmc
lods
mov
inc
or
mov
vpshufhw
stc
mov
mov
mov
imul
jp
jo
div
(bad)
mov
inc
fimul
mov
inc
push
add
mov
stos
dec
inc
inc
inc
push
cmc
test
and
xchg
push
xchg
lds
mov
or
mov
mov
pop
and
jns
mov
mov
iret
lahf
pushf
jo
(bad)
and
lock
jo
mov
mov
sub
add
inc
iret
pop
(bad)
mov
inc
fidiv
stos
sub
pop
ret
inc
enter
inc
lods
into
cs
mov
cdq
add
sbb
lahf
pushf
jo
inc
fidiv
stos
or
cmps
cwde
add
sbb
test
fnsave
ret
mov
and
and
sbb
fidiv
mov
pushf
rol
jo
adc
iret
out
dec
fs
mov
pop
aad
mov
fwait
js
jp
jg
sbb
retf
pop
loopne
mov
push
je
inc
fidiv
retf
pop
cld
mov
imul
xor
add
mov
test
lods
or
jo
leave
mov
push
fdiv
retf
dec
sar
jne
jo
retf
pop
or
mov
and
inc
inc
push
and
mov
dec
(bad)
adc
xor
xlat
inc
lea
mov
fadd
inc
push
cmc
cmp
and
mov
inc
fdivrp
shl
(bad)
mov
mov
fidiv
pop
(bad)
sti
leave
cmp
(bad)
mov
leave
push
add
mov
(bad)
adc
xor
xlat
push
lea
jo
jo
inc
or
inc
stos
pusha
inc
inc
inc
push
cmc
sar
xor
inc
mov
cs
push
cmc
loopne
and
inc
inc
ss
lods
jge
jo
sub
jno
inc
push
cmc
lock
jno
push
inc
mov
cwde
add
sbb
fdivp
lods
push
cs
mov
sub
inc
inc
out
mov
sbb
jo
stos
ror
inc
inc
fdivrp
sar
cmc
lock
mov
(bad)
and
mov
mov
push
lea
mov
jle
mov
mul
(bad)
mov
mov
push
cmc
fdivr
stos
jge
stos
loopne
inc
inc
out
mov
mov
jo
sub
push
inc
push
cmc
mov
stos
je
inc
inc
push
mov
push
mov
(bad)
push
mov
mov
ss
inc
ficomp
int
pop
lea
inc
push
cmc
cld
mov
enter
pop
mov
retf
es
mov
cli
and
inc
test
mov
inc
ficom
add
mov
call
mov
and
cmc
lods
mov
pop
mov
add
jo
(bad)
data16
mov
(bad)
sbb
mov
data16
sub
sbb
sbb
std
sar
jo
mov
jo
dec
push
jg
fidiv
mov
and
int
test
sub
add
inc
sub
cmc
mov
stos
je
inc
inc
pop
mov
test
mov
ins
pop
xchg
fidiv
(bad)
and
xor
jmp
inc
retf
sbb
sbb
jmp
mov
lods
lea
mov
stos
xor
mov
cmp
ficomp
(bad)
dec
mov
sub
add
jo
ficomp
inc
inc
fidiv
(bad)
and
lods
cmc
jmp
sahf
pushf
jo
(bad)
and
add
and
mov
addr16
aad
mov
ret
fisub
(bad)
mov
and
pop
aad
mov
sbb
je
fdivrp
shl
(bad)
mov
inc
fmulp
rcr
mov
push
cmc
xor
and
xor
fidiv
inc
and
loopne
and
inc
mov
and
iret
mov
cld
sbb
jo
mov
stc
shr
(bad)
mov
sbb
mov
inc
mov
mov
adc
sti
sbb
test
stc
mov
mov
in
jo
retf
sbb
int
and
mov
mov
in
jo
retf
sbb
int
and
ja
fdivrp
xchg
and
ja
fdivrp
xchg
and
mov
inc
push
jg
pop
sub
dec
imul
lods
stc
in
jo
retf
sbb
stos
adc
jo
jae
repz
jg
adc
retf
inc
iret
fwait
push
adc
fs
inc
inc
pop
mov
mov
pop
mov
adc
dec
jne
fimul
add
and
es
mov
push
rol
add
(bad)
adc
mov
pop
dec
imul
mov
pop
sub
add
and
fwait
mov
fisub
sub
lea
inc
sub
sbb
inc
inc
inc
push
mov
lods
and
mov
adc
push
xor
je
fidiv
stos
test
inc
push
xor
lea
xchg
outs
inc
inc
ss
je
fisub
adc
cmp
pop
and
push
mov
enter
mov
stc
sar
(bad)
mov
(bad)
ds
mov
iret
pop
int3
movs
mov
push
nop
mov
sahf
pushf
jo
xor
jns
dec
pop
loopne
inc
fdivp
mov
enter
and
and
jo
rcr
dec
sub
mov
stos
lock
inc
inc
push
mov
mov
out
mov
test
ds
mov
iret
pop
int3
movs
mov
push
nop
mov
sub
push
add
retf
es
mov
neg
nop
mov
inc
fdivp
or
xor
lds
rcr
jne
sahf
fwait
dec
ret
xor
inc
ficomp
sbb
pop
mov
retf
cmp
push
(bad)
fidiv
shl
jo
adc
into
out
push
sub
lds
add
mov
sub
jno
inc
sub
stc
popf
rcl
add
loop
inc
aaa
daa
stc
sub
stc
sahf
inc
and
lods
popa
bound
sub
add
inc
adc
xor
or
shr
fidiv
mov
or
mov
fwait
add
std
rol
mov
inc
fdivp
or
ja
fmulp
dec
inc
fidiv
mov
repz
mov
xor
jo
mov
in
jo
rcr
lods
stc
in
jo
sti
aam
inc
inc
inc
xchg
imul
ja
fmulp
daa
inc
fidiv
mov
and
(bad)
ficom
sbb
pushf
jo
(bad)
ficom
in
fidiv
xchg
cwde
les
jo
dec
fidiv
fld
mov
mov
cs
push
inc
push
cmc
inc
mov
inc
inc
inc
inc
pop
mov
retf
cs
mov
sbb
jae
pushf
jo
(bad)
ficom
shl
mov
fidiv
fld
mov
mov
cs
push
inc
push
cmc
inc
mov
add
pop
mov
stos
les
inc
addr16
inc
fsubrp
mov
pop
mov
neg
std
and
jo
fld
mov
iret
arpl
mov
add
inc
iret
arpl
mov
in
jo
rcr
mov
popf
pushf
jo
(bad)
ficom
gs
pushf
jo
(bad)
ficom
cwde
jo
jo
xchg
stc
mov
cmp
shl
cwde
hlt
jo
jo
dec
fidiv
fld
mov
mov
cs
push
inc
push
cmc
inc
mov
adc
inc
pop
mov
sub
scas
push
inc
push
cmc
inc
mov
fs
inc
inc
pop
mov
stos
test
inc
inc
addr16
inc
fsubrp
mov
pop
mov
retf
mov
ficom
shl
jo
xchg
sbb
pushf
jo
(bad)
ficom
les
jo
xchg
stc
mov
cmp
shl
cwde
je
fidiv
dec
fidiv
fld
mov
mov
rol
adc
fsubrp
mov
mov
stc
inc
ds
mov
add
std
stc
inc
ds
mov
inc
fdivp
adc
call
(bad)
mov
inc
fdivp
or
jne
fmulp
dec
inc
fidiv
mov
repz
mov
xor
jo
mov
out
jo
rcr
sub
add
inc
iret
pop
jo
mov
out
jo
rcr
int
out
or
shl
fmulp
dec
inc
fidiv
mov
repz
mov
xor
jo
mov
out
jo
rcr
sub
add
inc
iret
pop
jo
mov
out
jo
rcr
lods
and
aam
inc
inc
inc
xchg
push
mov
movs
add
std
rol
mov
inc
fdivp
or
xlat
outs
fidiv
aaa
sar
rol
mov
add
std
rol
mov
inc
fdivp
adc
jne
fmulp
dec
inc
fidiv
mov
repz
mov
xor
jo
mov
out
jo
rcr
sub
add
inc
iret
pop
jo
mov
out
jo
rcr
lods
mov
aam
inc
inc
inc
xchg
push
mov
movs
add
std
rol
mov
inc
fdivp
or
sub
xchg
mov
jo
inc
inc
addr16
inc
inc
fsubrp
mov
push
cmps
lds
mov
stc
inc
ds
mov
add
std
stc
inc
ds
mov
inc
fdivp
adc
je
fmulp
dec
inc
fidiv
mov
repz
mov
xor
jo
mov
out
jo
rcr
sub
add
inc
iret
pop
jo
mov
out
jo
rcr
lds
dec
je
fmulp
dec
inc
fidiv
mov
repz
mov
xor
jo
mov
out
jo
rcr
lods
push
out
jo
sti
aam
inc
inc
inc
xchg
imul
je
fmulp
daa
inc
fidiv
mov
and
(bad)
ficom
sbb
pushf
jo
(bad)
ficom
mov
xchg
sbb
ficom
dec
jb
jo
xchg
sbb
sbb
ficomp
inc
sub
jo
add
jo
(bad)
and
lea
jo
(bad)
ficom
dec
outs
fidiv
inc
push
int
popf
and
inc
mov
imul
fidiv
mul
scas
mov
inc
fiadd
add
or
sub
int
pop
pushf
rol
pop
adc
iret
stos
daa
and
xchg
int
pop
mov
out
lea
ret
sbb
xor
sti
sbb
cwde
in
fidiv
pop
(bad)
std
adc
stc
rcl
and
mov
mov
xchg
pop
inc
inc
mov
lods
jp
(bad)
mov
inc
ficomp
inc
xchg
pushf
jo
xor
pop
sar
sub
std
shl
(bad)
mov
inc
ficomp
inc
inc
fidiv
(bad)
push
mov
sahf
pushf
jo
test
inc
sub
jo
ret
mov
data16
mov
(bad)
jae
inc
inc
mov
inc
inc
fdivrp
sar
cmc
lock
in
inc
inc
push
mov
push
mov
idiv
mov
mul
(bad)
mov
mov
xlat
mov
(bad)
scas
jb
inc
mov
cwde
add
std
sar
fldcw
fdivrp
shl
(bad)
mov
mov
dec
pop
inc
inc
xchg
fisub
(bad)
mov
retf
sbb
add
fdivrp
sar
(bad)
mov
inc
fdivp
sbb
push
inc
fidiv
(bad)
data16
inc
sbb
mov
inc
fidiv
inc
mov
and
cmc
lods
mov
pop
mov
sub
jo
(bad)
data16
movs
and
mov
(bad)
data16
sub
sbb
sbb
std
sar
jo
mov
push
jg
rcr
inc
mov
and
int
fisttp
in
and
inc
sub
cmc
mov
stos
ins
pop
inc
inc
pop
mov
test
mov
ins
pop
mov
jp
jo
(bad)
and
xor
cmc
jo
retf
sbb
aaa
lds
lods
inc
fidiv
xor
jo
ret
mov
(bad)
mov
jne
mov
xchg
xlat
jno
inc
mov
mov
ficomp
int
test
rcl
(bad)
mov
push
mov
cwde
add
std
rcl
(bad)
mov
mov
jecxz
mov
test
jo
iret
pop
cld
mov
stos
outs
xchg
dec
push
jg
in
fidiv
sub
(bad)
icebp
(bad)
and
mov
or
sub
das
inc
fdivrp
rcr
(bad)
mov
mov
or
icebp
(bad)
and
inc
inc
mov
cwde
add
cwde
pop
push
aad
push
inc
mov
mov
pushf
jo
mov
inc
in
mov
js
stc
xchg
and
mov
and
or
iret
mov
ja
mov
mov
mov
xor
lods
inc
div
test
mov
inc
fdivrp
shl
(bad)
mov
inc
fdivrp
mov
sub
(bad)
icebp
out
(bad)
mov
inc
and
loopne
and
inc
leave
pop
in
mov
ret
sub
inc
fisubr
sbb
pop
mov
inc
mov
mov
adc
sti
sbb
xchg
arpl
jo
adc
and
add
xchg
pop
inc
inc
push
and
push
adc
inc
retf
sbb
adc
data16
inc
fiadd
int
lea
mov
inc
fbld
lods
inc
stc
jo
adc
sub
fdivrp
add
mov
sbb
ficomp
inc
sub
cwde
push
imul
int
mov
adc
push
mov
retf
sbb
add
stc
jo
adc
sbb
add
sbb
jo
inc
ficomp
adc
clc
icebp
or
inc
sub
(bad)
xor
lea
stc
or
pop
mov
aaa
fiadd
test
fidiv
(bad)
fild
lods
movs
div
sub
(bad)
xor
cmc
inc
mov
(bad)
adc
cwde
sar
and
int
xor
push
inc
inc
mov
adc
push
mov
in
sub
mov
std
popf
aaa
rcr
out
cmp
jo
test
adc
fwait
mov
fsubr
adc
mov
mov
xchg
iret
fwait
test
ficomp
pop
inc
fidiv
ja
rol
inc
ss
ins
inc
fidivr
pop
and
test
sbb
pop
sub
lods
(bad)
jo
rcr
leave
pop
sub
cs
mov
inc
inc
fimul
inc
stos
and
inc
inc
mov
mov
ds
das
lea
xor
pusha
add
pop
mov
lods
dec
fidiv
movs
push
xor
inc
sub
sbb
sbb
fistp
inc
sub
sbb
jno
inc
mov
cs
mov
cs
ss
ins
inc
fdivrp
cmp
jp
inc
sub
sub
daa
cs
inc
shl
jo
int
jo
sub
daa
cs
inc
lods
fistp
jo
sub
daa
cs
inc
(bad)
lods
sub
fbld
cs
inc
push
sbb
fbld
cs
inc
pop
xlat
sahf
jo
or
xor
adc
sbb
mov
mov
inc
ss
ins
inc
ficomp
inc
adc
(bad)
out
add
inc
ficomp
inc
adc
dec
rol
inc
imul
inc
mov
inc
ss
inc
fdivrp
mov
cs
sub
daa
cs
inc
je
lahf
jo
mov
jo
sub
daa
cs
inc
mov
lahf
jo
mov
fbld
cs
inc
shl
pushf
jo
xchg
stc
jo
sub
daa
cs
inc
fsub
pushf
jo
cmp
pop
inc
inc
sub
sbb
mov
fbld
jo
sub
(bad)
jno
inc
xor
push
inc
inc
jge
rol
ficomp
push
lds
inc
lods
fistp
jo
sub
(bad)
jno
jg
inc
stos
cld
push
inc
inc
jge
fild
ficomp
push
lds
inc
(bad)
lods
push
stc
jo
ret
sub
dec
inc
ficomp
mov
add
cwde
mov
inc
xor
test
repnz
add
inc
ficomp
mov
add
cwde
nop
fidiv
inc
dec
xor
test
ret
inc
ss
mov
add
cwde
hlt
fidiv
cmp
inc
sub
test
imul
add
inc
ficomp
mov
add
cwde
enter
out
inc
xor
test
(bad)
out
add
inc
fdivrp
mov
sub
(bad)
jno
jg
inc
stos
mov
ins
fild
ficomp
push
lds
inc
shl
jo
adc
sbb
pushf
push
adc
iret
mov
dec
ins
lds
mov
lahf
add
(bad)
xor
loopne
mov
xor
(bad)
mov
into
ror
jo
inc
mov
lds
push
xor
sub
jo
inc
and
fstp
sti
add
push
xor
adc
ficomp
inc
sub
jo
adc
sbb
inc
fdiv
stos
loopne
inc
inc
jge
in
ficomp
inc
mov
ficomp
inc
adc
add
mov
cs
mov
inc
ret
sbb
xor
cwde
dec
fidiv
inc
inc
xor
pop
mov
mov
ficomp
inc
mov
ficomp
aam
fidiv
pop
es
add
mov
cs
mov
inc
ret
cwde
popf
pushf
jo
cwde
add
cwde
and
out
jle
inc
sub
sbb
ficomp
inc
sub
sbb
ficomp
inc
sub
sbb
inc
fidiv
inc
mov
cs
mov
lods
inc
clc
jo
retf
sbb
inc
adc
inc
mov
inc
ss
inc
mov
ficomp
inc
mov
ficomp
push
sub
jb
inc
mov
cs
jo
inc
mov
sub
add
cwde
sbb
fidiv
ds
inc
ret
sub
inc
ficomp
inc
mov
ficomp
inc
mov
ficomp
push
sub
jb
inc
mov
cs
jo
inc
mov
pop
cdq
pushf
jo
cwde
add
cwde
pop
fidiv
loop
xor
(bad)
jno
inc
xor
(bad)
jno
jle
inc
sub
sbb
loop
jo
sub
sbb
and
add
inc
sub
push
inc
mov
lods
mov
shr
add
ja
out
add
ja
rol
cmp
jo
sub
inc
inc
mov
sub
fidiv
sub
push
inc
mov
lahf
add
sbb
push
inc
inc
jge
fild
ficomp
inc
mov
ficomp
inc
mov
ficomp
and
mov
jo
push
mov
inc
ret
cwde
popf
pushf
jo
mov
xor
jo
stos
inc
xor
cli
pusha
inc
ficomp
ds
pushf
jo
inc
mov
inc
inc
fisub
lods
jno
jo
sub
jo
add
jo
mov
ficomp
cs
and
fstp
inc
and
pushf
jo
outs
fbstp
sub
sbb
inc
fidiv
cmp
sbb
mov
dec
data16
ret
inc
ret
sbb
inc
ficomp
inc
mov
ficomp
inc
mov
ficomp
push
jle
fiadd
sbb
inc
fidiv
inc
fdivp
adc
add
sahf
add
sbb
push
inc
inc
jge
fild
ficomp
cs
and
fstp
inc
add
lahf
jo
push
mov
sub
fidiv
sub
jo
inc
mov
das
cwde
pushf
jo
cwde
add
cwde
enter
out
jge
inc
retf
xchg
test
add
ja
rol
ret
fidiv
sub
jo
inc
mov
inc
inc
ficomp
inc
inc
fisub
sub
add
inc
sub
push
inc
mov
lods
add
stos
rol
inc
mov
mov
inc
mov
mov
inc
mov
cs
ficomp
xchg
jo
inc
fidiv
sub
lahf
add
sbb
push
inc
inc
jge
fld
ficomp
inc
mov
ficomp
inc
mov
ficomp
push
sub
jo
inc
mov
inc
inc
ficomp
and
fidiv
adc
sbb
inc
movs
inc
(bad)
mov
lahf
jo
inc
and
fstp
inc
add
lahf
jo
push
mov
sub
fbstp
sub
inc
inc
mov
inc
inc
mov
inc
cwde
pushf
jo
cwde
add
cwde
fsub
jo
(bad)
jge
inc
sub
(bad)
jno
inc
xor
(bad)
jno
jle
inc
sub
sbb
fidiv
rcr
jo
sub
sbb
and
add
inc
sub
stos
push
inc
mov
inc
inc
ficomp
out
jg
inc
sub
(bad)
jno
inc
xor
(bad)
jno
jle
inc
sub
sbb
inc
fidiv
sbb
sbb
and
jl
inc
sub
stos
push
inc
mov
inc
inc
ficomp
out
dec
xor
pop
mov
mov
ficomp
inc
mov
ficomp
pop
sub
sbb
push
mov
inc
ret
cwde
popf
pushf
jo
inc
add
inc
sub
jb
inc
ss
gs
(bad)
ins
fstp
inc
jo
lahf
jo
inc
and
loop
jo
pop
mov
sub
fidiv
sub
sbb
and
add
inc
sub
stos
push
inc
mov
inc
inc
ficomp
out
inc
xor
(bad)
jno
inc
xor
(bad)
jno
jle
inc
sub
sbb
inc
fidiv
jmp
jo
sub
sbb
and
pop
xor
test
lods
xor
jo
loope
rol
inc
sub
es
sub
lea
xor
adc
ret
jae
stc
sub
stos
push
inc
and
mov
scas
add
ins
mov
and
adc
fild
fdivrp
mov
sub
(bad)
jno
inc
xor
push
inc
inc
push
xor
inc
(bad)
fidiv
inc
and
fstp
sti
add
push
xor
adc
ficomp
inc
sub
jo
adc
sbb
inc
fdiv
stos
or
inc
inc
jge
in
ficomp
inc
mov
ficomp
inc
adc
add
mov
cs
mov
inc
ret
lea
add
cwde
fsub
jo
inc
inc
xor
sbb
inc
mov
ficomp
inc
mov
ficomp
push
pop
es
add
mov
cs
mov
inc
ret
cwde
popf
pushf
jo
cwde
add
cwde
sbb
fidiv
and
inc
sub
sbb
ficomp
inc
sub
sbb
ficomp
inc
sub
sbb
inc
fidiv
inc
mov
cs
mov
lods
fsin
jo
retf
sbb
inc
adc
inc
mov
inc
mov
ficomp
inc
mov
ficomp
inc
mov
ficomp
and
mov
sbb
pop
and
add
inc
sub
push
inc
mov
lods
lods
shl
ss
add
push
fidiv
cmp
inc
sub
sbb
inc
fidiv
stos
jo
inc
inc
mov
sahf
add
sbb
jno
inc
and
fistp
jo
ret
out
fiadd
mov
cs
mov
inc
inc
fimul
inc
stos
movs
outs
inc
inc
xor
jo
or
jo
mov
ficomp
cs
and
fstp
inc
and
pushf
jo
outs
fbstp
sub
sbb
movs
sbb
pop
and
add
inc
sub
push
inc
mov
lods
adc
pop
rol
inc
push
mov
push
mov
inc
and
fstp
inc
and
pushf
jo
outs
fbstp
sub
sbb
jo
inc
inc
mov
inc
ret
cwde
popf
pushf
jo
mov
pop
pop
fidiv
outs
inc
xor
test
ja
out
add
ja
rol
ret
fidiv
sub
jo
inc
fidiv
sub
stos
lahf
add
sbb
outs
inc
inc
jge
in
ficomp
inc
mov
ficomp
inc
mov
ficomp
push
sub
jo
sbb
jo
adc
sbb
inc
rcr
(bad)
je
lahf
jo
stos
in
jo
mov
stc
add
and
fstp
inc
add
lahf
jo
push
mov
inc
inc
ficomp
in
fidiv
es
inc
inc
mov
push
cwde
pushf
jo
cwde
add
cwde
sbb
out
inc
xor
(bad)
jno
inc
xor
(bad)
jno
jle
inc
sub
sbb
sub
inc
inc
mov
inc
inc
ficomp
inc
inc
fisub
sub
add
inc
sub
push
inc
mov
lods
popa
shl
dec
rol
inc
mov
mov
inc
mov
mov
inc
mov
sub
fbstp
sub
jo
inc
mov
sub
fidiv
sub
stos
lahf
add
sbb
ins
inc
inc
jge
in
ficomp
inc
mov
ficomp
inc
mov
ficomp
push
sub
jo
inc
mov
inc
inc
ficomp
pop
sub
jo
adc
sbb
inc
rcr
shl
loope
jo
inc
and
fstp
inc
and
pushf
jo
pop
mov
inc
inc
ficomp
imul
pop
and
jl
inc
sub
stos
push
inc
mov
inc
inc
ficomp
out
dec
xor
repz
mov
ficomp
inc
mov
ficomp
pop
sub
sbb
sub
sbb
and
add
inc
sub
stos
push
inc
mov
inc
inc
ficomp
out
inc
xor
(bad)
jno
inc
xor
(bad)
jno
jle
inc
sub
sbb
sub
jo
adc
sbb
pushf
jo
inc
fdiv
stos
fsubr
inc
jge
fild
ficomp
inc
mov
ficomp
inc
mov
ficomp
push
sub
inc
inc
mov
inc
inc
ficomp
pop
sub
jo
adc
sbb
inc
ss
fsub
pushf
jo
imul
and
xchg
int
ss
sub
lea
xor
adc
iret
data16
jl
mov
xor
sub
sbb
inc
fidiv
inc
mov
cs
mov
inc
inc
pop
(bad)
xor
in
pop
inc
fdivrp
add
(bad)
dec
(bad)
dec
jo
inc
mov
adc
push
mov
stos
push
adc
mov
fidiv
retf
xchg
test
mov
push
xor
mov
sub
les
inc
mov
inc
inc
pop
cwde
or
xchg
dec
sbb
and
push
inc
mov
popf
add
(bad)
xor
add
mov
retf
fwait
mov
stos
push
cs
mov
leave
pop
and
neg
les
pop
mov
retf
es
mov
sbb
mov
retf
cmp
test
fbstp
adc
adc
mov
or
pop
sahf
test
xor
jo
mov
(bad)
jo
stos
and
inc
inc
addr16
inc
fsubrp
mov
push
mov
cmp
arpl
push
inc
push
cmc
inc
mov
call
sub
mov
aas
and
push
mov
hlt
add
std
rol
mov
inc
fdivp
cmp
sub
push
inc
push
cmc
inc
mov
fsubr
inc
pop
or
sub
outs
xor
jo
mov
leave
jo
retf
cs
retf
sbb
cmp
out
rol
push
cmc
inc
mov
adc
inc
pop
or
sub
outs
xor
jo
mov
leave
jo
ret
inc
aaa
iret
sbb
repz
jo
(bad)
fimul
in
fidiv
aas
and
push
mov
cmc
add
std
rol
mov
inc
fdivrp
mov
cs
add
(bad)
dec
aaa
iret
sbb
repz
jo
(bad)
fimul
sub
jo
aas
and
push
mov
cmc
add
std
rol
mov
inc
fdivp
cmp
ffreep
push
inc
push
cmc
inc
mov
loopne
inc
inc
pop
or
sub
ins
xor
jo
mov
leave
jo
ret
dec
aaa
iret
sbb
pushf
jo
(bad)
fimul
push
push
fidiv
mov
xchg
int
and
les
and
push
mov
test
std
rol
mov
inc
ficomp
inc
sub
sbb
fwait
pushf
jo
or
xor
jo
mov
inc
xor
xchg
mov
add
sbb
repz
jo
add
inc
stos
or
dec
ficomp
mov
and
bound
mov
inc
mov
mov
aaa
(bad)
iret
mov
mov
push
xchg
stos
pop
push
inc
inc
mov
lods
dec
xor
dec
sub
adc
jo
sbb
sub
int
pop
pushf
jl
fidiv
adc
into
inc
jnp
dec
lds
sahf
addr16
jo
xor
iret
pop
popf
mov
and
lods
imul
push
inc
addr16
inc
fsubrp
mov
push
in
mov
sub
add
push
inc
push
cmc
test
stos
and
inc
pop
int
mov
iret
sbb
(bad)
xor
mov
jmp
add
push
inc
push
cmc
test
stos
adc
inc
inc
data16
inc
fiadd
mov
and
add
cmp
jno
add
std
shr
rcl
fdivp
stc
mov
(bad)
mov
pop
ins
xor
popf
mov
and
lods
vpshuflw
mov
push
mov
test
sub
push
inc
fdivp
stc
mov
(bad)
mov
or
pop
popf
mov
and
lods
adc
jo
retf
cs
retf
sbb
stc
mov
(bad)
mov
cs
xor
popf
mov
and
lods
jno
jo
ret
mov
push
mov
test
sub
push
inc
fdivp
stc
mov
(bad)
mov
call
pop
popf
mov
and
lods
mov
arpl
xor
mov
shr
xchg
push
inc
fdivrp
mov
cmp
shl
lock
mov
(bad)
mov
stos
ins
xor
popf
mov
and
lods
std
retf
ret
mov
push
mov
lock
std
shr
aad
inc
fdivp
stc
mov
(bad)
mov
bound
inc
iret
pop
popf
mov
and
lods
leave
retf
sub
cmc
test
stos
retf
mov
push
cmc
cwde
mov
(bad)
int
mov
in
ficomp
retf
lock
jo
mov
sbb
(bad)
xchg
mov
shl
stc
stos
sub
jg
fidiv
lods
pop
jnp
inc
push
xor
and
int
out
stos
cs
mov
in
ficomp
mov
push
jg
cdq
fdiv
stos
fbstp
inc
pop
int
mov
pop
mov
stc
mov
shl
jg
fidiv
jmp
mov
ins
fbstp
test
mov
or
jo
mov
stc
rcl
std
sar
inc
popf
add
std
sar
icebp
pop
inc
fdivp
or
mov
neg
inc
push
mov
test
mov
daa
outs
ins
mov
sbb
jmp
mov
inc
fidiv
jg
in
add
sub
push
inc
mov
popf
add
std
sar
gs
inc
fdivrp
mov
cs
sub
rol
inc
mov
popf
add
std
sar
mov
fdivp
sbb
sub
fidiv
iret
pop
mov
retf
cli
ins
sub
inc
sub
mov
(bad)
and
push
fwait
pushf
jo
(bad)
and
clc
push
fidiv
inc
pop
xor
mov
leave
jo
rcr
leave
(bad)
and
push
push
fidiv
(bad)
and
adc
mov
sub
push
inc
push
cmc
mov
stos
movs
addr16
inc
pop
mov
sub
std
sar
aad
inc
ficomp
inc
sub
test
inc
push
cmc
mov
stos
movs
in
mov
dec
push
jg
and
jo
iret
pop
mov
inc
mov
sbb
mov
cmp
rcl
repz
mov
shl
jo
fidiv
mul
mov
add
sbb
(bad)
and
inc
push
fidiv
xchg
sbb
lock
jo
(bad)
and
jo
fidiv
(bad)
and
jo
fidiv
(bad)
or
iret
(bad)
or
inc
mov
stos
pusha
iret
(bad)
or
inc
mov
xor
xchg
mov
pop
psubw
sub
icebp
mov
pop
mov
xchg
push
xor
mov
cmp
sbb
(bad)
and
adc
int
push
xchg
mov
ins
arpl
int
mov
(bad)
pusha
adc
sahf
cwde
movs
push
fidiv
(bad)
sub
out
push
fidiv
(bad)
and
icebp
mov
(bad)
mov
inc
push
cmc
mov
stos
test
inc
inc
push
int
mov
arpl
inc
fbld
lods
adc
jo
iret
pop
mov
and
mov
and
inc
sub
sbb
arpl
cwde
nop
push
fidiv
(bad)
and
div
mov
mov
push
mov
adc
dec
mov
xor
push
inc
fdivp
stos
ins
xchg
jo
sub
inc
push
inc
fisubr
lods
out
and
mov
sbb
adc
cmp
and
jo
stc
into
jo
adc
lea
push
inc
pushf
retf
sbb
jo
inc
mov
inc
pop
ficomp
int
jp
mov
push
mov
cs
ss
inc
fisubr
lds
push
xor
add
fistp
jo
call
mov
adc
inc
stos
mov
pop
sbb
jecxz
jo
popa
iret
jo
stos
call
cwde
fs
fidiv
test
mov
inc
inc
fdivrp
shl
(bad)
mov
stos
adc
inc
mov
sub
jg
inc
iret
pop
shr
inc
(bad)
mov
mov
pop
outs
inc
inc
fdivp
inc
ss
inc
dec
andnps
neg
push
inc
pop
mov
pop
fidiv
loope
jo
clc
or
stc
test
pop
mov
adc
xchg
sbb
mov
and
mov
xor
jo
dec
push
(bad)
(bad)
xchg
xchg
adc
mov
test
mov
daa
outs
ins
mov
sbb
and
int3
(bad)
jecxz
test
icebp
xor
imul
test
lds
sbb
out
scas
and
inc
inc
push
mov
sbb
dec
test
test
(bad)
je
mov
loope
(bad)
mov
add
sbb
mov
dec
push
fidiv
mov
bound
jo
mov
shl
(bad)
mov
inc
fdivrp
rcr
(bad)
mov
mov
xor
cmp
jo
mov
inc
push
fidiv
inc
ss
dec
inc
fdivp
mov
clc
jo
sub
push
inc
mov
in
ficomp
sbb
xor
arpl
int
lods
and
push
inc
addr16
inc
inc
fiadd
pushf
add
sbb
jecxz
jo
test
xor
rol
inc
ss
pushf
imul
xchg
arpl
mov
or
inc
sti
ret
jo
inc
sub
test
inc
mov
in
ficomp
sbb
xor
arpl
int
scas
and
push
inc
addr16
inc
inc
fiadd
pushf
add
sbb
jecxz
jo
test
xor
out
add
inc
fdivp
add
int
scas
and
push
inc
addr16
inc
fiadd
pushf
retf
sbb
sbb
ficomp
inc
sub
jo
add
cwde
fmul
jo
pop
push
inc
sub
sbb
fisttp
fidiv
inc
inc
push
xor
icebp
lods
and
inc
inc
push
std
icebp
lods
and
les
jo
mov
data16
arpl
stos
mov
push
cwde
dec
fidiv
inc
push
xor
sub
xor
les
xor
mov
cli
and
inc
push
xor
icebp
lods
and
inc
inc
push
std
icebp
lods
and
les
jo
mov
data16
arpl
stos
mov
push
ror
cs
push
xor
sub
xor
les
stos
les
or
inc
inc
sub
mov
scas
and
movs
cdq
pushf
jo
pop
shl
lahf
jo
pop
adc
inc
mov
fwait
mov
inc
mov
cwde
clc
dec
fidiv
pop
or
inc
cmp
ss
dec
inc
fdivrp
add
fidiv
pop
add
inc
ficomp
inc
stos
dec
pusha
inc
inc
push
xor
inc
inc
fidiv
call
add
inc
test
jo
pop
bound
lods
rcl
jo
sub
(bad)
jno
inc
xor
sbb
sbb
sbb
jo
inc
mov
lahf
add
sbb
inc
ss
inc
(bad)
inc
fstp
xor
sbb
jle
inc
mov
lods
loopne
(bad)
mov
xor
jo
jg
jo
ret
sub
push
xor
jge
inc
mov
pushf
add
and
pop
fsubr
in
jo
stos
sbb
inc
inc
mov
adc
dec
fsubr
out
xor
inc
retf
push
pop
pushf
retf
sbb
(bad)
mov
lods
and
push
inc
mov
pushf
add
sbb
pushf
jo
inc
fidiv
stos
push
out
mov
push
add
lock
jo
inc
mov
push
inc
fbstp
inc
ss
mov
push
stc
xchg
pop
fsubr
inc
mov
sub
scas
xor
sbb
jle
inc
mov
leave
(bad)
jbe
mov
sub
sbb
sahf
jo
inc
mov
lods
lods
shl
adc
sbb
ficomp
inc
sub
jno
inc
mov
mov
inc
sub
ficomp
adc
fs
inc
pop
mov
jle
jo
pop
cmp
lods
cmc
shl
sub
sbb
std
add
fidiv
sub
xchg
and
jl
fidiv
adc
iret
pop
jle
adc
test
xor
dec
(bad)
dec
jno
inc
mov
jg
daa
fbstp
stos
adc
inc
inc
jecxz
inc
inc
fidivr
xor
jo
jg
jno
inc
stos
imul
jo
dec
push
fisttp
dec
jl
fidiv
(bad)
mov
in
dec
inc
fdivp
jns
push
inc
inc
shl
nop
inc
fidiv
mov
xor
sbb
add
cwde
jnp
and
mov
mov
add
pushf
mov
cmps
and
shr
test
mov
lea
inc
fidivr
dec
pop
cmc
inc
inc
fdivrp
ror
inc
add
lahf
jo
mov
jo
dec
push
add
leave
pop
nop
mov
call
iret
xlat
push
lea
mov
stos
outs
iret
(bad)
cmp
cwde
mov
(bad)
rcl
dec
mov
xchg
ss
sbb
pop
xchg
mov
sahf
and
movs
mov
push
lea
sub
(bad)
jno
jle
inc
stos
je
inc
inc
pop
xchg
fidiv
jg
les
inc
fidivr
sbb
inc
jecxz
les
inc
jge
lock
icebp
mov
in
inc
sar
lock
jo
jg
les
inc
fiadd
scas
mov
scas
les
inc
fistp
into
fnstenv
mov
ficomp
sbb
inc
push
mov
push
mov
inc
inc
xor
js
(bad)
mov
jo
inc
shl
stos
test
inc
jg
fild
fimul
dec
stos
js
aaa
(bad)
cwde
push
dec
fidiv
pop
repz
mov
stc
shr
cdq
jno
fidiv
pop
retf
mov
sub
outs
inc
fimul
sar
inc
ss
ss
inc
jb
xor
dec
inc
mov
xor
dec
inc
(bad)
jge
inc
ss
dec
inc
ds
inc
ss
loop
xor
dec
inc
dec
inc
xor
dec
inc
push
inc
xor
stos
inc
inc
ficomp
inc
mov
shl
leave
pop
mov
ds
inc
ss
dec
inc
loop
xor
dec
inc
jbe
xor
sbb
push
into
jo
aaa
into
cwde
cld
dec
fidiv
mov
stos
pusha
lods
fst
jo
cli
repz
inc
inc
sub
mov
out
lea
mov
push
cmc
cwde
mov
push
jl
inc
push
cmc
lods
mov
pop
push
inc
aaa
cs
inc
fdivrp
mov
sub
jo
inc
push
cmc
inc
mov
jmp
fld
ficomp
(bad)
(bad)
fisttp
fs
sbb
test
inc
mov
lods
adc
jmp
fld
ficomp
lods
mov
jo
retf
es
mov
inc
and
mov
mov
(bad)
mov
neg
inc
inc
ficomp
mov
(bad)
fisttp
jno
jg
inc
stos
pop
jp
inc
push
std
inc
mov
and
les
jo
mov
ret
sbb
adc
mov
and
mov
jg
pop
push
cs
mov
sub
push
xor
cwde
mov
jo
ja
rol
inc
ss
and
jo
(bad)
mov
stc
shr
std
rol
mov
mov
repz
inc
push
cmc
mov
and
inc
inc
pop
mov
sub
jo
inc
push
cmc
inc
mov
jmp
rol
ficomp
(bad)
(bad)
fisttp
fs
sbb
test
inc
mov
lods
adc
jmp
rol
ficomp
lods
mov
jo
iret
push
jno
mov
sahf
lock
fiadd
xor
jo
inc
mov
xchg
add
sbb
jp
inc
and
xlat
sahf
jo
(bad)
xlat
jo
stos
pop
je
inc
sbb
inc
mov
jecxz
repnz
fimul
inc
inc
and
inc
jle
push
fs
sbb
cmps
push
inc
mov
lods
mov
jmp
rol
ficomp
lods
rcr
inc
ret
mov
(bad)
fimul
ss
push
mov
push
mov
(bad)
fisttp
shl
pop
pushf
add
std
shl
in
inc
fdivp
adc
inc
inc
fdivrp
rol
mov
jecxz
jo
mov
arpl
mov
mov
cs
mov
xchg
add
sbb
jns
inc
and
jecxz
jo
push
xlat
jo
stos
xlat
je
inc
pop
lahf
dec
sub
jo
(bad)
fisttp
shl
pop
pushf
add
std
shl
pop
dec
inc
fdivp
adc
inc
inc
fdivrp
rol
mov
fstp
jo
ret
mov
bound
xchg
add
sbb
jns
inc
and
fstp
jo
stos
jg
inc
inc
push
mov
push
mov
(bad)
fisttp
shl
rcl
mov
(bad)
mov
inc
fdivp
adc
inc
inc
fdivrp
rol
mov
fstp
jo
ret
mov
bound
xchg
add
sbb
js
inc
and
fstp
jo
stos
out
inc
inc
push
std
inc
mov
and
les
jo
mov
(bad)
sbb
sbb
pushf
jo
inc
ss
jno
inc
xor
js
inc
aaa
je
inc
fidiv
mov
hlt
pop
(bad)
mov
inc
fisttp
cmp
dec
cmp
jo
inc
mov
xchg
add
sbb
js
inc
and
fstp
jo
stos
sbb
inc
pop
cmc
mov
enter
mov
addr16
mov
iret
pop
jno
mov
sub
imul
mov
mov
fisttp
jno
inc
xor
ja
inc
pop
int
mov
(bad)
sbb
sbb
pushf
jo
inc
fld
fimul
inc
stos
test
inc
aaa
cmp
inc
fidiv
mov
hlt
pop
mov
inc
fisttp
cmp
dec
cmp
jo
inc
mov
xchg
add
sbb
ja
inc
and
fstp
jo
stos
shl
inc
pop
cmc
mov
iret
push
jno
mov
sahf
lock
fiadd
mov
sub
test
inc
mov
pop
test
outs
push
xor
test
dec
xlat
jo
rcr
cld
cld
xor
cmp
shr
cwde
mov
sub
sbb
sbb
sbb
xor
inc
xor
jne
inc
push
cmc
mov
and
cs
and
mov
and
inc
ret
lock
jo
add
sahf
jo
mov
xor
jle
jo
mov
push
in
mov
mov
fld
fimul
mov
inc
mov
leave
(bad)
lea
sub
nop
push
inc
and
mov
and
inc
iret
push
test
mov
fiadd
shl
mov
fnstenv
and
mov
and
inc
sub
std
shl
jb
mov
xor
test
inc
fidiv
imul
mov
inc
fimul
inc
stos
pusha
jbe
inc
mov
cs
mov
cs
mov
sub
fidiv
sub
loopne
inc
ss
inc
inc
fdivrp
shl
xchg
mov
and
inc
sub
sbb
test
inc
fidiv
dec
dec
rol
inc
pop
mov
inc
inc
stos
mov
xor
sub
jl
inc
mov
and
cs
push
cmc
mov
and
test
pushf
jo
imul
mov
inc
fimul
mov
inc
sbb
neg
int
test
lock
sbb
adc
inc
sub
jo
ret
enter
sbb
mov
inc
movs
inc
inc
fmulp
in
pop
fidiv
movs
push
cmc
movs
mov
xor
(bad)
xor
add
lods
mov
sub
or
adc
cmp
test
lea
adc
stos
js
and
fsub
retf
es
retf
sbb
add
jo
inc
fidivr
xchg
fidiv
shl
inc
inc
fimul
(bad)
jg
inc
aaa
aad
jno
inc
xor
je
inc
push
mov
retf
sbb
stos
inc
xor
(bad)
jno
jg
inc
stos
pop
je
inc
in
(bad)
xor
inc
push
sub
jmp
fild
fiadd
rol
ficomp
int
sub
cmp
rol
fiadd
fild
ficomp
jg
imul
add
ja
out
add
inc
fimul
bound
inc
aaa
retf
xor
inc
inc
stos
jnp
ja
in
add
inc
fimul
bound
inc
aaa
shl
xor
inc
inc
stos
mov
rol
inc
test
ficomp
mov
test
stos
jg
ss
add
pop
(bad)
in
inc
in
(bad)
xor
js
lahf
jo
ja
out
add
pop
cli
out
add
pop
fidiv
ja
in
inc
stos
jbe
pop
fsubp
add
in
ins
fstp
ins
cmp
pushf
jo
ja
out
add
pop
bnd
shl
jo
inc
push
ins
pop
fstp
bound
push
and
xor
jo
inc
pop
mov
pop
fidiv
sbb
mov
mov
inc
dec
loopne
inc
fidiv
rol
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
inc
dec
loopne
inc
fidiv
inc
dec
loopne
inc
fidiv
repnz
inc
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
inc
fidiv
retf
cmp
adc
push
mov
jge
add
mov
inc
fidiv
xchg
stc
add
push
mov
test
inc
test
fnstcw
ss
mov
inc
cdq
jg
inc
xlat
mov
inc
pop
mov
sbb
jo
inc
mov
adc
fisub
lods
jns
(bad)
mov
ret
xor
inc
ficomp
push
fidiv
inc
cli
dec
inc
push
fidiv
test
cli
(bad)
movs
inc
fidiv
push
cli
js
and
mov
jo
popf
iret
xchg
(bad)
iret
push
cli
js
leave
mov
out
xchg
push
xor
inc
sbb
inc
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
mov
dec
loopne
inc
fidiv
mov
dec
loopne
inc
fidiv
xchg
dec
loopne
inc
fidiv
add
loopne
inc
fidiv
addr16
loopne
inc
fidiv
addr16
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
scas
add
dec
loopne
inc
fidiv
stos
add
dec
loopne
inc
fidiv
cmps
add
dec
loopne
inc
fidiv
addr16
inc
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
outs
add
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
add
inc
inc
fidiv
bound
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
sbb
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
adc
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
or
dec
loopne
inc
fidiv
addr16
add
dec
loopne
inc
fidiv
add
dec
loopne
inc
fidiv
add
inc
inc
fidiv
cmp
dec
loopne
inc
fidiv
add
inc
inc
fidiv
xor
dec
loopne
inc
fidiv
add
inc
inc
fidiv
and
dec
loopne
inc
fidiv
fiadd
dec
loopne
inc
fidiv
fiadd
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
rol
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
addr16
inc
dec
loopne
inc
fidiv
mov
loopne
inc
fidiv
addr16
inc
dec
loopne
inc
fidiv
inc
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
test
loopne
inc
fidiv
repnz
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
addr16
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
addr16
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
mov
dec
loopne
inc
fidiv
mov
dec
loopne
inc
fidiv
xchg
dec
loopne
inc
fidiv
add
loopne
inc
fidiv
addr16
loopne
inc
fidiv
addr16
loopne
inc
fidiv
scas
test
inc
dec
loopne
inc
fidiv
stos
test
inc
dec
loopne
inc
fidiv
cmps
test
inc
dec
loopne
inc
fidiv
addr16
inc
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
addr16
push
inc
dec
loopne
inc
fidiv
data16
loopne
inc
fidiv
bound
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
sbb
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
adc
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
or
dec
loopne
inc
fidiv
addr16
test
inc
dec
loopne
inc
fidiv
add
dec
loopne
inc
fidiv
test
loopne
inc
fidiv
cmp
dec
loopne
inc
fidiv
test
loopne
inc
fidiv
xor
dec
loopne
inc
fidiv
test
loopne
inc
fidiv
sub
dec
loopne
inc
fidiv
test
loopne
inc
fidiv
and
dec
loopne
inc
.byte
.byte
