sub
cmc
push
loop
or
cli
cli
or
push
rol
push
out
ja
fimul
xor
out
or
push
or
je
das
(bad)
out
aad
rcr
inc
mov
(bad)
out
stos
push
pop
out
cmp
(bad)
jns
lock
repz
icebp
inc
bound
inc
test
bnd
mov
loope
daa
fnstcw
je
iret
repnz
bound
out
clc
or
or
mov
in
daa
fnstcw
js
iret
repnz
bound
out
clc
or
or
mov
jmp
mov
pusha
inc
jl
iret
repnz
bound
out
clc
or
or
mov
in
test
fnstcw
xor
repnz
xor
cmp
mov
out
sub
scas
cmc
cmp
ror
fnstcw
mul
popa
mov
add
in
mov
(bad)
out
or
or
js
pop
retf
in
mov
popf
dec
inc
(bad)
dec
mov
xor
adc
and
leave
mov
sbb
lds
sub
int
loop
int
sub
push
jmp
mov
xlat
dec
sbb
push
popf
xor
cs
xor
cs
xor
cs
jno
aas
pop
scas
div
xor
push
outs
test
xor
push
jnp
not
push
mov
mov
out
out
sub
in
dec
popa
mov
mov
mov
dec
arpl
movs
ss
push
xchg
cli
sub
mov
mov
jb
addr16
jg
mov
popa
xor
cmp
movs
ss
out
sar
sub
imul
inc
mov
(bad)
out
mov
sub
mov
test
(bad)
out
xlat
popa
xchg
jns
inc
nop
mov
xchg
jmp
loope
xlat
dec
inc
or
imul
mov
daa
std
add
(bad)
and
sbb
xchg
mov
adc
mov
arpl
cmp
out
mov
or
cmp
test
(bad)
out
sub
jns
mov
or
xor
dec
lea
repz
fiadd
shr
popf
stos
mov
out
or
addr16
cmc
or
pusha
dec
lea
dec
test
xor
push
imul
cmps
icebp
sahf
xlat
(bad)
mov
pusha
mov
stos
repnz
mov
pop
dec
and
lock
scas
push
or
pop
popa
push
mov
push
add
fisubr
mov
stos
fwait
jp
push
out
add
fdiv
sub
in
mov
ret
cli
jb
cs
inc
imul
fisttp
out
sub
jg
mov
push
fild
ret
cli
jbe
cs
inc
(bad)
test
mov
push
out
sub
jns
mov
fidivr
mov
in
cmp
scas
nop
cs
outs
fs
(bad)
jmp
popa
enter
outs
fs
xchg
inc
or
test
mov
stc
jnp
cwde
repz
mov
repnz
repz
popa
mov
pop
fisubr
mov
outs
loope
or
cli
dec
sub
movs
ds
jbe
jnp
add
push
out
sub
mov
lea
fsubr
(bad)
mov
mov
mov
dec
xor
jns
mov
repz
pop
scas
test
mov
inc
mov
popa
cmp
mov
daa
xlat
scas
cs
out
or
jbe
lock
cmp
lds
jnp
push
out
rcl
push
out
sub
mov
icebp
data16
mov
data16
mov
or
push
mov
mov
pop
ret
jb
xor
inc
adc
stc
jb
or
or
enter
pop
pop
jge
out
jb
or
or
mov
pop
ret
jns
out
mov
and
push
jns
cmp
and
push
jns
das
loope
fbstp
data16
mov
popa
cmp
ss
add
fisubr
or
out
xchg
mov
shl
aas
pusha
inc
jge
pop
dec
inc
push
mov
inc
pop
dec
inc
push
mov
aas
pop
dec
inc
push
mov
aaa
pop
dec
cmp
xor
jg
mov
daa
jp
push
fiadd
test
or
enter
push
rcl
adc
or
lds
test
or
add
xchg
fcom
lock
mov
popa
mov
jno
mov
mov
or
bound
and
mov
mov
popa
fisttp
push
aad
das
aad
inc
sbb
outs
bound
(bad)
in
and
and
mov
mov
popa
mov
mov
bound
cdq
sub
and
cmps
repnz
lock
(bad)
popa
or
add
fisubr
test
popf
jb
xor
mov
cmc
fidivr
mov
pop
rol
mov
repz
push
out
jns
retf
push
bound
push
adc
fimul
lahf
xlat
inc
adc
mov
mov
pop
aaa
clc
das
out
(bad)
and
jmp
out
loope
or
popa
xlat
inc
sbb
jno
outs
xchg
fcom
mov
adc
arpl
sbb
jno
outs
pop
iret
sar
fwait
leave
movs
xlat
dec
pop
pop
aaa
stc
das
out
pop
cmp
out
icebp
popa
jmp
jo
loope
mov
popa
(bad)
or
xchg
ficom
push
out
jns
retf
push
bound
push
adc
fimul
lahf
xlat
inc
adc
mov
mov
pop
aaa
clc
das
out
(bad)
sub
jmp
lock
or
popa
xlat
inc
sbb
jno
outs
xchg
fcom
mov
adc
arpl
unpckhps
sar
fwait
leave
movs
xlat
dec
pop
pop
aaa
stc
das
out
lds
stc
pop
cmp
xor
sub
xor
fmul
push
shr
fld
mov
stc
popa
fild
cmc
mov
addr16
in
cmp
aad
mov
or
dec
mov
mov
mov
xor
mov
or
mov
or
dec
mov
sar
adc
or
mov
xchg
rcl
mov
in
(bad)
out
shl
adc
std
(bad)
cmp
xchg
aad
popa
(bad)
jp
push
jmp
mov
repz
data16
mov
popa
cmp
ss
push
fidivr
jmp
inc
imul
cmp
mov
jno
dec
cdq
jg
mov
data16
mov
sub
or
xlat
imul
cld
enter
or
adc
(bad)
mov
lock
imul
xlat
out
cmp
mov
aad
or
inc
cdq
imul
dec
xchg
daa
fcom
test
cmp
out
int
out
jno
cs
sti
inc
jae
push
xchg
(bad)
out
or
push
or
cli
push
mov
xor
out
and
jno
xor
add
fild
mov
adc
sub
push
mov
(bad)
inc
adc
mov
(bad)
sub
pop
jb
xor
jge
sub
(bad)
push
cmp
out
jmp
fild
loop
ja
loopne
fisttp
aad
inc
mov
out
stos
sub
out
or
test
jns
push
cli
ja
cwde
fdivr
xor
inc
adc
je
inc
or
cmps
sub
out
push
mulps
leave
mov
cmp
fiadd
shr
aas
or
(bad)
aas
add
xor
jmp
sub
add
xor
jmp
daa
inc
add
cmp
cs
repz
maxps
inc
(bad)
out
sar
sub
add
mov
sbb
or
cs
ja
cmp
mov
test
into
mov
dec
xor
push
mov
adc
xchg
test
fnstenv
sub
pop
jge
inc
(bad)
out
or
or
lds
sub
cmp
sub
mov
lea
fdiv
ja
sbb
out
or
(bad)
jg
(bad)
out
add
fisub
loopne
xor
mov
cmp
aad
or
jg
mov
or
loop
inc
or
mul
addr16
adc
jle
aaa
xchg
mov
test
pop
fsubr
sub
inc
mov
out
xlat
inc
adc
(bad)
xor
cdq
mov
mov
push
mov
ss
add
xor
out
xor
out
add
inc
aaa
or
sub
dec
inc
mov
data16
mov
sub
push
fiadd
mov
inc
nop
mov
icebp
sub
bound
mov
out
cmp
repz
mov
pop
fcom
cs
xor
mov
out
xor
xor
jle
out
cmp
out
and
jae
xor
out
or
jae
movs
call
(bad)
fisttp
jmp
and
add
add
mov
adc
cmps
popa
cmp
inc
adc
outs
push
dec
out
xor
add
fldenv
fldz
sub
iret
xchg
sahf
jp
xchg
pop
scas
cmc
xor
mov
out
cmc
out
sub
xor
and
inc
xlat
push
mov
sub
xor
add
add
imul
inc
imul
sbb
cmps
sub
sub
cmp
(bad)
out
add
out
les
out
sub
xor
lahf
cmp
mov
mov
fs
sbb
sub
out
loopne
xor
inc
mov
scas
test
inc
push
pop
add
fisub
mov
out
fbstp
shr
sub
mov
jne
jns
xor
mov
mov
arpl
xor
dec
fbstp
shr
sub
mov
clc
dec
or
jmp
call
(bad)
out
(bad)
mov
out
sub
xor
test
add
das
sub
nop
mov
test
mov
repnz
xor
fsubr
xor
out
xor
out
sub
out
mov
loope
imul
inc
out
jmp
jno
cs
mov
mov
repnz
push
popa
cmp
out
sbb
jg
(bad)
jns
jb
ins
mov
bound
icebp
jae
popa
mov
aam
mov
xor
out
dec
std
inc
jne
in
sub
dec
fisttp
pop
in
test
or
cdq
mov
arpl
xor
out
or
xlat
xchg
jle
xlat
fld
(bad)
out
or
jo
cs
cmp
retf
cs
out
rcl
dec
out
sub
cmp
dec
jne
in
sub
and
xor
dec
mov
(bad)
adc
cdq
jp
ds
scas
div
aad
or
mov
inc
ret
ds
inc
cdq
lea
cmp
cdq
jg
mov
popa
cmp
lahf
fidivr
inc
popa
rol
jbe
ins
popa
aas
xchg
mov
es
mov
add
ja
das
fbstp
popa
xor
dec
popa
aaa
xchg
mov
dec
icebp
or
pop
shl
popa
gs
mov
sub
fadd
mov
bnd
popa
lea
test
pop
lea
and
pusha
xchg
mov
out
leave
dec
fxch
lods
sub
xchg
mov
dec
mov
xor
inc
popa
das
popf
mov
dec
cmc
or
ja
ds
adc
data16
mov
sub
cmc
push
fidiv
xchg
jb
das
(bad)
out
or
jae
ds
js
cs
jns
xor
stos
mov
dec
test
cs
arpl
fidiv
mov
(bad)
add
cmp
push
out
dec
cli
or
sub
add
fidivr
dec
popa
das
mov
mov
aad
movs
mov
test
pop
pop
scas
cmc
cmp
jp
push
es
xlat
push
pop
mov
mov
(bad)
aas
shr
fisub
inc
mov
pusha
dec
jne
out
sub
std
adc
sub
loopne
aam
sub
mov
mov
popa
inc
movs
xor
inc
mov
popa
xor
maxps
mov
sbb
fcom
cmp
mov
arpl
mov
enter
loope
mov
leave
cdq
or
push
and
arpl
shr
icebp
out
pop
jmp
retf
cmps
or
aad
out
or
lahf
push
or
rol
ds
jns
das
(bad)
out
mov
cmp
or
dec
push
or
mov
sub
ja
mov
ror
or
dec
inc
mov
data16
mov
sub
dec
adc
cs
xor
mov
pop
popa
pop
movs
inc
popa
xor
test
out
or
jb
xor
idiv
pop
fcom
cs
scas
nop
mov
out
sub
cmp
sub
pop
cmp
or
cmp
dec
repz
(bad)
pop
xor
xlat
call
push
sbb
and
xchg
pop
cmp
out
cmp
js
cmp
xchg
mov
add
out
inc
ds
lahf
sub
popa
inc
in
sbb
lods
inc
cmc
sub
pop
push
sub
je
stos
fnstsw
pop
fldcw
jmp
sub
xlat
push
push
jno
cs
add
or
xlat
shr
aad
or
pop
mov
mov
dec
push
push
aad
cmp
test
push
repnz
sbb
and
test
jle
in
inc
and
rol
jns
mov
sbb
imul
jno
inc
popa
xor
popa
xchg
jb
xor
add
dec
add
fmul
mov
fimul
pop
icebp
scas
fcom
jb
xor
dec
inc
mov
data16
mov
fiadd
mov
sbb
or
int3
call
add
clc
dec
add
mov
jno
cs
idiv
sub
push
jp
push
arpl
sub
out
sub
repnz
popa
mov
arpl
xchg
or
pop
rol
popa
cmp
mov
add
jb
cmp
mov
pop
xor
mov
fsub
inc
xchg
popa
lock
repz
out
and
or
dec
xlat
or
push
jp
mov
fsub
inc
xchg
popa
lock
repz
out
and
or
dec
xlat
test
popa
repnz
jae
mov
popa
(bad)
in
popa
inc
mov
movs
repnz
and
fild
(bad)
out
or
jb
cmp
mov
and
in
mov
repnz
popa
inc
in
sbb
or
es
xor
scas
or
pop
xor
add
lock
popa
cmp
push
xchg
js
outs
push
in
xchg
(bad)
out
repz
or
fidiv
ds
fnstsw
aad
fisttp
data16
mov
data16
mov
sub
cli
cli
or
pop
push
cmp
dec
mov
xor
test
out
jae
movs
jmp
and
out
xor
jp
test
cmp
fsub
es
leave
xchg
or
(bad)
jns
fnstcw
into
cs
xor
mov
fimul
data16
mov
data16
mov
dec
adc
jne
sub
das
(bad)
out
repz
sub
mov
aad
or
inc
jb
xor
cmc
sub
and
cdq
mov
inc
fsubr
xor
out
xor
xor
or
cmp
pop
test
cmp
popa
xchg
jp
push
mov
sub
popa
sub
mov
push
adc
pop
sub
mov
adc
jge
push
or
es
mov
popa
xor
xchg
(bad)
out
mov
in
push
out
sub
bound
xor
out
add
fidiv
xchg
fnstenv
and
sub
test
inc
(bad)
out
or
jb
sub
sbb
out
sbb
add
fnstenv
push
jmp
lds
sub
(bad)
out
test
loop
or
outs
add
movs
inc
sbb
(bad)
in
out
sub
and
psraw
out
xor
push
mov
lds
sub
add
popa
lahf
jns
dec
xor
nop
mov
aad
sub
test
adc
lock
mov
pop
outs
mov
(bad)
jns
ret
in
out
cmp
ss
adc
xlat
cmps
in
inc
mov
add
in
movs
xor
jp
dec
dec
leave
mov
inc
or
cmp
pop
popa
ins
shl
or
fdivr
mov
popa
cmp
(bad)
jp
mov
sub
popa
sub
mov
push
adc
pop
sub
mov
adc
jne
push
or
and
xchg
js
xchg
push
(bad)
out
cmp
repnz
bound
push
or
es
xchg
out
sub
icebp
or
ret
lahf
jns
das
or
inc
mov
popa
inc
in
sbb
or
outs
add
cmp
jbe
push
loop
dec
xor
out
cmp
jns
(bad)
in
out
xor
cli
or
outs
add
sub
arpl
mov
test
sub
jge
inc
(bad)
out
or
outs
add
push
and
nop
ret
or
pop
cmp
push
sbb
jb
sub
out
or
sub
fistp
pop
popa
mov
lock
out
popa
inc
in
(bad)
sbb
es
imul
js
cmp
xchg
mov
add
out
inc
mov
aad
or
sub
fnstsw
pop
fldcw
or
cli
push
mov
pop
in
test
sub
lods
jmp
aas
xlat
push
loop
sub
cmp
jne
xlat
scas
es
or
pop
mov
mov
dec
add
or
nop
ret
xchg
aaa
fbstp
cdq
jp
push
out
dec
add
fimul
icebp
scas
ficom
jb
xor
mov
mov
scas
fiadd
pop
fist
mov
dec
adc
dec
jp
xchg
popa
ds
inc
pop
or
add
pop
out
sub
lea
aad
test
adc
or
push
idiv
lds
icebp
fsubr
sub
inc
movs
dec
shl
jae
or
cmp
push
enter
cs
inc
movs
push
pusha
add
mov
(bad)
sub
fld
or
sub
mov
push
out
jns
push
add
pop
pusha
xor
xor
inc
mov
sbb
cmp
xchg
push
(bad)
out
cmp
lock
mov
out
sub
mov
jo
xor
mov
pop
xor
jo
das
ret
push
pop
lock
cmc
push
pusha
xor
mov
pop
xor
jo
das
ret
push
pop
lock
cmc
xor
mov
push
mov
add
add
fsubr
sub
(bad)
dec
xor
imul
jns
cmp
movs
push
pop
inc
movs
inc
popa
inc
lods
mov
or
out
or
or
cli
or
cli
add
mov
adc
cs
lds
sub
fdivr
mov
fdiv
daa
inc
(bad)
test
movs
inc
sub
out
sub
xor
sub
push
xlat
push
callw
popa
xor
mov
xor
out
and
fadd
pop
or
dec
xor
popa
inc
in
push
cmp
cmp
fnstsw
fdivr
push
mov
cmc
or
or
push
or
pop
jp
pop
popa
cmp
or
jp
outs
popa
xor
in
pop
sti
sar
ds
mov
xor
xchg
or
dec
jp
push
(bad)
sar
cli
sbb
fsubr
sub
mov
add
(bad)
out
hlt
cmp
out
xor
jp
xchg
xchg
(bad)
out
sub
add
daa
fldenv
mov
sbb
iret
out
nop
cs
test
inc
jb
xor
jo
xor
out
mov
stos
xlat
out
cmp
jns
sahf
popa
lea
fsubr
out
cwde
push
lods
je
jp
(bad)
in
out
sub
adc
mov
(bad)
jns
(bad)
in
out
xor
out
sub
ins
xchg
push
out
xor
lds
sub
(bad)
out
mov
pusha
and
pop
test
xor
out
out
(bad)
out
or
cs
popa
xchg
push
aad
sub
test
mov
inc
sti
in
sub
scas
imul
test
popa
mov
sub
(bad)
out
or
popa
jge
inc
(bad)
out
or
adc
sub
out
pop
cdq
sbb
cmps
jb
sub
sbb
or
cmp
or
pop
cmp
mov
jge
jp
pop
test
cmp
popa
xchg
jp
push
mov
sub
popa
sub
mov
push
adc
pop
sub
mov
adc
jge
push
or
es
sahf
push
js
sahf
dec
fwait
or
cmp
cmc
sbb
sub
pop
pop
fnstenv
mov
inc
aad
test
mov
shl
out
add
xlat
push
(bad)
sub
or
aad
or
pop
mov
mov
in
and
mov
sbb
push
out
in
xor
(bad)
out
or
popa
jge
inc
(bad)
out
or
in
or
jb
sub
cmp
test
out
or
popa
test
inc
(bad)
out
or
out
lds
jns
(bad)
in
out
adc
sub
jl
mov
out
sub
test
inc
(bad)
out
out
(bad)
jns
ret
in
out
cmp
aaa
mov
jge
je
stos
fistp
pop
popa
mov
lock
out
popa
inc
in
(bad)
sbb
es
imul
jns
xchg
daa
js
cmp
inc
inc
popa
inc
in
and
ret
ja
inc
in
in
ja
call
add
(bad)
out
adc
jmp
cs
cmp
ret
xor
xor
fdiv
sub
out
or
ss
mov
popa
cmp
xchg
cs
js
ss
bswap
in
out
xor
repz
(bad)
jns
mov
xchg
cmp
sbb
out
or
mov
ja
(bad)
in
out
adc
xor
dec
sub
ins
jnp
cs
jns
sbb
xor
xchg
fiadd
mov
repz
cwde
inc
or
cmp
push
and
out
cmp
js
cmp
xchg
mov
add
out
inc
movs
out
inc
mov
repz
xchg
aaa
loopne
fwait
dec
fimul
xor
out
dec
xchg
dec
movs
sub
jb
xor
mov
mov
and
das
mov
mov
popa
cmp
inc
mov
xlat
push
xor
ja
sbb
jb
mov
pusha
pop
mov
pop
ja
outs
adc
push
xor
arpl
ds
sub
mov
popa
xor
cs
or
cli
add
fidiv
mov
fcomp
xchg
mov
retf
aad
lds
jno
aaa
outs
jb
fnstenv
inc
lods
lock
or
cli
not
mov
mov
sub
mov
mov
test
icebp
data16
mov
data16
mov
popa
cmp
xor
sar
xlat
or
aad
add
out
adc
popa
xor
ss
inc
movs
xor
sar
xlat
jmp
aad
add
out
adc
mov
sub
mov
cs
mov
sub
cmc
push
fidiv
mov
dec
sub
test
add
aad
inc
and
pop
mov
mov
ret
(bad)
jns
mov
mov
mov
and
lea
dec
inc
bound
jg
mov
loop
ja
fisub
inc
lea
pop
cmp
(bad)
adc
(bad)
out
or
pop
pop
test
cmps
jl
ss
out
sub
fsub
es
leave
xchg
loopne
cdq
jg
mov
data16
mov
popa
xor
mov
cmp
add
fidivr
sub
fld
fdivr
lock
jae
cs
xor
not
push
mov
cs
mov
or
fsincos
(bad)
ins
fnstenv
xor
inc
jae
push
mov
(bad)
out
imul
aad
repnz
push
jb
inc
rcl
add
sub
mov
mov
mov
shl
jae
push
sub
cli
push
rol
aad
aad
out
jno
aaa
pop
retf
dec
clc
rcl
ds
cs
mov
lea
inc
mov
sub
mov
pushf
div
mov
shl
bnd
sub
cmc
imul
inc
mov
add
imul
out
cmc
fiadd
jnp
push
or
sub
fcom
sbb
cs
mov
mov
arpl
push
out
fld
jle
xlat
sub
cli
push
add
fidiv
mov
mov
jno
xor
xor
mov
(bad)
aas
add
fidivr
sub
aas
imul
lea
or
aad
int
push
js
mov
and
fisttp
test
movs
inc
pop
repz
adc
sub
sbb
xchg
mov
out
sub
arpl
sub
sub
or
adc
cli
inc
stos
cli
adc
cli
or
push
aad
sub
scas
mov
pusha
repz
mov
lods
jo
cs
out
add
(bad)
in
sub
ja
push
jmp
cs
out
cmp
push
sub
pop
mov
(bad)
int
movs
dec
popa
xor
jae
dec
cmp
not
xor
mov
icebp
data16
mov
data16
mov
sub
cmc
push
loop
mov
in
inc
mov
data16
mov
pop
fisttp
sub
pop
mov
(bad)
js
xor
out
xor
jbe
push
fdivrp
push
add
out
add
jp
push
(bad)
outs
push
scas
mov
jnp
das
sti
in
sub
jecxz
jg
aad
or
push
mov
popa
imul
(bad)
out
or
or
mov
add
aad
sub
out
jg
aad
or
dec
fwait
cli
inc
adc
out
sub
sti
scas
jg
js
push
repnz
(bad)
sub
cli
or
fidivr
mov
fdivp
push
mov
out
sub
push
mov
ret
mov
mov
js
pusha
pusha
add
popa
xor
bound
cs
aad
(bad)
js
push
out
or
(bad)
out
sub
jne
das
(bad)
out
fisttp
ja
das
xlat
out
xor
dec
fdiv
push
fist
mov
push
sub
inc
or
cli
push
sub
inc
or
loop
or
sub
icebp
sub
sub
sub
cdq
mov
(bad)
out
sub
sub
arpl
bound
adc
cmp
(bad)
jno
xor
jae
das
(bad)
out
mov
cs
(bad)
hlt
mov
(bad)
fsubrp
sub
mov
daa
arpl
xor
(bad)
mov
(bad)
out
or
pop
mov
mov
js
push
jmp
mov
mov
mov
sub
popa
mov
pop
xchg
fadd
mov
bnd
popa
cmp
push
jmp
cs
mov
push
out
sub
xlat
ds
(bad)
out
or
sti
cmc
sub
push
jns
in
sub
(bad)
out
aad
xchg
jns
cs
mov
xor
xchg
cmp
(bad)
jns
mov
sbb
cdq
out
mov
mov
aad
jp
imul
fnstenv
cmp
or
(bad)
dec
arpl
lea
ins
pop
mov
jmp
repz
jle
sbb
aad
jmp
mov
aad
inc
and
imul
mov
jns
mov
inc
inc
dec
adc
cld
popa
jmp
xchg
fadd
jg
rol
inc
adc
cs
mov
mov
sub
xchg
jg
xlat
push
sub
out
or
cli
sbb
aaa
pop
retf
dec
clc
rcl
out
sub
xor
fsubr
(bad)
mov
mov
popa
cmp
xor
sar
xlat
fwait
sub
out
add
out
adc
popa
xor
cmp
movs
xor
sar
xlat
jnp
aad
add
out
adc
mov
mov
mov
popa
mov
cmp
cmc
add
fidivr
sub
aas
imul
sbb
xchg
mov
mov
shl
xor
movs
mov
adc
push
sahf
dec
sub
sub
movs
and
cmp
out
jnp
push
push
inc
rcl
or
popa
cmp
bound
movs
pop
es
push
push
inc
sar
rcl
cs
jns
push
push
jl
push
inc
inc
shl
mov
sub
xlat
pop
pop
(bad)
out
add
push
jl
push
out
imul
mov
jnp
push
jmp
push
xchg
sbb
jbe
xlat
xlat
daa
aad
or
cli
mov
aas
xor
or
out
inc
mov
(bad)
(bad)
xchg
sub
xor
arpl
movs
ds
retf
pop
dec
movs
push
pop
dec
movs
dec
pop
dec
movs
inc
pop
dec
movs
dec
mov
jns
inc
arpl
dec
sub
imul
adc
jnp
sbb
cmp
int
or
push
push
jl
push
(bad)
ds
cli
push
rol
(bad)
out
or
es
ret
cli
mov
mov
(bad)
out
or
cli
xchg
sub
(bad)
out
or
push
sbb
arpl
movs
jp
xlat
and
out
or
push
outs
sbb
jle
xlat
mulps
out
add
push
xlat
addr16
(bad)
out
or
pop
scas
mov
aas
jge
xlat
repz
out
or
cs
jno
or
das
cmps
cmp
imul
out
out
sub
mov
jbe
xor
pop
dec
out
jae
push
rol
(bad)
jns
push
es
and
push
dec
fidiv
or
sub
popa
cmp
mov
cwde
sti
cmp
mov
lea
data16
mov
out
inc
mov
loop
aad
fidivr
or
cli
not
jg
mov
nop
lock
inc
xor
mov
sub
scas
inc
cmp
jle
mov
data16
mov
mov
cld
das
out
adc
data16
mov
popa
cmp
xor
inc
rcl
jb
sub
loop
adc
popa
xor
dec
popa
cmp
nop
out
push
shl
or
xchg
xlat
mov
cmp
repnz
inc
cmc
(bad)
sti
(bad)
ins
fnstenv
mov
mov
sub
mov
cs
jp
push
out
aad
loop
add
fiadd
push
inc
int3
sub
mov
mov
mov
xchg
test
cwde
inc
mov
sub
cmc
push
fiadd
out
dec
hlt
or
js
mov
out
jns
dec
hlt
add
(bad)
mov
inc
sub
fidiv
xor
cld
or
inc
rcl
out
sub
sbb
dec
xor
pop
xor
or
push
mov
dec
(bad)
out
sub
scas
dec
jne
out
sub
bound
cwde
(bad)
in
push
mov
loop
enter
inc
mov
sub
mov
push
pop
cmp
(bad)
pop
pop
mov
mov
test
and
out
sbb
jno
cmp
movs
mov
fs
mov
aad
movs
mov
div
icebp
popa
dec
movs
inc
popa
ss
sub
loop
(bad)
push
pop
scas
test
movs
mov
aad
movs
mov
aad
movs
mov
push
icebp
popa
cmp
icebp
sub
js
popfw
cmc
sub
out
push
mov
sti
or
xor
(bad)
and
mov
idiv
dec
pop
cmp
mov
adc
imul
xor
xor
mov
sbb
jns
pop
add
or
pop
out
cmp
(bad)
in
movs
mov
xor
inc
pop
in
test
jmp
ds
test
pusha
inc
cli
cmp
add
push
adc
mov
enter
fnstenv
push
out
ja
push
out
dec
sbb
jns
push
out
inc
mov
test
cmps
xlat
add
xlat
jno
xor
cdq
movs
addr16
movs
mov
xor
cmc
(bad)
sub
jns
mov
test
shr
js
push
out
xlat
in
sub
cli
ss
jae
adc
mov
arpl
bound
jl
push
adc
push
rcl
sub
popa
inc
movs
popaw
xor
push
sbb
cmp
sar
xlat
scas
cmp
out
add
(bad)
ja
xor
nop
mov
cmc
sub
fld
ret
repnz
xor
out
sub
cld
jg
aad
outs
xor
movs
inc
pop
fadd
(bad)
xlat
jns
aad
or
cli
push
or
cli
add
cli
inc
sub
popa
lods
popa
test
jnp
pop
enter
and
sub
int
fidivr
push
adc
mov
enter
div
push
out
push
mov
test
bound
aad
sub
push
xor
popa
mov
repz
cmp
cmp
(bad)
cmps
sub
out
or
mov
jp
push
jmp
cs
jns
push
bnd
ds
nop
sub
popa
inc
movs
jb
shl
popa
xor
hlt
dec
or
cli
xor
xor
sahf
fiadd
mov
inc
jp
push
and
push
push
aas
fadd
ficom
sub
dec
pop
add
loop
push
mov
sub
lds
mov
cmp
pop
pop
cmp
jae
push
not
xor
mov
sub
lds
popa
mov
movs
dec
add
push
clc
in
adc
(bad)
out
or
fidiv
sub
sub
fdivr
push
cmp
jns
push
sbb
mov
leave
xchg
or
popa
inc
movs
dec
pop
rol
and
xchg
mov
dec
adc
xor
jns
xor
out
push
add
or
cli
or
jp
std
add
mov
icebp
scas
add
fnsave
pop
sub
sub
imul
or
cmc
push
jmp
ds
xchg
(bad)
and
pusha
test
(bad)
out
or
popa
mov
mov
shr
add
in
lds
pusha
push
mov
(bad)
out
or
pop
xor
sub
std
pop
scas
fsubr
cmp
out
sub
std
pop
fsubr
cmp
scas
imul
test
sub
loop
les
pop
scas
nop
mov
hlt
sub
fimul
jb
out
sub
mov
xor
out
sbb
jns
push
out
jns
push
push
jp
xor
mov
sar
icebp
fisubr
inc
mov
dec
daa
or
cli
dec
jnp
add
clc
in
iret
xor
out
or
or
aad
jmp
aaa
test
cmp
sub
jb
xor
movs
ds
mov
dec
mov
test
fnstcw
mov
popa
cmp
xor
aam
sbb
ss
mov
sbb
imul
mov
imul
out
sub
mov
inc
arpl
das
out
int3
cmp
out
cmp
js
adc
movs
test
xchg
mov
sub
sar
mov
xor
push
or
mov
adc
or
out
xor
out
sub
test
mov
fidivr
ss
mov
imul
mov
das
(bad)
out
mov
xor
out
or
sub
adc
push
jmp
cs
jns
bound
cmp
cmp
or
cli
dec
cmp
or
test
inc
hlt
fdivrp
jp
adc
or
(bad)
repnz
repz
mov
or
or
xchg
js
push
out
jns
xor
xchg
mov
adc
pop
sar
test
ja
mov
mov
jno
inc
(bad)
test
push
loope
pop
call
in
dec
xchg
repnz
push
into
js
push
div
cmp
fdiv
jno
cmp
mov
repz
shl
out
sub
ja
push
jmp
mov
mov
jno
aaa
loope
ret
adc
imul
ret
and
popf
mov
xlat
(bad)
mov
jnp
or
mov
lods
pop
popa
cmp
mov
pop
shl
adc
jnp
cmp
out
sub
inc
movs
dec
fnstenv
dec
xor
out
add
jmp
mov
repz
cmp
sbb
jns
push
repnz
sub
shl
adc
inc
dec
fmul
jb
jns
xor
mov
pop
shl
mov
lock
pop
fs
aad
int3
push
popa
xor
push
push
jl
push
sbb
mov
and
mov
popa
inc
lea
mov
sbb
jno
dec
pop
iret
mov
das
(bad)
out
sar
xor
cmc
sbb
lds
(bad)
out
xor
adc
xor
out
adc
or
cs
inc
lea
sbb
sar
inc
movs
mov
call
xor
out
or
es
cli
sub
cli
or
jg
cmp
push
pop
cmc
sub
mov
mov
inc
(bad)
xor
out
sub
test
mov
cli
dec
cmp
or
popa
sub
test
pop
cmc
or
cmp
sub
lds
inc
or
(bad)
out
add
loop
jns
in
inc
xor
out
or
inc
shl
sbb
aad
(bad)
out
adc
cld
sub
xor
ins
popa
inc
test
cli
push
or
push
jb
aaa
adc
or
cli
xor
xor
mov
sbb
jns
pop
add
or
out
jae
ds
or
cs
out
adc
out
cs
xor
mov
or
popa
dec
xchg
ficomp
dec
mov
mov
inc
shl
push
repz
out
or
pop
inc
mov
dec
or
lea
call
mov
dec
(bad)
call
test
mov
repnz
pop
inc
mov
adc
lea
call
mov
fincstp
sub
jno
sub
fld
xlat
dec
mov
popa
push
mov
popa
(bad)
jmp
add
or
cli
test
es
ss
daa
aam
and
imul
sti
fisttp
mov
jnp
or
popa
and
fidiv
xor
lods
add
lock
xor
pop
pop
mov
or
xor
add
loop
fisttp
cdq
jp
push
push
mov
aaa
(bad)
out
cmp
pop
test
div
dec
popa
and
ficomp
push
xor
js
mov
pop
push
shl
repz
xor
dec
add
push
mov
jnp
push
or
cli
or
jns
push
out
in
dec
popa
pop
or
fidivr
pop
lods
js
mov
sar
and
sub
aas
or
or
cmps
dec
(bad)
out
add
loop
fisttp
cdq
jp
push
out
jns
push
jmp
ds
pop
popf
mov
pop
test
mov
test
push
and
cmp
dec
fimul
popa
xor
ds
push
mov
or
popa
push
mov
and
lds
repnz
sub
int
es
xor
out
sub
push
mov
jp
sub
xor
fdiv
sbb
xchg
mov
(bad)
call
or
jns
push
out
jge
sahf
inc
lods
std
pop
cmc
cmp
js
ss
inc
movs
jle
inc
mov
or
lea
fdiv
sbb
leave
mov
fincstp
sub
pop
jle
push
pop
popa
mov
dec
stos
div
dec
popa
pop
or
fidiv
xor
movs
inc
es
mov
and
push
xor
inc
or
mov
jno
cmp
mov
icebp
popa
xor
mov
or
cmps
sbb
fdivr
push
sbb
dec
mov
cli
cmp
test
out
add
or
lea
fdiv
sub
or
inc
shr
cli
push
add
fidiv
sub
xchg
push
out
cld
dec
pop
pop
popf
mov
popa
mov
or
xor
and
int
sub
(bad)
xor
out
sub
js
bound
jno
cmp
mov
icebp
popa
inc
lea
aad
movs
mov
and
popf
cmc
fincstp
sub
mov
inc
call
mov
or
fidivr
ss
or
fnstcw
iret
sub
bound
jno
inc
xor
mov
icebp
pop
imul
fincstp
sub
jns
push
out
int
jmp
mov
and
or
sbb
fdivr
push
sbb
dec
mov
cli
push
rol
rcr
cmp
mov
icebp
popa
xor
inc
pop
push
mov
or
fidivr
add
xlat
mov
test
xor
mov
jno
cmp
mov
icebp
popf
xacquire
(bad)
out
imul
cmp
ds
arpl
jp
cmp
test
out
cmp
jb
cmp
shl
popa
inc
movs
inc
pop
pop
popf
mov
(bad)
cmp
or
pop
inc
test
stos
jp
ss
or
es
aam
push
or
lea
fdiv
fdecstp
sub
(bad)
mov
dec
adc
mov
sub
xchg
mov
(bad)
call
xlat
xor
mov
pop
xor
inc
or
pop
cmp
cs
mov
lea
fdiv
and
cdq
mov
sub
xchg
mov
(bad)
jnp
dec
call
or
jns
pop
lods
js
mov
rcr
pop
push
mov
xchg
sub
xor
fdiv
sub
cdq
mov
and
xchg
mov
(bad)
call
or
jns
push
out
jg
cmps
js
mov
lods
repnz
pop
push
mov
inc
or
lea
fdiv
fisub
shl
cmp
sbb
cmp
push
sub
ds
cmp
ds
cmp
jne
cmp
data16
mov
loop
or
cli
cli
jmp
out
cmp
shr
cli
jns
push
sub
add
inc
add
scas
loopne
cdq
jg
mov
popa
xor
das
popa
aaa
test
mov
sti
add
cmp
or
test
out
aad
loop
leave
aas
popa
cmp
cs
out
or
ja
inc
cdq
jg
mov
pop
fist
mov
push
adc
jne
jns
xor
or
bnd
push
(bad)
jns
pop
pop
inc
movs
push
popa
inc
mov
sbb
xchg
imul
cmp
int
jmp
mov
cmc
sub
adc
fbld
out
nop
scas
push
adc
cmp
(bad)
jno
push
(bad)
clc
(bad)
mov
out
sub
xor
push
pop
xor
or
popa
mov
jle
jns
add
or
cli
dec
jle
ja
bound
cdq
mov
daa
inc
mov
or
or
js
ds
inc
imul
repz
xor
or
cs
push
js
push
adc
bound
cdq
imul
cmp
cmp
inc
mov
out
jns
push
out
js
icebp
scas
add
fdiv
ss
lock
mov
jp
push
out
dec
mov
xlat
out
sub
aaa
lea
fidivr
cmp
(bad)
or
push
hlt
popaw
xor
mov
repz
jp
mov
xchg
jns
cs
mov
add
mov
push
add
sub
stc
dec
mov
adc
or
adc
mul
add
mov
sahf
jp
push
out
shl
repz
bound
js
das
popa
xor
jnp
or
jae
adc
add
or
cli
push
mov
pusha
test
push
out
leave
ss
out
xchg
(bad)
out
imul
xchg
push
dec
popa
xor
mov
test
js
mov
xor
out
xor
out
and
xor
mov
push
repz
push
out
leave
ss
jp
push
out
inc
dec
in
sbb
das
fucomp
sub
daa
jg
aad
shl
(bad)
or
push
hlt
popaw
xor
mov
repnz
jp
mov
xchg
jns
cs
mov
add
mov
push
add
sub
stc
dec
mov
adc
or
adc
mul
add
mov
sahf
jp
push
out
enter
movs
inc
popa
xor
jae
adc
add
or
cli
(bad)
mov
pusha
aaa
xchg
cmc
(bad)
icebp
sub
ja
cmp
cdq
mov
test
mov
push
jp
push
(bad)
jae
ds
test
push
or
inc
aaa
test
adc
cli
sbb
mul
movs
inc
sbb
pop
mov
sahf
jp
mov
mov
push
stc
mov
jae
dec
outs
fidivr
test
or
push
or
jns
push
cli
shr
adc
mov
sbb
cdq
mov
dec
push
or
cli
inc
adc
ja
ss
cmp
cmc
(bad)
repnz
ja
cmp
in
outs
in
xor
(bad)
out
imul
push
idiv
inc
dec
daa
or
cli
push
push
out
in
fdiv
(bad)
out
enter
lds
and
sbb
add
faddp
popa
mov
sbb
lods
cs
out
cmp
jp
push
out
xor
dec
mov
cmp
sbb
out
lds
adc
sbb
xchg
das
push
sti
or
push
or
cli
adc
xor
push
popa
xor
cs
out
or
jns
pop
sahf
jp
push
out
sar
mov
inc
popa
xor
lods
out
popa
cmp
xor
(bad)
mov
sbb
xchg
mov
in
arpl
(bad)
out
or
add
clc
in
push
das
(bad)
out
or
sub
sbb
cdq
mov
popa
cmp
call
sbb
shl
jae
push
lods
lock
scas
or
add
xchg
pop
inc
mov
sub
lods
sub
cmp
es
push
jb
cmp
mov
lods
clc
pop
fiadd
clc
pop
cmp
imul
pop
mov
add
mov
leave
sbb
jns
push
out
sbb
sbb
xchg
mov
xchg
inc
sbb
xchg
mov
popf
xor
cs
clc
or
jp
push
repnz
or
or
cli
add
mov
adc
imul
test
mov
push
repz
mov
in
sub
out
sub
out
imul
lahf
inc
mov
pop
xor
jne
jp
push
adc
mov
lock
fiadd
pop
cwde
je
mov
cmp
bound
movs
pop
sub
push
push
add
mov
adc
repz
push
mov
mov
cmp
int
jmp
jnp
push
test
test
mov
fistp
inc
ja
cmc
or
push
lods
lock
xor
inc
pop
scas
nop
mov
out
sub
xor
cmc
sbb
lods
cs
out
xor
xor
mov
adc
cs
xlat
sub
aad
dec
das
fucomip
sub
ss
jle
lock
sbb
jp
push
cli
ja
dec
pop
xor
enter
lods
stc
popf
test
(bad)
out
xor
js
mov
test
push
add
test
jno
cmp
mov
icebp
popa
xor
cs
out
inc
jbe
or
out
int
cli
jns
push
(bad)
ja
dec
pop
dec
popf
mov
sbb
sbb
repnz
xchg
mov
or
inc
out
add
loop
fisttp
cdq
jp
push
cli
jns
push
(bad)
ja
dec
pop
dec
popf
mov
and
sbb
repnz
mov
cli
sbb
test
xlat
bound
jno
cmp
mov
icebp
pop
jmp
(bad)
jno
aaa
pop
cmp
jnp
push
or
add
test
jns
bound
mov
call
jnp
adc
(bad)
bnd
dec
popa
cmp
jle
jns
jg
mov
pop
xchg
mov
or
pop
inc
(bad)
out
add
loop
fisttp
cdq
jp
push
out
xor
and
movs
mov
and
or
mov
mov
pop
xor
inc
or
ja
test
mov
jb
sub
xor
fdiv
sbb
movs
mov
sbb
or
fwait
js
xor
mov
pop
jle
sahf
inc
or
ja
test
mov
cmp
sub
xor
fdiv
and
movs
mov
and
or
mov
mov
pop
jg
xchg
inc
or
ja
test
mov
add
sub
xor
fdiv
pop
xor
ds
cmp
cmp
xor
cmp
fnstsw
cmp
data16
mov
popa
xor
push
loop
leave
push
daa
out
rcl
mov
icebp
data16
mov
data16
mov
and
test
mov
jp
pop
popa
inc
mov
push
int
mov
add
fidivr
mov
adc
aaa
add
iret
mov
adc
pop
add
or
cli
push
or
arpl
sbb
out
int
bnd
push
add
mov
pop
cmp
mov
out
or
(bad)
mov
pusha
cmp
mov
mov
(bad)
(bad)
mov
add
punpcklwd
movs
dec
popa
arpl
or
dec
mov
in
pop
xor
out
mov
pusha
cmp
inc
mov
cdq
push
addr16
mov
cmp
(bad)
jns
retf
scas
mov
push
mov
jns
cld
arpl
dec
mov
inc
xlat
out
and
iret
das
test
cmp
mov
add
sbb
out
dec
xor
or
push
or
test
popa
mov
ja
cmp
jl
jns
mov
xchg
test
jnp
push
or
cli
and
movs
jl
cld
or
imul
int
add
inc
aas
dec
and
push
inc
mov
xlat
dec
(bad)
ficom
dec
xor
mov
dec
mov
add
ja
out
push
mov
(bad)
mov
stos
cli
(bad)
mov
pusha
cmp
jge
imul
pop
scas
mov
mov
mov
adc
push
pop
jo
nop
mov
cli
push
movs
sub
out
cli
test
push
lods
icebp
add
or
cli
or
(bad)
jns
push
jmp
mov
int
std
push
(bad)
das
or
ja
sub
pop
dec
xor
push
ins
pop
add
or
cli
push
test
cli
es
add
js
mov
xchg
pop
mov
fst
js
mov
das
(bad)
jge
out
mov
(bad)
js
mov
out
das
(bad)
jge
imul
cli
sub
jnp
add
mov
imul
iret
xor
movs
inc
pop
std
or
push
(bad)
ja
arpl
inc
popa
cmp
ds
call
repnz
pop
jmp
aad
or
fidivr
push
out
jno
mov
loopne
jbe
or
out
add
(bad)
out
adc
out
sub
test
(bad)
repnz
std
popa
arpl
test
jnp
sti
(bad)
out
sub
mov
stc
pop
xor
inc
mov
ficomp
inc
xor
test
jge
dec
fisttp
call
and
mov
(bad)
sbb
repnz
std
popa
arpl
test
jnp
sti
(bad)
out
sub
mov
stc
pop
xor
inc
mov
ficomp
inc
xor
test
jge
dec
fisttp
(bad)
dec
add
jmp
push
out
jno
mov
loopne
jbe
or
out
cmp
sbb
sub
push
inc
mov
sbb
mov
push
or
pop
test
fnstenv
mov
and
loopne
xor
fdiv
popa
xor
lock
and
repnz
add
jg
ja
ss
aas
cdq
mov
mov
ja
pop
aad
mov
jp
dec
popa
aaa
xchg
jg
mov
inc
cmp
scas
fcomip
mov
sub
mov
mov
data16
mov
sub
cmc
push
fidiv
mov
pop
scas
cmc
pop
popa
cmp
stos
mov
dec
stc
(bad)
jle
call
popa
xor
sar
inc
movs
mov
test
(bad)
and
cdq
cmps
jg
aad
fcomip
data16
mov
popa
xor
sub
int3
out
sub
out
or
pop
cmp
mov
mov
out
sub
imul
(bad)
out
cmp
mov
aad
inc
mov
out
sub
loopne
(bad)
dec
imul
test
xor
nop
out
nop
mov
inc
lock
loop
dec
mov
xor
out
fcomip
popa
cmp
mov
pop
imul
outs
loop
sub
jno
aaa
push
dec
add
in
xlat
mov
(bad)
out
add
js
ds
cmp
ja
icebp
rcl
test
arpl
out
nop
sub
adc
out
or
bnd
cmp
xchg
mov
push
add
ds
jb
xor
dec
fcomip
mov
jb
xor
scas
loopne
cdq
inc
imul
call
mov
loopne
shr
sub
mov
mov
popa
cmp
xor
inc
jmp
sub
pop
sub
out
adc
sub
dec
adc
mov
repnz
xor
add
fldz
xor
repnz
inc
movs
inc
or
add
fisubr
nop
ret
cdq
cmp
xor
out
xor
push
or
bnd
mov
cld
(bad)
mov
repnz
adc
xchg
out
nop
mov
in
out
(bad)
out
leave
popa
test
iret
xor
mov
jmp
out
shl
popa
xor
leave
xor
nop
jo
call
xchg
cmc
(bad)
sti
sub
jns
dec
popf
xor
nop
mov
repz
aaa
test
fidiv
aaa
adc
lea
(bad)
out
or
xor
pop
pop
test
push
out
sub
out
sub
fidiv
ds
fld
neg
test
sar
dec
pop
xor
push
in
cmc
out
sub
test
xor
out
mov
arpl
cs
jns
dec
popa
dec
movs
inc
xchg
hlt
sub
mov
inc
push
cmp
push
test
lock
sub
mov
cmp
(bad)
mov
xor
xor
cdq
jmp
out
sub
in
jg
aad
leave
inc
sub
rol
repz
sub
or
repnz
cmp
out
cmp
out
sub
xlat
push
sub
dec
icebp
or
pop
out
cmp
jns
dec
popa
jmp
daa
inc
rcl
jb
sub
xor
or
jae
mov
(bad)
out
adc
in
sub
out
mov
(bad)
out
or
jae
ds
stc
sub
bnd
xor
mov
mov
xchg
mov
or
jns
outs
pop
cmc
or
mov
aaa
(bad)
out
cmp
jb
das
(bad)
out
or
sbb
ss
xor
mov
pusha
add
popa
aaa
mov
mov
aaa
mov
popa
xor
sub
jns
xor
nop
mov
out
sub
inc
mov
sub
or
jns
dec
or
or
jmp
fnstcw
xchg
cmc
or
mov
cmp
out
cmp
push
or
fidivr
jbe
js
xor
popf
mov
div
ja
icebp
dec
mov
popa
cmc
shl
aaa
test
in
lds
(bad)
out
inc
das
jecxz
sub
inc
popf
cmc
sbb
std
mov
dec
cdq
fcmovbe
adc
jne
jns
push
out
stos
xchg
(bad)
out
inc
das
fsubr
sub
xor
mov
xor
(bad)
jbe
js
ss
or
js
mov
xchg
rcr
xor
pop
cmc
inc
xor
out
sub
xor
mov
xor
(bad)
xor
mov
mov
(bad)
dec
pusha
stc
or
popa
aas
mov
mov
cmp
aas
mov
push
js
cmc
fdiv
sub
jns
xor
div
xor
mov
fidivr
ss
and
sbb
or
js
mov
xchg
ror
ss
cmc
shl
pop
or
fidiv
movs
fnstsw
mov
fdiv
popa
inc
mov
sbb
or
ja
ss
or
aaa
mov
mov
jns
outs
pop
cmc
or
jns
ss
cmp
xchg
(bad)
out
fucom
fsubr
sub
mov
test
mov
cmp
out
cmp
pop
or
out
shl
out
sub
dec
fsubp
aam
sub
mov
jge
mov
cmp
out
or
out
or
in
sub
dec
inc
mov
add
cmp
cs
cmp
movs
inc
cmp
jnp
cmp
sbb
inc
cmp
sbb
and
ds
inc
fdivr
ficomp
cmc
sbb
xchg
cs
out
cmp
(bad)
pop
pop
mov
mov
mov
aad
(bad)
popa
inc
movs
dec
popa
xor
push
out
inc
push
jnp
(bad)
sar
cmp
cwde
(bad)
pop
sbb
(bad)
jns
mov
pop
add
shl
sub
ss
cmp
nop
sub
fidivr
lea
dec
fadd
dec
cmc
add
ss
push
outs
lock
in
shr
sub
inc
test
push
pop
mov
mov
xor
mov
data16
mov
push
fild
mov
(bad)
inc
(bad)
test
movs
inc
xlat
out
add
imul
pop
imul
pop
imul
pop
imul
pop
imul
pop
imul
(bad)
out
xor
out
or
cli
jbe
cs
ja
push
(bad)
out
sub
stos
movs
mov
xlat
jno
xor
add
sbb
or
fdivr
dec
popa
jnp
push
xlat
out
cmp
out
or
sub
mov
and
push
mov
das
(bad)
out
inc
mov
(bad)
out
cmp
(bad)
out
cmp
js
push
out
mov
out
fidiv
ds
loop
lock
or
add
xor
cmp
ds
out
cmp
out
mov
mov
repz
sbb
movs
pop
dec
cmc
or
xchg
lock
ja
add
fnstsw
sti
das
add
fidivr
jae
loop
sub
cli
push
or
loop
push
jnp
inc
lods
and
movs
jb
(bad)
fisttp
out
fsubr
(bad)
mov
or
stos
movs
(bad)
(bad)
out
xor
add
pop
mov
js
jnp
(bad)
(bad)
out
and
out
sub
retf
pop
mov
imul
jnp
das
(bad)
out
or
cli
sub
jnp
mov
pop
or
mov
pop
add
cli
or
cli
push
sub
xor
cli
push
or
int
or
loop
sub
push
lock
cmp
pop
adc
sub
ja
push
push
js
push
push
sub
xor
cs
stos
movs
add
out
xor
adc
cs
jns
push
or
arpl
add
dec
pop
cmp
push
popa
add
and
sub
movs
cmp
(bad)
fld
mov
in
xchg
das
(bad)
out
ret
adc
sbb
jns
push
out
lds
jns
push
out
icebp
pop
jno
mov
or
cli
sbb
adc
div
popa
les
cli
ds
add
add
sub
add
push
cli
jno
cs
or
cli
push
test
adc
dec
mov
pop
mov
push
sbb
adc
movs
(bad)
xlat
out
sub
out
sub
ror
(bad)
ja
push
adc
push
mov
pop
and
xchg
adc
test
jns
push
out
jnp
cmc
popa
imul
xchg
ret
sub
push
js
push
and
mov
push
jp
push
out
cmc
push
push
ja
push
push
jp
mov
(bad)
out
or
cli
pop
lods
mul
push
pop
popa
cmp
sub
mov
(bad)
mov
xor
fisttp
inc
xchg
js
out
fcmovu
mov
(bad)
out
or
popa
cmp
inc
adc
sub
jnp
data16
out
cmp
sbb
adc
das
(bad)
out
or
mov
push
scas
ins
js
cmp
dec
add
sub
lock
jbe
inc
(bad)
pop
inc
movs
pop
ror
pop
popa
jnp
push
xlat
out
sub
icebp
or
jns
push
imul
sub
mov
mov
cli
push
add
fidiv
push
bnd
jmp
add
or
test
sub
dec
popa
cmp
mov
cwde
js
mov
(bad)
out
or
sbb
mov
push
mul
push
cvtdq2ps
push
pop
pop
mov
es
inc
movs
inc
xchg
lock
jns
(bad)
into
ret
bound
or
cs
ja
push
push
cmp
sbb
popa
pop
movs
and
pop
in
xlat
out
sub
mov
mov
movs
sbb
pop
inc
movs
inc
popa
xor
ds
mov
movs
mov
test
add
mov
sub
mov
mov
adc
jo
mov
jae
add
cmp
nop
mov
popa
arpl
and
aad
add
cli
sbb
cs
fisttp
aad
add
(bad)
out
sub
dec
fisttp
aad
add
(bad)
out
sub
jg
mov
daa
inc
or
cli
sbb
test
test
dec
xlat
out
cmp
movs
dec
(bad)
out
sub
inc
mov
cmp
idiv
xor
out
sub
dec
inc
mov
sbb
movs
mov
and
xchg
test
jp
push
or
cmp
sar
sub
das
out
inc
test
(bad)
call
sub
dec
sub
out
or
pop
mov
mov
inc
mov
push
out
(bad)
mov
out
sub
inc
movs
bound
movs
push
arpl
movs
ds
sar
popa
xor
test
(bad)
call
test
sub
aad
or
pop
mov
mov
movs
mov
adc
cmc
ss
in
sub
out
test
pop
mov
popa
xchg
dec
fisttp
aam
test
test
inc
mov
movs
mov
test
mov
mov
sub
and
fdivr
xor
in
shr
sub
inc
movs
mov
test
mov
mov
sub
sbb
stc
enter
sub
out
cmp
inc
movs
mov
test
mov
mov
sub
sub
fadd
jo
nop
sub
fidivr
mov
fadd
dec
sti
inc
jb
and
xor
lods
jle
aad
or
inc
sub
fidivr
mov
fadd
data16
mov
popa
cld
pusha
mov
dec
cmp
or
ja
or
out
int
loop
cmp
mov
push
pop
lock
cmc
fcom
sbb
out
adc
cli
cli
aad
popa
arpl
test
mov
sbb
mov
ds
imul
add
ds
mov
pop
pop
fdiv
cmp
shl
sbb
mov
mov
fld
or
ja
inc
popa
xor
mov
daa
out
push
mov
loop
(bad)
pop
popa
mov
movs
ds
rol
loope
mov
mov
mov
shl
movs
ds
cmp
mov
pop
jo
cs
jns
bound
test
push
out
arpl
cli
or
or
outs
mov
dec
icebp
or
pop
fdiv
cmp
shl
sbb
mov
mov
fld
or
ja
inc
popa
xor
mov
daa
out
push
mov
loop
enter
movs
ds
mov
inc
sbb
loope
xor
adc
mov
repnz
xchg
or
push
or
cli
or
cli
(bad)
fisttp
pop
or
cli
push
fimul
data16
mov
data16
mov
out
inc
mov
movs
lock
test
jno
xor
test
out
ins
neg
push
push
xor
out
sub
dec
inc
mov
cli
cli
or
pop
scas
cmc
push
popa
cmp
mov
jmp
clc
push
aas
or
arpl
or
jg
xlat
add
fidiv
xor
fisttp
jae
stos
(bad)
jno
inc
push
hlt
ds
(bad)
out
cmp
xlat
sahf
(bad)
(bad)
out
add
fidiv
cmc
push
repz
fsubrp
sub
jno
xor
fisttp
jp
push
fidivr
mov
arpl
push
bound
cs
mov
cmc
fsubr
sub
dec
inc
mov
xlat
(bad)
pop
cmp
inc
cmp
scas
pop
xor
inc
cmp
or
leave
xlat
(bad)
pop
xor
inc
cmp
or
leave
xlat
(bad)
pop
bswap
mov
mov
jmp
push
xor
retf
sub
scas
fsubr
out
popa
and
mov
loopne
xlat
(bad)
pop
cmp
inc
cmp
add
std
xlat
(bad)
pop
xor
inc
cmp
cld
test
xlat
(bad)
pop
dec
push
mov
mov
fidiv
cs
cli
jmp
out
add
fidivr
cmc
(bad)
out
sub
jns
mov
out
xor
jg
mov
sub
cmc
push
fidiv
cs
cli
jmp
out
add
fidivr
cmc
(bad)
out
sub
jns
mov
out
xor
jg
mov
sub
push
loop
or
cli
cli
or
sub
adc
mov
out
xor
mov
push
dec
cs
pop
out
(bad)
xor
into
push
jae
add
jle
push
jg
aad
int
bnd
aaa
pop
out
or
push
push
push
jbe
cmps
test
(bad)
out
or
(bad)
or
dec
movs
inc
fld
leave
mov
adc
mov
jg
mov
push
adc
mov
xchg
js
push
jmp
cwde
jmp
mov
call
ds
scas
(bad)
xor
(bad)
in
mov
mov
xor
out
sub
adc
cli
add
sbb
bound
aad
shr
or
xor
fidivr
push
jmp
push
jmp
lea
pop
mov
or
test
int
or
cdq
jg
mov
data16
mov
pop
scas
imul
cdq
jp
mov
ins
and
jp
mov
shl
xor
cmp
and
shr
pop
sar
int
inc
mov
data16
mov
popa
xor
stos
fidiv
pop
cdq
jb
aas
push
repz
or
jg
mov
daa
jp
push
loop
(bad)
mov
or
mov
adc
xchg
mov
push
xor
jnp
(bad)
sar
data16
aad
int
out
jno
aaa
popa
lock
pop
pop
lock
inc
(bad)
sbb
mov
sub
ins
mov
out
or
popa
xor
mov
in
imul
sub
cmp
rcr
dec
sbb
dec
pop
mov
mov
dec
rol
arpl
movs
jo
ss
out
add
into
xor
aaa
(bad)
out
sbb
jns
dec
icebp
mov
pop
in
jge
arpl
test
xor
mov
div
cmp
jb
ss
icebp
mov
or
push
movs
mov
imul
mov
jno
aaa
pushf
xor
cs
mov
mov
popa
xor
mov
fs
and
xchg
mov
inc
(bad)
out
cmp
dec
(bad)
xlat
out
sub
mov
daa
xlat
ins
mov
xor
js
xor
pushf
out
cdq
jp
push
jmp
mov
ins
mov
xor
mov
(bad)
out
fcomi
popa
aas
test
je
imul
icebp
popa
daa
or
adc
push
xor
out
or
jb
xor
ja
arpl
cmp
xor
arpl
imul
sub
out
cmp
mov
xor
pop
ds
leave
mov
in
fsubr
and
pop
retf
xchg
aaa
fbstp
cdq
jg
mov
popa
xor
out
dec
add
fidiv
movs
(bad)
das
dec
cmc
or
int
or
cdq
jg
mov
loop
lds
ds
sbb
mov
(bad)
out
adc
jmp
cs
inc
movs
inc
popa
xor
sub
rcl
jmp
inc
sub
or
aad
add
repnz
mov
daa
inc
or
cli
(bad)
aad
inc
adc
test
inc
or
cli
push
mov
pop
retf
pop
cmp
ds
inc
movs
inc
dec
add
sub
test
jb
aaa
xor
mov
cs
(bad)
aad
sahf
jmp
xor
fadd
cli
or
push
mov
sub
xor
mov
call
or
movs
dec
pop
inc
sub
popa
mov
or
arpl
mov
ficomp
les
pop
mov
mov
rep
hlt
pop
lock
xor
in
cmp
out
sub
lods
sub
out
or
and
sub
cdq
mov
shr
test
test
ficomp
inc
mov
int3
fimul
outs
xchg
lock
ja
js
int
cmp
add
xlat
jns
lods
in
mov
mov
repz
xlat
ins
jae
xor
or
xor
mov
cli
add
mov
popa
cmp
mov
js
push
repnz
sbb
cmp
xlat
retf
sub
out
add
fimul
mov
mov
or
out
xor
dec
inc
mov
aad
nop
sub
sub
out
add
fimul
mov
mov
dec
or
inc
mov
frstor
push
mov
xchg
(bad)
sbb
cmovae
das
(bad)
out
or
push
push
clc
dec
div
int
or
add
push
aas
push
jae
push
rcl
dec
call
cmp
dec
icebp
or
adc
div
popa
call
or
pop
movs
and
arpl
mov
(bad)
out
xor
test
adc
sub
js
stos
fisub
inc
sbb
repz
scas
or
mov
sub
cmp
add
cmc
ds
xor
cmc
pop
repz
popa
cmp
inc
daa
ins
test
sub
out
add
loop
lds
jae
ds
out
cs
jns
push
repnz
fisttp
scas
js
icebp
pop
cmp
inc
pop
mov
or
int
xor
popa
into
fadd
jb
aaa
pop
scas
div
movs
dec
sub
sub
aad
or
cli
push
add
fidiv
cs
xor
jae
add
inc
adc
nop
mov
out
sub
std
fbld
xor
push
inc
(bad)
out
cmp
dec
fisttp
arpl
movs
dec
es
xlat
push
es
sub
cmp
push
pop
mov
mov
out
add
aaa
int
or
popa
xor
jp
add
xchg
mov
dec
inc
mov
sub
imul
adc
mov
sti
or
dec
movs
in
jns
and
xor
xchg
mov
scas
js
lea
fdiv
adc
inc
dec
cmc
or
xor
jg
mov
data16
mov
popa
inc
movs
xor
movs
cmp
inc
or
popa
arpl
mov
(bad)
pop
es
cmp
(bad)
out
sub
mov
mov
fidiv
xor
ins
test
(bad)
dec
mov
out
sub
js
stos
fisub
dec
sbb
outs
inc
das
(bad)
out
inc
mov
(bad)
out
or
push
adc
scas
add
jbe
leave
xor
inc
xor
test
movs
jo
das
(bad)
out
shl
fimul
cs
js
out
out
sub
fs
mov
dec
cmc
inc
popa
cmp
mov
mov
xor
out
sub
mov
cmp
loopne
pop
sbb
icebp
data16
mov
pop
fisttp
inc
sub
cmp
ja
push
out
and
push
out
dec
pop
rcl
cs
cs
mov
lea
fdiv
dec
adc
sub
jmp
xor
fdiv
fdivr
popa
test
lds
jae
ds
or
or
push
or
mov
sar
idiv
add
test
outs
pop
es
mov
xchg
fs
mov
mov
jb
xor
mov
icebp
popa
cmp
clc
dec
test
cmc
popa
out
daa
popa
add
movs
dec
pop
mov
movs
dec
int
or
or
popa
cmp
ds
inc
imul
adc
mov
idiv
sub
cmp
(bad)
out
sub
dec
stos
(bad)
push
jb
dec
movs
push
popa
xor
add
fidiv
xor
mov
lock
inc
mov
ret
fimul
outs
xchg
lock
ja
js
lds
cli
dec
jae
adc
cli
or
add
add
fidiv
xor
mov
xor
mov
sar
cs
out
shr
out
sub
lock
jp
push
out
xor
mov
cmp
sub
sbb
jno
xor
or
cli
add
clc
push
stc
fisttp
mov
icebp
xor
js
mov
mov
pop
fmul
jnp
or
ss
or
int
or
into
push
jae
(bad)
rol
aad
or
cli
push
or
cli
or
loop
outs
mov
out
pop
mov
repnz
lock
(bad)
int
or
call
mov
scas
js
lea
fdiv
pop
fist
push
cli
inc
or
cli
adc
(bad)
out
sub
movs
ds
xor
xor
out
or
int
add
(bad)
out
sub
or
(bad)
out
or
dec
call
push
mov
sub
mov
lea
add
out
mov
push
sahf
in
cs
mov
lea
add
out
or
(bad)
sub
out
pop
push
imul
(bad)
out
sbb
and
sar
sbb
adc
hlt
xor
aam
xor
or
jg
jbe
cs
lds
jb
aaa
popa
idiv
ds
icebp
or
pop
test
inc
popa
mov
inc
xor
add
fidiv
mul
popa
cmp
das
(bad)
out
sub
inc
movs
arpl
cmp
repz
ror
cli
or
in
or
(bad)
out
or
pop
inc
movs
pop
push
rol
daa
in
jno
and
test
mov
cli
push
ins
xor
movs
push
popa
xor
mov
repz
pop
mov
out
into
dec
call
sub
jp
push
(bad)
std
das
and
mov
frstor
adc
mov
(bad)
out
inc
pmulhw
(bad)
sub
repnz
xor
out
sub
lahf
mov
jmp
jae
sbb
sbb
lods
mov
bnd
xor
push
or
cli
(bad)
fld
daa
and
push
loope
jae
dec
cmp
cmc
and
test
push
lock
jno
neg
and
xor
aas
cdq
js
push
(bad)
jnp
push
inc
push
cli
jecxz
cs
cmp
pop
es
imul
adc
and
out
push
jae
rcl
jbe
sub
mov
lea
add
out
adc
sub
stos
cli
cli
add
mov
inc
jae
add
push
(bad)
sub
mov
lea
mov
sub
or
cli
add
test
jno
aaa
xor
mov
test
call
cs
out
cmp
(bad)
out
sub
jno
xor
mov
jno
frstor
dec
mov
(bad)
sbb
pop
mov
hlt
xor
(bad)
or
popa
repnz
pop
scas
nop
retf
or
pop
fdiv
xor
(bad)
or
popa
test
sub
cmc
push
repnz
(bad)
inc
push
sub
xor
out
cmp
(bad)
mov
xor
test
xchg
popa
push
pop
inc
mov
fnsave
mov
or
int
or
xor
jg
mov
sub
push
add
push
push
inc
or
cli
sbb
mov
pop
imul
cli
inc
jle
imul
aad
lds
jb
aaa
pop
out
cmp
(bad)
jno
dec
in
mov
(bad)
out
add
(bad)
out
sub
jnp
mov
mov
add
mov
adc
cld
xlat
dec
cmp
push
inc
pop
retf
dec
xor
jnp
mov
mov
add
ja
push
adc
push
(bad)
mov
sub
cmp
int3
(bad)
out
cmp
xlat
adc
aad
or
cli
cmp
xor
aas
rcl
pop
loopne
cs
xor
and
neg
aad
add
(bad)
jno
xor
(bad)
aas
arpl
ds
out
cmc
aaa
push
jb
xor
sub
out
mov
jae
inc
dec
pop
out
cmp
lods
xor
pop
out
lods
enter
arpl
imul
out
sub
mov
jnp
adc
mov
adc
pop
arpl
ds
(bad)
out
sbb
aad
push
jp
mov
lock
adc
cli
push
add
fidiv
or
adc
jae
push
test
xor
add
cli
inc
xchg
movs
inc
arpl
imul
out
sub
js
push
(bad)
ja
push
cli
jns
mov
xchg
out
sub
sbb
sub
mov
call
cmp
push
pop
mov
jbe
cmp
push
dec
ret
cli
add
cli
and
popa
inc
movs
push
xor
jle
xor
push
imul
sub
inc
movs
outs
popa
cmp
jle
xlat
mov
jae
sbb
cli
inc
add
bnd
mov
inc
cmc
jns
dec
movs
popaw
xor
push
add
sub
rcl
mov
inc
movs
push
popa
repnz
xlat
xchg
inc
or
cli
push
or
cli
and
mov
and
or
sub
jg
xlat
aaa
sub
out
add
add
sahf
mov
sub
mov
jg
mov
aad
cmc
push
push
jp
push
sbb
aas
popa
pop
movs
dec
popa
repnz
mov
jp
push
bnd
cmp
cmc
cmp
sub
push
jb
sub
mov
mov
sub
cmps
iret
sar
es
cs
jns
push
bnd
cmp
pop
or
popa
icebp
add
inc
push
mov
xor
enter
or
loopne
add
mov
and
(bad)
jns
push
ins
xchg
mov
pop
repz
out
or
sub
jns
cs
std
or
js
scas
push
fs
fadd
fnstcw
or
sub
imul
fisttp
mov
je
jns
mov
imul
popa
sti
add
enter
fadd
mov
jb
cmp
mov
icebp
popa
cmp
icebp
fidiv
lods
loop
push
bound
jp
push
idiv
push
push
jp
cs
icebp
add
fisubr
pop
ds
sub
pop
sahf
sub
jnp
xor
movs
push
pop
cmp
fwait
cli
and
(bad)
jns
xor
movs
dec
pop
mov
mov
or
or
pop
xor
das
(bad)
out
or
pop
inc
movs
push
xchg
call
sub
cli
add
pop
xor
mov
(bad)
jno
xor
add
fisubr
add
aad
sub
dec
adc
mul
popf
int
out
dec
pop
mov
outs
sub
sbb
icebp
inc
xor
adc
cs
inc
sbb
popa
xor
mov
(bad)
arpl
mov
sbb
mov
push
cli
icebp
push
js
push
or
adc
cs
jae
ds
mov
int
cli
fld
mov
pop
mov
mov
or
or
cli
sub
add
test
(bad)
jns
mov
aad
sub
(bad)
js
push
out
ja
push
bnd
xor
cmp
mov
(bad)
jno
xor
add
fisubr
add
aad
sub
dec
adc
mul
popf
int
jmp
push
aad
sub
sbb
icebp
inc
xor
adc
cs
inc
sbb
popa
xor
mov
(bad)
arpl
mov
sbb
mov
push
cli
icebp
push
js
push
or
adc
cs
imul
in
jns
push
push
jp
mov
(bad)
arpl
mov
lock
popa
cmp
imul
jg
mov
data16
mov
fidiv
movs
in
lds
ds
call
xor
jae
movs
cmc
mov
xchg
movs
lock
das
(bad)
out
and
mov
sub
out
add
fisubr
push
cld
xlat
(bad)
std
push
popa
div
retf
or
pop
in
xor
(bad)
or
popa
inc
movs
ds
out
rol
(bad)
jno
cmp
fbld
scas
js
lea
jg
mov
data16
mov
pop
(bad)
mov
arpl
pushf
test
imul
lds
adc
or
mov
adc
arpl
mov
xlat
(bad)
push
cs
add
mov
xlat
dec
jnp
rol
fisubr
jp
push
push
jl
xor
inc
imul
sbb
mov
sbb
out
add
out
jno
xor
inc
cmp
mov
out
cmc
aaa
push
jb
xor
sub
js
mov
push
cmp
arpl
adc
pop
mov
das
or
push
or
arpl
ds
(bad)
out
sbb
aad
or
push
bnd
mov
cli
or
xor
jns
push
jmp
xor
js
push
jmp
mov
adc
pop
popf
js
mov
sbb
or
sub
mov
daa
xlat
outs
sub
cli
or
sub
rcl
repnz
and
and
dec
sub
cli
inc
or
cli
and
cli
dec
or
not
test
xlat
aaa
sub
cli
push
or
sub
xchg
and
addr16
aad
or
(bad)
jns
test
inc
imul
in
test
fisubr
cvttps2pi
rcl
dec
push
sub
call
out
dec
or
inc
(bad)
xor
jo
mov
stc
test
xor
mov
push
ins
xchg
mov
sbb
cs
out
cmp
je
mov
and
or
js
scas
push
fs
sbb
aad
out
icebp
pop
mov
and
sar
inc
jno
aad
inc
cmp
mov
icebp
popa
ins
and
loope
cmp
(bad)
cmp
mov
leave
call
pop
jmp
(bad)
jns
push
or
pop
mov
mov
adc
mov
adc
push
out
int
push
jp
push
adc
cs
mov
mov
adc
mov
arpl
test
add
push
or
push
mov
popf
js
push
out
adc
cs
lds
icebp
inc
mov
sbb
test
push
idiv
push
or
xor
or
xchg
out
mov
push
out
cmp
adc
test
movs
push
add
cmps
sub
mov
xor
fnstenv
movs
(bad)
fnstenv
sub
mov
dec
pop
xor
cdq
xor
jb
xor
jp
mov
sbb
cdq
mov
out
xchg
cdq
jp
push
adc
mov
cli
add
jnp
jmp
jae
jmp
xor
jno
mov
js
mov
arpl
sbb
mov
ins
jge
fidiv
or
push
rol
jae
and
in
inc
lock
xor
jmp
push
push
aad
sub
jmp
scas
(bad)
out
inc
adc
icebp
dec
mov
aad
or
jp
test
inc
sub
scas
jnp
fldcw
or
(bad)
jns
push
aad
sub
lahf
mov
adc
cs
out
or
out
lds
jp
push
push
js
push
out
lds
aaa
leave
mov
adc
cmp
aad
je
aam
inc
cmp
mov
(bad)
arpl
mov
lock
popa
inc
or
cdq
jg
mov
data16
mov
daa
inc
or
cli
(bad)
xlat
cmc
sbb
mov
(bad)
out
cmp
jns
push
out
and
xor
mov
jnp
not
jle
jp
cs
aad
out
fadd
aad
lds
imul
mov
mov
data16
mov
pop
fist
xor
retf
sub
inc
or
cli
push
fdivr
out
popa
and
mov
jp
push
cli
jae
movs
jmp
out
xor
dec
fimul
popa
imul
xor
dec
add
out
or
pop
fmul
fwait
cli
push
(bad)
xor
int3
or
cli
(bad)
aad
mov
jp
mov
call
cmp
or
push
out
sub
in
in
das
(bad)
out
add
(bad)
out
sub
jl
das
(bad)
out
or
or
mov
pop
imul
xchg
cmp
dec
adc
out
loope
push
cs
cmp
push
pop
imul
popa
repz
retf
mov
stos
out
jle
push
cli
or
and
push
jmp
mov
xor
movs
or
adc
mov
push
pop
cmp
mov
inc
scas
mov
cmp
aad
mov
mov
mov
mov
std
push
sub
iret
jp
push
out
jb
dec
adc
mov
out
in
push
(bad)
jns
push
repnz
pop
sbb
retf
pop
mov
lock
aas
arpl
sub
and
xor
sub
inc
(bad)
out
xor
in
inc
arpl
movs
ds
xchg
aad
add
fidivr
mov
fdiv
jmp
sbb
out
lds
jnp
push
out
sar
xor
aad
lds
jno
cmp
ja
pop
test
daa
xlat
arpl
mov
int
or
popa
mov
mov
jb
aas
cdq
jp
push
add
push
out
jg
int
xchg
mov
xor
aas
cdq
out
mov
xor
aas
cdq
jl
push
add
inc
sub
lds
xlat
aas
push
aad
or
cli
and
cmp
push
jae
push
sar
inc
imul
adc
jle
add
cmp
imul
int
mov
jb
push
popa
mov
mov
dec
add
out
adc
pop
(bad)
xor
retf
sub
dec
movs
jb
inc
or
popa
arpl
cmp
fmul
mov
or
cli
push
ja
xlat
ja
push
bnd
push
out
xchg
ret
cs
xor
inc
sub
iret
adc
out
xlat
push
push
aad
cs
mov
mov
dec
add
or
mov
xor
out
add
arpl
mov
repnz
inc
movs
dec
sub
aad
arpl
movs
dec
es
imul
adc
mul
or
adc
nop
retf
push
mov
(bad)
sbb
xor
mov
movs
push
sti
ja
pop
test
cli
adc
cli
push
or
popa
push
push
out
push
div
pop
cmc
or
popa
in
sbb
push
icebp
or
sbb
lds
inc
rcl
adc
arpl
movs
push
sub
imul
sub
mov
adc
out
or
cli
push
push
jle
jnp
push
add
mov
(bad)
add
aad
or
cli
bound
cli
and
cli
es
div
mov
lock
mov
(bad)
out
shr
jnp
push
out
or
cli
push
sar
xlat
retf
sub
out
add
loop
imul
imul
fsubr
or
jns
pop
lods
jb
xor
dec
cmp
push
das
jge
mov
mov
lods
fxch
shr
hlt
mov
xlat
(bad)
pop
and
movs
push
popa
dec
movs
dec
pop
fmul
jo
retf
fst
int3
pop
lods
jecxz
mov
pop
mov
jnp
loop
stc
xchg
lock
in
pop
int
dec
mov
fsub
inc
mov
fldz
sub
jns
push
idiv
das
popa
(bad)
(bad)
sub
jns
push
div
mov
cli
sbb
jae
or
cdq
out
sub
repnz
leave
xlat
(bad)
pop
jb
retf
mov
lock
or
scas
fsubr
out
test
sbb
pop
jnp
sub
mov
ds
jns
mov
ins
repnz
aad
sub
imul
popa
inc
movs
dec
popa
cmp
fsub
inc
imul
fnstenv
cmp
(bad)
jbe
cmp
inc
and
xchg
mov
pop
mov
mov
ins
mov
xor
push
add
(bad)
dec
mov
aad
shl
cmp
adc
movs
jp
inc
xor
std
jmp
movs
jbe
mov
mov
and
push
push
js
push
and
or
out
cmp
adc
inc
popa
inc
movs
dec
arpl
add
push
jb
xor
add
popa
cmp
mov
jmp
dec
push
cld
or
mov
mov
jb
xor
fs
sbb
mov
xchg
ins
fwait
mov
(bad)
out
sub
jns
push
idiv
push
out
shl
pop
aas
test
pop
jp
mov
lock
cmp
mov
out
cmc
aaa
push
jb
xor
sub
ja
mov
sub
mov
icebp
fidiv
lods
jecxz
mov
cwde
repz
mov
jbe
loop
mov
int3
inc
(bad)
out
xor
xor
mov
fs
mov
lock
cmp
movs
cmp
ja
pop
imul
ja
sbb
out
int
loop
aad
loop
sar
shr
aad
lds
jno
cmp
ja
pop
dec
sub
popa
cmp
inc
daa
inc
imul
call
inc
popa
inc
movs
inc
daa
inc
imul
call
ds
mov
repz
push
and
push
loop
lds
ja
mov
sub
mov
sub
adc
cs
int
idiv
imul
adc
cs
inc
aas
xor
fdiv
pop
fisttp
outs
sub
push
out
inc
fdivr
jmp
repz
cs
dec
aam
out
cmp
outs
bound
push
out
add
int
out
cmc
push
cli
ja
push
bnd
cmp
xor
mov
pop
mov
mov
xchg
out
mov
push
out
cmp
inc
push
jmp
lock
mov
adc
outs
sub
and
icebp
dec
xor
out
sub
mov
dec
pop
data16
dec
jmp
out
add
sub
jp
push
repnz
or
les
add
(bad)
out
sub
mov
mov
dec
fimul
popa
xor
cs
scas
loopne
fdivp
dec
mov
(bad)
data16
mov
data16
mov
fistp
sbb
out
sahf
imul
jp
push
push
and
inc
adc
mov
out
lds
int
and
mov
jp
push
(bad)
sub
in
imul
fimul
popa
arpl
mov
icebp
sub
sub
out
xor
jb
xor
out
sar
daa
aas
imul
xlat
ror
aad
or
cli
adc
cli
sbb
out
pop
mov
mov
mov
inc
js
rol
mov
loop
pop
mov
bnd
push
jmp
lods
fsubp
pop
mov
jmp
mov
fdivr
outs
arpl
inc
es
imul
sbb
or
jg
jb
cs
lds
jp
push
idiv
push
cli
jno
aas
pop
inc
sub
jnp
xlat
dec
pop
or
push
call
(bad)
push
arpl
arpl
movs
inc
sub
sar
mov
jb
cmp
xlat
xchg
pmullw
add
(bad)
jecxz
(bad)
out
pop
das
popa
(bad)
lods
add
or
push
sbb
out
xchg
push
jmp
pop
fcmove
mov
lock
mov
icebp
(bad)
xor
push
sbb
out
jb
sbb
popf
mov
xchg
repz
push
mov
(bad)
cmp
add
fidiv
mov
repz
mov
xlat
out
sub
enter
mov
push
scas
or
leave
call
(bad)
out
or
in
sub
(bad)
out
pop
xor
in
pop
cmp
mov
or
push
sbb
out
xchg
sub
enter
cmp
xchg
(bad)
push
mov
ins
lock
sub
cmp
aad
sar
adc
and
out
or
pop
mov
mov
ins
enter
xchg
mov
lahf
jp
mov
repz
lods
idiv
mov
repz
test
mov
out
sub
js
sub
ror
cli
and
fnstcw
add
mov
sar
nop
mov
out
sub
je
lods
jmp
xlat
pop
daa
and
leave
jp
push
out
or
xor
inc
pop
scas
test
out
inc
xor
add
fidivr
mul
popa
dec
movs
pop
pop
retf
pop
jmp
out
mov
ja
jae
mov
out
jl
daa
fs
mov
xlat
or
loop
sahf
mov
sub
sti
adc
out
add
loop
mov
mov
jb
xor
movs
popaw
cmp
dec
es
push
mov
cmp
or
out
push
cmp
rcl
cmps
int3
sub
mov
lea
dec
fidiv
data16
mov
cli
add
test
dec
jae
cli
sub
out
hlt
mov
movs
inc
pop
out
cmc
ss
arpl
inc
popa
xor
or
out
add
fimul
mov
mov
ds
add
or
jg
neg
aad
aad
jmp
cs
lds
jp
push
idiv
aam
mov
jl
push
add
xor
loopne
xor
mov
data16
mov
push
adc
cs
out
xor
adc
mov
mov
jb
xor
std
or
sbb
sar
sbb
jl
push
out
xlat
push
mov
sub
inc
movs
push
popa
xor
push
fsubrp
sub
cmp
or
out
add
test
cdq
jg
mov
daa
jp
push
loop
push
clc
popf
xor
cs
es
cli
cli
add
addr16
push
mov
out
cld
push
popa
arpl
xor
inc
sar
sub
aas
pop
scas
test
movs
xor
xlat
or
aad
add
fisub
inc
lea
mov
jnp
repnz
jg
push
pop
cs
aad
loop
imul
out
or
ins
mov
out
sbb
(bad)
ds
inc
xchg
or
push
sbb
out
sahf
imul
jns
mov
adc
or
cli
push
ja
xlat
ja
push
loop
fst
ja
push
out
fst
ja
push
cli
ja
push
(bad)
ja
push
jmp
cs
ins
mov
sar
sub
mov
xor
push
cmp
xlat
cmp
lds
inc
rcl
dec
retf
arpl
movs
pop
sub
imul
sub
fisttp
aad
push
jae
sub
jle
inc
pop
cs
int
and
push
push
retf
arpl
xchg
imul
lds
jb
addr16
or
push
std
ret
jb
xor
add
fidivr
mul
arpl
movs
inc
sub
imul
or
or
jae
and
jle
stc
push
mov
cli
sub
cli
or
out
mov
ss
inc
xchg
dec
inc
adc
pop
mov
pop
pop
xor
inc
cmp
adc
std
xlat
(bad)
pop
mov
push
std
cmp
jp
mov
repz
scas
test
loop
jae
add
xlat
out
sub
cmp
das
(bad)
out
cmp
out
sub
jns
push
out
fnstenv
popa
imul
xlat
ins
mov
repz
mov
popa
arpl
outs
popa
cmc
or
add
cmp
leave
test
push
sbb
out
aad
ss
mov
sbb
or
adc
or
test
xlat
retf
jno
nop
or
adc
lods
fmulp
vpsrld
aad
push
enter
scas
fsubr
out
dec
or
adc
push
(bad)
enter
int3
lds
retf
int
ds
lds
retf
xchg
sub
int3
fst
ins
xchg
or
push
sbb
out
xchg
lock
or
adc
or
adc
in
xlat
out
sub
xor
cs
mov
mov
or
push
or
sub
dec
movs
pop
(bad)
lock
sbb
and
mov
mov
inc
xor
jb
das
(bad)
out
pop
jae
dec
imul
(bad)
js
push
push
retf
push
int3
aad
push
enter
int3
aad
dec
retf
sahf
imul
in
outs
in
inc
das
(bad)
out
add
das
(bad)
out
push
imul
out
or
adc
or
adc
or
stc
or
adc
or
adc
or
dec
stc
pop
xchg
cli
ss
stos
cli
pop
ins
aaa
mov
pop
xor
mov
bound
sbb
xor
mov
int
mov
jae
sub
cmp
nop
(bad)
jp
push
push
cmps
sub
pop
imul
popf
imul
test
or
cli
sub
push
and
cli
push
push
out
in
xchg
sub
cli
and
cli
es
jae
sub
out
or
inc
or
inc
or
cli
xor
aam
or
lds
je
ds
loopne
cs
jns
push
sub
push
jmp
jle
jb
cs
std
push
cmp
push
bnd
push
push
inc
fadd
aad
fst
jp
push
add
push
aas
aam
mov
jp
push
ds
push
or
or
jg
ss
lds
jp
push
and
sbb
jg
xor
aad
lds
jp
push
cmp
and
jg
push
pop
cs
lds
jb
ja
inc
movs
dec
sub
push
loop
sub
inc
movs
inc
arpl
movs
pop
daa
inc
rcl
rcl
sub
cmp
outs
es
rcl
ret
cs
xor
pop
arpl
pop
sub
rcl
scas
rol
and
jp
inc
movs
jbe
aas
rcl
call
xchg
popa
cmp
jbe
aas
rcl
xchg
sub
mov
popa
mov
mov
aad
or
cli
push
or
cli
cli
mov
arpl
inc
arpl
movs
dec
sub
fadd
jp
push
idiv
push
push
jl
push
add
jle
data16
aad
push
jp
push
push
jl
push
push
inc
sar
bound
aad
lds
jb
push
pop
daa
sub
xor
cli
cli
or
ret
sbb
mov
repz
scas
test
loop
jnp
cli
inc
xor
out
sub
cmp
inc
pop
dec
test
and
sar
xlat
xchg
push
aad
add
loop
sbb
aad
push
cmp
or
mov
es
imul
sub
mov
sbb
lods
jle
inc
imul
adc
mov
daa
inc
imul
call
mov
out
jnp
dec
clc
mov
popa
int3
fiadd
cs
xor
cmp
jp
mov
repz
scas
test
loop
jl
jns
push
jmp
mov
cli
push
shl
aad
push
cmp
rcl
fcmovb
sub
xor
add
cli
or
push
mov
arpl
pop
sub
addr16
cli
rcl
mov
sub
cmp
add
bnd
mov
or
xor
adc
and
cdq
sub
jns
test
in
jae
cli
mov
ds
pushf
das
(bad)
out
or
dec
call
push
mov
xor
repz
mov
push
faddp
sub
mov
mov
dec
add
fidiv
jg
fsub
pusha
mov
lock
inc
punpckldq
push
out
imul
repz
sub
xchg
sub
imul
adc
add
jmp
jmp
popa
sub
and
fsubr
cmp
icebp
sub
jns
mov
push
out
sub
cli
dec
and
das
daa
aad
add
loop
jg
out
jns
push
out
lds
jnp
push
out
(bad)
and
xchg
es
add
out
jg
mov
jno
xor
lods
sub
cli
adc
(bad)
popa
dec
movs
dec
popa
repnz
sub
lea
sub
cld
into
out
xor
adc
cli
cli
or
mov
(bad)
pop
add
out
add
fimul
pop
mov
icebp
data16
mov
data16
mov
fiadd
fwait
cli
(bad)
(bad)
test
and
adc
adc
repz
repz
push
arpl
cs
inc
xor
jp
mov
ins
and
cmp
jae
or
stos
out
cmp
push
add
fisubr
pop
movs
fdivr
out
out
sub
cmp
imul
jno
inc
sub
cmp
mov
out
sub
imul
xchg
scas
sub
out
or
jp
push
out
fld
hlt
push
mov
or
xchg
sub
jns
push
out
jno
cs
icebp
ja
pop
and
mov
dec
inc
mov
sub
cli
(bad)
(bad)
mov
sbb
add
inc
in
daa
das
(bad)
out
or
test
add
dec
in
adc
(bad)
out
xlat
mov
fsub
pusha
mov
daa
xlat
outs
add
out
or
(bad)
jns
push
div
aaa
adc
div
popa
loope
test
jns
xor
mov
sub
call
sbb
add
js
mov
pop
ret
popa
inc
movs
inc
push
repz
(bad)
out
mov
outs
adc
ds
js
call
pop
sub
das
dec
clc
or
dec
fidiv
shl
xor
call
imul
out
dec
fdiv
and
dec
fdiv
sub
jmp
aad
add
fisub
inc
lea
dec
inc
mov
sbb
cdq
sub
xchg
mov
js
push
fisub
jle
xor
aad
inc
xor
mov
jle
jae
movs
jmp
push
inc
sub
mov
lea
jb
cmp
jae
movs
out
sub
pop
movs
sub
fcom
ds
sub
mov
lea
jb
cmp
aas
rol
(bad)
jno
cmp
mov
sub
arpl
sub
out
add
fimul
mov
sti
inc
sub
mov
ins
and
ja
sbb
mov
inc
lock
(bad)
fwait
cli
add
jae
out
or
push
cli
jnp
scas
cmps
iret
lods
mul
nop
mov
out
sub
xor
jle
js
push
not
pop
add
out
or
cli
push
add
fidivr
imul
arpl
push
div
mov
(bad)
out
cmp
cmp
sub
cmp
mov
ja
je
xor
mov
out
sub
xor
push
popa
pop
or
sar
mov
jmp
adc
fcmovb
jle
and
xchg
scas
mov
bnd
dec
inc
pop
cmp
stos
cli
push
or
fidivr
push
jmp
add
out
shl
je
mov
out
dec
jae
repz
out
cmc
pop
popa
inc
movs
ds
xor
xor
cmc
xchg
fcmovbe
mov
daa
xlat
cmp
aad
or
cli
push
or
cli
push
add
fisubr
mov
mov
js
mov
cli
jnp
mov
out
sub
repz
mov
pop
or
mov
repz
mov
fwait
arpl
cs
out
or
enter
pop
out
fsubr
dec
fidiv
sar
lea
jb
cmp
fisttp
push
jmp
mov
jp
mov
adc
cs
jns
xor
idiv
pop
ins
sub
(bad)
out
or
push
push
clc
dec
or
(bad)
out
xlat
cmp
inc
aaa
xor
mov
icebp
push
add
or
in
sub
mov
lea
fdiv
iret
lock
inc
sub
out
xor
dec
add
fidiv
or
fnstcw
inc
lock
leave
or
xor
cmps
shr
cli
push
(bad)
xor
int
or
jnp
das
(bad)
out
or
movs
in
aad
(bad)
sar
inc
(bad)
out
sbb
lds
inc
rcl
dec
mov
or
fisubr
imul
adc
mov
js
mov
(bad)
out
cmp
(bad)
out
sbb
jno
and
movs
lods
push
jl
retf
fcmovu
test
xor
or
ror
cli
push
add
fcmovb
jle
mov
repnz
mov
cli
inc
imul
popf
mov
popa
mov
push
daa
pop
repz
mov
adc
ins
dec
mov
sub
sub
jmp
(bad)
fidivr
mov
repz
pop
jp
push
out
mov
lods
(bad)
out
(bad)
cmp
loopne
xor
repz
loopne
xor
repz
sub
mov
lea
fdiv
data16
mov
fidiv
call
mov
aas
and
pop
dec
comiss
in
movs
mov
mov
sub
mov
xor
out
xor
repnz
mov
xor
out
xor
hlt
sub
mov
xor
mov
sub
mov
aaa
(bad)
out
xor
clc
sub
mov
cmp
out
xor
cli
sub
mov
cmp
out
xor
cld
sub
mov
cmp
mov
sub
mov
out
cdq
jl
cs
jl
ds
jl
ds
jl
ds
jl
movs
jl
ds
jl
ds
cmp
mov
jl
ds
into
jl
ds
cmp
loopne
cmp
in
jl
ds
out
xor
xrelease
out
nop
ds
mov
jecxz
(bad)
ds
nop
ds
nop
ds
nop
ds
nop
ds
nop
ds
nop
ds
mov
jecxz
(bad)
mov
data16
mov
fisttp
sbb
out
sahf
imul
adc
mov
mov
fsub
lock
cli
(bad)
hlt
dec
scas
fcomp
xchg
ds
loopne
sbb
hlt
push
xchg
(bad)
pop
and
cmp
lock
push
xchg
sbb
cs
inc
movs
outs
popa
(bad)
xchg
push
mov
push
add
or
out
add
jmp
push
push
sbb
lea
fdiv
fsubr
scas
mov
fbstp
sub
xor
sub
xchg
js
push
mul
das
cmps
cmp
jnp
or
cli
or
test
cs
ds
jae
add
push
mov
sub
cmp
cmc
xlat
out
sub
jns
push
out
(bad)
pusha
cmc
mov
das
(bad)
out
add
dec
nop
mov
out
sub
xor
leave
xlat
(bad)
rcl
int
sub
into
out
nop
mov
out
sub
cmp
out
or
or
pop
mov
lds
ja
push
(bad)
in
js
cmp
push
inc
adc
push
repnz
lds
retf
jno
nop
or
into
popa
and
popa
in
add
aad
inc
mov
test
push
js
mov
mov
adc
or
or
sbb
out
lds
int3
inc
pop
sub
sub
es
imul
imul
movs
arpl
movs
ds
test
xchg
jp
aad
test
lea
sub
imul
adc
cs
inc
cmp
or
cs
fst
bound
cmp
inc
xor
movs
push
inc
movs
inc
popa
xor
push
call
lea
fdiv
and
cdq
jg
sahf
stos
cs
jno
xor
mov
icebp
data16
mov
push
lock
xchg
ja
sub
ds
sti
out
sub
jno
mov
movs
cs
jns
push
inc
jp
push
inc
aas
sar
sbb
in
cs
out
adc
sti
sub
inc
movs
mov
sub
(bad)
cmp
out
or
dec
in
jecxz
sub
jno
xchg
cdq
jg
mov
sub
push
out
outs
movs
pop
jp
push
loop
or
cli
cli
xlat
in
aam
sub
xor
bound
aas
cmp
ror
mov
fisubr
or
jl
xor
xor
out
adc
sub
and
aas
or
sub
jp
cmp
xchg
pop
inc
movs
dec
pop
xor
mov
sub
mov
dec
out
sub
imul
popa
inc
movs
dec
popa
mov
jmp
movs
lock
mov
or
cli
push
test
popa
cmp
cmps
jp
pop
mov
xchg
ror
mov
cmps
adc
jp
push
cli
icebp
dec
mov
popf
xlat
or
xchg
fcom
clc
fnstenv
js
stc
lds
cli
push
test
popa
fmul
retf
jmp
jns
lock
adc
stc
push
xor
out
push
scas
cli
pop
mov
mov
sbb
lock
jmp
loope
test
pop
imul
popa
leave
js
stc
out
or
movs
pop
loope
test
popa
dec
movs
inc
popa
fimul
mov
sahf
nop
stos
retf
jp
lock
inc
paddusw
js
sar
push
vsqrtss
cli
inc
mov
fwait
jl
xor
mov
jbe
mov
pop
jmp
cmc
popa
mov
pop
int
movs
stc
stc
fisttp
fnstcw
mov
pop
sub
xchg
rcl
mov
test
pop
cmp
repnz
mov
sbb
or
xchg
rcl
add
test
pop
inc
movs
inc
popa
pop
movs
inc
int
movs
(bad)
stc
retf
or
cli
mov
fld
or
cli
add
arpl
jmp
(bad)
mov
lods
repnz
mov
lods
adc
sar
push
sbb
jge
pop
daa
xor
sbb
daa
xchg
ficom
es
or
popa
fidivr
stc
mov
sbb
mov
fwait
cli
ss
popa
fimul
mov
aad
inc
lock
stc
inc
xor
out
push
mov
adc
xor
(bad)
fnsave
in
scas
ins
cmp
mov
or
add
cli
add
stc
mov
movs
jle
mov
movs
inc
popa
int3
push
ret
loopne
xchg
mov
mov
stc
dec
xor
out
push
cmps
cli
push
mov
test
pusha
sbb
mov
scas
push
jmp
js
popa
jmp
loope
or
cli
inc
test
arpl
mov
into
mov
ds
iret
xchg
cmp
bnd
popf
out
mov
cmp
jo
xchg
cli
inc
mov
fwait
jp
push
jmp
mov
or
xchg
iret
xchg
out
ret
stc
mov
popa
fld
popa
pop
movs
push
fxch
or
arpl
nop
sti
or
mov
xchg
rol
push
cmp
pop
push
sahf
adc
jp
push
push
repnz
mov
push
scas
or
xchg
fcomp
clc
popa
mov
or
stc
shl
cmp
xor
mov
xchg
(bad)
(bad)
cmp
out
mov
sar
mov
sar
mov
mov
or
xchg
(bad)
xchg
out
mov
mov
sub
mov
mov
popa
pop
movs
(bad)
fnstenv
xchg
pop
lods
jp
lock
stc
inc
xor
jns
push
out
inc
mov
popf
adc
inc
adc
cmp
adc
inc
sbb
or
xchg
xlat
cwde
out
mov
mov
popa
mov
or
stc
mov
or
cli
dec
test
popa
pop
movs
ds
push
ret
loopne
shr
mov
xchg
ror
mov
inc
adc
mov
test
mov
scas
jo
loope
or
fnstcw
movs
or
jmp
test
popa
dec
movs
arpl
mov
dec
xchg
rol
xor
js
push
out
in
push
out
jp
mov
in
push
cs
push
sar
jnp
xor
xchg
xor
jl
lods
div
push
in
scas
popa
cmp
out
icebp
fldl2t
js
stc
mov
push
stc
fmul
fnstenv
ja
arpl
mov
ret
jne
mov
inc
lock
stc
inc
xor
jp
push
push
cli
pop
xor
add
jae
into
or
xchg
rcl
clc
popa
mov
(bad)
mov
popa
dec
movs
sbb
or
cli
dec
adc
push
lock
adc
stc
push
mov
sub
xchg
mov
cmps
adc
inc
adc
cmp
icebp
push
mov
(bad)
push
xchg
fstp
add
int
or
stc
jmp
or
cli
sub
int
push
mov
enter
adc
into
mov
inc
xchg
iret
(bad)
cmp
bnd
popf
adc
inc
adc
cmp
or
jnp
jl
lock
iret
xchg
mov
inc
adc
out
mov
mov
mov
fnstcw
or
sub
jp
lock
stc
dec
mov
scas
and
mov
in
push
and
push
in
mov
leave
inc
sbb
scas
arpl
loope
test
popa
ret
or
test
popa
pop
movs
xchg
cwde
push
aaa
mov
mov
xchg
rcl
xor
and
sub
in
cmps
repnz
mov
pop
dec
xchg
rcr
(bad)
popa
xor
lock
push
mov
jp
inc
lock
stc
inc
mov
mov
jl
cmp
pop
jp
fiadd
jmp
fs
(bad)
cli
sub
or
nop
mov
stos
ja
mov
ins
aas
xchg
(bad)
xchg
cmp
and
and
and
leave
mov
xchg
lods
or
xchg
rcr
clc
popa
inc
movs
sbb
mov
fld1
push
ret
push
mov
leave
(bad)
jns
push
idiv
lock
stc
inc
mov
cmps
and
lods
jl
pop
rcl
and
popa
in
inc
push
jmp
data16
jmp
fwait
cli
sbb
or
xchg
mov
ficom
mov
ins
aas
xchg
rcl
xor
and
inc
adc
dec
pop
repz
xchg
rcr
sti
popa
pop
movs
jb
mov
or
cli
ds
mov
daa
push
add
or
(bad)
push
mov
xchg
and
fwait
jp
push
xor
mov
out
push
jmp
popa
cmp
out
sub
mov
or
test
push
xchg
mov
aas
xchg
iret
xchg
mov
scas
repnz
mov
jg
jmp
fnstenv
push
mov
call
sbb
stc
inc
mov
cmps
cli
dec
mov
mov
adc
mov
jmp
or
xchg
fcomp
clc
popa
ret
int
mov
pop
cmp
add
mov
sbb
pop
lock
mov
cmps
cli
inc
mov
xchg
repnz
mov
push
or
xchg
ficom
es
xor
sub
int
inc
mov
or
xchg
xor
out
or
cli
or
cli
push
jmp
cwde
fadd
cmp
sar
xor
std
mov
jns
push
add
sti
loop
jmp
popa
inc
movs
dec
popa
xor
push
repnz
sar
sub
pop
sahf
lock
xor
inc
popa
inc
movs
ds
jne
aad
nop
jle
xor
jnp
sbb
jg
mov
cmp
adc
xchg
cmps
dec
add
mov
daa
jl
push
inc
mov
(bad)
out
or
cs
cli
or
cli
push
jmp
cwde
fdivr
or
cli
push
sar
inc
movs
push
daa
inc
or
mov
jns
push
xor
push
out
jns
push
jmp
cmp
jp
push
repnz
sar
daa
jp
pop
add
sub
inc
movs
popaw
xor
ds
das
jns
nop
and
push
es
push
jae
sbb
jle
mov
cmp
adc
xchg
ja
mov
sar
es
push
(bad)
aas
sar
(bad)
out
or
push
or
cli
or
cli
push
jmp
cdq
fdivr
or
cli
push
rol
es
or
mov
jns
push
and
push
out
jns
push
jmp
cmp
jp
push
repnz
es
pop
out
sub
cmp
inc
popa
xor
push
add
jg
cmp
cmp
rol
(bad)
out
cmp
adc
xchg
addr16
inc
add
mov
sub
(bad)
sar
(bad)
out
or
and
push
jmp
inc
fxch
or
sub
js
xor
or
sbb
or
repnz
test
pop
xor
add
es
cs
mov
popa
xor
push
out
aad
test
(bad)
ja
loope
fdivr
cdq
repnz
mov
cwde
jp
push
out
mov
sahf
js
mov
(bad)
out
or
add
loopne
mov
pop
xor
popf
cs
mov
xlat
inc
data16
mov
pusha
xor
xlat
xlat
mov
push
sub
inc
imul
call
cs
rcr
out
sub
scas
push
test
sub
js
jbe
xor
cmc
sbb
adc
dec
jno
js
cld
lds
cmp
popf
xor
movs
sub
xchg
mov
data16
mov
out
and
jns
push
loop
add
aad
ret
das
add
or
mov
mov
out
or
shl
or
pop
aas
cmp
jbe
xor
test
dec
ret
fisttp
data16
mov
sbb
add
push
xor
jle
xchg
out
out
sub
xlat
test
push
popa
xchg
dec
out
sub
mov
xchg
and
imul
and
xchg
cwde
fidivr
or
mov
jnp
jp
dec
jle
mov
cmp
(bad)
das
out
lds
out
sub
mov
cs
cmp
push
pop
scas
div
out
stos
push
mov
out
sub
push
adc
xlat
(bad)
imul
in
sub
jno
nop
mov
aad
add
loop
std
push
out
jno
or
lods
daa
popa
out
add
add
aad
das
mov
fsub
es
mov
jb
aas
pop
xor
mov
pop
mov
lock
adc
and
lea
popa
mov
arpl
scas
imul
mov
mov
jb
bnd
push
jp
jbe
sar
(bad)
out
sub
or
push
fld1
mov
mov
jmp
mov
leave
xchg
or
pop
rol
daa
jp
pop
mov
in
push
movs
adc
sub
lock
push
jmp
jg
sahf
je
aad
inc
outs
pop
mov
imul
adc
popa
aad
aad
jmp
stos
out
repnz
xchg
fadd
mov
bnd
xor
test
mov
(bad)
jns
push
fidivr
push
mov
out
sub
jg
cmp
out
or
arpl
cmp
out
or
or
sub
mov
cmp
out
inc
scas
cli
stc
sub
mov
cmp
out
dec
retf
out
pop
lahf
xchg
cs
ja
jecxz
out
xor
fwait
xchg
cs
test
(bad)
out
fyl2x
data16
mov
data16
mov
data16
mov
sub
lahf
das
(bad)
out
mov
arpl
das
(bad)
out
out
push
jb
xor
fs
pop
outs
mov
(bad)
cmps
lahf
cs
out
out
push
jb
xor
fs
pop
arpl
cs
out
out
push
jb
xor
fs
mov
xor
in
out
xor
ja
(bad)
in
out
adc
sub
data16
mov
popa
xor
inc
(bad)
out
add
jecxz
jecxz
sub
xchg
sub
leave
ss
add
xchg
mov
(bad)
jbe
pop
popa
pop
xchg
mov
pusha
ja
inc
(bad)
out
(bad)
mov
add
cmp
lahf
xor
mov
add
out
out
out
movs
dec
out
shl
pop
lahf
xor
mov
adc
in
out
sbb
jns
push
out
arpl
(bad)
out
add
fnstenv
jecxz
out
cmp
adc
jle
push
call
jg
mov
cli
cli
xlat
out
out
sub
jge
inc
(bad)
out
add
jecxz
fidivr
popa
cmp
xor
out
or
pop
repz
mov
fisubr
or
jns
bound
out
xor
cs
out
or
jns
jecxz
out
adc
adc
pop
jecxz
out
adc
imul
out
pop
lahf
xchg
cs
jno
xor
xor
mov
or
out
jmp
fisubr
out
xchg
cs
out
stos
lock
nop
lods
xor
sub
out
or
test
push
mov
xchg
xchg
mov
(bad)
jbe
addr16
ins
xchg
mov
pusha
jge
inc
(bad)
out
(bad)
mov
add
cmp
jp
inc
popa
lods
xor
mov
add
out
out
out
movs
jl
inc
(bad)
push
push
pop
pop
test
mov
lahf
xchg
cs
fst
mov
add
or
sub
mov
(bad)
out
or
popa
test
call
test
(bad)
or
mov
cld
cmp
(bad)
out
sub
or
ficom
xchg
xor
out
or
out
iret
inc
popa
inc
mov
cmp
dec
mov
(bad)
jbe
xor
xchg
outs
cmp
xchg
cs
xor
xchg
cs
push
lods
not
push
push
sbb
je
pop
mov
or
xchg
push
(bad)
clc
push
fucomip
out
xor
add
xor
add
xchg
pop
xor
nop
out
out
sub
mov
div
fisubr
out
fist
out
sub
popa
cmp
xor
out
or
in
out
xor
jns
or
sub
pop
sti
mov
in
mov
iret
inc
cmp
xchg
cs
push
mov
test
add
pop
fucomip
out
sbb
shl
je
inc
(bad)
out
cmp
jge
inc
(bad)
out
(bad)
push
loop
sub
pop
fwait
xchg
cs
cmc
sub
dec
fisttp
data16
mov
sub
cli
add
mov
xchg
inc
or
push
je
lods
outs
dec
arpl
cs
jno
xor
xchg
cmp
out
rol
jnp
dec
loope
cmp
xor
(bad)
out
(bad)
push
push
test
(bad)
out
or
pop
mov
mov
stc
inc
sbb
scas
push
pop
mov
imul
ror
fisubr
jnp
repz
push
out
jae
mov
test
sub
sti
sub
out
add
out
(bad)
das
(bad)
out
mov
inc
(bad)
out
(bad)
mov
out
sub
imul
sbb
mov
mov
out
or
in
out
xor
jns
sbb
inc
popa
mov
xor
out
or
jns
inc
popa
test
mov
add
out
out
out
mov
mov
mov
(bad)
push
or
rol
(bad)
clc
push
fucomip
out
xor
add
fisubr
out
test
push
ret
cs
mov
pop
jge
sub
imul
sub
leave
or
faddp
fs
fisttp
(bad)
jmp
mov
sbb
sbb
inc
popa
mov
xor
out
or
jns
inc
popa
lea
mov
add
out
out
out
mov
mov
mov
(bad)
push
or
xchg
push
adc
push
fucomip
out
xor
add
xchg
cmp
out
sar
mov
outs
es
xlat
push
cmp
sub
test
cmp
out
or
sub
xlat
push
push
inc
test
jb
xor
cmc
aaa
sub
sbb
out
add
fimul
mov
mov
mov
sbb
xchg
sub
push
fdivr
pop
mov
leave
cmp
scas
or
add
pop
jne
inc
(bad)
out
inc
mov
add
cs
sub
mov
mov
pop
xor
mov
(bad)
ja
mov
pushf
jae
jle
out
sub
cmc
out
sbb
sub
cmp
xor
mov
repnz
jge
inc
(bad)
out
add
fsubr
mov
icebp
std
xor
jp
sbb
and
pop
jge
inc
(bad)
out
or
(bad)
push
dec
xor
xor
cmc
rol
out
cmp
cmp
or
and
out
hlt
inc
or
cmp
sbb
pop
xchg
xchg
cs
jns
ja
out
xor
pop
movs
ds
inc
movs
dec
pop
pop
test
(bad)
xchg
pop
jmp
mov
jno
cmp
jb
xor
or
cli
add
jae
add
xor
lds
jns
ja
out
cmp
pop
add
out
xor
ja
pop
aaa
xchg
cs
(bad)
jg
(bad)
out
or
and
sub
(bad)
out
add
loop
or
pop
test
inc
(bad)
out
or
pop
inc
mov
(bad)
jns
jnp
out
xor
or
pop
fwait
pop
and
adc
and
pop
dec
mov
ds
cs
js
pop
add
xor
(bad)
(bad)
cs
jns
mov
xchg
pop
add
out
cmp
cmp
xor
int
fdiv
xchg
out
sub
test
xor
cs
jns
ja
out
xor
std
or
mov
(bad)
jns
xchg
out
cmp
int
(bad)
out
or
popa
inc
movs
dec
sub
mov
(bad)
(bad)
mov
(bad)
out
or
push
add
or
sub
aas
fcom
(bad)
icebp
sub
mov
lea
fdiv
data16
mov
data16
mov
sub
dec
adc
cs
inc
or
xchg
cs
jnp
adc
nop
mov
popa
imul
pop
inc
mov
(bad)
jns
mov
cli
sub
jp
in
jp
fnstsw
push
mov
push
rol
out
or
(bad)
ds
cs
sub
das
or
cli
add
pop
inc
mov
(bad)
push
or
test
dec
lea
add
test
test
mov
(bad)
out
mov
cmp
or
or
pop
mov
cmp
sub
pop
jp
push
repnz
fbstp
(bad)
out
fisttp
repnz
fbstp
(bad)
out
fisttp
sub
sub
dec
fimul
data16
mov
data16
mov
sbb
movs
sub
aaa
test
cli
push
fsub
jp
mov
out
aad
jmp
push
pop
inc
movs
dec
popa
inc
movs
pop
(bad)
test
cs
ja
push
out
sub
pop
cmp
push
(bad)
jns
mov
cli
sub
js
mov
jmp
xor
out
(bad)
mov
arpl
and
xor
icebp
sub
mov
push
pop
xor
bound
movs
pop
or
out
sbb
xchg
popa
imul
mov
imul
or
cli
or
mov
jp
imul
jae
(bad)
aad
dec
stos
loope
jp
aam
cmc
push
cli
jns
in
cmp
mov
fnstenv
sub
pop
(bad)
xchg
cs
jns
push
jmp
push
jmp
xor
and
cmc
popa
pop
movs
push
in
inc
xor
out
cmp
adc
mov
repz
mov
sbb
cdq
cmp
aad
std
push
out
cmp
ret
sub
cmp
cmp
cs
jnp
jno
cli
sub
stc
add
fdiv
out
pxor
and
out
or
cs
add
fcom
inc
and
pop
out
add
pop
fmul
in
or
(bad)
out
or
cs
ja
push
out
and
popa
xor
mov
js
push
push
arpl
mov
(bad)
out
or
sar
cmc
push
or
push
repnz
inc
adc
mov
popa
cmc
mov
push
add
mov
cmp
test
pop
(bad)
xchg
cs
icebp
inc
mov
pop
(bad)
xchg
cs
push
or
xor
push
push
je
movs
jg
cmc
push
or
push
out
cmp
cmp
dec
fisttp
cdq
jg
mov
data16
mov
popa
inc
movs
cmp
mov
push
fadd
cli
hlt
stos
add
lods
nop
cs
out
out
adc
add
fcom
cmps
(bad)
or
and
or
fs
mov
xchg
imul
dec
lock
cmp
iret
xor
cmc
dec
cmp
aad
fidivr
or
sti
in
sub
xor
xchg
pop
inc
int
mov
jno
aaa
cmp
xchg
cmps
dec
fbstp
data16
mov
data16
mov
fidivr
inc
loope
cmp
rol
jns
dec
loope
cmp
inc
rol
jnp
push
loope
cmp
ja
aad
add
mul
mov
pusha
jg
xchg
(bad)
out
xchg
test
cmp
out
and
imul
(bad)
xchg
cs
jnp
outs
out
push
mov
(bad)
dec
inc
mov
loop
mov
sub
or
fadd
sub
aad
sub
mov
sub
out
sub
stc
cmp
fldz
sub
dec
movs
dec
pop
retf
sbb
or
(bad)
out
xor
fst
jns
push
out
jnp
xor
mov
idiv
into
cs
sub
inc
sub
loopne
sub
arpl
mov
arpl
mov
pop
arpl
mov
stc
sub
add
cs
mov
out
imul
out
add
loopne
and
lds
jae
movs
loop
or
(bad)
out
ds
out
sbb
sub
loop
xchg
(bad)
out
ds
out
sbb
test
cs
out
ds
out
cmp
repz
popf
cmp
aad
loopne
xor
mov
data16
mov
cli
(bad)
(bad)
mov
popa
jge
inc
(bad)
out
add
loope
fidiv
aad
sub
mov
xchg
xchg
fild
test
js
fucomip
out
xor
jns
ss
or
xchg
iret
inc
pop
add
cs
jns
inc
cmp
xchg
cs
dec
je
ret
cwde
in
popf
jmp
xchg
pop
jne
inc
(bad)
out
imul
jg
aad
popa
xchg
fbstp
(bad)
out
add
(bad)
jecxz
out
cmp
jno
cmp
cmp
push
jno
jp
add
clc
push
fucomip
out
cmp
add
xchg
mov
fisub
push
mov
(bad)
das
or
jbe
addr16
test
popf
jmp
clc
sbb
pop
pop
mov
mov
mov
pop
fucomip
out
sbb
jns
push
repnz
(bad)
clc
push
fucomip
out
xor
add
xor
fwait
cli
push
add
loop
(bad)
sub
jmp
push
mov
xchg
mov
(bad)
jbe
aas
popa
inc
xchg
mov
sub
or
or
or
xchg
mov
lds
js
inc
cmp
xchg
cs
dec
xchg
test
js
jecxz
out
adc
imul
out
pop
lahf
xchg
cs
jno
xor
xor
sub
jns
sub
jge
inc
(bad)
out
add
jecxz
in
popa
test
inc
mov
out
or
ins
mov
(bad)
jns
add
clc
push
fucomip
out
cmp
add
xchg
mov
fidiv
or
test
pop
loopne
out
xor
jns
jecxz
out
sub
xchg
xchg
(bad)
inc
add
test
mov
lahf
xchg
cs
fldenv
das
lock
xchg
popa
add
loopne
adc
xchg
cs
jno
xor
xor
imul
out
cmp
jnp
cs
sar
xlat
cmps
cs
out
or
push
clc
sub
inc
rol
jno
inc
xor
jg
mov
data16
mov
sbb
xchg
or
jp
xor
pop
xchg
out
sub
test
(bad)
out
cmc
cmp
lods
test
(bad)
out
or
in
mov
(bad)
out
add
fdiv
or
cli
push
(bad)
mov
adc
mov
cmp
mov
push
bnd
push
imul
imul
out
sub
or
mov
(bad)
and
popa
mov
sub
out
sub
in
mov
add
adc
cs
jmp
mov
out
or
in
out
xor
jns
or
sub
pop
sti
lahf
mov
mov
leave
inc
cmp
xchg
cs
push
xchg
test
lahf
xchg
cs
jnp
gs
js
jecxz
out
cmp
push
or
jle
mov
(bad)
push
push
push
cmp
cmp
in
out
xor
js
jecxz
out
cmp
movs
dec
in
fisubr
fldz
xor
out
sub
xchg
cmp
(bad)
jns
jecxz
out
and
or
jle
mov
(bad)
lods
xchg
cs
out
stos
sub
mov
out
push
cmc
cmp
out
or
test
push
mov
xchg
xchg
mov
(bad)
jbe
addr16
addr16
mov
pusha
ja
inc
(bad)
out
(bad)
mov
add
cmp
jns
inc
popa
cmps
xor
mov
add
out
out
out
movs
push
push
sbb
adc
in
out
cmp
mov
aad
neg
fwait
xchg
popa
stos
sub
test
lahf
xchg
cs
icebp
dec
mov
(bad)
cmp
cmp
or
mov
out
xchg
xchg
cs
out
stos
sub
mov
out
mov
jnp
mov
clc
cmp
in
out
cmp
add
mov
xchg
and
pop
mov
or
popa
aaa
xchg
mov
(bad)
das
or
push
cmp
(bad)
push
lods
std
cmp
imul
out
or
mov
popa
inc
movs
dec
ror
mov
(bad)
push
push
push
cmp
cmp
in
out
xor
js
jecxz
out
cmp
jno
cmp
sar
add
xor
in
out
cmp
add
mov
inc
add
fisub
dec
mov
(bad)
xor
lahf
jmp
mov
(bad)
das
or
push
cmp
(bad)
push
lods
cld
cmp
imul
add
adc
in
out
adc
icebp
sub
mov
add
add
adc
icebp
sub
jmp
sub
jns
jecxz
out
and
or
nop
stc
sub
inc
push
ins
out
test
or
mov
sub
jmp
mov
out
or
in
out
xor
jns
or
sub
pop
sti
lahf
mov
mov
leave
inc
cmp
xchg
cs
push
xchg
test
lahf
xchg
cs
jnp
gs
js
jecxz
out
cmp
push
or
mov
sub
ret
fbld
cmp
ja
inc
(bad)
out
or
pop
call
inc
sub
loope
adc
fistp
or
in
out
xor
jns
or
sub
pop
sti
mov
fisttp
js
inc
cmp
xchg
cs
dec
xchg
test
js
jecxz
out
adc
imul
in
push
adc
adc
in
out
xor
out
cmp
and
popa
lahf
aas
cmp
out
aas
aas
(bad)
out
sbb
push
lods
cmp
push
xchg
popa
jg
cmp
out
or
test
push
mov
xchg
xchg
mov
(bad)
jbe
addr16
addr16
mov
pusha
ja
inc
(bad)
out
(bad)
mov
add
cmp
jns
inc
popa
cmps
xor
mov
add
out
out
out
movs
push
push
sbb
adc
in
out
cmp
mov
aad
neg
call
out
out
mov
add
or
popa
ja
inc
(bad)
out
add
fild
cwde
in
and
push
mov
xchg
xchg
mov
(bad)
jbe
pop
popa
pop
xchg
mov
pusha
ja
inc
(bad)
out
(bad)
mov
add
cmp
leave
inc
popa
lahf
xor
mov
add
out
out
out
movs
push
push
sbb
js
xchg
or
rol
retf
ret
fistp
inc
(bad)
out
add
fnsave
jecxz
out
cmp
je
mov
loop
or
(bad)
out
ds
out
sbb
sub
cmps
xchg
(bad)
out
ds
out
sbb
cmps
mov
(bad)
out
ds
out
cmp
adc
mov
adc
cmp
aad
loopne
xor
aaa
cdq
jg
mov
data16
mov
pop
fisttp
(bad)
in
out
add
inc
fdiv
fldz
cmp
and
imul
adc
repnz
mov
jp
mov
pop
jp
cs
push
or
imul
mov
add
sub
sbb
movs
ins
loopne
int3
push
or
imul
add
ficom
xchg
xchg
mov
(bad)
jbe
aas
popa
aas
xchg
mov
add
or
or
pop
add
mov
pop
js
inc
cmp
xchg
cs
dec
xchg
test
(bad)
mov
lahf
xchg
cs
xlat
ds
out
out
sub
aaa
data16
xchg
cs
icebp
dec
sbb
sub
retf
mov
mov
and
dec
movs
dec
cmp
xor
cs
inc
mov
mov
adc
jecxz
repz
(bad)
jns
ss
int
adc
sbb
in
out
cmp
add
stos
mov
lahf
jns
loopne
out
xor
inc
mov
jmp
outs
pop
aaa
xchg
xchg
(bad)
inc
add
jp
push
out
int
(bad)
jp
push
repnz
or
xchg
xor
push
popa
pop
movs
dec
cmp
sub
cs
mov
xchg
cs
push
mov
xchg
or
popa
and
or
inc
loop
mov
aas
(bad)
out
sbb
or
in
out
sbb
dec
lods
xor
mov
cmp
sbb
in
out
cmp
add
stos
mov
lahf
jns
loopne
out
xor
inc
mov
jmp
outs
pop
aaa
xchg
xchg
(bad)
inc
add
push
or
arpl
push
pop
jg
inc
(bad)
out
imul
out
data16
xchg
cs
icebp
dec
mov
(bad)
cmp
sub
stc
mov
pusha
mov
cmp
mov
pop
mov
out
in
push
cli
jns
jecxz
out
and
xchg
cs
out
out
dec
mov
pop
lods
sub
inc
and
popa
inc
push
das
popa
push
mov
fild
or
in
out
xor
xor
(bad)
out
or
test
inc
popa
xchg
mov
add
out
out
out
mov
push
push
sbb
adc
in
out
cmp
adc
cs
fstp
popa
pop
movs
dec
cmp
arpl
(bad)
out
cmp
ja
inc
(bad)
out
or
aas
fldcw
out
push
ds
jae
cs
jns
retf
push
cmp
inc
mov
(bad)
sbb
movs
ins
fidivr
push
mul
aaa
xchg
icebp
inc
pusha
xchg
inc
(bad)
out
or
jp
inc
popa
inc
mov
jns
loopne
out
xor
mov
or
ja
jns
jecxz
out
sub
xchg
xchg
(bad)
inc
sub
out
lds
jecxz
out
adc
imul
out
mov
dec
mov
(bad)
jns
push
jmp
imul
mov
ja
popa
movs
xor
out
cmp
(bad)
out
sbb
dec
lods
cmp
push
xchg
popa
test
sub
push
mov
xchg
xchg
mov
(bad)
jbe
addr16
addr16
mov
pusha
ja
inc
(bad)
out
(bad)
mov
add
cmp
jns
inc
popa
cmps
xor
mov
add
out
out
out
movs
push
push
sbb
adc
in
out
cmp
mov
call
out
out
mov
add
or
or
xor
out
fimul
(bad)
out
(bad)
data16
mov
fiadd
aad
push
mov
(bad)
cmps
mov
(bad)
out
mov
cmp
mov
xchg
repz
je
arpl
das
(bad)
out
cmp
push
out
sub
fsub
mov
fldpi
retf
jo
das
xlat
out
or
out
cmp
out
stos
hlt
or
out
pop
jb
xor
(bad)
leave
mov
adc
loopne
ins
scas
or
dec
fdiv
data16
mov
data16
mov
popa
cmp
mov
loope
push
sbb
outs
jno
mov
xor
jecxz
out
xor
aaa
mov
xchg
popf
aas
popa
aas
xchg
mov
add
or
or
pop
add
mov
xchg
popa
lahf
push
or
pop
ja
inc
(bad)
out
fcomi
pop
call
leave
ss
aas
xchg
mov
(bad)
jbe
aas
popa
aas
xchg
popa
lahf
xor
mov
add
xchg
xchg
pop
ja
inc
(bad)
out
or
pop
mov
mov
(bad)
dec
inc
mov
popa
xor
mov
pop
jmp
leave
ss
aas
xchg
mov
(bad)
jbe
aas
popa
aas
xchg
mov
add
or
or
pop
add
mov
xchg
popa
lahf
push
or
pop
ja
inc
(bad)
out
fcomi
or
or
fidivr
inc
pusha
xchg
inc
(bad)
out
or
jp
inc
sbb
inc
xor
or
pop
ja
inc
(bad)
out
fcomi
data16
mov
fiadd
push
dec
out
sub
xor
mov
jp
push
jmp
ss
out
and
inc
mov
jmp
inc
popa
mov
or
jp
inc
popa
ins
mov
pop
cmp
or
jmp
jbe
les
pop
add
mov
add
push
je
mov
popa
xor
inc
popa
ins
mov
popa
dec
xchg
jno
cmp
(bad)
jmp
mov
data16
mov
and
leave
mov
sub
mov
push
push
js
push
loop
lds
jns
cwde
push
jl
push
loop
rcr
adc
cmc
sbb
mov
(bad)
out
xor
adc
push
dec
test
mov
fs
mov
ins
out
cmp
in
and
imul
call
mov
arpl
call
mov
pop
(bad)
push
mov
repz
jg
mov
popa
cmp
scas
fsubr
xor
jg
mov
data16
mov
xlat
xchg
(bad)
out
fyl2x
data16
mov
aad
xchg
nop
xlat
(bad)
call
xchg
ja
sub
ds
sti
out
sub
jno
inc
sub
mov
in
sub
mov
into
repnz
imul
add
xlat
sti
cmp
sbb
push
out
dec
clc
(bad)
jle
test
mov
jmp
pop
fsubr
sub
ins
gs
rol
mov
inc
inc
mov
icebp
cmc
add
add
out
cmp
(bad)
rol
jno
cmp
pop
mov
arpl
cs
(bad)
imul
call
cmp
out
xor
in
div
sar
aaa
mov
inc
inc
test
jg
inc
aad
ds
test
dec
jl
push
or
out
sub
dec
fdiv
cdq
out
mov
movs
lock
sub
fldz
sub
dec
inc
mov
adc
mov
(bad)
out
xor
xor
mov
clc
out
xor
scas
inc
test
jmp
ds
jecxz
out
jne
(bad)
(bad)
in
(bad)
out
sub
push
or
sub
fisttp
mov
into
repnz
jno
mov
pop
addr16
std
pop
ret
sbb
out
fnstenv
mov
inc
or
into
sub
xlat
lea
(bad)
out
or
inc
mov
(bad)
out
jmp
inc
inc
mov
icebp
cmc
mov
mov
inc
inc
adc
out
or
lock
movs
add
mov
cmp
sub
xlat
out
sub
mov
pop
fidivr
imul
pop
xor
mov
jmp
pop
jecxz
sub
xor
mov
fs
test
or
ficomp
push
push
mov
je
jae
movs
fstp
xchg
nop
push
(bad)
aas
jmp
aad
icebp
adc
(bad)
jg
fidivr
cmp
cmp
xchg
pop
cld
sub
out
fisttp
mov
dec
sti
mov
sub
ds
out
or
inc
push
fadd
cs
xor
out
repz
mov
repz
lock
popa
test
test
jmp
ds
jecxz
out
jne
(bad)
(bad)
in
(bad)
out
sub
push
or
sub
fistp
movs
fdivrp
das
movs
loop
idiv
pop
fs
iret
clc
inc
or
mov
das
xor
inc
ds
aad
mov
or
or
jne
das
(bad)
out
and
into
repnz
outs
popa
ins
gs
pop
addr16
gs
cwde
(bad)
aam
(bad)
out
fnstenv
adc
sub
js
push
pop
cmp
cs
daa
fimul
dec
dec
and
idiv
inc
clc
push
xchg
xor
dec
sub
aaa
mov
inc
dec
je
lock
jns
lock
or
push
pop
cmp
cs
daa
fimul
dec
add
adc
jno
addr16
imul
mov
out
xchg
ss
mov
iret
mov
repz
out
mov
cs
inc
push
out
in
mov
aad
ins
inc
or
or
loop
mov
aam
sub
mov
into
push
cmp
cs
out
or
jp
cdq
aad
fst
mov
nop
xchg
ja
sub
ds
sti
out
sub
jno
push
sub
mov
adc
idiv
jmp
cs
fsub
(bad)
out
or
inc
imul
sub
(bad)
cmc
adc
inc
daa
fscale
add
mov
retf
add
mov
pop
and
out
sbb
out
fnstenv
xchg
sub
js
push
adc
sub
and
adc
(bad)
idiv
inc
rcl
jae
sub
xchg
arpl
addr16
push
cmp
sbb
mov
jb
aaa
or
inc
mov
sub
test
mov
mov
out
xor
ins
mov
(bad)
jno
inc
(bad)
pop
movs
and
js
fcomp
mov
lea
(bad)
js
cmp
and
ds
mov
dec
je
sub
stc
jns
sub
js
push
adc
rol
push
push
sub
mov
jno
inc
pop
cmp
cs
daa
inc
dec
adc
xor
inc
ds
aad
mov
sub
lock
sub
out
(bad)
or
pop
push
inc
addr16
push
xor
std
add
xlat
out
add
push
out
in
pop
sub
xlat
out
cmp
and
dec
(bad)
out
fyl2x
pop
out
cmp
(bad)
jno
cmovge
mov
cmc
in
addr16
shl
ds
idiv
pop
ins
pop
mov
iret
nop
mov
out
sub
clc
push
xchg
out
cmp
mov
cmp
out
lods
cmps
je
ds
cdq
sub
xchg
lock
mov
shl
test
fs
cs
mov
jae
out
xor
test
or
daa
aam
fld
sub
pop
scas
cmc
pop
in
mov
mov
or
inc
mov
aad
mov
hlt
out
add
mov
mov
call
or
arpl
test
jg
inc
aad
ds
mov
dec
je
je
mov
xchg
iret
test
dec
icebp
or
es
and
xlat
sub
sahf
xlat
leave
inc
(bad)
out
add
out
fst
or
xor
in
xchg
cmp
lock
mov
retf
add
shr
imul
retf
mov
imul
cmp
dec
xlat
push
out
or
ds
sar
aad
int3
mov
ficomp
push
loopne
sub
or
popf
imul
dec
add
in
addr16
sub
fsubr
out
xchg
cmp
lock
imul
bound
cs
inc
push
out
dec
mov
out
popa
cmp
xchg
pop
cld
sub
out
fisttp
out
sub
lahf
mov
std
xlat
(bad)
push
or
aam
ds
hlt
and
xlat
(bad)
fcom
(bad)
(bad)
and
xchg
lock
cmc
fist
arpl
out
xchg
xchg
lock
sub
out
nop
cmc
fistp
arpl
out
xor
sti
sub
mov
jecxz
or
sbb
popa
xor
scas
mov
jmp
pushf
ror
(bad)
and
jecxz
test
mov
add
idiv
ss
xor
js
out
cmp
imul
sbb
push
je
ds
je
out
idiv
xlat
jecxz
(bad)
out
add
out
inc
test
rol
loop
inc
cmp
jge
popa
or
cs
out
or
cmp
or
fidivr
popa
push
jge
inc
jmp
sysexit
dec
fdiv
cwde
test
xchg
movs
sub
daa
inc
aam
sub
out
xor
and
out
sub
mov
jns
cmp
test
jp
cmp
test
(bad)
jns
es
repnz
repz
sub
dec
fisttp
sub
mov
repz
and
es
and
xchg
sub
(bad)
pop
pop
(bad)
out
add
div
inc
xor
add
xor
ins
inc
popa
xor
mov
fild
je
jp
inc
popf
xor
adc
cmp
mov
(bad)
out
sub
xor
mov
aad
and
(bad)
out
sub
jmp
or
cmp
xchg
sub
lahf
mov
mov
loop
cmp
imul
cs
xchg
sub
(bad)
ficomp
add
test
popa
fild
or
test
pop
das
popf
xor
in
cdq
out
nop
mov
mov
(bad)
cmp
gs
mov
xor
mov
fild
mov
out
mov
jmp
cmc
sbb
adc
(bad)
dec
xchg
retf
cmp
or
push
pop
aad
adc
mov
cli
xlat
out
sub
xor
mov
mov
mov
xor
jg
xor
sub
(bad)
out
jg
ds
fidiv
push
jmp
mov
(bad)
out
sub
repnz
or
cs
out
imul
xor
xchg
jns
sub
jns
cli
xor
inc
or
sub
sub
mov
cmp
inc
mov
popf
das
movs
das
(bad)
out
sbb
lock
icebp
inc
popa
xor
sub
loop
icebp
ss
out
jg
out
(bad)
cmp
pop
lea
add
xor
jno
push
(bad)
arpl
loop
ins
sub
out
or
loop
in
popa
pop
mov
das
cs
fisttp
ret
test
lea
sub
lea
pop
mov
pop
in
and
or
push
xor
test
fisubr
aam
idiv
popa
xor
sub
sar
ss
ins
lea
push
mov
into
inc
sbb
mov
and
or
adc
lea
fcmovnbe
cwde
gs
out
or
mov
cdq
mov
ins
sub
cwde
(bad)
pop
adc
scas
push
xor
mov
fdivp
popa
cmp
xor
out
and
out
sub
dec
jae
test
cli
dec
xor
mov
test
ds
ds
and
cmp
cs
out
cmp
test
cs
sbb
cmc
push
arpl
idiv
cli
test
loop
std
loope
out
cmc
inc
lock
(bad)
shr
out
jg
mov
imul
jle
cs
out
xor
mov
out
cmp
cs
out
sub
(bad)
cmc
ds
inc
lea
fisub
out
out
sub
inc
shr
push
cmp
stc
sar
sbb
pop
cmp
call
jg
cli
repnz
mov
jno
xor
jae
das
(bad)
out
jg
out
cmp
lock
movs
lock
push
aad
sub
scas
fisub
xlat
(bad)
mov
pusha
cld
jge
xlat
(bad)
movs
sub
add
push
xor
(bad)
and
cmps
lock
mov
not
out
popa
aaa
fldcw
nop
push
mov
scas
div
mov
and
dec
out
xchg
inc
es
ror
cmp
adc
std
std
xlat
(bad)
push
push
mov
sti
mov
fs
out
jg
dec
mov
mov
adc
clc
std
xlat
(bad)
(bad)
jmp
cld
clc
std
xlat
(bad)
mov
ds
hlt
push
push
pop
daa
sub
(bad)
(bad)
aaa
xor
out
imul
out
mov
or
add
out
aad
ret
mov
inc
or
loop
or
out
ja
fbstp
cmps
movs
lock
rcl
mov
icebp
cmc
push
ja
addr16
jae
mov
aad
push
out
dec
sti
xlat
test
xlat
push
out
dec
repz
sar
xchg
aad
add
xlat
ja
cmp
add
jle
xlat
inc
sub
dec
hlt
add
sub
imul
xchg
test
sti
add
imul
jae
mov
aad
or
(bad)
cmp
sti
or
mov
and
jno
mov
lock
das
dec
hlt
push
sub
inc
sub
cs
in
xchg
shl
nop
xchg
mov
mov
(bad)
jno
cs
popf
jle
(bad)
out
push
cmp
mov
pop
mov
or
jbe
mov
xlat
dec
inc
test
cmp
out
adc
jecxz
arpl
aad
aam
popf
je
sub
(bad)
out
jg
(bad)
cmp
scas
cmc
dec
pop
lods
stc
sub
out
ds
aad
xor
jmp
out
or
cs
cs
ds
sub
out
inc
ds
mov
pop
mov
aad
push
add
out
and
imul
div
outs
push
or
sbb
push
sbb
out
jmp
es
icebp
nop
xlat
(bad)
push
mov
sti
add
mov
fadd
mov
in
sub
repz
jmp
shr
out
push
xchg
aam
cmp
xchg
mov
fisubr
sti
lods
ficomp
mov
inc
dec
fmul
mov
in
sub
jl
add
out
cmp
shr
inc
fisubr
arpl
in
out
add
das
or
push
pop
cmc
cmp
sub
xlat
das
mov
cmp
aas
imul
fsub
mov
repnz
inc
pop
out
mov
xlat
sbb
shl
(bad)
jb
xor
mov
and
inc
jg
add
jle
inc
xor
bound
cs
out
ror
cmp
cld
call
push
mov
fimul
inc
mov
jae
movs
in
mov
mov
sbb
das
out
inc
repnz
lock
ja
addr16
inc
add
fld
xchg
sub
pop
push
out
or
fidivr
cmp
das
and
adc
shr
out
icebp
cmp
out
shr
push
sub
aad
jmp
cwde
(bad)
in
mov
lods
out
div
inc
out
jg
inc
aad
ds
add
jmp
ds
mov
cmp
out
jg
inc
aad
ds
fimul
fsub
in
xchg
or
out
inc
mov
(bad)
out
jmp
lock
mov
mov
lock
sub
out
fcomip
ds
sub
pop
sub
es
mov
xchg
jmp
das
cdq
jp
push
fidiv
mov
in
xlat
inc
adc
dec
cmp
aad
ds
hlt
aam
xlat
(bad)
nop
cs
out
fdiv
ja
addr16
jnp
scas
ja
addr16
jnp
mov
mov
inc
popa
inc
movs
xor
aas
lea
(bad)
pusha
mov
or
add
out
into
sub
movs
loop
ret
jp
mov
jmp
cmps
loop
jo
popa
mov
sub
jnp
jb
out
xor
in
xor
jge
pop
aad
cs
jns
pop
arpl
mov
sub
or
sar
es
inc
jne
cwde
lock
repz
div
inc
fstp
fisub
mov
pmuludq
sub
jp
add
jl
xor
in
push
xor
test
inc
rcl
jns
stos
sub
arpl
xor
ret
mov
mov
test
mov
fld
fidivr
xor
cmp
xor
or
dec
test
fidivr
lock
retf
div
inc
fstp
xlat
ja
and
jae
das
(bad)
out
stos
mov
xchg
jmp
and
or
icebp
or
cmps
js
sub
(bad)
popa
lds
loop
repnz
pusha
mov
dec
or
das
(bad)
out
add
lods
adc
out
in
int
fisub
mov
ror
jp
lods
sub
int
mov
cs
in
int
fisub
mov
fidivr
cmp
mov
fidivr
cmp
test
fidivr
cmp
repnz
arpl
mov
out
cmp
repz
xor
mov
fidiv
ss
cmp
cmc
mov
xor
jmp
jle
pop
cmp
lods
in
cmc
cmp
out
sub
jp
add
jp
fild
cmp
(bad)
out
add
sbb
stos
scas
push
inc
push
xchg
out
sub
ret
and
mov
nop
out
sub
ret
pop
cmps
inc
das
(bad)
out
mov
popa
xor
mov
sar
push
aad
(bad)
mov
out
sub
dec
addr16
jae
ds
retf
sub
mov
and
das
out
bound
fnstenv
(bad)
jmp
ds
shr
inc
shr
mov
aad
ds
out
sub
ret
mul
(bad)
mov
inc
addr16
jns
ds
xchg
or
(bad)
out
sub
dec
addr16
jns
ds
(bad)
iret
ss
ds
aaa
xchg
scas
dec
xor
xor
nop
loope
xlat
inc
cmps
fsubrp
not
inc
sti
jg
ja
addr16
in
icebp
ds
out
jg
inc
aad
ds
test
(bad)
and
jmp
addr16
jnp
scas
xchg
iret
cmp
(bad)
stos
mul
xchg
sbb
jl
inc
daa
aas
imul
in
mov
fisttp
xor
test
ds
ds
addr16
jns
ss
sub
adc
(bad)
and
xor
dec
repnz
mov
add
xchg
mov
push
addr16
inc
xlat
mov
adc
je
ja
sub
cwde
mov
fisttp
jl
mov
xor
jb
dec
push
std
add
aad
outs
mov
out
mov
pop
mov
mov
out
mov
test
js
es
addr16
jns
push
js
ss
or
fidivr
push
and
movs
sub
mov
xchg
imul
pusha
push
cmps
popa
leave
mov
mov
popa
sub
movs
xchg
adc
test
jno
ss
arpl
mov
fldcw
xor
not
mov
mov
(bad)
arpl
sbb
mov
jns
mov
js
ss
add
push
mov
sub
jp
ds
lock
jno
sub
mov
ja
mov
or
pop
jmp
cmc
inc
popa
jnp
repz
out
cmp
out
sub
mov
inc
das
(bad)
out
or
stc
arpl
cmp
cmp
in
jns
mov
out
sub
jb
xor
movs
addr16
cmc
pop
popa
inc
jge
mov
repz
jnp
xor
lock
cmp
mov
movs
mov
(bad)
out
jmp
mov
enter
into
and
jp
popa
stc
stos
jnp
jp
mov
fidivr
sub
adc
jb
das
(bad)
out
or
sub
ss
push
add
imul
jmp
popa
mov
jge
push
daa
test
stc
dec
or
dec
or
(bad)
cmc
popaw
dec
mov
shl
jle
stos
sub
popa
cmp
mov
bound
das
(bad)
out
ja
test
ins
movs
loope
fidiv
popa
cmp
push
and
imul
dec
mov
fidiv
es
ja
xor
test
fdivrp
add
(bad)
out
cmp
repz
xor
mov
fidiv
ss
cmp
xchg
pusha
cmp
mov
cli
std
push
aam
add
repnz
cmp
jp
add
clc
mov
scas
popa
mov
jge
push
ja
sbb
cli
xor
jnp
push
xchg
out
sub
ret
push
repz
cmp
arpl
sub
cmp
mov
arpl
rcr
test
(bad)
repnz
mov
pop
cmp
mov
dec
lock
or
dec
add
shr
mov
fnsave
mov
jge
fidivr
xor
nop
in
xlat
dec
cmp
aad
ds
mov
adc
or
iret
cmp
jmp
sub
out
xchg
cmp
lock
imul
(bad)
and
cmp
cmp
cld
call
repnz
out
sbb
and
adc
dec
ss
imul
out
mov
cs
xlat
sub
out
dec
mov
aad
xchg
test
and
adc
(bad)
jg
fidivr
cmp
scas
ins
inc
pop
cmp
or
mov
inc
aaa
aad
inc
mov
(bad)
mov
fiadd
test
xchg
mov
pop
scas
std
xor
jp
cdq
adc
out
or
out
xor
ja
xor
mov
jecxz
sub
inc
push
in
stc
cmp
out
nop
cs
push
sub
out
inc
movs
fidiv
cs
jnp
das
inc
out
sub
mov
ja
out
add
ret
cs
or
in
xor
jmp
ds
out
or
arpl
push
aad
or
mov
pop
in
sbb
out
xor
inc
push
gs
mov
loop
js
(bad)
out
jmp
xor
ja
ja
xor
pop
jae
ja
int
out
sub
xor
inc
mov
jp
ss
cmp
clc
xor
jp
add
out
push
test
neg
fisttp
je
inc
xlat
test
lea
add
mov
(bad)
mov
ds
mov
sub
jnp
jb
out
xor
cmp
xor
jge
push
sub
xor
nop
mov
int3
mov
cmp
(bad)
icebp
pop
push
dec
je
out
cmp
aaa
add
adc
cmc
jmp
dec
test
div
jbe
call
sub
popa
cmp
mov
test
in
mov
test
popa
jmp
or
into
jl
das
(bad)
push
push
jb
inc
das
(bad)
out
jle
dec
cmc
or
fidiv
popa
mov
fidivr
xor
mov
out
dec
xor
jmp
lods
shr
(bad)
mov
popa
ins
jge
and
inc
fidivr
add
adc
dec
or
retf
sub
xchg
mov
fidivr
ds
dec
mov
fidiv
ss
dec
test
div
mov
mov
pop
out
mov
lock
cmp
lods
jmp
out
sub
jp
add
jp
fild
push
jae
xor
das
(bad)
out
add
push
add
push
xchg
out
sub
ret
and
mov
call
jmp
test
inc
lea
or
or
pop
cmp
test
jnp
das
pop
xor
sbb
jns
sbb
scas
push
xlat
out
cmp
jns
cmp
arpl
jp
jl
popa
sar
ds
dec
(bad)
out
aam
into
mov
jmp
sub
adc
lock
mov
out
sub
fs
aam
into
mov
div
inc
fistp
fisub
mov
pmuludq
sub
jp
add
jl
xor
in
push
xor
sub
arpl
inc
rcl
jge
stos
sub
arpl
xchg
int
mov
cs
in
mov
test
jle
jns
xor
test
fidiv
ss
fs
xor
or
jb
outs
dec
repnz
imul
sti
jno
push
repz
ja
xor
test
fisubr
int3
ss
dec
or
repnz
aam
or
repnz
push
ins
nop
cs
std
aas
das
(bad)
out
add
and
mov
xor
jae
out
sub
jp
sbb
outs
(bad)
cmp
and
inc
das
(bad)
out
add
lds
fbld
mov
(bad)
out
or
cs
outs
push
sbb
dec
je
ja
mov
pop
jge
xlat
inc
loopne
xor
sbb
sub
xor
out
sahf
xchg
test
cs
out
jg
inc
aad
ds
mov
dec
pop
pop
in
mov
out
sub
sbb
jle
(bad)
jmp
push
sub
aad
or
pop
out
nop
mov
out
sub
repz
(bad)
out
adc
inc
add
nop
mov
out
sub
lahf
sbb
movs
hlt
jno
fidiv
nop
cs
hlt
and
jb
nop
mov
mov
cmc
dec
jns
sbb
mov
(bad)
xor
jne
ja
loop
lock
mov
arpl
cs
out
or
cs
xor
or
ja
ds
xor
jb
(bad)
out
mov
pop
in
xchg
cmp
cmps
cmp
mov
ja
xor
mov
(bad)
push
add
push
(bad)
test
sbb
xor
out
dec
push
jle
das
(bad)
out
jg
sbb
test
(bad)
out
sub
fstp
pushf
fisubr
cs
out
xlat
sub
out
jg
jb
nop
mov
aad
icebp
adc
(bad)
jg
fidivr
cmp
scas
loopne
xor
test
movs
ss
add
(bad)
pop
sub
(bad)
push
jmp
(bad)
cmc
ss
xor
cmp
in
xor
xlat
(bad)
hlt
dec
popa
xor
jmp
pop
test
mov
repz
inc
aad
ds
test
(bad)
fdivp
pop
cld
inc
retf
xlat
(bad)
jg
cdq
inc
or
daa
inc
xlat
mov
out
add
out
nop
mov
out
sub
push
jge
arpl
cmp
(bad)
sub
cdq
push
sub
push
cmp
jmp
shr
out
inc
mov
aad
or
xlat
dec
jne
jae
mov
fnstenv
cmp
xor
cs
hlt
cmp
cmp
fidiv
lods
mov
sub
jns
mov
pop
push
jmp
arpl
mov
movs
loop
add
fisubr
das
(bad)
sub
out
and
out
or
(bad)
hlt
cmp
mov
in
shr
xor
test
xchg
dec
push
push
xor
xor
imul
jp
jmp
push
aad
ds
out
mov
mov
popa
arpl
scas
mov
jo
xchg
js
pop
cwde
dec
inc
daa
fidivr
fidiv
or
cli
repnz
imul
cmp
dec
inc
popa
cmp
das
out
mov
das
(bad)
out
inc
outs
fcmovu
sub
fstp
xor
jno
mov
dec
imul
ds
dec
inc
test
sar
inc
or
cmps
stos
cmp
jp
ds
jmp
sub
arpl
dec
(bad)
out
or
add
jns
xchg
iret
lea
cwde
sub
sbb
hlt
push
fisubr
dec
stos
lock
loopne
dec
add
jg
xlat
cmp
(bad)
out
add
loop
inc
movs
dec
jp
sub
test
out
push
sub
(bad)
sub
sbb
repz
or
cmp
or
jns
and
hlt
popa
popa
idiv
(bad)
fisub
es
imul
mov
jno
cmp
not
test
(bad)
out
add
fisubr
(bad)
es
shr
mov
xchg
lock
mov
aad
or
cmp
or
test
fbstp
nop
mov
aad
xchg
loop
shr
add
(bad)
out
sbb
jp
cmp
jge
popa
loop
repnz
add
out
scas
jg
xchg
aad
xor
add
fs
mov
jmp
stos
loope
inc
aaa
aad
jge
push
out
cmc
sbb
fisubr
nop
cs
xlat
mov
out
inc
push
aas
cmp
mov
mov
out
sub
out
jg
into
inc
imul
sub
add
loop
push
mov
sbb
or
out
sub
jmp
pop
(bad)
out
xor
repz
(bad)
out
test
out
xor
fs
mov
out
or
out
sub
lea
pop
mov
sbb
sub
xchg
adc
sbb
jbe
ss
dec
mov
pop
(bad)
xor
xchg
arpl
das
(bad)
out
or
shr
xor
or
ficom
or
fild
mov
test
jo
das
(bad)
out
imul
scas
loopne
xor
sar
out
xlat
mov
(bad)
sbb
(bad)
out
sub
(bad)
sub
or
add
hlt
xor
fcmovu
mov
pop
test
pop
movs
out
sub
in
ins
(bad)
bound
ds
hlt
jno
pop
add
das
arpl
mov
and
and
(bad)
sub
or
dec
sti
mov
enter
mov
shl
in
repnz
mov
fisub
mov
dec
ins
push
xor
sub
ss
or
inc
lock
push
arpl
mov
fisub
pop
enter
inc
repz
push
test
arpl
mov
ja
mov
imul
adc
lea
sti
repnz
ins
fucom
movs
inc
xor
fisubr
mov
fisub
pop
cwde
js
mov
repz
push
test
arpl
mov
sbb
jmp
in
popa
xor
mov
xor
scas
loopne
xor
sar
xor
(bad)
cmp
push
test
repnz
xchg
out
into
sti
mov
cmc
out
fs
mov
pop
icebp
cmp
ss
out
sbb
push
arpl
jnp
daa
(bad)
out
sub
(bad)
mov
dec
stc
add
arpl
dec
xor
je
jbe
mov
add
jno
std
jnp
daa
(bad)
out
sub
xchg
popa
xchg
js
data16
outs
push
sub
jb
(bad)
mov
add
sub
out
sub
xor
mov
dec
repnz
mov
es
sub
out
push
cs
cmp
cs
cmp
cs
cmp
lea
xor
das
out
pop
jmp
dec
xor
push
in
popf
jmp
(bad)
hlt
push
push
in
(bad)
jmp
(bad)
hlt
dec
push
in
jge
xlat
(bad)
hlt
inc
push
in
pop
jmp
(bad)
hlt
cmp
out
pop
cs
mov
repz
push
mov
shr
and
ds
and
ds
and
ds
loopne
cdq
inc
or
popa
xor
test
push
pop
xchg
lock
arpl
push
pop
xchg
lock
mov
mov
jp
mov
div
inc
add
shr
mov
imul
adc
fld
push
aas
cmp
sub
pop
cs
jmp
mov
inc
loopne
or
xchg
jbe
lock
mov
mov
mov
aad
push
pop
xchg
lock
sub
out
inc
sti
sub
mov
xor
mov
not
test
sti
or
shl
out
sub
jae
das
(bad)
out
or
(bad)
ds
xor
mov
sar
cmp
mov
arpl
div
dec
xor
and
sub
xor
fidivr
loope
cmc
popa
dec
sub
fiadd
mov
repz
push
push
mov
mov
popa
xor
aaa
mov
jp
mov
sub
mov
dec
jp
mov
(bad)
out
sbb
cmps
sub
out
imul
ds
out
aam
sub
sub
mov
mov
dec
loopne
xor
mov
test
popa
xor
jle
sbb
cs
inc
aaa
xor
push
xor
jae
mov
(bad)
push
mov
dec
cmc
xor
fdiv
or
dec
sti
mov
inc
movs
cmp
movs
xor
cmc
jne
scas
or
not
mov
dec
sbb
or
test
fnsave
dec
lock
sub
mov
(bad)
icebp
inc
mov
xchg
fadd
mov
arpl
mov
fimul
mov
mov
mov
ins
xchg
idiv
popa
cmp
mov
popa
rol
out
mov
lock
mov
cs
out
cmc
inc
xchg
fadd
sub
pusha
stos
and
movs
ret
outs
into
cmp
(bad)
out
xor
iret
test
sahf
out
movs
mov
int
ds
push
xlat
mov
nop
mov
mov
nop
mov
ret
ds
cmp
pop
test
xlat
jbe
das
pusha
xor
or
jno
xor
test
leave
xchg
adc
pusha
das
out
retf
mov
or
scas
push
pop
xor
jno
aaa
dec
xchg
je
aad
push
(bad)
mov
nop
mov
pop
test
mov
div
mov
imul
cs
cmp
dec
into
cmp
cmp
cmp
sub
cmp
popa
xor
adc
adc
popa
xor
pop
pop
xor
pop
popa
xor
sbb
adc
popa
xor
pop
pop
xor
pop
popa
xor
and
adc
popa
xor
daa
pop
xor
daa
popa
xor
sub
adc
arpl
or
xor
bnd
cli
sbb
(bad)
dec
cs
cmp
xchg
into
cmp
popa
xor
mov
cmc
or
popa
xor
mov
cmc
or
pusha
xor
or
loopne
cdq
jl
cs
cmc
or
pusha
xor
or
jbe
xor
mov
arpl
sub
mov
cs
out
cmc
push
xchg
fadd
sub
pusha
mov
leave
xchg
jge
cli
xor
int
adc
popa
das
out
retf
mov
xor
out
xor
iret
test
out
movs
mov
iret
cmp
mov
nop
mov
ds
cmp
pusha
xor
enter
push
and
movs
jle
jnp
adc
bound
out
retf
xor
enter
sub
icebp
or
jno
xor
xor
loop
sub
adc
pop
mov
nop
mov
cmps
ja
xor
xor
scas
push
pop
xor
jno
aaa
in
fld
jnp
adc
bound
out
retf
iret
cmp
retf
ds
cmp
loop
cmp
std
iret
cmp
pop
xor
dec
popa
xor
inc
pop
xor
inc
popa
xor
inc
pop
xor
inc
popa
xor
aas
pop
xor
aas
popa
xor
cmp
adc
popa
xor
aaa
pop
xor
aaa
popa
xor
xor
adc
arpl
or
xor
bnd
cli
xor
push
rol
ds
ds
xor
mov
xor
or
loopne
cdq
jl
cs
xor
or
jbe
xor
mov
xor
or
jbe
xor
xor
dec
loopne
cdq
push
sub
(bad)
out
adc
sbb
test
add
out
retf
xchg
cmp
nop
or
out
xor
push
cmp
dec
jno
sbb
pop
movs
into
retf
into
es
jno
xor
pop
je
retf
sahf
out
sub
(bad)
div
inc
lock
cdq
and
cdq
push
dec
xchg
xlat
(bad)
jg
repnz
scas
cmc
inc
ds
jecxz
out
add
ds
scas
cmc
xor
jg
cdq
fcomp
cs
xlat
mov
xchg
cmc
rcl
mov
sub
dec
sbb
mov
(bad)
aas
xor
out
(bad)
cmp
fidivr
imul
ficom
cmp
lods
cmp
repz
ret
or
lods
cmp
cmc
or
fdivr
mov
dec
loop
icebp
popa
xor
in
xlat
dec
aaa
pop
mov
cmc
ss
aaa
sub
mul
pusha
test
mov
jecxz
jp
dec
test
outs
rcr
neg
outs
mov
ds
lock
ret
ja
mov
cli
repnz
das
mov
dec
xchg
(bad)
pop
pcmpeqb
cwde
xlat
inc
inc
bound
inc
shl
dec
push
dec
arpl
jg
cmps
mov
(bad)
jns
cmp
dec
or
into
js
mov
fidiv
rcl
lahf
push
sub
das
jp
ds
test
ret
je
inc
sar
sbb
sar
out
pop
dec
cli
(bad)
les
out
or
jp
cmp
cmp
add
(bad)
sbb
ret
dec
mov
(bad)
pop
lock
and
je
pop
cmp
lea
fucomip
sub
xor
mov
pop
fcomip
cdq
inc
or
sub
pop
xor
xlat
mov
push
div
dec
or
pop
out
and
adc
nop
ret
inc
jg
sub
inc
fidiv
dec
cmc
inc
add
cmovl
das
arpl
xor
xchg
aas
xor
jbe
popa
lahf
daa
fiadd
(bad)
jecxz
out
adc
fnstenv
imul
xor
fld
pushf
lock
push
pop
cmc
push
dec
test
hlt
ja
pushf
lock
outs
pop
jmp
cmp
cmp
sar
cld
aas
popa
mov
cmp
js
(bad)
out
or
outs
out
mov
popa
mov
mov
dec
inc
test
add
(bad)
jnp
push
sub
push
je
aas
or
fidivr
ror
(bad)
retf
popf
push
mov
jns
arpl
jg
xor
xor
jno
in
inc
xor
sti
rcl
pusha
sbb
jno
(bad)
xlat
sub
(bad)
out
cmp
dec
dec
repnz
sub
ds
dec
mov
push
ins
xchg
cs
or
lahf
jb
pop
in
inc
xor
mov
pop
push
dec
sub
sub
xchg
fstp
push
stos
xlat
jns
xor
add
inc
lock
push
adc
mov
pop
das
ss
xor
out
lods
loop
(bad)
jb
lock
push
std
out
sub
xchg
aas
xor
inc
or
popa
test
je
lods
add
inc
(bad)
bound
and
push
repnz
xlat
jp
(bad)
out
jg
loop
mov
mov
jb
inc
xor
dec
inc
test
add
inc
mov
arpl
jg
xor
jg
int3
or
add
cmp
jnp
sub
(bad)
sbb
ret
lds
popa
out
je
aas
aam
mov
jns
and
popf
jbe
fist
sub
mov
clc
dec
stc
or
sbb
bswap
sub
xor
cdq
xlat
ds
dec
sti
push
mov
jmp
arpl
cdq
xlat
and
cmp
dec
fisttp
ret
cmp
mov
inc
mov
cmp
xchg
sub
loop
div
mov
jb
cmp
mov
movs
out
in
test
lea
aad
sbb
in
test
xchg
sub
(bad)
sub
out
add
out
inc
xchg
movs
cmp
cmc
dec
sub
cmc
push
loop
imul
es
test
(bad)
out
add
out
loopne
sub
mov
mov
cs
outs
out
(bad)
inc
xlat
mov
sub
jmp
out
pop
dec
dec
ds
ror
ss
lods
fisub
pop
mov
(bad)
aas
xor
out
(bad)
cmp
fidivr
imul
das
ficom
xor
std
ss
pusha
repz
and
push
je
inc
rcl
sti
clc
sub
dec
rcl
fdivr
sub
movs
(bad)
das
sbb
imul
call
in
lock
jle
int
cs
inc
ins
sbb
pop
enter
outs
out
(bad)
outs
out
(bad)
outs
out
(bad)
outs
out
(bad)
outs
out
(bad)
outs
out
(bad)
and
mov
ror
mov
xor
xor
push
mov
je
sub
in
xlat
inc
repnz
repz
sbb
dec
ins
ds
cld
sub
xlat
dec
outs
pop
iret
test
sbb
xor
scas
arpl
(bad)
(bad)
pop
xor
sbb
jb
jge
sub
stos
mov
dec
inc
add
pop
arpl
gs
je
sbb
das
or
lods
scas
push
icebp
mov
sbb
cmc
push
aad
push
mov
mov
sub
loope
push
pop
jmp
dec
stc
add
dec
arpl
cmp
sbb
ins
xor
and
add
out
sub
ins
jae
pop
lea
pop
xor
mov
repz
shr
xor
scas
cmp
sub
sub
push
arpl
sbb
mov
sub
jns
cmp
movs
mov
movs
(bad)
sub
dec
pop
add
cmp
mov
push
cmp
sbb
rcl
mov
sub
fimul
rcl
div
(bad)
out
fnstenv
sysenter
popa
mov
in
pop
ss
out
add
fsubr
cmp
jno
xchg
in
lods
xor
out
add
(bad)
cmp
jno
xchg
push
daa
add
aas
arpl
sub
ins
jae
popa
ins
jge
pop
out
xchg
(bad)
xlat
mov
xchg
xor
ficomp
pop
jmp
(bad)
mov
pop
xlat
xlat
sti
xor
out
or
out
xor
mov
in
in
sub
hlt
add
add
push
idiv
retf
sub
out
or
das
js
sbb
repnz
bound
das
(bad)
out
(bad)
xor
xlat
out
xor
out
(bad)
cmp
rcl
cmp
dec
ins
cmp
aas
xor
js
xchg
test
sbb
cmp
mov
pop
or
fcom
inc
test
xor
ins
jmp
cmc
xchg
popa
xor
cs
push
out
dec
dec
xor
jl
out
cmp
dec
xor
sbb
mov
das
push
sti
jmp
out
fld
xchg
lock
mov
fidiv
mov
aad
jne
xchg
arpl
dec
sbb
(bad)
sub
out
or
das
js
sbb
stos
add
mov
out
sub
jmp
in
add
(bad)
out
or
into
and
cmc
movs
pushf
cmc
in
aad
jge
mov
jns
mov
scas
mov
fcomi
xor
(bad)
sbb
jno
pop
dec
or
into
and
div
div
jne
in
(bad)
sub
out
or
das
js
sbb
and
xlat
inc
cmp
(bad)
sub
xor
jb
xor
cmc
inc
popa
xor
cs
push
out
dec
idiv
mov
stos
cmp
push
dec
cmc
sub
ins
gs
das
dec
nop
mov
hlt
sub
ins
jae
in
into
xor
out
jg
mov
je
sub
out
sar
dec
ret
leave
jle
add
in
xlat
inc
repz
stos
xor
out
mov
sub
mov
sub
outs
(bad)
sub
ins
test
sbb
sub
lods
cmp
cli
sub
mov
icebp
sub
xlat
test
(bad)
ss
cmp
(bad)
jno
xor
jb
sub
out
add
fldenv
cmp
ret
outs
fucomi
sub
add
repz
xor
mov
(bad)
sub
mov
sbb
jns
cmp
fistp
(bad)
jns
mov
(bad)
out
xor
cmp
movs
loop
dec
(bad)
bound
sbb
in
div
aad
jge
ds
sub
(bad)
fidiv
push
inc
sub
rcl
iret
xor
out
or
das
outs
jl
pop
dec
ins
mov
dec
sbb
xlat
out
sub
imul
popf
xor
xchg
xor
out
jg
fsubrp
into
sub
xlat
mov
xchg
fcom
shl
sub
mov
fucomi
add
pop
stc
sbb
ins
test
sbb
sub
lods
cmp
cmp
cs
femms
je
pop
cmp
jb
cmp
inc
stos
dec
std
add
fs
xor
inc
je
(bad)
xor
dec
mov
xor
xor
ds
call
mov
lock
icebp
pusha
sar
test
ss
add
(bad)
mov
mov
xor
xchg
xlat
test
mov
neg
popa
test
xor
jmp
add
frstor
push
adc
xchg
fiadd
ins
retf
cmp
push
test
fidivr
add
cmp
xchg
fs
mov
(bad)
add
bound
jl
je
ds
mov
sub
out
add
aad
or
(bad)
mov
mov
fidivr
mov
repnz
in
and
sbb
mov
outs
(bad)
and
arpl
scas
push
fld
ficom
nop
in
in
outs
xlat
outs
cmc
cmp
xor
xchg
inc
or
mov
xchg
lock
mov
sbb
sub
pop
mov
xchg
pop
cmc
(bad)
je
repnz
mov
out
(bad)
(bad)
mov
out
into
sub
out
add
jb
xor
out
add
icebp
sub
xor
mov
mov
cmp
(bad)
outs
(bad)
sbb
jns
add
out
imul
imul
fsubr
xor
loop
mov
add
sbb
sbb
jno
pop
dec
adc
mov
iret
and
dec
idiv
rcl
fwait
xor
out
fnstcw
pop
ins
push
das
in
nop
das
(bad)
out
add
out
sub
in
stc
mov
xchg
lock
das
push
(bad)
call
cmp
(bad)
sub
xor
adc
das
(bad)
out
add
das
(bad)
out
or
(bad)
or
fst
push
sbb
push
pop
inc
pop
pop
push
icebp
sub
(bad)
fidiv
pop
sub
in
xlat
inc
cmp
(bad)
sub
xor
jb
xor
cmc
mov
lock
push
inc
or
scas
jp
or
fst
(bad)
pop
sub
inc
stc
jg
mov
test
mov
push
pop
inc
pop
cs
push
jb
mov
or
popa
das
dec
hlt
jg
retf
sub
rcl
mov
(bad)
out
or
das
js
sbb
out
div
aad
jge
mov
inc
fisubr
pop
retf
sub
popa
cmp
es
jb
das
pop
xor
es
js
or
outs
(bad)
pop
(bad)
std
add
mov
addr16
ins
pop
in
icebp
mov
xchg
lock
das
push
sti
jmp
out
fld
xchg
lock
mov
fidiv
mov
dec
stc
add
push
ins
in
out
mov
sub
mov
(bad)
aas
xor
out
(bad)
cmp
(bad)
inc
imul
sub
push
push
out
sub
scas
cmc
sub
sub
jns
mov
ins
cs
add
mov
or
xor
cmp
mov
aad
jge
lock
(bad)
fidiv
aad
sub
idiv
rol
mov
out
add
bound
jne
repz
out
(bad)
mov
out
sub
ins
jae
dec
sbb
(bad)
(bad)
bound
jl
js
mov
fcmovu
xchg
scas
push
loop
mov
pop
daa
ins
xor
mov
je
jns
cmp
xor
adc
out
cmp
xor
icebp
pop
dec
ins
mov
popa
cld
sub
xlat
dec
outs
xlat
outs
cmc
inc
aad
jge
mov
inc
nop
in
xor
neg
lea
pop
ins
ins
cs
inc
ins
sti
arpl
mov
xlat
pop
div
fisttp
xor
sub
sub
pop
and
ins
sbb
in
into
sub
out
add
jmp
jle
ins
sub
sub
out
xor
out
idiv
popa
xor
mov
mov
(bad)
ss
mov
sbb
jns
cli
xor
jb
into
xchg
lock
das
sub
xchg
mov
fiadd
repnz
add
adc
ds
repz
repz
adc
popa
mov
icebp
popa
inc
movs
xor
cmp
cmp
loopne
rcl
pop
adc
add
cli
bnd
in
cmc
push
fsubrp
cmc
push
(bad)
into
push
(bad)
out
fld
cli
not
sub
(bad)
aas
cs
or
sub
out
fnstenv
popa
mov
mov
mov
dec
sti
popa
cmp
cs
out
hlt
inc
pusha
lock
repnz
arpl
(bad)
out
sub
lock
aam
push
cmps
jb
or
sub
popa
xor
xchg
arpl
xlat
(bad)
out
jg
dec
add
das
(bad)
out
jg
fcomp
dec
mov
cli
repnz
out
cdq
jl
sub
cmp
mov
cli
repnz
out
cdq
jl
sub
movs
xor
mov
test
xlat
mov
div
adc
sub
mov
(bad)
jns
ss
das
test
out
hlt
popf
pop
ins
popf
cs
pop
jmp
sub
test
lea
repnz
sub
mov
sbb
(bad)
cmp
(bad)
hlt
fwait
mov
lods
addr16
add
push
popa
aaa
popf
mov
dec
or
in
adc
sub
repnz
and
lea
rol
fldenv
movs
repnz
not
out
test
xchg
sub
loopne
sub
mov
cwde
xlat
inc
loopne
xor
ins
inc
popa
xor
scas
cmp
cmp
push
test
xor
push
sub
hlt
fwait
mov
inc
dec
fild
add
mov
inc
inc
dec
dec
add
repnz
cmc
test
jno
call
adc
test
(bad)
test
xlat
inc
or
(bad)
sbb
(bad)
fcom
fnstenv
mov
daa
lahf
cmp
(bad)
jno
fldenv
addr16
add
cmp
popf
cs
hlt
push
addr16
std
add
mov
inc
cs
daa
inc
jae
das
(bad)
out
or
jl
sub
inc
and
push
cs
inc
inc
popa
(bad)
or
shr
(bad)
push
in
or
(bad)
out
mov
test
sbb
or
les
pop
scas
or
in
sbb
or
loop
stc
xor
add
lods
cmc
in
test
(bad)
mov
repz
inc
movs
lock
into
es
mov
addr16
add
aad
jne
sbb
nop
mov
jecxz
lods
cwde
fisub
movs
cli
in
test
mov
movs
out
in
test
xchg
sub
loop
sub
mov
mov
shl
inc
mov
outs
dec
bound
mov
das
dec
fisttp
repnz
cmc
dec
aad
movs
sub
(bad)
out
test
xchg
sub
loop
imul
call
cs
inc
or
daa
inc
xlat
test
jno
xchg
(bad)
bound
movs
imul
test
xchg
sub
loop
div
mov
jb
dec
pop
scas
mul
sbb
sar
aad
mov
outs
cmps
out
xor
xor
push
out
jge
sub
test
popa
cmp
sub
aaa
jne
lahf
arpl
mov
xchg
fild
dec
sub
cmp
add
cmp
mov
imul
sub
mov
sub
jmp
test
jns
xor
cmc
js
mov
mov
out
iret
xor
mov
ds
mov
jg
xlat
and
out
fnstenv
int3
cmc
and
pop
or
cli
add
jle
hlt
xor
test
(bad)
mov
dec
repz
shl
das
cs
fcomip
sub
cdq
aad
popa
xchg
xlat
(bad)
call
xchg
ja
sub
ds
sti
out
sub
jno
cmp
inc
fdiv
fidivr
ss
fs
jmp
xor
test
(bad)
out
add
jns
push
fidiv
mov
(bad)
out
sar
pop
test
(bad)
jno
sub
ficomp
pop
(bad)
out
add
cmp
cs
ins
xchg
mov
mov
and
dec
shr
bound
mov
out
sub
dec
fisttp
cli
repnz
push
daa
in
inc
iret
cmc
xor
scas
inc
sbb
hlt
sub
jp
mov
jno
test
(bad)
jg
test
dec
imul
xlat
out
xor
out
jg
fisub
test
bnd
add
lock
aad
or
cli
in
mov
dec
pop
and
cmp
out
sub
idiv
loop
test
xchg
test
mov
jmp
mov
mov
arpl
cli
aad
loopne
xor
popa
fucomi
sub
out
jne
(bad)
(bad)
in
(bad)
out
sub
push
or
sub
fistp
xchg
mov
dec
push
mov
retf
cmp
mov
jns
call
sub
das
icebp
mov
iret
imul
test
xor
out
or
leave
sahf
pop
push
jge
popf
xor
xor
out
sub
inc
and
xor
jb
sub
jno
sub
xlat
mov
je
jp
push
cmp
cs
out
or
fs
pop
inc
out
sub
mov
xchg
mov
pop
cmp
sub
dec
mov
sar
ss
xor
mov
fldz
cmp
xlat
adc
(bad)
out
or
leave
sahf
push
cs
inc
iret
not
outs
xchg
xor
add
out
arpl
mov
(bad)
bound
cs
imul
das
mov
jae
repnz
push
daa
in
inc
iret
test
xchg
xor
add
out
arpl
mov
cdq
and
sub
cdq
aad
mov
mov
nop
xchg
ja
sub
ds
sti
out
sub
jno
cmp
inc
fdiv
out
ret
scas
nop
mov
lock
mov
in
das
(bad)
out
or
jae
ds
dec
sub
jns
cmp
xchg
cmp
jge
int3
lock
inc
lock
out
(bad)
les
out
fld
push
lock
lock
push
and
sub
in
lahf
das
(bad)
out
or
ja
mov
fidivr
rcl
ins
lock
dec
or
mov
jns
inc
int3
cmc
and
out
(bad)
js
(bad)
out
fld
mov
lock
push
xlat
jno
out
in
push
das
(bad)
out
jg
jmp
aas
(bad)
out
add
loop
inc
std
add
mov
pop
mov
inc
aaa
sub
sbb
xor
jmp
xlat
and
out
fld
(bad)
out
sub
lock
push
jg
sub
dec
ins
and
out
hlt
inc
mov
inc
fidivr
xlat
sar
(bad)
out
add
loop
out
cmp
sub
dec
inc
jmp
sub
out
fld
aad
cdq
push
push
jno
mov
dec
or
das
arpl
cdq
push
mov
sub
dec
shr
xor
push
jne
and
out
fld
sub
out
ins
xor
fild
sub
jp
push
cmp
cs
out
or
lock
popa
push
imul
sub
cdq
aad
cdq
xchg
xlat
(bad)
call
xchg
ja
sub
ds
sti
out
sub
aas
rol
mov
scas
cmc
dec
popa
aaa
popf
mov
dec
add
shr
shr
sahf
out
xor
(bad)
mov
out
sub
dec
fisttp
push
xor
cmp
cmp
push
fsubr
cmp
arpl
sbb
inc
mov
imul
fidivr
cmp
mov
dec
sti
mov
mov
dec
sti
sub
mov
repz
xor
mov
sti
or
(bad)
ss
idiv
popa
cmp
mov
mov
out
push
mov
pop
mov
xchg
and
sub
out
sub
hlt
cmp
(bad)
out
cmp
dec
cs
fimul
sub
(bad)
adc
out
add
ds
out
shl
sub
mov
cwde
out
cmp
arpl
in
xlat
(bad)
jg
xor
cmp
scas
cmc
inc
sub
mov
(bad)
out
fldcw
out
iret
xor
pop
xor
scas
fcomip
mov
nop
popa
in
xlat
inc
daa
aad
(bad)
jle
add
jle
inc
cmp
lods
cmp
mov
jae
repnz
outs
fild
out
rol
sub
inc
fsubr
out
mov
xchg
lock
mov
es
mov
adc
(bad)
mov
pop
das
je
mov
xlat
sub
out
xchg
mov
lock
mov
arpl
cs
add
ds
cmp
imul
jmp
mov
out
xchg
xchg
es
mov
ja
ds
jno
cs
adc
(bad)
out
(bad)
mov
int3
mov
add
jle
dec
pop
pop
in
call
mov
push
inc
cs
or
(bad)
jae
mov
xchg
out
or
arpl
cs
or
push
je
mov
xchg
out
or
arpl
cs
or
sbb
fnstsw
imul
xor
cmp
not
push
out
sub
inc
imul
inc
out
jg
mov
cmp
add
jle
(bad)
fdivp
sub
cdq
aad
test
and
out
sub
ds
sti
out
sub
aas
rol
mov
jmp
stc
aam
sub
cmc
dec
popf
xor
xor
out
adc
in
sub
aas
loope
dec
jmp
cmp
fdiv
popa
push
imul
(bad)
out
sub
ficomp
sbb
jmp
xchg
retf
cmp
rcl
(bad)
out
sar
inc
fdiv
shr
and
xchg
lock
mov
arpl
cs
out
jg
shl
das
cs
xchg
mov
jno
sub
xlat
sub
aad
adc
mov
xor
mov
nop
xchg
ficomp
ds
push
test
inc
lock
push
mov
sub
mov
icebp
inc
out
jmp
add
cmp
pop
adc
pop
mov
icebp
sub
out
jmp
lock
mov
fsubrp
xchg
cmps
es
jle
add
jle
inc
stos
cli
cli
add
sub
(bad)
xlat
dec
dec
push
mov
and
lock
mov
arpl
xor
inc
push
mov
jmp
arpl
xor
and
adc
(bad)
repz
movs
sahf
xlat
(bad)
call
push
sbb
sub
dec
jmp
xchg
(bad)
pop
cmp
and
mov
dec
cmc
xor
(bad)
dec
inc
cs
adc
xor
in
xchg
jle
lock
lea
into
sub
mov
cmp
dec
inc
test
movs
adc
cmp
or
aad
add
fcmovu
outs
lea
fcmovne
sub
adc
lods
sub
(bad)
mov
mov
aad
fidiv
out
xchg
lock
dec
(bad)
out
cmp
sub
hlt
outs
out
(bad)
jno
sub
pushf
xor
data16
jno
push
fld
cs
fstp
sbb
shr
out
add
shr
mov
out
sub
xor
mov
inc
push
jl
xor
mov
das
fsubrp
sub
cmp
lock
stos
sub
lds
xlat
(bad)
call
push
cmp
mov
mov
cmc
or
adc
test
pop
idiv
test
push
push
mov
xor
out
imul
mov
adc
addr16
push
sbb
jns
outs
mov
je
lods
and
sub
add
aad
mov
mov
loope
add
ds
scas
cmc
push
popa
mov
xchg
arpl
data16
jnp
out
arpl
add
pop
test
mov
jmp
je
sub
mov
pop
mov
out
test
pop
sub
arpl
add
repz
stc
or
push
out
dec
xchg
jb
and
out
xchg
scas
es
mov
dec
push
fsubr
out
inc
mov
(bad)
out
or
out
mov
push
ficom
cmp
test
shl
jge
outs
les
aad
rcl
jg
push
aas
cmp
dec
fdiv
cdq
inc
xlat
test
xchg
into
hlt
add
(bad)
out
mov
mov
jno
sub
bound
jle
dec
xor
push
repz
mov
imul
xlat
cmps
jmp
(bad)
inc
add
fisubr
outs
mov
dec
fisttp
(bad)
leave
adc
(bad)
(bad)
test
push
mov
out
cmp
sub
push
dec
loopne
cs
jl
xor
fldcw
fisubr
rcl
xchg
stos
sub
(bad)
imul
lock
mov
gs
cs
jp
stos
movs
lock
data16
bound
pop
aad
or
das
xor
outs
adc
cmp
inc
mov
cmc
ss
clc
push
mov
add
xor
bnd
cmc
arpl
aad
std
std
xlat
(bad)
push
mov
std
std
xlat
dec
dec
xor
aad
xlat
out
sub
mov
mov
or
mov
ds
div
mov
lods
mov
xor
out
add
nop
iret
dec
aad
ds
and
(bad)
xlat
dec
sub
popa
out
je
aas
push
je
aas
aam
sub
out
or
into
sub
or
xlat
cmp
aad
jno
call
ss
dec
push
je
aas
push
je
aas
or
sar
es
fcom
in
out
sub
xor
mov
add
mov
call
out
(bad)
loop
cmp
mov
or
out
jns
inc
sub
push
(bad)
jns
ds
out
sub
fidiv
mov
popf
repz
xor
jg
add
clc
bound
cmp
not
cmp
bound
mov
in
xor
sub
stos
jns
mov
xor
std
aad
add
push
(bad)
xor
addr16
arpl
outs
shl
xor
cmc
xor
or
jns
outs
in
pop
and
out
hlt
cmp
lock
inc
pop
or
mov
mov
dec
mov
enter
ja
fisubr
sub
(bad)
outs
mov
das
(bad)
out
or
push
jmp
jnp
dec
repnz
outs
mov
das
(bad)
out
add
pop
mov
mov
sti
or
test
mov
int
mov
repnz
arpl
inc
dec
cld
add
xlat
arpl
mov
test
push
cwde
js
inc
cmps
fimul
and
in
push
and
xor
je
out
push
mov
(bad)
arpl
ins
push
jmp
(bad)
ss
bound
cmp
not
cmp
bound
sub
in
xor
ds
push
and
out
hlt
xor
out
sub
out
xor
(bad)
sub
aad
push
cs
repnz
jns
inc
xor
dec
inc
and
sar
(bad)
rol
xlat
(bad)
(bad)
test
retf
or
mov
add
fistp
push
rol
rcl
inc
push
cmp
out
sub
jb
das
(bad)
out
inc
xor
rol
mov
jno
xor
jae
das
(bad)
out
mov
add
fistp
(bad)
out
out
hlt
jns
mov
sysret
mul
push
das
out
out
arpl
pushf
jp
mov
into
inc
aam
sub
test
inc
or
and
sbb
(bad)
push
sub
fidiv
stc
inc
aam
es
cmc
push
cli
inc
aam
aad
push
out
dec
std
jg
cli
(bad)
push
mov
movs
ds
dec
movs
ds
xchg
mov
cdq
fcmovbe
mov
icebp
cmc
jp
jmp
xlat
dec
daa
adc
cmc
push
push
or
dec
stc
shl
jl
push
pop
mul
mov
mov
(bad)
out
cmp
repz
sar
test
jae
aad
add
loop
add
ds
mov
xor
scas
loopne
xor
xchg
inc
daa
xlat
bound
mov
ja
xor
out
cmc
dec
ds
cs
(bad)
cdq
cs
out
and
lock
xchg
cmc
xor
mov
adc
out
sub
mov
mov
xlat
out
cmp
(bad)
ds
sub
aaa
pop
sub
in
xlat
(bad)
repnz
sub
jb
mov
lods
cmp
jae
das
(bad)
out
and
into
lock
mov
out
sub
scas
idiv
pop
sub
(bad)
xlat
inc
cs
outs
jnp
(bad)
out
cmp
jnp
mov
out
adc
pop
sub
jmp
out
adc
xlat
mov
xchg
(bad)
lods
(bad)
out
sub
jns
dec
sbb
mov
in
sub
xlat
add
aad
or
arpl
aad
add
adc
xor
push
lods
xchg
xlat
(bad)
xlat
push
sahf
or
mov
aad
xchg
xchg
xlat
(bad)
rcl
mov
je
sub
mov
jnp
(bad)
aad
adc
xlat
push
ds
out
jg
jmp
sub
call
das
(bad)
jnp
(bad)
aad
adc
xlat
pop
inc
(bad)
out
add
add
push
arpl
mov
out
cmp
out
or
out
xchg
scas
es
jle
add
jg
(bad)
fdivp
cdq
pop
sub
dec
adc
cs
mov
icebp
sub
mov
sti
shl
sub
push
push
cmps
xlat
ja
sub
and
xlat
inc
repnz
not
push
(bad)
sub
dec
ins
ds
cld
sub
xlat
dec
outs
pop
iret
mov
hlt
xor
call
scas
mov
jmp
xor
cmp
xor
hlt
add
add
hlt
xor
movs
sar
ds
scas
nop
mov
pop
out
cmp
(bad)
jno
push
in
clc
das
(bad)
out
jmp
outs
jl
dec
clc
inc
je
clc
sub
fnstenv
mov
fbstp
sub
push
or
into
ds
push
add
push
fs
mov
fisubr
fldenv
sbb
or
sar
lods
test
(bad)
out
or
mov
das
in
je
loop
test
inc
ficomp
loope
sub
xor
popa
xor
cmc
ss
dec
mov
pop
ins
popa
pop
sub
in
xlat
inc
push
cmc
cmc
sub
dec
ins
cmp
aas
xor
push
or
inc
adc
xchg
arpl
cmp
push
or
mov
es
mov
jmp
mov
or
js
out
dec
movs
fdiv
inc
fcmovu
mov
(bad)
js
es
xor
cs
or
push
sub
jp
inc
aad
jge
xor
sub
dec
inc
je
ja
sub
jns
sar
xor
pushf
(bad)
xlat
arpl
aaa
push
ins
jns
(bad)
out
add
add
mul
dec
push
imul
sbb
xor
adc
mov
out
sbb
jns
inc
cli
lock
icebp
scas
js
fnstenv
mov
pop
bnd
jmp
es
js
es
xor
sbb
jns
cmp
cmc
xor
mov
xor
mov
or
out
sub
push
movs
or
sar
popa
inc
movs
ss
test
(bad)
out
hlt
inc
pusha
stc
ret
arpl
lahf
arpl
and
(bad)
arpl
scas
inc
or
xchg
rcl
cmp
jp
mov
(bad)
bnd
(bad)
out
add
aad
push
bound
sub
sti
out
sub
(bad)
out
sub
(bad)
out
sub
and
popa
xor
scas
arpl
addr16
test
mov
(bad)
mov
out
dec
retf
mov
adc
ins
lds
push
jno
dec
inc
mov
xor
loopne
cdq
jl
sub
fdiv
mov
cmp
mov
out
push
mov
pop
in
jge
out
jnp
add
ss
push
mov
loope
xchg
cmc
cmp
mul
xor
loopne
xchg
mov
xor
sar
push
xor
jno
xor
iret
div
pusha
xor
cmp
add
fsub
popa
mov
xchg
dec
fmul
aam
cmp
or
xor
loopne
sub
xchg
or
out
cmps
mov
popa
out
out
enter
fnstcw
lea
jl
(bad)
sub
aad
test
cmps
jp
mov
dec
repnz
mov
ins
xchg
idiv
popa
cmp
mov
popa
rol
out
mov
lock
mov
cs
out
cmc
inc
xchg
fadd
sub
pusha
stos
and
movs
ret
into
clc
cmp
(bad)
out
xor
iret
test
sahf
out
movs
mov
test
mov
fucomip
nop
mov
and
cmp
stc
mov
or
jbe
das
pusha
xor
or
jno
xor
test
leave
xchg
adc
mov
out
retf
mov
or
scas
push
pop
xor
jno
aaa
dec
xchg
je
aad
push
daa
fucomip
nop
mov
pop
test
mov
div
mov
imul
das
out
retf
clc
cmp
stos
clc
cmp
call
ds
cmp
popa
xor
adc
adc
popa
xor
pop
pop
xor
pop
popa
xor
sbb
adc
popa
xor
pop
pop
xor
pop
popa
xor
and
adc
popa
xor
daa
pop
xor
daa
popa
xor
sub
adc
arpl
or
xor
bnd
cli
cmp
dec
cs
cmp
repnz
cmp
popa
xor
mov
cmc
or
popa
xor
mov
cmc
or
pusha
xor
or
loopne
cdq
jl
cs
cmc
or
pusha
xor
or
jbe
xor
mov
arpl
sub
mov
cs
out
cmc
push
xchg
fadd
sub
pusha
mov
leave
xchg
jge
cli
adc
xlat
dec
cs
adc
mov
out
retf
mov
xor
out
xor
iret
test
out
movs
mov
stc
cmp
loope
nop
mov
sahf
stc
cmp
pusha
xor
enter
push
and
movs
jle
jnp
adc
mov
out
retf
xor
enter
sub
icebp
or
jno
xor
xor
loop
sub
adc
mov
pusha
xor
enter
xor
scas
push
pop
xor
jno
aaa
in
fld
jnp
adc
mov
out
retf
cli
cmp
sub
cmp
cmp
cmp
dec
cli
cmp
popa
xor
dec
pop
xor
dec
popa
xor
inc
pop
xor
inc
popa
xor
inc
pop
xor
inc
popa
xor
aas
pop
xor
aas
popa
xor
cmp
adc
popa
xor
aaa
pop
xor
aaa
popa
xor
xor
adc
arpl
or
xor
bnd
cli
adc
xlat
dec
cs
cmp
mov
cmp
popa
xor
mov
xor
or
loopne
cdq
jl
cs
xor
or
jbe
xor
mov
xor
or
jbe
xor
xor
dec
loopne
cdq
inc
or
daa
inc
sbb
push
jmp
movs
rcl
mov
pop
popa
xor
and
sbb
mov
test
inc
or
pop
pushf
loop
inc
lea
mul
jg
arpl
cs
(bad)
sub
push
fisub
inc
test
mov
test
jmp
icebp
mov
int3
mov
mov
cdq
push
xor
lock
mul
cmp
in
xor
lea
(bad)
test
cmps
lods
cmp
fldz
adc
xor
push
jmp
hlt
inc
push
jmp
hlt
ss
idiv
loope
ins
ss
ins
xor
adc
cmc
cmp
mov
sub
fld
cs
dec
cmc
xor
out
xor
mov
mov
xchg
inc
ja
out
test
fisub
cmp
in
xor
mov
int3
mov
mov
cdq
lock
xor
push
js
(bad)
out
mov
dec
icebp
mov
popa
mov
adc
xor
push
call
hlt
inc
adc
idiv
push
mov
dec
aaa
shl
sti
fidivr
mov
out
xor
bound
das
(bad)
arpl
cmp
out
test
xor
scas
mov
fcmovnbe
mov
xlat
outs
jp
xlat
out
and
lock
cmp
sub
test
sub
sub
std
ss
xor
das
push
dec
cmc
cmp
push
jg
pop
cmp
mov
in
jmp
sar
xchg
shr
or
add
pop
sbb
xlat
(bad)
nop
inc
(bad)
out
add
bnd
movs
fdiv
mov
sti
dec
repnz
pop
push
out
xchg
mov
into
xor
xchg
fld
xor
cmp
inc
add
ds
test
xlat
dec
ins
jbe
cmp
std
(bad)
sub
inc
mov
or
or
pop
mov
movs
ds
stc
jmp
dec
ins
xor
pop
mov
xor
inc
test
shl
out
rol
test
(bad)
out
xor
out
sub
scas
mov
cs
dec
mov
(bad)
out
sub
lock
or
out
mov
out
fiadd
xchg
lock
mov
pop
scas
div
popa
mov
xchg
popa
add
in
xlat
dec
repnz
out
cmp
and
add
(bad)
pop
xor
inc
ins
cmp
mov
pop
dec
mov
arpl
mov
aad
or
xlat
(bad)
push
mov
clts
out
dec
popf
mov
in
jmp
cmp
movs
(bad)
sub
movs
into
sub
dec
fisttp
cli
not
cwde
test
mov
out
js
das
jp
push
ficomp
dec
mov
out
push
adc
rol
xchg
pop
in
test
pop
daa
and
push
loope
das
cs
inc
bound
adc
dec
popa
dec
movs
inc
outs
dec
js
popa
fisttp
cli
add
es
jl
loope
pop
mov
pop
mov
imul
call
loope
scas
cmc
inc
sub
xlat
dec
inc
(bad)
out
add
loop
add
fidiv
lods
mov
inc
or
daa
inc
or
loop
xlat
test
sbb
out
or
mov
iret
pop
mov
enter
je
dec
jmp
pop
cmp
mov
loop
jae
popa
mov
hlt
dec
sbb
movs
(bad)
xchg
sub
xchg
dec
idiv
cmp
or
or
loop
dec
cs
mov
(bad)
jns
es
sub
loop
(bad)
add
inc
and
dec
fdiv
cdq
jp
push
fidivr
push
fiadd
add
mov
pop
scas
test
in
icebp
sub
and
sbb
add
(bad)
arpl
mov
repnz
and
fdiv
or
add
loop
(bad)
cmp
inc
fcomp
xor
outs
jp
neg
jmp
cs
out
ja
pop
xor
mov
iret
jb
cmp
jns
add
mov
and
or
test
ja
mov
pop
mov
add
xor
mov
inc
icebp
fstp
xchg
aad
imul
mov
xor
ja
aas
shl
je
jno
das
(bad)
cmp
fisub
mov
dec
repnz
mov
pop
or
fiadd
test
movs
leave
cmp
add
(bad)
outs
sub
push
cmc
or
leave
xor
movs
cmp
push
fiadd
jl
mov
aas
push
jmp
shl
sbb
mov
xlat
xchg
das
inc
mov
mov
pop
add
jnp
and
jl
push
xlat
cmp
fidivr
and
xlat
mov
repz
inc
mov
fidivr
pop
and
sti
or
fcom
out
or
lods
icebp
popa
fisttp
je
aas
push
je
aas
imul
mov
out
clc
arpl
cs
enter
push
je
aas
imul
call
cs
mov
and
xlat
xlat
sub
out
and
jl
and
xlat
out
sub
out
or
jmp
das
mov
out
clc
cmp
xchg
scas
cmp
add
xlat
retf
out
fiadd
das
sbb
cmp
xchg
add
pushf
not
sub
loope
jne
aad
idiv
popa
cmp
mov
fidiv
sbb
jno
dec
dec
hlt
or
mov
xor
dec
repnz
inc
xor
in
cmc
push
loop
cmc
push
loop
add
loop
jmp
sub
dec
adc
cs
mov
icebp
sub
mov
sti
mov
es
sar
lea
sbb
rcl
and
sub
sbb
rcl
sub
cs
mov
neg
fisttp
jle
out
idiv
arpl
jg
adc
arpl
cs
inc
push
lahf
mov
mov
sub
cmp
div
popa
cmp
hlt
fcomp
push
or
dec
dec
mov
jns
mov
arpl
sbb
pop
mov
pop
inc
sub
popa
inc
xchg
scas
imul
add
push
push
daa
mov
pop
shl
das
push
sub
ret
xor
add
push
push
sub
aas
fadd
jb
aas
xor
inc
or
pop
fld
test
jl
and
xlat
enter
fnstcw
dec
jecxz
cwde
(bad)
pop
xchg
mov
sti
or
jnp
out
mov
jns
ds
ins
xchg
mov
test
push
pop
xor
rol
(bad)
jno
dec
pop
ins
lea
cdq
inc
or
daa
jp
cmp
inc
fcom
test
push
out
sub
repz
mov
in
pop
in
(bad)
out
sub
jae
mov
adc
cmc
arpl
imul
add
(bad)
fldenv
movs
call
jns
ss
inc
test
fcompp
int3
mov
(bad)
ja
sub
inc
sbb
scas
popa
cmp
mov
je
stc
int
xchg
ror
pop
mov
xor
leave
inc
sbb
stc
pop
mov
pop
inc
test
(bad)
jns
sbb
mov
fisttp
jp
push
fcompp
jmp
jp
sub
popa
cmp
xor
out
and
scas
cmc
imul
out
cmc
pop
popa
lock
aam
push
cmps
jb
or
sub
popa
xor
xchg
arpl
(bad)
out
jg
dec
std
sub
(bad)
out
jg
fcomp
dec
mov
arpl
sbb
jnp
sub
repnz
push
loop
inc
xor
out
and
shl
pop
push
enter
sub
arpl
(bad)
mov
repz
aam
(bad)
mov
(bad)
out
mov
popa
add
ficom
cmc
cvtps2pd
cmc
bound
cmc
push
int
sub
int
sub
shl
ss
jns
push
fidiv
xchg
pop
push
or
cli
neg
icebp
pop
push
or
cli
neg
icebp
inc
icebp
push
mov
inc
aas
aaa
mov
out
xchg
shl
lock
mov
out
pop
push
out
pop
iret
inc
cs
jmp
xor
idiv
aad
lea
(bad)
out
xor
jae
mov
hlt
mov
cs
fiadd
out
fisttp
ret
mov
adc
cmc
inc
cmovl
push
sbb
mov
mov
and
xor
repz
xor
arpl
dec
mul
cmp
xlat
pop
add
lods
cmp
movs
inc
and
dec
cmp
nop
mov
lock
pop
sysenter
xchg
stos
add
test
cwde
fucomip
mov
cmps
lock
sub
out
inc
shl
cmp
mov
data16
cmc
sar
sbb
out
ins
mov
scas
mov
out
es
div
inc
lock
cwde
fucomip
mov
cmps
lock
sub
out
inc
ds
sub
mov
(bad)
aas
xor
out
(bad)
cmp
idiv
cli
imul
int3
out
or
repnz
lods
cmp
repz
mov
dec
sti
popa
xor
ds
or
cli
cli
cmc
aaa
popa
xor
aas
(bad)
inc
js
popa
(bad)
or
cli
div
cli
add
int
test
xor
dec
sti
mov
mov
shl
cmc
(bad)
rcr
mov
mov
out
or
inc
test
movs
ss
xor
add
(bad)
out
adc
inc
(bad)
fsub
cmp
ja
cmp
cli
adc
xlat
ret
dec
(bad)
out
fstp
fstp
ss
cmc
jg
out
in
div
aad
xchg
push
les
sub
sbb
add
daa
aad
jmp
sub
jbe
pop
fs
mov
out
cmc
inc
popa
call
bound
sub
outs
mov
mov
imul
in
mov
test
iret
jno
xor
mov
add
(bad)
arpl
lock
and
repz
xor
out
cmp
std
xor
js
mov
jb
aas
pop
scas
xchg
aaa
sbb
add
aad
inc
and
ss
jmp
cli
dec
jne
xchg
and
xchg
and
arpl
cs
inc
or
adc
push
(bad)
arpl
jne
cs
aas
aad
or
push
js
mov
out
fisttp
fdiv
mov
ficom
jo
xlat
ja
cmp
cmps
sub
mov
or
cli
test
push
daa
in
inc
iret
test
xchg
xor
add
out
arpl
cs
push
xor
jae
mov
(bad)
out
xor
out
xchg
jbe
lock
sbb
and
cwde
repz
add
jg
(bad)
and
lock
icebp
aad
leave
call
(bad)
jg
cmp
ds
inc
jmp
xor
cmc
push
loop
cmc
push
loop
xchg
fisub
lock
mov
arpl
lea
out
cmc
push
loop
cmc
push
loop
xchg
push
lock
mov
arpl
lea
out
cmc
push
fsubrp
xchg
loop
lock
mov
arpl
lea
inc
movs
xor
movs
ss
test
(bad)
out
cmc
push
icebp
mov
out
dec
adc
cmps
cmp
(bad)
mov
cmp
repnz
ds
mov
mov
repz
dec
ror
scas
inc
mov
push
mov
cs
sub
out
hlt
inc
pusha
icebp
ret
arpl
loopne
cmc
push
int
sub
out
hlt
(bad)
cmp
xor
ror
xlat
arpl
mov
icebp
imul
out
sbb
out
fld
mov
fild
out
inc
xlat
test
imul
dec
imul
xlat
out
cmp
rol
ss
div
cs
jae
ds
inc
sub
and
push
mov
ds
cmc
mov
adc
xor
pusha
jb
sbb
rol
xlat
(bad)
jmp
adc
mov
adc
out
fldenv
scas
mov
mov
pop
or
adc
dec
cs
ins
outs
das
in
cmp
jl
jns
mov
inc
(bad)
out
cmp
sar
out
add
fisubr
ins
sbb
inc
das
fisub
scas
mov
arpl
loop
lock
jg
xor
outs
mov
pop
pusha
inc
xor
lock
in
sub
jmp
out
xlat
dec
ds
sub
retf
xor
scas
pxor
add
xor
mov
test
out
popa
xor
cmc
fisttp
fs
out
sub
ds
mov
out
sub
movs
add
aas
mov
dec
and
mov
inc
ret
push
enter
or
push
ja
adc
dec
cs
pusha
jb
mov
inc
and
mov
or
(bad)
xor
out
mov
xchg
jmp
out
sub
sar
ins
and
cmp
bound
cs
xlat
or
std
aad
call
jp
mov
dec
repnz
xor
call
inc
ds
hlt
int3
call
inc
push
xchg
aas
cmp
out
movs
out
xchg
lock
das
(bad)
out
sub
jno
sub
and
cmps
lock
cmc
fstp
push
xor
out
sub
mov
jae
repnz
rcr
out
and
push
add
jecxz
lea
repnz
cdq
cmps
test
(bad)
out
inc
out
repnz
cmps
test
(bad)
out
inc
out
repnz
inc
jmp
das
and
not
cmp
call
xlat
(bad)
and
mov
rol
xor
cdq
sub
xor
jo
inc
fucomi
cmp
and
adc
(bad)
jg
mov
cmp
out
cmp
(bad)
and
(bad)
out
sub
jae
sbb
out
sub
repz
jae
pop
fstp
aad
add
test
je
mov
(bad)
in
sub
repz
xchg
hlt
ins
sub
test
dec
popa
enter
loope
mov
leave
cdq
ret
jo
xor
mov
pop
cmp
mov
sti
arpl
out
push
mov
in
sub
aas
jmp
mov
pop
cmp
mov
jl
sbb
out
add
rol
cs
pop
cmp
mov
jl
sbb
out
add
out
jg
cli
rol
cs
jno
mov
scas
push
mov
cmp
xchg
and
lock
inc
push
ja
adc
(bad)
nop
mov
aad
or
ror
icebp
fsub
scas
pop
adc
out
or
fcmovnu
jge
aad
fs
jbe
fs
out
shr
inc
mov
xchg
lods
sub
pop
popa
call
ja
adc
(bad)
nop
mov
pop
ja
adc
(bad)
imul
loop
jmp
std
add
idiv
scas
mov
(bad)
mov
outs
adc
inc
mov
aaa
addr16
out
cmc
inc
inc
in
imul
hlt
enter
sub
or
mov
ds
div
addr16
out
xchg
repnz
mov
cmp
lock
xchg
inc
push
cmp
out
push
mov
xchg
sar
xlat
(bad)
hlt
jle
dec
out
out
add
inc
and
cmps
lock
sub
xlat
(bad)
and
xchg
arpl
mov
arpl
ds
scas
cmc
xor
out
push
mov
out
in
cmc
push
out
in
cmc
push
out
inc
add
ds
scas
ins
daa
mov
mov
movs
cmp
inc
aam
scas
jp
push
jmp
mov
(bad)
ins
push
pusha
cmc
(bad)
mov
xor
inc
mov
(bad)
out
and
icebp
cmc
jg
rol
pop
test
xchg
arpl
jae
(bad)
fisttp
out
sub
add
ss
out
sub
mov
cs
out
cmc
sbb
enter
arpl
mov
xor
fistp
cdq
js
mov
repz
mov
aam
or
fnstcw
inc
mov
jg
sub
test
lods
mov
arpl
sub
cwde
out
sub
fs
mov
mov
ja
sbb
outs
arpl
(bad)
out
xor
js
mov
repz
pop
arpl
mov
repz
mov
dec
je
jae
(bad)
fisttp
out
sub
cmp
aaa
mov
xor
sub
aaa
sbb
pop
repnz
(bad)
repnz
pop
call
jp
dec
or
jno
out
xor
sti
sub
dec
inc
pop
or
sub
sti
jne
cwde
lock
mov
inc
mov
stos
sub
iret
mov
mov
jmp
sub
out
mov
(bad)
out
fdivp
mov
mov
inc
(bad)
out
or
add
fidiv
xor
retf
pop
rol
cli
test
aaa
imul
into
imul
mov
lock
test
xchg
shl
lock
repz
out
mov
mov
inc
add
xchg
out
or
adc
cs
retf
sbb
xchg
mov
mov
test
(bad)
fisttp
inc
add
pop
rol
popa
xor
mov
push
nop
mov
pop
out
cmp
(bad)
jno
dec
mov
jns
ss
jmp
pop
sub
in
xlat
inc
cmp
(bad)
sub
xor
jb
xor
div
popa
mov
call
or
xchg
out
cmp
and
add
(bad)
jbe
ss
dec
mov
cmp
xor
jl
sub
jmp
xor
jle
out
sub
in
mov
cmps
lock
push
add
sub
mov
mov
arpl
mov
lock
xor
movs
(bad)
sub
cld
(bad)
in
in
nop
in
jmp
pmaxub
inc
mov
jb
cmp
mov
sub
test
leave
jbe
xor
ret
repnz
push
xlat
test
dec
pop
leave
mov
mov
jns
xchg
cmps
lock
in
cmp
cmp
xor
rol
out
mov
repz
push
xor
lods
jmp
push
mov
jp
cs
aas
and
or
das
jb
aaa
das
jp
sbb
jns
mov
rol
shl
sub
(bad)
fs
fiadd
sub
arpl
cmp
(bad)
inc
imul
mov
cs
and
scas
fs
addr16
cmc
ss
lock
mov
push
mov
fisub
mov
cli
hlt
xor
test
pop
out
mov
out
jge
fs
inc
dec
jne
jnp
cs
ja
and
mov
xchg
lock
iret
inc
mov
fldcw
push
xor
mov
xor
shl
fsubr
cmp
xchg
lock
outs
fld1
mov
xor
add
lock
mov
mov
dec
cli
jg
cs
mov
call
ret
fdivrp
fldenv
fisub
mov
fdivp
or
xchg
and
xor
dec
repnz
inc
movs
ss
cld
hlt
out
xlat
(bad)
(bad)
mov
dec
repz
mov
adc
push
imul
hlt
xor
pop
test
arpl
or
bound
xor
scas
loopne
cdq
inc
or
inc
out
jmp
xchg
retf
cmp
rcl
(bad)
out
add
out
inc
xlat
test
imul
or
mov
je
aas
jmp
xor
jmp
test
add
jg
inc
cmc
ror
mov
push
cmp
inc
add
ds
scas
nop
mov
out
sub
icebp
fcom
inc
rol
cli
jns
dec
adc
push
xor
in
test
xchg
sub
fidivr
add
ds
jno
xor
jae
das
(bad)
out
mov
iret
outs
rol
sub
idiv
aad
lea
icebp
scas
add
fisubr
shr
jle
cmp
xor
push
arpl
mov
jmp
imul
dec
mov
repnz
sub
js
push
popa
jecxz
movs
mov
aam
mov
jb
cmp
cli
jmp
and
jb
sub
sub
in
test
out
idiv
aad
lea
aad
sub
(bad)
mov
movs
jmp
inc
mov
icebp
mov
arpl
and
in
jecxz
sub
dec
fisttp
ret
xchg
jbe
cmp
jecxz
das
out
and
(bad)
out
cmp
cmps
cs
out
xor
js
push
or
mov
ds
xor
fild
out
sub
aad
push
jg
inc
dec
jbe
cmp
adc
test
push
add
test
add
jg
inc
das
(bad)
out
inc
xor
rol
(bad)
xchg
lods
out
test
xchg
push
je
sub
dec
or
and
xlat
inc
daa
fsub
sub
out
in
test
xchg
sub
fsubrp
xchg
(bad)
es
pop
mov
sub
out
cmp
(bad)
daa
dec
mul
(bad)
cmps
lock
mov
psubusb
dec
dec
je
in
dec
xchg
jb
aaa
push
aas
and
nop
mov
adc
nop
mov
out
sub
ins
jge
fimul
add
fst
jge
dec
xchg
mov
pop
cmp
rol
das
cs
xchg
mov
retf
add
shr
or
mov
push
aam
dec
retf
and
jg
imul
xchg
(bad)
es
mov
arpl
test
out
idiv
aad
mov
out
jno
dec
(bad)
mov
je
repnz
outs
(bad)
popf
cmp
(bad)
sub
dec
push
or
test
test
lea
stos
aas
cmp
scas
nop
mov
out
sub
scas
push
xchg
sahf
jp
push
cmp
cs
out
or
xor
xor
out
cmp
adc
call
mov
pop
cmp
rol
das
cs
xchg
mov
jb
sub
jp
push
adc
cmc
loop
inc
and
lea
stos
aas
cmp
scas
cmc
retf
popf
test
fiadd
movs
out
inc
aam
div
sub
mov
das
out
jno
int
add
aad
cmp
out
or
cli
test
cli
repnz
sub
(bad)
bound
mov
fs
push
out
fisub
fidiv
aad
fiadd
cli
cli
mov
arpl
mov
mov
bound
cli
(bad)
fidiv
dec
adc
ds
mov
cs
add
loop
inc
mov
es
sub
out
add
loop
inc
mov
arpl
test
aad
add
loop
inc
mov
arpl
mov
aad
add
loop
fcomip
popa
xor
pop
popa
test
jbe
push
jl
ins
xchg
fsub
ss
(bad)
or
cmps
ror
xor
or
cli
repnz
test
mov
popa
call
push
movs
js
xor
inc
push
cmc
mov
dec
mov
mov
popa
fild
out
(bad)
cmp
jp
ds
mov
sub
sub
fidiv
ss
inc
fdiv
arpl
jnp
es
inc
out
sub
xlat
jmp
aad
push
je
aas
aam
fsubr
sub
xlat
fld
fidiv
and
jno
es
std
ds
pop
xor
mov
mov
jb
dec
aad
mov
or
loopne
sub
cmc
push
popa
cmp
aas
pop
xor
lock
inc
out
jno
mov
add
sub
ja
xor
imul
out
add
(bad)
jae
ss
call
push
retf
cs
xor
cs
add
jmp
xchg
pop
xor
mov
sub
mov
jp
xor
js
push
pop
inc
imul
pop
xor
mov
cmps
js
adc
jns
sbb
or
pmaddwd
loopne
jp
dec
hlt
add
jecxz
test
(bad)
jmp
xor
mov
cmp
(bad)
in
movs
mov
sbb
stos
loop
jl
push
imul
xor
sub
mov
sbb
sub
lods
inc
mov
sbb
dec
push
aaa
cmc
cmp
xlat
test
(bad)
xlat
adc
(bad)
out
jmp
out
add
out
jmp
and
test
imul
adc
mov
out
sub
jmp
dec
sbb
sub
arpl
scas
shl
nop
mov
push
jmp
in
cld
xor
out
add
cmp
pop
fsubr
sbb
out
iret
cwde
loope
inc
xor
out
add
pop
imul
sub
sub
or
in
xlat
dec
cs
jmp
(bad)
jns
sbb
in
sub
inc
jno
jmp
aas
xor
ins
xchg
cmp
mov
dec
ficomp
popa
cld
sub
xlat
dec
outs
stc
mov
out
dec
or
hlt
ds
xor
cs
add
push
out
(bad)
and
ins
xor
xor
mov
adc
xchg
popa
mov
icebp
aam
xor
fisttp
test
pop
div
aad
jns
cmc
xor
and
xlat
(bad)
(bad)
aas
in
inc
test
xlat
push
adc
out
fiadd
in
mov
xchg
lock
cmp
pop
adc
xchg
arpl
mov
aad
jge
rcr
je
out
into
es
pop
or
fidivr
scas
rcr
nop
mov
in
sub
jmp
aad
push
sub
jbe
cmp
inc
pop
lods
out
ss
imul
pop
or
lods
cmp
movs
inc
mov
pop
scas
nop
mov
out
sub
mov
xchg
jg
shl
or
xchg
in
inc
mov
sbb
mov
pop
xlat
test
(bad)
pop
mov
cmp
push
push
jmp
shl
sub
dec
(bad)
out
sub
out
sub
stc
add
pop
imul
inc
clc
fdivr
cmps
jle
aad
jl
dec
xor
ins
mov
in
cdq
jl
sub
and
hlt
inc
push
aaa
nop
mov
out
sub
cmp
cs
neg
pop
pop
in
sub
neg
pop
push
in
sub
stc
iret
xchg
mov
(bad)
xlat
lock
out
or
out
or
(bad)
out
inc
je
lock
and
adc
(bad)
cmp
fidivr
imul
ficom
xor
std
ss
repz
or
in
arpl
(bad)
push
in
rol
out
push
pusha
push
enter
rol
out
or
lock
das
push
dec
jle
in
bound
aad
ficomp
in
mov
xchg
lock
cmp
pop
jb
xor
cmc
xor
enter
ins
xor
or
loop
(bad)
push
(bad)
ja
cmp
(bad)
pop
cdq
xchg
xor
movs
jmp
(bad)
jmp
sbb
(bad)
and
out
(bad)
es
je
jb
sub
std
push
aam
out
xor
and
enter
es
rcl
fs
mov
jp
adc
mov
into
push
push
icebp
ja
fnstenv
jns
and
div
fnstenv
cdq
addr16
div
add
cs
pop
dec
je
lock
jns
ds
fs
mov
out
inc
(bad)
(bad)
popa
mov
sub
out
add
mov
sbb
out
sub
dec
mov
lods
fbstp
sub
mov
movs
jmp
into
fucomip
cmp
jp
hlt
popa
xor
mov
sti
imul
shl
call
or
dec
je
repz
fst
mov
xchg
and
mov
(bad)
sbb
out
sub
cmp
cmp
(bad)
loopne
inc
cmc
or
loopne
(bad)
sbb
inc
(bad)
(bad)
out
nop
(bad)
out
nop
xor
out
nop
pop
(bad)
out
nop
mov
add
nop
data16
nop
mov
lock
pop
lock
adc
lock
inc
lock
retf
nop
and
sbb
jns
sub
dec
sub
dec
in
aad
sub
(bad)
out
mov
xchg
data16
pushf
xor
sti
pushf
xor
sti
pushf
xor
sti
pushf
xor
sti
pushf
xor
sti
pushf
xor
sti
pushf
xor
sti
pushf
xor
sti
pushf
xor
sub
jge
(bad)
out
cmp
icebp
lods
sbb
mov
xor
jns
cmp
push
movs
hlt
jae
movs
lock
(bad)
ss
add
mov
out
inc
jb
push
inc
jb
out
inc
jb
push
push
xlat
out
adc
sub
push
dec
xor
out
mov
lods
fsubrp
hlt
cmp
(bad)
div
out
(bad)
xchg
pop
mov
sub
pop
ins
mov
dec
sbb
nop
sbb
sub
stc
jno
ss
arpl
arpl
test
mov
cs
inc
jb
repz
inc
lock
cmps
out
out
les
xlat
daa
adc
sbb
xchg
cwde
jp
mov
aas
scas
xchg
jnp
out
inc
sbb
(bad)
out
jmp
inc
jnp
lahf
cmp
lods
int3
jl
xor
fstp
out
aam
or
aas
cmc
int
sar
cwde
test
push
ins
jnp
adc
rol
jle
xor
jg
js
cs
inc
fisub
pop
adc
xchg
cmp
pop
out
add
mov
jp
inc
pop
out
xchg
lods
fstp
(bad)
in
imul
push
fnstsw
(bad)
out
out
cmp
xor
(bad)
out
or
mov
out
sub
or
mov
in
in
mov
out
sub
sbb
rcl
inc
out
cs
mul
arpl
cmp
xor
lods
es
inc
arpl
push
mul
jg
xlat
fwait
es
push
je
aas
imul
not
mov
jl
sub
xor
jg
jmp
popa
cmp
scas
cmp
xor
and
or
dec
movs
or
bnd
sub
or
push
pop
mov
pcmpgtb
push
leave
sbb
sub
fisubr
out
fldlg2
sbb
repnz
in
xchg
outs
in
(bad)
or
fisttp
dec
sti
add
test
jecxz
out
dec
enter
out
inc
jb
push
inc
jb
out
inc
xor
outs
in
(bad)
pop
add
adc
xor
popa
sar
hlt
add
cmc
jns
mov
arpl
inc
and
dec
adc
test
in
cmc
push
out
in
cmc
push
out
inc
imul
out
push
fucomp
xor
dec
inc
pop
fcmovnu
sub
out
mov
(bad)
out
push
mov
out
add
aad
inc
test
add
loop
out
(bad)
jno
ds
inc
or
loop
fdivr
xlat
out
cmp
iret
mov
arpl
aam
arpl
push
outs
mov
icebp
xor
aaa
test
icebp
(bad)
mov
lock
mov
mov
adc
hlt
inc
aad
xchg
mov
jns
mov
into
lock
mov
pop
(bad)
or
jle
idiv
out
and
xchg
push
es
mov
fs
das
out
xchg
dec
jo
aad
xor
xor
sub
pop
ins
aas
pop
out
cmp
(bad)
ds
pop
mov
sbb
out
sub
test
retf
arpl
mov
pusha
xor
mov
out
sub
shl
push
sub
sbb
adc
jns
cmp
jns
sbb
xor
mov
jl
inc
cli
(bad)
out
cmp
or
cs
hlt
cmp
ret
sub
(bad)
out
xor
xchg
mov
push
outs
mov
je
lock
xor
sbb
(bad)
and
shr
aad
cmp
jg
push
out
xchg
push
es
mov
mov
out
inc
movs
sbb
(bad)
mov
fidiv
cmc
inc
pusha
xor
imul
cwde
hlt
fsincos
or
sbb
pop
fcmovnu
stos
imul
ins
cmp
hlt
inc
xor
fstp
cs
imul
fsubr
xor
stc
hlt
xor
jns
and
(bad)
mov
out
sub
dec
arpl
xor
sub
repz
pop
cmc
stos
mov
ja
es
xor
sbb
and
xor
dec
repnz
and
xlat
(bad)
call
push
addr16
cs
jp
push
fidiv
mov
pop
cmp
cs
sbb
jno
cmp
jnp
inc
pop
xor
cs
out
or
jno
xor
ja
icebp
ja
arpl
out
jmp
pop
scas
fbld
(bad)
out
imul
mov
das
mov
ds
jns
push
xor
jae
mov
jmp
sub
mov
mov
jns
cs
xchg
jno
xlat
inc
cwde
lock
jb
aad
fisub
cmps
imul
mov
ds
repz
mov
(bad)
lock
jmp
sbb
mov
nop
mov
aam
add
cmc
jns
jecxz
aam
ds
inc
mov
aad
test
loopne
add
imul
add
cs
ds
rcr
mov
outs
mov
cs
hlt
imul
(bad)
xlat
inc
xor
sub
in
sub
cmc
xlat
(bad)
idiv
add
inc
dec
xlat
cmp
aad
(bad)
pop
scas
mov
jle
inc
sbb
test
pop
scas
popf
jle
mov
cs
inc
mov
xchg
psrlw
out
or
cli
repnz
call
imul
cmp
jmp
mov
or
push
mov
mov
out
idiv
add
ds
jp
push
fidiv
inc
push
cli
add
repnz
cdq
jp
push
fidiv
dec
es
xchg
jp
lock
icebp
mov
jp
test
scas
sar
aas
sar
aas
or
loop
retf
icebp
mov
dec
test
xor
div
pop
mov
xchg
xchg
arpl
push
dec
loope
lock
mov
mov
jp
test
scas
sar
aas
sar
aas
or
loop
retf
icebp
mov
dec
test
xor
div
pusha
cmc
mov
dec
stc
(bad)
cmp
leave
jl
sub
lahf
mov
mov
sub
cmp
div
cmp
int3
cmp
scas
fdiv
mov
(bad)
push
pop
xor
xchg
popa
xor
sub
mov
clc
push
(bad)
sub
xlat
ja
ss
cmp
(bad)
out
out
iret
out
add
pop
pushf
sub
push
add
shr
sub
jo
out
adc
fidivr
cs
add
inc
mov
sbb
cmc
cmp
cmc
cmc
xor
(bad)
and
adc
mov
rdmsr
test
jecxz
(bad)
ss
xor
in
das
(bad)
out
or
(bad)
push
pop
xor
neg
sti
test
(bad)
out
or
inc
mov
sti
sub
or
(bad)
cmp
jne
sbb
or
into
jp
and
movs
cmp
pop
mov
and
mov
ja
sub
mov
mov
arpl
sub
fdiv
and
in
into
push
dec
mov
je
icebp
jg
(bad)
out
into
cmp
lea
push
mov
je
lock
das
(bad)
push
add
fsubrp
(bad)
push
int3
xor
scas
dec
pop
push
je
aas
imul
sbb
jg
(bad)
out
fst
shl
mov
test
cs
(bad)
ss
imul
lock
popa
(bad)
ja
mov
hlt
xor
xor
mov
pushf
loopne
and
sbb
ins
das
dec
repz
out
push
retf
sub
xlat
out
mov
mov
aad
lods
mov
int
mov
rol
adc
push
add
in
(bad)
ss
(bad)
adc
outs
ins
cmp
shl
je
fiadd
ficom
push
bound
popf
push
or
and
or
iret
xor
js
cmp
or
and
cmp
sub
jo
das
push
out
add
fimul
mov
jb
cmp
stos
icebp
not
(bad)
mov
pop
(bad)
addr16
hlt
xchg
push
dec
je
test
ja
pop
xor
mov
dec
mov
mov
fisub
into
cmp
xlat
test
lea
loop
add
(bad)
inc
mov
cmp
mov
arpl
lea
jnp
into
and
fs
aad
mov
dec
in
sub
dec
mov
(bad)
lea
lahf
mov
jnp
repnz
imul
inc
hlt
xchg
inc
daa
fstp
mov
aam
ds
mov
pmaddwd
out
popa
test
icebp
inc
and
or
and
pop
mov
mov
mov
pop
fs
jle
jecxz
aaa
es
jbe
fnstcw
jmp
aad
pop
jg
dec
ss
sti
mov
or
imul
(bad)
out
adc
xlat
sub
jno
mov
sub
mov
mov
inc
sub
jnp
out
popa
sti
or
and
jo
das
arpl
add
mov
mov
aaa
(bad)
out
adc
xlat
sub
jno
mov
popa
mov
pmaddwd
or
arpl
data16
jnp
mov
arpl
inc
lock
ins
mov
dec
adc
aas
mov
jb
ss
inc
idiv
arpl
sar
jg
ficomp
push
dec
xchg
sub
jp
mov
aad
leave
jle
(bad)
fisttp
repnz
pop
iret
mov
xor
aam
arpl
add
es
xchg
jp
lock
icebp
sub
cmc
push
fiadd
push
pop
out
sub
out
mov
push
not
test
cwde
(bad)
in
cmc
push
out
add
ds
out
cs
mov
out
and
inc
mov
mov
mov
sbb
jns
mov
push
inc
sub
jns
mov
xlat
dec
scas
(bad)
push
jae
repz
xor
pop
and
loopne
aad
ficomp
(bad)
rol
iret
mov
ds
out
adc
pop
scas
cmc
outs
int3
das
lea
aaa
repnz
out
mov
ret
mov
add
push
ja
push
xor
jns
xor
scas
mov
jle
(bad)
and
test
nop
sub
push
out
adc
rol
(bad)
xor
cmp
xchg
fistp
aad
fidivr
sub
cmc
push
fiadd
(bad)
out
xor
mov
lea
arpl
sahf
fldz
and
mov
out
xor
aam
popa
arpl
mov
pop
rol
cmp
mov
dec
and
into
je
lods
cld
inc
shr
fldz
xor
std
or
xchg
add
sbb
imul
cmp
cmp
out
or
xor
sub
inc
inc
sub
xor
retf
mov
and
(bad)
adc
ja
push
xor
jns
ficomp
cmc
(bad)
int3
das
lea
mov
nop
jno
xlat
(bad)
fld
push
sti
jbe
pop
arpl
das
dec
(bad)
rcl
repnz
sub
out
mov
les
lock
push
out
cmc
inc
int3
mov
mov
aad
xor
stc
js
mov
ds
xor
aad
fidiv
adc
inc
icebp
push
mov
adc
mov
xor
inc
sti
mov
mov
dec
sti
sub
xchg
or
loop
(bad)
ss
add
xlat
inc
cmps
fsubrp
cmc
imul
cmc
(bad)
mov
dec
loope
outs
adc
fwait
not
mov
mov
sbb
push
or
mov
sub
das
mov
out
repnz
nop
in
xchg
(bad)
push
aad
mov
xlat
inc
ins
fcmovbe
cmp
ins
test
aad
mov
xlat
(bad)
jmp
mov
push
xlat
out
sub
out
sub
loopne
cmc
push
pusha
cmc
(bad)
mov
dec
loope
cmp
repz
mov
repz
out
pop
mov
cs
arpl
out
mov
aad
add
fidivr
mov
dec
repnz
xchg
or
out
dec
ds
fadd
ss
ins
lea
out
stc
ss
arpl
in
mov
retf
adc
hlt
dec
loopne
cmc
dec
sbb
mov
or
adc
repz
xbegin
repnz
cld
leave
mov
call
out
out
sub
jo
das
(bad)
out
ja
mov
fiadd
ds
sub
adc
inc
sbb
fiadd
ds
enter
das
and
aad
test
out
sub
mov
or
pusha
cmc
mov
pusha
push
cmc
push
loope
cmc
dec
sbb
sar
xlat
push
add
out
or
pop
mov
push
mov
mov
xchg
mov
aaa
pop
fs
bound
cmps
sub
out
repz
enter
mov
aad
mov
xlat
(bad)
imul
xor
cs
inc
xor
or
xor
neg
not
mov
out
ja
loop
cmc
xor
push
lea
rol
push
mov
sub
xlat
xchg
cs
out
(bad)
mov
aad
add
loop
dec
mov
xlat
mov
pop
mov
add
shr
add
out
sub
out
xor
hlt
add
aad
xchg
mov
dec
cli
rcl
push
ins
sub
push
popf
cs
jb
cmp
jns
mov
aam
xor
mov
cs
inc
fsub
into
hlt
or
xor
jns
mov
push
push
arpl
icebp
jbe
push
repz
fld
jae
repz
es
xchg
adc
lock
mov
mov
out
jno
fsub
ja
int3
arpl
cs
pop
imul
test
sub
out
fidivr
jecxz
sub
out
mov
(bad)
out
add
aad
fisttp
cli
idiv
ds
das
or
popa
mov
sub
jno
dec
popa
sti
or
mov
push
repz
aad
movs
inc
aad
movs
inc
sub
test
mov
aad
add
jmp
fnstsw
test
dec
(bad)
jno
cs
(bad)
mov
(bad)
add
ins
xchg
mov
out
lods
(bad)
mov
fsub
das
(bad)
out
or
jns
arpl
push
outs
mov
test
out
popa
repnz
adc
fimul
cmc
cmp
icebp
xlat
sub
shr
xor
mov
outs
fisubr
mov
out
sub
xor
addr16
dec
je
js
ss
imul
out
or
cs
cmp
pop
and
mov
mov
sar
scas
iret
stc
cmc
xor
(bad)
sti
shl
test
aad
lods
clc
push
call
cld
cli
popa
out
mov
jmp
retf
jle
je
sub
out
fdivr
bnd
push
out
xchg
retf
nop
mov
arpl
mov
into
sub
loope
(bad)
sub
xor
imul
out
or
into
sub
pop
jg
cs
daa
(bad)
ss
push
jmp
xor
div
dec
cmp
mov
xor
test
pop
shl
inc
inc
aas
cmp
xor
sbb
inc
and
add
ds
scas
cmc
cmp
jne
push
test
cs
shr
out
(bad)
ror
pmullw
fidiv
popa
bnd
push
repz
daa
fwait
cmp
aad
test
aad
dec
das
repnz
sub
adc
cs
mov
push
xor
mov
dec
sti
mov
mov
or
cli
push
mov
dec
pop
or
cli
add
cli
(bad)
mov
int
or
popa
xor
add
xor
popa
dec
movs
inc
popa
inc
movs
ds
xor
or
mov
and
loop
pop
int
movs
inc
popa
mov
jae
add
fnstcw
movs
ds
div
xor
dec
lock
popa
test
inc
lea
mov
mov
mov
lds
stc
inc
movs
out
jns
push
out
lds
and
(bad)
jp
push
fsubp
jb
cwde
and
es
mov
sub
lea
mov
rcr
fs
leave
jp
cmp
xchg
mov
fnstcw
movs
cmp
repnz
xor
jb
(bad)
fwait
cmp
lods
jb
neg
or
mov
(bad)
inc
or
cli
idiv
ds
daa
or
popa
mov
sub
jno
dec
popa
sti
or
mov
push
repz
sub
test
mov
aad
add
loop
dec
mov
imul
(bad)
test
dec
(bad)
jno
cs
xlat
mov
sub
pop
and
aad
cmc
push
in
and
add
ja
aad
cmp
out
fisubr
dec
cmc
dec
sub
sub
aad
fidivr
add
jg
inc
inc
inc
aas
cmp
out
xor
out
xlat
push
in
sub
mov
adc
das
jp
mov
aam
ds
jbe
cmp
cs
out
cmc
cmp
out
fidiv
or
or
cli
test
loop
add
repz
mov
mov
push
add
xchg
dec
or
sbb
fdivp
aad
xchg
jle
dec
mov
dec
sti
arpl
sbb
das
jmp
mov
inc
add
iret
(bad)
push
dec
add
cmp
add
movhps
add
scas
add
mov
add
dec
sub
add
cmp
add
aas
add
add
add
add
add
add
add
add
add
fmul
add
add
jmp
mov
inc
push
std
jle
hlt
stc
sbb
jmp
cmp
ret
sub
xor
int
sub
jmp
(bad)
mov
ror
pop
jmp
in
fadd
popf
or
xchg
es
sub
jge
movs
(bad)
sbb
ja
dec
adc
inc
repz
das
add
loopne
add
jg
sbb
test
sahf
pop
ror
cmps
call
fdivr
sub
and
or
test
xor
jmp
pop
pop
push
add
jae
fwait
cmp
pop
or
into
ss
push
popa
or
lds
leave
cmps
add
popa
mov
mov
push
pop
jb
dec
xor
pushf
mov
jmp
in
xchg
push
dec
cdq
xchg
leave
cmps
mov
test
call
mov
(bad)
mov
loope
inc
outs
mov
xor
dec
out
mov
pop
pop
pop
pop
pop
pop
stc
jb
pushf
or
jge
pop
pop
aad
jmp
or
inc
jns
arpl
mov
jno
add
adc
jmp
pop
adc
dec
push
pop
icebp
ins
push
and
inc
sahf
or
pop
les
outs
sub
jle
ds
sbb
push
pop
cmp
dec
sbb
lods
(bad)
(bad)
inc
mov
or
xchg
sar
jne
jmp
jno
pop
gs
xchg
mov
repnz
and
cmp
popa
les
(bad)
push
ja
movs
pusha
jmp
and
repnz
ja
ror
ret
(bad)
(bad)
jmp
test
call
xchg
in
jmp
mov
sub
inc
or
(bad)
(bad)
dec
and
and
push
out
lods
mov
ins
mov
inc
stos
ins
call
xchg
mov
sub
cmp
adc
test
clc
jae
sbb
inc
clc
(bad)
in
pop
test
ja
jne
stc
jb
or
arpl
and
in
je
mov
mov
dec
adc
push
outs
stc
adc
jmp
mul
fs
cmp
sar
(bad)
bound
(bad)
jmp
jns
mov
test
add
dec
pop
mov
hlt
lods
sub
aas
sbb
call
jmp
sub
out
push
mov
sbb
cmp
jge
(bad)
(bad)
fild
call
xchg
js
(bad)
out
imul
xor
ss
mov
sub
push
push
sub
push
push
push
push
je
adc
cmc
adc
sub
mov
add
xlat
das
mov
repnz
cs
dec
inc
popa
xor
repnz
mov
ret
adc
add
icebp
sub
rcl
sub
sub
mov
mov
jp
mov
out
sub
(bad)
lds
popa
aaa
mov
popa
icebp
xor
imul
mov
div
mov
pop
mov
and
(bad)
bound
cs
icebp
dec
xor
ds
comiss
inc
repnz
mov
cmp
int3
cmp
retf
cmp
mov
mov
out
inc
out
idiv
aad
lea
(bad)
dec
add
fiadd
mov
imul
popa
aam
icebp
sub
mov
fidivr
cmp
sub
arpl
aad
sub
out
sub
lds
mov
dec
xchg
mov
out
(bad)
repnz
sbb
push
sbb
ins
push
add
add
or
