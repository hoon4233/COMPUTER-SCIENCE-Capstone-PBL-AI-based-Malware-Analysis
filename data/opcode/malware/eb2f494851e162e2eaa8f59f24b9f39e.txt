fcomip
add
add
add
dec
add
add
add
add
add
or
add
add
add
adc
add
push
and
add
add
add
xor
inc
ins
ja
ins
mov
(bad)
loopne
mov
cmps
add
in
fidiv
sub
je
loope
mov
sar
mov
or
xchg
int3
aas
inc
push
aam
mov
dec
ins
pop
out
hlt
dec
out
mov
int
cmp
cmp
pop
inc
mov
sbb
sub
bound
mov
xchg
jmp
lods
in
and
pop
mov
mov
outs
sub
mov
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
dec
add
add
push
je
imul
add
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
int
add
add
add
pop
add
add
jle
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
ins
stos
add
add
add
mov
lods
add
add
add
fiadd
add
sub
add
add
add
add
add
jnp
xor
cmp
cmp
sub
sub
sub
sub
xor
popa
xor
cmp
outs
fs
gs
xor
inc
xor
xor
ss
xor
ss
aaa
inc
xor
inc
xor
xor
inc
aaa
xor
push
ins
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
loope
cmp
add
mov
(bad)
push
movs
retf
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
jnp
add
je
fcom
mov
mov
xchg
sub
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
retf
fnstcw
leave
jle
add
jbe
pushf
sbb
xchg
mov
scas
mov
mov
(bad)
leave
cwde
sahf
or
adc
cwde
cdq
xchg
popf
xlat
div
neg
(bad)
inc
add
add
or
or
push
sub
adc
adc
push
pop
sbb
sbb
cmp
and
and
and
sub
sub
sub
mov
xor
cmp
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
xchg
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
bound
loope
data16
imul
jo
bound
jne
ja
imul
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
push
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
fnstsw
jmp
out
call
in
out
lock
div
clc
stc
cli
sti
cld
ror
add
jo
or
sub
or
jbe
adc
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
inc
or
inc
dec
sub
cs
xor
xchg
xor
inc
cmp
inc
inc
inc
inc
inc
inc
dec
or
push
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lds
xchg
xchg
cmp
fwait
fwait
pushf
pushf
sahf
lahf
mov
cmc
xchg
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
mov
ds
or
sahf
push
(bad)
(bad)
int3
int3
int3
enter
cmp
(bad)
fs
(bad)
(bad)
(bad)
int3
int3
int3
mov
(bad)
(bad)
les
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
pop
pop
pop
pop
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
les
jb
dec
clc
inc
sub
or
and
ds
rcl
ror
in
mov
in
lods
stos
in
xchg
(bad)
cld
mov
mov
(bad)
call
cld
cld
cld
lods
add
int3
xor
(bad)
fadd
(bad)
les
into
in
mov
mov
inc
inc
dec
dec
dec
push
(bad)
inc
inc
inc
jl
pop
pop
inc
inc
inc
inc
dec
or
dec
fs
inc
inc
jle
jl
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
pop
pop
pop
pop
test
dec
dec
dec
dec
inc
inc
inc
inc
mov
aam
(bad)
fmul
int3
int3
(bad)
aam
(bad)
int3
(bad)
fadd
(bad)
(bad)
aam
int3
int3
int3
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
sub
(bad)
les
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
int3
int3
int3
int3
(bad)
(bad)
(bad)
les
inc
dec
dec
dec
dec
dec
inc
inc
inc
inc
pop
pop
pop
pop
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
jl
jl
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
pop
pop
pop
pop
inc
inc
inc
inc
dec
dec
dec
dec
fs
inc
dec
mov
(bad)
(bad)
(bad)
int3
int3
int3
(bad)
in
les
(bad)
(bad)
(bad)
int3
int3
int3
loop
mov
cld
fdiv
int3
int3
int3
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
int3
int3
int3
int3
(bad)
(bad)
(bad)
in
mov
sub
das
dec
dec
inc
inc
inc
inc
inc
cld
pop
pop
pop
inc
inc
inc
inc
cmp
inc
inc
inc
inc
jl
jl
inc
inc
inc
add
dec
push
dec
inc
inc
inc
inc
pop
pop
pop
pop
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
mov
(bad)
(bad)
(bad)
int3
int3
int3
int3
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
int3
int3
int3
int3
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
cld
push
(bad)
(bad)
(bad)
int3
int3
int3
test
(bad)
(bad)
(bad)
(bad)
fcomp
(bad)
(bad)
aam
int3
int3
int
(bad)
(bad)
les
inc
xor
dec
dec
dec
inc
inc
inc
inc
pop
pop
pop
pop
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
jl
jl
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
pop
pop
pop
xor
inc
inc
scas
cmps
pop
scas
cmps
pop
stc
out
es
dec
dec
dec
xor
cmp
xor
jl
(bad)
(bad)
(bad)
ret
mov
into
mov
aad
out
call
fstp
xlat
rcl
rcr
in
out
clc
stc
cli
jecxz
in
out
out
loope
jmp
jmp
pop
lds
mov
jbe
outs
push
jge
ins
pusha
cs
outs
ins
fs
xor
pop
jge
je
aaa
push
pop
inc
cmp
inc
pop
push
xor
sub
sub
and
fs
iret
test
enter
cdq
in
mov
mov
mov
dec
inc
inc
inc
sub
push
outs
push
(bad)
pop
push
push
jno
pop
fs
jns
arpl
addr16
arpl
jo
jbe
or
or
clc
std
(bad)
div
icebp
repnz
test
lahf
cwde
fwait
call
add
scas
test
stos
xchg
pushf
popf
mov
movs
movs
cmps
mov
lods
lods
scas
cmps
mov
ds
sbb
xor
xor
(bad)
(bad)
fcomp
fcmovb
int3
int
mov
jne
out
in
jmp
rcl
fnsetpm(287
in
(bad)
clc
stc
cli
jecxz
in
out
out
loope
jmp
cmc
test
jge
ja
jno
jnp
add
sbb
or
push
pop
or
add
adc
push
das
sub
sub
adc
push
pop
pop
adc
sbb
cmp
add
pop
push
and
sub
pop
ss
enter
mov
mov
mov
pop
pop
pop
inc
dec
dec
dec
inc
pusha
inc
inc
sub
xor
pop
or
push
pop
pop
push
push
icebp
push
pop
fs
pop
jp
ins
ins
outs
addr16
popa
bound
jne
cmovs
or
lock
repnz
test
call
add
xchg
pushf
popf
sahf
xchg
nop
xchg
xchg
fwait
movs
movs
cmps
mov
lods
lods
scas
cmps
mov
ds
dec
dec
dec
xor
aaa
xor
aaa
cmp
fcmovb
int
into
mov
cmc
(bad)
out
rol
xlat
rcl
rcr
in
out
clc
stc
cli
jecxz
in
out
out
loope
jmp
cmc
test
jge
ja
jno
jnp
outs
push
pop
jg
iret
ins
push
jp
cld
dec
dec
pop
pop
lods
sbb
test
push
jge
inc
ss
push
jg
jg
xor
mov
adc
cmovl
data16
(bad)
mov
in
popf
or
and
fnstenv
leave
add
mov
sub
xor
popf
(bad)
mov
pop
or
fldcw
std
cmp
cmps
ret
aad
rol
add
mov
pop
mov
fist
pop
sbb
cmp
cld
test
mov
xchg
xor
popf
inc
add
sbb
add
retf
test
ror
(bad)
lea
cmps
iret
xor
jp
test
or
mov
and
lods
inc
mov
sub
ins
inc
or
jge
push
jne
mov
add
mov
inc
je
test
inc
push
sbb
sbb
test
inc
mov
jg
movs
xchg
fisubr
xchg
add
leave
gs
push
leave
push
mov
arpl
and
mov
in
cmc
scas
shr
lods
adc
pop
aaa
and
(bad)
pop
pop
je
les
in
scas
or
fdivr
sub
jno
(bad)
and
sub
push
mov
movs
add
imul
xchg
fs
push
xchg
sub
nop
add
xchg
pop
and
mov
ins
lods
mov
xchg
arpl
enter
shl
jae
cmp
and
out
cmp
and
jo
inc
jae
out
mov
mov
dec
imul
and
imul
in
xor
mov
int3
pushf
fist
adc
fldenv
daa
adc
jmp
jo
xlat
cmp
fidiv
sahf
dec
xchg
cdq
sbb
cmps
cmps
jno
xchg
sbb
mov
jno
pop
(bad)
dec
jno
and
xchg
push
xchg
repnz
movs
dec
lods
jns
fldl2t
adc
sbb
std
add
sbb
popf
xor
lods
dec
push
mov
and
mov
sbb
mov
mov
fstp
push
add
loope
push
xor
sbb
or
jl
mov
fild
iret
adc
cmc
lahf
icebp
jge
sbb
push
xchg
mov
stos
int
sbb
mov
sahf
xchg
xchg
mov
pop
add
pop
inc
push
or
jne
ror
add
mov
xchg
movs
lea
mov
sub
pop
adc
sbb
into
or
add
dec
cdq
xor
sbb
xchg
xlat
shl
fcom
ret
or
add
iret
jmp
or
mov
push
lods
mov
and
fist
sbb
sub
xchg
mov
std
jo
ror
pop
rcr
inc
add
test
aaa
inc
ret
clc
add
popa
add
movs
adc
popa
pop
or
and
sub
adc
jae
pop
xchg
ds
inc
inc
push
jns
inc
jne
inc
dec
int
pop
or
sub
cmc
fcomp
fadd
inc
or
xchg
sub
cmp
mov
cmps
pop
push
popf
sbb
pop
mov
inc
aad
cmp
adc
movs
shr
xlat
arpl
mov
test
and
and
leave
sbb
inc
adc
sbb
ffree
and
adc
sub
and
cdq
inc
aad
rcl
test
js
sub
int
inc
ror
rol
adc
mov
test
xchg
xchg
xchg
aas
dec
xor
rol
aad
push
pop
jne
dec
cmp
gs
dec
gs
xlat
or
lds
stc
fild
loopne
int
cs
sbb
jl
and
loope
xchg
mov
pop
ins
mov
pop
pop
adc
dec
cmc
pop
add
jno
popf
inc
mov
inc
gs
ins
sbb
sub
rol
aad
scas
mov
cwde
fimul
stos
loope
test
mov
xchg
fadd
inc
and
xor
push
std
dec
pop
sbb
mov
xor
ja
shl
push
sbb
pop
popa
add
adc
inc
and
adc
dec
sub
jmp
in
jmp
ror
inc
add
and
dec
pop
dec
in
jmp
outs
cdq
ret
pop
mov
int
pushf
fld
xchg
rcl
in
add
mov
test
int
xchg
js
adc
mov
fwait
mov
mov
arpl
pop
jno
inc
daa
or
push
xor
add
push
popf
movs
adc
(bad)
push
mov
sbb
test
imul
cmp
xor
sbb
add
mov
or
push
sti
scas
inc
xor
fstp
and
mov
frstor
fwait
xlat
leave
in
pop
xchg
icebp
fstp
test
cwde
retf
mov
in
xchg
push
xchg
inc
movs
pop
cmp
dec
dec
(bad)
push
push
dec
ss
push
movs
adc
fmul
(bad)
pop
out
sbb
aad
lds
inc
and
fst
aad
repnz
and
and
lds
mov
push
cdq
pop
push
out
test
not
dec
rol
in
std
daa
push
aad
(bad)
imul
ins
in
cwde
push
xchg
aad
dec
xchg
mov
sbb
add
in
xor
xchg
loop
imul
inc
lea
pop
movs
xor
cdq
les
adc
mov
in
shl
(bad)
out
sbb
rol
ss
push
mov
popf
sbb
cmc
sbb
mov
gs
imul
mov
mov
shrd
fiadd
add
pop
dec
or
sbb
enter
lahf
cdq
jle
lahf
mov
outs
aad
push
add
fnop
dec
xchg
pop
adc
inc
nop
mov
push
shl
int
aad
inc
and
xor
sub
jne
add
jge
mov
lds
adc
ins
inc
mov
hlt
push
jge
push
mov
xchg
pop
popa
repnz
mov
ret
sbb
iret
cmc
cwde
push
js
and
push
push
sbb
mov
inc
sub
cmps
mov
and
movs
pop
cmp
dec
inc
sbb
cmc
mov
and
pop
jo
mov
popf
fbstp
rcr
sub
sbb
push
sub
add
adc
lock
sbb
rol
mov
jns
scas
dec
gs
adc
aad
ja
and
pop
cdq
pop
mov
mov
(bad)
fnsave
jp
sar
sub
pop
cmp
jno
mov
sahf
iret
call
sahf
sar
fst
dec
xchg
xchg
push
mov
add
aam
and
leave
push
out
(bad)
sbb
xor
outs
push
sbb
push
xchg
movs
rol
and
jp
jbe
adc
fs
add
mov
pop
dec
cmc
and
mov
fisubr
xchg
add
jmp
sbb
sbb
or
in
cmp
lods
or
lea
popa
ins
mov
neg
xor
xor
mov
or
cmc
xor
ins
sbb
ins
inc
repnz
and
popf
mov
and
or
push
xor
stc
pop
je
(bad)
dec
push
push
jge
fcom
lea
js
cmc
fistp
lds
fist
mov
sets
cmps
rcl
mov
ins
ja
popf
cmps
add
into
movs
sub
pusha
xchg
cmps
sub
jbe
adc
inc
mov
sbb
ror
mov
pop
and
fst
rol
cmp
add
shr
pop
jno
pop
mov
jmp
xchg
inc
sbb
inc
mov
mov
jae
nop
fnstsw
in
sahf
dec
xchg
inc
xchg
mov
cwde
cmp
aam
cdq
push
xor
pop
pushf
cmp
sbb
cmp
mov
pop
enter
xor
mov
mov
popf
jmp
pop
jo
xor
nop
push
movs
inc
sbb
sbb
pop
jbe
adc
pop
and
sbb
sbb
mov
mov
repnz
cmp
or
leave
cwde
(bad)
outs
mov
(bad)
fild
cwde
and
inc
xchg
sahf
xchg
push
xchg
push
pushf
sub
outs
cmps
cmps
xlat
ds
mov
(bad)
int3
or
push
dec
pushf
imul
sbb
(bad)
pop
cmp
js
outs
cmp
inc
fsubr
(bad)
clc
inc
push
fild
push
or
push
(bad)
popf
sub
lahf
cld
sbb
sahf
or
lds
adc
inc
cmp
mov
loop
push
or
push
mov
push
push
fsub
test
out
mov
sbb
fsubr
pop
cdq
loopne
fadd
nop
sbb
pop
or
fisubr
sub
xchg
test
sahf
sahf
cmps
popa
mov
jbe
push
jp
dec
pop
pop
les
dec
scas
pop
test
fsub
je
cdq
jl
jb
das
xchg
pushf
push
cwde
repnz
mov
sbb
inc
push
push
sbb
loopne
xor
sbb
pop
adc
sahf
sbb
ficom
pop
sbb
imul
sahf
adc
inc
repnz
cdq
(bad)
push
adc
ret
repnz
rcr
popf
pop
and
cld
stos
mov
add
push
xchg
lods
mov
outs
test
popf
push
fs
lock
xor
cs
pop
ja
mov
pop
inc
cmp
shr
fild
cld
pushf
loopne
pop
mov
adc
cmps
xchg
add
inc
push
in
or
rcr
adc
bound
nop
jmp
mov
js
pushf
(bad)
pop
ds
push
(bad)
pop
mov
add
lds
cwde
sbb
mov
adc
les
xchg
cld
xchg
fwait
inc
sbb
mov
fsub
call
fadd
sti
xor
sub
mov
loope
pusha
mov
adc
imul
sbb
sbb
pop
sub
cmp
les
lods
fnsave
jl
es
dec
sbb
jg
push
pop
push
fcomp
push
xor
pop
push
stos
adc
cmp
push
shr
fcmovu
mov
out
mov
ret
push
movs
pop
popf
rcl
mov
cwde
mov
xchg
lahf
push
stos
xchg
(bad)
lock
(bad)
div
push
dec
cmp
dec
call
xchg
push
rcl
test
jg
or
cmps
mov
or
rcr
add
and
adc
sbb
das
loopne
sbb
xchg
pop
adc
gs
adc
sbb
cmp
jmp
xchg
fwait
jbe
xchg
and
xchg
sub
fwait
jp
pop
adc
mov
out
fdivr
loopne
push
loopne
fs
adc
gs
fadd
enter
mov
fsub
push
(bad)
rcl
(bad)
pop
sbb
xor
sbb
cmp
push
push
sar
ja
sbb
adc
cmp
clc
sbb
inc
ins
mov
mov
ror
rcr
mov
xor
push
shr
mov
mov
push
pushf
xlat
pusha
or
ror
fwait
mov
popf
rol
fwait
mov
retf
jl
addr16
fisub
pop
ret
aad
ins
test
push
(bad)
leave
push
pop
in
or
push
aad
rcr
jmp
rcr
xchg
adc
fs
xchg
add
jl
mov
cmps
sbb
je
inc
jmp
cmp
cmp
fs
fadd
je
(bad)
fst
dec
lahf
pushf
call
add
jno
lahf
neg
mov
out
mov
sbb
fimul
push
rcl
(bad)
je
add
and
mov
rcl
rcr
or
sub
mov
bound
sub
loop
sbb
adc
dec
inc
xchg
test
data16
pop
je
pop
adc
mov
push
pop
aaa
iret
cld
(bad)
or
sub
pushf
sub
in
cld
xchg
cld
call
cwde
mov
cdq
sub
mov
fcom
pop
sti
pop
jb
push
xor
sbb
into
xchg
fmulp
rcr
pop
fsub
retf
(bad)
xor
pop
sbb
(bad)
mov
push
push
mov
push
(bad)
xchg
adc
sahf
test
arpl
mul
pop
sub
test
fistp
cmp
(bad)
xor
(bad)
and
xchg
aas
xchg
out
cmp
add
mov
xlat
jmp
aas
inc
mov
push
in
fild
push
pop
jmp
and
(bad)
aas
cdq
inc
fcmovnu
inc
mov
popf
sub
repnz
adc
call
ss
xor
gs
pop
outs
adc
xchg
aaa
aad
add
das
cmp
cmp
pop
and
push
pop
pop
scas
fcmovnbe
add
les
inc
(bad)
cmps
jg
leave
pop
arpl
pop
sahf
mov
xchg
mov
adc
push
jecxz
nop
mov
test
bound
out
aas
(bad)
pop
repz
cli
xlat
ret
(bad)
adc
pandn
mov
jg
pop
pop
mov
and
xchg
sbb
cmps
mov
or
fwait
adc
mov
sbb
jg
cmp
pop
imul
mov
lahf
retf
shl
xchg
rcr
in
jae
aas
les
xchg
sbb
shr
fs
cdq
lahf
sub
das
xchg
rcl
bound
xchg
xlat
pop
aas
sar
stc
fistp
mov
dec
fcmovnu
shr
das
retf
and
jbe
movnti
jmp
mov
add
mov
aaa
inc
sbb
and
sti
popa
orps
div
lahf
mov
(bad)
cmps
outs
fcmovne
add
clc
xchg
pop
cwde
mov
or
pushf
add
xchg
dec
xchg
stc
mov
lock
xor
cmp
pop
jge
test
xchg
leave
ja
push
mov
jmp
scas
mov
mov
test
pop
add
push
push
sub
adc
je
pop
iret
sbb
pop
adc
addr16
imul
scas
xor
int3
push
fcomp
xlat
(bad)
pop
icebp
mov
sahf
fist
jl
test
mov
xchg
fwait
xchg
mov
fbld
ss
scas
js
add
daa
out
inc
xlat
lds
xlat
cmp
mov
and
mov
xlat
adc
xor
xchg
sub
sbb
sbb
in
or
adc
inc
jae
lahf
enter
mov
mov
neg
ja
xchg
pop
fidiv
fisttp
sbb
mov
xchg
outs
call
mov
retf
mov
or
mov
pop
mov
fisub
adc
stos
mov
jnp
ror
xor
jmp
imul
ins
sbb
mov
pop
loopne
popa
ficomp
or
setp
int
xor
out
daa
dec
or
push
sar
pop
jne
ret
rcr
mov
rol
push
out
dec
cli
fsubp
xchg
cs
jae
inc
stos
call
in
loopne
repz
outs
push
sbb
sub
out
in
and
es
or
ror
inc
jecxz
(bad)
daa
lahf
leave
mov
pop
fucomi
(bad)
and
mov
in
sbb
sbb
push
add
cmp
add
fwait
adc
sbb
pop
lahf
sbb
cwde
fwait
push
dec
mov
pop
push
or
(bad)
fdivr
(bad)
pop
fdivr
inc
pop
jmp
adc
or
sbb
sbb
icebp
xchg
mov
(bad)
mov
jae
imul
mov
in
mov
push
mov
shl
pop
mov
dec
dec
pop
or
and
pop
pop
adc
adc
arpl
inc
aaa
xchg
pop
push
push
push
pop
daa
xchg
cmps
(bad)
cdq
mov
add
mov
mov
call
or
xchg
pop
cwde
das
xchg
dec
inc
jns
pop
xchg
xchg
adc
mov
pop
mov
fwait
test
test
sub
xchg
jne
pop
(bad)
not
lods
jg
xchg
mov
aam
shr
mov
stos
pop
or
js
retf
pop
add
jg
or
xchg
sbb
jnp
sahf
daa
mov
imul
ja
push
sti
cmps
pop
lahf
fdiv
and
adc
fld
add
call
aas
fwait
mov
inc
push
out
xchg
lahf
fbstp
enter
fild
mov
mov
fwait
inc
imul
fdivr
repz
xlat
les
in
cmp
aam
xchg
pop
sub
adc
and
repz
pop
aaa
add
jg
je
fsub
cmp
pop
dec
(bad)
xchg
push
cmp
cmps
out
dec
daa
ror
shl
fdivr
mov
jp
add
call
mov
scas
aas
xchg
push
sbb
iret
addr16
iret
xchg
call
fcmovnu
add
aas
fiadd
and
cs
jae
scas
(bad)
mov
mov
push
sub
aas
mov
sub
aaa
mov
adc
inc
pop
push
test
xor
inc
lahf
pop
pop
xor
popa
pop
mov
arpl
out
xlat
out
scas
shl
shl
jnp
mov
xchg
retf
shl
fbstp
sbb
pushf
repnz
xchg
mov
lea
stos
aam
and
xlat
out
jbe
mov
cmp
aas
jmp
jno
or
(bad)
inc
and
dec
push
fidiv
std
popf
inc
sbb
inc
adc
daa
pop
scas
inc
js
mov
add
adc
idiv
pop
mov
(bad)
push
push
retf
xchg
sub
xchg
fidiv
mov
jnp
aad
xchg
rcr
shl
pop
aaa
aas
jae
adc
and
pop
and
bound
xchg
xlat
iret
pop
bound
daa
es
push
xor
mov
(bad)
jle
inc
mov
mov
push
fist
cmp
xor
shl
repnz
or
dec
cmps
call
push
loope
and
mov
inc
addr16
jnp
pop
cmps
bound
add
sti
int3
jg
cmp
adc
das
xlat
jo
into
daa
pop
adc
push
(bad)
fwait
adc
sub
inc
and
cdq
push
pop
push
or
es
fidivr
rcl
out
mov
rol
ror
repz
imul
rcl
iret
pop
inc
xchg
jbe
add
fwait
cmc
or
mov
adc
outs
and
jmp
mov
not
pop
pop
js
ret
sub
adc
inc
enter
fwait
dec
aad
and
xchg
mov
daa
hlt
xchg
xchg
stos
ds
fistp
(bad)
lods
cmp
cmc
fcomp
icebp
pop
cli
daa
fxch
jns
fnsave
cmp
ret
xor
pop
add
adc
adc
sbb
retf
push
popa
push
or
jge
xchg
adc
aas
sti
pusha
push
xor
push
pop
xor
jae
outs
das
lahf
xchg
rcl
lods
sti
xlat
test
daa
loopne
push
pop
(bad)
cmps
add
pusha
xchg
mov
add
jno
sub
add
cmp
pop
mov
ficom
test
lahf
or
outs
sbb
daa
mov
mov
pop
xchg
pop
pop
adc
xor
push
mov
in
sub
ja
push
lds
cli
std
pop
icebp
xchg
push
dec
imul
(bad)
(bad)
int3
shr
jg
xor
out
sti
imul
out
pop
sahf
inc
cdq
leave
mov
adc
mov
lea
cwde
aaa
ins
pop
mov
or
pop
out
cmp
cwde
pop
jnp
ins
fiadd
xchg
cmp
scas
aad
ds
pop
out
(bad)
jnp
mov
sub
and
es
out
push
shl
mov
and
rcl
setle
sbb
xor
pop
(bad)
pop
cmp
xor
stc
pop
(bad)
int
shl
int
jg
loop
sbb
std
sub
aam
dec
stos
push
xchg
xlat
push
mov
dec
neg
popf
das
cmps
scas
inc
mov
jmp
dec
cmps
lahf
pop
jb
dec
(bad)
shl
fcmove
push
cmps
shl
jmp
push
hlt
fwait
dec
mov
rcr
adc
mov
pop
sbb
sbb
or
lahf
sbb
jecxz
inc
and
fwait
push
pop
pop
push
das
pop
or
pop
or
fld
rcr
mov
(bad)
mov
xchg
jecxz
push
jae
jnp
ret
inc
mov
aaa
jbe
fist
xchg
nop
addr16
and
push
inc
sub
addr16
rcl
add
pop
rcl
ret
and
call
outs
sub
aas
scas
sbb
push
stos
fldenv
pop
push
lahf
pop
hlt
test
adc
xchg
inc
aaa
loope
pop
fisub
xchg
mov
mov
sahf
adc
mov
das
xor
mov
xchg
jbe
mov
xchg
mul
inc
aas
pop
ret
xlat
add
pop
rcl
fwait
sahf
rol
ret
mov
test
and
leave
call
and
jmp
hlt
xchg
in
mov
adc
adc
mov
push
arpl
cdq
pop
aas
mov
push
push
sbb
mov
xlat
adc
ror
fist
and
inc
out
pushf
mov
mov
daa
sub
cdq
movs
mov
test
loop
fwait
pop
shl
pop
push
das
inc
xor
outs
int3
hlt
inc
mov
leave
pop
sub
xchg
xchg
adc
sbb
retf
mov
inc
sbb
sub
fwait
hlt
add
inc
sub
arpl
neg
jne
ret
fisttp
add
mov
jmp
outs
add
pop
sahf
mov
fs
or
jno
or
aas
ins
ret
rcl
iret
arpl
fwait
and
sbb
jge
popf
fcomp
adc
pop
fisubr
gs
es
iret
and
enter
sub
(bad)
clc
add
addr16
pop
js
aam
sti
jmp
cmp
add
(bad)
test
pop
movs
aam
sub
pop
iret
enter
add
sbb
gs
add
test
xchg
sbb
and
xchg
and
pop
mov
jo
mov
imul
push
add
jp
jmp
lock
or
mov
push
retf
fs
xor
jge
test
pop
and
(bad)
mov
pop
add
sub
adc
cmp
pop
gs
and
rcr
call
cmp
leave
adc
test
mov
sbb
stc
les
xor
lahf
cmp
ficomp
mov
into
fwait
or
out
pop
icebp
shl
cli
mov
ss
test
ins
adc
div
and
pop
adc
cld
and
push
push
les
dec
aas
jbe
scas
cli
lods
mov
leave
shl
xor
pusha
mov
cli
inc
and
sub
call
mov
sbb
push
outs
xchg
sbb
ret
add
adc
and
test
cld
and
mov
(bad)
not
cli
mov
in
mov
int
fisub
test
pop
xor
jnp
and
push
push
stc
or
adc
adc
and
ins
cmp
sub
jb
pop
pop
dec
cmp
fisub
mov
not
sahf
cmps
add
sbb
call
mov
sub
xchg
fistp
xchg
sbb
lods
sti
add
dec
out
pop
push
pop
dec
sub
and
fs
fbld
aam
push
loopne
iret
inc
cdq
mov
and
sub
and
or
push
retf
add
sbb
enter
les
xor
mov
fcmovb
or
pop
test
lds
cmp
pop
jl
jne
cdq
cmps
in
push
loope
aad
scas
mov
adc
lahf
dec
or
xchg
fcmovbe
sahf
cmp
mov
push
je
dec
or
mov
jle
cmp
push
cmps
test
add
scas
add
(bad)
pop
push
adc
add
push
cmp
xor
aas
test
add
jecxz
jns
adc
and
and
aas
xchg
pop
inc
cmps
jmp
stos
push
ror
xchg
retf
hlt
loop
jbe
lea
inc
fnstenv
mov
xchg
push
adc
jmp
mov
xchg
sbb
in
mov
add
lds
sub
test
cmp
or
adc
ins
push
outs
dec
rcr
adc
jo
loop
inc
inc
or
jl
ret
or
sub
mov
js
clts
add
pop
add
je
inc
sub
sub
adc
adc
inc
retf
into
add
movs
add
retf
adc
mov
out
xor
repnz
or
or
xchg
cmp
xchg
xchg
push
pushw
jb
retf
ficom
outs
imul
xlat
cmp
lds
cmps
sub
int3
data16
jg
mov
ins
(bad)
push
xchg
into
lahf
into
and
pop
sub
test
out
mov
sar
ret
shl
ret
(bad)
xchg
push
rcl
in
test
popa
out
mov
mov
dec
test
cmps
mov
int3
pop
mov
push
adc
xor
dec
call
hlt
push
into
jle
out
jecxz
mov
shl
mov
shl
push
and
sbb
sbb
push
fs
and
or
or
or
and
jecxz
int
or
fmul
xlat
rcr
lods
lods
ret
js
push
(bad)
xchg
mov
cmps
push
dec
xchg
test
test
mov
(bad)
mov
call
dec
mov
sbb
aam
stc
xor
ret
shl
clc
(bad)
jbe
leave
cmps
int3
int
ror
xchg
test
(bad)
(bad)
sub
and
inc
sub
xchg
sbb
scas
fist
sbb
push
leave
adc
addr16
mov
jl
sub
pop
push
outs
mov
or
out
cs
inc
enter
shr
sub
mov
movs
loopne
inc
jg
xchg
mov
or
xchg
mov
mov
sahf
inc
daa
mov
fidivr
cs
fld
sub
lock
xor
scas
leave
stc
popf
xor
loope
leave
cmp
ds
cdq
stc
xlat
mov
arpl
mov
adc
mov
push
repz
fstp
lods
inc
fnsave
fisttp
fstp
aad
lock
fst
fsubr
(bad)
aad
mov
cmp
cs
xchg
test
cwde
in
xchg
popf
std
rcl
sets
sub
imul
and
fmul
fist
inc
jo
(bad)
sbb
pop
jmp
pop
pushf
sbb
fcomp
mov
jge
push
add
ins
scas
sti
push
xchg
std
sbb
fimul
push
adc
add
cmp
leave
out
into
fstp
pop
xor
ja
(bad)
fld
lods
dec
popf
call
call
fidiv
cdq
(bad)
pop
test
xlat
in
jno
stc
jns
adc
xlat
jno
xor
push
mov
int3
jle
add
out
ror
lods
cld
jo
out
(bad)
pop
sbb
popf
call
(bad)
sar
icebp
xchg
(bad)
inc
aad
loope
neg
fnstcw
and
mov
xchg
popf
xchg
push
mov
inc
fwait
sub
mov
sbb
pop
mov
cdq
fstp
(bad)
sbb
jge
stos
pop
lds
ins
test
fsub
and
ficom
fst
sbb
sbb
cmps
or
or
cmp
add
xlat
(bad)
sbb
xchg
mov
in
jmp
pop
jmp
fnsave
mov
pop
fnstsw
dec
inc
mov
int
xor
(bad)
jns
jns
xchg
into
test
cmp
mov
data16
(bad)
std
push
test
fcom
dec
and
adc
or
mov
pop
add
fldenv
cmp
xchg
xchg
iret
ficomp
pushf
ficom
mov
jecxz
retf
jbe
sahf
push
ficomp
lods
rcr
xchg
icebp
lahf
std
sbb
add
int3
xchg
cmp
jecxz
cmp
lahf
dec
jmp
sar
inc
sub
rcl
rcr
das
pop
imul
sub
sbb
sbb
pop
pop
and
mov
sbb
sub
fistp
jns
push
stc
fidiv
repnz
fcomp
(bad)
out
loop
jle
imul
sbb
leave
hlt
popf
cwde
cmp
lea
add
lahf
inc
repz
aam
fadd
jl
cmp
fcmovne
ins
iret
shl
je
shl
dec
iret
adc
push
fdivr
das
(bad)
sbb
imul
leave
mov
inc
in
inc
sbb
push
ins
inc
xor
mov
jne
and
inc
inc
mov
into
in
and
sbb
rcr
add
jl
sub
dec
jl
jge
mov
popf
jmp
je
sti
sub
out
jmp
pop
mov
mov
mov
push
retf
jns
jle
test
in
fcom
push
and
pop
push
sub
adc
call
sub
cli
shr
ins
sti
fld
lods
fstp
aad
jae
fdiv
fxch
push
sbb
stc
(bad)
leave
fdivr
call
dec
lahf
pop
xchg
xor
sub
xchg
xor
repz
into
inc
add
ins
and
fild
or
sbb
pusha
inc
ss
push
mov
stos
and
sbb
xor
add
pop
sbb
fstp
std
cdq
pop
in
sub
(bad)
pop
fisttp
lods
shr
or
sbb
adc
test
frstor
mov
inc
xchg
mov
xchg
jno
addr16
fwait
ror
popf
lods
pop
ins
push
mov
fld
aam
fnsave
inc
iret
int
pop
fld
sub
ficomp
sbb
cwde
pop
adc
lods
push
sbb
popf
push
adc
sahf
mov
pop
aad
dec
stos
fnsave
iret
int3
lods
fstp
xor
sti
adc
(bad)
fld
adc
pushf
sbb
lea
mov
test
mov
or
fmul
adc
xor
adc
leave
dec
stos
mov
mov
add
fstp
and
sbb
jle
sbb
xor
fstp
push
mov
lods
sub
fiadd
cwde
ficom
in
mov
pop
sar
cmp
js
out
std
mov
jmp
rcr
sbb
test
jo
sahf
mov
mov
cmp
es
or
lahf
sub
lods
mov
sub
xor
sub
inc
pop
nop
ret
out
pop
(bad)
fcmove
mov
sub
jp
fsub
adc
push
pop
jg
or
jbe
pushf
retf
sbb
vmovupd
ret
sbb
sbb
and
push
fcomp
outs
test
xchg
mov
iret
jns
out
adc
mov
rcl
jge
fstp
cmp
or
addr16
idiv
and
arpl
hlt
cmp
pushf
cmp
mov
dec
fmul
mov
jp
in
sub
std
sbb
movs
xchg
pushf
(bad)
mov
test
dec
pop
sub
or
fs
add
add
inc
pop
jno
pop
mov
pop
sbb
push
das
mov
frstor
cmp
lea
push
cmp
in
(bad)
(bad)
int
fstp
cmp
ficomp
adc
jle
xchg
mov
add
xor
lds
lods
mov
popf
retf
xor
sbb
in
stc
fcmovb
loope
mov
movs
(bad)
cmp
leave
in
mov
xor
scas
div
adc
gs
xchg
sbb
in
mov
push
fstp
and
sub
arpl
add
cmp
mov
push
push
iret
push
sub
adc
pop
pop
fld
or
sbb
sbb
cwde
int
jmp
xchg
dec
xchg
sbb
(bad)
loope
xchg
fldenv
rol
pop
(bad)
dec
and
mov
xlat
dec
sbb
jne
mov
sub
outs
lea
sbb
sbb
or
lds
adc
data16
aas
jg
movs
mov
xlat
(bad)
test
jmp
cdq
(bad)
push
jae
sar
mov
cs
cmps
mov
les
scas
(bad)
mov
hlt
repnz
aad
popf
outs
rcr
std
lahf
jmp
in
in
pop
movs
fnstsw
mov
popf
mov
fldenv
adc
ss
out
shr
fimul
add
jne
data16
inc
jae
sub
sbb
pop
adc
inc
adc
sbb
pop
inc
repz
adc
sbb
cmp
popf
xor
or
xchg
leave
pushf
xchg
cmp
shr
in
or
pop
adc
jp
leave
pop
cmp
jnp
pop
in
pop
lds
pop
fisubr
cmps
mov
ret
(bad)
sbb
rcr
inc
adc
and
sbb
lods
push
cdq
and
jge
add
push
es
push
pop
pop
std
sbb
test
fnstcw
fisub
inc
fstp
ret
pop
in
ror
adc
and
ins
sbb
jg
call
cdq
lahf
or
lods
mov
mov
data16
mov
popf
mov
popa
scas
fld
mov
int
push
sbb
and
lds
rcr
call
sbb
or
and
je
pop
enter
(bad)
cmp
cmc
pop
shl
pop
sar
mov
fstp
cmps
xchg
lahf
imul
cdq
nop
add
adc
ins
sahf
cmc
pushf
fnstcw
mov
cmp
addr16
jecxz
or
add
pop
loope
(bad)
lea
fcmovnu
mov
scas
iret
shl
xor
lods
inc
adc
or
scas
inc
sbb
es
and
push
cmc
scas
sub
dec
fucomp
(bad)
or
test
cs
std
push
jns
shl
cwde
xchg
pop
adc
in
xchg
(bad)
cmp
test
add
jns
in
hlt
xor
sbb
xchg
sub
cmp
inc
out
cdq
fistp
jb
xor
ins
push
mov
or
pop
or
mov
fwait
jg
adc
mov
(bad)
jmp
dec
in
aad
mov
xchg
loope
stos
nop
pop
cs
and
jge
dec
push
int
ror
mov
sub
and
mov
mov
lahf
fstp
cmp
cli
pop
push
bound
fdivr
xor
xor
adc
fnstenv
aad
mov
cmp
adc
jge
fadd
retf
(bad)
mov
xchg
xchg
mov
outs
fld
test
sbb
jne
sbb
cmc
cmps
mov
popa
xchg
imul
xor
fidiv
mov
out
mov
neg
xchg
pop
cdq
jae
xchg
mov
cmc
jne
xchg
adc
imul
ja
rol
or
and
xchg
icebp
retf
sub
lods
mov
mov
adc
jmp
mov
xchg
cdq
sbb
and
pop
xchg
fcmovnb
aad
jbe
push
jae
pop
(bad)
sar
popf
imul
mov
dec
jge
pushf
in
sub
jge
fistp
lea
mov
dec
mov
movs
cmp
movs
dec
sbb
cwde
rcl
inc
fcmovnbe
fistp
lea
in
sub
retf
(bad)
popa
shr
stc
sbb
dec
adc
jb
fxtract
fcmovne
cmp
lds
adc
pop
jns
fidivr
jo
jno
in
dec
rcr
dec
adc
sub
rcr
ror
inc
les
jl
jo
mov
les
push
mov
sbb
std
mov
jmp
fcom
xor
pop
mov
push
fmul
adc
pop
mov
fimul
fsub
idiv
push
pushf
adc
(bad)
sbb
in
std
and
sbb
mov
adc
pop
pusha
fwait
and
dec
push
or
jecxz
pop
int
gs
shr
jecxz
pop
fisubr
in
dec
xlat
in
jl
mov
jmp
in
inc
pushf
shl
ficom
jg
cwde
mov
cwde
sbb
push
sbb
xchg
pop
sbb
and
mov
and
fsub
and
inc
or
imul
loop
add
call
das
xor
ret
sbb
imul
push
jp
fstp
ds
into
xchg
repnz
cmp
sbb
fst
cmp
(bad)
adc
mov
lds
nop
dec
sub
and
mov
nop
xchg
clc
rcr
stos
leave
mov
call
fisub
push
adc
aad
add
pop
jg
(bad)
cmp
jp
nop
lock
lea
and
out
sbb
pop
pop
push
sub
or
pop
or
jne
(bad)
adc
test
mov
pop
out
rcl
pop
lods
add
ficomp
ss
outs
sahf
enter
push
jle
cwde
pushf
xchg
call
mov
mov
scas
lea
adc
xchg
cdq
push
xchg
sbb
push
push
fisttp
movs
(bad)
adc
mov
rcl
fsubr
in
jecxz
popf
test
adc
adc
push
adc
cpuid
pop
popf
add
sbb
ret
out
jl
jnp
std
or
pop
fdiv
fcomi
shl
sbb
enter
repz
pop
imul
fcomp
aad
cmp
xchg
mov
xchg
pusha
mov
(bad)
(bad)
(bad)
xchg
xchg
mov
es
nop
idiv
mov
rcr
je
ror
dec
dec
(bad)
mov
xlat
adc
mov
and
into
or
loopne
add
pop
adc
add
repnz
jae
mov
movs
or
inc
inc
adc
add
or
jecxz
mov
jmp
jecxz
pop
sti
shr
(bad)
int
mov
in
pop
add
sbb
mov
xor
cmps
pop
or
sub
mov
ins
aam
inc
ja
cmp
pop
(bad)
mov
xchg
mov
iret
sbb
cmp
mov
repnz
sbb
add
pop
cli
push
adc
inc
mov
add
sbb
or
or
xchg
shl
imul
enter
mov
aam
mov
ret
fsubr
mov
enter
mov
int3
out
les
cdq
(bad)
adc
pushf
sahf
mov
or
(bad)
loopne
lahf
ins
jecxz
(bad)
cmc
sbb
call
sub
out
and
or
(bad)
shl
sar
dec
jge
push
test
add
sub
mov
inc
ins
or
mov
cld
cmp
or
cmps
call
push
aad
and
cmps
sbb
enter
mov
push
rcr
enter
out
mov
dec
nop
ja
icebp
mov
adc
leave
inc
xchg
jp
(bad)
call
stos
lahf
iret
jge
or
push
or
and
fmul
lock
mov
fisub
rcl
cmp
pop
sub
mov
dec
les
test
jl
ins
add
sbb
and
hlt
cmc
pop
int3
pop
lock
mov
call
(bad)
int3
pop
enter
push
inc
inc
inc
mov
(bad)
sbb
movs
movs
push
shr
sbb
fyl2xp1
loopne
mov
jp
repz
lods
mov
loopne
mov
mov
pushf
in
xor
retf
sub
in
stc
pop
dec
ins
aam
push
dec
sub
add
inc
mov
int
imul
retf
cmp
out
loope
push
retf
adc
or
jmp
jl
retf
and
call
inc
ins
shr
stos
aaa
jae
ret
in
mul
mov
cwde
aam
retf
xor
dec
push
out
xchg
push
push
stos
call
sbb
xor
arpl
cdq
dec
loop
jecxz
retf
add
or
sub
test
and
xor
(bad)
ja
adc
gs
or
std
aaa
sar
aas
popf
sbb
sbb
sub
sub
lahf
ds
push
(bad)
push
out
push
aaa
xchg
lahf
or
mov
pop
out
in
lahf
retf
jmp
mov
int
ja
(bad)
pop
in
iret
int3
dec
(bad)
loop
in
ins
out
add
jecxz
mov
setge
or
call
iret
jmp
das
and
dec
outs
(bad)
sbb
dec
shl
mov
mov
cs
les
std
sahf
jle
add
push
hlt
dec
hlt
jae
jne
aad
scas
or
dec
call
and
icebp
scas
adc
sahf
fist
mov
cmps
scas
mov
xchg
setp
cli
loop
hlt
movs
scas
in
inc
fmul
dec
push
push
aas
sbb
test
dec
ss
mov
jbe
push
or
das
jnp
sub
cmp
dec
pop
outs
adc
lea
inc
cld
das
push
sbb
mov
mov
dec
int
mul
dec
inc
lock
ds
daa
cmp
jg
push
sub
daa
lods
cmp
adc
out
xchg
cmc
aas
lahf
xchg
mov
mov
sub
shr
pop
fsubr
fidivr
pop
xor
lahf
dec
das
cwde
(bad)
loop
fimul
push
sub
or
(bad)
cli
imul
pop
sbb
sub
scas
xor
dec
(bad)
xor
xor
(bad)
xor
jae
loope
pop
shl
out
mov
cmp
cmc
mov
test
dec
ret
addr16
lea
(bad)
cmps
push
mov
rcl
pop
mov
dec
pop
mov
cmp
jmp
(bad)
mov
adc
jo
daa
xchg
call
cmc
pop
shr
mov
das
loope
jno
sbb
das
outs
cmp
or
in
in
out
cmp
inc
mov
call
mov
mov
aas
rcr
inc
cmp
(bad)
lahf
icebp
xlat
mov
xchg
mov
sti
sar
mov
iret
lahf
xchg
jg
sti
out
clc
inc
sbb
mov
iret
jle
mov
aas
add
mov
add
iret
mov
aas
mov
push
popf
sbb
outs
cdq
dec
push
mov
or
rcr
mov
out
mov
(bad)
mov
aas
lods
shl
xor
shl
and
inc
push
cmc
(bad)
sub
jmp
fnstsw
cmp
mov
lods
mov
test
add
addr16
(bad)
lahf
dec
test
sub
ja
fs
sbb
(bad)
fmulp
test
sub
dec
loope
lock
fucomi
pmaxsw
movs
ds
cmp
sub
inc
lea
fist
pop
add
in
fisttp
test
xchg
mov
hlt
and
bound
iret
mov
cmp
mov
addr16
fisttp
mov
sub
xchg
xchg
jmp
mov
shl
fucom
out
push
dec
mov
out
cmps
(bad)
sub
inc
mov
mov
jg
daa
out
cdq
adc
add
mov
pop
test
mov
les
lock
or
mov
out
into
mov
cdq
movs
jne
ret
lock
fisttp
xor
mov
mov
rcr
lea
mov
mov
lahf
sub
xchg
mov
cmovns
scas
cmp
call
lahf
mov
in
jne
sti
cmp
mov
ds
push
add
sbb
sbb
imul
in
mov
(bad)
push
fst
mov
les
rcl
arpl
or
and
pop
in
(bad)
fist
in
pop
in
xor
push
inc
int3
cmps
mov
mov
xchg
xchg
pop
lahf
cmp
lea
adc
jae
daa
or
(bad)
ds
mov
(bad)
addr16
xchg
iret
into
scas
les
mov
jmp
aas
aas
sub
xchg
shl
mov
pop
dec
lods
or
push
js
aas
or
xchg
fldln2
mov
xchg
push
loopne
mov
idiv
sub
outs
pop
or
ret
and
test
aaa
lea
mov
fbld
add
push
out
pop
ins
hlt
fdiv
in
jg
daa
sti
movs
in
xchg
js
lods
cmp
ds
push
pop
and
mov
inc
imul
in
std
out
loop
and
push
sub
mov
cdq
sub
and
iret
xor
lods
or
push
mov
rol
lahf
arpl
dec
push
pop
mov
mov
add
loopne
cmps
ret
or
repz
shr
push
push
scas
in
pop
cli
vmread
mov
mov
inc
or
fstp
lahf
icebp
dec
mov
pop
aas
lock
hlt
mov
mov
mov
out
jnp
xchg
xchg
(bad)
mov
xor
mov
out
xchg
aaa
mov
add
mov
pusha
mov
not
shl
out
xor
pop
cmps
ds
sub
aaa
enter
mov
inc
iret
mov
aas
out
enter
(bad)
mul
sbb
and
mov
or
push
pop
sbb
outs
psllw
jmp
das
call
ror
sbb
xor
pop
stos
ins
xchg
mul
cdq
bswap
pop
clc
cmps
pusha
add
scas
retf
pushf
xchg
out
mov
sub
std
push
fild
xor
retf
fcmovnbe
jne
daa
jle
std
sub
daa
jne
cmp
(bad)
aad
add
inc
(bad)
sub
push
xlat
rcr
(bad)
aas
loopne
ss
movs
mov
mov
inc
out
shl
pop
ins
out
ins
cdq
mov
mov
dec
mov
fsubr
mov
pop
xchg
outs
dec
lahf
in
mov
hlt
xchg
test
mov
mov
inc
mov
test
xlat
dec
mov
and
shr
mov
int3
inc
ret
mov
out
jmp
cmps
push
aas
and
jg
mov
add
jg
outs
cli
cmps
inc
hlt
rol
fdivrp
daa
pop
sub
mov
pop
and
pop
cli
jne
mov
lahf
lahf
lea
scas
(bad)
mov
in
lahf
xchg
jns
xchg
or
scas
test
iret
jle
movs
jmp
mov
idiv
dec
(bad)
cwde
lahf
outs
fild
int
(bad)
cs
(bad)
mov
mov
pop
sbb
scas
psubsw
pop
pop
daa
out
or
xchg
cli
dec
fsubr
call
mov
mov
cmp
shr
dec
rcl
call
imul
jge
neg
lods
lahf
mov
bound
xchg
mov
jmp
sti
shl
(bad)
xor
and
aas
aas
jle
and
fcmovnbe
jae
pop
mov
jg
dec
test
stc
pop
sbb
push
mov
push
inc
dec
or
imul
add
(bad)
sar
push
mov
jns
mov
sub
dec
stc
mov
jnp
inc
(bad)
in
jmp
stos
(bad)
cwde
test
mov
mov
out
nop
jecxz
jmp
stc
mov
daa
sub
(bad)
pop
aas
scas
hlt
and
(bad)
rol
aas
aad
fadd
aaa
retf
retf
fsubp
sti
daa
out
sbb
xor
out
popa
aaa
cmp
ins
mov
sbb
or
mov
outs
out
push
fstp
jo
cld
mov
ret
mov
push
fcmovu
mov
jmp
scas
sti
div
xchg
fucomip
in
jmp
outs
clc
pushf
mov
mov
aas
mov
scas
(bad)
mov
in
out
sbb
pop
mov
scas
rcr
mov
mov
xchg
jmp
dec
ds
or
push
das
cmp
xlat
(bad)
into
xchg
adc
ds
add
cmp
out
sub
scas
mov
pushf
das
lds
aad
fisub
in
iret
in
cmp
scas
in
iret
fist
scas
xchg
mov
into
pop
popf
pop
lahf
cwde
aas
lea
(bad)
fisttp
in
ror
ja
lahf
sub
xor
out
int
mov
jg
sar
jmp
das
out
rcl
imul
cmps
scas
rol
pop
mov
iret
add
ja
loopne
pop
fild
popf
daa
fistp
mov
aad
xchg
fdivr
lds
loope
jmp
xchg
cmps
dec
scas
les
mov
cmp
das
scas
sahf
mov
mov
stc
lods
in
fcos
loope
lods
pop
push
das
pop
out
cmp
ret
fdivr
enter
stc
xchg
stc
aaa
std
jp
je
xchg
sbb
or
aaa
addr16
xor
cmps
aas
lahf
popf
pop
outs
pop
add
or
dec
test
pop
cld
jmp
fnstcw
dec
pop
in
sub
xchg
mov
mov
fwait
pop
lds
into
dec
inc
mov
icebp
push
mov
das
sub
sahf
(bad)
and
mov
mov
dec
cli
dec
(bad)
out
lahf
out
ficom
fst
cmps
inc
pop
daa
mov
push
enter
ins
jle
stc
(bad)
into
xlat
std
xor
jecxz
pusha
xor
mov
repz
das
pop
xchg
sbb
das
(bad)
adc
push
test
fcomip
pop
sahf
out
cmps
inc
pop
das
scas
ret
pop
aad
push
pop
in
les
mov
(bad)
das
loop
dec
lahf
cmc
pop
out
sub
mov
pop
or
pop
repnz
fbstp
das
cmp
pop
jno
ss
into
aaa
dec
jmp
ja
(bad)
popf
jg
iret
stc
fist
imul
das
push
add
jl
jno
jo
xor
push
cli
fsubr
out
int3
fistp
stos
cmp
xor
lods
dec
(bad)
les
retf
mov
cmp
mov
mov
shl
mov
mov
cmp
fsubr
les
jmp
std
mov
push
in
shl
int3
sbb
cmp
ret
int
fcom
(bad)
adc
sar
jmp
ss
dec
daa
mov
xor
sbb
xor
stos
jnp
mov
cld
ficomp
mov
cld
int3
(bad)
ret
fiadd
mov
loope
bound
sbb
mov
mov
mov
clc
cwde
xor
jo
mov
mov
pop
fcmovu
xor
cmp
push
sbb
fadd
fcom
es
mov
fsqrt
icebp
loop
into
pushf
or
lahf
call
sbb
jge
sbb
outs
cmp
mov
mov
loop
pop
jg
cwde
mov
mov
or
fdivr
fiadd
jecxz
(bad)
sahf
jecxz
bound
js
pop
xor
mov
sub
mov
dec
fdivrp
jle
mov
fisubr
loop
and
or
cli
fsubr
dec
push
div
cli
cld
cld
jmp
adc
ss
add
or
sbb
mov
clc
xchg
jl
in
pop
cmp
cmp
mov
cli
mov
scas
stos
fcomp
js
in
jmp
xchg
sbb
aaa
mov
fcomp
or
cld
nop
xor
js
jp
addr16
pop
mov
leave
jl
dec
mov
call
pop
fisub
fcmovbe
cmps
in
xor
jb
cli
mov
out
xor
or
cmp
sbb
inc
popf
push
bound
cld
push
fbstp
mov
(bad)
jmp
mov
mov
mov
movs
ror
clc
push
cld
(bad)
js
mov
push
dec
mov
fdiv
call
add
cwde
xchg
cwde
push
clc
pop
test
jmp
fld
pop
xor
fnstcw
loope
xchg
rcr
fild
(bad)
cld
sti
xchg
bnd
sti
ds
and
or
cmc
add
inc
call
inc
aam
cmp
sbb
inc
jns
loop
cmp
cmp
jae
lock
mov
pop
mov
cmp
fdiv
cmc
push
repnz
cmc
xor
mov
xchg
mov
mov
loopne
stc
mov
loope
dec
sbb
shl
cld
or
cmp
retf
cld
xchg
mov
(bad)
cmp
nop
repnz
mov
cmp
xor
cmp
retf
add
sub
(bad)
cli
mov
ins
jecxz
inc
mov
push
call
fdiv
iret
and
stc
mov
xor
mov
(bad)
clc
add
sti
mov
xchg
enter
mov
cli
fcomp
mov
push
stc
dec
leave
aad
bnd
cmp
xor
jl
out
enter
call
sub
add
rol
cmp
aaa
or
xor
out
xor
or
sahf
cmp
xor
hlt
cld
xchg
jmp
mov
sub
sar
mov
cwde
mov
jbe
cmp
cmp
pop
mov
push
xor
cld
inc
std
nop
dec
icebp
jmp
call
and
cli
das
les
cmp
in
fsubr
in
add
stc
adc
in
ins
jp
cld
lock
mov
xor
jg
aas
pop
inc
xor
js
scas
hlt
xor
sub
(bad)
sar
sahf
in
(bad)
or
scas
pop
mov
jge
in
pop
cli
rcr
sub
mov
out
sub
call
mov
mov
mov
es
mov
mov
add
aas
jecxz
push
pushf
ss
mov
or
clc
(bad)
jge
shr
clc
mov
cli
xor
neg
xor
lods
aas
cmp
rol
cmc
sahf
stc
cmp
(bad)
xchg
pop
and
loopne
mov
mov
jl
xor
test
les
jmp
add
iret
dec
mov
cmp
cmp
out
stc
pushf
sti
(bad)
xor
lock
(bad)
in
add
pop
jp
sub
aaa
ret
retf
sbb
sub
(bad)
(bad)
sbb
and
sbb
mov
cmc
(bad)
cmp
les
movs
std
lods
shl
cmp
movs
sub
stc
mov
lahf
jge
dec
loop
xor
cld
dec
repz
push
(bad)
mov
mov
std
mov
mov
inc
clc
scas
cmp
js
jge
in
mov
adc
xor
cmp
pop
xor
xchg
shr
jge
mov
fwait
pop
loopne
scas
cmp
aas
push
lea
stc
pop
(bad)
test
in
sub
cdq
mov
mov
stos
cwde
(bad)
cmp
shl
(bad)
clc
jno
jno
xchg
xor
mov
pop
jmp
icebp
dec
stc
inc
std
retf
jne
cli
jne
jno
jmp
sbb
mov
ins
enter
(bad)
cmp
test
lock
popa
sub
add
xor
or
in
jl
mov
dec
jno
mov
pop
mov
mov
mov
pushf
popa
xchg
jge
(bad)
in
call
inc
cmc
stc
(bad)
cmp
popf
mov
xor
jge
pop
mov
in
jnp
cmp
cmp
add
adc
sbb
clc
cmp
in
clc
mov
xchg
jno
std
dec
je
xor
cmp
or
loopne
lock
sbb
icebp
icebp
int
(bad)
xchg
mov
mov
mov
pusha
mov
cld
repz
lock
inc
std
int
xchg
fcomp
adc
mov
mov
mov
jge
imul
lods
clc
cmp
push
std
(bad)
stc
adc
daa
mov
and
ins
mov
and
sbb
push
repz
hlt
dec
push
popf
or
out
sub
icebp
jp
loope
mov
sub
cmp
adc
dec
icebp
stc
lods
sbb
mov
ret
sbb
sub
xchg
repz
ret
cdq
shl
push
mov
cmp
shl
dec
icebp
mov
(bad)
and
cld
jg
and
sub
iret
and
gs
or
mov
popa
hlt
and
fadd
sub
cmp
xor
jg
(bad)
std
icebp
dec
clc
add
sar
cmp
and
mov
mov
mov
inc
popf
cli
loopne
shl
(bad)
jmp
sar
test
repz
jmp
idiv
stc
dec
std
pop
mov
lds
ds
ds
mov
add
clc
int
xchg
ja
or
jecxz
and
cmp
shl
popf
xchg
jns
(bad)
retf
add
dec
mov
mov
pop
mov
mov
fadd
push
mov
and
inc
std
scas
mov
xlat
sbb
sub
sub
xor
pop
mov
sub
popf
gs
out
repnz
jl
stc
jmp
aas
int
inc
sbb
jmp
add
inc
stc
loope
jecxz
lock
std
mov
xchg
stos
cmp
sbb
inc
into
int
or
mov
or
mov
mov
mov
mov
cmp
mov
std
into
stc
hlt
call
stc
hlt
jne
cwde
mov
test
sub
fadd
or
jge
stc
lock
enter
icebp
cmp
dec
sub
pop
mov
cdq
in
stc
cmp
add
jmp
xchg
lock
fnstsw
sbb
lock
aas
leave
mov
cmp
call
xor
mov
in
jmp
stos
sub
mov
cmp
cld
jge
mov
div
sti
cld
(bad)
xor
mov
loopne
mov
mov
scas
std
mov
sbb
(bad)
std
call
std
std
out
sti
fistp
call
sbb
lods
push
mov
cdq
adc
shr
in
loope
aaa
leave
aas
jo
es
cmp
xor
and
cmp
std
out
lea
jecxz
cli
xchg
stc
icebp
cmp
out
jns
dec
es
cmp
lods
cmp
int
jle
int
dec
jge
add
mov
lock
addr16
lods
stc
in
call
repz
dec
in
or
xor
cmp
(bad)
cmp
cmp
sbb
pop
mov
jo
cmp
cmp
std
aaa
cmp
icebp
xor
jp
in
cdq
fcom
dec
bnd
jge
imul
movs
in
cmp
mov
cdq
mov
cli
adc
aam
add
test
cmp
jno
xchg
mov
shr
repz
jge
xor
cld
and
pop
sbb
xor
jo
mov
inc
icebp
in
loop
(bad)
(bad)
rcr
popa
or
and
mov
in
inc
(bad)
sbb
out
cwde
cmp
std
sti
sbb
stc
aaa
loopne
lock
jnp
mov
lahf
cmp
add
sbb
mov
loope
icebp
mov
fstp
push
clc
xchg
cmp
aaa
std
fnsave
repz
add
std
cmp
cmp
fnstsw
mov
mov
lahf
(bad)
mov
int3
stc
out
ins
and
pop
cmp
std
cmp
xor
jno
lds
jno
popf
(bad)
xchg
stc
into
fst
xor
mov
mov
inc
mov
idiv
test
sbb
ins
mov
cmp
cmp
jne
inc
std
jmp
stc
test
inc
dec
aas
push
jns
fnstsw
xor
sub
mov
shl
int
movs
jns
pop
and
pop
jle
std
mov
cmp
push
test
fld
mov
xchg
mov
mov
xchg
(bad)
jnp
mov
and
mov
mov
in
pop
std
in
rol
popf
jle
dec
dec
pop
icebp
jmp
jge
sar
cmp
mov
xor
adc
push
jge
popa
icebp
in
std
cli
rcl
mov
xor
in
add
call
div
neg
sbb
popa
stos
aad
mov
or
test
stc
jmp
aad
stc
and
popf
mov
cld
mov
test
rcl
stc
sar
out
lock
fucom
dec
stc
lahf
pushf
xor
xor
cmp
cmp
jns
punpckhwd
sbb
les
repnz
lock
mov
(bad)
popa
or
xor
stc
aas
jg
xor
jns
stc
jge
jg
test
jno
aad
scas
loope
cmc
icebp
stos
jne
icebp
mov
cli
pop
js
mov
cld
scas
fyl2x
aad
hlt
fwait
popf
mov
mov
jo
cmp
mov
icebp
jmp
in
cli
leave
adc
add
ror
aaa
push
jge
stc
xor
sbb
sti
cmp
xor
dec
pushf
and
and
jle
inc
popf
ins
cdq
push
rcr
mov
sbb
xor
iret
loopne
adc
mov
popf
or
mov
mov
xor
jge
ret
mov
pop
mov
mov
test
test
rol
cli
std
cld
iret
icebp
repnz
hlt
int
shl
sub
sbb
fstp
push
fst
icebp
dec
xlat
cdq
(bad)
std
sahf
cmp
fidiv
mov
cmp
cmp
icebp
xor
cmp
add
(bad)
jmp
mov
in
jns
xchg
popa
pop
cmp
ins
mov
cmp
cmc
lock
lock
push
sub
and
aad
cdq
std
sti
mov
(bad)
jge
mov
jno
iret
sbb
dec
mov
addr16
gs
jne
pop
cmp
sbb
inc
(bad)
mov
popf
sti
std
stc
shl
add
cmp
pop
ds
xor
cs
sbb
cmp
stc
scas
mov
inc
stc
stc
ins
and
lods
popf
mov
stc
cmps
icebp
inc
xchg
lods
stc
add
jmp
aad
sar
test
in
dec
mov
std
lods
clc
aam
cmps
repz
cmp
cmp
sub
sub
and
popf
add
cli
out
mov
add
idiv
imul
mov
xor
mov
in
mov
jns
mov
icebp
popf
cld
stos
and
cmc
mov
xchg
mov
mov
(bad)
cmp
jno
jge
dec
clc
sbb
aad
or
mov
mov
mov
(bad)
call
loope
pop
and
fnstsw
add
sub
cmp
jns
popf
cld
mov
mov
shl
xor
daa
cmp
ficomp
jmp
out
sbb
in
jo
test
cdq
and
mov
mov
out
popf
xchg
adc
add
sahf
jge
stc
neg
lods
or
push
popa
mov
mov
mov
adc
jmp
icebp
dec
jnp
dec
clc
inc
push
popa
add
aas
aaa
mov
or
cmp
add
mov
cmp
or
shr
rcr
loopne
or
cmp
cmp
in
jmp
and
fcomip
movs
cmp
sub
cdq
mov
scas
mov
push
test
mov
cli
jne
call
mov
mov
fidivr
mov
frstor
std
xor
jecxz
sti
xor
dec
iret
cdq
std
inc
and
cmp
mov
pop
std
cmp
sbb
mov
retf
stc
loopne
and
and
xchg
(bad)
repz
(bad)
(bad)
data16
mov
jbe
out
mul
out
rol
or
or
and
out
imul
neg
cld
cmp
xchg
shl
mov
outs
jge
xchg
out
rcl
push
hlt
dec
loopne
loope
or
push
xor
xchg
add
std
push
stc
adc
stc
inc
movs
data16
jo
ds
xor
ss
inc
xlat
test
pushf
les
ret
lahf
ss
cmc
lock
mov
mov
(bad)
cdq
ficomp
jbe
pop
adc
cmc
inc
jge
loope
pop
mov
nop
mov
faddp
or
les
(bad)
cmp
mov
call
call
lea
add
sbb
sti
clc
test
mov
mov
and
jo
sbb
ds
shl
xchg
cmps
cmps
cmc
pop
jbe
push
jne
sbb
push
out
in
cmp
movs
scas
mov
mov
xor
test
mov
dec
daa
lock
je
xchg
(bad)
hlt
mov
lock
sub
mov
mov
iret
test
fisub
fcom
adc
shl
loope
cmp
mul
mov
cs
div
mov
or
out
shl
call
out
out
cmps
je
das
ds
cwde
xor
les
lock
cld
push
cld
mov
lds
cli
stc
xchg
cmps
xor
and
sbb
mov
cmc
shl
jmp
out
(bad)
fimul
mov
mov
mov
inc
loopne
jp
les
jbe
xchg
jne
push
mul
loop
jne
jp
das
inc
mov
xchg
push
js
xor
rol
push
and
scas
icebp
mov
div
repz
retw
xchg
mov
inc
and
pop
(bad)
gs
mov
inc
inc
test
frstor
xchg
mov
mov
jbe
sbb
call
(bad)
call
jmp
xchg
add
dec
mov
int
or
imul
xchg
cs
xchg
retf
adc
imul
xor
jbe
or
mov
test
stos
ficomp
sub
and
adc
and
mov
xor
in
xchg
into
call
fdivr
int
int3
call
sar
sub
adc
jl
inc
cmp
inc
rcr
cmp
sbb
pop
jnp
pushf
clc
cmp
shl
cli
push
call
cmp
and
sbb
xor
jecxz
or
dec
loop
push
fdivr
or
mov
and
add
(bad)
int3
dec
dec
mov
lds
sub
loop
retf
pushf
jmp
ficomp
and
test
mov
in
mov
push
mov
mov
enter
mov
sub
cli
mov
fisubr
or
jns
cld
lods
(bad)
jmp
lods
cld
popa
mov
push
inc
adc
pop
xchg
and
pop
or
jb
shl
jmp
mov
dec
add
cmp
fstp
pop
ror
leave
mov
int3
loop
out
repnz
(bad)
mov
in
nop
clc
loop
(bad)
in
dec
std
movs
and
test
je
out
ret
test
int3
mov
push
mov
xchg
(bad)
(bad)
iret
lock
cmp
into
and
push
cli
adc
adc
xor
pop
add
push
and
adc
ds
push
std
addr16
loop
call
leave
nop
sub
cmp
shr
test
push
popf
fcmovbe
mov
pop
in
ret
int3
mov
lea
mov
sbb
push
mov
clc
mov
jecxz
jmp
nop
jmp
or
daa
call
stc
cmp
mov
cs
sahf
sub
push
mov
jmp
dec
cli
inc
mov
sbb
mov
adc
fidivr
cmp
inc
bswap
push
cwde
test
jb
(bad)
pop
cmp
test
adc
mov
pop
or
adc
loopne
loope
inc
out
add
mov
enter
cmp
mov
add
adc
push
stc
cld
fdiv
dec
retf
pushf
jmp
sbb
sbb
jp
add
repnz
out
add
adc
push
and
sub
rcr
ror
dec
and
retf
test
(bad)
div
loop
into
daa
pop
scas
call
cmp
mov
mov
fild
pop
xchg
cwde
sti
cdq
cmovg
mov
sbb
mov
iret
dec
ror
imul
out
ret
sti
imul
and
push
xchg
adc
cmps
adc
push
add
push
jns
adc
retf
adc
push
addr16
ud2
out
scas
jecxz
adc
stos
shl
scas
cmp
stc
or
les
and
rcr
sahf
jecxz
aaa
jb
iret
cmps
aaa
sbb
scas
ret
cwde
inc
lahf
mov
call
push
pop
fimul
(bad)
cmp
pop
std
xlat
shr
popa
call
test
add
cs
xor
and
or
pop
push
daa
aad
adc
jecxz
or
mov
icebp
sub
sub
lds
inc
xlat
sbb
jecxz
cli
outs
push
lds
out
cmps
call
lods
inc
movs
or
mov
xchg
ret
scas
xlat
sub
or
mov
test
pop
daa
mov
in
xlat
fcomp
std
pop
shl
fld
xor
pop
cmp
sbb
int3
xchg
pop
jg
push
sbb
stos
push
iret
mov
in
out
retf
sti
pop
ficom
ret
ror
fxch
retf
in
shl
add
ret
repnz
push
sbb
fldcw
int
pop
xchg
imul
mov
rcl
dec
dec
ja
push
scas
fwait
stos
imul
aam
pop
(bad)
mov
push
lods
mov
(bad)
dec
inc
int3
xchg
mov
mov
stos
daa
ret
jg
add
(bad)
push
xchg
pop
sbb
dec
or
repz
(bad)
jnp
in
iret
and
clc
dec
ret
pop
xchg
sub
xlat
xor
mov
mov
pop
xrelease
pop
repnz
retf
test
clc
into
and
cmps
pop
and
sahf
push
test
adc
cmp
int3
daa
cwde
out
sbb
pop
adc
aam
add
and
xchg
push
imul
int
dec
sahf
pop
cmp
pop
lahf
leave
inc
popa
sahf
pop
and
add
add
or
xlat
inc
shr
mov
dec
imul
mov
dec
test
jns
out
bswap
(bad)
jb
and
leave
mov
std
std
sbb
cmps
dec
(bad)
adc
test
sbb
jge
(bad)
and
add
or
adc
inc
test
lock
push
in
movs
in
inc
jae
push
les
sbb
or
cli
sbb
push
mov
dec
add
mov
not
(bad)
push
and
sbb
or
out
add
test
(bad)
rcr
push
out
pop
call
out
(bad)
arpl
sbb
xchg
push
test
mov
repz
adc
movs
inc
lock
xchg
dec
sub
sbb
dec
pop
jmp
pop
rcl
mov
gs
mov
add
(bad)
daa
mov
scas
fstp
daa
jmp
pop
xchg
and
icebp
aaa
lds
(bad)
and
sbb
fsub
or
or
vcvttss2si
inc
(bad)
mov
jno
lds
out
(bad)
mov
inc
mov
sbb
jbe
xor
adc
and
bound
push
or
adc
pop
aas
sbb
js
pushf
lods
pop
mov
in
lods
and
fistp
mov
inc
mov
sbb
mov
xchg
mov
lahf
pop
dec
nop
out
out
imul
lahf
adc
(bad)
mov
mov
jl
cmc
or
fimul
fnstenv
iret
push
add
(bad)
aas
loop
or
lods
arpl
out
pop
xchg
fcomp
test
popf
fisub
mov
xchg
leave
imul
jo
xchg
(bad)
mov
dec
push
or
xchg
mov
cmps
arpl
mov
mov
pop
div
addr16
mov
adc
lock
icebp
loop
repz
adc
fcom
div
push
fisubr
cs
ja
out
adc
mov
add
ins
jb
inc
pop
scas
push
mov
outs
ins
cdq
pop
pusha
cmc
adc
cmp
lds
fsub
or
cdq
pusha
pop
pop
mov
or
test
mov
sbb
lods
push
call
pop
in
add
mov
test
ins
aam
sbb
test
adc
rcl
scas
inc
out
daa
pop
call
sbb
shr
mov
rcl
mov
sbb
push
mov
adc
pop
sub
xchg
(bad)
es
ror
sub
ror
lds
sahf
inc
add
adc
(bad)
xlat
bswap
push
adc
call
add
xchg
dec
popf
out
fstp
lods
mov
div
push
call
cmp
fidiv
clc
test
xchg
add
in
push
mov
dec
jecxz
sbb
ss
push
jmp
or
stc
push
sbb
cmps
pop
xchg
add
dec
inc
mov
xchg
sub
pusha
add
jbe
gs
jb
stos
inc
shl
hlt
xor
mov
sub
xchg
jmp
retf
mov
push
popf
imul
(bad)
pop
sbb
pop
idiv
pop
ret
ret
cmps
dec
fwait
adc
mov
nop
or
(bad)
mov
out
add
stos
dec
cwde
leave
inc
mov
push
out
pusha
call
push
cdq
mov
stc
push
mov
fnstenv
cwde
jno
mov
enter
inc
es
sbb
test
(bad)
push
call
pop
dec
scas
call
ret
xor
out
xor
inc
cs
pop
mov
pop
stc
sti
or
xchg
adc
out
loopne
int3
xchg
dec
or
out
in
aad
jae
imul
jnp
int
mov
sbb
pop
sbb
mov
repnz
xor
into
add
add
addr16
push
aam
js
pop
push
out
sbb
jno
lds
clc
adc
pop
icebp
pop
loopne
push
mov
inc
or
cmc
adc
mov
in
jmp
in
call
lods
inc
push
lock
(bad)
call
pop
adc
movs
fwait
jnp
clc
sbb
dec
adc
lds
loop
add
dec
mov
xor
dec
add
test
or
adc
xchg
lds
(bad)
sbb
adc
or
popf
cld
sbb
push
sbb
jno
push
adc
fmul
xchg
dec
mov
sbb
pop
add
sbb
imul
mov
aam
push
fldenv
in
repnz
dec
mov
and
rcr
sub
mov
dec
adc
mov
xchg
xchg
sbb
dec
cmp
imul
add
push
mov
push
push
(bad)
adc
fwait
jae
lds
xchg
in
imul
(bad)
das
out
inc
add
push
(bad)
sbb
cmp
fistp
mov
sbb
adc
sbb
clc
mov
sbb
xlat
in
fld
loope
push
popf
mov
(bad)
push
jno
mov
or
test
int3
pop
sbb
cli
or
neg
iret
dec
dec
rcr
jnp
cmp
loope
adc
adc
xor
jle
fisub
add
mov
in
or
mov
cdq
lds
mov
cld
and
stc
pop
adc
repnz
fsub
pop
mul
and
aad
jmp
pop
into
popf
ds
stos
xor
inc
dec
xchg
call
add
hlt
or
dec
loopne
pusha
out
sub
cmps
pop
mov
iret
or
jnp
cld
and
(bad)
push
das
jmp
mov
gs
arpl
les
sbb
in
pop
mov
cmps
mov
sbb
xor
dec
add
xor
repnz
sub
(bad)
xchg
push
fwait
cmovle
dec
test
or
adc
pop
(bad)
(bad)
mov
retf
pop
sbb
adc
mov
mov
and
cwde
mov
pusha
fwait
pmuludq
outs
pusha
test
iret
sbb
xchg
push
sub
push
stc
xchg
pushf
imul
jge
jo
inc
and
add
push
aas
mov
push
out
xor
mov
in
out
or
add
addr16
stos
pop
mov
jle
cld
push
aad
adc
dec
mov
adc
adc
pop
and
add
addr16
cmp
daa
mov
inc
pop
mov
retf
frstor
mov
int
mov
bound
mov
sub
pop
or
lods
mov
loope
push
xor
jl
dec
cmp
test
icebp
imul
loop
shl
int
test
pop
movs
add
fbld
in
sbb
(bad)
xor
pop
sbb
imul
fisttp
mov
aas
iret
dec
xor
aas
aad
popf
test
add
pop
xor
xor
cwde
sub
and
sbb
xchg
ds
xchg
inc
xchg
in
sbb
inc
xor
or
fisubr
sbb
lock
rol
rol
ja
stos
dec
test
or
cmps
push
sahf
jl
test
(bad)
leave
leave
daa
shl
sbb
dec
or
call
or
xchg
push
nop
(bad)
sub
or
das
scas
in
jbe
push
xor
ss
fstp
(bad)
cmp
leave
sbb
scas
(bad)
sbb
xor
lahf
repz
sub
and
xor
fwait
sbb
gs
fst
push
add
fld
sub
cmp
(bad)
ins
not
jg
jns
popf
in
xlat
rol
fistp
es
pushf
and
pop
lds
in
je
mov
mov
aas
xchg
movs
dec
or
push
xchg
fnsave
stos
inc
cmp
sbb
outs
pop
mov
inc
test
cmp
ret
shl
jl
fcom
clc
or
into
inc
mov
cmp
or
pop
push
in
add
mov
repnz
enter
jno
bnd
mov
fist
stc
pop
adc
sub
cmp
cld
sbb
pop
sbb
mov
inc
(bad)
jmp
ins
or
add
movs
mov
gs
pop
sbb
mov
scas
mov
mov
jg
push
sbb
ficomp
mov
add
pop
or
pop
cwde
sbb
jmp
rcr
inc
movs
push
push
repz
or
fld
adc
rol
movsx
fdiv
or
or
aas
pop
mov
sbb
jne
mov
ja
cmps
inc
sub
adc
fsubr
or
adc
pop
paddusb
jne
test
into
jo
mov
or
jne
lods
mov
lock
add
lds
xchg
add
mul
movs
jg
add
call
mov
inc
sti
in
sub
mov
cmp
cmps
cld
or
jo
aad
addr16
int
call
inc
mov
push
mov
and
call
mov
outs
xchg
pop
sub
jbe
test
cs
in
dec
jmp
ja
aas
sbb
xchg
sub
cdq
aaa
mov
data16
ret
shl
xor
fild
mov
int3
xchg
out
aas
sti
je
lahf
stos
ins
add
cmc
dec
ds
xchg
add
jnp
fwait
nop
adc
jp
into
inc
jmp
jle
aas
and
xchg
sub
cdq
jne
or
ret
(bad)
jae
add
addr16
xchg
mov
and
cmp
jmp
mov
xor
out
cmps
jae
ret
in
sub
sub
push
(bad)
dec
jmp
outs
ret
repnz
sub
xchg
jb
add
clc
and
xchg
scas
jnp
fwait
loopne
fmul
pop
icebp
push
cmp
sahf
adc
inc
xchg
sahf
pop
sbb
mov
mov
pop
retf
enter
dec
test
push
jmp
jbe
iret
ret
in
je
or
daa
sub
inc
lock
cli
jno
mov
loopne
(bad)
aas
repnz
push
fmul
cmp
pop
jbe
rcl
jae
and
retf
mov
mov
add
ja
rep
std
shl
add
jmp
add
stos
and
pusha
cld
in
or
xor
and
movs
cmp
cdq
jno
and
out
stc
jae
xor
sub
pop
pop
in
dec
xchg
mov
add
jmp
(bad)
gs
es
daa
outs
nop
repnz
fistp
imul
dec
jp
into
pop
sti
jecxz
mov
aaa
(bad)
mov
mov
jbe
mov
scas
fbstp
inc
popa
stos
(bad)
push
ins
sub
das
(bad)
outs
and
lds
mov
cmp
sub
enter
jns
inc
jp
fimul
sti
xchg
aas
or
push
fcom
xchg
out
das
imul
test
push
out
cs
imul
adc
mov
out
arpl
cmp
lea
into
xor
outs
cmps
(bad)
pop
(bad)
fnstenv
rcl
xchg
add
arpl
jmp
fst
daa
or
pop
dec
outs
fbstp
movs
inc
jle
ret
stc
arpl
cmp
(bad)
jb
mov
push
mov
inc
pop
jne
dec
pop
cmc
jne
cmps
pusha
adc
lock
enter
fisttp
mov
lds
jmp
push
hlt
das
xor
sub
mov
ja
loop
(bad)
in
inc
icebp
cmp
ror
mov
imul
cmc
jne
(bad)
mov
out
jmp
mov
sub
push
(bad)
pop
jmp
outs
retf
das
or
loopne
adc
add
sti
xlat
sbb
pop
out
adc
push
pop
into
pusha
call
xchg
into
loop
push
sub
ss
ret
add
xor
sti
cmp
jnp
mov
call
mov
adc
hlt
pop
das
mov
xor
popa
cmps
(bad)
cmp
mov
push
mov
adc
iret
sub
addr16
retf
cli
(bad)
xor
retf
fisub
mov
mov
push
mov
(bad)
fimul
jns
push
inc
(bad)
je
scas
push
push
mov
retf
dec
shl
out
stc
mov
iret
jge
xchg
sub
repnz
jnp
(bad)
(bad)
pusha
sahf
mov
call
pop
cmp
xchg
sbb
mov
lea
mov
hlt
adc
scas
mov
lods
dec
jge
mov
mov
inc
jmp
lods
sub
call
push
or
sbb
ds
ret
push
stc
cmp
js
ret
cs
fnstsw
call
xor
in
retf
retf
sbb
and
out
scas
dec
add
jb
push
aaa
xchg
test
mov
daa
sbb
clc
adc
out
sub
ds
scas
in
mov
xor
imul
jb
sub
(bad)
and
mov
mov
into
xchg
push
dec
in
jo
hlt
fs
aaa
cmp
sbb
ficomp
jnp
push
jne
dec
mov
sbb
jle
ds
into
mov
rol
out
shl
dec
jns
mov
ror
pop
stos
mov
xchg
out
aaa
xchg
adc
je
rcr
out
mov
dec
cli
lock
test
sub
mov
test
dec
xor
retf
jg
es
std
pusha
mov
sub
adc
repz
test
es
mov
sub
fidivr
test
jnp
xlat
sbb
sar
and
push
icebp
and
(bad)
mov
mov
dec
mov
jno
fadd
add
cmc
pop
add
dec
and
push
les
(bad)
(bad)
ja
iret
bound
fisttp
xor
repz
cs
fisttp
je
scas
adc
jnp
mov
jmp
call
jmp
mov
movs
inc
addr16
(bad)
in
(bad)
enter
jmp
(bad)
in
enterw
mov
call
in
ffree
dec
hlt
adc
out
xchg
or
btc
push
stc
pushf
ins
sar
movs
iret
inc
jmp
mov
movs
sbb
ret
pop
push
or
sbb
ds
retf
mov
fs
pop
(bad)
xchg
push
and
or
mov
push
xor
push
push
jb
retf
jmp
sbb
adc
test
cs
iret
sub
pop
cmps
mov
pushf
add
jle
int3
and
arpl
adc
jle
mov
and
out
jb
sub
in
leave
pushf
inc
mov
push
jmp
fs
adc
inc
mul
mov
dec
stc
arpl
clc
mov
xor
push
out
nop
je
outs
into
rol
in
call
fdiv
pop
add
mov
push
ret
outs
xor
sub
data16
mov
clc
push
aaa
mov
pop
mov
jnp
mov
mov
cmp
sub
and
mov
scas
add
xchg
inc
retf
adc
or
outs
repnz
push
sbb
cmp
movs
(bad)
div
mov
sbb
adc
mov
cmp
xchg
or
xor
cwde
outs
fnstenv
imul
int
add
xor
pop
das
mov
push
loopne
aaa
mov
jl
in
lds
mov
cmp
sti
mov
aas
jle
xlat
cmp
xchg
jo
push
jb
sub
pop
inc
mov
sub
in
pop
mov
jmp
or
and
aas
popa
imul
dec
or
push
aas
xor
ins
cmps
inc
aaa
fs
mov
inc
(bad)
sub
imul
jns
xchg
pop
fwait
out
or
xchg
pop
stos
int
cld
jle
scas
xchg
je
lds
int3
push
mov
fwait
(bad)
dec
or
push
rol
leave
xor
ds
ret
xor
nop
addr16
fcomp
ins
cwde
ins
retf
xlat
adc
mov
or
xor
scas
imul
es
mov
cmp
xchg
sub
retf
xchg
popa
sub
fisub
hlt
mov
cmp
(bad)
and
dec
pop
cdq
mov
xor
xchg
cdq
fs
cs
jbe
lahf
pop
mov
fdivr
hlt
jb
mov
push
into
dec
add
jnp
and
fsubr
and
shl
(bad)
jp
stc
fild
je
cld
dec
mov
push
mov
adc
cmp
jge
mov
and
cmps
inc
jle
adc
sub
pop
(bad)
clc
cdq
dec
mov
add
xchg
adc
mov
mov
add
ja
cwde
xchg
fisub
call
mov
in
dec
aaa
add
adc
push
outs
int3
(bad)
adc
sub
enter
cdq
jle
retf
mov
cmp
sub
push
into
mov
adc
mov
mov
cmc
mov
cli
stos
push
sbb
bound
and
mov
and
sub
jae
iret
and
nop
pusha
cmp
inc
push
xor
call
(bad)
xor
mov
in
jle
sahf
xchg
in
stc
sub
pop
fisubr
mov
sbb
test
(bad)
dec
cmp
xchg
jg
mov
aas
mov
sbb
scas
and
repz
imul
movs
popa
cld
xor
cmps
inc
mov
ja
leave
and
and
jmp
outs
mov
or
dec
or
aad
stc
imul
(bad)
cld
outs
or
les
mov
push
rcl
xlat
int
clc
test
lods
xor
and
cmp
nop
movs
data16
stc
sbb
dec
jecxz
sub
fsubr
dec
mov
dec
lock
mov
or
and
stos
inc
int
and
ret
imul
(bad)
outs
ret
std
and
jns
ret
pop
sahf
out
or
dec
xor
or
idiv
ds
int
sti
(bad)
pop
sub
xor
dec
or
or
pop
adc
leave
xor
xchg
pusha
mov
pusha
ror
icebp
mov
jno
jmp
call
jo
mov
dec
cmps
(bad)
(bad)
cmps
or
in
sub
scas
jp
mov
aad
push
and
sub
xchg
push
cmp
fdiv
jmp
fbld
pop
pop
test
push
sahf
jmp
cwde
xchg
ja
leave
sub
ins
sub
call
push
cmp
mov
mov
xchg
jl
sub
fisubr
mov
sub
leave
and
mov
cmp
pop
repz
add
and
ins
jecxz
pop
push
stc
aas
pop
repz
mov
arpl
mov
loopne
jbe
xor
push
xor
xchg
repz
imul
jge
inc
add
push
leave
push
xor
das
in
bound
xchg
cli
jp
call
dec
push
ss
call
fistp
mov
outs
into
int
out
jb
enter
mov
adc
cs
repz
xchg
pop
cmp
je
call
sub
loop
xchg
jno
sbb
retf
and
test
jne
lds
mov
rcr
das
fild
mov
xor
mov
(bad)
cmp
xchg
jbe
retf
out
cwde
xchg
out
pop
fld
mov
pop
test
and
sahf
jmp
hlt
cmp
iret
xchg
std
pushf
pop
fisttp
int
push
loop
or
xchg
outs
in
adc
mov
mov
outs
mov
gs
sub
sub
enter
sahf
cli
add
sti
outs
mov
shl
or
cmp
imul
pushf
adc
cmp
loope
std
pop
ss
adc
push
jge
shr
sub
rcl
lock
retf
and
jne
mov
inc
xor
xor
jp
xchg
sbb
neg
inc
(bad)
outs
test
cdq
out
shl
call
int3
cld
call
aaa
mov
cmp
xor
cmp
stc
cmp
jo
xchg
cdq
jne
ret
jle
mov
jl
dec
adc
cli
dec
cmp
sub
mov
xchg
out
aas
repz
fisubr
xlat
pop
iret
adc
jo
jb
stos
adc
in
inc
lods
outs
in
test
pop
mov
and
mov
popf
add
sbb
lods
pusha
movs
sub
fldenv
icebp
xchg
push
fstp
test
mov
jg
loopne
(bad)
mul
ficomp
icebp
cmp
mov
cmp
dec
sub
sbb
sub
movs
mov
in
cwde
data16
adc
into
cmp
xchg
and
leave
cmp
xchg
jae
dec
push
xor
fld
mov
mov
mov
or
mov
mov
or
push
bound
and
test
int3
lds
loopne
jl
xor
rol
hlt
lods
pusha
add
inc
pop
shl
add
xor
not
jns
mov
sub
xchg
rcl
aas
adc
stos
cld
push
fs
arpl
jp
fld
lds
or
xor
pusha
in
dec
pushf
int
xor
sti
xchg
or
sub
ins
retf
outs
inc
sub
aaa
jmp
dec
(bad)
stc
int
ret
pop
imul
xchg
lock
pop
adc
push
jno
mul
or
dec
test
sub
pop
or
ret
dec
pop
test
mov
xor
mov
add
push
jns
retf
movs
(bad)
in
and
sub
pop
push
call
pop
xchg
sbb
or
sub
retf
or
bound
pop
xor
mov
in
cmp
std
fnsave
mov
std
loope
jmp
sub
push
in
arpl
pop
pop
(bad)
stc
(bad)
pop
aam
aam
xchg
pop
fisttp
push
cmp
test
pop
les
inc
std
rol
cmp
adc
nop
jmp
cmc
sub
sbb
mov
cmps
jmpw
mul
popf
pop
call
xchg
adc
mov
lea
mov
test
jae
jl
fstp
pop
hlt
jae
jbe
jb
lock
push
push
jecxz
pop
pusha
jl
inc
jbe
pop
cmp
dec
add
dec
cvtps2pd
inc
jmp
jecxz
inc
push
aas
sub
mov
loope
xor
outs
das
cmc
cs
test
lods
and
mov
pop
jp
push
sub
cmp
ror
loope
pop
(bad)
dec
or
or
inc
add
inc
push
jb
push
aam
(bad)
mov
mov
test
ins
(bad)
mov
or
cld
and
pusha
les
xlat
push
fisubr
pop
not
fiadd
add
sub
jmp
stc
fs
pop
ret
js
cmps
mov
test
mov
mov
xchg
fbld
in
fwait
repnz
enter
pushf
mov
nop
cwde
mov
mov
into
aas
in
mov
mov
xor
std
push
sub
cmp
jbe
hlt
push
adc
dec
imul
jo
inc
pusha
js
and
ins
lea
add
mov
fcmovnbe
xor
hlt
dec
or
inc
jb
fs
rol
push
jle
sbb
sahf
dec
sbb
mov
adc
aaa
and
popa
sub
xor
sub
and
sbb
or
push
aad
stos
adc
push
sbb
push
mov
daa
add
add
mov
cmp
shl
clc
cmps
mov
jb
icebp
jg
cli
inc
jmp
jmp
out
loop
mov
fcmovnb
clc
pusha
xlat
(bad)
or
rcr
into
hlt
mov
call
add
loope
sbb
mov
mov
xchg
jae
mov
xor
pushf
or
xchg
ret
scas
mov
or
adc
pop
cmp
js
div
jno
jno
out
outs
ins
imul
(bad)
loopne
and
lahf
dec
pop
aas
fdivr
pop
push
push
and
push
jae
sbb
dec
jns
inc
sub
mov
push
ss
mov
mov
pop
lods
sbb
sub
fs
mov
adc
dec
call
je
adc
jmp
leave
mov
enter
add
or
add
in
add
div
lock
outs
jmp
out
in
fs
fidivr
pand
iret
xchg
(bad)
in
rcl
int
int3
pop
iret
jg
(bad)
xchg
inc
shl
shl
mov
mov
test
mov
lods
scas
stos
lods
stos
out
shl
sub
fld
adc
cwde
xchg
call
mov
mov
data16
(bad)
(bad)
push
fs
imul
push
jno
jg
push
outs
cli
jmp
popa
or
mov
stc
push
mov
call
push
dec
dec
(bad)
cwde
dec
das
dec
mov
sbb
dec
bound
ss
aas
inc
cmp
pop
aaa
pop
mov
push
jo
outs
sub
sub
or
inc
daa
and
loopne
jp
sbb
sbb
pop
push
xlat
adc
inc
sbb
push
fisttp
aas
mov
dec
sbb
add
mov
out
ficom
pop
mov
jno
ret
and
in
push
lods
aad
jmp
test
pop
fcmovnbe
cld
fmul
jmp
leave
pop
xchg
shr
(bad)
(bad)
int3
jnp
rol
daa
gs
rcl
adc
retf
mov
clc
mov
mov
fstp
mov
test
mov
add
sahf
lds
cwde
cmp
fnstcw
fst
test
or
mov
(bad)
lock
cmp
cmp
std
jbe
cli
icebp
inc
inc
add
outs
xor
jae
imul
pop
movs
pop
stos
push
jns
fist
aad
xor
dec
mov
lods
sub
test
loop
or
je
outs
sti
cmp
jge
pop
das
mov
jno
sub
sub
nop
daa
mov
cmp
daa
loope
pop
dec
lds
push
sbb
pop
xor
adc
xchg
pop
or
add
add
add
add
(bad)
scas
jp
mov
mov
fnstenv
scas
jmp
dec
call
out
int3
jecxz
loope
(bad)
faddp
jl
stos
fld
shl
mov
jle
int3
ja
fisubr
rcl
(bad)
icebp
cmp
std
mov
mov
in
scas
repnz
and
cli
stos
xchg
daa
movs
lods
movs
xlat
and
mov
cmp
xchg
ja
fcmovnbe
lahf
repnz
pop
(bad)
jmp
push
mov
pushf
movs
mov
or
jno
jb
jnp
clc
pop
mov
jl
mov
jae
adc
push
dec
imul
jecxz
mov
mov
pop
sbb
adc
push
ja
dec
xor
es
push
jne
dec
and
pushf
je
jp
cmp
ss
and
xor
or
cwde
sub
sbb
aaa
loop
and
jge
jg
cwde
inc
pop
mov
or
fimul
js
mov
xchg
add
mov
(bad)
jmp
mov
mov
lock
std
outs
mov
loopne
push
in
(bad)
loop
sahf
retf
(bad)
pop
mov
rcr
data16
(bad)
retf
in
(bad)
pop
add
test
xchg
xor
stos
scas
sub
popf
sub
xchg
mov
sub
mov
inc
add
fwait
js
js
push
jle
shl
jbe
ins
push
ins
jge
push
and
pop
aaa
pop
dec
cld
pop
mov
push
pop
cmc
push
inc
push
dec
add
int3
ins
retf
pop
cdq
int3
inc
ss
movs
ret
imul
ja
or
inc
jae
inc
xor
sbb
push
xor
and
or
sbb
adc
inc
push
xchg
pop
daa
pop
xor
add
loopne
mul
sti
stos
xchg
repz
xor
out
call
not
jecxz
loope
(bad)
shl
jbe
and
shr
and
retf
or
loopne
faddp
lds
ret
(bad)
popa
iret
mov
sbb
xor
icebp
cmps
movs
into
mov
or
test
sub
sbb
xchg
std
adc
fisttp
add
xchg
sub
movs
inc
lock
mov
adc
imul
ds
(bad)
add
ja
jp
jg
mov
jg
pop
jbe
push
inc
sbb
mov
aad
mov
push
test
bound
sub
cmp
cmp
ja
mov
xor
mov
iret
and
dec
sub
test
and
sub
sbb
sbb
movs
adc
jge
fisttp
mov
test
adc
xor
push
std
idiv
cdq
cli
fcom
cmp
sub
out
sbb
push
jecxz
xchg
in
fist
(bad)
push
ror
hlt
ror
sbb
retf
inc
ret
cli
inc
mov
mov
mov
mov
mov
adc
cmps
jnp
int
mov
mov
sahf
(bad)
fwait
test
adc
pop
mov
test
mov
(bad)
(bad)
ins
jl
loop
push
xlat
jb
xor
jmp
jne
and
and
scas
popa
jg
dec
adc
push
push
push
adc
icebp
pop
or
sbb
inc
lea
xor
sub
scas
and
pop
cwde
sub
xor
int3
out
das
adc
push
(bad)
xor
bound
pop
cld
sbb
pop
adc
adc
xchg
data16
add
pop
or
dec
test
xchg
push
sub
mov
call
pusha
adc
adc
jecxz
jmp
shl
call
rol
cmp
xchg
xlat
lds
aad
push
cwde
outs
pop
retf
pop
mov
inc
test
pop
add
mov
jno
cmc
cwde
scas
jle
(bad)
xor
and
in
icebp
test
mov
mov
lahf
aas
fwait
mov
pop
lahf
rcl
lea
mov
mov
push
sub
xor
push
jge
jno
out
jno
cmp
inc
push
push
mov
pop
and
cdq
pop
inc
ss
scas
push
inc
adc
ins
dec
and
inc
xor
inc
and
and
es
sti
xor
mov
scas
cmp
mov
add
jecxz
shl
push
lahf
sbb
push
adc
ret
mov
add
add
push
out
pop
scas
inc
add
add
sti
xchg
(bad)
or
push
icebp
aam
jno
mov
inc
stc
int3
fs
in
outs
pop
out
jl
repnz
fcom
ins
(bad)
out
fdivrp
leave
int3
std
mov
xor
fsubr
les
inc
push
les
mov
sub
mov
(bad)
xchg
adc
and
out
cmp
jae
lods
outs
cdq
cmp
and
test
retf
nop
or
loopne
ins
xchg
ror
stos
lock
jg
mov
push
jo
in
js
jns
cmp
js
loopne
stc
xor
adc
push
arpl
shl
sbb
pop
sub
push
push
jl
sbb
enter
inc
imul
addr16
jnp
jns
pop
pop
cld
clc
jl
cmp
adc
cmp
lods
cmps
sub
in
js
jno
and
aaa
sbb
sub
adc
xor
out
or
mov
and
das
ror
inc
(bad)
inc
clc
hlt
inc
push
xor
icebp
pushf
mov
jno
in
inc
cs
out
mov
push
fcomp
out
mov
dec
cmps
std
in
into
shl
inc
leave
ret
mov
mov
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
repnz
in
repnz
add
add
fcomip
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
