cld
pop
mov
dec
test
int
test
cmps
or
cmps
adc
add
dec
add
sbb
mov
mov
add
jb
add
dec
out
call
(bad)
(bad)
daa
in
(bad)
fimul
inc
aas
mov
idiv
cmps
daa
mov
les
or
mov
mov
inc
imul
int
add
mov
mov
sbb
push
cwde
and
adc
lea
jbe
cmps
mov
pop
xchg
adc
out
nop
mov
inc
stos
add
lds
push
cwde
(bad)
fisttp
inc
or
add
mov
dec
jne
leave
dec
add
inc
pop
mov
mov
(bad)
jmp
xor
ret
inc
or
mov
int3
jl
ret
add
dec
(bad)
btc
dec
sbb
push
inc
dec
or
outs
jg
inc
int
xlat
out
inc
dec
and
jge
or
or
cmp
int
or
les
lock
or
xor
push
fstp
sbb
pop
rol
in
mov
mov
shr
out
jge
dec
mov
push
and
int3
inc
or
hlt
mov
ror
shl
or
hlt
mov
shr
mov
xor
and
imul
mov
or
call
mov
dec
mov
int
call
add
int3
inc
or
(bad)
mul
cmps
dec
inc
push
(bad)
rol
dec
add
inc
push
mov
add
dec
cmp
int
sub
int3
jp
mov
pop
xor
cmps
cwde
jg
dec
add
lds
sub
xor
add
xchg
nop
adc
pop
inc
mov
scas
mov
dec
xor
add
dec
imul
int
mov
sub
dec
sub
sub
add
dec
adc
call
inc
int
sbb
lea
addr16
push
add
dec
add
fstp
push
inc
sub
adc
cmps
gs
inc
cmps
add
xchg
scas
daa
dec
mov
imul
rol
imul
int
mov
push
mov
cmp
xor
mov
daa
jge
cmp
outs
xor
(bad)
cmps
pop
jge
sub
cmp
xor
iret
call
dec
dec
shr
inc
add
add
add
sbb
push
jb
mov
(bad)
jp
xor
and
sub
add
iret
jmp
cmp
clc
xor
xchg
or
mov
xor
xor
inc
imul
mov
push
movs
inc
into
add
ret
jle
jge
sahf
cmps
inc
je
dec
shr
sub
add
mov
and
ret
xor
cmps
lahf
add
dec
add
shl
int
test
pop
call
int
jne
inc
retf
xor
xchg
cmp
xor
xor
fcomp
mov
mov
int3
outs
setnp
cmp
mov
ret
popf
ret
popf
and
lea
cmps
dec
call
jbe
mov
or
mov
call
ja
jle
call
xor
xchg
cld
mov
cmp
cmps
mov
or
cmp
add
inc
je
leave
jle
call
int3
cmp
add
inc
or
cmp
inc
xor
mov
mov
push
aam
jb
lock
int3
ins
bound
jle
movs
push
add
and
jge
lds
or
les
imul
mov
and
jge
xor
or
xor
jle
leave
add
mov
imul
retf
(bad)
jp
xor
xchg
inc
stos
add
fstp
push
inc
cmp
dec
inc
xchg
mov
inc
mov
mov
sub
dec
sub
es
dec
or
in
or
xor
mov
dec
mov
es
jp
cwde
inc
lea
fnstenv
sar
(bad)
jae
add
dec
xor
(bad)
(bad)
mov
(bad)
(bad)
adc
or
enter
es
fstp
lods
or
mov
mov
add
int3
dec
idiv
hlt
mov
lods
xor
jp
mov
ret
jge
dec
jae
add
cmp
add
adc
retf
or
jne
add
cmps
mov
int
rcl
(bad)
test
dec
mov
std
xor
xor
pop
push
mov
mov
dec
inc
mov
jge
xor
or
xchg
dec
jae
add
inc
inc
xchg
dec
jge
int
mov
cmp
mov
(bad)
push
push
int3
dec
jge
mov
jg
les
push
mov
mov
inc
mov
jge
xor
pop
sub
dec
jge
int
pop
add
mov
pop
xchg
adc
rcr
aad
nop
inc
cmp
(bad)
sub
mov
mov
cli
add
(bad)
dec
ja
iret
popa
fstp
or
cmp
jnp
in
or
xchg
mov
or
cli
or
inc
lds
fcomp
mov
mov
push
rcl
sbb
pop
ror
xor
fiadd
int
out
inc
or
mov
push
mov
inc
cmp
sub
jmp
xor
stos
leave
inc
lahf
fisttp
inc
pop
mov
hlt
xchg
(bad)
aad
dec
div
lds
(bad)
inc
rol
xchg
adc
rcr
aad
mov
mov
(bad)
std
das
jnp
dec
or
in
cmp
cmp
inc
int
jne
rol
(bad)
or
icebp
xchg
inc
mov
icebp
inc
add
cmp
punpckhwd
mov
jg
(bad)
(bad)
inc
rol
or
mov
mov
push
aam
inc
cmp
push
inc
mov
sti
inc
mov
mov
cmp
add
mov
inc
xor
dec
mov
jmp
cmp
or
or
push
and
int3
inc
daa
xchg
adc
cwde
(bad)
addr16
fwait
sbb
pop
shl
and
adc
sti
in
or
xor
mov
movs
cmp
add
dec
adc
test
and
(bad)
jp
xor
jl
mov
mov
mov
push
rcl
sbb
jbe
lock
inc
aad
cmp
sub
(bad)
inc
ds
in
rol
cmp
add
inc
or
mov
pop
inc
push
jge
vmovntps
int
jne
inc
or
or
test
sti
les
adc
dec
rcr
rcl
(bad)
test
or
fld
add
dec
call
add
ret
popf
daa
xchg
loop
dec
push
mov
not
in
or
or
or
inc
push
ret
inc
or
or
jmp
int
xchg
ret
popf
cmps
add
int
or
cld
(bad)
mov
ret
mov
jl
repz
pop
inc
int
test
sti
les
add
dec
or
dec
mov
mov
les
jecxz
(bad)
test
ret
clc
xor
(bad)
sbb
dec
mov
xchg
adc
retf
or
jne
add
cmps
fs
dec
rcl
hlt
hlt
or
pusha
or
int3
xchg
or
dec
jb
mov
dec
jge
int
test
cli
mov
dec
and
or
add
(bad)
(bad)
movd
ss
int
pop
hlt
mov
xor
mov
add
or
jge
vcvtss2sd
adc
shl
inc
int
jmp
scas
jge
xor
jge
shl
add
ret
xor
jns
xor
inc
(bad)
mov
add
cmp
inc
int
imul
or
into
inc
std
loope
or
inc
or
pop
or
xor
sahf
mov
dec
lea
dec
xor
ret
add
dec
add
dec
add
mov
rol
mov
add
inc
add
dec
(bad)
mov
dec
or
jbe
jg
or
cmps
jg
or
ss
int
(bad)
sti
inc
xchg
stos
fild
add
push
or
in
or
stos
mov
jecxz
dec
or
mov
outs
xor
inc
int
(bad)
repz
ret
dec
mov
xchg
int
jno
inc
xor
mov
mov
and
and
lods
add
inc
inc
jbe
daa
push
mov
sub
or
mov
ds
add
or
or
cmp
add
ret
xor
and
pop
or
xor
push
add
dec
or
inc
inc
jbe
mov
cld
xor
mov
mov
cld
mov
dec
xor
mov
xor
mov
add
or
jge
lds
jbe
mov
jge
dec
push
mov
adc
lahf
jge
xor
inc
pop
xchg
adc
rcr
rcl
lock
imul
(bad)
cld
mov
stos
sti
inc
mov
xor
inc
(bad)
xor
inc
pop
mov
dec
or
cmp
add
dec
or
inc
mov
sti
inc
mov
inc
mov
jp
mov
(bad)
int3
jae
ja
jae
ja
int3
out
int
(bad)
or
add
(bad)
dec
push
mov
inc
add
ret
add
dec
and
adc
(bad)
test
sub
inc
mov
sti
inc
mov
jle
dec
not
sbb
inc
int
out
(bad)
dec
imul
or
or
out
int
pop
call
leave
jbe
jbe
movs
nop
mov
jae
jl
jae
jle
int3
out
int
jp
xor
or
or
jbe
cld
xor
out
int
(bad)
dec
cmp
xor
jmp
and
sti
int3
mov
les
dec
call
add
dec
ret
rol
add
mov
cmps
dec
call
jmp
and
mov
dec
cld
(bad)
iret
mov
mov
and
rcl
cmp
mov
int
(bad)
neg
scas
rol
cmp
imul
call
cmps
mov
pop
xchg
xchg
inc
stos
cmp
test
sbb
mov
dec
mov
int
or
int3
xchg
or
or
jg
xor
rol
in
add
mov
xor
jge
xor
push
ss
pop
les
add
xchg
sbb
mov
add
cmps
xor
int
or
inc
xchg
stos
fild
mov
mov
cld
inc
retf
xor
jge
dec
mov
inc
int
test
movs
clc
pop
int
jbe
popf
out
push
mov
cmc
mov
dec
inc
or
or
data16
int
pop
fbstp
mov
push
movs
das
arpl
les
jecxz
mov
push
inc
ja
pop
lock
add
mov
les
add
xchg
sbb
mov
xchg
out
push
mov
cmc
mov
jnp
or
or
dec
sub
ret
add
cli
inc
cld
xor
jge
or
les
mov
mov
jge
xor
(bad)
mov
push
cmp
cmp
xor
rol
les
inc
xor
or
repnz
int
add
int
push
xchg
iret
dec
add
dec
lea
cmps
dec
jmp
mov
std
xor
push
cmp
or
stos
(bad)
aas
mov
mov
mov
cmp
cld
inc
mov
std
xor
cld
int
lea
ret
mov
mov
inc
popf
ret
xor
and
cmps
enter
add
rol
jg
jl
or
push
ins
push
add
jmp
lock
inc
int
lea
inc
xchg
sbb
mov
add
daa
shl
cmp
mov
ja
and
rol
bnd
xor
jge
dec
mov
add
mov
cld
int3
dec
add
dec
jmp
out
ret
add
int3
inc
(bad)
mov
add
cmp
jecxz
dec
movsx
mov
cld
call
mov
dec
test
retf
xor
call
inc
int
shl
cmp
mov
ja
and
rol
bnd
xor
jge
dec
mov
add
mov
cld
int3
dec
add
dec
jmp
out
ret
add
int3
inc
(bad)
mov
add
cmp
jecxz
dec
movsx
mov
cld
call
mov
dec
test
retf
xor
call
inc
int
shl
cmp
mov
ja
mov
mov
mov
add
dec
cmp
lods
or
inc
mov
add
daa
shl
cmp
mov
ja
mov
mov
mov
add
dec
sub
cli
jecxz
dec
jmp
mov
mov
xor
call
inc
int
aas
(bad)
xor
ja
xor
inc
(bad)
mov
add
cmp
jecxz
dec
movsx
mov
cld
call
mov
dec
test
retf
xor
add
int
xchg
(bad)
ss
int
jbe
popf
cmps
inc
stc
xor
xchg
or
and
in
out
(bad)
dec
add
jae
add
retf
xor
add
xchg
jne
inc
retf
xor
pop
cld
xor
jge
xor
or
xor
fimul
ret
pop
int
jbe
popf
les
(bad)
mov
push
inc
ja
push
in
mov
inc
xchg
sbb
mov
jle
dec
lea
dec
jmp
adc
int3
daa
shl
mov
add
cmp
xor
add
into
imul
or
and
xor
sub
xor
jbe
popf
ret
xor
pop
cld
xor
aam
dec
movs
push
pop
int
jbe
popf
daa
adc
(bad)
dec
or
popf
les
add
dec
or
inc
inc
or
jb
add
ret
xor
push
cld
xor
adc
mov
add
(bad)
lea
inc
retf
xor
jge
xor
or
xor
mov
ret
mov
dec
or
pop
or
popf
les
inc
xor
pop
add
mov
or
sahf
add
fisttp
mov
jge
xor
or
popf
les
inc
xor
or
daa
add
ror
push
dec
jge
xor
pop
and
ret
xor
out
add
int3
inc
cmovle
outs
cld
xor
add
dec
push
mov
inc
add
lods
or
inc
mov
and
jg
xor
rol
retf
xor
add
mov
cld
xor
outs
cld
xor
jl
inc
retf
xor
jge
xor
outs
adc
pop
int
xor
ret
xor
or
je
add
mov
jge
xor
or
sbb
fnsetpm(287
xchg
or
dec
xor
ret
add
dec
add
int
pop
scas
xor
arpl
les
cmps
xor
jge
lock
add
mov
dec
mov
ret
ret
add
dec
jbe
popf
les
scas
xor
jge
mov
xchg
mov
inc
mov
jle
dec
lea
dec
jmp
sub
add
dec
push
cmps
dec
sbb
shl
les
jge
xor
mov
jge
xor
pop
jnp
mov
mov
jge
xor
movzx
mov
xchg
int
jno
inc
cli
repnz
xor
gs
ds
call
inc
xor
pop
xor
mov
or
and
mov
mov
add
or
xor
rol
retf
xor
xchg
ds
add
or
or
dec
add
dec
lea
inc
retf
xor
aaa
div
mov
mov
jge
xor
or
xor
mov
(bad)
xchg
or
dec
xor
ret
add
dec
in
jo
jge
xor
xchg
dec
add
repnz
mov
bound
mov
push
xor
jmp
mov
or
or
mov
aas
pop
xor
popa
mov
jge
xor
inc
xor
(bad)
xor
xchg
add
retf
xor
call
cld
xor
jl
popf
daa
(bad)
(bad)
dec
jbe
popf
cmps
add
dec
add
fld
pop
add
mov
std
xor
dec
cld
(bad)
iret
mov
mov
jge
xor
jge
dec
cs
xor
or
inc
retf
xchg
xor
jmp
int
inc
xcrypt-ecb
cmps
dec
jbe
popf
daa
(bad)
(bad)
dec
jbe
popf
cmps
movs
imul
(bad)
pop
xor
(bad)
jge
xor
add
lahf
add
mov
jge
xor
inc
mov
jge
xor
or
xor
mov
dec
(bad)
jge
xor
pop
stos
xor
jge
xor
push
xor
jge
xor
or
xor
mov
xor
or
xor
mov
int
pop
out
xor
jge
xor
out
xor
jle
xor
aas
repz
inc
xchg
mov
cld
int
pop
jmp
mov
push
inc
jg
push
(bad)
shl
mov
add
mov
cld
popf
les
(bad)
out
dec
xor
mov
xor
aas
xlat
xor
or
popf
les
xchg
les
xchg
mov
cld
popf
les
rcr
(bad)
cld
xor
aam
and
jne
xor
fcomp
mov
mov
and
rol
aad
inc
int
and
int
adc
cmps
add
dec
add
(bad)
out
or
xor
stos
or
int3
mov
jbe
mov
dec
dec
add
pop
add
cmps
loopne
int
add
leave
test
sub
(bad)
jecxz
xor
mov
push
cmp
ss
int
not
es
inc
inc
xor
cmps
les
dec
or
mov
and
fild
push
shr
cmp
fwait
dec
sub
mov
push
mov
cld
xchg
adc
xchg
inc
or
outs
dec
add
fimul
leave
dec
aad
daa
add
stos
sti
inc
mov
cmp
imul
imul
cmps
dec
call
add
mov
js
add
adc
inc
stos
add
aad
aam
nop
inc
cmp
xor
scas
or
mov
cmp
inc
int
pop
sub
adc
dec
add
fstp
add
call
ja
inc
int
add
vcmpsd
mov
pop
int
or
mov
pop
int
or
bndstx
inc
xor
(bad)
(bad)
ret
add
(bad)
lea
lock
add
inc
or
cld
jmp
dec
add
aad
ret
add
dec
jge
mov
pop
cmp
test
bound
(bad)
mov
int3
dec
mov
cmp
dec
add
pcmpeqb
iret
dec
xor
bndstx
dec
test
mov
xchg
push
push
sub
mov
cmp
or
cmps
mov
int
jge
cmc
rol
add
add
mov
ja
or
sbb
add
(bad)
imul
dec
add
iret
(bad)
sbb
adc
bndstx
in
xchg
xchg
lea
aaa
xor
sbb
add
(bad)
imul
dec
cmp
scas
or
mov
push
sbb
rdmsr
mov
cmc
enter
int
test
imul
dec
add
iret
(bad)
sbb
or
bndstx
in
ret
dec
imul
mov
cmc
enter
int
test
imul
dec
mov
(bad)
sbb
add
dec
outs
sahf
mov
add
dec
imul
push
sbb
add
(bad)
imul
sbb
push
push
add
dec
(bad)
call
imul
cmp
inc
int
xchg
push
push
add
iret
(bad)
sbb
add
add
out
outs
sahf
mov
push
cmc
rol
add
retf
inc
mov
push
aad
ret
add
dec
and
push
push
add
rol
add
add
out
(bad)
call
ret
mov
sahf
mov
push
cmc
rol
add
add
mov
ja
or
sbb
pushf
int
or
int3
xchg
push
push
add
ret
int
inc
jmp
call
mov
jb
inc
dec
and
or
shl
mov
add
(bad)
xor
mov
int
cmp
dec
add
dec
std
cmp
imul
jnp
add
punpckhwd
xor
mov
dec
imul
int
xchg
push
push
sub
mov
cmp
add
iret
(bad)
sbb
add
mov
and
add
(bad)
dec
hlt
sub
(bad)
jmp
mov
mov
dec
call
mov
inc
inc
dec
and
or
dec
mov
xor
mov
pop
hlt
ret
jae
or
or
inc
xor
cmp
add
dec
lea
dec
xor
mov
ffreep
add
loop
or
or
xor
cmp
add
dec
test
int
xchg
pop
jb
inc
int
not
dec
xor
mov
dec
test
dec
sub
iret
push
leave
cmp
inc
int
or
in
or
inc
mov
data16
mov
mov
stos
pop
inc
int
bound
mov
push
int
test
int
add
rcr
add
movs
call
ffreep
add
or
fdiv
inc
int
xchg
pop
jb
add
dec
mov
dec
mov
add
rcr
add
movs
call
ffreep
add
or
fsub
and
mov
minps
and
dec
mov
xor
mov
dec
or
in
and
pop
jb
pcmpeqw
les
int
arpl
xchg
adc
rcr
cmp
cmp
scas
add
mov
ja
or
rol
clc
fld
int
inc
imul
rol
cmps
inc
pop
int
and
or
mov
cmp
sbb
xchg
dec
and
jb
inc
int
push
xchg
dec
and
add
inc
int
push
xchg
dec
and
adc
inc
int
push
xchg
dec
and
mov
sti
inc
mov
pop
add
xlat
mov
int3
outs
imul
xchg
pop
dec
mov
push
mov
retf
cmp
ret
popf
mov
pop
ins
or
call
xchg
or
dec
sub
inc
or
mov
jb
sti
int
imul
mov
cld
enter
int
out
int
imul
test
add
xchg
add
dec
inc
inc
adc
add
ret
ja
or
sti
rol
or
add
dec
or
mov
mov
dec
add
sub
add
mov
dec
xor
ret
popf
daa
add
dec
cmovbe
pop
jge
cmp
ret
add
fild
inc
push
pop
call
push
cmps
dec
call
add
and
add
or
push
xor
mov
cmps
jo
int
jge
mov
dec
jge
ins
and
xchg
mov
out
test
add
into
imul
stos
push
xchg
dec
cmp
cmp
inc
int
(bad)
jmp
mov
mov
or
xor
sahf
mov
inc
sub
add
lods
or
mov
adc
rcr
inc
inc
xor
push
xlat
(bad)
(bad)
inc
rol
mov
inc
cmp
add
test
xor
(bad)
xlat
out
inc
or
leave
and
(bad)
sti
popf
ret
popf
mov
sti
cmps
dec
cmovbe
pop
call
cld
fdivr
inc
int
(bad)
mul
inc
or
mov
(bad)
xlat
inc
xlat
mov
sbb
mov
mov
ja
or
call
pushf
mov
pop
push
sbb
out
mov
or
(bad)
fisttp
xor
mov
dec
mov
ret
cmp
int
mov
jnp
mov
lock
add
cmp
add
mov
add
cmp
add
mov
add
cmp
pop
lock
add
inc
push
or
dec
or
dec
or
repz
xchg
cmp
or
ret
cld
ret
push
scas
repz
stc
xchg
cmp
pop
dec
add
mov
or
pop
xchg
cmp
inc
pop
mov
dec
or
stc
xchg
adc
inc
mov
jmp
(bad)
jbe
(bad)
jp
and
dec
mov
jbe
inc
xor
xor
or
dec
xchg
or
fiadd
int
xor
xor
pop
inc
pop
xchg
shl
adc
cmp
int
or
int3
dec
cld
inc
sbb
add
int3
push
inc
xor
or
mov
inc
into
dec
cmp
cmps
xchg
enter
int
mov
push
enter
int
test
jge
xor
add
(bad)
jp
dec
jae
pop
mov
cmps
add
(bad)
jp
and
dec
div
inc
mov
jmp
inc
xor
retf
jae
ja
jb
add
dec
test
mov
jmp
iret
mov
mov
sbb
or
add
iret
mov
mov
dec
neg
mov
jmp
iret
mov
mov
jae
add
cmps
xchg
dec
test
and
dec
mov
jbe
int3
dec
cld
inc
sbb
add
int3
push
fisttp
xchg
ffree
mov
dec
jp
and
(bad)
xchg
push
int3
dec
add
jae
add
iret
mov
mov
jae
add
cmps
add
and
dec
mov
std
int
xor
jge
int
neg
and
(bad)
xlat
adc
xchg
push
int3
mov
jmp
int3
dec
add
into
jge
leave
dec
or
jg
xor
fcomp
mov
mov
int3
outs
setle
aad
enter
int
test
es
add
repz
test
into
dec
xor
jge
into
dec
xor
or
bound
int
mov
jmp
jge
mov
stc
xlat
adc
mov
fadd
fistp
mov
cld
enter
int
xor
shl
add
dec
mul
cmps
add
cmp
call
mov
xchg
add
leave
ffreep
add
or
and
push
or
rol
(bad)
sbb
les
icebp
int3
xchg
stos
rol
fxch
lahf
or
ret
int3
(bad)
xlat
test
add
xchg
int3
dec
cld
inc
mov
or
int3
xchg
adc
cmps
xchg
(bad)
cmps
cmova
dec
or
(bad)
xchg
cld
enter
int
dec
cld
in
xorps
dec
adc
cmps
xchg
and
xchg
int3
dec
add
sbb
loope
mov
push
xchg
repz
cmp
xor
inc
setb
fxch
push
sbb
out
adc
pop
int
rcl
cmps
test
xor
jge
int
cwde
pop
int
mov
jo
mov
loopne
mov
add
retf
xor
ss
int
add
int
xchg
or
retf
xor
ds
int
neg
dec
repnz
fdiv
mov
ja
inc
xor
mov
xchg
or
imul
mov
mov
pop
cld
xor
or
inc
(bad)
cmp
adc
fadd
int
pop
stos
adc
rcr
pop
mov
dec
sbb
jbe
adc
or
mov
push
popf
(bad)
ret
add
les
cmps
adc
mov
xchg
mov
xor
mov
pushf
xor
pop
mov
dec
add
xor
jge
ret
lock
add
fsubr
inc
int
lea
ret
lock
or
fcomp
sbb
(bad)
pop
xlat
adc
ss
int
aas
loopne
mov
add
retf
adc
pusha
xor
jge
dec
xchg
pop
cld
xor
or
(bad)
push
ret
inc
loopne
(bad)
pop
push
int
ret
retf
xor
jmp
inc
fild
int
inc
cmp
inc
in
(bad)
ss
mov
inc
add
dec
cmp
mov
push
mov
pop
cld
xor
push
xchg
dec
cmp
cmp
inc
int
daa
out
and
add
daa
jge
int
jge
and
pop
fdiv
mov
and
mov
or
or
inc
inc
ja
int3
daa
adc
jge
inc
rol
fnsave
mov
inc
cld
mov
(bad)
adc
test
jp
xor
jge
leave
dec
xor
jge
into
dec
xor
pop
push
int
add
retf
xor
adc
dec
add
int
add
stc
jge
xor
fild
xor
add
les
(bad)
adc
add
retf
xor
jge
xor
mov
dec
jge
adc
aam
add
cmps
ret
dec
lea
xor
xchg
and
mov
ins
cld
xor
daa
mul
mov
add
jbe
xor
pop
ret
inc
loop
dec
iret
inc
xchg
mov
push
xor
jge
or
or
scas
add
mov
leave
dec
inc
cmp
mov
aas
mul
mov
add
dec
xor
xchg
or
pop
cld
xor
pop
movs
adc
inc
int
mov
or
inc
lea
add
(bad)
pop
lahf
adc
add
xor
jge
inc
ficomp
fnsave
mov
rcl
or
les
mov
pop
fistp
dec
or
mov
adc
pop
cld
xor
pop
fist
mov
imul
mov
push
xor
pop
fdiv
mov
(bad)
call
cld
xor
mov
mov
pop
(bad)
adc
pop
cld
xor
fist
mov
xor
cld
xor
shl
or
mov
lahf
les
mov
daa
inc
shr
dec
add
fisubr
fdiv
mov
cwde
xor
mov
dec
lea
xor
pop
fdiv
mov
mov
nop
jge
inc
inc
xchg
xor
or
jno
xor
xchg
push
in
faddp
add
in
xor
adc
aam
int
pop
mov
mov
or
dec
add
jne
add
les
mul
mov
or
dec
mov
ja
iret
dec
int3
inc
push
aas
int3
dec
sub
dec
add
retf
xor
add
int3
push
pop
inc
retf
xor
jge
int
das
out
mov
push
inc
cli
data16
mov
repz
mov
repz
cmps
add
mov
mov
repz
cmps
xchg
inc
mov
mov
call
jns
or
and
xor
ss
imul
or
mov
jbe
les
add
jge
mov
mov
pop
cld
xor
mov
ins
cld
xor
sub
or
cld
mov
xchg
jge
int3
inc
xor
outs
xchg
jge
or
or
mov
add
iret
mov
add
cmp
add
dec
xor
mov
add
cmp
add
dec
xor
mov
add
cmp
mov
in
pop
cld
xor
jl
iret
dec
int3
cmp
in
xor
pop
cld
xor
jge
mov
mov
cld
xor
inc
dec
jmp
pop
mov
pusha
add
jmp
jle
dec
pop
push
xor
pop
mul
mov
xor
cld
xor
add
cmp
ss
int
lods
push
mov
xchg
mov
xor
mov
pushf
xor
pop
mov
dec
pusha
jns
xor
fcomp
mov
mov
int3
outs
cmp
inc
inc
inc
xor
into
idiv
les
add
or
inc
xor
clc
cmp
inc
int
xchg
add
dec
jno
dec
and
out
or
repnz
inc
add
mov
(bad)
pop
repnz
dec
add
mov
test
push
and
jge
or
jne
es
or
ret
hlt
test
add
dec
imul
dec
xor
mov
dec
xor
mov
inc
add
or
in
add
lds
cmp
rol
int3
inc
xor
int3
jb
add
dec
jmp
or
cmovle
cwde
mov
mov
dec
cmps
ret
int
add
or
ret
add
loope
int3
js
mov
cmp
pop
dec
or
ret
add
or
ret
mov
int3
jp
mov
dec
lea
int
cmp
dec
add
dec
add
dec
or
mov
(bad)
xlat
sti
ret
cmp
add
ja
pop
dec
or
dec
or
xor
int
cld
xor
imul
fadd
jge
es
add
dec
add
dec
lock
or
cmovle
cwde
mov
mov
jb
add
dec
test
ret
cld
xchg
adc
retf
or
pushf
pop
rcl
(bad)
test
out
shl
dec
jne
inc
or
push
daa
jge
int
aam
int
loopne
int
or
dec
xchg
dec
jae
add
inc
add
repz
add
or
dec
dec
mov
jl
(bad)
pop
hlt
cs
inc
mov
pop
xchg
xchg
inc
stos
cmp
in
dec
sub
push
add
sbb
cmp
xchg
int
stos
pop
int
jne
inc
retf
xor
mov
cmp
cld
xor
push
fwait
dec
or
pop
push
int
add
mov
sti
inc
mov
pop
add
xlat
mov
sbb
cmp
add
int
test
sahf
dec
sbb
mov
int3
outs
adc
pop
(bad)
mov
dec
int
call
add
and
sub
cmp
add
std
xor
fwait
xor
(bad)
cmovle
xor
mov
or
cmps
dec
aam
xchg
push
add
mov
ret
fstp
call
add
mov
jne
mov
int
mov
dec
add
dec
test
or
add
mov
jge
xor
push
lahf
dec
adc
rol
int
(bad)
jmp
dec
add
add
add
adc
retf
or
dec
mov
cmp
mov
and
add
dec
call
add
dec
inc
cld
mov
dec
or
dec
mov
es
jle
dec
xor
mov
inc
mov
add
cmps
inc
push
int
or
mov
mov
xor
xor
inc
imul
sbb
jbe
sbb
lahf
dec
sub
(bad)
call
scas
rol
cmps
jl
int
aam
push
pop
add
mov
in
or
mov
add
adc
pop
add
xlat
mov
push
rcl
lock
fnstenv
sti
cld
mov
les
dec
sub
sub
add
(bad)
jge
lds
or
dec
mov
jbe
jle
call
sub
(bad)
sti
inc
mov
add
cmps
test
int
call
push
xor
xchg
cld
mov
push
add
cmps
mov
ret
lea
mov
adc
retf
or
pushf
sbb
push
inc
cmp
pusha
shl
xor
add
jle
mov
movs
test
dec
mov
jle
xor
mov
or
sbb
jbe
daa
ret
jecxz
dec
push
sahf
dec
sub
rol
in
add
int3
inc
adc
xchg
imul
popf
daa
mov
(bad)
dec
push
sahf
dec
add
inc
(bad)
jmp
mov
or
mov
pop
repz
lds
mov
(bad)
repz
or
cmovle
cwde
mov
imul
rol
sub
add
int3
inc
or
sbb
out
sbb
push
inc
adc
inc
xor
jmp
add
je
inc
int
mov
int
(bad)
xor
push
movs
jp
inc
int
mov
mov
cmps
jmp
sbb
add
stos
rol
xchg
adc
rcr
rcl
hlt
or
fnsetpm(287
xchg
or
stos
mov
loope
dec
add
dec
add
dec
add
dec
movd
ret
jo
cmp
jmp
dec
xor
les
or
mov
std
in
add
mov
or
ret
cld
ret
push
cmp
inc
sbb
mov
xor
out
out
iret
into
jno
out
add
mov
jbe
(bad)
(bad)
cmpps
add
jl
out
into
inc
iret
retf
or
or
or
add
dec
test
dec
and
xor
cwde
or
int3
xchg
or
inc
or
push
lds
adc
lahf
jmp
mov
clc
xlat
loope
loopne
add
(bad)
dec
sub
lods
jne
inc
or
mov
xor
or
clc
rol
cwde
lods
lea
mov
or
inc
xor
or
clc
ror
in
add
(bad)
out
adc
retf
adc
int
ret
hlt
(bad)
lea
cmp
pop
retf
pop
fist
ja
fist
xchg
pop
jle
xchg
pop
fist
inc
pop
fist
xchg
pop
movlps
pop
fist
xchg
pop
movlps
adc
cmp
pop
fist
mov
pop
hlt
push
loop
dec
adc
pop
retf
pop
fist
ja
fist
xchg
pop
jle
xchg
pop
fist
or
pop
xchg
pop
fist
jbe
fist
xchg
pop
adc
and
xchg
(bad)
xor
xchg
stos
cmps
add
dec
ficom
enter
int
scas
popf
icebp
jb
xchg
pop
fisttp
dec
leave
fist
xchg
inc
pop
mov
pop
fist
xchg
dec
mov
enter
xchg
mov
adc
rcr
xchg
dec
ja
xchg
pop
fcomip
retf
pop
fist
xchg
lods
fist
xchg
pop
(bad)
jmp
ret
rol
lds
jle
int
rol
scas
rol
pop
aaa
xor
pop
fist
mov
pop
and
adc
adc
pop
fist
ja
fist
xchg
pop
hlt
(bad)
lea
fist
xchg
pop
inc
xchg
pop
fist
xor
fist
xchg
pop
pop
adc
add
mov
adc
pop
pop
adc
lds
jle
pop
jle
xchg
pop
fist
add
lods
jo
pop
fist
mov
pop
int3
jp
pop
fist
ja
fist
xchg
pop
hlt
push
loop
dec
adc
pop
inc
xchg
pop
fist
xor
fist
xchg
pop
pop
adc
add
mov
adc
pop
pop
adc
daa
pop
aaa
xor
pop
fist
add
lods
jo
pop
fist
bound
adc
fdiv
or
dec
mov
or
(bad)
(bad)
bts
(bad)
(bad)
or
mov
mov
inc
and
(bad)
jmp
sub
mov
je
mov
out
inc
or
mov
add
stos
add
idiv
xor
(bad)
xlat
inc
or
adc
es
xor
or
inc
sbb
mov
xor
(bad)
stc
int
test
dec
add
mov
jb
add
inc
xor
ss
jnp
sbb
jne
inc
mov
inc
sbb
lea
push
aaa
lds
pop
icebp
xor
adc
repz
adc
stc
iret
stc
in
or
ret
sbb
int
xchg
mov
stc
xchg
or
add
pop
(bad)
xchg
mov
lea
push
xor
add
or
and
inc
xor
ss
or
int3
mov
lea
popf
cmps
inc
dec
int
call
push
inc
xchg
xor
cmps
xor
dec
add
jmp
dec
jne
xor
(bad)
iret
inc
or
or
cld
mov
retf
inc
add
xchg
adc
rcr
rcl
icebp
cmp
repz
mov
int3
add
cmc
pop
into
(bad)
ror
pop
mov
or
popf
sub
(bad)
push
pop
inc
lea
push
and
mov
add
jns
add
ret
popf
mov
or
int3
inc
or
ret
ret
add
dec
lea
iret
les
add
pop
mov
mov
add
jle
sbb
in
mov
ds
nop
cmp
call
xcrypt-ecb
cmps
dec
or
into
dec
inc
mov
and
dec
add
or
imul
dec
or
into
or
fcomp
xchg
or
rol
dec
dec
mov
xor
rol
or
fadd
pop
add
repnz
pop
add
dec
and
jo
add
xchg
aas
inc
int
(bad)
sti
mov
dec
or
dec
or
mov
popf
inc
loope
inc
push
mov
lahf
aas
inc
int
add
int
or
cmps
cld
dec
int
or
inc
xor
mov
mov
les
rol
mov
call
inc
int
pop
add
(bad)
aas
inc
int
push
or
or
retf
jo
or
mov
cmp
dec
or
into
or
fcomp
xchg
or
rol
dec
dec
mov
cmp
rol
or
fcmovb
jb
cmp
dec
(bad)
repz
pop
pop
mov
dec
or
ins
fwait
aas
inc
int
xchg
jo
cmp
mov
cmp
ret
in
sbb
or
pop
scas
aas
inc
int
(bad)
shl
or
jb
mov
cwde
mov
pop
out
or
aas
inc
int
mov
dec
xor
mov
push
or
cmp
inc
or
or
inc
xchg
add
popf
cmps
or
mov
and
sub
add
mov
icebp
push
add
or
int
(bad)
jmp
mov
jecxz
mov
out
clc
retf
add
(bad)
jb
sub
(bad)
rol
jbe
cmps
enter
shr
xor
pop
pop
xchg
adc
rcr
add
sbb
push
jae
loop
mov
jb
sub
pop
out
xor
xchg
or
or
imul
cmp
dec
jne
inc
retf
xor
leave
add
cmc
push
dec
scas
pop
ror
aaa
dec
inc
cli
shl
mov
mov
mov
(bad)
pop
cld
xor
mov
cld
int3
movs
lods
jmp
add
add
stc
(bad)
cld
ja
iret
popa
fstp
or
cmp
jnp
in
or
xchg
mov
or
xor
(bad)
cld
int3
(bad)
icebp
inc
hlt
enter
cld
xor
add
lea
cmp
xor
retf
mov
cld
inc
pop
cld
xor
and
daa
ja
(bad)
dec
jbe
popf
cmps
in
dec
int
or
in
or
cmps
dec
call
add
dec
ret
mov
cld
xor
push
test
mov
jg
xor
jb
cmp
inc
cmp
and
and
jg
xor
jmp
repnz
cli
jbe
xor
cmp
mov
je
int
jge
mov
daa
pop
fmul
mov
cld
popf
cmps
jo
int
add
and
retf
xor
rol
retf
xor
add
mov
ja
or
rol
sbb
ret
xor
add
cmps
lahf
add
dec
shr
nop
rol
xor
int
add
iret
push
int
add
xchg
inc
stos
rcl
sbb
mov
jmp
jp
or
add
int3
out
int
(bad)
sti
popf
ret
popf
and
lea
cmps
dec
call
jbe
mov
or
(bad)
jae
add
dec
xor
(bad)
sti
inc
mov
sti
inc
mov
xor
dec
jge
fnsave
retf
add
mov
jmp
adc
pop
add
xlat
mov
sbb
mov
mov
pop
and
and
xchg
cld
mov
mov
or
int3
inc
sbb
stos
aad
and
and
mov
sti
inc
mov
pop
cmps
dec
cmovbe
pop
jge
fnsave
mov
retf
dec
add
mov
mov
push
rcl
scas
mov
dec
or
mov
imul
dec
call
add
cmp
cmps
test
or
movs
mov
mov
mov
pop
cmps
dec
jge
fnsave
retf
inc
inc
ja
mov
jmp
jle
call
or
mov
dec
xor
paddusw
push
sbb
out
mov
not
inc
or
mov
dec
mov
push
(bad)
hlt
sub
(bad)
repz
mov
ret
popf
daa
fwait
add
dec
call
cld
mov
dec
or
cmp
mov
dec
call
cld
mov
dec
or
cmp
push
test
xor
or
add
test
inc
and
inc
cld
mov
dec
or
call
stos
rcl
sbb
mov
int3
mov
add
dec
adc
les
int
(bad)
sti
ins
mov
inc
int
(bad)
sti
mov
mov
(bad)
cld
pop
call
or
add
dec
jmp
or
inc
int
inc
jbe
jle
call
xor
mov
inc
int
or
int
or
adc
retf
in
inc
push
push
or
cld
xchg
ret
cmps
pop
inc
pop
jecxz
(bad)
dec
or
mov
mov
push
rcl
sbb
jbe
(bad)
fisttp
or
jle
mov
scas
mov
lea
push
xor
pop
call
sar
mov
mov
not
and
int3
inc
cmove
xchg
(bad)
add
dec
or
dec
pop
aas
repz
test
dec
jae
add
iret
mov
mov
test
mov
inc
or
adc
mov
push
les
dec
fimul
or
cmp
push
xor
xchg
jmp
or
jle
movd
cwde
mov
fcmovne
mov
or
(bad)
or
cmps
dec
sbb
rcr
rcl
(bad)
fisttp
jae
in
sub
(bad)
jb
cmp
fadd
add
mov
inc
mov
dec
mov
ret
or
sbb
imul
or
dec
mov
cmp
or
or
jl
int
retf
xor
jae
mov
dec
sbb
xor
push
or
aam
xor
dec
cmp
int3
hlt
das
mov
inc
sbb
sbb
inc
bound
daa
fcomp
(bad)
dec
aad
jno
add
mov
or
or
mov
lods
inc
or
xchg
adc
rcr
add
lock
add
sbb
push
jae
sti
mov
into
je
sti
dec
add
dec
add
int
jb
cmp
mov
std
xor
jge
shl
mov
cmp
or
dec
add
int
(bad)
push
and
jle
jmp
xchg
jmp
or
add
cld
xor
xor
mov
std
xor
pop
xlat
xor
jge
xor
(bad)
mov
xor
push
cld
xor
xchg
int
call
add
mov
xor
add
test
jg
inc
mov
lds
xchg
int
push
mov
mov
(bad)
(bad)
or
cld
xor
jge
dec
jae
add
inc
or
int3
mov
jmp
cmp
mov
add
cmp
add
mov
nop
rol
cli
jle
xor
add
dec
cmp
mov
call
movs
mov
aaa
push
mov
jmp
or
jmp
or
add
(bad)
jne
dec
mov
jle
cmps
mov
int
cmp
dec
sbb
mov
std
xor
jmp
jl
add
int3
inc
adc
retf
mov
jge
xor
inc
jmp
or
add
(bad)
jne
dec
mov
jle
daa
jb
(bad)
dec
jge
xor
mov
movs
js
inc
int
aaa
push
mov
jmp
or
jmp
or
add
(bad)
jne
dec
mov
jle
daa
jb
(bad)
dec
jge
xor
mov
int3
inc
or
in
retf
xor
mov
test
xor
js
mov
push
mov
mov
push
mov
jle
xor
rol
cmps
add
int
add
fnsave
pop
inc
int
pop
push
mov
push
movs
outs
pop
inc
int
push
mov
or
push
mov
mov
push
mov
call
movs
mov
aaa
push
mov
jmp
or
imul
rol
cli
jle
xor
add
mov
mov
test
xor
js
mov
jmp
mov
std
xor
add
lds
sbb
xor
mov
int3
inc
or
test
xor
js
mov
push
mov
mov
push
mov
jle
xor
rol
cmps
cmp
int
add
(bad)
je
jecxz
sub
or
add
add
(bad)
jne
lahf
daa
jg
(bad)
dec
movsx
mov
cld
call
xchg
mov
cld
popf
mov
adc
jle
xor
rol
cmps
clc
inc
int
add
in
cmps
fadd
dec
cmp
int
sbb
xor
add
add
(bad)
jne
lahf
les
push
mov
push
movs
jno
inc
int
push
mov
or
push
mov
mov
push
mov
call
movs
mov
aaa
push
mov
jmp
or
add
mov
int
js
int
cmp
int
sbb
xor
add
cli
jle
xor
add
dec
cmp
mov
call
movs
mov
aaa
push
mov
jmp
or
mov
xchg
rol
cmp
std
xor
jmp
cld
rol
int3
inc
pop
and
test
xor
js
mov
jmp
mov
std
xor
add
(bad)
pop
int
jne
inc
retf
xor
rol
test
xor
js
mov
jmp
mov
std
xor
add
lds
cmp
int
sbb
xor
add
add
(bad)
jne
lahf
les
push
mov
push
movs
jno
inc
int
push
(bad)
dec
add
dec
lea
dec
jmp
mov
add
retf
xor
int3
add
int3
daa
mov
cmp
xchg
jg
into
retf
xor
jl
mov
mov
cld
into
repnz
xor
or
je
add
(bad)
jne
dec
(bad)
jecxz
inc
mov
sbb
dec
cmp
lods
inc
jmp
xor
inc
bound
mov
push
movs
adc
aas
add
mov
push
and
int3
inc
pop
inc
mov
jge
jne
jg
dec
repnz
xor
lea
xor
jbe
xor
pop
add
mov
push
inc
retf
xor
rol
cmps
int3
inc
int
add
aad
lods
inc
int
cmp
int
sbb
xor
add
cli
jle
xor
add
mov
ret
add
test
xor
js
mov
jmp
mov
std
xor
add
lds
cmp
int
sbb
xor
add
cli
jle
xor
add
mov
cld
dec
dec
add
retf
xor
jl
hlt
retf
xor
jge
inc
retf
xor
or
and
add
(bad)
(bad)
pop
inc
retf
xor
add
dec
lea
inc
mov
or
dec
or
dec
mov
cld
ret
add
dec
or
inc
retf
xor
fcmovnu
(bad)
dec
jbe
popf
cmps
int3
inc
int
add
rol
div
mov
add
xor
inc
gs
repnz
xor
add
retf
xor
cmp
xor
jge
xor
push
test
dec
mov
push
xor
dec
or
xor
jbe
xor
aaa
repz
jge
xor
jmp
xchg
mov
sbb
ret
mov
jge
xor
pop
mov
or
cmp
int
sbb
xor
add
cli
jle
xor
add
dec
cmp
mov
call
movs
test
mov
push
mov
jmp
jo
add
mov
xchg
jo
add
add
(bad)
jne
dec
mov
jle
daa
jb
(bad)
dec
jge
xor
mov
or
cli
jb
xor
add
mov
div
mov
mov
cmp
pop
jge
xor
cmps
xor
mov
mov
mov
or
mov
imul
rol
cli
jle
xor
add
dec
cmp
mov
call
movs
adc
mov
push
mov
jmp
jo
add
mov
or
add
add
(bad)
jne
dec
mov
jle
daa
dec
fisttp
mov
cld
and
int3
inc
or
repz
mov
repz
cmp
mov
call
movs
mov
aaa
push
mov
jmp
jno
add
mov
xchg
rol
cli
jle
xor
add
dec
cmp
mov
jmp
and
mul
add
dec
sbb
xor
or
call
jmp
jno
add
xchg
jmp
jno
add
add
(bad)
jne
dec
mov
jle
daa
(bad)
(bad)
dec
jge
xor
mov
or
addr16
push
repz
cmp
mov
call
movs
test
mov
push
mov
jmp
jno
add
mov
adc
add
add
(bad)
jne
dec
mov
jle
daa
jb
(bad)
dec
jge
xor
mov
or
test
xor
js
mov
push
lock
cmp
mov
jle
xor
rol
cmps
and
int
add
frstor
stos
fisttp
mov
cld
and
int3
inc
or
in
retf
xor
mov
add
dec
sbb
xor
js
mov
jmp
mov
std
xor
add
lds
sahf
fisttp
mov
cld
and
int3
inc
or
test
xor
js
mov
jmp
mov
std
xor
add
lds
cwde
fisttp
mov
cld
and
int3
inc
or
repz
mov
icebp
dec
cmp
mov
call
movs
mov
aaa
push
mov
jmp
jb
add
mov
xor
or
popf
daa
sbb
dec
shr
add
add
xchg
jmp
jae
add
add
(bad)
jne
dec
mov
jle
daa
jb
(bad)
dec
jge
xor
mov
or
repz
mov
add
or
jge
xor
add
lds
cmp
int
sbb
xor
add
cli
jle
xor
add
dec
cmp
mov
inc
adc
dec
adc
cld
xor
rol
cmps
mov
(bad)
frstor
cmp
int
sbb
xor
add
cli
jle
xor
add
or
jge
xor
add
(bad)
sub
je
add
add
(bad)
jne
dec
mov
jle
daa
jb
(bad)
dec
jge
xor
mov
or
test
xor
js
mov
push
test
scas
dec
add
mov
jle
xor
rol
cmps
and
int
add
frstor
push
fimul
mov
cld
and
int3
inc
or
dec
call
add
dec
ret
inc
push
cmc
dec
or
into
inc
outs
iret
dec
cmp
mov
std
xor
call
cld
xor
jle
xor
jg
and
mov
jmp
mov
jmp
js
add
cli
jle
xor
or
idiv
xor
inc
push
and
les
out
xor
dec
rcr
add
sbb
mov
mov
cld
int
mov
add
inc
xor
xor
jmp
mov
cld
xor
push
test
fimul
mov
cld
popf
daa
add
iret
push
cmp
push
add
dec
or
jae
jno
and
rol
add
add
iret
push
cmp
xchg
rol
xchg
pop
inc
int
imul
int
add
mov
mov
mov
adc
cwde
(bad)
and
add
sbb
push
jb
xchg
sub
test
(bad)
xor
push
(bad)
xor
add
int3
inc
push
ret
dec
scas
or
(bad)
(bad)
or
xchg
int
or
(bad)
jp
xor
(bad)
(bad)
or
(bad)
push
cli
dec
or
dec
ror
sbb
cli
dec
or
mov
mov
cmp
mov
jg
xor
(bad)
or
ret
int3
or
jge
inc
mov
sti
inc
mov
jmp
js
add
(bad)
xor
jge
and
mov
xor
jg
xor
or
les
ja
mov
mov
aas
jg
xor
(bad)
or
ret
int3
or
jge
movs
dec
push
inc
int
push
xchg
jge
cmps
pop
call
(bad)
xor
add
mov
sti
inc
mov
clc
dec
adc
mov
add
dec
jbe
popf
daa
sub
mov
or
add
int3
inc
daa
les
push
ss
mov
and
add
cmps
nop
std
xor
or
pop
jbe
popf
cmps
or
int
jge
pop
mov
cld
xor
adc
xor
jge
xor
or
xor
jge
xor
and
xor
jg
xor
push
aas
mov
or
or
les
call
ret
and
add
daa
and
(bad)
dec
jbe
popf
cmps
push
cmp
dec
or
cld
mov
les
ss
xor
jl
xor
push
cmc
dec
sub
mov
push
(bad)
xor
add
or
add
cmp
xor
add
mov
cld
xor
add
imul
push
int
jne
inc
retf
xor
data16
xor
in
dec
cmps
jl
xor
xor
cld
xor
pop
stos
mov
jmp
mov
add
into
ins
aas
movs
dec
or
pop
push
and
es
xor
jl
xor
call
and
dec
jbe
popf
and
add
(bad)
lea
xor
sub
xor
add
mov
xchg
xor
rol
xor
int
pop
push
mov
push
and
int3
inc
adc
retf
xor
jp
xor
mov
cld
xor
jmp
jp
add
ret
mov
dec
sub
jnp
add
jmp
mov
jg
xor
jno
inc
pop
ja
daa
cmp
push
stc
dec
add
dec
test
dec
jb
int
aam
int
cmp
dec
xor
mov
xor
xchg
int
jbe
popf
sbb
(bad)
stc
dec
sub
call
xchg
mov
cld
popf
cmps
jmp
xor
jge
int
mul
dec
jmp
xor
movs
xchg
sub
cld
xor
in
xchg
popa
add
dec
add
int
pop
mov
mov
push
and
into
ins
arpl
enter
and
jg
xor
jge
imul
pop
lahf
xor
jp
xor
adc
ror
xlat
mov
int3
outs
pop
sahf
sbb
mov
mov
mov
mov
or
xor
mov
and
(bad)
in
cwde
mov
jbe
cmps
pop
xor
dec
or
stos
(bad)
xlat
push
cmp
add
mov
jl
add
mov
jl
add
clc
(bad)
std
ret
dec
lahf
lea
clc
xlat
test
sub
jge
add
ret
dec
xor
mov
mov
sti
inc
mov
pop
inc
or
push
and
int3
inc
rdmsr
cmp
push
popf
cmps
shl
int
jge
rol
xor
mov
jle
add
cmp
mov
sbb
mov
push
and
(bad)
jp
xor
clc
(bad)
std
inc
or
int3
lahf
lea
dec
shr
leave
jle
add
jp
cmps
dec
aam
dec
sbb
add
pop
mov
int
inc
mov
and
mov
int
(bad)
sti
popf
sbb
cld
dec
adc
mov
int
(bad)
sti
xchg
adc
retf
or
jne
popf
add
cmps
sbb
int
rcl
(bad)
fisttp
jb
lea
(bad)
jp
xor
repz
cld
xor
popf
add
into
jne
mov
or
pop
jbe
popf
daa
in
(bad)
dec
push
loop
or
(bad)
add
(bad)
jp
xor
cli
inc
jecxz
mov
mov
dec
add
ins
jge
add
cmp
add
fiadd
int
mov
(bad)
cld
xor
inc
xor
retf
xor
jbe
popf
ret
sub
cmps
or
int
mov
mov
cmp
(bad)
sub
jnp
add
mov
or
xchg
xor
lods
add
(bad)
jp
sub
pop
mov
or
inc
es
imul
inc
stos
cmp
in
dec
sub
pusha
add
sbb
mov
or
mov
cmp
jge
inc
mov
imul
add
and
add
(bad)
pop
add
xor
inc
imul
sbb
jge
or
push
adc
mov
int
inc
or
loop
int
mov
pop
cld
xor
pop
repz
jb
cmp
nop
rol
retf
xor
add
mov
add
add
(bad)
jne
dec
mov
jle
daa
jb
(bad)
dec
jbe
popf
cmps
xor
dec
add
(bad)
push
mov
sub
jl
add
add
(bad)
jne
dec
mov
jle
cmps
and
int
cmp
dec
sbb
dec
(bad)
cld
xor
jmp
dec
(bad)
cld
xor
push
dec
or
push
dec
mov
push
mov
call
movs
mov
pop
add
aam
add
int3
inc
or
ret
sub
enter
int3
inc
or
in
retf
xor
mov
int
mov
int
sbb
xor
js
mov
jmp
dec
(bad)
cld
xor
push
dec
or
push
dec
mov
push
mov
jmp
and
mul
add
dec
sbb
xor
movsx
scas
jge
call
mov
call
(bad)
fnsave
pop
inc
int
pop
add
outs
pop
inc
int
pop
add
pushf
mov
int
inc
pop
and
test
xor
js
mov
jmp
dec
(bad)
cld
xor
push
dec
or
jmp
dec
(bad)
cld
xor
push
dec
or
add
int
add
cmp
add
test
xor
js
mov
jmp
dec
(bad)
cld
xor
push
dec
or
jmp
dec
(bad)
cld
xor
push
dec
or
push
dec
mov
push
mov
jmp
and
mul
add
dec
sbb
xor
movsx
scas
jge
call
mov
call
(bad)
frstor
stos
fisttp
scas
jge
popf
cmps
lods
xor
dec
add
lds
cmp
int
sbb
xor
add
and
mov
jmp
jge
add
mov
or
leave
fisttp
scas
jge
popf
cmps
ins
xor
dec
add
lds
cmp
int
sbb
xor
add
and
mov
jmp
jle
add
mov
xchg
rol
retf
xor
add
mov
add
add
(bad)
jne
dec
mov
jle
daa
jb
(bad)
dec
jbe
popf
cmps
or
int
add
(bad)
(bad)
cld
mov
scas
jge
popf
daa
lods
fisttp
scas
jge
popf
cmps
les
int
add
frstor
cmp
int
sbb
xor
add
and
mov
jmp
jle
add
mov
xchg
rol
retf
xor
add
mov
add
test
jge
inc
mov
std
dec
cmp
mov
call
movs
mov
pop
add
mov
add
int3
inc
or
imul
int
sbb
xor
push
or
movs
add
sbb
mov
call
mov
call
(bad)
frstor
cmp
int
sbb
xor
add
and
mov
jmp
jg
add
mov
xchg
rol
retf
xor
add
mov
add
cmps
les
int
cmp
int
sbb
xor
add
and
mov
jmp
jg
add
mov
in
jg
add
add
(bad)
jne
dec
mov
jle
cmps
mov
int
cmp
dec
sbb
dec
(bad)
cld
xor
jmp
dec
(bad)
cld
xor
push
std
dec
add
or
(bad)
cld
xor
push
std
dec
add
dec
call
add
sbb
xchg
loope
or
into
inc
inc
mov
or
pop
push
loopne
sub
aas
sti
adc
aas
add
cli
jle
xor
cmp
mov
cld
xor
mov
lea
mov
pop
cld
xor
inc
pop
xchg
adc
rcr
xchg
int
aam
jb
aad
rol
sub
sar
xor
cmc
dec
mov
or
sbb
stos
loope
or
dec
or
jne
add
mov
jns
xor
inc
jmp
add
cmps
mov
push
cmp
rol
int3
test
mov
frstor
jg
xor
push
jecxz
sub
add
retf
xor
rol
sti
pop
inc
int
add
iret
push
sub
mov
ret
add
dec
jmp
mov
cld
xor
jbe
popf
cmps
les
int
cmp
lahf
dec
xor
mov
ss
mov
mov
mov
inc
retf
xor
jge
dec
mov
jnp
dec
sub
rol
retf
xor
add
retf
xor
jl
xor
push
jecxz
sub
stos
jge
inc
retf
xor
or
cmps
or
add
cmp
xor
add
mov
mov
mov
mov
int
add
stos
jl
xor
add
int3
aas
fwait
xor
in
dec
cmps
jl
xor
mov
ret
xor
addr16
xor
jbe
popf
ret
xor
call
add
retf
xor
sub
dec
mov
ret
add
dec
jge
gs
cld
and
imul
cmp
inc
retf
xor
and
xor
sub
rol
retf
xor
add
mov
cld
xor
sub
int
jbe
popf
daa
neg
(bad)
dec
push
out
or
daa
push
int
push
out
add
dec
or
icebp
dec
lock
les
add
dec
jb
int
enter
jmp
fistp
xor
aam
add
mov
sti
inc
mov
add
ret
xor
xor
xor
inc
(bad)
mov
add
inc
push
iret
int
or
pop
shr
pop
mov
mov
or
dec
sub
aaa
xchg
xor
jns
xor
push
in
or
pop
jge
pop
mov
cld
and
mov
lods
add
mov
xchg
xor
add
inc
pop
inc
int
xchg
sub
dec
shr
xchg
rol
cmps
jo
int
add
fld
jbe
daa
mov
(bad)
dec
push
in
or
int3
imul
ds
mov
mov
cld
and
int3
inc
(bad)
push
xchg
jge
dec
cmps
mov
fwait
mov
xchg
xor
jge
dec
mov
mov
jns
xor
inc
push
and
mov
lahf
xor
or
pop
push
in
sub
aaa
cmps
xor
add
mov
sti
inc
mov
imul
pop
lahf
xor
dec
ror
xlat
mov
int3
outs
adc
inc
cmp
mov
mov
les
dec
or
mov
(bad)
or
add
(bad)
xlat
test
ret
add
mov
push
and
test
mov
sbb
sbb
dec
cmp
inc
xorps
dec
shr
int
add
cmps
shl
xor
call
pop
lea
add
dec
or
mov
sbb
in
or
jo
add
sbb
jmp
add
inc
mov
pop
xchg
xchg
inc
stos
cmp
fisttp
jmp
imul
mov
cmp
jge
inc
mov
push
xor
mov
and
mov
sti
int3
mov
(bad)
les
imul
ret
cmp
cmps
push
sub
dec
call
mov
jb
xor
push
jl
jge
or
cld
xor
ja
(bad)
jb
(bad)
inc
jno
dec
sub
push
in
or
xchg
inc
stos
add
rcr
push
in
scas
cmp
lahf
add
sub
xor
call
xor
or
dec
pop
inc
int
(bad)
neg
dec
cmovbe
pop
call
add
mov
sub
fldenv
add
clc
(bad)
std
dec
pop
inc
int
(bad)
neg
dec
add
aad
(bad)
neg
dec
add
jp
pushf
mov
out
dec
add
sub
xor
inc
xor
jp
mov
(bad)
push
sbb
mov
inc
mov
sti
inc
mov
add
dec
call
add
fild
imul
cmps
lods
sub
dec
or
cmps
dec
aam
std
mov
xchg
jmp
add
mov
call
cld
clc
cmps
pop
inc
int
hlt
sub
dec
call
cld
clc
iret
and
cmps
in
int
call
cld
clc
arpl
sub
dec
call
cld
clc
push
pop
inc
int
les
int
or
cld
mov
les
mov
sub
sub
add
dec
aam
std
mov
and
sub
add
dec
aam
std
mov
xchg
outs
or
add
dec
aam
std
mov
ja
or
add
mov
sti
inc
mov
add
jg
inc
int
push
add
mov
pop
and
dec
call
cld
clc
(bad)
inc
int
dec
and
dec
call
cld
clc
xlat
and
cmps
cmp
mov
les
stos
rcl
fld
mov
inc
mov
push
jp
sahf
mov
ds
add
and
pop
inc
int
mov
int
call
mov
jmp
add
and
and
cmps
mov
mov
les
rol
add
in
cmps
pushf
mov
fisttp
sub
mov
push
push
sub
imul
add
in
adc
jb
pop
pop
jb
add
rol
add
in
cli
mov
dec
jb
sub
sub
imul
add
in
scas
call
sub
mov
push
push
sub
imul
push
jp
mov
jmp
and
xchg
add
int
jle
clc
retf
and
cmps
int3
and
push
sbb
out
mov
push
inc
das
add
daa
pop
add
mov
test
xor
inc
imul
rol
cmps
pop
push
mov
(bad)
fucomp
mov
dec
add
dec
shr
movs
imul
es
or
in
or
cmps
dec
jge
stc
rol
add
mov
inc
cmp
or
fs
repz
and
add
pop
jmp
xchg
rol
dec
add
cmps
lods
and
ins
push
sub
mov
push
push
sub
call
sub
pop
call
add
iret
shr
xchg
rol
xchg
pop
inc
int
sub
push
add
sbb
cld
clc
jnp
inc
int
cmp
or
inc
int
adc
int
or
fs
repz
cmps
out
cmps
push
call
sbb
jmp
cmps
cmp
int
and
or
sub
sub
sub
sub
ds
dec
call
or
dec
or
dec
sub
call
pushf
mov
push
call
mov
aaa
push
push
sub
mov
ins
push
sub
mov
int
call
add
dec
shr
xchg
rol
xchg
pop
inc
int
sub
push
add
and
and
sbb
cld
clc
or
inc
int
xchg
imul
add
aaa
call
add
dec
jmp
cmps
nop
es
and
int
mov
push
push
sub
mov
ins
push
sub
push
add
dec
jmp
daa
add
pop
jmp
xchg
rol
dec
push
jmp
rol
add
sub
dec
call
pushf
mov
add
jp
mov
movs
aaa
add
daa
cmp
int
call
add
dec
jmp
cmps
sbb
int
and
push
push
sub
mov
push
push
sub
mov
ins
or
out
addr16
add
pop
jmp
nop
rol
retf
int
sub
imul
int
clc
(bad)
or
add
pop
push
jmp
xchg
rol
dec
jmp
cmps
pop
inc
int
nop
daa
int
call
pushf
mov
add
jp
mov
int3
dec
sub
sub
int
call
sbb
jmp
cmps
and
dec
and
xor
and
sbb
cld
clc
das
and
daa
scas
add
dec
call
add
daa
sub
int
jmp
nop
rol
retf
int
sub
ins
add
arpl
stc
xor
mov
mov
add
jp
mov
cmps
je
in
dec
sub
add
dec
add
daa
jmp
fst
or
add
int
and
cmp
cmp
jnp
inc
int
cmp
or
inc
int
xchg
imul
movs
mov
add
daa
xchg
add
dec
jmp
xchg
rol
xchg
pop
inc
int
sub
ins
add
cmp
inc
int
cmp
jnp
inc
int
cmp
or
inc
int
xchg
imul
dec
sub
adc
pop
inc
int
pop
fmul
dec
mov
call
mov
mov
add
jp
mov
movs
mov
add
daa
mov
int
call
add
dec
jmp
cmps
dec
and
dec
and
push
push
or
and
sbb
cld
clc
or
inc
int
xchg
imul
dec
sub
adc
pop
inc
int
pop
fmul
shl
(bad)
dec
call
pushf
mov
add
jp
mov
movs
arpl
add
dec
call
sbb
jmp
dec
add
sbb
add
in
push
mov
xor
pushf
mov
add
jp
mov
movs
int
add
daa
inc
add
dec
call
sbb
jmp
dec
add
pop
mov
xchg
lea
sti
in
or
cmps
dec
jge
stc
rol
add
out
rol
push
call
add
and
add
xchg
pop
inc
int
sbb
dec
jmp
outs
add
addr16
cld
clc
jnp
inc
int
cmp
das
and
and
ja
int
call
sbb
jmp
dec
add
shl
pushf
mov
add
jp
pushf
mov
add
jp
mov
movs
aam
add
daa
sub
int
call
sbb
jmp
cmps
in
int
and
movs
mov
cld
jne
movs
add
mov
or
and
adc
retf
or
dec
mov
ins
and
and
in
mov
mov
test
xor
inc
imul
rol
cmps
xchg
hlt
xor
mov
mov
les
rol
add
ret
popf
sbb
ror
and
rol
int
cmp
jnp
inc
int
adc
jle
mov
test
add
iret
shr
nop
rol
scas
pop
inc
int
add
dec
push
in
dec
and
dec
jge
stc
rol
add
(bad)
(bad)
sti
out
jb
and
and
add
xchg
int
pop
fmul
int3
mov
pushf
mov
hlt
mov
add
rol
add
out
ret
add
(bad)
(bad)
sti
out
jb
and
and
add
xchg
pop
inc
int
pop
fmul
jo
add
in
loop
(bad)
dec
call
add
dec
call
add
and
mov
cmps
add
int
or
cmps
dec
aam
std
mov
pop
push
push
sub
push
add
dec
jge
stc
rol
add
out
rol
sub
cmps
pop
call
sbb
jmp
cmps
push
sbb
dec
and
push
push
or
daa
clc
(bad)
or
add
mov
jmp
push
sub
push
add
cmp
int
sub
add
jp
sahf
mov
jp
dec
add
jnp
adc
movs
add
jmp
push
sub
push
add
pop
call
dec
int3
dec
cmp
cmps
pop
inc
int
les
jp
pushf
mov
add
jp
mov
int3
dec
sub
xchg
imul
or
rol
dec
push
ror
mov
dec
mov
add
jp
pushf
mov
add
jp
mov
int3
dec
sub
xchg
imul
add
daa
pop
fmul
or
js
int
and
push
push
sub
mov
jge
stc
rol
add
out
ret
add
dec
sub
xchg
add
dec
jmp
xchg
rol
xchg
pop
inc
int
sub
push
add
cmp
inc
int
jp
xor
mov
aaa
push
push
sub
mov
ins
push
sub
in
dec
dec
add
mov
add
pop
jmp
xchg
rol
dec
push
ror
mov
cmps
dec
jge
stc
rol
add
out
ret
add
dec
sub
add
sub
add
dec
shr
xchg
rol
xchg
pop
inc
int
sub
push
add
mov
cmp
jnp
inc
int
cmp
or
inc
int
xchg
imul
dec
sub
adc
pop
inc
int
pop
fmul
inc
pushf
add
in
push
mov
xor
pushf
mov
add
jp
mov
movs
stos
add
daa
fs
dec
call
add
dec
jmp
cmps
push
push
int
and
or
mov
push
push
sub
mov
ins
push
sub
jg
int
jmp
daa
add
pop
jmp
xchg
rol
dec
push
ror
mov
cmps
dec
jge
stc
rol
add
out
rol
push
jmp
and
add
fbld
inc
int
sbb
dec
jmp
push
add
push
pop
inc
int
inc
(bad)
(bad)
imul
push
sub
mov
ins
or
stos
imul
xchg
pop
inc
int
sbb
dec
jmp
push
add
addr16
cld
clc
jnp
inc
int
cmp
das
and
and
(bad)
daa
add
pop
jmp
xchg
rol
dec
add
cmps
ins
pop
int
and
push
push
sub
mov
push
push
sub
mov
ins
push
sub
sbb
int
jmp
daa
add
pop
jmp
xchg
rol
dec
push
ror
mov
and
(bad)
jp
xor
mov
dec
rcr
rcl
lock
jno
das
add
inc
cmps
dec
jmp
and
add
iret
jge
lds
or
dec
mov
or
fild
push
and
mov
dec
jp
or
push
aam
add
mov
cmovbe
pop
cmovbe
pop
jge
frstor
mov
add
dec
add
scas
in
jge
dec
mov
dec
cmps
dec
jge
xor
rcr
(bad)
dec
jmp
inc
jge
lds
add
aad
(bad)
sti
les
call
push
xor
xchg
imul
rol
dec
add
cmps
push
mov
aad
add
jne
inc
or
or
fcomp
mov
mov
into
outs
or
dec
adc
(bad)
sbb
push
add
gs
add
in
xor
ret
xor
call
mov
add
inc
add
(bad)
jne
inc
pushf
or
iret
(bad)
cld
int3
cmp
add
cmp
mov
jmp
push
add
xor
mov
or
jge
xor
push
aad
add
daa
ja
(bad)
dec
jbe
popf
cmps
je
int
add
xchg
add
jge
mov
or
jge
xor
push
fimul
xor
mov
(bad)
dec
jbe
popf
cmps
inc
adc
dec
add
dec
not
movs
add
inc
int
pop
add
mov
push
and
iret
(bad)
cld
retf
imul
cmp
mov
jmp
pop
add
mov
jle
xor
jge
mov
or
jge
xor
push
fimul
xor
and
int
jge
popf
cmps
fcom
inc
not
movs
nop
xor
ret
xor
xchg
add
iret
(bad)
cld
(bad)
cmp
add
cmp
mov
jmp
pop
add
mov
add
inc
not
movs
outs
xor
ret
xor
xchg
add
iret
(bad)
cld
sar
imul
rol
retf
xor
add
xor
mov
or
jge
xor
push
fisttp
imul
xchg
rol
add
inc
int
pop
add
mov
push
movs
dec
sbb
int
inc
out
mov
cmp
rol
nop
cmps
loopne
xor
sub
push
add
mov
mov
jl
xor
inc
jmp
dec
ror
xlat
mov
sbb
push
inc
cmp
dec
inc
mov
sti
inc
mov
hlt
fwait
cmps
clc
sbb
dec
maxps
dec
aad
and
int3
inc
or
(bad)
test
dec
aad
test
add
dec
adc
add
stc
inc
add
sbb
mov
inc
mov
cmp
sub
pop
out
mov
mov
daa
lock
dec
jbe
popf
cmps
xchg
adc
xlat
dec
cmp
mov
jp
xor
aas
lock
pop
jmp
mov
push
fmul
xor
cld
xor
adc
ret
cmp
xchg
add
(bad)
jb
cmp
mov
not
movs
test
inc
int
pop
out
cmp
xchg
add
iret
aas
lock
pop
jmp
mov
push
fmul
xor
cld
xor
adc
ret
cmp
xchg
add
into
ins
test
cld
xor
adc
ret
cmp
xchg
add
iret
aas
lock
pop
jmp
mov
push
fmul
xor
cld
xor
adc
ret
cmp
xchg
add
(bad)
jb
cmp
mov
not
movs
les
inc
int
pop
out
cmp
xchg
add
iret
aas
lock
pop
jmp
mov
push
(bad)
xor
cld
xor
movs
xchg
inc
int
pop
out
cmp
xchg
add
(bad)
jb
sub
pop
jecxz
mov
mov
iret
aas
lock
pop
jmp
mov
push
(bad)
xor
cld
xor
adc
ret
cmp
xchg
add
iret
aas
lock
pop
jmp
mov
push
(bad)
imul
outs
hlt
xor
jge
inc
mov
pop
hlt
xor
and
daa
or
call
or
xchg
bnd
xor
aas
jmp
mov
add
retf
mov
int
or
cld
mov
out
int
mov
cmps
dec
jmp
lea
dec
mov
cld
xor
or
xchg
add
cmps
xchg
int
add
int
push
iret
iret
dec
add
jne
xchg
dec
add
bnd
xor
add
mov
cld
xor
jp
xor
rol
retf
xor
add
mov
add
test
jge
inc
mov
mov
int
stos
jmp
push
add
mov
ret
inc
stc
retf
sbb
test
rcl
jp
xor
add
jb
sahf
mov
jbe
daa
adc
adc
or
pop
push
aad
add
daa
adc
adc
or
pop
push
fimul
or
imul
ret
xor
push
xchg
add
(bad)
jb
sub
pop
xlat
cmp
pop
push
pop
pop
inc
int
pop
push
mov
push
and
daa
sbb
xor
dec
adc
dec
add
fld
pop
push
mov
push
and
ret
xor
ror
xor
jmp
mov
cld
xor
push
fimul
or
call
sti
xor
add
dec
jmp
mov
cld
xor
push
push
mov
or
mov
ret
add
dec
jbe
dec
pop
add
push
or
jne
xchg
add
mov
jne
xor
inc
xor
cld
xor
test
dec
add
cli
jp
xor
sub
rol
retf
xor
add
mov
add
jle
xor
add
retf
xor
add
retf
xor
pop
hlt
xor
jl
xor
adc
pop
hlt
xor
jl
xor
or
ret
xor
jge
into
cmp
or
mov
int
aaa
sti
xor
mov
cld
xor
jmp
mov
cld
xor
push
fisttp
or
jbe
popf
cmps
inc
adc
dec
or
inc
bnd
xor
add
repnz
hlt
xor
aad
lea
or
jne
mov
mov
jne
xor
inc
mov
jp
xor
jge
cmp
xchg
add
ret
xor
and
add
ret
xor
jbe
xor
aad
test
add
jp
xor
aaa
div
cmp
call
add
pop
push
fmul
mov
jle
xor
sar
js
jp
xor
add
rol
or
mov
cld
js
jp
xor
add
scas
sbb
sbb
cmps
test
int
fucomi
arpl
fxch
cmovnp
arpl
dec
sub
pop
add
sbb
mov
dec
movs
test
jmp
daa
add
dec
push
fisttp
mov
ins
cld
xor
ja
pop
push
fmul
imul
dec
fisttp
push
(bad)
(bad)
or
sbb
push
push
push
adc
mov
add
daa
rcr
fmul
imul
add
fbld
inc
int
pushf
adc
dec
push
fmul
push
and
(bad)
pop
xor
dec
add
retf
xor
push
fisttp
imul
dec
jbe
popf
cmps
lahf
cwde
xor
jge
int
lea
dec
dec
div
call
mov
ja
or
mov
pop
int
cmp
sub
jmp
xor
stos
leave
inc
lahf
fisttp
inc
mov
xchg
push
jge
or
xor
call
int
lea
xor
push
dec
scas
pop
ror
aaa
dec
inc
cli
shl
mov
mov
mov
(bad)
push
ds
jge
dec
retf
xor
outs
cld
xor
jne
into
imul
loopne
cld
xor
and
dec
or
inc
inc
xchg
jge
dec
jge
inc
retf
xor
rol
sbb
ret
and
xchg
add
and
outs
cld
xor
jbe
popf
cmps
enter
jbe
popf
cmps
xchg
(bad)
xor
add
retf
xor
jge
dec
mov
mov
and
(bad)
pop
add
cmps
test
int
jmp
out
rol
mov
int
ret
dec
push
fimul
mov
ret
and
push
inc
int
mov
gs
dec
jmp
xchg
rol
aas
and
cmps
call
mov
inc
jp
aad
dec
cmp
int
xor
jmp
pop
out
rol
mov
int
mov
fimul
mov
ret
and
push
inc
int
mov
gs
dec
jmp
xchg
rol
dec
sbb
int
mov
int
add
(bad)
ret
and
push
inc
int
mov
int
jno
inc
xchg
mov
inc
mov
add
dec
call
add
dec
push
ret
mov
dec
call
or
dec
inc
inc
jne
lea
int
(bad)
mov
and
mov
int
movzx
mov
add
xor
or
repnz
in
xor
push
ret
imul
and
rol
cmp
jmp
inc
add
or
cld
ret
mov
cli
ins
cld
xor
push
fmul
mov
ins
cld
xor
dec
cld
(bad)
iret
mov
imul
pop
movsx
jge
call
add
and
shr
daa
jb
(bad)
dec
jge
jns
call
(bad)
mov
mov
and
outs
cld
xor
inc
cld
mov
dec
or
mov
inc
xchg
sbb
mov
aaa
push
push
or
xor
add
imul
add
dec
push
ret
mov
xchg
or
movs
dec
std
add
and
add
or
mov
call
add
mov
jne
mov
int
popa
mov
outs
cld
xor
pop
mov
mov
mov
mov
mov
or
inc
add
dec
add
xchg
fcmovne
xchg
or
inc
or
push
and
and
sbb
imul
and
add
dec
jmp
xchg
rol
dec
push
ret
mov
dec
mov
outs
int
jmp
and
add
dec
push
jle
jge
or
dec
ror
int
add
or
add
xor
int
push
ror
dec
jecxz
cld
xor
inc
jno
dec
sub
inc
add
dec
sar
pop
jecxz
cld
xor
jge
int
or
ret
and
cs
xor
rol
ss
inc
int
shl
int
add
inc
fnstcw
dec
mov
sub
ss
int
inc
push
mov
dec
add
push
cld
xor
jno
xchg
dec
or
pop
call
int
jb
jmp
inc
add
cmps
loopne
int
jbe
popf
and
jns
lea
add
dec
adc
mov
int
sub
add
dec
jge
int
ret
add
movs
call
inc
add
xchg
stos
fild
inc
sub
push
ret
dec
sub
sub
(bad)
out
cmps
lods
or
mov
xchg
int
or
dec
mov
rcl
lock
pop
sbb
cmp
dec
xor
mov
inc
mov
inc
ror
adc
retf
pop
add
dec
std
or
dec
and
push
or
dec
mov
or
sub
add
dec
neg
lock
add
inc
push
jl
dec
cmp
dec
add
retf
add
int
imul
xor
ss
int
lea
movs
mov
mov
jns
sub
stos
jge
inc
retf
xor
or
movs
mov
aaa
jmp
mov
jmp
stos
jge
dec
mov
cld
xor
pop
xlat
xor
data16
xor
or
inc
push
xchg
dec
or
pop
jge
mov
ret
add
inc
inc
ja
les
fbstp
mov
sub
jg
xor
push
inc
fimul
xor
jge
hlt
lahf
neg
retf
xor
jge
dec
cmps
xchg
xor
xor
mov
int3
les
jecxz
mov
sub
jg
xor
or
out
push
(bad)
xor
cmp
or
inc
int
cld
push
int
or
in
or
dec
jb
mov
dec
or
test
int
out
(bad)
dec
and
or
jp
or
cmps
addr16
add
jb
mov
dec
xor
mov
jns
sub
movs
jge
xchg
iret
mov
add
retf
int
jge
movs
sti
rol
pop
fs
xor
imul
or
out
sbb
pop
aaa
retf
imul
dec
imul
dec
and
or
or
(bad)
jp
sub
pop
jmp
mov
mov
cmps
xchg
mov
xor
stos
add
je
xchg
outs
or
xchg
or
xchg
push
push
xor
xchg
push
push
xor
xchg
jmp
or
xchg
fnstenv
push
push
xor
xchg
push
push
or
test
int
cmp
pop
push
ror
dec
mov
xchg
or
xchg
lds
push
push
xor
xor
fisttp
jbe
cmps
or
int
jmp
pop
push
ror
or
daa
(bad)
mov
add
pop
(bad)
xor
jg
xor
push
ror
dec
stos
jg
xor
or
cld
mov
les
ret
xor
push
mov
into
(bad)
dec
add
dec
mul
cmps
dec
call
inc
int
sub
inc
add
jp
sahf
mov
out
dec
sub
dec
add
retf
xor
jge
or
jo
xor
ss
int
lea
movs
mov
add
ret
xor
push
mov
(bad)
dec
or
int3
dec
cld
(bad)
iret
mov
xor
jmp
mov
cld
xor
call
jge
or
cld
xor
jbe
and
mov
(bad)
dec
call
add
mov
xchg
jmp
inc
add
sbb
adc
dec
jne
inc
retf
xor
jg
xor
jg
xor
jmp
mov
push
ror
or
cld
int
or
pop
jge
rcr
ret
pushf
mov
int
aas
(bad)
xor
call
or
int
mov
ss
ret
movs
mov
int
popw
int
jle
dec
xchg
dec
jae
add
cmp
imul
rol
dec
push
(bad)
dec
cmp
push
pop
inc
int
xor
int
imul
jl
xor
ds
push
mov
mov
jg
xor
mov
add
or
dec
or
dec
jge
rcr
ret
cmp
pop
int
add
int3
lds
push
mov
aas
fnstsw
fwait
add
ret
xor
jae
xor
rol
retf
xor
add
mov
add
jg
xor
and
cmps
fs
dec
add
int
mov
imul
rol
dec
push
les
cld
clc
iret
and
cmps
jl
int
imul
dec
or
pop
jbe
popf
daa
scas
fisttp
mov
cld
popf
cmps
cwde
or
dec
add
frstor
jge
int
jbe
popf
mov
das
push
push
sub
inc
add
bnd
xor
sub
sub
(bad)
dec
call
add
mov
das
push
push
sub
inc
add
fiadd
shr
or
pop
jbe
popf
daa
and
(bad)
dec
jbe
popf
cmps
xor
int
add
frstor
jge
int
jbe
popf
mov
sub
sub
inc
add
bnd
xor
sub
jmp
add
mov
sub
sub
inc
add
bound
(bad)
xor
ret
dec
xor
jp
mov
dec
jmp
cmps
ror
int
jge
in
ret
add
cmps
jp
int
inc
xchg
mov
cld
int
mov
std
xor
jl
xor
jg
jae
jge
and
scas
aam
dec
call
add
mov
sub
sub
dec
add
test
xor
jns
xor
add
xor
add
retf
xor
jg
xor
jmp
mov
push
les
or
jmp
mov
cld
xor
jge
in
rol
add
iret
aas
(bad)
xor
call
adc
or
sbb
rol
add
cmps
ret
dec
inc
xchg
mov
cld
int
mov
std
xor
jl
xor
jg
jae
jge
and
ins
aad
dec
call
add
mov
and
sub
dec
add
dec
add
iret
pop
stc
xor
jg
xor
add
int3
dec
idiv
ret
stc
xor
sub
int
pop
(bad)
xor
jae
xor
rol
retf
xor
add
mov
add
test
xchg
mov
cld
inc
retf
xor
call
add
dec
ret
rol
add
mov
xor
sub
aaa
repz
add
jb
mov
dec
xor
(bad)
xor
add
xor
inc
imul
mov
push
sahf
daa
mov
lea
mov
mov
cld
and
and
jg
xor
call
inc
int
aaa
repz
add
ret
xor
add
int3
dec
idiv
cmps
dec
setbe
mov
cld
lahf
pop
setle
jge
sahf
mov
repz
add
dec
jbe
popf
and
rol
cli
jb
xor
cmp
mov
jl
int
jge
mov
ret
add
and
xchg
and
add
adc
cmps
and
int
or
inc
mov
sti
inc
mov
add
cli
jb
xor
or
int3
dec
cld
(bad)
iret
mov
mov
and
jg
xor
rol
cli
jb
xor
sub
pop
out
xor
jmp
mov
push
pop
int
or
cld
mov
les
cli
jb
xor
add
and
inc
int
add
and
out
mov
dec
jmp
sti
rol
dec
add
cmps
and
aad
xchg
clc
inc
sbb
push
int
or
cld
mov
les
pop
jge
fnstenv
mov
mov
dec
sbb
rcr
xlat
mov
int3
outs
setle
aad
mov
xchg
mov
(bad)
(bad)
(bad)
dec
add
inc
pop
ror
dec
add
mov
xchg
jbe
mov
jmp
push
sub
dec
add
mov
int
mov
add
out
rol
enter
je
sub
(bad)
mov
das
push
push
sub
dec
add
jp
pushf
mov
or
jp
xchg
lea
(bad)
leave
dec
cmp
push
pop
inc
int
mov
clc
addr16
pop
int
or
cmp
inc
cmp
addr16
cld
clc
outs
sbb
pop
int
mov
add
sti
rol
cmp
inc
int
xchg
pop
int
mov
add
sti
rol
cmp
inc
int
js
int
imul
int
mov
xchg
mov
add
fcmovb
add
jp
mov
inc
push
mov
sti
in
or
idiv
pushf
mov
add
mov
ss
ret
dec
or
int
ret
jp
pushf
mov
add
(bad)
dec
mov
add
(bad)
ret
jp
mov
inc
push
sahf
pushf
mov
fdivr
mov
adc
cmp
pop
int
imul
xchg
xchg
int
add
push
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
cwde
(bad)
addr16
call
les
mov
mov
dec
add
mov
ret
mov
movs
add
ja
movs
sahf
inc
ret
or
outs
div
es
lds
dec
mov
mov
cmp
int
inc
add
dec
call
push
and
adc
xchg
into
outs
add
dec
sub
pop
add
dec
cmps
ds
add
movs
stos
(bad)
dec
dec
cmps
cld
sub
add
sbb
cld
xor
sub
adc
retf
cld
inc
or
daa
leave
mov
or
dec
inc
or
dec
add
push
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
lock
dec
adc
xor
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
.byte
(bad)
dec
adc
