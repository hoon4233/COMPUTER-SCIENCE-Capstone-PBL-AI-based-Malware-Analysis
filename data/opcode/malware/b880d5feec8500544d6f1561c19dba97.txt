call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
jmp
std
push
xor
add
fdiv
in
ret
jb
leave
sub
ret
mov
aam
div
ja
push
inc
mov
fcmovbe
xchg
mov
mov
ffreep
inc
add
adc
pop
mov
dec
shr
xor
jl
pop
call
in
mov
sbb
in
cwde
pop
mov
push
in
mov
ret
test
mov
pop
xchg
jne
scas
cld
cli
inc
daa
mov
mov
sti
inc
sub
out
cmp
inc
cmp
push
adc
stos
pop
into
mov
add
pop
mov
add
repz
aaa
lods
mov
cdq
and
mov
add
dec
stos
cmp
je
add
test
or
dec
scas
jnp
std
je
add
or
mov
cmc
fbstp
and
(bad)
sub
jo
mov
cmc
aad
or
gs
pop
sub
sub
sti
xchg
jle
jmp
push
mov
es
jecxz
sub
lds
mov
sbb
inc
and
shr
mov
mov
shl
cmp
outs
into
mov
repz
fnstsw
nop
adc
imul
hlt
imul
mov
retf
xchg
icebp
mov
fwait
test
rcr
ret
and
jns
mov
cmc
or
push
cmp
mov
xor
dec
adc
add
(bad)
leave
push
cmc
or
xchg
sysexit
dec
push
or
vmovapd
fldcw
push
gs
push
inc
inc
movs
push
xchg
mov
pop
call
and
push
(bad)
and
xor
fcmovbe
nop
(bad)
cdq
aas
aaa
sbb
aam
jg
ret
aas
inc
(bad)
mov
in
lahf
cmp
daa
in
fld
adc
cmp
and
test
pop
xor
nop
fidiv
aas
xchg
into
neg
fist
pop
xchg
sti
out
or
inc
push
and
jb
jge
push
(bad)
in
sahf
mov
jb
jnp
nop
in
xchg
mov
cmps
dec
loopne
stos
adc
popa
hlt
cmp
aas
stc
jne
pop
adc
cmp
cmp
loop
xor
mov
test
call
or
xor
or
lods
mov
aaa
mov
shl
inc
cmc
jne
mov
and
pop
mov
jg
cs
jne
out
push
gs
xchg
sysexit
dec
pop
or
cmp
std
cmp
sub
adc
fwait
or
adc
dec
jno
mov
(bad)
shl
dec
aaa
pusha
xor
jp
ret
addr16
cli
outs
mov
cli
outs
mov
sbb
(bad)
out
data16
outs
cli
outs
mov
cli
outs
mov
cli
outs
mov
lahf
adc
daa
jp
ret
addr16
cli
outs
mov
lahf
daa
adc
addr16
pop
(bad)
addr16
cli
outs
mov
cli
scas
shl
push
mov
(bad)
xlat
inc
dec
ret
push
mov
outs
cli
outs
mov
cli
outs
add
outs
cli
outs
mov
cli
outs
mov
cli
outs
push
pop
push
mov
fwait
out
push
mov
outs
mov
cli
outs
mov
xchg
cmps
adc
xchg
push
mov
and
push
(bad)
addr16
cmps
pop
push
mov
fstp
jb
lea
outs
mov
cli
outs
mov
cli
ins
adc
addr16
cli
outs
mov
cli
outs
mov
sbb
pop
(bad)
addr16
cli
outs
mov
cli
into
push
out
push
mov
outs
mov
cli
outs
mov
in
pop
mov
outs
mov
cli
outs
mov
cli
outs
add
outs
cli
outs
mov
cli
outs
mov
sbb
(bad)
push
int3
leave
repz
mov
pop
hlt
inc
jbe
ret
outs
cli
outs
mov
cli
outs
xchg
add
sbb
aas
ret
addr16
cli
outs
mov
sbb
push
push
(bad)
out
arpl
outs
cli
outs
mov
cli
outs
mov
cli
outs
mov
ret
outs
cli
outs
mov
cli
outs
adc
pop
rep
mov
cli
outs
mov
cli
outs
mov
pop
(bad)
cmp
outs
cli
outs
mov
cli
outs
mov
cli
outs
add
outs
cli
outs
mov
cli
outs
mov
cli
cs
adc
mul
and
nop
xchg
(bad)
push
mov
fldcw
std
retf
xchg
sahf
xchg
or
xchg
or
push
cdq
or
pop
int
push
or
pop
inc
sbb
out
addr16
ffree
dec
int
add
out
or
sub
(bad)
shr
cdq
mov
ret
std
mov
inc
mov
movs
dec
fcom
fs
bound
sbb
in
cmp
fild
in
mov
sahf
add
dec
daa
jmp
adc
sbb
adc
in
lahf
fwait
imul
or
pop
loopne
fsubr
and
bnd
mov
jp
scas
xchg
dec
out
or
test
stos
push
int3
and
cli
jne
mov
(bad)
jmp
add
test
push
(bad)
mov
loope
jns
das
aaa
pop
repnz
int3
icebp
inc
xor
jnp
das
mov
mov
nop
xor
or
adc
repnz
dec
inc
ins
adc
cmps
mov
fisttp
push
adc
or
mov
push
iret
ror
mov
pshufw
cmp
adc
retf
sbb
cmps
sbb
mov
(bad)
mov
jp
out
push
cmc
cdq
sahf
syscall
in
fild
lds
hlt
mov
jns
aad
push
xchg
or
pop
add
mov
or
aaa
adc
pop
and
ret
in
lahf
mov
jp
test
call
call
cmp
sar
push
mov
fimul
aad
pusha
ss
pop
aas
jb
mov
ss
pop
aas
jne
pop
aas
jg
pop
aas
ins
aaa
das
push
inc
mov
mov
aas
xor
jae
inc
ds
cmp
pop
aas
js
pop
das
cmc
repnz
aas
jne
pop
aas
je
jmp
mov
pop
aas
je
xchg
je
pop
aas
and
push
cmc
cmc
xor
jne
pop
aas
cmc
bound
jne
pop
aas
jo
pop
mov
jne
pop
aas
jne
pop
aas
jo
pop
outs
add
shl
jl
add
fadd
mov
or
pop
fldenv
mov
or
add
mov
stc
mov
mov
clc
(bad)
(bad)
cmp
pushf
xor
xor
xchg
fimul
in
out
pushf
or
mov
cmp
aam
xor
push
retf
or
xchg
cmp
aam
xor
aam
xor
cld
xchg
or
frstor
or
or
aam
xor
aam
sbb
into
scas
sub
(bad)
or
frstor
jb
ret
leave
int
or
jle
mov
adc
ja
adc
mov
dec
int3
in
sti
xor
mov
shr
test
aam
xor
aam
xor
aam
gs
loope
or
lods
add
or
cmp
iret
or
std
cdq
or
lea
lds
xchg
pop
(bad)
pop
push
fidiv
push
repz
mov
mov
mov
dec
fnsave
sub
xchg
add
loope
xchg
icebp
ins
push
push
sub
jae
cmp
data16
out
push
xor
out
mov
pop
in
sar
inc
or
ret
mov
hlt
(bad)
mov
rcr
dec
sub
mov
out
push
mov
imul
jno
sbb
nop
ficomp
retf
rcl
mov
dec
addr16
jbe
cmp
cmps
xchg
outs
sub
push
inc
xlat
fs
in
mov
sar
shr
add
mov
and
mov
sub
sub
lea
xchg
add
cdq
sar
mov
imul
xchg
push
imul
push
sti
test
retf
xor
cmp
mov
sti
adc
daa
pusha
js
in
fwait
mov
stc
cmp
adc
adc
das
cmps
cmp
fcmovnu
cwde
retf
push
test
cmps
cmp
es
inc
cmps
test
add
stc
sbb
(bad)
shl
mov
fxch
retf
rcl
lods
mov
(bad)
retf
sbb
inc
cli
rcr
cmc
jecxz
pop
mov
test
test
push
out
dec
test
cwde
cmc
sub
call
push
jp
jecxz
push
(bad)
fwait
je
retf
out
out
jnp
sub
shl
retf
fs
bound
dec
add
mov
data16
pop
add
mov
cld
retf
sub
add
mov
cld
leave
sub
add
mov
cmovle
and
mov
data16
pop
or
mov
mov
xchg
data16
pop
or
lods
mov
cld
dec
cld
push
sub
sub
inc
and
mov
and
outs
repnz
inc
punpcklbw
inc
ins
adc
mov
sub
(bad)
enter
enter
enter
adc
rol
jecxz
ins
adc
or
daa
xchg
enter
enter
enter
enter
mov
in
xor
mov
dec
mov
out
jo
and
pop
xchg
xchg
lods
rol
lods
mov
lods
rol
das
mov
int3
ss
clc
mov
daa
xor
mov
and
pop
sub
sahf
(bad)
ss
out
popf
push
xlat
xor
fild
cmp
mov
xchg
push
adc
mov
das
daa
xchg
enter
enter
enter
enter
enter
adc
add
xchg
add
retf
sbb
hlt
lock
cmc
test
mov
data16
pop
pop
and
mov
cld
ret
or
daa
xchg
enter
in
outs
int3
inc
call
inc
mov
adc
dec
jo
and
pop
test
xchg
lock
(bad)
addr16
cmp
inc
adc
retf
fdivr
inc
pop
sbb
inc
xchg
lods
mov
movs
inc
cmps
enter
enter
enter
sbb
mov
jbe
dec
leave
add
sbb
cwde
call
push
dec
sub
mov
aas
addr16
cmp
iret
enter
into
enter
enter
enter
inc
pop
push
enter
mov
lods
mov
lods
sar
in
leave
(bad)
inc
and
rol
jecxz
jo
jecxz
leave
inc
test
mov
and
pop
mov
xchg
lods
leave
xchg
ror
enter
enter
arpl
out
int3
and
and
dec
cli
push
into
xchg
lahf
dec
jne
and
cdq
addr16
and
lahf
dec
imul
mov
in
inc
and
ja
rcl
cld
mov
add
out
mov
pop
gs
js
je
sbb
pop
dec
cmps
daa
int
das
js
scas
push
sahf
lock
daa
dec
ret
dec
mov
imul
jmp
ret
(bad)
movs
call
call
imul
outs
sub
loop
inc
xor
add
mov
test
dec
retf
inc
or
xor
add
mov
repnz
push
(bad)
xor
mov
movs
jns
daa
out
sar
cmp
in
dec
out
retf
mov
sub
mov
cmps
enter
ror
rcr
mov
imul
icebp
test
xor
mov
jmp
dec
fwait
cwde
retf
add
jae
fdivr
xor
scas
cmc
jnp
adc
ficomp
ins
ja
dec
xor
ja
out
cli
jg
out
fcom
xchg
rcl
inc
xchg
dec
les
pop
in
iret
retf
retf
lock
sar
out
jno
out
adc
pop
jg
xor
jge
aam
cmc
jnp
mov
cmc
jecxz
fnstcw
add
retf
rcl
cmps
dec
popa
js
dec
inc
es
out
inc
inc
into
cwde
jmp
and
mov
sbb
and
add
repz
sbb
and
pop
and
pop
scas
cmps
dec
pop
and
pop
and
push
and
(bad)
sbb
pop
and
pop
and
push
and
adc
xchg
adc
dec
dec
pop
and
pop
and
push
mov
fwait
inc
pop
and
push
and
sub
dec
dec
pop
and
pop
and
dec
mov
mov
ret
add
in
repz
mov
or
add
nop
retf
xchg
shr
push
pop
out
nop
imul
adc
test
pop
and
push
and
add
dec
dec
fld
dec
dec
pop
and
pop
and
push
and
(bad)
frstor
dec
pop
and
pop
and
pop
mov
dec
dec
pop
and
push
and
aam
xchg
sub
test
retf
push
dec
pop
and
pop
and
pop
and
jge
dec
dec
push
and
std
imul
dec
pop
and
push
mov
mov
movs
jmp
cmps
fiadd
dec
in
add
pop
and
push
and
fld
dec
dec
push
and
(bad)
dec
sbb
dec
mov
out
inc
pop
and
pop
and
push
and
ror
xchg
popf
imul
and
pop
and
pop
and
dec
pop
and
push
mov
dec
sub
iret
and
in
test
dec
sub
sub
ret
sbb
and
pop
xchg
outs
dec
pop
and
push
and
mov
and
pop
jae
int3
xchg
retf
push
(bad)
mov
and
pop
jae
int3
xchg
retf
push
(bad)
jge
dec
dec
push
and
repz
lahf
add
out
add
push
or
mov
mov
jmp
add
ins
cmps
add
adc
cmps
and
push
sub
aas
mov
in
repz
js
fs
repnz
cwde
dec
daa
in
xchg
mov
jbe
mov
movs
mov
mov
outs
push
imul
cmovg
jg
test
in
fldenv
dec
dec
cwde
pop
dec
cmp
xor
sti
sub
daa
fstp
(bad)
ficom
or
ret
mov
out
cmp
sub
imul
or
jnp
test
fsub
shr
mov
into
push
in
xchg
xor
aad
enter
retf
lock
jmp
stos
mov
sbb
aam
jmp
inc
and
push
(bad)
pushf
jne
movs
adc
sti
mov
retf
in
into
dec
ror
js
fdivr
cmp
sbb
test
inc
pop
adc
mov
pop
jmp
cmp
sbb
sub
pop
arpl
fst
sar
adc
mov
gs
push
out
out
adc
xor
jbe
iret
pop
aam
rcr
mov
(bad)
cwde
cmc
sub
retf
ret
sbb
iret
adc
pop
fsub
test
cmps
int
dec
cs
inc
sub
repnz
dec
add
retf
cli
inc
xchg
jl
push
cs
into
and
dec
push
cs
into
and
dec
push
cs
inc
push
xor
dec
add
pop
pop
test
dec
dec
push
mov
xlat
retf
ror
inc
mov
retf
pop
test
(bad)
xchg
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
jl
xor
into
in
or
pop
ret
push
mov
dec
dec
add
int
add
mov
push
movs
nop
jno
mov
mov
aaa
std
pop
mov
repnz
mov
fld
mov
cmc
fmulp
pop
cs
push
movs
nop
jno
mov
mov
aaa
std
pop
mov
std
pop
mov
hlt
(bad)
xchg
mov
std
pop
mov
std
pop
mov
cmc
fmulp
add
mov
push
movs
nop
jno
mov
mov
aaa
std
pop
mov
(bad)
pop
mov
fld
mov
std
pop
mov
cmc
fmulp
or
mov
push
movs
nop
jno
mov
mov
aaa
std
pop
mov
hlt
(bad)
nop
mov
std
pop
mov
lock
mov
test
(bad)
mov
mov
push
mov
jno
mov
pop
mov
cli
pop
mov
fld
mov
cmc
fmulp
add
mov
push
movs
nop
jno
mov
mov
aaa
std
pop
mov
hlt
(bad)
mov
std
pop
mov
icebp
pop
mov
add
dec
into
xor
mov
jl
aaa
aaa
mov
jle
or
cmp
hlt
fld
mov
hlt
ficom
mov
xor
outs
test
pop
jle
hlt
clc
pop
movs
push
mov
mov
ins
mov
std
pop
mov
cld
pop
xor
xor
pop
mov
std
pop
mov
std
pop
mov
cmp
pop
mov
repnz
mov
hlt
lea
adc
pop
mov
std
pop
mov
cmc
pop
xor
jbe
jle
mov
std
pop
mov
std
pop
mov
std
pop
mov
inc
dec
jle
cmp
pop
mov
std
pop
mov
cld
pop
jge
adc
bound
xchg
jl
std
pop
mov
std
pop
mov
std
(bad)
jg
test
pop
mov
std
pop
mov
std
pop
mov
out
mov
data16
cld
out
dec
hlt
jg
std
pop
mov
std
pop
mov
hlt
ficomp
cmp
std
pop
mov
std
pop
mov
cmc
ficomp
mov
std
pop
mov
neg
(bad)
pop
xor
xor
pop
mov
lock
add
jl
xor
jge
xor
jl
xor
bound
jno
mov
std
pop
mov
lock
or
pop
mov
std
pop
mov
test
mov
repnz
mov
test
pop
dec
jno
js
push
xchg
dec
ret
jl
ds
ins
mov
std
pop
mov
cmc
pop
mov
jnp
jge
and
(bad)
or
mov
hlt
push
cmps
dec
fiadd
outs
into
aas
mov
pop
sahf
xchg
push
cld
aaa
std
pop
mov
hlt
pop
mov
or
pop
outs
les
dec
shr
mov
les
mov
std
pop
mov
std
pop
mov
(bad)
pop
int3
icebp
sub
pop
ds
pop
mov
std
pop
mov
neg
in
xor
mov
and
jl
xor
jl
xor
jl
xor
pop
fiadd
outs
mov
mov
aaa
std
pop
mov
neg
pop
mov
ins
out
mov
out
mov
in
mov
ins
sahf
mov
jle
es
push
xor
ins
mov
jecxz
xor
push
jl
(bad)
retf
adc
aad
ins
xchg
hlt
mov
je
aas
mov
adc
aas
cs
cmp
jnp
imul
daa
int
scas
gs
sub
and
je
mov
scas
mov
sub
hlt
(bad)
test
xchg
nop
xor
jbe
(bad)
cwde
retf
cmp
loop
mov
cmps
inc
std
jnp
loope
fcom
cmps
ret
ins
arpl
fs
sbb
mov
xlat
mov
mov
adc
jg
xchg
test
mov
cs
and
imul
mov
mov
mov
sar
imul
mov
sub
push
in
inc
arpl
addr16
jp
ds
adc
mov
cwde
rol
retf
mov
mov
sub
leave
fst
jne
cmps
mov
shl
(bad)
retf
adc
jmp
call
sub
stc
pop
pop
in
xchg
pop
xor
xchg
inc
(bad)
cwde
retf
mov
das
mov
shl
cwde
retf
mov
fisub
mov
fcom
mov
xor
jge
push
mov
(bad)
push
ds
sbb
mov
mov
add
dec
(bad)
aaa
fsub
push
dec
enter
pop
mov
dec
add
add
stos
xor
sub
push
add
arpl
push
push
addr16
mov
out
dec
bound
dec
dec
(bad)
movs
dec
enter
jo
pop
dec
sbb
test
movs
sub
xor
sti
xchg
jo
cdq
(bad)
mov
inc
arpl
es
es
and
xor
fild
inc
out
call
pop
pop
mov
dec
mov
test
push
cmc
(bad)
test
xchg
stc
jno
pop
inc
push
mov
outs
mov
add
push
inc
mov
and
imul
repnz
pop
movs
xor
test
lods
mov
mov
enter
loope
out
js
in
xlat
inc
inc
xor
push
fadd
ror
ror
scas
sbb
fimul
loopne
inc
xor
xchg
int
lock
ds
mov
ror
xchg
push
fsub
ret
inc
test
ret
neg
mov
(bad)
addr16
cmc
movs
dec
mov
adc
dec
adc
jo
fisubr
mov
(bad)
jo
sti
dec
(bad)
nop
adc
rol
cmp
mov
dec
mov
repnz
mov
(bad)
cmp
and
test
into
ja
and
cmc
cmc
dec
mov
icebp
dec
dec
ficom
pop
cmpxchg
loope
cld
inc
into
adc
in
dec
mov
adc
or
mov
xor
xchg
out
enter
cdq
rcl
daa
cmp
push
loop
(bad)
xchg
dec
imul
aaa
cmp
mov
push
add
js
cmp
loope
cmp
push
ds
call
push
js
loop
ds
sbb
pop
shr
push
push
shr
push
push
add
fdiv
or
loope
add
push
xor
pop
or
push
sbb
push
add
ins
add
cmp
arpl
push
add
into
jno
push
shr
cli
fisub
pop
jmp
push
cmp
jmp
ret
pop
or
outs
add
pop
add
push
push
add
sub
shr
push
add
push
add
fsub
pop
call
mov
popa
loope
add
push
add
mov
xor
arpl
push
add
mov
cmp
push
add
xchg
mov
dec
jmp
sub
mov
mov
inc
imul
cmp
mov
fidiv
pop
mov
cmp
inc
and
mov
inc
inc
mov
iret
jbe
dec
setp
iret
jbe
dec
setp
inc
inc
inc
mov
dec
jno
dec
out
or
je
dec
aam
jbe
dec
gs
inc
xor
(bad)
lds
cs
inc
ins
outs
out
jno
sub
cld
and
sub
xor
add
dec
(bad)
fadd
jo
shl
cmp
and
bound
pop
fild
add
mov
into
push
mov
xchg
ds
int
mov
loop
jo
cld
jge
dec
mov
mov
xor
ror
ror
sub
es
mov
fsubr
rcr
jbe
jns
cmp
jne
jo
mov
movs
into
jne
ds
and
dec
ds
mov
xlat
int
stos
aam
mov
sbb
jp
dec
jb
xchg
retf
in
xchg
inc
je
sub
outs
out
and
add
add
mov
mov
int
lods
test
dec
push
ror
out
fsubr
or
stos
or
iret
jge
cld
mov
imul
in
inc
xor
shl
test
mov
jg
fnstenv
loope
in
mov
test
jo
sti
pushf
cmp
out
dec
mov
(bad)
cmp
ror
inc
cld
cmp
in
in
retf
jmp
push
push
inc
dec
sub
iret
ins
xchg
rcl
mov
push
ins
idiv
push
dec
push
mov
and
push
dec
push
dec
push
out
inc
and
inc
and
pop
push
dec
push
mov
and
pop
les
push
dec
push
out
inc
rcl
dec
push
dec
push
lahf
inc
outs
mov
(bad)
push
imul
sar
ja
cwde
leave
xchg
or
dec
imul
dec
outs
push
iret
(bad)
push
imul
jbe
push
xchg
jne
clc
into
jbe
push
add
push
push
into
idiv
stos
xchg
jbe
sbb
ss
ret
push
mov
or
xchg
imul
sub
es
push
inc
cwde
push
ins
(bad)
out
test
dec
push
lahf
div
cmp
jbe
push
nop
not
sahf
into
jbe
push
es
sub
jbe
js
jbe
fmul
mov
push
into
idiv
stos
adc
push
pop
into
ss
inc
pusha
add
(bad)
test
idiv
push
dec
dec
ins
push
iret
xchg
test
dec
push
push
js
push
loopne
(bad)
jg
pop
dec
push
dec
push
out
dec
outs
push
in
push
push
neg
cmp
imul
inc
test
jno
sub
shl
dec
push
dec
push
pop
inc
test
jno
dec
idiv
pop
pop
dec
push
dec
push
lahf
test
(bad)
jg
push
dec
push
dec
push
dec
(bad)
jg
pop
dec
push
iret
test
idiv
push
dec
push
iret
dec
shl
dec
push
dec
push
iret
out
idiv
mov
out
ins
ss
in
clc
dec
or
dec
imul
dec
addr16
iret
push
pop
xor
dec
imul
pop
pop
push
dec
push
dec
dec
arpl
(bad)
imul
dec
outs
push
iret
test
idiv
push
dec
dec
popa
push
iret
(bad)
pop
arpl
dec
imul
dec
outs
push
iret
out
popa
idiv
mov
out
ins
mov
in
jmp
imul
jbe
ins
test
pop
loope
lahf
or
dec
imul
dec
gs
dec
push
ins
mul
std
jmp
test
das
dec
shl
dec
push
cmovne
pop
inc
test
jno
sub
dec
sub
es
ins
imul
pop
ins
test
dec
push
outs
dec
aam
and
pop
pop
sbb
push
ins
(bad)
and
popf
leave
inc
(bad)
repnz
imul
xlat
pop
cwde
leave
(bad)
cmp
repnz
imul
add
clc
inc
jns
pop
(bad)
cwde
push
fs
cdq
jbe
js
xchg
mov
clc
mov
sahf
push
icebp
shr
mov
jns
outs
sbb
into
xor
jb
into
xor
jb
outs
test
outs
pop
jb
into
xor
jb
into
cmp
jbe
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
and
mov
inc
aam
pop
pop
pop
mov
inc
mov
xor
mov
xchg
ret
pusha
add
mov
sub
jnp
stos
sub
dec
loope
outs
jle
rcr
cmps
mov
enter
xchg
mov
cmp
repnz
mov
jns
pop
out
cmc
jecxz
xor
push
shl
jbe
mov
fimul
int
fisttp
fnstcw
mov
fadd
jo
push
lahf
jg
jb
inc
into
add
into
mov
stos
cmp
test
mov
ja
js
lods
ja
inc
cmp
iret
test
push
outs
xchg
inc
sub
or
iret
cmp
jecxz
gs
sbb
call
pop
xor
iret
clc
out
inc
pop
shl
mov
push
adc
lock
dec
dec
push
xor
fcmovbe
mov
inc
xor
inc
jmp
ins
test
xchg
shl
icebp
ins
inc
dec
jae
dec
mov
(bad)
outs
dec
div
cs
aad
and
les
(bad)
in
pusha
dec
mov
add
mov
xchg
nop
adc
and
ror
adc
cmp
call
cwde
aad
(bad)
jg
mov
adc
or
fwait
dec
imul
xchg
dec
imul
mov
fmul
mov
fmul
mov
mov
or
push
sti
int
mov
lea
pop
out
(bad)
repz
mov
clc
enter
dec
sub
es
scas
cmp
fsubr
or
in
or
xchg
lahf
(bad)
(bad)
ins
sub
pop
call
mov
or
or
push
sar
fstp
in
mov
test
add
call
or
call
or
std
call
sbb
(bad)
fmul
mov
mov
mov
std
cwde
clc
in
mov
mov
sar
std
cwde
clc
in
fadd
mov
cmp
xor
es
mov
in
mov
inc
aaa
test
call
test
rcr
xchg
pop
mov
out
mov
(bad)
in
mov
aad
add
in
mov
in
mov
in
mov
out
mov
(bad)
in
mov
aad
add
in
mov
in
mov
push
xor
(bad)
in
out
jmp
fistp
sar
xor
and
sti
mov
call
xor
ret
mov
xor
(bad)
jne
mov
cmp
icebp
sub
arpl
ins
inc
mov
or
arpl
in
dec
mov
(bad)
in
xor
(bad)
aad
xchg
pop
jns
in
mov
in
mov
movs
mov
mov
in
mov
in
test
cmc
sub
cmps
out
repz
popa
test
and
retf
dec
scas
movs
test
fild
or
fistp
(bad)
mov
cli
fcomp
iret
(bad)
aas
rcr
hlt
inc
rcl
cli
mov
cmc
mov
mov
jle
fbstp
dec
lods
push
xor
sar
not
jecxz
into
jmp
mov
ins
div
clc
or
xor
xor
mov
mov
xchg
and
in
mov
iret
ins
test
adc
push
shl
push
dec
add
fsub
enter
mov
repnz
xor
xor
in
lds
jo
jo
ds
test
xor
in
dec
mov
std
test
mov
ins
jns
dec
sbb
pop
dec
add
adc
bound
pop
repnz
out
add
je
enter
ss
mov
test
sbb
sub
frstor
inc
shl
fcom
pop
inc
lea
pop
add
rcl
sahf
add
jecxz
sub
ficom
mov
adc
test
outs
ja
div
call
and
add
adc
sub
outs
jbe
mov
test
sbb
ds
shl
jp
test
fwait
aas
xor
sbb
repz
cmp
pop
sub
dec
mov
adc
mov
outs
mov
pop
mov
fild
push
scas
test
mov
cmp
sub
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
jmp
xchg
cld
inc
push
or
or
jge
imul
xor
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
pop
adc
aas
push
sub
aas
mov
push
mov
sub
aas
mov
sub
cmp
sub
aas
mov
push
mov
sub
shr
ss
push
cmp
sub
aas
adc
idiv
adc
es
ds
sub
jno
ss
es
push
aas
push
sub
aas
mov
push
mov
sub
aas
mov
sub
cmp
sub
mov
sub
shr
ss
push
cmp
sub
cmp
sub
aas
jno
push
shr
push
cmp
sub
mov
cmps
aas
shr
aas
sub
es
ss
push
cmp
sub
mov
sub
cmp
sub
adc
(bad)
aas
adc
es
sub
shr
inc
mov
sub
shr
push
cmp
sub
xchg
sub
push
aaa
sub
es
aas
popa
sub
aas
shr
push
cmp
sub
aas
mov
push
aas
shr
aas
shr
ss
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
das
push
cmp
sub
cmp
sub
cmp
sub
aas
jno
push
shr
xchg
shr
ss
sub
aas
shr
aas
loope
inc
aas
inc
sub
aas
icebp
sub
aas
popa
sub
cmp
sub
add
push
sub
push
cmp
sub
cmp
ss
data16
jno
push
cmp
sub
aas
mov
es
sub
aas
mov
sub
popa
sub
aas
jno
es
xor
push
ds
xchg
sub
idiv
inc
sub
aas
mov
cmps
aas
sub
push
cmp
stos
adc
and
push
mov
push
das
jo
pop
dec
cmp
sub
or
adc
mov
pop
das
xor
scas
imul
(bad)
pusha
or
push
das
inc
mov
das
push
or
pop
das
xor
out
push
or
push
das
jo
cld
dec
cmp
adc
jnp
xchg
xchg
push
int3
sahf
mov
pop
aad
xchg
mov
das
add
push
das
xor
jg
push
xchg
mov
add
cmps
add
es
push
das
mov
pop
das
ror
sub
cmp
test
nop
mov
inc
adc
mov
push
das
add
and
push
imul
mov
or
inc
adc
mov
push
das
xor
es
sbb
add
adc
mov
push
das
mov
sbb
adc
cdq
sub
mov
call
push
das
add
pop
dec
cmp
das
adc
test
das
add
scas
adc
and
cmps
add
es
adc
mov
mov
das
add
adc
xor
mov
mov
das
add
adc
add
push
das
add
sbb
xor
es
or
adc
xchg
bnd
fwait
sub
or
push
das
add
(bad)
adc
add
dec
and
sub
adc
mov
scas
adc
and
cmps
add
es
sbb
add
adc
mov
pop
das
xor
daa
out
xor
or
mov
adc
mov
pop
das
xor
daa
out
xor
or
mov
adc
mov
mov
das
add
push
das
jo
scas
adc
and
cmps
add
es
push
das
nop
mov
das
add
adc
mov
push
das
mov
pop
das
xor
daa
out
xor
or
mov
sbb
add
adc
mov
push
das
mov
pop
das
xor
daa
out
xor
or
mov
adc
mov
pop
dec
cmp
das
adc
enter
mov
push
das
inc
mov
(bad)
sahf
cmp
push
das
add
pop
das
xor
iret
sahf
call
adc
aad
sahf
mov
sub
and
xor
mov
call
push
das
add
jnp
jno
das
push
or
push
das
add
pop
outs
xor
and
add
jnp
mov
daa
push
cmp
mov
xor
iret
push
sub
cmp
iret
xchg
pop
xchg
dec
call
dec
or
inc
adc
mov
pop
das
push
cwde
cld
dec
cmp
adc
sbb
and
out
icebp
mov
or
mov
sbb
pusha
and
(bad)
xor
stos
adc
cmp
iret
xchg
retf
adc
pop
xchg
mov
das
sar
xchg
dec
mov
dec
or
inc
adc
mov
sbb
xor
iret
xchg
dec
mov
dec
or
inc
adc
mov
sbb
xor
setno
sbb
or
inc
adc
mov
sbb
xor
dec
xchg
retf
dec
or
inc
adc
mov
push
das
mov
pop
das
xor
daa
out
xor
or
mov
sbb
add
adc
mov
cld
dec
mov
and
or
das
add
sbb
pusha
imul
cmp
jnp
out
das
push
cmp
das
mov
mov
mov
push
jnp
xchg
xchg
push
cmp
push
mov
jb
cmps
or
es
push
das
add
and
cmp
aaa
push
test
and
or
mov
or
push
das
xor
ret
add
sub
add
jnp
jno
das
push
or
push
das
pusha
mov
iret
xor
adc
popa
and
mov
dec
sahf
sbb
sub
leave
out
mov
pop
aad
popf
or
push
das
and
push
jae
adc
das
cmp
lahf
or
push
das
inc
mov
sbb
add
adc
shl
mov
xchg
cmp
pop
dec
sbb
or
inc
adc
mov
push
das
and
outs
mov
mov
jns
aad
mov
(bad)
fmul
or
or
sbb
mov
and
mov
jnp
add
es
pop
das
mov
mov
add
int3
and
outs
xchg
int
imul
(bad)
pop
push
ja
push
rcl
push
js
mov
sub
ss
lahf
or
push
das
mov
pushf
into
or
adc
mov
pop
das
xor
push
das
add
adc
pusha
mov
in
shl
or
es
push
das
xor
jnp
fimul
push
das
add
pop
das
pusha
mov
adc
aas
add
mov
imul
mov
or
mov
adc
fucomip
data16
add
pop
das
jo
iret
adc
add
loop
push
cmp
test
inc
xor
jmp
sub
or
mov
pop
jg
push
push
das
add
daa
push
scas
mov
lock
popa
and
ss
inc
jne
mov
push
das
pusha
mov
out
mov
jnp
add
es
sbb
ss
push
jne
mov
push
das
mov
sbb
aas
adc
adc
jnp
psubsb
add
sbb
mov
inc
mov
mov
and
ss
mov
or
mov
jnp
pop
mov
add
push
das
mov
cmp
add
sbb
and
push
mov
scas
mov
xchg
cwde
daa
das
push
or
fmul
sbb
or
push
das
and
dec
fisubr
lea
inc
scas
jb
aad
sub
or
mov
adc
mov
mov
das
add
sbb
mov
push
das
pusha
mov
outs
xor
mov
push
or
sbb
ss
adc
add
pop
das
nop
xor
adc
add
(bad)
push
or
adc
test
or
mov
pop
scas
xor
push
das
inc
mov
mov
add
pop
das
add
stos
push
cdq
xchg
lahf
daa
das
adc
pop
das
adc
sbb
or
push
das
inc
mov
push
pusha
sub
add
das
add
sbb
xor
stos
lock
mov
xchg
iret
mov
das
mov
mov
xchg
mov
das
add
pop
das
pusha
mov
or
mov
add
sbb
add
adc
mov
pop
dec
jns
sub
or
adc
mov
pop
dec
sub
das
adc
mov
push
or
pop
dec
sub
das
adc
mov
push
or
pop
das
xor
outs
xchg
push
and
xor
pop
adc
leave
sbb
or
inc
adc
mov
push
das
and
das
xchg
iret
into
sub
cmp
out
mov
xchg
dec
or
inc
adc
mov
push
das
lock
jnp
push
mov
add
adc
or
mov
das
push
or
adc
test
or
mov
push
cmp
rcl
add
push
das
push
mov
pop
mov
push
or
adc
add
das
add
adc
imul
mov
push
das
mov
mov
add
adc
xchg
or
push
das
mov
pop
dec
fsincos
sub
or
adc
mov
pop
das
xor
das
xchg
cmp
push
das
add
pop
dec
sub
das
adc
mov
push
or
push
das
loopne
pop
das
xor
outs
xchg
push
and
xor
pop
adc
leave
sbb
or
inc
adc
mov
pop
dec
sub
das
adc
mov
push
or
push
das
mov
pop
das
xor
mov
or
and
add
out
xor
das
add
sbb
mov
(bad)
jmp
add
outs
mov
sub
iret
mov
scas
mov
mov
xchg
mov
das
add
push
das
lock
dec
mov
and
or
das
add
sbb
call
nop
push
sub
adc
pop
xchg
mov
das
and
inc
pop
or
das
add
daa
push
mov
pop
dec
dec
fisubr
adc
add
sub
das
adc
aad
jb
xchg
leave
sahf
xor
jne
xchg
jg
jo
lds
dec
mov
repnz
pushf
gs
dec
jl
into
push
mov
push
cld
sbb
xchg
pop
imul
das
mov
cmp
push
jge
mov
dec
xchg
pop
imul
xor
mov
pop
and
fild
sbb
jo
pop
jbe
or
nop
test
mov
fadd
outs
inc
mov
retf
xchg
js
dec
jg
dec
ds
stc
mov
out
dec
inc
xor
shl
enter
(bad)
mov
ins
int
ins
int3
xchg
fldenv
repnz
jbe
cmp
dec
mov
into
fdiv
ds
icebp
rol
repnz
out
or
outs
cdq
clc
mov
mul
ja
cdq
std
repz
dec
xor
std
faddp
mov
mov
out
or
adc
cwde
lock
push
push
inc
outs
and
cmps
xor
int
mov
push
adc
pop
add
fnsetpm(287
rcr
add
out
cwde
mov
(bad)
jns
shl
xor
mov
(bad)
stc
adc
dec
or
add
adc
sbb
cmp
sbb
lods
std
pop
dec
xor
outs
(bad)
icebp
test
mov
adc
outs
push
xchg
mov
sbb
je
in
ins
(bad)
dec
mov
and
fist
fist
fist
mov
ret
(bad)
add
imul
push
and
pushf
adc
in
addr16
ret
into
jb
mov
inc
arpl
fadd
neg
push
lock
cmp
ja
(bad)
retf
push
adc
retf
addr16
shr
adc
clc
arpl
ret
fdiv
mov
inc
data16
fist
sub
xor
jg
push
repz
adc
in
mov
repz
je
(bad)
add
jge
push
neg
xor
call
ja
(bad)
retf
aaa
adc
fdiv
int
pop
ret
ja
pushf
adc
add
inc
es
add
lea
ret
or
test
pop
mov
push
addr16
and
imul
push
and
pushf
and
xlat
cld
ja
xchg
popf
addr16
ret
into
jb
mov
push
pusha
ret
enter
in
adc
std
add
ret
mov
arpl
sbb
bound
sbb
bound
neg
fs
rcr
add
repz
push
arpl
mov
ret
mov
in
adc
repz
ret
fist
repnz
add
shr
xchg
push
aam
mov
data16
mov
(bad)
je
xor
cmps
dec
push
mov
dec
pop
not
lods
shl
push
in
push
xor
int
(bad)
mov
les
cmp
inc
xor
enter
fcom
fcom
xchg
std
arpl
and
je
ret
lock
inc
jae
fadd
neg
test
ins
add
mov
jae
ret
fwait
mov
repnz
jae
rcr
add
and
jb
test
lock
and
lods
jb
loop
je
jecxz
mov
pop
hlt
lea
mov
sti
mov
adc
bound
ret
int3
ret
imul
lea
inc
sub
jae
xchg
sub
xchg
cmps
sar
inc
mov
fld
cmp
push
ret
push
inc
lea
shl
in
push
mov
int
ss
push
rol
(bad)
ret
mov
push
and
cmp
fs
repz
adc
mov
addr16
bound
and
shr
and
sar
push
xor
in
xor
push
sbb
les
adc
inc
add
add
jae
jb
(bad)
retf
addr16
clc
xlat
es
push
loopne
dec
xor
mov
movs
jbe
sbb
push
rol
jb
xchg
fld
ret
jbe
popf
mov
test
fcom
dec
mov
out
fst
xchg
cmp
jbe
fadd
and
add
sbb
pop
jb
adc
and
mov
xchg
std
xor
xor
add
pushf
ret
daa
or
loopne
std
jecxz
xchg
in
inc
jbe
fadd
jbe
pushf
inc
ret
(bad)
retf
xchg
rcr
les
sbb
mov
add
pop
jb
(bad)
retf
ja
in
xchg
es
push
inc
xchg
std
add
inc
lea
ss
rol
ret
jbe
in
inc
ss
(bad)
loop
ret
sti
jae
inc
int
retw
adc
and
add
and
loop
push
pusha
xor
bound
fucom
es
mov
push
in
and
int
xor
sub
and
jae
rcr
movs
ss
xchg
mov
ret
mov
xchg
fadd
push
sbb
jb
test
bound
(bad)
int
xchg
hlt
sub
daa
ret
mov
add
push
pusha
xchg
std
add
inc
sub
inc
ss
adc
rcr
je
mov
mov
push
mov
jb
ret
sub
push
hlt
pop
bound
adc
nop
xchg
dec
add
sar
mov
nop
push
lea
shr
repz
les
pushf
arpl
(bad)
retf
addr16
enter
mov
xchg
pushf
add
xor
push
add
dec
inc
push
ror
mov
ret
int3
bound
lea
es
jae
add
rcl
xchg
frstor
rol
dec
add
sub
add
rcr
xor
fld
xor
mov
stos
inc
xchg
lods
inc
mov
fwait
inc
xchg
xor
and
repnz
and
xchg
int
loopne
in
arpl
inc
dec
push
nop
xchg
cmp
inc
es
repnz
jae
je
repnz
add
in
adc
sar
jb
xchg
std
push
xor
dec
and
sbb
ss
push
shl
mov
not
int3
push
pop
xor
movs
(bad)
xor
mov
inc
movs
lea
daa
loop
repnz
inc
fnsave
ret
out
popf
rcl
pop
shl
(bad)
int
ja
fadd
ror
push
ret
adc
test
ss
stos
adc
repnz
push
shl
dec
jae
inc
int
loopne
in
ret
xchg
fdiv
mov
xchg
popf
adc
push
lods
push
mov
ins
add
push
ins
inc
es
push
rol
jb
repnz
out
lods
jae
loop
mov
and
mov
(bad)
repz
inc
push
ret
xchg
xchg
std
ret
repnz
xchg
std
xchg
not
jb
loop
les
jecxz
mov
ret
mov
xchg
std
arpl
xchg
std
arpl
lea
loop
mov
test
push
inc
xchg
cmp
bnd
fcom
cmp
adc
sar
rcl
ret
jmp
add
adc
xor
adc
and
je
mov
jb
adc
push
mov
lea
push
sar
arpl
inc
dec
push
xor
cmp
adc
cmp
les
repnz
jecxz
adc
aam
ret
es
bound
std
jae
ret
mov
ret
sub
push
shl
pop
add
inc
mov
popf
push
pusha
or
xor
adc
cmp
push
pusha
xchg
std
adc
xor
les
inc
popf
rol
in
push
mov
lods
add
add
push
and
fcom
ret
cmps
sar
add
ror
add
retf
inc
xor
enter
fadd
repnz
add
ret
jmp
cmps
hlt
mov
es
push
adc
pop
inc
arpl
push
xor
pop
aaa
ss
pushf
mov
ret
int3
jb
inc
lea
adc
jb
loop
rcl
ret
push
mov
sub
movs
mov
sar
xchg
jbe
int
daa
adc
adc
in
inc
(bad)
in
and
mov
daa
push
mov
daa
sar
add
repz
ret
fwait
push
inc
push
popf
mov
push
cmp
adc
push
in
and
add
add
add
add
pop
xor
sbb
mov
dec
and
dec
add
and
arpl
(bad)
int
xchg
ret
and
ret
pop
and
sar
mov
loop
bound
xchg
fnsave
lea
(bad)
and
fs
sbb
es
mov
hlt
sub
es
push
adc
cmp
rcl
repnz
xor
les
ret
aaa
loop
arpl
fld
pushf
xor
popf
inc
push
ret
jnp
push
adc
ja
sti
jb
test
push
xchg
std
add
and
push
rol
mov
jae
and
add
rep
ret
fwait
mov
mov
fwait
mov
adc
mov
or
out
mov
mov
push
xchg
std
add
std
push
inc
xchg
std
add
mov
ret
push
je
xor
adc
adc
cld
arpl
xchg
ffree
(bad)
ret
jbe
fwait
xchg
(bad)
push
lea
xchg
fucom
jbe
in
push
mov
in
mov
data16
mov
hlt
sub
es
push
add
int3
bound
cmp
jb
xchg
std
and
sar
jae
jae
add
ret
cmp
push
sub
xchg
ret
jnp
pop
xchg
or
push
and
cld
inc
xor
retf
addr16
call
push
jo
in
adc
sar
add
push
popf
mov
jbe
popf
arpl
xor
jae
ret
mov
mov
or
xchg
sbb
les
ins
push
(bad)
mov
(bad)
(bad)
xor
ja
sbb
jb
and
rcr
jo
sbb
push
adc
dec
ja
xchg
int
repnz
push
popf
mov
add
fcom
fsub
inc
xchg
in
push
shl
clc
addr16
loop
aam
push
popf
push
jo
popf
add
loop
fs
and
aaa
ret
jbe
frstor
ret
pop
push
and
dec
arpl
popf
and
lea
and
out
mov
inc
(bad)
aam
and
mov
push
push
mov
xlat
cmps
inc
pop
shl
and
push
mov
push
in
xor
loop
(bad)
out
std
shl
fst
mov
inc
pop
xlat
(bad)
push
in
(bad)
xlat
add
bound
loop
adc
lea
daa
adc
jb
ret
(bad)
xchg
cld
mov
pop
test
sub
rcr
push
jo
in
push
pop
or
loop
push
xlat
loop
aam
shr
xor
fcom
pop
xchg
ss
ja
fcom
xchg
std
push
mov
dec
ret
lods
add
ret
pusha
or
ror
add
lods
push
xor
bound
mov
push
rcl
aaa
jbe
fcom
xchg
popf
xchg
mov
retf
bound
dec
inc
es
push
inc
xchg
in
jecxz
xor
inc
and
enter
retf
addr16
fs
repnz
rol
int
cmps
sar
aam
add
adc
repnz
jae
mov
push
shl
popf
and
fadd
adc
inc
push
ret
out
dec
mov
pusha
aaa
sub
xchg
repz
push
adc
cmp
jb
mov
retf
mov
daa
or
rcr
les
mov
add
ret
fist
xchg
std
mov
xor
mov
(bad)
and
bound
loop
inc
mov
ret
(bad)
loop
add
ret
jbe
fadd
les
bound
loop
ret
mov
fcom
es
push
rcl
add
sti
arpl
clc
daa
daa
ret
ja
fadd
push
sar
mov
test
add
ret
aaa
movs
mov
(bad)
int
xchg
aam
ret
daa
mov
in
jae
xor
xrelease
and
call
aaa
pop
or
loop
jae
and
fs
lea
push
rcr
(bad)
(bad)
mov
add
sbb
push
xchg
cmp
ret
aaa
loop
add
and
jbe
sti
jb
mov
out
sti
jae
and
adc
loop
bound
inc
lea
loop
push
pusha
push
lea
jae
mov
xchg
fadd
jecxz
mov
es
inc
es
lea
xchg
cmp
xor
hlt
pushf
push
daa
mov
fadd
or
ja
loop
movs
mov
std
adc
sbb
pop
sbb
sti
push
pop
push
fadd
mov
(bad)
(bad)
cmp
add
inc
data16
les
adc
add
push
mov
inc
es
mov
jbe
sti
inc
push
jae
fs
lea
ret
lock
push
xor
ret
std
push
aaa
and
(bad)
out
popf
push
rcl
mov
shl
mov
loop
inc
xchg
ret
fild
xor
ins
inc
cmps
xchg
ins
push
inc
mov
push
pop
xor
jae
loop
les
repz
pop
inc
sub
xchg
inc
push
(bad)
ret
stos
and
add
mov
repz
ret
retw
sbb
data16
daa
repz
pusha
xchg
std
adc
add
jae
rcr
ret
inc
push
mov
pop
daa
jae
push
pusha
xchg
cmp
arpl
and
push
daa
repnz
jbe
fadd
mov
xor
retf
bound
dec
shl
ret
ja
std
inc
and
enter
fadd
jbe
in
mov
jo
mov
inc
in
bound
xlat
clc
push
adc
enter
lea
mov
sti
shl
add
shl
jecxz
shl
or
xor
xor
xchg
cld
mov
loop
inc
mov
in
ret
ret
(bad)
dec
(bad)
mov
dec
ja
ror
push
xor
inc
jbe
jmp
xchg
cld
add
xchg
sbb
inc
retw
or
es
bound
retf
mov
push
sub
push
pusha
shr
jae
mov
add
imul
cmp
push
daa
xchg
pop
add
xor
inc
push
ret
out
lea
mov
(bad)
ret
std
mov
test
or
push
ret
(bad)
(bad)
int
mov
fst
mov
shl
fwait
arpl
sub
xchg
ret
(bad)
mov
mov
add
ja
sti
xchg
(bad)
xor
mov
fst
mov
ins
push
jo
popf
add
std
arpl
rcr
in
push
in
bound
fsub
ret
push
push
cmp
push
pusha
xchg
std
and
mov
jecxz
ret
es
cmp
push
jo
in
inc
data16
jb
repnz
jbe
lods
push
shl
mov
inc
lea
ror
not
mov
mov
and
adc
push
rcl
push
mov
lods
add
hlt
clc
(bad)
es
(bad)
push
popf
mov
sub
push
lods
push
pusha
rcr
push
lock
(bad)
adc
call
add
neg
je
repnz
jmp
ja
popf
xor
loop
mov
daa
jae
push
addr16
fadd
mov
fld
ret
push
add
ret
mov
(bad)
repnz
mov
and
movs
jbe
in
ret
mov
mov
mov
mov
xchg
jbe
(bad)
mov
pop
push
cmps
inc
fsub
jbe
fst
xlat
xchg
dec
add
fwait
jae
xchg
mov
ret
(bad)
mov
and
add
push
mov
sbb
not
fld
rep
mov
push
sbb
mov
in
add
ret
sbb
ret
mov
dec
bound
repz
adc
(bad)
not
std
arpl
fdiv
std
inc
mov
cmp
data16
shl
(bad)
pop
xlat
mov
repz
and
int
push
xchg
frstor
ret
(bad)
xchg
in
xchg
push
ret
jbe
int3
jb
xchg
frstor
ret
out
lea
jbe
jnp
pop
test
inc
frstor
jb
add
loop
inc
mov
and
mov
fsub
out
fst
xor
bound
repnz
adc
push
add
dec
and
xlat
cld
pop
push
xchg
fst
dec
adc
xchg
fld
loop
add
adc
add
and
push
lock
std
adc
xor
inc
ss
bound
adc
les
repnz
hlt
lea
repnz
(bad)
add
aaa
ret
jbe
popf
rol
frstor
ret
out
std
xor
fld
popf
mov
out
sub
(bad)
xlat
hlt
ins
mov
add
sub
add
repnz
add
sti
add
jecxz
xchg
push
ret
mov
and
inc
int
xor
push
pop
or
xor
xor
push
mov
lea
xchg
in
push
mov
in
jecxz
sar
arpl
xchg
in
add
xchg
mov
jbe
fwait
add
frstor
(bad)
jecxz
bound
ret
data16
fst
ret
data16
mov
in
add
and
ret
popf
mov
repnz
mov
adc
mov
inc
sub
xchg
(bad)
xchg
lods
inc
repz
xchg
std
xor
mov
pushf
jae
inc
sub
(bad)
xlat
daa
lea
inc
xchg
or
push
pop
inc
fnsave
pop
push
jo
std
push
pop
push
or
push
adc
enter
cwde
ja
sbb
aaa
or
push
ret
fwait
mov
or
fwait
add
push
in
jae
repnz
xor
inc
fnsave
repnz
int3
add
or
out
cmp
mov
loop
bound
ret
retf
mov
adc
mov
and
xchg
cmp
adc
std
adc
mov
and
fcom
popf
add
or
push
xor
mov
adc
xor
jb
in
shl
inc
pop
xchg
cmps
inc
(bad)
jbe
popf
jae
loop
inc
ss
inc
add
fsub
jo
lods
jb
inc
pushf
push
jo
lea
cmps
aam
mov
mov
cmp
push
adc
xchg
push
sbb
add
hlt
in
mov
shl
adc
adc
push
jo
cld
arpl
add
jb
rcr
add
sub
push
rcr
hlt
ss
push
xor
lea
xor
inc
es
xor
test
xchg
push
xchg
sbb
push
mov
int
div
jge
pop
sbb
es
popf
push
mov
mov
ss
je
or
jbe
dec
add
repnz
jae
inc
lea
(bad)
je
mov
add
jb
loop
jb
(bad)
fwait
push
and
push
mov
dec
arpl
ret
ss
ret
cmp
ret
sbb
adc
ror
jbe
fsub
lods
push
adc
fld
xchg
cmp
push
jo
mov
xchg
pushf
mov
rol
shl
repnz
push
shl
sbb
and
(bad)
ss
push
xor
sbb
push
add
int3
rol
mov
jae
repnz
(bad)
add
ja
mov
jb
and
(bad)
xlat
xor
ret
es
pop
jae
add
ret
sbb
push
add
xchg
adc
xchg
mov
fsub
repnz
xchg
cld
push
rcl
jb
add
xlat
hlt
ins
adc
or
addr16
fsub
pushf
push
mov
lea
pop
xchg
jl
xchg
push
fld
push
cmp
mov
mov
lea
es
push
mov
in
rol
loop
mov
loop
push
nop
push
lea
push
xchg
lods
add
movs
dec
push
daa
rcr
fs
frstor
and
test
ins
inc
jbe
(bad)
loop
inc
mov
fst
mov
cmps
push
ret
lock
es
std
arpl
fld
adc
push
add
mov
hlt
mov
es
push
add
fcom
xchg
std
inc
(bad)
rcr
mov
or
fcom
repnz
mov
fist
push
in
jecxz
sar
and
loop
push
mov
sbb
push
push
in
and
ret
mov
popf
bound
fadd
es
std
inc
retw
mov
pushf
jae
ret
sti
bound
mov
daa
ret
pop
inc
lea
pusha
ror
push
adc
xlat
jecxz
jb
ret
jo
or
push
jo
cmp
jae
push
fdiv
enter
mov
ret
pop
push
lock
in
jae
xor
ret
cmp
les
es
ret
addr16
bound
mov
cmp
push
lock
push
lock
mov
push
sub
xchg
data16
ret
fist
push
aam
adc
push
cmp
adc
push
in
arpl
fld
std
ret
es
mov
push
push
lea
mov
sbb
je
inc
es
add
add
push
pusha
push
int
push
or
ret
not
std
push
rcl
ret
popf
jae
or
push
fadd
and
ret
stos
inc
out
in
push
repnz
adc
adc
and
mov
loop
push
mov
int
inc
xchg
in
inc
jbe
fld
popf
push
add
cwde
pop
ss
push
jo
lods
mov
loop
push
lock
bound
aam
add
mov
and
sbb
(bad)
add
add
xchg
or
inc
mov
dec
bound
arpl
jb
inc
sub
ret
push
ror
mov
std
add
imul
adc
inc
es
mov
add
test
jb
movs
mov
adc
ret
and
cmps
mov
fwait
mov
es
push
shl
and
fld
in
jb
ret
mov
cmp
adc
and
push
shl
dec
adc
push
in
arpl
xchg
in
jae
loop
push
add
std
add
shr
retw
jbe
int
(bad)
xor
les
sbb
adc
add
arpl
xchg
sbb
adc
ret
ss
jb
xchg
fld
popf
jb
xchg
fst
push
popf
push
xor
dec
jae
xor
test
or
add
ins
and
loop
push
lock
push
pusha
push
int3
pop
pop
repnz
jb
loop
adc
fadd
repz
mov
sti
add
repz
jae
ret
jbe
popf
mov
nop
push
lea
push
sar
mov
or
jmp
(bad)
loop
adc
and
xchg
mov
inc
mov
dec
ret
sbb
xlat
add
pop
cmps
inc
fadd
adc
inc
(bad)
mov
(bad)
out
in
add
ret
add
int
daa
mov
cmp
push
shl
mov
push
xchg
cmp
bound
shr
adc
xor
inc
es
inc
ss
jb
ret
(bad)
test
add
ja
pushf
ret
es
inc
xchg
inc
jbe
fcom
popf
push
(bad)
xchg
lods
push
shl
pushf
push
pop
jae
push
and
std
jae
sbb
xlat
add
xchg
push
rcr
inc
and
dec
xchg
es
push
shl
mov
add
fadd
std
add
stos
xchg
ss
mov
or
xchg
std
xchg
push
xchg
sbb
addr16
inc
es
mov
and
sub
adc
sbb
jbe
ins
mov
daa
repnz
push
shl
add
adc
add
ret
shl
inc
push
popf
push
rcl
out
mov
mov
jo
mov
(bad)
test
es
test
xchg
int
jbe
fdiv
repz
xchg
std
arpl
and
les
loop
arpl
(bad)
and
jb
mov
xchg
push
push
lea
jecxz
push
pusha
xor
add
sbb
bound
int
es
xor
ret
jbe
sbb
push
je
xchg
es
push
xor
popf
adc
or
mov
lods
(bad)
not
xchg
cmps
xchg
sbb
mov
xor
mov
sar
push
rol
popf
xchg
mov
mov
and
inc
jbe
or
daa
ret
int3
adc
push
sub
add
add
xor
or
jbe
lods
add
xchg
fnsave
dec
inc
jbe
jmp
push
or
add
mov
xor
adc
shr
xor
frstor
xor
ret
aaa
mov
add
shr
push
int
and
fcom
mov
mov
and
lea
inc
fld
ret
imul
in
arpl
xor
jecxz
jecxz
add
ror
push
rcl
and
fsub
ret
sbb
loop
ret
sbb
rcr
push
pusha
ror
arpl
fadd
aam
add
or
xlat
test
aaa
sbb
aaa
ror
ret
ss
retf
inc
push
ret
(bad)
xchg
fnsave
push
fsub
ret
rol
push
xor
pushf
xchg
push
xchg
cld
push
mov
lea
xchg
lods
ret
stos
inc
out
in
inc
retw
sti
push
inc
xchg
cmp
add
in
ret
sbb
jb
(bad)
retf
pop
adc
push
adc
jae
shr
xchg
es
bound
int3
add
mov
sti
inc
inc
lea
jbe
dec
jb
and
movs
ss
or
mov
xchg
test
inc
mov
in
and
or
int3
daa
pop
and
bound
inc
dec
and
xor
xor
adc
add
sar
jae
test
and
dec
ja
ret
ss
ret
pushf
inc
(bad)
mov
shl
xor
shl
int
es
and
neg
add
push
cwde
ja
ret
mov
pushf
push
mov
pushf
jae
arpl
les
loop
ret
jmp
test
xchg
(bad)
repnz
(bad)
xor
(bad)
mov
push
mov
cmp
push
rcl
out
lods
shl
fdiv
popf
shl
inc
int
ss
pop
jb
xchg
retw
mov
sub
daa
ret
inc
xchg
in
ret
fsub
xchg
fnsave
ret
mov
dec
bound
repnz
jbe
mov
je
out
addr16
sub
sar
adc
loop
push
mov
rcr
mov
and
mov
repnz
push
push
add
and
loop
push
lock
jb
xchg
sub
add
xor
adc
sbb
or
pop
add
ret
out
(bad)
ret
int3
push
loopne
std
jae
ror
add
add
add
sbb
fadd
ja
in
push
adc
popf
and
sub
ret
push
inc
std
arpl
rcr
in
loop
inc
jbe
jnp
and
cmp
ret
pop
in
jb
loop
push
loopne
cmp
adc
dec
add
ret
sti
inc
push
hlt
dec
jb
or
cmps
xchg
(bad)
ret
mov
mov
repnz
adc
in
adc
in
adc
repnz
adc
es
mov
mov
inc
push
ret
or
xchg
cld
arpl
jecxz
ret
or
push
inc
int
out
fadd
push
in
and
and
push
xchg
std
add
or
addr16
mov
rcr
cmps
data16
push
and
int
daa
inc
int
xchg
xchg
dec
add
mov
dec
ret
shr
push
test
adc
sub
daa
ret
ss
bound
adc
add
mov
int3
loop
push
cmp
adc
push
sub
jbe
or
repnz
rcr
add
loop
push
loopne
in
and
popf
inc
jae
cmp
bound
push
fnsave
popf
jae
add
push
xor
lods
ret
in
inc
arpl
cwde
mov
(bad)
mov
addr16
bound
jecxz
ret
cmps
ret
(bad)
je
add
shr
pop
repnz
jecxz
bound
clc
pop
es
repz
mov
xor
push
lea
repz
and
ret
ja
pushf
push
ja
sub
inc
arpl
mov
inc
int
add
enter
int
ss
hlt
pop
inc
dec
shl
int
daa
ror
inc
push
neg
neg
add
mov
inc
arpl
clc
addr16
loop
xchg
not
shl
inc
frstor
jecxz
inc
xor
fadd
fsub
xlat
clc
pop
shr
adc
call
inc
adc
cwde
push
inc
ror
xor
neg
es
sub
adc
jb
shr
ret
es
inc
push
inc
cmp
push
push
add
adc
repnz
xchg
fld
pop
xchg
int
ja
in
ret
fadd
aaa
and
add
xor
adc
out
pop
xor
call
add
inc
push
fcom
aaa
sar
adc
in
adc
std
push
xor
call
inc
inc
(bad)
retf
add
neg
add
pop
fld
enter
enter
jmp
(bad)
repnz
and
sar
push
inc
mov
ret
inc
xchg
or
jae
out
(bad)
push
sbb
out
mov
addr16
mov
inc
xchg
je
xchg
pop
pop
ret
pop
push
jo
lea
pop
xchg
pushf
xchg
jbe
mov
jae
test
mov
sub
es
jb
test
mov
inc
int3
push
pusha
xchg
std
arpl
sar
mov
add
adc
jb
xchg
push
aam
bound
loop
inc
xchg
repz
jae
(bad)
retf
aaa
adc
or
mov
int
xor
call
(bad)
push
ret
add
lea
and
addr16
xchg
cwde
pop
pop
rcr
les
sbb
inc
(bad)
adc
xor
int
push
sbb
aaa
loop
inc
(bad)
ret
sti
add
in
add
shr
add
cwde
daa
inc
ret
(bad)
loop
push
mov
pop
jb
shr
movs
jbe
in
jb
xchg
int
push
ret
jbe
std
inc
aaa
adc
fs
xchg
int
retw
mov
int3
bound
sar
and
mov
push
push
arpl
adc
mov
push
jo
pop
(bad)
not
cmp
inc
jae
fsub
fadd
and
retf
push
and
mov
repnz
or
bound
mov
sub
push
xor
int
pop
xchg
fld
jbe
std
add
(bad)
retf
daa
mov
mov
loop
inc
cmps
loop
jb
(bad)
retf
pop
push
shr
mov
popf
bound
aam
aaa
and
mov
adc
in
addr16
clc
ja
xchg
cmps
ss
out
sub
push
shl
clc
daa
arpl
fadd
adc
push
pusha
xchg
std
add
xchg
int
addr16
mov
add
pop
xchg
fdiv
dec
push
mov
sbb
jb
push
int3
push
daa
repnz
ja
in
xor
fadd
xlat
popf
bound
xlat
clc
addr16
enter
fsub
dec
mov
push
int
es
add
aaa
or
adc
in
push
add
xor
enter
enter
clc
addr16
and
jmp
ja
popf
mov
loop
push
pusha
push
popf
shl
xchg
inc
mov
retf
add
hlt
cwde
addr16
arpl
push
pop
xchg
fadd
ss
xor
add
push
jae
fist
(bad)
fsub
and
fadd
xlat
pop
add
aaa
daa
add
mov
or
std
push
jo
sbb
(bad)
es
mov
cmp
adc
hlt
cwde
bound
adc
push
xor
arpl
fadd
std
push
pop
rcr
and
xchg
mov
jecxz
bound
xlat
in
push
xor
call
ja
cmps
enter
pop
loop
add
mov
inc
int
jbe
int
es
cmp
bound
ret
push
cmp
xchg
xchg
enter
int
jbe
cld
inc
mov
std
and
xlat
cwde
push
add
dec
rol
sub
mov
fadd
ss
ret
mov
add
pop
daa
adc
bnd
in
jae
ror
adc
mov
xchg
cwde
inc
xor
in
add
neg
xor
xchg
jbe
mov
(bad)
int3
push
jo
pop
ret
pop
loop
inc
(bad)
ret
dec
(bad)
mov
dec
(bad)
mov
fdiv
xchg
mov
retf
add
lods
push
xor
dec
inc
ss
bound
ror
repnz
fnsave
xchg
in
ret
push
rcr
inc
mov
frstor
xchg
int
jbe
retf
mov
push
int
daa
loop
arpl
(bad)
retf
pop
adc
dec
inc
xor
in
add
hlt
cwde
addr16
ret
int3
jb
mov
and
fcom
imul
and
fcom
(bad)
fsub
ret
ja
int
push
int
es
pop
push
sub
aaa
adc
dec
cmps
repnz
mov
adc
fucom
(bad)
and
ss
mov
ins
bound
repz
mov
loop
add
ret
or
jb
mov
push
pusha
sar
xchg
out
sbb
inc
ror
xor
call
jb
add
bound
sbb
ret
xchg
xchg
cld
mov
loop
mov
and
clc
push
push
inc
dec
(bad)
push
xchg
cmp
xchg
out
std
add
ret
fwait
mov
adc
aaa
test
daa
adc
mov
ins
mov
push
xor
jb
repnz
add
mov
push
add
dec
jae
repnz
inc
jbe
sbb
adc
bnd
shl
mov
mov
ret
ss
mov
ffree
ss
ret
pop
push
daa
inc
sub
loop
and
addr16
call
adc
ret
int3
push
jo
int3
inc
push
ror
(bad)
mov
xchg
cmps
sar
add
test
jbe
in
adc
push
in
and
sub
pop
arpl
retf
ja
inc
mov
xlat
enter
call
xlat
not
bound
add
xchg
cmps
sar
push
mov
int
push
xor
jb
xlat
int
adc
sbb
aaa
std
adc
repz
xchg
lea
ret
(bad)
xchg
in
shl
bound
mov
(bad)
jae
rcl
ret
(bad)
ret
(bad)
mov
les
popf
add
ret
shl
inc
not
mov
push
sbb
out
in
and
fnsave
ror
and
lea
push
(bad)
clc
arpl
adc
push
mov
ins
inc
div
pop
adc
adc
and
sub
jbe
pop
adc
mov
aam
cmps
test
mov
sti
loop
test
(bad)
and
mov
mov
je
loop
push
xor
fcom
loop
daa
pop
xchg
popf
inc
jae
cmp
inc
(bad)
xchg
dec
push
adc
jb
sar
adc
xchg
std
jecxz
shr
and
fcom
pushf
push
xor
in
shl
sar
adc
mov
inc
ret
imul
repnz
add
inc
es
pop
mov
jbe
imul
mov
fs
int
cmps
xchg
fdiv
dec
inc
jae
fld
enter
fcom
clc
ja
ret
xlat
rcr
adc
and
ja
in
addr16
xchg
push
sub
push
ret
(bad)
test
cmps
xchg
std
arpl
xchg
fnsave
call
inc
xchg
push
popf
inc
shr
push
xor
inc
retw
xchg
and
mov
ret
xchg
sbb
inc
ss
dec
bound
mov
sbb
jb
sar
and
repnz
add
xor
repnz
push
xor
div
cmp
pop
xor
repz
add
mov
pushf
ret
inc
mov
mov
je
out
push
add
clc
pop
jbe
popf
loop
or
ja
fadd
ja
popf
jb
xchg
int
daa
repnz
add
push
cmp
push
xor
call
xlat
mov
ret
jecxz
sub
(bad)
push
xor
adc
retf
addr16
cwde
pop
es
jb
repnz
push
jo
popf
inc
(bad)
xor
mov
pop
sbb
push
xchg
std
push
adc
mov
mov
or
cmp
xor
(bad)
shl
and
les
ret
(bad)
xchg
in
jae
repz
es
popf
inc
ja
fld
int3
add
xchg
cmp
xchg
(bad)
mov
push
mov
int
push
sar
add
mov
sub
aaa
add
add
ret
jmp
addr16
lea
xchg
fnsave
popf
inc
ja
fld
lods
push
xor
clc
inc
ror
es
push
addr16
lea
xlat
fcom
mov
pop
push
push
xchg
mov
bound
loop
inc
mov
lods
add
xor
arpl
xlat
clc
daa
arpl
enter
int
inc
lea
repnz
shl
and
and
or
jae
ret
ss
dec
add
or
data16
bound
ret
int3
jb
mov
push
pusha
ret
enter
sbb
mov
(bad)
repnz
push
popf
push
loopne
in
arpl
hlt
int
shr
daa
ret
mov
dec
mov
(bad)
rcr
add
pop
jae
(bad)
fadd
pop
cmps
es
sbb
xchg
int
adc
retf
xlat
add
mov
repz
xchg
lea
xchg
int
retw
(bad)
push
lea
jae
jb
shr
mov
xchg
fcom
repnz
ret
ja
sub
add
aam
xor
repz
addr16
add
mov
jae
mov
xlat
ret
int3
inc
push
ret
or
sbb
fsub
xor
add
repz
mov
inc
int
mov
frstor
std
adc
aam
and
mov
daa
push
mov
(bad)
push
(bad)
dec
(bad)
mov
dec
(bad)
mov
fadd
xor
arpl
(bad)
retf
(bad)
arpl
addr16
addr16
ret
es
cmp
push
xor
push
daa
cmp
jbe
fadd
ret
imul
xor
inc
mov
lea
les
rcr
and
rcr
and
inc
lea
loop
inc
(bad)
rcr
loop
sar
mov
or
fwait
jb
mov
bound
mov
push
mov
enter
call
pop
repnz
add
dec
add
mov
inc
sbb
sbb
dec
xchg
ss
push
out
fst
ret
int3
jb
mov
jb
push
int3
inc
push
sbb
jbe
popf
xor
and
mov
add
adc
shr
push
add
mul
std
push
adc
arpl
repnz
bound
repnz
dec
add
cmp
push
push
xchg
call
bound
and
aaa
add
fs
push
cmp
push
daa
repnz
loop
adc
rcr
movs
mov
or
ret
push
inc
std
push
pop
sub
xchg
std
rcl
xor
xchg
mov
fst
neg
and
imul
push
and
pushf
xchg
data16
push
mov
lods
xor
neg
(bad)
xchg
lods
push
mov
lea
push
mov
inc
les
inc
xchg
dec
push
pusha
push
int
ss
push
pop
inc
ffree
cmps
push
sbb
movs
and
loop
repnz
jbe
mov
retw
fild
xor
push
and
fcom
es
fsub
loop
shl
ret
jbe
mov
(bad)
mov
lea
inc
dec
push
mov
out
div
fcom
repnz
push
rcl
adc
mov
std
push
xor
call
xchg
push
inc
fsub
int
add
xlat
add
mov
loop
jb
xchg
mov
ret
mov
mov
rcr
mov
addr16
retf
inc
and
lea
repz
jge
aaa
xlat
jge
push
ret
jmp
arpl
cmp
les
ins
push
rcl
call
inc
ss
(bad)
hlt
lea
and
mov
inc
jbe
fcom
ret
mul
lea
ss
fist
xchg
std
add
and
add
push
mov
adc
hlt
int
sub
repnz
push
shl
bound
loop
inc
cmps
ret
mov
dec
add
add
mov
inc
dec
(bad)
(bad)
xchg
fadd
ins
bound
aam
inc
and
cwde
xchg
inc
ret
ss
mov
ret
pushf
shl
bound
xchg
add
jb
and
ret
popf
adc
jae
adc
ret
jmp
jbe
lea
(bad)
retf
inc
adc
cwde
ja
(bad)
enter
mov
xchg
push
cmp
ret
pushf
inc
(bad)
rcr
add
repz
add
int
es
xchg
aam
shl
sar
xor
sub
mov
mov
adc
inc
jbe
cmp
test
inc
push
ror
and
mov
ffree
xlat
push
sub
(bad)
ret
jnp
aaa
rcr
pusha
push
inc
fadd
ss
push
xor
inc
es
push
pusha
xchg
std
and
int3
push
shl
int
cmps
push
pushf
inc
push
sar
jb
ret
fwait
mov
inc
xchg
fld
xor
inc
not
sti
add
in
xchg
data16
inc
jbe
cmp
adc
rcr
and
repnz
mov
out
ffree
es
sti
adc
sbb
fadd
sbb
mov
rol
popf
jecxz
loop
aam
loop
jae
jb
movs
(bad)
repnz
xchg
mov
inc
push
or
movs
ss
sbb
daa
ret
mov
xor
ret
es
pop
mov
xchg
fld
xchg
dec
jae
ret
jbe
std
xor
xor
or
push
adc
(bad)
ret
int
out
stos
inc
or
xor
arpl
xchg
int
jbe
jnp
adc
fsub
dec
bound
int
es
loopne
in
jae
or
push
xlat
std
jae
ret
push
inc
int
ss
push
jae
rcl
(bad)
dec
pop
push
cmps
mov
in
pop
es
cld
push
pusha
or
in
loop
xor
inc
es
push
xor
mov
repz
jbe
fadd
pop
push
rcl
ja
mov
(bad)
push
popf
adc
sar
and
add
repz
mov
adc
addr16
pop
aam
inc
es
mov
xchg
aaa
adc
in
add
popf
xchg
push
adc
movs
jbe
or
rcl
add
sub
push
ret
ret
ja
aaa
adc
addr16
xchg
cwde
mov
and
adc
jecxz
add
xor
arpl
ret
nop
add
inc
xor
fadd
and
fadd
mov
dec
(bad)
mov
dec
xlat
mov
jmp
ja
dec
push
pusha
jecxz
adc
sar
adc
xor
mov
arpl
clc
cmps
es
jb
(bad)
iret
pop
push
ret
addr16
int
and
clc
xchg
hlt
sub
adc
ret
(bad)
test
sub
(bad)
retf
ja
daa
jmp
pop
push
(bad)
lods
push
xor
out
pushw
push
in
inc
(bad)
ret
or
xchg
xor
call
movs
jbe
fst
xlat
sbb
push
adc
sub
mov
adc
jb
mov
add
out
push
jo
pop
inc
aaa
jecxz
ja
xchg
int
push
ret
(bad)
push
popf
rol
(bad)
stos
(bad)
mov
pop
ja
mov
int3
inc
jecxz
retf
add
neg
arpl
clc
push
xor
out
es
mov
arpl
clc
push
xor
out
inc
xchg
cwde
inc
add
fnstenv
aam
xchg
rcr
cmps
push
repz
ret
adc
iret
(bad)
pop
ret
jmp
push
xchg
xlat
xor
push
shl
popf
ret
or
aaa
repnz
push
shl
pushf
adc
ror
jbe
jmp
mov
xchg
mov
adc
or
adc
clc
pop
retw
repz
cmp
inc
adc
retf
bound
loop
add
mov
ror
arpl
ret
jmp
adc
sub
adc
idiv
push
adc
cld
ret
fnsave
int
adc
fist
rep
push
add
sub
inc
repz
cmp
cmps
push
ret
(bad)
sbb
adc
fsub
jge
jbe
fadd
out
push
add
repnz
push
shl
pushf
and
push
fld
repnz
int
adc
fld
icebp
cdq
(bad)
mov
add
and
ja
(bad)
retf
pop
push
shr
ss
bound
repz
repnz
lea
ror
adc
repnz
inc
inc
ret
aaa
arpl
push
adc
int3
(bad)
push
ret
xor
jbe
retf
inc
repz
cmp
xchg
inc
ret
shl
lea
loopne
addr16
repnz
jecxz
add
(bad)
jmp
push
aam
addr16
ret
fidiv
mov
mul
fdiv
mov
mov
xchg
repnz
xchg
fist
repnz
inc
pop
(bad)
retf
ret
adc
call
pop
inc
and
add
mov
fcom
and
inc
daa
addr16
and
inc
in
inc
add
(bad)
into
xchg
(bad)
fsub
adc
ss
mov
fcom
xor
push
shl
popf
rol
mov
jb
movs
mov
jo
mov
addr16
clc
out
ret
sti
jecxz
add
mov
addr16
les
cmp
mov
cmp
adc
push
xor
jg
push
repnz
inc
inc
xchg
repz
neg
fs
cld
push
adc
cld
ja
xchg
popf
(bad)
ja
mov
adc
(bad)
out
push
jo
mov
(bad)
arpl
add
icebp
cdq
jbe
mov
popf
add
neg
add
icebp
cdq
inc
(bad)
mov
dec
push
daa
repnz
jbe
cmp
push
and
xchg
es
jecxz
sub
rcl
jmp
push
arpl
fst
popf
inc
and
fsub
jge
jo
in
ret
or
xor
cmp
ror
and
ret
adc
clc
pop
shr
xlat
retw
xor
lods
add
push
cmp
inc
repz
cmp
push
add
cwde
mov
inc
int
push
aam
cmps
es
(bad)
push
or
(bad)
xlat
push
lea
ror
daa
ret
out
adc
clc
mov
rol
mov
inc
dec
(bad)
or
push
rcr
mov
mov
xor
push
lahf
adc
aaa
sub
mov
ret
inc
add
repz
jae
je
xchg
mov
inc
ret
xor
pushf
jae
neg
push
and
cwde
inc
xor
in
push
add
enter
retf
inc
repz
cmp
xchg
inc
ret
retf
add
push
cmp
push
mov
frstor
ret
arpl
dec
cmps
es
push
pusha
(bad)
fcom
xor
call
(bad)
mul
add
adc
(bad)
out
push
jo
mov
bound
aam
daa
sar
cmps
push
ret
aam
int3
not
sbb
aaa
rcr
hlt
popf
bound
(bad)
cmp
addr16
clc
inc
aaa
ret
out
push
push
xchg
frstor
repnz
inc
shl
pushf
push
xor
enter
sub
inc
es
add
lea
aam
daa
and
mov
push
xor
in
(bad)
(bad)
loop
push
loopne
int
jbe
ins
adc
(bad)
out
push
jo
mov
adc
in
daa
es
push
mov
in
arpl
ret
out
adc
clc
adc
(bad)
out
xchg
rcr
rol
fadd
shr
aaa
pop
ret
(bad)
and
adc
ror
bound
push
fst
(bad)
(bad)
das
inc
inc
neg
inc
push
adc
inc
fs
popw
dec
push
xor
call
push
add
clc
push
pusha
xchg
mov
adc
clc
adc
ret
repz
cmp
push
inc
mov
inc
bound
cdq
inc
ret
add
neg
test
ret
and
add
fsub
lods
xor
cmp
(bad)
fnstenv
bound
dec
(bad)
or
bound
cdq
push
inc
mov
addr16
shr
adc
std
push
adc
enter
cmp
adc
out
inc
ja
fadd
mov
adc
out
push
ja
cmp
inc
ret
rol
mov
push
inc
fcom
int
adc
ret
or
or
xlat
int3
inc
push
repnz
in
(bad)
and
push
and
inc
push
push
in
mov
adc
and
popf
push
mov
std
pop
and
cdq
inc
inc
ret
(bad)
add
bound
clc
daa
arpl
add
lea
mov
int
adc
retf
rol
xchg
push
pop
repnz
repnz
inc
shl
pushf
inc
and
fld
neg
mov
xchg
aaa
adc
dec
push
adc
or
adc
std
adc
in
(bad)
es
adc
ror
adc
fnstenv
bound
adc
retf
ret
ja
pushf
inc
xor
call
adc
mov
(bad)
retf
pop
adc
clc
pop
and
enter
dec
push
inc
(bad)
retf
mov
xchg
loop
je
push
and
fsub
aam
addr16
popf
adc
in
cmps
es
inc
push
jb
mov
push
dec
inc
xor
out
ss
repnz
push
cmp
div
mov
rol
loop
fs
(bad)
ret
fld
mov
push
xor
retf
push
adc
or
push
pusha
xchg
cmp
aaa
(bad)
fdiv
xchg
popf
(bad)
ja
cmp
inc
(bad)
jmp
add
cwde
push
inc
ret
fist
rep
jae
xchg
xlat
pop
ret
push
shr
push
xor
lea
(bad)
loop
inc
mul
daa
push
sahf
pop
movs
add
inc
and
call
inc
arpl
retf
addr16
(bad)
bound
push
mov
lea
xlat
jge
push
repnz
xchg
cmp
jbe
fdiv
int
adc
fwait
inc
adc
fsub
xchg
std
inc
mov
retf
arpl
mov
add
fsub
jge
jae
in
push
pusha
mov
add
popf
inc
mov
fnsave
leave
inc
push
ret
(bad)
and
aaa
ret
xor
(bad)
fidiv
inc
pop
addr16
shr
adc
std
push
and
fadd
ror
popa
test
scas
adc
cmp
ss
(bad)
shr
push
and
enter
lea
cmps
sub
xor
call
push
xor
call
ret
pop
jb
xlat
int
push
ret
repz
cmp
mov
sub
xor
loop
pop
mov
cmp
push
arpl
std
mov
shr
add
icebp
cdq
inc
(bad)
mov
int
adc
in
adc
std
arpl
aam
cmps
es
push
pusha
sar
inc
adc
jno
hlt
scas
add
xlat
lods
adc
out
inc
jbe
fdiv
ret
not
std
mov
(bad)
dec
out
xlat
mov
xlat
fadd
icebp
cwde
xlat
ret
cmps
mov
sti
inc
rol
arpl
aam
xchg
rcr
push
pop
rcr
and
repnz
inc
shl
pushf
xor
fadd
dec
daa
push
ret
jae
clc
pop
xor
pushf
xchg
jbe
fsub
ret
(bad)
add
sti
jae
les
add
int
push
mov
jb
mov
popf
repz
push
or
jbe
retf
jb
xchg
aaa
adc
add
xor
inc
es
pop
xchg
dec
inc
add
fdiv
enter
lods
repz
repz
jb
repnz
and
repnz
inc
shl
pushf
add
neg
cmps
es
inc
arpl
clc
inc
daa
arpl
bound
xchg
int
push
out
inc
adc
retf
add
neg
je
xlat
int3
addr16
fldenv
sar
addr16
clc
mov
repnz
inc
and
cmp
xchg
outs
push
xor
retf
push
push
shr
xor
out
div
mov
inc
push
neg
neg
push
adc
or
xor
addr16
pop
push
je
pop
and
fidiv
mov
pop
retw
mov
popf
inc
daa
addr16
push
xor
call
shl
ret
mov
sbb
mov
jnp
lock
ja
mov
adc
out
pop
xor
out
push
es
push
xor
pop
inc
ja
fsub
lods
arpl
(bad)
out
div
ror
shl
xchg
popf
inc
es
lea
xchg
dec
ret
fcom
std
inc
xor
fsub
repnz
fldenv
shr
inc
push
xchg
add
neg
inc
xlat
adc
adc
xchg
std
adc
(bad)
out
jbe
(bad)
retf
daa
pop
or
je
int3
(bad)
push
sbb
repz
xlat
clc
push
inc
xchg
cwde
mov
out
push
xor
call
rol
neg
mov
xchg
mov
adc
jno
ror
adc
mov
add
mov
push
sub
and
in
popa
daa
ret
into
jb
mov
push
pusha
ret
out
mov
inc
int
push
or
xlat
int
xor
ja
inc
enter
in
arpl
dec
jb
(bad)
retf
pop
adc
cdq
ja
(bad)
retf
push
adc
enter
leave
ret
jbe
fadd
pushf
and
add
add
loop
push
out
frstor
repnz
inc
shl
pushf
add
neg
add
xchg
pushf
push
add
retf
adc
dec
(bad)
and
mov
mov
lea
and
fld
shr
inc
ret
(bad)
add
mov
push
inc
fcom
push
fld
ret
fist
push
imul
and
clc
mov
xchg
mov
bound
shr
adc
std
push
mov
xlat
fadd
(bad)
enter
(bad)
add
push
adc
in
adc
clc
adc
in
inc
es
inc
adc
lea
neg
inc
add
enter
enter
clc
daa
arpl
enter
js
xchg
rcr
fs
test
jb
clc
push
and
cdq
mov
jecxz
inc
arpl
enter
sti
jae
xchg
inc
pop
rcr
fs
arpl
pusha
xchg
mov
ja
aam
push
daa
repz
daa
xor
arpl
xlat
clc
inc
data16
push
aaa
ret
ja
int3
jb
out
push
adc
cmp
mov
retf
es
arpl
inc
adc
fs
test
jae
clc
and
dec
push
jo
dec
adc
out
adc
out
aaa
jae
stos
ja
xchg
pop
ss
not
inc
push
cmp
pusha
xor
adc
out
inc
jbe
fbstp
xor
adc
shr
push
xor
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fild
pop
imul
(bad)
loop
sbb
loop
pop
adc
add
ret
xor
xor
mov
and
cld
inc
jne
mov
jnp
retf
jnp
(bad)
call
fist
push
addr16
loop
sbb
loop
mov
(bad)
push
push
loopne
(bad)
and
pop
pusha
push
lds
js
jl
(bad)
ror
xor
adc
xor
inc
ins
or
rcr
ret
fild
dec
sub
dec
mov
ins
sbb
loop
pop
hlt
loop
cmp
dec
retf
fild
cli
mov
mov
shl
xor
std
loop
adc
popa
sbb
loop
sbb
xor
arpl
jg
push
sbb
loop
sbb
mov
xor
(bad)
loop
sbb
loop
pop
jne
and
xor
fs
loop
sbb
loop
push
js
push
push
in
(bad)
loop
sbb
mov
aaa
gs
mov
inc
fst
xchg
mov
and
test
rcl
jmp
sbb
loop
sbb
loop
pop
inc
(bad)
aam
cli
xchg
pop
mov
(bad)
push
es
xor
aam
mov
fwait
mov
addr16
popf
push
fs
loop
sbb
loop
hlt
in
jl
movs
lods
push
sbb
loop
sbb
mov
sbb
(bad)
loop
sbb
loop
sbb
loop
or
jmp
(bad)
mov
jbe
(bad)
push
add
rcl
sub
jmp
sbb
loop
sbb
loop
cdq
popf
push
fs
loop
sbb
loop
hlt
in
ins
and
mov
fs
loop
sbb
loop
or
jmp
sahf
int3
mov
cmc
xchg
sbb
or
rcl
call
fist
push
addr16
loop
sbb
loop
adc
push
sbb
int3
gs
push
xor
inc
stos
push
int3
(bad)
mov
push
and
(bad)
loop
sbb
loop
push
nop
imul
stos
dec
xchg
(bad)
sub
nop
sub
and
retf
push
add
sbb
cmp
and
rcr
ret
jns
pop
add
dec
das
jo
leave
jle
test
mov
jle
lds
dec
cld
gs
mov
(bad)
sar
cdq
mov
cmps
xor
outs
push
push
hlt
jo
pop
lods
jg
cmp
iret
std
loopne
jo
scas
xchg
hlt
ret
adc
xchg
mov
repz
sub
ret
icebp
or
in
jne
je
dec
xor
lods
inc
into
push
fnstenv
iret
cmp
adc
inc
dec
add
inc
cmp
xchg
popa
aas
cli
inc
inc
in
sbb
loope
push
jne
sbb
mov
xchg
sub
jns
ins
xor
mov
inc
inc
xor
add
leave
ror
popf
pop
fcom
mov
dec
push
xor
shl
mov
mov
mov
js
or
dec
dec
xchg
iret
dec
jbe
cmp
aad
ror
add
in
sub
push
sar
jno
dec
fist
loop
and
mov
xor
retf
ror
rol
or
pop
inc
idiv
iret
ins
in
int3
(bad)
cmp
mov
addr16
js
xor
loope
outs
ret
mov
out
bnd
mov
xchg
mov
cmp
mov
(bad)
(bad)
mov
addr16
iret
(bad)
xor
add
scas
xor
add
div
mov
call
pushf
mov
lock
cli
ficom
sti
lods
stos
shr
faddp
fwait
lods
call
pushf
mov
ror
stos
shr
pop
lds
aad
std
xchg
cld
call
pushf
mov
lock
add
mov
pusha
stos
xchg
mov
shr
and
pop
pushf
mov
pusha
stos
xchg
mov
shr
mov
enter
shr
mov
shr
mov
(bad)
fwait
lods
call
pushf
mov
add
in
pushf
(bad)
xchg
sbb
fwait
pushf
mov
shr
retf
scas
not
mov
leave
fwait
pushf
mov
lock
call
cli
(bad)
xor
leave
jmp
(bad)
adc
adc
addr16
movs
adc
stos
sahf
mov
mov
jle
movs
mov
aas
inc
adc
data16
xchg
sti
retf
loopne
mov
(bad)
mov
sbb
jmp
xor
mov
jnp
inc
inc
iret
ins
mov
stc
ins
repz
test
pop
adc
imul
fimul
jbe
sbb
jmp
inc
xor
enter
ror
inc
repnz
inc
jmp
mov
xchg
add
mov
iret
int
jns
or
push
loopne
inc
xor
(bad)
adc
push
mov
cmps
shl
jne
cmp
adc
push
(bad)
sar
cli
or
int
mov
adc
rcl
sbb
shl
je
cmps
jns
outs
inc
push
xor
fadd
ror
es
pop
mov
(bad)
pusha
cmps
xchg
leave
and
into
cli
jnp
sti
adc
push
iret
enter
mov
hlt
sub
sub
jle
pop
xor
cwde
mov
(bad)
jns
idiv
loopne
retf
adc
ret
outs
retf
aad
adc
adc
push
outs
and
iret
int
test
jmp
fimul
adc
adc
sbb
in
dec
add
push
add
sbb
movs
jne
inc
ret
stos
aas
jecxz
push
adc
xchg
popf
dec
and
adc
sbb
cmp
std
sub
xchg
pop
sbb
add
jne
inc
ret
stos
pop
adc
cli
ds
adc
stos
and
push
aam
or
sbb
sbb
ds
jl
dec
jae
sub
push
adc
popa
mov
fimul
xchg
test
adc
sbb
outs
sbb
lods
mov
sbb
sbb
jmp
cmps
and
sbb
outs
sbb
into
int
cs
xor
sub
test
daa
xchg
jns
push
jge
shr
pop
inc
pop
daa
test
add
dec
mov
mov
cmp
pusha
cmp
xor
jo
std
into
sar
xchg
ins
push
arpl
test
gs
mov
jb
sbb
jbe
and
(bad)
in
jnp
loope
(bad)
mov
in
iret
lods
std
push
mov
jo
rcr
mov
cmc
(bad)
in
gs
jns
xor
hlt
xchg
int
lea
(bad)
int
shl
mov
sahf
out
int3
inc
into
adc
bound
nop
hlt
lods
in
enter
test
dec
retf
adc
ss
shr
call
int
loop
out
xor
sbb
push
xor
rol
mov
(bad)
in
int3
int
jg
mov
ret
mov
fwait
jno
cmp
xchg
dec
cmp
pop
in
iret
clc
inc
jmp
icebp
xchg
int3
test
adc
mov
out
jl
out
jmp
dec
jbe
cmp
aam
rcr
xor
popf
dec
xchg
dec
push
rol
in
and
(bad)
mov
ja
sbb
inc
xchg
pmullw
push
add
push
add
imul
sbb
xchg
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
(bad)
fiadd
fmul
sbb
fmul
sbb
fmul
sbb
fmul
sbb
fmul
sbb
fmul
sbb
fmul
sbb
fmul
sbb
fmul
sbb
fmul
sbb
fmul
call
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
sbb
pop
stos
mov
scas
fild
in
loope
and
in
and
inc
in
mov
mov
mov
mov
pop
loopne
and
inc
in
fisubr
iret
(bad)
(bad)
out
mov
jns
loope
and
pop
mov
and
push
(bad)
(bad)
jns
loope
and
call
mov
or
imul
mov
mov
out
mov
pop
mov
rcr
mov
loopne
and
mov
jp
mov
mov
mov
loope
and
push
inc
cmp
call
mov
mov
loopne
and
mov
fstp
inc
vpmullw
mov
xchg
icebp
movs
cs
test
adc
mov
loope
and
shl
and
nop
and
(bad)
sub
jns
loope
and
loopne
arpl
jle
mov
mov
mov
loope
and
xlat
sub
mov
jb
shl
and
out
adc
in
loope
and
out
xor
in
loope
and
out
mov
mov
mov
mov
loope
and
cli
or
and
loopne
jae
and
and
call
xor
out
pop
sbb
pop
call
sub
loope
and
out
not
stos
cli
(bad)
mov
out
and
shl
and
rol
and
loop
and
aad
push
and
je
(bad)
sub
ja
aad
xchg
jl
cmps
jp
call
dec
adc
sar
mov
jecxz
mov
mov
clc
in
and
fisubr
xchg
xchg
fstp
or
xchg
dec
mov
or
and
adc
mov
jle
test
mov
es
xchg
test
mov
je
jbe
fsub
dec
aaa
ds
adc
adc
and
lods
lahf
mov
jb
outs
xchg
jo
pop
mov
iret
ins
cmps
xor
leave
js
sub
movs
sub
test
jae
jle
sbb
lea
loopne
push
test
adc
jl
inc
mov
in
xor
jns
xchg
loop
xor
lds
push
retf
cmp
ja
sti
ja
adc
xchg
das
cwde
leave
mov
and
in
in
nop
jns
out
xchg
xor
out
mov
cwde
(bad)
cmp
add
jb
inc
rep
ret
dec
loop
jnp
jns
das
out
xor
iret
enter
xchg
pop
movs
jns
aas
push
mov
dec
pushf
push
sbb
mov
sub
sbb
call
fistp
iret
fcomp
ror
adc
adc
mov
fdiv
call
jge
jns
outs
(bad)
mov
dec
cld
push
mov
popf
fsub
mov
cmp
pop
std
jo
call
push
cmps
mov
jge
in
add
xchg
out
add
mov
js
mov
jg
cmp
rcr
cmp
push
inc
sub
dec
xchg
and
add
pop
xor
scas
dec
dec
rcr
into
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
shr
push
int3
ror
fscale
lock
nop
fimul
into
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
or
rcr
jmp
rcr
or
ret
(bad)
add
fwait
enter
leave
jecxz
dec
enter
enter
leave
repz
into
rcr
or
ret
(bad)
add
fwait
enter
leave
jecxz
dec
enter
enter
leave
sbb
into
jecxz
or
rcr
sbb
xchg
fcmovnu
enter
leave
inc
fstp
leave
xchg
fisubr
enter
leave
and
sub
sbb
into
rcr
or
ret
(bad)
add
fwait
enter
leave
jecxz
dec
enter
enter
leave
repz
into
rcr
or
rcr
sti
enter
int3
repz
leave
sbb
leave
sbb
into
jecxz
or
rcr
or
rcr
(bad)
mov
add
jecxz
aaa
sub
xor
jmp
add
sti
into
fucomi
add
jmp
adc
rcr
xchg
xlat
push
clc
call
xor
jmp
test
or
jmp
xor
jmp
cli
cmp
add
jecxz
xor
jmp
(bad)
fucompp
mov
in
in
imul
xor
(bad)
jmp
xlat
push
jnp
into
xlat
fnstsw
mov
dec
clc
call
xor
jmp
xchg
xor
jmp
imul
xchg
cmp
sar
pop
lock
pop
or
rcr
clc
call
xor
jmp
into
xchg
sub
pop
jle
out
add
jmp
(bad)
fucompp
xor
jmp
into
xchg
sub
pop
jle
out
add
jmp
(bad)
fucompp
xor
jmp
clc
jmp
outs
aad
pop
jle
out
add
jmp
(bad)
fucompp
xor
jmp
into
xchg
sub
pop
jle
out
add
jmp
cli
jns
add
jecxz
xor
jmp
outs
aad
pop
jle
out
add
jmp
cli
cmp
add
jecxz
xor
jmp
(bad)
pop
jnp
into
shr
cmp
xlat
in
xor
jmp
cli
cmp
add
jecxz
xor
jmp
into
shr
add
jecxz
xor
jmp
call
add
jecxz
xor
jmp
(bad)
rcr
imul
fptan
call
add
xlat
fstp
fidiv
into
xlat
lods
add
xlat
in
xor
jmp
outs
aad
pop
sahf
fild
retf
fimul
add
rcr
aam
or
jbe
repnz
clc
call
xor
jmp
imul
sbb
fucompp
xor
jmp
imul
and
inc
(bad)
pop
mov
or
or
xlat
int
mov
or
arpl
fcmovnb
fucompp
xor
jmp
clc
jmp
into
xlat
in
inc
(bad)
shr
xor
jmp
(bad)
jmp
into
xchg
in
add
jmp
imul
je
pop
mov
push
enter
scas
fnstenv
aaa
mov
(bad)
xlat
(bad)
rcr
repnz
stos
lds
sar
mov
xor
jmp
out
fsub
aas
mov
out
add
jmp
std
jmp
imul
in
imul
les
std
jmp
cdq
je
jmp
(bad)
or
sub
in
or
sub
ror
jmp
fucompp
xor
jmp
sbb
in
cmc
jmp
imul
in
imul
in
hlt
jmp
iret
xlat
mov
add
jmp
lods
pop
fnsave
into
and
mov
mov
add
jecxz
xor
jmp
sahf
dec
jecxz
leave
mov
jmp
repz
into
cmp
inc
push
and
mov
ja
xor
cs
int
sahf
or
add
adc
push
(bad)
fucompp
xor
jmp
(bad)
shr
xor
jmp
call
xor
jmp
(bad)
jecxz
xor
jmp
(bad)
shr
xor
jmp
std
pushf
xlat
fistp
jmp
mov
jmp
mov
jmp
jmp
mov
jecxz
xor
jmp
cmps
mov
xor
jmp
sahf
aam
add
jmp
cli
dec
jmp
jmp
neg
or
enter
(bad)
in
jge
aaa
mov
into
xlat
ins
or
xlat
in
xor
jmp
fimul
in
imul
in
imul
hlt
aaa
imul
out
(bad)
xlat
in
xor
jmp
dec
xor
jnp
into
xlat
jge
aaa
mov
into
xlat
ins
or
xlat
in
xor
jmp
fidivr
add
jecxz
xor
jmp
(bad)
xlat
in
xor
jmp
enter
out
fbld
ins
aad
pop
scas
fsub
outs
aad
pop
jle
out
add
jmp
(bad)
jmp
(bad)
in
add
jmp
enter
scas
(bad)
or
or
and
stos
enter
iret
and
mov
imul
test
repnz
shr
aaa
sub
xor
jmp
cs
add
inc
add
push
sub
fsub
outs
aad
pop
jle
out
add
jmp
sahf
aas
inc
push
outs
xchg
or
ret
ficomp
sub
clc
into
xlat
fstp
cs
add
sbb
push
jmp
xlat
(bad)
shl
jle
mov
jo
dec
mov
dec
mov
dec
mov
inc
aam
outs
jbe
(bad)
jbe
jl
cmovb
into
push
mov
add
fnstenv
(bad)
fldenv
xor
and
iret
push
mov
call
push
mov
outs
push
icebp
mov
inc
(bad)
arpl
mov
inc
rcr
mov
xchg
mov
repnz
into
add
ja
add
mov
mov
or
ror
and
and
js
sbb
pop
dec
adc
push
ins
xchg
jns
jl
cmovb
mov
mov
int
cli
out
mov
lods
inc
mov
fld
add
add
shl
fs
mov
popf
in
icebp
or
dec
add
shl
in
jmp
pusha
xchg
(bad)
jne
ds
xchg
xor
push
lock
int
jne
ds
pop
jns
jecxz
test
mov
dec
into
push
push
xlat
xchg
inc
bound
dec
xchg
fsubrp
ficom
xchg
mov
cs
xchg
xchg
clc
and
aaa
iret
js
mov
pop
mov
jg
sbb
inc
outs
push
xor
popa
inc
push
mov
sub
sub
imul
cmp
xor
aas
mov
retf
popa
loopne
pop
pop
sub
push
sub
push
sub
add
test
sbb
(bad)
add
adc
adc
cmp
jns
aas
pop
sub
push
sub
pop
sub
rcr
or
add
addr16
mov
outs
adc
cmp
mov
retf
popa
loopne
pop
pop
sub
push
and
push
imul
push
sub
mov
push
add
adc
test
enter
imul
pop
sub
add
jne
pop
sbb
push
sub
push
sub
pop
and
xchg
cmp
adc
pop
pop
sub
imul
add
add
or
ja
add
out
add
add
mov
(bad)
loopne
xor
cmc
sbb
loopne
sub
inc
xor
or
xor
add
call
icebp
mov
cmps
jne
test
jo
lds
dec
ds
mov
iret
push
dec
jl
into
push
mov
add
adc
ss
push
push
outs
mov
push
mov
iret
std
shl
jns
test
push
mov
adc
inc
iret
fld
aam
sub
aas
mov
sbb
adc
cmp
cmps
and
sti
or
pop
out
cwde
inc
xor
and
hlt
jmp
sbb
jne
or
(bad)
dec
adc
add
fwait
test
or
int
lea
in
adc
jne
cmp
push
rcr
js
dec
jp
inc
xor
aad
rcr
sub
mov
jle
(bad)
sar
aaa
imul
jl
bound
call
int
ffree
cmp
mov
enter
cmp
mov
mov
fld
not
jo
cmp
xchg
mov
in
iret
js
or
pop
mov
mov
iret
int
add
imul
lods
inc
sub
push
call
int
and
repnz
mov
sbb
jae
out
ror
sbb
arpl
jmp
outs
mov
cmps
nop
in
inc
mov
loopne
jb
jmp
inc
pop
jmp
and
imul
adc
scas
inc
pop
jmp
inc
pop
jmp
inc
pop
jmp
dec
neg
mov
rcl
cmp
mov
inc
pop
imul
push
jmp
dec
pop
mov
cs
pop
imul
push
jnp
loop
inc
pop
fist
mov
scas
inc
pop
fist
mov
scas
inc
pop
jmp
inc
pop
fist
sti
jl
scas
inc
pop
jmp
inc
pop
jmp
inc
pop
sbb
inc
pop
jmp
inc
pop
jmp
dec
pop
fist
inc
pop
jmp
inc
pop
jmp
inc
pop
jmp
adc
jecxz
inc
pop
sub
jb
loop
inc
pop
jmp
inc
pop
pop
xchg
inc
pop
mov
jge
in
jge
xlat
pop
je
mov
das
xchg
in
into
jb
jmp
inc
pop
jmp
dec
pop
pop
mov
or
mov
jae
and
adc
int
sti
mov
fst
inc
pop
jmp
inc
pop
jmp
inc
pop
sub
je
in
pop
add
loop
jbe
and
cwde
outs
inc
mov
jnp
shl
stos
cli
jnp
bound
push
or
and
jmp
pop
movs
repz
pop
repnz
jecxz
or
inc
inc
test
ja
dec
dec
ja
dec
iret
jbe
jns
sbb
inc
mov
dec
ja
dec
dec
jge
dec
(bad)
fidiv
dec
dec
ja
dec
pop
jle
jmp
jp
mov
inc
mov
dec
ja
dec
(bad)
mov
jo
inc
test
ja
dec
pop
jp
or
mov
inc
mov
dec
ja
dec
jg
cld
sbb
dec
test
ja
dec
dec
ja
dec
pop
jp
or
mov
inc
mov
dec
ja
dec
dec
ja
dec
jg
cld
sbb
inc
test
ja
dec
dec
ja
dec
dec
jbe
mov
jb
sub
ins
dec
rol
jle
cmp
inc
inc
mov
dec
ja
dec
dec
ja
dec
aas
jle
push
mov
into
fdivr
inc
inc
mov
jg
mov
maskmovq
ret
inc
inc
test
ja
dec
dec
ja
dec
das
jp
int3
dec
(bad)
mov
dec
ja
dec
out
jge
dec
mov
inc
jb
int3
jo
inc
test
ja
dec
dec
ja
dec
pop
jp
or
mov
inc
mov
dec
ja
dec
mov
dec
test
ja
dec
dec
ja
dec
pop
jle
or
test
ja
dec
dec
ja
dec
pop
jb
dec
out
inc
pushf
fs
mov
adc
jo
add
dec
dec
ja
dec
dec
ja
dec
jg
test
mov
inc
ja
dec
dec
ja
dec
dec
dec
xor
je
ja
dec
dec
jge
dec
(bad)
fidiv
dec
dec
ja
dec
das
(bad)
loop
jbe
mov
inc
or
test
xor
mov
dec
int3
out
dec
test
jle
aaa
neg
cld
jb
dec
mov
jmp
jg
mov
pop
mov
test
ja
dec
dec
ja
dec
iret
jo
imul
push
in
inc
ja
dec
dec
ja
dec
das
jg
test
in
inc
ja
dec
iret
jo
imul
js
out
mul
hlt
inc
ja
dec
jg
mov
jg
or
inc
inc
mov
outs
js
dec
aas
clc
sahf
ror
mov
dec
mov
fidiv
fdiv
inc
mov
push
cld
sbb
dec
test
ja
dec
dec
ja
dec
pop
jp
or
mov
inc
mov
dec
ja
dec
dec
ja
dec
mov
dec
test
ja
dec
dec
ja
dec
jg
in
jo
inc
test
ja
dec
outs
jp
jl
pop
sbb
es
mov
sbb
fimul
test
ja
dec
jg
test
mov
inc
ja
dec
dec
ja
dec
dec
ja
dec
fild
div
test
je
mov
mov
jo
mov
dec
jp
popa
out
adc
mov
test
ja
dec
push
dec
fimul
inc
daa
dec
mov
inc
ja
dec
dec
ja
dec
outs
jg
leave
clc
dec
ss
jl
inc
inc
xor
int3
pusha
and
int3
xchg
test
js
cmp
into
cld
push
inc
inc
mov
dec
ja
dec
scas
jnp
dec
das
imul
mov
dec
dec
jle
xchg
xor
je
mov
mov
jo
mov
dec
jg
inc
aaa
in
inc
ja
dec
dec
ja
dec
out
jbe
dec
dec
pop
inc
dec
dec
ja
dec
push
stc
dec
pop
lds
ja
dec
dec
ja
dec
push
sub
mov
das
jns
mov
mov
dec
dec
ja
dec
dec
ja
dec
push
push
(bad)
dec
das
jns
mov
mov
dec
dec
ja
dec
pcmpeqw
inc
ja
dec
dec
ja
dec
(bad)
jle
sub
test
mov
dec
jge
dec
jg
mov
mov
dec
add
xchg
dec
out
jbe
dec
dec
daa
mov
dec
ja
dec
iret
jbe
dec
dec
pop
add
dec
pop
jp
jmp
dec
ja
dec
dec
ja
dec
jg
or
inc
inc
test
ja
dec
dec
ja
dec
dec
xlat
in
inc
ja
dec
mov
ja
dec
pop
jp
jmp
dec
ja
dec
iret
jbe
dec
dec
pop
add
dec
dec
xlat
in
inc
ja
dec
dec
ja
dec
iret
jbe
dec
dec
pop
test
ja
dec
dec
xlat
in
inc
ja
dec
iret
jo
dec
dec
sbb
push
xchg
call
xchg
add
inc
inc
test
ja
dec
dec
ja
dec
aas
clc
sahf
ror
mov
dec
mov
fidiv
fdiv
inc
mov
or
sub
imul
dec
dec
ds
mov
jno
mov
cmp
mov
dec
ja
dec
jg
mov
bsr
rol
inc
dec
ja
dec
maskmovq
inc
inc
inc
test
ja
dec
dec
ja
dec
lahf
jge
dec
out
inc
fcom
daa
mov
iret
jbe
dec
dec
pop
inc
inc
dec
ja
dec
dec
ja
dec
pop
jp
jmp
dec
ja
dec
(bad)
jle
sub
mov
dec
ja
dec
dec
ja
dec
dec
xlat
in
inc
ja
dec
iret
jbe
dec
dec
pop
test
ja
dec
dec
xlat
in
inc
ja
dec
iret
jo
dec
jg
mov
call
cmps
popf
pushf
test
jo
ja
dec
mov
inc
rol
jle
pop
xor
mov
dec
ja
dec
jg
mov
bsr
rol
inc
dec
ja
dec
dec
ja
dec
scas
jnp
leave
dec
(bad)
mov
iret
jbe
dec
jg
mov
dec
dec
jge
dec
das
fstp
adc
outs
sbb
jp
mov
inc
mov
dec
ja
dec
dec
ja
dec
(bad)
jle
sbb
dec
test
ja
dec
dec
ja
dec
jg
in
mov
inc
test
ja
dec
jg
cld
sbb
inc
test
ja
dec
dec
jbe
mov
(bad)
fimul
jl
jl
inc
inc
mov
dec
ja
dec
dec
ja
dec
aas
jle
push
mov
into
sbb
inc
inc
mov
jg
mov
bsr
rol
inc
dec
ja
dec
maskmovq
ret
inc
inc
test
ja
dec
out
jb
dec
and
daa
adc
dec
dec
ja
dec
iret
jbe
dec
dec
pop
add
dec
dec
ja
dec
pop
jp
jmp
dec
ja
dec
dec
ja
dec
mov
ja
dec
dec
ja
dec
pop
jp
jmp
iret
jbe
dec
dec
pop
test
ja
dec
dec
xlat
in
inc
ja
dec
dec
jbe
mov
(bad)
fimul
jg
cld
pop
inc
inc
mov
dec
ja
dec
dec
ja
dec
mov
inc
aam
(bad)
jo
(bad)
jbe
movs
jo
ja
dec
dec
ja
dec
dec
ja
dec
iret
dec
jg
inc
aaa
in
inc
ja
dec
dec
ja
dec
iret
jbe
dec
dec
xchg
add
dec
dec
ja
dec
das
jge
leave
jle
cmc
jns
ja
dec
out
jb
dec
and
dec
(bad)
jo
fldcw
neg
xor
dec
dec
ja
dec
dec
ja
dec
dec
xlat
aad
dec
ja
dec
iret
jbe
dec
dec
daa
inc
inc
dec
ja
dec
das
jp
jmp
dec
ja
dec
(bad)
mov
jo
inc
test
ja
dec
dec
ja
dec
jg
in
hlt
inc
inc
test
ja
dec
dec
ja
dec
aas
jle
sbb
dec
test
ja
dec
dec
ja
dec
dec
ja
dec
jg
in
jo
inc
test
ja
dec
dec
ja
dec
jg
mov
push
pop
sbb
es
mov
pop
pop
or
inc
inc
test
ja
dec
dec
not
mov
ja
dec
iret
jbe
dec
dec
xchg
add
dec
dec
ja
dec
das
jo
leave
jle
test
mov
jns
cmc
adc
mov
dec
ja
dec
dec
xlat
aad
dec
ja
dec
dec
ja
dec
jg
or
inc
pop
test
ja
dec
dec
ja
dec
dec
xlat
aad
dec
ja
dec
dec
ja
dec
push
dec
jg
xchg
jo
ja
dec
dec
ja
dec
iret
jbe
jns
sbb
inc
mov
dec
jge
dec
mov
ja
dec
pop
jle
jmp
dec
(bad)
mov
dec
ja
dec
aas
jle
cwde
inc
ja
dec
dec
ja
dec
scas
jnp
leave
dec
(bad)
mov
out
jbe
dec
dec
cmps
add
dec
pop
repnz
inc
out
rcl
not
iret
ins
jo
xchg
jo
ja
dec
dec
ja
dec
pop
repnz
xor
pop
sub
xor
and
push
in
jne
daa
mov
dec
ja
dec
iret
jbe
dec
dec
cmps
lds
ja
dec
das
jg
test
cmc
adc
mov
pop
jle
test
mov
cld
sub
dec
test
ja
dec
dec
ja
dec
dec
ja
dec
das
cli
mov
jp
pushf
jo
inc
mov
dec
ja
dec
dec
ja
dec
out
jle
(bad)
push
jns
das
mov
dec
dec
ja
dec
scas
jnp
sub
imul
es
inc
scas
jle
(bad)
jae
jns
int3
jne
aam
inc
mul
inc
dec
ja
dec
dec
ja
dec
dec
dec
jg
inc
aaa
in
inc
ja
dec
outs
js
dec
pop
repnz
out
rcr
popa
int
push
sbb
jg
mov
pop
jae
dec
mov
dec
jg
mov
pop
inc
or
mov
jg
mov
pop
xchg
sbb
dec
ja
dec
fistp
dec
iret
inc
jg
inc
daa
in
inc
ja
dec
dec
ja
dec
scas
jbe
jl
sbb
add
or
inc
inc
test
ja
dec
dec
ja
dec
jg
jmp
dec
adc
outs
add
sub
xor
test
ja
dec
dec
ja
dec
dec
ja
dec
dec
xor
pusha
jo
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
and
mov
jns
mov
and
or
fisttp
jbe
inc
jg
inc
daa
in
inc
ja
dec
dec
ja
dec
dec
je
dec
jg
aad
inc
ja
dec
dec
ja
dec
dec
ja
dec
aas
jns
jg
mov
test
mov
outs
jle
stc
dec
inc
test
ja
dec
dec
ja
dec
iret
jbe
dec
pop
adc
sbb
inc
test
ja
dec
das
jge
mov
sar
mov
test
ja
dec
lahf
jb
sub
push
test
mov
dec
ja
dec
dec
ja
dec
das
mov
jae
dec
mov
inc
ja
dec
pop
jb
dec
jp
jl
dec
inc
test
ja
dec
das
mov
xor
dec
mov
inc
ja
dec
dec
ja
dec
mov
mov
not
sbb
inc
inc
mov
dec
ja
dec
scas
jnp
dec
das
imul
mov
dec
dec
pop
add
sub
pop
mov
test
ja
dec
dec
ja
dec
(bad)
jle
sub
in
sub
dec
mov
push
ja
sub
jl
mov
inc
mov
iret
jo
dec
fbld
push
push
mov
test
ja
dec
dec
jbe
dec
das
cdq
mov
out
sub
ins
sub
cmp
ja
ins
sub
xor
mov
iret
jbe
dec
pop
adc
mov
mov
mov
push
inc
lods
push
mov
lods
sub
sar
mov
test
ja
dec
dec
ja
dec
outs
jle
stc
dec
inc
test
ja
dec
dec
ja
dec
iret
jbe
dec
aas
pop
pop
push
mov
jb
(bad)
jbe
dec
jg
inc
test
ja
dec
dec
ja
dec
das
jp
leave
dec
(bad)
mov
dec
ja
dec
outs
jle
clc
dec
push
dec
repz
inc
mov
push
dec
call
js
jo
pop
sub
test
xchg
(bad)
dec
dec
ja
dec
dec
ja
dec
pop
jecxz
dec
mov
dec
iret
jbe
dec
aas
push
pop
push
jp
sbb
std
inc
mov
data16
jb
jl
mov
xor
inc
pop
xchg
sub
jo
cs
push
out
mov
lock
lock
cmps
jne
dec
ja
dec
dec
ja
dec
push
dec
(bad)
adc
dec
ja
dec
dec
ja
dec
das
jp
or
cld
jo
inc
cmp
inc
jle
clc
test
mov
iret
addr16
ins
sub
dec
mov
jno
or
(bad)
dec
sub
(bad)
dec
sub
xchg
adc
out
inc
mov
dec
dec
ja
dec
push
stc
dec
xchg
jne
dec
ja
dec
(bad)
mov
aas
inc
inc
test
ja
dec
aas
jg
leave
clc
icebp
lods
inc
into
add
push
es
mov
sar
cmp
out
mov
jo
adc
mov
mov
mov
(bad)
dec
das
jo
leave
jle
test
mov
sbb
xor
mov
xor
dec
mov
inc
ja
dec
dec
ja
dec
scas
jge
dec
jle
fdivr
dec
int3
not
dec
sub
test
icebp
jecxz
lock
xchg
jne
dec
ja
dec
dec
jbe
dec
jg
mov
and
cmp
adc
mov
dec
ja
dec
dec
ja
dec
dec
push
xor
mov
sbb
shr
inc
dec
lahf
ja
dec
dec
pop
test
mov
dec
jbe
dec
dec
and
mov
test
ja
dec
dec
ja
dec
push
jns
add
dec
ja
dec
dec
ja
dec
das
jo
leave
jle
stos
cld
jbe
or
xlat
dec
sub
(bad)
dec
sub
cmps
popa
add
inc
mov
dec
dec
ja
dec
dec
ja
dec
jg
mov
jo
xchg
rol
mov
test
ja
dec
dec
ja
dec
jg
int3
sub
dec
ja
dec
dec
ja
dec
jg
mov
cmp
adc
mov
push
jns
shl
ja
dec
dec
ja
dec
dec
ja
dec
pop
repnz
sar
jo
push
and
xor
dec
ja
dec
dec
ja
dec
dec
ja
dec
jg
or
xlat
dec
sub
(bad)
dec
sub
mov
add
dec
mov
dec
dec
ja
dec
dec
ja
dec
pop
ror
dec
mov
dec
push
dec
dec
pop
jne
dec
ja
dec
dec
ja
dec
das
jns
jg
stos
jg
inc
aaa
in
inc
ja
dec
scas
js
cmc
dec
cmps
jne
dec
ja
dec
scas
jnp
sub
push
sub
(bad)
dec
sub
mov
add
inc
mov
dec
dec
ja
dec
das
in
jno
jns
sar
mov
test
ja
dec
dec
ja
dec
scas
in
xor
cmps
jne
dec
ja
dec
dec
ja
dec
iret
jbe
dec
call
pop
push
mov
mov
inc
cmc
jno
dec
into
inc
leave
cmps
inc
xchg
add
dec
dec
jno
or
movs
dec
dec
ja
dec
dec
ja
dec
pop
jb
test
mov
xor
xchg
jecxz
xchg
dec
dec
ja
dec
mov
out
mov
test
test
mov
dec
jge
pusha
lds
push
jnp
test
ja
dec
dec
ja
dec
dec
ja
dec
pop
xor
dec
ja
dec
dec
ja
dec
pop
jo
dec
mov
ja
dec
dec
ja
dec
(bad)
fdiv
inc
repnz
jge
mov
inc
test
ja
dec
mov
jle
ds
adc
dec
dec
ja
dec
dec
ja
dec
dec
not
test
mov
jg
mov
out
dec
ja
dec
dec
ja
dec
pop
mov
inc
and
inc
test
ja
dec
dec
ja
dec
dec
jbe
dec
fldenv
ror
dec
lahf
jno
pop
dec
not
test
mov
iret
jbe
dec
dec
pop
inc
dec
dec
ja
dec
dec
ja
dec
pop
jle
jmp
jle
test
mov
dec
ja
dec
jg
mov
inc
test
ja
dec
jg
test
mov
dec
ja
dec
dec
ja
dec
jg
mov
jo
ja
dec
pop
jb
test
repz
hlt
dec
inc
test
ja
dec
out
jbe
pusha
inc
pop
inc
dec
dec
ja
dec
das
jns
leave
dec
(bad)
mov
dec
ja
dec
dec
ja
dec
outs
jp
jecxz
pop
sbb
xchg
dec
test
and
jae
addr16
dec
dec
ja
dec
dec
jge
pusha
lds
push
jnp
test
ja
dec
dec
ja
dec
dec
ja
dec
das
cmp
dec
ja
dec
dec
ja
dec
dec
jle
pop
dec
mul
dec
lahf
jno
pop
dec
not
mov
ja
dec
dec
ja
dec
das
jns
adc
or
inc
inc
test
ja
dec
dec
ja
dec
pop
repnz
xor
push
sbb
(bad)
jno
dec
scas
sbb
dec
cs
sbb
jns
mov
inc
mov
iret
jbe
dec
aas
push
pop
push
jp
mov
dec
mov
mov
aam
mov
mov
inc
inc
mov
dec
ja
dec
mov
ja
dec
dec
ja
dec
dec
ja
dec
aas
into
sub
dec
inc
mov
dec
ja
dec
out
jbe
dec
dec
pop
add
dec
dec
ja
dec
das
jp
or
mov
inc
mov
push
dec
jg
in
inc
ja
dec
dec
ja
dec
iret
std
fdiv
or
inc
adc
mov
inc
mov
dec
ja
dec
dec
ja
dec
scas
jnp
sub
or
pop
add
dec
dec
ja
dec
out
jb
dec
jne
pushf
jo
inc
mov
dec
ja
dec
pcmpeqd
jmp
jo
sbb
adc
dec
bound
jg
inc
daa
in
inc
ja
dec
fistp
jle
push
in
inc
ja
dec
out
jo
dec
(bad)
xor
leave
mov
xor
pop
add
dec
dec
ja
dec
dec
not
mov
ja
dec
dec
ja
dec
dec
jge
sbb
rcr
xlat
dec
pop
add
dec
dec
ja
dec
das
jp
leave
dec
xchg
dec
(bad)
jle
adc
mov
test
ja
dec
dec
ja
dec
das
jo
leave
jle
test
mov
jns
cmc
adc
mov
dec
ja
dec
dec
ja
dec
dec
xlat
aad
dec
ja
dec
push
dec
jg
movs
jae
ja
dec
dec
ja
dec
dec
ja
dec
aas
(bad)
hlt
imul
je
shl
inc
dec
ja
dec
jg
mov
inc
mov
dec
ja
dec
dec
ja
dec
iret
jbe
sbb
push
pop
push
mov
jle
(bad)
mov
adc
dec
dec
ja
dec
das
jnp
jmp
dec
ja
dec
dec
ja
dec
(bad)
jle
sub
mov
lahf
jge
dec
into
inc
ret
push
mov
jae
icebp
mov
div
test
ja
dec
dec
ja
dec
dec
ja
dec
das
jns
jg
add
icebp
mov
div
test
ja
dec
dec
ja
dec
das
jns
jg
mov
icebp
mov
div
test
ja
dec
push
dec
mov
pop
sub
mov
inc
inc
test
ja
dec
push
dec
mov
xchg
cs
cmp
test
ja
dec
dec
ja
dec
push
dec
sahf
dec
jae
(bad)
mov
(bad)
jns
test
ja
dec
dec
ja
dec
pop
repnz
mov
mov
daa
ja
test
ja
dec
dec
ja
dec
dec
ja
dec
jg
movs
cld
inc
not
test
xor
dec
dec
ja
dec
dec
xlat
in
dec
ja
dec
dec
ja
dec
pop
jae
dec
jne
mov
dec
(bad)
mov
dec
ja
fmul
mov
dec
ja
dec
dec
jbe
dec
lahf
push
mov
dec
not
test
mov
inc
dec
ja
dec
pop
jle
jmp
dec
inc
test
ja
dec
scas
jnp
dec
iret
or
pop
add
dec
dec
ja
dec
pop
jle
or
test
ja
dec
dec
ja
dec
dec
ja
dec
jg
mov
inc
mov
scas
jnp
dec
das
imul
stc
dec
into
dec
(bad)
mov
dec
ja
dec
jg
cld
sbb
inc
test
ja
dec
scas
jnp
dec
das
imul
mov
dec
dec
outs
dec
xchg
test
dec
(bad)
je
jle
ja
push
mov
dec
cmp
data16
lock
push
adc
(bad)
pop
movs
mov
push
jne
sbb
mov
mov
cmp
cmc
jae
fld
bound
mov
repz
jo
sbb
retf
inc
test
jb
enter
sbb
call
add
xchg
mov
arpl
ss
adc
cmc
repz
mov
shr
(bad)
test
jbe
cmp
(bad)
retf
shr
xchg
fidivr
ret
enter
xor
mov
xor
pop
add
sti
loop
or
ficom
ret
hlt
outs
fcmove
mov
add
dec
jge
add
xor
iret
js
mov
inc
and
int
out
fld
jo
and
shl
cmovo
clc
xchg
rcr
jle
jnp
call
ss
jge
cmps
jo
in
xchg
fadd
mov
dec
call
xchg
and
ds
jp
mov
cs
inc
cld
sbb
mov
ds
jl
ficomp
mov
jns
push
jl
shl
test
ss
mov
xchg
mov
xchg
jnp
movs
(bad)
sar
pop
jg
shr
adc
imul
jno
outs
jbe
shl
adc
shl
outs
jbe
shr
jno
outs
jbe
fsubr
je
sub
js
mov
lods
ss
jo
outs
jbe
shl
jno
pop
jo
shr
jno
outs
jbe
aam
imul
mov
lahf
jmp
sbb
icebp
fdivr
mov
dec
js
outs
jbe
shr
inc
cwde
or
pop
dec
js
outs
jbe
shr
xor
bound
cwde
(bad)
dec
js
pop
jg
shr
jno
sub
inc
call
div
outs
jbe
fld
jno
out
(bad)
jns
outs
jbe
fsub
push
sbb
out
in
pop
fbstp
outs
jbe
shr
icebp
shl
jno
pop
jg
shr
jno
outs
jbe
(bad)
jo
outs
jbe
shr
rcr
stc
jo
outs
jbe
shr
and
outs
jbe
jno
sub
outs
jbe
shr
and
outs
jbe
push
fucomip
js
outs
jbe
fisubr
jno
(bad)
outs
jbe
shr
inc
fisub
popa
aad
jae
push
or
jg
shr
jno
outs
jbe
shr
add
shr
jno
gs
pop
or
jno
outs
jbe
fsub
jae
pop
dec
js
outs
jbe
shr
rcr
arpl
cmp
and
bswap
ja
outs
jbe
shr
add
iret
aaa
jg
outs
jbe
shr
icebp
shl
jle
aas
jo
shr
jno
pusha
jbe
mov
aaa
jg
outs
jbe
shl
jle
pop
jo
shl
loope
iret
aaa
jg
outs
jbe
shr
jno
push
jle
sub
inc
clc
mov
push
mov
mov
inc
mov
fcom
push
shl
outs
jbe
shr
xor
mov
mov
outs
jbe
shr
jno
outs
jbe
ror
aaa
jnp
outs
jbe
xlat
out
pop
jg
outs
jbe
shr
jno
outs
jbe
jno
or
outs
jbe
shr
adc
cmp
jo
outs
jbe
shr
and
outs
jbe
jno
enter
jbe
fisubr
jno
invd
ja
outs
jbe
fisubr
jno
das
call
jno
outs
jbe
(bad)
data16
or
push
ror
dec
js
inc
pop
out
push
push
fdiv
cdq
pop
inc
call
or
sbb
inc
dec
sub
adc
inc
pop
dec
test
inc
pop
repz
call
pop
inc
mov
adc
cs
das
ja
jne
test
outs
int3
jo
dec
test
lock
outs
jle
mov
out
test
xor
xor
ja
dec
dec
ja
dec
dec
ja
dec
scas
in
add
dec
mov
(bad)
dec
dec
ja
dec
outs
jbe
dec
jg
cld
cmp
inc
cld
out
inc
dec
jl
into
push
mov
or
retf
dec
sub
outs
sahf
add
adc
mov
push
or
pop
jg
or
push
dec
nop
dec
imul
aaa
or
and
ins
push
jecxz
sbb
inc
daa
inc
push
mov
xchg
xchg
xor
sbb
cmp
inc
cld
out
jbe
sbb
int
mov
jb
loop
jmp
mov
push
jl
into
inc
mov
idiv
jbe
xchg
cmc
xor
std
mov
js
sbb
jbe
sbb
jmp
jne
cmp
mov
adc
push
call
adc
sub
xchg
ret
pushf
int3
imul
add
dec
jbe
push
adc
(bad)
mov
int
cmp
sub
push
ror
(bad)
mov
cdq
adc
ret
int
push
xchg
cmp
test
enter
xchg
icebp
movs
or
and
mov
mov
iret
int
jbe
dec
push
xor
mov
push
test
mov
int3
cmps
fldenv
in
aam
rcr
mov
(bad)
pop
not
and
xchg
xchg
pop
leave
add
movs
lea
scas
jg
out
das
pop
fstp
pushf
adc
jmp
or
call
iret
sbb
out
pushf
mov
push
cmp
cmp
out
pushf
adc
fsub
push
or
out
pushf
mov
xor
ret
fnstcw
out
pushf
adc
in
pushf
and
ret
sbb
and
mov
nop
or
pushf
and
(bad)
mov
adc
out
fst
movs
out
jp
xchg
std
sbb
(bad)
jle
sub
imul
out
pushf
adc
test
pop
push
sbb
out
pushf
loopne
test
pop
push
cmp
out
pushf
adc
test
pop
push
cmp
out
pushf
adc
test
pop
push
cmp
out
pushf
adc
out
pushf
shr
push
es
(bad)
movs
sbb
out
pushf
adc
push
arpl
cmp
and
push
or
out
pushf
push
or
pushf
shr
pop
push
int
call
out
pushf
jo
jmp
push
cdq
dec
push
movs
sbb
out
pushf
and
call
add
cmp
out
pushf
mov
(bad)
es
jb
movs
fnstcw
jno
test
lods
das
pop
push
or
in
and
enter
imul
or
out
pushf
and
or
mov
je
movs
sbb
and
mov
adc
push
mov
(bad)
jnp
pop
inc
mov
pushf
adc
loopne
sar
and
push
cmps
test
adc
mov
and
jg
sbb
or
pop
rcr
sbb
(bad)
mul
adc
or
and
cs
(bad)
jmp
lods
das
enter
xchg
rcl
test
sbb
or
mov
sub
shl
push
mov
out
pushf
rol
xchg
jmp
lods
scas
shl
aad
out
movs
sub
fisub
cmp
push
lods
cmp
sub
sub
addr16
int
pushf
adc
ins
jge
lods
(bad)
mov
pusha
add
fst
or
in
rol
hlt
cwde
shl
movs
sbb
out
pushf
mov
xchg
fsub
pop
int
pushf
adc
out
pushf
jo
pusha
jo
cmp
pop
push
lods
pop
mov
cs
ins
std
sbb
out
pushf
adc
pushf
lock
nop
ja
cmp
pop
mov
mov
movs
sbb
jmp
(bad)
mov
fbld
adc
jecxz
sar
and
sbb
jecxz
imul
rcr
shl
movs
sbb
out
pushf
and
jmp
pop
out
xchg
jmp
shl
es
lods
sub
or
and
sub
mov
jecxz
cmp
out
pushf
and
add
xchg
fiadd
lods
ret
sub
fisub
scas
retf
sub
das
out
sbb
out
mov
data16
and
cmp
movs
fldcw
push
jbe
fnstenv
mov
fbld
and
jmp
pop
imul
ror
add
cs
push
loope
and
mov
or
cmp
out
pushf
mov
int
pop
push
or
out
pushf
mov
retf
and
ins
xchg
fldpi
pop
push
les
repnz
lods
mov
mov
sub
push
cmps
retf
add
in
adc
stos
sbb
out
pushf
lock
retf
sub
mov
jbe
stc
cmp
mov
imul
(bad)
mov
mov
std
retf
sub
movs
sbb
out
pushf
xor
loopne
jo
ret
sti
and
xor
cli
ror
sub
push
push
lds
sbb
or
loop
sar
es
out
es
mov
xchg
fsub
pop
int
pushf
adc
imul
push
or
jecxz
adc
out
pushf
adc
add
adc
out
pushf
nop
or
jmp
adc
out
pushf
adc
loope
pop
push
inc
xor
nop
or
pushf
shr
push
push
int
pushf
adc
out
pushf
mov
cmp
sbb
or
out
pushf
jo
loop
sar
pop
push
or
out
pushf
and
out
and
adc
lock
jmp
and
(bad)
sbb
or
pushf
and
fst
dec
out
pushf
adc
out
pushf
inc
add
and
pop
sbb
or
out
adc
out
pushf
adc
in
pushf
and
add
lods
das
pop
push
or
out
pushf
lock
pushf
mov
movs
shld
or
jmp
sti
(bad)
cmp
fldcw
or
les
sbb
out
pushf
loopne
out
sbb
test
std
sbb
movs
mov
mov
and
movs
sbb
loopne
daa
je
std
sbb
movs
stc
je
ja
push
arpl
pop
int
call
out
pushf
mov
or
out
sbb
or
out
pushf
ror
or
dec
ret
daa
stos
sub
add
jge
and
test
pushf
adc
and
jmp
pop
push
or
out
pushf
adc
mov
dec
(bad)
sub
pop
ins
das
pop
push
or
out
pushf
push
or
pushf
and
in
bound
data16
aaa
es
pusha
(bad)
call
cmp
mov
mov
enter
jg
mov
jns
sbb
shl
dec
mov
dec
dec
ja
dec
dec
ja
dec
(bad)
js
jbe
das
xor
cmps
jne
dec
ja
dec
(bad)
js
jo
and
push
inc
inc
mov
out
jo
dec
pop
hlt
(bad)
pop
repnz
jle
inc
jnp
scas
lods
(bad)
int3
mov
dec
pop
js
je
mov
mov
push
jno
outs
scas
jno
jne
pop
mov
(bad)
fadd
jo
xchg
xchg
addr16
mov
push
mov
ja
sahf
jmp
and
inc
test
cld
js
dec
sbb
int
or
mov
adc
or
sub
mov
loopne
iret
cwde
jne
ds
bound
lock
inc
ja
mov
enter
outs
jb
jne
sub
es
mov
fnsave
js
mov
xchg
push
jge
or
(bad)
xor
ror
adc
sbb
mov
int
cdq
xchg
imul
jae
int
fadd
dec
data16
test
adc
push
mov
adc
mov
inc
(bad)
nop
mov
mov
std
pusha
pop
jae
jle
jo
stc
xchg
js
fdivr
inc
and
dec
jbe
cmps
(bad)
retf
add
jae
shl
test
adc
fnstsw
jle
call
in
jle
in
and
mov
ja
jns
ins
cmps
mov
ins
xor
dec
mov
(bad)
ror
inc
neg
in
mov
mov
mov
fild
and
pop
int
dec
imul
jle
jo
imul
outs
data16
imul
imul
mov
pop
(bad)
(bad)
fwait
rol
xchg
stos
sub
mov
and
xchg
push
dec
(bad)
out
or
sti
and
stos
sbb
mov
sub
ret
pop
mov
sub
mov
ins
sub
int3
stos
sbb
mov
mov
(bad)
stos
sbb
mov
sub
xchg
and
dec
fcomi
push
rcl
xchg
add
enter
xchg
pushf
mov
(bad)
stos
sbb
and
pop
(bad)
xchg
add
fsubr
sub
mov
cs
inc
add
(bad)
push
and
mov
sub
push
cs
jne
aas
xchg
dec
adc
xchg
adc
pushf
scas
sub
mov
sub
push
mov
mov
sub
add
mov
mul
sub
push
mov
mov
sub
ret
pushf
scas
sbb
loop
pop
(bad)
xchg
inc
or
adc
xlat
cwde
inc
sti
adc
jo
mov
imul
inc
cmp
push
in
sbb
nop
clc
adc
outs
ret
mov
(bad)
dec
jp
pushf
jo
dec
mov
pusha
jbe
cld
popa
jbe
ins
popa
jbe
fdivr
dec
dec
jnp
inc
xchg
test
mov
je
scas
xor
jbe
jl
inc
inc
aaa
ds
mov
jle
and
out
cmp
ja
test
add
into
test
push
cmps
scas
pop
loope
outs
jle
pop
movs
aas
in
add
inc
push
ins
outs
(bad)
loope
xchg
xchg
fwait
cmp
cmps
sbb
into
sar
test
push
jns
mov
or
mov
jp
je
jb
addr16
arpl
inc
std
cmp
xor
mov
jmp
sahf
cmps
rcl
jbe
dec
sbb
pop
lock
jp
fst
adc
xor
call
xor
call
int
fcom
fst
or
cmp
mov
out
mul
xor
jns
addr16
fsubr
and
pop
inc
test
enter
cmps
push
(bad)
or
ins
jnp
dec
es
dec
ret
pop
iret
js
jl
inc
inc
xor
or
xlat
mov
dec
(bad)
xor
out
int3
inc
dec
push
xor
xchg
and
out
dec
mov
(bad)
ds
mov
outs
out
adc
scas
mov
xchg
push
outs
mov
inc
repnz
push
mov
pop
test
pop
lds
test
lahf
loope
nop
adc
pop
test
sub
adc
cld
mov
push
data16
mov
adc
das
mov
sbb
pop
test
fadd
sub
shl
jb
jge
sub
daa
in
mov
sbb
mov
fwait
xchg
cmp
mov
push
xor
jle
cld
jl
inc
test
ja
dec
scas
jbe
dec
jg
dec
push
jp
test
ja
dec
dec
ja
dec
dec
ja
dec
jg
mov
inc
test
ja
dec
(bad)
jle
jl
dec
test
ja
dec
dec
ja
dec
jg
mov
jo
inc
mov
dec
ja
dec
dec
ja
dec
push
sub
mov
(bad)
dec
dec
ja
dec
dec
ja
dec
outs
out
mov
and
mov
adc
mov
dec
ja
dec
dec
ja
dec
(bad)
jle
(bad)
jns
mov
sub
mov
dec
ja
dec
dec
not
hlt
inc
ja
dec
jg
adc
dec
dec
ja
dec
dec
ja
dec
(bad)
mov
mov
sbb
dec
ja
dec
pop
js
dec
dec
xlat
aad
dec
ja
dec
das
jp
push
dec
xchg
dec
dec
ja
dec
scas
jbe
jbe
adc
and
inc
(bad)
jns
add
dec
dec
ja
dec
push
dec
into
mov
daa
inc
pop
inc
dec
dec
ja
dec
das
jnp
leave
dec
inc
mov
out
jbe
dec
dec
addr16
dec
ja
dec
scas
jbe
dec
call
or
cmps
jecxz
xchg
cmp
inc
inc
mov
dec
ja
dec
dec
ja
dec
(bad)
jno
clc
sub
pop
mov
or
sbb
inc
test
ja
dec
dec
ja
dec
das
jnp
leave
dec
inc
mov
(bad)
mov
(bad)
dec
dec
ja
dec
dec
ja
dec
scas
jnp
sub
imul
dec
outs
jle
xchg
jo
not
mov
ja
dec
(bad)
mov
(bad)
dec
dec
ja
dec
push
dec
jg
xchg
cmp
ja
dec
dec
ja
dec
lahf
rcl
js
mov
dec
dec
ja
dec
dec
ja
dec
lahf
xor
mov
es
mov
dec
(bad)
mov
dec
ja
dec
dec
ja
dec
dec
ja
js
ja
dec
dec
ja
dec
iret
jbe
dec
mov
mov
scas
loopne
rol
das
push
mov
ret
lahf
jns
mov
inc
mov
(bad)
mov
(bad)
adc
lahf
jns
mov
inc
mov
dec
ja
dec
aas
jno
sub
jp
jns
test
nop
xchg
sar
inc
inc
jg
inc
(bad)
in
inc
ja
dec
dec
ja
dec
(bad)
jno
clc
jns
int3
fdivr
dec
xor
inc
lds
ja
dec
jg
xor
into
lods
js
mov
xchg
xchg
xor
mov
inc
inc
test
ja
dec
dec
ja
dec
das
jbe
test
sbb
xchg
or
dec
ja
dec
dec
ja
js
ja
dec
dec
ja
dec
jg
mov
(bad)
mov
test
ja
dec
lahf
jno
mov
pushw
or
sub
cmp
adc
mov
dec
ja
dec
scas
jne
dec
mov
jae
into
mov
(bad)
inc
dec
ja
dec
dec
ja
dec
lahf
icebp
push
mov
dec
ja
dec
dec
ja
dec
(bad)
jg
jmp
dec
ja
dec
out
jg
leave
dec
not
mov
ja
dec
(bad)
mov
(bad)
dec
dec
ja
dec
scas
jnp
sub
imul
dec
outs
jle
xchg
jo
not
mov
ja
dec
(bad)
jno
jl
mov
(bad)
dec
push
dec
jg
jne
inc
ja
dec
dec
ja
dec
lahf
rcl
js
mov
dec
dec
ja
dec
das
jbe
or
dec
test
not
hlt
inc
ja
dec
dec
ja
dec
dec
ja
js
ja
dec
dec
ja
dec
iret
jbe
dec
mov
mov
scas
loopne
rol
das
push
mov
ret
lahf
jns
mov
inc
mov
dec
ja
dec
(bad)
mov
(bad)
adc
lahf
jns
mov
inc
mov
dec
ja
dec
dec
ja
dec
aas
jno
sub
jp
jns
test
nop
xchg
sar
inc
inc
jg
inc
(bad)
in
inc
ja
dec
dec
ja
dec
dec
jbe
dec
aas
(bad)
ja
jbe
xor
ins
fwait
dec
inc
mov
dec
ja
dec
jg
xor
into
lods
js
mov
xchg
xchg
xor
mov
inc
inc
test
ja
dec
dec
ja
dec
das
jbe
test
sbb
xchg
or
dec
ja
dec
dec
ja
js
ja
dec
jg
mov
(bad)
mov
test
ja
dec
dec
ja
dec
lahf
jno
mov
pop
or
sub
cmp
adc
mov
scas
jne
dec
mov
jae
fisubr
sub
sbb
(bad)
mov
iret
jbe
dec
dec
inc
mov
dec
ja
dec
das
jg
test
add
dec
dec
ja
dec
push
dec
into
mov
push
mov
xor
dec
dec
ja
dec
(bad)
xor
dec
dec
ja
dec
dec
ja
dec
pop
repnz
repz
pushf
mov
xchg
inc
sahf
jns
mov
inc
mov
dec
ja
dec
dec
ja
dec
scas
jne
outs
dec
pop
test
ja
dec
dec
ja
dec
dec
xlat
aad
dec
ja
dec
dec
ja
dec
iret
jbe
dec
dec
xchg
inc
inc
dec
ja
dec
dec
not
inc
ja
dec
mov
cmps
jne
dec
ja
dec
out
jo
dec
jg
xchg
jo
into
ins
cmps
dec
inc
mov
dec
ja
dec
mov
(bad)
aam
ja
sbb
test
jle
jl
leave
inc
mov
pop
add
dec
dec
ja
dec
dec
test
dec
scas
test
jmp
add
mov
mov
(bad)
(bad)
cdq
xor
js
mov
test
ja
dec
dec
ja
dec
lahf
xor
cmp
jl
inc
inc
test
ja
dec
lahf
xchg
sar
mov
and
xchg
add
lock
test
ja
dec
dec
ja
dec
(bad)
jle
(bad)
jns
pop
popa
test
jle
jl
dec
inc
test
ja
dec
scas
jbe
dec
(bad)
adc
sahf
mov
enter
add
dec
dec
ja
dec
dec
test
dec
iret
inc
jg
inc
(bad)
in
inc
ja
dec
dec
ja
dec
jg
cmp
inc
inc
test
ja
dec
scas
jne
dec
mov
ins
(bad)
xchg
adc
mov
dec
jle
dec
(bad)
adc
sahf
stc
mov
test
cmps
jne
dec
ja
dec
dec
ja
dec
jg
cmp
mov
inc
mov
dec
ja
dec
iret
jl
dec
(bad)
xchg
inc
sahf
dec
mov
aad
inc
ja
dec
mov
stos
je
dec
not
hlt
inc
ja
dec
iret
jbe
dec
dec
inc
mov
jg
mov
(bad)
mov
test
ja
dec
dec
ja
dec
push
dec
outs
mov
inc
sahf
cmp
lea
sbb
outs
js
dec
lahf
icebp
push
mov
dec
ja
dec
(bad)
(bad)
push
je
popa
repz
stc
mov
mov
dec
ja
dec
jg
mov
inc
test
ja
dec
das
cli
pop
ror
dec
dec
ja
dec
(bad)
jno
jl
mov
(bad)
dec
dec
ja
dec
iret
jbe
dec
aas
pop
pop
push
mov
jmp
je
inc
not
hlt
inc
ja
dec
dec
ja
dec
dec
ja
js
ja
dec
jg
mov
(bad)
mov
test
ja
dec
dec
ja
dec
aas
jns
(bad)
cmp
xor
dec
jg
mov
jo
ja
dec
dec
ja
dec
outs
jl
leave
dec
not
xor
ja
dec
dec
ja
dec
(bad)
mov
(bad)
dec
dec
ja
dec
dec
ja
dec
jg
pop
push
mov
jmp
jg
inc
(bad)
in
inc
ja
dec
(bad)
jno
dec
das
pop
add
inc
ja
dec
dec
ja
dec
dec
ja
dec
jg
test
mov
jo
shl
daa
test
ja
dec
dec
ja
dec
das
jp
or
mov
inc
mov
dec
ja
dec
mov
inc
pop
sub
dec
jae
loope
fadd
inc
daa
test
ja
dec
dec
ja
dec
dec
not
je
ja
dec
mov
ja
dec
dec
jle
jmp
dec
ja
dec
pop
repnz
jae
mov
retf
inc
dec
jg
inc
daa
in
inc
ja
dec
dec
ja
dec
outs
jo
jle
mov
dec
dec
ja
dec
scas
jge
imul
pop
imul
or
dec
add
lods
push
mov
rcr
or
stc
popa
xlat
aad
call
into
jnp
add
lds
mov
cmp
sbb
lods
in
mov
mov
jb
js
ins
js
dec
sbb
(bad)
inc
mov
sbb
jo
inc
mov
out
inc
mov
add
push
add
push
add
out
add
cs
xor
bound
out
sub
sub
(bad)
out
sbb
push
imul
pusha
call
xor
loope
jecxz
jecxz
mov
int
(bad)
lock
mov
popa
add
dec
lods
or
jns
cmp
adc
and
mov
(bad)
jns
xchg
jo
jo
ds
jno
int3
js
jl
fimul
jnp
xlat
cmp
int
outs
xchg
std
adc
int
mul
sbb
inc
mov
push
xlat
inc
mov
or
into
inc
aaa
dec
sahf
and
jle
and
dec
fimul
sub
out
dec
mov
(bad)
cmp
dec
out
aam
sub
loopne
mov
(bad)
fnstenv
mov
xor
pop
leave
mov
std
or
add
loope
push
mov
ret
mov
ret
mov
ret
or
add
mov
ret
mov
and
or
mov
ret
mov
mov
loope
iret
mov
ret
mov
ret
mov
ret
sub
or
mov
push
xchg
xor
scas
stc
adc
in
mov
arpl
ror
mov
mov
cmp
ret
mov
jae
rcr
mov
ret
mov
ret
mov
add
cmc
xchg
in
mov
ret
mov
mov
pop
popa
or
push
ins
retf
cmp
ss
or
mov
push
mov
ret
mov
or
sbb
mov
ret
mov
repz
fs
test
mov
in
mov
push
xchg
jae
cmps
ins
jge
or
vsqrtps
ret
mov
ret
mov
ror
lds
popa
or
mov
or
stos
inc
mov
test
stc
in
xchg
mov
inc
popa
jmp
fwait
push
mov
movs
or
mov
vfrczpd
dec
mov
(bad)
dec
dec
ja
dec
fistp
dec
pop
jbe
pop
or
jns
adc
dec
dec
ja
dec
dec
ja
dec
dec
xlat
aad
dec
ja
dec
dec
ja
dec
(bad)
jno
clc
sub
ret
add
mov
inc
mov
dec
ja
dec
jg
sbb
stos
dec
and
inc
mov
dec
dec
ja
dec
dec
ja
dec
scas
jns
imul
cmp
(bad)
je
jae
icebp
mov
test
ja
dec
dec
ja
dec
das
jns
mov
inc
jg
inc
(bad)
in
inc
ja
dec
jg
sbb
jg
mov
jo
mov
dec
sub
xchg
das
inc
daa
in
inc
ja
dec
dec
ja
dec
out
jbe
dec
dec
pop
lds
ja
dec
fistp
jns
ret
jae
adc
test
ja
dec
dec
ja
dec
iret
jbe
stc
inc
xchg
test
ja
dec
dec
xlat
add
dec
dec
ja
dec
scas
jnp
leave
dec
(bad)
mov
dec
ja
dec
dec
ja
dec
aas
jle
clc
inc
ja
dec
dec
ja
dec
dec
ja
dec
pop
fidiv
stc
add
jno
adc
mov
test
ja
dec
jg
pop
mov
mov
call
xor
inc
mov
dec
ja
dec
dec
ja
dec
push
das
icebp
mov
test
ja
dec
das
jo
leave
jle
lods
cmp
dec
mov
sbb
push
pop
dec
xor
dec
ja
dec
dec
jbe
dec
jg
and
mov
adc
mov
and
pushf
cmp
adc
jns
jg
(bad)
jbe
mov
test
jp
pop
jl
dec
test
ja
dec
das
jp
leave
dec
inc
mov
dec
ja
dec
pop
js
dec
(bad)
xor
dec
dec
ja
dec
dec
ja
dec
jg
movs
jl
push
pop
xrelease
lock
xchg
jo
std
(bad)
nop
pop
mov
pusha
scas
xor
or
sbb
out
stos
inc
lods
dec
jmp
xor
mov
hlt
movs
sub
outs
sahf
push
adc
or
or
fisub
adc
rol
into
rcl
ror
jecxz
(bad)
ret
clc
sub
int
mov
cs
jp
cld
js
inc
mov
int
cmp
jns
sbb
pop
inc
test
cwde
jne
ds
ja
push
jmp
jno
addr16
shl
mov
mov
in
inc
fiadd
sub
iret
js
and
int
xchg
jno
add
jno
movs
adc
jb
xor
ret
jns
or
stos
dec
or
retf
inc
mov
pop
je
sub
outs
and
mov
cdq
xor
dec
mov
(bad)
ds
(bad)
mov
ins
cmp
es
imul
fdiv
iret
mov
loop
sbb
into
push
pop
ja
inc
ss
iret
loop
iret
push
mov
fild
xor
cdq
push
dec
mov
sub
(bad)
stos
sub
(bad)
stos
and
mov
test
leave
(bad)
sub
(bad)
dec
cmp
stos
sub
(bad)
cli
daa
push
mov
mov
scas
pop
and
pusha
pop
stos
cwde
leave
(bad)
cli
daa
enter
jns
mov
sub
(bad)
stos
sub
(bad)
(bad)
adc
dec
mov
sub
(bad)
stos
sub
(bad)
sub
lds
stos
sub
(bad)
stos
sub
(bad)
sub
int
and
dec
stc
fisubr
sub
(bad)
jmp
out
mov
das
rcl
ror
cmps
sub
(bad)
stos
sub
(bad)
stos
sub
(bad)
push
(bad)
jecxz
call
leave
(bad)
sbb
mov
arpl
add
or
jmp
inc
nop
add
sbb
mov
arpl
sbb
pushf
and
jae
jo
jp
jg
in
test
inc
add
dec
mov
dec
dec
ja
dec
pop
jb
test
add
aad
inc
ja
dec
iret
jbe
dec
dec
xchg
inc
inc
dec
ja
dec
dec
ja
dec
jg
mov
sub
mov
out
jo
dec
jg
mov
fisubr
dec
xchg
mov
(bad)
mov
outs
into
mov
mov
xchg
dec
dec
ja
dec
dec
ja
or
mov
dec
ja
dec
iret
jo
dec
dec
cmps
xor
dec
outs
jb
outs
pop
loop
ror
dec
dec
ja
dec
aas
jg
test
jnp
test
(bad)
jne
dec
ja
dec
dec
jbe
ins
cmps
ret
shl
jo
push
mov
dec
out
inc
dec
ja
dec
dec
ja
dec
dec
out
inc
dec
ja
dec
dec
(bad)
cmc
inc
dec
ja
dec
dec
ja
dec
dec
(bad)
in
dec
ja
dec
dec
ja
dec
pop
jb
dec
pop
pop
xor
leave
retf
jns
jae
test
mov
dec
pop
add
dec
dec
ja
dec
pop
jae
dec
inc
out
inc
dec
ja
dec
dec
ja
dec
mov
data16
inc
daa
mov
dec
ja
dec
dec
ja
dec
pop
jp
pop
jnp
xchg
mov
xchg
dec
loopne
mov
dec
fistp
sbb
add
movs
ret
push
and
mov
je
outs
aam
jbe
or
(bad)
inc
aaa
ds
inc
jnp
arpl
dec
mov
xor
iret
int
ja
stc
push
adc
into
in
jbe
inc
and
es
iret
ins
add
test
popf
pop
arpl
data16
idiv
in
and
cmps
jg
retf
aam
jo
mov
fimul
stc
push
jbe
dec
rol
jmp
jle
das
jbe
ins
js
dec
cmp
push
pop
iret
int
xchg
scas
jns
sbb
mov
and
inc
data16
dec
jns
inc
cmp
cdq
rol
jo
ds
icebp
sub
push
mov
shl
add
jo
pushf
jno
inc
cmp
sbb
in
cwde
jne
ds
mov
fucomip
movs
cmp
(bad)
lock
push
push
lock
jg
or
stos
sbb
pop
jg
out
lds
xor
jmp
xlat
cmps
xor
int3
push
repnz
dec
into
add
xadd
jecxz
int
repnz
fst
in
ret
jo
cmp
outs
mov
retf
in
sub
mov
(bad)
cmp
xchg
or
imul
sbb
mul
out
ins
xlat
mov
fucomi
out
dec
push
pop
out
ins
xlat
scas
out
ja
out
ins
xlat
stos
out
xchg
ret
in
jg
sub
ret
out
cdq
iret
push
mov
ret
out
cdq
pop
imul
pop
scas
mov
and
jns
pshufd
inc
retf
dec
int3
cld
xchg
xor
push
mov
or
xchg
dec
leave
jne
icebp
test
loope
and
cmp
loope
outs
into
popa
ror
in
je
inc
call
jle
sbb
and
mov
scas
test
push
cmc
adc
das
jb
cmp
adc
aaa
jle
in
arpl
jmp
(bad)
and
test
inc
xor
mov
fnstenv
mov
cli
and
scas
out
inc
mov
add
dec
into
add
xor
icebp
loopne
or
sbb
ja
or
mov
test
test
sbb
inc
xor
(bad)
xchg
and
lock
inc
mov
inc
pop
iret
mov
jae
cdq
mov
fidiv
mov
loop
add
aad
scas
js
(bad)
jge
out
int3
mov
inc
cmp
adc
in
mov
mov
mov
add
add
xchg
pop
out
ror
lahf
pop
and
sub
in
stos
add
in
loopne
(bad)
mov
jb
mov
mov
(bad)
jns
xchg
jo
clc
arpl
xor
mov
dec
icebp
pop
push
jle
add
mov
or
sbb
je
mov
dec
xor
cmp
ja
(bad)
loop
in
sbb
add
mov
dec
inc
(bad)
or
ret
ds
addr16
das
mov
(bad)
mov
into
rcl
popf
iret
jb
into
das
inc
xlat
fsubr
xor
pop
ret
outs
and
pop
loop
pop
pop
shl
or
sahf
sub
(bad)
outs
dec
lock
mov
push
xchg
xor
dec
ret
mov
jno
fnstsw
movs
int3
iret
push
push
lods
das
jae
outs
ins
ret
lahf
(bad)
hlt
outs
jge
adc
iret
out
ret
das
mov
outs
out
inc
(bad)
sbb
inc
hlt
mov
dec
loop
jl
shl
sti
out
outs
outs
and
ret
or
sahf
sub
(bad)
outs
dec
lock
mov
push
cmps
xor
dec
ret
mov
jno
fistp
cmps
int3
iret
push
push
lods
das
jae
outs
ins
ret
lahf
(bad)
hlt
outs
jge
adc
iret
out
ret
das
mov
outs
out
inc
pop
ins
iret
adc
subps
(bad)
adc
(bad)
data16
xchg
imul
lds
jge
push
fmul
jbe
pushf
lods
xor
inc
mov
pop
cmc
add
add
mov
add
(bad)
aad
adc
test
mov
xor
xor
push
mov
pop
cmc
add
add
out
mov
sahf
or
test
pop
adc
call
push
xchg
jp
push
add
inc
std
jnp
or
mov
mov
jns
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
outs
loope
jb
pushf
nop
push
dec
mov
js
push
and
xchg
stos
aaa
pop
ja
xor
ins
push
push
ret
sbb
lock
jns
test
pop
mov
outs
jle
fs
dec
pop
mov
iret
fld
aas
or
fs
jns
cmp
sub
int
cmp
cmp
call
jbe
or
cmp
loopne
push
xor
xchg
mov
cs
mov
(bad)
int
dec
iret
cmp
call
dec
xchg
aas
pop
pop
jb
ror
adc
int
loop
jns
sbb
jp
(bad)
ror
add
sub
and
xchg
and
leave
enter
loop
mov
inc
stc
(bad)
int
or
int
or
mov
in
inc
icebp
retf
nop
mov
jbe
sub
outs
test
mov
ss
mov
jp
arpl
mov
jl
ficom
out
popa
aaa
das
jns
xchg
add
jle
idiv
std
push
inc
mov
add
in
lock
mov
je
sub
outs
xchg
lods
or
out
sbb
cdq
dec
and
mov
(bad)
fptan
loope
in
inc
mov
jns
pushf
lock
xor
(bad)
mov
xchg
dec
(bad)
sub
hlt
call
xchg
pop
imul
xchg
stc
loope
(bad)
inc
ficom
add
je
and
test
and
xchg
stc
add
xchg
stc
add
xchg
stc
loope
xor
xchg
ficom
add
xchg
stc
add
movs
stc
add
xchg
imul
mov
add
movs
call
fcom
ficom
add
xchg
stc
add
xchg
stc
add
xchg
jmp
add
stos
inc
fadd
sti
add
imul
xchg
stc
add
xchg
stc
add
xchg
stc
add
xchg
test
or
lods
sar
lods
xor
add
fsub
jns
pop
adc
push
out
sar
lods
xor
jecxz
jmp
adc
(bad)
cmp
lods
push
aaa
out
lods
inc
or
mov
leave
cmp
lods
lock
ficom
add
xor
repnz
push
out
sar
lods
push
cmp
lods
ret
mov
nop
leave
cmp
lods
push
aaa
jmp
or
adc
daa
ficom
push
out
sar
lods
jo
jmp
cmp
lods
sar
lods
lock
(bad)
xchg
stc
add
xchg
test
icebp
mov
int
out
sar
lods
sar
lods
lock
out
sar
lods
push
aaa
jmp
or
adc
daa
ficom
push
out
sar
lods
sar
lods
lock
push
cdq
int
out
sar
lods
lock
(bad)
xchg
stc
add
xchg
test
icebp
mov
int
out
lock
lods
ret
push
out
jo
out
lock
xchg
stc
adc
out
sar
lods
mov
xor
lods
sar
lods
sar
lods
nop
(bad)
or
retf
nop
stc
push
or
out
jne
or
ror
movs
sar
lods
pusha
mov
and
or
movs
sar
lods
sar
lods
and
xchg
cs
mov
out
sar
lods
sar
lods
lock
add
or
xchg
leave
cmp
lods
sar
lods
lock
lods
nop
icebp
ss
outs
xor
xchg
sar
lods
sar
lods
lock
ficom
cmp
lods
nop
xor
dec
clc
test
nop
imul
xlat
xchg
leave
cmp
lods
sar
lods
sar
lods
inc
ds
sar
lods
nop
cmp
lods
cmps
xchg
ins
adc
gs
dec
leave
mov
nop
leave
cmp
lods
cmp
hlt
hlt
add
xchg
leave
or
lods
sar
lods
sar
lods
sar
pop
dec
xor
test
aad
pop
add
(bad)
shl
sbb
mov
push
ds
je
mov
stos
(bad)
pop
xlat
movs
sar
lods
shl
out
sbb
leave
cmp
lods
sar
lods
xor
out
lock
xlat
movs
sar
lods
sar
lods
and
in
sub
int
out
sar
lods
sar
lods
lock
fidiv
cmp
lods
inc
cmp
fcomi
aad
test
out
sar
lods
shl
lods
lock
hlt
test
mov
movs
sar
lods
mov
loope
cdq
int
mov
hlt
ret
in
leave
cmp
lods
sar
lods
nop
xor
cmps
mov
mov
loop
call
out
sar
lods
shl
call
sar
lods
cmp
test
cmp
lods
cmp
aam
cmp
lods
sar
lods
lock
adc
or
xchg
leave
cmp
lods
sar
lods
jo
jbe
stc
add
xchg
test
mov
int3
jge
jle
stc
or
or
sar
lods
sar
lods
shl
enter
leave
cmp
lods
sar
lods
lock
xor
test
sar
loope
cdq
lea
mov
leave
cmp
lods
add
out
lods
nop
push
outs
lock
lods
sar
lods
lock
hlt
movs
or
fs
mov
mov
sar
lods
mov
loope
cdq
int
out
sar
lods
jo
or
sar
lods
sar
lods
shl
clc
leave
or
lods
sar
lods
shl
call
sbb
pop
sbb
scas
xchg
les
mov
ret
sahf
popa
call
jecxz
jno
xchg
leave
or
lods
sar
lods
sar
lods
lock
xchg
leave
cmp
lods
sar
lods
nop
aaa
loop
lock
mov
cmp
lods
sar
lods
sar
lods
sar
(bad)
into
push
out
sar
lods
add
mov
sar
lods
pusha
cmp
std
iret
call
out
sar
lods
shl
out
lds
mov
leave
or
hlt
inc
scas
clc
leave
or
lods
sar
lods
shl
call
sbb
inc
cmp
sbb
mov
push
outs
nop
rol
xor
adc
dec
retf
nop
leave
cmp
lods
xor
nop
repnz
sar
lods
sar
lods
lock
out
sar
lods
sar
lods
jo
js
stc
inc
push
cdq
ins
lock
add
inc
icebp
popa
out
out
xor
movs
inc
mov
les
add
mov
leave
cmp
lods
sar
lods
add
in
lods
lock
ficom
inc
add
mov
leave
cmp
lods
sar
lods
loopne
dec
dec
dec
or
push
cmps
push
out
xchg
ror
lods
inc
cmp
lods
lock
sbb
or
lods
sar
lods
pusha
cmp
lods
lock
xchg
leave
cmp
lods
mov
out
jbe
or
or
movs
sar
lods
sar
lods
and
out
lods
stc
mov
scas
call
sar
lods
shl
jmp
movs
jb
dec
icebp
popa
out
out
xor
movs
inc
mov
leave
cwde
xlat
nop
leave
cmp
lods
sar
lods
add
(bad)
jbe
stc
add
xchg
test
mov
int3
jge
jle
stc
or
or
or
movs
sar
lods
sar
lods
shl
enter
leave
cmp
lods
sar
lods
sar
lods
lock
int
out
lock
cmp
add
das
retf
sub
mov
(bad)
retf
nop
test
mov
xchg
lods
pusha
fisub
jno
test
cmp
lods
sar
lods
jo
mov
div
out
sar
lods
inc
push
out
inc
call
xchg
retf
cmp
lods
cmp
popa
div
cmps
test
cmp
lods
inc
cmp
ins
int3
or
lods
sar
lods
shl
lods
lock
sub
dec
das
cmc
iret
push
out
sar
lods
xor
add
cmp
lods
sar
lods
cmp
mov
pop
mov
(bad)
into
mov
out
nop
cmp
mov
jae
popa
push
cdq
int
out
sar
lods
sar
lods
rol
pop
xchg
test
icebp
cmps
test
cmp
lods
jo
jecxz
jg
fst
std
adc
out
sar
lods
sar
lods
lock
xor
sbb
xchg
test
add
inc
icebp
mov
int3
jge
retf
or
movs
sar
lods
nop
or
sahf
retf
or
movs
sar
lods
ror
nop
leave
cmp
lods
sar
lods
push
aaa
in
lods
shl
retf
enter
leave
cmp
lods
sar
lods
add
in
lods
lock
fdivp
les
sub
nop
leave
cmp
lods
sar
lods
cmp
std
movs
add
inc
in
add
test
push
mov
(bad)
jmp
push
mov
test
push
stos
int
and
mov
jne
imul
jo
dec
dec
mov
into
push
mov
push
jl
inc
lahf
pop
imul
and
icebp
imul
div
xor
out
or
clc
dec
mov
int
dec
clc
fnstenv
mov
iret
lods
popf
pusha
(bad)
dec
test
repz
js
pop
sub
(bad)
out
ret
sub
dec
mov
jle
mov
repnz
add
cld
(bad)
dec
pop
pop
xchg
sub
and
dec
jle
sbb
pop
dec
xchg
jmp
jo
int3
cmp
dec
aaa
sbb
scas
test
call
mov
inc
mov
and
lock
dec
xchg
xor
fcmovb
rcr
xchg
jle
icebp
mov
pop
mov
jno
inc
mov
push
sti
int
jne
mov
add
mov
iret
test
push
das
jbe
cmp
xchg
adc
loopne
jl
into
push
xlat
aaa
cmp
mov
push
cld
test
dec
mov
pop
inc
inc
out
out
stos
(bad)
retf
popa
ja
stc
clc
push
mov
mov
vphaddwq
fsubr
jae
jnp
sbb
test
and
mov
(bad)
cdq
icebp
xchg
jne
jae
ins
cmc
cwde
dec
leave
cmc
inc
neg
mov
add
in
adc
mov
js
cmp
jp
or
jp
or
sub
xor
add
mov
jg
xor
inc
mov
sbb
push
fisub
mov
mov
add
aam
adc
loop
xchg
jns
rcl
lea
dec
shl
jne
inc
shl
rol
lea
movs
push
cmp
bound
mov
push
jmp
xchg
ss
in
or
mov
dec
mov
hlt
jmp
xchg
test
and
mov
pop
jbe
jmp
xor
inc
test
out
inc
test
out
inc
test
out
jecxz
xor
inc
xchg
outs
in
xor
mov
ret
mov
in
pop
jmp
mov
add
dec
les
ja
or
jp
push
(bad)
dec
and
imul
xor
inc
test
adc
pop
mov
or
pop
mov
cmp
jae
or
retf
jmp
inc
add
iret
mov
xchg
jmp
jo
or
jp
or
jp
or
loope
mov
add
push
sub
and
pushf
loop
xor
jge
imul
sbb
cmp
call
loop
mov
or
dec
adc
iret
jae
or
jp
or
cli
mov
jo
jle
or
jp
or
jmp
jmp
hlt
dec
das
jbe
or
jp
or
sub
pushf
xor
or
push
(bad)
jne
or
sub
dec
ret
adc
push
cdq
jg
cmp
jp
or
cmp
sbb
jne
or
jp
or
cmp
jns
jne
or
jp
or
cmp
pop
scas
je
or
jp
or
dec
hlt
inc
imul
out
jae
or
jmp
jmp
inc
pop
fs
out
xor
inc
test
push
dec
les
ja
or
jp
or
jp
add
mov
in
pop
jmp
mov
or
pop
mov
cmp
jp
or
jp
push
(bad)
or
cmp
jmp
mov
dec
adc
loope
ja
sahf
ja
cmp
jp
or
jp
or
sbb
das
loope
ja
pop
ja
cmp
jp
or
jp
or
pop
cmp
cld
jge
cmp
jp
or
jp
push
(bad)
push
inc
xchg
jae
or
jp
or
jp
or
cmp
adc
jae
or
jp
or
sbb
adc
les
ja
or
cli
mov
or
jp
or
cmp
(bad)
jp
or
jp
dec
ret
jae
adc
fs
xchg
jae
or
jp
or
jp
or
push
push
xchg
dec
out
xchg
jae
or
jp
or
push
add
jmp
jo
or
jp
or
jp
or
push
mov
adc
and
mov
in
pop
jmp
mov
or
loope
mov
add
inc
shl
dec
test
out
jae
or
jp
or
jp
or
retf
fnstcw
test
call
dec
test
out
jae
or
jp
add
dec
push
pusha
icebp
dec
test
mov
jae
or
jp
or
push
or
pop
cli
fs
test
out
jae
cmp
jp
or
dec
mov
or
cli
mov
or
sub
dec
fistp
or
cmp
push
xchg
aam
sahf
dec
adc
loope
xchg
cmp
jae
or
jp
or
pop
mov
push
pop
mov
xor
mov
mov
mov
mov
dec
push
pusha
icebp
lods
test
mov
jae
or
jp
or
cmp
adc
jae
or
jp
or
jp
or
cmp
adc
jae
or
jp
or
retf
data16
jmp
add
loop
add
out
jae
or
jp
or
dec
mov
(bad)
dec
and
outs
in
xor
sub
inc
sub
push
fidivr
out
inc
xchg
sub
ja
or
jp
or
pop
mov
pop
loop
mov
or
jp
add
mov
in
pop
jmp
mov
or
jmp
mov
in
pop
jmp
mov
dec
mov
mov
jmp
hlt
arpl
and
xor
inc
rol
mov
mov
mov
dec
mov
jmp
(bad)
ret
adc
jo
das
jg
test
sub
xor
jbe
ins
arpl
cmp
data16
retw
stc
mov
mov
outs
scas
push
(bad)
loope
sti
adc
outs
in
jmp
xor
adc
dec
scas
call
push
xor
loope
mov
outs
out
and
mov
inc
jg
out
pusha
jbe
jns
xor
in
js
dec
mov
jmp
push
in
inc
mov
adc
push
mov
cmc
mov
adc
ja
sbb
enter
xchg
add
dec
jge
xchg
dec
es
fisubr
ror
(bad)
mov
into
into
mov
test
push
outs
push
call
pop
fcom
dec
icebp
dec
xchg
js
pushf
add
mov
ficomp
inc
sbb
iret
fdivr
add
sbb
cmp
retf
mov
jae
sub
push
dec
sub
out
cmp
sahf
add
bnd
div
jns
fcom
enter
test
outs
fstp
mov
(bad)
cmps
(bad)
retf
jno
vphaddubq
es
mov
cmps
xchg
dec
or
shr
fsubr
mov
popa
dec
mov
enter
push
inc
mov
imul
push
cmp
cmps
ret
push
mov
and
mov
call
jp
mov
dec
call
fdivr
jns
mov
mov
js
fs
sub
xchg
or
jecxz
push
addr16
ss
pop
out
fidiv
or
jg
jne
jns
mov
jo
inc
xor
je
mov
mov
out
push
sub
xor
add
mov
dec
ja
dec
dec
ja
dec
push
test
mov
dec
ja
dec
dec
ja
dec
call
jae
inc
mov
xor
mov
(bad)
hlt
retf
daa
mov
int
outs
cmc
leave
rol
ins
jo
or
mov
push
xchg
nop
dec
ins
xor
jne
ss
ds
test
ror
xor
je
xchg
(bad)
arpl
jle
sbb
mov
xor
into
ror
xor
mov
out
in
inc
xor
push
(bad)
xor
jo
inc
mov
adc
mov
std
jo
or
jecxz
(bad)
cmp
(bad)
loope
sti
out
icebp
in
inc
into
push
(bad)
icebp
jo
fwait
js
dec
or
pusha
iret
cmp
adc
cmp
jb
pop
jle
cld
xor
aad
mov
loop
jg
mov
mov
aam
pusha
xlat
xchg
cmp
cmp
and
jns
sbb
js
daa
imul
sbb
inc
xor
rol
shr
mov
jmp
pop
into
cmp
fisubr
push
out
cwde
out
xchg
jnp
sahf
sbb
mov
jbe
cmp
aam
ror
mov
(bad)
cmc
data16
inc
and
xchg
icebp
(bad)
jno
loope
inc
add
jns
xor
pop
ins
movs
hlt
mov
sub
push
push
adc
pop
pop
aaa
mov
dec
loope
xor
fidiv
rcl
test
add
inc
and
loope
xor
xor
icebp
(bad)
jno
in
inc
shl
mov
pop
mov
mov
mov
(bad)
ja
(bad)
idiv
mov
(bad)
ds
sahf
xor
(bad)
ds
mov
push
sbb
leave
pop
mov
(bad)
ds
mov
push
pop
sub
pop
mov
(bad)
ds
sahf
cmp
jmp
xchg
mov
idiv
mov
mov
push
or
test
mov
(bad)
ds
(bad)
mov
mov
push
cmp
mov
ds
push
aaa
mov
mov
xor
mov
dec
xor
mov
test
test
xchg
pop
add
ret
pop
test
(bad)
ds
(bad)
ds
and
or
test
mov
aaa
mov
(bad)
retf
push
cld
mov
idiv
mov
(bad)
ds
into
aas
mov
mov
push
inc
xchg
ds
into
aaa
mov
(bad)
ds
(bad)
ds
(bad)
mov
mov
(bad)
ds
sahf
xor
dec
clc
(bad)
mov
(bad)
ds
(bad)
ds
push
cmp
ret
mov
(bad)
ds
(bad)
ds
into
xor
aam
(bad)
mov
(bad)
ds
(bad)
ds
outs
xor
pop
cmp
xor
mov
(bad)
ds
push
cmp
rol
fmul
leave
pop
mov
(bad)
ds
out
aaa
sbb
cwde
pop
add
ret
pop
test
into
aaa
mov
xor
xchg
push
inc
dec
enter
repz
dec
cmp
dec
sub
(bad)
idiv
mov
(bad)
ds
(bad)
ds
into
xor
push
mov
mov
push
int3
mov
(bad)
ds
mov
mov
stc
mov
mov
ds
(bad)
ds
push
cmp
xor
inc
movs
mov
(bad)
cmps
dec
add
icebp
aaa
clc
fnsave
push
cmp
hlt
push
mov
(bad)
ds
(bad)
aas
mov
dec
ja
sub
test
mov
lock
inc
ds
cmps
hlt
fadd
(bad)
ds
(bad)
ds
sahf
xor
outs
les
inc
scas
iret
pop
adc
xchg
addr16
retf
pop
adc
idiv
mov
(bad)
ds
(bad)
ds
xor
mov
xchg
cmps
mov
mul
aam
ds
(bad)
ds
(bad)
sahf
aad
clc
ds
(bad)
ds
outs
xor
(bad)
push
pop
cmp
dec
jne
clc
ds
outs
xor
xor
mov
clc
enter
mov
mov
ds
(bad)
ds
push
cmp
jmp
xchg
mov
idiv
mov
(bad)
xor
mov
xor
mov
xor
mov
iret
add
mov
push
mov
(bad)
ds
(bad)
ds
push
cmp
xchg
xchg
xor
pop
test
mov
(bad)
ds
pop
fstp
loopne
test
cdq
xor
sbb
push
test
push
xor
outs
iret
xchg
adc
pop
cmp
rol
test
(bad)
ds
push
xor
outs
iret
aaa
adc
pop
dec
fadd
(bad)
xlat
test
(bad)
ds
(bad)
ds
pop
fstp
std
or
push
adc
out
neg
mov
mov
push
sbb
leave
pop
pushf
mov
push
mov
(bad)
ds
out
xor
aaa
aaa
and
aaa
pop
inc
inc
sbb
xchg
or
adc
and
sbb
out
neg
mov
cs
mov
dec
aaa
call
pop
fs
add
jmp
xchg
mov
idiv
mov
(bad)
ds
jle
mov
outs
in
mov
retf
push
push
mov
idiv
mov
out
xor
pushf
add
jmp
cwde
mov
idiv
mov
jle
mov
outs
test
out
retf
push
pop
mov
idiv
mov
(bad)
ds
scas
ss
pop
jns
out
pop
mov
clc
push
test
(bad)
ds
out
aaa
mov
sbb
mov
stc
scas
jne
clc
ds
outs
cmp
mov
pop
test
(bad)
ds
mov
or
rcl
xchg
mov
lods
test
mov
ds
mov
sub
pop
aaa
inc
or
dec
clc
ds
(bad)
ds
(bad)
ds
(bad)
mov
mov
(bad)
mov
mov
sahf
xor
dec
cld
(bad)
jne
(bad)
ds
(bad)
ds
push
xor
test
or
mov
push
or
mov
aam
ds
sahf
xor
dec
(bad)
(bad)
jne
(bad)
ds
(bad)
ds
push
xor
mov
push
sbb
inc
add
nop
shl
loopne
(bad)
mov
(bad)
ds
sahf
ds
test
mov
xor
push
iret
pop
adc
mov
ds
mov
pop
xchg
mov
ds
(bad)
ds
into
adc
sub
push
mov
(bad)
ds
pop
aas
mov
into
ja
stos
test
mov
dec
xor
mov
mov
in
cld
(bad)
mov
(bad)
ds
(bad)
ds
into
xor
xchg
adc
test
stc
push
xchg
in
mov
dec
enter
mov
mov
jg
in
xchg
dec
pop
jne
dec
ja
dec
dec
ja
dec
(bad)
js
dec
jg
and
rol
mov
dec
dec
ja
dec
dec
ja
dec
fbstp
jo
inc
lea
sbb
dec
ja
dec
push
dec
jb
jl
jbe
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
jae
jns
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
jae
jns
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
and
js
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
lock
dec
outs
xchg
je
push
add
jbe
fsub
dec
xor
xchg
add
jbe
fwait
mov
es
fsubp
hlt
jmp
push
mov
(bad)
fcom
jo
mov
mov
(bad)
push
ins
sahf
in
xchg
pop
leave
xor
lahf
and
xchg
lods
jl
data16
into
and
jns
pop
aam
xor
imul
xchg
sti
shl
in
mov
les
inc
push
(bad)
pop
cmps
jge
sbb
sbb
mul
outs
mov
add
mov
ds
int3
js
cld
inc
mov
mov
mov
(bad)
jo
aam
adc
adc
jp
test
clc
jo
dec
jae
inc
xor
fcmovnb
ror
in
cmp
adc
push
out
lock
add
push
out
in
shl
aaa
jnp
or
out
dec
mov
(bad)
pop
xlat
shl
fnsave
je
shl
jns
sbb
ins
dec
mov
int
and
mov
mov
mov
pop
into
cmp
push
js
mov
jb
sub
(bad)
ror
add
cs
pop
std
push
enter
jmp
addr16
ficomp
inc
cmp
dec
inc
out
enter
leave
adc
scas
icebp
aam
jmp
in
fisttp
xchg
aaa
dec
sbb
push
jae
and
push
pop
scas
rol
scas
inc
sub
push
inc
sbb
push
xor
pushf
sub
pop
xchg
dec
sub
sub
dec
sub
fdivr
pop
scas
push
mov
lods
stos
inc
sub
push
mov
lods
rol
scas
inc
sub
or
mov
daa
pop
cli
add
push
jp
xchg
imul
mov
push
mov
aam
mov
and
pop
repnz
and
xchg
add
jbe
in
arpl
xor
inc
repz
jo
mov
imul
imul
xchg
cmps
jp
or
inc
inc
and
push
mov
iret
lods
or
mov
cwde
adc
ds
fcmovnb
mov
in
lods
in
jns
xchg
jo
lock
or
lock
enter
push
pusha
ins
iret
or
sbb
cmp
dec
pushf
loop
dec
and
lock
test
stc
(bad)
iret
clc
hlt
sub
enter
mul
push
pop
jae
pushf
jge
inc
xor
jo
jecxz
dec
ss
sub
ror
hlt
cdq
dec
mov
adc
das
rol
jb
into
and
mov
jle
xlat
jg
out
ret
xor
ror
inc
into
adc
repnz
std
cli
mov
in
adc
mov
ja
mov
jae
stc
mov
or
and
iret
js
or
jns
xor
sub
outs
out
xor
lods
jns
outs
(bad)
aad
mov
(bad)
cmp
sub
jmp
xor
enter
push
rcl
mov
mov
cli
shr
in
sub
push
mov
jp
sahf
fidiv
sahf
(bad)
inc
xchg
fidiv
shl
lahf
fidiv
sahf
shl
lahf
fidiv
(bad)
and
inc
sahf
(bad)
dec
push
mov
sahf
fcmovb
inc
xchg
fiadd
push
mov
inc
dec
lahf
retf
dec
fdiv
sahf
fidiv
inc
xchg
fiadd
rol
cmps
ret
dec
jnp
inc
int3
mov
push
jg
scas
shl
sahf
fidiv
lahf
fidiv
jle
jnp
sahf
fidiv
fstp
sahf
fidiv
sahf
fisub
repz
jne
sahf
fidiv
sahf
(bad)
inc
xchg
fidiv
sahf
fidiv
sahf
(bad)
inc
xchg
fidiv
mov
jae
sahf
fidiv
sahf
fisub
fist
fdiv
jle
jp
sahf
fidiv
push
pop
jnp
sahf
fiadd
dec
push
mov
arpl
pop
jb
sahf
fidiv
cwde
retf
repz
scas
shl
sahf
ficom
dec
sahf
call
cmps
popf
sbb
jmp
in
push
repz
jnp
repz
pop
stc
in
mov
test
arpl
(bad)
jns
pop
push
mov
js
inc
push
pop
jae
dec
adc
xchg
jo
inc
xor
rol
test
inc
xchg
dec
leave
xor
je
pop
mov
es
or
fadd
jo
mov
arpl
fld
jl
stc
popa
push
fdivr
hlt
push
add
or
xchg
mov
addr16
out
jbe
xor
sub
std
adc
in
push
mov
jbe
xor
das
imul
out
int
xchg
icebp
ret
lock
ds
mov
ret
dec
(bad)
xor
(bad)
xchg
xor
jo
repz
ret
into
(bad)
cmp
pop
iret
mov
arpl
inc
mov
sbb
shl
scas
mov
jb
mov
loopne
mov
sti
xor
jle
dec
lds
cmp
adc
mov
(bad)
repz
mov
(bad)
je
in
jl
push
inc
or
fiadd
xor
push
icebp
push
ror
mov
cmp
mov
mov
das
xchg
cmp
aam
iret
sbb
js
test
adc
lock
(bad)
je
sbb
jno
mov
int
jb
dec
je
pop
fxam
fild
pop
cmps
lahf
dec
jno
outs
(bad)
xor
add
lahf
xchg
add
(bad)
into
dec
jo
dec
out
je
mov
or
retf
repz
or
aas
xrelease
aas
repz
or
add
jp
mov
push
jp
cmp
(bad)
cwde
jne
jp
push
jp
aas
or
ret
icebp
cmp
mov
test
not
mov
ja
dec
dec
ja
dec
push
sub
mov
dec
ja
dec
dec
ja
dec
pop
repnz
xor
pop
xor
inc
pop
cmp
pop
xchg
cld
shl
leave
adc
xor
inc
sub
mov
fild
inc
jne
jle
lods
jae
or
mov
cmps
mov
out
stos
aaa
cmp
fld
scas
test
cmps
lea
xor
mov
adc
in
nop
movs
mov
jbe
int3
shr
and
mov
in
or
cmc
adc
adc
into
adc
int
int
inc
int
(bad)
sbb
fld
int
(bad)
jo
in
and
cmp
jo
clc
xor
xor
inc
pop
dec
iret
mov
enter
out
push
lock
jb
test
lods
in
inc
lea
rcl
int
fsubr
ret
out
sahf
add
loopne
cld
dec
ficom
daa
(bad)
rol
or
cmp
adc
cmps
push
xor
in
jl
cs
jae
fidiv
nop
jge
jbe
pop
(bad)
faddp
mov
xchg
test
ror
xor
imul
int3
(bad)
sub
mov
cwde
adc
je
enter
push
push
sti
pop
das
push
iret
ins
push
xor
je
cdq
mov
test
in
add
fisttp
pop
nop
into
cwde
adc
in
dec
scas
outs
cld
std
mov
xor
push
data16
movs
bound
inc
rcr
nop
ficomp
push
mov
pop
sti
and
xchg
pop
shr
and
push
cwde
movs
out
adc
pop
popf
cmps
or
fdivp
lock
sti
std
popa
gs
(bad)
xchg
cmovp
or
push
punpcklwd
pop
push
aam
aad
(bad)
add
pop
or
aam
aad
jp
push
aad
or
call
mov
inc
cmp
ret
btc
jecxz
or
jg
sbb
pusha
push
jmp
add
hlt
lds
jmp
addr16
jnp
mov
hlt
test
adc
pop
inc
dec
dec
ja
dec
pop
repnz
mov
cmp
sar
jp
mov
mov
mov
mov
enter
hlt
inc
mov
xor
xor
jo
clc
retf
rcr
mov
fiadd
push
pop
movs
das
iret
and
dec
psubw
jbe
into
sbb
test
int3
jmp
jns
daa
pusha
nop
jmp
xor
test
cmp
mov
jl
clc
inc
xor
ja
cmp
xor
fidiv
lahf
addr16
js
ror
dec
jbe
dec
sbb
pop
inc
(bad)
shr
test
jo
stc
jae
fld
bound
fisubr
inc
push
sar
jge
dec
mov
or
ret
jmp
lds
jmp
and
out
jge
stos
sbb
push
adc
mov
(bad)
int
jge
cmp
sbb
icebp
push
loopne
(bad)
xor
shl
pop
in
popa
mov
mov
inc
aas
dec
icebp
push
lods
in
icebp
cld
dec
or
dec
mov
(bad)
fprem1
out
dec
mov
movs
jecxz
fmul
add
fwait
push
nop
xchg
clc
loopne
mov
idiv
xor
jbe
inc
jb
mov
ret
test
mov
arpl
mov
xchg
push
das
(bad)
fwait
add
xchg
nop
into
lds
xor
fsubr
xor
mov
fwait
dec
leave
xchg
nop
mov
mov
and
sti
ret
xor
inc
jbe
sbb
iret
pop
and
push
and
push
mov
jp
push
sub
mov
mov
cwde
pop
and
add
jne
or
lock
jg
push
jnp
icebp
and
push
inc
mov
push
and
push
and
popa
sub
fxch
in
adc
xlat
sbb
les
retf
call
jnp
shl
jne
push
inc
retf
lock
and
mov
jge
push
xchg
jnp
push
and
push
and
mov
and
push
and
push
and
xchg
and
lea
xlat
xchg
int
xor
mov
stc
push
and
loope
mov
xor
jp
mov
(bad)
iret
ins
mov
push
shr
or
xor
inc
shr
cld
iret
pushf
xchg
frstor
in
stos
scas
sbb
js
jne
cmp
sub
fsubr
and
test
xor
jbe
ins
arpl
inc
ss
xchg
pop
jl
xor
mov
cmps
jecxz
or
add
sar
jmp
loope
dec
inc
xor
hlt
fcom
mov
repz
mov
(bad)
adc
test
add
mov
jae
inc
mov
fisub
fiadd
(bad)
in
adc
xor
cld
jns
inc
add
mov
ror
js
pop
out
enter
xchg
loope
or
mov
inc
push
shr
hlt
(bad)
adc
pop
mov
pop
repz
int3
inc
cmp
das
jns
outs
inc
jbe
ds
int3
inc
into
add
in
and
jp
pop
jg
fiadd
enter
dec
into
push
pop
addr16
bound
pop
loop
ss
shl
and
ror
cmp
or
mov
dec
mov
(bad)
shr
nop
mov
(bad)
cdq
jne
ds
bound
cli
inc
sbb
cld
push
push
(bad)
shl
xchg
sbb
push
dec
and
mov
(bad)
outs
inc
xor
push
add
jnp
mov
fistp
aaa
repnz
mov
mov
dec
xchg
push
cmp
mov
or
dec
mov
push
jmp
ins
mov
out
jno
(bad)
push
inc
leave
push
push
add
fstp
test
scas
mov
addr16
cmc
loop
dec
sub
les
fistp
mov
xor
hlt
je
jne
stc
dec
pop
push
cli
dec
pop
push
mov
jb
(bad)
jbe
dec
jg
inc
test
ja
dec
dec
ja
dec
fbstp
stc
lock
lea
aad
dec
ja
dec
dec
ja
dec
(bad)
push
pop
repz
inc
xor
xor
jo
icebp
enter
lea
inc
addr16
test
adc
sub
fadd
jo
icebp
and
push
pop
mov
iret
ins
push
adc
leave
outs
int3
inc
into
dec
sub
push
cwde
and
adc
jmp
mov
test
enter
xchg
icebp
aam
mov
dec
sbb
fild
loopne
adc
sub
jns
inc
nop
adc
and
ror
adc
xor
cmp
ficom
dec
vpacksswb
inc
mov
popa
(bad)
sbb
(bad)
dec
(bad)
ror
and
mov
movs
cmp
int
xor
rol
inc
in
leave
je
jmp
fidiv
inc
ret
jge
sub
push
inc
cs
loop
iret
enter
xchg
add
mov
mov
out
add
dec
popa
xor
lahf
int
call
dec
jp
jns
jb
loop
in
mov
in
mov
in
mov
(bad)
outs
push
fldcw
pop
rcl
cli
add
xchg
mov
jle
push
xchg
lock
mov
add
in
pusha
mov
push
je
mov
outs
xchg
adc
iret
popa
daa
pop
cmp
cmp
push
rcr
imul
imul
mov
imul
mov
or
imul
mov
jmp
addr16
or
outs
or
or
out
push
es
push
outs
mov
or
imul
mov
test
or
addr16
or
imul
mov
or
sub
addr16
or
imul
mov
or
jle
jo
add
push
mov
or
ret
mov
dec
cmp
add
imul
mov
or
movs
push
push
push
fcom
add
imul
mov
or
cmp
sub
or
imul
mov
or
mov
xor
in
ins
inc
pop
dec
inc
xor
imul
mov
or
imul
mov
jmp
jecxz
push
add
add
rcr
push
outs
mov
or
sub
outs
mov
or
mov
or
pop
jmp
arpl
imul
mov
or
ins
in
xor
adc
xchg
xchg
and
test
xor
imul
mov
or
mov
imul
mov
or
mov
or
ja
add
mov
mov
mov
pop
push
jo
add
push
mov
or
mov
or
fwait
push
outs
mov
or
sub
addr16
or
imul
mov
or
rol
mov
mov
xor
xchg
inc
jnp
xor
mov
lods
push
fnsave
xor
fld
stc
lock
xchg
movs
mov
mov
dec
ja
dec
dec
ja
dec
dec
not
mov
ja
dec
dec
ja
dec
scas
jnp
sub
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
aam
jle
dec
mov
and
xchg
mov
mov
add
dec
ja
dec
dec
ja
dec
scas
jge
dec
jle
pop
ror
pop
jns
add
dec
ja
dec
dec
ja
dec
pop
jnp
stc
dec
xchg
dec
ja
dec
pop
jle
clc
jns
add
add
jl
mov
dec
dec
ja
dec
dec
ja
dec
pop
je
outs
inc
mov
dec
dec
ja
dec
dec
ja
dec
das
out
add
ja
dec
dec
ja
dec
pop
repnz
dec
xchg
jo
rol
dec
mov
dec
dec
ja
dec
das
jle
dec
jg
mov
das
inc
daa
in
inc
ja
dec
dec
ja
dec
(bad)
jno
outs
shl
lea
xchg
mov
mov
dec
ja
dec
das
jns
jg
fimul
cwde
dec
xchg
dec
aaa
jne
dec
ja
dec
dec
jle
lock
jo
sbb
dec
ja
dec
(bad)
jno
outs
movs
mov
mov
jb
pop
popa
ins
mov
mov
js
adc
adc
das
push
shl
outs
mov
pop
mov
(bad)
nop
push
fnstsw
test
pop
mov
pusha
jle
pop
jge
mul
mov
push
adc
cwde
xchg
leave
jae
stc
jge
into
adc
ds
ror
push
scas
pop
xchg
pop
mov
enter
mov
jne
cmp
loope
rcl
(bad)
fdiv
sub
xor
cld
mov
jae
dec
mov
out
loopne
int3
inc
out
add
jo
xchg
stos
pop
cmp
or
xor
test
adc
inc
data16
mov
leave
ror
ret
mov
test
int
sbb
jns
mov
cmc
cmp
sbb
(bad)
dec
sub
sbb
repz
sbb
fld
shr
nop
or
shl
jns
outs
push
sar
fwait
cmps
repnz
iret
or
and
enter
(bad)
rol
sub
dec
pop
jae
into
mov
(bad)
call
scas
or
stos
arpl
and
mov
(bad)
out
jl
or
inc
inc
and
fcomp
iret
daa
push
add
int
es
leave
adc
enter
call
aaa
stc
sub
bound
mov
fs
dec
and
arpl
pusha
cmp
pop
je
hlt
or
mov
hlt
or
add
or
stos
js
adc
xor
pusha
jge
js
leave
mov
icebp
mov
xlat
sub
cmp
sbb
jg
fbld
xor
out
inc
pop
(bad)
sbb
push
sbb
sbb
push
pop
xor
sbb
leave
and
popa
vmptrst
data16
cmps
dec
data16
jo
xor
sbb
dec
fs
dec
(bad)
lds
pusha
cmp
pop
je
hlt
stos
js
hlt
or
add
or
mov
dec
popa
lds
dec
xchg
xchg
add
hlt
or
mov
hlt
cmp
pop
hlt
or
or
cmp
mov
ins
std
or
or
cli
jb
les
xor
xor
pop
or
add
or
hlt
dec
add
cmp
aad
pop
hlt
ret
push
test
ins
std
or
or
cmp
ins
add
push
push
hlt
pop
cmp
nop
dec
lods
push
les
or
je
hlt
or
sub
hlt
cmp
pop
hlt
or
or
call
xchg
push
dec
(bad)
leave
mov
loop
ss
pop
hlt
or
cmp
je
int3
inc
(bad)
sbb
or
or
hlt
cmp
push
test
ins
std
or
or
arpl
jae
xor
xor
xor
push
imul
cwde
xor
repz
dec
mov
jns
xchg
ret
xchg
mov
or
inc
inc
add
dec
mov
dec
dec
ja
dec
push
sub
xor
fadd
daa
test
ja
dec
(bad)
shl
retf
jmp
cmp
jns
push
mov
mov
add
lock
retf
imul
adc
std
add
jns
xchg
dec
retf
sub
dec
rol
adc
mov
dec
xchg
cmp
data16
repz
ja
sbb
push
dec
xchg
in
sub
sbb
out
inc
mov
sysexit
or
addr16
dec
inc
xor
xchg
mov
shl
dec
sub
sar
inc
xchg
mov
ins
inc
dec
push
ror
in
inc
dec
add
mov
ss
sbb
xchg
and
sar
mov
ret
rcr
fsubr
gs
inc
out
mov
xor
out
or
into
adc
in
scas
cld
sub
cmp
jns
adc
xchg
jecxz
pop
mov
sbb
sub
(bad)
in
loopne
jl
icebp
je
test
jbe
push
lea
ret
xor
sbb
xor
cdq
and
cwde
lods
pop
dec
clc
test
dec
clc
sub
clc
test
dec
clc
test
inc
cli
dec
push
dec
retf
das
pop
push
jmp
jo
aam
xor
into
and
xchg
pusha
loopne
xchg
mov
enter
loope
adc
xchg
mul
jno
outs
jo
xchg
push
jns
test
dec
clc
test
dec
clc
test
inc
mov
outs
pop
jns
xchg
push
dec
clc
test
inc
hlt
dec
jae
xchg
outs
sbb
in
xchg
pusha
push
sbb
mov
dec
inc
(bad)
sbb
cmp
dec
clc
test
dec
clc
test
dec
cmc
test
sub
test
pop
dec
clc
test
inc
cmc
call
fs
enter
clc
test
dec
(bad)
test
mov
ins
sahf
jg
xchg
add
std
push
jns
test
dec
clc
test
dec
cmc
jmp
jns
mov
pop
dec
stc
test
jmp
clc
test
dec
clc
test
inc
std
test
add
sahf
and
icebp
ins
pop
jns
test
dec
repnz
and
push
jo
loope
iret
xchg
loope
jb
rol
cli
fs
inc
outs
pop
jns
test
inc
cli
test
or
lahf
push
dec
clc
test
dec
jmp
test
aad
aas
xchg
dec
arpl
push
push
fs
outs
pop
jns
test
dec
clc
test
dec
clc
test
dec
js
pop
dec
clc
test
dec
clc
test
dec
std
add
loope
cwde
push
mov
(bad)
dec
loopne
rcl
pop
and
clc
test
dec
clc
test
dec
stc
test
dec
scas
mov
hlt
js
(bad)
imul
pop
dec
clc
test
dec
repz
movs
rcl
jo
sahf
inc
mov
stc
pushf
scas
adc
mov
xchg
jg
push
int
lds
fs
aad
pusha
lock
jo
jle
inc
div
es
push
div
(bad)
lods
shl
xchg
inc
push
loope
push
push
icebp
mov
xor
xchg
adc
and
loope
lock
shl
adc
jno
jno
xchg
jo
push
adc
xor
xchg
shl
xor
inc
adc
shl
shl
xor
shl
rcl
and
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
popf
jo
shl
xchg
icebp
xor
fld
inc
pusha
rcl
pusha
jo
xchg
pusha
jo
xchg
loopne
shl
xor
icebp
pusha
inc
xor
ins
mov
xor
rcl
jo
xchg
add
rcl
rcl
shl
imul
mov
dec
out
and
pusha
jo
xchg
mov
jb
mov
bound
in
cmp
rcr
cli
xchg
push
push
jmp
and
jne
dec
push
xchg
pusha
rol
and
or
sbb
(bad)
rcl
pop
ss
cmp
dec
xlat
xor
shl
loope
or
jmp
dec
enter
shr
mov
sbb
xchg
inc
fs
cmp
repnz
fsubr
xchg
adc
movs
movs
std
retf
and
fidiv
inc
into
bound
test
lods
movs
(bad)
cld
inc
sti
mov
jp
xchg
sar
or
dec
mov
dec
push
jl
xchg
xchg
sub
ja
and
shr
dec
fwait
mov
stos
(bad)
lods
stos
(bad)
cld
inc
mov
xchg
xlat
xchg
lahf
inc
jno
add
ja
and
lods
mov
and
retf
stos
scas
sbb
cmp
leave
shl
jmp
aam
fisttp
test
cmp
icebp
or
jbe
push
arpl
out
xchg
jecxz
mov
sbb
adc
cdq
pop
xor
cmp
push
push
jmp
neg
aam
or
outs
mov
sub
mov
ss
ret
in
test
or
mov
fsubr
fucomp
inc
cmp
cmp
lock
jns
retf
dec
es
xor
and
cmp
lods
mov
or
mov
loopne
pop
push
xor
loopne
or
xchg
jecxz
xchg
jmp
call
push
cmp
sbb
lock
int
mov
or
imul
jmp
retf
icebp
fbstp
lahf
cmps
xor
or
pop
das
pop
jmp
mov
daa
mov
mov
cmp
mov
lahf
mov
and
mov
cli
jns
fwait
mov
stos
mul
imul
movs
lds
fs
repnz
fld
cmps
dec
into
xchg
dec
lds
cmps
mov
sbb
cdq
in
push
or
into
bound
cmp
cmp
retf
lods
cs
add
loopne
and
and
imul
movs
cmp
pop
push
add
(bad)
pop
mov
mul
enter
enter
mov
and
sub
pop
jno
lahf
mov
add
retf
xor
test
setp
or
popf
in
inc
jl
add
mov
cmp
adc
mov
push
arpl
add
lahf
fwait
jg
push
and
(bad)
jmp
jecxz
and
scas
push
pop
jle
aad
xchg
gs
es
add
inc
popa
div
movs
add
cmp
mov
lods
lds
cmps
add
outs
aaa
test
mov
aad
stos
xchg
push
js
push
ins
xchg
in
les
pop
add
int
sub
stc
(bad)
iretw
adc
xor
pop
je
mov
je
pop
ret
or
and
mul
sub
xchg
adc
daa
pop
outs
rcr
(bad)
xor
cs
jns
retf
xor
mov
cmp
jns
adc
ret
cmp
packssdw
cld
cmp
dec
dec
add
rcr
sti
hlt
ficomp
ins
ja
(bad)
mov
call
xchg
jge
push
push
repnz
je
inc
pop
call
mov
div
mov
adc
push
out
and
lahf
push
icebp
jnp
mov
clc
das
sub
lea
aaa
jbe
(bad)
clc
ins
sbb
push
je
xchg
nop
hlt
(bad)
dec
push
sub
push
gs
and
test
add
in
retf
fwait
adc
sti
retf
stos
scas
sbb
sub
(bad)
xchg
adc
daa
and
mov
adc
sar
pop
add
mov
and
out
stos
fadd
dec
push
and
test
and
add
dec
jle
aad
xchg
gs
out
mov
std
xor
data16
fwait
pusha
jo
xchg
adc
pop
fdiv
std
test
icebp
popa
outs
jo
xchg
xor
shl
loope
pusha
jo
xchg
and
xchg
inc
inc
xchg
adc
jno
ret
xor
and
mov
ins
lock
push
adc
or
sbb
pop
scas
add
mov
dec
jns
movs
pushf
ror
xchg
and
cmps
dec
lods
cmp
mov
dec
inc
add
cmp
jmp
sbb
or
retf
xchg
pop
mov
retf
neg
push
jnp
cmp
mov
mov
test
out
pop
add
outs
mov
adc
add
sbb
pushf
and
jae
movs
leave
mov
xor
enter
xchg
and
inc
retf
in
mov
pop
(bad)
std
push
cmp
vmread
xlat
or
call
inc
lock
jmp
sbb
ja
cmp
cmp
imul
inc
jmp
ror
sbb
jb
push
pop
add
imul
pop
jmp
dec
pop
mov
ret
int
push
retf
xchg
adc
retf
lds
nop
movaps
imul
dec
hlt
or
xchg
add
push
test
test
lock
inc
ret
lods
in
or
aas
dec
aam
rol
cmp
or
out
lock
mov
in
jo
dec
xchg
icebp
fcmove
out
movs
cmp
pop
cmp
loop
shl
mov
push
sub
push
ret
popa
mov
cmc
push
bound
dec
jmp
test
mov
pop
sbb
pop
xor
out
mov
lahf
das
int
(bad)
mov
out
ret
pop
repnz
sbb
and
push
mov
inc
cmp
xor
(bad)
cld
test
sub
jp
pop
jb
int
jmp
xchg
push
sbb
mov
out
xor
stos
repz
retf
ds
mov
jnp
lods
mov
shl
out
mov
dec
(bad)
pop
mov
xchg
lods
(bad)
mov
cmp
xor
jl
rcl
adc
adc
inc
jo
xor
adc
nop
jae
loop
jb
add
ins
aad
jnp
rol
pop
inc
test
jp
rcl
inc
rol
cmp
cli
push
inc
and
(bad)
fdivr
cmp
mov
mov
push
dec
sbb
jae
retf
pop
jbe
push
cmc
imul
inc
lea
out
cmp
push
mov
xchg
out
retf
adc
pop
jbe
mov
pop
push
repz
sbb
je
dec
daa
fidivr
and
call
ds
pop
fisub
stos
adc
push
pop
mov
movs
pop
fcmovbe
push
dec
add
xor
mov
imul
push
jge
mov
jg
sbb
(bad)
lds
push
(bad)
ins
sti
pop
cmp
popf
mov
sub
(bad)
retf
div
pushw
mov
fs
aas
dec
arpl
push
pop
add
and
ucomiss
sti
jle
xchg
sti
aas
shr
test
pop
lds
stos
sbb
pop
pop
cmp
xor
call
adc
push
sbb
ins
ror
mov
jmp
cwde
add
scas
xor
popa
data16
xchg
fbld
(bad)
hlt
sub
sbb
or
cmps
out
sbb
pop
sub
ins
int
xor
daa
sub
mov
xchg
mov
enter
sti
pop
in
push
mov
call
mov
adc
push
jmp
fsub
sbb
repnz
mov
cwde
mov
cmp
jns
jb
xchg
mov
cmps
or
push
mov
and
fwait
xchg
xchg
push
cld
or
mov
xchg
test
cmps
sbb
or
adc
rol
ds
loope
add
sbb
dec
call
mov
cmp
in
adc
scas
push
mov
inc
movs
xor
inc
inc
mov
outs
out
xor
(bad)
cmp
pop
test
arpl
adc
cwde
call
sub
pop
(bad)
ror
stos
aaa
xchg
out
jmp
ret
push
jae
sbb
push
fcom
test
xor
jg
not
stos
sub
pop
cmp
and
jmp
sbb
adc
gs
pop
ficomp
test
cdq
xchg
sbb
pop
inc
stos
and
mov
scas
retf
sub
sub
xor
mov
rol
add
ret
repnz
jmp
imul
sar
push
mov
jbe
mov
(bad)
enter
jbe
dec
shr
and
jmp
fdivr
add
arpl
adc
pop
mov
lock
add
das
mov
push
popf
iret
sar
pushf
jns
xor
mov
test
enter
xor
push
sub
jnp
cli
div
pop
mov
in
daa
dec
xor
shl
lods
outs
cmps
xor
push
sbb
(bad)
push
push
test
ss
dec
popf
stos
jbe
sub
shl
in
adc
push
lahf
jmp
pop
xor
push
jle
rcr
fsub
daa
adc
sub
xor
jo
add
loope
jo
icebp
and
rcl
popa
ret
xchg
push
jae
mov
inc
aad
xchg
outs
(bad)
jno
rcl
push
rol
cwde
aad
std
pop
mov
dec
scas
mov
cmp
je
cmps
push
push
(bad)
and
mov
mov
and
mov
shr
js
lods
enter
jg
test
or
cmps
and
pop
cli
sbb
xor
fwait
add
sbb
push
ret
sbb
loopne
adc
dec
push
push
push
pushf
adc
popf
es
xor
call
sub
and
add
out
ret
add
les
int
cmps
and
jne
lods
cmps
int3
test
push
cmp
data16
mov
or
jne
call
or
stos
int
adc
les
xor
clc
push
and
push
loope
sbb
test
test
fwait
not
cmp
fdiv
stos
in
inc
mul
rcr
jg
leave
mov
out
das
sub
lds
jmp
xor
rcl
push
shl
mov
mov
jg
xor
sub
add
jo
retf
inc
in
(bad)
in
sbb
fs
shr
or
ret
(bad)
xchg
inc
jl
outs
pop
xor
or
shr
sar
outs
push
jmp
pusha
iret
fist
or
aas
fstp
adc
or
js
fwait
jp
mov
ja
cmp
sbb
fcmovbe
pop
outs
adc
ins
pop
sahf
push
fidiv
ss
repnz
mov
push
dec
cmps
push
sub
leave
dec
loop
jbe
xor
jmp
mov
sub
test
scas
sub
bound
xor
rcl
icebp
pusha
inc
rcl
pusha
lock
pusha
arpl
xor
nop
push
fnstenv
xlat
mov
js
cld
xchg
xor
ror
inc
xor
loop
xchg
dec
mov
nop
arpl
icebp
mov
jno
mov
cld
push
outs
dec
fwait
mov
pop
(bad)
sub
scas
push
in
or
adc
xor
mov
in
and
or
xchg
movsx
dec
lock
sub
ins
add
scas
inc
and
pop
imul
pop
inc
and
adc
dec
iret
popf
into
jmp
daa
call
dec
es
sub
call
inc
(bad)
dec
pop
xchg
push
inc
in
push
fcom
jne
hlt
mov
loope
jae
xchg
inc
mov
add
mov
mov
ss
shl
(bad)
push
push
cmc
mov
fdiv
mov
mov
fs
call
or
sbb
cld
xlat
out
mov
into
xchg
psraw
test
pop
pop
cld
push
mov
dec
mov
pop
adc
call
rcl
or
addr16
int
mov
lods
daa
jns
mov
int
sbb
dec
and
fstp
je
call
xor
mov
ficom
jne
add
js
fs
fst
pop
dec
xor
(bad)
repnz
(bad)
push
cdq
mov
dec
int
cmp
pop
or
sub
mov
ret
mul
or
jge
xor
add
in
mov
jecxz
sbb
data16
outs
jmp
add
mov
or
movs
loop
outs
imul
outs
adc
ret
sub
adc
out
cmps
outs
fimul
xchg
or
aaa
pop
mov
cmp
dec
jnp
adc
pop
in
fmul
xor
dec
xchg
push
xchg
dec
dec
push
movs
cmp
scas
push
fadd
pushf
xchg
inc
mov
lods
out
add
xchg
cmp
inc
sbb
or
cld
cpuid
cs
iret
addr16
not
movs
sub
cwde
daa
mov
xor
sbb
retf
test
sub
cwde
add
pop
inc
mov
mov
in
mov
ins
pop
adc
enter
xchg
dec
mov
dec
or
mov
and
pop
and
call
arpl
mov
and
push
pusha
fldcw
mov
stos
ds
dec
push
pop
mov
imul
sbb
dec
mov
out
arpl
mov
in
xchg
loopne
mov
cmps
out
test
jmp
push
or
in
xchg
dec
call
pusha
xchg
mov
cmp
or
rcr
xchg
fisubr
lds
fwait
call
stos
mov
call
mov
cwde
xlat
mov
out
dec
cmc
pop
pop
cmp
adc
lea
aam
cmp
push
mov
xchg
js
(bad)
(bad)
pop
mov
xchg
movs
pop
jns
hlt
xchg
fstp
xchg
lea
pop
mov
mov
pop
dec
jns
mov
cmp
lods
stos
mov
sub
sub
mov
dec
ror
add
js
dec
add
inc
in
xor
xor
data16
xchg
jge
and
outs
jg
push
xchg
xor
mov
inc
xchg
xchg
pusha
pusha
rcl
pusha
arpl
and
leave
xor
mov
fimul
ins
lock
bound
mov
imul
out
xchg
add
xor
enter
and
stos
in
pop
add
cmps
sub
xchg
sti
or
mov
push
sbb
lods
je
sbb
dec
in
jbe
dec
xchg
xor
push
pop
icebp
and
retf
out
arpl
lds
inc
les
jp
push
xchg
pop
inc
sub
mov
aad
xor
xor
adc
fwait
into
mov
sbb
enter
xlat
inc
(bad)
cmp
inc
in
mov
sbb
das
jg
xor
xor
xchg
outs
repnz
lock
and
mov
xchg
pop
out
mov
cmp
add
ret
jp
dec
out
addr16
test
sar
out
test
test
(bad)
retf
stos
cmp
xlat
nop
add
hlt
fs
cmp
push
mov
xor
outs
mov
push
push
adc
and
cmps
push
in
fnsave
inc
fdivr
sub
data16
push
jle
adc
sbb
fnstcw
aaa
and
lods
adc
loop
mov
jl
out
sub
sbb
mov
xor
enter
lock
mov
inc
mov
aad
ins
sti
dec
dec
mov
or
pop
push
sbb
retf
xor
add
lods
pushf
sbb
fxtract
inc
mov
xchg
cli
rcl
mov
aad
xchg
mov
jmp
sti
iret
stc
cmp
mov
(bad)
pop
push
cmps
fs
ficomp
popf
dec
pop
out
fisubr
loop
dec
or
inc
cwde
lahf
push
xchg
jg
dec
je
js
call
rol
je
xor
mov
cs
add
data16
push
xchg
fs
int3
xchg
and
cmps
mov
lea
or
push
push
es
es
rcl
gs
jmp
xchg
push
jle
enter
cli
xor
(bad)
stc
sbb
fmul
mov
lock
xchg
mov
fistp
adc
pop
jns
sbb
mov
or
or
shr
mov
jg
xchg
xchg
mov
dec
test
cmp
cmp
ja
(bad)
and
pop
pop
inc
imul
sbb
fs
inc
jmp
data16
outs
pop
jg
xchg
adc
icebp
fild
push
inc
dec
pop
retf
std
xor
jo
mov
pusha
jno
xchg
pusha
adc
fs
xchg
add
xor
cmp
jbe
leave
xchg
pusha
jo
xchg
and
es
xchg
pusha
jo
sahf
sub
retf
les
aad
jno
and
ja
cmc
sti
inc
rol
pop
mov
imul
mov
shl
mov
mov
add
adc
mov
mov
sti
ror
mov
jbe
push
mov
push
xor
jbe
sub
adc
mov
and
push
add
push
cmp
sar
and
xlat
hlt
not
pop
add
jnp
ret
hlt
(bad)
pop
cmps
lds
mov
ret
in
ss
or
bound
sub
sbb
xchg
pusha
mov
or
push
mov
and
cmp
sub
es
xchg
inc
lock
xchg
and
push
pop
fs
xchg
pusha
jo
cdq
xor
repz
adc
js
mov
jecxz
cmc
imul
pusha
add
cdq
rcr
and
addr16
xchg
loopne
lods
push
imul
fisubr
add
loope
jo
shl
jno
xor
(bad)
xchg
bound
mov
fisttp
jle
rcl
inc
rol
iret
test
in
sub
scas
and
inc
jl
out
fcomi
jno
movs
mov
lods
jp
xor
aaa
adc
adc
into
adc
add
mov
int
nop
and
bound
xor
add
adc
(bad)
lds
ins
push
or
and
gs
push
fsubr
xchg
sahf
cwde
adc
cmp
sahf
adc
mov
rcr
and
xchg
int3
retf
mov
test
(bad)
cwde
jbe
xchg
aam
sbb
dec
and
lock
adc
mov
sub
inc
or
jmp
dec
addr16
loope
cli
mov
inc
(bad)
jne
cmp
hlt
xchg
ss
out
jno
xchg
lea
icebp
add
loopne
jno
sub
cmc
mov
push
mov
mov
adc
cmps
xchg
lock
in
lahf
fwait
xor
mov
jecxz
mov
jno
lock
cli
pusha
dec
inc
add
out
sub
mov
xchg
daa
cmp
jecxz
lea
adc
mov
mov
cmps
out
push
sar
leave
xchg
mov
xchg
(bad)
shl
cld
loopne
xchg
mov
jmp
ss
imul
jae
jp
jb
xchg
mov
sbb
jp
sub
movs
jne
(bad)
mov
stc
les
cmp
mov
inc
push
xchg
ins
or
sbb
add
pop
sbb
jno
adc
adc
(bad)
pushf
and
adc
mov
int
rol
xor
xadd
aas
or
add
jmp
jecxz
(bad)
mov
cmp
jg
pop
sub
mov
stos
cli
jbe
bound
adc
add
mov
xor
inc
cwde
cmp
clc
and
jo
ret
adc
push
popa
loope
or
push
test
cmc
movs
jbe
push
mov
sub
scas
stc
sub
je
stos
cmp
outs
mov
cdq
shl
ins
nop
in
hlt
push
sub
mul
(bad)
hlt
xor
mov
push
inc
or
movs
gs
or
fdiv
int
call
pop
rol
and
sub
(bad)
call
in
mov
shl
cdq
jge
outs
dec
sti
inc
mov
push
std
cmp
nop
cmp
gs
shl
dec
movs
lea
dec
inc
pop
mov
rcl
sbb
or
jb
ret
movs
pop
rdtsc
shl
sub
loop
push
push
mov
es
pushf
adc
mov
xchg
sar
mov
sub
iret
sub
(bad)
and
sbb
call
and
mov
xlat
jmp
inc
je
pop
sub
mov
dec
in
(bad)
sub
out
mov
add
sbb
push
push
into
sbb
adc
dec
jb
inc
or
(bad)
jge
jl
rol
pusha
rol
inc
rcl
jo
ret
xor
mov
leave
jge
outs
dec
jo
and
cld
jl
in
outs
sar
(bad)
pop
mov
mov
cmp
pop
adc
mov
(bad)
sbb
pop
dec
jg
call
pop
cmc
or
cwde
cld
fsubrp
mov
ins
(bad)
jnp
lods
push
ret
jge
scas
pop
and
cmp
lds
add
movs
xor
push
sub
movs
cs
jno
mov
scas
mov
and
mov
adc
(bad)
cmp
loope
mov
push
loope
jne
adc
xchg
ret
xchg
cld
sbb
adc
pop
cmp
int
pop
lahf
out
push
int3
sbb
inc
add
pop
gs
(bad)
xlat
rol
jmp
xchg
ret
dec
xchg
enter
not
jle
push
and
out
and
rol
push
icebp
out
dec
fcomp
dec
inc
addr16
fild
mov
sub
xor
jb
jns
lahf
iret
add
iret
js
(bad)
dec
fnsave
mov
inc
sbb
repz
ss
lods
xor
in
mov
fdivr
inc
bound
sbb
mov
push
dec
test
sbb
aas
mov
xchg
and
inc
in
fucomp
scas
dec
(bad)
stc
add
movs
mov
imul
pushf
cmp
test
ret
xchg
jne
loope
xchg
lods
movs
cmp
pop
xor
cmp
arpl
xor
inc
add
test
xchg
ds
in
inc
out
xchg
pop
inc
pushf
(bad)
mov
inc
push
scas
mov
adc
push
test
outs
cs
lods
scas
mov
or
leave
mov
sub
stos
sub
loop
repnz
adc
out
adc
jecxz
loopne
and
pop
js
pusha
fnsave
or
adc
cmp
dec
mov
inc
jo
xchg
inc
pusha
xor
jo
rcl
jae
into
sub
xor
mov
and
pusha
rcl
or
test
iret
loopne
test
dec
in
icebp
das
xchg
int
jae
ror
lock
mov
mov
mov
mov
test
and
adc
sub
jnp
mov
and
inc
push
stc
addr16
add
push
ins
sbb
mov
inc
cdq
stc
push
in
shr
mov
fisttp
sub
fild
shl
mov
or
movs
test
add
mov
inc
and
retf
cdq
xor
mov
into
js
xor
mov
xor
shl
shl
outs
cli
js
sbb
xor
dec
rol
xchg
rcl
push
out
inc
inc
mov
call
movs
inc
xor
cmps
xor
je
cs
add
mov
mov
mov
mov
aas
out
enter
inc
sbb
xor
push
iret
or
sub
loop
popa
mov
xor
das
adc
je
lds
popa
cmp
xchg
fadd
sbb
and
cs
cmp
xor
adc
in
cmovne
xor
hlt
jo
repz
jbe
pop
jg
xor
pusha
inc
sub
test
or
dec
sbb
scas
enter
inc
adc
sub
xor
xchg
movs
cmp
les
fs
imul
sub
test
js
mov
sbb
movs
cmp
push
outs
mov
fwait
jmp
rcr
out
adc
leave
popa
xor
mov
inc
out
push
mov
mov
hlt
xchg
jl
ds
(bad)
and
mov
push
and
jno
push
rcr
fmulp
sub
in
adc
sbb
ret
outs
scas
add
imul
xor
(bad)
jle
jae
push
add
int3
xchg
xor
and
jmp
xchg
dec
pop
xchg
or
cdq
jmp
or
repz
jle
mov
(bad)
fst
inc
jle
inc
mov
scas
inc
push
lods
xchg
repz
in
outs
retf
scas
mov
stc
add
jbe
mov
push
push
cmps
es
inc
mov
and
mov
add
add
jno
es
xor
movs
or
sbb
inc
dec
rol
sub
icebp
xor
pop
ja
(bad)
in
shl
push
mov
jg
popa
mov
mov
test
mov
cdq
fwait
sbb
xor
add
or
jmp
adc
jb
push
pop
add
or
mov
adc
jmp
mov
and
and
adc
fs
jmp
in
daa
sar
add
out
xchg
fmul
inc
adc
enter
sub
jmp
inc
stos
sbb
xchg
jb
adc
in
sub
daa
stos
or
xchg
std
aad
jg
sub
xor
inc
test
sub
nop
or
jo
ja
test
pop
jnp
jo
ins
ins
jo
xor
dec
xchg
inc
mov
cmp
(bad)
call
inc
inc
int
loopne
bound
pushf
jecxz
test
push
into
xchg
popa
cmp
test
fs
sub
adc
jmp
xchg
adc
sbb
mov
adc
push
xchg
and
mov
das
fld
loop
lea
or
fistp
cmp
dec
mov
loopne
std
mov
inc
mov
xchg
imul
loope
fld
jmp
(bad)
stos
fidiv
dec
pushw
jmp
xchg
lds
and
mov
or
sti
push
pop
sub
jecxz
sub
mov
ins
fdivr
sub
cmps
scas
dec
je
inc
cmps
cmp
hlt
xchg
xchg
cmps
cmp
inc
outs
adc
xchg
loope
clc
add
mov
out
das
outs
sub
add
jl
retf
or
inc
xchg
or
in
jmp
and
dec
xor
and
pusha
or
jno
mov
sbb
cmp
shl
inc
sahf
retf
mov
addr16
cmp
pop
hlt
dec
xchg
sar
aad
sbb
inc
ins
pcmpeqb
xor
xchg
loopne
rcl
push
test
inc
jo
mov
inc
loope
and
mov
and
xchg
rcl
xchg
xor
rol
push
mov
jno
mov
loope
rcl
shl
popa
lock
add
xor
loopne
popa
xor
mov
lock
shl
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
pusha
outs
jo
adc
rol
pusha
rcl
pusha
pusha
xor
dec
mov
xchg
jo
icebp
and
rcl
jo
mov
jo
shl
jo
mov
pusha
jo
xchg
pusha
jo
xchg
and
mov
mov
inc
rcl
cmp
xchg
push
dec
ret
mov
push
cmps
pop
xchg
add
jg
mov
mov
mov
adc
jo
test
push
scas
fild
mov
push
mov
arpl
mov
mov
pop
cmp
sbb
nop
rol
jg
add
pop
xlat
out
dec
popf
ja
sbb
sub
out
sbb
in
inc
iret
or
int3
pop
jg
ins
xor
icebp
jle
mov
(bad)
in
loope
sbb
adc
mov
in
mov
mov
or
stos
ret
jmp
sbb
cmc
ins
jp
and
call
aam
bound
slwpcb
sub
mov
je
dec
sbb
inc
js
add
xchg
das
xchg
hlt
fsubr
or
jle
inc
popa
dec
popf
add
cmp
adc
ds
mov
outs
and
xchg
fs
retf
idiv
jbe
add
nop
leave
imul
fnstsw
sahf
not
xor
loope
in
sub
push
mov
ss
fcomip
adc
jecxz
mov
es
sbb
mov
faddp
and
jg
int3
jnp
add
push
cmps
jmp
into
push
int3
mov
es
or
push
into
dec
xchg
outs
push
in
xchg
popa
adc
xor
or
pop
lea
mov
rcr
push
fnsave
dec
cmp
push
not
test
sbb
cmp
push
adc
xor
sub
cli
shr
jmp
xor
test
push
retf
cmp
loop
ins
cmps
retf
pop
sub
pop
imul
push
mov
dec
dec
xor
(bad)
sbb
and
add
adc
into
out
int
(bad)
sub
std
push
pop
test
hlt
out
xor
jb
rol
push
sbb
daa
cmp
xor
pushf
aad
mov
sub
retf
(bad)
add
add
pop
aaa
inc
dec
mov
loop
cmps
cdq
clc
jmp
mov
cwde
rcl
cmp
das
out
in
dec
jmp
cs
sahf
xchg
push
or
(bad)
sbb
xor
ja
test
(bad)
cmp
push
mov
imul
dec
lahf
mov
movs
and
movs
or
dec
hlt
dec
int3
call
lea
sbb
dec
retf
js
dec
adc
fisubr
dec
mov
cmps
mov
loope
sub
sar
or
sub
jbe
add
lods
aaa
push
add
xor
lahf
xor
sub
cmp
jmp
add
stos
cs
sub
or
(bad)
xor
rcl
dec
addr16
lods
fld
jmp
adc
les
rcr
test
repz
loopne
dec
push
sar
sbb
xchg
jno
dec
iret
push
push
dec
mov
push
add
(bad)
pop
xchg
js
in
stos
dec
push
lahf
jl
hlt
sub
inc
adc
bound
adc
ss
iret
sub
pop
popf
push
fwait
jae
dec
out
dec
int
push
(bad)
push
pop
push
addr16
arpl
movs
aad
ja
sub
dec
xchg
shl
pop
lds
jg
push
call
das
mov
add
xchg
loopne
jmp
iret
xor
sbb
mov
xchg
pop
out
stos
loopne
xchg
popa
shl
mov
mov
adc
jne
xchg
sar
int3
jbe
jo
retf
xor
mov
jo
call
daa
test
ins
adc
fbstp
pop
addr16
out
add
cs
sbb
jmp
movlps
scas
lds
fmul
sbb
leave
repz
enter
call
rol
and
cmp
movs
data16
scas
push
cmp
test
xor
retf
adc
sub
sub
inc
jo
test
and
and
xor
imul
rol
data16
aaa
sub
xchg
jb
hlt
leave
nop
loop
loopne
xor
add
and
pop
cmovl
and
into
nop
adc
shl
inc
rol
inc
jo
shl
shl
pusha
popa
loopne
adc
nop
jb
ret
and
ds
lock
mov
mov
jle
adc
cs
or
xchg
imul
pop
test
inc
cwde
or
mov
sti
loope
test
jnp
push
pop
sti
xor
mov
mov
xchg
dec
pop
jnp
mov
sub
adc
xchg
dec
adc
stos
stc
retf
mov
sbb
jge
les
mov
add
repnz
push
loopne
mov
sbb
pushf
ficom
xchg
push
push
data16
rcr
mov
jg
jmp
xchg
cmps
mov
test
adc
mov
push
out
add
ret
out
sub
pop
es
cmp
or
ds
js
mov
cmp
mov
ret
(bad)
push
clc
lds
fdiv
fdiv
std
icebp
mov
(bad)
stc
xchg
xor
xor
cmp
scas
stos
push
retf
xor
pushf
test
les
adc
add
daa
fsubr
mov
dec
mov
sub
std
pop
mov
inc
mov
arpl
xor
and
cwde
adc
test
or
sbb
cmp
dec
dec
add
mov
pop
rsm
dec
inc
es
push
xchg
int3
jmp
jp
mov
jmp
(bad)
push
xlat
loop
popa
cmp
pop
aaa
sub
shr
nop
adc
adc
dec
lahf
cld
or
add
ja
hlt
mov
rcl
(bad)
push
repnz
icebp
fcmovne
in
repnz
mov
fisttp
std
cmps
sub
out
dec
sbb
mov
retw
and
mov
dec
cld
dec
push
sbb
mov
and
add
sbb
fsubr
shl
rcl
jno
icebp
xor
xor
add
mov
adc
jp
adc
retf
ins
add
cdq
mov
jo
cmp
pop
dec
aam
sub
call
into
data16
sbb
aas
shl
xchg
sub
or
and
jae
imul
popf
cmp
add
xor
sub
cld
push
rcr
cmp
sub
adc
jge
or
xchg
test
fnsave
adc
jmp
cmp
mov
and
aad
mov
idiv
fbld
and
sti
jl
pop
xchg
scas
mov
fist
and
movs
aad
(bad)
sub
out
ret
pop
fcom
pop
mov
jb
movs
dec
cmp
cli
mov
js
mov
outs
inc
cmp
lods
aas
mov
push
cmp
mov
(bad)
cmc
call
or
jmp
fmul
sahf
(bad)
cmp
sar
nop
rcl
sub
data16
or
aaa
adc
movs
xor
dec
jbe
cmp
push
cdq
dec
mov
lds
jbe
add
aam
or
xor
repnz
pop
repz
jp
test
lock
imul
leave
pushf
fild
mov
ins
in
shl
inc
jp
lds
(bad)
fdiv
fst
sub
adc
(bad)
int
mov
call
into
loope
stos
lea
sbb
ftst
add
sub
jecxz
fsub
mov
push
jno
mov
dec
cli
add
xor
data16
in
cdq
cld
in
adc
pusha
aaa
test
int
sbb
adc
push
lds
test
dec
jecxz
(bad)
cld
sahf
lds
leave
cdq
push
mov
adc
mov
fsub
adc
jmp
rol
mov
data16
in
dec
sub
(bad)
pop
mov
je
(bad)
rol
xchg
xor
scas
(bad)
sbb
push
js
mov
les
test
sub
fs
and
inc
pop
mov
cld
(bad)
push
jo
loopne
mov
cs
sub
xor
stos
push
mov
and
lods
sub
outs
pop
cmp
cmp
aaa
mov
xchg
and
xchg
mov
push
data16
adc
mov
enter
adc
mov
and
iret
mov
dec
push
scas
aas
dec
neg
movs
xchg
mov
cmp
aam
cmps
sub
fwait
cmp
pop
adc
push
push
cdq
dec
adc
push
cmp
call
mov
addr16
ds
and
pop
mov
pop
sub
test
fs
mov
mov
test
lods
arpl
mov
xchg
sbb
test
sbb
xlat
jp
sub
fisttp
jle
push
lahf
inc
cmc
add
push
shl
jge
or
outs
(bad)
daa
imul
mov
rol
jb
xchg
inc
mov
xor
in
jge
rcr
xchg
popa
adc
js
inc
pop
ins
cwde
ret
retf
in
adc
push
pop
int3
into
popa
jnp
sbb
pusha
icebp
mov
and
xchg
pusha
jo
mov
inc
rcl
xor
and
jecxz
je
jecxz
inc
inc
into
mov
xchg
pop
fadd
nop
inc
rol
cld
(bad)
faddp
sbb
pop
pop
pop
sbb
fild
daa
cmp
adc
and
push
or
dec
nop
retf
mov
aad
pop
add
cmp
ss
repnz
js
ja
les
mov
xchg
fucom
cmps
adc
bound
xchg
loope
sahf
push
mov
push
in
dec
jo
mov
shl
std
imul
cmp
bound
or
adc
xor
add
mov
sub
loop
xchg
nop
push
enter
and
push
jo
mov
lds
add
mov
and
loop
jp
addr16
xor
daa
and
icebp
hlt
dec
pop
xchg
sti
call
cmps
dec
test
or
inc
lahf
out
in
(bad)
je
aad
sbb
cli
xor
jae
add
out
icebp
pop
mov
sub
and
mov
sub
sub
loop
ds
or
mov
mov
inc
pusha
xchg
push
loopne
pop
rcl
repz
cmp
cmp
sbb
sbb
sbb
or
fldenv
outs
jb
xchg
xchg
retf
das
dec
cmp
xor
mov
push
ficom
and
or
inc
xchg
sub
loop
data16
mov
cmp
test
leave
mov
pop
fdivr
push
pop
cmp
cld
out
sbb
jl
imul
xor
mov
hlt
xor
fidiv
(bad)
(bad)
pop
dec
jnp
sbb
pushf
jmp
arpl
scas
(bad)
shr
dec
(bad)
pop
movs
mov
imul
pop
push
out
call
jae
dec
fsubp
outs
sti
sub
dec
leave
fnstcw
sub
or
cmp
ins
mov
sub
stos
or
jmp
cs
mov
xchg
fild
sub
je
shr
mov
pushf
xchg
xchg
sahf
cs
(bad)
pop
add
std
lods
xchg
xor
(bad)
and
sbb
data16
pop
mov
fdivr
pop
popf
push
pusha
call
sub
cmps
inc
fwait
shr
sti
imul
mov
ins
inc
mov
ins
mov
dec
mov
movs
je
stos
mov
lods
imul
dec
daa
push
adc
mov
pop
fldcw
hlt
pop
jae
out
and
xor
dec
cmp
into
lods
int
es
(bad)
sahf
inc
xchg
adc
push
add
jg
mov
cmps
adc
mov
retf
ja
iret
(bad)
mov
and
test
jne
push
sbb
cmp
ds
xchg
mov
push
xor
push
pop
lods
imul
repz
pop
into
push
inc
(bad)
sub
sbb
push
cmp
mov
in
sar
cmp
jbe
iret
xor
mov
pop
dec
hlt
aaa
xlat
sbb
sahf
lahf
arpl
stos
lock
mov
push
retf
rcr
packssdw
dec
popf
mov
pop
nop
mov
xlat
push
out
adc
push
pop
dec
push
push
mov
loopne
bound
pop
lea
(bad)
pop
popf
and
fsub
mov
jle
test
mov
mov
test
push
inc
es
nop
pop
mov
and
pusha
std
fmulp
and
mov
test
mov
dec
xchg
ret
cmp
pop
pop
fwait
cdq
xchg
cmp
sbb
or
xor
jl
mov
aas
ins
xchg
stc
clc
xadd
mov
and
loope
imul
mov
jle
ret
cmc
jmp
push
ret
xlat
jne
xor
push
(bad)
cmp
pop
sub
ret
jl
jecxz
fadd
(bad)
push
imul
cwde
or
jo
push
mov
inc
xor
(bad)
or
popf
sub
int
mov
fisttp
ret
jo
scas
jle
push
and
loop
in
sub
cmps
mov
push
mov
shr
or
jecxz
push
or
bound
sub
xor
push
or
adc
mov
cmp
cmp
or
test
clc
jmp
retf
sbb
jecxz
rcl
pop
jge
int
push
add
cmp
stos
jmp
xchg
jae
dec
icebp
cmp
add
fucom
div
mov
cmc
in
xor
and
cmp
std
mov
arpl
cmp
or
sbb
les
mov
jge
pop
mov
mov
or
mov
xchg
pop
adc
ds
mov
inc
inc
sar
push
add
daa
inc
add
int3
out
mov
fisubr
xchg
mov
mov
jp
call
fist
sbb
mov
xor
mov
ret
(bad)
adc
fucom
popf
jns
pop
xor
jo
fidivr
nop
inc
xor
mov
pusha
and
xchg
pusha
jo
xor
loop
inc
arpl
mov
xchg
and
leave
popa
inc
hlt
rcl
rol
adc
arpl
int
imul
cs
jbe
int
jo
lea
jmp
mov
loope
push
inc
jge
sub
mov
sub
pop
xchg
in
mov
jmp
fisttp
outs
dec
ss
push
pop
mov
mov
(bad)
in
sbb
in
ins
xor
cmps
ds
lods
psubq
call
movs
push
lock
cdq
xchg
icebp
shl
push
lods
pop
repz
les
sbb
mov
int3
ds
fs
push
out
bound
cmps
in
sbb
cmps
cld
loope
(bad)
in
push
push
xchg
xchg
and
and
xchg
adc
jbe
mov
push
and
pop
cmp
jp
stos
fwait
cmp
mov
push
shl
pop
and
mov
js
rol
add
xor
enter
xor
xor
mov
popf
pop
cmp
mov
ret
jmp
push
clc
or
inc
retf
loop
popf
inc
call
cli
xor
ret
jecxz
adc
jp
dec
cld
into
test
pop
jne
movs
adc
test
mov
std
fidiv
ror
nop
repz
bound
sbb
mov
ror
call
push
cmp
xchg
adc
fidiv
ror
adc
pop
add
cmps
test
sbb
mov
jg
sbb
mov
js
aaa
or
enter
stos
dec
mov
fiadd
outs
iret
mov
movs
cvtdq2ps
cmps
addr16
lods
out
inc
add
cmp
and
or
pop
xchg
loope
loope
jg
mov
push
or
mov
shl
mov
arpl
xchg
pop
and
inc
or
sbb
icebp
xchg
add
pop
aad
in
cs
adc
ins
in
add
xchg
add
ret
jp
cmp
mov
scas
mov
enter
loope
hlt
arpl
xor
popa
or
jle
jge
mov
cmc
sbb
and
cwde
jge
aam
aad
pop
test
dec
inc
cmp
and
sub
popf
std
int
movs
pop
cmp
mov
push
cwde
mov
retf
lods
pop
mov
push
or
inc
in
mov
sbb
icebp
icebp
xchg
sbb
mov
push
popf
mov
push
mov
pop
sub
test
(bad)
pop
pop
and
push
xor
std
into
jmp
ret
jo
adc
mov
jne
loope
(bad)
repnz
test
(bad)
(bad)
and
xor
push
inc
fistp
add
es
dec
pop
cdq
(bad)
std
arpl
add
sbb
jno
mov
icebp
fist
push
sbb
jmp
or
lahf
bndstx
pop
jb
clc
or
adc
lods
sbb
es
mov
adc
sahf
(bad)
aas
test
cmps
xor
mov
sti
test
in
int
and
stos
sub
xor
loope
xlat
mov
test
vmovlpd
bound
jmp
jnp
mov
push
out
out
in
xor
cwde
inc
mov
aad
imul
dec
(bad)
dec
pop
lahf
pop
mov
stos
loope
xchg
dec
(bad)
push
ins
inc
loop
call
lods
xchg
xor
inc
repz
mov
cmc
xor
add
fwait
cli
and
xchg
repnz
and
pop
lds
mov
sub
ss
scas
out
adc
mov
or
jle
ja
push
xor
fidiv
push
mov
push
mov
imul
sbb
push
gs
test
or
dec
sub
les
xchg
test
daa
rcr
cmp
add
fnstcw
mov
aam
out
(bad)
sti
scas
cwde
imul
cmc
or
mov
lods
not
loop
repz
popf
mov
push
dec
stc
push
std
fimul
sbb
lea
aam
jp
sahf
pusha
stos
int3
xor
les
lds
ror
ins
cmp
xlat
shr
sti
jns
out
jnp
sub
push
dec
cdq
aad
push
fwait
pop
cld
add
cmp
int3
ret
aaa
sub
cmp
inc
nop
cmp
sar
shl
jmp
out
jmp
dec
xor
popa
or
mov
cld
std
inc
dec
add
inc
cmp
loopne
adc
lock
xor
jle
int3
imul
push
loope
xchg
push
dec
and
push
shr
repz
dec
cmp
xlat
(bad)
pop
(bad)
(bad)
xor
scas
mov
pop
movs
mov
xchg
jge
inc
in
shl
(bad)
xor
out
cmps
sub
cld
push
stos
sub
(bad)
add
aas
xor
inc
xchg
not
and
ss
push
call
mov
and
cmp
enter
jmp
cmps
add
icebp
inc
or
jbe
inc
pop
mov
daa
push
xchg
jnp
(bad)
and
loop
rcl
pop
xor
mov
mov
shl
or
lds
gs
movs
xchg
ffree
cwde
mov
xchg
or
adc
adc
rol
push
xchg
or
movs
int3
jl
adc
cmp
push
xor
xchg
fisttp
lahf
and
mov
ss
aam
imul
sbb
pop
lods
xor
mov
test
jmp
sbb
ins
cmp
pop
aam
jns
mov
loopne
and
inc
(bad)
cmp
jmp
and
dec
aaa
popf
xchg
sub
adc
ja
or
shl
mov
jnp
push
int3
test
mov
inc
inc
retf
mov
dec
ins
movsx
xchg
sahf
movs
fwait
sub
sti
imul
in
push
fs
stos
dec
ins
cli
inc
inc
xchg
ror
lods
mov
jns
aas
dec
xor
dec
jl
ss
add
push
shl
shl
or
pop
add
lea
sbb
or
sbb
or
je
or
xor
inc
call
in
mov
push
push
lods
adc
(bad)
pop
dec
fbld
xor
cmp
dec
arpl
es
js
psubusw
sub
cmp
pop
dec
inc
adc
jle
sbb
fcomi
sbb
ror
scas
mov
cwde
das
pop
add
adc
mov
sbb
retf
fisub
mov
sub
and
mov
push
and
cmp
loopne
mov
xchg
jno
shl
xor
mov
xchg
and
xchg
push
popa
jecxz
inc
(bad)
shl
rol
push
arpl
enter
mov
(bad)
inc
in
inc
dec
(bad)
mov
jbe
rcl
rcl
arpl
icebp
and
jle
sbb
test
call
fld
add
movs
fstp
add
hlt
pop
outs
and
lods
jno
pop
push
sbb
shl
mov
pop
lock
(bad)
dec
or
sbb
mov
sti
dec
xor
sbb
pop
mov
push
loope
pop
dec
mov
enter
outs
or
pop
jmp
push
mov
mov
jp
add
repnz
or
jecxz
or
push
dec
sub
loopne
adc
dec
int
icebp
mov
xchg
sbb
mov
ds
push
mov
lods
xor
pushf
inc
lods
mov
jmp
out
lahf
sub
adc
xchg
scas
add
dec
adc
aas
mov
mul
or
(bad)
add
inc
mov
sub
xchg
xor
sbb
or
out
xor
scas
lock
xchg
das
movs
popf
in
xchg
inc
pop
adc
clc
cmc
cli
jg
push
dec
jns
push
sti
add
dec
in
rcr
cmp
sar
xor
dec
frndint
cld
mov
mov
pop
jg
(bad)
dec
inc
aaa
dec
xor
push
or
pop
sub
cmp
pop
iret
xlat
mov
test
mov
retf
inc
xchg
mov
dec
sbb
or
push
je
test
adc
lea
inc
nop
jnp
popf
retf
outs
or
jmp
pop
das
xor
std
xchg
ror
mov
xlat
ret
movs
leave
jmp
out
jmp
lea
xor
idiv
pop
scas
add
stos
mov
cmp
push
out
sub
sbb
mov
or
push
or
xchg
(bad)
imul
jno
cmp
or
pop
xchg
das
cmp
sbb
retf
or
adc
inc
leave
sahf
lock
cwde
lock
mov
and
call
mov
test
cmp
(bad)
adc
jns
hlt
or
jle
(bad)
pop
(bad)
movs
and
mov
jo
std
mov
lods
int
ins
movs
sbb
dec
mov
or
pushf
shl
stos
fwait
js
push
and
push
fcom
aam
std
xchg
mov
loopne
sar
into
out
fldcw
push
imul
mov
call
mov
mov
mov
sbb
mov
pop
fwait
lock
mov
out
mov
stc
cli
mov
test
scas
pop
mov
jl
pop
xlat
into
aad
int3
push
cwde
jle
or
adc
rol
sahf
(bad)
data16
ins
cld
pextrw
dec
mov
aas
vcvttsd2si
mov
popf
(bad)
loop
cmp
xchg
imul
xor
mov
mov
mov
mov
sub
mov
(bad)
sbb
sbb
(bad)
jl
shl
mov
pop
out
jp
mov
add
adc
test
cmps
jge
daa
int3
adc
pop
in
stc
cwde
jns
xchg
and
jmp
jbe
int3
sbb
inc
ds
and
sti
pop
stc
out
mov
dec
adc
cs
sti
xchg
add
sub
jg
cmps
or
sub
in
scas
inc
std
loop
enter
fdivrp
imul
div
inc
ds
jmp
popa
mov
fstp
ror
push
test
mov
add
push
(bad)
push
add
cmps
lahf
pop
repnz
in
jae
xchg
pop
jmp
jmp
jo
mov
mov
popf
dec
push
jb
(bad)
fnsave
cmc
jmp
adc
xor
hlt
xor
jg
sbb
imul
xor
fwait
in
cmps
call
mov
sub
adc
pop
sbb
cmps
rol
jns
inc
add
cs
mov
bound
(bad)
push
xchg
cmp
xchg
cmps
scas
test
imul
cmp
outs
and
mov
arpl
out
and
jnp
sbb
jge
pop
mov
mov
xchg
mov
loopne
dec
and
out
xchg
adc
adc
xor
inc
add
in
inc
std
nop
outs
rcr
daa
or
jb
and
(bad)
pop
mov
jae
mov
popa
ins
lods
ud1
inc
or
cmp
add
dec
dec
dec
mov
bound
cdq
xchg
loopne
xchg
push
nop
xchg
mov
cmps
xor
jl
call
stc
push
out
xchg
ret
pop
push
push
sub
je
adc
or
mov
and
clc
js
and
jb
push
popf
pop
ss
add
stos
adc
sub
pop
mov
dec
xchg
sahf
lds
pop
and
fcmove
pushf
lock
mov
(bad)
repz
jle
mov
mov
jo
sbb
popf
xchg
shl
outs
dec
in
xlat
mov
sahf
mov
out
sar
and
cld
retf
mul
push
add
jnp
sub
inc
mov
jmp
inc
ins
add
pop
adc
lods
test
sub
add
xchg
jmp
add
sbb
cs
cmps
sbb
and
cmps
ret
and
add
cmps
push
push
cli
(bad)
repnz
jne
adc
add
dec
jle
push
mov
cmps
hlt
sub
sub
inc
pop
repnz
inc
cmps
pushf
stos
pushf
add
and
pusha
lods
sbb
adc
sbb
out
mov
cli
int3
into
xor
sbb
and
pop
jbe
inc
mov
sar
fs
jge
inc
sub
lods
mov
ja
cmp
(bad)
jmp
xor
pop
xchg
fsub
int3
add
and
sub
js
cmp
add
xor
imul
test
pop
outs
fwait
mov
xlat
fstp
cli
push
enter
in
div
enter
bound
ja
aad
jmp
xchg
cmp
mov
push
sti
jecxz
ins
pop
popa
jmp
add
mov
mov
and
leave
mov
dec
jmp
inc
adc
lahf
push
stos
mov
cmps
xor
jge
ja
cmp
scas
ds
into
dec
fsubr
xchg
pop
imul
sbb
loope
or
(bad)
loopne
sbb
pop
aad
daa
std
call
push
cmc
daa
test
inc
add
out
fsubr
sti
add
data16
mov
call
pop
call
add
pop
push
adc
mov
jecxz
rol
cmp
iret
pop
std
jecxz
fdivr
aas
hlt
mov
mov
repz
add
pop
jnp
fdivr
(bad)
and
loopne
not
je
push
shl
mov
push
sahf
mov
sub
sub
inc
aas
pop
mov
mov
icebp
outs
out
push
inc
dec
mov
or
pop
pop
mov
movs
add
and
add
xor
fcmovne
cmp
add
sub
je
scas
mov
mov
aad
pop
xor
ins
mov
imul
pop
push
jp
dec
into
test
std
dec
jno
stos
sub
mov
jl
jno
mov
ins
pand
test
das
movs
adc
ins
das
cmp
mov
xchg
and
scas
inc
xchg
jl
mov
bound
es
clc
mov
cwde
addr16
ret
and
fcom
sbb
xlat
hlt
out
scas
push
cli
adc
and
mov
mov
gs
daa
jb
je
mov
adc
es
push
xor
ds
adc
(bad)
mov
popf
fisubr
jbe
or
inc
xor
mov
aad
and
or
inc
call
out
sbb
jo
(bad)
(bad)
and
repz
mov
push
bound
xchg
jl
push
push
bound
pusha
cmp
or
or
outs
popa
inc
das
jge
mov
in
rcl
rcl
jmp
xchg
or
je
lock
add
dec
stos
jbe
inc
cmp
mov
pop
cmps
(bad)
jmp
or
jecxz
in
mov
cmc
or
hlt
mov
pop
cmps
(bad)
jp
push
cmc
dec
pop
loope
dec
jmp
pop
cmps
lea
call
cmp
or
ins
mov
aaa
pop
and
repnz
xchg
fs
sti
mov
arpl
pop
mov
loope
movs
ret
scas
dec
int
inc
pushf
lea
rol
jns
dec
xor
xchg
adc
es
cmp
loope
mov
xor
mov
jle
mov
inc
into
xchg
xchg
dec
addr16
xor
sti
std
popf
inc
into
daa
mov
fstp
cld
cmps
adc
movs
pop
mov
xor
gs
sub
test
ret
adc
jge
push
imul
inc
jge
stos
mov
ds
sar
addr16
mov
cmp
lods
dec
int3
inc
xor
call
fisub
push
inc
cmps
jae
add
mov
dec
sbb
test
test
pop
loope
lods
adc
pop
jmp
test
popa
bound
dec
inc
pop
ds
jp
sti
mov
cmps
jmp
ss
jo
jae
push
aas
add
jecxz
cmp
cmp
or
inc
jmp
or
fistp
push
lods
or
mov
sti
pop
data16
xchg
mov
xchg
sbb
pusha
outs
jl
aaa
enter
jmp
movs
mov
es
push
mov
cmps
xchg
mov
ins
shl
jecxz
mov
in
pop
xchg
ret
xor
out
or
sar
std
ret
push
cmc
and
call
sbb
cmps
add
dec
sti
sbb
jmp
sahf
add
pop
sbb
adc
call
addr16
adc
pusha
push
mov
aas
sub
int
movs
sbb
(bad)
out
pop
xor
pop
xor
test
inc
shr
shr
retf
addr16
mov
push
xchg
lock
and
add
ds
es
popf
pop
test
js
fs
imul
lods
retf
mov
ret
adc
fidivr
popa
test
adc
or
sub
add
xchg
mov
cmp
(bad)
ss
in
js
inc
in
add
mov
mov
or
inc
mov
clc
xor
clc
cmp
hlt
test
cdq
jae
fdiv
jnp
or
mov
sub
shl
loope
xor
and
push
jno
scas
data16
fnstenv
sbb
dec
std
lods
xchg
cs
add
push
mov
pop
inc
push
sub
sbb
jl
test
or
call
cmp
sti
mov
retf
sar
pop
pop
adc
mov
sub
sub
rcl
aad
cmp
sbb
xor
js
mov
adc
xlat
cmps
mov
push
adc
jecxz
cmp
ins
push
(bad)
loop
hlt
rcl
mov
es
push
mov
inc
idiv
ss
jae
jle
outs
mov
rcl
lahf
rol
lea
stos
hlt
lahf
cmp
aam
push
add
mov
cmp
clc
in
scas
inc
mov
ss
xchg
mov
ret
cwde
fcomp
iret
fisubr
aam
adc
pop
and
fist
retf
lahf
ror
addr16
fwait
pushf
mov
sub
test
adc
sub
pop
bnd
sub
mov
mov
adc
add
repnz
pusha
clc
and
outs
push
fist
hlt
sbb
leave
add
jnp
dec
inc
js
out
mov
cmp
mov
arpl
fst
xor
sub
cmc
hlt
xor
mov
retf
and
push
cmp
ds
pushf
out
adc
int
push
aam
jmp
xchg
mov
mov
aaa
loopne
fist
test
dec
movs
scas
mov
push
mov
jbe
or
mov
std
rol
in
in
ss
inc
push
fld
jmp
sbb
je
mov
je
retf
and
sbb
mov
daa
xchg
xor
mov
ror
outs
fisttp
jp
jl
jg
or
jnp
push
movs
mov
in
sub
jns
pop
(bad)
pop
jecxz
outs
lock
mov
outs
mov
fld
scas
sar
jl
pushf
inc
push
dec
aaa
out
pop
sub
into
daa
adc
push
stos
loope
das
mov
in
xchg
mov
pop
push
mov
aam
xor
call
das
sbb
iret
cmp
cmp
add
out
ins
jl
inc
or
adc
inc
mov
adc
or
and
jb
fistp
inc
lock
fidivr
sub
push
jne
cmc
push
mov
pop
rol
mov
shl
sub
push
push
aam
xor
push
lea
inc
cwde
aam
in
sbb
add
mov
pop
(bad)
jmp
and
mov
jno
adc
inc
sti
jbe
enter
movs
cmps
push
rsm
adc
add
mov
pusha
sbb
or
retf
imul
test
or
out
mov
fst
mov
mov
and
daa
push
dec
ss
jbe
fcom
adc
outs
lahf
inc
inc
jg
pop
pop
jg
and
jle
xchg
jns
lar
nop
lods
xor
mov
cwde
mov
sbb
inc
scas
into
shl
cmp
or
movsx
out
push
sub
(bad)
ret
push
mov
jne
into
or
call
or
jle
inc
add
and
adc
leave
shl
(bad)
jecxz
add
mov
or
mov
xor
imul
fidiv
add
push
xor
mov
pusha
jo
xchg
pusha
jo
xor
fadd
jb
into
mov
ins
shl
inc
xor
cmps
cmps
or
(bad)
mov
sbb
cdq
dec
add
bound
gs
(bad)
xchg
mov
jp
jae
fneni(8087
inc
dec
jno
daa
pop
jmp
inc
mov
pop
out
lods
aam
sar
call
cmp
push
stc
xor
lds
mov
mov
cmps
in
pop
data16
stos
cmp
pop
push
loopne
retf
int
mov
js
je
lods
or
push
hlt
repnz
xchg
mov
mov
mov
pushf
pop
aam
lods
(bad)
fidiv
rol
ret
stc
mov
shl
mov
xor
pop
stos
icebp
cmovl
xchg
faddp
adc
xchg
mov
in
ja
jmp
pop
fldl2t
jno
xor
mov
jecxz
and
cmp
adc
mov
sar
test
sti
pop
pop
pop
ins
xor
mov
sti
mov
inc
push
or
aad
mov
mov
cmp
mov
inc
lock
xor
and
pushf
jno
sahf
jbe
mov
push
pop
in
cmp
repnz
hlt
out
jg
addr16
mov
fcmovu
sbb
jle
or
loop
inc
jl
mov
dec
sbb
retf
mov
enter
in
cmp
addr16
mov
jb
jbe
push
push
mov
lahf
lods
int3
xor
inc
xchg
repnz
sub
cli
sub
lods
es
sbb
movs
fadd
cmps
enter
lods
fisubr
movs
iret
ds
jno
jge
mov
push
shr
jle
mov
inc
js
inc
bnd
or
mov
or
or
ds
sbb
adc
and
outs
lock
jae
inc
jp
(bad)
bound
jecxz
inc
data16
sub
sbb
cmps
pusha
add
mov
add
fs
fsubr
xchg
enter
ds
int
add
dec
outs
jae
repz
sbb
les
shl
xor
sar
sub
out
and
jmp
leave
push
mov
sti
out
xchg
jno
aaa
xor
inc
xor
mov
xchg
cmp
popf
or
in
xchg
(bad)
cmps
std
push
and
adc
pop
jmp
cmps
sub
adc
data16
mov
fst
adc
in
mov
neg
xor
sub
int
sub
and
push
xor
dec
fbstp
jp
(bad)
cmp
and
call
dec
xor
bound
daa
(bad)
jns
cmp
into
jbe
retf
mov
inc
jae
les
lock
xchg
out
pop
push
fstp
ins
sbb
ret
movs
dec
dec
leave
(bad)
sub
(bad)
mov
test
iret
adc
movs
mov
pop
inc
xor
mov
jp
dec
sub
hlt
pop
fnstsw
clc
fcomp
jns
pop
mov
xchg
xor
fs
push
fsubr
mov
and
xchg
ret
hlt
push
xchg
test
iret
leave
xchg
les
push
pop
out
push
xchg
add
call
mov
xchg
push
sbb
jno
pop
lods
(bad)
sbb
test
and
neg
(bad)
pop
or
popa
std
add
inc
jge
sti
mov
aaa
in
popa
pop
fst
dec
lods
add
je
nop
in
mov
or
mov
shl
ficomp
int3
pop
pop
mov
pop
xchg
inc
popf
sbb
mov
jl
mov
retf
inc
jecxz
pushf
test
enter
xor
lods
push
outs
cwde
xor
push
ja
xchg
jne
scas
outs
ret
int
sub
bound
cdq
push
repnz
in
imul
push
cs
or
lds
out
inc
xor
arpl
adc
(bad)
xor
icebp
add
add
pushf
jb
out
mul
push
(bad)
or
jmp
add
cdq
mov
xor
cmp
xchg
ret
push
jecxz
mov
mov
clc
movs
cdq
jp
ror
adc
je
jae
push
leave
xchg
inc
jmp
inc
into
sbb
push
mov
xchg
add
dec
add
xchg
xchg
clc
pop
rcr
push
mov
fnstcw
ins
mov
mov
mov
into
stc
out
shufps
jle
xor
test
ret
mul
aas
fdiv
cmp
fcmovnb
mov
cmp
xchg
repz
xor
in
in
sbb
adc
jo
xchg
push
xchg
cli
scas
jns
inc
xor
test
retf
pop
pusha
call
jle
jmp
xor
and
dec
mov
iret
sub
push
test
daa
dec
jo
cwde
pop
adc
adc
stos
pop
cmp
rol
pop
adc
jbe
lods
dec
add
ffreep
mul
pusha
add
ret
mov
jno
movs
adc
sahf
aas
add
xchg
imul
xchg
xchg
shl
inc
cmp
les
cmps
add
sbb
popf
dec
mov
ins
xor
adc
je
inc
or
push
dec
add
push
cmp
xor
push
lahf
xor
pushf
out
sahf
mov
sbb
inc
and
pop
adc
clc
mov
dec
add
nop
xchg
jmp
pop
add
cmps
pop
sub
lock
das
mov
add
or
mov
popf
or
aam
inc
mov
sbb
and
mov
inc
xor
pop
and
(bad)
mov
push
ret
push
adc
mov
imul
shl
ret
xchg
mov
aam
xchg
imul
or
add
sbb
sbb
lods
pop
fs
and
clc
arpl
jmp
jmp
std
mov
pop
icebp
pop
add
pop
mov
lds
mul
outs
xchg
outs
out
aam
dec
or
mov
dec
js
pop
je
emms
popf
ret
call
pop
ret
or
fidivr
lea
fcmovnbe
repz
test
movs
fadd
dec
test
lods
je
cld
jmp
movs
in
push
std
mov
xchg
inc
nop
arpl
je
loopne
shl
jle
xchg
cmp
rol
push
ins
mov
mov
push
(bad)
sbb
adc
mov
adc
xlat
push
adc
lea
icebp
outs
dec
shl
jne
stos
aad
xor
std
mov
jmp
repnz
sub
aam
cmp
add
or
inc
jae
xchg
lods
loop
(bad)
ins
mov
mov
mov
adc
int
mov
push
cld
inc
mov
mov
test
add
pop
jbe
adc
scas
mov
xchg
movs
sub
xlat
push
cdq
out
sbb
loopne
fdivr
fs
adc
mov
or
lea
dec
mov
adc
ficom
jmp
push
and
lods
add
jo
gs
mov
push
push
and
out
fwait
pop
xchg
sbb
mov
cld
or
push
mov
inc
sbb
mov
inc
sub
sub
xor
or
cdq
xchg
and
sbb
pop
jno
data16
daa
mov
xor
ret
add
xchg
and
pusha
in
inc
add
leave
ss
add
pop
popf
fstp
cmp
data16
fidivr
vandps
(bad)
sbb
fdiv
jae
push
popa
xchg
clc
fs
cmps
test
cmp
out
loopne
movs
mov
(bad)
jl
adc
push
jae
jne
mov
test
jecxz
and
xchg
movs
cmp
jl
retf
imul
cmp
shl
mov
mov
cmp
movs
xor
inc
mov
clc
mov
cmp
in
stos
js
jecxz
mov
fist
imul
repz
sub
js
inc
add
jecxz
fldcw
sbb
(bad)
add
repnz
cmp
in
mov
dec
cli
dec
js
xor
jg
cmp
jp
xor
sbb
arpl
dec
cmp
nop
and
mov
nop
sbb
clc
xchg
dec
rcr
loope
loope
cmp
sub
bound
dec
int
mov
bound
mov
sub
mov
nop
test
pusha
xchg
push
jne
ins
or
dec
pop
mov
test
mov
mov
fidiv
bound
aaa
push
inc
or
ficom
sbb
sub
and
lahf
pop
push
and
push
retf
mov
cli
scas
inc
gs
stos
pop
sbb
imul
jg
cmp
call
add
(bad)
dec
outs
shl
cmp
adc
adc
das
jle
mov
jae
xor
outs
add
nop
mov
cld
stos
enter
xor
mov
xor
pop
mov
xor
retf
push
inc
or
sbb
dec
jnp
or
jb
cmps
jmp
xchg
into
xchg
rcl
sbb
rcl
jnp
icebp
ins
inc
and
jnp
movs
adc
inc
dec
add
adc
or
in
xor
jo
mov
pusha
jno
xchg
lock
push
aad
xchg
mov
cmc
fs
add
mov
loope
pop
push
jne
xlat
gs
or
out
mov
into
ret
xchg
mul
call
(bad)
js
call
and
sbb
ins
xor
push
mov
fnstsw
pop
push
dec
call
rol
je
rcr
xchg
jecxz
in
call
and
pop
mov
and
cmps
cwde
xchg
and
mov
leave
in
dec
neg
lds
xchg
jge
xor
or
fcomip
in
mov
cmp
sbb
pusha
shl
push
icebp
xchg
pusha
jo
xchg
jo
ret
xlat
xchg
jno
leave
xchg
jae
fimul
out
and
pusha
repnz
scas
xchg
pop
lods
call
sbb
scas
fiadd
out
sub
fsub
leave
or
jl
jecxz
std
pop
jmp
lods
inc
clc
and
jl
xchg
xchg
add
idiv
xchg
add
cmps
pop
ret
pop
xchg
adc
add
shl
push
sbb
push
shl
dec
lds
mov
xor
lods
push
fwait
retf
aaa
sub
ret
fcom
mov
retf
stos
push
jno
sti
mov
cmp
ss
loope
loopne
push
repnz
jl
(bad)
iret
sbb
mov
push
mov
mov
sub
add
cmps
dec
out
out
mov
pop
jbe
mov
sub
ins
jge
leave
mov
stos
movs
xor
nop
and
or
pop
ror
mov
mov
test
call
test
xchg
xor
mov
nop
ss
cmp
pop
or
dec
nop
outs
adc
jmp
hlt
loop
cs
loope
(bad)
adc
lahf
popa
lock
cmp
lea
das
push
dec
adc
rol
pop
sbb
mov
in
push
xchg
pop
inc
ficom
pop
mov
push
int
pop
imul
add
or
call
adc
xchg
push
aam
bound
and
mov
cld
test
jmp
icebp
and
jae
cmc
ss
cli
inc
dec
push
pop
std
xchg
push
inc
lds
pushf
ins
xchg
shl
lea
icebp
inc
rcl
inc
ins
push
mov
jmp
mov
adc
retf
push
add
pop
pop
jbe
push
sub
sahf
sub
push
jg
leave
xor
sub
sbb
pop
jne
imul
dec
cdq
stos
in
mov
dec
or
mov
jnp
add
xor
adc
cmp
pop
xchg
adc
push
jo
xchg
push
into
inc
(bad)
std
mov
jae
mov
and
mov
and
fidiv
push
mov
xor
lods
mov
test
cmps
xor
xor
pop
inc
sub
sbb
jo
push
xchg
and
test
(bad)
push
lock
pop
(bad)
add
fnsetpm(287
mov
fs
jl
fist
cmp
imul
adc
dec
mov
js
pop
pop
or
mov
sub
int3
imul
xchg
nop
jmp
(bad)
sahf
inc
sar
sbb
sbb
inc
dec
imul
mul
pop
jmp
mov
arpl
sahf
mov
mov
shl
mov
into
test
xor
cmp
jno
mov
adc
in
mov
jle
xchg
jo
unpckhps
fwait
mov
ret
mov
ja
sbb
bound
shl
rol
test
jl
push
pushf
xor
inc
mov
jle
cmps
xchg
push
pusha
mov
dec
mov
inc
jne
jns
jae
and
push
mov
in
mov
shl
adc
mov
push
shr
mov
sbb
fimul
aam
mov
inc
push
mov
movs
inc
dec
enter
mov
loop
js
xchg
push
fistp
fistp
scas
xor
pop
xchg
retf
nop
push
outs
imul
int3
std
adc
jle
push
int3
cdq
push
movs
(bad)
sbb
es
(bad)
jmp
sub
shl
aam
and
std
sub
mov
inc
mov
dec
lods
mov
daa
xchg
(bad)
bound
std
imul
fwait
ret
dec
sub
add
inc
push
shl
pusha
jo
xchg
jo
rcl
outs
rcl
jns
ficomp
dec
jo
and
call
push
add
lods
cmp
jne
fst
cmp
mov
test
push
cmc
pop
daa
cs
inc
adc
scas
ins
xchg
xchg
stos
xor
cmp
inc
test
(bad)
mov
aad
dec
jmp
cmp
mov
loopne
icebp
xor
leave
mov
enter
push
push
out
cmovl
mov
mov
mov
loop
rcr
mov
mov
xchg
aad
(bad)
jge
pop
jnp
stos
out
cmp
push
cmps
lods
mov
fbstp
ins
cmp
adc
add
jge
(bad)
lods
push
mov
sub
pop
scas
aad
xchg
mov
jg
cdq
jg
idiv
add
inc
cmp
sbb
js
aad
mov
jmp
sub
fadd
xor
sbb
mov
neg
test
mov
test
enter
shl
loopne
push
add
cmp
and
cwde
addr16
daa
fdivr
cmp
mov
xchg
inc
and
inc
(bad)
cmp
mov
data16
pop
(bad)
aam
cmp
scas
sub
ret
test
sar
mov
pusha
mov
push
pop
call
in
daa
push
jge
enter
pop
test
xchg
iret
sbb
cmps
shl
and
mov
push
push
fisubr
inc
mov
aas
xor
inc
bswap
rol
aas
xchg
inc
xchg
sbb
daa
fnstsw
or
aas
xchg
mov
lock
test
pusha
enter
js
retf
sub
cli
add
(bad)
fidivr
adc
push
call
xchg
sub
(bad)
ret
test
sbb
(bad)
clc
push
jbe
sahf
loope
aaa
or
fadd
cmp
mov
hlt
xor
mov
sub
pop
fdiv
mov
icebp
jp
dec
arpl
fwait
jo
popa
fwait
mov
xor
xor
ss
sub
mov
sbb
lea
and
mov
dec
and
scas
mov
mov
mov
or
enter
movs
cmp
retf
push
cmp
adc
cmp
retf
enter
pop
imul
push
retf
and
dec
push
lods
(bad)
loope
iret
dec
mov
inc
dec
fnstenv
jns
ret
jmp
fnstsw
rcr
push
cs
jnp
bound
retf
push
or
fisttp
(bad)
cli
add
mov
mov
mov
call
adc
psubw
sub
jae
xchg
fisubr
in
mov
push
out
fsub
or
jbe
ror
cdq
or
pop
xchg
aaa
dec
jmp
sub
addr16
push
(bad)
xor
sar
lds
ja
bound
mov
rcr
ret
loop
mov
arpl
mov
ret
inc
push
div
jle
inc
(bad)
jle
shr
iret
xchg
pop
jmp
jmp
cli
frstor
push
and
mov
scas
iret
pop
cmc
push
ret
and
enter
push
xchg
gs
ret
pop
imul
and
push
add
stos
jg
icebp
inc
dec
cmp
rcl
xor
sub
mov
std
mov
ins
imul
mov
data16
repz
dec
out
cmp
cmp
(bad)
adc
sbb
push
xchg
sub
into
cmp
ss
pushf
iret
push
jbe
jle
pop
pusha
aaa
dec
stos
shl
xor
punpcklbw
mov
jo
or
rcr
repz
fistp
mov
jg
lods
out
adc
and
imul
and
mov
retf
dec
xchg
add
dec
sbb
clc
out
xchg
lock
lahf
xor
push
fwait
mov
cmp
loop
mov
imul
aam
mul
xlat
call
es
sahf
sub
mov
adc
xchg
(bad)
out
js
daa
mov
cs
sub
icebp
or
(bad)
nop
sbb
pop
out
cmp
icebp
gs
push
xchg
test
inc
dec
push
enter
ret
inc
pop
bound
jno
ds
push
and
aam
repz
jmp
xchg
jbe
jb
clc
pusha
shl
stos
fdivr
adc
in
fidiv
push
push
into
xor
mov
inc
xchg
jno
shl
xor
mov
jo
lds
jbe
retf
nop
bound
call
popa
pushf
jo
rcl
cmp
xchg
cmp
lock
dec
pop
pop
mov
pop
call
push
inc
adc
sti
inc
mov
sbb
je
xor
and
stc
test
mov
push
push
jl
xchg
xor
push
in
jne
jno
mov
icebp
lock
sbb
arpl
loop
ins
aas
pop
imul
aas
mov
(bad)
sub
jno
popa
pusha
test
ret
mov
mov
mov
daa
adc
pop
mov
(bad)
and
inc
mov
icebp
fninit
aam
cmps
fcmovnb
mov
fwait
cmp
iret
imul
add
fsubr
in
imul
movs
inc
add
mov
xchg
mov
jno
push
cmps
nop
retf
sub
pop
into
jb
lock
vcvtpd2dq
fsubr
lock
je
pop
aaa
sahf
mov
movs
sar
jge
and
movs
arpl
mov
aam
jl
inc
add
test
cmp
aad
pop
mov
mov
daa
pop
xlat
fild
mov
push
add
push
inc
add
pop
rcl
inc
inc
dec
ror
outs
shr
aad
jae
inc
sub
xor
jnp
test
imul
cmp
in
(bad)
xor
inc
cmp
dec
push
in
and
fs
mov
inc
sbb
push
push
stos
add
lods
loopne
int3
mov
ficom
pop
and
popa
jl
jl
add
shr
dec
pop
sbb
inc
out
or
dec
leave
mov
in
and
push
sbb
adc
(bad)
mov
mov
in
or
jp
ss
rcl
loope
or
pusha
sub
cmp
push
retf
loop
xor
cmp
xor
add
push
inc
into
aas
inc
or
sub
daa
popa
push
lahf
movs
lea
push
daa
xor
jno
xor
cwde
xchg
outs
ror
mov
pop
popa
lahf
cwde
mov
and
add
imul
dec
lahf
jno
mov
std
inc
mov
ins
enter
mov
in
les
pop
mov
sahf
inc
leave
and
sbb
cmp
push
rcr
xchg
jns
ja
mov
jecxz
fsubr
stos
adc
clc
jp
cld
adc
out
retf
stos
mov
add
loope
inc
fwait
xchg
jle
dec
or
daa
adc
fldcw
cmp
lds
jp
dec
leave
sbb
mul
add
(bad)
in
cmp
fwait
xchg
mov
adc
in
out
jno
mov
(bad)
xchg
aad
xor
cmc
mov
mov
ds
stos
nop
into
adc
cmp
movs
dec
fcomi
sub
mov
fldenv
pop
xchg
xchg
xchg
jns
das
add
jb
dec
xchg
xor
mov
pop
xchg
aas
movs
or
push
in
mov
outs
scas
cmc
and
and
outs
cli
mov
lods
mov
(bad)
pop
mov
cwde
out
add
ror
into
stos
xor
add
jl
pop
mov
iret
aas
add
dec
(bad)
sub
mov
dec
pop
push
dec
mov
add
ret
in
scas
xchg
push
dec
das
test
xchg
fsub
mov
test
push
(bad)
push
mov
jmp
add
bound
xchg
mov
js
xor
mov
(bad)
in
or
nop
adc
stos
add
cmp
ja
popa
mov
mov
mov
sub
aas
pop
mov
xchg
pop
adc
mov
add
inc
push
push
jge
cs
outs
adc
inc
shl
jbe
pushf
jae
setle
sub
xchg
pop
std
pusha
inc
xchg
shr
retf
push
dec
and
addr16
pusha
mov
jl
movs
inc
ror
sub
fstp
and
loopne
fnsave
sbb
leave
inc
arpl
addr16
mov
jecxz
mov
pop
fisubr
call
and
adc
add
add
sub
mov
mov
add
pop
cmp
xor
hlt
push
mov
arpl
(bad)
sahf
and
or
cwde
scas
adc
inc
jno
std
cmp
lods
cs
mov
mov
jecxz
push
fwait
sbb
sbb
push
dec
or
das
pop
loop
mov
ror
stos
fsubr
xlat
clc
ret
rol
xor
in
aas
das
popa
and
js
jge
pop
ret
adc
or
sbb
add
dec
add
dec
call
mov
cmp
jl
push
aad
rol
mov
and
and
rcr
xor
gs
jmp
stos
pop
js
popf
xchg
or
sbb
and
adc
(bad)
cwde
jmp
(bad)
movs
out
inc
cwde
mov
iret
or
or
xchg
dec
outs
inc
xchg
mov
gs
hlt
adc
pushf
fadd
sbb
nop
gs
sti
mov
out
jns
push
inc
push
aam
push
mov
int3
add
mov
mov
aaa
add
je
xchg
mov
call
(bad)
pop
sbb
and
fwait
lods
in
jb
js
mov
mov
adc
pop
adc
mov
cmp
shl
sub
dec
out
lods
cmp
outs
jecxz
leave
pop
aaa
imul
mov
mov
cmps
test
xchg
in
fcomp
add
inc
mov
inc
out
outs
sbb
(bad)
sti
and
(bad)
jp
daa
mov
cmp
pop
addr16
sahf
inc
shr
add
sub
(bad)
xor
mov
cld
or
mov
dec
jno
(bad)
out
loope
push
sub
sbb
pop
rcr
jecxz
enter
imul
xchg
and
retf
(bad)
mov
or
cmp
ret
test
in
movs
sub
pusha
adc
push
sub
ror
ins
int
call
jge
mov
push
das
out
push
daa
fcmovnu
cmp
inc
push
scas
out
test
mov
mov
xchg
ret
in
push
jne
jne
cmp
out
mov
adc
xchg
outs
outs
add
stc
push
les
dec
jg
(bad)
in
jo
pop
jmp
xchg
or
add
dec
sbb
scas
push
lds
jnp
mov
xchg
(bad)
sbb
push
jecxz
mov
inc
mov
in
sub
adc
sub
xor
shl
cmps
cmp
mov
add
ins
xlat
inc
mov
inc
mov
adc
jecxz
push
add
popa
jns
pop
stos
outs
shl
lea
jb
movs
xlat
(bad)
xor
test
pop
pop
pop
jb
aad
ret
sub
fwait
add
stc
mov
test
jp
in
aam
push
xchg
mov
sub
pop
imul
and
mov
(bad)
push
jb
retf
mov
pop
mov
sub
repnz
scas
cmps
and
ret
or
dec
fisub
or
rcl
icebp
xchg
adc
in
sbb
imul
xchg
xlat
jno
test
adc
push
mov
data16
mov
pop
test
inc
cs
sahf
mov
and
lea
adc
shl
into
adc
(bad)
xor
int
pop
out
pusha
cmp
aaa
xor
icebp
imul
jb
sar
repnz
cld
aas
xchg
clts
outs
pop
lock
adc
fimul
lods
call
xor
mov
rol
dec
cdq
xor
mov
and
jne
push
xor
push
je
in
mov
pop
lds
in
icebp
rol
inc
sub
pop
in
push
neg
jnp
dec
adc
daa
mov
mov
lods
jg
pop
(bad)
fnsave
pop
xor
imul
mov
js
add
xchg
imul
ror
pop
fnsave
push
and
aad
std
and
fcomp
adc
cli
je
mov
add
stc
arpl
fmul
sbb
cmp
int3
xchg
imul
cmp
lea
fcmovb
cmp
mov
jb
xchg
xor
add
push
(bad)
gs
test
mov
dec
inc
mov
inc
xchg
xchg
jne
pop
nop
mov
xchg
in
sub
xchg
pushf
xchg
sbb
jno
movs
add
cmp
les
add
mov
push
mov
jne
pop
aad
out
ror
mov
pop
xor
mov
loope
or
nop
iret
jno
push
jo
addr16
push
cld
sbb
shufps
rcl
adc
inc
adc
or
repz
pop
push
cmp
push
sub
call
xchg
mov
adc
stos
inc
xchg
out
test
shl
pop
dec
dec
(bad)
js
jns
(bad)
jl
enter
test
(bad)
mov
nop
cdq
out
(bad)
jae
cs
sbb
mov
icebp
in
mov
(bad)
dec
bound
pop
jp
pop
int
test
rcr
sbb
and
xor
and
or
mov
sbb
dec
and
push
add
and
add
or
arpl
jo
xchg
mov
or
aaa
xchg
lds
retf
mov
in
dec
ret
ds
fwait
ja
xchg
mov
outs
mov
adc
data16
cmp
(bad)
hlt
xchg
pop
into
push
xchg
add
mov
retf
(bad)
cwde
fstp
call
push
mov
loopne
cmp
sbb
movs
cmp
stos
outs
sub
adc
dec
or
xor
mov
xor
scas
imul
(bad)
or
xor
std
daa
jl
xor
sahf
imul
ss
adc
stc
shl
cmps
js
jg
xchg
rol
add
repz
xor
jne
pop
mov
cmps
icebp
add
in
scas
adc
stos
in
jbe
jge
outs
enter
mov
in
in
cmc
pop
repz
mov
cmps
pop
jle
ins
sub
sub
mov
(bad)
ror
call
scas
aaa
sahf
jo
add
cmc
cmp
inc
add
mov
fstp
sbb
jne
in
xlat
mov
repz
pop
sbb
inc
mov
fstp
add
mov
out
push
ins
nop
clc
(bad)
jg
std
inc
popf
mov
add
aad
test
sahf
lock
and
sbb
mov
xor
jne
test
jae
lahf
push
scas
push
mov
push
push
stos
popa
in
cmp
cmp
js
stc
jmp
push
in
cli
and
xor
jecxz
pop
cmps
dec
iret
xchg
xchg
enter
mov
sub
cmp
(bad)
sti
mov
daa
adc
jmp
push
popf
rcr
es
icebp
pop
add
hlt
rcr
push
mov
push
jo
mov
mov
(bad)
add
mov
sbb
retf
mov
cli
sbb
add
cmp
xchg
sub
add
pop
push
push
ins
out
xchg
cli
stos
repz
dec
jmp
mov
inc
lahf
sub
add
add
scas
push
(bad)
rcr
push
dec
retf
xor
xor
mov
adc
popa
and
das
xchg
repz
xchg
mov
outs
popa
daa
or
pop
ds
mov
dec
dec
imul
pop
mov
jg
jge
mov
dec
push
xchg
stos
jg
xlat
push
fcomi
mul
stos
aaa
and
mov
mov
cmp
xchg
mov
ret
(bad)
cmp
and
imul
xchg
dec
mov
or
nop
js
gs
ja
mov
push
xlat
sub
lea
jb
inc
lahf
ins
sbb
js
xchg
adc
ret
pop
js
icebp
inc
push
mov
jle
sub
jns
dec
sub
ret
fs
inc
pop
push
cmc
sbb
pop
or
push
or
adc
push
scas
in
push
jae
xor
cmp
mov
jp
mov
xor
mov
or
ins
les
shl
dec
jae
imul
test
fistp
add
mov
hlt
stos
mov
inc
xor
mov
in
mov
std
push
cld
cmp
pop
(bad)
adc
jmp
loopne
lea
inc
clc
repz
fisubr
mov
pcmpeqb
xor
xchg
loopne
rcl
push
test
inc
jo
mov
inc
loope
and
mov
and
xchg
rcl
xchg
xor
rol
push
mov
jno
mov
loope
rcl
shl
popa
lock
add
xor
loopne
popa
xor
mov
lock
shl
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
pusha
outs
jo
adc
shl
pusha
rcl
pusha
pusha
xor
jl
rcl
pusha
rcl
jo
icebp
loopne
xchg
loope
inc
out
adc
pusha
shl
jo
xchg
pusha
jo
xchg
jo
shl
add
ds
mov
and
rol
gs
xor
inc
cwde
and
push
push
cmp
push
mov
stos
adc
fs
xchg
and
mov
movs
ror
cmp
(bad)
push
clc
into
add
sti
rol
and
imul
mov
movs
stos
mov
inc
mov
int3
ins
fst
mov
(bad)
stc
es
cld
repnz
sub
mov
xor
inc
mov
(bad)
fisubr
mov
aad
sub
pop
mov
or
xchg
int3
cli
cwde
cmps
rcl
dec
leave
jae
test
or
sbb
pushf
sti
xor
test
dec
test
and
or
cmc
sub
pushf
rcr
or
dec
push
aad
rol
dec
pop
lea
or
gs
mov
sbb
inc
jb
loope
stos
pop
mov
sub
ss
pop
imul
rcl
fldenv
aam
sbb
je
mov
jmp
dec
cld
test
mov
dec
in
pop
adc
mov
lea
push
shl
fcomp
xchg
mov
or
push
push
nop
lds
or
xchg
in
xlat
xor
inc
inc
inc
iret
push
scas
dec
mov
sbb
aam
dec
pop
std
push
rcr
inc
mov
movs
mov
test
jmp
and
mov
gs
push
cdq
sbb
test
cwde
scas
fstp
addr16
shr
aad
pop
inc
push
or
ds
fbstp
jg
ins
sbb
in
ja
xchg
push
push
push
cmp
cmp
aas
sahf
push
out
jmp
mov
xchg
ins
scas
jmp
daa
imul
jnp
xor
sahf
push
fstp
push
fsubr
jnp
lock
mov
sub
fcomip
add
push
mov
cmp
iret
jo
popa
leave
lock
inc
inc
test
xchg
mov
jg
jne
xchg
std
imul
(bad)
loopne
xchg
loopne
sbb
sahf
sub
adc
add
adc
push
dec
jbe
lods
sub
ret
push
mov
inc
ja
test
mov
daa
fmul
ins
dec
scas
xchg
lods
jl
sbb
xor
pop
sub
sub
scas
push
lea
mov
das
sbb
mov
imul
jae
adc
(bad)
push
retf
outs
mov
cdq
(bad)
pop
jnp
pop
push
leave
pop
fcmove
cwde
std
adc
cwde
lock
aas
pop
loopne
loopne
hlt
daa
push
(bad)
pop
cld
sub
jmp
pop
cmp
pop
adc
(bad)
cdq
out
cmp
sahf
ds
push
sub
add
xor
adc
jmp
idiv
mov
mov
(bad)
dec
xchg
push
cmp
lods
das
retf
sbb
fsub
or
call
pop
int
sub
and
int
push
sbb
cli
pop
or
ret
or
push
(bad)
cmp
xchg
or
std
arpl
jbe
gs
jb
test
fs
mov
cdq
add
(bad)
and
jp
dec
sbb
(bad)
mov
out
xchg
or
add
retf
stos
pop
xchg
inc
ins
mov
addr16
adc
xchg
xor
xor
icebp
popf
cs
sub
sub
adc
jmp
adc
jb
fcom
mov
push
fst
jae
shl
inc
jg
push
lock
pop
fldenv
pop
in
inc
arpl
aaa
mov
stos
cmps
call
jo
test
fldenv
sub
adc
mov
pop
repnz
cmc
pop
aam
mov
sti
addr16
adc
jo
test
xor
jno
push
cld
fiadd
mov
outs
shl
fmul
rol
jo
xchg
jno
loope
push
xor
mov
pusha
rcl
jo
loope
jo
shl
inc
xor
outs
mov
jae
rcl
pusha
rol
push
jns
cmp
out
fcom
mov
(bad)
movs
mov
sub
push
les
pop
rcl
jb
aas
aad
mov
sbb
inc
sub
or
sub
std
mov
outs
std
adc
and
out
sbb
dec
push
and
xchg
pop
mov
inc
fidivr
arpl
sub
mov
pushf
mov
cmp
xor
and
in
rol
std
test
stc
rep
pushf
inc
out
mov
sbb
xor
dec
into
or
cmps
sti
mov
ror
push
cmp
stc
fcomip
jbe
sahf
mov
and
adc
adc
call
das
add
and
ficomp
sbb
push
mov
(bad)
ja
push
adc
mov
dec
sbb
cmc
pop
mov
leave
mov
xchg
sub
pop
cmp
pop
push
xchg
pop
mov
fs
jno
fdiv
movs
outs
jle
loop
xor
enter
fucomi
jmp
jecxz
mov
shl
xor
(bad)
loopne
jl
mov
imul
jno
lds
pop
hlt
ins
mov
inc
jnp
cmp
iret
sbb
jmp
je
and
sub
cmp
jmp
outs
icebp
adc
push
icebp
in
pop
addr16
fist
fcom
fbld
stos
stc
pop
push
test
pop
jmp
sbb
test
ds
push
enter
inc
out
rcl
jmp
lea
stos
or
mov
mov
aas
jge
inc
test
cmc
stc
and
repz
(bad)
pop
js
nop
sbb
xchg
and
sub
in
ror
hlt
cmp
(bad)
out
xchg
mov
jbe
nop
int
mov
ficomp
push
cmp
repnz
imul
ds
dec
sahf
sub
cmp
ins
xor
sbb
mov
mov
mov
mov
dec
sub
out
pop
jbe
js
mov
data16
sar
mov
cmp
daa
mov
add
scas
pop
or
and
repz
test
and
retf
push
fistp
dec
daa
or
jnp
sbb
jo
pop
xor
jle
and
adc
cdq
in
test
xor
arpl
clc
jno
je
pop
mov
jp
add
xchg
sub
dec
and
inc
leave
jmp
fidiv
adc
sbb
sti
clc
arpl
sub
push
mov
sar
push
add
xchg
loope
int3
outs
(bad)
sub
jb
push
cmp
dec
cmp
xor
aaa
(bad)
sbb
xor
leave
ins
sbb
cmp
mov
pop
add
inc
inc
(bad)
cli
rol
jne
push
mov
xchg
jno
jmp
scas
xor
or
imul
(bad)
push
aas
dec
fdiv
jp
add
xor
es
loope
retf
jl
enter
xor
stc
test
cmp
daa
pop
mov
pop
adc
cmp
iret
mov
mov
jnp
sbb
stos
jne
and
and
xor
lock
movs
jp
xlat
sub
enter
add
(bad)
fucomi
xor
jmp
stos
lods
out
gs
jmp
pop
cwde
dec
ret
pop
jmp
in
fisub
scas
add
xchg
lods
add
mov
xchg
sub
mov
mov
dec
lds
mov
or
inc
pop
fisub
std
add
lds
xchg
mov
or
or
and
mov
mov
dec
sbb
pop
mov
loop
lahf
sub
mov
ret
neg
inc
lds
mov
shl
nop
mov
les
jo
es
loopne
gs
push
mov
in
scas
push
not
mov
stc
pushf
les
mov
in
mov
(bad)
mov
lahf
in
rcr
imul
mov
adc
inc
mov
adc
or
test
cmps
jne
addr16
xor
add
sti
lods
push
push
lds
loopne
xor
mov
push
fcmovu
inc
push
out
cdq
add
test
adc
mov
mov
aaa
aas
mov
cmps
les
xor
push
mov
and
pusha
outs
arpl
mov
cmps
cwde
jmp
mov
test
int
addr16
mov
pop
push
mov
in
(bad)
mov
push
in
scas
pushw
stos
adc
push
jns
pop
sti
imul
add
pop
or
lea
pmaddwd
cmp
gs
dec
adc
out
out
loopne
or
out
out
inc
dec
(bad)
mov
movs
push
push
fistp
jb
mov
adc
add
cmp
xor
inc
das
pop
cs
add
aam
rcr
mov
xor
in
arpl
lea
stc
scas
scas
out
mov
dec
pop
inc
inc
sub
es
sub
loop
lea
outs
add
xor
mov
push
mov
xchg
pusha
jo
mov
inc
rol
inc
and
nop
and
xor
mov
fs
mov
pop
jo
xor
xchg
icebp
mov
stc
dec
shl
nop
push
call
imul
cmps
fist
std
mov
add
jb
push
or
sub
fs
pop
fcomp
push
xchg
xchg
mov
sub
das
rol
mov
jb
test
jne
leave
sti
add
mov
sbb
xlat
stos
aaa
xchg
add
mov
fsubr
push
inc
mov
pushf
inc
fistp
out
pop
jmp
fwait
and
mov
or
neg
adc
inc
push
or
xor
xor
mov
push
jns
pop
pop
jmp
cmp
mov
mov
xchg
inc
pop
cdq
sub
gs
push
js
adc
mov
pop
or
push
pop
gs
fst
fnstsw
inc
push
ins
xor
adc
mov
lds
scas
mov
aas
push
push
mov
add
lock
repnz
mov
add
sub
(bad)
int3
pop
adc
jno
scas
cmp
cdq
ret
sbb
gs
cmps
mov
cmp
dec
inc
out
xchg
mov
les
add
(bad)
cmp
push
movs
popf
in
sub
push
mov
adc
pushf
mov
or
xchg
jbe
scas
loopne
push
lock
jb
addr16
ins
movs
or
fs
inc
inc
ins
dec
push
out
(bad)
xchg
rcl
cmc
jnp
inc
lea
push
repnz
inc
add
addr16
stc
xchg
test
jge
les
or
cli
push
or
adc
gs
sbb
in
jmp
mov
sub
mov
and
jae
push
inc
cmp
das
sti
(bad)
lea
and
cmp
push
loope
push
mov
retf
mov
adc
mov
push
(bad)
mov
outs
pop
jnp
xlat
mov
lods
xchg
ror
dec
stos
push
popa
jae
in
les
shr
sti
shl
sub
and
pusha
and
sub
ror
jp
gs
out
jg
xor
ins
icebp
ins
dec
or
sub
std
cmp
xor
pop
mov
test
repz
cmp
and
sbb
call
cmp
arpl
inc
stos
mov
imul
(bad)
bound
cwde
xor
cmp
es
jecxz
inc
pop
jae
cmp
fmul
scas
retf
and
push
dec
dec
int3
inc
cdq
add
sbb
inc
int3
pop
push
mov
cmp
scas
ins
push
shr
jno
lods
and
dec
test
(bad)
(bad)
call
or
dec
cdq
daa
xor
fwait
les
scas
cmps
xchg
sti
dec
je
inc
xchg
jmp
sar
adc
or
fs
push
mov
and
sub
add
hlt
sub
mov
mov
xchg
and
rol
push
cmps
je
(bad)
push
inc
xchg
and
stos
or
xor
xlat
cmp
jo
xacquire
mov
xchg
mov
add
mov
in
sbb
mov
stc
or
push
loop
push
mov
or
cmp
outs
or
xor
lods
lds
inc
mov
leave
xchg
inc
or
ds
cmps
pop
cmp
rcr
push
cld
imul
call
aam
jae
enter
push
sti
adc
add
pop
pop
mov
rcl
mov
sbb
test
fisttp
mov
and
ror
lock
mov
add
and
jp
movs
cld
xchg
stos
pop
and
push
jno
sub
xchg
pop
not
movs
xor
xlat
scas
dec
inc
mov
lods
shl
sub
fcom
retf
mov
fiadd
xlat
jae
pushf
adc
jg
push
int3
outs
xchg
mov
add
scas
sar
sub
pop
xchg
mov
(bad)
pop
fwait
dec
lea
xor
xchg
jae
loope
and
shl
xchg
and
loopne
jo
loope
push
xor
xchg
inc
je
mov
popa
rol
push
inc
les
push
xor
jge
shl
xor
stos
jg
or
adc
sahf
in
aaa
shl
jmp
xchg
ins
idiv
mov
in
sub
lods
xchg
or
test
cmps
data16
fcmovne
icebp
inc
hlt
xchg
sar
sbb
sbb
mov
stos
ficomp
or
push
clc
push
inc
mov
pop
mov
cmp
lahf
mov
hlt
sub
add
lock
hlt
fisubr
or
adc
mov
jae
mov
fimul
popf
push
bnd
cmp
lds
jle
idiv
xchg
imul
inc
scas
sub
fidivr
arpl
pop
cwde
cmps
lahf
ficom
or
inc
mov
mov
cmp
xchg
push
jmp
push
fidivr
jbe
in
add
dec
jne
and
mov
and
sbb
xchg
pop
ret
xchg
(bad)
sub
mov
inc
aaa
shl
test
stos
lea
sbb
hlt
lods
out
push
xchg
add
sub
push
push
pmaxsw
fwait
or
push
sub
adc
sub
xor
lahf
ret
jg
xchg
jmp
sbb
add
sub
ret
jae
shl
xchg
xor
lock
push
jnp
pushf
mov
cdq
cmp
scas
pop
frstor
pop
cmp
mov
pop
dec
adc
mov
mov
mov
ret
pusha
cmp
sbb
adc
adc
out
mov
out
add
xor
mov
mov
loopne
je
repz
clc
cmp
dec
sbb
mov
xor
pop
push
retf
jbe
or
in
inc
sbb
arpl
repnz
fwait
sub
and
mov
xor
inc
(bad)
and
mov
out
dec
retf
xor
scas
or
pop
mov
xchg
hlt
inc
xlat
fistp
cmps
mov
push
dec
cmp
dec
inc
mov
mov
(bad)
mov
lea
or
dec
fs
push
pushf
dec
mov
and
lods
leave
xchg
imul
movsx
or
adc
push
pop
data16
sbb
aad
rcr
ficomp
fnsave
push
jp
inc
neg
test
icebp
shl
push
mov
enter
sbb
mov
int3
jl
in
leave
retf
rcr
mov
stos
jp
add
addr16
push
cmps
retf
sbb
xchg
aaa
or
dec
add
xor
mov
and
mov
adc
sub
(bad)
push
mov
push
pop
xchg
push
hlt
jae
xchg
es
(bad)
ins
or
sahf
pop
sbb
xor
mov
cmp
cs
scas
not
cs
dec
fbstp
pop
inc
ficomp
jecxz
adc
jecxz
mov
dec
popa
adc
sbb
pushf
xchg
(bad)
jl
fidivr
sub
int3
cli
jmp
enter
and
inc
fwait
push
cmp
cmps
push
sub
inc
cmp
pop
loope
test
cmps
push
rep
push
jb
cmp
jno
cdq
inc
je
adc
mov
or
xchg
fidiv
pmulhw
popf
jnp
fwait
rcr
and
pop
push
outs
das
xchg
sahf
ds
add
into
inc
push
inc
call
cmp
sbb
pop
push
jge
mov
cmc
inc
jg
or
(bad)
shl
(bad)
jmp
out
inc
sub
rcl
popa
mov
push
pop
and
out
mov
(bad)
(bad)
int3
icebp
call
aad
rol
jge
mov
mov
imul
(bad)
aas
mov
ds
ins
push
xor
scas
jnp
std
lods
fmul
cmps
xchg
jae
cmps
in
iret
pop
stos
or
(bad)
(bad)
cli
(bad)
push
cmps
fimul
add
add
(bad)
sub
imul
cmp
dec
dec
cmp
pushf
int3
aaa
push
out
aaa
pop
stc
repnz
push
vsubpd
push
pop
push
and
lds
add
ret
pop
nop
stc
mov
ins
mov
mov
inc
inc
fs
aad
push
test
and
push
mov
es
rol
mov
sbb
fsub
push
and
push
in
repz
push
mov
mov
ins
cld
sar
(bad)
or
pop
lahf
pop
sahf
xor
fs
sbb
inc
shl
and
xchg
and
xchg
xchg
push
jo
mov
jno
add
(bad)
test
mov
arpl
enter
mov
ins
fimul
and
out
xchg
dec
in
mov
rcl
arpl
icebp
rcr
pop
jle
jecxz
sbb
repnz
fiadd
loop
mov
add
pusha
mov
mov
out
ficom
sub
jmp
clc
mov
(bad)
fs
jl
pusha
loope
mov
scas
(bad)
inc
pop
pop
push
ins
cld
mov
stos
push
and
mov
add
dec
xchg
or
jecxz
jle
jg
mov
jmp
xor
(bad)
sub
imul
or
cmp
inc
jmp
sub
fmul
fst
cdq
cmp
mov
pop
add
call
sub
fwait
mul
add
scas
and
test
jnp
push
dec
vpcomuw
mov
push
or
ss
in
scas
cmps
inc
pop
ret
out
xor
sub
pop
or
aaa
scas
mov
aaa
push
sub
jno
aas
adc
jp
pop
not
push
and
jno
dec
dec
scas
jge
cli
fwait
adc
clc
jae
je
jns
xchg
rcl
(bad)
xchg
in
xchg
fld
mov
sbb
out
(bad)
(bad)
(bad)
push
jl
mov
pop
push
outs
fcom
jg
gs
xchg
test
ficomp
sbb
add
into
inc
pop
ret
call
sbb
and
inc
push
cdq
and
mov
mov
mov
cmp
cdq
xchg
mov
sbb
ins
push
mov
jmp
cld
lods
xchg
xchg
test
rcr
xchg
sub
jge
std
pop
int
mov
fmul
cmps
clc
xchg
outs
xor
cmc
jge
call
adc
ds
fwait
outs
ins
movs
ret
imul
stc
movntps
shr
xlat
aas
lahf
mov
add
fimul
push
push
mov
sub
jno
add
call
cli
pushf
pop
cs
lea
addr16
retf
push
add
push
aad
push
popf
arpl
inc
ins
inc
mov
and
fadd
(bad)
shl
and
and
imul
adc
out
mov
jo
push
pushf
inc
outs
mov
fstp
cmps
jo
sar
push
rcr
jmp
pop
mov
(bad)
mov
sub
dec
jl
jecxz
push
cdq
sub
into
sti
push
inc
cmp
fist
inc
into
outs
mov
xor
or
lock
mov
push
sar
ret
ficomp
cmps
(bad)
dec
and
mov
adc
cmp
(bad)
movs
(bad)
out
imul
retf
xchg
pop
test
inc
jbe
pop
adc
sub
(bad)
in
sbb
or
and
xchg
ror
mov
adc
mov
pop
and
bound
cmps
push
call
lock
aas
dec
mov
test
fwait
jno
xor
dec
into
mov
xor
int
test
ss
pop
shl
mov
es
mov
(bad)
sti
pop
sub
or
mov
es
xor
lods
xchg
or
add
fadd
pop
jge
push
stc
inc
(bad)
xchg
js
nop
in
ins
dec
lea
dec
cmps
jno
mov
push
fbstp
add
jge
dec
pusha
xor
pop
xchg
pcmpgtb
aad
adc
fisubr
aas
xchg
dec
xor
out
push
outs
fsub
adc
ss
jae
cmp
sub
sbb
outs
mov
sub
retf
jge
mov
inc
cmp
and
and
repz
jo
jb
aam
mov
add
test
add
add
ins
fimul
xchg
cmp
call
xchg
push
mov
test
(bad)
jge
test
inc
sahf
(bad)
jle
dec
in
cwde
ja
sbb
sbb
imul
lds
xchg
int
or
imul
sub
pop
inc
cmp
jg
cmp
lahf
(bad)
orps
jl
mov
fwait
cdq
sbb
sar
dec
push
fwait
into
(bad)
cmp
cmp
scas
xchg
push
inc
add
stos
loop
div
pop
mov
mov
vmovlpd
imul
mov
vmovdqa32
aaa
jl
sahf
jle
retf
(bad)
fild
xchg
cli
adc
ret
gs
test
sar
sub
inc
jb
fcomp
inc
jmp
push
push
mov
cmps
jns
popf
inc
por
test
in
mov
and
sub
mov
lock
or
xor
dec
xchg
stos
adc
ficom
add
sub
aad
inc
jo
stc
mov
sub
pop
push
mov
shr
mov
cmp
push
and
sbb
loop
fs
cdq
leave
mov
ja
mov
or
mov
scas
and
fs
imul
std
sbb
cmp
idiv
jno
repnz
bound
adc
push
xchg
xchg
mov
mov
outs
pop
pop
aam
daa
dec
sub
sub
sub
add
xor
pop
sbb
cmp
fisub
(bad)
loopne
jae
sbb
sub
sahf
fidiv
fild
inc
cmp
mov
in
mov
jo
imul
xchg
hlt
loope
dec
cdq
sar
add
cmp
xor
mov
mov
mov
int3
mov
and
mov
xchg
inc
or
pop
scas
cmps
imul
cs
xchg
push
add
aam
ins
mov
scas
lods
sbb
out
add
mov
adc
arpl
int
mov
cdq
and
pop
fdecstp
xchg
mov
test
xor
in
cmp
inc
or
retf
jno
fsubr
cld
cmps
daa
imul
fcmovbe
jge
fnstcw
mov
(bad)
cmp
or
mov
jmp
cmps
test
pop
jge
cmps
xor
xchg
cwde
or
ja
xchg
out
fnsave
xor
pushf
addr16
inc
jmp
dec
mov
jbe
mov
clc
adc
lahf
mov
call
xor
push
or
pop
in
fadd
fdiv
xchg
fistp
adc
repz
(bad)
mov
std
stos
and
jb
hlt
lock
ffreep
dec
repz
ins
movs
cmp
jmp
mov
je
adc
cmps
nop
loope
xchg
lds
les
mov
cmp
xchg
or
fisttp
call
int
scas
cmp
pop
add
imul
ds
aaa
icebp
in
inc
enter
mov
(bad)
or
jno
int
jae
mov
push
dec
pop
sbb
dec
arpl
(bad)
cdq
out
inc
(bad)
fwait
jmp
mov
enter
mov
iret
pop
mov
fidivr
fist
xor
shl
jmp
add
mov
call
mov
cmp
ret
fild
mov
or
scas
and
sub
cmps
sub
mov
mov
fisttp
fst
pop
jo
mov
sti
jns
(bad)
sub
push
inc
stos
cmp
and
(bad)
pop
push
cmp
push
mov
nop
adc
shl
idiv
(bad)
(bad)
mov
rol
lahf
sub
push
push
out
mov
std
xchg
and
or
sub
enter
lods
xchg
mov
jae
fnstsw
mov
cmp
dec
pop
int3
mov
daa
xchg
sub
test
mov
dec
pop
pop
inc
nop
sti
cmp
fild
cmps
mov
and
js
stos
nop
mov
inc
jg
sbb
and
outs
mov
enter
mov
pop
dec
ins
lods
aam
pop
mov
dec
jp
rcl
stc
xchg
mov
jle
cmp
push
xchg
cdq
jno
jl
shl
pop
add
xchg
out
ficomp
xchg
add
not
aas
cmp
jns
inc
les
pop
(bad)
imul
push
inc
imul
stos
aad
aad
mov
pop
cdq
cdq
cmp
inc
jns
imul
jg
stc
es
call
jmp
out
xchg
push
cmp
push
mov
stos
das
pop
add
pop
call
retf
scas
pop
lds
sub
out
and
(bad)
or
pop
mov
mov
xor
mov
and
div
scas
movs
xor
cmp
hlt
cli
sar
in
(bad)
test
in
or
pusha
cs
cmp
fcmovne
lods
ins
nop
mov
dec
and
and
outs
(bad)
dec
mov
inc
xor
std
mov
xchg
(bad)
out
clc
dec
les
sub
add
xchg
ficomp
push
std
or
jg
pop
xchg
call
scas
int
sub
cmp
inc
push
jnp
push
and
iret
cld
jno
stos
cmp
adc
aad
cs
pop
popa
repz
cdq
xor
outs
rcr
(bad)
call
add
push
mov
pop
jmp
repz
outs
loop
les
std
movs
adc
outs
popf
add
adc
stos
pop
stos
add
mov
adc
jle
fstp
xor
loope
sbb
push
outs
aad
cbw
cmp
test
iret
adc
fidiv
cli
pop
movs
clc
jne
xchg
jl
push
retf
retf
movs
xchg
(bad)
dec
into
push
js
sub
int3
(bad)
in
sti
pop
push
into
pushf
push
push
ficomp
pop
xlat
adc
imul
jno
add
outs
je
mov
call
inc
daa
xor
fmul
mov
push
add
rcl
push
leave
ins
imul
mov
fmul
loop
jns
and
fstp
pop
jecxz
inc
xchg
push
not
dec
inc
or
imul
loop
inc
lods
mov
push
jae
and
mov
pop
mov
ret
jmp
xor
cmp
xor
pop
into
movs
push
shr
push
ins
bound
cwde
ja
jo
mov
aaa
loop
mul
in
jmp
sbb
mov
outs
xchg
sbb
mov
push
stos
in
out
(bad)
sbb
sahf
push
fadd
inc
adc
push
sar
mov
scas
call
and
push
fcmovbe
pop
rcr
imul
into
inc
xchg
xor
cmp
lock
stc
cld
mov
dec
inc
xchg
push
mov
dec
retf
push
adc
outs
and
stos
xor
jne
loopne
sahf
sub
fmul
int3
mov
push
and
pop
add
sub
sbb
ficom
lods
push
xchg
aam
or
mov
inc
leave
sbb
mov
and
xchg
adc
addr16
xor
sbb
imul
pusha
push
js
sbb
inc
pushf
into
das
repz
in
lea
das
sub
cld
fst
mov
shl
sbb
in
xchg
and
xor
repnz
add
pop
loopne
cmps
cmp
adc
push
xchg
add
mov
je
mov
push
inc
xchg
mov
das
cmps
pop
(bad)
jecxz
or
aad
mov
mov
inc
adc
and
dec
ds
repz
mov
leave
push
mov
inc
ret
mov
adc
sub
sbb
dec
repnz
ds
loop
or
push
push
dec
fwait
mov
pop
test
test
stos
je
in
add
or
pop
cli
or
cmc
std
xchg
cmc
mov
mov
jnp
movs
xchg
mov
cmp
or
into
std
xchg
push
xor
and
mov
jne
div
push
test
dec
cmp
mov
sub
retf
pop
idiv
or
not
fcmovnu
cmp
push
jne
push
mov
iret
aad
repnz
pushf
cmp
sbb
loop
push
adc
mov
std
jae
sbb
and
add
and
xchg
lea
sar
and
inc
imul
cdq
mov
fcomp
dec
imul
jp
fwait
jg
enter
jns
loope
mov
xor
lods
ret
pop
adc
add
xor
sbb
cwde
shl
iret
adc
cmp
mov
(bad)
mov
bound
mov
sti
sub
lds
or
mov
mov
test
pop
test
scas
or
mov
jle
mov
dec
or
or
shr
fimul
jg
or
pop
and
in
(bad)
xor
inc
mov
ret
das
cmp
cli
lods
dec
(bad)
call
je
xchg
div
pop
or
sub
imul
jbe
push
lods
movs
fstp
retf
lods
mov
add
daa
ja
adc
xor
mov
xchg
mov
imul
das
mov
les
ss
in
loop
dec
inc
adc
sbb
ficomp
repnz
push
scas
mov
arpl
fdivr
rcl
stos
scas
jne
stc
stos
sar
loop
xor
arpl
ja
add
push
dec
fwait
mov
jae
daa
daa
aas
mov
ja
paddq
test
in
inc
sbb
pop
fadd
mov
inc
cld
pop
sub
xor
xor
jle
and
jae
mov
dec
scas
imul
stos
ins
aaa
out
fmul
and
ret
stos
inc
(bad)
jp
xchg
outs
xor
ins
mov
lods
inc
mov
clc
pop
gs
data16
int3
adc
into
xor
sbb
adc
mov
rcr
movs
jp
in
iret
das
rcl
mov
and
ss
ja
push
or
out
cli
stos
iret
jg
mov
aaa
push
mov
xor
iret
jg
jmp
and
test
or
cmp
mov
push
scas
dec
add
(bad)
jae
loop
sahf
dec
loope
add
mov
push
(bad)
xchg
and
lahf
sbb
xor
and
cmp
data16
ror
mov
mov
repnz
xchg
(bad)
mov
cmc
ss
and
mov
or
jl
add
fwait
retf
mov
mov
xor
or
or
xchg
aam
sahf
lock
mov
pop
imul
jg
inc
xchg
push
jo
mov
pusha
pusha
rcl
arpl
xor
ror
jge
into
sub
popa
pushf
jo
rcl
lahf
pop
js
mov
mov
retf
fs
test
pop
inc
or
bound
or
add
call
test
add
rcl
es
jo
push
outs
int
sar
es
sti
and
loopne
pop
inc
lahf
push
pop
sub
leave
push
ins
sbb
addr16
in
xchg
cmp
test
fs
pop
inc
mov
mov
sar
js
mov
sub
and
cmp
inc
retf
outs
dec
stc
push
jnp
(bad)
loope
fnstenv
in
mov
pop
clc
lock
mov
jmp
mov
test
aaa
dec
push
sub
lock
xchg
mov
aaa
push
pop
rcr
fwait
add
clc
jno
jg
repnz
out
mov
shl
push
fadd
jno
aam
or
jge
sub
data16
ins
mov
das
shl
ficomp
imul
stos
cwde
and
push
jmp
rol
call
repz
aad
loope
adc
mov
or
push
retf
call
xor
push
pop
or
inc
test
into
shr
inc
inc
add
popf
test
sub
dec
or
dec
dec
dec
popf
adc
mov
test
or
pop
inc
mov
jo
dec
int
xchg
inc
mov
push
popa
adc
cmp
lods
xchg
xchg
sbb
mov
rol
call
sbb
push
sbb
or
test
xchg
icebp
movs
xchg
sar
cmp
mov
mov
cmp
fadd
je
cmc
inc
std
lods
cmp
inc
and
aam
or
jmp
fadd
inc
(bad)
sbb
jae
rol
loope
loop
cwde
xchg
pop
call
lahf
dec
ffree
out
jg
enter
cli
mov
push
cld
clc
and
(bad)
outs
imul
call
sub
jl
lock
es
sub
jl
and
inc
in
lods
sbb
add
xor
int
adc
pop
fs
push
mov
adc
repz
mov
cs
or
gs
loopne
test
outs
jle
ja
cmc
mov
or
out
ret
das
and
or
adc
fidiv
wrmsr
xchg
movs
pusha
rcr
push
and
popa
add
sub
or
outs
mov
(bad)
jnp
cmps
mov
dec
jns
jae
pop
lds
mov
repz
cmps
test
mov
add
(bad)
cmps
xchg
sar
jmp
(bad)
fisubr
test
retf
in
jge
sbb
shr
dec
ret
adc
jl
jl
sub
inc
xor
cld
push
pop
bound
lock
mov
jp
repnz
fnstcw
nop
es
imul
mov
and
jge
mov
or
ret
and
in
xor
cdq
inc
pop
dec
mov
aaa
or
leave
sub
mov
jl
mov
scas
rcl
dec
scas
mov
jle
fwait
push
pop
stos
jecxz
clc
(bad)
pop
shl
and
add
add
gs
adc
inc
dec
push
add
out
fbld
or
inc
repz
mov
sub
dec
pop
aad
es
loop
sub
jmp
fisttp
push
leave
iret
push
push
stc
ret
stos
pop
(bad)
xchg
es
das
sub
ret
retf
loop
mov
bound
(bad)
and
sbb
mov
inc
mov
jmp
repnz
or
xor
leave
out
pop
push
cmp
sbb
stos
lds
inc
dec
in
fld
lods
xor
imul
mov
das
(bad)
cmps
xchg
in
and
test
sbb
jge
mov
daa
add
sub
inc
aam
sub
mov
mov
movs
ins
fwait
pusha
in
push
inc
or
mov
mov
js
imul
mov
aam
mov
xor
aaa
add
ret
xor
sbb
xor
inc
loope
movs
push
inc
ficom
and
neg
inc
and
cmc
mov
sub
sbb
mov
mov
clc
push
add
add
sub
out
call
jno
rcl
xor
pusha
inc
mov
xchg
imul
jae
xor
enter
sbb
jno
lods
rcl
adc
outs
sbb
and
out
or
aas
mov
inc
mov
retf
or
outs
imul
fwait
ja
test
out
sub
and
fstp
jmp
inc
int3
jecxz
sbb
push
or
push
and
mov
daa
(bad)
dec
ror
xor
pop
or
add
xchg
rcl
pop
in
sub
mov
loopne
lock
icebp
in
scas
pop
push
cmc
es
ss
bound
in
es
out
mov
mov
push
idiv
add
fbstp
or
jo
dec
imul
ret
pop
push
xchg
addr16
(bad)
mov
xchg
mov
test
lock
xlat
les
(bad)
mov
lds
inc
movs
sbb
adc
jnp
(bad)
test
(bad)
leave
inc
sbb
xor
mov
mov
(bad)
sub
mov
inc
cmc
retf
(bad)
repz
std
test
xor
inc
outs
adc
dec
fcom
mov
nop
pop
cmps
aas
rcr
inc
or
js
push
mov
mov
stc
in
xchg
les
repz
and
retf
aaa
lds
mov
xchg
and
mov
outs
test
sub
sub
out
push
or
ror
sbb
cwde
clc
ds
cwde
xor
add
ret
nop
cmp
dec
jmp
loope
les
loopne
test
inc
jns
addr16
jnp
mov
pusha
ficom
mov
mov
call
mov
jns
cdq
nop
ds
pop
cli
pop
stos
es
lds
gs
mov
imul
mov
push
jg
jno
(bad)
xchg
imul
xlat
call
out
inc
pop
mov
cmp
dec
cs
mov
test
ds
mov
popa
fmul
and
jmp
mov
mov
mov
cmps
and
dec
dec
ins
jbe
cmps
and
loop
loopne
jns
mov
dec
xor
xchg
out
pushf
mov
or
inc
scas
mul
sar
pushf
pop
je
and
cmps
xchg
(bad)
mov
adc
pop
(bad)
inc
jl
pop
ror
ficom
mov
leave
jge
and
or
(bad)
jnp
xchg
hlt
xor
pop
mov
jbe
cmp
mov
sbb
mov
sub
jecxz
(bad)
push
fwait
test
and
orps
adc
test
daa
leave
cmp
sub
jp
adc
sbb
lods
cmps
in
inc
xchg
cmp
xchg
jle
aaa
and
mov
inc
or
test
bound
mov
mov
add
shr
jmp
mov
je
push
and
mov
mov
mov
dec
bound
jg
sbb
pop
jl
or
cmps
repz
cdq
xor
add
stos
jne
mov
addr16
daa
movs
cld
icebp
add
imul
adc
pusha
and
movs
sbb
xor
(bad)
push
int3
sahf
inc
push
lock
mov
ret
xor
pop
ss
into
sbb
je
cmps
int
cmp
sahf
mov
lea
jnp
pop
or
dec
inc
sbb
rcl
imul
(bad)
jns
outs
push
push
rol
push
push
sbb
popf
adc
and
repz
xor
xchg
mov
cmp
mov
mov
ins
jne
jmp
(bad)
sbb
ds
ins
sub
lods
cmp
outs
push
js
out
jbe
ds
pop
dec
push
jno
lock
dec
cmp
icebp
cmp
adc
mov
sub
or
mov
inc
dec
adc
xchg
xlat
enter
pop
into
mov
sub
push
and
loop
or
ja
loope
mov
ins
rcl
cmp
dec
call
adc
test
out
fwait
jge
add
repz
test
sbb
sbb
mov
sbb
mov
shl
sbb
inc
out
sbb
jo
retf
aam
push
mov
sub
in
xor
adc
ret
or
sar
movs
out
sahf
test
in
movs
mov
sbb
inc
rcr
xor
mov
mov
out
(bad)
cmp
cli
mov
daa
call
sti
xor
jb
mov
ds
dec
push
jmp
and
cmp
aas
cmp
mov
ror
pop
xor
fsub
or
cmp
aaa
dec
mov
das
ins
jecxz
fidivr
(bad)
outs
mov
fnstsw
sub
jg
jnp
cs
push
repnz
mov
js
jo
mov
inc
fsubr
xchg
pop
out
and
pushf
dec
ins
outs
push
rol
push
pusha
pusha
shl
jp
aad
and
mov
inc
mov
xchg
jle
push
mov
jl
fwait
ss
sub
shl
rol
push
test
dec
sbb
push
pop
data16
adc
ins
shl
in
add
sub
rol
jnp
xor
rcl
push
and
dec
add
jl
xchg
aas
ins
in
fwait
icebp
mov
push
arpl
fisttp
in
mov
jnp
pop
add
(bad)
retf
or
and
ja
fstp
aad
or
cmps
das
xor
or
test
mov
sub
gs
shl
pusha
shl
pusha
rcl
jo
ret
data16
ja
retf
outs
fmul
nop
inc
rol
push
in
icebp
arpl
sub
daa
jp
push
js
pop
call
dec
retf
int
out
loopne
call
mov
ins
cld
xchg
sbb
mov
xchg
jae
call
pushf
mov
jp
int3
lock
popa
cld
fcmovu
fcom
(bad)
adc
cmp
cli
push
in
mov
div
sub
out
in
jmp
dec
cdq
clc
ss
pop
cmp
jmp
(bad)
mov
push
ffreep
xor
xchg
lock
fisubr
mov
mov
mov
inc
shl
push
add
out
int
imul
push
cmp
push
int
dec
inc
cli
mov
sti
loop
cli
mov
dec
and
daa
test
cmps
push
pop
mov
repnz
sbb
lea
xchg
rcl
push
shl
div
call
iret
stos
add
jl
pop
xor
jb
repz
pop
xchg
push
add
xchg
mov
test
movs
jge
(bad)
ret
jbe
hlt
jo
popf
jbe
sbb
or
jns
jno
inc
jb
sbb
ins
fistp
mov
mov
push
push
or
xchg
pushf
mov
fdivr
icebp
dec
inc
add
cmp
mov
test
arpl
inc
or
sub
inc
inc
jno
sub
jo
inc
loop
imul
mov
dec
cmp
in
mov
sbb
adc
lahf
out
inc
arpl
aad
jne
cmp
and
add
xor
mov
retf
push
sbb
xchg
int3
js
mov
cld
dec
sub
ins
cmp
loopne
adc
cmp
not
outs
adc
push
pop
and
mov
push
ss
xor
pop
xchg
fbld
lock
dec
sbb
sbb
cld
xor
xchg
test
fs
pop
or
xchg
daa
mov
pop
xchg
xchg
scas
sahf
loop
mov
mov
push
mov
mov
retf
ja
dec
adc
inc
ja
sbb
or
arpl
add
lock
xchg
and
rcl
jg
arpl
pop
mov
js
int
cwde
ins
test
jg
daa
je
xor
xor
stc
outs
mov
dec
add
add
lds
sub
retf
mul
repnz
out
lods
push
push
(bad)
gs
mov
imul
ficom
xor
push
sets
pop
pop
es
mov
ins
mov
scas
in
cmps
ret
and
test
imul
or
(bad)
ins
mov
cmp
cs
mov
and
cld
mov
dec
fwait
pop
push
rcr
faddp
adc
aaa
and
cld
sbb
jl
xchg
xor
jnp
js
or
jmp
cmp
jbe
push
inc
add
repnz
xlat
inc
sub
mov
xor
xchg
push
push
push
cmp
fwait
jae
out
aas
iret
rcr
cs
xchg
fwait
inc
mov
clc
xchg
adc
push
push
shl
les
adc
bound
and
sbb
inc
xchg
inc
inc
pusha
add
imul
push
enter
aad
stc
out
cmc
mov
and
inc
lea
push
fucomi
std
mov
add
fdivr
dec
mov
rdtsc
mov
ret
jp
mov
mov
jnp
hlt
and
test
fidivr
pushf
retf
cdq
push
dec
mov
lahf
test
popa
jnp
sbb
push
ss
xor
mov
lods
jg
lods
ja
pop
mov
mov
inc
add
mov
pusha
loope
pusha
pusha
rcl
jo
aad
bound
test
retf
xchg
jae
fisttp
out
and
pusha
loop
xor
pop
jo
int3
mov
or
sub
ret
sub
sbb
or
xchg
mov
push
ja
pop
test
shr
jnp
call
jns
push
lar
cmps
or
mov
lock
and
lea
jnp
sbb
popf
xor
jno
pop
adc
and
mov
sbb
ja
(bad)
mov
mov
shl
dec
push
out
scas
mov
aas
leave
imul
ins
loopne
add
pop
cwde
mov
inc
mov
cwde
add
enter
xor
retf
into
sub
xchg
pop
mov
jb
xchg
rol
out
xor
sub
call
inc
(bad)
push
(bad)
adc
push
pop
jns
push
xor
pusha
push
inc
mov
adc
rcl
add
(bad)
lock
aaa
jmp
test
pop
jb
stos
add
adc
dec
dec
dec
pusha
xchg
jmp
pop
adc
test
retf
cld
test
scas
sar
or
dec
int
mov
sub
loop
cli
pop
pop
stos
ret
iret
jb
stos
and
or
pop
std
hlt
push
mov
pop
xchg
add
or
aas
outs
mov
pusha
test
loop
push
scas
xor
pop
and
dec
test
cmp
pop
mov
and
or
jmp
push
sub
push
mov
or
lock
popf
rol
js
jb
pop
mov
cmc
mov
lods
sti
sub
movs
xor
or
lods
cmp
je
push
or
and
mov
nop
pop
jp
repnz
xor
jmp
dec
popf
sbb
add
inc
sbb
cmp
lea
fwait
mov
jg
fdiv
das
mov
pop
mov
clc
popf
jmp
(bad)
fld
cdq
pop
jge
push
js
xchg
xor
push
stos
add
push
jl
sbb
pop
mov
pop
out
cmc
mov
sbb
rol
in
cmp
xor
and
and
(bad)
loop
hlt
and
add
(bad)
jae
ds
sar
xchg
(bad)
sub
pop
xor
repnz
leave
mov
aam
popf
cmp
xchg
ret
xchg
ret
pop
std
adc
jbe
jno
and
shr
data16
dec
adc
pop
pop
int
adc
dec
xchg
sbb
and
rcl
mov
ror
test
mov
mov
push
pop
test
imul
shl
add
lods
sub
cmps
sub
xor
sbb
pop
mov
push
shl
imul
clc
jno
push
es
cmp
and
jno
ret
rcr
ret
(bad)
push
in
push
outs
or
ss
nop
dec
fdivr
mov
jae
add
mov
scas
xchg
xchg
arpl
add
sub
adc
sbb
jns
scas
mov
cdq
mov
sar
sbb
xor
and
add
repnz
mov
fs
js
or
sub
adc
pop
hlt
cwde
mov
shl
push
and
pop
aaa
in
mov
(bad)
enter
jmp
mov
pop
mov
push
or
lea
cmp
rcr
dec
mov
pop
push
cmp
js
mov
popa
lods
cmp
xchg
js
out
cmc
add
shr
sahf
cmp
mov
fidiv
cmp
or
lds
xlat
(bad)
std
push
xchg
jnp
pop
test
cmp
fadd
push
jle
out
pop
inc
(bad)
pop
cwde
fsub
jne
cs
popa
pop
loope
jo
or
or
sub
sbb
inc
rol
jno
repnz
and
inc
jo
addr16
inc
nop
es
inc
mov
dec
icebp
jp
xchg
retf
rcl
xor
cmp
inc
or
sub
loope
xchg
dec
cmp
rcl
xchg
pusha
jo
mov
pusha
jo
xchg
jo
rcl
gs
ror
retf
ins
shr
inc
and
retf
jg
mov
aas
push
pop
out
ins
in
repz
mov
loopne
dec
outs
cmp
ins
fcmovnu
not
jbe
shl
gs
jle
retf
cmp
sub
outs
mov
scas
mov
xchg
cli
or
pop
sub
mov
mov
mov
and
fstp
sbb
aad
lds
call
gs
sub
movs
imul
xchg
sbb
addr16
lods
jmp
stos
les
add
sbb
imul
in
jo
jecxz
ror
ror
xor
dec
mov
(bad)
push
rcr
imul
mov
xlat
jecxz
ret
sbb
fidiv
inc
xchg
xchg
dec
addr16
sbb
data16
push
xlat
cmp
aad
pop
movs
stc
and
movs
sbb
les
inc
push
or
shr
push
jp
mov
nop
mov
test
(bad)
inc
popa
cmp
jnp
jae
add
add
and
in
push
xlat
imul
adc
lock
mov
retf
and
dec
ret
ds
pop
aaa
daa
cmps
xchg
xor
mov
stc
xor
xchg
sub
test
cmc
pop
les
inc
push
or
cmp
inc
sbb
lock
or
icebp
pop
adc
arpl
xchg
imul
rol
push
rol
push
je
or
cmc
out
and
test
das
mov
inc
lahf
xor
mov
aad
mov
mov
mov
cli
aam
dec
and
and
sub
mov
imul
in
imul
fs
sar
pop
mov
adc
xor
nop
das
rcr
ret
jnp
aaa
int
mov
in
bound
sub
or
xchg
xchg
dec
movs
test
stos
cmc
dec
jbe
mov
pusha
in
xlat
xor
jle
xchg
sbb
jecxz
push
out
hlt
pop
mov
inc
(bad)
repnz
aaa
xchg
or
cmps
les
fild
enter
dec
xor
add
or
lods
inc
cld
int
cmps
sar
inc
mov
test
push
cwde
mov
sub
sbb
or
icebp
mov
mov
data16
ficom
xchg
mov
rol
outs
add
(bad)
jb
mov
adc
and
pop
dec
inc
or
gs
sar
test
loope
xor
jle
add
mov
cmp
mov
ret
mov
into
xor
fs
adc
push
adc
jmp
stos
inc
mov
mov
adc
mov
mov
jbe
mov
movs
jne
in
and
push
mov
test
ja
inc
fsub
int3
(bad)
repnz
push
aas
das
call
les
xlat
fstp
loop
call
jnp
sub
xor
push
add
ret
int3
dec
aas
fwait
add
cmp
js
repz
into
clc
push
rcl
mov
fidivr
nop
test
cmps
pop
jp
in
mov
popa
aad
inc
test
pusha
mov
xchg
mov
jp
push
xchg
jmp
inc
test
retf
sbb
test
retf
xor
sar
loop
mov
shl
and
repnz
rcr
mov
jmp
sub
jae
dec
jecxz
mov
xchg
scas
pop
stos
(bad)
retf
rcl
jge
dec
mov
jle
and
aad
jae
aas
mov
daa
dec
out
mov
jae
pop
adc
rcr
movs
xor
xor
popa
shr
xchg
sub
in
mov
pop
adc
push
inc
push
in
and
aam
aaa
je
nop
mov
into
rol
jnp
xor
ret
jnp
movs
xchg
cmp
dec
jbe
mov
push
aaa
in
push
stc
loop
or
pusha
rol
icebp
xor
je
sbb
xchg
add
test
sbb
mov
push
mov
enter
je
dec
sub
jl
jno
cmp
mov
test
xchg
inc
push
sete
cs
sar
pushf
add
ins
or
mov
shl
xchg
push
ret
and
lods
sbb
or
inc
cmps
or
cld
mov
pop
bound
add
mov
test
adc
sbb
ss
ret
xchg
mov
pop
push
aaa
leave
out
fistp
loope
mov
popa
pop
scas
cmp
xchg
or
icebp
jp
pop
ficomp
pop
cmp
data16
(bad)
cli
push
scas
das
or
ficomp
aad
call
mov
lds
repnz
mov
(bad)
loope
fst
push
cmp
bound
dec
fdivr
cli
pop
es
in
ret
jmp
ret
fist
jae
(bad)
in
mov
push
mov
shr
mov
mov
dec
ds
les
lock
or
add
sbb
xor
mov
dec
rep
push
retf
fisttp
in
mov
inc
xchg
retf
cmp
call
fwait
stos
mov
cmp
out
bound
pop
pop
test
mov
enter
xor
sbb
pushf
inc
sbb
jae
mov
movs
pop
aad
fmul
mov
pop
test
push
ret
imul
mov
sbb
retf
xor
loop
jl
jecxz
mov
lods
push
icebp
mov
push
imul
gs
int
ret
push
mov
aad
int
add
in
jne
loopne
push
lods
jns
ins
inc
mov
pop
inc
inc
scas
rcr
sbb
shr
xor
cmp
pop
adc
das
dec
daa
mov
imul
jmp
add
outs
mov
xchg
push
xor
adc
mov
mov
mov
fist
pop
push
jmp
or
jle
sub
or
test
clc
fs
sbb
mov
ss
aad
sub
popf
sub
test
jns
aam
mov
jmp
jne
mov
adc
mov
mov
lahf
mov
xor
out
mov
mov
jge
jns
pop
or
aas
mov
movs
mov
xlat
and
test
xchg
shl
xor
xor
adc
cmp
(bad)
add
push
ret
or
mov
std
ins
jno
imul
cs
sbb
push
dec
adc
xchg
add
stos
rcr
leave
push
xchg
add
mov
jo
xlat
pop
push
mov
push
push
lock
icebp
inc
lds
std
pop
cmp
xor
popa
sub
retf
cdq
into
mov
jo
bound
js
xchg
inc
jno
pushf
jae
sub
test
cwde
cmps
aaa
je
push
inc
dec
rol
and
data16
out
js
fbstp
std
mov
mov
cmp
cmp
out
or
sar
movs
jno
inc
jecxz
mov
xchg
cmp
or
js
adc
sbb
mov
inc
or
cdq
inc
aad
pop
push
mov
jo
jo
aam
mov
pop
mov
xchg
aas
mov
(bad)
outs
int3
out
ret
mov
repnz
cdq
sub
adc
mov
inc
jg
dec
jmp
fs
cmc
push
fbstp
imul
jo
xor
in
imul
out
inc
call
push
and
jns
cmps
push
(bad)
push
adc
pop
lods
add
mov
pop
push
(bad)
and
mov
loope
mov
pop
lahf
and
(bad)
in
imul
push
mov
sbb
outs
adc
cs
sbb
cmp
pop
pop
cld
mov
sbb
push
pushf
dec
mov
outs
push
in
fs
(bad)
mov
sbb
push
div
mov
popf
sub
lock
in
retf
lock
les
and
sahf
mov
jno
mov
mov
les
popa
add
nop
lock
iret
dec
call
into
pop
jo
push
sub
fwait
adc
mov
sub
movs
add
mov
cmps
lods
inc
out
add
cmps
lds
movs
xor
(bad)
jo
rcl
leave
jns
popf
stos
pop
sbb
call
dec
into
inc
bound
movs
pop
cmc
mov
jg
dec
sbb
retf
mov
ins
loopne
ins
pop
ins
shr
ror
retf
inc
push
cmp
ins
push
or
scas
adc
cmp
sahf
xor
(bad)
cmc
mov
fstp
mov
sbb
cdq
fild
and
mov
jecxz
sbb
push
popa
sub
cmps
cmp
hlt
pop
je
mov
lods
adc
inc
and
push
cmp
mov
(bad)
cmps
idiv
(bad)
(bad)
adc
into
dec
rcl
mov
ja
xchg
mov
fcom
cmps
or
cmp
cmp
repnz
cmc
fcomp
add
movs
add
test
pop
and
call
and
rcr
into
outs
mov
clc
and
fbld
in
mov
and
hlt
sbb
stos
rcr
retf
ins
cdq
scas
adc
mov
push
repnz
iret
les
sbb
scas
mov
in
jle
pop
iret
test
mov
test
sahf
aad
test
test
enter
add
lds
ss
out
inc
mov
add
mov
js
fdiv
int
cwde
pushf
test
dec
outs
cmp
mov
push
ror
jmp
ss
test
ror
aam
ins
rcl
retf
inc
repz
xchg
retf
sub
add
imul
mov
loop
aam
loope
div
dec
push
movs
call
and
cmp
xor
in
push
stos
inc
jae
out
test
add
jmp
fisttp
jl
mov
adc
jbe
and
adc
xlat
push
sub
ror
and
aam
stos
inc
lods
icebp
mov
pop
ds
(bad)
ror
shl
mov
adc
into
mov
cmp
ja
out
adc
mov
ins
and
sbb
sub
int3
test
popa
in
pop
inc
push
xchg
or
jnp
lods
mov
aad
xor
sub
fistp
pop
mov
ficomp
ja
pop
in
mov
sbb
add
mov
dec
xor
dec
sub
sbb
sub
dec
bound
or
(bad)
fisub
sub
pop
or
or
and
push
cli
jb
jge
push
imul
jo
pop
(bad)
sbb
mov
pop
addr16
jmp
icebp
cmp
pop
dec
sbb
loopne
or
nop
popf
rol
fld
mov
jle
lds
xor
or
cld
jecxz
rol
ret
nop
sub
inc
pop
daa
push
pop
mov
add
add
sub
rcr
data16
jae
cmps
push
mov
add
sub
inc
inc
xchg
mov
cs
std
fdivr
repnz
sbb
add
test
js
out
fcmovnu
cwde
test
jo
adc
(bad)
mov
retf
xor
fcomp
retf
hlt
mov
jnp
lds
jle
int3
and
mov
movs
(bad)
jge
xor
shl
sahf
outs
out
hlt
cmps
aam
dec
aam
and
push
rol
loope
pop
cmps
adc
js
cmp
dec
int
movs
ror
test
and
xlat
ss
mov
pop
mov
adc
dec
clc
loopne
jo
movs
or
imul
rcr
jo
push
sub
inc
cmps
push
xor
jno
xchg
sub
xchg
adc
adc
repnz
pop
iret
dec
call
sub
scas
mov
es
inc
and
sub
mov
jp
rcr
shr
test
stos
inc
ja
xor
(bad)
xor
xchg
add
loopne
cmp
mov
adc
push
(bad)
mov
ret
xchg
and
test
faddp
shl
(bad)
push
fcomp
and
push
mov
ror
cmps
lds
scas
push
jp
add
xchg
inc
mov
xchg
pusha
stos
loope
mov
and
in
ja
aaa
inc
ret
pop
(bad)
lock
(bad)
fwait
or
mov
std
inc
push
inc
mov
mov
test
fdivr
and
or
xchg
std
sub
fimul
fst
mov
lahf
mov
or
nop
push
mov
mov
cmp
test
stos
mov
loope
pop
out
lea
outs
add
add
loopne
inc
xchg
sar
popa
pop
jo
xchg
inc
push
loope
push
push
icebp
mov
xor
xchg
adc
and
loope
lock
shl
adc
jno
jno
xchg
jo
push
adc
xor
xchg
shl
xor
inc
adc
shl
shl
xor
shl
rcl
and
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
popf
pusha
lock
xor
icebp
xor
fld
jno
rol
pusha
pusha
rcl
pusha
jo
xchg
and
shl
lock
dec
rcl
xchg
pusha
inc
rol
pusha
jo
xchg
and
xchg
jo
icebp
shl
ds
mov
and
retf
add
enter
sub
stos
scas
mov
jmp
cmp
fild
cmps
mov
mov
mov
das
in
sub
adc
mov
retf
adc
pop
push
or
mov
or
adc
sub
cmp
cmps
movs
call
dec
jl
jbe
jbe
xchg
iret
movs
es
sbb
into
push
mov
stos
mov
lock
shr
jp
mov
dec
jae
repnz
or
cmps
pop
inc
es
xchg
xor
in
mov
inc
add
stos
out
dec
in
out
fsubr
movs
sti
xchg
mov
rcr
and
push
lods
mov
jecxz
nop
push
pushf
cdq
fwait
es
inc
fst
(bad)
hlt
sbb
push
jae
repz
fdiv
rcl
aas
in
adc
repnz
adc
inc
jno
sbb
stc
jns
fs
movs
and
ins
mov
loope
(bad)
in
dec
sbb
outs
jecxz
loopne
lods
out
sub
loope
es
pop
loopne
in
add
xlat
add
push
scas
in
gs
out
sbb
jmp
mov
sbb
outs
mov
inc
inc
in
int3
xor
(bad)
or
in
jo
xchg
jns
xor
xchg
cmp
(bad)
call
lea
test
inc
div
mov
sub
sti
(bad)
mov
call
dec
popf
xor
or
(bad)
mov
je
jecxz
push
pop
mov
and
mov
fcomp
ins
jp
jecxz
dec
(bad)
movs
test
movzx
sbb
(bad)
scas
xor
mov
add
shl
pop
ja
and
test
gs
adc
dec
inc
mov
out
stos
mov
leave
popa
out
inc
mov
cmp
jns
dec
inc
mov
test
push
sar
addr16
int
xchg
rol
adc
cmps
sub
ror
mov
gs
dec
cmp
imul
mov
das
adc
je
jmp
adc
ss
dec
inc
xor
mov
xchg
(bad)
or
pushf
sbb
shl
or
dec
jmp
mov
scas
sbb
xor
lods
scas
mov
ret
adc
retf
fist
das
adc
inc
daa
jnp
push
mov
xchg
inc
test
loopne
(bad)
pop
xor
icebp
aad
repz
adc
arpl
call
cmp
and
imul
jns
in
loopne
adc
add
loop
das
mov
mov
and
mov
loop
loopne
and
outs
jo
xchg
inc
push
icebp
xchg
inc
push
shl
inc
jo
xchg
xor
rcl
mov
xor
repz
jae
mov
fs
arpl
ds
lock
pusha
xchg
add
cld
pop
lock
(bad)
xchg
jle
popf
and
mov
lods
cli
fbstp
mov
push
int
(bad)
call
pop
fucom
hlt
cmp
into
and
xor
test
pop
adc
mov
lods
sbb
fst
push
sbb
scas
jae
repz
ror
and
sub
mov
mov
pop
retf
xchg
xchg
cmp
sub
test
lds
dec
in
push
cmp
cmps
(bad)
mov
or
mov
mov
cli
mov
mov
(bad)
(bad)
adc
loope
jge
sbb
add
and
movs
loop
mov
es
fcmovnbe
and
ins
fist
retf
cli
cmp
inc
or
ror
inc
inc
push
dec
inc
ja
icebp
movs
fild
jecxz
fmul
inc
adc
sbb
mov
mov
pushf
cmps
shl
jmp
cwde
dec
push
in
stos
daa
std
addr16
pop
(bad)
and
movs
out
mov
sub
mov
dec
jmp
cmps
mov
xchg
push
jp
cmps
inc
ror
dec
movs
or
cmp
ins
mov
jge
int3
aaa
jbe
popa
retf
push
or
mov
sbb
xchg
sub
xor
dec
ds
mov
enter
call
dec
jl
cmps
pop
mov
pusha
ins
test
push
jle
std
js
stos
aad
fwait
mov
fs
in
and
int3
mov
gs
sti
ss
scas
sar
jbe
push
and
mov
ja
pop
mov
popf
or
cdq
dec
in
lods
call
fdiv
in
(bad)
cmp
push
cmp
addr16
jns
ds
das
(bad)
out
enter
xor
dec
lods
mov
push
ret
les
int
dec
sbb
cwde
sub
(bad)
sub
sub
or
in
jo
inc
dec
xchg
rcl
push
shr
pop
cld
(bad)
std
xor
mov
sar
scas
mov
inc
xchg
addr16
jbe
or
xchg
sti
pop
inc
pop
inc
rcl
push
pop
push
dec
repz
call
into
dec
cmp
das
lods
and
out
out
sbb
dec
add
jns
test
dec
inc
pop
std
aad
lock
iret
jns
pop
or
adc
xor
outs
bound
aas
imul
pop
and
dec
and
cld
sub
mov
int
mov
(bad)
mov
outs
sub
add
mov
sbb
movs
mov
jmp
xor
in
jge
pop
in
stc
push
xor
jno
aaa
push
rcl
xchg
cmps
push
pop
ins
jne
mov
movs
in
aas
sub
jle
jne
cwde
add
cmps
mov
daa
(bad)
movs
aam
movs
(bad)
icebp
sub
pop
cmp
mov
fnsave
jmp
ss
or
dec
xchg
gs
loope
cmp
das
into
jp
retf
mov
aam
dec
mov
sub
dec
into
call
inc
fadd
mov
jmp
into
sub
ins
rcr
push
dec
repnz
xchg
in
mov
jmp
(bad)
ins
push
enter
pushf
jp
cdq
pop
cdq
sar
fist
imul
adc
scas
fistp
mov
leave
(bad)
xchg
(bad)
int
jne
shl
jo
add
icebp
xchg
pusha
jo
xchg
push
pusha
loopne
jo
loop
jo
shl
inc
in
xchg
jg
xchg
rcl
inc
rol
pop
push
test
lahf
leave
pushf
test
(bad)
fldenv
pop
cmps
push
(bad)
vprotd
out
nop
jno
sub
das
repz
adc
add
push
cs
les
add
rcr
les
adc
lods
div
test
add
adc
clc
jae
sti
lods
cmp
or
sbb
jo
mov
std
inc
pop
xor
mov
jbe
inc
std
stc
lea
fcom
mov
shl
inc
ret
jmp
push
or
mov
push
or
fld
shl
add
dec
hlt
div
gs
push
popf
sahf
into
aaa
sbb
xor
jo
aad
imul
and
push
inc
rcl
sar
inc
shl
pop
dec
push
push
cwde
popa
xchg
mov
inc
dec
arpl
popf
mov
fild
loop
arpl
lahf
pop
pushf
dec
xchg
xor
into
fwait
pop
adc
outs
inc
ss
jge
mov
repz
or
js
es
sub
pop
dec
call
ret
popa
or
push
cmp
xor
mov
test
test
js
inc
mov
sbb
jl
mov
xchg
inc
jl
jmp
test
push
xchg
xor
xchg
xchg
in
movs
pop
xchg
push
fwait
int3
ins
repz
cli
sub
xchg
mov
jle
xor
ins
sar
leave
aad
scas
sub
test
shl
cdq
cmps
jp
and
xchg
jecxz
dec
push
das
fbld
mov
xor
cwde
mov
fild
clc
dec
mov
repz
(bad)
pop
stos
mov
and
mov
test
data16
push
push
jb
mov
cmp
int
and
sub
stos
das
and
rcr
push
pushf
fdiv
adc
inc
sti
in
xor
mov
ffree
xor
out
pop
mov
jnp
push
shl
into
or
mov
stos
sbb
lods
dec
lds
dec
push
inc
iret
call
mov
pop
aaa
jb
cmp
movs
or
dec
jmp
mov
stos
dec
mov
cdq
jmp
ficom
in
je
sub
js
daa
inc
mov
hlt
add
add
jns
adc
js
arpl
int
movs
call
jb
cmp
mov
mov
push
loope
imul
movs
mov
aad
gs
ficomp
lahf
(bad)
cmc
cdq
pop
or
jmp
add
icebp
push
ins
cmp
outs
add
and
adc
rcl
inc
add
jno
and
gs
(bad)
cmps
inc
gs
xchg
les
outs
dec
jo
xor
jle
push
xchg
adc
stos
mov
(bad)
mov
mov
icebp
(bad)
cmps
push
mov
sub
packuswb
cmp
aas
pop
imul
scas
mov
loop
mov
iret
mov
cmp
cmp
xchg
jmp
loope
cdq
dec
dec
loope
add
mov
pop
jo
clc
out
add
or
scas
int
mov
fnstenv
inc
repnz
ficomp
push
cmps
sbb
arpl
in
or
dec
xchg
inc
mov
in
pop
mov
imul
jmp
(bad)
dec
adc
out
mov
adc
push
outs
rcr
pop
rcl
jae
call
sbb
addr16
or
(bad)
adc
sub
not
mov
jns
mov
js
dec
clc
(bad)
lea
cmp
ss
stc
ins
lds
ret
lahf
lods
inc
sub
push
lods
ss
lods
mov
push
sbb
xchg
push
cwde
scas
add
xor
mov
in
and
mov
sub
test
and
scas
jp
dec
mov
in
aaa
adc
cmp
test
mov
dec
sbb
pop
(bad)
cli
inc
mov
xchg
mov
push
stos
in
push
cmp
aam
xchg
pop
dec
jecxz
dec
ins
pop
icebp
jbe
leave
popf
add
aam
(bad)
inc
pop
xchg
in
icebp
cmc
jmp
fisubr
hlt
aas
push
popa
pusha
xor
add
(bad)
cld
dec
loop
mov
inc
test
sbb
dec
cmp
sbb
push
imul
test
fstp
mov
test
ret
imul
jge
cli
sub
and
cmp
lds
mov
add
adc
and
jb
mov
push
adc
mov
cmp
push
xchg
xor
mov
adc
sub
test
mov
mov
adc
adc
clc
adc
jmp
push
les
loop
sbb
in
and
adc
ret
mov
mov
lock
jmp
icebp
lock
mov
shr
std
jp
pop
or
cmp
mov
out
add
outs
dec
pop
ret
or
(bad)
adc
inc
cmp
(bad)
xchg
not
in
sbb
mov
or
inc
sub
mov
jecxz
xchg
cmp
movs
retf
loope
mov
jno
xor
(bad)
pop
dec
fst
std
mov
(bad)
adc
add
adc
pop
iret
adc
in
setb
scas
xor
nop
xor
xchg
adc
sti
inc
mov
sbb
rcr
mov
cmp
shl
or
sbb
sbb
cmp
xor
push
ins
cld
sub
sub
int
ja
jnp
dec
push
ins
and
mov
bound
and
loope
or
fdivr
daa
ds
push
shl
loop
pop
fistp
xchg
mov
call
push
enter
(bad)
cmps
sub
in
push
push
push
and
xor
fbld
jo
pop
push
xchg
das
sub
mov
and
mov
fnstsw
sbb
mov
lds
mov
jmp
mov
push
and
ss
dec
sub
pop
cvtps2pd
cmp
fld
inc
iret
(bad)
retf
add
jne
ins
imul
js
ss
lea
push
test
sub
sub
xor
cs
fimul
imul
dec
psraw
fisubr
and
xchg
fwait
pop
loope
jno
and
jns
test
mov
push
icebp
shl
shl
xchg
push
jo
mov
jno
shl
cmc
mov
fadd
xchg
shl
jmp
gs
ror
inc
imul
into
push
ja
ret
in
dec
dec
(bad)
test
add
xchg
mov
or
jg
push
add
mov
xor
sub
dec
sub
test
dec
mov
xchg
aaa
inc
cli
pop
push
sbb
rcr
test
out
and
sub
cmps
add
or
jl
iret
xor
cli
jo
inc
es
ins
js
ins
aad
push
jnp
fwait
popa
js
(bad)
push
or
dec
push
ret
mov
daa
add
dec
addr16
(bad)
pop
cli
cmps
scas
mov
jl
sbb
ss
(bad)
mov
call
pop
sbb
dec
jp
push
pop
dec
int3
scas
es
cli
lds
pushf
enter
fwait
sub
mov
shl
aaa
add
cmp
outs
push
inc
inc
or
imul
lock
sti
clc
pop
dec
fnstenv
xchg
xor
hlt
pop
stos
iret
inc
or
mov
mov
inc
inc
jnp
sbb
jnp
xchg
pop
lods
movs
test
mov
test
adc
cmc
xchg
push
call
leave
jns
pop
cwde
inc
jecxz
xlat
stos
outs
pop
jns
mov
sub
xchg
aad
cmps
add
or
add
dec
loop
xchg
dec
cli
fst
fst
retf
push
ror
cmps
mov
mov
out
aam
jo
mov
(bad)
das
jl
test
and
xchg
idiv
pop
repnz
arpl
popf
cli
xchg
cmp
sar
movs
mov
movs
pop
loopne
push
inc
mul
lods
popf
repnz
jmp
and
dec
xchg
xchg
pop
int3
iret
rcl
xchg
arpl
and
xchg
cmps
mov
pop
bound
cmp
(bad)
std
dec
jbe
mov
rcl
stos
mov
inc
and
cdq
jge
shl
cmp
retf
mov
add
adc
sub
fs
mov
ret
cmp
pop
pop
dec
jle
mov
rcr
sbb
in
adc
sbb
adc
inc
inc
xchg
fmul
int3
or
fiadd
ds
dec
(bad)
sbb
jne
and
fwait
jne
sub
or
cs
(bad)
jge
rcl
sub
mov
(bad)
mov
aaa
push
or
add
fdiv
cld
xchg
mov
lds
adc
mov
mov
push
inc
or
mov
fwait
sbb
ds
das
sti
mov
cli
sub
retf
xor
xor
aaa
sbb
repz
stos
test
jl
pop
pop
shr
push
ins
xchg
and
pop
dec
mov
sbb
push
or
xchg
jge
sub
imul
es
std
jg
and
cmps
push
push
or
jno
std
inc
pop
cld
pop
cdq
or
mov
xor
(bad)
scas
and
repz
push
pcmpgtw
add
scas
jecxz
and
ficom
out
je
js
push
mov
mov
sub
mov
xor
icebp
stos
in
mov
cmp
adc
adc
xchg
movsx
mov
and
push
sub
test
test
mov
daa
inc
cmp
(bad)
mov
mov
adc
mov
xor
inc
or
pop
add
les
cld
pop
idiv
adc
lods
es
fnsave
pop
imul
(bad)
fs
outs
sub
out
jo
push
jp
mov
push
jecxz
stos
aam
add
push
jnp
cli
fldcw
push
test
out
inc
mov
cmp
cli
jno
mov
ins
mov
pop
mov
inc
xor
sub
test
mov
lods
jb
ss
or
xchg
or
ror
out
shl
imul
cwde
sub
popf
or
mov
leave
and
push
icebp
call
pop
ja
add
les
imul
dec
sbb
clc
adc
bound
push
push
test
cli
stos
retf
je
xchg
adc
adc
retf
adc
jecxz
ds
dec
adc
jns
sbb
retf
js
cmp
pushf
mov
sbb
test
stos
sbb
sub
js
clc
push
dec
movs
cs
stos
xor
cmc
pop
mov
call
stos
mov
cwde
leave
sar
dec
in
ins
in
out
push
mov
call
es
cmp
mov
(bad)
jmp
fistp
aaa
push
ja
mov
mov
dec
dec
popa
xchg
bound
add
push
mov
mov
and
adc
xor
add
pop
inc
test
or
dec
inc
pop
add
sbb
jb
clc
iret
lea
jbe
div
push
push
and
inc
popf
stos
idiv
sahf
push
jbe
pop
add
mov
jnp
ret
fcomp
push
icebp
push
lods
ror
int
jne
inc
jmp
dec
enter
inc
adc
std
push
push
aas
std
(bad)
or
popf
(bad)
mov
pusha
into
push
mov
adc
inc
xor
jp
xchg
inc
ficomp
rcl
loope
push
sbb
lock
mov
and
sub
pop
mov
sar
sbb
push
call
mov
imul
add
daa
sbb
fdiv
scas
and
test
jb
push
jg
test
fsqrt
shl
jl
mov
jge
es
cmp
lock
pop
push
(bad)
jnp
fsubr
xchg
xor
fwait
mov
call
add
cs
cmp
movs
test
sub
adc
mov
inc
mov
cmps
mov
jae
pop
out
jge
outs
cld
jp
lds
jbe
mov
pop
iret
mov
mov
sub
sub
sti
dec
(bad)
cli
pop
xor
jp
sbb
pop
inc
repz
cmps
mov
mov
and
pusha
sbb
ss
pop
loop
daa
movs
push
inc
(bad)
adc
mov
aad
cmp
pop
dec
ds
sbb
enter
das
outs
and
fcmovnu
and
sub
pop
aam
cli
mov
cmp
js
dec
and
and
shl
dec
cmp
(bad)
pop
dec
adc
pop
sub
popa
mov
lahf
and
xchg
(bad)
jne
call
scas
adc
fdivr
jg
lock
into
ins
test
rcl
sub
mov
and
and
fdiv
out
adc
cmps
aad
push
jle
iret
in
and
in
cmp
mov
test
inc
in
fidiv
repnz
icebp
int
and
clc
pop
(bad)
push
test
dec
icebp
cmp
and
dec
in
cmc
cs
aam
xchg
adc
fadd
dec
and
push
cld
add
cmp
test
xchg
rcr
adc
jle
sbb
mov
fnsave
aam
sub
dec
ror
jb
push
shl
mov
js
jnp
jae
out
aaa
dec
mov
aad
popf
sbb
movs
int3
lock
imul
or
push
sbb
les
cs
mov
mov
sub
lods
jb
cmp
xchg
or
push
popa
dec
inc
je
mov
cwde
adc
arpl
lock
push
imul
sbb
(bad)
jle
cmp
jp
cwde
jl
xchg
jl
inc
add
mov
pop
xchg
pop
push
sub
mov
aad
test
push
pushf
push
xchg
sbb
ds
push
push
xchg
jnp
jmp
dec
sbb
mov
jbe
fnstcw
out
imul
icebp
pusha
push
and
xchg
mov
test
ret
and
(bad)
mov
(bad)
(bad)
cmp
adc
das
je
or
out
mov
das
inc
sbb
mov
imul
neg
out
mov
dec
inc
fs
push
mov
aad
push
lock
dec
fcomip
test
push
test
jecxz
cwde
push
cmps
es
out
into
pop
sbb
and
cmp
cmp
movs
(bad)
popf
scas
loopne
popa
in
dec
fnstcw
xor
mov
iret
jb
jecxz
retf
hlt
xchg
call
pop
xchg
dec
mov
es
ret
mov
sub
mov
fmulp
jnp
into
push
dec
inc
xchg
arpl
out
iret
fwait
and
push
mov
or
int3
xchg
xor
imul
rol
inc
rol
jo
rcl
jne
fimul
jno
ror
jo
xor
cmp
pop
loop
xor
scas
cmp
cli
adc
jnp
mov
ins
cmp
aam
and
mov
push
stos
mov
adc
(bad)
mov
and
mov
(bad)
sub
dec
cmp
push
mov
xchg
call
js
cmp
cmp
js
mov
(bad)
push
pop
pop
dec
mov
jne
mov
pop
mov
pushf
pop
aam
sbb
lock
jnp
add
mov
call
pop
dec
xor
gs
push
ins
test
sub
fs
adc
xor
aaa
hlt
out
pop
xchg
push
in
hlt
in
mov
outs
mov
jo
aam
adc
xor
fistp
and
sbb
jo
(bad)
ins
sub
sahf
clc
in
fbld
sub
cmp
pusha
xchg
jecxz
cmp
or
scas
sub
test
lea
xacquire
shl
cmp
fdiv
mov
and
retf
ret
push
mov
outs
test
outs
fs
and
cmc
cmps
xor
and
(bad)
or
and
sbb
stos
(bad)
out
add
add
add
pusha
leave
sbb
data16
iret
inc
jo
jne
jne
push
jmp
add
arpl
cs
cli
adc
or
mov
enter
hlt
lds
rcl
fmul
adc
dec
pop
dec
xor
enter
ret
add
(bad)
std
or
mov
mov
ins
vmovntdq
jmp
lea
inc
in
into
jge
ins
ds
mov
mov
pop
dec
pop
aaa
in
jmp
sbb
pop
mov
dec
inc
mov
mov
fs
dec
jbe
pop
mov
bound
aas
(bad)
mov
xor
and
jmp
inc
mov
mov
aaa
scas
ficomp
adc
adc
sbb
adc
add
jl
fs
mov
push
ror
test
inc
pop
mov
xlat
aam
push
inc
add
retf
leave
xor
inc
xchg
mov
scas
xor
repnz
stos
leave
fidiv
xchg
(bad)
into
dec
xor
in
xor
or
mov
push
jb
stc
add
stc
and
test
jmp
aad
std
leave
sar
outs
fwait
jg
(bad)
mov
icebp
mov
xor
xor
mov
imul
mov
inc
jl
xchg
out
mov
inc
cwde
cli
mov
imul
out
xchg
fdiv
in
xchg
inc
and
(bad)
scas
mov
(bad)
fwait
adc
xchg
out
sbb
lock
lock
add
mov
dec
fcomp
lock
daa
je
fs
cmp
rcl
(bad)
jecxz
scas
jbe
mov
jb
(bad)
adc
dec
jp
rol
pop
stos
xor
lds
mov
jbe
cdq
sub
int
addr16
and
ftst
loop
add
js
in
push
mov
rol
dec
pusha
dec
inc
and
callw
les
pop
scas
dec
test
int
mov
addr16
fst
movs
cmp
ja
test
cmp
ret
loopne
sub
add
mov
nop
ins
xchg
jae
out
sub
imul
pop
mov
fadd
jl
mov
movs
push
adc
push
xchg
mov
or
inc
cmp
outs
mov
les
mov
loopne
gs
dec
ja
push
(bad)
pop
jnp
jecxz
fwait
add
cmp
xchg
or
in
cli
into
mov
in
repnz
out
xlat
aaa
mov
retf
inc
xor
call
out
sub
or
pop
jecxz
xchg
push
int
or
rcr
leave
mov
fs
into
add
push
sub
call
and
fsub
(bad)
mov
sub
inc
outs
mov
jno
cld
out
scas
les
and
movs
adc
call
or
pop
out
fst
xor
xchg
shl
movs
outs
dec
mov
shr
push
out
jp
or
les
loope
mov
mov
aaa
inc
icebp
jmp
adc
sub
sub
lods
pop
lea
es
rol
mov
xchg
mov
and
pushf
inc
push
or
outs
or
cmp
mov
fcmovu
in
xchg
mov
inc
cmp
add
sub
in
mov
and
test
cld
xor
arpl
push
xchg
cmps
je
(bad)
mov
mov
lahf
in
shl
aaa
ficomp
sbb
(bad)
retf
inc
push
cld
adc
jg
mov
inc
mov
bound
sub
mov
or
mov
enter
pop
push
ins
cdq
sahf
bnd
lds
mov
repnz
mov
fadd
cmp
dec
mov
out
cmp
xor
inc
xchg
imul
mov
mov
inc
mov
jle
sbb
push
or
iret
push
dec
add
jne
(bad)
bnd
cmp
fidiv
std
inc
adc
leave
mov
lea
mov
(bad)
mov
aas
sbb
pusha
scas
(bad)
int
push
call
xchg
or
mov
outs
stos
icebp
add
push
mov
pop
dec
pop
sbb
scas
pop
test
stos
push
add
adc
in
cmp
xchg
pushf
xchg
sub
int
cs
mov
int3
mov
inc
js
je
lds
enter
out
mov
fwait
jb
push
pop
test
int
xlat
(bad)
in
(bad)
or
and
push
test
jg
ret
cmc
repz
fsub
repz
pop
addr16
dec
inc
or
in
dec
mov
adc
jecxz
push
adc
je
and
mov
test
or
pop
or
stc
adc
das
pop
jbe
mov
test
lods
mov
jbe
jb
sub
fld
xor
clc
mov
bound
int3
push
sub
inc
call
inc
sub
aad
dec
inc
adc
dec
pop
add
mov
pop
dec
add
lahf
pop
retf
push
outs
cli
inc
fwait
test
mov
call
lahf
mov
sbb
imul
test
call
aad
jb
sub
(bad)
imul
pop
cmp
xchg
add
in
fwait
sub
aas
dec
and
loope
cmc
xchg
outs
dec
ins
cmp
nop
sbb
aaa
iret
loop
mov
icebp
and
xchg
(bad)
or
pop
imul
call
(bad)
cmp
outs
xor
push
pop
ret
pusha
fbstp
push
and
jg
iret
jno
int
jno
jg
add
pusha
jno
xchg
lock
inc
aaa
je
and
jo
sahf
aad
adc
fwait
jne
pushf
mov
fild
std
mov
dec
inc
js
or
test
xor
mov
xchg
ss
ret
out
adc
loop
stos
dec
(bad)
jecxz
push
(bad)
rcr
sub
or
inc
add
sub
pop
repz
xor
push
mov
mov
pusha
jo
xchg
push
jo
xchg
and
rcl
pusha
push
icebp
and
rcl
je
fcom
ret
ins
shr
inc
and
dec
pop
adc
inc
mov
fadd
xchg
popf
adc
aaa
adc
xor
jl
mov
push
nop
imul
jmp
push
add
jp
daa
inc
sbb
repnz
(bad)
dec
ret
ss
push
test
lds
jecxz
inc
sub
lea
add
call
pusha
in
leave
mov
xlat
jp
jns
adc
repz
es
xchg
xchg
cmps
adc
sti
stc
inc
aaa
sbb
and
mov
rol
bound
sbb
scas
test
mov
dec
push
jnp
ja
(bad)
mov
pop
aam
aaa
in
cmp
xor
imul
in
fsincos
and
pop
adc
fst
sbb
fadd
pop
xchg
sub
mov
or
jg
mov
cli
adc
shl
and
lock
fs
and
dec
movs
and
sub
fst
cmp
xor
rcl
xchg
mov
inc
mov
jmp
push
jbe
pop
cdq
test
(bad)
(bad)
lock
mov
sahf
jmp
add
xchg
mov
icebp
sahf
adc
and
xor
std
mov
add
push
xor
push
add
cdq
fild
(bad)
shl
lds
dec
mov
out
mov
jp
push
or
mov
sub
jg
mov
jae
stos
sbb
push
sub
imul
mov
call
and
dec
repnz
dec
push
dec
mov
sbb
inc
jb
add
cmp
or
adc
adc
fcmovnbe
(bad)
adc
hlt
pop
xor
cdq
add
add
hlt
(bad)
mov
stos
mov
adc
adc
rcl
mov
or
jno
shr
fldpi
mov
inc
cli
inc
sbb
jbe
popf
(bad)
out
mov
xchg
fiadd
ja
es
lods
adc
cmovns
xchg
adc
rcl
pop
inc
lock
aaa
lods
movs
es
inc
push
ror
and
mov
daa
adc
push
sub
iret
jb
push
shl
xor
xor
ins
loopne
adc
adc
rcl
fs
arpl
xchg
ror
jl
into
test
and
pusha
loop
add
jl
push
aad
jl
mov
or
sbb
add
loope
sub
(bad)
mov
aas
repnz
xor
push
sub
jge
jp
mov
fiadd
and
jle
sbb
je
popa
mov
js
nop
retf
loop
cld
adc
out
ds
inc
push
push
inc
shl
sbb
ins
nop
pusha
in
icebp
mov
shl
inc
fistp
adc
test
pop
cmp
jle
je
add
jecxz
mov
add
push
add
ins
aaa
outs
lock
xchg
aam
push
mov
fs
inc
sbb
jno
and
mov
in
xchg
pop
into
jl
stos
xchg
ins
inc
loopne
cmp
pop
fwait
jae
call
jns
les
mov
stc
mov
inc
clc
call
js
pop
inc
out
jns
adc
ret
xchg
or
mov
pop
push
add
arpl
xor
and
aad
rcl
jnp
pop
jnp
mov
add
std
and
jg
sbb
xor
arpl
push
iret
aaa
inc
in
lods
pop
cwde
mov
jmp
loopne
dec
stc
sbb
cmp
or
pop
sub
iret
xor
sub
fwait
xchg
jae
mov
and
scas
lahf
hlt
adc
jo
mov
and
xchg
jge
jae
or
push
out
add
call
sub
mov
cmp
repnz
cmp
hlt
xor
dec
shl
push
fmul
sbb
neg
mov
rcr
loop
pop
jecxz
inc
and
dec
push
fwait
push
cwde
(bad)
push
or
push
test
jp
xor
sub
push
cmps
clc
adc
aad
pop
inc
rcr
jne
enter
sub
in
aad
adc
(bad)
in
add
push
push
mov
out
or
xor
fld
outs
ret
or
lods
lock
xchg
cdq
or
test
add
sbb
jns
pop
pop
test
fisttp
jae
pop
sbb
add
adc
mov
xchg
ror
xchg
adc
inc
push
jo
in
and
fld
push
add
jb
sub
rol
sub
pop
cdq
scas
callw
pusha
push
add
dec
scas
pop
inc
cmps
enter
rol
inc
inc
rcl
in
add
fld
mov
xor
cmps
push
fistp
into
rcr
(bad)
push
sbb
push
and
in
jle
or
push
in
push
inc
adc
mov
shr
(bad)
les
mov
inc
mov
jb
jecxz
in
movs
xor
je
sub
mov
adc
cmp
pushf
sahf
inc
sbb
and
mov
into
shl
or
inc
adc
sub
aaa
pop
loopne
adc
arpl
std
and
leave
cmp
dec
push
imul
rol
push
rcl
pusha
pusha
rcl
jo
aam
jae
fadd
push
ret
jge
gs
inc
and
mov
dec
outs
rcl
push
ret
jmp
sub
jnp
out
shr
sbb
fisttp
test
push
inc
mov
push
sub
scas
sub
mov
jmp
adc
dec
dec
mov
adc
dec
pop
mov
xchg
repnz
mov
jo
cmp
div
(bad)
xlat
jne
mov
jecxz
push
push
or
popf
pop
movaps
enter
push
pusha
jmp
dec
mov
xor
mov
out
(bad)
lds
(bad)
xchg
and
enter
add
loop
inc
mov
jg
out
jge
outs
cpuid
loop
test
or
repz
ret
lods
xchg
inc
xor
or
mov
dec
jne
popf
sbb
lods
cmps
lods
pop
sbb
push
jl
xor
inc
pop
mov
out
push
jmp
je
ja
out
adc
mov
jmp
add
or
sub
xchg
inc
pop
stos
xchg
dec
(bad)
mov
sub
(bad)
shl
mov
clc
retf
xor
dec
aam
pop
mov
mov
shl
add
cmp
xor
loop
sub
inc
pop
out
inc
cdq
call
lea
jo
dec
test
push
cld
imul
imul
push
iret
in
nop
(bad)
jno
jns
mul
test
cmp
or
xchg
mov
lock
add
ret
add
sahf
jnp
gs
test
int
addr16
outs
clc
fld
iret
jae
aad
cli
and
jle
pop
cmps
in
push
int
lds
in
xchg
xchg
cdq
test
jge
cs
mov
xlat
add
jg
jb
or
lods
rcl
inc
enter
dec
push
inc
push
cmps
jge
lock
mov
or
jp
xchg
add
sub
inc
adc
and
data16
std
adc
cmp
mov
icebp
mov
xlat
aas
xchg
(bad)
lock
cmps
sbb
jge
enter
sti
mov
in
cwde
aam
cdq
jmp
cmp
lods
lds
icebp
movs
mov
test
push
push
fwait
pop
jnp
ins
and
mov
push
stos
mov
add
ret
int3
shl
mov
addr16
jp
nop
adc
call
mov
inc
adc
pop
add
xchg
lods
inc
xchg
push
and
jmp
loopne
xlat
int3
inc
lahf
pushf
inc
movs
xchg
cmps
jne
repz
jecxz
and
fs
sub
sub
xchg
xchg
out
in
xchg
call
movs
aad
(bad)
pop
xchg
loop
pop
sar
dec
dec
push
jnp
lea
mov
popf
inc
jmp
dec
xor
push
cmp
dec
add
aas
xchg
jnp
loopne
mov
lods
sbb
je
repz
shr
aam
int
outs
js
ja
out
push
stos
sbb
xor
rol
cmc
jmp
cdq
ret
xchg
daa
and
imul
fs
jo
jo
movs
xchg
xor
xor
adc
cmps
xchg
dec
xor
sbb
icebp
jle
jae
xor
popa
stc
inc
sar
out
add
test
fisttp
sbb
call
inc
outs
xor
sub
in
add
ror
popf
sahf
adc
jmp
repz
lock
sar
mov
sub
mov
popa
arpl
lea
push
mov
mov
sti
mov
xor
mov
mov
cdq
or
sbb
dec
in
arpl
clc
push
inc
sub
addr16
mov
or
fwait
push
pop
lds
pop
adc
enter
cmps
out
(bad)
popa
add
push
mov
call
cwde
fisttp
outs
cmp
sbb
xor
mov
push
adc
mov
adc
mov
pop
pop
pushf
or
pop
in
mov
movs
mov
jg
sahf
lds
mov
push
push
pusha
pop
movs
inc
xor
push
dec
adc
(bad)
cmp
lock
sahf
adc
push
retf
mov
jns
cmp
jns
inc
lahf
enter
inc
jns
push
loopne
xor
adc
mov
adc
lods
ror
enter
rcl
jnp
cmp
imul
int
jb
dec
mov
fidivr
pop
adc
xchg
mov
aaa
jg
adc
(bad)
js
pop
(bad)
nop
ss
pop
pop
ins
and
adc
call
stos
mov
xor
cmps
lock
loop
jge
push
cmp
jge
fild
cmc
add
(bad)
ror
int
ss
xor
ror
fldl2e
call
jnp
mov
popf
add
nop
ret
xchg
mov
ret
scas
or
mov
lods
lds
test
or
(bad)
cwde
aas
call
mov
cmp
jns
pop
ja
dec
(bad)
xor
push
inc
repz
fst
leave
data16
sub
nop
arpl
xor
aam
aad
sbb
jle
sbb
lods
cmp
nop
div
daa
pop
cmp
fcomi
xchg
push
out
xor
xchg
fiadd
sbb
out
add
js
pop
mov
movs
rep
stc
stos
fnstenv
dec
dec
dec
cs
cmp
mov
ret
push
mov
in
mov
sub
outs
sub
and
jmp
in
lods
push
cmps
mov
sbb
(bad)
inc
mov
mov
(bad)
dec
in
sbb
add
mov
mov
and
ja
cmp
add
sbb
js
cld
sahf
push
out
fmul
adc
cmps
jb
cmp
adc
mov
and
add
xchg
das
gs
dec
cmps
loopne
mov
sub
cdq
out
ins
fmul
cli
pop
int
and
pop
cmc
jo
addr16
leave
xor
pop
adc
dec
dec
lods
mov
ror
cmps
mov
aad
add
sbb
push
push
cdq
add
mov
mov
arpl
add
or
xor
xor
je
in
xchg
dec
adc
cmp
mov
mov
call
fsubr
sbb
iret
inc
pop
rol
addr16
and
stc
loope
(bad)
cs
fst
add
pop
and
xor
push
clc
(bad)
add
inc
xchg
xor
mov
jmp
jno
inc
mov
shr
mov
pop
out
test
shl
test
popa
jmp
xchg
bound
and
jo
mov
add
lea
test
loope
mov
cs
sbb
mov
je
test
mov
outs
inc
sub
jno
fdivr
ror
(bad)
lock
rol
test
pop
dec
jmp
es
and
inc
push
call
retf
push
retf
add
arpl
int
jecxz
nop
cld
jmp
pusha
push
test
dec
cmp
pushf
daa
scas
call
xchg
or
mov
or
cmc
mov
lock
or
movs
cs
imul
xchg
repz
jae
outs
and
cdq
retf
retf
dec
fcom
pop
push
and
lahf
sbb
fild
ins
mul
mov
adc
test
aad
call
dec
in
push
adc
cmp
outs
push
leave
fild
or
and
add
dec
and
jle
repz
push
fcmovbe
adc
(bad)
fdivr
adc
and
xchg
push
test
mov
out
inc
or
adc
mov
in
mul
xor
stos
stc
mov
cmp
xchg
mov
ret
or
adc
mov
inc
push
jb
adc
ja
sbb
jae
ss
aam
outs
push
out
(bad)
sbb
add
dec
jb
adc
fimul
jp
int3
jae
jl
pop
es
or
fs
sub
dec
test
mov
js
or
push
sbb
pusha
adc
jbe
test
mov
nop
add
fsubrp
xor
jns
out
fild
mov
into
int3
push
xor
dec
(bad)
fwait
loopne
ja
mov
clc
add
pop
pusha
or
adc
stos
hlt
popa
ss
test
and
es
jecxz
pop
imul
jns
mov
xor
(bad)
jbe
pop
xchg
sbb
test
sbb
stos
repz
mov
in
mov
sub
fisttp
push
sbb
shl
ror
push
mov
iret
enter
test
scas
(bad)
outs
nop
inc
ds
or
popa
scas
sub
fstp
add
pushf
es
lea
outs
add
add
loopne
inc
xchg
sar
popa
pop
jo
xchg
inc
push
loope
push
push
icebp
mov
xor
xchg
adc
and
loope
lock
shl
adc
jno
jno
xchg
jo
push
adc
xor
xchg
shl
xor
inc
adc
shl
shl
xor
shl
rcl
and
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
popf
jo
vpcmpeqb
icebp
xor
fld
jno
loope
pusha
pusha
rol
pusha
jo
xchg
xor
inc
xchg
jo
and
jo
icebp
and
rcl
xor
popa
jg
add
jno
(bad)
xchg
nop
xlat
daa
push
push
mov
inc
mov
mov
jbe
mov
rol
adc
inc
gs
xchg
jno
ficom
push
rcl
loopne
test
and
clc
push
dec
mov
das
es
sbb
jb
mov
leave
retf
mov
in
popa
push
test
push
out
les
dec
mov
xor
adc
jno
sub
push
into
sar
jl
push
lahf
aam
pusha
aad
cmp
jl
cmp
xor
rcr
fidiv
arpl
movs
cmp
fsubr
pop
dec
loop
rcr
lock
mov
cdq
cs
les
pop
pop
xchg
jno
stos
shr
test
xor
mov
call
or
retf
push
sbb
icebp
test
je
add
dec
int
push
mov
repz
jg
xor
lahf
or
shr
cmp
sub
xchg
cmp
adc
ss
and
bound
add
popa
xor
and
and
cli
mov
in
ja
dec
inc
mov
bound
and
xchg
add
sti
cmp
imul
daa
icebp
into
call
add
mov
bound
popa
and
push
pop
in
je
or
mov
inc
dec
push
inc
ss
mov
sub
dec
int
pop
dec
imul
loopne
aam
out
jge
sahf
sbb
test
xlat
mov
push
pop
nop
test
add
mov
out
xchg
sbb
popa
fdivr
out
dec
inc
jo
into
shl
std
push
test
dec
jnp
jle
xchg
arpl
lods
ret
cmp
jo
mov
pop
scas
mov
neg
pop
ror
(bad)
xchg
ds
push
xor
dec
jns
clc
frstor
xchg
loop
adc
loopne
movs
mov
xchg
inc
mov
loopne
sbb
pop
imul
mov
les
adc
pop
or
or
out
dec
jl
test
out
adc
cmp
imul
sub
shr
dec
loopne
fsubr
xchg
xor
rcr
add
jo
xchg
inc
pusha
xor
and
xchg
add
shl
shl
push
jno
mov
and
shl
rcl
pusha
rol
adc
mov
jb
imul
sbb
or
cmp
adc
adc
xlat
icebp
into
cmc
mov
pop
push
in
out
xchg
dec
cmp
movs
fstp
push
mov
xchg
sbb
aaa
mov
les
jmp
popa
shl
scas
leave
pop
jg
stos
cwde
xchg
mov
call
pop
dec
es
or
mov
pop
jecxz
stos
jno
jae
jl
dec
xchg
in
test
sbb
jne
fs
mov
aaa
in
and
add
jmp
addr16
cwde
sub
cld
mov
jbe
sub
mov
pop
outs
push
xlat
out
fs
adc
ret
xchg
xor
leave
xchg
aad
inc
jmp
mov
and
push
and
call
add
popa
loope
imul
cli
or
stc
push
mov
add
xchg
jbe
add
aas
inc
jne
add
xor
out
add
cmc
sbb
or
add
cmps
xor
add
jns
push
xor
les
add
std
pop
cmp
hlt
mov
lds
das
test
inc
retf
xchg
mov
dec
and
and
(bad)
jae
xor
fs
push
lds
cmp
ins
js
xor
mov
(bad)
loop
neg
cmp
rcr
pushf
dec
jnp
or
imul
(bad)
fstp
addr16
jmp
(bad)
lds
fisub
xor
mov
pop
ror
push
cmp
popa
inc
imul
addr16
mov
cmp
xlat
pop
test
cmp
add
(bad)
jp
inc
fs
ror
test
daa
aaa
cmps
or
sti
sar
pop
ja
mov
push
pusha
xchg
in
pop
xchg
imul
cdq
and
aam
jl
xor
rcr
call
addr16
ja
dec
outs
fnstsw
dec
xchg
(bad)
ja
pop
push
ja
sub
ja
or
daa
push
mov
sub
mov
bound
or
cwde
stos
and
mov
cwde
xor
pusha
iret
cmp
mov
test
icebp
test
cmp
inc
not
mov
add
inc
cdq
lods
rol
mov
aaa
scas
or
dec
popa
jae
jno
mov
push
mov
push
mov
jmp
push
into
enter
das
pop
push
mov
es
rcr
push
out
mov
(bad)
pop
rol
ds
inc
mov
in
push
pop
or
cmp
and
hlt
mov
pop
cmp
cmp
fdivrp
xchg
popf
loope
mov
fs
adc
xchg
test
out
sub
stos
mov
jb
cmp
pop
ja
rep
sbb
ins
xor
adc
aaa
add
je
lock
out
pop
pop
addr16
fdiv
lods
adc
and
xlat
lds
sti
pop
int3
aas
outs
inc
push
lods
push
push
adc
leave
call
pop
sub
fadd
pop
mov
mov
mov
pusha
sub
jbe
cmp
mov
je
mov
add
nop
sbb
jmp
(bad)
in
mov
je
or
jae
loopne
daa
into
fcmovu
xor
push
movs
jl
push
mov
ds
add
mov
and
pop
cli
fisubr
add
adc
inc
test
dec
jg
es
sub
mov
and
push
pop
push
xchg
pop
outs
jp
add
and
shl
push
xchg
pusha
jo
xchg
push
jo
mov
xor
adc
jecxz
inc
push
fld
jno
fld
jg
rcl
inc
rol
stc
fcmovne
sbb
test
sbb
push
sti
jo
dec
(bad)
push
inc
jmp
aaa
imul
out
mov
jae
jb
call
sub
xor
ss
les
jo
xchg
push
jg
out
enter
sar
and
aaa
outs
aam
sahf
adc
pushf
sub
imul
movs
xchg
les
inc
cmp
bnd
adc
and
stc
(bad)
fistp
les
or
and
xor
and
mov
movs
sub
jnp
(bad)
and
mov
add
cmp
scas
mov
mov
pushf
pop
xchg
and
mov
push
and
adc
daa
xor
in
scas
mov
jle
cmp
pop
jmp
icebp
add
jl
lods
imul
mov
push
call
ret
and
in
test
sub
loope
pushf
fsubr
hlt
sub
outs
lock
mov
pop
inc
and
or
inc
out
add
and
and
push
nop
adc
xor
adc
es
sub
bndstx
scas
or
sub
movs
mov
push
or
aaa
clc
mov
pusha
jne
sbb
jo
dec
mov
push
and
adc
pusha
rcl
push
icebp
shl
shl
and
hlt
jo
jmp
mov
inc
inc
lea
dec
jo
xor
xor
and
dec
sbb
cli
pop
rcr
cwde
scas
or
stos
aad
mov
cmp
clc
jo
sbb
dec
jecxz
push
inc
mov
hlt
and
add
cld
add
jmp
std
xor
dec
sub
inc
push
repnz
jg
call
and
test
jnp
ds
loop
out
scas
cld
pusha
xor
fisttp
(bad)
mov
adc
movs
fidiv
movs
or
pushf
outs
retf
(bad)
fistp
and
ret
or
xor
movs
adc
adc
push
cmp
aam
pop
jmp
inc
sbb
xor
mov
push
mov
xor
cmp
sahf
jne
pushf
lock
jmp
cmp
adc
sub
jge
test
into
add
icebp
bound
outs
or
lods
mov
xchg
jmp
cld
xchg
jno
loop
stos
out
or
into
jle
lahf
ins
and
or
inc
aad
jns
mov
stos
ss
pop
repz
scas
fild
inc
xchg
lock
add
mov
sbb
out
cmp
push
mov
push
or
or
mov
fadd
and
in
inc
cmc
inc
inc
or
adc
xor
dec
sub
xor
mov
loop
outs
pop
cld
aas
fdivrp
pop
retf
mov
addr16
xchg
idiv
addr16
push
xor
and
mov
mov
and
inc
hlt
add
push
push
dec
test
mov
inc
shl
pusha
inc
rcl
jno
adc
fadd
jl
jmp
pushf
xor
mov
aaa
inc
sar
arpl
movs
out
popa
pushf
add
xchg
inc
xchg
inc
mov
pop
jmp
mov
cmps
es
mul
cmps
xor
ret
cmp
pop
jo
adc
dec
push
mov
mov
jns
mov
ret
not
mov
sbb
shl
es
pop
imul
add
ins
fild
outs
(bad)
push
je
xchg
jle
mov
pop
scas
int3
xchg
and
imul
cdq
mov
dec
or
jo
sub
adc
push
inc
fsub
or
sub
jo
pop
out
jl
or
mov
push
sbb
push
adc
mov
clc
push
inc
jmp
rcl
mov
shl
inc
xlat
shl
cmc
push
pop
push
adc
popf
push
mov
pusha
lea
xchg
or
fisttp
pop
es
ret
sub
in
pop
lods
lods
mov
cmps
pop
in
add
jne
int3
lea
mov
hlt
pcmpeqb
add
call
inc
call
mov
cmp
(bad)
aas
mov
pop
jle
mov
xchg
and
std
ret
and
cmp
add
lea
(bad)
inc
or
pop
ins
daa
adc
cs
shr
popaw
lahf
push
cmp
test
aam
jae
xor
cmps
in
mov
xor
jnp
into
pop
mov
cwde
mov
sbb
sbb
add
shl
call
outs
sub
mov
push
inc
sbb
push
fnsave
cli
jmp
and
dec
daa
or
pop
cld
inc
call
add
cmp
xor
inc
jmp
into
jl
(bad)
mov
inc
fst
cs
retf
pop
jmp
sbb
mov
mov
mov
cmc
or
mov
push
or
cmps
pop
mov
ror
mov
shl
mov
test
int
xor
push
cmps
pop
repnz
cmp
mov
push
inc
or
ins
loope
fiadd
sub
xor
dec
dec
scas
ins
std
push
jp
pushf
adc
movs
stos
mov
push
adc
and
jp
adc
stos
nop
inc
jmp
or
jl
adc
adc
lea
or
sbb
push
out
pop
pop
mov
xor
and
adc
mov
inc
js
cs
leave
add
nop
jl
push
adc
in
out
sub
sbb
xor
pop
adc
cmp
ds
push
jmp
adc
gs
sahf
push
into
dec
xchg
jle
or
dec
loopne
jp
loope
mov
jae
sbb
sbb
fnsave
xlat
mov
ror
std
add
xor
lea
mov
(bad)
ds
mov
xchg
jmp
adc
out
add
pop
mov
hlt
pusha
inc
ds
dec
test
push
cmp
lods
lea
movs
jle
lahf
in
inc
push
(bad)
fwait
sbb
(bad)
int3
inc
cmp
mov
sbb
stc
push
scas
pop
xor
or
lods
pop
scas
enter
mov
out
imul
fcomp
cli
icebp
fadd
lods
or
movs
loop
je
popa
mov
sbb
pop
cwde
push
ins
popf
adc
lods
pop
push
fisttp
jl
cmps
int
(bad)
push
mov
cmp
mov
push
mov
(bad)
or
pop
push
es
and
cs
push
aas
adc
mov
hlt
scas
mov
jg
int
not
dec
add
and
add
loopne
adc
scas
cmps
clc
fldenv
cwde
and
mov
rcr
or
int3
cmps
(bad)
pop
xchg
or
push
inc
pop
imul
idiv
xchg
repnz
arpl
dec
adc
jno
in
into
lea
mov
jmp
mov
mov
mov
xor
sbb
xchg
dec
sub
pushf
in
mov
in
jmp
hlt
(bad)
jge
aad
mov
push
test
mov
aas
daa
adc
sub
es
xchg
push
inc
frstpm(287
cmp
outs
xor
call
sti
aas
loope
mul
inc
mov
and
xchg
xchg
dec
lock
dec
clc
pusha
aad
inc
ds
test
add
or
and
dec
ss
sbb
adc
fnstcw
xchg
dec
sub
mov
shl
add
aaa
pop
mov
int
in
pop
lahf
outs
mov
mov
shl
mov
sahf
jne
sub
jg
cdq
mov
push
jle
jmp
cpuid
hlt
pop
jecxz
les
sub
retf
add
xor
scas
ins
mov
cld
push
stos
retf
xor
popa
fld
popf
retf
inc
dec
out
cmp
xor
aam
icebp
in
dec
cld
pop
inc
in
cli
(bad)
and
jp
cdq
and
mov
sbb
sub
ror
in
cmp
sub
popa
pop
nop
add
std
shl
mov
movs
push
xor
jno
mov
mov
bound
adc
jae
test
add
int
xor
xor
ja
or
mov
stos
mov
jmp
mov
mov
je
sbb
or
mov
fisttp
mov
dec
leave
adc
iret
mov
mov
push
dec
scas
outs
cmp
mov
mov
dec
lods
dec
pop
push
inc
fdivr
ss
in
xchg
xbegin
fs
pusha
enter
pop
xchg
mov
pop
lods
mov
adc
sub
cs
xchg
js
add
cmp
fidivr
dec
ds
ffree
pop
or
hlt
icebp
mov
mov
in
mov
mov
jg
mov
leave
fstp
dec
enter
call
cmc
mov
xor
mov
cmp
sbb
add
mov
xchg
mov
xor
cdq
add
out
retf
(bad)
mov
mov
aam
out
imul
retf
call
div
pop
dec
das
(bad)
jl
sahf
ds
cwde
ins
mov
in
jnp
and
lock
lock
add
inc
test
ret
mov
mov
add
cmp
shl
xlat
(bad)
push
inc
jo
jge
xor
push
fnstsw
nop
sbb
sahf
ror
fwait
jle
(bad)
or
pop
neg
or
out
popf
dec
idiv
scas
std
in
mov
call
pop
sar
dec
mov
stos
(bad)
mov
mov
sahf
lahf
rcr
fdivr
push
ja
out
push
sub
add
in
dec
mov
lods
fs
(bad)
and
jl
cmp
jb
sub
stos
(bad)
jmp
xchg
xor
sbb
mov
push
outs
retf
jge
(bad)
and
daa
ins
or
pop
adc
ja
xor
ins
lds
push
outs
xor
es
cmp
or
std
and
imul
ror
pop
pop
pop
out
mov
sbb
data16
push
xchg
xor
mov
xor
mov
jo
rcl
push
fiadd
bound
arpl
ds
lock
shr
pusha
xor
int
fmul
addr16
xor
jae
retf
jecxz
inc
jbe
aaa
xor
jns
lds
mov
and
and
pop
aas
(bad)
fs
outs
cmp
adc
jae
hlt
cmps
or
aad
je
int3
nop
mov
add
(bad)
ins
fiadd
into
xchg
loop
cmp
jle
xor
xchg
or
jecxz
add
(bad)
mov
popa
cdq
enter
pop
jle
mov
ss
xor
adc
inc
and
pusha
pop
sar
xchg
or
ds
mov
cli
xlat
ins
stos
(bad)
leave
outs
movs
cld
push
inc
gs
push
nop
rcl
bound
mov
mov
sahf
add
mov
sti
inc
cmp
adc
jnp
out
xor
or
shl
in
cdq
push
aad
or
out
mov
mov
retf
jo
in
cmc
cwde
inc
dec
(bad)
mov
out
mov
arpl
fistp
ret
jns
and
sbb
popa
stos
xlat
xor
adc
or
jns
idiv
loopne
nop
stos
aas
popa
push
sar
loop
adc
adc
adc
not
icebp
add
mov
sub
call
mov
mov
adc
adc
xchg
dec
sub
jno
jmp
xchg
lea
imul
(bad)
push
sbb
xchg
fldcw
xor
mov
mov
gs
inc
inc
or
sub
adc
rol
fistp
sar
fwait
adc
cli
stos
fidiv
scas
in
lds
jne
mov
pop
pop
adc
stc
mov
std
mov
jle
dec
fwait
ja
stos
sbb
call
adc
and
cdq
sbb
adc
inc
cmp
retf
ficom
(bad)
enter
aad
jb
pop
ror
mov
mov
enter
movs
jecxz
mov
bound
or
imul
adc
out
mov
out
adc
push
push
xor
mov
sub
inc
clc
stos
push
add
fs
out
add
scas
xchg
aam
inc
pop
xchg
jmp
cmc
xor
outs
movs
(bad)
cmc
pusha
sar
or
xchg
out
cld
test
movs
addr16
addr16
mov
mov
cmp
icebp
cld
scas
cmp
dec
add
push
mov
mov
shr
icebp
inc
hlt
stos
sti
or
cmp
outs
stos
jmp
or
mov
mov
(bad)
push
push
fstp
or
les
jl
test
xor
push
xor
sub
mov
fdiv
sub
std
nop
jecxz
out
pusha
xchg
gs
or
leave
add
in
std
sbb
or
sub
repz
into
in
sbb
and
cwde
xchg
sbb
test
mov
cmp
adc
jl
xchg
lahf
test
cmp
es
movs
(bad)
push
push
sub
test
loope
int3
mov
adc
jae
(bad)
xor
inc
jmp
push
mov
aam
mov
xchg
sbb
dec
pop
nop
call
aas
lods
xor
mov
sub
fs
lock
ret
test
lods
xchg
lahf
push
adc
dec
mov
leave
mov
mov
enter
xchg
pop
pop
lds
mov
xor
imul
lahf
dec
jnp
test
fcomip
ins
daa
pop
or
adc
iret
jo
mov
inc
fld
arpl
loopne
fmul
dec
add
mov
xchg
sub
add
sbb
rcl
scas
lods
pop
mov
xchg
ret
inc
fld
cmp
fimul
add
jnp
xchg
movs
daa
jmp
push
rcl
cmp
test
jo
add
ror
push
dec
hlt
out
test
inc
lock
sbb
push
sub
mov
sbb
jo
jbe
push
jmp
inc
push
mov
mov
inc
rcl
shl
std
imul
scas
sbb
sti
or
outs
and
jno
mov
shr
sub
sbb
fld
jle
cmp
repz
jae
rcr
retf
rol
ds
mov
int
mov
jnp
fwait
out
movs
icebp
xchg
sbb
lods
xor
jmp
or
aam
cmp
jge
movs
(bad)
fisub
inc
(bad)
add
mov
inc
fdivr
xlat
ret
mov
mov
jle
pop
push
cmps
add
xchg
shl
popf
push
and
jnp
mov
dec
inc
or
pop
sbb
pop
test
cwde
cli
sbb
jecxz
mov
adc
cdq
(bad)
shr
or
inc
in
xor
xchg
call
pop
gs
adc
xor
ss
loope
sbb
and
(bad)
dec
jns
clc
sbb
push
into
mov
push
mov
pusha
lods
xor
imul
js
int
inc
and
add
mov
cmp
mov
lahf
or
add
jle
ror
mov
mul
pop
sbb
shl
xchg
sbb
cwde
push
shl
or
mov
mov
inc
outs
sysenter
or
lock
in
mov
pop
(bad)
sbb
cli
inc
loope
and
ret
mov
loope
lahf
icebp
and
int
cwde
(bad)
(bad)
or
js
add
mul
sbb
add
inc
xchg
mov
push
rcl
jbe
sti
je
mov
(bad)
shl
add
pusha
jno
xchg
inc
fldenv
stc
in
xchg
sub
call
aad
movs
shl
pop
push
aad
je
mov
(bad)
clc
loopne
pop
inc
xchg
lock
xchg
xor
nop
jmp
rcl
jns
xchg
lock
xchg
imul
xchg
bnd
and
jo
aad
lock
add
bnd
mov
xor
adc
pop
xlat
mov
sub
leave
adc
xchg
xor
mov
xor
or
rcl
lock
xchg
and
push
and
mov
adc
and
rcl
popa
aam
jbe
fild
jl
into
sub
popa
pushf
jo
repnz
scas
mov
jbe
shr
call
xchg
neg
pop
inc
stc
or
push
mov
retf
(bad)
push
cmp
bound
xor
add
mov
adc
ins
enter
or
or
lahf
dec
push
inc
rol
aam
not
fnop
or
std
cmp
fld
sub
xchg
and
xlat
or
add
xor
jb
add
jg
and
pushf
pop
push
and
inc
(bad)
sti
pop
ja
mov
rcr
push
mov
nop
pusha
jbe
adc
ins
xchg
push
mov
or
icebp
dec
cmc
jmp
push
mov
mov
mov
mov
add
sti
loopne
mov
ins
gs
inc
mov
push
loopne
lds
sbb
stc
and
int3
cli
iret
fild
sbb
mov
mov
leave
sbb
test
std
push
xor
lods
out
jmp
mov
movs
add
int
cmc
and
pop
fldlg2
pop
sbb
jge
cmp
mov
int3
mov
and
jp
mov
or
loope
ret
stos
xchg
js
iret
mov
jge
enter
popa
jle
aad
cmps
jo
mov
fisub
cmp
sbb
jnp
outs
inc
out
xor
out
call
fnstcw
sbb
and
pop
ins
jae
shl
pusha
rol
pusha
rcl
jo
rol
jne
enter
fmul
jb
rcl
push
rol
out
or
das
sbb
ins
xchg
adc
dec
cwde
pushf
jnp
fisttp
push
sub
push
xor
fistp
inc
xchg
mov
cwde
je
mov
inc
pop
mov
aad
cmp
xchg
hlt
sbb
mul
or
push
aad
sbb
xor
jno
fild
pop
inc
xchg
sub
dec
push
pop
out
adc
scas
rcr
adc
push
or
add
and
dec
pop
repnz
lds
fist
pop
push
mov
sbb
arpl
or
cmp
push
sbb
mov
pushf
in
add
mov
fstp
adc
sti
rol
jecxz
pop
cmps
fsin
movs
push
icebp
icebp
mov
mov
(bad)
fs
adc
retf
fadd
jns
dec
pop
mov
cmp
mov
add
sbb
loopne
icebp
(bad)
lds
or
add
aad
push
mov
sar
imul
jo
mov
xchg
(bad)
aad
jne
add
test
in
aaa
cdq
fsub
iret
fdiv
adc
jb
dec
push
sub
sbb
sbb
push
inc
aad
add
stc
pop
push
xchg
fstp
push
adc
or
fidivr
out
sbb
pop
and
ds
outs
xor
js
mov
scas
fwait
stos
xlat
ror
scas
mov
shl
xchg
xchg
jl
test
pusha
outs
mov
jae
push
ds
sbb
push
rcl
push
push
loope
pusha
pusha
rcl
xlat
xor
jno
fstp
ret
ins
shr
jo
and
push
or
mov
ror
pop
fldenv
popf
fs
jns
out
fdiv
fcomp
hlt
(bad)
lea
add
push
fsub
push
and
mov
pop
add
cwde
push
cmp
movs
dec
mov
and
dec
sub
enter
pop
rol
jge
ins
das
push
mov
js
call
mov
jb
inc
test
dec
pop
cmp
in
jg
ss
popa
mov
lahf
xchg
push
dec
pop
cmp
stos
add
lock
mov
js
addr16
inc
cdq
sbb
push
pushf
mov
test
or
sbb
push
loopne
xchg
lahf
mov
pop
sbb
jne
enter
mov
cmp
retf
push
sbb
add
mov
nop
lds
nop
push
mov
ins
cld
sub
out
out
adc
dec
leave
pop
mov
xchg
xchg
sti
repz
and
dec
xor
ja
(bad)
fcom
push
pop
mov
dec
adc
dec
mul
call
pop
aad
xlat
sbb
das
mov
mov
cmp
rol
xchg
das
enter
pusha
push
mov
mov
xor
mov
inc
jno
sub
les
jne
jmp
popf
jb
and
retf
sbb
js
adc
test
repnz
jne
jne
pushf
sar
inc
fist
adc
mov
xchg
repnz
jo
xchg
shl
mov
inc
adc
mov
push
inc
ret
mov
aad
shl
xchg
push
loope
sub
je
call
aaa
dec
xchg
test
add
es
rcl
rol
push
test
cdq
jo
je
retf
push
loope
jl
sahf
call
mov
jg
lods
mov
movs
les
mov
ficom
and
test
xlat
xor
and
cdq
push
push
out
(bad)
xchg
jbe
outs
add
cmp
adc
stos
sbb
je
loopne
sub
scas
in
mov
addr16
push
aam
mov
add
jp
cmps
outs
pop
mov
mov
jge
xor
add
out
shr
in
call
mov
dec
jmp
das
shl
(bad)
fdiv
fadd
lods
cmc
sbb
cmc
pop
pop
sbb
dec
push
push
dec
add
dec
inc
inc
cli
jmp
loop
inc
ds
jno
push
movs
pop
pop
mov
mov
pop
js
(bad)
xchg
ret
addr16
jae
jg
dec
sub
(bad)
xchg
pop
into
loop
adc
jno
cmp
ret
or
mov
cdq
loop
ds
push
jle
lds
pop
fsub
popa
ss
jo
arpl
adc
adc
cmp
adc
ret
jae
pop
sar
adc
nop
lds
adc
daa
mov
or
mov
add
add
or
sub
or
xchg
lods
ins
fmul
ret
add
mov
shl
ja
ret
daa
cwde
mov
retf
mov
xchg
sti
(bad)
shl
stos
retf
sub
test
je
fcmovnu
mov
sbb
ret
mov
adc
scas
jl
daa
ins
cmps
pop
adc
or
outs
push
pop
xchg
outs
mov
mov
jb
and
repz
ret
cld
fld
mov
inc
xor
sbb
cli
and
loope
push
js
movs
mov
lds
ret
test
xlat
xor
(bad)
pop
popa
jno
push
mov
mov
mov
jg
fstp
push
mov
xchg
aas
clc
mov
jne
inc
mov
rcr
push
sub
or
es
jmp
retf
in
push
fist
outs
out
pop
ret
mov
ffreep
ins
pop
cmp
(bad)
jo
lock
adc
mov
out
cmp
mov
lea
int
rcr
ins
mov
pop
adc
push
(bad)
mov
dec
test
pushf
test
cmp
adc
out
pop
or
push
mov
jns
xchg
dec
daa
(bad)
aam
push
lods
dec
cs
push
mov
into
jb
push
and
inc
pop
ficom
jno
mov
in
shl
call
push
pushf
jo
stos
pop
push
add
inc
aaa
out
jg
mov
test
sub
pop
adc
popf
adc
inc
enter
(bad)
add
mov
cli
(bad)
push
iret
push
push
mov
pushf
test
hlt
jne
xor
mov
pushf
in
cmp
ror
mov
push
outs
adc
xchg
jne
stc
out
push
adc
mov
mov
inc
mov
bound
mov
inc
cmp
jle
and
je
inc
das
lods
xor
push
pop
aaa
cmp
shl
js
and
cmc
mov
mov
xor
jle
dec
cmp
test
jno
pusha
shl
fdiv
adc
nop
das
xchg
cmp
js
cwde
fdiv
call
jmp
push
call
in
pop
sub
mov
outs
fadd
ins
pusha
cmp
jmp
jecxz
pop
xchg
add
pop
mov
test
inc
retf
(bad)
sub
xor
ins
pushf
iret
pop
or
jbe
xor
sti
(bad)
fimul
dec
jo
pop
pop
jge
and
sahf
clc
dec
xchg
addr16
mov
in
xchg
push
pusha
xchg
cmp
inc
xor
xchg
ds
xor
imul
lahf
dec
jne
mov
ret
fisub
pop
cmp
call
popf
ss
or
add
test
fwait
mov
pop
push
and
std
retf
in
outs
inc
sar
(bad)
sub
sub
popa
mov
push
mov
xor
jle
push
fst
lods
dec
push
daa
fiadd
xchg
inc
js
bound
leave
sub
or
popf
scas
out
pusha
outs
adc
popf
ret
iret
adc
sub
shl
retf
fucomi
je
jno
popf
in
add
stos
idiv
mov
repz
cmp
jbe
fisubr
inc
call
cmps
ja
ins
mov
xor
xor
ins
ins
loopne
or
cmc
pop
call
cs
jns
in
or
xchg
inc
js
popf
jae
adc
mov
add
dec
(bad)
dec
ror
jno
mov
sbb
push
add
popa
inc
sub
shl
mov
pop
loope
aam
out
inc
(bad)
sti
xor
fidiv
mov
jmp
and
add
ficomp
fwait
popf
add
in
or
xchg
imul
ret
mov
jp
shl
loope
mov
add
xchg
lds
mov
dec
push
addr16
jno
xchg
into
icebp
push
jo
adc
xchg
popa
jg
adc
cmp
or
sub
jno
sbb
add
rcl
loopne
cdq
xor
das
lods
retf
xchg
es
mov
inc
hlt
sar
xchg
retf
mov
mov
in
loop
call
lds
jle
add
imul
and
(bad)
aas
push
pop
add
jcxz
xchg
push
loop
in
mov
stc
add
je
xlat
mov
icebp
test
mov
cmc
ins
or
fnstcw
je
pop
sbb
xchg
imul
shl
mov
add
adc
sub
pushf
jae
shl
(bad)
ret
fisttp
std
lea
ins
pcmpeqb
xor
xchg
loopne
rcl
push
test
inc
jo
mov
inc
loope
and
mov
and
xchg
rcl
xchg
xor
rol
push
mov
jno
mov
loope
rcl
shl
popa
lock
add
xor
loopne
popa
xor
mov
lock
shl
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
pusha
outs
jo
adc
loope
inc
pusha
rcl
pusha
pusha
xor
jl
rol
jo
xchg
pusha
jo
xchg
xor
xchg
pusha
add
fidivr
and
rcl
jo
xchg
rcr
jg
add
jno
int3
xchg
add
rcl
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
add
popa
popf
push
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
jo
(bad)
and
adc
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
add
or
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
lock
xchg
and
ins
jg
add
pusha
push
icebp
xchg
pusha
jo
xchg
xor
xchg
push
jo
loopne
es
loopne
popa
pushf
jo
rcl
sar
ja
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
(bad)
jns
cwde
jbe
pop
jae
push
fisubr
dec
mov
xor
push
inc
cmc
rcr
ja
inc
popf
ror
mov
lods
add
stos
shl
(bad)
mov
in
aam
in
sbb
jbe
push
idiv
stos
in
add
sbb
inc
sub
inc
sub
jns
sbb
sti
push
inc
cmc
rcr
ja
inc
popf
ror
mov
lods
add
stos
shl
(bad)
mov
in
aam
in
sbb
jbe
push
idiv
stos
in
add
sbb
inc
sub
inc
sub
jns
sbb
sti
push
inc
cmc
rcr
ja
inc
popf
ror
mov
xor
mov
rcl
pusha
pusha
rcl
jo
xchg
jo
add
jo
repnz
dec
ror
loopne
sub
xchg
retf
clc
fist
mov
mov
loopne
add
mov
sub
sub
jb
(bad)
adc
jo
mov
push
jno
test
and
inc
pop
ror
loopne
sub
xchg
retf
clc
fist
mov
mov
loopne
add
mov
sub
sub
jb
(bad)
adc
jo
mov
push
jno
test
and
inc
pop
ror
loopne
sub
xchg
retf
clc
fist
lods
inc
ds
in
sub
xchg
push
push
dec
sub
packsswb
fdiv
and
xor
test
loopne
daa
add
loopne
cmp
ret
retf
push
add
mov
sbb
add
ins
adc
stos
fdiv
and
xor
test
loopne
daa
add
loopne
cmp
ret
retf
push
add
mov
sbb
add
ins
adc
stos
fdiv
and
xor
cwde
xchg
(bad)
pop
fwait
add
xchg
pusha
pusha
rcl
jo
mov
jne
xchg
jge
shl
nop
lock
adc
push
stos
fdiv
mov
das
pop
push
test
movs
mov
leave
dec
jecxz
aaa
mov
std
js
mov
imul
cmc
mov
dec
or
data16
ds
push
or
pop
test
sbb
fsub
adc
and
out
(bad)
sbb
(bad)
or
fld
pop
enter
ss
stos
fdiv
mov
das
pop
push
test
movs
mov
leave
dec
jecxz
aaa
mov
std
js
mov
imul
cmc
mov
dec
or
data16
ds
push
or
pop
test
sbb
fsub
adc
and
out
(bad)
sbb
(bad)
or
fld
pop
enter
ss
stos
fdiv
mov
das
pop
push
test
movs
mov
leave
dec
jecxz
aaa
ret
sbb
popf
and
rcl
out
jnp
lahf
daa
pop
jbe
or
cli
or
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
rol
mov
and
adc
xchg
enter
sbb
jge
pop
mov
outs
jo
xchg
popa
push
rol
jo
rol
pusha
jo
xchg
inc
jo
xchg
xor
enter
icebp
mov
jo
mov
add
xchg
mov
loopne
fs
add
outs
dec
sbb
or
call
loop
movs
adc
cmovno
dec
and
test
push
sub
mov
push
dec
cmc
mov
mov
aam
push
mov
fnstenv
or
mov
dec
adc
in
in
out
(bad)
in
dec
ret
pushf
mov
sbb
adc
test
(bad)
lods
inc
in
jo
sti
jne
inc
sbb
or
call
loop
movs
adc
cmovno
dec
and
test
push
sub
mov
push
dec
cmc
mov
mov
aam
push
mov
fnstenv
or
mov
dec
adc
in
in
out
(bad)
in
dec
ret
pushf
mov
sbb
adc
test
(bad)
lods
inc
in
jo
sti
jne
inc
sbb
or
call
loop
movs
adc
cmovno
dec
and
and
adc
popa
icebp
out
shr
in
mov
and
sahf
nop
mov
lahf
leave
jb
xchg
dec
pop
outs
(bad)
(bad)
and
sub
cmp
leave
xor
jmp
ficom
nop
div
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
jo
nop
sti
adc
ds
cmps
aaa
cs
idiv
sahf
mov
jo
mov
pusha
pusha
rcl
jg
cmp
data16
inc
xor
or
out
out
add
in
add
mov
pop
repnz
dec
std
test
loop
daa
add
in
jl
jecxz
shl
mov
adc
add
in
add
mov
pop
repnz
dec
std
test
loop
daa
add
in
jl
jecxz
shl
mov
adc
add
in
add
mov
pop
mov
mov
or
push
addr16
inc
or
sahf
sahf
xor
or
pop
lods
stos
cmps
jl
mov
clc
cli
test
push
(bad)
dec
mov
pop
or
mov
lods
stos
cmps
jl
mov
clc
cli
test
push
(bad)
dec
mov
pop
or
mov
lods
stos
cmps
jl
push
rol
xor
ins
mov
and
rcl
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
lock
sahf
and
call
aad
in
mov
xor
or
aad
in
mov
aas
call
aad
in
mov
xor
or
aad
in
mov
xor
or
aad
xor
or
aad
in
mov
xor
or
aad
in
mov
xor
or
shl
pusha
rcl
jbe
xor
fiadd
jge
shl
inc
test
loop
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
inc
mov
loop
and
sub
nop
or
scas
jnp
xchg
es
jmp
mov
xchg
outs
pop
inc
pop
mov
lods
repnz
pop
sbb
push
push
mov
mov
inc
pop
mov
lods
repnz
pop
sbb
push
push
mov
mov
inc
pop
mov
lods
repnz
pop
sbb
push
push
mov
mov
inc
pop
mov
lods
repnz
pop
sbb
push
push
mov
mov
inc
pop
mov
lods
repnz
pop
sbb
push
push
mov
mov
inc
pop
mov
lods
repnz
pop
sbb
push
push
mov
mov
inc
pop
mov
lods
repnz
pop
sbb
push
push
mov
mov
inc
pop
mov
lods
repnz
pop
sbb
push
push
mov
mov
inc
pop
mov
lods
repnz
pop
sbb
push
push
mov
mov
inc
push
xchg
xchg
ficomp
nop
xor
and
rcl
popa
aam
je
mov
lock
cmp
lods
pop
add
mov
idiv
lods
pop
add
mov
idiv
lods
pop
add
mov
idiv
lods
pop
add
mov
idiv
lods
pop
add
mov
idiv
lods
pop
add
mov
idiv
lods
pop
add
mov
idiv
lods
pop
add
mov
idiv
lods
pop
add
mov
neg
popf
push
cmps
sub
xchg
call
mov
ss
scas
retf
pop
iret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
ret
mov
push
inc
mov
repnz
ins
xor
jl
rol
jo
xchg
pusha
jo
xchg
jo
ret
and
xor
ins
lock
rcl
xchg
sub
cmp
scas
ins
(bad)
mov
fstp
inc
fwait
sub
lahf
pop
cmp
scas
ins
(bad)
mov
fstp
inc
fwait
sub
lahf
pop
cmp
test
cmp
fs
call
into
les
pop
mov
inc
xlat
(bad)
mov
je
cmp
mov
(bad)
dec
es
adc
xchg
(bad)
mov
je
cmp
mov
(bad)
dec
es
adc
xchg
(bad)
mov
je
jns
add
push
icebp
xor
lahf
out
aas
push
int
lds
fs
aad
pusha
lock
jo
cs
inc
shl
inc
icebp
mov
xor
inc
rol
add
mov
shl
mov
and
and
mov
add
inc
mov
sub
icebp
test
xor
rcl
add
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
push
rol
inc
rol
and
jg
add
pusha
pusha
rcl
jo
xchg
xor
shl
adc
popf
push
pusha
rcl
pusha
jo
xchg
pusha
jo
xchg
inc
jo
adc
popa
shl
pusha
popa
sahf
push
rcl
jo
xchg
pusha
jo
xchg
push
je
xor
and
jg
push
ins
add
nop
push
jle
shl
loop
mov
add
mov
jb
into
sbb
sub
xchg
nop
add
mov
push
or
sbb
pop
cmp
mov
stos
out
cmp
push
(bad)
call
js
loopne
jmp
add
(bad)
sbb
mov
sbb
ficomp
hlt
adc
outs
add
add
xchg
xor
pop
pushf
call
jg
cmp
in
aas
pop
xchg
jg
data16
xor
mov
shr
ror
xchg
test
cmp
arpl
mov
scas
xchg
jl
mov
hlt
pop
retf
sbb
movs
jl
lahf
ins
sbb
sar
pop
xor
mov
or
adc
mov
cmp
retf
or
add
cdq
sub
(bad)
in
cmp
add
inc
cmps
cwde
cmp
dec
and
or
jmp
or
test
sbb
loope
mov
mov
xor
aam
push
cmp
retf
pop
cdq
sbb
imul
aad
adc
mov
fidivr
xchg
or
pop
mov
stos
stos
mov
add
data16
or
outs
inc
lock
cmc
call
mov
pop
xchg
jne
push
ficomp
push
ror
nop
mov
push
mov
stc
jns
xchg
adc
sbb
mov
mov
fcmovnbe
test
dec
addr16
xchg
nop
jo
pusha
mov
sbb
and
push
add
loop
lea
and
lods
frstor
test
sbb
rcl
out
push
cli
mov
mov
scas
fisubr
rcl
and
jl
xchg
pop
inc
mov
pop
imul
sahf
pusha
jo
xchg
nop
adc
das
movs
cmp
outs
mov
rcl
dec
(bad)
jmp
loope
ins
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
xor
jl
rcl
and
mov
jo
xchg
jo
shl
adc
mov
inc
jecxz
xor
add
test
mov
jbe
rcl
pusha
rol
enter
add
test
mov
(bad)
scas
aaa
pushf
mov
in
fiadd
sti
pop
inc
or
not
dec
mov
jmp
jmp
jo
inc
(bad)
or
loop
push
mov
inc
pop
dec
or
inc
push
adc
fbstp
enter
push
fsub
inc
cmc
and
xor
jg
frstor
add
mov
and
and
in
sub
cld
mov
jg
ds
rcr
or
aaa
daa
out
pop
xchg
cli
mov
xor
mov
test
and
cmp
sbb
in
out
mov
xchg
jmp
xchg
dec
popf
or
cmp
inc
xor
sbb
pop
and
dec
repz
std
jno
sbb
push
pop
cmp
repnz
push
dec
cmp
aas
div
cmp
inc
and
stos
cld
mov
add
test
and
mov
sbb
inc
hlt
scas
pushf
adc
rcl
(bad)
(bad)
or
cli
mov
and
add
in
ret
cwde
push
xlat
inc
push
aaa
sub
push
and
lods
cmc
jae
cmp
stc
and
(bad)
aas
and
test
add
add
add
hlt
pop
dec
retf
or
inc
or
mov
mov
push
std
sbb
in
std
cmp
repnz
and
shl
pop
cdq
test
cli
mov
mov
and
xor
mov
in
inc
xchg
outs
or
mov
jge
stc
pop
retf
sbb
push
xchg
sar
(bad)
mov
jg
mov
inc
fadd
dec
data16
fld
sbb
test
out
ds
iret
sbb
dec
mov
or
mov
in
push
das
adc
and
jmp
jns
xor
stos
sbb
cmp
outs
push
sti
fdiv
fs
leave
mov
and
fiadd
inc
cwde
sub
dec
das
(bad)
sar
(bad)
shl
push
jnp
jae
repz
enter
mov
add
inc
loopne
arpl
dec
cli
bound
mov
jno
or
dec
shr
xchg
dec
enter
push
les
pop
sahf
inc
retf
dec
dec
stos
pop
xchg
add
pushf
pushf
prefetch
xor
push
push
jo
mov
pusha
inc
rcl
popa
shl
push
(bad)
nop
arpl
jno
in
jne
call
ds
shl
jo
push
aaa
push
jg
mov
pusha
icebp
popa
mov
fist
jmp
pop
mov
mov
enter
ret
cmps
push
adc
jo
test
xor
sub
push
adc
cmp
pop
pop
test
std
enter
xor
or
push
add
push
xchg
cmp
dec
or
lahf
fs
mov
lahf
jge
and
aam
jmp
mov
dec
push
mov
fld
adc
xor
push
xor
inc
stc
(bad)
aam
sub
mov
and
ficomp
and
mov
add
xor
retf
cdq
clc
inc
sbb
inc
xchg
imul
call
leave
into
out
popf
pop
sub
mov
test
ins
cld
mov
push
jno
fstp
jo
fisubr
jnp
push
pop
ficomp
add
and
pop
and
pop
fldl2t
out
fisttp
enter
jne
jge
jmp
inc
xchg
push
in
mov
aam
xchg
jle
cmc
cmp
jmp
and
(bad)
jmp
daa
jne
aam
jmp
cwde
inc
(bad)
mov
push
or
movs
dec
mov
pop
sbb
mov
jnp
test
adc
int3
and
jnp
sbb
fistp
inc
mov
(bad)
test
or
and
inc
aam
in
pop
mov
adc
gs
stc
adc
iret
add
or
das
cld
mov
outs
jo
and
shl
pusha
inc
rcl
popa
loopne
jo
rol
jb
shl
jne
add
shr
jo
xor
int3
inc
inc
cmp
mov
call
scas
or
es
aad
les
dec
dec
mov
dec
mov
mov
aas
(bad)
sub
test
hlt
fiadd
jmp
mov
mov
sub
lea
cmp
rol
lea
out
(bad)
dec
add
jae
push
inc
sti
dec
sar
loop
push
sbb
cmp
in
neg
popa
mov
push
inc
pop
push
dec
out
call
adc
sbb
ins
popf
cmp
clc
add
fist
add
mul
test
mov
aam
mov
and
lods
imul
out
mov
sbb
sbb
sbb
inc
cwde
stos
ins
lock
push
mov
push
jmp
add
xchg
xchg
jmp
outs
fisub
and
lods
inc
mov
aam
or
arpl
add
mov
dec
push
ins
fcmovu
js
inc
enter
movs
aam
iret
inc
and
jge
in
inc
lods
sub
mov
ds
fcmove
adc
jmp
pop
fwait
push
and
inc
loop
mov
sub
ss
arpl
add
int
int3
ins
retf
push
inc
jne
jmp
cwde
sub
psrlw
sar
xchg
sbb
aad
or
cli
cmp
xor
and
loope
adc
shl
xchg
shl
xchg
pusha
pusha
loopne
jo
loope
inc
xor
mov
addr16
nop
jb
rol
push
fs
fisub
push
in
jnp
into
mov
and
pusha
rcl
(bad)
sbb
mov
inc
in
or
sbb
idiv
and
mov
nop
push
arpl
sub
test
ja
rcr
jge
adc
dec
push
fsubrp
pop
fst
dec
stos
ja
in
push
les
ja
iret
inc
mov
mov
sub
(bad)
fild
sbb
hlt
pop
(bad)
repnz
jnp
cmp
stc
adc
or
adc
test
fs
bound
shl
imul
lods
aaa
jecxz
test
cmp
jle
ja
add
sub
dec
push
fucomip
jnp
dec
imul
pop
or
stc
jnp
pop
sub
adc
les
xchg
push
pushf
rol
retf
pusha
gs
xor
test
cwde
fcomip
add
cdq
mov
(bad)
fadd
and
push
xor
xchg
inc
sbb
xchg
jl
fcomp
mov
xchg
movs
push
mov
or
mov
sbb
add
inc
pop
aam
pushf
outs
dec
sbb
scas
psubsw
pop
pop
adc
and
and
inc
jp
add
jmp
cld
test
jle
pop
cwde
retf
or
iret
mov
call
das
dec
out
dec
mov
sub
ror
pop
inc
or
cwde
push
aad
ds
adc
sbb
ret
fwait
pop
ins
xchg
in
fadd
sahf
add
xor
ret
bound
add
sbb
ss
mov
retf
dec
fnsave
mov
add
enter
(bad)
mov
aas
int3
xor
inc
fs
cs
cdq
xchg
sahf
ret
rcl
ret
pop
sbb
mov
dec
jp
xchg
nop
cli
mov
cmc
jb
jg
test
push
aad
jge
adc
jle
dec
test
movs
add
or
das
jecxz
mov
xchg
shl
int
add
cmps
push
call
imul
and
mov
mov
fcomp
ins
sub
hlt
in
aam
push
cli
mov
retf
sbb
ficomp
inc
cmp
jmp
adc
call
fisubr
int3
stos
lods
push
rol
lock
inc
retf
movs
adc
pop
push
mov
push
or
mov
jmp
das
push
mov
xor
mov
retf
popa
sbb
mov
push
and
pushf
sub
inc
or
sub
stos
sti
mov
adc
push
repz
sub
jno
ins
cmps
fcom
mov
sbb
lods
xor
dec
out
(bad)
xor
dec
int
sti
xor
xor
push
cmp
jge
dec
push
arpl
aaa
aam
(bad)
xor
inc
jnp
fcomp
pop
xchg
mov
in
scas
dec
outs
cmp
or
ja
pusha
pop
paddq
pop
xchg
jnp
cmc
xchg
xor
mov
sub
ins
nop
fldcw
loope
mov
mov
mov
mov
add
movs
test
nop
or
std
inc
iret
cwde
inc
adc
push
push
fdiv
adc
dec
pop
(bad)
sti
ret
pop
xchg
repz
movs
mov
ror
je
out
add
add
std
and
mov
jmp
ins
push
jle
add
fsub
movs
dec
ins
and
hlt
or
pop
div
movs
inc
daa
jbe
xchg
rol
in
xor
jno
mov
cdq
adc
loopne
cmp
sbb
ss
jp
retf
mov
push
ficomp
jmp
pop
xor
and
mov
lods
out
pop
jb
inc
cmp
add
jle
fucomi
cmp
mov
and
push
ficom
cwde
pop
frstor
push
cmp
dec
test
jg
clc
loopne
or
mov
ss
dec
call
add
xlat
lock
jne
dec
in
nop
mov
mov
dec
pop
outs
cld
or
fcmovb
dec
fisub
xlat
sti
imul
cmp
sub
jecxz
out
xor
cmps
sbb
dec
pop
enter
clc
sub
bswap
jg
mov
clc
int3
fsub
mov
xchg
jecxz
pop
nop
and
outs
repz
ja
in
das
jl
das
jo
mov
sbb
pop
mov
jecxz
xchg
lods
add
inc
adc
xchg
sub
adc
fcmove
push
je
cld
cmp
retf
scas
cmp
pusha
xor
dec
rol
inc
push
shl
pusha
pusha
rcl
je
and
xchg
fisttp
jae
les
jg
inc
xor
(bad)
push
mov
loop
adc
jp
add
xchg
dec
leave
ins
jge
mov
mov
(bad)
movs
jecxz
mov
daa
mov
cmc
stos
pushf
lock
loopne
pop
push
in
and
add
pop
je
push
mov
jmp
rcl
jae
jl
pop
lods
rcl
out
push
inc
xlat
popa
add
rol
or
jecxz
(bad)
aad
cld
ret
sub
xchg
mul
pop
lds
and
ror
xchg
loopne
jg
pop
fsub
and
ins
add
mov
(bad)
jp
fcomip
into
mov
sti
arpl
xchg
or
push
inc
je
(bad)
cli
(bad)
shl
in
fistp
jecxz
rol
or
jns
jae
mov
scas
scas
into
loop
jno
(bad)
xor
in
mov
mov
xchg
fidiv
aaa
mov
pop
cmp
jl
ins
pop
cmp
sti
mov
test
mov
out
fst
xchg
cmp
mov
mov
shr
adc
mov
xchg
and
call
mov
jp
and
aas
push
or
retf
push
push
sahf
and
mov
mov
jo
ror
sub
retf
shl
lods
ins
cmp
sbb
jns
das
and
and
and
daa
fdiv
mov
fdiv
add
inc
imul
mov
or
inc
cmp
add
mov
push
mov
shl
je
mov
xchg
mov
or
mov
push
daa
cdq
push
ins
jl
xor
ins
call
sbb
addr16
pusha
pusha
sub
cld
xchg
dec
add
es
xchg
ja
test
fadd
mov
xor
or
dec
je
arpl
mov
push
mov
xchg
aam
jecxz
test
push
jmp
or
dec
adc
mov
sub
push
xchg
in
sbb
(bad)
fldcw
call
(bad)
in
adc
ja
clc
jmp
sbb
movs
ss
fcomip
xor
xlat
mov
loopne
xchg
out
or
arpl
in
jmp
inc
not
cmps
nop
aad
mov
lods
mul
pusha
mov
(bad)
mov
ins
xor
or
push
mov
les
ins
clc
in
shr
leave
movs
into
add
push
xor
popa
rcr
inc
outs
jmp
(bad)
shr
mov
sub
int
cld
add
and
(bad)
mov
push
xor
push
pop
cmp
inc
lods
mov
jmp
ret
add
stos
adc
loopne
xchg
lock
adc
or
push
lock
cli
mov
xchg
div
xchg
ds
jns
enter
lock
and
into
cli
ss
mov
mov
add
xchg
rcr
mov
(bad)
cli
pop
sbb
push
jp
xchg
test
inc
push
cld
add
lods
test
pop
(bad)
ficom
scas
out
push
cmp
test
xchg
mov
xor
stc
xor
icebp
pusha
lods
(bad)
push
dec
pop
and
jo
daa
mov
mov
push
ins
cmp
mov
xor
aas
and
int
xchg
mov
in
shl
loopne
aad
shl
jg
jle
sub
xchg
inc
mov
pop
sub
lock
test
xchg
mov
popf
loopne
mov
push
iret
repnz
hlt
ss
popa
adc
jnp
inc
shr
xchg
mov
cld
test
dec
dec
xchg
ror
adc
test
(bad)
sbb
sbb
dec
hlt
xchg
pop
bnd
icebp
(bad)
loopne
adc
sub
(bad)
pop
test
lahf
aaa
nop
int3
sub
iret
and
mov
lock
xor
dec
and
cs
clc
out
sub
jns
adc
jle
sub
jne
dec
bound
lods
inc
dec
inc
and
cdq
call
enter
mov
pusha
jmp
sub
lds
ins
mov
jno
loop
inc
outs
mov
mov
jecxz
sar
sub
stos
cmc
mov
mov
or
mov
test
inc
fimul
jo
test
jmp
adc
jle
stos
aaa
pusha
push
pushf
arpl
xor
into
xchg
scas
and
inc
rcl
pusha
jo
nop
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
nop
jle
mov
shl
ficom
push
test
mov
test
mov
pop
or
data16
scas
push
and
mov
jo
clc
inc
repnz
and
mov
retf
dec
jno
sub
(bad)
xchg
mov
and
xchg
sar
int3
pusha
adc
xchg
and
push
mov
push
jbe
inc
popa
lock
mov
int3
xchg
pusha
loopne
xchg
pusha
jo
xchg
pusha
loopne
nop
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
nop
jo
xchg
lock
push
pusha
icebp
mov
pusha
jo
xchg
jo
rcl
fs
xchg
outs
ficomp
call
adc
jb
sahf
xor
invd
mov
enter
mov
dec
icebp
and
mov
fnstsw
cwde
lds
add
jo
enter
sub
movs
pop
movs
imul
clc
movs
cmps
enter
jbe
gs
sbb
and
idiv
cmp
mov
adc
out
retf
cmps
icebp
stc
fs
xchg
loope
cwde
loop
jns
xor
aaa
pop
mov
daa
push
pop
shr
int3
fstp
add
shl
ins
mov
sub
mov
push
mov
aas
nop
xor
cdq
xchg
nop
repz
cmp
sub
ja
jg
or
repz
cmp
popa
jmp
sahf
inc
jg
adc
mov
inc
cld
mov
mov
xchg
push
xchg
mov
das
dec
sbb
push
(bad)
fcomp
fnsave
fcomp
add
mov
xchg
inc
xchg
ret
cmp
push
add
ret
popa
jnp
out
shr
pop
lea
in
mov
aas
stos
push
inc
sbb
out
lods
iret
jnp
push
pop
(bad)
sub
in
xor
jmp
rcl
dec
arpl
sub
and
and
aas
cmps
xchg
cmovs
mov
xchg
push
pop
jb
int3
lahf
movs
xor
(bad)
dec
cmp
in
loopne
jo
stos
adc
test
pop
pushf
lahf
push
repnz
adc
das
pushf
jmp
(bad)
jmp
dec
sub
add
call
dec
mov
jne
jmp
stc
sbb
pop
imul
shr
sbb
inc
mov
gs
stos
inc
ss
sti
(bad)
jge
and
cmps
into
jg
into
sar
leave
adc
mov
es
xor
jo
and
mov
and
mov
jo
rcl
jbe
test
rol
outs
xlat
(bad)
int
shr
jo
and
retf
xor
jae
fadd
mov
and
sub
mov
add
imul
and
test
ja
cmp
xlat
and
dec
or
jae
rcl
jp
popa
imul
inc
mov
mov
xor
(bad)
jl
jno
inc
cs
call
das
jmp
pop
nop
or
jnp
outs
sbb
cdq
inc
cmp
dec
push
outs
pushf
and
stc
inc
stc
(bad)
pop
retf
data16
mov
mov
sbb
add
in
outs
sub
jne
sbb
mov
mov
test
repz
jno
nop
imul
shl
and
sub
push
cmc
jb
push
iret
test
iret
jg
es
fisttp
push
jns
shl
cmp
cdq
sub
clc
push
xor
pop
mov
xor
xor
mov
jno
pop
pop
mov
lahf
cmp
bound
sahf
sbb
pop
sbb
sbb
jno
call
mov
int3
mov
out
mov
jbe
push
sub
jno
loopne
scas
xchg
hlt
aad
push
ret
add
pusha
adc
jmp
mov
outs
or
ja
pop
dec
jl
jl
std
mov
int3
inc
sub
daa
mov
cdq
fwait
jnp
fist
lea
pop
(bad)
ficomp
push
rol
popf
cdq
and
clc
(bad)
cmp
jno
jg
aam
add
ror
leave
xor
cmps
aam
imul
sub
xchg
sub
sub
pop
mov
fs
sbb
popa
cmp
pop
repz
out
xchg
ja
jo
stc
cld
cmps
jae
mov
imul
mov
push
(bad)
mov
mov
mov
ins
rol
jo
loope
push
inc
loope
pusha
pusha
rcl
jo
les
addr16
fwait
jg
fisttp
les
addr16
inc
and
rol
(bad)
xchg
mov
sbb
leave
stc
xlat
xchg
ins
jne
cs
add
mov
adc
popf
and
inc
nop
sbb
mov
cwde
test
out
in
xchg
pusha
inc
ja
std
lods
out
fdiv
dec
repnz
clc
and
call
stos
xor
pop
test
push
es
xchg
cmp
inc
jl
push
add
cwde
inc
inc
retf
xor
mov
cli
call
xor
mov
(bad)
lock
xor
clc
fcom
arpl
test
cld
lock
das
jp
mov
retf
xchg
push
xlat
lods
jns
(bad)
lds
inc
mov
rcl
sub
jp
arpl
push
sbb
rol
push
movs
jp
cmp
popa
push
inc
in
fcomp
or
adc
mov
ror
jle
lods
xor
gs
cmp
jge
leave
data16
in
ret
aaa
comiss
jne
stc
or
or
mov
fistp
je
dec
out
and
or
fldenv
fcomp
mov
into
call
into
mov
lock
mov
xor
mov
adc
sub
push
jb
ds
mov
mov
repnz
cmp
aam
mov
arpl
(bad)
xor
adc
jbe
lahf
pusha
pop
push
sbb
fisttp
pop
cmp
add
in
stc
push
jns
pop
fwait
popf
ja
sbb
pcmpeqd
push
out
enter
outs
add
xchg
cmc
cwde
mov
ins
adc
cli
pop
add
jae
mov
jmp
(bad)
dec
out
fist
mov
fisttp
jno
cmps
jecxz
jne
cmps
sub
retf
or
pop
or
xor
or
jno
imul
jns
nop
and
ret
pop
xor
fdivr
(bad)
daa
imul
out
shl
push
jb
(bad)
mov
dec
repnz
cmp
add
jno
inc
mov
lds
jnp
leave
les
adc
int3
adc
dec
aam
xor
pusha
or
jnp
jle
outs
ja
repnz
ret
adc
in
aad
and
push
into
adc
aam
into
sub
repnz
adc
dec
ja
adc
pop
add
mov
lock
xchg
or
jmp
push
xchg
jns
push
add
xor
dec
cmp
ins
add
jmp
je
sub
pop
fdivr
push
sbb
xor
int
stos
icebp
data16
ficom
dec
jno
xor
mov
pop
or
mov
test
sub
ror
pop
xor
shl
inc
ins
dec
inc
push
inc
push
cld
push
icebp
mov
and
repnz
push
rcr
mov
jnp
jge
jecxz
imul
idiv
lea
cmp
xor
cdq
pop
lea
shr
cmp
inc
test
xor
xor
and
adc
out
dec
and
add
fwait
sub
aaa
jne
dec
xor
xlat
and
inc
mov
push
adc
pop
push
pop
mov
push
fs
shl
xor
rcl
xchg
or
xor
mov
cmp
mov
push
sti
int
jb
xor
aaa
jo
mov
icebp
stc
jmp
leave
xor
or
dec
clc
dec
adc
jecxz
adc
fiadd
add
or
mov
test
mov
leave
in
pop
or
sbb
jg
int
jge
push
inc
outs
adc
cmp
cmp
das
pop
jns
mov
lods
mov
rcl
mov
ds
loopne
rcl
xchg
iret
sub
sbb
bnd
in
rcl
mov
in
and
and
pop
arpl
cwde
fidivr
pop
bound
(bad)
adc
cdq
and
inc
xor
dec
xchg
pusha
mov
sti
nop
jecxz
mov
pop
pop
icebp
mov
dec
ffreep
xchg
xor
push
cmp
lea
mov
jmp
loopne
movs
jbe
xchg
adc
xor
test
fist
leave
jp
rcl
mov
sub
lods
add
rcr
push
mov
test
call
je
idiv
test
push
pop
and
out
shl
(bad)
stc
imul
add
aad
cdq
jno
xchg
sbb
hlt
push
or
pop
test
push
jmp
div
cmp
pop
inc
sub
(bad)
dec
push
fdivp
jnp
shl
jnp
add
mov
call
jg
mov
sbb
sbb
mov
enter
pushf
je
out
push
std
mov
xchg
jns
add
lahf
cmp
lods
xchg
mov
movs
mov
push
jg
out
inc
stc
outs
pop
jmp
(bad)
mov
hlt
stos
(bad)
pop
stos
jecxz
cli
ja
ficom
and
xchg
popa
fisub
pop
pop
pop
cmps
xchg
imul
push
ret
out
or
mov
sbb
test
push
fwait
jp
dec
push
mov
enter
xchg
unpcklps
dec
xchg
sbb
or
push
mov
pop
mov
addr16
or
jbe
mov
and
and
imul
sahf
xchg
mov
out
mov
add
add
aaa
push
int3
cli
or
popf
mov
and
mov
mov
pushf
das
push
jnp
out
out
dec
mov
mov
icebp
js
dec
dec
push
adc
jmp
test
ins
(bad)
mov
fld
(bad)
xlat
ins
cwde
mov
call
mov
jbe
in
mov
bound
jmp
fmul
pop
push
adc
dec
sub
mov
ss
outs
mov
lea
test
push
ret
push
xchg
jo
add
loope
jle
jno
add
fld
inc
sub
mov
xchg
cmp
aad
popa
fsubr
or
or
pop
test
fbstp
cli
pop
lods
iret
loope
xchg
std
fbstp
test
push
(bad)
cmp
push
pushf
rcl
and
pop
leave
add
inc
inc
or
dec
jg
push
inc
dec
jg
mov
cli
sti
xor
mov
xchg
mov
or
call
inc
jo
xchg
mov
(bad)
int
std
mov
stos
sar
adc
jmp
xor
jge
inc
pop
mov
jno
ret
adc
retf
fdivr
pop
out
imul
mov
jns
pop
aaa
xor
mov
out
retw
mov
lea
call
jmp
inc
lods
stos
sub
jp
sub
ja
mov
inc
js
jae
cs
pusha
xlat
jnp
dec
or
repnz
mov
adc
mov
add
les
ret
xor
push
out
sbb
and
das
inc
ficom
xor
or
pusha
lahf
sbb
jo
mov
or
rcr
hlt
std
mov
inc
minps
jmp
loop
in
jl
cli
adc
out
and
sbb
ficomp
movs
fiadd
gs
repz
and
jo
sub
adc
(bad)
int3
inc
nop
out
aas
push
int
lds
fs
aad
pusha
lock
jo
cs
inc
shl
inc
icebp
mov
xor
inc
rol
add
mov
shl
mov
and
and
mov
add
inc
mov
sub
icebp
test
xor
rcl
add
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
push
rol
inc
rol
and
outs
jo
nop
jo
icebp
and
rcl
adc
shl
pop
inc
popa
outs
jo
xor
and
rcl
xor
popa
jg
add
jno
int
mov
xchg
xchg
out
(bad)
cmc
cs
mov
inc
xchg
pop
xor
push
stc
xchg
lods
push
pop
psubd
dec
push
enter
inc
nop
out
xor
mov
push
je
inc
cmc
pop
push
icebp
xchg
outs
pop
int
push
scas
push
sahf
bound
sbb
jg
ins
outs
xor
popa
jno
loope
pusha
xor
xchg
pusha
jo
xchg
pusha
jo
xchg
xor
mov
popa
shl
inc
mov
loope
popa
pushf
jo
rcl
or
pop
xor
and
cwde
leave
or
cmp
cmps
call
mov
jne
xchg
mov
lahf
jnp
pop
xor
mov
cwde
int3
test
mov
add
shr
hlt
cmp
(bad)
fstp
retf
xchg
cwde
mov
mov
dec
pop
xchg
xor
dec
mov
loope
pusha
lock
pusha
jo
xchg
inc
jo
and
push
fld
jno
in
xor
mov
outs
fimul
jo
repnz
adc
cmp
jne
mov
xor
xchg
call
mov
push
pusha
das
inc
je
mov
jns
ret
ficom
ret
pop
movs
in
cs
mov
or
add
cmps
aas
cmp
or
mov
in
mov
in
repnz
jp
pop
stc
sub
repz
sub
cmps
sbb
xchg
sti
pop
imul
nop
mov
and
mov
inc
pop
hlt
in
out
fist
cli
or
sub
popa
inc
jo
mov
pusha
and
xchg
pusha
jo
xchg
jo
loope
inc
jno
shl
mov
inc
push
loop
xor
xor
xchg
and
pusha
loop
mov
(bad)
or
pop
test
je
mov
mov
popa
sbb
imul
mov
jge
call
cli
jbe
js
mov
iret
mov
pushf
jo
mov
xlat
pop
jno
cmps
in
lods
xchg
call
shr
sub
dec
imul
jnp
mov
mov
jae
mov
les
adc
js
xor
in
push
add
mov
inc
or
scas
frstor
mov
sti
add
ds
jge
js
and
pop
cmp
sbb
ins
nop
jmp
push
ror
shl
outs
stos
outs
xchg
test
iret
jns
ficom
call
ficom
inc
fstp
pop
pop
cmp
inc
jne
call
fcmovne
jl
xor
sbb
je
popa
inc
push
mov
shr
push
(bad)
mov
mov
mov
fcomp
xlat
int
jno
sbb
fcmove
mov
sbb
addr16
scas
pop
mov
repz
add
ds
iret
adc
sbb
fisubr
(bad)
cmps
dec
and
sub
cld
stos
xor
cld
bound
inc
push
xlat
mov
inc
addr16
dec
jle
mul
stos
imul
or
int
mov
outs
jo
xchg
jno
shl
pusha
jo
xchg
jo
rcl
popa
loopne
inc
xor
xor
test
cmc
mov
push
test
pusha
rcl
sub
xor
das
or
ds
nop
pop
shl
jmp
ret
cmc
call
scas
sbb
jbe
les
mov
xor
mov
mov
in
jmp
add
jp
inc
jecxz
cmp
cmp
test
fld
push
bound
pop
jg
or
bound
and
fdiv
sub
ret
mov
mov
xor
mov
jge
scas
and
mov
dec
push
mov
inc
push
pop
(bad)
sub
out
mov
in
aam
int
dec
cwde
cmp
cld
outs
je
sub
pop
rcr
in
xchg
call
fsubr
mov
mov
std
ficom
inc
in
sub
pop
sbb
aas
loopne
lock
sbb
and
sub
mov
xor
ins
mov
mov
sbb
repz
xor
push
faddp
in
scas
sbb
xchg
out
sbb
add
scas
retf
xchg
cmp
lahf
sub
adc
rol
pusha
jo
xchg
jo
rcl
jne
int3
or
shr
jo
xor
scas
jp
in
popa
add
sbb
jb
add
aaa
xchg
ins
dec
mov
lahf
cmp
jge
(bad)
xor
dec
and
xor
mov
imul
cmps
sbb
call
pop
xor
mov
sub
ja
and
jl
adc
cmps
cmc
jmp
push
push
fsubr
ret
pushf
in
push
dec
test
jp
cdq
xor
dec
add
mov
retf
in
loopne
xchg
sub
cmp
hlt
and
arpl
inc
xor
ins
xchg
js
mov
out
das
push
mov
sub
push
stos
lahf
add
js
jle
pop
mov
arpl
adc
addr16
lea
gs
add
pusha
jno
xchg
adc
mov
adc
add
push
push
loope
pusha
pusha
rcl
jo
rol
je
fiadd
js
rcl
inc
rol
jmp
imul
push
jnp
dec
std
pusha
xchg
adc
mov
adc
adc
mov
stc
(bad)
aam
not
xchg
lds
inc
stos
imul
or
adc
ret
jbe
(bad)
in
dec
test
xchg
dec
(bad)
(bad)
dec
xlat
addr16
push
hlt
mov
fwait
adc
scas
aaa
xchg
(bad)
lods
cs
sbb
js
adc
mov
js
pop
xor
adc
cmp
xchg
cmc
mov
cmp
or
sub
nop
push
int3
call
movs
stc
cld
das
das
sub
cdq
std
mov
mov
dec
push
or
(bad)
loop
xor
jl
rol
pusha
pusha
xchg
and
rol
(bad)
fimul
jo
loop
lock
inc
mov
mov
movs
popa
or
push
push
lock
fsubp
mov
adc
retf
pushf
mov
outs
xor
adc
rcr
inc
ja
xor
mov
adc
jg
adc
cdq
mov
xchg
es
jmp
mov
clc
ret
mov
call
test
cmc
cmp
enter
loope
cmp
inc
lods
movs
test
push
inc
(bad)
xchg
adc
dec
test
xlat
ins
into
fwait
out
(bad)
movs
aam
push
(bad)
js
not
push
dec
fidiv
push
mov
xor
jl
popa
int3
test
out
test
test
pop
in
add
mov
jg
addr16
clc
push
in
xor
das
out
(bad)
add
jecxz
lods
mov
fldcw
pop
movs
xor
or
xor
hlt
pushf
pop
mov
xchg
jb
rol
pusha
inc
rcl
pusha
pusha
rol
jne
fiadd
ins
lock
mov
icebp
dec
les
push
ret
in
test
mov
sub
pop
movs
mov
test
aaa
test
ret
push
out
ja
pop
mov
mov
out
dec
lock
hlt
jg
jle
int
pop
imul
std
pop
pop
repz
ret
cbw
dec
fwait
aas
rol
(bad)
fwait
in
push
mov
jno
out
jl
mov
in
inc
lods
add
cmp
lds
dec
push
stc
clc
cwde
in
add
add
inc
mov
imul
out
add
fmul
loope
jle
add
(bad)
ror
(bad)
pop
pop
movs
jle
mov
xchg
je
hlt
xor
movs
sahf
inc
ret
ins
adc
inc
dec
in
mov
repz
xchg
add
sbb
mov
or
test
cdq
out
jae
jmp
nop
adc
jnp
mov
add
cmp
movhps
std
ins
xchg
rcr
cmp
xchg
out
aas
push
int
lds
fs
aad
pusha
lock
jo
cs
inc
shl
inc
icebp
mov
xor
inc
rol
add
mov
shl
mov
and
and
mov
add
inc
mov
sub
icebp
test
xor
rcl
add
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
push
rol
inc
rol
and
jg
jno
jo
icebp
and
rcl
xor
xor
shl
jo
xchg
pusha
jo
xchg
push
jo
mov
adc
pushf
inc
inc
rcl
adc
add
bound
sbb
inc
pop
inc
mov
ror
out
shl
cmp
push
popa
sahf
push
jle
mov
ja
cmps
xor
test
int
sahf
cmp
push
mov
fs
xchg
sar
push
mov
jl
pop
retf
loop
sub
lods
push
movs
fiadd
outs
mov
dec
mov
ror
rcl
fwait
mov
scas
jmp
xor
leave
das
dec
sub
add
inc
call
cmp
jg
nop
rcr
jp
inc
mov
test
scas
sub
out
les
sbb
das
mov
out
movs
stos
mov
outs
jo
xchg
pusha
jo
xchg
and
or
sbb
clc
sbb
add
int3
cmp
arpl
mov
cwde
pusha
jo
xchg
loopne
pop
loop
xor
or
inc
cmc
mov
cmp
fcom
or
stos
mov
adc
bound
push
lahf
ins
jo
xchg
sar
xor
imul
and
push
pop
call
mov
push
lock
add
imul
pushf
pusha
jo
xchg
nop
jge
bound
adc
jns
icebp
and
adc
rep
mov
test
das
test
imul
xchg
xor
and
(bad)
sar
hlt
pop
xor
retf
nop
fidivr
in
outs
jo
xchg
xor
and
rcl
jo
xchg
mov
ds
pusha
and
xchg
pusha
jo
xchg
pusha
jo
xchg
lock
jno
add
xchg
pusha
jo
xchg
mov
xor
pusha
jo
xchg
adc
xchg
lock
rcl
jo
xchg
pusha
inc
xchg
imul
xchg
pusha
jo
xchg
pusha
jo
xchg
and
shl
xchg
pusha
jo
xchg
pusha
jo
xchg
xor
bound
rcl
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
add
shl
pusha
rol
jo
rcl
mov
mov
bound
repnz
popa
pushf
jo
rcl
sbb
repz
sti
movs
jmp
inc
mov
push
adc
in
out
mov
pop
repnz
push
pop
mov
dec
xchg
inc
jle
mov
fwait
popf
into
lahf
cmp
scas
mov
iret
aaa
sbb
aas
fdivr
jg
xchg
fidivr
or
push
xchg
mov
mov
push
and
mov
jle
sbb
movs
fmulp
je
inc
(bad)
lods
add
in
adc
sbb
test
mov
test
lods
pop
inc
mov
pop
or
pop
test
mov
sbb
test
push
jmp
test
or
jnp
cwde
mov
ins
or
imul
mov
ret
pop
stos
push
mov
(bad)
xchg
cli
cmp
dec
ret
in
push
scas
dec
sahf
adc
arpl
sbb
sub
mov
sub
add
push
inc
repz
ja
(bad)
pushf
rol
mov
lods
ret
shr
(bad)
in
or
gs
das
stos
xor
test
scas
and
mov
pusha
mov
jl
inc
lods
mov
add
scas
mov
xchg
fld
inc
sbb
jge
fisubr
inc
fmul
jb
pop
fild
fist
pop
mov
add
jmp
mov
push
cmp
lahf
sbb
neg
nop
call
xor
push
es
dec
pop
and
push
stc
test
mov
jbe
sub
lods
jae
sub
mov
aam
inc
xor
sbb
fs
push
in
(bad)
stos
sbb
loop
ret
mov
std
shl
or
imul
or
push
sbb
outs
mov
dec
or
jmp
scas
jp
in
pop
jmp
dec
sbb
dec
das
fidivr
push
or
xor
call
leave
jmp
pop
adc
hlt
xor
call
leave
jmp
pop
adc
hlt
xor
call
mov
sbb
mov
adc
ins
scas
xchg
div
ficomp
sub
jmp
(bad)
aam
(bad)
fcmovnu
or
jp
cwde
arpl
push
adc
lahf
hlt
xchg
out
and
mov
mov
xor
xchg
push
call
ficom
ds
jb
pop
dec
mov
mov
cmp
jo
xchg
cdq
das
mov
push
stos
pusha
jle
push
xor
inc
dec
push
xchg
push
push
cld
ficom
in
xlat
xchg
in
jl
(bad)
mov
push
sbb
sub
(bad)
fimul
es
jg
retf
inc
aaa
push
sbb
dec
or
sbb
in
cli
or
add
jo
adc
or
sbb
loope
sahf
push
fld
mov
mov
mov
(bad)
addr16
sub
xor
out
xor
test
test
daa
pop
cmps
aad
push
mov
add
cmps
out
xor
test
test
daa
pop
cmps
aad
push
mov
add
cmps
out
xor
mul
idiv
pop
lods
(bad)
not
pushf
jmp
cmp
sub
mov
hlt
imul
adc
mov
cwde
lock
xchg
mov
les
pop
dec
inc
idiv
hlt
loop
inc
and
fwait
or
push
lods
rcr
or
stc
inc
gs
pushf
sbb
inc
sbb
gs
aam
push
mov
push
arpl
sbb
ja
mov
inc
push
jbe
sbb
ret
sbb
ja
mov
or
stos
ror
fdiv
cmp
(bad)
mul
add
fisubr
lods
stc
fdiv
gs
inc
not
jbe
sbb
arpl
popf
pop
aam
and
aam
movs
mov
push
xchg
sbb
rcr
inc
clc
into
mov
test
cmp
mov
lods
icebp
lods
scas
test
inc
push
je
arpl
std
loop
mov
pop
push
inc
gs
je
sub
add
push
mov
pop
inc
or
pop
lahf
pop
xchg
push
sub
ffree
or
mov
cmps
xchg
pushf
sbb
sbb
fs
sahf
mov
test
call
aad
das
mov
inc
sbb
sub
std
retf
sbb
ja
push
(bad)
aas
dec
ss
sub
or
push
sub
pop
leave
cmp
imul
inc
ds
push
repnz
pop
mov
(bad)
imul
inc
ds
push
repnz
pop
mov
(bad)
imul
inc
ds
push
repnz
pop
mov
(bad)
imul
inc
ds
push
repnz
pop
mov
(bad)
imul
inc
cmp
loop
lods
popf
dec
pushf
mul
xchg
inc
inc
push
je
sbb
sbb
mov
lock
stos
ror
pop
jno
js
(bad)
in
mov
aas
pop
add
push
imul
stc
fdiv
sub
pop
ja
push
inc
sbb
cli
loop
lods
popf
outs
lahf
(bad)
pusha
daa
mov
popa
outs
jo
xor
adc
pusha
and
xchg
pusha
jo
xchg
inc
pusha
test
push
push
lock
rol
jno
aad
jo
(bad)
rcl
rol
adc
push
shl
aaa
jbe
(bad)
ds
xchg
dec
xor
jnp
push
hlt
mov
(bad)
pop
out
pop
cmps
xor
or
xor
sbb
arpl
push
fdivp
cwde
cmc
mov
fiadd
out
cwde
push
popf
or
nop
and
test
adc
inc
jge
out
cmp
out
(bad)
out
push
dec
mov
leave
into
sub
outs
nop
and
das
ds
in
mov
stc
repnz
inc
mov
pop
call
mov
sahf
jnp
pop
pop
cmp
stos
cmp
enter
adc
ret
ss
dec
cmp
mov
cmps
mul
sbb
adc
jge
inc
lea
jmp
inc
mov
add
movs
sub
inc
sbb
pop
sbb
fnstsw
lea
enter
add
xchg
mov
add
push
(bad)
sahf
aaa
pop
cmovle
imul
js
dec
pop
mov
popa
mov
shr
mov
mov
idiv
mov
adc
or
movs
cmp
lods
pop
cmp
mov
loope
inc
and
xchg
dec
in
xor
mov
cli
dec
mov
sub
adc
dec
and
(bad)
cmc
fsubp
inc
inc
dec
test
ss
sbb
mov
or
mov
dec
and
arpl
fucom
or
or
pop
pop
sbb
and
add
es
jns
cmp
div
dec
call
je
jg
add
ja
std
pushf
mov
add
mov
ret
jmp
push
out
xchg
loope
dec
or
mov
and
loope
jbe
mov
adc
sbb
outs
mov
loopne
(bad)
and
retf
mov
or
ja
jl
mov
and
mov
inc
jmp
fdivr
in
imul
mov
jbe
adc
cdq
xchg
jmp
pop
fistp
add
or
fild
dec
add
cmps
add
jno
fnstenv
inc
mov
inc
mov
lahf
ins
test
sub
outs
push
stc
mov
std
mov
xchg
or
mov
out
sub
idiv
js
jge
repnz
retf
in
js
js
stc
out
out
loop
dec
in
inc
(bad)
mov
inc
dec
loope
or
mov
mov
hlt
mov
in
lods
cmps
adc
cmp
fist
jno
stos
sub
dec
sbb
push
push
xor
std
cmps
scas
cmp
and
out
push
mov
shl
cld
dec
jle
add
call
in
jae
jae
mov
(bad)
pop
dec
xor
mov
or
sub
jl
lds
xor
outs
pop
es
ret
add
in
pop
out
jne
sti
cli
or
stc
leave
mov
xor
and
push
addr16
mov
imul
outs
xor
jbe
push
xor
fistp
adc
pop
fbld
push
stc
pop
add
push
iret
or
add
loope
xchg
xchg
jg
pop
out
jne
sti
cli
or
stc
leave
mov
xor
and
push
addr16
mov
imul
outs
xor
jbe
push
xor
fistp
adc
pop
fbld
push
stc
pop
add
push
iret
or
add
loope
xchg
xchg
jg
pop
out
jne
sti
pop
dec
push
fisub
xor
pop
pop
dec
push
fisub
xor
pop
pop
dec
push
fisub
xor
pop
pop
dec
push
fisub
xor
pop
pop
dec
push
fisub
xor
pop
pop
dec
push
fisub
xor
pop
pop
dec
push
fisub
xor
pop
pop
dec
push
fisub
xor
pop
pop
dec
push
fisub
xor
cmp
ins
fcomp
mov
movs
push
or
retf
xchg
mov
mov
push
les
adc
sub
pop
cmc
inc
jno
add
daa
sub
xor
mov
test
mov
xchg
imul
mov
adc
retf
xchg
mov
mov
push
les
adc
sub
pop
cmc
inc
jno
add
daa
sub
xor
mov
test
mov
xchg
xchg
sar
ins
or
iret
sub
call
xor
fist
nop
call
aad
je
int
dec
dec
ret
aaa
and
sbb
sub
fild
jge
cs
fld
xor
pushf
jp
fidiv
aam
int3
sti
out
jle
mov
push
and
ins
push
(bad)
out
cdq
out
in
push
inc
and
sti
dec
out
sub
mov
cdq
mov
inc
add
adc
(bad)
jne
mov
add
xor
lock
jmp
idiv
and
les
(bad)
cmps
stos
dec
lods
add
jecxz
xor
pop
cli
rcl
mov
cmp
call
sbb
cld
mov
fsubr
rcl
jge
pop
jge
mov
out
aad
pop
inc
xchg
(bad)
int
jo
rol
jo
mov
pusha
shl
jo
xchg
push
jno
xor
rcl
jo
repz
inc
push
not
dec
jo
xor
loop
xchg
pop
lods
gs
aad
das
mov
push
ficomp
ja
pop
scas
(bad)
cdq
js
sbb
adc
jp
sbb
imul
call
and
movs
sbb
mov
pop
shl
or
test
shr
inc
std
jns
jecxz
jle
jmp
push
cmc
in
enter
add
sub
pop
je
add
sub
pop
je
add
sub
pop
les
movs
ror
stos
push
in
sub
dec
(bad)
das
or
addr16
inc
jae
jb
or
addr16
call
call
retf
sbb
mov
aas
sub
mov
scas
rol
xchg
mov
sub
das
pop
mov
xchg
mov
hlt
fxch
mov
or
aaa
test
shr
mov
mov
das
mul
ret
cwde
ss
push
pop
mov
test
lahf
leave
stc
push
mov
adc
stc
cmp
or
and
mov
loop
es
pop
adc
enter
adc
xor
cli
stos
mov
and
test
lock
dec
sahf
test
jbe
sbb
mov
jb
mov
loope
into
sti
int
push
(bad)
mov
sar
inc
adc
mov
add
sub
sub
xchg
call
push
sub
inc
in
mov
cmp
arpl
pop
js
jae
inc
imul
add
aad
fs
and
mov
adc
aad
ja
xchg
and
mov
adc
aad
(bad)
addr16
out
push
jnp
xchg
int
into
inc
or
(bad)
adc
and
aaa
call
mov
popf
ror
jl
fist
(bad)
fld
pop
mov
sbb
ret
jno
mov
fisubr
xor
stos
push
adc
dec
in
movs
and
inc
repz
hlt
or
repnz
sbb
or
push
out
addr16
aas
cmps
jl
dec
jle
mov
enter
data16
jle
lahf
mov
dec
dec
scas
inc
push
and
dec
push
scas
jg
push
and
dec
push
scas
jg
push
and
(bad)
and
add
(bad)
mov
sub
mov
cmp
movs
fsubr
(bad)
sahf
hlt
cld
cmp
xor
pop
into
jg
lea
adc
or
mov
lds
call
lods
inc
cli
adc
(bad)
jge
fcom
mov
jne
sbb
mov
jae
or
sbb
mov
cli
cld
(bad)
retf
xchg
xchg
sbb
ror
mov
scas
mov
shl
inc
mov
int
dec
cs
pop
das
mov
or
cld
fimul
push
mov
sbb
fld
pop
and
(bad)
mov
dec
cmp
or
sar
inc
ret
xchg
xchg
or
pop
pop
mov
arpl
pop
sar
pop
xor
pop
jae
mov
test
leave
mov
(bad)
pop
dec
sbb
jecxz
adc
pop
dec
dec
dec
jecxz
adc
pop
dec
dec
dec
jecxz
adc
pop
dec
dec
dec
jecxz
adc
pop
dec
dec
dec
jecxz
sbb
cmp
hlt
jmp
sub
pop
cmp
jmp
sub
pop
cmp
jmp
sub
pop
cmp
jmp
sub
pop
cmp
jmp
or
pop
cmp
jmp
or
pop
cmp
jmp
or
pop
cmp
jmp
or
pop
cmp
jmp
and
xchg
xor
mov
pusha
and
shl
xchg
and
mov
push
popa
jecxz
pop
pop
shl
inc
inc
xlat
scas
inc
fs
and
cdq
xor
mov
cmps
xchg
pop
in
mov
rcl
arpl
icebp
xor
push
adc
xchg
nop
dec
in
test
sbb
(bad)
(bad)
nop
mov
mov
mov
scas
popf
pop
pop
stos
jne
xchg
neg
repz
mov
ror
je
clc
sub
cmps
and
js
mov
loope
lods
repz
or
sub
jmp
mov
in
sti
shl
daa
(bad)
mov
(bad)
movs
aad
add
inc
push
les
(bad)
jmp
lods
fst
(bad)
repnz
or
xor
mov
test
aas
fadd
data16
xchg
inc
or
scas
sahf
aaa
xchg
ja
push
pop
push
push
test
sar
cmp
ret
push
push
pop
xor
enter
aam
dec
xor
pushw
in
mov
xchg
es
js
aam
daa
xchg
leave
lods
rcl
(bad)
adc
pop
les
inc
std
mov
pop
cmps
enter
push
adc
lds
lds
push
popf
ficomp
icebp
iret
pop
sub
repnz
cli
pop
or
cld
inc
or
dec
int
jmp
xchg
retf
cmp
vsqrtsd
pop
aad
pop
cmp
test
fs
dec
int
jmp
xchg
retf
cmp
vsqrtsd
pop
aad
pop
cmp
test
fs
dec
int
jmp
xchg
sub
call
mov
and
ja
lock
push
dec
jmp
fadd
pop
sbb
lea
mov
inc
sub
aad
mov
inc
mov
neg
in
out
adc
mov
cmps
pop
mov
sub
adc
call
or
mov
jecxz
mov
cmp
fst
test
es
inc
xor
js
lahf
fcom
cwde
cmp
dec
shl
inc
sbb
jbe
loop
dec
xor
xor
cwde
mov
cmp
ins
mov
das
scas
push
loop
(bad)
aam
pop
fwait
dec
shl
xor
push
leave
adc
loope
dec
popf
adc
xchg
adc
std
shl
mov
cmp
std
mov
lods
js
push
push
mov
movs
xor
popf
lods
push
leave
adc
loope
dec
popf
adc
push
or
loop
adc
mov
imul
push
arpl
xchg
xchg
and
outs
cmp
adc
jmp
add
mov
aas
jmp
add
mov
out
test
pop
ss
xor
fadd
xor
push
pop
fld
cmp
or
inc
xchg
add
jnp
inc
repnz
mov
int
fld
(bad)
dec
push
add
pop
sbb
in
jae
xchg
mov
sub
jnp
test
(bad)
movs
(bad)
lea
ret
xchg
and
adc
in
cmp
jecxz
std
loop
xor
sti
aas
(bad)
cmps
ret
xchg
fsubp
jbe
in
lods
and
test
test
push
fisttp
ror
pop
adc
jmp
dec
sbb
dec
xlat
(bad)
ficom
push
or
jne
dec
inc
into
imul
jmp
push
and
add
stos
in
iret
sub
inc
inc
test
stos
mov
pop
or
inc
das
jmp
jb
jb
test
push
lods
(bad)
or
lahf
dec
(bad)
dec
fistp
fwait
mov
jmp
jp
repnz
mov
inc
add
stos
mov
xchg
xchg
xor
rcr
inc
inc
xor
adc
push
nop
sbb
rcr
pusha
add
pusha
mul
loopne
add
jne
(bad)
js
mov
loopne
cmps
xchg
xchg
mov
imul
mov
mov
push
inc
push
and
mov
or
mov
push
pop
loopne
inc
jno
int
aas
mov
lods
aam
xor
rol
stos
outs
ins
sub
out
and
push
imul
adc
xor
mov
lea
inc
xchg
sub
xor
mov
pop
call
test
mov
pop
xchg
pop
push
jle
cmp
sub
jbe
pop
je
in
ins
sbb
ins
data16
jae
je
jmp
cdq
dec
out
mov
clc
loope
jae
mov
sti
repnz
int
test
pusha
call
push
adc
mov
cmp
sub
xor
mov
adc
pop
cmp
outs
rcl
je
shl
bound
std
jecxz
mov
mov
shl
imul
addr16
mov
mov
push
movs
inc
push
(bad)
call
inc
div
fistp
mov
lea
lods
jmp
cmp
pop
push
or
sub
dec
pop
nop
pop
dec
dec
jmp
or
loope
jmp
sahf
cmp
in
push
xor
pop
stos
retf
dec
mov
pop
aaa
hlt
or
pop
add
mov
(bad)
xchg
adc
sti
cmp
jb
or
mov
jae
lea
stos
imul
pop
add
frstor
push
mov
ja
push
fist
(bad)
(bad)
mov
add
xor
jl
xor
pop
fwait
pushf
or
shl
sbb
mov
je
jbe
ror
xchg
fsubr
ror
pusha
js
mov
add
push
clc
mov
jecxz
int
test
add
cdq
pop
dec
jmp
dec
imul
pop
mov
mov
sub
repz
out
leave
dec
push
lock
jo
push
pop
xchg
mov
cmc
sub
xor
mov
cli
stos
jne
cmp
gs
push
rcr
fadd
call
inc
arpl
js
lock
ret
int
aas
cli
dec
pop
dec
addr16
dec
push
mov
xchg
in
cmp
(bad)
add
dec
sub
pop
mov
jb
push
je
scas
or
icebp
outs
xchg
imul
push
pop
stos
enter
mov
mov
(bad)
inc
sub
or
je
cmp
ret
sub
sub
sbb
xor
mov
sbb
into
ja
icebp
inc
leave
imul
mov
jae
xchg
lea
cld
mov
and
xor
ficomp
cli
out
push
sbb
adc
push
cwde
inc
ss
adc
jo
push
clc
and
rcr
pop
jns
repz
pop
daa
dec
mov
not
adc
clc
fcomp
pop
jb
sbb
jo
fwait
cmps
fdivr
(bad)
mov
inc
sbb
or
sub
add
out
popf
adc
mov
lds
cmp
fist
inc
sub
fistp
mov
cmp
mov
ret
xor
retf
add
inc
test
xchg
xchg
xor
add
hlt
sub
and
and
popf
adc
mov
lds
cmp
fist
jecxz
dec
sub
add
adc
dec
repz
movs
xchg
cmp
mov
aad
push
cmp
and
or
inc
hlt
mov
mov
jnp
clc
pop
and
dec
dec
mov
int3
test
fwait
xor
cmp
sub
mov
or
inc
and
(bad)
pop
and
repnz
clc
nop
in
(bad)
push
rcl
fidiv
push
xor
jno
inc
ins
jns
pusha
imul
pusha
imul
pusha
imul
pusha
imul
pusha
imul
pusha
imul
pusha
imul
pusha
imul
pusha
imul
pusha
imul
pusha
imul
test
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
pop
add
enter
mov
adc
enter
mov
adc
enter
mov
adc
ret
jae
jb
imul
ret
jae
jb
imul
ret
jae
jb
imul
ret
jae
jb
imul
ret
jae
jb
imul
ret
jae
jns
out
sub
adc
loop
out
mov
pop
push
mov
sub
add
out
push
adc
call
adc
push
inc
(bad)
arpl
ins
out
jbe
push
inc
js
lods
xchg
cs
mov
mov
shl
out
and
inc
and
mov
mov
stc
mov
mov
rol
dec
lods
xchg
or
scas
jns
out
sub
adc
loop
out
sahf
adc
sar
scas
outs
mov
pusha
xchg
pusha
lock
ds
fwait
inc
jb
push
(bad)
into
mov
jg
scas
outs
mov
pusha
xchg
pusha
lock
ds
fwait
inc
jb
push
(bad)
into
mov
jg
scas
outs
mov
pusha
xchg
pusha
lock
ds
fwait
inc
jb
push
(bad)
into
mov
jg
scas
outs
mov
pusha
xchg
pusha
lock
ds
fwait
inc
jb
push
(bad)
into
mov
jg
scas
outs
mov
pusha
and
and
or
dec
cmp
fisubr
mov
sub
jb
push
retf
sar
pushf
cmp
sti
cld
gs
fs
and
cmc
or
arpl
arpl
scas
pushf
add
dec
scas
mov
aad
xchg
int
sbb
jmp
stc
cmp
push
push
cmp
out
call
xor
in
mov
mov
movs
dec
push
mov
sub
and
dec
cmp
xor
adc
loope
xor
and
rcl
imul
test
xchg
jno
fisttp
ins
lock
mov
ror
ins
dec
mov
sub
mov
popa
hlt
fwait
mov
je
fwait
push
cmp
shr
in
push
adc
add
pop
ret
add
stc
or
jmp
imul
sbb
ret
rcl
ss
push
inc
cmp
and
out
lock
inc
sub
or
and
fmul
add
lods
cmp
jg
cmc
and
sub
daa
arpl
pop
sub
dec
jle
xchg
ror
rcr
(bad)
test
inc
inc
cdq
fwait
std
call
jl
popf
and
popf
and
bound
add
xchg
inc
imul
sub
je
in
test
loope
pop
jmp
jb
loop
and
xor
hlt
int
jmp
mov
and
add
cmp
aam
ins
(bad)
mov
jmp
loope
inc
sbb
push
movs
jmp
out
and
fmul
les
pusha
arpl
lea
test
cwde
lds
idiv
test
cmp
sti
enter
sbb
je
jge
adc
xor
push
and
pop
and
ret
gs
jmp
pop
jmp
stc
(bad)
jg
retf
out
retf
sub
scas
mov
aas
mov
or
lahf
retf
pop
jmp
stc
(bad)
jg
sbb
retf
ror
ret
pop
loop
xor
inc
std
mov
addr16
pop
jmp
xor
fnsave
in
aad
xor
add
push
pop
loope
aaa
cli
out
fsubr
mov
dec
push
in
add
lock
mov
jmp
push
fimul
sbb
adc
dec
cmp
mov
and
push
mov
into
cmps
cmc
fdivr
xchg
push
add
mov
(bad)
push
repnz
js
cmp
(bad)
cmc
dec
push
adc
fbld
test
inc
add
and
js
sub
into
icebp
xchg
imul
inc
xchg
ins
int3
jecxz
fadd
push
mov
mov
loopne
push
inc
jmp
add
sbb
(bad)
dec
cmp
mov
dec
lock
repnz
push
push
push
cmc
call
jne
clc
and
push
outs
jno
movs
mov
pop
mov
fmul
xchg
add
in
jne
mov
xor
out
cmp
dec
fwait
or
push
xchg
ss
xor
ins
imul
into
xchg
scas
cmp
mov
faddp
leave
push
loope
mov
mov
inc
imul
inc
retf
jo
dec
retf
cmp
fld
fcom
mov
xchg
sub
and
pushf
jle
and
push
loop
sub
xor
xor
xchg
std
into
mov
add
xchg
sub
sub
mov
ins
fiadd
dec
and
out
imul
add
loope
cmp
(bad)
fstp
and
addr16
add
out
push
push
icebp
mov
test
jns
pop
or
push
gs
dec
cmp
sub
add
push
mov
ds
push
or
sbb
lock
movs
or
and
mov
sbb
jno
inc
sahf
(bad)
enter
pop
push
adc
js
loop
in
(bad)
mov
mov
loop
out
push
or
push
sbb
adc
inc
add
jo
mov
add
sub
test
aam
sub
sub
in
shl
dec
shl
lods
pop
mov
aad
and
and
retf
cmps
xchg
test
inc
(bad)
cmp
leave
data16
rcr
sbb
movs
xor
mov
stos
enter
cwde
repz
pop
sahf
push
cmc
add
xor
ins
fisubr
cmc
icebp
xchg
inc
jne
rcr
call
loopne
(bad)
popa
dec
mov
dec
xchg
xchg
add
ret
in
or
arpl
inc
mov
mov
pop
(bad)
fwait
add
arpl
sub
cmp
scas
dec
das
repz
jne
jb
add
daa
jl
add
inc
(bad)
push
in
xchg
repnz
and
mov
pusha
push
jmp
push
mov
es
jns
cld
leave
xchg
add
push
adc
scas
ins
cdq
into
adc
dec
adc
cs
ss
retf
ret
aas
lods
or
adc
(bad)
js
in
inc
ins
ret
xchg
out
out
fs
shr
and
aam
adc
xor
ficomp
xchg
push
int
in
add
scas
aad
cmp
in
call
push
adc
xlat
or
and
mov
mov
sub
rol
adc
jo
adc
push
aad
jbe
adc
sbb
pop
pop
sbb
clc
push
sub
pop
xchg
dec
mov
or
add
scas
xchg
dec
xchg
clc
hlt
dec
mov
pop
lahf
mov
ret
add
and
in
psubsb
and
loop
dec
pop
bound
jmp
xchg
loop
ret
mov
jb
sbb
inc
xchg
loop
ret
mov
jge
stc
(bad)
mov
not
stos
inc
dec
or
lods
stos
cmps
mov
shl
mov
icebp
sbb
rcr
ja
out
lods
dec
push
stos
test
jl
or
lods
(bad)
lods
cmps
mov
sbb
pop
inc
push
lock
sbb
ja
jecxz
in
fidivr
fisttp
inc
pop
cmp
sub
hlt
fldcw
ins
xor
jo
mov
pusha
jno
xchg
jo
mov
(bad)
mov
sbb
pop
dec
sbb
(bad)
in
mov
xor
mov
sbb
int
idiv
xchg
mov
stos
sub
outs
add
pop
dec
jl
(bad)
int
test
mov
xor
pop
sub
fcmove
pop
idiv
sbb
cmc
inc
leave
push
(bad)
in
mov
cmp
rcr
icebp
mov
stos
sub
jge
push
rcl
pusha
jo
xchg
and
xchg
inc
pop
push
aad
in
mov
xor
or
aad
in
mov
xor
or
aad
in
mov
xor
or
pop
test
push
aad
in
mov
xor
or
int
idiv
sbb
les
or
aad
jmp
inc
(bad)
int
idiv
sbb
stos
sub
int
idiv
sbb
int
imul
lods
xor
jo
adc
shl
jo
and
rcl
jge
mov
ret
jne
xchg
xchg
jg
mov
adc
jnp
pop
push
rcl
cmp
test
ret
sub
adc
pop
xor
lds
add
mov
inc
mov
lock
mov
out
or
jns
jle
or
jecxz
sbb
xor
call
icebp
repnz
movs
js
cld
mov
std
xchg
add
push
int3
cmc
sbb
daa
(bad)
(bad)
repnz
cwde
mov
xor
mov
cli
mov
jecxz
push
sbb
cmp
jge
add
movs
or
movs
inc
cmc
mov
pop
mov
sbb
stos
repz
adc
hlt
aaa
xlat
or
cdq
jmp
and
pop
jae
ds
and
dec
es
adc
aaa
sbb
stos
call
cmp
inc
es
test
jp
ss
movs
sub
(bad)
jmp
push
lods
repnz
div
pusha
mov
mov
xchg
push
mov
rcr
jmp
retf
fild
mov
cmp
mov
mov
ins
dec
in
add
mov
pop
lock
mov
jbe
std
test
fld
sbb
lods
cmps
adc
shl
jp
test
mov
xchg
lahf
and
mov
loop
loopne
jo
(bad)
push
adc
ja
test
inc
in
xor
mov
mov
aam
dec
and
push
and
cli
je
sbb
jne
shl
jmp
push
mov
xor
cld
mov
not
cmps
or
int3
es
lods
inc
dec
(bad)
popf
jns
lahf
pop
add
jecxz
add
xchg
int3
push
jbe
(bad)
jns
dec
pop
inc
xchg
loop
ret
mov
jb
sbb
cmc
pushf
dec
cmp
inc
(bad)
in
cmc
pushf
dec
cmp
inc
(bad)
in
cmc
pushf
dec
cmp
inc
(bad)
in
cmc
pushf
dec
cmp
inc
(bad)
in
cmc
cwde
dec
enter
sbb
cmp
or
mov
xlat
xchg
inc
xor
fstp
push
fwait
in
lds
enter
retf
aam
xlat
dec
iret
dec
push
and
sub
jmp
retf
stos
(bad)
ss
xchg
enter
mov
pop
loope
inc
mov
retfw
push
xchg
sbb
cmp
(bad)
pop
adc
pushaw
clc
js
dec
sti
not
stos
cmp
stc
test
pop
add
xlat
cmp
(bad)
pop
adc
pushaw
clc
js
dec
sti
not
stos
cmp
stc
test
pop
add
xlat
cmp
fnstcw
nop
dec
test
xchg
push
clc
or
push
cmp
call
sbb
sub
sbb
ja
push
test
xchg
push
clc
or
push
cmp
call
sbb
sub
sbb
ja
push
test
inc
in
cmps
xchg
lock
push
and
rol
mov
mov
cld
lock
mov
cmp
js
inc
in
je
aas
add
bound
cdq
pop
push
sub
adc
adc
or
inc
cmp
cwde
dec
pushf
in
xchg
lock
push
adc
ds
loopne
sbb
pusha
icebp
shl
icebp
and
mov
fs
lds
outs
dec
jo
and
dec
out
pop
jp
add
mov
loopne
and
mov
mov
cmps
cwde
or
mov
sub
sbb
test
xlat
add
push
jl
bnd
add
jno
ret
jg
out
scas
into
cmp
push
scas
mov
fist
cwde
push
mov
push
sub
sub
dec
sub
or
xchg
add
aaa
mov
sub
cmps
pop
rcl
ins
jb
(bad)
fdiv
rol
rcl
(bad)
jp
xor
neg
xor
sub
inc
jmp
xor
dec
mov
pop
ret
inc
push
mov
xor
sub
or
(bad)
aaa
pusha
xchg
repnz
adc
cmp
repnz
ds
or
fistp
or
jle
mov
fist
fcomp
in
adc
ins
or
in
or
jge
gs
jg
cmp
aad
pop
idiv
pop
add
push
cmp
pop
mov
xchg
ins
push
cmc
cmps
xor
mov
loop
adc
rcr
pusha
int
jmp
push
dec
mov
inc
push
jp
adc
jns
aam
jne
aam
jne
aam
jne
aam
jne
rol
or
shr
pop
dec
mov
mov
data16
fmul
mov
loop
lock
push
pop
push
push
pop
and
fadd
shr
sbb
test
icebp
xor
es
icebp
cwde
arpl
sub
mov
push
std
dec
dec
adc
fild
mov
shl
jg
sbb
push
pop
stos
imul
dec
cmps
mov
xor
dec
jb
xor
cmps
test
xchg
or
stc
ret
ror
mov
stos
retf
jecxz
and
dec
dec
jb
(bad)
lds
push
dec
ret
and
test
jno
nop
adc
sbb
into
shr
ss
and
int3
mov
daa
outs
fimul
(bad)
pop
loop
pop
test
mov
dec
adc
push
cmp
sbb
sub
js
xlat
jne
and
mov
lods
cmps
mov
icebp
xchg
push
adc
inc
pop
aaa
add
in
adc
sub
aam
(bad)
lock
popa
es
int3
xchg
mov
jb
sbb
jge
loopne
ret
xchg
cmp
push
fcomip
in
mov
xor
or
push
aad
adc
lock
mov
lock
mov
lock
mov
lock
adc
pusha
pop
clc
imul
popa
dec
cmp
push
rcr
jmp
lock
imul
popa
dec
cmp
push
rcr
jmp
lock
imul
sub
retf
cmp
fwait
retf
cmp
fwait
retf
cmp
fwait
retf
cmp
fwait
retf
cmp
fwait
retf
cmp
fwait
retf
push
sahf
imul
shl
mov
mov
jo
mov
push
icebp
xor
int
jb
les
je
retf
xchg
(bad)
ins
shr
jo
and
inc
movs
pop
jno
pop
mov
jmp
jns
push
mov
in
or
pop
outs
rcr
fcmovu
jne
xchg
fwait
data16
cmp
push
pusha
adc
repnz
sbb
xchg
mov
pushf
loope
xchg
stc
rcr
outs
push
fwait
pusha
fist
mov
mov
mov
fs
and
aad
(bad)
pusha
xor
sub
or
xor
fwait
stos
push
test
cmp
cwde
mov
call
fs
adc
dec
push
jmp
fs
or
mov
je
push
outs
or
jge
sbb
lock
sbb
push
shl
not
mov
test
shr
mov
sub
bound
sub
retf
mov
sub
lds
push
pop
sub
sbb
jmp
mov
sbb
xchg
pop
es
adc
scas
jl
movlps
(bad)
call
fcmovb
iret
xchg
ins
inc
mov
(bad)
xlat
stc
fisttp
adc
adc
lods
retf
pop
mov
push
mov
xchg
jne
jno
cmp
adc
sub
mov
or
inc
cmp
ins
fdiv
xlat
cmp
fdiv
cmp
movs
loope
je
cmps
gs
addr16
xor
(bad)
fnstcw
dec
pop
inc
sbb
xor
sub
fxch
inc
(bad)
cmps
scas
aad
xor
loopne
mov
pop
retf
lds
cmp
and
in
les
push
jbe
mov
stc
arpl
(bad)
repnz
xchg
test
clc
data16
dec
jge
dec
mov
cmp
inc
call
gs
jbe
sub
mov
sar
or
xsha1
cmps
mov
cld
pop
xor
push
call
fwait
(bad)
dec
jg
xor
lock
cmp
jle
movs
mov
faddp
sub
mov
xchg
jae
data16
cli
repz
and
pop
pushaw
or
cmp
sbb
mov
xor
imul
lahf
jl
xlat
xor
add
cmp
fisttp
or
(bad)
jge
sub
movs
mov
inc
pop
add
aas
inc
iret
hlt
inc
fmul
cwde
mov
inc
xor
mov
sub
enter
icebp
fisubr
or
xor
frstor
fwait
cmp
ins
inc
sub
xor
or
and
inc
outs
jo
in
fst
xchg
out
test
jns
lods
or
dec
jl
pop
cmp
inc
outs
add
sbb
nop
mov
jb
pushf
nop
cli
(bad)
lahf
mov
int3
daa
ud0
mov
fisttp
dec
jl
pop
cmp
inc
outs
add
sbb
bound
mov
xchg
popa
lock
idiv
and
fwait
mov
jmp
movs
inc
in
mov
aaa
cmc
mov
(bad)
je
into
xlat
add
mov
inc
lds
xor
test
pop
nop
inc
popa
and
sbb
jne
gs
popf
jns
sbb
jmp
or
push
retf
popa
movs
xchg
jo
test
pop
sbb
bound
xor
mov
sbb
imul
add
pop
jle
cmps
ins
shl
fisttp
inc
enter
pushw
xor
push
or
cmps
dec
in
shl
jb
mov
in
in
retf
mov
fisubr
js
jb
xchg
lods
push
pop
loop
inc
cdq
add
jb
scas
loope
and
xor
mov
aam
jmp
push
enter
or
xlat
(bad)
lods
icebp
call
fwait
inc
neg
jmp
add
retf
push
nop
retf
pop
inc
fsub
gs
shl
shr
xchg
repz
push
lods
push
test
pop
pop
loopne
lds
loop
xor
sbb
push
hlt
fwait
jbe
mov
dec
adc
pop
xchg
in
cmp
pusha
stos
or
dec
inc
int
inc
pop
mov
into
add
out
jo
retf
pop
xor
pop
dec
out
icebp
add
jb
mov
jb
adc
sub
out
xor
cmps
adc
retf
jb
shl
popa
cmp
and
hlt
aas
cmp
dec
jno
adc
sar
xchg
xchg
add
pop
push
push
jns
push
lea
xor
stos
dec
xlat
adc
inc
xor
fs
push
adc
ins
xchg
dec
adc
dec
rcr
sbb
shl
pusha
dec
test
out
enter
jns
(bad)
mov
sbb
rcr
xor
movs
repnz
pusha
daa
xchg
xchg
mov
dec
push
jecxz
shl
adc
ret
mov
sbb
mov
mov
lahf
inc
mov
js
mov
daa
xchg
cmp
push
cdq
pop
jmp
out
xor
jge
mov
addr16
adc
pushf
lds
jne
xchg
inc
or
xchg
mov
or
sub
adc
pop
mov
mov
call
xor
add
and
cmp
and
adc
lahf
loop
jae
inc
outs
fstp
pop
nop
pop
add
in
and
sub
shl
xor
mov
repz
mov
call
add
mov
xchg
sbb
push
fs
js
cs
retf
xor
inc
into
jo
leave
inc
adc
and
add
lods
push
pusha
lock
adc
mov
fwait
scas
mov
xchg
ss
scas
or
test
or
call
inc
jl
pop
lahf
mov
dec
sbb
ss
sub
sub
dec
cs
mov
pminsw
add
fiadd
clc
jle
lahf
clc
pop
fwait
scas
mov
shl
fisttp
dec
pop
mov
pop
cmp
hlt
fldcw
mov
ss
scas
or
test
dec
pop
call
inc
jl
pop
lahf
pop
jbe
xchg
mov
dec
sbb
mov
sub
or
dec
es
mov
rsm
scas
add
push
inc
clc
jle
lahf
clc
push
fwait
scas
mov
sbb
ds
out
stos
push
shr
(bad)
jl
pop
adc
mov
test
cld
fnstcw
adc
fldcw
xchg
push
movlps
mov
ds
lea
outs
add
add
loopne
inc
xchg
sar
popa
pop
jo
xchg
inc
push
loope
push
push
icebp
mov
xor
xchg
adc
and
loope
lock
shl
adc
jno
jno
xchg
jo
push
adc
xor
xchg
shl
xor
inc
adc
shl
shl
xor
shl
rcl
and
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
popf
jo
shl
icebp
xor
fld
push
pusha
shl
jo
xchg
pusha
jo
xchg
xor
loope
adc
pusha
push
xor
ins
mov
xor
rcl
jo
xchg
add
icebp
rcl
rol
push
pusha
popa
shl
addr16
push
pop
cs
mov
pop
movsx
fwait
mov
pop
mov
aam
mov
pop
cdq
xchg
cdq
mov
xchg
mov
mov
inc
nop
fs
mov
jnp
xchg
xor
loop
add
xchg
pushf
lods
imul
inc
pop
mov
mov
test
jecxz
movs
fisttp
stc
pop
pop
dec
addr16
push
setge
jno
pop
das
bound
mov
adc
(bad)
fisubr
xchg
nop
xor
inc
rcl
sub
mov
mov
xchg
cmps
addr16
pop
xchg
fstp
lea
dec
cli
and
xor
sbb
xchg
sub
push
sbb
xor
pop
imul
cdq
mov
cs
ret
ss
or
adc
jp
and
les
fdiv
test
add
das
sbb
mov
sub
xchg
xchg
dec
sbb
(bad)
mov
sub
jnp
jo
add
xchg
rcl
clc
jecxz
jno
dec
mov
jp
icebp
push
loopne
mov
iret
jae
xchg
adc
mov
add
pop
fisub
cmps
pop
cmp
(bad)
cmp
or
jmp
hlt
xchg
adc
pusha
iret
push
sbb
mov
fst
fnstenv
push
cmps
fldenv
into
mov
pop
leave
mov
int
jmp
pushf
movs
dec
cmp
adc
add
(bad)
ss
shl
and
repz
jno
lock
cld
inc
adc
adc
jnp
or
(bad)
loopne
cmp
ss
icebp
jge
and
push
sar
sub
fistp
div
pop
sub
pop
sub
daa
xchg
mov
push
sbb
(bad)
test
cli
jbe
cmps
inc
out
push
cli
cmp
neg
ja
adc
pop
adc
lock
comiss
pop
pop
mov
jb
rol
fisub
add
sub
sahf
jae
dec
loopne
(bad)
mov
aam
stos
or
loop
imul
ret
out
dec
cvtps2pd
out
int3
adc
loop
call
add
inc
mov
fs
xchg
mov
sti
pop
aas
add
jb
pop
rol
jno
xchg
sub
push
pop
inc
rol
xchg
pusha
xor
add
pusha
inc
dec
mov
pusha
hlt
mov
mov
aam
outs
popf
lods
mov
push
into
pop
mov
push
xchg
in
pusha
mov
xchg
pusha
jb
xchg
pusha
loopne
pushf
pop
push
enter
mov
cs
lahf
pusha
xor
pusha
lock
pusha
mov
inc
int3
div
aaa
in
inc
add
dec
push
fisubr
test
pusha
jno
xchg
xchg
jns
loope
xchg
xor
jo
and
dec
mov
popf
in
or
add
push
shl
js
(bad)
nop
cmp
jnp
jo
and
(bad)
adc
int3
pop
xchg
scas
push
icebp
outs
jb
lock
xor
shr
(bad)
aas
push
inc
push
ss
fsub
add
ins
jb
mov
bound
mov
cmp
aad
jo
adc
ret
movs
arpl
xchg
jno
rcl
inc
sub
mov
outs
jo
xchg
inc
pusha
icebp
mov
pusha
pusha
rcl
inc
xor
and
xchg
add
lock
rcl
and
ds
lock
jo
inc
aas
ja
(bad)
pop
sub
inc
mov
test
ds
out
retf
dec
jmp
sub
mov
test
daa
and
dec
push
aad
imul
in
cld
push
sub
je
xor
cmp
loope
stos
mov
or
sbb
and
aad
xor
outs
ret
dec
xchg
mov
fld
test
call
mov
or
sub
lods
push
push
repz
mov
cmp
push
or
adc
ror
fs
xchg
mov
add
mov
jecxz
add
jne
das
shr
popa
and
jns
add
js
cmps
sbb
xor
cld
pop
out
sub
fisub
test
cmps
addr16
aas
adc
push
adc
clc
pop
data16
sbb
add
pop
out
jns
rol
mov
sub
mov
add
int
cmps
sub
or
test
push
xor
xor
fmulp
rol
div
adc
sub
inc
jno
cmps
sub
cmp
pop
mov
sub
mov
enter
push
imul
fwait
mov
rcr
xchg
jo
and
int3
mov
in
nop
mov
mov
ror
ret
shl
pop
push
xchg
push
lds
adc
stos
or
scas
clc
test
fsubr
repnz
sub
pop
jno
cmp
pusha
and
jno
shr
in
jnp
xchg
cmps
call
fs
xchg
dec
test
ret
scas
jae
jmp
cs
mov
dec
fwait
xchg
in
adc
in
hlt
fbstp
inc
(bad)
retf
jecxz
xor
cmp
cmc
push
push
(bad)
pop
dec
out
push
cmp
arpl
imul
popa
jmp
mov
push
adc
movs
inc
ins
xchg
cwde
dec
popa
data16
jb
adc
mov
add
sbb
aas
in
jl
or
mov
in
stos
je
leave
aam
dec
jle
ins
loopne
movd
sub
xchg
cmp
aaa
scas
dec
inc
xchg
pop
pop
xchg
xchg
and
sub
sahf
loopne
std
adc
sbb
push
push
xor
fcom
dec
daa
mov
dec
push
sahf
aas
jmp
sahf
adc
ficomp
cmp
or
lock
pop
retf
sti
mov
mov
mov
out
inc
push
xchg
push
ins
inc
jb
fmul
cdq
inc
inc
into
es
pop
push
mov
jmp
data16
das
mov
(bad)
out
pop
dec
fwait
cmp
scas
add
rol
adc
loope
pusha
jo
xchg
push
jo
xor
popa
mov
xchg
lds
outs
sar
cs
test
aam
pop
loope
pop
jo
xor
in
mov
into
lahf
inc
out
int
les
pop
add
push
dec
out
data16
push
inc
inc
fisttp
xor
adc
int
aam
xor
loopne
test
push
stos
jmp
sbb
les
ins
leave
mov
pop
aam
popf
inc
fld
and
mov
aas
cmps
pop
jmp
add
int3
ins
cmps
adc
out
out
shl
fcmovnb
mov
and
hlt
into
lahf
inc
out
int
les
pop
add
push
dec
out
data16
push
inc
inc
pop
or
inc
xor
xchg
xor
fs
int
aam
xor
loopne
not
push
stos
jmp
sbb
les
ins
leave
mov
pop
aam
popf
inc
mov
jecxz
stos
aam
ficom
pop
pop
mov
jbe
or
pop
mul
fcom
loopne
or
test
test
pusha
or
add
lods
test
ins
repz
sub
out
sbb
sbb
adc
rcr
pop
adc
add
out
out
popf
ret
ins
cld
sub
mov
out
stos
jno
leave
mov
xchg
cmps
or
mov
scas
cmps
(bad)
test
ds
ret
call
rsqrtps
and
iret
sub
cmp
mov
sbb
dec
test
push
bound
or
das
ins
jl
in
push
jo
or
sbb
mov
gs
jae
cmp
xlat
adc
push
sbb
outs
repnz
and
mov
push
push
inc
daa
jae
lods
daa
cmp
and
pop
out
fwait
or
inc
daa
mov
popa
pop
inc
sbb
lds
mov
and
imul
enter
fisub
ss
xchg
ds
rcl
pop
in
sbb
jle
test
(bad)
xchg
xchg
cwde
scas
adc
jmp
jnp
js
jg
cld
dec
int
sub
lahf
cmp
pop
cld
repnz
shr
(bad)
sbb
push
add
jae
pop
enter
imul
mov
xchg
inc
aaa
cmp
out
dec
push
inc
jg
mov
(bad)
or
imul
add
int
(bad)
imul
pop
adc
dec
loope
xor
(bad)
cmps
outs
nop
in
out
inc
les
or
idiv
retf
jmp
stos
xchg
ins
lock
fldl2t
lds
retf
jae
mov
rol
lahf
push
or
movs
xor
inc
mov
jl
aas
pop
leave
push
mov
push
or
jle
ss
mov
das
jge
(bad)
lds
push
cmc
push
inc
xchg
xchg
js
sub
fs
and
sub
loopne
push
sbb
aas
sbb
in
rcl
int3
inc
dec
shl
xor
cmp
aad
mov
jb
sub
add
and
or
pop
lea
jmp
cmps
aad
pop
xchg
cmp
ins
push
cmc
add
dec
sbb
shr
sti
js
mov
out
add
out
out
pop
fwait
and
adc
sbb
pop
inc
fisttp
xor
or
add
sbb
data16
cmp
inc
mov
ror
adc
jecxz
repz
adc
in
shl
jo
sahf
sahf
cmp
ins
mov
mov
nop
jl
mov
ins
xchg
sbb
ins
jp
sub
fisttp
mov
jb
sahf
shl
ret
mov
push
dec
loop
xor
inc
push
out
ror
pop
xchg
clc
jp
or
mov
xor
cmp
(bad)
aam
push
sub
xchg
pushf
or
pop
mov
(bad)
(bad)
fimul
hlt
and
fidivr
les
test
pop
nop
iret
fidiv
push
bound
jecxz
mov
shl
and
std
xor
lods
ror
int3
jnp
push
cdq
(bad)
daa
icebp
test
push
inc
sub
or
rcl
cld
jg
js
inc
(bad)
jmp
push
pop
das
dec
retf
into
push
xor
inc
cmps
fcmovbe
mov
sti
in
mov
cmp
gs
jmp
in
add
lods
xor
pop
cli
jmp
xor
(bad)
lea
shl
xor
loope
inc
xchg
xchg
pusha
jo
xchg
push
pusha
shl
inc
aad
pusha
(bad)
shl
lds
dec
inc
(bad)
mov
jg
mov
adc
or
push
dec
fstp
or
dec
cld
cli
add
int
(bad)
dec
jl
pop
pop
dec
add
push
mov
cmps
pop
push
in
mov
xor
aam
sti
or
jae
fiadd
stc
dec
mov
stos
or
mov
or
or
fs
out
(bad)
in
inc
and
inc
mov
movs
sbb
sbb
mov
push
cs
sahf
ins
adc
addr16
push
cmp
mov
stos
out
mov
cli
ds
cld
cld
aam
and
test
pop
bound
fs
xor
leave
xchg
stc
cmp
dec
outs
cmp
jle
cmp
mov
in
in
cmp
mov
jno
inc
cmp
cmc
ins
test
fist
mov
pop
xor
ret
xchg
rcl
lahf
xchg
scas
popf
in
or
out
fimul
cli
mov
in
pop
dec
lds
sub
ficom
xlat
add
jmp
mov
mov
mov
pop
shl
pop
and
stos
add
mov
loopne
rcl
enter
movs
push
stos
inc
retf
and
leave
imul
mov
cmp
and
sbb
mov
xor
push
mov
out
and
ja
jle
xchg
pop
adc
mov
scas
and
adc
fwait
and
inc
mov
cs
(bad)
mov
sbb
mov
push
inc
arpl
cmps
outs
es
mov
jo
test
int
sbb
call
xchg
enter
in
stos
push
xchg
in
stc
ja
push
inc
aad
iret
jmp
add
or
add
out
or
mov
imul
mov
lods
adc
addr16
mov
frstor
mov
(bad)
cmp
mov
je
test
xor
int
push
iret
call
push
rcr
es
inc
fdiv
imul
(bad)
pop
mov
std
int3
mov
mov
(bad)
cmp
jmp
(bad)
repnz
jge
paddsb
sub
inc
jb
pop
inc
xchg
inc
xor
cmp
or
aaa
nop
outs
xchg
es
iret
cmp
ds
push
xor
cmp
sahf
loope
test
xchg
mov
push
and
inc
shl
out
push
cs
nop
sbb
push
mov
or
je
xchg
inc
sti
adc
dec
push
rol
cmp
inc
push
mov
push
or
lea
das
stos
test
movs
xor
jne
add
sub
mov
push
ja
mov
push
in
push
xchg
xchg
(bad)
repnz
jmp
outs
push
jo
mov
push
rol
and
mov
jno
test
jb
stc
test
ror
push
dec
in
mov
(bad)
push
mov
dec
inc
ret
movs
inc
sub
cmps
pushaw
xor
ins
lock
nop
enter
in
jecxz
fld
push
inc
dec
push
and
stos
dec
icebp
and
mov
push
lds
jp
inc
pop
push
sub
fimul
or
dec
jecxz
adc
mov
sbb
or
outs
div
xchg
pop
or
xor
xchg
stos
inc
xor
test
mov
sub
pop
gs
xlat
xor
stc
fnstsw
inc
jmp
pop
mov
fild
dec
inc
cli
cmc
test
or
daa
add
add
mov
add
jmp
imul
jp
inc
pop
push
cs
fimul
or
dec
jecxz
adc
xor
nop
mov
jmp
mov
adc
push
lea
xor
mov
adc
or
mov
and
jae
(bad)
jg
sahf
adc
jp
das
fcmovnb
jb
cmp
ret
(bad)
out
lds
dec
int
(bad)
pop
inc
sbb
call
popf
jge
adc
out
test
ret
pop
daa
fbld
in
enter
retf
fisubr
out
xor
sub
dec
inc
pop
mov
call
or
scas
out
cdq
pop
stos
call
push
das
xor
inc
in
xchg
int3
in
in
or
nop
aaa
fistp
fdiv
push
fwait
je
ret
cmp
lock
test
fmul
jp
cs
ds
jge
push
jno
retf
(bad)
push
into
cwde
pop
and
lock
xchg
mov
mov
fld
shr
leave
test
movs
push
loop
sub
ror
mov
int3
call
fdivr
cmp
pop
dec
cmp
repnz
xchg
xchg
jbe
or
sbb
pop
ret
mov
int3
call
fdivr
cmp
pop
dec
cmp
popa
call
pusha
test
push
stc
out
repz
dec
aaa
xchg
hlt
call
dec
sar
push
in
lds
aad
mov
sti
jl
mov
inc
jbe
cmps
or
loope
dec
pop
stos
lods
add
pop
jp
mov
mov
bound
lds
jg
mov
mov
xchg
lea
dec
ds
or
test
popa
inc
dec
rol
fld
clc
cwde
cmp
jp
pop
dec
stos
xchg
pop
enter
pop
jg
sbb
sahf
scas
push
inc
jae
das
cmp
xchg
cmp
dec
push
stos
push
jae
jmp
retf
mov
cli
inc
fdivr
pop
add
mov
mov
cli
dec
(bad)
retf
bound
mov
sub
sub
repz
pop
dec
stc
test
sti
imul
push
mov
nop
jbe
ds
push
xchg
(bad)
push
dec
cmps
jl
sub
fmul
cmp
dec
push
or
mov
clc
fneni(8087
(bad)
fisubr
pop
stos
ins
adc
xor
out
popf
lods
or
mov
gs
pop
xchg
or
movs
cld
pop
bound
mov
in
das
test
lahf
push
call
xchg
(bad)
jnp
call
push
cmp
loop
test
mov
ret
stos
add
fdiv
loope
out
xchg
inc
pushf
or
xchg
push
dec
sbb
mov
push
and
inc
leave
call
movs
pop
pop
jg
leave
shl
mov
inc
pop
pop
sbb
pop
in
loope
stos
ror
fs
arpl
mov
xlat
mov
jnp
push
(bad)
sbb
pop
mov
cmp
or
ja
ficom
cmp
xchg
pop
cmp
cmp
dec
addr16
jg
sub
(bad)
pop
loope
dec
in
in
in
add
aas
mov
and
fidiv
dec
mov
cdq
mov
clc
jmp
cdq
movs
sbb
push
mov
ins
xor
and
push
(bad)
cmps
outs
aam
xchg
pop
add
mov
sub
or
paddsb
lods
addr16
cmps
push
jge
fld
popf
push
mov
das
call
and
xor
stos
stos
pop
xor
fisttp
repnz
(bad)
dec
adc
imul
cmp
add
(bad)
jle
shl
and
inc
aas
aam
popf
movs
movs
lods
es
cmp
mov
or
push
dec
cmps
(bad)
fwait
outs
leave
jl
and
jae
fmul
xchg
xor
stos
push
repnz
bound
addr16
dec
gs
scas
fcomp
sub
loop
add
xchg
clc
add
sbb
xchg
and
pop
adc
daa
fst
cmp
fistp
xchg
dec
push
jne
jns
pop
loop
cmp
cmc
out
add
xor
clc
sub
out
adc
loope
call
sbb
xor
scas
mov
shr
jge
sahf
xchg
les
or
add
(bad)
pop
pop
(bad)
xchg
sbb
ins
add
test
cmp
stos
jp
dec
cmp
mov
xor
stc
mov
sub
rcl
es
mov
sbb
loop
add
arpl
out
sub
mov
rcl
inc
ja
lods
stos
dec
cmovp
inc
push
ret
jl
xchg
rol
or
xor
add
in
add
xor
mov
dec
sub
sbb
mov
mov
js
push
lock
cdq
xchg
sbb
fs
xor
sbb
cmc
daa
mov
clc
jno
repz
pop
cmc
inc
jl
and
movs
div
or
pop
fucomi
es
cmc
fcomp
sahf
lock
dec
int3
aaa
pop
mov
inc
daa
aas
and
or
outs
leave
xchg
jge
fnstcw
jle
test
les
cli
xor
cli
ja
rcl
stos
xor
jae
dec
or
call
mov
fsubr
(bad)
jo
mul
mov
out
mov
pop
pop
xor
push
push
sbb
mov
in
pop
inc
rol
and
ss
and
jmp
cld
not
jge
pop
das
sbb
xchg
outs
loope
fidivr
bt
xchg
cmp
xlat
add
cmc
imul
sbb
dec
pusha
mov
stos
cmp
xor
mov
and
mov
jge
xor
imul
rol
adc
mov
pusha
rcl
je
and
xchg
enter
aad
jp
ficomp
jg
inc
xor
ins
int
fs
pop
cmp
addr16
ror
cs
cld
(bad)
mov
jo
jmp
lods
fstp
adc
ss
cmc
sbb
sar
sbb
int3
sbb
and
push
jmp
stos
inc
retf
xor
stos
test
sub
sbb
mov
add
shl
dec
test
mov
(bad)
xchg
xchg
mov
or
icebp
mov
push
sti
lea
pushf
ja
cmp
leave
mov
cli
ins
fwait
jp
adc
fmul
jle
xchg
xchg
xlat
sbb
push
stos
inc
xor
shr
mov
movs
or
imul
fldenv
push
or
push
mov
xor
cmp
cdq
call
inc
jle
movs
jge
bound
in
test
dec
pop
mov
lea
shl
inc
cwde
cmp
dec
mov
test
pop
out
aaa
and
adc
dec
(bad)
jae
xor
adc
xor
sub
mov
cmps
fdivp
xlat
push
loope
dec
mov
xor
(bad)
movs
xlat
dec
adc
in
in
mov
mov
jge
push
pop
scas
ds
sbb
sbb
repnz
jecxz
push
mov
jb
pop
test
push
jle
movs
push
cmp
xchg
lahf
push
sbb
ins
mov
in
shl
pop
cmp
cmp
jmp
es
iret
mov
ins
sahf
add
sub
mov
(bad)
push
daa
fsub
std
not
div
push
xchg
test
loope
sbb
retf
fisub
jmp
(bad)
in
call
lock
push
push
xchg
jmp
into
popa
movs
rcr
nop
jne
out
pop
xor
cmp
icebp
outs
xor
sub
push
sbb
mov
inc
xor
retf
pop
cmps
pusha
in
(bad)
aam
enter
imul
inc
fdiv
xor
bound
sar
pop
jns
add
and
sti
sub
jo
fdivr
pop
fistp
lea
push
fild
add
mov
sub
jo
dec
aad
pop
cmc
gs
cmp
xchg
inc
mov
pop
ja
jmp
sbb
popa
mov
add
jge
pavgw
loopne
aaa
and
or
cmc
jnp
inc
push
add
jns
mov
aad
adc
int
dec
xor
push
stos
sbb
nop
pop
mov
outs
test
xchg
test
push
jp
call
je
push
jae
jg
jle
sub
and
add
and
fdivp
sar
das
lahf
adc
lahf
outs
and
push
mov
cdq
ret
xchg
inc
push
ja
jmp
repnz
(bad)
dec
jns
mov
rcr
push
fistp
pop
out
push
les
add
mov
add
div
loopne
sub
dec
int
cli
popa
inc
push
(bad)
jno
xchg
xor
mov
add
mov
mov
or
mov
and
lods
hlt
lods
inc
xor
sbb
sbb
fdiv
xor
test
add
push
addr16
movs
mov
jge
adc
xor
cmp
int
ficom
push
jmp
arpl
and
and
sbb
pop
lea
rol
or
xor
mov
cmp
loopne
dec
sbb
mov
xlat
mov
sbb
xor
daa
in
pop
mov
sbb
jge
daa
inc
push
mov
adc
jno
sub
adc
inc
mov
into
xor
xchg
xchg
jmp
cmc
(bad)
fadd
pop
ss
cmp
cmp
adc
dec
jmp
outs
xor
cmp
and
sub
jns
into
and
inc
push
push
pusha
and
aaa
repnz
cwde
cmp
sub
div
add
add
jae
scas
mov
rcr
rep
mov
inc
out
fisttp
inc
mov
jecxz
movs
or
sbb
or
sbb
cwde
sub
xchg
js
(bad)
aas
or
movs
je
fdivp
(bad)
in
es
xchg
mov
xchg
cmps
pop
jmp
mov
jp
ins
and
push
sub
dec
add
xchg
push
push
dec
movs
jg
push
push
aaa
sahf
pusha
inc
aaa
sbb
sahf
retf
sub
mov
jno
xlat
ret
mov
push
jns
adc
mov
cs
daa
xor
aaa
mov
xor
jp
dec
repz
xor
add
mov
push
rol
push
pusha
pusha
shl
jg
in
nop
and
pop
(bad)
jl
daa
mov
mov
sub
push
imul
mov
movs
add
mov
jp
nop
retf
or
cwde
stos
or
cs
fs
pop
aad
test
int
(bad)
aas
daa
sbb
ins
adc
imul
call
dec
lahf
or
push
sbb
cmps
pusha
jo
arpl
xor
stos
mov
or
int
dec
popa
adc
mov
mov
push
nop
int
push
jns
cmc
call
int3
inc
mov
pushaw
in
rol
sbb
dec
adc
lds
jp
push
out
rcl
sbb
sbb
xchg
sbb
push
lods
fwait
pop
adc
js
push
cmps
clc
int
xchg
sbb
xchg
adc
push
inc
lahf
mov
inc
cs
popa
jg
jno
push
jo
mov
adc
xchg
jo
rcl
data16
xchg
popa
outs
ror
push
outs
fcomp
nop
inc
rol
aad
mov
ror
push
sbb
sbb
shr
pop
add
sub
ins
shl
sti
pushf
mov
xchg
neg
cmp
xor
(bad)
push
or
fisub
js
sbb
adc
jbe
lds
inc
lahf
adc
sbb
call
test
mov
fldcw
lods
into
pop
xor
fdiv
jbe
aad
in
(bad)
sub
data16
dec
or
test
mov
and
sbb
dec
cmp
mov
(bad)
and
or
jmp
bound
xor
imul
je
adc
push
sti
pop
fsub
cmp
xor
loope
mov
loop
cdq
cmp
dec
xlat
imul
(bad)
xchg
inc
stc
adc
jbe
mov
add
jecxz
push
mov
cmc
mov
sbb
aad
ret
dec
add
stos
jmp
aas
fcmovnu
dec
jg
pop
jg
retf
sub
sub
fisub
xchg
je
push
mov
in
jnp
fistp
arpl
retf
cs
imul
lods
mov
gs
es
ds
je
xor
cmp
xchg
inc
daa
adc
mov
mov
in
sbb
push
(bad)
xchg
and
xchg
call
cld
add
pop
scas
add
xchg
sbb
push
aad
cmc
xchg
mov
fnstenv
push
ja
popa
xor
mov
ret
mov
xchg
and
aaa
jmp
mov
pop
xchg
cmp
mov
icebp
or
movs
push
rol
inc
push
out
push
repnz
addr16
je
push
mov
dec
fwait
sbb
cmp
fsub
adc
iret
and
adc
add
jbe
stos
and
push
stos
adc
aaa
stos
pop
cmc
mov
mov
xchg
or
dec
arpl
(bad)
daa
jecxz
ret
mov
cmps
cli
test
loope
icebp
(bad)
inc
mov
or
scas
jbe
and
jecxz
out
sub
pop
cmp
mov
js
ss
(bad)
sub
pop
fwait
dec
(bad)
repnz
xchg
daa
or
retf
sbb
cmc
stc
(bad)
scas
movs
(bad)
test
cmp
outs
cld
xchg
iret
inc
lods
rcl
jecxz
push
test
into
inc
and
dec
dec
arpl
out
xchg
pop
sbb
in
add
jns
aad
mov
retf
lods
jb
sbb
inc
mov
inc
out
cdq
repnz
jl
cmc
lea
lds
ja
pop
jae
push
stc
fst
clc
stc
fisub
push
mov
jg
mov
pusha
xchg
sar
mov
sub
pop
jmp
icebp
popa
popf
jne
arpl
neg
add
mov
sbb
dec
inc
cs
jne
jle
loopne
xchg
cmc
pop
push
inc
ret
mov
js
test
loope
aad
scas
stos
mov
pop
xchg
out
addr16
mov
test
(bad)
aad
adc
mov
pop
lods
adc
jo
shl
jo
mov
add
xchg
pusha
jo
xchg
jo
ret
gs
xchg
mov
iret
sub
xchg
jg
into
xchg
out
popa
pushf
jo
loop
lock
nop
add
outs
dec
push
jge
daa
ja
clc
dec
shr
jmp
mov
jo
xchg
test
out
sar
lock
outs
daa
add
cmp
js
pop
icebp
cmps
loope
add
outs
dec
push
jge
daa
ja
clc
dec
shr
jmp
ror
movs
(bad)
rol
jns
jmp
hlt
xchg
addr16
mov
lods
mov
adc
jbe
sub
in
addr16
pop
inc
pop
sbb
mov
mov
repz
imul
push
sbb
cmp
and
imul
ja
pop
dec
sub
nop
mov
xor
ins
jmp
dec
or
enter
imul
sti
fdiv
or
outs
movs
xchg
xor
test
mov
jecxz
push
addr16
stos
mov
jno
dec
pop
movs
jno
pop
or
push
fsub
lea
push
adc
jbe
cmc
inc
loope
sub
mov
sub
data16
(bad)
aam
call
push
push
jmp
jl
fmul
in
sbb
stc
outs
in
dec
push
fmul
push
(bad)
sbb
lods
and
test
bound
dec
and
lock
add
leave
and
mov
or
adc
cmp
cdq
rcr
and
ret
int
push
lock
xor
cmp
dec
rol
adc
mov
jae
out
loope
inc
xchg
cs
jo
push
jl
mov
mov
in
nop
in
jp
in
jg
cmp
push
xchg
ror
add
arpl
cmps
loope
fdivr
clc
dec
shr
jmp
or
jb
int
xor
inc
pop
in
data16
lea
(bad)
in
bound
call
pop
sbb
dec
outs
pop
retf
lods
test
fstp
pop
mov
out
push
mov
or
xchg
jg
rcr
adc
xchg
ret
in
sub
add
loopne
(bad)
imul
xchg
sub
in
ss
and
xor
or
sub
push
jns
add
ret
mov
push
nop
cmps
dec
call
loopne
cdq
std
cmp
adc
shl
les
xor
jno
adc
cli
mov
test
out
popf
faddp
mov
xchg
inc
imul
push
mov
mov
xchg
dec
push
test
jae
or
push
dec
int3
xchg
inc
mov
cmp
jne
shr
push
xchg
(bad)
sbb
pushf
call
mov
adc
sub
stos
icebp
test
in
sub
xor
out
push
(bad)
aas
xchg
cmp
add
xor
lods
bound
dec
sbb
gs
ins
push
inc
popa
mov
loope
cmps
cmp
push
mov
cmp
sbb
idiv
je
sub
popa
ret
cmps
dec
jecxz
popf
inc
mov
inc
aad
sbb
outs
sub
ins
xchg
and
xchg
dec
dec
jb
popa
xor
ins
inc
rol
inc
rcl
pusha
jo
xor
fiadd
ins
shr
jo
and
out
lods
push
je
inc
out
jbe
pop
call
movs
data16
jb
inc
or
test
cli
mov
scas
and
(bad)
ret
popf
ds
jo
xor
xchg
xor
(bad)
call
sub
or
outs
xor
xchg
mov
mov
inc
pop
mov
mov
and
scas
repz
pop
or
inc
shr
out
adc
xchg
int3
dec
fcom
clc
aas
fmul
pop
fistp
movs
cmps
xor
and
fcom
inc
add
fwait
out
push
movs
sbb
inc
fwait
ds
retf
and
sub
ja
dec
push
ins
xor
and
mov
sub
push
xor
inc
xor
je
inc
sbb
add
loopne
add
aaa
xchg
aad
enter
nop
movs
mov
pop
inc
cmp
xchg
dec
lock
test
(bad)
dec
pop
imul
and
jns
mov
and
imul
repz
jp
and
inc
aaa
push
out
adc
pop
pop
add
xor
call
lock
stos
add
and
mov
(bad)
xor
popf
ss
mov
push
ds
and
jno
cwde
sub
imul
enter
loopne
ins
sbb
pop
adc
sahf
pusha
mov
push
cwde
mov
jmp
in
dec
mov
sub
cmps
xchg
mov
fwait
leave
adc
rcr
clc
movs
lea
rcr
aaa
lods
test
std
mov
xor
gs
jno
jbe
push
mov
pop
shl
aaa
pop
cmp
cvtdq2ps
packsswb
cmp
mov
int
cmps
mov
inc
and
or
xchg
out
and
cmp
gs
test
ins
mov
pop
jle
sbb
aam
repz
and
dec
jg
inc
xchg
pop
jb
mov
mov
add
test
js
ins
xor
push
fwait
fs
sahf
loopne
sbb
push
mov
add
in
jbe
ds
(bad)
(bad)
jne
fistp
adc
xchg
(bad)
jg
js
sahf
rol
(bad)
fmul
mov
ficom
and
lods
std
xchg
mov
call
ins
nop
push
ret
into
call
ja
cdq
or
sub
inc
popf
adc
ss
repnz
xchg
jne
test
cmps
ins
xchg
sar
and
neg
or
mov
or
cwde
clc
xchg
xchg
jle
test
js
pop
imul
sar
inc
mov
add
lock
mov
mov
lea
cmp
rcl
js
mov
mov
ret
mov
js
pop
out
data16
push
popa
(bad)
cmp
cmp
sub
xor
out
mov
stc
sar
mov
retf
(bad)
stc
fwait
inc
pop
push
xchg
cmps
es
fwait
jb
jnp
movs
outs
loopne
inc
mov
imul
lods
xchg
js
dec
add
or
addr16
popf
in
or
sbb
arpl
push
cmps
les
arpl
xchg
loop
mov
loope
sar
sbb
push
add
inc
addr16
sbb
aad
sbb
add
outs
adc
repnz
cli
mov
inc
cmp
loope
xor
sar
nop
push
mov
int3
xor
ror
fstp
inc
(bad)
aad
sbb
jp
fcomi
aaa
jl
mul
mov
lods
fstp
jmp
sbb
push
or
test
mov
and
sbb
push
jo
jbe
jno
cs
ins
xor
nop
in
xchg
retf
inc
lock
add
stos
inc
pop
push
dec
loop
dec
mov
sub
mov
jnp
hlt
jg
xchg
add
fcmovnb
push
call
mov
hlt
mov
mov
inc
pusha
mov
shl
retf
mov
jnp
and
sub
sbb
cli
xor
test
xchg
or
mov
sub
(bad)
cmps
fnstsw
sbb
icebp
pop
dec
push
cmps
dec
out
ret
nop
xor
lea
xchg
pop
sub
lods
adc
inc
and
cmp
iret
add
adc
out
std
lods
jl
fnstenv
mov
ja
adc
loop
xchg
test
cmp
cmp
loope
jnp
stc
fstp
lods
cld
loope
sub
call
ds
inc
out
pop
test
pop
cdq
xchg
jge
clc
loope
outs
lock
xchg
lods
pop
mov
push
out
rcr
repnz
aad
fs
or
push
mov
(bad)
popf
adc
and
repz
dec
mov
ja
dec
push
pop
ins
add
add
and
or
or
mov
outs
cmp
cwde
in
mov
add
imul
sbb
push
adc
scas
lea
mov
popf
xchg
push
enter
push
push
xchg
xor
xchg
inc
sbb
jp
jmp
pop
push
xor
jmp
in
je
inc
lock
stc
pop
add
and
mov
xchg
jb
fild
jo
and
aam
shl
lock
cli
dec
sbb
jp
mov
push
sbb
shl
mov
jecxz
pop
cmps
xor
cmps
(bad)
jecxz
icebp
sbb
inc
push
inc
mov
dec
popa
cmp
jmp
cmp
sar
add
inc
nop
punpckhbw
das
sahf
mov
xor
jl
or
stc
xor
cmp
stc
add
test
and
xor
inc
push
es
or
jno
dec
icebp
pop
data16
xchg
call
ret
xchg
fild
dec
sub
jle
mov
loopne
sub
sub
cld
rcl
jno
(bad)
out
or
push
js
scas
(bad)
jecxz
or
push
or
mov
dec
dec
loopne
mov
fst
add
push
ins
lock
je
rol
dec
xchg
pusha
rol
push
inc
loope
push
push
loope
push
inc
icebp
shl
inc
add
adc
popa
loope
adc
shl
inc
adc
shl
and
mov
rcl
add
icebp
mov
rcl
pushf
and
shl
and
add
mov
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
mov
jo
and
jo
inc
inc
jo
xchg
jo
rol
pusha
jo
xchg
adc
icebp
and
adc
ins
loope
jg
add
pusha
pusha
rcl
pusha
jo
xchg
jo
xchg
icebp
loopne
mov
pushf
inc
inc
rcl
adc
adc
rcl
daa
stos
ins
(bad)
pop
mov
aaa
push
(bad)
je
arpl
outs
outs
jb
das
push
xor
int3
dec
pop
pop
out
sbb
dec
js
xor
adc
xchg
add
sub
lods
test
test
adc
loop
mov
xor
inc
mov
(bad)
sbb
stos
inc
mov
inc
ss
and
popf
sti
pop
mov
lock
xchg
push
not
(bad)
aam
retf
mov
mov
aaa
fbld
mov
mov
sbb
sbb
pop
xchg
in
stos
xor
jns
ins
shl
shr
bound
cmp
xchg
xor
int3
xchg
lock
scas
push
mov
cmp
ins
lock
push
jg
movs
mov
test
pop
dec
por
cdq
add
outs
popa
jo
xchg
sar
adc
iret
xchg
jo
ins
sbb
outs
mov
fwait
push
dec
cmp
push
dec
int3
sub
(bad)
fidivr
std
out
imul
jmp
out
cmps
dec
mov
popa
adc
sbb
addr16
cdq
sar
and
cmp
cmps
arpl
sbb
cwde
jmp
jle
sbb
leave
add
or
push
(bad)
cmp
out
inc
pop
aas
mov
push
into
gs
hlt
push
sbb
cwde
movs
add
add
fld
ss
adc
pop
xchg
and
jl
arpl
xlat
ret
push
addr16
add
and
retf
retf
or
in
mov
scas
icebp
in
dec
sbb
mov
sbb
sub
mov
xchg
cld
mov
xchg
call
sahf
fidivr
ins
xchg
mov
mov
out
inc
xlat
sub
inc
inc
repnz
add
adc
mov
test
lea
push
popf
pop
xchg
jp
shl
popf
inc
dec
cld
aaa
dec
ins
mov
cwde
or
push
stos
mov
xor
sub
test
xlat
mov
mov
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
push
jae
xchg
sar
rcl
jo
xchg
shr
push
pop
mov
push
lahf
mov
rcl
jo
xchg
add
sbb
test
pop
xchg
test
outs
jo
xchg
pusha
jo
xchg
adc
mov
cs
pop
imul
rcl
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
nop
jg
xchg
pusha
xor
push
jb
rcl
and
loope
inc
rcl
and
shl
add
xchg
and
nop
arpl
shl
mov
ins
lock
jo
imul
fsubp
mov
push
xchg
xor
ds
out
int3
imul
pop
lods
ror
lds
push
test
sub
push
sbb
add
mov
or
inc
or
fs
ins
aas
gs
popf
lahf
icebp
and
or
clc
fwait
mov
lds
xor
cdq
mov
loop
aad
add
repz
jbe
sbb
push
xchg
or
sub
jp
jae
imul
xor
cmp
xlat
jmp
rol
test
adc
arpl
or
mov
scas
jmp
mov
fbld
test
mov
bound
ret
fist
fist
inc
xor
mov
mov
aad
xor
jbe
xor
inc
cmp
and
sub
and
sub
lods
dec
add
loop
mov
fs
enter
xchg
ds
adc
jl
push
dec
and
jle
icebp
push
fimul
inc
mov
(bad)
adc
dec
gs
in
stos
push
rcr
pop
call
cmp
sbb
ins
iret
retf
ins
addr16
enter
bound
add
rcl
leave
jmp
std
stos
ret
inc
es
inc
iret
adc
clc
icebp
and
(bad)
push
into
imul
imul
push
pop
ja
fsub
repnz
aam
mov
jmp
(bad)
fcom
leave
or
ins
xchg
or
xor
aas
and
push
dec
and
fisttp
js
loopne
pop
mov
push
push
cmc
cmp
sub
jle
jmp
xor
pop
jnp
adc
not
fnsave
cmp
scas
mov
sub
in
pusha
ror
test
sar
test
pop
adc
cmp
cmp
or
pop
sbb
jp
mov
(bad)
sti
and
adc
push
jb
enter
lods
pop
pushf
cdq
push
sbb
xchg
add
jae
js
xchg
mov
sbb
test
push
inc
mov
add
jge
dec
pop
bound
loopne
pop
fisubr
in
sub
push
lds
mov
and
and
sti
add
dec
clc
jmp
push
cmp
xchg
sub
outs
jo
add
mov
pusha
and
xchg
jo
rcl
sub
jecxz
inc
push
(bad)
and
test
outs
rol
jae
ror
fs
xchg
mov
jg
mov
rol
adc
data16
mov
inc
sbb
repnz
or
gs
lods
rcl
leave
inc
sub
das
pushf
sbb
fcom
lock
mov
int3
fidiv
sbb
pop
sub
fs
xchg
ds
jp
popa
sbb
inc
add
mov
aas
mov
jo
ins
dec
mov
jo
mov
push
fmul
outs
push
ins
add
sbb
fist
inc
adc
pop
add
jmp
mov
cmc
pop
mov
mov
in
outs
fwait
cwde
xor
push
mov
call
cs
jl
jl
and
and
shr
mov
push
hlt
xchg
mov
xchg
jmp
test
loop
mov
dec
mov
cmp
jbe
mov
or
xchg
dec
xchg
pop
pop
imul
ds
in
loop
push
(bad)
ins
adc
lods
call
fild
aam
mov
xchg
mov
push
mov
sub
add
bound
icebp
iret
push
push
xor
jp
cmp
dec
dec
sub
shl
pop
in
fldcw
inc
mov
mov
mov
test
idiv
sub
bound
adc
rcr
sub
jbe
mov
mov
stc
pop
xchg
lods
pop
add
je
mov
js
mov
add
inc
jg
inc
mov
mov
imul
shl
jle
shl
cmps
and
inc
lahf
or
(bad)
loopne
pop
ret
adc
add
adc
dec
push
cwde
and
mov
fucomp
xchg
sbb
data16
or
popf
out
or
ja
cmps
stos
or
popf
out
add
sbb
out
(bad)
sahf
lahf
loope
pop
jb
out
nop
mov
rcr
ror
fadd
mov
xchg
xchg
mov
add
imul
outs
aaa
js
(bad)
and
scas
cmps
enter
cmc
xchg
cmp
jnp
(bad)
cmc
xchg
or
jbe
shl
xchg
enter
movs
jmp
jmp
pop
cmp
mov
cmp
xchg
jns
xchg
mov
xchg
mov
mov
adc
cli
push
push
retfw
mov
mov
iret
shl
adc
push
pop
call
xor
out
inc
retf
mov
xchg
test
in
je
call
fcmove
es
call
jle
cmp
pop
clc
jno
(bad)
sub
mov
mov
pop
jb
ret
in
inc
jne
and
push
retf
or
aaa
scas
mov
jecxz
jmp
out
cwde
add
or
push
stos
adc
jge
dec
jmp
ss
sbb
loop
rcl
xchg
sub
movs
cmc
sbb
jns
dec
push
and
in
mov
cmp
scas
add
rol
rcl
jle
push
aaa
jmp
dec
dec
gs
adc
in
xchg
dec
xor
ss
pop
fdiv
adc
push
outs
mov
leave
push
add
or
jne
adc
xor
push
adc
push
lds
sub
lahf
ja
(bad)
xor
rcl
jge
icebp
jp
stos
sbb
add
(bad)
lock
adc
fstp
test
push
add
icebp
pop
mov
sbb
inc
in
and
sti
sub
xchg
repz
lock
call
aaa
int
cmps
mov
cld
scas
jecxz
movs
lods
and
dec
or
or
adc
jge
fimul
(bad)
jp
add
xchg
aaa
push
adc
imul
fldenv
sbb
xor
cs
and
js
adc
inc
and
mov
sub
jo
and
icebp
mov
xor
loope
and
xchg
push
jo
xchg
and
mov
popa
xchg
add
shl
fs
imul
xchg
jg
xchg
rcl
push
rol
(bad)
fst
sub
adc
jo
mov
(bad)
daa
in
in
mov
retf
aam
mov
xchg
push
jmp
or
jmp
mov
mov
mov
(bad)
bound
stos
scas
mov
ja
dec
pushf
inc
int
cmps
mov
fadd
xchg
mov
cmp
int3
mov
xor
sub
mov
jns
sub
dec
xchg
adc
sahf
and
add
fnsave
test
int3
leave
movs
pop
outs
xor
inc
jns
in
add
pop
cmp
push
cmp
sbb
cmp
jmp
cwde
bound
jl
gs
mov
retf
inc
nop
daa
sub
pusha
dec
mov
xchg
sub
inc
pop
adc
mov
sbb
dec
inc
pop
adc
mov
scas
(bad)
stos
mov
rcl
popa
bswap
stos
mov
aad
push
fwait
lea
aaa
ins
pop
imul
mov
cmps
jge
or
mov
mov
fld
add
sahf
jo
push
mov
jecxz
int
push
out
inc
cmp
sbb
adc
inc
cli
(bad)
dec
mov
call
out
add
push
mov
inc
lods
mov
retf
jmp
adc
sti
push
or
icebp
aas
inc
jmp
mov
in
addr16
adc
push
ficomp
mov
sub
in
pop
pop
loope
mov
retf
or
push
or
and
loopne
push
sub
loope
or
mov
dec
add
xlat
(bad)
cmp
add
mov
and
dec
push
and
retf
or
sbb
xchg
scas
bsr
xor
retf
ins
ds
mov
je
push
stc
and
fwait
(bad)
out
loop
mov
retf
or
push
or
and
loope
push
stos
fwait
mov
movs
push
xor
pop
jns
mov
in
mov
lock
add
adc
pusha
(bad)
aas
retf
add
arpl
sbb
cmc
pop
push
jle
jl
data16
enter
mov
pop
push
jmp
mov
aam
jno
dec
sar
add
ds
imul
pop
sub
(bad)
push
fwait
mov
and
push
xchg
pop
aaa
repnz
push
pop
addr16
pop
out
ficomp
add
or
xor
and
xor
rcl
or
pop
call
repz
xor
inc
add
sub
js
int3
or
test
inc
aas
sbb
jmp
fsubr
adc
push
xchg
(bad)
lods
outs
push
jo
mov
inc
popa
loope
mov
mov
pusha
pusha
loope
jo
rol
and
mov
fs
jb
in
cmps
aaa
push
xchg
nop
jae
fdiv
cmp
jne
xchg
gs
loop
ins
inc
retf
mov
push
xor
ins
lock
jo
xlat
jae
push
pop
inc
call
adc
inc
lods
pop
ds
mov
mov
cmp
inc
(bad)
push
adc
inc
or
pop
mov
jae
xchg
xor
jmp
test
ja
dec
mov
outs
loop
cmps
xlat
cmps
fwait
push
or
aas
sub
jnp
mov
(bad)
jp
js
jae
outs
dec
xor
push
jno
pushf
xor
cmp
push
or
call
adc
out
(bad)
add
aas
pop
movs
test
sub
fs
lods
ins
add
loop
mov
cmps
mov
pop
adc
sbb
dec
aad
iret
mov
mov
lea
sbb
sbb
mov
mov
in
jbe
jnp
popa
hlt
rcl
dec
jae
fist
add
cmp
cld
sub
adc
(bad)
loopne
inc
ins
(bad)
mul
out
mov
xchg
sahf
xor
inc
cmps
jne
ins
push
pop
push
fcomp
xchg
fcomp
stos
mov
ds
sub
ds
pushf
xor
pop
movs
jg
add
xchg
inc
mov
mov
retf
les
pop
movs
mov
xor
and
cdq
jns
jmp
inc
in
stc
inc
sti
cmps
dec
sub
adc
aaa
adc
sbb
jne
mov
adc
ret
into
clc
mov
dec
push
pusha
div
push
aad
call
dec
ja
inc
mov
test
(bad)
cwde
push
jp
(bad)
cmp
aaa
sahf
lock
xor
call
adc
push
clc
aad
imul
fimul
int3
and
inc
cmp
mov
aas
xor
sbb
cmp
xor
retf
jmp
jae
stos
and
test
pop
fsubr
push
fiadd
pushf
pop
ret
mov
and
jbe
lods
arpl
leave
fcomp
fmul
imul
loope
xchg
je
or
cmp
dec
ds
jne
sti
add
mov
cmp
xrelease
out
out
sbb
push
sub
dec
and
jae
sub
mov
(bad)
push
jbe
mov
cmc
dec
sbb
jl
and
xchg
retf
daa
and
sahf
pusha
sub
call
pop
mov
repz
retf
xor
movs
fstp
pop
fisttp
loopne
out
push
mov
jne
repnz
in
jns
sbb
(bad)
cmp
cdq
call
mov
mov
lods
mov
(bad)
mov
leave
push
push
or
add
(bad)
adc
outs
push
rcl
out
arpl
push
fdivr
cmp
add
sar
bound
enter
pop
push
and
or
ja
imul
shl
rol
ret
out
fist
cmp
dec
scas
push
lea
push
lods
mov
jp
inc
mov
repz
and
dec
cwde
(bad)
adc
inc
jecxz
stos
cwde
(bad)
xor
adc
pop
int
mov
inc
pop
dec
lods
vpsubq
js
xchg
cmc
push
pushf
out
mul
stos
push
dec
mov
int3
xchg
or
and
pop
or
sti
xchg
cmp
xchg
or
aas
adc
loop
xor
cmp
imul
dec
div
inc
and
push
sbb
sub
aam
(bad)
mov
fcomi
mov
jmp
xchg
jno
mov
jg
repz
stc
jmp
push
out
rcr
stos
clc
mov
ins
mov
gs
push
mul
lds
mov
and
ins
xchg
push
(bad)
xor
pop
scas
add
imul
stos
xlat
(bad)
mov
or
push
xchg
stc
jl
fdivr
sbb
ret
imul
retf
nop
sti
add
(bad)
pop
adc
xor
int3
mov
or
pop
jle
adc
lea
aaa
push
popa
int
sub
mov
dec
fs
ret
push
repz
mov
jp
mov
jmp
push
(bad)
(bad)
inc
or
std
jle
push
stos
dec
lods
call
jmp
imul
cmp
jno
inc
pop
(bad)
push
fidivr
aaa
mov
and
xor
dec
fnsave
fs
(bad)
jge
neg
loop
sub
cs
and
add
inc
pop
adc
jbe
pop
int3
or
lock
test
loop
mov
sub
mov
inc
push
and
cli
sar
shl
sub
and
xchg
int
pop
test
sub
mov
push
sub
sbb
rol
ss
and
jno
xchg
pusha
arpl
cli
inc
enter
mov
jne
mov
out
sahf
icebp
mov
rcr
mov
and
sbb
loop
add
jne
outs
jno
stc
push
ret
jmp
jbe
adc
fadd
arpl
lahf
push
mov
iret
mov
mov
cmc
pop
call
sub
out
xlat
repz
jecxz
test
push
jno
ret
rcl
adc
(bad)
mov
mov
std
outs
mov
sbb
xchg
and
sub
sub
cwde
or
adc
sub
and
adc
push
pop
scas
popf
jg
cmp
jl
outs
jo
xchg
inc
pusha
icebp
mov
pusha
pusha
rcl
pusha
pusha
aad
jae
rol
jns
ret
jnp
xchg
xchg
outs
int3
xchg
ja
rcl
arpl
add
push
sbb
loopne
inc
rcr
push
sub
fistp
jl
xchg
mov
mov
les
ja
inc
iret
aaa
rol
mov
loope
xchg
jo
fdiv
popa
mov
mov
bound
(bad)
sti
dec
inc
aas
es
fadd
xchg
xchg
not
cmps
mov
jmp
in
inc
rcr
push
sub
sbb
ds
sub
jns
cmp
ror
popa
jnp
in
add
adc
adc
retf
adc
mov
pop
jno
mov
dec
inc
not
xchg
retf
(bad)
mov
sub
pop
ins
push
out
cdq
pop
pop
xor
(bad)
jb
mov
clc
jo
push
ds
(bad)
fdiv
nop
cmp
cmp
pop
add
sub
jnp
or
jmp
push
jae
iret
nop
mov
call
sub
or
rcl
xchg
daa
mov
movs
jge
ds
in
adc
dec
iret
fst
rol
stc
outs
and
ret
mov
call
lock
mov
aad
ds
fist
pushf
data16
int3
inc
jns
add
aad
mov
outs
push
adc
fidivr
cli
xchg
pop
fcom
outs
into
and
rcr
inc
enter
data16
xchg
lock
sub
icebp
mov
push
movs
(bad)
xor
psllw
add
push
push
jo
pop
sbb
inc
xor
jmp
pmullw
popa
jo
fldcw
enter
leave
rcl
outs
inc
pop
gs
cdq
stc
push
jp
sub
xchg
aam
enter
nop
xor
xchg
adc
fucomi
jl
shl
and
inc
xor
push
push
inc
xchg
add
ja
lods
lds
fldcw
or
push
lea
daa
cmp
pop
xor
or
dec
mov
sub
fwait
ins
enter
jne
push
pop
or
retf
mov
adc
mov
adc
int
mov
jecxz
cmp
jns
sti
or
rcr
pusha
xchg
(bad)
mov
push
nop
or
dec
out
popf
mov
stos
and
jno
daa
cmp
dec
push
pop
mov
xlat
dec
clc
pop
sbb
test
lods
out
lods
mov
mov
fscale
hlt
test
add
push
imul
jmp
sub
mov
sub
inc
imul
jecxz
pop
jle
and
enter
or
stos
stos
sub
mov
add
dec
test
test
sub
adc
push
push
ret
add
stos
aas
cmp
or
loopne
shl
push
push
rcl
pusha
pop
rcr
les
movs
cmp
push
scas
push
std
std
pop
mov
lea
inc
test
sbb
cld
mov
sub
aam
mov
ret
mov
sub
sbb
xor
xchg
iret
arpl
mov
leave
mov
cwde
ror
add
adc
pushf
test
cdq
mov
jns
ror
and
add
mov
int3
and
movs
pop
imul
das
test
inc
mov
dec
out
xchg
pop
add
mov
iret
push
clc
cmp
mov
sahf
push
je
mov
add
test
mov
rcr
hlt
push
aam
mov
jne
or
fnstsw
daa
aad
adc
or
pop
push
shr
ss
bound
cli
pusha
push
rol
stos
popa
and
int3
out
xor
ins
mov
and
leave
xchg
inc
jno
cmc
not
inc
mov
adc
out
cli
jo
outs
and
call
push
dec
rcr
or
pop
push
aad
mov
push
aam
jmp
dec
out
sbb
dec
pop
push
test
cmps
in
call
mov
add
sbb
jecxz
and
add
xbegin
std
loopne
inc
push
daa
inc
pop
inc
ret
mov
inc
pop
push
aad
in
mov
xor
or
aad
in
mov
xor
or
aad
in
mov
xor
or
aad
in
mov
xor
or
in
in
mov
xor
or
aad
add
mov
inc
pop
push
aad
in
mov
xor
or
aad
in
mov
inc
pop
push
aad
in
mov
xor
or
aad
in
mov
xor
or
push
gs
jno
xor
mov
push
xchg
shl
xchg
jo
rcl
fld
fcomp
jg
lds
rol
adc
jl
push
xchg
xchg
jmp
rol
push
push
dec
cmp
iret
xor
xchg
popf
add
outs
aad
(bad)
xchg
shl
rol
fcmovnbe
mov
ret
je
cld
movs
shr
and
lods
push
sbb
xor
stc
pop
das
xor
test
addr16
adc
imul
mov
and
xor
cwde
mov
mov
pushf
je
aaa
ins
out
xchg
fnstsw
ret
ret
sbb
cld
arpl
xor
mov
sahf
out
push
jge
out
(bad)
xlat
cmp
mov
push
fld
jmp
aas
dec
or
sub
repnz
in
fidivr
inc
scas
icebp
fadd
fwait
div
add
mov
(bad)
xchg
in
xchg
lea
mov
mov
jb
or
(bad)
ret
not
jecxz
jle
push
inc
mov
push
pop
jmp
add
sbb
mov
or
lods
out
fsubp
cmp
ss
xor
ss
xor
ss
xor
ss
xor
ss
xor
ss
xor
ss
xor
xor
inc
push
iret
das
sub
iret
fdivr
mov
mov
ds
mov
div
add
cld
popf
cmp
imul
xor
aaa
(bad)
and
fs
pop
fist
push
lock
outs
jle
out
xchg
mov
call
das
cdq
mov
leave
pop
into
push
sti
outs
int3
mov
dec
jb
popf
fld
jle
add
dec
xor
fimul
int
cmp
xchg
pushf
adc
hlt
pushf
movs
push
mov
js
cmps
(bad)
jmp
popf
mov
fstp
movs
push
and
mov
in
cmp
sbb
pop
fsubr
enter
inc
mov
mov
or
mov
jecxz
xchg
inc
push
pop
je
scas
cmp
sar
movs
and
adc
jbe
dec
cwde
mov
(bad)
mov
and
jg
out
dec
adc
movs
stc
lock
adc
jmp
int3
or
fist
sub
jnp
jnp
ds
ja
stc
fneni(8087
sbb
and
sbb
stos
sbb
ins
xchg
pushf
jne
ja
call
fadd
scas
jmp
mov
pushf
popa
sbb
aaa
(bad)
push
pop
fs
mov
add
addr16
jns
mov
cmp
inc
in
sbb
pop
mov
mov
dec
jmp
xor
cld
fisubr
mov
mov
outs
imul
arpl
add
and
arpl
bound
jl
shl
clc
inc
cmp
sbb
xchg
adc
dec
cmc
jle
rol
mul
(bad)
mov
jl
mov
sbb
(bad)
fiadd
and
dec
push
xchg
mov
pop
out
loopne
movs
imul
sub
hlt
xchg
sar
pusha
pop
or
jo
push
pop
call
sbb
pop
mov
ror
xor
add
push
xor
push
inc
fldenv
xor
jl
rcl
push
push
icebp
xchg
pusha
jo
xchg
pusha
jo
xor
fild
arpl
call
int3
xchg
rcl
push
rol
cmp
out
dec
ins
or
inc
dec
push
lods
dec
xor
sbb
lahf
push
shl
rcr
fcompp
inc
pushf
lahf
xor
jo
test
rol
xchg
in
xor
(bad)
sub
inc
jge
cwde
cmps
mov
sar
dec
dec
push
lods
dec
loop
or
dec
cmp
mov
popa
js
xchg
mov
clc
mov
mov
push
pop
push
mov
lods
inc
out
aam
fidiv
arpl
dec
mov
jo
and
aas
retf
push
dec
push
stc
xchg
inc
fidiv
pop
and
movs
call
pop
(bad)
lea
out
pop
in
mov
sbb
dec
arpl
add
push
out
dec
mov
pusha
arpl
inc
push
cmp
xchg
xor
adc
aad
ror
adc
rcr
cli
jne
mov
cwde
iret
push
and
mov
jmp
in
popa
jo
(bad)
xchg
sub
js
jmp
mov
call
pop
mov
(bad)
ss
ins
lahf
mov
sbb
fcom
test
pushf
xor
push
mov
adc
ds
xchg
xchg
inc
mov
push
dec
sub
dec
in
mov
xor
sti
mov
test
and
jle
inc
pop
jle
fcom
adc
mov
shr
or
test
cdq
push
int
pop
cs
ins
inc
ror
bound
jp
test
pop
mov
fld
popa
movs
xchg
xchg
add
add
push
cmp
imul
mov
loop
scas
retf
out
jl
xchg
xchg
mov
xchg
mov
lock
loopne
xor
out
xchg
add
sti
arpl
sahf
cmp
sar
ds
sub
jnp
sub
cmp
mov
push
int3
push
call
cwde
xor
jmp
fnstenv
sub
enter
bound
and
pop
int
pop
or
mov
mov
dec
or
aam
cmps
ret
test
shl
push
cmp
popa
and
adc
ret
xchg
lahf
mov
and
mov
jno
call
mov
pop
scas
cmp
lods
sub
pop
(bad)
lods
mov
and
fcom
mov
mov
loopne
mov
into
pop
adc
jb
push
retf
popa
jmp
mul
xor
shl
cdq
adc
je
push
or
lods
xchg
xor
outs
jge
shr
or
sbb
loope
jno
adc
mov
ins
ret
push
je
and
pushf
icebp
arpl
mov
mov
pusha
icebp
shl
rcl
jo
lds
jb
enter
(bad)
xchg
lds
data16
inc
and
addr16
cmp
adc
(bad)
fidivr
das
icebp
mov
shr
je
(bad)
dec
jmp
repz
ret
jl
inc
mov
cmps
xor
add
or
and
shl
nop
iret
stos
jo
hlt
adc
cmp
xor
xor
in
adc
dec
ret
jl
adc
sub
push
inc
add
je
xchg
in
or
lock
(bad)
(bad)
fisub
pushf
repz
js
stc
popa
push
mov
sub
es
or
cmc
ins
jbe
inc
adc
icebp
cmps
jne
xchg
movs
xor
xor
mov
bound
into
mov
mov
imul
retf
push
rcr
cmp
sar
mov
xor
(bad)
mov
inc
mov
inc
dec
inc
fnsave
mov
jle
xchg
out
xlat
test
jnp
inc
xor
adc
jge
jae
je
shl
outs
retf
or
shl
repnz
into
mov
and
icebp
pop
adc
inc
mov
xor
adc
scas
sub
xor
jecxz
mov
sti
add
push
add
ror
cmp
shl
sub
cmp
push
inc
mov
test
aaa
add
mov
test
add
xchg
sub
nop
jne
inc
rol
sbb
add
cmp
cmp
adc
sub
(bad)
cdq
push
outs
out
sar
push
sub
and
sbb
mov
jbe
test
add
xchg
pop
test
add
inc
inc
adc
fld
mov
cli
(bad)
or
fwait
js
cmp
jl
outs
in
adc
js
jg
daa
test
nop
push
xor
call
mov
aas
push
lahf
ins
loopne
and
push
es
pop
(bad)
xchg
lock
in
call
inc
loop
int
push
mov
push
and
sbb
dec
sbb
outs
pop
cld
jnp
or
cmp
sbb
dec
xlat
cdq
cmps
or
shl
loop
cdq
mov
or
dec
out
lds
outs
repz
mov
jo
jno
mov
clc
shl
out
cwde
lock
mov
call
mov
mov
test
pop
ret
or
clc
mov
adc
xchg
push
adc
inc
bound
scas
fistp
mov
adc
loop
adc
cwde
push
sub
xchg
add
sbb
sub
adc
(bad)
shl
dec
xlat
rcl
push
or
jecxz
mov
push
and
pop
and
fs
shr
xor
loope
jae
fisttp
jmp
les
adc
mov
sbb
pop
sub
push
mov
push
xchg
inc
jbe
mov
in
jb
pushf
mov
add
or
add
add
push
retf
inc
cmp
jbe
bound
cmp
hlt
idiv
mov
dec
fsub
popa
gs
adc
aam
cdq
mov
loopne
and
jg
xchg
adc
mov
int
stos
sub
inc
cmp
test
sbb
push
and
inc
movs
leave
jo
sti
mov
js
mov
jecxz
(bad)
aaa
jmp
pop
out
mov
xchg
lds
add
and
test
in
push
and
add
adc
test
xor
int3
mov
dec
bound
ror
js
(bad)
fld
es
test
in
out
sti
sub
push
mov
fwait
dec
int
add
lds
mov
fucom
std
mov
sub
inc
xor
xchg
jne
mov
cdq
jo
fs
call
aam
(bad)
scas
popa
(bad)
out
imul
test
movs
jmp
loop
push
push
fadd
int
cs
cmp
loopne
xor
(bad)
xchg
jp
in
jb
loope
xchg
sbb
xor
mov
retf
push
add
pusha
jecxz
jge
add
fdivr
inc
adc
loop
sub
xchg
xor
or
cmp
sub
xchg
push
fild
push
loop
sbb
sbb
jns
call
push
push
pop
dec
loopne
adc
jg
movs
jle
inc
add
jne
cmp
pop
pop
ret
cmp
mov
xchg
cmp
xchg
mov
dec
sub
xchg
out
aas
push
int
lds
fs
aad
pusha
lock
jo
cs
inc
shl
inc
icebp
mov
xor
inc
rol
add
mov
shl
mov
and
and
mov
add
inc
mov
sub
icebp
test
xor
rcl
add
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
push
rol
inc
rol
and
jg
add
pusha
pusha
rcl
jo
xchg
add
mov
jo
(bad)
adc
pusha
rcl
pusha
jo
xchg
pusha
jo
xchg
inc
jo
adc
dec
inc
popa
jg
add
jno
retf
xchg
shr
imul
rcl
lock
test
rcl
je
icebp
xor
retf
xor
pop
pop
or
repnz
(bad)
mov
das
pop
push
std
(bad)
imul
rcl
pop
fs
int
(bad)
repnz
inc
or
or
sub
scas
and
ret
mov
ins
push
and
xor
pusha
jo
shl
js
inc
mov
xor
push
jne
add
pop
xchg
das
push
cmp
div
xchg
das
mov
push
(bad)
push
scas
cmps
xchg
cld
jbe
lock
jnp
lock
dec
bound
jns
xchg
ja
sub
out
ror
lea
enter
(bad)
xchg
nop
mov
inc
jb
inc
mov
outs
(bad)
and
enter
mov
cmp
imul
js
js
xchg
push
jge
jno
push
lods
call
scas
retf
ds
xchg
lock
jle
and
cmps
outs
add
add
mov
je
xchg
pusha
jo
cwde
cmp
(bad)
retf
cmp
jo
xchg
pusha
jo
cwde
mov
push
std
sbb
rcl
out
out
xor
push
or
adc
jbe
mov
mov
xchg
xchg
mov
jno
loope
ret
and
lahf
fild
sbb
adc
inc
and
xchg
fsubr
cli
call
mov
sbb
jns
inc
mov
mov
mov
pop
jno
sar
jb
add
rol
xchg
nop
jp
mov
ins
push
ret
xchg
pusha
and
bnd
push
jbe
not
adc
fbld
mov
or
sub
jno
addr16
test
jp
popa
dec
aas
sbb
xchg
or
movs
pop
ins
dec
arpl
sahf
xchg
jge
popa
lea
pop
scas
outs
mov
loope
dec
jae
icebp
cdq
or
mov
inc
retf
push
cmps
int
movs
push
scas
mov
and
jnp
pop
pop
mov
jno
ins
je
xchg
cdq
jbe
loope
and
adc
cmps
outs
cmp
dec
push
add
pop
loop
xchg
lods
repz
pop
(bad)
pop
cdq
cmp
popa
and
xchg
pusha
xor
cdq
nop
jl
inc
lahf
dec
out
aad
cli
cmp
rcr
(bad)
sahf
lock
inc
test
cdq
scas
rep
cmps
popa
ss
jno
xchg
pusha
lock
sub
sbb
xor
mov
adc
xor
nop
pusha
js
xchg
bound
xchg
lock
out
jo
xchg
pusha
jo
mov
jo
xchg
pusha
jo
xchg
xor
mov
ins
lock
jo
xchg
nop
pop
sahf
sub
inc
jo
mov
push
loope
pusha
xor
mov
inc
jo
shl
icebp
and
mov
and
xor
lock
jg
inc
add
lds
fcom
inc
cs
nop
dec
sub
add
mov
stos
mov
cmp
aad
in
sub
cmc
test
loop
jecxz
cwde
sub
push
pop
sub
vmptrld
xor
cmp
fs
in
mov
pop
sub
fisubr
ror
pop
inc
jo
adc
add
jbe
xchg
scas
push
mov
jno
sub
jno
mov
sub
jmp
cmps
sar
stos
xor
add
jp
sar
push
xchg
js
clc
push
nop
pop
sub
jnp
xchg
js
das
xchg
int3
xor
jg
push
iret
mov
sbb
or
out
mov
retf
or
mov
adc
pop
mov
ror
adc
cmovp
nop
stos
mov
in
sbb
fcom
and
out
or
stos
add
xchg
sub
sub
ss
stos
hlt
xchg
loope
hlt
push
cmp
push
in
xor
fisubr
call
mov
adc
jne
mov
mov
mov
adc
dec
jb
adc
or
scas
in
aaa
sbb
in
call
mov
xchg
mov
movs
ins
fwait
jg
pop
pop
adc
pop
fucomip
xor
cmps
fsubp
mov
jmp
call
cmp
cmp
bound
xchg
mov
je
mov
lods
cmp
sub
pop
cwde
and
fidiv
cdq
pushf
test
add
xchg
and
jae
lods
mov
or
mov
sub
ins
pop
clc
mov
sbb
mov
retf
dec
outs
sub
xor
popa
inc
jo
mov
pusha
inc
xchg
xchg
pusha
jo
xchg
and
mov
jo
ret
and
aad
jno
les
jns
fimul
jo
repnz
xchg
rcl
call
mov
jbe
cmp
das
popf
pushf
or
loop
push
xor
dec
inc
cli
xor
(bad)
mov
retf
and
adc
xor
in
jmp
mov
jmp
mov
dec
jecxz
loope
rol
shl
jge
pop
sub
or
addr16
fiadd
push
add
fild
sub
mov
cmc
aam
outs
and
(bad)
out
xchg
aad
xchg
(bad)
jns
sub
mov
rcl
dec
push
test
popf
aas
mov
xchg
jne
call
cmp
imul
rol
out
sbb
jae
or
jge
and
push
dec
mov
cmp
inc
sub
clc
inc
fdivr
and
mov
loop
fstp
and
in
or
mov
outs
mov
adc
rcr
xchg
fmulp
stos
push
push
jl
call
mov
test
sub
ja
mov
daa
ds
adc
jne
jns
or
push
lea
lods
sbb
pop
outs
mov
fldenv
aas
inc
xchg
sub
repz
int
cmp
jb
inc
popa
push
push
and
popf
(bad)
dec
mov
inc
sti
adc
or
inc
fsubr
mov
rcr
inc
inc
dec
dec
shr
and
aad
and
fst
test
xor
pop
or
ss
or
ins
jnp
mov
xchg
mov
push
ret
dec
aam
sbb
push
cmp
jge
mov
fidivr
sti
dec
ins
retf
adc
pop
fld
in
retf
popa
inc
(bad)
sub
pop
sub
mov
xchg
faddp
imul
jecxz
push
fwait
cmp
cmc
stos
inc
xchg
imul
xor
sub
jge
push
repz
dec
jbe
(bad)
xchg
popa
leave
daa
popa
mov
jg
mov
mov
mov
das
call
push
jb
std
pop
xchg
or
adc
out
(bad)
adc
sar
adc
repnz
add
loop
xor
push
sub
scas
sbb
lea
clc
into
dec
push
xor
xor
dec
mov
int3
sub
pop
sti
jo
(bad)
mov
shld
fiadd
icebp
cmp
in
mov
(bad)
and
lods
js
xor
sbb
sti
(bad)
jl
inc
js
xchg
or
jecxz
mov
nop
inc
or
xor
inc
push
icebp
icebp
rol
xchg
mov
inc
jo
xor
movs
mov
rol
xchg
jp
in
sbb
pushf
pop
jae
mov
jl
mov
popa
ror
xchg
aas
in
mov
nop
push
rol
int
xchg
enter
js
pop
in
add
mov
mov
mov
or
mov
mov
and
add
and
pop
cmc
mov
xchg
repz
pop
push
out
ins
cmp
add
mov
xor
fisttp
cmp
xchg
adc
jp
lods
les
xor
ret
sub
in
dec
ret
xor
es
or
jbe
es
pop
test
push
add
aaa
mov
pop
not
retf
leave
fnstsw
mov
cmps
mov
xor
xor
mov
mov
cli
sahf
dec
addr16
mov
repz
push
lea
or
ficom
test
push
mov
retf
push
stos
in
test
loope
jb
mov
ins
and
es
cmp
in
cmp
or
mov
ins
sbb
jl
into
cmp
mov
or
es
rdmsr
inc
imul
xchg
stos
mov
adc
ja
dec
or
iret
psllw
cmp
sub
jecxz
fs
es
ins
mov
pop
sub
mov
pop
scas
sti
fs
or
cmp
test
jecxz
test
hlt
mov
sbb
call
out
out
mov
pushf
add
inc
add
ja
jb
mov
(bad)
xor
push
in
mov
std
adc
xor
mov
cdq
add
sub
jns
repz
push
int
jl
inc
sub
and
xor
xor
and
lahf
popa
or
les
test
outs
hlt
int
or
stos
pop
dec
add
inc
add
add
or
repz
sub
pop
inc
fnstsw
mov
sbb
pop
cwde
fs
fidivr
pop
(bad)
ror
xlat
ins
xchg
test
rcr
inc
adc
mov
add
xor
inc
imul
loop
xchg
inc
push
jmp
lods
std
xor
fadd
ret
inc
out
fwait
pop
mov
cmp
mov
int
and
leave
call
push
push
aas
sub
popf
pop
cmp
xchg
test
pop
ins
call
adc
xlat
jbe
repnz
cld
sub
adc
dec
movs
test
adc
push
xchg
add
out
xor
dec
popf
sub
mov
ret
mov
push
cs
fnsave
clc
scas
das
ret
and
xchg
dec
pop
stc
fwait
adc
push
pop
mov
rcl
dec
(bad)
push
retf
and
sbb
outs
adc
mov
or
jmp
(bad)
jbe
and
push
ins
sbb
lock
ss
jb
aam
sub
mov
push
mov
fwait
std
stos
add
movs
loop
loope
nop
stos
aaa
jns
jno
sub
jno
xor
cmc
sub
lock
push
mov
gs
adc
dec
into
out
pop
loop
loope
jo
repnz
pop
mov
retf
into
outs
and
popf
(bad)
sbb
fist
and
movs
mov
loope
hlt
call
ret
cmp
xchg
push
mov
test
fisttp
fisubr
xchg
and
out
div
clc
and
div
aaa
cli
add
cli
pop
sbb
or
inc
xor
or
lock
stc
pop
pop
mov
imul
push
aas
mov
xchg
and
sahf
mov
aad
dec
movs
call
add
test
jnp
sbb
mov
repz
sub
jmp
sub
pop
rol
dec
jno
hlt
(bad)
movs
scas
rcr
add
inc
add
jbe
fild
dec
ror
push
jns
sub
(bad)
push
into
jns
push
mov
mov
sub
in
and
(bad)
icebp
das
xchg
mov
cmps
dec
scas
sub
aad
add
shl
icebp
xor
jg
loope
jno
(bad)
das
in
dec
repz
aad
mul
int
ins
ja
(bad)
mov
jmp
mov
xor
aad
add
lods
les
push
out
es
fsub
(bad)
cmp
les
(bad)
push
mov
movs
test
test
les
div
pop
scas
mov
xchg
out
fsubr
cmc
dec
push
mov
push
fbld
add
jge
lds
jae
or
fcomi
xlat
add
jb
sub
add
sub
ja
loopne
ss
push
test
shl
out
mov
aam
mov
(bad)
jmp
or
imul
pop
gs
mov
sub
adc
mov
push
out
shr
outs
es
imul
xor
arpl
in
cmps
xor
or
dec
(bad)
adc
fiadd
xor
mov
pop
fcomp
out
push
ror
lahf
clc
mov
idiv
popf
mov
mov
outs
cmp
mov
loop
mov
std
stc
xor
gs
adc
cs
aam
cmp
in
dec
inc
ins
jno
jo
int
nop
and
in
dec
mov
pop
sar
mov
dec
cmp
mov
mov
xor
in
push
pop
mov
jmp
cmp
out
shr
sahf
lods
cmp
sbb
sbb
sbb
in
pop
jne
cwde
xchg
in
(bad)
or
into
in
sti
(bad)
cli
dec
repz
sti
test
je
or
es
stc
dec
push
pop
mov
mov
rcl
add
xchg
inc
jo
and
aad
popa
popa
rol
inc
xor
xchg
je
retf
mov
(bad)
inc
dec
inc
int
push
xor
ins
lock
xor
mov
pop
aaa
pop
adc
mov
push
stos
inc
in
cmp
adc
or
fs
dec
and
les
xchg
ficom
cmps
pop
adc
sbb
sbb
shl
sbb
movs
inc
sbb
sar
xor
and
pusha
xchg
xchg
add
mov
mov
ror
rcr
rol
fs
(bad)
aam
add
test
ret
cli
leave
call
mov
ins
mov
enter
mov
mov
sbb
or
mov
cmp
sahf
adc
pushf
pop
(bad)
sahf
cdq
iret
iret
pushf
add
sbb
pop
(bad)
scas
add
push
jecxz
call
ds
cwde
cmc
rcr
dec
push
rol
stos
neg
out
ret
push
dec
movs
dec
sub
pushf
adc
xor
push
adc
and
xchg
push
mov
xchg
jl
popa
pop
fs
add
jl
in
pop
das
fdivr
or
int3
js
pop
and
jne
addr16
in
ins
popf
xchg
shl
and
xor
add
arpl
ja
cmp
jge
jp
xor
loopne
ja
hlt
clc
sub
jle
xchg
movs
dec
dec
sbb
shl
cmps
ret
ins
mov
dec
adc
xor
stos
xlat
or
inc
sbb
jno
pop
xor
and
nop
adc
pop
pop
xchg
aas
jo
fst
sub
hlt
cmc
dec
pop
xor
pusha
pushf
dec
std
and
cmc
or
jmp
jmp
push
ret
push
test
mov
je
inc
xchg
mov
shl
fucomp
mov
fucomp
jns
ss
mov
cwde
add
sub
enter
adc
or
pop
inc
stos
inc
stc
int
sbb
repnz
or
mov
jge
scas
dec
add
xchg
stc
or
or
test
ss
add
popw
test
cwde
jmp
mov
es
sti
adc
scas
mov
enter
or
sub
sbb
mov
xchg
jb
in
sbb
outs
jge
dec
mov
inc
add
scas
shr
outs
mov
push
push
dec
add
(bad)
cld
nop
mov
mov
mov
pop
ret
inc
push
jmp
pop
sub
pop
js
cdq
retf
gs
and
jecxz
jb
lds
stos
dec
push
push
test
out
pop
inc
push
adc
mov
aad
pop
pusha
mov
mov
and
in
pop
dec
mov
(bad)
inc
pop
cwde
hlt
sub
inc
pop
icebp
mov
cmp
cmp
inc
inc
scas
int
cs
jo
fstp
inc
jge
test
loope
pop
cdq
or
and
repz
fld
and
int3
fldcw
add
inc
or
xor
lods
and
sub
cmp
call
jmp
push
jo
sti
fdivr
aad
xchg
cmp
imul
push
mov
enter
sbb
mov
push
cli
push
xlat
cmp
popa
xchg
mov
sub
xchg
or
es
in
sub
stos
cmps
adc
ret
dec
mov
mov
mov
push
sbb
sbb
icebp
call
aad
stos
enter
stc
sub
out
call
push
dec
in
mov
pushf
pop
(bad)
arpl
(bad)
loope
adc
cmp
mov
dec
(bad)
(bad)
cmc
or
mov
movs
push
pop
leave
cmp
and
test
sub
movs
dec
mov
sbb
imul
xchg
sub
fwait
push
push
jno
add
xor
mov
pusha
jo
xchg
pusha
jo
xor
rol
gs
sbb
adc
outs
jo
fild
mov
aaa
push
nop
push
push
fsubr
mov
movs
dec
xor
je
popa
push
mov
(bad)
xchg
fbld
call
mov
(bad)
test
push
xchg
jle
(bad)
fstp
and
mov
outs
sub
jmp
adc
dec
gs
pop
xchg
(bad)
mov
push
pop
or
ret
mov
test
xchg
add
push
or
std
das
test
add
cli
inc
xchg
aam
push
add
mov
or
clc
push
out
std
inc
push
cwde
cli
repnz
push
loope
es
std
adc
dec
call
pop
push
das
movs
ss
sbb
jnp
sahf
add
cmps
xor
(bad)
pop
cmc
add
push
pop
pop
scas
cmc
push
arpl
jae
add
jae
mov
and
xor
ins
push
ins
aaa
xchg
jle
fnsave
and
xchg
jmp
lods
sbb
ror
mov
fstp
adc
mov
dec
imul
push
test
mov
inc
mov
jmp
aaa
sub
jle
dec
popa
mov
pop
arpl
clc
push
ja
adc
cmp
push
jmp
fmul
mov
adc
adc
push
sbb
cmp
jp
sbb
test
mov
adc
test
cdq
sar
sub
push
popa
sub
xor
std
dec
and
retf
icebp
sub
mov
or
fistp
and
cmc
add
retf
xchg
dec
mov
hlt
mov
cmp
ret
jmp
jl
adc
adc
mov
xchg
and
call
cmps
leave
call
jge
jbe
popf
or
cmovae
mov
or
jne
pop
sbb
fnstcw
popf
dec
movs
adc
sbb
mov
repnz
sub
or
mov
sub
add
inc
xlat
mov
sbb
lods
retf
repnz
jbe
cmp
pusha
fisub
sbb
push
adc
xchg
inc
pop
ror
loopne
add
clc
daa
dec
xor
retf
xchg
shr
add
imul
pushw
cld
inc
push
add
mov
rcl
je
iret
mov
pop
int3
mov
mov
push
sub
add
out
popa
out
jns
pop
jne
fs
shl
lds
pop
dec
ja
(bad)
cdq
das
mov
movs
add
fs
cmp
lds
call
cmp
push
imul
in
movs
xor
loopne
popa
inc
not
imul
mov
sbb
(bad)
adc
sbb
shl
xor
mov
les
pop
cli
mov
jne
sub
fsubr
cmp
mov
sub
cmp
mov
dec
cmp
inc
adc
xor
ins
mov
and
int3
xchg
ror
pop
idiv
adc
int
idiv
adc
retf
mov
adc
ret
adc
mov
adc
into
adc
mov
adc
rcl
cmp
jl
(bad)
int
cmps
and
or
lds
pop
push
mov
jl
(bad)
int
ja
mov
jl
(bad)
int
aaa
dec
stos
lods
sub
vshufps
sub
int
aaa
inc
mov
jl
(bad)
int
mov
lods
stos
sub
lds
ja
scas
stos
jmp
pop
(bad)
jb
stos
mov
retf
and
adc
(bad)
adc
mov
adc
enter
(bad)
jmp
int3
adc
mov
adc
int
idiv
adc
int
idiv
sbb
data16
xchg
pusha
xor
cdq
nop
jg
loope
xor
add
shl
inc
rol
jo
ret
jne
xor
ja
int
push
iret
test
ins
shr
jo
and
ss
loopne
mov
ins
mov
pusha
pop
dec
and
jb
neg
imul
pop
dec
loope
jp
xor
sub
xor
loop
mov
xor
stos
sub
shr
shl
loope
dec
push
lods
add
jmp
jl
mov
mov
pop
push
sbb
(bad)
jmp
pop
dec
xor
or
lods
mov
cmc
out
push
retf
inc
das
xchg
clc
push
mov
or
and
mov
out
or
xor
or
sbb
bound
hlt
cmp
jne
(bad)
loope
mov
jge
or
or
mov
dec
jbe
scas
jne
pop
xchg
ss
inc
ins
sub
push
rcr
sub
movs
in
aad
sub
jae
mov
ja
test
inc
xor
mov
hlt
retf
out
mov
inc
ins
dec
retf
pushf
push
sbb
xor
pop
icebp
test
fldcw
std
sub
inc
inc
enter
repnz
imul
jge
mov
xchg
cmps
dec
ret
test
mov
push
pop
fmul
pop
jmp
push
inc
pop
mov
adc
xor
aad
cmp
popa
jmp
cld
das
push
mov
retf
aaa
in
jo
sub
add
nop
pop
movs
pop
mov
push
in
mov
adc
xchg
loopne
lods
xchg
nop
xchg
dec
push
dec
pushf
lods
sbb
(bad)
mov
call
push
xchg
adc
mov
dec
call
mov
stc
movlps
mov
loop
imul
push
and
jmp
cmp
add
test
mov
push
jmp
fisttp
outs
mov
inc
cmps
cmp
shl
mov
jmp
retf
jl
in
dec
lods
push
adc
xchg
push
pop
retf
mov
test
or
lods
adc
jmp
dec
loopne
ror
f2xm1
or
mov
call
(bad)
sub
repnz
out
sub
retf
mov
sub
push
xchg
lods
adc
adc
jae
shr
daa
gs
enter
xor
xchg
add
mov
(bad)
adc
sub
test
xor
sbb
repz
ins
sub
xor
xchg
sbb
dec
pop
neg
mov
sub
push
xchg
jnp
jp
xor
inc
pop
push
fld
fs
shr
and
add
pop
aad
repnz
mov
imul
and
jg
mov
inc
pusha
shl
inc
rcl
jo
lds
jae
retf
test
retf
outs
int3
mov
rcl
push
rol
dec
pop
retf
jnp
imul
test
inc
into
sub
das
lock
mov
cmp
paddb
popa
jge
out
shl
out
inc
xchg
call
xchg
mov
into
cmp
add
jns
mov
adc
pop
sub
ficom
push
add
in
cmc
sub
fist
je
pusha
(bad)
lahf
xor
mov
test
in
lock
xchg
stc
inc
ror
mov
inc
sub
test
mov
pop
test
mov
shl
xchg
jbe
sub
loope
sbb
jle
fcmovnbe
dec
jae
xor
adc
pop
ds
repnz
cwde
jecxz
pushf
repnz
movs
repnz
fnstenv
adc
retf
xchg
ins
ds
test
mov
mov
mov
call
pop
push
pop
lods
dec
jmp
in
js
mov
aas
test
pop
outs
mov
xchg
mov
mov
test
call
add
fisubr
cmp
jo
inc
cld
inc
fld
in
in
add
cmp
xchg
into
push
pop
leave
data16
test
je
sub
stos
js
xor
movs
cli
jg
data16
sbb
mov
(bad)
imul
std
arpl
dec
mov
mov
sub
mov
test
rol
xor
(bad)
repz
jg
push
das
xchg
std
jecxz
sbb
rcl
sahf
push
cmovle
movaps
jecxz
push
(bad)
sahf
pusha
ss
shr
mov
inc
pop
or
(bad)
xor
add
push
inc
lds
cld
fdivr
not
fist
and
dec
cmp
lahf
xor
movs
jbe
imul
sub
mov
sub
mov
jl
popf
inc
repz
lahf
xchg
pop
out
adc
ss
jno
in
or
adc
test
cli
cmc
or
test
lds
mov
mov
ss
sbb
xchg
pop
repz
daa
inc
out
pop
popa
lods
aad
sbb
and
add
mov
popa
arpl
ins
ror
pop
adc
xchg
push
inc
imul
xchg
add
add
rcr
aaa
and
pop
out
mov
std
shl
adc
imul
pop
jmp
dec
jb
test
push
rcl
adc
mov
pusha
pop
cmc
scas
stos
and
jo
jg
loop
mov
xor
dec
xor
and
jg
loopne
cmp
jge
cmp
cmp
cmp
jmp
mov
jmp
aam
fsubr
mov
fwait
sbb
(bad)
and
mul
cmps
mov
sub
fmul
xchg
out
mov
dec
and
enter
fld
fwait
jg
aam
js
fimul
jno
sub
mov
fs
sub
inc
int3
push
fdivr
cmps
in
mov
lds
fld
and
loope
nop
sub
fdivr
imul
mov
lds
cmp
rol
and
call
xchg
mov
pop
fistp
rcr
dec
and
jl
cmp
add
cmp
push
retf
shr
(bad)
loope
mov
mov
pusha
mov
adc
dec
js
imul
xchg
sub
pop
adc
mov
loopne
and
add
outs
std
or
sbb
pop
das
adc
cwde
inc
popa
(bad)
loope
lea
adc
nop
inc
pop
or
push
popa
imul
sti
jmp
cmp
adc
jne
call
sar
xor
mov
and
mov
xor
gs
arpl
bound
mov
jb
leave
leave
jne
add
cmp
jo
cmp
ins
mov
popf
jne
pop
lods
test
xor
mov
xchg
mov
sub
pop
mov
or
in
je
cmp
lahf
repz
pop
int3
sub
sahf
ds
mov
xchg
xor
aaa
sbb
shr
popa
sbb
test
icebp
xor
push
in
icebp
sub
sbb
push
push
xor
mov
mov
jg
xchg
xchg
inc
jo
mov
push
loope
pusha
inc
rcl
jo
aad
jo
xlat
xchg
arpl
xchg
jno
retf
pusha
xor
ins
lock
shl
test
xor
sbb
push
ret
frstor
push
pop
(bad)
mov
popf
clc
lods
add
fild
mov
add
sbb
in
push
xor
pusha
jmp
in
inc
sti
dec
xor
(bad)
adc
leave
imul
jge
ret
cmc
loopne
mov
xor
mov
jns
push
shr
or
aam
xchg
inc
or
adc
xchg
shl
dec
fld
push
push
popa
shl
cmp
scas
into
mov
pop
push
inc
icebp
jg
call
cmp
cmp
in
scas
(bad)
call
jmp
dec
les
mov
and
push
inc
mov
xor
sar
in
es
repnz
popa
aam
(bad)
movs
push
xor
add
mov
daa
test
pop
mov
rcl
inc
loope
push
mov
and
mov
sbb
call
inc
add
stos
scas
ins
jecxz
inc
nop
shl
stos
repnz
clc
enter
inc
dec
cmc
cmp
shl
aam
call
test
bound
fdivr
jae
xor
retf
bound
push
jle
or
mov
mov
jmp
mul
jge
xchg
out
inc
xchg
loope
fistp
mov
add
push
(bad)
loopne
lock
add
jp
dec
or
or
fcmovb
pusha
pop
xchg
cwde
add
in
cmp
in
loopne
add
sbb
and
inc
daa
test
xor
mov
fcomp
loop
mov
and
xchg
bound
cwde
push
stc
ret
inc
add
scas
imul
in
push
dec
bound
jl
es
add
push
outs
xchg
mov
in
xchg
xlat
icebp
add
addr16
add
test
jb
out
jno
jg
add
dec
loopne
fstp
push
(bad)
xchg
or
das
daa
fs
stos
push
dec
or
rcr
and
enter
rcl
dec
xchg
inc
dec
retf
fcmove
jmp
retf
and
aaa
push
(bad)
mov
loopne
mov
clc
or
shl
mov
adc
shl
aaa
loopne
dec
push
mov
mov
aam
or
inc
xor
add
fs
imul
sub
(bad)
arpl
jmp
fidivr
ret
stc
out
xor
add
or
out
lds
mov
rcr
xor
sbb
stos
lods
pusha
nop
xchg
xor
fidivr
xchg
push
add
inc
out
adc
or
push
loop
in
push
add
or
and
lock
lods
icebp
and
hlt
cmp
push
(bad)
jecxz
push
cmp
xor
(bad)
push
inc
test
sbb
out
pop
out
sub
nop
fs
das
mov
aam
in
leave
fsub
ss
inc
ret
mov
jae
push
sti
test
xchg
ins
push
in
sbb
lock
jns
adc
dec
outs
xor
jg
cmp
inc
out
pusha
lods
mov
inc
xlat
cld
mov
sub
aam
sub
or
sbb
ins
and
push
xchg
or
inc
shr
lods
push
mov
xor
repnz
test
jo
mov
repz
and
inc
ret
call
add
mov
jmp
add
daa
adc
xchg
dec
sub
or
cmps
mov
cdq
cdq
adc
in
dec
jmp
shl
clc
adc
sbb
stos
jmp
cld
push
ds
div
mov
push
sbb
cdq
lock
add
and
xchg
mov
cmc
cmp
pusha
adc
nop
add
jnp
sub
test
or
xchg
push
repz
cmp
fcomi
sbb
and
sub
enter
ja
out
std
call
test
dec
sahf
stc
xor
hlt
and
and
not
jo
ret
jmp
sbb
bnd
in
cmp
popa
mov
ret
xchg
mov
inc
ret
movs
ins
push
(bad)
mov
popf
push
nop
and
xchg
jp
pushf
xchg
retf
mov
sub
xor
jl
or
ds
mov
pop
jge
aas
mov
push
sub
push
mov
mov
and
sub
es
movs
sub
scas
mov
sub
hlt
xchg
je
mov
nop
dec
cmp
ins
lock
je
rol
dec
xchg
pusha
rol
push
inc
loope
push
push
loope
push
inc
icebp
shl
inc
add
adc
popa
loope
adc
shl
inc
adc
shl
and
mov
rcl
add
icebp
mov
rcl
pushf
and
shl
and
add
mov
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
mov
jo
lock
jo
shl
add
and
rcl
adc
and
jg
jno
push
jo
xchg
pusha
pusha
rcl
jo
xchg
inc
xor
adc
shl
outs
int
mov
push
pop
pop
or
lods
adc
fisubr
sub
cs
jge
rcr
jg
repnz
pushf
adc
xor
jne
xor
je
ret
fwait
push
xchg
aaa
enter
call
aam
mov
mov
xlat
das
daa
adc
mov
pop
mov
jae
sar
xor
aaa
lods
scas
or
inc
dec
or
cmc
les
sub
pop
push
movs
scas
lds
cmc
ins
ins
(bad)
and
cli
(bad)
outs
cmp
sub
inc
jle
mov
ins
and
mov
sub
jg
or
lods
fdivr
call
push
cmp
push
scas
jae
int
xor
pop
mov
dec
vmaxss
xchg
mov
mov
imul
cmps
fisub
jle
fcomip
sti
xchg
in
lods
push
loopne
add
cmp
cli
out
or
cmp
sbb
dec
lahf
jnp
push
and
push
push
mov
cmp
pop
test
xor
scas
xchg
ins
and
and
sub
call
cli
mov
mov
xor
shr
out
repnz
pop
mov
mov
cmp
(bad)
idiv
xchg
test
ret
dec
lahf
mov
lea
ja
in
inc
xchg
jbe
out
push
add
retf
mov
mov
fldenv
cmc
fsub
cmps
dec
cs
call
pusha
stos
or
call
aas
lahf
add
sar
jecxz
(bad)
out
mov
lahf
outs
cwde
xchg
in
inc
jns
mov
mov
xchg
or
popa
imul
and
xchg
pusha
pusha
inc
dec
fs
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
add
add
add
jno
das
and
xchg
push
push
das
pusha
inc
rcl
mov
cwde
shl
xor
movs
ffreep
pop
test
mov
int3
lods
xor
ins
loopne
mov
loopne
or
(bad)
mov
mov
mov
scas
mov
stos
inc
gs
lahf
mov
xor
nop
pop
imul
stos
adc
push
mov
adc
sbb
and
lods
mov
mov
jmp
data16
pop
movs
cwde
mov
pushw
pop
cmp
mov
mov
pop
mov
add
adc
mov
pop
(bad)
push
addr16
lea
push
jo
lds
daa
dec
ret
sub
pop
sti
cmps
mov
(bad)
adc
sbb
fwait
lea
adc
scas
in
leave
hlt
jb
xchg
pop
push
push
add
sbb
es
mov
and
iret
les
and
pop
dec
ins
stos
pop
into
mov
ret
cmp
imul
cli
adc
sub
jne
ja
mov
lods
sub
cmp
pop
test
xor
scas
xchg
ins
and
mov
les
nop
or
xchg
lods
stc
xchg
mov
cld
mov
pop
jns
sub
xlat
jo
aas
pop
call
sub
push
outs
xor
fdivr
add
jecxz
or
push
idiv
cdq
xor
les
mov
mov
cmp
jo
mov
cwde
lods
inc
jmp
popa
sbb
jno
in
ret
sbb
mov
test
dec
add
ins
stos
outs
pop
loope
mov
sbb
xchg
arpl
dec
je
outs
and
retf
stos
sbb
dec
iret
(bad)
mov
outs
jo
xchg
xor
and
icebp
xchg
xor
xchg
add
shl
add
mov
adc
add
shl
add
loope
xchg
adc
add
adc
enter
loope
or
lea
iret
xchg
call
push
iret
jmp
enter
xor
dec
aad
sbb
cmp
mov
fistp
cmp
jmp
outs
sar
or
and
adc
call
xchg
retf
loopne
outs
movs
push
mov
lock
pop
scas
rcl
mov
sbb
cmps
xchg
call
rcl
icebp
xchg
lahf
iret
sub
dec
shl
shl
fst
xor
data16
out
cmc
mov
jecxz
fbstp
pushf
cmp
xor
and
retf
loopne
jle
mov
xchg
xchg
out
cmc
push
inc
push
sbb
xchg
push
(bad)
call
daa
mov
and
add
add
push
enter
ror
dec
ss
sub
pop
push
loopne
push
mov
and
test
(bad)
in
xlat
or
pusha
or
shr
push
loop
and
repnz
outs
stos
and
bound
xchg
(bad)
fcomi
push
fnsave
cmc
call
je
xor
mov
jp
push
cmps
xchg
mov
rcl
arpl
push
push
pop
jl
xor
sbb
or
icebp
jmp
nop
xlat
mov
in
push
or
daa
icebp
push
pop
cmps
retf
mov
sbb
jl
add
xor
push
das
pop
mov
shl
iret
xor
fidiv
out
inc
xor
rcl
pop
mov
stos
cmp
dec
clc
(bad)
aas
push
ss
add
out
and
xchg
xchg
push
pop
mov
mov
inc
test
adc
(bad)
and
movs
push
pop
jecxz
je
mov
inc
inc
test
push
popa
call
repnz
mov
xor
inc
inc
test
adc
(bad)
and
movs
push
pop
jecxz
je
mov
inc
inc
test
xchg
arpl
(bad)
xor
ins
sahf
out
or
xchg
inc
adc
mov
mov
ret
pop
lds
cmp
push
jge
sub
mov
iret
cli
and
adc
aad
xchg
cmps
(bad)
cmp
ins
call
fwait
xchg
fwait
ins
inc
adc
xchg
mov
imul
dec
sub
sti
fnstsw
mov
inc
dec
stc
fsubr
push
dec
push
dec
call
sub
(bad)
pop
mov
(bad)
vpshlw
lods
inc
fcomi
jns
xchg
sti
xor
add
cmp
in
ins
inc
adc
xchg
mov
jnp
lds
loopne
jns
hlt
cmp
push
call
mov
and
sbb
mov
lahf
xchg
movs
pop
jns
jae
and
sahf
cmp
jns
adc
mov
jmp
push
jbe
jp
or
(bad)
jmp
sub
outs
push
gs
ins
inc
popf
sti
adc
js
inc
push
and
inc
call
arpl
ds
cmp
aaa
add
mov
das
inc
aas
xor
ins
pop
mov
sbb
push
call
repnz
in
mov
sar
xchg
rcr
jecxz
push
dec
imul
neg
xor
nop
mov
adc
in
sbb
cmp
out
mov
add
outs
imul
lds
dec
fs
stc
xchg
jmp
dec
arpl
adc
or
inc
dec
ret
push
pusha
in
mov
fbld
jecxz
retf
push
cs
add
sub
mov
push
cmc
inc
xor
nop
add
ret
adc
pop
mov
pushf
inc
sbb
mov
pop
mov
lods
or
push
jp
imul
xor
dec
pop
inc
add
cmp
cmps
sti
add
loopne
mov
jo
loope
pusha
pusha
rcl
xor
shl
and
shl
(bad)
test
push
cli
xor
dec
inc
(bad)
mov
outs
int3
test
rcl
inc
rol
xor
fs
enter
pop
jecxz
cmp
push
(bad)
out
cmp
inc
repz
mov
jbe
push
xchg
adc
jg
push
cmp
jmp
dec
mov
rcr
xchg
leave
sub
mov
inc
int3
dec
fsub
cwde
mov
movs
xor
ret
push
inc
sub
xchg
outs
jne
jg
dec
cmp
xchg
movs
movs
pop
add
sub
xor
or
cmp
les
(bad)
pop
in
loop
or
int
scas
xchg
adc
aaa
retf
mov
das
mov
sub
sbb
sbb
xchg
ins
push
jo
(bad)
jmp
cmp
outs
xlat
jne
inc
pop
push
loope
loop
jecxz
mov
mov
es
jmp
and
call
gs
xlat
dec
pop
int3
rcr
cld
push
push
xor
mov
js
add
or
sub
mov
dec
arpl
div
push
rcl
loopne
outs
mov
push
jae
xchg
xor
data16
sbb
daa
(bad)
cmp
fnstenv
aam
push
jmp
fbstp
cmp
fs
jno
sbb
jmp
xchg
and
add
cmp
fisubr
push
sahf
fild
cmp
sbb
jns
pop
push
int
(bad)
xor
or
sbb
push
cmp
mov
scas
push
sar
shl
jae
into
push
out
mov
inc
movs
pop
cld
and
jge
(bad)
push
cmps
aas
xor
daa
inc
rcr
out
jl
or
rol
popa
lahf
push
call
fst
xchg
fwait
aam
jmp
not
pop
adc
sbb
cld
mov
push
and
sub
sub
jmp
push
enter
loope
mov
outs
out
mov
mov
dec
call
dec
sub
popf
(bad)
fimul
jbe
jle
push
clc
(bad)
stos
call
cmp
cdq
sub
(bad)
fnstcw
pop
and
or
rcr
push
xor
lods
push
jl
dec
and
mov
rcl
ins
aad
xchg
push
xchg
lods
mov
push
js
push
ja
sbb
jp
jl
and
push
mov
mov
or
xor
div
(bad)
outs
mov
shr
fmul
out
sbb
sbb
pop
stc
adc
ja
loop
cli
inc
ins
aad
repz
xchg
out
push
stc
sbb
xlat
push
stc
mov
xor
mov
jb
ret
cmp
or
repz
adc
jecxz
cmp
and
inc
inc
inc
out
inc
leave
cmp
(bad)
push
lds
stc
jae
push
std
repz
fadd
jmp
arpl
sub
(bad)
repnz
shl
pop
add
mov
adc
loopne
gs
inc
lods
lds
push
xchg
in
popa
mov
imul
jecxz
shl
push
inc
or
retf
repz
xchg
out
xor
test
popa
push
mov
pop
jge
in
clc
or
pop
ja
test
xchg
mov
repz
stc
das
repnz
or
push
in
repnz
add
ffree
test
cdq
lods
(bad)
jae
xchg
cmps
mov
or
pop
cwde
pop
pop
cmc
daa
xlat
xor
retf
pop
jmp
in
inc
rcr
sahf
in
clc
or
pop
ja
test
xchg
mov
repz
stc
das
repnz
or
push
in
repnz
add
ffree
test
cdq
lods
(bad)
jae
fwait
cmps
xlat
mov
test
out
adc
push
out
push
fmul
or
cmps
mov
jnp
pop
retf
repnz
or
js
add
dec
dec
aaa
push
push
clc
(bad)
pusha
and
add
je
push
mov
pop
xchg
push
mov
lahf
mov
xor
mov
and
mov
test
jne
pop
inc
or
sbb
push
xchg
hlt
dec
xor
stc
pushf
inc
jg
xchg
push
ret
cld
fisttp
in
sub
pop
jl
sti
ret
adc
dec
xor
movs
dec
mov
cmp
mov
jb
add
add
hlt
add
dec
dec
aaa
push
hlt
retf
ss
add
js
out
je
xchg
repnz
inc
hlt
jnp
inc
adc
ds
xlat
mov
loope
jnp
push
call
and
adc
shl
xor
scas
lea
fisttp
add
mov
cli
or
add
dec
(bad)
in
cmp
ins
sub
jecxz
jns
pop
push
xchg
fstp
sbb
lods
mov
push
hlt
pop
hlt
mov
shr
xchg
jns
dec
xchg
mov
and
inc
das
into
cmc
mov
mov
xchg
jle
sub
inc
bound
cld
seto
imul
push
(bad)
movs
cmp
pop
loop
and
in
cmps
popf
(bad)
sub
cmp
mov
jb
aam
add
inc
add
sbb
imul
sub
jp
adc
popa
mov
mov
ja
les
dec
or
mov
inc
xchg
cmc
inc
aad
shr
mov
or
bound
es
mov
mov
mov
push
mov
pop
dec
dec
(bad)
out
les
int3
clc
enter
stc
inc
cld
add
inc
imul
mov
ins
mov
xchg
xchg
and
mov
jmp
mov
xor
movs
into
ds
hlt
mov
shr
xchg
imul
and
mov
inc
outs
sbb
aam
push
mov
scas
mov
dec
sub
sub
jmp
and
stos
add
test
cwde
dec
call
int
add
cmp
jb
push
xor
push
in
inc
dec
imul
mov
push
or
ret
sbb
imul
sbb
jae
movs
repnz
xchg
retf
push
or
xor
xchg
arpl
mov
pusha
push
icebp
and
rol
push
hlt
and
jecxz
jne
not
arpl
xchg
jg
out
gs
xor
jge
shl
xor
(bad)
xor
xor
add
call
fstp
scas
jecxz
in
outs
inc
call
pop
sahf
mov
jecxz
call
push
add
cmps
dec
bnd
(bad)
and
cmp
mov
or
add
jns
inc
iret
jb
inc
ret
imul
arpl
(bad)
pop
mov
mov
cmp
in
repnz
ficom
scas
cmps
ins
adc
xchg
cmp
jmp
loop
icebp
xchg
inc
outs
mov
idiv
shr
aaa
loop
inc
push
sub
jmp
inc
imul
xchg
fldenv
call
jne
add
ret
cmp
mov
(bad)
popf
mov
data16
push
add
pop
sub
pop
mov
jg
xchg
and
cmp
push
lods
daa
retf
mov
push
lds
leave
test
push
sbb
jno
inc
out
cmp
cmp
test
dec
cdq
inc
std
jp
add
rcl
push
add
mov
xchg
ss
mov
std
popf
mov
retw
sbb
jne
movs
mov
dec
je
inc
jmp
lea
mov
stos
add
push
cli
sbb
jge
test
das
add
adc
jns
inc
push
inc
inc
jmp
fild
add
das
sub
leave
add
pushf
and
mov
jmp
popa
adc
push
div
retf
loope
aas
sbb
enter
fs
jecxz
in
setge
jp
sub
iret
addr16
mov
retf
in
lds
or
mov
adc
ja
movs
xor
neg
sbb
sub
iret
test
jg
adc
push
mov
fld
ds
cmps
mov
inc
das
repz
push
xchg
scas
push
push
jecxz
ds
cmps
mov
inc
das
repz
pop
and
sbb
cld
pop
jmp
pop
mov
pop
jp
icebp
popa
mov
rcl
jmp
pop
mov
pop
jp
xchg
outs
mov
int
mov
mov
inc
cld
pop
test
lds
icebp
xor
stos
ins
sbb
push
shl
out
mov
mov
fnstsw
adc
mov
mov
inc
cld
pop
test
lds
icebp
xor
stos
ins
sbb
push
shl
out
pop
fst
fstp
fstp
int
(bad)
adc
add
ja
or
aaa
test
sbb
or
mov
mov
push
repz
mov
sbb
je
mov
sub
sub
sbb
loopne
jnp
xchg
sbb
je
mov
xlat
and
shl
adc
add
inc
aaa
add
inc
aaa
add
inc
aaa
add
dec
pop
out
das
stos
jno
out
push
popa
mov
out
mov
jne
pop
sub
les
hlt
mov
aam
ror
xor
dec
pop
retf
jne
cmp
rcl
xor
jbe
les
sbb
push
sbb
dec
sahf
fisub
inc
and
call
xchg
push
fsub
sub
loopne
(bad)
mov
pusha
xor
adc
imul
adc
cmp
(bad)
or
lahf
mov
imul
ds
dec
scas
not
retf
pop
jns
popa
out
ins
xor
out
rol
or
sbb
cmp
std
clc
or
enter
ins
push
aam
stos
xchg
cld
xor
fmul
and
repnz
aas
inc
and
mov
int
jnp
or
sbb
or
loop
outs
sti
sub
inc
imul
push
hlt
inc
in
mov
movs
xor
arpl
iret
xbegin
sub
call
mov
add
retf
call
movs
call
jo
sbb
inc
pop
bound
xchg
jp
mov
push
xchg
or
not
push
xor
or
dec
icebp
dec
inc
mov
xor
shl
or
inc
adc
retf
or
mov
fwait
pop
push
or
inc
jo
xor
adc
xchg
push
jo
xor
lock
rol
aam
dec
addr16
test
sar
fs
fist
loop
push
xor
(bad)
push
js
xlat
call
pusha
rcl
add
test
and
lgdtd
out
xchg
in
adc
pop
call
in
cmp
test
adc
enter
imul
scas
and
shufps
xchg
xchg
add
sub
push
push
mov
mov
cmp
cdq
lods
out
mov
add
int
add
pushf
xor
ror
ror
leave
shl
adc
leave
xor
addr16
jcxz
inc
xor
jns
mov
scas
xchg
shr
xchg
add
lea
sti
jmp
(bad)
mov
imul
xor
div
or
iret
sub
retf
xchg
mov
adc
jle
pop
daa
es
in
sub
in
mov
mov
(bad)
push
ror
iret
cli
cmp
repnz
into
mov
fadd
inc
xor
sub
add
call
inc
mov
xchg
jle
fisttp
out
aam
and
xchg
and
push
(bad)
fwait
ja
inc
jne
adc
adc
xor
dec
stc
inc
xor
mov
or
mov
dec
out
mov
jo
xchg
fwait
mov
(bad)
push
and
pop
push
mov
loope
sbb
add
fucompp
jmp
retf
out
fwait
lea
dec
inc
dec
xor
loop
nop
pushf
das
lea
das
inc
and
pop
xchg
inc
std
push
out
mov
(bad)
stc
lods
rol
jns
mov
aam
mov
mov
in
movs
call
or
inc
rcr
out
cdq
xor
mov
sbb
push
inc
call
pop
sbb
enter
sbb
loope
push
call
dec
pop
test
(bad)
push
push
data16
dec
push
jle
icebp
or
sti
imul
(bad)
aad
dec
test
inc
mov
push
sub
dec
adc
cmp
jp
sbb
std
(bad)
mov
daa
data16
jae
setae
and
in
mov
jne
adc
jne
call
aaa
test
test
rcl
sbb
iret
sbb
or
aas
pop
(bad)
test
lods
popa
add
gs
xchg
aam
jb
into
inc
jp
cmps
add
jae
fwait
sub
call
cmps
int3
dec
enter
dec
repnz
inc
inc
mov
inc
out
push
mov
stc
movs
ror
mov
adc
pop
cmp
xchg
imul
dec
stos
xchg
cmp
mov
retf
and
loop
xchg
mov
push
xchg
faddp
mov
xchg
rcl
pop
(bad)
leave
inc
add
jne
pop
mov
and
not
cs
lods
mov
xor
mov
or
xchg
clc
inc
push
or
xor
dec
inc
out
push
ins
add
popf
movs
jp
out
jo
ror
cmp
cmp
mov
repnz
add
adc
jg
and
js
shl
inc
bound
fs
xlat
add
add
xor
popf
es
jne
inc
sbb
dec
scas
sbb
movs
pop
sti
repz
test
in
xchg
aad
pop
or
stos
add
push
retf
mul
jmp
adc
scas
in
movs
pop
mov
movs
add
mov
or
(bad)
jo
mov
push
sub
cmp
pop
xchg
lods
inc
movs
je
movs
xchg
loope
out
inc
movs
sti
lahf
movs
push
add
sub
sub
mov
call
lods
aam
jb
push
add
dec
ror
test
or
dec
scas
pop
and
in
cmp
jb
pop
ret
sub
xchg
fcom
mov
das
cmp
std
loopne
sbb
add
movs
sub
mov
inc
adc
icebp
and
scas
jle
sbb
iret
jmp
popf
or
stc
adc
dec
cmp
out
jo
call
xchg
data16
je
inc
retf
sub
test
push
fild
inc
int
out
xchg
aad
push
or
test
mov
push
mov
sbb
loop
jmp
jb
mov
mov
lods
push
xchg
repnz
mov
lock
and
gs
push
sub
mov
xor
shr
inc
mov
sti
repz
inc
int
out
xchg
aad
push
or
test
mov
push
mov
sbb
loop
jmp
jb
mov
mov
scas
sar
push
xchg
or
push
cdq
add
and
and
mov
xor
mov
out
cs
cdq
sub
xchg
or
inc
inc
stos
(bad)
dec
add
jno
loope
cmp
daa
cmp
xchg
in
jb
fidiv
mov
sbb
jecxz
xchg
scas
xchg
adc
or
int3
push
jns
hlt
fbstp
and
xchg
mov
addr16
jbe
(bad)
mov
mov
in
jno
mov
loop
out
addr16
pop
sti
mov
xor
add
push
movs
ins
mov
call
pop
xchg
pop
jae
stos
and
pop
sbb
mov
mov
pusha
xor
test
inc
push
ins
xchg
xor
mov
and
imul
jbe
sbb
jmp
loop
in
dec
push
jmp
sbb
inc
and
mov
sbb
add
mov
sbb
mov
aad
mov
mov
loopne
inc
shl
(bad)
rol
cdq
scas
loope
hlt
lahf
sbb
xchg
adc
loopne
xchg
scas
and
push
inc
sub
scas
scas
jl
(bad)
dec
push
js
sbb
aam
mov
pop
sbb
out
mov
sub
xchg
push
or
fsubr
mov
dec
inc
xchg
fdiv
clc
jmp
ret
das
test
jne
je
std
xchg
fstp
mov
out
mov
repnz
test
jbe
sbb
leave
je
fs
inc
div
mov
xor
test
cmp
adc
sbb
inc
xchg
imul
or
(bad)
jae
pop
xchg
add
into
cwde
add
scas
mov
mov
(bad)
stc
lods
rol
jmp
cmp
sti
mov
outs
mov
test
dec
out
ins
cmp
sbb
sbb
fisub
xor
sbb
fwait
jae
cwde
inc
leave
scas
lds
push
and
aas
ret
movs
mov
mov
sbb
movs
or
ja
popa
lds
jp
sub
in
sub
pop
xchg
out
push
adc
mov
pop
cmps
and
jb
call
push
cmp
add
mov
loop
cmp
cwde
xchg
stos
jle
jg
xchg
and
mov
mov
push
or
(bad)
xchg
aam
cmp
push
or
sar
aam
sub
and
aad
cli
sbb
scas
adc
jnp
mov
inc
xor
sub
sti
cld
arpl
addr16
pop
lods
mov
or
cwde
and
je
pop
aam
pop
stc
sub
xor
or
or
push
xchg
mov
xor
scas
sbb
cmp
jnp
xor
pop
sahf
(bad)
ss
loop
xchg
push
dec
shr
jne
dec
ins
int
gs
ins
(bad)
popa
or
(bad)
mov
add
inc
cli
add
or
cmp
jne
vpmovsxbw
in
and
stc
sub
es
xchg
inc
loop
lahf
push
fisttp
push
push
dec
add
xchg
dec
clc
xor
dec
icebp
sub
stc
or
or
pop
jmp
call
icebp
adc
push
add
add
jl
rcl
inc
rol
pusha
jo
xor
fld
jl
int3
xchg
xchg
outs
fcomp
nop
arpl
xor
pop
mov
dec
xor
iret
nop
mov
pushf
xchg
test
add
retf
mov
adc
xchg
jle
lea
popa
js
mov
inc
jbe
(bad)
jbe
bound
nop
pop
dec
fisttp
(bad)
js
dec
pusha
ret
xchg
inc
movs
pop
popa
jle
cld
jnp
and
test
loope
into
push
loop
jecxz
mov
xchg
xor
or
je
xchg
rcr
sbb
test
push
inc
mov
mov
jg
sbb
xchg
or
clc
push
out
or
imul
movsx
rcr
ja
shl
dec
sti
and
nop
(bad)
repz
sbb
call
add
les
pusha
arpl
sub
push
fldpi
or
mov
mov
pop
mov
jge
adc
leave
and
ror
xor
mov
mov
out
js
jge
(bad)
fstp
mov
pop
jbe
mov
not
jp
fidiv
bound
mov
lahf
les
lea
push
xlat
xchg
imul
das
xor
retf
mov
call
stos
rol
push
dec
clc
push
mov
clc
sbb
mov
mov
pop
rcr
jecxz
lea
enter
stos
pop
jne
jbe
xchg
xlat
popf
mov
xchg
popf
jge
sar
outs
sbb
ins
je
and
push
daa
inc
push
repnz
sbb
pop
nop
xchg
hlt
push
movs
mul
dec
push
aam
push
lods
dec
push
(bad)
jle
inc
pop
(bad)
mov
and
jo
mov
ror
mov
dec
ficom
jmp
and
xor
in
pusha
mov
ja
jns
pop
imul
mov
pop
mov
mov
jecxz
xor
data16
test
(bad)
mov
push
loopne
add
rcr
mov
xchg
push
push
ja
pop
jae
xor
push
dec
cmp
adc
jo
push
xor
mov
icebp
dec
movs
dec
loope
jbe
push
pop
push
mov
xor
sbb
in
dec
push
mov
inc
and
les
lods
hlt
ret
jne
mov
mov
dec
jo
icebp
shl
arpl
jbe
call
sbb
dec
cmp
pushf
repnz
int3
mov
repnz
(bad)
jbe
cmp
sub
sbb
int3
fnstcw
shr
(bad)
or
in
in
and
ffreep
leave
sbb
test
(bad)
(bad)
jl
pop
adc
lahf
cmp
and
sbb
sub
or
cmp
push
fs
pop
aam
and
xchg
test
jae
pop
mov
inc
inc
(bad)
xor
sbb
arpl
fsubr
mov
inc
and
sbb
sub
or
cmp
push
outs
xchg
sub
das
jne
mul
push
(bad)
fcomp
mov
jb
mov
cmps
push
lods
inc
sbb
pop
and
mov
mov
fldz
(bad)
cld
cmc
shl
lods
xchg
sbb
out
push
rcr
out
ss
add
test
(bad)
addr16
push
icebp
add
or
sbb
shl
or
enter
mov
or
in
mov
out
popf
repz
movs
popa
clc
inc
sub
cdq
lahf
jo
in
loop
call
dec
ins
mov
add
icebp
cdq
sub
xchg
jns
mov
push
sub
mov
push
jmp
mov
pop
in
int3
mov
add
retf
add
(bad)
mov
sub
movs
repz
push
push
inc
repnz
arpl
in
loopne
dec
dec
adc
iret
cmps
loop
sbb
jmp
and
push
out
popa
push
and
cmps
rcl
sbb
imul
js
popa
jns
xchg
popa
pop
rcr
test
or
mov
cmps
push
push
pop
ds
stc
test
push
and
iret
sahf
fs
push
fcom
adc
dec
rcr
mov
shl
xlat
out
mov
ret
jo
and
fs
je
into
push
enter
sub
push
ret
xor
push
add
add
mov
(bad)
mov
add
icebp
pop
icebp
sar
icebp
xchg
movs
xor
jnp
iret
pop
add
repz
mov
shr
lock
inc
out
dec
in
dec
(bad)
jbe
in
push
mov
xchg
sbb
in
in
shl
(bad)
and
shr
and
(bad)
xchg
dec
pushf
ss
inc
push
icebp
inc
add
mov
mov
cwde
and
sbb
jl
adc
pusha
push
inc
xchg
aad
(bad)
cmp
xchg
movs
cmp
ret
cmps
je
loopne
call
out
sbb
xchg
pop
movs
adc
repz
gs
adc
dec
cmps
pop
daa
adc
jl
or
lods
imul
mov
xor
push
es
enter
nop
mov
test
pushf
inc
inc
rcl
nop
jbe
jo
jecxz
repz
(bad)
mul
in
outs
add
data16
pop
lods
push
add
daa
push
pop
xor
das
push
mov
test
js
addr16
stc
cmc
fsub
bnd
jne
in
mov
(bad)
xor
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
nop
jg
sahf
inc
jns
fisub
xor
or
(bad)
pusha
pusha
jo
ins
(bad)
je
xor
daa
sahf
cwde
js
pop
inc
cmp
loopne
xchg
scas
and
and
imul
fld
je
repnz
add
inc
fstp
repnz
mov
jo
rcl
jo
mov
adc
and
rcl
fs
js
fiadd
push
iret
sub
ds
shl
and
leave
inc
cmp
pop
cmp
and
pop
jb
xor
mov
loopne
out
mov
stc
enter
push
cmp
adc
ss
sub
mov
sub
rcr
inc
pop
xor
outs
mov
test
inc
nop
(bad)
cmc
js
cmp
test
aaa
cmps
movs
(bad)
pop
lods
mov
mov
aam
imul
std
and
(bad)
jg
out
xor
test
das
cmp
pusha
loope
hlt
mov
mov
inc
add
push
pop
cmp
fsub
stc
les
jmp
adc
add
lods
mov
push
repz
enter
imul
jl
dec
pusha
add
mov
arpl
jmp
mov
sub
and
pop
push
push
adc
loopne
pop
push
cmps
loope
lock
test
mov
push
movs
addr16
shl
inc
xor
push
fs
mov
outs
jmp
pop
loope
and
or
push
sbb
mov
mov
cmp
xor
xlat
mov
pop
mov
jmp
jb
mov
movs
jmp
clc
loopne
nop
mov
jo
lock
and
(bad)
in
ror
mov
inc
shr
sub
and
shr
fsubr
fwait
sub
cmp
xchg
pop
cmp
mov
cmps
sub
and
xlat
cmp
add
loop
pop
jb
jmp
mov
maskmovq
psubw
or
sbb
cdq
(bad)
js
mov
loope
add
mov
cmp
push
inc
sub
cmp
ret
lahf
dec
ret
dec
cmp
push
cmps
sbb
lods
jecxz
or
pop
mov
jp
push
inc
pop
jg
mov
or
mov
mov
and
jns
repz
jmp
pop
fnsave
push
lds
and
retf
xchg
inc
mov
jp
xor
in
(bad)
and
xchg
imul
(bad)
and
xchg
cdq
push
xchg
add
in
inc
adc
clc
sbb
pop
(bad)
and
xchg
imul
vpshlw
xor
jnp
stos
pop
lods
jp
cmp
sbb
rol
dec
mov
repnz
retf
xchg
test
lods
jp
cmp
sbb
xchg
dec
push
fisub
push
mov
mov
sahf
sbb
int3
mov
or
pop
lods
lods
imul
mov
or
dec
cmp
int
dec
retf
cmp
add
jg
cmp
stc
call
jge
inc
fs
jmp
sub
and
rol
xchg
pusha
jo
adc
mov
xor
mov
or
bound
adc
xchg
inc
sbb
push
arpl
xchg
mov
inc
mov
pop
jae
lahf
retf
sub
retf
jl
mov
mov
fs
in
and
stc
or
imul
repz
jb
in
pop
fwait
test
repnz
xchg
mov
ror
aas
arpl
push
imul
inc
lock
dec
mov
adc
xor
popf
pushf
dec
mov
adc
sub
adc
iret
inc
dec
pop
sub
jo
sbb
addr16
mov
xor
pop
push
add
mov
add
test
inc
je
sbb
push
repnz
mov
mov
xor
fdiv
pop
sbb
jp
jp
mov
mov
sbb
and
jmp
out
test
and
inc
or
push
leave
xchg
clc
inc
ds
and
test
dec
movs
test
jg
cmp
rol
pop
add
or
push
mov
jne
cli
xchg
xchg
dec
add
aad
and
adc
xor
pop
mov
sub
push
int
mov
jae
inc
jae
lock
rcr
movs
xlat
mov
and
xor
aas
adc
pushf
pop
add
bound
pushf
into
xlat
shl
mov
aad
addr16
pop
jbe
xor
test
int
lods
inc
rol
loope
pop
sbb
mov
loop
fiadd
rcr
xchg
jecxz
(bad)
clc
inc
out
sti
jns
icebp
jmp
dec
movs
pop
push
cld
into
xchg
mov
aas
lea
pusha
add
stos
leave
inc
fnsave
mov
int
mov
jl
rcl
pusha
inc
rol
pusha
jo
xor
fiadd
jg
fisttp
jecxz
popa
pushf
jo
loop
ror
xchg
icebp
addr16
mov
dec
out
jns
push
call
shl
adc
cld
arpl
fild
dec
add
inc
out
and
jmp
pop
cmp
in
cmp
xor
cmp
ret
pop
dec
adc
or
imul
cdq
int
sub
je
cmp
(bad)
mov
cmp
inc
jns
loopne
je
call
push
test
es
mov
xchg
ret
outs
xor
(bad)
test
adc
sahf
xchg
push
or
pop
xor
add
stos
pop
popf
and
mov
daa
in
and
pop
outs
pop
retf
fcmovne
add
xchg
cmp
pop
std
push
pop
cmp
cmp
les
cmc
out
outs
stos
inc
mov
jmp
icebp
ror
sbb
push
ror
push
icebp
fnstenv
hlt
(bad)
dec
mov
adc
xor
adc
push
ss
fs
je
mov
inc
pusha
mov
popf
adc
jmp
stc
sbb
call
hlt
pop
jmp
push
test
dec
out
mov
out
sbb
xchg
add
push
dec
xchg
lock
adc
cmp
push
sub
lahf
mov
sub
add
out
mov
mov
push
int
mov
sub
out
stc
cmp
xchg
jnp
stc
jns
sbb
sub
adc
in
stc
adc
les
int3
adc
or
mov
push
lods
pop
sub
mov
out
sub
hlt
retf
cmp
loop
les
jecxz
retf
sub
cmp
sub
inc
nop
adc
jb
pop
inc
push
fwait
(bad)
xor
or
sub
(bad)
stos
mov
sub
les
fild
retf
add
loope
add
loope
add
loope
add
loope
add
loope
add
in
popa
loopne
push
loop
inc
xor
loop
inc
xor
loop
inc
xor
loop
mov
jne
xchg
xor
dec
xchg
pusha
pop
dec
mov
pop
ror
sub
popf
xchg
add
jecxz
or
pop
xchg
xor
cmp
cdq
in
(bad)
repz
nop
mov
out
or
and
adc
ins
inc
inc
sub
int
sub
int
sub
jge
add
aam
cld
mov
bound
movs
pop
addr16
jb
bnd
xchg
inc
std
jle
and
iret
shl
dec
inc
jmp
shl
sub
mov
sub
xchg
jp
mov
adc
push
cs
ins
out
in
(bad)
and
dec
std
xchg
inc
pop
cmp
jp
lock
or
aad
test
in
inc
imul
jns
and
aad
js
xor
movs
into
test
jmp
scas
stos
dec
test
lds
ins
jns
outs
fs
jle
out
xor
adc
dec
mov
in
ss
push
test
or
sub
outs
or
pop
jae
and
pop
stos
outs
sar
push
push
(bad)
rol
or
retf
and
loop
stos
jle
hlt
loop
pop
adc
add
cmps
inc
mov
aad
mov
repz
pop
adc
push
mov
addr16
cmp
xor
and
sub
loope
or
adc
je
cmp
ror
out
fisub
data16
xor
ins
lock
inc
xchg
and
ret
xor
fld
bound
lahf
outs
fcomp
nop
arpl
adc
mov
stos
inc
jl
mov
jb
jno
push
mov
jge
jle
mov
pop
bound
movs
std
shr
jmp
ins
or
xchg
adc
loopne
sbb
pop
pop
mov
add
push
cmps
jnp
lods
adc
mov
adc
push
dec
and
add
sbb
pop
xor
pop
int3
(bad)
(bad)
jge
(bad)
out
scas
adc
daa
and
fs
push
mov
cmp
in
or
xchg
popa
stos
mov
jmp
mov
ins
mov
push
clc
pop
stc
out
inc
idiv
push
fsubr
in
clc
adc
push
sbb
in
sar
sbb
and
movs
mov
imul
repnz
mov
jmp
push
xor
inc
jecxz
sbb
xor
xchg
adc
mov
js
les
sbb
add
jp
dec
test
cmp
pop
inc
scas
jp
fnsave
xor
call
or
mov
hlt
cmps
cmc
pop
sbb
mov
lock
jno
jge
xchg
pop
out
jno
ficom
scas
lds
cld
jl
inc
es
push
adc
mov
lock
mov
popa
jecxz
pop
call
jae
jae
sub
mov
fadd
mov
ficomp
dec
es
dec
dec
xchg
or
mov
rol
sbb
jmp
bound
inc
stc
rol
fdiv
(bad)
dec
sbb
pop
pop
mov
clc
imul
cwde
es
mov
pop
cmp
adc
fwait
push
popf
xchg
bound
add
mov
hlt
jo
jmp
mov
jecxz
and
xchg
mov
addr16
test
data16
jb
sub
in
inc
sub
inc
stos
inc
cs
xchg
sbb
xlat
fcomp
xor
mov
jl
imul
pop
pop
das
loop
out
(bad)
lods
in
push
pop
add
imul
add
inc
adc
sbb
dec
add
xor
mov
mov
adc
mov
inc
or
in
sbb
adc
jmp
xor
stos
and
stc
mov
xor
mov
loop
jnp
cmp
mov
fild
xchg
adc
mov
or
inc
fs
int
nop
scas
mov
mov
pusha
addr16
push
out
call
(bad)
js
xor
and
ins
clc
cli
(bad)
retf
scas
push
cmps
cwde
imul
sub
arpl
inc
mov
adc
inc
ins
push
mov
push
jecxz
dec
inc
jg
push
add
sub
xor
sub
pop
(bad)
mov
ja
in
call
push
xchg
push
mov
dec
pop
push
or
pop
xor
popa
sar
psrld
sub
clc
clc
shr
fs
cmp
aad
sub
(bad)
add
les
sub
les
cwde
outs
cld
jmp
fwait
cmp
lds
jl
fnsave
sahf
nop
mov
and
(bad)
ds
mov
loopne
rcr
test
inc
adc
shl
fbld
cs
cdq
jns
add
mov
cmp
icebp
jno
imul
xor
movs
pushf
in
sub
push
sbb
cmp
inc
or
push
dec
and
jmp
dec
repz
cmp
push
push
and
lods
stos
pop
add
adc
mov
test
xor
pop
mov
lahf
jnp
jp
(bad)
call
fistp
mov
mov
or
pushf
xor
and
imul
lock
bound
xchg
js
call
sub
in
inc
repnz
mov
sti
sbb
pop
cld
ins
jge
gs
mov
sub
jp
cld
test
inc
into
sti
sub
or
dec
add
pop
fstp
and
ret
les
jb
push
push
int
push
add
fld
loope
fwait
daa
mov
xlat
daa
jns
add
inc
clc
adc
adc
xchg
mov
shl
cmps
jae
mov
ja
inc
mov
idiv
xchg
pusha
dec
mov
rcr
pop
jne
fs
and
mov
and
adc
cli
jbe
and
mov
lds
lahf
hlt
pop
jo
jecxz
sbb
fst
adc
lock
xchg
lds
or
stc
jl
fadd
test
jge
repz
pop
rcl
add
and
sbb
pop
fstp
out
aaa
mov
push
ds
dec
jo
and
mov
into
mov
clc
fcom
das
loop
dec
jne
or
push
movs
outs
in
sbb
lods
fcomp
shr
int3
xchg
mov
loope
lds
sbb
dec
jb
push
repnz
push
ds
xchg
add
sbb
test
addr16
loop
add
or
data16
jmp
mov
adc
sub
sbb
sahf
ins
mov
inc
aam
mov
mov
push
aad
pop
pushf
test
and
leave
add
sub
cmps
cmc
push
adc
rol
inc
xchg
gs
aam
popf
cld
mov
mov
or
lock
call
inc
mov
xchg
mov
test
jnp
jns
fs
mov
rol
nop
pusha
stc
pusha
xchg
in
(bad)
cmp
jb
sub
pop
push
jno
icebp
dec
ins
cmp
addr16
(bad)
mov
fs
movs
ret
dec
movs
mov
test
add
jle
popw
rol
push
add
sbb
es
push
mov
push
call
adc
je
rol
iret
mov
jo
xchg
mov
stos
adc
jecxz
adc
and
data16
jae
pushf
mov
push
sub
shr
dec
inc
add
jb
test
js
cmp
xchg
fcomp
lea
outs
add
add
loopne
inc
xchg
sar
popa
pop
jo
xchg
inc
push
loope
push
push
icebp
mov
xor
xchg
adc
and
loope
lock
shl
adc
jno
jno
xchg
jo
push
adc
xor
xchg
shl
xor
inc
adc
shl
shl
xor
shl
rcl
and
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
popf
pusha
lock
icebp
xor
fld
jno
loope
pusha
pusha
rol
pusha
jo
xchg
xor
rol
inc
mov
dec
rcl
jo
rol
pusha
jo
xchg
xor
xchg
inc
inc
xor
jg
add
jno
iret
xchg
pusha
rol
cwde
pusha
jno
xchg
inc
sti
addr16
movs
jno
fs
xchg
pusha
jo
xchg
push
jo
shl
cwde
xor
mov
in
dec
jecxz
xchg
pusha
xor
call
mov
cmp
lock
ficom
(bad)
call
pop
jns
outs
jo
xchg
lock
xchg
lock
push
mov
pop
in
fild
aad
dec
mov
inc
and
push
jo
xchg
and
jnp
pop
and
icebp
sub
shr
mov
fwait
xor
lock
imul
pop
in
push
inc
repnz
or
rcl
jmp
lahf
popf
dec
mov
push
mov
cli
adc
inc
push
ss
je
fs
and
push
aas
fsub
add
xchg
in
aam
mov
mov
ror
pop
fcomp
arpl
inc
xchg
pushf
jle
add
push
out
dec
test
(bad)
xchg
sahf
dec
jb
fbstp
cmps
scas
and
les
int3
std
jnp
inc
in
dec
inc
jb
loope
inc
inc
loopne
lods
cmp
xor
pop
pusha
pop
cmp
pop
jp
inc
sub
xchg
mov
or
mov
pop
sti
pop
push
pop
jbe
xor
ficom
dec
mov
aad
push
out
daa
cmps
mov
xchg
inc
add
ficom
ret
imul
sub
or
pop
sbb
pop
fcomip
xor
xchg
jno
sub
pop
sar
leave
fstp
add
push
icebp
sub
xchg
inc
stos
mov
repnz
mov
das
and
pop
fidivr
mov
push
in
add
and
aam
cmp
sbb
push
add
adc
ficom
mov
int3
sub
push
fs
cmp
pop
lods
fs
outs
mov
or
xlat
dec
pop
xor
rol
cmp
ss
daa
push
iret
xor
ds
out
mov
aas
jge
sub
test
dec
mov
cmp
dec
add
jnp
test
mov
mov
out
cmp
cmc
pop
push
pop
inc
push
aaa
dec
push
ds
add
stos
add
shr
jge
bound
sbb
jmp
mov
cmp
les
mov
cwde
scas
push
or
xor
cdq
push
fst
cmc
inc
xor
les
pop
xor
movs
inc
jmp
mov
shl
dec
sub
loop
outs
imul
test
ins
adc
cli
sub
pop
(bad)
xlat
sbb
xor
hlt
test
adc
(bad)
cmp
push
movs
out
mov
stos
int3
cwde
fistp
mov
lea
enter
mov
push
jb
jp
mov
movq
ds
popf
aam
xchg
jecxz
sbb
jo
ds
mov
mov
push
mov
push
push
scas
mov
aad
pop
sub
cmp
leave
sti
fst
push
pop
mov
(bad)
pop
mov
cld
push
adc
sub
lods
cmp
push
cmp
dec
dec
sub
jbe
or
sti
leave
or
ds
sub
clc
inc
out
mov
or
xchg
cmp
push
dec
or
mov
push
cli
repz
(bad)
xlat
outs
(bad)
xchg
inc
enter
cmp
nop
jle
add
imul
lods
add
cmp
loope
jo
mov
pusha
inc
shl
inc
add
popa
and
xchg
push
push
(bad)
shl
and
pusha
rcl
aas
aaa
(bad)
sahf
xchg
adc
fidivr
cmp
cld
aaa
mov
pop
scas
arpl
dec
push
push
xchg
aaa
sbb
pop
nop
jge
imul
movs
hlt
mov
jp
sub
ja
fnsave
ins
xor
jg
les
ret
rcl
sbb
inc
sbb
test
frstor
int
push
outs
jp
pop
retf
inc
mov
inc
out
sub
add
push
bound
sub
popf
cwde
xchg
sub
jg
jnp
jmp
sar
and
jnp
retf
out
sub
fistp
fidiv
aad
and
enter
(bad)
sbb
cmc
retf
jae
and
ret
pop
ficomp
mov
xchg
push
xor
xchg
div
adc
addr16
dec
add
pop
jnp
adc
imul
dec
xlat
addr16
cmp
dec
jmp
jne
sub
xchg
mov
pop
ret
push
clc
test
shr
mov
std
inc
pusha
push
movs
cs
xor
mov
add
mov
cmp
mov
out
call
cmp
mov
inc
ss
loope
xchg
or
retf
add
mov
test
dec
sar
call
sub
sbb
mov
imul
rcr
mov
mov
arpl
mov
pop
aad
retf
iret
xor
fisub
enter
push
(bad)
fstp
js
cdq
mov
ds
movs
jl
(bad)
out
inc
mov
out
xchg
stos
or
ret
xchg
xor
fiadd
sub
lods
push
pop
inc
(bad)
xor
sub
pusha
cmps
xor
pusha
and
in
loop
adc
mov
in
int
data16
icebp
and
pop
aas
aam
pusha
ror
sub
jmp
mov
ins
cmp
mov
mov
xor
add
mov
dec
pop
sub
call
repz
jp
or
and
lods
fucomi
clc
mov
out
push
mov
mov
imul
mov
jb
mov
mov
movq
sbb
shr
cmp
aam
and
mov
icebp
fxch
nop
cmps
in
sub
movs
aad
es
mov
dec
ins
push
retf
mov
sahf
adc
shl
cmps
xchg
sbb
push
movs
sahf
bound
outs
icebp
jmp
jae
xlat
fld
sub
sub
add
je
push
fidiv
es
fimul
mov
inc
cli
sti
mov
sbb
mov
and
mov
jge
adc
enter
xor
xlat
add
or
jo
aaa
push
pop
pop
aam
add
pop
stos
stos
cmp
in
loop
push
out
sbb
test
(bad)
jge
es
ins
push
shr
pop
xor
outs
cmps
jb
or
xchg
sbb
cmp
imul
lahf
xor
outs
sub
or
aad
jne
fs
mov
pop
dec
push
test
out
in
in
repz
xlat
xlat
(bad)
xchg
fwait
aam
pmulhuw
push
sub
scas
and
push
movs
test
jno
mov
xchg
in
cmps
pushf
cdq
sub
int3
cs
neg
inc
aad
adc
cmps
mov
retf
cmp
and
mov
xor
fcom
push
daa
sbb
xor
cli
push
or
fwait
shr
repnz
jmp
mov
add
div
fs
ss
fwait
push
adc
xchg
xchg
inc
hlt
sahf
popf
mov
js
cmp
or
cmp
push
cmps
fwait
xchg
pop
lahf
(bad)
outs
inc
inc
push
xchg
mov
bound
call
sbb
or
dec
lods
mov
into
lds
ror
pusha
add
(bad)
xor
ret
fs
mov
call
(bad)
ret
push
fimul
nop
inc
pusha
loope
add
popa
shl
rcl
inc
rol
gs
mov
popa
rcr
outs
ror
push
test
fs
xor
jge
shl
add
retf
in
jecxz
mov
jb
sahf
inc
or
pop
pop
cli
xchg
jecxz
iret
ins
mov
mov
dec
xor
ss
push
dec
push
mov
xchg
jl
xor
outs
cmp
jb
es
mov
neg
jbe
push
mov
mov
das
ss
xchg
xchg
loopne
sub
mov
jmp
pushf
and
sar
adc
push
sub
(bad)
jg
retf
hlt
lods
es
inc
(bad)
repz
sbb
push
inc
jl
rcr
in
sbb
aam
mov
or
adc
pop
mov
mov
push
adc
cmc
mov
leave
xchg
pop
inc
xor
add
mov
mov
xchg
jb
dec
xchg
or
in
ds
sahf
dec
test
jb
mov
jecxz
cdq
cmp
shl
mov
rol
jle
mov
jae
dec
repz
call
sbb
adc
les
leave
dec
mov
sbb
daa
aad
xor
ret
adc
(bad)
mov
jno
in
mov
test
push
aaa
fmul
movs
ror
pand
enter
mov
jbe
out
repz
xor
add
popa
or
xor
pop
and
mov
pop
mov
adc
cwde
sub
xchg
loopne
cmp
(bad)
adc
dec
push
mov
(bad)
lds
jns
lock
adc
jp
mov
fld
pop
inc
push
test
jmp
gs
setnp
rcl
push
aad
sub
retf
jg
add
adc
mov
adc
fbstp
ins
in
mov
out
scas
mov
bound
jl
mov
into
and
dec
or
sub
pop
gs
and
push
and
out
cmp
pop
cld
sub
retf
add
mov
adc
jns
retf
fwait
(bad)
lahf
fadd
clc
out
pop
pushf
arpl
dec
cmp
test
cmp
sbb
out
adc
mov
xchg
call
push
and
and
test
scas
jle
adc
fisubr
mov
jge
and
test
sub
adc
add
push
sbb
aaa
xchg
or
add
sbb
loopne
add
dec
js
fwait
bound
jbe
je
stos
(bad)
movs
inc
rol
es
aad
sar
or
gs
ret
xor
inc
ja
xchg
in
rcl
in
frstor
adc
push
mov
retf
cdq
mov
les
inc
idiv
shl
jns
sub
sub
push
dec
arpl
movs
ins
mov
dec
pop
jnp
adc
sub
mov
in
hlt
es
fld
mov
xor
ret
sbb
mov
or
loopne
mov
cmp
inc
inc
dec
or
pop
xor
ret
cmp
mov
add
mov
cmp
jmp
sub
xchg
mov
sub
(bad)
arpl
pop
jg
inc
out
pop
dec
fisttp
jns
retf
cmp
inc
push
add
pop
jmp
loope
jmp
mov
pop
fwait
xor
cs
loopne
call
out
push
xor
fwait
dec
das
push
xchg
(bad)
cmps
les
shl
js
push
or
sbb
or
push
push
mov
fisub
jmp
jmp
nop
mov
pop
(bad)
hlt
inc
retf
dec
loop
cmp
xchg
or
enter
scas
retf
cli
lods
push
call
test
fmul
std
add
jmp
sti
jecxz
mov
hlt
push
lods
fwait
pop
add
ret
mov
lock
adc
(bad)
daa
dec
lds
in
pop
nop
sbb
jle
pop
(bad)
pushf
cmp
clc
mov
cmp
mov
sbb
mov
push
neg
loope
ficomp
imul
mov
add
repz
ins
mov
inc
(bad)
int
mov
adc
repz
mov
sti
jnp
leave
fild
cmps
jb
mov
cmp
les
push
mov
lahf
mov
mov
movs
pop
add
lock
daa
ins
(bad)
aaa
ror
popa
fst
stc
icebp
mul
sti
inc
adc
(bad)
repz
(bad)
cmp
and
pop
cld
les
ja
imul
xchg
mov
mov
cmp
mov
add
jno
repnz
mov
dec
pop
movs
rol
rcr
iret
cmp
dec
pop
fcom
mov
pushf
sbb
mov
sub
inc
cld
or
and
or
xchg
jo
es
adc
stc
pop
or
ret
ss
shl
cmp
or
dec
pop
frstor
or
jno
sbb
sar
mov
cmp
push
rol
ja
stos
push
xchg
imul
sti
test
xchg
movs
push
mov
movs
jae
mov
ins
out
mov
test
pop
arpl
mov
cwde
imul
dec
sbb
ror
or
enter
shl
xor
pop
inc
dec
mov
movs
mov
loopne
test
push
inc
test
jo
mov
out
cwde
je
retf
adc
sahf
rcl
scas
(bad)
xchg
xchg
inc
out
fcom
jne
sub
cs
mov
rcl
ret
sbb
jl
push
das
call
cld
jg
pop
sub
lahf
or
pop
add
lahf
adc
adc
jbe
and
mov
mov
div
into
vfmsubadd213pd
ja
rcl
in
js
stos
cmps
cdq
movs
pop
adc
jb
sub
xor
mov
push
cdq
es
imul
adc
jp
outs
mov
mov
mov
idiv
into
xchg
jmp
loop
(bad)
arpl
dec
cmp
sub
inc
xchg
dec
xor
retf
add
xchg
into
and
pop
fild
ss
pop
(bad)
test
aam
sub
sub
sahf
fnstsw
sub
jmp
sbb
ficomp
out
cwde
dec
pmullw
fidivr
nop
xor
mov
pusha
jo
xchg
inc
jo
and
push
rol
jne
loopne
jae
sti
sub
lea
jmp
adc
mov
pop
in
mov
rcl
push
rol
and
out
in
test
or
icebp
shr
pop
ins
add
fbld
out
(bad)
add
icebp
call
cmps
das
pop
leave
pop
movs
or
fs
cmp
jle
pop
and
push
dec
fimul
or
mov
sbb
inc
fimul
push
(bad)
lods
je
pop
cmp
int
int
pusha
scas
in
push
cmp
sbb
inc
ds
test
or
das
ss
ror
sub
mov
fisubr
sbb
aaa
push
mov
shr
into
cdq
fcomp
stos
aas
mov
jae
dec
ds
loopne
xchg
or
dec
push
jns
jmp
js
paddq
cwde
cld
fwait
jbe
push
xchg
cmps
jmp
mov
cmp
add
(bad)
fwait
xor
outs
fild
mov
pop
nop
fist
scas
aas
adc
inc
fidivr
dec
cmps
sti
sbb
ins
lea
test
push
push
stos
lock
mov
push
(bad)
push
jmp
stc
inc
std
jmp
xchg
push
jp
sub
sub
iret
push
mov
jecxz
pop
sbb
rcl
dec
jae
dec
in
data16
stos
mov
out
ins
jmp
jmp
dec
ins
lods
cmc
jge
push
test
mov
mov
sub
sbb
cmp
or
and
jnp
dec
out
sbb
jmp
mov
imul
aaa
or
cld
and
cwde
push
fcmovnbe
add
mov
mov
mov
or
out
iret
mov
push
mov
xor
sub
inc
fwait
xor
xor
and
fbstp
adc
sbb
sbb
mov
js
xchg
lahf
inc
neg
jnp
and
pop
push
ficomp
mov
les
inc
sub
xchg
mov
in
(bad)
or
mov
imul
push
add
fwait
cmp
inc
cmp
jp
out
and
adc
sub
ss
mov
in
xor
fmul
mov
jmp
or
in
out
adc
jae
pop
(bad)
fsub
jmp
adc
sbb
dec
sahf
sbb
sbb
sbb
in
not
cmps
mov
or
imul
lock
push
inc
xor
fistp
aad
sbb
stc
push
out
ror
sbb
mov
push
shl
les
int3
sbb
mov
and
movs
scas
sub
movs
push
jo
out
sub
call
xchg
sbb
sar
dec
mov
into
xchg
xchg
jmp
sbb
xlat
xchg
sar
sub
mov
sar
cwde
aas
push
cmps
jno
iret
mov
mov
mov
mov
jge
test
iret
idiv
pop
mov
hlt
ja
rcl
xor
stos
pop
icebp
int
cmp
xchg
and
out
(bad)
loopne
jle
hlt
push
jle
cmp
dec
pop
mov
push
les
cli
pop
xor
out
push
ja
and
mov
push
aam
cmp
jmp
hlt
xor
mov
in
test
div
pop
lock
dec
fcmovne
ror
sub
or
test
shl
ds
nop
mov
nop
cmp
sti
lea
enter
ror
mov
inc
xchg
stc
push
or
fsubr
std
add
push
inc
sbb
les
scas
(bad)
in
push
out
push
fwait
test
adc
dec
sti
cmps
jl
cmps
mov
xor
hlt
sbb
aam
(bad)
or
pop
xchg
cwde
add
test
jbe
je
js
push
loop
pop
xchg
stos
push
sub
and
push
fnstenv
xchg
data16
stos
jp
aad
mov
ret
in
int
outs
fwait
call
xor
movs
mov
pop
in
ret
cmp
inc
dec
dec
xchg
pop
fst
xchg
ficomp
fdivr
push
push
mov
fisub
adc
xchg
xlat
xor
pop
xor
out
push
fstp
data16
xor
mov
ret
mov
sbb
ds
imul
stos
push
(bad)
(bad)
(bad)
dec
out
retf
push
cmps
mov
arpl
clc
aad
int
sub
mov
push
fimul
add
mov
dec
mov
arpl
loop
ss
xor
push
ins
je
adc
lods
lea
jno
movs
ins
mov
or
into
cmp
mov
cmc
pop
(bad)
fsubr
cmp
popa
add
sub
or
test
push
(bad)
cmps
jb
in
shr
xor
sub
test
out
fs
jne
and
sbb
adc
dec
and
sbb
scas
sub
inc
scas
or
jnp
dec
rcr
fnstcw
int
and
gs
pop
xor
push
fadd
ret
je
sub
sub
popf
int
test
stos
es
sub
cmp
jmp
or
mov
mov
inc
mov
add
jno
cdq
sar
dec
bt
jmp
dec
idiv
out
xor
aam
mov
inc
scas
jp
loope
mov
test
div
cwde
xor
scas
not
fwait
push
sbb
(bad)
jbe
es
scas
(bad)
mov
xor
outs
bound
ret
popf
mov
cld
sbb
adc
push
(bad)
cmps
xor
das
sub
shl
sub
ja
dec
or
jle
arpl
mov
xchg
mov
movs
add
(bad)
in
add
pop
or
dec
shl
in
cmp
fild
jmp
mov
test
cmp
pop
outs
fild
jecxz
out
mov
jp
stc
mov
push
jnp
sub
dec
mov
jge
int
out
(bad)
pop
repnz
inc
xor
pop
sub
outs
dec
jmp
in
cmps
out
fild
lock
lods
aaa
push
movs
jp
div
inc
push
enter
adc
mov
ds
mov
jge
not
fdiv
or
mov
(bad)
cmps
sub
jnp
and
cdq
jb
es
aas
add
test
mov
mov
cmp
push
out
(bad)
out
or
cmp
jo
jne
add
jno
lock
and
adc
icebp
push
inc
mov
pop
call
out
call
sbb
retf
ret
cld
loop
out
jg
push
jne
adc
mov
cmp
ss
in
sub
pop
movs
push
dec
cmp
jno
das
mov
xchg
jnp
fcomp
lds
imul
out
xor
mov
push
test
push
out
sysexit
je
loope
and
dec
xlat
mov
rol
inc
push
shl
sbb
sub
pop
aad
push
enter
sbb
dec
cmps
outs
sbb
push
jg
or
mov
pushf
xor
sar
enter
cmp
jb
sbb
dec
and
adc
aaa
jp
enter
or
adc
mov
push
icebp
mov
cmc
fstp
sub
retf
cs
rol
shr
or
leave
pushf
jecxz
jle
gs
out
mov
ret
jl
loop
stos
fidivr
pop
xor
nop
scas
movs
jb
es
mov
cmp
xchg
adc
push
xor
push
add
call
or
aad
mov
mov
sbb
stc
int
in
out
jae
mov
jl
enter
call
std
ficomp
out
mov
pop
stos
and
(bad)
xor
xchg
fs
fsub
mov
(bad)
adc
outs
sbb
retf
fisttp
icebp
mov
addr16
dec
xrelease
add
bound
mov
jno
mov
pop
inc
mov
xor
adc
push
lock
fdivr
mov
cli
add
shl
mov
jo
enter
push
mov
retf
pop
push
mul
or
(bad)
push
jmp
ror
cmp
lea
mov
mov
push
push
popf
lock
ret
add
fisttp
fdiv
jmp
pop
add
or
korb
leave
ins
sbb
mov
dec
dec
pop
pop
aaa
js
or
not
add
and
sahf
ja
pop
or
push
test
push
mov
ins
add
jo
jmp
add
jb
adc
outs
adc
jae
adc
loopne
stc
adc
rcr
push
or
fdivr
fdivr
and
mov
adc
and
pop
les
fdivr
xor
mov
adc
ss
loope
push
movs
pop
cmps
dec
adc
and
dec
push
dec
pop
in
cmp
adc
xor
jge
sub
cwde
pusha
leave
sbb
test
fwait
push
clc
or
mov
sbb
xor
xchg
inc
mov
jle
lods
jo
pop
ucomiss
add
xchg
adc
dec
push
rcl
push
mov
pusha
add
rol
add
and
push
ror
inc
jbe
mov
inc
js
mov
dec
daa
retf
movs
push
xor
ins
lock
mov
push
xchg
fild
cmp
test
dec
xor
push
aam
push
inc
das
jns
test
imul
(bad)
repz
arpl
cmp
test
cmp
clc
jnp
push
push
xor
addr16
sub
cli
mov
fistp
jmp
inc
sbb
jne
xor
sbb
enter
popf
push
xor
pop
shl
lahf
push
(bad)
sbb
mov
shl
mov
push
lahf
dec
cmp
dec
push
repz
pop
loop
ja
test
lods
addr16
xor
mov
jecxz
les
lahf
fild
and
scas
(bad)
cmp
inc
dec
xchg
lock
mov
ror
retf
ret
jp
sar
je
outs
iret
inc
mov
je
and
mov
stos
es
pop
and
fwait
jnp
add
gs
cmps
(bad)
push
adc
xor
push
icebp
shr
(bad)
xchg
mov
test
mov
stos
inc
mov
jl
movs
inc
out
mov
mov
retf
push
ins
repz
rcl
cmp
pop
dec
xor
push
cmp
mov
call
int3
aas
jb
fcom
add
sbb
test
sbb
jl
push
dec
sbb
jecxz
sbb
xor
adc
movs
ds
fs
sti
cmps
mov
sub
adc
mov
stos
push
adc
adc
sub
js
sub
jae
stos
pushf
pushf
sbb
dec
inc
pop
mov
sbb
sbb
rcr
in
inc
xlat
inc
mov
xor
add
out
je
fcmovb
div
cmps
xor
mov
pop
xchg
jge
and
sub
adc
mov
mov
mov
dec
stc
sar
push
cld
pop
dec
sbb
int3
imul
adc
fidiv
dec
dec
out
jb
push
retf
stc
iret
pop
jmp
scas
dec
push
push
add
mov
or
loope
fild
lea
das
jecxz
cmps
xchg
cmp
sub
mov
sar
xchg
mov
fs
les
fdivr
or
mov
repz
movs
and
fdivr
scas
cs
mov
sbb
cmp
jp
pop
stos
sub
pop
xor
xchg
xchg
mov
inc
jbe
popa
lods
sbb
or
mov
push
mov
neg
sub
jnp
lea
mov
xor
mov
rcl
scas
in
pop
hlt
push
push
lock
dec
jg
aas
cmps
push
shr
sbb
adc
sbb
sahf
xor
jl
loop
js
scas
stos
mov
scas
xor
mov
in
mov
jp
(bad)
in
gs
rcr
push
lods
lahf
(bad)
mov
push
mov
leave
jns
dec
fimul
xchg
jl
push
in
fsubr
mov
mov
cmps
jnp
(bad)
adc
xor
xor
scas
mov
mov
cmp
ins
jnp
adc
cmp
push
outs
int3
xor
hlt
and
jge
jno
pop
pusha
jp
xor
popa
outs
jmp
iret
loope
sub
jge
pop
ficom
popf
xor
cmps
mov
xor
dec
xchg
inc
xchg
dec
cmps
inc
jb
push
mov
js
inc
jo
push
rcl
mov
add
dec
fdiv
lea
jo
and
push
loop
iret
test
(bad)
inc
xchg
js
scas
(bad)
inc
sahf
xor
adc
adc
dec
fisttp
push
ror
dec
(bad)
xor
push
mov
loop
pop
mov
sti
pop
mov
aad
add
rcl
stos
xchg
push
lds
scas
fist
cwde
xor
xor
dec
xlat
inc
sub
ror
fs
pop
ret
aam
mov
int3
inc
inc
data16
pop
dec
cmp
mov
mov
adc
js
push
mov
pop
fld
inc
mov
pop
je
cmc
div
mov
adc
imul
test
jp
fld
ret
dec
push
dec
(bad)
mov
lods
test
push
div
fwait
inc
xchg
jb
sub
xchg
pop
mov
ret
imul
mov
pop
sbb
jne
(bad)
outs
fwait
es
movs
ins
push
rcr
jle
jbe
fnsetpm(287
sbb
push
mov
jge
and
dec
sbb
repnz
lods
adc
mov
or
outs
cmp
pop
adc
enter
xchg
push
inc
sub
push
es
add
ret
movs
jge
ror
iret
mov
imul
push
lods
aas
and
data16
adc
cmp
pop
pop
and
sub
movs
xchg
pop
jecxz
add
loop
and
enter
mov
test
loope
jnp
rcr
test
retf
add
lods
pop
inc
pop
rcl
add
into
pop
aam
daa
fs
leave
call
pop
rol
cmp
xchg
jmp
pushf
loope
cmp
stos
es
xor
push
inc
ror
xchg
std
adc
cdq
jb
lods
pop
mov
xor
dec
xor
xchg
rcr
jae
iret
push
fiadd
aaa
dec
gs
ss
xlat
std
sbb
pop
jge
add
leave
dec
jge
xchg
cli
loopne
pop
es
xchg
repz
sahf
jae
arpl
into
push
jp
cld
cmp
imul
out
in
xchg
scas
xchg
imul
jle
jnp
push
add
and
or
sub
dec
xchg
adc
call
cmc
call
not
in
sbb
(bad)
mov
popa
xor
lods
cs
xlat
mov
push
ins
push
mov
imul
in
cmp
mov
jnp
jo
sbb
dec
shr
mov
adc
pop
leave
xchg
or
lock
xchg
xlat
mov
cmps
jle
imul
pop
dec
out
test
fcmovu
aad
mov
cmp
retf
xchg
ins
xor
mov
(bad)
or
mov
cmp
mov
std
stos
jne
cmps
pop
(bad)
xlat
movs
clc
cmps
xchg
(bad)
xchg
sub
les
xlat
clc
add
es
mov
outs
adc
dec
dec
shl
fs
loope
shl
sbb
pop
aam
inc
sahf
fadd
jmp
ins
jl
gs
lahf
test
lock
push
mov
dec
dec
ror
lock
cmp
cmp
stos
push
pop
test
add
add
add
scas
mov
jecxz
mov
and
aaa
jne
sahf
arpl
(bad)
sub
jecxz
out
hlt
sbb
or
sbb
pop
mov
nop
xor
std
movs
mov
pop
mov
fistp
clc
test
les
out
inc
push
jg
popa
jnp
mov
sar
iret
ja
(bad)
add
mov
retf
clc
sub
imul
dec
call
leave
xor
test
rcl
jae
pop
repnz
loope
or
adc
cmp
dec
push
aam
hlt
push
les
jle
nop
mov
sub
or
or
or
out
sbb
mov
int3
les
and
lock
(bad)
jge
je
cmp
add
xchg
cdq
outs
icebp
nop
mov
in
sub
cmp
cmps
mov
call
jmp
pop
or
movs
push
push
aas
or
xor
xchg
retf
leave
out
or
push
ror
mov
test
jge
data16
repnz
sub
dec
jge
xchg
fucomi
pop
mov
loopne
in
jb
xchg
test
repz
inc
add
sar
and
mov
or
mov
inc
inc
(bad)
xchg
mov
dec
jle
xchg
fnstcw
mov
sar
ins
fisttp
xor
test
sub
(bad)
jle
adc
mov
ret
sbb
adc
jmp
retf
xchg
jae
jns
sub
popf
sbb
or
dec
xor
add
call
std
mov
les
scas
and
add
fimul
aas
sub
ss
mov
adc
or
cmp
(bad)
(bad)
outs
movs
push
pusha
jl
call
(bad)
stos
push
daa
push
add
mov
cmp
mov
lds
daa
in
retf
mov
xchg
mov
dec
popa
pop
dec
push
jbe
jle
xor
clc
loop
test
jae
jmp
imul
pushf
pop
mov
sub
push
push
mov
cmps
and
sub
lods
stc
inc
and
sbb
jmp
cmp
fxch
xlat
das
int3
(bad)
inc
inc
xchg
scas
fdiv
mov
jno
and
imul
jmp
and
popa
inc
xor
mov
dec
sbb
cmps
pushf
mov
xchg
push
call
pop
je
test
ror
mov
out
cli
daa
xchg
cli
and
rol
mov
in
inc
aam
aad
int3
mov
jo
aad
sub
cmps
xor
scas
es
mov
cmps
xor
scas
pop
int3
push
jmp
gs
js
adc
lods
and
or
push
cmps
outs
call
ins
popf
sub
mov
inc
outs
dec
lods
outs
inc
scas
xor
fst
push
or
or
fs
mov
aam
dec
pushf
mov
cld
dec
add
jns
jns
shl
mov
sbb
(bad)
mov
jmp
jo
push
inc
inc
mov
popf
xor
ss
ret
and
add
(bad)
xor
add
aad
popf
icebp
(bad)
scas
fs
fidiv
dec
push
push
adc
cld
mov
pop
adc
sub
(bad)
dec
(bad)
jmp
lea
neg
cmp
pop
dec
shr
mov
xchg
push
outs
dec
cmp
sub
pop
jmp
inc
pop
sub
aam
cmps
pop
jb
fst
pop
push
inc
push
outs
push
fild
movs
cld
mov
fidivr
push
scas
pop
add
push
adc
movs
pop
lods
leave
push
sbb
in
cmps
sbb
outs
mov
xchg
push
sbb
push
std
test
xlat
adc
and
(bad)
xchg
mov
(bad)
xor
xchg
jecxz
les
dec
inc
xchg
out
xor
fwait
stos
in
out
aad
inc
xchg
(bad)
imul
xlat
mov
mov
fs
ja
js
loop
in
fimul
imul
dec
xchg
iret
scas
into
test
(bad)
(bad)
mov
imul
push
xor
mov
mov
fcom
push
test
adc
ins
dec
xor
push
daa
cmc
int3
popa
add
jo
and
in
mov
jne
jbe
in
cmp
or
jecxz
xor
or
pop
mov
push
xor
outs
jnp
das
mov
push
dec
sbb
ds
push
ja
or
movs
int
cmp
mov
jg
scas
rcl
sar
push
xor
xchg
mov
or
cmps
xchg
xchg
cmps
icebp
add
fldcw
loopne
pop
mov
lea
arpl
les
stos
hlt
push
(bad)
jbe
jmp
hlt
push
and
dec
push
cmp
loop
fld
sub
xchg
inc
jo
mov
push
rcl
pusha
inc
rcl
jo
aad
jo
(bad)
test
retf
(bad)
int
sahf
outs
int3
mov
rcl
arpl
add
dec
pushf
cwde
add
xchg
(bad)
int
jle
scas
adc
inc
fld
cmps
xor
test
adc
shufps
shl
inc
out
mov
pop
inc
jmp
jns
jne
lock
mov
or
sti
dec
test
and
fld1
in
enter
pop
jnp
xchg
xor
movs
jae
jmp
cmp
or
dec
mov
cmps
push
xchg
cmps
call
inc
dec
push
jnp
jne
mov
jp
std
dec
xlat
lahf
lahf
in
dec
mov
popf
jns
inc
dec
jb
jno
jmp
(bad)
daa
jae
std
int
frstor
dec
or
sbb
push
jge
add
or
adc
pop
rol
dec
or
lods
nop
sub
(bad)
fcmovb
std
and
sahf
pusha
test
xchg
mov
and
push
out
test
add
sbb
dec
fmul
or
cmp
jo
loop
sti
scas
dec
test
stc
jecxz
dec
mov
and
mov
movs
mov
test
fnstcw
movs
add
lahf
jbe
pop
sub
js
xchg
fldcw
sahf
sub
or
jmp
inc
(bad)
xchg
dec
adc
lods
cmp
fcmovnb
mov
xor
loop
int
es
aas
loope
fdivr
loopne
add
stc
add
fdiv
retf
loopne
mov
sub
adc
cmc
lock
retf
sub
(bad)
and
jae
xor
sbb
iret
inc
adc
sbb
push
xor
push
or
fsubr
aam
or
stos
mov
adc
int3
pop
mov
push
pop
fs
xchg
icebp
add
shr
add
sub
scas
and
dec
sbb
sbb
(bad)
dec
movs
jae
(bad)
pushf
pop
push
repnz
call
stos
mov
mov
xchg
xchg
push
ror
mov
scas
cmps
pop
mov
call
dec
sub
mov
cmp
aas
or
sub
inc
push
inc
mov
icebp
dec
data16
sti
movs
and
pop
push
cmps
fs
stos
xor
test
fist
pop
mov
aaa
add
push
sbb
or
(bad)
push
outs
retf
push
outs
add
pushf
retf
lock
lock
fnstenv
aad
call
int3
mov
stos
sbb
add
rcl
ds
push
adc
jne
adc
sub
pop
pop
inc
lods
aad
dec
jl
adc
push
in
enter
outs
stos
inc
lods
daa
ds
xlat
inc
push
jecxz
adc
mov
mov
or
les
rol
xor
sub
cmps
xchg
leave
and
push
aad
neg
clc
jns
lahf
je
in
jmp
sub
jecxz
push
rcr
cmp
adc
mov
test
cmp
daa
in
fstp
mov
jo
sub
mov
jae
xlat
inc
bound
add
push
mov
ror
mov
int
leave
mov
add
popf
mov
retf
call
ins
sub
scas
into
mov
add
ret
adc
inc
dec
je
and
jne
xchg
mov
push
aad
daa
mov
cmp
cmp
ret
dec
shl
mov
cmps
mov
inc
push
je
scas
inc
icebp
sub
add
mov
pop
(bad)
or
and
mov
out
or
test
push
out
mov
stos
mov
pop
dec
cmps
cmp
sub
adc
jge
inc
adc
arpl
push
mov
ror
add
lock
jecxz
rol
dec
cli
adc
jb
iret
jmp
or
lahf
or
aad
lahf
cmp
xor
nop
mov
jmp
int3
push
add
lock
push
out
fucom
mov
fist
jecxz
stos
fadd
jge
xor
mov
int
xchg
frstor
mov
xor
shl
enter
jae
ins
sub
dec
dec
adc
or
jo
sub
xor
out
cmp
fs
retf
loopne
or
in
ret
in
in
mov
jb
popf
not
pop
sbb
mov
fsubr
push
or
cmp
popw
adc
stos
vmovsd
push
loopne
xor
(bad)
mov
push
mov
mov
ficomp
js
xchg
push
push
push
and
xor
fwait
loopne
add
lahf
outs
icebp
(bad)
in
retf
outs
arpl
mov
scas
jbe
sub
add
mov
fiadd
dec
jns
lea
rol
enterw
sar
das
out
sahf
sahf
arpl
loope
sahf
and
pop
pop
sar
cmp
in
jns
cmp
out
add
repnz
outs
pop
xor
sbb
cwde
sti
inc
jne
jle
xchg
inc
push
sbb
mov
mov
xor
xchg
cmps
xor
popf
xlat
mov
sub
add
test
inc
mov
cmovae
hlt
fs
int
icebp
xlat
mov
lea
sbb
xchg
bound
pop
test
fnstsw
shl
sub
cmp
inc
cdq
dec
lods
mov
sti
dec
push
jmp
fdiv
lods
xchg
pop
clc
or
shr
mov
sahf
shl
es
ins
(bad)
jno
fcmove
push
jl
inc
jmp
inc
sbb
xor
jge
ret
add
repnz
lahf
mov
cdq
push
retf
lahf
nop
lock
mov
imul
loopne
daa
(bad)
adc
sar
scas
mov
xchg
shl
jb
loope
mov
mov
lods
cmp
xor
in
jno
outs
(bad)
dec
aad
mov
mov
sub
or
repz
je
xor
pop
or
xchg
and
out
mov
stos
mov
aas
sete
fnstcw
mov
jo
mov
push
adc
inc
jnp
outs
push
int
or
jl
hlt
leave
cmp
jne
add
inc
sub
xor
scas
pop
shl
ret
push
cmc
cmp
fidiv
jns
and
inc
push
mov
mov
push
imul
ror
lods
mov
jae
xchg
les
pop
ss
cmp
loop
pop
(bad)
sti
ins
repnz
out
cmc
cmp
cmp
jp
mov
(bad)
aas
push
jnp
in
mov
xor
mov
lahf
jae
mov
or
cmc
jnp
jo
aas
jno
lods
cmp
or
imul
(bad)
inc
sub
ret
dec
nop
cli
je
or
test
inc
mov
or
(bad)
fwait
dec
out
cmp
push
push
jo
outs
outs
jmp
(bad)
add
ja
daa
mov
and
and
add
or
mov
inc
lock
loop
dec
jns
xchg
fimul
or
jmp
fimul
mov
aam
ret
mov
xchg
leave
pop
inc
stos
ins
mov
(bad)
je
pop
push
push
das
xchg
ror
aad
movs
fiadd
imul
sub
jg
jbe
scas
mov
mov
in
xor
pop
inc
xchg
int
ins
pop
mov
mov
and
push
xchg
retf
or
and
jl
inc
xor
and
pop
iret
outs
xchg
and
lds
scas
jecxz
arpl
xchg
sbb
les
inc
add
pop
xchg
mov
jge
adc
mov
rcr
ficomp
ret
dec
push
dec
es
xchg
shl
nop
or
pop
sbb
push
popf
aaa
jne
imul
ins
inc
(bad)
aaa
loope
shr
in
pusha
jle
mov
jmp
cld
add
fdiv
imul
xchg
nop
fwait
dec
mov
mov
mov
xor
or
clc
add
aam
mov
push
cmp
mov
mov
aas
and
inc
out
adc
inc
js
cli
sbb
fst
shr
pushf
outs
dec
out
ds
dec
push
and
mov
pop
scas
pop
fs
sub
pop
stc
ret
retf
adc
add
popa
je
loopne
(bad)
addr16
pop
mov
dec
mov
in
or
adc
or
inc
sub
dec
push
push
fs
jge
repnz
push
xor
cmp
jo
(bad)
stos
jmp
cmc
xchg
lahf
dec
add
ja
jne
in
pop
and
mov
(bad)
shl
outs
push
(bad)
sbb
in
push
inc
jp
xchg
or
inc
fdivr
inc
jmp
pop
call
jle
outs
dec
test
(bad)
mov
sar
cwde
daa
sbb
divps
dec
popa
loopne
sub
push
gs
pop
sub
in
cmp
ret
loope
int
adc
push
jle
mov
adc
dec
mov
xchg
(bad)
xor
repz
adc
(bad)
rol
inc
hlt
ret
sbb
in
xchg
add
test
xor
lods
mov
ret
sub
repnz
loopne
daa
hlt
dec
mov
dec
lds
jp
stc
and
pop
sti
sbb
jns
xchg
retf
inc
mov
pop
fneni(8087
jecxz
fwait
adc
jmp
jbe
xor
ds
mov
and
lds
and
loopne
inc
jns
rol
in
mov
push
fadd
lods
push
pop
(bad)
xor
pop
push
aad
loopne
jmp
in
sub
xor
sar
and
push
test
mov
mov
pop
mov
fs
mov
xlat
leave
lods
inc
sbb
inc
and
push
mov
repz
xor
inc
fs
push
mov
mov
jb
test
adc
scas
loope
les
out
sahf
cmp
pop
sbb
test
out
repnz
push
pop
jle
lock
push
inc
icebp
mov
pusha
jo
xchg
pusha
jo
xor
fild
ins
jg
mov
rol
adc
jnp
pop
jo
adc
test
shl
int
js
adc
outs
out
neg
test
add
loopne
mul
loope
mov
ins
mov
inc
mov
in
out
inc
or
neg
(bad)
jnp
rcl
jo
loope
mov
cwde
mov
mov
jno
loop
mov
das
out
pop
jo
aam
mov
add
jg
push
xchg
xor
cmp
pop
out
cwde
and
sub
cmc
dec
bound
inc
mov
xor
sbb
jge
mov
xlat
div
pop
xchg
xor
pop
dec
jmp
xchg
jg
mov
sahf
add
mov
gs
icebp
or
outs
mov
push
es
mov
bnd
jns
mov
(bad)
mov
test
test
add
or
xor
xchg
and
(bad)
mov
xchg
mov
(bad)
sbb
xchg
ins
push
cmp
sub
cmp
xchg
sti
imul
mov
mov
outs
pop
adc
jns
mov
or
xchg
lea
ja
sub
xor
test
mov
movs
jbe
mov
outs
jno
mov
ja
sub
xor
xchg
push
test
and
pop
pop
mov
push
adc
and
jg
xor
lsl
int
mov
and
fwait
jne
pop
ret
ret
fs
movs
sbb
dec
scas
fst
xor
out
inc
nop
(bad)
in
addr16
shl
daa
add
icebp
cmps
xor
jl
add
add
xchg
lods
jg
lods
add
idiv
or
sar
loope
int3
es
pop
cmp
add
push
out
mov
xchg
inc
and
jecxz
mov
movs
out
arpl
cmp
out
xchg
fstp
outs
mov
or
and
sbb
sbb
inc
push
mov
pop
xchg
fs
and
test
in
es
mov
movs
lock
lea
(bad)
dec
dec
jp
(bad)
xchg
sub
fimul
movs
inc
mov
xor
xor
sar
hlt
loopne
add
pop
not
or
mov
mov
adc
jo
and
(bad)
adc
dec
dec
lahf
adc
push
dec
sbb
popf
hlt
pop
popf
adc
inc
fnstenv
fmul
dec
rol
adc
in
mov
mov
imul
fs
sbb
xlat
std
hlt
dec
lea
jae
das
stc
fdiv
(bad)
xor
inc
sub
into
fs
je
sbb
fstp
or
add
inc
ret
cmp
pop
mov
mov
dec
adc
dec
mov
or
popa
inc
psrld
sub
jmp
adc
add
retf
jnp
aad
dec
xchg
and
clc
sbb
or
rcl
sbb
mov
out
mov
popf
into
xlat
bound
fmul
cld
dec
jmp
enter
popa
and
imul
cmp
(bad)
fst
xchg
in
(bad)
xchg
mov
(bad)
mov
cmp
mov
retf
add
jne
addr16
jle
das
ins
imul
in
mov
lea
cwde
aas
enter
pop
jae
or
pop
int3
lock
adc
retf
sub
enter
fisubr
and
dec
shl
xchg
test
push
lock
mov
cmps
popf
pushf
add
test
jnp
inc
sub
loopne
push
in
shl
xchg
fldcw
mov
push
clc
sub
cmc
imul
adc
ret
fstp
neg
pop
jmp
jb
mov
inc
sub
xchg
bound
or
xchg
mov
pop
out
ins
lods
lods
daa
pusha
repz
mov
or
xchg
mov
outs
inc
xor
mov
in
ret
(bad)
mov
fstp
add
and
ss
xlat
mov
add
(bad)
cmps
mov
add
sbb
retf
(bad)
icebp
imul
call
cmp
jmp
and
ror
mov
xchg
cmps
addr16
mov
(bad)
jecxz
mov
rcl
xlat
js
cli
xchg
sub
in
popf
aam
sub
fidiv
shl
sub
icebp
in
mov
int3
xchg
mov
pop
mov
into
popa
push
or
daa
mov
and
adc
jb
dec
jge
ja
enter
mov
push
gs
sub
mov
(bad)
jnp
add
jne
pop
(bad)
push
xor
xchg
xchg
stc
xor
mov
dec
or
loop
mov
sbb
aam
push
push
sahf
aad
push
stc
xchg
nop
dec
jmp
in
and
and
mov
mov
fadd
cdq
mov
rep
arpl
(bad)
iret
dec
push
loop
xchg
fbstp
jge
mov
push
jae
pop
movs
outs
push
fisttp
pop
test
loop
dec
adc
iret
(bad)
push
xchg
movs
inc
or
shl
mov
bound
(bad)
mov
mov
out
dec
mov
mov
shl
test
icebp
xchg
cmp
nop
(bad)
cmp
fistp
sahf
dec
push
scas
in
xor
adc
fwait
add
enter
call
dec
mov
fstp
add
mov
jp
in
scas
push
in
cmp
mov
add
jmp
jmp
jge
sub
retf
jmp
or
inc
inc
sti
scas
test
enter
cmc
out
jno
push
push
iret
std
and
and
and
cmps
mov
mov
cmp
and
adc
cmp
jle
in
lock
fnstenv
repz
xchg
inc
call
fild
xor
neg
inc
pop
cmp
and
cli
repnz
clc
shl
inc
loop
pop
mov
aaa
movs
push
les
cld
lea
xor
dec
mov
(bad)
(bad)
xchg
fst
loopne
lods
sbb
xor
and
push
sub
sbb
dec
lock
lock
stc
dec
imul
mov
mov
push
das
std
outs
sub
mov
push
sahf
xor
xor
push
leave
push
dec
inc
aam
dec
or
dec
mov
(bad)
jae
sub
into
in
stos
scas
mov
mov
cmp
sub
fld
xchg
stc
xchg
mov
and
pop
xchg
xor
xor
adc
out
add
dec
or
xor
mov
(bad)
mov
into
xor
ins
int
jb
les
push
or
push
gs
sahf
push
jno
fdiv
data16
push
xor
mov
inc
icebp
shl
rol
jo
aad
jo
fld
popa
ror
outs
jo
ds
shl
rcl
or
arpl
mov
mov
sahf
jo
cs
dec
pop
sar
pop
xor
pop
sti
xchg
rcr
dec
aam
and
ror
add
int
ret
pop
loop
cdq
or
mov
cmps
mov
das
in
(bad)
push
pop
popf
sub
sbb
sub
repz
xor
add
jae
or
cmp
mov
cld
push
rol
inc
mov
cmp
test
xacquire
ja
xor
sub
push
popa
shl
imul
mov
in
add
fcomp
mov
cld
xor
add
in
jp
(bad)
lds
in
mov
jbe
lods
mov
into
mov
xor
imul
xor
pushf
mov
inc
test
xchg
xlat
scas
push
out
hlt
cmp
adc
sbb
dec
mov
push
add
es
in
cmp
movs
sbb
pop
imul
adc
call
xchg
pop
sbb
push
push
pop
cmp
and
jb
neg
dec
lahf
dec
test
pop
sbb
loopne
out
add
xchg
mov
iret
pop
loope
jle
pop
aad
addr16
add
loopne
fimul
retf
mov
das
xlat
cli
lock
pop
mov
inc
loope
cld
sbb
das
bound
mov
dec
fsub
aas
mov
cmc
in
dec
aam
pop
test
div
inc
xchg
call
cmp
add
dec
ret
sbb
pop
cdq
dec
pop
sbb
jmp
cmps
xor
inc
pop
adc
mov
cmp
addr16
or
into
push
add
or
push
fsubr
cmp
repnz
jmp
mov
mov
dec
sbb
call
mov
ret
adc
rol
xor
jno
mov
leave
mov
jb
xchg
cmps
movs
jo
in
xchg
push
xor
stos
loopne
pop
or
aaa
sbb
xlat
popa
cmp
sub
push
inc
hlt
and
movntq
out
(bad)
and
or
cli
adc
mov
adc
je
and
shr
jno
xor
jnp
and
mov
xchg
inc
sbb
shl
aam
sbb
leave
jp
and
mov
sbb
(bad)
mov
stos
bswap
dec
outs
loop
outs
frstor
lds
or
gs
stc
mov
adc
test
push
outs
nop
push
iret
mov
xchg
xchg
pop
sub
rcr
and
xor
popf
ficom
imul
add
dec
pop
mov
or
gs
mov
ja
push
jnp
(bad)
enter
pop
shr
aam
push
push
test
xchg
dec
dec
clc
ss
xlat
mov
add
push
and
test
add
mov
pop
jno
sbb
(bad)
mov
jns
test
sbb
stc
test
dec
jmp
push
aas
mov
repnz
jns
push
xlat
mov
ror
cli
(bad)
(bad)
ja
xchg
mov
mov
xor
jmp
aad
inc
xor
jp
ret
lds
mov
inc
sbb
sub
lahf
lock
push
mov
loopne
push
cmps
sahf
call
rcr
sti
jg
inc
push
inc
sub
dec
dec
stc
icebp
ret
imul
and
lock
pop
and
mov
in
xchg
xchg
adc
xchg
mov
int
dec
push
mov
addr16
loope
lea
test
jo
cdq
sti
push
out
push
imul
add
xchg
xchg
cdq
inc
pop
into
fidivr
iret
and
ret
(bad)
and
mov
pop
mov
out
ret
stc
mov
inc
pusha
retf
jle
test
(bad)
std
fnstsw
cld
int
mov
xchg
inc
bound
aas
dec
stos
les
dec
sbb
test
cdq
mov
sahf
icebp
out
or
imul
jnp
mov
pushf
cwde
jnp
repnz
dec
xchg
cmp
sahf
mov
mov
xor
xor
cli
fistp
and
(bad)
sub
jne
push
sahf
jae
outs
or
aas
mov
(bad)
mov
out
inc
jl
add
mov
in
mov
jnp
cdq
and
not
scas
sbb
adc
ja
push
mov
adc
jmp
add
lahf
mov
ins
mov
or
ins
lock
pop
inc
push
fstp
inc
mov
and
clc
sbb
mov
outs
mov
mov
xlat
nop
or
push
or
mov
jp
fs
sbb
jecxz
int3
push
sbb
icebp
call
in
(bad)
(bad)
iret
jmp
out
aas
xchg
and
jle
popa
out
mov
mov
out
ror
xor
inc
xchg
aaa
mov
push
int3
rsqrtps
div
loopne
pop
sbb
repnz
jno
jbe
fcom
or
fsubr
cmp
and
fld
retf
loopne
dec
clc
dec
xchg
ss
add
clc
ds
dec
adc
jl
fldenv
or
or
in
test
jno
jl
out
or
cwde
outs
inc
push
adc
rcr
dec
dec
stos
mov
adc
mov
push
mov
mov
mov
xor
pop
scas
jb
into
mov
shr
test
jnp
(bad)
fwait
(bad)
pushf
test
mov
mov
add
cdq
pop
push
add
mov
xchg
into
or
ret
aaa
data16
push
daa
je
xchg
out
pushf
add
pushf
out
loopne
das
mov
add
stos
adc
pop
aaa
xchg
or
mov
aaa
dec
mov
and
pop
push
das
scas
outs
sahf
mov
mov
fsubr
in
aam
xor
lahf
xor
cmp
ret
pusha
test
and
mov
popa
aas
jno
xchg
cdq
outs
fidivr
arpl
test
xchg
lock
shr
cld
mov
cmc
and
bnd
mov
outs
test
fimul
cdq
cmps
add
cmp
cld
lods
add
stc
pop
lock
xchg
mov
xchg
jae
ja
pop
jecxz
test
icebp
jo
cdq
test
push
fst
sub
shl
push
jbe
mov
les
mov
cld
sbb
and
lahf
adc
cwde
retf
enter
leave
out
mov
data16
and
and
cmp
pop
mov
cdq
jp
jecxz
jp
add
add
pop
mov
js
ja
ins
inc
rol
ins
shl
in
adc
sbb
jle
aaa
int
mov
push
push
inc
jbe
sub
mov
mov
out
into
dec
jl
pop
out
or
add
fs
xor
cmp
mov
(bad)
cmps
test
mov
inc
inc
fwait
lds
les
mov
rcr
or
and
dec
pop
sbb
jecxz
cmc
add
add
ror
lods
push
ja
pop
test
in
mov
inc
icebp
cwde
popa
mov
aad
and
arpl
daa
mov
jnp
jbe
mov
retf
jne
cmc
mov
arpl
sbb
jge
test
dec
mov
fdiv
inc
mov
popa
inc
je
xchg
sbb
xor
mov
push
xor
mov
int3
std
mov
or
lods
cwde
addr16
loopne
out
dec
push
es
pusha
mov
adc
inc
cmc
(bad)
sbb
sbb
cwde
arpl
fs
lods
js
dec
pop
out
pop
or
sbb
rcl
outs
dec
das
and
shr
je
xor
pop
push
popa
ret
mov
out
pop
cmp
dec
ret
lock
xor
adc
mov
outs
jno
fidiv
xchg
pop
sub
mov
pusha
rol
jo
rol
pusha
pusha
rol
jne
ret
adc
rcl
arpl
and
in
push
jl
clc
mov
and
iret
xchg
mov
jo
mov
fisubr
mov
rol
add
inc
jno
aaa
inc
out
xchg
push
call
aam
sub
mov
push
inc
repz
shl
jmp
mov
jb
mov
mov
fnstcw
and
jmp
dec
mov
mov
push
cmp
ror
push
loope
or
inc
jns
popf
sbb
sbb
outs
fs
xchg
jo
jae
push
arpl
jo
or
stos
leave
int
inc
push
retf
nop
or
call
add
push
xor
mov
dec
adc
xchg
cmp
push
popa
rcl
sbb
lods
or
mov
cmc
cmp
push
and
test
fiadd
das
hlt
pop
dec
movs
sbb
mov
xchg
dec
in
nop
mov
scas
mov
call
imul
out
xchg
inc
sti
xor
adc
sbb
cli
dec
mov
and
test
mov
lea
jo
mov
sbb
cwde
mov
or
pop
jge
jge
lock
push
xlat
jb
xchg
fist
jmp
mov
vcvtss2sd
shl
pop
xor
popf
push
mov
and
push
inc
mov
and
sbb
fdiv
mov
pop
daa
push
xchg
adc
(bad)
pop
lds
mov
mov
cmp
pop
fisub
fnsave
scas
jne
addr16
mov
stos
out
add
adc
inc
add
adc
push
pusha
mov
ins
mov
xchg
mov
add
pop
rcr
pusha
mov
enter
xchg
inc
xor
mov
mov
and
mov
adc
xor
into
jmp
and
fwait
imul
ret
fiadd
lods
jge
les
pop
pop
std
jge
lea
addr16
adc
out
xchg
sbb
xchg
mov
lea
push
jno
loopne
int
mov
sbb
xor
adc
std
test
in
dec
rol
mov
jecxz
push
mov
and
fdivr
mov
xor
movs
ss
jns
(bad)
mov
jmp
adc
adc
inc
cmps
inc
shr
out
sbb
push
mov
js
jo
xor
xchg
loopne
popa
sbb
cmc
nop
sub
(bad)
aad
fcom
adc
test
aam
sbb
add
jle
icebp
fs
jb
test
mov
adc
or
das
push
mov
adc
ret
popf
mov
xor
js
test
loopne
adc
shl
loop
xor
ja
(bad)
retf
xor
lds
xor
inc
jp
popa
(bad)
lds
ret
test
inc
rcr
pop
gs
mov
out
pusha
loop
std
das
sub
dec
nop
fimul
shl
ins
fnstenv
push
sbb
adc
test
sbb
and
push
cmp
ja
std
(bad)
imul
mov
fsub
rcr
std
xchg
sbb
xchg
shl
out
mov
sbb
xor
pop
mov
addr16
jo
jge
xchg
mov
in
sbb
and
inc
ror
jae
mov
cmp
xor
mov
loopne
(bad)
xchg
xchg
cmp
mov
adc
mov
std
mov
xchg
out
push
jmp
xchg
fld
add
mov
sar
xor
lds
push
stc
fs
aam
mov
loopne
ret
fcom
add
cmps
ja
aad
daa
lea
pusha
lock
cmp
nop
push
adc
push
add
jg
adc
mov
fmul
dec
push
push
push
in
(bad)
pop
mov
jl
popf
je
lock
aam
fs
xor
push
outs
jmp
xor
jbe
mov
addr16
adc
in
ds
pop
push
(bad)
les
or
mov
push
sbb
out
test
movs
adc
sbb
jmp
jg
adc
jae
sbb
dec
jae
xchg
(bad)
loop
inc
push
or
stc
sti
sti
repnz
loope
inc
xlat
add
sar
mov
or
mov
jns
mov
push
arpl
fdiv
cld
shl
mov
inc
inc
arpl
cdq
mov
xlat
ss
cmps
(bad)
mov
pop
popa
dec
jnp
loope
xchg
jmp
add
cmp
lahf
retf
push
push
inc
call
(bad)
pop
lds
add
mov
mov
movs
or
arpl
adc
mul
loop
in
loopne
sbb
cli
div
popa
sahf
jle
jae
jge
ds
jns
mov
jae
into
pop
ffreep
inc
lods
xchg
mov
bnd
out
cmps
nop
mov
stos
enter
inc
(bad)
jae
movs
jecxz
lock
xor
imul
cmc
test
retf
lahf
jb
xchg
pushf
push
mov
fidivr
push
adc
mov
(bad)
mov
sub
sahf
in
jnp
retf
mov
mov
inc
cmps
xor
pop
jns
popf
lods
cmp
dec
(bad)
enter
fst
ret
sbb
inc
imul
sar
cmp
and
and
or
push
inc
sub
out
es
fisttp
stos
sar
jno
xchg
pop
mov
dec
sar
adc
jmp
push
pop
int
mov
adc
jno
mov
rdmsr
mov
add
xlat
push
es
add
mov
shr
xchg
cmp
adc
movs
repz
pop
(bad)
pop
inc
and
lea
cmp
inc
div
mov
leave
rol
pusha
imul
push
mov
stos
sub
mov
imul
mov
pop
icebp
xchg
idiv
(bad)
iret
retf
ins
(bad)
bnd
jae
scas
idiv
cmp
mov
scas
dec
lea
jmp
mov
push
shr
mov
xor
arpl
ret
test
mov
(bad)
fmul
push
mov
adc
adc
push
lods
push
pop
and
test
dec
aas
jecxz
pop
mov
shl
cmp
cmp
dec
out
in
add
addr16
inc
int3
mov
inc
mov
cli
lea
rcr
mov
aas
vrcpss
inc
dec
pop
xor
pusha
mov
cmc
lds
mov
xchg
imul
pusha
cdq
jmp
out
push
jl
scas
push
mov
cdq
xlat
mov
mov
js
ins
xchg
cmp
mov
pop
cli
scas
in
in
inc
xor
mov
push
test
jno
in
jmp
jecxz
add
or
dec
cmp
bound
fnsave
aaa
cmp
jnp
jge
lahf
cdq
dec
jecxz
push
imul
stos
data16
sub
push
sub
hlt
movs
jb
pop
rol
add
push
pop
nop
inc
and
pusha
or
clc
repnz
popf
test
or
jg
dec
push
aam
sbb
dec
xor
push
inc
daa
sub
adc
inc
inc
retf
cwde
sbb
test
xchg
ins
sbb
mov
into
outs
xor
ficomp
inc
jp
vmovups
fistp
call
dec
dec
mov
mov
stos
sbb
mov
imul
mov
fisub
add
fnstenv
(bad)
int3
adc
ret
outs
ret
fild
lods
jle
push
test
pushf
jmp
test
or
test
push
inc
mov
mov
out
and
jl
int
stc
sub
push
pushf
pop
adc
mov
mov
sub
pop
shr
arpl
adc
xchg
and
aam
ror
mov
pop
imul
(bad)
in
add
push
jbe
ja
out
cmc
sub
cmp
inc
js
dec
mov
arpl
xlat
xchg
loop
lods
ror
sahf
test
xor
cmps
mov
mov
jbe
mov
jecxz
xor
mov
adc
fwait
dec
add
mov
push
test
fidivr
jo
and
inc
out
stos
xor
cmp
lea
imul
rcl
mov
dec
cli
cdq
mov
jecxz
jmp
psadbw
inc
mov
test
test
jnp
adc
mov
ret
add
push
and
pop
dec
xchg
push
cwde
xor
xchg
push
sar
and
shl
iret
cld
loop
ja
lds
rcl
fwait
pusha
popa
js
sub
shr
ins
mov
leave
push
lock
mov
jmp
repnz
mov
(bad)
mov
pop
fnstcw
(bad)
lock
enter
in
stos
jns
inc
rcl
add
and
cdq
xlat
and
mov
xchg
loopne
or
xchg
mov
les
xchg
mov
inc
rol
cwde
xchg
mul
xchg
jp
mov
sbb
call
rcl
push
add
into
sar
dec
cmps
fadd
rol
clc
cmp
adc
mov
pushf
cmp
rcl
xor
mov
mov
je
imul
pop
xchg
movs
fistp
sbb
sar
aad
mov
push
cmps
xchg
adc
jge
push
adc
xchg
jae
leave
add
shl
fwait
pop
pop
js
push
jno
sahf
in
sub
pop
psrld
pop
sub
int
inc
sub
popa
movs
push
and
int3
jge
dec
movs
jle
inc
push
jb
xchg
push
push
push
pop
inc
div
cmp
repz
(bad)
sar
and
push
cmps
jl
xor
mov
mov
mov
pusha
add
mov
lahf
push
jnp
fild
mov
mov
adc
or
je
push
sub
pop
dec
cmps
mov
xlat
inc
push
push
shl
outs
mov
inc
stos
call
ja
lea
mov
cld
loopne
fyl2x
dec
xor
sub
(bad)
mov
out
jae
ss
push
(bad)
in
xor
push
jle
push
test
sbb
add
hlt
mov
adc
fidiv
xchg
inc
push
jo
pusha
pushf
inc
int3
in
fwait
push
dec
sub
cmp
push
wrmsr
pop
lea
or
cmp
scas
or
outs
mov
js
ret
mov
rol
loop
loope
xchg
inc
pop
xchg
ja
jno
jnp
aad
xor
adc
sub
xchg
pop
and
out
das
add
rol
jp
out
jmp
adc
inc
sub
fmul
into
scas
jmp
pop
ins
outs
add
add
loopne
inc
xchg
sar
popa
pop
jo
xchg
inc
push
loope
push
push
icebp
mov
xor
xchg
adc
and
loope
lock
shl
adc
jno
jno
xchg
jo
push
adc
xor
xchg
shl
xor
inc
adc
shl
shl
xor
shl
rcl
and
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
popf
pusha
lock
and
icebp
xor
fld
push
jo
mov
pusha
rcl
pusha
jo
xchg
adc
shl
adc
xor
ins
rcl
xor
rcl
jo
xchg
inc
xor
ds
mov
and
enter
ret
xchg
and
lods
imul
shl
pusha
cmp
bound
xchg
push
jle
and
bnd
xchg
ins
jo
xchg
rcl
(bad)
sti
inc
jp
aam
imul
pop
mov
xchg
xor
rcr
lds
stos
mov
and
sub
sub
mov
iret
xchg
lock
add
mul
sub
add
inc
xchg
clc
jle
or
push
dec
push
movs
mov
mov
and
js
sub
add
dec
js
imul
popa
icebp
sbb
repz
mov
push
test
mov
dec
test
push
mov
call
ret
repnz
ficom
loop
jae
cwde
loopne
(bad)
mov
or
add
sub
in
pop
fild
sbb
scas
add
movs
jnp
jl
pop
in
es
mov
sbb
jg
push
in
iret
in
sub
push
test
test
dec
iret
pop
or
repz
clc
call
movs
and
out
fidiv
popa
lods
retf
sub
es
jbe
sbb
mov
arpl
call
ja
ins
dec
scas
pop
sub
stc
lods
pop
cwde
call
adc
popa
pop
mov
pop
iret
or
xor
and
retf
cmp
push
mov
add
ins
adc
mov
xor
repnz
nop
pop
imul
lea
in
outs
fisttp
pushw
lds
fidivr
aas
loop
arpl
out
popa
aam
push
xchg
leave
mov
jle
in
fistp
dec
push
pop
mov
loop
pop
fsubr
dec
adc
lds
cwde
fidivr
jge
xchg
push
(bad)
cmp
cld
out
inc
jg
xor
sub
adc
xchg
cld
sub
adc
add
retf
retf
in
iret
out
ins
dec
jns
cs
mov
lods
ss
jno
out
adc
lods
daa
jp
or
cmp
ror
test
(bad)
clc
lock
jae
push
imul
xchg
pusha
jo
xchg
pusha
xor
dec
rol
inc
inc
rol
jo
xchg
and
mov
jo
lock
adc
nop
jae
(bad)
jb
mov
jg
inc
add
jb
sbb
add
repnz
push
jae
test
das
jno
(bad)
cmc
xchg
dec
jmp
into
(bad)
ficomp
xor
in
cmp
xchg
pop
inc
mov
in
int3
retf
lea
bound
xor
and
(bad)
repz
je
clc
adc
sbb
test
fcom
mov
out
push
inc
pop
shl
jbe
fidivr
nop
fisubr
inc
int3
jge
sbb
dec
add
cmp
pop
jae
sbb
into
sar
repz
xchg
call
xor
dec
mov
aaa
push
dec
push
cld
fadd
jo
dec
pop
sub
pop
das
pop
add
scas
jo
mov
mov
clc
or
daa
dec
jnp
cmp
sub
fisttp
jg
ins
ficomp
fabs
push
mov
mov
pop
jmp
pop
jmp
cmps
pop
push
outs
xchg
xor
(bad)
addr16
jno
pop
xor
ficom
(bad)
inc
(bad)
cmp
inc
fsub
inc
fst
and
mov
shl
(bad)
push
mov
xor
sar
pop
imul
fdivr
shr
and
daa
push
gs
mov
arpl
stos
cmps
pop
add
pop
push
icebp
xor
mov
mov
cmc
test
dec
and
and
iret
mov
xchg
mov
jns
dec
(bad)
mov
mov
xor
push
xor
sub
add
pushf
cld
ds
cmp
xor
movs
gs
in
lods
cmps
and
mov
and
sbb
dec
enter
retf
adc
or
mov
(bad)
jmp
jmp
push
jno
cmp
das
pop
jbe
or
mov
(bad)
fnstcw
cmp
hlt
jecxz
sbb
xchg
add
stc
mov
arpl
mov
cmc
and
xor
inc
lock
jbe
jns
fldenv
xchg
cmp
icebp
push
les
int3
dec
and
dec
add
cs
test
mov
cmp
xor
inc
shl
lods
call
(bad)
jle
dec
scas
mov
jl
pop
mov
ins
inc
in
pushf
call
hlt
(bad)
mov
cmp
sbb
xchg
mov
(bad)
fisubr
ins
mul
pop
lahf
push
daa
pop
xchg
jp
imul
jnp
repnz
mov
cs
xchg
sub
push
push
sub
les
mov
sub
add
and
fistp
mov
jmp
push
sti
cmp
xor
outs
cmp
mov
int
pop
in
iret
sub
aam
es
leave
push
add
push
call
pop
call
mov
div
shl
or
inc
dec
jmp
xlat
js
mov
cmp
sub
jle
dec
push
pop
add
cmp
sbb
int
or
inc
xor
cmps
sbb
or
out
enter
dec
std
retf
jge
pop
(bad)
xor
xchg
mov
(bad)
popa
inc
xor
jl
rcl
push
and
xchg
pusha
jo
add
rol
jae
test
push
(bad)
lds
call
adc
pusha
sbb
pop
popa
repz
les
pop
jae
cmp
xchg
cwde
sub
pop
scas
imul
push
or
lea
or
jge
outs
sbb
dec
push
test
lds
pop
mov
dec
jge
mov
mov
and
stos
cmp
test
mov
cmp
mov
fwait
push
fnstsw
mov
out
out
add
dec
xchg
sbb
push
add
in
push
aas
test
sbb
and
push
xchg
mov
outs
out
sbb
repnz
cmp
and
test
inc
mov
(bad)
cld
movs
xor
inc
(bad)
jmp
leave
loop
lds
or
lea
push
and
jp
xor
dec
or
(bad)
mov
push
cdq
cli
or
sbb
mov
idiv
cmps
xchg
shr
lods
xchg
jge
daa
shr
pop
loopne
test
cmp
inc
into
ins
stc
push
fdivr
cmps
push
scas
stc
mov
push
mov
mov
jns
dec
bound
loope
(bad)
in
fmul
mov
rol
aaa
push
jp
mov
dec
inc
jle
dec
xchg
in
movs
add
cmp
jns
mov
shl
aam
dec
iret
add
sbb
es
push
and
inc
jecxz
pop
sbb
adc
(bad)
adc
(bad)
fcomip
mov
cli
(bad)
dec
jmp
dec
fist
jo
data16
jb
pop
inc
push
std
mov
push
cs
sar
jle
fnstsw
push
jge
repz
xchg
repnz
cmp
mov
not
jg
add
adc
loopne
cmps
jbe
xor
lea
rcl
sbb
int
mov
inc
xchg
cwde
inc
int
jl
outs
jo
add
mov
pusha
and
xchg
jo
rcl
push
add
(bad)
(bad)
pop
ror
inc
arpl
mov
into
xchg
and
pusha
loop
push
(bad)
aam
fild
mov
outs
xchg
cmp
sub
stc
mov
mov
jmp
adc
fcomp
popa
shl
xchg
scas
inc
sub
jo
popf
mov
out
(bad)
aaa
stos
push
in
mov
push
shl
sar
dec
sbb
fs
sub
call
push
dec
xchg
popa
mov
add
outs
loopne
ins
iret
push
test
arpl
or
retf
xlat
popf
jmp
add
dec
push
mov
sbb
sti
jge
sub
jmp
mov
pop
mov
shl
stos
cdq
jg
movs
call
icebp
lahf
inc
test
mov
mov
push
clc
das
pop
stos
mov
movs
retf
dec
mov
sub
xor
and
mov
cwde
cmc
sbb
pop
dec
bnd
out
pop
mov
xor
sahf
dec
repz
inc
fwait
call
sub
jmp
pop
fwait
fs
pop
lds
lock
xchg
pop
leave
dec
in
push
jg
repz
pop
pushf
sbb
and
and
cmps
fxsave
cmp
push
call
addr16
sbb
addr16
mov
(bad)
sub
dec
dec
stos
lods
gs
sbb
add
inc
aas
push
pop
dec
dec
out
xor
and
pop
fwait
push
add
cmp
push
in
sub
aaa
xor
leave
mov
dec
stc
cmps
pop
nop
pop
mov
and
in
test
mov
loope
and
add
arpl
xchg
pop
mov
jle
mov
dec
dec
lock
jl
inc
cdq
loope
outs
iret
cwde
aad
jno
sub
in
pop
mov
xchg
jmp
imul
xchg
cli
lahf
and
cmp
not
mov
sbb
jo
addr16
jnp
stc
in
mov
jl
mov
inc
xchg
lahf
xchg
sbb
and
jo
xchg
push
push
shl
push
add
jo
rcl
jno
xor
add
jbe
fimul
inc
inc
int
xor
cld
jo
out
mov
test
pop
push
popf
rol
dec
loope
jg
inc
add
xchg
leave
jae
cli
cld
xor
iret
out
jg
fidiv
dec
cmps
jmp
sbb
icebp
mov
xchg
jae
repnz
jo
aas
sbb
and
pusha
cmp
lahf
push
in
mov
imul
arpl
dec
out
fcmovnbe
and
mov
(bad)
jns
sub
out
in
call
push
add
call
lock
lods
mov
test
or
(bad)
nop
mov
aas
aad
mov
lods
sti
iret
sub
jmp
int3
call
leave
xor
int3
dec
dec
xchg
jl
fidiv
xor
in
cmps
shr
mov
mov
sbb
sbb
and
and
cmps
mov
cdq
cmp
ja
scas
ret
out
mov
dec
inc
mov
movs
push
int
push
push
mov
and
mov
mul
fistp
xor
int3
pop
popf
paddd
stos
inc
jno
imul
jmp
inc
(bad)
push
push
or
push
push
mov
(bad)
cld
cmp
cmc
pop
mov
and
xchg
inc
ins
xor
pop
ds
mov
jecxz
jae
pop
mov
or
xor
adc
inc
call
push
shr
sahf
and
loopne
icebp
out
jns
cmp
cmp
mov
mov
push
pop
in
movs
(bad)
out
sbb
scas
dec
adc
and
mov
pop
jmp
add
dec
or
iret
or
push
ss
mov
loop
jo
jmp
jno
mov
test
mov
and
add
push
push
shl
mov
aaa
inc
sub
fwait
mov
xchg
jb
imul
xchg
(bad)
in
push
and
scas
pop
jmp
jno
pop
sbb
pop
xchg
adc
ss
daa
int
push
rcr
cli
fs
gs
cmc
xor
aam
bnd
inc
out
sahf
pop
add
mov
dec
loope
lods
inc
push
xor
mov
pop
cmp
in
(bad)
or
push
push
mov
jns
pop
mov
loopne
push
(bad)
jnp
jnp
loop
fld
mov
cmps
scas
jg
cmps
jl
pop
and
dec
push
jbe
pop
push
cmp
jl
std
xor
dec
mov
je
pop
(bad)
js
into
(bad)
xchg
jp
pop
pop
jmp
lds
out
movs
cmp
in
cmpps
jne
fld
inc
sub
lea
inc
sbb
lds
and
jmp
jge
pop
aad
push
in
mov
cmps
jle
and
dec
mov
sbb
call
and
inc
jmp
inc
inc
or
jecxz
out
popa
sbb
cmp
cmp
xchg
sar
inc
cmps
dec
xchg
mov
jg
cld
in
in
inc
push
into
out
push
xor
or
cwde
push
adc
pop
mov
clc
or
aas
test
xchg
retf
not
pop
mov
popf
jp
pop
lea
sub
pop
add
jge
jo
cld
sahf
ret
mov
pop
xchg
inc
mul
push
push
sub
(bad)
icebp
xchg
push
(bad)
mov
es
inc
push
cmps
sbb
stc
shl
test
daa
mov
fadd
rol
pop
sbb
dec
cdq
sub
repz
push
das
int3
add
mov
loope
int3
test
call
sahf
pusha
loopne
imul
call
push
in
clc
cmps
dec
lods
pop
popf
movs
jo
cmp
jo
cmp
retf
inc
jbe
pop
out
lods
xor
mov
aam
fld
ins
push
repz
jne
mov
mov
pop
push
and
pusha
pushf
and
mov
test
int3
test
stc
das
ins
adc
xor
mov
imul
test
cld
movs
repz
push
or
jg
jne
ret
mov
adc
or
inc
movs
mov
adc
(bad)
xor
adc
inc
mov
and
xor
push
sti
(bad)
sbb
cmp
imul
sub
and
xchg
jo
sbb
imul
call
(bad)
mov
scas
fiadd
add
mov
mov
rcr
dec
retf
sti
ret
mov
mov
(bad)
push
pop
bound
cwde
hlt
push
call
or
hlt
js
push
sahf
jge
out
jae
xchg
cs
inc
inc
push
jle
mov
mov
push
pop
jb
stc
jbe
call
cmp
test
cmc
mul
jnp
les
ret
sub
bound
adc
or
add
retf
mov
jne
retf
arpl
mov
xchg
sbb
cmp
xchg
inc
or
cs
jnp
sbb
and
call
fdivr
aaa
fwait
cmp
aam
sub
enter
call
xchg
loope
adc
push
pop
add
ss
fidivr
pop
aad
test
das
mov
add
jl
and
adc
add
pop
sub
retf
mov
sub
xchg
xor
mov
test
add
cmp
xchg
pop
stos
fiadd
(bad)
fwait
sub
jmp
and
add
or
adc
imul
and
(bad)
mov
adc
cmp
push
push
fst
and
scas
mov
mov
pop
cli
cwde
mov
stc
das
and
push
retf
(bad)
aas
xor
int3
or
sbb
std
pop
in
ror
cmp
adc
stc
idiv
es
sub
and
mov
fstp
dec
and
leave
mov
test
dec
jo
sub
and
jb
clc
mov
add
adc
(bad)
mov
dec
pop
sbb
inc
jp
push
js
inc
sbb
add
xor
enter
(bad)
popa
xor
mov
pop
leave
(bad)
arpl
imul
push
retf
aas
mov
jmp
push
mov
or
xor
mov
out
inc
xor
jle
push
retf
ins
pop
(bad)
cdq
dec
pop
dec
jmp
and
jle
push
xchg
dec
mov
movs
ret
sub
fsubr
sbb
cmp
loop
repnz
ret
sub
mov
gs
aam
das
xlat
mov
aas
hlt
sbb
fimul
adc
jmp
jmp
lods
ret
into
std
daa
push
inc
loopne
dec
sub
(bad)
(bad)
les
mov
inc
(bad)
cmp
lahf
outs
outs
ret
ds
loopne
mov
jnp
loope
dec
out
jae
mov
cs
cmp
fcmovb
xchg
fstp
not
movs
out
adc
movs
and
inc
cmp
mov
dec
xchg
mov
inc
sub
outs
sbb
sti
xor
inc
inc
movs
xchg
sub
pop
das
clc
and
into
push
lea
or
and
dec
dec
sbb
fidiv
loopne
jg
cmp
fpatan
or
mov
inc
mov
icebp
frstor
xchg
call
or
xchg
fadd
fiadd
loop
ja
retf
push
(bad)
jp
inc
push
push
push
cs
push
adc
or
in
pop
sub
icebp
pop
ins
sbb
iret
frstor
adc
cmp
in
shl
loope
or
jae
inc
adc
scas
retf
add
pop
pop
lock
mov
or
cmp
std
sub
hlt
and
mov
outs
jecxz
mov
dec
(bad)
mov
leave
jnp
mov
(bad)
mov
(bad)
jmp
sub
fs
lods
call
cmp
fidivr
aas
and
pop
jp
test
mul
outs
imul
dec
ds
push
in
mov
je
inc
add
push
es
shl
adc
cmp
cmp
and
mov
fdivp
fdivr
pop
adc
cs
xlat
jno
or
rcl
sar
out
dec
sub
or
movs
fwait
push
push
mov
aas
cmps
fcomp
stc
call
(bad)
jnp
shr
enter
movs
out
scas
sar
mov
fs
dec
mov
dec
dec
lds
dec
call
shr
pop
idiv
(bad)
sub
mov
push
xchg
mov
enter
nop
pop
out
jmp
stos
jnp
jp
sbb
xchg
jl
mov
cmp
aad
outs
sbb
push
outs
push
mov
push
pop
in
repnz
inc
adc
iret
push
push
mov
add
or
ficom
ja
mov
jbe
jl
aam
push
cmp
bnd
xor
scas
movs
cmps
push
stc
rol
inc
in
fistp
pop
inc
mov
int3
adc
mov
dec
push
outs
mov
push
pop
(bad)
cli
sahf
add
inc
popa
dec
scas
cmp
mov
or
iret
clc
dec
jbe
dec
imul
popa
jmp
jge
scas
pop
popf
pop
pop
or
and
imul
enter
sub
jnp
mov
pop
(bad)
out
push
(bad)
xor
fisttp
imul
js
add
movs
scas
out
movs
mov
mov
retf
lock
xor
sub
and
cwde
push
jae
lds
(bad)
shl
sbb
push
dec
mov
xchg
and
inc
dec
in
cmp
inc
lea
retf
lahf
mov
in
or
and
mov
imul
leave
xor
icebp
out
mov
dec
push
push
pop
daa
jge
fstp
pop
jecxz
stc
test
push
test
lods
sub
stos
repz
push
pop
dec
dec
xor
mov
pop
dec
out
and
adc
sbb
add
mov
or
cld
mov
adc
pop
sbb
mov
dec
jp
mov
xor
add
out
xor
xchg
dec
add
cdq
loopne
jmp
es
ret
stc
in
xchg
shr
inc
push
jecxz
mov
mov
dec
arpl
and
jnp
sub
dec
mov
pop
or
into
push
neg
push
js
outs
xor
fcmovbe
pusha
sub
jle
or
or
push
xchg
cmp
mov
sahf
sar
inc
xchg
jns
out
clc
sbb
mov
or
sahf
(bad)
sub
add
rcl
jo
loope
pusha
jo
xchg
jo
rcl
gs
cdq
jno
fisttp
les
outs
jg
inc
xor
jl
test
push
retf
add
or
add
jecxz
dec
aad
pop
gs
xchg
dec
adc
aam
and
fiadd
jno
cs
mov
adc
out
imul
dec
mov
dec
data16
add
cmovno
test
mov
dec
rol
rcr
push
call
or
jmp
xchg
neg
jg
icebp
outs
ins
mov
aaa
fndisi(8087
fiadd
popaw
call
add
data16
xchg
aad
or
mov
lods
sbb
std
int3
add
fcmovbe
pusha
push
cwde
popf
xor
mov
lods
push
mov
xchg
rcr
add
push
lock
sti
or
jmp
add
scas
xor
pop
dec
cld
xchg
imul
ds
jae
in
push
mov
jnp
or
outs
cld
mov
(bad)
and
cmc
out
push
imul
in
jns
in
stc
xor
leave
ficom
push
or
add
add
inc
shr
sub
aas
add
and
mov
jge
xchg
aam
adc
pop
or
sbb
jle
out
mov
pop
add
mov
in
bound
lods
jp
inc
nop
sbb
sbb
imul
adc
push
sub
mov
or
sub
pop
call
cmp
shl
push
jmp
push
aas
fadd
push
call
test
hlt
ds
out
hlt
(bad)
mov
fwait
dec
adc
sub
add
iret
lea
in
or
xor
repz
out
repz
fist
scas
imul
in
ror
sbb
cwde
aam
dec
xchg
and
repnz
out
cmps
mov
add
inc
cmp
scas
sub
iret
loopne
shl
mov
jb
rol
jnp
sub
pop
mov
push
sbb
das
int3
dec
or
fist
jle
inc
xchg
ins
dec
imul
test
je
xlat
jl
rol
mov
push
mov
aaa
rcl
pop
test
stc
jnp
cmovbe
inc
cmps
test
jbe
fs
rcr
inc
sub
pushf
and
xor
xor
in
fstp
or
pop
inc
mov
scas
lea
retf
retf
(bad)
and
adc
pop
out
push
push
in
and
mov
pushf
xor
aad
jmp
mov
pop
adc
or
repnz
mov
sbb
call
pushf
push
cmp
test
pop
inc
sbb
ret
mov
inc
xor
rol
jb
mov
call
les
je
sub
push
lods
push
loope
dec
rol
(bad)
frstor
nop
into
sbb
imul
push
arpl
(bad)
mov
lahf
add
into
shr
or
inc
jmp
push
push
sub
dec
push
sbb
cmp
dec
out
in
dec
or
adc
out
out
or
(bad)
movs
imul
adc
cmps
stos
punpckhbw
outs
cmps
adc
xchg
mov
jle
or
ficom
(bad)
jnp
or
test
sub
cmp
repnz
inc
jge
push
jecxz
inc
ds
out
add
pusha
in
popa
outs
aam
mov
adc
jae
cwde
push
mov
push
test
mov
xchg
mov
mov
ins
sub
and
dec
adc
xor
(bad)
mov
add
xchg
paddb
imul
mov
int3
aas
mov
in
enter
mov
dec
jb
icebp
aam
xchg
mov
jns
or
pop
into
std
fcomp
fsubp
scas
hlt
push
retf
scas
(bad)
pusha
mov
sbb
scas
jno
(bad)
mov
std
(bad)
fmul
ret
inc
xchg
mov
add
xchg
mov
mov
add
push
out
and
xchg
inc
gs
add
in
and
push
retf
mov
dec
jnp
or
jb
scas
repz
mov
fdivr
retf
mov
fsub
lods
sub
push
sub
movs
shl
xor
push
add
gs
mov
push
jb
hlt
(bad)
rcl
cs
mov
cmp
jmp
cmps
arpl
icebp
fxch
loop
sti
outs
pop
test
out
in
dec
fcom
fistp
cmps
mov
adc
inc
jecxz
hlt
gs
out
lds
aas
mov
mov
pop
inc
shl
or
imul
pop
mov
repnz
jbe
jne
icebp
jl
mov
fwait
mov
pusha
dec
lahf
inc
and
pinsrw
cmp
dec
inc
test
outs
jns
jg
sbb
mov
push
adc
xchg
nop
leave
in
mov
stos
jb
out
sub
imul
ins
pop
xchg
jb
push
adc
aam
jne
ja
add
das
sbb
sbb
enter
jle
ins
ins
xor
sbb
and
cs
jmp
fist
xchg
fdivr
adc
das
pop
add
loope
pop
mov
imul
shr
adc
bound
cmp
pop
in
cmp
popa
cli
sub
sub
mov
and
jns
mov
outs
xchg
cmp
dec
adc
add
aaa
aas
shr
sbb
into
repz
adc
and
pop
mov
jmp
mov
shr
out
sbb
xor
cmp
outs
cmp
jae
sub
jnp
les
cmps
outs
js
push
push
pop
dec
mov
call
mov
mov
ret
ss
dec
dec
jno
push
push
inc
fistp
inc
out
push
ja
jge
mov
ss
imul
add
ffree
jns
mov
cs
xchg
sub
mov
call
in
xchg
fsubr
(bad)
(bad)
mov
shl
pusha
loop
mov
and
pop
ja
es
nop
int3
aad
fnstenv
cmp
outs
lea
jb
jne
jb
jge
adc
mov
adc
mov
mov
(bad)
pop
in
and
stc
xchg
jge
push
or
xchg
pop
jmp
repnz
pop
inc
xchg
xor
test
jbe
dec
or
stc
clc
mov
adc
mov
fisttp
mov
xchg
and
inc
sar
fld
popa
pop
cmc
xchg
sbb
xchg
(bad)
and
xchg
js
js
xchg
push
outs
cwde
cwde
mov
mov
push
retf
sub
and
mov
and
out
femms
mov
or
cs
push
cmp
fwait
sbb
enter
fbstp
les
jae
lods
cdq
mov
inc
mov
fisubr
jae
pop
adc
cwde
mov
push
sub
push
pop
jge
add
pop
jnp
mov
test
enter
call
icebp
fdiv
cli
jl
push
jge
retf
cmp
ret
shl
pop
add
popa
mul
(bad)
xadd
cmp
iret
inc
sbb
retf
icebp
arpl
cmps
leave
jl
gs
icebp
push
iret
sub
mov
mov
outs
pusha
xchg
outs
outs
shl
ins
mov
and
lds
and
call
rol
add
out
in
mov
xor
add
repnz
xor
pop
push
rcl
loopne
pop
test
call
adc
in
push
inc
and
pop
fs
mov
stos
mov
xchg
mov
mov
shr
push
ss
xchg
(bad)
jmp
jae
xor
fdiv
push
out
cwde
inc
jns
cmps
xchg
adc
add
xchg
repnz
mov
xor
add
aad
in
mov
add
push
inc
loope
pusha
and
and
rol
je
fiadd
ins
fisttp
jne
rcl
inc
rol
adc
enter
fdivr
mov
fld
mov
dec
out
in
add
sub
pop
jecxz
inc
pop
daa
inc
adc
ja
int3
adc
push
ret
jbe
add
(bad)
fld
mov
cld
rol
push
mov
sbb
inc
xlat
mov
add
(bad)
mov
vpsraw
xor
push
push
stc
shl
inc
jge
stos
dec
stos
dec
bound
adc
jmp
inc
push
push
mov
cmc
lock
jl
hlt
dec
fdivr
imul
mov
call
pop
inc
fstp
shr
push
jecxz
cmp
add
repnz
lds
aad
xchg
pushf
pushf
jl
cmps
outs
xor
push
aaa
fcomp
sub
pop
xor
cmp
or
dec
call
sbb
popa
xchg
xor
mov
jmp
pop
(bad)
dec
inc
mov
add
push
jns
xchg
mov
iret
adc
cmps
aaa
mov
retf
movs
xchg
test
popa
sub
test
and
mov
cs
sub
push
fmul
inc
repz
test
mov
mov
pushf
das
fnstsw
pop
repz
or
(bad)
xchg
dec
bound
mov
pop
adc
push
mov
adc
sbb
into
(bad)
shr
cmp
mov
scas
push
cld
xchg
icebp
sbb
and
rol
sahf
out
jmp
sti
out
les
mov
stc
clc
jecxz
add
jmp
lea
sbb
sub
jg
out
inc
popa
pop
inc
add
add
ret
test
popf
jg
sbb
adc
(bad)
cli
mov
cmp
dec
xchg
xor
sbb
loop
enter
iret
stos
(bad)
jne
jge
cmp
fldcw
pop
jp
(bad)
cmp
jo
jecxz
outs
xchg
stc
or
dec
sbb
dec
cmps
jns
inc
scas
lea
lods
std
fbstp
pop
xchg
data16
pop
push
addr16
lods
out
lods
daa
jecxz
bound
fidivr
daa
rol
xchg
dec
das
jae
fist
sub
mov
cmp
push
bound
retf
and
inc
call
sub
sbb
cmp
mov
mov
(bad)
pop
mov
mov
add
enter
mov
faddp
push
lods
shl
push
mov
jnp
mov
xor
ins
rcl
and
icebp
mov
adc
and
rol
addr16
imul
pushf
outs
gs
outs
jo
ds
shl
loope
fwait
push
adc
mov
popf
int3
dec
(bad)
adc
adc
adc
imul
aaa
fwait
out
scas
and
sbb
sub
shr
cmp
idiv
pop
mul
aas
cmps
lods
mov
sub
into
pop
push
mov
cdq
inc
xchg
(bad)
aad
sbb
inc
jae
imul
xor
jl
test
sub
mov
inc
xchg
inc
mov
out
retf
call
sbb
mov
cld
push
mov
cwde
mul
imul
jns
sub
mov
ficomp
push
pop
add
sbb
inc
mov
jo
xor
jle
mov
mov
lods
pop
pop
in
jo
jne
repnz
dec
test
ret
sbb
in
cmc
(bad)
lea
or
cli
pop
cld
pop
push
nop
leave
mov
xchg
lock
int3
rcr
imul
adc
fisub
mov
push
or
ror
scas
mov
in
jmp
js
xchg
add
xchg
rcl
shl
jne
pop
dec
mov
into
imul
or
imul
push
jb
dec
js
clc
lock
add
sbb
leave
push
adc
pop
mov
adc
mov
out
jle
mov
or
mov
adc
aaa
and
xor
adc
mov
(bad)
std
popf
pop
call
retf
jmp
and
add
pusha
movs
orps
dec
and
pop
pop
mov
or
in
ret
out
jl
gs
lock
imul
xor
and
jo
ror
cdq
int3
pop
dec
dec
mov
ins
sub
or
xchg
aas
stc
inc
fcmovu
mov
fild
iret
imul
out
xchg
retf
mov
scas
dec
pop
(bad)
xchg
pop
fnsave
lds
jnp
int
mul
jne
adc
sub
enterw
and
inc
or
push
cmps
ds
lods
fmul
sahf
(bad)
cwde
test
xchg
cli
lock
sbb
(bad)
pop
into
fbstp
cmp
ret
xor
dec
mov
sti
mov
adc
jne
mov
jle
xchg
sbb
fwait
dec
lsl
jns
stc
ins
mov
(bad)
(bad)
push
mov
out
sbb
dec
sub
pusha
test
movs
sbb
mov
int3
imul
mov
shl
fdivr
xor
add
cmp
fs
mov
adc
or
sub
mov
leave
dec
jl
call
pop
inc
or
daa
mov
(bad)
pop
(bad)
jo
adc
(bad)
(bad)
push
cmp
mul
aas
cwde
inc
sbb
mov
adc
out
and
jg
xchg
xchg
jno
rol
pusha
push
icebp
xor
aad
pusha
popa
rol
imul
push
xor
ins
lock
sar
ret
fwait
xchg
movs
repz
out
mov
icebp
clc
das
adc
ss
sbb
ins
push
daa
mov
cmp
mov
mov
call
pop
ror
jbe
lock
push
jg
aaa
fiadd
shl
sub
mov
cmp
aas
jle
repz
cmp
aam
xchg
aas
popa
cwde
inc
jb
std
dec
retf
or
cwde
cmp
cmc
jo
adc
and
inc
cs
popa
or
pop
addr16
clc
retf
mov
fmul
jecxz
js
retf
(bad)
stc
movs
into
pop
ffreep
pushf
rcr
pop
test
add
movs
fwait
add
mov
cmp
div
int3
enter
jnp
and
imul
ret
mov
dec
sbb
icebp
repnz
std
fnsetpm(287
inc
shl
xlat
loopne
xor
mov
gs
inc
xchg
lods
xor
(bad)
push
or
lds
mov
dec
dec
cmp
loop
mov
test
mov
jae
pusha
in
sub
mov
imul
sub
jmp
pop
push
sahf
data16
scas
mov
outs
int
inc
pusha
xor
aam
lods
add
inc
dec
jbe
imul
and
push
inc
add
or
and
mov
jp
dec
or
or
push
ds
cmps
cmp
fs
jbe
in
into
pop
inc
iret
add
add
imul
into
mov
lahf
dec
push
rcl
mov
xor
xchg
hlt
cmc
add
mov
xor
(bad)
out
sbb
inc
sub
mov
jno
sar
adc
mov
xchg
popf
lods
jo
add
rcl
dec
jmp
lahf
push
test
out
ror
xchg
mov
fdiv
repnz
jmp
mov
xchg
jl
popf
jne
xchg
push
dec
aad
loop
rol
pop
fwait
push
mov
out
dec
push
mov
add
(bad)
fld
(bad)
into
retf
shl
xor
ja
fild
and
xchg
loop
push
shl
jecxz
xchg
inc
pusha
leave
xchg
mov
dec
(bad)
push
gs
sbb
into
pop
lods
fwait
cs
les
add
xchg
call
sar
sub
mov
sbb
(bad)
jnp
jno
in
push
rcr
push
or
loop
jmp
xor
fdiv
push
movs
xor
fimul
jns
xchg
out
jg
ins
stos
cmps
adc
pop
mov
sbb
and
or
mov
and
je
push
inc
bound
cmp
stos
mov
daa
sar
out
push
call
shl
dec
jle
retf
in
jecxz
loopne
icebp
pop
pop
sti
dec
fucomp
movs
in
fsubr
mov
push
mov
pop
shr
in
inc
mov
dec
xor
xor
xchg
inc
jnp
lods
mov
shl
add
pop
shl
jecxz
movs
clc
xor
aas
mov
mov
mov
fbld
imul
scas
xchg
inc
pop
mov
and
lock
or
out
push
mov
push
test
push
jmp
xor
pop
adc
fs
xchg
pop
jmp
sub
lea
push
sti
nop
cs
lods
js
popa
dec
shl
lock
out
jmp
lock
sub
mov
push
sbb
mov
adc
sub
sbb
fcmovu
pop
pop
dec
mov
loop
enter
pop
imul
jecxz
loope
push
(bad)
pusha
mov
and
ret
outs
out
(bad)
adc
or
outs
sbb
mov
cmp
clc
mov
movs
outs
fcmovnb
in
cmp
int
sbb
faddp
jge
test
fisubr
sbb
xchg
xchg
and
aad
mov
js
push
sub
loopne
mov
cld
test
shl
rcl
xchg
int3
add
pusha
shr
and
inc
iret
push
mov
mov
push
push
xchg
not
sahf
jp
fdivr
push
lea
hlt
mov
mov
jae
push
cmp
mov
xor
push
popa
jno
idiv
pop
jecxz
loopne
xchg
cmp
popa
fst
lahf
push
jo
pusha
push
nop
cwde
jle
mov
popf
xchg
lock
dec
cli
sahf
push
push
call
pop
call
addr16
mov
inc
and
sub
cdq
cmp
pop
cli
pop
push
push
mov
add
out
jmp
out
sub
movs
sbb
lahf
shl
neg
inc
fnstsw
add
mov
cli
mov
adc
cmp
js
xchg
icebp
inc
out
push
cmp
es
and
add
dec
adc
add
adc
ror
push
loope
aam
loopne
adc
in
popf
fst
sub
adc
push
fst
inc
dec
mov
push
xor
sub
cmp
test
dec
std
inc
scas
inc
adc
(bad)
fisubr
mov
shl
adc
shr
bound
push
mov
das
hlt
pushf
xchg
mov
sbb
mov
add
cdq
(bad)
or
cmp
in
mov
pushf
gs
lea
sbb
mov
outs
and
inc
sbb
sub
psrad
cmp
mov
pop
xchg
and
mov
fcomi
stos
xchg
adc
rol
dec
xor
stc
pop
into
cmp
xchg
xor
xchg
adc
test
ret
aad
mov
mov
push
mov
jns
jb
dec
shr
cdq
xor
outs
int
loop
outs
call
cmp
mov
(bad)
mov
repnz
popf
mov
js
pop
inc
retf
cli
xchg
inc
sahf
push
cmp
sbb
inc
xlat
push
xchg
iret
cli
fst
pop
mov
ins
shl
mov
mov
leave
sar
mov
ss
jg
push
xchg
cdq
cli
mov
mov
jg
mov
pop
cmp
pop
inc
jecxz
popa
hlt
inc
sbb
lahf
adc
sub
cmc
push
in
inc
cmp
push
pop
fisttp
(bad)
imul
out
adc
jb
aaa
ja
pop
ret
sbb
adc
fs
push
add
daa
jmp
sub
xchg
je
mov
arpl
mov
popf
xchg
add
cmc
aam
adc
mov
mov
sub
call
mov
jo
les
pop
and
xor
test
push
nop
loope
lods
push
jg
cld
push
ins
xchg
movs
iret
in
mov
xchg
popa
bound
into
cmp
pop
jecxz
inc
cmc
std
xchg
xchg
dec
je
cdq
push
push
dec
lahf
ss
lea
cld
mov
(bad)
aam
or
test
xor
sub
movs
mov
fmul
mov
mov
push
push
jo
pop
mov
in
cmp
popf
and
in
or
mov
out
dec
mov
add
sbb
fcmovne
aad
js
pop
and
xchg
arpl
cdq
push
test
mov
je
xor
fild
repz
jp
(bad)
mov
call
data16
or
popf
mov
int
jmp
shl
cmps
ror
xor
mov
mov
movs
(bad)
mov
add
xchg
fwait
in
mov
pusha
xor
adc
push
das
pusha
pop
pop
mov
adc
inc
in
xor
mov
xchg
ins
sub
aam
or
mov
xor
fdecstp
and
mov
jnp
and
stc
mov
fs
push
imul
and
aaa
shr
xchg
pop
ficomp
adc
mov
data16
mov
xor
mov
lock
xchg
les
bnd
ds
cld
popf
mov
ins
pcmpeqb
xor
xchg
loopne
rcl
push
test
inc
jo
mov
inc
loope
and
mov
and
xchg
rcl
xchg
xor
rol
push
mov
jno
mov
loope
rcl
shl
popa
lock
add
xor
loopne
popa
xor
mov
lock
shl
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
pusha
outs
jo
adc
shl
pusha
rcl
pusha
pusha
xor
jl
rcl
jo
xchg
pusha
jo
xchg
pusha
jo
loope
and
mov
xor
and
loope
pusha
pusha
rcl
pusha
jo
xchg
and
mov
and
icebp
mov
inc
rcl
jno
(bad)
dec
jo
test
adc
cmps
push
bound
nop
bound
mov
ds
js
mov
stos
vmovdqa
sub
xor
adc
xchg
jno
iret
mov
xchg
vmread
out
lods
mov
xchg
mov
mov
push
xor
push
mov
rcr
clc
aas
mov
data16
mov
bound
lea
sbb
fs
cwde
(bad)
cdq
cwde
cmp
das
fnstcw
cli
add
xor
arpl
popf
cmp
(bad)
popf
xor
and
movs
mov
mov
lock
aaa
jae
and
push
add
xor
pop
mov
aad
and
rcr
or
dec
pop
stos
call
mov
mov
pop
push
mov
pop
test
sbb
ja
mov
lods
xchg
or
mov
sti
ficom
fimul
jo
cwde
nop
neg
push
inc
in
cmps
and
mov
pop
lock
fdiv
jle
pop
mov
(bad)
adc
sub
or
hlt
pop
add
arpl
neg
repz
je
icebp
cmp
cmp
mov
sbb
clc
pop
push
sbb
mov
dec
call
jecxz
push
retf
(bad)
(bad)
adc
xchg
sub
int
into
inc
cmps
xchg
adc
push
ret
mov
leave
popf
cmp
pop
push
je
cmp
aad
dec
or
test
imul
sbb
mov
bound
retf
xchg
rcl
test
dec
loop
fstp
pushf
jmp
test
inc
fcomp
or
shr
pop
das
test
es
add
mov
cmp
and
ret
push
or
adc
mov
cmp
in
popa
pop
push
fcom
movs
cmp
pusha
jbe
push
jle
xchg
ror
pop
and
push
jge
cld
jecxz
rcl
mov
bound
stos
xor
frstor
xchg
cld
xor
mov
push
adc
addr16
push
(bad)
or
xchg
neg
inc
dec
adc
xchg
inc
test
add
xchg
jnp
out
inc
pop
ret
inc
jge
or
mov
(bad)
jp
mov
pop
adc
sbb
mov
cli
inc
jae
lods
jg
rcl
jb
jnp
xchg
ja
lods
dec
inc
mov
pop
jo
push
mov
fyl2xp1
xor
lods
mov
in
pop
jbe
or
pop
cmp
inc
jo
test
scas
mov
mov
inc
sar
jo
xchg
jno
loope
push
inc
add
jo
icebp
icebp
inc
push
ret
loope
jno
mov
push
push
mov
ret
or
inc
add
lock
loope
cmp
pop
shl
shl
mov
or
out
mov
in
cmps
pop
pop
sbb
inc
ror
or
lods
xchg
sbb
cmps
xor
or
arpl
sbb
bound
mov
pop
jl
sbb
stc
dec
sbb
xchg
add
push
shr
sbb
ds
sub
cmps
mov
(bad)
(bad)
cmp
movs
out
popa
pop
sub
jg
add
popa
and
jmp
iret
sbb
fstp
inc
push
pusha
and
repz
ins
int
sub
pop
or
ss
push
popf
call
add
add
movs
das
xchg
jns
push
jmp
dec
ins
stos
iret
add
stos
loopne
mov
mov
sar
mov
dec
mov
out
xchg
sbb
stos
sbb
cmc
fsubr
data16
es
pop
aad
stc
adc
in
in
je
lea
fs
sub
pop
xchg
mov
xchg
ret
lock
and
test
pop
adc
mov
xchg
jp
push
jmp
lds
and
sbb
mov
nop
xor
jae
cmp
test
ins
lods
shl
inc
adc
mov
push
or
mov
jnp
sahf
mov
inc
mov
xlat
jge
xchg
mov
jle
xchg
stos
out
xor
fbstp
not
test
call
jo
int
shr
adc
pop
adc
lds
fmulp
cdq
in
mov
fisubr
xchg
bound
mov
cmp
mov
pop
jecxz
frstor
or
aas
gs
mov
dec
popa
ins
or
cmc
or
enter
out
inc
ret
xor
lods
sbb
cmp
cli
aam
push
inc
sbb
in
popa
scas
jb
inc
out
push
movs
cmp
sub
or
and
fadd
xor
ds
push
call
sub
or
cmp
sub
inc
jae
ror
fstp
imul
div
add
popf
jmp
add
mul
sbb
dec
mov
mov
cdq
call
add
pushf
aaa
jnp
repnz
rcl
cmp
(bad)
into
mov
ja
jmp
pop
fdivr
cmp
xchg
jae
fs
test
xchg
cdq
mov
pop
add
es
loopne
fld
mov
and
dec
in
(bad)
popf
jle
jl
cmc
xor
push
aas
and
test
add
aaa
xor
inc
test
pusha
jns
movs
ret
dec
lods
cwde
jns
les
cmps
les
leave
cmp
data16
pop
arpl
push
pop
cmc
cwde
movs
push
lock
mov
out
aaa
push
stos
xchg
sub
inc
shl
xor
in
and
push
loop
pop
in
pop
aam
push
jno
mov
mov
mov
jo
adc
mov
pop
retf
std
mov
in
jno
push
mov
stos
add
cmp
dec
jae
push
cmps
sbb
xlat
aad
push
cmp
pop
jge
leave
les
(bad)
(bad)
xchg
xor
mov
(bad)
jne
sbb
sbb
scas
pop
pop
shl
inc
daa
retf
jecxz
push
xlat
jno
xchg
mov
pop
pop
mov
xchg
jg
and
fsubrp
sub
sbb
push
icebp
icebp
pusha
pusha
mov
pusha
jo
xchg
inc
jo
xchg
and
and
loopne
je
xchg
jb
fimul
enter
pop
jo
xor
ins
stc
nop
pushf
pop
dec
pop
push
dec
add
pushf
sti
out
clc
retf
test
sbb
push
sub
dec
jae
mov
cmps
xchg
(bad)
xor
xor
std
inc
aas
and
test
gs
shufps
iret
and
std
mov
aas
add
sub
xor
adc
jae
mov
add
rcr
or
loope
call
and
mov
sbb
xlat
mov
pop
call
(bad)
sbb
mov
adc
inc
daa
inc
loop
sbb
lds
push
pop
add
cmp
dec
jo
inc
iret
out
or
repz
pop
cmp
push
inc
enter
aam
test
dec
rcr
add
mov
movs
arpl
xchg
sub
push
das
xor
mov
add
or
xchg
pop
sub
push
cmc
and
rol
pop
pop
push
repz
inc
add
lahf
movs
adc
cmp
push
(bad)
out
push
inc
push
daa
mov
pop
pop
adc
xchg
pop
loopne
push
jo
mov
add
adc
sbb
cdq
int
jp
repnz
inc
in
aaa
adc
gs
adc
sub
adc
mov
xor
ror
imul
push
pusha
jmp
jae
xchg
pop
inc
mov
inc
into
rol
sub
ret
movs
cmp
popa
cmc
xor
cmps
mov
mov
js
(bad)
fcmovne
sub
mov
aad
xchg
pushf
adc
mov
rol
mov
mov
dec
fwait
jg
ins
push
pusha
repnz
jecxz
fistp
jge
jmp
fcom
fisub
dec
cmps
retf
pop
push
add
add
sub
dec
pop
xchg
pusha
push
xchg
pop
dec
xchg
clc
fistp
adc
xchg
mov
mov
mov
jecxz
or
pop
inc
mov
(bad)
xchg
and
call
inc
pop
cli
mov
cmp
add
leave
shl
or
dec
mov
mov
popa
aad
dec
rol
in
fcom
xor
pop
jp
nop
push
pop
in
stos
test
aad
or
xchg
inc
(bad)
mov
mov
aam
js
fnstenv
mov
jmp
mov
rcr
sar
ror
pop
push
iret
and
inc
fist
cmp
loop
or
pop
gs
ret
xor
dec
and
nop
push
pusha
icebp
mov
and
xchg
inc
jo
add
shl
and
les
ror
je
pop
jecxz
popa
pushf
jo
loop
rol
js
pop
mov
add
push
sahf
xor
push
shl
sahf
cmc
loopne
rol
mov
mov
pop
dec
repz
outs
cwde
sti
gs
icebp
sbb
dec
bswap
in
movs
mov
push
(bad)
ss
icebp
lock
sbb
bound
aad
add
cmp
mov
sbb
js
jl
mov
xchg
imul
jl
cmp
gs
pop
out
das
mov
xchg
out
or
pop
push
in
or
mov
dec
shl
cmp
movs
mov
test
add
dec
pop
cmp
push
out
dec
add
outs
pop
jbe
cli
(bad)
jno
or
push
mov
dec
pop
jno
add
adc
pop
jbe
imul
cwde
inc
clc
mov
mov
fstp
push
push
int3
cmp
fst
cmp
mov
mov
dec
xchg
(bad)
push
mov
in
aas
cmps
push
jmp
mov
jg
cmps
popa
sbb
inc
xchg
sub
pop
fidiv
jecxz
aam
fsubrp
jne
cwde
adc
sub
imul
pop
ficom
mov
jnp
push
out
(bad)
push
xchg
and
nop
mov
push
int3
push
bound
cmp
pop
pop
shl
mov
xor
ror
ss
cld
rcr
ins
or
test
jecxz
xchg
adc
xor
fimul
inc
(bad)
addr16
or
xchg
in
sbb
ja
dec
bound
ds
es
loopne
clc
lahf
test
out
(bad)
mov
push
call
icebp
cs
ds
fcomi
pop
cld
pop
sub
int
pop
repz
xchg
dec
adc
add
jne
xchg
rcr
push
(bad)
push
jmp
retf
lea
gs
xchg
push
cmps
pop
iret
and
int3
and
pop
pushf
es
sbb
adc
xor
retf
push
loopne
hlt
std
or
push
loop
jbe
in
sub
mul
push
sti
cmps
push
ret
out
dec
or
clc
mov
or
in
(bad)
sub
mov
cdq
mov
je
xchg
test
cmp
mov
push
or
cmp
arpl
das
aaa
ret
(bad)
in
hlt
mov
mov
or
into
jne
es
fwait
sar
sbb
pop
vpmullw
fild
adc
(bad)
sbb
(bad)
out
dec
pusha
leave
cwde
scas
or
pop
retf
sub
loopne
pop
ins
(bad)
mov
cmps
js
jno
retf
cmp
fist
xchg
sub
stos
sub
add
xchg
leave
or
out
(bad)
xlat
(bad)
out
mov
cmp
gs
push
(bad)
mov
xchg
cmp
push
(bad)
retf
or
icebp
icebp
test
xchg
inc
mov
pop
(bad)
sub
or
dec
in
into
jmp
loopne
push
adc
push
lahf
or
xchg
call
movs
loope
adc
cmp
inc
add
mul
xor
inc
bound
in
adc
sbb
jmp
jb
pop
adc
mov
test
mov
pop
test
xor
(bad)
jns
mov
sbb
jno
es
xchg
jle
push
out
mov
pop
shl
jecxz
adc
push
popf
outs
ret
mov
push
push
aam
sbb
out
sbb
add
test
add
inc
push
xor
cmps
lds
and
ds
fwait
dec
pusha
pop
stc
cmp
inc
(bad)
imul
xor
mov
movs
or
adc
add
jmp
and
cli
jmp
or
mov
sbb
cmp
addr16
sub
or
movs
xor
xor
xor
and
mov
jmp
adc
sbb
movs
mov
mov
xchg
and
or
cmp
shl
add
and
addr16
dec
test
xor
xchg
xchg
jae
rol
inc
sub
fstp
les
jne
loope
adc
dec
inc
sbb
data16
ins
push
shr
in
data16
stc
jbe
test
ja
pop
out
xlat
les
xor
mov
shl
call
mov
sahf
pop
stc
mov
movs
repz
enter
nop
pop
xchg
mov
jmp
pop
fwait
mov
and
retf
cmps
popf
xchg
cdq
js
sbb
mov
or
outs
outs
jo
xchg
push
pusha
icebp
mov
and
adc
mov
xchg
pusha
push
lock
nop
mov
inc
in
jae
add
ins
ror
and
es
mov
inc
dec
loop
cdq
das
mov
nop
arpl
icebp
rcl
pop
dec
cmps
mov
ret
leave
adc
mov
xor
cs
jl
pop
lds
add
jge
daa
(bad)
test
enter
std
xor
or
pusha
cld
fadd
fcmovne
fwait
out
rcl
push
jne
adc
cmps
pushf
stos
ret
cmp
sub
enter
fist
nop
clc
add
jg
call
test
jbe
movs
and
aam
fistp
cmp
es
adc
mov
(bad)
mov
sub
fist
pop
adc
dec
fadd
mov
pusha
jmp
mov
or
inc
int
mov
mov
cdq
adc
outs
pushf
cmp
inc
rcl
mov
test
push
jmp
cli
pushf
lods
and
dec
inc
pop
daa
call
popa
ss
push
movs
(bad)
sub
repz
loope
mov
sti
(bad)
sub
adc
jmp
lods
movs
mov
cld
or
push
and
ins
inc
adc
jae
mov
(bad)
xor
cli
pop
into
outs
fwait
call
sub
jge
mov
xchg
mov
adc
not
mov
jle
enter
mov
out
(bad)
int
mov
fucomp
jle
and
fs
xchg
or
jno
fld
(bad)
vunpckhps
data16
add
sub
pop
dec
stos
mov
cmc
adc
adc
jno
mov
pop
fmul
jns
mov
jle
or
push
or
jne
out
jns
jne
fldcw
dec
mov
inc
push
or
ja
(bad)
imul
repz
dec
test
test
jp
retf
inc
repnz
jb
add
cmp
into
or
nop
pop
mov
xor
push
mov
in
sar
aad
stos
add
clc
xor
imul
repnz
adc
push
lods
stos
and
ret
into
sub
sbb
dec
dec
and
daa
push
sub
lods
les
xor
xchg
xchg
ja
xchg
lods
fdivr
int
lods
(bad)
imul
cmp
or
test
cmp
mov
push
or
test
push
jmp
or
cli
ret
mov
mov
push
mov
xor
xor
push
mov
sub
pop
outs
gs
pop
mov
lods
fsub
sbb
mul
xor
xchg
fndisi(8087
jb
ins
les
jle
test
daa
out
dec
retf
xchg
jnp
xor
push
inc
sub
ds
lahf
xchg
aaa
enter
inc
fisttp
inc
mov
mov
push
not
mov
out
movs
mov
neg
mov
out
fld
shl
fdiv
mov
out
jb
jmp
ins
push
bound
xchg
dec
sub
inc
fs
mov
push
cs
lods
pop
or
mov
cmc
call
in
aaa
cmc
sti
(bad)
xor
stc
xor
test
lods
push
ins
xor
aad
add
dec
jecxz
lahf
push
push
sub
call
sub
jecxz
das
in
mov
push
gs
loopne
fiadd
jp
adc
pop
mov
and
out
fisub
mov
sbb
rcr
popa
out
in
neg
or
int3
mov
add
lds
popf
xchg
popa
(bad)
aam
push
std
add
mov
mov
ficom
ss
sbb
shl
(bad)
pop
es
push
pop
clc
jecxz
or
pop
mov
out
xchg
es
bound
shl
jle
or
movs
cmps
sub
adc
bound
dec
je
adc
push
add
or
stos
mov
iret
jl
cmp
xchg
and
mov
dec
xchg
ja
mov
jne
daa
scas
in
sbb
in
je
icebp
adc
std
xor
aam
aam
imul
inc
lods
lods
pop
jae
cmp
dec
adc
adc
ja
adc
ret
ja
add
out
gs
jnp
pop
push
and
xchg
xchg
and
xchg
addr16
mov
push
dec
cmp
retf
idiv
dec
pop
add
jb
es
push
mov
(bad)
pusha
cmp
fs
xchg
fild
pop
jmp
pop
mov
(bad)
pop
imul
and
sub
jmp
add
inc
inc
sub
div
mov
fwait
rol
dec
jae
xchg
not
jmp
mov
mov
xchg
jecxz
lods
out
sbb
fcom
dec
add
in
mov
es
mov
jns
inc
push
repnz
cs
outs
sub
pop
addr16
lea
add
jmp
mov
and
test
mov
ret
scas
mov
aam
sub
lahf
out
cmovnp
leave
jne
push
pushf
cmp
fistp
dec
pushaw
mov
mov
add
cmp
lahf
add
pop
xchg
lahf
push
ins
sub
jl
mov
push
das
and
sbb
mov
js
add
je
inc
jbe
sar
lock
(bad)
pop
cmp
hlt
add
add
lds
sub
push
outs
aam
push
dec
mov
aam
bound
(bad)
pushf
mov
popf
push
mov
pop
iret
jle
mov
test
ins
mov
xor
sahf
icebp
ins
xlat
push
es
shl
out
xor
mov
cmp
mov
(bad)
xor
rol
cmps
fnstcw
ja
rcr
and
add
mov
mov
(bad)
ror
xchg
iret
es
xchg
push
mov
inc
(bad)
jl
daa
add
retf
pop
pop
mov
xchg
xchg
dec
aad
mov
and
mov
in
pop
cmp
dec
push
vsubss
mov
aad
aaa
ins
mov
fild
les
sub
rcr
xchg
aaa
ins
jb
sub
jnp
ins
sub
xor
fimul
xchg
sti
fld
std
leave
out
cmp
cwde
vpmacssww
mov
cmp
cmp
sbb
mov
or
push
in
sub
outs
dec
in
aad
sub
sub
inc
aas
and
push
sbb
das
add
push
out
out
sub
outs
xchg
ret
jmp
movs
(bad)
cmps
push
and
push
in
fisub
mov
adc
fs
aaa
rcr
out
popf
sbb
jg
int
sbb
aad
call
push
sub
repnz
mov
add
xor
shr
pop
jl
les
lods
sub
outs
push
pushw
loope
ret
mov
movs
cmp
test
jmp
test
mov
retf
jecxz
pop
inc
and
push
ds
mov
adc
pop
cmps
pop
sti
inc
adc
rcl
or
aam
push
adc
fdivr
fild
xchg
xor
cdq
retf
sub
mov
fisubr
in
push
jle
in
pop
inc
xchg
jns
inc
push
xor
cdq
pop
jmp
xlat
jl
sahf
add
or
test
test
aas
and
lock
out
sbb
inc
and
inc
xchg
cmps
and
xor
mov
test
repnz
test
cmp
pop
or
mov
in
mov
xor
xchg
(bad)
cmp
mov
dec
push
mov
pop
xchg
je
sbb
xor
mov
jecxz
inc
jmp
and
sbb
enter
int
mov
loopne
nop
add
push
mov
cli
pop
xor
sbb
push
push
iret
shr
cmc
mov
lea
xchg
dec
not
jo
jmp
adc
ins
mov
mov
loope
mov
les
dec
lods
cs
mov
cld
paddsb
lods
mov
push
sbb
ins
inc
cmps
stos
inc
test
xchg
aaa
and
xchg
mov
ins
add
aam
mov
push
lds
pop
and
inc
push
ja
cs
lahf
push
mov
jbe
add
std
loope
jae
mov
push
jmp
mov
xchg
xchg
jg
jmp
cmp
inc
or
popa
aad
lahf
inc
push
stc
and
mov
dec
dec
jecxz
jle
dec
pushf
(bad)
and
retf
mov
jecxz
test
lock
jns
rcr
mov
mov
stc
cmp
stos
cmc
pop
sahf
lods
lods
icebp
jge
lods
add
push
jne
fdiv
inc
inc
jno
and
mov
ins
fdivr
retf
hlt
jl
pop
push
std
or
xor
dec
int3
dec
test
push
(bad)
bound
mov
lods
sbb
adc
and
in
or
mov
jae
and
jbe
test
clc
das
out
sub
lea
mov
fisttp
mov
cs
mov
(bad)
jb
inc
loope
(bad)
in
cmp
mov
jns
je
ficom
sbb
ds
adc
inc
cmp
dec
in
in
sbb
xor
daa
jge
pop
cmp
add
mov
(bad)
add
rcl
icebp
test
mov
out
leave
xchg
sti
or
ins
mov
mov
or
xchg
scas
aas
fbld
mov
and
and
jmp
rep
ficom
in
out
pop
scas
xchg
fcmovne
je
sahf
push
js
test
scas
scas
push
dec
cs
call
shl
test
xchg
add
push
sub
jge
adc
inc
mov
loop
jbe
mov
inc
cmp
cmp
push
jnp
pushf
stos
sar
adc
sbb
and
(bad)
rcl
fucomip
iret
dec
(bad)
(bad)
mov
jmp
sbb
jecxz
push
mov
jecxz
ins
and
outs
xor
or
stos
test
stc
xchg
jmp
pop
popa
mov
aaa
cmp
pop
pop
adc
mov
stc
hlt
popf
cmp
or
movs
les
pop
cs
hlt
movs
out
mov
jl
ja
jecxz
inc
inc
pop
xor
adc
fiadd
fld
retf
push
or
repnz
xchg
inc
jo
mov
push
loope
pusha
inc
rol
jo
aad
jo
fld
ins
fimul
jg
inc
xor
repz
rcr
mov
pop
enter
mov
movups
lea
jno
adc
mov
leave
daa
mov
xchg
mov
xchg
pop
push
(bad)
jnp
xor
cmp
in
adc
jmp
add
loop
js
pop
xor
je
jns
mov
jno
add
xor
sbb
sti
pop
lock
push
rol
or
jb
add
push
rcr
mov
mov
imul
mov
fidiv
push
push
inc
pop
mov
fucomi
lahf
and
and
mov
lods
stc
mov
bnd
pushf
std
outs
sub
test
pop
cmp
test
loope
jno
jp
into
mov
jns
out
gs
or
test
mov
dec
push
je
dec
scas
mov
jo
fwait
imul
xchg
mov
call
and
ja
and
mov
cmps
mov
fst
repnz
enter
outs
jge
xor
push
shl
sub
test
jmp
sbb
push
into
ins
mov
mov
and
xor
mov
(bad)
sub
or
add
call
push
or
in
pop
lds
aas
xor
or
icebp
add
lea
or
sub
stc
cmp
pop
out
mov
rcl
js
push
mov
(bad)
movlps
sbb
mov
xor
mov
pushf
outs
push
push
div
in
xchg
sbb
mov
daa
ror
jmp
sbb
test
xor
les
sahf
push
mov
cmps
adc
pop
lea
es
imul
outs
cmp
out
cdq
jne
cmp
xor
adc
jmp
loopne
cli
cmp
sahf
mov
pusha
add
or
ins
or
inc
or
push
mov
add
push
xchg
or
(bad)
icebp
jge
add
outs
add
adc
xchg
pusha
je
cwde
cmp
loop
pop
cmps
mov
(bad)
xor
cli
or
push
lahf
call
push
adc
pop
xchg
mov
push
adc
push
mov
retf
push
loop
js
and
and
xor
push
pusha
and
mov
ficom
mov
repz
sbb
out
enter
inc
movs
repnz
iret
rcl
cmp
mov
and
cmp
mov
xchg
(bad)
(bad)
(bad)
les
sub
aam
clc
or
push
arpl
and
cmps
add
(bad)
test
adc
inc
mov
dec
es
and
mov
and
xor
sbb
popa
aad
mov
push
je
push
iret
xchg
imul
sub
adc
mov
jo
pcmpgtd
cwde
mov
push
sar
push
xchg
outs
add
add
(bad)
iret
pop
xchg
in
int
sub
sub
or
push
fidiv
(bad)
mov
fmul
mov
pusha
out
ins
pop
and
inc
sti
cli
out
(bad)
sahf
adc
jp
fdivr
scas
test
xchg
xchg
sbb
pop
sbb
(bad)
adc
jecxz
scas
add
mul
fistp
pop
mov
cmp
test
out
xchg
xchg
sub
lea
adc
and
out
xchg
out
and
mov
pop
sub
adc
xor
test
in
dec
(bad)
or
sub
inc
out
xchg
add
sar
sbb
clc
aad
(bad)
idiv
ja
dec
out
(bad)
cld
fstp
push
scas
fisttp
jge
loopne
aad
call
out
jae
dec
and
jmp
movs
pop
mov
push
mov
ja
movs
stc
das
push
int3
and
xor
sub
pusha
dec
xchg
sahf
push
push
and
inc
adc
mov
aad
sbb
ins
rcr
(bad)
mov
fs
jmp
retf
cwde
pop
in
mov
enter
pop
rcl
jne
aam
mov
cmp
pop
mov
push
ror
loope
dec
or
js
sub
push
test
pop
pop
and
arpl
push
mov
cmps
fsubr
cmp
mov
xchg
dec
add
lea
mov
das
call
dec
xlat
cmc
out
shl
ret
sub
adc
stos
sub
icebp
pop
int
call
mov
mov
popfw
lea
ret
and
jg
sbb
vpsubsw
adc
inc
gs
sbb
jmp
jne
shl
adc
add
inc
iret
into
out
add
jnp
and
cld
mov
popa
(bad)
outs
jno
lock
xor
jge
adc
mov
in
xchg
mov
jns
mov
aad
sbb
arpl
je
loopne
xor
jge
push
lods
add
nop
ret
sbb
in
(bad)
aad
js
fadd
lods
movs
out
daa
pop
mov
outs
lods
(bad)
dec
aaa
ins
lods
sbb
mov
inc
adc
cmp
and
jne
push
pop
mov
hlt
xchg
ret
mov
and
lods
in
pop
in
add
icebp
mov
lds
ja
cmp
mov
xchg
xor
pop
and
sub
loopne
dec
out
adc
push
shl
jg
sbb
sbb
adc
or
sbb
xchg
(bad)
(bad)
rcr
adc
sbb
loopne
and
mov
push
adc
lds
aaa
retf
xor
push
ja
cmps
ss
mov
push
test
lock
or
lahf
popf
ins
stos
jae
pop
and
jle
or
imul
icebp
pop
outs
jmp
jb
xchg
xor
mov
dec
mov
or
std
dec
push
mov
jne
mov
xor
push
dec
mov
call
or
jmp
daa
test
inc
dec
adc
fidiv
loope
xor
ret
push
leave
lea
push
jae
test
inc
int3
xchg
mov
shr
jne
rcr
inc
pushf
push
jge
aaa
sbb
pop
ret
jne
cmp
sahf
push
sbb
fisubr
mul
mov
jp
hlt
ror
dec
dec
sahf
push
add
clc
rcl
xor
mov
loope
mov
cwde
leave
aam
adc
push
pop
pop
lods
enter
xchg
ret
inc
ror
pop
imul
sub
or
(bad)
out
jbe
(bad)
push
sahf
xor
xchg
iret
jae
or
mov
cmp
push
rol
push
pusha
pusha
shl
jo
or
aad
xchg
jecxz
ins
cmp
test
pop
push
aad
and
mov
xor
movs
arpl
xchg
add
fcmovb
inc
xor
sub
out
push
push
mov
add
std
movs
or
xor
jge
mov
mov
repz
or
inc
ror
cmp
lea
scas
mov
call
push
mov
fistp
repnz
mov
dec
popa
inc
xor
ins
add
adc
xor
rcl
rol
data16
cwde
bound
mov
ins
shr
jo
and
nop
clc
mov
fcomp
cmp
ja
xor
dec
lods
clc
sbb
imul
sub
and
rcr
pop
in
mov
cmps
fidivr
and
pop
out
bound
out
imul
ins
pop
pop
sti
sub
ins
clc
or
push
xchg
in
test
mov
add
ffreep
test
or
sbb
(bad)
retf
loopne
into
aam
adc
mov
jno
fdivr
or
cmps
(bad)
mov
es
out
push
adc
movs
scas
mov
repz
loope
jns
push
dec
dec
inc
aam
push
std
mov
not
push
cli
imul
mov
mov
je
mov
ja
test
mov
stc
xchg
aad
shr
cmp
cmp
dec
push
cs
mov
or
or
aas
add
cmp
scas
mov
in
(bad)
dec
bound
out
push
inc
je
call
ss
cmps
imul
mov
cmp
mov
add
xor
or
mov
push
stc
das
daa
mul
popa
not
pop
jo
jno
inc
shl
jl
dec
mov
cld
mov
dec
je
loopne
addr16
xchg
sub
sbb
and
mov
jge
push
call
xchg
mov
nop
inc
sar
add
mov
xchg
fldenv
imul
pop
movs
stos
push
mov
movs
in
ins
dec
inc
(bad)
out
sub
mov
ret
loopne
pop
in
xor
loop
popa
mov
popa
sbb
test
cmps
aam
adc
or
pop
jl
js
daa
retf
fstp
cmp
cwde
xor
xchg
add
mov
mov
enter
add
xor
mov
arpl
dec
sbb
in
(bad)
shl
inc
iret
rcr
neg
sub
and
fwait
cmp
addr16
sahf
sub
adc
retf
jmp
in
mov
cwde
shr
in
and
jbe
out
ins
loope
movs
movs
dec
sub
gs
jno
xchg
(bad)
(bad)
in
mov
imul
dec
cli
in
or
jo
jb
sahf
add
shl
fcmovnbe
das
xchg
jo
sub
shr
pop
xchg
jnp
pop
jns
mov
idiv
push
jg
scas
popf
loopne
xor
mov
mov
add
and
jno
outs
jo
fisubr
adc
mov
pusha
jo
xchg
jo
rol
push
fmul
lahf
jg
(bad)
jg
rcl
push
rol
in
ins
aam
cli
jl
fstp
sahf
add
sub
(bad)
cdq
mov
add
and
icebp
out
inc
stc
dec
call
inc
push
cdq
jle
popf
and
sub
imul
jbe
icebp
rcr
loope
out
loopne
adc
jmp
sub
xchg
cmp
push
shl
retf
inc
push
out
ret
or
lods
cli
das
add
mov
add
mov
jo
sbb
ret
cmp
fist
imul
cli
sbb
adc
cld
enter
call
inc
out
push
lods
or
lea
ja
sbb
fnsave
into
movs
adc
(bad)
push
add
pop
mov
sbb
scas
jmp
jns
ret
cmp
cmp
and
pop
mov
adc
lahf
jne
xchg
cmp
nop
dec
sbb
dec
(bad)
movs
outs
cwde
or
repnz
paddusw
loopne
dec
xchg
test
rol
sahf
add
jmp
pop
mov
sahf
stos
iret
pop
pusha
(bad)
test
leave
inc
shl
mov
sti
out
(bad)
enter
inc
stos
push
and
mov
je
imul
scas
sbb
aaa
add
xchg
in
shl
pop
icebp
inc
mov
mov
repnz
retf
xchg
call
inc
call
in
loopne
mov
idiv
push
mov
jae
ret
ins
sbb
fisubr
and
data16
fimul
inc
movs
jno
(bad)
retf
dec
jg
in
mov
and
and
mov
fidivr
aad
ds
pop
int
hlt
retf
je
xor
adc
sahf
adc
or
sub
mov
fwait
js
mov
jmp
cmp
adc
sbb
in
cmp
test
movs
ja
xchg
cmp
xchg
stos
mov
(bad)
push
sub
cmp
sub
inc
jno
rcr
jmp
xor
aad
std
lods
mov
cmp
imul
push
into
mov
sbb
push
push
xchg
std
loope
lock
xchg
sbb
fwait
push
adc
push
mov
inc
mov
ds
sbb
and
dec
dec
push
or
mov
and
dec
es
in
sbb
inc
std
test
mov
popf
xor
add
jbe
sbb
mov
mov
cwde
push
push
pop
mov
in
pushf
mov
int3
(bad)
(bad)
mov
hlt
in
popa
cdq
mov
and
mov
sahf
sub
push
or
and
jno
push
mov
fidiv
jns
pop
in
mov
xor
es
fild
fsub
sub
addr16
add
push
dec
bound
adc
nop
lds
push
xchg
mov
pop
mov
std
sti
adc
in
push
int
or
xchg
mov
int
adc
push
mov
pop
or
jns
jle
fst
or
and
adc
inc
mov
push
xor
pop
lock
ins
mov
inc
adc
lods
aaa
push
jl
es
mov
scas
lds
js
jbe
mov
cmp
jnp
fidiv
test
mov
sub
push
jno
lahf
mov
mov
jl
mov
mov
cdq
add
sub
sub
sub
inc
dec
pop
movs
ins
cld
mov
dec
retw
shl
es
mov
ret
int3
(bad)
jne
and
neg
sti
adc
and
(bad)
mov
les
int3
or
xchg
adc
in
cmpps
adc
adc
jmp
idiv
mov
retf
mov
mov
ficomp
call
xchg
mov
push
and
cmp
cmp
std
test
cmp
aad
leave
mov
repnz
aad
jne
(bad)
mov
jne
call
mov
imul
xchg
cmps
fxch
xchg
fwait
or
movs
cpuid
sti
enter
pop
ret
add
cmc
(bad)
push
fidiv
cmc
add
dec
sbb
mov
cmp
jae
icebp
loopne
xor
mov
in
bound
sub
mov
imul
inc
stc
mov
(bad)
mov
cmp
sub
stos
jae
push
dec
out
(bad)
mov
jae
jo
jne
or
imul
aam
adc
push
jmp
mov
pop
inc
add
mov
(bad)
push
and
call
add
lods
inc
cli
ficom
inc
cli
stos
add
pop
xchg
clc
out
mov
mov
clc
push
fisubr
mov
mov
popf
jecxz
mov
mov
(bad)
mov
(bad)
and
dec
mov
in
test
int
cmp
lahf
sbb
aas
mov
push
sbb
xchg
cdq
je
mov
pop
lock
stos
and
mov
inc
loopne
in
clc
sub
sbb
imul
cwde
sub
push
stos
adc
outs
and
pop
jae
jmp
(bad)
jge
imul
add
ds
imul
gs
ss
retf
fisub
push
mov
and
mov
movs
cmp
xor
jmp
dec
jg
hlt
mov
xor
rcl
xchg
and
and
rcl
data16
ja
fimul
jg
inc
and
push
lods
jmp
fiadd
add
xchg
and
mov
cmp
test
push
sahf
xor
dec
and
sbb
ret
in
mov
mov
into
pop
jmp
cmp
mov
(bad)
sub
adc
or
mov
push
push
inc
sub
(bad)
jecxz
jle
pusha
mov
gs
jp
push
mov
mov
xor
lea
add
lods
loop
adc
repz
int
jne
mov
cwde
sbb
in
mov
and
xor
stos
out
and
inc
adc
and
es
mov
jbe
ds
pop
pushf
and
sub
inc
mov
inc
xor
imul
push
mov
mov
jae
xchg
add
dec
ins
or
sub
rol
aad
inc
mov
inc
cmp
(bad)
jp
imul
sub
jge
push
lahf
xchg
aas
retf
push
sar
xor
clc
add
add
stos
popf
add
adc
stos
aad
ret
stos
test
mov
out
push
pop
push
xchg
sub
iret
pop
mul
jae
adc
int
movs
push
cmp
addr16
out
mov
cdq
fs
(bad)
dec
repnz
pop
xchg
mov
sbb
imul
jae
mov
imul
mov
sub
pop
out
mov
loope
lock
mov
pop
lods
jno
scas
cmp
movs
es
clc
mov
mov
shr
div
repz
ss
push
(bad)
or
pop
mov
lahf
mov
xor
cli
mov
adc
sub
jle
leave
mov
pop
setl
jl
das
aas
ret
loop
push
mov
dec
mov
mov
out
outs
mov
mov
(bad)
rcl
or
push
and
test
inc
cmp
leave
dec
aad
adc
rcr
icebp
outs
sub
inc
popf
arpl
icebp
(bad)
push
dec
int
fbstp
fiadd
dec
fadd
add
cld
cs
pop
loop
popf
inc
aas
enter
popa
sbb
cmp
sbb
dec
jp
loopne
aad
xchg
rol
das
and
xor
ins
or
cmp
pusha
jo
(bad)
(bad)
inc
cmps
mov
out
mov
mov
jl
adc
call
mov
jge
jns
jne
inc
in
pushf
dec
add
ins
dec
popf
mov
jno
inc
retf
pop
jl
push
aas
cdq
in
pop
push
sub
push
sar
cld
je
add
gs
ins
fdivr
test
xchg
xchg
movs
nop
in
out
inc
xchg
cld
mov
and
push
daa
inc
imul
ret
and
icebp
lea
nop
sub
sub
mov
fistp
jmp
movs
inc
dec
mov
js
ror
mov
mov
js
dec
and
rcr
addr16
xlat
cld
jb
xchg
lea
jns
bound
lds
dec
loopne
sbb
lods
rcl
stos
pop
xchg
xor
not
jl
sbb
sbb
jecxz
jnp
sahf
jecxz
fs
cwde
cmc
outs
enter
sar
cld
or
and
dec
(bad)
cmp
xchg
stos
pushf
sar
aad
sbb
in
lsl
frstor
sti
add
mov
xor
pop
dec
int
mov
cmp
sub
cmps
cmps
mov
fs
ja
ss
(bad)
aam
jecxz
and
outs
jle
push
adc
call
mov
in
outs
rcl
das
lds
in
or
aam
ins
xor
test
or
rcr
inc
aam
pop
adc
ins
sahf
enter
pop
xchg
adc
fisubr
jp
sti
xchg
or
test
pop
jno
mov
push
cdq
and
jl
fwait
ins
leave
pop
pop
add
call
std
in
leave
mov
es
cli
sub
push
mov
cmp
inc
(bad)
je
pop
mov
ret
push
push
rol
cmp
rcl
aaa
cwde
pop
mov
retf
mov
lea
outs
ds
and
test
mov
push
or
jno
fdiv
push
dec
pop
add
mov
sbb
and
sub
aad
and
loopne
aaa
jecxz
int
sahf
out
fld
mov
cmc
mov
add
(bad)
ja
push
or
inc
xchg
jne
sub
push
cmp
div
popa
loope
or
pop
inc
jmp
mov
jle
adc
add
jbe
xchg
mov
call
retf
dec
ret
mov
and
xchg
adc
test
and
leave
fs
and
inc
sbb
push
push
mov
and
jo
test
outs
inc
sbb
xor
in
test
jmp
push
stc
push
pop
cmp
imul
inc
fdiv
in
inc
in
cmc
inc
hlt
adc
xor
push
xor
test
sti
add
ins
movs
leave
sub
inc
shl
push
call
shr
popf
mov
rcl
imul
daa
js
dec
imul
nop
xor
mov
adc
jp
xlat
rcl
jge
xchg
pop
aas
push
inc
in
cli
clc
ret
cmc
jl
ret
cmps
out
push
sub
jg
jnp
ds
push
out
adc
jmp
sub
adc
sub
jne
or
dec
into
mov
ret
jne
adc
xchg
fcomi
mov
fwait
loope
xor
popa
sub
ins
in
in
jmp
or
dec
js
dec
aad
pushf
mov
cmp
ss
scas
inc
fs
adc
xor
or
aam
mov
push
out
inc
imul
pusha
in
sub
push
test
add
xor
mov
xor
gs
push
mov
or
dec
add
out
mov
cmc
popf
mov
push
inc
pop
mov
adc
imul
sbb
mov
addr16
lahf
in
mov
jns
mov
out
push
pushf
in
into
ret
xor
sub
(bad)
fldcw
ret
ret
mov
movs
pop
xor
daa
test
retf
adc
mov
push
jo
loopne
adc
xor
mov
xor
dec
mov
xchg
or
mov
rcl
rol
dec
retfw
fisubr
add
imul
cmc
std
retf
push
jmp
ds
std
xchg
inc
and
stc
xor
adc
cmp
or
fwait
cs
mov
push
push
mov
je
pop
call
inc
sar
cld
out
(bad)
lods
shl
lds
into
sub
ja
sub
lods
retf
imul
repz
push
or
data16
cmp
pop
out
xor
cmp
nop
rcl
test
cmp
jne
cmp
jcxz
aaa
cmp
out
pop
adc
adc
xchg
icebp
push
mov
bnd
(bad)
stos
scas
popf
xor
sub
cmp
mov
sbb
xchg
and
je
mov
les
xor
std
repz
jns
lds
mov
clc
(bad)
pop
pop
pop
imul
hlt
jl
inc
retf
sbb
test
ficom
mov
cdq
inc
jbe
cli
in
push
adc
xchg
into
cmp
mov
jp
mov
ret
pop
sbb
jg
sbb
sub
pop
jbe
stos
aam
loopne
enter
inc
jmp
adc
repz
xchg
fnstsw
xchg
xor
js
jl
xlat
loopne
jmp
(bad)
pop
pop
fldenv
retf
std
stos
rcl
add
fcomi
call
push
cmp
test
fist
mov
add
mov
in
and
(bad)
pop
jns
or
(bad)
push
ins
lock
je
rol
dec
xchg
pusha
rol
push
inc
loope
push
push
loope
push
inc
icebp
shl
inc
add
adc
popa
loope
adc
shl
inc
adc
shl
and
mov
rcl
add
icebp
mov
rcl
pushf
and
shl
and
add
mov
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
mov
jo
mov
mov
pusha
inc
inc
jo
mov
inc
rol
pusha
jo
xchg
xor
loope
adc
shl
pop
icebp
popa
outs
jo
xor
and
rcl
and
rcl
rol
push
pusha
popa
shl
ins
dec
iret
mov
lahf
xor
pop
ds
mov
dec
adc
mov
loope
xor
pop
in
ds
sub
push
adc
ins
mov
and
out
iret
mov
push
jmp
or
xchg
ss
pop
stc
gs
repz
jno
xchg
arpl
add
pop
jo
scas
call
cmp
ins
mov
imul
jo
xchg
mov
rcl
sub
cdq
jno
and
inc
imul
push
jl
adc
pop
fld
daa
scas
xchg
xor
xchg
outs
test
js
or
or
sub
ins
mov
push
(bad)
mov
mov
inc
mov
ja
cmp
icebp
(bad)
std
mov
aaa
push
push
push
cdq
pusha
jo
xchg
lock
cmc
(bad)
sahf
fidiv
sub
xchg
mov
loopne
sbb
rcl
xchg
lock
(bad)
mov
mov
retf
jge
fs
jl
sar
les
imul
(bad)
push
inc
adc
cwde
or
pop
cmp
loopne
into
sbb
xchg
or
and
xchg
push
mov
adc
(bad)
loop
fnsave
pop
imul
fst
or
mov
inc
js
mov
xchg
cmp
lds
push
sbb
add
inc
push
int3
mov
inc
xor
mov
cld
cmp
iret
fs
inc
out
sub
sub
jno
sbb
adc
mov
div
leave
int3
movs
adc
inc
test
retf
aas
push
mov
adc
jmp
or
pop
add
out
sub
sbb
sbb
(bad)
xchg
sub
xor
jle
mov
and
outs
sbb
mov
in
sar
bnd
jmp
mov
push
jbe
retf
out
cmps
and
loop
jmp
sub
inc
test
fucomi
mov
push
mov
xor
out
mov
cmp
dec
or
iret
xor
repnz
sub
lea
sahf
and
fs
shl
pop
add
aad
pop
scas
inc
cmp
xor
in
idiv
cmp
es
call
push
addr16
sbb
popf
sbb
xchg
pop
mul
adc
cmovle
xchg
mov
sbb
jecxz
std
cmp
iret
xchg
push
iret
mov
mov
imul
inc
sti
ret
call
addr16
or
mov
pop
pusha
shl
jo
xchg
ror
and
or
shr
shr
inc
push
fnsavew
in
push
jo
xchg
jo
cs
and
add
rcl
mov
nop
jo
loope
push
adc
xchg
pusha
jo
shl
icebp
shl
mov
add
shl
mov
jae
rcl
pusha
rol
xor
dec
pop
push
pop
addr16
jmp
shl
or
mov
push
cmc
jg
pop
push
addr16
fcom
and
(bad)
retf
adc
cmp
scas
aad
mov
jo
xor
dec
pop
repz
mov
cmp
pop
jbe
aad
cmc
jmp
addr16
or
mov
into
add
xor
mov
int3
mov
mov
pop
addr16
(bad)
std
sbb
sbb
push
outs
imul
xor
inc
rol
les
pop
js
sar
add
cmc
in
adc
mov
sbb
sub
adc
mov
movs
sahf
mov
or
ja
leave
push
fdivr
nop
push
inc
mov
xchg
cmp
fstp
sub
sub
aas
fxtract
cmp
push
cmp
scas
repz
fimul
mov
mov
push
mov
(bad)
cli
leave
and
xchg
inc
neg
(bad)
pop
icebp
ret
jbe
push
pop
iret
lock
adc
pop
xchg
pop
cmp
cmp
adc
adc
loop
xchg
int3
and
popa
push
mov
inc
clc
std
jecxz
xchg
pop
jno
in
jns
or
test
adc
or
and
cli
daa
inc
add
mov
add
lea
data16
mov
popa
mov
inc
jg
shl
out
xchg
add
dec
pop
lods
lahf
inc
mov
stos
cmp
jecxz
sbb
pop
jmp
adc
xor
xchg
in
mov
test
addr16
mov
sub
pop
cld
mov
lods
ror
pop
fadd
pushf
adc
or
enter
in
test
inc
daa
pop
add
mov
sbb
sbb
jnp
dec
pop
out
mov
and
pop
inc
test
or
dec
fs
pop
popa
lods
lea
int
xor
cmp
mov
dec
sub
jno
mov
pop
xor
dec
mov
and
(bad)
(bad)
test
ss
xor
and
hlt
jns
mov
add
shl
pop
mov
cmp
ds
jno
mov
fidiv
les
lock
call
or
xor
and
jecxz
scas
mov
inc
arpl
or
mov
xor
dec
ret
or
push
mov
xchg
repz
call
push
cmp
adc
inc
(bad)
mov
jbe
xlat
aaa
jge
rol
jge
ror
sbb
jmp
pop
aaa
jp
es
pop
mov
hlt
(bad)
mov
(bad)
mov
sbb
ja
jns
inc
ret
add
lock
loope
pusha
pusha
shl
jo
xor
loopne
push
xor
mov
jne
add
in
popa
pushf
jo
repnz
mov
cmps
outs
out
sub
cwde
mov
outs
xchg
inc
test
das
(bad)
repnz
(bad)
mov
dec
iret
into
inc
fdiv
push
mov
jns
and
or
mov
pop
sar
mul
neg
add
aam
push
add
mov
jmp
sahf
inc
mov
pop
fmul
mov
jmp
fimul
cmp
cli
hlt
popf
jmp
mov
in
push
dec
(bad)
jo
sahf
imul
dec
inc
xor
mov
add
pop
neg
(bad)
mov
pop
sub
cmp
loope
sahf
pusha
leave
inc
sub
outs
std
mov
sbb
out
sub
inc
cmp
cmp
xchg
or
pop
and
ja
push
mov
mov
es
dec
mov
mov
add
cmps
dec
jecxz
mov
dec
out
into
xchg
daa
cmc
pop
movs
pslld
mov
ret
push
jae
xor
add
pop
push
dec
and
stc
jae
or
adc
cli
and
push
push
sub
or
je
jl
test
neg
pop
jmp
or
pop
mov
or
add
movs
mov
sahf
push
stc
mov
mov
jge
(bad)
dec
imul
test
stos
pop
jo
adc
mov
fsub
in
or
daa
cmp
push
sub
or
imul
or
sbb
jecxz
xchg
xor
xor
out
and
fist
fwait
jecxz
sahf
or
jo
loop
sahf
in
aad
loope
fs
rcr
scas
cmp
scas
add
jge
outs
mov
mov
shl
call
cmc
cdq
scas
icebp
in
shl
test
mov
or
and
fdecstp
imul
pop
push
cli
sub
bound
xchg
pop
or
test
mov
push
cs
cmc
jae
fisub
xor
or
mov
or
mov
inc
add
xchg
jmp
scas
movs
pop
push
jnp
fisubr
and
sub
sub
adc
mov
pusha
and
xchg
jo
rcl
and
mov
popa
rcl
arpl
repz
mov
xor
shl
xor
jge
shl
xor
nop
ss
sub
mov
mov
mov
call
jp
aas
xchg
ffree
std
std
popa
bound
sub
sar
lahf
das
cmp
xor
out
fisubr
aad
int
not
ja
pop
arpl
cmp
fisttp
rcl
popf
(bad)
out
frstor
inc
push
xor
mov
add
sub
into
out
and
cs
(bad)
ds
dec
idiv
outs
das
adc
jae
outs
sti
ins
ja
or
sbb
push
sti
xchg
add
out
mov
int
iret
fcmovnb
or
mov
in
or
or
test
enter
dec
xor
add
ds
arpl
paddq
inc
jne
jmp
into
sbb
cld
test
xchg
or
ds
push
and
popf
sub
xchg
fcomp
pop
inc
xor
push
mov
xor
push
jle
aad
ret
mov
pop
and
call
lods
enter
jb
jae
jecxz
and
jbe
sub
jnp
imul
test
sbb
cli
mov
test
iret
test
sbb
and
xor
pop
xor
dec
mov
rcr
ins
sub
in
push
cwde
in
mov
in
adc
(bad)
push
mov
sbb
int3
sbb
ds
fcomp
fs
cmp
add
test
mov
xor
aam
or
mov
fadd
out
push
fwait
mov
lods
(bad)
in
ins
xor
inc
pmullw
sar
call
cmc
ror
retf
sbb
mov
stos
xchg
pop
cmp
repz
es
dec
jp
mov
cld
mov
pop
lds
dec
sbb
outs
mov
cmc
adc
rol
rcr
push
retf
mov
xor
push
or
shl
nop
inc
int
xchg
pop
mov
add
pop
movs
xor
retf
repz
xchg
jmp
pop
cli
cmp
jmp
or
out
add
fld
xchg
es
add
dec
jg
aas
imul
data16
and
scas
fwait
inc
frstor
ss
enter
pop
psubq
mov
aam
mov
fld
jmp
sub
cli
pusha
pop
or
mov
dec
xor
imul
jge
xor
ins
adc
mov
(bad)
ret
jmp
add
mov
inc
bound
daa
jnp
ins
arpl
mov
adc
ret
sbb
mov
adc
cwde
ins
push
cwde
sbb
std
push
push
jbe
mov
stos
mov
ins
adc
cmp
je
sub
mov
pop
cmc
cdq
cmp
aad
inc
das
mov
add
mov
mov
mov
rcl
mov
xor
xor
retf
inc
pop
inc
icebp
xchg
mov
dec
push
les
xrelease
stc
in
cmp
inc
(bad)
mov
sbb
fbld
stos
aas
pop
add
cmps
or
add
movs
ja
imul
inc
loope
test
lds
lock
shr
rcl
jo
fidivr
nop
lock
icebp
mov
add
pusha
inc
rcl
inc
rcl
push
rol
inc
inc
in
arpl
test
(bad)
mov
push
rcr
jno
jmp
push
arpl
mov
clc
test
mov
dec
loope
jg
inc
add
jmp
xchg
push
clc
xor
adc
repnz
ins
push
mov
xchg
outs
clc
push
sbb
mov
xor
mov
(bad)
fimul
jp
test
xchg
leave
jnp
push
(bad)
data16
inc
jo
lea
add
pop
stc
shr
test
inc
sub
push
push
stc
out
cmp
scas
adc
inc
or
iret
push
inc
or
(bad)
inc
or
inc
(bad)
mul
jle
das
adc
jl
mov
xor
lods
pushf
clc
xchg
pop
adc
ss
rcr
and
leave
lea
pop
xchg
sbb
fidivr
icebp
dec
mov
xor
push
sub
jecxz
pop
into
adc
inc
push
cmps
mov
rcl
cld
not
cmp
(bad)
sbb
(bad)
(bad)
sub
cmps
jmp
stc
jns
mov
and
in
dec
fs
and
loopne
daa
ss
sub
fidiv
bnd
in
sahf
sub
test
inc
push
loopne
jne
mov
dec
and
adc
adc
adc
shl
cs
les
adc
in
pop
mov
cmps
add
sub
shl
push
rol
sub
add
add
mov
into
pop
sbb
push
cwde
sar
push
adc
mov
inc
mov
push
enter
mov
push
js
mov
(bad)
inc
les
retf
leave
sbb
mov
xchg
mov
push
mov
sub
mov
pop
movs
ins
and
xchg
test
lods
hlt
xor
cmps
jmp
sub
and
das
mov
lahf
test
adc
sub
and
jnp
int3
dec
push
and
in
mov
scas
enter
loope
jle
pop
xchg
fs
lods
outs
fsubr
test
or
pusha
movs
jg
in
(bad)
retf
xor
jmp
jge
xchg
add
loope
nop
xor
mov
test
cmp
cld
jge
movs
pop
push
je
mov
and
add
xor
stos
shr
mov
cmp
(bad)
loop
cmps
(bad)
or
sti
inc
enter
imul
repnz
test
addr16
push
or
push
mov
dec
add
sbb
and
mov
shr
cmp
mov
pop
cmps
adc
xor
dec
adc
cdq
shr
xchg
mov
dec
jno
cwde
mov
add
adc
lods
ror
lds
mov
or
sub
cwde
cmp
or
add
mov
pop
shl
add
cmp
xor
mov
or
test
sbb
jns
add
shl
cwde
xchg
jmp
and
pop
push
xchg
jnp
pop
outs
dec
sbb
sbb
test
mov
xor
mov
cli
or
and
jo
mov
sbb
fcmove
fnstsw
xor
adc
cli
les
loope
test
stos
(bad)
jbe
aam
jl
mov
loope
mov
sub
mov
addr16
push
into
outs
cmp
cmp
or
(bad)
das
and
lock
cmps
push
mov
dec
movs
fnstsw
push
dec
hlt
mov
lahf
and
(bad)
mov
fld
popf
not
and
rcl
sub
jecxz
nop
pop
pop
mov
push
xor
mov
add
xchg
das
ins
sti
dec
call
cmp
repnz
loopne
or
cmp
and
sub
jno
push
or
leave
pop
lds
imul
adc
add
jnp
dec
sub
adc
mov
mov
pop
fs
cld
daa
xchg
cwde
jmp
and
sbb
xchg
pop
mov
dec
repz
mov
vphaddbq
movs
pop
fidivr
ret
mov
cmps
fbld
rol
mov
out
fcomi
adc
fcom
test
push
xchg
push
retf
dec
bound
inc
xchg
pop
inc
(bad)
cdq
aad
dec
sub
sub
stos
clc
xor
(bad)
mov
repz
lods
ficomp
stos
mov
adc
mov
in
stos
iret
cli
ja
adc
dec
sub
pusha
iret
cmps
xlat
jmp
(bad)
push
dec
pop
sbb
stos
and
or
pop
pop
add
cs
and
pop
(bad)
xor
aad
xor
pusha
fst
in
stc
fisttp
sub
inc
add
pop
push
add
push
ss
sbb
pushf
mov
jg
inc
xchg
and
xchg
jo
and
jo
aad
jb
(bad)
xchg
jno
fcomp
jl
fimul
pusha
rcl
into
rcl
rol
inc
sbb
cmp
outs
add
das
push
sub
mov
sub
ds
ins
lods
nop
sbb
ins
js
dec
fnstcw
(bad)
int
mov
mov
adc
adc
dec
mov
addr16
imul
loopne
mov
xchg
jl
jl
call
js
lods
repz
sub
push
fdivr
out
sub
les
cmp
xchg
push
inc
icebp
mov
jnp
cmp
ins
cld
test
mov
sbb
dec
cmps
stos
jo
div
ret
cmp
jbe
dec
jp
movs
add
jne
mov
out
loopne
jb
or
test
xor
or
mov
mov
xchg
pushf
inc
test
xchg
add
retf
jo
inc
push
cdq
das
shl
push
fldcw
out
leave
xchg
and
stc
mov
jl
movs
shl
sbb
add
sub
jns
add
loope
xchg
shr
aam
or
sbb
fwait
sbb
mov
fsubr
repnz
lea
pop
(bad)
int3
ins
popa
or
xchg
xchg
pushf
mov
rcl
xchg
jle
movs
or
push
pushf
inc
daa
and
mov
inc
in
shl
repnz
sbb
jl
push
clc
dec
or
jmp
inc
mov
cmp
into
mov
mov
fs
mov
jbe
test
push
and
mul
or
arpl
xor
pop
add
jmp
adc
inc
xlat
add
hlt
adc
jecxz
xchg
sar
sbb
push
shr
mov
adc
pop
daa
xchg
xchg
shl
push
loopne
sbb
jl
icebp
mov
cmp
test
data16
sahf
cmps
jmp
add
lods
xor
jnp
and
(bad)
ins
and
scas
xchg
xor
push
int
aam
pop
lea
mov
sub
xchg
ficom
push
sbb
in
push
neg
jne
test
xchg
and
es
sti
jg
ja
(bad)
fld
out
mov
retf
jno
or
pop
push
pop
arpl
shl
aad
aad
rol
aaa
lods
xchg
xor
sub
rol
mov
and
(bad)
rcl
pop
shl
ja
das
stos
jl
cld
mov
cmps
add
(bad)
bound
mov
inc
mov
push
test
(bad)
shr
pop
pop
fcom
out
lock
jg
cs
and
cmp
in
inc
push
shr
jmp
js
sub
outs
dec
or
out
call
in
ret
mov
adc
cwde
mov
and
mov
sub
call
cmps
pusha
arpl
stos
and
xchg
js
stos
add
mov
mov
or
dec
push
xchg
fild
cld
inc
dec
mov
jae
repnz
outs
push
jecxz
in
inc
adc
shl
into
retf
inc
popf
mov
ins
outs
addr16
outs
push
inc
sbb
jb
int3
rcl
fcom
mov
std
or
dec
in
push
mov
mov
hlt
bound
jg
sub
mov
shl
mov
addr16
fdiv
data16
mov
mov
lods
and
aam
and
repnz
cli
pop
xlat
mov
or
xor
cmp
and
push
jmp
and
jmp
int
mov
cwde
dec
mov
cmps
and
das
sub
xor
je
dec
fisttp
sti
js
into
and
out
in
add
dec
loope
je
in
out
call
inc
inc
rcl
add
adc
ins
lods
inc
in
sub
iret
adc
mov
inc
jge
mov
aas
retf
loope
arpl
push
pusha
je
xor
and
jl
xchg
fld
jge
and
dec
jno
ret
cmps
mov
rcl
test
mov
jmp
addr16
fstp
jns
sub
mov
loopne
inc
shl
ret
lds
mov
dec
stc
push
aad
xor
fmul
pop
aad
add
mov
pusha
rcl
jo
rcl
jno
leave
and
ds
shl
inc
pop
out
and
push
(bad)
cwde
adc
adc
jp
(bad)
in
movs
test
sub
fnsave
cmp
sar
dec
mov
xchg
imul
pop
nop
or
cs
jae
jno
push
and
fsub
jp
fild
mov
xor
repnz
and
jbe
pop
in
imul
bnd
scas
or
dec
sahf
sahf
das
or
aam
mov
sbb
(bad)
call
add
jbe
cmp
xchg
dec
mov
or
adc
and
sub
jge
sub
aad
in
sub
call
(bad)
adc
pop
(bad)
into
in
jp
xlat
dec
cmps
bnd
scas
jb
ret
inc
loope
loop
jp
gs
or
sbb
fwait
mov
movs
inc
out
cmps
pop
cdq
test
jge
loop
call
cmp
pop
jno
cli
pop
add
pop
lock
xor
sbb
push
push
and
mov
pop
sti
push
push
mov
mov
xchg
std
pop
inc
popa
fnstsw
int
mov
jp
arpl
sub
xchg
ss
inc
sub
jecxz
jl
push
popf
fwait
xchg
div
push
xor
cwde
pop
or
jle
mov
icebp
fwait
or
jecxz
lahf
mov
out
and
inc
scas
xor
pop
movs
ret
mov
into
cdq
dec
jbe
(bad)
rcl
lahf
test
(bad)
mov
xchg
jb
rol
pusha
pusha
rol
jo
ret
arpl
xor
imul
mov
ins
cmp
loope
mov
sub
xor
sahf
js
push
lods
adc
movzx
outs
jmp
inc
or
xchg
jb
mov
dec
push
outs
aad
xchg
jle
sub
cmps
outs
pusha
push
sar
lock
mov
inc
jg
and
out
add
jne
sahf
iret
push
or
(bad)
and
jno
jae
jne
cli
and
mov
popf
mov
test
and
bsf
jge
(bad)
je
lods
or
pop
mov
mov
leave
ret
xchg
push
fmul
lods
push
ss
clc
xor
sbb
inc
cmps
mov
lar
in
pop
neg
repz
jo
shr
mov
mov
or
out
idiv
mov
mov
push
fcomip
outs
push
in
dec
sbb
pop
or
adc
pop
dec
daa
sti
mov
fucom
mov
inc
js
dec
fcom
xchg
inc
scas
and
cli
jp
ror
lods
out
mov
out
outs
cmp
popf
sub
sbb
sub
jp
icebp
mov
int3
sti
sbb
test
push
lods
xchg
push
mov
ds
ds
adc
out
daa
jne
repnz
adc
cmp
gs
cmp
in
xor
lahf
jae
and
dec
in
(bad)
jle
rcr
ficom
mov
fs
mov
or
pop
mov
fidiv
mov
test
xchg
fcmovne
and
mul
mov
dec
jecxz
mov
and
inc
adc
jecxz
push
leave
popa
imul
cmp
mov
fdivr
stos
stos
rcl
outs
inc
or
popf
cwde
push
sbb
iret
lods
adc
add
jo
cmp
sub
outs
std
(bad)
out
xchg
jb
scas
cmps
dec
cmp
mov
push
mov
jg
pop
je
scas
mov
xor
call
fmul
xor
das
and
add
call
mov
pop
xor
popf
out
movs
loope
mov
into
es
std
push
sahf
mul
or
out
add
and
mov
pusha
pusha
rcl
xlat
xor
push
jle
or
shr
jo
and
xor
aam
aam
call
mov
mov
jae
cmps
into
pop
jne
inc
loopne
mov
dec
cmp
in
nop
lods
in
call
mov
les
fistp
inc
sbb
pop
dec
push
dec
jmp
xchg
mov
imul
inc
sbb
popa
out
lea
inc
mov
call
mov
aaa
adc
jo
adc
shl
jg
pop
push
mov
aad
jmp
fidiv
or
add
aad
or
sbb
bound
(bad)
div
rol
dec
cmp
outs
or
mov
in
hlt
lods
mov
push
pop
int3
cwde
cmp
pop
or
shl
inc
imul
push
sbb
jnp
mov
hlt
cmc
dec
ja
add
mov
repz
movs
jo
rol
jno
cmc
xor
jnp
inc
shl
enter
cmp
mov
ret
inc
jne
push
iret
or
frstor
xchg
call
dec
mov
mov
loope
push
arpl
sbb
and
aas
jns
mov
imul
mov
fsubr
in
xchg
or
jno
inc
lods
das
sub
ror
movs
mov
adc
adc
ret
(bad)
(bad)
in
jno
mov
lea
lds
dec
arpl
dec
clc
les
stos
fstp
pop
loope
cs
hlt
adc
sub
pop
sbb
sti
out
test
push
stos
mov
xchg
mov
fiadd
push
iret
int
out
dec
pop
mov
fcom
stos
aam
dec
mov
icebp
xchg
dec
(bad)
fidiv
gs
cli
jl
mov
sbb
ret
jge
xchg
push
pop
mov
add
nop
shr
test
ins
aas
fstp
mov
xor
xor
inc
dec
(bad)
push
sbb
jnp
or
fdiv
jmp
mov
sub
mov
cmps
push
pop
mov
add
aam
push
push
lock
out
cld
(bad)
shr
ret
test
add
cmp
ret
retf
or
cmp
cmp
test
sbb
(bad)
add
push
fcom
mov
paddusb
jb
pop
adc
movs
popa
clc
arpl
fild
cli
out
outs
xchg
sbb
sbb
retf
pop
and
xchg
ins
pop
cmp
push
mov
mov
rcl
dec
mov
enter
scas
cmps
rcr
mov
jne
inc
push
shl
xor
movs
ret
dec
outs
inc
daa
sbb
ja
or
ds
jmp
sbb
nop
ins
mov
pusha
lock
cmovp
xchg
lock
movs
push
or
jbe
push
xor
mov
nop
(bad)
repnz
jg
or
sub
(bad)
mov
mov
dec
cld
pop
inc
aam
push
imul
push
into
ss
ror
push
fbld
adc
xchg
or
cmp
jg
push
mov
(bad)
gs
sbb
xor
call
jp
cmp
inc
pop
ror
clc
ret
cs
push
jp
mov
rcl
adc
cli
sub
ins
repnz
neg
mov
imul
adc
rol
mov
adc
sbb
ins
iret
xor
pop
jo
pop
shr
push
xchg
mov
fdiv
enter
shl
pop
xor
loopne
sub
imul
or
cs
rcl
fsubr
clc
cmp
es
push
mov
mov
mov
jns
loop
fs
sbb
xlat
pushf
mov
xlat
cmp
rcl
xlat
xor
test
fwait
sbb
loop
sub
lahf
add
aaa
lods
fdiv
loope
add
cmp
fldenv
(bad)
fld
push
popa
sub
pop
mov
xchg
mov
xchg
xchg
or
cld
lock
push
cli
inc
cmc
int
pop
xchg
(bad)
fistp
dec
xlat
mov
cwde
push
cmps
loopne
and
push
das
dec
int3
ja
add
xchg
jns
inc
call
lds
pop
xor
fucomip
rcl
jnp
lods
adc
adc
jp
push
and
lods
neg
fist
xchg
(bad)
sbb
add
adc
push
pop
aad
pushf
pop
cmp
inc
mov
aaa
(bad)
and
push
adc
mov
inc
sahf
fimul
jmp
xor
inc
aad
inc
and
dec
pop
es
(bad)
sbb
sbb
xchg
(bad)
jno
push
mov
mov
inc
popf
sbb
dec
fdivp
mov
dec
gs
dec
dec
and
mov
int3
stos
mov
push
mov
enter
lods
mov
fadd
push
push
int3
mov
test
push
retf
dec
mov
jle
mov
mov
dec
ja
aas
imul
cmp
lahf
and
popa
pop
pop
test
daa
mov
bound
jne
ins
nop
mov
sub
call
aam
shl
xchg
lods
bt
out
cs
jns
scas
mov
sub
xor
cdq
xchg
retf
and
adc
pusha
sub
gs
outs
fbstp
mov
pop
movs
std
adc
arpl
jg
popf
pushf
jo
and
ja
in
push
les
leave
fs
cmps
out
sti
mov
xchg
scas
aas
mov
repz
into
popa
outs
mov
pcmpeqb
xor
xchg
loopne
rcl
push
test
inc
jo
mov
inc
loope
and
mov
and
xchg
rcl
xchg
xor
rol
push
mov
jno
mov
loope
rcl
shl
popa
lock
add
xor
loopne
popa
xor
mov
lock
shl
adc
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
pusha
outs
jo
adc
shl
rcl
pusha
pusha
xor
ins
mov
xor
rcl
xor
xchg
loopne
mov
nop
dec
in
xor
shl
jo
xchg
pusha
jo
xchg
and
mov
push
rol
push
pusha
popa
shl
pusha
xchg
sahf
fs
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
nop
imul
xchg
pusha
js
mov
sub
mov
es
test
loope
pop
popa
lea
add
and
fcmovne
retf
xchg
das
in
adc
ins
in
adc
dec
inc
mov
mov
jle
or
lea
and
mov
out
adc
fcomp
sub
es
push
rcr
aas
pop
pop
xchg
ret
sbb
scas
xchg
sbb
pop
jg
aad
xor
sub
scas
(bad)
retf
pop
cmps
stos
dec
adc
add
sbb
jmp
push
in
push
mov
sub
mov
shr
xchg
movs
retf
mov
xor
movs
(bad)
mov
jns
pop
fnstsw
dec
repz
jg
sti
aas
inc
cs
test
enter
cld
cli
stos
dec
loop
ret
push
dec
sbb
je
pop
cmps
aad
cmps
fldenv
mov
je
fisubr
dec
cdq
cld
dec
mov
jmp
imul
mov
movs
ficom
xor
xchg
push
scas
or
mov
aaa
xchg
out
(bad)
out
inc
mov
repz
shl
pop
aad
xor
pop
in
shl
stc
adc
enter
ds
mov
ja
mov
es
dec
cs
mov
jge
daa
xor
ins
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
nop
jg
popa
pusha
xor
icebp
jb
loope
and
and
rcl
adc
loope
jae
lock
rcl
rcl
pusha
rol
je
jmp
jne
sub
movs
dec
cmp
call
repz
sub
repz
lock
jl
cmc
ja
jbe
(bad)
jno
aas
sahf
pushf
xor
in
pushf
inc
sar
out
or
inc
xchg
dec
fild
(bad)
mov
out
dec
out
test
ja
ror
xchg
mov
imul
cdq
dec
sbb
and
push
push
or
jmp
cmp
xlat
mov
hlt
xchg
xlat
sar
fwait
repz
xchg
dec
shl
mov
jmp
aam
jo
pop
sbb
adc
div
mov
jmp
pushf
shr
retf
xor
out
(bad)
sbb
es
rcr
xchg
retf
sbb
sbb
add
jae
push
add
sbb
inc
sti
dec
sub
adc
cld
mov
daa
sbb
jo
inc
xchg
sub
mov
cmp
dec
test
cmps
movs
aam
xchg
mov
adc
pop
mov
lods
scas
jb
push
bound
test
inc
mov
xchg
jae
das
adc
cmp
cwde
xchg
daa
jo
scas
mov
in
mov
(bad)
sbb
lfs
mov
loop
stc
pop
xchg
(bad)
out
jnp
pop
imul
adc
mov
call
mov
mov
xchg
adc
adc
int3
xchg
dec
cmp
call
sar
scas
sti
mov
mov
mov
add
cmp
push
punpckhwd
xor
das
pop
popa
inc
mov
adc
(bad)
out
pandn
gs
icebp
leave
sbb
push
aaa
pop
sub
icebp
or
and
out
je
cmp
fld
imul
mov
retf
add
push
sub
dec
sti
arpl
pop
test
sub
mov
and
add
scas
add
inc
in
out
das
jne
jl
adc
mov
loop
add
cli
(bad)
lock
add
push
push
rcl
dec
mov
stos
jmp
jb
mov
sub
jl
outs
pop
xchg
fwait
jmp
jb
jb
bound
xor
lock
push
call
(bad)
stc
loop
leave
aam
dec
mov
jg
leave
mov
repz
add
and
in
hlt
jp
daa
js
test
sar
not
push
shl
inc
and
push
sti
jg
mov
fcom
inc
fnsave
sub
sbb
dec
(bad)
jp
mov
(bad)
cli
sub
adc
mov
pusha
pusha
rcl
pusha
loope
jo
shl
xor
xor
ficom
jo
repnz
mov
enter
int3
inc
xor
gs
data16
sbb
sbb
xor
mov
mov
mov
cld
ins
pop
outs
pushf
sbb
pop
dec
and
aam
dec
(bad)
cmps
je
movs
cmp
ja
in
lods
fstp
xor
out
push
test
pop
inc
mov
ja
sbb
fcomp
rol
call
fist
mov
inc
inc
mov
inc
div
inc
repz
sub
cmp
add
cli
sub
test
popa
inc
mov
cmp
jp
adc
jecxz
push
inc
xchg
mov
test
rol
call
call
mov
pop
mov
inc
leave
outs
clc
ins
test
xor
sub
mov
cmps
imul
mov
jle
stc
(bad)
sahf
jge
add
xor
jg
inc
pusha
xor
pushf
retf
mov
in
test
jg
shr
enter
sbb
in
outs
(bad)
arpl
(bad)
jnp
es
or
mov
xlat
xlat
mov
shl
out
inc
jge
mov
mov
rcr
stc
fwait
test
jbe
cmp
les
cmps
adc
pop
fnsave
push
sub
retf
icebp
and
inc
js
jge
adc
dec
push
cmp
and
retf
pop
mov
hlt
push
xchg
aas
add
cs
push
sti
mov
pop
mov
xor
loopne
xchg
arpl
ins
inc
shl
xchg
ins
adc
cs
mov
sbb
sbb
or
call
psllw
mov
pop
sbb
mov
fstp
xchg
mov
stos
inc
in
bswap
dec
pop
jp
sbb
jmp
xor
mov
retf
scas
lahf
jge
ins
shl
dec
adc
nop
and
mov
pusha
jo
xchg
inc
jo
and
push
repnz
aad
push
test
jge
shl
xor
mov
mov
popf
cmp
(bad)
out
push
jae
fdivr
outs
nop
adc
pop
jne
push
pop
icebp
or
out
arpl
mov
in
push
sbb
shl
pop
rcl
add
push
icebp
sbb
xor
test
jne
pop
cmp
xor
lea
mov
mov
lods
inc
cdq
mov
jns
inc
jb
mov
cli
mov
adc
aas
out
popf
pop
test
xchg
cmc
enter
std
xchg
xchg
jne
dec
or
scas
jge
mov
or
jge
mov
cmp
movs
sbb
mov
mov
popa
pop
aas
lods
out
test
mov
inc
icebp
sub
pop
jnp
das
addr16
arpl
dec
data16
(bad)
or
mov
push
fcmovb
mov
retf
fst
mov
daa
jns
shr
repz
ficom
hlt
retf
aad
shl
test
leave
call
mov
sub
mov
and
push
xlat
imul
outs
les
xor
mov
jo
xor
inc
push
shl
xchg
pusha
pusha
loope
push
xor
mov
and
xor
xor
jbe
lock
ja
mov
dec
jl
test
aad
push
inc
(bad)
mov
jg
mov
rol
adc
pop
ss
mov
mov
push
lods
loope
mov
(bad)
movs
mov
cmp
jmp
loopne
xchg
jmp
sar
inc
das
mov
dec
ficomp
stos
popf
add
push
mov
jo
clc
mov
les
jmp
test
sti
(bad)
call
mov
dec
mov
fisubr
(bad)
cmp
xchg
popa
sub
out
cwde
jge
add
pop
pop
xchg
add
pop
adc
mov
out
fs
fsub
jmp
sbb
jb
cmc
pop
add
loop
lahf
inc
push
add
push
sbb
add
cmpxchg
pop
cli
mov
ret
jbe
ds
sub
in
xor
(bad)
xchg
cmp
retf
mov
(bad)
mov
dec
sub
lds
cmps
jmp
mov
sub
pop
adc
outs
bound
inc
sahf
pop
mov
test
mov
lea
sub
jno
dec
sbb
ret
and
fst
out
jns
and
das
push
push
xlat
mov
sub
int3
jbe
(bad)
dec
push
xor
in
or
hlt
test
xchg
cli
jmp
add
lea
cmp
mov
xchg
je
dec
std
jno
dec
rcr
push
repz
mov
push
push
xor
xor
scas
in
scas
cs
jo
mov
(bad)
xor
(bad)
lea
dec
add
out
std
repnz
stc
cmp
fsubr
and
jb
push
push
(bad)
xor
imul
scas
cmp
scas
sahf
pusha
dec
mov
loopne
sbb
jl
ins
mov
jle
push
hlt
mov
in
mov
int3
loope
jns
xchg
ficom
pop
xor
mov
loope
in
out
jo
push
ins
adc
in
push
ret
or
lods
lahf
(bad)
mov
add
not
into
mov
movs
adc
mov
lods
loopne
cmp
(bad)
sub
rcr
jnp
pop
ror
retf
mov
(bad)
jbe
out
add
inc
adc
xlat
push
or
mov
xchg
add
mov
cmp
stos
out
push
cmp
loopne
pop
addr16
add
ins
popf
stos
jecxz
xor
(bad)
daa
sub
sbb
icebp
xchg
xor
fsub
push
xchg
jl
cmps
fadd
cmp
inc
push
rcr
into
push
mov
pusha
push
stos
fbld
icebp
jp
xchg
fldpi
jp
mov
dec
mov
and
xor
into
mov
xchg
int
mov
js
pop
(bad)
(bad)
jo
cs
fisttp
out
aas
and
push
std
adc
and
dec
pop
and
arpl
sub
(bad)
sbb
out
cli
jae
pop
mov
xor
add
inc
or
iret
mov
mov
mov
and
xor
fwait
and
pop
loopne
(bad)
jl
ret
mov
jecxz
mov
(bad)
stc
mov
ret
sbb
data16
add
cmp
and
int
cmp
dec
aam
jns
fisubr
pop
dec
into
addr16
rcr
mov
outs
out
aas
pop
fidiv
adc
dec
adc
dec
jmp
fisttp
movs
js
push
js
mov
xchg
and
(bad)
data16
idiv
imul
push
dec
lods
sub
cmp
fdivr
dec
aas
sub
dec
hlt
pop
jg
inc
cmp
js
enter
mov
aaa
ret
sti
inc
dec
sub
in
scas
dec
push
clc
xor
cdq
dec
xchg
out
test
push
cmp
mov
mov
mov
sbb
pop
pop
and
test
gs
fisubr
stos
cmp
mov
add
ja
fadd
xchg
mov
cmps
call
sar
dec
push
scas
push
enter
rcr
ins
ds
mov
adc
add
sti
les
out
sahf
movs
scas
cmp
into
(bad)
aad
out
sahf
mov
add
sub
add
sbb
or
cmps
add
push
mov
dec
adc
aaa
mov
mov
js
mov
stos
std
inc
fmul
fbstp
jo
ret
movs
jbe
les
lods
adc
daa
dec
(bad)
sti
add
aaa
or
adc
mov
outs
inc
into
cmp
test
pop
ret
cmp
xor
mov
rcl
lea
sub
shl
rcl
sub
aaa
leave
imul
add
inc
cdq
mov
jae
mov
xchg
cmc
xchg
inc
iret
sbb
lea
rcr
or
(bad)
imul
mov
mov
(bad)
stc
add
or
push
mov
inc
mov
scas
vmwrite
jge
adc
dec
jmp
ss
cmp
aad
stos
ffreep
cwde
stos
mov
jo
sbb
xchg
dec
pop
aaa
mov
sub
ins
fsubr
int3
fdivr
dec
push
mov
xchg
movs
mov
mov
mov
dec
push
xlat
mov
jmp
mov
dec
inc
xor
mov
pushf
lods
dec
xlat
or
fisttp
imul
xor
outs
pop
push
pop
ret
es
dec
mov
mov
add
mov
int3
mov
mov
sahf
rcl
rcl
inc
(bad)
stc
push
sbb
rol
xchg
cdq
mov
jne
lock
pop
mov
push
lods
push
retf
jg
add
add
add
cli
xchg
or
mov
xor
stc
(bad)
out
push
sub
fstp
ja
cmp
push
ins
test
cld
std
push
and
and
xchg
popf
pop
jno
cmp
jmp
sub
ficom
neg
mov
push
adc
cmp
or
xchg
and
call
retf
out
out
(bad)
push
adc
mov
call
repnz
or
loop
aad
cmp
mov
nop
fwait
out
pop
sti
pop
add
ins
lahf
out
xchg
mov
dec
cli
js
inc
inc
inc
sbb
shr
ins
js
or
lods
or
xlat
shl
adc
xor
mov
inc
mov
int3
sti
dec
mov
aas
lock
jae
or
cmps
mov
(bad)
dec
inc
dec
or
mov
sub
outs
loopne
sbb
cmp
mov
dec
xchg
neg
(bad)
jp
je
pop
div
movs
add
inc
in
test
adc
push
scas
ja
mov
aaa
mov
dec
lods
pop
jno
mov
pcmpeqd
or
sbb
lods
(bad)
and
out
pop
push
pop
add
dec
push
pop
in
adc
int3
add
mov
push
neg
add
in
xchg
shr
retf
xlat
cmp
loope
jno
inc
dec
test
sbb
mov
mov
into
cmp
jl
call
cmc
cmp
or
pop
es
mov
dec
aaa
pop
mov
pop
(bad)
(bad)
inc
mov
jbe
or
and
sub
repnz
sti
es
loop
inc
aad
jmp
ret
test
mov
pop
ret
dec
aad
pushf
leave
arpl
inc
xor
mov
adc
nop
dec
popa
das
sbb
fs
push
xchg
inc
jo
mov
push
loope
pusha
xor
xor
aad
jo
fld
ins
int3
sub
xchg
pushaw
xor
ins
lock
inc
jbe
mov
mov
cmc
inc
xchg
fistp
cmp
xor
xchg
cmp
iret
pop
in
gs
mov
mov
cmp
test
rep
dec
cld
jp
xor
arpl
dec
(bad)
fnsave
mov
enter
sbb
(bad)
xchg
mov
gs
adc
pop
jg
pop
push
mov
xchg
iret
add
packssdw
mov
xor
inc
jge
pop
jge
icebp
push
rcl
push
xchg
cmp
mov
sbb
sahf
hlt
call
adc
or
pop
stc
enter
cmc
cmps
mov
dec
hlt
sbb
inc
dec
push
cmp
jnp
and
dec
or
cmp
lods
jbe
fs
xor
mov
repnz
into
xchg
stos
ss
add
xor
pusha
test
or
push
iret
push
push
mov
jg
sbb
jns
lds
js
lds
fdivr
push
inc
or
inc
nop
imul
push
rcr
outs
repz
test
(bad)
push
dec
push
aad
stc
shr
pop
scas
jle
daa
mov
xlat
test
xor
sub
xor
imul
dec
mov
cmp
adc
out
sub
add
repz
push
cdq
mov
cdq
pop
rol
push
not
pop
inc
push
fnstcw
jns
int3
and
mov
mov
mov
pop
push
mov
jle
jmp
clc
cmps
dec
mov
repz
rcl
jb
popa
push
push
pop
push
jb
sar
adc
push
rcl
fsubr
mov
pop
jb
popf
mov
cmp
ds
popf
sub
add
inc
out
fimul
rol
gs
js
push
xor
adc
cmp
add
cdq
cmps
cmp
popa
(bad)
xor
stos
cwde
inc
sub
dec
sbb
add
loope
xor
movs
or
icebp
cmp
(bad)
rcr
xchg
push
inc
(bad)
mov
dec
xor
or
dec
mov
mov
mov
outs
fsubr
xor
imul
cld
hlt
xor
xchg
cmp
push
mov
dec
scas
pop
sar
sub
enter
ss
or
jae
cmp
inc
movs
jle
xchg
fisubr
js
stos
call
mov
cmp
rcl
iret
icebp
cmp
mov
cwde
loop
test
ins
leave
xor
and
daa
sbb
push
cmp
xor
cli
in
mov
ins
inc
mov
pop
cmps
inc
lahf
popa
xor
dec
(bad)
test
jecxz
outs
xor
or
add
movs
or
retf
(bad)
cmp
in
cmp
inc
or
loop
mov
into
xor
push
in
jo
xlat
shl
sub
jge
pushf
and
rcl
sahf
sub
pop
push
mov
int
lds
sub
int
jmp
push
adc
cmp
fcom
test
xchg
(bad)
cmp
mov
scas
jge
loop
fnstenv
test
push
icebp
lods
pushf
jo
dec
push
icebp
test
stos
out
push
inc
jmp
movs
bound
cdq
cmc
push
mov
push
lods
pusha
jmp
scas
mov
je
fwait
mov
dec
jns
mov
fisub
pop
hlt
jno
fs
call
push
(bad)
adc
fucomip
inc
inc
clc
fidivr
pop
test
retf
pop
and
cmp
jmp
xchg
pusha
push
add
stos
sahf
fcom
xor
mov
inc
dec
jecxz
jbe
in
pop
sub
jne
fdivr
mov
mov
popf
cmc
test
dec
movs
mov
sbb
lods
movs
scas
sub
iret
jbe
fstp
imul
push
mov
retf
inc
cmp
sub
arpl
std
sub
inc
pop
adc
call
adc
or
out
add
gs
pop
in
repnz
int
jl
push
ins
add
and
dec
or
and
xchg
mov
sbb
mov
ss
imul
es
addr16
mov
pop
inc
xchg
or
inc
mov
xor
add
xor
cdq
scas
dec
sar
xchg
popa
pop
mov
repnz
jnp
nop
sub
jmp
mov
xlat
mov
inc
pop
xchg
jns
and
aam
jmp
push
nop
mov
shr
push
sbb
xor
xor
fwait
data16
pop
push
cmp
and
jle
mov
mov
arpl
popf
xchg
addr16
add
pusha
jno
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
mov
jo
xchg
inc
jns
shl
jo
xchg
and
loope
jo
rcl
cmp
adc
dec
adc
and
xchg
rcl
je
rcl
mov
mov
clc
pop
xor
push
sub
cmp
push
icebp
movs
data16
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
and
jg
add
pusha
jo
xchg
jo
rcl
fs
test
fcomp
in
and
pusha
repnz
xor
sub
fs
add
xchg
or
mov
in
pop
imul
push
sbb
aas
int3
retf
aam
cdq
inc
cld
jmp
rcr
adc
in
pushf
ss
sbb
leave
call
movs
mov
enter
pop
fwait
scas
js
jno
fstp
and
aad
dec
sbb
xchg
sub
xlat
mov
nop
mov
cwde
test
mov
fmul
ja
pop
xor
jae
cwde
sbb
add
sub
stos
mov
ret
add
(bad)
les
aaa
in
pop
sub
xchg
pop
cli
retf
mov
or
or
push
push
lods
adc
daa
rol
mov
aam
push
push
leave
sbb
lds
mov
je
aad
hlt
clc
inc
dec
and
fnsave
adc
popf
imul
mov
push
ja
inc
pop
fst
in
jo
ins
xor
inc
mov
cld
popa
cs
adc
jle
cmc
aam
ss
fsubr
inc
rcl
add
loope
dec
jg
push
icebp
and
ins
outs
jo
add
mov
inc
rcl
pusha
jo
xchg
jo
rol
je
leave
xchg
fs
xor
jge
shl
icebp
or
shr
cmp
pop
adc
imul
lahf
mov
sbb
add
mov
daa
es
out
iret
hlt
pop
jge
cmp
pop
jbe
mov
push
pop
push
pusha
mov
xor
stos
inc
pop
loop
cdq
push
adc
adc
in
shl
push
jno
cmp
arpl
fld
xor
dec
ja
stos
add
fisubr
sahf
xlat
or
retf
add
jp
jbe
mov
add
in
and
test
xchg
pop
pushf
lahf
mov
pop
mov
jb
dec
cmp
loop
add
mov
outs
add
xchg
repnz
out
or
mov
xchg
das
mov
jmp
pop
sub
pushf
xchg
addr16
mov
popa
pusha
shl
and
xchg
jo
lds
jbe
int
fs
outs
fmul
arpl
and
enter
bound
xchg
shl
in
mov
push
mov
mov
sbb
repnz
inc
popa
test
popf
jecxz
mov
div
ss
jp
xchg
into
inc
xchg
retf
call
aam
retf
aas
je
xor
jae
sbb
js
adc
mov
std
adc
imul
mov
(bad)
(bad)
ds
sbb
test
popa
lock
stos
lock
jle
cdq
and
cmp
jo
gs
sbb
out
loopne
fst
es
clc
pop
test
jmp
mov
cdq
adc
inc
cs
imul
adc
push
ins
sbb
cmps
mov
mov
aam
ja
xlat
(bad)
mov
call
cwde
xchg
lds
add
add
test
cmp
in
pop
jecxz
(bad)
cmp
add
mov
loop
imul
inc
add
clc
cmps
loope
fcomp
xchg
(bad)
inc
mov
xor
icebp
ret
pop
xor
je
call
xchg
sbb
push
sti
push
cmp
in
cmp
cmps
cmps
test
dec
imul
aam
sub
jns
sbb
cmps
repnz
jns
push
push
int
inc
(bad)
pop
jnp
add
pop
fldpi
mov
into
cmp
sar
mov
clc
or
stos
jbe
sub
icebp
out
stos
out
push
call
mov
jo
adc
dec
cmp
mov
sbb
push
stc
fisttp
mov
mov
xor
stos
cmp
inc
pop
adc
pcmpgtw
(bad)
jbe
cmps
push
inc
inc
imul
js
sub
in
and
shl
mov
sub
shl
out
call
ret
sub
fmul
cmp
js
fcomip
xlat
pop
(bad)
cmc
mov
push
cld
push
lods
call
add
das
dec
inc
mov
xor
mov
dec
mov
in
xchg
aad
sub
adc
pusha
cmp
push
cmp
inc
retf
dec
fsub
mov
jmp
mov
and
push
sar
stc
dec
and
mov
adc
and
jg
xor
jb
cmovns
test
push
test
dec
stos
mov
mov
xor
inc
sbb
test
jae
test
mov
pop
imul
aam
xchg
stc
fwait
(bad)
push
sub
mov
pop
or
mov
in
jbe
push
jmp
jo
fwait
pop
ret
dec
mul
imul
js
push
cmps
fnsave
nop
test
mov
daa
popa
lods
test
out
inc
aam
push
jno
jnp
loopne
sbb
adc
int
push
cmp
loopne
xor
add
outs
push
adc
mov
jecxz
and
std
push
jl
mov
fdivr
retf
dec
mov
stos
jne
jno
fist
icebp
arpl
xor
cmp
retf
lock
imul
xor
lock
push
jp
ror
jge
fild
mov
div
or
pushf
mov
fbstp
pop
xor
adc
pop
cmp
call
adc
and
enter
pusha
cs
pop
cdq
jb
mov
stos
lahf
jp
aas
jge
gs
sbb
leave
jp
movs
mov
push
xchg
daa
xchg
jno
mov
mov
js
mov
cmp
sbb
sbb
in
adc
xor
ins
xchg
jle
cmp
xor
jmp
mov
int3
mov
jae
xor
add
inc
xor
push
mov
ins
cwde
and
push
imul
push
retf
jae
fs
xor
jge
call
sub
adc
jne
ret
xchg
or
ja
movs
cmp
js
and
jo
xor
cmp
(bad)
(bad)
push
pop
xchg
sbb
push
xchg
jns
in
push
adc
(bad)
jbe
popa
(bad)
push
ins
push
inc
loop
add
mov
sbb
and
jne
rcl
loope
nop
scas
xor
mov
mov
adc
out
scas
lods
test
je
pushf
jae
add
xor
or
pop
sar
rol
push
mov
pop
loope
add
int
fwait
mov
xchg
mov
bnd
imul
lock
add
xor
mov
nop
lock
add
aaa
stc
add
mov
aaa
add
xchg
push
push
xchg
addr16
inc
ins
test
jb
pop
inc
movs
adc
mov
sbb
sbb
fst
cmp
fs
fist
rol
add
sbb
jmp
adc
add
in
jns
jg
xlat
or
idiv
(bad)
adc
dec
add
xchg
mov
xchg
inc
psrad
inc
les
adc
fld
jp
xchg
ja
je
mov
js
out
idiv
fistp
cmps
ins
repnz
pop
xchg
cmp
or
and
cs
(bad)
adc
sbb
loopne
inc
jmp
pop
pop
outs
clc
call
xlat
push
mov
imul
xchg
jno
lods
mov
shl
aam
mov
movs
mov
jecxz
pop
xchg
or
lock
inc
pop
dec
add
ins
js
inc
adc
jbe
xchg
aad
aam
lea
mov
push
jbe
out
pop
ins
adc
popa
scas
mov
in
jb
ret
jle
mov
adc
fadd
retf
int
mov
or
rcl
xor
fprem
aam
enter
(bad)
jl
xchg
out
aas
push
int
lds
fs
aad
pusha
lock
jo
cs
inc
shl
inc
icebp
mov
xor
inc
rol
add
mov
shl
mov
and
and
mov
add
inc
mov
sub
icebp
test
xor
rcl
add
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
xor
shl
push
rol
inc
rol
and
outs
jo
nop
jo
and
pusha
jo
xchg
adc
icebp
loopne
(bad)
rcl
add
and
rcl
xor
shl
ds
mov
and
into
and
loopne
xchg
icebp
xor
xchg
and
(bad)
push
push
mov
mov
or
push
jo
popa
bound
mov
push
mov
pop
sbb
sub
xchg
lock
mov
imul
rcr
(bad)
outs
push
rcr
add
retf
lods
sti
(bad)
in
test
xchg
jae
inc
push
cmps
(bad)
mov
adc
inc
mov
(bad)
cli
cmp
mov
push
sbb
cmps
push
sub
xor
imul
xchg
cdq
dec
or
xchg
div
inc
sahf
out
ss
dec
add
fwait
adc
aad
adc
add
test
(bad)
jle
je
gs
jns
lods
shrd
js
shl
jge
icebp
loopne
or
adc
xor
xchg
sub
leave
daa
leave
stc
movs
loop
dec
paddq
data16
sub
hlt
je
ins
call
ins
or
shl
mov
mov
mov
je
adc
dec
div
pop
cld
mov
nop
push
pop
pop
(bad)
or
loopne
dec
pcmpgtd
enter
add
mov
lds
cvtps2pi
mov
push
xchg
sbb
sbb
in
xor
fs
xchg
ja
sbb
popf
popf
dec
fwait
leave
jb
pop
add
xor
inc
push
pop
addr16
pop
sub
lods
aam
call
and
loop
xchg
dec
daa
outs
in
add
push
jne
cs
stc
movs
jnp
lea
lock
cmp
mov
push
lods
push
in
mov
mov
jnp
sub
outs
in
add
push
adc
aam
addr16
dec
cld
mov
xchg
mov
pop
daa
test
jns
xchg
mov
dec
test
in
inc
fild
add
fcom
shl
push
jne
cli
js
push
mov
adc
sar
inc
pushf
add
outs
lods
stos
or
pusha
rcl
jb
xchg
adc
les
jnp
leave
cdq
pusha
inc
rcl
xor
add
loope
inc
jo
icebp
pusha
inc
rcl
add
xchg
mov
pusha
and
xchg
add
shl
vpabsw
add
mov
mov
cmp
jnp
pop
loope
scas
fsub
pop
add
pop
push
xor
sbb
test
mov
inc
addr16
iret
in
xchg
mov
fistp
adc
push
bound
outs
fwait
jg
imul
mov
jg
out
push
push
sub
push
outs
popf
nop
pop
stos
mov
cmp
popa
in
repnz
jnp
repnz
inc
mov
ins
sbb
sbb
retf
inc
std
cli
loop
sub
imul
test
mov
cmp
push
in
push
(bad)
js
data16
pop
cmp
pop
jns
or
loope
popa
int
jp
fild
pop
adc
icebp
rcr
dec
aad
std
icebp
push
mov
inc
mov
and
xchg
test
cmp
mov
or
push
fcmovne
mov
mov
push
std
inc
push
push
in
xchg
lock
fidiv
mov
or
mov
ins
sub
mov
adc
cdq
call
lea
inc
lods
or
nop
xchg
xor
in
sub
and
jnp
test
xor
stc
mov
push
fdivr
(bad)
cwde
fadd
mov
outs
stos
es
fstp
fistp
fcmovnb
aam
jns
sti
mov
popf
add
aad
inc
and
out
in
inc
call
mov
jp
push
and
cmp
fdiv
cdq
xchg
int
mov
iret
ss
movs
xchg
add
xor
xchg
sbb
jmp
jl
scas
push
add
out
stos
icebp
dec
or
jne
mov
(bad)
jbe
inc
and
pop
aam
mov
aad
aad
movs
cmp
jbe
out
inc
ins
mov
sub
int
add
inc
rol
add
or
cmp
sub
ja
xor
iret
(bad)
adc
test
shr
aad
dec
pushf
aas
mov
fstp
fs
cmp
gs
ret
gs
rcl
fisub
cmp
dec
adc
or
mov
xchg
xor
pop
sub
retf
push
fild
and
pop
and
in
out
pop
cwde
stc
fild
pop
rol
jmp
fsubrp
push
cld
adc
ja
xchg
imul
xchg
stc
xlat
repnz
and
mov
sub
retf
xchg
mov
retf
push
mov
dec
sub
jle
mov
es
sbb
xor
jl
rcl
pusha
push
icebp
xchg
pusha
jo
xchg
push
jo
and
jno
mov
jno
xchg
add
xor
in
popa
pushf
jo
repnz
inc
and
add
mov
in
xchg
loope
ss
mov
mov
xor
jnp
iret
pop
push
add
add
push
test
xor
and
cmp
jmp
call
lahf
lahf
in
pop
mov
push
pop
dec
test
sub
cmps
in
xor
dec
inc
pop
xor
sub
xor
dec
push
out
and
rcl
and
mov
pusha
jo
add
repz
shl
nop
xchg
jno
repnz
rcl
push
rol
inc
out
(bad)
int3
call
call
cmp
out
jecxz
add
jle
inc
popf
movaps
xlat
ja
cwde
cdq
cmps
shr
lahf
shr
jnp
adc
sbb
inc
cmp
test
lods
sub
(bad)
fstp
xor
sub
fwait
(bad)
pushf
mov
dec
scas
int
cmps
xor
jl
and
mov
mov
push
and
cld
jb
jp
pop
jmp
xchg
fucom
fidivr
mov
mov
fisttp
jle
jnp
add
out
or
stos
sub
imul
push
ins
(bad)
xor
pop
add
pop
mov
pop
inc
test
mov
and
mov
and
popf
dec
(bad)
fiadd
lock
hlt
sub
jbe
stos
and
mov
scas
sbb
mov
sbb
adc
mov
scas
add
mov
rcr
(bad)
adc
rcl
mov
mov
mov
stc
mov
aad
mov
xor
sub
lods
out
stos
adc
jne
sub
dec
jp
fcomip
das
daa
xchg
dec
xor
cld
ins
and
fdiv
not
dec
pop
iret
pop
sbb
ins
push
pop
test
pusha
add
in
mov
adc
xor
mov
and
in
aaa
push
sbb
xchg
shr
ret
inc
(bad)
xchg
mov
ins
aaa
mul
retf
push
(bad)
sbb
mov
call
push
and
xchg
in
add
fdivr
addr16
mov
ja
iret
lock
inc
jle
in
cmps
fld1
or
cld
jne
pop
scas
(bad)
sbb
mov
push
push
mov
mov
xor
jo
sub
pop
cmp
mov
imul
adc
adc
mov
arpl
xchg
dec
ja
enter
cmp
and
clc
jl
pop
movs
lahf
shl
dec
and
push
or
xchg
mov
cmp
repnz
cmps
gs
lea
xor
aad
jnp
outs
jno
dec
mov
mov
aam
dec
mov
and
es
mov
sub
mov
push
rcl
jno
sub
lods
cmps
cmp
dec
iret
bnd
retf
(bad)
push
aad
(bad)
push
sbb
sub
and
and
and
xchg
and
mov
push
xchg
shl
xchg
jo
rcl
popa
xchg
mov
bound
test
call
xchg
popa
inc
test
jae
out
test
cdq
mov
pop
aad
pop
inc
stc
aam
dec
mov
ins
lock
shl
sbb
push
jecxz
clc
or
xor
test
aaa
add
jle
enter
sbb
inc
imul
mov
mov
aaa
ror
or
mov
dec
pop
jle
or
into
scas
mov
mov
int3
int
(bad)
mov
xor
(bad)
call
xor
mov
psubsw
(bad)
and
pop
xlat
out
movs
int3
cmp
pushf
icebp
repnz
xor
or
inc
jecxz
fxch
repnz
es
jle
xor
rcl
or
(bad)
pop
lods
adc
sub
xor
scas
dec
popa
and
jmp
mov
into
add
sti
fcomip
dec
push
push
pop
sbb
mov
xchg
dec
xor
outs
mov
das
and
ins
mov
loop
xchg
std
and
std
sub
mov
push
or
sub
cmp
lea
and
movs
dec
dec
sub
and
mov
mov
in
jnp
out
mov
es
sbb
xor
push
mov
sbb
(bad)
cmp
inc
mov
dec
call
jecxz
cs
arpl
ret
mov
mov
and
pop
mov
or
retf
mov
push
cwde
and
inc
iret
es
repz
or
in
popf
je
sbb
mov
movs
xor
test
sub
cwde
push
cld
leave
sbb
and
int3
mov
scas
jg
mov
movs
jae
es
data16
ds
jae
sbb
xchg
mov
(bad)
xor
aam
pop
mov
push
arpl
in
mov
mov
cmc
out
loopne
retf
fstp
je
hlt
push
xor
aam
out
outs
lea
cmp
daa
xor
xlat
xor
outs
cli
mov
call
pop
dec
mov
sbb
inc
sbb
jp
out
imul
std
push
aas
sub
or
test
mov
push
outs
loop
je
icebp
cli
(bad)
popf
pushf
call
hlt
mov
cwde
imul
fstp
sub
mov
add
xor
loopne
xchg
or
mul
cdq
pop
sub
mov
out
jge
mov
sahf
pop
lock
jns
sub
mov
add
pop
xor
(bad)
ins
mov
pop
jae
add
sub
adc
push
pop
push
aaa
mov
mov
xor
jae
mov
retf
sub
or
mov
daa
repnz
stos
call
je
jne
pop
(bad)
or
aas
or
popf
jmp
int
aaa
jmp
addr16
hlt
ret
sbb
les
jg
xchg
(bad)
xor
(bad)
aam
aam
mov
out
stos
aas
stc
jle
jmp
inc
add
aam
inc
aam
xor
push
mov
(bad)
adc
jns
cmp
scas
call
mov
push
rol
cwde
add
or
or
xor
and
pop
add
and
push
push
ret
sbb
cmc
jo
xor
aad
ins
pop
xchg
and
sub
mov
add
in
xchg
adc
and
sti
or
sar
cli
inc
dec
jge
push
dec
fisttp
and
stos
lea
adc
mov
retf
jp
jns
cmc
loope
loope
push
mov
mov
lock
xor
out
cwde
xchg
sar
jecxz
je
pop
loope
add
mov
(bad)
lods
lods
je
lds
outs
and
lods
inc
mov
imul
inc
cld
cs
xlat
imul
jle
push
(bad)
into
test
(bad)
shr
xchg
les
adc
cwde
mov
push
cmp
xor
and
cmp
(bad)
test
jae
and
sahf
fiadd
push
adc
push
mov
or
(bad)
stc
aas
mov
pop
loop
jns
outs
lea
pop
jecxz
ins
mov
inc
popf
(bad)
cs
mov
sub
pop
pushf
mov
jmp
int3
mov
jno
mov
(bad)
int
(bad)
iret
es
xor
sbb
popa
xor
sub
ret
retf
mov
sub
xor
test
xchg
scas
sub
jns
aas
inc
dec
cmc
jns
xchg
fimul
test
sbb
aaa
std
rol
push
cli
fadd
and
pushf
push
out
xchg
dec
and
xlat
jmp
movs
sub
(bad)
inc
push
stos
aam
popf
cmp
popf
and
leave
jns
sub
outs
or
retf
inc
pop
pop
mov
imul
xlat
in
test
add
adc
mov
movs
dec
cmps
sub
inc
inc
pusha
cmp
xchg
imul
cmc
lea
ret
push
jo
rol
leave
sbb
pop
int3
xchg
sahf
fsubr
loopne
popa
ss
outs
pop
in
cs
jmp
adc
mov
adc
cs
jmp
(bad)
idiv
push
gs
(bad)
jmp
fimul
xchg
(bad)
jnp
pusha
and
inc
pop
xchg
mov
imul
cmp
ret
adc
xor
ins
push
ds
dec
sti
daa
and
adc
jne
bound
mov
ss
aam
jns
ret
and
in
test
(bad)
mov
into
sbb
sub
dec
xchg
les
mov
test
adc
mov
sub
cmp
aad
loope
pop
cs
(bad)
movs
addr16
inc
jb
xchg
pop
dec
inc
adc
ds
xor
mov
xchg
inc
inc
lods
mov
outs
mov
outs
xchg
xor
div
bound
cmp
mov
sub
ja
ja
xor
and
and
pop
iret
xor
pusha
shl
arpl
pushf
cmps
xor
push
imul
mov
or
enter
cmps
inc
or
pop
daa
fabs
xchg
xor
lods
in
adc
call
fsub
pop
mov
mov
jno
js
push
jge
call
shl
inc
cmp
cmp
ss
gs
pop
pop
adc
and
fcmovb
ror
leave
mov
mov
aas
push
ins
xor
ins
lock
inc
xor
jo
aam
jae
fadd
arpl
pushf
outs
fmul
arpl
adc
and
mov
fwait
sbb
cwde
mov
mov
xor
addr16
div
pop
push
test
les
xchg
lods
je
scas
mov
ja
dec
jae
adc
movs
js
mov
iret
(bad)
or
push
cwde
stos
popa
push
mov
inc
pop
xchg
xor
pop
in
scas
push
mov
dec
and
push
rcl
pop
mov
addr16
push
into
das
ins
out
hlt
pusha
push
int
mov
mov
dec
xor
jno
sahf
and
sub
call
fisubr
js
sub
pop
push
sahf
adc
sbb
outs
repnz
inc
movs
or
push
rol
xchg
outs
retf
mov
mov
jp
cmp
adc
xlat
(bad)
cmp
mov
in
push
jg
loop
xor
mov
mov
lods
out
into
fmul
icebp
sbb
cmc
sub
cmp
and
cld
cmp
rcr
adc
dec
lods
aas
call
jp
lods
pop
and
xchg
sahf
ror
add
cmp
fisttp
out
sbb
xchg
loope
into
mov
repnz
lods
js
jbe
(bad)
test
(bad)
ret
call
pop
out
and
imul
sahf
mov
arpl
xchg
inc
in
adc
mul
leave
sub
jo
push
(bad)
sar
ficom
and
inc
repz
jnp
je
js
lds
call
fwait
or
xchg
adc
dec
es
adc
mov
scas
adc
and
cli
aad
outs
addr16
packsswb
(bad)
cmps
dec
test
pop
cmp
add
xor
mov
lods
es
das
mov
add
and
test
ss
mov
pop
sub
jecxz
in
push
add
movs
(bad)
jp
mov
out
test
or
mov
push
pop
pop
cmps
jo
cmp
xlat
adc
cmp
pop
gs
loopne
loopne
inc
mov
in
jg
in
cmp
pusha
sahf
mov
retf
dec
inc
stc
push
mov
jns
push
in
fisub
cmp
cmovb
pop
add
and
add
movs
rol
sbb
pop
js
mov
push
mov
cmp
(bad)
cmp
xchg
jnp
adc
fldenv
lds
add
push
ret
add
xchg
mov
mov
hlt
and
sti
imul
inc
or
stos
xor
cmp
daa
sub
add
lock
aam
outs
xor
fimul
in
sbb
aas
loopne
mov
in
cmp
pop
mov
sbb
int3
inc
sbb
imul
inc
js
push
mov
adc
je
jne
jl
stos
lahf
stos
fnstcw
adc
xor
fs
mov
xchg
ret
test
xchg
dec
mov
js
cmp
in
adc
xor
and
and
push
cli
(bad)
adc
lods
adc
jmp
test
sahf
mov
adc
lock
out
int
jl
int3
bound
fiadd
scas
xchg
xchg
inc
cmps
cdq
mul
in
jge
sub
add
loopne
push
mov
sub
neg
repnz
inc
popa
jmp
sbb
push
shr
mov
push
mov
pop
mov
repnz
out
scas
mov
outs
imul
mov
mov
fstp
or
ins
jg
jle
cmp
xchg
into
cli
xchg
test
adc
in
inc
add
mov
ja
add
leave
pop
mov
gs
sub
adc
adc
dec
sar
out
mov
dec
push
popf
pop
mov
mov
mov
sti
xchg
std
dec
xchg
daa
push
mov
imul
fnop
xchg
(bad)
cmps
push
jnp
mov
jecxz
iret
jecxz
nop
in
mov
mov
test
sub
sti
retf
mov
popf
xor
mov
ds
(bad)
jne
push
pusha
out
jmp
sub
adc
jae
clc
inc
push
fnsave
data16
add
pusha
jno
xchg
rcr
push
shr
mov
mov
bound
sub
push
lock
test
les
adc
and
pop
movs
lock
mov
sub
shl
xor
sub
and
(bad)
into
ja
out
fsub
xchg
(bad)
loope
xor
int3
fdivr
mov
dec
and
in
out
pop
(bad)
out
or
inc
test
inc
jno
add
jecxz
xor
or
sbb
push
loope
pusha
pusha
rcl
jo
ret
xor
mov
jo
and
ss
mov
out
fnstsw
dec
sub
push
sbb
pusha
retf
(bad)
mov
cmp
sbb
inc
loope
out
pop
pop
xchg
push
ss
jl
arpl
sbb
test
sbb
pop
ret
out
inc
jg
cmp
cmp
call
mov
data16
xchg
mov
dec
shl
cmp
dec
mov
sub
or
and
daa
push
(bad)
jmp
and
shl
dec
mov
mov
xchg
mov
jecxz
sub
cmp
fcos
mov
inc
add
jae
add
dec
sbb
mov
retf
psllw
jecxz
lods
pop
shl
lods
cli
mov
jecxz
dec
sar
fisubr
fs
pop
or
adc
push
scas
cmps
push
dec
fwait
scas
sbb
xor
loope
pusha
pusha
rol
jo
ret
popa
les
(bad)
ins
shr
jo
and
(bad)
loop
xor
lods
pop
xor
push
shl
lahf
in
ja
xchg
dec
imul
sub
fs
data16
je
and
das
lods
mov
lahf
sub
pop
icebp
add
dec
outs
out
retf
mov
mov
clc
movs
sbb
inc
push
movs
pop
fs
cdq
sub
sub
mov
xchg
data16
clc
mov
cs
outs
push
pop
jb
in
adc
lock
mov
stc
iret
cmp
call
cmc
jp
inc
arpl
sub
xchg
cwde
jle
or
ins
(bad)
xor
xchg
hlt
scas
mov
pop
and
sbb
imul
test
je
and
ja
xchg
xchg
add
mov
push
inc
xchg
xlat
js
cwde
scas
mov
and
fsub
jl
add
inc
push
and
shr
push
add
mov
retf
cmp
pop
dec
ins
mov
shr
jge
mov
cmp
push
jg
mov
test
fsub
cmp
mov
xor
retf
push
push
loop
mov
vpmovsdw
xor
repz
jp
inc
sub
es
and
push
jl
ja
adc
mov
stc
push
and
and
addr16
out
mov
iret
repnz
adc
jp
arpl
and
pop
jnp
je
pop
and
adc
inc
aam
shl
mov
ins
aad
mov
inc
or
mov
xor
jge
sbb
push
(bad)
mov
push
ficomp
enter
rol
xchg
mov
retf
mov
cmp
adc
push
inc
adc
(bad)
(bad)
fdivp
push
cmps
sub
pop
das
shl
clc
arpl
imul
ret
adc
mov
int
mov
or
je
dec
jne
(bad)
rcr
xor
xchg
data16
inc
mov
aaa
jecxz
loopne
fidivr
add
xchg
pusha
inc
rol
jo
rol
push
ficomp
jge
rcl
arpl
xor
sub
or
movs
push
movs
inc
clc
jno
out
adc
mov
sbb
inc
mov
cmp
sbb
ds
inc
es
jno
faddp
xor
jno
js
adc
dec
pop
outs
sbb
cmp
push
mov
aam
(bad)
jle
adc
lahf
cmp
js
ret
cmp
cmp
cmps
sub
or
push
ror
bound
xchg
in
jmp
cmp
sub
std
leave
sub
icebp
das
sub
sar
test
xor
rol
arpl
adc
inc
sub
sahf
shr
ss
int3
retf
lods
shl
push
adc
mov
out
push
out
ins
movs
nop
push
pop
in
adc
loop
cmc
sbb
dec
clc
jg
or
dec
aaa
ret
push
xchg
fld
cmp
mov
mov
ror
lock
mov
xchg
into
das
ss
imul
pop
xchg
push
movlps
aaa
pop
cwde
(bad)
cmp
ror
out
dec
cwde
daa
and
jo
mov
xchg
pop
xlat
imul
jecxz
pop
mov
sbb
and
test
imul
push
aam
pop
sbb
jmp
jge
dec
cmps
inc
mov
fst
mov
fucomip
cs
jmp
ds
jmp
repz
adc
mov
or
jle
sbb
call
cmp
cmc
and
adc
inc
mov
adc
leave
in
cmp
jne
sub
cdq
loopne
gs
cmp
mov
add
outs
cdq
and
dec
push
adc
and
int3
cmp
scas
add
les
cdq
stos
inc
push
cwde
xchg
lock
int
outs
push
sub
xor
jne
or
cmp
outs
out
cmp
int3
inc
pop
outs
into
nop
aad
adc
and
cdq
icebp
jmp
sub
popf
cmp
sub
sti
mov
xchg
addr16
sti
outs
or
mov
jecxz
lods
retf
xchg
(bad)
jb
dec
pop
mov
test
cmp
out
add
retf
mov
push
fadd
popa
push
dec
dec
mov
inc
das
or
gs
mov
sub
mov
movs
xchg
lea
push
pop
jno
scas
adc
shl
lock
pushf
in
adc
stc
out
cld
xor
xor
js
mov
xlat
enter
mov
dec
inc
leave
into
enter
rol
aam
lds
shl
cmps
mov
fnstcw
xchg
mov
xchg
mov
mov
and
xchg
mov
fs
cdq
inc
fistp
pop
and
lods
dec
sbb
popa
or
jo
loope
cmc
in
repnz
fcom
dec
(bad)
in
inc
xor
xchg
rol
sbb
sub
and
jg
call
(bad)
xor
lahf
cmp
fisub
add
xchg
add
test
dec
mov
rol
fmul
pop
mov
adc
xor
push
adc
mov
fs
sti
outs
mov
scas
xor
mov
inc
inc
pusha
cld
mov
popf
sbb
imul
sub
inc
and
stc
daa
jbe
(bad)
fwait
mov
test
les
cmps
dec
movs
iret
fld
(bad)
dec
ja
mov
sbb
add
(bad)
retf
imul
imul
xor
or
adc
dec
es
loop
cdq
out
or
int3
sub
mov
pop
jg
jp
dec
fs
dec
pop
push
popf
scas
add
push
jl
lods
nop
cmc
jno
icebp
mov
into
lock
pop
and
(bad)
xlat
lds
adc
push
lods
cmps
pop
sti
jne
bswap
jp
xchg
sub
jbe
test
sbb
inc
mov
sub
push
getsec
ffree
mov
jp
push
outs
fdivr
cmps
lea
dec
mov
fisttp
xor
addr16
pop
sub
icebp
rcl
xlat
and
xchg
retf
shl
popf
inc
pop
out
fild
push
and
xchg
aaa
pop
inc
movs
push
add
adc
mov
(bad)
frstor
outs
ja
repnz
fist
adc
mov
stos
push
jb
mov
xor
mov
fwait
xchg
cmp
inc
add
xchg
dec
icebp
enter
mov
xchg
push
xchg
pop
cwde
mov
call
into
fbstp
jbe
retf
pop
xchg
push
inc
mov
or
push
dec
shr
ja
sbb
fdiv
repnz
mov
jmp
mov
aad
xor
rcr
xchg
sbb
outs
mov
mov
leave
mov
test
cwde
adc
push
test
jns
shr
and
mov
xor
out
je
jbe
dec
lods
les
pusha
mov
push
popa
jb
aaa
push
pop
adc
inc
mov
add
dec
xor
fist
(bad)
dec
js
cmp
cld
push
mov
popa
popf
cmps
xchg
in
in
or
div
inc
(bad)
aam
add
mul
sti
sahf
xor
mov
cmp
dec
jmp
mov
xor
cmova
sub
mov
xchg
gs
mov
jp
mov
cmps
loop
jnp
pinsrw
nop
sbb
fidiv
pop
pushf
dec
fdiv
inc
mov
jmp
mov
xor
call
stc
mov
mov
xor
mov
jecxz
enter
sbb
retf
nop
jmp
stos
out
les
outs
xlat
push
push
and
or
sbb
cld
inc
xor
inc
pusha
retf
and
push
or
not
cmp
and
shl
aad
cmp
cmp
ins
cmps
or
and
inc
ss
mov
cmp
test
inc
mov
push
frstor
out
or
lods
mov
enter
js
pop
xchg
ds
in
xor
inc
iret
xchg
pusha
inc
push
and
and
pusha
rcr
xchg
pusha
mov
mov
xchg
pusha
mov
mov
xchg
pusha
nop
cmps
mov
and
xchg
pusha
inc
fwait
mov
xor
xchg
pusha
add
xchg
pusha
add
mov
and
mov
pusha
pusha
out
fs
stos
xchg
pusha
add
push
stos
xchg
pusha
pusha
and
xchg
pusha
xor
mov
pusha
xor
test
pusha
adc
stos
fs
cmps
xchg
pusha
loopne
scas
mov
add
mov
adc
fs
xchg
pusha
nop
rol
xor
shl
shl
(bad)
mov
pusha
mov
xchg
pusha
mov
mov
fs
xchg
pusha
rol
xchg
nop
outs
xor
shl
xchg
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
add
xchg
pusha
pusha
in
fs
stos
fs
xchg
pusha
rol
xchg
nop
outs
xor
xor
xchg
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
push
retf
pusha
sub
shl
xchg
pusha
loopne
xchg
nop
iret
xor
jo
xchg
nop
rdtsc
outs
outs
jo
xchg
pusha
jo
xchg
pusha
xor
xchg
pusha
add
mov
jo
xchg
pusha
jo
xchg
pusha
add
nop
mov
rcl
jo
xchg
pusha
jo
xchg
pusha
add
xchg
pusha
inc
pop
and
mov
and
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
outs
shr
pusha
jo
xchg
pusha
adc
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
nop
retf
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
and
xchg
pusha
add
inc
xchg
mov
jo
xchg
pusha
xor
xchg
nop
pop
xor
shl
xchg
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
loopne
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
ror
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
mov
inc
mov
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
xor
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
adc
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
mov
inc
mov
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
xor
xchg
pusha
or
inc
adc
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
nop
retf
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
push
retf
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
mov
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
nop
retf
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
adc
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
mov
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
mov
inc
mov
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
or
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
nop
retf
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
inc
retf
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
jo
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
pusha
retf
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
or
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
lock
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
xor
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
loopne
xchg
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
mov
inc
mov
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
pusha
or
pusha
add
loopne
scas
fs
xchg
pusha
xor
xchg
nop
pop
xor
nop
repnz
nop
scas
xor
jo
xchg
pusha
jo
xchg
jo
adc
loope
sbb
int
pusha
rcl
dec
clc
test
dec
clc
test
dec
repnz
movs
mov
mov
outs
adc
sar
leave
shl
adc
push
adc
fimul
outs
rcl
mov
rcl
pop
mov
xchg
push
jns
xchg
push
dec
clc
test
dec
stc
test
shr
push
dec
clc
test
dec
(bad)
test
imul
test
inc
mov
xchg
push
jns
xchg
push
dec
clc
test
inc
inc
dec
push
jns
mov
cmp
into
popa
outs
add
test
dec
clc
test
inc
(bad)
test
pop
enter
clc
test
dec
clc
test
dec
cmc
test
sub
test
pop
dec
imul
outs
add
test
dec
sti
test
inc
shl
pop
dec
clc
test
dec
pop
leave
push
dec
clc
test
dec
stc
test
leave
cwde
push
pop
dec
clc
test
inc
jmp
adc
scas
pop
pop
enter
clc
test
dec
cmc
test
sub
pop
dec
clc
test
dec
clc
test
dec
icebp
dec
jb
iret
xchg
inc
push
sub
enter
stc
test
outs
adc
xor
setne
bound
xor
enter
clc
test
dec
clc
test
inc
repz
shl
je
jb
popa
movs
jno
outs
jo
popf
adc
popa
and
mov
jo
sahf
push
jns
test
dec
clc
test
dec
inc
aaa
xor
xor
inc
mov
add
call
pop
dec
repnz
movs
xchg
mov
js
popa
pusha
loopne
xchg
mov
push
movs
out
pop
cmps
and
push
test
xchg
data16
repnz
xchg
inc
and
in
fs
lds
adc
pusha
jo
xchg
xor
lds
sub
pop
dec
clc
test
dec
sti
test
inc
shl
dec
clc
test
inc
or
loopne
aam
iret
adc
mov
pop
dec
cli
test
loopne
xchg
push
jns
test
dec
sti
test
xor
jo
into
sbb
clc
test
inc
hlt
cdq
or
inc
idiv
xor
popa
outs
add
test
dec
clc
test
dec
(bad)
test
mov
dec
push
pop
enter
clc
test
inc
stc
test
ja
xchg
loopne
adc
repz
xchg
push
dec
clc
test
dec
(bad)
test
inc
xchg
lock
jo
xor
adc
pop
dec
sti
test
inc
xchg
mov
jns
test
dec
clc
test
inc
inc
xchg
xor
popa
outs
and
sahf
and
mov
into
push
or
test
dec
clc
test
dec
stc
test
iret
adc
mov
pop
dec
clc
test
dec
bnd
pop
movs
xchg
sub
rol
jns
xchg
push
dec
clc
test
dec
sti
test
cmp
xchg
push
jns
xchg
push
dec
clc
test
dec
clc
test
dec
mov
xchg
push
jns
xchg
push
dec
clc
test
dec
repnz
movs
icebp
addr16
jae
rcl
xor
popa
outs
ror
dec
clc
test
inc
icebp
push
fs
inc
xchg
pop
jno
into
push
stc
test
push
dec
clc
test
dec
clc
test
dec
gs
xchg
das
rcr
clc
test
dec
cmc
test
and
pushf
push
jns
mov
cmp
ins
xor
xchg
push
jns
test
dec
clc
test
dec
mov
fcom
test
dec
clc
test
inc
cld
call
push
jns
test
dec
cmc
test
and
lahf
push
jns
mov
pop
dec
clc
test
inc
icebp
push
push
sbb
out
jle
shr
dec
scas
arpl
xor
das
mov
xchg
in
adc
popf
push
cmp
(bad)
imul
pusha
inc
into
stos
jecxz
xchg
mov
pop
dec
clc
test
inc
hlt
test
mov
test
dec
cmc
test
sub
scas
pop
dec
clc
test
dec
clc
test
inc
(bad)
call
push
jns
test
dec
clc
test
dec
cmc
test
das
inc
push
push
jns
mov
pop
dec
imul
xchg
jg
xchg
add
call
pop
dec
clc
test
dec
clc
test
dec
pop
leave
push
dec
clc
test
dec
clc
test
inc
(bad)
call
push
jns
test
dec
clc
test
inc
inc
xchg
pusha
jo
xor
adc
pop
dec
clc
test
dec
stc
test
jmp
clc
test
dec
hlt
test
scas
shr
clc
test
dec
clc
test
inc
icebp
test
js
into
addr16
xor
and
cmp
rcl
js
xchg
push
jo
inc
push
jg
xchg
add
jmp
jns
test
dec
clc
test
dec
cmc
imul
mov
sub
popa
pusha
fs
leave
push
enter
movs
icebp
cmp
shl
jmp
jb
cmp
sbb
clc
test
dec
clc
test
inc
cld
test
push
icebp
add
xor
fdivr
xchg
push
sbb
test
dec
stc
test
loopne
pusha
push
imul
test
leave
test
push
dec
clc
test
dec
clc
test
dec
lock
and
mov
jns
test
dec
clc
test
inc
js
push
dec
clc
test
dec
clc
test
inc
test
push
dec
clc
test
dec
stc
test
leave
test
push
dec
clc
test
inc
push
leave
push
pop
fcom
(bad)
test
sbb
test
inc
test
push
dec
clc
test
inc
lock
clc
test
dec
clc
test
inc
push
leave
push
pop
fcom
(bad)
test
sbb
mov
pop
dec
stc
test
loopne
loopne
imul
test
leave
test
push
dec
clc
test
dec
clc
test
dec
lock
and
mov
jns
test
dec
hlt
test
sbb
test
loopne
pusha
push
imul
test
dec
jmp
or
aam
lahf
xor
popa
lahf
test
dec
arpl
xchg
nop
aas
and
jo
inc
shl
adc
or
dec
clc
test
dec
clc
test
inc
stc
test
inc
adc
xchg
xor
(bad)
outs
inc
out
fs
jno
dec
jp
fist
cmp
sbb
dec
arpl
xchg
nop
aas
and
jo
inc
out
jo
adc
or
dec
clc
test
dec
clc
test
inc
imul
jb
inc
daa
adc
adc
or
dec
clc
test
inc
cld
test
rcl
test
dec
lahf
pop
mov
clc
test
inc
cli
sbb
xchg
aad
pusha
sbb
movs
call
pop
mov
test
inc
repnz
mov
mov
xchg
dec
fistp
cmp
pop
dec
imul
jno
inc
xlat
js
adc
or
dec
clc
test
dec
clc
test
dec
icebp
test
and
sub
xchg
push
jns
test
dec
clc
test
dec
dec
add
xor
das
inc
push
jg
xchg
pusha
and
sbb
movs
xchg
push
adc
pop
dec
clc
test
dec
clc
test
inc
cld
call
fs
enter
clc
test
dec
std
test
setne
imul
push
jns
mov
cmp
call
fs
xchg
push
dec
clc
test
dec
clc
test
dec
imul
outs
sbb
adc
xchg
loopne
sbb
mov
cmp
push
fs
push
jns
test
dec
clc
test
inc
ds
xchg
outs
rcl
jns
test
dec
clc
test
dec
icebp
test
jo
xchg
push
dec
clc
test
dec
jmp
cwde
cmp
data16
xchg
and
fldcw
mov
enter
jmp
data16
xchg
and
fldcw
retf
out
cwde
push
pop
dec
clc
test
dec
clc
test
dec
stc
test
leave
dec
scas
pop
dec
stc
test
leave
clc
scas
pop
dec
clc
test
inc
icebp
call
lock
sbb
arpl
xchg
adc
pusha
mov
dec
cmp
xor
arpl
adc
inc
(bad)
mov
mov
scas
cmc
lock
test
cmc
mov
ja
dec
dec
ja
dec
dec
ja
dec
outs
jmp
lock
daa
inc
(bad)
dec
dec
ja
dec
push
dec
(bad)
xor
mov
ja
dec
dec
ja
dec
jg
mov
adc
test
ja
dec
dec
ja
dec
das
jo
leave
jle
mov
xor
pusha
inc
inc
test
ja
dec
das
jb
leave
dec
ja
dec
dec
ja
dec
dec
test
dec
ja
dec
lahf
fwait
pop
lock
mov
pop
add
xchg
dec
ja
dec
lahf
dec
or
add
xor
mov
dec
int3
out
dec
mov
loop
icebp
dec
pop
inc
(bad)
dec
dec
ja
dec
dec
jbe
dec
(bad)
xchg
inc
xchg
call
out
and
inc
jg
inc
aaa
in
inc
ja
dec
dec
ja
dec
aas
jns
jb
pusha
push
sub
xor
or
dec
dec
ja
dec
jg
fadd
mov
jo
sbb
dec
ja
dec
dec
ja
dec
fbstp
outs
jg
test
ja
dec
dec
ja
dec
aas
clc
dec
ror
mov
dec
mov
imul
inc
dec
ja
dec
(bad)
imul
jo
mov
dec
mov
call
pusha
adc
dec
ja
dec
dec
ja
dec
dec
ja
dec
dec
test
dec
dec
ja
dec
scas
jne
dec
mov
shl
mov
jecxz
inc
mov
dec
dec
ja
dec
dec
ja
dec
push
jbe
rol
dec
ja
dec
dec
ja
dec
dec
ja
dec
mov
mov
dec
dec
ja
dec
fistp
dec
iret
inc
jg
inc
daa
in
inc
ja
dec
scas
jnp
sub
ret
jo
jle
jg
ja
dec
dec
ja
dec
mov
mov
mov
dec
pop
inc
(bad)
dec
dec
ja
dec
fistp
dec
aas
dec
add
inc
xchg
dec
ja
dec
dec
ja
dec
jg
mov
(bad)
dec
dec
ja
dec
(bad)
jno
jbe
sbb
inc
inc
mov
dec
ja
dec
iret
jbe
dec
aas
push
pop
push
jp
mov
dec
mov
inc
aam
outs
jbe
jle
call
inc
dec
jl
into
push
mov
add
xor
dec
loope
outs
push
popa
idiv
clc
jae
outs
ds
push
inc
(bad)
pusha
scas
rcl
scas
iret
inc
icebp
je
out
loope
mov
out
xchg
pop
and
ss
retf
jns
ficom
jbe
push
sar
mov
(bad)
stc
cli
pushf
(bad)
dec
es
lds
xchg
and
jecxz
jge
cmp
jns
cmp
fnsave
xor
js
sbb
push
inc
mov
push
mov
push
(bad)
sbb
dec
dec
xchg
dec
jb
iret
imul
mov
test
pop
das
push
loop
dec
cmp
dec
pop
cmp
dec
aaa
mov
inc
popf
cmp
cmc
and
dec
jp
xor
mov
int
cdq
jp
jle
sbb
icebp
repz
xor
dec
fadd
loopne
mov
(bad)
cmp
pop
loop
int
push
push
imul
js
mov
and
push
loop
js
jp
(bad)
jo
cld
jecxz
in
cmp
mov
(bad)
aas
outs
xor
pop
mov
sar
js
inc
aas
push
fwait
loope
mov
lock
repnz
or
pop
and
xchg
in
movs
sti
jecxz
les
mov
mov
loop
adc
add
fs
and
mov
loop
adc
add
mov
xor
shr
adc
repz
loopne
ret
in
inc
outs
add
rcr
mov
cmp
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
push
adc
gs
cmp
loop
aas
and
mov
ins
aam
pop
xor
mov
aas
add
ltr
add
jns
adc
and
das
xor
add
jmp
(bad)
mov
push
push
inc
fimul
add
ltr
syscall
sbb
inc
ins
add
fidivr
xor
jae
or
in
xor
ror
add
lidtd
loopne
xchg
jne
cmc
loop
arpl
push
jg
inc
ins
add
fidivr
xor
ror
add
add
pushf
(bad)
loopne
inc
sbb
and
pushf
cmp
jp
pop
push
and
ltr
push
push
sbb
mov
in
push
mov
xchg
cmp
in
pop
arpl
xchg
test
xor
inc
add
sub
aaa
aas
shl
push
inc
inc
fimul
add
add
lods
pop
ins
xchg
ficomp
adc
adc
or
(bad)
fst
pop
xor
jp
pop
push
and
ltr
ltr
add
sbb
inc
push
and
fcomp
adc
jecxz
jl
pushf
xor
push
and
ltr
or
sbb
and
ins
mov
xor
sbb
cmp
push
inc
ins
aad
jne
and
jmp
xor
out
and
mov
mov
(bad)
ss
pusha
mov
cmp
push
inc
mov
dec
call
push
les
push
mov
ds
jno
jno
mov
lahf
xor
outs
out
mov
leave
(bad)
jmp
jb
mov
add
(bad)
adc
cmp
daa
cmp
aad
call
pop
cs
and
into
jo
(bad)
sbb
mov
int
imul
mov
shl
jb
ret
rol
xchg
ficom
fs
xor
shl
sbb
out
push
inc
(bad)
xor
jecxz
enter
xor
cld
dec
iret
or
ror
push
xchg
movs
sub
push
rcr
aas
or
jmp
or
sbb
mov
shr
xor
enter
cmp
mov
or
jae
sub
mov
int3
cwde
jne
ds
loop
ret
adc
loope
mov
lock
dec
ds
mov
rcr
lods
dec
push
or
retf
(bad)
and
iret
mov
jae
mov
scas
pop
dec
and
xchg
xor
imul
cmovbe
int
stc
mov
inc
les
fadd
push
pop
loop
ror
push
xchg
ror
adc
fmul
sub
jmp
and
jmp
and
out
mov
inc
sub
and
jmp
and
out
mov
mov
mov
int3
fisttp
and
jmp
sar
mov
fwait
aam
sbb
cld
jmp
and
jmp
and
jmp
cld
jmp
and
jmp
popa
stc
ins
push
sub
fisttp
push
repnz
and
fstp
inc
mul
je
mov
sub
mov
xchg
mov
lds
adc
or
push
mov
jb
cmp
scas
push
(bad)
int
sbb
or
pop
aad
lds
mov
mov
mov
cld
jmp
sar
mov
xchg
loop
cmps
lds
mov
rcl
and
jmp
and
out
mov
stc
xchg
popf
adc
retf
cli
push
inc
std
pop
fwait
cmps
rcr
retf
mov
and
loop
and
and
jmp
popa
stc
loop
adc
jb
sub
jmp
and
jmp
and
jmp
xor
inc
adc
(bad)
ficomp
sbb
aad
dec
xchg
mov
inc
adc
and
jmp
and
jmp
push
cmc
imul
cld
jmp
inc
cmc
in
hlt
adc
int
sbb
fisttp
xchg
repz
push
in
ror
pop
(bad)
push
xchg
xchg
sub
jmp
and
jecxz
and
mov
xchg
bound
sub
jmp
cmp
cli
lea
cli
push
inc
dec
pop
mov
mov
and
jmp
and
loop
and
mov
cld
jmp
popa
stc
loop
adc
jb
sub
jmp
and
jmp
cmp
retf
fiadd
(bad)
adc
sar
inc
(bad)
(bad)
pop
mov
leave
es
cmp
and
jmp
adc
imul
cmc
in
hlt
adc
int
sbb
fisttp
and
jmp
and
in
mov
push
xor
sti
aad
mov
xor
fidivr
mov
fst
lea
adc
jg
adc
push
(bad)
in
fimul
test
lahf
push
(bad)
ror
leave
(bad)
fidivr
jl
and
and
ror
push
int
jle
push
fimul
in
(bad)
sbb
adc
retf
rcl
mov
xor
fidivr
cmp
and
and
ror
push
int
js
xchg
fimul
in
fisubr
push
rcl
mov
xor
fidivr
cld
mov
int
int
lea
adc
jp
aad
lea
fiadd
(bad)
adc
ror
int
jge
aad
lea
fiadd
(bad)
adc
rcr
ret
pminub
(bad)
adc
sar
pminub
(bad)
adc
sar
pminub
(bad)
adc
ror
psubd
(bad)
push
ret
outs
dec
int
or
ror
push
(bad)
mov
ror
jmp
ror
push
fcom
mov
ror
mov
ror
push
fcom
mov
ror
sbb
mov
sub
jmp
and
jecxz
and
and
jmp
and
jmp
mov
fcmovbe
mov
int3
fisttp
mov
imul
sub
lock
and
mov
xchg
bound
sub
jmp
and
jmp
adc
in
inc
popa
pop
pop
inc
inc
aad
pop
cmc
mov
mov
cld
jmp
and
in
inc
rcr
pop
inc
inc
fdivr
jne
sbb
dec
shr
cmp
mov
repz
xchg
retf
add
push
inc
adc
and
(bad)
das
ins
mov
mov
cld
jmp
popa
cmc
jmp
and
jmp
and
in
mov
jbe
mov
ret
mov
inc
ret
and
xchg
lea
int3
jmp
and
jmp
and
jnp
sub
jmp
and
pop
cmc
sub
jmp
xchg
std
loop
and
jmp
and
jmp
popa
icebp
ss
cmps
fwait
bound
dec
repnz
add
retf
and
mov
xchg
mov
int
rcl
(bad)
call
fcmovbe
mov
loop
sub
jmp
and
jmp
sar
mov
xchg
and
and
fwait
mov
xor
fstp
and
jmp
jno
loop
add
retf
sub
mov
cld
jmp
xchg
sti
loop
and
fisttp
popa
cli
in
mov
lock
scas
xor
jne
mov
int3
jmp
and
jmp
adc
movs
mov
fs
or
js
loop
sub
jmp
add
in
xchg
ret
jae
sbb
xchg
cld
jmp
and
in
loope
or
mov
mov
sbb
and
mov
cld
in
inc
aad
pop
adc
jae
sub
in
pop
mov
in
and
jmp
adc
in
mov
jp
mov
mov
lods
fisttp
and
jmp
adc
shr
and
jmp
and
jmp
xor
fmul
cs
mov
repz
mov
or
imul
int3
fstp
and
jmp
xchg
cmc
loop
and
fisttp
and
call
push
sub
fimul
pop
ret
sub
pop
fsubr
lods
stos
ins
sub
jmp
and
jmp
popa
icebp
in
mov
or
jbe
int3
fstp
xchg
cmc
loop
and
fisttp
and
jmp
and
loope
adc
sub
cmp
mov
pusha
(bad)
sub
mov
test
jge
inc
sub
mov
mov
jb
xchg
mov
test
jge
or
rol
addr16
and
sub
mov
cld
jmp
mov
sbb
pop
leave
sar
push
test
aad
int
lea
xchg
call
loop
dec
xor
or
inc
test
popf
sbb
mov
in
dec
ins
add
out
cld
adc
jbe
jne
test
jo
lds
inc
ds
and
mov
dec
div
dec
ja
dec
das
jo
leave
jle
movs
cmp
pop
pop
jae
or
xor
jo
inc
nop
pop
and
(bad)
(bad)
es
std
xor
jo
pop
mov
xor
repnz
frstor
daa
or
rol
pop
arpl
xchg
adc
jmp
push
aam
and
inc
inc
aaa
imul
lahf
frstor
ret
icebp
fadd
push
pop
(bad)
jb
cli
sub
xchg
retf
je
jo
jp
jle
jo
loop
xchg
xchg
inc
xor
ss
mul
jle
icebp
(bad)
dec
jae
pop
push
push
adc
xor
(bad)
mov
cli
test
push
(bad)
mov
(bad)
sbb
ret
repz
dec
fisttp
cdq
sub
jmp
jb
dec
outs
or
xor
je
adc
dec
jbe
cmp
ror
ror
xor
mov
dec
cli
and
arpl
in
push
sbb
and
xchg
(bad)
in
or
mov
ja
jns
sbb
mov
sub
adc
mov
sub
iret
lods
ss
ins
xchg
adc
repz
cmp
push
adc
movs
call
cmp
xchg
push
arpl
add
popa
pop
xchg
push
rcl
xchg
push
arpl
xchg
sbb
(bad)
sbb
daa
pop
ret
mov
sbb
dec
retf
mov
out
and
sbb
dec
xlat
pop
jecxz
daa
pop
shl
shl
std
pop
push
jecxz
daa
pop
and
add
lods
daa
pop
jecxz
daa
pop
and
pop
shl
mov
pop
jecxz
daa
pop
jecxz
daa
pop
jae
call
addr16
in
cmp
std
ja
jmp
xchg
aad
ja
out
lods
daa
pop
jecxz
daa
pop
jecxz
and
xchg
mov
daa
pop
jecxz
daa
pop
jecxz
daa
pop
xor
pop
push
jecxz
daa
pop
and
outs
jmp
pop
jecxz
and
push
cmps
cmp
lods
daa
pop
jecxz
daa
pop
add
mul
jecxz
es
jecxz
(bad)
cmps
in
daa
pop
jecxz
daa
pop
and
jle
lods
fwait
in
cmp
std
ja
jmp
pop
xchg
sar
fwait
mov
sbb
popf
daa
pop
jecxz
daa
pop
and
ja
jmp
pop
arpl
scas
sub
push
arpl
mov
mov
arpl
loop
arpl
aam
add
sbb
adc
movs
std
and
dec
rcl
jecxz
jle
pushf
aad
shl
mov
jns
push
pop
push
jp
mov
inc
aam
(bad)
js
jle
outs
xor
shl
dec
ja
dec
outs
jl
test
dec
ret
je
pop
movs
jne
push
sbb
xchg
ds
xchg
enter
fs
jmp
mov
(bad)
push
jge
jns
fs
push
mov
jmp
xor
mov
dec
fst
pop
(bad)
imul
loopne
xchg
xchg
dec
test
jmp
mov
mov
pop
js
je
enter
jbe
hlt
xchg
sahf
in
jnp
inc
xor
ret
mov
aam
xor
xchg
inc
xor
jbe
sbb
fisttp
sar
or
jno
sbb
inc
in
mov
mov
xor
pop
aad
push
out
jns
adc
mov
ret
je
push
test
mov
mov
sar
xchg
out
stos
dec
(bad)
xor
push
xlat
ret
ror
lea
xlat
mov
jp
cmp
fbld
in
enter
push
jae
imul
pop
outs
add
mov
mov
cwde
in
mov
xor
jae
fdiv
bound
rol
mov
int
xchg
into
je
fdiv
cmp
popa
adc
mov
mov
dec
mov
pop
dec
aam
and
cld
xchg
pushf
xor
cs
mov
outs
out
loope
ins
jmp
sbb
in
xchg
dec
leave
xor
hlt
inc
(bad)
pop
mov
lods
jmp
fbld
fld
mov
pushf
aad
sbb
xchg
gs
push
xchg
sar
and
inc
xchg
add
shl
fist
rol
jp
and
add
(bad)
out
stos
mov
and
mov
and
mov
adc
xchg
daa
aam
mov
shr
repnz
aaa
adc
push
repz
rol
in
adc
mov
in
lahf
mov
retf
addr16
fcom
jge
aad
adc
push
test
cmps
sub
inc
nop
jno
pop
and
call
and
add
xor
jp
call
xchg
push
js
jne
jns
or
inc
(bad)
lock
addr16
(bad)
dec
dec
ja
dec
iret
jbe
dec
jg
pop
inc
jp
mov
dec
test
std
dec
outs
jle
mov
call
mov
js
in
lahf
push
mov
push
mov
inc
mov
xchg
repz
jl
or
inc
inc
test
push
xchg
lea
mov
(bad)
xchg
movs
call
(bad)
pushf
push
loop
jbe
into
and
cmp
sbb
push
lock
mov
pop
cmp
adc
add
jo
scas
xchg
cmp
and
(bad)
fnsave
inc
outs
hlt
stc
or
fadd
jo
rol
mov
jbe
pop
iret
js
jl
jbe
xor
(bad)
loop
iret
mov
in
adc
mov
ret
cmp
adc
dec
(bad)
mov
xor
shl
iret
inc
mov
lock
inc
dec
xor
and
pop
lahf
int
int
data16
mov
ret
pop
jnp
fcmovne
test
jb
inc
lods
cmps
jns
outs
(bad)
inc
cmp
call
jle
jo
test
cmps
xor
and
ror
or
xchg
ss
mov
test
adc
into
sti
adc
cld
cmp
and
outs
out
icebp
je
(bad)
push
movs
dec
or
sub
sbb
idiv
lods
sbb
push
test
aad
xchg
out
(bad)
sti
cmp
mov
dec
cmp
es
add
es
xor
es
push
addr16
dec
and
inc
data16
pop
inc
mov
xor
(bad)
lock
mov
test
dec
ja
dec
aas
pop
pop
repz
add
mov
push
lock
xor
test
and
(bad)
mov
jecxz
jns
xchg
sti
xchg
out
test
sti
dec
mov
outs
inc
(bad)
scas
out
pop
mov
std
nop
jg
or
xor
cli
js
js
sub
into
add
out
xchg
fdivr
jmp
fiadd
enter
out
js
(bad)
aaa
and
jecxz
jne
sbb
out
inc
mov
adc
loop
call
push
pop
push
fcomi
push
adc
lock
inc
dec
add
mov
cmp
lock
add
mov
std
or
jns
xor
sbb
cmps
dec
xor
movs
cmc
arpl
add
data16
mov
je
xor
dec
dec
push
rcl
cmc
(bad)
dec
jmp
cmp
push
cld
out
int
test
popa
bound
adc
(bad)
mov
sbb
repz
cld
in
inc
or
ds
mov
dec
std
adc
jecxz
je
in
cmc
mov
jns
xchg
out
push
inc
ss
out
int3
inc
fiadd
mov
pop
cld
out
sub
shl
jecxz
cmp
(bad)
mov
clc
fild
pop
outs
into
inc
xlat
dec
outs
repnz
pop
jno
int3
cdq
sbb
pop
mov
xor
mov
ss
xchg
int3
int3
adc
movs
jmp
repz
repz
xchg
mov
dec
rol
es
(bad)
and
repz
ret
int3
pop
xor
int3
sbb
sar
xchg
int3
mov
sbb
les
xchg
lods
jmp
repz
repz
sub
je
dec
dec
xor
sbb
xchg
neg
mov
cmp
push
add
cmp
xor
add
ficomp
xor
sbb
dec
inc
wrmsr
cmp
mov
test
ret
cmp
jp
jg
lods
jle
dec
add
dec
xchg
dec
ja
dec
dec
ja
dec
das
jo
leave
into
xchg
mov
xor
xor
xor
push
scas
inc
mov
dec
dec
ja
dec
fistp
div
fadd
je
mov
mov
jo
mov
inc
fwait
test
sub
je
(bad)
xor
jbe
pushf
gs
dec
xor
(bad)
push
mov
push
jno
data16
xchg
xlat
leave
std
sub
scas
mov
push
ja
popa
jnp
fwait
pop
fst
jns
xchg
mov
std
push
mov
or
movs
dec
retf
pop
jl
sbb
jmp
xchg
jb
test
jns
das
inc
xchg
xor
jae
(bad)
mov
mov
loopne
sahf
jns
xor
sub
jge
pop
icebp
cdq
and
repnz
mov
dec
jl
test
adc
dec
outs
add
mov
xor
enter
push
jns
fwait
jg
mov
int
jle
dec
test
sti
mov
jns
outs
push
imul
iret
sub
mov
adc
xor
mov
lock
inc
sbb
xor
rcl
xchg
mov
iret
enter
xchg
fs
jne
ds
ret
shl
xchg
mov
enter
stc
fnstenv
mov
adc
aas
sti
mov
push
test
xchg
hlt
out
jo
xchg
fsub
(bad)
test
(bad)
sbb
xchg
js
ins
jae
inc
adc
inc
mov
outs
sahf
icebp
xchg
pop
add
scas
mov
push
mov
mov
pop
add
scas
jg
cmps
push
mov
fisub
dec
fbld
or
retf
mov
jg
test
imul
jo
outs
(bad)
xor
loopne
(bad)
xor
in
pop
(bad)
xor
jno
imul
pop
arpl
or
pusha
push
or
imul
jmp
pop
(bad)
xor
push
cwde
out
es
pop
repz
(bad)
xor
shl
push
add
outs
push
or
cmp
stc
(bad)
push
fild
pop
(bad)
xor
or
fsub
test
inc
push
call
pop
(bad)
xor
and
mov
fldenv
test
push
or
push
or
push
or
arpl
jp
mov
sub
push
call
pop
(bad)
xor
loopne
mov
push
fild
pop
(bad)
xor
rcl
movs
lahf
loop
jno
pusha
push
or
push
push
call
pop
(bad)
xor
inc
pop
xor
pop
xor
inc
mov
(bad)
nop
or
(bad)
mov
pop
mov
push
call
pop
(bad)
xor
cs
(bad)
xor
nop
xor
out
imul
(bad)
gs
sbb
xor
jbe
mov
or
imul
xor
and
leave
clc
dec
ss
jl
inc
inc
xor
int3
pusha
and
int3
xchg
test
js
cmp
outs
xor
mov
dec
dec
ja
dec
dec
ja
dec
scas
jnp
sub
mov
inc
aam
ds
dec
jle
inc
(bad)
lock
xor
mov
ja
dec
dec
ja
dec
out
pop
pop
jae
or
pop
push
repz
fstp
mov
xlat
inc
jmp
fnsave
and
jge
mov
dec
cwde
pop
imul
xor
lods
inc
(bad)
scas
test
inc
bswap
adc
fbstp
(bad)
(bad)
jne
int3
pop
inc
dec
xor
in
sub
jle
sbb
dec
inc
adc
pop
pop
cmc
or
cmp
xor
mov
loope
lods
cs
inc
xor
push
and
loopne
inc
mov
(bad)
mov
dec
jbe
cmp
rol
ror
sub
stc
adc
lahf
std
cmp
adc
sub
mov
retf
fdiv
cmp
xor
out
enter
inc
xchg
pop
mov
out
test
xchg
aaa
pop
movs
xchg
mov
ror
scas
call
cmp
and
int
jge
cdq
lds
mov
adc
xchg
sbb
sti
dec
xchg
int
shr
xor
(bad)
aas
jbe
mov
sbb
jae
mov
jae
int
aam
sbb
cmc
iret
ins
push
jae
mov
out
dec
test
mov
frndint
aaa
push
stc
movs
xor
bts
sbb
dec
jnp
xor
or
xor
or
xor
jnp
and
pop
lods
hlt
dec
lahf
scas
aam
dec
lods
fs
das
lods
aam
pop
lods
je
pop
fs
(bad)
lods
xor
iret
lods
les
lods
fs
das
lods
hlt
dec
lahf
lods
fs
(bad)
lods
xor
iret
lods
les
lods
fs
out
test
fs
jnp
xor
or
outs
or
pop
or
xor
scas
in
mov
mov
fwait
cmp
or
or
xlat
push
lahf
or
jbe
loop
iret
add
mov
pop
mov
ja
xchg
or
je
mov
mov
dec
imul
push
mov
(bad)
sbb
pushf
pop
inc
aas
xchg
or
dec
dec
imul
push
mov
mov
mov
call
ss
jbe
push
imul
xchg
cmp
call
mov
jae
psubq
mov
mov
(bad)
(bad)
xor
or
scas
or
cmp
ja
xchg
or
jl
leave
pop
imul
lds
movs
add
ins
lahf
or
jb
adc
pop
cmps
les
aas
xchg
or
ja
repnz
jbe
mov
inc
setnp
ja
repnz
jbe
jnp
lock
xor
setnp
jb
adc
(bad)
cmps
les
aas
xchg
or
jbe
adc
adc
hlt
int3
mov
push
cmp
lock
or
js
mov
stos
adc
int
xor
or
adc
cmps
les
aas
xchg
or
adc
push
retf
mov
lea
or
ja
xchg
add
mov
xor
daa
ins
lahf
or
js
in
mov
mov
fwait
cmp
or
or
jp
xchg
ins
xchg
xchg
or
ja
mov
mov
sub
xor
scas
lods
xchg
inc
scas
pop
retf
pop
enter
(bad)
cwde
cmp
ja
push
or
bound
xchg
ins
mov
xchg
or
ja
adc
jg
loop
inc
mov
stc
mov
add
inc
pop
mov
dec
lods
fs
por
jb
aaa
inc
sbb
cmp
mov
dec
dec
and
iret
cli
je
pop
test
in
dec
mov
lahf
xor
movs
fmul
adc
outs
repz
xor
and
inc
mov
dec
dec
ja
dec
dec
ja
dec
scas
jnp
sub
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
aam
ds
dec
mov
mov
lock
jns
aad
inc
ja
dec
dec
ja
dec
dec
ja
dec
aas
jp
lods
inc
inc
mov
dec
ja
dec
dec
jbe
dec
jg
sbb
jmp
into
or
inc
dec
jg
inc
daa
in
inc
ja
dec
dec
ja
dec
iret
jo
dec
scas
stos
fwait
test
test
je
mov
jbe
cld
cmps
inc
xor
(bad)
cmc
outs
je
and
jmp
retf
stc
loopne
mov
test
push
mov
inc
push
sub
mov
dec
mov
and
outs
fidiv
lahf
or
sub
loopne
(bad)
pop
ins
or
rcr
lods
enter
stos
jl
mov
dec
mov
stos
clc
shr
into
mov
sahf
jae
aam
xchg
outs
jbe
lods
js
dec
cmp
shl
sbb
call
mov
js
dec
mov
mov
xor
dec
mov
xor
sar
iret
sub
repz
lds
dec
test
loop
scas
cmp
pop
xchg
rol
xor
sub
dec
inc
xchg
out
mov
test
sbb
xchg
inc
imul
iret
test
pop
aas
mov
and
inc
cli
adc
add
in
test
jns
xchg
jno
loopne
pop
ret
cmc
xor
ror
les
adc
adc
dec
push
or
stos
in
dec
dec
mov
addr16
pop
out
dec
jbe
sbb
std
inc
add
movs
iret
(bad)
mov
icebp
mov
(bad)
and
test
mov
or
div
xor
cmp
mov
fsub
lods
and
pop
cmp
cmp
(bad)
xlat
push
jnp
adc
add
out
arpl
inc
(bad)
pop
xor
in
or
inc
push
push
cmp
es
ins
ja
push
cmp
inc
not
jmp
xchg
xchg
inc
ins
add
stos
lea
cmp
cmp
pop
mov
inc
jl
in
add
pushf
push
sub
ins
(bad)
out
dec
cmp
or
pop
add
or
jge
jl
ins
stc
aas
and
jecxz
fild
popf
cdq
dec
push
ds
pop
mov
cdq
scas
ret
lea
mov
das
or
dec
sub
(bad)
or
dec
mov
mov
pop
stos
dec
adc
cld
jecxz
fstp
xor
pop
repnz
pop
popf
and
pushf
ins
adc
jmp
ins
and
sub
pop
or
cmp
mov
dec
mov
clc
jge
dec
fnstcw
rcr
ins
adc
pop
call
and
lea
fstp
js
dec
repnz
lods
jl
ins
stc
aas
and
jb
sti
inc
call
jl
pushf
loop
dec
lods
push
or
jmp
pop
add
test
mov
pop
dec
loop
jmp
fdiv
mov
ins
inc
ins
stc
fst
or
fsubr
cmp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
jmp
out
cmp
sub
mov
jg
jmp
and
out
arpl
inc
(bad)
call
out
cmp
inc
(bad)
retf
fldl2e
and
das
push
and
jne
jg
ds
in
arpl
inc
out
cmp
and
out
cmp
inc
xlat
sbb
cmp
pusha
pop
cmp
sbb
cmp
push
cmp
inc
out
xor
loope
pop
jnp
mov
add
paddusw
push
and
hlt
sbb
ds
fsubr
jnp
arpl
inc
out
cmp
jge
push
js
jmp
mov
arpl
inc
(bad)
fcmovu
cmp
push
cmp
inc
out
ds
xchg
pop
hlt
cmps
call
pop
xor
(bad)
push
pop
setge
sub
mov
pop
ins
sbb
push
cmp
ror
call
out
cmp
inc
in
dec
jg
push
cmp
inc
xchg
movs
pop
xlat
push
imul
push
xor
xchg
movs
pop
xchg
mov
dec
cmp
mov
add
inc
push
pop
cmp
pop
aam
fld
jnp
pop
inc
scas
xlat
mov
or
ror
out
cmp
inc
inc
push
cmp
in
ret
ins
dec
out
cmp
out
jge
out
xor
add
mov
or
mov
js
push
xor
fistp
push
dec
sub
and
sti
ins
cld
and
push
inc
jg
ds
in
arpl
inc
out
cmp
loop
sub
xchg
push
pop
mov
add
jmp
cmp
inc
push
pop
cmp
pop
aam
mov
jl
jnp
movs
pop
mov
arpl
inc
(bad)
dec
cmp
inc
out
cmp
adc
retf
sub
in
arpl
inc
out
cmp
mov
sti
ins
cld
and
push
inc
jg
ds
in
arpl
inc
(bad)
pop
aaa
inc
xchg
(bad)
xlat
fcmovu
cmp
push
cmp
inc
out
cmp
push
std
push
mov
and
inc
(bad)
pop
mov
in
or
inc
ss
fsub
ins
inc
inc
jg
mov
cmp
inc
jbe
xor
jecxz
cmp
inc
adc
push
jnp
push
cmp
inc
cmps
(bad)
sbb
jle
jecxz
sub
bound
rcr
sbb
or
mov
cs
jnp
fst
icebp
and
clc
mov
cwde
imul
pop
jnp
popf
xchg
sub
(bad)
bound
jnp
popf
xchg
das
jmp
bound
jnp
popf
loop
leave
xor
cwde
popf
loop
leave
xor
pop
lahf
xchg
das
retf
bound
cdq
lahf
loopne
retf
xor
leave
pushf
arpl
retf
mov
fisubr
push
dec
jmp
push
cmp
inc
not
add
mov
adc
jmp
cmp
inc
out
xor
outs
stos
jge
cdq
push
dec
jmp
push
cmp
inc
xchg
add
jmp
cmp
bound
imul
xor
add
inc
es
mov
sub
sub
inc
jg
ds
in
arpl
inc
out
cmp
mov
fistp
or
sbb
cmp
jne
mov
ds
nop
push
sti
and
xchg
push
or
sub
inc
pop
addr16
and
xchg
push
enter
imul
mov
and
xchg
push
enter
imul
xor
pop
addr16
and
fstp
cmp
inc
push
jl
ds
nop
push
or
das
xchg
push
jg
ds
nop
push
cmp
das
xchg
push
call
ds
nop
push
sbb
das
xchg
push
aas
sar
mov
nop
push
sbb
jg
push
mov
sub
and
jne
jg
ds
in
arpl
inc
out
cmp
daa
fistp
or
inc
out
cmp
and
out
cmp
ret
aaa
xor
mov
hlt
sbb
or
sbb
inc
out
cmp
inc
in
dec
jg
push
cmp
inc
(bad)
cmp
out
arpl
inc
xchg
adc
sub
stos
xchg
push
call
cmp
arpl
inc
out
cmp
adc
sub
jnp
push
mov
sub
and
jne
jg
ds
in
arpl
inc
out
cmp
daa
iret
call
out
push
cmp
inc
es
movs
jge
ds
in
arpl
inc
out
xor
mov
cmp
inc
out
xor
movs
ins
mov
arpl
inc
not
popa
jmp
push
cmp
ret
cmp
inc
out
xor
jmp
ret
jne
fs
sar
aam
imul
fcomp
movs
je
arpl
inc
neg
inc
arpl
cmp
jmp
in
or
inc
cmps
pop
mov
jg
cwde
cmp
movntps
(bad)
and
out
xlat
fisub
dec
fs
sub
or
jnp
pop
je
loopne
cmp
inc
out
cmp
mov
out
push
cmp
inc
cmps
push
xor
cmp
out
arpl
inc
out
cmp
xchg
push
test
outs
or
fld
jnp
push
cmp
inc
xchg
adc
sub
jnp
push
mov
sub
and
jne
jg
ds
in
arpl
inc
cmps
pop
sti
and
inc
add
das
and
cmp
xchg
sbb
or
sub
cmp
je
jp
cmp
cmp
rcr
sub
fwait
jne
cmp
cmp
(bad)
fnstcw
push
mov
sbb
jmp
cmp
repnz
int
loopne
cmp
inc
inc
push
cmp
es
cmp
inc
out
cmp
mov
cmp
psrlq
and
fld
jnp
push
cmp
add
dec
xchg
xor
jp
jnp
push
cmp
inc
out
cmp
in
sub
xchg
cmp
inc
es
movs
jge
ds
add
out
cmp
adc
shr
jnp
arpl
inc
out
cmp
add
arpl
inc
xchg
ret
jae
mov
jns
sar
jl
retf
xchg
push
or
sbb
imul
sub
ds
nop
push
cmp
das
xchg
push
call
ds
nop
push
cld
test
xchg
push
aas
sar
mov
nop
push
sbb
jg
push
mov
sbb
and
aad
test
arpl
inc
out
cmp
mov
(bad)
cmp
je
push
jnp
push
cmp
add
sbb
fld
jnp
push
cmp
ror
xchg
push
mov
sbb
jmp
cmp
inc
jbe
cmp
jns
inc
jg
(bad)
mul
adc
out
push
cmp
inc
out
cmp
jmp
cmp
push
ror
sub
jg
movs
jge
jg
jge
cdq
push
retf
or
inc
(bad)
push
xor
jns
inc
jg
(bad)
mul
adc
out
push
cmp
repz
leave
dec
xlat
ficom
jnp
push
dec
jle
movs
ins
(bad)
imul
rcr
jge
jmp
cmp
rcr
(bad)
mul
adc
out
push
cmp
repz
jmp
je
ins
push
sub
ins
movs
ins
(bad)
imul
rcr
jge
jmp
cmp
inc
xchg
or
sub
jg
ds
add
arpl
inc
out
cmp
repz
jns
xlat
ficom
pop
ins
pop
pushf
fucomp
cmp
cdq
push
dec
jmp
push
cmp
inc
(bad)
pop
xor
fxch
adc
imul
jg
push
cmp
inc
push
cmp
iret
call
mov
sub
sbb
push
cmp
inc
in
dec
jg
push
cmp
daa
pop
dec
inc
jg
jae
jnp
push
cmp
inc
xchg
movs
pop
xchg
mov
dec
cmp
mov
add
inc
out
cmp
adc
fsubr
add
out
arpl
inc
out
cmp
mov
fimul
inc
out
cmp
inc
div
or
fwait
pop
push
sbb
sub
out
arpl
inc
ss
cmp
icebp
mov
fld
and
and
cmps
pusha
mul
add
out
push
cmp
repz
ret
inc
xlat
or
fstp
sti
xchg
push
pop
fisubr
add
mov
adc
jmp
cmp
inc
jbe
xor
mov
mov
pop
jge
jmp
cmp
inc
out
xor
jmp
mov
fisubr
jmp
cmp
bound
outs
mul
add
out
push
cmp
in
(bad)
or
test
add
inc
out
cmp
xchg
pop
test
cmp
fistp
push
fcmovu
retf
adc
imul
jg
push
cmp
inc
(bad)
mov
or
rcr
cmp
inc
out
inc
pop
fnstsw
add
enter
sub
add
pop
in
arpl
inc
out
cmp
in
cld
sub
sub
jg
ds
add
arpl
inc
out
cmp
call
ror
sub
fistp
stos
sub
jecxz
or
inc
out
cmp
(bad)
fld
adc
out
push
cmp
jge
call
test
add
inc
out
cmp
inc
out
inc
(bad)
mov
and
sub
push
jnp
ds
in
arpl
inc
out
cmp
aad
mov
add
sub
add
pop
in
arpl
inc
push
pop
mov
xor
retf
test
add
inc
out
cmp
xchg
pop
xchg
cmp
(bad)
cmp
fisubr
adc
out
push
cmp
inc
data16
cmp
fistp
adc
test
adc
out
push
cmp
inc
(bad)
mov
or
scas
cdq
push
mov
add
inc
out
cmp
inc
xchg
cmp
or
das
xor
cmp
inc
(bad)
bound
fucomi
mul
adc
out
push
cmp
inc
out
cmp
loop
mov
sub
jnp
int3
or
jns
inc
jg
imul
rcr
sbb
push
cmp
inc
xchg
cmp
add
fbld
pop
fsubr
add
jmp
adc
out
push
cmp
repz
jmp
in
test
push
cmp
rcr
outs
stos
jge
cdq
push
dec
jecxz
or
inc
out
cmp
xchg
pop
xor
jge
jp
xor
lds
pop
in
arpl
inc
xchg
loop
mov
stos
add
ror
ins
inc
jg
imul
rcr
sbb
push
cmp
inc
push
push
xor
inc
data16
cmp
add
fbld
sub
jmp
adc
out
push
cmp
inc
(bad)
pop
xor
rcr
or
daa
in
test
push
cmp
mov
nop
dec
test
push
fld
pop
lock
sbb
push
cmp
inc
inc
push
cmp
ins
mov
xor
je
ret
call
jge
xor
mul
adc
out
push
cmp
inc
(bad)
cmp
xor
call
out
cmp
xchg
pop
test
movs
jge
jg
sbb
jecxz
or
inc
not
add
out
arpl
inc
out
cmp
fisubr
jmp
sub
jmp
pop
xor
(bad)
test
nop
push
stc
sti
loope
std
test
push
cmp
inc
push
mov
sahf
sub
stc
fistp
add
ja
adc
shr
hlt
and
bound
jnp
sub
sar
mov
mov
out
sub
retf
mov
add
cmp
cmp
in
sahf
xor
add
jno
jne
jns
or
das
dec
mov
inc
ja
dec
mov
mov
inc
jg
inc
daa
in
inc
ja
dec
scas
jnp
sub
int3
jo
dec
test
lock
dec
jle
mov
jne
mov
int3
clc
mov
out
xchg
cmp
in
lods
push
dec
add
(bad)
addr16
xor
ret
int3
cmps
jmp
imul
xchg
fmul
cmps
xor
mov
xor
test
popa
push
test
inc
and
ins
(bad)
sti
pop
and
nop
pop
test
cmp
rcr
cmp
jl
dec
inc
xor
leave
ror
imul
mov
inc
into
push
fcom
mov
lock
loop
inc
xchg
icebp
cmps
or
out
daa
mov
cmp
cs
enter
jmp
pop
test
fimul
dec
mov
pop
out
pop
inc
mov
adc
ficomp
loopne
xchg
sub
repz
leave
movs
cwde
adc
xchg
inc
sub
jo
cmp
pop
sub
sbb
inc
jg
call
call
xchg
mov
mov
int
jns
jns
jg
dec
jp
sar
mov
inc
cmp
int
pop
fnstcw
(bad)
mov
test
pop
das
inc
ja
fisttp
mov
(bad)
cmp
sub
scas
inc
sub
sbb
sbb
mov
(bad)
mov
rcl
dec
mov
sahf
jl
rcl
adc
mov
xor
mov
xor
gs
aas
mov
mov
adc
dec
add
jle
and
mov
cmp
xchg
and
mov
(bad)
(bad)
loop
jo
adc
cli
and
mov
cmp
idiv
pop
(bad)
push
and
mov
and
xchg
or
pop
pop
pop
(bad)
sub
xchg
adc
leave
jle
lods
jl
dec
mov
dec
mov
push
xor
jp
mov
inc
mov
dec
jbe
dec
jg
sbb
sbb
and
(bad)
jle
jl
mov
jl
outs
push
(bad)
jo
call
mov
jl
into
push
mov
add
or
imul
pop
(bad)
xor
aam
mov
add
push
add
jl
dec
and
(bad)
movs
int3
or
hlt
and
xor
jae
es
add
mov
jnp
add
out
cmp
(bad)
sbb
enter
out
push
mov
ficomp
test
test
std
lds
mov
ins
jns
inc
in
in
inc
mov
xor
bound
xchg
clc
jns
xor
and
fild
out
jno
pushf
dec
inc
inc
xor
add
ret
mov
int
clc
in
adc
sub
(bad)
(bad)
mov
jb
push
sar
in
inc
xchg
out
jp
jp
int
fs
push
xor
in
ror
inc
into
add
add
inc
xor
sti
cld
jge
inc
adc
xor
ins
hlt
dec
sub
mov
dec
mov
(bad)
fnop
xchg
mov
retf
aad
sahf
mov
jb
inc
dec
push
xor
int
retf
xchg
mov
(bad)
fld
test
(bad)
xor
int
icebp
loope
mov
jecxz
test
jno
push
push
aaa
mov
in
mov
out
imul
fisttp
int
push
js
out
inc
nop
fist
dec
rcr
mov
jmp
scas
jbe
mov
scas
call
jb
cmps
int
int
mov
call
jb
cmps
jmp
and
jns
into
movs
adc
loop
es
jns
into
movs
mov
cmps
jmp
in
jns
into
movs
ror
loop
jbe
ins
xchg
jne
out
jp
movs
mov
(bad)
jmp
out
stos
inc
mov
rcl
inc
mov
fist
punpckhdq
scas
inc
mov
fcom
push
call
jbe
mov
scas
call
jb
movs
int
dec
xchg
jns
into
movs
jb
cmps
jmp
and
jns
into
movs
adc
loop
es
jns
into
movs
mov
cmps
jmp
in
jns
into
movs
ror
loop
jbe
ins
xchg
jne
out
jp
movs
mov
(bad)
jmp
out
stos
inc
mov
fist
inc
sbb
dec
mov
xlat
xchg
jp
out
scas
inc
mov
fist
jle
(bad)
movs
bound
in
jbe
mov
cmp
out
stos
push
xchg
mov
jne
out
jbe
cmps
mov
cdq
movs
stos
jle
(bad)
movs
add
sbb
gs
scas
fldenvw
pop
push
pop
sbb
gs
scas
push
fldenv
pop
into
fistp
cmc
gs
scas
fldenvw
pop
into
fwait
sbb
gs
scas
fldenvw
pop
ds
test
sbb
jmp
scas
jbe
cmps
add
call
fadd
dec
and
call
fcom
jp
(bad)
movs
inc
mov
xchg
out
cmps
fcom
push
xchg
xor
test
cmps
mov
aad
loope
cmps
(bad)
movs
xor
jmp
scas
push
xchg
xor
test
xchg
mov
fwait
std
loop
cmp
stos
xchg
outs
jl
xchg
mov
fwait
cmc
loop
cdq
into
stos
xchg
out
jge
push
mov
fwait
repnz
mov
stos
xchg
scas
jge
push
mov
fwait
repz
dec
(bad)
stos
inc
push
cs
xchg
test
jbe
ins
jmp
xchg
div
out
stos
inc
mov
fadd
dec
and
call
adc
movs
inc
rcr
xchg
dec
mov
out
jno
push
cli
dec
xchg
loope
es
mov
cmc
gs
scas
inc
fldenv
pop
push
pop
sbb
gs
scas
inc
fldenv
pop
into
fistp
cmc
gs
scas
fldenvw
pop
into
fwait
sbb
gs
scas
fldenvw
pop
mov
push
movs
jb
xchg
mov
fwait
std
loop
cmp
stos
xchg
outs
jl
xchg
mov
fwait
cmc
loop
cdq
into
stos
xchg
out
jge
push
mov
fwait
repnz
mov
stos
xchg
scas
jge
push
mov
fwait
repz
dec
(bad)
stos
(bad)
outs
mov
mov
cdq
sbb
test
xchg
rol
fist
iret
outs
lahf
div
scas
test
xchg
movs
ss
stc
data16
jmp
not
cmps
scas
xchg
sub
cmp
arpl
repnz
jbe
mov
dec
mov
dec
mov
inc
and
mov
jp
dec
mov
dec
lods
je
dec
or
es
lods
ja
dec
mov
dec
lods
ja
dec
mov
dec
cld
ja
dec
mov
dec
pushf
jbe
dec
mov
ja
dec
mov
dec
pushf
jbe
dec
mov
dec
mov
dec
sbb
(bad)
dec
fdiv
dec
mov
dec
ins
jne
dec
mov
jbe
dec
lods
jbe
dec
mov
dec
cld
ja
dec
sbb
push
inc
pop
je
dec
cld
jbe
dec
sbb
(bad)
dec
or
out
fdiv
dec
int3
ja
dec
ins
jbe
dec
mov
dec
sbb
jbe
fdiv
dec
mov
ja
dec
in
jbe
dec
mov
dec
pushf
jbe
dec
dec
jbe
dec
ins
jbe
dec
mov
jne
mov
adc
jp
mov
inc
xor
jbe
je
ret
mov
call
(bad)
je
scas
mov
dec
pop
outs
mov
xchg
loop
int3
pop
adc
fcomip
fldcw
xor
inc
cmp
cwde
sub
shl
sbb
shl
cmp
adc
and
(bad)
sar
cdq
xor
int3
jae
lds
je
pop
push
popa
or
test
add
and
test
cmp
fadd
and
mov
jle
lods
cld
ja
mov
push
xor
xchg
adc
dec
cmps
jne
dec
ja
dec
iret
jnp
das
inc
aaa
in
inc
ja
dec
dec
ja
dec
jg
adc
dec
cmps
jne
dec
ja
dec
dec
ja
dec
push
jbe
inc
adc
dec
dec
ja
dec
dec
ja
dec
pop
jno
jecxz
dec
(bad)
jo
inc
sub
push
inc
inc
mov
fistp
dec
out
dec
add
dec
xchg
dec
ja
dec
dec
ja
dec
mov
out
(bad)
dec
dec
ja
dec
pop
jne
test
fmulp
je
pop
pop
loopne
pop
mov
sti
xor
enter
inc
pop
inc
inc
dec
ja
dec
dec
ja
dec
das
jns
jg
fidiv
je
push
adc
mov
test
ja
dec
das
jle
or
sbb
jb
test
ja
dec
dec
ja
dec
pop
jae
stc
dec
pop
jne
dec
ja
dec
fistp
dec
out
dec
add
xchg
dec
ja
dec
dec
ja
dec
(bad)
js
stc
dec
out
(bad)
dec
dec
ja
dec
(bad)
jno
jbe
sbb
inc
inc
mov
dec
ja
dec
iret
jbe
lds
pop
push
push
sbb
hlt
inc
lea
inc
fcomip
ja
sbb
mov
and
jnp
pushf
push
repnz
dec
push
xor
xchg
and
pop
jecxz
dec
mov
mov
xor
call
ds
jo
sahf
jl
test
ja
test
ja
dec
lahf
je
jmp
cmps
sti
xor
call
jle
jo
sahf
pushf
inc
test
je
test
ja
dec
dec
ja
dec
dec
ja
dec
jg
int3
js
inc
(bad)
lds
pop
push
jp
sbb
inc
inc
dec
ins
shl
dec
cmp
call
jle
jo
jns
jg
mov
(bad)
lds
pop
push
dec
inc
xor
into
lahf
and
jp
int3
sub
mov
inc
fisubr
mov
inc
jg
inc
aaa
in
inc
ja
dec
dec
jge
dec
iret
inc
(bad)
lds
pop
push
stos
dec
cmp
jne
stos
jo
push
fsub
data16
pop
jae
dec
test
xor
(bad)
outs
jae
xor
jg
inc
aaa
in
inc
ja
dec
lahf
jnp
dec
scas
sti
xor
enter
inc
pop
inc
inc
dec
ja
dec
dec
ja
dec
jg
or
test
(bad)
dec
dec
ja
dec
out
jnp
div
cwde
shl
fdiv
inc
mov
jo
mov
inc
or
dec
inc
test
ja
dec
dec
ja
dec
jg
pushf
pop
dec
inc
mov
dec
ja
dec
outs
jle
fsubr
int3
sub
test
dec
push
test
ja
dec
das
jns
test
or
jae
push
pop
mov
(bad)
gs
shl
sub
fwait
pop
ds
pop
stc
pusha
cmps
jg
xchg
clc
jecxz
xor
xor
aam
loopne
scas
(bad)
sub
push
scas
test
inc
lds
jae
jno
sbb
out
inc
mov
push
jl
into
inc
mov
push
push
ror
push
int3
popf
mov
mov
mov
jecxz
dec
(bad)
xor
jbe
xchg
cmc
and
(bad)
out
dec
test
int
mov
mov
push
shl
ds
xchg
jle
fsubrp
jns
dec
mov
dec
repz
retf
mov
inc
stos
(bad)
fwait
adc
cmc
mov
sub
repnz
inc
ds
mov
enter
call
pop
xor
mov
mov
into
adc
retf
in
out
daa
cmp
cmp
jp
inc
cmp
pop
and
repnz
sahf
test
and
aad
adc
push
xor
test
hlt
int
jle
aas
xchg
and
in
dec
call
test
daa
sbb
outs
repz
cwde
mov
(bad)
jns
push
cmp
mov
adc
jecxz
dec
(bad)
cwde
dec
fxam
je
test
pop
mov
mov
and
mov
sbb
aam
add
movs
lods
jbe
mov
adc
push
test
push
gs
adc
mov
adc
les
mov
(bad)
int3
add
inc
je
(bad)
fdiv
test
(bad)
shl
mov
repnz
xlat
push
gs
fst
adc
sbb
inc
adc
gs
movs
js
push
test
add
test
push
jo
add
mov
and
mov
add
int3
mov
(bad)
fadd
push
pusha
lods
jne
rcr
or
push
in
jne
test
adc
pushf
je
aad
and
adc
movs
int3
and
repnz
adc
ins
jne
ror
aam
gs
movs
pushf
popa
jecxz
pushf
adc
jo
add
adc
gs
movs
js
repnz
adc
ins
lds
adc
and
aam
lds
lods
movs
push
mov
jne
test
and
add
and
inc
push
ins
cmc
add
les
mov
jne
lds
adc
pushf
je
aad
and
adc
movs
int3
and
adc
int3
gs
outs
push
xor
adc
add
push
popa
gs
xor
not
call
and
and
inc
movs
ins
adc
push
pusha
pushf
xor
ins
cmc
and
(bad)
je
and
xchg
or
es
xor
xor
gs
ins
add
add
aad
pusha
(bad)
adc
enter
mov
add
loop
pushf
add
mov
adc
out
mov
mov
test
add
adc
mov
je
shr
and
mov
adc
pushf
inc
push
addr16
test
add
xor
fdiv
call
jne
jne
xor
xor
cmps
inc
ins
adc
movs
int3
xor
pop
test
gs
mov
inc
inc
hlt
mov
inc
test
push
vunpckhps
fadd
push
add
xor
fdiv
lods
aad
les
and
mov
les
add
and
push
ror
lds
movs
pop
aad
xor
and
not
je
jne
nop
jg
inc
mov
adc
jae
or
adc
fs
gs
adc
ret
test
and
js
loop
mov
jne
pusha
mov
adc
inc
les
cmc
jb
ins
inc
inc
aam
gs
popf
mov
aad
xor
popf
add
xchg
int3
mov
aam
and
loop
cwde
popa
add
and
xchg
jbe
and
jb
mov
adc
fnsave
lods
and
adc
movs
int3
and
push
gs
lds
inc
or
jbe
dec
aad
aam
and
and
sbb
inc
test
fs
cwde
mov
test
movs
repnz
mov
aad
mov
test
add
adc
into
test
mov
and
int3
and
shl
adc
test
mov
test
mov
aam
and
fs
popa
and
and
jne
and
inc
add
inc
inc
test
adc
enter
sbb
xor
pushf
popa
adc
cld
je
mov
lds
aad
rol
add
test
shl
jno
ror
inc
in
lds
or
push
gs
xor
vpmaddwd
les
je
jo
je
lds
mov
test
inc
mov
push
rol
add
enter
or
inc
adc
add
in
add
ret
xor
add
and
inc
in
in
mov
and
mov
je
nop
jg
push
hlt
or
adc
adc
adc
pop
in
les
aad
fs
popa
and
sahf
rol
popf
mov
add
push
adc
popf
and
adc
and
shl
int3
and
xchg
jl
push
xchg
or
jbe
int3
and
xor
gs
and
xor
sbb
out
fcom
adc
cmps
or
adc
lds
adc
and
in
mov
xchg
mov
xor
repnz
jne
mov
mov
xor
popa
add
pushf
popa
xor
aad
sbb
push
in
lds
fsub
movs
enter
cld
je
shr
test
adc
pushf
je
aad
and
adc
movs
int3
and
adc
int3
gs
xchg
std
gs
popf
mov
aam
icebp
xor
add
test
jecxz
jl
xchg
cld
in
data16
out
fdiv
je
and
xchg
jl
push
jo
jne
lds
jo
add
inc
ins
adc
xchg
aam
fs
je
adc
test
xor
test
movs
repnz
mov
aad
xor
fsub
mov
mov
mov
or
xor
push
jo
add
mov
cmc
xor
fdiv
in
mov
inc
cwde
add
test
les
lods
xchg
add
push
repz
mov
sbb
aam
xor
lds
mov
rol
or
repnz
mov
aam
and
adc
jne
les
and
adc
or
(bad)
je
xor
test
repnz
loop
pushf
add
mov
adc
xchg
adc
adc
nop
scas
je
test
xor
popa
adc
inc
and
mov
rol
pushf
and
fsub
xchg
fs
popa
adc
mov
xor
mov
shl
or
adc
lods
adc
aam
and
push
jo
add
xchg
mov
in
hlt
sbb
add
xor
out
popf
inc
xor
int
add
and
add
inc
inc
popf
xor
lds
xor
and
adc
movs
int3
and
adc
fsub
inc
in
lds
les
je
inc
push
mov
je
test
aad
or
inc
shr
test
les
movs
mov
adc
into
add
not
push
(bad)
add
push
iret
(bad)
or
adc
int3
in
mov
and
repnz
inc
hlt
int3
cmc
and
mov
xor
int
adc
mov
popa
and
add
aad
and
aam
xor
adc
pushf
and
je
inc
and
and
adc
int
adc
mov
in
xchg
cdq
popa
push
rcr
and
adc
xor
int
adc
mov
gs
movs
int3
adc
adc
push
push
not
jle
icebp
mov
adc
rcr
mov
icebp
mov
adc
adc
and
adc
sbb
inc
aam
add
jl
out
dec
and
xor
cmps
inc
ins
adc
out
popf
mov
aam
and
jne
and
push
add
add
and
int3
and
shl
adc
test
mov
test
mov
aam
and
nop
cld
je
movs
enter
int
push
movs
or
add
fsub
ss
xor
inc
retf
test
mov
hlt
pushf
jno
mov
mov
ror
inc
in
in
mov
add
fs
inc
xor
aad
mov
xlat
adc
mov
push
adc
jl
xor
gs
and
push
addr16
inc
je
add
hlt
mov
adc
lods
adc
pusha
ins
push
repz
jne
test
mov
mov
popa
inc
test
movs
rol
push
add
inc
(bad)
fld
es
mov
xor
popa
adc
or
adc
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
sbb
xchg
movs
pushf
popa
add
popf
and
adc
jne
lds
mov
xchg
pop
mov
aam
and
add
inc
push
cmps
cwde
mov
test
out
fcom
push
jl
ss
aad
push
mov
je
xor
and
or
loop
fcom
adc
and
push
mov
inc
inc
hlt
mov
loop
fsub
add
popf
and
adc
jne
lds
je
gs
inc
aam
(bad)
adc
fs
repnz
aad
or
add
jne
test
out
fst
sub
inc
je
(bad)
fdiv
fsub
push
mov
and
je
popa
repz
mov
(bad)
int3
add
and
mov
jne
add
and
inc
add
jge
push
cmc
mov
and
add
repnz
aad
fs
and
adc
jne
les
and
push
mov
je
test
ror
push
movs
or
and
pusha
sahf
and
xchg
dec
not
loope
and
xchg
xchg
jp
adc
call
sbb
adc
call
movs
or
adc
call
sbb
adc
call
sbb
adc
call
sbb
add
popf
and
movs
or
adc
call
sbb
adc
call
sbb
adc
call
sbb
xchg
xor
mov
adc
call
sbb
adc
call
sbb
adc
call
xchg
adc
mov
and
call
sbb
xor
call
sbb
adc
call
sbb
and
dec
jne
sbb
adc
call
sbb
xor
call
sbb
adc
call
xchg
call
adc
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
adc
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
adc
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
movs
or
adc
call
sbb
adc
call
sbb
adc
call
sbb
push
xchg
adc
call
sbb
adc
call
sbb
adc
call
sbb
push
xchg
adc
call
sbb
adc
call
sbb
adc
call
sbb
add
popf
and
movs
or
adc
call
sbb
adc
call
sbb
adc
call
sbb
add
popf
and
movs
or
adc
call
sbb
adc
call
sbb
adc
call
sbb
add
popf
and
movs
or
adc
call
sbb
adc
call
push
std
pop
add
xlat
xchg
gs
jno
mov
xor
jecxz
fcom
push
jg
test
mov
(bad)
int3
add
movs
ins
push
jecxz
mov
and
mov
test
and
ins
and
inc
fs
adc
ins
lds
aad
add
(bad)
adc
jb
lods
ss
aam
popa
adc
int3
and
and
clc
je
or
adc
lods
adc
push
les
add
push
xchg
test
push
in
and
jl
adc
fadd
xlat
frstor
adc
lds
pushf
icebp
inc
inc
mov
jne
mov
and
test
movs
mov
mov
lds
je
lds
rcr
inc
adc
mov
mov
aaa
and
adc
jp
xor
xor
fadd
adc
and
cmp
adc
pop
push
inc
mov
add
xlat
fsub
je
add
adc
pushf
icebp
mov
or
ret
mov
and
push
test
push
test
mov
bound
and
(bad)
frstor
les
jbe
lods
fs
adc
in
or
data16
add
push
test
jecxz
popf
add
(bad)
fcom
jb
pop
jne
aam
and
xor
cwde
rcl
popf
mov
lds
aaa
mov
dec
add
ds
mov
mov
lds
les
adc
icebp
push
mov
pusha
push
push
ins
lds
call
(bad)
loop
popf
adc
rcr
movs
and
mov
add
repz
cmc
mov
enter
mov
and
push
test
and
test
push
add
lock
xchg
lods
and
in
and
adc
lahf
icebp
inc
movs
ins
adc
arpl
cmp
(bad)
mov
add
addr16
xor
push
pop
and
jo
add
mov
in
xlat
jge
inc
les
and
pusha
dec
adc
adc
movs
ins
jne
aaa
int
mov
and
aam
add
push
test
ret
addr16
cmp
aam
adc
je
mov
in
adc
add
in
inc
in
daa
push
jo
xor
pop
and
ffree
inc
adc
push
xor
(bad)
push
test
adc
test
inc
pushf
xor
les
jne
sub
loopne
cmp
aam
adc
je
push
enter
popf
loope
loopne
in
cmps
pop
and
push
pushf
aam
adc
hlt
xor
bnd
add
(bad)
pop
and
and
pop
and
loop
popf
adc
sar
ja
(bad)
lea
rol
mov
aaa
xor
pushf
adc
fiadd
push
adc
daa
not
lods
movs
bound
push
adc
pushf
loope
(bad)
pop
and
nop
jg
inc
mov
add
xchg
dec
and
jae
pop
ja
rcr
inc
cwde
xor
push
mov
and
int
inc
les
and
ffree
repnz
pop
and
xchg
ss
pushf
loope
movs
popf
add
addr16
xor
push
cdq
icebp
push
mov
sbb
push
aad
mov
mov
and
inc
mov
add
rcr
hlt
adc
pop
jne
in
and
push
test
ret
adc
add
adc
int3
xor
and
inc
add
add
add
and
sbb
je
ret
in
cmp
xor
fdiv
or
inc
add
add
add
and
sbb
je
les
adc
call
lods
aad
fadd
ror
jecxz
int3
gs
mov
les
mov
(bad)
aam
cmp
shl
push
test
ret
xor
out
popf
add
mov
je
inc
popf
adc
enter
sbb
repnz
push
loope
fs
push
push
cmp
test
je
in
movs
mov
loop
fcom
adc
jl
ret
add
push
test
loop
lods
cmps
and
push
mov
xor
adc
push
inc
ins
lds
jbe
and
add
jg
mov
daa
cmps
mov
es
mov
rol
pop
xlat
adc
outs
lds
ror
mov
adc
push
add
and
ret
and
xor
lods
jae
push
ins
lds
(bad)
or
adc
mov
cmc
and
xor
mov
xlat
add
mov
mov
inc
lods
aad
loopne
add
push
je
fs
lock
inc
aam
add
xchg
adc
adc
aam
push
adc
and
and
(bad)
mov
cmc
sbb
jne
sbb
div
and
(bad)
adc
xor
int3
add
push
adc
adc
sub
adc
lds
add
lds
shr
add
add
add
cwde
mov
push
movs
ins
lds
jno
mov
xor
mov
je
pop
mov
nop
sbb
xchg
push
adc
mov
mov
xchg
and
lds
les
ror
and
push
addr16
test
repnz
fdiv
ret
cmc
and
and
ja
xor
adc
jge
and
aad
adc
adc
adc
cmc
mov
cmc
(bad)
xchg
call
mov
mov
xchg
aaa
push
test
ret
hlt
and
cmc
in
ins
add
es
aad
je
mov
push
cmp
les
adc
test
ret
adc
xor
push
xlat
adc
adc
inc
xchg
dec
and
adc
mov
pop
mov
les
lock
push
and
pop
jne
adc
stos
xor
push
jne
pop
shl
mov
lods
(bad)
(bad)
xchg
or
adc
scas
fs
fdiv
repnz
rol
add
addr16
xor
push
pop
and
je
aad
jb
lds
mov
cwde
adc
cmp
test
addr16
jl
add
and
cmps
pop
and
jl
bound
in
les
adc
(bad)
repnz
mov
dec
cmc
in
jle
push
test
shl
ret
aad
push
cmp
pop
mov
mov
ss
and
loop
pushf
adc
clc
jne
test
jno
push
ins
lds
jbe
and
add
jg
mov
dec
mul
add
adc
xor
test
loop
fdiv
repnz
xor
fs
push
cmp
test
or
and
lds
mov
cmc
xor
fdiv
pushf
(bad)
add
pushf
icebp
adc
in
in
add
add
mov
and
adc
adc
push
jg
mov
dec
test
and
data16
and
call
aaa
adc
pextrw
inc
mov
add
(bad)
fsub
jo
fs
push
lods
cmc
and
xor
test
adc
or
daa
and
mov
out
fcom
push
jg
mov
daa
test
and
mov
loop
pop
ja
mov
xchg
xchg
mov
xor
pushf
and
mov
adc
shl
adc
loop
popf
popa
inc
aam
movs
mov
adc
leave
and
push
mov
adc
bound
and
mov
push
icebp
adc
mov
mov
nop
push
lds
shr
mov
les
jne
xor
push
mov
mov
pop
hlt
pushf
adc
mov
push
cmp
test
jne
(bad)
mov
loop
jl
ret
and
adc
out
fcom
push
jg
mov
daa
push
test
push
push
test
push
inc
aam
hlt
add
dec
adc
xor
movs
ins
jne
aad
xor
les
aaa
repnz
lds
enter
ins
ja
mov
and
jne
gs
mov
adc
test
inc
addr16
cmp
mov
mov
xor
je
lds
les
jb
cmc
in
jle
and
mov
loop
jl
ret
and
adc
inc
xchg
lods
movs
inc
mov
ss
or
out
fcom
push
jl
inc
xchg
lods
movs
inc
mov
push
aad
icebp
push
aam
and
not
lds
adc
fnsave
movs
int3
add
adc
stc
inc
adc
cmp
test
jne
(bad)
mov
loop
jl
mov
push
inc
push
cmp
adc
adc
add
addr16
xor
push
sahf
icebp
push
mov
or
adc
lds
ins
(bad)
retf
push
cmp
cmps
lods
and
fs
popa
adc
push
jne
push
jl
shl
enter
dec
xlat
add
mov
and
int3
add
nop
ror
inc
cmc
jge
loop
ins
adc
loop
jl
ret
adc
repnz
mov
test
test
fadd
xchg
pop
and
add
jg
mov
daa
test
inc
inc
pushf
xor
aam
jne
push
cmp
aaa
add
and
int
push
in
add
inc
test
push
movs
enter
dec
xor
add
fs
cmc
adc
xor
xor
les
adc
xor
inc
push
into
pusha
mov
push
not
(bad)
enter
clc
cmps
and
aad
je
mov
mov
adc
push
xlat
movs
push
adc
pop
aaa
push
movs
retf
push
cmp
aaa
push
int3
and
int
push
in
add
shl
hlt
inc
xchg
int3
add
pusha
fsubp
push
push
ins
(bad)
enter
cwde
xor
cmp
xor
push
je
je
push
ds
iret
in
ret
push
and
cmp
push
shl
xchg
loop
retf
push
cmp
(bad)
(bad)
popf
and
les
in
nop
(bad)
je
(bad)
pop
and
jne
gs
mov
rol
lods
aaa
ret
xor
and
lods
and
je
inc
and
dec
adc
and
push
cdq
mov
test
and
es
lds
int
xor
stos
(bad)
xchg
and
push
push
sbb
pusha
xchg
test
mov
fsub
jne
push
xor
add
fs
adc
push
cmp
adc
inc
inc
lods
aad
loopne
add
adc
(bad)
(bad)
loopne
pushf
cmps
adc
test
xchg
dec
inc
inc
ror
icebp
dec
mov
loop
lock
lods
add
lea
movs
popf
adc
enter
pushf
inc
inc
lods
aad
loopne
add
push
and
cmp
push
push
xchg
int
add
les
mov
lds
xchg
lods
gs
xchg
int
add
les
push
cmp
jno
or
not
and
pushf
adc
adc
mov
rcr
adc
(bad)
(bad)
jo
or
xor
pushf
add
mov
nop
pmulhuw
in
lds
int
and
cmp
aam
lds
push
gs
rcl
push
jne
xchg
xor
je
test
and
mov
or
adc
(bad)
(bad)
and
pop
in
popa
fldenv
xchg
dec
xor
push
inc
hlt
jge
shl
gs
jl
xchg
push
dec
adc
pushf
adc
xchg
mov
and
add
mov
inc
cwde
shl
xchg
aaa
mov
aas
repz
push
jne
movs
int
inc
mov
and
mov
lea
mov
sahf
xor
mov
push
fs
add
ins
rcl
adc
mov
inc
daa
and
pop
in
popa
fldenv
xchg
dec
xor
push
inc
hlt
jge
shl
gs
jl
adc
add
lods
fs
mov
test
ret
rol
jne
gs
mov
add
shl
hlt
push
aam
(bad)
fidiv
adc
iret
movs
inc
test
adc
mov
icebp
adc
mov
mov
nop
pextrw
and
ins
jne
add
test
add
mov
mov
je
cmp
adc
mov
mov
fs
add
cmp
add
rcr
ss
int3
shl
adc
and
jno
les
repz
int3
aad
nop
mov
push
adc
mov
adc
mov
mov
mov
adc
fldenv
ins
rol
lods
fs
mov
nop
fdiv
ret
cmc
and
add
fs
mov
test
add
vmovss
and
push
test
and
lds
loopne
jo
push
fdiv
fdiv
test
push
cmps
lods
and
aam
add
movs
ins
lds
xlat
pop
and
lahf
and
movs
dec
xor
mov
mov
xor
je
lds
les
jb
aad
daa
dec
add
xor
es
jne
adc
div
and
adc
aam
mov
sbb
and
and
xor
or
add
pop
and
int3
add
push
mov
push
inc
es
add
mov
mov
xchg
cmps
loop
in
aam
les
and
inc
xchg
mov
pusha
aaa
icebp
dec
adc
inc
aaa
mov
ja
imul
add
out
mov
ja
imul
xor
pop
and
rcr
push
jne
add
mov
aam
aam
mov
lods
les
data16
aad
movs
fcom
jne
jne
adc
stos
xor
loop
pushf
adc
nop
scas
fs
pop
aad
les
aad
addr16
xor
dec
and
pusha
inc
mov
adc
fdiv
rcl
in
cmps
inc
mov
in
cmps
call
pusha
fidiv
add
adc
and
fbld
mov
and
mov
add
nop
fsubp
ss
mov
not
gs
aam
in
movs
dec
and
shl
hlt
in
les
fsub
pop
jne
bound
and
mov
xor
ret
and
mov
adc
ror
daa
push
mov
(bad)
mov
mov
pop
adc
push
add
pop
lock
(bad)
xor
f2xm1
data16
lock
mov
and
dec
add
inc
xchg
daa
out
mov
not
shufps
jle
rcl
xor
lock
mov
jo
daa
dec
add
stos
pop
jno
fdiv
xchg
push
addr16
adc
retf
push
cmp
ror
mov
leave
lock
enter
mov
pop
sub
je
jl
adc
adc
les
(bad)
in
xor
int3
add
add
lods
xchg
repnz
xor
lods
and
adc
adc
push
jg
xchg
dec
daa
push
fs
adc
aad
and
aad
je
xchg
jp
add
call
pop
add
xor
dec
xor
(bad)
out
lods
adc
repz
adc
in
jle
and
in
les
adc
push
cmp
xor
adc
jmp
pop
aaa
daa
dec
xor
in
mov
xchg
popf
add
fs
icebp
lock
mov
ror
adc
sahf
xor
xor
xor
(bad)
mov
and
push
xor
adc
mov
push
cmp
add
hlt
or
and
lds
(bad)
int
loop
std
out
hlt
dec
xor
push
inc
cmc
jl
jb
mov
inc
ins
push
jecxz
push
bound
inc
pop
adc
icebp
and
jge
mov
and
jl
adc
in
mov
xchg
test
pop
test
cmps
xchg
test
xlat
push
in
mov
ret
and
aam
xor
pushf
icebp
adc
fldenv
ins
shl
hlt
in
les
or
xor
jo
xchg
ret
aad
and
xor
jne
test
rcl
fisub
and
push
ja
aad
gs
pop
cmc
and
frstor
xchg
and
ss
(bad)
loop
jp
push
push
cmp
test
call
jne
aad
and
add
inc
adc
fsub
adc
in
add
call
ja
mov
xor
ret
push
and
xor
sub
loop
js
repz
cwde
shl
dec
ja
or
gs
cmp
loopne
lods
in
les
push
in
adc
push
test
ret
add
xor
mov
je
fs
jne
lds
jne
inc
pushf
inc
xor
mov
push
mov
mov
mov
(bad)
cmc
hlt
lock
push
xor
xchg
repnz
lods
mov
mov
adc
adc
inc
push
test
adc
adc
lods
lds
add
in
loopne
movs
add
jecxz
lods
push
ret
xor
repnz
mov
xchg
xlat
push
xchg
fdiv
mov
(bad)
inc
adc
shl
mov
mov
mov
adc
add
and
cmps
ret
aaa
inc
xchg
test
push
test
ret
adc
repz
pushf
rol
movs
int3
adc
push
inc
sahf
xor
push
dec
and
adc
jge
adc
ins
jne
lds
xchg
aam
adc
nop
scas
je
movs
or
adc
lds
jl
ss
test
mov
jle
push
(bad)
inc
adc
shl
mov
mov
mov
adc
add
xchg
clc
inc
test
adc
xchg
mov
and
xchg
pop
mov
nop
push
in
test
mov
daa
cmps
pushf
sar
xchg
std
mov
ret
push
and
test
addr16
push
jae
lods
xor
jecxz
jl
loop
ins
mov
xchg
add
mov
aaa
push
mov
adc
repnz
mov
adc
cmp
aad
fs
adc
dec
and
xlat
shl
enter
test
icebp
push
adc
push
repz
inc
lods
aad
loop
add
adc
stc
adc
dec
addr16
mov
lds
xchg
cdq
mov
mov
pusha
pop
icebp
fiadd
push
cmp
and
add
pop
add
aad
fs
adc
push
dec
add
jbe
les
add
je
les
ret
mov
cmc
loop
pushf
cmps
adc
test
xchg
dec
inc
inc
ror
icebp
dec
mov
loop
lock
dec
xor
push
je
add
mov
adc
xor
ret
add
add
xor
adc
push
push
adc
jbe
mov
mul
cdq
mov
xchg
retf
push
cmp
xor
mov
xor
and
push
hlt
push
add
xor
movs
ins
lds
or
repz
gs
cmc
repnz
aaa
adc
or
or
rol
ficom
and
addr16
jl
xchg
popa
cdq
push
aaa
cmp
mov
leave
lock
ficom
jne
fs
pushf
add
xchg
fsub
adc
mov
push
aas
repz
lea
les
xor
push
cmp
gs
in
xor
je
movs
ret
aad
push
cmp
mov
push
pop
or
mov
lock
push
pop
or
mov
inc
mov
add
rcr
in
aad
mov
sub
shl
fs
test
xchg
mov
adc
mov
inc
lahf
shl
push
(bad)
adc
test
xlat
shl
nop
aam
adc
push
cmp
rcl
adc
fs
aad
push
cmp
mov
or
adc
outs
add
inc
lods
in
shr
and
(bad)
xor
inc
adc
leave
test
xchg
dec
mov
pop
ror
xchg
mov
arpl
xchg
fdiv
adc
adc
adc
lds
push
cmp
aam
test
push
test
mov
mov
adc
lods
xor
and
(bad)
stos
aad
push
aas
repz
les
repnz
mov
push
cmp
xor
adc
adc
lds
push
cmp
adc
gs
fs
aad
push
repz
mov
adc
shl
add
lods
xor
les
aad
fs
aad
push
ds
mov
mov
les
hlt
lock
push
repz
mov
les
mov
(bad)
test
add
lods
data16
popf
hlt
hlt
lock
push
and
mov
push
gs
mov
ds
mov
adc
loop
pushf
adc
adc
and
or
xor
lods
les
push
cmp
xor
das
jne
ret
hlt
lock
push
inc
inc
mov
ret
cmc
xor
dec
add
rcl
xchg
push
and
int3
mov
xor
adc
mov
mov
mov
call
aad
gs
aad
push
ds
sbb
and
lods
adc
jb
lds
and
int3
adc
ret
aad
push
ds
mov
mov
mov
inc
loop
cmp
add
adc
mov
dec
cmc
in
cmp
add
cmc
hlt
mov
mov
movs
mov
mov
cmp
test
aaa
and
dec
xor
(bad)
lods
je
mov
cmc
and
dec
and
(bad)
cli
jne
and
aad
lods
xor
and
adc
lds
mov
inc
pushf
mov
mov
icebp
hlt
mov
and
xchg
lods
adc
aad
xor
rcr
gs
pop
aad
cmps
dec
and
les
cmp
xchg
mov
pop
cmps
dec
add
and
cdq
mov
mov
pusha
ja
cli
pusha
inc
push
cmp
aam
les
and
int3
lds
push
cmp
lock
add
bound
and
les
jne
lds
fs
cmc
adc
int3
and
jbe
fs
mov
mov
push
mov
ds
inc
mov
pusha
and
pop
xor
ret
fs
aad
push
cmp
adc
int
and
push
xchg
push
cmp
je
mov
aad
fs
and
and
popf
and
movs
frstor
add
add
mov
adc
adc
lds
push
cmp
mov
les
je
lds
xor
les
push
cmp
jbe
mov
cmc
add
or
adc
push
movs
or
xlat
adc
(bad)
fdiv
je
jno
push
ds
pop
mov
mov
hlt
fadd
cmps
je
jno
push
ds
or
add
cmc
xor
or
add
lds
push
ds
movs
or
mov
adc
cmp
mov
adc
mov
aam
les
push
cmp
xor
lods
xchg
loop
fcom
adc
and
int3
mov
xor
push
aad
shr
and
jbe
and
mov
mov
mov
pusha
lods
aad
shr
cmc
xchg
push
cmp
add
popf
inc
rol
mov
add
mov
aad
aad
mov
mov
and
inc
mov
add
rcr
hlt
hlt
lock
push
repz
mov
in
aad
movs
js
ret
xchg
mov
movs
mov
movs
hlt
in
les
mov
loop
popf
mov
add
ins
mov
mov
and
out
xor
fcom
adc
adc
inc
bnd
test
add
hlt
xor
dec
xor
aad
push
cmp
mov
or
repnz
adc
and
mov
dec
cmc
hlt
test
ss
and
mov
addr16
mov
hlt
mov
mov
aam
lds
push
cmp
mov
mov
mov
pusha
lods
aad
bound
push
mov
lds
xchg
lods
xor
adc
adc
lds
push
cmp
test
xlat
(bad)
lds
and
in
(bad)
(bad)
je
vpshufhw
repz
cmc
mov
retf
push
cmp
and
mov
cmc
add
fadd
(bad)
add
xor
add
not
adc
add
into
adc
add
add
aad
push
cmp
mov
js
add
mov
mov
mov
cmp
xchg
test
xor
mov
in
test
push
and
mov
pusha
enter
jp
mov
ds
int3
gs
fcom
adc
and
or
adc
lds
sbb
ret
inc
fisub
pop
ja
rcr
es
pop
and
(bad)
pushf
and
lods
and
les
and
pop
add
and
test
xor
mov
add
inc
or
and
(bad)
ins
cmc
mov
retf
push
cmp
add
and
pushf
loope
ret
xor
int3
in
je
add
(bad)
pop
and
aad
add
adc
adc
test
movs
jl
ret
and
mov
rcr
adc
and
mov
rcr
adc
(bad)
retf
es
adc
xor
popf
aam
les
push
jp
mov
ds
add
add
xchg
xor
xor
mov
gs
mov
ds
mov
mov
inc
push
loop
cmp
loop
jl
and
fadd
push
je
(bad)
dec
and
xlat
adc
mov
lods
hlt
add
ins
adc
repnz
mov
mov
adc
push
dec
add
test
mov
(bad)
or
arpl
lds
xlat
test
and
lds
test
cmps
arpl
lds
lods
xor
mov
add
inc
or
arpl
lds
lods
les
pushf
xor
lds
xor
adc
and
je
xor
arpl
lds
aam
xor
jo
and
or
loop
fcom
adc
and
push
mov
inc
inc
hlt
mov
and
fsub
add
popf
and
adc
jne
lds
je
test
inc
add
add
or
add
mov
aad
xchg
pop
and
ss
aad
mov
cmc
add
es
int3
vmovss
adc
test
and
xchg
aam
popa
arpl
add
bound
lock
xchg
jge
add
and
jo
jge
push
mov
jge
push
add
movs
adc
jne
je
and
addr16
xor
movs
jl
jno
jl
push
aad
and
je
popa
push
aam
xor
lds
mov
adc
push
lock
ins
and
xchg
aam
popa
inc
aam
shl
mov
jno
mov
xor
mul
addr16
test
fs
popa
jecxz
popf
adc
movs
mov
lds
adc
adc
mov
mov
jp
inc
push
cmp
push
cmc
or
repz
mov
lock
xor
pusha
into
push
and
or
in
rcr
test
ins
daa
repz
mov
(bad)
int3
add
movs
ins
push
adc
mov
and
push
aam
xor
lds
and
mov
xor
(bad)
in
aad
xchg
pop
in
les
adc
test
add
lods
add
js
rol
gs
gs
mov
aam
icebp
add
and
jecxz
lods
movs
out
fdiv
test
xor
mov
aam
(bad)
jl
push
nop
sub
add
test
and
mov
push
and
inc
mov
add
fs
adc
jo
add
test
add
rcl
pop
mov
test
adc
cld
inc
xchg
adc
mov
mov
xor
rol
int3
and
(bad)
in
in
jne
and
add
enter
pushf
add
push
pushf
repz
movs
xor
gs
test
xor
test
and
repnz
aad
sbb
adc
sbb
adc
and
cmc
push
fdiv
mov
sahf
icebp
test
xor
and
adc
or
ret
test
mov
and
repnz
ror
push
jne
and
(bad)
sar
push
test
lds
mov
and
add
and
adc
pop
mov
aaa
pushf
push
push
sar
ret
mov
sar
inc
addr16
and
adc
cwde
je
test
xor
inc
retf
push
cmp
adc
or
and
and
(bad)
mov
xor
fsub
inc
ins
adc
bnd
(bad)
in
aad
xchg
pop
in
les
lock
lds
mov
mov
xor
rcl
test
adc
fs
jne
jno
test
repz
jno
ror
adc
sbb
and
push
inc
pop
jne
cmc
lods
and
movs
or
and
xchg
or
adc
mov
adc
adc
mov
and
inc
les
inc
repz
xor
les
bound
and
jb
mov
je
xor
mov
fs
adc
adc
push
mov
ror
push
cmps
test
aad
adc
jo
add
movs
or
adc
lds
movs
mov
adc
jne
movs
int3
inc
and
test
inc
test
movs
bound
fdiv
jne
mov
bound
push
and
push
je
je
add
shr
aad
lds
push
adc
ins
mov
mov
mov
loopne
and
push
sbb
push
sbb
jo
(bad)
mov
lds
movs
or
repz
lds
(bad)
out
cs
adc
fnsave
les
aad
sbb
ss
vunpcklps
adc
adc
lds
ss
xchg
fsub
in
aad
lds
xor
jl
out
fcom
adc
lds
ss
mov
hlt
ins
push
add
aad
pusha
lods
and
aam
vunpcklps
adc
adc
lds
ss
out
pextrw
inc
test
and
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
sbb
adc
call
mov
dec
lds
inc
stc
int3
fwait
mov
and
mov
sbb
cmc
jg
bound
sub
mov
in
movs
call
cmp
dec
xchg
sbb
mov
sti
and
mov
sbb
das
sub
test
movs
sti
daa
xchg
call
adc
jae
call
sub
sbb
mov
push
retf
mov
sbb
mov
stos
sbb
jmp
mov
sbb
cmp
push
sub
mov
aas
inc
test
jo
xchg
fisub
adc
or
mov
mov
mov
sbb
mov
mov
sbb
mov
stos
sbb
xchg
adc
mov
and
daa
and
mov
sbb
mov
sub
xchg
daa
and
mov
ret
sbb
sub
sub
mov
push
jmp
jno
push
loop
xchg
leave
mov
aam
pop
push
retf
mov
loope
push
retf
in
aam
push
pop
xor
sbb
sbb
sub
mov
sbb
cmc
into
push
sbb
call
mov
mov
call
fwait
and
jg
bound
sub
mov
mov
lea
dec
jne
cmp
stos
es
push
out
rcl
push
test
and
popf
and
push
das
mov
sbb
xchg
mov
jae
push
fdivr
push
pop
xor
rcl
loop
and
ret
addr16
mov
and
and
stos
cmp
xor
movs
inc
push
sbb
xchg
test
push
push
mov
and
xchg
xor
mov
nop
jbe
popf
xor
and
cmp
xchg
xor
mov
push
xor
pop
shl
jns
xchg
xor
add
fwait
and
adc
sbb
mov
cmps
pop
sbb
dec
adc
mov
sbb
mov
and
xchg
xor
mov
nop
jbe
xchg
xor
and
cmp
xchg
xor
mov
in
mov
mov
xor
bound
mov
pushf
and
popf
daa
inc
ret
sbb
call
mov
cmps
pop
sbb
dec
adc
mov
cli
sbb
adc
cmp
adc
mov
call
repz
mov
or
xor
cmp
out
fwait
daa
je
jmp
mov
jmp
mov
jmp
mov
sub
stos
(bad)
call
jmp
mov
xchg
xchg
and
out
mov
jp
and
push
fisub
imul
mov
push
popa
in
adc
call
mov
stos
sbb
jmp
mov
sbb
and
popf
fwait
daa
je
jmp
mov
stos
sbb
or
adc
jmp
mov
sub
fild
cdq
and
sub
mov
xchg
xchg
and
xchg
and
push
lods
xchg
xchg
and
xchg
and
push
sub
cdq
and
or
dec
mov
and
xchg
and
cli
xor
sti
pop
xchg
popf
daa
inc
ror
push
sbb
xchg
and
mov
mov
adc
jmp
std
into
xor
sbb
sub
mov
jp
fs
movs
sti
pop
xchg
call
sbb
push
adc
cmp
sub
mov
cmp
sbb
call
mov
sub
arpl
jnp
mov
sub
or
daa
mov
sbb
mov
stc
sbb
lahf
sub
cld
xor
mov
xor
mov
sbb
mov
cdq
and
out
jg
mov
xchg
and
mov
jnp
ja
daa
inc
and
sub
pop
into
mov
test
and
daa
mov
sbb
mov
xchg
and
mov
sbb
or
sub
mov
fisub
and
xchg
and
mov
sbb
push
jmp
call
sbb
cdq
and
sub
or
cdq
and
sub
retf
xchg
and
out
mov
jp
test
push
or
or
dec
nop
dec
test
jg
mov
xchg
and
mov
sbb
in
jg
push
fisub
and
xchg
and
mov
sbb
and
daa
inc
xchg
cmp
mov
(bad)
sub
sbb
cdq
and
sub
fisttp
xchg
and
out
cmps
popa
mov
data16
test
(bad)
sub
sbb
mov
sbb
stos
sbb
jmp
mov
sbb
mov
sti
and
xchg
daa
inc
xchg
fcom
add
cwde
xchg
sbb
mov
add
cwde
xchg
sbb
mov
add
popf
xchg
aaa
scas
pop
xchg
idiv
sbb
xchg
inc
repnz
push
sbb
mov
xchg
xchg
and
mov
pop
sbb
dec
adc
mov
call
mov
sbb
mov
add
cwde
xchg
sbb
mov
add
cwde
xchg
sbb
mov
add
popf
xchg
aaa
scas
sbb
nop
out
popf
nop
inc
repnz
push
sbb
mov
mov
mov
sbb
cmc
into
push
sbb
call
mov
mov
call
mov
sbb
xor
cwde
xchg
sbb
mov
add
cwde
xchg
sbb
mov
add
popf
xchg
aaa
scas
std
nop
idiv
mov
xchg
inc
repnz
xor
and
mov
sbb
cmc
into
push
sbb
call
mov
mov
push
push
mov
and
xchg
xor
mov
xor
into
nop
jbe
xchg
xor
and
cmp
nop
xor
mov
movs
xor
pop
and
jns
jecxz
fs
jecxz
push
xor
jnp
sbb
mov
jmp
stos
fwait
and
jmp
mov
sub
sbb
cdq
and
sub
fisttp
xchg
and
out
movs
popa
mov
xchg
jl
xchg
in
inc
fisubr
mov
cmps
sbb
mov
mov
aam
push
jmp
mov
jmp
mov
sub
sbb
cdq
and
sub
fisttp
xchg
and
out
movs
popa
mov
xchg
jl
aam
pop
repz
mov
mov
call
mov
(bad)
jmp
mov
sub
jnp
mov
mov
add
adc
in
popa
mov
es
fs
push
sub
stos
adc
inc
test
inc
stc
lds
fsubr
mov
stos
sbb
or
adc
jmp
mov
sub
cmp
nop
data16
xor
sub
cmp
sub
test
xchg
popf
daa
je
mov
xchg
in
fsub
in
mov
sbb
mov
xchg
xor
dec
sub
sti
add
xchg
daa
adc
jp
and
adc
fidivr
and
(bad)
sbb
mov
mov
xchg
mov
cmps
mov
mov
data16
inc
push
(bad)
sub
sbb
mov
sbb
jmp
mov
sbb
mov
sti
and
xchg
daa
inc
xchg
clc
xchg
sbb
mov
add
cwde
xchg
sbb
mov
mov
push
sub
cmp
mov
repz
push
jae
pop
add
into
xchg
sbb
xchg
adc
mov
cmps
pop
sbb
dec
adc
mov
cmp
call
cli
sahf
and
rcl
sub
mov
inc
and
sbb
out
pushf
push
(bad)
loop
xchg
sbb
mov
and
cwde
xchg
sbb
mov
and
cwde
xchg
sbb
mov
add
cwde
xchg
sbb
mov
add
popf
xchg
aaa
scas
cmp
nop
out
mov
adc
mov
je
push
sub
fild
lds
jnp
cmp
mov
stos
sbb
mov
sbb
mov
and
xchg
xor
mov
nop
jbe
xchg
xor
and
cmp
xchg
xor
mov
add
mov
ret
xor
push
inc
xor
adc
fwait
and
popf
daa
inc
retf
call
fwait
mov
sbb
mov
sti
add
xchg
daa
adc
sbb
and
adc
jp
movs
and
adc
sub
movs
and
adc
push
xor
sub
push
adc
sub
pop
xchg
movs
sti
pop
sbb
sbb
push
jo
rcl
in
in
sub
adc
mov
sbb
push
mov
push
jmp
mov
jmp
mov
sub
sbb
cdq
and
sub
cmp
xchg
and
out
cmps
popa
mov
es
in
push
sub
sub
lds
jnp
cmp
mov
mov
sbb
and
mov
jnp
stos
xchg
daa
adc
call
stos
xchg
daa
adc
pop
cmp
sub
cmp
sub
imul
popf
daa
inc
fisub
fsubr
fwait
mov
sbb
mov
sti
and
xchg
daa
inc
xchg
fcom
add
cwde
xchg
sbb
mov
add
cwde
xchg
sbb
mov
add
popf
xchg
aaa
scas
std
xchg
idiv
mov
xchg
(bad)
icebp
cmp
sbb
mov
xor
fucom
leave
sub
adc
mov
dec
push
push
mov
and
xchg
xor
and
cmp
xchg
xor
and
cmp
nop
xor
mov
je
mov
xor
mov
push
mov
bound
mov
fwait
and
jg
bound
sub
mov
call
mov
sbb
xor
cwde
xchg
sbb
mov
add
cwde
xchg
sbb
mov
add
popf
xchg
aaa
scas
sbb
xchg
out
popf
xchg
(bad)
icebp
pop
adc
mov
adc
fucom
leave
sub
adc
mov
test
sbb
mov
xor
cwde
xchg
sbb
mov
xor
cwde
xchg
sbb
mov
add
cwde
xchg
sbb
mov
add
popf
xchg
aaa
scas
sbb
xchg
out
popf
xchg
(bad)
icebp
pop
adc
mov
adc
fucom
leave
sub
adc
mov
test
sbb
mov
xor
cwde
xchg
sbb
mov
and
cwde
xchg
sbb
mov
add
cwde
xchg
sbb
mov
add
popf
xchg
aaa
scas
sbb
xchg
out
popf
xchg
(bad)
icebp
pop
adc
mov
adc
fucom
leave
sub
adc
mov
cmps
sbb
mov
mov
in
push
jmp
mov
jmp
mov
sub
sbb
cdq
and
sub
fisttp
xchg
and
out
cmps
popa
mov
es
in
push
or
sub
lds
jnp
cmp
mov
mov
sbb
and
mov
xor
into
nop
jbe
sahf
adc
xchg
daa
add
cmp
xchg
idiv
cmp
xchg
(bad)
icebp
mov
sub
mov
mov
push
sub
sbb
dec
push
push
mov
and
xchg
xor
mov
xor
into
nop
jbe
cwde
xor
and
cmp
sahf
xor
mov
movs
xor
pop
and
jns
jecxz
bound
mov
fwait
and
popf
daa
inc
fiadd
call
stos
mov
sbb
mov
and
jmp
stos
cdq
and
sub
or
cdq
and
sub
retf
xchg
and
out
mov
jp
movs
pop
push
or
jmp
xor
dec
nop
dec
test
jg
bound
sub
mov
sbb
mov
sbb
mov
jmp
cmp
xchg
xor
mov
nop
jbe
xchg
xor
xchg
and
xchg
xor
cdq
and
mov
push
jecxz
bound
mov
fwait
and
popf
daa
inc
fiadd
call
fwait
mov
sbb
or
adc
jmp
mov
sub
cmp
nop
data16
xor
sub
cmp
shr
shr
xchg
popf
daa
inc
fiadd
call
fwait
mov
sbb
mov
and
call
cmp
xchg
xor
and
cmp
call
stos
xchg
daa
add
mov
nop
idiv
dec
xchg
out
or
adc
mov
stos
leave
in
push
sub
sub
lds
jnp
cmp
mov
mov
sbb
xchg
push
mov
and
call
stos
xchg
daa
add
mov
nop
idiv
dec
xchg
out
or
adc
mov
stos
leave
in
push
sub
sub
lds
jnp
cmp
mov
mov
sbb
pop
in
dec
jbe
jae
lea
inc
test
jg
mov
mov
sbb
test
jg
mov
mov
sbb
in
lds
jnp
sub
mov
mov
sti
pop
bound
sbb
sub
and
repz
and
mov
sbb
dec
xchg
sti
punpckldq
mov
in
mov
movs
mov
and
mov
stos
sbb
xchg
sti
aas
bound
or
lods
mov
movs
mov
and
mov
xchg
xchg
jge
movs
je
stos
mov
sub
mov
pop
and
jae
pop
lds
jno
stos
pop
daa
mov
sbb
push
pop
and
rcl
and
sub
arpl
movs
xchg
outs
repz
and
(bad)
stos
push
sbb
mov
sbb
mov
sti
and
sahf
adc
and
mov
lods
sbb
scas
or
imul
mov
sbb
mov
and
arpl
jnp
mov
mov
sbb
mov
es
mov
call
sub
fs
xchg
and
xor
inc
je
call
call
arpl
in
jg
push
fisub
and
xchg
and
mov
sbb
inc
jnp
sbb
sbb
mov
sbb
or
sbb
xor
sbb
mov
call
push
inc
inc
push
cdq
jb
int3
movs
sti
pop
sbb
sbb
xchg
sub
cmc
into
push
sbb
call
mov
mov
call
mov
sbb
shl
rcr
repnz
sub
mov
cwde
mov
adc
xchg
sub
jno
adc
jmp
adc
std
into
push
sbb
xchg
adc
mov
ret
out
mov
stos
stos
fwait
jbe
stos
dec
xchg
(bad)
stos
punpckhwd
repz
and
mov
or
mov
sbb
pop
into
xor
int
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
add
sub
out
fwait
daa
je
stos
cmps
push
mov
das
dec
int
sub
xchg
out
fwait
daa
je
jmp
stos
call
jge
push
push
sbb
inc
sub
sub
xchg
aad
xchg
fdivr
jge
nop
push
sbb
inc
xchg
mov
add
pop
xor
or
push
sbb
xchg
and
mov
call
call
mov
mov
jl
or
daa
push
(bad)
dec
mov
sbb
adc
lds
inc
sbb
and
cdq
lods
adc
xchg
sbb
jge
add
lahf
rcr
mov
inc
loopne
xchg
outs
pop
cdq
xchg
lods
adc
xchg
fcomp
jge
add
lahf
rcr
repnz
movs
jle
sub
adc
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
stos
xor
or
sbb
lahf
(bad)
sbb
into
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
push
inc
loope
rcr
repnz
mov
add
daa
stos
call
rcr
sbb
mov
rcr
inc
rcr
fcomp
xor
arpl
jp
fmul
cwde
fcomp
xor
arpl
jp
fcomp
ficom
sbb
int3
call
out
in
sub
mov
ficomp
repnz
mov
jge
out
(bad)
jmp
mov
xor
nop
push
sbb
sbb
jnp
jge
nop
push
sbb
xchg
mov
adc
call
and
daa
and
mov
sbb
sbb
ins
inc
gs
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
and
retf
xchg
and
add
inc
and
mov
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
jbe
fsubr
call
xchg
and
retf
xchg
and
add
and
mov
jl
stos
call
rcr
sbb
mov
nop
pushf
fisub
mov
fcomp
sbb
mov
nop
xchg
aad
out
outs
fmul
cwde
fcomp
xor
arpl
call
pop
int3
push
sbb
aad
dec
jbe
lods
and
mov
sbb
test
sbb
mov
mov
jge
out
(bad)
jmp
push
mov
addr16
(bad)
sub
pop
add
in
leave
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
sbb
and
mov
sbb
mov
sbb
sbb
adc
pop
into
mov
int
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
mov
mov
jl
lea
cmps
push
mov
das
sub
pop
and
xchg
out
fwait
daa
je
jmp
jb
das
jmp
jl
lea
cmps
push
mov
das
jp
lahf
and
xchg
out
fwait
daa
je
stos
cmps
mov
popf
call
and
stos
call
jge
nop
push
sbb
dec
je
xchg
mov
out
lea
imul
daa
fs
gs
stos
call
jge
nop
push
sbb
pop
ja
xchg
dec
fsubrp
lea
imul
daa
inc
rcr
fstp
xor
inc
mov
into
mov
int
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
add
aas
xchg
out
fwait
daa
je
stos
cmps
push
mov
das
jmp
jl
lea
cmps
pop
or
sbb
aad
xor
adc
xor
pop
aad
xchg
pop
and
push
mov
xor
mov
aad
les
gs
std
inc
xor
jno
mov
loope
mov
(bad)
or
inc
movs
ins
and
push
xchg
int
and
push
pusha
iret
push
shl
xor
loop
frstor
bound
int3
lds
mov
lds
mov
lods
mov
mov
xor
movs
push
movs
loop
in
in
movs
int3
and
(bad)
les
(bad)
lods
aad
test
arpl
frstor
ror
push
mov
(bad)
jle
adc
and
rcr
adc
pushf
rcl
bound
jecxz
jb
add
xchg
cwde
jecxz
sbb
adc
pushf
and
xchg
pushf
and
mov
rcl
jb
add
ret
adc
xor
ret
adc
pushf
and
rcr
adc
popf
add
adc
ret
push
mov
ret
push
inc
sahf
and
mov
xor
bound
adc
sahf
and
rcr
rcl
sbb
inc
sahf
and
xchg
popf
jae
mov
arpl
mov
pushf
mov
xchg
cwde
ret
adc
and
bound
and
and
adc
pushf
jae
bound
adc
xchg
and
cwde
adc
int
mov
pop
add
xchg
xor
xor
inc
mov
(bad)
sbb
into
xchg
inc
loope
rcr
repnz
inc
mov
arpl
stos
call
test
jne
(bad)
xchg
adc
jge
add
sahf
rcr
repnz
mov
xchg
and
fiadd
push
and
neg
aas
imul
or
daa
in
sbb
adc
mov
jl
add
daa
add
aam
adc
adc
lea
sub
mul
add
aam
dec
(bad)
adc
(bad)
jmp
imul
daa
test
jnp
daa
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
call
sbb
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
push
inc
loope
rcr
repnz
nop
fisub
mov
pop
fstp
repnz
lock
fisub
mov
fcomp
sbb
mov
pusha
sahf
fisub
call
sbb
mov
mov
call
pop
int3
call
mov
dec
adc
call
sbb
adc
jmp
adc
jge
movs
jle
sub
pop
sbb
sbb
aas
imul
or
daa
in
sbb
adc
mov
jl
add
daa
add
aam
adc
adc
lea
sub
mul
add
aam
dec
(bad)
adc
(bad)
jmp
imul
daa
test
jnp
daa
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
call
sbb
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
push
inc
loope
rcr
repnz
nop
fisub
mov
pop
fstp
repnz
lock
fisub
mov
fcomp
sbb
mov
mov
call
sbb
mov
loopne
fisub
call
pop
int3
call
mov
dec
mov
push
gs
rcr
pusha
jno
adc
jmp
adc
jge
movs
jle
sub
xchg
jno
xchg
(bad)
loope
adc
mov
xor
bound
sbb
mov
call
xchg
adc
mov
ficomp
repnz
pusha
ss
rol
call
jnp
sbb
mov
pushf
xchg
sbb
mov
and
mov
ficomp
xor
pusha
(bad)
push
call
and
xchg
cwde
daa
adc
mov
adc
pop
xor
lea
es
imul
mov
sbb
push
stos
add
adc
and
mov
sbb
stos
and
mov
gs
mov
fldenv
in
xchg
jae
ins
inc
shr
jnp
sbb
mov
jmp
mov
sub
pop
or
push
inc
pushf
add
rcr
xor
add
sbb
push
xchg
add
lahf
rcr
jb
inc
and
test
sbb
mov
add
xchg
and
cwde
xor
int
xlat
sbb
cmps
mov
pop
das
in
cmp
or
call
xchg
out
fwait
daa
je
push
daa
mov
sbb
add
add
pop
stos
call
je
pushf
adc
xchg
add
into
adc
sbb
adc
(bad)
and
(bad)
sbb
into
shl
jmp
adc
mov
ficomp
repnz
lock
cmps
xchg
and
cwde
xor
int
xlat
sbb
cmps
mov
pop
das
in
cmp
or
call
xchg
out
fwait
daa
je
push
daa
mov
sbb
push
sub
dec
mov
and
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
and
rcl
adc
inc
and
mov
sbb
test
sbb
mov
rcr
xchg
and
cwde
xor
pop
xor
sub
in
cmp
fwait
test
lds
mov
(bad)
sbb
into
shl
jmp
adc
mov
stos
cli
sbb
das
imul
or
daa
in
sbb
adc
mov
jl
add
daa
add
aam
jmp
adc
lea
adc
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
add
aam
adc
adc
lea
imul
daa
adc
jmp
enter
jge
push
push
sbb
push
mov
xor
nop
push
sbb
lods
and
stos
call
ficom
sbb
int3
call
mov
dec
inc
js
add
sbb
into
shr
jmp
adc
mov
ficomp
repnz
push
mov
arpl
jge
out
(bad)
jmp
add
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
pop
or
das
sbb
pushf
and
nop
repnz
dec
cld
xchg
mov
jl
lea
pop
daa
mov
sbb
jno
xchg
inc
loop
repz
punpckhwd
xchg
test
(bad)
daa
in
sbb
adc
mov
jl
add
daa
add
aam
jmp
adc
lea
adc
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
add
aam
adc
adc
lea
imul
daa
inc
rcr
fstp
xor
inc
mov
into
repz
fwait
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
stos
call
rcr
sbb
mov
pusha
pushf
fisub
mov
fcomp
sbb
mov
lock
fisub
call
sbb
mov
adc
sahf
and
adc
pop
int3
call
mov
dec
add
and
sbb
into
shr
jmp
adc
mov
ficomp
repnz
push
mov
arpl
stos
call
test
and
adc
add
sahf
rcr
repnz
movs
jle
sub
adc
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
inc
loope
rcr
repnz
push
mov
arpl
stos
call
and
cmps
and
fbld
xor
gs
lea
cmps
and
stos
call
jge
nop
push
sbb
push
cmp
test
(bad)
xchg
adc
jge
add
sahf
rcr
repnz
mov
sbb
nop
outs
inc
xchg
sbb
mov
sbb
cli
and
cwde
rcl
mov
push
xchg
cli
and
mov
sbb
mov
jo
adc
adc
sub
adc
pushf
test
jp
sub
repz
and
mov
sbb
adc
je
stos
inc
daa
mov
sbb
cli
and
mov
sbb
bound
in
cmp
sub
mov
cli
and
mov
sbb
mov
mov
sbb
rcr
and
repz
or
adc
mov
dec
inc
test
icebp
push
cld
sbb
shr
cli
and
mov
sbb
xchg
xchg
and
mov
sbb
and
sbb
mov
mov
adc
sbb
xchg
mov
xchg
jno
xchg
inc
loop
repz
das
imul
or
daa
in
sbb
adc
mov
jl
add
daa
add
aam
jmp
adc
lea
adc
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
adc
jmp
ret
in
leave
out
(bad)
jmp
repnz
addr16
(bad)
sub
pop
or
in
leave
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
scas
and
loop
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
sbb
sbb
adc
pop
into
repz
fwait
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
sahf
retf
(bad)
jmp
mov
sbb
jno
xchg
(bad)
loope
adc
mov
mov
sub
cdq
and
jmp
ret
mov
into
repz
fwait
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
fcmove
lahf
and
xchg
out
fwait
daa
je
jmp
stos
call
jge
nop
push
sbb
test
push
out
lea
imul
daa
inc
rcr
fstp
xor
adc
fisubr
les
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
jno
(bad)
sbb
into
push
inc
loope
rcr
repnz
xor
gs
stos
call
test
sbb
xchg
adc
jge
add
sahf
rcr
repnz
movs
jle
sub
adc
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
inc
loope
rcr
repnz
push
mov
arpl
jge
out
(bad)
jmp
leave
gs
jge
nop
push
sbb
lods
and
stos
call
ficom
sbb
int3
call
sbb
inc
test
xchg
stos
sub
xchg
out
fwait
daa
je
push
daa
mov
sbb
mov
pop
dec
adc
lahf
rcr
mov
into
shr
jmp
adc
mov
call
mov
sbb
and
daa
xchg
pop
xchg
sub
mov
sbb
mov
jmp
jge
out
(bad)
jmp
jge
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
pop
or
das
sbb
pushf
and
add
jnp
in
in
xor
add
xchg
rcr
jb
inc
and
lods
sbb
nop
repz
xchg
push
sub
cmp
fwait
daa
je
push
daa
mov
sbb
and
mov
test
push
repnz
loopne
cdq
(bad)
adc
jmp
add
daa
stos
call
sub
fbld
xor
gs
lea
cmps
and
stos
call
jge
nop
push
sbb
loope
push
in
(bad)
xchg
adc
jge
add
sahf
rcr
repnz
push
push
sbb
adc
sub
pop
add
xchg
xor
aad
repnz
(bad)
sbb
into
push
inc
loope
rcr
repnz
push
mov
arpl
stos
call
test
sbb
xchg
adc
jge
add
sahf
rcr
repnz
push
push
sbb
adc
sub
pop
add
xchg
xor
adc
inc
mov
(bad)
sbb
into
push
inc
loope
rcr
repnz
push
mov
arpl
stos
call
test
jne
(bad)
xchg
adc
jge
add
sahf
rcr
repnz
push
push
sbb
adc
sub
pop
add
xchg
xor
xor
inc
mov
(bad)
sbb
into
push
inc
loope
rcr
repnz
push
mov
arpl
jge
out
(bad)
jmp
add
addr16
(bad)
sub
pop
add
jge
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
jle
pusha
lods
loop
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
test
jno
jge
push
push
sbb
inc
sbb
sub
pushf
fisub
xchg
and
gs
lea
cmps
and
stos
call
lea
add
test
jb
and
scas
imul
xchg
sub
jno
push
inc
loope
rcr
repnz
mov
fisub
cmps
xchg
and
cwde
xor
stos
xor
sub
push
push
cli
arpl
lea
imul
daa
adc
jmp
rcr
sbb
mov
mov
fisub
xchg
and
fbld
xor
gs
lea
cmps
and
stos
call
lea
add
mov
mov
and
fild
mov
(bad)
sbb
into
push
inc
loope
rcr
repnz
push
mov
arpl
stos
call
test
xor
adc
add
sahf
rcr
repnz
push
push
sbb
ins
inc
gs
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
and
ret
dec
and
cld
xchg
push
push
cmp
fwait
daa
je
push
daa
mov
sbb
jno
xchg
inc
loop
repz
punpckhwd
xchg
test
(bad)
daa
in
sbb
adc
mov
jl
add
daa
add
aam
jmp
adc
lea
adc
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
add
aam
adc
adc
xchg
add
lahf
(bad)
sbb
into
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
push
inc
loope
rcr
repnz
adc
and
cwde
xor
mov
xchg
retf
lea
imul
daa
inc
rcr
fstp
xor
inc
nop
pop
into
jae
int
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
sbb
sub
mov
sbb
mov
sbb
mov
sbb
jge
push
push
sbb
inc
sbb
sub
xchg
fisub
xchg
lahf
and
xchg
adc
jge
add
sahf
rcr
repnz
mov
xchg
lods
adc
xchg
fcomp
jge
add
lahf
rcr
repnz
movs
jle
sub
sbb
mov
mov
sub
cdq
and
jmp
mov
and
dec
nop
push
xchg
fwait
and
and
mov
mov
sbb
mov
sbb
test
sbb
mov
pusha
ss
rcl
call
stos
and
mov
and
and
mov
sbb
test
sbb
mov
pusha
(bad)
push
call
and
adc
mov
adc
pop
xor
lea
es
imul
mov
sbb
mov
and
cwde
xor
mov
jnp
jge
push
push
sbb
push
mov
xor
nop
push
sbb
adc
gs
jge
nop
push
sbb
xchg
mov
adc
fwait
lods
xchg
cmp
dec
adc
jae
and
mov
ficomp
repnz
and
sahf
and
fstp
repnz
pusha
sahf
fisub
stos
sahf
and
fcomp
xor
arpl
mov
fcomp
xor
arpl
call
pop
int3
push
sbb
aad
sti
jo
sub
sub
jge
push
push
sbb
aam
gs
jge
push
push
sbb
push
mov
xor
nop
push
sbb
adc
gs
jge
nop
push
sbb
xchg
mov
adc
fwait
lods
xchg
cmp
dec
adc
inc
and
mov
sbb
jge
push
push
sbb
aam
gs
jge
push
push
sbb
push
mov
xor
nop
push
sbb
adc
gs
jge
nop
push
sbb
xchg
mov
lock
outs
pop
cdq
fwait
lods
xchg
ins
xchg
call
and
mov
ficomp
repnz
mov
fisub
call
sbb
mov
adc
sahf
and
fcomp
xor
arpl
call
sbb
mov
rcl
and
adc
aaa
sub
call
test
daa
adc
mov
adc
dec
lock
sbb
inc
jnp
pop
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
shl
adc
mov
add
push
mov
mov
dec
xor
cdq
adc
jl
stos
call
lea
add
sub
xor
jne
mov
lahf
(bad)
sbb
into
push
jo
xchg
xchg
cmp
cdq
xor
jl
stos
call
lea
add
sub
xor
push
adc
dec
push
mov
(bad)
sbb
into
push
mov
xchg
xchg
cmp
cdq
arpl
jl
stos
call
lea
add
sub
xor
push
adc
dec
push
mov
(bad)
sbb
into
push
inc
in
shr
or
daa
push
(bad)
dec
xchg
sahf
(bad)
sbb
inc
adc
lds
inc
sbb
loopne
xchg
outs
pop
cdq
xchg
lods
adc
xchg
fcomp
jge
add
lahf
rcr
mov
inc
adc
call
jge
add
lahf
rcr
repnz
mov
xchg
and
sbb
and
stos
call
lea
add
xchg
inc
lahf
and
dec
push
mov
(bad)
sbb
into
push
inc
loope
rcr
repnz
rcl
xchg
and
cwde
xor
call
push
call
(bad)
mov
jl
or
jmp
inc
(bad)
and
call
test
adc
adc
add
sahf
rcr
repnz
adc
retf
xchg
daa
adc
retf
sbb
arpl
jge
nop
push
sbb
aam
sub
push
push
or
in
lea
imul
daa
adc
jmp
inc
(bad)
and
call
test
jne
(bad)
xchg
adc
jge
add
sahf
rcr
repnz
push
push
sbb
inc
sbb
sub
xchg
fisub
xchg
pushf
and
and
fbld
xor
gs
lea
cmps
pop
or
int3
sbb
inc
pop
(bad)
jmp
inc
(bad)
and
call
test
lds
jge
add
sahf
rcr
repnz
adc
mov
add
movs
sti
daa
mov
call
sub
nop
fisub
xchg
xchg
and
cwde
xor
pop
cs
sub
push
or
in
lea
imul
daa
adc
jmp
inc
(bad)
and
call
test
push
sbb
xchg
adc
jge
add
sahf
rcr
repnz
adc
mov
add
movs
sti
push
mov
retf
sbb
arpl
jge
nop
push
sbb
and
sub
push
push
stos
shr
lea
imul
daa
adc
jmp
inc
(bad)
and
call
test
inc
push
(bad)
xchg
adc
jge
add
sahf
rcr
repnz
push
push
sbb
inc
sbb
sub
xchg
fisub
xchg
pushf
and
mov
xor
gs
lea
cmps
and
stos
call
lea
add
mov
add
jne
repnz
push
mov
(bad)
sbb
into
push
inc
in
shr
or
daa
push
(bad)
mov
sbb
inc
adc
lds
inc
sbb
inc
mov
(bad)
sbb
mov
mov
cwde
lods
adc
fiadd
cmp
cdq
and
(bad)
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
adc
jmp
xor
jl
stos
call
test
cmc
sbb
xchg
adc
jge
add
sahf
rcr
repnz
movs
jle
sub
rol
sub
cwde
push
in
popf
cdq
and
jmp
and
jl
stos
call
test
jecxz
and
push
adc
xchg
and
(bad)
and
(bad)
sbb
into
shl
jmp
adc
mov
scas
cli
sbb
punpckhwd
xchg
test
(bad)
daa
in
sbb
adc
mov
jl
add
daa
add
aam
jmp
adc
lea
adc
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
adc
jmp
and
(bad)
sbb
mov
and
xor
outs
inc
mov
(bad)
sbb
into
push
inc
loope
rcr
repnz
rcl
sahf
and
fstp
repnz
nop
pushf
fisub
mov
fcomp
sbb
mov
xor
daa
pop
(bad)
sub
pop
sub
adc
call
mov
xchg
in
aad
loop
imul
adc
and
movs
sbb
sbb
ins
inc
gs
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
adc
mov
out
fwait
daa
je
push
daa
mov
sbb
jno
xchg
out
fwait
mov
push
and
sub
dec
mov
add
dec
nop
call
sar
jne
xchg
adc
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
shl
adc
mov
jmp
in
lea
add
stos
imul
gs
jge
push
push
sbb
push
mov
xor
nop
push
sbb
lods
and
stos
call
xchg
and
ret
dec
and
cli
cmps
xchg
xchg
cwde
and
test
jge
add
xchg
rcr
jb
inc
and
movs
sbb
sbb
aam
gs
jge
push
push
sbb
push
mov
xor
nop
push
sbb
lods
and
stos
call
xchg
and
ret
dec
and
cli
cmps
xchg
xchg
popf
and
mov
adc
add
xchg
rcr
jb
inc
and
movs
sbb
mov
daa
in
xchg
and
jmp
stos
call
rcr
sbb
mov
adc
sahf
and
fcomp
xor
arpl
jge
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
push
add
adc
sbb
into
shr
jmp
adc
mov
ficomp
repnz
mov
fisub
call
sbb
mov
adc
sahf
and
fcomp
xor
arpl
jge
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
outs
and
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
popf
dec
push
sbb
xchg
jae
jge
push
push
sbb
ins
inc
gs
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
adc
and
pop
cmp
fwait
daa
je
push
daa
mov
sbb
adc
and
retf
sbb
arpl
jge
out
(bad)
jmp
add
pop
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
adc
sbb
loop
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
or
in
leave
out
(bad)
jmp
xor
pop
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
xchg
in
inc
adc
cmc
outs
adc
add
xchg
rcr
jb
inc
and
movs
sbb
mov
daa
adc
retf
sbb
arpl
jge
out
(bad)
jmp
add
pop
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
add
sbb
mov
daa
adc
mov
jl
sti
repz
and
mov
sbb
or
in
leave
out
(bad)
jmp
xor
pop
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
adc
sbb
pop
mov
daa
adc
mov
jl
sti
repz
and
mov
sbb
popf
dec
push
sbb
xchg
rcl
xchg
and
cwde
adc
shr
jl
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
jno
push
lds
lahf
rcr
mov
into
shr
jmp
adc
mov
ficomp
repnz
mov
fisub
call
sbb
mov
adc
sahf
and
fcomp
xor
arpl
jge
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
push
add
sub
and
sbb
into
shr
jmp
adc
mov
call
call
mov
mov
fisubr
or
daa
adc
sub
dec
mov
and
fwait
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
stos
call
rcr
sbb
mov
adc
sahf
and
fcomp
xor
arpl
jge
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
push
add
sub
dec
rcr
pusha
jno
shr
jmp
adc
mov
ficomp
repnz
mov
fisub
call
sbb
mov
adc
sahf
and
fcomp
xor
arpl
jge
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
push
add
sub
cmc
dec
rcr
pusha
jno
shr
jmp
adc
mov
fisubr
or
daa
push
(bad)
dec
mov
sbb
adc
lds
inc
sbb
loopne
xchg
outs
pop
cdq
xchg
lods
adc
xchg
fcomp
jge
add
lahf
rcr
mov
inc
adc
call
jge
add
lahf
rcr
repnz
push
push
sbb
adc
sub
pop
sub
push
push
fimul
adc
mov
jl
or
sbb
sbb
adc
mov
sahf
and
ja
jnp
pop
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
shl
xchg
mov
mov
int
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
stos
call
rcr
sbb
mov
rcl
sahf
and
fcomp
xor
arpl
jge
daa
pop
(bad)
sub
pop
sub
adc
call
push
jmp
and
cld
xchg
cmp
out
fwait
daa
je
push
daa
mov
sbb
adc
and
repnz
push
mov
adc
mov
jl
sti
repz
and
mov
sbb
popf
dec
push
sbb
pushf
jae
and
cld
xchg
sbb
out
fwait
daa
je
push
daa
mov
sbb
push
jmp
and
cld
xchg
fimul
out
fwait
daa
je
push
daa
mov
sbb
push
jmp
test
xor
mov
xchg
in
in
add
add
xchg
rcr
jb
inc
and
movs
sbb
jge
movs
jle
sub
pop
xchg
popf
daa
inc
shr
sbb
punpckhwd
xchg
test
(bad)
daa
in
sbb
adc
mov
jl
add
daa
add
aam
jmp
adc
lea
adc
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
test
jnp
pop
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
shl
adc
mov
popf
leave
push
adc
jmp
bound
out
(bad)
jmp
ret
in
leave
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
pop
or
das
sbb
xchg
and
mov
sub
mov
arpl
jge
out
(bad)
jmp
ret
in
leave
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
pop
or
das
sbb
pushf
and
nop
repnz
inc
cld
xchg
dec
mov
xchg
out
fwait
daa
je
push
daa
mov
sbb
jno
xchg
jcxz
mov
retf
adc
sub
dec
mov
and
fwait
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
jno
xchg
(bad)
loope
adc
mov
(bad)
push
int3
sub
xor
cmp
mov
sbb
mov
mov
sbb
mov
mov
sbb
mov
mov
cs
loop
(bad)
xchg
jae
pop
into
repz
fwait
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
(bad)
or
sbb
inc
adc
lds
inc
sbb
loopne
xchg
outs
pop
cdq
xchg
lods
adc
xchg
fcomp
jge
add
lahf
rcr
mov
inc
adc
call
jge
add
lahf
rcr
repnz
adc
mov
sbb
cmp
sub
mov
stos
sbb
jl
stos
call
rcr
sbb
mov
rcl
sahf
and
fcomp
xor
pusha
inc
rcr
sub
call
pop
int3
call
mov
dec
xor
fwait
daa
je
push
daa
mov
sbb
jno
xchg
daa
jmp
push
test
and
popf
and
dec
sub
xchg
and
mov
cmp
in
(bad)
ja
jnp
pop
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
shl
and
test
jge
xor
(bad)
jmp
add
out
(bad)
jmp
add
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
adc
sbb
mov
popf
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
mov
out
xchg
and
cmp
and
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
adc
and
or
xchg
out
fwait
daa
je
push
daa
mov
sbb
gs
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
and
push
gs
rcr
pusha
jno
shr
jmp
adc
mov
mov
push
push
pop
xor
test
push
push
sbb
aam
gs
jge
push
push
sbb
push
mov
xor
nop
push
sbb
lods
and
stos
call
xchg
and
ret
dec
and
cld
xchg
or
out
fwait
daa
je
push
daa
mov
sbb
or
sbb
mov
scas
push
in
lea
add
xchg
add
out
(bad)
jmp
ret
in
leave
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
add
sbb
test
int
daa
adc
mov
jl
sti
repz
and
mov
sbb
or
in
leave
out
(bad)
jmp
mov
leave
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
add
sbb
loop
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
mov
inc
lds
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
adc
stos
mov
out
fwait
daa
je
push
daa
mov
sbb
or
sbb
xor
(bad)
jmp
add
out
(bad)
jmp
ret
in
leave
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
adc
sbb
test
daa
adc
mov
jl
sti
repz
and
mov
sbb
mov
inc
lds
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
adc
or
out
fwait
daa
je
push
daa
mov
sbb
or
sbb
mov
in
leave
xor
(bad)
jmp
add
out
(bad)
jmp
ret
in
leave
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
adc
sbb
loop
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
mov
inc
lds
pop
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
rcr
lahf
rcr
mov
into
shr
jmp
adc
mov
cdq
and
xor
test
push
push
sbb
aam
gs
jge
push
push
sbb
push
mov
xor
nop
push
sbb
lods
and
stos
call
xchg
and
ret
dec
and
cli
cmps
xchg
test
push
inc
adc
and
movs
sbb
adc
inc
sar
sbb
mov
nop
sahf
fisub
mov
fstp
repnz
push
popf
fisub
call
sbb
mov
mov
shl
jge
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
jle
loope
loop
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
mov
inc
lds
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
adc
pushf
and
stc
aas
xchg
out
fwait
daa
je
push
daa
mov
sbb
sbb
les
(bad)
jmp
add
out
(bad)
jmp
ret
in
leave
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
xchg
in
xor
adc
add
xchg
rcr
jb
inc
and
movs
sbb
adc
inc
sar
sbb
mov
nop
sahf
fisub
mov
fstp
repnz
push
popf
fisub
call
sbb
mov
mov
shl
jge
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
cs
adc
adc
mov
jl
sti
repz
and
mov
sbb
mov
inc
lds
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
adc
pushf
and
sar
xchg
out
fwait
daa
je
push
daa
mov
sbb
sbb
les
(bad)
jmp
add
out
(bad)
jmp
ret
in
leave
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
adc
sbb
loop
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
rcl
daa
inc
rcr
sbb
mov
nop
sahf
fisub
mov
fstp
repnz
push
popf
fisub
call
sbb
mov
mov
shl
jge
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
push
add
sub
inc
rcr
pusha
jno
shr
jmp
adc
mov
fisubr
or
daa
adc
repnz
call
add
repz
fwait
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
stos
call
rcr
sbb
mov
rcl
sahf
and
fcomp
xor
arpl
jge
daa
pop
(bad)
sub
pop
sub
adc
call
push
jmp
aam
dec
inc
inc
out
(bad)
sbb
into
shr
jmp
adc
mov
ficomp
repnz
nop
sahf
fisub
mov
fstp
repnz
nop
pushf
fisub
mov
fcomp
sbb
mov
mov
shl
jge
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
adc
push
add
add
push
test
lahf
rcr
mov
into
shr
jmp
adc
mov
ficomp
repnz
mov
shl
jge
out
(bad)
jmp
inc
and
jge
addr16
(bad)
sub
pop
add
in
leave
daa
pop
(bad)
sub
pop
add
jno
cmps
jle
adc
sbb
repnz
inc
inc
out
fwait
daa
je
push
daa
mov
sbb
gs
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
and
ret
out
pop
dec
push
adc
xchg
xor
in
add
cmp
(bad)
sbb
into
shr
jmp
adc
mov
fisubr
or
daa
adc
shl
add
dec
push
call
rcr
add
xchg
adc
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
inc
loope
rcr
repnz
mov
shl
jge
out
(bad)
jmp
inc
and
jge
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
pop
or
das
sbb
xchg
and
pop
dec
push
adc
xchg
xor
in
sub
mov
jl
sti
repz
and
mov
sbb
add
in
leave
out
(bad)
jmp
add
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
adc
sbb
mov
popf
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
sub
xor
push
push
sbb
push
mov
xor
nop
push
sbb
adc
gs
jge
nop
push
sbb
xchg
mov
adc
call
push
call
aam
dec
inc
shr
sbb
into
shr
jmp
adc
mov
ficomp
repnz
nop
sahf
fisub
mov
fstp
repnz
nop
pushf
fisub
mov
fcomp
sbb
mov
jo
fisub
mov
fcomp
xor
arpl
call
pop
int3
call
test
mov
(bad)
aam
dec
jnp
loop
(bad)
cdq
push
adc
mov
jl
sti
repz
and
mov
sbb
sbb
sbb
adc
adc
or
mov
daa
in
xchg
and
pop
xor
xchg
adc
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
inc
loope
rcr
repnz
mov
shl
jge
out
(bad)
jmp
inc
and
jge
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
pop
or
das
sbb
xchg
and
pop
dec
push
adc
xchg
xor
in
sub
mov
jl
sti
repz
and
mov
sbb
add
in
leave
out
(bad)
jmp
add
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
xchg
mov
adc
call
mov
adc
sbb
mov
popf
fldenv
adc
mov
jl
sti
repz
and
mov
sbb
sbb
sbb
adc
adc
dec
xor
xchg
adc
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
inc
loope
rcr
repnz
mov
shl
jge
out
(bad)
jmp
inc
and
jge
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
pop
or
das
sbb
xchg
and
pop
dec
push
adc
xchg
xor
in
sub
mov
jl
sti
repz
and
mov
sbb
sbb
sbb
adc
pop
into
repz
fwait
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
rcr
sub
fisub
call
pop
int3
call
mov
dec
adc
and
cmp
out
fwait
daa
je
push
daa
mov
sbb
jno
xchg
daa
in
call
push
sub
dec
mov
rcl
and
pop
into
repz
fwait
and
push
xchg
mov
jnp
xchg
out
fwait
daa
je
stos
mov
cwde
jb
das
jmp
jl
lea
cmps
push
mov
das
sbb
lahf
and
xchg
out
fwait
daa
je
jmp
stos
call
rcr
sbb
mov
nop
pushf
fisub
mov
fcomp
sbb
mov
mov
shl
jge
daa
pop
(bad)
sub
pop
sub
adc
call
mov
xchg
in
test
bound
add
xchg
rcr
jb
inc
and
movs
sbb
sbb
ins
inc
gs
stos
call
xchg
jl
stos
call
rcr
sub
mov
arpl
jno
cmps
jle
adc
adc
sahf
and
mov
adc
mov
jl
sti
repz
and
mov
sbb
add
in
leave
out
(bad)
jmp
add
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
pop
or
das
sbb
pushf
and
nop
repnz
dec
cmc
xchg
jge
jo
sbb
shr
jmp
adc
mov
ficomp
repnz
mov
shl
jge
out
(bad)
jmp
add
addr16
(bad)
sub
pop
sub
xor
nop
push
sbb
pop
or
das
sbb
pushf
and
nop
repnz
inc
cld
xchg
mov
jl
lea
pop
daa
mov
sbb
jno
xchg
inc
loope
rcr
repnz
adc
leave
out
(bad)
jmp
add
addr16
(bad)
sub
pop
add
in
leave
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
(bad)
fisubr
and
mov
jnp
pop
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
fidivr
sbb
(bad)
push
sbb
into
adc
out
xchg
adc
int3
cli
xor
inc
loope
(bad)
sbb
into
push
inc
loope
rcr
repnz
adc
leave
out
(bad)
jmp
leave
gs
jge
nop
push
sbb
adc
gs
jge
nop
push
sbb
xchg
mov
adc
call
fmul
xchg
in
push
adc
aad
adc
add
xchg
rcr
jb
inc
and
movs
sbb
sbb
ins
inc
gs
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
and
ret
dec
and
cld
xchg
dec
push
xchg
out
fwait
daa
je
push
daa
mov
sbb
gs
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
and
ret
dec
and
cld
xchg
sbb
out
fwait
daa
je
push
daa
mov
sbb
gs
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
and
ret
dec
and
cld
xchg
or
out
fwait
daa
je
push
daa
mov
sbb
gs
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
and
ret
dec
and
cld
xchg
ficomp
out
fwait
daa
je
push
daa
mov
sbb
gs
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
jl
stos
call
xchg
and
ret
dec
and
cld
xchg
ficomp
out
fwait
daa
je
push
daa
mov
sbb
movs
sti
pop
xchg
popf
daa
inc
rcr
sbb
mov
pusha
nop
fisub
mov
pop
fstp
repnz
nop
pushf
fisub
mov
fcomp
sbb
mov
adc
sahf
and
fcomp
xor
arpl
call
pop
int3
call
mov
dec
mov
rcr
pusha
jno
shr
jmp
adc
mov
fisubr
or
daa
adc
sub
dec
mov
and
cwde
adc
shr
jl
stos
call
rcr
fcomp
xor
arpl
call
sbb
mov
rcr
sahf
and
adc
pop
int3
push
sbb
aad
pop
jb
sub
sub
mov
mov
imul
or
daa
in
sbb
adc
mov
jl
add
daa
add
aam
jmp
adc
lea
adc
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
aam
dec
jnp
in
push
adc
aad
adc
add
xchg
rcr
jb
inc
and
movs
sbb
jge
movs
jle
sub
int3
adc
jae
lea
add
lods
imul
gs
jge
push
push
sbb
push
mov
xor
nop
push
sbb
adc
gs
jge
nop
push
sbb
xchg
mov
loopne
xchg
outs
pop
cdq
xchg
lods
xchg
jl
fcomp
bound
sbb
mov
imul
or
daa
in
sbb
adc
mov
jl
add
daa
add
aam
jmp
adc
lea
adc
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
aam
dec
jnp
in
adc
adc
add
xchg
rcr
jb
inc
and
movs
sbb
jge
movs
jle
sub
into
adc
jae
lea
add
mov
xor
out
(bad)
jmp
mov
leave
addr16
(bad)
sub
pop
add
in
leave
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
test
sub
mov
sbb
pop
aad
xchg
jno
rol
nop
mov
add
sub
jno
adc
out
xchg
adc
int3
push
sbb
aad
dec
jno
(bad)
sbb
into
adc
out
xchg
adc
int3
call
sbb
push
inc
loopne
xor
in
sub
daa
adc
mov
jl
sti
repz
and
mov
sbb
sbb
sbb
adc
adc
pop
aas
movs
mov
daa
adc
retf
sbb
arpl
call
sbb
mov
mov
fisub
stos
sahf
and
fcomp
xor
arpl
call
sbb
mov
rcr
sahf
and
adc
pop
int3
push
sbb
aad
or
in
sub
xchg
adc
mov
mov
imul
or
daa
in
sbb
adc
mov
jl
add
daa
add
aam
jmp
adc
lea
adc
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
aam
dec
jnp
in
xchg
adc
and
add
xchg
rcr
jb
inc
and
movs
sbb
jge
movs
jle
sub
retf
adc
mov
iret
push
in
lea
add
xchg
repnz
in
leave
out
(bad)
jmp
repnz
addr16
(bad)
sub
pop
add
in
leave
daa
pop
(bad)
sub
pop
add
and
(bad)
cmps
jle
adc
mov
sub
mov
sbb
jno
xchg
inc
loop
repz
punpckhwd
xchg
test
(bad)
daa
in
sbb
adc
mov
jl
add
daa
add
aam
jmp
adc
lea
adc
mov
jl
add
daa
add
aam
adc
adc
lea
imul
daa
aam
dec
jnp
in
push
adc
and
add
xchg
rcr
jb
inc
and
movs
sbb
jge
movs
jle
sub
nop
and
jno
adc
jmp
adc
mov
movs
sbb
cmp
stos
cmps
daa
mov
sbb
mov
mov
sbb
mov
jnp
xchg
out
fwait
daa
je
jmp
mov
pop
fcomp
xor
inc
and
mov
sbb
mov
sbb
mov
(bad)
xchg
adc
xchg
and
mov
sbb
sti
into
jae
into
pushf
xchg
or
fwait
into
and
lahf
xor
jb
push
fwait
into
jae
ret
sub
push
push
add
mov
mov
jns
into
test
ja
dec
dec
ja
dec
fistp
dec
push
test
ja
dec
dec
ja
dec
iret
jbe
outs
aaa
or
bnd
fdiv
inc
mov
push
call
inc
xor
ret
inc
test
mov
add
test
ja
dec
iret
jnp
cdq
push
repnz
dec
inc
test
ja
dec
dec
ja
dec
pcmpeqd
jg
mov
dec
jp
test
ja
dec
dec
ja
dec
dec
ja
dec
push
fdiv
lock
test
ja
dec
dec
ja
dec
push
fdiv
lock
js
mov
inc
mov
pcmpeqd
iret
inc
mov
dec
mov
(bad)
dec
dec
jge
dec
iret
imul
addr16
je
ja
dec
dec
ja
dec
dec
jbe
jecxz
lods
test
jno
imul
push
hlt
ret
mov
gs
dec
pop
jle
jmp
dec
ja
dec
das
jbe
leave
mov
(bad)
dec
dec
ja
dec
dec
xlat
in
inc
ja
dec
dec
ja
dec
iret
jo
dec
jmp
xchg
cld
jbe
mov
inc
fdiv
xor
dec
ja
dec
dec
ja
dec
(bad)
jno
mov
dec
ja
dec
dec
ja
dec
pop
jae
dec
push
(bad)
fadd
inc
push
test
ja
dec
dec
ja
dec
out
jb
dec
xchg
icebp
sar
dec
mov
dec
dec
ja
dec
dec
ja
dec
scas
ja
leave
mov
(bad)
dec
dec
ja
dec
dec
ja
dec
aas
fsubr
and
fldcw
jbe
cld
sbb
inc
test
ja
dec
aas
jle
sbb
dec
test
ja
dec
dec
ja
dec
lahf
jle
leave
dec
jbe
cld
out
add
jle
mov
adc
jne
dec
ja
dec
dec
ja
dec
iret
jbe
cld
dec
cmps
jne
dec
ja
dec
dec
ja
dec
dec
jge
dec
iret
imul
addr16
je
ja
dec
iret
jbe
jecxz
adc
cwde
dec
mov
dec
iret
jbe
dec
(bad)
xchg
sbb
ja
dec
dec
ja
dec
jg
mov
inc
fimul
(bad)
xor
fucomip
xor
fldcw
jbe
sub
inc
inc
test
ja
dec
dec
ja
dec
pop
repnz
inc
dec
mov
jp
sbb
mov
add
mov
dec
ja
dec
jg
mov
jo
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
(bad)
lock
test
(bad)
ja
dec
dec
ja
dec
(bad)
pop
pop
xor
sbb
mov
(bad)
repz
jb
shr
arpl
mov
out
mov
loope
cdq
pop
stc
jo
jle
mov
sub
out
in
pusha
jae
shl
push
mov
jbe
mov
clc
jmp
in
sub
xchg
xor
jo
cmc
rol
adc
mov
xor
sbb
xchg
sub
xor
loop
int3
inc
jle
sbb
pop
inc
mov
call
dec
test
jns
outs
inc
xor
iret
js
loope
int
push
mov
ret
ror
mov
test
retf
inc
mov
call
out
test
arpl
div
scas
jmp
out
pop
push
xor
mov
sbb
(bad)
adc
data16
sbb
out
mov
or
jb
daa
iret
sub
aas
cmp
addr16
js
fdivr
inc
adc
jecxz
jl
out
or
fidiv
nop
mov
js
or
ja
cwde
jmp
mov
xchg
ja
pop
jmp
imul
jae
dec
in
std
pop
jns
pop
fstp
jg
jae
jg
add
jle
jbe
aas
fwait
jp
jg
inc
retf
hlt
mov
shl
mov
test
out
jae
jle
jae
aas
fwait
jp
jg
push
retf
jl
inc
mov
lea
jg
xor
jg
jb
jg
jae
jg
ret
retf
je
jo
pop
fstp
jg
jae
jg
ror
jb
jae
iret
out
jae
jl
adc
xchg
ror
jle
inc
add
out
retf
jge
inc
icebp
mov
out
enter
popa
ss
ja
dec
out
jae
jg
jae
jg
add
je
jo
pop
fstp
jg
jae
jg
ror
jle
inc
add
jae
jg
jae
jg
mov
push
push
jno
dec
out
jae
jg
jae
jle
push
popa
ss
je
dec
out
jae
jp
mov
adc
pop
ret
dec
loop
iret
adc
inc
mov
adc
je
mov
inc
xor
mov
push
idiv
xor
mov
dec
dec
ja
dec
dec
ja
dec
fbstp
cld
lock
mov
movs
(bad)
dec
ja
dec
dec
ja
dec
pop
pop
pop
jae
adc
xor
jo
cmc
int3
xor
pusha
into
add
pop
mov
mov
cs
fild
push
fsubr
outs
adc
cmps
aaa
stos
dec
cli
mov
enter
cmps
mov
jl
push
inc
call
jge
sub
push
shr
es
mov
fimul
sbb
stos
mov
fdiv
iret
pop
repnz
jo
sbb
mov
push
dec
add
xchg
repnz
lds
scas
dec
pop
pop
in
enter
test
enter
ds
mov
test
adc
inc
data16
cmp
ret
rcr
cs
mov
cwde
int
shl
jbe
xor
iret
dec
cli
xchg
inc
lds
cmp
mov
sahf
bswap
sub
rcr
lock
int
stos
cmp
test
mov
mov
dec
jle
jae
into
mov
(bad)
stc
xor
mov
icebp
lods
inc
dec
push
shl
sbb
int3
dec
fiadd
xor
addr16
dec
jae
imul
test
test
shl
jp
xchg
xor
mov
sub
iret
cmp
adc
ds
outs
fisub
mov
pop
inc
sbb
test
nop
fld
and
mov
test
nop
(bad)
sbb
mov
fwait
sbb
(bad)
xchg
loopne
jmp
and
fld
bound
fsubr
dec
popf
fld
and
fld
nop
xchg
mov
test
xchg
xchg
jmp
sub
fsub
push
cdq
fld
and
jmp
and
shl
sub
fisubr
sbb
fld
and
fld
and
fisubr
add
jmp
and
fsubr
dec
popf
fld
and
shl
dec
lods
mov
mov
stos
and
lock
or
ins
mov
xchg
movs
rcl
cmps
jne
jns
or
cmp
dec
inc
xor
dec
dec
ja
dec
dec
jb
dec
fistp
cmp
test
sub
sbb
mov
mov
dec
out
(bad)
dec
dec
ja
dec
dec
jbe
dec
das
call
mov
cmps
xor
dec
dec
ja
dec
outs
jbe
dec
das
call
test
push
mov
add
pop
rol
inc
mov
hlt
arpl
pop
cld
jmp
xor
repz
aaa
cmps
xchg
pop
leave
xor
pop
call
jb
out
jo
(bad)
jns
xchg
shl
mov
addr16
dec
(bad)
fmul
jns
sbb
pop
dec
(bad)
nop
int
shl
mov
test
loop
js
mov
or
ja
in
lds
jo
repnz
push
jb
sbb
fld
inc
jmp
dec
ds
mov
sbb
jae
inc
div
jle
fst
mov
repnz
fwait
sbb
jecxz
sub
int
xchg
aad
fidivr
into
test
adc
jbe
cmp
xchg
std
addr16
call
loop
dec
adc
aaa
outs
aad
shr
cmc
cmp
jl
jns
outs
xchg
adc
hlt
iret
enter
(bad)
shl
pop
xchg
push
test
mov
sbb
xchg
adc
out
in
jp
(bad)
jo
(bad)
shr
dec
jmp
das
push
ins
(bad)
ds
jb
ja
xor
jb
mov
iret
in
sar
mov
ja
sub
adc
mov
sar
mov
in
enter
jne
or
aaa
xchg
push
mov
ins
sbb
in
ins
adc
xchg
push
mov
cmps
daa
xchg
mov
adc
and
push
outs
sbb
sbb
sub
and
inc
push
js
push
test
mov
add
addr16
cmc
jmp
call
mov
adc
daa
dec
adc
push
sbb
das
imul
stos
mov
inc
arpl
ficomp
adc
sub
daa
add
or
sub
xchg
(bad)
jle
imul
sub
icebp
(bad)
and
idiv
mov
push
popf
cmp
imul
and
xor
movs
daa
mov
push
sub
test
stos
mov
lods
lods
pop
mov
adc
sub
aaa
xor
imul
sub
xchg
test
test
mov
inc
push
sub
fiadd
or
test
add
push
shr
cwde
fsub
pop
mov
adc
popf
pop
sub
cmc
js
mov
inc
push
js
fbld
and
in
sub
sbb
sbb
sub
jno
das
sub
in
sub
sbb
sbb
sub
adc
inc
push
and
adc
bound
mov
jno
sub
in
sub
sbb
sbb
and
push
jle
push
sbb
and
out
sbb
adc
inc
jecxz
ficomp
adc
call
mov
adc
inc
shl
out
push
sbb
sub
adc
sub
add
sbb
sbb
sub
lds
and
adc
bound
mov
jno
sub
and
in
sub
sbb
sbb
sub
jno
sub
and
cmc
add
sbb
sbb
sub
adc
inc
and
push
sbb
sub
lds
and
adc
bound
mov
imul
jne
sbb
and
daa
cmp
sbb
sub
adc
rcl
mov
push
sbb
xchg
cld
pop
mov
and
sbb
rcl
push
lods
lods
pop
mov
adc
imul
aad
imul
xchg
(bad)
loopne
jb
pop
xchg
pushf
adc
and
sbb
lods
lods
pop
mov
adc
imul
adc
mov
fadd
inc
xchg
and
adc
bound
mov
adc
rcl
fsub
cmp
push
sbb
sub
adc
and
cmp
push
in
ins
adc
sub
jno
das
sub
in
sub
sbb
sbb
sub
jno
sub
and
xor
push
sbb
sub
adc
test
mov
or
mov
sub
adc
sub
sahf
cmp
repnz
dec
sub
adc
sub
popa
lea
or
push
sbb
sub
mov
(bad)
mov
imul
sub
adc
adc
imul
dec
lods
pop
mov
adc
fist
outs
sbb
sbb
and
cmp
push
in
ins
adc
sub
and
add
dec
jecxz
xor
mov
sub
adc
xchg
je
mov
lods
lods
pop
mov
adc
and
push
sbb
sub
add
jecxz
call
push
push
cmps
mov
sbb
sub
lgs
cs
push
push
fs
jmp
pushf
in
mov
adc
sub
ins
adc
sub
adc
sub
sahf
cmp
push
dec
sub
adc
sub
adc
adc
push
dec
lods
lods
pop
mov
adc
sub
push
sbb
jl
sbb
sub
push
xchg
or
inc
push
fadd
push
add
aam
push
js
in
mov
(bad)
fcomp
mov
push
cmp
jb
(bad)
shl
out
cmp
mov
je
sbb
jo
dec
or
jbe
adc
mov
test
ja
dec
das
jp
mov
dec
dec
ja
dec
dec
ja
dec
fistp
jbe
push
jle
cmc
mov
je
mov
(bad)
dec
ja
dec
dec
ja
dec
(bad)
jl
mov
sbb
jbe
dec
mov
ror
sbb
inc
mov
dec
ja
dec
(bad)
jl
mov
dec
ja
dec
dec
ja
dec
outs
out
adc
mov
mov
dec
pop
xor
dec
dec
jbe
dec
das
call
jno
(bad)
hlt
lock
mov
dec
mov
out
mov
inc
ja
dec
dec
ja
dec
jg
mov
je
ja
dec
fistp
jbe
push
jle
cmc
mov
je
icebp
(bad)
ja
dec
dec
ja
dec
(bad)
jl
xor
sbb
jbe
dec
mov
into
mov
inc
sub
adc
inc
mov
dec
ja
dec
dec
je
dec
jg
jne
inc
ja
dec
dec
ja
dec
outs
out
adc
mov
mov
dec
pop
xor
dec
dec
jb
dec
mov
adc
sar
(bad)
mov
cmps
std
(bad)
rcr
into
icebp
movs
rcr
iret
dec
icebp
inc
outs
into
xor
mov
into
jl
xchg
dec
leave
cmc
xchg
jmp
xor
test
mov
mov
clc
pop
adc
cmps
lock
fisubr
jbe
test
jle
das
jbe
cld
jl
inc
cmp
xchg
hlt
iret
dec
jbe
ds
mov
inc
cmps
xor
add
xchg
and
add
movs
xor
out
in
jb
xor
ss
inc
and
test
adc
sub
ss
cmp
jns
sbb
ins
inc
mov
cwde
inc
xchg
pop
push
and
clc
and
inc
xchg
out
nop
ror
ror
xor
fdivr
out
mov
sbb
cmp
mov
jle
inc
and
adc
shr
(bad)
mov
std
rcr
into
xor
xor
jle
pop
jp
in
jg
inc
xor
jmp
(bad)
mov
mov
jo
stc
jno
es
sub
fwait
push
mov
(bad)
sbb
inc
mov
daa
iret
js
dec
js
inc
daa
dec
out
stos
imul
stc
mov
sti
inc
adc
es
inc
sbb
xor
iret
lods
inc
jmp
mov
pop
stos
add
rcr
pop
add
push
mov
stos
add
rcl
fcom
stos
cmp
movs
adc
pop
jmp
test
arpl
sub
cmp
arpl
fisub
cmp
mov
push
cmp
inc
cwde
pop
nop
movs
xor
movs
inc
mov
arpl
sub
cmp
fisubr
rcl
pop
loopne
cmp
push
pop
and
cmp
arpl
sub
cmp
mov
push
out
mov
xor
arpl
sub
cmp
push
arpl
and
cmp
gs
cmp
push
cwde
pop
nop
movs
cmp
(bad)
add
arpl
sub
cmp
pop
jns
call
dec
stos
jnp
adc
mov
push
inc
or
adc
aad
fsubr
cmp
(bad)
jns
mov
and
mov
or
push
mov
push
cld
(bad)
rcl
mov
addr16
push
mov
push
sub
(bad)
out
dec
jl
or
dec
inc
mov
icebp
addr16
imul
xchg
dec
fld
test
cmc
inc
inc
add
pop
add
push
leave
mov
fidivr
inc
add
in
adc
je
dec
test
jne
cmp
out
mov
in
icebp
lods
inc
pop
push
jl
into
inc
test
popa
repnz
fdiv
das
inc
cli
icebp
pop
loop
and
mov
aas
jbe
mov
int3
sub
and
and
jle
outs
jbe
mov
dec
daa
pop
js
add
test
xor
jns
iret
enter
in
mov
xchg
sti
push
(bad)
ja
sbb
xor
ror
sbb
es
mov
(bad)
int
ja
cmp
sub
frstor
jo
outs
xor
shl
(bad)
inc
xchg
hlt
sbb
mov
call
enter
xor
jmp
mov
enter
adc
stc
mov
mov
mov
add
jns
push
sar
sbb
xor
mov
mov
jae
cmp
xchg
cli
mov
mov
jb
jle
in
mov
lahf
pop
xor
imul
and
mov
push
xor
repnz
xor
push
xor
add
add
int
or
int
fld
sar
or
or
sub
mov
mov
cmp
ud2
int
leave
or
xor
mov
or
mov
and
cmp
add
or
or
cmp
lock
std
xor
or
or
mov
xor
rol
mov
arpl
les
add
or
or
retf
or
cmp
mov
mov
inc
pop
add
int
or
int
or
retf
or
xor
xor
add
jb
and
retf
lods
xor
or
or
fldenv
add
cmp
xor
xor
xor
les
mov
addr16
shl
or
int
or
int
cmp
sub
add
lods
xor
or
or
cmp
fs
add
std
add
or
or
fild
std
add
or
or
dec
push
rcr
popf
xchg
add
int
or
ret
mov
dec
mov
ror
imul
popf
xor
or
or
sub
and
or
int
mov
lds
add
int
or
int
or
int
mov
ret
add
test
arpl
test
ret
add
test
(bad)
fiadd
xchg
std
les
mov
addr16
test
cmp
or
imul
xor
cmp
or
dec
push
ror
cmp
add
or
or
imul
add
xor
std
xor
or
or
or
int3
or
ud2
int
cmp
ror
int
xor
push
sub
xor
push
fcom
xchg
add
cmp
and
xor
add
adc
into
ins
sbb
fild
je
pusha
cld
test
shl
shl
add
(bad)
clc
and
adc
les
mov
mov
call
sbb
mov
fld
mov
jns
push
pop
inc
jp
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
outs
mov
inc
dec
mov
dec
sub
jbe
sub
jbe
mov
dec
mov
dec
test
lock
dec
inc
mov
add
dec
dec
ja
dec
dec
ja
dec
pop
jp
mov
jbe
pop
imul
mov
jb
fadd
bound
mov
js
les
push
mov
xor
fild
mov
mov
sbb
enter
xchg
sbb
das
jmp
popa
inc
outs
mov
fwait
mov
aad
scas
test
dec
fcom
xor
dec
mov
mov
jle
ss
call
in
jne
dec
xor
in
xor
push
xor
clc
inc
xor
ja
cmp
xor
mov
out
in
mov
test
adc
push
mov
clc
jmp
mov
and
ins
inc
ret
sub
inc
mov
mov
(bad)
stos
data16
je
cs
retf
dec
adc
shr
lods
dec
into
push
pop
xchg
add
stos
pop
adc
daa
sbb
out
add
int
mov
outs
push
fst
into
or
jae
je
sbb
sub
xchg
sub
es
mov
and
inc
cmp
dec
sbb
fidiv
and
jge
ins
or
mov
outs
sahf
shl
or
push
adc
push
(bad)
add
sub
retf
addr16
inc
xor
in
xchg
inc
mov
add
jge
pop
xchg
js
pop
jbe
out
arpl
pop
xor
adc
push
inc
inc
ja
adc
cmp
xor
ja
arpl
aaa
pop
mov
mov
pop
(bad)
jp
arpl
mov
inc
das
data16
dec
add
div
dec
ja
dec
outs
jbe
jns
call
push
dec
jl
into
push
mov
or
and
push
xchg
adc
xor
mov
fimul
sbb
mov
ins
(bad)
rol
(bad)
jmp
dec
imul
push
or
clc
add
jl
inc
dec
cmp
add
aaa
retf
in
cmp
js
sbb
int
mov
int3
in
add
xor
sub
dec
mov
(bad)
dec
push
xor
jns
in
js
dec
mov
retf
ds
icebp
inc
adc
icebp
mov
push
pop
cmps
ret
fcom
arpl
sbb
out
inc
mov
adc
inc
test
into
add
iret
sbb
sub
aam
jns
sbb
outs
inc
add
mov
xchg
aaa
cli
jae
in
ja
inc
es
mov
loopne
in
and
lock
and
clc
sub
or
je
adc
xor
loop
rcl
mov
sahf
jge
loop
adc
or
shr
mov
ret
push
lahf
push
inc
sub
hlt
mov
xchg
push
xor
inc
div
dec
or
ret
loopne
mov
(bad)
ror
popa
sti
dec
jle
sti
inc
push
xor
cs
push
pop
mov
push
inc
icebp
outs
into
xchg
fs
push
movs
(bad)
mov
adc
lock
nop
jge
movs
xchg
repnz
ret
addr16
rcr
leave
cld
mov
(bad)
leave
fsubr
dec
mov
mov
ror
lahf
jmp
hlt
cmc
shr
fwait
jb
imul
jg
movs
hlt
test
mov
dec
mov
inc
sub
pop
mov
dec
out
(bad)
dec
(bad)
mov
mov
jo
inc
mov
dec
ja
dec
dec
ja
dec
mov
mov
(bad)
dec
das
jp
or
mov
inc
mov
dec
ja
dec
dec
ja
dec
scas
jge
data16
call
test
xor
pop
pop
scas
adc
jecxz
jb
aas
imul
outs
mov
jl
(bad)
dec
cmp
xor
int
loope
stc
adc
cwde
push
das
jp
and
pusha
es
jns
xchg
fidivr
sbb
inc
ds
mov
call
push
fiadd
xchg
popa
shl
mov
or
sub
loop
add
test
adc
mov
ja
sbb
fadd
inc
mov
ret
lock
lods
dec
xor
sub
jae
cdq
mov
retf
push
repz
dec
in
in
push
leave
and
(bad)
jb
js
mov
imul
out
enter
cmps
xor
(bad)
(bad)
shl
xchg
mov
cmp
into
add
cmp
arpl
sub
nop
add
in
xor
(bad)
sbb
fcom
dec
pop
test
popf
adc
mov
mov
stos
and
pop
rol
ror
div
stc
dec
push
loopne
mov
(bad)
jns
repnz
shl
xchg
mov
sahf
add
call
mov
mov
cmp
push
pop
outs
push
sbb
mov
push
fdivr
fdivr
sar
mov
jne
push
sar
inc
inc
xchg
inc
arpl
cmp
fdivr
fdivr
jl
push
push
fdivr
fdivr
or
fwait
xor
xchg
adc
jge
add
popa
mov
lods
or
cmp
lds
vprotd
dec
pop
mov
dec
ja
dec
jg
mov
call
and
sbb
int
jl
into
push
mov
or
pushf
dec
(bad)
icebp
popf
test
jmp
xchg
and
pop
clc
jns
xchg
hlt
shl
call
nop
sub
push
(bad)
in
push
adc
jbe
mov
ficomp
dec
mov
mov
cmc
cmp
sahf
repnz
inc
call
fcom
jo
inc
xor
push
imul
neg
inc
mov
xchg
mov
push
or
(bad)
jmp
cli
jae
jp
sbb
pop
inc
mov
push
sub
jmp
add
scas
jo
and
dec
jmp
js
(bad)
xor
into
pop
jl
into
inc
xor
xor
add
(bad)
mov
int3
rcr
dec
and
stc
adc
dec
pushf
ret
test
adc
iret
js
dec
jae
inc
and
(bad)
jo
in
and
(bad)
inc
xchg
jno
mov
test
adc
push
(bad)
aaa
stos
fld
xor
jecxz
cmp
push
pop
jae
dec
mov
(bad)
jecxz
xchg
xor
xchg
ja
jmp
inc
adc
or
sbb
cli
or
lea
mov
ins
lods
pop
mov
popf
adc
fsub
xchg
mov
pop
test
outs
scas
adc
mov
sti
ins
jmp
mov
(bad)
aaa
sub
ret
and
mov
xor
pop
and
mov
jg
and
jg
or
sub
sbb
xor
stos
sub
mov
adc
or
mov
pop
lds
ja
dec
dec
ja
dec
push
dec
mov
icebp
mov
sbb
sub
dec
test
ja
dec
dec
ja
dec
dec
not
mov
ja
dec
aas
jg
pop
inc
ja
dec
dec
ja
dec
dec
ja
dec
das
jp
mov
dec
dec
ja
dec
(bad)
jle
fcom
jne
and
(bad)
jo
call
jbe
call
in
je
scas
aam
jbe
pushf
cmps
dec
cmp
(bad)
cmc
adc
push
adc
dec
stc
mov
leave
jns
test
push
mov
fild
rol
jmp
pushf
sub
mov
fild
adc
inc
xchg
mov
sbb
xor
leave
shr
jno
jns
test
jle
outs
jbe
dec
jp
inc
and
dec
call
jns
inc
cmp
add
or
mov
inc
sbb
iret
sub
and
push
xchg
cld
out
enter
test
fdiv
mov
sbb
push
xor
icebp
ror
sar
(bad)
out
inc
mov
add
daa
jecxz
add
fidiv
and
cld
mov
mov
ja
cmp
arpl
mov
sbb
das
inc
xchg
int
or
jns
xchg
mov
fidivr
dec
ds
cmp
fdiv
and
cmp
loopne
sbb
xchg
pop
sti
sar
dec
pop
jg
clc
rcl
(bad)
xor
fmul
ror
add
leave
xchg
call
shl
cmp
repz
out
jle
rcl
mov
test
jbe
rol
pop
outs
xchg
adc
inc
mov
outs
sahf
add
jno
outs
out
loope
stos
mov
arpl
loope
or
push
push
popf
cs
cs
retf
jae
adc
inc
cmc
adc
cs
test
sahf
call
cs
xchg
sbb
fdivr
leave
pushf
cs
fcom
sbb
cdq
mov
sbb
sbb
inc
inc
and
dec
das
jnp
leave
dec
xchg
dec
pop
call
jp
test
ja
dec
dec
ja
dec
pop
jp
or
mov
inc
mov
dec
ja
dec
(bad)
mov
jo
inc
test
ja
dec
dec
ja
dec
jg
in
mov
inc
test
ja
dec
dec
ja
dec
(bad)
mov
jno
inc
test
ja
dec
dec
ja
dec
jg
in
xor
inc
test
ja
dec
(bad)
jg
sbb
dec
test
ja
dec
dec
ja
dec
pop
jp
or
mov
inc
mov
dec
ja
dec
out
jne
jbe
addr16
inc
ja
dec
dec
ja
dec
pop
je
dec
jg
movs
and
ja
dec
dec
ja
dec
das
jle
or
lods
and
dec
test
ja
dec
dec
ja
dec
pop
cmp
loopne
sbb
inc
dec
ja
dec
pop
jp
leave
dec
pop
mov
dec
ja
dec
dec
je
dec
jg
movs
and
ja
dec
dec
ja
dec
dec
ja
dec
pop
cmp
and
mov
inc
test
ja
dec
dec
ja
dec
scas
jge
imul
sub
imul
je
ficom
(bad)
and
xor
mov
scas
or
dec
inc
mov
inc
xor
call
aas
dec
and
fild
mov
cdq
fs
mov
add
push
movs
(bad)
fcom
jae
jp
sbb
mov
shr
pop
outs
xchg
(bad)
cmp
into
add
jb
sbb
lock
inc
dec
push
xor
rcl
mov
xor
add
cmp
sti
mov
jo
(bad)
ror
clc
pop
leave
add
leave
nop
inc
inc
mov
push
cmp
push
xchg
test
test
fisub
dec
push
lock
push
pop
stc
adc
lds
outs
mov
aaa
popf
jbe
cmp
inc
inc
xor
out
ret
mov
push
shr
fcmovnbe
mov
ja
leave
out
int
call
int
(bad)
jae
mov
sub
lahf
fidiv
mov
xchg
test
xchg
xchg
mov
sbb
mov
sbb
add
(bad)
fcomi
and
clc
outs
sub
fmul
scas
sbb
das
retf
popa
sar
popa
lock
jmp
sar
and
pusha
add
jo
dec
cli
pusha
xor
rcr
dec
cli
pusha
cmp
or
je
add
rcl
fdiv
jne
jns
xor
dec
dec
ja
dec
(bad)
jle
jg
push
ins
das
cmps
dec
mov
scas
jns
jb
sub
ins
mov
add
pop
(bad)
jecxz
mov
enter
es
pushf
fldcw
cmp
sub
mov
inc
xor
xchg
or
xchg
jg
int
into
sar
xor
push
adc
mov
mov
cmc
test
adc
jns
cmp
js
mov
and
sub
movs
push
pop
jb
xor
jae
cmp
(bad)
inc
popf
adc
jo
cmp
xchg
shl
mov
inc
dec
adc
inc
fdiv
adc
or
sbb
inc
int3
aad
dec
or
in
xchg
mov
mov
xlat
in
dec
fist
ret
repnz
dec
sahf
add
sub
into
add
pop
(bad)
fist
js
lods
ja
dec
cmp
in
loopne
dec
dec
push
xor
adc
xor
jo
out
jbe
sbb
sbb
int
mov
fcomp
or
je
mov
outs
xchg
aaa
outs
lods
hlt
jecxz
fwait
aad
jle
into
xchg
xchg
jl
dec
push
xor
lods
(bad)
leave
add
cmp
cmp
push
mov
outs
mov
pop
mov
(bad)
jne
fucomip
shl
dec
sub
ins
or
test
jae
out
cs
mov
(bad)
adc
pop
xchg
aaa
mov
push
mov
push
stos
mov
push
pop
mov
sub
sbb
ja
sub
in
test
xchg
int3
jae
cmp
and
test
jae
test
sbb
pop
frstor
adc
mov
vpshad
inc
mov
jg
mov
jg
movs
and
ja
dec
dec
ja
dec
dec
ja
dec
dec
(bad)
cmc
inc
dec
ja
dec
scas
jge
leave
jle
movs
and
ja
dec
dec
ja
dec
dec
ja
dec
mov
mov
daa
shl
and
jl
mov
sbb
imul
push
inc
jl
hlt
dec
jl
into
push
mov
add
call
and
jmp
pop
mov
rcr
dec
sub
dec
lahf
pop
imul
add
inc
fldcw
inc
xchg
imul
fwait
inc
cli
arpl
jo
out
xor
(bad)
jns
test
jne
cmp
mov
ror
jo
ds
mov
int3
frstor
xchg
in
je
inc
aas
(bad)
mov
repz
je
mov
gs
mov
dec
adc
ja
jne
arpl
sar
ins
ds
ret
adc
inc
add
dec
loop
sbb
cs
mov
(bad)
dec
inc
xchg
inc
mov
push
(bad)
mov
mov
fsub
out
sub
cmps
jns
outs
(bad)
lock
out
lods
sbb
int
test
and
(bad)
pop
mov
mov
lock
add
mov
jp
sahf
and
clc
std
shr
xchg
add
sbb
and
dec
(bad)
nop
adc
(bad)
sar
outs
inc
push
jl
(bad)
xchg
movs
sub
in
or
cmp
inc
(bad)
in
aaa
lods
aam
lods
lock
std
rcr
std
rcr
hlt
ret
pushf
mov
jecxz
mov
xor
idiv
shr
cmc
mov
dec
not
cmps
xor
fcomip
call
(bad)
jbe
sub
pop
xor
pop
inc
inc
test
ja
dec
dec
ja
dec
mov
mov
test
ja
dec
outs
jae
das
test
je
sbb
jbe
fdiv
test
ja
dec
dec
ja
dec
(bad)
mov
mov
jo
inc
mov
dec
ja
dec
dec
ja
dec
outs
jae
das
jbe
aam
inc
pop
pop
jae
sbb
xor
jo
cli
retf
dec
adc
push
ret
into
jns
adc
ins
into
cdq
dec
stc
push
adc
push
mov
outs
push
popa
inc
pop
nop
pop
scas
pop
push
popa
and
movs
loope
pop
mov
scas
test
mov
aam
xor
or
mov
dec
or
jae
or
and
ror
adc
sub
call
int
mov
fst
loop
jle
dec
js
dec
sbb
int
xchg
cmps
cmp
sbb
(bad)
jb
mov
cld
out
call
push
xchg
imul
jg
inc
cmp
push
in
ret
inc
ret
scas
mov
call
int
cli
loope
fidiv
inc
pop
add
sti
in
cld
dec
dec
push
xor
push
fist
lods
ins
inc
mov
int
push
fidivr
sbb
mov
jns
das
inc
pop
daa
fwait
mov
iret
clc
loopne
aas
inc
out
dec
xchg
(bad)
(bad)
mov
das
(bad)
sbb
mov
movs
dec
xchg
je
leave
jne
ds
xchg
xchg
sbb
cmp
sub
loopne
mov
(bad)
jns
mov
and
cmp
add
in
adc
(bad)
fmul
jmp
retf
sub
iret
int
ds
inc
popf
pusha
sbb
imul
gs
dec
repz
jno
add
bound
jno
add
ins
add
lahf
pop
add
lds
sbb
ror
nop
in
jbe
shl
test
xor
jge
jne
sub
push
jp
mov
dec
iret
jo
dec
dec
(bad)
xor
into
shl
dec
inc
ret
pop
push
into
shl
jns
movs
and
dec
pop
jecxz
push
test
adc
add
ja
dec
dec
ja
dec
dec
ja
dec
dec
mul
dec
dec
ja
dec
pop
jle
js
dec
mov
jno
pop
inc
dec
dec
ja
dec
dec
ja
dec
scas
pusha
add
dec
ja
dec
outs
js
imul
fdiv
dec
xchg
add
dec
dec
ja
dec
scas
jp
leave
in
jae
outs
push
jg
sub
pushf
jb
dec
jl
into
push
mov
add
mov
inc
xchg
dec
imul
in
jnp
dec
and
sub
cmp
push
jle
adc
xchg
pop
fxam
pop
in
popa
out
push
push
dec
rcl
sbb
ins
mov
imul
je
fdiv
ds
mov
cmp
stos
cld
add
sbb
outs
inc
mov
enter
(bad)
adc
jo
mov
dec
sbb
pop
dec
add
inc
adc
icebp
sbb
ficom
pop
xchg
mov
push
ror
adc
test
sbb
jbe
sbb
pop
inc
mov
jge
dec
test
and
imul
ror
stc
sub
sbb
je
inc
pop
jne
loope
aam
test
int
fnstenv
mov
call
ds
mov
call
xchg
xor
sbb
jl
mov
cwde
cmc
arpl
(bad)
sbb
loop
and
mov
(bad)
cdq
xlat
xchg
mov
fucom
mov
test
test
jae
js
sbb
pop
dec
mov
int
std
(bad)
leave
and
stc
in
mov
(bad)
(bad)
test
movs
mov
cdq
push
mov
sti
repz
cwde
mov
movs
and
xor
fs
retf
je
not
sbb
fstp
int
sub
imul
sub
shl
not
mov
lods
cs
arpl
sub
leave
jle
test
mov
ss
repz
sahf
jl
dec
inc
test
ja
dec
fistp
dec
mov
div
dec
ja
dec
dec
ja
dec
das
jns
leave
dec
(bad)
mov
dec
ja
dec
pop
js
jecxz
jns
rcl
sbb
xchg
pop
jbe
mov
out
aam
mov
mov
outs
jbe
dec
das
call
ret
xor
push
mov
pop
cmp
mov
xor
outs
into
loope
push
stc
push
mov
push
jno
pusha
push
inc
xor
jns
lods
jnp
dec
es
pop
loope
iret
ins
cmps
ret
enter
and
inc
inc
fprem1
test
pop
data16
mov
mov
(bad)
jne
ds
repnz
jmp
int
mov
imul
inc
into
enter
xchg
adc
cmps
jns
das
fnstenv
fwait
mov
out
xchg
aaa
jle
div
inc
push
and
out
mov
push
aam
jge
xor
fadd
sbb
lock
leave
inc
bound
test
ffree
fidiv
ja
add
aas
retf
push
sub
iret
sub
outs
not
push
jns
sub
dec
aas
sti
push
ret
adc
sbb
add
in
dec
out
and
mov
mov
adc
xchg
mov
fmul
add
jbe
jecxz
xor
dec
aad
or
int
dec
(bad)
bound
int
add
cdq
push
mov
int
ins
mov
adc
xor
mov
movs
sti
cli
pop
stos
mov
ja
cli
jne
pop
std
scas
(bad)
mov
sub
retf
dec
cwde
jns
dec
clc
jo
or
jo
and
mov
data16
push
cmps
adc
mov
iret
pop
sub
adc
cmc
jg
jne
stc
inc
cs
shl
dec
ja
dec
dec
ja
dec
out
pop
pop
mov
adc
sar
xchg
jo
cld
enter
and
push
mov
repz
(bad)
cmc
mov
sub
lock
jge
or
inc
inc
mov
icebp
ja
in
stc
lods
retf
pop
inc
xchg
pop
leave
lds
or
neg
push
in
into
shr
pop
and
stos
add
int3
inc
out
push
jl
fiadd
jo
adc
fisub
(bad)
xchg
xor
jo
jle
push
out
inc
mov
or
pop
and
in
in
inc
xchg
scas
xor
dec
ret
or
sbb
inc
cmp
jl
and
pushf
fimul
fadd
jo
shl
(bad)
repnz
popf
int
fidiv
sbb
inc
ror
nop
dec
rol
ror
push
xor
int
fdiv
mov
shr
pop
sub
dec
outs
pop
and
rcr
ror
lock
leave
ror
int3
retf
imul
je
enter
(bad)
shl
jmp
xor
mov
jae
imul
fild
outs
into
loope
in
pop
cmps
pop
pop
and
outs
sahf
jno
mov
or
out
push
ja
mov
lods
inc
jl
xor
fld
push
adc
push
adc
call
pop
ins
test
jmp
mov
mov
sub
dec
rcr
pop
dec
inc
and
fldcw
adc
or
pop
ins
test
push
adc
or
mov
or
repnz
dec
cmp
push
ins
mov
add
cs
fadd
or
dec
sbb
(bad)
loop
pusha
jge
jne
jns
xor
dec
xchg
jne
dec
ja
dec
dec
ja
dec
dec
jbe
dec
aas
(bad)
mov
xchg
(bad)
jns
cld
popa
test
mov
inc
inc
test
ja
dec
(bad)
jno
dec
(bad)
adc
stos
mov
inc
fbstp
inc
dec
xchg
and
sbb
sub
jne
dec
ja
dec
das
jle
les
jnp
xchg
add
loopne
xchg
jnp
sub
jae
lea
int3
mov
je
mov
xchg
test
inc
test
mov
jae
mov
add
mov
mov
dec
jae
cmc
jo
ja
dec
scas
ja
leave
mov
(bad)
dec
dec
ja
dec
jg
mov
and
mov
dec
jae
test
ja
dec
dec
ja
dec
push
dec
mov
daa
cmps
pop
pop
mov
jmp
inc
test
ja
dec
scas
not
mov
dec
jle
out
inc
inc
test
ja
dec
das
jns
outs
jbe
je
inc
not
mov
ja
dec
jg
mov
das
add
mov
dec
ja
dec
out
jo
dec
(bad)
push
inc
(bad)
pop
repnz
mov
mov
mov
push
mov
jbe
xchg
jo
sti
iret
push
lds
jae
cdq
jle
mov
sbb
xchg
in
pop
pop
mov
imul
rcl
adc
out
dec
xchg
inc
and
scas
test
xor
jno
xchg
jmp
in
inc
mov
push
cmp
in
jl
into
adc
mov
push
pushf
out
push
xor
ret
ror
push
mov
int
stos
jmp
jns
pop
mov
frstor
out
adc
jmp
jo
adc
mov
fst
inc
mov
out
or
loopne
push
test
(bad)
or
jb
ja
aam
add
xor
fs
cs
outs
push
pop
xor
cli
jmp
cs
mov
push
xchg
cs
cmp
sub
in
lock
js
cmp
fst
daa
pop
xchg
jae
dec
mov
xor
push
rol
mov
adc
mov
sbb
push
jle
jecxz
jmp
or
mul
cmps
out
cld
pop
cmp
stos
pop
push
jl
push
inc
(bad)
fld
(bad)
push
jno
xchg
cmp
ja
mov
jns
sub
dec
push
jmp
or
out
and
mov
push
jmp
repnz
push
lods
fidivr
jmp
ret
outs
push
test
push
jmp
xchg
dec
push
test
push
jmp
xor
ins
dec
mov
jg
dec
push
jmp
ret
call
mov
xlat
mov
add
push
jno
xchg
cmp
ja
shl
test
cmp
jbe
push
mov
idiv
xor
outs
test
xchg
xor
push
dec
cmc
cmp
inc
inc
or
mov
push
sahf
repnz
dec
cmp
ja
jno
jp
add
push
mov
xchg
xor
js
cmp
neg
cmp
jp
rcr
xchg
cmp
ja
jno
jbe
xor
ins
aad
outs
inc
cmc
pop
mov
fwait
in
(bad)
mov
push
pop
or
mov
mov
popf
outs
mov
mov
and
jle
ret
jmp
cmp
jns
dec
pop
(bad)
neg
xor
jbe
push
mov
jmp
clc
mov
out
pop
push
mov
(bad)
popa
mov
inc
sbb
push
mov
ret
mov
dec
not
mov
ja
dec
dec
ja
dec
scas
jnp
sub
imul
mov
dec
dec
cs
cdq
test
mov
adc
jbe
mov
dec
xor
mov
jns
and
sbb
arpl
imul
arpl
int3
dec
add
(bad)
adc
gs
not
push
outs
push
push
aam
mov
mov
test
stc
fcom
mov
jge
sbb
lods
dec
mov
in
in
mov
fisub
std
cmp
mov
or
ret
(bad)
hlt
nop
xor
cdq
out
inc
inc
popf
test
pop
jae
xchg
add
(bad)
movs
retf
sub
and
jecxz
adc
int
or
dec
mov
test
sbb
jbe
cmp
add
iret
enter
rcl
mov
out
and
paddw
(bad)
int
cmps
shr
call
int
cmps
xchg
jns
sbb
iret
dec
mov
int
xor
(bad)
adc
cmc
in
jp
xchg
pop
mov
adc
pop
inc
aad
loopne
push
popa
rol
(bad)
js
or
sbb
(bad)
jecxz
dec
dec
dec
cmp
cmc
sbb
dec
mov
(bad)
jns
ret
cmc
ret
dec
mov
jne
cmp
rol
jne
ds
rcl
xchg
enter
xchg
shl
jns
outs
data16
mov
xchg
dec
iret
push
jne
pop
or
xchg
dec
imul
cwde
pop
imul
jae
push
cmps
sar
pop
push
inc
test
inc
xchg
pop
mov
push
sub
inc
fs
rol
ins
shl
pop
mov
pop
daa
inc
and
aaa
inc
adc
test
sub
mov
dec
ret
bound
lds
fs
mov
out
je
pop
inc
fs
rol
shl
shl
mov
push
bound
pop
mov
pop
mov
pop
rcl
pop
xchg
pop
inc
fs
inc
fs
sahf
retf
push
gs
jle
inc
mov
mov
ins
(bad)
jnp
test
jbe
(bad)
push
outs
dec
ins
fbld
fiadd
and
xlat
shr
leave
dec
xor
pop
fwait
loopne
(bad)
jnp
gs
jnp
xchg
cmc
xchg
dec
clc
clc
bound
iret
adc
or
(bad)
ror
gs
jnp
gs
jl
push
push
jb
dec
(bad)
jne
adc
pop
push
mov
pop
gs
jnp
vmovd
xchg
or
jecxz
cld
mov
adc
daa
dec
fs
(bad)
jnp
(bad)
std
(bad)
iret
dec
fs
data16
dec
adc
hlt
addr16
dec
fs
(bad)
jnp
gs
jnp
(bad)
pop
push
inc
dec
fs
jecxz
mov
fcom
pusha
pop
(bad)
dec
fs
(bad)
jnp
gs
jnp
xchg
icebp
jp
add
jecxz
dec
sahf
xchg
mov
pop
(bad)
dec
fs
(bad)
jnp
gs
jl
cmc
js
push
test
add
(bad)
shr
ins
into
dec
push
gs
jnp
gs
jnp
adc
lock
lods
std
xchg
mov
pop
inc
dec
fs
(bad)
jnp
xchg
idiv
add
jecxz
cld
mov
adc
inc
dec
fs
(bad)
jnp
gs
jnp
gs
jno
and
mov
pop
gs
jge
add
mov
mov
ins
(bad)
jnp
gs
jnp
in
jb
cmc
push
mov
fwait
add
xor
inc
les
push
dec
les
pusha
or
mov
mov
int
dec
ss
(bad)
leave
sbb
mov
or
xchg
dec
scas
jnp
sub
imul
cmps
std
inc
outs
jle
mov
ds
dec
test
js
pop
xor
xor
sahf
and
outs
shufps
push
test
push
outs
xor
mov
dec
imul
jae
jns
cmp
xchg
fild
hlt
cld
pop
sub
je
test
sbb
test
loopne
inc
xor
(bad)
mov
dec
cmps
mov
jo
sbb
js
or
xor
in
loopne
fistp
(bad)
jo
dec
jmp
jbe
out
leave
dec
xor
jno
mov
sbb
mov
call
dec
xchg
jle
and
ror
jb
xlat
mov
retf
adc
mov
iret
int3
mov
in
ror
rcl
jns
sbb
sub
ror
(bad)
test
cmp
stos
icebp
jecxz
in
and
xchg
repz
ss
mov
test
sbb
out
sbb
outs
pop
jae
fidiv
adc
jmp
and
mov
(bad)
stc
loope
fistp
sahf
ret
jmp
enter
xchg
imul
sahf
mov
fstp
fistp
cmc
scas
stc
sub
pop
cwde
push
jne
xchg
fs
addr16
push
xchg
or
data16
aaa
test
cmc
pop
cwde
push
cmc
pop
xchg
push
aad
je
std
pop
push
xor
push
enter
cwde
push
adc
neg
push
cmc
pop
cwde
push
lds
xchg
mov
in
cdq
add
mov
inc
outs
int3
mov
scas
ins
sbb
mov
adc
popa
fcomip
neg
push
cmc
push
xchg
push
test
test
jmp
cmc
pop
cwde
push
jne
nop
push
cmc
mov
push
cmc
pop
cwde
push
mov
popf
push
lds
mov
sub
xchg
cld
pop
cwde
push
cmc
pop
cwde
push
lds
xchg
mov
cli
inc
push
push
mov
rcr
pop
or
pop
cwde
push
mov
xchg
push
xchg
push
push
cmp
push
jge
push
sub
fdivr
imul
push
push
inc
add
imul
and
sbb
call
js
jl
into
push
mov
cmovl
pop
mov
push
pop
(bad)
push
mov
inc
rcr
outs
push
jno
sub
pop
mov
pusha
aaa
or
fadd
jo
ds
mov
inc
xor
and
pop
fild
xchg
cld
mov
je
test
push
outs
test
push
ja
xor
cmp
xchg
mov
mov
(bad)
xor
mov
sub
iret
sbb
xor
cmps
push
add
inc
mov
dec
xchg
cmp
sub
xor
pop
dec
xor
sub
adc
jb
ja
and
adc
inc
mov
mov
xchg
sti
popa
int
dec
dec
sbb
pop
iret
mov
(bad)
sbb
lea
ror
sbb
xchg
sbb
cmps
xchg
cmp
movs
je
enter
push
mov
push
(bad)
inc
stos
cmp
in
mov
vprotd
inc
cli
mov
in
in
cmp
jo
loopne
xchg
xor
mov
call
or
(bad)
jg
arpl
mov
pop
jnp
loop
adc
sub
cdq
adc
not
ret
fadd
dec
and
loopne
daa
iret
sbb
add
leave
aad
push
fyl2x
xor
cmps
pop
mov
fistp
je
jecxz
aaa
inc
mov
xchg
cmp
add
and
inc
mov
xchg
cmp
add
xchg
or
or
(bad)
div
xchg
or
add
and
add
lods
and
mov
je
mov
stos
movs
imul
cmp
arpl
xor
pop
imul
add
sbb
add
xchg
or
jne
repz
push
movs
add
sbb
add
jecxz
cmp
add
xchg
or
inc
mov
xchg
cmp
add
jb
shl
imul
aas
mov
rcl
lea
fwait
or
add
jb
pminub
pop
clc
xor
jecxz
les
push
outs
fwait
lea
ficom
or
add
add
mov
mov
sti
cmps
and
in
xchg
cmp
mov
loope
daa
and
bound
fs
jecxz
or
add
push
or
and
les
mov
loope
fs
and
call
xchg
or
outs
fs
pop
mov
cdq
or
pop
(bad)
lahf
lods
add
ret
ficom
or
pminub
or
out
mov
outs
xor
mov
xchg
cmp
add
loop
or
lods
sub
mov
add
jecxz
xor
in
xor
inc
mov
mov
jecxz
xor
mov
lahf
pop
xor
xchg
or
or
jecxz
retf
mov
jmp
rcr
add
fwait
lods
(bad)
out
or
add
push
or
movs
les
lahf
or
add
push
add
in
stos
aam
ficomp
or
(bad)
fstp
xor
jae
std
add
and
or
mov
xor
push
(bad)
outs
and
gs
movs
add
sbb
add
repnz
add
movs
hlt
ret
mov
int3
outs
addr16
ins
repnz
or
loop
xchg
or
test
cmp
sbb
xor
jecxz
or
add
push
xchg
or
add
ror
pminsw
cmp
add
xchg
or
add
loope
cmps
mul
add
mov
fwait
or
add
xor
sub
or
dec
movs
icebp
gs
sbb
lahf
or
pop
fisub
cmp
add
xchg
or
cmp
or
lods
fild
sbb
push
or
mov
or
add
xchg
or
aaa
iret
cmp
sbb
mov
push
aaa
iret
fwait
pop
test
mul
add
xchg
or
pminub
or
add
repnz
cmp
cmp
add
xchg
or
dec
(bad)
scas
xor
jecxz
or
add
xchg
or
pop
addr16
cmp
add
ror
pminub
cmp
add
xchg
or
or
fwait
cmp
add
xchg
or
int
sub
jb
fwait
or
add
adc
push
nop
mov
or
mov
cmp
add
xchg
or
mov
call
fist
or
add
and
fist
or
add
and
fist
or
add
and
out
lahf
fld
ficom
or
ficom
or
pop
out
lahf
mov
add
xchg
or
pop
out
lahf
ins
add
push
or
repnz
mov
mov
xor
cmps
fwait
cmp
add
push
imul
sub
fwait
cmp
add
jb
pminub
push
call
fwait
or
add
repnz
add
and
fwait
or
add
add
sti
cmp
xor
out
sbb
xor
mov
fwait
or
add
adc
ficom
or
add
jb
imul
int
cwde
pop
or
or
push
jne
or
add
mov
adc
mov
add
iret
sti
add
loopne
mov
imul
repz
hlt
clc
xor
loope
cmp
add
ror
pminub
ins
xor
xchg
or
or
out
lahf
cmp
add
xchg
or
outs
arpl
ins
cmp
movs
and
jecxz
or
push
(bad)
cmp
cmp
fs
inc
jge
imul
in
pop
imul
cwde
cmp
add
xchg
or
mov
repz
loope
cmp
je
mov
ins
fsub
mov
repz
jecxz
aam
mov
xchg
or
or
into
pusha
or
xchg
or
add
push
jmp
xor
int3
sub
stos
fs
sti
and
stos
pushf
cmp
add
xchg
or
(bad)
mov
and
pop
add
sbb
je
repz
xor
mov
sbb
cmp
sti
pusha
mov
ficom
pop
pop
fiadd
add
iret
jmp
fneni(8087
stos
mov
jnp
adc
in
jmp
xor
idiv
pusha
mov
push
movs
inc
push
sbb
add
lea
fwait
or
add
xchg
or
jo
pop
sbb
inc
pop
pop
aad
cmp
fs
movs
cmp
movs
movs
jae
jge
in
mov
(bad)
loop
fwait
or
pop
fisub
(bad)
outs
xchg
lahf
pop
xor
xchg
or
add
push
xchg
std
add
xchg
or
pop
fiadd
add
iret
jmp
fneni(8087
stos
mov
jnp
jae
jecxz
cld
xchg
in
jmp
xor
neg
cli
jecxz
pusha
dec
xchg
or
mov
cmp
nop
jge
lods
inc
fs
(bad)
outs
xchg
lahf
pop
xor
xchg
or
(bad)
std
jmp
jecxz
cmp
rol
je
push
movs
je
mov
sub
loope
test
mov
je
mov
stos
movs
imul
xor
mov
loope
addr16
outs
rcr
or
in
clc
ret
retf
pop
out
mov
call
ficom
jecxz
in
stos
or
mov
lahf
pop
xor
xchg
or
or
pusha
xchg
ins
sbb
add
xchg
or
add
push
jmp
xor
imul
in
into
pusha
or
adc
or
loop
mov
mov
add
pop
mov
jecxz
ss
stos
test
and
and
repnz
test
pop
mov
and
(bad)
imul
movs
adc
mov
adc
sub
mov
jns
push
pop
push
mov
jbe
inc
inc
dec
ja
dec
dec
ja
dec
(bad)
xor
dec
dec
ja
dec
scas
jge
imul
or
imul
sar
inc
das
pop
lods
out
dec
add
sahf
adc
jo
or
dec
inc
mov
loope
jmp
push
outs
jle
(bad)
stos
mov
repz
lds
scas
test
jae
jl
sbb
retf
inc
mov
shl
fisubr
sub
mov
xchg
icebp
xchg
ins
jo
ins
jns
dec
mov
(bad)
call
push
test
jns
outs
jbe
sbb
jmp
call
out
inc
mov
adc
cmp
cmc
mov
jo
rol
jne
sbb
mov
add
jo
rcr
dec
and
xchg
popf
pop
lahf
fld
je
adc
inc
mov
xchg
jbe
inc
pop
mov
inc
(bad)
fnsave
scas
lods
or
ror
mov
call
dec
jb
retf
stc
clc
adc
dec
xchg
xor
fcmovnb
loopne
mov
(bad)
cdq
inc
(bad)
xor
in
sub
leave
inc
sahf
adc
xor
shl
in
add
imul
cli
sub
mov
je
shr
shl
rcl
cmp
adc
cmps
cmp
or
into
cmp
lahf
or
xchg
cmp
jno
cmp
daa
shr
cdq
lahf
call
bound
sbb
push
lods
sbb
push
lods
sbb
in
jns
bound
jo
or
pushf
sbb
push
lods
sbb
adc
adc
into
pop
pushf
sub
push
lods
pop
clc
fs
and
int
add
cmp
adc
sahf
pop
cld
dec
lds
sbb
push
lods
sbb
push
lods
push
clc
test
or
pop
or
inc
push
lods
sbb
push
lods
sbb
xchg
stos
xchg
cmp
gs
mov
push
lods
sbb
push
lods
sbb
push
or
test
sbb
push
lods
sbb
push
lods
push
clc
test
or
popf
movs
test
jmp
sar
xor
test
fidivr
push
ins
sbb
hlt
stos
sbb
lds
lds
sub
pop
lods
sbb
push
lods
sbb
in
adc
je
rcl
xor
dec
mov
xor
sbb
bound
xchg
fldcw
lds
push
clc
push
sub
les
sbb
aam
adc
test
imul
mov
pop
pushf
sub
push
lods
sbb
les
mov
push
lods
sbb
adc
adc
iret
pop
pushf
sub
push
lods
sbb
push
lods
sbb
movs
sbb
inc
je
xor
rcr
pop
lods
sbb
hlt
test
test
popf
push
data16
inc
jecxz
lods
mov
cdq
pop
lods
sbb
push
lods
sbb
xor
fdivr
push
lods
sbb
push
lods
sbb
test
es
popa
into
ins
xchg
sub
pop
sub
add
push
lods
sbb
xchg
stos
pop
int
ins
fdivr
push
lods
sbb
hlt
stos
sbb
lds
shr
xchg
mov
retf
cwde
cdq
pop
lods
sbb
push
lods
sbb
push
lods
adc
lds
mov
mov
retf
and
fstp
sbb
push
lods
sbb
mov
push
clc
cmc
fldl2t
icebp
pop
sub
(bad)
push
lods
sbb
mov
push
clc
adc
sub
lods
sbb
push
lods
sbb
push
lods
adc
les
dec
xchg
pop
sub
test
sbb
aam
adc
push
ins
test
push
lods
sbb
push
lods
sbb
adc
adc
pop
sbb
push
lods
sbb
and
mov
mov
and
push
je
maskmovq
xchg
pop
sub
add
push
lods
sbb
adc
adc
xchg
call
push
lods
sbb
push
lods
sbb
movs
mov
jae
and
bound
sbb
cwde
shl
pop
int3
sub
push
lods
sbb
push
lods
pop
clc
mov
xor
ds
rcl
in
mov
cdq
test
call
bound
mov
push
lods
sbb
mov
sbb
aad
sub
xor
jno
push
pop
sbb
push
lods
sbb
push
lods
sbb
xchg
stos
pop
int
ins
fdivr
push
lods
sbb
push
lods
sbb
aam
push
clc
push
fst
int3
lods
test
sahf
sbb
mov
cld
sub
push
lods
sbb
push
lods
sbb
movs
test
sbb
adc
dec
lds
sbb
push
lods
sbb
movs
movs
cwde
cdq
pop
lods
sbb
push
lods
sbb
movs
adc
pop
lods
sbb
push
lods
sbb
push
lods
pop
clc
mov
fnstenv
sub
add
push
lods
sbb
adc
adc
fs
xor
pop
pushf
sbb
aam
adc
aam
xchg
fild
imul
cdq
and
(bad)
ja
aad
cdq
pop
popf
sub
ret
imul
imul
sub
ins
add
cs
xchg
adc
jo
add
xchg
movs
pop
pushf
sbb
xchg
stos
push
clc
xor
loope
push
push
rcr
pop
lods
sbb
aam
xchg
fild
imul
cdq
and
(bad)
ja
aad
cdq
pop
popf
sub
mov
jne
xchg
imul
shr
and
lds
shr
fist
xchg
arpl
inc
jae
jne
test
outs
or
es
test
lock
dec
out
add
fdiv
add
jbe
jl
xchg
xchg
sar
(bad)
xchg
dec
imul
inc
jae
(bad)
das
jnp
sub
iret
std
add
jns
xchg
icebp
xchg
(bad)
test
pop
imul
push
into
(bad)
xchg
dec
leave
xchg
cdq
or
sar
inc
xchg
xchg
cld
adc
mov
sub
jmp
mov
mov
add
mov
cli
cmp
or
sbb
icebp
inc
in
sub
xor
sub
enter
ss
sbb
jne
ds
xor
jo
dec
js
inc
mov
jo
loop
push
ss
and
div
mov
int
cmp
sub
push
sar
aad
or
mov
(bad)
sbb
aaa
jb
out
bound
call
call
fdivr
arpl
fdiv
push
pop
es
call
int
cmp
leave
add
call
cmp
mov
fsub
ror
xchg
movs
xor
sar
mov
fld
scas
arpl
out
ror
add
cmp
mov
fmul
ja
cmp
xor
loope
outs
inc
mov
outs
mov
push
mov
outs
jle
cmc
pop
ror
dec
ja
in
mov
nop
jle
push
jb
fcomp
ds
sahf
ds
sahf
ds
sahf
ds
sahf
ds
sahf
cs
call
(bad)
call
stos
mov
loop
push
lds
ins
or
aam
mov
aam
pop
add
movs
es
ds
call
mov
pushf
mov
ins
call
jb
jmp
lods
mov
aam
mov
aam
daa
or
xchg
dec
xor
inc
or
dec
mov
cli
cmp
ret
mov
pop
aam
pop
or
movs
push
ss
call
imul
jmp
popf
clc
mov
pop
aam
mov
aam
push
pop
push
mov
mov
mov
pop
aam
cmps
push
jmp
mov
push
ret
mov
pop
aam
mov
aam
xlat
push
jmpw
scas
retf
mov
cmp
(bad)
lea
mov
mov
mov
inc
ror
es
ins
jecxz
jo
jne
test
jge
test
cmp
je
cs
jbe
sub
ss
cmp
(bad)
adc
out
scas
in
and
sub
mov
cmp
sub
(bad)
fadd
jo
jno
gs
push
mov
test
retf
push
add
test
add
rcl
jae
jl
sbb
jle
mov
enter
push
popa
repnz
loop
lods
inc
into
or
out
dec
inc
xchg
std
cmp
cmp
call
inc
ins
cmp
and
pop
inc
adc
out
dec
inc
xor
or
xchg
mov
std
jl
lods
js
dec
mov
(bad)
pop
std
jae
(bad)
xchg
adc
jne
cmp
shl
cli
fadd
jo
push
mov
dec
sti
mov
int
mov
aam
or
loop
sar
js
inc
ds
xor
int
test
(bad)
sub
cmp
je
and
call
int
loope
imul
shr
cmp
mov
(bad)
dec
sub
sbb
not
inc
hlt
movs
xor
pop
test
mov
jl
into
(bad)
fwait
ror
out
call
cmc
je
add
ret
lock
or
mov
in
adc
sbb
sbb
shr
ins
xor
jmp
mov
hlt
movs
in
loop
mov
and
xor
mov
add
push
cmp
in
out
push
loop
lods
inc
mov
shl
mov
in
xchg
cdq
lahf
push
mov
imul
jo
stc
dec
into
dec
(bad)
mov
dec
ja
dec
dec
ja
dec
mov
ja
dec
dec
ja
dec
pop
jle
sbb
mov
dec
ja
dec
dec
ja
dec
lahf
jo
push
js
lods
cld
jbe
mov
push
xor
lock
(bad)
je
popa
xor
dec
dec
ja
dec
(bad)
mov
(bad)
xor
mov
dec
int3
out
dec
test
pop
pop
repz
adc
xor
jo
repnz
adc
test
ins
out
jnp
push
xchg
dec
imul
xor
das
adc
xor
adc
push
in
dec
imul
mov
pop
imul
rcr
(bad)
push
mov
bnd
fucom
fnsave
jb
jns
fdivr
dec
sti
sub
aam
je
mov
mov
fldcw
sti
out
mov
push
push
xchg
dec
jnp
dec
mov
test
adc
or
or
test
push
mov
push
fiadd
mov
and
jge
mov
test
in
adc
hlt
cmps
fcmovne
adc
sub
sbb
aam
mov
dec
inc
adc
mov
ja
dec
cli
and
jbe
xchg
int
scas
(bad)
fnstenv
adc
jo
cmp
mov
call
mov
add
adc
sti
jno
stos
mov
jae
mov
stos
cld
jmp
inc
sub
xor
(bad)
or
cmc
cmps
ror
fxch
shl
(bad)
cmc
gs
or
xor
pop
ret
xchg
mov
scas
inc
xor
mov
les
(bad)
fld
int
pop
xchg
jns
and
mov
or
rcr
int
out
int
retf
fcmovnb
fnstcw
test
shr
test
and
int
dec
in
aam
test
and
add
fsubrp
test
shr
xchg
jecxz
std
hlt
fcmovu
test
shr
test
xchg
call
and
fsubrp
test
shr
test
shr
xor
out
test
push
in
(bad)
int
xchg
mov
(bad)
test
shr
or
mov
test
shr
test
arpl
lea
aam
repnz
sbb
mov
test
push
jmp
add
fsubrp
test
shr
test
ror
lock
test
shr
test
and
inc
stos
ins
sub
repz
out
test
shr
test
xor
lea
push
test
shr
test
jecxz
add
fucomp
test
shr
test
jae
test
(bad)
(bad)
shr
test
repz
mov
in
out
xor
cmp
sub
dec
stos
mov
daa
aam
fsubrp
test
shr
test
shr
or
arpl
push
test
shr
test
shr
test
mov
out
test
shr
test
shr
test
ror
jo
out
test
shr
test
adc
mov
mov
repnz
pop
inc
stos
ins
sub
mov
test
or
out
test
mov
or
fiadd
push
out
mov
ror
test
shr
test
jecxz
test
out
test
shr
test
ror
jo
out
test
shr
test
and
lea
outs
in
aad
test
shr
test
jecxz
add
fucomp
test
xor
or
test
shr
test
shr
xchg
and
call
or
out
test
shr
test
mov
or
push
pop
icebp
fcmovu
test
shr
test
and
inc
stos
mov
fiadd
shr
test
and
sub
ret
movs
in
push
mov
repnz
addr16
fsubrp
test
shr
mov
jecxz
mov
repnz
addr16
fsubrp
test
shr
test
adc
lea
(bad)
mov
(bad)
shr
test
mov
or
test
shr
test
jae
mov
ror
mov
xchg
movs
mov
outs
in
fucomi
test
shr
add
(bad)
test
shr
test
shl
cmp
inc
xlat
out
test
jecxz
(bad)
outs
fs
test
shr
test
shl
or
xlat
jg
or
inc
mov
shl
cmc
jecxz
jecxz
mov
push
add
fucomp
test
shr
test
shr
test
shr
(bad)
test
xchg
out
lea
sub
out
test
add
test
out
test
mov
or
push
cmc
in
out
sti
sbb
lea
outs
in
aam
test
shr
test
push
out
mov
ror
test
sub
int
imul
(bad)
shr
mov
sar
popf
les
test
dec
rcr
test
push
out
mov
ror
mov
shr
test
shr
test
shr
(bad)
shr
mov
xor
dec
retf
mov
mov
jmp
(bad)
test
shr
test
shr
jo
out
test
inc
out
(bad)
aam
fiadd
mov
out
test
xor
lea
pop
test
shl
or
jle
dec
fucomi
test
repz
xchg
movs
inc
shr
test
shr
test
shr
test
shr
jo
out
test
shr
test
arpl
mov
test
shr
test
mov
out
test
shr
test
shr
test
shr
jo
out
test
shr
test
shl
or
(bad)
test
shr
test
sub
rol
test
out
test
shr
test
adc
add
add
daa
sub
inc
shr
test
mov
lea
pop
test
shl
or
(bad)
test
shr
test
push
out
mov
sar
test
shr
jno
out
test
inc
out
mov
test
shr
test
ret
in
int
les
jmp
shr
test
shr
jo
out
test
shr
test
arpl
mov
test
shr
test
mov
out
test
shr
test
shr
jo
out
test
shr
test
shl
or
(bad)
test
jae
test
shr
sar
mov
test
shr
test
shr
test
adc
add
add
iret
jmp
out
test
shr
mov
sar
test
ret
out
pushf
out
popf
hlt
fcmovu
test
and
int
retf
ffree
ret
in
mov
bound
mov
push
mov
mov
out
mov
mov
pop
adc
jne
mov
add
jne
leave
inc
cmp
or
bnd
fdiv
inc
mov
push
call
inc
xor
iret
repnz
xor
ret
mov
dec
ja
dec
dec
ja
dec
pop
repnz
jae
mov
jbe
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
xchg
test
inc
aam
xchg
dec
addr16
inc
cmp
xchg
inc
jne
jge
pop
outs
call
mov
outs
xor
lea
dec
pop
popa
inc
outs
out
icebp
loop
jnp
cmp
(bad)
dec
cdq
pop
imul
shl
xchg
pop
imul
jae
add
xor
fisub
test
mov
jg
sbb
cli
dec
mov
dec
(bad)
int3
mov
out
sub
dec
dec
sub
fdiv
cmp
adc
loop
mov
push
mov
int
nop
inc
or
(bad)
jo
dec
in
int
sbb
or
test
in
nop
ja
jns
(bad)
jo
push
jmp
mov
arpl
cmps
xor
jae
xchg
and
inc
(bad)
jo
jno
sub
sbb
and
shr
xor
test
jbe
cmp
faddp
shr
xor
aam
ror
add
add
inc
push
lock
mov
(bad)
(bad)
je
call
popa
out
mov
pop
shl
loop
pop
jns
int3
frstor
add
push
mov
test
sar
or
jns
xchg
in
test
jle
in
movs
int3
(bad)
jns
mov
dec
jp
xor
out
fdiv
and
(bad)
adc
pop
cld
ret
xchg
ja
xchg
pop
imul
jecxz
or
popf
das
retf
lahf
in
nop
sahf
movs
in
xchg
movs
in
cmps
movs
call
movs
xchg
movs
in
xchg
movs
in
mov
out
clc
mov
xchg
movs
in
cmps
test
mov
xchg
movs
in
xchg
movs
in
cmps
lods
jmp
mov
xchg
movs
in
cmps
test
mov
cwde
cmc
aad
xchg
movs
in
xchg
movs
in
xlat
test
test
xchg
movs
in
cmps
movs
call
movs
xchg
movs
loopne
cmps
in
and
int3
fcom
aad
xchg
movs
in
imul
int3
stos
pushf
aad
sahf
movs
in
xchg
movs
in
cmps
test
cmp
lea
xor
outs
mov
cmc
aad
xchg
movs
in
xlat
scas
in
xchg
xchg
test
xchg
movs
in
daa
stos
jl
stos
pushf
ficom
pop
mov
xchg
into
enter
xchg
in
xchg
movs
in
xchg
movs
in
cmps
movs
call
movs
xchg
movs
in
cmps
test
cmp
lods
pushf
pop
xchg
scas
pushf
shl
outs
mov
cmc
aad
xchg
movs
in
xchg
movs
in
push
scas
in
xchg
xchg
test
xchg
movs
in
daa
stos
jl
stos
pushf
ficom
pop
xchg
jge
into
enter
xchg
in
xchg
movs
in
xchg
cmps
call
int3
call
cmp
lea
xor
outs
mov
cmc
aad
xchg
movs
in
xchg
movs
out
imul
in
daa
stos
in
lods
cmps
pushf
repz
scas
mov
pop
xchg
lea
popf
xchg
in
xchg
movs
in
xchg
movs
in
cmps
movs
enter
aad
xchg
movs
in
daa
scas
in
popf
(bad)
nop
mov
dec
in
xchg
push
xchg
and
gs
xchg
movs
in
xlat
mov
or
cwd
jl
mov
enter
xchg
(bad)
(bad)
mov
enter
xchg
push
mov
and
adc
dec
mov
inc
xor
mov
dec
ja
dec
mov
ja
dec
dec
ja
dec
das
pop
xchg
movs
cs
mov
inc
ja
dec
dec
ja
dec
dec
not
hlt
dec
ja
dec
dec
ja
dec
mov
ja
dec
dec
ja
dec
jg
mov
jo
out
jbe
ret
mov
push
imul
test
ja
dec
out
jb
dec
iret
jbe
adc
inc
ja
dec
dec
ja
dec
das
jns
jo
cmp
mov
dec
ja
dec
iret
jbe
dec
dec
pop
lds
ja
dec
(bad)
mov
dec
push
xor
dec
iret
jbe
dec
dec
pop
lds
dec
ja
dec
iret
jbe
outs
dec
ja
dec
dec
ja
dec
out
jo
dec
jg
test
test
xor
dec
ja
dec
aas
jnp
leave
dec
pop
test
ja
dec
dec
ja
dec
aas
jp
leave
dec
pop
inc
inc
dec
ja
dec
iret
push
adc
push
sub
cmp
adc
xor
dec
dec
ja
dec
aas
js
or
add
dec
dec
ja
dec
dec
ja
dec
aas
inc
xor
ja
dec
pop
jo
or
dec
xor
mov
retf
xor
sub
xor
dec
pop
jb
vcvtpd2dq
mov
dec
ja
dec
dec
ja
dec
dec
ja
dec
das
push
pop
jae
sbb
xor
jo
test
ror
test
xor
push
cmps
outs
fld
popf
stc
je
daa
jbe
or
mov
ins
jbe
jecxz
data16
jae
sahf
dec
leave
xor
das
(bad)
push
xchg
xor
out
jne
into
jo
(bad)
retf
dec
mov
push
xor
jb
jl
fdivr
inc
push
ror
leave
mov
ss
cli
in
adc
retf
ror
test
xor
sti
add
xchg
cmp
and
fdiv
sbb
sar
adc
(bad)
dec
xlat
test
add
popf
shl
inc
out
xor
ret
mov
inc
add
int
mov
sub
pop
leave
int
mov
adc
mov
pop
mov
jb
shl
dec
cmp
repnz
adc
mov
adc
xchg
adc
xchg
mov
ret
inc
aaa
xor
int
xchg
jno
jnp
icebp
cmp
into
push
rcl
push
mov
mov
sub
lock
add
sub
(bad)
hlt
lahf
in
and
je
adc
jne
ds
rol
mov
imul
jns
test
loopne
jmp
inc
adc
jmp
xchg
push
dec
loope
jle
cmp
stc
fldenv
adc
cmp
fisub
and
in
jle
fcom
je
cwde
into
dec
lahf
(bad)
das
nop
enter
scas
in
(bad)
pop
(bad)
call
push
jg
enter
(bad)
pop
mov
and
jmp
push
jle
call
xchg
push
mov
push
jle
fcomp
inc
pop
(bad)
daa
adc
cmp
fidiv
ja
in
inc
jle
call
push
jle
call
push
jle
call
sbb
call
cmp
bound
inc
pop
(bad)
aaa
adc
clc
test
jno
ja
in
inc
jle
pop
pop
ja
call
push
jle
call
pop
jae
or
mov
inc
pop
(bad)
aaa
adc
clc
xchg
add
xchg
cmps
jle
call
adc
fsub
inc
cmp
into
adc
inc
pop
push
and
or
xchg
sahf
dec
loopne
jle
push
mov
sbb
inc
addr16
mov
aas
neg
fbstp
xchg
aad
inc
(bad)
xchg
pop
(bad)
iret
adc
test
adc
mov
(bad)
pop
sub
mov
jae
sub
dec
jg
jne
test
imul
lock
dec
scas
or
add
push
outs
mov
(bad)
sar
ret
jmp
dec
imul
cmp
daa
dec
sub
popf
sbb
push
gs
xor
mov
mov
inc
mov
test
push
rcl
jne
into
inc
sub
int
dec
enter
ds
cmp
mov
sub
mov
push
ds
and
inc
jle
and
dec
jle
sbb
jg
test
out
push
aam
ficomp
inc
jmp
sbb
inc
mov
cld
cmp
pop
out
ja
cmc
jmp
shl
mov
ss
je
test
std
loopne
(bad)
icebp
adc
fnsave
mov
inc
into
or
jnp
icebp
pop
dec
out
add
test
je
leave
jo
cmp
fidivr
retf
push
outs
xchg
sub
retf
dec
retf
outs
mov
cmp
jmp
std
dec
inc
aas
sbb
adc
sub
call
cwde
cld
jecxz
ret
adc
icebp
jb
push
repz
ins
sub
sub
inc
lea
enter
jmp
loop
jo
aaa
aas
sti
scas
pop
pusha
(bad)
stos
stos
xor
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
movs
jmp
test
test
sahf
jae
adc
ror
pushf
repz
pushf
ror
das
lods
ficom
es
ror
das
lods
jp
push
mov
pop
adc
std
mov
jp
jecxz
push
xchg
ror
das
pushf
shr
das
pushf
ror
das
in
fiadd
test
std
cmp
gs
inc
adc
movs
mov
or
pop
aad
out
sahf
adc
jmp
pushf
(bad)
in
js
pop
xchg
ror
das
pushf
ror
das
pushf
rol
das
mov
push
dec
sub
or
mov
(bad)
shrd
xor
fistp
stos
popf
or
pushf
ror
das
pushf
ror
das
sub
and
sbb
test
icebp
sub
divps
xchg
dec
stos
popf
ror
das
cmp
add
pause
mov
sub
or
cld
fiadd
outs
test
mov
sub
dec
and
fs
sti
mov
scas
dec
push
gs
ins
adc
jne
sub
(bad)
dec
xchg
dec
(bad)
jle
pop
jp
mov
dec
mov
inc
mov
jne
(bad)
lahf
inc
sub
in
sbb
jl
into
push
mov
add
fld
mov
fcmovu
loope
test
push
cmps
lahf
into
retf
pop
dec
inc
test
and
daa
call
and
pusha
push
icebp
dec
mov
xchg
hlt
hlt
sub
sub
retf
ds
mov
adc
add
dec
into
push
fst
popf
daa
retf
jmp
das
iret
push
inc
xor
les
mov
adc
sub
in
int
mov
daa
sbb
int
dec
loopne
cmp
fistp
fisub
jg
sti
repz
mov
push
aas
cmps
mov
or
mov
dec
retf
das
jge
fdiv
enter
push
add
sub
jl
out
inc
in
sbb
inc
xor
or
pop
stc
jne
int3
dec
push
inc
xor
test
pop
outs
mov
pop
mov
stos
adc
lock
mov
(bad)
vphsubwd
fld
ror
(bad)
sub
call
mov
pusha
js
mov
je
dec
pop
mov
adc
fild
jae
jns
adc
imul
fisub
sbb
mov
mov
jo
xchg
iret
adc
and
aam
ret
outs
and
or
mov
sub
ja
rcr
repnz
dec
pushw
add
mov
adc
fnstenv
icebp
jmp
push
sub
mov
push
mov
jmp
shl
leave
push
mov
stc
cdq
push
mov
into
mov
loop
push
mov
and
sub
iret
fnstcw
mov
jmp
xchg
jnp
mov
push
sbb
sub
shl
sbb
mov
icebp
mov
ss
hlt
xlat
es
sub
aad
sbb
sub
cmc
dec
movs
xlat
mov
adc
sub
je
cmp
fxch
sub
adc
(bad)
jmp
hlt
xor
mov
adc
dec
cmps
repnz
pushf
mov
dec
mov
aam
sbb
xor
popa
clc
shl
mov
cmp
lods
in
cmp
pand
add
les
mov
aam
mov
and
sbb
jbe
std
xchg
rcr
not
jecxz
xchg
loop
arpl
mov
cmps
mov
repnz
gs
mov
mov
es
movs
adc
pop
push
mov
sti
lods
and
std
jmp
ss
jmp
into
fmul
dec
ss
jmp
ss
or
sar
retf
fstp
xchg
retf
aam
add
inc
and
in
pushf
movs
xor
xchg
xchg
aam
rcr
sub
(bad)
push
sbb
sub
aam
rcl
imul
aam
shl
aad
sbb
sub
aad
inc
not
push
inc
fnstcw
pop
aaa
adc
add
leave
sub
(bad)
inc
xchg
(bad)
sub
mov
dec
mov
fxch
sub
rcl
xchg
mov
shl
push
push
fnstcw
jmp
adc
push
(bad)
(bad)
retf
scas
xor
xchg
aam
sub
hlt
neg
xchg
ja
push
xor
jmp
xchg
aad
sub
mov
mov
mov
aam
xor
scas
inc
fiadd
and
jo
xchg
hlt
or
lock
jno
xchg
aas
mov
into
int
mov
sbb
xor
je
sti
mov
hlt
outs
aad
xchg
cmp
int
xor
dec
sub
push
int
sar
mov
mov
(bad)
addr16
icebp
in
hlt
cmp
int
xor
in
cmp
ror
xor
hlt
je
out
hlt
sti
test
stos
cmp
popf
lock
ror
fdivr
les
mov
hlt
xchg
pop
xor
add
popf
xchg
aas
mov
int
add
lods
aas
mov
les
mov
cwde
std
hlt
cmp
int
cmp
hlt
cmp
int
push
mov
lea
jno
lods
psraw
jno
out
add
lods
call
repz
and
lods
dec
sub
jns
push
test
test
call
inc
dec
jl
into
push
mov
add
hlt
jae
mov
inc
outs
mov
xlat
inc
aam
push
adc
cwde
dec
stc
push
in
jns
xchg
out
inc
add
sub
js
cmp
int
mov
mov
pop
and
inc
aam
xchg
rcr
jns
or
xchg
in
dec
inc
xor
(bad)
add
ret
icebp
pushf
inc
outs
pop
jl
into
inc
(bad)
jo
icebp
push
hlt
jl
fdivr
mov
cwde
hlt
push
pop
and
pop
enter
sar
jp
dec
sbb
pop
dec
test
test
sbb
sar
pop
(bad)
iret
fcom
cmp
mov
rol
repnz
dec
ss
cdq
fst
leave
in
jne
std
jns
xchg
cld
arpl
nop
test
jbe
(bad)
sub
in
in
add
cmp
jge
cmp
jae
xor
mov
or
and
mov
ret
sub
call
xor
sub
jae
je
jne
js
out
sub
mov
int3
int
repz
fxch
sbb
pop
pop
outs
test
pop
call
jecxz
xchg
adc
in
je
jp
xor
arpl
imul
int3
popf
jle
ss
dec
cmp
aas
icebp
mov
in
add
rcl
jp
sbb
jmp
dec
loopne
jle
loopne
jle
loopne
(bad)
jo
xor
sub
mov
loopne
jle
loopne
cs
sub
sub
sbb
loopne
jle
push
pop
ja
loopne
jle
loopne
pop
ja
inc
jae
outs
jge
dec
mov
and
addr16
shl
mov
jle
shl
test
sbb
sbb
jb
jp
jg
mov
and
xchg
test
sbb
je
push
in
jbe
in
test
xor
imul
mov
sti
dec
adc
scas
xchg
mov
xchg
pop
mov
push
popf
cmp
push
pusha
add
xor
mov
test
xchg
dec
fldenv
dec
daa
gs
stos
(bad)
and
daa
(bad)
jns
xor
lods
pusha
mov
sbb
xor
xor
out
(bad)
in
adc
xchg
jo
jmp
sbb
into
sbb
or
lock
sub
imul
jns
test
jbe
cmp
(bad)
ror
mov
jg
(bad)
push
ror
fdiv
jns
pop
or
dec
xchg
cwde
call
pushf
adc
out
mov
mov
jae
inc
ss
ins
and
shr
jne
int
shl
mov
ror
xlat
jae
stc
xchg
pusha
test
adc
xor
sti
int
jb
leave
sub
ror
adc
dec
mov
inc
imul
je
adc
add
test
push
test
sub
jecxz
sub
into
push
aam
mov
mov
stc
(bad)
mov
adc
sahf
mov
js
xor
cmps
xor
sahf
push
xor
adc
dec
iret
std
pop
pop
mov
sbb
imul
call
call
fdiv
sahf
popa
mov
mov
sbb
fwait
push
loope
call
pop
mov
scas
loopne
fcom
mov
pop
adc
std
xor
fcom
mov
pop
out
mov
aaa
cmp
std
push
xor
lds
in
lea
mov
lds
repz
popa
mov
mov
push
add
loope
(bad)
lds
in
lea
mov
lds
repz
popa
mov
mov
dec
mov
sub
rcl
std
inc
inc
into
imul
rol
fcom
mov
aaa
xor
ins
lds
in
and
ins
lds
in
(bad)
bound
mov
mov
push
rcr
call
ins
lds
in
(bad)
bound
mov
lds
in
(bad)
bound
mov
mov
shl
ret
sahf
mov
test
leave
inc
ror
sahf
add
fcmovb
enter
shr
ret
sahf
mov
test
test
adc
mov
jg
sahf
movs
cmp
push
pop
xor
adc
mov
ss
inc
mov
in
and
mov
pop
mov
cmp
into
cmp
out
and
(bad)
test
les
icebp
les
jmp
mov
aaa
push
iret
lods
sbb
int3
(bad)
mov
fdivr
in
out
cwde
inc
test
push
pop
sub
hlt
adc
in
retf
mov
bound
sahf
movs
in
xchg
out
mov
(bad)
ja
xchg
call
sbb
jne
xchg
pop
inc
enter
mov
pop
pop
pop
inc
in
int
cmp
sbb
and
push
cmp
dec
sbb
xchg
dec
and
cmp
sub
dec
or
sti
sub
jo
cmp
out
mov
test
adc
inc
xchg
xor
cmps
fcmove
ror
sbb
in
int3
dec
mov
ds
sti
aad
std
aad
je
mov
(bad)
std
dec
inc
xor
cld
fcmovnb
loopne
mov
(bad)
idiv
dec
sub
jge
or
jbe
and
mov
(bad)
fchs
jae
push
scas
sbb
add
rcr
mov
outs
mov
push
mov
(bad)
cmp
sbb
(bad)
and
imul
dec
inc
push
add
pop
sub
pop
js
push
or
push
or
cs
and
retf
or
js
pop
or
push
or
push
or
inc
cmp
push
inc
push
or
mov
inc
bound
or
ds
adc
cmp
push
or
push
cmovno
sub
and
retf
xor
add
dec
inc
push
or
push
or
cs
gs
or
or
push
or
add
or
js
pop
or
dec
push
dec
pop
cmp
inc
ror
outs
jnp
push
inc
inc
or
js
push
or
push
or
add
pop
cmp
sub
push
or
push
or
pop
and
dec
inc
push
or
push
add
jo
cmp
push
or
push
or
push
or
inc
xchg
dec
inc
inc
aas
xor
inc
inc
or
or
or
add
add
dec
inc
push
or
out
add
aas
inc
push
inc
push
or
out
cmp
aas
sub
mov
bound
or
push
or
push
or
ds
push
inc
mov
bound
or
push
add
pop
and
pop
js
push
or
push
or
into
or
or
or
push
or
cs
ror
js
push
or
push
or
pop
add
dec
inc
push
or
push
or
add
add
dec
inc
push
or
push
or
ds
jp
cmp
push
or
push
or
dec
add
mov
pop
or
push
add
inc
inc
or
or
or
sub
push
or
push
or
cs
and
dec
aaa
add
push
add
dec
inc
push
or
into
or
pop
sub
aaa
inc
push
inc
push
or
push
or
mov
ins
jo
daa
shl
mov
and
imul
and
outs
jle
or
mov
mov
mov
iret
push
pop
jae
adc
xor
jo
lock
mov
int
inc
add
shl
xor
and
leave
xchg
xchg
dec
fld
jb
ja
pushf
jb
inc
lahf
pop
imul
xor
cli
jbe
mov
fcom
jae
jno
sbb
lods
dec
mov
fld
jo
icebp
repnz
int3
js
inc
push
ror
pop
lods
test
pop
mov
in
jo
bnd
xchg
fimul
loope
cmp
dec
push
xor
and
inc
into
push
sub
dec
lock
mov
ret
jae
fnstenv
add
out
sbb
into
adc
xor
push
add
fidiv
jle
clc
xor
dec
repnz
cmps
jns
aas
ss
int3
push
pushf
add
int
inc
mov
loope
push
shl
ficomp
jb
mov
adc
(bad)
repz
mov
int3
int
test
mov
ret
hlt
mov
ins
push
rcl
mov
aaa
stos
clc
sbb
shl
jae
call
pop
push
es
pop
push
sbb
xchg
adc
(bad)
xchg
push
fwait
cmps
sbb
push
sbb
pop
push
sbb
pop
pop
adc
ja
call
cdq
sbb
sbb
pop
push
sbb
pop
push
sbb
daa
mov
sub
pop
push
sbb
ja
push
inc
es
cmp
pop
push
sbb
daa
mov
sub
pop
push
sbb
pop
push
sbb
aaa
cwde
ja
adc
into
pop
push
sbb
pop
push
sbb
inc
push
push
es
sub
push
push
sbb
pop
push
sbb
ja
sbb
fistp
cdq
sbb
sbb
inc
push
push
addr16
sub
push
push
sbb
pop
push
sbb
pop
push
adc
xchg
sbb
sub
pop
push
sbb
push
adc
out
ss
cli
push
push
sbb
mov
pop
(bad)
pop
inc
jmp
adc
adc
dec
cli
push
push
sbb
mov
pop
(bad)
pop
inc
sub
pop
push
sbb
pop
push
pop
(bad)
daa
pop
inc
cmp
sub
push
push
sbb
pop
push
sbb
aaa
sbb
test
inc
sub
pop
push
sbb
ja
push
inc
sub
cmp
pop
es
pop
sbb
(bad)
pop
pop
pop
shl
daa
sahf
sbb
cmp
pop
push
sbb
daa
pop
adc
dec
jnp
in
cs
dec
sub
outs
push
es
pop
push
sbb
pop
push
sbb
aaa
sbb
test
push
sbb
inc
sbb
addr16
out
(bad)
pop
push
sbb
aaa
pop
pop
(bad)
daa
dec
mov
test
push
sbb
pop
mov
cli
pop
push
sbb
aaa
sbb
les
push
sbb
pop
mov
jp
push
sbb
cmps
sbb
push
jecxz
es
xchg
sbb
xchg
jecxz
das
xchg
cmc
push
es
pop
push
sbb
pop
push
adc
pop
adc
add
icebp
push
xor
mov
shl
sbb
sbb
mov
pop
(bad)
pop
inc
sub
pop
push
sbb
pop
push
sbb
inc
cmp
(bad)
pop
push
sbb
cmps
pop
mov
(bad)
pop
push
sbb
daa
scas
and
pop
es
pop
push
sbb
pop
pop
adc
inc
jnp
in
das
mov
(bad)
pop
push
sbb
pop
push
sbb
ja
idiv
js
out
dec
aas
mov
into
pop
push
sbb
pop
push
sbb
jle
data16
push
push
sbb
pop
pop
adc
inc
jnp
in
cs
mov
mov
into
pop
push
sbb
pop
push
adc
aaa
sbb
jne
sub
cs
cmp
push
push
sbb
pop
pop
adc
ja
mov
scas
sub
sbb
pop
push
sbb
xchg
adc
(bad)
addr16
mov
into
pop
push
sbb
pop
push
sbb
ja
sbb
cs
xor
inc
dec
and
data16
pop
push
sbb
pop
push
sbb
daa
push
call
push
adc
pop
sar
int
lahf
and
push
es
pop
sbb
(bad)
aaa
pop
pop
shl
and
scas
das
mov
(bad)
neg
inc
es
cmp
pop
push
sbb
pop
push
adc
xlat
pop
mov
sbb
fnsave
setae
push
es
pop
push
sbb
pop
adc
xchg
cmps
pop
iret
pop
push
sbb
pop
push
adc
jmp
and
and
shr
jge
cmp
in
jae
jle
ret
ss
and
je
jnp
mov
xchg
vpshad
mov
hlt
mov
push
mov
add
sub
ins
out
iret
leave
arpl
(bad)
push
cli
iret
std
rol
inc
icebp
and
xchg
pop
leave
test
setns
add
out
mov
fimul
test
xor
iret
cmp
push
mov
(bad)
fcom
hlt
dec
mov
and
scas
mov
repz
out
pop
stos
ror
ror
mov
mov
int
adc
loop
in
enter
mov
sub
cmc
add
ja
jns
pushf
mov
cmp
in
(bad)
in
mov
push
jne
cmp
inc
ret
cld
mov
jo
shl
into
daa
hlt
inc
xchg
int
fnsave
mov
test
adc
not
aaa
outs
(bad)
icebp
jb
sbb
aam
int
xor
cmp
mov
retf
dec
fidiv
dec
retf
popf
lds
jns
xchg
sub
mov
shl
jo
jbe
xor
outs
fsubp
hlt
loope
push
mov
cld
xchg
and
std
cmps
push
out
shl
xchg
jnp
lea
cs
add
push
mov
xchg
fmul
lahf
lahf
mov
fistp
dec
or
fist
outs
dec
dec
sbb
fist
(bad)
push
fcomp
mov
sbb
pop
sahf
mov
fmul
pop
sahf
mov
fistp
dec
or
fist
(bad)
dec
dec
sbb
fist
outs
dec
dec
sbb
fist
xchg
fmul
fist
mov
sbb
fist
inc
dec
or
fist
(bad)
dec
dec
sbb
fist
outs
dec
dec
sbb
fist
(bad)
push
fcomp
mov
sbb
pop
xchg
mov
fistp
dec
sub
xchg
ss
push
sbb
jbe
mov
inc
test
mov
jbe
sbb
and
and
mov
sbb
pop
xchg
mov
fistp
dec
or
fist
(bad)
dec
dec
sbb
fist
outs
dec
dec
sbb
fist
(bad)
push
push
fld
pop
jg
(bad)
adc
outs
inc
jg
das
add
xor
or
outs
mov
mov
jg
jl
test
ja
je
movs
jne
push
mov
ds
add
mov
mov
pop
jmp
xor
xor
cmps
cwde
dec
imul
push
shr
push
inc
pop
inc
cmps
push
bound
(bad)
js
dec
mov
loopne
dec
mov
das
cmp
aad
pop
loop
adc
fidivr
jbe
sbb
fisttp
loopne
inc
(bad)
jo
jno
(bad)
adc
jl
ds
mov
sub
rep
dec
xchg
xor
inc
jb
mov
cmc
and
ds
inc
mov
std
dec
repz
mov
mov
sub
or
mov
jb
loop
adc
pop
outs
xchg
sti
repz
(bad)
mov
mov
xrelease
dec
mov
loop
or
into
adc
and
jmp
and
shl
(bad)
mov
enter
adc
mov
dec
jl
mov
adc
sar
fbstp
push
sub
add
into
pop
lods
mov
and
leave
test
repnz
add
(bad)
lods
push
les
mov
test
or
frstor
xchg
fsubr
pop
fidiv
sub
test
test
or
push
xchg
fidivr
mov
out
and
fsubr
or
(bad)
cs
out
loop
test
fsubr
or
(bad)
les
loop
popf
cmp
loopne
mov
test
or
ror
pop
(bad)
fsubr
or
cmc
and
mov
test
or
fmul
pop
mov
test
aam
xor
test
or
fldenv
or
fsubr
add
jmp
test
or
fsubr
or
cmc
loopne
mov
test
or
xor
test
or
repz
or
mov
test
or
fldenv
cs
test
or
xor
daa
loopne
stc
lock
test
or
frstor
ss
(bad)
les
mov
fsubr
or
shr
push
scas
push
les
sub
or
xlat
test
cmp
sbb
or
frstor
push
icebp
cmc
ss
pop
lea
fsubr
or
in
daa
jmp
test
or
xor
daa
loopne
icebp
sti
ss
test
(bad)
stos
test
xchg
add
push
clc
stc
ss
test
or
mov
sub
test
or
daa
pusha
or
lock
test
or
frstor
das
mov
call
test
or
jno
pop
(bad)
fsubr
mov
jmp
pusha
das
mov
call
call
test
ds
test
or
sbb
(bad)
shr
(bad)
fsubr
or
loope
xor
fldenv
add
(bad)
les
lods
mov
push
(bad)
fsubr
or
aad
das
mov
test
or
outs
rol
mov
adc
or
shr
jl
pusha
mov
or
fsubr
test
or
fld
sub
pop
xor
dec
mov
and
sub
add
and
push
outs
push
iret
or
lods
cs
call
xor
scas
out
es
xchg
ins
xchg
fsubr
or
shr
push
scas
push
les
cmp
test
or
fldenv
sbb
or
fldcw
or
fldenv
das
mov
test
or
xor
daa
loopne
cmc
lock
test
cwde
add
nop
jb
mov
cs
loope
add
lods
add
add
push
iret
call
stos
push
in
adc
(bad)
sti
les
mov
and
outs
jp
dec
mov
jne
test
or
jb
lods
clc
bound
add
push
mov
sbb
or
push
cmp
pushf
xor
das
(bad)
iret
std
pusha
push
jge
pop
xchg
loop
call
adc
and
daa
add
pop
out
inc
scas
test
mov
inc
mov
jle
ficom
jnp
inc
mov
ss
mov
call
call
fadd
jo
shl
loopne
cld
inc
dec
add
xchg
mov
dec
jle
sbb
out
dec
adc
lock
fmul
jecxz
imul
xor
repnz
and
in
repnz
dec
mov
mov
enter
(bad)
adc
xchg
sbb
or
rol
adc
icebp
pop
inc
into
adc
push
retf
or
push
fwait
int
shl
sbb
pop
inc
add
stc
inc
push
ror
out
std
cmp
mov
sub
cmp
repnz
into
retf
pop
dec
(bad)
xor
int
pusha
mov
adc
test
and
ror
jb
(bad)
sbb
xchg
inc
mov
int
icebp
loope
loope
mov
mov
cmp
cmp
and
aam
and
push
js
daa
jo
xchg
pop
fprem1
cs
xchg
daa
pop
pop
lock
mov
pushf
je
jmp
xchg
pop
cmp
sbb
jbe
mov
sub
clc
and
fadd
je
dec
mov
mov
mov
mov
push
dec
mov
mov
push
inc
cmp
fstp
mov
int
mov
sub
(bad)
mov
sub
jbe
mov
pop
fst
dec
sbb
inc
cmp
in
sbb
jbe
in
jge
mov
mov
or
jbe
mov
daa
pop
jmp
ja
cmp
in
mov
lods
js
jl
mov
repnz
sbb
jbe
mov
push
jle
xchg
cmp
pop
cmp
sub
jbe
sbb
sti
fcmovbe
jo
xor
sub
jbe
mov
es
sub
jbe
mov
daa
pop
cdq
adc
dec
jmp
lea
jbe
mov
ja
jmp
lea
jbe
mov
sub
jbe
adc
lea
mov
test
sar
in
das
ds
clc
pop
int
jmp
adc
mov
jnp
mov
nop
fstp
mov
lea
mov
inc
aas
jge
pop
pop
jmp
mov
pop
cmp
fstp
mov
and
pop
sahf
add
mov
mov
sub
sbb
inc
cmp
in
sbb
jbe
mov
daa
inc
mov
movs
movs
mov
lea
jbe
mov
jge
mov
sub
jbe
fwait
add
in
shl
sub
(bad)
inc
dec
jns
xchg
dec
or
inc
dec
fnop
hlt
(bad)
xchg
test
sbb
sbb
jns
into
mov
mov
leave
xor
jo
outs
jne
test
stc
(bad)
xor
jbe
dec
gs
dec
cmp
data16
jb
(bad)
xchg
dec
imul
push
sar
and
mov
into
int3
jns
dec
xor
and
lock
lds
idiv
ja
shl
adc
daa
(bad)
or
jns
pop
jp
inc
lea
jbe
or
add
adc
jns
xor
cmp
rcr
sub
jb
inc
iret
test
adc
ret
xor
push
dec
aaa
sahf
sub
mov
retf
xchg
cmp
rol
inc
cmp
loop
sub
into
add
fwait
xchg
jmp
fiadd
pop
add
pop
cld
icebp
jl
ror
fstp
cs
ror
inc
cmp
ficomp
jo
mov
int
mov
fmul
adc
(bad)
movs
es
out
int
out
jg
test
in
push
(bad)
sar
xchg
or
(bad)
push
fst
ret
(bad)
xlat
or
jb
jb
xchg
add
cld
arpl
sahf
mov
call
add
jnp
adc
dec
out
add
mov
je
test
cmp
iret
int
fdiv
dec
mov
enter
iret
in
inc
sahf
xchg
mov
je
mov
outs
sub
in
ins
sub
ret
ins
inc
(bad)
pop
dec
(bad)
ficom
ret
pop
dec
(bad)
pop
dec
in
jmp
(bad)
pop
dec
fnstsw
or
dec
(bad)
pop
dec
std
cli
pop
pop
clc
pop
xor
shl
pop
dec
in
dec
mov
aam
pop
dec
(bad)
pop
dec
std
std
jo
shl
pop
dec
(bad)
pop
dec
int
pop
dec
out
inc
jno
ret
pop
dec
(bad)
pop
dec
(bad)
pop
dec
(bad)
sbb
jmp
loope
cmp
shl
pop
dec
(bad)
pop
dec
pop
(bad)
push
push
aam
pop
dec
(bad)
pop
dec
(bad)
push
dec
lea
push
retf
shl
pop
dec
(bad)
pop
dec
mov
mov
ins
jno
repz
dec
(bad)
pop
dec
in
cli
push
clc
adc
inc
jno
sahf
adc
ror
xchg
cs
or
dec
(bad)
pop
dec
popf
not
sahf
adc
jecxz
fs
ret
pop
dec
(bad)
push
dec
lea
adc
arpl
imul
xor
imul
xor
bound
loopne
je
aam
pop
dec
(bad)
pop
dec
(bad)
pop
dec
std
std
jo
shl
pop
dec
(bad)
pop
dec
int
pop
dec
idiv
inc
shl
pop
dec
(bad)
pop
dec
fnstsw
or
dec
(bad)
pop
dec
in
cld
pop
dec
std
mov
fs
ret
ins
inc
(bad)
pop
dec
(bad)
pop
dec
mov
cmp
retf
aam
pop
dec
(bad)
pop
dec
(bad)
pop
dec
std
std
mov
mov
fs
inc
mov
push
in
jne
movs
mov
jne
jns
cmp
fstp
(bad)
pop
dec
lods
cli
pop
sbb
jae
inc
(bad)
pop
dec
(bad)
pop
dec
(bad)
or
icebp
fistp
push
sbb
pop
dec
pop
icebp
push
dec
in
mov
aam
pop
dec
(bad)
pop
dec
mov
mov
les
xchg
xor
jno
sahf
aam
jae
xchg
and
je
aam
pop
dec
(bad)
pop
dec
pop
repnz
dec
lods
stos
rcr
(bad)
ins
jno
repz
dec
(bad)
pop
dec
std
cli
push
stc
mov
cli
jnp
lock
fs
shl
in
jge
shl
pop
dec
(bad)
pop
dec
(bad)
pop
dec
fst
inc
(bad)
pop
dec
(bad)
pop
dec
ins
call
sbb
repz
dec
(bad)
cld
pop
dec
in
mov
pop
dec
(bad)
pop
dec
jge
push
dec
fld
inc
(bad)
pop
dec
std
jge
add
mov
pop
dec
(bad)
pop
dec
fld
xchg
aam
pop
dec
(bad)
pop
dec
(bad)
fisttp
ins
repnz
dec
fld
inc
(bad)
pop
dec
(bad)
push
dec
ins
lds
dec
(bad)
pop
dec
(bad)
pop
dec
pop
repnz
jae
dec
(bad)
pop
dec
(bad)
pop
dec
mov
cmp
ror
shr
xlat
ror
dec
(bad)
pop
dec
(bad)
pop
dec
mov
sub
sbb
repz
dec
(bad)
(bad)
push
mov
adc
pop
sub
adc
in
in
retf
add
fucomp
fdiv
pop
dec
(bad)
pop
dec
(bad)
(bad)
push
or
mov
ret
pop
dec
(bad)
pop
dec
(bad)
pop
dec
popf
stc
xchg
cs
aam
pop
dec
sbb
dec
fs
ret
pop
dec
(bad)
pop
dec
sbb
sahf
aam
arpl
aam
in
ins
jno
repz
dec
(bad)
push
dec
pop
aas
icebp
aam
sub
sbb
xchg
fs
pop
sbb
std
mov
mov
fs
and
cdq
sbb
or
adc
jmp
sti
xor
mov
dec
lds
mov
cmp
outs
sub
std
mov
mov
gs
pusha
shr
aam
pop
dec
pop
(bad)
shl
adc
(bad)
test
adc
rol
pop
dec
pop
stc
push
dec
lea
xchg
gs
adc
adc
xchg
int3
push
test
and
cmp
cmp
xchg
into
in
jp
push
shl
pop
dec
(bad)
push
dec
int
ja
pop
test
(bad)
pop
dec
(bad)
pop
or
jge
adc
ins
inc
(bad)
pop
dec
in
not
stos
push
cdq
push
leave
cmp
xchg
push
shr
aam
pop
dec
in
cli
hlt
mov
(bad)
pop
dec
(bad)
pop
dec
mov
mov
jo
loop
in
popa
aam
pop
dec
(bad)
pop
dec
fnsave
jno
mov
push
mov
fcmovbe
sub
push
push
mov
je
out
cmps
sub
shl
popa
mov
ins
popa
out
stos
sub
inc
stos
ficomp
push
mov
jns
jne
leave
inc
mov
mov
mov
test
push
fnsave
in
jbe
ins
fs
ds
jecxz
ss
in
test
sti
push
add
outs
fisub
push
pushf
popa
mov
pop
stc
and
into
test
push
mov
inc
popa
sub
push
xchg
rol
adc
push
popa
aaa
loop
in
pop
sub
and
jle
xchg
mov
icebp
jns
mov
jns
dec
mov
js
or
ss
mov
dec
div
xor
jo
call
xor
mov
xlat
xchg
int
shl
mov
jp
dec
and
sub
adc
jp
xchg
sub
add
xor
dec
in
inc
(bad)
jo
jno
mov
add
popf
inc
add
mov
mov
add
fs
iret
sub
outs
xchg
test
mov
jb
push
dec
and
jl
int
jge
sub
mov
(bad)
int
rol
ds
enter
enter
dec
xchg
mov
(bad)
das
(bad)
ror
ins
aad
call
mov
jl
ds
mov
int
je
jnp
out
inc
out
push
and
into
movs
mov
iret
ins
inc
mov
sub
push
inc
mov
add
dec
sahf
mov
adc
and
sbb
daa
mov
das
dec
pop
mov
adc
daa
mov
push
aad
mov
das
pushf
pop
adc
and
sub
push
xor
test
pop
adc
jno
push
cmc
daa
mov
pop
and
and
sub
xor
sbb
ja
adc
daa
mov
outs
lods
xchg
pop
and
cmps
mov
pop
and
sub
repnz
cmp
bnd
outs
push
ins
int
pushf
push
and
push
and
push
and
push
and
ins
int
fcomp
and
daa
mov
outs
sub
push
push
pop
mov
and
push
les
daa
mov
lahf
and
dec
adc
and
sub
movs
pop
push
ret
and
and
cs
adc
aaa
mov
and
push
les
daa
mov
das
scas
push
les
daa
mov
outs
orps
fs
pop
lds
leave
adc
mov
pop
xor
daa
mov
outs
sub
push
push
xlat
mov
and
push
les
daa
mov
push
and
cs
in
push
les
and
in
push
les
daa
cmp
and
daa
mov
push
pop
sbb
lea
sbb
es
sbb
adc
adc
xchg
fist
in
mov
lahf
das
sub
adc
shl
ins
dec
inc
sbb
daa
mov
adc
and
push
push
daa
mov
aas
sub
mov
imul
ret
out
pop
lds
mov
mov
dec
test
cld
jge
cmps
or
test
(bad)
cmps
sbb
xor
(bad)
rol
jle
sub
iret
jge
jp
mov
ja
dec
dec
ja
dec
dec
ja
dec
dec
not
test
mov
aas
jno
test
ja
dec
dec
ja
dec
pop
repnz
and
pop
popa
aaa
dec
jl
into
push
mov
push
mov
sub
adc
xchg
shr
pop
jg
icebp
lods
xlat
pushf
dec
stc
and
jns
test
pop
scas
fild
test
ffree
fcmovnbe
mov
loop
retf
popf
pop
test
inc
mov
sbb
in
out
clc
inc
xor
jb
fincstp
mov
dec
mov
mov
retf
xlat
ins
pop
sub
leave
and
test
enter
mul
mov
dec
mov
jl
fidivr
inc
sbb
into
push
push
xchg
nop
sub
fidiv
iret
js
ins
jnp
inc
and
imul
xor
xchg
mov
lock
dec
sahf
add
stos
call
adc
xor
loop
rol
fcomi
ja
cli
xchg
loop
sub
ja
int
aam
ss
mov
sbb
xchg
loop
out
ss
pop
rcl
in
dec
inc
xor
(bad)
ror
shl
dec
sub
(bad)
jb
xchg
xchg
add
lea
out
iret
sub
sub
mov
and
mov
(bad)
jns
jb
loope
sbb
dec
or
mov
leave
clc
xchg
sbb
sub
jae
fstp
sbb
inc
xor
mov
mov
iret
(bad)
int
xchg
dec
outs
jge
fs
je
dec
adc
and
jns
and
push
jl
adc
jnp
and
data16
and
cs
mov
(bad)
loope
xchg
sub
jbe
jne
sub
inc
push
dec
jle
call
cs
jl
into
push
mov
add
xchg
dec
imul
sahf
pop
stc
xor
jmp
not
(bad)
pop
inc
xor
inc
in
xor
mov
sbb
sub
sar
in
jae
mul
(bad)
jns
fdivr
inc
out
in
popa
and
mov
push
ror
lock
retf
fldcw
xor
outs
aad
add
cli
icebp
pop
pop
call
mov
sbb
or
dec
dec
push
xor
mov
mov
sbb
xor
retf
ds
repnz
bnd
inc
ja
leave
mul
mov
movs
hlt
mov
fadd
jo
xor
iret
xor
lods
loope
inc
xor
rol
jbe
mov
sbb
and
jbe
sbb
loopne
xchg
call
cmps
xor
push
cld
jecxz
dec
cmps
xor
jnp
xchg
and
jae
xchg
adc
and
lock
xchg
mov
mov
jb
int
and
call
cmc
mov
iret
call
inc
mov
mov
mov
test
ret
cmp
sbb
(bad)
jns
pop
sub
cld
rcl
xchg
imul
repz
enter
jmp
push
lods
aas
inc
inc
outs
sahf
sar
test
neg
ret
push
call
push
cli
outs
jnp
rep
jnp
repz
fs
cmc
mov
arpl
push
cli
outs
jnp
rep
jnp
rep
jge
mov
cmc
mov
arpl
push
cli
outs
jnp
rep
jnp
repz
jle
repz
lods
jne
retf
rep
jnp
repz
sbb
clc
jg
xor
test
ds
mov
outs
jp
repz
sub
add
add
pop
jb
lods
arpl
rep
jnp
rep
jnp
repz
mov
mov
outs
dec
in
addr16
repz
jp
rep
sub
rep
jnp
rep
jp
inc
xor
ins
rol
ss
sbb
push
xor
xchg
pop
cmp
into
cmps
add
cdq
inc
ror
push
dec
dec
cmp
inc
cdq
xlat
int3
add
cmps
or
fdiv
jo
jp
aas
pop
pop
push
jp
mov
dec
mov
dec
mov
dec
mov
dec
pushf
jo
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
out
sub
jb
sub
mov
xor
fisub
mov
mov
add
mov
(bad)
mov
ins
jmp
xor
ret
sahf
rcr
cdq
dec
imul
xchg
test
jo
mov
lods
jge
ja
or
xchg
mov
jl
call
scas
xchg
out
xchg
les
xor
int
test
leave
out
mov
popf
lds
jns
aaa
sub
jmp
(bad)
cmc
push
sar
and
leave
cmc
xor
loope
inc
jmp
fadd
push
push
xchg
sbb
mov
enter
cmps
jno
loop
jns
das
inc
xor
xlat
int3
ror
add
cmp
xor
loope
xor
jo
jo
ds
and
and
shl
xchg
mov
or
jge
dec
sar
daa
and
adc
iret
js
out
dec
ss
test
mov
out
aaa
mov
inc
xor
cs
sbb
jp
sub
jb
daa
repnz
out
jno
rol
pushf
mov
jb
test
mul
out
lahf
(bad)
pushf
dec
(bad)
push
test
mov
add
inc
repnz
add
jo
sub
repz
loopne
retf
xor
add
mov
das
xor
xor
fs
pop
push
shl
mov
jo
or
rcl
arpl
inc
into
xor
dec
cmp
dec
int
pop
je
xor
dec
into
xor
dec
pop
cmp
dec
dec
xor
add
push
or
jo
push
repz
(bad)
arpl
(bad)
xor
dec
into
xor
dec
outs
xor
retf
inc
into
xor
dec
into
xor
dec
dec
sti
das
and
push
je
pop
or
or
test
mov
cmp
xor
dec
outs
mov
mov
push
or
xor
dec
into
xor
xor
xor
adc
pop
jno
push
rcr
arpl
jne
xor
dec
into
xor
dec
fidivr
xor
mov
add
inc
into
xor
dec
into
xor
dec
mov
aas
xchg
mov
movs
dec
jo
sbb
jbe
xor
dec
into
xor
sbb
push
cmp
xor
dec
into
xor
dec
sahf
ds
push
retf
and
(bad)
xor
dec
sahf
ds
push
retf
inc
mov
xor
dec
into
xor
dec
sahf
cmp
dec
mov
add
dec
into
xor
dec
jle
mov
jae
mov
jo
add
lock
add
dec
into
xor
dec
dec
cdq
sub
xor
dec
into
xor
dec
into
xor
push
jl
nop
rol
into
xor
dec
into
xor
dec
(bad)
xor
mov
jecxz
dec
mov
xor
jle
xchg
rcl
into
xor
fisubr
mov
xor
dec
into
xor
dec
into
xor
dec
dec
adc
leave
push
or
xor
dec
into
xor
dec
(bad)
xor
fimul
movs
dec
repz
(bad)
jae
je
xor
dec
dec
xor
dec
scas
pop
add
int3
add
dec
into
xor
dec
into
cmp
(bad)
call
repz
and
arpl
ret
dec
out
xor
repnz
test
dec
into
xor
dec
outs
pop
inc
inc
mov
gs
or
into
mov
inc
into
xor
sbb
arpl
lds
cmp
xor
dec
out
cmp
ret
inc
cmp
xor
dec
into
xor
dec
fidivr
addr16
cmp
sahf
ss
into
arpl
xor
xor
dec
sahf
ss
into
arpl
lds
cmp
xor
dec
(bad)
cmp
cmp
test
inc
rcl
push
add
pop
mov
les
cmp
xor
dec
pop
cmp
dec
dec
xor
add
push
or
jo
push
repz
(bad)
arpl
(bad)
xor
dec
into
xor
dec
dec
test
dec
into
xor
dec
into
xor
dec
(bad)
push
lock
add
dec
into
xor
dec
scas
cmp
cs
sub
jb
add
test
jo
fimul
jbe
xor
dec
into
xor
dec
(bad)
push
lock
add
dec
into
xor
dec
scas
cmp
outs
sub
jb
add
cmps
sub
xor
or
xor
dec
into
xor
dec
(bad)
push
lock
add
dec
into
xor
dec
fidivr
push
xchg
repz
test
cmc
pop
add
push
mov
cmp
cmp
test
repz
fs
xor
dec
into
xor
dec
sahf
xor
sub
dec
add
test
add
dec
into
xor
into
bound
adc
gs
aaa
idiv
mov
xor
dec
into
xor
dec
into
xor
dec
dec
xor
(bad)
jecxz
dec
into
xor
dec
into
xor
dec
mov
test
not
int3
arpl
dec
into
xor
dec
mov
pusha
inc
outs
and
pop
pop
cmp
mov
je
xor
dec
(bad)
cmp
je
xor
dec
into
xor
dec
outs
xor
dec
dec
or
xor
dec
into
xor
dec
mov
sbb
retf
ret
or
xor
dec
into
xor
dec
mov
xor
sub
sub
test
not
int3
arpl
dec
mov
pusha
inc
outs
and
pop
xlat
stc
jp
nop
lds
cmp
xor
dec
mov
xor
icebp
jp
and
xor
dec
into
xor
dec
mov
xor
icebp
jp
lock
dec
into
xor
dec
into
xor
dec
sahf
push
or
push
or
xor
dec
into
xor
dec
scas
cmp
sti
stos
test
repz
hlt
cmp
shr
scas
sub
test
pop
icebp
xor
jg
add
jns
jne
stc
dec
mov
sub
push
jl
xor
(bad)
jb
dec
mov
outs
lea
outs
mov
cwde
xor
sar
std
dec
jmp
nop
pop
imul
xchg
xchg
(bad)
pop
leave
xchg
or
into
dec
jae
dec
es
and
iret
int
jecxz
stc
shr
mov
shl
jns
test
jne
ds
and
jle
jl
fiadd
jo
adc
jno
fdivrp
js
inc
and
fld
jo
push
xchg
add
rol
mov
fadd
pop
dec
sbb
jl
xchg
sub
xor
aaa
xchg
inc
xor
ret
ror
repz
cli
jecxz
dec
cmps
xor
dec
fist
or
(bad)
xor
xchg
inc
(bad)
mov
adc
popf
xor
xchg
sub
shl
mov
dec
adc
fs
dec
jbe
cmp
(bad)
rol
sar
and
mov
xchg
pop
dec
mov
ds
and
dec
mov
(bad)
ins
rol
(bad)
fld
adc
xchg
bound
cli
popf
retf
dec
mov
xor
dec
or
sti
mov
and
push
and
dec
icebp
adc
iret
js
fcom
adc
lock
dec
mov
imul
ins
cmps
add
jle
cmp
imul
and
add
pushf
hlt
or
fdiv
or
fdiv
or
fdiv
or
fdiv
pop
stos
fld
push
test
lods
ins
pop
mov
rcl
xor
pop
or
lods
xor
push
mov
pop
stc
(bad)
push
push
sbb
iret
xor
jmp
test
lods
ins
pop
mov
xor
aad
xor
jecxz
mov
stc
rol
push
sbb
iret
xor
jecxz
xchg
push
xchg
test
stc
rol
push
sbb
iret
adc
inc
lods
scas
jl
test
test
test
(bad)
pop
mov
xor
in
pusha
cwde
jecxz
scas
push
mov
push
cwde
mov
cmp
xchg
jecxz
mov
stc
rol
push
sbb
iret
adc
mov
sbb
mov
add
fdiv
cmp
in
xor
sub
test
scas
das
test
cmp
in
xor
lds
xor
push
stc
or
lods
stc
dec
mov
mov
cmp
in
sbb
push
pop
sub
push
add
(bad)
repnz
in
xor
in
add
stos
push
invd
ficom
or
push
scas
push
mov
wbinvd
cli
push
jmp
sub
test
cli
xlat
jbe
pop
(bad)
repnz
cld
fsubr
xor
and
iret
sbb
push
pop
sub
push
add
(bad)
repnz
in
xor
call
(bad)
xor
in
inc
lahf
pop
stc
sbb
push
push
call
mov
rcl
xor
in
adc
loope
push
in
xor
pop
mov
dec
mov
(bad)
repnz
in
xor
jecxz
add
aam
push
xchg
or
dec
ret
cli
mov
repnz
in
xor
out
iret
push
jl
in
gs
mov
push
stc
aam
push
pop
push
xchg
cmp
xchg
in
push
cwde
call
stos
or
pop
(bad)
in
call
mov
push
clc
fucom
or
ret
daa
push
xor
push
call
jbe
xchg
leave
inc
cmp
or
bnd
fdiv
inc
mov
push
call
inc
xor
iret
inc
sub
dec
retf
jl
into
push
mov
add
fwait
dec
fnstenv
xor
in
mov
outs
mov
push
mov
sub
jo
mov
rcl
fcomp
(bad)
sbb
test
mov
ja
fsub
push
loop
mov
mov
enter
out
xor
sub
outs
push
cmp
jg
sbb
inc
jle
sbb
fmul
ror
sbb
aaa
stos
dec
dec
retf
ss
dec
inc
xor
int3
ror
das
sar
bound
repnz
int
xlat
je
popa
ret
lock
fld
jo
out
mov
lds
stc
and
mov
ss
mov
retf
cs
xor
rcl
mov
dec
mov
add
xchg
movs
xor
jnp
ret
lock
adc
dec
mov
sbb
mov
xor
mov
jno
jmp
push
push
out
push
mov
call
add
iret
enter
mov
mov
(bad)
add
inc
aad
mov
ins
sbb
inc
popf
dec
fldenv
test
std
repnz
sbb
sub
push
mov
sub
push
mov
sub
push
mov
sub
push
mov
sub
push
mov
sub
push
mov
sub
push
mov
sub
cmps
lods
sbb
adc
mov
lahf
jns
ret
lahf
enter
cs
mov
sub
in
sub
adc
sub
es
jl
ss
fsub
(bad)
mov
jl
(bad)
mov
in
es
mov
or
ss
fsub
(bad)
mov
jl
push
mov
and
sbb
adc
push
sub
loop
dec
aaa
sub
and
sbb
adc
das
xor
mov
leave
push
adc
and
adc
sbb
mov
jns
loope
mov
es
mov
daa
or
xchg
fwait
jmp
and
pop
sub
adc
sbb
mov
xchg
sbb
and
adc
xchg
loop
sub
push
and
adc
aas
test
pop
sub
and
sbb
sbb
sbb
sbb
pop
out
int3
loopne
mov
scas
dec
aas
int3
push
sbb
in
pop
and
adc
movs
mov
jl
cmps
mov
jae
dec
js
shl
sbb
xchg
jne
adc
pop
sbb
cmps
nop
mov
push
inc
sbb
rcr
dec
inc
inc
and
push
sbb
sub
sub
adc
pop
cmp
push
mov
jge
and
es
sbb
and
adc
iret
mov
and
adc
das
sbb
inc
xchg
ds
inc
mov
mov
add
adc
push
sub
movs
adc
adc
adc
sub
push
mov
and
and
and
sbb
ins
mov
das
adc
pop
mov
jae
sbb
and
adc
adc
sub
out
lea
out
fadd
mov
sbb
adc
es
adc
adc
adc
sub
adc
mov
js
and
and
sbb
lods
sub
sbb
pop
mov
sub
and
mov
inc
es
sub
and
sbb
(bad)
sbb
adc
mov
js
and
and
sbb
lods
mov
das
adc
pop
mov
sub
and
mov
inc
es
pop
jnp
jns
adc
adc
sub
adc
mov
js
and
and
sbb
adc
sub
jne
adc
lahf
lea
pop
mov
js
inc
jmp
repnz
dec
dec
jle
mov
jge
rol
adc
pop
mov
sbb
test
addr16
loop
sub
dec
and
adc
pop
sub
inc
aas
sbb
dec
mov
xor
out
mov
push
fwait
jae
mov
js
inc
out
mov
adc
aas
test
mov
adc
das
sbb
dec
outs
mov
jb
inc
js
mov
shl
sbb
adc
imul
jae
push
jmp
jle
aas
pushf
jg
mov
fs
call
cmp
sbb
and
lea
sbb
retf
add
cmp
das
adc
add
call
xchg
jl
cmp
and
adc
sbb
pushf
sub
out
fdivr
es
sbb
adc
dec
out
ins
sub
pop
sbb
ins
mov
scas
sbb
sub
adc
das
add
das
adc
pop
adc
sbb
adc
das
and
sbb
fistp
retf
ins
adc
fwait
adc
sub
or
push
mov
ds
sbb
mov
adc
das
adc
dec
pop
data16
and
adc
dec
popf
int3
and
mov
sbb
adc
pop
mov
adc
and
sbb
add
es
adc
adc
add
mov
das
adc
dec
mov
fwait
push
mov
adc
sbb
sbb
das
rcl
sbb
inc
mov
adc
das
shl
sbb
adc
pop
mov
and
sti
adc
sub
or
push
fwait
cmp
and
mov
mov
and
adc
adc
inc
and
adc
sbb
retf
or
and
and
sbb
mov
and
adc
adc
jecxz
jo
js
and
and
sbb
adc
dec
(bad)
in
mov
das
adc
pop
mov
sub
sbb
inc
and
adc
sbb
jne
adc
fild
mov
call
mov
and
adc
sbb
sub
das
adc
fcomip
xchg
cli
and
adc
lahf
mov
pop
dec
int
ret
jne
das
adc
scas
jbe
jp
jecxz
es
outs
sub
sub
adc
es
adc
adc
pop
adc
es
adc
adc
(bad)
cmp
es
jne
adc
adc
sub
out
lea
out
fadd
mov
sbb
adc
pop
and
sbb
sbb
cmps
nop
mov
push
inc
sbb
rcr
dec
inc
inc
and
push
sbb
lods
mov
das
adc
push
jmp
jle
add
popa
sub
and
sbb
sub
das
adc
scas
stc
push
jle
fdivr
mov
and
adc
iret
sbb
out
pushf
inc
pop
mov
aaa
sub
jne
adc
das
adc
out
mov
and
pop
movs
and
sbb
dec
outs
ins
mov
das
adc
dec
mov
pop
out
out
fadd
mov
and
sbb
adc
mov
pop
dec
enter
sub
adc
lods
and
mov
sbb
adc
out
mov
xchg
int3
retf
loop
sbb
adc
push
jmp
jle
add
mov
das
adc
pop
sub
das
test
sbb
fdivr
mov
and
adc
dec
out
pushf
inc
call
es
out
mov
and
pop
movs
and
sbb
dec
outs
lods
mov
das
adc
out
mov
mov
lock
sar
sub
sbb
adc
das
and
les
fwait
jmp
mov
mov
and
adc
out
mov
xchg
int3
retf
loop
sbb
adc
dec
out
pop
gs
mov
jl
pop
mov
jno
clc
jl
inc
out
int3
jnp
mov
lods
cli
inc
rcr
xchg
mov
jns
mov
dec
mov
inc
(bad)
jo
call
sbb
jl
into
push
mov
add
inc
cwde
dec
imul
xchg
dec
stc
add
sar
jo
loope
inc
(bad)
dec
mov
outs
ficom
(bad)
mov
call
pop
shr
shl
jns
or
dec
mov
aad
mov
or
adc
shr
mov
jns
xor
jl
cs
mov
(bad)
enter
int
icebp
add
jp
lods
jns
dec
mov
or
xor
dec
xchg
into
stos
(bad)
les
es
jae
aad
aas
outs
add
stc
xchg
mov
loopne
adc
mov
mov
int
jmp
or
adc
push
sbb
mov
jbe
imul
mov
dec
mov
sub
and
jge
jg
push
loopne
mov
out
or
jp
addr16
out
mov
adc
test
mov
dec
fisubr
add
in
nop
fcmovbe
mov
jg
pop
jnp
loopne
mov
(bad)
mov
push
mov
jp
dec
fild
and
jmp
test
movs
into
mov
jmp
in
and
mov
rol
sbb
aaa
mov
and
ins
outs
jmp
pop
pop
test
xlat
jge
and
inc
sbb
rcl
add
jbe
add
inc
pop
add
or
rcr
xchg
push
xchg
dec
ror
dec
sbb
rol
xchg
rcl
and
adc
inc
sbb
xor
jbe
stos
mov
in
cs
repz
and
ss
mov
shl
sbb
shl
in
repz
mov
ja
stos
loopne
retf
sub
arpl
jo
and
sbb
dec
mov
sbb
inc
sbb
shl
fs
shr
and
stos
mov
in
cs
and
sbb
jno
dec
mov
sbb
inc
sbb
xor
jbe
stos
mov
in
cs
repz
and
push
in
mov
shl
sbb
shl
in
jne
sbb
cmp
(bad)
mov
fwait
clc
mov
std
and
dec
sbb
sbb
sub
inc
sbb
shl
fs
shr
and
stos
mov
jnp
pop
push
and
mov
rol
sbb
shl
mov
xchg
dec
adc
aam
sbb
rol
in
xchg
xchg
sbb
inc
sbb
mov
push
jle
mov
out
scas
aas
mov
cs
repz
mov
aas
mov
mov
stc
adc
mov
add
mov
jo
jg
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
aam
pop
jge
repz
dec
mov
push
pop
push
push
xchg
test
pop
(bad)
inc
jle
push
cmp
inc
xor
data16
mov
push
movs
mov
fcmovnb
cld
or
std
mov
xchg
jmp
les
iret
ins
mov
jmp
push
xor
out
(bad)
mov
mov
jl
dec
inc
test
jne
div
sub
sub
jmp
outs
jbe
lods
jp
inc
mov
jo
and
stos
inc
inc
movs
inc
(bad)
nop
adc
sub
ror
add
scas
call
or
xchg
ja
sub
sub
iret
clc
cli
in
sti
enter
xchg
mov
fdivrp
js
inc
cmp
push
xor
sub
ds
mov
retf
inc
outs
bound
(bad)
inc
jle
dec
ret
lock
jle
and
loop
or
ficom
push
repz
mov
jo
stc
push
js
xchg
adc
sar
mov
pop
ss
in
int
sbb
leave
inc
in
in
dec
mov
fmulp
jne
xchg
shl
sbb
fisttp
(bad)
inc
push
cdq
inc
lds
jo
sub
mov
or
lea
lods
retf
lea
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
cli
mov
push
mov
mov
jmp
neg
out
stos
mov
pop
dec
jle
repnz
ret
in
mov
out
mov
sub
ret
in
mov
in
mov
mov
push
sbb
retf
xchg
dec
fcom
inc
pop
mov
mov
in
mov
in
mov
jmp
aad
movs
xchg
mov
ret
jmp
mov
in
out
xlat
hlt
fisttp
aad
movs
xchg
mov
ret
in
mov
jmp
mov
js
adc
shl
je
mov
in
mov
in
mov
add
mov
sbb
jg
in
in
in
in
jg
ret
in
mov
in
mov
loopne
cld
inc
(bad)
repz
scas
cmp
dec
cli
jae
ret
in
mov
loopne
jo
test
mov
jns
int
sbb
xchg
popf
aad
mov
mov
sbb
sti
jg
ins
sub
in
mov
in
mov
les
mov
in
jnp
sahf
fdivrp
mov
(bad)
(bad)
xlat
adc
mov
inc
in
in
xlat
adc
retf
xchg
popf
fdivr
jbe
repnz
sbb
pop
test
mov
jae
ret
call
mov
stos
ins
pop
cmc
fiadd
stos
xor
jo
ret
loop
test
fdiv
cli
mov
mov
mov
in
enter
les
inc
ins
stos
xor
jo
ret
out
(bad)
mov
cmc
xchg
lock
shl
mov
mov
in
mov
in
aad
ret
and
ret
loope
mov
mov
pushf
dec
(bad)
mov
ret
in
mov
jmp
adc
rcl
fwait
jp
fstp
adc
repz
sub
ret
in
mov
in
mov
jmp
inc
enter
cs
cmp
mov
sbb
movs
mov
mov
bnd
ret
in
mov
in
mov
pop
std
retf
std
sub
mov
jae
ret
jecxz
mov
bound
jo
in
mov
in
int
inc
sub
jns
xchg
pop
je
je
add
jns
ret
jmp
mov
les
mov
jecxz
add
and
mov
in
mov
in
mov
out
ret
ins
in
and
scas
mov
jns
ret
out
ret
ins
jecxz
fs
das
or
(bad)
call
test
ret
stos
mov
jg
jns
test
ret
cmps
mov
inc
mov
ret
in
mov
loop
mov
(bad)
or
js
clc
mov
jnp
xor
in
ficom
pop
or
inc
in
in
inc
pop
cmp
aam
mov
in
mov
or
ret
fucom
fcmovbe
es
dec
cs
hlt
cmp
es
mov
mov
jp
ins
xchg
jmp
dec
in
adc
popf
dec
xchg
fcomip
or
pop
movs
mov
stos
mov
aad
retf
sti
mov
fistp
loopne
pop
mov
pop
mov
jnp
ret
fucom
fcmovbe
es
dec
cs
hlt
cmp
es
mov
cmc
sub
imul
aam
mov
in
mov
in
cld
inc
or
ret
fucom
fcmovbe
es
dec
cs
hlt
cmp
es
mov
mov
jp
in
xchg
jmp
jns
int
sub
outs
mov
mov
std
sub
std
sub
repz
das
or
(bad)
call
stos
mov
add
mov
stos
mov
mov
out
aam
mov
jmp
mov
fst
cs
mov
jns
ret
in
ret
xor
ins
mov
shl
test
dec
(bad)
mov
jecxz
mov
mov
sar
mov
(bad)
sti
mov
fistp
mov
hlt
sub
cs
jnp
mov
mov
jns
ret
out
(bad)
mov
xchg
mov
mov
loope
mov
mov
cwde
jo
ret
in
mov
mov
jg
or
scas
mov
jns
les
jo
repnz
sbb
enter
ret
xlat
fs
das
or
(bad)
call
stos
mov
mov
push
jae
mov
ins
jae
scas
pop
inc
(bad)
std
sub
jl
jp
sub
ret
jmp
adc
sub
in
mov
in
mov
pop
(bad)
jg
ins
xchg
jmp
jns
ret
in
mov
int3
rol
movs
mov
and
jp
lods
xchg
jmp
jns
ret
mov
in
jae
mov
add
lahf
cs
aad
xchg
stos
mov
mov
jae
ret
jmp
mov
fstp
outs
loopne
pop
mov
fistp
loopne
pop
mov
pop
mov
jnp
ret
fucom
fcmovbe
es
dec
cs
hlt
cmp
es
mov
mov
jp
in
xchg
jmp
jns
ret
jmp
add
mov
in
jae
ret
in
mov
in
mov
in
xchg
add
stos
mov
sar
mov
dec
popf
or
jo
test
pop
and
mov
(bad)
push
(bad)
stos
mov
mov
fld
repz
jne
jmp
xchg
cmp
jp
das
out
add
ja
dec
pop
jb
test
xor
pop
jae
sbb
xor
jo
test
sub
in
mov
cmp
ret
jmp
stc
cmp
into
xchg
jmp
leave
test
push
adc
std
push
lods
fild
out
inc
mov
inc
mov
out
and
xchg
xor
jo
cld
add
mov
enter
out
bound
sti
adc
paddb
cwde
iret
shl
xor
call
daa
dec
mov
(bad)
int
adc
sub
and
ror
iret
fdiv
fdiv
sbb
sar
and
ds
popf
dec
test
test
push
aas
xchg
sub
shl
xor
inc
dec
mov
jno
into
pushf
jae
inc
ss
dec
push
repz
aad
out
mov
in
fdiv
cmp
loope
loop
hlt
jno
int
shl
cmp
outs
test
loop
in
cmc
pop
loope
mov
jno
mov
sahf
adc
push
push
and
mov
xchg
cmp
mov
retf
xchg
inc
stc
cdq
rcl
push
dec
pop
movs
aas
dec
inc
cmp
shl
cmp
ret
or
push
xchg
jg
jno
sahf
dec
shl
imul
fist
and
stos
nop
loope
mov
xor
pop
pop
ja
mov
xchg
xlat
rcr
(bad)
sub
movs
pop
aam
cdq
pop
inc
adc
movs
outs
in
and
sar
xchg
push
xchg
mov
xchg
lods
mov
push
rcr
leave
out
mov
in
mov
(bad)
fidiv
xchg
pop
in
imul
sbb
not
mov
or
ror
xchg
pop
in
movs
popa
in
loope
cmp
popf
enter
add
xor
in
movs
outs
in
and
(bad)
mov
xchg
outs
in
and
mov
outs
add
mov
pop
in
movs
outs
in
and
xchg
mov
popf
popa
pushf
hlt
mov
jp
ins
pop
aam
xchg
push
in
ror
push
ins
movs
stos
mov
cld
mov
dec
(bad)
mov
add
out
pop
les
adc
ss
pusha
arpl
jl
jne
test
imul
mov
dec
dec
out
test
je
scas
inc
jne
push
sub
cmps
dec
xor
(bad)
gs
add
or
in
adc
lods
cwde
dec
leave
xor
and
ja
cmp
dec
cwde
dec
imul
add
js
test
xor
ds
mov
fadd
jo
shl
ficomp
loop
int3
inc
into
add
push
stos
loop
js
cld
jo
inc
das
jmp
jae
iret
dec
in
and
data16
jecxz
mov
pop
cmp
xchg
dec
push
iret
mov
jae
pop
mov
inc
dec
push
icebp
arpl
xor
pop
sbb
or
dec
push
xor
lods
ficom
cmps
inc
xchg
pop
mov
shl
ret
push
movs
jns
outs
mov
shr
cs
fimul
jb
addr16
inc
ret
outs
icebp
popa
cwde
int
shl
xor
rcl
cmps
leave
movs
mov
xchg
add
not
call
jg
sbb
ror
xor
int
shl
test
lock
and
pushf
pop
jg
ins
cmps
add
fldcw
retf
sahf
dec
cdq
sbb
xlat
jmp
sahf
push
shr
sahf
push
shr
sahf
push
shr
xor
cs
push
sar
cmps
call
dec
pop
jg
pop
mov
push
in
shl
in
cmp
repz
fild
mov
add
and
icebp
mov
sahf
push
rcr
pop
daa
mov
push
punpckhbw
mov
mov
adc
pop
push
scas
imul
jae
int
cmps
addr16
jg
addr16
(bad)
pop
cmp
dec
imul
xchg
add
sub
xor
sahf
push
shr
lahf
retf
mov
jae
int
cmps
addr16
jg
addr16
(bad)
pop
cmp
dec
mul
push
xchg
add
enter
jns
nop
movs
push
xchg
mov
pop
dec
add
pop
out
dec
aaa
jb
das
out
pop
cmp
repz
call
imul
adc
and
sahf
pop
rcr
daa
call
mov
into
add
and
div
push
xchg
xchg
sbb
ja
inc
dec
push
jo
adc
mov
sub
addr16
adc
mov
sub
ficomp
jo
stc
push
jg
jne
test
outs
int3
jo
dec
test
lock
dec
dec
int
pusha
lds
push
jnp
xchg
jo
ja
dec
dec
ja
dec
dec
jno
or
aad
dec
ja
dec
dec
ja
dec
outs
jbe
dec
outs
push
or
inc
dec
mov
and
in
(bad)
test
add
dec
ja
dec
dec
ja
dec
das
jns
jg
nop
repnz
into
fdiv
test
ja
dec
dec
ja
dec
push
das
adc
test
ja
dec
dec
ja
dec
das
jle
fldenv
retf
test
add
inc
out
dec
dec
ja
dec
push
dec
dec
pop
ja
shl
rcl
inc
mov
dec
iret
jbe
dec
call
pop
push
cmp
dec
inc
test
ja
dec
dec
ja
dec
dec
not
hlt
inc
ja
dec
dec
ja
dec
das
jle
dec
jg
movs
jo
push
pop
repz
test
jbe
xchg
jo
repz
es
jbe
retf
mov
stos
xor
push
pop
cld
iret
std
shr
jns
test
push
test
inc
icebp
pop
outs
into
add
(bad)
shl
mov
mov
arpl
jecxz
push
bound
jmp
add
mov
push
test
inc
mov
in
in
sar
jo
loop
sbb
cmp
loope
aaa
scas
data16
push
fsubr
mov
(bad)
dec
jbe
cmp
fadd
shr
cmp
test
jle
fdivp
jo
in
stc
call
cs
out
ja
xor
mov
mov
cmps
add
in
repnz
dec
fidiv
cwde
jns
push
mov
sbb
push
dec
xor
mov
cwde
stc
jecxz
dec
cmps
xor
fcmovbe
mov
jns
cmp
and
out
int
aam
dec
out
lods
(bad)
retf
add
mov
rcr
xchg
cs
mul
icebp
fdiv
adc
shr
rcr
lods
mov
(bad)
pop
lock
or
xchg
popa
rcl
dec
push
shl
shl
cdq
mov
outs
iret
ins
xchg
jae
sub
arpl
push
mov
jmp
sbb
xchg
call
sbb
xchg
pop
pop
dec
retf
fwait
add
xchg
call
sbb
xchg
fcomp
dec
dec
jp
test
push
pop
test
call
push
fst
push
pop
mov
out
dec
(bad)
xchg
mov
sbb
xchg
clc
cmps
and
dec
(bad)
mov
pop
xchg
cmp
shl
out
stos
shl
out
stos
loope
ins
retf
fild
out
stos
shl
out
stos
shl
jmp
xor
push
call
adc
stos
jno
loop
shl
mov
shl
out
stos
xor
out
mov
xchg
stc
mov
loope
stos
shl
out
stos
loope
ins
retf
fild
out
stos
shl
out
stos
mov
das
aaa
mov
cmp
xchg
fsub
out
stos
shl
out
stos
jno
loop
shl
mov
shl
out
stos
shr
adc
inc
fcom
(bad)
add
ins
xlat
and
stos
push
and
stos
mov
(bad)
push
rcl
out
stos
shl
out
stos
mov
das
aaa
mov
sbb
xchg
fsub
out
stos
shl
out
stos
mov
and
stos
shl
out
stos
xor
out
lock
loopne
out
cwde
push
or
inc
fst
outs
test
fsub
out
stos
shl
out
stos
mov
out
rcl
out
stos
jno
out
rcl
out
stos
shl
out
stos
popa
sub
dec
outs
pop
mov
jmp
cwde
(bad)
mov
shl
out
stos
shl
out
stos
popa
sub
dec
pop
inc
xor
fist
popa
sub
dec
das
ja
xchg
fbld
out
stos
push
and
stos
mov
(bad)
push
rcl
out
stos
shl
jmp
sbb
fcom
fbld
shl
jmp
sbb
adc
ins
xlat
and
stos
shl
out
stos
loope
ins
dec
fild
out
stos
mov
and
stos
shl
out
stos
shl
out
stos
xchg
and
iret
call
adc
xchg
fsub
out
stos
shl
loope
mov
push
jecxz
bound
fsubp
das
lods
shl
out
stos
xor
jmp
loopne
dec
enter
stos
xchg
and
stos
loopne
out
jmp
sub
adc
call
fcom
(bad)
adc
ins
xlat
and
stos
and
dec
retf
fsub
out
stos
shl
out
stos
jno
add
shl
out
stos
shl
out
stos
shr
xchg
cmp
(bad)
adc
xchg
sbb
sahf
mov
dec
mov
push
adc
rcl
rcl
shl
out
stos
shl
out
stos
shl
out
stos
shl
out
stos
loope
out
(bad)
xor
rcl
adc
xchg
cwde
mov
rcr
mov
out
stos
shl
out
stos
push
sub
stos
mov
pop
nop
sbb
(bad)
iret
push
fist
shl
jmp
rcr
mov
out
stos
xor
mov
pushf
jl
jecxz
pop
not
shl
jmp
ret
fbld
out
stos
jno
loop
shl
mov
shl
out
stos
loope
and
sbb
xchg
fcom
out
stos
shl
out
stos
shl
out
stos
xchg
and
dec
call
adc
mov
shl
out
stos
shl
out
stos
push
and
stos
shl
mov
shl
out
stos
shr
or
and
stos
shl
out
stos
shl
out
stos
jno
add
dec
cmp
loopne
dec
enter
stos
shl
out
stos
shl
out
stos
shl
out
stos
and
outs
retf
frstor
out
stos
shr
or
and
stos
shl
out
stos
inc
sub
adc
dec
jnp
loopne
dec
enter
stos
shl
out
stos
shl
out
stos
shl
out
stos
jno
loop
shl
mov
shl
out
stos
push
sub
adc
call
fist
(bad)
icebp
das
ins
xlat
and
stos
shl
out
stos
push
and
stos
mov
(bad)
push
rcl
out
stos
shl
out
stos
push
sub
stos
loope
push
inc
mov
xchg
sub
imul
xchg
mov
adc
mov
shl
call
jbe
loope
stos
push
and
stos
mov
(bad)
push
rcl
out
stos
shl
out
stos
popa
sub
frstor
out
stos
shl
in
mov
out
rcl
out
stos
shl
out
stos
xchg
and
stos
loope
(bad)
xchg
fcom
out
stos
shl
out
stos
shl
loope
mov
js
imul
xchg
sbb
xchg
enter
in
fist
shl
out
stos
shl
call
mov
(bad)
(bad)
fist
cmp
xchg
fcom
out
stos
shl
out
stos
shl
in
mov
jbe
out
fcmovbe
out
push
fbld
shl
out
stos
and
add
inc
call
xlat
and
stos
shl
out
stos
push
and
stos
mov
out
rcl
out
stos
shl
out
stos
push
sub
stos
icebp
sub
push
cmp
fdivp
fbld
out
stos
shl
out
stos
icebp
sub
xchg
fsub
out
stos
push
es
and
out
stos
shl
jmp
adc
mov
shl
out
stos
add
add
dec
jnp
loopne
dec
enter
stos
shl
out
stos
mov
out
rcl
out
stos
shl
out
stos
jno
loop
shl
mov
shl
out
stos
adc
add
dec
(bad)
loopne
dec
enter
stos
xchg
sub
sub
adc
stos
shl
out
stos
and
outs
dec
frstor
out
stos
shl
out
stos
rol
out
stos
shl
out
stos
xor
out
rcr
pop
shl
out
stos
shl
out
stos
shl
out
stos
xchg
and
rcr
xchg
fadd
pop
mov
shl
out
stos
mov
das
(bad)
xchg
clc
clc
cmps
scas
fcom
fist
xchg
and
jge
daa
sub
out
stos
shl
out
stos
jno
in
dec
jmp
rcl
adc
das
ins
xlat
and
stos
shl
out
stos
xor
out
rcr
shl
out
stos
push
and
stos
mov
(bad)
push
rcl
out
stos
shl
out
stos
jno
out
stos
loope
(bad)
mov
adc
stos
push
and
stos
rol
mov
xchg
and
or
pop
iret
xchg
fsub
out
stos
shl
out
stos
xor
out
jo
call
push
shl
out
stos
shl
out
stos
push
and
stos
mov
(bad)
push
rcl
out
stos
push
and
stos
shl
pop
mov
mov
out
rcl
out
stos
xchg
and
stos
loope
(bad)
xchg
fcom
out
stos
shl
loope
mov
js
imul
xchg
jmp
js
jecxz
or
xchg
fsub
out
stos
xor
out
sub
sub
aam
inc
test
xchg
clc
sbb
xchg
fsub
out
stos
shl
out
stos
and
push
int
adc
mov
mov
(bad)
loope
fdiv
nop
in
or
xchg
push
pop
es
fcom
ficom
mov
sbb
xchg
test
outs
cmp
test
aam
rcr
dec
pop
add
push
pop
call
xchg
js
and
outs
inc
xlat
xchg
sbb
out
stos
shl
call
push
fst
out
stos
shl
out
stos
popa
sub
xchg
sbb
enter
xchg
mov
enter
mov
mov
xchg
xchg
push
adc
jbe
jp
das
retf
sub
sahf
inc
out
dec
dec
ja
dec
dec
ja
dec
das
jo
leave
jle
lods
cld
jbe
mov
sbb
mov
rol
rol
dec
mov
dec
dec
ja
dec
outs
jg
test
rcl
je
scas
mov
jbe
sub
push
dec
cmp
(bad)
xchg
mov
test
lock
cmp
jmp
(bad)
fadd
jo
push
xlat
ja
(bad)
adc
leave
and
mov
jmp
sub
mov
add
push
iret
repnz
rcl
je
mov
xchg
lock
out
xor
xchg
repz
stos
stos
jmp
cmp
ds
out
int
mov
or
aam
mov
bound
cmp
mov
sub
pop
popf
and
test
push
outs
xchg
sub
retf
sar
arpl
sar
outs
push
aas
sti
mov
pop
iret
fdivr
ror
repnz
out
addr16
xor
lds
jb
adc
mov
sti
add
jns
outs
cmps
retf
and
iret
sub
sub
lds
(bad)
sbb
cmp
mov
shl
xor
cmp
adc
(bad)
(bad)
mov
dec
loop
scas
iret
std
out
fsubr
cld
repnz
sub
dec
dec
push
xor
dec
push
push
std
test
mov
(bad)
sbb
adc
fbstp
xor
popa
push
mov
shr
xor
cmp
sar
mov
or
jno
add
repz
cwde
icebp
in
or
icebp
int
mov
xchg
jecxz
xchg
inc
xor
stc
std
in
or
icebp
dec
sbb
icebp
in
or
neg
cmp
icebp
(bad)
jecxz
scas
mov
and
xchg
shl
mov
clc
fnstsw
xchg
icebp
in
or
xchg
loope
sbb
pop
or
icebp
in
stos
or
in
or
iret
push
cmp
lahf
jecxz
scas
enter
ja
cmp
iret
push
and
jno
pop
cwde
icebp
lea
cwde
icebp
dec
sbb
icebp
in
or
mov
out
not
xor
iret
add
scas
clc
fdivr
mov
ins
imul
or
icebp
in
stos
mov
in
or
stc
lea
cwde
popa
in
cmp
in
or
icebp
in
push
cwde
push
stos
data16
cmp
fsub
xor
retf
popf
test
retf
movs
mov
xchg
outs
mov
pop
(bad)
and
dec
cmp
xor
arpl
dec
mov
dec
dec
ja
dec
dec
ja
dec
aas
jle
push
jp
mov
dec
mov
dec
mov
inc
fcmovb
into
in
icebp
lock
xchg
fmul
mov
dec
ja
dec
iret
push
pop
repz
adc
xor
jo
test
rcr
inc
jmp
jmp
pop
test
cdq
int3
dec
iret
int
cmps
fwait
stc
xchg
jb
jae
mov
dec
fnstenv
mov
sbb
arpl
dec
jns
in
jnp
dec
mov
sub
xor
jmp
jns
dec
mov
dec
in
rol
mov
and
stos
stc
push
int3
int
dec
mov
nop
push
sar
aad
test
stc
xchg
dec
popf
pushf
ret
aaa
ficomp
(bad)
sbb
dec
pop
out
cmps
jge
sbb
adc
sub
xor
shr
push
xacquire
xchg
(bad)
ret
fdiv
cmps
adc
ret
sub
daa
int
cli
inc
mul
call
dec
jbe
cmp
rol
shr
jecxz
int
mov
retf
xchg
mov
sbb
jae
add
or
cmp
xchg
jns
cmp
jge
jecxz
push
and
shr
xchg
imul
pusha
and
xchg
dec
imul
arpl
sar
cmp
lds
iret
jge
adc
cdq
pop
jbe
cmp
xlat
sub
in
dec
jmp
or
jp
mov
mov
jbe
retf
sub
cmps
cmp
sub
mov
hlt
inc
retf
ss
inc
retf
ss
dec
xor
lds
push
stc
les
hlt
inc
retf
ss
dec
ret
je
paddw
mov
ret
sub
repz
inc
aam
add
sahf
sub
xor
pop
fnstsw
and
and
and
lea
inc
mov
or
inc
cmp
lock
test
dec
ja
dec
dec
ja
dec
pop
jb
test
mov
repz
mov
inc
test
ja
dec
push
sub
dec
test
ja
dec
dec
ja
dec
dec
ja
dec
pop
mov
inc
push
jo
int
pop
test
ja
dec
dec
ja
dec
(bad)
mov
mov
push
adc
dec
dec
ja
dec
das
jnp
imul
jne
dec
ja
dec
dec
ja
dec
jg
cmp
inc
inc
mov
push
dec
(bad)
xor
mov
mov
dec
ja
dec
das
jp
stos
dec
inc
mov
dec
ja
dec
mov
mov
test
ja
dec
das
lock
jbe
mov
jmp
lock
fisttp
mov
dec
ja
dec
das
jns
jg
pop
or
add
dec
pop
and
dec
scas
jge
ins
jle
imul
pusha
mov
mov
js
test
pop
mov
outs
jle
add
dec
pop
mov
outs
or
std
sar
fidivr
xchg
mul
and
neg
scas
jmp
in
jmp
aas
sub
and
cmp
fcom
repz
je
sbb
out
inc
mov
add
xor
loopne
lods
xchg
mov
cwde
inc
mov
dec
jb
shl
xor
jmp
jp
inc
mov
dec
xor
jo
cmp
and
mov
jle
dec
cmp
xor
cmp
xchg
out
je
sbb
jecxz
adc
inc
inc
mov
pop
pushf
jo
clc
jo
sub
or
iret
in
test
jns
xchg
in
arpl
inc
out
fsubrp
and
inc
mov
adc
loope
jl
ficom
push
loop
rcr
jo
dec
enter
fldcw
sbb
cmc
inc
xor
popa
jb
jns
push
mov
and
into
push
pop
pop
(bad)
mov
dec
adc
xchg
mov
adc
icebp
or
mov
adc
and
and
pop
push
mov
dec
add
fdivp
or
xchg
inc
fbstp
imul
nop
inc
(bad)
stc
sbb
mov
icebp
sub
mov
dec
test
fadd
retf
xlat
fsub
test
xchg
adc
xlat
dec
out
xchg
xchg
and
push
jl
jp
das
retf
test
add
dec
out
dec
dec
ja
dec
mov
push
pop
repz
mov
xor
pop
mov
into
adc
test
xchg
test
aaa
push
mov
add
cmp
push
jns
test
push
cmps
pop
imul
xchg
leave
loope
ret
add
arpl
jle
into
shr
sub
mov
js
inc
xchg
int
clc
movs
cmp
call
xchg
daa
and
add
xor
into
ror
mov
pop
retf
inc
mov
dec
inc
test
jne
ds
xchg
test
cmc
jle
ret
shl
sti
push
mov
dec
inc
xor
xchg
and
mov
(bad)
add
out
sub
jecxz
cld
in
repz
dec
shl
(bad)
jne
(bad)
and
adc
fidiv
jb
push
stc
sbb
les
jnp
fdivp
iret
enter
retf
adc
or
es
add
cmc
pop
dec
jp
xchg
jo
shl
stc
mov
fmul
nop
popa
jmp
mov
push
mov
popf
cmp
cmp
mov
mov
jae
dec
mov
mov
aad
mov
int
xor
mov
enter
jmp
xchg
xchg
sub
push
add
outs
jle
test
loop
ss
(bad)
ss
(bad)
ss
(bad)
ss
lds
inc
jmp
sub
jmp
inc
jmp
cs
pop
bound
xchg
movs
out
(bad)
es
(bad)
xor
ret
leave
ror
nop
cmp
jae
xor
in
ss
ror
jae
(bad)
(bad)
ficomp
paddsb
dec
in
cmp
or
scas
mov
dec
in
call
(bad)
iret
aas
in
dec
in
jmp
jne
inc
(bad)
je
(bad)
mov
mov
cmp
pop
dec
mov
(bad)
paddsb
stc
push
in
jp
bound
(bad)
paddsb
icebp
push
ins
fisttp
in
(bad)
paddsb
dec
in
retf
inc
fmul
paddsb
stc
or
call
cld
loopne
es
les
and
(bad)
ds
lock
repz
lds
xor
xchg
(bad)
ror
cmp
xor
mov
jns
push
xor
ds
(bad)
mov
gs
pushw
dec
test
mov
push
jne
xchg
fld
xchg
lds
mov
push
shr
arpl
outs
rcl
test
push
rcr
and
lods
cmp
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
and
mov
lock
shl
adc
dec
push
dec
dec
daa
je
shl
rcl
dec
ja
dec
jg
sub
inc
inc
test
ja
dec
das
jo
leave
jle
movs
mov
and
data16
(bad)
clc
into
and
adc
mov
mov
pop
mov
push
rol
into
add
mov
pop
jmp
xor
arpl
mov
cmp
pop
mov
outs
jle
hlt
push
push
pop
mov
scas
test
and
rcl
xor
mov
cs
out
sar
in
in
mov
test
jbe
cmp
aad
loopne
inc
xchg
in
sbb
mov
sti
dec
push
mov
int
jp
leave
gs
push
jmp
sub
into
push
(bad)
(bad)
xchg
cli
jnp
dec
jp
inc
and
dec
push
xor
iret
ror
and
jno
into
mov
retf
sbb
(bad)
and
cs
jns
das
out
sub
xchg
and
dec
xor
mov
adc
sar
adc
vphaddbq
xchg
cmp
jp
out
int
cli
sti
jns
sbb
pop
dec
mov
in
cmc
jbe
jns
xchg
std
and
test
out
jb
mov
repnz
mov
mov
fucomip
mov
add
jle
aas
xchg
ds
mov
dec
test
add
inc
adc
test
add
in
ror
xchg
(bad)
sbb
fmul
add
xor
push
pusha
push
dec
add
pushf
pop
fld
out
(bad)
mov
pop
cmc
push
mov
mov
sbb
retf
add
sbb
ret
add
inc
mov
jne
es
sbb
ret
add
inc
mov
xchg
adc
xchg
cdq
lahf
gs
mov
add
sbb
pop
dec
test
add
scas
out
enter
jmp
shr
mov
add
and
sar
mov
and
fbstp
sub
repnz
fcomip
cmp
xlat
ds
jmp
cmp
lahf
mov
cmp
aad
cmp
(bad)
fadd
adc
fild
movs
fdivr
cmp
mov
retf
add
add
jmp
adc
lds
sbb
repz
push
pop
pop
cmps
inc
mov
mov
push
sbb
pop
inc
mov
adc
outs
out
test
imul
mov
ss
in
movs
or
cmp
jecxz
aam
or
fwait
add
inc
repz
xor
xchg
xchg
add
cmp
pusha
fdiv
add
dec
das
jnp
leave
dec
xchg
dec
mov
inc
aam
cs
pop
mov
pop
mov
pop
push
sti
(bad)
mov
ror
jecxz
push
scas
pop
push
mov
inc
or
into
dec
js
dec
cdq
dec
imul
adc
pop
(bad)
adc
ins
(bad)
ret
stc
jmp
retf
sub
inc
mov
sbb
cmc
ror
xor
mov
inc
jp
aad
jb
xchg
adc
cld
jnp
dec
and
add
iret
call
or
push
ror
cli
retf
mov
clc
div
xor
mov
jmp
fidivr
out
loop
jae
in
xor
jo
out
mov
dec
dec
mov
int
cmc
jo
push
aas
imul
or
into
push
(bad)
xor
jns
das
(bad)
cmc
cmp
sub
add
test
push
outs
inc
add
hlt
iret
test
push
aas
ss
int3
push
inc
cdq
adc
icebp
xchg
repnz
je
leave
mov
mov
hlt
test
cmc
jno
adc
in
(bad)
xor
enter
jb
sbb
or
loopne
mov
(bad)
cdq
shl
cs
(bad)
xor
fldenv
aam
aad
fs
aam
fs
aam
fs
aam
addr16
inc
aam
jmp
clc
pop
ret
adc
fs
aam
xchg
inc
aam
out
mov
xor
movs
shl
mov
fs
aam
imul
xor
xlat
dec
ins
xchg
xchg
fidiv
aam
pusha
sub
cmp
scas
in
in
sahf
in
pop
scas
in
in
scas
in
push
pop
cmps
in
aam
fadd
lods
xchg
ret
in
or
scas
in
aad
test
cmps
shl
aam
aam
xchg
fisub
mov
ins
fwait
aam
sub
les
fs
pushf
bound
jp
xchg
(bad)
aam
push
sub
sbb
ror
test
iret
adc
rcr
xor
sahf
aam
retf
cmp
sbb
adc
xor
mov
xor
(bad)
fbld
and
xor
sub
and
mov
mov
les
std
dec
outs
jle
or
jb
dec
adc
int3
push
js
cmps
pop
mov
mov
stos
mov
and
mov
popf
push
cmps
iret
es
(bad)
fadd
jo
xchg
inc
xchg
push
mov
outs
(bad)
push
out
hlt
adc
inc
jle
out
inc
es
jns
xchg
ficomp
loope
cmp
into
add
loopne
loope
push
ror
out
mov
xchg
sbb
ror
mov
jl
dec
add
pop
in
ret
outs
adc
cmp
aad
pop
mov
dec
rcr
jecxz
int
dec
xlat
jmp
scas
aaa
dec
jne
jecxz
loope
xor
je
xchg
hlt
xchg
mov
sahf
sbb
and
jo
loope
sahf
mov
ret
add
imul
mov
jp
mov
xor
mov
enter
inc
(bad)
xor
pop
sub
ror
mov
dec
inc
out
dec
loop
addr16
cli
repz
retf
test
(bad)
stc
stc
pop
leave
in
loopne
mov
adc
jle
das
xchg
ds
sub
jecxz
frstor
shl
sti
sahf
add
int
jg
jns
out
js
cmc
out
js
cmc
out
js
cmc
out
js
std
jno
add
mov
out
js
bnd
in
mov
loopne
std
xchg
and
gs
js
adc
out
cli
lea
imul
js
dec
mov
enter
inc
dec
int3
xlat
inc
dec
int3
xlat
inc
jg
sahf
push
inc
cld
out
inc
int3
xlat
inc
dec
int3
xlat
inc
bswap
pop
es
cs
jne
(bad)
js
neg
and
mov
out
retw
mov
enter
push
js
push
and
loop
cmps
mov
retf
jbe
loop
mov
dec
jle
jle
repnz
fbstp
mov
(bad)
jp
(bad)
xchg
add
jl
aad
jne
out
sub
mov
imul
icebp
sub
imul
sub
fdivp
cdq
icebp
arpl
je
jns
jg
test
mov
jle
and
jb
pushf
movs
imul
sar
push
stc
xor
iret
ins
push
adc
mov
ins
(bad)
fadd
jo
adc
jo
ss
outs
mov
neg
dec
std
xchg
leave
stos
not
(bad)
xchg
pop
cmc
out
retf
jno
xor
shr
adc
std
loopne
(bad)
jns
xchg
repz
sbb
out
inc
mov
push
mov
shr
je
jns
xchg
cld
inc
cmps
dec
out
adc
mov
lds
mov
inc
sub
mov
into
sub
add
fdiv
cmp
icebp
mov
in
jl
int
xor
jo
ds
mov
enter
add
loopne
jge
in
in
sub
jle
icebp
inc
into
call
das
and
adc
aaa
push
adc
js
inc
int
loopne
hlt
fnstenv
int
cmps
pushf
fst
push
lds
imul
jg
inc
xor
xchg
mov
pop
outs
xchg
adc
inc
mov
outs
(bad)
loope
xor
cld
inc
jb
lock
dec
and
sahf
popa
out
(bad)
repz
xchg
cli
in
sub
cmps
mov
outs
pop
loope
stc
push
jecxz
iret
push
pop
mov
ror
rcr
jmp
outs
ficom
lock
movs
jg
jp
retf
xchg
cmps
rcl
out
iret
retf
outs
ficom
(bad)
lahf
ficom
inc
outs
(bad)
xchg
(bad)
punpckhdq
outs
fcom
iret
pop
ficom
(bad)
outs
ficom
iret
shr
in
or
ror
int3
pop
ficom
inc
fs
into
das
mov
inc
outs
(bad)
xchg
(bad)
(bad)
outs
ficom
(bad)
push
adc
mulps
imul
ficom
(bad)
outs
ficom
retf
xchg
(bad)
outs
rcl
not
push
lods
jg
mov
push
ror
pushf
(bad)
outs
fist
iret
pop
jmp
outs
ficom
jno
movs
jmp
out
lods
dec
sbb
pop
not
lods
(bad)
lods
add
loopne
jae
out
adc
pop
cld
(bad)
out
cmc
mov
scas
add
adc
mov
sbb
jne
mov
(bad)
jno
(bad)
leave
jle
lods
cld
jbe
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
push
xor
jle
push
das
jb
dec
add
int3
sub
fiadd
xchg
fild
fld
jb
jge
fdivr
inc
sub
retf
cmp
and
scas
hlt
int
adc
into
lock
int
or
leave
aad
adc
jno
int
icebp
int3
inc
out
push
push
xchg
xor
xor
xor
jo
jo
into
mov
retf
ds
call
jge
cmp
(bad)
xor
aad
adc
out
repz
loop
push
repnz
and
jmp
push
xchg
xchg
push
mov
xor
push
mov
test
int
mov
sbb
jns
loope
sub
sbb
(bad)
pop
aam
and
mov
(bad)
cdq
adc
sbb
jbe
shr
xor
in
arpl
fdiv
cmp
inc
add
jo
call
and
jns
out
dec
mov
(bad)
test
mov
fwait
sbb
enter
mov
rcl
test
mov
jae
fnstenv
xor
pop
out
lds
jmp
xor
jmp
xor
jmp
xor
sbb
fs
hlt
hlt
push
call
test
data16
hlt
test
jmp
fs
cmps
aas
jg
inc
adc
sbb
xor
mov
mov
pusha
mov
lock
inc
xchg
jns
mov
xor
in
and
push
retf
das
imul
or
inc
inc
xchg
add
adc
repnz
and
push
retf
das
imul
pop
or
inc
xor
test
cmps
xor
push
sub
and
leave
pop
jnp
cdq
or
inc
adc
mov
sbb
cdq
or
inc
rcr
mov
xchg
lods
cmp
ins
xchg
jmp
sbb
pop
das
imul
or
inc
loop
fs
test
or
inc
adc
mov
sbb
cdq
or
inc
loop
xor
(bad)
movs
xor
mov
sub
dec
inc
fs
mov
jns
cmps
xor
mov
mov
inc
rcr
or
(bad)
mov
cmps
xchg
imul
pop
popa
clc
sbb
or
inc
loop
add
in
and
cmp
test
mov
cmp
mov
pusha
dec
(bad)
cmp
inc
rcr
mov
fs
pushf
jns
mov
jo
jecxz
xor
outs
cmps
xchg
dec
jmp
cmp
pop
gs
mov
add
fsubr
or
test
and
cmp
inc
rcr
inc
and
mov
jg
cdq
or
inc
rcr
ins
mov
rcr
add
mov
sbb
pop
scas
retf
adc
or
inc
loop
xor
add
dec
out
jg
cmps
xchg
cmp
scas
retf
and
cmp
inc
rcr
in
cmp
cdq
or
inc
fistp
or
daa
fistp
or
mov
mov
jmp
dec
and
pop
int
aam
or
inc
loop
adc
in
add
fistp
scas
retf
and
cmp
inc
rcr
in
cli
ficomp
or
inc
rcr
or
inc
mov
cdq
or
inc
rcr
mov
jmp
dec
and
pop
int
aam
or
inc
rcr
ins
mov
push
cwde
add
jns
inc
rcr
mov
inc
mov
or
(bad)
mov
stos
cmps
ss
adc
mov
in
lock
stos
mov
dec
and
inc
fs
scas
xor
mov
mov
jbe
mov
test
addr16
je
xchg
movs
mov
les
mov
int
rcr
ins
mov
adc
int
rcr
or
out
cdq
or
inc
xor
pusha
pop
in
repz
cli
xor
cmp
xor
call
mov
cmp
aad
int3
and
in
and
mov
jns
pop
pop
push
jp
mov
inc
aam
(bad)
jo
inc
ja
dec
das
jp
jmp
outs
jbe
dec
pop
call
movs
dec
jl
into
push
mov
add
mov
stos
cld
iret
int
xor
jbe
int3
js
inc
and
outs
into
push
hlt
fsub
pop
mov
fild
sub
sbb
jmp
adc
jbe
dec
jl
dec
sbb
sbb
inc
ds
mov
sub
inc
push
in
ds
cmps
adc
push
aam
xchg
sahf
and
mov
cmps
dec
ss
jb
inc
iret
mov
inc
jnp
mov
pop
sbb
aaa
outs
xor
xchg
dec
mov
adc
cmps
mov
add
js
jl
out
and
cmps
or
int
mov
inc
xor
or
xor
stos
cld
sub
outs
out
je
xor
repnz
inc
inc
xor
popa
out
adc
mov
scas
test
jae
cmp
(bad)
ror
xor
leave
xor
or
dec
js
in
dec
mov
les
leave
shr
ror
mov
sbb
inc
iret
mov
int
loope
jmp
inc
mov
push
xchg
cmc
loopne
or
pop
sahf
jl
out
in
push
mov
xor
jmp
mov
ins
out
push
mov
stc
xchg
dec
fldenv
js
mov
sub
inc
lods
sub
inc
lods
sub
inc
std
sub
movs
imul
mov
and
shl
mov
sub
mov
sub
inc
in
sub
stc
jmp
(bad)
cmp
jnp
inc
in
and
inc
pop
je
mov
xchg
adc
jnp
adc
jnp
xchg
adc
xchg
rcr
mov
xchg
adc
jnp
adc
adc
sbb
jge
add
dec
js
test
mov
xchg
adc
jnp
adc
call
aad
pushf
inc
dec
inc
popf
adc
jnp
adc
call
push
push
mov
and
inc
in
ins
outs
shr
es
imul
stos
push
and
xchg
xchg
stos
jnp
inc
in
sub
or
dec
sub
movs
sub
and
dec
es
std
mov
ret
xchg
sbb
sub
push
into
jg
ins
dec
sub
adc
jg
ins
dec
and
mov
daa
add
add
leave
jle
stos
cmp
jecxz
lock
je
push
add
dec
dec
ja
dec
(bad)
js
dec
jp
adc
rol
mov
dec
mov
dec
dec
ja
dec
dec
ja
dec
jg
mov
and
mov
lock
je
shl
fimul
mov
dec
ja
dec
das
jns
jg
leave
or
add
lock
xchg
and
dec
iret
jbe
dec
call
pop
push
jmp
je
push
test
push
mov
inc
aas
ds
and
les
inc
pop
and
fld
push
jl
into
fdiv
inc
cmp
dec
xor
mov
pop
mov
xchg
mov
sub
pop
inc
mov
jl
dec
inc
xor
int3
ror
sbb
jns
sbb
(bad)
int
mov
out
mov
js
pushf
jp
inc
add
(bad)
pop
dec
xchg
ds
aad
jno
ds
ret
adc
xchg
and
ficom
xchg
lock
pop
inc
inc
add
add
cld
leave
test
mov
adc
pop
push
cmps
dec
and
cwde
loop
push
adc
mov
fst
fistp
sbb
add
scas
je
jl
inc
inc
xor
sub
mov
int
sbb
mov
xor
iret
jge
mov
fistp
jbe
iret
enter
xchg
mov
or
fidiv
repnz
loopne
sbb
into
adc
addr16
push
call
cmp
sbb
dec
sub
test
dec
cmp
mov
pop
mov
fild
mov
dec
sbb
dec
test
dec
test
sbb
sub
outs
test
call
sub
xchg
inc
cmp
cmps
sub
test
fwait
xchg
inc
pop
push
pop
push
sbb
inc
pop
fisub
icebp
push
pop
fwait
and
cmps
inc
gs
inc
ja
js
ja
js
jbe
js
call
arpl
js
jbe
icebp
(bad)
jne
sub
out
jge
pop
retf
mov
outs
cdq
outs
ja
js
jp
cmp
test
ja
js
ja
js
jno
cdq
lods
inc
mov
mov
add
or
cmp
or
dec
stc
inc
pop
rol
xchg
jae
out
stc
shl
gs
js
jno
push
lods
sar
mov
js
ja
js
ja
js
jno
sbb
into
js
ja
js
into
mov
push
into
js
ja
js
jbe
js
sahf
call
push
cmps
sbb
addr16
(bad)
jno
ja
js
jns
js
inc
in
mov
scas
scas
inc
or
pop
mov
push
jle
ja
js
into
addr16
push
into
js
ja
js
jbe
js
sahf
call
push
cmps
sbb
mov
jle
ja
js
mov
push
movs
adc
gs
js
ja
js
ja
js
mov
push
movs
xor
mov
arpl
js
ja
js
retf
test
mov
arpl
js
mov
lds
adc
mov
mov
div
push
dec
test
dec
test
fisub
xor
xlat
inc
pop
dec
inc
fisub
arpl
sub
rcl
jnp
fidivr
mov
inc
mov
push
inc
and
sub
icebp
inc
pop
push
addr16
inc
hlt
inc
cmp
push
lds
inc
dec
sbb
scas
inc
push
into
js
ja
js
jle
sub
cmc
and
pop
(bad)
jno
ja
js
ja
js
jb
js
push
sti
not
out
inc
dec
inc
mov
(bad)
jno
ja
js
jb
clc
sub
sti
rcl
out
inc
push
into
js
jbe
clc
push
dec
out
inc
dec
fiadd
jno
ja
js
jbe
pop
pop
scas
ja
stos
dec
icebp
adc
inc
nop
les
mov
arpl
js
jbe
aam
into
out
inc
push
into
js
jbe
pop
pop
cs
fiadd
mov
push
into
js
ja
js
jle
stc
aad
(bad)
jo
inc
mov
pop
push
into
js
ja
js
jle
stc
gs
lock
rcl
out
inc
push
into
js
jbe
dec
lods
sub
js
ja
js
ja
js
jns
jb
fisubr
outs
ja
js
jle
clc
(bad)
xlat
mov
ja
js
not
jno
ja
js
(bad)
xchg
leave
daa
inc
cli
rcl
out
inc
push
into
js
ja
js
ja
js
(bad)
xchg
mov
inc
cli
rcl
out
inc
push
into
js
ja
js
jbe
clc
push
dec
out
inc
dec
fiadd
jno
ja
js
jbe
clc
push
push
out
inc
dec
fiadd
jno
ja
js
ja
js
jbe
pop
lods
sub
icebp
bound
into
js
jge
js
jbe
xchg
push
ds
ja
js
ja
js
not
jo
ja
js
jb
clc
sub
push
shl
into
js
ja
js
ja
js
jg
sub
push
add
ja
js
jns
jb
mov
into
js
ja
js
ja
js
not
jo
ja
js
jb
clc
sub
shl
into
js
ja
js
jbe
js
sub
lock
into
js
jge
js
jbe
xchg
push
ds
ja
js
ja
js
not
jae
ja
js
ja
js
jns
dec
pop
sahf
sar
adc
ins
jbe
dec
pop
cmp
shl
inc
ja
js
jno
js
push
jmp
fsub
repz
scas
icebp
scas
jmp
ja
js
ja
js
ja
js
push
repnz
push
dec
out
inc
dec
pop
xchg
dec
(bad)
icebp
bound
js
ja
js
jg
clc
bound
js
jb
clc
leave
and
inc
ja
js
ja
js
je
js
push
inc
pop
pop
sbb
push
sbb
or
mov
push
dec
inc
js
or
pop
not
dec
icebp
icebp
push
push
pop
sbb
sti
inc
mov
repz
outs
jg
fdivrp
mov
jno
scas
ja
ficomp
push
pop
push
test
xor
into
js
jb
js
push
neg
inc
(bad)
jno
ja
js
ja
js
jle
dec
pop
dec
test
dec
test
sbb
sbb
retf
inc
cmp
sbb
repnz
inc
cmp
addr16
pop
dec
test
mov
push
sbb
inc
pop
fisub
icebp
push
push
dec
and
cmc
and
addr16
(bad)
jno
ja
js
ja
js
jle
fsub
inc
ja
js
js
push
lock
push
inc
cli
pop
jae
jnp
test
or
mov
or
jle
ja
js
jl
clc
je
mov
push
sbb
icebp
mov
push
test
push
xchg
jmp
mov
dec
inc
jbe
or
dec
inc
inc
sbb
xchg
inc
cmp
loope
pop
into
(bad)
adc
imul
into
js
ja
js
jp
cmp
out
push
into
js
ja
js
ja
js
jg
std
push
dec
test
dec
test
fisub
xor
xlat
inc
pop
dec
inc
fisub
and
sub
rcl
cmp
sahf
mov
inc
mov
into
and
push
sub
icebp
inc
pop
push
addr16
inc
hlt
inc
cmp
pop
mov
inc
dec
sbb
scas
inc
push
into
js
jbe
js
outs
fdivp
bound
js
jnp
clc
fld
inc
ja
js
ja
js
repnz
(bad)
scas
xor
xlat
inc
pop
pop
inc
(bad)
mov
pop
push
pop
sbb
sti
inc
sub
mov
cmp
xlat
mov
out
sbb
out
pop
mov
cmc
jno
push
inc
cdq
call
sbb
jp
(bad)
cdq
dec
mov
ret
fcom
repz
stos
loope
jecxz
ja
js
ja
js
cmps
inc
gs
inc
ja
js
ja
js
jl
std
je
mov
push
sbb
icebp
mov
push
test
push
xchg
jmp
mov
dec
inc
jbe
or
mov
sbb
xchg
inc
cmp
loope
pop
into
out
sbb
out
jle
ja
js
cmps
inc
gs
inc
ja
js
ja
js
jno
cdq
fst
out
jno
mov
xchg
jp
enter
mov
arpl
js
jp
sbb
stos
cs
or
adc
xchg
inc
cmp
pop
pop
fiadd
adc
adc
mov
jp
jae
js
jp
pop
retf
xchg
pop
dec
out
dec
dec
ja
dec
dec
ja
dec
pop
repnz
jbe
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
and
mov
mov
(bad)
lock
xor
jo
test
aaa
sti
adc
mov
clc
sub
jmp
mov
mov
dec
inc
and
out
pop
call
aas
mov
test
ins
rcl
repz
(bad)
mov
jle
mov
push
xchg
fdiv
xchg
jmp
jecxz
pusha
(bad)
mov
aam
inc
cs
cmp
mov
mov
in
sahf
jno
ja
mov
(bad)
xor
xor
int3
loopne
inc
(bad)
jo
push
pop
cmp
sbb
sub
xchg
mov
jae
cdq
mov
pop
dec
vmovlps
jbe
cmp
mov
cmp
leave
or
outs
push
sar
pop
mov
out
repnz
out
cmp
ficom
mov
adc
cmc
enter
cmp
call
(bad)
mov
mov
add
fst
jb
sahf
cli
addr16
or
arpl
in
aaa
inc
repnz
iret
test
into
in
popa
xchg
fdivrp
pusha
inc
inc
xor
in
ror
inc
jle
jae
out
mov
(bad)
(bad)
sti
popa
push
push
fild
add
sbb
push
enter
imul
ins
pop
call
push
icebp
pop
pop
xor
in
xor
in
xor
in
xor
in
xor
in
xor
in
xor
in
xor
in
xor
in
movs
and
mov
fdivr
pusha
mov
inc
add
or
test
push
movs
fdivr
ror
push
or
add
hlt
hlt
inc
mov
adc
push
movs
fdivr
fadd
sar
mov
or
jo
aaa
adc
push
xor
gs
xor
mov
arpl
test
call
fsubr
test
pop
add
dec
xor
pop
cwde
aad
or
test
pop
add
ins
movs
cmp
jmp
test
jmp
fisubr
test
push
mov
pop
pop
test
addr16
test
push
test
adc
pop
cwde
aad
or
test
(bad)
ins
pop
cwde
aad
or
test
mov
scas
pop
pop
push
push
(bad)
add
jb
xor
mov
mov
push
push
xor
cmp
sbb
xchg
test
push
test
push
cmps
fmul
xchg
pushf
adc
addr16
mov
in
imul
pusha
loope
pusha
cmp
test
cli
add
mov
arpl
test
retf
fcomp
cdq
in
test
arpl
aad
or
mov
test
test
push
test
push
test
cmps
arpl
aad
or
mov
test
test
push
test
fiadd
mov
mov
aaa
xchg
in
cmp
adc
mov
fs
in
inc
xor
sub
push
and
in
or
cmps
pushf
pop
mov
out
and
in
or
test
pop
add
ins
movs
cmp
sbb
xchg
test
push
test
push
cmps
fmul
xchg
pushf
adc
addr16
cmps
fcomp
xchg
in
cmp
cmp
bound
loope
or
test
stos
or
repz
push
pop
cwde
in
or
mov
icebp
push
movs
xchg
movs
jecxz
outs
mov
shl
pop
xor
in
add
bound
arpl
mov
pavgw
inc
xor
aaa
popa
cmc
xor
or
xor
cmp
jnp
leave
popa
fisubr
repnz
adc
mov
inc
mov
into
xchg
mov
jae
pushf
mov
push
call
and
push
mov
pop
cld
adc
ror
out
add
lock
xor
std
push
xchg
pop
xchg
std
rcl
imul
inc
adc
xchg
popf
pop
test
iret
pop
data16
jb
js
cld
popa
inc
cmp
iret
enter
in
inc
xchg
jbe
test
jne
cmps
and
jp
inc
mov
xchg
es
leave
cmp
xor
jp
movs
adc
mov
shl
retf
test
xor
mov
(bad)
cdq
and
fmul
inc
scas
xchg
fnstcw
pop
dec
jp
xor
lods
dec
ficom
adc
ret
inc
jp
sbb
or
ror
push
cdq
cmp
cld
out
int
lea
fidiv
movs
mov
and
movs
xchg
adc
lock
punpckhbw
in
adc
cmp
sbb
xchg
mov
retf
sbb
icebp
cmp
fimul
jae
into
mov
(bad)
call
xchg
mov
out
sub
push
les
xchg
fsubr
inc
ja
or
add
mov
jbe
jns
jb
hlt
push
sbb
push
outs
jg
pusha
push
push
pushw
push
pushw
push
pushw
push
pushw
push
pushw
push
pushw
push
pushw
push
pushw
push
pushw
push
outs
call
outs
out
push
outs
out
push
xchg
outs
scas
push
imul
push
outs
iret
push
jbe
(bad)
cmps
outs
lahf
push
push
outs
lahf
push
inc
outs
call
outs
out
push
xchg
outs
scas
push
imul
push
ss
pop
push
xchg
jo
cdq
push
(bad)
ins
pop
push
imul
cmc
cmp
bound
lods
cdq
push
imul
imul
jmp
push
(bad)
pop
pop
imul
imul
std
test
jns
xor
scas
inc
pushf
pop
(bad)
pop
push
push
imul
imul
cli
pusha
(bad)
outs
shl
push
pop
jmp
cmp
sub
out
popa
(bad)
(bad)
pop
imul
mul
add
lds
pop
dec
jb
clc
leave
cmp
mov
pusha
push
push
out
leave
push
call
cmps
cmp
pop
imul
cmc
popa
pop
arpl
sbb
pop
imul
imul
mul
arpl
stos
retf
movs
cmp
fwait
add
ins
pop
jecxz
gs
arpl
pop
sub
ds
push
mov
iret
adc
faddp
cmps
cmp
cmp
pop
imul
mul
add
retf
push
lods
cdq
push
imul
mul
add
retf
push
lods
cdq
push
imul
imul
call
enter
push
push
imul
lock
ret
xor
xor
pop
imul
mul
arpl
stos
retf
movs
cmp
fwait
add
ins
pop
push
imul
imul
(bad)
aad
cmp
push
xchg
nop
cs
add
pushf
mov
in
pop
(bad)
ins
pop
push
imul
mul
add
retf
push
lods
cdq
push
imul
imul
mul
add
retf
push
lods
cdq
push
imul
icebp
popa
pop
arpl
pop
imul
imul
imul
xor
aam
call
and
aad
push
(bad)
pop
push
push
imul
imul
jmp
int3
leave
push
data16
retf
movs
cmp
fwait
in
pop
(bad)
ins
pop
repz
bound
das
jae
dec
outs
pop
(bad)
or
add
push
imul
imul
imul
xchg
add
push
imul
mov
or
aas
movs
jmp
push
imul
imul
mov
or
xor
mov
pop
cmps
cmp
pop
imul
imul
call
pop
imul
imul
imul
xchg
nop
sbb
push
push
lods
cdq
push
imul
lock
pop
push
lods
or
jp
lds
xor
rol
xchg
adc
pop
(bad)
ins
pop
push
imul
jmp
cmc
xchg
scas
pop
or
xchg
and
ins
pop
push
imul
stc
ins
pop
xor
aad
pop
out
mov
jne
(bad)
out
inc
(bad)
xor
outs
xor
push
push
pop
push
push
imul
shl
pop
dec
call
pop
push
imul
cld
push
push
pop
imul
stc
ins
pop
push
push
pop
push
push
imul
repz
push
out
jb
push
shl
ins
mov
push
imul
lock
setnp
cmp
cmp
pop
imul
imul
lock
fwait
xchg
and
cmps
cmp
cmp
pop
imul
repz
pop
(bad)
pushf
arpl
ins
pop
push
imul
jmp
mov
or
push
mul
inc
repnz
pop
data16
push
mul
push
cmps
int3
outs
pop
imul
imul
imul
jae
jge
ds
enter
cmp
pop
imul
imul
xor
ins
pop
push
imul
jecxz
pop
and
ins
pop
push
imul
xor
ins
pop
push
imul
mul
pushf
rcl
fwait
xchg
and
cmps
cmp
cmp
pop
imul
stc
gs
ret
leave
cmc
pusha
retf
pusha
stos
retf
movs
cmp
mov
push
push
imul
imul
(bad)
ins
iret
mov
add
mov
add
ins
pop
push
imul
imul
div
and
fwait
push
cmp
push
xchg
gs
cmp
pop
imul
imul
jmp
sub
add
gs
cmp
pop
imul
sti
gs
in
sub
bound
mov
outs
outs
push
(bad)
ins
outs
push
(bad)
ins
outs
push
(bad)
cmp
push
xchg
bndldx
push
cmp
push
push
cmps
pop
push
push
imul
imul
arpl
pop
(bad)
ins
pop
push
imul
imul
jmp
push
outs
mov
inc
jne
pcmpgtd
pop
fiadd
(bad)
ds
push
jbe
iret
imul
inc
call
test
out
out
(bad)
sub
pop
pop
jae
sub
mov
jbe
(bad)
nop
inc
cmp
mov
ins
jae
shl
cld
dec
inc
xchg
rcl
call
jne
fwait
pop
leave
gs
(bad)
nop
icebp
fisub
pusha
jae
out
mov
(bad)
jns
test
jbe
ds
fcmovnbe
mov
ficom
pop
loopne
and
jae
xchg
out
or
sbb
bound
sar
jb
dec
ss
inc
rol
push
xchg
xor
pop
inc
sahf
add
daa
adc
sti
ret
aas
jmp
jo
repz
pop
xor
(bad)
add
in
push
out
int
push
xchg
cdq
push
cmp
adc
(bad)
bnd
repnz
(bad)
jno
data16
mov
iret
int
shl
push
add
int
lods
or
(bad)
mov
or
mov
call
sub
and
mov
(bad)
adc
ror
ja
sub
loopne
mov
xor
scas
les
iret
fdivr
arpl
mov
ror
aad
out
loope
cmp
not
mov
test
and
mov
mov
call
jo
aaa
stos
xchg
xchg
jmp
inc
(bad)
mov
daa
xchg
mov
push
sub
cmps
ror
pushaw
dec
xchg
pop
enter
(bad)
out
add
sbb
pop
enter
enter
(bad)
out
add
push
cmc
cmp
enter
iret
out
fcom
out
into
inc
leave
(bad)
jmp
mov
push
shr
dec
mov
movs
outs
outs
push
repnz
nop
imul
mov
hlt
push
out
mov
mov
mov
mul
jmp
pop
enter
iret
out
sar
out
rcl
pusha
jno
in
stc
jle
mov
push
arpl
icebp
fsubp
dec
(bad)
fisub
movs
outs
ror
clc
out
fistp
out
push
leave
ja
fldcw
out
pop
enter
int
cmp
fldz
out
rcl
ret
or
mov
fadd
movs
ins
mov
nop
js
rcr
out
pop
into
out
xchg
movs
ins
mov
push
js
rcr
out
push
ret
pusha
arpl
mov
mov
movs
outs
mov
jo
mov
jns
lds
add
mov
jne
stc
dec
pop
push
jmp
je
dec
mov
jbe
mov
ds
xor
pop
lahf
and
lods
inc
test
and
jmp
xor
dec
sbb
sbb
dec
outs
mov
das
in
cmps
xchg
call
and
nop
adc
cmps
jns
outs
xchg
retf
pop
les
dec
xor
ins
dec
cs
mov
vaddsubpd
(bad)
jns
xor
xor
fbstp
iret
mov
jae
leave
mov
scas
xchg
adc
jo
fisubr
mov
mov
push
ror
mov
mov
es
or
je
add
sti
out
pop
dec
into
add
les
xor
ret
cmp
xchg
ret
cmc
mov
rcl
mov
retf
inc
hlt
pop
iret
sbb
inc
scas
push
xor
pop
adc
push
outs
data16
in
stc
inc
out
sbb
arpl
jmp
ret
in
jne
cdq
jns
xor
xor
or
sbb
inc
inc
pushf
jbe
inc
add
mov
jb
mov
es
mov
lock
iret
int
mov
mov
movs
adc
lock
push
dec
lahf
mov
cs
mov
jle
ins
sbb
ins
cmc
fucompp
sbb
bound
and
mov
mov
adc
dec
sbb
jl
clc
dec
jl
into
push
mov
add
lahf
pop
fprem1
or
xor
loope
or
jne
or
pop
dec
test
fst
test
xor
pop
mov
scas
test
mov
adc
jle
inc
and
(bad)
jne
ds
movs
mov
inc
add
into
mov
jae
pop
mov
sub
int
(bad)
jo
pop
push
ror
sub
call
int
jno
leave
sub
pushf
sbb
and
lds
cmp
and
call
out
add
fs
enter
(bad)
mov
mov
lds
cmp
mov
fs
das
fimul
push
retf
xor
(bad)
aad
adc
and
jle
mov
fisttp
add
cmp
inc
jp
push
adc
repnz
sbb
inc
iret
sbb
add
int
cmps
(bad)
jnp
dec
or
int
mov
push
jb
out
icebp
cld
inc
into
push
push
addr16
and
jnp
and
cwde
pop
mov
pusha
mov
je
mov
mov
dec
mov
or
cmp
mov
lods
mov
mov
mov
rcr
and
lods
mov
outs
in
mov
sbb
or
test
sbb
adc
fmul
sub
push
adc
ja
jo
mov
not
hlt
inc
ja
dec
dec
jge
dec
dec
(bad)
mov
pop
iret
les
not
hlt
inc
ja
dec
dec
ja
dec
outs
jb
dec
pop
ret
xchg
dec
jae
inc
mov
dec
ja
dec
dec
ja
dec
dec
jbe
dec
dec
out
adc
inc
jbe
sbb
imul
inc
ja
dec
dec
ja
dec
dec
ja
dec
pop
jle
std
dec
ja
dec
outs
jp
imul
push
pop
push
mov
jno
ds
sub
mov
dec
ja
dec
dec
ja
dec
jg
adc
dec
jns
aas
cmc
scas
xor
dec
dec
ja
dec
dec
pop
add
cmp
inc
inc
test
ja
dec
dec
ja
dec
fbstp
mov
inc
push
(bad)
call
push
inc
not
mov
ja
dec
dec
ja
dec
dec
jbe
dec
call
dec
pop
inc
addr16
outs
js
dec
mov
adc
retf
movs
mov
mov
mov
div
shl
xor
or
xchg
in
in
popf
dec
leave
inc
adc
pop
clc
mov
mov
mov
push
mov
cmp
cmp
pop
dec
fild
ret
(bad)
stc
jne
out
jae
pop
jecxz
jbe
xchg
repnz
jns
test
jne
cmp
add
mov
jo
ds
sub
or
push
js
jb
inc
pop
jl
sub
xchg
mov
shl
jns
test
jbe
cmps
(bad)
mov
icebp
push
test
out
xchg
cmp
test
clc
jl
stos
sub
push
call
test
adc
out
xor
jo
repz
xor
clc
mov
mov
loope
jg
cld
dec
xchg
int
in
data16
pop
and
xor
(bad)
adc
repnz
ror
xchg
mov
fcom
xlat
icebp
loopne
push
js
xchg
clc
cmp
out
mov
in
and
(bad)
adc
repz
cmps
sbb
int
mov
mov
(bad)
push
hlt
movs
ror
push
mov
jg
icebp
push
ins
push
xor
push
fdivr
and
jno
outs
push
mov
jecxz
(bad)
fmul
scas
(bad)
pop
std
cmp
mov
cmp
sahf
pop
mov
outs
mov
pop
mov
cmovle
js
aas
jge
scas
jmp
mov
dec
cmp
js
mov
pop
mov
jg
dec
cmp
mov
or
dec
cmp
js
aas
sub
pop
dec
cmp
mov
dec
js
jle
jle
mov
sbb
push
(bad)
mov
sbb
push
mov
sub
pop
sub
fild
jg
fisttp
dec
cmp
sub
pop
mov
sub
mov
movq
sub
push
mov
dec
cmp
push
pop
dec
push
outs
jg
jmp
ds
imul
jg
sub
push
mov
push
jle
mov
mov
pop
dec
pop
(bad)
aas
sub
lea
push
(bad)
cwde
jg
mov
ds
outs
sub
(bad)
sbb
in
test
scas
jmp
push
jle
pop
cs
pop
sub
outs
sbb
push
mov
push
jge
scas
cs
js
in
dec
or
cs
cwde
movq
jg
cmp
pop
outs
sub
jp
outs
call
pop
ds
pop
ins
dec
in
sub
dec
or
mov
mov
sbb
pop
ds
pop
ins
dec
in
sub
dec
push
movq
jg
cmp
pop
ds
jp
mov
jge
push
cs
cmp
out
das
push
outs
das
sub
or
sbb
cmp
dec
scas
dec
cmp
dec
dec
lea
pop
in
dec
outs
dec
das
dec
jp
mov
aas
sbb
sub
sub
sub
ds
cmp
lea
jmp
push
ins
pop
sub
cmp
fistp
out
pop
push
outs
sbb
mov
jge
comiss
push
pop
mov
cmp
das
sub
push
(bad)
mov
push
out
cmp
imul
mov
test
sahf
pop
sbb
push
pop
dec
cmp
outs
aas
dec
js
(bad)
sub
jg
or
or
push
jle
dec
dec
push
push
sbb
or
sub
sub
ins
retf
sub
jle
cli
mov
dec
dec
dec
push
jg
sub
scas
in
cmp
dec
clc
sbb
outs
sbb
or
sub
sub
ins
retf
sub
jg
sub
scas
in
cmp
dec
clc
sbb
push
sbb
cmp
out
das
push
outs
das
sub
or
push
sbb
cwde
(bad)
pop
sbb
dec
or
dec
out
js
push
mov
fnstsw
sbb
dec
push
pop
in
fsubr
fistp
pop
pop
push
pop
dec
cmp
dec
ins
jnp
das
pop
sub
cmp
cmp
fisttp
cmp
mov
dec
fwait
dec
mov
enter
jmp
jle
pop
js
pop
dec
push
dec
sub
cmp
ds
pop
push
ins
pop
js
cs
cmp
ds
pop
jle
pop
js
pop
dec
push
dec
sub
call
mov
std
or
cs
pop
dec
sub
cmp
pop
dec
mov
iret
das
pop
sub
ds
(bad)
dec
dec
js
mov
push
mov
dec
or
dec
pop
dec
sub
ds
mov
dec
mov
dec
cmp
out
sub
jmp
sub
dec
push
in
(bad)
dec
call
dec
cmp
sub
cdq
movq
outs
dec
dec
pop
push
sub
cmp
cmp
fistp
out
pop
push
push
sbb
popf
ds
cwde
pop
mov
sbb
cli
push
dec
sbb
popf
ds
cwde
pop
mov
sbb
cmp
push
(bad)
mov
sbb
dec
test
jle
pop
js
cs
cmp
dec
push
push
ins
pop
sub
pop
dec
cwde
pop
outs
sbb
sbb
dec
sbb
pushf
pop
jns
cs
mov
dec
pop
out
pop
push
or
cmp
jge
pop
mov
test
sahf
pop
sbb
push
jge
dec
cmp
cs
cmp
dec
push
dec
jge
cwde
pop
pop
in
dec
cmovge
test
jle
cmp
dec
jle
dec
cmp
cs
jns
(bad)
sub
dec
dec
mov
jg
cmp
dec
jle
pop
mov
cs
call
scas
pop
sbb
mov
sub
or
jmp
lahf
cs
sub
cs
scas
or
push
or
pop
imul
jmp
cwde
scas
or
push
pop
cs
dec
lea
in
cwde
fild
sub
pop
fidivr
mov
dec
cmp
cmp
out
sub
fistp
aas
mov
jg
sub
out
sti
sbb
ds
jmp
cmp
or
fisttp
jg
or
cmp
pop
push
mov
dec
pop
dec
mov
imul
dec
pop
sub
fsubr
dec
dec
cli
push
jle
pop
ds
pop
sub
or
cli
push
jle
jnp
ins
pop
sub
push
sbb
jge
int3
sub
dec
invd
outs
outs
sbb
dec
sahf
ins
pop
sub
sub
js
out
sub
sahf
cmp
clc
pop
cs
push
pop
mov
dec
pop
mov
jl
cwde
outs
mov
or
jg
stos
(bad)
lea
out
sbb
cmp
push
mov
iret
(bad)
outs
sub
outs
sbb
or
pop
mov
aas
int3
sub
dec
invd
pop
outs
sbb
ins
aas
jge
mov
sub
cld
cmp
push
sbb
fnstsw
lods
sub
in
push
ds
js
cs
leave
pop
out
sub
outs
cmp
js
outs
call
outs
aas
sbb
cmp
imul
push
sbb
pop
or
pop
jns
cs
cmp
pop
mov
aas
mov
dec
pop
imul
sub
fnstsw
sbb
jns
das
pop
dec
pushf
dec
pop
sub
dec
cmp
cs
jle
dec
cmp
lea
mov
pop
pop
or
mov
dec
dec
dec
mov
push
dec
cmp
cmovs
mov
sbb
lods
ds
jmp
cmp
sub
sub
int3
sub
dec
or
jg
pop
sub
aas
mov
push
lea
cmp
sub
pop
pop
sub
dec
dec
sub
call
push
pop
cmovs
dec
lea
cs
call
ins
das
popf
cmp
sub
jle
sub
cmp
pushf
ins
jnp
(bad)
pop
pop
jle
pop
jmp
int
sbb
mov
iret
aas
dec
sub
in
cmp
sub
pop
dec
pop
dec
cmp
mov
scas
sbb
mov
jle
sbb
or
push
fistp
cmp
pop
fild
pop
dec
sbb
dec
pop
mov
jns
sub
cmp
mov
mov
sub
pop
mov
push
in
ds
pop
pop
sub
cmp
jle
pop
jle
pop
sub
mov
call
push
(bad)
sbb
sbb
pop
mov
sub
cmp
pop
or
sub
sahf
pop
jmp
dec
dec
pop
imul
sub
jns
cs
cmp
out
pop
pop
dec
cmp
fistp
cmp
sub
scas
mov
dec
pop
fnstsw
outs
dec
fucomi
fistp
call
mov
sub
in
pop
jmp
mov
pop
sbb
jl
sub
comiss
jg
pop
sub
cmp
(bad)
in
pop
dec
push
dec
or
jl
cwde
iret
das
(bad)
sbb
sub
pop
or
cli
ds
sub
fisttp
movq
outs
das
das
sub
sahf
push
pop
outs
sbb
sbb
pop
std
push
sub
jnp
jge
cwde
scas
dec
int
outs
outs
outs
sub
sbb
cmp
dec
dec
pop
ds
sub
pop
jle
jp
lahf
sub
pop
push
mov
nop
ins
cmp
sbb
dec
or
mov
sub
pop
push
(bad)
or
js
aas
push
pop
cs
dec
pop
jle
sub
(bad)
cmp
jns
ds
jg
ins
jnp
cs
dec
jl
jge
pop
cs
dec
cmp
ficomp
or
pop
sub
dec
dec
pop
jle
sub
iret
cmp
mov
dec
sub
or
(bad)
ins
std
cmp
sahf
lea
out
outs
fucomp
ucomiss
jmp
jle
cli
mov
int3
dec
cwde
pop
cs
pop
fistp
stc
outs
jg
push
(bad)
dec
dec
sbb
sbb
jmp
push
dec
dec
dec
jl
pop
sub
jle
mov
std
sub
or
in
cwde
jg
cmp
cmp
dec
pop
pop
ficomp
or
enter
dec
jg
mov
scas
jle
mov
pop
dec
pop
fimul
pop
ficomp
pop
mov
pop
push
outs
aas
dec
js
(bad)
sub
cmovg
aas
(bad)
fisttp
mov
jge
cwde
jg
fsubr
jg
sbb
cmp
sub
ins
clc
(bad)
dec
sbb
js
mov
pop
ds
jg
pushf
mov
push
pop
mov
sahf
cld
sub
dec
pop
mov
pop
ds
js
fsubr
iret
ds
mov
push
std
js
mov
in
dec
aas
sub
or
cmp
jle
pop
into
dec
jl
mov
jmp
scas
jle
call
scas
dec
pop
sub
or
cmp
dec
cmp
push
dec
cmp
push
fucomi
pop
jle
pop
jle
pop
sub
cmp
call
fnstsw
mov
(bad)
dec
lea
cmp
dec
js
mov
dec
cmp
(bad)
mov
jle
cmp
dec
test
sub
dec
push
popf
dec
cmp
dec
pop
scas
cs
jmp
jns
pop
sub
cmp
sahf
fnstsw
(bad)
cs
dec
sbb
cmp
js
cs
mov
dec
pop
out
sub
cs
pop
scas
pop
sub
mov
dec
pop
out
sub
cs
pop
jg
sub
pop
das
or
dec
pushf
pop
dec
sub
int3
mov
in
push
push
cmp
fisttp
fild
sub
js
ds
ins
das
int
jg
pop
sub
cs
dec
push
jnp
scas
inc
or
sub
js
jle
inc
and
inc
sub
aaa
push
push
sub
mov
jno
jle
inc
and
dec
das
add
adc
dec
jo
and
inc
and
dec
stos
sbb
jo
and
inc
and
dec
fwait
mov
jno
dec
jo
and
dec
imul
and
inc
and
inc
and
inc
mov
jle
inc
and
inc
and
xor
jno
inc
jo
and
inc
and
dec
xor
inc
and
inc
and
dec
sub
enter
je
mov
pop
je
not
jmp
sub
jl
je
sub
sub
jbe
ja
inc
pop
mov
inc
ret
jbe
jp
and
dec
sbb
mov
push
dec
jl
into
push
mov
add
inc
xchg
pop
imul
xchg
pop
imul
cmp
sub
jmp
xor
inc
icebp
add
popf
dec
fldenv
jns
ror
fistp
and
lock
pop
dec
es
sub
rol
jle
adc
neg
retf
out
adc
fdivp
push
fbstp
jb
test
jne
ds
repnz
in
icebp
cld
inc
into
push
fidiv
sub
call
fimul
ror
shl
cdq
fsubr
dec
es
or
jns
or
repnz
add
jb
mov
inc
hlt
iret
test
pop
outs
inc
data16
loopne
int3
inc
dec
push
xor
ffreep
mov
cdq
inc
cmp
je
adc
(bad)
jle
rcr
or
hlt
ja
int
into
(bad)
aas
ds
fdiv
dec
rcl
jecxz
fbld
sbb
addr16
and
mov
(bad)
ror
xor
ja
pop
iret
js
mov
dec
xor
aam
iret
enter
cmps
imul
inc
loope
outs
into
mov
push
int
rol
lods
lock
test
rcl
mov
xchg
rcl
loope
lock
out
cli
pop
in
mov
pop
in
mov
pop
ins
mov
movs
fs
fisub
inc
xchg
stos
fs
retf
pusha
mov
pop
rol
inc
cmps
aaa
jmp
sar
jmp
push
(bad)
push
ss
test
ret
and
inc
xor
retf
sar
jmp
xor
inc
xor
retf
sar
jmp
add
inc
xor
retf
sar
jmp
adc
inc
xor
retf
sar
jmp
loopne
inc
xor
retf
sar
jmp
lock
cmps
xor
retf
sar
jmp
rol
inc
test
stos
add
mov
pop
in
mov
pop
in
mov
pop
mov
test
pop
lods
mov
pop
mov
adc
ror
and
mov
mov
or
xor
push
test
(bad)
dec
sbb
sub
pushf
dec
jl
into
push
mov
push
jl
test
xchg
dec
imul
fwait
mov
adc
repz
test
push
lods
jg
inc
pop
outs
(bad)
loope
mov
ins
inc
xchg
dec
test
sub
sbb
jg
mov
xchg
jo
mov
into
ror
sar
jns
push
sar
push
repz
mov
add
inc
xchg
xor
jmp
ret
ss
sahf
stc
xlat
rol
pusha
dec
out
daa
mov
jo
fiadd
fcmovnu
add
bound
in
lock
ds
mov
retf
jecxz
ret
icebp
and
jle
adc
inc
mov
std
pushf
gs
or
ret
inc
xchg
int
push
fdiv
test
cld
out
int
xchg
scas
mov
int3
pop
std
adc
dec
es
ret
xlat
mov
inc
xor
(bad)
nop
int
in
je
inc
mov
int
jne
jmp
push
push
out
mov
pop
outs
mov
or
mov
outs
jae
jl
int
xor
xchg
pop
leave
and
(bad)
push
test
(bad)
sbb
loopne
mov
ret
pusha
pop
rcr
das
rcr
es
ror
movs
sub
fwait
ins
das
rcr
sub
jge
cmps
add
das
rcr
das
rcr
(bad)
rcl
rcr
das
rcr
es
imul
pop
push
rcr
das
fcomp
pop
sbb
bound
rcr
das
rcr
daa
pop
mov
arpl
rcr
das
rcr
fstp
das
rcr
das
rcr
and
mov
ret
xor
out
xor
cmp
adc
es
push
out
push
out
ja
es
jbe
je
out
cmps
cdq
out
pop
in
push
cmps
js
xchg
jl
jne
test
outs
movs
adc
fcom
addr16
mov
js
add
movs
pop
mov
iret
ins
jbe
in
dec
gs
je
xchg
dec
fldenv
jns
adc
jo
in
jbe
dec
sub
popf
pusha
pop
iret
int
and
push
mov
outs
sahf
sar
mov
jb
into
and
cmp
inc
xchg
into
test
jo
ds
jb
imul
ins
or
movs
adc
rcl
xchg
mov
sub
test
call
jle
jo
stos
mov
scas
jo
xchg
in
push
dec
xchg
xor
cmps
adc
rol
jns
jg
int
(bad)
cdq
ss
in
leave
fst
sti
lods
mov
iret
test
sbb
xchg
mov
imul
push
dec
push
mov
ret
repz
inc
(bad)
mov
inc
sub
ror
mov
aam
dec
mov
push
cmp
jnp
cmp
iret
das
out
mov
mov
adc
sub
loopne
mov
(bad)
mov
out
fnstsw
dec
xor
icebp
icebp
imul
inc
rcl
mov
inc
and
xor
jo
mov
jl
jae
popa
loope
dec
adc
hlt
movs
or
adc
jne
sub
pop
mov
addr16
shl
loope
lds
dec
adc
ror
and
iret
jecxz
inc
sbb
sub
pop
cmp
sbb
enter
inc
dec
add
xchg
mov
mov
sbb
mov
dec
inc
mov
mov
or
push
dec
inc
mov
push
inc
loope
xchg
sbb
mov
dec
inc
pop
push
inc
loope
xlat
sbb
mov
dec
inc
mov
pop
inc
add
aaa
icebp
mov
xlat
imul
and
push
ja
sahf
xchg
lods
aam
inc
xchg
or
jne
test
scas
ret
sahf
int3
outs
mov
mov
js
xlat
movs
sub
pushf
pop
fld
push
push
mov
mov
pop
stc
nop
xchg
jne
scas
xchg
in
push
jne
stos
cdq
pop
fld
je
and
shl
test
outs
in
xor
js
sbb
ds
(bad)
nop
int
jmp
int3
sbb
add
in
lock
nop
jns
test
jbe
cmp
fadd
ror
sbb
ss
mov
xlat
int
inc
shr
es
dec
inc
xor
enter
and
pop
pop
dec
out
dec
inc
xor
xlat
mov
enter
lock
lahf
pop
jmp
loop
int
test
mov
js
sbb
out
and
popf
pusha
retf
imul
sahf
xchg
lock
inc
mov
cs
repz
xchg
jmp
add
je
add
xor
rol
sbb
xchg
sub
push
out
inc
cmps
mov
out
into
shr
mov
je
sub
outs
(bad)
cmp
lods
mov
in
inc
jmp
add
shl
jmp
mov
iret
mov
repz
call
int
xor
test
(bad)
jmp
push
mov
outs
mov
push
mov
out
dec
fnstcw
sbb
adc
sbb
call
(bad)
stos
stos
pop
xlat
inc
pusha
aas
adc
pop
(bad)
cli
pop
pop
(bad)
sbb
pop
in
stos
sub
stos
sub
fld
pop
(bad)
cli
pop
pop
(bad)
sub
mov
inc
adc
sti
add
repz
or
add
cld
pop
cdq
mov
push
rol
push
cli
out
adc
fistp
jo
xor
jo
sbb
jo
and
jo
cmp
jo
and
jo
or
pop
adc
mov
jo
dec
jl
jne
mov
dec
int3
jo
dec
mov
mov
dec
mov
dec
jl
jbe
mov
dec
jmp
ret
cmp
stos
pop
(bad)
cmp
jmp
(bad)
cmp
mov
test
imul
cmp
sti
in
ret
cmp
cmp
mov
ret
cmp
jmp
aaa
cmp
xor
imul
cmp
xor
cmp
dec
cmp
mov
cmp
sbb
cmp
sti
aas
mov
cmp
stos
ja
cmp
mov
ret
rol
cmp
fwait
cmp
cmp
jnp
ret
mov
cmp
or
cmps
cmp
sti
jp
cmp
or
retf
cmp
or
jnp
sar
arpl
cmp
stos
xor
cmp
dec
mov
into
cmp
dec
pusha
(bad)
cmp
mov
mov
cmp
retf
xor
cmp
imul
cmp
mov
mov
cmp
jmp
mov
stos
lock
cmp
fist
xor
xor
or
add
add
add
pop
adc
sub
xchg
adc
cmp
fwait
adc
fcmovnu
fwait
adc
imul
sbb
xchg
adc
cmp
adc
sbb
xchg
imul
mov
adc
mov
adc
fwait
inc
xchg
jnp
test
mov
xchg
xor
fwait
inc
xchg
adc
sti
xchg
mov
sbb
fwait
adc
jmp
xchg
adc
pop
mov
and
imul
sub
xchg
addr16
sbb
sub
fwait
jo
sub
retf
sub
bound
dec
xor
pop
(bad)
pop
arpl
jmp
ins
sub
mov
loop
imul
sti
loopne
adc
cmp
rcl
retf
cmp
adc
daa
not
retf
(bad)
ficom
dec
(bad)
adc
cli
adc
out
adc
cmc
adc
out
adc
or
adc
in
adc
jle
adc
sub
imul
jmp
hlt
adc
push
adc
loop
adc
not
adc
pop
rcl
dec
pop
mov
sbb
scas
sbb
fwait
xchg
cmp
test
cmp
mov
cmp
call
mov
cmp
shl
stos
sub
cmp
sti
mov
cmp
inc
cmp
adc
cmp
mov
and
iret
add
mov
rol
stos
dec
mov
imul
fcmovnb
pop
add
cmps
add
push
pushf
jo
dec
mov
dec
mov
dec
mov
dec
mov
inc
aam
outs
jbe
ds
call
(bad)
dec
jl
into
push
mov
add
cwde
pop
imul
jecxz
pop
aam
sbb
or
std
pusha
sbb
mov
rol
lods
jmp
mov
fst
in
stos
push
scas
punpckhdq
or
in
repz
mov
mov
shl
add
test
aad
(bad)
daa
les
mov
ss
sbb
jge
int
(bad)
jo
push
adc
ficomp
jns
pop
mov
rcr
pop
mov
iret
in
loopne
into
jns
xchg
fdivrp
jp
dec
and
stos
push
iret
enter
ss
mov
dec
repnz
sahf
mov
leave
sbb
sub
lds
mov
xor
aam
jecxz
or
sbb
out
inc
cld
dec
inc
inc
xor
and
inc
cs
cmp
pop
ja
sbb
and
mov
pusha
iret
dec
jp
stos
fimul
out
dec
mov
(bad)
sbb
es
cdq
add
inc
clc
dec
xor
jle
hlt
jecxz
test
adc
dec
std
adc
mov
sahf
loopne
jl
fimul
xchg
in
add
icebp
je
mov
outs
xchg
and
and
(bad)
retf
pop
cs
dec
test
and
leave
inc
lds
jne
jecxz
push
(bad)
push
test
push
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
fwait
lock
sahf
or
push
sahf
cmp
push
sahf
fwait
rol
sahf
fwait
rcl
sahf
mov
shl
ficomp
lock
mov
call
mov
call
mov
call
mov
cdq
mov
push
(bad)
sub
pop
cdq
lock
mov
cdq
lock
cwde
rcl
fcmovnbe
es
cwde
pusha
test
cmp
es
cwde
adc
sahf
mov
shl
stos
lahf
nop
inc
sahf
mov
hlt
mov
fwait
lock
xchg
fwait
lock
shl
push
sahf
fwait
inc
push
xchg
fwait
mov
(bad)
repnz
sahf
fwait
inc
push
xchg
fwait
jo
(bad)
repnz
sahf
fwait
inc
push
xchg
fwait
xor
shl
push
sahf
fwait
add
fwait
lock
pop
shl
mov
cwde
inc
push
scas
fcmovnb
mov
mov
mov
inc
mov
scas
stos
dec
xchg
push
stc
xchg
push
stc
xchg
mov
xor
xchg
fwait
xor
(bad)
jb
sahf
fwait
mov
and
xchg
pop
stc
(bad)
sahf
fwait
and
and
cdq
pop
rol
mov
sahf
fwait
xor
pop
shl
xchg
fwait
xor
(bad)
repnz
fwait
mov
and
(bad)
sahf
fwait
and
and
pop
rol
cdq
pop
rol
stc
(bad)
jb
xchg
fwait
mov
(bad)
mov
sahf
fwait
mov
and
inc
sahf
fwait
and
and
pop
shl
push
fwait
fwait
lock
test
push
call
push
(bad)
imul
sahf
fwait
inc
adc
ficomp
lock
sahf
fwait
mov
sbb
clc
inc
pop
xchg
inc
push
xlat
jmp
(bad)
ficomp
push
lahf
mov
lock
push
xchg
xor
in
or
inc
ficom
push
xchg
fwait
lock
xchg
fwait
pusha
jle
in
inc
ficomp
lock
ficomp
push
xchg
sbb
mov
xchg
fwait
shl
sbb
xchg
jmp
(bad)
ficomp
push
xchg
jmp
(bad)
fcompp
iret
push
xchg
jmp
(bad)
ficomp
lock
sahf
fwait
inc
aaa
outs
jmp
es
movs
ds
rol
mov
xchg
fwait
shl
sbb
push
xchg
sti
lock
sahf
test
mov
loopne
pop
xchg
mov
xchg
sub
inc
ficomp
or
sub
inc
fcompp
inc
sahf
fwait
or
sub
inc
ficomp
inc
sahf
fwait
or
sub
inc
ficomp
push
sahf
fwait
pusha
push
xchg
jmp
(bad)
ficomp
lock
sahf
fwait
pusha
fisubr
int3
es
xchg
mov
mov
or
rol
mov
xchg
fwait
shl
xchg
mov
ficomp
push
xchg
sbb
inc
ficomp
push
xchg
sbb
pop
rol
cmp
rol
xchg
fwait
pusha
mov
ficomp
push
xchg
jmp
(bad)
ficomp
out
push
xchg
jmp
(bad)
ficomp
push
xchg
sbb
inc
ficomp
push
xchg
fwait
xor
xchg
fwait
shl
sbb
xchg
jmp
(bad)
fcompp
wbinvd
xchg
jmp
inc
ficomp
lock
fcompp
pop
xchg
(bad)
push
xchg
fwait
shl
sbb
add
cwde
in
sub
mov
ss
add
data16
retf
call
sahf
in
sub
inc
sahf
mov
push
sahf
fwait
mov
mov
fwait
xor
sub
inc
pop
xchg
pusha
push
mov
pop
clc
xchg
push
clc
inc
sahf
fwait
lock
push
mov
push
xchg
jmp
(bad)
ficomp
mov
in
or
inc
sahf
xchg
xor
stos
clc
inc
pop
xchg
inc
push
push
jmp
(bad)
ficomp
push
sahf
mov
lock
push
xchg
xor
in
or
inc
pop
xchg
xor
in
sub
inc
ficom
inc
sahf
xchg
mov
into
sbb
push
sahf
fwait
shl
loope
loopne
xchg
lock
ficomp
push
xchg
jmp
(bad)
ficomp
push
sahf
mov
lock
push
xchg
mov
lock
push
mov
in
push
nop
sti
lock
sahf
test
inc
sahf
xchg
lock
sahf
fwait
mov
sub
cld
inc
ficom
push
sub
cld
inc
push
xchg
lock
sahf
fwait
mov
sub
cld
inc
pop
xchg
lock
sahf
fwait
mov
in
or
inc
sahf
mov
add
cwde
fwait
rol
shl
mov
sar
mov
enter
shl
mov
popa
mov
ficomp
dec
push
xchg
jmp
inc
ficomp
iret
push
xchg
stos
inc
cs
mov
clc
inc
pop
xchg
mov
sbb
clc
inc
pop
xchg
inc
push
pop
in
lock
ficomp
iret
push
xchg
jmp
inc
ficomp
push
lahf
mov
clc
inc
pop
xchg
mov
in
sub
inc
push
xchg
mov
in
mov
inc
pop
xchg
mov
sbb
clc
inc
pop
xchg
inc
push
xchg
jmp
dec
push
lahf
mov
lock
push
xchg
mov
in
or
inc
ficom
inc
sahf
xchg
mov
sbb
clc
inc
ficom
inc
fcompp
dec
push
lahf
mov
lock
push
xchg
rol
lea
lock
mov
lock
push
add
fdivr
push
mov
js
xchg
fwait
xor
(bad)
mov
sahf
fwait
mov
and
stc
(bad)
sahf
fwait
and
mov
cmp
rol
cdq
(bad)
mov
xchg
sub
inc
sahf
xchg
ror
mov
sar
push
sahf
fwait
mov
mov
fwait
mov
in
sub
inc
pop
xchg
rol
mov
(bad)
xchg
sar
(bad)
sahf
fwait
mov
and
stc
inc
sahf
fwait
mov
mov
fwait
lock
push
rol
push
xchg
stos
cmp
mov
in
mov
inc
pop
xchg
mov
in
sub
inc
pop
xchg
rol
mov
(bad)
xchg
shr
push
xchg
fwait
lock
or
mov
push
mov
clc
push
sahf
fwait
lock
sahf
fwait
mov
loope
clc
inc
sahf
fwait
lock
sahf
fwait
mov
loope
clc
xchg
fwait
mov
loope
clc
(bad)
sahf
fwait
lock
sahf
fwait
mov
push
sar
push
mov
mov
xchg
stos
sar
mov
cwde
lds
repz
mov
sbb
or
inc
push
xchg
mov
in
sub
inc
push
xchg
nop
or
sub
(bad)
sahf
fwait
mov
mov
fwait
mov
in
sub
inc
push
xchg
mov
in
stos
lock
pop
xchg
nop
add
add
sti
(bad)
sahf
fwait
mov
and
sti
xchg
(bad)
(bad)
sahf
fwait
mov
mov
fwait
mov
in
sub
inc
pop
xchg
nop
add
mov
fwait
mov
add
sti
inc
sahf
fwait
mov
popa
aam
push
sahf
fwait
mov
mov
fwait
mov
in
sub
inc
ficom
je
(bad)
xchg
mov
jae
mov
add
xchg
sti
lock
sahf
fwait
add
jnp
mov
rcl
test
ror
sbb
inc
ficomp
push
xchg
(bad)
mov
xchg
fwait
shl
sbb
xchg
jmp
inc
fcompp
jg
sahf
retf
lock
fwait
mov
and
sti
push
sahf
fwait
and
hlt
(bad)
cdq
(bad)
jb
xchg
fwait
xor
pop
shl
sahf
fwait
mov
and
sti
(bad)
sahf
fwait
and
repz
(bad)
add
fwait
xor
xchg
fwait
mov
(bad)
add
fwait
lock
shl
xchg
fwait
or
jmp
je
(bad)
(bad)
sahf
fwait
mov
and
sti
(bad)
sahf
fwait
and
repz
(bad)
xchg
push
xchg
fwait
loopne
ficom
lock
fwait
lock
xchg
fwait
lock
shl
push
sahf
fwait
inc
push
xchg
fwait
mov
(bad)
repnz
sahf
fwait
inc
push
xchg
fwait
jo
(bad)
repnz
sahf
fwait
inc
push
xchg
fwait
xor
shl
push
sahf
fwait
add
fwait
lock
pop
shl
neg
fild
lds
jecxz
es
ins
mov
or
add
xchg
push
sti
xchg
jecxz
es
cdq
pop
shl
xchg
fwait
xor
(bad)
jb
sahf
fwait
mov
and
xchg
pop
sti
(bad)
sahf
fwait
and
arpl
cdq
pop
rol
mov
sahf
fwait
xor
pop
shl
xchg
fwait
xor
(bad)
repnz
fwait
mov
and
(bad)
sahf
fwait
and
arpl
pop
rol
cdq
pop
rol
stc
(bad)
jb
xchg
fwait
mov
(bad)
mov
sahf
fwait
mov
and
inc
sahf
fwait
and
arpl
pop
shl
push
fwait
fwait
lock
stos
ret
es
loopne
call
push
(bad)
imul
sahf
fwait
inc
adc
ficomp
lock
sahf
fwait
mov
sbb
clc
inc
pop
xchg
inc
push
aad
lock
ficomp
push
popf
mov
lock
push
xchg
xor
ficom
push
xchg
fwait
lock
xchg
fwait
pusha
jle
in
inc
ficomp
lock
ficomp
push
xchg
sbb
mov
xchg
fwait
shl
sbb
xchg
jmp
(bad)
ficomp
push
xchg
jmp
(bad)
fcompp
iret
push
xchg
jmp
(bad)
ficomp
lock
sahf
fwait
add
out
in
sbb
rol
mov
xchg
fwait
shl
sbb
push
xchg
sti
lock
sahf
test
(bad)
stos
dec
inc
push
sbb
vmovdqu
lods
dec
repnz
add
adc
les
in
cmp
adc
sahf
fcomip
and
jg
loop
call
lods
(bad)
arpl
in
mov
mov
mov
xchg
push
fisubr
push
add
sahf
stos
mov
test
scas
cld
ret
xcrypt-cfb
cmps
mov
mov
cmc
retf
addr16
dec
clc
xchg
clc
les
cmps
mov
stc
xchg
fwait
ror
mov
stc
ss
popf
mov
inc
xor
xchg
cmc
retf
outs
xchg
stos
leave
aas
cmps
mov
push
or
push
ss
les
cmps
mov
pop
cmc
retf
xchg
imul
ss
push
adc
sahf
fwait
mov
inc
ss
push
cmc
retf
xchg
mov
inc
ds
hlt
push
xchg
mov
lods
data16
imul
and
push
cmc
retf
data16
imul
es
push
adc
sahf
fwait
mov
inc
ss
inc
cmc
retf
gs
imul
ss
inc
cmc
retf
xchg
mov
inc
ds
hlt
push
rcr
lods
data16
imul
es
push
adc
sahf
fwait
mov
inc
ss
inc
cmc
retf
xchg
stos
clc
inc
cmp
mov
ins
les
scas
(bad)
lahf
nop
push
fisubr
mov
(bad)
ret
lock
(bad)
lahf
add
fwait
nop
push
fidiv
jae
ins
ret
add
fidiv
xor
lahf
nop
push
fidiv
rol
sahf
fwait
mov
ins
les
scas
(bad)
lahf
nop
push
pop
xor
or
lahf
add
mov
clc
ss
add
into
pushf
xchg
push
out
(bad)
or
sar
mov
cdq
adc
movnti
cmps
mov
dec
xor
xchg
stos
leave
aas
cmps
mov
leave
outs
xchg
or
aas
cmps
mov
mov
lods
ret
mov
cmc
retf
xchg
imul
xor
push
jne
pop
std
data16
fwait
ror
stos
leave
aas
cmps
mov
imul
fwait
ror
stos
leave
aas
cmps
mov
dec
aad
sbb
xchg
sub
aas
cmps
mov
pop
xchg
dec
call
cmps
mov
clc
inc
aaa
clc
les
cmps
mov
jmp
cmp
fwait
ror
mov
fnstenv
out
outs
xchg
retf
outs
xchg
stos
leave
aas
cmps
mov
lds
stos
enter
sar
mov
in
ss
push
retf
seta
leave
aas
cmps
mov
int3
(bad)
mov
mov
cmp
xchg
iret
daa
mov
leave
aas
cmps
mov
enter
iret
aas
cmps
mov
ret
scas
neg
leave
aas
cmps
mov
leave
(bad)
cmps
mov
cmp
les
scas
(bad)
lahf
nop
push
push
xor
add
sar
sub
aas
cmps
mov
leave
aas
cmps
mov
rcl
mov
repz
push
push
xchg
stos
movs
ja
or
inc
daa
clc
les
cmps
mov
(bad)
adc
cs
les
xchg
stos
leave
aas
mov
and
aas
cmps
mov
stc
mov
fwait
ror
mov
leave
aas
cmps
mov
sahf
push
fisubr
or
mov
sar
mov
cdq
repnz
lock
inc
daa
clc
les
cmps
mov
enter
leave
aas
cmps
mov
cld
xor
cwde
shr
leave
aas
cmps
mov
imul
icebp
imul
movs
leave
aas
cmps
mov
cdq
cmp
cmp
retf
xchg
adc
sub
xcrypt-cfb
cmps
mov
dec
cmp
xchg
fwait
sar
mov
leave
cmp
ret
xcrypt-cfb
cmps
mov
mov
mov
rcl
cmp
repz
icebp
xchg
mov
cdq
aaa
push
dec
outs
scas
mov
ret
xcrypt-cfb
cmps
mov
leave
outs
push
movs
leave
aas
cmps
mov
enter
cld
xchg
push
add
push
push
mov
xor
fwait
sar
mov
cdq
aaa
push
retf
outs
mov
retf
inc
cmp
jo
test
stos
enter
nop
out
sub
gs
clc
les
cmps
mov
cdq
cmp
retf
mov
leave
aas
cmps
mov
leave
and
clc
inc
mov
inc
xchg
fwait
lock
nop
ror
stos
leave
aas
cmps
mov
pop
adc
sub
mov
mov
cmp
xor
test
aaa
mov
clc
les
cmps
mov
leave
cmp
inc
ret
mov
cmps
mov
leave
xor
lods
cwde
int3
imul
pop
mov
mov
aas
cmps
mov
leave
mov
fisubr
scas
inc
xchg
fwait
lock
ds
ror
stos
leave
aas
cmps
mov
xchg
mov
cmps
mov
dec
cmc
dec
sbb
lahf
jnp
outs
cmps
mov
jmp
ss
adc
mov
fstp
pop
sub
sub
xcrypt-cfb
cmps
mov
leave
aas
pop
jecxz
aas
cmps
mov
enter
mov
cmps
mov
leave
cmp
or
inc
push
pop
enter
clc
and
scas
das
clc
inc
daa
clc
les
cmps
mov
enter
leave
aas
cmps
mov
leave
jne
sub
leave
aas
test
leave
outs
pop
jecxz
aas
cmps
mov
int3
mov
inc
add
popa
retf
or
ins
fs
push
sahf
xor
add
sahf
sub
add
scas
mov
sar
mov
fnstcw
movs
mov
mov
lahf
ror
fwait
sar
mov
stc
xor
mov
xcrypt-cfb
cmps
mov
jmp
aas
cmps
mov
leave
aas
mov
(bad)
lock
ret
mov
leave
aas
cmps
mov
sar
mov
leave
push
(bad)
mov
ins
(bad)
loopne
std
lahf
sar
cwde
scas
data16
imul
and
hlt
adc
ror
mov
leave
aas
cmps
mov
std
inc
xchg
fwait
sar
mov
leave
aas
mov
add
push
daa
clc
les
cmps
mov
leave
aaa
lods
and
seta
leave
aas
cmps
mov
lahf
push
sahf
das
arpl
(bad)
sahf
push
fisubr
ret
xcrypt-cfb
cmps
mov
mov
scas
mov
repz
sahf
fwait
ror
mov
or
lods
mov
cld
es
ror
stos
leave
aas
cmps
mov
iret
xor
popf
ins
sar
mov
repz
fwait
ror
mov
leave
aas
cmps
mov
dec
xchg
retf
outs
xchg
stos
leave
aas
cmps
mov
or
or
mov
into
outs
xchg
fwait
sar
mov
xchg
rcr
add
int
into
adc
cs
seta
leave
aas
mov
inc
clc
push
(bad)
jmp
sub
lahf
sar
mov
dec
cmp
inc
ret
mov
cmps
mov
leave
dec
ja
leave
aas
cmps
mov
xchg
pop
push
gs
seta
jmp
xchg
mov
pop
xor
popf
nop
addr16
ror
stos
leave
aas
cmps
mov
ret
cmps
nop
cmp
xchg
ror
mov
leave
aas
cmps
mov
repz
sub
in
mov
addr16
fs
xor
xchg
fwait
lock
out
xchg
rol
xor
das
xchg
leave
aas
cmps
mov
movs
pop
push
in
seta
stc
ss
xchg
lods
(bad)
sbb
pop
xchg
fwait
sar
mov
jns
xor
lock
(bad)
call
cmps
mov
mov
xchg
mov
pop
xor
mov
sar
mov
test
enter
xchg
(bad)
call
movs
mov
ror
mov
leave
ss
mov
xlat
push
nop
test
mov
jns
cmp
call
test
xchg
movs
scas
sbb
pop
xchg
fwait
sar
mov
stc
es
inc
xor
xchg
mov
push
into
mov
inc
sub
xchg
fwait
sar
mov
dec
ds
cs
xcrypt-cfb
cmps
mov
leave
aas
cmps
mov
pop
bound
leave
cmp
mov
sar
mov
iret
(bad)
imul
test
(bad)
pop
repz
cmps
mov
jmp
scas
aaa
cmps
leave
aas
cmps
mov
stc
cmp
es
seta
leave
aas
cmps
mov
iret
lahf
test
movs
retfw
stos
clc
inc
cs
push
pop
mov
mov
(bad)
cmps
mov
leave
xor
fwait
sub
les
cmps
mov
dec
mov
cwde
lds
stos
leave
aas
cmps
mov
sbb
out
movs
test
cmps
arpl
scas
imul
leave
aas
cmps
mov
enter
leave
aas
cmps
mov
jmp
scas
and
leave
cmp
arpl
pop
adc
cmp
enter
adc
seta
leave
ss
mov
test
pop
cmps
ror
mov
leave
aas
cmps
mov
shl
int3
seta
leave
aas
cmps
mov
inc
cmp
daa
clc
push
daa
clc
les
cmps
mov
leave
aas
cmps
mov
leave
aas
cmps
mov
sar
mov
stc
ss
pop
push
push
fisubr
(bad)
seta
leave
aas
mov
stos
(bad)
and
leave
aas
cmps
mov
out
into
stos
mov
mov
lahf
push
xor
ffree
cmps
push
and
leave
aas
test
dec
cmps
sar
test
mov
jns
test
stc
xchg
call
scas
bound
aas
pop
lock
cmps
call
cmps
mov
sbb
xchg
fwait
sar
mov
rcl
push
and
leave
aas
cmps
mov
retf
seta
leave
ss
mov
test
push
mov
xcrypt-cfb
cmps
mov
leave
aas
cmps
mov
shl
movs
int3
seta
leave
aas
mov
imul
es
inc
xor
xchg
stos
add
and
neg
xor
leave
aas
cmps
mov
int3
pop
cmps
mov
cdq
cmp
stos
cld
(bad)
aaa
clc
les
cmps
mov
clc
(bad)
ds
add
int
rcr
cld
(bad)
aaa
clc
les
cmps
mov
leave
aas
cmps
mov
scas
popa
lahf
fwait
lock
ror
stos
leave
aas
cmps
mov
or
movs
and
xcrypt-cfb
cmps
mov
stc
sub
lahf
sar
mov
jmp
xchg
clc
les
cmps
mov
dec
cmp
cmps
mov
adc
cmp
xchg
clc
xor
ins
ret
sub
fwait
ror
mov
stc
fisubr
das
repz
cmp
je
jge
retf
lahf
sar
mov
dec
xor
pop
xor
jo
push
jmp
mov
and
les
cmps
mov
clc
jbe
clc
les
cmps
mov
leave
lahf
ja
leave
aas
cmps
mov
xchg
push
sahf
xor
or
xor
retf
outs
xchg
stos
leave
aas
cmps
mov
imul
cmps
mov
cdq
cmp
or
lahf
sar
mov
(bad)
xchg
lea
pushf
lock
lock
aaa
clc
les
cmps
mov
inc
mov
pop
shr
leave
aas
cmps
mov
sbb
(bad)
jo
clc
retf
out
or
xor
mov
out
xor
cmps
loopne
push
(bad)
aad
cwde
retf
cmps
mov
xchg
fwait
sar
mov
pop
xor
mov
seta
cdq
adc
movnti
cmps
mov
imul
cmps
mov
test
jbe
clc
inc
push
lods
ret
mov
mov
sbb
outs
xchg
stos
leave
aas
cmps
mov
sub
pop
clc
les
cmps
mov
enter
ret
aas
cmps
mov
cdq
rcr
inc
repz
stc
lahf
mov
ror
jmp
repz
sahf
fwait
ror
mov
leave
aas
cmps
mov
lock
lahf
ror
fwait
sar
mov
jmp
xchg
clc
les
cmps
mov
imul
pop
cmps
leave
aas
cmps
mov
dec
ds
pop
sar
mov
jns
lods
inc
jecxz
stc
lahf
mov
xchg
clc
hlt
push
xchg
fwait
sar
mov
sub
sub
and
jmp
repz
sub
in
jno
inc
cmc
retf
popfw
jmp
xchg
clc
hlt
push
xchg
fwait
sar
mov
leave
aas
lods
mov
popa
gs
retf
(bad)
(bad)
adc
aas
cmps
mov
dec
ds
mov
leave
aas
cmps
mov
dec
xor
xchg
stos
leave
aas
cmps
mov
mov
cmps
and
lahf
pop
stos
leave
aas
test
leave
pop
daa
xchg
sar
mov
leave
ss
mov
enter
pop
mov
or
aas
cmps
mov
leave
aas
cmps
mov
push
mov
fld
or
dec
mov
cwde
shr
leave
aas
cmps
mov
imul
jle
mov
sahf
jae
test
mov
xchg
enter
leave
aas
cmps
mov
enter
leave
aas
cmps
mov
retf
seta
leave
aas
cmps
mov
sahf
push
push
ss
(bad)
xchg
sar
mov
xlat
add
lods
sar
mov
sub
aas
cmps
mov
stc
mov
fwait
ror
mov
mov
mov
retf
inc
scas
call
leave
aas
cmps
mov
dec
mov
pop
xor
aas
cmps
mov
cmp
mov
clts
xchg
fwait
add
outs
(bad)
repnz
lahf
sar
mov
dec
xor
mov
xor
pop
inc
les
cmps
mov
leave
aas
mov
jmp
push
or
movs
popf
imul
or
push
or
stos
test
nop
sbb
pop
addr16
add
test
mov
xchg
inc
dec
dec
ja
dec
dec
ja
dec
das
jo
leave
jle
test
mov
adc
pushf
pop
and
xor
push
mov
add
imul
ret
sub
in
xchg
pop
stc
rcr
scas
jns
test
pop
mov
outs
(bad)
loope
mov
cmp
xchg
xchg
ret
ficomp
dec
mov
cmp
rcl
xor
xchg
icebp
dec
sub
inc
xor
push
call
je
sbb
jae
add
xor
push
sbb
jle
mov
popf
inc
out
jns
rcl
repnz
bound
sbb
out
inc
mov
or
sub
add
add
mov
ja
dec
ins
ins
mov
and
pop
mov
int
add
fnstsw
or
test
jb
cdq
mov
adc
jbe
test
fdiv
cmps
rcl
push
jp
retf
adc
mov
adc
loopne
jl
into
push
shl
icebp
ret
cmc
repz
or
icebp
adc
mov
(bad)
jns
(bad)
ror
push
ds
mov
enter
lahf
add
iret
int
jg
mov
adc
cmps
pop
mov
outs
mov
fdivr
cmp
add
mov
xchg
fwait
add
in
cwde
sar
lahf
(bad)
andnps
mov
push
xchg
push
jecxz
and
mov
sar
mov
aas
jnp
gs
push
mov
fistp
lock
and
jp
jp
mov
ja
dec
das
jo
leave
jle
test
mov
mov
nop
cmp
xor
jo
clc
shl
add
xchg
rol
push
push
rcr
loope
jle
jo
pop
mov
inc
adc
outs
daa
cmps
xchg
bnd
xor
mov
mov
add
cmp
ss
mov
dec
loopne
push
cmp
call
imul
cmps
(bad)
xchg
xor
jo
not
ds
mov
sbb
(bad)
dec
xchg
js
pop
jne
dec
ss
dec
aaa
iret
fdivr
arpl
shl
xchg
adc
adc
push
stos
push
sar
and
ja
mov
out
sbb
iret
inc
mov
ret
pop
js
xor
ret
iret
sbb
outs
nop
inc
xlat
lock
sub
mov
adc
jns
outs
push
xor
iret
fdiv
repz
mul
mov
sub
aaa
add
test
ds
das
dec
adc
dec
mov
(bad)
stc
faddp
ror
shr
ja
pop
loop
or
shl
mov
mov
xor
cmp
jecxz
jb
stc
sub
and
je
mov
jne
shl
cli
add
fs
cmp
cmp
mov
mov
add
dec
jno
outs
mov
je
sbb
push
push
add
xor
xchg
cmc
xor
xchg
fxrstor
add
mov
mov
aaa
mov
mov
fnstsw
(bad)
cmp
inc
or
mov
ror
inc
lock
or
hlt
mov
push
xor
mov
(bad)
test
jae
imul
pop
repz
jbe
xchg
jo
test
pop
xor
xchg
dec
ins
push
jg
(bad)
and
and
outs
mov
push
stos
outs
pop
addr16
push
ja
pop
jne
xor
(bad)
mov
jae
and
xchg
pop
test
in
pop
jg
rcr
pop
fnsave
jbe
cmps
fadd
mov
inc
xchg
xor
gs
rcr
push
pop
adc
ja
sbb
std
inc
mov
xchg
push
daa
(bad)
mov
adc
jbe
sub
push
dec
aas
sti
xor
xor
js
cmp
pusha
sub
pop
stc
mov
jl
int
(bad)
loope
push
mov
(bad)
mov
xor
lods
loop
inc
mov
sar
sti
adc
xchg
out
out
out
mov
sub
push
(bad)
mov
iret
test
sbb
es
imul
iret
sub
outs
es
cmp
retf
xchg
aas
lock
fld
ret
shl
in
call
jns
outs
mul
pop
mov
pop
ror
adc
add
daa
sbb
ins
lods
pushf
mov
mov
iret
int
mov
mov
and
or
pop
test
and
in
xor
(bad)
mov
int3
test
push
jno
add
sub
mov
test
inc
mov
pop
push
jno
xor
fimul
in
test
push
icebp
mov
xor
pushf
test
push
mov
push
mov
xor
mov
push
xor
inc
mov
mov
int3
sub
cld
pop
sar
add
test
in
test
inc
mov
pop
sar
xor
fimul
in
sub
mov
pop
sar
mov
cmp
pushf
sub
mov
sub
mov
in
cmp
mov
jae
cld
sub
cmp
inc
mov
mov
int3
sub
cld
pop
sar
add
test
in
test
inc
mov
pop
sar
xor
fimul
in
sub
mov
pop
sar
mov
cmp
pushf
sub
mov
sub
mov
out
cmp
mov
jae
cld
sub
cmp
inc
mov
mov
int3
test
push
jns
add
sub
mov
test
inc
mov
pop
push
jns
xor
fimul
in
test
push
stc
mov
cmp
pushf
test
push
mov
ins
cmp
mov
push
cmp
inc
mov
mov
int3
test
push
jnp
add
sub
iret
mov
test
inc
mov
pop
push
jnp
xor
fimul
in
test
push
sti
mov
cmp
pushf
test
push
mov
outs
cmp
mov
push
cmp
inc
mov
mov
int3
sub
cld
pop
sar
add
test
in
test
inc
mov
pop
sar
xor
fimul
in
sub
mov
pop
sar
mov
cmp
pushf
sub
mov
sub
mov
out
cmp
mov
jae
cld
sub
cmp
inc
mov
mov
int3
imul
and
jmp
in
test
inc
mov
pop
xchg
jno
xor
fimul
in
imul
icebp
mov
xor
pushf
imul
mov
push
mov
movs
xor
mov
mov
sub
jmp
inc
dec
jecxz
inc
inc
retf
imul
fld
dec
jecxz
xor
dec
jecxz
and
dec
jecxz
lds
imul
xchg
(bad)
jl
mov
hlt
mov
sbb
add
dec
jecxz
lds
imul
xchg
(bad)
hlt
sbb
loope
xor
dec
jecxz
lds
imul
xchg
mov
loope
and
xor
jecxz
lds
imul
xchg
lds
hlt
popa
mov
jecxz
imul
xchg
sahf
lds
imul
xchg
(bad)
xchg
sbb
loope
jno
sbb
add
inc
sbb
lds
imul
xchg
(bad)
in
jl
mov
hlt
mov
sbb
add
dec
jecxz
lds
imul
xchg
mov
or
xchg
into
aaa
add
in
or
xchg
mov
push
(bad)
in
or
xchg
push
fistp
jle
add
in
or
xchg
cs
add
in
or
xchg
into
xor
fild
mov
push
(bad)
in
or
xchg
push
fistp
jle
add
in
or
xchg
cs
add
or
idiv
or
neg
or
test
or
idiv
or
neg
or
test
cld
imul
xchg
and
out
ss
dec
add
leave
int3
imul
mov
mov
(bad)
xchg
popaw
add
iret
dec
add
dec
mov
leave
adc
inc
xor
add
push
push
ins
mov
mov
push
imul
mov
cmp
dec
or
mov
mov
sar
repz
mov
jns
inc
cdq
test
movs
loop
xchg
xor
jbe
int3
arpl
dec
ds
jno
adc
xor
sbb
dec
ja
dec
popf
pop
imul
mov
imul
push
mov
scas
pop
sub
mov
(bad)
js
dec
mov
(bad)
dec
ret
sub
xchg
test
mov
jle
push
pop
jl
fimul
dec
mov
js
int3
js
dec
mov
std
shl
mov
(bad)
jns
jecxz
dec
xchg
ds
xchg
mov
jmp
iret
out
ss
xchg
call
in
out
sbb
jo
mov
int
pushf
xchg
cs
dec
jbe
cmp
xlat
mov
leave
mov
adc
mov
and
sub
inc
add
addr16
adc
pop
imul
xor
in
icebp
mov
adc
mov
mov
int
xchg
mov
and
mov
fwait
mov
arpl
enter
test
jns
outs
or
iret
cwde
jb
jmp
adc
dec
push
mov
outs
mov
inc
ret
test
mov
jle
dec
xchg
ficomp
mov
stos
out
xlat
lods
inc
sub
je
and
jle
inc
xchg
outs
(bad)
fs
xchg
sbb
(bad)
leave
jae
dec
xchg
jle
dec
xchg
out
pop
inc
test
div
and
jle
dec
xchg
jle
dec
xchg
mov
sbb
dec
inc
sbb
out
leave
jae
dec
xchg
jle
inc
xchg
fidivr
inc
in
cmp
mov
and
xchg
dec
or
cli
pusha
(bad)
outs
cdq
aam
mov
call
dec
xchg
ficom
xchg
ja
dec
xchg
jle
dec
xchg
sahf
sbb
add
retf
push
jns
pop
addr16
pop
xchg
inc
call
ds
push
push
dec
pop
out
leave
jae
dec
xchg
jle
dec
xchg
jle
dec
xchg
into
adc
xchg
jle
dec
xchg
sahf
adc
mov
push
sbb
dec
cli
xchg
iret
inc
pop
inc
sbb
fisub
inc
fiadd
adc
jae
inc
mov
cmp
fild
or
jb
jne
sub
inc
mov
or
xchg
push
jb
mov
mov
(bad)
sar
stc
sbb
inc
fwait
dec
leave
jne
cmp
in
push
pop
lods
fist
xor
add
jnp
inc
fwait
dec
imul
jae
dec
(bad)
cdq
pop
imul
jecxz
lods
loop
xor
inc
bnd
fidivr
inc
mov
mov
mov
shl
cmp
rol
cmc
int
jb
pop
ret
dec
inc
xor
daa
retf
mov
push
das
out
sub
dec
jbe
cmp
fld
ror
and
(bad)
cmp
mov
retf
dec
in
sub
push
sar
sbb
movs
nop
adc
inc
adc
dec
xchg
fs
enter
push
xchg
mov
jmp
cld
dec
dec
push
xlat
inc
fdivr
adc
loopne
xor
jo
std
push
lock
icebp
cmp
in
push
scas
int3
jns
xchg
cld
repz
outs
sbb
xchg
mov
pop
mov
add
push
in
mov
add
cmp
out
xchg
mov
jmp
xor
push
sbb
cli
sub
push
jmp
test
(bad)
int
out
cdq
mov
inc
xchg
test
sahf
xchg
dec
jmp
leave
mov
iret
popf
jmp
(bad)
std
mov
fmul
pop
sar
mov
fdivr
mov
arpl
jnp
mov
mov
mov
int
jmp
pop
icebp
mov
and
jo
scas
xchg
cmp
dec
and
xchg
jmp
rol
jmp
mov
arpl
rcr
ins
ret
jmp
test
cmp
lahf
into
adc
mov
repnz
out
vprotq
dec
xchg
dec
call
pop
push
mov
dec
call
dec
je
jbe
lods
fs
dec
xor
mov
div
and
add
cmovnp
xor
sub
wbinvd
je
jmp
xor
and
dec
xor
out
add
mov
cmps
jno
and
adc
(bad)
jns
test
jo
cmp
gs
adc
and
in
fadd
add
test
test
sbb
stos
xchg
push
ror
shr
inc
xchg
jns
xchg
cli
adc
rcl
adc
out
pop
cmc
dec
es
(bad)
es
ror
pusha
nop
stc
push
pop
les
stos
fdiv
fidiv
iret
int
(bad)
mov
fst
mov
fmul
lds
cdq
icebp
xchg
fild
sub
xchg
dec
loopne
inc
mov
add
fs
add
dec
popf
in
mov
sar
jo
mov
aam
sub
outs
(bad)
jg
sub
mov
iret
test
sub
add
adc
push
xchg
fdiv
ds
mov
mov
shl
xchg
mov
add
pop
das
fwait
das
mov
push
jb
add
popa
mov
lahf
push
mov
fucomip
or
mov
test
jge
cmp
test
adc
std
aad
xchg
daa
jmp
stc
adc
jge
test
adc
jge
not
in
stc
adc
jge
mov
jo
leave
adc
jge
icebp
pop
sbb
jo
inc
fld
xlat
in
leave
adc
jge
stc
adc
pushf
dec
leave
fcom
test
adc
jge
repz
jge
jo
daa
mov
test
adc
jge
(bad)
sbb
mov
dec
inc
mov
fnstenv
jge
jae
jo
jo
daa
mov
test
adc
mov
shl
stos
inc
push
in
stc
adc
std
inc
repz
test
cmp
jge
clc
sbb
cdq
in
in
adc
in
inc
pusha
in
stc
adc
jge
inc
fs
int
sti
ret
mov
cdq
adc
jge
lock
sub
dec
adc
jge
inc
fs
std
lock
ret
mov
cdq
adc
jge
stc
adc
sub
dec
adc
jge
lock
sbb
stc
adc
jge
stc
adc
in
inc
pusha
in
stc
adc
jmp
adc
(bad)
and
inc
push
in
stc
adc
pushf
into
push
dec
inc
mov
fst
jge
jae
jb
jo
daa
mov
test
adc
jge
clc
lahf
cmp
rcl
jp
inc
push
in
stc
adc
jge
jae
ja
jo
daa
mov
test
adc
jge
(bad)
sbb
pushf
mov
inc
mov
(bad)
jno
stc
adc
fucom
clc
sub
lods
add
and
in
stc
adc
jge
hlt
sbb
loope
gs
stc
adc
fucom
clc
sub
movs
and
nop
sbb
std
rol
scas
inc
push
in
stc
adc
jge
jo
daa
mov
test
adc
mov
rol
retf
pusha
in
stc
adc
std
inc
repz
test
jmp
adc
dec
mov
shl
lods
inc
pusha
in
stc
adc
jge
icebp
adc
inc
repz
test
mov
adc
jge
add
lods
lock
ret
mov
jmp
adc
jge
test
adc
sub
sar
dec
cmps
mov
push
and
inc
and
stc
adc
jge
cld
sbb
test
adc
jge
clc
pop
jge
adc
xlat
push
shl
jmp
jge
not
mov
dec
sub
fst
jge
jae
pushf
out
push
dec
inc
mov
jmp
adc
jge
jae
ja
jo
daa
mov
test
adc
jge
(bad)
sbb
pushf
mov
inc
mov
jmp
adc
jge
jns
sub
adc
jge
lock
fst
addr16
rcr
imul
push
into
sub
fld
inc
in
stc
adc
jge
stc
adc
test
adc
jge
lock
sub
stc
adc
jge
stc
adc
pushf
into
push
dec
inc
mov
jmp
adc
std
inc
repz
test
fst
jge
(bad)
sbb
mov
pushf
out
push
dec
inc
mov
jmp
adc
jge
jae
jbe
jo
daa
mov
test
adc
jge
(bad)
sbb
pushf
mov
inc
mov
jmp
adc
in
jne
in
stc
adc
sub
push
sbb
pop
rcr
jle
rcr
add
in
stc
adc
jge
test
adc
jge
lock
sub
stc
adc
jge
lock
sub
leave
adc
jge
stc
adc
sbb
stc
adc
jge
dec
dec
jo
xor
lock
ret
mov
cdq
adc
jge
cld
sbb
test
adc
jge
cdq
in
in
adc
jge
pop
inc
pusha
ffree
and
or
nop
pop
daa
loope
adc
jge
stc
adc
sub
cmp
jge
stc
adc
sub
or
jge
lock
sub
shl
fst
dec
pop
rcr
sub
adc
into
and
fld
inc
in
stc
adc
sub
in
adc
jge
test
adc
jge
clc
pop
jge
adc
xlat
push
shl
jmp
jge
not
mov
dec
sub
fst
jge
clc
lahf
fidivr
rcl
cli
mov
adc
jge
stc
adc
jae
jbe
jo
daa
mov
test
adc
fidivr
jo
stos
mov
adc
jge
stc
adc
in
jne
in
stc
adc
sub
mov
adc
test
je
arpl
mov
(bad)
js
mov
pop
and
(bad)
js
jecxz
and
jecxz
fdivr
mov
inc
addr16
stos
cld
cmps
dec
call
outs
je
jbe
sbb
(bad)
dec
cmp
data16
jne
jae
bound
xchg
dec
outs
sahf
shl
sub
add
(bad)
div
mov
shl
jns
add
or
scas
clc
inc
fs
lods
pop
mov
push
jge
jle
mov
sbb
icebp
lods
inc
into
push
(bad)
int
pop
out
cmp
or
mov
dec
inc
xor
(bad)
rcr
push
xor
loop
mov
add
xor
jns
outs
push
xor
cmp
dec
loope
int
outs
pop
sbb
sub
in
je
gs
xchg
shl
into
cmc
das
inc
mov
addr16
je
pop
jbe
inc
xor
jo
cmc
ja
loop
and
lock
cmp
call
daa
mov
ffreep
int
xchg
fwait
leave
adc
ret
sti
adc
fnsave
fistp
mov
mov
into
test
mov
int
jno
cmp
mov
jmp
fsubrp
and
inc
mov
adc
fidiv
mov
pop
imul
and
shl
fwait
xor
loop
dec
and
jns
jp
jns
jp
jae
cli
loop
pop
and
jns
jp
jo
sub
sub
jp
jns
jp
jns
jp
js
daa
fdivr
fdivr
jno
sbb
lock
ss
fisub
in
clc
ret
loop
dec
push
mov
mov
jecxz
jmp
push
mov
out
out
ret
aam
sbb
rol
mov
fcmovb
out
dec
call
jle
jle
push
fsub
inc
xor
(bad)
gs
out
in
rcl
call
ja
std
pusha
repz
sahf
xchg
lock
cdq
cmp
fwait
dec
cmp
mov
mov
adc
cmp
xchg
mov
push
shl
lock
inc
cs
mov
(bad)
mov
jae
jns
sbb
ins
inc
test
or
sbb
mov
mov
push
fiadd
adc
mov
aas
dec
stc
outs
jo
mov
sti
cmp
iret
test
sbb
push
mov
lock
in
inc
adc
jns
(bad)
jo
inc
in
enter
(bad)
adc
xlat
cli
(bad)
aad
mov
mov
push
cli
push
sar
cmp
rol
out
or
cld
test
ins
cmp
and
fimul
aaa
iret
sub
mov
jb
sbb
scas
inc
test
dec
test
(bad)
rol
add
mov
jb
mov
jae
leave
mov
push
xor
mov
test
sbb
inc
xor
iret
dec
cmc
ret
lock
shl
inc
mov
int
test
pop
or
push
out
dec
mov
(bad)
stc
(bad)
jae
(bad)
adc
push
push
movs
jmp
dec
fild
push
xchg
mov
mov
cmp
add
rol
js
rol
push
call
add
rol
js
fisttp
clc
pop
push
add
rol
js
add
rol
js
fiadd
js
jno
push
das
rol
js
rol
js
fstp
daa
rol
js
rol
js
(bad)
sbb
push
inc
fistp
xor
(bad)
outs
adc
cmp
mov
outs
push
je
xor
mov
mov
sahf
imul
xor
adc
mov
xor
push
mov
or
dec
cwde
dec
imul
and
push
adc
inc
xor
push
loop
aam
retf
push
push
(bad)
outs
jle
fild
iret
jbe
into
lock
call
jae
sbb
jl
mov
enter
inc
into
cli
sub
cmps
out
(bad)
adc
jnp
ficomp
out
inc
mov
push
rcl
lock
or
dec
in
daa
iret
cwde
stc
mov
push
call
out
mov
push
into
ror
(bad)
stc
rol
ror
retf
jae
or
jmp
jle
jg
div
fdivr
out
int
jg
mov
mov
cmp
retf
mov
sti
fucomip
xchg
sbb
jns
xor
ret
fcmove
loopne
pop
stc
mov
sbb
xor
repz
sti
enter
mov
shl
xchg
sub
loopne
mov
(bad)
das
push
inc
cmp
enter
test
jo
out
int
xchg
fidivr
retf
int
push
stc
cdq
clc
push
lock
jbe
jns
xor
mov
aad
mov
pushf
cwde
das
dec
das
mov
adc
loopne
sub
fwait
cmp
mov
jmp
out
sub
loopne
sub
loopne
and
and
adc
cdq
pushf
jne
dec
cli
(bad)
loopne
cs
stos
inc
cmp
aam
jmp
leave
mov
push
pop
mov
icebp
imul
xor
xchg
xor
hlt
imul
leave
inc
mov
pop
inc
dec
dec
ja
dec
das
jo
leave
jle
mov
and
in
div
mov
je
adc
dec
ja
dec
dec
ja
dec
scas
jge
imul
fdivr
arpl
mov
js
push
mov
pop
and
fild
ret
mov
jl
cmp
pop
inc
mov
shl
dec
and
mov
movs
pop
retf
cmp
mov
cld
mov
pop
test
mov
outs
jne
xchg
pop
mov
rol
jmp
int
js
imul
add
jp
jno
jb
sar
jae
sbb
es
and
fwait
outs
iret
dec
ja
loopne
inc
xor
(bad)
ror
xor
cmp
int3
in
xchg
movs
mov
es
jl
fs
cmp
xor
mov
or
shr
dec
mov
xor
xor
out
sbb
aaa
jle
(bad)
mov
call
pop
(bad)
sub
ffree
loopne
test
fdivrp
jge
dec
or
xor
fdiv
ds
popa
adc
and
mov
and
cmps
mov
mov
shl
imul
bound
pop
repnz
dec
mov
aas
sbb
ror
jmp
icebp
xchg
dec
push
in
sub
pop
icebp
outs
mov
int
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
inc
nop
mov
and
jl
xchg
test
push
icebp
jns
xor
in
inc
and
mov
push
xor
cmp
jne
lea
xchg
test
ss
scas
pusha
nop
std
into
push
and
jp
xor
jl
xor
fdivr
or
test
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
mov
clc
jae
call
push
mov
icebp
ja
mov
cli
jp
mov
hlt
jns
mov
xchg
jmp
je
mov
rol
mov
std
je
mov
stc
jne
mov
repz
mov
icebp
jae
mov
rcr
stc
jns
mov
cmc
jg
mov
cmc
jb
mov
xchg
add
(bad)
je
mov
cli
jb
mov
bnd
mov
adc
or
jno
mov
sti
jl
mov
cmc
jle
mov
adc
pop
idiv
mov
bnd
mov
xor
sub
or
ja
mov
cld
jne
mov
idiv
mov
icebp
jno
mov
lock
mov
bnd
mov
jecxz
pop
repz
mov
rol
pop
lock
mov
stc
jge
mov
bnd
mov
cmc
jb
mov
mov
or
je
mov
jae
enter
mov
stc
jp
mov
jae
push
pop
jecxz
cmp
jp
mov
cmc
ja
mov
(bad)
jle
mov
ret
mov
mov
add
mov
pop
pop
(bad)
jge
mov
bnd
mov
add
idiv
mov
mov
mov
jle
mov
and
cmc
jp
mov
arpl
fdiv
jae
mov
cmp
cli
jle
mov
ret
shr
ja
mov
and
imul
arpl
cmp
jbe
mov
sti
jl
mov
xor
mov
arpl
mov
jecxz
cmp
jp
mov
mov
push
mov
and
cld
jb
mov
rcl
idiv
mov
xchg
push
stc
je
mov
clc
jno
mov
std
jo
mov
icebp
jb
mov
cli
jg
mov
idiv
mov
(bad)
jne
mov
arpl
sahf
cmc
js
mov
and
out
div
mov
clc
jp
mov
repz
mov
bnd
mov
push
cmps
mov
ja
mov
(bad)
jp
mov
icebp
jns
mov
cli
jns
mov
icebp
je
mov
hlt
jl
mov
push
mov
push
mov
push
sub
cmc
jbe
mov
(bad)
jnp
mov
lock
mov
lock
mov
sti
jno
mov
hlt
js
mov
and
pop
jae
jg
jns
mov
div
call
jl
mov
div
mov
xor
cld
jle
mov
jae
das
hlt
jo
mov
cli
jl
mov
div
mov
idiv
mov
hlt
jg
mov
lock
mov
div
mov
bnd
mov
push
(bad)
ins
stc
jnp
mov
bnd
mov
idiv
mov
icebp
jbe
mov
cli
jle
mov
xor
jp
mov
arpl
cmc
ja
mov
and
sti
jle
mov
repz
bnd
mov
repz
xchg
mov
stc
js
mov
and
pop
bnd
mov
arpl
or
jg
mov
rol
sbb
sub
shr
clc
and
bnd
mov
stc
jbe
mov
bnd
mov
(bad)
jb
mov
push
test
lock
mov
xchg
mov
std
jnp
mov
repz
or
sub
pop
pop
repz
mov
bnd
mov
xor
push
mov
push
mov
hlt
js
mov
cli
jnp
mov
icebp
ja
mov
ret
(bad)
and
jne
mov
repz
mov
cli
jp
mov
cmp
(bad)
jle
mov
and
mov
arpl
mov
sti
jg
mov
std
jns
mov
div
call
jae
mov
and
jle
mov
ret
jl
(bad)
jbe
mov
ror
shl
jnp
mov
xchg
adc
mov
shr
push
repz
mov
jae
add
jnp
mov
xor
and
js
mov
push
fdiv
jne
mov
adc
add
jno
mov
lock
mov
repz
mov
adc
cmp
scas
push
cli
jp
mov
icebp
ja
mov
cmc
ja
mov
push
push
cmp
xchg
icebp
jb
mov
and
jns
mov
jae
xor
js
mov
adc
clc
jne
mov
push
and
(bad)
jae
mov
shl
jae
jle
mov
xchg
int3
xor
jl
mov
and
pusha
lock
mov
xor
shl
jle
mov
inc
icebp
sar
cmps
mov
cli
je
mov
repz
mov
clc
jb
mov
lock
mov
xor
(bad)
jl
mov
ret
pop
inc
hlt
jno
mov
and
xchg
repz
mov
ret
add
div
mov
repz
std
jg
mov
and
lock
jge
mov
jae
mov
enter
cmc
jge
mov
jecxz
popa
cli
jno
mov
inc
out
icebp
jl
mov
add
mov
jo
mov
mov
div
std
jno
mov
sub
cmp
mov
hlt
jbe
mov
or
jnp
mov
mov
and
jno
mov
icebp
jl
mov
cld
jbe
mov
push
or
jle
mov
adc
clc
jae
mov
ret
sub
idiv
mov
adc
add
jae
mov
cli
jbe
mov
icebp
jnp
mov
cmc
jle
mov
stc
jns
mov
icebp
ja
mov
adc
mov
cli
jo
mov
sar
mov
bnd
mov
sti
jl
mov
and
lock
mov
arpl
clc
jp
mov
repz
mov
(bad)
jge
mov
mov
jbe
dec
repz
jno
mov
cli
jne
mov
rcr
inc
hlt
js
mov
push
mov
inc
test
cmps
mov
adc
mov
push
xchg
push
div
mov
stos
inc
div
mov
xor
mov
jae
inc
stc
js
mov
bnd
mov
cmc
jl
mov
add
jae
mov
clc
jle
mov
lock
mov
sti
jl
mov
clc
js
mov
clc
ja
mov
icebp
jl
mov
mov
xchg
mov
jecxz
movs
sti
jns
mov
bnd
mov
icebp
jno
mov
cli
jl
mov
hlt
jnp
mov
shr
hlt
jae
mov
xchg
jno
(bad)
jle
mov
ror
movs
push
mov
xchg
adc
xchg
idiv
mov
and
bnd
mov
add
icebp
js
mov
push
fcmovnb
cli
jg
mov
mov
mov
push
jb
mov
repz
mov
cld
jb
mov
cli
jl
mov
icebp
jno
mov
cmc
jle
mov
rep
adc
test
jb
cli
jo
mov
idiv
mov
adc
hlt
jp
mov
add
movs
push
mov
inc
xor
scas
test
test
(bad)
jg
stos
call
je
mov
(bad)
jns
movs
mov
mov
stos
sbb
push
js
test
sti
jg
movs
call
jb
mov
icebp
jne
lods
enter
idiv
stos
pop
xchg
sbb
std
je
scas
sbb
and
(bad)
jns
scas
test
cmp
call
jo
mov
hlt
jge
movs
cwde
arpl
mov
jnp
stos
mov
push
scas
enter
std
jg
movs
pop
mov
stos
icebp
jle
stos
js
mov
stos
clc
jae
sub
jp
mov
repz
movs
or
pop
sub
js
scas
mov
jg
movs
clc
jecxz
stos
cld
jl
lods
dec
add
stc
jbe
mov
idiv
scas
or
cmps
test
mov
mov
mov
js
movs
clc
xor
cwde
lock
movs
cwde
push
in
sti
jp
mov
idiv
or
(bad)
movs
dec
repz
js
jo
stos
cwde
shr
movs
cmp
mov
test
ret
push
push
or
cmp
ja
lods
dec
and
(bad)
jno
lods
call
jl
test
cli
jb
cmps
cmp
mov
js
lods
pop
xchg
xor
stc
jne
test
ror
cmp
jge
test
mov
(bad)
mov
cld
jne
movs
dec
mov
jmp
cwde
arpl
lods
pop
push
popf
mov
sbb
mov
test
and
mov
bnd
movs
enter
repz
scas
cmp
xchg
test
icebp
ja
stos
call
jnp
cmps
cwde
arpl
sub
jno
stos
pop
adc
movs
test
fldcw
repz
test
clc
je
lods
push
jno
movs
enter
hlt
je
cmps
sbb
xchg
jle
jbe
test
cmc
ja
mov
(bad)
jp
cmps
dec
repz
mov
jo
movs
test
pop
fdivp
jge
mov
repz
mov
repz
stos
push
jb
scas
sub
adc
clc
js
movs
sbb
xchg
jb
test
cld
jo
mov
idiv
cmps
mov
dec
stc
je
movs
cmp
cli
pop
cmc
js
stos
enter
cmc
ja
mov
cli
ja
mov
(bad)
jo
mov
cld
jnp
mov
idiv
test
ins
lahf
icebp
jle
stos
enter
div
movs
mov
jns
test
icebp
ja
stos
sub
sub
icebp
jb
mov
cli
jg
movs
clc
xor
mov
je
mov
sti
jns
cmps
mov
in
cld
lock
scas
test
repnz
sti
jge
stos
call
js
stos
test
popf
in
lock
stos
mov
stos
mov
enter
hlt
jge
mov
push
cmps
cwde
jecxz
sub
jle
movs
sub
imul
jg
idiv
scas
js
add
arpl
cld
lock
mov
bnd
scas
clc
adc
jge
jne
stos
mov
jo
movs
or
sub
std
jno
movs
clc
push
scas
std
clc
jno
movs
fcom
mov
sbb
ins
(bad)
jge
mov
hlt
js
lods
dec
mov
std
repz
mov
clc
jns
cmps
test
or
ja
stos
clc
jae
cmp
mov
ja
cmps
cmp
xor
movs
js
rol
jle
mov
cli
jnp
stos
push
jbe
scas
sub
not
stc
je
scas
mov
xor
(bad)
stos
enter
repz
cmps
sbb
mov
cmps
js
mov
repz
stos
sbb
push
ret
imul
bnd
scas
mov
jg
stos
cwde
jecxz
and
ja
movs
fadd
adc
mov
cs
jnp
stos
enter
stc
jne
scas
dec
arpl
repz
movs
dec
arpl
scas
mov
jbe
enter
idiv
push
jno
scas
sub
pop
ret
(bad)
jl
movs
sub
ins
xchg
cmc
jno
mov
cli
jo
mov
icebp
jge
cmps
clc
jecxz
sar
jns
lods
cwde
xchg
and
fcom
ds
(bad)
jl
mov
hlt
jno
movs
mov
(bad)
push
cmc
ja
stos
or
mov
cmp
cmps
lods
js
xor
js
test
lock
stos
call
jb
mov
cli
jne
scas
mov
xchg
stos
enter
icebp
jno
stos
js
ins
mov
pop
jae
push
stc
jne
mov
repz
mov
clc
jns
movs
enter
(bad)
jno
cmps
clc
jae
lock
jg
scas
pop
jecxz
sar
jns
lods
pop
jae
xor
mov
mul
idiv
test
idiv
movs
fdiv
xchg
div
movs
mov
jo
lods
sbb
out
call
jle
cmps
sub
push
scas
clc
shl
(bad)
jne
test
stc
jle
lods
dec
xchg
adc
jl
scas
dec
arpl
inc
cmc
jnp
mov
div
mov
idiv
cwde
jae
xchg
repz
lods
mov
loope
hlt
jne
movs
clc
push
lock
movs
push
jne
test
add
stos
js
cmps
inc
lock
mov
stc
jl
movs
push
ja
test
stc
jp
lods
push
ja
test
cmc
je
movs
sbb
push
icebp
jne
scas
cmp
mov
enter
cli
jnp
stos
cmp
jbe
jne
lods
mov
iret
xchg
jns
lods
test
fld
idiv
mov
cmc
jns
stos
push
jns
movs
test
mov
js
test
stc
jg
scas
cwde
arpl
stos
pop
jecxz
cmps
cld
jno
lods
clc
jae
daa
cld
jns
scas
js
push
aaa
cld
jnp
test
div
lods
mov
ja
sti
jp
test
and
inc
cmc
jne
scas
push
jl
stos
enter
div
mov
idiv
mov
(bad)
jae
stos
sub
imul
jbe
test
clc
jne
scas
call
je
test
sti
jbe
stos
clc
xchg
movs
aam
jnp
stos
cwde
inc
mov
scas
fadd
inc
movs
div
mov
repz
mov
cli
jb
test
ret
jg
icebp
jg
lods
mov
jb
cmps
test
sbb
jno
scas
mov
jl
test
push
aas
xchg
bnd
mov
cli
jne
cmps
sub
out
sub
jecxz
(bad)
jns
mov
div
mov
cmc
jne
mov
bnd
scas
push
jb
lods
or
mov
lods
cwde
adc
jge
test
xor
cld
jae
mov
cld
jnp
scas
test
jbe
lock
stos
cmp
(bad)
mul
(bad)
jle
mov
div
test
xchg
ds
dec
repz
cmp
jb
xchg
mov
fcomp
test
in
lock
fwait
sbb
mov
or
cmps
call
mov
mov
jmp
mov
sti
jae
xchg
mov
jle
nop
clc
repz
pop
repz
xchg
cmp
gs
stc
jl
cdq
call
jno
xchg
mov
jl
xchg
clc
adc
pop
hlt
jno
xchg
test
ss
retf
retf
repz
xchg
sub
aam
idiv
cwde
call
je
popf
test
(bad)
sti
bnd
fsub
stos
stc
ja
sahf
cwde
and
sahf
mov
jbe
js
mov
cmc
jb
pushf
cmp
dec
fcomi
jbe
xchg
mov
jne
cdq
sbb
or
js
pushf
pop
add
cld
jae
nop
dec
ret
add
idiv
xchg
or
inc
cwde
push
jl
popf
sub
fcomi
jp
xchg
cmp
leave
enter
xchg
sub
neg
clc
jp
sahf
mov
enter
xchg
dec
mov
dec
sti
jae
xchg
fsub
or
jb
xchg
pop
xchg
stos
dec
repz
cdq
test
mov
hlt
jae
nop
mov
jg
xchg
mov
pop
push
pop
mov
(bad)
cdq
sbb
jg
std
jg
xchg
mov
test
jl
sahf
or
out
cwde
mov
ss
test
xor
fwait
cwde
xchg
(bad)
mov
jo
xchg
enter
hlt
je
fwait
or
in
repz
nop
test
sti
mov
jl
popf
sub
jbe
push
jl
nop
pop
repz
jmp
test
mov
repz
xchg
mov
dec
imul
adc
jno
xchg
sbb
not
cld
jne
sahf
fdiv
add
xchg
cmp
push
imul
shr
or
jl
sahf
dec
jecxz
pop
bnd
sahf
mov
leave
out
lock
popf
dec
and
into
bnd
call
mov
clc
push
(bad)
fdivp
jge
xchg
or
test
jl
xchg
call
jge
xchg
test
movs
mov
call
jl
nop
enter
div
xchg
mov
fdivp
je
xchg
clc
adc
(bad)
jno
xchg
or
push
cmc
jl
xchg
dec
and
sahf
div
xchg
mov
ja
xchg
call
jo
xchg
clc
xor
bnd
cdq
push
jb
xchg
mov
je
xchg
fdiv
in
std
jo
nop
sbb
push
pop
idiv
xchg
pop
mov
(bad)
cdq
or
iret
bnd
pushf
dec
adc
lahf
div
cwde
test
sbb
cld
jge
popf
call
jbe
xchg
call
jae
cwde
fdiv
pushf
repz
sahf
mov
int3
idiv
xchg
sbb
jmp
fwait
pop
xchg
cld
fdiv
jp
xchg
test
mov
jae
xchg
push
jle
xchg
sub
es
call
jl
xchg
fdiv
mov
dec
push
pop
pushf
cli
jb
pushf
mov
xchg
bnd
xchg
dec
ret
push
mov
pop
push
sbb
icebp
jle
xchg
or
sbb
jae
lahf
js
cmp
xchg
pop
ror
sbb
cwde
mov
lods
std
jge
cdq
call
jo
pushf
test
repz
sti
jle
popf
mov
push
fadd
std
lock
xchg
cwde
jecxz
lods
sti
jne
xchg
fsub
out
sbb
inc
dec
(bad)
js
nop
pop
sbb
js
fwait
cmp
push
sahf
js
jo
repz
lahf
push
jns
xchg
push
je
xchg
sub
sub
pop
inc
ds
cmc
jl
pushf
dec
ret
retf
jno
xchg
mov
jp
xchg
call
jne
call
neg
idiv
popf
mov
out
test
scas
jb
jnp
call
(bad)
lahf
js
dec
adc
jnp
call
mov
clc
xor
clc
jnp
xchg
test
jge
repz
nop
call
jl
xchg
pop
rcr
pushf
sub
daa
add
jl
xchg
push
jl
cdq
dec
mov
cmps
xchg
sub
(bad)
push
jns
nop
pop
xor
push
sti
jnp
lahf
call
jbe
call
(bad)
call
es
push
lahf
fsub
inc
sar
jnp
xchg
sub
pop
cmp
inc
lahf
test
gs
jle
xchg
dec
add
jbe
xchg
dec
rol
repz
popf
clc
inc
sbb
jg
pushf
enter
repz
xchg
dec
push
cmp
hlt
jp
nop
cmp
int3
shl
push
lahf
clc
inc
aam
(bad)
jb
pushf
test
jecxz
cld
jge
xchg
cwde
xchg
cld
loopne
jb
cwde
pop
push
pop
hlt
jnp
xchg
js
xchg
sar
cmps
xchg
fadd
cmps
add
jb
xchg
sbb
mov
std
je
pushf
clc
or
jns
xchg
mov
out
enter
hlt
jo
call
push
cwde
fadd
adc
jnp
lahf
mov
jg
popf
test
das
lock
nop
push
jbe
xchg
sub
leave
xor
jne
xchg
mov
js
xchg
clc
sub
idiv
xchg
or
cmps
xchg
sub
mov
jl
fwait
js
cdq
adc
jb
cwde
push
jl
nop
fcom
mov
cmp
inc
jno
je
cdq
cwde
mov
(bad)
xchg
pop
ret
inc
cli
jge
lahf
call
jl
xchg
test
add
cwde
cmp
adc
jge
xchg
call
ja
xchg
clc
ret
cmp
cmc
jne
popf
js
shl
inc
aam
push
call
mov
sbb
not
idiv
call
inc
xchg
mov
jb
cdq
test
movs
cmps
icebp
jl
xchg
mov
idiv
jl
call
xchg
nop
dec
arpl
div
lahf
enter
icebp
jp
pushf
js
jo
div
cwde
enter
lock
cwde
mov
out
mov
jb
nop
pop
jecxz
push
repz
xchg
mov
jne
sahf
pop
xchg
fnsave
repz
xchg
enter
clc
js
xchg
mov
xlat
hlt
jg
xchg
js
test
cmp
inc
stc
jl
lahf
dec
add
call
data16
sbb
push
xchg
lock
sahf
sbb
push
xchg
enter
cli
ja
cwde
js
add
jl
fadd
push
inc
(bad)
jae
cwde
cwde
jae
idiv
jb
fwait
js
xor
jge
cdq
clc
jecxz
aam
jl
sahf
dec
ret
xlat
xchg
cli
jge
cdq
test
loope
icebp
js
xchg
sub
cmc
hlt
repz
lahf
enter
lock
nop
dec
adc
xchg
or
lods
push
(bad)
jp
xchg
push
jbe
sahf
js
dec
movs
(bad)
js
nop
mov
jge
xchg
dec
push
bound
adc
idiv
xchg
clc
ror
movs
bnd
fwait
sbb
adc
stc
jnp
xchg
pop
mov
adc
jne
fadd
xor
icebp
js
sahf
cwde
inc
retf
mov
ja
xchg
cwde
mov
xor
push
jae
popf
mov
jle
cwde
clc
inc
mov
hlt
jp
xchg
fdiv
popf
xchg
bnd
xchg
sbb
test
std
jge
fwait
push
jl
sahf
test
inc
inc
stc
jbe
sahf
pop
jecxz
push
bnd
xchg
dec
inc
gs
or
jp
cld
jge
xchg
mov
add
div
xchg
enter
push
popf
or
and
jg
cwde
dec
arpl
js
ret
jne
sbb
fisttp
js
test
loopne
sti
ja
test
repz
jp
or
mov
sbb
jmp
movs
sub
ja
lea
mov
cld
jb
(bad)
dec
idiv
xchg
jl
sub
bound
push
jge
lea
and
dec
stc
jg
or
test
ja
(bad)
push
jp
mov
push
leave
sti
std
jo
mov
ret
shr
dec
sub
cld
jnp
mov
jbe
mov
push
test
jae
(bad)
sbb
jle
mov
jne
mov
js
mov
jae
sbb
jae
mov
jecxz
dec
icebp
jle
(bad)
pop
mov
(bad)
call
(bad)
mov
std
jp
mov
and
call
out
icebp
jno
mov
repz
call
test
hlt
jbe
mov
rcl
mov
add
mov
inc
mov
mov
icebp
jns
mov
cli
jo
mov
div
mov
jecxz
jp
jl
mov
hlt
ja
mov
arpl
retf
(bad)
mov
cli
jg
mov
icebp
jb
mov
std
jno
mov
lock
mov
sti
je
mov
idiv
dec
and
mov
div
mov
clc
jle
mov
jecxz
sub
je
mov
(bad)
ja
mov
cmc
jp
mov
arpl
jae
mov
idiv
mov
(bad)
ja
mov
and
mov
sub
jmp
jle
mov
cld
jle
mov
hlt
je
mov
inc
fisttp
mov
loopne
div
mov
(bad)
jne
mov
push
(bad)
cmp
jge
mov
cmc
js
mov
adc
mov
adc
test
dec
dec
hlt
jne
mov
push
push
sub
jp
mov
idiv
mov
cld
je
mov
bnd
mov
cli
jne
mov
shr
cmp
je
mov
std
jns
mov
icebp
js
mov
xchg
ror
cli
jb
mov
cmc
js
mov
push
neg
call
je
mov
and
js
test
cmc
je
mov
clc
jnp
mov
clc
jnp
mov
mov
cdq
icebp
jg
mov
cld
jp
mov
mov
jns
jl
mov
ror
std
jb
mov
stc
jg
mov
bnd
mov
idiv
mov
xor
cs
ja
mov
idiv
mov
adc
scas
cmc
jnp
mov
bnd
mov
ror
mov
xchg
xchg
scas
repz
mov
repz
mov
test
mov
div
mov
jae
scas
cld
jle
mov
xor
cmc
jnp
mov
(bad)
jbe
mov
bnd
mov
stc
jns
mov
sti
jb
mov
sti
je
mov
jae
cs
jp
mov
add
out
lock
mov
sti
jae
mov
lock
mov
cli
jnp
mov
cmc
jl
mov
icebp
jle
mov
push
movs
dec
cli
jae
mov
adc
mov
cmc
jno
mov
cld
jno
mov
bnd
mov
cmc
je
mov
mov
pop
(bad)
jge
mov
and
dec
std
jle
mov
bnd
mov
repz
mov
add
sub
jnp
mov
(bad)
jge
mov
and
mov
arpl
pop
xor
mov
cli
jns
mov
repz
mov
push
mov
bnd
mov
xor
lock
mov
div
mov
idiv
mov
shr
mov
sub
mov
pop
jecxz
(bad)
cld
jne
mov
hlt
jnp
mov
jae
lods
div
sub
clc
jge
js
mov
div
mov
std
jp
mov
lock
mov
bnd
mov
clc
jnp
mov
xchg
pop
std
icebp
jge
mov
xor
(bad)
jae
mov
std
jo
mov
idiv
mov
stc
jp
mov
bnd
mov
repz
mov
clc
jae
mov
stc
jp
mov
cmc
jb
mov
(bad)
jg
mov
cli
jae
mov
cli
jl
mov
arpl
mov
stc
jle
mov
clc
jl
mov
repz
mov
cmc
jp
mov
hlt
jae
mov
cli
jo
mov
icebp
jl
mov
cli
jno
mov
hlt
jns
mov
push
sbb
fist
jno
mov
cli
jns
mov
icebp
je
mov
bnd
mov
mov
xchg
sti
jg
mov
lock
mov
stc
jb
mov
repz
mov
js
mov
std
jne
mov
sti
jge
mov
and
lock
mov
arpl
mov
xchg
push
and
jb
mov
adc
repz
jl
mov
cli
jnp
mov
adc
mov
js
ficom
jle
mov
push
jmp
mov
push
not
stc
jne
mov
(bad)
js
mov
sbb
push
jle
mov
xor
dec
jae
pusha
std
jns
mov
sti
jge
mov
lock
mov
sti
jg
mov
lock
mov
icebp
jle
mov
clc
js
mov
div
mov
jae
mov
pop
repz
shl
ja
mov
push
mov
and
icebp
idiv
mov
push
mov
jecxz
loope
jno
mov
icebp
jb
mov
cmc
jb
mov
cli
jne
mov
adc
div
mov
div
mov
xor
jge
mov
ret
or
cli
jns
mov
icebp
je
mov
(bad)
jnp
mov
xor
and
jl
mov
div
mov
cld
jl
mov
(bad)
jno
mov
cli
jnp
mov
sti
js
mov
ret
pushf
push
lock
mov
and
cmp
mov
bnd
mov
cmc
jg
mov
adc
jb
mov
push
arpl
pop
inc
jb
sti
jne
mov
cld
je
mov
jecxz
inc
stc
jo
mov
clc
jns
mov
arpl
push
lock
mov
stc
jle
mov
arpl
pop
bnd
mov
and
push
sti
js
mov
cmc
js
mov
push
adc
call
jno
mov
ret
mov
mov
repz
std
jne
mov
repz
idiv
mov
mov
aaa
sti
jne
mov
jecxz
(bad)
icebp
jae
mov
push
mov
sti
jle
mov
stc
jg
mov
rcl
hlt
bnd
mov
xchg
jmp
add
xor
ja
mov
and
call
jno
mov
cld
jl
mov
bnd
mov
mov
ss
lock
mov
xchg
ins
movs
cmc
jg
mov
cli
je
mov
icebp
jns
mov
cli
jge
mov
hlt
jnp
mov
(bad)
jne
mov
cli
jo
mov
repz
xchg
idiv
mov
mov
mov
dec
xchg
pop
inc
cld
jae
mov
push
mov
cmc
ja
mov
(bad)
jp
mov
bnd
scas
or
call
out
sbb
jns
stos
cwde
add
(bad)
je
scas
cmp
mov
stos
js
inc
or
jbe
lods
call
jno
movs
push
js
test
inc
jnp
div
cwde
and
dec
std
jns
scas
fsub
retf
jbe
mov
sub
dec
cmp
(bad)
jp
movs
cmp
iret
retf
cmc
jp
test
lock
mov
clc
jns
lods
clc
repz
(bad)
jle
cmps
js
lea
sub
fwait
idiv
movs
test
mov
mov
stc
jbe
movs
clc
mov
fwait
std
jno
scas
call
jl
cmps
push
jge
cmps
test
or
call
jnp
mov
(bad)
jg
test
push
xor
(bad)
jg
mov
hlt
jb
movs
mov
jl
scas
mov
jno
stos
clc
and
scas
mov
jo
stos
clc
jae
mov
sub
pop
clc
cmc
jo
mov
clc
jg
mov
div
scas
cwde
add
enter
movs
cwde
and
jnp
cmps
test
cmp
stc
jae
test
bnd
lods
push
jns
cmps
dec
xchg
(bad)
jns
jl
stos
pop
add
mov
idiv
scas
call
jne
stos
test
mov
idiv
lods
sub
mov
or
pop
pop
std
jns
scas
pop
xor
cmc
jg
cmps
sub
mov
cwde
mov
test
push
jbe
movs
call
jno
test
jae
push
lock
movs
cwde
ret
rcr
bnd
test
cld
jg
mov
bnd
movs
dec
repz
stc
jno
mov
sti
jns
stos
fadd
(bad)
movs
call
jp
mov
(bad)
js
mov
bnd
movs
or
fs
clc
js
cmps
push
jne
mov
repz
lods
cwde
add
cmps
cmp
mov
jle
scas
push
jg
mov
std
js
mov
cmc
jp
lods
push
ja
test
and
dec
cld
jns
scas
push
je
stos
sub
xchg
push
jne
mov
std
jge
scas
clc
xor
clc
push
inc
(bad)
jg
lods
sub
push
dec
(bad)
jl
stos
clc
add
repz
mov
clc
jae
cmps
mov
inc
scas
mov
jge
movs
sbb
sub
jg
cmps
mov
pop
cli
jle
movs
enter
icebp
jae
mov
cmc
je
test
hlt
jb
scas
sub
mov
jp
movs
fdiv
inc
mov
cmc
jne
test
(bad)
js
lods
mov
xchg
clc
jle
lods
mov
push
jl
je
mov
sti
jl
test
adc
hlt
jnp
scas
cmp
push
jl
jp
mov
idiv
stos
cmp
ss
test
cmp
cld
je
stos
call
jbe
scas
js
fstp
push
jns
mov
clc
jle
test
and
dec
rcr
stos
sub
stos
(bad)
cmc
jbe
mov
hlt
jne
movs
pop
rol
(bad)
js
mov
(bad)
jnp
movs
dec
repz
mov
call
jbe
mov
sti
jo
lods
or
sbb
jge
test
stc
jb
mov
sti
jns
test
ret
rcl
push
cmps
pop
add
add
jne
mov
sti
jno
mov
div
cmps
mov
jl
cmps
call
jo
scas
sub
movs
adc
jp
mov
icebp
jp
scas
pop
rol
(bad)
jae
movs
sbb
push
mov
pop
inc
ins
jb
jp
lods
or
cmp
(bad)
mov
std
jle
mov
lock
mov
cmc
je
scas
push
jno
mov
(bad)
jl
cmps
sub
shl
bnd
lods
clc
adc
mov
mov
ja
mov
(bad)
jnp
cmps
clc
arpl
mov
cld
jp
movs
push
jp
scas
sbb
(bad)
stos
pop
repz
xchg
cld
jg
mov
div
cmps
cmp
push
mov
lock
cmps
js
sbb
jnp
movs
call
jp
stos
sub
cmp
stc
ja
scas
push
jbe
mov
lock
stos
cmp
in
sar
jg
scas
js
repz
sbb
loopne
ja
stos
enter
cld
jo
mov
(bad)
jbe
lods
mov
jl
test
jae
shl
jle
test
ret
push
jo
je
cmps
mov
jno
test
add
sti
jl
lods
cmp
and
jns
mov
icebp
jae
stos
dec
adc
lock
jne
cmps
or
xor
repz
lods
js
leave
popa
std
jno
mov
div
lods
mov
xchg
cld
jge
test
xor
inc
idiv
test
arpl
lods
cmp
xchg
add
jge
mov
(bad)
jo
cmps
clc
sar
cmps
push
jp
scas
cwde
arpl
hlt
ja
stos
fsub
addr16
jge
mov
(bad)
jne
scas
cwde
jae
mov
jne
mov
clc
jno
stos
or
cs
jp
cmps
clc
cmp
mov
ss
test
arpl
push
repz
mov
clc
jb
movs
or
repnz
idiv
fdiv
xchg
cld
jno
stos
cwde
jae
(bad)
repz
mov
sti
jnp
mov
cmc
ja
cmps
sub
dec
jbe
jbe
scas
clc
rcr
repz
stos
mov
jno
test
(bad)
jns
movs
mov
add
std
jp
cmps
cmp
(bad)
mov
idiv
scas
sub
jbe
jae
test
lock
lods
mov
jnp
test
xor
mov
jo
movs
fadd
std
out
jge
mov
cld
jp
movs
mov
xchg
pop
stc
jbe
mov
bnd
movs
cwde
ret
mov
lods
push
jbe
mov
clc
jnp
movs
fdiv
push
mov
cli
jne
movs
dec
add
ja
jb
stos
dec
push
adc
scas
or
sub
(bad)
ja
stos
dec
xor
push
clc
je
cmps
cwde
and
and
jae
mov
cli
jle
movs
test
jmp
arpl
xor
jb
lods
cmp
(bad)
test
(bad)
je
movs
clc
jae
xchg
cmc
jns
mov
icebp
jo
stos
mov
jge
cmps
cwde
arpl
sti
jb
mov
cmc
js
test
(bad)
jne
lods
clc
mov
adc
jl
cmps
cwde
xchg
sbb
mov
cli
jbe
cmps
test
ss
js
stos
mov
iret
test
jne
scas
enter
icebp
je
mov
repz
movs
clc
mov
mov
jg
movs
sub
cmps
mov
(bad)
js
scas
js
mov
scas
enter
(bad)
jge
test
repz
movs
hlt
jo
lods
sub
jbe
cmp
scas
js
jg
std
jl
movs
pop
push
or
(bad)
jp
mov
repz
stos
call
jns
scas
test
xor
div
call
out
push
ja
xchg
mov
in
call
clc
retf
xchg
hlt
jns
lahf
sub
fwait
pop
cld
jne
xchg
js
mov
xchg
mov
push
fwait
push
jl
xchg
dec
arpl
push
xchg
or
ins
jp
jg
cwde
js
jnp
bnd
lahf
sub
(bad)
cdq
or
push
jge
xchg
dec
xchg
and
je
xchg
sbb
ds
jbe
xchg
call
jo
xchg
js
fstp
repz
sahf
test
in
fwait
cli
jbe
lahf
pop
adc
retf
icebp
jnp
call
es
cwde
arpl
cwde
test
scas
dec
div
xchg
enter
stc
jge
cwde
call
jno
xchg
push
jae
fwait
push
ja
call
push
xchg
sbb
push
jnp
jge
xchg
cwde
push
sbb
or
sbb
jo
call
es
enter
clc
jno
xchg
mov
aad
div
call
inc
xchg
cmp
enter
cwde
pop
adc
dec
ret
cdq
fdiv
jno
call
inc
xchg
cmp
test
jno
xchg
js
dec
enter
fwait
pop
mov
cmps
lahf
mov
mov
enter
std
jb
xchg
js
pop
cwde
push
xchg
mov
pop
test
jae
cwde
call
jnp
xchg
call
jg
xchg
mov
js
call
xchg
test
out
mov
jb
lahf
enter
cmc
jg
call
out
dec
xchg
cwde
mov
jne
sahf
cwde
shr
or
mov
call
inc
lahf
enter
push
xchg
mov
outs
imul
and
lock
xchg
sbb
es
sbb
sbb
cwde
pop
mov
mov
je
xchg
push
jl
xchg
fsub
leave
pop
div
xchg
pop
rcr
push
std
jle
xchg
sbb
push
xchg
cwde
arpl
into
div
pushf
or
(bad)
div
cwde
mov
xchg
dec
cli
ja
sahf
sbb
mov
fwait
cmp
mov
(bad)
jp
popf
cmp
inc
sahf
sti
js
cwde
clc
arpl
std
jo
lahf
sbb
fdivrp
jnp
fwait
mov
outs
stc
jnp
cdq
sub
cs
je
lahf
js
pop
mov
js
sub
idiv
cdq
cmp
(bad)
lock
xchg
sub
(bad)
xchg
push
js
cdq
enter
lock
xchg
js
imul
jnp
xchg
sub
cmp
inc
pushf
push
jb
sahf
cmp
das
cld
jae
xchg
cmp
(bad)
popf
call
jg
fwait
sub
jbe
cmp
ss
push
jp
xchg
sub
or
sti
jne
xchg
enter
hlt
jle
fwait
push
jle
cwde
clc
sar
(bad)
std
jle
cdq
pop
and
pushf
clc
jo
cdq
sbb
inc
cwde
enter
idiv
nop
mov
jae
xchg
cmp
jl
jbe
pushf
or
call
mov
sbb
jge
xchg
sub
mov
icebp
jb
xchg
sub
xchg
cli
jno
call
mov
sbb
pop
repz
cwde
enter
repz
cdq
or
or
je
cdq
fsub
inc
cdq
sub
xor
or
bnd
pushf
cwde
jecxz
ins
stc
jne
sahf
test
loopne
icebp
jae
xchg
mov
cmps
xchg
cwde
mov
jbe
call
jp
call
mov
enter
cmc
jp
xchg
mov
dec
sbb
enter
clc
jb
xchg
mov
popf
icebp
jle
xchg
or
push
fwait
pop
arpl
cmp
push
jb
xchg
sub
pop
cld
jns
xchg
mov
je
nop
clc
adc
mov
jae
stos
clc
jae
sub
jae
mov
adc
pop
icebp
jbe
mov
icebp
je
mov
(bad)
js
mov
jecxz
push
js
mov
sti
jb
mov
clc
js
mov
jecxz
push
jnp
mov
bnd
mov
xor
cmc
jle
mov
repz
mov
std
jns
mov
add
lock
mov
xchg
add
jb
mov
arpl
retf
xchg
mov
shr
or
jbe
mov
mov
dec
std
jg
mov
(bad)
jle
mov
stc
jns
mov
cli
jl
mov
cli
je
mov
hlt
jb
mov
mov
or
jb
mov
(bad)
jp
mov
idiv
mov
bnd
mov
xchg
push
sbb
jb
mov
xor
sti
jns
mov
cli
jle
mov
jecxz
mov
push
ja
mov
arpl
sti
div
mov
mov
sti
lock
mov
std
jns
mov
inc
(bad)
div
dec
adc
test
jae
mov
shl
cmp
jns
mov
mov
clc
cli
jnp
mov
mov
cmp
jbe
mov
cli
ja
mov
icebp
ja
mov
and
(bad)
jle
mov
rcl
(bad)
jg
mov
adc
stc
jl
mov
mov
push
mov
add
jle
mov
ret
sbb
bnd
mov
jae
sub
jle
mov
cmc
js
mov
push
retf
sbb
js
mov
stc
jb
mov
lock
mov
clc
jno
mov
and
mov
ret
cmps
dec
cmc
jge
mov
cld
jle
mov
ret
dec
stc
clc
jae
mov
hlt
js
mov
mov
dec
sti
js
mov
hlt
jg
mov
and
leave
repz
mov
add
sbb
js
mov
add
pop
std
jge
mov
cmp
cmc
jns
mov
and
pop
(bad)
jo
mov
stc
jae
mov
mov
dec
hlt
jle
mov
push
clc
fdivp
jne
mov
adc
mov
inc
nop
mov
clc
shr
call
jns
mov
cld
jb
mov
repz
mov
div
mov
(bad)
jp
mov
sti
je
mov
rcr
repz
mov
clc
jbe
mov
cli
jbe
mov
clc
je
mov
hlt
jno
mov
clc
jo
mov
sti
jnp
mov
repz
es
jae
pop
idiv
mov
jecxz
out
div
mov
idiv
mov
cli
ja
mov
jae
pop
(bad)
jl
mov
cli
jp
mov
cld
jo
mov
inc
add
cmc
jo
mov
and
out
std
jae
mov
cld
jnp
mov
xor
lahf
cld
jae
mov
add
pushf
(bad)
jg
mov
cli
jnp
mov
inc
out
or
je
mov
repz
mov
bnd
mov
bnd
mov
(bad)
jns
mov
mov
or
jae
mov
div
mov
jae
std
div
mov
bnd
mov
div
mov
add
(bad)
je
mov
arpl
cmp
js
enter
(bad)
mov
(bad)
jp
mov
jae
add
jbe
mov
icebp
jno
mov
std
jb
mov
jecxz
sar
jg
mov
jecxz
mov
sbb
mov
icebp
jns
mov
cmc
jnp
mov
push
push
add
jg
mov
xor
lock
mov
sti
jo
mov
mov
xor
es
cld
ja
mov
jae
loop
ja
mov
lock
mov
lock
mov
xor
repz
mov
hlt
jg
mov
idiv
mov
push
(bad)
jae
jae
mov
(bad)
jb
mov
bnd
mov
(bad)
js
mov
cmc
jno
mov
rcr
sti
jle
mov
cld
jge
mov
stc
jae
mov
bnd
mov
rcr
sti
jge
mov
(bad)
js
mov
cli
jp
mov
lock
mov
and
and
jp
mov
add
mov
mov
cld
push
repz
mov
stc
je
mov
inc
xchg
adc
jge
mov
div
js
mov
(bad)
jg
mov
rol
stc
jp
mov
bnd
mov
adc
clc
jl
mov
add
cli
jge
mov
div
mov
cmc
jg
mov
std
jbe
mov
xor
(bad)
jae
mov
xor
jno
js
mov
sti
jl
mov
icebp
jns
mov
bnd
mov
ror
mov
ret
fwait
popa
cld
jge
mov
jae
add
jge
mov
jae
popa
hlt
ja
mov
push
dec
push
stc
jae
mov
lock
mov
repz
jno
jo
mov
jecxz
add
jle
mov
and
and
jle
mov
(bad)
jnp
mov
jae
adc
jl
mov
idiv
mov
or
cli
jb
mov
mov
jbe
or
loope
cmc
jbe
mov
(bad)
jg
mov
rol
mov
mov
push
mov
xchg
lods
(bad)
div
mov
cli
js
mov
cmc
je
mov
sti
jnp
mov
push
js
xor
cmc
jl
mov
ror
cmps
stc
ja
mov
xor
xchg
jp
mov
mov
xchg
clc
jno
mov
xor
mov
cmc
js
mov
arpl
mov
idiv
mov
repz
addr16
mov
mov
xchg
jbe
mov
jae
(bad)
repz
mov
icebp
js
mov
hlt
jae
mov
shr
cli
jl
mov
push
cmp
mov
mov
xor
jp
mov
inc
fist
ss
inc
jmp
idiv
dec
arpl
fs
js
mov
cld
jge
mov
bnd
mov
(bad)
jbe
mov
idiv
mov
hlt
jno
mov
icebp
jbe
mov
cld
jp
mov
sti
jno
mov
cli
ja
mov
jae
inc
lock
mov
clc
jl
mov
(bad)
jbe
mov
xchg
enter
out
sub
inc
mov
shr
xchg
stc
jl
mov
mov
jbe
js
mov
call
je
mov
(bad)
jo
mov
jecxz
and
dec
and
jb
mov
xor
div
mov
ret
outs
in
jbe
mov
cmc
jge
mov
bnd
mov
sti
jl
mov
cmc
je
mov
icebp
jge
mov
icebp
jno
test
sbb
lock
mov
repz
scas
cmp
dec
bnd
stos
dec
and
cmps
sub
cli
cmc
ja
mov
clc
js
mov
cmc
jle
mov
icebp
js
movs
or
lods
dec
xor
cmc
jns
mov
(bad)
jl
mov
push
mov
clc
jg
scas
clc
repz
idiv
mov
sti
jno
scas
clc
jecxz
sbb
jg
scas
cmp
push
mov
idiv
mov
stc
ja
mov
clc
jle
stos
sub
ss
cmp
fwait
icebp
jl
stos
cwde
add
cmps
clc
jecxz
mov
or
pop
imul
jbe
enter
lock
movs
or
jae
cld
jl
test
or
(bad)
je
scas
call
jge
lods
call
ja
scas
push
jg
cmps
js
les
mov
dec
idiv
test
xchg
call
lods
push
ja
cmps
sbb
(bad)
sbb
jae
cmps
cmp
(bad)
movs
cmp
mov
mov
repz
lods
mov
sub
jb
cmps
enter
idiv
scas
enter
hlt
jp
scas
clc
xor
stc
js
lods
cwde
xchg
add
jp
movs
sbb
adc
idiv
scas
cmp
daa
js
jns
lods
sub
xor
repz
mov
hlt
jno
scas
mov
(bad)
stos
call
js
movs
sbb
es
icebp
jne
stos
enter
cli
jle
lods
dec
and
scas
cwde
cmp
sbb
inc
stc
push
movs
test
pop
mov
enter
bnd
lods
enter
lock
cmps
call
ja
cmps
push
jae
stos
call
jno
test
repz
scas
dec
mov
into
clc
jg
mov
std
jle
movs
clc
inc
in
std
jb
mov
repz
mov
repz
scas
call
jns
stos
call
jne
test
and
mov
cli
jbe
mov
cld
je
mov
div
mov
clc
jle
mov
jae
push
js
mov
xor
mov
cli
jb
mov
icebp
jg
mov
cli
jnp
mov
add
jo
mov
ret
push
retf
out
mov
jl
mov
shl
cli
jne
mov
rol
mov
icebp
jge
mov
cli
js
mov
sti
ja
mov
arpl
cmp
jo
mov
xchg
fimul
dec
repz
std
js
mov
cld
jae
mov
hlt
jp
mov
arpl
mov
and
mov
lock
mov
hlt
js
mov
arpl
cmc
jnp
mov
arpl
(bad)
jbe
mov
and
jp
mov
adc
pop
repz
mov
repz
mov
std
ja
mov
mov
ss
cli
jne
mov
sti
jge
mov
push
jmp
lock
mov
adc
js
jle
mov
hlt
jle
mov
arpl
mov
shl
pop
xchg
mov
mov
or
jo
mov
std
je
mov
cmc
jne
mov
jecxz
fdivr
js
mov
mov
div
hlt
jno
mov
adc
push
mov
jae
mov
jae
pop
icebp
jg
mov
icebp
jg
mov
repz
add
test
push
jl
mov
(bad)
jle
mov
idiv
mov
sar
mov
ret
dec
sub
jp
mov
std
jg
mov
xor
sti
jle
mov
and
cmc
jns
mov
rol
sub
jb
mov
(bad)
jb
mov
and
std
jp
mov
jae
fdecstp
ja
mov
xor
outs
repz
mov
ret
fidivr
clc
jg
mov
and
idiv
test
cld
(bad)
cli
je
mov
icebp
jns
mov
icebp
jge
mov
stc
jp
mov
repz
idiv
mov
adc
repz
mov
inc
pop
dec
std
jle
mov
arpl
cmc
jle
mov
add
(bad)
jo
mov
clc
jle
mov
div
mov
and
(bad)
idiv
mov
mov
es
sti
jnp
mov
lock
mov
div
mov
idiv
mov
cmc
jg
mov
idiv
mov
sti
jg
mov
repz
mov
arpl
bnd
mov
ret
push
out
cld
je
mov
add
(bad)
jp
mov
repz
icebp
jo
mov
add
stc
je
mov
div
mov
stc
jg
mov
ret
cmp
bnd
mov
adc
int3
lock
mov
std
jno
mov
(bad)
jb
mov
inc
cli
or
jg
mov
stc
jg
mov
rcr
mov
lock
mov
lock
mov
(bad)
jno
mov
push
pop
sub
jle
mov
cld
jle
mov
inc
je
std
jle
mov
jecxz
jl
je
mov
idiv
fadd
and
je
mov
add
clc
jle
mov
cld
jbe
mov
cmc
jns
mov
and
cmp
test
idiv
clc
jae
xchg
jae
mov
xchg
fld
std
jl
mov
idiv
mov
sti
ja
mov
repz
mov
idiv
mov
stc
jne
mov
icebp
jb
mov
sti
jo
mov
(bad)
jge
mov
mov
mov
jnp
mov
hlt
jbe
mov
lock
mov
repz
mov
div
mov
inc
shr
clc
jne
mov
cld
jl
mov
add
cmp
jne
mov
div
mov
xor
mov
mov
inc
mov
shl
mov
xor
clc
js
mov
jae
pop
hlt
jne
mov
xchg
push
stc
jl
mov
and
repz
mov
clc
jbe
mov
bnd
mov
arpl
mov
jae
mov
idiv
mov
cld
jne
mov
and
mov
shr
call
jge
mov
cli
je
mov
clc
jne
mov
sti
jo
mov
lock
mov
cld
jp
mov
push
mov
and
pop
idiv
mov
repz
lock
mov
repz
mov
div
mov
(bad)
jo
mov
jecxz
leave
repz
mov
rcl
mov
xor
mov
xor
mov
jae
stc
cli
ja
mov
icebp
jp
mov
(bad)
jle
mov
push
jae
std
jg
mov
and
cdq
cli
jbe
mov
inc
pop
fscale
jnp
mov
shr
lock
mov
add
mov
cmp
leave
push
lock
mov
sti
jg
mov
(bad)
js
mov
add
into
repz
mov
cld
jne
mov
add
mov
icebp
jg
mov
cli
jno
mov
xchg
push
mov
je
mov
idiv
call
jg
mov
cmc
jo
mov
lock
mov
xchg
and
jo
mov
(bad)
jbe
mov
cmc
jnp
mov
bnd
mov
cmc
jle
mov
mov
xchg
mov
(bad)
jl
mov
std
jl
mov
clc
jb
mov
ret
mov
mov
add
jge
mov
repz
mov
cld
ja
mov
jae
pop
idiv
mov
xor
div
mov
xor
scas
cli
jo
mov
cli
jb
mov
(bad)
jnp
mov
xchg
leave
pop
std
jbe
mov
cld
jl
mov
repz
or
jle
mov
mov
cld
push
mov
push
cmp
mov
lock
mov
sti
jne
mov
std
jge
mov
(bad)
jnp
mov
bnd
mov
idiv
mov
div
call
jle
mov
xchg
sbb
std
jbe
mov
lock
mov
stc
jg
mov
bnd
mov
lock
mov
xor
mov
push
jle
mov
clc
jae
mov
stc
jne
mov
mov
es
xor
repz
or
sbb
xchg
div
mov
(bad)
jb
mov
sbb
sub
sub
enter
idiv
mov
push
mov
cld
jnp
mov
div
mov
bnd
mov
icebp
jp
mov
icebp
jl
mov
cli
jno
mov
div
js
dec
cmp
(bad)
mov
cmc
jle
mov
xchg
bound
js
mov
sti
jg
mov
jecxz
shl
jb
mov
mov
ss
cmc
jne
mov
push
xor
or
int3
jae
jae
mov
icebp
jbe
mov
repz
clc
jb
mov
mov
repz
mov
cld
jb
mov
lock
mov
ret
lods
xchg
sti
jge
mov
xor
cwde
inc
dec
jecxz
je
mov
shl
icebp
js
mov
std
jnp
mov
adc
fcom
cs
idiv
cwde
push
xor
clc
jbe
mov
jecxz
sar
push
mov
(bad)
ja
mov
add
xor
jbe
mov
xchg
sti
pusha
icebp
jnp
mov
rol
mov
je
mov
repz
mov
div
mov
div
mov
std
js
mov
lock
mov
sbb
idiv
mov
shl
sar
jle
mov
(bad)
jnp
mov
std
ja
mov
idiv
mov
push
mov
sar
push
(bad)
jge
mov
mov
idiv
jle
mov
bnd
mov
push
mov
jae
popa
std
jns
mov
add
bnd
mov
idiv
mov
mov
xchg
bnd
mov
idiv
mov
clc
jbe
mov
repz
mov
rcl
jbe
jnp
mov
icebp
jbe
mov
repz
mov
xchg
mov
clc
jno
mov
arpl
mov
cmc
jg
mov
and
stc
je
mov
xor
ss
jbe
mov
and
cmp
mov
mov
stc
je
mov
ret
pop
out
jne
mov
jecxz
mov
js
mov
mov
push
mov
add
cld
jae
mov
div
mov
mov
push
mov
jecxz
(bad)
(bad)
jns
mov
(bad)
jno
mov
cmc
jg
mov
repz
mov
jae
adc
jl
mov
xor
enter
icebp
jae
mov
stc
jnp
mov
repz
mov
clc
jae
stos
clc
jae
ret
out
js
iret
stos
icebp
jg
mov
cmc
jl
mov
mov
mov
js
mov
xchg
repnz
div
mov
bnd
mov
add
mov
std
jb
mov
jae
dec
stc
jo
mov
mov
push
mov
stc
jbe
mov
xor
clc
jb
mov
std
jnp
mov
add
cmp
jl
mov
sti
ja
mov
(bad)
jl
mov
std
jbe
mov
rcr
retf
cld
jb
mov
bnd
mov
(bad)
jl
mov
(bad)
jb
mov
idiv
mov
std
jp
mov
add
stc
jae
mov
hlt
js
mov
shr
(bad)
jnp
mov
cli
jbe
mov
stc
js
mov
sti
jno
mov
arpl
jnp
jb
mov
repz
idiv
mov
jae
mov
cwde
ret
fdivr
cli
jb
mov
repz
sti
jb
mov
stc
jnp
mov
(bad)
jnp
mov
push
test
movs
or
jne
mov
inc
mov
mov
cld
jge
mov
div
mov
sub
js
mov
cld
jnp
mov
repz
test
jge
mov
clc
jne
mov
push
and
js
mov
icebp
jno
mov
bnd
mov
adc
cli
jle
mov
repz
std
jo
mov
ret
stc
leave
push
mov
jae
imul
rcr
sub
test
mov
jae
or
jns
mov
(bad)
je
mov
div
mov
cli
jge
mov
(bad)
jns
mov
stc
jle
mov
sti
jnp
mov
repz
mov
push
mov
bnd
mov
div
mov
mov
push
mov
xor
lock
mov
arpl
mov
bnd
mov
xor
call
jle
mov
inc
dec
push
std
jp
mov
rcr
cmc
jno
mov
mov
out
sbb
ja
std
jno
mov
jecxz
sahf
hlt
ja
mov
(bad)
jo
mov
jae
mov
js
xor
bnd
mov
sti
ja
mov
repz
icebp
jbe
mov
sar
mov
dec
jecxz
pop
clc
jp
mov
clc
jo
mov
cmc
js
mov
arpl
mov
or
je
mov
(bad)
jno
mov
jecxz
mov
dec
xor
idiv
mov
sti
jl
mov
adc
(bad)
clc
jl
mov
stc
jle
mov
std
ja
mov
arpl
lods
div
mov
add
mov
jno
mov
and
pushf
repz
mov
arpl
mov
mov
test
jnp
mov
std
jo
mov
xor
mov
cld
jnp
mov
add
icebp
jne
mov
xchg
push
sub
jle
mov
adc
cli
jle
mov
lock
mov
hlt
jae
mov
cld
jnp
mov
and
cmp
xor
mov
add
sbb
sub
xlat
or
mov
jbe
mov
(bad)
jge
mov
(bad)
jl
mov
div
mov
clc
jbe
mov
cli
jl
mov
clc
ja
mov
mov
mov
push
cli
jg
mov
clc
jb
mov
std
jb
mov
inc
adc
div
js
sub
sbb
ins
sti
ja
mov
(bad)
jl
mov
cld
jae
mov
stc
jae
mov
and
mov
jne
mov
mov
jb
jle
mov
and
mov
add
mov
mov
(bad)
hlt
js
mov
div
mov
std
jns
mov
cld
ja
mov
jecxz
add
jle
mov
rol
push
idiv
mov
push
adc
jg
mov
sti
jg
mov
hlt
ja
mov
arpl
cmp
es
mov
xchg
sti
jno
mov
icebp
ja
mov
cmc
jl
mov
std
je
mov
and
mov
mov
inc
lock
mov
bnd
mov
div
call
jb
mov
adc
stc
jns
mov
xor
je
mov
repz
mov
std
jne
mov
stc
jle
mov
hlt
je
mov
and
jo
jno
mov
jecxz
push
stc
jno
mov
div
mov
icebp
jns
mov
and
mov
jae
mov
jg
mov
repz
mov
add
mov
cld
jno
mov
clc
jp
mov
lock
mov
xchg
jb
hlt
jns
mov
add
xor
push
mov
jae
shl
ss
arpl
shl
jp
mov
stc
jl
mov
std
ja
mov
std
jae
mov
div
mov
(bad)
jge
mov
inc
mov
cld
jne
mov
adc
mov
xchg
scas
xchg
stc
jns
mov
lock
mov
(bad)
jnp
mov
repz
mov
jecxz
inc
repz
mov
arpl
repz
mov
icebp
js
mov
rcl
icebp
jne
mov
inc
and
jne
mov
(bad)
jae
mov
cli
js
mov
bnd
mov
shr
data16
mov
inc
std
push
repz
mov
xor
mov
and
mov
(bad)
jae
mov
cli
js
mov
div
mov
sbb
je
mov
push
push
(bad)
jno
mov
hlt
jg
mov
repz
mov
inc
sbb
js
mov
bnd
mov
bnd
mov
icebp
jno
mov
(bad)
jp
mov
repz
xchg
jae
mov
std
jne
mov
sti
js
mov
add
mov
push
cmps
inc
cmc
js
mov
(bad)
jge
mov
cmc
jns
mov
sbb
jp
mov
repz
inc
js
stc
jae
mov
inc
or
mov
rcl
ja
jle
mov
inc
and
push
mov
sti
jge
mov
cmc
jp
mov
repz
jno
mov
jecxz
and
jno
mov
clc
ja
mov
cld
jl
mov
div
mov
jecxz
inc
push
mov
jecxz
xchg
div
mov
(bad)
jb
mov
hlt
jns
mov
shr
std
jge
mov
ret
ja
bnd
mov
div
mov
(bad)
js
mov
push
sub
jbe
mov
jb
mov
idiv
mov
bnd
mov
xchg
loop
clc
jg
mov
add
(bad)
(bad)
mov
xchg
mov
fcom
xchg
adc
cwde
shr
mov
and
mov
jae
xor
fsub
pop
add
sbb
popa
adc
mov
test
jge
mov
std
jne
mov
arpl
mov
je
mov
jae
aad
jg
movs
sbb
retf
push
scas
mov
ficomp
mov
jb
scas
fdiv
lock
jb
lods
cwde
mov
mov
cwde
mov
inc
mov
(bad)
jle
mov
cld
jnp
stos
cwde
add
jp
movs
sbb
(bad)
scas
mov
fs
sti
jg
movs
fcom
jo
push
mov
jle
mov
div
mov
repz
stos
js
cmp
stc
jae
test
adc
or
js
stos
sub
ss
js
in
bnd
test
sti
jno
movs
cmp
push
stos
push
ja
scas
sbb
fwait
hlt
je
movs
or
retf
repz
lods
push
je
test
arpl
cli
ja
scas
or
fwait
bnd
movs
mov
jne
lods
cmp
xchg
jno
stos
sub
sub
cmp
cmp
(bad)
jae
cmps
mov
retf
test
je
mov
repz
lods
dec
xchg
out
cwde
hlt
jl
stos
cmp
icebp
fdivr
jge
movs
or
or
jge
scas
cwde
jae
cwde
repz
lods
test
movs
pop
div
scas
enter
sti
jae
cmps
test
dec
pop
clc
jge
lods
dec
xchg
pop
sbb
jbe
scas
dec
and
jbe
movs
fcom
jl
cmc
jo
cmps
call
jnp
movs
mov
adc
js
and
jns
mov
stc
ja
mov
bnd
test
sti
jg
stos
js
out
jns
ja
mov
push
test
add
stos
test
cwde
stc
icebp
jp
test
stc
jb
mov
stc
ja
test
jecxz
dec
sti
jl
stos
mov
jl
mov
hlt
jp
mov
lock
mov
sti
js
stos
mov
jnp
stos
enter
div
mov
(bad)
je
mov
bnd
mov
cli
jp
lods
js
out
fdivrp
jns
lods
fdiv
dec
cli
jnp
mov
(bad)
je
stos
mov
jae
stos
js
mov
scas
pop
push
mov
movs
enter
repz
cmps
clc
push
pop
dec
idiv
movs
cwde
ret
ins
push
scas
cwde
ret
ja
sti
jns
lods
clc
push
pop
scas
cmc
je
stos
mov
jg
mov
clc
jns
mov
cld
jb
mov
stc
jb
mov
push
movs
pop
arpl
(bad)
stc
jae
scas
pop
jecxz
mov
dec
arpl
cmps
test
xchg
outs
std
jns
cmps
fadd
jg
jns
lods
dec
shl
scas
js
dec
out
div
sbb
pop
lahf
(bad)
jl
cmps
sbb
fs
cli
ja
movs
js
je
cmc
jl
movs
dec
arpl
lahf
div
cmps
dec
jae
(bad)
jno
scas
call
jp
lods
mov
paddd
test
and
sub
jp
cmps
pop
push
xlat
sbb
jb
cmps
clc
shl
sub
jp
lods
mov
jp
scas
or
xchg
je
movs
fdiv
sub
je
scas
dec
jecxz
jl
jb
lods
js
mov
scas
sbb
dec
int3
std
jno
movs
sbb
push
or
jp
cmps
js
bound
push
lods
mov
jno
scas
mov
jno
movs
sub
movs
js
and
jo
test
cli
jo
mov
icebp
jno
cmps
mov
jo
test
repz
scas
dec
jae
popf
clc
jle
mov
std
jle
test
xchg
call
xchg
movs
ins
sti
jnp
mov
push
mov
hlt
jo
test
jae
pop
idiv
stos
dec
arpl
repz
mov
stc
jge
mov
sti
jns
mov
bnd
scas
sbb
mul
hlt
jo
mov
cli
jp
stos
dec
push
xlat
xor
xchg
sti
jl
cmps
push
jno
lods
or
xchg
(bad)
jo
test
jae
xor
jne
scas
pop
and
movs
fadd
(bad)
cmps
mov
cmps
cli
clc
jae
int3
cli
jl
mov
div
mov
bnd
mov
icebp
jns
mov
arpl
pop
div
mov
cld
jge
mov
std
ja
mov
stc
jbe
mov
adc
mov
arpl
div
mov
sti
jns
mov
div
mov
arpl
push
jne
mov
cmc
jb
mov
icebp
jns
mov
adc
imul
push
mov
std
jno
mov
mov
ss
xchg
mov
repz
mov
bnd
mov
cli
jnp
mov
cmp
clc
mov
stos
sti
jge
mov
mov
mov
enter
icebp
jge
mov
hlt
jnp
mov
jae
imul
jbe
js
adc
jbe
mov
std
js
mov
cmp
stc
jl
mov
arpl
test
jle
mov
ret
fild
jl
mov
div
mov
xor
pop
icebp
je
mov
jae
push
sub
push
push
jns
mov
inc
mov
div
mov
lock
mov
(bad)
jl
mov
arpl
bnd
mov
div
mov
mov
mov
jae
mov
sti
jae
mov
div
mov
hlt
jae
mov
xchg
xchg
leave
idiv
pop
jae
jns
jb
mov
clc
jno
mov
stc
ja
mov
adc
repz
mov
arpl
stc
jp
mov
clc
jge
mov
mov
jmp
or
sub
jo
mov
repz
leave
sti
jle
mov
and
jns
jo
mov
add
dec
hlt
jae
mov
mov
cmps
mov
arpl
cs
mov
and
div
mov
arpl
mov
hlt
jb
mov
xchg
cmps
dec
cmc
jo
mov
push
mov
repz
mov
xchg
dec
out
cli
jg
mov
push
mov
mov
xchg
mov
cmc
jp
mov
repz
mov
std
jnp
mov
hlt
jl
mov
stc
jo
mov
cli
ja
mov
inc
fxch
bnd
mov
mov
mov
sub
iret
clc
jbe
mov
mov
fcomip
jb
mov
cli
jle
mov
cmc
jo
mov
sar
mov
lock
mov
add
(bad)
jne
mov
clc
jns
mov
xor
idiv
mov
(bad)
jnp
mov
(bad)
jg
mov
cli
je
mov
jae
pop
repz
mov
jae
int3
cld
jae
mov
jae
in
(bad)
jne
mov
stc
je
mov
add
mov
adc
dec
mov
int3
hlt
jae
mov
hlt
jg
mov
div
mov
cmc
jg
mov
hlt
jae
mov
xor
cld
jg
mov
repz
cmc
jnp
mov
repz
arpl
pop
bnd
mov
push
mov
ror
int
jns
mov
xor
sub
mov
loop
hlt
jge
mov
clc
jle
mov
sti
jle
mov
add
mov
hlt
jne
mov
cld
jns
mov
push
inc
or
call
jnp
mov
xchg
push
(bad)
jbe
mov
sti
js
mov
bnd
mov
arpl
sub
clc
and
mov
and
or
pop
push
lds
cld
jge
mov
xchg
fbld
ja
mov
jecxz
xor
xchg
clc
jne
mov
cld
jle
mov
sti
jo
mov
stc
jbe
mov
icebp
jns
mov
mov
add
jp
mov
bnd
mov
(bad)
jns
mov
stc
ja
mov
inc
add
std
jnp
mov
inc
sbb
hlt
jp
mov
sub
icebp
je
mov
cld
jbe
mov
arpl
mov
dec
arpl
jecxz
jnp
mov
mov
mov
js
cld
jae
jo
mov
idiv
mov
inc
pushf
push
cld
jno
mov
push
mov
mov
cli
jg
mov
div
mov
mov
push
mov
hlt
jns
mov
cli
jb
mov
cld
jg
mov
and
inc
cli
js
mov
and
arpl
jg
mov
ret
xor
mov
idiv
mov
(bad)
jle
mov
hlt
jle
mov
clc
jns
mov
cld
jbe
mov
inc
fwait
add
jnp
mov
mov
mov
enter
hlt
jo
mov
div
mov
jae
xor
jle
mov
ret
jno
bnd
mov
ret
or
div
mov
(bad)
je
mov
inc
and
icebp
jle
mov
xchg
cmp
cld
jb
mov
sti
jp
mov
idiv
mov
(bad)
ja
mov
adc
add
jb
mov
jae
xchg
idiv
mov
xor
mov
idiv
cwde
mov
ss
arpl
cmc
jae
mov
push
pop
and
jge
mov
inc
gs
jno
mov
sti
jb
mov
xor
stc
jg
mov
inc
sbb
bnd
mov
cld
jg
mov
cmp
div
mov
sti
jno
mov
rcr
idiv
jbe
mov
(bad)
js
mov
cmc
js
mov
lock
mov
inc
xchg
push
div
mov
stc
jp
mov
cli
jl
mov
xor
icebp
ja
mov
inc
pop
data16
mov
lock
mov
ret
jnp
clc
je
mov
idiv
mov
idiv
mov
jae
ss
mov
lock
mov
(bad)
jns
mov
icebp
jae
mov
push
mov
add
mov
jno
mov
ret
test
jb
mov
cld
jnp
mov
std
ja
mov
push
mov
(bad)
jno
mov
jae
xchg
repz
mov
stc
jno
mov
mov
mov
jge
mov
lock
mov
inc
push
(bad)
cld
jg
mov
cmc
jo
mov
mov
out
js
mov
(bad)
jle
mov
jecxz
movs
lock
mov
xor
je
jne
mov
div
mov
jae
and
jbe
mov
arpl
mov
bnd
mov
clc
jns
mov
cmc
je
mov
sti
jg
mov
and
repz
mov
jecxz
je
jg
mov
sti
jb
mov
std
ja
mov
icebp
jne
mov
clc
jge
mov
(bad)
jae
mov
xor
vhsubps
mov
cld
jno
mov
idiv
mov
idiv
mov
jecxz
add
cmp
xchg
add
enter
cld
jo
mov
hlt
js
mov
stc
jbe
mov
mov
aad
jg
mov
jecxz
mov
jbe
mov
arpl
clc
jo
mov
idiv
mov
hlt
jne
mov
cli
jl
mov
add
cmc
lock
stos
mov
je
cmps
cmp
sub
jbe
movs
fdiv
xchg
idiv
cwde
inc
xchg
cld
jne
movs
call
jbe
mov
cld
jns
stos
enter
repz
lods
test
inc
stos
stc
jg
stos
js
pop
or
jl
movs
fdiv
sub
jb
cmps
call
jno
stos
fsub
jp
jl
cmps
sbb
sbb
(bad)
jb
stos
sbb
es
jbe
scas
cmp
ds
div
mov
cld
jge
stos
push
ja
scas
fadd
push
stos
enter
cld
je
lods
call
jg
mov
lock
test
xor
movs
cmp
es
rol
idiv
lods
pop
arpl
hlt
jno
cmps
cmp
jge
(bad)
jg
test
sti
ja
mov
cld
ja
lods
test
xor
lock
movs
mov
je
lods
enter
std
jno
mov
push
lods
or
cmc
mov
dec
jae
sbb
jno
mov
clc
jbe
cmps
push
je
movs
call
ja
mov
repz
stos
cwde
jecxz
clc
clc
jbe
cmps
or
pusha
sub
jle
movs
mov
jae
mov
clc
jg
mov
hlt
jne
mov
stc
jo
cmps
mov
je
mov
lock
mov
cld
jge
movs
sbb
jns
jge
mov
push
test
cli
js
mov
hlt
jge
test
(bad)
jle
mov
cli
jne
scas
or
inc
cdq
div
test
bnd
mov
std
jge
stos
pop
jecxz
mov
js
bswap
stc
jge
scas
push
ja
stos
fcom
mul
icebp
jbe
test
std
jge
mov
idiv
stos
pop
jae
fdivrp
jnp
mov
cld
jp
stos
cwde
or
clc
rcr
mov
mov
jb
stos
call
jg
test
icebp
jns
cmps
clc
arpl
bnd
test
icebp
jbe
mov
sti
jae
lods
cwde
ror
push
bnd
cmps
or
sbb
sti
jno
mov
(bad)
jns
cmps
call
jno
cmps
fdiv
out
pop
arpl
(bad)
clc
jb
movs
fcom
call
cmps
push
jl
cmps
cmp
(bad)
pop
cld
jne
cmps
call
jnp
movs
enter
idiv
mov
idiv
scas
mov
inc
iret
div
mov
lock
mov
icebp
jnp
movs
mov
inc
mov
stc
jg
test
sti
ja
movs
js
das
pop
cmc
jb
mov
clc
jl
mov
icebp
jne
stos
push
jnp
test
jae
fdivr
jbe
mov
bnd
mov
push
lods
clc
adc
scas
dec
shl
movs
enter
std
jle
mov
icebp
jnp
test
div
lods
mov
gs
jbe
cmps
enter
lock
mov
clc
jg
scas
sub
sbb
mov
stc
jnp
stos
test
cmp
data16
push
jae
test
(bad)
jo
stos
dec
sub
hlt
jae
scas
mov
icebp
(bad)
jge
lods
call
jl
stos
call
jae
mov
sti
jl
mov
div
stos
fadd
inc
pop
cld
js
scas
dec
arpl
sti
jge
cmps
cwde
shl
(bad)
jl
mov
std
jle
stos
enter
div
movs
enter
hlt
je
stos
mov
je
lods
cwde
adc
in
lock
stos
fadd
mov
jno
stos
enter
push
lods
sub
out
loop
jne
movs
cmp
hlt
add
jg
lods
sub
lea
jg
movs
mov
jb
mov
clc
jns
stos
dec
ror
div
cmps
cmp
push
xor
js
movs
clc
shl
hlt
jo
cmps
dec
repz
div
cmps
call
jle
lods
mov
jl
movs
test
sub
jne
cmps
sub
mov
call
jo
stos
js
fadd
jb
stos
or
jecxz
(bad)
je
scas
push
jp
lods
enter
(bad)
jns
cmps
cmp
xchg
adc
je
mov
bnd
test
cmc
jbe
lods
pop
mov
push
cmps
sbb
and
jge
mov
div
lods
enter
icebp
jns
scas
push
jno
mov
clc
jae
cmps
pop
jae
and
jo
movs
cmp
call
cmps
sbb
clc
adc
jb
stos
fdiv
lea
sub
stos
cmp
mul
repz
test
idiv
scas
cmp
nop
bnd
stos
clc
shr
repz
lods
sub
data16
fcom
es
clc
ret
push
mov
call
jp
stos
pop
jecxz
loopne
jl
cmps
or
iret
jno
jg
test
div
test
repz
idiv
cmps
mov
jae
mov
icebp
jo
test
and
stos
call
ja
test
repz
scas
or
cmp
rcr
idiv
cmps
js
push
mov
hlt
js
mov
bnd
mov
bnd
lods
clc
jae
mov
or
jbe
dec
and
cmps
cli
jle
cmps
sbb
out
(bad)
(bad)
jp
test
icebp
jae
scas
mov
mov
jae
test
inc
nop
xchg
(bad)
jle
test
bnd
mov
(bad)
jp
scas
pop
jecxz
cmps
clc
jae
test
cmc
jnp
mov
cli
ja
mov
cli
jae
mov
lock
movs
cwde
adc
push
bnd
cmps
pop
add
cmc
ja
test
inc
cmp
fadd
retf
jg
scas
clc
jecxz
idiv
jge
lods
call
ja
test
idiv
mov
(bad)
js
cmps
fadd
xchg
ja
jbe
mov
cli
jns
stos
cwde
xchg
mov
stos
clc
add
stc
jle
test
push
push
daa
cli
jp
scas
enter
div
scas
sbb
inc
scas
mov
xchg
idiv
pop
xchg
sbb
pop
add
test
and
aaa
repz
scas
mov
je
movs
call
jl
cmps
sbb
fs
je
mov
stc
jno
lods
mov
jle
mov
lock
mov
clc
jle
mov
div
scas
enter
sti
je
stos
cwde
jae
add
jo
lods
call
jno
lods
enter
icebp
jne
test
xor
je
jle
stos
push
jl
lods
test
into
cmc
std
jge
mov
stc
jns
scas
sub
cmc
hlt
jg
lods
pop
cmp
cli
jle
movs
enter
lock
scas
call
jle
stos
fadd
mov
movs
enter
cld
jne
scas
test
dec
xor
js
pop
aad
jbe
test
push
popa
add
js
js
clc
jno
lods
or
push
mov
jnp
scas
dec
add
movs
lock
mov
bnd
lods
call
je
cwde
dec
xchg
enter
jbe
js
rcr
lock
cdq
fcom
retf
inc
xchg
mov
retf
push
xchg
dec
xor
xchg
push
jno
xchg
push
jle
xchg
fcom
mov
xchg
sub
cmps
xchg
call
jae
xchg
clc
repz
push
xchg
clc
rol
cmp
jno
xchg
cwde
inc
das
mov
or
xor
test
retf
cmp
jne
xchg
call
jbe
cdq
mov
jns
xchg
dec
arpl
retf
(bad)
jo
xchg
call
jp
sahf
pop
push
xchg
sbb
jp
xchg
test
lods
stos
hlt
jg
xchg
js
mov
icebp
jne
xchg
js
dec
sub
jl
xchg
or
ss
test
gs
jge
popf
cmp
cmps
xchg
fadd
or
xchg
cmp
pop
sbb
jb
cwde
mov
jbe
sahf
fsub
(bad)
xchg
clc
repz
std
jge
call
xchg
xchg
cmp
fdivr
jns
popf
pop
adc
cmp
movs
mov
jns
fwait
mov
push
pushf
mov
pushfw
mov
js
jbe
call
push
sahf
or
or
jbe
lahf
mov
jbe
xchg
test
sbb
fwait
test
cs
js
pushf
sbb
xor
icebp
jns
xchg
js
sar
rcl
cmp
jno
nop
clc
shl
pop
icebp
jle
nop
cwde
arpl
js
xchg
cdq
idiv
xchg
cmp
mov
call
cmps
xchg
call
jns
sahf
test
push
cdq
clc
jle
popf
sub
push
(bad)
jae
lahf
call
js
nop
pop
jae
jns
jb
cwde
call
jnp
xchg
or
dec
div
xchg
call
jo
xchg
enter
stc
jne
xchg
js
loop
bnd
xchg
push
jl
xchg
test
cwde
push
push
xchg
enter
push
nop
sub
mov
nop
sub
dec
into
bnd
xchg
push
jne
xchg
sbb
ins
push
cli
jl
popf
sub
js
stc
jne
xchg
push
jge
xchg
mov
fdivrp
jp
call
mov
js
xor
sbb
fistp
cwde
inc
jmp
popf
mov
neg
cld
jns
xchg
dec
arpl
test
sahf
iret
cld
jb
xchg
cmp
movs
mov
mov
jnp
fwait
or
inc
pop
icebp
je
call
cmps
popf
cmp
push
sahf
fsub
push
iret
clc
jae
cdq
enter
cli
jo
xchg
or
and
stc
jns
call
push
xchg
push
jle
lahf
mov
jp
xchg
or
cld
repz
xchg
fadd
jbe
or
cmp
jne
xchg
test
popf
in
std
jg
xchg
call
je
xchg
or
mov
(bad)
jns
xchg
mov
jb
xchg
cwde
mov
push
xchg
cwde
adc
lock
lahf
enter
std
jnp
fwait
enter
icebp
jbe
call
mov
sbb
push
cwde
dec
jecxz
dec
bnd
xchg
mov
retf
lods
clc
jns
cdq
enter
std
je
call
jbe
mov
icebp
dec
(bad)
js
popf
sbb
(bad)
jg
nop
cmp
sub
or
mov
pop
repz
nop
cwde
mov
push
xchg
dec
adc
jp
nop
clc
rep
popf
idiv
cwde
cmp
jbe
std
jne
xchg
sbb
add
fcom
adc
or
xor
idiv
lahf
fdiv
leave
add
jge
lahf
cwde
adc
(bad)
cli
js
nop
cwde
mov
xchg
(bad)
jne
xchg
sbb
and
adc
or
xor
js
cdq
pop
adc
xchg
enter
cmc
jns
xchg
sub
push
and
jnp
nop
mov
jne
xchg
mov
ja
call
mov
cmp
sub
(bad)
js
xchg
clc
arpl
xor
(bad)
nop
or
ret
cmc
jp
popf
cmp
xlat
xchg
(bad)
ja
cwde
js
call
xchg
dec
and
arpl
jbe
popf
js
xor
jl
xchg
cmp
xchg
mov
js
scas
xor
jnp
cwde
cmp
mov
pushf
enter
cmc
jno
xchg
js
push
repz
jl
xchg
cmp
outs
shl
jge
cdq
mov
adc
jle
xchg
fsub
inc
(bad)
jl
cwde
cwde
inc
push
and
jle
xchg
dec
xchg
sub
pushf
js
xor
jp
pushf
cmp
nop
clc
jno
pushf
sbb
es
push
pushf
cmp
pusha
lock
cdq
sbb
jo
jp
fwait
pop
xchg
test
fwait
pop
add
sahf
or
dec
lock
ja
cdq
clc
adc
jp
xchg
call
je
cdq
cmp
pusha
cmc
jbe
cwde
enter
hlt
jbe
lahf
pop
inc
pop
inc
stc
jl
lahf
js
das
and
jnp
popf
test
cmp
stc
jae
popf
call
js
sahf
pop
push
aam
lock
xchg
cmp
in
lock
xchg
mov
js
xchg
call
js
xchg
fcom
push
bnd
cwde
pop
mov
mov
cwde
ret
mov
call
out
dec
jae
xchg
(bad)
jae
xchg
js
outs
popa
icebp
jns
sahf
mov
jo
lahf
or
neg
jp
xchg
sbb
iret
ss
lahf
js
(bad)
cmc
jl
popf
pop
add
es
jge
xchg
sub
call
hlt
jo
xchg
enter
div
dec
and
pop
cmp
ret
inc
mov
jo
xchg
clc
mov
neg
stc
ja
popf
cmp
jge
std
jle
xchg
enter
idiv
xchg
clc
adc
stc
ja
sahf
sbb
(bad)
cdq
or
xchg
fsub
ret
out
je
nop
clc
jecxz
xchg
js
cdq
clc
mov
(bad)
fwait
push
jno
sahf
pop
ret
test
bnd
xchg
call
jo
popf
mov
push
pushf
dec
inc
mov
stc
jge
xchg
pop
adc
repz
nop
dec
inc
push
cmps
cli
jns
lahf
push
jno
pushf
pop
inc
ja
repz
sahf
or
cmps
hlt
jle
pushf
enter
sti
jl
lahf
cmp
sub
cmc
jge
pushf
test
cmp
div
call
jbe
pop
mov
cmps
call
es
call
jle
lahf
call
ja
fwait
cmp
popf
je
jg
xchg
js
movs
mov
jae
popf
test
mov
popf
cwde
add
cli
jl
xchg
cwde
push
pop
mov
jle
sahf
mov
jle
xchg
clc
push
jnp
sti
jp
xchg
cmp
and
jg
xchg
enter
repz
xchg
mov
js
popf
mov
je
xchg
enter
idiv
fwait
sub
(bad)
xchg
test
jecxz
stc
jbe
lahf
pop
push
div
jo
sahf
cmp
movs
sti
jns
xchg
fadd
test
jo
pushf
test
lods
movs
lock
xchg
cmp
mov
je
lahf
test
inc
in
jle
cdq
sub
and
fadd
out
cmp
jbe
clc
jle
cdq
js
or
jge
cdq
push
jb
xchg
js
daa
and
fadd
aad
jle
mov
jge
mov
and
dec
sti
jnp
mov
jae
push
jns
cmp
clc
mov
jno
sub
or
jbe
xchg
jnp
xchg
adc
xchg
push
mov
hlt
jp
sub
inc
pop
hlt
je
sbb
pop
stos
stc
jge
lea
jae
lea
repz
sti
jge
mov
xchg
or
lea
pop
sbb
ja
mov
push
and
mov
jne
xchg
add
fcomi
jbe
test
fld
jns
mov
jb
lea
(bad)
stos
hlt
jne
xchg
mov
jbe
clc
push
cwde
pop
stc
ja
(bad)
stos
idiv
push
jl
mov
inc
pop
div
mov
xchg
pop
(bad)
js
lea
push
stc
jbe
mov
jecxz
jmp
jg
mov
jae
mov
or
retf
idiv
mov
jae
sbb
jno
mov
xor
jae
test
js
or
in
dec
div
(bad)
enter
div
mov
mov
clc
bnd
lea
and
mov
and
dec
ret
mov
div
mov
xchg
inc
clc
cmc
jb
or
jns
or
sbb
jg
mov
jnp
cld
jp
(bad)
call
fcom
call
mov
jae
(bad)
mov
jno
mov
inc
ror
sub
leave
bnd
sub
in
lock
lea
jns
sbb
mov
sti
js
cmp
xchg
imul
mov
imul
xchg
mov
stc
jle
sbb
test
cmp
push
cdq
bnd
cmp
jbe
test
jo
cld
jbe
mov
psubw
jno
mov
repz
mov
jns
mov
add
cli
jp
sub
xchg
rcr
mov
sub
cmps
cmp
sti
fdivrp
jae
mov
sbb
jnp
mov
xchg
cs
jb
cmp
test
sti
jb
test
inc
mov
lock
lea
jae
outs
bnd
or
push
outs
lock
mov
popa
push
cmc
jb
test
xchg
jp
(bad)
jp
test
xor
mov
jae
push
stc
jg
sub
lea
lds
jbe
test
rcr
jp
mov
and
lahf
sti
js
sub
mov
cmp
mov
bnd
xchg
sahf
aas
lock
mov
scas
dec
clc
jge
cmp
out
mov
je
cmp
arpl
(bad)
jg
mov
arpl
(bad)
jne
mov
add
(bad)
jb
or
adc
cli
jg
mov
jp
mov
cmp
jb
cmp
iret
mov
jbe
or
(bad)
div
mov
jmp
repz
xchg
and
jl
jae
xchg
xor
or
xchg
sbb
jae
mov
mov
clc
jne
test
jae
int3
hlt
ja
mov
xchg
push
jl
jnp
test
bound
mov
pop
add
idiv
mov
js
mov
jl
sub
mov
mov
jno
sub
cmps
mov
and
mov
cmp
dec
div
mov
and
std
sti
js
or
cmp
jae
lods
div
mov
and
clc
rol
cmc
jle
or
or
push
jge
(bad)
sbb
sbb
dec
inc
pop
cmp
test
sbb
pop
and
pop
sti
jl
(bad)
clc
push
aaa
mov
sub
mov
mov
shl
idiv
sub
jmp
clc
jp
mov
jg
cmp
mov
cwde
add
test
jge
test
push
mov
test
mov
loop
jno
(bad)
clc
repz
repnz
jne
(bad)
cmp
outs
jb
jno
(bad)
clc
and
push
(bad)
js
push
xchg
hlt
jns
mov
js
mov
mov
adc
jo
or
test
jp
test
xchg
out
mov
ja
sbb
js
cmp
xor
inc
mov
push
xchg
sar
jge
mov
ret
lods
xchg
hlt
jns
(bad)
sbb
mov
mov
inc
jecxz
je
cmp
push
ins
and
jnp
mov
add
jge
test
jb
xchg
sbb
hlt
jns
cmp
mov
or
cmp
push
test
je
(bad)
mov
push
jns
lea
jecxz
and
jbe
mov
xchg
enter
div
or
inc
mov
jl
mov
add
bnd
test
js
sub
mov
call
jle
sub
(bad)
sub
nop
cmc
js
xchg
repz
std
jl
test
adc
nop
cli
jb
xchg
retf
jno
xchg
push
frstor
jge
xchg
loope
push
xchg
inc
sti
adc
jg
mov
adc
mov
call
xchg
lods
sar
push
mov
jne
mov
add
jle
or
push
and
jns
mov
push
arpl
jo
mov
jl
hlt
jp
xchg
jns
mov
pop
inc
idiv
xchg
jae
loope
jne
lea
mov
mov
cmp
iret
idiv
jae
xchg
ficom
or
jbe
mov
jnp
xchg
rol
js
fwait
jbe
jbe
mov
cmps
out
jge
mov
mov
xchg
inc
(bad)
cld
jnp
test
inc
push
xchg
sti
ja
or
push
ja
cli
je
xchg
or
cmc
jle
cmp
es
jg
mov
and
sti
jo
(bad)
push
stc
jle
xchg
push
(bad)
div
xchg
xchg
jecxz
cli
js
mov
lock
je
mov
jb
lea
jl
cmp
cmps
test
mov
std
jne
(bad)
fsub
inc
pop
idiv
xchg
repz
pop
lock
cmp
jne
or
jnp
test
add
cld
jle
xchg
sbb
mov
jecxz
inc
stc
jg
lea
jbe
mov
retf
jg
(bad)
add
js
mov
xor
xchg
cli
jns
(bad)
js
std
xchg
(bad)
jbe
test
inc
adc
mov
jbe
test
scas
add
jb
or
aam
jbe
test
dec
in
jae
xchg
jp
(bad)
xor
ja
mov
jg
test
add
adc
mov
and
movs
cli
jne
cmp
cmp
clc
jo
xchg
jp
sub
js
mov
in
idiv
test
jecxz
inc
icebp
jle
mov
repz
dec
jae
inc
sti
jg
test
scas
idiv
lea
inc
mov
std
jl
sbb
xchg
mov
arpl
cmc
jbe
test
arpl
jp
mov
cmp
jns
(bad)
enter
div
or
in
jnp
mov
xor
cmp
push
bnd
lds
cld
ja
cld
call
ja
repnz
jne
stc
test
sti
mov
clc
add
cld
enter
stc
je
imul
test
clc
jns
sti
test
mov
lock
repz
dec
mov
jns
std
dec
xor
std
jl
test
imul
jb
test
xchg
add
push
cmp
sub
jl
cmc
sbb
and
jge
hlt
cwde
jae
or
jge
icebp
fdiv
retf
cmp
jo
imul
repz
stc
jns
clc
call
jo
cli
enter
lock
hlt
clc
xchg
sub
jbe
dec
arpl
lock
mov
cld
test
mov
std
jns
hlt
clc
jecxz
or
jns
std
call
jno
stc
fcom
push
icebp
enter
idiv
js
or
idiv
sti
call
jl
imul
push
and
jb
std
mov
(bad)
hlt
sbb
(bad)
call
js
sar
hlt
jnp
sti
sub
jbe
fadd
xchg
mov
enter
cmc
or
cwde
fdivr
jg
repnz
mov
clc
push
je
imul
jnp
jmp
jnp
(bad)
clc
xor
cld
jb
call
jno
bnd
hlt
test
or
sti
jnp
dec
push
mov
je
repnz
(bad)
cmc
clc
jae
call
js
int3
stc
bnd
cli
sbb
sar
jae
(bad)
clc
and
test
enter
cld
jnp
repz
and
sbb
stc
sti
jnp
stc
cwde
rep
pop
lock
repz
mov
bnd
lock
sti
jle
clc
cmp
imul
xor
div
repnz
fprem
ja
dec
pop
stc
idiv
hlt
sub
inc
test
shl
jns
jle
lock
jg
cmc
pop
add
push
idiv
neg
clc
fdivp
jne
cld
mov
jo
icebp
pop
adc
imul
jecxz
pop
idiv
hlt
push
jnp
sti
dec
xchg
pop
push
(bad)
jns
test
ss
enter
push
stc
mov
ss
inc
sbb
or
and
test
cmp
pop
and
psadbw
cli
mov
jno
repz
jbe
dec
jae
das
std
ja
cld
test
or
jbe
enter
clc
jle
hlt
sbb
stos
pop
cmc
jns
hlt
mov
mov
icebp
jne
(bad)
fdiv
(bad)
stc
enter
cld
jne
sti
dec
shl
(bad)
jnp
sti
cmp
out
mov
push
bnd
adc
hlt
jb
clc
mov
jg
jns
repz
arpl
maskmovq
idiv
stc
test
ret
jno
cmc
mov
fisubr
jle
lock
fdivr
jae
call
cmc
mov
je
dec
mov
jbe
mov
xchg
ins
stc
je
cli
js
cmps
mov
cwde
and
std
call
jl
icebp
sbb
fdivr
jnp
call
ret
ins
mov
fadd
ins
(bad)
jg
sti
push
jno
repz
push
ins
clc
jae
cld
or
daa
cmp
jne
repnz
clc
jle
jmp
les
clc
and
int
jnp
std
clc
push
in
repz
repnz
adc
std
div
mov
mov
jne
sti
sub
cwde
lods
push
bnd
scas
jge
jl
cli
fsub
(bad)
cld
call
ja
icebp
push
jge
cmc
test
in
hlt
jne
clc
or
js
idiv
mov
jne
jmp
push
sbb
clc
shl
dec
xor
cld
ja
sti
call
jo
test
jbe
dec
jecxz
(bad)
lock
cmc
push
jns
dec
jg
clc
sub
xchg
mov
or
idiv
test
mov
sti
call
jbe
cli
test
pop
mov
test
ins
mov
fdiv
(bad)
stc
jge
sti
call
jns
cli
cmp
mov
call
jge
sti
enter
lock
lock
push
sti
clc
adc
inc
std
jl
hlt
pop
jecxz
xchg
div
sti
cmp
div
clc
jae
jmp
fcom
retf
mov
cwde
push
aam
stc
jno
mov
jae
sbb
jne
mov
adc
dec
(bad)
js
mov
push
(bad)
jbe
clc
ret
cdq
jmp
cmps
mov
cwde
xor
mov
xchg
inc
(bad)
jg
mov
ret
push
cli
lock
mov
sti
jno
mov
clc
jb
mov
or
std
jo
mov
repz
lock
mov
clc
jnp
mov
repz
mov
icebp
jae
mov
idiv
mov
lock
mov
cmp
stc
je
mov
stc
jl
mov
cli
ja
mov
clc
je
mov
adc
mov
adc
jge
mov
mov
cmps
mov
add
std
je
mov
xor
bnd
mov
jae
sub
jp
mov
repz
or
das
jmp
jbe
mov
bnd
mov
xchg
rcr
jge
mov
rcr
sbb
jae
mov
xor
dec
cli
jle
mov
jae
pop
cld
jnp
mov
div
mov
cmc
je
mov
(bad)
jns
mov
lock
mov
jecxz
cwde
sti
jl
mov
mov
(bad)
mov
adc
div
mov
push
je
lock
mov
add
push
cwde
inc
sbb
clc
jae
mov
repz
mov
sti
jl
mov
icebp
ja
mov
cli
jp
mov
std
jle
mov
adc
cmp
jae
mov
push
xchg
clc
repz
imul
ret
cmps
cmp
jle
mov
cmp
mov
mov
fdiv
jns
jbe
mov
hlt
je
mov
jae
imul
adc
sub
ja
mov
mov
mov
jnp
mov
mov
xchg
mov
xor
std
jno
mov
idiv
sbb
(bad)
(bad)
ja
mov
ret
out
scas
cmc
jp
mov
xor
icebp
jge
mov
jecxz
fdivrp
jo
mov
mov
push
mov
arpl
mov
icebp
jbe
mov
div
mov
and
div
mov
add
cld
jle
mov
inc
jns
div
js
pop
mov
jns
mov
mov
mov
fadd
sub
stc
jle
mov
bnd
mov
xor
outs
stc
jg
mov
jae
aas
idiv
mov
cld
je
mov
hlt
jg
mov
push
mov
stc
jo
mov
idiv
mov
xchg
mov
stc
jbe
mov
adc
stc
jbe
mov
push
mov
bnd
mov
(bad)
je
mov
lock
mov
std
jns
mov
repz
jl
jnp
mov
(bad)
jbe
mov
lock
mov
repz
mov
arpl
mov
adc
mov
push
scas
or
jg
mov
adc
mov
push
inc
in
cli
jb
mov
arpl
(bad)
jbe
mov
(bad)
jle
mov
cmc
jae
mov
clc
jb
mov
xchg
adc
jg
mov
shr
pushf
clc
jnp
mov
mov
div
(bad)
jl
mov
push
fmul
cli
ja
mov
icebp
jp
mov
hlt
jno
mov
adc
mov
xor
mov
jae
ins
idiv
mov
xchg
mov
std
jne
mov
ror
idiv
mov
arpl
(bad)
jbe
mov
cmc
jnp
mov
std
jne
mov
and
pop
cli
ja
mov
repz
icebp
jp
mov
mov
popf
lock
mov
jecxz
cmp
push
jno
mov
mov
add
jno
mov
hlt
jne
mov
shl
loop
jl
mov
mov
push
mov
adc
mov
(bad)
jp
mov
jae
loop
jnp
mov
push
inc
mov
jbe
mov
adc
cli
jo
mov
xor
icebp
jge
mov
jae
inc
repz
mov
rol
(bad)
div
mov
cli
jnp
mov
add
inc
hlt
jle
mov
push
cmp
mov
adc
xchg
icebp
jb
mov
adc
jae
jge
mov
ret
jmp
cmc
jp
mov
div
mov
inc
test
enter
(bad)
jp
mov
push
mov
repz
mov
repz
repz
jae
mov
cld
jg
mov
and
clc
jnp
mov
and
repz
mov
xor
(bad)
je
mov
adc
jns
mov
ret
sub
enter
repz
mov
clc
js
mov
sti
jg
mov
lock
mov
div
enter
cld
jns
mov
std
jns
mov
cli
js
mov
idiv
mov
rol
cld
jnp
mov
jecxz
and
jae
mov
ret
ins
adc
jne
mov
mov
loopne
jb
mov
clc
jp
mov
repz
mov
push
mov
idiv
mov
jae
adc
jbe
mov
xor
xchg
repz
mov
push
out
div
mov
push
mov
push
(bad)
sar
(bad)
mov
ret
xchg
xor
jl
mov
icebp
jg
mov
cli
jb
mov
div
mov
cld
js
mov
cld
jae
mov
idiv
mov
push
mov
hlt
jle
mov
cli
jns
mov
icebp
je
mov
repz
mov
sti
jl
mov
lock
mov
stc
jg
mov
idiv
mov
jae
push
cmc
jp
mov
xchg
test
mov
shl
mov
push
mov
arpl
cmc
jg
mov
adc
(bad)
jb
mov
push
jl
hlt
jl
mov
and
mov
push
mov
sti
jb
mov
bnd
mov
sti
jp
mov
lock
mov
sti
jb
mov
(bad)
ja
mov
cmc
jp
mov
clc
jns
mov
ret
movs
cmps
sti
jo
mov
cmc
jp
mov
adc
cli
jne
mov
arpl
cld
jo
mov
idiv
mov
stc
ja
mov
xor
mov
js
mov
bnd
mov
stc
jb
mov
idiv
mov
repz
dec
mov
div
mov
jae
xor
jle
mov
xor
inc
clc
jg
mov
xor
mov
and
mov
arpl
mov
inc
mov
lock
mov
add
lock
mov
mov
(bad)
std
jle
mov
clc
jne
mov
mov
xor
js
mov
repz
mov
bnd
mov
mov
data16
ret
xor
(bad)
mov
sti
jo
mov
cli
jge
mov
idiv
mov
idiv
mov
xchg
mov
std
jb
mov
rcl
mov
cld
jge
mov
inc
mov
stc
jb
mov
bnd
mov
div
mov
add
cli
jnp
mov
(bad)
jge
mov
arpl
cwde
push
pop
test
jg
mov
sti
jb
mov
jecxz
mov
jae
movs
push
jl
movs
mov
fnstsw
cmc
jg
mov
lock
scas
mov
imul
cmp
cmps
mov
cdq
cmp
ja
lods
sub
cli
div
test
ret
mov
lods
clc
add
jne
scas
dec
inc
push
jp
js
stos
or
push
lock
mov
sti
jle
cmps
dec
jecxz
cmp
jne
cmps
dec
arpl
mov
clc
mov
es
fdiv
push
cmps
test
sar
jbe
mov
std
jo
mov
cmc
jle
test
std
js
test
cld
jg
movs
call
jb
mov
stc
jg
scas
sub
jnp
jb
stos
push
jg
test
(bad)
jb
lods
pop
and
je
mov
bnd
cmps
fsub
xchg
cmc
ja
mov
(bad)
jp
cmps
push
ja
scas
js
leave
pop
bnd
lods
mov
rcr
je
mov
cld
jl
cmps
cwde
cmp
(bad)
jne
mov
clc
ja
movs
sbb
nop
clc
(bad)
jo
stos
dec
add
js
mov
test
repz
clc
cmc
jge
movs
fcom
push
test
jo
mov
bnd
lods
clc
mov
dec
push
movs
push
jb
lods
clc
ret
adc
lock
cmps
or
cmps
scas
pop
push
xor
jbe
mov
div
cmps
js
fisubr
std
jg
stos
push
ja
mov
stc
jne
scas
mov
fyl2xp1
ja
cmps
or
pushf
sub
jg
mov
div
cmps
mov
mov
jp
mov
cmc
jno
stos
cwde
push
pop
cdq
(bad)
jl
scas
fcom
gs
cld
jge
mov
div
movs
mov
add
jl
test
bnd
lods
mov
and
sbb
push
mov
repz
lods
mov
fistp
clc
jbe
test
bnd
lods
cwde
jae
scas
stc
jle
test
xor
test
hlt
jne
stos
mov
xchg
stos
cwde
xor
pop
arpl
lock
mov
cli
jnp
mov
stc
jle
cmps
js
js
cli
jne
mov
idiv
mov
clc
jge
mov
clc
jae
stos
cwde
jecxz
push
hlt
jl
stos
clc
arpl
aas
std
jbe
mov
cmc
jle
test
repz
(bad)
jge
mov
div
mov
lock
mov
repz
mov
cli
js
mov
sti
jl
mov
lock
cmps
cmp
pop
pop
(bad)
jl
cmps
mov
js
movs
cwde
mov
pop
cli
je
movs
cmp
pop
iret
stc
jge
mov
repz
stos
js
sub
(bad)
je
lods
push
jne
mov
div
lods
mov
jl
ja
lods
clc
and
sti
jp
movs
pop
xchg
std
in
cmc
jl
stos
test
(bad)
sbb
jle
mov
lock
mov
cmc
ja
test
cli
jno
mov
sti
jp
cmps
call
je
lods
mov
jb
cmps
dec
xchg
jnp
cld
jnp
scas
test
push
cmp
jb
test
ret
sbb
hlt
jb
scas
pop
jecxz
lods
push
lods
test
cmp
jle
mov
idiv
cwde
jae
mov
js
jmp
sti
jp
mov
(bad)
jns
test
ret
or
repz
jge
jnp
movs
pop
xchg
lods
sub
clc
jecxz
or
test
dec
or
call
je
mov
stc
jp
lods
call
jne
mov
repz
movs
test
adc
mov
hlt
jns
mov
std
jp
cmps
mov
jb
mov
hlt
jle
test
sub
stc
je
mov
push
clc
xor
movs
test
sahf
jb
js
lods
cmp
adc
ja
movs
mov
add
jnp
stos
sub
inc
shl
jnp
test
cmc
jae
scas
cwde
and
push
stos
fadd
jnp
lock
mov
sti
jge
movs
clc
arpl
add
jb
stos
fdiv
sub
jg
scas
cwde
mov
repnz
mov
std
jo
movs
test
fdiv
sti
jno
mov
lock
movs
mov
cmc
inc
idiv
test
push
mov
cld
je
lods
fcom
xchg
inc
div
mov
cld
jnp
cmps
cmp
mov
idiv
scas
mov
pop
add
jb
stos
enter
cli
jle
cmps
sbb
mov
pop
add
scas
sub
sub
cli
jp
stos
push
jp
movs
or
inc
movs
sub
shl
push
jne
lods
mov
repz
js
stos
clc
ret
mov
mov
jne
test
repz
cmps
push
jo
mov
(bad)
js
stos
push
jne
scas
sub
ins
pusha
std
jno
lods
cmp
je
idiv
js
or
jbe
stos
js
pop
jo
jne
mov
hlt
jne
scas
cwde
mov
xor
jl
mov
push
cmps
test
shl
or
out
lock
scas
pop
inc
mov
enter
idiv
cmps
mov
stos
loope
js
test
(bad)
jne
lods
dec
add
jge
cmps
clc
mov
(bad)
mov
sti
jp
test
lock
lods
push
js
scas
push
jae
mov
idiv
movs
dec
mov
(bad)
mov
(bad)
jnp
movs
cmp
inc
test
push
adc
inc
mov
cld
jp
scas
sbb
dec
aaa
bnd
stos
mov
push
addr16
jno
scas
enter
div
stos
or
adc
scas
dec
inc
sub
sti
je
mov
lock
cmps
enter
repz
test
adc
lods
mov
js
scas
mov
jne
stos
clc
jae
test
jno
cmps
enter
cli
jno
mov
icebp
jl
movs
push
jl
mov
icebp
js
lods
pop
push
in
and
sbb
repz
sbb
in
jp
mov
sti
jge
movs
push
jo
mov
lock
scas
mov
dec
adc
sub
mul
cli
jge
test
inc
jne
std
jae
lods
mov
or
js
scas
sub
(bad)
movs
clc
jecxz
push
hlt
jne
lods
pop
push
xor
sub
jbe
cwde
push
fstp
jge
xchg
or
out
cmp
je
fwait
dec
xor
idiv
sahf
or
mov
hlt
jne
fdiv
xchg
call
lods
sub
jle
xchg
test
mov
cmc
jae
xchg
call
ja
nop
mov
jp
xchg
clc
and
(bad)
jo
lahf
cwde
mov
push
fwait
enter
bnd
xchg
mov
mov
test
and
mov
jge
xchg
clc
push
(bad)
fcomi
jno
xchg
call
jns
sahf
mov
jae
xchg
call
jp
pushf
pop
xor
popf
enter
div
sahf
call
jp
xchg
call
jb
xchg
enter
hlt
jne
lahf
sub
push
fwait
div
lahf
enter
push
cdq
or
(bad)
pushf
dec
rol
mov
jne
xchg
call
ja
sahf
enter
icebp
js
xchg
cmp
xchg
lahf
or
(bad)
call
cwd
test
repnz
cli
jne
xchg
clc
and
lahf
sub
push
call
xchg
xchg
mov
jne
nop
mov
js
xchg
clc
repz
enter
pushf
fsub
push
cdq
cwde
jecxz
sbb
jbe
fwait
clc
rcl
cld
jbe
nop
push
jbe
cdq
sbb
cmp
jo
xchg
pop
rol
pop
cmc
jo
call
xchg
xchg
mov
jo
cwde
enter
bnd
xchg
cmp
cdq
icebp
jnp
cwde
dec
xor
cmp
mov
lahf
dec
inc
mov
push
xchg
fcom
dec
sbb
ja
popf
test
pop
dec
cmc
jno
xchg
call
jno
sahf
cwde
xor
repz
xchg
or
out
js
sbb
mov
and
clc
mov
out
call
jne
xchg
cwde
repz
cs
jne
cwde
or
cs
jne
xchg
js
stc
jle
jae
fwait
cmp
cmp
push
xchg
dec
adc
fcom
scas
outs
cmc
jae
nop
test
mov
cdq
pop
arpl
idiv
nop
sub
push
push
pop
adc
cld
je
xchg
sub
ds
je
pushf
mov
je
xchg
enter
repz
lahf
mov
jle
jb
popf
push
jo
xchg
dec
jecxz
dec
cmc
jo
fwait
cmp
push
fwait
dec
and
cli
jbe
pushf
fcom
fcomip
ja
sahf
pop
and
cwde
clc
and
xchg
js
mov
xchg
cmp
(bad)
sahf
js
dec
out
div
fwait
cmp
push
jp
xchg
mov
jo
xchg
test
jb
cmc
ja
cdq
pop
adc
fcomip
jl
xchg
js
push
(bad)
sti
jno
nop
cmp
pop
repz
xchg
enter
clc
jae
mov
repz
mov
mov
xchg
hlt
jnp
mov
repz
adc
cwde
jae
mov
js
movs
mov
jge
mov
(bad)
jl
lods
js
(bad)
(bad)
jge
mov
cld
jl
lods
cwde
jae
out
(bad)
js
stos
dec
shl
jl
je
mov
stc
jp
mov
bnd
scas
sbb
loop
jbe
lods
sbb
out
test
out
clc
jg
mov
stc
jg
stos
or
(bad)
mov
sti
js
mov
(bad)
jno
mov
lock
mov
sti
jle
mov
inc
sub
mov
je
jle
mov
idiv
mov
sub
clc
jno
mov
repz
mov
(bad)
jg
mov
xor
adc
mov
je
test
mov
mov
test
sbb
ja
lods
sub
(bad)
jp
mov
idiv
test
hlt
jae
movs
js
cld
fdiv
jl
movs
js
xchg
js
lods
cmp
sahf
call
mov
jae
cmps
cmp
enter
mov
or
mov
clc
jae
cmp
jnp
test
call
rol
mov
dec
jmp
retf
push
cli
mov
jae
mov
daa
mov
mov
mov
dec
jmp
ret
inc
iret
mov
ror
ror
ror
fist
ret
test
mov
pop
(bad)
mov
test
sbb
add
push
fisttp
ret
inc
mov
add
push
sti
jo
mov
jl
fimul
daa
test
mov
bound
ror
ror
int3
sbb
xchg
cmp
rol
inc
inc
ror
ror
(bad)
adc
add
inc
mov
(bad)
mov
dec
inc
int3
dec
mov
mov
dec
push
mov
jmp
ror
retf
dec
fild
ror
iret
inc
cmp
xchg
jp
add
inc
retf
inc
aas
mov
imul
lods
adc
clc
jae
or
cld
fmul
ror
ror
retf
test
dec
inc
(bad)
dec
inc
pop
sub
jecxz
inc
aas
mov
in
movs
or
mov
pushf
js
repnz
sub
ror
ror
iret
inc
dec
test
dec
inc
inc
call
lods
add
hlt
retf
ror
ror
rol
jmp
mov
pushf
jo
and
mov
dec
inc
mov
or
adc
fisubr
inc
ror
(bad)
jmp
(bad)
dec
iret
mov
add
int3
rcr
popa
sbb
mov
dec
inc
rol
and
std
add
inc
shl
mov
inc
jmp
jmp
mov
cwde
jns
test
call
ror
ret
adc
dec
call
or
add
push
add
cmc
mov
add
dec
push
(bad)
pop
mov
add
jmp
or
mov
dec
inc
rol
js
xchg
cld
jns
sar
je
mov
dec
call
les
mov
xor
sub
jl
ror
ror
enter
ror
ror
int3
inc
jg
mov
inc
rol
xchg
cmp
add
inc
ror
ror
enter
ror
ror
ror
inc
dec
add
enter
ror
ror
mov
adc
inc
mov
cmp
(bad)
retf
cdq
dec
lock
ret
jo
lds
inc
rol
jp
add
inc
push
dec
inc
mov
sahf
mov
dec
jmp
int3
dec
dec
jae
in
clc
pop
(bad)
mov
dec
inc
xchg
mov
sbb
cmp
dec
jmp
dec
jg
repz
adc
popa
stos
add
rol
mov
dec
inc
enter
shl
mov
dec
jmp
int3
dec
jg
jno
inc
ror
ret
inc
in
clc
jp
mov
dec
inc
iret
ror
mov
jae
mov
jae
sti
icebp
jmp
ror
inc
stos
rol
inc
inc
ror
ror
inc
stos
add
inc
ss
lock
ror
ror
outs
or
pusha
xchg
jmp
icebp
dec
inc
ror
fdiv
cmp
jmp
scas
pusha
pop
mov
stc
jmp
pop
ret
xchg
dec
inc
lods
repz
bnd
mov
mov
dec
inc
enter
loopne
cmc
xchg
cmp
add
inc
rol
stc
test
dec
inc
inc
sub
add
dec
push
enter
lock
aas
cmps
xor
mov
ror
ror
iret
dec
jg
xor
add
inc
into
arpl
push
stc
push
xor
jmp
rol
xchg
dec
inc
ror
enter
ror
ror
ror
popa
sbb
add
inc
inc
ror
ror
int3
inc
pop
xor
add
inc
inc
ror
int3
inc
pop
xor
inc
enter
pop
jl
lods
add
add
dec
push
ror
rol
pop
jge
mov
jae
dec
xlat
je
jmp
mov
add
inc
add
add
inc
pop
jge
loop
jg
jne
mov
mov
sbb
mov
dec
aas
test
dec
push
sub
and
loope
cmp
mov
add
inc
ror
enter
sub
and
ret
lods
shl
js
mov
mov
dec
inc
ror
ror
add
push
mov
mov
dec
inc
ror
add
inc
add
cmc
out
scas
js
mov
mov
inc
out
xor
add
jmp
dec
pop
xor
add
push
icebp
dec
inc
ror
enter
icebp
jp
add
inc
ret
inc
out
mov
ror
ror
ret
test
dec
push
int
push
cmc
jmp
rol
test
xor
clc
inc
push
(bad)
loopne
push
jmp
xchg
mov
ret
dec
inc
das
icebp
(bad)
mov
(bad)
(bad)
jns
retf
ror
ror
iret
dec
dec
ror
les
out
mov
dec
mov
ror
ror
iret
dec
jg
xor
and
inc
push
ror
ret
(bad)
mov
icebp
jp
mov
dec
push
retf
ror
ror
push
dec
inc
js
movs
mov
dec
inc
retf
(bad)
cmp
mov
icebp
dec
inc
ror
retf
mov
icebp
dec
inc
ror
retf
mov
ror
rol
iret
jno
loop
test
js
(bad)
mov
dec
inc
mov
xor
lods
stc
js
mov
icebp
dec
inc
mov
mov
push
pop
test
dec
inc
retf
(bad)
cmp
(bad)
or
inc
in
clc
push
mov
dec
inc
dec
cmp
add
push
xor
adc
add
cmc
mov
loope
(bad)
mov
dec
push
rol
test
inc
inc
xor
xor
mov
ins
xor
or
xchg
add
ror
cwde
adc
dec
clc
inc
push
xchg
dec
in
enter
icebp
jp
add
inc
mov
add
inc
rol
pushf
outs
jb
mov
xor
int3
dec
pop
xor
push
retf
ror
les
mov
sbb
mov
add
dec
jmp
rol
pushf
mov
xor
add
jmp
rol
sahf
jae
add
dec
inc
(bad)
mov
dec
inc
inc
sub
add
push
enter
or
pop
add
je
test
dec
jmp
dec
jg
xor
add
jmp
mov
xor
cmc
dec
push
or
and
test
shl
mov
dec
jmp
dec
jg
xor
add
jmp
mov
xor
cmc
dec
push
(bad)
enter
sub
ja
xor
add
inc
mov
jmp
iret
dec
jg
xor
add
inc
into
arpl
jmp
inc
lods
mov
inc
(bad)
dec
push
inc
sub
add
arpl
mov
dec
inc
pusha
pop
inc
xchg
dec
inc
pusha
pop
add
ror
ror
pusha
adc
test
mov
call
call
jae
inc
js
mov
add
jmp
int3
dec
jg
mov
inc
ror
enter
stc
jae
test
jp
mov
dec
push
ror
ror
ror
inc
sub
add
dec
push
imul
scas
mov
add
ror
ror
mov
cmp
dec
mov
mov
clc
dec
mov
test
dec
inc
rol
mov
dec
inc
enter
mov
xor
or
jae
test
jg
dec
push
jp
add
inc
shl
mov
dec
inc
icebp
jp
mov
dec
inc
(bad)
mov
dec
inc
inc
sub
add
dec
push
(bad)
pop
dec
inc
popa
call
ror
rol
mov
call
les
mov
jecxz
mov
jp
add
inc
inc
stos
inc
xchg
dec
inc
xchg
xor
cmp
(bad)
stos
mov
cmp
dec
push
ror
ror
les
cmps
retf
inc
xor
les
add
push
inc
dec
in
mov
cmp
push
mov
dec
push
int3
inc
pop
xor
inc
push
dec
inc
int3
inc
jg
mov
test
dec
call
dec
xor
mov
dec
inc
ror
pop
ja
mov
ror
rol
mov
hlt
add
inc
rcl
mov
dec
push
retf
(bad)
jno
inc
ror
rcr
xchg
dec
inc
rol
adc
or
inc
cld
cmp
add
inc
les
not
mov
jb
stos
adc
mov
inc
rol
xchg
dec
inc
enter
ror
ror
retf
push
mov
ror
rol
adc
add
inc
retf
dec
mov
mov
dec
push
enter
iret
into
idiv
dec
inc
rol
mov
hlt
add
inc
enter
les
or
test
(bad)
mov
jp
add
inc
daa
out
xchg
jb
lods
cmp
mov
cwde
jbe
mov
out
daa
(bad)
icebp
cdq
je
test
cmp
test
mov
(bad)
mov
jb
loop
xor
iret
jbe
dec
mov
dec
mov
dec
and
loop
add
outs
jbe
dec
setp
es
ins
add
dec
jl
into
push
mov
or
xor
cmp
ins
inc
jecxz
test
cdq
xor
push
jmp
xor
rcr
in
sub
ficom
inc
and
ins
jge
out
rcl
jbe
mov
dec
ficom
sbb
lea
jne
xchg
adc
cmp
jbe
dec
jns
dec
sbb
push
dec
mov
fld
jo
xchg
(bad)
lock
cld
jns
inc
in
in
inc
(bad)
jo
outs
mov
inc
into
push
pop
push
(bad)
in
adc
and
pop
mov
push
stc
je
sahf
mov
push
xor
retf
cli
adc
xor
fadd
ror
loopne
in
xchg
sar
or
fnsave
repnz
sub
or
cmp
es
ins
add
inc
add
jmp
jns
in
pusha
cdq
jle
inc
ja
or
inc
les
mov
dec
mov
vprotb
mov
mov
mov
ja
imul
adc
jb
add
rcl
call
fcom
scas
push
jno
outs
scas
xor
(bad)
jmp
sti
jno
cs
inc
mov
enter
ins
fimul
lods
(bad)
sub
jmp
cs
icebp
or
pop
nop
add
mov
xor
mov
adc
std
test
jmp
inc
push
sub
(bad)
pop
cmc
in
int
xchg
aad
in
push
adc
xchg
ins
and
pminub
rol
call
dec
xchg
js
popf
nop
fidiv
rcl
stc
push
jmp
jle
data16
mov
popf
imul
outs
sbb
dec
cdq
jmp
mov
cwde
sbb
and
retf
sahf
in
repz
cmp
push
in
cld
push
and
cmp
lods
(bad)
std
mov
cmc
cmc
push
aad
jmp
repnz
(bad)
cmps
mov
add
mov
xchg
jmp
rep
push
jae
sahf
and
loope
pusha
and
arpl
mov
inc
push
inc
sub
mov
sahf
mov
sar
(bad)
mov
test
jl
xchg
loop
push
sbb
and
add
shl
xor
push
add
add
mov
cmps
mov
add
mov
xchg
jmp
jecxz
jmp
loope
pusha
and
arpl
mov
inc
xor
mov
dec
add
mov
mov
inc
lods
(bad)
mov
xor
push
loop
push
sbb
and
add
shl
xor
push
add
lds
mov
outs
(bad)
cmps
mov
add
mov
xchg
jmp
repz
es
sahf
and
loope
pusha
and
arpl
mov
inc
loop
and
dec
add
mov
mov
inc
lods
(bad)
mov
xchg
jbe
jmp
push
sbb
and
add
shl
xor
push
or
in
into
xchg
inc
mov
cmps
mov
add
mov
cdq
jmp
xchg
pop
dec
jb
sahf
and
and
arpl
mov
inc
bound
jb
pop
mov
mov
mov
inc
lods
(bad)
mov
adc
adc
jb
xchg
jecxz
in
sbb
and
and
shl
add
push
or
xor
mov
xchg
add
mov
xchg
jmp
mov
xchg
jno
pop
and
loope
pusha
xor
arpl
mov
inc
repnz
sub
mov
mov
push
lods
(bad)
std
mov
xor
pop
loop
int3
mov
jl
add
mov
lahf
jmp
sahf
and
loope
popa
adc
arpl
mov
inc
adc
stos
mov
int
into
mov
cmc
cmp
lods
(bad)
mov
inc
jns
cli
xchg
add
jb
xchg
ret
sub
and
add
shl
xor
or
xor
std
cmp
ins
in
cmp
ins
push
retf
out
sahf
and
loope
popa
adc
arpl
mov
inc
and
lods
repz
in
scas
int
into
mov
cmc
cmp
lods
(bad)
mov
add
ret
loop
imul
jecxz
loop
loope
mov
push
sahf
xor
xor
std
cmp
ins
in
cmp
ins
adc
or
out
sahf
and
adc
arpl
mov
inc
(bad)
leave
mov
lods
int
into
mov
cmc
cmp
lods
(bad)
mov
movs
jne
mov
imul
jecxz
loop
loope
mov
sub
ss
mov
xchg
mov
push
mov
icebp
push
push
jb
repnz
out
xor
mov
in
or
icebp
mov
push
lods
jle
sbb
xchg
or
outs
pop
and
loopne
popa
adc
xor
dec
pop
rol
pop
into
mov
ins
lods
push
mov
xchg
ss
loop
imul
out
mov
outs
cmps
in
or
icebp
mov
push
lods
pop
push
sbb
xor
inc
outs
pop
and
loopne
popa
adc
xor
mov
imul
cmps
mov
push
mov
mov
repnz
out
and
test
xor
rep
and
or
and
add
mov
sahf
scas
pop
inc
into
mov
mov
jbe
push
push
pop
dec
ins
push
pop
fisubr
pop
and
loopne
pusha
xor
add
and
fild
mov
outs
(bad)
xchg
mov
push
mov
or
loop
push
and
or
and
cmps
sub
mov
mov
jbe
push
push
sbb
jecxz
fsub
pop
and
loopne
loopne
mov
add
mov
cmp
xchg
lods
ins
xchg
sar
sub
shl
add
pop
fisub
cmp
pop
scas
jbe
or
cmp
sbb
ins
mov
sub
pop
and
add
xor
pop
add
ret
icebp
mov
lea
sbb
(bad)
call
repnz
pusha
adc
xor
fisub
mov
pop
scas
jbe
or
cmp
adc
ret
sub
pop
and
loopne
loope
mov
xor
(bad)
mov
icebp
mov
lea
sbb
fldcw
jbe
jno
repnz
pusha
adc
xor
fidiv
mov
pop
scas
jbe
or
cmp
sbb
mov
mov
loope
loopne
loope
mov
xor
push
xor
into
scas
icebp
mov
lea
sbb
(bad)
icebp
jp
repnz
imul
pusha
adc
xor
cmp
pop
scas
jbe
or
cmp
adc
mov
pop
and
loopne
loope
mov
xor
push
xor
scas
inc
mov
outs
sbb
into
bound
sub
in
neg
jb
sub
xchg
push
ja
(bad)
popf
scas
into
pop
mov
xchg
lea
scas
xchg
sub
xchg
rcr
scas
xchg
lods
lods
push
ins
and
ret
dec
jno
jp
bswap
mov
fimul
jne
dec
ja
dec
dec
ja
dec
mov
dec
mov
inc
aam
out
pop
dec
ds
dec
mov
add
cld
out
inc
add
inc
xlat
jne
dec
ja
dec
dec
ja
dec
jg
mov
dec
mov
dec
mov
dec
mov
dec
test
jle
adc
push
cmp
mov
dec
test
jle
adc
loop
fdiv
test
jp
sbb
jb
mov
dec
push
adc
fdiv
inc
mov
jo
mov
inc
cmp
gs
push
jl
mov
sbb
jmp
jo
or
scas
pop
adc
ins
data16
imul
std
xor
add
xchg
jecxz
movs
or
cmp
pop
jno
outs
mov
push
mov
fild
int3
pop
(bad)
fnsave
js
add
(bad)
sbb
loope
mov
or
pop
dec
push
or
xor
iret
mov
xor
jno
xor
jb
pushf
jns
inc
add
dec
fstp
fldenv
inc
cs
fadd
jp
add
ja
sti
and
sbb
int
pop
add
(bad)
mov
test
adc
xchg
aaa
lea
jns
outs
xchg
cmp
mov
ret
ja
clc
loope
repnz
mov
xchg
adc
pop
cmc
and
out
mov
sub
xor
(bad)
xor
cmp
mov
fiadd
jae
mov
xchg
mov
out
cmc
aaa
ds
xchg
std
jecxz
xchg
jge
ins
std
fadd
or
inc
iret
fdiv
xchg
mov
icebp
mov
adc
repnz
jl
pusha
iret
fst
xchg
leave
popa
clc
push
fnsave
fstp
cmc
imul
in
and
ffree
pop
(bad)
cmc
imul
in
mov
(bad)
cmc
imul
inc
cli
(bad)
loopne
inc
test
fsub
imul
inc
cli
(bad)
loopne
dec
pop
cmp
call
aam
imul
fs
pusha
push
cmp
stos
mov
push
sub
cld
cmp
mov
outs
mov
ffree
imul
in
rcl
ffree
pop
jmp
aam
ins
loopne
mov
shr
cmp
(bad)
ffree
pop
jmp
aam
imul
loope
push
(bad)
lds
xor
fs
xchg
xchg
(bad)
call
aas
add
fsub
imul
aad
imul
movs
inc
push
sub
jl
fldln2
sbb
pop
adc
add
faddp
imul
movs
inc
push
sub
cmp
fldln2
fs
pop
dec
retf
pop
mov
fucomp
ins
pusha
pop
sbb
push
fnstenv
cld
cmp
aam
push
(bad)
in
sub
mov
int3
iret
adc
cmc
imul
movs
repz
sbb
pop
fnsave
push
test
mov
cmp
mov
aam
push
(bad)
in
mov
lods
rol
mov
cmp
mov
aam
imul
adc
fcom
in
mov
sbb
cmc
imul
aam
mov
imul
loope
mov
lods
(bad)
jmp
loopne
cmc
imul
aam
mov
cmc
imul
loope
mov
sub
les
fstp
sub
sahf
sbb
cwde
mov
loopne
hlt
push
stos
shl
imul
movs
inc
push
sub
cld
push
fnstcw
add
adc
ficom
xchg
pop
outs
mov
xor
xchg
fwait
xor
outs
shl
imul
test
outs
loopne
cmp
ds
xor
jno
cmp
jbe
adc
adc
mov
xchg
mov
xchg
cmp
fnstcw
aam
imul
xchg
push
movups
xor
imul
fs
loopne
shl
sbb
xor
imul
adc
pop
stos
shl
pusha
loopne
int3
pop
rcr
popf
push
sub
cld
cmp
mov
imul
cdq
xor
push
out
cmp
jbe
adc
adc
xor
stos
mov
jp
es
scas
xchg
cmp
fnstcw
aam
imul
xchg
push
movups
xor
imul
fs
loopne
enter
lock
fstp
cmp
fcmovnu
lds
adc
addr16
xchg
shl
adc
push
adc
xor
adc
and
rcl
pop
jmp
adc
addr16
xchg
cmp
xor
fistp
cmp
jl
xor
xchg
jmp
scas
jbe
xor
push
adc
mov
fstp
cmc
imul
adc
lahf
stos
shl
imul
ret
xor
cmc
imul
mov
popa
inc
adc
cmc
imul
in
push
fldenv
xor
fisttp
lds
aam
imul
movs
cmc
mov
fstp
xor
fistp
aaa
push
sub
sub
xchg
xor
adc
cmp
jbe
xor
ficom
xchg
pop
stos
xchg
aas
mov
fstp
cmc
imul
aad
test
loopne
hlt
outs
loopne
inc
push
sub
jl
fldcw
mov
imul
aam
imul
adc
pop
jmp
aam
data16
lods
das
test
mov
imul
aam
pop
loop
cmc
imul
xchg
inc
setno
xor
imul
aad
imul
adc
pop
shl
push
ds
inc
mov
rol
imul
test
call
cmp
aam
imul
in
pop
(bad)
cmc
imul
mov
jo
adc
cmc
imul
aam
ins
loopne
mov
test
loopne
cmc
imul
mov
xor
adc
cmps
cmps
xchg
scas
and
pop
(bad)
cmc
imul
push
repz
mov
inc
sub
xchg
push
movups
xor
imul
adc
and
loop
pop
(bad)
cmc
imul
mov
pop
or
(bad)
stc
mov
mov
jo
adc
das
cmp
test
movs
pop
jmp
aam
imul
mov
movups
mov
add
xor
sar
mov
imul
aam
ins
loopne
mov
pop
(bad)
cmc
imul
mov
pop
and
cmc
imul
sub
cmc
imul
sbb
cmp
mov
cmp
mov
cmp
gs
test
int3
pop
(bad)
cmc
imul
mov
pop
or
(bad)
cmc
pop
pop
xchg
sbb
sbb
mov
fstp
cmc
imul
inc
cli
pusha
loopne
ret
pop
push
jae
rcr
xor
gs
out
scas
xchg
mov
adc
mov
fstp
cmc
imul
sbb
xor
sub
shl
imul
adc
imul
xchg
pop
stos
loop
scas
xchg
mov
sbb
loopne
cmc
imul
fcom
ins
loopne
mov
pop
jmp
aam
imul
shl
fstp
cmc
imul
hlt
cld
and
ffree
pop
(bad)
cmc
imul
in
outs
add
mov
shr
adc
das
bound
add
fbld
imul
xor
pusha
loopne
ret
and
adc
cmp
push
cmp
fstp
cmc
imul
fs
add
ret
aaa
into
mov
jl
mov
aam
push
sahf
mov
movaps
mov
fstp
cmc
imul
aam
addr16
sbb
xlat
lods
xor
test
movs
pop
jmp
aam
or
fdiv
imul
inc
dec
pop
mov
cmp
xchg
movs
pop
jmp
mov
outs
mov
jmp
cmp
retf
repz
mov
push
leave
out
int3
(bad)
test
inc
cmp
jae
mov
pop
jae
jne
or
cs
dec
pop
jne
pushf
jo
dec
cmp
and
int3
xchg
test
js
cmp
ds
jg
mov
dec
mov
js
jl
inc
inc
xor
(bad)
adc
loop
fdiv
cmp
sbb
push
push
jl
outs
push
(bad)
jo
call
or
xor
push
mov
add
xor
inc
xchg
pop
imul
cdq
pop
leave
adc
xor
test
dec
xchg
cmp
sti
jns
jecxz
push
int3
pushf
pop
fnstenv
iret
mov
add
out
and
(bad)
jns
xchg
jmp
xchg
inc
idiv
or
xchg
mov
(bad)
fld
lahf
adc
call
lea
jle
call
cmp
xlat
into
cwde
out
or
aaa
jle
out
shl
out
cmp
xchg
out
dec
inc
xor
int3
jae
dec
sbb
outs
add
enter
jbe
sbb
or
aad
out
mov
cld
ja
inc
xor
xor
xlat
mov
dec
xor
add
and
(bad)
out
int
mov
adc
ds
inc
adc
test
push
shl
fadd
jmp
test
ror
adc
sbb
cmp
cmp
call
punpckhbw
cmp
loopne
mov
sub
enter
inc
dec
push
loopne
mov
vpshlq
push
repz
adc
loop
jl
into
push
push
aaa
mov
add
dec
mov
mov
leave
rol
push
mov
dec
mov
imul
mov
shl
lods
imul
mul
movs
sbb
inc
inc
adc
int3
mov
jecxz
mov
(bad)
aad
(bad)
loop
mov
mov
(bad)
and
in
adc
or
xchg
sub
jge
aaa
jne
jmp
cmp
(bad)
dec
scas
jnp
sub
dec
jo
inc
(bad)
jo
call
and
xor
push
mov
add
xchg
pop
imul
adc
jnp
aaa
retf
inc
mov
outs
push
push
loop
jo
or
push
inc
xchg
pop
imul
cmp
(bad)
mov
scas
test
cmp
jbe
sbb
lods
inc
mov
enter
jbe
sbb
ret
inc
mov
int
ins
mov
in
in
inc
xor
pop
fs
out
sar
out
or
aas
fsubp
icebp
inc
mov
ss
mov
call
push
shl
mov
rol
push
or
sti
jbe
adc
test
sbb
retf
xchg
adc
div
dec
pop
pushf
cmp
ins
lea
dec
and
sub
cmp
push
iret
push
ror
push
add
add
iret
mov
and
shl
xor
cmp
push
sbb
mov
dec
mov
ja
sbb
mov
add
std
sub
add
je
in
jl
push
jb
jmp
jle
outs
xchg
mov
jne
cmp
mov
or
mov
jl
fnsave
adc
(bad)
pop
mov
outs
out
and
jbe
popa
imul
clc
push
jg
fcomp
sti
push
add
ss
cmps
sbb
mov
sub
stos
(bad)
mov
jecxz
sysret
mov
dec
int
(bad)
cld
in
xchg
int
adc
sbb
(bad)
test
adc
lea
in
mov
cmp
sub
xchg
cdq
enter
enter
enter
enter
or
dec
int
xchg
cdq
cmp
cli
movs
stos
imul
loope
sti
jbe
jbe
sbb
or
test
jnp
sbb
fistp
fwait
loope
sti
push
mov
cmps
out
fmul
fisttp
ror
neg
fdivr
fwait
or
stc
push
shl
fstp
mov
lock
neg
fsub
fld
ins
cdq
or
retf
lock
xchg
sbb
mov
sti
jbe
cmps
(bad)
or
test
dec
and
xchg
aas
icebp
(bad)
fdivr
jno
sti
sub
das
fnstsw
add
mov
add
mov
add
mov
add
and
enter
enter
int3
mov
fisttp
enter
enter
retf
xor
mov
loop
enter
enter
inc
(bad)
push
mov
loop
sar
add
mov
adc
jecxz
jne
pop
enter
jmp
enter
enter
ret
xor
call
xlat
xor
fsubr
call
mov
push
int
dec
pop
mov
loop
enter
lds
xchg
xchg
jmp
enter
lds
jp
enter
enter
js
jmp
enter
mov
iret
aas
popa
imul
std
fld
cli
or
dec
movs
cmp
sub
fisttp
stos
add
mov
clc
fisttp
dec
mov
dec
test
lock
dec
dec
cs
push
add
loop
cmp
mov
dec
outs
jbe
dec
setp
test
jl
into
push
mov
or
stos
cmovle
enter
aad
push
cmps
dec
jp
cld
dec
inc
mov
loope
mov
push
mov
outs
sahf
inc
movs
xor
push
mov
scas
test
mov
jbe
sbb
in
inc
mov
push
sbb
in
inc
mov
punpckhbw
js
mov
jle
mov
mov
dec
sbb
jmp
mov
sub
cmp
inc
aaa
dec
adc
adc
enter
enter
mov
and
shl
mov
and
mov
dec
mov
mov
aam
nop
pop
les
(bad)
inc
fistp
int3
out
jmp
add
jns
outs
push
xchg
sub
iret
dec
jbe
ds
(bad)
mov
retf
mov
scas
lea
(bad)
adc
inc
push
add
sub
inc
iret
dec
jne
imul
inc
iret
clc
aas
fadd
xor
ror
rol
retf
add
loop
(bad)
mov
in
and
mov
sub
xor
(bad)
(bad)
jns
scas
pop
retf
sub
jns
ret
hlt
or
test
movs
inc
mov
inc
mov
inc
mov
inc
mov
add
out
mov
inc
sub
and
dec
add
ffree
lds
mov
jnp
jge
jnp
jl
jnp
int3
jnp
movs
add
inc
aad
mov
xchg
dec
mov
or
mov
mov
mov
and
jge
jnp
jne
add
inc
sub
push
or
inc
aad
mov
aam
jg
xchg
sub
mov
pushf
jge
jnp
jne
enter
jb
jge
jnp
jge
jnp
je
jmp
in
loop
les
inc
mov
xchg
jge
jnp
jge
jnp
jo
fcom
mov
ins
ja
inc
shl
fst
mov
lods
jae
xor
sub
mul
retf
pushf
sub
dec
lea
nop
dec
fcom
mov
icebp
xchg
push
jl
popf
push
add
mov
dec
cli
outs
jge
(bad)
in
xchg
jge
jnp
jge
jnp
jge
jnp
and
push
xchg
jge
jnp
jge
jnp
and
xchg
jge
jnp
jge
jnp
jge
jnp
and
jbe
jge
jnp
jge
jnp
jge
jnp
and
push
xchg
jge
jnp
jge
jnp
jge
jnp
push
int3
fcom
mov
sub
pop
cmp
cmps
jmp
jge
jnp
jge
jnp
jge
jnp
std
xor
jnp
jge
jnp
jnp
jnp
push
mov
inc
mov
hlt
call
jb
std
xor
jnp
jge
jnp
jnp
jnp
push
mov
inc
popa
push
adc
xchg
hlt
call
jae
std
xor
jnp
jl
pop
mov
dec
clc
pop
sti
xor
adc
jnp
jge
jnp
jge
jnp
fdivr
pop
xchg
add
xchg
std
xor
jnp
jnp
jnp
push
mov
inc
popa
push
mov
rcl
inc
sar
dec
pop
xchg
dec
test
jge
jnp
jno
sti
sti
not
mov
test
xor
mov
mov
sub
mov
pushf
jge
jnp
mov
sar
mov
xchg
jge
jnp
jge
jnp
ja
mov
shl
jb
jge
jnp
jge
jnp
jo
cmp
jae
call
jnp
jnp
dec
aad
dec
fcom
sbb
xchg
jge
jnp
jnp
jnp
adc
adc
jg
xchg
sub
mov
pop
jnp
jnp
adc
xchg
sub
mov
ins
jnp
sbb
jge
jnp
jge
jnp
hlt
out
repnz
je
(bad)
sub
mov
mov
push
fsub
sti
xor
push
cmps
movs
rdpmc
and
shr
add
mov
adc
xor
mov
add
loop
xor
mov
dec
iret
jbe
dec
aas
push
pop
push
mov
mov
lock
ret
pop
mov
idiv
push
mov
jnp
ds
movs
adc
jnp
xor
(bad)
mov
repz
fst
int
mov
imul
mov
stc
inc
xchg
jg
mov
dec
mov
movs
mov
push
mov
iret
lods
mov
in
mov
mov
fsub
(bad)
jl
clc
inc
(bad)
jo
jle
jo
fdivrp
jg
dec
sbb
sbb
xchg
not
cmp
mov
retf
(bad)
dec
push
xor
in
cmp
xor
(bad)
pop
jo
mul
in
jmp
jo
mul
fnstenv
scas
mov
mov
mov
outs
test
cmp
iret
or
xor
iret
int
icebp
cmps
jmp
push
pop
(bad)
or
lock
push
or
push
fs
pop
inc
ret
mov
aaa
xor
ror
dec
jne
mov
push
add
icebp
jl
mov
jae
out
mov
(bad)
(bad)
jmp
xchg
inc
adc
jo
jno
loope
mov
mov
(bad)
inc
jle
jae
fidiv
xchg
dec
adc
and
pop
test
adc
cmp
pop
add
movs
mov
lea
inc
cmps
addr16
mov
(bad)
xlat
mov
(bad)
xlat
mov
aad
mov
aas
sbb
fisttp
adc
dec
fcom
fisttp
xor
loopne
mov
mov
xchg
in
(bad)
xlat
mov
(bad)
xlat
mov
(bad)
(bad)
mov
jmp
fstp
sub
dec
mov
mov
sbb
mov
(bad)
xlat
mov
aad
mov
call
shr
loope
mov
xchg
and
(bad)
(bad)
mov
mov
jmp
sub
cdq
mov
mov
adc
mov
xchg
and
(bad)
xlat
mov
jg
sar
out
loopne
xlat
mov
(bad)
fmul
das
pusha
loope
(bad)
adc
in
push
xor
add
dec
xlat
dec
fisttp
sub
inc
jbe
dec
cmps
or
pop
out
sub
lahf
mov
mov
xlat
mov
(bad)
xlat
mov
(bad)
xlat
mov
xlat
dec
imul
mov
mov
jmp
mov
(bad)
xlat
mov
fisttp
daa
or
inc
aas
icebp
pop
mov
sub
daa
ror
and
mov
imul
aad
mov
sbb
ds
icebp
adc
push
mov
inc
(bad)
pop
xchg
in
(bad)
xlat
mov
(bad)
xlat
mov
(bad)
sbb
push
mov
inc
(bad)
fild
mov
es
mov
(bad)
xlat
mov
(bad)
xlat
mov
and
mov
leave
cmp
mov
mov
jmp
pop
xor
dec
cmps
fisttp
or
mov
jg
mov
xor
js
or
jbe
mov
dec
mov
dec
test
std
dec
outs
jle
add
bound
test
js
and
sub
test
cmc
cwde
stc
jno
or
jns
inc
xchg
dec
imul
cdq
dec
fprem1
test
test
call
into
ror
vprotb
mov
int3
loopne
inc
mov
adc
xor
dec
mov
(bad)
stc
mov
sar
inc
(bad)
int3
mov
mov
(bad)
xor
inc
xchg
xor
loope
mov
add
inc
loope
(bad)
xor
aad
mov
or
sbb
xchg
dec
fmul
aaa
dec
and
dec
jbe
ds
ret
neg
jbe
sbb
int
add
jge
jle
and
sti
push
gs
js
or
inc
inc
aaa
mov
fsubr
fwait
xor
(bad)
jo
popa
cmp
(bad)
mov
dec
(bad)
rcl
dec
inc
cmp
out
arpl
dec
xchg
xor
or
and
add
add
pop
leave
add
mov
int3
sbb
sub
and
push
bound
dec
imul
xor
dec
push
push
lahf
cdq
push
mov
and
mov
mov
xchg
(bad)
ds
pop
inc
push
adc
hlt
or
sbb
shl
pop
mov
shl
inc
push
dec
xor
mov
adc
jg
test
sub
loope
and
stc
pop
jbe
mov
int
push
std
pop
jbe
pop
jge
movs
(bad)
not
fcomi
mov
inc
add
iretw
jo
call
mov
jl
into
push
mov
or
dec
es
adc
ds
lods
iret
pop
js
iret
fst
mov
js
jl
test
push
and
mov
dec
cmp
cmp
repz
mov
mov
add
ds
xchg
jmp
pushf
dec
xchg
xor
xchg
icebp
inc
push
mov
in
jne
inc
sub
iret
js
or
ss
mov
push
lds
(bad)
fwait
pop
jmp
sub
ror
pusha
pop
popf
sub
dec
adc
addr16
loope
mov
repz
int
mov
fmul
add
leave
rcl
mov
loop
xchg
mov
into
lock
add
int3
enter
xchg
test
stos
jns
aas
xchg
lds
sahf
js
cmps
add
mov
fiadd
cmp
cs
push
(bad)
ds
add
bound
xchg
xrelease
mov
cld
je
inc
adc
shl
dec
push
push
and
aad
jecxz
div
add
icebp
sub
xor
mov
arpl
ins
div
movs
sub
cs
or
jb
ins
imul
cmp
inc
mov
mov
je
jne
jno
adc
sbb
shl
jo
imul
mov
inc
push
call
outs
repnz
inc
add
jb
jg
dec
push
repnz
mov
dec
mov
jb
mov
jb
jl
jbe
xor
mulps
inc
rol
cmc
cmps
in
sbb
jo
cs
repz
push
arpl
stos
out
shl
sbb
or
sbb
test
push
xor
retf
mov
and
pop
adc
mov
arpl
mov
mov
xchg
daa
in
(bad)
mov
xor
out
inc
fstp
scas
lods
popa
rcr
jnp
enter
sbb
xchg
cs
fmul
mov
shl
stos
imul
dec
sub
stos
call
or
into
rcr
inc
test
cmc
xchg
in
push
cmp
out
sar
ror
mov
xchg
push
pusha
push
mov
mov
pop
inc
xor
cmp
xchg
cld
loopne
jmp
cmp
xchg
sti
in
or
or
(bad)
xchg
lock
mov
dec
xor
enter
jge
xchg
pop
adc
add
sbb
xchg
push
das
sbb
jbe
xor
stc
jmp
lock
lahf
aam
pop
dec
out
repnz
shr
push
inc
push
sbb
(bad)
out
out
(bad)
pushf
add
xchg
aas
or
cmc
xchg
retf
es
xchg
and
jns
adc
test
(bad)
out
lods
inc
add
mul
push
adc
or
idiv
and
das
shl
daa
cwde
jno
dec
or
sub
mov
js
inc
cmp
jl
(bad)
fild
xor
dec
dec
aam
daa
fwait
cwde
sub
or
or
ffreep
xor
mov
jmp
cmp
cmp
jne
pop
cmp
std
outs
sub
jno
dec
push
push
pusha
push
dec
or
mov
call
ja
push
sbb
lods
outs
aas
and
xor
adc
push
stos
aaa
cdq
jno
mov
mov
sub
jno
aas
lds
ret
ror
test
jp
cwde
add
int3
lods
adc
dec
sub
add
dec
add
dec
mov
mov
push
mov
mov
leave
mov
cmp
shl
and
dec
inc
ja
int
loop
loop
aas
xchg
push
xchg
sub
ja
lds
in
push
inc
movaps
retf
cmp
ret
leave
scas
push
and
inc
dec
add
xor
inc
gs
mov
jge
jae
leave
test
xchg
es
dec
bound
loopne
mov
les
jno
sub
ret
pop
adc
iret
xor
inc
jp
js
(bad)
call
cmp
xchg
push
pusha
hlt
call
sub
cdq
fisub
in
jbe
xor
fmulp
sub
xor
(bad)
sbb
push
cmp
dec
icebp
out
movaps
add
jne
mov
icebp
(bad)
imul
push
adc
or
mov
jg
adc
xor
mul
ja
ficomp
clc
dec
add
inc
leave
push
cmps
nop
movs
call
or
push
lods
std
jb
add
mov
xchg
push
sbb
dec
mov
xchg
push
out
xchg
cmp
dec
mov
mov
cmc
mov
mov
cmp
pop
out
fidivr
xor
(bad)
mov
adc
retf
in
fidivr
stos
call
lea
lahf
push
jne
fcmovne
cdq
lods
mov
mov
mov
jnp
lods
adc
add
setae
ss
mov
and
pop
dec
fsub
inc
es
fdivr
out
movs
adc
or
jmp
jecxz
test
xchg
push
jo
mov
push
aaa
push
dec
adc
jns
mov
pop
jo
js
arpl
fwait
sub
clc
into
and
and
je
aaa
sub
fabs
xlat
fwait
cmp
jecxz
inc
retf
push
out
test
repnz
jge
sahf
rcl
xor
mov
or
and
retf
add
fs
mov
sbb
xor
cld
mov
leave
pop
adc
mov
or
bound
scas
mov
dec
in
addr16
jmp
push
cmps
(bad)
movs
push
jge
repz
mov
lea
fwait
sub
es
dec
or
xchg
pop
mov
sbb
add
cmps
in
jmp
mov
cmp
aaa
fdiv
mov
in
pop
xchg
shl
sbb
(bad)
aaa
xor
sbb
repz
out
lds
sub
push
jg
pop
outs
push
and
stos
pop
cmp
mov
sub
ror
das
cmp
inc
sti
dec
add
mov
sti
jae
fmul
xchg
add
mov
pop
push
aaa
dec
cmp
cli
lahf
rol
inc
dec
dec
or
sbb
cmps
adc
inc
xlat
xor
lea
xor
adc
xor
mov
xor
add
xor
adc
ss
adc
xor
sbb
nop
pop
xor
adc
cmp
sbb
sbb
jecxz
mov
addr16
adc
mov
pop
popa
hlt
sar
scas
stos
mov
sub
mov
xchg
pop
imul
and
jb
mov
adc
aad
js
mov
das
sub
lds
or
adc
mov
add
mov
or
cmpxchg
sbb
fwait
xor
or
adc
xchg
push
and
xchg
or
shld
cmp
popf
or
add
push
ds
popf
or
or
push
cmp
popf
add
cmp
popf
or
or
xor
or
popf
add
es
mov
push
cmp
cdq
add
es
popf
or
or
push
cmp
popf
or
es
popf
or
add
push
es
popf
add
or
adc
xchg
xor
or
movs
or
sub
xchg
or
shrd
add
mov
xor
or
cs
xor
sar
and
shl
push
dec
mov
or
pop
mov
repz
cmps
xchg
ror
cmp
retf
mov
enter
std
sbb
xchg
mov
mov
jmp
push
xor
xor
xchg
mov
xchg
mov
mov
call
sbb
mov
enter
lods
clc
mov
xchg
mov
xchg
inc
or
bound
rol
jmp
inc
jp
mov
sbb
dec
retf
pop
or
das
adc
push
mov
das
adc
pop
mov
sbb
mov
cs
cmp
or
adc
mov
add
cmps
adc
mov
add
cmps
and
cmp
add
cmps
and
cmp
add
cmps
ds
cmp
sbb
and
cmp
add
push
xor
mov
add
mov
aaa
sub
sub
aaa
and
mov
sbb
mov
xor
or
and
xor
mov
add
cs
xor
mov
pop
sbb
mov
pop
push
and
jl
mov
and
pop
ret
inc
jle
movs
push
sbb
(bad)
push
inc
mov
pop
dec
jo
inc
jne
lahf
jns
add
pushf
or
pop
jnp
imul
frndint
iret
mov
les
ret
out
mov
sbb
sbb
lea
retf
adc
cmp
and
int3
dec
(bad)
sbb
mov
outs
cmp
lods
pop
cmp
adc
push
popa
les
das
stc
and
bound
inc
add
je
inc
jb
movs
push
sbb
dec
ret
pop
or
sub
pop
mov
das
sub
lds
sbb
mov
sbb
mov
cs
cmp
or
stos
and
xor
mov
cs
xor
mov
add
cs
xor
add
sub
xor
or
push
xor
mov
add
cs
cmp
or
adc
mov
or
stos
cs
cmp
or
stos
and
xor
mov
pop
sbb
pushf
aaa
sub
ror
sub
add
mov
pop
push
and
fs
ret
pop
jb
movs
pop
adc
shl
push
mov
add
(bad)
push
inc
(bad)
inc
mov
push
dec
push
enter
add
mov
inc
jnp
popa
lock
aas
(bad)
aad
retf
movs
fwait
pop
mov
lock
stc
sbb
popf
mov
sbb
sbb
lea
adc
test
stc
sbb
mov
clc
push
fimul
imul
mov
jg
dec
mov
gs
jae
push
add
push
rol
in
push
js
jbe
dec
mov
sbb
loope
pusha
inc
retf
dec
jle
test
sbb
dec
ret
inc
jbe
test
adc
pop
mov
daa
sub
shl
pop
mov
push
and
mov
sbb
mov
cs
and
mov
sbb
mov
sub
xor
mov
sbb
mov
sbb
mov
sbb
mov
cs
xor
add
add
pushf
cmp
sub
cs
and
mov
push
push
sub
lds
push
sub
cmp
mov
pop
sbb
inc
retf
dec
jp
test
add
dec
xlat
inc
outs
dec
mov
or
je
pop
jns
arpl
cmc
push
mov
sti
call
or
mov
mov
mov
mov
cld
mov
add
mov
clc
outs
out
into
in
and
popf
mov
mov
sub
adc
popf
mov
jp
fsubp
and
movs
mov
call
rol
dec
arpl
and
imul
mov
inc
or
push
jns
jg
pop
std
sub
push
mov
sub
dec
mov
add
inc
iret
inc
jle
test
sbb
dec
(bad)
pop
or
das
adc
int
jo
mov
das
adc
push
mov
daa
sub
lds
jo
mov
and
pop
mov
push
sub
lds
push
and
je
mov
add
cwde
daa
adc
pop
mov
push
and
add
mov
and
pop
mov
add
pushf
daa
sub
rol
pop
mov
and
push
mov
das
adc
leave
cmp
jbe
movs
pop
sbb
dec
mov
push
sbb
push
mov
and
and
outs
dec
mov
or
jo
jle
inc
mov
pop
mov
repz
inc
popa
enter
add
and
sbb
mov
scas
mov
inc
xchg
in
dec
ret
or
lods
and
hlt
outs
out
in
pop
call
sbb
sbb
lea
adc
jmp
mov
jle
(bad)
and
lods
xor
clc
pop
ret
or
mov
push
popa
lock
scas
sahf
mov
xor
mov
fcomp
mov
shl
pop
add
nop
repz
les
pop
cmc
sub
push
mov
sub
jle
dec
mov
add
inc
iret
inc
jle
mov
sbb
aad
pusha
inc
(bad)
dec
jb
lods
push
adc
int
fs
(bad)
pop
jb
test
sbb
dec
mov
daa
adc
push
mov
pop
adc
loope
mov
lds
add
test
mov
ins
and
cdq
retf
sub
adc
out
and
test
jo
mov
push
adc
leave
xor
ret
inc
or
shl
jb
movs
push
sbb
inc
retf
dec
jp
lods
push
sbb
aad
ins
dec
iret
inc
inc
mov
add
loope
push
je
jbe
dec
mov
or
in
pop
jl
jle
jno
jnp
sub
pop
dec
ins
out
bound
les
pop
add
xchg
mov
inc
adc
test
mov
pop
jae
popa
cmp
(bad)
rcl
lds
test
in
out
jmp
and
and
add
adc
pop
call
out
(bad)
in
and
test
loopne
repnz
adc
mov
pop
cdq
clc
rol
test
cmp
lods
sub
push
jae
inc
lods
mov
mov
inc
or
xchg
dec
gs
addr16
add
ins
out
pop
imul
push
inc
push
mov
sub
jp
inc
mov
add
jmp
inc
jp
mov
add
inc
rol
push
mov
sbb
fnstcw
ins
inc
retf
dec
or
nop
mov
lds
add
cmp
add
jecxz
gs
imul
imul
movs
mov
or
or
cdq
fild
in
pushf
pushf
pusha
retf
sub
mov
ins
push
retf
dec
jp
lods
pop
sbb
(bad)
ins
dec
retf
inc
dec
mov
add
dec
rol
dec
mov
add
(bad)
push
mov
or
js
jp
jge
jnp
pop
stc
pop
dec
ins
repz
les
push
std
push
mov
call
gs
or
and
sbb
mov
inc
ja
popa
hlt
test
fdivrp
fld
iret
mov
int3
pop
neg
icebp
adc
xchg
mov
shl
push
xor
sub
call
adc
sub
add
or
mov
iret
jmp
jge
fsubr
imul
icebp
sbb
mov
enter
rol
stos
inc
outs
inc
popa
mov
aaa
mov
pop
jae
jne
mov
mov
test
xchg
ins
dec
sbb
mov
inc
or
xchg
sti
call
add
pusha
repz
jge
jg
push
stc
sub
jmp
push
jne
jnp
das
icebp
and
push
mov
sub
(bad)
inc
mov
sbb
cmp
shr
fmul
lock
pop
jns
jnp
add
jmp
jg
add
in
iret
pop
jns
jg
add
jmp
jnp
add
loopne
jmp
jae
add
in
mov
or
push
mov
push
fist
loope
dec
add
lea
push
mov
sub
fistp
jno
jg
das
in
and
push
jge
jg
push
cmc
pop
dec
ins
out
bound
les
push
stc
push
mov
call
popa
push
or
xchg
dec
adc
mov
test
mov
jg
popa
sub
mov
clc
aam
(bad)
loop
add
movs
lahf
push
mov
hlt
addr16
sbb
xchg
xchg
enter
xor
test
or
pop
mov
xchg
sbb
and
adc
popf
cmps
test
shl
and
lods
mov
call
aad
fbstp
rol
sub
sub
mov
xchg
mov
loopne
push
ja
inc
mov
cdq
aam
gs
or
xchg
dec
ins
int3
outs
gs
or
cwde
neg
jge
std
push
dec
pusha
out
outs
pop
jge
jae
push
cmc
xor
loop
mov
fmul
lock
pop
jne
jae
add
jmp
imul
pop
pop
in
leave
cmc
retf
inc
ins
popf
imul
pop
xor
leave
cmc
mov
pop
add
int
retf
inc
popa
popf
jnp
add
in
int
iret
pop
gs
jg
add
in
iret
pop
jns
jnp
or
in
movs
imul
add
mov
jno
cmc
pop
inc
pusha
out
pop
jne
outs
jge
stc
push
mov
imul
popa
int3
imul
pop
mov
sti
call
or
nop
pop
mov
ja
jno
test
xchg
ja
jne
mov
stos
xchg
cmp
mov
cld
xlat
mov
enter
int
sti
lods
mov
fdivr
addr16
jns
xor
sbb
sbb
mov
add
xchg
lods
and
call
stos
xchg
movs
cmp
mov
xchg
jle
(bad)
jmp
jne
fdivr
addr16
jmp
xchg
in
rcl
(bad)
xlat
mov
dec
xchg
lock
(bad)
and
test
mov
jae
jne
mov
mov
push
jae
jno
adc
mov
jnp
dec
movs
mov
mov
inc
adc
nop
push
ins
or
pusha
adc
add
pop
add
push
or
leave
icebp
retf
inc
popa
mov
xor
stc
stc
test
gs
cmc
stc
test
gs
stc
cmc
repz
ins
movs
arpl
cmp
sar
stc
test
gs
stc
cmc
test
pop
add
(bad)
pop
jne
jnp
add
in
(bad)
push
jns
jg
add
jmp
pop
add
(bad)
sahf
mov
aam
ins
dec
or
mov
inc
adc
xchg
jnp
jno
mov
mov
pop
jae
jno
mov
stos
xor
popa
hlt
mov
cld
shl
fmul
out
adc
lods
fwait
pop
mov
clc
arpl
(bad)
sbb
xchg
mov
ja
retf
sbb
pop
mov
daa
add
xchg
mov
das
or
cdq
fsubr
call
scas
xchg
mov
aas
adc
lea
in
jmp
mov
imul
icebp
and
mov
clc
pop
ret
adc
mov
enter
fld
dec
lahf
dec
popf
lock
cmps
and
imul
jae
jne
mov
mov
push
jg
jge
mov
xchg
je
popa
mov
repnz
mov
adc
pop
in
aad
iret
inc
popa
mov
xor
cmc
cmc
test
ins
xor
std
stc
dec
lods
fwait
sbb
std
jmp
lods
xchg
sbb
add
dec
popa
lods
imul
jno
(bad)
in
std
jmp
xchg
lods
sbb
ins
cmp
stc
stc
inc
test
aas
sar
cmc
repz
popa
popf
ja
add
in
shl
pop
jns
jnp
or
in
(bad)
push
jns
jg
or
cmp
clc
and
xchg
imul
sub
and
mov
pop
ja
popa
cwde
mov
cmps
call
mov
cld
mov
lock
sar
aad
fstp
rcl
lds
test
lock
std
and
popf
mov
mov
jecxz
push
aaa
in
sub
and
add
add
pop
mul
call
rcr
or
repnz
cdq
fsub
xchg
adc
mov
mov
cdq
mov
jnp
(bad)
jmp
jno
fdivr
imul
cmc
sbb
mov
enter
rcl
movs
fwait
push
xchg
cld
les
repnz
mov
dec
xchg
hlt
aam
cmps
and
sub
inc
arpl
imul
sub
lock
mov
popa
xor
cmc
cmc
repz
mov
aas
fdivr
std
jmp
xchg
lods
sbb
jno
(bad)
stc
std
sti
mov
mov
add
imul
mov
mov
add
ins
and
in
add
mov
mov
add
ins
sub
std
std
div
and
fdivr
std
jmp
xchg
lods
addr16
ins
cmp
cmc
add
dec
imul
test
pop
call
jne
jnp
add
in
movs
jno
ret
add
xchg
dec
sbb
lock
outs
xor
lods
xor
dec
arpl
popa
mov
add
mov
inc
xchg
cld
fmul
cli
aad
iret
mov
enter
lds
jmp
les
(bad)
and
xchg
mov
ja
retf
pop
xchg
xchg
mov
xchg
or
or
repnz
xchg
aam
add
aas
out
popf
fcom
sahf
cmp
xor
popf
fsubr
pop
call
ficom
add
mov
lea
sbb
cmp
test
lock
rcr
(bad)
gs
cld
push
into
out
lds
iret
mov
ror
ror
mov
fmul
neg
or
movs
popa
jnp
push
or
cmc
sti
dec
ins
movs
arpl
std
jmp
popa
lods
sbb
ins
sub
loope
out
ins
mov
or
ins
das
shl
jecxz
cdq
mov
das
int3
in
out
mov
and
or
mov
and
or
mov
sub
(bad)
in
add
imul
sub
icebp
add
imul
jno
fdiv
stc
repz
ins
movs
outs
adc
gs
std
in
retf
pop
imul
ret
pop
jns
jg
or
sub
adc
mov
leave
popf
lock
shl
aad
sar
fmul
cli
ror
lahf
push
test
enter
lds
retf
lods
(bad)
popa
mov
(bad)
and
xchg
mov
outs
out
ret
jecxz
mov
adc
adc
lea
cmp
inc
pop
repnz
xchg
shl
pop
xchg
add
(bad)
ficomp
or
add
out
popf
rcl
add
cmp
cli
ret
sub
sahf
or
xor
repnz
add
add
(bad)
fdivr
mov
sub
jmp
cdq
stos
jns
(bad)
in
ja
fucompp
sub
popf
mov
mov
(bad)
stc
and
lods
mov
pop
retf
sbb
mov
rcl
mov
xor
cld
(bad)
repz
imul
dec
lods
lahf
sbb
add
fwait
or
jne
shl
jecxz
cdq
mov
or
jns
enter
movs
cmp
pop
mov
sub
push
xor
adc
mov
sub
push
xor
rol
loope
jmp
cdq
mov
das
shr
dec
mov
add
ins
cmp
icebp
add
dec
gs
sbb
ins
aas
sar
cmc
repz
popa
popf
ja
add
in
iret
pop
jns
jnp
add
jmp
adc
cdq
sahf
xchg
lods
xor
loop
adc
lods
xchg
call
rcr
xchg
(bad)
popa
mov
hlt
arpl
fdivrp
and
popf
mov
mov
ret
out
mov
lods
enter
aas
adc
and
repnz
(bad)
aam
or
pop
cli
rcr
or
add
out
popf
les
aas
mov
cmp
(bad)
mov
xor
cmp
loop
popf
rcl
add
cli
ret
sub
sahf
or
or
(bad)
ficomp
add
not
mov
cmp
xchg
sub
loop
in
xor
test
ja
(bad)
sub
popf
mov
mov
sar
sub
xchg
mov
mov
push
jge
arpl
dec
add
vpsubq
arpl
add
xchg
add
jno
shl
out
movs
cdq
mov
sub
in
adc
movs
(bad)
rol
sbb
mov
pop
adc
mov
(bad)
jo
test
sbb
mov
push
mov
sbb
lods
(bad)
lds
cmp
adc
movs
add
es
adc
mov
and
or
dec
xchg
mov
sbb
add
dec
imul
retf
pop
gs
jnp
add
in
leave
jmp
jg
add
xor
les
(bad)
pop
in
xchg
mov
imul
cmc
and
popf
mov
mov
clc
ja
into
loope
jecxz
mov
jnp
aaa
jmp
test
aas
sbb
mov
and
xchg
add
add
cdq
shr
call
(bad)
popf
enter
xor
loop
movs
rcr
xor
cmp
loop
test
cmp
out
into
test
cmp
loop
movs
les
cmps
add
or
cdq
fsubr
pop
sahf
or
add
repnz
adc
sbb
(bad)
fdivr
sbb
pop
mov
jle
retf
jmp
mov
ja
imul
sub
dec
frstor
sbb
mov
popf
imul
aas
fdiv
std
push
and
(bad)
cmc
add
add
jns
xor
adc
mov
and
and
sbb
mov
push
mov
adc
leave
cmp
cmp
sbb
test
push
mov
adc
leave
mov
lea
adc
leave
mov
pop
xor
adc
mov
pop
mov
sbb
movs
cmp
jecxz
cdq
mov
daa
fdiv
add
mov
mov
sbb
jno
fdiv
stc
repz
ins
popf
sub
popa
pop
call
jns
jg
or
in
loope
shr
fld
test
out
jmp
jns
int3
jecxz
adc
loope
pop
mov
xchg
repnz
add
or
cli
ficom
or
add
out
cdq
enter
xor
out
retf
adc
stos
xor
xor
mov
cmp
(bad)
(bad)
test
cmp
cmp
lods
int3
sbb
scas
cmp
xor
jmp
cmp
out
retf
adc
cmps
xor
cmp
popf
fsub
pop
call
ficom
adc
or
repnz
test
cmp
mov
aas
adc
imul
xchg
inc
push
add
adc
cmc
test
daa
(bad)
in
std
div
ins
and
in
or
mov
push
xor
adc
mov
pop
mov
adc
leave
mov
pop
cmp
sar
cmp
sbb
test
pop
lea
or
shl
cmp
sbb
test
push
lea
adc
pop
test
push
mov
sbb
pop
mov
push
mov
sbb
mov
sub
in
jecxz
popf
mov
add
jno
fdiv
add
inc
ins
movs
outs
sub
icebp
iret
pop
imul
iret
push
jge
mov
jl
cld
adc
sbb
sbb
cmp
mov
cmp
xchg
sbb
out
xchg
int3
and
xchg
add
loop
xchg
enter
or
out
into
popf
les
cmp
cmp
retf
adc
stos
cmp
cmp
movs
enter
cmp
and
rol
test
xor
(bad)
imul
xor
fdivp
movs
hlt
sbb
mov
pop
cmp
test
cmp
xor
jmp
add
or
out
(bad)
popf
enter
add
out
xchg
fsub
xchg
or
add
aaa
fcom
ret
inc
inc
xchg
adc
popa
aas
fdiv
std
push
sub
or
mov
and
daa
xor
adc
mov
pop
mov
adc
lods
test
(bad)
jl
lea
adc
xchg
(bad)
int
pusha
dec
lea
add
fnstenv
and
fnstenv
sub
fnstcw
and
sub
popf
mov
mov
dec
xchg
inc
and
ror
cmp
ror
cmp
adc
mov
sub
adc
mov
sub
add
mov
mov
adc
stc
repz
mov
or
(bad)
push
jns
jg
or
pop
xor
add
add
ror
or
or
cdq
int3
and
call
ret
sub
sahf
add
xor
popf
hlt
adc
stos
xor
jmp
xor
sub
fdivp
movs
hlt
adc
stos
xor
shl
test
xor
sub
fdivp
lods
lock
mov
add
lods
lock
mov
pop
sub
fdivp
test
cmp
(bad)
cli
movs
clc
sbb
mov
pop
cmp
mov
or
xor
popf
les
cmps
or
xor
cdq
enter
add
add
and
sti
dec
mov
aas
(bad)
std
add
mov
mov
or
jno
xor
adc
movs
lea
push
cmp
adc
lods
test
(bad)
jl
test
adc
pop
test
pop
mov
or
setge
xchg
inc
sub
sub
popf
mov
scas
push
inc
cdq
jbe
or
pop
sub
xor
sub
xor
cdq
mov
cdq
dec
sub
sub
popf
mov
mov
dec
xchg
inc
and
sub
test
push
lea
adc
leave
xor
push
xor
rcl
jmp
mov
sbb
stc
repz
ins
test
pop
call
jns
jg
or
loopne
in
in
jge
pop
(bad)
pop
in
(bad)
and
fwait
add
or
out
(bad)
cdq
les
mov
cmp
ret
adc
stos
xor
sar
movs
clc
adc
stos
xor
(bad)
imul
xor
and
test
xor
sub
shl
lods
hlt
sbb
mov
add
lods
lock
mov
daa
fdivp
mov
sbb
mov
add
lods
lock
mov
daa
fdivp
test
cmp
shl
lods
clc
adc
scas
xor
cmp
movs
clc
adc
stos
xor
jmp
dec
mov
and
and
test
rcl
stc
test
daa
(bad)
jmp
mov
or
jge
xor
adc
mov
push
mov
adc
pop
test
push
mov
sbb
xchg
mov
xchg
dec
sub
sub
cdq
mov
popf
jb
add
in
pop
jl
jle
xor
jmp
jle
xor
in
mov
adc
cmp
sub
xor
test
popf
inc
sub
sub
cdq
mov
mov
dec
cdq
push
cmp
sbb
test
push
lea
sbb
mov
pop
test
enter
mov
sub
add
dec
imul
retf
pop
gs
jnp
or
in
leave
jmp
mov
xchg
daa
inc
adc
mov
xor
sar
mov
xor
shl
test
xor
and
test
cmp
sub
mov
sbb
mov
add
mov
add
mov
sub
loop
in
add
mov
daa
ret
in
sbb
mov
sub
loop
in
add
mov
daa
ret
in
add
mov
sub
loop
in
cmp
cmp
cli
movs
clc
adc
scas
cmp
fdivrp
movs
mov
idiv
inc
jno
outs
adc
popa
cmp
icebp
stc
out
mov
lods
xchg
add
ins
and
in
or
xchg
push
cmp
adc
test
push
lea
sbb
sar
sub
sub
test
popf
jbe
add
in
pop
js
jle
cmp
aas
mov
movs
data16
cmp
mov
test
xor
test
lods
push
xor
mov
movs
jb
cmp
cmp
jl
jle
cmp
setge
cdq
dec
sub
sub
xchg
mov
xchg
pop
cmp
sbb
mov
push
test
sbb
mov
sub
jmp
mov
sbb
jno
fdivr
std
inc
sub
pop
pop
in
(bad)
push
jns
jg
or
aaa
adc
and
(bad)
mov
cmp
fdivrp
movs
clc
sbb
mov
add
test
and
(bad)
imul
xor
ret
clc
sbb
mov
cvtps2pi
(bad)
out
lods
loopne
and
daa
into
jmp
or
mov
add
mov
and
jmp
(bad)
jnp
into
out
mov
add
mov
sub
loop
loopne
cmp
sub
loop
loopne
cmp
addr16
sub
repz
imul
div
ins
sub
jmp
rol
adc
pop
test
push
lea
adc
setns
cdq
jp
add
jmp
jle
xor
in
mov
sbb
cmp
mov
lods
push
xor
cmc
test
test
aas
cmc
aad
scas
inc
fs
xor
pusha
lods
push
xor
mov
lods
jp
xor
jmp
dec
and
sub
popf
mov
mov
cmp
and
xchg
(bad)
int
jl
lea
sbb
movs
(bad)
lds
enter
mov
mov
add
ins
aaa
fdiv
stc
repz
imul
retf
push
jns
jae
or
in
loope
mov
mov
in
sbb
mov
daa
ret
in
sbb
mov
sub
loop
loopne
aas
mov
and
jmp
or
mov
add
ret
and
mov
add
mov
push
into
jmp
ja
jnp
into
jmp
ja
jg
retf
in
das
mov
and
out
mov
add
ret
pop
jnp
into
loop
in
sbb
mov
sub
out
lods
call
inc
and
and
cmc
test
ins
and
jmp
mov
or
jge
xor
adc
(bad)
jl
mov
adc
xchg
(bad)
int
push
or
loope
pop
jl
jle
xor
in
mov
sbb
cmp
mov
test
xor
shl
fisttp
bound
cmp
aad
fisttp
lods
bound
dec
sub
sar
xlat
dec
pusha
lods
bound
dec
cmp
sar
fild
mov
add
inc
aas
mov
stc
stos
inc
fs
aaa
lea
test
aas
test
movs
dec
sub
sub
xchg
mov
xchg
pop
cmp
sbb
mov
push
test
enter
mov
sub
add
dec
xchg
lods
imul
ins
add
std
icebp
retf
pop
gs
jnp
or
in
loope
mov
xor
sub
ret
in
sbb
mov
pop
retf
in
das
mov
push
retf
in
and
sub
retf
in
and
sub
ret
call
or
jnp
ss
jae
jg
ss
mov
or
pop
adc
mov
or
pop
adc
mov
add
ret
pop
sbb
mov
and
ss
mov
add
and
or
fdiv
stc
repz
ins
test
das
int3
in
or
movs
test
push
cmp
adc
test
push
mov
adc
fnstcw
adc
xor
lea
mov
aaa
mov
lods
push
cmp
stc
xlat
dec
pusha
mov
add
dec
cmp
sar
(bad)
dec
sub
leave
add
xchg
or
push
and
leave
add
call
add
dec
nop
mov
sbb
inc
cmp
sar
fisttp
lods
outs
add
cmp
mov
test
xor
jl
jle
xor
popf
mov
mov
cmp
int
jo
lea
adc
movs
xchg
mov
sub
in
add
addr16
imul
inc
popa
popf
jnp
add
jmp
xchg
adc
push
mov
ja
sub
push
mov
add
ret
pop
adc
mov
add
ret
pop
sbb
mov
or
pop
xchg
sbb
sub
adc
mov
add
ret
pop
adc
mov
and
mov
sbb
ja
xchg
sbb
jae
mov
sbb
and
mov
sbb
sub
mov
sbb
inc
ins
cdq
outs
sbb
gs
fdiv
stc
push
and
adc
mov
pop
test
adc
pop
xchg
(bad)
int
ins
dec
xchg
dec
sub
sub
test
movs
jle
xor
in
mov
sbb
cmp
icebp
shl
fisttp
lods
bound
sub
(bad)
(bad)
sub
ror
mov
sub
or
mov
sub
in
or
mov
sub
or
mov
and
rol
bound
cmp
sar
stos
inc
pusha
lods
push
xor
mov
test
aas
test
popf
dec
sub
sub
test
push
lea
sbb
mov
push
test
enter
mov
mov
sbb
jno
fdiv
stc
inc
arpl
add
in
(bad)
push
jns
jg
or
aaa
adc
and
xor
mov
add
ret
push
mov
push
mov
sub
sbb
and
xchg
sbb
sub
xor
mov
add
(bad)
sub
ds
mov
sub
ds
mov
sub
mov
push
mov
sub
ds
mov
sub
adc
jae
mov
call
imul
sti
mov
sub
adc
mov
sub
pop
xchg
mov
pop
and
sub
sub
cmp
lea
movs
jbe
cmp
icebp
shl
fild
movs
outs
add
push
sub
leave
add
xchg
or
push
das
in
ror
mov
push
pop
pop
loope
or
xchg
je
pop
pop
in
ror
or
pop
in
rcl
mov
sub
or
mov
sub
aad
fisttp
lods
bound
cmp
mov
stc
stos
inc
pusha
test
cmp
jl
inc
sub
sub
popf
mov
(bad)
js
xchg
dec
cmp
and
mov
pop
test
xor
adc
mov
and
(bad)
cmc
std
sti
dec
ins
test
pop
call
jns
jg
or
in
aad
lods
pop
cmp
cmp
or
into
and
cmp
mov
sub
adc
jae
mov
adc
sub
adc
jg
xchg
pop
es
mov
sub
xchg
pop
es
mov
and
xchg
pop
cmp
mov
and
add
and
add
and
push
(bad)
sahf
adc
adc
test
aaa
fsub
add
mov
xor
mov
scas
adc
bound
loope
cmp
ret
sbb
retf
jne
jae
repnz
in
cmp
xor
retf
in
add
jmp
in
add
icebp
shl
je
fprem1
jmp
sahf
or
or
sahf
je
pop
pop
jmp
mov
mov
pop
push
jmp
mov
mov
push
in
int
(bad)
mov
and
or
xchg
or
push
das
in
or
mov
mov
das
icebp
aad
xlat
dec
pusha
lods
bound
cmp
lea
test
setns
cdq
push
cmp
sbb
lods
test
(bad)
je
mov
adc
movs
xchg
mov
das
fsub
add
dec
lods
outs
adc
imul
pop
imul
ret
loopne
xchg
aaa
ss
loope
or
push
xchg
pop
es
mov
sub
xchg
pop
and
mov
and
xchg
pop
es
mov
and
es
mov
and
and
mov
sub
cs
mov
sub
and
mov
pop
jnp
fwait
push
add
addr16
fwait
inc
sub
rol
out
sub
xchg
xor
(bad)
mov
push
xor
repnz
sub
out
mov
or
ficomp
dec
addr16
cli
sar
push
repnz
pop
jge
jg
jmp
inc
jo
arpl
jmp
dec
pusha
(bad)
bound
sbb
or
push
cli
push
dec
push
ror
test
or
mov
std
sbb
xchg
mov
cmp
pop
shl
sbb
lods
or
js
fs
shl
sbb
xchg
push
in
int
(bad)
movs
mov
sahf
or
sub
ror
or
push
das
icebp
rol
bound
xor
cmc
test
lods
jp
xor
jmp
dec
sub
sub
test
push
lea
sbb
movs
test
(bad)
daa
rcr
out
xchg
mov
sbb
imul
pop
gs
jnp
add
in
push
jge
mul
push
prefetch
pop
addr16
fwait
inc
sub
rol
into
and
xchg
dec
sub
mov
and
xchg
dec
add
jnp
xchg
dec
cs
mov
push
jnp
fwait
inc
push
push
mov
and
push
add
addr16
lahf
dec
sub
mov
and
sub
mov
and
sub
mov
xchg
inc
hlt
fisttp
loop
sub
sub
sub
(bad)
sar
push
imul
jmp
push
pop
jno
ja
inc
call
pop
jge
jae
jmp
inc
fs
cmp
int3
sbb
pop
neg
push
int3
or
(bad)
push
dec
fs
sahf
sub
int3
add
dec
add
nop
lahf
call
push
push
dec
pusha
mov
sbb
cwde
scas
sub
cmc
and
nop
mov
mov
(bad)
sbb
cmp
pop
shl
sbb
xchg
daa
in
ror
or
das
loope
or
mov
mov
cmp
aad
stos
inc
pusha
test
xor
jo
inc
sub
sub
xchg
mov
xchg
pop
cmp
sbb
mov
push
test
enter
mov
mov
sbb
stc
inc
ja
add
jmp
arpl
or
xchg
fdivr
lds
arpl
push
xor
arpl
push
xor
xor
sub
push
arpl
inc
sub
mov
and
push
xor
add
das
shr
addr16
lahf
dec
adc
mov
push
outs
dec
cmps
inc
push
les
jne
(bad)
push
arpl
adc
sar
ficom
dec
cmps
inc
sub
les
jno
ficom
dec
mov
cwde
popf
pop
push
ret
test
and
das
dec
and
sub
inc
dec
(bad)
sar
sub
push
jnp
retf
je
loop
pop
jno
ja
cli
shr
push
out
push
pop
jno
arpl
out
adc
pop
not
pusha
(bad)
outs
cmp
enter
not
ins
xchg
outs
cs
enter
(bad)
pop
mov
lahf
call
add
xchg
mov
xor
pop
add
cwde
cmps
call
add
pushf
cmps
outs
cmp
std
inc
fnsave
loope
call
inc
ins
dec
(bad)
and
lods
mov
cmp
pop
in
std
sbb
sahf
je
pop
pop
loope
adc
mov
and
rol
ror
data16
cmp
lea
movs
jle
xor
popf
mov
mov
cmp
sbb
mov
push
mov
enter
mov
mov
aaa
fdiv
stc
repz
popa
movs
outs
sub
popa
pop
in
leave
in
iret
push
jns
jae
or
cmp
adc
mov
sar
cmps
inc
adc
les
inc
mov
cmp
push
(bad)
push
arpl
push
rol
push
(bad)
pop
outs
dec
cmps
inc
push
cmp
cmp
pop
ficomp
dec
cmps
inc
push
sar
scas
inc
sbb
les
push
ficomp
inc
stos
inc
push
les
inc
scas
ret
les
lods
cmp
mov
into
sub
mov
fisub
out
mov
push
push
dec
pop
jae
inc
hlt
je
jmp
out
in
jo
out
push
inc
ins
jg
ds
adc
push
cli
pop
dec
ins
(bad)
enter
(bad)
push
mov
fwait
call
add
xchg
mov
xor
pop
add
nop
cmps
call
push
dec
mov
shr
gs
push
inc
mov
sar
imul
dec
and
loope
clc
je
pusha
popf
ins
inc
fldl2t
xor
xchg
mov
push
sti
test
int
jo
pop
push
in
rcl
mov
sub
or
dec
pushf
mov
cmp
push
cmp
test
cdq
dec
and
and
lods
test
mov
lea
adc
mov
and
fdiv
add
dec
gs
pop
call
jns
jae
or
in
loope
add
cmp
push
ficomp
inc
scas
inc
sbb
les
jno
ficomp
inc
stos
inc
sbb
enter
ficomp
inc
cmps
inc
push
sar
ficomp
inc
scas
inc
push
cmp
sub
ficom
dec
mov
push
sub
and
push
ficom
inc
mov
push
cmp
sub
ficom
dec
mov
push
sub
sub
loop
inc
dec
mov
movs
lahf
aam
jg
sbb
mov
into
sub
cmp
cmps
mov
sub
out
mov
pop
push
jne
ja
inc
cld
je
out
pop
pop
jge
jae
jmp
inc
pusha
jg
cmp
enter
cli
push
dec
ins
xchg
outs
cs
enter
(bad)
pop
mov
fwait
call
add
xchg
stos
call
or
pushf
mov
push
shr
xchg
mov
add
aam
popa
inc
or
xchg
mov
add
shr
gs
or
pushf
mov
and
ja
lds
stos
(bad)
leave
or
jmp
ins
pop
fyl2xp1
sbb
cmp
dec
in
std
sbb
xor
in
or
mov
mov
aas
cmc
fscale
stos
inc
fs
cmp
je
inc
sub
sub
test
push
mov
sbb
movs
cmp
out
imul
iret
pop
jns
jnp
add
loope
cmp
xchg
inc
sbb
es
ficom
inc
mov
sbb
les
push
loop
push
dec
mov
push
sub
sub
ficom
inc
mov
sbb
les
push
ficom
dec
mov
push
les
jge
loop
imul
es
loop
push
js
jle
es
loop
push
js
jle
es
fiadd
jbe
xchg
sub
daa
inc
xchg
shl
(bad)
cmps
mov
sub
out
sar
push
pop
jno
ja
cli
shr
push
out
push
pop
jne
arpl
out
adc
not
pusha
(bad)
enter
(bad)
push
dec
pusha
xchg
sahf
sub
int3
add
dec
add
cwde
mov
cmp
add
pushf
scas
xchg
push
shr
gs
or
cwde
mov
or
shr
nop
mov
sub
or
nop
mov
sub
or
xchg
mov
sub
inc
push
inc
mov
das
lock
pop
push
dec
test
xchg
in
cmp
mov
shl
sbb
test
int
jo
pop
push
loope
adc
mov
and
std
xlat
inc
fs
sbb
cmp
lea
mov
or
inc
xchg
pop
cmp
sbb
mov
sub
add
dec
xchg
mov
sbb
imul
pop
gs
jnp
add
in
mov
cmp
pop
push
js
jle
es
ficom
js
jle
es
and
out
push
je
jle
es
loop
push
js
jp
sub
and
pop
out
push
jo
jle
sub
and
pop
out
push
jo
jle
les
jge
out
push
jo
jle
es
loop
setb
xchg
or
push
xchg
shl
outs
dec
inc
dec
(bad)
sar
sub
out
into
mov
pop
pop
jno
addr16
test
js
repnz
inc
jo
imul
int
popa
inc
cli
dec
dec
ins
mov
ins
inc
add
nop
fwait
sahf
adc
aam
popa
dec
add
nop
stos
xchg
push
fsubr
mov
sub
inc
or
xchg
mov
pop
gs
push
inc
mov
pop
aam
popa
dec
push
inc
mov
push
aam
ins
dec
sbb
mov
xor
and
inc
adc
xchg
mov
sub
dec
or
xor
rol
scas
push
in
rep
or
js
fs
in
rcl
mov
sub
in
or
dec
nop
mov
aas
mov
movs
jb
xor
cdq
mov
mov
cmp
sbb
mov
push
mov
enter
mov
mov
adc
std
iret
inc
gs
jnp
add
in
push
jns
sar
xor
pop
mov
jle
sub
and
pop
loop
push
jo
jle
sub
and
pop
out
push
jo
jle
es
loop
push
jo
jle
and
pop
jns
jmp
push
int3
pop
jns
jmp
push
enter
out
push
jl
jp
push
enter
mul
adc
mov
jnp
das
inc
and
sub
inc
dec
(bad)
sar
pop
push
dec
push
ja
repnz
js
jmp
out
mov
sub
ficom
outs
jl
jg
pop
mov
jmp
jmp
and
jo
int
fucomip
push
lahf
dec
push
aaa
js
leave
out
fild
push
and
sub
or
les
dec
push
inc
mov
push
fcom
dec
sbb
mov
xor
push
popa
dec
push
inc
mov
pop
aam
popa
dec
push
inc
mov
push
fcom
inc
sbb
test
xchg
or
shr
xchg
mov
sub
popa
fwait
mov
loope
imul
fs
aad
sbb
mov
sub
or
mov
mov
aas
mov
stc
fild
jbe
cmp
popf
movs
in
pusha
dec
cdq
inc
cmp
and
mov
push
test
xor
adc
mov
mov
cmp
jmp
mov
or
leave
jmp
jae
add
int3
retf
aad
pop
jl
jle
push
int3
pop
jns
loop
pop
jl
jp
push
int3
push
jns
out
pop
jl
jp
push
int3
pop
jns
out
push
jl
jp
push
int3
pop
gs
out
pop
push
js
jp
push
enter
jmp
pop
rcr
inc
out
dec
pop
js
data16
int3
les
mov
sub
mov
ficomp
inc
inc
inc
out
(bad)
pop
loop
outs
jno
pop
faddp
(bad)
cld
loopne
iret
cdq
sub
(bad)
aad
jne
fs
sbb
pop
xchg
in
xchg
(bad)
jl
ror
dec
aaa
jmp
jl
jbe
sub
stc
in
jecxz
pusha
mov
and
test
mov
(bad)
cmp
das
loopne
leave
scas
xlat
add
ret
xchg
jle
movs
push
jns
push
jge
mov
and
dec
ins
inc
sbb
or
jp
aam
popa
dec
push
inc
mov
dec
aam
ins
inc
push
dec
mov
pop
aam
popa
dec
push
inc
mov
shr
ins
inc
push
ins
stos
cwde
mov
sub
sbb
test
sar
adc
xchg
push
in
adc
mov
sub
cmc
fyl2xp1
stos
inc
pusha
test
cmp
je
dec
and
and
lods
test
(bad)
jo
mov
xor
adc
mov
mov
xor
in
inc
outs
sub
gs
in
leave
jmp
jae
or
add
xor
jbe
push
int3
pop
jge
out
pop
je
jbe
pop
rcr
jmp
push
int3
pop
gs
out
pop
pop
je
jp
push
ror
pop
out
inc
pop
ins
xlat
jbe
inc
int3
dec
jns
repnz
pop
jo
jp
push
ror
push
out
inc
pop
jl
data16
sar
xchg
sub
xor
stos
mov
and
dec
pop
out
(bad)
int3
xchg
cld
mov
jmp
scas
js
int
cmp
xor
cmc
mov
popf
push
cmp
cmc
ret
mov
pop
pop
push
(bad)
sbb
nop
mov
jo
shr
out
sub
xor
mov
mov
sbb
pop
lods
test
test
rol
aaa
or
out
loope
and
bound
xchg
dec
gs
add
mov
mov
popa
dec
and
mov
and
inc
popa
dec
push
inc
mov
pop
aam
popa
dec
push
inc
mov
pop
aam
gs
push
dec
mov
and
cmp
sbb
cmp
mov
mov
push
pusha
push
in
ror
or
std
cmps
inc
fs
sbb
cmp
lea
movs
inc
sub
sub
xchg
mov
lea
sbb
mov
daa
fdiv
add
dec
ins
test
pop
call
jns
jg
or
loope
pop
xor
push
ror
repnz
pop
jo
jp
push
ror
out
push
pop
jo
jp
push
int3
pop
jns
jmp
pop
int3
inc
jns
repnz
pop
ins
xlat
bound
inc
gs
repnz
inc
js
push
dec
aam
popa
dec
test
xlat
imul
dec
int3
sub
sbb
mov
into
push
imul
imul
into
dec
into
and
popf
test
mov
xor
sub
cmps
inc
je
push
cmp
stc
retf
mov
and
or
xchg
fs
fyl2xp1
and
pushf
mov
je
int
xor
mov
jg
sbb
std
shr
fiadd
nop
push
or
stc
rol
jb
or
jmp
stos
or
inc
call
adc
mov
fmul
inc
sbb
adc
jp
aam
ins
inc
push
inc
mov
pop
aam
gs
push
inc
mov
sar
nop
scas
bound
cmp
call
pusha
lea
in
cmc
or
mov
pop
push
das
icebp
lds
bound
cmp
lea
mov
pop
mov
mov
xor
adc
mov
and
add
dec
lods
addr16
ins
add
stc
in
ret
push
jns
jae
or
in
loope
lds
xor
gs
repnz
inc
push
rol
out
push
inc
push
rol
repnz
inc
push
aam
gs
repnz
inc
pusha
fbld
dec
rol
dec
test
fbld
dec
ror
test
jecxz
cdq
fsubr
test
inc
call
jmp
sub
sbb
xor
nop
test
jp
add
aas
mov
lods
push
xor
std
(bad)
mov
and
or
mov
push
push
out
mov
js
leave
in
adc
mov
test
sbb
in
in
ret
xchg
and
push
add
sar
dec
fs
outs
sub
std
retf
pushf
call
icebp
fiadd
pushf
(bad)
jge
adc
and
mov
mov
dec
stos
mov
aam
popa
dec
sbb
adc
jb
aam
popa
dec
push
inc
mov
shr
pushf
mov
sbb
fdivr
adc
xchg
aad
jge
mov
lds
stc
leave
or
dec
pushf
mov
sbb
inc
aas
mov
test
add
inc
xchg
pop
xor
sbb
mov
sub
add
dec
cdq
mov
adc
imul
pop
jne
jnp
or
in
loope
add
xchg
ja
call
dec
ins
(bad)
jle
je
dec
cli
inc
inc
pusha
fbld
dec
aam
gs
repnz
inc
pusha
(bad)
dec
aam
ins
inc
cli
inc
dec
push
aam
popa
dec
test
jecxz
push
jp
jo
inc
inc
(bad)
out
or
pushf
push
outs
push
daa
inc
cmp
stc
ins
cmc
and
mov
add
and
sbb
mov
adc
cmp
mov
test
daa
loope
add
sahf
or
pop
shl
adc
mov
shr
out
test
jl
xor
jmp
push
or
stc
ret
xchg
bound
add
add
mov
pushf
call
or
mov
cmp
lock
xchg
adc
test
push
mov
bound
inc
sub
nop
fbstp
ins
jg
inc
scas
mov
aam
popa
dec
push
dec
mov
pop
aam
gs
adc
pushf
mov
push
cs
ins
inc
or
or
mov
or
pop
sub
lds
data16
dec
cmp
push
cmp
cdq
mov
cdq
pop
cmp
sbb
mov
push
mov
int3
jmp
mov
sbb
jno
aam
cmc
retf
push
jns
jnp
add
loope
test
and
jbe
(bad)
inc
inc
ins
jecxz
push
jp
jo
inc
cli
inc
inc
ins
jecxz
push
jbe
jl
inc
test
out
push
jp
jl
inc
dec
push
aam
popa
inc
dec
fs
push
jp
jl
inc
add
xchg
or
sbb
(bad)
lods
mov
rol
(bad)
or
mov
push
mov
adc
fldcw
adc
cmp
cmc
movs
cmc
fisttp
test
and
int
retf
mov
pop
pop
push
(bad)
sbb
mov
int
xor
mov
jle
sbb
fsubr
(bad)
dec
push
push
paddsw
cmc
into
mov
pushf
sahf
adc
les
sahf
sbb
or
or
adc
movs
mov
shr
repnz
xor
dec
(bad)
pop
add
sar
inc
pop
dec
pop
aaa
adc
mov
fcomp
dec
sbb
test
xor
push
gs
sbb
mov
sub
inc
or
xchg
scas
sahf
push
xor
sbb
push
sub
ror
mov
sub
mov
std
stos
inc
fs
cmp
dec
cdq
pop
cmp
sbb
mov
pop
mov
int3
sbb
jmp
popf
mov
adc
cmc
(bad)
pop
gs
jnp
or
loopne
loope
pop
jns
ja
push
pop
jg
add
inc
mov
jmp
push
jp
jl
inc
cli
inc
dec
fs
pop
jbe
js
inc
dec
push
aam
ins
dec
push
inc
dec
pushf
repz
add
nop
repz
inc
jbe
fs
dec
add
xchg
pop
add
adc
adc
mov
test
xor
adc
test
push
mov
sbb
loope
pop
jl
jle
xor
cmp
test
test
das
in
int
retf
mov
push
pusha
pop
fyl2xp1
and
pushf
mov
jo
leave
in
sbb
je
jbe
adc
aam
ret
xchg
sub
or
(bad)
std
into
mov
mov
aas
fxtract
or
mov
and
adc
mov
sub
call
mov
add
je
shr
loop
test
in
in
ror
xchg
add
jl
mov
fild
ins
addr16
scas
mov
mov
aam
popa
dec
push
inc
cmps
add
add
shr
popa
inc
or
cwde
mov
adc
int3
cmp
sbb
xchg
or
push
aaa
cmc
fscale
stos
inc
lods
push
xor
jmp
dec
and
and
mov
pop
test
enter
mov
mov
sbb
cmc
(bad)
pop
imul
ret
push
jns
repz
push
push
inc
sub
cwde
neg
ins
dec
add
nop
neg
ins
dec
add
cwde
repz
dec
(bad)
fsubr
push
inc
mov
(bad)
fsubr
push
inc
mov
neg
push
inc
adc
sub
cmc
jmp
popf
mov
or
jne
xor
or
mov
pop
lea
or
loope
inc
js
push
cmp
cmc
iret
mov
lods
xchg
or
or
xchg
fs
(bad)
out
mov
cmps
push
loope
adc
movs
in
pop
jl
outs
and
enter
fs
bound
or
add
sahf
sbb
ins
sub
in
or
xchg
sub
in
out
lods
cmp
in
jmp
jl
leave
in
jmp
je
int
sbb
mov
and
mov
mov
dec
imul
xlat
xchg
fcomp
push
dec
mov
pop
shl
xchg
mov
adc
shl
jge
add
nop
lahf
xchg
or
loopne
inc
xchg
xchg
or
push
aaa
icebp
shl
fisttp
data16
cmp
and
sub
lods
test
(bad)
jo
mov
sbb
mov
xor
jmp
popf
ja
add
in
push
jns
arpl
push
sti
ins
jmp
jle
pushf
not
push
dec
push
inc
mov
neg
ins
inc
push
inc
mov
sti
call
push
dec
mov
data16
inc
or
nop
call
popa
dec
push
push
pop
lods
(bad)
sbb
aas
(bad)
std
add
mov
sub
xor
leave
mov
pop
mov
or
pop
lea
mov
xor
(bad)
retf
mov
and
or
mov
push
push
out
mov
js
xor
cmp
std
fsubr
fiadd
nop
push
or
in
sar
mov
pushf
sahf
adc
or
mov
sub
adc
mov
in
out
lods
cmp
xor
mov
xchg
sbb
sbb
xchg
add
or
jl
leave
in
jmp
js
vunpckhps
dec
mov
pop
ins
dec
inc
out
dec
sub
mov
ins
addr16
mov
pop
aam
gs
adc
pushf
mov
sbb
sar
jns
or
nop
mov
add
pushf
adc
icebp
lds
bound
xor
lea
mov
or
pop
mov
sbb
mov
aaa
fsub
stc
inc
jae
add
in
int
ret
push
jge
ja
or
in
mov
sahf
dec
(bad)
fcomp
nop
call
imul
xchg
mov
loopne
imul
xchg
jae
jno
cwde
pop
xchg
mov
dec
jp
inc
ins
xchg
arpl
xor
std
jmp
xchg
mov
or
jge
cmp
adc
mov
dec
xchg
jle
add
jmp
push
and
std
(bad)
mov
and
aad
adc
mov
shl
jecxz
mov
cmp
inc
psubw
in
(bad)
dec
push
push
add
int3
std
retf
movs
call
or
mov
in
out
lods
cmp
adc
xchg
mov
mov
pop
test
sbb
push
xchg
mov
mov
sbb
adc
pop
test
xor
test
and
in
out
mov
and
cdq
sar
inc
cmc
js
es
rol
out
sti
gs
mov
aam
gs
push
inc
mov
sar
jns
or
nop
stos
call
add
popf
(bad)
out
adc
data16
inc
xor
jl
dec
sub
sub
test
pop
mov
sbb
mov
and
in
test
popa
or
leave
in
push
jge
jae
or
or
cmp
xchg
mov
fcomp
mov
sahf
loopne
push
ja
inc
mov
call
mov
call
mov
xchg
loopne
sar
(bad)
dec
ins
popf
imul
gs
(bad)
cmc
add
xor
cmp
adc
xchg
mov
xchg
dec
sub
in
mov
add
inc
das
in
add
mov
pop
pop
push
shl
adc
mov
shr
out
lods
(bad)
and
aam
rol
nop
push
add
std
repnz
cmp
or
mov
loopne
push
test
pop
test
sbb
adc
dec
nop
dec
and
push
cdq
lods
shl
and
mov
mov
push
mov
sbb
push
xchg
mov
sub
in
out
lods
test
vunpckhps
dec
xchg
test
sbb
inc
cmp
mov
iret
mov
hlt
pop
popa
jnp
inc
cmps
test
xchg
add
sar
pushf
cmps
call
add
ins
xchg
xor
or
or
cmps
jge
xchg
inc
aas
mov
movs
jle
xor
pop
test
push
mov
sbb
mov
cs
in
test
popa
pop
loopne
jmp
jae
or
fmul
cmc
pop
mov
call
mov
call
mov
xchg
in
push
ja
jne
test
mov
jg
jno
mov
mov
and
and
push
(bad)
dec
gs
imul
out
popf
mov
jo
adc
mov
mov
sub
icebp
fild
test
sub
aad
ret
mov
sub
sbb
xchg
mov
jo
leave
in
pop
mov
and
stc
ret
cwde
push
or
add
mov
in
jmp
js
xor
push
xchg
mov
mov
or
push
popf
lods
shl
and
push
test
dec
and
mov
nop
pop
and
mov
test
xor
test
das
shr
repnz
test
setne
lods
sub
lock
inc
sub
dec
scas
mov
sahf
push
sub
sub
push
push
mov
xor
add
push
add
push
int3
sbb
fs
xchg
test
and
jl
jle
xor
add
inc
lea
sbb
movs
add
cmp
in
sti
dec
ins
test
pop
call
jns
jg
or
loope
mov
sbb
cmps
sahf
aam
push
jnp
jne
mov
and
sbb
mov
sub
sbb
test
mov
ja
jge
sbb
add
sti
dec
imul
out
cmp
sbb
dec
xchg
jbe
xor
in
ror
xchg
add
dec
daa
in
ror
mov
push
pop
inc
(bad)
and
nop
mov
je
leave
in
sbb
movs
loope
pop
jl
bound
or
stc
ret
cwde
outs
adc
or
movs
xchg
mov
or
in
jmp
jl
cmp
push
popf
mov
nop
dec
and
mov
pushf
inc
sub
push
test
inc
sub
push
test
xchg
dec
and
push
cdq
mov
mov
push
nop
pop
xor
adc
sub
call
mov
aaa
jmp
cwde
xchg
outs
add
stos
fs
inc
(bad)
mov
cs
inc
mov
xor
add
pop
add
pushf
lahf
outs
ds
enter
mul
mov
jno
pusha
lods
jle
add
setns
cdq
dec
cmp
and
mov
sub
add
imul
pop
call
jns
jg
or
in
jno
in
stos
inc
or
mov
sub
push
jge
sbb
xchg
xchg
mov
stos
mov
call
jne
mov
in
add
cmp
sti
dec
gs
daa
int3
std
or
movs
mov
pop
cmp
sbb
test
cdq
jbe
add
icebp
rol
mov
add
dec
daa
loope
or
mov
push
pusha
dec
(bad)
out
mov
je
leave
in
pop
icebp
movs
loope
inc
jl
push
or
stc
into
mov
pushf
call
or
movs
xor
in
jmp
test
sbb
or
inc
xchg
dec
sub
movs
fsubr
adc
lea
dec
sub
cmp
inc
mov
add
inc
xchg
pop
cmp
sbb
sub
jmp
js
aad
or
push
add
xor
fwait
shl
sub
sub
sbb
nop
mov
adc
ror
pop
add
pushf
fwait
push
push
enter
dec
popa
xchg
in
fadd
pop
xor
popf
movs
in
js
cdq
pop
cmp
sbb
movs
(bad)
lds
fcomp
add
dec
popf
mov
adc
gs
in
retf
pop
jne
jg
or
in
loope
fstp
mov
jae
jne
mov
mov
pop
jae
jne
mov
mov
pop
jnp
popa
xchg
mov
in
mov
jg
jno
mov
or
mov
dec
fwait
add
imul
mov
pop
test
adc
fldenv
adc
xor
cmc
movs
cmc
fbstp
push
pop
loope
or
mov
fyl2xp1
and
test
jl
cmp
shr
fiadd
nop
push
or
in
sar
mov
cmp
adc
lods
cmp
adc
xchg
add
jns
nop
dec
and
push
cdq
movs
aam
ins
dec
pushf
inc
adc
cmp
je
jp
cmp
sub
lea
dec
adc
test
mov
cmp
sub
popf
mov
test
shl
jmp
js
shr
or
movs
pushf
mov
add
js
mov
adc
pop
mov
jns
cmp
jns
add
pushf
lahf
push
add
sbb
(bad)
pop
inc
gs
outs
into
jmp
lock
pusha
add
cdq
mov
cdq
push
cmp
sbb
mov
push
test
shr
out
dec
xchg
lods
sub
imul
pop
jns
jg
or
in
movs
js
mov
repnz
pop
jnp
popa
xchg
mov
in
mov
jg
jno
mov
in
lods
pop
imul
xchg
mov
mov
pop
ja
xchg
lock
in
sti
mov
test
and
std
or
mov
dec
and
and
test
popf
bound
xor
aaa
cmc
test
test
pop
in
rcl
movs
xchg
ror
icebp
and
cmp
cmp
fsubr
(bad)
inc
ins
nop
push
or
int3
std
cli
mov
cmp
loopne
jmp
jl
cmp
mov
xchg
dec
sub
mov
stos
imul
lea
jp
sub
sub
aam
(bad)
pop
jo
jbe
cmp
ds
in
push
je
dec
sbb
movs
fsubr
and
adc
pop
mov
leave
adc
jmp
je
fldlg2
adc
xchg
sub
sar
inc
push
or
adc
sbb
xchg
sub
xor
push
pop
mov
lahf
push
push
int3
sbb
cli
pop
inc
popa
(bad)
outs
retf
in
push
test
imul
jne
push
add
leave
or
es
jmp
mov
adc
ins
add
cmc
icebp
iret
push
jge
jnp
or
in
loope
or
xchg
xchg
inc
es
mov
mov
inc
ja
jno
mov
mov
inc
sub
mov
mov
scas
lock
pop
sub
mov
inc
and
int3
cmp
shl
repz
test
and
in
adc
lods
test
cmp
dec
cmp
fldcw
adc
cmc
(bad)
push
das
in
int
sti
test
lds
shl
out
mov
scas
push
adc
icebp
(bad)
dec
fs
sub
add
mov
and
or
mov
sbb
and
cdq
mov
xchg
dec
adc
lods
fsub
sbb
movs
call
bound
and
es
fdiv
rol
mov
add
aam
cmps
push
jl
jp
and
mov
dec
sub
mov
nop
pop
xor
push
test
and
adc
call
add
inc
ins
xchg
bound
mov
mov
inc
cwde
inc
push
ds
xor
sbb
nop
lahf
call
(bad)
push
dec
imul
jne
jne
das
mov
sub
dec
cmp
and
mov
pop
test
int3
adc
dec
popa
mov
adc
ins
aas
aam
cmc
(bad)
push
jns
jnp
add
in
fdivr
dec
push
mov
lahf
mov
in
mov
xchg
mov
in
movs
inc
sub
mov
hlt
lods
inc
ins
sub
mov
clc
xor
icebp
stc
repz
test
and
jmp
mov
dec
and
sub
test
popf
push
cmp
stc
fbstp
push
pop
in
int
imul
dec
push
out
mov
jl
cmp
fsubr
mov
bound
or
add
mov
sub
in
sbb
and
or
dec
cwde
dec
adc
cmp
jl
jp
sub
stc
fdiv
(bad)
dec
fs
cs
clc
fiadd
mov
and
fdiv
ficomp
mov
add
test
stos
push
je
dec
adc
test
mov
cmp
mov
xchg
call
mov
sub
add
dec
cwde
xchg
bound
aam
xchg
jl
js
adc
mov
ins
jnp
dec
mov
cmps
sahf
and
int3
add
push
(bad)
push
inc
gs
outs
retf
in
jo
repnz
pop
jno
outs
(bad)
lock
sar
add
pop
mov
int3
sbb
jecxz
xchg
mov
aas
shl
cmc
(bad)
pop
jns
jg
add
loope
pushf
jo
pop
jb
movs
scas
inc
cmps
das
imul
outs
xor
movs
inc
mov
dec
imul
and
inc
fs
test
mov
repz
test
sub
adc
mov
push
test
adc
jno
je
outs
sbb
cmp
stc
(bad)
retf
mov
and
adc
xchg
or
js
push
out
mov
test
adc
in
icebp
ret
cwde
bound
rol
or
loopne
push
test
push
mov
adc
add
dec
mov
ss
in
inc
js
or
and
shl
rol
mov
pop
stc
fdivr
ret
les
push
dec
cs
aam
retf
mov
ss
fsubr
stos
push
jo
jle
xor
and
sbb
and
out
mov
cmp
cld
or
dec
cwde
cwde
bound
add
icebp
stos
push
ins
sbb
or
(bad)
and
mov
or
push
add
popa
(bad)
outs
retf
loopne
pop
neg
gs
fdivrp
(bad)
inc
out
jmp
mov
push
mov
int3
sbb
mov
mov
sbb
jno
aam
cmc
(bad)
pop
gs
jg
add
loope
pop
js
shl
add
inc
jg
ins
and
inc
imul
xchg
hlt
fadd
ss
(bad)
mov
hlt
rol
imul
sub
push
ins
das
xor
adc
lods
test
mov
and
loope
pop
js
outs
add
cmp
std
(bad)
(bad)
mov
sub
lds
mov
leave
in
out
mov
cmp
inc
or
fdiv
(bad)
dec
pusha
cwde
xchg
adc
rol
mov
and
das
xor
cmp
adc
add
dec
mov
xor
lods
call
outs
or
dec
push
stc
fdivr
(bad)
dec
cwde
les
loope
cld
ret
les
in
cld
ret
les
sub
cs
(bad)
lock
mov
adc
cmp
lea
dec
and
mov
mov
and
sbb
sahf
sbb
clc
or
dec
cwde
cwde
outs
and
shl
ficomp
jbe
in
out
test
xchg
inc
mov
push
pushf
or
push
push
dec
popa
xchg
outs
retf
loopne
pop
neg
popa
ja
(bad)
sar
push
out
mov
jge
aaa
movs
mov
xchg
and
mov
sbb
jno
aam
cmc
retf
pop
jne
jae
add
loope
push
jge
mov
push
push
xlat
dec
push
cmp
mov
hlt
fadd
cmp
mov
hlt
int3
dec
arpl
gs
loop
clc
int3
dec
imul
push
inc
int
fmul
stc
push
ins
das
xor
adc
lods
test
mov
and
loope
inc
je
outs
sbb
cmp
std
shl
retf
mov
and
aad
adc
mov
int
sub
ficomp
and
pop
loope
cmc
ret
xchg
sahf
adc
pusha
daa
(bad)
out
xor
xor
or
popa
pop
mov
add
lea
mov
and
test
ror
mov
jne
dec
pop
in
cld
ret
enter
pop
push
jmp
nop
int3
call
add
dec
cwde
enter
dec
cs
clc
ficom
mov
adc
inc
mov
pushf
inc
and
push
cdq
mov
test
shl
out
mov
cmp
clc
or
outs
and
stc
cmps
push
ins
cmp
cmp
nop
test
data16
ins
stos
sub
xlat
iret
push
dec
nop
xchg
outs
ss
loopne
pop
repnz
pop
ins
jae
(bad)
(bad)
pop
out
push
push
jne
jmp
(bad)
mov
movs
es
mov
mov
adc
cmc
(bad)
pop
imul
(bad)
push
jns
jae
or
dec
jecxz
mov
clc
int3
dec
cmp
lods
push
scas
jmp
imul
popa
ds
mov
jae
sub
ins
aaa
fadd
stc
repz
test
sub
adc
lods
test
mov
and
loope
inc
je
outs
sbb
inc
aas
std
(bad)
retf
mov
and
leave
adc
mov
int
sub
ficomp
bound
sbb
stc
into
dec
pusha
cwde
outs
adc
or
mov
and
xor
or
popa
pop
mov
or
lea
push
cmp
std
shl
(bad)
dec
ins
mov
pop
jmp
nop
int3
call
or
mov
dec
fs
jmp
xchg
enter
push
sub
aam
ficomp
mov
add
movs
fsub
and
mov
test
leave
adc
jmp
je
sar
or
push
or
stc
ficomp
jbe
jmp
fnsave
int
add
stc
or
jp
push
xchg
data16
in
jo
repnz
pop
ins
jae
(bad)
leave
clc
jo
out
pop
push
jno
jg
aad
or
jecxz
popf
mov
aaa
sar
cmc
ret
pop
gs
jnp
or
loopne
in
push
jge
push
add
cmp
mov
cld
les
ds
into
cld
hlt
mov
inc
xchg
repz
sar
add
mov
inc
popf
arpl
jae
adc
inc
xor
icebp
stc
repz
lods
fwait
or
ins
das
xor
or
mov
push
lea
sbb
mov
mov
aas
stc
(bad)
retf
movs
pushf
mov
je
pop
push
jmp
mov
mov
leave
in
out
mov
bound
or
stc
into
dec
ins
cwde
call
or
mov
sub
pop
xor
adc
dec
xchg
dec
sub
sub
lea
lods
push
xor
es
aam
fidiv
push
push
inc
aad
or
mov
dec
pusha
dec
shl
or
mov
dec
pusha
dec
aad
or
mov
int3
push
pop
pop
pop
stc
(bad)
clc
mov
jbe
sub
ds
test
and
mov
mov
pop
mov
leave
adc
jmp
js
shl
or
push
or
cmc
ficomp
mov
jmp
fnsave
aad
sbb
and
fidiv
mov
jo
neg
ins
ja
(bad)
(bad)
push
out
pop
push
jno
ja
fmul
movs
fcomp
or
mov
mov
sbb
cmc
(bad)
pop
gs
jnp
or
loopne
in
push
jns
aaa
xchg
push
push
repz
inc
xchg
repz
sar
add
dec
lahf
inc
cdq
neg
addr16
(bad)
cld
lock
dec
imul
repnz
loopne
imul
sub
std
out
mov
lods
xchg
jno
xor
adc
lods
test
mov
sub
sub
mov
mov
aas
stc
fscale
retf
mov
push
pop
pop
rol
adc
nop
or
ins
pop
je
leave
in
sbb
jl
bound
or
stc
into
dec
ins
cwde
sahf
sbb
cld
or
mov
sub
pop
xor
adc
pop
nop
dec
adc
cmp
jl
push
and
es
sar
fidiv
push
pop
inc
aad
or
mov
dec
fs
aad
or
mov
dec
fs
aad
or
mov
rcl
in
add
inc
push
dec
cmp
jo
dec
and
xor
popf
mov
mov
pop
mov
leave
adc
jmp
js
shl
or
push
or
cmc
(bad)
pop
ins
mov
adc
in
fs
ins
inc
shl
and
inc
mov
push
mov
push
jmp
pop
ins
jae
(bad)
(bad)
pop
out
push
push
jge
inc
cli
mov
adc
loop
popf
inc
xor
dec
ins
mov
and
cmc
ret
pop
gs
jnp
add
loope
push
jns
test
imul
repnz
mov
dec
imul
(bad)
cld
in
mov
dec
xchg
out
ja
(bad)
out
add
mov
dec
lds
out
data16
stc
push
jno
xor
adc
lods
test
mov
pop
lea
or
jns
js
push
cmp
stc
fscale
retf
movs
pushf
mov
pop
(bad)
adc
mov
int
xor
rcr
and
stc
into
dec
ins
pushf
call
or
xor
pop
cmp
sbb
popf
mov
cwde
dec
adc
cmp
js
push
and
sar
(bad)
mov
les
rol
or
mov
dec
pusha
dec
aad
or
mov
dec
fs
shl
or
mov
push
pusha
push
loope
cld
rol
sar
dec
cmp
jl
dec
sub
mov
mov
pop
mov
leave
adc
jmp
jo
fucom
or
outs
and
enter
imul
fs
ins
inc
shl
and
push
push
push
inc
xor
arpl
jae
jmp
push
jno
inc
cli
sar
icebp
push
jns
addr16
mov
inc
aaa
fsubr
cmc
ret
pop
imul
(bad)
push
jge
ret
pop
add
mov
dec
xchg
(bad)
fdiv
ret
call
sti
fdiv
retf
in
fwait
push
cdq
jecxz
jg
retf
in
cdq
push
fld
repz
or
stc
repz
test
push
xor
adc
lods
test
mov
push
lea
sbb
mov
mov
and
fscale
(bad)
mov
push
push
pop
(bad)
adc
xchg
mov
mov
pop
jo
leave
in
pop
cmc
test
rcr
bound
sbb
stc
into
mov
pushf
call
or
xor
pop
cmp
mov
cwde
dec
adc
cmp
js
push
and
push
stc
sar
(bad)
mov
les
shl
or
mov
dec
pusha
dec
aad
or
mov
dec
pusha
dec
aad
or
mov
dec
fs
loope
cld
ror
shr
push
es
call
dec
sub
push
popf
movs
int3
mov
pop
mov
leave
adc
jmp
je
shl
or
mov
pushf
outs
and
pop
pop
stc
int3
stc
fiadd
jle
adc
in
pusha
inc
jo
shl
and
call
std
jecxz
sti
in
inc
pop
ja
(bad)
(bad)
push
repnz
push
jge
inc
out
rcr
push
ficomp
inc
inc
or
xchg
mov
(bad)
pop
gs
jnp
add
loope
push
jns
test
popf
jecxz
jg
retf
in
xchg
dec
popf
jecxz
jnp
ss
adc
iret
or
push
or
xchg
pop
rol
jmp
or
stc
push
ins
push
xor
adc
lods
test
mov
pop
lea
or
or
js
push
xor
std
(bad)
mov
push
pop
push
(bad)
adc
xchg
mov
mov
int
xor
cmc
lods
loope
pop
jl
bound
or
stc
into
mov
pushf
call
or
or
jl
cmp
mov
xchg
dec
adc
test
scas
pop
js
push
and
pop
stc
sar
ret
les
aad
or
mov
dec
pusha
dec
aad
or
mov
dec
fs
aad
or
mov
dec
pusha
pop
loope
cld
rol
sar
dec
sub
jl
dec
sub
movs
shl
leave
adc
jmp
jo
shl
or
mov
pushf
push
or
std
int3
stc
ficomp
mov
adc
in
ins
jge
dec
shl
and
call
or
into
push
ins
jo
fsubrp
(bad)
je
out
push
push
jno
inc
out
mov
pop
outs
inc
inc
inc
call
push
aam
cmc
retf
pop
gs
jnp
add
loope
push
jns
repz
push
push
pop
mov
iret
or
push
or
mov
iret
or
push
or
xchg
pop
cdq
out
(bad)
(bad)
pop
sbb
xor
pop
xor
icebp
stc
push
and
xor
adc
test
pop
lea
or
mov
mov
aas
stc
fyl2xp1
retf
mov
push
push
pop
rol
adc
mov
pop
jo
leave
in
pop
mov
jb
sbb
in
push
add
in
out
fs
add
das
cmp
mov
mov
adc
cmp
jl
push
and
sar
(bad)
mov
les
shl
or
mov
dec
fs
aad
or
mov
dec
pusha
dec
shl
or
mov
dec
pusha
pop
loope
add
inc
shr
dec
es
call
inc
sub
mov
mov
pop
mov
int
and
test
mov
xor
loopne
into
mov
pushf
outs
and
pop
psubw
cmc
(bad)
inc
imul
fs
inc
shl
and
call
or
pop
pushf
mov
dec
fdivrp
xchg
clc
je
repnz
push
jno
inc
out
mov
sub
sahf
mov
retf
(bad)
in
pop
imul
ret
push
jns
repz
or
mov
ret
xchg
leave
ds
nop
(bad)
mov
cmp
or
lahf
pop
cdq
jmp
(bad)
or
mov
and
push
or
stc
out
mov
lods
xchg
or
ins
das
xor
or
(bad)
js
lea
sbb
jns
js
push
xor
std
(bad)
movs
pushf
mov
je
pop
pop
aad
adc
test
int
jo
push
retf
hlt
lods
mov
add
fs
xor
stc
fisttp
jo
or
sahf
mov
mov
pop
jo
outs
inc
test
jae
in
push
leave
clc
cld
outs
add
add
movs
cwde
int3
mov
add
aam
(bad)
mov
rcl
ror
mov
dec
pusha
dec
aad
or
mov
dec
pusha
dec
shl
or
mov
push
pop
push
in
cld
rol
mov
cmp
jo
dec
sub
mov
mov
pop
mov
leave
adc
jmp
je
shl
or
push
or
stc
(bad)
pop
popa
mov
in
out
lods
in
fs
inc
shl
and
movs
mov
sahf
je
pop
sub
leave
or
dec
pushf
mov
sbb
inc
mov
mov
jl
ficom
jge
inc
out
mov
and
inc
dec
call
mov
pop
jns
ja
add
in
push
jns
test
pop
xchg
jmp
xchg
std
cmp
or
xchg
pop
xchg
jmp
xchg
std
and
or
lahf
bound
cs
adc
lea
inc
and
data16
pop
aaa
fadd
stc
push
and
adc
lods
test
mov
push
lea
sbb
loope
pop
js
outs
sbb
inc
and
(bad)
(bad)
mov
sub
adc
mov
cmp
or
aaa
mov
dec
call
mov
cli
(bad)
sub
cwde
mov
push
jae
(bad)
sbb
mov
je
aas
es
or
sbb
xchg
mov
cmp
dec
je
xchg
jge
inc
inc
rol
or
mov
dec
pusha
dec
aad
or
mov
dec
pusha
dec
aad
or
mov
rcl
std
enter
push
dec
ds
fsub
scas
ins
je
inc
and
push
cdq
movs
int3
mov
pop
mov
leave
adc
jmp
js
shl
or
and
stc
ficomp
mov
sbb
sub
shl
sbb
call
or
dec
nop
mov
sbb
cmp
in
scas
cmc
sti
pop
mov
pop
inc
cli
ret
je
fisubr
outs
inc
aas
dec
xchg
fidivr
pop
jns
ja
or
in
loope
push
jns
repz
or
cmps
jg
adc
add
add
lahf
bound
push
push
(bad)
mov
jmp
cmp
test
inc
and
data16
pop
aaa
fmul
std
push
ins
sub
adc
lods
test
mov
pop
mov
or
loope
pop
js
outs
sbb
cmp
cmc
(bad)
cmps
mov
adc
jmp
pop
add
dec
call
pop
jne
arpl
retf
or
mov
mov
or
mov
scas
popa
rcl
neg
stc
xchg
mov
out
(bad)
imul
fwait
mov
jno
stc
iret
push
movs
mov
mov
adc
cmp
loopne
data16
mov
(bad)
fdiv
retf
rcl
shl
or
mov
dec
fs
shl
or
mov
rcl
stc
enter
pusha
mov
add
mov
movs
dec
and
mov
test
leave
adc
jmp
je
jmp
cwde
pushf
push
or
cmc
ficomp
mov
jmp
loope
fs
ins
push
shl
and
movs
mov
sahf
or
sub
int
fisttp
mov
sbb
cmp
lea
mov
dec
rcr
mov
sub
xchg
(bad)
add
dec
pop
lahf
push
(bad)
icebp
jp
sbb
add
int
(bad)
push
jns
test
push
cmc
push
or
or
mov
shl
lahf
cmc
adc
adc
sub
sti
stos
cmc
adc
adc
mov
pop
and
pop
aaa
fadd
stc
push
ins
sub
jmp
shl
adc
jno
je
outs
adc
cmp
leave
mov
cmps
pop
bound
jle
mov
adc
xor
ror
arpl
ret
inc
mov
pop
xchg
sahf
mov
push
leave
mov
cmps
pop
aam
retf
push
int
mov
out
ret
aam
push
lds
out
popa
loopne
repz
fwait
mov
ins
add
jmp
aad
mov
sahf
sbb
sub
lds
enter
pop
inc
in
aam
idiv
dec
pusha
pop
jmp
cwde
enter
push
sub
fdiv
ficomp
mov
sbb
mov
pushf
inc
and
mov
test
shl
out
mov
xor
or
outs
and
cmc
(bad)
push
popa
test
in
cmp
cwde
movs
fnsave
shl
and
mov
pop
pop
sub
ror
dec
pusha
lods
bound
xor
icebp
scas
xor
sub
jae
ret
or
fisubr
xchg
ror
push
sbb
inc
test
or
fabs
(bad)
push
jns
repz
push
push
xor
mul
cmp
mul
cmp
repz
loope
cmp
and
mov
pop
imul
rol
stc
div
ins
and
jmp
lds
and
sub
test
cdq
jb
sbb
test
or
cmps
jmp
jbe
push
inc
imul
mov
sar
lds
mov
push
int
mov
mov
scas
popa
fcom
neg
icebp
mov
ret
in
ret
sbb
xchg
sub
aam
es
lahf
mov
pusha
sbb
sti
xor
(bad)
add
sti
cs
mov
cs
aaa
sbb
jge
inc
fiadd
int3
xchg
jns
inc
push
in
rol
dec
ins
les
pop
dec
cs
int3
lock
mov
sbb
movs
fsub
and
mov
sub
in
jmp
ins
aas
jmp
pushf
cwde
outs
and
fdiv
stos
push
popa
jl
int
cmp
pushf
test
mov
dec
ins
push
jmp
or
or
push
das
icebp
ror
dec
ins
lods
data16
cmp
sub
cmp
fisub
sub
xchg
shr
cmps
cdq
rol
cmp
clc
mov
xchg
repz
push
push
xor
repz
icebp
sbb
pop
sub
jecxz
loope
cmp
and
(bad)
jbe
(bad)
jmp
loope
es
and
test
outs
in
(bad)
popa
sub
inc
aaa
rol
cmc
div
sub
enter
mov
push
mov
adc
out
lock
mov
movs
mov
jg
pop
dec
inc
lock
fstp
jecxz
inc
jbe
push
dec
imul
adc
or
mov
mov
mov
jnp
aaa
inc
(bad)
stos
in
les
shl
loop
jne
shr
in
lahf
test
jno
fdiv
sub
lahf
mov
mov
jmp
xchg
or
repz
mov
xor
enter
fs
outs
jno
xor
aam
rol
shl
dec
and
fsubr
cmps
push
jo
jle
xor
and
push
xchg
mov
sub
call
mov
sbb
lock
dec
push
push
pop
std
fsubr
ficomp
jbe
in
xor
mov
aad
sbb
sahf
or
das
icebp
rol
sbb
jmp
dec
sub
and
icebp
rcl
and
aaa
dec
xchg
shl
cmps
test
ins
mov
fadd
push
jns
add
(bad)
js
(bad)
jmp
loope
sub
and
mov
(bad)
out
in
or
sbb
xor
jecxz
jmp
scas
lea
addr16
inc
aaa
fadd
cmc
repz
movs
lahf
add
ins
and
in
adc
lods
test
cmp
dec
enter
sub
frstor
cld
mov
mov
(bad)
fld
(bad)
jbe
pusha
fadd
push
movs
pop
jne
jmp
rcr
jbe
cmp
icebp
fmul
test
pop
jmp
lods
enter
jo
vmulsd
add
sbb
movs
js
into
jmp
(bad)
mov
jns
fucom
cs
xchg
fs
sti
xor
and
add
sti
cmp
xchg
cmp
mov
std
push
xchg
mov
sub
je
dec
adc
test
mov
cmp
sbb
and
sbb
movs
test
or
cld
add
and
pop
cmc
aam
mov
shr
not
push
(bad)
mov
push
push
das
icebp
aad
fild
lods
data16
in
mov
je
pop
xor
sbb
ins
jnp
and
xchg
shl
jg
pop
pop
cmps
mov
sbb
jge
pop
in
push
das
scas
fstp
iret
jecxz
in
or
sbb
scas
xchg
iret
out
ret
jmp
stos
cmp
jmp
jmp
stos
lea
xlat
sbb
ins
sub
fnsave
aam
cmc
test
ins
and
std
adc
movs
mov
push
jo
in
addr16
stos
dec
push
ds
sub
xlat
(bad)
(bad)
mov
dec
cld
shl
icebp
jg
fcmovnu
dec
jnp
cwde
and
out
xor
cmc
scas
pop
xor
inc
sbb
shr
into
inc
js
sub
aas
jmp
nop
movs
sahf
add
call
sar
sbb
push
in
in
test
push
es
sbb
fcmovne
xchg
ins
add
out
xor
xchg
add
sti
ss
sub
add
push
mov
adc
xchg
hlt
shr
sub
push
popf
lods
shl
xor
adc
and
adc
call
add
dec
ins
xchg
bound
add
icebp
cmps
push
jns
dec
(bad)
sti
nop
mov
push
retf
mov
and
aad
mov
adc
jmp
dec
cmp
and
nop
xchg
imul
sahf
stos
mov
and
pop
push
mov
inc
retf
adc
test
push
push
push
stos
idiv
jmp
in
jb
pop
pop
stos
cmp
jmp
sbb
pop
push
scas
mov
sbb
sbb
cmp
xchg
jmp
sti
mov
movs
lahf
add
ins
and
loope
jecxz
cdq
mov
push
loopne
fcmovnu
addr16
mov
and
dec
(bad)
ja
push
dec
jl
leave
xchg
xor
lods
cwde
stc
mov
fprem1
and
test
js
xor
cmp
stc
fsubr
(bad)
dec
fs
sub
or
sar
mov
cmp
or
mov
pop
sbb
sbb
xchg
mov
mov
sub
xor
loope
call
and
add
xchg
push
cmc
xchg
adc
repz
xchg
mov
pop
or
mov
pushf
inc
and
sbb
cdq
mov
mov
push
mov
xor
test
aas
shr
cli
movs
mov
loope
add
dec
fs
jbe
adc
in
mov
(bad)
not
dec
fs
in
icebp
adc
xchg
or
push
aas
cmc
aad
stos
inc
fs
adc
jmp
inc
cmp
shl
lods
xor
sahf
stos
mov
sub
sbb
mov
rol
cmp
aaa
adc
sbb
and
cmp
push
pop
inc
stos
mov
sbb
pop
inc
stos
mov
mov
adc
cwde
or
dec
imul
aas
dec
mov
icebp
add
push
mov
and
stos
fcmovu
and
pop
inc
push
leave
pushf
jl
push
push
in
ror
js
fs
(bad)
jmp
mov
scas
push
inc
js
xor
lods
in
inc
push
push
psubsw
stc
cli
mov
cmp
or
mov
jl
xor
adc
pop
mov
add
test
mov
ds
fcomi
jle
rcr
ffree
cs
fwait
mov
fs
imul
icebp
fwait
mov
pusha
call
xlat
push
adc
xchg
mov
mov
leave
adc
jmp
je
fchs
or
sub
or
enter
pusha
nop
push
adc
mov
je
fldl2t
xor
test
ror
in
rcl
mov
and
std
cmps
inc
fs
or
inc
cdq
push
cmp
sbb
mov
aas
jne
add
dec
call
sub
rcpps
daa
ret
push
movntps
dec
jmp
xor
mov
pop
(bad)
adc
stos
mov
adc
xchg
mov
mov
imul
xchg
mov
fidivr
add
call
imul
push
bound
push
and
pop
add
mov
sub
sar
xlat
dec
ins
mov
add
or
movs
pushf
mov
inc
(bad)
and
cwde
test
cmps
push
inc
js
xor
xor
fiadd
nop
push
or
in
(bad)
std
into
mov
mov
das
sar
out
xor
in
sbb
push
nop
dec
and
push
cdq
test
mov
inc
cwde
dec
adc
mov
movs
push
xor
jmp
nop
xchg
aam
sub
lahf
mov
mov
out
popa
in
call
mov
push
(bad)
repz
sbb
inc
adc
xor
mov
and
shl
or
push
or
in
cmc
rol
nop
bound
lods
in
push
jmp
rol
in
int
(bad)
mov
and
std
cmps
pop
push
cmp
popf
mov
mov
cdq
pop
cmp
sbb
movs
add
dec
mov
and
mov
into
sub
pop
push
cmps
sahf
mov
or
(bad)
and
add
cmps
sbb
xchg
mov
mov
adc
adc
xchg
mov
mov
push
dec
and
mov
jp
js
mov
mov
sbb
test
vpsubq
arpl
xor
mov
test
add
or
cmps
(bad)
mov
add
push
mov
lods
xchg
add
dec
daa
in
ror
movs
pushf
ror
stc
and
nop
mov
je
xor
movs
loope
inc
js
outs
and
shl
dec
ins
cwde
sahf
adc
or
movs
mov
leave
in
sbb
push
test
adc
push
popf
mov
xchg
dec
and
sub
test
mov
cmp
push
adc
fmul
jnp
(bad)
popa
hlt
call
mov
mov
cld
clc
adc
jp
jo
int
xor
mov
xor
or
push
or
enter
imul
push
jmp
rol
in
or
bound
cmc
stos
pop
push
cmp
popf
mov
(bad)
js
xchg
pop
cmp
sbb
mov
and
sbb
or
test
inc
fisub
jg
pop
push
mov
mov
add
ret
push
add
lds
jle
add
adc
daa
js
mov
mov
pop
jle
pusha
xchg
mov
out
adc
xchg
mov
repnz
cmp
sub
call
imul
aad
pop
xchg
push
cs
xor
shr
pop
fwait
(bad)
ins
and
jo
inc
sub
mov
test
sub
aad
ret
mov
sub
(bad)
sbb
mov
int
xor
(bad)
pop
jo
jb
sbb
stc
ret
cwde
outs
adc
or
mov
and
sbb
lods
cmp
sbb
popf
mov
mov
and
sub
cdq
mov
xchg
dec
sub
mov
scas
gs
cwde
jbe
or
push
movs
fistp
xchg
popa
ja
(bad)
popa
lock
lea
out
repnz
enter
in
arpl
in
in
add
xchg
adc
or
dec
cwde
cwde
outs
and
stc
ficomp
jbe
adc
in
ins
jno
dec
(bad)
and
xchg
je
pop
pop
loope
or
push
sub
fyl2xp1
stos
pop
ins
lods
jle
xor
xchg
mov
xchg
pop
cmp
adc
mov
and
fdiv
std
arpl
addr16
ja
xorps
das
ret
push
or
data16
jge
push
mov
daa
pop
jmp
mov
out
add
xchg
mov
mov
or
add
sub
call
cdq
sub
jge
iret
mov
cdq
jae
test
in
jae
test
es
xor
or
ins
inc
mov
aaa
lea
movs
push
and
add
mov
push
push
pop
(bad)
adc
mov
pop
jo
int
sub
cmps
push
inc
sub
dec
pop
in
cmc
ret
xchg
bound
add
aad
add
mov
sub
or
or
js
xor
test
mov
push
mov
adc
sbb
dec
xchg
dec
and
sub
cdq
mov
cwde
dec
and
mov
cmps
loope
mov
out
adc
leave
stos
test
jmp
rcl
les
cmp
in
lock
dec
push
push
pop
std
fdiv
ficomp
jb
in
cmp
test
ins
dec
shl
and
lods
or
je
pop
daa
loope
or
bound
xor
lods
icebp
scas
pop
ins
test
or
push
mov
sbb
rcl
stc
std
and
ret
cmps
sub
adc
mov
sub
mov
pop
popa
xchg
mov
repnz
daa
ins
sahf
mov
mov
psadbw
call
or
sahf
mov
mov
jne
sbb
in
and
iret
xor
cmp
lds
mov
(bad)
push
or
call
jno
sub
in
inc
jo
push
cmp
stc
fscale
retf
mov
and
lds
mov
shr
jecxz
test
stos
push
js
jg
adc
in
ret
xchg
sub
pmullw
std
cli
mov
xor
(bad)
out
nop
mov
das
leave
loopne
sbb
pop
sbb
sbb
xchg
mov
mov
and
mov
mov
cmp
sbb
push
mov
pop
or
fcomp
mov
scas
lea
out
pop
shr
push
lds
rcr
int3
int3
and
push
in
pop
in
int3
and
inc
pusha
nop
cmp
pop
icebp
shr
ficomp
inc
int
xor
mov
dec
ins
push
shl
sbb
sahf
je
push
sub
leave
or
dec
nop
mov
aas
lea
mov
setne
lea
adc
mov
sub
stc
jmp
lds
jae
adc
sahf
mov
add
ret
pop
or
mov
add
imul
or
sahf
mov
mov
mov
sub
cmp
cmp
mov
mov
or
jge
cdq
sub
loopne
jmp
push
popf
popf
pop
ds
in
test
mov
xor
cmovno
or
(bad)
ficom
lea
or
pop
mov
mov
and
(bad)
(bad)
mov
and
or
and
(bad)
out
mov
js
cmp
fsubr
retf
xchg
sub
add
(bad)
std
into
dec
push
pusha
aas
fxtract
or
movs
pushf
mov
or
sbb
test
mov
das
xor
mov
xchg
sbb
and
xchg
mov
test
sbb
adc
push
sub
call
lods
or
popa
ins
xchg
into
(bad)
call
int
or
loopne
adc
sub
mov
push
les
pop
mov
in
cmps
push
jno
dec
(bad)
sti
nop
mov
push
retf
mov
sub
std
ror
dec
pusha
mov
sbb
cmp
lea
mov
or
push
lea
xor
adc
mov
sub
std
fbstp
mov
pop
mov
mov
add
ret
pop
pop
xchg
mov
mov
mov
cmp
mov
push
cmp
stos
cmps
mov
mov
mov
or
les
xchg
and
adc
lods
jae
xchg
ret
and
dec
pop
les
leave
mov
push
mov
sbb
loope
pop
js
push
cmp
stc
iret
mov
lods
xchg
or
or
mov
push
push
out
mov
mov
xor
jmp
outs
and
stc
into
dec
pusha
cwde
sahf
sbb
hlt
or
mov
sub
call
mov
das
int
sbb
lods
cmp
xor
mov
xor
test
int
sbb
lods
cmp
in
jmp
mov
stos
pop
mov
stos
cdq
sub
call
dec
leave
sbb
loope
push
in
out
mov
fs
loope
sbb
movs
pushf
rcr
rol
data16
jmp
dec
and
and
lods
test
mov
lea
xor
adc
mov
mov
aaa
fsubr
std
ret
dec
arpl
inc
addr16
or
sahf
mov
add
(bad)
xor
or
mov
mov
mov
mov
mov
push
cmp
mov
adc
cmps
sub
xchg
push
sbb
xor
hlt
(bad)
stc
xchg
daa
xor
pop
adc
(bad)
das
adc
sbb
sbb
push
test
adc
cmp
cmp
cmc
test
lods
sahf
or
push
das
in
ror
js
fs
fyl2xp1
and
pushf
mov
js
leave
in
sbb
test
rcr
mov
sbb
cmc
ret
xchg
outs
sub
enter
cwde
movs
xchg
add
cld
or
xchg
add
jo
int
adc
mov
and
sbb
lods
cmp
shl
out
lods
test
das
shr
loop
mov
(bad)
add
jle
pop
inc
fwait
call
leave
mov
daa
sub
fimul
ret
out
movs
int
push
stc
sub
cmp
pop
in
rcl
or
push
aas
std
sar
stos
inc
fs
sbb
cmp
test
popf
dec
and
and
mov
pop
test
enter
mov
mov
aaa
shl
cmc
(bad)
pop
js
lahf
pop
or
imul
xchg
add
(bad)
or
push
call
sub
call
cmp
mov
mov
cmp
sub
scas
mov
pop
and
and
xchg
sbb
popf
mov
mov
xor
dec
adc
test
fstp
pop
mov
int3
in
or
lods
mov
cmp
cmp
and
test
mov
cmp
movs
cmc
fisttp
test
and
ror
mov
pop
pusha
push
(bad)
sbb
mov
dec
jo
int
xor
mov
jbe
adc
in
ret
xchg
sub
add
sar
dec
fs
call
or
mov
sub
shr
out
test
and
call
mov
daa
shr
out
mov
sub
shr
loop
mov
xor
hlt
or
fs
test
sub
lahf
xchg
mov
or
dec
xchg
daa
xchg
stos
adc
fmul
cdq
outs
inc
pop
sti
test
ins
dec
(bad)
and
xor
push
in
or
xchg
add
dec
aaa
mov
stc
stos
inc
fs
aas
cdq
mov
cdq
pop
cmp
sbb
mov
pop
test
int3
sbb
mov
sbb
ins
or
std
cmc
retf
push
gs
imul
inc
(bad)
minps
mov
daa
(bad)
sbb
pop
jae
sub
xchg
sbb
xchg
sbb
sub
and
stos
mov
add
and
mov
nop
das
xor
cmp
movs
mov
inc
add
or
mov
pop
test
sbb
or
jo
bound
icebp
fisttp
test
sub
lds
xchg
or
adc
mov
shr
jecxz
test
stos
push
jl
jg
adc
icebp
fiadd
nop
push
or
stc
into
dec
fs
outs
sub
pop
aas
ror
add
mov
mov
aas
(bad)
add
mov
in
adc
movs
xor
vmovups
movs
sub
clc
or
xchg
adc
lock
dec
push
pop
dec
xlat
sti
stc
mov
pop
addr16
cwde
clc
sar
stc
jnp
pop
dec
xchg
pushf
or
pop
shl
and
lods
test
xchg
or
pop
loope
adc
mov
mov
das
mov
stc
cmps
pop
push
cmp
popf
mov
cdq
push
cmp
sbb
mov
push
test
int3
in
or
dec
xchg
mov
adc
imul
push
popa
cdq
imul
inc
(bad)
or
fst
pop
jmp
add
and
xchg
mov
mov
add
and
scas
mov
pop
das
and
sub
and
stos
mov
(bad)
sub
xchg
mov
sahf
hlt
sbb
sub
xchg
or
popf
sub
movs
lea
push
xor
shr
sub
cmp
mov
test
das
loope
add
mov
and
adc
lods
or
fs
push
jmp
test
mov
inc
je
leave
in
sbb
inc
mov
adc
cmc
ret
nop
sub
or
sar
dec
ins
cwde
sahf
adc
clc
add
mov
cmp
shl
or
mov
cmp
or
mov
cmp
clc
add
push
or
in
(bad)
std
into
dec
push
push
out
cld
(bad)
in
lods
dec
inc
(bad)
mov
sbb
sbb
fcomi
fnstsw
fs
hlt
and
(bad)
mov
pop
pop
daa
stc
leave
or
dec
nop
mov
sbb
inc
cmp
ins
lods
jle
xor
xchg
mov
xchg
pop
xor
sbb
movs
(bad)
lds
(bad)
in
add
imul
add
icebp
icebp
retf
push
jge
jg
or
rcl
sahf
icebp
test
mov
push
mov
lahf
mov
mov
and
sub
and
mov
and
stos
mov
and
stos
mov
xor
adc
jno
adc
vmovntdq
and
push
cmp
sbb
xchg
(bad)
int
pusha
dec
lea
add
in
inc
jo
push
cmp
stc
(bad)
retf
mov
sub
leave
or
call
and
out
mov
jl
cmp
or
mov
add
add
and
cmp
in
icebp
into
dec
fs
push
add
std
(bad)
mov
pushf
xchg
adc
enter
pushf
mov
xor
enter
nop
pushf
push
add
std
into
dec
fs
outs
and
stc
ret
xchg
cmp
icebp
mov
bound
adc
pop
add
sub
add
mov
das
stc
int
fisttp
mov
sbb
cmp
lea
mov
or
inc
lea
sbb
movs
test
xchg
add
add
dec
cdq
lods
imul
imul
pop
jns
dec
xor
jnp
call
push
xchg
and
xchg
mov
and
cmps
mov
and
mov
cmp
cmps
cmp
daa
cmp
cmps
cmp
sub
cmp
hlt
mov
mov
add
add
movs
xchg
mov
or
push
xor
adc
test
pop
lea
or
jge
js
push
cmp
cmc
(bad)
push
daa
loope
stc
repz
lds
test
adc
push
aas
(bad)
mov
sbb
je
fstp
repnz
push
jl
es
and
xor
add
mov
or
adc
and
stc
into
dec
fs
outs
sub
sar
dec
fs
outs
sub
sar
dec
fs
outs
sub
enter
pusha
xchg
and
stc
rol
jle
sbb
aam
mov
mov
cmp
mov
imul
imul
je
fisttp
mov
mov
fstp
icebp
aad
rol
lods
data16
in
mov
sub
sub
xchg
mov
lea
sbb
mov
daa
(bad)
cmc
add
outs
sub
imul
push
jns
jg
add
idiv
add
sahf
movs
mov
xor
mov
and
lods
or
pop
(bad)
cmps
aaa
movs
and
push
mul
(bad)
movs
jae
ds
repz
aas
aam
scas
ret
pop
inc
pop
not
aas
ror
sub
cmp
or
mov
mov
or
ss
add
mov
and
xor
adc
test
push
lea
adc
aas
cmp
cmp
icebp
test
lods
xchg
cmp
repz
push
sbb
xchg
mov
push
adc
fwait
adc
sub
dec
sbb
mov
push
mov
mov
mov
hlt
mov
or
mov
xchg
push
or
stc
ret
xchg
bound
or
(bad)
stc
ret
xchg
and
psubw
cmc
ret
xchg
cmp
in
rcr
jb
adc
(bad)
fucom
xor
mov
repz
dec
jl
shr
cmc
inc
imul
xchg
sbb
inc
aaa
cmc
fscale
stos
inc
pusha
test
aaa
cdq
lods
in
mov
je
dec
cmp
and
lods
test
(bad)
jo
mov
sbb
mov
aaa
fdiv
stc
repz
gs
pop
in
(bad)
push
jns
dec
cmp
push
fisttp
push
jge
cs
pop
inc
pop
not
aas
ror
push
ds
mul
ret
push
inc
pop
jmp
retf
push
inc
pop
call
inc
fmul
pop
inc
pop
(bad)
fidivr
fmul
push
inc
pop
sub
adc
mov
or
std
jmp
cdq
mov
or
jno
xor
adc
lods
test
mov
and
and
popf
mov
mov
adc
cmp
lea
popf
jmp
pushf
or
xchg
push
jne
pushf
xchg
data16
in
pop
faddp
inc
fwait
push
sub
xor
cmc
xchg
dec
push
ss
pop
out
jno
pusha
mov
push
movs
xchg
and
mov
aam
adc
mov
jle
sbb
cmc
ror
push
add
aam
rol
nop
push
add
icebp
ficomp
mov
sbb
in
push
jo
jae
loope
out
lods
fnstsw
shr
sub
nop
mov
xchg
xchg
aaa
xor
inc
jns
jg
jp
jl
shr
lds
fisttp
inc
inc
and
cmp
push
cmp
popf
movs
loope
fs
cdq
push
cmp
sbb
mov
pop
test
xor
adc
mov
mov
sbb
std
inc
ja
or
in
leave
jmp
inc
cmp
push
fwait
sub
stc
sbb
sbb
(bad)
push
inc
pop
repz
imul
inc
pop
repz
ror
pop
dec
pop
sti
sar
fmul
dec
push
push
sti
(bad)
aas
fmul
pop
push
pop
out
aas
enter
movs
ja
push
fnstenv
fnsave
inc
adc
add
repz
lods
lahf
add
or
cmp
cmp
sar
sub
xor
in
jmp
outs
mov
jg
xor
hlt
adc
daa
repnz
test
pop
test
sub
inc
imul
push
mov
lahf
cmp
or
arpl
push
cld
test
add
inc
and
scas
pushf
mov
and
dec
cmps
mov
mov
mov
sbb
jmp
jb
adc
test
cmps
push
jno
jp
jmp
(bad)
shl
jmp
mov
mov
inc
ins
pop
fscale
and
mov
sti
pop
std
clc
jnp
jb
dec
lock
(bad)
fcmovnb
imul
mov
movs
jle
xor
(bad)
cmp
sbb
mov
push
mov
int3
in
or
imul
cmp
std
cmc
(bad)
pop
imul
ret
push
jns
inc
cmp
push
fwait
and
icebp
pop
jle
jmp
fmul
pop
dec
pop
out
aas
enter
movs
jnp
push
pop
sti
(bad)
aas
int3
mov
push
dec
jecxz
aas
les
pop
push
pop
out
inc
enter
movs
jnp
push
dec
jecxz
aas
(bad)
imul
push
sub
fmul
cdq
pop
add
xor
movs
cmc
div
ins
daa
int3
std
or
movs
lea
push
cmp
sbb
xchg
(bad)
int
push
or
shl
adc
jns
gs
(bad)
test
cmp
outs
dec
adc
dec
pmulhw
leave
ret
dec
js
xchg
or
pop
push
shl
adc
movs
test
xchg
jo
push
inc
mov
ja
jecxz
nop
stos
jle
mov
push
sub
ins
stos
mov
pop
cs
inc
and
xor
movs
in
push
jne
jp
in
out
mov
jl
shr
out
mov
jo
fxam
sub
mov
shl
and
xchg
push
inc
xchg
and
jp
dec
lock
loop
imul
or
je
loope
lea
movs
inc
sub
sub
xchg
mov
xchg
pop
xor
adc
movs
add
sub
jmp
mov
adc
ins
psubsb
icebp
iret
pop
imul
ret
push
jns
inc
cmp
jmp
dec
jecxz
das
les
dec
push
push
out
inc
enter
shl
push
push
out
aas
enter
sar
push
inc
jmp
aas
hlt
neg
fcmovbe
arpl
inc
out
inc
neg
rcr
arpl
inc
xlat
into
inc
lock
(bad)
aam
inc
pop
inc
sti
into
inc
xchg
loope
push
mov
sub
adc
test
sub
loope
out
xchg
mov
push
xor
leave
mov
ins
in
xor
into
sub
test
mov
mov
js
xchg
push
add
aad
retf
mov
push
pop
pop
jmp
test
xchg
fs
fscale
and
nop
mov
ins
pop
fprem1
sbb
inc
xchg
(bad)
sub
sbb
mov
popa
scas
fs
push
das
clc
cmp
inc
adc
movs
add
or
scas
push
jne
jae
in
out
mov
je
(bad)
out
pushf
mov
ins
inc
fucomp
and
xchg
mov
mov
fs
aad
adc
call
adc
outs
test
xchg
out
outs
dec
retf
ja
pop
inc
and
imul
or
ror
cmp
adc
movs
test
xchg
add
jge
vmaskmovdqu
loope
test
ins
add
shr
push
jns
jg
or
loope
push
jns
ja
or
fadd
or
bound
xchg
inc
jmp
inc
lock
fcmovbe
arpl
inc
jmp
inc
shl
(bad)
fsubr
pop
inc
out
inc
neg
(bad)
fsub
pop
inc
xlat
retf
repnz
fcmovbe
imul
sar
inc
clc
repnz
(bad)
outs
dec
inc
xlat
cli
inc
cld
repnz
(bad)
outs
dec
bound
cli
inc
pushf
cli
fdiv
pop
sub
cdq
or
mov
popf
xchg
sbb
ins
daa
fdivr
add
mov
and
and
jmp
lds
shr
push
arpl
sti
std
hlt
pushf
jo
int
cmp
lods
ror
data16
inc
cmp
fyl2xp1
(bad)
sub
lds
fstp
push
push
in
leave
adc
xchg
push
sti
nop
mov
ins
sub
call
fnsave
push
xor
xor
and
push
stos
scas
lds
leave
cmps
push
loope
jmp
mov
mov
dec
jo
fldln2
and
xchg
mov
mov
shl
and
mov
pop
pusha
das
loope
or
xchg
or
das
cdq
leave
or
hlt
mov
mov
mov
aam
pusha
dec
mov
sbb
pop
mov
xor
adc
mov
and
(bad)
icebp
std
sti
inc
popa
test
pop
call
jns
jae
or
in
loope
push
jns
ja
or
cld
ret
imul
dec
sar
dec
cld
repnz
fcmovbe
outs
dec
inc
xlat
cli
inc
cld
repnz
fcmovbe
outs
dec
inc
shl
inc
clc
(bad)
(bad)
(bad)
outs
dec
inc
(bad)
inc
clc
repnz
fcom
outs
inc
(bad)
inc
clc
repnz
fsubr
outs
jno
cli
inc
hlt
repnz
fsubr
jb
(bad)
inc
clc
cli
fcomp
(bad)
retf
in
push
stos
and
fisttp
mov
iret
inc
popa
popf
imul
sti
mov
mov
or
ins
push
xor
adc
mov
push
gs
arpl
lds
fmul
hlt
ret
xor
mov
movs
push
cmp
icebp
aad
fisttp
data16
cmp
(bad)
add
mov
inc
mov
adc
in
jo
push
push
jmp
or
js
push
sti
pop
mov
mov
sbb
repz
cwde
scas
outs
cmp
push
xchg
jo
fucomp
sub
xchg
mov
ins
dec
(bad)
sbb
mov
fs
aad
sbb
mov
pop
push
pop
loope
or
xchg
or
push
and
xchg
pop
outs
mov
arpl
inc
add
inc
xor
movs
ficomp
fs
icebp
pop
cmp
sbb
mov
pop
test
enter
mov
mov
sbb
jno
fdivr
stc
repz
popa
movs
jae
add
in
(bad)
push
jns
jg
or
loope
push
jns
mov
sqrtps
into
add
(bad)
inc
clc
not
(bad)
imul
(bad)
inc
clc
repnz
fsubr
outs
inc
(bad)
inc
clc
neg
(bad)
push
jae
jno
cli
inc
in
fsubp
rcl
jbe
(bad)
jmp
push
jg
jno
jmp
push
jnp
jno
jmp
imul
cmp
mov
pop
jne
outs
adc
pop
aaa
fdiv
stc
push
imul
mov
pop
outs
inc
fisttp
(bad)
add
aas
lea
mov
aaa
test
cmc
fisttp
movs
mov
lods
jns
xlat
leave
lock
retf
jl
fucom
pop
ret
lock
cmp
iret
mov
pop
push
push
(bad)
and
xchg
mov
push
add
sub
sbb
inc
or
(bad)
or
xchg
mov
mov
aad
sbb
xchg
pop
daa
loope
or
xchg
or
or
mov
mov
add
dec
aaa
icebp
fprem1
lahf
dec
imul
outs
pop
mov
xor
lods
into
in
jae
lahf
mov
cmp
sbb
mov
and
jecxz
xchg
mov
sbb
jno
sar
stc
mov
add
leave
jmp
jae
or
loope
inc
jl
mov
xor
dec
jecxz
push
jnp
jno
jmp
push
jg
jge
jmp
push
jnp
jno
jmp
push
jg
jge
out
loopne
(bad)
fcom
jle
iret
out
loopne
(bad)
fcom
jle
ret
out
loopne
(bad)
out
push
ja
jns
out
loopne
(bad)
fdivr
jns
or
clc
ins
loop
pop
jne
imul
repz
test
sub
icebp
or
mov
and
daa
xchg
jno
sub
lock
and
sub
cmp
cmp
sar
rcl
(bad)
cmp
push
push
aas
test
xor
fwait
adc
sbb
mov
not
push
mov
lea
mul
pop
fs
jmp
imul
cs
add
ins
adc
lds
or
mov
push
pusha
push
loope
adc
mov
push
push
pop
loope
or
xchg
or
push
and
fld
data16
inc
aas
(bad)
(bad)
scas
inc
pusha
test
das
imul
cmp
dec
mov
pop
enter
movs
test
xchg
add
add
addr16
imul
pop
jns
jg
add
loope
push
jns
jae
or
loopne
in
shl
xchg
mov
jmp
jp
retf
out
loopne
(bad)
fcom
jp
retf
out
in
(bad)
(bad)
out
push
ja
jge
out
loopne
(bad)
fcom
jp
aaa
out
sbb
(bad)
jmp
adc
sti
(bad)
jmp
adc
call
jmp
push
dec
sbb
(bad)
jmp
out
sbb
pop
mov
jnp
or
call
imul
imul
mov
xchg
aas
adc
mov
sbb
mov
sub
sub
xchg
shl
pop
ds
jmp
in
adc
push
int
mov
cmp
pop
jl
xor
nop
adc
adc
jmp
fnstsw
sar
pop
push
in
int
ret
dec
test
mov
pop
jmp
push
je
dec
and
and
xchg
retf
sub
mov
pop
pop
daa
in
ror
movs
pushf
rcr
leave
or
mov
mov
aaa
cmc
fscale
fild
test
aaa
lea
movs
jle
cmp
jbe
les
sub
mov
retf
pop
xchg
dec
or
sub
lea
jmp
mov
aas
(bad)
cmc
std
sti
dec
imul
retf
push
jns
jnp
add
loope
push
jns
ja
or
loopne
loope
push
sahf
mov
aaa
push
dec
sbb
pop
jle
js
push
dec
sbb
(bad)
jmp
adc
sti
(bad)
jmp
adc
sti
(bad)
jmp
adc
call
out
rcr
mov
dec
sbb
shr
rcr
mov
adc
sti
fsubrp
fcomp
mov
push
dec
sbb
shr
rcr
xchg
adc
mov
imul
iret
inc
ins
cdq
imul
retf
test
xchg
cmps
mov
aad
inc
cmp
aad
add
mov
cmp
sbb
mov
cmp
adc
xor
adc
xchg
sbb
push
cmp
push
(bad)
in
sbb
or
out
jmp
sub
js
cmp
or
call
or
bound
pop
dec
daa
int
std
add
push
dec
ficomp
mov
jl
sbb
loope
or
mov
mov
and
fld
rol
lods
data16
inc
aas
mov
cmc
scas
pop
push
cmp
sub
and
sub
xor
add
xchg
jg
add
and
sti
mov
mov
sbb
ins
cmp
cmc
stc
inc
mov
pop
call
jns
jg
or
loopne
loope
push
jns
jae
or
call
mov
push
adc
out
repnz
mov
push
dec
sbb
shr
rcr
xchg
dec
sbb
shr
rcr
xchg
dec
sbb
shl
fcomp
xchg
dec
add
(bad)
rol
xchg
push
sti
fdivp
rol
xchg
push
sti
(bad)
rol
xchg
ins
cmp
dec
adc
fdivp
fadd
mov
push
dec
jo
fnstenv
jnp
or
pop
in
shr
inc
jno
jae
or
fdiv
stc
ret
movs
outs
xchg
scas
mov
mov
inc
sbb
icebp
mov
mov
pop
xchg
mov
(bad)
js
xchg
dec
sub
rol
les
cld
daa
dec
out
xor
adc
sbb
adc
out
in
cmp
sbb
int
mov
cmp
sbb
add
or
jecxz
in
sub
cmp
test
cmp
aad
retf
mov
sub
in
pop
ins
mov
xchg
mov
sbb
scas
jne
pop
inc
sub
int
fisttp
mov
add
inc
aas
cmc
fyl2xp1
fild
lods
data16
in
mov
adc
cmp
cdq
lods
loope
ins
je
dec
and
and
hlt
fstp
ss
or
jg
xchg
jmp
add
and
or
dec
mov
sbb
jno
sar
stc
mov
paddsb
jmp
jg
or
in
push
jns
ja
or
xlat
mov
or
ins
daa
push
dec
add
fdivp
aam
outs
mov
push
dec
adc
(bad)
fadd
xchg
push
sti
(bad)
aam
outs
xchg
push
sti
(bad)
aam
push
push
out
cli
ror
and
dec
add
(bad)
cli
int3
dec
push
and
push
or
(bad)
test
push
fs
push
dec
or
retf
inc
call
add
int
add
test
add
(bad)
inc
jne
outs
sub
pop
aaa
rol
in
idiv
add
sub
aad
xor
adc
(bad)
jo
mov
sbb
xlat
lds
ins
mov
sbb
xor
sbb
adc
out
test
xor
push
cmp
jo
int
mov
xor
(bad)
push
cmp
push
shl
jmp
push
add
in
xor
std
ror
mov
mov
add
add
in
mov
mov
adc
hlt
loopne
repnz
cmc
aad
fisttp
data16
cmp
lea
test
cmp
jo
jbe
add
fnstcw
cmp
sbb
jo
int
cs
movs
ja
xchg
and
or
cmp
push
sti
dec
imul
iret
pop
jns
jg
add
loope
push
jns
jae
or
loopne
in
push
jns
mov
or
sbb
dec
leave
dec
call
or
(bad)
test
push
fs
push
push
or
(bad)
test
xchg
and
push
or
(bad)
cli
ror
and
dec
add
(bad)
cli
int3
dec
call
or
(bad)
cli
int3
inc
data16
sub
dec
cmp
(bad)
cli
aam
outs
call
(bad)
cli
les
mov
or
(bad)
cli
enter
pusha
das
add
out
cli
fsubr
jno
je
popf
rol
jns
arpl
icebp
inc
popf
mov
sbb
inc
(bad)
inc
call
pop
xor
adc
lahf
je
mov
sbb
xlat
jno
pop
(bad)
js
icebp
push
adc
fsub
xor
(bad)
jl
xor
push
xor
je
fldpi
and
adc
push
ds
adc
out
in
xor
(bad)
adc
adc
push
shl
mov
popa
dec
xlat
dec
jo
outs
add
inc
aas
cmc
fprem1
fist
push
mov
jmp
in
nop
fs
movs
js
dec
pop
mov
test
cmp
pusha
test
xor
je
dec
and
ror
cmp
sbb
aam
lds
and
add
hlt
jae
movs
or
xchg
inc
cmp
sti
inc
imul
iret
pop
jns
jae
or
loope
push
jge
jae
or
loope
movs
jae
jae
test
jecxz
sti
aam
bound
or
(bad)
cli
enter
pusha
pop
or
out
test
outs
mov
or
(bad)
cli
fadd
call
(bad)
cli
enter
adc
push
cmp
ret
dec
push
adc
dec
cmp
(bad)
(bad)
fmul
cmps
push
out
dec
dec
data16
adc
push
cmp
rol
int3
dec
push
fs
ds
cmp
ret
ja
cmps
test
cmc
sbb
in
loopne
push
jns
ja
or
loopne
jmp
mov
aas
jg
and
xchg
arpl
les
add
mov
pop
sbb
fstp
pusha
test
or
in
pop
xor
cmp
cmc
leave
in
sub
adc
sbb
sti
and
adc
push
xor
adc
jecxz
icebp
xor
test
es
je
xor
in
stos
inc
cwde
lds
xor
mov
test
out
(bad)
mov
aad
jge
jecxz
mov
movs
jp
xor
in
push
jo
jb
add
pop
xchg
mov
xchg
push
cmp
sbb
lods
test
cmp
xor
adc
mov
mov
paddb
movs
mov
push
cmp
xor
aad
loop
popa
popf
ja
or
loopne
in
push
jns
jg
or
loope
push
jns
jae
or
loope
xor
xchg
addr16
mov
inc
dec
push
adc
push
cmp
sar
ror
adc
push
cmp
(bad)
(bad)
ror
cmps
push
out
inc
dec
push
adc
dec
cmp
sar
ror
xchg
pop
cmp
jecxz
push
les
cmp
jecxz
add
dec
data16
xchg
sbb
push
xor
ret
dec
data16
fs
ds
cmp
into
add
mov
stos
nop
sbb
push
xor
into
push
enter
and
xor
in
cdq
retf
jns
jae
or
jmp
outs
mov
dec
imul
sub
mov
mov
add
movs
xchg
mov
daa
fsubr
cmc
xchg
gs
pop
lock
pop
xor
adc
aam
ror
mov
hlt
lahf
inc
out
and
adc
sbb
sbb
jmp
icebp
xor
xchg
cmp
jo
shr
in
sub
xchg
out
xor
leave
test
and
push
loope
mov
movs
or
cmp
js
pop
and
cmp
dec
dec
bnd
cdq
add
mov
sub
xor
cdq
mov
mov
cmp
rol
xor
sbb
mov
pop
and
push
and
adc
pop
(bad)
test
sbb
out
cdq
popf
ja
add
in
push
jns
ja
or
in
loope
push
jge
jae
or
loope
outs
into
add
pop
sbb
xor
ret
dec
data16
xchg
pop
ds
xor
ret
mov
stos
fs
ds
sub
ret
mov
stos
fs
ds
cmp
ret
mov
stos
xchg
sbb
push
xor
ret
dec
data16
xchg
add
push
and
mov
mov
mov
and
into
push
les
es
and
mov
mov
mov
and
into
add
mov
mov
pop
sub
out
retf
mov
mov
pop
sub
pop
leave
xchg
mov
and
push
pop
in
loope
pop
jne
jg
or
popf
lods
sbb
mov
jmp
xchg
cdq
fwait
add
std
aaa
aad
fld
sub
sub
mov
sar
or
ja
sub
or
clc
mov
jo
ftst
pop
retf
sub
movs
movs
or
inc
push
mov
jle
adc
in
pop
je
pop
and
xor
mov
stos
test
cdq
(bad)
push
cmp
sar
cmp
sbb
test
push
mov
sbb
mov
daa
enter
push
xchg
mov
and
cmp
test
sbb
sbb
cdq
jae
add
in
push
jns
ja
or
in
loope
push
jns
jae
or
aaa
ffree
add
pop
sub
jecxz
add
mov
es
sub
into
push
shl
push
and
into
or
mov
mov
pop
sub
out
into
push
shl
push
and
retf
mov
mov
add
push
sub
(bad)
push
int3
mov
sub
out
(bad)
or
mov
es
sub
(bad)
or
mov
mov
sub
ret
mov
es
sub
ret
mov
es
sub
les
js
add
xor
loopne
in
pop
jne
ja
or
xchg
sub
std
or
pusha
jmp
ins
cdq
xchg
add
or
sbb
(bad)
fst
push
mov
ror
adc
out
cdq
rcr
inc
xchg
push
xor
std
jecxz
fs
push
pop
push
aaa
xchg
fxam
and
adc
inc
scas
jmp
clc
pop
jp
adc
pop
cdq
mov
stos
push
inc
popf
inc
and
or
loop
popf
pop
xchg
lods
ror
mov
and
and
lods
mov
mov
pop
cmp
adc
mov
sub
adc
movs
mov
and
loope
jecxz
ins
lods
xchg
and
xor
test
ss
xor
dec
fptan
jmp
push
pop
loopne
in
push
jns
jae
or
loope
push
jns
push
int
push
iret
dec
cmps
lods
int3
mov
sub
jecxz
push
sar
pop
sub
ret
mov
sub
jecxz
push
sar
pop
sub
ret
mov
sub
out
(bad)
push
int3
mov
es
and
ret
mov
es
push
out
into
push
les
sub
jecxz
push
les
es
pop
out
ret
mov
pop
push
pop
jecxz
push
les
push
pop
push
jecxz
push
les
xchg
mov
or
test
xchg
jae
add
in
lods
call
add
jnp
lea
daa
fdiv
add
mov
mov
xchg
sub
fcom
xor
dec
cdq
sub
adc
mov
pop
test
enter
mov
pop
test
adc
int
fs
lea
adc
rcl
shr
add
dec
xchg
inc
and
and
cmc
mov
(bad)
mov
popf
push
mov
jl
imul
mov
(bad)
je
mov
xor
or
mov
sub
or
mov
and
fdiv
std
sti
ins
popa
test
pop
test
cmps
mov
adc
(bad)
push
imul
ret
push
jns
ja
or
in
pop
ja
pop
out
push
pop
jecxz
push
les
pop
pop
push
out
(bad)
push
les
push
push
pop
out
into
adc
mov
pop
pop
sub
ret
mov
sub
jecxz
push
les
push
pop
pop
jecxz
push
les
and
jmp
push
shl
pop
push
out
retf
mov
push
pop
pop
out
into
adc
mov
push
pop
push
out
into
push
sar
pop
push
out
ret
mov
push
pop
push
jmp
push
int3
cmps
mov
cmp
pop
pop
in
imul
jae
or
in
movs
jle
mov
jbe
inc
pop
xor
jmp
std
repz
xchg
mov
jo
gs
push
sbb
into
cdq
jmp
xor
int3
push
or
mov
pop
adc
mov
(bad)
jl
test
adc
leave
xchg
jo
or
jl
fst
adc
test
push
mov
sbb
mov
and
dec
cmps
mov
or
cmp
adc
movs
(bad)
rol
sbb
mov
and
in
or
dec
xchg
lods
addr16
imul
or
fstp
jecxz
mov
cmp
sub
cli
push
imul
ret
push
jns
jae
or
in
loope
push
retf
jae
add
into
push
shl
pop
push
out
ret
mov
push
pop
push
jmp
push
shl
pop
push
out
ret
mov
push
pop
push
out
ret
cmps
call
out
into
push
shl
pop
push
out
retf
cmps
xchg
mov
pop
pop
out
retf
scas
or
jnp
pop
push
jmp
sbb
mov
push
pop
push
jmp
push
enter
mov
pop
push
jmp
sbb
mov
push
pop
pop
jmp
push
enter
mov
pop
int3
inc
leave
mov
jp
or
loope
pop
dec
test
jnp
adc
cdq
in
fdivr
stos
sbb
dec
in
dec
popf
jae
cmp
add
cmc
sbb
retf
loope
cmp
test
push
mov
(bad)
std
stc
out
xchg
mov
daa
int3
in
jecxz
popa
mov
test
gs
scas
lods
mov
xor
push
cmp
sbb
lods
test
(bad)
jo
test
xor
adc
mov
dec
push
jae
inc
xchg
mov
or
push
xor
adc
movs
mov
sub
in
jecxz
popf
mov
sbb
stc
jmp
gs
add
icebp
cmc
retf
ins
jno
(bad)
cmp
push
mov
sub
pop
sub
cli
push
jns
ja
or
loope
push
jns
ja
sqrtps
cmps
jbe
test
pop
inc
xlat
(bad)
sbb
mov
pop
pop
pop
jmp
sbb
mov
push
pop
push
jmp
sbb
mov
push
pop
push
jmp
push
clc
mov
push
pop
push
jmp
push
enter
mov
pop
pop
jmp
sbb
mov
push
pop
inc
jmp
push
shr
pop
dec
jmp
sbb
stos
mov
mov
pop
dec
jmp
push
int3
stos
mov
mov
pop
dec
jmp
push
les
inc
pop
dec
out
(bad)
push
les
inc
pop
dec
out
(bad)
sbb
scas
mov
mov
pop
dec
out
les
and
xor
add
leave
loope
push
sbb
pop
ficomp
rol
and
rcr
lea
add
cmc
inc
push
xchg
(bad)
jl
retf
pop
addr16
lods
xor
int
in
sbb
shl
test
inc
sbb
fstp
cmp
pushf
cmc
and
mov
sub
push
xor
adc
movs
(bad)
rol
sbb
and
dec
outs
(bad)
movs
adc
dec
mov
add
or
lahf
add
jne
vpsubq
test
aas
sar
stc
test
popa
pop
call
inc
cdq
out
or
adc
sbb
sub
(bad)
push
jns
jae
or
loope
push
jnp
addr16
push
push
aaa
xchg
out
mov
inc
pop
dec
out
ret
mov
inc
pop
dec
jmp
push
shr
pop
inc
jmp
sbb
mov
inc
pop
dec
out
(bad)
sbb
mov
inc
pop
dec
jmp
push
shr
pop
dec
jmp
push
int3
stos
xchg
mov
pop
dec
jmp
push
cld
scas
mov
mov
dec
bound
push
int3
stos
xchg
mov
pop
dec
xlat
into
push
cld
stos
mov
test
pop
dec
jmp
push
int3
stos
xchg
mov
jmp
sbb
stos
xchg
mov
pop
dec
xlat
repnz
stos
xchg
mov
jmp
push
cld
pop
mov
cs
lea
ret
push
jns
inc
cmp
push
pop
shr
popf
push
dec
rcr
cmovne
retf
dec
test
or
fprem1
call
mov
pop
and
cmp
adc
cmps
icebp
mov
retf
ins
retf
pop
(bad)
loope
dec
(bad)
in
fsubr
test
mov
cmp
movs
xchg
mov
or
or
mov
and
or
mov
mov
ret
sti
mov
cmp
add
imul
imul
inc
imul
(bad)
pop
gs
jnp
or
in
enter
push
cdq
pop
sbb
mov
cmp
sub
xlat
push
dec
xchg
jnp
or
loope
icebp
mov
xchg
lahf
inc
xlat
ret
stos
xchg
mov
pop
dec
xlat
ret
stos
xchg
mov
xlat
(bad)
and
stos
mov
mov
dec
pop
inc
xlat
repnz
stos
xchg
mov
pop
dec
xlat
into
push
lock
mov
test
pop
dec
jmp
push
int3
xchg
xchg
mov
bound
and
xchg
xchg
mov
dec
bound
and
stos
mov
mov
dec
pop
je
(bad)
and
xchg
mov
bound
push
clc
xchg
mov
test
pop
js
retf
stos
mov
mov
dec
pop
jo
cli
and
xchg
mov
bound
push
clc
xchg
mov
bound
(bad)
and
xchg
mov
bound
inc
jns
sbb
jnp
or
loope
mov
or
addr16
adc
pushf
mov
jo
xchg
sbb
inc
jno
addr16
pop
aaa
aam
jmp
stos
jo
or
(bad)
inc
pusha
fnsave
pop
pusha
pop
test
fstp
fsubr
stc
sti
mov
sub
add
imul
fwait
sub
or
mov
je
mov
popa
test
xor
fdiv
std
sti
dec
lods
outs
sbb
ins
xor
stc
cmc
repz
popa
mov
or
leave
in
iret
pop
jns
jg
add
jmp
sub
sbb
pushf
mov
sub
loope
xlat
push
dec
xchg
jnp
or
(bad)
add
push
dec
mov
xlat
retf
xchg
mov
bound
and
xchg
mov
bound
es
xchg
mov
bound
and
xchg
mov
mov
xlat
retf
xchg
mov
bound
cli
and
stos
mov
mov
dec
pop
inc
jmp
and
xchg
mov
bound
and
lahf
mov
mov
jle
jo
(bad)
and
xchg
mov
pop
jl
cli
sub
lahf
mov
bound
retf
xchg
mov
bound
retf
xchg
mov
bound
es
mov
pop
jo
into
and
xchg
mov
pop
jo
lock
xlat
and
mov
xlat
pop
je
xchg
pop
cmp
setno
dec
cmps
sahf
in
xor
inc
(bad)
sub
dec
pop
xchg
xor
fucomp
ret
inc
popa
cdq
jnp
or
aam
jmp
sbb
jne
aam
in
repz
jne
arpl
xor
add
mov
lods
fwait
sbb
std
sti
inc
ins
test
daa
shl
sub
mov
js
dec
cmp
cdq
imul
aas
aam
cmc
test
pop
call
jne
jnp
add
jmp
jg
add
rcl
in
xchg
das
ss
stc
adc
cmp
push
or
stc
in
ret
pop
je
and
or
xchg
mov
clc
lahf
mov
bound
(bad)
es
mov
pop
jl
cli
sub
xchg
mov
bound
cli
es
mov
pop
jl
imul
lock
mov
bound
es
mov
pop
jo
retf
xchg
mov
bound
es
mov
pop
jl
repnz
fwait
mov
mov
jle
jl
imul
clc
xchg
mov
mov
jle
jl
cli
es
lahf
mov
mov
jp
js
imul
clc
lahf
mov
mov
jle
jl
mul
cld
xchg
mov
mov
jle
jl
mul
cld
xchg
mov
mov
jp
js
imul
cld
lahf
mov
mov
jp
js
repnz
dec
mov
cmp
jno
jae
adc
ret
je
stc
out
xchg
fst
jae
(bad)
mov
popa
or
jno
outs
sub
dec
pop
in
shr
inc
jno
sub
pop
xor
stc
cmc
test
aas
fdiv
std
dec
imul
pavgb
cmc
(bad)
mov
call
sub
sub
mov
test
in
mov
hlt
jns
inc
arpl
cmp
icebp
retf
pop
imul
ret
pop
jne
jae
or
loopne
loope
push
jns
inc
and
in
adc
fld
pushf
mov
mov
cmp
xor
cld
and
mov
arpl
sub
xchg
mov
mov
jle
jo
imul
clc
fwait
mov
mov
jp
jo
cli
sub
lahf
mov
mov
jle
jl
imul
clc
lahf
mov
mov
jp
jo
cli
sub
xchg
mov
mov
jle
jo
imul
clc
lahf
mov
mov
jle
jl
cli
sub
lahf
mov
mov
jp
jo
imul
clc
lahf
mov
mov
jp
push
lahf
scas
div
xlat
repnz
xchg
pushw
sub
fwait
mov
data16
sar
xor
fwait
stos
div
xlat
repnz
fwait
mov
data16
shl
cs
mov
bound
sub
fwait
mov
pushw
sub
fwait
mov
data16
cmp
and
imul
mov
mov
dec
cmp
pop
mov
daa
retf
cmp
jge
je
loopne
and
xlat
pop
jno
ja
sbb
icebp
ret
inc
imul
xlat
pop
jge
jg
adc
sbb
or
test
adc
and
add
push
in
(bad)
iret
inc
gs
jnp
add
in
leave
in
iret
pop
jns
jae
or
in
leave
jmp
jae
or
loopne
in
push
pop
dec
adc
loope
pop
cmp
xor
aad
push
sbb
sbb
test
push
push
lahf
scas
div
shl
cs
mov
pushw
cs
mov
pushw
sub
lahf
mov
bound
xacquire
pushw
sub
fwait
mov
bound
imul
lock
mov
mov
jp
push
lahf
mov
bound
lock
bound
ss
fwait
stos
cli
mov
shl
lock
bound
xor
fwait
mov
pushw
ss
fwait
mov
fs
cs
stos
mul
(bad)
xor
xchg
fs
xor
xchg
pushw
xor
and
or
icebp
in
pop
inc
lea
add
dec
jmp
push
xchg
ins
inc
into
pop
addr16
or
cmps
fwait
movs
cwde
loopne
stos
imul
test
int3
dec
cld
adc
clc
cmp
sbb
into
jl
add
mov
pop
push
out
push
or
sub
inc
ror
and
push
pop
popf
jno
and
dec
add
(bad)
pop
jne
jg
add
jmp
jg
or
in
loope
push
jns
jae
or
in
loope
je
xchg
and
cmp
xor
push
sub
test
add
jge
outs
es
xchg
pushw
xor
xchg
fs
ss
and
pusha
shl
lock
fs
xor
xchg
pushw
xor
xchg
bound
xacquire
pushw
xor
xchg
data16
repnz
xchg
bound
xchg
xchg
sar
ss
xchg
bound
xor
sub
xchg
sar
ss
xchg
bound
scas
(bad)
movs
dec
sahf
fs
xor
xchg
data16
cli
xor
xchg
data16
cli
xor
xchg
pushaw
xlat
cli
xor
xchg
bound
push
ins
test
and
dec
aaa
call
jg
(bad)
sbb
fadd
or
or
call
ja
pop
and
pop
mov
push
and
cmp
out
jmp
mov
xor
push
mov
in
jns
test
ret
pop
jge
jg
add
in
push
jns
jg
or
loopne
in
push
jns
jae
or
loope
push
jns
jae
or
clc
(bad)
fld
sbb
mov
cmp
sub
cmc
cmps
data16
mov
sar
xor
and
fs
xor
sub
xchg
sar
ss
sub
fs
xor
sub
pusha
sar
ss
and
fs
ss
xchg
bound
scas
(bad)
movs
dec
call
xchg
bound
ss
xchg
bound
(bad)
mov
pushfw
sar
lock
nop
shl
cmp
(bad)
scas
push
mov
shl
lock
nop
sar
cmp
mov
xchg
sar
lock
nop
shl
ss
(bad)
mov
pushfw
sar
lock
nop
shl
cmp
sub
nop
sar
mov
popa
movs
mov
loopne
in
push
jns
jg
add
int3
stc
jmp
xchg
lock
dec
dec
arpl
aad
js
into
push
jnp
pop
pop
mov
int
js
into
push
jg
pop
pop
mov
inc
rcr
pop
adc
xchg
int
adc
test
clc
int
(bad)
push
jns
ja
or
loopne
in
push
jns
ja
or
in
loope
push
jns
ja
or
loope
push
jns
inc
and
push
jo
pop
mov
ss
add
xchg
sti
pop
and
pop
dec
fucomip
and
sub
nop
sar
cmp
sub
nop
sar
cmp
mov
pushfw
sar
ss
mov
xchg
sar
lock
nop
sar
lock
nop
shl
lock
nop
sar
lock
nop
sar
cmp
sub
pushf
sar
ss
mov
idiv
lock
cmps
push
mov
fcomip
cmp
(bad)
cmps
or
idiv
cld
(bad)
cmps
or
idiv
lock
cmps
or
idiv
clc
(bad)
mov
idiv
cld
(bad)
cmps
or
idiv
lock
cmps
push
mov
fcomip
cmp
(bad)
cmps
or
idiv
cld
(bad)
mov
push
fcomip
cmp
(bad)
push
call
(bad)
and
and
int
clc
fabs
(bad)
pop
jge
jnp
sub
enter
mov
mov
div
ror
mov
lock
retf
or
dec
imul
cs
in
push
jge
jnp
add
loopne
in
push
jns
ja
or
loope
push
jns
jae
or
in
push
jns
jae
or
in
loope
je
xchg
stos
and
sbb
sbb
sub
sub
cld
lahf
call
shl
cmp
(bad)
cmps
or
idiv
cld
(bad)
cmps
or
idiv
cld
(bad)
cmps
or
idiv
cld
(bad)
mov
idiv
lock
cmps
or
idiv
lock
cmps
or
idiv
cld
(bad)
cmps
or
idiv
cld
(bad)
mov
push
shl
cmp
(bad)
mov
idiv
clc
(bad)
cmps
or
repnz
mov
push
shl
ds
mov
data16
repnz
mov
data16
repnz
mov
pushfw
fcomip
cmp
mov
data16
idiv
hlt
mov
mov
repnz
mov
data16
repnz
mov
data16
repnz
(bad)
mov
push
fcomip
cmp
mov
push
sar
ds
movs
mov
sbb
adc
lds
add
clc
fucom
(bad)
push
jne
jg
add
jmp
jae
cmp
sar
in
push
jne
jnp
add
in
in
push
jns
ja
or
loope
push
jns
jae
or
in
loope
push
jns
ja
or
loope
push
jns
ja
or
leave
jecxz
xchg
xchg
jmp
push
ror
jmp
(bad)
jae
shl
ss
mov
mov
repnz
mov
data16
cli
ds
(bad)
mov
push
shl
ds
mov
push
shl
ds
mov
data16
repnz
mov
push
fcomip
ds
(bad)
mov
push
shl
ds
mov
mov
repnz
mov
data16
repnz
mov
data16
repnz
mov
data16
(bad)
ds
push
fsub
repnz
push
fcomip
lock
push
(bad)
inc
lock
push
lods
mov
repnz
lock
push
fcomip
inc
lock
push
(bad)
ds
push
fsub
(bad)
ds
adc
mov
inc
mov
push
lods
cmps
xchg
(bad)
inc
lock
ficom
lods
mov
(bad)
ds
push
lods
mov
mul
(bad)
sub
test
sub
jae
or
loopne
in
push
jge
jae
or
in
push
jns
jae
or
loope
push
jns
jae
or
in
loope
push
jns
jae
or
loope
push
jns
jae
or
loope
fs
mov
or
call
push
cld
imul
push
(bad)
inc
lock
push
test
xchg
(bad)
inc
lock
push
fsub
inc
neg
push
fsub
inc
mov
adc
mov
(bad)
ds
push
fsub
inc
mov
push
lods
cmps
xchg
(bad)
inc
lock
push
test
xchg
fcomip
inc
lock
outs
test
(bad)
ds
push
lods
mov
inc
neg
push
lods
mov
repnz
lock
push
(bad)
inc
cld
repz
fsubr
cli
inc
cld
neg
sbb
mov
inc
repz
sbb
stos
sub
inc
not
sbb
stos
sub
inc
repz
sbb
stos
sub
inc
not
sbb
stos
sub
inc
not
sbb
inc
not
sbb
scas
xchg
(bad)
inc
cld
not
sbb
stos
sub
inc
repz
fsubr
cli
inc
cld
neg
push
fsubr
cli
inc
cld
neg
push
test
and
(bad)
cs
fs
mov
cmp
dec
out
xor
icebp
jnp
or
loope
push
jge
jae
or
in
loope
push
jns
ja
or
in
loope
push
jns
jae
or
loopne
in
push
jge
ja
add
lahf
jo
pop
retf
or
(bad)
sbb
(bad)
es
mov
push
(bad)
inc
lock
push
fsubr
repnz
clc
repz
outs
sbb
inc
cld
repz
push
fsubr
inc
mov
sbb
mov
cli
inc
clc
mov
push
fsubr
cli
inc
lock
fsubr
inc
not
push
fsubr
cli
inc
clc
not
push
fsubr
inc
not
sbb
stos
sub
(bad)
lock
fsubr
inc
not
sbb
mov
inc
mov
sbb
stos
xchg
fcomip
inc
clc
not
fcom
cli
inc
clc
repz
fcom
cli
inc
clc
repz
fcom
cli
inc
hlt
repz
fcom
cli
inc
hlt
(bad)
fisub
fcom
inc
repz
fcom
cli
inc
hlt
not
and
xchg
xchg
(bad)
inc
hlt
repz
fcom
cli
inc
hlt
(bad)
fisub
fcom
cli
inc
hlt
not
push
fcom
cli
inc
clc
repz
fcom
cli
inc
hlt
repz
fcom
cli
dec
lock
and
idiv
les
xchg
push
mov
push
bound
ror
in
imul
and
cmps
xor
push
cmp
loop
in
and
ja
dec
movs
cmps
push
repnz
cmp
mov
push
(bad)
dec
lock
fisub
fcom
cli
inc
hlt
repz
fcom
cli
inc
hlt
(bad)
fisub
fcom
cli
inc
clc
repz
fcom
cli
inc
hlt
repz
fcom
cli
inc
hlt
not
and
xchg
sub
cli
inc
hlt
not
and
xchg
sub
cli
inc
hlt
(bad)
fisub
fsubr
cli
inc
hlt
not
and
xchg
xchg
(bad)
inc
clc
repz
fsubr
test
shl
fcom
test
shl
fcom
cli
dec
lock
fcom
jmp
xchg
mov
mov
(bad)
fisub
aam
mov
dec
loopne
fisub
aam
mov
mov
cli
dec
lock
fisub
fcom
test
fisub
fcom
cli
dec
lock
fisub
fcom
test
fisub
aam
mov
mov
(bad)
fisub
fcom
test
fisub
fcom
test
fisub
aam
mov
mov
(bad)
fisub
aam
mov
inc
in
fisub
aam
mov
dec
loopne
fisub
aam
mov
mov
(bad)
fisub
fcom
test
fisub
aam
mov
mov
test
fisub
aam
mov
mov
(bad)
fisub
aam
mov
mov
(bad)
fisub
fcom
test
fisub
aam
mov
dec
in
fisub
aam
mov
dec
lock
fisub
fcom
test
fisub
fcom
jmp
xchg
mov
mov
test
fisub
fcom
out
lock
fisub
fcom
cli
dec
lock
fisub
fcom
test
fisub
fcom
cli
dec
lock
fisub
fcom
out
loopne
fisub
aam
mov
mov
test
fisub
fcom
test
fisub
aam
mov
mov
repz
aam
mov
mov
(bad)
fisubr
fcom
repnz
clc
sti
(bad)
fcomp
repnz
cld
sti
(bad)
sub
lahf
mov
mov
sti
(bad)
sub
fwait
mov
mov
sti
(bad)
sub
lahf
mov
mov
sti
shl
fcomp
test
fisubr
fcomp
test
(bad)
sub
fwait
mov
mov
(bad)
fisubr
fcomp
repnz
cld
sti
shl
fcomp
test
fisubr
fcomp
test
shl
fcomp
repnz
cld
sti
(bad)
sub
fwait
mov
mov
sti
(bad)
fcomp
test
shr
fcomp
test
(bad)
sub
lahf
mov
mov
call
sub
fwait
mov
mov
call
sub
lahf
mov
mov
sti
shr
fcomp
repnz
clc
sti
shr
fcomp
repnz
cld
call
fcom
repnz
clc
(bad)
fisubr
fcomp
repnz
cld
sti
(bad)
sub
xchg
mov
mov
sti
fisubr
fcomp
repnz
clc
sti
shr
fcomp
repnz
lock
(bad)
sub
lahf
mov
mov
sti
(bad)
sub
fwait
mov
mov
call
sub
lahf
mov
mov
sti
shl
fcomp
test
(bad)
sub
lahf
mov
mov
sti
fisubr
fcomp
test
shl
enter
movs
fnclex
dec
hlt
out
fcomp
(bad)
push
in
ret
fwait
mov
test
(bad)
push
hlt
out
ss
movs
fucomi
push
in
ret
xchg
push
loopne
ret
fwait
mov
test
repnz
hlt
out
cs
mov
out
dec
clc
sti
ret
xchg
push
call
xchg
push
loopne
into
xor
xchg
push
lock
cs
mov
out
dec
call
xchg
push
in
into
xor
fwait
scas
jb
fucomi
dec
call
xchg
push
in
ret
xchg
push
hlt
sti
shr
enter
movs
(bad)
loop
hlt
out
fcomp
(bad)
push
in
ret
xchg
push
hlt
out
cs
movs
(bad)
loop
hlt
out
xor
cmp
call
xchg
dec
call
fwait
mov
push
in
into
xor
xchg
dec
call
xchg
push
hlt
out
cs
movs
fnclex
push
lock
cs
movs
fucomi
push
loopne
into
xor
xchg
dec
clc
out
cs
movs
(bad)
loop
hlt
out
cs
movs
(bad)
(bad)
push
loopne
retf
xchg
push
in
into
xor
xchg
dec
call
xchg
push
in
into
xor
and
cld
jecxz
cmp
(bad)
mov
push
cld
jecxz
ss
movs
(bad)
push
cld
out
ss
movs
(bad)
push
lock
ss
movs
(bad)
push
cld
out
ss
mov
out
fadd
cli
push
lock
cmp
(bad)
mov
push
lock
ss
mov
jecxz
ss
mov
jecxz
cmp
(bad)
mov
push
cld
out
cmp
and
cld
out
cmp
sub
lock
ss
mov
jecxz
ss
movs
(bad)
push
cld
sti
into
cmp
and
in
into
les
cli
push
cld
jecxz
cmp
(bad)
mov
push
cld
jecxz
cmp
(bad)
mov
push
cld
out
ss
mov
sti
into
cmp
(bad)
mov
push
cld
out
ss
movs
(bad)
push
lock
cmp
and
lock
ss
mov
out
cmp
sub
cld
jecxz
ss
mov
jecxz
xor
and
lock
ss
movs
(bad)
push
cld
sti
into
cmp
sub
lock
cmp
and
cld
out
fadd
cli
push
lock
cmp
(bad)
mov
push
lock
cmp
(bad)
scas
outs
mov
jecxz
les
out
push
loopne
(bad)
les
out
push
loopne
(bad)
les
out
loopne
ret
mov
push
in
jecxz
cmp
(bad)
scas
jb
ret
out
in
jecxz
cmp
sub
call
mov
push
loopne
retf
(bad)
(bad)
out
call
sub
in
jecxz
cmp
sub
in
jecxz
les
out
push
loopne
retf
(bad)
scas
jb
ret
jmp
(bad)
scas
jbe
(bad)
out
in
jecxz
les
out
loopne
(bad)
les
jmp
sub
call
(bad)
scas
jb
(bad)
jmp
mov
push
in
jecxz
les
out
push
loopne
retf
(bad)
(bad)
out
loopne
(bad)
les
out
push
in
jecxz
les
not
out
(bad)
les
out
in
jecxz
les
jmp
sub
loopne
(bad)
cmp
sub
in
out
ret
(bad)
scas
jb
ret
out
push
in
jecxz
les
out
in
jecxz
les
jmp
sub
loopne
retf
(bad)
scas
jb
ret
out
push
in
jecxz
ss
imul
pop
in
ret
mov
push
clc
out
into
ds
fadd
out
in
ret
mov
push
call
imul
pop
hlt
jecxz
ds
mov
out
into
inc
(bad)
neg
jb
(bad)
push
call
imul
pop
in
ret
imul
push
clc
out
into
ds
mov
jecxz
ds
fadd
out
in
mov
scas
jb
(bad)
push
call
imul
push
clc
out
into
ds
lods
fucomi
push
clc
out
into
ds
lods
(bad)
out
call
neg
jb
fucomi
push
clc
out
into
ds
rol
neg
out
ret
mov
pop
in
ret
mov
pop
in
into
inc
les
cli
push
clc
jecxz
ds
mov
out
into
inc
les
neg
out
into
inc
(bad)
neg
jb
(bad)
jmp
mov
pop
clc
out
into
ds
fadd
out
in
ret
mov
pop
hlt
jecxz
ds
rol
neg
out
ret
mov
push
call
mov
jb
(bad)
neg
out
into
inc
(bad)
neg
jb
(bad)
out
in
ret
mov
pop
call
mov
jb
(bad)
out
in
out
into
inc
hlt
xlat
fidiv
out
outs
(bad)
(bad)
(bad)
hlt
xlat
(bad)
push
clc
out
outs
(bad)
(bad)
(bad)
hlt
xlat
dec
out
outs
(bad)
(bad)
(bad)
hlt
xlat
(bad)
push
clc
out
outs
(bad)
(bad)
(bad)
in
(bad)
push
hlt
out
outs
(bad)
(bad)
cli
(bad)
in
cli
push
hlt
out
jb
(bad)
(bad)
in
cli
push
hlt
out
jb
fucomi
data16
(bad)
push
clc
jecxz
jb
fucomi
data16
xlat
(bad)
push
clc
out
outs
(bad)
(bad)
(bad)
hlt
xlat
(bad)
push
clc
out
jb
(bad)
jmp
out
outs
(bad)
(bad)
(bad)
in
(bad)
push
hlt
jecxz
jb
fucomi
data16
(bad)
push
clc
out
outs
(bad)
(bad)
cli
(bad)
in
cli
push
hlt
out
outs
(bad)
(bad)
jmp
jecxz
jb
(bad)
jmp
out
outs
(bad)
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
fucomi
data16
(bad)
push
clc
jecxz
jb
(bad)
jmp
out
outs
(bad)
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
jecxz
jb
(bad)
jmp
push
movs
cmp
or
rol
inc
add
and
sub
dec
add
jmp
pop
and
mov
xor
xor
dec
or
sub
sub
add
or
mov
jmp
push
xor
add
and
inc
dec
add
sub
and
dec
not
jmp
nop
add
sub
add
dec
ror
add
or
and
jmp
push
add
or
and
xor
shl
shl
jmp
sub
or
add
add
dec
add
and
mov
add
or
neg
shr
bswap
xor
jmp
push
bswap
add
add
dec
or
or
mov
not
xchg
xchg
mov
jmp
mov
or
sub
and
add
or
neg
xchg
ror
or
jmp
pop
mov
nop
sub
mov
sub
mov
shr
or
sub
xchg
and
sub
jmp
call
sub
sub
and
xchg
and
ror
sub
inc
xchg
jmp
pop
mov
and
sub
bswap
and
not
or
xor
inc
and
jmp
pop
sub
or
shr
xor
mov
jmp
push
add
add
bswap
xchg
bswap
mov
jmp
push
xor
mov
neg
mov
add
neg
jmp
call
or
and
sub
or
rol
add
sub
jmp
add
add
xchg
add
or
mov
shr
and
bswap
sub
xchg
neg
jmp
push
xor
nop
xchg
dec
xchg
or
xor
sub
shl
or
xchg
shl
jmp
pop
shl
xchg
jmp
mov
add
shl
or
add
xor
ror
and
ror
add
jmp
push
xchg
sub
add
xor
sub
and
xchg
or
or
dec
or
add
dec
and
and
jmp
push
and
or
not
jmp
call
xchg
mov
rol
rol
xchg
jmp
push
shr
and
sub
xor
shl
mov
sub
or
or
jmp
push
bswap
xchg
mov
dec
xchg
xchg
add
add
and
jmp
push
bswap
and
or
mov
ror
not
xor
and
dec
sub
add
and
add
inc
jmp
push
xchg
or
sub
xor
sub
mov
neg
inc
add
rol
jmp
pop
sub
and
rol
xor
sub
dec
shl
rol
dec
jmp
add
xor
mov
and
inc
or
and
sub
and
xor
xor
and
dec
mov
jmp
push
or
shr
xor
jmp
pop
and
add
neg
or
rol
and
dec
jmp
xor
sub
mov
rol
mov
bswap
bswap
not
and
ror
xchg
add
sub
shr
and
jmp
pop
shr
shl
xor
and
sub
xor
not
add
xor
jmp
pop
mov
and
sub
and
xchg
xor
sub
and
or
jmp
pop
or
xchg
sub
jmp
pop
dec
shl
and
sub
or
not
add
and
jmp
push
or
ror
neg
shr
or
mov
sub
not
mov
sub
sub
sub
mov
jmp
mov
and
add
neg
mov
jmp
push
bswap
or
not
and
and
jmp
xor
mov
xor
sub
not
xchg
add
inc
or
xor
jmp
push
add
xchg
nop
mov
ror
bswap
and
xor
shl
jmp
pop
add
and
shr
ror
and
or
or
inc
jmp
pop
ror
or
shr
shl
and
ror
and
and
sub
jmp
mov
inc
and
mov
mov
sub
neg
sub
dec
jmp
nop
mov
sub
mov
add
and
add
and
shl
sub
sub
shr
jmp
pop
and
mov
shl
add
xor
and
xor
or
jmp
pop
sub
mov
add
rol
neg
sub
neg
and
shr
ror
not
and
jmp
pop
and
not
mov
jmp
xor
and
xor
xor
xor
or
mov
xor
add
jmp
movzx
neg
add
mov
sub
jmp
call
shl
sub
and
rol
or
xor
jmp
xor
add
xchg
add
xchg
xchg
sub
or
and
sub
dec
xchg
jmp
pop
sub
or
add
xor
sub
add
xor
jmp
push
xor
add
and
dec
bswap
shl
sub
and
or
or
xor
xor
xor
jmp
call
xor
add
and
ror
shl
bswap
bswap
and
or
xchg
shr
or
add
inc
sub
jmp
push
sub
mov
not
shl
inc
neg
neg
add
xor
and
shr
and
jmp
push
sub
neg
xor
shr
xor
shr
sub
xor
sub
jmp
push
mov
shr
xor
or
dec
or
xchg
mov
and
jmp
pop
add
add
sub
add
add
add
xor
xor
dec
add
jmp
mov
mov
add
and
sub
xor
mov
ror
xchg
mov
inc
sub
sub
rol
xor
jmp
pop
sub
inc
and
neg
ror
rol
not
add
jmp
add
or
xor
and
xor
sub
and
jmp
mov
xchg
or
mov
add
rol
or
not
add
mov
xor
shl
and
sub
xor
jmp
mov
add
xor
shl
sub
mov
add
sub
sub
add
xor
xchg
xor
inc
mov
or
jmp
add
xchg
neg
sub
sub
ror
sub
and
jmp
call
shl
sub
or
xchg
add
xor
shl
rol
add
ror
xor
add
jmp
call
ror
rol
rol
add
xor
rol
neg
xchg
sub
ror
inc
xor
add
or
jmp
pop
mov
dec
sub
sub
or
mov
jmp
mov
dec
and
xor
add
shl
xchg
dec
jmp
mov
xchg
shl
mov
xchg
xor
mov
add
shl
mov
jmp
push
bswap
shl
mov
xchg
jmp
add
add
and
or
and
dec
mov
or
xor
and
jmp
push
rol
mov
bswap
sub
rol
neg
or
add
bswap
add
xor
xchg
sub
sub
jmp
push
mov
xor
xchg
or
dec
neg
add
ror
xor
xchg
not
add
sub
and
or
jmp
pop
rol
xor
jmp
call
or
or
mov
shl
inc
xor
and
sub
rol
jmp
pop
or
rol
sub
mov
shl
mov
bswap
add
mov
shr
jmp
pop
add
or
or
jmp
mov
sub
shl
sub
not
xor
mov
add
xchg
add
and
rol
and
jmp
call
add
bswap
sub
dec
jmp
mov
xor
xchg
mov
and
add
sub
not
jmp
push
ror
or
add
xor
xchg
rol
add
dec
add
xor
add
jmp
mov
or
sub
shl
xor
and
xchg
xchg
xor
mov
sub
or
xchg
sub
neg
jmp
pop
xor
and
or
ror
neg
jmp
push
shr
add
and
and
sub
and
and
add
jmp
mov
xor
xor
bswap
rol
dec
sub
xor
mov
add
xchg
mov
xchg
or
jmp
pop
shl
inc
and
ror
and
add
inc
jmp
mov
neg
xor
not
mov
xchg
sub
xor
xor
sub
sub
xchg
xchg
jmp
push
not
or
xor
add
or
add
sub
and
inc
add
and
shr
neg
jmp
call
xor
neg
rol
mov
xor
sub
add
dec
jmp
pop
xchg
and
or
bswap
neg
or
jmp
mov
add
inc
or
or
dec
sub
and
add
jmp
call
mov
dec
xor
xchg
xor
or
sub
nop
sub
shl
nop
xchg
bswap
jmp
mov
and
bswap
neg
and
xor
sub
and
or
xchg
and
and
xor
not
mov
jmp
pop
or
dec
sub
add
and
add
sub
not
jmp
pop
sub
neg
and
add
xor
or
jmp
mov
mov
neg
jmp
mov
xor
xor
or
mov
rol
dec
xchg
sub
xchg
add
jmp
pop
ror
or
add
sub
ror
neg
mov
or
neg
inc
jmp
mov
and
not
xor
add
sub
and
bswap
mov
xchg
neg
jmp
shr
neg
xchg
and
and
xchg
sub
xor
shl
inc
jmp
push
or
not
sub
add
jmp
push
add
sub
jmp
add
sub
or
or
and
and
add
and
rol
not
xor
jmp
call
xchg
xchg
xor
or
xor
xor
xchg
xchg
or
nop
xchg
and
jmp
pop
xor
and
xchg
not
bswap
rol
sub
mov
and
add
shr
sub
xchg
mov
jmp
ret
mov
or
or
xchg
sub
shl
sub
shr
ror
xchg
neg
jmp
push
or
or
sub
and
sub
neg
or
add
sub
mov
and
jmp
ret
bswap
and
add
xchg
ror
mov
or
dec
mov
nop
mov
jmp
pop
add
bswap
or
add
bswap
and
dec
xchg
add
add
jmp
mov
and
xor
inc
and
mov
shl
mov
jmp
mov
sub
xchg
mov
rol
xor
sub
xor
shr
or
jmp
call
or
add
not
inc
shl
rol
xor
jmp
push
mov
mov
add
ror
dec
jmp
pop
mov
mov
xchg
xchg
shr
add
add
sub
mov
jmp
call
and
sub
add
or
mov
xchg
not
sub
sub
jmp
push
rol
sub
and
or
sub
not
sub
sub
and
dec
sub
xchg
inc
mov
shl
and
jmp
push
xor
mov
and
bswap
or
or
xchg
jmp
push
bswap
or
and
xor
or
jmp
pop
or
nop
xor
xor
xor
dec
neg
xchg
xchg
add
jmp
call
mov
sub
or
add
xor
sub
jmp
push
add
and
mov
shl
shr
xor
or
jmp
pop
or
mov
or
xor
neg
inc
mov
jmp
ret
rol
mov
xor
neg
shl
bswap
nop
jmp
rol
sub
and
mov
xor
or
sub
ror
mov
xor
xor
jmp
push
dec
xchg
or
and
add
mov
xor
xor
jmp
mov
add
or
mov
mov
mov
xchg
xor
xchg
inc
add
xchg
add
jmp
pop
shr
sub
mov
xchg
and
xchg
sub
and
xor
or
sub
jmp
call
and
add
mov
xor
add
inc
or
or
xor
jmp
pop
inc
add
not
rol
not
sub
ror
mov
or
and
shr
add
jmp
push
sub
sub
ror
and
xchg
or
and
or
jmp
mov
mov
add
add
xor
add
add
add
add
mov
jmp
call
xor
and
xor
rol
rol
add
inc
and
ror
shr
jmp
nop
add
mov
mov
and
or
sub
and
sub
shl
ror
and
neg
and
nop
jmp
inc
sub
and
not
shr
or
add
add
jmp
xor
add
or
or
shl
add
and
jmp
push
add
xchg
or
sub
inc
and
shr
jmp
add
inc
and
sub
xchg
xor
or
rol
or
sub
rol
xchg
jmp
pop
xor
and
or
xchg
sub
inc
or
and
and
jmp
call
xchg
and
and
add
dec
xor
jmp
mov
inc
shl
add
jmp
pop
sub
add
or
xor
xchg
add
nop
mov
jmp
call
or
mov
mov
add
xchg
mov
inc
xor
or
xor
or
not
xor
shr
jmp
mov
xor
xchg
mov
mov
or
add
or
or
sub
rol
jmp
push
ror
mov
mov
xor
ror
neg
sub
xor
sub
xor
mov
jmp
pop
add
add
or
sub
xchg
add
jmp
pop
ror
xor
and
xor
not
xor
xchg
mov
shr
jmp
mov
bswap
not
sub
or
xor
and
sub
xor
or
jmp
call
or
xchg
or
ror
xchg
mov
and
jmp
push
add
add
and
add
or
xor
add
and
or
and
mov
ror
xchg
or
xor
jmp
call
or
sub
sub
ror
and
dec
xchg
mov
jmp
jl
sub
sub
xor
xchg
xor
shr
dec
xchg
or
and
sub
jmp
push
sub
xor
xchg
shr
sub
add
or
xor
sub
bswap
jmp
call
sub
add
or
xor
xchg
mov
not
xor
xor
and
inc
mov
add
shr
shl
jmp
call
or
xchg
xor
sub
jmp
call
and
and
add
shl
and
jmp
pop
mov
shr
mov
xor
and
sub
mov
shr
sub
jmp
mov
inc
mov
or
dec
mov
shr
neg
jmp
xor
inc
mov
or
mov
mov
not
sub
xor
ror
xor
mov
and
xor
add
and
jmp
pop
or
or
add
xor
xor
mov
rol
xor
xchg
jmp
pop
and
and
sub
sub
and
shl
and
mov
add
sub
or
jmp
push
inc
or
xor
xor
bswap
and
and
sub
xor
shl
jmp
push
mov
and
add
inc
add
and
xor
jmp
call
nop
sub
add
add
xchg
xor
shl
shr
or
or
jmp
pop
add
dec
xchg
xor
or
sub
shr
shl
mov
jmp
call
xchg
shr
and
dec
dec
add
sub
and
dec
and
shr
xchg
sub
xor
jmp
call
add
add
jmp
nop
and
not
xor
or
or
add
xchg
and
dec
add
xor
or
sub
jmp
call
sub
sub
rol
or
neg
add
and
sub
mov
and
xchg
bswap
jmp
mov
bswap
ror
xchg
add
or
shl
and
shl
add
shl
jmp
call
add
sub
xchg
inc
and
or
xchg
or
xchg
jmp
pop
bswap
shr
sub
rol
and
sub
shl
ror
xor
mov
jmp
pop
neg
shr
mov
and
xor
inc
mov
or
ror
mov
jmp
call
add
xchg
dec
shl
xchg
inc
xor
sub
xor
jmp
pop
xor
and
or
and
mov
jmp
push
xchg
or
xchg
mov
and
mov
jmp
push
neg
or
xor
sub
bswap
or
dec
and
not
and
shl
or
xor
sub
jmp
pop
rol
inc
and
or
dec
nop
jmp
call
inc
bswap
xor
sub
xor
bswap
xor
sub
not
xor
ror
jmp
mov
xor
neg
sub
bswap
or
ror
not
jmp
call
and
xor
jmp
call
mov
or
add
ror
or
rol
and
mov
dec
rol
xchg
jmp
call
xchg
sub
sub
xor
xchg
add
and
bswap
mov
inc
rol
or
xchg
mov
jmp
mov
or
mov
add
xchg
sub
mov
add
xor
jmp
mov
or
and
neg
xor
or
ror
sub
add
sub
jmp
push
nop
mov
neg
or
and
or
or
mov
add
sub
and
mov
and
xchg
xchg
jmp
mov
nop
xchg
ror
neg
and
xor
ror
add
add
shl
xor
xor
or
jmp
push
and
sub
xor
shl
add
jmp
push
neg
xchg
mov
add
neg
sub
sub
or
add
or
jmp
call
and
xchg
mov
rol
xor
add
add
add
jmp
call
mov
dec
and
xor
shr
or
add
and
sub
jmp
pop
shr
add
inc
or
add
xor
ror
xor
ror
and
xchg
add
jmp
cmp
jmp
mov
mov
rol
neg
dec
sub
xchg
sub
neg
jmp
push
sub
xor
inc
mov
shr
mov
xchg
and
and
jmp
pop
and
shr
or
and
and
jmp
mov
shr
sub
or
and
and
sub
add
dec
rol
bswap
sub
not
nop
add
jmp
call
mov
or
add
mov
xchg
neg
inc
xchg
or
jmp
push
or
not
and
xchg
and
rol
add
jmp
pop
or
and
add
sub
mov
sub
ror
jmp
mov
mov
and
not
or
and
sub
mov
mov
mov
jmp
pop
xor
sub
add
add
dec
bswap
jmp
push
xor
or
bswap
dec
xchg
xchg
mov
jmp
call
sub
or
or
and
or
sub
bswap
or
add
jmp
mov
or
xor
xchg
bswap
not
or
or
not
add
mov
sub
sub
jmp
push
sub
and
xor
xor
inc
sub
xor
sub
inc
sub
jmp
mov
xchg
xchg
mov
and
and
xor
mov
not
not
jmp
mov
xor
xchg
neg
sub
xchg
mov
and
nop
add
xor
rol
jmp
pop
sub
shl
or
and
mov
and
rol
xchg
shl
sub
xchg
or
add
dec
xchg
jmp
pop
add
shr
add
xor
and
add
sub
sub
add
xor
mov
add
and
sub
not
sub
jmp
pop
xchg
or
and
add
xor
sub
xor
jmp
push
sub
inc
mov
xor
or
shr
add
shl
inc
jmp
call
sub
and
mov
shr
sub
neg
sub
mov
jmp
pop
add
inc
or
mov
not
and
xor
add
or
or
rol
add
jmp
mov
inc
and
or
inc
add
or
shr
add
not
or
jmp
ret
mov
or
xchg
ror
jmp
mov
mov
or
and
rol
jmp
pop
mov
mov
xor
mov
bswap
add
sub
jmp
nop
xor
neg
neg
xor
sub
xchg
and
mov
sub
shr
inc
mov
dec
xchg
jmp
pop
sub
rol
mov
add
shl
inc
xor
and
shr
mov
jmp
call
nop
mov
bswap
and
or
add
sub
mov
or
and
ror
not
jmp
call
rol
and
add
xor
or
sub
sub
xor
add
add
jmp
mov
shr
or
sub
sub
xchg
xor
ror
jmp
push
mov
add
dec
dec
xor
sub
mov
nop
jmp
cmp
jmp
push
shl
rol
xor
and
mov
mov
add
shl
jmp
push
ror
add
or
xchg
xor
jmp
call
or
add
or
add
sub
add
and
sub
xchg
add
or
jmp
mov
add
sub
xor
mov
xor
rol
jmp
call
and
xor
xchg
xor
sub
inc
sub
add
sub
mov
jmp
push
xor
add
add
xchg
sub
or
not
inc
xor
or
xchg
or
rol
mov
jmp
mov
and
or
add
mov
mov
sub
and
xor
shl
xor
add
jmp
nop
sub
rol
mov
xor
xor
add
sub
sub
shl
xchg
sub
jmp
push
sub
sub
xchg
ror
mov
add
dec
neg
rol
jmp
not
dec
or
bswap
xchg
or
xor
dec
and
xor
not
jmp
call
xor
xchg
shr
sub
rol
xor
mov
sub
sub
jmp
mul
ror
sub
sub
neg
or
add
and
xor
jmp
push
or
xchg
shr
inc
or
or
xor
and
rol
and
and
jmp
mov
and
and
bswap
and
not
mov
and
shr
sub
xor
mov
and
and
sub
jmp
mov
or
xchg
xchg
bswap
xchg
xor
and
bswap
jmp
push
dec
dec
xor
and
rol
or
add
mov
xor
or
jmp
pop
sub
mov
mov
dec
ror
mov
xor
and
xchg
neg
xor
jmp
mov
xchg
xchg
ror
add
xor
inc
dec
sub
ror
jmp
push
bswap
sub
xor
jmp
pop
xor
mov
not
add
xchg
xor
xchg
jmp
push
or
or
sub
bswap
jmp
mov
shl
xor
sub
shr
sub
sub
mov
not
bswap
xchg
jmp
push
xchg
add
shr
mov
ror
rol
not
add
rol
mov
and
rol
jmp
pop
shr
mov
sub
xor
nop
mov
mov
not
mov
or
xchg
not
xor
jmp
add
dec
dec
mov
bswap
sub
mov
mov
add
dec
jmp
mov
xor
mov
neg
xor
xchg
shr
and
xchg
jmp
ret
xchg
or
ror
bswap
sub
mov
jmp
pop
mov
xor
and
xor
jmp
pop
rol
or
shl
add
mov
shr
jmp
xor
nop
ror
xor
and
and
add
inc
xchg
jmp
mov
xor
and
mov
mov
not
or
and
mov
mov
xchg
or
mov
jmp
mov
and
mov
and
add
bswap
mov
xchg
sub
xor
shr
xor
mov
jmp
add
inc
sub
xchg
or
neg
xor
mov
or
mov
xor
xchg
add
and
jmp
call
and
neg
sub
mov
not
mov
xor
xchg
xor
jmp
mov
xor
and
mov
and
dec
or
xor
xor
or
xor
mov
shr
and
add
jmp
call
bswap
or
add
and
bswap
add
mov
sub
mov
bswap
jmp
mov
sub
xchg
sub
and
and
xchg
or
add
add
jmp
pop
add
mov
inc
xor
mov
or
and
and
and
sub
sub
rol
jmp
push
ror
add
and
or
xor
add
ror
bswap
not
bswap
sub
sub
xor
mov
and
jmp
pop
sub
and
mov
mov
xor
dec
add
or
shr
sub
xor
add
mov
shr
jmp
ret
or
xchg
neg
rol
ror
or
add
neg
and
bswap
rol
jmp
pop
rol
mov
mov
mov
xor
neg
jmp
add
or
add
mov
add
and
dec
add
and
mov
jmp
add
sub
and
add
and
xor
shl
and
jmp
pop
rol
and
add
xchg
xchg
xchg
or
add
xor
add
mov
mov
and
add
and
sub
jmp
mov
dec
add
xor
inc
mov
xor
xor
jmp
call
ror
add
sub
xor
inc
jmp
mov
and
xchg
bswap
inc
jmp
pop
add
xchg
or
add
xor
mov
shl
sub
mov
sub
or
add
or
jmp
push
and
ror
neg
xchg
not
ror
mov
mov
and
xor
jmp
call
add
add
xor
rol
shl
xchg
neg
not
mov
jmp
call
xor
sub
not
shl
xchg
sub
xchg
add
or
jmp
call
sub
xchg
xor
and
add
xchg
bswap
not
xchg
sub
xor
xchg
sub
jmp
pop
shl
ror
xchg
and
and
neg
mov
jmp
push
xor
or
or
and
xor
shr
and
sub
not
and
xor
and
inc
mov
xchg
jmp
mov
mov
mov
neg
shr
and
or
xor
jmp
call
add
sub
mov
and
sub
xor
mov
mov
xor
not
jmp
call
sub
shr
xor
add
or
mov
bswap
and
and
sub
and
xor
add
and
mov
jmp
call
sub
mov
mov
add
dec
nop
xor
and
mov
mov
jmp
pop
add
and
add
and
add
xor
shl
xor
sub
or
or
jmp
push
add
add
xor
or
and
shr
sub
add
jmp
pop
and
sub
or
xor
dec
sub
and
or
and
add
add
sub
sub
mov
and
jmp
pop
and
xchg
or
xchg
inc
bswap
add
add
shl
mov
xchg
inc
jmp
call
sub
or
mov
add
rol
and
add
add
xor
sub
xchg
jmp
inc
or
sub
shl
sub
shl
and
xchg
sub
xor
mov
mov
jmp
ret
neg
add
sub
or
mov
jmp
add
add
xor
add
ror
add
shr
mov
mov
add
bswap
dec
shl
jmp
pop
and
xor
mov
dec
add
jmp
mov
xor
sub
sub
shl
jmp
push
sub
mov
or
mov
xor
shl
and
xor
mov
add
add
jmp
nop
dec
or
xor
add
mov
sub
or
inc
inc
xor
jmp
pop
ror
or
xor
sub
xchg
xor
or
xchg
and
or
jmp
pop
xor
mov
shr
inc
xor
and
and
jmp
add
add
mov
not
shr
and
mov
add
sub
jmp
pop
ror
and
mov
xchg
bswap
xor
sub
mov
mov
not
add
add
mov
jmp
add
xor
sub
add
xchg
and
not
and
shl
or
mov
inc
jmp
call
add
sub
neg
rol
or
neg
xchg
dec
add
mov
jmp
call
ror
xor
add
or
nop
sub
shl
mov
xchg
sub
jmp
push
neg
sub
and
or
mov
or
shl
and
add
sub
sub
shr
add
add
jmp
mov
bswap
xor
or
dec
xor
mov
or
mov
shl
sub
mov
jmp
pop
xor
xchg
and
sub
mov
sub
ror
sub
jmp
pop
or
add
xchg
sub
and
mov
jmp
push
add
or
add
add
bswap
neg
not
mov
neg
jmp
add
neg
xor
sub
sub
jmp
push
mov
mov
jmp
call
xor
shl
or
add
or
and
jmp
call
and
and
dec
xor
or
mov
xor
xor
jmp
pop
xor
mov
and
shr
add
sub
or
mov
mov
or
bswap
and
ror
xchg
jmp
pop
add
and
sub
and
ror
mov
xor
jmp
mov
and
add
shl
ror
not
xor
and
xor
xchg
jmp
push
sub
xor
mov
mov
mov
add
bswap
rol
add
sub
or
add
sub
or
ror
jmp
push
shl
nop
xor
and
sub
sub
jmp
push
mov
mov
mov
jmp
push
xchg
xchg
xor
shr
xor
or
add
or
xor
mov
neg
sub
xor
mov
jmp
pop
sub
sub
xor
or
ror
add
and
mov
jmp
push
neg
mov
sub
mov
or
and
shl
and
xor
mov
sub
shr
and
jmp
push
dec
xor
xchg
sub
or
not
mov
xor
xchg
jmp
mov
dec
or
sub
dec
mov
and
not
xchg
jmp
add
xor
nop
add
xchg
jmp
push
not
xchg
ror
mov
mov
xor
inc
sub
and
jmp
push
inc
dec
xor
or
and
mov
mov
bswap
ror
sub
sub
sub
jmp
mov
add
shl
mov
mov
dec
sub
sub
xor
xor
add
mov
not
jmp
call
and
neg
mov
xor
mov
rol
mov
and
jmp
jne
inc
add
and
shl
add
add
sub
ror
or
add
and
or
jmp
call
and
inc
inc
not
or
sub
dec
jmp
mov
add
mov
neg
and
jmp
mov
sub
shl
xor
sub
add
neg
sub
mov
add
ror
nop
add
xchg
jmp
call
or
mov
xor
xchg
mov
sub
xchg
shr
and
jmp
pop
xor
inc
and
or
mov
mov
add
ror
inc
neg
and
xchg
jmp
push
or
or
and
dec
or
mov
xchg
dec
jmp
mov
or
and
or
nop
xchg
neg
add
dec
add
and
and
sub
add
jmp
pop
and
or
or
rol
add
rol
or
xchg
inc
xchg
inc
inc
mov
mov
dec
jmp
pop
sub
xchg
ror
add
or
mov
jmp
mov
mov
shr
and
and
not
ror
neg
mov
and
mov
or
jmp
push
or
or
ror
ror
nop
xchg
or
jmp
pop
xor
ror
sub
or
sub
and
or
sub
shr
or
and
and
and
add
jmp
push
xchg
and
or
rol
mov
rol
or
and
shl
xor
nop
jmp
mov
xor
xchg
mov
mov
shl
jmp
push
neg
ror
xor
and
sub
xor
xor
add
xchg
bswap
inc
shl
sub
neg
or
jmp
push
inc
mov
xor
or
add
sub
and
neg
xor
mov
or
and
bswap
or
or
and
jmp
pop
and
bswap
sub
shr
mov
or
or
mov
jmp
pop
sub
xor
sub
shr
add
bswap
and
jmp
pop
or
nop
dec
jmp
mul
mov
xchg
sub
inc
add
shr
shr
or
and
shr
jmp
call
shr
shr
and
add
add
sub
jmp
mov
xchg
and
neg
jmp
push
bswap
or
sub
xchg
or
sub
dec
or
xchg
or
jmp
push
or
add
sub
dec
neg
and
not
and
or
sub
jmp
push
mov
xor
xchg
sub
and
bswap
jmp
jne
neg
rol
mov
neg
add
mov
xor
and
jmp
nop
xchg
or
sub
or
jmp
cmp
jmp
mov
mov
shr
or
or
xor
xor
or
or
xchg
and
jmp
push
or
sub
shr
xor
xor
mov
mov
dec
sub
jmp
push
sub
neg
jmp
call
mov
shr
xchg
add
xor
sub
xchg
xor
add
and
and
inc
xchg
inc
jmp
pop
xor
and
shl
add
inc
jmp
pop
add
nop
neg
inc
add
add
and
jmp
sub
xor
and
sub
dec
or
add
shr
and
xchg
and
or
or
jmp
call
add
or
dec
sub
and
bswap
mov
mov
jmp
mov
xor
add
or
sub
xor
bswap
sub
xchg
ror
xor
jmp
pop
sub
add
and
jmp
mov
or
add
dec
xor
bswap
and
add
xor
add
jmp
push
xor
shr
or
rol
xor
xchg
mov
jmp
push
ror
inc
or
inc
or
add
mov
jmp
pop
add
mov
jmp
push
xchg
mov
inc
sub
add
shr
or
shr
not
mov
inc
jmp
mov
xor
and
sub
or
mov
shl
or
ror
xor
add
jmp
pop
shr
and
shr
and
add
add
or
add
xchg
inc
add
jmp
add
xor
xor
or
sub
xchg
inc
xchg
jmp
call
ror
or
and
not
or
rol
jmp
call
xchg
nop
shl
sub
and
add
and
xchg
and
or
xor
inc
jmp
sub
sub
sub
sub
xchg
sub
add
jmp
mov
neg
xor
mov
xchg
add
jmp
call
shl
or
mov
neg
and
jmp
add
xor
add
add
or
xor
xchg
ror
sub
or
mov
jmp
pop
mov
sub
or
xor
jmp
push
add
xor
and
xor
inc
shl
jmp
pop
mov
xchg
ror
mov
sub
sub
jmp
call
and
dec
and
add
or
and
xor
xchg
shr
or
and
jmp
call
not
add
add
nop
xor
or
or
sub
and
sub
xchg
xchg
jmp
call
neg
sub
sub
xor
rol
xor
or
bswap
jmp
add
add
xor
and
xchg
xchg
ror
neg
and
rol
sub
dec
xor
mov
or
not
jmp
mov
neg
sub
and
add
xor
and
jmp
add
ror
and
shl
xchg
xchg
jmp
pop
inc
bswap
or
or
sub
and
dec
mov
add
add
xor
and
xor
jmp
ret
sub
and
sub
not
add
xor
ror
neg
xor
xor
jmp
push
xor
add
xor
shr
add
shl
add
xchg
mov
mov
or
rol
xor
jmp
call
sub
mov
rol
shl
jmp
pop
or
add
bswap
rol
xchg
and
xor
xchg
and
mov
sub
rol
sub
and
sub
jmp
pop
not
bswap
not
jmp
push
or
bswap
add
add
or
xor
jmp
mov
sub
or
mov
neg
dec
inc
jmp
nop
xor
rol
and
sub
jmp
mov
and
inc
shl
inc
inc
ror
and
xor
jmp
pop
mov
sub
ror
xchg
mov
sub
jmp
call
shr
xor
and
jmp
push
add
xor
and
add
jmp
call
xor
neg
shl
inc
jmp
push
sub
xor
dec
xor
xor
dec
neg
add
and
xchg
jmp
push
add
sub
or
mov
add
bswap
add
jmp
push
add
mov
or
and
dec
sub
not
add
mov
xchg
sub
jmp
push
add
or
dec
xor
mov
rol
and
xor
sub
ror
rol
jmp
pop
mov
mov
or
shl
mov
and
rol
mov
mov
jmp
push
sub
xchg
sub
sub
bswap
shl
and
or
and
jmp
xor
xor
and
mov
xchg
dec
or
add
bswap
or
sub
jmp
pop
xor
add
not
mov
xor
jmp
call
or
dec
jmp
pop
add
or
bswap
sub
mov
xor
sub
inc
add
and
jmp
pop
xor
sub
xchg
xor
sub
or
jmp
mov
add
or
or
or
or
neg
or
mov
not
xor
xchg
add
ror
jmp
push
inc
add
sub
xor
add
add
and
or
jmp
push
add
and
sub
xchg
dec
and
and
ror
add
mov
add
jmp
ret
add
sub
or
or
or
neg
sub
or
ror
or
or
jmp
call
xor
mov
xor
rol
add
and
mov
nop
xchg
xor
jmp
pop
bswap
and
or
xor
neg
dec
and
and
or
add
jmp
xor
mov
mov
mov
ror
sub
or
sub
or
add
jmp
push
inc
shr
bswap
mov
shl
and
and
jmp
push
add
inc
or
or
sub
sub
or
xor
nop
or
jmp
mov
neg
add
rol
dec
or
xchg
mov
xor
or
or
ror
jmp
mov
or
or
and
add
sub
or
dec
mov
rol
and
xchg
and
xor
sub
not
jmp
push
mov
xchg
and
or
add
or
sub
mov
add
sub
shr
jmp
pop
xor
or
or
add
xor
and
inc
mov
xor
inc
xor
add
jmp
push
xchg
sub
xor
xchg
ror
neg
xchg
add
and
jmp
mov
mov
bswap
add
add
and
jmp
push
xor
or
shr
xchg
add
mov
mov
or
shr
xor
jmp
call
add
sub
add
xchg
mov
or
jmp
call
xor
or
or
dec
xchg
and
jmp
call
xor
and
inc
jmp
call
mov
xchg
or
and
xor
sub
xor
jmp
push
and
or
and
add
xchg
jmp
pop
ror
inc
sub
mov
add
and
or
add
jmp
pop
mov
mov
and
mov
mov
add
xchg
xor
bswap
dec
and
jmp
mov
or
or
sub
ror
or
xchg
jmp
rol
neg
xchg
not
ror
not
bswap
sub
xor
ror
shr
not
xor
sub
xor
sub
jmp
pop
inc
xor
and
or
add
sub
or
xchg
xor
jmp
push
mov
ror
add
sub
rol
not
sub
not
bswap
and
jmp
mov
add
mov
xor
shr
rol
or
and
xor
jmp
push
mov
or
add
mov
xor
neg
sub
nop
or
jmp
push
sub
xchg
or
or
sub
xchg
jmp
call
sub
and
add
add
and
add
add
sub
add
or
add
jmp
pop
dec
add
or
or
add
sub
and
or
jmp
push
and
xor
xor
and
not
or
neg
shl
jmp
call
shl
neg
mov
not
shr
and
bswap
sub
sub
rol
ror
mov
sub
or
mov
sub
jmp
ret
or
mov
mov
mov
or
add
or
shl
and
inc
jmp
push
or
and
dec
not
xor
xor
or
xor
xor
xchg
shl
xchg
not
neg
jmp
push
xchg
xor
mov
or
xchg
and
ror
bswap
mov
or
not
and
jmp
ret
add
mov
or
xor
add
jmp
pop
bswap
add
xor
and
or
ror
and
add
jmp
pop
and
xor
mov
mov
jmp
push
and
add
or
or
not
xor
add
not
xchg
jmp
jmp
jmp
jmp
jmp
jmp
