sub
push
push
push
push
push
push
push
call
mov
test
jne
push
call
pop
pop
pop
mov
pop
add
ret
push
push
push
call
mov
test
jne
push
call
push
call
pop
pop
pop
mov
pop
add
ret
mov
lea
push
push
call
test
jne
push
jmp
cmp
jne
lea
push
push
push
call
test
jne
push
call
push
mov
call
push
call
pop
pop
pop
mov
pop
add
ret
lea
push
push
call
cmp
jne
mov
mov
push
call
cmp
je
lea
push
push
call
cmp
je
push
mov
call
push
call
pop
pop
pop
xor
pop
add
ret
push
call
push
mov
call
push
call
lea
push
push
push
push
push
mov
call
test
jne
mov
lea
push
push
push
push
push
push
mov
call
test
je
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
test
jle
mov
push
mov
xor
mov
inc
cmp
jl
pop
ret
nop
nop
mov
push
push
push
call
mov
add
test
jne
pop
ret
mov
mov
push
mov
push
push
push
push
call
push
push
push
push
call
push
call
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
mov
mov
xor
lea
mov
mov
rep
mov
lea
rep
mov
push
push
push
call
mov
push
push
call
mov
test
jne
pop
pop
pop
pop
add
ret
mov
or
xor
lea
repnz
not
sub
mov
mov
mov
mov
push
shr
rep
mov
and
rep
call
mov
push
push
mov
call
mov
push
call
mov
mov
mov
mov
shr
rep
mov
push
and
push
rep
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
lea
push
push
call
lea
lea
push
push
push
push
call
test
jne
pop
pop
pop
pop
add
ret
push
lea
push
push
call
add
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
push
push
call
pop
pop
pop
mov
pop
add
ret
mov
push
call
add
lea
push
call
lea
push
push
call
mov
add
test
jne
pop
pop
pop
pop
add
ret
push
push
push
push
mov
call
push
push
push
push
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
mov
xor
lea
mov
rep
stos
stos
mov
xor
lea
mov
rep
stos
lea
push
push
push
call
push
push
lea
push
lea
push
push
call
add
push
lea
push
push
push
call
mov
or
xor
lea
repnz
not
sub
mov
mov
mov
lea
shr
rep
mov
xor
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
rep
lea
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
ret
or
mov
repnz
not
sub
lea
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
rep
lea
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
jmp
pop
add
push
ret
mov
call
(bad)
test
mov
ret
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
ret
pusha
jmp
jmp
pop
add
push
ret
mov
call
(bad)
test
mov
ret
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
(bad)
(bad)
jmp
add
add
ret
mov
call
mov
ret
mov
lea
mov
mov
rep
stos
stos
mov
xor
lea
lea
rep
stos
stos
mov
or
xor
push
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
lea
push
call
mov
or
xor
lea
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
lea
or
repnz
not
sub
lea
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
lea
call
push
lea
push
push
lea
mov
call
lea
or
xor
repnz
not
dec
push
lea
push
lea
call
lea
call
mov
xor
lea
rep
mov
mov
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
push
push
call
push
call
pusha
jmp
jmp
pop
add
push
ret
mov
call
(bad)
test
mov
ret
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
ret
mov
xor
lea
mov
rep
stos
lea
lea
push
push
push
call
add
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
lea
push
push
push
push
push
push
push
lea
push
push
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
xor
push
call
push
push
push
call
push
call
test
jne
mov
push
push
call
push
call
add
mov
pop
mov
mov
mov
pop
ret
push
lea
push
push
push
push
push
push
push
call
mov
xor
lea
mov
rep
stos
stos
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
jmp
pop
add
push
ret
mov
call
mov
ret
pusha
jmp
jmp
pop
add
push
ret
mov
call
(bad)
test
mov
ret
push
push
call
mov
lea
push
push
mov
call
test
je
mov
lea
push
push
call
add
test
je
lea
push
push
call
test
je
lea
push
push
call
add
test
jne
mov
push
push
push
call
push
push
call
mov
xor
lea
mov
rep
stos
stos
mov
xor
lea
mov
rep
stos
stos
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
std
(bad)
jmp
add
add
adc
mov
mov
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
ret
lea
mov
push
push
push
push
push
call
cmp
jne
mov
mov
mov
pusha
jmp
jmp
pop
add
push
ret
mov
call
(bad)
test
mov
ret
lea
lea
push
lea
push
push
push
push
push
mov
call
test
jne
cmp
je
push
call
mov
lea
push
push
call
add
test
jne
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
mov
lea
push
push
call
add
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
ret
lea
or
xor
lea
repnz
not
sub
mov
mov
mov
lea
shr
rep
mov
xor
and
rep
lea
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
or
xor
lea
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
pusha
jmp
jmp
pop
add
push
ret
mov
call
(bad)
test
mov
ret
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
ret
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
or
repnz
not
sub
lea
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
ret
lea
push
push
call
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
add
xor
lea
mov
rep
stos
stos
lea
or
xor
lea
repnz
not
sub
push
mov
mov
mov
lea
shr
rep
mov
xor
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
call
add
test
jne
lea
push
lea
push
push
jmp
mov
or
xor
lea
repnz
not
sub
push
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
rep
lea
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
lea
push
call
pusha
jmp
jmp
pop
add
push
ret
mov
call
(bad)
test
mov
ret
push
call
mov
or
xor
lea
repnz
not
sub
push
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
push
and
push
push
push
rep
mov
lea
push
push
call
mov
cmp
mov
je
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
jmp
pop
add
push
ret
mov
call
mov
ret
pusha
jmp
jmp
pop
add
push
ret
mov
call
(bad)
test
mov
ret
push
push
call
push
call
lea
lea
push
lea
push
push
push
call
add
test
je
push
push
push
push
push
lea
push
push
call
push
push
push
mov
push
push
lea
push
push
call
lea
mov
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
push
mov
call
push
call
mov
push
call
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
jmp
pop
add
push
ret
mov
call
mov
ret
pusha
jmp
jmp
pop
add
push
ret
mov
call
(bad)
test
mov
ret
lea
push
push
call
or
lea
xor
lea
repnz
not
sub
mov
mov
mov
lea
shr
rep
mov
xor
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
push
call
add
push
call
pusha
jmp
jmp
pop
add
push
ret
mov
call
(bad)
test
mov
ret
pusha
jmp
jmp
pop
add
push
ret
mov
call
mov
out
ret
call
jmp
pop
add
push
ret
mov
call
mov
ret
mov
xor
lea
mov
rep
stos
stos
mov
xor
lea
mov
rep
stos
stos
push
lea
push
call
lea
lea
push
push
push
call
add
push
push
push
push
push
push
call
mov
or
xor
lea
repnz
not
sub
push
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
lea
push
push
push
call
call
mov
pop
cmp
pop
je
push
call
mov
xor
pop
mov
mov
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
cmp
jne
push
call
pop
ret
push
push
push
call
add
ret
push
call
neg
sbb
pop
neg
dec
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
and
push
call
pop
or
or
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
push
lea
push
lea
push
lea
push
call
push
push
call
call
mov
mov
push
push
push
call
add
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
jmp
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
add
loopne
add
repnz
add
or
add
es
add
cmp
add
pop
xchg
add
ins
xchg
add
jge
add
mov
add
pop
nop
add
sbb
add
xor
add
pop
nop
add
push
nop
add
test
add
cmps
nop
add
mov
add
ret
nop
add
rcl
add
out
nop
add
or
add
sub
add
dec
xchg
add
push
xchg
add
gs
add
jne
add
adc
add
xchg
add
ret
xchg
add
rcl
add
daa
push
add
cdq
add
cmp
add
bound
add
das
add
add
add
leave
xchg
add
loopne
add
(bad)
xchg
add
sbb
add
push
xchg
add
call
add
add
add
xchg
add
pop
xchg
add
adc
add
xchg
add
sub
xchg
add
inc
xchg
add
dec
xchg
add
bound
add
add
test
add
xchg
add
rcl
aad
add
fist
add
xchg
add
not
add
xchg
add
add
add
sub
add
(bad)
(bad)
(bad)
jmp
inc
add
add
add
add
add
nop
xor
(bad)
(bad)
(bad)
call
and
xchg
sbb
add
add
add
add
(bad)
(bad)
push
and
add
inc
sbb
jo
inc
add
add
add
jbe
sub
jo
jle
jp
js
outs
jg
jnp
cmp
jp
jle
outs
ins
xor
push
and
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
aaa
ss
sub
cmp
cmp
and
cmp
xor
sub
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
lods
stos
movs
lods
mov
leave
retf
int
iret
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
aaa
ss
sub
cmp
cmp
and
cmp
xor
sub
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
lods
stos
movs
lods
mov
leave
retf
int
iret
add
add
push
je
jb
add
add
push
push
inc
dec
pop
inc
jne
jb
outs
je
outs
outs
je
outs
ins
push
gs
push
gs
imul
push
push
gs
add
add
outs
jo
imul
gs
and
arpl
jae
add
add
jae
outs
jo
jae
jb
imul
outs
jb
add
je
push
gs
imul
je
and
jb
jb
dec
jo
outs
and
ja
gs
outs
outs
add
dec
push
push
push
gs
add
outs
and
dec
popa
outs
popa
addr16
gs
outs
jb
add
add
bound
pop
push
add
inc
inc
push
inc
add
add
and
add
add
je
popa
jo
bound
add
fs
and
arpl
add
and
and
je
and
push
popa
bound
or
add
add
and
imul
and
ins
and
add
add
ja
push
popa
bound
or
add
outs
imul
outs
fs
ins
xor
cs
add
add
outs
add
add
jae
arpl
ins
gs
popa
ins
add
push
inc
push
inc
push
push
add
jae
gs
xor
pop
jae
arpl
gs
add
jae
outs
popa
xor
cs
ins
add
add
jb
gs
xor
cs
ins
add
add
inc
gs
imul
pop
add
add
imul
ins
add
add
push
pop
inc
inc
push
inc
xor
add
and
jb
addr16
ins
and
ins
gs
dec
imul
pop
dec
pop
xor
outs
jae
popa
ins
ins
push
popa
je
add
inc
push
push
inc
push
inc
pop
dec
imul
pop
dec
pop
xor
arpl
add
xor
imul
add
add
imul
ins
add
add
ins
imul
ins
ins
add
je
ins
and
jb
jb
and
inc
and
imul
je
outs
outs
and
imul
add
add
add
add
inc
add
push
add
or
dec
add
add
inc
add
push
add
xor
add
dec
pop
xchg
add
add
or
repz
push
adc
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
les
clc
dec
inc
icebp
dec
mov
dec
pop
sub
cmp
and
cmp
inc
add
inc
pop
adc
dec
add
sub
cmp
push
pop
js
jge
jns
jnp
jge
jg
lods
xlat
jne
leave
mov
cs
shl
pop
fldcw
ds
shl
push
ins
jmp
lahf
push
addr16
or
loop
push
js
lea
pop
jmp
ds
std
jns
add
cmc
push
mov
in
jb
xchg
out
adc
(bad)
fld
test
mov
lock
repnz
cmc
div
test
cli
sti
mov
std
jmp
(bad)
dec
add
push
pop
or
or
in
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
mov
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
imul
push
push
push
push
push
push
push
push
pop
pop
dec
pop
pop
dec
pop
pop
pusha
popa
jb
fs
addr16
ins
outs
outs
lock
mov
jbe
dec
ins
jnp
sub
jle
adc
xchg
lea
xchg
xchg
xchg
xchg
xchg
fmul
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
movs
mov
div
clc
cmp
sti
cld
in
(bad)
inc
add
add
push
pop
or
or
or
push
movups
adc
xchg
adc
inc
sub
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
jl
fild
xor
daa
inc
inc
inc
dec
pop
dec
dec
dec
pop
dec
dec
push
pop
push
push
push
arpl
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
cmps
push
ins
outs
outs
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
(bad)
repnz
in
fbstp
in
in
cmp
jo
adc
jbe
div
clc
dec
cli
sti
(bad)
(bad)
jmp
and
pop
cmp
xchg
sbb
adc
xchg
pop
adc
pop
pop
and
(bad)
call
jnp
test
pop
aaa
mov
ss
push
ret
xchg
sbb
(bad)
aad
or
cmps
xor
push
and
pop
add
retf
fistp
inc
in
bound
add
call
mov
(bad)
xor
mov
outs
mov
bswap
add
jno
add
test
les
sahf
sbb
popf
in
add
pop
out
dec
in
mov
pop
mov
shr
div
or
out
xor
in
xchg
fdivr
pop
mov
fnstenv
mov
xchg
ss
cwde
int
mov
sbb
cmp
pop
sbb
mov
aad
and
rol
pop
ret
jo
cmp
jle
or
lea
push
push
sub
das
in
sub
sub
ss
shl
xchg
dec
pop
push
pop
dec
dec
(bad)
sbb
xchg
cmp
scas
fs
push
rol
xchg
sub
add
arpl
aaa
mov
loope
retf
xor
dec
test
(bad)
stos
lock
push
ja
rol
sub
jmp
fsubr
push
mov
xchg
adc
jno
dec
cmp
jb
add
and
add
ins
ffree
jns
push
mov
sub
arpl
mov
mov
loopne
enter
push
mov
dec
ret
arpl
push
aam
stos
mov
rol
add
push
cmp
sbb
push
hlt
icebp
sub
enter
stc
fistp
jmp
xlat
loopne
mov
sbb
std
xor
cmc
jb
idiv
shl
bound
fild
test
cli
jecxz
in
shl
in
sbb
inc
push
xor
aam
jae
leave
pusha
repz
sub
arpl
mov
xchg
aaa
cmp
dec
pop
and
sbb
test
lods
out
mov
push
or
test
xchg
mov
popa
mov
pop
jecxz
test
test
imul
hlt
icebp
mov
sbb
xchg
mov
mov
xor
fisub
ret
mov
mov
and
test
sbb
mov
retf
mov
push
lea
clc
cmp
ret
test
dec
jecxz
(bad)
jnp
ins
push
outs
mov
fimul
out
mov
test
sbb
lods
pushf
(bad)
xor
pop
or
mul
sbb
icebp
inc
scas
ja
test
femms
adc
jg
pop
fdivrp
pop
sub
test
jg
test
in
movs
in
fwait
es
mov
mov
mov
and
call
mov
mov
or
sub
push
mov
test
cmc
outs
jno
jo
and
fimul
jnp
and
add
popa
inc
dec
jecxz
sub
pop
dec
movs
add
cmc
cmc
outs
adc
pushfw
xor
mov
ja
cmp
xor
mov
push
cld
retf
in
cmps
sub
mov
rol
ins
repz
add
xchg
into
mov
call
and
adc
push
fimul
es
addr16
call
pop
sahf
mov
je
retf
je
cmp
cmp
jl
(bad)
movs
mov
sahf
cmp
jmp
fld
mov
es
scas
push
imul
retf
fstp
sar
ss
pop
test
ins
push
and
shr
dec
call
shr
dec
jo
stc
leave
push
dec
xchg
in
push
inc
mov
inc
mov
into
(bad)
mov
jmp
test
pop
pop
ror
mov
mov
xlat
out
call
or
scas
mov
cwde
xor
je
mov
jmp
mov
fdivr
lock
sub
test
sbb
fdivp
cs
(bad)
dec
loop
or
fstp
mov
ret
or
mov
movs
xchg
shl
hlt
enter
inc
push
xbegin
dec
mov
sbb
pop
inc
(bad)
clc
adc
hlt
push
cmp
xchg
inc
loop
(bad)
stos
data16
dec
or
(bad)
fst
sbb
ss
add
cmp
ins
ror
or
sub
pop
jl
test
sbb
adc
mov
and
and
imul
int
sub
ja
mov
mov
movs
inc
shl
fcmovnu
mov
loope
(bad)
cli
add
push
lahf
js
loop
rol
retf
retf
add
cmps
ret
cmp
sub
jae
jnp
stos
xchg
data16
and
in
sbb
(bad)
push
inc
jnp
dec
or
pop
jmp
aas
adc
mov
arpl
movs
movs
leave
repnz
or
je
in
shl
sub
xor
das
(bad)
nop
unpckhps
add
stc
sbb
loope
movs
sub
inc
mov
or
mov
mov
xchg
add
xchg
sbb
enter
in
xchg
daa
jae
dec
mov
and
stos
dec
mov
call
cmps
inc
adc
cmc
pop
aaa
hlt
enter
retf
xchg
adc
and
inc
aad
jg
pop
jle
mov
cmp
in
ins
mov
sub
and
js
in
rcl
mov
out
inc
in
cmp
dec
mov
sbb
sbb
cmp
push
pop
cmp
fiadd
mov
mov
push
push
icebp
push
(bad)
in
hlt
cmps
inc
inc
fcmovnbe
xchg
movs
inc
xchg
mov
push
scas
jno
les
mov
jl
rol
jnp
test
mov
stos
or
xor
stos
aam
cwde
enter
xchg
mov
nop
jmp
cmp
das
push
inc
inc
mov
mov
add
dec
push
arpl
sar
rcl
paddusw
mov
je
jns
adc
or
mov
sub
adc
ins
push
test
lock
mov
pop
scas
call
fwait
das
sub
mov
mov
adc
rcl
push
retf
std
ret
xor
inc
scas
in
mov
or
xlat
lods
outs
pop
lahf
pop
imul
out
call
fsubrp
cmp
cli
jmp
ins
fst
pop
test
ins
cld
push
xor
xchg
mov
jno
pop
cmp
hlt
push
inc
jnp
fwait
jnp
dec
cdq
rcl
dec
mov
xchg
sti
sti
out
adc
add
lods
pusha
sbb
(bad)
jne
jmp
pop
test
push
scas
sbb
aam
or
push
sbb
ret
mov
dec
dec
and
lea
fwait
sahf
and
pop
stos
xchg
mov
das
out
sahf
or
cdq
in
jae
sbb
ss
xor
jnp
mov
(bad)
cli
test
imul
repz
xor
adc
es
jle
cmps
ds
cmp
sbb
push
enter
mov
mov
pop
adc
ror
xchg
adc
faddp
xchg
and
dec
mov
das
(bad)
push
aaa
or
push
dec
sub
sbb
pusha
ficomp
fdivr
push
xchg
push
mov
or
and
pop
lock
js
(bad)
(bad)
cmp
mov
repnz
jno
adc
and
cmovne
int3
shl
xor
xor
sub
pushf
fisub
adc
mov
jmp
lods
scas
mov
push
xor
leave
gs
mov
fisubr
jb
and
scas
outs
adc
test
add
mov
ret
mov
mov
mov
inc
cmp
jae
sub
out
adc
and
adc
xchg
pusha
out
sbb
pop
mov
ret
fld
inc
or
rcl
adc
push
(bad)
jge
push
xor
jge
ss
pop
add
mov
dec
jae
adc
pusha
xchg
pop
xchg
push
xchg
push
mov
arpl
das
cld
jbe
aas
inc
jp
repz
bnd
xchg
push
fucomi
or
lea
xchg
sbb
lahf
lds
xchg
(bad)
call
fsubr
ja
fisub
sub
popf
test
daa
push
cli
shl
xchg
adc
nop
push
nop
mov
jns
adc
sbb
fwait
cmc
xchg
jge
xchg
in
pop
jae
data16
mov
or
ror
ss
jne
pop
fwait
stc
lods
push
jmp
mov
adc
nop
add
rcl
je
cli
shl
mov
xor
or
mov
stc
sti
jp
dec
pop
and
push
sub
dec
retf
js
jp
jge
or
rol
sbb
ins
and
xchg
xchg
add
ret
cs
adc
cmp
mov
aam
push
dec
sahf
sbb
xchg
sub
cwde
inc
xor
jbe
and
aas
mov
dec
sahf
in
retf
sbb
lds
and
or
daa
in
mov
add
cmp
std
daa
sbb
call
push
lahf
xor
mov
inc
fstp
and
mov
test
push
dec
hlt
jno
mov
jmp
ror
mov
xor
mov
and
adc
cmp
add
and
sar
mov
sub
cs
or
retf
fcomp
jnp
adc
into
sub
daa
cs
fwait
xchg
dec
mov
sbb
pop
cmps
gs
adc
jl
out
add
dec
sub
jo
sub
cmps
push
inc
xchg
sub
or
das
jg
retf
aas
xchg
