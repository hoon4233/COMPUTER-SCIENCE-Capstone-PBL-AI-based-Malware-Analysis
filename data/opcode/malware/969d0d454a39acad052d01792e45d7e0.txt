mov
addr16
mov
sub
pop
cdq
cs
pop
cdq
ss
inc
mov
lods
enter
out
aad
pushf
add
mov
scas
test
enter
enter
xor
push
mov
cdq
add
pop
xor
cli
enter
setns
pop
or
es
xchg
inc
jb
dec
push
imul
int3
mov
movs
dec
dec
loop
xlat
sub
imul
mov
ss
inc
inc
push
test
loopne
rcr
xor
rol
ds
jmp
fxch
loopne
pop
push
mov
add
jmp
add
inc
dec
data16
mov
mov
scas
leave
mov
clc
fisubr
ror
fiadd
dec
ss
test
inc
fld
inc
xor
cli
rol
mov
pop
ficom
xor
enter
inc
ss
jae
fs
call
adc
mov
push
cmp
mov
xor
or
adc
mov
sbb
mov
mov
loop
jae
xor
rcr
jge
movs
cmp
into
cmps
mov
mov
jne
add
sar
dec
retf
lods
mov
ss
add
lods
mov
mov
int3
jae
sub
mov
mov
xlat
es
inc
lods
xchg
into
inc
mov
mov
sub
mov
jns
test
jp
pushf
repz
test
es
push
dec
lock
mov
out
inc
add
int
rol
imul
mov
ds
mov
mov
es
mov
jge
scas
loopne
movd
push
mov
mov
into
sub
sub
daa
mov
int
daa
sbb
mov
jae
cmps
xlat
ftst
pop
or
ss
inc
in
inc
add
inc
ds
jmp
add
jg
inc
or
call
mov
mov
es
or
xchg
into
inc
push
arpl
inc
mov
mov
fnstcw
retf
cmp
mov
es
lock
stos
neg
inc
je
call
inc
jle
fxch
pop
sahf
xchg
bsf
fs
retf
mov
jmp
xor
fidiv
retf
imul
(bad)
aas
mov
mov
dec
mov
mov
cmps
in
sub
pop
mov
in
jle
mov
fdiv
jp
ja
enter
push
dec
out
xor
fsubr
mov
lea
mov
fcom
push
iret
sti
inc
mov
mov
push
and
inc
mov
dec
sbb
jmp
add
mov
aas
mov
mov
sub
aaa
mov
cmp
test
jnp
xor
fs
fld
lock
fsin
or
push
xor
fst
jmp
xor
push
inc
jmp
stos
leave
mov
and
inc
xlat
es
xlat
es
mov
stc
dec
push
fwait
cmc
inc
mov
outs
stos
inc
mov
pop
dec
test
fyl2xp1
pop
inc
push
cwde
mov
inc
push
pushf
mov
les
mov
jnp
stc
mov
mov
pop
dec
test
movs
icebp
mov
mov
das
or
inc
mov
int3
sbb
out
dec
push
xor
imul
add
cmp
shr
clc
fiadd
adc
aas
mov
dec
mov
into
fdivr
mov
sar
inc
mov
addr16
push
xchg
mov
mov
ss
inc
into
int3
cmp
push
jo
mov
sar
inc
mov
addr16
mov
int3
test
scas
je
pop
scas
leave
mov
loope
sbb
pop
movs
pusha
push
out
jo
enter
push
inc
rcr
mov
xor
je
mov
movs
jmp
mov
lods
leave
mov
xor
je
mov
pop
jae
stc
lods
leave
mov
mov
xor
sub
push
sbb
ss
out
jae
cmp
fbstp
push
dec
lods
leave
push
test
ss
sbb
loope
mov
scas
leave
mov
jne
int3
ret
and
dec
xor
fxch
mov
jl
inc
mov
mov
fiadd
mov
mov
in
retf
pushf
inc
mov
mov
jmp
pop
ss
rcl
mov
mov
mov
mov
xor
jo
inc
fnstenv
leave
xchg
into
inc
arpl
std
cmps
mov
mov
push
test
inc
or
shl
xor
movs
mov
jae
leave
test
daa
mov
int3
pop
mov
mov
inc
fld
mov
inc
fld
mov
inc
fld
(bad)
mov
es
mov
js
mov
add
adc
jno
push
mov
leave
mov
add
shr
mov
clc
fidivr
je
es
shr
nop
lock
pushf
adc
jnp
jl
mov
xor
aad
jg
dec
and
clc
lock
arpl
clc
fiadd
mov
inc
js
clc
retf
inc
jns
sbb
retf
fcom
jmp
pop
push
mov
leave
mov
arpl
jg
dec
retf
mov
mov
es
shr
nop
lock
pushf
adc
jnp
jl
mov
xor
aad
jg
dec
and
clc
lock
add
shr
mov
clc
fidiv
leave
xchg
into
inc
arpl
jecxz
inc
sub
imul
enter
test
sbb
arpl
jg
dec
retf
jae
leave
xchg
into
inc
xor
addr16
arpl
inc
movd
lock
xchg
leave
and
add
stc
lock
cli
mov
jns
sbb
retf
fcom
jmp
pop
ss
pop
jne
jbe
mov
inc
and
idiv
es
mov
shl
sti
(bad)
xor
jo
loopne
iret
adc
js
add
fnstenv
ss
add
jo
mov
jns
addr16
xor
jnp
xor
je
jp
rcr
je
fxch
pop
ja
adc
jno
push
mov
add
jmp
mov
loope
ss
mov
test
es
aad
xchg
inc
mov
cs
xlat
es
clc
das
mov
rol
mov
jns
sbb
retf
fist
add
jmp
out
mov
cmp
dec
sbb
das
add
jne
enter
xor
out
cs
inc
inc
adc
pop
inc
jne
retf
imul
fiadd
inc
mov
in
retf
pusha
pop
out
jo
enter
push
adc
retf
stos
inc
ds
mov
es
es
clc
(bad)
fsubr
lods
(bad)
into
inc
push
scas
cld
inc
mov
daa
je
jp
dec
dec
sub
xor
dec
jge
ficom
mov
stos
leave
mov
into
fdiv
mov
out
cwde
mov
dec
retf
test
ds
adc
xchg
mov
lods
pushf
mov
mov
leave
les
mov
std
sbb
scas
leave
cmps
mov
stc
inc
mov
int3
test
scas
je
inc
scas
dec
adc
inc
jg
and
xlat
mov
add
inc
mov
fist
push
or
cmp
idiv
es
mov
add
idiv
es
lds
or
inc
mov
pop
cmp
mov
es
cmp
pop
sbb
das
add
jo
ret
fld
movs
test
inc
aad
jae
mov
fdiv
inc
push
sub
daa
in
pop
fs
cmp
jae
inc
jbe
push
jns
mov
inc
mov
mov
test
inc
push
jp
inc
mov
es
dec
xor
inc
mov
lods
leave
dec
data16
ss
jae
mov
pop
js
mov
mov
ds
es
daa
mov
inc
je
cmp
lock
es
mov
(bad)
jnp
xor
push
mov
inc
and
idiv
es
push
dec
pop
mov
or
mov
mov
pop
cmp
mov
in
sub
push
(bad)
inc
mov
inc
mov
inc
scas
leave
stos
push
pop
cmp
mov
stos
stc
mov
pop
lahf
mov
es
ss
test
ret
enter
arpl
jo
shr
cmp
jae
inc
scas
dec
rol
mov
call
es
pop
fs
clc
(bad)
fmul
test
cwde
jle
mov
arpl
jge
mov
retf
or
sbb
das
add
mov
inc
mov
das
dec
ss
mov
or
inc
es
clc
sub
mov
cmp
mov
sbb
loopne
mov
mov
adc
jmp
fmul
(bad)
(bad)
dec
inc
arpl
shl
push
fnstenv
cwde
mov
xor
mov
mov
fdiv
jle
rcr
je
fxch
pop
movs
pusha
push
out
jo
cld
jo
test
leave
jge
mov
aad
mov
jnp
inc
ds
jo
arpl
cmp
push
ss
mov
aad
mov
inc
scas
dec
test
scas
jl
outs
btc
cs
pop
mov
cs
leave
and
es
es
push
mov
enter
in
pop
mov
ds
retf
imul
fiadd
loope
mov
mov
clc
inc
ds
jo
ds
jo
leave
jno
pop
sbb
xchg
into
inc
push
ins
add
test
inc
jo
mov
add
push
inc
scas
dec
test
das
push
aaa
mov
int
enter
inc
lea
mov
mov
movs
jmp
jb
scas
dec
add
adc
jae
inc
movs
jmp
mov
enter
and
mov
push
pop
or
inc
xlat
es
xlat
and
inc
xlat
es
mov
mov
jecxz
mov
and
inc
xlat
fsubr
arpl
std
cmps
mov
mov
dec
mov
lock
adc
test
mov
mov
dec
mov
dec
(bad)
into
inc
inc
push
je
xlat
dec
mov
fidivr
xor
jl
clc
(bad)
add
stos
inc
dec
mov
js
mov
add
inc
mov
fist
mov
mov
fdiv
jle
dec
inc
mov
mov
inc
es
pop
mov
xor
js
inc
fld
(bad)
jns
jb
in
into
cld
mov
jge
or
pop
push
retf
mov
push
dec
jecxz
mov
fdiv
gs
push
retf
cmp
cmp
jae
inc
jbe
test
jns
movd
test
inc
mov
and
or
in
(bad)
pop
fnstenv
in
xchg
loopne
es
test
fisttp
xor
jo
jge
cs
outs
retf
jae
inc
scas
dec
into
cmp
jae
inc
jbe
and
enter
mov
inc
xor
retf
test
mov
jno
inc
xor
fsub
and
mov
jmp
dec
cmp
inc
mov
es
jge
jb
push
fbstp
inc
movs
dec
dec
xor
retf
retf
jae
inc
lods
or
jmp
(bad)
movs
fwait
xor
add
add
jb
in
xchg
loopne
es
test
fstp
xor
jo
jge
or
mov
fwait
xor
test
xor
mov
adc
out
aad
ins
add
fdiv
push
cmp
movs
dec
dec
xor
jmp
cmps
dec
mov
sub
mov
mov
sub
(bad)
sbb
jb
std
jbe
mov
mov
cld
es
jns
xor
xor
loopne
inc
in
xchg
inc
mov
fdiv
ds
idiv
mov
lea
cmps
dec
xchg
cwde
mov
mov
es
sbb
shl
ds
jle
(bad)
aad
ins
add
fdiv
push
sub
inc
movs
dec
dec
sbb
inc
mov
mov
inc
daa
mov
dec
lea
jl
into
inc
aad
sub
mov
(bad)
xchg
es
xlat
daa
in
pop
fs
add
jae
inc
jno
mov
jae
jns
mov
inc
mov
mov
or
inc
fdiv
mov
dec
and
sbb
shl
ds
jle
(bad)
aad
ins
add
fdiv
push
scas
jns
inc
movs
dec
dec
sbb
inc
mov
mov
inc
daa
mov
dec
lea
push
(bad)
into
inc
aad
sub
mov
(bad)
xchg
es
xlat
daa
in
pop
fs
add
jae
inc
jno
add
fnstenv
jns
mov
inc
mov
mov
or
inc
fdiv
mov
shr
cmp
dec
sub
in
sbb
shl
ds
jle
(bad)
adc
mov
daa
in
pop
mov
in
xchg
inc
push
xlat
js
inc
movs
dec
dec
sbb
inc
mov
mov
inc
daa
mov
dec
lea
(bad)
inc
aad
sub
mov
(bad)
xchg
es
pop
xlat
daa
in
pop
fs
add
jae
inc
jno
in
dec
fnstenv
jns
mov
inc
mov
mov
(bad)
into
inc
xor
fld
ds
jle
(bad)
adc
mov
aad
dec
mov
fnstenv
mov
push
cmp
mov
fnstenv
in
into
and
inc
(bad)
test
loopne
xor
mov
jb
add
es
cmp
mov
cmps
and
mov
fnstenv
in
lods
or
ss
jae
loope
leave
mov
dec
and
inc
(bad)
enter
mov
inc
jno
retf
add
cmp
jo
mov
dec
inc
mov
fnstenv
mov
es
sbb
jae
inc
paddd
sub
idiv
or
dec
(bad)
and
es
(bad)
sbb
mov
mov
fmul
cmp
pop
(bad)
fnstenv
in
lods
mov
fwait
dec
lds
mov
imul
sbb
jmp
pop
(bad)
sub
lods
mov
test
es
dec
cmp
mov
stos
or
mov
fmul
test
sbb
clc
fiadd
cmp
jo
mov
mov
es
push
fnstenv
in
lods
or
ss
jae
test
add
and
pusha
jo
es
xor
fmul
cmp
jae
inc
jbe
jnp
jno
retf
xor
fbld
mov
fdiv
jle
icebp
mov
mov
ret
inc
jbe
(bad)
push
fnstenv
in
lods
mov
jmp
jb
scas
dec
rol
mov
pop
cmps
addr16
es
sbb
jae
inc
es
inc
fnstenv
aad
sub
mov
fdiv
push
pop
loopne
mov
and
(bad)
xlat
es
es
dec
out
leave
inc
mov
fdiv
cmp
jae
inc
jbe
es
fs
cmp
jae
inc
jbe
jl
es
jns
add
sbb
or
inc
fdiv
mov
fdiv
cmp
or
inc
fdiv
xor
imul
mov
add
xor
retf
pop
lahf
mov
es
ss
fs
sbb
outs
xor
jo
jge
or
es
sbb
or
inc
xor
fsubr
cmp
mov
fmul
test
cwde
jle
mov
arpl
jge
or
mov
dec
push
or
inc
fdiv
mov
fmul
test
fld
xor
jo
jge
or
mov
inc
es
mov
es
gs
push
retf
dec
(bad)
int
jb
mov
fnstenv
xor
hlt
mov
cmp
stos
cmp
inc
fdiv
push
ss
inc
mov
push
jae
inc
movs
pusha
push
xor
xor
mov
lods
xor
inc
fdiv
sbb
leave
scas
leave
mov
mov
jp
mov
rcr
dec
cmp
inc
mov
fdiv
xor
fsubr
int
into
inc
mov
fmul
test
cwde
jle
mov
arpl
jge
or
es
add
add
daa
mov
mov
fsubr
mov
fdiv
cmp
pop
jnp
jno
retf
add
cmp
jo
mov
push
inc
mov
inc
jae
inc
cs
mov
fwait
in
inc
(bad)
mov
(bad)
inc
xchg
in
inc
fldenv
fnstenv
jns
add
sbb
jae
jle
xchg
cmps
xor
inc
(bad)
mov
add
es
(bad)
dec
fnstenv
mov
and
adc
mov
fsubr
loopne
into
inc
xor
fsubr
ds
into
xor
jae
inc
movs
inc
mov
mov
fidiv
inc
cmps
addr16
mov
jle
mov
inc
(bad)
mov
add
mov
jbe
(bad)
es
jns
out
xor
fsubr
in
into
inc
xor
fsubr
ds
ret
leave
inc
mov
fdiv
leave
es
(bad)
cmp
lods
mov
fwait
dec
lds
mov
adc
mov
mov
adc
movs
cmp
in
lods
mov
(bad)
and
jb
in
lods
mov
(bad)
push
fnstenv
mov
mov
push
fnstenv
mov
bound
dec
fnstenv
mov
(bad)
inc
es
mov
scas
or
inc
fdiv
jle
or
ss
jae
mov
xor
leave
sub
(bad)
ins
fnstenv
in
lods
mov
(bad)
imul
or
bnd
inc
jbe
jae
jo
enter
mov
inc
jo
enter
mov
inc
jo
retf
push
retf
or
ss
jae
mov
stos
mov
(bad)
sbb
xor
out
aad
cmp
mov
es
inc
in
inc
add
inc
ds
jmp
add
cmps
xchg
push
push
icebp
mov
es
inc
mov
es
aad
mov
jns
xor
jae
and
popf
push
pop
dec
push
inc
fnstenv
inc
int
test
(bad)
lea
es
push
pop
in
es
loope
lahf
cmps
inc
je
ss
push
retf
jb
enter
jp
jo
inc
fnstenv
jecxz
sbb
loopne
mov
out
dec
inc
mov
jno
adc
add
retf
imul
fiadd
add
dec
in
data16
es
xlat
es
es
jp
movs
fisub
mov
in
retf
pusha
push
out
jo
push
mov
lock
inc
add
test
clc
idiv
es
sar
es
dec
daa
jl
jnp
test
inc
add
cwde
cs
mov
mov
mov
and
(bad)
mov
es
loope
mov
mov
and
mov
sub
cmp
inc
mov
test
jae
cmp
sbb
inc
mov
(bad)
jb
cmps
mov
mov
dec
or
(bad)
mov
xor
je
mov
iret
mov
mov
mov
lea
mov
jp
std
mov
and
mov
es
inc
and
dec
rol
mov
and
mov
push
cmp
mov
mov
and
inc
mov
es
mov
adc
mov
addr16
lods
mov
inc
push
pop
jae
inc
ror
inc
leave
and
inc
mov
es
mov
adc
mov
fnstenv
mov
cs
inc
mov
mov
jnp
out
inc
mov
mov
adc
test
jecxz
es
mov
daa
clc
inc
mov
idiv
(bad)
retf
sbb
and
cld
mov
es
inc
fnstenv
mov
and
inc
mov
gs
mov
push
add
sbb
and
(bad)
mov
es
mov
mov
addr16
dec
daa
jl
jnp
sbb
and
fdivrp
lea
mov
out
mov
(bad)
add
fdivr
es
stos
pop
mov
retf
mov
and
mov
mov
test
std
es
mov
mov
mov
cld
es
mov
push
cmp
mov
mov
mov
jl
dec
scas
dec
sar
gs
mov
iret
inc
inc
mov
mov
dec
or
addr16
inc
pop
jbe
add
xchg
inc
mov
lock
fiadd
(bad)
sub
cmps
mov
pop
int
jb
mov
sbb
addr16
cmp
mov
mov
push
adc
leave
xchg
into
inc
push
or
inc
mov
int
mov
mov
scas
dec
ret
mov
adc
mov
out
adc
les
(bad)
mov
adc
mov
mov
out
int
mov
es
test
mov
mov
arpl
or
cld
loop
bt
nop
leave
mov
mov
es
rcr
ss
mov
push
cmp
inc
mov
sbb
mov
bound
dec
sub
bound
push
cmp
je
ds
and
(bad)
and
(bad)
cmps
icebp
mov
mov
adc
mov
(bad)
add
leave
mov
es
ret
mov
arpl
rcr
ss
icebp
mov
mov
and
test
add
test
scas
inc
add
xor
inc
xor
mov
sbb
mov
es
mov
int3
inc
iret
std
or
inc
add
test
scas
inc
add
xor
inc
xor
mov
xchg
mov
int3
inc
iret
std
jae
leave
xchg
into
inc
xor
movs
fwait
push
and
mov
jge
sub
imul
repnz
jae
add
shr
clc
fiadd
idiv
es
pop
mov
xor
in
pop
mov
test
jecxz
es
pop
mov
test
mov
mov
loopne
jle
mov
test
cld
es
pop
mov
test
pop
mov
test
jecxz
rcr
pop
movs
pusha
xor
jo
clc
adc
fwait
xor
jae
leave
xchg
into
inc
aad
add
fstp
test
into
xchg
inc
mov
inc
inc
xor
retf
dec
push
dec
data16
cmps
les
rcr
mov
fcomp
mov
movs
jmp
jb
scas
dec
rcr
mov
es
push
popa
daa
mov
sahf
jmp
arpl
jle
mov
pop
fs
clc
(bad)
jae
leave
xchg
into
inc
jp
cmp
mov
jle
inc
dec
lds
test
xchg
lea
es
add
stos
stc
xchg
add
mov
aad
into
clc
into
fsubr
mov
arpl
inc
xor
cld
es
xor
adc
xlat
add
sbb
inc
xlat
es
xlat
and
pop
into
adc
mov
jbe
sbb
lea
inc
and
idiv
es
inc
push
sub
mov
dec
mov
es
jbe
mov
lds
mov
loopne
mov
stos
leave
stos
in
fyl2xp1
repz
adc
js
cld
es
push
pop
int
ret
test
mov
in
retf
pusha
addr16
jo
mov
fiadd
mov
clc
cli
add
dec
xor
jl
lock
mov
pop
pop
retf
add
sub
(bad)
into
clc
into
fdivr
arpl
xlat
fnstenv
mov
cdq
jae
addr16
clc
shl
cmp
jo
std
mov
in
jno
inc
fdivr
xchg
retf
je
jp
mov
or
enter
inc
xor
(bad)
mov
loope
mov
add
adc
jno
ss
ror
and
idiv
es
jge
(bad)
or
inc
sbb
inc
mov
bound
inc
mov
bound
inc
mov
bound
inc
mov
es
clc
add
mov
scas
cwde
jnp
arpl
mov
leave
mov
fistp
cwde
jge
in
(bad)
sub
mov
fadd
dec
or
call
es
inc
movs
inc
mov
cwde
push
test
stc
cmp
pop
mov
pop
dec
shr
xor
and
ss
cmp
inc
dec
dec
dec
xor
mov
add
push
jg
inc
mov
dec
pop
push
xor
cdq
xchg
add
in
into
rcr
mov
movs
inc
mov
jmp
movs
inc
xchg
test
xor
js
clc
add
mov
into
mov
call
daa
mov
int
dec
or
sub
or
mov
es
dec
cmp
adc
inc
(bad)
ret
sbb
je
cmp
ins
add
ret
and
je
push
and
stc
jbe
fimul
stos
mov
sbb
aaa
scas
sbb
inc
mov
fimul
stos
mov
push
call
jb
inc
ds
mov
jge
add
inc
mov
push
jmp
jg
and
pop
xor
bts
push
(bad)
inc
movs
fs
cmp
pusha
add
dec
or
mov
mov
and
ss
movs
inc
mov
jmp
movs
inc
xchg
test
clc
fiadd
push
lods
stos
enter
je
push
and
push
inc
scas
cwde
inc
mov
sbb
mov
mov
movs
fs
cmp
sbb
ret
and
je
push
and
jle
sub
aaa
mov
es
pop
push
(bad)
(bad)
inc
mov
jb
inc
mov
scas
mov
mov
cmps
jae
mov
xchg
jno
inc
jns
sbb
retf
pusha
dec
out
jo
mov
mov
cmp
jg
es
dec
cli
cmps
jae
mov
cmps
jae
mov
pusha
pop
push
mov
fs
mov
(bad)
gs
mov
sub
inc
leave
xchg
into
inc
mov
fst
les
sar
es
fwait
in
into
or
mov
sub
inc
mov
es
fs
inc
mov
fimul
clc
fiadd
push
mov
arpl
mov
arpl
push
int
leave
mov
stos
enter
mov
clc
fiadd
xchg
xor
lea
dec
stos
enter
fnstenv
mov
fisttp
mov
xchg
test
ds
mov
clc
fimul
mov
add
mov
scas
pushf
mov
mov
fiadd
pop
mov
into
mov
clc
fimul
push
scas
mov
mov
jo
cmc
call
fnstcw
inc
push
push
jo
inc
movs
dec
dec
loop
xlat
mov
add
inc
mov
fist
inc
(bad)
pop
stc
jae
mov
es
mov
loopne
mov
jnp
jg
inc
(bad)
mov
stc
jae
mov
mov
or
mov
daa
clc
pop
cmp
(bad)
dec
leave
jae
cmp
mov
and
sbb
push
fnstenv
sub
inc
dec
xor
cmp
(bad)
aad
mov
fnstenv
mov
es
aad
mov
xor
sbb
sub
mov
inc
push
ret
aam
mov
fnstenv
mov
es
dec
leave
jae
mov
leave
jae
(bad)
out
ret
and
mov
jae
inc
loopne
mov
fnstenv
mov
sbb
pop
and
jg
push
sbb
(bad)
daa
and
push
fnstenv
pop
and
push
test
adc
xchg
(bad)
fnstenv
mov
cmps
xor
mov
sbb
es
fnstenv
cmp
push
mov
or
sub
push
mov
push
xor
stos
scas
push
inc
mov
mov
mov
inc
lods
mov
push
mov
inc
mov
daa
dec
movs
mov
leave
jae
cli
cmps
dec
inc
lods
mov
shl
inc
push
pop
into
cmp
fs
mov
movs
sub
push
stos
mov
dec
jae
mov
leave
jae
inc
xchg
push
pushf
inc
fldenv
fnstenv
jns
add
aaa
fbld
jae
ss
add
cdq
jl
mov
inc
lods
mov
js
fwait
je
inc
fyl2xp1
dec
cli
cmps
jae
mov
cmps
jae
mov
scas
push
inc
mov
mov
addr16
mov
(bad)
mov
nop
jae
inc
into
xchg
cmp
arpl
lods
or
arpl
jae
inc
(bad)
inc
fld
mov
jmp
jae
gs
jae
push
pop
fild
iret
int3
inc
mov
aad
mov
xor
retf
arpl
fnstenv
ss
lods
inc
(bad)
mov
and
mov
sub
pushf
inc
fld
(bad)
dec
leave
jae
jl
mov
fs
inc
jl
mov
fimul
mov
inc
cmps
xor
mov
(bad)
ret
add
push
mov
aad
xor
mov
es
mov
mov
scas
sbb
arpl
jae
jg
pop
mov
pop
(bad)
sbb
mov
popf
inc
(bad)
and
lods
or
arpl
jae
sub
mov
cmp
or
(bad)
fnstenv
cmp
push
mov
(bad)
fnstenv
mov
fnstenv
inc
xchg
push
pushf
inc
fldenv
es
cmp
push
mov
(bad)
fnstenv
(bad)
lods
or
cmp
or
add
push
mov
aad
mov
dec
mov
sub
dec
out
lods
sbb
(bad)
fnstenv
push
sub
sub
mov
pushf
inc
fldenv
inc
and
idiv
es
aad
mov
ss
push
pushf
inc
fldenv
mov
sub
dec
or
dec
mov
popf
mov
inc
xor
js
inc
ftst
inc
lods
mov
push
sbb
inc
mov
fnstenv
jge
or
mov
mov
lea
lods
or
or
mov
mov
cmps
icebp
dec
mov
mov
mov
pop
push
mov
movs
mov
mov
mov
dec
(bad)
push
clc
jae
mov
fnstenv
ss
push
mov
cmps
mov
enter
ds
mov
test
stc
pop
xor
bts
xor
ret
test
stc
dec
xor
bts
das
ret
(bad)
dec
or
dec
mov
sbb
jae
cmp
(bad)
stos
mov
lods
mov
mov
into
jae
stc
push
mov
cmp
push
mov
dec
int
enter
mov
dec
lods
fwait
retf
lods
popa
mov
pop
stc
jae
iret
iret
or
push
clc
jae
mov
clc
jae
jl
mov
add
sub
mov
mov
push
movs
ret
sbb
mov
mov
mov
push
cwde
ret
sbb
mov
mov
mov
mov
push
pop
out
xor
test
inc
das
dec
cmp
cmps
icebp
dec
mov
mov
fdivr
fnstcw
xchg
(bad)
fnstenv
retf
fbstp
ds
ret
add
push
mov
cmp
(bad)
inc
out
inc
xor
dec
stos
mov
imul
xor
fld
mov
fnstenv
add
arpl
push
pop
mov
mov
(bad)
dec
leave
jae
mov
leave
jae
(bad)
out
ret
and
mov
ja
inc
jns
sbb
retf
pusha
jg
jo
enter
push
inc
fdivr
mov
jnp
jae
xor
into
mov
add
es
arpl
jmp
xor
dec
retf
add
gs
mov
cli
mov
mov
add
ins
stos
mov
cli
mov
or
mov
sub
ret
clc
(bad)
cmp
call
sbb
push
pop
push
mov
clc
(bad)
mov
lods
push
push
stos
sbb
and
mov
test
add
mov
arpl
es
clc
(bad)
jle
mov
inc
xor
daa
test
rol
inc
cmp
nop
iret
inc
xor
pop
mov
sub
mov
inc
data16
inc
cmp
nop
iret
inc
dec
lea
mov
and
inc
and
dec
push
scas
fnstcw
cwde
out
inc
mov
es
inc
cmp
nop
(bad)
jle
mov
sub
add
jae
cmp
pop
jno
mov
fidivr
es
aaa
and
mov
test
stc
inc
cmp
sub
push
inc
daa
or
inc
and
cmps
cmp
je
clc
mov
mov
mov
cmps
leave
mov
inc
jns
sbb
retf
ficom
push
test
or
int
push
mov
mov
out
es
dec
movs
inc
mov
mov
int
ret
sbb
enter
addr16
repnz
jae
ret
fwait
mov
add
push
jle
add
inc
mov
ficom
sahf
loop
xchg
scas
je
pop
scas
or
jp
je
jp
stc
dec
jmp
stc
dec
xor
fsubr
xor
fsubr
ds
retf
je
jp
jp
jecxz
dec
push
xor
(bad)
sub
and
dec
mov
es
mov
mov
loop
dec
push
xor
imul
mov
pop
stos
cmps
jnp
mov
dec
or
mov
es
aad
mov
fyl2xp1
dec
push
cmp
inc
mov
fyl2xp1
pop
ds
add
pop
push
mov
lods
inc
xor
jnp
xor
js
jp
dec
test
dec
mov
mov
fsubr
std
into
dec
adc
cmps
arpl
mov
movs
icebp
dec
mov
sub
into
clc
fiadd
mov
fyl2xp1
mov
mov
jbe
inc
arpl
mov
scas
dec
sbb
jge
sub
imul
mov
cmps
imul
out
aad
mov
dec
mov
mov
mov
(bad)
ja
inc
xor
or
inc
fdiv
mov
dec
mov
mov
cmps
fld
lods
leave
dec
xor
jnp
mov
in
inc
xor
adc
fyl2xp1
dec
jmp
inc
adc
arpl
xlat
and
mov
mov
mov
mov
mov
rcr
xor
imul
sub
push
add
shr
clc
fiadd
ret
mov
dec
mov
mov
out
ss
ins
adc
fidivr
xor
js
jp
jb
enter
push
or
inc
xlat
es
jmp
push
inc
xor
adc
pushf
mov
xor
xor
movs
mov
imul
mov
int3
sbb
out
dec
push
xor
fst
jmp
pop
ss
leave
mov
cmp
jo
fwait
mov
scas
push
test
sub
inc
and
add
pop
cmp
jne
ss
int
jmp
fs
es
enter
mov
mov
ds
jb
int
dec
or
xchg
adc
adc
into
fcom
mov
gs
mov
fs
int
ret
sbb
mov
popa
mov
mov
jl
aad
ins
add
es
xor
lea
jecxz
inc
sub
imul
loopne
pop
ss
leave
mov
cmp
jo
call
inc
push
rcr
inc
mov
xor
fsubr
mov
into
inc
push
(bad)
fiadd
movs
dec
dec
cli
pop
jnp
push
dec
stos
mov
out
mov
arpl
jg
dec
retf
rcr
xor
imul
cmps
ret
js
scas
push
inc
gs
dec
and
mov
movs
jmp
cmps
mov
adc
(bad)
jmp
xor
mov
sahf
adc
mov
arpl
jle
icebp
push
mov
arpl
mov
xchg
int3
inc
xor
sahf
bound
mov
arpl
sub
push
inc
sub
pop
mov
daa
leave
scas
cmp
and
cs
and
test
adc
cmp
in
pop
push
mov
cmp
mov
add
mov
nop
leave
mov
dec
movs
dec
pop
mov
fmul
stos
mov
cmps
icebp
mov
shr
clc
inc
dec
or
pop
push
mov
cmp
mul
adc
mov
xchg
fldenv
clc
ret
mov
imul
leave
scas
mov
shl
daa
leave
cmps
arpl
enter
hlt
out
and
mov
clc
ret
mov
cmp
mov
(bad)
xchg
fimul
test
push
and
and
xlat
mov
sbb
sub
ss
inc
sub
es
lds
fwait
push
sub
mov
aaa
xchg
mov
shr
mov
add
data16
sub
mov
shr
mov
jp
mov
shr
mov
sti
mov
popf
pop
mov
cli
sub
sub
mov
aaa
mov
pop
test
sub
and
sub
mov
ss
mov
shr
mov
and
scas
popf
mov
sub
into
mov
es
sub
pop
mov
mov
mov
ss
sub
mov
shl
jbe
shr
mov
sar
in
shr
mov
rol
retf
sub
mov
sar
push
mov
sub
mov
rcr
mov
shr
aaa
jno
mov
test
inc
lds
fwait
push
mov
(bad)
into
inc
cli
sub
jle
sbb
sub
ss
inc
sub
mov
sbb
mov
shr
mov
aaa
out
mov
shr
es
fs
shr
mov
jb
mov
shr
mov
retf
sbb
sub
mov
shr
jle
shr
cmp
shr
mov
shr
mov
sti
mov
movs
je
sub
mov
shr
es
fs
shr
mov
jb
mov
shr
mov
retf
sbb
sub
mov
shr
jle
shr
sub
sub
mov
inc
inc
mov
shr
mov
and
inc
gs
(bad)
jle
add
adc
jno
push
mov
leave
dec
fld
jo
sti
sbb
enter
cmp
jl
mov
es
stos
and
jae
in
dec
retf
call
es
inc
jnp
jbe
push
or
adc
es
clc
retf
ret
cld
mov
nop
fnstcw
and
jne
jl
leave
scas
and
jne
jg
fnstcw
mov
arpl
fiadd
inc
mov
sbb
xor
scas
push
inc
dec
xor
sub
push
inc
cmovbe
lods
sub
inc
mov
es
push
xor
lea
mov
sar
arpl
(bad)
mov
mov
sbb
mov
jbe
in
repz
ja
xor
lea
mov
fnstcw
aaa
push
add
dec
jbe
fwait
mov
push
test
jnp
or
inc
mov
sub
push
mov
mov
mov
xchg
mov
out
dec
push
xor
imul
out
nop
cmps
cmps
dec
hlt
xchg
mov
pop
sub
dec
int3
lea
inc
cmp
retf
fldcw
mov
mov
and
inc
xor
adc
test
ds
retf
dec
dec
cmp
cmp
push
out
inc
xor
push
jmp
add
stos
jmp
inc
inc
adc
retf
mov
add
push
out
inc
mov
scas
jl
mov
and
xor
mov
xchg
es
ret
inc
scas
jl
clc
fiadd
push
ins
fwait
into
inc
mov
clts
inc
and
inc
mov
pop
leave
mov
add
clc
fisub
add
shr
clc
cli
add
push
inc
lods
cdq
lahf
add
lods
movs
leave
mov
jmp
pop
fwait
into
inc
test
xor
loopne
mov
into
call
ds
sub
mov
outs
out
push
mov
add
inc
cmp
xchg
je
es
es
clc
(bad)
fs
es
sar
hlt
inc
scas
dec
dec
or
dec
mov
cmp
add
fwait
into
inc
xor
pop
fwait
into
inc
in
into
ins
bsr
ja
jmp
add
ret
mov
inc
clc
rol
push
ins
fwait
into
inc
mov
clts
dec
and
inc
mov
pop
leave
mov
jmp
retf
addr16
xor
pop
dec
lods
cdq
lahf
add
lods
movs
leave
mov
xchg
jmp
pop
fwait
into
inc
test
xor
jnp
and
add
imul
test
es
dec
ins
fwait
into
inc
xor
mov
dec
and
mov
arpl
pop
fwait
into
inc
sub
jmp
add
addr16
mov
ror
ss
sub
push
push
jbe
mov
and
jmp
fsubr
ds
sub
dec
mov
mov
data16
mov
test
mov
cmps
jg
stos
mov
mov
fyl2xp1
mov
push
pop
lds
fyl2xp1
cmps
push
aas
les
jo
test
mov
addr16
add
shr
clc
repnz
mov
add
inc
mov
cwde
push
jbe
push
xor
les
mov
fnstenv
jnp
mov
or
mov
fst
mov
scas
dec
stos
add
inc
pop
cmc
shl
ja
or
mov
xchg
in
add
sar
mov
inc
(bad)
inc
daa
ins
push
mov
inc
mov
pushf
pop
push
fbstp
(bad)
jl
data16
mov
ins
jg
cmp
sbb
inc
(bad)
inc
daa
push
push
inc
sbb
inc
fnstenv
push
jae
inc
mov
daa
stc
dec
jnp
mov
and
inc
adc
mov
jg
inc
xor
fsubr
sub
rcl
mov
fnstenv
push
adc
inc
mov
dec
mov
mov
mov
xor
fsubr
xor
js
inc
fnstenv
mov
add
jmp
fsubr
xlat
es
dec
(bad)
in
dec
lea
es
add
or
jno
inc
into
mov
mov
(bad)
add
mov
sti
mov
jne
sahf
bound
cmp
jb
inc
jbe
cld
mul
mov
cmp
jno
inc
jbe
lahf
bound
cmp
jb
inc
jbe
inc
mov
mov
cmps
lds
shr
cmp
jno
inc
scas
dec
mov
mov
es
bound
cmp
jb
inc
jbe
inc
mov
mov
dec
loopne
jmp
in
bound
mov
sub
cmp
sar
mov
out
dec
push
xor
imul
push
cwde
cld
lea
outs
xor
movs
mov
leave
xchg
into
inc
xor
jnp
xor
js
jp
jmp
mov
in
dec
mov
and
inc
xlat
es
xlat
es
mov
stc
dec
push
pop
lds
scas
jge
jne
int3
ret
and
leave
mov
xlat
daa
out
inc
push
pushf
mov
hlt
es
push
sbb
mov
mov
in
retf
xor
xchg
inc
ffree
push
aaa
int
mov
sub
inc
mov
push
cwde
mov
mov
stc
dec
push
adc
loop
dec
push
xor
fst
shl
pop
scas
leave
mov
xlat
and
push
test
fyl2xp1
dec
inc
push
test
ds
sbb
in
retf
fcom
sahf
fld
inc
scas
dec
into
clc
(bad)
into
clc
fcmovu
sub
es
xlat
es
inc
push
cmp
mov
push
mov
int
mov
test
es
lods
fyl2xp1
mov
mov
fyl2xp1
mov
mov
scas
je
inc
scas
dec
mov
cmc
mov
ror
ds
jmp
and
push
ins
inc
gs
rol
mov
scas
dec
into
clc
fcmovu
sub
jae
mov
stc
dec
push
ror
inc
mov
pop
dec
test
stos
leave
pop
in
jo
inc
xlat
es
lods
fyl2xp1
mov
mov
fyl2xp1
mov
mov
fyl2xp1
mov
mov
int
sti
push
xor
dec
scas
dec
sbb
out
dec
push
xor
fst
jmp
xor
fild
ret
out
inc
mov
mov
add
mov
push
xchg
inc
mov
fidivr
mov
clc
fdivrp
ins
mov
int3
test
dec
mov
jp
mov
es
xlat
es
bound
out
mov
ficomp
mov
mov
push
mov
int
mov
mov
es
ret
xchg
inc
mov
lahf
fbstp
xor
mov
test
xor
in
pushf
jmp
add
retf
fist
ss
test
fcmovbe
add
scas
dec
push
scas
fnstcw
cmp
or
retf
push
adc
pushf
stos
out
mov
loop
retf
push
enter
inc
mov
out
test
cmps
leave
mov
cli
cmps
mov
mov
push
lods
ret
sbb
je
cmp
xor
push
lods
loopne
inc
cmp
jo
cwde
es
gs
(bad)
lea
mov
arpl
(bad)
mov
push
xchg
retf
push
adc
pushf
stos
ret
mov
arpl
jg
dec
retf
add
inc
mov
rcr
xor
imul
jnp
test
(bad)
push
ss
add
adc
es
clc
fiadd
test
cmps
iret
inc
mov
shl
mov
mov
(bad)
std
dec
jge
xchg
mov
inc
mov
ss
push
imul
mov
fmul
rcr
cmc
sbb
jnp
xor
jne
add
mov
pushf
ret
scas
jns
jnp
jl
(bad)
add
adc
pop
js
aad
push
add
es
jns
jmp
fdiv
enter
sbb
xor
xor
mov
mov
jo
std
icebp
gs
jl
mov
sbb
jae
inc
es
push
fnstenv
mov
fdiv
inc
push
sub
loop
retf
jl
dec
scas
dec
dec
push
mov
iret
movs
dec
mov
fnstenv
mov
(bad)
into
inc
mov
sub
cwde
stos
repz
mov
xor
mov
fidiv
inc
scas
or
add
jae
inc
dec
xor
ss
mov
xchg
mov
jno
add
into
inc
mov
fdiv
jnp
stc
inc
mov
and
add
(bad)
add
retf
jae
inc
scas
dec
shl
ret
and
dec
sub
(bad)
inc
je
sub
fnstenv
jns
in
bound
enter
clc
es
jns
in
bound
or
jae
inc
into
aam
mov
into
mov
mov
es
dec
fisttp
mov
dec
(bad)
into
inc
inc
xchg
jo
inc
fldenv
es
jns
add
test
leave
inc
mov
es
inc
rol
cli
fisub
mov
shl
ss
jo
inc
(bad)
sub
into
je
mov
into
push
pop
mov
es
dec
fisttp
mov
dec
(bad)
into
inc
inc
xchg
jo
inc
fldenv
es
jns
in
bound
or
jae
inc
into
push
xchg
es
fimul
ud1
(bad)
into
inc
inc
xchg
jo
inc
fldenv
es
jns
fs
es
mov
mov
shl
inc
and
pusha
push
dec
enter
out
inc
mov
je
inc
jb
jmp
stos
(bad)
inc
ds
mov
bound
cmp
jae
inc
jbe
bound
mov
push
outs
enter
dec
push
cmp
dec
sbb
es
mov
mov
shl
inc
and
push
aad
ins
add
fdiv
jmp
inc
ds
sub
xchg
jo
inc
fldenv
es
jns
fs
es
mov
mov
shl
inc
and
push
aad
ins
add
fdiv
mov
mov
loop
sub
xchg
jo
inc
fldenv
es
jns
fs
es
mov
mov
shl
inc
and
pusha
push
xchg
inc
mov
es
inc
jb
jmp
stos
and
inc
ds
sti
enter
dec
rol
xor
fs
es
push
and
jne
aad
push
add
(bad)
push
dec
iret
inc
mov
(bad)
inc
push
pushf
enter
mov
arpl
push
ja
inc
mov
pop
iret
inc
mov
es
inc
rol
cli
fisub
mov
shl
ss
jo
inc
(bad)
sub
into
nop
add
scas
jl
pop
scas
or
jnp
jl
mov
es
dec
fisttp
mov
dec
(bad)
into
inc
inc
xchg
jo
inc
fldenv
es
jns
fs
es
mov
mov
shl
inc
and
push
aad
push
add
fdiv
push
mov
loop
stos
sbb
add
mov
mov
mov
scas
dec
jl
jmp
jae
inc
fnstenv
push
jecxz
inc
mov
(bad)
mov
aam
mov
fnstenv
in
dec
push
popf
jmp
fsubr
ds
stos
jecxz
mov
sub
inc
mov
fmul
popf
jmp
jae
inc
fnstenv
push
pop
into
inc
mov
pop
into
inc
mov
es
inc
shl
mov
inc
into
aam
mov
into
cwde
add
es
dec
fisttp
mov
mov
inc
mov
mov
xor
aad
push
add
es
jns
(bad)
popf
es
daa
mov
or
(bad)
jnp
mov
(bad)
mov
(bad)
push
pop
pop
(bad)
jns
jno
mov
fnstenv
mov
jns
jno
mov
fld
mov
mov
in
adc
xor
stc
repnz
dec
les
mov
(bad)
push
dec
and
stos
xor
fnstenv
aad
push
add
fnstenv
push
dec
int
mov
push
fld
shr
cmp
dec
mov
inc
cmps
xor
mov
push
jae
inc
fnstcw
mov
fdiv
enter
mov
lods
or
aad
push
add
es
jns
fs
mov
mov
shl
inc
and
push
aad
push
add
fdiv
mov
loop
stos
data16
sub
inc
mov
fmul
popf
jmp
jae
inc
fnstenv
push
(bad)
inc
mov
(bad)
mov
in
std
es
mov
mov
shl
inc
and
push
aad
ins
add
fdiv
jae
mov
loop
ret
jae
inc
cmps
mov
(bad)
mov
fdiv
cmp
jae
inc
pop
or
aas
mov
or
dec
shr
cmp
jae
inc
scas
dec
stos
(bad)
daa
mov
arpl
mov
mov
es
mov
es
dec
pop
jl
jnp
leave
pop
mov
pop
or
ds
lea
lods
or
cmp
jae
inc
fyl2xp1
push
aad
push
add
(bad)
push
aas
int3
inc
mov
stos
js
inc
(bad)
mov
or
mov
loope
retf
jae
inc
scas
jl
dec
scas
dec
into
cmp
mov
loopne
mov
dec
fnstenv
in
into
test
mov
fnstenv
in
into
cmp
xchg
(bad)
or
jae
inc
fyl2xp1
pop
inc
xchg
jl
inc
fld
mov
mov
jmp
fsubr
ds
stos
cmp
mov
sub
inc
mov
fmul
popf
jmp
jae
inc
fnstenv
push
xor
xor
lea
and
cli
mov
mov
shl
inc
and
push
aad
push
add
fdiv
(bad)
sbb
mov
mov
sub
inc
mov
fmul
mov
inc
fnstenv
push
jae
inc
mov
xchg
jl
inc
fldenv
es
jnp
call
fdiv
cmp
mov
fnstenv
out
into
movs
mov
(bad)
xchg
fdiv
jge
or
inc
fnstenv
xchg
into
inc
inc
xchg
jo
inc
fldenv
es
jns
add
mov
shl
inc
and
push
aad
push
add
fdiv
pop
sbb
and
mov
sub
inc
mov
fmul
popf
jmp
jae
inc
fnstenv
push
fwait
mov
mov
(bad)
jnp
xor
dec
mov
push
dec
mov
mov
es
inc
shl
mov
inc
into
add
es
jmp
jae
inc
fnstenv
push
pop
mov
mov
adc
inc
mov
movs
jbe
rol
cli
fisub
mov
shl
ss
jo
inc
(bad)
sub
into
lods
jge
es
mov
es
dec
fisttp
mov
loopne
into
inc
inc
xchg
jo
inc
fldenv
es
jns
or
inc
push
repz
mov
es
inc
shl
mov
inc
into
js
mov
into
cmp
mov
es
dec
fisttp
mov
dec
(bad)
into
inc
inc
xchg
jo
inc
fldenv
es
jns
fs
cli
mov
mov
shl
inc
and
pusha
push
pop
mov
mov
es
inc
jb
jmp
stos
retf
sbb
xchg
clc
into
inc
inc
xchg
jo
inc
fldenv
es
jns
add
test
mov
mov
es
inc
shl
mov
inc
into
sar
es
jmp
jae
inc
fnstenv
push
outs
mov
mov
and
inc
mov
movs
jbe
shl
mov
inc
into
test
mov
dec
xchg
popf
jmp
jae
inc
fnstenv
push
aaa
mov
mov
ror
test
mov
shl
inc
and
push
aad
ins
add
fdiv
pop
sbb
cmp
jae
inc
jbe
mov
mov
jmp
fsubr
ds
stos
cmp
mov
sub
inc
mov
fmul
mov
inc
fnstenv
push
xor
aad
push
add
fdiv
das
sbb
repz
mov
fmul
mov
inc
fnstenv
push
dec
mov
mov
push
test
out
mov
cmps
sbb
mov
icebp
or
inc
jmp
adc
into
push
add
es
jns
lods
xchg
mov
mov
mov
shl
inc
and
push
aad
ins
add
fdiv
mov
mov
loop
sub
into
inc
inc
xchg
jo
inc
fldenv
es
jns
fs
xchg
mov
mov
mov
shl
inc
and
push
aad
ins
add
fdiv
imul
ret
leave
inc
mov
es
fimul
ud1
sbb
mov
mov
xor
aad
push
add
es
jns
in
pusha
mov
into
add
mov
dec
mov
mov
dec
mov
mov
push
test
xor
fs
and
mov
xchg
jo
inc
fldenv
mov
mov
fdiv
in
fnstcw
mov
or
jae
inc
into
in
jnp
es
push
fnstenv
push
fistp
mov
pop
adc
xor
fild
mov
rcr
xor
or
inc
jmp
mov
inc
fdiv
xor
dec
push
inc
es
nop
leave
mov
jmp
add
inc
fdiv
in
into
cmp
es
test
es
pusha
fs
cmp
jb
inc
jbe
inc
mov
(bad)
jae
ds
ret
clc
(bad)
inc
iret
cwde
out
aad
push
add
es
mov
(bad)
jae
aad
push
add
es
popa
mov
mov
scas
jl
inc
movs
dec
arpl
ror
mov
jae
cmps
cmp
sbb
fist
pop
push
add
test
adc
inc
(bad)
mov
(bad)
(bad)
retf
jno
inc
lods
leave
dec
and
retf
jno
inc
scas
je
inc
scas
dec
jb
lods
leave
dec
xor
jne
mov
mov
call
and
retf
jno
inc
jo
je
es
cmp
mov
inc
fnstenv
fwait
adc
xor
mov
mov
fs
mov
xor
fisubr
xor
hlt
mov
sbb
xlat
mov
aaa
inc
fnstenv
or
ins
jne
es
push
mov
add
inc
fnstenv
jmp
push
jno
inc
stos
fmul
stos
fadd
fs
mov
mov
mov
xor
sbb
push
sub
xor
fsubr
push
jae
inc
mov
mov
mov
mov
fsubr
adc
into
inc
aad
push
add
cmps
fs
dec
fnstenv
jns
test
sbb
mov
out
sbb
mov
jae
aad
lea
stos
or
xor
fsubr
inc
xchg
sbb
sub
xchg
add
xor
xchg
adc
inc
fnstenv
sbb
stos
or
inc
fnstenv
push
push
dec
arpl
adc
enter
adc
inc
mov
gs
mov
sbb
mov
fsubr
xor
movs
mov
or
jae
in
stos
or
push
mov
inc
mov
fld
mov
xor
fsubr
ds
retf
je
jp
or
inc
fnstenv
mov
ret
inc
daa
mov
inc
dec
(bad)
push
fdiv
mov
(bad)
mov
mov
lea
loope
add
fdiv
in
into
lahf
mov
(bad)
into
cmp
add
add
dec
mov
mov
dec
mov
mov
fnstenv
xlat
es
mov
sub
call
jno
inc
into
xor
mov
fiadd
mov
bound
sar
inc
xor
fsubr
ds
test
push
jno
inc
es
cmp
xchg
mov
fdiv
in
dec
stc
lahf
jmp
fs
mov
mov
jle
dec
cmps
dec
fs
mov
es
cmp
mov
into
(bad)
and
clc
push
aad
hlt
inc
mov
paddd
push
xchg
mov
pop
mov
inc
mov
fdiv
in
jne
hlt
mov
mov
mov
es
inc
fdiv
in
into
enter
ja
mov
adc
inc
(bad)
inc
fnstenv
cmp
xchg
and
es
adc
inc
(bad)
mov
fnstenv
push
jnp
inc
mov
es
xor
cld
mov
jmp
cld
jo
es
inc
xchg
sub
mov
mov
into
sub
es
(bad)
and
jae
push
sub
mov
mov
fnstenv
jp
rcr
je
mov
scas
imul
jmp
inc
sti
scas
je
inc
scas
dec
mov
mov
mov
jg
add
jb
scas
dec
mov
mov
mov
jg
add
push
push
mov
and
push
xchg
and
or
dec
or
inc
ins
sub
push
dec
daa
pop
dec
or
into
stc
movs
adc
es
(bad)
es
jnp
arpl
jge
icebp
pop
mov
arpl
dec
mov
clc
ds
dec
data16
ds
mov
ds
adc
mov
dec
mov
leave
mov
std
jbe
mov
mov
inc
pcmpeqb
jp
stc
push
mov
leave
mov
mov
fnstcw
in
into
test
fisttp
jb
stc
and
inc
ins
sub
push
dec
stos
enter
fs
es
clc
(bad)
sub
data16
mov
adc
inc
xor
or
inc
xlat
(bad)
stos
pop
adc
inc
xor
adc
into
mov
stos
out
mov
arpl
jge
sub
imul
push
cmps
mov
adc
jnp
cld
pop
popa
nop
and
fisub
leave
mov
mov
fnstenv
jp
or
pop
fnstenv
mov
call
jge
jae
in
dec
jmp
es
jnp
dec
dec
cmp
jnp
stos
mov
inc
xchg
dec
mov
mov
mov
jns
test
jne
jae
inc
push
sub
fidivr
xor
cmp
mov
int3
test
loope
call
jae
mov
call
jge
jae
in
jo
sub
mov
push
mov
retf
jae
jns
jae
push
adc
dec
mov
stc
pop
inc
xchg
inc
mov
mov
pop
ins
mov
int
ret
lds
int
jb
jns
sbb
retf
cwde
arpl
mov
jmp
pop
push
mov
daa
pop
dec
jg
test
(bad)
lea
mov
jg
inc
mov
fxch
ret
and
dec
sub
je
pusha
add
jae
jns
in
bound
push
arpl
dec
cmp
sbb
mov
(bad)
add
add
fnstenv
push
daa
mov
dec
push
(bad)
mov
inc
mov
movs
jbe
shl
mov
fs
cmp
ins
mov
mov
mov
jns
fs
mov
mov
mov
mov
shl
inc
and
push
(bad)
mov
inc
mov
je
(bad)
mov
dec
aam
jmp
add
mov
into
sub
mov
into
or
mov
es
dec
fisttp
mov
dec
(bad)
into
inc
xor
fsubr
ds
retf
jl
jnp
mov
(bad)
mov
into
or
es
mov
es
dec
fisttp
mov
dec
(bad)
into
inc
xor
fsubr
ds
stos
cmps
adc
mov
mov
mov
xchg
into
test
es
fimul
fmulp
add
ins
mov
popa
fs
add
ins
mov
(bad)
es
jns
jae
lods
dec
sahf
pushf
jmp
add
mov
dec
lods
pushf
jmp
add
mov
into
push
jno
es
pop
scas
or
jnp
cmp
mov
es
dec
fisttp
mov
dec
(bad)
into
inc
xor
fsubr
ds
sub
mov
fsubr
ds
stos
retf
adc
inc
add
mov
mov
mov
test
es
mov
into
sbb
es
jmp
add
mov
into
or
mov
scas
jl
pop
scas
or
jnp
mov
dec
mov
fisttp
mov
mov
inc
mov
mov
xor
fnstenv
aad
push
add
fnstenv
push
xor
push
aad
push
add
fnstenv
push
add
dec
push
(bad)
mov
inc
mov
movs
jbe
shl
mov
fs
cmp
ins
mov
mov
mov
jns
in
popa
fs
cmp
ins
mov
mov
mov
jns
add
test
mov
inc
mov
movs
jbe
shl
mov
fs
cmp
ins
mov
mov
mov
jns
in
arpl
cmp
ins
mov
mov
mov
jns
fs
es
mov
mov
shl
inc
and
push
aad
ins
add
fnstenv
push
mov
dec
dec
cmp
pop
outs
mov
stos
or
fnstenv
aad
push
add
fnstenv
push
sbb
push
push
cmp
inc
mov
movs
jbe
shl
mov
fs
cmp
ins
mov
mov
mov
jns
in
arpl
cmp
ins
mov
mov
mov
jns
mov
mov
mov
shl
inc
and
push
aad
ins
add
fnstenv
push
daa
mov
dec
add
shr
cmp
push
mov
adc
mov
into
pop
mov
or
inc
jmp
adc
xor
mov
fnstenv
push
mov
dec
push
push
pop
mov
inc
mov
movs
jbe
shl
mov
fs
cmp
ins
mov
lea
mov
jns
in
pusha
fs
cmp
ins
mov
lea
mov
jns
or
inc
push
sbb
mov
movs
jbe
shl
mov
fs
cmp
ins
mov
lea
mov
jns
fs
lea
mov
mov
mov
shl
inc
and
push
and
mov
je
(bad)
mov
dec
aam
jmp
add
mov
into
jo
mov
dec
pop
sahf
jmp
add
mov
into
xor
ja
mov
dec
mov
mov
into
add
mov
stc
jae
cmp
inc
push
mov
(bad)
jae
in
into
sub
out
xor
fist
xor
fstp
into
push
test
mov
mov
and
test
js
mov
add
inc
mov
cdq
bound
inc
dec
add
(bad)
cmp
jae
xor
(bad)
and
jae
mov
push
clc
inc
mov
into
sub
mov
stos
fadd
scas
sbb
inc
fnstenv
inc
shr
cmp
dec
stos
test
fs
fnstenv
jp
mov
xchg
jmp
fs
es
cmp
pushf
sub
fnstenv
push
out
inc
mov
es
or
jae
in
dec
and
popa
mov
mov
(bad)
imul
and
inc
aad
lea
stos
or
xor
fsubr
xor
lea
sbb
stos
or
inc
fnstenv
push
pcmpeqd
out
(bad)
int3
and
inc
aad
push
add
fnstenv
push
(bad)
mov
test
jo
inc
(bad)
stos
sub
mov
shr
inc
scas
or
inc
fnstenv
inc
daa
je
jp
enter
or
inc
fnstenv
push
xor
pop
cmp
fwait
inc
mov
fdiv
stc
mov
mov
lea
paddd
push
nop
and
inc
(bad)
sub
fdiv
in
into
xchg
movs
inc
(bad)
into
cmp
add
add
dec
mov
mov
dec
mov
mov
fnstenv
xlat
es
jge
or
mov
mov
inc
into
dec
push
es
test
sub
inc
ftst
push
bound
sar
inc
xor
fsubr
ds
test
pop
ja
inc
es
cmp
cld
jnp
es
inc
fdiv
in
dec
stc
lahf
jmp
fs
jnp
dec
cmps
dec
fs
mov
es
cmp
mov
ret
mov
mov
add
daa
mov
es
mov
es
test
and
rol
jae
jmp
inc
imul
stos
or
inc
fnstenv
push
jae
mov
sbb
inc
mov
es
cmp
fild
ds
dec
jge
or
mov
fnstcw
xlat
inc
fnstenv
cmp
fs
es
dec
pop
out
mov
fnstenv
inc
xchg
sbb
push
jae
jnp
cmp
inc
fnstenv
test
add
fsubr
mov
into
inc
jmp
je
mov
das
dec
ss
dec
xchg
xchg
es
and
addr16
scas
dec
inc
dec
jne
imul
(bad)
push
adc
movs
dec
dec
push
cmp
(bad)
and
jae
ds
mov
xlat
inc
fnstenv
cmps
(bad)
jae
ds
ret
out
mov
mov
daa
mov
stos
or
inc
fnstenv
push
out
movs
inc
mov
scas
dec
sub
fnstenv
or
inc
inc
xchg
sub
xchg
es
cmp
mov
dec
sub
inc
mov
in
inc
call
fist
add
jmp
mov
push
jae
inc
mov
push
sub
jae
into
jmp
data16
jne
stos
fwait
add
mov
rol
push
es
mov
fadd
je
inc
call
inc
mov
dec
mov
mov
into
pushf
push
es
stos
add
mov
fidivr
xor
jl
jp
leave
mov
call
inc
mov
js
mov
add
inc
mov
ficom
push
enter
dec
dec
mov
mov
mov
(bad)
inc
pcmpeqb
jp
jp
mov
dec
jae
mov
(bad)
jae
in
jo
movs
xchg
mov
mov
mov
fsubr
ds
jle
(bad)
push
xor
mov
inc
mov
and
stos
adc
mov
loopne
in
loop
inc
sub
imul
(bad)
popa
sbb
shl
cmp
fmul
hlt
clc
fcomp
sub
arpl
push
mul
ins
in
mov
clc
rcr
sub
es
cmp
shld
sub
push
inc
movs
dec
inc
in
dec
jae
jmp
add
dec
jbe
fcom
add
dec
jbe
inc
aad
lea
fnstcw
stos
inc
push
mov
fxch
mov
fiadd
sub
imul
add
pop
aad
gs
mov
arpl
jnp
mov
mov
dec
mov
mov
dec
mov
sub
es
xlat
and
push
push
sbb
sti
shr
inc
dec
rol
mov
adc
loop
es
xchg
mov
mov
adc
es
mov
mov
adc
jmp
fs
mov
mov
adc
sbb
mov
mov
adc
or
es
push
mov
lea
push
jae
xchg
mov
movs
inc
mov
push
jae
popf
mov
movs
inc
mov
push
jae
sub
aas
movs
inc
mov
push
jae
leave
xchg
inc
push
das
movs
inc
mov
scas
dec
sub
mov
mov
mov
mov
adc
es
mov
adc
loopne
es
call
jae
adc
jmp
sbb
mov
rol
jecxz
dec
adc
in
faddp
cmps
jnp
mov
mov
inc
fnstcw
stos
sti
add
mov
es
inc
adc
es
mov
inc
fnstcw
stos
lahf
add
mov
es
inc
adc
jmp
fs
call
inc
mov
or
add
es
and
sub
fidiv
xchg
mov
stos
inc
mov
cmp
add
es
inc
sub
mov
jae
mov
out
stos
inc
mov
push
adc
mov
es
cmp
mov
lods
mov
jae
xchg
mov
stos
inc
mov
push
adc
mov
es
outs
and
mov
lods
mov
jae
popf
mov
stos
inc
mov
scas
dec
sub
mov
stos
fild
mov
cmp
add
es
inc
adc
loop
es
mov
jae
cmps
ds
jmp
lods
pusha
add
push
add
mov
mov
push
std
into
inc
jmp
movsx
ja
cld
es
in
into
hlt
gs
cmp
jmp
loopne
mov
adc
inc
jmp
leave
mov
arpl
(bad)
fsubr
mov
es
aad
push
add
es
mov
add
mov
adc
add
sbb
push
inc
or
call
push
aad
mov
in
dec
dec
cwde
jmp
in
data16
mov
es
inc
and
retf
je
jp
mov
dec
mov
dec
sbb
mov
or
call
push
aad
mov
in
dec
push
pushf
jmp
in
data16
mov
es
and
dec
mov
mov
dec
lea
mov
dec
xor
es
xlat
es
xlat
xor
es
jnp
lea
mov
inc
test
mov
mov
bound
mov
and
inc
xlat
inc
out
aad
mov
dec
loopne
jmp
in
data16
mov
es
aas
sbb
mov
dec
push
stc
inc
mov
adc
add
bound
mov
and
inc
xlat
pop
out
aad
mov
dec
xchg
cwde
jmp
in
data16
mov
es
jecxz
mov
mov
mov
mov
mov
lods
dec
pop
inc
mov
mov
xchg
dec
mov
jbe
lea
mov
addr16
into
inc
xlat
es
mov
int
xlat
es
mov
jae
stc
xchg
inc
xlat
ss
mov
mov
push
in
mov
cld
into
inc
aad
push
add
add
mov
adc
add
inc
sub
mov
dec
es
mov
and
push
pushf
jmp
in
mov
mov
es
stos
and
ret
test
mov
es
aad
lea
jbe
jo
mov
enter
xlat
es
mov
into
adc
mov
es
inc
adc
inc
inc
adc
jecxz
es
mov
dec
es
mov
and
push
pushf
jmp
in
mov
mov
es
ret
sbb
mov
jp
retf
inc
mov
adc
add
inc
sub
mov
es
aad
mov
dec
and
es
mov
stc
into
inc
aad
push
add
add
adc
mov
(bad)
inc
inc
adc
inc
inc
adc
jecxz
es
xlat
sbb
mov
aad
mov
mov
dec
out
jmp
in
data16
mov
es
rcr
fs
inc
shr
clc
retf
xlat
es
mov
jae
stc
xchg
inc
xlat
ss
mov
mov
xor
inc
mov
mov
addr16
into
inc
xlat
es
es
leave
xchg
inc
xlat
es
mov
jae
stc
xchg
inc
xlat
ss
aad
lea
dec
dec
inc
mov
fsubr
(bad)
cld
into
inc
aad
push
add
add
adc
mov
mov
bound
mov
mov
pop
lea
dec
call
adc
xor
push
cwde
jmp
out
push
repz
inc
mov
es
inc
adc
inc
inc
adc
jecxz
es
xlat
jo
or
mov
mov
dec
mov
data16
mov
es
xlat
push
mov
mov
mov
mov
mov
movs
dec
mov
sar
dec
mov
jbe
lahf
bound
mov
mov
into
in
popa
mov
mov
mov
mov
mov
mov
movs
dec
push
inc
mov
mov
test
jbe
rcr
mov
mov
mov
into
test
mov
mov
inc
pcmpeqb
jp
mov
dec
mov
dec
xchg
sub
es
aad
mov
in
dec
push
pushf
jmp
in
mov
mov
ret
lods
inc
mov
es
inc
adc
inc
inc
adc
jecxz
es
xlat
inc
in
mov
dec
mov
jbe
lahf
bound
mov
mov
into
and
es
arpl
mov
mov
mov
mov
mov
stos
dec
pop
inc
mov
mov
mov
jbe
mov
inc
dec
inc
xlat
es
into
inc
push
jge
mov
inc
scas
dec
stos
cmp
jae
loop
inc
sub
imul
add
out
mov
scas
dec
sub
into
inc
inc
push
test
xor
in
data16
inc
movs
dec
push
push
adc
mov
scas
dec
sub
mov
mov
arpl
into
mov
es
inc
adc
inc
jmp
leave
mov
arpl
(bad)
fsubr
mov
es
aad
push
add
es
mov
push
mov
bound
mov
adc
add
sbb
push
inc
or
call
push
aad
mov
in
dec
inc
call
mov
mov
es
inc
and
ret
enter
mov
dec
mov
dec
mov
push
inc
or
call
push
aad
mov
in
dec
push
pushf
jmp
in
data16
mov
es
and
dec
mov
mov
dec
lea
mov
dec
xor
es
xlat
es
xlat
xor
es
jnp
lea
mov
fist
mov
mov
inc
sub
mov
dec
cwde
sub
jbe
lahf
bound
cmp
into
inc
xlat
es
mov
mov
xchg
push
mov
mov
mov
fsubr
aad
push
add
daa
mov
adc
es
es
xor
push
xlat
es
aad
lea
fnstcw
stos
(bad)
cmp
xlat
es
mov
into
adc
mov
es
inc
adc
inc
inc
adc
jecxz
es
mov
dec
cwde
sub
dec
pop
jbe
lahf
bound
cmp
into
inc
xlat
es
es
cmp
fimul
inc
inc
adc
inc
inc
adc
jecxz
es
mov
dec
cwde
sub
mov
and
push
pushf
jmp
in
mov
mov
es
outs
and
stos
(bad)
mov
mov
jae
stc
xchg
inc
xlat
ss
mov
dec
cwde
inc
mov
fsubr
out
cld
into
inc
aad
push
add
cmp
mov
adc
add
bound
mov
dec
or
es
mov
mov
aad
push
add
es
push
xchg
(bad)
es
(bad)
mov
loope
inc
inc
adc
inc
inc
adc
jecxz
es
aad
mov
dec
sub
mov
mov
dec
lahf
cdq
jmp
in
data16
mov
es
mov
mov
mov
mov
mov
mov
lods
dec
fisubr
add
mov
xchg
mov
mov
addr16
into
inc
xlat
es
mov
test
inc
xlat
es
mov
jae
stc
xchg
inc
xlat
ss
mov
mov
cmp
inc
mov
dec
inc
aad
push
add
cmp
mov
adc
add
bound
mov
mov
(bad)
mov
jno
add
es
push
xchg
xchg
inc
mov
es
inc
adc
inc
inc
adc
jecxz
es
aad
mov
dec
mov
inc
cmp
mov
mov
mov
into
hlt
pop
mov
mov
dec
movs
cmc
inc
mov
adc
add
inc
sub
mov
dec
retf
dec
mov
jbe
lahf
bound
mov
mov
into
mov
mov
mov
mov
mov
mov
mov
movs
dec
call
sub
cli
push
add
es
mov
cmp
mov
adc
add
bound
mov
mov
lea
dec
xchg
sub
lds
mov
es
push
jmp
inc
mov
es
sti
fs
inc
dec
rol
data16
loop
inc
sub
imul
jmp
mov
push
scas
dec
sub
es
xlat
es
aad
mov
fyl2xp1
dec
push
mov
dec
rol
(bad)
sub
mov
fisubr
xor
fisubr
ds
jo
jp
js
mov
shr
clc
into
add
adc
arpl
xor
adc
pushf
sub
daa
mov
into
(bad)
(bad)
xchg
popa
out
inc
push
jo
out
dec
inc
aad
push
add
push
test
ds
retf
test
xlat
and
push
inc
jbe
lods
dec
mov
jmp
in
mov
test
ds
retf
je
jp
rcr
je
fxch
pop
cmps
pusha
dec
mov
cwde
cmp
inc
add
test
aas
add
or
es
inc
jbe
sbb
mov
add
mov
mov
add
inc
cmps
icebp
mov
add
mov
mov
(bad)
movs
mov
loopne
ds
and
push
aad
cmp
mov
fnstenv
push
aas
xchg
inc
mov
push
popf
sub
into
inc
xor
fsubr
cmp
aaa
in
or
mov
cmp
jae
inc
jbe
test
es
dec
daa
jl
jnp
icebp
mov
lea
mov
xor
enter
or
mov
cmp
jae
inc
jbe
hlt
stos
es
rcr
lods
dec
call
(bad)
mov
into
sub
mov
cs
push
aad
cmp
inc
inc
fnstenv
push
scas
fwait
inc
mov
scas
dec
ret
rcr
lods
dec
bnd
add
mov
into
loopne
mov
sub
push
aad
cmp
inc
inc
fnstenv
push
jae
inc
mov
push
popf
sub
mov
xor
enter
pcmpgtb
inc
jbe
fs
es
rcr
lods
dec
mov
jmp
add
mov
into
pushf
push
mov
rol
xor
or
inc
sub
push
aad
add
fnstenv
push
retf
call
dec
into
call
mov
cmp
jae
inc
jbe
inc
and
stos
push
ret
aad
push
add
es
and
stos
loope
jae
aad
stos
dec
mov
es
pop
scas
or
jnp
stos
mov
je
mov
scas
imul
mov
imul
add
test
fisubr
xor
inc
jmp
sar
or
out
jmp
sbb
mov
retf
mov
cwde
mov
sbb
inc
cmp
scas
jp
es
pcmpgtb
inc
jbe
push
jnp
mov
sub
xor
(bad)
dec
fidiv
mov
xchg
into
inc
xor
fsubr
cmp
(bad)
icebp
jmp
add
push
shl
in
into
push
dec
jae
mov
xchg
into
inc
xor
fsubr
add
shr
cmp
jnp
inc
scas
dec
ret
add
je
inc
and
push
aad
aas
add
fnstenv
push
xchg
mov
fnstenv
enter
push
fs
cmp
jnp
inc
jbe
les
aad
mov
aad
aas
add
fnstenv
push
dec
cdq
inc
mov
fnstenv
enter
push
fs
cmp
jnp
inc
jbe
adc
daa
jl
jnp
xor
enter
push
fs
cmp
jnp
inc
jbe
jo
es
add
je
inc
das
stc
push
aad
aas
add
fnstenv
push
aas
cdq
inc
mov
fnstenv
enter
push
fs
cmp
jnp
inc
jbe
mov
add
je
inc
sub
aas
add
fnstenv
push
ret
cwde
inc
mov
scas
or
jnp
xor
enter
push
fs
cmp
jnp
inc
jbe
cld
test
aad
mov
aad
cmp
mov
fnstenv
push
sbb
inc
fnstenv
enter
or
cmp
jnp
inc
jbe
enter
sub
xchg
inc
xor
fsubr
xor
jnp
xor
push
mov
fld
add
es
jns
add
mov
inc
fnstcw
stos
dec
fnstenv
mov
mov
mov
sub
jnp
xor
push
mov
fld
test
sub
mov
(bad)
xchg
fnstenv
jge
or
mov
fwait
jo
inc
(bad)
mov
fnstenv
mov
mov
mov
fidiv
xchg
or
mov
inc
es
mov
mov
fnstenv
jnp
or
aad
push
add
fnstenv
push
cmps
xchg
inc
mov
fwait
je
inc
(bad)
mov
cmp
jnp
jl
mov
xor
aad
jp
mov
inc
fidiv
mov
rol
movd
mov
mov
inc
aad
push
add
fnstenv
push
xor
dec
scas
dec
sub
cmp
mov
fnstenv
push
fistp
pop
push
push
inc
mov
fidiv
jbe
pusha
test
jp
inc
dec
rol
xor
add
inc
fidiv
in
dec
pushf
call
jae
in
into
xor
in
fs
cmp
je
inc
jbe
mov
xor
mov
mov
mov
fidiv
ds
adc
mov
fsubr
inc
dec
inc
xor
fsubr
ds
sub
fnstenv
push
sbb
dec
dec
inc
xor
fsubr
ds
dec
jge
or
mov
fidiv
inc
movs
dec
inc
in
into
push
push
mov
fidiv
scas
jl
pop
scas
or
jnp
xor
mov
mov
test
mov
mov
es
inc
fidiv
in
into
mov
ja
jmp
add
inc
fdiv
in
into
mov
mov
mov
mov
shl
push
add
(bad)
imul
mov
enter
imul
mov
push
sub
imul
pop
mov
(bad)
mov
scas
or
jnp
cmp
cmp
jb
inc
jbe
xchg
gs
cmp
jb
inc
jbe
cmp
es
jns
add
inc
fidiv
in
into
dec
push
mov
shl
xor
fld
ss
inc
mov
fld
aas
mov
into
ins
push
mov
fidiv
cmp
daa
push
mov
fidiv
in
fnstcw
mov
fnstenv
retf
aaa
mov
mov
fsubr
xor
fcmovne
add
je
inc
stos
lock
mov
es
cmp
je
inc
jbe
inc
inc
xchg
js
inc
ftst
mov
mov
xor
pop
push
mov
fidiv
in
jne
not
jae
push
fild
inc
movs
dec
dec
xor
test
inc
fnstenv
push
fidiv
push
jnp
inc
mov
mov
std
push
xchg
inc
push
adc
out
inc
fnstenv
jecxz
inc
cmp
es
lods
mov
jmp
aaa
loope
fld
retf
sbb
jmp
out
aad
mov
lods
push
mov
enter
out
push
in
into
fcom
es
push
das
cdq
inc
mov
push
mov
arpl
jp
(bad)
cld
sbb
es
(bad)
or
jae
xor
in
and
stos
fbstp
mov
(bad)
jmp
fs
lods
mov
in
into
lods
push
mov
add
mov
fnstenv
inc
push
test
xlat
daa
in
sbb
mov
cmp
fs
fnstenv
jns
mov
inc
mov
lea
movs
mov
or
ins
add
idiv
es
leave
xchg
into
inc
cmp
call
loopne
es
outs
imul
in
scas
dec
mov
out
inc
jl
xchg
push
scas
pop
sbb
je
sub
or
push
fnstenv
push
adc
mov
aas
scas
inc
fnstenv
nop
lock
pushf
adc
jnp
jl
mov
xor
aad
jnp
dec
and
add
add
lock
fnstenv
aaa
mov
mov
retf
out
add
mov
mov
mov
xor
jp
mov
(bad)
popa
mov
pop
retf
jae
(bad)
stos
or
push
fnstenv
aad
sub
fwait
jmp
add
and
jae
in
into
adc
or
inc
xlat
es
and
jae
in
stos
or
push
fnstenv
push
outs
pushf
inc
mov
fnstenv
push
pusha
dec
mov
push
fnstenv
push
out
dec
mov
xlat
es
and
jae
in
into
mov
es
push
adc
mov
mov
add
into
inc
aad
sub
fwait
jmp
in
and
stos
pop
xor
out
lods
inc
fld
jbe
lock
inc
add
mov
aad
out
xchg
push
add
es
gs
int
into
inc
push
push
lahf
inc
mov
scas
dec
into
add
bound
fs
mov
inc
sub
push
dec
inc
aad
sub
fwait
jmp
in
sub
xor
outs
scas
inc
fld
jbe
lock
inc
add
mov
aad
out
test
dec
sbb
jmp
in
gs
mov
xor
add
fwait
xor
jnp
into
inc
add
mov
aad
retf
push
retf
mov
mov
dec
mov
mov
adc
mov
es
sub
mov
sti
inc
sub
xor
fsubr
xor
jnp
mov
add
add
xchg
arpl
into
push
dec
mov
arpl
xlat
and
mov
mov
es
push
cmp
inc
mov
sub
xor
fsubr
xor
jnp
mov
add
add
xchg
arpl
into
or
out
xor
adc
and
mov
mov
mov
es
imul
(bad)
or
mov
add
cwde
jmp
add
fdivr
es
mov
clc
out
inc
ret
sub
es
cmp
es
push
lahf
add
leave
xchg
cmp
pop
inc
mov
mov
dec
mov
xor
push
test
call
xchg
inc
inc
mov
out
mov
add
add
shl
fnstcw
sub
dec
mov
mov
es
inc
aad
push
add
es
push
and
cld
es
or
dec
mov
xlat
es
fnstenv
jns
xor
es
iret
or
(bad)
gs
aad
push
add
es
cmp
addr16
mov
xlat
daa
fdivr
loope
out
push
fnstenv
mov
andps
jle
or
push
fnstenv
xor
fsubr
rcl
push
add
es
mov
mov
mov
jge
mov
cwde
dec
cmp
mov
xchg
into
inc
mov
mov
mov
gs
dec
into
cmp
out
xlat
es
int
mov
mov
sub
mov
enter
dec
mov
mov
es
xlat
es
mov
mov
push
dec
add
mov
dec
daa
mov
daa
jae
mov
jg
inc
mov
ret
pop
sub
mov
jbe
hlt
mov
mov
mov
stos
leave
cmps
in
into
fmul
test
out
dec
push
mov
retf
mov
cdq
xchg
jg
inc
or
inc
arpl
(bad)
sub
sub
mov
mov
mov
aaa
lea
sub
xor
daa
mov
cmp
mov
test
sbb
ret
daa
mov
mov
mov
or
mov
pop
inc
mov
mov
into
mov
inc
fld
mov
xor
in
data16
into
scas
cmps
inc
(bad)
xchg
fnstenv
cmp
jno
inc
jbe
not
jae
push
aaa
add
mov
or
inc
adc
jecxz
es
mov
push
jecxz
cmp
jno
inc
or
jae
push
and
(bad)
ins
(bad)
xchg
mov
mov
enter
pop
(bad)
xchg
mov
bts
fnstenv
sub
jno
inc
pop
pop
aaa
mov
cmp
jno
inc
or
jae
mov
cmps
(bad)
(bad)
in
dec
mov
mov
mov
mov
shl
jle
xchg
into
inc
mov
es
fst
cmp
mov
es
cwde
inc
cmp
mov
xchg
into
inc
mov
fldenv
inc
jg
jle
xchg
into
inc
mov
mov
into
rep
inc
(bad)
stos
(bad)
and
xor
sub
jp
cs
and
mov
mov
sbb
adc
mov
cs
mov
cwde
dec
mov
mov
fnstenv
jp
mov
push
test
fnstenv
dec
dec
cmps
inc
mov
mov
stc
sbb
mov
sbb
mov
xchg
sbb
mov
cdq
sbb
mov
mov
mov
test
mov
mov
mov
mov
cld
mov
dec
mov
es
cmp
jb
inc
sbb
mov
lods
sbb
mov
mov
mov
mov
cmp
lods
es
lods
into
xor
mov
(bad)
mov
mov
nop
or
(bad)
xor
(bad)
popa
(bad)
mov
fnstenv
xor
fsubr
xor
fs
cmp
inc
push
js
inc
mov
scas
dec
sub
mov
mov
fdivr
into
pusha
dec
mov
fnstenv
mov
dec
mov
out
dec
inc
xlat
es
mov
into
mov
es
es
inc
pop
je
jp
or
fnstenv
cmp
jno
inc
loopne
mov
fnstenv
cmp
lea
mov
dec
jae
mov
fnstenv
in
fnstcw
stos
cmp
inc
xor
jnp
mov
fimul
sub
(bad)
into
inc
xor
fild
ds
jle
(bad)
xlat
es
gs
mov
es
cmp
xchg
iret
jmp
mov
mov
fnstenv
jp
or
fnstenv
xor
fsubr
nop
dec
inc
xor
fsubr
ds
sub
mov
mov
fdivr
into
pusha
dec
mov
fnstenv
mov
dec
mov
mov
into
inc
xlat
es
mov
into
mov
es
es
xor
jae
inc
movs
inc
mov
mov
ss
arpl
es
aad
pop
add
sub
inc
inc
adc
mov
mov
mov
mov
mov
mov
jae
lea
jg
pop
lods
sub
icebp
into
inc
xlat
es
mov
sbb
mov
es
jae
inc
daa
push
(bad)
mov
ss
cli
xor
movs
mov
mov
stos
or
aad
push
add
fnstenv
push
mov
inc
mov
(bad)
inc
fnstenv
inc
adc
jmp
fs
add
jae
inc
es
arpl
es
aad
pop
add
das
mov
adc
jmp
fs
mov
mov
cmp
test
mov
fnstenv
in
stos
or
aad
push
add
fnstenv
push
or
push
aad
mov
stos
or
fnstenv
inc
adc
aam
es
add
jae
inc
es
arpl
es
aad
pop
add
das
mov
adc
in
mov
mov
xor
mov
(bad)
mov
stos
or
aad
pop
add
fnstenv
push
jecxz
inc
mov
(bad)
inc
fnstenv
inc
adc
mov
mov
add
jae
inc
es
arpl
es
aad
pop
add
mov
adc
mov
mov
xor
jnp
mov
fimul
sub
es
push
inc
test
fnstcw
stos
scas
mov
and
mov
push
sbb
mov
mov
push
lock
sbb
out
aad
pop
add
mov
adc
mov
and
inc
cmp
(bad)
mov
add
je
inc
scas
dec
into
cmp
jae
inc
jbe
(bad)
dec
(bad)
in
dec
mov
(bad)
dec
(bad)
in
into
push
dec
mov
dec
jae
mov
fnstenv
in
fnstcw
stos
jmp
mov
fwait
lea
dec
mov
mov
es
push
mov
arpl
mov
mov
push
inc
mov
fnstenv
push
sbb
mov
mov
push
lock
sbb
out
aad
pop
add
and
cld
es
mov
and
inc
cmp
(bad)
mov
std
cmps
mov
mov
mov
mov
iret
mov
test
mov
fmul
cmp
jno
inc
jbe
outs
gs
cmp
jno
inc
jbe
dec
mov
mov
jns
xor
loope
mov
fnstenv
cmp
jno
inc
scas
dec
sub
dec
mov
mov
data16
and
stos
sub
mov
mov
out
xlat
es
inc
xchg
js
inc
fldenv
es
adc
mov
sub
inc
data16
mov
in
inc
xor
ficom
aad
adc
mov
fnstenv
and
es
dec
(bad)
in
dec
mov
dec
(bad)
into
inc
inc
xchg
js
inc
fldenv
es
xor
jno
inc
movs
inc
mov
mov
stos
sbb
in
stos
adc
inc
xchg
js
inc
fldenv
mov
mov
fnstenv
xlat
and
mov
mov
into
hlt
inc
mov
fdiv
push
aaa
mov
fnstcw
stos
add
mov
es
xlat
and
inc
xlat
es
mov
mov
inc
push
lahf
mov
scas
or
inc
shr
cmp
jno
inc
lods
or
jp
mov
mov
shl
inc
into
cmp
add
test
inc
ds
jae
cmp
fild
(bad)
dec
(bad)
out
jne
rcr
mov
into
js
mov
mov
fsubr
mov
es
dec
fdiv
push
dec
mov
fnstenv
iret
and
loopne
jmp
lea
es
test
and
inc
aad
cmp
mov
es
or
mov
mov
dec
pop
xlat
and
mov
int
push
xrelease
sahf
and
mov
mov
add
ss
push
cmp
mov
jge
sub
jo
enter
and
daa
je
jp
leave
dec
and
inc
mov
es
shl
dec
cmp
mov
sbb
mov
mov
mov
stos
and
mov
fidivr
xor
je
jp
mov
ss
mov
stos
aas
and
jmp
stc
dec
inc
adc
sub
mov
or
add
cmp
add
es
push
dec
scas
dec
js
cmp
add
push
adc
mov
es
xchg
mov
jae
popf
mov
mov
sbb
mov
test
mov
sub
int
push
aaa
mov
sbb
mov
mov
mov
xor
cmp
pop
int
retf
imul
(bad)
add
jbe
mov
pop
pop
popf
mov
inc
xchg
or
jmp
stc
inc
cmp
jbe
mov
pop
pop
cdq
mov
inc
pop
mov
mov
inc
enter
mov
adc
ss
loop
es
popf
mov
pop
pop
xchg
mov
or
jmp
stc
inc
cmp
cwde
leave
xor
ss
push
adc
es
cmp
mov
rcr
mov
aad
inc
sub
es
mov
into
inc
sub
es
lods
aad
inc
sub
es
test
mov
inc
mov
aad
inc
sub
es
xchg
aad
inc
sub
es
(bad)
aad
inc
sub
es
mov
into
inc
sub
es
pop
ja
stos
add
mov
loope
jl
push
scas
sub
into
fadd
es
mov
clc
push
loope
test
popa
or
popf
push
jbe
mov
das
dec
aaa
mov
aad
inc
cli
sub
inc
mov
clc
inc
fisubr
jnp
mov
daa
fld
mov
fnstenv
je
aad
push
es
inc
mov
or
sbb
xchg
loop
inc
cdq
fldcw
mov
cs
mov
adc
push
into
hlt
fld
pop
cdq
cs
rol
mov
mov
xchg
bound
inc
mov
aad
inc
sub
es
stc
aad
inc
sub
es
cmc
aad
inc
sub
es
icebp
aad
inc
sub
es
in
aad
inc
sub
es
jmp
mov
inc
mov
aad
inc
sub
es
loope
into
inc
sub
es
fst
into
inc
sub
es
(bad)
into
inc
sub
es
aad
into
inc
sub
es
rcl
into
inc
sub
es
int
into
inc
sub
es
leave
aad
inc
sub
es
(bad)
inc
sub
es
rcl
inc
sub
es
cmp
mov
inc
mov
aad
inc
sub
es
xor
mov
inc
mov
aad
inc
sub
es
sub
mov
inc
mov
aad
inc
sub
es
and
mov
inc
mov
aad
inc
sub
es
sbb
mov
inc
mov
aad
inc
sub
es
adc
mov
inc
mov
aad
inc
sub
es
or
mov
inc
mov
aad
inc
sub
es
add
mov
inc
mov
aad
inc
sub
es
jge
into
inc
sub
es
jns
into
inc
sub
es
jne
into
inc
sub
es
jno
into
inc
sub
es
ins
aad
inc
sub
es
imul
mov
es
gs
inc
sub
es
popa
aad
inc
sub
es
pop
aad
inc
sub
es
pop
aad
inc
sub
es
push
aad
inc
sub
es
push
aad
inc
sub
es
inc
aad
inc
sub
es
inc
aad
inc
sub
es
mov
mov
inc
mov
ror
inc
sub
es
mov
into
inc
sub
es
mov
into
inc
sub
es
lods
ror
inc
sub
es
test
mov
inc
mov
ror
inc
sub
es
mov
mov
inc
mov
ror
inc
sub
es
cdq
ror
inc
sub
es
xchg
ror
inc
sub
es
xchg
ror
inc
sub
es
(bad)
ror
inc
sub
es
mov
into
inc
sub
es
test
into
inc
sub
es
adc
mov
es
std
ror
inc
sub
es
stc
ror
inc
sub
es
cmc
ror
inc
sub
es
icebp
ror
inc
sub
es
in
ror
inc
sub
es
jmp
mov
inc
mov
ror
inc
sub
es
loope
into
inc
sub
es
fst
into
inc
sub
es
(bad)
into
inc
sub
es
int
into
inc
sub
es
leave
ror
inc
sub
es
(bad)
inc
sub
es
rcl
inc
sub
es
cmp
mov
inc
mov
ror
inc
sub
es
sub
mov
inc
mov
ror
inc
sub
es
and
mov
inc
mov
ror
inc
sub
es
sbb
mov
inc
mov
ror
inc
sub
es
adc
mov
inc
mov
ror
inc
sub
es
add
mov
inc
mov
ror
inc
sub
es
jge
into
inc
sub
es
jns
into
inc
sub
es
jne
into
inc
sub
es
jno
into
inc
sub
es
ins
ror
inc
sub
es
imul
mov
es
gs
inc
sub
es
popa
ror
inc
sub
es
pop
ror
inc
sub
es
pop
ror
inc
sub
es
push
ror
inc
sub
es
push
ror
inc
sub
es
dec
ror
inc
sub
es
dec
ror
inc
sub
es
inc
ror
inc
sub
es
inc
ror
inc
sub
es
